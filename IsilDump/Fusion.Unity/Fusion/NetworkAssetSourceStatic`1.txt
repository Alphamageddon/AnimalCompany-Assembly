Type: Fusion.NetworkAssetSourceStatic`1

Method: T get_Prefab()

Disassembly:
	0x02415040 LDR X8, [X8 + 0xC0]
	0x02415044 STUR X21, [X29 - 0x38]

ISIL:
	001 Move X0, [X0+16]
	002 Return X0

Method: System.Void set_Prefab(T value)

Disassembly:
	0x02415048 LDR X0, [X8 + 0x58]
	0x0241504C LDRB W8, [X0 + 0x135]

ISIL:
	001 Move [X0+16], X1
	002 Return 

Method: System.Boolean get_IsCompleted()

Disassembly:
	0x02415050 TBNZ X8, 0x0, 0x2415058
	0x02415054 BL 0x1C5C684

ISIL:
	001 Move W0, 1
	002 Return X0

Method: System.Void Acquire(System.Boolean synchronous)

Disassembly:
	0x02415058 LDR W8, [X0 + 0xFC]

ISIL:
	001 Return 

Method: System.Void Release()

Disassembly:
	0x0241505C ADD X9, X31, 0x0

ISIL:
	001 Return 

Method: T WaitForResult()

Disassembly:
	0x02415060 ADD W8, W8, 0x10
	0x02415064 ADD X8, X8, 0xF
	0x02415068 AND X8, X8, 0x1FFFFFFFF
	0x0241506C SUB X25, X9, X8
	0x02415070 ADD X31, X25, 0x0
	0x02415074 LDR X8, [X19 + 0x20]
	0x02415078 ADD X9, X8, 0x135
	0x0241507C LDRH W9, [X9]
	0x02415080 TBNZ X9, 0x0, 0x241509C
	0x02415084 MOV X0, X8
	0x02415088 BL 0x1C5C684
	0x0241508C LDR X8, [X19 + 0x20]
	0x02415090 ADD X9, X8, 0x135
	0x02415094 LDRH W9, [X9]
	0x02415098 B 0x24150A0
	0x0241509C MOV X0, X8
	0x024150A0 LDR X10, [X0 + 0xC0]
	0x024150A4 LDR X10, [X10 + 0x58]
	0x024150A8 LDR W21, [X10 + 0xFC]
	0x024150AC ADD X10, X31, 0x0
	0x024150B0 ADD X11, X21, 0xF
	0x024150B4 AND X11, X11, 0x1FFFFFFFF
	0x024150B8 SUB X22, X10, X11
	0x024150BC ADD X31, X22, 0x0
	0x024150C0 ADD X10, X31, 0x0
	0x024150C4 SUB X23, X10, X11
	0x024150C8 ADD X31, X23, 0x0
	0x024150CC LDR X28, [X20]
	0x024150D0 LDRSW X10, [X20 + 0x1C]
	0x024150D4 STUR X10, [X29 - 0x30]
	0x024150D8 TBNZ X9, 0x0, 0x24150E8
	0x024150DC MOV X0, X8
	0x024150E0 BL 0x1C5C684
	0x024150E4 MOV X8, X0
	0x024150E8 LDR X8, [X8 + 0xC0]
	0x024150EC LDR X26, [X8 + 0x58]
	0x024150F0 LDRB W8, [X26 + 0x135]
	0x024150F4 TBNZ X8, 0x0, 0x2415104
	0x024150F8 MOV X0, X26
	0x024150FC BL 0x1C5C684
	0x02415100 MOV X26, X0
	0x02415104 LDR X8, [X19 + 0x20]
	0x02415108 ADD X9, X8, 0x135
	0x0241510C LDRH W9, [X9]
	0x02415110 TBNZ X9, 0x0, 0x241512C

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x1FC5000
	007 Move X21, 0x1CDF000
	008 Move W8, [X22+2493]
	009 Move X21, [X21+1432]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x1CDF000
	017 Move X0, [X0+1432]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+2493], W8
	021 Move X0, [X21]
	022 Move X21, [X20+16]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Move X0, X21
	028 Move X1, X31
	029 Move X2, X31
	030 Call Object.op_Equality, X0, X1
	031 Move TEMP, X0
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfEqual {42}
	035 Move X0, [X20+16]
	036 Move X20, [X31+32]
	037 Move X19, [X31+40]
	038 Move X22, [X31+16]
	039 Move X21, [X31+24]
	040 Move X30, [X31+48]
	041 Return X0
	042 Move X0, 0x1CDF000
	043 Move X0, [X0+1456]
	044 Call 0x1C17D08
	045 Call 0x1C17F10
	046 Move X20, X0
	047 Move X0, 0x1D08000
	048 Move X0, [X0+3128]
	049 Call 0x1C17D08
	050 Move X1, X0
	051 Move X0, X20
	052 Move X2, X31
	053 Call InvalidOperationException..ctor, X0, X1
	054 Move X0, X20
	055 Move X1, X19
	056 Call 0x1C17DEC

Method: System.String get_Description()

Disassembly:
	0x02415114 MOV X0, X8
	0x02415118 BL 0x1C5C684
	0x0241511C LDR X8, [X19 + 0x20]
	0x02415120 ADD X9, X8, 0x135
	0x02415124 LDRH W9, [X9]
	0x02415128 B 0x2415130
	0x0241512C MOV X0, X8
	0x02415130 LDR X10, [X0 + 0xC0]
	0x02415134 LDR X27, [X10 + 0x88]
	0x02415138 TBNZ X9, 0x0, 0x2415148
	0x0241513C MOV X0, X8
	0x02415140 BL 0x1C5C684
	0x02415144 MOV X8, X0
	0x02415148 LDR X8, [X8 + 0xC0]
	0x0241514C SUB X5, X29, 0x20
	0x02415150 MOV X0, X26
	0x02415154 MOV X1, X27
	0x02415158 LDR X8, [X8 + 0x58]
	0x0241515C MOV X2, X25
	0x02415160 MOV X4, X31
	0x02415164 LDR W8, [X8 + 0x28]
	0x02415168 CMP W8, 0x0
	0x0241516C SUB X8, X29, 0x28
	0x02415170 CSEL X3, X24, X8, LT
	0x02415174 BL 0x1C17728
	0x02415178 LDR X8, [X19 + 0x20]
	0x0241517C LDUR W24, [X29 - 0x20]
	0x02415180 ADD X9, X8, 0x135
	0x02415184 LDRH W9, [X9]
	0x02415188 TBNZ X9, 0x0, 0x24151A4
	0x0241518C MOV X0, X8
	0x02415190 BL 0x1C5C684
	0x02415194 LDR X8, [X19 + 0x20]
	0x02415198 ADD X9, X8, 0x135
	0x0241519C LDRH W9, [X9]
	0x024151A0 B 0x24151A8
	0x024151A4 MOV X0, X8
	0x024151A8 LDR X10, [X0 + 0xC0]
	0x024151AC LDUR X26, [X29 - 0x30]
	0x024151B0 LDR X10, [X10 + 0x90]
	0x024151B4 LDR X25, [X10]
	0x024151B8 TBNZ X9, 0x0, 0x24151C8
	0x024151BC MOV X0, X8
	0x024151C0 BL 0x1C5C684
	0x024151C4 MOV X8, X0
	0x024151C8 LDR X8, [X8 + 0xC0]
	0x024151CC MOV X0, X20
	0x024151D0 MOV W1, W24
	0x024151D4 LDR X2, [X8 + 0x90]
	0x024151D8 BLR X25

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1FC5000
	006 Move X20, 0x1CDF000
	007 Move W8, [X21+2494]
	008 Move X20, [X20+1432]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {25}
	014 Move X0, 0x1CDF000
	015 Move X0, [X0+1432]
	016 Call 0x1C17CF4
	017 Move X0, 0x1D08000
	018 Move X0, [X0+3136]
	019 Call 0x1C17CF4
	020 Move X0, 0x1D08000
	021 Move X0, [X0+3152]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+2494], W8
	025 Move X0, [X20]
	026 Move X20, [X19+16]
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X0, X20
	032 Move X1, X31
	033 Call Object.op_Implicit, X0
	034 Move TEMP, X0
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfNotEqual {49}
	038 Move X8, 0x1D08000
	039 Move X0, [X19+16]
	040 Move X8, [X8+3136]
	041 Move X19, [X8]
	042 Compare X0, 0
	043 JumpIfEqual {57}
	044 Move X8, [X0]
	045 Move X9, [X8+360]
	046 Move X1, [X8+368]
	047 NotImplemented "Instruction BLR not yet implemented."
	048 Move X1, X0
	049 Move X8, 0x1D08000
	050 Move X8, [X8+3152]
	051 Move X20, [X31+16]
	052 Move X19, [X31+24]
	053 Move X0, [X8]
	054 Move X30, [X31+32]
	055 Move X21, [X31+40]
	056 Return X0
	057 Move X1, X31
	058 Move X0, X19
	059 Move X20, [X31+16]
	060 Move X19, [X31+24]
	061 Move X2, X31
	062 Move X30, [X31+32]
	063 Move X21, [X31+40]
	064 Call String.Concat, X0, X1
	065 Return X0

Method: System.Void .ctor()

Disassembly:
	0x024151DC ADD X8, X26, W0, UXTW
	0x024151E0 LDR W24, [X28, X8, LSL #2]

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

