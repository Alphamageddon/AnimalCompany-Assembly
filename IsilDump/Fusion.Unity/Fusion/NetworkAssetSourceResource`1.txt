Type: Fusion.NetworkAssetSourceResource`1

Method: System.Void Acquire(System.Boolean synchronous)

Disassembly:
	0x02414434 MOV W20, W1
	0x02414438 MOV X21, X0
	0x0241443C LDRB W9, [X8 + 0x135]
	0x02414440 TBNZ X9, 0x0, 0x2414450
	0x02414444 MOV X0, X8
	0x02414448 BL 0x1C5C684
	0x0241444C MOV X8, X0
	0x02414450 LDR X8, [X8 + 0xC0]
	0x02414454 ADD X2, X31, 0xC
	0x02414458 MOV X0, X21
	0x0241445C MOV W1, W20
	0x02414460 LDR X3, [X8 + 0x60]
	0x02414464 BL 0x24144A8
	0x02414468 TBZ X0, 0x0, 0x2414480
	0x0241446C LDR V0, [X31 + 0xC]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move W8, [X0+40]
	004 Move X19, X0
	005 Compare W8, 0
	006 JumpIfNotEqual {14}
	007 Move X8, [X2+32]
	008 And W1, W1, 1
	009 Move X0, X19
	010 Move X8, [X8+192]
	011 Move X2, [X8+8]
	012 Call 0x2414A44, X0, X1
	013 Move W8, [X19+40]
	014 Add W8, W8, 1
	015 Move [X19+40], W8
	016 Move X30, [X31+16]
	017 Move X19, [X31+24]
	018 Return 

Method: System.Void Release()

Disassembly:
	0x02414470 LDP X20, X19, [X31 + 0x20]
	0x02414474 LDP X30, X21, [X31 + 0x10]
	0x02414478 ADD X31, X31, 0x30
	0x0241447C RET
	0x02414480 ADRP X0, 0x1CE2000
	0x02414484 LDR X0, [X0 + 0x78]
	0x02414488 BL 0x1C16D08
	0x0241448C BL 0x1C16F10
	0x02414490 MOV X1, X31
	0x02414494 MOV X20, X0
	0x02414498 BL 0x335DBAC
	0x0241449C MOV X0, X20
	0x024144A0 MOV X1, X19
	0x024144A4 BL 0x1C16DEC
	0x024144A8 STR X30, [X31 - 0x30]!
	0x024144AC STP X22, X21, [X31 + 0x10]
	0x024144B0 STP X20, X19, [X31 + 0x20]
	0x024144B4 LDR X8, [X3 + 0x20]
	0x024144B8 MOV X22, X3
	0x024144BC MOV X19, X2
	0x024144C0 MOV W21, W1
	0x024144C4 LDRB W9, [X8 + 0x135]
	0x024144C8 MOV X20, X0
	0x024144CC TBNZ X9, 0x0, 0x24144DC
	0x024144D0 MOV X0, X8
	0x024144D4 BL 0x1C5C684
	0x024144D8 MOV X8, X0
	0x024144DC LDR X8, [X8 + 0xC0]
	0x024144E0 MOV X0, X20
	0x024144E4 MOV W1, W21
	0x024144E8 LDR X2, [X8 + 0x78]
	0x024144EC BL 0x2414540
	0x024144F0 MOV W21, W0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W8, [X0+40]
	005 NotImplemented "Instruction CMP not yet implemented."
	006 Subtract W8, W8, 1
	007 Move [X0+40], W8
	008 Move X20, [X31+16]
	009 Move X19, [X31+24]
	010 Move X30, [X31+32]
	011 Return 
	012 Move X8, [X1+32]
	013 Move X20, [X31+16]
	014 Move X19, [X31+24]
	015 Move X8, [X8+192]
	016 Move X1, [X8+16]
	017 Move X30, [X31+32]
	018 Call 0x2414BEC, X0
	019 Return 
	020 Move X0, 0x1CE0000
	021 Move X0, [X0+2000]
	022 Move X19, X1
	023 Call 0x1C17D08
	024 Call 0x1C17F10
	025 Move X20, X0
	026 Move X0, 0x1D09000
	027 Move X0, [X0+3072]
	028 Call 0x1C17D08
	029 Move X1, X0
	030 Move X0, X20
	031 Move X2, X31
	032 Call Exception..ctor, X0, X1
	033 Move X0, X20
	034 Move X1, X19
	035 Call 0x1C17DEC

Method: System.Boolean get_IsCompleted()

Disassembly:
	0x024144F4 CBZ W0, 0x2414524
	0x024144F8 LDR X0, [X22 + 0x20]
	0x024144FC LDRB W8, [X0 + 0x135]
	0x02414500 TBNZ X8, 0x0, 0x2414508
	0x02414504 BL 0x1C5C684
	0x02414508 LDR X8, [X0 + 0xC0]
	0x0241450C MOV X0, X20
	0x02414510 MOV W1, W21
	0x02414514 LDR X2, [X8 + 0x80]
	0x02414518 BL 0x242EB28
	0x0241451C STR S0, [X19]
	0x02414520 B 0x2414528
	0x02414524 STR W31, [X19]
	0x02414528 CMP W21, 0x0
	0x0241452C LDP X20, X19, [X31 + 0x20]
	0x02414530 LDP X22, X21, [X31 + 0x10]
	0x02414534 CSET W0, NE
	0x02414538 LDR X30, [X31], #0x30
	0x0241453C RET
	0x02414540 SUB X31, X31, 0x40
	0x02414544 STP X30, X23, [X31 + 0x10]
	0x02414548 STP X22, X21, [X31 + 0x20]
	0x0241454C STP X20, X19, [X31 + 0x30]
	0x02414550 STR W1, [X31 + 0xC]
	0x02414554 MOV X20, X0
	0x02414558 LDR X0, [X2 + 0x20]
	0x0241455C LDR X22, [X20]
	0x02414560 LDRSW X23, [X20 + 0x1C]
	0x02414564 MOV X19, X2
	0x02414568 LDRB W8, [X0 + 0x135]
	0x0241456C TBNZ X8, 0x0, 0x2414574
	0x02414570 BL 0x1C5C684
	0x02414574 LDR X8, [X0 + 0xC0]
	0x02414578 ADD X0, X31, 0xC
	0x0241457C LDR X1, [X8 + 0x88]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x1FC6000
	005 Move W8, [X20+2485]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x1D09000
	012 Move X0, [X0+3080]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2485], W8
	016 Move X0, [X19+32]
	017 Compare X0, 0
	018 JumpIfEqual {37}
	019 Move X8, 0x1D09000
	020 Move X8, [X8+3080]
	021 Move X9, [X0]
	022 Move X8, [X8]
	023 Move W11, [X9+304]
	024 Move W10, [X8+304]
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move X9, [X9+200]
	027 Add X9, X9, X10
	028 NotImplemented "Instruction LDUR not yet implemented."
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move X1, X31
	031 Call AsyncOperation.get_isDone, X0
	032 Move TEMP, X0
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfNotEqual {41}
	036 Move W0, 1
	037 Move X20, [X31+16]
	038 Move X19, [X31+24]
	039 Move X30, [X31+32]
	040 Return X0
	041 Move W0, W31

Method: T WaitForResult()

Disassembly:
	0x02414580 BL 0x3399AF8
	0x02414584 LDR X8, [X19 + 0x20]
	0x02414588 MOV W21, W0
	0x0241458C LDRB W9, [X8 + 0x135]
	0x02414590 TBNZ X9, 0x0, 0x241459C
	0x02414594 MOV X0, X8
	0x02414598 BL 0x1C5C684
	0x0241459C LDR W8, [X20 + 0x8]
	0x024145A0 UDIV W9, W21, W8
	0x024145A4 MSUB W8, W9, W8, W21
	0x024145A8 ADD X8, X8, X23
	0x024145AC LDR W21, [X22, X8, LSL #2]
	0x024145B0 CBZ W21, 0x241462C
	0x024145B4 LDR X0, [X19 + 0x20]
	0x024145B8 LDR X22, [X20 + 0x38]
	0x024145BC LDRB W8, [X0 + 0x135]
	0x024145C0 TBNZ X8, 0x0, 0x24145C8
	0x024145C4 BL 0x1C5C684
	0x024145C8 LDR X8, [X0 + 0xC0]
	0x024145CC MOV X0, X20
	0x024145D0 MOV W1, W21
	0x024145D4 LDR X2, [X8 + 0x98]
	0x024145D8 BL 0x242EBF8
	0x024145DC CBZ X22, 0x2414644
	0x024145E0 LDR X8, [X22]
	0x024145E4 LDR W2, [X31 + 0xC]
	0x024145E8 MOV W1, W0
	0x024145EC MOV X0, X22
	0x024145F0 LDP X9, X3, [X8 + 0x1B8]
	0x024145F4 BLR X9
	0x024145F8 TBNZ X0, 0x0, 0x241462C
	0x024145FC LDR X0, [X19 + 0x20]
	0x02414600 LDRB W8, [X0 + 0x135]
	0x02414604 TBNZ X8, 0x0, 0x241460C
	0x02414608 BL 0x1C5C684
	0x0241460C LDR W8, [X20 + 0x18]
	0x02414610 LDR W9, [X20 + 0xC]
	0x02414614 LDRSW X10, [X20 + 0x20]
	0x02414618 LDR X11, [X20]
	0x0241461C MADD W8, W8, W21, W9
	0x02414620 ADD X8, X10, W8, SXTW
	0x02414624 LDR W21, [X11, X8, LSL #2]
	0x02414628 CBNZ W21, 0x24145B4
	0x0241462C MOV W0, W21
	0x02414630 LDP X20, X19, [X31 + 0x30]
	0x02414634 LDP X22, X21, [X31 + 0x20]
	0x02414638 LDP X30, X23, [X31 + 0x10]
	0x0241463C ADD X31, X31, 0x40
	0x02414640 RET
	0x02414644 BL 0x1C16F20
	0x02414648 LDR W8, [X0 + 0x8]
	0x0241464C UDIV W9, W1, W8
	0x02414650 MSUB W0, W9, W8, W1
	0x02414654 RET
	0x02414658 STR X30, [X31 - 0x40]!
	0x0241465C STP X24, X23, [X31 + 0x10]
	0x02414660 STP X22, X21, [X31 + 0x20]
	0x02414664 STP X20, X19, [X31 + 0x30]
	0x02414668 LDR X19, [X0 + 0x28]
	0x0241466C CBZ X19, 0x2414728
	0x02414670 MOV X8, X0
	0x02414674 LDR X0, [X2 + 0x20]
	0x02414678 LDR X21, [X8]
	0x0241467C LDRSW X22, [X8 + 0x20]
	0x02414680 LDR W23, [X8 + 0x18]
	0x02414684 LDRB W9, [X0 + 0x135]
	0x02414688 LDR W24, [X8 + 0x10]
	0x0241468C MOV W20, W1
	0x02414690 TBNZ X9, 0x0, 0x2414698
	0x02414694 BL 0x1C5C684
	0x02414698 LDR X8, [X0 + 0xC0]
	0x0241469C LDR X1, [X8 + 0x20]
	0x024146A0 LDRB W8, [X1 + 0x135]
	0x024146A4 TBNZ X8, 0x0, 0x24146B4
	0x024146A8 MOV X0, X1
	0x024146AC BL 0x1C5C684
	0x024146B0 MOV X1, X0
	0x024146B4 LDR X8, [X19]
	0x024146B8 LDRH W9, [X8 + 0x12E]
	0x024146BC CBZ X9, 0x24146E0
	0x024146C0 LDR X10, [X8 + 0xB0]
	0x024146C4 ADD X10, X10, 0x8
	0x024146C8 LDUR X11, [X10 - 0x8]
	0x024146CC CMP X11, X1
	0x024146D0 B.EQ 0x24146F0
	0x024146D4 SUBS X9, X9, 0x1
	0x024146D8 ADD X10, X10, 0x10
	0x024146DC B.NE 0x24146C8
	0x024146E0 MOV X0, X19
	0x024146E4 MOV W2, W31
	0x024146E8 BL 0x1C5C788
	0x024146EC B 0x24146FC
	0x024146F0 LDRSW X9, [X10]
	0x024146F4 ADD X8, X8, X9, 0x4, LSL
	0x024146F8 ADD X0, X8, 0x138
	0x024146FC MADD W8, W23, W20, W24
	0x02414700 ADD X8, X22, W8, SXTW
	0x02414704 LDP X4, X3, [X0]
	0x02414708 ADD X1, X21, X8, 0x2, LSL
	0x0241470C MOV X0, X19
	0x02414710 LDP X20, X19, [X31 + 0x30]
	0x02414714 LDP X22, X21, [X31 + 0x20]
	0x02414718 LDP X24, X23, [X31 + 0x10]
	0x0241471C MOV W2, W31
	0x02414720 LDR X30, [X31], #0x40
	0x02414724 BR X4
	0x02414728 BL 0x1C16F20
	0x0241472C STR X30, [X31 - 0x40]!
	0x02414730 STP X24, X23, [X31 + 0x10]
	0x02414734 STP X22, X21, [X31 + 0x20]
	0x02414738 STP X20, X19, [X31 + 0x30]
	0x0241473C LDR X19, [X0 + 0x30]
	0x02414740 CBZ X19, 0x24147F8
	0x02414744 MOV X8, X0
	0x02414748 LDR X0, [X2 + 0x20]
	0x0241474C LDR X21, [X8]
	0x02414750 LDRSW X22, [X8 + 0x20]
	0x02414754 LDP W24, W23, [X8 + 0x14]
	0x02414758 LDRB W9, [X0 + 0x135]
	0x0241475C MOV W20, W1
	0x02414760 TBNZ X9, 0x0, 0x2414768
	0x02414764 BL 0x1C5C684
	0x02414768 LDR X8, [X0 + 0xC0]
	0x0241476C LDR X1, [X8 + 0x30]
	0x02414770 LDRB W8, [X1 + 0x135]
	0x02414774 TBNZ X8, 0x0, 0x2414784
	0x02414778 MOV X0, X1
	0x0241477C BL 0x1C5C684
	0x02414780 MOV X1, X0
	0x02414784 LDR X8, [X19]
	0x02414788 LDRH W9, [X8 + 0x12E]
	0x0241478C CBZ X9, 0x24147B0
	0x02414790 LDR X10, [X8 + 0xB0]
	0x02414794 ADD X10, X10, 0x8
	0x02414798 LDUR X11, [X10 - 0x8]
	0x0241479C CMP X11, X1
	0x024147A0 B.EQ 0x24147C0
	0x024147A4 SUBS X9, X9, 0x1
	0x024147A8 ADD X10, X10, 0x10
	0x024147AC B.NE 0x2414798
	0x024147B0 MOV X0, X19
	0x024147B4 MOV W2, W31
	0x024147B8 BL 0x1C5C788
	0x024147BC B 0x24147CC
	0x024147C0 LDRSW X9, [X10]
	0x024147C4 ADD X8, X8, X9, 0x4, LSL
	0x024147C8 ADD X0, X8, 0x138
	0x024147CC MADD W8, W23, W20, W24

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x1FC6000
	007 Move W8, [X21+2486]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x1D09000
	015 Move X0, [X0+3080]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2486], W8
	019 Move X21, [X20+32]
	020 Compare X21, 0
	021 JumpIfEqual {94}
	022 Move X8, 0x1D09000
	023 Move X8, [X8+3080]
	024 Move X9, [X21]
	025 Move X8, [X8]
	026 Move W11, [X9+304]
	027 Move W10, [X8+304]
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Move X9, [X9+200]
	030 Add X9, X9, X10
	031 NotImplemented "Instruction LDUR not yet implemented."
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move X0, X21
	034 Move X1, X31
	035 Call AsyncOperation.get_isDone, X0
	036 Move TEMP, X0
	037 And TEMP, TEMP, 1
	038 Compare TEMP, 1
	039 JumpIfNotEqual {46}
	040 Move X8, [X19+32]
	041 Move X0, X20
	042 Move X1, X21
	043 Move X8, [X8+192]
	044 Move X2, [X8+24]
	045 Call 0x24147D0, X0, X1
	046 Move [X20+32], X31
	047 Move X8, [X19+32]
	048 Move W1, 1
	049 Move X0, X20
	050 Move X8, [X8+192]
	051 Move X2, [X8+8]
	052 Call 0x2414A44, X0, X1
	053 Move X21, [X20+32]
	054 Compare X21, 0
	055 JumpIfEqual {94}
	056 Move X8, [X19+32]
	057 Move X8, [X8+192]
	058 Move X1, [X8+40]
	059 Move W8, [X1+309]
	060 Move TEMP, X8
	061 And TEMP, TEMP, 1
	062 Compare TEMP, 1
	063 JumpIfEqual {67}
	064 Move X0, X1
	065 Call 0x1C5D684
	066 Move X1, X0
	067 Move X0, X21
	068 Call 0x1C17E00
	069 Move X8, [X19+32]
	070 Move X22, X0
	071 Move X8, [X8+192]
	072 Move X21, [X8+40]
	073 Move W8, [X21+309]
	074 Move TEMP, X8
	075 And TEMP, TEMP, 1
	076 Compare TEMP, 1
	077 JumpIfEqual {81}
	078 Move X0, X21
	079 Call 0x1C5D684
	080 Move X21, X0
	081 Compare X22, 0
	082 JumpIfEqual {109}
	083 Move X0, X22
	084 Move X1, X21
	085 Call 0x1C17E00
	086 Compare X0, 0
	087 JumpIfEqual {130}
	088 Move X20, [X31+32]
	089 Move X19, [X31+40]
	090 Move X22, [X31+16]
	091 Move X21, [X31+24]
	092 Move X30, [X31+48]
	093 Return X0
	094 Move X8, [X19+32]
	095 Move X0, 0x1CE0000
	096 Move X8, [X8+192]
	097 Move X21, [X8+32]
	098 Move X0, [X0+1728]
	099 Call 0x1C17D08
	100 Call 0x19913D0
	101 Move X0, X21
	102 Move X1, X31
	103 Call Type.GetTypeFromHandle, X0
	104 Move X22, X0
	105 Move X0, 0x1D09000
	106 Move X21, [X20+16]
	107 Move X20, [X20+24]
	108 Move X0, [X0+3088]
	109 Move X0, 0x1CE8000
	110 Move X21, [X20+32]
	111 Move X0, [X0+1464]
	112 Call 0x1C17D08
	113 Compare X21, 0
	114 JumpIfEqual {133}
	115 Move X8, [X21]
	116 NotImplemented "Instruction CMP not yet implemented."
	117 Move X0, X21
	118 Call 0x19913C0
	119 Move X0, X21
	120 Move X1, X31
	121 Call ExceptionDispatchInfo.Throw, X0
	122 Move X0, 0x1CE0000
	123 Move X0, [X0+2880]
	124 Call 0x1C17D08
	125 Call 0x1C17F10
	126 Move X1, X31
	127 Move X20, X0
	128 Call NotSupportedException..ctor, X0
	129 Move X0, X20
	130 Move X0, X22
	131 Move X1, X21
	132 Call 0x1C181E0
	133 Move X8, [X19+32]
	134 Move X0, 0x1CE0000
	135 Move X8, [X8+192]
	136 Move X21, [X8+32]
	137 Move X0, [X0+1728]
	138 Call 0x1C17D08
	139 Call 0x19913D0
	140 Move X0, X21
	141 Move X1, X31
	142 Call Type.GetTypeFromHandle, X0
	143 Move X22, X0
	144 Move X0, 0x1D09000
	145 Move X21, [X20+16]
	146 Move X20, [X20+24]
	147 Move X0, [X0+3096]
	148 Call 0x1C17D08
	149 Move X1, X22
	150 Move X2, X21
	151 Move X3, X20
	152 Move X4, X31
	153 Call String.Format, X0, X1, X2, X3
	154 Move X20, X0
	155 Move X0, 0x1CE0000
	156 Move X0, [X0+1456]
	157 Call 0x1C17D08
	158 Call 0x1C17F10
	159 Move X1, X20
	160 Move X2, X31
	161 Move X21, X0
	162 Call InvalidOperationException..ctor, X0, X1
	163 Move X0, X21
	164 Move X1, X19
	165 Call 0x1C17DEC

Method: System.Void FinishAsyncOp(UnityEngine.ResourceRequest asyncOp)

Disassembly:
	0x024147D0 ADD X8, X22, W8, SXTW
	0x024147D4 LDP X4, X3, [X0]
	0x024147D8 ADD X1, X21, X8, 0x2, LSL
	0x024147DC MOV X0, X19
	0x024147E0 LDP X20, X19, [X31 + 0x30]
	0x024147E4 LDP X22, X21, [X31 + 0x20]
	0x024147E8 LDP X24, X23, [X31 + 0x10]
	0x024147EC MOV W2, W31
	0x024147F0 LDR X30, [X31], #0x40
	0x024147F4 BR X4
	0x024147F8 BL 0x1C16F20
	0x024147FC LDR W8, [X0 + 0x18]
	0x02414800 LDR W9, [X0 + 0xC]
	0x02414804 LDRSW X10, [X0 + 0x20]
	0x02414808 LDR X11, [X0]
	0x0241480C MADD W8, W8, W1, W9
	0x02414810 ADD X8, X10, W8, SXTW
	0x02414814 LDR W0, [X11, X8, LSL #2]
	0x02414818 RET
	0x0241481C LDR X8, [X0]
	0x02414820 LDR W0, [X8]
	0x02414824 RET
	0x02414828 LDR X8, [X0]
	0x0241482C LDR W0, [X8 + 0x4]
	0x02414830 RET
	0x02414834 LDR X8, [X0]
	0x02414838 LDR W0, [X8 + 0x8]
	0x0241483C RET
	0x02414840 STP X30, X21, [X31 - 0x20]!
	0x02414844 STP X20, X19, [X31 + 0x10]
	0x02414848 LDR X8, [X1 + 0x20]
	0x0241484C MOV X20, X1
	0x02414850 MOV X19, X0
	0x02414854 ADD X9, X8, 0x135
	0x02414858 LDRH W9, [X9]
	0x0241485C TBNZ X9, 0x0, 0x2414878
	0x02414860 MOV X0, X8
	0x02414864 BL 0x1C5C684
	0x02414868 LDR X8, [X20 + 0x20]
	0x0241486C ADD X9, X8, 0x135
	0x02414870 LDRH W9, [X9]
	0x02414874 B 0x241487C
	0x02414878 MOV X0, X8
	0x0241487C LDR X10, [X0 + 0xC0]
	0x02414880 LDR X10, [X10 + 0x8]
	0x02414884 LDR X21, [X10]
	0x02414888 TBNZ X9, 0x0, 0x2414898
	0x0241488C MOV X0, X8
	0x02414890 BL 0x1C5C684
	0x02414894 MOV X8, X0
	0x02414898 LDR X8, [X8 + 0xC0]
	0x0241489C MOV X0, X19
	0x024148A0 LDR X1, [X8 + 0x8]
	0x024148A4 BLR X21
	0x024148A8 LDR X8, [X20 + 0x20]
	0x024148AC MOV W21, W0
	0x024148B0 ADD X9, X8, 0x135
	0x024148B4 LDRH W9, [X9]
	0x024148B8 TBNZ X9, 0x0, 0x24148D4
	0x024148BC MOV X0, X8
	0x024148C0 BL 0x1C5C684
	0x024148C4 LDR X8, [X20 + 0x20]
	0x024148C8 ADD X9, X8, 0x135
	0x024148CC LDRH W9, [X9]
	0x024148D0 B 0x24148D8
	0x024148D4 MOV X0, X8
	0x024148D8 LDR X10, [X0 + 0xC0]
	0x024148DC LDR X10, [X10 + 0x18]
	0x024148E0 LDR X20, [X10]
	0x024148E4 TBNZ X9, 0x0, 0x24148F4
	0x024148E8 MOV X0, X8
	0x024148EC BL 0x1C5C684
	0x024148F0 MOV X8, X0
	0x024148F4 LDR X8, [X8 + 0xC0]
	0x024148F8 MOV X0, X19
	0x024148FC LDR X1, [X8 + 0x18]
	0x02414900 BLR X20
	0x02414904 LDP X20, X19, [X31 + 0x10]
	0x02414908 ORN W8, W31, W0, 0x0
	0x0241490C ADD W0, W21, W8
	0x02414910 LDP X30, X21, [X31], #0x20
	0x02414914 RET
	0x02414918 LDR W8, [X0 + 0x8]
	0x0241491C SUB W0, W8, 0x1
	0x02414920 RET
	0x02414924 STP X30, X25, [X31 - 0x40]!
	0x02414928 STP X24, X23, [X31 + 0x10]
	0x0241492C STP X22, X21, [X31 + 0x20]
	0x02414930 STP X20, X19, [X31 + 0x30]
	0x02414934 CBZ X3, 0x2414AFC
	0x02414938 MOV X19, X0
	0x0241493C LDR X0, [X5 + 0x20]
	0x02414940 MOV X20, X5
	0x02414944 MOV X22, X4
	0x02414948 MOV X24, X3
	0x0241494C LDRB W8, [X0 + 0x135]
	0x02414950 MOV W21, W2
	0x02414954 MOV X23, X1
	0x02414958 TBNZ X8, 0x0, 0x2414960
	0x0241495C BL 0x1C5C684
	0x02414960 LDR X8, [X0 + 0xC0]
	0x02414964 LDR X1, [X8 + 0x20]
	0x02414968 LDRB W8, [X1 + 0x135]
	0x0241496C TBNZ X8, 0x0, 0x241497C
	0x02414970 MOV X0, X1
	0x02414974 BL 0x1C5C684
	0x02414978 MOV X1, X0
	0x0241497C LDR X8, [X24]
	0x02414980 LDRH W9, [X8 + 0x12E]
	0x02414984 CBZ X9, 0x24149A8
	0x02414988 LDR X10, [X8 + 0xB0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x1FC6000
	008 Move W8, [X22+2487]
	009 Move X20, X2
	010 Move X21, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x1CE0000
	017 Move X0, [X0+1432]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+2487], W8
	021 Move X0, [X19+24]
	022 Move X1, X31
	023 Call String.IsNullOrEmpty, X0
	024 Move TEMP, X0
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfNotEqual {33}
	028 Compare X21, 0
	029 JumpIfEqual {89}
	030 Move X0, X21
	031 Move X1, X31
	032 Call ResourceRequest.get_asset, X0
	033 Move X8, [X20+32]
	034 Move X0, [X19+16]
	035 Move X1, [X19+24]
	036 Move X8, [X8+192]
	037 Move X2, [X8+48]
	038 Call 0x241498C, X0, X1
	039 Move X8, 0x1CE0000
	040 Move X8, [X8+1432]
	041 Move X21, X0
	042 Move X0, [X8]
	043 Move W8, [X0+224]
	044 Compare W8, 0
	045 JumpIfNotEqual {47}
	046 Call 0x1C17DFC
	047 Move X0, X21
	048 Move X1, X31
	049 Call Object.op_Implicit, X0
	050 Move TEMP, X0
	051 And TEMP, TEMP, 1
	052 Compare TEMP, 1
	053 JumpIfNotEqual {62}
	054 Move [X19+32], X21
	055 Move X20, [X31+32]
	056 Move X19, [X31+40]
	057 Move X22, [X31+16]
	058 Move X21, [X31+24]
	059 Move X30, [X31+48]
	060 Move X23, [X31+56]
	061 Return 
	062 Move X22, [X19+16]
	063 Move X21, [X19+24]
	064 Move X0, 0x1D09000
	065 Move X0, [X0+3104]
	066 Call 0x1C17D08
	067 Move X23, X0
	068 Move X0, 0x1D09000
	069 Move X0, [X0+3112]
	070 Call 0x1C17D08
	071 Move X2, X0
	072 Move X0, X23
	073 Move X1, X22
	074 Move X3, X21
	075 Move X4, X31
	076 Call String.Concat, X0, X1, X2, X3
	077 Move X21, X0
	078 Move X0, 0x1CE0000
	079 Move X0, [X0+1456]
	080 Call 0x1C17D08
	081 Call 0x1C17F10
	082 Move X22, X0
	083 Move X1, X21
	084 Move X2, X31
	085 Call InvalidOperationException..ctor, X0, X1
	086 Move X0, X22
	087 Move X1, X20
	088 Call 0x1C17DEC
	089 Call 0x1C17F20
	090 Move X20, X0
	091 NotImplemented "Instruction CMP not yet implemented."
	092 Move X0, X20
	093 Call 0x3EB2AD0
	094 Move X20, X0
	095 Move X0, 0x1CE0000
	096 Move X0, [X0+2000]
	097 Call 0x1C17D08
	098 Move X8, [X20]
	099 Move X1, [X8]
	100 Call 0x1C18270
	101 Move TEMP, X0
	102 And TEMP, TEMP, 1
	103 Compare TEMP, 1
	104 JumpIfNotEqual {111}
	105 Move X20, [X20]
	106 Call 0x3EB2AE0
	107 Move X0, X20
	108 Move X1, X31
	109 Call ExceptionDispatchInfo.Capture, X0
	110 Move X21, X0
	111 Move W0, 8
	112 Call 0x3EB2AF0
	113 Move X8, [X20]
	114 Move [X0], X8
	115 Move X1, 0x1AA1000
	116 Add X1, X1, 3672
	117 Move X2, X31
	118 Call 0x3EB2B00
	119 Move X20, X0
	120 Call 0x3EB2AE0
	121 Move X0, X20
	122 Call 0x1D2D690
	123 Call 0x1991590

Method: T LoadNamedResource(System.String resoucePath, System.String subObjectName)

Disassembly:
	0x0241498C ADD X10, X10, 0x8
	0x02414990 LDUR X11, [X10 - 0x8]
	0x02414994 CMP X11, X1
	0x02414998 B.EQ 0x24149B8
	0x0241499C SUBS X9, X9, 0x1
	0x024149A0 ADD X10, X10, 0x10
	0x024149A4 B.NE 0x2414990
	0x024149A8 MOVZ W2, 0x2
	0x024149AC MOV X0, X24
	0x024149B0 BL 0x1C5C788
	0x024149B4 B 0x24149C8
	0x024149B8 LDR W9, [X10]
	0x024149BC ADD W9, W9, 0x2
	0x024149C0 ADD X8, X8, W9, 0x4, SXTW
	0x024149C4 ADD X0, X8, 0x138
	0x024149C8 LDP X8, X1, [X0]
	0x024149CC MOV X0, X24
	0x024149D0 BLR X8
	0x024149D4 CBZ X22, 0x2414AFC
	0x024149D8 MOV W25, W0
	0x024149DC LDR X0, [X20 + 0x20]
	0x024149E0 LDRB W8, [X0 + 0x135]
	0x024149E4 TBNZ X8, 0x0, 0x24149EC
	0x024149E8 BL 0x1C5C684
	0x024149EC LDR X8, [X0 + 0xC0]
	0x024149F0 LDR X1, [X8 + 0x30]
	0x024149F4 LDRB W8, [X1 + 0x135]
	0x024149F8 TBNZ X8, 0x0, 0x2414A08
	0x024149FC MOV X0, X1
	0x02414A00 BL 0x1C5C684
	0x02414A04 MOV X1, X0
	0x02414A08 LDR X8, [X22]
	0x02414A0C LDRH W9, [X8 + 0x12E]
	0x02414A10 CBZ X9, 0x2414A34
	0x02414A14 LDR X10, [X8 + 0xB0]
	0x02414A18 ADD X10, X10, 0x8
	0x02414A1C LDUR X11, [X10 - 0x8]
	0x02414A20 CMP X11, X1
	0x02414A24 B.EQ 0x2414A44
	0x02414A28 SUBS X9, X9, 0x1
	0x02414A2C ADD X10, X10, 0x10
	0x02414A30 B.NE 0x2414A1C
	0x02414A34 MOVZ W2, 0x2
	0x02414A38 MOV X0, X22
	0x02414A3C BL 0x1C5C788
	0x02414A40 B 0x2414A54

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X2+32]
	007 Move X19, X1
	008 Move X20, X0
	009 Move W9, [X8+309]
	010 Move TEMP, X9
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {17}
	014 Move X0, X8
	015 Call 0x1C5D684
	016 Move X8, X0
	017 Move X8, [X8+192]
	018 Move X0, X20
	019 Move X1, [X8+64]
	020 Call 0x2243078, X0
	021 Compare X0, 0
	022 JumpIfEqual {55}
	023 Move W8, [X0+24]
	024 Move X20, X0
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move W22, W31
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Add X8, X20, W22
	029 Move X21, [X8+32]
	030 Compare X21, 0
	031 JumpIfEqual {55}
	032 Move X0, X21
	033 Move X1, X31
	034 Call Object.get_name, X0
	035 Move W2, 4
	036 Move X1, X19
	037 Move X3, X31
	038 Call String.Equals, X0, X1, X2
	039 Move TEMP, X0
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfEqual {47}
	043 Move W8, [X20+24]
	044 Add W22, W22, 1
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Move X21, X31
	047 Move X0, X21
	048 Move X20, [X31+32]
	049 Move X19, [X31+40]
	050 Move X22, [X31+16]
	051 Move X21, [X31+24]
	052 Move X30, [X31+48]
	053 Return X0
	054 Call 0x1C17F28
	055 Call 0x1C17F20

Method: System.Void LoadInternal(System.Boolean synchronous)

Disassembly:
	0x02414A44 LDR W9, [X10]
	0x02414A48 ADD W9, W9, 0x2
	0x02414A4C ADD X8, X8, W9, 0x4, SXTW
	0x02414A50 ADD X0, X8, 0x138
	0x02414A54 LDP X8, X1, [X0]
	0x02414A58 MOV X0, X22
	0x02414A5C BLR X8
	0x02414A60 ADRP X8, 0xFFFFFFFFFE6D9000
	0x02414A64 LDR V0, [X8 + 0x640]
	0x02414A68 ADD W9, W25, 0x1
	0x02414A6C MOVZ W10, 0x3
	0x02414A70 ADD W11, W21, 0x3
	0x02414A74 ADD W8, W0, W9
	0x02414A78 STP X24, X22, [X19 + 0x28]
	0x02414A7C STR X23, [X19]
	0x02414A80 STR W21, [X19 + 0x8]
	0x02414A84 STP W9, W8, [X19 + 0x14]
	0x02414A88 STUR D0, [X19 + 0xC]
	0x02414A8C STP W10, W11, [X19 + 0x1C]
	0x02414A90 LDR X8, [X20 + 0x20]
	0x02414A94 ADD X9, X8, 0x135
	0x02414A98 LDRH W9, [X9]
	0x02414A9C TBNZ X9, 0x0, 0x2414AB8
	0x02414AA0 MOV X0, X8
	0x02414AA4 BL 0x1C5C684
	0x02414AA8 LDR X8, [X20 + 0x20]
	0x02414AAC ADD X9, X8, 0x135
	0x02414AB0 LDRH W9, [X9]
	0x02414AB4 B 0x2414ABC
	0x02414AB8 MOV X0, X8
	0x02414ABC LDR X10, [X0 + 0xC0]
	0x02414AC0 LDR X10, [X10 + 0x40]
	0x02414AC4 LDR X20, [X10]
	0x02414AC8 TBNZ X9, 0x0, 0x2414AD8
	0x02414ACC MOV X0, X8
	0x02414AD0 BL 0x1C5C684
	0x02414AD4 MOV X8, X0
	0x02414AD8 LDR X8, [X8 + 0xC0]
	0x02414ADC LDR X0, [X8 + 0x40]
	0x02414AE0 BLR X20
	0x02414AE4 STR X0, [X19 + 0x38]
	0x02414AE8 LDP X20, X19, [X31 + 0x30]
	0x02414AEC LDP X22, X21, [X31 + 0x20]
	0x02414AF0 LDP X24, X23, [X31 + 0x10]
	0x02414AF4 LDP X30, X25, [X31], #0x40
	0x02414AF8 RET
	0x02414AFC BL 0x1C16F20
	0x02414B00 STP X29, X30, [X31 - 0x60]!
	0x02414B04 STP X28, X27, [X31 + 0x10]
	0x02414B08 STP X26, X25, [X31 + 0x20]
	0x02414B0C STP X24, X23, [X31 + 0x30]
	0x02414B10 STP X22, X21, [X31 + 0x40]
	0x02414B14 STP X20, X19, [X31 + 0x50]
	0x02414B18 ADD X29, X31, 0x0
	0x02414B1C SUB X31, X31, 0x30
	0x02414B20 STUR X2, [X29 - 0x30]
	0x02414B24 MRS X20, 0xC000
	0x02414B28 LDR X8, [X20 + 0x28]
	0x02414B2C MOV X19, X3
	0x02414B30 MOV X27, X1
	0x02414B34 MOV X21, X0
	0x02414B38 STUR X8, [X29 - 0x8]
	0x02414B3C STUR X1, [X29 - 0x28]
	0x02414B40 LDR X23, [X3 + 0x20]
	0x02414B44 ADD X8, X23, 0x135
	0x02414B48 LDRH W8, [X8]
	0x02414B4C TBNZ X8, 0x0, 0x2414B68
	0x02414B50 MOV X0, X23
	0x02414B54 BL 0x1C5C684
	0x02414B58 LDR X23, [X19 + 0x20]
	0x02414B5C ADD X8, X23, 0x135
	0x02414B60 LDRH W8, [X8]
	0x02414B64 B 0x2414B6C
	0x02414B68 MOV X0, X23
	0x02414B6C LDR X9, [X0 + 0xC0]
	0x02414B70 LDR X9, [X9 + 0x70]
	0x02414B74 LDR W22, [X9 + 0xFC]
	0x02414B78 TBNZ X8, 0x0, 0x2414B8C
	0x02414B7C MOV X0, X23
	0x02414B80 BL 0x1C5C684
	0x02414B84 LDR X23, [X19 + 0x20]
	0x02414B88 B 0x2414B90
	0x02414B8C MOV X0, X23
	0x02414B90 LDR X8, [X0 + 0xC0]
	0x02414B94 LDR X8, [X8 + 0x58]
	0x02414B98 LDR W28, [X8 + 0xFC]
	0x02414B9C ADD X8, X31, 0x0
	0x02414BA0 ADD X9, X28, 0xF
	0x02414BA4 AND X9, X9, 0x1FFFFFFFF
	0x02414BA8 SUB X26, X8, X9
	0x02414BAC ADD X31, X26, 0x0
	0x02414BB0 ADD X9, X22, 0xF
	0x02414BB4 ADD X8, X31, 0x0
	0x02414BB8 AND X9, X9, 0x1FFFFFFFF
	0x02414BBC SUB X24, X8, X9
	0x02414BC0 ADD X31, X24, 0x0
	0x02414BC4 ADD X8, X31, 0x0
	0x02414BC8 SUB X25, X8, X9
	0x02414BCC ADD X31, X25, 0x0
	0x02414BD0 MOV X0, X25
	0x02414BD4 MOV W1, W31
	0x02414BD8 MOV X2, X22
	0x02414BDC BL 0x3EB1B10
	0x02414BE0 LDRB W8, [X23 + 0x135]
	0x02414BE4 TBNZ X8, 0x0, 0x2414BF8
	0x02414BE8 MOV X0, X23

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x1FC6000
	007 Move W8, [X22+2488]
	008 Move X20, X2
	009 Move W21, W1
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {26}
	015 Move X0, 0x1CE0000
	016 Move X0, [X0+1456]
	017 Call 0x1C17CF4
	018 Move X0, 0x1D09000
	019 Move X0, [X0+3112]
	020 Call 0x1C17CF4
	021 Move X0, 0x1D09000
	022 Move X0, [X0+3104]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X22+2488], W8
	026 Move TEMP, X21
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfNotEqual {43}
	030 Move X0, [X19+24]
	031 Move X1, X31
	032 Call String.IsNullOrEmpty, X0
	033 Move W8, W0
	034 Move X0, [X19+16]
	035 Move TEMP, X8
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfNotEqual {48}
	039 Move X8, [X20+32]
	040 Move X8, [X8+192]
	041 Move X1, [X8+80]
	042 Call 0x2242FB8, X0
	043 Move X8, [X20+32]
	044 Move X0, [X19+16]
	045 Move X8, [X8+192]
	046 Move X1, [X8+88]
	047 Call 0x22430FC, X0
	048 Move X8, [X20+32]
	049 Move X1, [X19+24]
	050 Move X8, [X8+192]
	051 Move X2, [X8+48]
	052 Call 0x241498C, X0, X1
	053 Move [X19+32], X0
	054 Compare X0, 0
	055 JumpIfNotEqual {76}
	056 Move X8, 0x1D09000
	057 Move X1, [X19+16]
	058 Move X3, [X19+24]
	059 Move X8, [X8+3104]
	060 Move X9, 0x1D09000
	061 Move X9, [X9+3112]
	062 Move X0, [X8]
	063 Move X2, [X9]
	064 Move X4, X31
	065 Call String.Concat, X0, X1, X2, X3
	066 Move X8, 0x1CE0000
	067 Move X8, [X8+1456]
	068 Move X20, X0
	069 Move X0, [X8]
	070 Call 0x1C17F10
	071 Move X21, X0
	072 Move X1, X20
	073 Move X2, X31
	074 Call InvalidOperationException..ctor, X0, X1
	075 Move [X19+32], X21
	076 Move X20, [X31+32]
	077 Move X19, [X31+40]
	078 Move X22, [X31+16]
	079 Move X21, [X31+24]
	080 Move X30, [X31+48]
	081 Return 
	082 Move X20, X0
	083 NotImplemented "Instruction CMP not yet implemented."
	084 Move X0, X20
	085 Call 0x3EB2AD0
	086 Move X20, X0
	087 Move X0, 0x1CE0000
	088 Move X0, [X0+2000]
	089 Call 0x1C17D08
	090 Move X8, [X20]
	091 Move X1, [X8]
	092 Call 0x1C18270
	093 Move TEMP, X0
	094 And TEMP, TEMP, 1
	095 Compare TEMP, 1
	096 JumpIfNotEqual {103}
	097 Move X20, [X20]
	098 Call 0x3EB2AE0
	099 Move X0, X20
	100 Move X1, X31
	101 Call ExceptionDispatchInfo.Capture, X0
	102 Move [X19+32], X0
	103 Move W0, 8
	104 Call 0x3EB2AF0
	105 Move X8, [X20]
	106 Move [X0], X8
	107 Move X1, 0x1AA1000
	108 Add X1, X1, 3672
	109 Move X2, X31
	110 Call 0x3EB2B00
	111 Move X20, X0
	112 Call 0x3EB2AE0
	113 Move X0, X20
	114 Call 0x1D2D690
	115 Call 0x1991590

Method: System.Void UnloadInternal()

Disassembly:
	0x02414BEC BL 0x1C5C684
	0x02414BF0 LDR X23, [X19 + 0x20]
	0x02414BF4 B 0x2414BFC
	0x02414BF8 MOV X0, X23
	0x02414BFC LDR X8, [X0 + 0xC0]
	0x02414C00 MOV X0, X26
	0x02414C04 MOV X2, X28
	0x02414C08 LDR X8, [X8 + 0x58]
	0x02414C0C LDR W8, [X8 + 0x28]
	0x02414C10 CMP W8, 0x0
	0x02414C14 SUB X8, X29, 0x28
	0x02414C18 CSEL X1, X27, X8, LT
	0x02414C1C BL 0x3EB1AC0
	0x02414C20 ADD X8, X23, 0x135
	0x02414C24 LDRH W8, [X8]
	0x02414C28 TBNZ X8, 0x0, 0x2414C44
	0x02414C2C MOV X0, X23
	0x02414C30 BL 0x1C5C684
	0x02414C34 LDR X23, [X19 + 0x20]
	0x02414C38 ADD X8, X23, 0x135
	0x02414C3C LDRH W8, [X8]
	0x02414C40 B 0x2414C48
	0x02414C44 MOV X0, X23
	0x02414C48 LDR X9, [X0 + 0xC0]
	0x02414C4C LDR X9, [X9 + 0x60]
	0x02414C50 LDR X27, [X9]
	0x02414C54 TBNZ X8, 0x0, 0x2414C70
	0x02414C58 MOV X0, X23
	0x02414C5C BL 0x1C5C684
	0x02414C60 LDR X23, [X19 + 0x20]
	0x02414C64 ADD X8, X23, 0x135
	0x02414C68 LDRH W8, [X8]
	0x02414C6C B 0x2414C74
	0x02414C70 MOV X0, X23
	0x02414C74 LDR X9, [X0 + 0xC0]
	0x02414C78 LDR X28, [X9 + 0x60]
	0x02414C7C TBNZ X8, 0x0, 0x2414C8C
	0x02414C80 MOV X0, X23
	0x02414C84 BL 0x1C5C684
	0x02414C88 MOV X23, X0
	0x02414C8C LDR X8, [X23 + 0xC0]
	0x02414C90 LDR X8, [X8 + 0x58]
	0x02414C94 LDR W8, [X8 + 0x28]
	0x02414C98 TBNZ X8, 0x1F, 0x2414CA0
	0x02414C9C LDR X26, [X26]
	0x02414CA0 STP X26, X25, [X29 - 0x20]
	0x02414CA4 LDR X8, [X28 + 0x10]
	0x02414CA8 SUB X3, X29, 0x20
	0x02414CAC SUB X4, X29, 0xC
	0x02414CB0 MOV X0, X27
	0x02414CB4 MOV X1, X28
	0x02414CB8 MOV X2, X21
	0x02414CBC BLR X8
	0x02414CC0 LDURB W8, [X29 - 0xC]
	0x02414CC4 CBZ W8, 0x2414D18
	0x02414CC8 MOV X0, X24
	0x02414CCC MOV X1, X25
	0x02414CD0 MOV X2, X22
	0x02414CD4 BL 0x3EB1AC0
	0x02414CD8 LDUR X0, [X29 - 0x30]
	0x02414CDC MOV X1, X24
	0x02414CE0 MOV X2, X22
	0x02414CE4 BL 0x3EB1AC0
	0x02414CE8 LDR X8, [X20 + 0x28]
	0x02414CEC LDUR X9, [X29 - 0x8]
	0x02414CF0 CMP X8, X9
	0x02414CF4 B.NE 0x2414D40
	0x02414CF8 ADD X31, X29, 0x0
	0x02414CFC LDP X20, X19, [X31 + 0x50]
	0x02414D00 LDP X22, X21, [X31 + 0x40]
	0x02414D04 LDP X24, X23, [X31 + 0x30]
	0x02414D08 LDP X26, X25, [X31 + 0x20]
	0x02414D0C LDP X28, X27, [X31 + 0x10]
	0x02414D10 LDP X29, X30, [X31], #0x60
	0x02414D14 RET
	0x02414D18 ADRP X0, 0x1CE2000
	0x02414D1C LDR X0, [X0 + 0x78]
	0x02414D20 BL 0x1C16D08
	0x02414D24 BL 0x1C16F10
	0x02414D28 MOV X1, X31
	0x02414D2C MOV X20, X0
	0x02414D30 BL 0x335DBAC
	0x02414D34 MOV X0, X20
	0x02414D38 MOV X1, X19
	0x02414D3C BL 0x1C16DEC
	0x02414D40 BL 0x3EB1B20
	0x02414D44 STP X29, X30, [X31 - 0x60]!
	0x02414D48 STP X28, X27, [X31 + 0x10]
	0x02414D4C STP X26, X25, [X31 + 0x20]
	0x02414D50 STP X24, X23, [X31 + 0x30]
	0x02414D54 STP X22, X21, [X31 + 0x40]
	0x02414D58 STP X20, X19, [X31 + 0x50]
	0x02414D5C ADD X29, X31, 0x0
	0x02414D60 SUB X31, X31, 0x30
	0x02414D64 MRS X28, 0xC000
	0x02414D68 LDR X8, [X28 + 0x28]
	0x02414D6C MOV X19, X3
	0x02414D70 MOV X20, X2
	0x02414D74 MOV X26, X1
	0x02414D78 STUR X8, [X29 - 0x8]
	0x02414D7C STUR X1, [X29 - 0x28]
	0x02414D80 LDR X24, [X3 + 0x20]
	0x02414D84 MOV X21, X0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x1FC6000
	008 Move W8, [X20+2489]
	009 Move X21, X1
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {26}
	015 Move X0, 0x1CEC000
	016 Move X0, [X0+1816]
	017 Call 0x1C17CF4
	018 Move X0, 0x1CE0000
	019 Move X0, [X0+1432]
	020 Call 0x1C17CF4
	021 Move X0, 0x1D09000
	022 Move X0, [X0+3080]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X20+2489], W8
	026 Move X20, [X19+32]
	027 Compare X20, 0
	028 JumpIfEqual {125}
	029 Move X8, 0x1D09000
	030 Move X8, [X8+3080]
	031 Move X9, [X20]
	032 Move X8, [X8]
	033 Move W11, [X9+304]
	034 Move W10, [X8+304]
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move X9, [X9+200]
	037 Add X9, X9, X10
	038 NotImplemented "Instruction LDUR not yet implemented."
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Move X8, [X21+32]
	041 Move X8, [X8+192]
	042 Move X0, [X8+104]
	043 Move W8, [X0+309]
	044 Move TEMP, X8
	045 And TEMP, TEMP, 1
	046 Compare TEMP, 1
	047 JumpIfEqual {49}
	048 Call 0x1C5D684
	049 Move W8, [X0+224]
	050 Compare W8, 0
	051 JumpIfNotEqual {53}
	052 Call 0x1C17DFC
	053 Move X8, [X21+32]
	054 Move X8, [X8+192]
	055 Move X0, [X8+104]
	056 Move W8, [X0+309]
	057 Move TEMP, X8
	058 And TEMP, TEMP, 1
	059 Compare TEMP, 1
	060 JumpIfEqual {62}
	061 Call 0x1C5D684
	062 Move X8, [X0+184]
	063 Move X22, [X8+8]
	064 Compare X22, 0
	065 JumpIfNotEqual {121}
	066 Move X8, [X21+32]
	067 Move X8, [X8+192]
	068 Move X0, [X8+104]
	069 Move W8, [X0+309]
	070 Move TEMP, X8
	071 And TEMP, TEMP, 1
	072 Compare TEMP, 1
	073 JumpIfEqual {75}
	074 Call 0x1C5D684
	075 Move W8, [X0+224]
	076 Compare W8, 0
	077 JumpIfNotEqual {79}
	078 Call 0x1C17DFC
	079 Move X8, [X21+32]
	080 Move X8, [X8+192]
	081 Move X0, [X8+104]
	082 Move W8, [X0+309]
	083 Move TEMP, X8
	084 And TEMP, TEMP, 1
	085 Compare TEMP, 1
	086 JumpIfEqual {88}
	087 Call 0x1C5D684
	088 Move X9, 0x1CEC000
	089 Move X8, [X0+184]
	090 Move X9, [X9+1816]
	091 Move X23, [X8]
	092 Move X0, [X9]
	093 Call 0x1C17F10
	094 Move X8, [X21+32]
	095 Move X1, X23
	096 Move X3, X31
	097 Move X22, X0
	098 Move X8, [X8+192]
	099 Move X2, [X8+112]
	100 Call Action`1<Object>..ctor, X0, X1, X2
	101 Move X8, [X21+32]
	102 Move X8, [X8+192]
	103 Move X0, [X8+104]
	104 Move W9, [X0+309]
	105 Move TEMP, X9
	106 And TEMP, TEMP, 1
	107 Compare TEMP, 1
	108 JumpIfEqual {112}
	109 Call 0x1C5D684
	110 Move X8, [X21+32]
	111 Move X8, [X8+192]
	112 Move X9, [X0+184]
	113 Move [X9+8], X22
	114 Move X0, [X8+104]
	115 Move W8, [X0+309]
	116 Move TEMP, X8
	117 And TEMP, TEMP, 1
	118 Compare TEMP, 1
	119 JumpIfEqual {121}
	120 Call 0x1C5D684
	121 Move X0, X20
	122 Move X1, X22
	123 Move X2, X31
	124 Call AsyncOperation.add_completed, X0, X1
	125 Move [X19+32], X31
	126 Move X20, [X31+32]
	127 Move X19, [X31+40]
	128 Move X22, [X31+16]
	129 Move X21, [X31+24]
	130 Move X30, [X31+48]
	131 Move X23, [X31+56]
	132 Return 

Method: System.String get_Description()

Disassembly:
	0x02414D88 ADD X8, X24, 0x135
	0x02414D8C LDRH W8, [X8]
	0x02414D90 TBNZ X8, 0x0, 0x2414DAC
	0x02414D94 MOV X0, X24
	0x02414D98 BL 0x1C5C684
	0x02414D9C LDR X24, [X19 + 0x20]
	0x02414DA0 ADD X8, X24, 0x135
	0x02414DA4 LDRH W8, [X8]
	0x02414DA8 B 0x2414DB0
	0x02414DAC MOV X0, X24
	0x02414DB0 LDR X9, [X0 + 0xC0]
	0x02414DB4 LDR X9, [X9 + 0x58]
	0x02414DB8 LDR W27, [X9 + 0xFC]
	0x02414DBC TBNZ X8, 0x0, 0x2414DD8
	0x02414DC0 MOV X0, X24
	0x02414DC4 BL 0x1C5C684
	0x02414DC8 LDR X24, [X19 + 0x20]
	0x02414DCC ADD X8, X24, 0x135
	0x02414DD0 LDRH W8, [X8]
	0x02414DD4 B 0x2414DDC
	0x02414DD8 MOV X0, X24
	0x02414DDC LDR X9, [X0 + 0xC0]
	0x02414DE0 ADD X10, X27, 0xF
	0x02414DE4 AND X10, X10, 0x1FFFFFFFF
	0x02414DE8 LDR X9, [X9 + 0x70]
	0x02414DEC LDR W22, [X9 + 0xFC]
	0x02414DF0 ADD X9, X31, 0x0
	0x02414DF4 SUB X25, X9, X10
	0x02414DF8 ADD X31, X25, 0x0
	0x02414DFC ADD X10, X22, 0xF
	0x02414E00 ADD X9, X31, 0x0
	0x02414E04 AND X10, X10, 0x1FFFFFFFF
	0x02414E08 SUB X23, X9, X10
	0x02414E0C ADD X31, X23, 0x0
	0x02414E10 TBNZ X8, 0x0, 0x2414E24
	0x02414E14 MOV X0, X24
	0x02414E18 BL 0x1C5C684
	0x02414E1C LDR X24, [X19 + 0x20]
	0x02414E20 B 0x2414E28
	0x02414E24 MOV X0, X24
	0x02414E28 LDR X8, [X0 + 0xC0]
	0x02414E2C MOV X0, X25
	0x02414E30 MOV X2, X27
	0x02414E34 LDR X8, [X8 + 0x58]
	0x02414E38 LDR W8, [X8 + 0x28]
	0x02414E3C CMP W8, 0x0
	0x02414E40 SUB X8, X29, 0x28

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x1FC6000
	006 Move X21, 0x1D09000
	007 Move W8, [X20+2490]
	008 Move X21, [X21+3120]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {28}
	014 Move X0, 0x1D09000
	015 Move X0, [X0+3120]
	016 Call 0x1C17CF4
	017 Move X0, 0x1CE0000
	018 Move X0, [X0+3784]
	019 Call 0x1C17CF4
	020 Move X0, 0x1CE0000
	021 Move X0, [X0+2440]
	022 Call 0x1C17CF4
	023 Move X0, 0x1CE0000
	024 Move X0, [X0+2120]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X20+2490], W8
	028 Move X20, [X19+16]
	029 Move X0, [X19+24]
	030 Move X1, X31
	031 Call String.IsNullOrEmpty, X0
	032 Move X21, [X21]
	033 Move TEMP, X0
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfNotEqual {40}
	037 Move X8, 0x1CE0000
	038 Move X8, [X8+2440]
	039 Move X2, [X8]
	040 Move X8, 0x1CE0000
	041 Move X9, 0x1CE0000
	042 Move X8, [X8+3784]
	043 Move X9, [X9+2120]
	044 Move X1, [X19+24]
	045 Move X3, X31
	046 Move X0, [X8]
	047 Move X2, [X9]
	048 Call String.Concat, X0, X1, X2
	049 Move X2, X0
	050 Move X1, X20
	051 Move X20, [X31+16]
	052 Move X19, [X31+24]
	053 Move X0, X21
	054 Move X3, X31
	055 Move X30, [X31+32]
	056 Move X21, [X31+40]
	057 Call String.Concat, X0, X1, X2
	058 Return X0

Method: System.Void .ctor()

Disassembly:
	0x02414E44 CSEL X1, X26, X8, LT
	0x02414E48 BL 0x3EB1AC0

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

