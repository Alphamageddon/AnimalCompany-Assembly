Type: Fusion.FusionBootstrap/<StartClients>d__63

Method: System.Void .ctor(System.Int32 <>1__state)

Disassembly:
	0x01F8C54C LDR X24, [X8 + 0x8]
	0x01F8C550 CBZ X24, 0x1F8C560
	0x01F8C554 LDR V0, [X31 + 0x3]
	0x01F8C558 LDR X8, [X31 + 0x40]
	0x01F8C55C B 0x1F8C5C8
	0x01F8C560 LDR V0, [X31 + 0x3]
	0x01F8C564 LDR X8, [X31 + 0x40]
	0x01F8C568 STR V0, [X31 + 0x5]
	0x01F8C56C STR X8, [X31 + 0x60]
	0x01F8C570 LDR W8, [X0 + 0xE0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W19, W1
	005 Move X1, X31
	006 Move X20, X0
	007 Call Object..ctor, X0
	008 Move [X20+16], W19
	009 Move X20, [X31+16]
	010 Move X19, [X31+24]
	011 Move X30, [X31+32]
	012 Return 

Method: System.Void System.IDisposable.Dispose()

Disassembly:
	0x01F8CACC MOV X0, X20

ISIL:
	001 Return 

Method: System.Boolean MoveNext()

Disassembly:
	0x01F8CAD0 BL 0x1C5C6E0
	0x01F8CAD4 MOV X0, X19
	0x01F8CAD8 MOV X1, X31
	0x01F8CADC BL 0x3C32ECC
	0x01F8CAE0 CBZ X0, 0x1F8CB04
	0x01F8CAE4 LDR X8, [X20 + 0x38]
	0x01F8CAE8 LDR X1, [X8]
	0x01F8CAEC BL 0x21E51FC
	0x01F8CAF0 STR X0, [X19 + 0x30]
	0x01F8CAF4 LDP X20, X19, [X31 + 0x20]
	0x01F8CAF8 LDP X30, X21, [X31 + 0x10]
	0x01F8CAFC ADD X31, X31, 0x30
	0x01F8CB00 RET
	0x01F8CB04 BL 0x1C16F20
	0x01F8CB08 STP X30, X19, [X31 - 0x10]!
	0x01F8CB0C MOV X19, X0
	0x01F8CB10 MOV X0, X31
	0x01F8CB14 BL 0x1EB7374
	0x01F8CB18 CBZ X0, 0x1F8CB34
	0x01F8CB1C LDR W8, [X0 + 0x20]
	0x01F8CB20 CMP W8, 0x1
	0x01F8CB24 CSET W8, EQ
	0x01F8CB28 STRB W8, [X19 + 0x40]
	0x01F8CB2C LDP X30, X19, [X31], #0x10
	0x01F8CB30 RET
	0x01F8CB34 BL 0x1C16F20
	0x01F8CB38 STR X30, [X31 - 0x20]!
	0x01F8CB3C STP X20, X19, [X31 + 0x10]
	0x01F8CB40 MOV X20, X0
	0x01F8CB44 BL 0x1F8C9A4
	0x01F8CB48 CBZ X0, 0x1F8CCCC
	0x01F8CB4C MOV X19, X0
	0x01F8CB50 BL 0x1F8B918
	0x01F8CB54 TBZ X0, 0x0, 0x1F8CB60
	0x01F8CB58 LDR W8, [X19 + 0x58]
	0x01F8CB5C CBZ W8, 0x1F8CB6C
	0x01F8CB60 LDP X20, X19, [X31 + 0x10]
	0x01F8CB64 LDR X30, [X31], #0x20
	0x01F8CB68 RET
	0x01F8CB6C LDRB W8, [X20 + 0x20]
	0x01F8CB70 CBZ W8, 0x1F8CB60
	0x01F8CB74 MOVZ W0, 0x69
	0x01F8CB78 MOV X1, X31
	0x01F8CB7C BL 0x3C84D24
	0x01F8CB80 TBZ X0, 0x0, 0x1F8CB98
	0x01F8CB84 LDR X0, [X20 + 0x30]
	0x01F8CB88 CBZ X0, 0x1F8CCCC
	0x01F8CB8C LDR X8, [X0]
	0x01F8CB90 LDP X9, X1, [X8 + 0x1A8]
	0x01F8CB94 BLR X9
	0x01F8CB98 MOVZ W0, 0x68
	0x01F8CB9C MOV X1, X31
	0x01F8CBA0 BL 0x3C84D24
	0x01F8CBA4 TBZ X0, 0x0, 0x1F8CBD8
	0x01F8CBA8 LDRB W8, [X20 + 0x40]
	0x01F8CBAC LDR X1, [X20 + 0x30]
	0x01F8CBB0 CBZ W8, 0x1F8CBC0
	0x01F8CBB4 MOV X0, X20
	0x01F8CBB8 BL 0x1F8CCD0
	0x01F8CBBC B 0x1F8CBD8
	0x01F8CBC0 CBZ X1, 0x1F8CCCC
	0x01F8CBC4 LDR X8, [X1]
	0x01F8CBC8 MOV X0, X1
	0x01F8CBCC LDP X9, X8, [X8 + 0x1C8]
	0x01F8CBD0 MOV X1, X8
	0x01F8CBD4 BLR X9
	0x01F8CBD8 MOVZ W0, 0x73
	0x01F8CBDC MOV X1, X31
	0x01F8CBE0 BL 0x3C84D24
	0x01F8CBE4 TBZ X0, 0x0, 0x1F8CC18
	0x01F8CBE8 LDRB W8, [X20 + 0x40]
	0x01F8CBEC LDR X1, [X20 + 0x30]
	0x01F8CBF0 CBZ W8, 0x1F8CC00
	0x01F8CBF4 MOV X0, X20
	0x01F8CBF8 BL 0x1F8CDC4
	0x01F8CBFC B 0x1F8CC18
	0x01F8CC00 CBZ X1, 0x1F8CCCC
	0x01F8CC04 LDR X8, [X1]
	0x01F8CC08 MOV X0, X1
	0x01F8CC0C LDP X9, X8, [X8 + 0x1B8]
	0x01F8CC10 MOV X1, X8
	0x01F8CC14 BLR X9
	0x01F8CC18 MOVZ W0, 0x63
	0x01F8CC1C MOV X1, X31
	0x01F8CC20 BL 0x3C84D24
	0x01F8CC24 TBZ X0, 0x0, 0x1F8CC50
	0x01F8CC28 LDRB W8, [X20 + 0x40]
	0x01F8CC2C CBZ W8, 0x1F8CC40
	0x01F8CC30 MOV X0, X20
	0x01F8CC34 MOV X1, X19
	0x01F8CC38 BL 0x1F8CEC4
	0x01F8CC3C B 0x1F8CC50
	0x01F8CC40 LDR X8, [X19]
	0x01F8CC44 MOV X0, X19
	0x01F8CC48 LDP X9, X1, [X8 + 0x1D8]
	0x01F8CC4C BLR X9
	0x01F8CC50 MOVZ W0, 0x61
	0x01F8CC54 MOV X1, X31
	0x01F8CC58 BL 0x3C84D24
	0x01F8CC5C TBZ X0, 0x0, 0x1F8CC88
	0x01F8CC60 LDRB W8, [X20 + 0x40]
	0x01F8CC64 CBZ W8, 0x1F8CC78
	0x01F8CC68 MOV X0, X20
	0x01F8CC6C MOV X1, X19
	0x01F8CC70 BL 0x1F8CFB8
	0x01F8CC74 B 0x1F8CC88
	0x01F8CC78 LDR X8, [X19]
	0x01F8CC7C MOV X0, X19
	0x01F8CC80 LDP X9, X1, [X8 + 0x1F8]
	0x01F8CC84 BLR X9
	0x01F8CC88 MOVZ W0, 0x70
	0x01F8CC8C MOV X1, X31
	0x01F8CC90 BL 0x3C84D24
	0x01F8CC94 TBZ X0, 0x0, 0x1F8CB60
	0x01F8CC98 LDRB W8, [X20 + 0x40]
	0x01F8CC9C CBZ W8, 0x1F8CCB4
	0x01F8CCA0 MOV X0, X20
	0x01F8CCA4 MOV X1, X19
	0x01F8CCA8 LDP X20, X19, [X31 + 0x10]
	0x01F8CCAC LDR X30, [X31], #0x20
	0x01F8CCB0 B 0x1F8CFF8
	0x01F8CCB4 LDR X8, [X19]
	0x01F8CCB8 MOV X0, X19
	0x01F8CCBC LDP X20, X19, [X31 + 0x10]
	0x01F8CCC0 LDP X2, X1, [X8 + 0x1E8]
	0x01F8CCC4 LDR X30, [X31], #0x20
	0x01F8CCC8 BR X2
	0x01F8CCCC BL 0x1C16F20
	0x01F8CCD0 STR X30, [X31 - 0x30]!
	0x01F8CCD4 STP X22, X21, [X31 + 0x10]
	0x01F8CCD8 STP X20, X19, [X31 + 0x20]
	0x01F8CCDC ADRP X22, 0x244D000
	0x01F8CCE0 ADRP X21, 0x2170000
	0x01F8CCE4 LDRB W8, [X22 + 0x70B]
	0x01F8CCE8 LDR X21, [X21 + 0x9E8]
	0x01F8CCEC MOV X19, X1
	0x01F8CCF0 MOV X20, X0
	0x01F8CCF4 TBNZ X8, 0x0, 0x1F8CD0C
	0x01F8CCF8 ADRP X0, 0x2170000
	0x01F8CCFC LDR X0, [X0 + 0x9E8]
	0x01F8CD00 BL 0x1C16CF4
	0x01F8CD04 MOVZ W8, 0x1
	0x01F8CD08 STRB W8, [X22 + 0x70B]
	0x01F8CD0C LDR X0, [X21]
	0x01F8CD10 LDR X20, [X20 + 0x38]
	0x01F8CD14 LDR W8, [X0 + 0xE0]
	0x01F8CD18 CBNZ W8, 0x1F8CD20
	0x01F8CD1C BL 0x1C16DFC
	0x01F8CD20 MOV X0, X20
	0x01F8CD24 MOV X1, X31
	0x01F8CD28 BL 0x332056C
	0x01F8CD2C MOV W1, W0
	0x01F8CD30 CBZ X19, 0x1F8CD8C
	0x01F8CD34 MOV X0, X19
	0x01F8CD38 LDP X20, X19, [X31 + 0x20]
	0x01F8CD3C LDP X22, X21, [X31 + 0x10]
	0x01F8CD40 LDR X30, [X31], #0x30
	0x01F8CD44 B 0x1F8AB4C
	0x01F8CD48 B 0x1F8CD4C
	0x01F8CD4C MOV X20, X0
	0x01F8CD50 CMP W1, 0x1
	0x01F8CD54 B.NE 0x1F8CDB8
	0x01F8CD58 MOV X0, X20
	0x01F8CD5C BL 0x3EB1AD0
	0x01F8CD60 MOV X20, X0

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x244E000
	007 Move W8, [X20+1795]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {33}
	013 Move X0, 0x2168000
	014 Move X0, [X0+2600]
	015 Call 0x1C17CF4
	016 Move X0, 0x218F000
	017 Move X0, [X0+2008]
	018 Call 0x1C17CF4
	019 Move X0, 0x218F000
	020 Move X0, [X0+2016]
	021 Call 0x1C17CF4
	022 Move X0, 0x218F000
	023 Move X0, [X0+2024]
	024 Call 0x1C17CF4
	025 Move X0, 0x2169000
	026 Move X0, [X0+1976]
	027 Call 0x1C17CF4
	028 Move X0, 0x216B000
	029 Move X0, [X0+3120]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X20+1795], W8
	033 Move W8, [X19+16]
	034 Move X20, [X19+32]
	035 NotImplemented "Instruction CMP not yet implemented."
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Compare W8, 0
	038 JumpIfNotEqual {99}
	039 Move TEMP, 0
	040 Not TEMP
	041 Move W8, TEMP
	042 Move [X19+16], W8
	043 Compare X20, 0
	044 JumpIfEqual {186}
	045 Move W8, 4
	046 Move [X20+88], W8
	047 Move X8, 0x218F000
	048 Move X8, [X8+2024]
	049 Move X0, [X8]
	050 Call 0x1C17F10
	051 Move X8, 0x218F000
	052 Move X8, [X8+2016]
	053 Move X21, X0
	054 Move X1, [X8]
	055 Call List`1<Object>..ctor, X0
	056 Move W8, W31
	057 Move [X19+56], X21
	058 Move [X19+72], W31
	059 Move X0, [X19+64]
	060 Move TEMP, 0
	061 Not TEMP
	062 Move W8, TEMP
	063 Move [X19+16], W8
	064 Move W8, [X19+72]
	065 Move TEMP, 0
	066 Not TEMP
	067 Move W9, TEMP
	068 Move [X19+16], W9
	069 Add W8, W8, 1
	070 Move [X19+72], W8
	071 Move W9, [X19+48]
	072 NotImplemented "Instruction CMP not yet implemented."
	073 Compare X20, 0
	074 JumpIfEqual {186}
	075 Move W1, [X19+40]
	076 Move W2, [X19+44]
	077 Move X21, [X19+56]
	078 Move X0, X20
	079 Call FusionBootstrap.AddClient, X0, X1, X2
	080 Compare X21, 0
	081 JumpIfEqual {186}
	082 Move X9, 0x218F000
	083 Move X9, [X9+2008]
	084 Move W10, [X21+28]
	085 Move X8, [X21+16]
	086 Move X9, [X9]
	087 Add W10, W10, 1
	088 Move [X21+28], W10
	089 Compare X8, 0
	090 JumpIfEqual {186}
	091 NotImplemented "Instruction LDRSW not yet implemented."
	092 Move W11, [X8+24]
	093 Move X1, X0
	094 NotImplemented "Instruction CMP not yet implemented."
	095 Add W9, W10, 1
	096 Add X8, X8, X10
	097 Move [X21+24], W9
	098 Move [X8+32], X1
	099 Move W0, W31
	100 Move X8, 0x2169000
	101 Move X8, [X8+1976]
	102 Move X21, [X19+56]
	103 Move X0, [X8]
	104 Move W8, [X0+224]
	105 Compare W8, 0
	106 JumpIfNotEqual {108}
	107 Call 0x1C17DFC
	108 Move X0, X21
	109 Move X1, X31
	110 Call Task.WhenAll, X0
	111 Move [X19+64], X0
	112 Compare X0, 0
	113 JumpIfEqual {186}
	114 Move X1, X31
	115 Call Task.get_IsCompleted, X0
	116 Move TEMP, X0
	117 And TEMP, TEMP, 1
	118 Compare TEMP, 1
	119 JumpIfNotEqual {151}
	120 Move X0, [X19+64]
	121 Compare X0, 0
	122 JumpIfEqual {186}
	123 Move X1, X31
	124 Call Task.get_IsFaulted, X0
	125 Move TEMP, X0
	126 And TEMP, TEMP, 1
	127 Compare TEMP, 1
	128 JumpIfNotEqual {146}
	129 Move X0, [X19+64]
	130 Compare X0, 0
	131 JumpIfEqual {186}
	132 Move X1, X31
	133 Call Task.get_Exception, X0
	134 Move X8, 0x2168000
	135 Move X8, [X8+2600]
	136 Move X19, X0
	137 Move X8, [X8]
	138 Move W9, [X8+224]
	139 Compare W9, 0
	140 JumpIfNotEqual {143}
	141 Move X0, X8
	142 Call 0x1C17DFC
	143 Move X0, X19
	144 Move X1, X31
	145 Call Debug.LogWarning, X0
	146 Compare X20, 0
	147 JumpIfEqual {186}
	148 Move W0, W31
	149 Move W8, 5
	150 Move [X20+88], W8
	151 Move X8, 0x216B000
	152 Move X8, [X8+3120]
	153 Move X0, [X8]
	154 Call 0x1C17F10
	155 Move S0, 1
	156 Move X1, X31
	157 Move X20, X0
	158 Call WaitForSeconds..ctor, X0, V0
	159 Move W8, 2
	160 Move [X19+24], X20
	161 Move [X19+16], W8
	162 Move W0, 1
	163 Move X8, [X9+32]
	164 Move X0, X21
	165 Move X8, [X8+192]
	166 Move X2, [X8+112]
	167 Call List`1<Object>.AddWithResize, X0, X1
	168 Move X8, 0x216B000
	169 Move V8, [X20+56]
	170 Move X8, [X8+3120]
	171 Move X0, [X8]
	172 Call 0x1C17F10
	173 Move V0, V8
	174 Move X1, X31
	175 Move X20, X0
	176 Call WaitForSeconds..ctor, X0, V0
	177 Move W0, 1
	178 Move [X19+24], X20
	179 Move [X19+16], W0
	180 Move X20, [X31+32]
	181 Move X19, [X31+40]
	182 Move X30, [X31+16]
	183 Move X21, [X31+24]
	184 Move V8, [X31+48]
	185 Return X0
	186 Call 0x1C17F20

Method: System.Object System.Collections.Generic.IEnumerator<System.Object>.get_Current()

Disassembly:
	0x01F8CD64 ADRP X0, 0x216D000
	0x01F8CD68 LDR X0, [X0 + 0xCC0]

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void System.Collections.IEnumerator.Reset()

Disassembly:
	0x01F8CD6C BL 0x1C16D08
	0x01F8CD70 LDR X8, [X20]
	0x01F8CD74 LDR X1, [X8]
	0x01F8CD78 BL 0x1C17270
	0x01F8CD7C TBZ X0, 0x0, 0x1F8CD90
	0x01F8CD80 BL 0x3EB1AE0
	0x01F8CD84 MOV W1, W31
	0x01F8CD88 CBNZ X19, 0x1F8CD34
	0x01F8CD8C BL 0x1C16F20
	0x01F8CD90 MOVZ W0, 0x8
	0x01F8CD94 BL 0x3EB1AF0
	0x01F8CD98 LDR X8, [X20]
	0x01F8CD9C STR X8, [X0]
	0x01F8CDA0 ADRP X1, 0x1F28000

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0x2168000
	004 Move X0, [X0+2880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X1, X31
	008 Move X19, X0
	009 Call NotSupportedException..ctor, X0
	010 Move X0, 0x218F000
	011 Move X0, [X0+2032]
	012 Call 0x1C17D08
	013 Move X1, X0
	014 Move X0, X19
	015 Call 0x1C17DEC

Method: System.Object System.Collections.IEnumerator.get_Current()

Disassembly:
	0x01F8CDA4 ADD X1, X1, 0xE58
	0x01F8CDA8 MOV X2, X31

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

