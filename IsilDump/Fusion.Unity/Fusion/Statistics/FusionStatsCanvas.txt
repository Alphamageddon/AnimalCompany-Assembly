Type: Fusion.Statistics.FusionStatsCanvas

Method: System.Boolean get__isColapsed()

Disassembly:
	0x01F99F24 LDR X0, [X8]
	0x01F99F28 CBZ X0, 0x1F9A084
	0x01F99F2C ADRP X8, 0x2161000
	0x01F99F30 LDR X8, [X8 + 0x968]
	0x01F99F34 ADRP X26, 0x2161000
	0x01F99F38 ADRP X28, 0x2181000
	0x01F99F3C ADRP X29, 0x2181000
	0x01F99F40 LDR X26, [X26 + 0x948]
	0x01F99F44 LDR X28, [X28 + 0xF28]
	0x01F99F48 LDR X29, [X29 + 0xE30]
	0x01F99F4C LDR X1, [X8]
	0x01F99F50 ADRP X24, 0x2181000
	0x01F99F54 ADRP X27, 0x2181000

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+56]
	003 Compare X0, 0
	004 JumpIfEqual {15}
	005 Move X1, X31
	006 Call Component.get_gameObject, X0
	007 Compare X0, 0
	008 JumpIfEqual {15}
	009 Move X1, X31
	010 Call GameObject.get_activeSelf, X0
	011 NotImplemented "Instruction ORN not yet implemented."
	012 And W0, W8, 1
	013 Move X30, [X31+16]
	014 Return X0
	015 Call 0x1C17F20

Method: System.Void SetupStatsCanvas(Fusion.Statistics.FusionStatistics fusionStatistics, Fusion.Statistics.CanvasAnchor canvasAnchor, UnityEngine.Events.UnityAction closeButtonAction)

Disassembly:
	0x01F99184 STRB W8, [X21 + 0x776]
	0x01F99188 LDR X0, [X20]
	0x01F9918C LDR X19, [X19 + 0x48]
	0x01F99190 LDR W8, [X0 + 0xE0]
	0x01F99194 CBNZ W8, 0x1F9919C
	0x01F99198 BL 0x1C16DFC
	0x01F9919C MOV X0, X19
	0x01F991A0 LDP X20, X19, [X31 + 0x10]
	0x01F991A4 MOV X1, X31
	0x01F991A8 MOV X2, X31
	0x01F991AC LDP X30, X21, [X31], #0x20
	0x01F991B0 B 0x3C354F8
	0x01F991B4 STP D11, D10, [X31 - 0x40]!
	0x01F991B8 STP D9, D8, [X31 + 0x10]
	0x01F991BC STP X30, X21, [X31 + 0x20]
	0x01F991C0 STP X20, X19, [X31 + 0x30]
	0x01F991C4 MOV X19, X0
	0x01F991C8 LDR X0, [X0 + 0x68]
	0x01F991CC CBZ X0, 0x1F9929C
	0x01F991D0 MOV X20, X1
	0x01F991D4 BL 0x1F99154
	0x01F991D8 TBNZ X0, 0x0, 0x1F99254
	0x01F991DC LDR W8, [X19 + 0x74]
	0x01F991E0 CMP W8, 0x2
	0x01F991E4 B.EQ 0x1F99268
	0x01F991E8 CMP W8, 0x1
	0x01F991EC B.NE 0x1F99254
	0x01F991F0 LDR X21, [X19 + 0x30]
	0x01F991F4 CBZ X21, 0x1F9929C
	0x01F991F8 MOV X0, X21
	0x01F991FC MOV X1, X31
	0x01F99200 BL 0x3C3E7F0
	0x01F99204 CBZ X20, 0x1F9929C
	0x01F99208 LDR X0, [X19 + 0x20]
	0x01F9920C CBZ X0, 0x1F9929C
	0x01F99210 LDR V10, [X20 + 0x110]
	0x01F99214 LDR V11, [X20 + 0x10C]
	0x01F99218 MOV X1, X31
	0x01F9921C MOV V8.16B, V0.16B
	0x01F99220 MOV V9.16B, V1.16B
	0x01F99224 BL 0x3E24614
	0x01F99228 FDIV S1, S11, S0
	0x01F9922C FDIV S2, S10, S0
	0x01F99230 FADD S0, S8, S1
	0x01F99234 FADD S1, S9, S2
	0x01F99238 MOV X0, X21
	0x01F9923C LDP X20, X19, [X31 + 0x30]
	0x01F99240 LDP X30, X21, [X31 + 0x20]
	0x01F99244 LDP D9, D8, [X31 + 0x10]
	0x01F99248 MOV X1, X31
	0x01F9924C LDP D11, D10, [X31], #0x40
	0x01F99250 B 0x3C3E880
	0x01F99254 LDP X20, X19, [X31 + 0x30]
	0x01F99258 LDP X30, X21, [X31 + 0x20]
	0x01F9925C LDP D9, D8, [X31 + 0x10]
	0x01F99260 LDP D11, D10, [X31], #0x40
	0x01F99264 RET
	0x01F99268 CBZ X20, 0x1F9929C
	0x01F9926C LDR X0, [X19 + 0x20]
	0x01F99270 CBZ X0, 0x1F9929C
	0x01F99274 LDR V8, [X20 + 0x110]
	0x01F99278 MOV X1, X31
	0x01F9927C BL 0x3E24614
	0x01F99280 FDIV S0, S8, S0
	0x01F99284 MOV X0, X19
	0x01F99288 LDP X20, X19, [X31 + 0x30]
	0x01F9928C LDP X30, X21, [X31 + 0x20]
	0x01F99290 LDP D9, D8, [X31 + 0x10]
	0x01F99294 LDP D11, D10, [X31], #0x40
	0x01F99298 B 0x1F992A0
	0x01F9929C BL 0x1C16F20
	0x01F992A0 STR D8, [X31 - 0x20]!
	0x01F992A4 STP X30, X19, [X31 + 0x10]
	0x01F992A8 MOV X19, X0
	0x01F992AC LDR X0, [X0 + 0x38]
	0x01F992B0 CBZ X0, 0x1F992D4
	0x01F992B4 MOV X1, X31
	0x01F992B8 MOV V8.16B, V0.16B
	0x01F992BC BL 0x3C3E90C
	0x01F992C0 MOV X0, X19
	0x01F992C4 LDP X30, X19, [X31 + 0x10]
	0x01F992C8 FSUB S0, S1, S8
	0x01F992CC LDR V8, [X31], #0x20
	0x01F992D0 B 0x1F994D8
	0x01F992D4 BL 0x1C16F20
	0x01F992D8 STP D11, D10, [X31 - 0x40]!
	0x01F992DC STP D9, D8, [X31 + 0x10]
	0x01F992E0 STP X30, X21, [X31 + 0x20]
	0x01F992E4 STP X20, X19, [X31 + 0x30]
	0x01F992E8 ADRP X20, 0x2440000
	0x01F992EC LDRB W8, [X20 + 0x772]
	0x01F992F0 MOV X19, X0
	0x01F992F4 TBNZ X8, 0x0, 0x1F9930C
	0x01F992F8 ADRP X0, 0x2181000
	0x01F992FC LDR X0, [X0 + 0xC70]
	0x01F99300 BL 0x1C16CF4
	0x01F99304 MOVZ W8, 0x1
	0x01F99308 STRB W8, [X20 + 0x772]
	0x01F9930C LDR X0, [X19 + 0x68]
	0x01F99310 CBZ X0, 0x1F993D4
	0x01F99314 BL 0x1F99154
	0x01F99318 TBNZ X0, 0x0, 0x1F993FC
	0x01F9931C LDR X1, [X19 + 0x30]
	0x01F99320 MOV X0, X19
	0x01F99324 BL 0x1F99414
	0x01F99328 TBNZ X0, 0x0, 0x1F99334
	0x01F9932C MOV X0, X19
	0x01F99330 BL 0x1F994B4
	0x01F99334 LDR W8, [X19 + 0x74]
	0x01F99338 CMP W8, 0x2
	0x01F9933C B.NE 0x1F993F8
	0x01F99340 LDR X0, [X19 + 0x38]
	0x01F99344 CBZ X0, 0x1F993D4
	0x01F99348 MOV X1, X31
	0x01F9934C BL 0x3C3E90C
	0x01F99350 LDR X0, [X19 + 0x40]
	0x01F99354 CBZ X0, 0x1F993D4
	0x01F99358 ADRP X21, 0x2181000

ISIL:
	001 Move [X31-80], D9
	002 Move [X31-72], D8
	003 Move [X31+16], X30
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X23, 0x2441000
	011 Move W8, [X23+1905]
	012 Move X21, X3
	013 Move W22, W2
	014 Move X19, X1
	015 Move X20, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {31}
	020 Move X0, 0x2182000
	021 Move X0, [X0+3704]
	022 Call 0x1C17CF4
	023 Move X0, 0x2182000
	024 Move X0, [X0+3712]
	025 Call 0x1C17CF4
	026 Move X0, 0x2182000
	027 Move X0, [X0+3632]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X23+1905], W8
	031 Move X23, [X20+48]
	032 Move X0, X20
	033 Move [X20+112], W22
	034 Call FusionStatsCanvas.GetDefinedAnchorPosition, X0
	035 Compare X23, 0
	036 JumpIfEqual {142}
	037 Move X22, 0x2182000
	038 Move X22, [X22+3712]
	039 Move X0, X23
	040 Move X1, X31
	041 Call RectTransform.set_anchoredPosition, X0, X1
	042 Move X8, [X22]
	043 Move X22, [X20+48]
	044 Move W9, 3
	045 Move X8, [X8+184]
	046 Move W8, [X8]
	047 NotImplemented "Instruction CMP not yet implemented."
	048 NotImplemented "Instruction CSEL not yet implemented."
	049 Compare X22, 0
	050 JumpIfEqual {142}
	051 Move X0, X22
	052 Move X1, X31
	053 Call RectTransform.get_anchoredPosition, X0
	054 Move X24, 0x2441000
	055 Move W8, [X24+1933]
	056 Move V8, V0
	057 Move V9, V1
	058 Compare W8, 0
	059 JumpIfNotEqual {65}
	060 Move X0, 0x2163000
	061 Move X0, [X0+3848]
	062 Call 0x1C17CF4
	063 Move W8, 1
	064 Move [X24+1933], W8
	065 Move X8, 0x2163000
	066 Move X8, [X8+3848]
	067 Move W9, 0x42480000
	068 NotImplemented "Instruction SCVTF not yet implemented."
	069 Move S3, W9
	070 Move X8, [X8]
	071 Multiply S2, S2, S3
	072 Move X0, X22
	073 Move X1, X31
	074 Move X8, [X8+184]
	075 Move S0, [X8+24]
	076 Move S1, [X8+28]
	077 Multiply S0, S2, S0
	078 Multiply S1, S2, S1
	079 Add S0, S8, S0
	080 Add S1, S9, S1
	081 Call RectTransform.set_anchoredPosition, X0, X1
	082 Move X8, [X20+96]
	083 Compare X8, 0
	084 JumpIfEqual {142}
	085 Move X0, [X8+256]
	086 Compare X0, 0
	087 JumpIfEqual {142}
	088 Move X1, X31
	089 Call UnityEventBase.RemoveAllListeners, X0
	090 Move X8, [X20+96]
	091 Compare X8, 0
	092 JumpIfEqual {142}
	093 Move X0, [X8+256]
	094 Compare X0, 0
	095 JumpIfEqual {142}
	096 Move X1, X21
	097 Move X2, X31
	098 Call UnityEvent.AddListener, X0, X1
	099 Move X8, [X20+88]
	100 Compare X8, 0
	101 JumpIfEqual {142}
	102 Move X0, [X8+256]
	103 Compare X0, 0
	104 JumpIfEqual {142}
	105 Move X1, X31
	106 Call UnityEventBase.RemoveAllListeners, X0
	107 Move X8, [X20+88]
	108 Compare X8, 0
	109 JumpIfEqual {142}
	110 Move X9, 0x2182000
	111 Move X9, [X9+3632]
	112 Move X22, 0x2182000
	113 Move X21, [X8+256]
	114 Move X0, [X9]
	115 Move X22, [X22+3704]
	116 Call 0x1C17F10
	117 Move X2, [X22]
	118 Move X1, X20
	119 Move X3, X31
	120 Move X22, X0
	121 Call UnityAction..ctor, X0, X1, X2
	122 Compare X21, 0
	123 JumpIfEqual {142}
	124 Move X0, X21
	125 Move X1, X22
	126 Move X2, X31
	127 Call UnityEvent.AddListener, X0, X1
	128 Move X8, [X20+104]
	129 Compare X8, 0
	130 JumpIfEqual {142}
	131 Move [X8+88], X19
	132 Move X20, [X31+64]
	133 Move X19, [X31+72]
	134 Move X22, [X31+48]
	135 Move X21, [X31+56]
	136 Move X24, [X31+32]
	137 Move X23, [X31+40]
	138 Move X30, [X31+16]
	139 Move D9, [X31+80]
	140 Move D8, [X31+88]
	141 Return 
	142 Call 0x1C17F20

Method: System.Void OnBeginDrag(UnityEngine.EventSystems.PointerEventData eventData)

Disassembly:
	0x01F9A098 BL 0x1C16F20
	0x01F9A09C B 0x1F9A0C8
	0x01F9A0A0 B 0x1F9A0C8
	0x01F9A0A4 B 0x1F9A0C8
	0x01F9A0A8 B 0x1F9A0C8
	0x01F9A0AC B 0x1F9A0C8
	0x01F9A0B0 B 0x1F9A0C8
	0x01F9A0B4 B 0x1F9A0C8
	0x01F9A0B8 B 0x1F9A0C8
	0x01F9A0BC B 0x1F9A0C8
	0x01F9A0C0 B 0x1F9A0C8
	0x01F9A0C4 B 0x1F9A0C8
	0x01F9A0C8 MOV X19, X0
	0x01F9A0CC CMP W1, 0x1
	0x01F9A0D0 B.NE 0x1F9A104
	0x01F9A0D4 MOV X0, X19
	0x01F9A0D8 BL 0x3EB1AD0
	0x01F9A0DC LDR X20, [X0]
	0x01F9A0E0 BL 0x3EB1AE0
	0x01F9A0E4 ADRP X8, 0x2160000
	0x01F9A0E8 LDR X8, [X8 + 0x940]
	0x01F9A0EC ADD X0, X31, 0x20
	0x01F9A0F0 LDR X1, [X8]
	0x01F9A0F4 BL 0x2BC434C
	0x01F9A0F8 CBZ X20, 0x1F9A064
	0x01F9A0FC MOV X0, X20
	0x01F9A100 BL 0x1C16F18
	0x01F9A104 MOV X20, X31
	0x01F9A108 B 0x1F9A110
	0x01F9A10C MOV X19, X0
	0x01F9A110 ADRP X8, 0x2160000
	0x01F9A114 LDR X8, [X8 + 0x940]
	0x01F9A118 LDR X1, [X8]
	0x01F9A11C ADD X0, X31, 0x20
	0x01F9A120 BL 0x2BC434C
	0x01F9A124 CBNZ X20, 0x1F9A130
	0x01F9A128 MOV X0, X19
	0x01F9A12C BL 0x1D2C690
	0x01F9A130 MOV X0, X20
	0x01F9A134 BL 0x1C16F18
	0x01F9A138 BL 0x1990590
	0x01F9A13C MOV X1, X31
	0x01F9A140 B 0x33BDD8C
	0x01F9A144 STP X30, X23, [X31 - 0x30]!
	0x01F9A148 STP X22, X21, [X31 + 0x10]
	0x01F9A14C STP X20, X19, [X31 + 0x20]
	0x01F9A150 ADRP X20, 0x243F000

ISIL:
	001 Move [X31-48], D9
	002 Move [X31-40], D8
	003 Move [X31+16], X30
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X19, X0
	008 Move X0, [X0+104]
	009 Compare X0, 0
	010 JumpIfEqual {54}
	011 Move X20, X1
	012 Call FusionStatsConfig.get_IsWorldAnchored, X0
	013 Move TEMP, X0
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {47}
	017 Move W8, [X19+116]
	018 Compare W8, 0
	019 JumpIfNotEqual {47}
	020 Compare X20, 0
	021 JumpIfEqual {54}
	022 Move X21, [X19+72]
	023 Compare X21, 0
	024 JumpIfEqual {54}
	025 Move V1, [X20+280]
	026 Move V0, [X20+276]
	027 Move S2, W31
	028 Move X0, X21
	029 Move X1, X31
	030 Call Transform.InverseTransformPoint, X0, X1
	031 Move X0, X21
	032 Move X1, X31
	033 Move V8, V0
	034 Move V9, V1
	035 Call RectTransform.get_rect, X0
	036 Add S3, S1, S3
	037 NotImplemented "Instruction FCMP not yet implemented."
	038 NotImplemented "Instruction FCMP not yet implemented."
	039 NotImplemented "Instruction FCMP not yet implemented."
	040 Add S0, S0, S2
	041 NotImplemented "Instruction FCMP not yet implemented."
	042 Move W8, [X20+328]
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Move W8, 2
	045 Move W8, 1
	046 Move [X19+116], W8
	047 Move X20, [X31+32]
	048 Move X19, [X31+40]
	049 Move X30, [X31+16]
	050 Move X21, [X31+24]
	051 Move D9, [X31+48]
	052 Move D8, [X31+56]
	053 Return 
	054 Call 0x1C17F20

Method: System.Void OnDrag(UnityEngine.EventSystems.PointerEventData eventData)

Disassembly:
	0x01F9A1B4 MOV X3, X31
	0x01F9A1B8 MOV X20, X0
	0x01F9A1BC BL 0x3314368
	0x01F9A1C0 LDR X0, [X23]
	0x01F9A1C4 LDR W8, [X0 + 0xE0]
	0x01F9A1C8 CBNZ W8, 0x1F9A1D0
	0x01F9A1CC BL 0x1C16DFC
	0x01F9A1D0 MOV X0, X20
	0x01F9A1D4 BL 0x1F99B30
	0x01F9A1D8 LDR X0, [X22]
	0x01F9A1DC BL 0x1C16F10
	0x01F9A1E0 LDR X2, [X21]
	0x01F9A1E4 MOV X1, X19
	0x01F9A1E8 MOV X3, X31
	0x01F9A1EC MOV X20, X0
	0x01F9A1F0 BL 0x3314368
	0x01F9A1F4 MOV X0, X20
	0x01F9A1F8 BL 0x1F99A54
	0x01F9A1FC MOV X0, X19
	0x01F9A200 LDP X20, X19, [X31 + 0x20]
	0x01F9A204 LDP X22, X21, [X31 + 0x10]
	0x01F9A208 LDP X30, X23, [X31], #0x30
	0x01F9A20C B 0x1F99DD8
	0x01F9A210 STP X30, X23, [X31 - 0x30]!
	0x01F9A214 STP X22, X21, [X31 + 0x10]
	0x01F9A218 STP X20, X19, [X31 + 0x20]
	0x01F9A21C ADRP X22, 0x243F000
	0x01F9A220 ADRP X23, 0x215A000
	0x01F9A224 ADRP X20, 0x2180000
	0x01F9A228 ADRP X21, 0x2180000
	0x01F9A22C LDRB W8, [X22 + 0x77E]
	0x01F9A230 LDR X23, [X23 + 0xE70]
	0x01F9A234 LDR X20, [X20 + 0xF40]
	0x01F9A238 LDR X21, [X21 + 0xF10]
	0x01F9A23C MOV X19, X0
	0x01F9A240 TBNZ X8, 0x0, 0x1F9A270
	0x01F9A244 ADRP X0, 0x215A000
	0x01F9A248 LDR X0, [X0 + 0xE70]
	0x01F9A24C BL 0x1C16CF4
	0x01F9A250 ADRP X0, 0x2180000
	0x01F9A254 LDR X0, [X0 + 0xF40]
	0x01F9A258 BL 0x1C16CF4
	0x01F9A25C ADRP X0, 0x2180000
	0x01F9A260 LDR X0, [X0 + 0xF10]
	0x01F9A264 BL 0x1C16CF4
	0x01F9A268 MOVZ W8, 0x1
	0x01F9A26C STRB W8, [X22 + 0x77E]
	0x01F9A270 LDR X0, [X23]
	0x01F9A274 BL 0x1C16F10
	0x01F9A278 LDR X2, [X20]
	0x01F9A27C MOV X1, X19
	0x01F9A280 MOV X3, X31
	0x01F9A284 MOV X20, X0
	0x01F9A288 BL 0x3314368
	0x01F9A28C LDR X0, [X21]
	0x01F9A290 LDR W8, [X0 + 0xE0]
	0x01F9A294 CBNZ W8, 0x1F9A29C
	0x01F9A298 BL 0x1C16DFC
	0x01F9A29C MOV X0, X20

ISIL:
	001 Move [X31-64], D11
	002 Move [X31-56], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X19, X0
	010 Move X0, [X0+104]
	011 Compare X0, 0
	012 JumpIfEqual {82}
	013 Move X20, X1
	014 Call FusionStatsConfig.get_IsWorldAnchored, X0
	015 Move TEMP, X0
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {55}
	019 Move W8, [X19+116]
	020 NotImplemented "Instruction CMP not yet implemented."
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Move X21, [X19+48]
	023 Compare X21, 0
	024 JumpIfEqual {82}
	025 Move X0, X21
	026 Move X1, X31
	027 Call RectTransform.get_anchoredPosition, X0
	028 Compare X20, 0
	029 JumpIfEqual {82}
	030 Move X0, [X19+32]
	031 Compare X0, 0
	032 JumpIfEqual {82}
	033 Move V10, [X20+272]
	034 Move V11, [X20+268]
	035 Move X1, X31
	036 Move V8, V0
	037 Move V9, V1
	038 Call Canvas.get_scaleFactor, X0
	039 NotImplemented "Instruction FDIV not yet implemented."
	040 NotImplemented "Instruction FDIV not yet implemented."
	041 Add S0, S8, S1
	042 Add S1, S9, S2
	043 Move X0, X21
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X30, [X31+32]
	047 Move X21, [X31+40]
	048 Move D9, [X31+16]
	049 Move D8, [X31+24]
	050 Move X1, X31
	051 Move D11, [X31+64]
	052 Move D10, [X31+72]
	053 Call RectTransform.set_anchoredPosition, X0, X1
	054 Return 
	055 Move X20, [X31+48]
	056 Move X19, [X31+56]
	057 Move X30, [X31+32]
	058 Move X21, [X31+40]
	059 Move D9, [X31+16]
	060 Move D8, [X31+24]
	061 Move D11, [X31+64]
	062 Move D10, [X31+72]
	063 Return 
	064 Compare X20, 0
	065 JumpIfEqual {82}
	066 Move X0, [X19+32]
	067 Compare X0, 0
	068 JumpIfEqual {82}
	069 Move V8, [X20+272]
	070 Move X1, X31
	071 Call Canvas.get_scaleFactor, X0
	072 NotImplemented "Instruction FDIV not yet implemented."
	073 Move X0, X19
	074 Move X20, [X31+48]
	075 Move X19, [X31+56]
	076 Move X30, [X31+32]
	077 Move X21, [X31+40]
	078 Move D9, [X31+16]
	079 Move D8, [X31+24]
	080 Move D11, [X31+64]
	081 Move D10, [X31+72]
	082 Call 0x1C17F20

Method: System.Void OnEndDrag(UnityEngine.EventSystems.PointerEventData eventData)

Disassembly:
	0x01F9A2D8 ADRP X19, 0x2160000
	0x01F9A2DC ADRP X20, 0x2180000
	0x01F9A2E0 LDRB W8, [X21 + 0x77F]
	0x01F9A2E4 LDR X22, [X22 + 0x930]
	0x01F9A2E8 LDR X19, [X19 + 0x938]
	0x01F9A2EC LDR X20, [X20 + 0xF10]
	0x01F9A2F0 TBNZ X8, 0x0, 0x1F9A320
	0x01F9A2F4 ADRP X0, 0x2180000
	0x01F9A2F8 LDR X0, [X0 + 0xF10]
	0x01F9A2FC BL 0x1C16CF4
	0x01F9A300 ADRP X0, 0x2160000
	0x01F9A304 LDR X0, [X0 + 0x938]
	0x01F9A308 BL 0x1C16CF4
	0x01F9A30C ADRP X0, 0x2160000
	0x01F9A310 LDR X0, [X0 + 0x930]
	0x01F9A314 BL 0x1C16CF4
	0x01F9A318 MOVZ W8, 0x1
	0x01F9A31C STRB W8, [X21 + 0x77F]
	0x01F9A320 LDR X0, [X22]
	0x01F9A324 BL 0x1C16F10
	0x01F9A328 LDR X1, [X19]
	0x01F9A32C MOV X19, X0
	0x01F9A330 BL 0x301B7C4
	0x01F9A334 LDR X8, [X20]
	0x01F9A338 LDP X22, X21, [X31 + 0x10]
	0x01F9A33C LDR X8, [X8 + 0xB8]
	0x01F9A340 STR X19, [X8]
	0x01F9A344 LDP X20, X19, [X31 + 0x20]
	0x01F9A348 LDR X30, [X31], #0x30
	0x01F9A34C RET
	0x01F9A350 STR X30, [X31 - 0x10]!
	0x01F9A354 LDR X8, [X0 + 0x18]
	0x01F9A358 CBZ X8, 0x1F9A36C
	0x01F9A35C LDR X1, [X0 + 0x10]
	0x01F9A360 MOV X0, X8
	0x01F9A364 LDR X30, [X31], #0x10
	0x01F9A368 B 0x1F98654
	0x01F9A36C BL 0x1C16F20
	0x01F9A370 LDR W0, [X0 + 0x11C]
	0x01F9A374 RET
	0x01F9A378 SUB X31, X31, 0x50
	0x01F9A37C STR X30, [X31 + 0x20]
	0x01F9A380 STP X22, X21, [X31 + 0x30]
	0x01F9A384 STP X20, X19, [X31 + 0x40]
	0x01F9A388 ADRP X22, 0x243F000
	0x01F9A38C ADRP X21, 0x2180000
	0x01F9A390 LDRB W8, [X22 + 0x780]
	0x01F9A394 LDR X21, [X21 + 0xE70]
	0x01F9A398 MOV W20, W1
	0x01F9A39C MOV X19, X0
	0x01F9A3A0 TBNZ X8, 0x0, 0x1F9A3D0
	0x01F9A3A4 ADRP X0, 0x2180000
	0x01F9A3A8 LDR X0, [X0 + 0xF48]
	0x01F9A3AC BL 0x1C16CF4
	0x01F9A3B0 ADRP X0, 0x2180000
	0x01F9A3B4 LDR X0, [X0 + 0xE70]
	0x01F9A3B8 BL 0x1C16CF4
	0x01F9A3BC ADRP X0, 0x2159000
	0x01F9A3C0 LDR X0, [X0 + 0xDD8]
	0x01F9A3C4 BL 0x1C16CF4
	0x01F9A3C8 MOVZ W8, 0x1
	0x01F9A3CC STRB W8, [X22 + 0x780]
	0x01F9A3D0 MOV X0, X19
	0x01F9A3D4 MOV W1, W20
	0x01F9A3D8 MOV X2, X31
	0x01F9A3DC STR X31, [X31 + 0x28]
	0x01F9A3E0 BL 0x1F94A64
	0x01F9A3E4 LDR X8, [X21]
	0x01F9A3E8 MOVN X9, 0x0
	0x01F9A3EC LDR X20, [X19 + 0x120]
	0x01F9A3F0 ADD X0, X31, 0x8
	0x01F9A3F4 STP X8, X9, [X31 + 0x8]
	0x01F9A3F8 LDR W8, [X19 + 0x11C]
	0x01F9A3FC MOV X1, X31
	0x01F9A400 STR W8, [X31 + 0x18]
	0x01F9A404 BL 0x33B162C
	0x01F9A408 CBZ X20, 0x1F9A4A8
	0x01F9A40C LDR X8, [X20]
	0x01F9A410 MOV X1, X0

ISIL:
	001 Move [X31-64], D11
	002 Move [X31-56], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X20, 0x2440000
	010 Move W8, [X20+1906]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x2181000
	017 Move X0, [X0+3184]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X20+1906], W8
	021 Move X0, [X19+104]
	022 Compare X0, 0
	023 JumpIfEqual {79}
	024 Call FusionStatsConfig.get_IsWorldAnchored, X0
	025 Move TEMP, X0
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {88}
	029 Move X1, [X19+48]
	030 Move X0, X19
	031 Call FusionStatsCanvas.CheckDraggableRectVisibility, X0, X1
	032 Move TEMP, X0
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfEqual {38}
	036 Move X0, X19
	037 Call FusionStatsCanvas.SnapPanelBackToOriginPos, X0
	038 Move W8, [X19+116]
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Move X0, [X19+56]
	041 Compare X0, 0
	042 JumpIfEqual {79}
	043 Move X1, X31
	044 Call RectTransform.get_sizeDelta, X0
	045 Move X0, [X19+64]
	046 Compare X0, 0
	047 JumpIfEqual {79}
	048 Move X21, 0x2181000
	049 Move X21, [X21+3184]
	050 Move V9, V1
	051 Move W20, W31
	052 Move S8, W31
	053 Move S10, 10
	054 Move S11, W31
	055 Move X1, X31
	056 Call Transform.get_childCount, X0
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Move X0, [X19+64]
	059 Compare X0, 0
	060 JumpIfEqual {79}
	061 Move W1, W20
	062 Move X2, X31
	063 Call Transform.GetChild, X0, X1
	064 Compare X0, 0
	065 JumpIfEqual {79}
	066 Move X1, [X21]
	067 Move X8, [X0]
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Move X1, X31
	070 Call RectTransform.get_sizeDelta, X0
	071 Add S0, S1, S10
	072 Add S0, S11, S0
	073 NotImplemented "Instruction FCMP not yet implemented."
	074 Move X0, [X19+64]
	075 Add W20, W20, 1
	076 Move V11, V0
	077 Compare X0, 0
	078 JumpIfNotEqual {55}
	079 Call 0x1C17F20
	080 Subtract S8, S9, S11
	081 Subtract S0, S0, S9
	082 NotImplemented "Instruction FCMP not yet implemented."
	083 NotImplemented "Instruction FNEG not yet implemented."
	084 Move X0, X19
	085 Move V0, V8
	086 Call FusionStatsCanvas.UpdateContentContainerHeight, X0, V0
	087 Move [X19+116], W31
	088 Move X20, [X31+48]
	089 Move X19, [X31+56]
	090 Move X30, [X31+32]
	091 Move X21, [X31+40]
	092 Move D9, [X31+16]
	093 Move D8, [X31+24]
	094 Move D11, [X31+64]
	095 Move D10, [X31+72]
	096 Return 
	097 Call 0x1C181E0

Method: System.Void SnapPanelBackToOriginPos()

Disassembly:
	0x01F9A4B4 CBZ X2, 0x1F9A4EC
	0x01F9A4B8 MOV X20, X0
	0x01F9A4BC LDR W0, [X0 + 0x11C]
	0x01F9A4C0 LDR X1, [X2 + 0x18]
	0x01F9A4C4 MOV X2, X31
	0x01F9A4C8 MOV X19, X3
	0x01F9A4CC BL 0x1F94760
	0x01F9A4D0 LDR X8, [X20]
	0x01F9A4D4 MOV X0, X20

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, [X0+48]
	004 Call FusionStatsCanvas.GetDefinedAnchorPosition, X0
	005 Compare X19, 0
	006 JumpIfEqual {13}
	007 Move X0, X19
	008 Move X1, X31
	009 Move X30, [X31+16]
	010 Move X19, [X31+24]
	011 Call RectTransform.set_anchoredPosition, X0, X1
	012 Return 
	013 Call 0x1C17F20

Method: System.Void UpdateContentContainerHeight(System.Single yDelta)

Disassembly:
	0x01F9A2A0 LDP X20, X19, [X31 + 0x20]
	0x01F9A2A4 LDP X22, X21, [X31 + 0x10]
	0x01F9A2A8 LDP X30, X23, [X31], #0x30
	0x01F9A2AC B 0x1F99B30
	0x01F9A2B0 MOVZ W8, 0xD70A
	0x01F9A2B4 MOVK W8, 0x3BA30000
	0x01F9A2B8 MOV X1, X31
	0x01F9A2BC STR W8, [X0 + 0x50]
	0x01F9A2C0 B 0x3C36C30
	0x01F9A2C4 STR X30, [X31 - 0x30]!
	0x01F9A2C8 STP X22, X21, [X31 + 0x10]
	0x01F9A2CC STP X20, X19, [X31 + 0x20]
	0x01F9A2D0 ADRP X21, 0x243F000
	0x01F9A2D4 ADRP X22, 0x2160000

ISIL:
	001 Move [X31-32], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X19
	004 Move X19, X0
	005 Move X0, [X0+56]
	006 Compare X0, 0
	007 JumpIfEqual {18}
	008 Move X1, X31
	009 Move V8, V0
	010 Call RectTransform.get_sizeDelta, X0
	011 Move X0, X19
	012 Move X30, [X31+16]
	013 Move X19, [X31+24]
	014 Subtract S0, S1, S8
	015 Move V8, [X31+32]
	016 Call FusionStatsCanvas.SetContentPanelHeight, X0, V0
	017 Return 
	018 Call 0x1C17F20

Method: System.Void ToggleHide()

Disassembly:
	0x01F9A5A4 LDRB W1, [X31 + 0x10]
	0x01F9A5A8 LDRB W2, [X31 + 0xC]
	0x01F9A5AC BL 0x1F95AB0
	0x01F9A5B0 LDR X8, [X19]
	0x01F9A5B4 LDR W1, [X31 + 0x8]
	0x01F9A5B8 MOV X0, X19
	0x01F9A5BC LDP X9, X2, [X8 + 0x178]
	0x01F9A5C0 BLR X9
	0x01F9A5C4 LDP X30, X19, [X31 + 0x20]
	0x01F9A5C8 ADD X31, X31, 0x30
	0x01F9A5CC RET
	0x01F9A5D0 STP X30, X23, [X31 - 0x30]!
	0x01F9A5D4 STP X22, X21, [X31 + 0x10]
	0x01F9A5D8 STP X20, X19, [X31 + 0x20]
	0x01F9A5DC ADRP X21, 0x243F000
	0x01F9A5E0 ADRP X22, 0x2180000
	0x01F9A5E4 ADRP X20, 0x2180000
	0x01F9A5E8 LDRB W8, [X21 + 0x781]
	0x01F9A5EC LDR X22, [X22 + 0xF50]
	0x01F9A5F0 LDR X20, [X20 + 0xF58]
	0x01F9A5F4 MOV X19, X0
	0x01F9A5F8 TBNZ X8, 0x0, 0x1F9A640
	0x01F9A5FC ADRP X0, 0x2180000
	0x01F9A600 LDR X0, [X0 + 0xF60]
	0x01F9A604 BL 0x1C16CF4
	0x01F9A608 ADRP X0, 0x2180000
	0x01F9A60C LDR X0, [X0 + 0xF58]
	0x01F9A610 BL 0x1C16CF4
	0x01F9A614 ADRP X0, 0x2180000
	0x01F9A618 LDR X0, [X0 + 0xF50]
	0x01F9A61C BL 0x1C16CF4
	0x01F9A620 ADRP X0, 0x2166000
	0x01F9A624 LDR X0, [X0 + 0xE28]
	0x01F9A628 BL 0x1C16CF4
	0x01F9A62C ADRP X0, 0x2180000
	0x01F9A630 LDR X0, [X0 + 0xF68]
	0x01F9A634 BL 0x1C16CF4
	0x01F9A638 MOVZ W8, 0x1
	0x01F9A63C STRB W8, [X21 + 0x781]
	0x01F9A640 LDR X0, [X22]
	0x01F9A644 BL 0x1C16F10
	0x01F9A648 LDR X1, [X20]
	0x01F9A64C MOV X20, X0
	0x01F9A650 BL 0x2A44560
	0x01F9A654 CBZ X20, 0x1F9A7A0
	0x01F9A658 ADRP X22, 0x2180000
	0x01F9A65C ADRP X23, 0x2180000
	0x01F9A660 LDR X22, [X22 + 0xF68]
	0x01F9A664 LDR X23, [X23 + 0xF60]
	0x01F9A668 ADRP X21, 0x2166000
	0x01F9A66C MOVZ W1, 0x1
	0x01F9A670 LDR X2, [X22]
	0x01F9A674 LDR X3, [X23]
	0x01F9A678 LDR X21, [X21 + 0xE28]
	0x01F9A67C MOV X0, X20
	0x01F9A680 BL 0x2A44E18
	0x01F9A684 LDR X2, [X22]
	0x01F9A688 LDR X3, [X23]
	0x01F9A68C MOVZ W1, 0x2
	0x01F9A690 MOV X0, X20
	0x01F9A694 BL 0x2A44E18
	0x01F9A698 LDR X2, [X22]
	0x01F9A69C LDR X3, [X23]
	0x01F9A6A0 MOVZ W1, 0x40000
	0x01F9A6A4 MOV X0, X20

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, X0
	007 Move X0, [X0+56]
	008 Compare X0, 0
	009 JumpIfEqual {83}
	010 Move X1, X31
	011 Call Component.get_gameObject, X0
	012 Compare X0, 0
	013 JumpIfEqual {83}
	014 Move X1, X31
	015 Call GameObject.get_activeSelf, X0
	016 Move X8, [X19+88]
	017 Compare X8, 0
	018 JumpIfEqual {83}
	019 Move W20, W0
	020 Move X0, X8
	021 Move X1, X31
	022 Call Component.get_transform, X0
	023 Move X21, X0
	024 Move TEMP, X20
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfNotEqual {34}
	028 Move X8, -21688320
	029 Move V2, [X8+384]
	030 Move S0, W31
	031 Move S1, W31
	032 Move X0, X31
	033 Call Quaternion.Internal_FromEulerRad, X0
	034 Move X22, 0x243F000
	035 Move W8, [X22+1939]
	036 Compare W8, 0
	037 JumpIfNotEqual {43}
	038 Move X0, 0x215B000
	039 Move X0, [X0+1448]
	040 Call 0x1C17CF4
	041 Move W8, 1
	042 Move [X22+1939], W8
	043 Move X8, 0x215B000
	044 Move X8, [X8+1448]
	045 Move X8, [X8]
	046 Move X8, [X8+184]
	047 Move S0, [X8]
	048 Move S1, [X8+4]
	049 Move S2, [X8+8]
	050 Move S3, [X8+12]
	051 Compare X21, 0
	052 JumpIfEqual {83}
	053 Move X0, X21
	054 Move X1, X31
	055 Call Transform.set_rotation, X0, X1
	056 Move X0, [X19+56]
	057 Compare X0, 0
	058 JumpIfEqual {83}
	059 Move X1, X31
	060 Call Component.get_gameObject, X0
	061 Compare X0, 0
	062 JumpIfEqual {83}
	063 Xor W20, W20, 1
	064 And W1, W20, 1
	065 Move X2, X31
	066 Call GameObject.SetActive, X0, X1
	067 Move X0, [X19+72]
	068 Compare X0, 0
	069 JumpIfEqual {83}
	070 Move X1, X31
	071 Call Component.get_gameObject, X0
	072 Compare X0, 0
	073 JumpIfEqual {83}
	074 And W1, W20, 1
	075 Move X20, [X31+32]
	076 Move X19, [X31+40]
	077 Move X22, [X31+16]
	078 Move X21, [X31+24]
	079 Move X2, X31
	080 Move X30, [X31+48]
	081 Call GameObject.SetActive, X0, X1
	082 Return 
	083 Call 0x1C17F20

Method: System.Boolean CheckDraggableRectVisibility(UnityEngine.RectTransform rectTransform)

Disassembly:
	0x01F9A414 MOV X0, X20
	0x01F9A418 LDR X9, [X8 + 0x5E8]
	0x01F9A41C LDR X2, [X8 + 0x5F0]
	0x01F9A420 BLR X9
	0x01F9A424 LDR X0, [X19 + 0x128]
	0x01F9A428 CBZ X0, 0x1F9A4A8
	0x01F9A42C ADRP X8, 0x2180000
	0x01F9A430 LDR X8, [X8 + 0xF48]
	0x01F9A434 LDR W1, [X19 + 0x11C]
	0x01F9A438 ADD X2, X31, 0x28
	0x01F9A43C LDR X3, [X8]
	0x01F9A440 BL 0x2A46818
	0x01F9A444 TBZ X0, 0x0, 0x1F9A494
	0x01F9A448 LDR X19, [X19 + 0x120]
	0x01F9A44C CBZ X19, 0x1F9A4A8
	0x01F9A450 LDR X8, [X19]
	0x01F9A454 MOV X0, X19
	0x01F9A458 LDR X9, [X8 + 0x5D8]
	0x01F9A45C LDR X1, [X8 + 0x5E0]
	0x01F9A460 BLR X9
	0x01F9A464 ADRP X8, 0x2159000
	0x01F9A468 LDR X2, [X31 + 0x28]
	0x01F9A46C LDR X8, [X8 + 0xDD8]
	0x01F9A470 MOV X3, X31
	0x01F9A474 LDR X1, [X8]
	0x01F9A478 BL 0x32274B8
	0x01F9A47C LDR X8, [X19]
	0x01F9A480 MOV X1, X0
	0x01F9A484 MOV X0, X19
	0x01F9A488 LDR X9, [X8 + 0x5E8]
	0x01F9A48C LDR X2, [X8 + 0x5F0]
	0x01F9A490 BLR X9
	0x01F9A494 LDP X20, X19, [X31 + 0x40]
	0x01F9A498 LDP X22, X21, [X31 + 0x30]
	0x01F9A49C LDR X30, [X31 + 0x20]
	0x01F9A4A0 ADD X31, X31, 0x50
	0x01F9A4A4 RET
	0x01F9A4A8 BL 0x1C16F20
	0x01F9A4AC STR X30, [X31 - 0x20]!
	0x01F9A4B0 STP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-48], D9
	002 Move [X31-40], D8
	003 Move [X31+16], X30
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Compare X1, 0
	007 JumpIfEqual {43}
	008 Move X20, X1
	009 Move X19, X0
	010 Move X0, X1
	011 Move X1, X31
	012 Call RectTransform.get_anchoredPosition, X0
	013 Move X0, X20
	014 Move X1, X31
	015 Move V9, V0
	016 Move V8, V1
	017 Call RectTransform.get_rect, X0
	018 Move X8, [X19+40]
	019 Compare X8, 0
	020 JumpIfEqual {43}
	021 Move V1, [X8+44]
	022 Move S0, 0.5
	023 Multiply S2, S2, S0
	024 NotImplemented "Instruction FABS not yet implemented."
	025 Multiply S1, S1, S0
	026 Add S1, S2, S1
	027 NotImplemented "Instruction FCMP not yet implemented."
	028 Move V1, [X8+48]
	029 Multiply S0, S1, S0
	030 Add S0, S3, S0
	031 NotImplemented "Instruction FCMP not yet implemented."
	032 Move S0, -0.5
	033 Multiply S0, S1, S0
	034 NotImplemented "Instruction FCMP not yet implemented."
	035 NotImplemented "Instruction CSET not yet implemented."
	036 Move W0, W31
	037 Move X20, [X31+32]
	038 Move X19, [X31+40]
	039 Move X30, [X31+16]
	040 Move D9, [X31+48]
	041 Move D8, [X31+56]
	042 Return X0
	043 Call 0x1C17F20

Method: System.Void SetContentPanelHeight(System.Single value)

Disassembly:
	0x01F9A4D8 MOV X1, X19
	0x01F9A4DC LDP X20, X19, [X31 + 0x10]
	0x01F9A4E0 LDP X3, X2, [X8 + 0x1A8]
	0x01F9A4E4 LDR X30, [X31], #0x20
	0x01F9A4E8 BR X3
	0x01F9A4EC BL 0x1C16F20
	0x01F9A4F0 STR X30, [X31 - 0x20]!
	0x01F9A4F4 STP X20, X19, [X31 + 0x10]
	0x01F9A4F8 LDP S0, S1, [X1 + 0x4]
	0x01F9A4FC LDR V2, [X1 + 0xC]
	0x01F9A500 MOV X19, X1
	0x01F9A504 MOV X1, X31
	0x01F9A508 MOV X20, X0
	0x01F9A50C BL 0x1F95A94
	0x01F9A510 LDRB W8, [X19 + 0x11]
	0x01F9A514 LDRB W9, [X19 + 0x10]
	0x01F9A518 MOV X0, X20
	0x01F9A51C MOV X3, X31
	0x01F9A520 AND W1, W8, 0x1
	0x01F9A524 AND W2, W9, 0x1
	0x01F9A528 BL 0x1F95AB0
	0x01F9A52C LDR W1, [X19 + 0x14]
	0x01F9A530 MOV X0, X20
	0x01F9A534 LDP X20, X19, [X31 + 0x10]
	0x01F9A538 MOV X2, X31
	0x01F9A53C LDR X30, [X31], #0x20
	0x01F9A540 B 0x1F95AD8
	0x01F9A544 SUB X31, X31, 0x30
	0x01F9A548 STP X30, X19, [X31 + 0x20]
	0x01F9A54C MOV W8, W1
	0x01F9A550 MOV X19, X0
	0x01F9A554 STR X31, [X31 + 0x18]
	0x01F9A558 STR W31, [X31 + 0x14]
	0x01F9A55C STRB W31, [X31 + 0x10]
	0x01F9A560 STRB W31, [X31 + 0xC]
	0x01F9A564 STR W31, [X31 + 0x8]
	0x01F9A568 STR W1, [X0 + 0x11C]
	0x01F9A56C ADD X1, X31, 0x18
	0x01F9A570 ADD X2, X31, 0x14
	0x01F9A574 ADD X3, X31, 0x10
	0x01F9A578 ADD X4, X31, 0xC
	0x01F9A57C ADD X5, X31, 0x8
	0x01F9A580 MOV W0, W8
	0x01F9A584 MOV X6, X31
	0x01F9A588 BL 0x1F944B4
	0x01F9A58C LDR X8, [X31 + 0x18]
	0x01F9A590 MOV X0, X19
	0x01F9A594 MOV X3, X31
	0x01F9A598 STR X8, [X19 + 0x108]
	0x01F9A59C LDR V0, [X31 + 0x14]
	0x01F9A5A0 STR S0, [X19 + 0x88]

ISIL:
	001 Move [X31-32], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move W8, 0x43160000
	006 Move V8, V0
	007 Move S0, W8
	008 NotImplemented "Instruction FCMP not yet implemented."
	009 Move X19, X0
	010 Move X0, X31
	011 Call Screen.get_height
	012 Move X8, [X19+32]
	013 Compare X8, 0
	014 JumpIfEqual {58}
	015 Move W20, W0
	016 Move X0, X8
	017 Move X1, X31
	018 Call Canvas.get_scaleFactor, X0
	019 NotImplemented "Instruction SCVTF not yet implemented."
	020 Move W8, 0xC2C80000
	021 NotImplemented "Instruction FDIV not yet implemented."
	022 Move S1, W8
	023 Add S1, S0, S1
	024 NotImplemented "Instruction FCMP not yet implemented."
	025 Move V0, V8
	026 Move V0, V1
	027 Move X0, [X19+56]
	028 Compare X0, 0
	029 JumpIfEqual {58}
	030 Move W1, 1
	031 Move X2, X31
	032 Call RectTransform.SetSizeWithCurrentAnchors, X0, X1, V0
	033 Move X0, [X19+56]
	034 Compare X0, 0
	035 JumpIfEqual {58}
	036 Move X1, X31
	037 Call Component.get_gameObject, X0
	038 Compare X0, 0
	039 JumpIfEqual {58}
	040 Move W1, W31
	041 Move X2, X31
	042 Call GameObject.SetActive, X0, X1
	043 Move X0, [X19+56]
	044 Compare X0, 0
	045 JumpIfEqual {58}
	046 Move X1, X31
	047 Call Component.get_gameObject, X0
	048 Compare X0, 0
	049 JumpIfEqual {58}
	050 Move X20, [X31+16]
	051 Move X19, [X31+24]
	052 Move X30, [X31+8]
	053 Move W1, 1
	054 Move X2, X31
	055 Move V8, [X31+32]
	056 Call GameObject.SetActive, X0, X1
	057 Return 
	058 Call 0x1C17F20

Method: System.Void AdaptContentHeightToGraphs()

Disassembly:
	0x01F9A6A8 BL 0x2A44E18
	0x01F9A6AC LDR X2, [X22]
	0x01F9A6B0 LDR X3, [X23]
	0x01F9A6B4 MOVZ W1, 0x80000
	0x01F9A6B8 MOV X0, X20
	0x01F9A6BC BL 0x2A44E18
	0x01F9A6C0 LDR X2, [X22]
	0x01F9A6C4 LDR X3, [X23]
	0x01F9A6C8 MOVZ W1, 0x8
	0x01F9A6CC MOV X0, X20
	0x01F9A6D0 BL 0x2A44E18
	0x01F9A6D4 LDR X2, [X22]
	0x01F9A6D8 LDR X3, [X23]
	0x01F9A6DC MOVZ W1, 0x10
	0x01F9A6E0 MOV X0, X20
	0x01F9A6E4 BL 0x2A44E18
	0x01F9A6E8 LDR X2, [X22]
	0x01F9A6EC LDR X3, [X23]
	0x01F9A6F0 MOVZ W1, 0x4000
	0x01F9A6F4 MOV X0, X20
	0x01F9A6F8 BL 0x2A44E18
	0x01F9A6FC LDR X2, [X22]
	0x01F9A700 LDR X3, [X23]
	0x01F9A704 MOVZ W1, 0x8000
	0x01F9A708 MOV X0, X20
	0x01F9A70C BL 0x2A44E18
	0x01F9A710 LDR X2, [X22]
	0x01F9A714 LDR X3, [X23]
	0x01F9A718 MOVZ W1, 0x200
	0x01F9A71C MOV X0, X20
	0x01F9A720 BL 0x2A44E18
	0x01F9A724 LDR X2, [X22]
	0x01F9A728 LDR X3, [X23]
	0x01F9A72C MOVZ W1, 0x2000000
	0x01F9A730 MOV X0, X20
	0x01F9A734 BL 0x2A44E18
	0x01F9A738 LDR X2, [X22]
	0x01F9A73C LDR X3, [X23]
	0x01F9A740 MOVZ W1, 0x1000000
	0x01F9A744 MOV X0, X20
	0x01F9A748 BL 0x2A44E18
	0x01F9A74C LDR X2, [X22]
	0x01F9A750 LDR X3, [X23]
	0x01F9A754 MOVZ W1, 0x4000000
	0x01F9A758 MOV X0, X20
	0x01F9A75C BL 0x2A44E18
	0x01F9A760 LDR X2, [X22]
	0x01F9A764 LDR X3, [X23]
	0x01F9A768 MOVZ W1, 0x8000000
	0x01F9A76C MOV X0, X20
	0x01F9A770 BL 0x2A44E18
	0x01F9A774 STR X20, [X19 + 0x128]
	0x01F9A778 LDR X0, [X21]
	0x01F9A77C LDR W8, [X0 + 0xE0]
	0x01F9A780 CBNZ W8, 0x1F9A788
	0x01F9A784 BL 0x1C16DFC
	0x01F9A788 MOV X0, X19
	0x01F9A78C LDP X20, X19, [X31 + 0x20]
	0x01F9A790 LDP X22, X21, [X31 + 0x10]
	0x01F9A794 MOV X1, X31
	0x01F9A798 LDP X30, X23, [X31], #0x30
	0x01F9A79C B 0x1F95C38
	0x01F9A7A0 BL 0x1C16F20
	0x01F9A7A4 STP X30, X27, [X31 - 0x50]!
	0x01F9A7A8 STP X26, X25, [X31 + 0x10]

ISIL:
	001 Move [X31-48], D9
	002 Move [X31-40], D8
	003 Move [X31+16], X30
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x2440000
	008 Move W8, [X20+1907]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x2181000
	015 Move X0, [X0+3184]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1907], W8
	019 Move X0, [X19+64]
	020 Compare X0, 0
	021 JumpIfEqual {49}
	022 Move X21, 0x2181000
	023 Move X21, [X21+3184]
	024 Move W20, W31
	025 Move S8, W31
	026 Move S9, 10
	027 Move X1, X31
	028 Call Transform.get_childCount, X0
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move X0, [X19+64]
	031 Compare X0, 0
	032 JumpIfEqual {49}
	033 Move W1, W20
	034 Move X2, X31
	035 Call Transform.GetChild, X0, X1
	036 Compare X0, 0
	037 JumpIfEqual {49}
	038 Move X1, [X21]
	039 Move X8, [X0]
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Move X1, X31
	042 Call RectTransform.get_sizeDelta, X0
	043 Move X0, [X19+64]
	044 Add S0, S1, S9
	045 Add S8, S8, S0
	046 Add W20, W20, 1
	047 Compare X0, 0
	048 JumpIfNotEqual {27}
	049 Call 0x1C17F20
	050 Move X0, X31
	051 Call Screen.get_height
	052 Move X8, [X19+32]
	053 Compare X8, 0
	054 JumpIfEqual {49}
	055 Move W20, W0
	056 Move X0, X8
	057 Move X1, X31
	058 Call Canvas.get_scaleFactor, X0
	059 NotImplemented "Instruction SCVTF not yet implemented."
	060 Move W8, 0xC2C80000
	061 NotImplemented "Instruction FDIV not yet implemented."
	062 Move S1, W8
	063 Add S0, S0, S1
	064 Move X0, X19
	065 Move X20, [X31+32]
	066 Move X19, [X31+40]
	067 Move X30, [X31+16]
	068 Move X21, [X31+24]
	069 NotImplemented "Instruction FCMP not yet implemented."
	070 Move W8, 0x43160000
	071 NotImplemented "Instruction FCSEL not yet implemented."
	072 Move S1, W8
	073 NotImplemented "Instruction FMAX not yet implemented."
	074 Move D9, [X31+48]
	075 Move D8, [X31+56]
	076 Call FusionStatsCanvas.SetContentPanelHeight, X0, V0
	077 Return 
	078 Call 0x1C181E0

Method: System.Void OnEnable()

Disassembly:
	0x01F9A7AC STP X24, X23, [X31 + 0x20]
	0x01F9A7B0 STP X22, X21, [X31 + 0x30]
	0x01F9A7B4 STP X20, X19, [X31 + 0x40]
	0x01F9A7B8 ADRP X25, 0x243F000
	0x01F9A7BC ADRP X26, 0x2180000
	0x01F9A7C0 ADRP X20, 0x2180000
	0x01F9A7C4 ADRP X23, 0x2180000
	0x01F9A7C8 ADRP X22, 0x2180000
	0x01F9A7CC ADRP X24, 0x2180000
	0x01F9A7D0 ADRP X21, 0x2180000
	0x01F9A7D4 LDR X26, [X26 + 0xF70]
	0x01F9A7D8 LDRB W8, [X25 + 0x784]
	0x01F9A7DC LDR X20, [X20 + 0xF78]
	0x01F9A7E0 LDR X23, [X23 + 0xCD0]
	0x01F9A7E4 LDR X22, [X22 + 0xCD8]
	0x01F9A7E8 LDR X24, [X24 + 0xCE0]
	0x01F9A7EC LDR X21, [X21 + 0xCE8]
	0x01F9A7F0 MOV X19, X0
	0x01F9A7F4 TBNZ X8, 0x0, 0x1F9A89C
	0x01F9A7F8 ADRP X0, 0x2180000
	0x01F9A7FC LDR X0, [X0 + 0xF78]
	0x01F9A800 BL 0x1C16CF4
	0x01F9A804 ADRP X0, 0x2180000
	0x01F9A808 LDR X0, [X0 + 0xF70]
	0x01F9A80C BL 0x1C16CF4
	0x01F9A810 ADRP X0, 0x2159000
	0x01F9A814 LDR X0, [X0 + 0xDF8]
	0x01F9A818 BL 0x1C16CF4
	0x01F9A81C ADRP X0, 0x2180000
	0x01F9A820 LDR X0, [X0 + 0xF80]
	0x01F9A824 BL 0x1C16CF4
	0x01F9A828 ADRP X0, 0x2180000
	0x01F9A82C LDR X0, [X0 + 0xCF8]
	0x01F9A830 BL 0x1C16CF4
	0x01F9A834 ADRP X0, 0x2180000
	0x01F9A838 LDR X0, [X0 + 0xCD8]
	0x01F9A83C BL 0x1C16CF4
	0x01F9A840 ADRP X0, 0x2180000
	0x01F9A844 LDR X0, [X0 + 0xCD0]
	0x01F9A848 BL 0x1C16CF4
	0x01F9A84C ADRP X0, 0x2180000
	0x01F9A850 LDR X0, [X0 + 0xCE0]
	0x01F9A854 BL 0x1C16CF4
	0x01F9A858 ADRP X0, 0x2180000
	0x01F9A85C LDR X0, [X0 + 0xE68]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x2440000
	008 Move X23, 0x2181000
	009 Move X22, 0x215B000
	010 Move X21, 0x2181000
	011 Move W8, [X20+1908]
	012 Move X23, [X23+3712]
	013 Move X22, [X22+3696]
	014 Move X21, [X21+3848]
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {31}
	020 Move X0, 0x215B000
	021 Move X0, [X0+3696]
	022 Call 0x1C17CF4
	023 Move X0, 0x2181000
	024 Move X0, [X0+3848]
	025 Call 0x1C17CF4
	026 Move X0, 0x2181000
	027 Move X0, [X0+3712]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X20+1908], W8
	031 Move X8, [X23]
	032 Move X8, [X8+184]
	033 Move W9, [X8]
	034 Add W9, W9, 1
	035 Move [X8], W9
	036 Move X0, [X22]
	037 Move X20, [X19+80]
	038 Call 0x1C17F10
	039 Move X2, [X21]
	040 Move X1, X19
	041 Move X3, X31
	042 Move X21, X0
	043 Call Action..ctor, X0, X1, X2
	044 Compare X20, 0
	045 JumpIfEqual {54}
	046 Move X0, X20
	047 Move X1, X21
	048 Move X20, [X31+32]
	049 Move X19, [X31+40]
	050 Move X22, [X31+16]
	051 Move X21, [X31+24]
	052 Move X30, [X31+48]
	053 Move X23, [X31+56]
	054 Call 0x1C17F20

Method: System.Void OnDisable()

Disassembly:
	0x01F9A8FC STR W10, [X20 + 0x1C]
	0x01F9A900 CBZ X8, 0x1F9AAC0
	0x01F9A904 LDRSW X10, [X20 + 0x18]
	0x01F9A908 LDR W11, [X8 + 0x18]
	0x01F9A90C ADRP X22, 0x2180000
	0x01F9A910 ADRP X23, 0x2159000
	0x01F9A914 LDR X22, [X22 + 0xE68]
	0x01F9A918 LDR X23, [X23 + 0x6C0]
	0x01F9A91C CMP W10, W11
	0x01F9A920 B.CS 0x1F9A938
	0x01F9A924 ADD W9, W10, 0x1
	0x01F9A928 ADD X8, X8, X10, 0x3, LSL
	0x01F9A92C STR W9, [X20 + 0x18]
	0x01F9A930 STR X21, [X8 + 0x20]
	0x01F9A934 B 0x1F9A950
	0x01F9A938 LDR X8, [X9 + 0x20]
	0x01F9A93C MOV X0, X20
	0x01F9A940 MOV X1, X21
	0x01F9A944 LDR X8, [X8 + 0xC0]
	0x01F9A948 LDR X2, [X8 + 0x70]
	0x01F9A94C BL 0x301BF90
	0x01F9A950 LDR X0, [X23]
	0x01F9A954 LDR X21, [X22]
	0x01F9A958 ADRP X22, 0x2159000
	0x01F9A95C LDR W8, [X0 + 0xE0]
	0x01F9A960 LDR X22, [X22 + 0xDF8]
	0x01F9A964 CBNZ W8, 0x1F9A96C
	0x01F9A968 BL 0x1C16DFC
	0x01F9A96C MOV X0, X21
	0x01F9A970 MOV X1, X31
	0x01F9A974 BL 0x338C698
	0x01F9A978 LDR X8, [X22]
	0x01F9A97C MOV X21, X0
	0x01F9A980 LDR W9, [X8 + 0xE0]
	0x01F9A984 CBNZ W9, 0x1F9A990
	0x01F9A988 MOV X0, X8
	0x01F9A98C BL 0x1C16DFC
	0x01F9A990 MOV X0, X21
	0x01F9A994 MOV X1, X31
	0x01F9A998 BL 0x33B03E4
	0x01F9A99C CBZ X0, 0x1F9AAC0
	0x01F9A9A0 LDR X8, [X0 + 0x18]
	0x01F9A9A4 MOV X21, X0
	0x01F9A9A8 CMP W8, 0x1
	0x01F9A9AC B.LT 0x1F9AA44

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x2440000
	008 Move X23, 0x2181000
	009 Move X22, 0x215B000
	010 Move X21, 0x2181000
	011 Move W8, [X20+1909]
	012 Move X23, [X23+3712]
	013 Move X22, [X22+3696]
	014 Move X21, [X21+3848]
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {31}
	020 Move X0, 0x215B000
	021 Move X0, [X0+3696]
	022 Call 0x1C17CF4
	023 Move X0, 0x2181000
	024 Move X0, [X0+3848]
	025 Call 0x1C17CF4
	026 Move X0, 0x2181000
	027 Move X0, [X0+3712]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X20+1909], W8
	031 Move X8, [X23]
	032 Move X8, [X8+184]
	033 Move W9, [X8]
	034 Subtract W9, W9, 1
	035 Move [X8], W9
	036 Move X0, [X22]
	037 Move X20, [X19+80]
	038 Call 0x1C17F10
	039 Move X2, [X21]
	040 Move X1, X19
	041 Move X3, X31
	042 Move X21, X0
	043 Call Action..ctor, X0, X1, X2
	044 Compare X20, 0
	045 JumpIfEqual {54}
	046 Move X0, X20
	047 Move X1, X21
	048 Move X20, [X31+32]
	049 Move X19, [X31+40]
	050 Move X22, [X31+16]
	051 Move X21, [X31+24]
	052 Move X30, [X31+48]
	053 Move X23, [X31+56]
	054 Call 0x1C17F20

Method: System.Void SetCanvasAnchor(Fusion.Statistics.CanvasAnchor anchor)

Disassembly:
	0x01F98B88 STP X22, X21, [X31 + 0x30]
	0x01F98B8C STP X20, X19, [X31 + 0x40]

ISIL:
	001 Move [X0+112], W1
	002 Call FusionStatsCanvas.SnapPanelBackToOriginPos, X0
	003 Return 

Method: UnityEngine.Vector2 GetDefinedAnchorPosition()

Disassembly:
	0x01F99F58 LDR X24, [X24 + 0xF30]
	0x01F99F5C LDR X27, [X27 + 0xF20]
	0x01F99F60 ADD X8, X31, 0x8
	0x01F99F64 BL 0x301CB58
	0x01F99F68 LDUR V0, [X31 + 0x8]
	0x01F99F6C LDR X8, [X31 + 0x18]
	0x01F99F70 STR V0, [X31 + 0x2]
	0x01F99F74 STR X8, [X31 + 0x30]
	0x01F99F78 LDR X1, [X26]
	0x01F99F7C ADD X0, X31, 0x20
	0x01F99F80 BL 0x2BC4350
	0x01F99F84 TBZ X0, 0x0, 0x1F9A050
	0x01F99F88 ADRP X8, 0x2181000
	0x01F99F8C LDR X8, [X8 + 0xF38]
	0x01F99F90 LDR X0, [X8]
	0x01F99F94 BL 0x1C16F10
	0x01F99F98 MOV X20, X0
	0x01F99F9C MOV X1, X31
	0x01F99FA0 BL 0x33BDD8C
	0x01F99FA4 CBZ X20, 0x1F9A094
	0x01F99FA8 LDR X8, [X31 + 0x30]
	0x01F99FAC STP X8, X19, [X20 + 0x10]
	0x01F99FB0 LDR X0, [X25]
	0x01F99FB4 LDP X22, X21, [X19 + 0x20]
	0x01F99FB8 LDR W8, [X0 + 0xE0]
	0x01F99FBC CBNZ W8, 0x1F99FC4
	0x01F99FC0 BL 0x1C16DFC
	0x01F99FC4 LDR X2, [X28]
	0x01F99FC8 MOV X0, X22
	0x01F99FCC MOV X1, X21
	0x01F99FD0 BL 0x222D488
	0x01F99FD4 MOV X21, X0
	0x01F99FD8 CBZ X0, 0x1F9A098
	0x01F99FDC LDR X22, [X21 + 0x100]
	0x01F99FE0 LDR X0, [X29]
	0x01F99FE4 BL 0x1C16F10
	0x01F99FE8 LDR X2, [X24]
	0x01F99FEC MOV X23, X0
	0x01F99FF0 MOV X1, X20
	0x01F99FF4 MOV X3, X31
	0x01F99FF8 BL 0x3C45BE8
	0x01F99FFC CBZ X22, 0x1F9A08C
	0x01F9A000 MOV X0, X22
	0x01F9A004 MOV X1, X23
	0x01F9A008 MOV X2, X31
	0x01F9A00C BL 0x3C45C8C
	0x01F9A010 LDR X1, [X27]
	0x01F9A014 MOV X0, X21
	0x01F9A018 BL 0x21A3AF8
	0x01F9A01C MOV X21, X0
	0x01F9A020 LDR X0, [X20 + 0x10]
	0x01F9A024 CBZ X0, 0x1F9A090
	0x01F9A028 MOV X1, X31
	0x01F9A02C BL 0x3C389D4
	0x01F9A030 MOV X1, X0
	0x01F9A034 CBZ X21, 0x1F9A088
	0x01F9A038 LDR X8, [X21]
	0x01F9A03C LDR X9, [X8 + 0x5E8]
	0x01F9A040 LDR X2, [X8 + 0x5F0]
	0x01F9A044 MOV X0, X21
	0x01F9A048 BLR X9
	0x01F9A04C B 0x1F99F78
	0x01F9A050 ADRP X8, 0x2160000
	0x01F9A054 LDR X8, [X8 + 0x940]
	0x01F9A058 ADD X0, X31, 0x20
	0x01F9A05C LDR X1, [X8]
	0x01F9A060 BL 0x2BC434C
	0x01F9A064 LDP X20, X19, [X31 + 0x90]
	0x01F9A068 LDP X22, X21, [X31 + 0x80]
	0x01F9A06C LDP X24, X23, [X31 + 0x70]
	0x01F9A070 LDP X26, X25, [X31 + 0x60]
	0x01F9A074 LDP X28, X27, [X31 + 0x50]
	0x01F9A078 LDP X29, X30, [X31 + 0x40]
	0x01F9A07C ADD X31, X31, 0xA0
	0x01F9A080 RET
	0x01F9A084 BL 0x1C16F20
	0x01F9A088 BL 0x1C16F20
	0x01F9A08C BL 0x1C16F20
	0x01F9A090 BL 0x1C16F20
	0x01F9A094 BL 0x1C16F20

ISIL:
	001 Move [X31-48], D9
	002 Move [X31-40], D8
	003 Move [X31+16], X30
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X0+40]
	007 Compare X8, 0
	008 JumpIfEqual {88}
	009 Move W9, [X0+112]
	010 NotImplemented "Instruction LDUR not yet implemented."
	011 Move X19, X0
	012 Compare W9, 0
	013 JumpIfEqual {40}
	014 NotImplemented "Instruction CMP not yet implemented."
	015 Move X20, 0x2441000
	016 Move W8, [X20+1934]
	017 Compare W8, 0
	018 JumpIfNotEqual {24}
	019 Move X0, 0x2163000
	020 Move X0, [X0+3848]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X20+1934], W8
	024 Move X0, [X19+48]
	025 Compare X0, 0
	026 JumpIfEqual {88}
	027 Move X8, 0x2163000
	028 Move X8, [X8+3848]
	029 NotImplemented "Instruction MOVI not yet implemented."
	030 Move X1, X31
	031 NotImplemented "Instruction INVALID not yet implemented."
	032 Move X8, [X8]
	033 Move X8, [X8+184]
	034 Move V9, [X8+40]
	035 Call RectTransform.get_sizeDelta, X0
	036 Move S1, 0.5
	037 Multiply S0, S0, S1
	038 NotImplemented "Instruction INVALID not yet implemented."
	039 Subtract V0, V8, V0
	040 Move X20, 0x2441000
	041 Move W8, [X20+1934]
	042 Compare W8, 0
	043 JumpIfNotEqual {49}
	044 Move X0, 0x2163000
	045 Move X0, [X0+3848]
	046 Call 0x1C17CF4
	047 Move W8, 1
	048 Move [X20+1934], W8
	049 Move X0, [X19+48]
	050 Compare X0, 0
	051 JumpIfEqual {88}
	052 Move X8, 0x2162000
	053 Move X8, [X8+3848]
	054 NotImplemented "Instruction MOVI not yet implemented."
	055 Move X1, X31
	056 NotImplemented "Instruction INVALID not yet implemented."
	057 Move X8, [X8]
	058 Move X8, [X8+184]
	059 Move V9, [X8+40]
	060 Call RectTransform.get_sizeDelta, X0
	061 Move S1, 0.5
	062 Multiply S0, S0, S1
	063 NotImplemented "Instruction INVALID not yet implemented."
	064 Subtract V0, V1, V8
	065 Add V1, V1, V8
	066 Move V0.S[1], V1.S[1]
	067 Move X19, 0x2440000
	068 Move W8, [X19+1935]
	069 Compare W8, 0
	070 JumpIfNotEqual {76}
	071 Move X0, 0x2162000
	072 Move X0, [X0+3848]
	073 Call 0x1C17CF4
	074 Move W8, 1
	075 Move [X19+1935], W8
	076 Move X8, 0x2162000
	077 Move X8, [X8+3848]
	078 Move X8, [X8]
	079 Move X8, [X8+184]
	080 Move V0, [X8]
	081 Move X20, [X31+32]
	082 Move X19, [X31+40]
	083 Move X30, [X31+16]
	084 Move S1, V0.S[1]
	085 Move D9, [X31+48]
	086 Move D8, [X31+56]
	087 Return X0
	088 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x01F9AA4C MOV X1, X20
	0x01F9AA50 MOV X2, X31

ISIL:
	001 Move X1, X31
	002 Call MonoBehaviour..ctor, X0
	003 Return 

