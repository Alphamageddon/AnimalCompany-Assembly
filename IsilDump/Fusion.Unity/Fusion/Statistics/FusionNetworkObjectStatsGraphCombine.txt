Type: Fusion.Statistics.FusionNetworkObjectStatsGraphCombine

Method: Fusion.NetworkId get_NetworkObjectID()

Disassembly:
	0x01F97390 MOV X1, X31
	0x01F97394 LDR X8, [X8]
	0x01F97398 MOV X0, X8
	0x01F9739C BL 0x338C698
	0x01F973A0 MOV X1, X0
	0x01F973A4 MOV X0, X20
	0x01F973A8 MOV X2, X31
	0x01F973AC BL 0x3395194
	0x01F973B0 ANDS W31, W0, 0x1
	0x01F973B4 MOVZ W8, 0x8
	0x01F973B8 CSEL X8, X8, X31, NE

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+112]
	003 Compare X8, 0
	004 JumpIfEqual {12}
	005 Move X8, [X8+32]
	006 Compare X8, 0
	007 JumpIfEqual {9}
	008 Move W0, [X8]
	009 Move X0, X31
	010 Move X30, [X31+16]
	011 Return X0
	012 Call 0x1C17F20

Method: System.Void SetupNetworkObject(Fusion.NetworkObject networkObject, Fusion.Statistics.FusionStatistics fusionStatistics, Fusion.Statistics.FusionNetworkObjectStatistics objectStatisticsInstance)

Disassembly:
	0x01F973BC B 0x1F97234
	0x01F973C0 LDR X0, [X0 + 0x58]
	0x01F973C4 RET

ISIL:
	001 Move [X0+112], X1
	002 Move [X0+120], X2
	003 Move [X0+128], X3
	004 Return 

Method: System.Void Start()

Disassembly:
	0x01F973C8 LDR X0, [X0 + 0x90]
	0x01F973CC RET
	0x01F973D0 STP X30, X21, [X31 - 0x20]!
	0x01F973D4 STP X20, X19, [X31 + 0x10]
	0x01F973D8 ADRP X21, 0x2442000
	0x01F973DC ADRP X20, 0x215C000
	0x01F973E0 LDRB W8, [X21 + 0x764]
	0x01F973E4 LDR X20, [X20 + 0x598]
	0x01F973E8 MOV X19, X0
	0x01F973EC TBNZ X8, 0x0, 0x1F97404
	0x01F973F0 ADRP X0, 0x215C000
	0x01F973F4 LDR X0, [X0 + 0x598]
	0x01F973F8 BL 0x1C16CF4
	0x01F973FC MOVZ W8, 0x1
	0x01F97400 STRB W8, [X21 + 0x764]
	0x01F97404 LDR X0, [X20]
	0x01F97408 LDR X19, [X19 + 0x78]
	0x01F9740C LDR W8, [X0 + 0xE0]
	0x01F97410 CBNZ W8, 0x1F97418
	0x01F97414 BL 0x1C16DFC
	0x01F97418 MOV X0, X19
	0x01F9741C LDP X20, X19, [X31 + 0x10]
	0x01F97420 MOV X1, X31
	0x01F97424 LDP X30, X21, [X31], #0x20
	0x01F97428 B 0x3C38948
	0x01F9742C STP X30, X27, [X31 - 0x50]!
	0x01F97430 STP X26, X25, [X31 + 0x10]
	0x01F97434 STP X24, X23, [X31 + 0x20]
	0x01F97438 STP X22, X21, [X31 + 0x30]
	0x01F9743C STP X20, X19, [X31 + 0x40]
	0x01F97440 ADRP X26, 0x2442000
	0x01F97444 ADRP X27, 0x2183000
	0x01F97448 ADRP X20, 0x2183000
	0x01F9744C ADRP X24, 0x2183000
	0x01F97450 ADRP X25, 0x2183000
	0x01F97454 ADRP X22, 0x2183000
	0x01F97458 ADRP X23, 0x2183000
	0x01F9745C ADRP X21, 0x215C000
	0x01F97460 LDR X27, [X27 + 0xDB0]
	0x01F97464 LDR X20, [X20 + 0xDB8]
	0x01F97468 LDRB W8, [X26 + 0x765]
	0x01F9746C LDR X24, [X24 + 0xDC0]
	0x01F97470 LDR X25, [X25 + 0xDC8]
	0x01F97474 LDR X22, [X22 + 0xDD0]
	0x01F97478 LDR X23, [X23 + 0xDD8]
	0x01F9747C LDR X21, [X21 + 0x598]
	0x01F97480 MOV X19, X0
	0x01F97484 TBNZ X8, 0x0, 0x1F974E4
	0x01F97488 ADRP X0, 0x2183000
	0x01F9748C LDR X0, [X0 + 0xDB8]
	0x01F97490 BL 0x1C16CF4
	0x01F97494 ADRP X0, 0x2183000
	0x01F97498 LDR X0, [X0 + 0xDB0]
	0x01F9749C BL 0x1C16CF4
	0x01F974A0 ADRP X0, 0x215C000
	0x01F974A4 LDR X0, [X0 + 0x598]
	0x01F974A8 BL 0x1C16CF4
	0x01F974AC ADRP X0, 0x2183000
	0x01F974B0 LDR X0, [X0 + 0xDD8]
	0x01F974B4 BL 0x1C16CF4
	0x01F974B8 ADRP X0, 0x2183000
	0x01F974BC LDR X0, [X0 + 0xDC8]
	0x01F974C0 BL 0x1C16CF4
	0x01F974C4 ADRP X0, 0x2183000
	0x01F974C8 LDR X0, [X0 + 0xDD0]
	0x01F974CC BL 0x1C16CF4
	0x01F974D0 ADRP X0, 0x2183000
	0x01F974D4 LDR X0, [X0 + 0xDC0]
	0x01F974D8 BL 0x1C16CF4
	0x01F974DC MOVZ W8, 0x1
	0x01F974E0 STRB W8, [X26 + 0x765]
	0x01F974E4 LDR X0, [X27]
	0x01F974E8 BL 0x1C16F10
	0x01F974EC LDR X1, [X20]
	0x01F974F0 MOV X20, X0
	0x01F974F4 BL 0x301B7C4
	0x01F974F8 STR X20, [X19 + 0x58]
	0x01F974FC LDR X0, [X24]
	0x01F97500 LDR X1, [X25]
	0x01F97504 BL 0x2241FB8
	0x01F97508 STR X0, [X19 + 0x48]
	0x01F9750C LDR X0, [X22]
	0x01F97510 LDR X1, [X23]
	0x01F97514 BL 0x2241FB8
	0x01F97518 STR X0, [X19 + 0x50]
	0x01F9751C LDR X0, [X21]
	0x01F97520 LDR X20, [X19 + 0x48]
	0x01F97524 LDR W8, [X0 + 0xE0]
	0x01F97528 CBNZ W8, 0x1F97530
	0x01F9752C BL 0x1C16DFC
	0x01F97530 MOV X0, X20
	0x01F97534 MOV X1, X31
	0x01F97538 MOV X2, X31
	0x01F9753C BL 0x3C3883C
	0x01F97540 TBNZ X0, 0x0, 0x1F9756C
	0x01F97544 LDR X0, [X21]
	0x01F97548 LDR X20, [X19 + 0x50]
	0x01F9754C LDR W8, [X0 + 0xE0]
	0x01F97550 CBNZ W8, 0x1F97558
	0x01F97554 BL 0x1C16DFC
	0x01F97558 MOV X0, X20
	0x01F9755C MOV X1, X31
	0x01F97560 MOV X2, X31
	0x01F97564 BL 0x3C3883C
	0x01F97568 TBZ X0, 0x0, 0x1F9759C
	0x01F9756C LDR X0, [X21]
	0x01F97570 LDR W8, [X0 + 0xE0]
	0x01F97574 CBNZ W8, 0x1F9757C
	0x01F97578 BL 0x1C16DFC
	0x01F9757C MOV X0, X19
	0x01F97580 LDP X20, X19, [X31 + 0x40]
	0x01F97584 LDP X22, X21, [X31 + 0x30]
	0x01F97588 LDP X24, X23, [X31 + 0x20]
	0x01F9758C LDP X26, X25, [X31 + 0x10]
	0x01F97590 MOV X1, X31
	0x01F97594 LDP X30, X27, [X31], #0x50
	0x01F97598 B 0x3C394A8
	0x01F9759C LDP X20, X19, [X31 + 0x40]
	0x01F975A0 LDP X22, X21, [X31 + 0x30]
	0x01F975A4 LDP X24, X23, [X31 + 0x20]
	0x01F975A8 LDP X26, X25, [X31 + 0x10]
	0x01F975AC LDP X30, X27, [X31], #0x50
	0x01F975B0 RET
	0x01F975B4 B 0x1F975B8
	0x01F975B8 SUB X31, X31, 0x40
	0x01F975BC STP X30, X23, [X31 + 0x10]
	0x01F975C0 STP X22, X21, [X31 + 0x20]
	0x01F975C4 STP X20, X19, [X31 + 0x30]
	0x01F975C8 ADRP X20, 0x2442000
	0x01F975CC LDRB W8, [X20 + 0x768]
	0x01F975D0 MOV X19, X0
	0x01F975D4 TBNZ X8, 0x0, 0x1F976D0
	0x01F975D8 ADRP X0, 0x2160000
	0x01F975DC LDR X0, [X0 + 0xF28]
	0x01F975E0 BL 0x1C16CF4
	0x01F975E4 ADRP X0, 0x2183000
	0x01F975E8 LDR X0, [X0 + 0xDE0]
	0x01F975EC BL 0x1C16CF4
	0x01F975F0 ADRP X0, 0x2183000
	0x01F975F4 LDR X0, [X0 + 0xDE8]
	0x01F975F8 BL 0x1C16CF4
	0x01F975FC ADRP X0, 0x2183000
	0x01F97600 LDR X0, [X0 + 0xDF0]
	0x01F97604 BL 0x1C16CF4
	0x01F97608 ADRP X0, 0x2183000
	0x01F9760C LDR X0, [X0 + 0xDF8]
	0x01F97610 BL 0x1C16CF4
	0x01F97614 ADRP X0, 0x2183000
	0x01F97618 LDR X0, [X0 + 0xE00]
	0x01F9761C BL 0x1C16CF4
	0x01F97620 ADRP X0, 0x2183000
	0x01F97624 LDR X0, [X0 + 0xE08]
	0x01F97628 BL 0x1C16CF4
	0x01F9762C ADRP X0, 0x2183000
	0x01F97630 LDR X0, [X0 + 0xE10]
	0x01F97634 BL 0x1C16CF4
	0x01F97638 ADRP X0, 0x2183000
	0x01F9763C LDR X0, [X0 + 0xE18]
	0x01F97640 BL 0x1C16CF4
	0x01F97644 ADRP X0, 0x2183000
	0x01F97648 LDR X0, [X0 + 0xE20]
	0x01F9764C BL 0x1C16CF4
	0x01F97650 ADRP X0, 0x215C000
	0x01F97654 LDR X0, [X0 + 0xA58]
	0x01F97658 BL 0x1C16CF4
	0x01F9765C ADRP X0, 0x2183000
	0x01F97660 LDR X0, [X0 + 0x548]
	0x01F97664 BL 0x1C16CF4
	0x01F97668 ADRP X0, 0x2160000
	0x01F9766C LDR X0, [X0 + 0x1D0]
	0x01F97670 BL 0x1C16CF4
	0x01F97674 ADRP X0, 0x215C000
	0x01F97678 LDR X0, [X0 + 0x598]
	0x01F9767C BL 0x1C16CF4
	0x01F97680 ADRP X0, 0x215F000
	0x01F97684 LDR X0, [X0 + 0xE40]
	0x01F97688 BL 0x1C16CF4
	0x01F9768C ADRP X0, 0x2183000
	0x01F97690 LDR X0, [X0 + 0xE28]
	0x01F97694 BL 0x1C16CF4
	0x01F97698 ADRP X0, 0x2164000
	0x01F9769C LDR X0, [X0 + 0xC60]
	0x01F976A0 BL 0x1C16CF4
	0x01F976A4 ADRP X0, 0x215C000
	0x01F976A8 LDR X0, [X0 + 0x6C0]
	0x01F976AC BL 0x1C16CF4
	0x01F976B0 ADRP X0, 0x2183000
	0x01F976B4 LDR X0, [X0 + 0xE30]
	0x01F976B8 BL 0x1C16CF4
	0x01F976BC ADRP X0, 0x2183000
	0x01F976C0 LDR X0, [X0 + 0xE38]
	0x01F976C4 BL 0x1C16CF4
	0x01F976C8 MOVZ W8, 0x1
	0x01F976CC STRB W8, [X20 + 0x768]
	0x01F976D0 MOV X0, X19
	0x01F976D4 BL 0x1F973D0
	0x01F976D8 TBZ X0, 0x0, 0x1F976F0
	0x01F976DC LDP X20, X19, [X31 + 0x30]
	0x01F976E0 LDP X22, X21, [X31 + 0x20]
	0x01F976E4 LDP X30, X23, [X31 + 0x10]
	0x01F976E8 ADD X31, X31, 0x40
	0x01F976EC RET
	0x01F976F0 ADRP X23, 0x215C000
	0x01F976F4 LDR X23, [X23 + 0x598]
	0x01F976F8 LDR X20, [X19 + 0x38]
	0x01F976FC LDR X0, [X23]
	0x01F97700 LDR W8, [X0 + 0xE0]
	0x01F97704 CBNZ W8, 0x1F9770C
	0x01F97708 BL 0x1C16DFC
	0x01F9770C MOV X0, X20
	0x01F97710 MOV X1, X31
	0x01F97714 MOV X2, X31
	0x01F97718 BL 0x3C3883C
	0x01F9771C TBZ X0, 0x0, 0x1F9775C
	0x01F97720 ADRP X8, 0x2160000
	0x01F97724 LDR X8, [X8 + 0xF28]
	0x01F97728 MOV X0, X19
	0x01F9772C LDR X1, [X8]
	0x01F97730 BL 0x21A3894
	0x01F97734 CBZ X0, 0x1F97A50
	0x01F97738 MOV X1, X31
	0x01F9773C MOV X20, X0
	0x01F97740 BL 0x1E9E7CC
	0x01F97744 TBZ X0, 0x0, 0x1F976DC
	0x01F97748 MOV X0, X20

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X26, 0x2443000
	012 Move X27, 0x2184000
	013 Move X20, 0x2184000
	014 Move X25, 0x2184000
	015 Move X23, 0x2184000
	016 Move X22, 0x2184000
	017 Move X24, 0x2184000
	018 Move X21, 0x2184000
	019 Move X27, [X27+3256]
	020 Move X20, [X20+3264]
	021 Move W8, [X26+1883]
	022 Move X25, [X25+3272]
	023 Move X23, [X23+3280]
	024 Move X22, [X22+3288]
	025 Move X24, [X24+3296]
	026 Move X21, [X21+3304]
	027 Move X19, X0
	028 Move TEMP, X8
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfEqual {76}
	032 Move X0, 0x2184000
	033 Move X0, [X0+3272]
	034 Call 0x1C17CF4
	035 Move X0, 0x2184000
	036 Move X0, [X0+3264]
	037 Call 0x1C17CF4
	038 Move X0, 0x2184000
	039 Move X0, [X0+3256]
	040 Call 0x1C17CF4
	041 Move X0, 0x215D000
	042 Move X0, [X0+3576]
	043 Call 0x1C17CF4
	044 Move X0, 0x2184000
	045 Move X0, [X0+3312]
	046 Call 0x1C17CF4
	047 Move X0, 0x2184000
	048 Move X0, [X0+3320]
	049 Call 0x1C17CF4
	050 Move X0, 0x2184000
	051 Move X0, [X0+3288]
	052 Call 0x1C17CF4
	053 Move X0, 0x2184000
	054 Move X0, [X0+3280]
	055 Call 0x1C17CF4
	056 Move X0, 0x2184000
	057 Move X0, [X0+3328]
	058 Call 0x1C17CF4
	059 Move X0, 0x2184000
	060 Move X0, [X0+3296]
	061 Call 0x1C17CF4
	062 Move X0, 0x215D000
	063 Move X0, [X0+1728]
	064 Call 0x1C17CF4
	065 Move X0, 0x2184000
	066 Move X0, [X0+3336]
	067 Call 0x1C17CF4
	068 Move X0, 0x2184000
	069 Move X0, [X0+3344]
	070 Call 0x1C17CF4
	071 Move X0, 0x2184000
	072 Move X0, [X0+3304]
	073 Call 0x1C17CF4
	074 Move W8, 1
	075 Move [X26+1883], W8
	076 Move X0, [X27]
	077 Call 0x1C17F10
	078 Move X1, [X20]
	079 Move X20, X0
	080 Call Dictionary`2<Int32Enum, Object>..ctor, X0
	081 Move [X19+88], X20
	082 Move X1, [X25]
	083 Move X0, X19
	084 Call 0x21A4F50, X0
	085 Move [X19+104], X0
	086 Move X0, [X23]
	087 Call 0x1C17F10
	088 Move X1, [X22]
	089 Move X20, X0
	090 Call List`1<Object>..ctor, X0
	091 Move X0, [X24]
	092 Call 0x1C17F10
	093 Move X1, [X21]
	094 Move X2, X31
	095 Move X21, X0
	096 Call OptionData..ctor, X0, X1
	097 Compare X20, 0
	098 JumpIfEqual {241}
	099 Move X25, 0x2184000
	100 Move X25, [X25+3320]
	101 Move W10, [X20+28]
	102 Move X8, [X20+16]
	103 Move X9, [X25]
	104 Add W10, W10, 1
	105 Move [X20+28], W10
	106 Compare X8, 0
	107 JumpIfEqual {241}
	108 NotImplemented "Instruction LDRSW not yet implemented."
	109 Move W11, [X8+24]
	110 Move X22, 0x2184000
	111 Move X23, 0x215D000
	112 Move X22, [X22+3328]
	113 Move X23, [X23+1728]
	114 NotImplemented "Instruction CMP not yet implemented."
	115 Add W9, W10, 1
	116 Add X8, X8, X10
	117 Move [X20+24], W9
	118 Move [X8+32], X21
	119 Move X8, [X9+32]
	120 Move X0, X20
	121 Move X1, X21
	122 Move X8, [X8+192]
	123 Move X2, [X8+112]
	124 Call List`1<Object>.AddWithResize, X0, X1
	125 Move X0, [X23]
	126 Move X21, [X22]
	127 Move X22, 0x215D000
	128 Move W8, [X0+224]
	129 Move X22, [X22+3576]
	130 Compare W8, 0
	131 JumpIfNotEqual {133}
	132 Call 0x1C17DFC
	133 Move X0, X21
	134 Move X1, X31
	135 Call Type.GetTypeFromHandle, X0
	136 Move X8, [X22]
	137 Move X21, X0
	138 Move W9, [X8+224]
	139 Compare W9, 0
	140 JumpIfNotEqual {143}
	141 Move X0, X8
	142 Call 0x1C17DFC
	143 Move X0, X21
	144 Move X1, X31
	145 Call Enum.GetNames, X0
	146 Compare X0, 0
	147 JumpIfEqual {241}
	148 Move X8, [X0+24]
	149 Move X21, X0
	150 NotImplemented "Instruction CMP not yet implemented."
	151 Move X26, X31
	152 And X8, X8, 0
	153 Add X27, X21, 32
	154 NotImplemented "Instruction CMP not yet implemented."
	155 Move X0, [X24]
	156 Move X23, [X27]
	157 Call 0x1C17F10
	158 Move X1, X23
	159 Move X2, X31
	160 Move X22, X0
	161 Call OptionData..ctor, X0, X1
	162 Move W10, [X20+28]
	163 Move X8, [X20+16]
	164 Move X9, [X25]
	165 Add W10, W10, 1
	166 Move [X20+28], W10
	167 Compare X8, 0
	168 JumpIfEqual {241}
	169 NotImplemented "Instruction LDRSW not yet implemented."
	170 Move W11, [X8+24]
	171 NotImplemented "Instruction CMP not yet implemented."
	172 Add W9, W10, 1
	173 Add X8, X8, X10
	174 Move [X20+24], W9
	175 Move [X8+32], X22
	176 Move X8, [X9+32]
	177 Move X0, X20
	178 Move X1, X22
	179 Move X8, [X8+192]
	180 Move X2, [X8+112]
	181 Call List`1<Object>.AddWithResize, X0, X1
	182 Move W8, [X21+24]
	183 Add X26, X26, 1
	184 NotImplemented "Instruction CMP not yet implemented."
	185 Move X0, [X19+40]
	186 Compare X0, 0
	187 JumpIfEqual {241}
	188 Move X1, X20
	189 Move X2, X31
	190 Call Dropdown.set_options, X0, X1
	191 Move X8, [X19+40]
	192 Compare X8, 0
	193 JumpIfEqual {241}
	194 Move X9, 0x2184000
	195 Move X9, [X9+3336]
	196 Move X21, 0x2184000
	197 Move X20, [X8+312]
	198 Move X0, [X9]
	199 Move X21, [X21+3312]
	200 Call 0x1C17F10
	201 Move X2, [X21]
	202 Move X1, X19
	203 Move X3, X31
	204 Move X21, X0
	205 Call UnityAction`1<Int32>..ctor, X0, X1, X2
	206 Compare X20, 0
	207 JumpIfEqual {241}
	208 Move X8, 0x2184000
	209 Move X8, [X8+3344]
	210 Move X0, X20
	211 Move X1, X21
	212 Move X2, [X8]
	213 Call UnityEvent`1<Int32>.AddListener, X0, X1
	214 Move S0, -1
	215 Move X0, X19
	216 Call FusionNetworkObjectStatsGraphCombine.UpdateHeight, X0, V0
	217 Move X0, [X19+112]
	218 Compare X0, 0
	219 JumpIfEqual {241}
	220 Move X19, [X19+32]
	221 Move X1, X31
	222 Call NetworkObject.get_Name, X0
	223 Compare X19, 0
	224 JumpIfEqual {241}
	225 Move X8, [X19]
	226 Move X1, X0
	227 Move X0, X19
	228 Move X20, [X31+64]
	229 Move X19, [X31+72]
	230 Move X3, [X8+1512]
	231 Move X2, [X8+1520]
	232 Move X22, [X31+48]
	233 Move X21, [X31+56]
	234 Move X24, [X31+32]
	235 Move X23, [X31+40]
	236 Move X26, [X31+16]
	237 Move X25, [X31+24]
	238 Move X30, [X31+80]
	239 Move X27, [X31+88]
	240 CallNoReturn X3
	241 Call 0x1C17F20
	242 Call 0x1C17F28

Method: System.Void OnDropDownChanged(System.Int32 arg0)

Disassembly:
	0x01F97818 MOV X0, X20
	0x01F9781C MOV X1, X19
	0x01F97820 MOV W2, W21
	0x01F97824 MOV X3, X22
	0x01F97828 BL 0x1F98184
	0x01F9782C LDR X0, [X19 + 0x78]
	0x01F97830 CBZ X0, 0x1F97A50
	0x01F97834 ADRP X8, 0x2183000
	0x01F97838 LDR X8, [X8 + 0xE20]
	0x01F9783C LDR X1, [X8]
	0x01F97840 BL 0x21E5548
	0x01F97844 LDR X8, [X19 + 0x38]
	0x01F97848 STR X0, [X19 + 0x60]
	0x01F9784C CBZ X8, 0x1F97A50
	0x01F97850 MOV X20, X0
	0x01F97854 MOV X0, X8
	0x01F97858 MOV X1, X31
	0x01F9785C BL 0x1E9EA20
	0x01F97860 ADRP X8, 0x215F000
	0x01F97864 LDR X8, [X8 + 0xE40]
	0x01F97868 STR W0, [X31 + 0x8]
	0x01F9786C LDR X8, [X8]
	0x01F97870 LDR W9, [X8 + 0xE0]
	0x01F97874 CBNZ W9, 0x1F97880
	0x01F97878 MOV X0, X8
	0x01F9787C BL 0x1C16DFC
	0x01F97880 ADD X0, X31, 0x8
	0x01F97884 MOV X1, X31
	0x01F97888 BL 0x1E8D8F0
	0x01F9788C CBZ X20, 0x1F97A50

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Subtract W8, W1, 1
	004 Move W9, [X0+48]
	005 Move W10, 1
	006 NotImplemented "Instruction LSLV not yet implemented."
	007 Move X19, X0
	008 And W31, W9, W1
	009 NotImplemented "Instruction BIC not yet implemented."
	010 Move X0, X19
	011 Move [X19+48], W8
	012 Call FusionNetworkObjectStatsGraphCombine.DestroyStatGraph, X0, X1
	013 Move X30, [X31+16]
	014 Move X19, [X31+24]
	015 Return 
	016 Or W8, W9, W1
	017 Move X0, X19
	018 Move [X19+48], W8
	019 Call FusionNetworkObjectStatsGraphCombine.InstantiateStatGraph, X0, X1
	020 Move S0, -1
	021 Move X0, X19
	022 Call FusionNetworkObjectStatsGraphCombine.UpdateHeight, X0, V0
	023 Move X0, [X19+40]
	024 Compare X0, 0
	025 JumpIfEqual {32}
	026 Move W1, W31
	027 Move X2, X31
	028 Move X30, [X31+16]
	029 Move X19, [X31+24]
	030 Call Dropdown.SetValueWithoutNotify, X0, X1
	031 Return 
	032 Call 0x1C17F20

Method: System.Void InstantiateStatGraph(Fusion.Statistics.NetworkObjectStat stat)

Disassembly:
	0x01F97984 LDR X8, [X8 + 0x6C0]
	0x01F97988 ADRP X9, 0x2183000
	0x01F9798C MOV X19, X0
	0x01F97990 LDR X8, [X8]
	0x01F97994 LDR X9, [X9 + 0xDF0]
	0x01F97998 LDR W10, [X8 + 0xE0]
	0x01F9799C LDR X20, [X9]
	0x01F979A0 CBNZ W10, 0x1F979AC
	0x01F979A4 MOV X0, X8
	0x01F979A8 BL 0x1C16DFC
	0x01F979AC MOV X0, X20
	0x01F979B0 MOV X1, X31
	0x01F979B4 BL 0x338C698
	0x01F979B8 CBZ X19, 0x1F97A50
	0x01F979BC MOV X20, X0
	0x01F979C0 CBZ X0, 0x1F979D8
	0x01F979C4 LDR X8, [X19]
	0x01F979C8 MOV X0, X20
	0x01F979CC LDR X1, [X8 + 0x40]
	0x01F979D0 BL 0x1C16E00
	0x01F979D4 CBZ X0, 0x1F97A58
	0x01F979D8 LDR W8, [X19 + 0x18]
	0x01F979DC CBZ W8, 0x1F97A54
	0x01F979E0 STR X20, [X19 + 0x20]
	0x01F979E4 ADRP X8, 0x2183000
	0x01F979E8 LDR X8, [X8 + 0xE28]
	0x01F979EC MOV X1, X31
	0x01F979F0 LDR X0, [X8]
	0x01F979F4 BL 0x338C698
	0x01F979F8 MOV X20, X0
	0x01F979FC CBZ X0, 0x1F97A14
	0x01F97A00 LDR X8, [X19]
	0x01F97A04 MOV X0, X20
	0x01F97A08 LDR X1, [X8 + 0x40]
	0x01F97A0C BL 0x1C16E00
	0x01F97A10 CBZ X0, 0x1F97A58
	0x01F97A14 LDR W8, [X19 + 0x18]
	0x01F97A18 CMP W8, 0x1
	0x01F97A1C B.LS 0x1F97A54
	0x01F97A20 STR X20, [X19 + 0x28]
	0x01F97A24 ADRP X8, 0x215C000
	0x01F97A28 LDR X8, [X8 + 0xA58]
	0x01F97A2C LDR X0, [X8]
	0x01F97A30 BL 0x1C16F10
	0x01F97A34 ADRP X8, 0x2183000
	0x01F97A38 LDR X8, [X8 + 0xE38]
	0x01F97A3C MOV X2, X19
	0x01F97A40 MOV X3, X31
	0x01F97A44 LDR X1, [X8]
	0x01F97A48 BL 0x3C35A8C
	0x01F97A4C B 0x1F976DC
	0x01F97A50 BL 0x1C16F20
	0x01F97A54 BL 0x1C16F28
	0x01F97A58 BL 0x1C16F44
	0x01F97A5C MOV X1, X31
	0x01F97A60 BL 0x1C16DEC
	0x01F97A64 CBZ X1, 0x1F97A70
	0x01F97A68 STR X1, [X0 + 0x90]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x2443000
	008 Move X21, 0x215D000
	009 Move W8, [X22+1884]
	010 Move X21, [X21+1432]
	011 Move W19, W1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {28}
	017 Move X0, 0x2184000
	018 Move X0, [X0+3376]
	019 Call 0x1C17CF4
	020 Move X0, 0x2184000
	021 Move X0, [X0+3384]
	022 Call 0x1C17CF4
	023 Move X0, 0x215D000
	024 Move X0, [X0+1432]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X22+1884], W8
	028 Move X0, [X21]
	029 Move X23, 0x2184000
	030 Move X22, [X20+96]
	031 Move X21, [X20+64]
	032 Move W8, [X0+224]
	033 Move X23, [X23+3384]
	034 Compare W8, 0
	035 JumpIfNotEqual {37}
	036 Call 0x1C17DFC
	037 Move X2, [X23]
	038 Move X0, X22
	039 Move X1, X21
	040 Call 0x222E488, X0, X1
	041 Move X8, [X20+112]
	042 Compare X8, 0
	043 JumpIfEqual {73}
	044 Move X8, [X8+32]
	045 Move X21, X0
	046 Compare X8, 0
	047 JumpIfEqual {51}
	048 Move W1, [X8]
	049 Compare X21, 0
	050 JumpIfNotEqual {54}
	051 Move X1, X31
	052 Compare X21, 0
	053 JumpIfEqual {73}
	054 Move X0, X21
	055 Move W2, W19
	056 Call FusionNetworkObjectStatsGraph.SetupNetworkObjectStat, X0, X1, X2
	057 Move X0, [X20+88]
	058 Compare X0, 0
	059 JumpIfEqual {73}
	060 Move X8, 0x2184000
	061 Move X8, [X8+3376]
	062 Move W1, W19
	063 Move X2, X21
	064 Move X20, [X31+32]
	065 Move X19, [X31+40]
	066 Move X3, [X8]
	067 Move X22, [X31+16]
	068 Move X21, [X31+24]
	069 Move X30, [X31+48]
	070 Move X23, [X31+56]
	071 Call Dictionary`2<Int32Enum, Object>.Add, X0, X1, X2
	072 Return 
	073 Call 0x1C17F20

Method: System.Void DestroyStatGraph(Fusion.Statistics.NetworkObjectStat stat)

Disassembly:
	0x01F97890 MOV X1, X0
	0x01F97894 MOV X0, X20
	0x01F97898 MOV X2, X19
	0x01F9789C BL 0x1F9835C
	0x01F978A0 LDR X0, [X19 + 0x78]
	0x01F978A4 CBZ X0, 0x1F97A50
	0x01F978A8 ADRP X8, 0x2183000
	0x01F978AC LDR X8, [X8 + 0xE18]
	0x01F978B0 MOVZ W1, 0x1
	0x01F978B4 LDR X2, [X8]
	0x01F978B8 BL 0x21E568C
	0x01F978BC LDR X8, [X19 + 0x78]
	0x01F978C0 STR X0, [X19 + 0x68]
	0x01F978C4 CBZ X8, 0x1F97A50
	0x01F978C8 ADRP X9, 0x2183000
	0x01F978CC LDR X9, [X9 + 0xE08]
	0x01F978D0 MOV X0, X8
	0x01F978D4 LDR X1, [X9]
	0x01F978D8 BL 0x21E51FC
	0x01F978DC MOV X0, X19
	0x01F978E0 BL 0x1F97A74
	0x01F978E4 ADRP X8, 0x2183000
	0x01F978E8 LDR X8, [X8 + 0x548]
	0x01F978EC LDR X20, [X19 + 0x38]
	0x01F978F0 LDR X21, [X19 + 0x78]
	0x01F978F4 LDR X0, [X8]
	0x01F978F8 LDR W8, [X0 + 0xE0]
	0x01F978FC CBNZ W8, 0x1F97904
	0x01F97900 BL 0x1C16DFC
	0x01F97904 MOV X0, X20
	0x01F97908 MOV X1, X21
	0x01F9790C MOV X2, X31
	0x01F97910 BL 0x1F88CBC
	0x01F97914 LDR W8, [X19 + 0x88]
	0x01F97918 CBZ W8, 0x1F97924
	0x01F9791C MOV X0, X19
	0x01F97920 BL 0x1F97DAC
	0x01F97924 ADRP X8, 0x2183000
	0x01F97928 LDR X8, [X8 + 0xDF8]
	0x01F9792C LDR X0, [X8]
	0x01F97930 LDR W8, [X0 + 0xE0]
	0x01F97934 CBNZ W8, 0x1F9793C
	0x01F97938 BL 0x1C16DFC
	0x01F9793C MOV X0, X31
	0x01F97940 BL 0x3E4FF90
	0x01F97944 LDR X8, [X23]
	0x01F97948 MOV X19, X0
	0x01F9794C LDR W9, [X8 + 0xE0]
	0x01F97950 CBNZ W9, 0x1F9795C
	0x01F97954 MOV X0, X8
	0x01F97958 BL 0x1C16DFC
	0x01F9795C MOV X0, X19
	0x01F97960 MOV X1, X31
	0x01F97964 BL 0x3C38948
	0x01F97968 TBNZ X0, 0x0, 0x1F976DC
	0x01F9796C ADRP X8, 0x2164000
	0x01F97970 LDR X8, [X8 + 0xC60]
	0x01F97974 MOVZ W1, 0x2
	0x01F97978 LDR X0, [X8]
	0x01F9797C BL 0x1C16D6C
	0x01F97980 ADRP X8, 0x215C000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x2443000
	006 Move W8, [X21+1885]
	007 Move W19, W1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {24}
	013 Move X0, 0x2184000
	014 Move X0, [X0+3360]
	015 Call 0x1C17CF4
	016 Move X0, 0x2184000
	017 Move X0, [X0+3368]
	018 Call 0x1C17CF4
	019 Move X0, 0x215D000
	020 Move X0, [X0+1432]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X21+1885], W8
	024 Move X0, [X20+88]
	025 Compare X0, 0
	026 JumpIfEqual {76}
	027 Move X21, 0x2184000
	028 Move X21, [X21+3368]
	029 Move W1, W19
	030 Move X2, [X21]
	031 Call Dictionary`2<Int32Enum, Object>.get_Item, X0, X1
	032 Compare X0, 0
	033 JumpIfEqual {76}
	034 Move X1, X31
	035 Call Component.get_gameObject, X0
	036 Compare X0, 0
	037 JumpIfEqual {76}
	038 Move W1, W31
	039 Move X2, X31
	040 Call GameObject.SetActive, X0, X1
	041 Move X0, [X20+88]
	042 Compare X0, 0
	043 JumpIfEqual {76}
	044 Move X2, [X21]
	045 Move W1, W19
	046 Call Dictionary`2<Int32Enum, Object>.get_Item, X0, X1
	047 Compare X0, 0
	048 JumpIfEqual {76}
	049 Move X21, 0x215D000
	050 Move X21, [X21+1432]
	051 Move X1, X31
	052 Call Component.get_gameObject, X0
	053 Move X8, [X21]
	054 Move X21, X0
	055 Move W9, [X8+224]
	056 Compare W9, 0
	057 JumpIfNotEqual {60}
	058 Move X0, X8
	059 Call 0x1C17DFC
	060 Move X0, X21
	061 Move X1, X31
	062 Call Object.Destroy, X0
	063 Move X0, [X20+88]
	064 Compare X0, 0
	065 JumpIfEqual {76}
	066 Move X8, 0x2184000
	067 Move X8, [X8+3360]
	068 Move W1, W19
	069 Move X20, [X31+16]
	070 Move X19, [X31+24]
	071 Move X2, [X8]
	072 Move X30, [X31+32]
	073 Move X21, [X31+40]
	074 Call Dictionary`2<Int32Enum, Object>.Remove, X0, X1
	075 Return 
	076 Call 0x1C17F20

Method: System.Void UpdateHeight(System.Single overrideValue = -1)

Disassembly:
	0x01F9774C MOV X1, X19
	0x01F97750 MOV X2, X31
	0x01F97754 BL 0x1EA3C38
	0x01F97758 B 0x1F976DC
	0x01F9775C ADRP X8, 0x2183000
	0x01F97760 LDR X8, [X8 + 0xDE8]
	0x01F97764 LDR X0, [X8]
	0x01F97768 BL 0x1C16F10
	0x01F9776C ADRP X8, 0x2183000
	0x01F97770 LDR X8, [X8 + 0xDE0]
	0x01F97774 MOV X21, X0
	0x01F97778 LDR X1, [X8]
	0x01F9777C BL 0x2AA4804
	0x01F97780 LDR X20, [X19 + 0x48]
	0x01F97784 MOV X0, X19
	0x01F97788 MOV X1, X31
	0x01F9778C STR X21, [X19 + 0x80]
	0x01F97790 BL 0x3C32E90
	0x01F97794 LDR X8, [X23]
	0x01F97798 MOV X21, X0
	0x01F9779C LDR W9, [X8 + 0xE0]
	0x01F977A0 CBNZ W9, 0x1F977AC
	0x01F977A4 MOV X0, X8
	0x01F977A8 BL 0x1C16DFC
	0x01F977AC ADRP X8, 0x2160000
	0x01F977B0 LDR X8, [X8 + 0x1D0]
	0x01F977B4 MOV X0, X20
	0x01F977B8 MOV X1, X21
	0x01F977BC LDR X2, [X8]
	0x01F977C0 BL 0x222D488
	0x01F977C4 STR X0, [X19 + 0x78]
	0x01F977C8 CBZ X0, 0x1F97A50
	0x01F977CC ADRP X8, 0x2183000
	0x01F977D0 LDR X8, [X8 + 0xE10]
	0x01F977D4 LDR X1, [X8]
	0x01F977D8 BL 0x21E5548
	0x01F977DC STR X0, [X19 + 0x70]
	0x01F977E0 ADRP X8, 0x2183000
	0x01F977E4 LDR W21, [X19 + 0x8C]
	0x01F977E8 LDR X8, [X8 + 0xE30]
	0x01F977EC MOV X20, X0
	0x01F977F0 LDR X0, [X8]
	0x01F977F4 BL 0x1C16F10
	0x01F977F8 ADRP X8, 0x2183000
	0x01F977FC LDR X8, [X8 + 0xE00]
	0x01F97800 MOV X1, X19
	0x01F97804 MOV X3, X31
	0x01F97808 MOV X22, X0
	0x01F9780C LDR X2, [X8]
	0x01F97810 BL 0x3C45BE8
	0x01F97814 CBZ X20, 0x1F97A50

ISIL:
	001 Move [X31-48], D9
	002 Move [X31-40], D8
	003 Move [X31+16], X30
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x2443000
	007 Move W8, [X20+1886]
	008 Move V8, V0
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x2184000
	015 Move X0, [X0+3352]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1886], W8
	019 Move X0, [X19+56]
	020 Compare X0, 0
	021 JumpIfEqual {63}
	022 Move X1, X31
	023 Call RectTransform.get_sizeDelta, X0
	024 NotImplemented "Instruction FCMP not yet implemented."
	025 Move V9, V0
	026 Move X0, [X19+88]
	027 Compare X0, 0
	028 JumpIfEqual {63}
	029 Move X8, 0x2184000
	030 Move V8, [X19+80]
	031 Move X8, [X8+3352]
	032 Move X1, [X8]
	033 Call Dictionary`2<Int32Enum, Object>.get_Count, X0
	034 Move V0, [X19+84]
	035 NotImplemented "Instruction SCVTF not yet implemented."
	036 Multiply S0, S0, S1
	037 Add S8, S8, S0
	038 Move X0, [X19+56]
	039 Compare X0, 0
	040 JumpIfEqual {63}
	041 Move V0, V9
	042 Move V1, V8
	043 Move X1, X31
	044 Call RectTransform.set_sizeDelta, X0, X1
	045 Move X0, [X19+104]
	046 Compare X0, 0
	047 JumpIfEqual {63}
	048 Move W1, W31
	049 Move X2, X31
	050 Call Behaviour.set_enabled, X0, X1
	051 Move X0, [X19+104]
	052 Compare X0, 0
	053 JumpIfEqual {63}
	054 Move X20, [X31+32]
	055 Move X19, [X31+40]
	056 Move X30, [X31+16]
	057 Move W1, 1
	058 Move X2, X31
	059 Move D9, [X31+48]
	060 Move D8, [X31+56]
	061 Call Behaviour.set_enabled, X0, X1
	062 Return 
	063 Call 0x1C17F20

Method: System.Void OnDisable()

Disassembly:
	0x01F97A6C B 0x1F97A74
	0x01F97A70 RET
	0x01F97A74 STP X30, X21, [X31 - 0x20]!
	0x01F97A78 STP X20, X19, [X31 + 0x10]
	0x01F97A7C ADRP X21, 0x2442000
	0x01F97A80 ADRP X20, 0x215C000
	0x01F97A84 LDRB W8, [X21 + 0x767]
	0x01F97A88 LDR X20, [X20 + 0x598]
	0x01F97A8C MOV X19, X0
	0x01F97A90 TBNZ X8, 0x0, 0x1F97AA8
	0x01F97A94 ADRP X0, 0x215C000
	0x01F97A98 LDR X0, [X0 + 0x598]
	0x01F97A9C BL 0x1C16CF4
	0x01F97AA0 MOVZ W8, 0x1
	0x01F97AA4 STRB W8, [X21 + 0x767]
	0x01F97AA8 LDR X0, [X20]
	0x01F97AAC LDR X20, [X19 + 0x60]
	0x01F97AB0 LDR W8, [X0 + 0xE0]
	0x01F97AB4 CBNZ W8, 0x1F97ABC
	0x01F97AB8 BL 0x1C16DFC
	0x01F97ABC MOV X0, X20
	0x01F97AC0 MOV X1, X31
	0x01F97AC4 BL 0x3C38948
	0x01F97AC8 TBZ X0, 0x0, 0x1F97AE4
	0x01F97ACC LDR X0, [X19 + 0x60]
	0x01F97AD0 CBZ X0, 0x1F97AF0
	0x01F97AD4 LDR X1, [X19 + 0x90]
	0x01F97AD8 LDP X20, X19, [X31 + 0x10]
	0x01F97ADC LDP X30, X21, [X31], #0x20
	0x01F97AE0 B 0x1F97B90
	0x01F97AE4 LDP X20, X19, [X31 + 0x10]
	0x01F97AE8 LDP X30, X21, [X31], #0x20
	0x01F97AEC RET
	0x01F97AF0 BL 0x1C16F20
	0x01F97AF4 STR X30, [X31 - 0x30]!
	0x01F97AF8 STP X22, X21, [X31 + 0x10]
	0x01F97AFC STP X20, X19, [X31 + 0x20]
	0x01F97B00 ADRP X22, 0x2442000
	0x01F97B04 ADRP X21, 0x215C000
	0x01F97B08 LDRB W8, [X22 + 0x766]
	0x01F97B0C LDR X21, [X21 + 0x598]
	0x01F97B10 MOV W19, W1
	0x01F97B14 MOV X20, X0
	0x01F97B18 TBNZ X8, 0x0, 0x1F97B30
	0x01F97B1C ADRP X0, 0x215C000
	0x01F97B20 LDR X0, [X0 + 0x598]
	0x01F97B24 BL 0x1C16CF4
	0x01F97B28 MOVZ W8, 0x1
	0x01F97B2C STRB W8, [X22 + 0x766]
	0x01F97B30 STR W19, [X20 + 0x8C]
	0x01F97B34 LDR X0, [X21]
	0x01F97B38 LDR X21, [X20 + 0x70]
	0x01F97B3C LDR W8, [X0 + 0xE0]
	0x01F97B40 CBNZ W8, 0x1F97B48
	0x01F97B44 BL 0x1C16DFC
	0x01F97B48 MOV X0, X21
	0x01F97B4C MOV X1, X31
	0x01F97B50 BL 0x3C38948
	0x01F97B54 TBZ X0, 0x0, 0x1F97B74
	0x01F97B58 LDR X0, [X20 + 0x70]
	0x01F97B5C CBZ X0, 0x1F97B84
	0x01F97B60 STR W19, [X0 + 0x70]
	0x01F97B64 LDP X20, X19, [X31 + 0x20]
	0x01F97B68 LDP X22, X21, [X31 + 0x10]
	0x01F97B6C LDR X30, [X31], #0x30
	0x01F97B70 B 0x1F994B4
	0x01F97B74 LDP X20, X19, [X31 + 0x20]
	0x01F97B78 LDP X22, X21, [X31 + 0x10]
	0x01F97B7C LDR X30, [X31], #0x30
	0x01F97B80 RET
	0x01F97B84 BL 0x1C16F20
	0x01F97B88 STR W1, [X0 + 0x70]
	0x01F97B8C B 0x1F994B4
	0x01F97B90 SUB X31, X31, 0xE0
	0x01F97B94 STP X30, X25, [X31 + 0xA0]
	0x01F97B98 STP X24, X23, [X31 + 0xB0]
	0x01F97B9C STP X22, X21, [X31 + 0xC0]
	0x01F97BA0 STP X20, X19, [X31 + 0xD0]
	0x01F97BA4 ADRP X21, 0x2442000
	0x01F97BA8 LDRB W8, [X21 + 0x789]
	0x01F97BAC MOV X20, X1
	0x01F97BB0 MOV X19, X0
	0x01F97BB4 TBNZ X8, 0x0, 0x1F97BFC
	0x01F97BB8 ADRP X0, 0x2183000
	0x01F97BBC LDR X0, [X0 + 0xE40]
	0x01F97BC0 BL 0x1C16CF4
	0x01F97BC4 ADRP X0, 0x2183000
	0x01F97BC8 LDR X0, [X0 + 0xE48]
	0x01F97BCC BL 0x1C16CF4
	0x01F97BD0 ADRP X0, 0x2183000
	0x01F97BD4 LDR X0, [X0 + 0xE50]
	0x01F97BD8 BL 0x1C16CF4
	0x01F97BDC ADRP X0, 0x2183000
	0x01F97BE0 LDR X0, [X0 + 0xE58]
	0x01F97BE4 BL 0x1C16CF4
	0x01F97BE8 ADRP X0, 0x2183000
	0x01F97BEC LDR X0, [X0 + 0xE60]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+32], X30
	003 Move [X31+48], X20
	004 Move [X31+56], X19
	005 Move X20, 0x2443000
	006 Move W8, [X20+1887]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {29}
	012 Move X0, 0x2184000
	013 Move X0, [X0+3392]
	014 Call 0x1C17CF4
	015 Move X0, 0x2184000
	016 Move X0, [X0+3400]
	017 Call 0x1C17CF4
	018 Move X0, 0x2184000
	019 Move X0, [X0+3408]
	020 Call 0x1C17CF4
	021 Move X0, 0x2184000
	022 Move X0, [X0+3416]
	023 Call 0x1C17CF4
	024 Move X0, 0x2184000
	025 Move X0, [X0+3424]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X20+1887], W8
	029 Move [X31+8], X31
	030 Move [X31+16], X31
	031 Move [X31+24], X31
	032 Move X0, [X19+88]
	033 Compare X0, 0
	034 JumpIfEqual {70}
	035 Move X8, 0x2184000
	036 Move X8, [X8+3392]
	037 Move X1, [X8]
	038 Call Dictionary`2<Int32Enum, Object>.get_Values, X0
	039 Compare X0, 0
	040 JumpIfEqual {77}
	041 Move X8, 0x2184000
	042 Move X8, [X8+3424]
	043 Move X20, 0x2184000
	044 Move X19, 0x2184000
	045 Move X1, [X8]
	046 Move X20, [X20+3408]
	047 Move X19, [X19+3400]
	048 Add X8, X31, 8
	049 Call ValueCollection<Int32Enum, Object>.GetEnumerator, X0
	050 Move X1, [X20]
	051 Add X0, X31, 8
	052 Call Enumerator<Int32Enum, Object>.MoveNext, X0
	053 Move TEMP, X0
	054 And TEMP, TEMP, 1
	055 Compare TEMP, 1
	056 JumpIfNotEqual {67}
	057 Move X0, [X31+24]
	058 Compare X0, 0
	059 JumpIfEqual {75}
	060 Move X1, X31
	061 Call Component.get_gameObject, X0
	062 Compare X0, 0
	063 JumpIfEqual {76}
	064 Move W1, W31
	065 Move X2, X31
	066 Call GameObject.SetActive, X0, X1
	067 Move X1, [X19]
	068 Add X0, X31, 8
	069 Call Enumerator<Int32Enum, Object>.Dispose, X0
	070 Move X20, [X31+48]
	071 Move X19, [X31+56]
	072 Move X30, [X31+32]
	073 Add X31, X31, 64
	074 Return 
	075 Call 0x1C17F20
	076 Call 0x1C17F20
	077 Call 0x1C17F20
	078 Move X19, X0
	079 NotImplemented "Instruction CMP not yet implemented."
	080 Move X0, X19
	081 Call 0x3EB2AD0
	082 Move X20, [X0]
	083 Call 0x3EB2AE0
	084 Move X8, 0x2184000
	085 Move X8, [X8+3400]
	086 Add X0, X31, 8
	087 Move X1, [X8]
	088 Call Enumerator<Int32Enum, Object>.Dispose, X0
	089 Compare X20, 0
	090 JumpIfEqual {70}
	091 Move X0, X20
	092 Call 0x1C17F18
	093 Move X20, X31
	094 Move X19, X0
	095 Move X8, 0x2184000
	096 Move X8, [X8+3400]
	097 Move X1, [X8]
	098 Add X0, X31, 8
	099 Call Enumerator<Int32Enum, Object>.Dispose, X0
	100 Compare X20, 0
	101 JumpIfNotEqual {104}
	102 Move X0, X19
	103 Call 0x1D2D690
	104 Move X0, X20
	105 Call 0x1C17F18
	106 Call 0x1991590

Method: System.Void OnEnable()

Disassembly:
	0x01F97BF0 BL 0x1C16CF4
	0x01F97BF4 MOVZ W8, 0x1
	0x01F97BF8 STRB W8, [X21 + 0x789]
	0x01F97BFC MOVI V0.2D, 0x0
	0x01F97C00 STR X31, [X31 + 0x70]
	0x01F97C04 STP V0, V0, [X31 + 0x50]
	0x01F97C08 STR X31, [X31 + 0x28]
	0x01F97C0C CBZ X20, 0x1F97D10
	0x01F97C10 ADRP X8, 0x2183000
	0x01F97C14 LDR X8, [X8 + 0xE60]
	0x01F97C18 ADRP X22, 0x2183000
	0x01F97C1C ADRP X23, 0x2183000
	0x01F97C20 ADRP X21, 0x2183000
	0x01F97C24 LDR X1, [X8]
	0x01F97C28 LDR X22, [X22 + 0xE50]
	0x01F97C2C LDR X23, [X23 + 0xE40]
	0x01F97C30 LDR X21, [X21 + 0xE48]
	0x01F97C34 ADD X8, X31, 0x0
	0x01F97C38 MOV X0, X20
	0x01F97C3C ADD X25, X31, 0x0
	0x01F97C40 BL 0x30F99FC
	0x01F97C44 LDP V0, V1, [X31]
	0x01F97C48 LDR X8, [X31 + 0x20]
	0x01F97C4C ADD X9, X31, 0x50
	0x01F97C50 ADD X24, X9, 0x14
	0x01F97C54 STP V0, V1, [X31 + 0x50]
	0x01F97C58 STR X8, [X31 + 0x70]
	0x01F97C5C ORR X25, X25, 0x7
	0x01F97C60 LDR X1, [X22]
	0x01F97C64 ADD X0, X31, 0x50
	0x01F97C68 BL 0x2BDCF2C
	0x01F97C6C TBZ X0, 0x0, 0x1F97CE4
	0x01F97C70 LDR V0, [X24]
	0x01F97C74 LDR W8, [X24 + 0x10]
	0x01F97C78 LDR W20, [X31 + 0x60]
	0x01F97C7C STR V0, [X31 + 0x3]
	0x01F97C80 STR W8, [X31 + 0x40]
	0x01F97C84 LDR X0, [X19 + 0x48]
	0x01F97C88 CBZ X0, 0x1F97D08
	0x01F97C8C LDR X3, [X23]
	0x01F97C90 ADD X2, X31, 0x28
	0x01F97C94 MOV W1, W20
	0x01F97C98 BL 0x2A46818
	0x01F97C9C TBZ X0, 0x0, 0x1F97C60
	0x01F97CA0 LDR X0, [X31 + 0x28]
	0x01F97CA4 LDR V0, [X31 + 0x3]
	0x01F97CA8 LDR W8, [X31 + 0x40]
	0x01F97CAC STR V0, [X31 + 0x8]
	0x01F97CB0 STR W8, [X31 + 0x90]
	0x01F97CB4 CBZ X0, 0x1F97D0C
	0x01F97CB8 LDR X8, [X0]
	0x01F97CBC LDR W9, [X31 + 0x90]
	0x01F97CC0 LDR V0, [X31 + 0x8]
	0x01F97CC4 LDR X10, [X8 + 0x218]
	0x01F97CC8 STR W20, [X31]
	0x01F97CCC STR W9, [X25 + 0x10]
	0x01F97CD0 STR V0, [X25]
	0x01F97CD4 LDR X2, [X8 + 0x220]
	0x01F97CD8 ADD X1, X31, 0x0
	0x01F97CDC BLR X10
	0x01F97CE0 B 0x1F97C60
	0x01F97CE4 LDR X1, [X21]
	0x01F97CE8 ADD X0, X31, 0x50
	0x01F97CEC BL 0x2BDCF28
	0x01F97CF0 LDP X20, X19, [X31 + 0xD0]
	0x01F97CF4 LDP X22, X21, [X31 + 0xC0]
	0x01F97CF8 LDP X24, X23, [X31 + 0xB0]
	0x01F97CFC LDP X30, X25, [X31 + 0xA0]
	0x01F97D00 ADD X31, X31, 0xE0
	0x01F97D04 RET
	0x01F97D08 BL 0x1C16F20
	0x01F97D0C BL 0x1C16F20
	0x01F97D10 BL 0x1C16F20
	0x01F97D14 B 0x1F97D24
	0x01F97D18 B 0x1F97D24
	0x01F97D1C B 0x1F97D24
	0x01F97D20 B 0x1F97D24
	0x01F97D24 MOV X19, X0
	0x01F97D28 CMP W1, 0x1
	0x01F97D2C B.NE 0x1F97D58
	0x01F97D30 MOV X0, X19
	0x01F97D34 BL 0x3EB1AD0
	0x01F97D38 LDR X20, [X0]
	0x01F97D3C BL 0x3EB1AE0
	0x01F97D40 LDR X1, [X21]
	0x01F97D44 ADD X0, X31, 0x50
	0x01F97D48 BL 0x2BDCF28
	0x01F97D4C CBZ X20, 0x1F97CF0
	0x01F97D50 MOV X0, X20
	0x01F97D54 BL 0x1C16F18
	0x01F97D58 MOV X20, X31
	0x01F97D5C B 0x1F97D64
	0x01F97D60 MOV X19, X0
	0x01F97D64 LDR X1, [X21]
	0x01F97D68 ADD X0, X31, 0x50
	0x01F97D6C BL 0x2BDCF28
	0x01F97D70 CBNZ X20, 0x1F97D7C

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+32], X30
	003 Move [X31+48], X20
	004 Move [X31+56], X19
	005 Move X20, 0x2443000
	006 Move W8, [X20+1888]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {29}
	012 Move X0, 0x2184000
	013 Move X0, [X0+3392]
	014 Call 0x1C17CF4
	015 Move X0, 0x2184000
	016 Move X0, [X0+3400]
	017 Call 0x1C17CF4
	018 Move X0, 0x2184000
	019 Move X0, [X0+3408]
	020 Call 0x1C17CF4
	021 Move X0, 0x2184000
	022 Move X0, [X0+3416]
	023 Call 0x1C17CF4
	024 Move X0, 0x2184000
	025 Move X0, [X0+3424]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X20+1888], W8
	029 Move [X31+8], X31
	030 Move [X31+16], X31
	031 Move [X31+24], X31
	032 Move X0, [X19+88]
	033 Compare X0, 0
	034 JumpIfEqual {70}
	035 Move X8, 0x2184000
	036 Move X8, [X8+3392]
	037 Move X1, [X8]
	038 Call Dictionary`2<Int32Enum, Object>.get_Values, X0
	039 Compare X0, 0
	040 JumpIfEqual {77}
	041 Move X8, 0x2184000
	042 Move X8, [X8+3424]
	043 Move X20, 0x2184000
	044 Move X19, 0x2184000
	045 Move X1, [X8]
	046 Move X20, [X20+3408]
	047 Move X19, [X19+3400]
	048 Add X8, X31, 8
	049 Call ValueCollection<Int32Enum, Object>.GetEnumerator, X0
	050 Move X1, [X20]
	051 Add X0, X31, 8
	052 Call Enumerator<Int32Enum, Object>.MoveNext, X0
	053 Move TEMP, X0
	054 And TEMP, TEMP, 1
	055 Compare TEMP, 1
	056 JumpIfNotEqual {67}
	057 Move X0, [X31+24]
	058 Compare X0, 0
	059 JumpIfEqual {75}
	060 Move X1, X31
	061 Call Component.get_gameObject, X0
	062 Compare X0, 0
	063 JumpIfEqual {76}
	064 Move W1, 1
	065 Move X2, X31
	066 Call GameObject.SetActive, X0, X1
	067 Move X1, [X19]
	068 Add X0, X31, 8
	069 Call Enumerator<Int32Enum, Object>.Dispose, X0
	070 Move X20, [X31+48]
	071 Move X19, [X31+56]
	072 Move X30, [X31+32]
	073 Add X31, X31, 64
	074 Return 
	075 Call 0x1C17F20
	076 Call 0x1C17F20
	077 Call 0x1C17F20
	078 Move X19, X0
	079 NotImplemented "Instruction CMP not yet implemented."
	080 Move X0, X19
	081 Call 0x3EB2AD0
	082 Move X20, [X0]
	083 Call 0x3EB2AE0
	084 Move X8, 0x2184000
	085 Move X8, [X8+3400]
	086 Add X0, X31, 8
	087 Move X1, [X8]
	088 Call Enumerator<Int32Enum, Object>.Dispose, X0
	089 Compare X20, 0
	090 JumpIfEqual {70}
	091 Move X0, X20
	092 Call 0x1C17F18
	093 Move X20, X31
	094 Move X19, X0
	095 Move X8, 0x2184000
	096 Move X8, [X8+3400]
	097 Move X1, [X8]
	098 Add X0, X31, 8
	099 Call Enumerator<Int32Enum, Object>.Dispose, X0
	100 Compare X20, 0
	101 JumpIfNotEqual {104}
	102 Move X0, X19
	103 Call 0x1D2D690
	104 Move X0, X20
	105 Call 0x1C17F18
	106 Call 0x1991590

Method: System.Void ToggleRenderDisplay()

Disassembly:
	0x01F97D74 MOV X0, X19
	0x01F97D78 BL 0x1D2C690
	0x01F97D7C MOV X0, X20
	0x01F97D80 BL 0x1C16F18
	0x01F97D84 BL 0x1990590
	0x01F97D88 STP X30, X19, [X31 - 0x10]!
	0x01F97D8C MOV X19, X0
	0x01F97D90 BL 0x1F97DAC
	0x01F97D94 MOV X0, X19
	0x01F97D98 BL 0x1F97A74
	0x01F97D9C LDR W1, [X19 + 0x8C]
	0x01F97DA0 MOV X0, X19
	0x01F97DA4 LDP X30, X19, [X31], #0x10
	0x01F97DA8 B 0x1F97AF4
	0x01F97DAC STP X30, X19, [X31 - 0x10]!
	0x01F97DB0 MOV X19, X0
	0x01F97DB4 BL 0x1F973D0
	0x01F97DB8 TBZ X0, 0x0, 0x1F97DD0
	0x01F97DBC LDR X0, [X19 + 0x60]
	0x01F97DC0 CBZ X0, 0x1F97DD8
	0x01F97DC4 LDR W1, [X19 + 0x88]
	0x01F97DC8 LDP X30, X19, [X31], #0x10
	0x01F97DCC B 0x1F97DDC
	0x01F97DD0 LDP X30, X19, [X31], #0x10
	0x01F97DD4 RET
	0x01F97DD8 BL 0x1C16F20
	0x01F97DDC STR X30, [X31 - 0x40]!
	0x01F97DE0 STP X24, X23, [X31 + 0x10]
	0x01F97DE4 STP X22, X21, [X31 + 0x20]
	0x01F97DE8 STP X20, X19, [X31 + 0x30]
	0x01F97DEC ADRP X21, 0x2442000
	0x01F97DF0 LDRB W8, [X21 + 0x785]
	0x01F97DF4 MOV W19, W1
	0x01F97DF8 MOV X20, X0
	0x01F97DFC TBNZ X8, 0x0, 0x1F97E50
	0x01F97E00 ADRP X0, 0x215C000
	0x01F97E04 LDR X0, [X0 + 0xDF8]
	0x01F97E08 BL 0x1C16CF4
	0x01F97E0C ADRP X0, 0x215C000
	0x01F97E10 LDR X0, [X0 + 0xE00]
	0x01F97E14 BL 0x1C16CF4
	0x01F97E18 ADRP X0, 0x215C000
	0x01F97E1C LDR X0, [X0 + 0xE18]
	0x01F97E20 BL 0x1C16CF4
	0x01F97E24 ADRP X0, 0x2183000
	0x01F97E28 LDR X0, [X0 + 0xE68]
	0x01F97E2C BL 0x1C16CF4
	0x01F97E30 ADRP X0, 0x2183000
	0x01F97E34 LDR X0, [X0 + 0xE70]
	0x01F97E38 BL 0x1C16CF4
	0x01F97E3C ADRP X0, 0x215C000
	0x01F97E40 LDR X0, [X0 + 0x6C0]
	0x01F97E44 BL 0x1C16CF4
	0x01F97E48 MOVZ W8, 0x1
	0x01F97E4C STRB W8, [X21 + 0x785]
	0x01F97E50 LDR W8, [X20 + 0x58]
	0x01F97E54 CMP W8, W19
	0x01F97E58 B.EQ 0x1F98080
	0x01F97E5C ADRP X8, 0x215C000
	0x01F97E60 LDR X8, [X8 + 0x6C0]
	0x01F97E64 LDR X0, [X8]
	0x01F97E68 ADRP X8, 0x2183000
	0x01F97E6C LDR X8, [X8 + 0xE68]
	0x01F97E70 LDR W9, [X0 + 0xE0]
	0x01F97E74 LDR X21, [X8]
	0x01F97E78 CBNZ W9, 0x1F97E80
	0x01F97E7C BL 0x1C16DFC
	0x01F97E80 MOV X0, X21
	0x01F97E84 MOV X1, X31
	0x01F97E88 BL 0x338C698

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X0
	005 Move X0, [X0+64]
	006 Compare X0, 0
	007 JumpIfEqual {86}
	008 Move X1, X31
	009 Call Component.get_gameObject, X0
	010 Compare X0, 0
	011 JumpIfEqual {86}
	012 Move X1, X31
	013 Call GameObject.get_activeSelf, X0
	014 Move X8, [X19+64]
	015 Compare X8, 0
	016 JumpIfEqual {86}
	017 Move W20, W0
	018 Move X0, X8
	019 Move X1, X31
	020 Call Component.get_gameObject, X0
	021 Compare X0, 0
	022 JumpIfEqual {86}
	023 NotImplemented "Instruction ORN not yet implemented."
	024 And W1, W20, 1
	025 Move X2, X31
	026 Call GameObject.SetActive, X0, X1
	027 Move X0, X19
	028 Move TEMP, X20
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfEqual {50}
	032 Call FusionNetworkObjectStatsGraphCombine.OnDisable, X0
	033 Move V0, [X19+80]
	034 Move X0, X19
	035 Call FusionNetworkObjectStatsGraphCombine.UpdateHeight, X0, V0
	036 Move X0, [X19+72]
	037 Compare X0, 0
	038 JumpIfEqual {86}
	039 Move X1, X31
	040 Call Component.get_transform, X0
	041 Move X8, -21676032
	042 Move V2, [X8+384]
	043 Move X19, X0
	044 Move S0, W31
	045 Move S1, W31
	046 Move X0, X31
	047 Call Quaternion.Internal_FromEulerRad, X0
	048 Compare X19, 0
	049 JumpIfNotEqual {79}
	050 Call FusionNetworkObjectStatsGraphCombine.OnEnable, X0
	051 Move S0, -1
	052 Move X0, X19
	053 Call FusionNetworkObjectStatsGraphCombine.UpdateHeight, X0, V0
	054 Move X0, [X19+72]
	055 Compare X0, 0
	056 JumpIfEqual {86}
	057 Move X1, X31
	058 Call Component.get_transform, X0
	059 Move X20, 0x2442000
	060 Move W8, [X20+1939]
	061 Move X19, X0
	062 Compare W8, 0
	063 JumpIfNotEqual {69}
	064 Move X0, 0x215E000
	065 Move X0, [X0+1448]
	066 Call 0x1C17CF4
	067 Move W8, 1
	068 Move [X20+1939], W8
	069 Compare X19, 0
	070 JumpIfEqual {86}
	071 Move X8, 0x215E000
	072 Move X8, [X8+1448]
	073 Move X8, [X8]
	074 Move X8, [X8+184]
	075 Move S2, [X8+8]
	076 Move S3, [X8+12]
	077 Move S0, [X8]
	078 Move S1, [X8+4]
	079 Move X0, X19
	080 Move X20, [X31+16]
	081 Move X19, [X31+24]
	082 Move X1, X31
	083 Move X30, [X31+32]
	084 Call Transform.set_rotation, X0, X1
	085 Return 
	086 Call 0x1C17F20

Method: System.Void DestroyCombinedGraph()

Disassembly:
	0x01F97E8C ADRP X8, 0x215C000
	0x01F97E90 LDR X8, [X8 + 0xDF8]
	0x01F97E94 MOV X21, X0
	0x01F97E98 LDR X8, [X8]
	0x01F97E9C LDR W9, [X8 + 0xE0]
	0x01F97EA0 CBNZ W9, 0x1F97EAC
	0x01F97EA4 MOV X0, X8
	0x01F97EA8 BL 0x1C16DFC
	0x01F97EAC MOV X0, X21
	0x01F97EB0 MOV X1, X31
	0x01F97EB4 BL 0x33B02B8

ISIL:
	001 Move [X31-16], X30
	002 Move X8, X0
	003 Move X0, [X0+120]
	004 Compare X0, 0
	005 JumpIfEqual {13}
	006 Move X2, [X8+128]
	007 Move X1, [X8+112]
	008 Move W3, W31
	009 Move X4, X31
	010 Move X30, [X31+16]
	011 Call FusionStatistics.MonitorNetworkObject, X0, X1, X2, X3
	012 Return 
	013 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x01F97EB8 CBZ X0, 0x1F9809C
	0x01F97EBC MOV X1, X31
	0x01F97EC0 BL 0x33A2834
	0x01F97EC4 MOV X21, X0
	0x01F97EC8 CBZ X0, 0x1F980A0
	0x01F97ECC ADRP X22, 0x215C000
	0x01F97ED0 ADRP X23, 0x2183000
	0x01F97ED4 LDR X22, [X22 + 0xE18]
	0x01F97ED8 LDR X23, [X23 + 0xE70]
	0x01F97EDC LDR X8, [X21]
	0x01F97EE0 LDR X1, [X22]
	0x01F97EE4 LDRH W9, [X8 + 0x12E]
	0x01F97EE8 CBZ X9, 0x1F97F0C
	0x01F97EEC LDR X10, [X8 + 0xB0]
	0x01F97EF0 ADD X10, X10, 0x8
	0x01F97EF4 LDUR X11, [X10 - 0x8]
	0x01F97EF8 CMP X11, X1
	0x01F97EFC B.EQ 0x1F97F1C
	0x01F97F00 SUBS X9, X9, 0x1
	0x01F97F04 ADD X10, X10, 0x10
	0x01F97F08 B.NE 0x1F97EF4
	0x01F97F0C MOV X0, X21
	0x01F97F10 MOV W2, W31
	0x01F97F14 BL 0x1C5C788
	0x01F97F18 B 0x1F97F28
	0x01F97F1C LDRSW X9, [X10]
	0x01F97F20 ADD X8, X8, X9, 0x4, LSL
	0x01F97F24 ADD X0, X8, 0x138
	0x01F97F28 LDP X8, X1, [X0]
	0x01F97F2C MOV X0, X21
	0x01F97F30 BLR X8
	0x01F97F34 TBZ X0, 0x0, 0x1F97FF0
	0x01F97F38 LDR X8, [X21]
	0x01F97F3C LDR X1, [X22]
	0x01F97F40 LDRH W9, [X8 + 0x12E]
	0x01F97F44 CBZ X9, 0x1F97F68
	0x01F97F48 LDR X10, [X8 + 0xB0]
	0x01F97F4C ADD X10, X10, 0x8
	0x01F97F50 LDUR X11, [X10 - 0x8]
	0x01F97F54 CMP X11, X1
	0x01F97F58 B.EQ 0x1F97F78
	0x01F97F5C SUBS X9, X9, 0x1
	0x01F97F60 ADD X10, X10, 0x10
	0x01F97F64 B.NE 0x1F97F50
	0x01F97F68 MOVZ W2, 0x1
	0x01F97F6C MOV X0, X21
	0x01F97F70 BL 0x1C5C788
	0x01F97F74 B 0x1F97F88
	0x01F97F78 LDR W9, [X10]
	0x01F97F7C ADD W9, W9, 0x1
	0x01F97F80 ADD X8, X8, W9, 0x4, SXTW
	0x01F97F84 ADD X0, X8, 0x138
	0x01F97F88 LDP X8, X1, [X0]
	0x01F97F8C MOV X0, X21
	0x01F97F90 BLR X8
	0x01F97F94 CBZ X0, 0x1F98098
	0x01F97F98 LDR X8, [X0]
	0x01F97F9C LDR X1, [X23]
	0x01F97FA0 LDR X8, [X8 + 0x40]
	0x01F97FA4 LDR X9, [X1 + 0x40]
	0x01F97FA8 CMP X8, X9
	0x01F97FAC B.NE 0x1F98094
	0x01F97FB0 BL 0x1C16E08
	0x01F97FB4 LDR W1, [X0]
	0x01F97FB8 LDR W8, [X20 + 0x58]
	0x01F97FBC BICS W31, W1, W19, 0x0
	0x01F97FC0 AND W8, W8, W1, 0x0
	0x01F97FC4 B.NE 0x1F97FDC
	0x01F97FC8 CMP W8, W1
	0x01F97FCC B.EQ 0x1F97EDC
	0x01F97FD0 MOV X0, X20
	0x01F97FD4 BL 0x1F9AAC8
	0x01F97FD8 B 0x1F97EDC
	0x01F97FDC CMP W8, W1
	0x01F97FE0 B.NE 0x1F97EDC
	0x01F97FE4 MOV X0, X20
	0x01F97FE8 BL 0x1F9AB04
	0x01F97FEC B 0x1F97EDC
	0x01F97FF0 MOV X22, X31
	0x01F97FF4 MOVZ W23, 0x6
	0x01F97FF8 ADRP X24, 0x215C000
	0x01F97FFC LDR X24, [X24 + 0xE00]
	0x01F98000 MOV X0, X21
	0x01F98004 LDR X1, [X24]
	0x01F98008 BL 0x1C16E00
	0x01F9800C CBZ X0, 0x1F9806C
	0x01F98010 LDR X8, [X0]
	0x01F98014 LDR X1, [X24]
	0x01F98018 MOV X21, X0
	0x01F9801C LDRH W9, [X8 + 0x12E]
	0x01F98020 CBZ X9, 0x1F98044
	0x01F98024 LDR X10, [X8 + 0xB0]
	0x01F98028 ADD X10, X10, 0x8
	0x01F9802C LDUR X11, [X10 - 0x8]
	0x01F98030 CMP X11, X1
	0x01F98034 B.EQ 0x1F98054
	0x01F98038 SUBS X9, X9, 0x1
	0x01F9803C ADD X10, X10, 0x10
	0x01F98040 B.NE 0x1F9802C
	0x01F98044 MOV X0, X21
	0x01F98048 MOV W2, W31
	0x01F9804C BL 0x1C5C788
	0x01F98050 B 0x1F98060
	0x01F98054 LDRSW X9, [X10]
	0x01F98058 ADD X8, X8, X9, 0x4, LSL
	0x01F9805C ADD X0, X8, 0x138
	0x01F98060 LDP X8, X1, [X0]
	0x01F98064 MOV X0, X21
	0x01F98068 BLR X8
	0x01F9806C CBNZ X22, 0x1F980A4
	0x01F98070 CMP W23, 0x6
	0x01F98074 B.EQ 0x1F9807C
	0x01F98078 CBNZ W23, 0x1F98080
	0x01F9807C STR W19, [X20 + 0x58]
	0x01F98080 LDP X20, X19, [X31 + 0x30]
	0x01F98084 LDP X22, X21, [X31 + 0x20]
	0x01F98088 LDP X24, X23, [X31 + 0x10]
	0x01F9808C LDR X30, [X31], #0x40
	0x01F98090 RET
	0x01F98094 BL 0x1C171E0
	0x01F98098 BL 0x1C16F20
	0x01F9809C BL 0x1C16F20
	0x01F980A0 BL 0x1C16F20
	0x01F980A4 MOV X0, X22
	0x01F980A8 BL 0x1C16F18
	0x01F980AC B 0x1F980C0
	0x01F980B0 B 0x1F980C0
	0x01F980B4 B 0x1F980C0
	0x01F980B8 B 0x1F980C0
	0x01F980BC B 0x1F980C0
	0x01F980C0 MOV X23, X0
	0x01F980C4 CMP W1, 0x1
	0x01F980C8 B.NE 0x1F980E4
	0x01F980CC MOV X0, X23
	0x01F980D0 BL 0x3EB1AD0
	0x01F980D4 LDR X22, [X0]
	0x01F980D8 BL 0x3EB1AE0
	0x01F980DC MOV W23, W31
	0x01F980E0 B 0x1F97FF8
	0x01F980E4 MOV X22, X31
	0x01F980E8 B 0x1F980F0
	0x01F980EC MOV X23, X0
	0x01F980F0 ADRP X20, 0x215B000
	0x01F980F4 LDR X20, [X20 + 0xE00]
	0x01F980F8 LDR X1, [X20]
	0x01F980FC MOV X0, X21
	0x01F98100 BL 0x1C16E00
	0x01F98104 MOV X19, X0
	0x01F98108 CBZ X0, 0x1F98164
	0x01F9810C LDR X8, [X19]
	0x01F98110 LDR X1, [X20]
	0x01F98114 LDRH W9, [X8 + 0x12E]
	0x01F98118 CBZ X9, 0x1F9813C
	0x01F9811C LDR X10, [X8 + 0xB0]
	0x01F98120 ADD X10, X10, 0x8
	0x01F98124 LDUR X11, [X10 - 0x8]
	0x01F98128 CMP X11, X1
	0x01F9812C B.EQ 0x1F9814C
	0x01F98130 SUBS X9, X9, 0x1
	0x01F98134 ADD X10, X10, 0x10
	0x01F98138 B.NE 0x1F98124
	0x01F9813C MOV X0, X19
	0x01F98140 MOV W2, W31
	0x01F98144 BL 0x1C5C788
	0x01F98148 B 0x1F98158
	0x01F9814C LDRSW X9, [X10]
	0x01F98150 ADD X8, X8, X9, 0x4, LSL
	0x01F98154 ADD X0, X8, 0x138
	0x01F98158 LDP X8, X1, [X0]
	0x01F9815C MOV X0, X19
	0x01F98160 BLR X8
	0x01F98164 CBNZ X22, 0x1F98170
	0x01F98168 MOV X0, X23
	0x01F9816C BL 0x1D2C690
	0x01F98170 MOV X0, X22
	0x01F98174 BL 0x1C16F18
	0x01F98178 BL 0x1990590
	0x01F9817C STR W1, [X0 + 0x88]
	0x01F98180 RET
	0x01F98184 STP D9, D8, [X31 - 0x50]!
	0x01F98188 STR X30, [X31 + 0x10]
	0x01F9818C STP X24, X23, [X31 + 0x20]
	0x01F98190 STP X22, X21, [X31 + 0x30]
	0x01F98194 STP X20, X19, [X31 + 0x40]
	0x01F98198 ADRP X23, 0x2441000
	0x01F9819C LDRB W8, [X23 + 0x771]
	0x01F981A0 MOV X21, X3
	0x01F981A4 MOV W22, W2
	0x01F981A8 MOV X19, X1
	0x01F981AC MOV X20, X0
	0x01F981B0 TBNZ X8, 0x0, 0x1F981E0
	0x01F981B4 ADRP X0, 0x2182000
	0x01F981B8 LDR X0, [X0 + 0xE78]
	0x01F981BC BL 0x1C16CF4
	0x01F981C0 ADRP X0, 0x2182000
	0x01F981C4 LDR X0, [X0 + 0xE80]
	0x01F981C8 BL 0x1C16CF4
	0x01F981CC ADRP X0, 0x2182000
	0x01F981D0 LDR X0, [X0 + 0xE30]
	0x01F981D4 BL 0x1C16CF4
	0x01F981D8 MOVZ W8, 0x1
	0x01F981DC STRB W8, [X23 + 0x771]
	0x01F981E0 LDR X23, [X20 + 0x30]
	0x01F981E4 MOV X0, X20
	0x01F981E8 STR W22, [X20 + 0x70]
	0x01F981EC BL 0x1F98F58
	0x01F981F0 CBZ X23, 0x1F98358
	0x01F981F4 ADRP X22, 0x2182000
	0x01F981F8 LDR X22, [X22 + 0xE80]
	0x01F981FC MOV X0, X23
	0x01F98200 MOV X1, X31
	0x01F98204 BL 0x3C3E880
	0x01F98208 LDR X8, [X22]
	0x01F9820C LDR X22, [X20 + 0x30]
	0x01F98210 MOVZ W9, 0x3
	0x01F98214 LDR X8, [X8 + 0xB8]
	0x01F98218 LDR W8, [X8]
	0x01F9821C CMP W8, 0x3
	0x01F98220 CSEL W23, W8, W9, LT
	0x01F98224 CBZ X22, 0x1F98358
	0x01F98228 MOV X0, X22
	0x01F9822C MOV X1, X31
	0x01F98230 BL 0x3C3E7F0
	0x01F98234 ADRP X24, 0x2441000
	0x01F98238 LDRB W8, [X24 + 0x78D]
	0x01F9823C MOV V8.16B, V0.16B
	0x01F98240 MOV V9.16B, V1.16B
	0x01F98244 CBNZ W8, 0x1F9825C
	0x01F98248 ADRP X0, 0x2163000
	0x01F9824C LDR X0, [X0 + 0xF08]
	0x01F98250 BL 0x1C16CF4
	0x01F98254 MOVZ W8, 0x1
	0x01F98258 STRB W8, [X24 + 0x78D]
	0x01F9825C ADRP X8, 0x2163000
	0x01F98260 LDR X8, [X8 + 0xF08]
	0x01F98264 MOVZ W9, 0x42480000
	0x01F98268 SCVTF S2, W23
	0x01F9826C FMOV S3, W9
	0x01F98270 LDR X8, [X8]
	0x01F98274 FMUL S2, S2, S3
	0x01F98278 MOV X0, X22
	0x01F9827C MOV X1, X31
	0x01F98280 LDR X8, [X8 + 0xB8]
	0x01F98284 LDP S0, S1, [X8 + 0x18]
	0x01F98288 FMUL S0, S2, S0
	0x01F9828C FMUL S1, S2, S1
	0x01F98290 FADD S0, S8, S0
	0x01F98294 FADD S1, S9, S1
	0x01F98298 BL 0x3C3E880
	0x01F9829C LDR X8, [X20 + 0x60]
	0x01F982A0 CBZ X8, 0x1F98358
	0x01F982A4 LDR X0, [X8 + 0x100]
	0x01F982A8 CBZ X0, 0x1F98358
	0x01F982AC MOV X1, X31
	0x01F982B0 BL 0x3C45B2C
	0x01F982B4 LDR X8, [X20 + 0x60]
	0x01F982B8 CBZ X8, 0x1F98358
	0x01F982BC LDR X0, [X8 + 0x100]
	0x01F982C0 CBZ X0, 0x1F98358
	0x01F982C4 MOV X1, X21
	0x01F982C8 MOV X2, X31
	0x01F982CC BL 0x3C45C8C
	0x01F982D0 LDR X8, [X20 + 0x58]
	0x01F982D4 CBZ X8, 0x1F98358
	0x01F982D8 LDR X0, [X8 + 0x100]
	0x01F982DC CBZ X0, 0x1F98358
	0x01F982E0 MOV X1, X31
	0x01F982E4 BL 0x3C45B2C
	0x01F982E8 LDR X8, [X20 + 0x58]
	0x01F982EC CBZ X8, 0x1F98358
	0x01F982F0 ADRP X9, 0x2182000
	0x01F982F4 LDR X9, [X9 + 0xE30]
	0x01F982F8 ADRP X22, 0x2182000
	0x01F982FC LDR X21, [X8 + 0x100]
	0x01F98300 LDR X0, [X9]
	0x01F98304 LDR X22, [X22 + 0xE78]
	0x01F98308 BL 0x1C16F10
	0x01F9830C LDR X2, [X22]
	0x01F98310 MOV X1, X20
	0x01F98314 MOV X3, X31
	0x01F98318 MOV X22, X0
	0x01F9831C BL 0x3C45BE8
	0x01F98320 CBZ X21, 0x1F98358
	0x01F98324 MOV X0, X21
	0x01F98328 MOV X1, X22
	0x01F9832C MOV X2, X31
	0x01F98330 BL 0x3C45C8C
	0x01F98334 LDR X8, [X20 + 0x68]
	0x01F98338 CBZ X8, 0x1F98358
	0x01F9833C STR X19, [X8 + 0x58]
	0x01F98340 LDP X20, X19, [X31 + 0x40]
	0x01F98344 LDP X22, X21, [X31 + 0x30]
	0x01F98348 LDP X24, X23, [X31 + 0x20]
	0x01F9834C LDR X30, [X31 + 0x10]
	0x01F98350 LDP D9, D8, [X31], #0x50
	0x01F98354 RET
	0x01F98358 BL 0x1C16F20
	0x01F9835C STR X30, [X31 - 0x20]!
	0x01F98360 STP X20, X19, [X31 + 0x10]
	0x01F98364 MOV X20, X0
	0x01F98368 LDR X0, [X0 + 0x28]
	0x01F9836C CBZ X0, 0x1F98398
	0x01F98370 LDR X8, [X0]
	0x01F98374 MOV X19, X2
	0x01F98378 LDR X9, [X8 + 0x5E8]
	0x01F9837C LDR X2, [X8 + 0x5F0]
	0x01F98380 BLR X9
	0x01F98384 STR X19, [X20 + 0x50]
	0x01F98388 MOV X0, X20
	0x01F9838C LDP X20, X19, [X31 + 0x10]
	0x01F98390 LDR X30, [X31], #0x20
	0x01F98394 B 0x1F9A7A4
	0x01F98398 BL 0x1C16F20
	0x01F9839C STR D8, [X31 - 0x30]!
	0x01F983A0 STP X30, X21, [X31 + 0x10]
	0x01F983A4 STP X20, X19, [X31 + 0x20]
	0x01F983A8 ADRP X21, 0x2441000
	0x01F983AC LDRB W8, [X21 + 0x769]
	0x01F983B0 MOV V8.16B, V0.16B
	0x01F983B4 MOV X19, X1
	0x01F983B8 MOV X20, X0
	0x01F983BC TBNZ X8, 0x0, 0x1F983D4

ISIL:
	001 Move X8, -21663744
	002 Move V0, [X8+2080]
	003 Move X1, X31
	004 Move [X0+80], D0
	005 Call MonoBehaviour..ctor, X0
	006 Return 
	007 Subtract X31, X31, 64
	008 Move [X31+16], X30
	009 Move [X31+24], X23
	010 Move [X31+32], X22
	011 Move [X31+40], X21
	012 Move [X31+48], X20
	013 Move [X31+56], X19
	014 Move X8, [X4+56]
	015 Move X20, X4
	016 Move X21, X3
	017 Move X22, X2
	018 Move X19, X1
	019 Move X23, X0
	020 Compare X8, 0
	021 JumpIfNotEqual {25}
	022 Move X0, X20
	023 Call 0x1C5D6E0
	024 Move X8, [X20+56]
	025 Move [X31+8], X31
	026 Move X1, [X8+32]
	027 Add X0, X31, 8
	028 Call 0x1F97FD0
	029 Move X8, [X20+56]
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move TEMP, X0
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 Invalid "Jump target not found in method."
	035 Move X2, [X8+40]
	036 Move X0, X23
	037 Move X1, X19
	038 Call MemoryMarshal.GetReference, X0
	039 Move X8, [X20+56]
	040 Move X20, X0
	041 Move X0, X22
	042 Move X1, X21
	043 Move X2, [X8+40]
	044 Call MemoryMarshal.GetReference, X0
	045 Move X8, [X31+8]
	046 Move X9, W19
	047 Move X1, X0
	048 Move X0, X20
	049 Multiply X2, X8, X9
	050 Move X3, X31
	051 Call SpanHelpers.SequenceEqual, X0, X1, X2
	052 Move X2, [X8+40]
	053 Move X0, X23
	054 Move X1, X19
	055 Call MemoryMarshal.GetReference, X0
	056 Move X8, [X20+56]
	057 Move X23, X0
	058 Move X0, X22
	059 Move X1, X21
	060 Move X2, [X8+40]
	061 Call MemoryMarshal.GetReference, X0
	062 Move X8, [X20+56]
	063 Move X1, X0
	064 Move X0, X23
	065 Move W2, W19
	066 Move X3, [X8+56]
	067 Call 0x22596B8, X0, X1, X2
	068 Move W0, W31
	069 Move X20, [X31+48]
	070 Move X19, [X31+56]
	071 Move X22, [X31+32]
	072 Move X21, [X31+40]
	073 Move X30, [X31+16]
	074 Move X23, [X31+24]
	075 And W0, W0, 1
	076 Add X31, X31, 64
	077 Return 
	078 Move [X31-48], X30
	079 Move [X31+16], X22
	080 Move [X31+24], X21
	081 Move [X31+32], X20
	082 Move [X31+40], X19
	083 Move X8, [X1+56]
	084 Move X20, X1
	085 Move X19, X0
	086 Compare X8, 0
	087 JumpIfNotEqual {124}
	088 Move X0, 0x2184000
	089 Move X0, [X0+3432]
	090 Call 0x1C17CF4
	091 Move X0, 0x2184000
	092 Move X0, [X0+3440]
	093 Call 0x1C17CF4
	094 Move X0, 0x2183000
	095 Move X0, [X0+3448]
	096 Call 0x1C17CF4
	097 Move X0, 0x2183000
	098 Move X0, [X0+3456]
	099 Call 0x1C17CF4
	100 Move X0, 0x2183000
	101 Move X0, [X0+3464]
	102 Call 0x1C17CF4
	103 Move X0, 0x2183000
	104 Move X0, [X0+3472]
	105 Call 0x1C17CF4
	106 Move X0, 0x215C000
	107 Move X0, [X0+1728]
	108 Call 0x1C17CF4
	109 Move X0, 0x2183000
	110 Move X0, [X0+3480]
	111 Call 0x1C17CF4
	112 Move X0, 0x2183000
	113 Move X0, [X0+3488]
	114 Call 0x1C17CF4
	115 Move X0, 0x2183000
	116 Move X0, [X0+3496]
	117 Call 0x1C17CF4
	118 Move X8, [X20+56]
	119 Compare X8, 0
	120 JumpIfNotEqual {124}
	121 Move X0, X20
	122 Call 0x1C5D6E0
	123 Move X8, [X20+56]
	124 Move X22, 0x215C000
	125 Move X22, [X22+1728]
	126 Move X21, [X8]
	127 Move X0, [X22]
	128 Move W9, [X0+224]
	129 Compare W9, 0
	130 JumpIfNotEqual {132}
	131 Call 0x1C17DFC
	132 Move X0, X21
	133 Move X1, X31
	134 Call Type.GetTypeFromHandle, X0
	135 Move X8, 0x2183000
	136 Move X8, [X8+3432]
	137 Move X21, X0
	138 Move X1, X31
	139 Move X8, [X8]
	140 Move X0, X8
	141 Call Type.GetTypeFromHandle, X0
	142 Move X1, X0
	143 Move X0, X21
	144 Move X2, X31
	145 Call Type.op_Equality, X0, X1
	146 Move TEMP, X0
	147 And TEMP, TEMP, 1
	148 Compare TEMP, 1
	149 JumpIfEqual {175}
	150 Move X0, [X22]
	151 Move X8, [X20+56]
	152 Move W9, [X0+224]
	153 Move X21, [X8]
	154 Compare W9, 0
	155 JumpIfNotEqual {157}
	156 Call 0x1C17DFC
	157 Move X0, X21
	158 Move X1, X31
	159 Call Type.GetTypeFromHandle, X0
	160 Move X8, 0x2183000
	161 Move X8, [X8+3472]
	162 Move X21, X0
	163 Move X1, X31
	164 Move X8, [X8]
	165 Move X0, X8
	166 Call Type.GetTypeFromHandle, X0
	167 Move X1, X0
	168 Move X0, X21
	169 Move X2, X31
	170 Call Type.op_Equality, X0, X1
	171 Move TEMP, X0
	172 And TEMP, TEMP, 1
	173 Compare TEMP, 1
	174 JumpIfNotEqual {177}
	175 Move W8, 1
	176 Move W0, 1
	177 Move X0, [X22]
	178 Move X8, [X20+56]
	179 Move W9, [X0+224]
	180 Move X21, [X8]
	181 Compare W9, 0
	182 JumpIfNotEqual {184}
	183 Call 0x1C17DFC
	184 Move X0, X21
	185 Move X1, X31
	186 Call Type.GetTypeFromHandle, X0
	187 Move X8, 0x2183000
	188 Move X8, [X8+3440]
	189 Move X21, X0
	190 Move X1, X31
	191 Move X8, [X8]
	192 Move X0, X8
	193 Call Type.GetTypeFromHandle, X0
	194 Move X1, X0
	195 Move X0, X21
	196 Move X2, X31
	197 Call Type.op_Equality, X0, X1
	198 Move TEMP, X0
	199 And TEMP, TEMP, 1
	200 Compare TEMP, 1
	201 JumpIfEqual {252}
	202 Move X0, [X22]
	203 Move X8, [X20+56]
	204 Move W9, [X0+224]
	205 Move X21, [X8]
	206 Compare W9, 0
	207 JumpIfNotEqual {209}
	208 Call 0x1C17DFC
	209 Move X0, X21
	210 Move X1, X31
	211 Call Type.GetTypeFromHandle, X0
	212 Move X8, 0x2183000
	213 Move X8, [X8+3448]
	214 Move X21, X0
	215 Move X1, X31
	216 Move X8, [X8]
	217 Move X0, X8
	218 Call Type.GetTypeFromHandle, X0
	219 Move X1, X0
	220 Move X0, X21
	221 Move X2, X31
	222 Call Type.op_Equality, X0, X1
	223 Move TEMP, X0
	224 And TEMP, TEMP, 1
	225 Compare TEMP, 1
	226 JumpIfEqual {252}
	227 Move X0, [X22]
	228 Move X8, [X20+56]
	229 Move W9, [X0+224]
	230 Move X21, [X8]
	231 Compare W9, 0
	232 JumpIfNotEqual {234}
	233 Call 0x1C17DFC
	234 Move X0, X21
	235 Move X1, X31
	236 Call Type.GetTypeFromHandle, X0
	237 Move X8, 0x2183000
	238 Move X8, [X8+3480]
	239 Move X21, X0
	240 Move X1, X31
	241 Move X8, [X8]
	242 Move X0, X8
	243 Call Type.GetTypeFromHandle, X0
	244 Move X1, X0
	245 Move X0, X21
	246 Move X2, X31
	247 Call Type.op_Equality, X0, X1
	248 Move TEMP, X0
	249 And TEMP, TEMP, 1
	250 Compare TEMP, 1
	251 JumpIfNotEqual {262}
	252 Move W0, 1
	253 Move W8, 2
	254 Move [X19], X8
	255 Move X20, [X31+32]
	256 Move X19, [X31+40]
	257 Move X22, [X31+16]
	258 Move X21, [X31+24]
	259 And W0, W0, 1
	260 Move X30, [X31+48]
	261 Return 
	262 Move X0, [X22]
	263 Move X8, [X20+56]
	264 Move W9, [X0+224]
	265 Move X21, [X8]
	266 Compare W9, 0
	267 JumpIfNotEqual {269}
	268 Call 0x1C17DFC
	269 Move X0, X21
	270 Move X1, X31
	271 Call Type.GetTypeFromHandle, X0
	272 Move X8, 0x2183000
	273 Move X8, [X8+3456]
	274 Move X21, X0
	275 Move X1, X31
	276 Move X8, [X8]
	277 Move X0, X8
	278 Call Type.GetTypeFromHandle, X0
	279 Move X1, X0
	280 Move X0, X21
	281 Move X2, X31
	282 Call Type.op_Equality, X0, X1
	283 Move TEMP, X0
	284 And TEMP, TEMP, 1
	285 Compare TEMP, 1
	286 JumpIfEqual {312}
	287 Move X0, [X22]
	288 Move X8, [X20+56]
	289 Move W9, [X0+224]
	290 Move X21, [X8]
	291 Compare W9, 0
	292 JumpIfNotEqual {294}
	293 Call 0x1C17DFC
	294 Move X0, X21
	295 Move X1, X31
	296 Call Type.GetTypeFromHandle, X0
	297 Move X8, 0x2183000
	298 Move X8, [X8+3488]
	299 Move X21, X0
	300 Move X1, X31
	301 Move X8, [X8]
	302 Move X0, X8
	303 Call Type.GetTypeFromHandle, X0
	304 Move X1, X0
	305 Move X0, X21
	306 Move X2, X31
	307 Call Type.op_Equality, X0, X1
	308 Move TEMP, X0
	309 And TEMP, TEMP, 1
	310 Compare TEMP, 1
	311 JumpIfNotEqual {314}
	312 Move W0, 1
	313 Move W8, 4
	314 Move X0, [X22]
	315 Move X8, [X20+56]
	316 Move W9, [X0+224]
	317 Move X21, [X8]
	318 Compare W9, 0
	319 JumpIfNotEqual {321}
	320 Call 0x1C17DFC
	321 Move X0, X21
	322 Move X1, X31
	323 Call Type.GetTypeFromHandle, X0
	324 Move X8, 0x2183000
	325 Move X8, [X8+3464]
	326 Move X21, X0
	327 Move X1, X31
	328 Move X8, [X8]
	329 Move X0, X8
	330 Call Type.GetTypeFromHandle, X0
	331 Move X1, X0
	332 Move X0, X21
	333 Move X2, X31
	334 Call Type.op_Equality, X0, X1
	335 Move TEMP, X0
	336 And TEMP, TEMP, 1
	337 Compare TEMP, 1
	338 JumpIfNotEqual {341}
	339 Move W0, 1
	340 Move W8, 8
	341 Move X0, [X22]
	342 Move X8, [X20+56]
	343 Move W9, [X0+224]
	344 Move X20, [X8]
	345 Compare W9, 0
	346 JumpIfNotEqual {348}
	347 Call 0x1C17DFC
	348 Move X0, X20
	349 Move X1, X31
	350 Call Type.GetTypeFromHandle, X0
	351 Move X8, 0x2183000
	352 Move X8, [X8+3496]
	353 Move X20, X0
	354 Move X1, X31
	355 Move X8, [X8]
	356 Move X0, X8
	357 Call Type.GetTypeFromHandle, X0
	358 Move X1, X0
	359 Move X0, X20
	360 Move X2, X31
	361 Call Type.op_Equality, X0, X1
	362 And W31, W0, 1
	363 Move W8, 8
	364 NotImplemented "Instruction CSEL not yet implemented."

