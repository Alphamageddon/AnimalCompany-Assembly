Type: Fusion.Statistics.FusionStatsGraphBase/FusionStatBuffer

Method: System.Int32 get_Index()

Disassembly:
	0x01F96D78 STP X20, X19, [X31 + 0x10]
	0x01F96D7C MOV X19, X0

ISIL:
	001 Move W0, [X0+8]
	002 Return X0

Method: System.Int32 get_Length()

Disassembly:
	0x01F961BC LDR X0, [X0 + 0xCB0]
	0x01F961C0 BL 0x1C16CF4
	0x01F961C4 ADRP X0, 0x2184000
	0x01F961C8 LDR X0, [X0 + 0xC40]
	0x01F961CC BL 0x1C16CF4
	0x01F961D0 MOVZ W8, 0x1
	0x01F961D4 STRB W8, [X23 + 0x759]

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0]
	003 Compare X8, 0
	004 JumpIfEqual {8}
	005 Move W0, [X8+24]
	006 Move X30, [X31+16]
	007 Return X0
	008 Call 0x1C17F20

Method: System.Single get_MaxValue()

Disassembly:
	0x01F96D80 LDR X0, [X0 + 0x40]
	0x01F96D84 CBZ X0, 0x1F96E88

ISIL:
	001 Move V0, [X0+36]
	002 Return V0

Method: System.Void .ctor(System.Int32 size, System.Boolean ignoreZeroOnAverage, System.Int32 accumulateTimeMs)

Disassembly:
	0x01F95D24 BL 0x3C124EC
	0x01F95D28 ADRP X9, 0xFFFFFFFFFEB58000
	0x01F95D2C MOVZ X8, 0x3F800000
	0x01F95D30 LDR V0, [X9 + 0x6E0]
	0x01F95D34 MOVK X8, 0x12C
	0x01F95D38 STR X8, [X19 + 0x88]
	0x01F95D3C MOVZ W8, 0xCCCD
	0x01F95D40 MOVK W8, 0x3DCC0000
	0x01F95D44 STR W0, [X19 + 0x30]
	0x01F95D48 STR W8, [X19 + 0xA0]
	0x01F95D4C STR D0, [X19 + 0xE8]
	0x01F95D50 LDR X8, [X20]
	0x01F95D54 MOV X0, X19
	0x01F95D58 LDP X22, X21, [X31 + 0x30]
	0x01F95D5C LDP X24, X23, [X31 + 0x20]
	0x01F95D60 STR X8, [X19 + 0x108]
	0x01F95D64 LDP X20, X19, [X31 + 0x40]
	0x01F95D68 LDP X26, X25, [X31 + 0x10]
	0x01F95D6C MOV X1, X31
	0x01F95D70 LDR X30, [X31], #0x50
	0x01F95D74 B 0x3C36C30
	0x01F95D78 LDR W0, [X0 + 0x8]
	0x01F95D7C RET
	0x01F95D80 LDR V0, [X0 + 0x24]
	0x01F95D84 RET
	0x01F95D88 AND W8, W1, 0x1
	0x01F95D8C STRB W8, [X0 + 0x14]
	0x01F95D90 RET
	0x01F95D94 STP X30, X19, [X31 - 0x10]!
	0x01F95D98 LDR X9, [X0]
	0x01F95D9C CBZ X9, 0x1F95E8C
	0x01F95DA0 LDR W10, [X0 + 0xC]
	0x01F95DA4 LDR W8, [X9 + 0x18]
	0x01F95DA8 MOV X19, X0
	0x01F95DAC CMP W10, W8
	0x01F95DB0 B.NE 0x1F95E00
	0x01F95DB4 LDRSW X11, [X19 + 0x8]
	0x01F95DB8 CMP W11, W10
	0x01F95DBC B.CS 0x1F95E88
	0x01F95DC0 ADD X11, X9, X11, 0x2, LSL
	0x01F95DC4 LDR V2, [X19 + 0x20]
	0x01F95DC8 LDR V1, [X11 + 0x20]
	0x01F95DCC FSUB S2, S2, S1
	0x01F95DD0 FCMP S1, 0x0
	0x01F95DD4 STR S2, [X19 + 0x20]
	0x01F95DD8 B.NE 0x1F95DEC
	0x01F95DDC LDR W11, [X19 + 0x10]
	0x01F95DE0 SUB W11, W11, 0x1
	0x01F95DE4 BIC W11, W11, W11, 0x1F
	0x01F95DE8 STR W11, [X19 + 0x10]
	0x01F95DEC LDR V2, [X19 + 0x24]
	0x01F95DF0 FCMP S1, S2
	0x01F95DF4 B.GE 0x1F95E10
	0x01F95DF8 MOV W11, W31
	0x01F95DFC B 0x1F95E14
	0x01F95E00 MOV W11, W31
	0x01F95E04 ADD W10, W10, 0x1
	0x01F95E08 STR W10, [X19 + 0xC]
	0x01F95E0C B 0x1F95E14
	0x01F95E10 MOVZ W11, 0x1

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X25, 0x2445000
	010 Move X23, 0x215F000
	011 Move X24, 0x2161000
	012 Move W8, [X25+1877]
	013 Move X23, [X23+1592]
	014 Move X24, [X24+1392]
	015 Move W20, W3
	016 Move W22, W2
	017 Move W21, W1
	018 Move X19, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {34}
	023 Move X0, 0x2160000
	024 Move X0, [X0+2544]
	025 Call 0x1C17CF4
	026 Move X0, 0x215F000
	027 Move X0, [X0+1592]
	028 Call 0x1C17CF4
	029 Move X0, 0x2161000
	030 Move X0, [X0+1392]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X25+1877], W8
	034 Move X0, [X23]
	035 Move X23, 0x2160000
	036 Move X23, [X23+2544]
	037 Move W1, W21
	038 And W22, W22, 1
	039 Call 0x1C17D6C
	040 Move [X19], X0
	041 Move [X19+8], X31
	042 Move [X19+16], W31
	043 Move [X19+20], W22
	044 Move X0, [X24]
	045 Move W8, [X0+224]
	046 Compare W8, 0
	047 JumpIfNotEqual {49}
	048 Call 0x1C17DFC
	049 NotImplemented "Instruction SCVTF not yet implemented."
	050 Move X0, X31
	051 Call TimeSpan.FromMilliseconds, V0
	052 Move X8, -21651456
	053 Move V0, [X8+1136]
	054 Move [X19+24], X0
	055 Move [X19+40], W31
	056 Move [X19+32], D0
	057 Move X0, [X23]
	058 Move W8, [X0+224]
	059 Compare W8, 0
	060 JumpIfNotEqual {63}
	061 Call 0x1C17DFC
	062 Move X0, [X23]
	063 Move X8, [X0+184]
	064 Move X22, [X31+32]
	065 Move X21, [X31+40]
	066 Move X24, [X31+16]
	067 Move X23, [X31+24]
	068 Move X8, [X8+16]
	069 Move [X19+48], X8
	070 Move X20, [X31+48]
	071 Move X19, [X31+56]
	072 Move X30, [X31+64]
	073 Move X25, [X31+72]
	074 Return 

Method: System.Void SetAccumulateTime(System.Int32 accumulateTimeMs)

Disassembly:
	0x01F96AE0 LDR X8, [X8 + 0xD40]
	0x01F96AE4 LDR X1, [X8]
	0x01F96AE8 BL 0x2A44CB8
	0x01F96AEC CBZ X0, 0x1F96B6C
	0x01F96AF0 ADRP X8, 0x2184000
	0x01F96AF4 LDR X8, [X8 + 0xD60]
	0x01F96AF8 ADRP X20, 0x2184000
	0x01F96AFC ADRP X19, 0x2184000
	0x01F96B00 LDR X1, [X8]
	0x01F96B04 LDR X20, [X20 + 0xD50]
	0x01F96B08 LDR X19, [X19 + 0xD48]
	0x01F96B0C ADD X8, X31, 0x8
	0x01F96B10 BL 0x275169C
	0x01F96B14 LDR X1, [X20]
	0x01F96B18 ADD X0, X31, 0x8
	0x01F96B1C BL 0x2BFE984
	0x01F96B20 TBZ X0, 0x0, 0x1F96B48
	0x01F96B24 LDR X0, [X31 + 0x18]
	0x01F96B28 CBZ X0, 0x1F96B64
	0x01F96B2C MOV X1, X31
	0x01F96B30 BL 0x3C32ECC
	0x01F96B34 CBZ X0, 0x1F96B68
	0x01F96B38 MOV W1, W31
	0x01F96B3C MOV X2, X31
	0x01F96B40 BL 0x3C357B4
	0x01F96B44 B 0x1F96B14
	0x01F96B48 LDR X1, [X19]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x2444000
	007 Move X22, 0x2160000
	008 Move W8, [X21+1878]
	009 Move X22, [X22+1392]
	010 Move W20, W1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x2160000
	017 Move X0, [X0+1392]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+1878], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 NotImplemented "Instruction SCVTF not yet implemented."
	027 Move X0, X31
	028 Call TimeSpan.FromMilliseconds, V0
	029 Move [X19+24], X0
	030 Move X20, [X31+32]
	031 Move X19, [X31+40]
	032 Move X22, [X31+16]
	033 Move X21, [X31+24]
	034 Move X30, [X31+48]
	035 Return 

Method: System.Void SetIgnoreZeroOnAverage(System.Boolean value)

Disassembly:
	0x01F96D88 MOV X1, X31
	0x01F96D8C BL 0x3C32ECC
	0x01F96D90 CBZ X0, 0x1F96E88

ISIL:
	001 And W8, W1, 1
	002 Move [X0+20], W8
	003 Return 

Method: System.Single get_Item(System.Int32 index)

Disassembly:
	0x01F9618C LDR X22, [X22 + 0xCA8]
	0x01F96190 MOV W20, W2
	0x01F96194 MOV X21, X1
	0x01F96198 MOV X19, X0
	0x01F9619C TBNZ X8, 0x0, 0x1F961D8
	0x01F961A0 ADRP X0, 0x2184000
	0x01F961A4 LDR X0, [X0 + 0xCA8]
	0x01F961A8 BL 0x1C16CF4
	0x01F961AC ADRP X0, 0x2184000
	0x01F961B0 LDR X0, [X0 + 0xC50]
	0x01F961B4 BL 0x1C16CF4
	0x01F961B8 ADRP X0, 0x2184000

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0]
	003 Compare X8, 0
	004 JumpIfEqual {11}
	005 Move W9, [X8+24]
	006 NotImplemented "Instruction CMP not yet implemented."
	007 Add X8, X8, W1
	008 Move V0, [X8+32]
	009 Move X30, [X31+16]
	010 Return V0
	011 Call 0x1C17F20
	012 Call 0x1C17F28

Method: System.Void Add(System.Single value, ref System.DateTime now)

Disassembly:
	0x01F960A4 TBZ X0, 0x0, 0x1F96160
	0x01F960A8 LDR W8, [X19 + 0x12C]
	0x01F960AC CMP W8, 0x8
	0x01F960B0 B.LE 0x1F960D8
	0x01F960B4 CMP W8, 0x10
	0x01F960B8 B.EQ 0x1F9610C
	0x01F960BC CMP W8, 0x20
	0x01F960C0 B.NE 0x1F96160
	0x01F960C4 LDR X8, [X31 + 0x8]
	0x01F960C8 CBZ X8, 0x1F9616C
	0x01F960CC LDR W9, [X8 + 0x14]
	0x01F960D0 LDR V0, [X8 + 0x1C]
	0x01F960D4 B 0x1F9611C
	0x01F960D8 SUB W8, W8, 0x1
	0x01F960DC CMP W8, 0x7
	0x01F960E0 B.HI 0x1F96160
	0x01F960E4 ADRP X9, 0xFFFFFFFFFEB97000
	0x01F960E8 ADD X9, X9, 0xC62
	0x01F960EC ADR X10, 0x10
	0x01F960F0 LDRB W11, [X9, X8, LSL]
	0x01F960F4 ADD X10, X10, X11, 0x2, LSL
	0x01F960F8 BR X10
	0x01F960FC LDR X8, [X31 + 0x8]
	0x01F96100 CBZ X8, 0x1F9616C
	0x01F96104 LDR V0, [X8 + 0x18]
	0x01F96108 B 0x1F96160
	0x01F9610C LDR X8, [X31 + 0x8]
	0x01F96110 CBZ X8, 0x1F9616C
	0x01F96114 LDR W9, [X8 + 0x10]
	0x01F96118 LDR V0, [X8 + 0x18]
	0x01F9611C CMP W9, 0x1
	0x01F96120 CSINC W8, W9, W31, GT
	0x01F96124 SCVTF S1, W8
	0x01F96128 FDIV S0, S0, S1
	0x01F9612C B 0x1F96160
	0x01F96130 LDR X8, [X31 + 0x8]
	0x01F96134 CBZ X8, 0x1F9616C
	0x01F96138 LDR V0, [X8 + 0x1C]
	0x01F9613C B 0x1F96160
	0x01F96140 LDR X8, [X31 + 0x8]
	0x01F96144 CBZ X8, 0x1F9616C
	0x01F96148 LDR V0, [X8 + 0x10]
	0x01F9614C B 0x1F9615C
	0x01F96150 LDR X8, [X31 + 0x8]
	0x01F96154 CBZ X8, 0x1F9616C
	0x01F96158 LDR V0, [X8 + 0x14]
	0x01F9615C SCVTF S0, S0
	0x01F96160 LDP X30, X19, [X31 + 0x10]
	0x01F96164 ADD X31, X31, 0x20
	0x01F96168 RET
	0x01F9616C BL 0x1C16F20
	0x01F96170 SUB X31, X31, 0x50
	0x01F96174 STP X30, X23, [X31 + 0x20]
	0x01F96178 STP X22, X21, [X31 + 0x30]
	0x01F9617C STP X20, X19, [X31 + 0x40]
	0x01F96180 ADRP X23, 0x2443000
	0x01F96184 ADRP X22, 0x2184000
	0x01F96188 LDRB W8, [X23 + 0x759]

ISIL:
	001 Move [X31-64], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0x2444000
	009 Move X21, 0x215F000
	010 Move W8, [X22+1879]
	011 Move X21, [X21+2544]
	012 Move X19, X1
	013 Move V8, V0
	014 Move X20, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0x215F000
	020 Move X0, [X0+2544]
	021 Call 0x1C17CF4
	022 Move X0, 0x2160000
	023 Move X0, [X0+1392]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X22+1879], W8
	027 Move V0, [X20+40]
	028 Move X23, 0x2160000
	029 Add S0, S0, S8
	030 Move [X20+40], S0
	031 Move X0, [X21]
	032 Move X22, [X19]
	033 Move X21, [X20+48]
	034 Move W8, [X0+224]
	035 Move X23, [X23+1392]
	036 Compare W8, 0
	037 JumpIfNotEqual {39}
	038 Call 0x1C17DFC
	039 Move X0, X22
	040 Move X1, X21
	041 Move X2, X31
	042 Call DateTime.op_Subtraction, X0, X1
	043 Move X8, [X23]
	044 Move X21, [X20+24]
	045 Move X22, X0
	046 Move W9, [X8+224]
	047 Compare W9, 0
	048 JumpIfNotEqual {51}
	049 Move X0, X8
	050 Call 0x1C17DFC
	051 Move X0, X22
	052 Move X1, X21
	053 Move X2, X31
	054 Call TimeSpan.op_GreaterThanOrEqual, X0, X1
	055 Move TEMP, X0
	056 And TEMP, TEMP, 1
	057 Compare TEMP, 1
	058 JumpIfNotEqual {65}
	059 Move V0, [X20+40]
	060 Move X0, X20
	061 Call FusionStatBuffer.AddOnBuffer, X0, V0
	062 Move [X20+40], W31
	063 Move X8, [X19]
	064 Move [X20+48], X8
	065 Move X20, [X31+48]
	066 Move X19, [X31+56]
	067 Move X22, [X31+32]
	068 Move X21, [X31+40]
	069 Move X30, [X31+16]
	070 Move X23, [X31+24]
	071 Move V8, [X31+64]
	072 Return 

Method: System.Void AddOnBuffer(System.Single value)

Disassembly:
	0x01F96D94 MOV X1, X31
	0x01F96D98 BL 0x3C357F8
	0x01F96D9C LDR X8, [X19 + 0x40]
	0x01F96DA0 CBZ X8, 0x1F96E88
	0x01F96DA4 MOV W20, W0
	0x01F96DA8 MOV X0, X8
	0x01F96DAC MOV X1, X31
	0x01F96DB0 BL 0x3C32ECC
	0x01F96DB4 CBZ X0, 0x1F96E88
	0x01F96DB8 ORN W20, W31, W20, 0x0
	0x01F96DBC AND W1, W20, 0x1
	0x01F96DC0 MOV X2, X31
	0x01F96DC4 BL 0x3C357B4
	0x01F96DC8 MOV X0, X19
	0x01F96DCC TBNZ X20, 0x0, 0x1F96E14
	0x01F96DD0 BL 0x1F96A6C
	0x01F96DD4 LDR V0, [X19 + 0x50]
	0x01F96DD8 MOV X0, X19
	0x01F96DDC BL 0x1F9674C
	0x01F96DE0 LDR X0, [X19 + 0x48]
	0x01F96DE4 CBZ X0, 0x1F96E88
	0x01F96DE8 MOV X1, X31
	0x01F96DEC BL 0x3C32E90
	0x01F96DF0 ADRP X8, 0xFFFFFFFFFEB54000
	0x01F96DF4 LDR V2, [X8 + 0x180]
	0x01F96DF8 MOV X19, X0
	0x01F96DFC FMOV S0, W31
	0x01F96E00 FMOV S1, W31
	0x01F96E04 MOV X0, X31
	0x01F96E08 BL 0x3C2A574
	0x01F96E0C CBNZ X19, 0x1F96E74
	0x01F96E10 B 0x1F96E88
	0x01F96E14 BL 0x1F96BF0
	0x01F96E18 FMOV S0, -1
	0x01F96E1C MOV X0, X19
	0x01F96E20 BL 0x1F9674C
	0x01F96E24 LDR X0, [X19 + 0x48]
	0x01F96E28 CBZ X0, 0x1F96E88
	0x01F96E2C MOV X1, X31
	0x01F96E30 BL 0x3C32E90
	0x01F96E34 ADRP X20, 0x2442000
	0x01F96E38 LDRB W8, [X20 + 0x793]
	0x01F96E3C MOV X19, X0
	0x01F96E40 CBNZ W8, 0x1F96E58
	0x01F96E44 ADRP X0, 0x215E000
	0x01F96E48 LDR X0, [X0 + 0x5A8]
	0x01F96E4C BL 0x1C16CF4
	0x01F96E50 MOVZ W8, 0x1
	0x01F96E54 STRB W8, [X20 + 0x793]
	0x01F96E58 CBZ X19, 0x1F96E88
	0x01F96E5C ADRP X8, 0x215E000
	0x01F96E60 LDR X8, [X8 + 0x5A8]
	0x01F96E64 LDR X8, [X8]
	0x01F96E68 LDR X8, [X8 + 0xB8]
	0x01F96E6C LDP S2, S3, [X8 + 0x8]
	0x01F96E70 LDP S0, S1, [X8]
	0x01F96E74 MOV X0, X19
	0x01F96E78 LDP X20, X19, [X31 + 0x10]
	0x01F96E7C MOV X1, X31
	0x01F96E80 LDR X30, [X31], #0x20
	0x01F96E84 B 0x3C3F7AC
	0x01F96E88 BL 0x1C16F20
	0x01F96E8C STR X30, [X31 - 0x10]!

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X9, [X0]
	004 Compare X9, 0
	005 JumpIfEqual {59}
	006 Move W10, [X0+12]
	007 Move W8, [X9+24]
	008 Move X19, X0
	009 NotImplemented "Instruction CMP not yet implemented."
	010 NotImplemented "Instruction LDRSW not yet implemented."
	011 NotImplemented "Instruction CMP not yet implemented."
	012 Add X11, X9, X11
	013 Move V2, [X19+32]
	014 Move V1, [X11+32]
	015 Subtract S2, S2, S1
	016 NotImplemented "Instruction FCMP not yet implemented."
	017 Move [X19+32], S2
	018 Move W11, [X19+16]
	019 Subtract W11, W11, 1
	020 NotImplemented "Instruction BIC not yet implemented."
	021 Move [X19+16], W11
	022 Move V2, [X19+36]
	023 NotImplemented "Instruction FCMP not yet implemented."
	024 Move W11, W31
	025 Move W11, W31
	026 Add W10, W10, 1
	027 Move [X19+12], W10
	028 Move W11, 1
	029 NotImplemented "Instruction FCMP not yet implemented."
	030 Move W12, [X19+16]
	031 Subtract W10, W10, 1
	032 Add W13, W12, 1
	033 NotImplemented "Instruction CMP not yet implemented."
	034 NotImplemented "Instruction CSINC not yet implemented."
	035 Move [X19+16], W10
	036 NotImplemented "Instruction LDRSW not yet implemented."
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Add X9, X9, X10
	039 Move [X9+32], S0
	040 Move S1, [X19+32]
	041 Move S2, [X19+36]
	042 Add S1, S1, S0
	043 NotImplemented "Instruction FCMP not yet implemented."
	044 Move [X19+32], S1
	045 Move [X19+36], S0
	046 Add W9, W10, 1
	047 NotImplemented "Instruction SDIV not yet implemented."
	048 NotImplemented "Instruction MSUB not yet implemented."
	049 Move [X19+8], W8
	050 Compare W11, 0
	051 JumpIfEqual {55}
	052 Move X0, X19
	053 Call FusionStatBuffer.CalculateMax, X0
	054 Move [X19+36], S0
	055 Move X30, [X31+16]
	056 Move X19, [X31+24]
	057 Return 
	058 Call 0x1C17F28
	059 Call 0x1C17F20

Method: System.Single get_LatestValue()

Disassembly:
	0x01F96934 BL 0x3C32ECC
	0x01F96938 LDR X8, [X21]
	0x01F9693C MOV X21, X0
	0x01F96940 LDR W9, [X8 + 0xE0]
	0x01F96944 CBNZ W9, 0x1F96950
	0x01F96948 MOV X0, X8
	0x01F9694C BL 0x1C16DFC
	0x01F96950 MOV X0, X21
	0x01F96954 MOV X1, X31
	0x01F96958 BL 0x3C394A8
	0x01F9695C LDR X0, [X20 + 0x58]
	0x01F96960 CBZ X0, 0x1F96980
	0x01F96964 ADRP X8, 0x2184000
	0x01F96968 LDR X8, [X8 + 0xD20]
	0x01F9696C MOV W1, W19
	0x01F96970 LDP X20, X19, [X31 + 0x10]
	0x01F96974 LDR X2, [X8]
	0x01F96978 LDP X30, X21, [X31], #0x20
	0x01F9697C B 0x2A46204
	0x01F96980 BL 0x1C16F20
	0x01F96984 STP X30, X23, [X31 - 0x30]!

ISIL:
	001 Move [X31-16], X30
	002 Move W8, [X0+12]
	003 Compare W8, 0
	004 JumpIfEqual {17}
	005 Move X8, [X0]
	006 Compare X8, 0
	007 JumpIfEqual {20}
	008 Move W9, [X0+8]
	009 Move W10, [X8+24]
	010 Add W9, W9, W10
	011 Subtract W9, W9, 1
	012 NotImplemented "Instruction SDIV not yet implemented."
	013 NotImplemented "Instruction MSUB not yet implemented."
	014 NotImplemented "Instruction CMP not yet implemented."
	015 Add X8, X8, W9
	016 Move V0, [X8+32]
	017 Move S0, W31
	018 Move X30, [X31+16]
	019 Return V0
	020 Call 0x1C17F20
	021 Call 0x1C17F28

Method: System.Single get_AverageValue()

Disassembly:
	0x01F96710 BL 0x1E93354
	0x01F96714 CBZ X19, 0x1F96744
	0x01F96718 LDR X8, [X19]
	0x01F9671C MOV X1, X0
	0x01F96720 MOV X0, X19
	0x01F96724 LDP X20, X19, [X31 + 0x40]
	0x01F96728 LDR X3, [X8 + 0x5E8]
	0x01F9672C LDR X2, [X8 + 0x5F0]
	0x01F96730 LDP X22, X21, [X31 + 0x30]
	0x01F96734 LDP X24, X23, [X31 + 0x20]
	0x01F96738 LDP X26, X25, [X31 + 0x10]
	0x01F9673C LDP X30, X27, [X31], #0x50

ISIL:
	001 Move W8, [X0+12]
	002 Compare W8, 0
	003 JumpIfEqual {13}
	004 Move W9, [X0+20]
	005 Move V0, [X0+32]
	006 Compare W9, 0
	007 JumpIfEqual {10}
	008 Move W9, [X0+16]
	009 Subtract W8, W8, W9
	010 NotImplemented "Instruction SCVTF not yet implemented."
	011 NotImplemented "Instruction FDIV not yet implemented."
	012 Return V0
	013 Move S0, W31
	014 Return V0

Method: System.Single CalculateMax()

Disassembly:
	0x01F96E90 MOV X8, X0
	0x01F96E94 LDR X0, [X0 + 0x78]
	0x01F96E98 CBZ X0, 0x1F96EB4
	0x01F96E9C LDR X2, [X8 + 0x80]
	0x01F96EA0 LDR X1, [X8 + 0x70]
	0x01F96EA4 MOV W3, W31
	0x01F96EA8 MOV X4, X31
	0x01F96EAC LDR X30, [X31], #0x10
	0x01F96EB0 B 0x1F98990
	0x01F96EB4 BL 0x1C16F20
	0x01F96EB8 ADRP X8, 0xFFFFFFFFFEB57000
	0x01F96EBC LDR V0, [X8 + 0x820]
	0x01F96EC0 MOV X1, X31
	0x01F96EC4 STR D0, [X0 + 0x50]
	0x01F96EC8 B 0x3C36C30
	0x01F96ECC SUB X31, X31, 0x40
	0x01F96ED0 STP X30, X23, [X31 + 0x10]
	0x01F96ED4 STP X22, X21, [X31 + 0x20]
	0x01F96ED8 STP X20, X19, [X31 + 0x30]
	0x01F96EDC LDR X8, [X4 + 0x38]
	0x01F96EE0 MOV X20, X4
	0x01F96EE4 MOV X21, X3
	0x01F96EE8 MOV X22, X2
	0x01F96EEC MOV X19, X1
	0x01F96EF0 MOV X23, X0
	0x01F96EF4 CBNZ X8, 0x1F96F04

ISIL:
	001 Move [X31-16], X30
	002 NotImplemented "Instruction LDRSW not yet implemented."
	003 NotImplemented "Instruction CMP not yet implemented."
	004 Move X11, [X0]
	005 Compare X11, 0
	006 JumpIfEqual {27}
	007 Move W10, [X11+24]
	008 Move TEMP, 0x800000
	009 Not TEMP
	010 Move W12, TEMP
	011 Move X9, X31
	012 Add X11, X11, 32
	013 Move S0, W12
	014 NotImplemented "Instruction CMP not yet implemented."
	015 Move V1, [X11]
	016 Add X9, X9, 1
	017 NotImplemented "Instruction FCMP not yet implemented."
	018 NotImplemented "Instruction FCSEL not yet implemented."
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Move TEMP, 0x800000
	021 Not TEMP
	022 Move W8, TEMP
	023 Move S0, W8
	024 Move X30, [X31+16]
	025 Return V0
	026 Call 0x1C17F28
	027 Call 0x1C17F20

