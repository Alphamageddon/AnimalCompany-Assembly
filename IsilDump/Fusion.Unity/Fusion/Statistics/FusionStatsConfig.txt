Type: Fusion.Statistics.FusionStatsConfig

Method: System.Boolean get_IsWorldAnchored()

Disassembly:
	0x01F9A154 ADRP X22, 0x215A000
	0x01F9A158 ADRP X21, 0x2180000
	0x01F9A15C ADRP X23, 0x2180000
	0x01F9A160 LDRB W8, [X20 + 0x77D]
	0x01F9A164 LDR X22, [X22 + 0xE70]
	0x01F9A168 LDR X21, [X21 + 0xF40]
	0x01F9A16C LDR X23, [X23 + 0xF10]
	0x01F9A170 MOV X19, X0
	0x01F9A174 TBNZ X8, 0x0, 0x1F9A1A4
	0x01F9A178 ADRP X0, 0x215A000
	0x01F9A17C LDR X0, [X0 + 0xE70]
	0x01F9A180 BL 0x1C16CF4
	0x01F9A184 ADRP X0, 0x2180000
	0x01F9A188 LDR X0, [X0 + 0xF40]
	0x01F9A18C BL 0x1C16CF4
	0x01F9A190 ADRP X0, 0x2180000
	0x01F9A194 LDR X0, [X0 + 0xF10]
	0x01F9A198 BL 0x1C16CF4
	0x01F9A19C MOVZ W8, 0x1
	0x01F9A1A0 STRB W8, [X20 + 0x77D]
	0x01F9A1A4 LDR X0, [X22]
	0x01F9A1A8 BL 0x1C16F10
	0x01F9A1AC LDR X2, [X21]
	0x01F9A1B0 MOV X1, X19

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x2440000
	006 Move X20, 0x215A000
	007 Move W8, [X21+1910]
	008 Move X20, [X20+1432]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x215A000
	015 Move X0, [X0+1432]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+1910], W8
	019 Move X0, [X20]
	020 Move X19, [X19+72]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move X0, X19
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X1, X31
	029 Move X2, X31
	030 Move X30, [X31+32]
	031 Move X21, [X31+40]
	032 Call Object.op_Inequality, X0, X1
	033 Return X0

Method: System.Void add__onWorldAnchorCandidatesUpdate(System.Action value)

Disassembly:
	0x01F9AA54 BL 0x3CD749C
	0x01F9AA58 LDR X8, [X19 + 0x30]
	0x01F9AA5C CBZ X8, 0x1F9AAC0
	0x01F9AA60 ADRP X9, 0x2180000
	0x01F9AA64 LDR X9, [X9 + 0xD08]
	0x01F9AA68 ADRP X21, 0x2180000
	0x01F9AA6C LDR X20, [X8 + 0x138]
	0x01F9AA70 LDR X0, [X9]
	0x01F9AA74 LDR X21, [X21 + 0xF80]
	0x01F9AA78 BL 0x1C16F10
	0x01F9AA7C LDR X2, [X21]
	0x01F9AA80 MOV X1, X19
	0x01F9AA84 MOV X3, X31
	0x01F9AA88 MOV X21, X0
	0x01F9AA8C BL 0x2725B2C
	0x01F9AA90 CBZ X20, 0x1F9AAC0
	0x01F9AA94 ADRP X8, 0x2180000
	0x01F9AA98 LDR X8, [X8 + 0xD10]
	0x01F9AA9C MOV X0, X20
	0x01F9AAA0 MOV X1, X21
	0x01F9AAA4 LDP X20, X19, [X31 + 0x40]
	0x01F9AAA8 LDR X2, [X8]
	0x01F9AAAC LDP X22, X21, [X31 + 0x30]
	0x01F9AAB0 LDP X24, X23, [X31 + 0x20]
	0x01F9AAB4 LDP X26, X25, [X31 + 0x10]
	0x01F9AAB8 LDP X30, X27, [X31], #0x50
	0x01F9AABC B 0x2729228
	0x01F9AAC0 BL 0x1C16F20
	0x01F9AAC4 BL 0x1C16F28
	0x01F9AAC8 STP X30, X19, [X31 - 0x10]!
	0x01F9AACC LDR W8, [X0 + 0x58]
	0x01F9AAD0 MOV X19, X0
	0x01F9AAD4 ORR W8, W8, W1, 0x0
	0x01F9AAD8 STR W8, [X0 + 0x58]
	0x01F9AADC BL 0x1F9AB40
	0x01F9AAE0 LDR X8, [X19 + 0x20]
	0x01F9AAE4 CBZ X8, 0x1F9AAFC
	0x01F9AAE8 LDR X2, [X8 + 0x18]
	0x01F9AAEC LDR X0, [X8 + 0x40]
	0x01F9AAF0 LDR X1, [X8 + 0x28]
	0x01F9AAF4 LDP X30, X19, [X31], #0x10
	0x01F9AAF8 BR X2
	0x01F9AAFC LDP X30, X19, [X31], #0x10
	0x01F9AB00 RET
	0x01F9AB04 STP X30, X19, [X31 - 0x10]!
	0x01F9AB08 LDR W8, [X0 + 0x58]
	0x01F9AB0C MOV X19, X0
	0x01F9AB10 BIC W8, W8, W1, 0x0
	0x01F9AB14 STR W8, [X0 + 0x58]
	0x01F9AB18 BL 0x1F9AC28
	0x01F9AB1C LDR X8, [X19 + 0x20]
	0x01F9AB20 CBZ X8, 0x1F9AB38
	0x01F9AB24 LDR X2, [X8 + 0x18]
	0x01F9AB28 LDR X0, [X8 + 0x40]
	0x01F9AB2C LDR X1, [X8 + 0x28]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x2440000
	008 Move X22, 0x2181000
	009 Move W8, [X20+1911]
	010 Move X22, [X22+3856]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x215B000
	017 Move X0, [X0+3696]
	018 Call 0x1C17CF4
	019 Move X0, 0x2181000
	020 Move X0, [X0+3856]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X20+1911], W8
	024 Move X0, [X22]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {30}
	028 Call 0x1C17DFC
	029 Move X0, [X22]
	030 Move X8, [X0+184]
	031 Move X23, 0x215B000
	032 Move X20, [X8+8]
	033 Move X23, [X23+3696]
	034 Move X0, X20
	035 Move X1, X19
	036 Move X2, X31
	037 Call Delegate.Combine, X0, X1
	038 Move X21, X0
	039 Compare X0, 0
	040 JumpIfEqual {44}
	041 Move X1, [X23]
	042 Move X8, [X21]
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Move X0, [X22]
	045 Move W8, [X0+224]
	046 Compare W8, 0
	047 JumpIfNotEqual {50}
	048 Call 0x1C17DFC
	049 Move X0, [X22]
	050 Move X8, [X0+184]
	051 Move X1, X21
	052 Move X2, X20
	053 Add X0, X8, 8
	054 Call 0x1C25138
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Move X20, X0
	057 Move X20, [X31+32]
	058 Move X19, [X31+40]
	059 Move X22, [X31+16]
	060 Move X21, [X31+24]
	061 Move X30, [X31+48]
	062 Move X23, [X31+56]
	063 Return 
	064 Move X0, X21
	065 Call 0x1C181E0

Method: System.Void remove__onWorldAnchorCandidatesUpdate(System.Action value)

Disassembly:
	0x01F9AB30 LDP X30, X19, [X31], #0x10
	0x01F9AB34 BR X2
	0x01F9AB38 LDP X30, X19, [X31], #0x10
	0x01F9AB3C RET
	0x01F9AB40 STP X30, X23, [X31 - 0x30]!
	0x01F9AB44 STP X22, X21, [X31 + 0x10]
	0x01F9AB48 STP X20, X19, [X31 + 0x20]
	0x01F9AB4C ADRP X22, 0x243F000
	0x01F9AB50 ADRP X21, 0x2159000
	0x01F9AB54 LDRB W8, [X22 + 0x786]
	0x01F9AB58 LDR X21, [X21 + 0x598]
	0x01F9AB5C MOV W19, W1
	0x01F9AB60 MOV X20, X0
	0x01F9AB64 TBNZ X8, 0x0, 0x1F9AB94
	0x01F9AB68 ADRP X0, 0x2180000
	0x01F9AB6C LDR X0, [X0 + 0xF88]
	0x01F9AB70 BL 0x1C16CF4
	0x01F9AB74 ADRP X0, 0x2180000
	0x01F9AB78 LDR X0, [X0 + 0xF90]
	0x01F9AB7C BL 0x1C16CF4
	0x01F9AB80 ADRP X0, 0x2159000
	0x01F9AB84 LDR X0, [X0 + 0x598]
	0x01F9AB88 BL 0x1C16CF4
	0x01F9AB8C MOVZ W8, 0x1
	0x01F9AB90 STRB W8, [X22 + 0x786]
	0x01F9AB94 LDR X0, [X21]
	0x01F9AB98 ADRP X23, 0x2180000
	0x01F9AB9C LDP X22, X21, [X20 + 0x38]
	0x01F9ABA0 LDR W8, [X0 + 0xE0]
	0x01F9ABA4 LDR X23, [X23 + 0xF90]
	0x01F9ABA8 CBNZ W8, 0x1F9ABB0
	0x01F9ABAC BL 0x1C16DFC
	0x01F9ABB0 LDR X2, [X23]
	0x01F9ABB4 MOV X0, X22
	0x01F9ABB8 MOV X1, X21
	0x01F9ABBC BL 0x222D488
	0x01F9ABC0 CBZ X0, 0x1F9AC08
	0x01F9ABC4 MOV W1, W19
	0x01F9ABC8 MOV X21, X0
	0x01F9ABCC BL 0x1F9A544
	0x01F9ABD0 MOV X0, X20
	0x01F9ABD4 MOV X1, X21
	0x01F9ABD8 BL 0x1F9AD40
	0x01F9ABDC LDR X0, [X20 + 0x48]
	0x01F9ABE0 CBZ X0, 0x1F9AC08
	0x01F9ABE4 ADRP X8, 0x2180000
	0x01F9ABE8 LDR X8, [X8 + 0xF88]
	0x01F9ABEC MOV W1, W19
	0x01F9ABF0 MOV X2, X21
	0x01F9ABF4 LDP X20, X19, [X31 + 0x20]
	0x01F9ABF8 LDR X3, [X8]
	0x01F9ABFC LDP X22, X21, [X31 + 0x10]
	0x01F9AC00 LDP X30, X23, [X31], #0x30
	0x01F9AC04 B 0x2A44E18
	0x01F9AC08 BL 0x1C16F20

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x2440000
	008 Move X22, 0x2181000
	009 Move W8, [X20+1912]
	010 Move X22, [X22+3856]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x215B000
	017 Move X0, [X0+3696]
	018 Call 0x1C17CF4
	019 Move X0, 0x2181000
	020 Move X0, [X0+3856]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X20+1912], W8
	024 Move X0, [X22]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {30}
	028 Call 0x1C17DFC
	029 Move X0, [X22]
	030 Move X8, [X0+184]
	031 Move X23, 0x215B000
	032 Move X20, [X8+8]
	033 Move X23, [X23+3696]
	034 Move X0, X20
	035 Move X1, X19
	036 Move X2, X31
	037 Call Delegate.Remove, X0, X1
	038 Move X21, X0
	039 Compare X0, 0
	040 JumpIfEqual {44}
	041 Move X1, [X23]
	042 Move X8, [X21]
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Move X0, [X22]
	045 Move W8, [X0+224]
	046 Compare W8, 0
	047 JumpIfNotEqual {50}
	048 Call 0x1C17DFC
	049 Move X0, [X22]
	050 Move X8, [X0+184]
	051 Move X1, X21
	052 Move X2, X20
	053 Add X0, X8, 8
	054 Call 0x1C25138
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Move X20, X0
	057 Move X20, [X31+32]
	058 Move X19, [X31+40]
	059 Move X22, [X31+16]
	060 Move X21, [X31+24]
	061 Move X30, [X31+48]
	062 Move X23, [X31+56]
	063 Return 
	064 Move X0, X21
	065 Call 0x1C181E0

Method: System.Void SetWorldAnchorCandidate(UnityEngine.Transform candidate, System.Boolean register)

Disassembly:
	0x01F9AC0C LDR X8, [X0 + 0x20]
	0x01F9AC10 CBZ X8, 0x1F9AC24
	0x01F9AC14 LDR X2, [X8 + 0x18]
	0x01F9AC18 LDR X0, [X8 + 0x40]
	0x01F9AC1C LDR X1, [X8 + 0x28]
	0x01F9AC20 BR X2
	0x01F9AC24 RET
	0x01F9AC28 SUB X31, X31, 0x30
	0x01F9AC2C STP X30, X21, [X31 + 0x10]
	0x01F9AC30 STP X20, X19, [X31 + 0x20]
	0x01F9AC34 ADRP X21, 0x243F000
	0x01F9AC38 LDRB W8, [X21 + 0x787]
	0x01F9AC3C MOV W19, W1
	0x01F9AC40 MOV X20, X0
	0x01F9AC44 TBNZ X8, 0x0, 0x1F9AC68
	0x01F9AC48 ADRP X0, 0x2180000
	0x01F9AC4C LDR X0, [X0 + 0xF98]
	0x01F9AC50 BL 0x1C16CF4
	0x01F9AC54 ADRP X0, 0x2159000
	0x01F9AC58 LDR X0, [X0 + 0x598]
	0x01F9AC5C BL 0x1C16CF4
	0x01F9AC60 MOVZ W8, 0x1
	0x01F9AC64 STRB W8, [X21 + 0x787]
	0x01F9AC68 STR X31, [X31 + 0x8]
	0x01F9AC6C LDR X0, [X20 + 0x48]
	0x01F9AC70 CBZ X0, 0x1F9ACDC
	0x01F9AC74 ADRP X8, 0x2180000
	0x01F9AC78 LDR X8, [X8 + 0xF98]
	0x01F9AC7C ADD X2, X31, 0x8
	0x01F9AC80 MOV W1, W19
	0x01F9AC84 LDR X3, [X8]
	0x01F9AC88 BL 0x2A46500
	0x01F9AC8C TBZ X0, 0x0, 0x1F9ACCC
	0x01F9AC90 LDR X0, [X31 + 0x8]
	0x01F9AC94 CBZ X0, 0x1F9ACDC
	0x01F9AC98 MOV X1, X31
	0x01F9AC9C BL 0x3C32ECC
	0x01F9ACA0 ADRP X8, 0x2159000
	0x01F9ACA4 LDR X8, [X8 + 0x598]
	0x01F9ACA8 MOV X19, X0
	0x01F9ACAC LDR X8, [X8]
	0x01F9ACB0 LDR W9, [X8 + 0xE0]
	0x01F9ACB4 CBNZ W9, 0x1F9ACC0
	0x01F9ACB8 MOV X0, X8
	0x01F9ACBC BL 0x1C16DFC
	0x01F9ACC0 MOV X0, X19
	0x01F9ACC4 MOV X1, X31
	0x01F9ACC8 BL 0x3C394A8
	0x01F9ACCC LDP X20, X19, [X31 + 0x20]
	0x01F9ACD0 LDP X30, X21, [X31 + 0x10]
	0x01F9ACD4 ADD X31, X31, 0x30
	0x01F9ACD8 RET
	0x01F9ACDC BL 0x1C16F20
	0x01F9ACE0 STP X30, X19, [X31 - 0x10]!
	0x01F9ACE4 SUBS W8, W1, 0x1
	0x01F9ACE8 B.LT 0x1F9AD34
	0x01F9ACEC LDR W9, [X0 + 0x58]
	0x01F9ACF0 MOVZ W10, 0x1
	0x01F9ACF4 LSLV W1, W10, W8
	0x01F9ACF8 MOV X19, X0
	0x01F9ACFC ANDS W31, W9, W1, 0x0
	0x01F9AD00 B.EQ 0x1F9AD0C
	0x01F9AD04 BL 0x1F9AB04
	0x01F9AD08 B 0x1F9AD10
	0x01F9AD0C BL 0x1F9AAC8
	0x01F9AD10 LDR X0, [X19 + 0x30]
	0x01F9AD14 CBZ X0, 0x1F9AD3C
	0x01F9AD18 MOV W1, W31
	0x01F9AD1C MOV X2, X31
	0x01F9AD20 BL 0x3CD761C
	0x01F9AD24 LDR X8, [X19 + 0x50]
	0x01F9AD28 CBZ X8, 0x1F9AD3C
	0x01F9AD2C LDR W9, [X19 + 0x58]
	0x01F9AD30 STR W9, [X8 + 0x88]
	0x01F9AD34 LDP X30, X19, [X31], #0x10
	0x01F9AD38 RET
	0x01F9AD3C BL 0x1C16F20
	0x01F9AD40 SUB X31, X31, 0xB0
	0x01F9AD44 STP X30, X23, [X31 + 0x80]
	0x01F9AD48 STP X22, X21, [X31 + 0x90]
	0x01F9AD4C STP X20, X19, [X31 + 0xA0]
	0x01F9AD50 ADRP X21, 0x243F000
	0x01F9AD54 LDRB W8, [X21 + 0x788]
	0x01F9AD58 MOV X19, X1
	0x01F9AD5C MOV X20, X0
	0x01F9AD60 TBNZ X8, 0x0, 0x1F9AD9C
	0x01F9AD64 ADRP X0, 0x2180000
	0x01F9AD68 LDR X0, [X0 + 0xE48]
	0x01F9AD6C BL 0x1C16CF4
	0x01F9AD70 ADRP X0, 0x2180000
	0x01F9AD74 LDR X0, [X0 + 0xE50]
	0x01F9AD78 BL 0x1C16CF4
	0x01F9AD7C ADRP X0, 0x2180000
	0x01F9AD80 LDR X0, [X0 + 0xE58]
	0x01F9AD84 BL 0x1C16CF4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x2440000
	007 Move X21, 0x2181000
	008 Move W8, [X22+1913]
	009 Move X21, [X21+3856]
	010 Move W20, W1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {30}
	016 Move X0, 0x2181000
	017 Move X0, [X0+3856]
	018 Call 0x1C17CF4
	019 Move X0, 0x2161000
	020 Move X0, [X0+2392]
	021 Call 0x1C17CF4
	022 Move X0, 0x2161000
	023 Move X0, [X0+2400]
	024 Call 0x1C17CF4
	025 Move X0, 0x2181000
	026 Move X0, [X0+3864]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X22+1913], W8
	030 Move X0, [X21]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {36}
	034 Call 0x1C17DFC
	035 Move X0, [X21]
	036 Move X8, [X0+184]
	037 Move X0, [X8]
	038 Compare X0, 0
	039 JumpIfEqual {114}
	040 Move TEMP, X20
	041 And TEMP, TEMP, 1
	042 Compare TEMP, 1
	043 JumpIfNotEqual {79}
	044 Move X8, 0x2161000
	045 Move X8, [X8+2400]
	046 Move X1, X19
	047 Move X2, [X8]
	048 Call List`1<Object>.Contains, X0, X1
	049 Move TEMP, X0
	050 And TEMP, TEMP, 1
	051 Compare TEMP, 1
	052 JumpIfEqual {84}
	053 Move X0, [X21]
	054 Move W8, [X0+224]
	055 Compare W8, 0
	056 JumpIfNotEqual {59}
	057 Call 0x1C17DFC
	058 Move X0, [X21]
	059 Move X8, [X0+184]
	060 Move X0, [X8]
	061 Compare X0, 0
	062 JumpIfEqual {114}
	063 Move X9, 0x2161000
	064 Move X9, [X9+2392]
	065 Move W10, [X0+28]
	066 Move X8, [X0+16]
	067 Move X9, [X9]
	068 Add W10, W10, 1
	069 Move [X0+28], W10
	070 Compare X8, 0
	071 JumpIfEqual {114}
	072 NotImplemented "Instruction LDRSW not yet implemented."
	073 Move W11, [X8+24]
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Add W9, W10, 1
	076 Add X8, X8, X10
	077 Move [X0+24], W9
	078 Move [X8+32], X19
	079 Move X8, 0x2181000
	080 Move X8, [X8+3864]
	081 Move X1, X19
	082 Move X2, [X8]
	083 Call List`1<Object>.Remove, X0, X1
	084 Move X0, [X21]
	085 Move W8, [X0+224]
	086 Compare W8, 0
	087 JumpIfNotEqual {90}
	088 Call 0x1C17DFC
	089 Move X0, [X21]
	090 Move X8, [X0+184]
	091 Move X8, [X8+8]
	092 Compare X8, 0
	093 JumpIfEqual {103}
	094 Move X2, [X8+24]
	095 Move X0, [X8+64]
	096 Move X1, [X8+40]
	097 Move X20, [X31+32]
	098 Move X19, [X31+40]
	099 Move X22, [X31+16]
	100 Move X21, [X31+24]
	101 Move X30, [X31+48]
	102 CallNoReturn X2
	103 Move X20, [X31+32]
	104 Move X19, [X31+40]
	105 Move X22, [X31+16]
	106 Move X21, [X31+24]
	107 Move X30, [X31+48]
	108 Return 
	109 Move X8, [X9+32]
	110 Move X1, X19
	111 Move X8, [X8+192]
	112 Move X2, [X8+112]
	113 Call List`1<Object>.AddWithResize, X0, X1
	114 Call 0x1C17F20

Method: System.Void SetupStatisticReference(Fusion.Statistics.FusionStatistics fusionStatistics)

Disassembly:
	0x01F9AD88 ADRP X0, 0x2180000
	0x01F9AD8C LDR X0, [X0 + 0xE60]

ISIL:
	001 Move [X0+88], X1
	002 Return 

Method: System.Void ToggleConfigPanel()

Disassembly:
	0x01F9AD90 BL 0x1C16CF4
	0x01F9AD94 MOVZ W8, 0x1
	0x01F9AD98 STRB W8, [X21 + 0x788]
	0x01F9AD9C MOVI V0.2D, 0x0
	0x01F9ADA0 STR X31, [X31 + 0x70]
	0x01F9ADA4 STP V0, V0, [X31 + 0x50]
	0x01F9ADA8 LDR X8, [X20 + 0x50]
	0x01F9ADAC CBZ X8, 0x1F9AE8C
	0x01F9ADB0 LDR X0, [X8 + 0x90]
	0x01F9ADB4 CBZ X0, 0x1F9AE8C
	0x01F9ADB8 ADRP X8, 0x2180000
	0x01F9ADBC LDR X8, [X8 + 0xE60]
	0x01F9ADC0 ADRP X21, 0x2180000

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, [X0+48]
	004 Compare X19, 0
	005 JumpIfEqual {17}
	006 Move X0, X19
	007 Move X1, X31
	008 Call GameObject.get_activeSelf, X0
	009 NotImplemented "Instruction ORN not yet implemented."
	010 And W1, W8, 1
	011 Move X0, X19
	012 Move X2, X31
	013 Move X30, [X31+16]
	014 Move X19, [X31+24]
	015 Call GameObject.SetActive, X0, X1
	016 Return 
	017 Call 0x1C17F20

Method: System.Void ToggleUseWorldAnchor(System.Boolean value)

Disassembly:
	0x01F9ADC4 ADRP X20, 0x2180000
	0x01F9ADC8 ADD X23, X31, 0x8
	0x01F9ADCC LDR X1, [X8]

ISIL:
	001 Move TEMP, X1
	002 And TEMP, TEMP, 1
	003 Compare TEMP, 1
	004 JumpIfNotEqual {6}
	005 Return 
	006 Call FusionStatsConfig.ResetToCanvasAnchor, X0
	007 Return 

Method: System.Void SetWorldAnchor(UnityEngine.Transform worldTransformAnchor)

Disassembly:
	0x01F99654 LDR X0, [X19 + 0x38]
	0x01F99658 CBZ X0, 0x1F996A4
	0x01F9965C MOV X1, X31
	0x01F99660 BL 0x3C32ECC
	0x01F99664 CBZ X0, 0x1F996A4
	0x01F99668 EOR W20, W20, 0x1
	0x01F9966C AND W1, W20, 0x1
	0x01F99670 MOV X2, X31
	0x01F99674 BL 0x3C357B4
	0x01F99678 LDR X0, [X19 + 0x48]
	0x01F9967C CBZ X0, 0x1F996A4
	0x01F99680 MOV X1, X31
	0x01F99684 BL 0x3C32ECC
	0x01F99688 CBZ X0, 0x1F996A4
	0x01F9968C AND W1, W20, 0x1
	0x01F99690 LDP X20, X19, [X31 + 0x20]
	0x01F99694 LDP X22, X21, [X31 + 0x10]
	0x01F99698 MOV X2, X31
	0x01F9969C LDR X30, [X31], #0x30
	0x01F996A0 B 0x3C357B4
	0x01F996A4 BL 0x1C16F20
	0x01F996A8 STP D9, D8, [X31 - 0x30]!
	0x01F996AC STP X30, X21, [X31 + 0x10]
	0x01F996B0 STP X20, X19, [X31 + 0x20]
	0x01F996B4 ADRP X20, 0x2440000
	0x01F996B8 LDRB W8, [X20 + 0x773]
	0x01F996BC MOV X19, X0
	0x01F996C0 TBNZ X8, 0x0, 0x1F996D8
	0x01F996C4 ADRP X0, 0x2181000
	0x01F996C8 LDR X0, [X0 + 0xC70]
	0x01F996CC BL 0x1C16CF4
	0x01F996D0 MOVZ W8, 0x1
	0x01F996D4 STRB W8, [X20 + 0x773]
	0x01F996D8 LDR X0, [X19 + 0x40]
	0x01F996DC CBZ X0, 0x1F99748
	0x01F996E0 ADRP X21, 0x2181000
	0x01F996E4 LDR X21, [X21 + 0xC70]
	0x01F996E8 MOV W20, W31
	0x01F996EC FMOV S8, W31
	0x01F996F0 FMOV S9, 10
	0x01F996F4 MOV X1, X31
	0x01F996F8 BL 0x3C40C8C
	0x01F996FC CMP W20, W0
	0x01F99700 B.GE 0x1F9974C
	0x01F99704 LDR X0, [X19 + 0x40]
	0x01F99708 CBZ X0, 0x1F99748
	0x01F9970C MOV W1, W20
	0x01F99710 MOV X2, X31
	0x01F99714 BL 0x3C410A0
	0x01F99718 CBZ X0, 0x1F99748
	0x01F9971C LDR X1, [X21]
	0x01F99720 LDR X8, [X0]
	0x01F99724 CMP X8, X1
	0x01F99728 B.NE 0x1F997A8
	0x01F9972C MOV X1, X31
	0x01F99730 BL 0x3C3E90C
	0x01F99734 LDR X0, [X19 + 0x40]
	0x01F99738 FADD S0, S1, S9
	0x01F9973C FADD S8, S8, S0
	0x01F99740 ADD W20, W20, 0x1
	0x01F99744 CBNZ X0, 0x1F996F4
	0x01F99748 BL 0x1C16F20
	0x01F9974C MOV X0, X31
	0x01F99750 BL 0x3C0E0D8
	0x01F99754 LDR X8, [X19 + 0x20]
	0x01F99758 CBZ X8, 0x1F99748
	0x01F9975C MOV W20, W0
	0x01F99760 MOV X0, X8
	0x01F99764 MOV X1, X31
	0x01F99768 BL 0x3E24614
	0x01F9976C SCVTF S1, W20
	0x01F99770 MOVZ W8, 0xC2C80000
	0x01F99774 FDIV S0, S1, S0
	0x01F99778 FMOV S1, W8
	0x01F9977C FADD S0, S0, S1
	0x01F99780 MOV X0, X19
	0x01F99784 LDP X20, X19, [X31 + 0x20]
	0x01F99788 LDP X30, X21, [X31 + 0x10]
	0x01F9978C FCMP S8, S0
	0x01F99790 MOVZ W8, 0x43160000
	0x01F99794 FCSEL S0, S0, S8, GT
	0x01F99798 FMOV S1, W8
	0x01F9979C FMAX S0, S0, S1
	0x01F997A0 LDP D9, D8, [X31], #0x30
	0x01F997A4 B 0x1F994D8
	0x01F997A8 BL 0x1C171E0
	0x01F997AC STP X30, X23, [X31 - 0x30]!
	0x01F997B0 STP X22, X21, [X31 + 0x10]
	0x01F997B4 STP X20, X19, [X31 + 0x20]
	0x01F997B8 ADRP X20, 0x2440000
	0x01F997BC ADRP X23, 0x2181000
	0x01F997C0 ADRP X22, 0x215B000
	0x01F997C4 ADRP X21, 0x2181000
	0x01F997C8 LDRB W8, [X20 + 0x774]
	0x01F997CC LDR X23, [X23 + 0xE80]
	0x01F997D0 LDR X22, [X22 + 0xE70]
	0x01F997D4 LDR X21, [X21 + 0xF08]
	0x01F997D8 MOV X19, X0
	0x01F997DC TBNZ X8, 0x0, 0x1F9980C
	0x01F997E0 ADRP X0, 0x215B000
	0x01F997E4 LDR X0, [X0 + 0xE70]
	0x01F997E8 BL 0x1C16CF4
	0x01F997EC ADRP X0, 0x2181000

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x2441000
	009 Move W8, [X21+1914]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x215B000
	017 Move X0, [X0+1432]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+1914], W8
	021 Move X0, [X20+56]
	022 Compare X0, 0
	023 JumpIfEqual {131}
	024 Move W1, 2
	025 Move X2, X31
	026 Call Canvas.set_renderMode, X0, X1
	027 Move X22, 0x2440000
	028 Move W8, [X22+2139]
	029 Move X21, [X20+64]
	030 Compare W8, 0
	031 JumpIfNotEqual {37}
	032 Move X0, 0x215B000
	033 Move X0, [X0+1440]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X22+2139], W8
	037 Compare X21, 0
	038 JumpIfEqual {131}
	039 Move X22, 0x215B000
	040 Move X22, [X22+1440]
	041 Move V0, [X20+80]
	042 Move X0, X21
	043 Move X1, X31
	044 Move X8, [X22]
	045 Move X8, [X8+184]
	046 Move S3, [X8+16]
	047 Move S1, [X8+20]
	048 Move V4, [X8+12]
	049 Multiply S2, S0, S1
	050 Multiply S1, S0, S3
	051 Multiply S0, S0, S4
	052 Call Transform.set_localScale, X0, X1
	053 Move X23, 0x2440000
	054 Move W8, [X23+1923]
	055 Move X21, [X20+64]
	056 Compare W8, 0
	057 JumpIfNotEqual {63}
	058 Move X0, 0x215B000
	059 Move X0, [X0+1440]
	060 Call 0x1C17CF4
	061 Move W8, 1
	062 Move [X23+1923], W8
	063 Compare X21, 0
	064 JumpIfEqual {131}
	065 Move X8, [X22]
	066 Move X24, 0x215B000
	067 Move X0, X21
	068 Move X1, X31
	069 Move X8, [X8+184]
	070 Move S1, [X8+4]
	071 Move S2, [X8+8]
	072 Move V0, [X8]
	073 Move X24, [X24+1432]
	074 Call Transform.set_localPosition, X0, X1
	075 Move X0, [X24]
	076 Move X21, [X20+72]
	077 Move W8, [X0+224]
	078 Compare W8, 0
	079 JumpIfNotEqual {81}
	080 Call 0x1C17DFC
	081 Move X0, X19
	082 Move X1, X21
	083 Move X2, X31
	084 Call Object.op_Equality, X0, X1
	085 Move TEMP, X0
	086 And TEMP, TEMP, 1
	087 Compare TEMP, 1
	088 JumpIfNotEqual {97}
	089 Move X20, [X31+48]
	090 Move X19, [X31+56]
	091 Move X22, [X31+32]
	092 Move X21, [X31+40]
	093 Move X24, [X31+16]
	094 Move X23, [X31+24]
	095 Move X30, [X31+64]
	096 Return 
	097 Move X0, [X20+64]
	098 Compare X0, 0
	099 JumpIfEqual {131}
	100 Move X1, X19
	101 Move X2, X31
	102 Call Transform.SetParent, X0, X1
	103 Move [X20+72], X19
	104 Move W8, [X23+1923]
	105 Move X19, [X20+64]
	106 Compare W8, 0
	107 JumpIfNotEqual {113}
	108 Move X0, 0x215B000
	109 Move X0, [X0+1440]
	110 Call 0x1C17CF4
	111 Move W8, 1
	112 Move [X23+1923], W8
	113 Compare X19, 0
	114 JumpIfEqual {131}
	115 Move X8, [X22]
	116 Move X0, X19
	117 Move X20, [X31+48]
	118 Move X19, [X31+56]
	119 Move X22, [X31+32]
	120 Move X21, [X31+40]
	121 Move X8, [X8+184]
	122 Move X24, [X31+16]
	123 Move X23, [X31+24]
	124 Move X1, X31
	125 Move S1, [X8+4]
	126 Move S2, [X8+8]
	127 Move V0, [X8]
	128 Move X30, [X31+64]
	129 Call Transform.set_localPosition, X0, X1
	130 Return 
	131 Call 0x1C17F20

Method: System.Void SetWorldCanvasScale(System.Single value)

Disassembly:
	0x01F9ADD0 LDR X21, [X21 + 0xE50]
	0x01F9ADD4 LDR X20, [X20 + 0xE48]

ISIL:
	001 Move [X0+80], S0
	002 Return 

Method: System.Void ResetToCanvasAnchor()

Disassembly:
	0x01F99458 FMOV S0, 0.5
	0x01F9945C FMUL S2, S2, S0
	0x01F99460 FABS S4, S9
	0x01F99464 FMUL S1, S1, S0
	0x01F99468 FADD S1, S2, S1
	0x01F9946C FCMP S4, S1
	0x01F99470 B.GE 0x1F9949C
	0x01F99474 LDR V1, [X8 + 0x30]
	0x01F99478 FMUL S0, S1, S0
	0x01F9947C FADD S0, S3, S0
	0x01F99480 FCMP S8, S0
	0x01F99484 B.GE 0x1F9949C
	0x01F99488 FMOV S0, -0.5
	0x01F9948C FMUL S0, S1, S0
	0x01F99490 FCMP S8, S0
	0x01F99494 CSET W0, HI
	0x01F99498 B 0x1F994A0
	0x01F9949C MOV W0, W31
	0x01F994A0 LDP X20, X19, [X31 + 0x20]
	0x01F994A4 LDR X30, [X31 + 0x10]
	0x01F994A8 LDP D9, D8, [X31], #0x30
	0x01F994AC RET
	0x01F994B0 BL 0x1C16F20
	0x01F994B4 STP X30, X19, [X31 - 0x10]!
	0x01F994B8 LDR X19, [X0 + 0x30]
	0x01F994BC BL 0x1F98F58
	0x01F994C0 CBZ X19, 0x1F994D4
	0x01F994C4 MOV X0, X19
	0x01F994C8 MOV X1, X31
	0x01F994CC LDP X30, X19, [X31], #0x10
	0x01F994D0 B 0x3C3E880
	0x01F994D4 BL 0x1C16F20
	0x01F994D8 STR D8, [X31 - 0x20]!
	0x01F994DC STR X30, [X31 + 0x8]
	0x01F994E0 STP X20, X19, [X31 + 0x10]
	0x01F994E4 MOVZ W8, 0x43160000
	0x01F994E8 MOV V8.16B, V0.16B
	0x01F994EC FMOV S0, W8
	0x01F994F0 FCMP S8, S0
	0x01F994F4 MOV X19, X0
	0x01F994F8 B.MI 0x1F99540
	0x01F994FC MOV X0, X31
	0x01F99500 BL 0x3C0E0D8
	0x01F99504 LDR X8, [X19 + 0x20]
	0x01F99508 CBZ X8, 0x1F995A0
	0x01F9950C MOV W20, W0
	0x01F99510 MOV X0, X8
	0x01F99514 MOV X1, X31
	0x01F99518 BL 0x3E24614
	0x01F9951C SCVTF S1, W20
	0x01F99520 MOVZ W8, 0xC2C80000
	0x01F99524 FDIV S0, S1, S0
	0x01F99528 FMOV S1, W8
	0x01F9952C FADD S1, S0, S1
	0x01F99530 FCMP S1, S8
	0x01F99534 MOV V0.16B, V8.16B
	0x01F99538 B.PL 0x1F99540
	0x01F9953C MOV V0.16B, V1.16B
	0x01F99540 LDR X0, [X19 + 0x38]
	0x01F99544 CBZ X0, 0x1F995A0
	0x01F99548 MOVZ W1, 0x1
	0x01F9954C MOV X2, X31
	0x01F99550 BL 0x3C3F234
	0x01F99554 LDR X0, [X19 + 0x38]
	0x01F99558 CBZ X0, 0x1F995A0
	0x01F9955C MOV X1, X31
	0x01F99560 BL 0x3C32ECC
	0x01F99564 CBZ X0, 0x1F995A0
	0x01F99568 MOV W1, W31
	0x01F9956C MOV X2, X31
	0x01F99570 BL 0x3C357B4
	0x01F99574 LDR X0, [X19 + 0x38]
	0x01F99578 CBZ X0, 0x1F995A0
	0x01F9957C MOV X1, X31
	0x01F99580 BL 0x3C32ECC
	0x01F99584 CBZ X0, 0x1F995A0
	0x01F99588 LDP X20, X19, [X31 + 0x10]
	0x01F9958C LDR X30, [X31 + 0x8]
	0x01F99590 MOVZ W1, 0x1
	0x01F99594 MOV X2, X31
	0x01F99598 LDR V8, [X31], #0x20
	0x01F9959C B 0x3C357B4
	0x01F995A0 BL 0x1C16F20
	0x01F995A4 STR X30, [X31 - 0x30]!
	0x01F995A8 STP X22, X21, [X31 + 0x10]
	0x01F995AC STP X20, X19, [X31 + 0x20]
	0x01F995B0 MOV X19, X0
	0x01F995B4 LDR X0, [X0 + 0x38]
	0x01F995B8 CBZ X0, 0x1F996A4
	0x01F995BC MOV X1, X31
	0x01F995C0 BL 0x3C32ECC
	0x01F995C4 CBZ X0, 0x1F996A4
	0x01F995C8 MOV X1, X31
	0x01F995CC BL 0x3C357F8
	0x01F995D0 LDR X8, [X19 + 0x58]
	0x01F995D4 CBZ X8, 0x1F996A4
	0x01F995D8 MOV W20, W0
	0x01F995DC MOV X0, X8
	0x01F995E0 MOV X1, X31
	0x01F995E4 BL 0x3C32E90
	0x01F995E8 MOV X21, X0
	0x01F995EC TBZ X20, 0x0, 0x1F9960C
	0x01F995F0 ADRP X8, 0xFFFFFFFFFEB51000
	0x01F995F4 LDR V2, [X8 + 0x180]
	0x01F995F8 FMOV S0, W31
	0x01F995FC FMOV S1, W31
	0x01F99600 MOV X0, X31
	0x01F99604 BL 0x3C2A574
	0x01F99608 B 0x1F99644
	0x01F9960C ADRP X22, 0x243F000
	0x01F99610 LDRB W8, [X22 + 0x793]
	0x01F99614 CBNZ W8, 0x1F9962C
	0x01F99618 ADRP X0, 0x215B000
	0x01F9961C LDR X0, [X0 + 0x5A8]
	0x01F99620 BL 0x1C16CF4
	0x01F99624 MOVZ W8, 0x1
	0x01F99628 STRB W8, [X22 + 0x793]
	0x01F9962C ADRP X8, 0x215B000
	0x01F99630 LDR X8, [X8 + 0x5A8]
	0x01F99634 LDR X8, [X8]
	0x01F99638 LDR X8, [X8 + 0xB8]
	0x01F9963C LDP S0, S1, [X8]
	0x01F99640 LDP S2, S3, [X8 + 0x8]
	0x01F99644 CBZ X21, 0x1F996A4
	0x01F99648 MOV X0, X21
	0x01F9964C MOV X1, X31
	0x01F99650 BL 0x3C3F7AC

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0x2441000
	008 Move X20, 0x215B000
	009 Move W8, [X21+1915]
	010 Move X20, [X20+1432]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x215B000
	017 Move X0, [X0+1432]
	018 Call 0x1C17CF4
	019 Move X0, 0x2182000
	020 Move X0, [X0+3184]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X21+1915], W8
	024 Move X0, [X20]
	025 Move X20, [X19+88]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 Move X0, X20
	031 Move X1, X31
	032 Call Object.op_Implicit, X0
	033 Move TEMP, X0
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfNotEqual {146}
	037 Move X0, [X19+64]
	038 Compare X0, 0
	039 JumpIfEqual {153}
	040 Move W1, W31
	041 Move X2, X31
	042 Call Transform.GetChild, X0, X1
	043 Move X8, [X19+88]
	044 Compare X8, 0
	045 JumpIfEqual {153}
	046 Move X21, [X19+64]
	047 Move X20, X0
	048 Move X0, X8
	049 Move X1, X31
	050 Call Component.get_transform, X0
	051 Compare X21, 0
	052 JumpIfEqual {153}
	053 Move X1, X0
	054 Move X0, X21
	055 Move X2, X31
	056 Call Transform.SetParent, X0, X1
	057 Move X0, [X19+56]
	058 Compare X0, 0
	059 JumpIfEqual {153}
	060 Move W1, W31
	061 Move X2, X31
	062 Call Canvas.set_renderMode, X0, X1
	063 Move X22, 0x2440000
	064 Move W8, [X22+2139]
	065 Move X21, [X19+64]
	066 Compare W8, 0
	067 JumpIfNotEqual {73}
	068 Move X0, 0x215B000
	069 Move X0, [X0+1440]
	070 Call 0x1C17CF4
	071 Move W8, 1
	072 Move [X22+2139], W8
	073 Compare X21, 0
	074 JumpIfEqual {153}
	075 Move X22, 0x215B000
	076 Move X22, [X22+1440]
	077 Move X0, X21
	078 Move X1, X31
	079 Move X8, [X22]
	080 Move X8, [X8+184]
	081 Move S1, [X8+16]
	082 Move S2, [X8+20]
	083 Move V0, [X8+12]
	084 Call Transform.set_localScale, X0, X1
	085 Move X23, 0x2440000
	086 Move W8, [X23+1923]
	087 Move X21, [X19+64]
	088 Compare W8, 0
	089 JumpIfNotEqual {95}
	090 Move X0, 0x215B000
	091 Move X0, [X0+1440]
	092 Call 0x1C17CF4
	093 Move W8, 1
	094 Move [X23+1923], W8
	095 Compare X21, 0
	096 JumpIfEqual {153}
	097 Move X8, [X22]
	098 Move X0, X21
	099 Move X1, X31
	100 Move X8, [X8+184]
	101 Move S1, [X8+4]
	102 Move S2, [X8+8]
	103 Move V0, [X8]
	104 Call Transform.set_localPosition, X0, X1
	105 Compare X20, 0
	106 JumpIfEqual {112}
	107 Move X8, 0x2182000
	108 Move X8, [X8+3184]
	109 Move X1, [X8]
	110 Move X8, [X20]
	111 NotImplemented "Instruction CMP not yet implemented."
	112 Move W8, [X23+1923]
	113 Compare W8, 0
	114 JumpIfNotEqual {120}
	115 Move X0, 0x215B000
	116 Move X0, [X0+1440]
	117 Call 0x1C17CF4
	118 Move W8, 1
	119 Move [X23+1923], W8
	120 Compare X20, 0
	121 JumpIfEqual {153}
	122 Move X8, [X22]
	123 Move X0, X20
	124 Move X1, X31
	125 Move X8, [X8+184]
	126 Move S1, [X8+4]
	127 Move S2, [X8+8]
	128 Move V0, [X8]
	129 Call Transform.set_localPosition, X0, X1
	130 Move W8, [X23+1923]
	131 Compare W8, 0
	132 JumpIfNotEqual {138}
	133 Move X0, 0x215B000
	134 Move X0, [X0+1440]
	135 Call 0x1C17CF4
	136 Move W8, 1
	137 Move [X23+1923], W8
	138 Move X8, [X22]
	139 Move X0, X20
	140 Move X1, X31
	141 Move X8, [X8+184]
	142 Move S0, [X8]
	143 Move S1, [X8+4]
	144 Call RectTransform.set_anchoredPosition, X0, X1
	145 Move [X19+72], X31
	146 Move X20, [X31+32]
	147 Move X19, [X31+40]
	148 Move X22, [X31+16]
	149 Move X21, [X31+24]
	150 Move X30, [X31+48]
	151 Move X23, [X31+56]
	152 Return 
	153 Call 0x1C17F20
	154 Move X0, X20
	155 Call 0x1C181E0

Method: System.Void UpdateWorldAnchorButtons()

Disassembly:
	0x01F9ADD8 ADD X8, X31, 0x8
	0x01F9ADDC BL 0x30F99FC
	0x01F9ADE0 LDUR V0, [X31 + 0x8]
	0x01F9ADE4 LDUR V1, [X31 + 0x18]
	0x01F9ADE8 LDR X8, [X31 + 0x28]
	0x01F9ADEC ADD X9, X31, 0x50
	0x01F9ADF0 ADD X22, X9, 0x14
	0x01F9ADF4 STP V0, V1, [X31 + 0x50]
	0x01F9ADF8 STR X8, [X31 + 0x70]
	0x01F9ADFC ORR X23, X23, 0x7
	0x01F9AE00 LDR X1, [X21]
	0x01F9AE04 ADD X0, X31, 0x50
	0x01F9AE08 BL 0x2BDCF2C
	0x01F9AE0C TBZ X0, 0x0, 0x1F9AE64
	0x01F9AE10 LDR V0, [X22]
	0x01F9AE14 LDR W9, [X22 + 0x10]
	0x01F9AE18 LDR W8, [X31 + 0x60]
	0x01F9AE1C STR V0, [X31 + 0x3]
	0x01F9AE20 STR W9, [X31 + 0x40]
	0x01F9AE24 CBZ X19, 0x1F9AE84
	0x01F9AE28 LDR W9, [X19 + 0x11C]
	0x01F9AE2C CMP W8, W9
	0x01F9AE30 B.NE 0x1F9AE00
	0x01F9AE34 LDR X9, [X19]
	0x01F9AE38 LDR W10, [X31 + 0x40]
	0x01F9AE3C LDR V0, [X31 + 0x3]
	0x01F9AE40 LDR X11, [X9 + 0x218]
	0x01F9AE44 STR W8, [X31 + 0x8]
	0x01F9AE48 STR W10, [X23 + 0x10]
	0x01F9AE4C STR V0, [X23]
	0x01F9AE50 LDR X2, [X9 + 0x220]
	0x01F9AE54 ADD X1, X31, 0x8
	0x01F9AE58 MOV X0, X19
	0x01F9AE5C BLR X11
	0x01F9AE60 B 0x1F9AE00
	0x01F9AE64 LDR X1, [X20]
	0x01F9AE68 ADD X0, X31, 0x50
	0x01F9AE6C BL 0x2BDCF28
	0x01F9AE70 LDP X20, X19, [X31 + 0xA0]
	0x01F9AE74 LDP X22, X21, [X31 + 0x90]
	0x01F9AE78 LDP X30, X23, [X31 + 0x80]
	0x01F9AE7C ADD X31, X31, 0xB0
	0x01F9AE80 RET
	0x01F9AE84 MOV X21, X20
	0x01F9AE88 BL 0x1C16F20
	0x01F9AE8C BL 0x1C16F20
	0x01F9AE90 B 0x1F9AE98
	0x01F9AE94 B 0x1F9AE9C
	0x01F9AE98 MOV X21, X20
	0x01F9AE9C MOV X19, X0
	0x01F9AEA0 CMP W1, 0x1
	0x01F9AEA4 B.NE 0x1F9AED0
	0x01F9AEA8 MOV X0, X19
	0x01F9AEAC BL 0x3EB1AD0
	0x01F9AEB0 LDR X20, [X0]
	0x01F9AEB4 BL 0x3EB1AE0
	0x01F9AEB8 LDR X1, [X21]
	0x01F9AEBC ADD X0, X31, 0x50
	0x01F9AEC0 BL 0x2BDCF28
	0x01F9AEC4 CBZ X20, 0x1F9AE70
	0x01F9AEC8 MOV X0, X20
	0x01F9AECC BL 0x1C16F18
	0x01F9AED0 MOV X20, X31
	0x01F9AED4 B 0x1F9AEDC
	0x01F9AED8 MOV X19, X0
	0x01F9AEDC LDR X1, [X21]
	0x01F9AEE0 ADD X0, X31, 0x50
	0x01F9AEE4 BL 0x2BDCF28
	0x01F9AEE8 CBNZ X20, 0x1F9AEF4
	0x01F9AEEC MOV X0, X19
	0x01F9AEF0 BL 0x1D2C690
	0x01F9AEF4 MOV X0, X20
	0x01F9AEF8 BL 0x1C16F18
	0x01F9AEFC BL 0x1990590
	0x01F9AF00 SUB X31, X31, 0x50
	0x01F9AF04 STR X30, [X31 + 0x40]
	0x01F9AF08 LDR X8, [X2 + 0x10]
	0x01F9AF0C LDR V0, [X2]
	0x01F9AF10 STR X8, [X31 + 0x10]
	0x01F9AF14 STR V0, [X31]
	0x01F9AF18 CBZ X1, 0x1F9AF50
	0x01F9AF1C LDR X8, [X1]
	0x01F9AF20 LDR V0, [X31]
	0x01F9AF24 LDR X9, [X31 + 0x10]
	0x01F9AF28 MOV X0, X1
	0x01F9AF2C LDR X10, [X8 + 0x218]
	0x01F9AF30 STR V0, [X31 + 0x2]
	0x01F9AF34 STR X9, [X31 + 0x30]
	0x01F9AF38 LDR X2, [X8 + 0x220]
	0x01F9AF3C ADD X1, X31, 0x20
	0x01F9AF40 BLR X10
	0x01F9AF44 LDR X30, [X31 + 0x40]
	0x01F9AF48 ADD X31, X31, 0x50
	0x01F9AF4C RET
	0x01F9AF50 BL 0x1C16F20
	0x01F9AF54 MOV X1, X31
	0x01F9AF58 B 0x3C36C30
	0x01F9AF5C STP X30, X21, [X31 - 0x20]!
	0x01F9AF60 STP X20, X19, [X31 + 0x10]
	0x01F9AF64 ADRP X21, 0x243F000
	0x01F9AF68 ADRP X20, 0x2180000
	0x01F9AF6C LDRB W8, [X21 + 0x78A]
	0x01F9AF70 LDR X20, [X20 + 0xF10]
	0x01F9AF74 MOV X19, X0
	0x01F9AF78 TBNZ X8, 0x0, 0x1F9AF90
	0x01F9AF7C ADRP X0, 0x2180000
	0x01F9AF80 LDR X0, [X0 + 0xF10]
	0x01F9AF84 BL 0x1C16CF4
	0x01F9AF88 MOVZ W8, 0x1
	0x01F9AF8C STRB W8, [X21 + 0x78A]
	0x01F9AF90 MOV X0, X19
	0x01F9AF94 MOV X1, X31
	0x01F9AF98 BL 0x3C32E90
	0x01F9AF9C LDR X8, [X20]
	0x01F9AFA0 MOV X19, X0
	0x01F9AFA4 LDR W9, [X8 + 0xE0]
	0x01F9AFA8 CBNZ W9, 0x1F9AFB4
	0x01F9AFAC MOV X0, X8
	0x01F9AFB0 BL 0x1C16DFC
	0x01F9AFB4 MOV X0, X19
	0x01F9AFB8 LDP X20, X19, [X31 + 0x10]
	0x01F9AFBC MOVZ W1, 0x1
	0x01F9AFC0 LDP X30, X21, [X31], #0x20
	0x01F9AFC4 B 0x1F99C0C
	0x01F9AFC8 STP X30, X21, [X31 - 0x20]!
	0x01F9AFCC STP X20, X19, [X31 + 0x10]
	0x01F9AFD0 ADRP X21, 0x243F000
	0x01F9AFD4 ADRP X20, 0x2180000
	0x01F9AFD8 LDRB W8, [X21 + 0x78B]
	0x01F9AFDC LDR X20, [X20 + 0xF10]
	0x01F9AFE0 MOV X19, X0
	0x01F9AFE4 TBNZ X8, 0x0, 0x1F9AFFC
	0x01F9AFE8 ADRP X0, 0x2180000
	0x01F9AFEC LDR X0, [X0 + 0xF10]
	0x01F9AFF0 BL 0x1C16CF4
	0x01F9AFF4 MOVZ W8, 0x1
	0x01F9AFF8 STRB W8, [X21 + 0x78B]
	0x01F9AFFC MOV X0, X19
	0x01F9B000 MOV X1, X31
	0x01F9B004 BL 0x3C32E90
	0x01F9B008 LDR X8, [X20]
	0x01F9B00C MOV X19, X0
	0x01F9B010 LDR W9, [X8 + 0xE0]
	0x01F9B014 CBNZ W9, 0x1F9B020
	0x01F9B018 MOV X0, X8
	0x01F9B01C BL 0x1C16DFC
	0x01F9B020 MOV X0, X19
	0x01F9B024 LDP X20, X19, [X31 + 0x10]
	0x01F9B028 MOV W1, W31
	0x01F9B02C LDP X30, X21, [X31], #0x20
	0x01F9B030 B 0x1F99C0C
	0x01F9B034 STR X30, [X31 - 0x20]!
	0x01F9B038 STP X20, X19, [X31 + 0x10]
	0x01F9B03C ADRP X20, 0x243E000
	0x01F9B040 LDRB W8, [X20 + 0x78C]
	0x01F9B044 MOV X19, X0
	0x01F9B048 TBNZ X8, 0x0, 0x1F9B078
	0x01F9B04C ADRP X0, 0x217F000
	0x01F9B050 LDR X0, [X0 + 0xFA0]
	0x01F9B054 BL 0x1C16CF4
	0x01F9B058 ADRP X0, 0x217F000
	0x01F9B05C LDR X0, [X0 + 0xFA8]
	0x01F9B060 BL 0x1C16CF4
	0x01F9B064 ADRP X0, 0x2158000
	0x01F9B068 LDR X0, [X0 + 0x598]
	0x01F9B06C BL 0x1C16CF4
	0x01F9B070 MOVZ W8, 0x1
	0x01F9B074 STRB W8, [X20 + 0x78C]
	0x01F9B078 MOV X0, X19
	0x01F9B07C MOV X1, X31
	0x01F9B080 BL 0x3C32E90
	0x01F9B084 CBZ X0, 0x1F9B11C
	0x01F9B088 ADRP X8, 0x217F000
	0x01F9B08C LDR X8, [X8 + 0xFA0]
	0x01F9B090 ADRP X19, 0x2158000
	0x01F9B094 LDR X1, [X8]
	0x01F9B098 LDR X19, [X19 + 0x598]
	0x01F9B09C BL 0x21A3AF8
	0x01F9B0A0 LDR X8, [X19]
	0x01F9B0A4 MOV X19, X0
	0x01F9B0A8 LDR W9, [X8 + 0xE0]
	0x01F9B0AC CBNZ W9, 0x1F9B0B8
	0x01F9B0B0 MOV X0, X8
	0x01F9B0B4 BL 0x1C16DFC
	0x01F9B0B8 MOV X0, X19
	0x01F9B0BC MOV X1, X31
	0x01F9B0C0 BL 0x3C38948
	0x01F9B0C4 TBZ X0, 0x0, 0x1F9B110
	0x01F9B0C8 CBZ X19, 0x1F9B11C
	0x01F9B0CC MOV X0, X19
	0x01F9B0D0 MOV X1, X31
	0x01F9B0D4 BL 0x3C32E90
	0x01F9B0D8 CBZ X0, 0x1F9B11C
	0x01F9B0DC MOV X1, X31
	0x01F9B0E0 MOV X2, X31
	0x01F9B0E4 BL 0x3C3FE70
	0x01F9B0E8 ADRP X8, 0x217F000
	0x01F9B0EC LDR X8, [X8 + 0xFA8]
	0x01F9B0F0 MOVZ W1, 0x1
	0x01F9B0F4 MOV X0, X19
	0x01F9B0F8 LDR X2, [X8]
	0x01F9B0FC BL 0x21A3D18
	0x01F9B100 CBZ X0, 0x1F9B11C
	0x01F9B104 LDP X20, X19, [X31 + 0x10]
	0x01F9B108 LDR X30, [X31], #0x20
	0x01F9B10C B 0x1F98458
	0x01F9B110 LDP X20, X19, [X31 + 0x10]
	0x01F9B114 LDR X30, [X31], #0x20
	0x01F9B118 RET
	0x01F9B11C BL 0x1C16F20
	0x01F9B120 MOV X1, X31
	0x01F9B124 B 0x3C36C30
	0x01F9B128 SUB X31, X31, 0xA0
	0x01F9B12C STP D11, D10, [X31 + 0x50]
	0x01F9B130 STP D9, D8, [X31 + 0x60]
	0x01F9B134 STR X30, [X31 + 0x70]
	0x01F9B138 STP X22, X21, [X31 + 0x80]

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+64], X29
	003 Move [X31+72], X30
	004 Move [X31+80], X28
	005 Move [X31+88], X27
	006 Move [X31+96], X26
	007 Move [X31+104], X25
	008 Move [X31+112], X24
	009 Move [X31+120], X23
	010 Move [X31+128], X22
	011 Move [X31+136], X21
	012 Move [X31+144], X20
	013 Move [X31+152], X19
	014 Move X20, 0x2440000
	015 Move W8, [X20+1916]
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {56}
	021 Move X0, 0x2181000
	022 Move X0, [X0+3872]
	023 Call 0x1C17CF4
	024 Move X0, 0x2161000
	025 Move X0, [X0+2368]
	026 Call 0x1C17CF4
	027 Move X0, 0x2161000
	028 Move X0, [X0+2376]
	029 Call 0x1C17CF4
	030 Move X0, 0x2161000
	031 Move X0, [X0+2384]
	032 Call 0x1C17CF4
	033 Move X0, 0x2181000
	034 Move X0, [X0+3856]
	035 Call 0x1C17CF4
	036 Move X0, 0x2161000
	037 Move X0, [X0+2408]
	038 Call 0x1C17CF4
	039 Move X0, 0x2181000
	040 Move X0, [X0+3880]
	041 Call 0x1C17CF4
	042 Move X0, 0x215A000
	043 Move X0, [X0+1432]
	044 Call 0x1C17CF4
	045 Move X0, 0x2181000
	046 Move X0, [X0+3888]
	047 Call 0x1C17CF4
	048 Move X0, 0x2181000
	049 Move X0, [X0+3896]
	050 Call 0x1C17CF4
	051 Move X0, 0x2181000
	052 Move X0, [X0+3632]
	053 Call 0x1C17CF4
	054 Move W8, 1
	055 Move [X20+1916], W8
	056 Move [X31+32], X31
	057 Move [X31+40], X31
	058 Move [X31+48], X31
	059 Move X0, [X19+40]
	060 Compare X0, 0
	061 JumpIfEqual {202}
	062 Move X25, 0x215A000
	063 Move X25, [X25+1432]
	064 Move X1, X31
	065 Call Transform.get_childCount, X0
	066 Subtract W20, W0, 1
	067 Move X0, [X19+40]
	068 Compare X0, 0
	069 JumpIfEqual {202}
	070 Move W1, W20
	071 Move X2, X31
	072 Call Transform.GetChild, X0, X1
	073 Compare X0, 0
	074 JumpIfEqual {202}
	075 Move X1, X31
	076 Call Component.get_gameObject, X0
	077 Move X8, [X25]
	078 Move X21, X0
	079 Move W9, [X8+224]
	080 Compare W9, 0
	081 JumpIfNotEqual {84}
	082 Move X0, X8
	083 Call 0x1C17DFC
	084 Move X0, X21
	085 Move X1, X31
	086 Call Object.Destroy, X0
	087 Subtract W20, W20, 1
	088 Move X20, 0x2181000
	089 Move X20, [X20+3856]
	090 Move X0, [X20]
	091 Move W8, [X0+224]
	092 Compare W8, 0
	093 JumpIfNotEqual {96}
	094 Call 0x1C17DFC
	095 Move X0, [X20]
	096 Move X8, [X0+184]
	097 Move X0, [X8]
	098 Compare X0, 0
	099 JumpIfEqual {202}
	100 Move X8, 0x2161000
	101 Move X8, [X8+2408]
	102 Move X26, 0x2161000
	103 Move X28, 0x2181000
	104 Move X29, 0x2181000
	105 Move X26, [X26+2376]
	106 Move X28, [X28+3880]
	107 Move X29, [X29+3632]
	108 Move X1, [X8]
	109 Move X24, 0x2181000
	110 Move X27, 0x2181000
	111 Move X24, [X24+3888]
	112 Move X27, [X27+3872]
	113 Add X8, X31, 8
	114 Call List`1<Object>.GetEnumerator, X0
	115 NotImplemented "Instruction LDUR not yet implemented."
	116 Move X8, [X31+24]
	117 Move [X31+2], V0
	118 Move [X31+48], X8
	119 Move X1, [X26]
	120 Add X0, X31, 32
	121 Call Enumerator<Object>.MoveNext, X0
	122 Move TEMP, X0
	123 And TEMP, TEMP, 1
	124 Compare TEMP, 1
	125 JumpIfNotEqual {183}
	126 Move X8, 0x2181000
	127 Move X8, [X8+3896]
	128 Move X0, [X8]
	129 Call 0x1C17F10
	130 Move X20, X0
	131 Move X1, X31
	132 Call Object..ctor, X0
	133 Compare X20, 0
	134 JumpIfEqual {206}
	135 Move X8, [X31+48]
	136 Move [X20+16], X8
	137 Move [X20+24], X19
	138 Move X0, [X25]
	139 Move X22, [X19+32]
	140 Move X21, [X19+40]
	141 Move W8, [X0+224]
	142 Compare W8, 0
	143 JumpIfNotEqual {145}
	144 Call 0x1C17DFC
	145 Move X2, [X28]
	146 Move X0, X22
	147 Move X1, X21
	148 Call 0x222E488, X0, X1
	149 Move X21, X0
	150 Compare X0, 0
	151 JumpIfEqual {207}
	152 Move X22, [X21+256]
	153 Move X0, [X29]
	154 Call 0x1C17F10
	155 Move X2, [X24]
	156 Move X23, X0
	157 Move X1, X20
	158 Move X3, X31
	159 Call UnityAction..ctor, X0, X1, X2
	160 Compare X22, 0
	161 JumpIfEqual {204}
	162 Move X0, X22
	163 Move X1, X23
	164 Move X2, X31
	165 Call UnityEvent.AddListener, X0, X1
	166 Move X1, [X27]
	167 Move X0, X21
	168 Call 0x21A4AF8, X0
	169 Move X21, X0
	170 Move X0, [X20+16]
	171 Compare X0, 0
	172 JumpIfEqual {205}
	173 Move X1, X31
	174 Call Object.get_name, X0
	175 Move X1, X0
	176 Compare X21, 0
	177 JumpIfEqual {203}
	178 Move X8, [X21]
	179 Move X9, [X8+1512]
	180 Move X2, [X8+1520]
	181 Move X0, X21
	182 NotImplemented "Instruction BLR not yet implemented."
	183 Move X8, 0x2160000
	184 Move X8, [X8+2368]
	185 Add X0, X31, 32
	186 Move X1, [X8]
	187 Call Enumerator<Object>.Dispose, X0
	188 Move X20, [X31+144]
	189 Move X19, [X31+152]
	190 Move X22, [X31+128]
	191 Move X21, [X31+136]
	192 Move X24, [X31+112]
	193 Move X23, [X31+120]
	194 Move X26, [X31+96]
	195 Move X25, [X31+104]
	196 Move X28, [X31+80]
	197 Move X27, [X31+88]
	198 Move X29, [X31+64]
	199 Move X30, [X31+72]
	200 Add X31, X31, 160
	201 Return 
	202 Call 0x1C17F20
	203 Call 0x1C17F20
	204 Call 0x1C17F20
	205 Call 0x1C17F20
	206 Call 0x1C17F20
	207 Call 0x1C17F20
	208 Move X19, X0
	209 NotImplemented "Instruction CMP not yet implemented."
	210 Move X0, X19
	211 Call 0x3EB2AD0
	212 Move X20, [X0]
	213 Call 0x3EB2AE0
	214 Move X8, 0x2160000
	215 Move X8, [X8+2368]
	216 Add X0, X31, 32
	217 Move X1, [X8]
	218 Call Enumerator<Object>.Dispose, X0
	219 Compare X20, 0
	220 JumpIfEqual {188}
	221 Move X0, X20
	222 Call 0x1C17F18
	223 Move X20, X31
	224 Move X19, X0
	225 Move X8, 0x2160000
	226 Move X8, [X8+2368]
	227 Move X1, [X8]
	228 Add X0, X31, 32
	229 Call Enumerator<Object>.Dispose, X0
	230 Compare X20, 0
	231 JumpIfNotEqual {234}
	232 Move X0, X19
	233 Call 0x1D2D690
	234 Move X0, X20
	235 Call 0x1C17F18
	236 Call 0x1991590

Method: System.Void OnEnable()

Disassembly:
	0x01F9B144 LDRB W8, [X22 + 0x783]
	0x01F9B148 LDR V6, [X0]
	0x01F9B14C MOV W20, W1
	0x01F9B150 MOV V8.16B, V2.16B
	0x01F9B154 MOV X19, X0
	0x01F9B158 MOV V7.16B, V0.16B
	0x01F9B15C CBNZ W8, 0x1F9B184
	0x01F9B160 ADRP X0, 0x2158000
	0x01F9B164 LDR X0, [X0 + 0x5A0]
	0x01F9B168 STP V6, V1, [X31 + 0x30]
	0x01F9B16C STP V3, V7, [X31 + 0x10]
	0x01F9B170 BL 0x1C16CF4
	0x01F9B174 LDP V3, V7, [X31 + 0x10]
	0x01F9B178 LDP V6, V1, [X31 + 0x30]
	0x01F9B17C MOVZ W8, 0x1
	0x01F9B180 STRB W8, [X22 + 0x783]
	0x01F9B184 ADRP X21, 0x2158000
	0x01F9B188 LDR X21, [X21 + 0x5A0]
	0x01F9B18C TBZ X20, 0x0, 0x1F9B1A4
	0x01F9B190 LDR X8, [X21]
	0x01F9B194 LDR X8, [X8 + 0xB8]
	0x01F9B198 LDR V9, [X8]
	0x01F9B19C LDR V10, [X8 + 0x8]
	0x01F9B1A0 B 0x1F9B294
	0x01F9B1A4 LDR V0, [X19 + 0x10]
	0x01F9B1A8 LDR V4, [X19 + 0x18]
	0x01F9B1AC ADRP X20, 0x243E000
	0x01F9B1B0 MOV V2.16B, V7.16B
	0x01F9B1B4 LDRB W8, [X20 + 0x763]
	0x01F9B1B8 LDR V16, [X19 + 0xC]
	0x01F9B1BC MOV V2.S[1], V1.S[0]
	0x00000000 INVALID
	0x01F9B1C4 FMUL S5, S8, S3
	0x01F9B1C8 FADD V9.2S, V2.2S, V0.2S
	0x01F9B1CC FADD S10, S5, S4
	0x01F9B1D0 STP V6, V1, [X31 + 0x30]
	0x01F9B1D4 STP V3, V7, [X31 + 0x10]
	0x01F9B1D8 CBNZ W8, 0x1F9B200
	0x01F9B1DC ADRP X0, 0x2158000
	0x01F9B1E0 LDR X0, [X0 + 0x5A8]
	0x01F9B1E4 STR V16, [X31]
	0x01F9B1E8 BL 0x1C16CF4
	0x01F9B1EC LDP V16, V3, [X31]
	0x01F9B1F0 LDP V7, V6, [X31 + 0x20]
	0x01F9B1F4 LDR V1, [X31 + 0x4]
	0x01F9B1F8 MOVZ W8, 0x1
	0x01F9B1FC STRB W8, [X20 + 0x763]
	0x00000000 INVALID
	0x01F9B204 FMUL S2, S10, S10
	0x01F9B208 FADDP S0, V0.2S
	0x01F9B20C FADD S11, S2, S0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x243F000
	008 Move X22, 0x215A000
	009 Move X21, 0x2180000
	010 Move X23, 0x2180000
	011 Move W8, [X20+1917]
	012 Move X22, [X22+3696]
	013 Move X21, [X21+3904]
	014 Move X23, [X23+3856]
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {31}
	020 Move X0, 0x215A000
	021 Move X0, [X0+3696]
	022 Call 0x1C17CF4
	023 Move X0, 0x2180000
	024 Move X0, [X0+3904]
	025 Call 0x1C17CF4
	026 Move X0, 0x2180000
	027 Move X0, [X0+3856]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X20+1917], W8
	031 Move X0, [X22]
	032 Call 0x1C17F10
	033 Move X2, [X21]
	034 Move X1, X19
	035 Move X3, X31
	036 Move X20, X0
	037 Call Action..ctor, X0, X1, X2
	038 Move X0, [X23]
	039 Move W8, [X0+224]
	040 Compare W8, 0
	041 JumpIfNotEqual {43}
	042 Call 0x1C17DFC
	043 Move X0, X20
	044 Call FusionStatsConfig.remove__onWorldAnchorCandidatesUpdate, X0
	045 Move X0, [X22]
	046 Call 0x1C17F10
	047 Move X2, [X21]
	048 Move X1, X19
	049 Move X3, X31
	050 Move X20, X0
	051 Call Action..ctor, X0, X1, X2
	052 Move X0, X20
	053 Call FusionStatsConfig.add__onWorldAnchorCandidatesUpdate, X0
	054 Move X0, X19
	055 Move X20, [X31+32]
	056 Move X19, [X31+40]
	057 Move X22, [X31+16]
	058 Move X21, [X31+24]
	059 Move X30, [X31+48]
	060 Move X23, [X31+56]
	061 Call FusionStatsConfig.UpdateWorldAnchorButtons, X0
	062 Return 

Method: System.Void OnDestroy()

Disassembly:
	0x01F9B210 FMUL S0, S16, S16
	0x01F9B214 FCMP S11, S0
	0x01F9B218 B.LE 0x1F9B25C
	0x01F9B21C ADRP X8, 0x2158000
	0x01F9B220 LDR X8, [X8 + 0x5A8]
	0x01F9B224 LDR X0, [X8]
	0x01F9B228 LDR W8, [X0 + 0xE0]
	0x01F9B22C CBNZ W8, 0x1F9B244
	0x01F9B230 STR V16, [X31]
	0x01F9B234 BL 0x1C16DFC
	0x01F9B238 LDP V16, V3, [X31]
	0x01F9B23C LDP V7, V6, [X31 + 0x20]
	0x01F9B240 LDR V1, [X31 + 0x4]
	0x01F9B244 FSQRT S0, S11
	0x01F9B248 UNIMPLEMENTED
	0x01F9B24C FDIV S0, S10, S0
	0x00000000 INVALID
	0x00000000 INVALID
	0x01F9B258 FMUL S10, S16, S0
	0x01F9B25C STR D9, [X19 + 0x10]
	0x01F9B260 STR S10, [X19 + 0x18]
	0x01F9B264 LDR V0, [X19 + 0x4]
	0x01F9B268 LDRB W8, [X22 + 0x783]
	0x00000000 INVALID
	0x01F9B270 FMUL S10, S10, S0
	0x01F9B274 CBNZ W8, 0x1F9B294
	0x01F9B278 ADRP X0, 0x2158000
	0x01F9B27C LDR X0, [X0 + 0x5A0]
	0x01F9B280 BL 0x1C16CF4
	0x01F9B284 LDP V3, V7, [X31 + 0x10]
	0x01F9B288 LDP V6, V1, [X31 + 0x30]
	0x01F9B28C MOVZ W8, 0x1
	0x01F9B290 STRB W8, [X22 + 0x783]
	0x01F9B294 LDRB W8, [X19 + 0x34]
	0x01F9B298 CBZ W8, 0x1F9B2D0
	0x01F9B29C LDR V0, [X19 + 0x28]
	0x01F9B2A0 LDR V5, [X19 + 0x30]
	0x01F9B2A4 MOV V2.16B, V7.16B
	0x01F9B2A8 LDR V4, [X19 + 0x8]
	0x01F9B2AC MOV V2.S[1], V1.S[0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x243F000
	008 Move X23, 0x215A000
	009 Move X20, 0x2180000
	010 Move X21, 0x2180000
	011 Move W8, [X22+1918]
	012 Move X23, [X23+3696]
	013 Move X20, [X20+3904]
	014 Move X21, [X21+3856]
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {31}
	020 Move X0, 0x215A000
	021 Move X0, [X0+3696]
	022 Call 0x1C17CF4
	023 Move X0, 0x2180000
	024 Move X0, [X0+3904]
	025 Call 0x1C17CF4
	026 Move X0, 0x2180000
	027 Move X0, [X0+3856]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X22+1918], W8
	031 Move X0, [X23]
	032 Call 0x1C17F10
	033 Move X2, [X20]
	034 Move X1, X19
	035 Move X3, X31
	036 Move X20, X0
	037 Call Action..ctor, X0, X1, X2
	038 Move X0, [X21]
	039 Move W8, [X0+224]
	040 Compare W8, 0
	041 JumpIfNotEqual {43}
	042 Call 0x1C17DFC
	043 Move X0, X20
	044 Move X20, [X31+32]
	045 Move X19, [X31+40]
	046 Move X22, [X31+16]
	047 Move X21, [X31+24]
	048 Move X30, [X31+48]
	049 Move X23, [X31+56]
	050 Call FusionStatsConfig.remove__onWorldAnchorCandidatesUpdate, X0
	051 Return 

Method: System.Void .ctor()

Disassembly:
	0x01F9B2B0 UNIMPLEMENTED
	0x01F9B2B4 FSUB V0.2S, V2.2S, V0.2S
	0x01F9B2B8 FSUB S2, S8, S5
	0x00000000 INVALID
	0x01F9B2C0 FDIV S2, S2, S3

ISIL:
	001 Move W8, 0xD70A
	002 NotImplemented "Instruction MOVK not yet implemented."
	003 Move X1, X31
	004 Move [X0+80], W8
	005 Call MonoBehaviour..ctor, X0
	006 Return 

Method: System.Void .cctor()

Disassembly:
	0x00000000 INVALID
	0x01F9B2C8 FMUL S4, S4, S2
	0x01F9B2CC B 0x1F9B2E0
	0x01F9B2D0 LDR X8, [X21]
	0x01F9B2D4 LDR X8, [X8 + 0xB8]
	0x01F9B2D8 LDR V0, [X8]
	0x01F9B2DC LDR V4, [X8 + 0x8]
	0x01F9B2E0 MOV V3.16B, V7.16B
	0x01F9B2E4 MOV V3.S[1], V1.S[0]
	0x01F9B2E8 FMUL S2, S8, S6
	0x01F9B2EC MOVZ W8, 0x1
	0x00000000 INVALID
	0x01F9B2F4 STP S7, S1, [X19 + 0x28]
	0x01F9B2F8 STR S8, [X19 + 0x30]
	0x01F9B2FC FADD S2, S2, S10
	0x01F9B300 FADD V3.2S, V3.2S, V9.2S
	0x01F9B304 STRB W8, [X19 + 0x34]
	0x01F9B308 LDP X20, X19, [X31 + 0x90]
	0x01F9B30C LDP X22, X21, [X31 + 0x80]
	0x01F9B310 LDR X30, [X31 + 0x70]
	0x01F9B314 LDP D9, D8, [X31 + 0x60]
	0x01F9B318 LDP D11, D10, [X31 + 0x50]
	0x01F9B31C FADD V0.2S, V3.2S, V0.2S
	0x01F9B320 FADD S2, S2, S4
	0x01F9B324 MOV S1, V0.S[1]
	0x01F9B328 ADD X31, X31, 0xA0
	0x01F9B32C RET
	0x01F9B330 STP X30, X21, [X31 - 0x20]!
	0x01F9B334 STP X20, X19, [X31 + 0x10]
	0x01F9B338 ADRP X21, 0x243E000
	0x01F9B33C ADRP X20, 0x2158000
	0x01F9B340 LDRB W8, [X21 + 0x790]
	0x01F9B344 LDR X20, [X20 + 0xA28]
	0x01F9B348 MOV X19, X0
	0x01F9B34C TBNZ X8, 0x0, 0x1F9B370

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x243F000
	007 Move X22, 0x2160000
	008 Move X19, 0x2160000
	009 Move X20, 0x2180000
	010 Move W8, [X21+1919]
	011 Move X22, [X22+2352]
	012 Move X19, [X19+2360]
	013 Move X20, [X20+3856]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0x2180000
	019 Move X0, [X0+3856]
	020 Call 0x1C17CF4
	021 Move X0, 0x2160000
	022 Move X0, [X0+2360]
	023 Call 0x1C17CF4
	024 Move X0, 0x2160000
	025 Move X0, [X0+2352]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X21+1919], W8
	029 Move X0, [X22]
	030 Call 0x1C17F10
	031 Move X1, [X19]
	032 Move X19, X0
	033 Call List`1<Object>..ctor, X0
	034 Move X8, [X20]
	035 Move X22, [X31+16]
	036 Move X21, [X31+24]
	037 Move X8, [X8+184]
	038 Move [X8], X19
	039 Move X20, [X31+32]
	040 Move X19, [X31+40]
	041 Move X30, [X31+48]
	042 Return 

