Type: Fusion.FusionBootstrap/<StartWithClients>d__58

Method: System.Void .ctor(System.Int32 <>1__state)

Disassembly:
	0x01F8C240 STR W8, [X31 + 0x90]
	0x01F8C244 LDR X0, [X9]
	0x01F8C248 BL 0x1C16E04
	0x01F8C24C ADRP X8, 0x218E000
	0x01F8C250 LDR X8, [X8 + 0x830]
	0x01F8C254 ADRP X9, 0x2173000
	0x01F8C258 ADRP X10, 0x218E000
	0x01F8C25C LDR X9, [X9 + 0x268]
	0x01F8C260 LDR X10, [X10 + 0x808]
	0x01F8C264 LDR X8, [X8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W19, W1
	005 Move X1, X31
	006 Move X20, X0
	007 Call Object..ctor, X0
	008 Move [X20+16], W19
	009 Move X20, [X31+16]
	010 Move X19, [X31+24]
	011 Move X30, [X31+32]
	012 Return 

Method: System.Void System.IDisposable.Dispose()

Disassembly:
	0x01F8CDAC BL 0x3EB1B00

ISIL:
	001 Return 

Method: System.Boolean MoveNext()

Disassembly:
	0x01F8CDB0 MOV X20, X0
	0x01F8CDB4 BL 0x3EB1AE0
	0x01F8CDB8 MOV X0, X20
	0x01F8CDBC BL 0x1D2C690
	0x01F8CDC0 BL 0x1990590
	0x01F8CDC4 STR X30, [X31 - 0x30]!
	0x01F8CDC8 STP X22, X21, [X31 + 0x10]
	0x01F8CDCC STP X20, X19, [X31 + 0x20]
	0x01F8CDD0 ADRP X22, 0x244D000
	0x01F8CDD4 ADRP X21, 0x2170000
	0x01F8CDD8 LDRB W8, [X22 + 0x70C]
	0x01F8CDDC LDR X21, [X21 + 0x9E8]
	0x01F8CDE0 MOV X19, X1
	0x01F8CDE4 MOV X20, X0
	0x01F8CDE8 TBNZ X8, 0x0, 0x1F8CE00
	0x01F8CDEC ADRP X0, 0x2170000
	0x01F8CDF0 LDR X0, [X0 + 0x9E8]
	0x01F8CDF4 BL 0x1C16CF4
	0x01F8CDF8 MOVZ W8, 0x1
	0x01F8CDFC STRB W8, [X22 + 0x70C]
	0x01F8CE00 LDR X0, [X21]
	0x01F8CE04 LDR X20, [X20 + 0x38]
	0x01F8CE08 LDR W8, [X0 + 0xE0]
	0x01F8CE0C CBNZ W8, 0x1F8CE14
	0x01F8CE10 BL 0x1C16DFC
	0x01F8CE14 MOV X0, X20
	0x01F8CE18 MOV X1, X31
	0x01F8CE1C BL 0x332056C
	0x01F8CE20 MOV W1, W0
	0x01F8CE24 CBZ X19, 0x1F8CE8C
	0x01F8CE28 LDR X8, [X19]
	0x01F8CE2C MOV X0, X19
	0x01F8CE30 LDP X20, X19, [X31 + 0x20]
	0x01F8CE34 LDP X22, X21, [X31 + 0x10]
	0x01F8CE38 LDR X3, [X8 + 0x218]
	0x01F8CE3C LDR X2, [X8 + 0x220]
	0x01F8CE40 LDR X30, [X31], #0x30
	0x01F8CE44 BR X3
	0x01F8CE48 B 0x1F8CE4C
	0x01F8CE4C MOV X20, X0
	0x01F8CE50 CMP W1, 0x1
	0x01F8CE54 B.NE 0x1F8CEB8
	0x01F8CE58 MOV X0, X20
	0x01F8CE5C BL 0x3EB1AD0
	0x01F8CE60 MOV X20, X0
	0x01F8CE64 ADRP X0, 0x216D000
	0x01F8CE68 LDR X0, [X0 + 0xCC0]
	0x01F8CE6C BL 0x1C16D08
	0x01F8CE70 LDR X8, [X20]
	0x01F8CE74 LDR X1, [X8]
	0x01F8CE78 BL 0x1C17270
	0x01F8CE7C TBZ X0, 0x0, 0x1F8CE90
	0x01F8CE80 BL 0x3EB1AE0
	0x01F8CE84 MOV W1, W31
	0x01F8CE88 CBNZ X19, 0x1F8CE28
	0x01F8CE8C BL 0x1C16F20
	0x01F8CE90 MOVZ W0, 0x8
	0x01F8CE94 BL 0x3EB1AF0
	0x01F8CE98 LDR X8, [X20]
	0x01F8CE9C STR X8, [X0]
	0x01F8CEA0 ADRP X1, 0x1F28000
	0x01F8CEA4 ADD X1, X1, 0xE58
	0x01F8CEA8 MOV X2, X31
	0x01F8CEAC BL 0x3EB1B00
	0x01F8CEB0 MOV X20, X0
	0x01F8CEB4 BL 0x3EB1AE0
	0x01F8CEB8 MOV X0, X20
	0x01F8CEBC BL 0x1D2C690
	0x01F8CEC0 BL 0x1990590
	0x01F8CEC4 STR X30, [X31 - 0x30]!
	0x01F8CEC8 STP X22, X21, [X31 + 0x10]
	0x01F8CECC STP X20, X19, [X31 + 0x20]
	0x01F8CED0 ADRP X22, 0x244D000
	0x01F8CED4 ADRP X21, 0x2170000
	0x01F8CED8 LDRB W8, [X22 + 0x70D]
	0x01F8CEDC LDR X21, [X21 + 0x9E8]
	0x01F8CEE0 MOV X19, X1
	0x01F8CEE4 MOV X20, X0
	0x01F8CEE8 TBNZ X8, 0x0, 0x1F8CF00
	0x01F8CEEC ADRP X0, 0x2170000
	0x01F8CEF0 LDR X0, [X0 + 0x9E8]
	0x01F8CEF4 BL 0x1C16CF4
	0x01F8CEF8 MOVZ W8, 0x1
	0x01F8CEFC STRB W8, [X22 + 0x70D]
	0x01F8CF00 LDR X0, [X21]
	0x01F8CF04 LDR X20, [X20 + 0x38]
	0x01F8CF08 LDR W8, [X0 + 0xE0]
	0x01F8CF0C CBNZ W8, 0x1F8CF14
	0x01F8CF10 BL 0x1C16DFC
	0x01F8CF14 MOV X0, X20
	0x01F8CF18 MOV X1, X31
	0x01F8CF1C BL 0x332056C
	0x01F8CF20 MOV W1, W0
	0x01F8CF24 CBZ X19, 0x1F8CF80
	0x01F8CF28 MOV X0, X19
	0x01F8CF2C LDP X20, X19, [X31 + 0x20]
	0x01F8CF30 LDP X22, X21, [X31 + 0x10]
	0x01F8CF34 LDR X30, [X31], #0x30
	0x01F8CF38 B 0x1F8AFD0
	0x01F8CF3C B 0x1F8CF40
	0x01F8CF40 MOV X20, X0
	0x01F8CF44 CMP W1, 0x1
	0x01F8CF48 B.NE 0x1F8CFAC
	0x01F8CF4C MOV X0, X20
	0x01F8CF50 BL 0x3EB1AD0
	0x01F8CF54 MOV X20, X0
	0x01F8CF58 ADRP X0, 0x216D000
	0x01F8CF5C LDR X0, [X0 + 0xCC0]
	0x01F8CF60 BL 0x1C16D08
	0x01F8CF64 LDR X8, [X20]
	0x01F8CF68 LDR X1, [X8]
	0x01F8CF6C BL 0x1C17270
	0x01F8CF70 TBZ X0, 0x0, 0x1F8CF84
	0x01F8CF74 BL 0x3EB1AE0
	0x01F8CF78 MOV W1, W31
	0x01F8CF7C CBNZ X19, 0x1F8CF28
	0x01F8CF80 BL 0x1C16F20
	0x01F8CF84 MOVZ W0, 0x8
	0x01F8CF88 BL 0x3EB1AF0
	0x01F8CF8C LDR X8, [X20]
	0x01F8CF90 STR X8, [X0]
	0x01F8CF94 ADRP X1, 0x1F28000
	0x01F8CF98 ADD X1, X1, 0xE58
	0x01F8CF9C MOV X2, X31
	0x01F8CFA0 BL 0x3EB1B00
	0x01F8CFA4 MOV X20, X0
	0x01F8CFA8 BL 0x3EB1AE0
	0x01F8CFAC MOV X0, X20
	0x01F8CFB0 BL 0x1D2C690
	0x01F8CFB4 BL 0x1990590
	0x01F8CFB8 SUB X31, X31, 0x20
	0x01F8CFBC STP X30, X19, [X31 + 0x10]
	0x01F8CFC0 STR W31, [X31 + 0xC]
	0x01F8CFC4 LDR X0, [X0 + 0x38]
	0x01F8CFC8 MOV X19, X1
	0x01F8CFCC ADD X1, X31, 0xC
	0x01F8CFD0 MOV X2, X31
	0x01F8CFD4 BL 0x337BDF4
	0x01F8CFD8 CBZ X19, 0x1F8CFF4
	0x01F8CFDC LDR W1, [X31 + 0xC]
	0x01F8CFE0 MOV X0, X19
	0x01F8CFE4 BL 0x1F8B170
	0x01F8CFE8 LDP X30, X19, [X31 + 0x10]
	0x01F8CFEC ADD X31, X31, 0x20
	0x01F8CFF0 RET
	0x01F8CFF4 BL 0x1C16F20
	0x01F8CFF8 STR X30, [X31 - 0x30]!
	0x01F8CFFC STP X22, X21, [X31 + 0x10]
	0x01F8D000 STP X20, X19, [X31 + 0x20]
	0x01F8D004 ADRP X22, 0x244C000
	0x01F8D008 ADRP X21, 0x216F000
	0x01F8D00C LDRB W8, [X22 + 0x70E]
	0x01F8D010 LDR X21, [X21 + 0x9E8]
	0x01F8D014 MOV X19, X1
	0x01F8D018 MOV X20, X0
	0x01F8D01C TBNZ X8, 0x0, 0x1F8D034
	0x01F8D020 ADRP X0, 0x216F000
	0x01F8D024 LDR X0, [X0 + 0x9E8]
	0x01F8D028 BL 0x1C16CF4
	0x01F8D02C MOVZ W8, 0x1
	0x01F8D030 STRB W8, [X22 + 0x70E]
	0x01F8D034 LDR X0, [X21]
	0x01F8D038 LDR X20, [X20 + 0x38]
	0x01F8D03C LDR W8, [X0 + 0xE0]
	0x01F8D040 CBNZ W8, 0x1F8D048
	0x01F8D044 BL 0x1C16DFC
	0x01F8D048 MOV X0, X20
	0x01F8D04C MOV X1, X31
	0x01F8D050 BL 0x332056C
	0x01F8D054 MOV W1, W0
	0x01F8D058 CBZ X19, 0x1F8D0B4
	0x01F8D05C MOV X0, X19
	0x01F8D060 LDP X20, X19, [X31 + 0x20]
	0x01F8D064 LDP X22, X21, [X31 + 0x10]
	0x01F8D068 LDR X30, [X31], #0x30
	0x01F8D06C B 0x1F8B0A0
	0x01F8D070 B 0x1F8D074
	0x01F8D074 MOV X20, X0
	0x01F8D078 CMP W1, 0x1
	0x01F8D07C B.NE 0x1F8D0E0
	0x01F8D080 MOV X0, X20
	0x01F8D084 BL 0x3EB1AD0
	0x01F8D088 MOV X20, X0
	0x01F8D08C ADRP X0, 0x216C000
	0x01F8D090 LDR X0, [X0 + 0xCC0]
	0x01F8D094 BL 0x1C16D08
	0x01F8D098 LDR X8, [X20]
	0x01F8D09C LDR X1, [X8]
	0x01F8D0A0 BL 0x1C17270
	0x01F8D0A4 TBZ X0, 0x0, 0x1F8D0B8
	0x01F8D0A8 BL 0x3EB1AE0
	0x01F8D0AC MOV W1, W31
	0x01F8D0B0 CBNZ X19, 0x1F8D05C
	0x01F8D0B4 BL 0x1C16F20
	0x01F8D0B8 MOVZ W0, 0x8
	0x01F8D0BC BL 0x3EB1AF0
	0x01F8D0C0 LDR X8, [X20]
	0x01F8D0C4 STR X8, [X0]
	0x01F8D0C8 ADRP X1, 0x1F27000
	0x01F8D0CC ADD X1, X1, 0xE58
	0x01F8D0D0 MOV X2, X31
	0x01F8D0D4 BL 0x3EB1B00
	0x01F8D0D8 MOV X20, X0
	0x01F8D0DC BL 0x3EB1AE0
	0x01F8D0E0 MOV X0, X20
	0x01F8D0E4 BL 0x1D2C690
	0x01F8D0E8 BL 0x1990590
	0x01F8D0EC SUB X31, X31, 0x90
	0x01F8D0F0 STR D10, [X31 + 0x20]
	0x01F8D0F4 STP D9, D8, [X31 + 0x28]
	0x01F8D0F8 STR X30, [X31 + 0x38]
	0x01F8D0FC STP X28, X27, [X31 + 0x40]
	0x01F8D100 STP X26, X25, [X31 + 0x50]
	0x01F8D104 STP X24, X23, [X31 + 0x60]
	0x01F8D108 STP X22, X21, [X31 + 0x70]
	0x01F8D10C STP X20, X19, [X31 + 0x80]
	0x01F8D110 ADRP X20, 0x244C000
	0x01F8D114 LDRB W8, [X20 + 0x70A]
	0x01F8D118 MOV X19, X0
	0x01F8D11C TBNZ X8, 0x0, 0x1F8D23C
	0x01F8D120 ADRP X0, 0x218D000
	0x01F8D124 LDR X0, [X0 + 0x878]
	0x01F8D128 BL 0x1C16CF4
	0x01F8D12C ADRP X0, 0x218D000
	0x01F8D130 LDR X0, [X0 + 0x880]
	0x01F8D134 BL 0x1C16CF4
	0x01F8D138 ADRP X0, 0x218D000
	0x01F8D13C LDR X0, [X0 + 0x888]
	0x01F8D140 BL 0x1C16CF4
	0x01F8D144 ADRP X0, 0x218D000
	0x01F8D148 LDR X0, [X0 + 0x890]
	0x01F8D14C BL 0x1C16CF4
	0x01F8D150 ADRP X0, 0x218D000
	0x01F8D154 LDR X0, [X0 + 0x4C0]
	0x01F8D158 BL 0x1C16CF4
	0x01F8D15C ADRP X0, 0x218D000
	0x01F8D160 LDR X0, [X0 + 0x898]
	0x01F8D164 BL 0x1C16CF4
	0x01F8D168 ADRP X0, 0x218D000
	0x01F8D16C LDR X0, [X0 + 0x8A0]
	0x01F8D170 BL 0x1C16CF4
	0x01F8D174 ADRP X0, 0x218D000
	0x01F8D178 LDR X0, [X0 + 0x8A8]
	0x01F8D17C BL 0x1C16CF4
	0x01F8D180 ADRP X0, 0x218D000
	0x01F8D184 LDR X0, [X0 + 0x8B0]
	0x01F8D188 BL 0x1C16CF4
	0x01F8D18C ADRP X0, 0x218D000
	0x01F8D190 LDR X0, [X0 + 0x8B8]
	0x01F8D194 BL 0x1C16CF4
	0x01F8D198 ADRP X0, 0x218D000
	0x01F8D19C LDR X0, [X0 + 0x8C0]
	0x01F8D1A0 BL 0x1C16CF4
	0x01F8D1A4 ADRP X0, 0x218D000
	0x01F8D1A8 LDR X0, [X0 + 0x8C8]
	0x01F8D1AC BL 0x1C16CF4
	0x01F8D1B0 ADRP X0, 0x218D000
	0x01F8D1B4 LDR X0, [X0 + 0x8D0]
	0x01F8D1B8 BL 0x1C16CF4
	0x01F8D1BC ADRP X0, 0x218D000
	0x01F8D1C0 LDR X0, [X0 + 0x8D8]
	0x01F8D1C4 BL 0x1C16CF4
	0x01F8D1C8 ADRP X0, 0x218D000
	0x01F8D1CC LDR X0, [X0 + 0x8E0]
	0x01F8D1D0 BL 0x1C16CF4
	0x01F8D1D4 ADRP X0, 0x218D000
	0x01F8D1D8 LDR X0, [X0 + 0x8E8]
	0x01F8D1DC BL 0x1C16CF4
	0x01F8D1E0 ADRP X0, 0x218D000
	0x01F8D1E4 LDR X0, [X0 + 0x8F0]
	0x01F8D1E8 BL 0x1C16CF4
	0x01F8D1EC ADRP X0, 0x218D000
	0x01F8D1F0 LDR X0, [X0 + 0x8F8]
	0x01F8D1F4 BL 0x1C16CF4
	0x01F8D1F8 ADRP X0, 0x218D000
	0x01F8D1FC LDR X0, [X0 + 0x900]
	0x01F8D200 BL 0x1C16CF4
	0x01F8D204 ADRP X0, 0x218D000
	0x01F8D208 LDR X0, [X0 + 0x908]
	0x01F8D20C BL 0x1C16CF4
	0x01F8D210 ADRP X0, 0x2166000
	0x01F8D214 LDR X0, [X0 + 0x988]
	0x01F8D218 BL 0x1C16CF4
	0x01F8D21C ADRP X0, 0x218D000
	0x01F8D220 LDR X0, [X0 + 0x910]
	0x01F8D224 BL 0x1C16CF4
	0x01F8D228 ADRP X0, 0x218D000
	0x01F8D22C LDR X0, [X0 + 0x918]
	0x01F8D230 BL 0x1C16CF4
	0x01F8D234 MOVZ W8, 0x1
	0x01F8D238 STRB W8, [X20 + 0x70A]
	0x01F8D23C MOV X0, X19
	0x01F8D240 STP X31, X31, [X31 + 0x10]
	0x01F8D244 STR W31, [X31 + 0xC]
	0x01F8D248 STR X31, [X31]
	0x01F8D24C BL 0x1F8C9A4
	0x01F8D250 CBZ X0, 0x1F8DC60
	0x01F8D254 MOV X21, X0
	0x01F8D258 BL 0x1F8B918
	0x01F8D25C TBZ X0, 0x0, 0x1F8DC38
	0x01F8D260 LDR W28, [X21 + 0x58]
	0x01F8D264 CMP W28, 0x5
	0x01F8D268 B.NE 0x1F8D274
	0x01F8D26C LDRB W8, [X21 + 0x30]
	0x01F8D270 CBNZ W8, 0x1F8DC38
	0x01F8D274 ADRP X25, 0x218D000
	0x01F8D278 LDR X25, [X25 + 0x4C0]
	0x01F8D27C LDR X0, [X25]
	0x01F8D280 LDR W8, [X0 + 0xE0]
	0x01F8D284 CBNZ W8, 0x1F8D28C
	0x01F8D288 BL 0x1C16DFC
	0x01F8D28C MOV X0, X31
	0x01F8D290 BL 0x3C6748C
	0x01F8D294 LDR X8, [X19 + 0x28]
	0x01F8D298 MOV X20, X0
	0x01F8D29C ADD X1, X31, 0x1C
	0x01F8D2A0 ADD X2, X31, 0x18
	0x01F8D2A4 ADD X3, X31, 0x14
	0x01F8D2A8 ADD X4, X31, 0x10
	0x01F8D2AC ADD X5, X31, 0xC
	0x01F8D2B0 MOV X0, X8
	0x01F8D2B4 BL 0x1F86AE8
	0x01F8D2B8 MOV X1, X31
	0x01F8D2BC BL 0x3C67288
	0x01F8D2C0 LDP S9, S10, [X31 + 0xC]
	0x01F8D2C4 LDR V8, [X31 + 0x18]
	0x01F8D2C8 MOV X0, X31
	0x01F8D2CC BL 0x3C0E0D8
	0x01F8D2D0 SCVTF S1, S10
	0x01F8D2D4 SCVTF S3, W0
	0x01F8D2D8 MOV V0.16B, V9.16B
	0x01F8D2DC MOV V2.16B, V8.16B
	0x01F8D2E0 MOV X0, X31
	0x01F8D2E4 BL 0x3C6E7CC
	0x01F8D2E8 MOV X0, X31
	0x01F8D2EC BL 0x3C6748C
	0x01F8D2F0 CBZ X0, 0x1F8DC60
	0x01F8D2F4 MOV X1, X31
	0x01F8D2F8 BL 0x3C6F104
	0x01F8D2FC ADRP X27, 0x218D000
	0x01F8D300 LDR X27, [X27 + 0x878]
	0x01F8D304 MOV X22, X0
	0x01F8D308 LDR X23, [X27]
	0x01F8D30C LDR X8, [X23 + 0x38]
	0x01F8D310 CBNZ X8, 0x1F8D320
	0x01F8D314 MOV X0, X23
	0x01F8D318 BL 0x1C5C6E0
	0x01F8D31C LDR X8, [X23 + 0x38]
	0x01F8D320 LDR X0, [X8 + 0x10]
	0x01F8D324 LDRB W8, [X0 + 0x135]
	0x01F8D328 TBNZ X8, 0x0, 0x1F8D330
	0x01F8D32C BL 0x1C5C684
	0x01F8D330 LDR W8, [X0 + 0xE0]
	0x01F8D334 CBNZ W8, 0x1F8D33C
	0x01F8D338 BL 0x1C16DFC
	0x01F8D33C LDR X8, [X23 + 0x38]
	0x01F8D340 LDR X0, [X8 + 0x10]
	0x01F8D344 LDRB W8, [X0 + 0x135]
	0x01F8D348 TBNZ X8, 0x0, 0x1F8D350
	0x01F8D34C BL 0x1C5C684
	0x01F8D350 LDR X8, [X0 + 0xB8]
	0x01F8D354 MOV X0, X22
	0x01F8D358 MOV X2, X31
	0x01F8D35C LDR X1, [X8]
	0x01F8D360 BL 0x3C6E55C
	0x01F8D364 ADRP X26, 0x218D000
	0x01F8D368 LDR X26, [X26 + 0x888]
	0x01F8D36C MOVZ W1, 0x1
	0x01F8D370 LDR X0, [X26]
	0x01F8D374 BL 0x1C16D6C
	0x01F8D378 LDR V9, [X31 + 0x1C]
	0x01F8D37C MOV X22, X0
	0x01F8D380 MOV X0, X31
	0x01F8D384 MOV V0.16B, V9.16B
	0x01F8D388 BL 0x3C6C354
	0x01F8D38C CBZ X22, 0x1F8DC60
	0x01F8D390 LDR W8, [X22 + 0x18]
	0x01F8D394 CBZ W8, 0x1F8DC64
	0x01F8D398 STR X0, [X22 + 0x20]
	0x01F8D39C MOV X0, X22
	0x01F8D3A0 MOV X1, X31
	0x01F8D3A4 BL 0x3C6DD28
	0x01F8D3A8 LDR X0, [X19 + 0x48]
	0x01F8D3AC CBZ X0, 0x1F8DC60
	0x01F8D3B0 ADRP X8, 0x218D000
	0x01F8D3B4 LDR W1, [X21 + 0x58]
	0x01F8D3B8 LDR X8, [X8 + 0x880]
	0x01F8D3BC ADD X2, X31, 0x0
	0x01F8D3C0 ADD X22, X31, 0x0
	0x01F8D3C4 LDR X3, [X8]
	0x01F8D3C8 BL 0x2A46818
	0x01F8D3CC ADRP X9, 0x218D000
	0x01F8D3D0 MOV W8, W0
	0x01F8D3D4 LDR X0, [X25]
	0x01F8D3D8 LDR X9, [X9 + 0x8F8]
	0x01F8D3DC ANDS W31, W8, 0x1
	0x01F8D3E0 CSEL X8, X22, X9, NE
	0x01F8D3E4 LDR W9, [X0 + 0xE0]
	0x01F8D3E8 LDR X22, [X8]
	0x01F8D3EC CBNZ W9, 0x1F8D3F4
	0x01F8D3F0 BL 0x1C16DFC
	0x01F8D3F4 MOV X0, X31
	0x01F8D3F8 BL 0x3C6748C
	0x01F8D3FC CBZ X0, 0x1F8DC60
	0x01F8D400 MOV X1, X31
	0x01F8D404 BL 0x3C67938
	0x01F8D408 ADRP X8, 0x218D000
	0x01F8D40C LDR X8, [X8 + 0x890]
	0x01F8D410 MOV X24, X0
	0x01F8D414 LDR X8, [X8]
	0x01F8D418 MOV X0, X8
	0x01F8D41C BL 0x1C16F10
	0x01F8D420 MOV X1, X24
	0x01F8D424 MOV X2, X31
	0x01F8D428 MOV X23, X0
	0x01F8D42C BL 0x3C74368
	0x01F8D430 MOV X0, X31
	0x01F8D434 BL 0x3C6748C
	0x01F8D438 CBZ X0, 0x1F8DC60
	0x01F8D43C MOV X1, X31
	0x01F8D440 BL 0x3C67938
	0x01F8D444 CBZ X0, 0x1F8DC60
	0x01F8D448 MOV X1, X31
	0x01F8D44C BL 0x3C736C8
	0x01F8D450 CBZ X23, 0x1F8DC60
	0x01F8D454 ADRP X8, 0xFFFFFFFFFEB5D000
	0x01F8D458 LDR V0, [X8 + 0x5C]
	0x01F8D45C MOVZ W8, 0x7F800000
	0x01F8D460 SCVTF S1, W0
	0x01F8D464 FMOV S2, W8
	0x01F8D468 FMUL S0, S1, S0
	0x01F8D46C FCVTZS W8, S0
	0x01F8D470 FCMP S0, S2
	0x01F8D474 MOVZ W9, 0x80000000
	0x01F8D478 CSEL W1, W9, W8, EQ
	0x01F8D47C MOV X0, X23
	0x01F8D480 MOV X2, X31
	0x01F8D484 BL 0x3C73704
	0x01F8D488 MOV X0, X23
	0x01F8D48C MOV W1, W31
	0x01F8D490 MOV X2, X31
	0x01F8D494 BL 0x3C7343C
	0x01F8D498 LDR X24, [X27]
	0x01F8D49C LDR X8, [X24 + 0x38]
	0x01F8D4A0 CBNZ X8, 0x1F8D4B0
	0x01F8D4A4 MOV X0, X24
	0x01F8D4A8 BL 0x1C5C6E0
	0x01F8D4AC LDR X8, [X24 + 0x38]
	0x01F8D4B0 LDR X0, [X8 + 0x10]
	0x01F8D4B4 LDRB W8, [X0 + 0x135]
	0x01F8D4B8 TBNZ X8, 0x0, 0x1F8D4C0
	0x01F8D4BC BL 0x1C5C684
	0x01F8D4C0 LDR W8, [X0 + 0xE0]
	0x01F8D4C4 CBNZ W8, 0x1F8D4CC
	0x01F8D4C8 BL 0x1C16DFC
	0x01F8D4CC LDR X8, [X24 + 0x38]
	0x01F8D4D0 LDR X0, [X8 + 0x10]
	0x01F8D4D4 LDRB W8, [X0 + 0x135]
	0x01F8D4D8 TBNZ X8, 0x0, 0x1F8D4E0
	0x01F8D4DC BL 0x1C5C684
	0x01F8D4E0 LDR X8, [X0 + 0xB8]
	0x01F8D4E4 MOV X0, X22
	0x01F8D4E8 MOV X1, X23
	0x01F8D4EC MOV X3, X31
	0x01F8D4F0 LDR X2, [X8]
	0x01F8D4F4 BL 0x3C6D2CC
	0x01F8D4F8 LDRB W8, [X21 + 0x30]
	0x01F8D4FC CBNZ W8, 0x1F8D578
	0x01F8D500 LDR W8, [X21 + 0x58]
	0x01F8D504 CMP W8, 0x5
	0x01F8D508 B.NE 0x1F8D578
	0x01F8D50C LDR X0, [X26]
	0x01F8D510 MOVZ W1, 0x2
	0x01F8D514 BL 0x1C16D6C
	0x01F8D518 MOV X22, X0
	0x01F8D51C MOVZ W0, 0x1
	0x01F8D520 MOV X1, X31
	0x01F8D524 BL 0x3C6F2F8
	0x01F8D528 CBZ X22, 0x1F8DC60
	0x01F8D52C LDR W8, [X22 + 0x18]
	0x01F8D530 CBZ W8, 0x1F8DC64
	0x01F8D534 STR X0, [X22 + 0x20]
	0x01F8D538 MOV V0.16B, V9.16B
	0x01F8D53C MOV X0, X31
	0x01F8D540 BL 0x3C6C2C0
	0x01F8D544 LDR W8, [X22 + 0x18]
	0x01F8D548 CMP W8, 0x1
	0x01F8D54C B.LS 0x1F8DC64
	0x01F8D550 STR X0, [X22 + 0x28]
	0x01F8D554 ADRP X8, 0x218D000
	0x01F8D558 LDR X8, [X8 + 0x908]
	0x01F8D55C MOV X1, X22
	0x01F8D560 MOV X2, X31
	0x01F8D564 LDR X0, [X8]
	0x01F8D568 BL 0x3C6D51C
	0x01F8D56C TBZ X0, 0x0, 0x1F8D578
	0x01F8D570 MOVZ W8, 0x1
	0x01F8D574 STRB W8, [X21 + 0x30]
	0x01F8D578 MOV X0, X31
	0x01F8D57C BL 0x3C6E2A4
	0x01F8D580 MOV X0, X31
	0x01F8D584 BL 0x3C6E780
	0x01F8D588 LDR X0, [X25]
	0x01F8D58C LDR W8, [X0 + 0xE0]
	0x01F8D590 CBNZ W8, 0x1F8D598
	0x01F8D594 BL 0x1C16DFC
	0x01F8D598 MOV X0, X31
	0x01F8D59C BL 0x3C6748C
	0x01F8D5A0 CBZ X0, 0x1F8DC60
	0x01F8D5A4 MOV X1, X31
	0x01F8D5A8 BL 0x3C6F104
	0x01F8D5AC LDR X23, [X27]
	0x01F8D5B0 MOV X22, X0
	0x01F8D5B4 LDR X8, [X23 + 0x38]
	0x01F8D5B8 CBNZ X8, 0x1F8D5C8
	0x01F8D5BC MOV X0, X23
	0x01F8D5C0 BL 0x1C5C6E0
	0x01F8D5C4 LDR X8, [X23 + 0x38]
	0x01F8D5C8 LDR X0, [X8 + 0x10]
	0x01F8D5CC LDRB W8, [X0 + 0x135]
	0x01F8D5D0 TBNZ X8, 0x0, 0x1F8D5D8
	0x01F8D5D4 BL 0x1C5C684
	0x01F8D5D8 LDR W8, [X0 + 0xE0]
	0x01F8D5DC CBNZ W8, 0x1F8D5E4
	0x01F8D5E0 BL 0x1C16DFC
	0x01F8D5E4 LDR X8, [X23 + 0x38]
	0x01F8D5E8 LDR X0, [X8 + 0x10]
	0x01F8D5EC LDRB W8, [X0 + 0x135]
	0x01F8D5F0 TBNZ X8, 0x0, 0x1F8D5F8
	0x01F8D5F4 BL 0x1C5C684
	0x01F8D5F8 LDR X8, [X0 + 0xB8]
	0x01F8D5FC MOV X0, X22
	0x01F8D600 MOV X2, X31
	0x01F8D604 LDR X1, [X8]
	0x01F8D608 BL 0x3C6E55C
	0x01F8D60C CBZ W28, 0x1F8D668
	0x01F8D610 LDR X0, [X26]
	0x01F8D614 MOVZ W1, 0x1
	0x01F8D618 BL 0x1C16D6C

ISIL:
	001 Subtract X31, X31, 272
	002 Move [X31+176], D8
	003 Move [X31+184], X29
	004 Move [X31+192], X30
	005 Move [X31+200], X27
	006 Move [X31+208], X26
	007 Move [X31+216], X25
	008 Move [X31+224], X24
	009 Move [X31+232], X23
	010 Move [X31+240], X22
	011 Move [X31+248], X21
	012 Move [X31+256], X20
	013 Move [X31+264], X19
	014 NotImplemented "Instruction MRS not yet implemented."
	015 Move X8, [X26+40]
	016 Move X20, 0x244E000
	017 Move X19, X0
	018 Move [X31+168], X8
	019 Move W8, [X20+1796]
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {92}
	024 Move X0, 0x216B000
	025 Move X0, [X0+2608]
	026 Call 0x1C17CF4
	027 Move X0, 0x2168000
	028 Move X0, [X0+2600]
	029 Call 0x1C17CF4
	030 Move X0, 0x218F000
	031 Move X0, [X0+1856]
	032 Call 0x1C17CF4
	033 Move X0, 0x2172000
	034 Move X0, [X0+640]
	035 Call 0x1C17CF4
	036 Move X0, 0x2168000
	037 Move X0, [X0+1880]
	038 Call 0x1C17CF4
	039 Move X0, 0x2172000
	040 Move X0, [X0+120]
	041 Call 0x1C17CF4
	042 Move X0, 0x218F000
	043 Move X0, [X0+1928]
	044 Call 0x1C17CF4
	045 Move X0, 0x2168000
	046 Move X0, [X0+1432]
	047 Call 0x1C17CF4
	048 Move X0, 0x2168000
	049 Move X0, [X0+3216]
	050 Call 0x1C17CF4
	051 Move X0, 0x218F000
	052 Move X0, [X0+2040]
	053 Call 0x1C17CF4
	054 Move X0, 0x218F000
	055 Move X0, [X0+2000]
	056 Call 0x1C17CF4
	057 Move X0, 0x2171000
	058 Move X0, [X0+2464]
	059 Call 0x1C17CF4
	060 Move X0, 0x216B000
	061 Move X0, [X0+3120]
	062 Call 0x1C17CF4
	063 Move X0, 0x218F000
	064 Move X0, [X0+2048]
	065 Call 0x1C17CF4
	066 Move X0, 0x2174000
	067 Move X0, [X0+616]
	068 Call 0x1C17CF4
	069 Move X0, 0x218F000
	070 Move X0, [X0+2056]
	071 Call 0x1C17CF4
	072 Move X0, 0x218F000
	073 Move X0, [X0+2064]
	074 Call 0x1C17CF4
	075 Move X0, 0x218F000
	076 Move X0, [X0+2072]
	077 Call 0x1C17CF4
	078 Move X0, 0x218F000
	079 Move X0, [X0+2080]
	080 Call 0x1C17CF4
	081 Move X0, 0x218F000
	082 Move X0, [X0+2088]
	083 Call 0x1C17CF4
	084 Move X0, 0x218F000
	085 Move X0, [X0+2096]
	086 Call 0x1C17CF4
	087 Move X0, 0x218F000
	088 Move X0, [X0+2104]
	089 Call 0x1C17CF4
	090 Move W8, 1
	091 Move [X20+1796], W8
	092 Move [X31+8], X31
	093 Move [X31+16], X31
	094 Move [X31+112], X31
	095 Move [X31+120], X31
	096 Move [X31+128], X31
	097 Move [X31+80], X31
	098 Move [X31+88], X31
	099 Move [X31+96], X31
	100 Move W8, [X19+16]
	101 NotImplemented "Instruction CMP not yet implemented."
	102 Move X20, [X19+32]
	103 Move X9, -21356544
	104 Add X9, X9, 3152
	105 NotImplemented "Instruction ADR not yet implemented."
	106 Move W11, [X9]
	107 Add X10, X10, X11
	108 CallNoReturn X10
	109 Move TEMP, 0
	110 Not TEMP
	111 Move W8, TEMP
	112 Move [X19+16], W8
	113 Compare X20, 0
	114 JumpIfEqual {598}
	115 Move W8, [X20+88]
	116 Compare W8, 0
	117 JumpIfNotEqual {348}
	118 Move W8, [X19+40]
	119 Move W23, W31
	120 NotImplemented "Instruction CMP not yet implemented."
	121 Move W9, 1
	122 NotImplemented "Instruction LSLV not yet implemented."
	123 Move W10, 100
	124 And W31, W9, W10
	125 Move W9, [X19+44]
	126 Compare W9, 0
	127 JumpIfEqual {317}
	128 Move W23, 1
	129 Move W8, 1
	130 Move [X20+88], W8
	131 Move X8, 0x2168000
	132 Move X8, [X8+3216]
	133 Move X0, [X8]
	134 Move W8, [X0+224]
	135 Compare W8, 0
	136 JumpIfNotEqual {138}
	137 Call 0x1C17DFC
	138 Move X0, X31
	139 Call SceneManager.GetActiveScene
	140 Move X24, 0x2168000
	141 Move X24, [X24+1432]
	142 Move X21, [X20+32]
	143 Move X0, [X24]
	144 Move W8, [X0+224]
	145 Compare W8, 0
	146 JumpIfNotEqual {148}
	147 Call 0x1C17DFC
	148 Move X0, X21
	149 Move X1, X31
	150 Call Object.op_Implicit, X0
	151 Move TEMP, X0
	152 And TEMP, TEMP, 1
	153 Compare TEMP, 1
	154 JumpIfNotEqual {307}
	155 Move X0, [X24]
	156 Move X21, [X20+32]
	157 Move W8, [X0+224]
	158 Compare W8, 0
	159 JumpIfNotEqual {161}
	160 Call 0x1C17DFC
	161 Move X25, 0x218F000
	162 Move X25, [X25+1928]
	163 Move X0, X21
	164 Move X1, [X25]
	165 Call 0x222E35C, X0
	166 Move X1, X31
	167 Move [X20+32], X0
	168 Call Object.DontDestroyOnLoad, X0
	169 Move X0, [X20+32]
	170 Compare X0, 0
	171 JumpIfEqual {598}
	172 Move X8, 0x218E000
	173 Move X8, [X8+2080]
	174 Move X2, X31
	175 Move X1, [X8]
	176 Call Object.set_name, X0, X1
	177 Move X0, X31
	178 Call NetworkProjectConfig.get_Global
	179 Compare X0, 0
	180 JumpIfEqual {598}
	181 Move W8, [X0+32]
	182 Move X21, X0
	183 NotImplemented "Instruction CMP not yet implemented."
	184 Move W8, [X19+44]
	185 NotImplemented "Instruction CMP not yet implemented."
	186 Move X8, 0x2167000
	187 Move X8, [X8+1880]
	188 Add X1, X31, 144
	189 Move [X31+144], W23
	190 Move X0, [X8]
	191 Call 0x1C17E04
	192 Move X8, 0x218E000
	193 Move X8, [X8+2104]
	194 Move X9, 0x218E000
	195 Move X9, [X9+2048]
	196 Move X2, X0
	197 Move X8, [X8]
	198 Move X3, X31
	199 Move X1, [X9]
	200 Move X0, X8
	201 Call String.Format, X0, X1, X2
	202 Move X8, 0x2167000
	203 Move X8, [X8+2600]
	204 Move X22, X0
	205 Move X8, [X8]
	206 Move W9, [X8+224]
	207 Compare W9, 0
	208 JumpIfNotEqual {211}
	209 Move X0, X8
	210 Call 0x1C17DFC
	211 Move X0, X22
	212 Move X1, X31
	213 Call Debug.LogWarning, X0
	214 Move [X19+44], W23
	215 Move W9, [X19+40]
	216 Move W8, W31
	217 NotImplemented "Instruction CMP not yet implemented."
	218 Move W10, 1
	219 NotImplemented "Instruction LSLV not yet implemented."
	220 Move W10, 92
	221 And W31, W9, W10
	222 Move W8, [X19+44]
	223 NotImplemented "Instruction CMP not yet implemented."
	224 Move W8, W31
	225 Move W0, W31
	226 Move TEMP, 0
	227 Not TEMP
	228 Move W8, TEMP
	229 Move [X19+16], W8
	230 Move TEMP, 0
	231 Not TEMP
	232 Move W8, TEMP
	233 Move [X19+16], W8
	234 Move [X19+56], X31
	235 Move X0, [X19+56]
	236 Move TEMP, 0
	237 Not TEMP
	238 Move W8, TEMP
	239 Move [X19+16], W8
	240 Compare X0, 0
	241 JumpIfEqual {598}
	242 Move X1, X31
	243 Call Task.get_IsCompleted, X0
	244 Move TEMP, X0
	245 And TEMP, TEMP, 1
	246 Compare TEMP, 1
	247 JumpIfNotEqual {287}
	248 Move X0, [X19+56]
	249 Compare X0, 0
	250 JumpIfEqual {598}
	251 Move X1, X31
	252 Call Task.get_IsFaulted, X0
	253 Move TEMP, X0
	254 And TEMP, TEMP, 1
	255 Compare TEMP, 1
	256 JumpIfNotEqual {298}
	257 Compare X20, 0
	258 JumpIfEqual {598}
	259 Move X0, X20
	260 Call FusionBootstrap.ShutdownAll, X0
	261 Move TEMP, 0
	262 Not TEMP
	263 Move W8, TEMP
	264 Move [X19+16], W8
	265 Move X8, 0x218E000
	266 Move X8, [X8+1856]
	267 Move X8, [X8]
	268 Move X8, [X8+184]
	269 Move W8, [X8]
	270 NotImplemented "Instruction CMP not yet implemented."
	271 Move W8, [X19+40]
	272 NotImplemented "Instruction CMP not yet implemented."
	273 Compare X20, 0
	274 JumpIfEqual {598}
	275 Move V8, [X20+96]
	276 NotImplemented "Instruction FCMP not yet implemented."
	277 Move X8, 0x2170000
	278 Move X8, [X8+2464]
	279 Move X0, [X8]
	280 Call 0x1C17F10
	281 Move V0, V8
	282 Move X1, X31
	283 Move X20, X0
	284 Call WaitForSecondsRealtime..ctor, X0, V0
	285 Move [X19+24], X20
	286 Move W8, 4
	287 Move X8, 0x216A000
	288 Move X8, [X8+3120]
	289 Move X0, [X8]
	290 Call 0x1C17F10
	291 Move S0, 1
	292 Move X1, X31
	293 Move X20, X0
	294 Call WaitForSeconds..ctor, X0, V0
	295 Move W0, 1
	296 Move [X19+24], X20
	297 Move [X19+16], W0
	298 Compare X20, 0
	299 JumpIfEqual {598}
	300 Move W1, [X19+44]
	301 Move W3, [X19+48]
	302 Move W2, [X19+40]
	303 Move X0, X20
	304 Call FusionBootstrap.StartClients, X0, X1, X2, X3
	305 Move [X19+24], X0
	306 Move W8, 2
	307 Move X8, 0x2167000
	308 Move X8, [X8+2600]
	309 Move X0, [X8]
	310 Move W8, [X0+224]
	311 Compare W8, 0
	312 JumpIfNotEqual {314}
	313 Call 0x1C17DFC
	314 Move X8, 0x218E000
	315 Move X8, [X8+2064]
	316 Move X0, [X8]
	317 Move X9, 0x2171000
	318 Move X9, [X9+640]
	319 Add X1, X31, 144
	320 Move [X31+144], W8
	321 Move X0, [X9]
	322 Call 0x1C17E04
	323 Move X8, 0x218E000
	324 Move X8, [X8+2096]
	325 Move X9, 0x2173000
	326 Move X10, 0x218E000
	327 Move X9, [X9+616]
	328 Move X10, [X10+2056]
	329 Move X8, [X8]
	330 Move X2, X0
	331 Move X1, [X9]
	332 Move X3, [X10]
	333 Move X0, X8
	334 Move X4, X31
	335 Call String.Format, X0, X1, X2, X3
	336 Move X8, 0x2167000
	337 Move X8, [X8+2600]
	338 Move X19, X0
	339 Move X8, [X8]
	340 Move W9, [X8+224]
	341 Compare W9, 0
	342 JumpIfNotEqual {345}
	343 Move X0, X8
	344 Call 0x1C17DFC
	345 Move X0, X19
	346 Move X1, X31
	347 Call Debug.LogError, X0
	348 Move W0, W31
	349 Move X8, [X26+40]
	350 Move X9, [X31+168]
	351 NotImplemented "Instruction CMP not yet implemented."
	352 Move X20, [X31+256]
	353 Move X19, [X31+264]
	354 Move X22, [X31+240]
	355 Move X21, [X31+248]
	356 Move X24, [X31+224]
	357 Move X23, [X31+232]
	358 Move X26, [X31+208]
	359 Move X25, [X31+216]
	360 Move X30, [X31+192]
	361 Move X27, [X31+200]
	362 Move X29, [X31+184]
	363 Move V8, [X31+176]
	364 Add X31, X31, 272
	365 Return X0
	366 Move W8, [X21+32]
	367 NotImplemented "Instruction CMP not yet implemented."
	368 NotImplemented "Instruction CSET not yet implemented."
	369 Move X9, 0x218E000
	370 Move X9, [X9+1856]
	371 Move X9, [X9]
	372 Move X9, [X9+184]
	373 Move W9, [X9]
	374 NotImplemented "Instruction CMP not yet implemented."
	375 NotImplemented "Instruction CSET not yet implemented."
	376 Or W8, W8, W9
	377 Compare W8, 0
	378 JumpIfEqual {412}
	379 Move X0, [X20+64]
	380 Move X1, X31
	381 Call String.IsNullOrEmpty, X0
	382 Move TEMP, X0
	383 And TEMP, TEMP, 1
	384 Compare TEMP, 1
	385 JumpIfNotEqual {412}
	386 Move X0, X31
	387 Call Guid.NewGuid
	388 Move [X31+8], X0
	389 Move [X31+16], X1
	390 Add X0, X31, 8
	391 Move X1, X31
	392 Call Guid.ToString, X0
	393 Move [X20+64], X0
	394 Move X8, 0x218E000
	395 Move X8, [X8+2088]
	396 Move X1, X0
	397 Move X2, X31
	398 Move X0, [X8]
	399 Call String.Concat, X0, X1
	400 Move X8, 0x2167000
	401 Move X8, [X8+2600]
	402 Move X21, X0
	403 Move X8, [X8]
	404 Move W9, [X8+224]
	405 Compare W9, 0
	406 JumpIfNotEqual {409}
	407 Move X0, X8
	408 Call 0x1C17DFC
	409 Move X0, X21
	410 Move X1, X31
	411 Call Debug.Log, X0
	412 Move X0, X20
	413 Move X1, X31
	414 Call Component.get_gameObject, X0
	415 Compare X0, 0
	416 JumpIfEqual {598}
	417 Move X1, X31
	418 Call GameObject.get_transform, X0
	419 Compare X0, 0
	420 JumpIfEqual {598}
	421 Move X1, X31
	422 Call Transform.get_parent, X0
	423 Move X8, [X24]
	424 Move X21, X0
	425 Move W9, [X8+224]
	426 Compare W9, 0
	427 JumpIfNotEqual {430}
	428 Move X0, X8
	429 Call 0x1C17DFC
	430 Move X0, X21
	431 Move X1, X31
	432 Call Object.op_Implicit, X0
	433 Move TEMP, X0
	434 And TEMP, TEMP, 1
	435 Compare TEMP, 1
	436 JumpIfNotEqual {461}
	437 Move X8, 0x2167000
	438 Move X8, [X8+2600]
	439 Move X0, [X8]
	440 Move W8, [X0+224]
	441 Compare W8, 0
	442 JumpIfNotEqual {444}
	443 Call 0x1C17DFC
	444 Move X8, 0x218E000
	445 Move X8, [X8+2072]
	446 Move X1, X31
	447 Move X0, [X8]
	448 Call Debug.LogWarning, X0
	449 Move X0, X20
	450 Move X1, X31
	451 Call Component.get_gameObject, X0
	452 Compare X0, 0
	453 JumpIfEqual {598}
	454 Move X1, X31
	455 Call GameObject.get_transform, X0
	456 Compare X0, 0
	457 JumpIfEqual {598}
	458 Move X1, X31
	459 Move X2, X31
	460 Call Transform.set_parent, X0, X1
	461 Move X0, X20
	462 Move X1, X31
	463 Call Component.get_gameObject, X0
	464 Move X8, [X24]
	465 Move X21, X0
	466 Move W9, [X8+224]
	467 Compare W9, 0
	468 JumpIfNotEqual {471}
	469 Move X0, X8
	470 Call 0x1C17DFC
	471 Move X0, X21
	472 Move X1, X31
	473 Call Object.DontDestroyOnLoad, X0
	474 Move W2, [X19+40]
	475 Move [X20+104], W2
	476 Move TEMP, X23
	477 And TEMP, TEMP, 1
	478 Compare TEMP, 1
	479 JumpIfNotEqual {488}
	480 Move W1, [X19+44]
	481 Move W3, [X19+48]
	482 Move X0, X20
	483 Call FusionBootstrap.StartClients, X0, X1, X2, X3
	484 Move W8, 3
	485 Move [X19+24], X0
	486 Move [X19+16], W8
	487 Move W0, 1
	488 Move X0, [X24]
	489 Move X21, [X20+32]
	490 Move W8, [X0+224]
	491 Compare W8, 0
	492 JumpIfNotEqual {494}
	493 Call 0x1C17DFC
	494 Move X1, [X25]
	495 Move X0, X21
	496 Call 0x222E35C, X0
	497 Move [X20+72], X0
	498 Move X8, 0x2171000
	499 Move X8, [X8+640]
	500 Move TEMP, 0
	501 Not TEMP
	502 Move X9, TEMP
	503 Move X21, X0
	504 Add X0, X31, 144
	505 Move X8, [X8]
	506 Move X1, X31
	507 Move [X31+144], X8
	508 Move [X31+152], X9
	509 Move W8, [X19+40]
	510 Move [X31+160], W8
	511 Call Enum.ToString, X0
	512 Compare X21, 0
	513 JumpIfEqual {598}
	514 Move X1, X0
	515 Move X0, X21
	516 Move X2, X31
	517 Call Object.set_name, X0, X1
	518 Move X8, 0x2171000
	519 Move X8, [X8+120]
	520 Move X22, [X20+72]
	521 Move W21, [X19+40]
	522 NotImplemented "Instruction LDRH not yet implemented."
	523 Move X0, [X8]
	524 Move W8, [X0+224]
	525 Compare W8, 0
	526 JumpIfNotEqual {528}
	527 Call 0x1C17DFC
	528 Add X8, X31, 24
	529 Move W0, W23
	530 Move X1, X31
	531 Call NetAddress.Any, X0
	532 Move X27, 0x218E000
	533 NotImplemented "Instruction LDUR not yet implemented."
	534 Move X8, [X31+40]
	535 Move X27, [X27+2000]
	536 Move [X31+3], V0
	537 Move [X31+64], X8
	538 Move X0, [X27]
	539 Move W23, [X19+48]
	540 Move W8, [X0+224]
	541 Compare W8, 0
	542 JumpIfNotEqual {545}
	543 Call 0x1C17DFC
	544 Move X0, [X27]
	545 Move X8, [X0+184]
	546 Move X24, [X8+8]
	547 Compare X24, 0
	548 JumpIfEqual {551}
	549 Move V0, [X31+3]
	550 Move X8, [X31+64]
	551 Move V0, [X31+3]
	552 Move X8, [X31+64]
	553 Move [X31+5], V0
	554 Move [X31+96], X8
	555 Move W8, [X0+224]
	556 Compare W8, 0
	557 JumpIfNotEqual {560}
	558 Call 0x1C17DFC
	559 Move X0, [X27]
	560 Move X9, 0x216A000
	561 Move X8, [X0+184]
	562 Move X9, [X9+2608]
	563 Move X25, [X8]
	564 Move X0, [X9]
	565 Call 0x1C17F10
	566 Move X8, 0x218E000
	567 Move X8, [X8+2040]
	568 Move X1, X25
	569 Move X3, X31
	570 Move X24, X0
	571 Move X2, [X8]
	572 Call Action`1<Object>..ctor, X0, X1, X2
	573 Move X8, [X27]
	574 Move X8, [X8+184]
	575 Move [X8+8], X24
	576 Move V0, [X31+5]
	577 Move X8, [X31+96]
	578 Move [X31+7], V0
	579 Move [X31+128], X8
	580 Move X8, [X20]
	581 Move V0, [X31+7]
	582 Move X9, [X31+128]
	583 Add X3, X31, 144
	584 Move X10, [X8+552]
	585 Move [X31+9], V0
	586 Move [X31+160], X9
	587 Move X7, [X8+560]
	588 Move X0, X20
	589 Move X1, X22
	590 Move W2, W21
	591 Move X4, X23
	592 Move X5, X24
	593 Move X6, X31
	594 NotImplemented "Instruction BLR not yet implemented."
	595 Move [X19+56], X0
	596 Compare X0, 0
	597 JumpIfNotEqual {242}
	598 Call 0x1C17F20
	599 Call 0x3EB2B20

Method: System.Object System.Collections.Generic.IEnumerator<System.Object>.get_Current()

Disassembly:
	0x01F8D61C MOV X21, X0
	0x01F8D620 MOV V0.16B, V9.16B

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void System.Collections.IEnumerator.Reset()

Disassembly:
	0x01F8D624 MOV X0, X31
	0x01F8D628 BL 0x3C6C354
	0x01F8D62C CBZ X21, 0x1F8DC60
	0x01F8D630 LDR W8, [X21 + 0x18]
	0x01F8D634 CBZ W8, 0x1F8DC64
	0x01F8D638 STR X0, [X21 + 0x20]
	0x01F8D63C ADRP X8, 0x218D000
	0x01F8D640 LDR X8, [X8 + 0x8D8]
	0x01F8D644 MOV X1, X21
	0x01F8D648 MOV X2, X31
	0x01F8D64C LDR X0, [X8]
	0x01F8D650 BL 0x3C6D51C
	0x01F8D654 TBZ X0, 0x0, 0x1F8DC0C
	0x01F8D658 LDR X0, [X19 + 0x30]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0x2167000
	004 Move X0, [X0+2880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X1, X31
	008 Move X19, X0
	009 Call NotSupportedException..ctor, X0
	010 Move X0, 0x218E000
	011 Move X0, [X0+2112]
	012 Call 0x1C17D08
	013 Move X1, X0
	014 Move X0, X19
	015 Call 0x1C17DEC

Method: System.Object System.Collections.IEnumerator.get_Current()

Disassembly:
	0x01F8D65C CBZ X0, 0x1F8DC60
	0x01F8D660 BL 0x1F8AC20

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

