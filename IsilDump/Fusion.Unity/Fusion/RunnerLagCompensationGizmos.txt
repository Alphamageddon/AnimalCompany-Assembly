Type: Fusion.RunnerLagCompensationGizmos

Method: System.Void Awake()

Disassembly:
	0x01F942F4 STRB W8, [X20 + 0x747]
	0x01F942F8 LDR X0, [X21]
	0x01F942FC LDR X20, [X19 + 0x28]
	0x01F94300 LDR W8, [X0 + 0xE0]
	0x01F94304 CBNZ W8, 0x1F9430C
	0x01F94308 BL 0x1C16DFC
	0x01F9430C MOV X0, X20
	0x01F94310 MOV X1, X31
	0x01F94314 MOV X2, X31
	0x01F94318 BL 0x3C354F8
	0x01F9431C TBZ X0, 0x0, 0x1F943D0
	0x01F94320 LDR X0, [X19 + 0x28]
	0x01F94324 CBZ X0, 0x1F943DC
	0x01F94328 MOV X1, X31
	0x01F9432C BL 0x3C32E90
	0x01F94330 MOV X20, X0
	0x01F94334 MOV X0, X19
	0x01F94338 MOV X1, X31
	0x01F9433C BL 0x3C32E90
	0x01F94340 LDR X8, [X21]
	0x01F94344 MOV X21, X0
	0x01F94348 LDR W9, [X8 + 0xE0]
	0x01F9434C CBNZ W9, 0x1F94358
	0x01F94350 MOV X0, X8
	0x01F94354 BL 0x1C16DFC
	0x01F94358 MOV X0, X20
	0x01F9435C MOV X1, X21
	0x01F94360 MOV X2, X31
	0x01F94364 BL 0x3C354F8
	0x01F94368 TBZ X0, 0x0, 0x1F94390
	0x01F9436C ADRP X8, 0x215F000
	0x01F94370 LDR X8, [X8 + 0xA28]
	0x01F94374 LDR X0, [X8]
	0x01F94378 LDR W8, [X0 + 0xE0]
	0x01F9437C CBNZ W8, 0x1F94384
	0x01F94380 BL 0x1C16DFC
	0x01F94384 ADRP X8, 0x2186000
	0x01F94388 LDR X8, [X8 + 0xC38]
	0x01F9438C B 0x1F943C0
	0x01F94390 LDR X1, [X19 + 0x28]
	0x01F94394 MOV X0, X19
	0x01F94398 BL 0x1F94150
	0x01F9439C TBNZ X0, 0x0, 0x1F943D0
	0x01F943A0 ADRP X8, 0x215F000
	0x01F943A4 LDR X8, [X8 + 0xA28]
	0x01F943A8 LDR X0, [X8]
	0x01F943AC LDR W8, [X0 + 0xE0]
	0x01F943B0 CBNZ W8, 0x1F943B8
	0x01F943B4 BL 0x1C16DFC
	0x01F943B8 ADRP X8, 0x2186000
	0x01F943BC LDR X8, [X8 + 0xC30]
	0x01F943C0 LDR X0, [X8]
	0x01F943C4 MOV X1, X31
	0x01F943C8 BL 0x3C06A04
	0x01F943CC STR X31, [X19 + 0x28]
	0x01F943D0 LDP X20, X19, [X31 + 0x10]
	0x01F943D4 LDP X30, X21, [X31], #0x20
	0x01F943D8 RET
	0x01F943DC BL 0x1C16F20
	0x01F943E0 LDRB W8, [X0 + 0x40]
	0x01F943E4 CBZ W8, 0x1F943EC
	0x01F943E8 RET
	0x01F943EC MOVZ W1, 0x2
	0x01F943F0 MOV X2, X31
	0x01F943F4 B 0x3C396EC
	0x01F943F8 STP X30, X21, [X31 - 0x20]!
	0x01F943FC STP X20, X19, [X31 + 0x10]
	0x01F94400 ADRP X20, 0x2445000
	0x01F94404 ADRP X21, 0x2186000
	0x01F94408 LDRB W8, [X20 + 0x748]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x2446000
	007 Move X22, 0x2187000
	008 Move X21, 0x2160000
	009 Move W8, [X20+1856]
	010 Move X22, [X22+3048]
	011 Move X21, [X21+1432]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {31}
	017 Move X0, 0x2187000
	018 Move X0, [X0+3048]
	019 Call 0x1C17CF4
	020 Move X0, 0x2160000
	021 Move X0, [X0+2600]
	022 Call 0x1C17CF4
	023 Move X0, 0x2160000
	024 Move X0, [X0+1432]
	025 Call 0x1C17CF4
	026 Move X0, 0x2187000
	027 Move X0, [X0+3072]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X20+1856], W8
	031 Move X1, [X22]
	032 Move X0, X19
	033 Call 0x21A4F50, X0
	034 Move [X19+72], X0
	035 Move X20, X0
	036 Move X0, [X21]
	037 Move W8, [X0+224]
	038 Compare W8, 0
	039 JumpIfNotEqual {41}
	040 Call 0x1C17DFC
	041 Move X0, X20
	042 Move X1, X31
	043 Move X2, X31
	044 Call Object.op_Equality, X0, X1
	045 Move TEMP, X0
	046 And TEMP, TEMP, 1
	047 Compare TEMP, 1
	048 JumpIfNotEqual {81}
	049 Move X8, 0x2187000
	050 Move X8, [X8+3072]
	051 Move X20, 0x2160000
	052 Move X1, X19
	053 Move X2, X31
	054 Move X0, [X8]
	055 Move X20, [X20+2600]
	056 Call String.Format, X0, X1
	057 Move X8, [X20]
	058 Move X20, X0
	059 Move W9, [X8+224]
	060 Compare W9, 0
	061 JumpIfNotEqual {64}
	062 Move X0, X8
	063 Call 0x1C17DFC
	064 Move X0, X20
	065 Move X1, X31
	066 Call Debug.LogWarning, X0
	067 Move X0, [X21]
	068 Move W8, [X0+224]
	069 Compare W8, 0
	070 JumpIfNotEqual {72}
	071 Call 0x1C17DFC
	072 Move X0, X19
	073 Move X20, [X31+32]
	074 Move X19, [X31+40]
	075 Move X22, [X31+16]
	076 Move X21, [X31+24]
	077 Move X1, X31
	078 Move X30, [X31+48]
	079 Call Object.Destroy, X0
	080 Return 
	081 Move X20, [X31+32]
	082 Move X19, [X31+40]
	083 Move X22, [X31+16]
	084 Move X21, [X31+24]
	085 Move X30, [X31+48]
	086 Return 

Method: System.Void OnDrawGizmos()

Disassembly:
	0x01F9440C LDR X21, [X21 + 0x548]
	0x01F94410 MOV X19, X0
	0x01F94414 TBNZ X8, 0x0, 0x1F9442C
	0x01F94418 ADRP X0, 0x2186000
	0x01F9441C LDR X0, [X0 + 0x548]
	0x01F94420 BL 0x1C16CF4
	0x01F94424 MOVZ W8, 0x1
	0x01F94428 STRB W8, [X20 + 0x748]
	0x01F9442C LDR X0, [X21]
	0x01F94430 LDR W8, [X0 + 0xE0]
	0x01F94434 CBNZ W8, 0x1F9443C
	0x01F94438 BL 0x1C16DFC
	0x01F9443C MOV X0, X19
	0x01F94440 LDP X20, X19, [X31 + 0x10]
	0x01F94444 LDP X30, X21, [X31], #0x20
	0x01F94448 B 0x1F89B3C
	0x01F9444C STR X30, [X31 - 0x20]!
	0x01F94450 STP X20, X19, [X31 + 0x10]
	0x01F94454 ADRP X19, 0x2445000
	0x01F94458 ADRP X20, 0x2186000
	0x01F9445C LDRB W8, [X19 + 0x74C]
	0x01F94460 LDR X20, [X20 + 0x548]
	0x01F94464 TBNZ X8, 0x0, 0x1F9447C
	0x01F94468 ADRP X0, 0x2186000
	0x01F9446C LDR X0, [X0 + 0x548]
	0x01F94470 BL 0x1C16CF4
	0x01F94474 MOVZ W8, 0x1
	0x01F94478 STRB W8, [X19 + 0x74C]
	0x01F9447C LDR X0, [X20]
	0x01F94480 LDR W8, [X0 + 0xE0]
	0x01F94484 CBNZ W8, 0x1F9448C
	0x01F94488 BL 0x1C16DFC
	0x01F9448C LDP X20, X19, [X31 + 0x10]
	0x01F94490 LDR X30, [X31], #0x20
	0x01F94494 B 0x1F87EBC
	0x01F94498 MOV X1, X31
	0x01F9449C B 0x3C36C30
	0x01F944A0 MOVZ W1, 0x2
	0x01F944A4 MOV X2, X31
	0x01F944A8 B 0x3C396EC
	0x01F944AC MOV X1, X31
	0x01F944B0 B 0x3C36C30
	0x01F944B4 STR X30, [X31 - 0x50]!
	0x01F944B8 STP X26, X25, [X31 + 0x10]
	0x01F944BC STP X24, X23, [X31 + 0x20]
	0x01F944C0 STP X22, X21, [X31 + 0x30]
	0x01F944C4 STP X20, X19, [X31 + 0x40]
	0x01F944C8 ADRP X26, 0x2445000
	0x01F944CC ADRP X25, 0x2186000
	0x01F944D0 LDRB W8, [X26 + 0x74D]
	0x01F944D4 LDR X25, [X25 + 0xC40]
	0x01F944D8 MOV X21, X5
	0x01F944DC MOV X22, X4
	0x01F944E0 MOV X23, X3
	0x01F944E4 MOV X24, X2
	0x01F944E8 MOV X19, X1
	0x01F944EC MOV W20, W0
	0x01F944F0 TBNZ X8, 0x0, 0x1F94520
	0x01F944F4 ADRP X0, 0x2186000
	0x01F944F8 LDR X0, [X0 + 0xC48]
	0x01F944FC BL 0x1C16CF4
	0x01F94500 ADRP X0, 0x2186000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x2446000
	006 Move X20, 0x2160000
	007 Move W8, [X21+1857]
	008 Move X20, [X20+1432]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x2187000
	015 Move X0, [X0+1352]
	016 Call 0x1C17CF4
	017 Move X0, 0x2160000
	018 Move X0, [X0+1432]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+1857], W8
	022 Move X0, [X20]
	023 Move X20, [X19+72]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Move X0, X20
	029 Move X1, X31
	030 Move X2, X31
	031 Call Object.op_Equality, X0, X1
	032 Move TEMP, X0
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfEqual {84}
	036 Move X0, [X19+72]
	037 Compare X0, 0
	038 JumpIfEqual {89}
	039 Move X1, X31
	040 Call NetworkRunner.get_IsRunning, X0
	041 Move TEMP, X0
	042 And TEMP, TEMP, 1
	043 Compare TEMP, 1
	044 JumpIfNotEqual {84}
	045 Move X8, 0x2187000
	046 Move X8, [X8+1352]
	047 Move X20, [X19+72]
	048 Move X0, [X8]
	049 Move W8, [X0+224]
	050 Compare W8, 0
	051 JumpIfNotEqual {53}
	052 Call 0x1C17DFC
	053 Move X0, X20
	054 Call NetworkRunnerVisibilityExtensions.GetVisible, X0
	055 Move TEMP, X0
	056 And TEMP, TEMP, 1
	057 Compare TEMP, 1
	058 JumpIfNotEqual {84}
	059 Move X0, [X19+72]
	060 Compare X0, 0
	061 JumpIfEqual {89}
	062 Move X1, X31
	063 Call NetworkRunner.get_LagCompensation, X0
	064 Compare X0, 0
	065 JumpIfEqual {84}
	066 Move X8, [X0+88]
	067 Compare X8, 0
	068 JumpIfEqual {84}
	069 Move W8, [X19+33]
	070 Compare W8, 0
	071 JumpIfEqual {74}
	072 Move X0, X19
	073 Call RunnerLagCompensationGizmos.RenderBHVBroadphase, X0
	074 Move W8, [X19+32]
	075 Compare W8, 0
	076 JumpIfEqual {84}
	077 Move X0, X19
	078 Move X20, [X31+16]
	079 Move X19, [X31+24]
	080 Move X30, [X31+32]
	081 Move X21, [X31+40]
	082 Call RunnerLagCompensationGizmos.RenderHitboxHistory, X0
	083 Return 
	084 Move X20, [X31+16]
	085 Move X19, [X31+24]
	086 Move X30, [X31+32]
	087 Move X21, [X31+40]
	088 Return 
	089 Call 0x1C17F20

Method: System.Void RenderHitboxHistory()

Disassembly:
	0x01F94868 B.NE 0x1F94A3C
	0x01F9486C CBZ X1, 0x1F94A50
	0x01F94870 LDR V0, [X1 + 0x48]
	0x01F94874 B 0x1F94A38
	0x01F94878 CMP W0, 0x100
	0x01F9487C B.EQ 0x1F9499C
	0x01F94880 CMP W0, 0x200
	0x01F94884 B.EQ 0x1F949A8
	0x01F94888 CMP W0, 0x400
	0x01F9488C FMOV S0, W31
	0x01F94890 B.NE 0x1F94A3C
	0x01F94894 CBZ X1, 0x1F94A50
	0x01F94898 LDR V0, [X1 + 0x60]
	0x01F9489C B 0x1F94A3C
	0x01F948A0 CMP W0, 0x8000
	0x01F948A4 B.EQ 0x1F949B4
	0x01F948A8 CMP W0, 0x10000
	0x01F948AC B.EQ 0x1F949C0
	0x01F948B0 CMP W0, 0x20000
	0x01F948B4 FMOV S0, W31
	0x01F948B8 B.NE 0x1F94A3C
	0x01F948BC CBZ X1, 0x1F94A50
	0x01F948C0 LDR W8, [X1 + 0x1C]
	0x01F948C4 LDR V0, [X1 + 0x24]
	0x01F948C8 B 0x1F949CC
	0x01F948CC SUB W8, W0, 0x1
	0x01F948D0 CMP W8, 0x7
	0x01F948D4 FMOV S0, W31
	0x01F948D8 B.HI 0x1F949E0
	0x01F948DC ADRP X9, 0xFFFFFFFFFEB99000
	0x01F948E0 ADD X9, X9, 0xC5A
	0x01F948E4 ADR X10, 0x10
	0x01F948E8 LDRB W11, [X9, X8, LSL]
	0x01F948EC ADD X10, X10, X11, 0x2, LSL
	0x01F948F0 BR X10
	0x01F948F4 CBZ X1, 0x1F94A50
	0x01F948F8 LDR V0, [X1 + 0x18]
	0x01F948FC B 0x1F94A38
	0x01F94900 MOVZ W8, 0x1000000
	0x01F94904 CMP W0, W8
	0x01F94908 B.EQ 0x1F94A30
	0x01F9490C MOVZ W8, 0x2000000
	0x01F94910 CMP W0, W8
	0x01F94914 FMOV S0, W31
	0x01F94918 B.NE 0x1F94A3C
	0x01F9491C CBZ X1, 0x1F94A50
	0x01F94920 MOV X0, X1
	0x01F94924 MOV X1, X31
	0x01F94928 BL 0x1EF0AB0
	0x01F9492C SCVTF S0, W0
	0x01F94930 B 0x1F94A3C
	0x01F94934 CMP W0, 0x800
	0x01F94938 B.EQ 0x1F94A44
	0x01F9493C CMP W0, 0x1000
	0x01F94940 FMOV S0, W31
	0x01F94944 B.NE 0x1F94A3C
	0x01F94948 CBZ X1, 0x1F94A50
	0x01F9494C LDR V0, [X1 + 0x68]
	0x01F94950 B 0x1F94A3C
	0x01F94954 CBZ X1, 0x1F94A50
	0x01F94958 LDR V0, [X1 + 0x34]
	0x01F9495C B 0x1F94A38
	0x01F94960 CBZ X1, 0x1F94A50
	0x01F94964 LDR V0, [X1 + 0x38]
	0x01F94968 B 0x1F94A38
	0x01F9496C CBZ X1, 0x1F94A50
	0x01F94970 LDR V0, [X1 + 0x10]
	0x01F94974 B 0x1F94A38
	0x01F94978 CBZ X1, 0x1F94A50
	0x01F9497C LDR V0, [X1 + 0x14]
	0x01F94980 B 0x1F94A38
	0x01F94984 CBZ X1, 0x1F94A50
	0x01F94988 LDR V0, [X1 + 0x40]
	0x01F9498C B 0x1F94A38
	0x01F94990 CBZ X1, 0x1F94A50
	0x01F94994 LDR V0, [X1 + 0x44]
	0x01F94998 B 0x1F94A38
	0x01F9499C CBZ X1, 0x1F94A50
	0x01F949A0 LDR V0, [X1 + 0x58]
	0x01F949A4 B 0x1F94A38
	0x01F949A8 CBZ X1, 0x1F94A50
	0x01F949AC LDR V0, [X1 + 0x5C]
	0x01F949B0 B 0x1F94A3C
	0x01F949B4 CBZ X1, 0x1F94A50
	0x01F949B8 LDR V0, [X1 + 0x30]
	0x01F949BC B 0x1F94A3C
	0x01F949C0 CBZ X1, 0x1F94A50
	0x01F949C4 LDR W8, [X1 + 0x18]
	0x01F949C8 LDR V0, [X1 + 0x20]
	0x01F949CC CMP W8, 0x1
	0x01F949D0 CSINC W8, W8, W31, GT
	0x01F949D4 SCVTF S1, W8
	0x01F949D8 FDIV S0, S0, S1
	0x01F949DC B 0x1F94A3C
	0x01F949E0 CMP W0, 0x10
	0x01F949E4 B.NE 0x1F94A3C
	0x01F949E8 CBZ X1, 0x1F94A50
	0x01F949EC LDR V0, [X1 + 0x24]
	0x01F949F0 B 0x1F94A3C
	0x01F949F4 CBZ X1, 0x1F94A50
	0x01F949F8 LDR V0, [X1 + 0x1C]
	0x01F949FC B 0x1F94A38
	0x01F94A00 CBZ X1, 0x1F94A50
	0x01F94A04 LDR V0, [X1 + 0x28]
	0x01F94A08 B 0x1F94A3C
	0x01F94A0C CBZ X1, 0x1F94A50
	0x01F94A10 LDR V0, [X1 + 0x20]
	0x01F94A14 B 0x1F94A3C
	0x01F94A18 CBZ X1, 0x1F94A50
	0x01F94A1C LDR V0, [X1 + 0x50]
	0x01F94A20 B 0x1F94A38
	0x01F94A24 CBZ X1, 0x1F94A50
	0x01F94A28 LDR V0, [X1 + 0x6C]
	0x01F94A2C B 0x1F94A3C
	0x01F94A30 CBZ X1, 0x1F94A50
	0x01F94A34 LDR V0, [X1 + 0x4C]
	0x01F94A38 SCVTF S0, S0
	0x01F94A3C LDR X30, [X31], #0x10
	0x01F94A40 RET
	0x01F94A44 CBZ X1, 0x1F94A50
	0x01F94A48 LDR V0, [X1 + 0x64]
	0x01F94A4C B 0x1F94A3C
	0x01F94A50 BL 0x1C16F20
	0x01F94A54 LDR X8, [X0 + 0xE0]
	0x01F94A58 CMP X8, 0x0
	0x01F94A5C CSET W0, NE
	0x01F94A60 RET
	0x01F94A64 SUB X31, X31, 0x80
	0x01F94A68 STR D8, [X31 + 0x40]
	0x01F94A6C STR X30, [X31 + 0x48]
	0x01F94A70 STP X24, X23, [X31 + 0x50]
	0x01F94A74 STP X22, X21, [X31 + 0x60]
	0x01F94A78 STP X20, X19, [X31 + 0x70]
	0x01F94A7C ADRP X21, 0x2445000
	0x01F94A80 LDRB W8, [X21 + 0x74E]
	0x01F94A84 MOV W20, W1
	0x01F94A88 MOV X19, X0
	0x01F94A8C TBNZ X8, 0x0, 0x1F94AF8
	0x01F94A90 ADRP X0, 0x2186000
	0x01F94A94 LDR X0, [X0 + 0xC58]
	0x01F94A98 BL 0x1C16CF4
	0x01F94A9C ADRP X0, 0x216C000
	0x01F94AA0 LDR X0, [X0 + 0xE28]
	0x01F94AA4 BL 0x1C16CF4
	0x01F94AA8 ADRP X0, 0x2163000
	0x01F94AAC LDR X0, [X0 + 0xCA0]
	0x01F94AB0 BL 0x1C16CF4
	0x01F94AB4 ADRP X0, 0x215F000
	0x01F94AB8 LDR X0, [X0 + 0x638]
	0x01F94ABC BL 0x1C16CF4
	0x01F94AC0 ADRP X0, 0x2186000
	0x01F94AC4 LDR X0, [X0 + 0xC60]
	0x01F94AC8 BL 0x1C16CF4
	0x01F94ACC ADRP X0, 0x2186000
	0x01F94AD0 LDR X0, [X0 + 0xC48]
	0x01F94AD4 BL 0x1C16CF4
	0x01F94AD8 ADRP X0, 0x2186000
	0x01F94ADC LDR X0, [X0 + 0xC50]
	0x01F94AE0 BL 0x1C16CF4
	0x01F94AE4 ADRP X0, 0x2186000
	0x01F94AE8 LDR X0, [X0 + 0xC40]
	0x01F94AEC BL 0x1C16CF4
	0x01F94AF0 MOVZ W8, 0x1
	0x01F94AF4 STRB W8, [X21 + 0x74E]
	0x01F94AF8 LDR X0, [X19 + 0x48]
	0x01F94AFC CBZ X0, 0x1F94D20
	0x01F94B00 LDR X8, [X0]
	0x01F94B04 ADRP X21, 0x2163000
	0x01F94B08 LDR X9, [X8 + 0x338]
	0x01F94B0C LDR X1, [X8 + 0x340]
	0x01F94B10 LDR X21, [X21 + 0xCA0]
	0x01F94B14 BLR X9
	0x01F94B18 LDR X8, [X21]
	0x01F94B1C MOV X22, X0
	0x01F94B20 MOV X0, X8
	0x01F94B24 BL 0x1C16F10
	0x01F94B28 MOV X1, X22
	0x01F94B2C MOV X2, X31
	0x01F94B30 MOV X21, X0
	0x01F94B34 BL 0x3C145DC
	0x01F94B38 LDR X0, [X19 + 0x48]
	0x01F94B3C STR X21, [X19 + 0x100]
	0x01F94B40 CBZ X0, 0x1F94D20
	0x01F94B44 LDR X8, [X0]
	0x01F94B48 ADRP X22, 0x215F000
	0x01F94B4C ADRP X23, 0x2186000
	0x01F94B50 ADRP X24, 0x2186000
	0x01F94B54 LDR X9, [X8 + 0x348]
	0x01F94B58 LDR X2, [X8 + 0x350]
	0x01F94B5C LDR X22, [X22 + 0x638]
	0x01F94B60 LDR X23, [X23 + 0xC58]
	0x01F94B64 LDR X24, [X24 + 0xC40]
	0x01F94B68 MOV X1, X21
	0x01F94B6C BLR X9
	0x01F94B70 LDR W1, [X19 + 0x8C]
	0x01F94B74 LDRB W2, [X19 + 0x9C]
	0x01F94B78 MOVI V0.2D, 0x0
	0x01F94B7C ADD X0, X31, 0x0
	0x01F94B80 MOV W3, W20
	0x01F94B84 STR X31, [X31 + 0x30]
	0x01F94B88 STP V0, V0, [X31 + 0x10]
	0x01F94B8C STR V0, [X31]
	0x01F94B90 BL 0x1F94D24
	0x01F94B94 LDR X8, [X31 + 0x30]
	0x01F94B98 LDP V1, V0, [X31 + 0x10]
	0x01F94B9C LDR V2, [X31]
	0x01F94BA0 LDR W1, [X19 + 0x8C]
	0x01F94BA4 STR X8, [X19 + 0xD8]
	0x01F94BA8 STUR V0, [X19 + 0xC8]
	0x01F94BAC STUR V1, [X19 + 0xB8]
	0x01F94BB0 STUR V2, [X19 + 0xA8]
	0x01F94BB4 LDR X0, [X22]
	0x01F94BB8 BL 0x1C16D6C
	0x01F94BBC STR X0, [X19 + 0xE0]
	0x01F94BC0 LDR X1, [X23]
	0x01F94BC4 MOV X0, X19
	0x01F94BC8 BL 0x21A3F50
	0x01F94BCC MOVZ W8, 0x3F800000
	0x01F94BD0 STR X0, [X19 + 0xF0]
	0x01F94BD4 STR X31, [X19 + 0x110]
	0x01F94BD8 STR W8, [X19 + 0x118]
	0x01F94BDC LDR X20, [X19 + 0x108]
	0x01F94BE0 LDR X1, [X24]
	0x01F94BE4 MOV X2, X31
	0x01F94BE8 MOV X0, X20
	0x01F94BEC BL 0x321BA08
	0x01F94BF0 TBZ X0, 0x0, 0x1F94C1C
	0x01F94BF4 ADRP X20, 0x216C000
	0x01F94BF8 LDR X20, [X20 + 0xE28]
	0x01F94BFC FMOV S8, 1
	0x01F94C00 LDR X0, [X20]
	0x01F94C04 LDR W8, [X0 + 0xE0]
	0x01F94C08 CBNZ W8, 0x1F94C14
	0x01F94C0C BL 0x1C16DFC
	0x01F94C10 LDR X0, [X20]
	0x01F94C14 MOVZ W8, 0x10
	0x01F94C18 B 0x1F94CE8
	0x01F94C1C ADRP X8, 0x2186000
	0x01F94C20 LDR X8, [X8 + 0xC48]
	0x01F94C24 MOV X0, X20
	0x01F94C28 MOV X2, X31
	0x01F94C2C LDR X1, [X8]
	0x01F94C30 BL 0x321BA08
	0x01F94C34 TBZ X0, 0x0, 0x1F94C60
	0x01F94C38 ADRP X20, 0x216C000
	0x01F94C3C LDR X20, [X20 + 0xE28]
	0x01F94C40 FMOV S8, 1
	0x01F94C44 LDR X0, [X20]
	0x01F94C48 LDR W8, [X0 + 0xE0]
	0x01F94C4C CBNZ W8, 0x1F94C58
	0x01F94C50 BL 0x1C16DFC
	0x01F94C54 LDR X0, [X20]
	0x01F94C58 MOVZ W8, 0x18
	0x01F94C5C B 0x1F94CE8
	0x01F94C60 ADRP X8, 0x2186000
	0x01F94C64 LDR X8, [X8 + 0xC50]
	0x01F94C68 MOV X0, X20
	0x01F94C6C MOV X2, X31
	0x01F94C70 LDR X1, [X8]
	0x01F94C74 BL 0x321BA08
	0x01F94C78 TBZ X0, 0x0, 0x1F94CA4
	0x01F94C7C ADRP X20, 0x216C000
	0x01F94C80 LDR X20, [X20 + 0xE28]
	0x01F94C84 FMOV S8, 1
	0x01F94C88 LDR X0, [X20]
	0x01F94C8C LDR W8, [X0 + 0xE0]
	0x01F94C90 CBNZ W8, 0x1F94C9C
	0x01F94C94 BL 0x1C16DFC
	0x01F94C98 LDR X0, [X20]
	0x01F94C9C MOVZ W8, 0x20
	0x01F94CA0 B 0x1F94CE8
	0x01F94CA4 ADRP X8, 0x2186000
	0x01F94CA8 LDR X8, [X8 + 0xC60]
	0x01F94CAC MOV X0, X20
	0x01F94CB0 MOV X2, X31
	0x01F94CB4 LDR X1, [X8]
	0x01F94CB8 BL 0x321BA08
	0x01F94CBC TBZ X0, 0x0, 0x1F94CF8
	0x01F94CC0 ADRP X20, 0x216C000
	0x01F94CC4 LDR X20, [X20 + 0xE28]
	0x01F94CC8 LDR X0, [X20]
	0x01F94CCC LDR W8, [X0 + 0xE0]
	0x01F94CD0 CBNZ W8, 0x1F94CDC
	0x01F94CD4 BL 0x1C16DFC
	0x01F94CD8 LDR X0, [X20]
	0x01F94CDC MOVZ W8, 0x42C80000
	0x01F94CE0 FMOV S8, W8
	0x01F94CE4 MOVZ W8, 0x28
	0x01F94CE8 LDR X9, [X0 + 0xB8]
	0x01F94CEC LDR X8, [X9, X8, LSL]
	0x01F94CF0 STR S8, [X19 + 0x118]
	0x01F94CF4 STR X8, [X19 + 0x110]
	0x01F94CF8 LDR X8, [X19]
	0x01F94CFC MOV X0, X19
	0x01F94D00 LDP X20, X19, [X31 + 0x70]
	0x01F94D04 LDP X22, X21, [X31 + 0x60]
	0x01F94D08 LDP X2, X1, [X8 + 0x1C8]
	0x01F94D0C LDP X24, X23, [X31 + 0x50]
	0x01F94D10 LDR X30, [X31 + 0x48]
	0x01F94D14 LDR V8, [X31 + 0x40]
	0x01F94D18 ADD X31, X31, 0x80
	0x01F94D1C BR X2
	0x01F94D20 BL 0x1C16F20
	0x01F94D24 STP X30, X25, [X31 - 0x40]!
	0x01F94D28 STP X24, X23, [X31 + 0x10]
	0x01F94D2C STP X22, X21, [X31 + 0x20]
	0x01F94D30 STP X20, X19, [X31 + 0x30]
	0x01F94D34 ADRP X25, 0x2445000
	0x01F94D38 ADRP X23, 0x215F000
	0x01F94D3C ADRP X24, 0x2161000
	0x01F94D40 LDRB W8, [X25 + 0x755]
	0x01F94D44 LDR X23, [X23 + 0x638]
	0x01F94D48 LDR X24, [X24 + 0x570]
	0x01F94D4C MOV W20, W3
	0x01F94D50 MOV W22, W2
	0x01F94D54 MOV W21, W1
	0x01F94D58 MOV X19, X0
	0x01F94D5C TBNZ X8, 0x0, 0x1F94D8C
	0x01F94D60 ADRP X0, 0x2160000
	0x01F94D64 LDR X0, [X0 + 0x9F0]
	0x01F94D68 BL 0x1C16CF4
	0x01F94D6C ADRP X0, 0x215F000
	0x01F94D70 LDR X0, [X0 + 0x638]
	0x01F94D74 BL 0x1C16CF4
	0x01F94D78 ADRP X0, 0x2161000
	0x01F94D7C LDR X0, [X0 + 0x570]
	0x01F94D80 BL 0x1C16CF4
	0x01F94D84 MOVZ W8, 0x1
	0x01F94D88 STRB W8, [X25 + 0x755]
	0x01F94D8C LDR X0, [X23]
	0x01F94D90 ADRP X23, 0x2160000
	0x01F94D94 LDR X23, [X23 + 0x9F0]
	0x01F94D98 MOV W1, W21
	0x01F94D9C AND W22, W22, 0x1
	0x01F94DA0 BL 0x1C16D6C
	0x01F94DA4 STP X0, X31, [X19]
	0x01F94DA8 STR W31, [X19 + 0x10]
	0x01F94DAC STRB W22, [X19 + 0x14]
	0x01F94DB0 LDR X0, [X24]
	0x01F94DB4 LDR W8, [X0 + 0xE0]
	0x01F94DB8 CBNZ W8, 0x1F94DC0
	0x01F94DBC BL 0x1C16DFC
	0x01F94DC0 SCVTF D0, W20
	0x01F94DC4 MOV X0, X31
	0x01F94DC8 BL 0x33945E4
	0x01F94DCC ADRP X8, 0xFFFFFFFFFEB5A000
	0x01F94DD0 LDR V0, [X8 + 0x470]
	0x01F94DD4 STR X0, [X19 + 0x18]
	0x01F94DD8 STR W31, [X19 + 0x28]
	0x01F94DDC STR D0, [X19 + 0x20]
	0x01F94DE0 LDR X0, [X23]
	0x01F94DE4 LDR W8, [X0 + 0xE0]
	0x01F94DE8 CBNZ W8, 0x1F94DF4
	0x01F94DEC BL 0x1C16DFC
	0x01F94DF0 LDR X0, [X23]
	0x01F94DF4 LDR X8, [X0 + 0xB8]
	0x01F94DF8 LDP X22, X21, [X31 + 0x20]
	0x01F94DFC LDP X24, X23, [X31 + 0x10]
	0x01F94E00 LDR X8, [X8 + 0x10]
	0x01F94E04 STR X8, [X19 + 0x30]
	0x01F94E08 LDP X20, X19, [X31 + 0x30]
	0x01F94E0C LDP X30, X25, [X31], #0x40
	0x01F94E10 RET
	0x01F94E14 STR X30, [X31 - 0x30]!
	0x01F94E18 STP X22, X21, [X31 + 0x10]
	0x01F94E1C STP X20, X19, [X31 + 0x20]
	0x01F94E20 ADRP X21, 0x2445000
	0x01F94E24 ADRP X22, 0x2186000
	0x01F94E28 ADRP X20, 0x215F000
	0x01F94E2C LDRB W8, [X21 + 0x74F]
	0x01F94E30 LDR X22, [X22 + 0xC68]
	0x01F94E34 LDR X20, [X20 + 0x598]
	0x01F94E38 MOV X19, X0
	0x01F94E3C TBNZ X8, 0x0, 0x1F94E60
	0x01F94E40 ADRP X0, 0x2186000
	0x01F94E44 LDR X0, [X0 + 0xC68]
	0x01F94E48 BL 0x1C16CF4
	0x01F94E4C ADRP X0, 0x215F000
	0x01F94E50 LDR X0, [X0 + 0x598]
	0x01F94E54 BL 0x1C16CF4
	0x01F94E58 MOVZ W8, 0x1
	0x01F94E5C STRB W8, [X21 + 0x74F]
	0x01F94E60 LDR X2, [X22]
	0x01F94E64 MOVZ W1, 0x1
	0x01F94E68 MOV X0, X19
	0x01F94E6C BL 0x21A4170
	0x01F94E70 LDR X8, [X20]
	0x01F94E74 MOV X20, X0
	0x01F94E78 LDR W9, [X8 + 0xE0]
	0x01F94E7C CBNZ W9, 0x1F94E88
	0x01F94E80 MOV X0, X8
	0x01F94E84 BL 0x1C16DFC
	0x01F94E88 MOV X0, X20
	0x01F94E8C MOV X1, X31
	0x01F94E90 BL 0x3C38948
	0x01F94E94 TBZ X0, 0x0, 0x1F94EC8
	0x01F94E98 CBZ X20, 0x1F94ED8
	0x01F94E9C MOV X0, X20
	0x01F94EA0 MOV X1, X19
	0x01F94EA4 MOV X2, X31
	0x01F94EA8 BL 0x1F98D0C
	0x01F94EAC LDR X8, [X19]
	0x01F94EB0 MOV X0, X19
	0x01F94EB4 LDP X20, X19, [X31 + 0x20]
	0x01F94EB8 LDP X22, X21, [X31 + 0x10]
	0x01F94EBC LDP X2, X1, [X8 + 0x1C8]
	0x01F94EC0 LDR X30, [X31], #0x30
	0x01F94EC4 BR X2
	0x01F94EC8 LDP X20, X19, [X31 + 0x20]
	0x01F94ECC LDP X22, X21, [X31 + 0x10]
	0x01F94ED0 LDR X30, [X31], #0x30
	0x01F94ED4 RET
	0x01F94ED8 BL 0x1C16F20
	0x01F94EDC STR X30, [X31 - 0x30]!
	0x01F94EE0 STP X22, X21, [X31 + 0x10]
	0x01F94EE4 STP X20, X19, [X31 + 0x20]
	0x01F94EE8 ADRP X21, 0x2445000
	0x01F94EEC ADRP X22, 0x2186000
	0x01F94EF0 ADRP X20, 0x215F000
	0x01F94EF4 LDRB W8, [X21 + 0x750]
	0x01F94EF8 LDR X22, [X22 + 0xC68]
	0x01F94EFC LDR X20, [X20 + 0x598]
	0x01F94F00 MOV X19, X0
	0x01F94F04 TBNZ X8, 0x0, 0x1F94F28
	0x01F94F08 ADRP X0, 0x2186000
	0x01F94F0C LDR X0, [X0 + 0xC68]
	0x01F94F10 BL 0x1C16CF4
	0x01F94F14 ADRP X0, 0x215F000
	0x01F94F18 LDR X0, [X0 + 0x598]
	0x01F94F1C BL 0x1C16CF4
	0x01F94F20 MOVZ W8, 0x1
	0x01F94F24 STRB W8, [X21 + 0x750]
	0x01F94F28 LDR X2, [X22]
	0x01F94F2C MOVZ W1, 0x1
	0x01F94F30 MOV X0, X19
	0x01F94F34 BL 0x21A4170
	0x01F94F38 LDR X8, [X20]
	0x01F94F3C MOV X20, X0
	0x01F94F40 LDR W9, [X8 + 0xE0]
	0x01F94F44 CBNZ W9, 0x1F94F50
	0x01F94F48 MOV X0, X8
	0x01F94F4C BL 0x1C16DFC
	0x01F94F50 MOV X0, X20
	0x01F94F54 MOV X1, X31
	0x01F94F58 BL 0x3C38948
	0x01F94F5C TBZ X0, 0x0, 0x1F94F90
	0x01F94F60 CBZ X20, 0x1F94FA0
	0x01F94F64 MOV X0, X20
	0x01F94F68 MOV X1, X19
	0x01F94F6C MOV X2, X31
	0x01F94F70 BL 0x1F98DB0
	0x01F94F74 LDR X8, [X19]
	0x01F94F78 MOV X0, X19
	0x01F94F7C LDP X20, X19, [X31 + 0x20]
	0x01F94F80 LDP X22, X21, [X31 + 0x10]
	0x01F94F84 LDP X2, X1, [X8 + 0x1C8]
	0x01F94F88 LDR X30, [X31], #0x30
	0x01F94F8C BR X2
	0x01F94F90 LDP X20, X19, [X31 + 0x20]
	0x01F94F94 LDP X22, X21, [X31 + 0x10]
	0x01F94F98 LDR X30, [X31], #0x30
	0x01F94F9C RET
	0x01F94FA0 BL 0x1C16F20
	0x01F94FA4 STP X30, X23, [X31 - 0x30]!
	0x01F94FA8 STP X22, X21, [X31 + 0x10]
	0x01F94FAC STP X20, X19, [X31 + 0x20]
	0x01F94FB0 FCMP S0, 0x0
	0x01F94FB4 MOV X19, X0
	0x01F94FB8 B.NE 0x1F94FD4
	0x01F94FBC LDRB W8, [X19 + 0x9D]
	0x01F94FC0 CBZ W8, 0x1F94FD4
	0x01F94FC4 LDP X20, X19, [X31 + 0x20]
	0x01F94FC8 LDP X22, X21, [X31 + 0x10]
	0x01F94FCC LDP X30, X23, [X31], #0x30
	0x01F94FD0 RET
	0x01F94FD4 ADD X20, X19, 0xA8
	0x01F94FD8 MOV X0, X20
	0x01F94FDC BL 0x1F950A4
	0x01F94FE0 LDR V0, [X19 + 0xCC]
	0x01F94FE4 ADRP X8, 0xFFFFFFFFFEB56000
	0x01F94FE8 LDR V2, [X8 + 0xC4]
	0x01F94FEC LDR W8, [X19 + 0x8C]

ISIL:
	001 Subtract X31, X31, 352
	002 Move [X31+208], D13
	003 Move [X31+216], D12
	004 Move [X31+224], D11
	005 Move [X31+232], D10
	006 Move [X31+240], D9
	007 Move [X31+248], D8
	008 Move [X31+256], X29
	009 Move [X31+264], X30
	010 Move [X31+272], X28
	011 Move [X31+280], X27
	012 Move [X31+288], X26
	013 Move [X31+296], X25
	014 Move [X31+304], X24
	015 Move [X31+312], X23
	016 Move [X31+320], X22
	017 Move [X31+328], X21
	018 Move [X31+336], X20
	019 Move [X31+344], X19
	020 Move X20, 0x2446000
	021 Move W8, [X20+1858]
	022 Move X19, X0
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {50}
	027 Move X0, 0x2160000
	028 Move X0, [X0+2600]
	029 Call 0x1C17CF4
	030 Move X0, 0x2187000
	031 Move X0, [X0+3088]
	032 Call 0x1C17CF4
	033 Move X0, 0x2160000
	034 Move X0, [X0+3584]
	035 Call 0x1C17CF4
	036 Move X0, 0x2187000
	037 Move X0, [X0+3096]
	038 Call 0x1C17CF4
	039 Move X0, 0x2187000
	040 Move X0, [X0+3104]
	041 Call 0x1C17CF4
	042 Move X0, 0x2160000
	043 Move X0, [X0+3608]
	044 Call 0x1C17CF4
	045 Move X0, 0x2187000
	046 Move X0, [X0+3112]
	047 Call 0x1C17CF4
	048 Move W8, 1
	049 Move [X20+1858], W8
	050 Move X0, [X19+72]
	051 Compare X0, 0
	052 JumpIfEqual {445}
	053 Move X1, X31
	054 Call NetworkRunner.get_IsServer, X0
	055 Move TEMP, X0
	056 And TEMP, TEMP, 1
	057 Compare TEMP, 1
	058 JumpIfNotEqual {63}
	059 Add X8, X19, 36
	060 Add X9, X19, 40
	061 Add X10, X19, 44
	062 Add X11, X19, 48
	063 Add X8, X19, 52
	064 Add X9, X19, 56
	065 Add X10, X19, 60
	066 Add X11, X19, 64
	067 Move V0, [X8]
	068 Move V1, [X9]
	069 Move V2, [X10]
	070 Move V3, [X11]
	071 Move X0, X31
	072 Call Gizmos.set_color, X0
	073 Move X0, [X19+72]
	074 Compare X0, 0
	075 JumpIfEqual {445}
	076 Move X1, X31
	077 Call NetworkRunner.get_LagCompensation, X0
	078 Compare X0, 0
	079 JumpIfEqual {445}
	080 Move X8, [X0+88]
	081 Compare X8, 0
	082 JumpIfEqual {445}
	083 Move X0, [X8+16]
	084 Compare X0, 0
	085 JumpIfEqual {445}
	086 Move X25, 0x2160000
	087 Move X26, 0x2187000
	088 Move X24, 0x2160000
	089 Move X27, 0x2187000
	090 Move X28, 0x2187000
	091 Move X29, 0x2187000
	092 Move X22, 0x2160000
	093 Move X25, [X25+3608]
	094 Move X26, [X26+3096]
	095 Move X24, [X24+3584]
	096 Move X27, [X27+3104]
	097 Move X28, [X28+3088]
	098 Move X29, [X29+3112]
	099 Move X22, [X22+2600]
	100 Move X1, X31
	101 Call SnapshotHistoryDraw.GetEnumerator, X0
	102 Move X19, X0
	103 Compare X19, 0
	104 JumpIfEqual {441}
	105 Move X8, [X19]
	106 Move X1, [X25]
	107 NotImplemented "Instruction LDRH not yet implemented."
	108 Compare X9, 0
	109 JumpIfEqual {116}
	110 Move X10, [X8+176]
	111 Add X10, X10, 8
	112 NotImplemented "Instruction LDUR not yet implemented."
	113 NotImplemented "Instruction CMP not yet implemented."
	114 Subtract X9, X9, 1
	115 Add X10, X10, 16
	116 Move X0, X19
	117 Move W2, W31
	118 Call 0x1C5D788
	119 NotImplemented "Instruction LDRSW not yet implemented."
	120 Add X8, X8, X9
	121 Add X0, X8, 312
	122 Move X8, [X0]
	123 Move X1, [X0+8]
	124 Move X0, X19
	125 NotImplemented "Instruction BLR not yet implemented."
	126 Move TEMP, X0
	127 And TEMP, TEMP, 1
	128 Compare TEMP, 1
	129 JumpIfNotEqual {338}
	130 Move X8, [X19]
	131 Move X1, [X26]
	132 NotImplemented "Instruction LDRH not yet implemented."
	133 Compare X9, 0
	134 JumpIfEqual {141}
	135 Move X10, [X8+176]
	136 Add X10, X10, 8
	137 NotImplemented "Instruction LDUR not yet implemented."
	138 NotImplemented "Instruction CMP not yet implemented."
	139 Subtract X9, X9, 1
	140 Add X10, X10, 16
	141 Move X0, X19
	142 Move W2, W31
	143 Call 0x1C5D788
	144 NotImplemented "Instruction LDRSW not yet implemented."
	145 Add X8, X8, X9
	146 Add X0, X8, 312
	147 Move X8, [X0]
	148 Move X1, [X0+8]
	149 Move X0, X19
	150 NotImplemented "Instruction BLR not yet implemented."
	151 Compare X0, 0
	152 JumpIfEqual {442}
	153 Move X1, X31
	154 Call HitboxColliderContainerDraw.GetEnumerator, X0
	155 Move X20, X0
	156 Compare X0, 0
	157 JumpIfEqual {332}
	158 Move X8, [X20]
	159 Move X1, [X25]
	160 NotImplemented "Instruction LDRH not yet implemented."
	161 Compare X9, 0
	162 JumpIfEqual {169}
	163 Move X10, [X8+176]
	164 Add X10, X10, 8
	165 NotImplemented "Instruction LDUR not yet implemented."
	166 NotImplemented "Instruction CMP not yet implemented."
	167 Subtract X9, X9, 1
	168 Add X10, X10, 16
	169 Move X0, X20
	170 Move W2, W31
	171 Call 0x1C5D788
	172 NotImplemented "Instruction LDRSW not yet implemented."
	173 Add X8, X8, X9
	174 Add X0, X8, 312
	175 Move X8, [X0]
	176 Move X1, [X0+8]
	177 Move X0, X20
	178 NotImplemented "Instruction BLR not yet implemented."
	179 Move TEMP, X0
	180 And TEMP, TEMP, 1
	181 Compare TEMP, 1
	182 JumpIfNotEqual {305}
	183 Move X8, [X20]
	184 Move X1, [X27]
	185 NotImplemented "Instruction LDRH not yet implemented."
	186 Compare X9, 0
	187 JumpIfEqual {194}
	188 Move X10, [X8+176]
	189 Add X10, X10, 8
	190 NotImplemented "Instruction LDUR not yet implemented."
	191 NotImplemented "Instruction CMP not yet implemented."
	192 Subtract X9, X9, 1
	193 Add X10, X10, 16
	194 Move X0, X20
	195 Move W2, W31
	196 Call 0x1C5D788
	197 NotImplemented "Instruction LDRSW not yet implemented."
	198 Add X8, X8, X9
	199 Add X0, X8, 312
	200 Move X8, [X0]
	201 Move X1, [X0+8]
	202 Move X0, X20
	203 NotImplemented "Instruction BLR not yet implemented."
	204 Move X21, X0
	205 Compare X0, 0
	206 JumpIfEqual {331}
	207 Add X8, X31, 144
	208 Move X0, X21
	209 Move X1, X31
	210 Call ColliderDrawInfo.get_LocalToWorldMatrix, X0
	211 Move V0, [X31+144]
	212 Move V1, [X31+160]
	213 Move V2, [X31+176]
	214 Move V3, [X31+192]
	215 Move [X31+80], V0
	216 Move [X31+88], V1
	217 Move [X31+112], V2
	218 Move [X31+120], V3
	219 Add X0, X31, 80
	220 Move X1, X31
	221 Call Gizmos.set_matrix, X0
	222 Move X0, X21
	223 Move X1, X31
	224 Call ColliderDrawInfo.get_Type, X0
	225 NotImplemented "Instruction CMP not yet implemented."
	226 NotImplemented "Instruction CMP not yet implemented."
	227 NotImplemented "Instruction CMP not yet implemented."
	228 Move X0, X21
	229 Move X1, X31
	230 Call ColliderDrawInfo.get_CapsuleTopCenter, X0
	231 Move V8, V0
	232 Move V9, V1
	233 Move V10, V2
	234 Move X0, X21
	235 Move X1, X31
	236 Call ColliderDrawInfo.get_CapsuleBottomCenter, X0
	237 Move V11, V0
	238 Move V12, V1
	239 Move V13, V2
	240 Move X0, X21
	241 Move X1, X31
	242 Call ColliderDrawInfo.get_Radius, X0
	243 Move V6, V0
	244 Move V0, V8
	245 Move V1, V9
	246 Move V2, V10
	247 Move V3, V11
	248 Move V4, V12
	249 Move V5, V13
	250 Move X0, X31
	251 Call LagCompensationDraw.GizmosDrawWireCapsule, X0, X1, V0
	252 Move X0, X21
	253 Move X1, X31
	254 Call ColliderDrawInfo.get_Offset, X0
	255 Move V8, V0
	256 Move V9, V1
	257 Move V10, V2
	258 Move X0, X21
	259 Move X1, X31
	260 Call ColliderDrawInfo.get_Radius, X0
	261 Move V3, V0
	262 Move V0, V8
	263 Move V1, V9
	264 Move V2, V10
	265 Move X0, X31
	266 Call Gizmos.DrawWireSphere, X0, V0
	267 Move X0, X21
	268 Move X1, X31
	269 Call ColliderDrawInfo.get_Offset, X0
	270 Move V8, V0
	271 Move V9, V1
	272 Move V10, V2
	273 Move X0, X21
	274 Move X1, X31
	275 Call ColliderDrawInfo.get_BoxExtents, X0
	276 Add S3, S0, S0
	277 Add S4, S1, S1
	278 Add S5, S2, S2
	279 Move V0, V8
	280 Move V1, V9
	281 Move V2, V10
	282 Move X0, X31
	283 Call Gizmos.DrawWireCube, X0, X1
	284 Move X0, X21
	285 Move X1, X31
	286 Call ColliderDrawInfo.get_Type, X0
	287 Move X8, [X28]
	288 Move [X31+144], W0
	289 Add X1, X31, 144
	290 Move X0, X8
	291 Call 0x1C17E04
	292 Move X1, X0
	293 Move X0, [X29]
	294 Move X2, X31
	295 Call String.Format, X0, X1
	296 Move X21, X0
	297 Move X0, [X22]
	298 Move W8, [X0+224]
	299 Compare W8, 0
	300 JumpIfNotEqual {302}
	301 Call 0x1C17DFC
	302 Move X0, X21
	303 Move X1, X31
	304 Call Debug.LogWarning, X0
	305 Move X23, X31
	306 Compare X20, 0
	307 JumpIfEqual {329}
	308 Move X8, [X20]
	309 Move X1, [X24]
	310 NotImplemented "Instruction LDRH not yet implemented."
	311 Compare X9, 0
	312 JumpIfEqual {319}
	313 Move X10, [X8+176]
	314 Add X10, X10, 8
	315 NotImplemented "Instruction LDUR not yet implemented."
	316 NotImplemented "Instruction CMP not yet implemented."
	317 Subtract X9, X9, 1
	318 Add X10, X10, 16
	319 Move X0, X20
	320 Move W2, W31
	321 Call 0x1C5D788
	322 NotImplemented "Instruction LDRSW not yet implemented."
	323 Add X8, X8, X9
	324 Add X0, X8, 312
	325 Move X8, [X0]
	326 Move X1, [X0+8]
	327 Move X0, X20
	328 NotImplemented "Instruction BLR not yet implemented."
	329 Compare X23, 0
	330 JumpIfEqual {103}
	331 Call 0x1C17F20
	332 Call 0x1C17F20
	333 Move X21, X1
	334 NotImplemented "Instruction CMP not yet implemented."
	335 Call 0x3EB2AD0
	336 Move X23, [X0]
	337 Call 0x3EB2AE0
	338 Move X20, X31
	339 Move W21, 13
	340 Compare X19, 0
	341 JumpIfEqual {363}
	342 Move X8, [X19]
	343 Move X1, [X24]
	344 NotImplemented "Instruction LDRH not yet implemented."
	345 Compare X9, 0
	346 JumpIfEqual {353}
	347 Move X10, [X8+176]
	348 Add X10, X10, 8
	349 NotImplemented "Instruction LDUR not yet implemented."
	350 NotImplemented "Instruction CMP not yet implemented."
	351 Subtract X9, X9, 1
	352 Add X10, X10, 16
	353 Move X0, X19
	354 Move W2, W31
	355 Call 0x1C5D788
	356 NotImplemented "Instruction LDRSW not yet implemented."
	357 Add X8, X8, X9
	358 Add X0, X8, 312
	359 Move X8, [X0]
	360 Move X1, [X0+8]
	361 Move X0, X19
	362 NotImplemented "Instruction BLR not yet implemented."
	363 Compare X20, 0
	364 JumpIfNotEqual {446}
	365 NotImplemented "Instruction CMP not yet implemented."
	366 Compare W21, 0
	367 JumpIfNotEqual {392}
	368 Move X19, 0x2445000
	369 Move W8, [X19+2752]
	370 Compare W8, 0
	371 JumpIfNotEqual {377}
	372 Move X0, 0x2164000
	373 Move X0, [X0+624]
	374 Call 0x1C17CF4
	375 Move W8, 1
	376 Move [X19+2752], W8
	377 Move X8, 0x2164000
	378 Move X8, [X8+624]
	379 Add X0, X31, 16
	380 Move X1, X31
	381 Move X8, [X8]
	382 Move X8, [X8+184]
	383 Move V1, [X8+96]
	384 Move V0, [X8+112]
	385 Move V2, [X8+64]
	386 Move V3, [X8+80]
	387 Move [X31+48], V1
	388 Move [X31+56], V0
	389 Move [X31+16], V2
	390 Move [X31+24], V3
	391 Call Gizmos.set_matrix, X0
	392 Move X20, [X31+336]
	393 Move X19, [X31+344]
	394 Move X22, [X31+320]
	395 Move X21, [X31+328]
	396 Move X24, [X31+304]
	397 Move X23, [X31+312]
	398 Move X26, [X31+288]
	399 Move X25, [X31+296]
	400 Move X28, [X31+272]
	401 Move X27, [X31+280]
	402 Move X29, [X31+256]
	403 Move X30, [X31+264]
	404 Move D9, [X31+240]
	405 Move D8, [X31+248]
	406 Move D11, [X31+224]
	407 Move D10, [X31+232]
	408 Move D13, [X31+208]
	409 Move D12, [X31+216]
	410 Add X31, X31, 352
	411 Return 
	412 Move X22, X0
	413 Move X23, X31
	414 Compare X20, 0
	415 JumpIfEqual {437}
	416 Move X8, [X20]
	417 Move X1, [X24]
	418 NotImplemented "Instruction LDRH not yet implemented."
	419 Compare X9, 0
	420 JumpIfEqual {427}
	421 Move X10, [X8+176]
	422 Add X10, X10, 8
	423 NotImplemented "Instruction LDUR not yet implemented."
	424 NotImplemented "Instruction CMP not yet implemented."
	425 Subtract X9, X9, 1
	426 Add X10, X10, 16
	427 Move X0, X20
	428 Move W2, W31
	429 Call 0x1C5D788
	430 NotImplemented "Instruction LDRSW not yet implemented."
	431 Add X8, X8, X9
	432 Add X0, X8, 312
	433 Move X8, [X0]
	434 Move X1, [X0+8]
	435 Move X0, X20
	436 NotImplemented "Instruction BLR not yet implemented."
	437 Compare X23, 0
	438 JumpIfEqual {454}
	439 Move X0, X23
	440 Call 0x1C17F18
	441 Call 0x1C17F20
	442 Call 0x1C17F20
	443 Move X0, X23
	444 Call 0x1C17F18
	445 Call 0x1C17F20
	446 Move X0, X20
	447 Call 0x1C17F18
	448 Move X21, X1
	449 Move X22, X0
	450 Compare X20, 0
	451 JumpIfNotEqual {416}
	452 Move X21, X1
	453 Move X22, X0
	454 NotImplemented "Instruction CMP not yet implemented."
	455 Move X0, X22
	456 Call 0x3EB2AD0
	457 Move X20, [X0]
	458 Call 0x3EB2AE0
	459 Move W21, W31
	460 Compare X19, 0
	461 JumpIfNotEqual {342}
	462 Move X20, X31
	463 Move X22, X0
	464 Compare X19, 0
	465 JumpIfEqual {487}
	466 Move X8, [X19]
	467 Move X1, [X24]
	468 NotImplemented "Instruction LDRH not yet implemented."
	469 Compare X9, 0
	470 JumpIfEqual {477}
	471 Move X10, [X8+176]
	472 Add X10, X10, 8
	473 NotImplemented "Instruction LDUR not yet implemented."
	474 NotImplemented "Instruction CMP not yet implemented."
	475 Subtract X9, X9, 1
	476 Add X10, X10, 16
	477 Move X0, X19
	478 Move W2, W31
	479 Call 0x1C5D788
	480 NotImplemented "Instruction LDRSW not yet implemented."
	481 Add X8, X8, X9
	482 Add X0, X8, 312
	483 Move X8, [X0]
	484 Move X1, [X0+8]
	485 Move X0, X19
	486 NotImplemented "Instruction BLR not yet implemented."
	487 Compare X20, 0
	488 JumpIfNotEqual {491}
	489 Move X0, X22
	490 Call 0x1D2D690
	491 Move X0, X20
	492 Call 0x1C17F18
	493 Call 0x1991590

Method: System.Void RenderBHVBroadphase()

Disassembly:
	0x01F94504 LDR X0, [X0 + 0xC50]
	0x01F94508 BL 0x1C16CF4
	0x01F9450C ADRP X0, 0x2186000
	0x01F94510 LDR X0, [X0 + 0xC40]
	0x01F94514 BL 0x1C16CF4
	0x01F94518 MOVZ W8, 0x1
	0x01F9451C STRB W8, [X26 + 0x74D]
	0x01F94520 LDR X8, [X25]
	0x01F94524 MOVZ W9, 0x3F800000
	0x01F94528 CMP W20, 0x2000
	0x01F9452C STR X8, [X19]
	0x01F94530 STR W9, [X24]
	0x01F94534 STRB W31, [X23]
	0x01F94538 STRB W31, [X22]
	0x01F9453C STR W31, [X21]
	0x01F94540 B.LE 0x1F94574
	0x01F94544 CMP W20, 0x100000
	0x01F94548 B.LE 0x1F9459C
	0x01F9454C CMP W20, 0x800000
	0x01F94550 B.LE 0x1F945E0
	0x01F94554 MOVZ W8, 0x2000000
	0x01F94558 CMP W20, W8
	0x01F9455C B.LE 0x1F94668
	0x01F94560 MOVZ W8, 0x4000000
	0x01F94564 CMP W20, W8
	0x01F94568 B.EQ 0x1F9471C
	0x01F9456C MOVZ W8, 0x8000000
	0x01F94570 B 0x1F94678
	0x01F94574 CMP W20, 0x40
	0x01F94578 B.LE 0x1F945C0
	0x01F9457C CMP W20, 0x200
	0x01F94580 B.LE 0x1F94604
	0x01F94584 CMP W20, 0x800
	0x01F94588 B.LE 0x1F94690
	0x01F9458C CMP W20, 0x1000
	0x01F94590 B.EQ 0x1F946A0
	0x01F94594 CMP W20, 0x2000
	0x01F94598 B 0x1F946DC
	0x01F9459C CMP W20, 0x10000
	0x01F945A0 B.LE 0x1F94620
	0x01F945A4 CMP W20, 0x40000
	0x01F945A8 B.LE 0x1F946B8
	0x01F945AC CMP W20, 0x80000
	0x01F945B0 B.EQ 0x1F946C8
	0x01F945B4 CMP W20, 0x100000
	0x01F945B8 B.EQ 0x1F945F8
	0x01F945BC B 0x1F946DC
	0x01F945C0 CMP W20, 0x8
	0x01F945C4 B.LE 0x1F9463C
	0x01F945C8 CMP W20, 0x10
	0x01F945CC B.EQ 0x1F94658
	0x01F945D0 CMP W20, 0x20
	0x01F945D4 B.EQ 0x1F946DC
	0x01F945D8 CMP W20, 0x40
	0x01F945DC B 0x1F946DC
	0x01F945E0 CMP W20, 0x200000
	0x01F945E4 B.EQ 0x1F945F8
	0x01F945E8 CMP W20, 0x400000
	0x01F945EC B.EQ 0x1F945F8
	0x01F945F0 CMP W20, 0x800000
	0x01F945F4 B.NE 0x1F946DC
	0x01F945F8 ADRP X8, 0x2186000
	0x01F945FC LDR X8, [X8 + 0xC50]
	0x01F94600 B 0x1F946B0
	0x01F94604 CMP W20, 0x80
	0x01F94608 B.EQ 0x1F946A0
	0x01F9460C CMP W20, 0x100
	0x01F94610 B.EQ 0x1F946DC
	0x01F94614 CMP W20, 0x200
	0x01F94618 B.EQ 0x1F946A0
	0x01F9461C B 0x1F946DC
	0x01F94620 CMP W20, 0x4000
	0x01F94624 B.EQ 0x1F94658
	0x01F94628 CMP W20, 0x8000
	0x01F9462C B.EQ 0x1F94658
	0x01F94630 CMP W20, 0x10000
	0x01F94634 B.NE 0x1F946DC
	0x01F94638 B 0x1F946FC
	0x01F9463C SUB W8, W20, 0x1
	0x01F94640 CMP W8, 0x2
	0x01F94644 B.CC 0x1F946C8
	0x01F94648 CMP W20, 0x4
	0x01F9464C B.EQ 0x1F94738
	0x01F94650 CMP W20, 0x8
	0x01F94654 B.NE 0x1F946DC
	0x01F94658 ADRP X8, 0x2186000
	0x01F9465C LDR X8, [X8 + 0xC50]
	0x01F94660 LDR X8, [X8]
	0x01F94664 B 0x1F946CC
	0x01F94668 MOVZ W8, 0x1000000
	0x01F9466C CMP W20, W8
	0x01F94670 B.EQ 0x1F9471C
	0x01F94674 MOVZ W8, 0x2000000
	0x01F94678 CMP W20, W8
	0x01F9467C B.NE 0x1F946DC
	0x01F94680 ADRP X8, 0x2186000
	0x01F94684 LDR X8, [X8 + 0xC50]
	0x01F94688 LDR X8, [X8]
	0x01F9468C B 0x1F94720
	0x01F94690 CMP W20, 0x400
	0x01F94694 B.EQ 0x1F946A0
	0x01F94698 CMP W20, 0x800
	0x01F9469C B 0x1F946DC
	0x01F946A0 MOVZ W8, 0x447A0000
	0x01F946A4 STR W8, [X24]
	0x01F946A8 ADRP X8, 0x2186000
	0x01F946AC LDR X8, [X8 + 0xC48]
	0x01F946B0 LDR X8, [X8]
	0x01F946B4 B 0x1F946E0
	0x01F946B8 CMP W20, 0x20000
	0x01F946BC B.EQ 0x1F946FC
	0x01F946C0 CMP W20, 0x40000
	0x01F946C4 B.NE 0x1F946DC
	0x01F946C8 LDR X8, [X25]
	0x01F946CC MOVZ W9, 0x3E8
	0x01F946D0 STR X8, [X19]
	0x01F946D4 STR W9, [X21]
	0x01F946D8 B 0x1F946E4
	0x01F946DC LDR X8, [X25]
	0x01F946E0 STR X8, [X19]
	0x01F946E4 LDP X20, X19, [X31 + 0x40]
	0x01F946E8 LDP X22, X21, [X31 + 0x30]
	0x01F946EC LDP X24, X23, [X31 + 0x20]
	0x01F946F0 LDP X26, X25, [X31 + 0x10]
	0x01F946F4 LDR X30, [X31], #0x50
	0x01F946F8 RET
	0x01F946FC ADRP X8, 0x2186000
	0x01F94700 LDR X8, [X8 + 0xC50]
	0x01F94704 MOVZ W9, 0x1
	0x01F94708 LDR X8, [X8]
	0x01F9470C STR X8, [X19]
	0x01F94710 STRB W9, [X22]
	0x01F94714 STRB W9, [X23]
	0x01F94718 B 0x1F946E4
	0x01F9471C LDR X8, [X25]
	0x01F94720 MOVZ W9, 0x1
	0x01F94724 MOVZ W10, 0x3E8
	0x01F94728 STR X8, [X19]
	0x01F9472C STRB W9, [X22]
	0x01F94730 STR W10, [X21]
	0x01F94734 B 0x1F946E4
	0x01F94738 ADRP X8, 0x2186000
	0x01F9473C LDR X8, [X8 + 0xC48]
	0x01F94740 MOVZ W9, 0x447A0000
	0x01F94744 MOVZ W10, 0x1
	0x01F94748 LDR X8, [X8]
	0x01F9474C STR X8, [X19]
	0x01F94750 STR W9, [X24]
	0x01F94754 STRB W10, [X23]
	0x01F94758 STRB W10, [X22]
	0x01F9475C B 0x1F946E4
	0x01F94760 STR X30, [X31 - 0x10]!
	0x01F94764 CMP W0, 0x4000
	0x01F94768 B.LE 0x1F947B8
	0x01F9476C CMP W0, 0x100000
	0x01F94770 B.LE 0x1F947F0
	0x01F94774 CMP W0, 0x800000
	0x01F94778 B.LE 0x1F94850
	0x01F9477C MOVZ W8, 0x2000000
	0x01F94780 CMP W0, W8
	0x01F94784 B.LE 0x1F94900
	0x01F94788 MOVZ W8, 0x4000000
	0x01F9478C CMP W0, W8
	0x01F94790 B.EQ 0x1F94A18
	0x01F94794 MOVZ W8, 0x8000000
	0x01F94798 CMP W0, W8
	0x01F9479C FMOV S0, W31
	0x01F947A0 B.NE 0x1F94A3C
	0x01F947A4 CBZ X1, 0x1F94A50
	0x01F947A8 MOV X0, X1
	0x01F947AC MOV X1, X31
	0x01F947B0 BL 0x1EF0ABC
	0x01F947B4 B 0x1F9492C
	0x01F947B8 CMP W0, 0x80
	0x01F947BC B.LE 0x1F94820
	0x01F947C0 CMP W0, 0x400
	0x01F947C4 B.LE 0x1F94878
	0x01F947C8 CMP W0, 0x1000
	0x01F947CC B.LE 0x1F94934
	0x01F947D0 CMP W0, 0x2000
	0x01F947D4 B.EQ 0x1F94A24
	0x01F947D8 CMP W0, 0x4000
	0x01F947DC FMOV S0, W31
	0x01F947E0 B.NE 0x1F94A3C
	0x01F947E4 CBZ X1, 0x1F94A50
	0x01F947E8 LDR V0, [X1 + 0x2C]
	0x01F947EC B 0x1F94A3C
	0x01F947F0 CMP W0, 0x20000
	0x01F947F4 B.LE 0x1F948A0
	0x01F947F8 CMP W0, 0x40000
	0x01F947FC B.EQ 0x1F94954
	0x01F94800 CMP W0, 0x80000
	0x01F94804 B.EQ 0x1F94960
	0x01F94808 CMP W0, 0x100000
	0x01F9480C FMOV S0, W31
	0x01F94810 B.NE 0x1F94A3C
	0x01F94814 CBZ X1, 0x1F94A50
	0x01F94818 LDR V0, [X1 + 0x3C]
	0x01F9481C B 0x1F94A38
	0x01F94820 CMP W0, 0x10
	0x01F94824 B.LE 0x1F948CC
	0x01F94828 CMP W0, 0x20
	0x01F9482C B.EQ 0x1F9496C
	0x01F94830 CMP W0, 0x40
	0x01F94834 B.EQ 0x1F94978
	0x01F94838 CMP W0, 0x80
	0x01F9483C FMOV S0, W31
	0x01F94840 B.NE 0x1F94A3C
	0x01F94844 CBZ X1, 0x1F94A50
	0x01F94848 LDR V0, [X1 + 0x54]
	0x01F9484C B 0x1F94A3C
	0x01F94850 CMP W0, 0x200000
	0x01F94854 B.EQ 0x1F94984
	0x01F94858 CMP W0, 0x400000
	0x01F9485C B.EQ 0x1F94990
	0x01F94860 CMP W0, 0x800000
	0x01F94864 FMOV S0, W31

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+32], D12
	003 Move [X31+40], D11
	004 Move [X31+48], D10
	005 Move [X31+56], D9
	006 Move [X31+64], D8
	007 Move [X31+72], X30
	008 Move [X31+80], X24
	009 Move [X31+88], X23
	010 Move [X31+96], X22
	011 Move [X31+104], X21
	012 Move [X31+112], X20
	013 Move [X31+120], X19
	014 Move X20, 0x2446000
	015 Move W8, [X20+1859]
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {32}
	021 Move X0, 0x2160000
	022 Move X0, [X0+3584]
	023 Call 0x1C17CF4
	024 Move X0, 0x2187000
	025 Move X0, [X0+3080]
	026 Call 0x1C17CF4
	027 Move X0, 0x2160000
	028 Move X0, [X0+3608]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X20+1859], W8
	032 Move X0, [X19+72]
	033 Compare X0, 0
	034 JumpIfEqual {188}
	035 Move X1, X31
	036 Call NetworkRunner.get_LagCompensation, X0
	037 Compare X0, 0
	038 JumpIfEqual {188}
	039 Move X8, [X0+88]
	040 Compare X8, 0
	041 JumpIfEqual {188}
	042 Move X0, [X8+24]
	043 Compare X0, 0
	044 JumpIfEqual {188}
	045 Move X22, 0x2160000
	046 Move X22, [X22+3584]
	047 Move X1, X31
	048 Call BVHDraw.GetEnumerator, X0
	049 Move X19, X0
	050 Compare X0, 0
	051 JumpIfEqual {189}
	052 Move X23, 0x2160000
	053 Move X24, 0x2187000
	054 Move X23, [X23+3608]
	055 Move X24, [X24+3080]
	056 Move S11, W31
	057 Move S12, 1
	058 Move X8, [X19]
	059 Move X1, [X23]
	060 NotImplemented "Instruction LDRH not yet implemented."
	061 Compare X9, 0
	062 JumpIfEqual {69}
	063 Move X10, [X8+176]
	064 Add X10, X10, 8
	065 NotImplemented "Instruction LDUR not yet implemented."
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Subtract X9, X9, 1
	068 Add X10, X10, 16
	069 Move X0, X19
	070 Move W2, W31
	071 Call 0x1C5D788
	072 NotImplemented "Instruction LDRSW not yet implemented."
	073 Add X8, X8, X9
	074 Add X0, X8, 312
	075 Move X8, [X0]
	076 Move X1, [X0+8]
	077 Move X0, X19
	078 NotImplemented "Instruction BLR not yet implemented."
	079 Move TEMP, X0
	080 And TEMP, TEMP, 1
	081 Compare TEMP, 1
	082 JumpIfNotEqual {147}
	083 Move X8, [X19]
	084 Move X1, [X24]
	085 NotImplemented "Instruction LDRH not yet implemented."
	086 Compare X9, 0
	087 JumpIfEqual {94}
	088 Move X10, [X8+176]
	089 Add X10, X10, 8
	090 NotImplemented "Instruction LDUR not yet implemented."
	091 NotImplemented "Instruction CMP not yet implemented."
	092 Subtract X9, X9, 1
	093 Add X10, X10, 16
	094 Move X0, X19
	095 Move W2, W31
	096 Call 0x1C5D788
	097 NotImplemented "Instruction LDRSW not yet implemented."
	098 Add X8, X8, X9
	099 Add X0, X8, 312
	100 Move X8, [X0]
	101 Move X1, [X0+8]
	102 Move X0, X19
	103 NotImplemented "Instruction BLR not yet implemented."
	104 Move X20, X0
	105 Compare X0, 0
	106 JumpIfEqual {187}
	107 Move X0, X20
	108 Move X1, X31
	109 Call BVHNodeDrawInfo.get_Depth, X0
	110 Move W21, W0
	111 Move X0, X20
	112 Move X1, X31
	113 Call BVHNodeDrawInfo.get_MaxDepth, X0
	114 NotImplemented "Instruction SCVTF not yet implemented."
	115 NotImplemented "Instruction SCVTF not yet implemented."
	116 Multiply S2, S0, S11
	117 NotImplemented "Instruction FDIV not yet implemented."
	118 NotImplemented "Instruction FDIV not yet implemented."
	119 Add S0, S3, S11
	120 Add S1, S2, S12
	121 Add S2, S2, S11
	122 Add S3, S3, S12
	123 Move X0, X31
	124 Call Gizmos.set_color, X0
	125 Add X8, X31, 8
	126 Move X0, X20
	127 Move X1, X31
	128 Call BVHNodeDrawInfo.get_Bounds, X0
	129 Move S8, [X31+8]
	130 Move S9, [X31+12]
	131 Move V10, [X31+16]
	132 Add X8, X31, 8
	133 Move X0, X20
	134 Move X1, X31
	135 Call BVHNodeDrawInfo.get_Bounds, X0
	136 Move S0, [X31+20]
	137 Move S1, [X31+24]
	138 Move V2, [X31+28]
	139 Add S3, S0, S0
	140 Add S4, S1, S1
	141 Add S5, S2, S2
	142 Move V0, V8
	143 Move V1, V9
	144 Move V2, V10
	145 Move X0, X31
	146 Call Gizmos.DrawWireCube, X0, X1
	147 Move X20, X31
	148 Compare X19, 0
	149 JumpIfEqual {171}
	150 Move X8, [X19]
	151 Move X1, [X22]
	152 NotImplemented "Instruction LDRH not yet implemented."
	153 Compare X9, 0
	154 JumpIfEqual {161}
	155 Move X10, [X8+176]
	156 Add X10, X10, 8
	157 NotImplemented "Instruction LDUR not yet implemented."
	158 NotImplemented "Instruction CMP not yet implemented."
	159 Subtract X9, X9, 1
	160 Add X10, X10, 16
	161 Move X0, X19
	162 Move W2, W31
	163 Call 0x1C5D788
	164 NotImplemented "Instruction LDRSW not yet implemented."
	165 Add X8, X8, X9
	166 Add X0, X8, 312
	167 Move X8, [X0]
	168 Move X1, [X0+8]
	169 Move X0, X19
	170 NotImplemented "Instruction BLR not yet implemented."
	171 Compare X20, 0
	172 JumpIfNotEqual {190}
	173 Move X20, [X31+112]
	174 Move X19, [X31+120]
	175 Move X22, [X31+96]
	176 Move X21, [X31+104]
	177 Move X24, [X31+80]
	178 Move X23, [X31+88]
	179 Move X30, [X31+72]
	180 Move D9, [X31+56]
	181 Move D8, [X31+64]
	182 Move D11, [X31+40]
	183 Move D10, [X31+48]
	184 Move V12, [X31+32]
	185 Add X31, X31, 128
	186 Return 
	187 Call 0x1C17F20
	188 Call 0x1C17F20
	189 Call 0x1C17F20
	190 Move X0, X20
	191 Call 0x1C17F18
	192 NotImplemented "Instruction CMP not yet implemented."
	193 Call 0x3EB2AD0
	194 Move X20, [X0]
	195 Call 0x3EB2AE0
	196 Move [X31], X0
	197 Move X20, X31
	198 Move [X31], X0
	199 Compare X19, 0
	200 JumpIfEqual {222}
	201 Move X8, [X19]
	202 Move X1, [X22]
	203 NotImplemented "Instruction LDRH not yet implemented."
	204 Compare X9, 0
	205 JumpIfEqual {212}
	206 Move X10, [X8+176]
	207 Add X10, X10, 8
	208 NotImplemented "Instruction LDUR not yet implemented."
	209 NotImplemented "Instruction CMP not yet implemented."
	210 Subtract X9, X9, 1
	211 Add X10, X10, 16
	212 Move X0, X19
	213 Move W2, W31
	214 Call 0x1C5D788
	215 NotImplemented "Instruction LDRSW not yet implemented."
	216 Add X8, X8, X9
	217 Add X0, X8, 312
	218 Move X8, [X0]
	219 Move X1, [X0+8]
	220 Move X0, X19
	221 NotImplemented "Instruction BLR not yet implemented."
	222 Compare X20, 0
	223 JumpIfNotEqual {226}
	224 Move X0, [X31]
	225 Call 0x1D2D690
	226 Move X0, X20
	227 Call 0x1C17F18
	228 Call 0x1991590

Method: System.Void .ctor()

Disassembly:
	0x01F94FF0 LDR X21, [X19 + 0xE0]
	0x01F94FF4 FMOV S1, 1
	0x01F94FF8 FDIV S0, S1, S0
	0x01F94FFC FMUL S0, S0, S2
	0x01F95000 CMP W8, 0x1
	0x01F95004 STR S0, [X19 + 0xF8]
	0x01F95008 B.LT 0x1F9506C
	0x01F9500C LDR W22, [X19 + 0xB0]

ISIL:
	001 Move X8, -21655552
	002 Move X9, -21659648
	003 Move V0, [X8+243]
	004 Move V1, [X9+213]
	005 Move X1, X31
	006 Move [X0+36], V0
	007 Move [X0+52], V1
	008 Call Behaviour..ctor, X0
	009 Return 

