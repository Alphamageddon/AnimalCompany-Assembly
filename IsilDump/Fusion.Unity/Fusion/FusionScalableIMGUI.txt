Type: Fusion.FusionScalableIMGUI

Method: System.Void InitializedGUIStyles(UnityEngine.GUISkin baseSkin)

Disassembly:
	0x01F876E4 MOVN W20, 0x0
	0x01F876E8 MOV W0, W20
	0x01F876EC LDP X20, X19, [X31 + 0x30]
	0x01F876F0 LDP X22, X21, [X31 + 0x20]
	0x01F876F4 LDP X30, X23, [X31 + 0x10]
	0x01F876F8 ADD X31, X31, 0x40
	0x01F876FC RET
	0x01F87700 BL 0x1C16F20
	0x01F87704 STP X30, X21, [X31 - 0x20]!
	0x01F87708 STP X20, X19, [X31 + 0x10]
	0x01F8770C CBZ X0, 0x1F87768
	0x01F87710 MOV X19, X2
	0x01F87714 MOV X21, X1
	0x01F87718 MOVZ W1, 0x2F
	0x01F8771C MOV X2, X31
	0x01F87720 MOV X20, X0
	0x01F87724 BL 0x322C668
	0x01F87728 CMP W0, 0x0
	0x01F8772C CSINC W8, W31, W0, LT
	0x01F87730 MOVZ W1, 0x2E
	0x01F87734 MOV X0, X20
	0x01F87738 MOV X2, X31
	0x01F8773C STR W8, [X21]
	0x01F87740 BL 0x322C668
	0x01F87744 LDR W8, [X21]
	0x01F87748 CMP W0, W8
	0x01F8774C B.GT 0x1F87754
	0x01F87750 LDR W0, [X20 + 0x10]
	0x01F87754 SUB W8, W0, W8
	0x01F87758 STR W8, [X19]
	0x01F8775C LDP X20, X19, [X31 + 0x10]
	0x01F87760 LDP X30, X21, [X31], #0x20
	0x01F87764 RET
	0x01F87768 BL 0x1C16F20
	0x01F8776C SUB X31, X31, 0x50
	0x01F87770 STP X30, X25, [X31 + 0x10]
	0x01F87774 STP X24, X23, [X31 + 0x20]
	0x01F87778 STP X22, X21, [X31 + 0x30]
	0x01F8777C STP X20, X19, [X31 + 0x40]
	0x01F87780 ADRP X21, 0x2452000
	0x01F87784 LDRB W8, [X21 + 0x6D6]
	0x01F87788 MOV X19, X1
	0x01F8778C MOV X20, X0
	0x01F87790 TBNZ X8, 0x0, 0x1F877C0
	0x01F87794 ADRP X0, 0x2193000
	0x01F87798 LDR X0, [X0 + 0x538]
	0x01F8779C BL 0x1C16CF4
	0x01F877A0 ADRP X0, 0x216F000
	0x01F877A4 LDR X0, [X0 + 0x258]
	0x01F877A8 BL 0x1C16CF4
	0x01F877AC ADRP X0, 0x2193000
	0x01F877B0 LDR X0, [X0 + 0x540]
	0x01F877B4 BL 0x1C16CF4
	0x01F877B8 MOVZ W8, 0x1
	0x01F877BC STRB W8, [X21 + 0x6D6]
	0x01F877C0 STR X31, [X31 + 0x8]
	0x01F877C4 CBZ X19, 0x1F879A4
	0x01F877C8 ADRP X23, 0x2193000
	0x01F877CC LDR X23, [X23 + 0x540]
	0x01F877D0 MOVZ W1, 0x2F
	0x01F877D4 MOV X0, X19
	0x01F877D8 MOV X2, X31
	0x01F877DC BL 0x322BD98
	0x01F877E0 TBNZ X0, 0x1F, 0x1F87828
	0x01F877E4 CBZ X20, 0x1F879A4
	0x01F877E8 LDR X8, [X20]
	0x01F877EC LDR X1, [X23]
	0x01F877F0 LDRH W9, [X8 + 0x12E]
	0x01F877F4 CBZ X9, 0x1F87818
	0x01F877F8 LDR X10, [X8 + 0xB0]
	0x01F877FC ADD X10, X10, 0x8
	0x01F87800 LDUR X11, [X10 - 0x8]
	0x01F87804 CMP X11, X1
	0x01F87808 B.EQ 0x1F87964
	0x01F8780C SUBS X9, X9, 0x1
	0x01F87810 ADD X10, X10, 0x10
	0x01F87814 B.NE 0x1F87800
	0x01F87818 MOVZ W2, 0x2
	0x01F8781C MOV X0, X20
	0x01F87820 BL 0x1C5C788
	0x01F87824 B 0x1F87974
	0x01F87828 CBZ X20, 0x1F879A4
	0x01F8782C ADRP X24, 0x216F000
	0x01F87830 ADRP X25, 0x2193000
	0x01F87834 LDR X24, [X24 + 0x258]
	0x01F87838 LDR X25, [X25 + 0x538]
	0x01F8783C MOV W21, W31
	0x01F87840 LDR X8, [X20]
	0x01F87844 LDR X1, [X24]
	0x01F87848 LDRH W9, [X8 + 0x12E]
	0x01F8784C CBZ X9, 0x1F87870
	0x01F87850 LDR X10, [X8 + 0xB0]
	0x01F87854 ADD X10, X10, 0x8
	0x01F87858 LDUR X11, [X10 - 0x8]
	0x01F8785C CMP X11, X1
	0x01F87860 B.EQ 0x1F87880
	0x01F87864 SUBS X9, X9, 0x1
	0x01F87868 ADD X10, X10, 0x10
	0x01F8786C B.NE 0x1F87858
	0x01F87870 MOV X0, X20
	0x01F87874 MOV W2, W31
	0x01F87878 BL 0x1C5C788
	0x01F8787C B 0x1F8788C
	0x01F87880 LDRSW X9, [X10]
	0x01F87884 ADD X8, X8, X9, 0x4, LSL
	0x01F87888 ADD X0, X8, 0x138
	0x01F8788C LDP X8, X1, [X0]
	0x01F87890 MOV X0, X20
	0x01F87894 BLR X8
	0x01F87898 CMP W21, W0
	0x01F8789C B.GE 0x1F8795C
	0x01F878A0 LDR X8, [X20]
	0x01F878A4 LDR X1, [X23]
	0x01F878A8 LDRH W9, [X8 + 0x12E]
	0x01F878AC CBZ X9, 0x1F878D0
	0x01F878B0 LDR X10, [X8 + 0xB0]
	0x01F878B4 ADD X10, X10, 0x8
	0x01F878B8 LDUR X11, [X10 - 0x8]
	0x01F878BC CMP X11, X1
	0x01F878C0 B.EQ 0x1F878E0
	0x01F878C4 SUBS X9, X9, 0x1
	0x01F878C8 ADD X10, X10, 0x10
	0x01F878CC B.NE 0x1F878B8
	0x01F878D0 MOV X0, X20
	0x01F878D4 MOV W2, W31
	0x01F878D8 BL 0x1C5C788
	0x01F878DC B 0x1F878EC
	0x01F878E0 LDRSW X9, [X10]
	0x01F878E4 ADD X8, X8, X9, 0x4, LSL
	0x01F878E8 ADD X0, X8, 0x138
	0x01F878EC LDP X8, X2, [X0]
	0x01F878F0 MOV X0, X20
	0x01F878F4 MOV W1, W21
	0x01F878F8 BLR X8
	0x01F878FC LDR X8, [X25]
	0x01F87900 MOV X22, X0
	0x01F87904 LDR W9, [X8 + 0xE0]
	0x01F87908 CBNZ W9, 0x1F87914
	0x01F8790C MOV X0, X8
	0x01F87910 BL 0x1C16DFC
	0x01F87914 ADD X1, X31, 0xC
	0x01F87918 ADD X2, X31, 0x8
	0x01F8791C MOV X0, X22
	0x01F87920 BL 0x1F87704
	0x01F87924 LDR W4, [X31 + 0x8]
	0x01F87928 LDR W8, [X19 + 0x10]
	0x01F8792C CMP W4, W8
	0x01F87930 B.NE 0x1F87954
	0x01F87934 LDR W1, [X31 + 0xC]
	0x01F87938 MOVZ W5, 0x1
	0x01F8793C MOV X0, X22
	0x01F87940 MOV X2, X19
	0x01F87944 MOV W3, W31
	0x01F87948 MOV X6, X31
	0x01F8794C BL 0x3225C88
	0x01F87950 CBZ W0, 0x1F87988
	0x01F87954 ADD W21, W21, 0x1
	0x01F87958 B 0x1F87840
	0x01F8795C MOVN W21, 0x0
	0x01F87960 B 0x1F87988
	0x01F87964 LDR W9, [X10]
	0x01F87968 ADD W9, W9, 0x2
	0x01F8796C ADD X8, X8, W9, 0x4, SXTW
	0x01F87970 ADD X0, X8, 0x138
	0x01F87974 LDP X8, X2, [X0]
	0x01F87978 MOV X0, X20
	0x01F8797C MOV X1, X19
	0x01F87980 BLR X8
	0x01F87984 MOV W21, W0
	0x01F87988 MOV W0, W21
	0x01F8798C LDP X20, X19, [X31 + 0x40]
	0x01F87990 LDP X22, X21, [X31 + 0x30]
	0x01F87994 LDP X24, X23, [X31 + 0x20]
	0x01F87998 LDP X30, X25, [X31 + 0x10]
	0x01F8799C ADD X31, X31, 0x50
	0x01F879A0 RET
	0x01F879A4 BL 0x1C16F20
	0x01F879A8 STR X30, [X31 - 0x30]!
	0x01F879AC STP X22, X21, [X31 + 0x10]
	0x01F879B0 STP X20, X19, [X31 + 0x20]
	0x01F879B4 ADRP X21, 0x2452000
	0x01F879B8 ADRP X22, 0x2172000
	0x01F879BC ADRP X19, 0x2172000
	0x01F879C0 ADRP X20, 0x2193000
	0x01F879C4 LDRB W8, [X21 + 0x6D7]
	0x01F879C8 LDR X22, [X22 + 0x548]
	0x01F879CC LDR X19, [X19 + 0x550]
	0x01F879D0 LDR X20, [X20 + 0x538]
	0x01F879D4 TBNZ X8, 0x0, 0x1F87A04
	0x01F879D8 ADRP X0, 0x2193000
	0x01F879DC LDR X0, [X0 + 0x538]
	0x01F879E0 BL 0x1C16CF4
	0x01F879E4 ADRP X0, 0x2172000
	0x01F879E8 LDR X0, [X0 + 0x550]
	0x01F879EC BL 0x1C16CF4
	0x01F879F0 ADRP X0, 0x2172000
	0x01F879F4 LDR X0, [X0 + 0x548]
	0x01F879F8 BL 0x1C16CF4
	0x01F879FC MOVZ W8, 0x1
	0x01F87A00 STRB W8, [X21 + 0x6D7]
	0x01F87A04 LDR X0, [X22]
	0x01F87A08 BL 0x1C16F10
	0x01F87A0C LDR X1, [X19]
	0x01F87A10 MOV X19, X0
	0x01F87A14 BL 0x301B7C4
	0x01F87A18 LDR X8, [X20]
	0x01F87A1C LDP X22, X21, [X31 + 0x10]
	0x01F87A20 LDR X8, [X8 + 0xB8]
	0x01F87A24 STR X19, [X8]
	0x01F87A28 LDP X20, X19, [X31 + 0x20]
	0x01F87A2C LDR X30, [X31], #0x30
	0x01F87A30 RET
	0x01F87A34 SUB X31, X31, 0x20
	0x01F87A38 STP X30, X19, [X31 + 0x10]
	0x01F87A3C STR W1, [X31 + 0x8]
	0x01F87A40 ADD X0, X31, 0x8
	0x01F87A44 MOV X1, X31
	0x01F87A48 STR W2, [X31]
	0x01F87A4C BL 0x3C462E0
	0x01F87A50 MOV W19, W0
	0x01F87A54 ADD X0, X31, 0x0
	0x01F87A58 MOV X1, X31
	0x01F87A5C BL 0x3C462E0
	0x01F87A60 CMP W19, W0
	0x01F87A64 LDP X30, X19, [X31 + 0x10]
	0x01F87A68 CSET W0, EQ
	0x01F87A6C ADD X31, X31, 0x20
	0x01F87A70 RET
	0x01F87A74 STR X30, [X31 - 0x10]!
	0x01F87A78 STR W1, [X31 + 0x8]
	0x01F87A7C ADD X0, X31, 0x8
	0x01F87A80 MOV X1, X31
	0x01F87A84 BL 0x3C462E0
	0x01F87A88 LDR X30, [X31], #0x10
	0x01F87A8C RET
	0x01F87A90 MOV X1, X31
	0x01F87A94 B 0x33BDD8C
	0x01F87A98 STR X30, [X31 - 0x20]!
	0x01F87A9C STP X20, X19, [X31 + 0x10]
	0x01F87AA0 ADRP X19, 0x2452000
	0x01F87AA4 ADRP X20, 0x2193000
	0x01F87AA8 LDRB W8, [X19 + 0x6D8]
	0x01F87AAC LDR X20, [X20 + 0x548]
	0x01F87AB0 TBNZ X8, 0x0, 0x1F87AC8
	0x01F87AB4 ADRP X0, 0x2193000
	0x01F87AB8 LDR X0, [X0 + 0x548]
	0x01F87ABC BL 0x1C16CF4
	0x01F87AC0 MOVZ W8, 0x1
	0x01F87AC4 STRB W8, [X19 + 0x6D8]
	0x01F87AC8 LDR X0, [X20]
	0x01F87ACC LDR W8, [X0 + 0xE0]
	0x01F87AD0 CBNZ W8, 0x1F87AD8
	0x01F87AD4 BL 0x1C16DFC
	0x01F87AD8 LDP X20, X19, [X31 + 0x10]
	0x01F87ADC LDR X30, [X31], #0x20
	0x01F87AE0 B 0x1F87AE4
	0x01F87AE4 STR X30, [X31 - 0x20]!

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x2453000
	007 Move X20, 0x216D000
	008 Move W8, [X21+1741]
	009 Move X20, [X20+1432]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {29}
	015 Move X0, 0x2194000
	016 Move X0, [X0+1208]
	017 Call 0x1C17CF4
	018 Move X0, 0x2194000
	019 Move X0, [X0+1216]
	020 Call 0x1C17CF4
	021 Move X0, 0x216D000
	022 Move X0, [X0+1432]
	023 Call 0x1C17CF4
	024 Move X0, 0x2194000
	025 Move X0, [X0+1224]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X21+1741], W8
	029 Move X0, [X20]
	030 Move W8, [X0+224]
	031 Compare W8, 0
	032 JumpIfNotEqual {34}
	033 Call 0x1C17DFC
	034 Move X21, 0x2194000
	035 Move X22, 0x2194000
	036 Move X21, [X21+1208]
	037 Move X22, [X22+1216]
	038 Move X0, X19
	039 Move X1, X31
	040 Move X2, X31
	041 Call Object.op_Equality, X0, X1
	042 Move W8, W0
	043 Move X0, X19
	044 Move TEMP, X8
	045 And TEMP, TEMP, 1
	046 Compare TEMP, 1
	047 JumpIfNotEqual {55}
	048 Move X0, [X22]
	049 Move W8, [X0+224]
	050 Compare W8, 0
	051 JumpIfNotEqual {53}
	052 Call 0x1C17DFC
	053 Move X0, X31
	054 Call GUI.get_skin
	055 Move X8, [X21]
	056 Move X8, [X8+184]
	057 Move [X8], X0
	058 Move X0, [X20]
	059 Move W8, [X0+224]
	060 Compare W8, 0
	061 JumpIfNotEqual {63}
	062 Call 0x1C17DFC
	063 Move X0, X19
	064 Move X1, X31
	065 Move X2, X31
	066 Call Object.op_Equality, X0, X1
	067 Move TEMP, X0
	068 And TEMP, TEMP, 1
	069 Compare TEMP, 1
	070 JumpIfNotEqual {299}
	071 Move X0, [X22]
	072 Move W8, [X0+224]
	073 Compare W8, 0
	074 JumpIfNotEqual {76}
	075 Call 0x1C17DFC
	076 Move X0, X31
	077 Call GUI.get_skin
	078 Move X8, [X21]
	079 Move X8, [X8+184]
	080 Move [X8], X0
	081 Move X8, [X21]
	082 Move X8, [X8+184]
	083 Move X0, [X8]
	084 Compare X0, 0
	085 JumpIfEqual {308}
	086 Move X1, X31
	087 Call GUISkin.get_button, X0
	088 Compare X0, 0
	089 JumpIfEqual {308}
	090 Move W1, 4
	091 Move X2, X31
	092 Call GUIStyle.set_alignment, X0, X1
	093 Move X8, [X21]
	094 Move X8, [X8+184]
	095 Move X0, [X8]
	096 Compare X0, 0
	097 JumpIfEqual {308}
	098 Move X1, X31
	099 Call GUISkin.get_label, X0
	100 Compare X0, 0
	101 JumpIfEqual {308}
	102 Move W1, 4
	103 Move X2, X31
	104 Call GUIStyle.set_alignment, X0, X1
	105 Move X8, [X21]
	106 Move X8, [X8+184]
	107 Move X0, [X8]
	108 Compare X0, 0
	109 JumpIfEqual {308}
	110 Move X1, X31
	111 Call GUISkin.get_textField, X0
	112 Compare X0, 0
	113 JumpIfEqual {308}
	114 Move W1, 4
	115 Move X2, X31
	116 Call GUIStyle.set_alignment, X0, X1
	117 Move X8, [X21]
	118 Move X8, [X8+184]
	119 Move X0, [X8]
	120 Compare X0, 0
	121 JumpIfEqual {308}
	122 Move X1, X31
	123 Call GUISkin.get_button, X0
	124 Compare X0, 0
	125 JumpIfEqual {308}
	126 Move X1, X31
	127 Call GUIStyle.get_normal, X0
	128 Move X8, [X21]
	129 Move X8, [X8+184]
	130 Move X8, [X8]
	131 Compare X8, 0
	132 JumpIfEqual {308}
	133 Move X19, X0
	134 Move X0, X8
	135 Move X1, X31
	136 Call GUISkin.get_box, X0
	137 Compare X0, 0
	138 JumpIfEqual {308}
	139 Move X1, X31
	140 Call GUIStyle.get_normal, X0
	141 Compare X0, 0
	142 JumpIfEqual {308}
	143 Move X1, X31
	144 Call GUIStyleState.get_background, X0
	145 Compare X19, 0
	146 JumpIfEqual {308}
	147 Move X1, X0
	148 Move X0, X19
	149 Move X2, X31
	150 Call GUIStyleState.set_background, X0, X1
	151 Move X8, [X21]
	152 Move X8, [X8+184]
	153 Move X0, [X8]
	154 Compare X0, 0
	155 JumpIfEqual {308}
	156 Move X1, X31
	157 Call GUISkin.get_button, X0
	158 Compare X0, 0
	159 JumpIfEqual {308}
	160 Move X1, X31
	161 Call GUIStyle.get_hover, X0
	162 Move X8, [X21]
	163 Move X8, [X8+184]
	164 Move X8, [X8]
	165 Compare X8, 0
	166 JumpIfEqual {308}
	167 Move X19, X0
	168 Move X0, X8
	169 Move X1, X31
	170 Call GUISkin.get_window, X0
	171 Compare X0, 0
	172 JumpIfEqual {308}
	173 Move X1, X31
	174 Call GUIStyle.get_normal, X0
	175 Compare X0, 0
	176 JumpIfEqual {308}
	177 Move X1, X31
	178 Call GUIStyleState.get_background, X0
	179 Compare X19, 0
	180 JumpIfEqual {308}
	181 Move X1, X0
	182 Move X0, X19
	183 Move X2, X31
	184 Call GUIStyleState.set_background, X0, X1
	185 Move X8, [X21]
	186 Move X8, [X8+184]
	187 Move X0, [X8]
	188 Compare X0, 0
	189 JumpIfEqual {308}
	190 Move X1, X31
	191 Call GUISkin.get_button, X0
	192 Compare X0, 0
	193 JumpIfEqual {308}
	194 Move X1, X31
	195 Call GUIStyle.get_normal, X0
	196 Compare X0, 0
	197 JumpIfEqual {308}
	198 Move X8, -21610496
	199 Move V0, [X8+92]
	200 Move S3, 1
	201 Move X1, X31
	202 Move V1, V0
	203 Move V2, V0
	204 Call GUIStyleState.set_textColor, X0, X1
	205 Move X8, [X21]
	206 Move X8, [X8+184]
	207 Move X0, [X8]
	208 Compare X0, 0
	209 JumpIfEqual {308}
	210 Move X1, X31
	211 Call GUISkin.get_button, X0
	212 Compare X0, 0
	213 JumpIfEqual {308}
	214 Move X1, X31
	215 Call GUIStyle.get_hover, X0
	216 Compare X0, 0
	217 JumpIfEqual {308}
	218 Move S0, 1
	219 Move S1, 1
	220 Move S2, 1
	221 Move S3, 1
	222 Move X1, X31
	223 Call GUIStyleState.set_textColor, X0, X1
	224 Move X8, [X21]
	225 Move X8, [X8+184]
	226 Move X0, [X8]
	227 Compare X0, 0
	228 JumpIfEqual {308}
	229 Move X1, X31
	230 Call GUISkin.get_button, X0
	231 Compare X0, 0
	232 JumpIfEqual {308}
	233 Move X1, X31
	234 Call GUIStyle.get_active, X0
	235 Compare X0, 0
	236 JumpIfEqual {308}
	237 Move S0, 1
	238 Move S1, 1
	239 Move S2, 1
	240 Move S3, 1
	241 Move X1, X31
	242 Call GUIStyleState.set_textColor, X0, X1
	243 Move X8, [X21]
	244 Move X8, [X8+184]
	245 Move X0, [X8]
	246 Compare X0, 0
	247 JumpIfEqual {308}
	248 Move X1, X31
	249 Call GUISkin.get_button, X0
	250 Move X22, 0x2194000
	251 Move X22, [X22+1224]
	252 Move X19, X0
	253 Move X8, [X22]
	254 Move X0, X8
	255 Call 0x1C17F10
	256 Move W1, 6
	257 Move W2, 6
	258 Move W3, 6
	259 Move W4, 6
	260 Move X5, X31
	261 Move X20, X0
	262 Call RectOffset..ctor, X0, X1, X2, X3, X4
	263 Compare X19, 0
	264 JumpIfEqual {308}
	265 Move X0, X19
	266 Move X1, X20
	267 Move X2, X31
	268 Call GUIStyle.set_border, X0, X1
	269 Move X8, [X21]
	270 Move X8, [X8+184]
	271 Move X0, [X8]
	272 Compare X0, 0
	273 JumpIfEqual {308}
	274 Move X1, X31
	275 Call GUISkin.get_window, X0
	276 Move X8, [X22]
	277 Move X19, X0
	278 Move X0, X8
	279 Call 0x1C17F10
	280 Move W1, 8
	281 Move W2, 8
	282 Move W3, 8
	283 Move W4, 10
	284 Move X5, X31
	285 Move X20, X0
	286 Call RectOffset..ctor, X0, X1, X2, X3, X4
	287 Compare X19, 0
	288 JumpIfEqual {308}
	289 Move X0, X19
	290 Move X1, X20
	291 Move X20, [X31+32]
	292 Move X19, [X31+40]
	293 Move X22, [X31+16]
	294 Move X21, [X31+24]
	295 Move X2, X31
	296 Move X30, [X31+48]
	297 Call GUIStyle.set_border, X0, X1
	298 Return 
	299 Move X8, [X21]
	300 Move X22, [X31+16]
	301 Move X21, [X31+24]
	302 Move X8, [X8+184]
	303 Move [X8], X19
	304 Move X20, [X31+32]
	305 Move X19, [X31+40]
	306 Move X30, [X31+48]
	307 Return 
	308 Call 0x1C17F20

Method: UnityEngine.GUISkin GetScaledSkin(UnityEngine.GUISkin baseSkin, out System.Single height, out System.Single width, out System.Int32 padding, out System.Int32 margin, out System.Single boxLeft)

Disassembly:
	0x01F87AE8 STP X20, X19, [X31 + 0x10]
	0x01F87AEC ADRP X20, 0x2452000
	0x01F87AF0 ADRP X19, 0x2193000
	0x01F87AF4 LDRB W8, [X20 + 0x6EA]
	0x01F87AF8 LDR X19, [X19 + 0x548]
	0x01F87AFC TBNZ X8, 0x0, 0x1F87B20
	0x01F87B00 ADRP X0, 0x2193000
	0x01F87B04 LDR X0, [X0 + 0x550]
	0x01F87B08 BL 0x1C16CF4
	0x01F87B0C ADRP X0, 0x2193000
	0x01F87B10 LDR X0, [X0 + 0x548]
	0x01F87B14 BL 0x1C16CF4
	0x01F87B18 MOVZ W8, 0x1
	0x01F87B1C STRB W8, [X20 + 0x6EA]
	0x01F87B20 LDR X0, [X19]
	0x01F87B24 LDR W8, [X0 + 0xE0]
	0x01F87B28 CBNZ W8, 0x1F87B34
	0x01F87B2C BL 0x1C16DFC
	0x01F87B30 LDR X0, [X19]
	0x01F87B34 LDR X8, [X0 + 0xB8]
	0x01F87B38 LDR X0, [X8 + 0x20]
	0x01F87B3C CBZ X0, 0x1F87B58
	0x01F87B40 ADRP X8, 0x2193000
	0x01F87B44 LDR X8, [X8 + 0x550]
	0x01F87B48 LDP X20, X19, [X31 + 0x10]
	0x01F87B4C LDR X1, [X8]
	0x01F87B50 LDR X30, [X31], #0x20
	0x01F87B54 B 0x2AA5220
	0x01F87B58 BL 0x1C16F20
	0x01F87B5C STR X30, [X31 - 0x30]!
	0x01F87B60 STP X22, X21, [X31 + 0x10]
	0x01F87B64 STP X20, X19, [X31 + 0x20]
	0x01F87B68 ADRP X19, 0x2452000
	0x01F87B6C ADRP X20, 0x216C000
	0x01F87B70 LDRB W8, [X19 + 0x6D9]
	0x01F87B74 LDR X20, [X20 + 0xAC8]
	0x01F87B78 TBNZ X8, 0x0, 0x1F87C38
	0x01F87B7C ADRP X0, 0x2193000
	0x01F87B80 LDR X0, [X0 + 0x558]
	0x01F87B84 BL 0x1C16CF4
	0x01F87B88 ADRP X0, 0x2193000
	0x01F87B8C LDR X0, [X0 + 0x560]
	0x01F87B90 BL 0x1C16CF4
	0x01F87B94 ADRP X0, 0x2193000
	0x01F87B98 LDR X0, [X0 + 0x568]
	0x01F87B9C BL 0x1C16CF4
	0x01F87BA0 ADRP X0, 0x2193000
	0x01F87BA4 LDR X0, [X0 + 0x570]
	0x01F87BA8 BL 0x1C16CF4
	0x01F87BAC ADRP X0, 0x2193000
	0x01F87BB0 LDR X0, [X0 + 0x578]
	0x01F87BB4 BL 0x1C16CF4
	0x01F87BB8 ADRP X0, 0x2193000
	0x01F87BBC LDR X0, [X0 + 0x580]
	0x01F87BC0 BL 0x1C16CF4
	0x01F87BC4 ADRP X0, 0x2193000
	0x01F87BC8 LDR X0, [X0 + 0x588]
	0x01F87BCC BL 0x1C16CF4
	0x01F87BD0 ADRP X0, 0x2193000
	0x01F87BD4 LDR X0, [X0 + 0x590]
	0x01F87BD8 BL 0x1C16CF4

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+32], X30
	003 Move [X31+40], X27
	004 Move [X31+48], X26
	005 Move [X31+56], X25
	006 Move [X31+64], X24
	007 Move [X31+72], X23
	008 Move [X31+80], X22
	009 Move [X31+88], X21
	010 Move [X31+96], X20
	011 Move [X31+104], X19
	012 Move X27, 0x2453000
	013 Move X26, 0x2194000
	014 Move X25, 0x216D000
	015 Move W8, [X27+1742]
	016 Move X26, [X26+1208]
	017 Move X25, [X25+1432]
	018 Move X19, X5
	019 Move X20, X4
	020 Move X21, X3
	021 Move X22, X2
	022 Move X23, X1
	023 Move X24, X0
	024 Move TEMP, X8
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {36}
	028 Move X0, 0x2194000
	029 Move X0, [X0+1208]
	030 Call 0x1C17CF4
	031 Move X0, 0x216D000
	032 Move X0, [X0+1432]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X27+1742], W8
	036 Move X8, [X26]
	037 Move X0, [X25]
	038 Move X8, [X8+184]
	039 Move W9, [X0+224]
	040 Move X25, [X8]
	041 Compare W9, 0
	042 JumpIfNotEqual {44}
	043 Call 0x1C17DFC
	044 Move X0, X25
	045 Move X1, X31
	046 Move X2, X31
	047 Call Object.op_Equality, X0, X1
	048 Move TEMP, X0
	049 And TEMP, TEMP, 1
	050 Compare TEMP, 1
	051 JumpIfNotEqual {54}
	052 Move X0, X24
	053 Call FusionScalableIMGUI.InitializedGUIStyles, X0
	054 Add X8, X31, 8
	055 Call FusionScalableIMGUI.ScaleGuiSkinToScreenHeight
	056 Move S0, [X31+8]
	057 Move S1, [X31+12]
	058 Move W8, [X31+16]
	059 Move W9, [X31+20]
	060 Move V2, [X31+24]
	061 Move X30, [X31+32]
	062 Move X27, [X31+40]
	063 Move [X23], S0
	064 Move [X22], S1
	065 Move [X21], W8
	066 Move [X20], W9
	067 Move [X19], S2
	068 Move X8, [X26]
	069 Move X20, [X31+96]
	070 Move X19, [X31+104]
	071 Move X22, [X31+80]
	072 Move X21, [X31+88]
	073 Move X24, [X31+64]
	074 Move X23, [X31+72]
	075 Move X8, [X8+184]
	076 Move X26, [X31+48]
	077 Move X25, [X31+56]
	078 Move X0, [X8]
	079 Add X31, X31, 112
	080 Return X0

Method: System.ValueTuple`5<System.Single, System.Single, System.Int32, System.Int32, System.Single> ScaleGuiSkinToScreenHeight()

Disassembly:
	0x01F87BDC ADRP X0, 0x2193000
	0x01F87BE0 LDR X0, [X0 + 0x598]
	0x01F87BE4 BL 0x1C16CF4
	0x01F87BE8 ADRP X0, 0x2193000
	0x01F87BEC LDR X0, [X0 + 0x548]
	0x01F87BF0 BL 0x1C16CF4
	0x01F87BF4 ADRP X0, 0x2193000
	0x01F87BF8 LDR X0, [X0 + 0x5A0]
	0x01F87BFC BL 0x1C16CF4
	0x01F87C00 ADRP X0, 0x216C000
	0x01F87C04 LDR X0, [X0 + 0xAC8]
	0x01F87C08 BL 0x1C16CF4
	0x01F87C0C ADRP X0, 0x2174000
	0x01F87C10 LDR X0, [X0 + 0xC60]
	0x01F87C14 BL 0x1C16CF4
	0x01F87C18 ADRP X0, 0x216C000
	0x01F87C1C LDR X0, [X0 + 0x6C0]
	0x01F87C20 BL 0x1C16CF4
	0x01F87C24 ADRP X0, 0x2193000
	0x01F87C28 LDR X0, [X0 + 0x5A8]
	0x01F87C2C BL 0x1C16CF4
	0x01F87C30 MOVZ W8, 0x1
	0x01F87C34 STRB W8, [X19 + 0x6D9]
	0x01F87C38 LDR X0, [X20]
	0x01F87C3C MOVZ W1, 0x1
	0x01F87C40 BL 0x1C16D6C
	0x01F87C44 CBZ X0, 0x1F87EB8
	0x01F87C48 LDR W8, [X0 + 0x18]
	0x01F87C4C CBZ W8, 0x1F87EA8
	0x01F87C50 ADRP X8, 0x2193000
	0x01F87C54 LDR X8, [X8 + 0x5A8]
	0x01F87C58 ADRP X21, 0x2193000
	0x01F87C5C ADRP X9, 0x2174000
	0x01F87C60 ADRP X19, 0x2193000
	0x01F87C64 LDR X8, [X8]
	0x01F87C68 LDR X21, [X21 + 0x548]
	0x01F87C6C ADRP X20, 0x216C000
	0x01F87C70 MOVZ W1, 0x6
	0x01F87C74 STR X8, [X0 + 0x20]
	0x01F87C78 LDR X8, [X21]
	0x01F87C7C LDR X8, [X8 + 0xB8]
	0x01F87C80 LDR X9, [X9 + 0xC60]
	0x01F87C84 STR X0, [X8]
	0x01F87C88 LDR X0, [X9]
	0x01F87C8C LDR X19, [X19 + 0x590]
	0x01F87C90 LDR X20, [X20 + 0x6C0]
	0x01F87C94 BL 0x1C16D6C
	0x01F87C98 LDR X8, [X20]
	0x01F87C9C LDR X20, [X19]
	0x01F87CA0 MOV X19, X0
	0x01F87CA4 LDR W9, [X8 + 0xE0]
	0x01F87CA8 CBNZ W9, 0x1F87CB4
	0x01F87CAC MOV X0, X8
	0x01F87CB0 BL 0x1C16DFC
	0x01F87CB4 MOV X0, X20
	0x01F87CB8 MOV X1, X31
	0x01F87CBC BL 0x338C698
	0x01F87CC0 CBZ X19, 0x1F87EB8
	0x01F87CC4 MOV X20, X0
	0x01F87CC8 CBZ X0, 0x1F87CE0
	0x01F87CCC LDR X8, [X19]
	0x01F87CD0 MOV X0, X20
	0x01F87CD4 LDR X1, [X8 + 0x40]
	0x01F87CD8 BL 0x1C16E00
	0x01F87CDC CBZ X0, 0x1F87EAC
	0x01F87CE0 LDR W8, [X19 + 0x18]
	0x01F87CE4 CBZ W8, 0x1F87EA8
	0x01F87CE8 ADRP X8, 0x2193000
	0x01F87CEC LDR X8, [X8 + 0x5A0]
	0x01F87CF0 STR X20, [X19 + 0x20]
	0x01F87CF4 MOV X1, X31
	0x01F87CF8 LDR X0, [X8]
	0x01F87CFC BL 0x338C698
	0x01F87D00 MOV X20, X0
	0x01F87D04 CBZ X0, 0x1F87D1C
	0x01F87D08 LDR X8, [X19]
	0x01F87D0C MOV X0, X20
	0x01F87D10 LDR X1, [X8 + 0x40]
	0x01F87D14 BL 0x1C16E00
	0x01F87D18 CBZ X0, 0x1F87EAC
	0x01F87D1C LDR W8, [X19 + 0x18]
	0x01F87D20 CMP W8, 0x1
	0x01F87D24 B.LS 0x1F87EA8
	0x01F87D28 ADRP X8, 0x2193000
	0x01F87D2C LDR X8, [X8 + 0x558]
	0x01F87D30 STR X20, [X19 + 0x28]
	0x01F87D34 MOV X1, X31
	0x01F87D38 LDR X0, [X8]
	0x01F87D3C BL 0x338C698
	0x01F87D40 MOV X20, X0
	0x01F87D44 CBZ X0, 0x1F87D5C
	0x01F87D48 LDR X8, [X19]
	0x01F87D4C MOV X0, X20
	0x01F87D50 LDR X1, [X8 + 0x40]
	0x01F87D54 BL 0x1C16E00
	0x01F87D58 CBZ X0, 0x1F87EAC
	0x01F87D5C LDR W8, [X19 + 0x18]
	0x01F87D60 CMP W8, 0x2
	0x01F87D64 B.LS 0x1F87EA8
	0x01F87D68 ADRP X8, 0x2193000
	0x01F87D6C LDR X8, [X8 + 0x560]
	0x01F87D70 STR X20, [X19 + 0x30]
	0x01F87D74 MOV X1, X31
	0x01F87D78 LDR X0, [X8]
	0x01F87D7C BL 0x338C698
	0x01F87D80 MOV X20, X0
	0x01F87D84 CBZ X0, 0x1F87D9C
	0x01F87D88 LDR X8, [X19]
	0x01F87D8C MOV X0, X20
	0x01F87D90 LDR X1, [X8 + 0x40]
	0x01F87D94 BL 0x1C16E00
	0x01F87D98 CBZ X0, 0x1F87EAC
	0x01F87D9C LDR W8, [X19 + 0x18]
	0x01F87DA0 CMP W8, 0x3
	0x01F87DA4 B.LS 0x1F87EA8
	0x01F87DA8 ADRP X8, 0x2193000
	0x01F87DAC LDR X8, [X8 + 0x568]
	0x01F87DB0 STR X20, [X19 + 0x38]
	0x01F87DB4 MOV X1, X31
	0x01F87DB8 LDR X0, [X8]
	0x01F87DBC BL 0x338C698
	0x01F87DC0 MOV X20, X0
	0x01F87DC4 CBZ X0, 0x1F87DDC
	0x01F87DC8 LDR X8, [X19]
	0x01F87DCC MOV X0, X20
	0x01F87DD0 LDR X1, [X8 + 0x40]
	0x01F87DD4 BL 0x1C16E00
	0x01F87DD8 CBZ X0, 0x1F87EAC
	0x01F87DDC LDR W8, [X19 + 0x18]
	0x01F87DE0 CMP W8, 0x4
	0x01F87DE4 B.LS 0x1F87EA8
	0x01F87DE8 ADRP X8, 0x2193000
	0x01F87DEC LDR X8, [X8 + 0x598]
	0x01F87DF0 STR X20, [X19 + 0x40]
	0x01F87DF4 MOV X1, X31
	0x01F87DF8 LDR X0, [X8]
	0x01F87DFC BL 0x338C698
	0x01F87E00 MOV X20, X0
	0x01F87E04 CBZ X0, 0x1F87E1C
	0x01F87E08 LDR X8, [X19]
	0x01F87E0C MOV X0, X20
	0x01F87E10 LDR X1, [X8 + 0x40]
	0x01F87E14 BL 0x1C16E00
	0x01F87E18 CBZ X0, 0x1F87EAC
	0x01F87E1C LDR W8, [X19 + 0x18]
	0x01F87E20 CMP W8, 0x5
	0x01F87E24 B.LS 0x1F87EA8
	0x01F87E28 STR X20, [X19 + 0x48]
	0x01F87E2C LDR X8, [X21]
	0x01F87E30 ADRP X9, 0x2193000
	0x01F87E34 ADRP X20, 0x2193000
	0x01F87E38 ADRP X22, 0x2193000
	0x01F87E3C LDR X8, [X8 + 0xB8]
	0x01F87E40 LDR X9, [X9 + 0x588]
	0x01F87E44 STR X19, [X8 + 0x8]
	0x01F87E48 LDR X0, [X9]
	0x01F87E4C ADRP X19, 0x2193000
	0x01F87E50 LDR X19, [X19 + 0x578]
	0x01F87E54 LDR X20, [X20 + 0x580]
	0x01F87E58 LDR X22, [X22 + 0x570]
	0x01F87E5C BL 0x1C16F10
	0x01F87E60 LDR X1, [X19]
	0x01F87E64 MOV X19, X0
	0x01F87E68 BL 0x2AA4804
	0x01F87E6C LDR X8, [X21]
	0x01F87E70 LDR X8, [X8 + 0xB8]
	0x01F87E74 STR X19, [X8 + 0x20]
	0x01F87E78 LDR X0, [X20]
	0x01F87E7C BL 0x1C16F10
	0x01F87E80 LDR X1, [X22]
	0x01F87E84 MOV X19, X0
	0x01F87E88 BL 0x2AA4804
	0x01F87E8C LDR X8, [X21]
	0x01F87E90 LDP X22, X21, [X31 + 0x10]
	0x01F87E94 LDR X8, [X8 + 0xB8]
	0x01F87E98 STR X19, [X8 + 0x10]
	0x01F87E9C LDP X20, X19, [X31 + 0x20]
	0x01F87EA0 LDR X30, [X31], #0x30
	0x01F87EA4 RET
	0x01F87EA8 BL 0x1C16F28
	0x01F87EAC BL 0x1C16F44
	0x01F87EB0 MOV X1, X31
	0x01F87EB4 BL 0x1C16DEC
	0x01F87EB8 BL 0x1C16F20
	0x01F87EBC STR X30, [X31 - 0x20]!
	0x01F87EC0 STP X20, X19, [X31 + 0x10]
	0x01F87EC4 ADRP X20, 0x2452000
	0x01F87EC8 ADRP X19, 0x2193000
	0x01F87ECC LDRB W8, [X20 + 0x6DA]
	0x01F87ED0 LDR X19, [X19 + 0x548]
	0x01F87ED4 TBNZ X8, 0x0, 0x1F87EEC
	0x01F87ED8 ADRP X0, 0x2193000
	0x01F87EDC LDR X0, [X0 + 0x548]
	0x01F87EE0 BL 0x1C16CF4
	0x01F87EE4 MOVZ W8, 0x1
	0x01F87EE8 STRB W8, [X20 + 0x6DA]
	0x01F87EEC LDR X0, [X19]
	0x01F87EF0 LDR W8, [X0 + 0xE0]
	0x01F87EF4 CBNZ W8, 0x1F87F00
	0x01F87EF8 BL 0x1C16DFC
	0x01F87EFC LDR X0, [X19]
	0x01F87F00 LDR X8, [X0 + 0xB8]
	0x01F87F04 LDP X20, X19, [X31 + 0x10]
	0x01F87F08 STRB W31, [X8 + 0x18]
	0x01F87F0C LDR X30, [X31], #0x20
	0x01F87F10 B 0x1F87F14
	0x01F87F14 SUB X31, X31, 0x110
	0x01F87F18 STP X29, X30, [X31 + 0xB0]
	0x01F87F1C STP X28, X27, [X31 + 0xC0]
	0x01F87F20 STP X26, X25, [X31 + 0xD0]
	0x01F87F24 STP X24, X23, [X31 + 0xE0]
	0x01F87F28 STP X22, X21, [X31 + 0xF0]
	0x01F87F2C STP X20, X19, [X31 + 0x100]
	0x01F87F30 ADRP X20, 0x2452000
	0x01F87F34 ADRP X19, 0x2175000
	0x01F87F38 LDRB W8, [X20 + 0x6E9]
	0x01F87F3C LDR X19, [X19 + 0xE80]
	0x01F87F40 TBNZ X8, 0x0, 0x1F8800C
	0x01F87F44 ADRP X0, 0x2193000
	0x01F87F48 LDR X0, [X0 + 0x5B0]
	0x01F87F4C BL 0x1C16CF4
	0x01F87F50 ADRP X0, 0x2193000
	0x01F87F54 LDR X0, [X0 + 0x5B8]
	0x01F87F58 BL 0x1C16CF4
	0x01F87F5C ADRP X0, 0x2193000
	0x01F87F60 LDR X0, [X0 + 0x5C0]
	0x01F87F64 BL 0x1C16CF4
	0x01F87F68 ADRP X0, 0x2193000
	0x01F87F6C LDR X0, [X0 + 0x5C8]
	0x01F87F70 BL 0x1C16CF4
	0x01F87F74 ADRP X0, 0x2193000
	0x01F87F78 LDR X0, [X0 + 0x5D0]
	0x01F87F7C BL 0x1C16CF4
	0x01F87F80 ADRP X0, 0x2193000
	0x01F87F84 LDR X0, [X0 + 0x5D8]
	0x01F87F88 BL 0x1C16CF4
	0x01F87F8C ADRP X0, 0x2193000
	0x01F87F90 LDR X0, [X0 + 0x5E0]
	0x01F87F94 BL 0x1C16CF4
	0x01F87F98 ADRP X0, 0x2193000
	0x01F87F9C LDR X0, [X0 + 0x5E8]
	0x01F87FA0 BL 0x1C16CF4
	0x01F87FA4 ADRP X0, 0x2193000

ISIL:
	001 Move [X31-112], D10
	002 Move [X31+16], D9
	003 Move [X31+24], D8
	004 Move [X31+32], X30
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X20, 0x2453000
	015 Move X21, 0x216D000
	016 Move X19, X8
	017 Move W8, [X20+1743]
	018 Move X21, [X21+1448]
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {37}
	023 Move X0, 0x2194000
	024 Move X0, [X0+1208]
	025 Call 0x1C17CF4
	026 Move X0, 0x216D000
	027 Move X0, [X0+1448]
	028 Call 0x1C17CF4
	029 Move X0, 0x2194000
	030 Move X0, [X0+1224]
	031 Call 0x1C17CF4
	032 Move X0, 0x2194000
	033 Move X0, [X0+1232]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X20+1743], W8
	037 Move X0, X31
	038 Call Screen.get_height
	039 Move X0, X31
	040 Call Screen.get_width
	041 Move X0, X31
	042 Call Screen.get_height
	043 Move W22, W0
	044 Move X0, X31
	045 Call Screen.get_width
	046 Move W23, W0
	047 Move X0, X31
	048 Call Screen.get_height
	049 Move X8, -21610496
	050 Move V0, [X8+968]
	051 NotImplemented "Instruction SCVTF not yet implemented."
	052 Move X0, X31
	053 Multiply S8, S1, S0
	054 Call Screen.get_width
	055 Move W20, W0
	056 Move X0, X31
	057 Call Screen.get_height
	058 Move X8, [X21]
	059 Move W21, W0
	060 Move W9, [X8+224]
	061 Compare W9, 0
	062 JumpIfNotEqual {65}
	063 Move X0, X8
	064 Call 0x1C17DFC
	065 Move X8, -21610496
	066 Move X9, -21610496
	067 Move V0, [X8+196]
	068 Move V1, [X9+144]
	069 Move X26, 0x2194000
	070 Move X27, 0x2194000
	071 Move X26, [X26+1224]
	072 Move X27, [X27+1208]
	073 NotImplemented "Instruction SCVTF not yet implemented."
	074 NotImplemented "Instruction SCVTF not yet implemented."
	075 Multiply S0, S2, S0
	076 Multiply S1, S3, S1
	077 Move X0, X31
	078 Call Math.Min, V0, V1
	079 Move V9, V0
	080 Move S0, 0.25
	081 Move W8, 0x7F800000
	082 Move S1, 0.125
	083 Multiply S0, S8, S0
	084 Move S2, W8
	085 Move W9, 0x80000000
	086 Multiply S1, S8, S1
	087 NotImplemented "Instruction FCVTZS not yet implemented."
	088 NotImplemented "Instruction FCMP not yet implemented."
	089 NotImplemented "Instruction FCVTZS not yet implemented."
	090 NotImplemented "Instruction CSEL not yet implemented."
	091 NotImplemented "Instruction FCMP not yet implemented."
	092 Move X0, X31
	093 NotImplemented "Instruction CSEL not yet implemented."
	094 Call Screen.get_width
	095 NotImplemented "Instruction SDIV not yet implemented."
	096 NotImplemented "Instruction CMP not yet implemented."
	097 Move W22, W0
	098 Move X8, -21610496
	099 Move V0, [X8+712]
	100 Move W8, W20
	101 ShiftRight W8, 31
	102 And W8, W8, 0x3FFFFFFF
	103 NotImplemented "Instruction SCVTF not yet implemented."
	104 Subtract S1, S9, S1
	105 Multiply S0, S1, S0
	106 Move X8, -21610496
	107 Move V0, [X8+780]
	108 Multiply S0, S8, S0
	109 Move X0, [X26]
	110 Move W9, 0x7F800000
	111 Move S1, W9
	112 NotImplemented "Instruction FCVTZS not yet implemented."
	113 NotImplemented "Instruction FCMP not yet implemented."
	114 Move W9, 0x80000000
	115 NotImplemented "Instruction CSEL not yet implemented."
	116 Call 0x1C17F10
	117 Move W1, W31
	118 Move W2, W31
	119 Move W3, W21
	120 Move W4, W21
	121 Move X5, X31
	122 Move X24, X0
	123 Call RectOffset..ctor, X0, X1, X2, X3, X4
	124 Move X8, [X27]
	125 Move X8, [X8+184]
	126 Move X0, [X8]
	127 Compare X0, 0
	128 JumpIfEqual {275}
	129 Move X1, X31
	130 Call GUISkin.get_button, X0
	131 Compare X0, 0
	132 JumpIfEqual {275}
	133 Move W1, W23
	134 Move X2, X31
	135 Call GUIStyle.set_fontSize, X0, X1
	136 Move X8, [X27]
	137 Move X8, [X8+184]
	138 Move X0, [X8]
	139 Compare X0, 0
	140 JumpIfEqual {275}
	141 Move X1, X31
	142 Call GUISkin.get_button, X0
	143 Compare X0, 0
	144 JumpIfEqual {275}
	145 Move X1, X24
	146 Move X2, X31
	147 Call GUIStyle.set_margin, X0, X1
	148 Move X8, [X27]
	149 Move X8, [X8+184]
	150 Move X0, [X8]
	151 Compare X0, 0
	152 JumpIfEqual {275}
	153 Move X1, X31
	154 Call GUISkin.get_label, X0
	155 Compare X0, 0
	156 JumpIfEqual {275}
	157 Move W1, W23
	158 Move X2, X31
	159 Call GUIStyle.set_fontSize, X0, X1
	160 Move X8, [X27]
	161 Move X8, [X8+184]
	162 Move X0, [X8]
	163 Compare X0, 0
	164 JumpIfEqual {275}
	165 Move X1, X31
	166 Call GUISkin.get_label, X0
	167 Move X8, [X26]
	168 Move X24, X0
	169 Move X0, X8
	170 Call 0x1C17F10
	171 Move W1, W20
	172 Move W2, W20
	173 Move W3, W20
	174 Move W4, W20
	175 Move X5, X31
	176 Move X25, X0
	177 Call RectOffset..ctor, X0, X1, X2, X3, X4
	178 Compare X24, 0
	179 JumpIfEqual {275}
	180 Move X0, X24
	181 Move X1, X25
	182 Move X2, X31
	183 Call GUIStyle.set_padding, X0, X1
	184 Move X8, [X27]
	185 Move X8, [X8+184]
	186 Move X0, [X8]
	187 Compare X0, 0
	188 JumpIfEqual {275}
	189 Move X1, X31
	190 Call GUISkin.get_textField, X0
	191 Compare X0, 0
	192 JumpIfEqual {275}
	193 Move W1, W23
	194 Move X2, X31
	195 Call GUIStyle.set_fontSize, X0, X1
	196 Move X8, [X27]
	197 Move X8, [X8+184]
	198 Move X0, [X8]
	199 Compare X0, 0
	200 JumpIfEqual {275}
	201 Move X1, X31
	202 Call GUISkin.get_window, X0
	203 Move X8, [X26]
	204 Move X23, X0
	205 Move X0, X8
	206 Call 0x1C17F10
	207 Move W1, W20
	208 Move W2, W20
	209 Move W3, W20
	210 Move W4, W20
	211 Move X5, X31
	212 Move X24, X0
	213 Call RectOffset..ctor, X0, X1, X2, X3, X4
	214 Compare X23, 0
	215 JumpIfEqual {275}
	216 Move X0, X23
	217 Move X1, X24
	218 Move X2, X31
	219 Call GUIStyle.set_padding, X0, X1
	220 Move X8, [X27]
	221 Move X8, [X8+184]
	222 Move X0, [X8]
	223 Compare X0, 0
	224 JumpIfEqual {275}
	225 Move X1, X31
	226 Call GUISkin.get_window, X0
	227 Move X8, [X26]
	228 Move X23, X0
	229 Move X0, X8
	230 Call 0x1C17F10
	231 Move W1, W21
	232 Move W2, W21
	233 Move W3, W21
	234 Move W4, W21
	235 Move X5, X31
	236 Move X24, X0
	237 Call RectOffset..ctor, X0, X1, X2, X3, X4
	238 Compare X23, 0
	239 JumpIfEqual {275}
	240 Move X25, 0x2194000
	241 Move X25, [X25+1232]
	242 NotImplemented "Instruction SCVTF not yet implemented."
	243 Subtract S0, S0, S9
	244 Move S1, 0.5
	245 Move X0, X23
	246 Move X1, X24
	247 Move X2, X31
	248 Multiply S10, S0, S1
	249 Call GUIStyle.set_margin, X0, X1
	250 Move X3, [X25]
	251 Move [X19], X31
	252 Move [X19+8], X31
	253 Move [X19+16], W31
	254 Move X0, X19
	255 Move V0, V8
	256 Move V1, V9
	257 Move W1, W20
	258 Move W2, W21
	259 Move X20, [X31+96]
	260 Move X19, [X31+104]
	261 Move X22, [X31+80]
	262 Move X21, [X31+88]
	263 Move X24, [X31+64]
	264 Move X23, [X31+72]
	265 Move X26, [X31+48]
	266 Move X25, [X31+56]
	267 Move X30, [X31+32]
	268 Move X27, [X31+40]
	269 Move D9, [X31+16]
	270 Move D8, [X31+24]
	271 Move V2, V10
	272 Move V10, [X31+112]
	273 Call ValueTuple`5<Single, Single, Int32, Int32, Single>..ctor, X0, V0, V1, X1, X2, V2
	274 Return X0
	275 Call 0x1C17F20

