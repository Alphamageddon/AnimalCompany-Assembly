Type: Fusion.NetworkAssetSourceStaticLazy`1

Method: UnityEngine.LazyLoadReference`1<T> get_Prefab()

Disassembly:
	0x02414E4C ADD X8, X24, 0x135
	0x02414E50 LDRH W8, [X8]

ISIL:
	001 Move W0, [X0+16]
	002 Return X0

Method: System.Void set_Prefab(UnityEngine.LazyLoadReference`1<T> value)

Disassembly:
	0x02414E54 TBNZ X8, 0x0, 0x2414E70
	0x02414E58 MOV X0, X24

ISIL:
	001 Move [X0+16], W1
	002 Return 

Method: System.Boolean get_IsCompleted()

Disassembly:
	0x02414E5C BL 0x1C5C684
	0x02414E60 LDR X24, [X19 + 0x20]

ISIL:
	001 Move W0, 1
	002 Return X0

Method: System.Void Acquire(System.Boolean synchronous)

Disassembly:
	0x02414E64 ADD X8, X24, 0x135

ISIL:
	001 Return 

Method: System.Void Release()

Disassembly:
	0x02414E68 LDRH W8, [X8]

ISIL:
	001 Return 

Method: T WaitForResult()

Disassembly:
	0x02414E6C B 0x2414E74
	0x02414E70 MOV X0, X24
	0x02414E74 LDR X9, [X0 + 0xC0]
	0x02414E78 LDR X9, [X9 + 0x78]
	0x02414E7C LDR X26, [X9]
	0x02414E80 TBNZ X8, 0x0, 0x2414E9C
	0x02414E84 MOV X0, X24
	0x02414E88 BL 0x1C5C684
	0x02414E8C LDR X24, [X19 + 0x20]
	0x02414E90 ADD X8, X24, 0x135
	0x02414E94 LDRH W8, [X8]
	0x02414E98 B 0x2414EA0
	0x02414E9C MOV X0, X24
	0x02414EA0 LDR X9, [X0 + 0xC0]
	0x02414EA4 LDR X27, [X9 + 0x78]
	0x02414EA8 TBNZ X8, 0x0, 0x2414EB8
	0x02414EAC MOV X0, X24
	0x02414EB0 BL 0x1C5C684
	0x02414EB4 MOV X24, X0
	0x02414EB8 LDR X8, [X24 + 0xC0]
	0x02414EBC LDR X8, [X8 + 0x58]
	0x02414EC0 LDR W8, [X8 + 0x28]
	0x02414EC4 TBNZ X8, 0x1F, 0x2414ECC
	0x02414EC8 LDR X25, [X25]
	0x02414ECC STUR X25, [X29 - 0x20]
	0x02414ED0 LDR X8, [X27 + 0x10]
	0x02414ED4 SUB X3, X29, 0x20
	0x02414ED8 SUB X4, X29, 0xC
	0x02414EDC MOV X0, X26
	0x02414EE0 MOV X1, X27
	0x02414EE4 MOV X2, X21
	0x02414EE8 BLR X8
	0x02414EEC LDUR W25, [X29 - 0xC]
	0x02414EF0 CBZ W25, 0x2414F1C
	0x02414EF4 LDR X8, [X19 + 0x20]
	0x02414EF8 ADD X9, X8, 0x135
	0x02414EFC LDRH W9, [X9]
	0x02414F00 TBNZ X9, 0x0, 0x2414F34
	0x02414F04 MOV X0, X8
	0x02414F08 BL 0x1C5C684
	0x02414F0C LDR X8, [X19 + 0x20]
	0x02414F10 ADD X9, X8, 0x135
	0x02414F14 LDRH W9, [X9]
	0x02414F18 B 0x2414F38
	0x02414F1C MOV X0, X20
	0x02414F20 MOV W1, W31
	0x02414F24 MOV X2, X22
	0x02414F28 BL 0x3EB1B10
	0x02414F2C MOV W0, W31
	0x02414F30 B 0x2414FB8
	0x02414F34 MOV X0, X8
	0x02414F38 LDR X10, [X0 + 0xC0]
	0x02414F3C LDR X10, [X10 + 0x80]
	0x02414F40 LDR X24, [X10]
	0x02414F44 TBNZ X9, 0x0, 0x2414F54

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x1FC6000
	007 Move X21, 0x1CE0000
	008 Move W8, [X22+2491]
	009 Move X21, [X21+1432]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x1CE0000
	017 Move X0, [X0+1432]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+2491], W8
	021 Move X8, [X19+32]
	022 Add X20, X20, 16
	023 Move X0, X20
	024 Move X8, [X8+192]
	025 Move X1, [X8+16]
	026 Call 0x2EE9600, X0
	027 Move X8, [X21]
	028 Move X21, X0
	029 Move W9, [X8+224]
	030 Compare W9, 0
	031 JumpIfNotEqual {34}
	032 Move X0, X8
	033 Call 0x1C17DFC
	034 Move X0, X21
	035 Move X1, X31
	036 Move X2, X31
	037 Call Object.op_Equality, X0, X1
	038 Move TEMP, X0
	039 And TEMP, TEMP, 1
	040 Compare TEMP, 1
	041 JumpIfEqual {53}
	042 Move X8, [X19+32]
	043 Move X0, X20
	044 Move X20, [X31+32]
	045 Move X19, [X31+40]
	046 Move X22, [X31+16]
	047 Move X21, [X31+24]
	048 Move X8, [X8+192]
	049 Move X1, [X8+16]
	050 Move X30, [X31+48]
	051 Call 0x2EE9600, X0
	052 Return X0
	053 Move X0, 0x1CE0000
	054 Move X0, [X0+1456]
	055 Call 0x1C17D08
	056 Call 0x1C17F10
	057 Move X20, X0
	058 Move X0, 0x1D09000
	059 Move X0, [X0+3128]
	060 Call 0x1C17D08
	061 Move X1, X0
	062 Move X0, X20
	063 Move X2, X31
	064 Call InvalidOperationException..ctor, X0, X1
	065 Move X0, X20
	066 Move X1, X19
	067 Call 0x1C17DEC

Method: System.String get_Description()

Disassembly:
	0x02414F48 MOV X0, X8
	0x02414F4C BL 0x1C5C684
	0x02414F50 MOV X8, X0
	0x02414F54 LDR X8, [X8 + 0xC0]
	0x02414F58 SUB X3, X29, 0x20
	0x02414F5C MOV X0, X24
	0x02414F60 MOV X2, X21
	0x02414F64 LDR X1, [X8 + 0x80]
	0x02414F68 SUB X8, X29, 0xC
	0x02414F6C STUR W25, [X29 - 0xC]
	0x02414F70 STP X8, X23, [X29 - 0x20]
	0x02414F74 LDR X8, [X1 + 0x10]
	0x02414F78 MOV X4, X23
	0x02414F7C BLR X8
	0x02414F80 MOV X0, X20
	0x02414F84 MOV X1, X23
	0x02414F88 MOV X2, X22
	0x02414F8C BL 0x3EB1AC0
	0x02414F90 LDR X0, [X19 + 0x20]
	0x02414F94 LDRB W8, [X0 + 0x135]
	0x02414F98 TBNZ X8, 0x0, 0x2414FA0
	0x02414F9C BL 0x1C5C684
	0x02414FA0 LDR X8, [X0 + 0xC0]
	0x02414FA4 LDR X0, [X8 + 0x70]
	0x02414FA8 LDRB W8, [X0 + 0x135]
	0x02414FAC TBNZ X8, 0x0, 0x2414FB4
	0x02414FB0 BL 0x1C5C684
	0x02414FB4 MOVZ W0, 0x1
	0x02414FB8 LDR X8, [X28 + 0x28]
	0x02414FBC LDUR X9, [X29 - 0x8]
	0x02414FC0 CMP X8, X9
	0x02414FC4 B.NE 0x2414FE8
	0x02414FC8 ADD X31, X29, 0x0
	0x02414FCC LDP X20, X19, [X31 + 0x50]
	0x02414FD0 LDP X22, X21, [X31 + 0x40]
	0x02414FD4 LDP X24, X23, [X31 + 0x30]
	0x02414FD8 LDP X26, X25, [X31 + 0x20]
	0x02414FDC LDP X28, X27, [X31 + 0x10]
	0x02414FE0 LDP X29, X30, [X31], #0x60
	0x02414FE4 RET
	0x02414FE8 BL 0x3EB1B20
	0x02414FEC STP X29, X30, [X31 - 0x60]!
	0x02414FF0 STP X28, X27, [X31 + 0x10]
	0x02414FF4 STP X26, X25, [X31 + 0x20]
	0x02414FF8 STP X24, X23, [X31 + 0x30]
	0x02414FFC STP X22, X21, [X31 + 0x40]
	0x02415000 STP X20, X19, [X31 + 0x50]
	0x02415004 ADD X29, X31, 0x0
	0x02415008 SUB X31, X31, 0x40
	0x0241500C MRS X21, 0xC000
	0x02415010 LDR X8, [X21 + 0x28]
	0x02415014 MOV X19, X2
	0x02415018 MOV X24, X1
	0x0241501C MOV X20, X0
	0x02415020 STUR X8, [X29 - 0x8]
	0x02415024 STUR X1, [X29 - 0x28]
	0x02415028 LDR X8, [X2 + 0x20]
	0x0241502C LDRB W9, [X8 + 0x135]
	0x02415030 TBNZ X9, 0x0, 0x2415040
	0x02415034 MOV X0, X8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1FC6000
	006 Move W8, [X21+2492]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {24}
	013 Move X0, 0x1D09000
	014 Move X0, [X0+3136]
	015 Call 0x1C17CF4
	016 Move X0, 0x1D09000
	017 Move X0, [X0+3144]
	018 Call 0x1C17CF4
	019 Move X0, 0x1D09000
	020 Move X0, [X0+3152]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X21+2492], W8
	024 Move X8, [X19+32]
	025 Add X20, X20, 16
	026 Move X0, X20
	027 Move X8, [X8+192]
	028 Move X1, [X8+40]
	029 Call 0x2EE958C, X0
	030 Move TEMP, X0
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfNotEqual {36}
	034 Move X8, 0x1D09000
	035 Move X8, [X8+3144]
	036 Move X8, [X19+32]
	037 Move X0, X20
	038 Move X8, [X8+192]
	039 Move X1, [X8+48]
	040 Call 0x2EE957C, X0
	041 Move TEMP, X0
	042 And TEMP, TEMP, 1
	043 Compare TEMP, 1
	044 JumpIfNotEqual {60}
	045 Move X8, [X19+32]
	046 Move X0, X20
	047 Move X8, [X8+192]
	048 Move X1, [X8+16]
	049 Call 0x2EE9600, X0
	050 Move X8, 0x1D09000
	051 Move X8, [X8+3136]
	052 Move X19, [X8]
	053 Compare X0, 0
	054 JumpIfEqual {68}
	055 Move X8, [X0]
	056 Move X9, [X8+360]
	057 Move X1, [X8+368]
	058 NotImplemented "Instruction BLR not yet implemented."
	059 Move X1, X0
	060 Move X8, 0x1D08000
	061 Move X8, [X8+3152]
	062 Move X0, [X8]
	063 Move X20, [X31+16]
	064 Move X19, [X31+24]
	065 Move X30, [X31+32]
	066 Move X21, [X31+40]
	067 Return X0
	068 Move X1, X31
	069 Move X0, X19
	070 Move X20, [X31+16]
	071 Move X19, [X31+24]
	072 Move X2, X31
	073 Move X30, [X31+32]
	074 Move X21, [X31+40]
	075 Call String.Concat, X0, X1
	076 Return X0

Method: System.Void .ctor()

Disassembly:
	0x02415038 BL 0x1C5C684
	0x0241503C MOV X8, X0

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

