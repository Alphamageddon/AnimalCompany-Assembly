Type: Fusion.FusionBasicBillboard

Method: System.Void OnEnable()

Disassembly:
	0x01F8B060 ADRP X8, 0x2168000

ISIL:
No ISIL was generated
Method: System.Void OnDisable()

Disassembly:
	0x01F8B150 MOV X1, X31
	0x01F8B154 LDR X0, [X8]
	0x01F8B158 BL 0x3C06A04
	0x01F8B15C LDP X20, X19, [X31 + 0x20]
	0x01F8B160 LDP X30, X21, [X31 + 0x10]
	0x01F8B164 ADD X31, X31, 0x30
	0x01F8B168 RET
	0x01F8B16C BL 0x1C16F20
	0x01F8B170 SUB X31, X31, 0x30
	0x01F8B174 STP X30, X21, [X31 + 0x10]
	0x01F8B178 STP X20, X19, [X31 + 0x20]
	0x01F8B17C ADRP X21, 0x244E000

ISIL:
	001 Move [X31-16], X30
	002 Move X1, X31
	003 Call Component.get_transform, X0
	004 Compare X0, 0
	005 JumpIfEqual {14}
	006 Move S0, W31
	007 Move S1, W31
	008 Move S2, W31
	009 Move S3, W31
	010 Move X1, X31
	011 Move X30, [X31+16]
	012 Call Transform.set_localRotation, X0, X1
	013 Return 
	014 Call 0x1C17F20

Method: System.Void set_MainCamera(UnityEngine.Camera value)

Disassembly:
	0x01F8B180 LDRB W8, [X21 + 0x6F7]
	0x01F8B184 MOV W20, W1
	0x01F8B188 MOV X19, X0
	0x01F8B18C TBNZ X8, 0x0, 0x1F8B1B0
	0x01F8B190 ADRP X0, 0x2168000
	0x01F8B194 LDR X0, [X0 + 0xA28]
	0x01F8B198 BL 0x1C16CF4
	0x01F8B19C ADRP X0, 0x218F000
	0x01F8B1A0 LDR X0, [X0 + 0x770]
	0x01F8B1A4 BL 0x1C16CF4
	0x01F8B1A8 MOVZ W8, 0x1
	0x01F8B1AC STRB W8, [X21 + 0x6F7]
	0x01F8B1B0 MOV X0, X31
	0x01F8B1B4 STR W31, [X31 + 0x8]
	0x01F8B1B8 BL 0x1EB7374
	0x01F8B1BC CBZ X0, 0x1F8B23C
	0x01F8B1C0 LDR W8, [X0 + 0x20]
	0x01F8B1C4 CMP W8, 0x1
	0x01F8B1C8 B.NE 0x1F8B200

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x244F000
	006 Move X21, 0x2190000
	007 Move W8, [X20+1772]
	008 Move X21, [X21+1832]
	009 Move X19, X1
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x2190000
	015 Move X0, [X0+1832]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1772], W8
	019 Move X8, [X21]
	020 Move X8, [X8+184]
	021 Move [X8+8], X19
	022 Move X20, [X31+16]
	023 Move X19, [X31+24]
	024 Move X30, [X31+32]
	025 Move X21, [X31+40]
	026 Return 

Method: UnityEngine.Camera get_MainCamera()

Disassembly:
	0x01F8B1CC ADD X1, X31, 0x8
	0x01F8B1D0 BL 0x1F8A788
	0x01F8B1D4 TBZ X0, 0x0, 0x1F8B22C
	0x01F8B1D8 LDR W2, [X31 + 0x8]
	0x01F8B1DC MOVZ W1, 0x6
	0x01F8B1E0 MOV X0, X19
	0x01F8B1E4 MOV W3, W20
	0x01F8B1E8 BL 0x1F8A858
	0x01F8B1EC MOV X1, X0
	0x01F8B1F0 MOV X0, X19
	0x01F8B1F4 MOV X2, X31
	0x01F8B1F8 BL 0x3C366FC
	0x01F8B1FC B 0x1F8B22C
	0x01F8B200 ADRP X8, 0x2168000
	0x01F8B204 LDR X8, [X8 + 0xA28]
	0x01F8B208 LDR X0, [X8]
	0x01F8B20C LDR W8, [X0 + 0xE0]
	0x01F8B210 CBNZ W8, 0x1F8B218
	0x01F8B214 BL 0x1C16DFC
	0x01F8B218 ADRP X8, 0x218F000
	0x01F8B21C LDR X8, [X8 + 0x770]
	0x01F8B220 MOV X1, X31
	0x01F8B224 LDR X0, [X8]
	0x01F8B228 BL 0x3C06A04
	0x01F8B22C LDP X20, X19, [X31 + 0x20]
	0x01F8B230 LDP X30, X21, [X31 + 0x10]
	0x01F8B234 ADD X31, X31, 0x30
	0x01F8B238 RET
	0x01F8B23C BL 0x1C16F20
	0x01F8B240 STR X30, [X31 - 0x20]!

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x244F000
	005 Move X19, 0x2190000
	006 Move W8, [X20+1773]
	007 Move X19, [X19+1832]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x2190000
	013 Move X0, [X0+1832]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+1773], W8
	017 Move X0, X31
	018 Call Time.get_time
	019 Move X8, [X19]
	020 Move X8, [X8+184]
	021 Move V1, [X8]
	022 NotImplemented "Instruction FCMP not yet implemented."
	023 Move X0, [X8+8]
	024 Move X0, X31
	025 Move [X8], S0
	026 Call Camera.get_main
	027 Move X8, [X19]
	028 Move X8, [X8+184]
	029 Move [X8+8], X0
	030 Move X20, [X31+16]
	031 Move X19, [X31+24]
	032 Move X30, [X31+32]
	033 Return X0

Method: System.Void LateUpdate()

Disassembly:
	0x01F8B244 STP X20, X19, [X31 + 0x10]

ISIL:
	001 Call FusionBasicBillboard.UpdateLookAt, X0
	002 Return 

Method: System.Void UpdateLookAt()

Disassembly:
	0x01F8B064 LDR X8, [X8 + 0xA28]
	0x01F8B068 LDR X0, [X8]
	0x01F8B06C LDR W8, [X0 + 0xE0]
	0x01F8B070 CBNZ W8, 0x1F8B078
	0x01F8B074 BL 0x1C16DFC
	0x01F8B078 ADRP X8, 0x218F000
	0x01F8B07C LDR X8, [X8 + 0x770]
	0x01F8B080 MOV X1, X31
	0x01F8B084 LDR X0, [X8]
	0x01F8B088 BL 0x3C06A04
	0x01F8B08C LDP X20, X19, [X31 + 0x20]
	0x01F8B090 LDP X30, X21, [X31 + 0x10]
	0x01F8B094 ADD X31, X31, 0x30
	0x01F8B098 RET
	0x01F8B09C BL 0x1C16F20
	0x01F8B0A0 SUB X31, X31, 0x30
	0x01F8B0A4 STP X30, X21, [X31 + 0x10]
	0x01F8B0A8 STP X20, X19, [X31 + 0x20]
	0x01F8B0AC ADRP X21, 0x244E000
	0x01F8B0B0 LDRB W8, [X21 + 0x6F6]
	0x01F8B0B4 MOV W20, W1
	0x01F8B0B8 MOV X19, X0
	0x01F8B0BC TBNZ X8, 0x0, 0x1F8B0E0
	0x01F8B0C0 ADRP X0, 0x2168000
	0x01F8B0C4 LDR X0, [X0 + 0xA28]
	0x01F8B0C8 BL 0x1C16CF4
	0x01F8B0CC ADRP X0, 0x218F000
	0x01F8B0D0 LDR X0, [X0 + 0x770]
	0x01F8B0D4 BL 0x1C16CF4
	0x01F8B0D8 MOVZ W8, 0x1
	0x01F8B0DC STRB W8, [X21 + 0x6F6]
	0x01F8B0E0 MOV X0, X31
	0x01F8B0E4 STR W31, [X31 + 0x8]
	0x01F8B0E8 BL 0x1EB7374
	0x01F8B0EC CBZ X0, 0x1F8B16C
	0x01F8B0F0 LDR W8, [X0 + 0x20]
	0x01F8B0F4 CMP W8, 0x1
	0x01F8B0F8 B.NE 0x1F8B130
	0x01F8B0FC ADD X1, X31, 0x8
	0x01F8B100 BL 0x1F8A788
	0x01F8B104 TBZ X0, 0x0, 0x1F8B15C
	0x01F8B108 LDR W2, [X31 + 0x8]
	0x01F8B10C MOVZ W1, 0x2
	0x01F8B110 MOV X0, X19
	0x01F8B114 MOV W3, W20
	0x01F8B118 BL 0x1F8A858
	0x01F8B11C MOV X1, X0
	0x01F8B120 MOV X0, X19
	0x01F8B124 MOV X2, X31
	0x01F8B128 BL 0x3C366FC
	0x01F8B12C B 0x1F8B15C
	0x01F8B130 ADRP X8, 0x2168000
	0x01F8B134 LDR X8, [X8 + 0xA28]
	0x01F8B138 LDR X0, [X8]
	0x01F8B13C LDR W8, [X0 + 0xE0]
	0x01F8B140 CBNZ W8, 0x1F8B148
	0x01F8B144 BL 0x1C16DFC
	0x01F8B148 ADRP X8, 0x218F000
	0x01F8B14C LDR X8, [X8 + 0x770]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x244F000
	006 Move X21, 0x2169000
	007 Move W8, [X20+1774]
	008 Move X21, [X21+1432]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x2169000
	015 Move X0, [X0+1432]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1774], W8
	019 Move X0, [X21]
	020 Move X20, [X19+32]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move X0, X20
	026 Move X1, X31
	027 Call Object.op_Implicit, X0
	028 Move TEMP, X0
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfNotEqual {33}
	032 Move X20, [X19+32]
	033 Call FusionBasicBillboard.get_MainCamera, X0
	034 Move X20, X0
	035 Move X0, [X21]
	036 Move W8, [X0+224]
	037 Compare W8, 0
	038 JumpIfNotEqual {40}
	039 Call 0x1C17DFC
	040 Move X0, X20
	041 Move X1, X31
	042 Call Object.op_Implicit, X0
	043 Move TEMP, X0
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfNotEqual {77}
	047 Move X0, X19
	048 Move X1, X31
	049 Call Behaviour.get_enabled, X0
	050 Move TEMP, X0
	051 And TEMP, TEMP, 1
	052 Compare TEMP, 1
	053 JumpIfNotEqual {77}
	054 Move X0, X19
	055 Move X1, X31
	056 Call Component.get_transform, X0
	057 Compare X20, 0
	058 JumpIfEqual {82}
	059 Move X19, X0
	060 Move X0, X20
	061 Move X1, X31
	062 Call Component.get_transform, X0
	063 Compare X0, 0
	064 JumpIfEqual {82}
	065 Move X1, X31
	066 Call Transform.get_rotation, X0
	067 Compare X19, 0
	068 JumpIfEqual {82}
	069 Move X0, X19
	070 Move X20, [X31+16]
	071 Move X19, [X31+24]
	072 Move X1, X31
	073 Move X30, [X31+32]
	074 Move X21, [X31+40]
	075 Call Transform.set_rotation, X0, X1
	076 Return 
	077 Move X20, [X31+16]
	078 Move X19, [X31+24]
	079 Move X30, [X31+32]
	080 Move X21, [X31+40]
	081 Return 
	082 Call 0x1C17F20

Method: System.Void ResetStatics()

Disassembly:
	0x01F8B248 MOV W19, W1
	0x01F8B24C MOV X1, X31
	0x01F8B250 MOV X20, X0
	0x01F8B254 BL 0x33BDD8C
	0x01F8B258 STR W19, [X20 + 0x10]
	0x01F8B25C LDP X20, X19, [X31 + 0x10]
	0x01F8B260 LDR X30, [X31], #0x20
	0x01F8B264 RET
	0x01F8B268 STR X30, [X31 - 0x20]!
	0x01F8B26C STP X20, X19, [X31 + 0x10]
	0x01F8B270 MOV W19, W1
	0x01F8B274 MOV X1, X31
	0x01F8B278 MOV X20, X0
	0x01F8B27C BL 0x33BDD8C
	0x01F8B280 STR W19, [X20 + 0x10]
	0x01F8B284 LDP X20, X19, [X31 + 0x10]
	0x01F8B288 LDR X30, [X31], #0x20
	0x01F8B28C RET
	0x01F8B290 SUB X31, X31, 0x20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x244F000
	005 Move X20, 0x2190000
	006 Move W8, [X19+1775]
	007 Move X20, [X20+1832]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x2190000
	013 Move X0, [X0+1832]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+1775], W8
	017 Move X8, [X20]
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X8, [X8+184]
	021 Move [X8+8], X31
	022 Move [X8], W31
	023 Move X30, [X31+32]
	024 Return 

Method: System.Void .ctor()

Disassembly:
	0x01F8B294 STP X30, X19, [X31 + 0x10]
	0x01F8B298 ADD X1, X31, 0x8

ISIL:
	001 Move X1, X31
	002 Call Behaviour..ctor, X0
	003 Return 

