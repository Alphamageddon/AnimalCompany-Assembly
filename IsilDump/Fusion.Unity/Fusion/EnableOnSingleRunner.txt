Type: Fusion.EnableOnSingleRunner

Method: System.Void AddNodes(System.Collections.Generic.List`1<Fusion.RunnerVisibilityLink> existingNodes)

Disassembly:
	0x01F89EA4 STP X20, X19, [X31 + 0x20]
	0x01F89EA8 ADRP X22, 0x2450000
	0x01F89EAC ADRP X21, 0x216A000
	0x01F89EB0 LDRB W8, [X22 + 0x745]
	0x01F89EB4 LDR X21, [X21 + 0x598]
	0x01F89EB8 MOV W19, W1
	0x01F89EBC MOV X20, X0
	0x01F89EC0 TBNZ X8, 0x0, 0x1F89EF0
	0x01F89EC4 ADRP X0, 0x2191000
	0x01F89EC8 LDR X0, [X0 + 0x6E0]
	0x01F89ECC BL 0x1C16CF4
	0x01F89ED0 ADRP X0, 0x216A000
	0x01F89ED4 LDR X0, [X0 + 0x598]
	0x01F89ED8 BL 0x1C16CF4
	0x01F89EDC ADRP X0, 0x2191000
	0x01F89EE0 LDR X0, [X0 + 0x6F0]
	0x01F89EE4 BL 0x1C16CF4
	0x01F89EE8 MOVZ W8, 0x1
	0x01F89EEC STRB W8, [X22 + 0x745]
	0x01F89EF0 LDR X0, [X21]
	0x01F89EF4 LDR X21, [X20 + 0x28]
	0x01F89EF8 LDR W8, [X0 + 0xE0]
	0x01F89EFC CBNZ W8, 0x1F89F04
	0x01F89F00 BL 0x1C16DFC
	0x01F89F04 MOV X0, X21
	0x01F89F08 MOV X1, X31
	0x01F89F0C MOV X2, X31
	0x01F89F10 BL 0x3C3883C
	0x01F89F14 TBZ X0, 0x0, 0x1F89F28
	0x01F89F18 LDP X20, X19, [X31 + 0x20]
	0x01F89F1C LDP X22, X21, [X31 + 0x10]
	0x01F89F20 LDR X30, [X31], #0x30
	0x01F89F24 RET
	0x01F89F28 LDR W8, [X20 + 0x50]
	0x01F89F2C LDR X0, [X20 + 0x28]
	0x01F89F30 CMP W8, 0x1
	0x01F89F34 B.NE 0x1F89F88
	0x01F89F38 CBZ X0, 0x1F89FD8
	0x01F89F3C ADRP X8, 0x2191000
	0x01F89F40 LDR X8, [X8 + 0x6F0]
	0x01F89F44 LDR X9, [X0]
	0x01F89F48 LDR X8, [X8]
	0x01F89F4C LDRB W11, [X9 + 0x130]
	0x01F89F50 LDRB W10, [X8 + 0x130]
	0x01F89F54 CMP W11, W10
	0x01F89F58 B.CC 0x1F89FD8
	0x01F89F5C LDR X9, [X9 + 0xC8]
	0x01F89F60 ADD X9, X9, X10, 0x3, LSL
	0x01F89F64 LDUR X9, [X9 - 0x8]
	0x01F89F68 CMP X9, X8
	0x01F89F6C B.NE 0x1F89FD8
	0x01F89F70 AND W1, W19, 0x1
	0x01F89F74 LDP X20, X19, [X31 + 0x20]
	0x01F89F78 LDP X22, X21, [X31 + 0x10]
	0x01F89F7C MOV X2, X31
	0x01F89F80 LDR X30, [X31], #0x30
	0x01F89F84 B 0x3C13034
	0x01F89F88 CBZ X0, 0x1F89FD8
	0x01F89F8C ADRP X8, 0x2191000
	0x01F89F90 LDR X8, [X8 + 0x6E0]
	0x01F89F94 LDR X9, [X0]
	0x01F89F98 LDR X8, [X8]
	0x01F89F9C LDRB W11, [X9 + 0x130]
	0x01F89FA0 LDRB W10, [X8 + 0x130]
	0x01F89FA4 CMP W11, W10
	0x01F89FA8 B.CC 0x1F89FD8
	0x01F89FAC LDR X9, [X9 + 0xC8]
	0x01F89FB0 ADD X9, X9, X10, 0x3, LSL
	0x01F89FB4 LDUR X9, [X9 - 0x8]
	0x01F89FB8 CMP X9, X8
	0x01F89FBC B.NE 0x1F89FD8
	0x01F89FC0 AND W1, W19, 0x1
	0x01F89FC4 LDP X20, X19, [X31 + 0x20]
	0x01F89FC8 LDP X22, X21, [X31 + 0x10]
	0x01F89FCC MOV X2, X31
	0x01F89FD0 LDR X30, [X31], #0x30
	0x01F89FD4 B 0x3C32410
	0x01F89FD8 BL 0x1C16F20
	0x01F89FDC STR D8, [X31 - 0x30]!
	0x01F89FE0 STP X30, X21, [X31 + 0x10]
	0x01F89FE4 STP X20, X19, [X31 + 0x20]
	0x01F89FE8 ADRP X21, 0x2450000
	0x01F89FEC ADRP X20, 0x2191000
	0x01F89FF0 LDRB W8, [X21 + 0x74B]
	0x01F89FF4 LDR X20, [X20 + 0x720]
	0x01F89FF8 MOV V8.16B, V0.16B
	0x01F89FFC MOV X19, X0
	0x01F8A000 TBNZ X8, 0x0, 0x1F8A018
	0x01F8A004 ADRP X0, 0x2190000
	0x01F8A008 LDR X0, [X0 + 0x720]
	0x01F8A00C BL 0x1C16CF4
	0x01F8A010 MOVZ W8, 0x1
	0x01F8A014 STRB W8, [X21 + 0x74B]
	0x01F8A018 MOV X0, X19
	0x01F8A01C MOV X1, X31
	0x01F8A020 BL 0x3C36AE0
	0x01F8A024 LDR X1, [X20]
	0x01F8A028 MOV X0, X19
	0x01F8A02C LDP X20, X19, [X31 + 0x20]
	0x01F8A030 LDP X30, X21, [X31 + 0x10]
	0x01F8A034 MOV V0.16B, V8.16B
	0x01F8A038 MOV X2, X31
	0x01F8A03C LDR V8, [X31], #0x30
	0x01F8A040 B 0x3C36264
	0x01F8A044 LDRB W0, [X0 + 0x10]
	0x01F8A048 RET
	0x01F8A04C AND W8, W1, 0x1
	0x01F8A050 STRB W8, [X0 + 0x10]
	0x01F8A054 RET
	0x01F8A058 MOV X1, X31
	0x01F8A05C B 0x3C36C30
	0x01F8A060 B 0x1F8A064
	0x01F8A064 STP X30, X21, [X31 - 0x20]!
	0x01F8A068 STP X20, X19, [X31 + 0x10]
	0x01F8A06C ADRP X20, 0x244F000
	0x01F8A070 ADRP X21, 0x2169000
	0x01F8A074 LDRB W8, [X20 + 0x6EE]
	0x01F8A078 LDR X21, [X21 + 0x598]
	0x01F8A07C MOV X19, X0
	0x01F8A080 TBNZ X8, 0x0, 0x1F8A098
	0x01F8A084 ADRP X0, 0x2169000
	0x01F8A088 LDR X0, [X0 + 0x598]
	0x01F8A08C BL 0x1C16CF4
	0x01F8A090 MOVZ W8, 0x1
	0x01F8A094 STRB W8, [X20 + 0x6EE]
	0x01F8A098 LDR X0, [X21]
	0x01F8A09C LDR X20, [X19 + 0x20]
	0x01F8A0A0 LDR W8, [X0 + 0xE0]
	0x01F8A0A4 CBNZ W8, 0x1F8A0AC
	0x01F8A0A8 BL 0x1C16DFC
	0x01F8A0AC MOV X0, X20
	0x01F8A0B0 MOV X1, X31
	0x01F8A0B4 BL 0x3C38948
	0x01F8A0B8 TBZ X0, 0x0, 0x1F8A0C4
	0x01F8A0BC LDR X20, [X19 + 0x20]
	0x01F8A0C0 B 0x1F8A0CC
	0x01F8A0C4 BL 0x1F8A1CC
	0x01F8A0C8 MOV X20, X0
	0x01F8A0CC LDR X0, [X21]
	0x01F8A0D0 LDR W8, [X0 + 0xE0]
	0x01F8A0D4 CBNZ W8, 0x1F8A0DC
	0x01F8A0D8 BL 0x1C16DFC
	0x01F8A0DC MOV X0, X20
	0x01F8A0E0 MOV X1, X31
	0x01F8A0E4 BL 0x3C38948
	0x01F8A0E8 TBZ X0, 0x0, 0x1F8A140
	0x01F8A0EC MOV X0, X19
	0x01F8A0F0 MOV X1, X31
	0x01F8A0F4 BL 0x3C323D4
	0x01F8A0F8 TBZ X0, 0x0, 0x1F8A140
	0x01F8A0FC MOV X0, X19
	0x01F8A100 MOV X1, X31
	0x01F8A104 BL 0x3C32E90
	0x01F8A108 CBZ X20, 0x1F8A14C
	0x01F8A10C MOV X19, X0
	0x01F8A110 MOV X0, X20
	0x01F8A114 MOV X1, X31
	0x01F8A118 BL 0x3C32E90
	0x01F8A11C CBZ X0, 0x1F8A14C
	0x01F8A120 MOV X1, X31
	0x01F8A124 BL 0x3C3DEB4
	0x01F8A128 CBZ X19, 0x1F8A14C
	0x01F8A12C MOV X0, X19
	0x01F8A130 LDP X20, X19, [X31 + 0x10]
	0x01F8A134 MOV X1, X31
	0x01F8A138 LDP X30, X21, [X31], #0x20
	0x01F8A13C B 0x3C3F7AC
	0x01F8A140 LDP X20, X19, [X31 + 0x10]
	0x01F8A144 LDP X30, X21, [X31], #0x20
	0x01F8A148 RET
	0x01F8A14C BL 0x1C16F20
	0x01F8A150 STR X30, [X31 - 0x10]!
	0x01F8A154 MOV X1, X31
	0x01F8A158 BL 0x3C32E90
	0x01F8A15C CBZ X0, 0x1F8A17C
	0x01F8A160 FMOV S0, W31
	0x01F8A164 FMOV S1, W31
	0x01F8A168 FMOV S2, W31
	0x01F8A16C FMOV S3, W31
	0x01F8A170 MOV X1, X31
	0x01F8A174 LDR X30, [X31], #0x10
	0x01F8A178 B 0x3C3F8B8
	0x01F8A17C BL 0x1C16F20
	0x01F8A180 STP X30, X21, [X31 - 0x20]!
	0x01F8A184 STP X20, X19, [X31 + 0x10]
	0x01F8A188 ADRP X20, 0x244F000
	0x01F8A18C ADRP X21, 0x2190000
	0x01F8A190 LDRB W8, [X20 + 0x6EC]
	0x01F8A194 LDR X21, [X21 + 0x728]
	0x01F8A198 MOV X19, X1
	0x01F8A19C TBNZ X8, 0x0, 0x1F8A1B4
	0x01F8A1A0 ADRP X0, 0x2190000
	0x01F8A1A4 LDR X0, [X0 + 0x728]
	0x01F8A1A8 BL 0x1C16CF4
	0x01F8A1AC MOVZ W8, 0x1
	0x01F8A1B0 STRB W8, [X20 + 0x6EC]
	0x01F8A1B4 LDR X8, [X21]
	0x01F8A1B8 LDR X8, [X8 + 0xB8]
	0x01F8A1BC STR X19, [X8 + 0x8]
	0x01F8A1C0 LDP X20, X19, [X31 + 0x10]
	0x01F8A1C4 LDP X30, X21, [X31], #0x20
	0x01F8A1C8 RET
	0x01F8A1CC STR X30, [X31 - 0x20]!
	0x01F8A1D0 STP X20, X19, [X31 + 0x10]
	0x01F8A1D4 ADRP X20, 0x244F000
	0x01F8A1D8 ADRP X19, 0x2190000

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+64], X29
	003 Move [X31+72], X30
	004 Move [X31+80], X28
	005 Move [X31+88], X27
	006 Move [X31+96], X26
	007 Move [X31+104], X25
	008 Move [X31+112], X24
	009 Move [X31+120], X23
	010 Move [X31+128], X22
	011 Move [X31+136], X21
	012 Move [X31+144], X20
	013 Move [X31+152], X19
	014 Move X21, 0x2451000
	015 Move W8, [X21+1845]
	016 Move X19, X1
	017 Move X20, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {45}
	022 Move X0, 0x2192000
	023 Move X0, [X0+1472]
	024 Call 0x1C17CF4
	025 Move X0, 0x2192000
	026 Move X0, [X0+1496]
	027 Call 0x1C17CF4
	028 Move X0, 0x2192000
	029 Move X0, [X0+1520]
	030 Call 0x1C17CF4
	031 Move X0, 0x2192000
	032 Move X0, [X0+1688]
	033 Call 0x1C17CF4
	034 Move X0, 0x2192000
	035 Move X0, [X0+1696]
	036 Call 0x1C17CF4
	037 Move X0, 0x2192000
	038 Move X0, [X0+1536]
	039 Call 0x1C17CF4
	040 Move X0, 0x216B000
	041 Move X0, [X0+1432]
	042 Call 0x1C17CF4
	043 Move W8, 1
	044 Move [X21+1845], W8
	045 Move [X31+32], X31
	046 Move [X31+40], X31
	047 Move [X31+48], X31
	048 Move [X31+60], W31
	049 Move X9, [X20+40]
	050 Compare X9, 0
	051 JumpIfEqual {210}
	052 Move X24, 0x2192000
	053 Move X25, 0x2192000
	054 Move X26, 0x216B000
	055 Move X23, 0x2192000
	056 Move X27, 0x2192000
	057 Move X28, 0x2192000
	058 Move X24, [X24+1536]
	059 Move X25, [X25+1496]
	060 Move X26, [X26+1432]
	061 Move X23, [X23+1472]
	062 Move X27, [X27+1688]
	063 Move X28, [X28+1696]
	064 Move W8, W31
	065 Move W29, 1
	066 Move W9, [X9+24]
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Compare X19, 0
	069 JumpIfEqual {210}
	070 Move X1, [X24]
	071 Add X8, X31, 8
	072 Move X0, X19
	073 Call List`1<Object>.GetEnumerator, X0
	074 NotImplemented "Instruction LDUR not yet implemented."
	075 Move X8, [X31+24]
	076 Move [X31+2], V0
	077 Move [X31+48], X8
	078 Move X1, [X25]
	079 Add X0, X31, 32
	080 Call Enumerator<Object>.MoveNext, X0
	081 Move TEMP, X0
	082 And TEMP, TEMP, 1
	083 Compare TEMP, 1
	084 JumpIfNotEqual {113}
	085 Move X8, [X31+48]
	086 Compare X8, 0
	087 JumpIfEqual {183}
	088 Move X9, [X20+40]
	089 Compare X9, 0
	090 JumpIfEqual {184}
	091 NotImplemented "Instruction LDRSW not yet implemented."
	092 Move W11, [X9+24]
	093 NotImplemented "Instruction CMP not yet implemented."
	094 Move X0, [X26]
	095 Move X21, [X8+40]
	096 Add X8, X9, X10
	097 Move X22, [X8+32]
	098 Move W9, [X0+224]
	099 Compare W9, 0
	100 JumpIfNotEqual {102}
	101 Call 0x1C17DFC
	102 Move X0, X21
	103 Move X1, X22
	104 Move X2, X31
	105 Call Object.op_Equality, X0, X1
	106 Move TEMP, X0
	107 And TEMP, TEMP, 1
	108 Compare TEMP, 1
	109 JumpIfNotEqual {78}
	110 Move X1, [X23]
	111 Add X0, X31, 32
	112 Call Enumerator<Object>.Dispose, X0
	113 Move X1, [X23]
	114 Add X0, X31, 32
	115 Call Enumerator<Object>.Dispose, X0
	116 Move X8, [X20+40]
	117 Compare X8, 0
	118 JumpIfEqual {210}
	119 NotImplemented "Instruction LDRSW not yet implemented."
	120 Move W10, [X8+24]
	121 NotImplemented "Instruction CMP not yet implemented."
	122 Add X8, X8, X9
	123 Move X0, [X8+32]
	124 Compare X0, 0
	125 JumpIfEqual {210}
	126 Move X1, X31
	127 Call Component.get_gameObject, X0
	128 Compare X0, 0
	129 JumpIfEqual {210}
	130 Move X1, [X27]
	131 Call 0x21E61FC, X0
	132 Move X22, [X20+48]
	133 Move X21, X0
	134 Add X0, X31, 60
	135 Move X1, X31
	136 Call Int32.ToString, X0
	137 Move X1, X0
	138 Move X0, X22
	139 Move X2, X31
	140 Call String.Concat, X0, X1
	141 Compare X21, 0
	142 JumpIfEqual {210}
	143 Move [X21+56], X0
	144 Move X8, [X20+40]
	145 Compare X8, 0
	146 JumpIfEqual {210}
	147 NotImplemented "Instruction LDRSW not yet implemented."
	148 Move W10, [X8+24]
	149 NotImplemented "Instruction CMP not yet implemented."
	150 Add X8, X8, X9
	151 Move X8, [X8+32]
	152 Move [X21+40], X8
	153 Move W8, [X20+32]
	154 Move [X21+48], W29
	155 Move [X21+32], W8
	156 Move W10, [X19+28]
	157 Move X8, [X19+16]
	158 Move X9, [X28]
	159 Add W10, W10, 1
	160 Move [X19+28], W10
	161 Compare X8, 0
	162 JumpIfEqual {210}
	163 NotImplemented "Instruction LDRSW not yet implemented."
	164 Move W11, [X8+24]
	165 NotImplemented "Instruction CMP not yet implemented."
	166 Add W9, W10, 1
	167 Add X8, X8, X10
	168 Move [X19+24], W9
	169 Move [X8+32], X21
	170 Move X8, [X9+32]
	171 Move X0, X19
	172 Move X1, X21
	173 Move X8, [X8+192]
	174 Move X2, [X8+112]
	175 Call List`1<Object>.AddWithResize, X0, X1
	176 Move W8, [X31+60]
	177 Add W8, W8, 1
	178 Move [X31+60], W8
	179 Move X9, [X20+40]
	180 Compare X9, 0
	181 JumpIfNotEqual {66}
	182 Call 0x1C17F28
	183 Call 0x1C17F20
	184 Call 0x1C17F20
	185 NotImplemented "Instruction CMP not yet implemented."
	186 Call 0x3EB2AD0
	187 Move X21, [X0]
	188 Call 0x3EB2AE0
	189 Move X1, [X23]
	190 Add X0, X31, 32
	191 Call Enumerator<Object>.Dispose, X0
	192 Compare X21, 0
	193 JumpIfEqual {116}
	194 Move X0, X21
	195 Call 0x1C17F18
	196 Move X20, [X31+144]
	197 Move X19, [X31+152]
	198 Move X22, [X31+128]
	199 Move X21, [X31+136]
	200 Move X24, [X31+112]
	201 Move X23, [X31+120]
	202 Move X26, [X31+96]
	203 Move X25, [X31+104]
	204 Move X28, [X31+80]
	205 Move X27, [X31+88]
	206 Move X29, [X31+64]
	207 Move X30, [X31+72]
	208 Add X31, X31, 160
	209 Return 
	210 Call 0x1C17F20
	211 Call 0x1C17F28
	212 Move X19, X0
	213 Move X21, X31
	214 Move X19, X0
	215 Move X1, [X23]
	216 Add X0, X31, 32
	217 Call Enumerator<Object>.Dispose, X0
	218 Compare X21, 0
	219 JumpIfNotEqual {222}
	220 Move X0, X19
	221 Call 0x1D2D690
	222 Move X0, X21
	223 Call 0x1C17F18
	224 Call 0x1991590

Method: System.Void FindRecognizedTypes()

Disassembly:
	0x01F93430 LDR X0, [X0 + 0x548]
	0x01F93434 BL 0x1C16CF4
	0x01F93438 ADRP X0, 0x2160000
	0x01F9343C LDR X0, [X0 + 0x598]
	0x01F93440 BL 0x1C16CF4
	0x01F93444 MOVZ W8, 0x1
	0x01F93448 STRB W8, [X21 + 0x741]
	0x01F9344C LDR X0, [X20]
	0x01F93450 LDR X20, [X19 + 0x48]
	0x01F93454 LDR W8, [X0 + 0xE0]
	0x01F93458 CBNZ W8, 0x1F93460
	0x01F9345C BL 0x1C16DFC
	0x01F93460 MOV X0, X20
	0x01F93464 MOV X1, X31
	0x01F93468 MOV X2, X31
	0x01F9346C BL 0x3C3883C
	0x01F93470 TBNZ X0, 0x0, 0x1F934F4
	0x01F93474 LDR X0, [X19 + 0x48]
	0x01F93478 CBZ X0, 0x1F93500
	0x01F9347C MOV X1, X31
	0x01F93480 BL 0x1E9E7CC
	0x01F93484 TBZ X0, 0x0, 0x1F934F4
	0x01F93488 ADRP X8, 0x2187000
	0x01F9348C LDR X8, [X8 + 0x548]
	0x01F93490 LDR X20, [X19 + 0x48]
	0x01F93494 LDR X0, [X8]
	0x01F93498 LDR W8, [X0 + 0xE0]
	0x01F9349C CBNZ W8, 0x1F934A4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x2447000
	006 Move X20, 0x2188000
	007 Move W8, [X21+1846]
	008 Move X20, [X20+2944]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x2188000
	015 Move X0, [X0+2944]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+1846], W8
	019 Move X0, X19
	020 Move X1, X31
	021 Call Component.get_gameObject, X0
	022 Move X8, [X20]
	023 Move X20, X0
	024 Move W9, [X8+224]
	025 Compare W9, 0
	026 JumpIfNotEqual {29}
	027 Move X0, X8
	028 Call 0x1C17DFC
	029 Move X0, X20
	030 Call EnableOnSingleRunner.FindRecognizedComponentsOnGameObject, X0
	031 Move [X19+40], X0
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X30, [X31+32]
	035 Move X21, [X31+40]
	036 Return 

Method: System.Void FindNestedRecognizedTypes()

Disassembly:
	0x01F93830 BL 0x1C5C788
	0x01F93834 B 0x1F93844
	0x01F93838 LDRSW X9, [X10]
	0x01F9383C ADD X8, X8, X9, 0x4, LSL
	0x01F93840 ADD X0, X8, 0x138
	0x01F93844 LDP X8, X1, [X0]
	0x01F93848 MOV X0, X19
	0x01F9384C BLR X8
	0x01F93850 CBNZ X20, 0x1F9385C
	0x01F93854 LDR X0, [X31]
	0x01F93858 BL 0x1D2C690
	0x01F9385C MOV X0, X20
	0x01F93860 BL 0x1C16F18
	0x01F93864 BL 0x1990590
	0x01F93868 SUB X31, X31, 0x160
	0x01F9386C STP D13, D12, [X31 + 0xD0]
	0x01F93870 STP D11, D10, [X31 + 0xE0]
	0x01F93874 STP D9, D8, [X31 + 0xF0]
	0x01F93878 STP X29, X30, [X31 + 0x100]
	0x01F9387C STP X28, X27, [X31 + 0x110]
	0x01F93880 STP X26, X25, [X31 + 0x120]
	0x01F93884 STP X24, X23, [X31 + 0x130]
	0x01F93888 STP X22, X21, [X31 + 0x140]
	0x01F9388C STP X20, X19, [X31 + 0x150]
	0x01F93890 ADRP X20, 0x2446000
	0x01F93894 LDRB W8, [X20 + 0x742]
	0x01F93898 MOV X19, X0
	0x01F9389C TBNZ X8, 0x0, 0x1F938FC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x2447000
	006 Move X20, 0x2188000
	007 Move W8, [X21+1847]
	008 Move X20, [X20+2944]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x2188000
	015 Move X0, [X0+2944]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+1847], W8
	019 Move X0, X19
	020 Move X1, X31
	021 Call Component.get_gameObject, X0
	022 Move X8, [X20]
	023 Move X20, X0
	024 Move W9, [X8+224]
	025 Compare W9, 0
	026 JumpIfNotEqual {29}
	027 Move X0, X8
	028 Call 0x1C17DFC
	029 Move X0, X20
	030 Call EnableOnSingleRunner.FindRecognizedNestedComponents, X0
	031 Move [X19+40], X0
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X30, [X31+32]
	035 Move X21, [X31+40]
	036 Return 

Method: UnityEngine.Component[] FindRecognizedComponentsOnGameObject(UnityEngine.GameObject go)

Disassembly:
	0x01F934A0 BL 0x1C16DFC
	0x01F934A4 MOV X0, X20
	0x01F934A8 BL 0x1F887F8
	0x01F934AC TBZ X0, 0x0, 0x1F934F4
	0x01F934B0 LDR X0, [X19 + 0x48]
	0x01F934B4 CBZ X0, 0x1F93500
	0x01F934B8 MOV X1, X31
	0x01F934BC BL 0x1E9EB6C
	0x01F934C0 CBZ X0, 0x1F934F4
	0x01F934C4 LDR X8, [X0 + 0x58]
	0x01F934C8 CBZ X8, 0x1F934F4
	0x01F934CC LDRB W8, [X19 + 0x21]
	0x01F934D0 CBZ W8, 0x1F934DC
	0x01F934D4 MOV X0, X19
	0x01F934D8 BL 0x1F93504
	0x01F934DC LDRB W8, [X19 + 0x20]
	0x01F934E0 CBZ W8, 0x1F934F4
	0x01F934E4 MOV X0, X19
	0x01F934E8 LDP X20, X19, [X31 + 0x10]
	0x01F934EC LDP X30, X21, [X31], #0x20
	0x01F934F0 B 0x1F93868
	0x01F934F4 LDP X20, X19, [X31 + 0x10]
	0x01F934F8 LDP X30, X21, [X31], #0x20
	0x01F934FC RET
	0x01F93500 BL 0x1C16F20
	0x01F93504 SUB X31, X31, 0x80
	0x01F93508 STR D12, [X31 + 0x20]
	0x01F9350C STP D11, D10, [X31 + 0x28]
	0x01F93510 STP D9, D8, [X31 + 0x38]
	0x01F93514 STR X30, [X31 + 0x48]
	0x01F93518 STP X24, X23, [X31 + 0x50]
	0x01F9351C STP X22, X21, [X31 + 0x60]
	0x01F93520 STP X20, X19, [X31 + 0x70]
	0x01F93524 ADRP X20, 0x2446000
	0x01F93528 LDRB W8, [X20 + 0x743]
	0x01F9352C MOV X19, X0
	0x01F93530 TBNZ X8, 0x0, 0x1F93560
	0x01F93534 ADRP X0, 0x2160000
	0x01F93538 LDR X0, [X0 + 0xE00]
	0x01F9353C BL 0x1C16CF4
	0x01F93540 ADRP X0, 0x2187000
	0x01F93544 LDR X0, [X0 + 0xC08]
	0x01F93548 BL 0x1C16CF4
	0x01F9354C ADRP X0, 0x2160000
	0x01F93550 LDR X0, [X0 + 0xE18]
	0x01F93554 BL 0x1C16CF4
	0x01F93558 MOVZ W8, 0x1
	0x01F9355C STRB W8, [X20 + 0x743]
	0x01F93560 LDR X0, [X19 + 0x48]
	0x01F93564 CBZ X0, 0x1F93798
	0x01F93568 MOV X1, X31
	0x01F9356C BL 0x1E9EB6C
	0x01F93570 CBZ X0, 0x1F93798
	0x01F93574 LDR X8, [X0 + 0x58]
	0x01F93578 CBZ X8, 0x1F93798
	0x01F9357C LDR X0, [X8 + 0x18]
	0x01F93580 CBZ X0, 0x1F93798
	0x01F93584 ADRP X22, 0x2160000
	0x01F93588 LDR X22, [X22 + 0xE00]
	0x01F9358C MOV X1, X31
	0x01F93590 BL 0x1EEA5E8
	0x01F93594 MOV X19, X0
	0x01F93598 CBZ X0, 0x1F9379C
	0x01F9359C ADRP X23, 0x2160000
	0x01F935A0 ADRP X24, 0x2187000
	0x01F935A4 LDR X23, [X23 + 0xE18]
	0x01F935A8 LDR X24, [X24 + 0xC08]
	0x01F935AC FMOV S11, W31
	0x01F935B0 FMOV S12, 1
	0x01F935B4 LDR X8, [X19]
	0x01F935B8 LDR X1, [X23]
	0x01F935BC LDRH W9, [X8 + 0x12E]
	0x01F935C0 CBZ X9, 0x1F935E4
	0x01F935C4 LDR X10, [X8 + 0xB0]
	0x01F935C8 ADD X10, X10, 0x8
	0x01F935CC LDUR X11, [X10 - 0x8]
	0x01F935D0 CMP X11, X1
	0x01F935D4 B.EQ 0x1F935F4
	0x01F935D8 SUBS X9, X9, 0x1
	0x01F935DC ADD X10, X10, 0x10
	0x01F935E0 B.NE 0x1F935CC
	0x01F935E4 MOV X0, X19
	0x01F935E8 MOV W2, W31
	0x01F935EC BL 0x1C5C788
	0x01F935F0 B 0x1F93600
	0x01F935F4 LDRSW X9, [X10]
	0x01F935F8 ADD X8, X8, X9, 0x4, LSL
	0x01F935FC ADD X0, X8, 0x138
	0x01F93600 LDP X8, X1, [X0]
	0x01F93604 MOV X0, X19
	0x01F93608 BLR X8
	0x01F9360C TBZ X0, 0x0, 0x1F9370C
	0x01F93610 LDR X8, [X19]
	0x01F93614 LDR X1, [X24]
	0x01F93618 LDRH W9, [X8 + 0x12E]
	0x01F9361C CBZ X9, 0x1F93640
	0x01F93620 LDR X10, [X8 + 0xB0]
	0x01F93624 ADD X10, X10, 0x8
	0x01F93628 LDUR X11, [X10 - 0x8]
	0x01F9362C CMP X11, X1
	0x01F93630 B.EQ 0x1F93650
	0x01F93634 SUBS X9, X9, 0x1
	0x01F93638 ADD X10, X10, 0x10
	0x01F9363C B.NE 0x1F93628
	0x01F93640 MOV X0, X19
	0x01F93644 MOV W2, W31
	0x01F93648 BL 0x1C5C788
	0x01F9364C B 0x1F9365C
	0x01F93650 LDRSW X9, [X10]
	0x01F93654 ADD X8, X8, X9, 0x4, LSL
	0x01F93658 ADD X0, X8, 0x138
	0x01F9365C LDP X8, X1, [X0]
	0x01F93660 MOV X0, X19
	0x01F93664 BLR X8
	0x01F93668 MOV X20, X0
	0x01F9366C CBZ X0, 0x1F93794
	0x01F93670 MOV X0, X20
	0x01F93674 MOV X1, X31
	0x01F93678 BL 0x1EE9500
	0x01F9367C MOV W21, W0
	0x01F93680 MOV X0, X20
	0x01F93684 MOV X1, X31
	0x01F93688 BL 0x1EE9550
	0x01F9368C SCVTF S0, W21
	0x01F93690 SCVTF S1, W0
	0x01F93694 FMUL S2, S0, S11
	0x01F93698 FDIV S3, S0, S1
	0x01F9369C FDIV S2, S2, S1
	0x01F936A0 FADD S0, S3, S11
	0x01F936A4 FADD S1, S2, S12
	0x01F936A8 FADD S2, S2, S11
	0x01F936AC FADD S3, S3, S12
	0x01F936B0 MOV X0, X31
	0x01F936B4 BL 0x3C0D030
	0x01F936B8 ADD X8, X31, 0x8
	0x01F936BC MOV X0, X20
	0x01F936C0 MOV X1, X31
	0x01F936C4 BL 0x1EE9498
	0x01F936C8 LDP S8, S9, [X31 + 0x8]
	0x01F936CC LDR V10, [X31 + 0x10]
	0x01F936D0 ADD X8, X31, 0x8
	0x01F936D4 MOV X0, X20
	0x01F936D8 MOV X1, X31
	0x01F936DC BL 0x1EE9498
	0x01F936E0 LDP S0, S1, [X31 + 0x14]
	0x01F936E4 LDR V2, [X31 + 0x1C]
	0x01F936E8 FADD S3, S0, S0
	0x01F936EC FADD S4, S1, S1
	0x01F936F0 FADD S5, S2, S2
	0x01F936F4 MOV V0.16B, V8.16B
	0x01F936F8 MOV V1.16B, V9.16B
	0x01F936FC MOV V2.16B, V10.16B
	0x01F93700 MOV X0, X31
	0x01F93704 BL 0x3C0CCD8
	0x01F93708 B 0x1F935B4
	0x01F9370C MOV X20, X31
	0x01F93710 CBZ X19, 0x1F9376C
	0x01F93714 LDR X8, [X19]
	0x01F93718 LDR X1, [X22]
	0x01F9371C LDRH W9, [X8 + 0x12E]
	0x01F93720 CBZ X9, 0x1F93744
	0x01F93724 LDR X10, [X8 + 0xB0]
	0x01F93728 ADD X10, X10, 0x8
	0x01F9372C LDUR X11, [X10 - 0x8]
	0x01F93730 CMP X11, X1
	0x01F93734 B.EQ 0x1F93754
	0x01F93738 SUBS X9, X9, 0x1
	0x01F9373C ADD X10, X10, 0x10
	0x01F93740 B.NE 0x1F9372C
	0x01F93744 MOV X0, X19
	0x01F93748 MOV W2, W31
	0x01F9374C BL 0x1C5C788
	0x01F93750 B 0x1F93760
	0x01F93754 LDRSW X9, [X10]
	0x01F93758 ADD X8, X8, X9, 0x4, LSL
	0x01F9375C ADD X0, X8, 0x138
	0x01F93760 LDP X8, X1, [X0]
	0x01F93764 MOV X0, X19
	0x01F93768 BLR X8
	0x01F9376C CBNZ X20, 0x1F937A0
	0x01F93770 LDP X20, X19, [X31 + 0x70]
	0x01F93774 LDP X22, X21, [X31 + 0x60]
	0x01F93778 LDP X24, X23, [X31 + 0x50]
	0x01F9377C LDR X30, [X31 + 0x48]
	0x01F93780 LDP D9, D8, [X31 + 0x38]
	0x01F93784 LDP D11, D10, [X31 + 0x28]
	0x01F93788 LDR V12, [X31 + 0x20]
	0x01F9378C ADD X31, X31, 0x80
	0x01F93790 RET
	0x01F93794 BL 0x1C16F20
	0x01F93798 BL 0x1C16F20
	0x01F9379C BL 0x1C16F20
	0x01F937A0 MOV X0, X20
	0x01F937A4 BL 0x1C16F18
	0x01F937A8 B 0x1F937CC
	0x01F937AC B 0x1F937CC
	0x01F937B0 B 0x1F937CC
	0x01F937B4 B 0x1F937CC
	0x01F937B8 B 0x1F937CC
	0x01F937BC B 0x1F937CC
	0x01F937C0 B 0x1F937CC
	0x01F937C4 B 0x1F937CC
	0x01F937C8 B 0x1F937CC
	0x01F937CC CMP W1, 0x1
	0x01F937D0 B.NE 0x1F937E4
	0x01F937D4 BL 0x3EB1AD0
	0x01F937D8 LDR X20, [X0]
	0x01F937DC BL 0x3EB1AE0
	0x01F937E0 B 0x1F93710
	0x01F937E4 STR X0, [X31]
	0x01F937E8 MOV X20, X31
	0x01F937EC B 0x1F937F4
	0x01F937F0 STR X0, [X31]
	0x01F937F4 CBZ X19, 0x1F93850
	0x01F937F8 LDR X8, [X19]
	0x01F937FC LDR X1, [X22]
	0x01F93800 LDRH W9, [X8 + 0x12E]
	0x01F93804 CBZ X9, 0x1F93828
	0x01F93808 LDR X10, [X8 + 0xB0]
	0x01F9380C ADD X10, X10, 0x8
	0x01F93810 LDUR X11, [X10 - 0x8]
	0x01F93814 CMP X11, X1
	0x01F93818 B.EQ 0x1F93838
	0x01F9381C SUBS X9, X9, 0x1
	0x01F93820 ADD X10, X10, 0x10
	0x01F93824 B.NE 0x1F93810
	0x01F93828 MOV X0, X19
	0x01F9382C MOV W2, W31

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+80], X30
	003 Move [X31+96], X26
	004 Move [X31+104], X25
	005 Move [X31+112], X24
	006 Move [X31+120], X23
	007 Move [X31+128], X22
	008 Move [X31+136], X21
	009 Move [X31+144], X20
	010 Move [X31+152], X19
	011 Move X20, 0x2447000
	012 Move X21, 0x2188000
	013 Move W8, [X20+1848]
	014 Move X21, [X21+2944]
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {52}
	020 Move X0, 0x2188000
	021 Move X0, [X0+2944]
	022 Call 0x1C17CF4
	023 Move X0, 0x2188000
	024 Move X0, [X0+2952]
	025 Call 0x1C17CF4
	026 Move X0, 0x2188000
	027 Move X0, [X0+2960]
	028 Call 0x1C17CF4
	029 Move X0, 0x2188000
	030 Move X0, [X0+2968]
	031 Call 0x1C17CF4
	032 Move X0, 0x2188000
	033 Move X0, [X0+2976]
	034 Call 0x1C17CF4
	035 Move X0, 0x2188000
	036 Move X0, [X0+2984]
	037 Call 0x1C17CF4
	038 Move X0, 0x2188000
	039 Move X0, [X0+2992]
	040 Call 0x1C17CF4
	041 Move X0, 0x2188000
	042 Move X0, [X0+3000]
	043 Call 0x1C17CF4
	044 Move X0, 0x2188000
	045 Move X0, [X0+3008]
	046 Call 0x1C17CF4
	047 Move X0, 0x2188000
	048 Move X0, [X0+1352]
	049 Call 0x1C17CF4
	050 Move W8, 1
	051 Move [X20+1848], W8
	052 Move X0, [X21]
	053 Move [X31+48], X31
	054 Move [X31+56], X31
	055 Move [X31+64], X31
	056 Move [X31+32], X31
	057 Move W8, [X0+224]
	058 Compare W8, 0
	059 JumpIfNotEqual {61}
	060 Call 0x1C17DFC
	061 Compare X19, 0
	062 JumpIfEqual {200}
	063 Move X8, [X21]
	064 Move X9, 0x2188000
	065 Move X8, [X8+184]
	066 Move X9, [X9+2976]
	067 Move X1, [X8]
	068 Move X2, [X9]
	069 Move X0, X19
	070 Call 0x21E6DE8, X0, X1
	071 Move X8, [X21]
	072 Move X9, [X8+184]
	073 Move X9, [X9+8]
	074 Compare X9, 0
	075 JumpIfEqual {201}
	076 Move W2, [X9+24]
	077 Move W10, [X9+28]
	078 Add W10, W10, 1
	079 NotImplemented "Instruction CMP not yet implemented."
	080 Move [X9+24], W31
	081 Move [X9+28], W10
	082 Move X0, [X9+16]
	083 Move W1, W31
	084 Move X3, X31
	085 Call Array.Clear, X0, X1, X2
	086 Move X8, [X21]
	087 Move X8, [X8+184]
	088 Move X0, [X8]
	089 Compare X0, 0
	090 JumpIfEqual {202}
	091 Move X8, 0x2188000
	092 Move X8, [X8+3000]
	093 Move X1, [X8]
	094 Add X8, X31, 8
	095 Call List`1<Object>.GetEnumerator, X0
	096 Move X24, 0x2188000
	097 Move X25, 0x2188000
	098 Move X26, 0x2188000
	099 Move X24, [X24+2960]
	100 Move X25, [X25+1352]
	101 Move X26, [X26+2984]
	102 NotImplemented "Instruction LDUR not yet implemented."
	103 Move X8, [X31+24]
	104 Move X23, 0x2188000
	105 Move X22, 0x2188000
	106 Move X23, [X23+2952]
	107 Move X22, [X22+3008]
	108 Move [X31+3], V0
	109 Move [X31+64], X8
	110 Move X1, [X24]
	111 Add X0, X31, 48
	112 Call Enumerator<Object>.MoveNext, X0
	113 Move TEMP, X0
	114 And TEMP, TEMP, 1
	115 Compare TEMP, 1
	116 JumpIfNotEqual {164}
	117 Move X19, [X31+64]
	118 Compare X19, 0
	119 JumpIfEqual {197}
	120 Move X0, X19
	121 Move X1, X31
	122 Call "il2cpp_vm_object_is_inst", X0
	123 Move X20, X0
	124 Move X0, [X25]
	125 Move W8, [X0+224]
	126 Compare W8, 0
	127 JumpIfNotEqual {129}
	128 Call 0x1C17DFC
	129 Move X0, X20
	130 Call NetworkRunnerVisibilityExtensions.IsRecognizedByRunnerVisibility, X0
	131 Move TEMP, X0
	132 And TEMP, TEMP, 1
	133 Compare TEMP, 1
	134 JumpIfNotEqual {110}
	135 Move X0, [X21]
	136 Move W8, [X0+224]
	137 Compare W8, 0
	138 JumpIfNotEqual {141}
	139 Call 0x1C17DFC
	140 Move X0, [X21]
	141 Move X8, [X0+184]
	142 Move X0, [X8+8]
	143 Compare X0, 0
	144 JumpIfEqual {198}
	145 Move W10, [X0+28]
	146 Move X8, [X0+16]
	147 Move X9, [X26]
	148 Add W10, W10, 1
	149 Move [X0+28], W10
	150 Compare X8, 0
	151 JumpIfEqual {199}
	152 NotImplemented "Instruction LDRSW not yet implemented."
	153 Move W11, [X8+24]
	154 NotImplemented "Instruction CMP not yet implemented."
	155 Add W9, W10, 1
	156 Add X8, X8, X10
	157 Move [X0+24], W9
	158 Move [X8+32], X19
	159 Move X8, [X9+32]
	160 Move X8, [X8+192]
	161 Move X2, [X8+112]
	162 Move X1, X19
	163 Call List`1<Object>.AddWithResize, X0, X1
	164 Move X19, X31
	165 Move X1, [X23]
	166 Add X0, X31, 48
	167 Call Enumerator<Object>.Dispose, X0
	168 Compare X19, 0
	169 JumpIfNotEqual {203}
	170 Move X0, [X21]
	171 Move W8, [X0+224]
	172 Compare W8, 0
	173 JumpIfNotEqual {176}
	174 Call 0x1C17DFC
	175 Move X0, [X21]
	176 Move X8, [X0+184]
	177 Move X0, [X8+8]
	178 Compare X0, 0
	179 JumpIfEqual {205}
	180 Move X1, [X22]
	181 Call List`1<Object>.ToArray, X0
	182 Move X19, X0
	183 Add X0, X31, 32
	184 Call 0x199B52C
	185 Move X0, X19
	186 Move X20, [X31+144]
	187 Move X19, [X31+152]
	188 Move X22, [X31+128]
	189 Move X21, [X31+136]
	190 Move X24, [X31+112]
	191 Move X23, [X31+120]
	192 Move X26, [X31+96]
	193 Move X25, [X31+104]
	194 Move X30, [X31+80]
	195 Add X31, X31, 160
	196 Return X0
	197 Call 0x1C17F20
	198 Call 0x1C17F20
	199 Call 0x1C17F20
	200 Call 0x1C17F20
	201 Call 0x1C17F20
	202 Call 0x1C17F20
	203 Move X0, X19
	204 Call 0x1C17F18
	205 Call 0x1C17F20
	206 Move [X31], X1
	207 Move [X31+88], X0
	208 NotImplemented "Instruction CMP not yet implemented."
	209 Call 0x3EB2AD0
	210 Move X19, [X0]
	211 Call 0x3EB2AE0
	212 Move [X31], X1
	213 Move [X31+88], X0
	214 Move X19, X31
	215 Move X1, [X23]
	216 Add X0, X31, 48
	217 Call Enumerator<Object>.Dispose, X0
	218 Compare X19, 0
	219 JumpIfNotEqual {228}
	220 Move X8, [X31]
	221 NotImplemented "Instruction CMP not yet implemented."
	222 Move X0, [X31+88]
	223 Call 0x3EB2AD0
	224 Move X8, [X0]
	225 Move [X31+32], X8
	226 Call 0x3EB2AE0
	227 Move X19, X31
	228 Move X0, X19
	229 Call 0x1C17F18
	230 Move [X31], X1
	231 Move [X31+88], X0
	232 Move [X31+88], X0
	233 Add X0, X31, 32
	234 Call 0x199B52C
	235 Move X0, [X31+88]
	236 Call 0x1D2D690
	237 Call 0x1991590

Method: UnityEngine.Component[] FindRecognizedNestedComponents(UnityEngine.GameObject go)

Disassembly:
	0x01F938A0 ADRP X0, 0x2160000
	0x01F938A4 LDR X0, [X0 + 0xA28]
	0x01F938A8 BL 0x1C16CF4
	0x01F938AC ADRP X0, 0x2187000
	0x01F938B0 LDR X0, [X0 + 0xC10]
	0x01F938B4 BL 0x1C16CF4
	0x01F938B8 ADRP X0, 0x2160000
	0x01F938BC LDR X0, [X0 + 0xE00]
	0x01F938C0 BL 0x1C16CF4
	0x01F938C4 ADRP X0, 0x2187000
	0x01F938C8 LDR X0, [X0 + 0xC18]
	0x01F938CC BL 0x1C16CF4
	0x01F938D0 ADRP X0, 0x2187000
	0x01F938D4 LDR X0, [X0 + 0xC20]
	0x01F938D8 BL 0x1C16CF4
	0x01F938DC ADRP X0, 0x2160000
	0x01F938E0 LDR X0, [X0 + 0xE18]
	0x01F938E4 BL 0x1C16CF4
	0x01F938E8 ADRP X0, 0x2187000
	0x01F938EC LDR X0, [X0 + 0xC28]
	0x01F938F0 BL 0x1C16CF4
	0x01F938F4 MOVZ W8, 0x1
	0x01F938F8 STRB W8, [X20 + 0x742]
	0x01F938FC LDR X0, [X19 + 0x48]
	0x01F93900 CBZ X0, 0x1F93F10
	0x01F93904 MOV X1, X31
	0x01F93908 BL 0x1E9DEF4
	0x01F9390C TBZ X0, 0x0, 0x1F93924
	0x01F93910 ADD X8, X19, 0x24
	0x01F93914 ADD X9, X19, 0x28
	0x01F93918 ADD X10, X19, 0x2C
	0x01F9391C ADD X11, X19, 0x30
	0x01F93920 B 0x1F93934
	0x01F93924 ADD X8, X19, 0x34
	0x01F93928 ADD X9, X19, 0x38
	0x01F9392C ADD X10, X19, 0x3C
	0x01F93930 ADD X11, X19, 0x40
	0x01F93934 LDR V0, [X8]
	0x01F93938 LDR V1, [X9]
	0x01F9393C LDR V2, [X10]
	0x01F93940 LDR V3, [X11]
	0x01F93944 MOV X0, X31
	0x01F93948 BL 0x3C0D030
	0x01F9394C LDR X0, [X19 + 0x48]
	0x01F93950 CBZ X0, 0x1F93F10
	0x01F93954 MOV X1, X31
	0x01F93958 BL 0x1E9EB6C
	0x01F9395C CBZ X0, 0x1F93F10
	0x01F93960 LDR X8, [X0 + 0x58]
	0x01F93964 CBZ X8, 0x1F93F10
	0x01F93968 LDR X0, [X8 + 0x10]
	0x01F9396C CBZ X0, 0x1F93F10
	0x01F93970 ADRP X25, 0x2160000
	0x01F93974 ADRP X26, 0x2187000
	0x01F93978 ADRP X24, 0x2160000
	0x01F9397C ADRP X27, 0x2187000
	0x01F93980 ADRP X28, 0x2187000
	0x01F93984 ADRP X29, 0x2187000
	0x01F93988 ADRP X22, 0x2160000
	0x01F9398C LDR X25, [X25 + 0xE18]
	0x01F93990 LDR X26, [X26 + 0xC18]
	0x01F93994 LDR X24, [X24 + 0xE00]
	0x01F93998 LDR X27, [X27 + 0xC20]
	0x01F9399C LDR X28, [X28 + 0xC10]
	0x01F939A0 LDR X29, [X29 + 0xC28]
	0x01F939A4 LDR X22, [X22 + 0xA28]
	0x01F939A8 MOV X1, X31
	0x01F939AC BL 0x1EE9F1C
	0x01F939B0 MOV X19, X0
	0x01F939B4 CBZ X19, 0x1F93F00
	0x01F939B8 LDR X8, [X19]
	0x01F939BC LDR X1, [X25]
	0x01F939C0 LDRH W9, [X8 + 0x12E]
	0x01F939C4 CBZ X9, 0x1F939E8
	0x01F939C8 LDR X10, [X8 + 0xB0]
	0x01F939CC ADD X10, X10, 0x8
	0x01F939D0 LDUR X11, [X10 - 0x8]
	0x01F939D4 CMP X11, X1
	0x01F939D8 B.EQ 0x1F939F8
	0x01F939DC SUBS X9, X9, 0x1
	0x01F939E0 ADD X10, X10, 0x10
	0x01F939E4 B.NE 0x1F939D0
	0x01F939E8 MOV X0, X19
	0x01F939EC MOV W2, W31
	0x01F939F0 BL 0x1C5C788
	0x01F939F4 B 0x1F93A04
	0x01F939F8 LDRSW X9, [X10]
	0x01F939FC ADD X8, X8, X9, 0x4, LSL
	0x01F93A00 ADD X0, X8, 0x138
	0x01F93A04 LDP X8, X1, [X0]
	0x01F93A08 MOV X0, X19
	0x01F93A0C BLR X8
	0x01F93A10 TBZ X0, 0x0, 0x1F93DA4
	0x01F93A14 LDR X8, [X19]
	0x01F93A18 LDR X1, [X26]
	0x01F93A1C LDRH W9, [X8 + 0x12E]
	0x01F93A20 CBZ X9, 0x1F93A44
	0x01F93A24 LDR X10, [X8 + 0xB0]
	0x01F93A28 ADD X10, X10, 0x8
	0x01F93A2C LDUR X11, [X10 - 0x8]
	0x01F93A30 CMP X11, X1
	0x01F93A34 B.EQ 0x1F93A54
	0x01F93A38 SUBS X9, X9, 0x1
	0x01F93A3C ADD X10, X10, 0x10
	0x01F93A40 B.NE 0x1F93A2C
	0x01F93A44 MOV X0, X19
	0x01F93A48 MOV W2, W31
	0x01F93A4C BL 0x1C5C788
	0x01F93A50 B 0x1F93A60
	0x01F93A54 LDRSW X9, [X10]
	0x01F93A58 ADD X8, X8, X9, 0x4, LSL
	0x01F93A5C ADD X0, X8, 0x138
	0x01F93A60 LDP X8, X1, [X0]
	0x01F93A64 MOV X0, X19
	0x01F93A68 BLR X8
	0x01F93A6C CBZ X0, 0x1F93F04
	0x01F93A70 MOV X1, X31
	0x01F93A74 BL 0x1EEA0C4
	0x01F93A78 MOV X20, X0
	0x01F93A7C CBZ X0, 0x1F93D3C
	0x01F93A80 LDR X8, [X20]
	0x01F93A84 LDR X1, [X25]
	0x01F93A88 LDRH W9, [X8 + 0x12E]
	0x01F93A8C CBZ X9, 0x1F93AB0
	0x01F93A90 LDR X10, [X8 + 0xB0]
	0x01F93A94 ADD X10, X10, 0x8
	0x01F93A98 LDUR X11, [X10 - 0x8]
	0x01F93A9C CMP X11, X1
	0x01F93AA0 B.EQ 0x1F93AC0
	0x01F93AA4 SUBS X9, X9, 0x1
	0x01F93AA8 ADD X10, X10, 0x10
	0x01F93AAC B.NE 0x1F93A98
	0x01F93AB0 MOV X0, X20
	0x01F93AB4 MOV W2, W31
	0x01F93AB8 BL 0x1C5C788
	0x01F93ABC B 0x1F93ACC
	0x01F93AC0 LDRSW X9, [X10]
	0x01F93AC4 ADD X8, X8, X9, 0x4, LSL
	0x01F93AC8 ADD X0, X8, 0x138
	0x01F93ACC LDP X8, X1, [X0]
	0x01F93AD0 MOV X0, X20
	0x01F93AD4 BLR X8
	0x01F93AD8 TBZ X0, 0x0, 0x1F93CCC
	0x01F93ADC LDR X8, [X20]
	0x01F93AE0 LDR X1, [X27]
	0x01F93AE4 LDRH W9, [X8 + 0x12E]
	0x01F93AE8 CBZ X9, 0x1F93B0C
	0x01F93AEC LDR X10, [X8 + 0xB0]
	0x01F93AF0 ADD X10, X10, 0x8
	0x01F93AF4 LDUR X11, [X10 - 0x8]
	0x01F93AF8 CMP X11, X1
	0x01F93AFC B.EQ 0x1F93B1C
	0x01F93B00 SUBS X9, X9, 0x1
	0x01F93B04 ADD X10, X10, 0x10
	0x01F93B08 B.NE 0x1F93AF4
	0x01F93B0C MOV X0, X20
	0x01F93B10 MOV W2, W31
	0x01F93B14 BL 0x1C5C788
	0x01F93B18 B 0x1F93B28
	0x01F93B1C LDRSW X9, [X10]
	0x01F93B20 ADD X8, X8, X9, 0x4, LSL
	0x01F93B24 ADD X0, X8, 0x138
	0x01F93B28 LDP X8, X1, [X0]
	0x01F93B2C MOV X0, X20
	0x01F93B30 BLR X8
	0x01F93B34 MOV X21, X0
	0x01F93B38 CBZ X0, 0x1F93D34
	0x01F93B3C ADD X8, X31, 0x90
	0x01F93B40 MOV X0, X21
	0x01F93B44 MOV X1, X31
	0x01F93B48 BL 0x1EE9AD4
	0x01F93B4C LDP V0, V1, [X31 + 0x90]
	0x01F93B50 LDP V2, V3, [X31 + 0xB0]
	0x01F93B54 STP V0, V1, [X31 + 0x50]
	0x01F93B58 STP V2, V3, [X31 + 0x70]
	0x01F93B5C ADD X0, X31, 0x50
	0x01F93B60 MOV X1, X31
	0x01F93B64 BL 0x3C0D150
	0x01F93B68 MOV X0, X21
	0x01F93B6C MOV X1, X31
	0x01F93B70 BL 0x1EE95E0
	0x01F93B74 CMP W0, 0x1
	0x01F93B78 B.EQ 0x1F93C30
	0x01F93B7C CMP W0, 0x2
	0x01F93B80 B.EQ 0x1F93BF0
	0x01F93B84 CMP W0, 0x3
	0x01F93B88 B.NE 0x1F93C78
	0x01F93B8C MOV X0, X21
	0x01F93B90 MOV X1, X31
	0x01F93B94 BL 0x1EE996C
	0x01F93B98 MOV V8.16B, V0.16B
	0x01F93B9C MOV V9.16B, V1.16B
	0x01F93BA0 MOV V10.16B, V2.16B
	0x01F93BA4 MOV X0, X21
	0x01F93BA8 MOV X1, X31
	0x01F93BAC BL 0x1EE9A20
	0x01F93BB0 MOV V11.16B, V0.16B
	0x01F93BB4 MOV V12.16B, V1.16B
	0x01F93BB8 MOV V13.16B, V2.16B
	0x01F93BBC MOV X0, X21
	0x01F93BC0 MOV X1, X31
	0x01F93BC4 BL 0x1EE9804
	0x01F93BC8 MOV V6.16B, V0.16B
	0x01F93BCC MOV V0.16B, V8.16B
	0x01F93BD0 MOV V1.16B, V9.16B
	0x01F93BD4 MOV V2.16B, V10.16B
	0x01F93BD8 MOV V3.16B, V11.16B
	0x01F93BDC MOV V4.16B, V12.16B
	0x01F93BE0 MOV V5.16B, V13.16B
	0x01F93BE4 MOV X0, X31
	0x01F93BE8 BL 0x1EE9CD4
	0x01F93BEC B 0x1F93A80
	0x01F93BF0 MOV X0, X21
	0x01F93BF4 MOV X1, X31
	0x01F93BF8 BL 0x1EE974C
	0x01F93BFC MOV V8.16B, V0.16B
	0x01F93C00 MOV V9.16B, V1.16B
	0x01F93C04 MOV V10.16B, V2.16B
	0x01F93C08 MOV X0, X21
	0x01F93C0C MOV X1, X31
	0x01F93C10 BL 0x1EE9804
	0x01F93C14 MOV V3.16B, V0.16B
	0x01F93C18 MOV V0.16B, V8.16B
	0x01F93C1C MOV V1.16B, V9.16B
	0x01F93C20 MOV V2.16B, V10.16B
	0x01F93C24 MOV X0, X31
	0x01F93C28 BL 0x3C0CB98
	0x01F93C2C B 0x1F93A80
	0x01F93C30 MOV X0, X21
	0x01F93C34 MOV X1, X31
	0x01F93C38 BL 0x1EE974C
	0x01F93C3C MOV V8.16B, V0.16B
	0x01F93C40 MOV V9.16B, V1.16B
	0x01F93C44 MOV V10.16B, V2.16B
	0x01F93C48 MOV X0, X21
	0x01F93C4C MOV X1, X31
	0x01F93C50 BL 0x1EE9694
	0x01F93C54 FADD S3, S0, S0
	0x01F93C58 FADD S4, S1, S1
	0x01F93C5C FADD S5, S2, S2
	0x01F93C60 MOV V0.16B, V8.16B
	0x01F93C64 MOV V1.16B, V9.16B
	0x01F93C68 MOV V2.16B, V10.16B
	0x01F93C6C MOV X0, X31
	0x01F93C70 BL 0x3C0CCD8
	0x01F93C74 B 0x1F93A80

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+80], X30
	003 Move [X31+96], X26
	004 Move [X31+104], X25
	005 Move [X31+112], X24
	006 Move [X31+120], X23
	007 Move [X31+128], X22
	008 Move [X31+136], X21
	009 Move [X31+144], X20
	010 Move [X31+152], X19
	011 Move X20, 0x2447000
	012 Move W8, [X20+1849]
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {53}
	018 Move X0, 0x2188000
	019 Move X0, [X0+2944]
	020 Call 0x1C17CF4
	021 Move X0, 0x2188000
	022 Move X0, [X0+2952]
	023 Call 0x1C17CF4
	024 Move X0, 0x2188000
	025 Move X0, [X0+2960]
	026 Call 0x1C17CF4
	027 Move X0, 0x2188000
	028 Move X0, [X0+2968]
	029 Call 0x1C17CF4
	030 Move X0, 0x2188000
	031 Move X0, [X0+2984]
	032 Call 0x1C17CF4
	033 Move X0, 0x2188000
	034 Move X0, [X0+2992]
	035 Call 0x1C17CF4
	036 Move X0, 0x2188000
	037 Move X0, [X0+3000]
	038 Call 0x1C17CF4
	039 Move X0, 0x2188000
	040 Move X0, [X0+3008]
	041 Call 0x1C17CF4
	042 Move X0, 0x2188000
	043 Move X0, [X0+3016]
	044 Call 0x1C17CF4
	045 Move X0, 0x216B000
	046 Move X0, [X0+2952]
	047 Call 0x1C17CF4
	048 Move X0, 0x2188000
	049 Move X0, [X0+1352]
	050 Call 0x1C17CF4
	051 Move W8, 1
	052 Move [X20+1849], W8
	053 Move [X31+48], X31
	054 Move [X31+56], X31
	055 Move [X31+64], X31
	056 Move [X31+32], X31
	057 Compare X19, 0
	058 JumpIfEqual {217}
	059 Move X0, X19
	060 Move X1, X31
	061 Call GameObject.get_transform, X0
	062 Move X21, 0x2188000
	063 Move X21, [X21+2944]
	064 Move X19, X0
	065 Move X0, [X21]
	066 Move W8, [X0+224]
	067 Compare W8, 0
	068 JumpIfNotEqual {71}
	069 Call 0x1C17DFC
	070 Move X0, [X21]
	071 Move X8, 0x216B000
	072 Move X8, [X8+2952]
	073 Move X9, [X0+184]
	074 Move X8, [X8]
	075 Move X20, [X9]
	076 Move W10, [X8+224]
	077 Compare W10, 0
	078 JumpIfNotEqual {81}
	079 Move X0, X8
	080 Call 0x1C17DFC
	081 Move X8, 0x2188000
	082 Move X8, [X8+3016]
	083 Move X3, [X8]
	084 Move W2, 1
	085 Move X0, X19
	086 Move X1, X20
	087 Call 0x2224D74, X0, X1, X2
	088 Move X8, [X21]
	089 Move X9, [X8+184]
	090 Move X9, [X9+8]
	091 Compare X9, 0
	092 JumpIfEqual {218}
	093 Move W2, [X9+24]
	094 Move W10, [X9+28]
	095 Add W10, W10, 1
	096 NotImplemented "Instruction CMP not yet implemented."
	097 Move [X9+24], W31
	098 Move [X9+28], W10
	099 Move X0, [X9+16]
	100 Move W1, W31
	101 Move X3, X31
	102 Call Array.Clear, X0, X1, X2
	103 Move X8, [X21]
	104 Move X8, [X8+184]
	105 Move X0, [X8]
	106 Compare X0, 0
	107 JumpIfEqual {219}
	108 Move X8, 0x2188000
	109 Move X8, [X8+3000]
	110 Move X1, [X8]
	111 Add X8, X31, 8
	112 Call List`1<Object>.GetEnumerator, X0
	113 Move X24, 0x2188000
	114 Move X25, 0x2188000
	115 Move X26, 0x2188000
	116 Move X24, [X24+2960]
	117 Move X25, [X25+1352]
	118 Move X26, [X26+2984]
	119 NotImplemented "Instruction LDUR not yet implemented."
	120 Move X8, [X31+24]
	121 Move X23, 0x2188000
	122 Move X22, 0x2188000
	123 Move X23, [X23+2952]
	124 Move X22, [X22+3008]
	125 Move [X31+3], V0
	126 Move [X31+64], X8
	127 Move X1, [X24]
	128 Add X0, X31, 48
	129 Call Enumerator<Object>.MoveNext, X0
	130 Move TEMP, X0
	131 And TEMP, TEMP, 1
	132 Compare TEMP, 1
	133 JumpIfNotEqual {181}
	134 Move X19, [X31+64]
	135 Compare X19, 0
	136 JumpIfEqual {214}
	137 Move X0, X19
	138 Move X1, X31
	139 Call "il2cpp_vm_object_is_inst", X0
	140 Move X20, X0
	141 Move X0, [X25]
	142 Move W8, [X0+224]
	143 Compare W8, 0
	144 JumpIfNotEqual {146}
	145 Call 0x1C17DFC
	146 Move X0, X20
	147 Call NetworkRunnerVisibilityExtensions.IsRecognizedByRunnerVisibility, X0
	148 Move TEMP, X0
	149 And TEMP, TEMP, 1
	150 Compare TEMP, 1
	151 JumpIfNotEqual {127}
	152 Move X0, [X21]
	153 Move W8, [X0+224]
	154 Compare W8, 0
	155 JumpIfNotEqual {158}
	156 Call 0x1C17DFC
	157 Move X0, [X21]
	158 Move X8, [X0+184]
	159 Move X0, [X8+8]
	160 Compare X0, 0
	161 JumpIfEqual {215}
	162 Move W10, [X0+28]
	163 Move X8, [X0+16]
	164 Move X9, [X26]
	165 Add W10, W10, 1
	166 Move [X0+28], W10
	167 Compare X8, 0
	168 JumpIfEqual {216}
	169 NotImplemented "Instruction LDRSW not yet implemented."
	170 Move W11, [X8+24]
	171 NotImplemented "Instruction CMP not yet implemented."
	172 Add W9, W10, 1
	173 Add X8, X8, X10
	174 Move [X0+24], W9
	175 Move [X8+32], X19
	176 Move X8, [X9+32]
	177 Move X8, [X8+192]
	178 Move X2, [X8+112]
	179 Move X1, X19
	180 Call List`1<Object>.AddWithResize, X0, X1
	181 Move X19, X31
	182 Move X1, [X23]
	183 Add X0, X31, 48
	184 Call Enumerator<Object>.Dispose, X0
	185 Compare X19, 0
	186 JumpIfNotEqual {220}
	187 Move X0, [X21]
	188 Move W8, [X0+224]
	189 Compare W8, 0
	190 JumpIfNotEqual {193}
	191 Call 0x1C17DFC
	192 Move X0, [X21]
	193 Move X8, [X0+184]
	194 Move X0, [X8+8]
	195 Compare X0, 0
	196 JumpIfEqual {222}
	197 Move X1, [X22]
	198 Call List`1<Object>.ToArray, X0
	199 Move X19, X0
	200 Add X0, X31, 32
	201 Call 0x199B52C
	202 Move X0, X19
	203 Move X20, [X31+144]
	204 Move X19, [X31+152]
	205 Move X22, [X31+128]
	206 Move X21, [X31+136]
	207 Move X24, [X31+112]
	208 Move X23, [X31+120]
	209 Move X26, [X31+96]
	210 Move X25, [X31+104]
	211 Move X30, [X31+80]
	212 Add X31, X31, 160
	213 Return X0
	214 Call 0x1C17F20
	215 Call 0x1C17F20
	216 Call 0x1C17F20
	217 Call 0x1C17F20
	218 Call 0x1C17F20
	219 Call 0x1C17F20
	220 Move X0, X19
	221 Call 0x1C17F18
	222 Call 0x1C17F20
	223 Move [X31], X1
	224 Move [X31+88], X0
	225 NotImplemented "Instruction CMP not yet implemented."
	226 Call 0x3EB2AD0
	227 Move X19, [X0]
	228 Call 0x3EB2AE0
	229 Move [X31], X1
	230 Move [X31+88], X0
	231 Move X19, X31
	232 Move X1, [X23]
	233 Add X0, X31, 48
	234 Call Enumerator<Object>.Dispose, X0
	235 Compare X19, 0
	236 JumpIfNotEqual {245}
	237 Move X8, [X31]
	238 NotImplemented "Instruction CMP not yet implemented."
	239 Move X0, [X31+88]
	240 Call 0x3EB2AD0
	241 Move X8, [X0]
	242 Move [X31+32], X8
	243 Call 0x3EB2AE0
	244 Move X19, X31
	245 Move X0, X19
	246 Call 0x1C17F18
	247 Move [X31], X1
	248 Move [X31+88], X0
	249 Move [X31+88], X0
	250 Add X0, X31, 32
	251 Call 0x199B52C
	252 Move X0, [X31+88]
	253 Call 0x1D2D690
	254 Call 0x1991590

Method: System.Void .ctor()

Disassembly:
	0x01F93C78 MOV X0, X21
	0x01F93C7C MOV X1, X31
	0x01F93C80 BL 0x1EE95E0
	0x01F93C84 LDR X8, [X28]
	0x01F93C88 STR W0, [X31 + 0x90]
	0x01F93C8C ADD X1, X31, 0x90
	0x01F93C90 MOV X0, X8
	0x01F93C94 BL 0x1C16E04
	0x01F93C98 MOV X1, X0
	0x01F93C9C LDR X0, [X29]
	0x01F93CA0 MOV X2, X31
	0x01F93CA4 BL 0x321EFD0
	0x01F93CA8 MOV X21, X0
	0x01F93CAC LDR X0, [X22]
	0x01F93CB0 LDR W8, [X0 + 0xE0]
	0x01F93CB4 CBNZ W8, 0x1F93CBC
	0x01F93CB8 BL 0x1C16DFC
	0x01F93CBC MOV X0, X21
	0x01F93CC0 MOV X1, X31
	0x01F93CC4 BL 0x3C06A04
	0x01F93CC8 B 0x1F93A80
	0x01F93CCC MOV X23, X31
	0x01F93CD0 CBZ X20, 0x1F93D2C
	0x01F93CD4 LDR X8, [X20]
	0x01F93CD8 LDR X1, [X24]
	0x01F93CDC LDRH W9, [X8 + 0x12E]
	0x01F93CE0 CBZ X9, 0x1F93D04
	0x01F93CE4 LDR X10, [X8 + 0xB0]
	0x01F93CE8 ADD X10, X10, 0x8
	0x01F93CEC LDUR X11, [X10 - 0x8]
	0x01F93CF0 CMP X11, X1
	0x01F93CF4 B.EQ 0x1F93D14
	0x01F93CF8 SUBS X9, X9, 0x1
	0x01F93CFC ADD X10, X10, 0x10
	0x01F93D00 B.NE 0x1F93CEC
	0x01F93D04 MOV X0, X20
	0x01F93D08 MOV W2, W31
	0x01F93D0C BL 0x1C5C788

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x2447000
	007 Move X21, 0x2188000
	008 Move W8, [X20+1850]
	009 Move X21, [X21+3024]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x2188000
	016 Move X0, [X0+3024]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+1850], W8
	020 Move X0, [X21]
	021 Move W1, W31
	022 Call 0x1C17D6C
	023 Move [X19+40], X0
	024 Move X0, X31
	025 Call Guid.NewGuid
	026 Move [X31], X0
	027 Move [X31+8], X1
	028 Add X0, X31, 0
	029 Move X1, X31
	030 Call Guid.ToString, X0
	031 Compare X0, 0
	032 JumpIfEqual {47}
	033 Move W2, 19
	034 Move W1, W31
	035 Move X3, X31
	036 Call String.Substring, X0, X1, X2
	037 Move [X19+48], X0
	038 Move X0, X19
	039 Move X1, X31
	040 Call Behaviour..ctor, X0
	041 Move X20, [X31+32]
	042 Move X19, [X31+40]
	043 Move X30, [X31+16]
	044 Move X21, [X31+24]
	045 Add X31, X31, 48
	046 Return 
	047 Call 0x1C17F20

Method: System.Void .cctor()

Disassembly:
	0x01F93D10 B 0x1F93D20
	0x01F93D14 LDRSW X9, [X10]
	0x01F93D18 ADD X8, X8, X9, 0x4, LSL
	0x01F93D1C ADD X0, X8, 0x138
	0x01F93D20 LDP X8, X1, [X0]
	0x01F93D24 MOV X0, X20
	0x01F93D28 BLR X8
	0x01F93D2C CBZ X23, 0x1F939B4
	0x01F93D30 B 0x1F93F08
	0x01F93D34 BL 0x1C16F20
	0x01F93D38 B 0x1F93F1C
	0x01F93D3C BL 0x1C16F20
	0x01F93D40 B 0x1F93F1C
	0x01F93D44 B 0x1F93D88
	0x01F93D48 B 0x1F93D88
	0x01F93D4C B 0x1F93D88
	0x01F93D50 B 0x1F93D88
	0x01F93D54 B 0x1F93D88
	0x01F93D58 B 0x1F93D88
	0x01F93D5C B 0x1F93D88
	0x01F93D60 B 0x1F93D88
	0x01F93D64 B 0x1F93D88
	0x01F93D68 B 0x1F93D88
	0x01F93D6C B 0x1F93D88
	0x01F93D70 B 0x1F93D88
	0x01F93D74 B 0x1F93D88
	0x01F93D78 B 0x1F93D88
	0x01F93D7C B 0x1F93D88
	0x01F93D80 B 0x1F93D88
	0x01F93D84 B 0x1F93D88
	0x01F93D88 MOV X21, X1
	0x01F93D8C CMP W21, 0x1
	0x01F93D90 B.NE 0x1F93E90
	0x01F93D94 BL 0x3EB1AD0
	0x01F93D98 LDR X23, [X0]
	0x01F93D9C BL 0x3EB1AE0
	0x01F93DA0 B 0x1F93CD0
	0x01F93DA4 MOV X20, X31
	0x01F93DA8 MOVZ W21, 0xD
	0x01F93DAC CBZ X19, 0x1F93E08
	0x01F93DB0 LDR X8, [X19]
	0x01F93DB4 LDR X1, [X24]
	0x01F93DB8 LDRH W9, [X8 + 0x12E]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, 0x2447000
	007 Move X22, 0x2188000
	008 Move X21, 0x2188000
	009 Move X20, 0x2188000
	010 Move W8, [X19+1851]
	011 Move X22, [X22+3032]
	012 Move X21, [X21+3040]
	013 Move X20, [X20+2944]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0x2188000
	019 Move X0, [X0+2944]
	020 Call 0x1C17CF4
	021 Move X0, 0x2188000
	022 Move X0, [X0+3040]
	023 Call 0x1C17CF4
	024 Move X0, 0x2188000
	025 Move X0, [X0+3032]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X19+1851], W8
	029 Move X0, [X22]
	030 Call 0x1C17F10
	031 Move X1, [X21]
	032 Move X19, X0
	033 Call List`1<Object>..ctor, X0
	034 Move X8, [X20]
	035 Move X8, [X8+184]
	036 Move [X8], X19
	037 Move X0, [X22]
	038 Call 0x1C17F10
	039 Move X1, [X21]
	040 Move X19, X0
	041 Call List`1<Object>..ctor, X0
	042 Move X8, [X20]
	043 Move X22, [X31+16]
	044 Move X21, [X31+24]
	045 Move X8, [X8+184]
	046 Move [X8+8], X19
	047 Move X20, [X31+32]
	048 Move X19, [X31+40]
	049 Move X30, [X31+48]
	050 Return 

