Type: Fusion.NetworkSceneManagerDefault/<LoadSceneCoroutine>d__40

Method: System.Void .ctor(System.Int32 <>1__state)

Disassembly:
	0x01F90FA4 BL 0x1F90118
	0x01F90FA8 LDR X8, [X31 + 0x78]
	0x01F90FAC STR W0, [X8 + 0x68]!
	0x01F90FB0 MOV X0, X8
	0x01F90FB4 MOV X1, X31
	0x01F90FB8 BL 0x3C46324
	0x01F90FBC TBZ X0, 0x0, 0x1F912F8
	0x01F90FC0 ADRP X8, 0x218A000
	0x01F90FC4 LDR X8, [X8 + 0x538]
	0x01F90FC8 LDR X0, [X8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W19, W1
	005 Move X1, X31
	006 Move X20, X0
	007 Call Object..ctor, X0
	008 Move [X20+16], W19
	009 Move X20, [X31+16]
	010 Move X19, [X31+24]
	011 Move X30, [X31+32]
	012 Return 

Method: System.Void System.IDisposable.Dispose()

Disassembly:
	0x01F91A4C MOV X23, X0
	0x01F91A50 MOV X0, X22
	0x01F91A54 MOV X1, X31
	0x01F91A58 BL 0x3C32E90
	0x01F91A5C CBZ X23, 0x1F91BDC
	0x01F91A60 MOV X1, X0
	0x01F91A64 MOVZ W2, 0x1
	0x01F91A68 MOV X0, X23
	0x01F91A6C MOV X3, X31
	0x01F91A70 BL 0x3C3FEB8
	0x01F91A74 LDR W8, [X24 + 0x18]
	0x01F91A78 ADD W26, W26, 0x1
	0x01F91A7C CMP W26, W8
	0x01F91A80 B.LT 0x1F91A30
	0x01F91A84 LDR X0, [X20 + 0x28]
	0x01F91A88 CBZ X0, 0x1F91BDC
	0x01F91A8C ADRP X9, 0x2189000
	0x01F91A90 LDR X9, [X9 + 0xB38]
	0x01F91A94 LDR W10, [X0 + 0x1C]
	0x01F91A98 LDR X8, [X0 + 0x10]
	0x01F91A9C LDR X9, [X9]
	0x01F91AA0 ADD W10, W10, 0x1
	0x01F91AA4 STR W10, [X0 + 0x1C]
	0x01F91AA8 CBZ X8, 0x1F91BDC
	0x01F91AAC LDRSW X10, [X0 + 0x18]
	0x01F91AB0 LDR W11, [X8 + 0x18]
	0x01F91AB4 CMP W10, W11
	0x01F91AB8 B.CS 0x1F91B0C
	0x01F91ABC ADD W9, W10, 0x1
	0x01F91AC0 ADD X8, X8, X10, 0x3, LSL
	0x01F91AC4 STR W9, [X0 + 0x18]
	0x01F91AC8 STR X22, [X8 + 0x20]
	0x01F91ACC B 0x1F91B20
	0x01F91AD0 ADD X0, X19, 0x34
	0x01F91AD4 MOV X1, X31
	0x01F91AD8 BL 0x1EBC478
	0x01F91ADC TBZ X0, 0x0, 0x1F91B5C
	0x01F91AE0 ADRP X8, 0x2162000
	0x01F91AE4 LDR X8, [X8 + 0xC90]
	0x01F91AE8 LDR W22, [X19 + 0x20]
	0x01F91AEC LDR X0, [X8]
	0x01F91AF0 LDR W8, [X0 + 0xE0]
	0x01F91AF4 CBNZ W8, 0x1F91AFC
	0x01F91AF8 BL 0x1C16DFC
	0x01F91AFC MOV X0, X22
	0x01F91B00 MOV X1, X31
	0x01F91B04 BL 0x3C46EB4
	0x01F91B08 B 0x1F91B5C
	0x01F91B0C LDR X8, [X9 + 0x20]
	0x01F91B10 MOV X1, X22
	0x01F91B14 LDR X8, [X8 + 0xC0]
	0x01F91B18 LDR X2, [X8 + 0x70]
	0x01F91B1C BL 0x301BF90
	0x01F91B20 LDR X0, [X25]
	0x01F91B24 LDR W23, [X19 + 0x20]
	0x01F91B28 LDR W24, [X20 + 0x44]
	0x01F91B2C LDR W8, [X0 + 0xE0]
	0x01F91B30 CBNZ W8, 0x1F91B38
	0x01F91B34 BL 0x1C16DFC
	0x01F91B38 MOV X0, X23
	0x01F91B3C MOV X1, X24
	0x01F91B40 MOV X2, X31
	0x01F91B44 BL 0x3C47424
	0x01F91B48 ADD X0, X19, 0x34
	0x01F91B4C MOV X1, X31
	0x01F91B50 BL 0x1EBC478
	0x01F91B54 TBZ X0, 0x0, 0x1F91B5C
	0x01F91B58 STR X22, [X20 + 0x30]
	0x01F91B5C LDR X0, [X20 + 0x50]
	0x01F91B60 CBZ X0, 0x1F91BDC
	0x01F91B64 LDRB W3, [X19 + 0x34]
	0x01F91B68 LDR W1, [X19 + 0x30]
	0x01F91B6C MOV X2, X21
	0x01F91B70 MOV X4, X31
	0x01F91B74 BL 0x1EA5D48
	0x01F91B78 LDR W1, [X19 + 0x30]
	0x01F91B7C LDR W3, [X19 + 0x20]
	0x01F91B80 LDR X4, [X31 + 0x48]
	0x01F91B84 LDR X20, [X20 + 0x50]
	0x01F91B88 MOVI V0.2D, 0x0
	0x01F91B8C ADD X0, X31, 0x0
	0x01F91B90 MOV X2, X21
	0x01F91B94 MOV X5, X31
	0x01F91B98 STP V0, V0, [X31]
	0x01F91B9C BL 0x1E7391C
	0x01F91BA0 LDP V0, V1, [X31]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move W8, [X0+16]
	007 Add W8, W8, 5
	008 NotImplemented "Instruction CMP not yet implemented."
	009 Move W9, 1
	010 NotImplemented "Instruction LSLV not yet implemented."
	011 Move W10, 388
	012 Move X19, X0
	013 And W31, W9, W10
	014 Move X20, X31
	015 Move W10, 65
	016 And W31, W9, W10
	017 Move X0, X19
	018 Call <LoadSceneCoroutine>d__40.<>m__Finally3, X0
	019 Move X20, X31
	020 NotImplemented "Instruction CMP not yet implemented."
	021 Move X0, X19
	022 Call <LoadSceneCoroutine>d__40.<>m__Finally2, X0
	023 Compare X20, 0
	024 JumpIfNotEqual {44}
	025 Move X8, [X19+56]
	026 Move TEMP, 0
	027 Not TEMP
	028 Move W9, TEMP
	029 Move [X19+16], W9
	030 Compare X8, 0
	031 JumpIfEqual {41}
	032 Move [X8+88], W31
	033 Compare X20, 0
	034 JumpIfNotEqual {42}
	035 Move X20, [X31+32]
	036 Move X19, [X31+40]
	037 Move X22, [X31+16]
	038 Move X21, [X31+24]
	039 Move X30, [X31+48]
	040 Return 
	041 Call 0x1C17F20
	042 Move X0, X20
	043 Call 0x1C17F18
	044 Move X0, X20
	045 Call 0x1C17F18
	046 Move X22, X1
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Move X21, X0
	049 Move X0, X21
	050 Call 0x3EB2AD0
	051 Move X20, [X0]
	052 Call 0x3EB2AE0
	053 Move X20, X31
	054 Move X0, X19
	055 Call <LoadSceneCoroutine>d__40.<>m__Finally2, X0
	056 Compare X20, 0
	057 JumpIfNotEqual {59}
	058 Move W8, 1
	059 Move X0, X20
	060 Call 0x1C17F18
	061 Move X21, X0
	062 Move W22, W1
	063 Move X21, X0
	064 Move W8, 1
	065 Move W22, W1
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Move X0, X21
	068 Call 0x3EB2AD0
	069 Move X20, [X0]
	070 Call 0x3EB2AE0
	071 Move X20, X31
	072 Move X21, X0
	073 Move X8, [X19+56]
	074 Move TEMP, 0
	075 Not TEMP
	076 Move W9, TEMP
	077 Move [X19+16], W9
	078 Compare X8, 0
	079 JumpIfNotEqual {81}
	080 Call 0x1C17F20
	081 Move [X8+88], W31
	082 Compare X20, 0
	083 JumpIfNotEqual {86}
	084 Move X0, X21
	085 Call 0x1D2D690
	086 Move X0, X20
	087 Call 0x1C17F18
	088 Call 0x1991590

Method: System.Boolean MoveNext()

Disassembly:
	0x01F91BA4 STP V0, V1, [X31 + 0x20]
	0x01F91BA8 CBZ X20, 0x1F91BDC
	0x01F91BAC ADD X1, X31, 0x20
	0x01F91BB0 MOV X0, X20
	0x01F91BB4 MOV X2, X31
	0x01F91BB8 BL 0x1EA8440
	0x01F91BBC LDP X20, X19, [X31 + 0x80]
	0x01F91BC0 LDP X22, X21, [X31 + 0x70]
	0x01F91BC4 LDP X24, X23, [X31 + 0x60]
	0x01F91BC8 LDP X26, X25, [X31 + 0x50]
	0x01F91BCC LDR X30, [X31 + 0x40]
	0x01F91BD0 MOV W0, W31
	0x01F91BD4 ADD X31, X31, 0x90
	0x01F91BD8 RET
	0x01F91BDC BL 0x1C16F20
	0x01F91BE0 BL 0x1C16F28
	0x01F91BE4 LDR X0, [X0 + 0x18]
	0x01F91BE8 RET
	0x01F91BEC STP X30, X19, [X31 - 0x10]!
	0x01F91BF0 ADRP X0, 0x2162000
	0x01F91BF4 LDR X0, [X0 + 0xB40]
	0x01F91BF8 BL 0x1C16D08
	0x01F91BFC BL 0x1C16F10
	0x01F91C00 MOV X1, X31
	0x01F91C04 MOV X19, X0
	0x01F91C08 BL 0x3380310
	0x01F91C0C ADRP X0, 0x2189000
	0x01F91C10 LDR X0, [X0 + 0xB40]
	0x01F91C14 BL 0x1C16D08
	0x01F91C18 MOV X1, X0
	0x01F91C1C MOV X0, X19
	0x01F91C20 BL 0x1C16DEC
	0x01F91C24 LDR X0, [X0 + 0x18]
	0x01F91C28 RET
	0x01F91C2C STR X30, [X31 - 0x10]!
	0x01F91C30 LDR W8, [X0 + 0x10]
	0x01F91C34 ADD W8, W8, 0x3
	0x01F91C38 CMP W8, 0x5
	0x01F91C3C B.HI 0x1F91C68
	0x01F91C40 MOVZ W9, 0x1
	0x01F91C44 LSLV W8, W9, W8
	0x01F91C48 MOVZ W9, 0x31
	0x01F91C4C ANDS W31, W8, W9, 0x0
	0x01F91C50 B.EQ 0x1F91C68
	0x01F91C54 LDR X8, [X0 + 0x30]
	0x01F91C58 MOVN W9, 0x0
	0x01F91C5C STR W9, [X0 + 0x10]
	0x01F91C60 CBZ X8, 0x1F91C70
	0x01F91C64 STRB W31, [X8 + 0x58]
	0x01F91C68 LDR X30, [X31], #0x10
	0x01F91C6C RET
	0x01F91C70 BL 0x1C16F20
	0x01F91C74 SUB X31, X31, 0x60
	0x01F91C78 STP X30, X23, [X31 + 0x30]
	0x01F91C7C STP X22, X21, [X31 + 0x40]
	0x01F91C80 STP X20, X19, [X31 + 0x50]
	0x01F91C84 ADRP X19, 0x2448000
	0x01F91C88 LDRB W8, [X19 + 0x734]
	0x01F91C8C MOV X20, X0
	0x01F91C90 STR X0, [X31 + 0x28]
	0x01F91C94 TBNZ X8, 0x0, 0x1F91D24
	0x01F91C98 ADRP X0, 0x2189000
	0x01F91C9C LDR X0, [X0 + 0x538]
	0x01F91CA0 BL 0x1C16CF4
	0x01F91CA4 ADRP X0, 0x2189000
	0x01F91CA8 LDR X0, [X0 + 0xB48]
	0x01F91CAC BL 0x1C16CF4
	0x01F91CB0 ADRP X0, 0x2189000
	0x01F91CB4 LDR X0, [X0 + 0xA08]
	0x01F91CB8 BL 0x1C16CF4
	0x01F91CBC ADRP X0, 0x2189000
	0x01F91CC0 LDR X0, [X0 + 0xB50]
	0x01F91CC4 BL 0x1C16CF4
	0x01F91CC8 ADRP X0, 0x2189000
	0x01F91CCC LDR X0, [X0 + 0xA80]
	0x01F91CD0 BL 0x1C16CF4
	0x01F91CD4 ADRP X0, 0x216A000
	0x01F91CD8 LDR X0, [X0 + 0x8B0]
	0x01F91CDC BL 0x1C16CF4
	0x01F91CE0 ADRP X0, 0x2162000
	0x01F91CE4 LDR X0, [X0 + 0x598]
	0x01F91CE8 BL 0x1C16CF4
	0x01F91CEC ADRP X0, 0x2162000
	0x01F91CF0 LDR X0, [X0 + 0xC90]
	0x01F91CF4 BL 0x1C16CF4
	0x01F91CF8 ADRP X0, 0x216D000
	0x01F91CFC LDR X0, [X0 + 0x140]
	0x01F91D00 BL 0x1C16CF4
	0x01F91D04 ADRP X0, 0x2189000
	0x01F91D08 LDR X0, [X0 + 0xA00]
	0x01F91D0C BL 0x1C16CF4
	0x01F91D10 ADRP X0, 0x2189000
	0x01F91D14 LDR X0, [X0 + 0xB58]
	0x01F91D18 BL 0x1C16CF4
	0x01F91D1C MOVZ W8, 0x1
	0x01F91D20 STRB W8, [X19 + 0x734]
	0x01F91D24 ADD X8, X31, 0x28
	0x01F91D28 STR W31, [X31 + 0x20]
	0x01F91D2C STR W31, [X31 + 0x18]
	0x01F91D30 STP X31, X8, [X31 + 0x8]
	0x01F91D34 LDR W8, [X20 + 0x10]
	0x01F91D38 CMP W8, 0x2
	0x01F91D3C B.EQ 0x1F91DF4
	0x01F91D40 CMP W8, 0x1
	0x01F91D44 B.EQ 0x1F91DE8
	0x01F91D48 MOV W0, W31
	0x01F91D4C CBNZ W8, 0x1F920C4
	0x01F91D50 LDR X19, [X20 + 0x20]
	0x01F91D54 MOVN W8, 0x0
	0x01F91D58 STR W8, [X20 + 0x10]
	0x01F91D5C CBZ X19, 0x1F9216C
	0x01F91D60 MOVZ W8, 0x1
	0x01F91D64 MOVN W9, 0x2
	0x01F91D68 STRB W8, [X19 + 0x58]
	0x01F91D6C STR X19, [X20 + 0x30]
	0x01F91D70 STR W9, [X20 + 0x10]
	0x01F91D74 MOV X0, X19
	0x01F91D78 BL 0x1F8EBCC
	0x01F91D7C TBZ X0, 0x0, 0x1F91E14
	0x01F91D80 LDR X8, [X19 + 0x28]
	0x01F91D84 CBZ X8, 0x1F91DE4
	0x01F91D88 ADRP X21, 0x2189000
	0x01F91D8C LDR X21, [X21 + 0xB50]
	0x01F91D90 MOV W20, W31
	0x01F91D94 LDR W9, [X8 + 0x18]
	0x01F91D98 CMP W20, W9
	0x01F91D9C B.GE 0x1F920DC
	0x01F91DA0 LDR X2, [X21]
	0x01F91DA4 MOV X0, X8
	0x01F91DA8 MOV W1, W20
	0x01F91DAC BL 0x301BCCC
	0x01F91DB0 LDR X8, [X31 + 0x28]
	0x01F91DB4 STR X0, [X8 + 0x38]
	0x01F91DB8 CBZ X0, 0x1F920D8
	0x01F91DBC LDR W0, [X0 + 0x20]
	0x01F91DC0 LDR W1, [X8 + 0x28]
	0x01F91DC4 MOV X2, X31
	0x01F91DC8 BL 0x1E8FF58
	0x01F91DCC LDR X8, [X31 + 0x28]
	0x01F91DD0 TBNZ X0, 0x0, 0x1F91FDC
	0x01F91DD4 STR X31, [X8 + 0x38]
	0x01F91DD8 LDR X8, [X19 + 0x28]
	0x01F91DDC ADD W20, W20, 0x1
	0x01F91DE0 CBNZ X8, 0x1F91D94
	0x01F91DE4 BL 0x1C16F20
	0x01F91DE8 MOVN W8, 0x2
	0x01F91DEC STR W8, [X20 + 0x10]
	0x01F91DF0 B 0x1F92068
	0x01F91DF4 LDR X8, [X20 + 0x30]
	0x01F91DF8 MOVN W9, 0x0
	0x01F91DFC STR W9, [X20 + 0x10]
	0x01F91E00 CBZ X8, 0x1F92168
	0x01F91E04 MOV W0, W31
	0x01F91E08 STRB W31, [X8 + 0x58]
	0x01F91E0C STR X31, [X20 + 0x30]
	0x01F91E10 B 0x1F920C4
	0x01F91E14 STR W31, [X31 + 0x20]
	0x01F91E18 ADRP X22, 0x2162000
	0x01F91E1C LDR X22, [X22 + 0xC90]
	0x01F91E20 MOV W20, W31
	0x01F91E24 LDR X0, [X22]
	0x01F91E28 LDR W8, [X0 + 0xE0]
	0x01F91E2C CBNZ W8, 0x1F91E34
	0x01F91E30 BL 0x1C16DFC
	0x01F91E34 MOV X0, X31
	0x01F91E38 BL 0x3C46D74
	0x01F91E3C CMP W20, W0
	0x01F91E40 B.GE 0x1F91EAC
	0x01F91E44 LDR X0, [X22]
	0x01F91E48 LDR W8, [X0 + 0xE0]
	0x01F91E4C CBNZ W8, 0x1F91E54
	0x01F91E50 BL 0x1C16DFC
	0x01F91E54 MOV W0, W20
	0x01F91E58 MOV X1, X31
	0x01F91E5C BL 0x3C46FDC
	0x01F91E60 STR W0, [X31 + 0x18]
	0x01F91E64 ADD X0, X31, 0x18
	0x01F91E68 MOV X1, X31
	0x01F91E6C BL 0x3C46360
	0x01F91E70 MOV X1, X0
	0x01F91E74 LDR X8, [X19]
	0x01F91E78 LDR X9, [X8 + 0x318]
	0x01F91E7C LDR X2, [X8 + 0x320]
	0x01F91E80 MOV X0, X19
	0x01F91E84 BLR X9
	0x01F91E88 LDR X8, [X31 + 0x28]
	0x01F91E8C AND X0, X0, 0x0
	0x01F91E90 LDR W1, [X8 + 0x28]
	0x01F91E94 MOV X2, X31
	0x01F91E98 BL 0x1E8FF58
	0x01F91E9C ADD W20, W20, 0x1
	0x01F91EA0 TBZ X0, 0x0, 0x1F91E24
	0x01F91EA4 LDR W8, [X31 + 0x18]
	0x01F91EA8 STR W8, [X31 + 0x20]
	0x01F91EAC ADD X0, X31, 0x20
	0x01F91EB0 MOV X1, X31
	0x01F91EB4 BL 0x3C46324
	0x01F91EB8 TBZ X0, 0x0, 0x1F92174
	0x01F91EBC ADRP X21, 0x2189000
	0x01F91EC0 LDR X21, [X21 + 0x538]
	0x01F91EC4 LDR W20, [X31 + 0x20]
	0x01F91EC8 LDR X0, [X21]
	0x01F91ECC LDR W8, [X0 + 0xE0]
	0x01F91ED0 CBNZ W8, 0x1F91ED8
	0x01F91ED4 BL 0x1C16DFC
	0x01F91ED8 MOV X0, X20
	0x01F91EDC BL 0x1F87124
	0x01F91EE0 TBNZ X0, 0x0, 0x1F91FA0
	0x01F91EE4 LDR X0, [X21]
	0x01F91EE8 LDR X20, [X19 + 0x50]
	0x01F91EEC LDR W21, [X31 + 0x20]
	0x01F91EF0 LDR W8, [X0 + 0xE0]
	0x01F91EF4 CBNZ W8, 0x1F91EFC
	0x01F91EF8 BL 0x1C16DFC
	0x01F91EFC MOV X0, X21
	0x01F91F00 BL 0x1F871FC
	0x01F91F04 LDR X8, [X31 + 0x28]
	0x01F91F08 ADRP X9, 0x216D000
	0x01F91F0C MOV X21, X0
	0x01F91F10 LDR W8, [X8 + 0x28]
	0x01F91F14 LDR X9, [X9 + 0x140]
	0x01F91F18 STR W8, [X31]
	0x01F91F1C LDR X0, [X9]
	0x01F91F20 ADD X1, X31, 0x0
	0x01F91F24 BL 0x1C16E04
	0x01F91F28 ADRP X8, 0x2189000
	0x01F91F2C LDR X8, [X8 + 0xB58]
	0x01F91F30 MOV X2, X0
	0x01F91F34 LDR X0, [X8]
	0x01F91F38 MOV X1, X21
	0x01F91F3C MOV X3, X31
	0x01F91F40 BL 0x3227BD4
	0x01F91F44 ADRP X8, 0x216A000
	0x01F91F48 LDR X8, [X8 + 0x8B0]
	0x01F91F4C MOV X21, X0
	0x01F91F50 LDR X0, [X8]
	0x01F91F54 LDR W8, [X0 + 0xE0]
	0x01F91F58 CBNZ W8, 0x1F91F60
	0x01F91F5C BL 0x1C16DFC
	0x01F91F60 ADRP X8, 0x2189000
	0x01F91F64 LDR X8, [X8 + 0xA80]
	0x01F91F68 LDR X2, [X8]
	0x01F91F6C MOV X0, X20
	0x01F91F70 MOV X1, X21
	0x01F91F74 BL 0x22149C8
	0x01F91F78 LDR X0, [X22]
	0x01F91F7C LDR W8, [X0 + 0xE0]
	0x01F91F80 CBNZ W8, 0x1F91F88
	0x01F91F84 BL 0x1C16DFC
	0x01F91F88 ADRP X8, 0x2189000
	0x01F91F8C LDR X8, [X8 + 0xA00]
	0x01F91F90 LDR X0, [X8]
	0x01F91F94 MOV X1, X31
	0x01F91F98 BL 0x3C479F4
	0x01F91F9C STR W0, [X19 + 0x40]
	0x01F91FA0 LDR X0, [X22]
	0x01F91FA4 LDR W19, [X31 + 0x20]
	0x01F91FA8 LDR W8, [X0 + 0xE0]
	0x01F91FAC CBNZ W8, 0x1F91FB4
	0x01F91FB0 BL 0x1C16DFC
	0x01F91FB4 MOV X0, X19
	0x01F91FB8 MOV X1, X31
	0x01F91FBC BL 0x3C47C80
	0x01F91FC0 CBZ X0, 0x1F92200
	0x01F91FC4 LDR X8, [X31 + 0x28]
	0x01F91FC8 MOVZ W9, 0x2
	0x01F91FCC STR X0, [X8 + 0x18]
	0x01F91FD0 STR W9, [X8 + 0x10]
	0x01F91FD4 MOVZ W0, 0x1
	0x01F91FD8 B 0x1F920C4
	0x01F91FDC ADRP X23, 0x2162000
	0x01F91FE0 LDR X23, [X23 + 0x598]
	0x01F91FE4 LDR X21, [X8 + 0x38]
	0x01F91FE8 LDR X22, [X19 + 0x30]
	0x01F91FEC LDR X0, [X23]
	0x01F91FF0 LDR W8, [X0 + 0xE0]
	0x01F91FF4 CBNZ W8, 0x1F91FFC
	0x01F91FF8 BL 0x1C16DFC
	0x01F91FFC MOV X0, X21
	0x01F92000 MOV X1, X22
	0x01F92004 MOV X2, X31
	0x01F92008 BL 0x3C3883C
	0x01F9200C TBZ X0, 0x0, 0x1F92014
	0x01F92010 STR X31, [X19 + 0x30]
	0x01F92014 LDR X0, [X19 + 0x28]
	0x01F92018 CBZ X0, 0x1F9227C
	0x01F9201C ADRP X8, 0x2188000
	0x01F92020 LDR X8, [X8 + 0xB48]
	0x01F92024 LDR X2, [X8]
	0x01F92028 MOV W1, W20
	0x01F9202C BL 0x301DA48
	0x01F92030 LDR X8, [X31 + 0x28]
	0x01F92034 LDR X0, [X8 + 0x38]
	0x01F92038 CBZ X0, 0x1F92280
	0x01F9203C MOV X1, X31
	0x01F92040 BL 0x3C32ECC
	0x01F92044 MOV X19, X0
	0x01F92048 LDR X0, [X23]
	0x01F9204C LDR W8, [X0 + 0xE0]
	0x01F92050 CBNZ W8, 0x1F92058
	0x01F92054 BL 0x1C16DFC
	0x01F92058 MOV X0, X19
	0x01F9205C MOV X1, X31
	0x01F92060 BL 0x3C394A8
	0x01F92064 LDR X20, [X31 + 0x28]
	0x01F92068 ADRP X8, 0x2161000
	0x01F9206C LDR X8, [X8 + 0x598]
	0x01F92070 LDR X19, [X20 + 0x38]
	0x01F92074 LDR X0, [X8]
	0x01F92078 LDR W8, [X0 + 0xE0]
	0x01F9207C CBNZ W8, 0x1F92084
	0x01F92080 BL 0x1C16DFC
	0x01F92084 MOV X0, X19
	0x01F92088 MOV X1, X31
	0x01F9208C MOV X2, X31
	0x01F92090 BL 0x3C354F8
	0x01F92094 LDR X8, [X31 + 0x28]
	0x01F92098 TBZ X0, 0x0, 0x1F920AC
	0x01F9209C MOVZ W0, 0x1
	0x01F920A0 STR X31, [X8 + 0x18]
	0x01F920A4 STR W0, [X8 + 0x10]
	0x01F920A8 B 0x1F920C4
	0x01F920AC LDR X9, [X8 + 0x30]
	0x01F920B0 MOVN W10, 0x0
	0x01F920B4 STR W10, [X8 + 0x10]
	0x01F920B8 CBZ X9, 0x1F92170
	0x01F920BC MOV W0, W31
	0x01F920C0 STRB W31, [X9 + 0x58]
	0x01F920C4 LDP X20, X19, [X31 + 0x50]
	0x01F920C8 LDP X22, X21, [X31 + 0x40]
	0x01F920CC LDP X30, X23, [X31 + 0x30]
	0x01F920D0 ADD X31, X31, 0x60
	0x01F920D4 RET
	0x01F920D8 BL 0x1C16F20
	0x01F920DC LDR X8, [X31 + 0x28]
	0x01F920E0 LDR W8, [X8 + 0x28]
	0x01F920E4 STR W8, [X31]
	0x01F920E8 ADRP X0, 0x216C000
	0x01F920EC LDR X0, [X0 + 0x140]
	0x01F920F0 BL 0x1C16D08
	0x01F920F4 ADD X1, X31, 0x0
	0x01F920F8 BL 0x1C16E04
	0x01F920FC MOV X19, X0
	0x01F92100 ADRP X0, 0x2188000
	0x01F92104 LDR X0, [X0 + 0xB60]
	0x01F92108 BL 0x1C16D08
	0x01F9210C MOV X1, X19
	0x01F92110 MOV X2, X31
	0x01F92114 BL 0x321EFD0
	0x01F92118 MOV X20, X0
	0x01F9211C ADRP X0, 0x2169000
	0x01F92120 LDR X0, [X0 + 0x760]
	0x01F92124 BL 0x1C16D08
	0x01F92128 BL 0x1C16F10
	0x01F9212C MOV X19, X0
	0x01F92130 ADRP X0, 0x216C000
	0x01F92134 LDR X0, [X0 + 0x4D8]
	0x01F92138 BL 0x1C16D08
	0x01F9213C MOV X2, X0
	0x01F92140 MOV X0, X19
	0x01F92144 MOV X1, X20
	0x01F92148 MOV X3, X31
	0x01F9214C BL 0x3311888
	0x01F92150 ADRP X0, 0x2188000
	0x01F92154 LDR X0, [X0 + 0xB68]
	0x01F92158 BL 0x1C16D08
	0x01F9215C MOV X1, X0
	0x01F92160 MOV X0, X19
	0x01F92164 BL 0x1C16DEC
	0x01F92168 BL 0x1C16F20
	0x01F9216C BL 0x1C16F20
	0x01F92170 BL 0x1C16F20
	0x01F92174 LDR X8, [X31 + 0x28]
	0x01F92178 LDR W8, [X8 + 0x28]
	0x01F9217C STR W8, [X31]
	0x01F92180 ADRP X0, 0x216C000
	0x01F92184 LDR X0, [X0 + 0x140]
	0x01F92188 BL 0x1C16D08
	0x01F9218C ADD X1, X31, 0x0
	0x01F92190 BL 0x1C16E04
	0x01F92194 MOV X19, X0
	0x01F92198 ADRP X0, 0x2188000
	0x01F9219C LDR X0, [X0 + 0xB60]
	0x01F921A0 BL 0x1C16D08
	0x01F921A4 MOV X1, X19
	0x01F921A8 MOV X2, X31
	0x01F921AC BL 0x321EFD0
	0x01F921B0 MOV X20, X0
	0x01F921B4 ADRP X0, 0x2169000
	0x01F921B8 LDR X0, [X0 + 0x760]
	0x01F921BC BL 0x1C16D08
	0x01F921C0 BL 0x1C16F10
	0x01F921C4 MOV X19, X0
	0x01F921C8 ADRP X0, 0x216C000
	0x01F921CC LDR X0, [X0 + 0x4D8]
	0x01F921D0 BL 0x1C16D08
	0x01F921D4 MOV X2, X0
	0x01F921D8 MOV X0, X19
	0x01F921DC MOV X1, X20
	0x01F921E0 MOV X3, X31
	0x01F921E4 BL 0x3311888
	0x01F921E8 ADRP X0, 0x2188000
	0x01F921EC LDR X0, [X0 + 0xB68]
	0x01F921F0 BL 0x1C16D08
	0x01F921F4 MOV X1, X0
	0x01F921F8 MOV X0, X19
	0x01F921FC BL 0x1C16DEC
	0x01F92200 LDR W19, [X31 + 0x20]
	0x01F92204 ADRP X0, 0x2188000
	0x01F92208 LDR X0, [X0 + 0x538]
	0x01F9220C BL 0x1C16D08
	0x01F92210 LDR W8, [X0 + 0xE0]
	0x01F92214 CBNZ W8, 0x1F9221C
	0x01F92218 BL 0x1C16DFC
	0x01F9221C MOV X0, X19
	0x01F92220 BL 0x1F871FC
	0x01F92224 MOV X19, X0
	0x01F92228 ADRP X0, 0x2188000
	0x01F9222C LDR X0, [X0 + 0xB70]
	0x01F92230 BL 0x1C16D08
	0x01F92234 MOV X1, X19
	0x01F92238 MOV X2, X31
	0x01F9223C BL 0x321B938
	0x01F92240 MOV X19, X0
	0x01F92244 ADRP X0, 0x2161000
	0x01F92248 LDR X0, [X0 + 0x5B0]
	0x01F9224C BL 0x1C16D08
	0x01F92250 BL 0x1C16F10
	0x01F92254 MOV X20, X0
	0x01F92258 MOV X1, X19
	0x01F9225C MOV X2, X31
	0x01F92260 BL 0x337DF1C
	0x01F92264 ADRP X0, 0x2188000
	0x01F92268 LDR X0, [X0 + 0xB68]
	0x01F9226C BL 0x1C16D08
	0x01F92270 MOV X1, X0
	0x01F92274 MOV X0, X20
	0x01F92278 BL 0x1C16DEC
	0x01F9227C BL 0x1C16F20
	0x01F92280 BL 0x1C16F20
	0x01F92284 B 0x1F92328
	0x01F92288 B 0x1F92328
	0x01F9228C B 0x1F92328
	0x01F92290 B 0x1F92328
	0x01F92294 B 0x1F92328
	0x01F92298 B 0x1F92328
	0x01F9229C B 0x1F92328
	0x01F922A0 B 0x1F92328
	0x01F922A4 B 0x1F92328
	0x01F922A8 B 0x1F92328
	0x01F922AC B 0x1F92328
	0x01F922B0 B 0x1F92328
	0x01F922B4 B 0x1F92328
	0x01F922B8 B 0x1F92328
	0x01F922BC B 0x1F92328
	0x01F922C0 B 0x1F92328
	0x01F922C4 B 0x1F92328
	0x01F922C8 B 0x1F92328
	0x01F922CC B 0x1F92328
	0x01F922D0 B 0x1F92328
	0x01F922D4 B 0x1F92328
	0x01F922D8 B 0x1F92328
	0x01F922DC B 0x1F92328
	0x01F922E0 B 0x1F92328
	0x01F922E4 B 0x1F92328
	0x01F922E8 B 0x1F92328
	0x01F922EC B 0x1F92328
	0x01F922F0 B 0x1F92328
	0x01F922F4 B 0x1F92328
	0x01F922F8 B 0x1F92328
	0x01F922FC B 0x1F92328
	0x01F92300 B 0x1F92328
	0x01F92304 B 0x1F92328
	0x01F92308 B 0x1F92328
	0x01F9230C B 0x1F92328
	0x01F92310 B 0x1F92328
	0x01F92314 B 0x1F92328
	0x01F92318 B 0x1F92328
	0x01F9231C B 0x1F92328
	0x01F92320 B 0x1F92328
	0x01F92324 B 0x1F92328
	0x01F92328 CMP W1, 0x1
	0x01F9232C B.NE 0x1F92364
	0x01F92330 BL 0x3EB1AD0
	0x01F92334 LDR X19, [X0]
	0x01F92338 STR X19, [X31 + 0x8]
	0x01F9233C BL 0x3EB1AE0
	0x01F92340 CBNZ X19, 0x1F9234C
	0x01F92344 MOV W0, W31
	0x01F92348 B 0x1F920C4
	0x01F9234C ADD X8, X31, 0x8
	0x01F92350 ADD X0, X8, 0x8
	0x01F92354 BL 0x199A6BC
	0x01F92358 MOV X0, X19
	0x01F9235C BL 0x1C16F18
	0x01F92360 CBNZ X19, 0x1F92368
	0x01F92364 BL 0x1D2C690
	0x01F92368 LDR X8, [X31 + 0x28]
	0x01F9236C LDR W9, [X8 + 0x10]
	0x01F92370 ADD W9, W9, 0x3
	0x01F92374 CMP W9, 0x5
	0x01F92378 B.HI 0x1F923A8
	0x01F9237C MOVZ W10, 0x1
	0x01F92380 LSLV W9, W10, W9
	0x01F92384 MOVZ W10, 0x31
	0x01F92388 ANDS W31, W9, W10, 0x0
	0x01F9238C B.EQ 0x1F923A8
	0x01F92390 LDR X9, [X8 + 0x30]
	0x01F92394 MOVN W10, 0x0
	0x01F92398 STR W10, [X8 + 0x10]
	0x01F9239C CBNZ X9, 0x1F923A4
	0x01F923A0 BL 0x1C16F20
	0x01F923A4 STRB W31, [X9 + 0x58]
	0x01F923A8 MOV X0, X19
	0x01F923AC BL 0x1C16F18
	0x01F923B0 BL 0x1990590
	0x01F923B4 STR X30, [X31 - 0x10]!
	0x01F923B8 LDR X8, [X0 + 0x30]
	0x01F923BC MOVN W9, 0x0
	0x01F923C0 STR W9, [X0 + 0x10]
	0x01F923C4 CBZ X8, 0x1F923D4
	0x01F923C8 STRB W31, [X8 + 0x58]
	0x01F923CC LDR X30, [X31], #0x10
	0x01F923D0 RET
	0x01F923D4 BL 0x1C16F20
	0x01F923D8 LDR X0, [X0 + 0x18]
	0x01F923DC RET
	0x01F923E0 STP X30, X19, [X31 - 0x10]!
	0x01F923E4 ADRP X0, 0x2161000
	0x01F923E8 LDR X0, [X0 + 0xB40]
	0x01F923EC BL 0x1C16D08
	0x01F923F0 BL 0x1C16F10
	0x01F923F4 MOV X1, X31
	0x01F923F8 MOV X19, X0
	0x01F923FC BL 0x3380310
	0x01F92400 ADRP X0, 0x2188000
	0x01F92404 LDR X0, [X0 + 0xB78]
	0x01F92408 BL 0x1C16D08
	0x01F9240C MOV X1, X0
	0x01F92410 MOV X0, X19
	0x01F92414 BL 0x1C16DEC
	0x01F92418 LDR X0, [X0 + 0x18]
	0x01F9241C RET
	0x01F92420 MOVZ W8, 0x1
	0x01F92424 STR W1, [X0 + 0x20]
	0x01F92428 STRB W8, [X0 + 0x30]
	0x01F9242C RET
	0x01F92430 STP X30, X21, [X31 - 0x20]!
	0x01F92434 STP X20, X19, [X31 + 0x10]
	0x01F92438 ADRP X21, 0x2447000
	0x01F9243C ADRP X20, 0x2188000
	0x01F92440 LDRB W8, [X21 + 0x736]
	0x01F92444 LDR X20, [X20 + 0xB80]
	0x01F92448 MOV X19, X0
	0x01F9244C TBNZ X8, 0x0, 0x1F92464
	0x01F92450 ADRP X0, 0x2188000
	0x01F92454 LDR X0, [X0 + 0xB80]
	0x01F92458 BL 0x1C16CF4
	0x01F9245C MOVZ W8, 0x1
	0x01F92460 STRB W8, [X21 + 0x736]
	0x01F92464 MOV X0, X19
	0x01F92468 MOV X1, X31
	0x01F9246C BL 0x3C32ECC
	0x01F92470 LDR X8, [X20]
	0x01F92474 MOV X20, X0
	0x01F92478 LDR W9, [X8 + 0xE0]
	0x01F9247C CBNZ W9, 0x1F92488
	0x01F92480 MOV X0, X8
	0x01F92484 BL 0x1C16DFC
	0x01F92488 MOV X0, X20
	0x01F9248C BL 0x1F924A0
	0x01F92490 STR X0, [X19 + 0x28]
	0x01F92494 LDP X20, X19, [X31 + 0x10]
	0x01F92498 LDP X30, X21, [X31], #0x20
	0x01F9249C RET
	0x01F924A0 SUB X31, X31, 0xA0
	0x01F924A4 STR X30, [X31 + 0x50]
	0x01F924A8 STP X26, X25, [X31 + 0x60]
	0x01F924AC STP X24, X23, [X31 + 0x70]
	0x01F924B0 STP X22, X21, [X31 + 0x80]
	0x01F924B4 STP X20, X19, [X31 + 0x90]
	0x01F924B8 ADRP X20, 0x2447000
	0x01F924BC ADRP X21, 0x2188000
	0x01F924C0 LDRB W8, [X20 + 0x738]
	0x01F924C4 LDR X21, [X21 + 0xB80]
	0x01F924C8 MOV X19, X0
	0x01F924CC TBNZ X8, 0x0, 0x1F92550
	0x01F924D0 ADRP X0, 0x2188000
	0x01F924D4 LDR X0, [X0 + 0xB80]
	0x01F924D8 BL 0x1C16CF4
	0x01F924DC ADRP X0, 0x2188000
	0x01F924E0 LDR X0, [X0 + 0xB88]
	0x01F924E4 BL 0x1C16CF4
	0x01F924E8 ADRP X0, 0x2188000
	0x01F924EC LDR X0, [X0 + 0xB90]
	0x01F924F0 BL 0x1C16CF4
	0x01F924F4 ADRP X0, 0x2188000
	0x01F924F8 LDR X0, [X0 + 0xB98]
	0x01F924FC BL 0x1C16CF4
	0x01F92500 ADRP X0, 0x2188000
	0x01F92504 LDR X0, [X0 + 0xBA0]
	0x01F92508 BL 0x1C16CF4
	0x01F9250C ADRP X0, 0x2188000
	0x01F92510 LDR X0, [X0 + 0xBA8]
	0x01F92514 BL 0x1C16CF4
	0x01F92518 ADRP X0, 0x2188000
	0x01F9251C LDR X0, [X0 + 0xBB0]
	0x01F92520 BL 0x1C16CF4
	0x01F92524 ADRP X0, 0x2188000
	0x01F92528 LDR X0, [X0 + 0xBB8]
	0x01F9252C BL 0x1C16CF4
	0x01F92530 ADRP X0, 0x2188000
	0x01F92534 LDR X0, [X0 + 0xBC0]
	0x01F92538 BL 0x1C16CF4
	0x01F9253C ADRP X0, 0x2188000
	0x01F92540 LDR X0, [X0 + 0x548]
	0x01F92544 BL 0x1C16CF4
	0x01F92548 MOVZ W8, 0x1
	0x01F9254C STRB W8, [X20 + 0x738]
	0x01F92550 LDR X0, [X21]
	0x01F92554 STP X31, X31, [X31 + 0x30]
	0x01F92558 STR X31, [X31 + 0x40]
	0x01F9255C STR X31, [X31 + 0x20]
	0x01F92560 LDR W8, [X0 + 0xE0]
	0x01F92564 CBNZ W8, 0x1F9256C
	0x01F92568 BL 0x1C16DFC
	0x01F9256C CBZ X19, 0x1F9274C
	0x01F92570 LDR X8, [X21]
	0x01F92574 ADRP X9, 0x2188000
	0x01F92578 LDR X8, [X8 + 0xB8]
	0x01F9257C LDR X9, [X9 + 0xBA0]
	0x01F92580 LDR X1, [X8]
	0x01F92584 LDR X2, [X9]
	0x01F92588 MOV X0, X19
	0x01F9258C BL 0x21E5DE8
	0x01F92590 LDR X8, [X21]
	0x01F92594 LDR X9, [X8 + 0xB8]
	0x01F92598 LDR X9, [X9 + 0x8]
	0x01F9259C CBZ X9, 0x1F92750
	0x01F925A0 LDP W2, W10, [X9 + 0x18]
	0x01F925A4 ADD W10, W10, 0x1
	0x01F925A8 CMP W2, 0x1
	0x01F925AC STP W31, W10, [X9 + 0x18]
	0x01F925B0 B.LT 0x1F925C8
	0x01F925B4 LDR X0, [X9 + 0x10]
	0x01F925B8 MOV W1, W31
	0x01F925BC MOV X3, X31
	0x01F925C0 BL 0x339FA34
	0x01F925C4 LDR X8, [X21]
	0x01F925C8 LDR X8, [X8 + 0xB8]
	0x01F925CC LDR X0, [X8]
	0x01F925D0 CBZ X0, 0x1F92754
	0x01F925D4 ADRP X8, 0x2188000
	0x01F925D8 LDR X8, [X8 + 0xBB8]
	0x01F925DC LDR X1, [X8]
	0x01F925E0 ADD X8, X31, 0x8
	0x01F925E4 BL 0x301CB58
	0x01F925E8 ADRP X24, 0x2188000
	0x01F925EC ADRP X25, 0x2188000
	0x01F925F0 ADRP X26, 0x2188000
	0x01F925F4 LDR X24, [X24 + 0xB90]
	0x01F925F8 LDR X25, [X25 + 0x548]
	0x01F925FC LDR X26, [X26 + 0xBA8]
	0x01F92600 LDUR V0, [X31 + 0x8]
	0x01F92604 LDR X8, [X31 + 0x18]
	0x01F92608 ADRP X23, 0x2188000
	0x01F9260C ADRP X22, 0x2188000
	0x01F92610 LDR X23, [X23 + 0xB88]
	0x01F92614 LDR X22, [X22 + 0xBC0]
	0x01F92618 STR V0, [X31 + 0x3]
	0x01F9261C STR X8, [X31 + 0x40]
	0x01F92620 LDR X1, [X24]
	0x01F92624 ADD X0, X31, 0x30
	0x01F92628 BL 0x2BC4350
	0x01F9262C TBZ X0, 0x0, 0x1F926D8
	0x01F92630 LDR X19, [X31 + 0x40]
	0x01F92634 CBZ X19, 0x1F92740
	0x01F92638 MOV X0, X19
	0x01F9263C MOV X1, X31
	0x01F92640 BL 0x33BE520
	0x01F92644 MOV X20, X0
	0x01F92648 LDR X0, [X25]
	0x01F9264C LDR W8, [X0 + 0xE0]
	0x01F92650 CBNZ W8, 0x1F92658
	0x01F92654 BL 0x1C16DFC
	0x01F92658 MOV X0, X20
	0x01F9265C BL 0x1F897A4
	0x01F92660 TBZ X0, 0x0, 0x1F92620
	0x01F92664 LDR X0, [X21]
	0x01F92668 LDR W8, [X0 + 0xE0]
	0x01F9266C CBNZ W8, 0x1F92678
	0x01F92670 BL 0x1C16DFC
	0x01F92674 LDR X0, [X21]
	0x01F92678 LDR X8, [X0 + 0xB8]
	0x01F9267C LDR X0, [X8 + 0x8]
	0x01F92680 CBZ X0, 0x1F92744
	0x01F92684 LDR W10, [X0 + 0x1C]
	0x01F92688 LDR X8, [X0 + 0x10]
	0x01F9268C LDR X9, [X26]
	0x01F92690 ADD W10, W10, 0x1
	0x01F92694 STR W10, [X0 + 0x1C]

ISIL:
	001 Subtract X31, X31, 192
	002 Move [X31+112], X30
	003 Move [X31+120], X0
	004 Move [X31+128], X26
	005 Move [X31+136], X25
	006 Move [X31+144], X24
	007 Move [X31+152], X23
	008 Move [X31+160], X22
	009 Move [X31+168], X21
	010 Move [X31+176], X20
	011 Move [X31+184], X19
	012 Move X19, 0x2449000
	013 Move W8, [X19+1840]
	014 Move X20, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {42}
	019 Move X0, 0x218A000
	020 Move X0, [X0+2576]
	021 Call 0x1C17CF4
	022 Move X0, 0x218A000
	023 Move X0, [X0+2584]
	024 Call 0x1C17CF4
	025 Move X0, 0x218A000
	026 Move X0, [X0+2592]
	027 Call 0x1C17CF4
	028 Move X0, 0x218A000
	029 Move X0, [X0+1336]
	030 Call 0x1C17CF4
	031 Move X0, 0x218A000
	032 Move X0, [X0+2600]
	033 Call 0x1C17CF4
	034 Move X0, 0x2163000
	035 Move X0, [X0+1432]
	036 Call 0x1C17CF4
	037 Move X0, 0x2163000
	038 Move X0, [X0+3216]
	039 Call 0x1C17CF4
	040 Move W8, 1
	041 Move [X19+1840], W8
	042 Add X8, X31, 120
	043 Move [X31+80], X31
	044 Move [X31+88], X31
	045 Move [X31+96], X31
	046 Move [X31+64], X31
	047 Move [X31+72], X8
	048 Move W8, [X20+16]
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Move X9, -21377024
	051 Move X23, 0x2163000
	052 Move X24, 0x2163000
	053 Add X9, X9, 3157
	054 Move X25, 0x218A000
	055 Move X23, [X23+3216]
	056 Move X24, [X24+1432]
	057 Move X19, [X20+32]
	058 NotImplemented "Instruction ADR not yet implemented."
	059 Move W11, [X9]
	060 Add X10, X10, X11
	061 Move X25, [X25+2584]
	062 CallNoReturn X10
	063 Move TEMP, 0
	064 Not TEMP
	065 Move W8, TEMP
	066 Move [X20+16], W8
	067 Compare X19, 0
	068 JumpIfEqual {193}
	069 Move X0, [X19+80]
	070 Compare X0, 0
	071 JumpIfEqual {194}
	072 Move W1, [X20+40]
	073 Move X2, X31
	074 Call NetworkRunner.InvokeSceneLoadStart, X0, X1
	075 Move X8, [X31+120]
	076 Move W9, 1
	077 Move TEMP, 2
	078 Not TEMP
	079 Move W10, TEMP
	080 Add X0, X8, 44
	081 Move [X8+48], W31
	082 Move [X19+88], W9
	083 Move [X8+56], X19
	084 Move [X8+16], W10
	085 Move X1, X31
	086 Call NetworkLoadSceneParameters.get_LocalPhysicsMode, X0
	087 Move X8, [X31+120]
	088 Move [X8+64], W0
	089 Add X0, X8, 44
	090 Move X1, X31
	091 Call NetworkLoadSceneParameters.get_LoadSceneMode, X0
	092 Move X8, [X31+120]
	093 Move [X8+68], W0
	094 Move X0, X19
	095 Call NetworkSceneManagerDefault.get_IsMultiplePeer, X0
	096 Move TEMP, X0
	097 And TEMP, TEMP, 1
	098 Compare TEMP, 1
	099 JumpIfNotEqual {278}
	100 Move X8, [X31+120]
	101 Move W9, [X8+64]
	102 Compare W9, 0
	103 JumpIfNotEqual {195}
	104 Move W9, [X8+68]
	105 Compare W9, 0
	106 JumpIfNotEqual {278}
	107 Move W9, 1
	108 Move TEMP, 3
	109 Not TEMP
	110 Move W10, TEMP
	111 Move [X8+68], W9
	112 Move [X8+16], W10
	113 Move X0, [X19+40]
	114 Compare X0, 0
	115 JumpIfEqual {218}
	116 Move X26, 0x218A000
	117 Move X26, [X26+2600]
	118 Move X1, [X26]
	119 Add X8, X31, 32
	120 Call List`1<Object>.GetEnumerator, X0
	121 Move V0, [X31+2]
	122 Move X8, [X31+48]
	123 Move [X31+5], V0
	124 Move [X31+96], X8
	125 Move X1, [X25]
	126 Add X0, X31, 80
	127 Call Enumerator<Object>.MoveNext, X0
	128 Move TEMP, X0
	129 And TEMP, TEMP, 1
	130 Compare TEMP, 1
	131 JumpIfNotEqual {163}
	132 Move X0, [X31+96]
	133 Compare X0, 0
	134 JumpIfEqual {192}
	135 Move X1, X31
	136 Call Component.get_gameObject, X0
	137 Move X20, X0
	138 Move X0, [X24]
	139 Move W8, [X0+224]
	140 Compare W8, 0
	141 JumpIfNotEqual {143}
	142 Call 0x1C17DFC
	143 Move X0, X20
	144 Move X1, X31
	145 Call Object.Destroy, X0
	146 Move TEMP, 0
	147 Not TEMP
	148 Move W8, TEMP
	149 Move W0, W31
	150 Move [X20+16], W8
	151 Move TEMP, 2
	152 Not TEMP
	153 Move W8, TEMP
	154 Move [X20+16], W8
	155 Move TEMP, 2
	156 Not TEMP
	157 Move W8, TEMP
	158 Move [X20+16], W8
	159 Move TEMP, 4
	160 Not TEMP
	161 Move W8, TEMP
	162 Move [X20+16], W8
	163 Move X20, X31
	164 Move W21, 15
	165 Move X8, 0x218A000
	166 Move X8, [X8+2576]
	167 Move X1, [X8]
	168 Add X0, X31, 80
	169 Call Enumerator<Object>.Dispose, X0
	170 Compare X20, 0
	171 JumpIfNotEqual {219}
	172 NotImplemented "Instruction CMP not yet implemented."
	173 Compare W21, 0
	174 JumpIfNotEqual {242}
	175 Move X0, [X19+40]
	176 Compare X0, 0
	177 JumpIfEqual {221}
	178 Move X1, [X26]
	179 Add X8, X31, 8
	180 Call List`1<Object>.GetEnumerator, X0
	181 NotImplemented "Instruction LDUR not yet implemented."
	182 Move X9, [X31+24]
	183 Move X8, [X31+120]
	184 Move TEMP, 4
	185 Not TEMP
	186 Move W10, TEMP
	187 Move [X31+2], V0
	188 Move [X31+48], X9
	189 Move [X8+88], X9
	190 Move [X8+72], V0
	191 Move [X8+16], W10
	192 Call 0x1C17F20
	193 Call 0x1C17F20
	194 Call 0x1C17F20
	195 Move X0, 0x216B000
	196 Move X0, [X0+1400]
	197 Call 0x1C17D08
	198 Call 0x1C17F10
	199 Move X19, X0
	200 Move X0, 0x218A000
	201 Move X0, [X0+2792]
	202 Call 0x1C17D08
	203 Move X20, X0
	204 Move X0, 0x218A000
	205 Move X0, [X0+2800]
	206 Call 0x1C17D08
	207 Move X2, X0
	208 Move X0, X19
	209 Move X1, X20
	210 Move X3, X31
	211 Call ArgumentException..ctor, X0, X1, X2
	212 Move X0, 0x218A000
	213 Move X0, [X0+2808]
	214 Call 0x1C17D08
	215 Move X1, X0
	216 Move X0, X19
	217 Call 0x1C17DEC
	218 Call 0x1C17F20
	219 Move X0, X20
	220 Call 0x1C17F18
	221 Call 0x1C17F20
	222 Move X22, X1
	223 Move X21, X0
	224 NotImplemented "Instruction CMP not yet implemented."
	225 Move X0, X21
	226 Call 0x3EB2AD0
	227 Move X20, [X0]
	228 Call 0x3EB2AE0
	229 Move W21, W31
	230 Move X20, X31
	231 Move X8, 0x218A000
	232 Move X8, [X8+2576]
	233 Move X1, [X8]
	234 Add X0, X31, 80
	235 Call Enumerator<Object>.Dispose, X0
	236 Compare X20, 0
	237 JumpIfEqual {699}
	238 Move X0, X20
	239 Call 0x1C17F18
	240 Move X22, X1
	241 Move X21, X0
	242 Move W0, W31
	243 Move X1, [X25]
	244 Add X0, X8, 72
	245 Call Enumerator<Object>.MoveNext, X0
	246 Move X20, [X31+120]
	247 Move TEMP, X0
	248 And TEMP, TEMP, 1
	249 Compare TEMP, 1
	250 JumpIfNotEqual {269}
	251 Move X8, [X20+88]
	252 Move [X20+96], X8
	253 Move X0, [X24]
	254 Move X20, [X20+96]
	255 Move W8, [X0+224]
	256 Compare W8, 0
	257 JumpIfNotEqual {259}
	258 Call 0x1C17DFC
	259 Move X0, X20
	260 Move X1, X31
	261 Move X2, X31
	262 Call Object.op_Inequality, X0, X1
	263 Move X8, [X31+120]
	264 Move TEMP, X0
	265 And TEMP, TEMP, 1
	266 Compare TEMP, 1
	267 JumpIfEqual {326}
	268 Move [X8+96], X31
	269 Move X0, X20
	270 Call <LoadSceneCoroutine>d__40.<>m__Finally3, X0
	271 Move X0, [X31+120]
	272 Move [X0+72], X31
	273 Move [X0+80], X31
	274 Move [X0+88], X31
	275 Call <LoadSceneCoroutine>d__40.<>m__Finally2, X0
	276 Compare X19, 0
	277 JumpIfEqual {329}
	278 Move W9, [X19+32]
	279 Move X8, [X31+120]
	280 Compare W9, 0
	281 JumpIfEqual {495}
	282 Move W1, [X8+40]
	283 Move X0, X19
	284 Call NetworkSceneManagerDefault.FindSceneToTakeOver, X0, X1
	285 Move X8, [X31+120]
	286 Move [X8+104], W0
	287 Move X0, X8
	288 Move X1, X31
	289 Call Scene.IsValid, X0
	290 Move TEMP, X0
	291 And TEMP, TEMP, 1
	292 Compare TEMP, 1
	293 JumpIfNotEqual {493}
	294 Move X8, 0x218A000
	295 Move X8, [X8+1336]
	296 Move X0, [X8]
	297 Move X8, [X31+120]
	298 Move W9, [X0+224]
	299 Move W20, [X8+104]
	300 Compare W9, 0
	301 JumpIfNotEqual {303}
	302 Call 0x1C17DFC
	303 Move X0, X20
	304 Call FusionUnitySceneManagerUtils.GetLocalPhysicsMode, X0
	305 Move X8, [X31+120]
	306 Move W9, [X8+64]
	307 NotImplemented "Instruction CMP not yet implemented."
	308 Move W2, [X8+104]
	309 Move W1, [X8+40]
	310 Move [X8+48], W2
	311 Move X0, X19
	312 Call NetworkSceneManagerDefault.MarkSceneAsOwned, X0, X1, X2
	313 Move X8, [X31+120]
	314 Move W8, [X8+68]
	315 Compare W8, 0
	316 JumpIfNotEqual {493}
	317 Move X0, X19
	318 Call NetworkSceneManagerDefault.get_IsMultiplePeer, X0
	319 Move TEMP, X0
	320 And TEMP, TEMP, 1
	321 Compare TEMP, 1
	322 JumpIfEqual {493}
	323 Move X8, [X31+120]
	324 Move W21, W31
	325 Move [X8+108], W31
	326 Move W0, 1
	327 Move [X8+24], X31
	328 Move [X8+16], W0
	329 Call 0x1C17F20
	330 Move X0, 0x2162000
	331 Move X0, [X0+2512]
	332 Call 0x1C17D08
	333 Move W1, 4
	334 Call 0x1C17D6C
	335 Move X8, [X31+120]
	336 Move X19, X0
	337 Move W20, [X8+104]
	338 Move X0, 0x2189000
	339 Move X0, [X0+1336]
	340 Call 0x1C17D08
	341 Move W8, [X0+224]
	342 Compare W8, 0
	343 JumpIfNotEqual {345}
	344 Call 0x1C17DFC
	345 Move X0, X20
	346 Call FusionUnitySceneManagerUtils.Dump, X0
	347 Compare X19, 0
	348 JumpIfNotEqual {350}
	349 Call 0x1C17F20
	350 Move X20, X0
	351 Compare X0, 0
	352 JumpIfNotEqual {357}
	353 Move W8, [X19+24]
	354 Compare W8, 0
	355 JumpIfNotEqual {366}
	356 Call 0x1C17F28
	357 Move X8, [X19]
	358 Move X1, [X8+64]
	359 Move X0, X20
	360 Call 0x1C17E00
	361 Compare X0, 0
	362 JumpIfNotEqual {353}
	363 Call 0x1C17F44
	364 Move X1, X31
	365 Call 0x1C17DEC
	366 Move [X19+32], X20
	367 Move X8, [X31+120]
	368 Move W8, [X8+40]
	369 Move [X31+32], W8
	370 Move X0, 0x216D000
	371 Move X0, [X0+320]
	372 Call 0x1C17D08
	373 Add X1, X31, 32
	374 Call 0x1C17E04
	375 Move X20, X0
	376 Compare X0, 0
	377 JumpIfEqual {387}
	378 Move X8, [X19]
	379 Move X1, [X8+64]
	380 Move X0, X20
	381 Call 0x1C17E00
	382 Compare X0, 0
	383 JumpIfNotEqual {387}
	384 Call 0x1C17F44
	385 Move X1, X31
	386 Call 0x1C17DEC
	387 Move W8, [X19+24]
	388 NotImplemented "Instruction CMP not yet implemented."
	389 Move [X19+40], X20
	390 Move X8, [X31+120]
	391 Move W0, [X8+104]
	392 Call FusionUnitySceneManagerUtils.GetLocalPhysicsMode, X0
	393 Move [X31+8], W0
	394 Move X0, 0x2189000
	395 Move X0, [X0+1320]
	396 Call 0x1C17D08
	397 Add X1, X31, 8
	398 Call 0x1C17E04
	399 Move X20, X0
	400 Compare X0, 0
	401 JumpIfEqual {412}
	402 Move X8, [X19]
	403 Move X1, [X8+64]
	404 Move X0, X20
	405 Call 0x1C17E00
	406 Compare X0, 0
	407 JumpIfNotEqual {412}
	408 Call 0x1C17F44
	409 Move X1, X31
	410 Call 0x1C17DEC
	411 Call 0x1C17F28
	412 Move W8, [X19+24]
	413 NotImplemented "Instruction CMP not yet implemented."
	414 Move [X19+48], X20
	415 Move X8, [X31+120]
	416 Move W8, [X8+64]
	417 Move [X31+4], W8
	418 Move X0, 0x2189000
	419 Move X0, [X0+1320]
	420 Call 0x1C17D08
	421 Add X1, X31, 4
	422 Call 0x1C17E04
	423 Move X20, X0
	424 Compare X0, 0
	425 JumpIfEqual {436}
	426 Move X8, [X19]
	427 Move X1, [X8+64]
	428 Move X0, X20
	429 Call 0x1C17E00
	430 Compare X0, 0
	431 JumpIfNotEqual {436}
	432 Call 0x1C17F44
	433 Move X1, X31
	434 Call 0x1C17DEC
	435 Call 0x1C17F28
	436 Move W8, [X19+24]
	437 NotImplemented "Instruction CMP not yet implemented."
	438 Move [X19+56], X20
	439 Move X0, 0x2189000
	440 Move X0, [X0+2816]
	441 Call 0x1C17D08
	442 Move X1, X19
	443 Move X2, X31
	444 Call String.Format, X0, X1
	445 Move X19, X0
	446 Move X0, 0x2162000
	447 Move X0, [X0+1456]
	448 Call 0x1C17D08
	449 Call 0x1C17F10
	450 Move X20, X0
	451 Move X1, X19
	452 Move X2, X31
	453 Call InvalidOperationException..ctor, X0, X1
	454 Move X0, 0x2189000
	455 Move X0, [X0+2808]
	456 Call 0x1C17D08
	457 Move X1, X0
	458 Move X0, X20
	459 Call 0x1C17DEC
	460 Call 0x1C17F28
	461 Move X0, [X23]
	462 Move X8, [X31+120]
	463 Move W9, [X0+224]
	464 Move W20, [X8+108]
	465 Compare W9, 0
	466 JumpIfNotEqual {468}
	467 Call 0x1C17DFC
	468 Move W0, W20
	469 Move X1, X31
	470 Call SceneManager.GetSceneAt, X0
	471 Move X8, [X31+120]
	472 And X20, X0, 0
	473 Move W1, [X8+104]
	474 Move X0, X20
	475 Move X2, X31
	476 Call Scene.op_Inequality, X0, X1
	477 Move TEMP, X0
	478 And TEMP, TEMP, 1
	479 Compare TEMP, 1
	480 JumpIfEqual {607}
	481 Move X20, [X31+120]
	482 Move W8, [X20+108]
	483 Add W21, W8, 1
	484 Move [X20+108], W21
	485 Move X0, [X23]
	486 Move W8, [X0+224]
	487 Compare W8, 0
	488 JumpIfNotEqual {490}
	489 Call 0x1C17DFC
	490 Move X0, X31
	491 Call SceneManager.get_sceneCount
	492 NotImplemented "Instruction CMP not yet implemented."
	493 Move X8, [X31+120]
	494 Move [X8+104], W31
	495 Add X0, X8, 48
	496 Move X1, X31
	497 Call Scene.IsValid, X0
	498 Move X8, [X31+120]
	499 Move TEMP, X0
	500 And TEMP, TEMP, 1
	501 Compare TEMP, 1
	502 JumpIfEqual {565}
	503 Add X0, X8, 40
	504 Move X1, X31
	505 Call SceneRef.get_IsIndex, X0
	506 Move X8, [X31+120]
	507 Move TEMP, X0
	508 And TEMP, TEMP, 1
	509 Compare TEMP, 1
	510 JumpIfNotEqual {636}
	511 Add X0, X8, 40
	512 Move X1, X31
	513 Call SceneRef.get_AsIndex, X0
	514 Move X8, [X31+120]
	515 Move W20, W0
	516 Move W2, [X8+64]
	517 Move W1, [X8+68]
	518 Move [X31+32], X31
	519 Add X0, X31, 32
	520 Move X3, X31
	521 Call LoadSceneParameters..ctor, X0, X1, X2
	522 Move X0, [X23]
	523 Move W8, [X0+224]
	524 Compare W8, 0
	525 JumpIfNotEqual {527}
	526 Call 0x1C17DFC
	527 Move X1, [X31+32]
	528 Move W0, W20
	529 Move X2, X31
	530 Call SceneManager.LoadSceneAsync, X0, X1
	531 Move X8, [X31+120]
	532 Move [X8+112], X0
	533 Compare X0, 0
	534 JumpIfEqual {665}
	535 Move X0, [X23]
	536 Move W8, [X0+224]
	537 Compare W8, 0
	538 JumpIfNotEqual {540}
	539 Call 0x1C17DFC
	540 Move X0, X31
	541 Call SceneManager.get_sceneCount
	542 Subtract W0, W0, 1
	543 Move X1, X31
	544 Call SceneManager.GetSceneAt, X0
	545 Move X8, [X31+120]
	546 Move [X8+48], W0
	547 Compare X19, 0
	548 JumpIfEqual {696}
	549 Move W1, [X8+40]
	550 And X2, X0, 0
	551 Move X0, X19
	552 Call NetworkSceneManagerDefault.MarkSceneAsOwned, X0, X1, X2
	553 Move X20, [X31+120]
	554 Move X0, [X20+112]
	555 Compare X0, 0
	556 JumpIfEqual {631}
	557 Move X1, X31
	558 Call AsyncOperation.get_isDone, X0
	559 Move X8, [X31+120]
	560 Move TEMP, X0
	561 And TEMP, TEMP, 1
	562 Compare TEMP, 1
	563 JumpIfNotEqual {590}
	564 Move [X8+112], X31
	565 Move X9, [X8+56]
	566 Move TEMP, 0
	567 Not TEMP
	568 Move W10, TEMP
	569 Move [X8+16], W10
	570 Compare X9, 0
	571 JumpIfEqual {632}
	572 Move [X9+88], W31
	573 Move [X8+56], X31
	574 Compare X19, 0
	575 JumpIfEqual {633}
	576 Move X9, [X19]
	577 Move W1, [X8+40]
	578 NotImplemented "Instruction LDRH not yet implemented."
	579 Move W2, [X8+48]
	580 Move X8, [X9+840]
	581 Move X4, [X9+848]
	582 Move X0, X19
	583 NotImplemented "Instruction BLR not yet implemented."
	584 Move X1, X0
	585 Move X0, X19
	586 Move X2, X31
	587 Call MonoBehaviour.StartCoroutine, X0, X1
	588 Move X8, [X31+120]
	589 Move W9, 4
	590 Move X0, [X8+112]
	591 Compare X0, 0
	592 JumpIfEqual {634}
	593 Move W20, [X8+40]
	594 Move X1, X31
	595 Call AsyncOperation.get_progress, X0
	596 Compare X19, 0
	597 JumpIfEqual {635}
	598 Move X8, [X19]
	599 Move X9, [X8+856]
	600 Move X2, [X8+864]
	601 Move X0, X19
	602 Move X1, X20
	603 NotImplemented "Instruction BLR not yet implemented."
	604 Move X8, [X31+120]
	605 Move W9, 3
	606 Move [X8+24], X31
	607 Move X0, [X23]
	608 Move W8, [X0+224]
	609 Compare W8, 0
	610 JumpIfNotEqual {612}
	611 Call 0x1C17DFC
	612 Move X0, X20
	613 Move X1, X31
	614 Call SceneManager.UnloadSceneAsync, X0
	615 Move X8, [X31+120]
	616 Move W9, 2
	617 Move [X8+24], X0
	618 Move [X8+16], W9
	619 Move W0, 1
	620 Move X20, [X31+176]
	621 Move X19, [X31+184]
	622 Move X22, [X31+160]
	623 Move X21, [X31+168]
	624 Move X24, [X31+144]
	625 Move X23, [X31+152]
	626 Move X26, [X31+128]
	627 Move X25, [X31+136]
	628 Move X30, [X31+112]
	629 Add X31, X31, 192
	630 Return X0
	631 Call 0x1C17F20
	632 Call 0x1C17F20
	633 Call 0x1C17F20
	634 Call 0x1C17F20
	635 Call 0x1C17F20
	636 Move W8, [X8+40]
	637 Move [X31+32], W8
	638 Move X0, 0x216D000
	639 Move X0, [X0+320]
	640 Call 0x1C17D08
	641 Add X1, X31, 32
	642 Call 0x1C17E04
	643 Move X19, X0
	644 Move X0, 0x2189000
	645 Move X0, [X0+2824]
	646 Call 0x1C17D08
	647 Move X1, X19
	648 Move X2, X31
	649 Call String.Format, X0, X1
	650 Move X19, X0
	651 Move X0, 0x2162000
	652 Move X0, [X0+1456]
	653 Call 0x1C17D08
	654 Call 0x1C17F10
	655 Move X20, X0
	656 Move X1, X19
	657 Move X2, X31
	658 Call InvalidOperationException..ctor, X0, X1
	659 Move X0, 0x2189000
	660 Move X0, [X0+2808]
	661 Call 0x1C17D08
	662 Move X1, X0
	663 Move X0, X20
	664 Call 0x1C17DEC
	665 Add X0, X8, 40
	666 Move X1, X31
	667 Call SceneRef.get_AsIndex, X0
	668 Move [X31+32], W0
	669 Move X0, 0x2162000
	670 Move X0, [X0+1880]
	671 Call 0x1C17D08
	672 Add X1, X31, 32
	673 Call 0x1C17E04
	674 Move X19, X0
	675 Move X0, 0x2189000
	676 Move X0, [X0+2832]
	677 Call 0x1C17D08
	678 Move X1, X19
	679 Move X2, X31
	680 Call String.Format, X0, X1
	681 Move X19, X0
	682 Move X0, 0x2162000
	683 Move X0, [X0+1456]
	684 Call 0x1C17D08
	685 Call 0x1C17F10
	686 Move X20, X0
	687 Move X1, X19
	688 Move X2, X31
	689 Call InvalidOperationException..ctor, X0, X1
	690 Move X0, 0x2189000
	691 Move X0, [X0+2808]
	692 Call 0x1C17D08
	693 Move X1, X0
	694 Move X0, X20
	695 Call 0x1C17DEC
	696 Call 0x1C17F20
	697 Move X22, X1
	698 Move X21, X0
	699 NotImplemented "Instruction CMP not yet implemented."
	700 Move X0, X21
	701 Call 0x3EB2AD0
	702 Move X19, [X0]
	703 Move [X31+64], X19
	704 Call 0x3EB2AE0
	705 Compare X19, 0
	706 JumpIfEqual {242}
	707 Add X8, X31, 64
	708 Add X0, X8, 8
	709 Call 0x199B6B0
	710 Move X0, X19
	711 Call 0x1C17F18
	712 Compare X19, 0
	713 JumpIfNotEqual {717}
	714 Move X21, X0
	715 Move X0, X21
	716 Call 0x1D2D690
	717 Move X0, [X31+120]
	718 Call <LoadSceneCoroutine>d__40.System.IDisposable.Dispose, X0
	719 Move X0, X19
	720 Call 0x1C17F18
	721 Call 0x1991590

Method: System.Void <>m__Finally1()

Disassembly:
	0x01F92768 B 0x1F92784
	0x01F9276C B 0x1F92784
	0x01F92770 B 0x1F92784
	0x01F92774 B 0x1F92784
	0x01F92778 B 0x1F92784
	0x01F9277C B 0x1F92784
	0x01F92780 B 0x1F92784
	0x01F92784 STR X1, [X31]
	0x01F92788 STR X0, [X31 + 0x58]

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+56]
	003 Move TEMP, 0
	004 Not TEMP
	005 Move W9, TEMP
	006 Move [X0+16], W9
	007 Compare X8, 0
	008 JumpIfEqual {12}
	009 Move [X8+88], W31
	010 Move X30, [X31+16]
	011 Return 
	012 Call 0x1C17F20

Method: System.Void <>m__Finally2()

Disassembly:
	0x01F926E8 CBNZ X19, 0x1F92758
	0x01F926EC LDR X0, [X21]
	0x01F926F0 LDR W8, [X0 + 0xE0]
	0x01F926F4 CBNZ W8, 0x1F92700
	0x01F926F8 BL 0x1C16DFC
	0x01F926FC LDR X0, [X21]
	0x01F92700 LDR X8, [X0 + 0xB8]
	0x01F92704 LDR X0, [X8 + 0x8]
	0x01F92708 CBZ X0, 0x1F92760
	0x01F9270C LDR X1, [X22]
	0x01F92710 BL 0x301DDC4
	0x01F92714 MOV X19, X0
	0x01F92718 ADD X0, X31, 0x20
	0x01F9271C BL 0x199A52C
	0x01F92720 MOV X0, X19
	0x01F92724 LDP X20, X19, [X31 + 0x90]
	0x01F92728 LDP X22, X21, [X31 + 0x80]
	0x01F9272C LDP X24, X23, [X31 + 0x70]
	0x01F92730 LDP X26, X25, [X31 + 0x60]
	0x01F92734 LDR X30, [X31 + 0x50]
	0x01F92738 ADD X31, X31, 0xA0
	0x01F9273C RET
	0x01F92740 BL 0x1C16F20
	0x01F92744 BL 0x1C16F20
	0x01F92748 BL 0x1C16F20
	0x01F9274C BL 0x1C16F20
	0x01F92750 BL 0x1C16F20
	0x01F92754 BL 0x1C16F20
	0x01F92758 MOV X0, X19
	0x01F9275C BL 0x1C16F18
	0x01F92760 BL 0x1C16F20
	0x01F92764 B 0x1F92784

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x2448000
	005 Move W8, [X20+1841]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x2189000
	012 Move X0, [X0+2528]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+1841], W8
	016 Move X8, [X19+32]
	017 Move TEMP, 2
	018 Not TEMP
	019 Move W9, TEMP
	020 Move [X19+16], W9
	021 Compare X8, 0
	022 JumpIfEqual {44}
	023 Move X8, [X8+40]
	024 Compare X8, 0
	025 JumpIfEqual {44}
	026 Move W2, [X8+24]
	027 Move W9, [X8+28]
	028 Add W9, W9, 1
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move [X8+24], W31
	031 Move [X8+28], W9
	032 Move X0, [X8+16]
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move W1, W31
	036 Move X3, X31
	037 Move X30, [X31+32]
	038 Call Array.Clear, X0, X1, X2
	039 Return 
	040 Move X20, [X31+16]
	041 Move X19, [X31+24]
	042 Move X30, [X31+32]
	043 Return 
	044 Call 0x1C17F20

Method: System.Void <>m__Finally3()

Disassembly:
	0x01F92698 CBZ X8, 0x1F92748
	0x01F9269C LDRSW X10, [X0 + 0x18]
	0x01F926A0 LDR W11, [X8 + 0x18]
	0x01F926A4 CMP W10, W11
	0x01F926A8 B.CS 0x1F926C0
	0x01F926AC ADD W9, W10, 0x1
	0x01F926B0 ADD X8, X8, X10, 0x3, LSL
	0x01F926B4 STR W9, [X0 + 0x18]
	0x01F926B8 STR X19, [X8 + 0x20]
	0x01F926BC B 0x1F92620
	0x01F926C0 LDR X8, [X9 + 0x20]
	0x01F926C4 LDR X8, [X8 + 0xC0]
	0x01F926C8 LDR X2, [X8 + 0x70]
	0x01F926CC MOV X1, X19
	0x01F926D0 BL 0x301BF90
	0x01F926D4 B 0x1F92620
	0x01F926D8 MOV X19, X31
	0x01F926DC LDR X1, [X23]
	0x01F926E0 ADD X0, X31, 0x30
	0x01F926E4 BL 0x2BC434C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x2448000
	006 Move X20, 0x2189000
	007 Move W8, [X21+1842]
	008 Move X20, [X20+2576]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x2189000
	015 Move X0, [X0+2576]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+1842], W8
	019 Move TEMP, 3
	020 Not TEMP
	021 Move W8, TEMP
	022 Move [X19+16], W8
	023 Move X1, [X20]
	024 Add X0, X19, 72
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Call Enumerator<Object>.Dispose, X0
	030 Return 

Method: System.Object System.Collections.Generic.IEnumerator<System.Object>.get_Current()

Disassembly:
	0x01F9278C B 0x1F927DC
	0x01F92790 B 0x1F927A8

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void System.Collections.IEnumerator.Reset()

Disassembly:
	0x01F92794 B 0x1F927A8
	0x01F92798 B 0x1F927A8
	0x01F9279C B 0x1F927A8
	0x01F927A0 B 0x1F927A8
	0x01F927A4 B 0x1F927A8
	0x01F927A8 CMP W1, 0x1
	0x01F927AC B.NE 0x1F927C0
	0x01F927B0 BL 0x3EB1AD0
	0x01F927B4 LDR X19, [X0]
	0x01F927B8 BL 0x3EB1AE0
	0x01F927BC B 0x1F926DC
	0x01F927C0 STR X1, [X31]
	0x01F927C4 STR X0, [X31 + 0x58]
	0x01F927C8 MOV X19, X31

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0x2162000
	004 Move X0, [X0+2880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X1, X31
	008 Move X19, X0
	009 Call NotSupportedException..ctor, X0
	010 Move X0, 0x2189000
	011 Move X0, [X0+2840]
	012 Call 0x1C17D08
	013 Move X1, X0
	014 Move X0, X19
	015 Call 0x1C17DEC

Method: System.Object System.Collections.IEnumerator.get_Current()

Disassembly:
	0x01F927CC LDR X1, [X23]
	0x01F927D0 ADD X0, X31, 0x30

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

