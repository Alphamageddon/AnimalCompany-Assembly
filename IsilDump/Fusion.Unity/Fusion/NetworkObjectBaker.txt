Type: Fusion.NetworkObjectBaker

Method: System.Void SetDirty(UnityEngine.MonoBehaviour obj)

Disassembly:
	0x01F856CC LDRB W9, [X22 + 0x6C0]

ISIL:
	001 Return 

Method: System.Boolean TryGetExecutionOrder(UnityEngine.MonoBehaviour obj, out System.Int32 order)

Disassembly:
	0x01F856D0 MOV X19, X8
	0x01F856D4 TBNZ X9, 0x0, 0x1F85758
	0x01F856D8 ADRP X0, 0x2195000

ISIL:
	001 Move W0, W31
	002 Move [X2], W31
	003 Return X0

Method: System.UInt32 GetSortKey(Fusion.NetworkObject obj)

Disassembly:
	0x01F856DC LDR X0, [X0 + 0x400]
	0x01F856E0 BL 0x1C16CF4

ISIL:
	001 Move W0, W31
	002 Return X0

Method: System.Void Trace(System.String msg)

Disassembly:
	0x01F856E4 ADRP X0, 0x2195000
	0x01F856E8 LDR X0, [X0 + 0x408]
	0x01F856EC BL 0x1C16CF4
	0x01F856F0 ADRP X0, 0x2195000
	0x01F856F4 LDR X0, [X0 + 0x330]
	0x01F856F8 BL 0x1C16CF4
	0x01F856FC ADRP X0, 0x2195000
	0x01F85700 LDR X0, [X0 + 0x410]
	0x01F85704 BL 0x1C16CF4
	0x01F85708 ADRP X0, 0x2195000
	0x01F8570C LDR X0, [X0 + 0x418]
	0x01F85710 BL 0x1C16CF4
	0x01F85714 ADRP X0, 0x2195000
	0x01F85718 LDR X0, [X0 + 0x420]
	0x01F8571C BL 0x1C16CF4
	0x01F85720 ADRP X0, 0x2195000
	0x01F85724 LDR X0, [X0 + 0x428]
	0x01F85728 BL 0x1C16CF4
	0x01F8572C ADRP X0, 0x2195000
	0x01F85730 LDR X0, [X0 + 0x430]
	0x01F85734 BL 0x1C16CF4
	0x01F85738 ADRP X0, 0x216E000
	0x01F8573C LDR X0, [X0 + 0x598]
	0x01F85740 BL 0x1C16CF4
	0x01F85744 ADRP X0, 0x2195000
	0x01F85748 LDR X0, [X0 + 0x438]
	0x01F8574C BL 0x1C16CF4
	0x01F85750 MOVZ W8, 0x1
	0x01F85754 STRB W8, [X22 + 0x6C0]
	0x01F85758 STP X31, X31, [X31 + 0x58]
	0x01F8575C STR X31, [X31 + 0x68]
	0x01F85760 STP X31, X31, [X31 + 0x40]
	0x01F85764 STR X31, [X31 + 0x50]
	0x01F85768 STP X31, X31, [X31 + 0x28]
	0x01F8576C STR X31, [X31 + 0x38]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x2455000
	007 Move X22, 0x2196000
	008 Move X20, 0x216F000
	009 Move W8, [X21+1722]
	010 Move X22, [X22+784]
	011 Move X20, [X20+2600]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x216F000
	018 Move X0, [X0+2600]
	019 Call 0x1C17CF4
	020 Move X0, 0x2196000
	021 Move X0, [X0+784]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+1722], W8
	025 Move X0, [X22]
	026 Move X1, X19
	027 Move X2, X31
	028 Call String.Concat, X0, X1
	029 Move X8, [X20]
	030 Move X19, X0
	031 Move W9, [X8+224]
	032 Compare W9, 0
	033 JumpIfNotEqual {36}
	034 Move X0, X8
	035 Call 0x1C17DFC
	036 Move X0, X19
	037 Move X20, [X31+32]
	038 Move X19, [X31+40]
	039 Move X22, [X31+16]
	040 Move X21, [X31+24]
	041 Move X1, X31
	042 Move X30, [X31+48]
	043 Call Debug.Log, X0
	044 Return 

Method: System.Void Warn(System.String msg, UnityEngine.Object context = null)

Disassembly:
	0x01F85770 LDR X0, [X21 + 0x10]
	0x01F85774 CBZ X0, 0x1F85A6C
	0x01F85778 ADRP X8, 0x2195000
	0x01F8577C LDR X8, [X8 + 0x408]
	0x01F85780 ADD X2, X31, 0x58
	0x01F85784 MOV X1, X20
	0x01F85788 LDR X3, [X8]
	0x01F8578C BL 0x2ADC290
	0x01F85790 TBZ X0, 0x0, 0x1F857A0
	0x01F85794 LDR X8, [X31 + 0x68]
	0x01F85798 LDUR V0, [X31 + 0x58]
	0x01F8579C B 0x1F85A34
	0x01F857A0 LDR X8, [X21 + 0x18]
	0x01F857A4 CBZ X8, 0x1F85A6C
	0x01F857A8 LDR W9, [X8 + 0x1C]
	0x01F857AC ADRP X24, 0x216E000
	0x01F857B0 LDR X24, [X24 + 0x598]
	0x01F857B4 ADRP X26, 0x2195000
	0x01F857B8 ADD W9, W9, 0x1
	0x01F857BC STP W31, W9, [X8 + 0x18]
	0x01F857C0 LDR X26, [X26 + 0x410]
	0x01F857C4 MOV X22, X20
	0x01F857C8 LDR X0, [X24]
	0x01F857CC LDR W8, [X0 + 0xE0]
	0x01F857D0 CBNZ W8, 0x1F857D8
	0x01F857D4 BL 0x1C16DFC
	0x01F857D8 MOV X0, X22
	0x01F857DC MOV X1, X31
	0x01F857E0 MOV X2, X31
	0x01F857E4 BL 0x3C354F8
	0x01F857E8 LDR X23, [X21 + 0x18]
	0x01F857EC TBZ X0, 0x0, 0x1F85874
	0x01F857F0 CBZ X22, 0x1F85A6C
	0x01F857F4 MOV X0, X22
	0x01F857F8 MOV X1, X31
	0x01F857FC BL 0x3C40D84
	0x01F85800 CMP W0, 0x10000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x2455000
	008 Move X23, 0x2196000
	009 Move X21, 0x216F000
	010 Move W8, [X22+1723]
	011 Move X23, [X23+784]
	012 Move X21, [X21+2600]
	013 Move X19, X1
	014 Move X20, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0x216F000
	020 Move X0, [X0+2600]
	021 Call 0x1C17CF4
	022 Move X0, 0x2196000
	023 Move X0, [X0+784]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X22+1723], W8
	027 Move X0, [X23]
	028 Move X1, X20
	029 Move X2, X31
	030 Call String.Concat, X0, X1
	031 Move X8, [X21]
	032 Move X20, X0
	033 Move W9, [X8+224]
	034 Compare W9, 0
	035 JumpIfNotEqual {38}
	036 Move X0, X8
	037 Call 0x1C17DFC
	038 Move X0, X20
	039 Move X1, X19
	040 Move X20, [X31+32]
	041 Move X19, [X31+40]
	042 Move X22, [X31+16]
	043 Move X21, [X31+24]
	044 Move X2, X31
	045 Move X30, [X31+48]
	046 Move X23, [X31+56]
	047 Call Debug.LogWarning, X0, X1
	048 Return 

Method: Fusion.NetworkObjectBaker/Result Bake(UnityEngine.GameObject root)

Disassembly:
	0x01F85804 B.GE 0x1F85A70
	0x01F85808 CBZ X23, 0x1F85A6C
	0x01F8580C LDR W10, [X23 + 0x1C]
	0x01F85810 LDR X8, [X23 + 0x10]
	0x01F85814 LDR X9, [X26]
	0x01F85818 ADD W10, W10, 0x1
	0x01F8581C STR W10, [X23 + 0x1C]
	0x01F85820 CBZ X8, 0x1F85A6C
	0x01F85824 LDRSW X10, [X23 + 0x18]
	0x01F85828 LDR W11, [X8 + 0x18]
	0x01F8582C MOV W1, W0
	0x01F85830 CMP W10, W11
	0x01F85834 B.CS 0x1F8584C
	0x01F85838 ADD W9, W10, 0x1
	0x01F8583C ADD X8, X8, X10, 0x1, LSL
	0x01F85840 STR W9, [X23 + 0x18]
	0x01F85844 STRH W1, [X8 + 0x20]
	0x01F85848 B 0x1F85860
	0x01F8584C LDR X8, [X9 + 0x20]
	0x01F85850 MOV X0, X23
	0x01F85854 LDR X8, [X8 + 0xC0]
	0x01F85858 LDR X2, [X8 + 0x70]
	0x01F8585C BL 0x30BEC28
	0x01F85860 MOV X0, X22
	0x01F85864 MOV X1, X31
	0x01F85868 BL 0x3C3F49C
	0x01F8586C MOV X22, X0
	0x01F85870 B 0x1F857C8
	0x01F85874 CBZ X23, 0x1F85A6C
	0x01F85878 ADRP X8, 0x2195000
	0x01F8587C LDR X8, [X8 + 0x420]
	0x01F85880 MOV X0, X23
	0x01F85884 LDR X1, [X8]
	0x01F85888 BL 0x30C07BC
	0x01F8588C LDR X3, [X21 + 0x18]
	0x01F85890 CBZ X3, 0x1F85A6C
	0x01F85894 LDR W22, [X3 + 0x18]
	0x01F85898 CMP W22, 0x10000
	0x01F8589C B.GE 0x1F85A70
	0x01F858A0 AND W26, W22, 0xFFFF
	0x01F858A4 CMP W26, 0xB
	0x01F858A8 B.CS 0x1F858B4
	0x01F858AC MOV W2, W31
	0x01F858B0 B 0x1F859D0
	0x01F858B4 MOVZ W8, 0xCCCD
	0x01F858B8 MOVK W8, 0xCCCC0000
	0x01F858BC UMADDL X8, X26, X8, X31
	0x01F858C0 MOVZ W27, 0xA
	0x01F858C4 ADRP X28, 0x2195000
	0x01F858C8 UBFM X8, X8, 0x23, 0x3F
	0x01F858CC LDR X28, [X28 + 0x330]
	0x01F858D0 MSUB W8, W8, W27, W26
	0x01F858D4 MOVN W9, 0x9
	0x01F858D8 CMP W8, 0x0
	0x01F858DC CSNEG W8, W9, W8, EQ
	0x01F858E0 MOV W2, W31
	0x01F858E4 ADD W23, W26, W8
	0x01F858E8 SUB W24, W31, W8
	0x01F858EC MOVZ W29, 0x18
	0x01F858F0 CMP W24, 0x10000
	0x01F858F4 B.GE 0x1F85A70
	0x01F858F8 LDR X3, [X21 + 0x18]
	0x01F858FC CMP W24, 0xA
	0x01F85900 CSEL W5, W24, W27, LT
	0x01F85904 ADD X0, X31, 0x28
	0x01F85908 MOV W1, W24
	0x01F8590C MOV W4, W23
	0x01F85910 BL 0x1F85F38
	0x01F85914 LDR X0, [X21 + 0x20]
	0x01F85918 LDUR V0, [X31 + 0x28]
	0x01F8591C LDR X8, [X31 + 0x38]
	0x01F85920 STR V0, [X31 + 0x1]
	0x01F85924 STR X8, [X31 + 0x20]
	0x01F85928 CBZ X0, 0x1F85A6C
	0x01F8592C LDR V0, [X31 + 0x1]
	0x01F85930 LDR X8, [X31 + 0x20]
	0x01F85934 LDR X10, [X28]
	0x01F85938 STR V0, [X31 + 0x7]
	0x01F8593C STR X8, [X31 + 0x80]
	0x01F85940 LDR W9, [X0 + 0x1C]
	0x01F85944 LDR X8, [X0 + 0x10]
	0x01F85948 ADD W9, W9, 0x1
	0x01F8594C STR W9, [X0 + 0x1C]
	0x01F85950 CBZ X8, 0x1F85A6C
	0x01F85954 LDRSW X9, [X0 + 0x18]
	0x01F85958 LDR W11, [X8 + 0x18]
	0x01F8595C CMP W9, W11
	0x01F85960 B.CS 0x1F85988
	0x01F85964 ADD W10, W9, 0x1
	0x01F85968 STR W10, [X0 + 0x18]
	0x01F8596C LDR X10, [X31 + 0x80]
	0x01F85970 LDR V0, [X31 + 0x7]
	0x01F85974 NOP
	0x01F85978 MADD X8, X9, X29, X8
	0x01F8597C STR X10, [X8 + 0x30]
	0x01F85980 STR V0, [X8 + 0x2]
	0x01F85984 B 0x1F859AC
	0x01F85988 LDR X8, [X10 + 0x20]
	0x01F8598C LDR V0, [X31 + 0x7]
	0x01F85990 LDR X9, [X31 + 0x80]
	0x01F85994 ADD X1, X31, 0x90
	0x01F85998 LDR X8, [X8 + 0xC0]
	0x01F8599C LDR X2, [X8 + 0x70]
	0x01F859A0 STR V0, [X31 + 0x9]
	0x01F859A4 STR X9, [X31 + 0xA0]
	0x01F859A8 BL 0x3114114
	0x01F859AC LDR X8, [X21 + 0x20]
	0x01F859B0 CBZ X8, 0x1F85A6C
	0x01F859B4 LDR W2, [X8 + 0x18]
	0x01F859B8 CMP W2, 0x10000
	0x01F859BC B.GE 0x1F85A70
	0x01F859C0 SUBS W23, W23, 0xA
	0x01F859C4 ADD W24, W24, 0xA
	0x01F859C8 B.GT 0x1F858F0
	0x01F859CC LDR X3, [X21 + 0x18]
	0x01F859D0 CMP W26, 0xA
	0x01F859D4 MOVZ W8, 0xA
	0x01F859D8 CSEL W5, W26, W8, CC
	0x01F859DC ADD X0, X31, 0x40
	0x01F859E0 MOV W1, W22
	0x01F859E4 MOV W4, W31
	0x01F859E8 BL 0x1F85F38
	0x01F859EC LDR X0, [X21 + 0x10]
	0x01F859F0 LDR V0, [X31 + 0x4]
	0x01F859F4 LDR X8, [X31 + 0x50]
	0x01F859F8 STR V0, [X31 + 0x7]
	0x01F859FC STR X8, [X31 + 0x80]
	0x01F85A00 CBZ X0, 0x1F85A6C
	0x01F85A04 ADRP X8, 0x2195000
	0x01F85A08 LDR X8, [X8 + 0x400]
	0x01F85A0C LDR V0, [X31 + 0x7]
	0x01F85A10 LDR X9, [X31 + 0x80]
	0x01F85A14 ADD X2, X31, 0x90
	0x01F85A18 LDR X3, [X8]
	0x01F85A1C MOV X1, X20
	0x01F85A20 STR V0, [X31 + 0x9]
	0x01F85A24 STR X9, [X31 + 0xA0]
	0x01F85A28 BL 0x2ADA524
	0x01F85A2C LDR X8, [X31 + 0x50]
	0x01F85A30 LDR V0, [X31 + 0x4]
	0x01F85A34 STR X8, [X19 + 0x10]
	0x01F85A38 STR V0, [X19]
	0x01F85A3C LDR X8, [X25 + 0x28]
	0x01F85A40 LDR X9, [X31 + 0xA8]
	0x01F85A44 CMP X8, X9
	0x01F85A48 B.NE 0x1F85A84
	0x01F85A4C LDP X20, X19, [X31 + 0x100]
	0x01F85A50 LDP X22, X21, [X31 + 0xF0]
	0x01F85A54 LDP X24, X23, [X31 + 0xE0]
	0x01F85A58 LDP X26, X25, [X31 + 0xD0]
	0x01F85A5C LDP X28, X27, [X31 + 0xC0]
	0x01F85A60 LDP X29, X30, [X31 + 0xB0]
	0x01F85A64 ADD X31, X31, 0x110
	0x01F85A68 RET
	0x01F85A6C BL 0x1C16F20
	0x01F85A70 BL 0x1C16F30
	0x01F85A74 ADRP X8, 0x2195000
	0x01F85A78 LDR X8, [X8 + 0x438]
	0x01F85A7C LDR X1, [X8]
	0x01F85A80 BL 0x1C16DEC
	0x01F85A84 BL 0x3EB1B20
	0x01F85A88 SUB X31, X31, 0x40
	0x01F85A8C STP X30, X23, [X31 + 0x10]
	0x01F85A90 STP X22, X21, [X31 + 0x20]
	0x01F85A94 STP X20, X19, [X31 + 0x30]
	0x01F85A98 ADRP X19, 0x2454000
	0x01F85A9C ADRP X21, 0x216E000
	0x01F85AA0 LDRB W8, [X19 + 0x6BF]
	0x01F85AA4 LDR X21, [X21 + 0x8F0]
	0x01F85AA8 MOV X20, X0
	0x01F85AAC TBNZ X8, 0x0, 0x1F85AE8
	0x01F85AB0 ADRP X0, 0x216E000
	0x01F85AB4 LDR X0, [X0 + 0x758]
	0x01F85AB8 BL 0x1C16CF4
	0x01F85ABC ADRP X0, 0x216E000
	0x01F85AC0 LDR X0, [X0 + 0x8F0]
	0x01F85AC4 BL 0x1C16CF4
	0x01F85AC8 ADRP X0, 0x2195000
	0x01F85ACC LDR X0, [X0 + 0x440]
	0x01F85AD0 BL 0x1C16CF4
	0x01F85AD4 ADRP X0, 0x216F000
	0x01F85AD8 LDR X0, [X0 + 0xEC8]
	0x01F85ADC BL 0x1C16CF4
	0x01F85AE0 MOVZ W8, 0x1
	0x01F85AE4 STRB W8, [X19 + 0x6BF]
	0x01F85AE8 LDR X0, [X21]
	0x01F85AEC BL 0x1C16F10
	0x01F85AF0 MOV X1, X31
	0x01F85AF4 MOV X19, X0
	0x01F85AF8 BL 0x3231AC4
	0x01F85AFC LDRH W8, [X20 + 0x14]
	0x01F85B00 CBZ W8, 0x1F85BB4
	0x01F85B04 ADRP X23, 0x216F000
	0x01F85B08 LDR X23, [X23 + 0xEC8]
	0x01F85B0C MOV X21, X31
	0x01F85B10 MOV X22, X31
	0x01F85B14 CBZ X21, 0x1F85B30
	0x01F85B18 CBZ X19, 0x1F85BDC
	0x01F85B1C LDR X1, [X23]
	0x01F85B20 MOV X0, X19
	0x01F85B24 MOV X2, X31
	0x01F85B28 BL 0x32333E0
	0x01F85B2C B 0x1F85B34
	0x01F85B30 CBZ X19, 0x1F85BDC
	0x01F85B34 LDRH W1, [X20, X21, LSL]
	0x01F85B38 MOV X0, X19
	0x01F85B3C MOV X2, X31
	0x01F85B40 BL 0x3233EE0
	0x01F85B44 LDRH W8, [X20 + 0x14]
	0x01F85B48 CMP X22, 0x8
	0x01F85B4C B.HI 0x1F85B60
	0x01F85B50 ADD X22, X22, 0x1
	0x01F85B54 CMP X22, X8
	0x01F85B58 ADD X21, X21, 0x2
	0x01F85B5C B.CC 0x1F85B14
	0x01F85B60 CMP W8, 0xB
	0x01F85B64 B.CC 0x1F85BB8
	0x01F85B68 ADRP X9, 0x216E000
	0x01F85B6C LDR X9, [X9 + 0x758]
	0x01F85B70 SUB W8, W8, 0xA
	0x01F85B74 ADD X1, X31, 0xC
	0x01F85B78 STR W8, [X31 + 0xC]
	0x01F85B7C LDR X0, [X9]
	0x01F85B80 BL 0x1C16E04
	0x01F85B84 ADRP X8, 0x2195000
	0x01F85B88 LDR X8, [X8 + 0x440]
	0x01F85B8C MOV X1, X0
	0x01F85B90 MOV X2, X31
	0x01F85B94 LDR X8, [X8]
	0x01F85B98 MOV X0, X8
	0x01F85B9C BL 0x321EFD0
	0x01F85BA0 MOV X1, X0
	0x01F85BA4 MOV X0, X19
	0x01F85BA8 MOV X2, X31
	0x01F85BAC BL 0x32333E0
	0x01F85BB0 B 0x1F85BB8
	0x01F85BB4 CBZ X19, 0x1F85BDC
	0x01F85BB8 LDR X8, [X19]
	0x01F85BBC MOV X0, X19
	0x01F85BC0 LDP X9, X1, [X8 + 0x168]
	0x01F85BC4 BLR X9
	0x01F85BC8 LDP X20, X19, [X31 + 0x30]
	0x01F85BCC LDP X22, X21, [X31 + 0x20]
	0x01F85BD0 LDP X30, X23, [X31 + 0x10]
	0x01F85BD4 ADD X31, X31, 0x40
	0x01F85BD8 RET
	0x01F85BDC BL 0x1C16F20
	0x01F85BE0 STR X30, [X31 - 0x10]!
	0x01F85BE4 LDRH W3, [X1 + 0x14]
	0x01F85BE8 LDRH W8, [X2 + 0x14]
	0x01F85BEC CMP W3, W8
	0x01F85BF0 B.LS 0x1F85BFC
	0x01F85BF4 MOV W0, W31
	0x01F85BF8 B 0x1F85C08
	0x01F85BFC BL 0x1F8609C
	0x01F85C00 CMP W0, 0x0
	0x01F85C04 CSET W0, EQ
	0x01F85C08 LDR X30, [X31], #0x10
	0x01F85C0C RET
	0x01F85C10 STR X30, [X31 - 0x20]!
	0x01F85C14 STP X20, X19, [X31 + 0x10]
	0x01F85C18 LDRH W8, [X1 + 0x14]
	0x01F85C1C LDRH W9, [X2 + 0x14]
	0x01F85C20 MOV X19, X2
	0x01F85C24 MOV X20, X1
	0x01F85C28 CMP W8, W9
	0x01F85C2C CSEL W3, W8, W9, CC
	0x01F85C30 BL 0x1F8609C
	0x01F85C34 CBNZ W0, 0x1F85C44
	0x01F85C38 LDRH W8, [X20 + 0x14]
	0x01F85C3C LDRH W9, [X19 + 0x14]
	0x01F85C40 SUB W0, W8, W9
	0x01F85C44 LDP X20, X19, [X31 + 0x10]
	0x01F85C48 LDR X30, [X31], #0x20
	0x01F85C4C RET
	0x01F85C50 STR X30, [X31 - 0x10]!
	0x01F85C54 LDRH W3, [X1 + 0x14]
	0x01F85C58 LDRH W8, [X2 + 0x14]
	0x01F85C5C CMP W3, W8
	0x01F85C60 B.CS 0x1F85C74
	0x01F85C64 BL 0x1F8609C
	0x01F85C68 CMP W0, 0x0
	0x01F85C6C CSET W0, EQ
	0x01F85C70 B 0x1F85C78
	0x01F85C74 MOV W0, W31
	0x01F85C78 LDR X30, [X31], #0x10
	0x01F85C7C RET
	0x01F85C80 STP X29, X30, [X31 - 0x60]!
	0x01F85C84 STP X28, X27, [X31 + 0x10]
	0x01F85C88 STP X26, X25, [X31 + 0x20]
	0x01F85C8C STP X24, X23, [X31 + 0x30]
	0x01F85C90 STP X22, X21, [X31 + 0x40]
	0x01F85C94 STP X20, X19, [X31 + 0x50]
	0x01F85C98 ADRP X20, 0x2454000
	0x01F85C9C ADRP X22, 0x2173000
	0x01F85CA0 ADRP X21, 0x2173000
	0x01F85CA4 ADRP X29, 0x2195000
	0x01F85CA8 ADRP X28, 0x2195000
	0x01F85CAC ADRP X27, 0x2178000
	0x01F85CB0 ADRP X26, 0x2178000
	0x01F85CB4 ADRP X25, 0x2195000
	0x01F85CB8 ADRP X24, 0x2195000
	0x01F85CBC ADRP X23, 0x2195000
	0x01F85CC0 LDR X22, [X22 + 0x580]
	0x01F85CC4 LDR X21, [X21 + 0x588]
	0x01F85CC8 LDR X29, [X29 + 0x448]
	0x01F85CCC LDR X28, [X28 + 0x450]
	0x01F85CD0 LDRB W8, [X20 + 0x6BD]
	0x01F85CD4 LDR X27, [X27 + 0xAA8]
	0x01F85CD8 LDR X26, [X26 + 0xAA0]
	0x01F85CDC LDR X25, [X25 + 0x458]
	0x01F85CE0 LDR X24, [X24 + 0x460]
	0x01F85CE4 LDR X23, [X23 + 0x468]
	0x01F85CE8 MOV X19, X0
	0x01F85CEC TBNZ X8, 0x0, 0x1F85D64
	0x01F85CF0 ADRP X0, 0x2195000
	0x01F85CF4 LDR X0, [X0 + 0x450]
	0x01F85CF8 BL 0x1C16CF4
	0x01F85CFC ADRP X0, 0x2195000
	0x01F85D00 LDR X0, [X0 + 0x468]
	0x01F85D04 BL 0x1C16CF4
	0x01F85D08 ADRP X0, 0x2178000
	0x01F85D0C LDR X0, [X0 + 0xAA0]
	0x01F85D10 BL 0x1C16CF4
	0x01F85D14 ADRP X0, 0x2173000
	0x01F85D18 LDR X0, [X0 + 0x588]
	0x01F85D1C BL 0x1C16CF4
	0x01F85D20 ADRP X0, 0x2173000
	0x01F85D24 LDR X0, [X0 + 0x580]
	0x01F85D28 BL 0x1C16CF4
	0x01F85D2C ADRP X0, 0x2195000
	0x01F85D30 LDR X0, [X0 + 0x460]
	0x01F85D34 BL 0x1C16CF4
	0x01F85D38 ADRP X0, 0x2178000
	0x01F85D3C LDR X0, [X0 + 0xAA8]
	0x01F85D40 BL 0x1C16CF4
	0x01F85D44 ADRP X0, 0x2195000
	0x01F85D48 LDR X0, [X0 + 0x448]
	0x01F85D4C BL 0x1C16CF4
	0x01F85D50 ADRP X0, 0x2195000
	0x01F85D54 LDR X0, [X0 + 0x458]
	0x01F85D58 BL 0x1C16CF4
	0x01F85D5C MOVZ W8, 0x1
	0x01F85D60 STRB W8, [X20 + 0x6BD]
	0x01F85D64 LDR X0, [X22]
	0x01F85D68 BL 0x1C16F10
	0x01F85D6C LDR X1, [X21]
	0x01F85D70 MOV X20, X0
	0x01F85D74 BL 0x301B7C4
	0x01F85D78 STR X20, [X19 + 0x10]
	0x01F85D7C LDR X0, [X29]
	0x01F85D80 BL 0x1C16F10
	0x01F85D84 LDR X1, [X28]
	0x01F85D88 MOV X20, X0
	0x01F85D8C BL 0x31137EC
	0x01F85D90 STR X20, [X19 + 0x18]
	0x01F85D94 LDR X0, [X27]
	0x01F85D98 BL 0x1C16F10
	0x01F85D9C LDR X1, [X26]
	0x01F85DA0 MOV X20, X0
	0x01F85DA4 BL 0x301B7C4
	0x01F85DA8 STR X20, [X19 + 0x20]
	0x01F85DAC LDR X0, [X25]
	0x01F85DB0 BL 0x1C16F10
	0x01F85DB4 MOV X20, X0
	0x01F85DB8 BL 0x1F85E14
	0x01F85DBC STR X20, [X19 + 0x28]
	0x01F85DC0 LDR X0, [X24]
	0x01F85DC4 BL 0x1C16F10
	0x01F85DC8 LDR X1, [X23]
	0x01F85DCC MOV X20, X0
	0x01F85DD0 BL 0x301B7C4
	0x01F85DD4 STR X20, [X19 + 0x30]
	0x01F85DD8 LDR X0, [X22]
	0x01F85DDC BL 0x1C16F10
	0x01F85DE0 LDR X1, [X21]
	0x01F85DE4 MOV X20, X0
	0x01F85DE8 BL 0x301B7C4
	0x01F85DEC STR X20, [X19 + 0x38]
	0x01F85DF0 MOV X0, X19
	0x01F85DF4 LDP X20, X19, [X31 + 0x50]
	0x01F85DF8 LDP X22, X21, [X31 + 0x40]
	0x01F85DFC LDP X24, X23, [X31 + 0x30]
	0x01F85E00 LDP X26, X25, [X31 + 0x20]
	0x01F85E04 LDP X28, X27, [X31 + 0x10]
	0x01F85E08 MOV X1, X31
	0x01F85E0C LDP X29, X30, [X31], #0x60
	0x01F85E10 B 0x33BDD8C
	0x01F85E14 STR X30, [X31 - 0x50]!
	0x01F85E18 STP X26, X25, [X31 + 0x10]
	0x01F85E1C STP X24, X23, [X31 + 0x20]
	0x01F85E20 STP X22, X21, [X31 + 0x30]
	0x01F85E24 STP X20, X19, [X31 + 0x40]
	0x01F85E28 ADRP X25, 0x2454000
	0x01F85E2C ADRP X26, 0x2195000
	0x01F85E30 ADRP X20, 0x2195000
	0x01F85E34 ADRP X24, 0x2195000
	0x01F85E38 ADRP X23, 0x2195000
	0x01F85E3C ADRP X22, 0x2195000
	0x01F85E40 ADRP X21, 0x2195000
	0x01F85E44 LDR X26, [X26 + 0x470]
	0x01F85E48 LDRB W8, [X25 + 0x6C6]
	0x01F85E4C LDR X20, [X20 + 0x478]
	0x01F85E50 LDR X24, [X24 + 0x480]
	0x01F85E54 LDR X23, [X23 + 0x488]
	0x01F85E58 LDR X22, [X22 + 0x448]
	0x01F85E5C LDR X21, [X21 + 0x450]
	0x01F85E60 MOV X19, X0
	0x01F85E64 TBNZ X8, 0x0, 0x1F85EB8
	0x01F85E68 ADRP X0, 0x2195000
	0x01F85E6C LDR X0, [X0 + 0x478]
	0x01F85E70 BL 0x1C16CF4
	0x01F85E74 ADRP X0, 0x2195000
	0x01F85E78 LDR X0, [X0 + 0x470]
	0x01F85E7C BL 0x1C16CF4
	0x01F85E80 ADRP X0, 0x2195000
	0x01F85E84 LDR X0, [X0 + 0x450]
	0x01F85E88 BL 0x1C16CF4
	0x01F85E8C ADRP X0, 0x2195000
	0x01F85E90 LDR X0, [X0 + 0x488]
	0x01F85E94 BL 0x1C16CF4
	0x01F85E98 ADRP X0, 0x2195000
	0x01F85E9C LDR X0, [X0 + 0x480]
	0x01F85EA0 BL 0x1C16CF4
	0x01F85EA4 ADRP X0, 0x2195000
	0x01F85EA8 LDR X0, [X0 + 0x448]
	0x01F85EAC BL 0x1C16CF4
	0x01F85EB0 MOVZ W8, 0x1
	0x01F85EB4 STRB W8, [X25 + 0x6C6]
	0x01F85EB8 LDR X0, [X26]
	0x01F85EBC BL 0x1C16F10
	0x01F85EC0 LDR X1, [X20]
	0x01F85EC4 MOV X20, X0
	0x01F85EC8 BL 0x2AD9BC4
	0x01F85ECC STR X20, [X19 + 0x10]
	0x01F85ED0 LDR X0, [X24]
	0x01F85ED4 BL 0x1C16F10
	0x01F85ED8 LDR X1, [X23]
	0x01F85EDC MOV X20, X0
	0x01F85EE0 BL 0x30BE430
	0x01F85EE4 STR X20, [X19 + 0x18]
	0x01F85EE8 LDR X0, [X22]
	0x01F85EEC BL 0x1C16F10
	0x01F85EF0 LDR X1, [X21]
	0x01F85EF4 MOV X20, X0
	0x01F85EF8 BL 0x31137EC
	0x01F85EFC STR X20, [X19 + 0x20]
	0x01F85F00 MOV X0, X19
	0x01F85F04 LDP X20, X19, [X31 + 0x40]
	0x01F85F08 LDP X22, X21, [X31 + 0x30]
	0x01F85F0C LDP X24, X23, [X31 + 0x20]
	0x01F85F10 LDP X26, X25, [X31 + 0x10]
	0x01F85F14 MOV X1, X31
	0x01F85F18 LDR X30, [X31], #0x50
	0x01F85F1C B 0x33BDD8C
	0x01F85F20 LDRB W0, [X0]
	0x01F85F24 RET
	0x01F85F28 LDR W0, [X0 + 0x4]
	0x01F85F2C RET
	0x01F85F30 LDR W0, [X0 + 0x8]
	0x01F85F34 RET
	0x01F85F38 STP X30, X25, [X31 - 0x40]!
	0x01F85F3C STP X24, X23, [X31 + 0x10]
	0x01F85F40 STP X22, X21, [X31 + 0x20]
	0x01F85F44 STP X20, X19, [X31 + 0x30]
	0x01F85F48 ADRP X25, 0x2454000
	0x01F85F4C LDRB W8, [X25 + 0x6BE]
	0x01F85F50 MOV W22, W5
	0x01F85F54 MOV W19, W4
	0x01F85F58 MOV X20, X3
	0x01F85F5C MOV W23, W2
	0x01F85F60 MOV W24, W1
	0x01F85F64 MOV X21, X0
	0x01F85F68 TBNZ X8, 0x0, 0x1F85F80
	0x01F85F6C ADRP X0, 0x2195000
	0x01F85F70 LDR X0, [X0 + 0x490]
	0x01F85F74 BL 0x1C16CF4
	0x01F85F78 MOVZ W8, 0x1
	0x01F85F7C STRB W8, [X25 + 0x6BE]
	0x01F85F80 CMP W22, 0x1
	0x01F85F84 STRH W24, [X21 + 0x14]
	0x01F85F88 STRH W23, [X21 + 0x16]
	0x01F85F8C B.LT 0x1F85FC0
	0x01F85F90 CBZ X20, 0x1F85FD4
	0x01F85F94 ADRP X23, 0x2195000
	0x01F85F98 LDR X23, [X23 + 0x490]
	0x01F85F9C MOV W22, W22
	0x01F85FA0 LDR X2, [X23]
	0x01F85FA4 MOV X0, X20
	0x01F85FA8 MOV W1, W19
	0x01F85FAC BL 0x30BE938
	0x01F85FB0 STRH W0, [X21], #0x2
	0x01F85FB4 SUBS X22, X22, 0x1
	0x01F85FB8 ADD W19, W19, 0x1
	0x01F85FBC B.NE 0x1F85FA0
	0x01F85FC0 LDP X20, X19, [X31 + 0x30]
	0x01F85FC4 LDP X22, X21, [X31 + 0x20]
	0x01F85FC8 LDP X24, X23, [X31 + 0x10]
	0x01F85FCC LDP X30, X25, [X31], #0x40
	0x01F85FD0 RET
	0x01F85FD4 BL 0x1C16F20
	0x01F85FD8 STR X30, [X31 - 0x20]!
	0x01F85FDC STP X20, X19, [X31 + 0x10]
	0x01F85FE0 ADRP X20, 0x2454000
	0x01F85FE4 LDRB W8, [X20 + 0x6C1]
	0x01F85FE8 MOV X19, X0
	0x01F85FEC TBNZ X8, 0x0, 0x1F8601C
	0x01F85FF0 ADRP X0, 0x2195000
	0x01F85FF4 LDR X0, [X0 + 0x498]
	0x01F85FF8 BL 0x1C16CF4
	0x01F85FFC ADRP X0, 0x2195000
	0x01F86000 LDR X0, [X0 + 0x338]
	0x01F86004 BL 0x1C16CF4
	0x01F86008 ADRP X0, 0x2194000
	0x01F8600C LDR X0, [X0 + 0x418]
	0x01F86010 BL 0x1C16CF4
	0x01F86014 MOVZ W8, 0x1
	0x01F86018 STRB W8, [X20 + 0x6C1]
	0x01F8601C LDR X8, [X19 + 0x20]
	0x01F86020 CBZ X8, 0x1F86068
	0x01F86024 LDR W9, [X8 + 0x1C]
	0x01F86028 ADD W9, W9, 0x1
	0x01F8602C STP W31, W9, [X8 + 0x18]
	0x01F86030 LDR X0, [X19 + 0x10]
	0x01F86034 CBZ X0, 0x1F86068
	0x01F86038 ADRP X8, 0x2194000
	0x01F8603C LDR X8, [X8 + 0x498]
	0x01F86040 LDR X1, [X8]
	0x01F86044 BL 0x2ADA82C
	0x01F86048 LDR X8, [X19 + 0x18]
	0x01F8604C CBZ X8, 0x1F86068
	0x01F86050 LDR W9, [X8 + 0x1C]
	0x01F86054 LDP X20, X19, [X31 + 0x10]
	0x01F86058 ADD W9, W9, 0x1
	0x01F8605C STP W31, W9, [X8 + 0x18]
	0x01F86060 LDR X30, [X31], #0x20
	0x01F86064 RET
	0x01F86068 BL 0x1C16F20
	0x01F8606C STR X30, [X31 - 0x10]!
	0x01F86070 LDRH W3, [X1 + 0x14]
	0x01F86074 LDRH W8, [X2 + 0x14]
	0x01F86078 CMP W3, W8
	0x01F8607C B.NE 0x1F86090
	0x01F86080 BL 0x1F8609C
	0x01F86084 CMP W0, 0x0
	0x01F86088 CSET W0, EQ
	0x01F8608C B 0x1F86094
	0x01F86090 MOV W0, W31
	0x01F86094 LDR X30, [X31], #0x10
	0x01F86098 RET
	0x01F8609C SUB X31, X31, 0xA0
	0x01F860A0 STR X30, [X31 + 0x60]
	0x01F860A4 STP X24, X23, [X31 + 0x70]
	0x01F860A8 STP X22, X21, [X31 + 0x80]
	0x01F860AC STP X20, X19, [X31 + 0x90]
	0x01F860B0 MRS X23, 0xC000
	0x01F860B4 LDR X8, [X23 + 0x28]
	0x01F860B8 ADRP X24, 0x2453000
	0x01F860BC MOV W19, W3
	0x01F860C0 MOV X21, X2
	0x01F860C4 STR X8, [X31 + 0x58]
	0x01F860C8 LDRB W8, [X24 + 0x6C2]
	0x01F860CC MOV X22, X1
	0x01F860D0 MOV X20, X0
	0x01F860D4 TBNZ X8, 0x0, 0x1F860EC
	0x01F860D8 ADRP X0, 0x2194000
	0x01F860DC LDR X0, [X0 + 0x378]
	0x01F860E0 BL 0x1C16CF4
	0x01F860E4 MOVZ W8, 0x1
	0x01F860E8 STRB W8, [X24 + 0x6C2]
	0x01F860EC SUBS W8, W19, 0x1
	0x01F860F0 STP X31, X31, [X31 + 0x40]
	0x01F860F4 STR X31, [X31 + 0x50]
	0x01F860F8 STP X31, X31, [X31 + 0x20]
	0x01F860FC STR X31, [X31 + 0x30]
	0x01F86100 B.LT 0x1F861B8
	0x01F86104 CMP W8, 0x9
	0x01F86108 MOVZ W8, 0xA
	0x01F8610C CSEL W8, W19, W8, CC
	0x01F86110 MOV X9, X21
	0x01F86114 MOV X10, X22
	0x01F86118 LDRH W11, [X10]
	0x01F8611C LDRH W12, [X9]
	0x01F86120 SUBS W0, W11, W12
	0x01F86124 B.NE 0x1F861BC
	0x01F86128 ADD X10, X10, 0x2
	0x01F8612C SUBS X8, X8, 0x1
	0x01F86130 ADD X9, X9, 0x2
	0x01F86134 B.NE 0x1F86118
	0x01F86138 CMP W19, 0xB
	0x01F8613C B.LT 0x1F861B8
	0x01F86140 LDR X0, [X20 + 0x20]
	0x01F86144 CBZ X0, 0x1F861E4
	0x01F86148 LDRH W8, [X22 + 0x16]
	0x01F8614C ADRP X22, 0x2194000
	0x01F86150 LDR X22, [X22 + 0x378]
	0x01F86154 SUB W1, W8, 0x1
	0x01F86158 ADD X8, X31, 0x8
	0x01F8615C LDR X2, [X22]
	0x01F86160 BL 0x3113CF4
	0x01F86164 LDUR V0, [X31 + 0x8]
	0x01F86168 LDR X8, [X31 + 0x18]
	0x01F8616C STR V0, [X31 + 0x4]
	0x01F86170 STR X8, [X31 + 0x50]
	0x01F86174 LDR X0, [X20 + 0x20]
	0x01F86178 CBZ X0, 0x1F861E4
	0x01F8617C LDRH W8, [X21 + 0x16]
	0x01F86180 LDR X2, [X22]
	0x01F86184 SUB W1, W8, 0x1
	0x01F86188 ADD X8, X31, 0x8
	0x01F8618C BL 0x3113CF4
	0x01F86190 LDUR V0, [X31 + 0x8]
	0x01F86194 LDR X8, [X31 + 0x18]
	0x01F86198 SUB W3, W19, 0xA
	0x01F8619C ADD X1, X31, 0x40
	0x01F861A0 ADD X2, X31, 0x20
	0x01F861A4 MOV X0, X20
	0x01F861A8 STR V0, [X31 + 0x2]
	0x01F861AC STR X8, [X31 + 0x30]
	0x01F861B0 BL 0x1F8609C
	0x01F861B4 B 0x1F861BC
	0x01F861B8 MOV W0, W31
	0x01F861BC LDR X8, [X23 + 0x28]
	0x01F861C0 LDR X9, [X31 + 0x58]
	0x01F861C4 CMP X8, X9
	0x01F861C8 B.NE 0x1F861E8
	0x01F861CC LDP X20, X19, [X31 + 0x90]
	0x01F861D0 LDP X22, X21, [X31 + 0x80]
	0x01F861D4 LDP X24, X23, [X31 + 0x70]
	0x01F861D8 LDR X30, [X31 + 0x60]
	0x01F861DC ADD X31, X31, 0xA0
	0x01F861E0 RET
	0x01F861E4 BL 0x1C16F20
	0x01F861E8 BL 0x3EB1B20
	0x01F861EC LDRH W2, [X1 + 0x14]
	0x01F861F0 B 0x1F861F4
	0x01F861F4 SUB X31, X31, 0x70
	0x01F861F8 STP X30, X23, [X31 + 0x40]
	0x01F861FC STP X22, X21, [X31 + 0x50]
	0x01F86200 STP X20, X19, [X31 + 0x60]
	0x01F86204 MRS X22, 0xC000
	0x01F86208 LDR X8, [X22 + 0x28]
	0x01F8620C ADRP X23, 0x2453000
	0x01F86210 MOV W19, W2
	0x01F86214 MOV X21, X1
	0x01F86218 STR X8, [X31 + 0x38]
	0x01F8621C LDRB W8, [X23 + 0x6C3]
	0x01F86220 MOV X20, X0
	0x01F86224 TBNZ X8, 0x0, 0x1F8623C
	0x01F86228 ADRP X0, 0x2194000
	0x01F8622C LDR X0, [X0 + 0x378]
	0x01F86230 BL 0x1C16CF4
	0x01F86234 MOVZ W8, 0x1
	0x01F86238 STRB W8, [X23 + 0x6C3]
	0x01F8623C STP X31, X31, [X31 + 0x20]
	0x01F86240 STR X31, [X31 + 0x30]
	0x01F86244 LDRH W8, [X21 + 0x14]
	0x01F86248 CBZ X8, 0x1F862C8
	0x01F8624C MOV X9, X31
	0x01F86250 MOV X10, X21
	0x01F86254 LDRH W11, [X10], #0x2
	0x01F86258 UBFM W12, W19, 0x1B, 0x1A
	0x01F8625C SUB W12, W12, W19
	0x01F86260 CMP X9, 0x8
	0x01F86264 ADD W19, W12, W11
	0x01F86268 B.HI 0x1F86278
	0x01F8626C ADD X9, X9, 0x1
	0x01F86270 CMP X9, X8
	0x01F86274 B.CC 0x1F86254
	0x01F86278 CMP W8, 0xB
	0x01F8627C B.CC 0x1F862C8
	0x01F86280 LDR X0, [X20 + 0x20]
	0x01F86284 CBZ X0, 0x1F862F0
	0x01F86288 ADRP X9, 0x2194000
	0x01F8628C LDRH W8, [X21 + 0x16]
	0x01F86290 LDR X9, [X9 + 0x378]
	0x01F86294 SUB W1, W8, 0x1
	0x01F86298 LDR X2, [X9]
	0x01F8629C ADD X8, X31, 0x8
	0x01F862A0 BL 0x3113CF4
	0x01F862A4 LDUR V0, [X31 + 0x8]
	0x01F862A8 LDR X8, [X31 + 0x18]
	0x01F862AC ADD X1, X31, 0x20
	0x01F862B0 MOV X0, X20
	0x01F862B4 MOV W2, W19
	0x01F862B8 STR V0, [X31 + 0x2]
	0x01F862BC STR X8, [X31 + 0x30]
	0x01F862C0 BL 0x1F861F4
	0x01F862C4 MOV W19, W0
	0x01F862C8 LDR X8, [X22 + 0x28]
	0x01F862CC LDR X9, [X31 + 0x38]
	0x01F862D0 CMP X8, X9
	0x01F862D4 B.NE 0x1F862F4
	0x01F862D8 MOV W0, W19
	0x01F862DC LDP X20, X19, [X31 + 0x60]
	0x01F862E0 LDP X22, X21, [X31 + 0x50]
	0x01F862E4 LDP X30, X23, [X31 + 0x40]
	0x01F862E8 ADD X31, X31, 0x70
	0x01F862EC RET
	0x01F862F0 BL 0x1C16F20
	0x01F862F4 BL 0x3EB1B20
	0x01F862F8 STR X30, [X31 - 0x30]!
	0x01F862FC STP X22, X21, [X31 + 0x10]
	0x01F86300 STP X20, X19, [X31 + 0x20]
	0x01F86304 ADRP X21, 0x2453000
	0x01F86308 ADRP X22, 0x216D000
	0x01F8630C LDRB W8, [X21 + 0x6C4]
	0x01F86310 LDR X22, [X22 + 0x8F0]
	0x01F86314 MOV X19, X1
	0x01F86318 MOV X20, X0
	0x01F8631C TBNZ X8, 0x0, 0x1F86334
	0x01F86320 ADRP X0, 0x216D000
	0x01F86324 LDR X0, [X0 + 0x8F0]
	0x01F86328 BL 0x1C16CF4
	0x01F8632C MOVZ W8, 0x1
	0x01F86330 STRB W8, [X21 + 0x6C4]
	0x01F86334 LDR X0, [X22]
	0x01F86338 BL 0x1C16F10
	0x01F8633C MOV X1, X31
	0x01F86340 MOV X21, X0
	0x01F86344 BL 0x3231AC4
	0x01F86348 MOV X0, X20
	0x01F8634C MOV X1, X19
	0x01F86350 MOV X2, X21
	0x01F86354 BL 0x1F8637C
	0x01F86358 CBZ X21, 0x1F86378
	0x01F8635C LDR X8, [X21]
	0x01F86360 MOV X0, X21
	0x01F86364 LDP X20, X19, [X31 + 0x20]
	0x01F86368 LDP X22, X21, [X31 + 0x10]
	0x01F8636C LDP X2, X1, [X8 + 0x168]
	0x01F86370 LDR X30, [X31], #0x30
	0x01F86374 BR X2
	0x01F86378 BL 0x1C16F20
	0x01F8637C SUB X31, X31, 0x80
	0x01F86380 STP X30, X25, [X31 + 0x40]
	0x01F86384 STP X24, X23, [X31 + 0x50]
	0x01F86388 STP X22, X21, [X31 + 0x60]
	0x01F8638C STP X20, X19, [X31 + 0x70]
	0x01F86390 MRS X22, 0xC000
	0x01F86394 LDR X8, [X22 + 0x28]
	0x01F86398 ADRP X23, 0x2453000
	0x01F8639C MOV X19, X2
	0x01F863A0 MOV X21, X1
	0x01F863A4 STR X8, [X31 + 0x38]
	0x01F863A8 LDRB W8, [X23 + 0x6C5]
	0x01F863AC MOV X20, X0
	0x01F863B0 TBNZ X8, 0x0, 0x1F863D4
	0x01F863B4 ADRP X0, 0x2194000
	0x01F863B8 LDR X0, [X0 + 0x378]
	0x01F863BC BL 0x1C16CF4
	0x01F863C0 ADRP X0, 0x216E000
	0x01F863C4 LDR X0, [X0 + 0xEC8]
	0x01F863C8 BL 0x1C16CF4
	0x01F863CC MOVZ W8, 0x1
	0x01F863D0 STRB W8, [X23 + 0x6C5]
	0x01F863D4 STP X31, X31, [X31 + 0x20]
	0x01F863D8 STR X31, [X31 + 0x30]
	0x01F863DC LDRH W8, [X21 + 0x14]
	0x01F863E0 CBZ W8, 0x1F8649C
	0x01F863E4 ADRP X23, 0x216E000
	0x01F863E8 LDR X23, [X23 + 0xEC8]
	0x01F863EC MOV X24, X31
	0x01F863F0 MOV X25, X31
	0x01F863F4 CBZ X24, 0x1F86410
	0x01F863F8 CBZ X19, 0x1F864C4
	0x01F863FC LDR X1, [X23]
	0x01F86400 MOV X0, X19
	0x01F86404 MOV X2, X31
	0x01F86408 BL 0x32333E0
	0x01F8640C B 0x1F86414
	0x01F86410 CBZ X19, 0x1F864C4
	0x01F86414 LDRH W1, [X21, X24, LSL]
	0x01F86418 MOV X0, X19
	0x01F8641C MOV X2, X31
	0x01F86420 BL 0x3233EE0
	0x01F86424 LDRH W8, [X21 + 0x14]
	0x01F86428 CMP X25, 0x8
	0x01F8642C B.HI 0x1F86440
	0x01F86430 ADD X25, X25, 0x1
	0x01F86434 CMP X25, X8
	0x01F86438 ADD X24, X24, 0x2
	0x01F8643C B.CC 0x1F863F4
	0x01F86440 CMP W8, 0xB
	0x01F86444 B.CC 0x1F8649C
	0x01F86448 LDR X1, [X23]
	0x01F8644C MOV X0, X19
	0x01F86450 MOV X2, X31
	0x01F86454 BL 0x32333E0
	0x01F86458 LDR X0, [X20 + 0x20]
	0x01F8645C CBZ X0, 0x1F864C4
	0x01F86460 ADRP X9, 0x2194000
	0x01F86464 LDRH W8, [X21 + 0x16]
	0x01F86468 LDR X9, [X9 + 0x378]
	0x01F8646C SUB W1, W8, 0x1
	0x01F86470 LDR X2, [X9]
	0x01F86474 ADD X8, X31, 0x8
	0x01F86478 BL 0x3113CF4
	0x01F8647C LDUR V0, [X31 + 0x8]
	0x01F86480 LDR X8, [X31 + 0x18]
	0x01F86484 ADD X1, X31, 0x20
	0x01F86488 MOV X0, X20
	0x01F8648C MOV X2, X19
	0x01F86490 STR V0, [X31 + 0x2]
	0x01F86494 STR X8, [X31 + 0x30]
	0x01F86498 BL 0x1F8637C
	0x01F8649C LDR X8, [X22 + 0x28]
	0x01F864A0 LDR X9, [X31 + 0x38]
	0x01F864A4 CMP X8, X9
	0x01F864A8 B.NE 0x1F864C8
	0x01F864AC LDP X20, X19, [X31 + 0x70]
	0x01F864B0 LDP X22, X21, [X31 + 0x60]
	0x01F864B4 LDP X24, X23, [X31 + 0x50]
	0x01F864B8 LDP X30, X25, [X31 + 0x40]
	0x01F864BC ADD X31, X31, 0x80
	0x01F864C0 RET
	0x01F864C4 BL 0x1C16F20
	0x01F864C8 BL 0x3EB1B20
	0x01F864CC STR X30, [X31 - 0x20]!
	0x01F864D0 STP X20, X19, [X31 + 0x10]
	0x01F864D4 ADRP X19, 0x2453000
	0x01F864D8 ADRP X20, 0x2194000
	0x01F864DC LDRB W8, [X19 + 0x6C7]
	0x01F864E0 LDR X20, [X20 + 0x3C8]
	0x01F864E4 TBNZ X8, 0x0, 0x1F864FC
	0x01F864E8 ADRP X0, 0x2194000
	0x01F864EC LDR X0, [X0 + 0x3C8]
	0x01F864F0 BL 0x1C16CF4
	0x01F864F4 MOVZ W8, 0x1
	0x01F864F8 STRB W8, [X19 + 0x6C7]
	0x01F864FC LDR X0, [X20]
	0x01F86500 BL 0x1C16F10
	0x01F86504 MOV X1, X31
	0x01F86508 MOV X19, X0
	0x01F8650C BL 0x33BDD8C
	0x01F86510 LDR X8, [X20]
	0x01F86514 LDR X8, [X8 + 0xB8]
	0x01F86518 STR X19, [X8]
	0x01F8651C LDP X20, X19, [X31 + 0x10]
	0x01F86520 LDR X30, [X31], #0x20
	0x01F86524 RET
	0x01F86528 MOV X1, X31
	0x01F8652C B 0x33BDD8C
	0x01F86530 STP X30, X21, [X31 - 0x20]!
	0x01F86534 STP X20, X19, [X31 + 0x10]
	0x01F86538 ADRP X20, 0x2453000
	0x01F8653C ADRP X21, 0x216D000
	0x01F86540 LDRB W8, [X20 + 0x6C8]
	0x01F86544 LDR X21, [X21 + 0x598]
	0x01F86548 MOV X19, X1
	0x01F8654C TBNZ X8, 0x0, 0x1F86564
	0x01F86550 ADRP X0, 0x216D000
	0x01F86554 LDR X0, [X0 + 0x598]
	0x01F86558 BL 0x1C16CF4
	0x01F8655C MOVZ W8, 0x1
	0x01F86560 STRB W8, [X20 + 0x6C8]
	0x01F86564 LDR X0, [X21]
	0x01F86568 LDR W8, [X0 + 0xE0]
	0x01F8656C CBNZ W8, 0x1F86574
	0x01F86570 BL 0x1C16DFC
	0x01F86574 MOV X0, X19
	0x01F86578 LDP X20, X19, [X31 + 0x10]
	0x01F8657C MOV X1, X31
	0x01F86580 MOV X2, X31
	0x01F86584 LDP X30, X21, [X31], #0x20
	0x01F86588 B 0x3C3883C
	0x01F8658C STP X30, X21, [X31 - 0x20]!
	0x01F86590 STP X20, X19, [X31 + 0x10]
	0x01F86594 ADRP X20, 0x2453000
	0x01F86598 ADRP X21, 0x216D000
	0x01F8659C LDRB W8, [X20 + 0x6C9]
	0x01F865A0 LDR X21, [X21 + 0x598]
	0x01F865A4 MOV X19, X1
	0x01F865A8 TBNZ X8, 0x0, 0x1F865C0
	0x01F865AC ADRP X0, 0x216D000
	0x01F865B0 LDR X0, [X0 + 0x598]
	0x01F865B4 BL 0x1C16CF4
	0x01F865B8 MOVZ W8, 0x1
	0x01F865BC STRB W8, [X20 + 0x6C9]
	0x01F865C0 LDR X0, [X21]
	0x01F865C4 LDR W8, [X0 + 0xE0]
	0x01F865C8 CBNZ W8, 0x1F865D0
	0x01F865CC BL 0x1C16DFC
	0x01F865D0 MOV X0, X19
	0x01F865D4 LDP X20, X19, [X31 + 0x10]
	0x01F865D8 MOV X1, X31
	0x01F865DC MOV X2, X31
	0x01F865E0 LDP X30, X21, [X31], #0x20
	0x01F865E4 B 0x3C3883C
	0x01F865E8 LDP X8, X1, [X0 + 0x18]
	0x01F865EC MOV X0, X8
	0x01F865F0 RET
	0x01F865F4 STP X30, X21, [X31 - 0x20]!
	0x01F865F8 STP X20, X19, [X31 + 0x10]
	0x01F865FC ADRP X20, 0x2453000
	0x01F86600 ADRP X21, 0x2194000
	0x01F86604 LDRB W8, [X20 + 0x6CA]
	0x01F86608 LDR X21, [X21 + 0x4A0]
	0x01F8660C MOV X19, X0
	0x01F86610 TBNZ X8, 0x0, 0x1F86628
	0x01F86614 ADRP X0, 0x2194000
	0x01F86618 LDR X0, [X0 + 0x4A0]
	0x01F8661C BL 0x1C16CF4
	0x01F86620 MOVZ W8, 0x1
	0x01F86624 STRB W8, [X20 + 0x6CA]
	0x01F86628 LDR X1, [X21]
	0x01F8662C MOV X0, X19
	0x01F86630 LDP X20, X19, [X31 + 0x10]
	0x01F86634 LDP X30, X21, [X31], #0x20
	0x01F86638 B 0x24141DC
	0x01F8663C LDP X8, X1, [X0 + 0x18]
	0x01F86640 MOV X0, X8
	0x01F86644 RET
	0x01F86648 STP X30, X21, [X31 - 0x20]!
	0x01F8664C STP X20, X19, [X31 + 0x10]
	0x01F86650 ADRP X20, 0x2453000
	0x01F86654 ADRP X21, 0x2194000
	0x01F86658 LDRB W8, [X20 + 0x6CB]
	0x01F8665C LDR X21, [X21 + 0x4A8]
	0x01F86660 MOV X19, X0
	0x01F86664 TBNZ X8, 0x0, 0x1F8667C
	0x01F86668 ADRP X0, 0x2194000
	0x01F8666C LDR X0, [X0 + 0x4A8]
	0x01F86670 BL 0x1C16CF4
	0x01F86674 MOVZ W8, 0x1
	0x01F86678 STRB W8, [X20 + 0x6CB]
	0x01F8667C LDR X1, [X21]
	0x01F86680 MOV X0, X19
	0x01F86684 LDP X20, X19, [X31 + 0x10]

ISIL:
	001 Subtract X31, X31, 496
	002 Move [X31+400], X29
	003 Move [X31+408], X30
	004 Move [X31+416], X28
	005 Move [X31+424], X27
	006 Move [X31+432], X26
	007 Move [X31+440], X25
	008 Move [X31+448], X24
	009 Move [X31+456], X23
	010 Move [X31+464], X22
	011 Move [X31+472], X21
	012 Move [X31+480], X20
	013 Move [X31+488], X19
	014 NotImplemented "Instruction MRS not yet implemented."
	015 Move X8, [X27+40]
	016 Move X22, 0x2455000
	017 Move X21, 0x216F000
	018 Move X19, X1
	019 Move [X31+392], X8
	020 Move [X31+104], X0
	021 Move W8, [X22+1724]
	022 Move X21, [X21+1432]
	023 Move X20, X0
	024 Move TEMP, X8
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {156}
	028 Move X0, 0x2175000
	029 Move X0, [X0+4048]
	030 Call 0x1C17CF4
	031 Move X0, 0x2175000
	032 Move X0, [X0+4056]
	033 Call 0x1C17CF4
	034 Move X0, 0x2175000
	035 Move X0, [X0+4064]
	036 Call 0x1C17CF4
	037 Move X0, 0x2196000
	038 Move X0, [X0+792]
	039 Call 0x1C17CF4
	040 Move X0, 0x2196000
	041 Move X0, [X0+800]
	042 Call 0x1C17CF4
	043 Move X0, 0x2174000
	044 Move X0, [X0+1440]
	045 Call 0x1C17CF4
	046 Move X0, 0x2196000
	047 Move X0, [X0+808]
	048 Call 0x1C17CF4
	049 Move X0, 0x2196000
	050 Move X0, [X0+816]
	051 Call 0x1C17CF4
	052 Move X0, 0x217A000
	053 Move X0, [X0+3576]
	054 Call 0x1C17CF4
	055 Move X0, 0x2196000
	056 Move X0, [X0+824]
	057 Call 0x1C17CF4
	058 Move X0, 0x2196000
	059 Move X0, [X0+832]
	060 Call 0x1C17CF4
	061 Move X0, 0x2179000
	062 Move X0, [X0+2232]
	063 Call 0x1C17CF4
	064 Move X0, 0x2175000
	065 Move X0, [X0+4088]
	066 Call 0x1C17CF4
	067 Move X0, 0x2196000
	068 Move X0, [X0+840]
	069 Call 0x1C17CF4
	070 Move X0, 0x2196000
	071 Move X0, [X0+848]
	072 Call 0x1C17CF4
	073 Move X0, 0x2196000
	074 Move X0, [X0+856]
	075 Call 0x1C17CF4
	076 Move X0, 0x2196000
	077 Move X0, [X0+864]
	078 Call 0x1C17CF4
	079 Move X0, 0x2196000
	080 Move X0, [X0+872]
	081 Call 0x1C17CF4
	082 Move X0, 0x2196000
	083 Move X0, [X0+880]
	084 Call 0x1C17CF4
	085 Move X0, 0x2179000
	086 Move X0, [X0+2248]
	087 Call 0x1C17CF4
	088 Move X0, 0x217A000
	089 Move X0, [X0+3584]
	090 Call 0x1C17CF4
	091 Move X0, 0x217A000
	092 Move X0, [X0+3592]
	093 Call 0x1C17CF4
	094 Move X0, 0x2196000
	095 Move X0, [X0+888]
	096 Call 0x1C17CF4
	097 Move X0, 0x2196000
	098 Move X0, [X0+896]
	099 Call 0x1C17CF4
	100 Move X0, 0x2179000
	101 Move X0, [X0+1240]
	102 Call 0x1C17CF4
	103 Move X0, 0x2196000
	104 Move X0, [X0+904]
	105 Call 0x1C17CF4
	106 Move X0, 0x2196000
	107 Move X0, [X0+912]
	108 Call 0x1C17CF4
	109 Move X0, 0x2196000
	110 Move X0, [X0+920]
	111 Call 0x1C17CF4
	112 Move X0, 0x2196000
	113 Move X0, [X0+928]
	114 Call 0x1C17CF4
	115 Move X0, 0x2176000
	116 Move X0, [X0+1520]
	117 Call 0x1C17CF4
	118 Move X0, 0x2170000
	119 Move X0, [X0+1136]
	120 Call 0x1C17CF4
	121 Move X0, 0x2172000
	122 Move X0, [X0+3832]
	123 Call 0x1C17CF4
	124 Move X0, 0x216F000
	125 Move X0, [X0+1432]
	126 Call 0x1C17CF4
	127 Move X0, 0x2196000
	128 Move X0, [X0+936]
	129 Call 0x1C17CF4
	130 Move X0, 0x2196000
	131 Move X0, [X0+944]
	132 Call 0x1C17CF4
	133 Move X0, 0x2196000
	134 Move X0, [X0+952]
	135 Call 0x1C17CF4
	136 Move X0, 0x2196000
	137 Move X0, [X0+960]
	138 Call 0x1C17CF4
	139 Move X0, 0x2196000
	140 Move X0, [X0+968]
	141 Call 0x1C17CF4
	142 Move X0, 0x2196000
	143 Move X0, [X0+976]
	144 Call 0x1C17CF4
	145 Move X0, 0x2196000
	146 Move X0, [X0+984]
	147 Call 0x1C17CF4
	148 Move X0, 0x2196000
	149 Move X0, [X0+992]
	150 Call 0x1C17CF4
	151 Move X0, 0x2196000
	152 Move X0, [X0+1000]
	153 Call 0x1C17CF4
	154 Move W8, 1
	155 Move [X22+1724], W8
	156 Move X0, [X21]
	157 Move [X31+80], X31
	158 Move [X31+88], X31
	159 Move [X31+96], X31
	160 Move [X31+64], X31
	161 Move [X31+72], X31
	162 Move [X31+304], X31
	163 Move [X31+312], X31
	164 Move [X31+320], X31
	165 Move [X31+272], X31
	166 Move [X31+280], X31
	167 Move [X31+288], X31
	168 Move [X31+240], X31
	169 Move [X31+248], X31
	170 Move [X31+256], X31
	171 Move W8, [X0+224]
	172 Compare W8, 0
	173 JumpIfNotEqual {175}
	174 Call 0x1C17DFC
	175 Move X0, X19
	176 Move X1, X31
	177 Move X2, X31
	178 Call Object.op_Equality, X0, X1
	179 Move TEMP, X0
	180 And TEMP, TEMP, 1
	181 Compare TEMP, 1
	182 JumpIfEqual {867}
	183 Compare X19, 0
	184 JumpIfEqual {866}
	185 Move X8, 0x2196000
	186 Move X8, [X8+792]
	187 Move X2, [X20+16]
	188 Move X24, 0x2196000
	189 Move W1, 1
	190 Move X3, [X8]
	191 Move X24, [X24+968]
	192 Move X0, X19
	193 Call 0x21E71D0, X0, X1, X2
	194 Move X0, [X24]
	195 Move X21, [X20+16]
	196 Move W8, [X0+224]
	197 Compare W8, 0
	198 JumpIfNotEqual {201}
	199 Call 0x1C17DFC
	200 Move X0, [X24]
	201 Move X8, [X0+184]
	202 Move X22, [X8+8]
	203 Compare X22, 0
	204 JumpIfNotEqual {226}
	205 Move W8, [X0+224]
	206 Compare W8, 0
	207 JumpIfNotEqual {210}
	208 Call 0x1C17DFC
	209 Move X0, [X24]
	210 Move X9, 0x2196000
	211 Move X8, [X0+184]
	212 Move X9, [X9+936]
	213 Move X23, [X8]
	214 Move X0, [X9]
	215 Call 0x1C17F10
	216 Move X8, 0x2196000
	217 Move X8, [X8+952]
	218 Move X1, X23
	219 Move X3, X31
	220 Move X22, X0
	221 Move X2, [X8]
	222 Call Predicate`1<Object>..ctor, X0, X1, X2
	223 Move X8, [X24]
	224 Move X8, [X8+184]
	225 Move [X8+8], X22
	226 Compare X21, 0
	227 JumpIfEqual {866}
	228 Move X8, 0x2196000
	229 Move X8, [X8+840]
	230 Move X0, X21
	231 Move X1, X22
	232 Move X2, [X8]
	233 Call List`1<Object>.RemoveAll, X0, X1
	234 Move X0, [X20+16]
	235 Compare X0, 0
	236 JumpIfEqual {866}
	237 Move W8, [X0+24]
	238 Compare W8, 0
	239 JumpIfEqual {810}
	240 Move X8, 0x2175000
	241 Move X8, [X8+4088]
	242 Move X1, [X8]
	243 Add X8, X31, 104
	244 Move [X31+48], X31
	245 Move [X31+56], X8
	246 Add X8, X31, 368
	247 Call List`1<Object>.GetEnumerator, X0
	248 Move X22, 0x2175000
	249 Move X22, [X22+4056]
	250 Move V0, [X31+23]
	251 Move X8, [X31+384]
	252 Move X25, 0x2196000
	253 Move X23, 0x2175000
	254 Move X25, [X25+816]
	255 Move X23, [X23+4048]
	256 Move [X31+5], V0
	257 Move [X31+96], X8
	258 Move W26, 24
	259 Move X1, [X22]
	260 Add X0, X31, 80
	261 Call Enumerator<Object>.MoveNext, X0
	262 Move TEMP, X0
	263 And TEMP, TEMP, 1
	264 Compare TEMP, 1
	265 JumpIfNotEqual {318}
	266 Move X0, [X31+96]
	267 Compare X0, 0
	268 JumpIfEqual {853}
	269 Move X8, [X31+104]
	270 Move X20, [X8+24]
	271 Move X21, [X8+40]
	272 Move X1, X31
	273 Call Component.get_transform, X0
	274 Move X1, X0
	275 Compare X21, 0
	276 JumpIfEqual {854}
	277 Add X8, X31, 368
	278 Move X0, X21
	279 Call TransformPathCache.Create, X0, X1
	280 Move V0, [X31+23]
	281 Move X8, [X31+384]
	282 Move [X31+13], V0
	283 Move [X31+224], X8
	284 Compare X20, 0
	285 JumpIfEqual {851}
	286 Move V0, [X31+13]
	287 Move X8, [X31+224]
	288 Move X10, [X25]
	289 Move [X31+21], V0
	290 Move [X31+352], X8
	291 Move W9, [X20+28]
	292 Move X8, [X20+16]
	293 Add W9, W9, 1
	294 Move [X20+28], W9
	295 Compare X8, 0
	296 JumpIfEqual {852}
	297 NotImplemented "Instruction LDRSW not yet implemented."
	298 Move W11, [X8+24]
	299 NotImplemented "Instruction CMP not yet implemented."
	300 Add W10, W9, 1
	301 Move [X20+24], W10
	302 Move X10, [X31+352]
	303 Move V0, [X31+21]
	304 NotImplemented "Instruction NOP not yet implemented."
	305 NotImplemented "Instruction MADD not yet implemented."
	306 Move [X8+48], X10
	307 Move [X8+2], V0
	308 Move X8, [X10+32]
	309 Move V0, [X31+21]
	310 Move X9, [X31+352]
	311 Move X8, [X8+192]
	312 Move X2, [X8+112]
	313 Move [X31+23], V0
	314 Move [X31+384], X9
	315 Add X1, X31, 368
	316 Move X0, X20
	317 Call List`1<TransformPath>.AddWithResize, X0, X1
	318 Move X22, X31
	319 Move W20, 9
	320 Move X1, [X23]
	321 Add X0, X31, 80
	322 Call Enumerator<Object>.Dispose, X0
	323 Compare X22, 0
	324 JumpIfNotEqual {885}
	325 NotImplemented "Instruction CMP not yet implemented."
	326 Compare W20, 0
	327 JumpIfNotEqual {808}
	328 Move X8, [X31+104]
	329 Move X0, [X8+16]
	330 Compare X0, 0
	331 JumpIfEqual {887}
	332 Move X8, 0x2196000
	333 Move X8, [X8+880]
	334 Move X1, [X8]
	335 Call List`1<Object>.Reverse, X0
	336 Move X8, [X31+104]
	337 Move X0, [X8+24]
	338 Compare X0, 0
	339 JumpIfEqual {888}
	340 Move X8, 0x2196000
	341 Move X8, [X8+864]
	342 Move X1, [X8]
	343 Call List`1<TransformPath>.Reverse, X0
	344 Move X9, 0x2196000
	345 Move X8, [X31+104]
	346 Move X9, [X9+800]
	347 Move X2, [X8+32]
	348 Move X3, [X9]
	349 Move W1, 1
	350 Move X0, X19
	351 Call 0x21E71D0, X0, X1, X2
	352 Move X0, [X24]
	353 Move X8, [X31+104]
	354 Move W9, [X0+224]
	355 Move X19, [X8+32]
	356 Compare W9, 0
	357 JumpIfNotEqual {360}
	358 Call 0x1C17DFC
	359 Move X0, [X24]
	360 Move X8, [X0+184]
	361 Move X20, [X8+16]
	362 Compare X20, 0
	363 JumpIfNotEqual {385}
	364 Move W8, [X0+224]
	365 Compare W8, 0
	366 JumpIfNotEqual {369}
	367 Call 0x1C17DFC
	368 Move X0, [X24]
	369 Move X9, 0x2196000
	370 Move X8, [X0+184]
	371 Move X9, [X9+944]
	372 Move X21, [X8]
	373 Move X0, [X9]
	374 Call 0x1C17F10
	375 Move X8, 0x2196000
	376 Move X8, [X8+960]
	377 Move X20, X0
	378 Move X2, [X8]
	379 Move X1, X21
	380 Move X3, X31
	381 Call Predicate`1<Object>..ctor, X0, X1, X2
	382 Move X8, [X24]
	383 Move X8, [X8+184]
	384 Move [X8+16], X20
	385 Compare X19, 0
	386 JumpIfEqual {889}
	387 Move X8, 0x2196000
	388 Move X8, [X8+848]
	389 Move X2, [X8]
	390 Move X0, X19
	391 Move X1, X20
	392 Call List`1<Object>.RemoveAll, X0, X1
	393 Move X8, [X31+104]
	394 Move X0, [X8+16]
	395 Compare X0, 0
	396 JumpIfEqual {890}
	397 Move X8, [X8+32]
	398 Compare X8, 0
	399 JumpIfEqual {891}
	400 Move W9, [X0+24]
	401 Move W8, [X8+24]
	402 NotImplemented "Instruction CMP not yet implemented."
	403 Move [X31+20], W8
	404 Move [X31+24], X9
	405 Move [X31+32], X27
	406 Move [X31+40], X31
	407 Move X29, 0x217A000
	408 Move X25, 0x2196000
	409 Move X26, 0x2196000
	410 Move X29, [X29+3592]
	411 Move X25, [X25+888]
	412 Move X26, [X26+896]
	413 Move W19, W31
	414 Move W27, 1
	415 Move X2, [X29]
	416 Move W1, W19
	417 Call List`1<Object>.get_Item, X0, X1
	418 Move X20, X0
	419 Compare X0, 0
	420 JumpIfEqual {859}
	421 Move X0, X20
	422 Move X1, X31
	423 Call Component.get_gameObject, X0
	424 Compare X0, 0
	425 JumpIfEqual {860}
	426 Move X1, X31
	427 Call GameObject.get_activeInHierarchy, X0
	428 Move [X31+72], X31
	429 Move TEMP, X0
	430 And TEMP, TEMP, 1
	431 Compare TEMP, 1
	432 JumpIfEqual {463}
	433 Move X0, [X31+104]
	434 Move X8, [X0]
	435 Move X9, [X8+392]
	436 Move X3, [X8+400]
	437 Add X2, X31, 68
	438 Move X1, X20
	439 NotImplemented "Instruction BLR not yet implemented."
	440 Move TEMP, X0
	441 And TEMP, TEMP, 1
	442 Compare TEMP, 1
	443 JumpIfNotEqual {450}
	444 Move X8, 0x2170000
	445 Move W1, [X31+68]
	446 Move X8, [X8+1136]
	447 Move X2, [X8]
	448 Add X0, X31, 72
	449 Call Nullable`1<Int32>..ctor, X0, X1
	450 Move X8, 0x2196000
	451 Move X8, [X8+1000]
	452 Move X0, [X8]
	453 Move X1, X20
	454 Move X2, X31
	455 Call String.Format, X0, X1
	456 Move X8, 0x2196000
	457 Move X8, [X8+984]
	458 Move X1, [X8]
	459 Move X2, X31
	460 Call String.Concat, X0, X1
	461 Move X1, X31
	462 Call NetworkObjectBaker.Warn, X0, X1
	463 Move X8, [X31+104]
	464 Move X9, [X8+48]
	465 Compare X9, 0
	466 JumpIfEqual {857}
	467 Move W2, [X9+24]
	468 Move W10, [X9+28]
	469 Add W10, W10, 1
	470 NotImplemented "Instruction CMP not yet implemented."
	471 Move [X9+24], W31
	472 Move [X9+28], W10
	473 Move X0, [X9+16]
	474 Move W1, W31
	475 Move X3, X31
	476 Call Array.Clear, X0, X1, X2
	477 Move X8, [X31+104]
	478 Move X0, [X8+24]
	479 Compare X0, 0
	480 JumpIfEqual {858}
	481 Move X2, [X25]
	482 Add X8, X31, 208
	483 Move W1, W19
	484 Call List`1<TransformPath>.get_Item, X0, X1
	485 Move V0, [X31+13]
	486 Move X8, [X31+224]
	487 Move [X31+19], V0
	488 Move [X31+320], X8
	489 Add X0, X31, 304
	490 Call TransformPath.ToString, X0
	491 Move X9, [X31+104]
	492 Move X8, [X9+32]
	493 Compare X8, 0
	494 JumpIfEqual {856}
	495 Move W10, [X8+24]
	496 Subtract W21, W10, 1
	497 Move X2, [X26]
	498 Move X0, X8
	499 Move W1, W21
	500 Call List`1<Object>.get_Item, X0, X1
	501 Move X22, X0
	502 Compare X0, 0
	503 JumpIfEqual {843}
	504 Move X8, [X31+104]
	505 Move X23, [X8+40]
	506 Move X0, X22
	507 Move X1, X31
	508 Call Component.get_transform, X0
	509 Move X1, X0
	510 Compare X23, 0
	511 JumpIfEqual {842}
	512 Add X8, X31, 208
	513 Move X0, X23
	514 Call TransformPathCache.Create, X0, X1
	515 Move V0, [X31+13]
	516 Move X8, [X31+224]
	517 Move X9, [X31+104]
	518 Move [X31+17], V0
	519 Move [X31+288], X8
	520 Move X0, [X9+40]
	521 Compare X0, 0
	522 JumpIfEqual {841}
	523 NotImplemented "Instruction LDRH not yet implemented."
	524 NotImplemented "Instruction LDRH not yet implemented."
	525 NotImplemented "Instruction CMP not yet implemented."
	526 Add X1, X31, 304
	527 Add X2, X31, 272
	528 Call TransformPathCache.CompareToDepthUnchecked, X0, X1, X2, X3
	529 Compare W0, 0
	530 JumpIfEqual {563}
	531 Move X8, [X31+104]
	532 Move X0, [X8+40]
	533 Move V0, [X31+19]
	534 Move X8, [X31+320]
	535 Move V1, [X31+17]
	536 Move X9, [X31+288]
	537 Move [X31+13], V0
	538 Move [X31+224], X8
	539 Move [X31+11], V1
	540 Move [X31+192], X9
	541 Compare X0, 0
	542 JumpIfEqual {845}
	543 Move V0, [X31+13]
	544 Move X8, [X31+224]
	545 Move V1, [X31+11]
	546 Move X9, [X31+192]
	547 Move [X31+9], V0
	548 Move [X31+160], X8
	549 Move [X31+7], V1
	550 Move [X31+128], X9
	551 Add X1, X31, 144
	552 Add X2, X31, 112
	553 Call TransformPathCache.Compare, X0, X1, X2
	554 Move TEMP, X0
	555 And TEMP, TEMP, -2147483648
	556 Compare TEMP, -2147483648
	557 JumpIfNotEqual {655}
	558 Subtract W21, W21, 1
	559 Move X8, [X31+104]
	560 Move X8, [X8+32]
	561 Compare X8, 0
	562 JumpIfNotEqual {497}
	563 Move X8, 0x2179000
	564 Move X9, [X22]
	565 Move X8, [X8+1240]
	566 Move W11, [X9+304]
	567 Move X8, [X8]
	568 Move W10, [X8+304]
	569 NotImplemented "Instruction CMP not yet implemented."
	570 Move X9, [X9+200]
	571 Add X9, X9, X10
	572 NotImplemented "Instruction LDUR not yet implemented."
	573 NotImplemented "Instruction CMP not yet implemented."
	574 Move X8, [X31+104]
	575 Move X0, [X8+48]
	576 Compare X0, 0
	577 JumpIfEqual {865}
	578 Move X9, 0x2195000
	579 Move W10, [X0+28]
	580 Move X8, [X0+16]
	581 Move X9, [X9+808]
	582 Add W10, W10, 1
	583 Move X9, [X9]
	584 Move [X0+28], W10
	585 Compare X8, 0
	586 JumpIfEqual {864}
	587 NotImplemented "Instruction LDRSW not yet implemented."
	588 Move W11, [X8+24]
	589 NotImplemented "Instruction CMP not yet implemented."
	590 Add W9, W10, 1
	591 Add X8, X8, X10
	592 Move [X0+24], W9
	593 Move [X8+32], X22
	594 Move X8, [X9+32]
	595 Move X8, [X8+192]
	596 Move X2, [X8+112]
	597 Move X1, X22
	598 Call List`1<Object>.AddWithResize, X0, X1
	599 Move X8, [X31+104]
	600 Move X0, [X8+32]
	601 Compare X0, 0
	602 JumpIfEqual {855}
	603 Move X8, 0x2195000
	604 Move X8, [X8+856]
	605 Move X2, [X8]
	606 Move W1, W21
	607 Call List`1<Object>.RemoveAt, X0, X1
	608 Move W8, [X31+72]
	609 Compare W8, 0
	610 JumpIfEqual {558}
	611 Move X0, [X31+104]
	612 Move X8, [X0]
	613 Move X9, [X8+392]
	614 Move X3, [X8+400]
	615 Add X2, X31, 64
	616 Move X1, X22
	617 NotImplemented "Instruction BLR not yet implemented."
	618 Move TEMP, X0
	619 And TEMP, TEMP, 1
	620 Compare TEMP, 1
	621 JumpIfNotEqual {642}
	622 Move W8, [X31+72]
	623 Compare W8, 0
	624 JumpIfEqual {558}
	625 Move W8, [X31+76]
	626 Move W9, [X31+64]
	627 NotImplemented "Instruction CMP not yet implemented."
	628 Move X8, 0x2195000
	629 Move X8, [X8+992]
	630 Move X0, [X8]
	631 Move X1, X20
	632 Move X2, X22
	633 Move X3, X31
	634 Call String.Format, X0, X1, X2
	635 Move X8, 0x2195000
	636 Move X8, [X8+976]
	637 Move X1, [X8]
	638 Move X2, X31
	639 Call String.Concat, X0, X1
	640 Move X1, X22
	641 Call NetworkObjectBaker.Warn, X0, X1
	642 Move X8, 0x2195000
	643 Move X8, [X8+1000]
	644 Move X0, [X8]
	645 Move X1, X22
	646 Move X2, X31
	647 Call String.Format, X0, X1
	648 Move X8, 0x2195000
	649 Move X8, [X8+984]
	650 Move X1, [X8]
	651 Move X2, X31
	652 Call String.Concat, X0, X1
	653 Move X1, X31
	654 Call NetworkObjectBaker.Warn, X0, X1
	655 Move X9, [X31+104]
	656 Move X0, [X9+48]
	657 Compare X0, 0
	658 JumpIfEqual {861}
	659 Move X8, 0x2195000
	660 Move X8, [X8+872]
	661 Move X1, [X8]
	662 Call List`1<Object>.Reverse, X0
	663 Move X0, [X31+104]
	664 Move X8, 0x2195000
	665 Add X2, X20, 120
	666 Move X3, [X0+48]
	667 Move X8, [X8+904]
	668 Move X4, [X8]
	669 Move X1, X20
	670 Call 0x222BB1C, X0, X1, X2, X3
	671 Move X2, X20
	672 Move X9, 0x2195000
	673 Move W21, W0
	674 Add X2, X2, 92
	675 Move W8, [X2]
	676 Move X0, [X31+104]
	677 Move X9, [X9+912]
	678 And W10, W8, 0xFFFFFF00
	679 Or W10, W10, 1
	680 Move X4, [X9]
	681 And W9, W8, 255
	682 NotImplemented "Instruction CMP not yet implemented."
	683 NotImplemented "Instruction CSEL not yet implemented."
	684 Move X1, X20
	685 Call 0x222BAB4, X0, X1, X2, X3
	686 Move X8, [X31+104]
	687 Move X8, [X8+56]
	688 Compare X8, 0
	689 JumpIfEqual {862}
	690 Move W2, [X8+24]
	691 Move W9, [X8+28]
	692 Move W22, W0
	693 Add W9, W9, 1
	694 NotImplemented "Instruction CMP not yet implemented."
	695 Move [X8+24], W31
	696 Move [X8+28], W9
	697 Move X0, [X8+16]
	698 Move W1, W31
	699 Move X3, X31
	700 Call Array.Clear, X0, X1, X2
	701 NotImplemented "Instruction CMP not yet implemented."
	702 Move W28, W27
	703 Move X8, [X31+104]
	704 Move X0, [X8+24]
	705 Compare X0, 0
	706 JumpIfEqual {847}
	707 Move X24, [X8+40]
	708 Move X2, [X25]
	709 Subtract W23, W28, 2
	710 Add X8, X31, 208
	711 Move W1, W23
	712 Call List`1<TransformPath>.get_Item, X0, X1
	713 Move V0, [X31+13]
	714 Move X8, [X31+224]
	715 Move [X31+15], V0
	716 Move [X31+256], X8
	717 Compare X24, 0
	718 JumpIfEqual {846}
	719 NotImplemented "Instruction LDRH not yet implemented."
	720 NotImplemented "Instruction LDRH not yet implemented."
	721 NotImplemented "Instruction CMP not yet implemented."
	722 Add X1, X31, 304
	723 Add X2, X31, 240
	724 Move X0, X24
	725 Call TransformPathCache.CompareToDepthUnchecked, X0, X1, X2, X3
	726 Compare W0, 0
	727 JumpIfNotEqual {762}
	728 Move X8, [X31+104]
	729 Move X0, [X8+16]
	730 Compare X0, 0
	731 JumpIfEqual {850}
	732 Move X24, [X8+56]
	733 Move X2, [X29]
	734 Move W1, W23
	735 Call List`1<Object>.get_Item, X0, X1
	736 Move X1, X0
	737 Compare X24, 0
	738 JumpIfEqual {849}
	739 Move X9, 0x2173000
	740 Move W10, [X24+28]
	741 Move X8, [X24+16]
	742 Move X9, [X9+1440]
	743 Add W10, W10, 1
	744 Move X9, [X9]
	745 Move [X24+28], W10
	746 Compare X8, 0
	747 JumpIfEqual {848}
	748 NotImplemented "Instruction LDRSW not yet implemented."
	749 Move W11, [X8+24]
	750 NotImplemented "Instruction CMP not yet implemented."
	751 Add W9, W10, 1
	752 Add X8, X8, X10
	753 Move [X24+24], W9
	754 Move [X8+32], X1
	755 Move X8, [X9+32]
	756 Move X8, [X8+192]
	757 Move X2, [X8+112]
	758 Move X0, X24
	759 Call List`1<Object>.AddWithResize, X0, X1
	760 Subtract W28, W28, 1
	761 NotImplemented "Instruction CMP not yet implemented."
	762 Move X0, [X31+104]
	763 Move X8, 0x2195000
	764 Add X2, X20, 112
	765 Move X3, [X0+56]
	766 Move X8, [X8+920]
	767 Move X4, [X8]
	768 Move X1, X20
	769 Call 0x222BB1C, X0, X1, X2, X3
	770 Move W23, W0
	771 Move X0, [X31+104]
	772 Move X8, [X0]
	773 Move X9, [X8+408]
	774 Move X2, [X8+416]
	775 Move X1, X20
	776 NotImplemented "Instruction BLR not yet implemented."
	777 Move X8, 0x2195000
	778 Move W3, W0
	779 Move X0, [X31+104]
	780 Move X8, [X8+928]
	781 Add X2, X20, 64
	782 Move X4, [X8]
	783 Move X1, X20
	784 Call NetworkObjectBaker.Set, X0, X1, X2, X3
	785 Or W8, W21, W22
	786 Or W8, W8, W23
	787 Or W8, W8, W0
	788 Move TEMP, X8
	789 And TEMP, TEMP, 1
	790 Compare TEMP, 1
	791 JumpIfNotEqual {800}
	792 Move X0, [X31+104]
	793 Move X8, [X0]
	794 Move X9, [X8+376]
	795 Move X2, [X8+384]
	796 Move X1, X20
	797 NotImplemented "Instruction BLR not yet implemented."
	798 Move W8, 1
	799 Move [X31+40], X8
	800 Move X8, [X31+104]
	801 Move X0, [X8+16]
	802 Compare X0, 0
	803 JumpIfEqual {863}
	804 Move W8, [X0+24]
	805 Add W19, W19, 1
	806 Add W27, W27, 1
	807 NotImplemented "Instruction CMP not yet implemented."
	808 Add X0, X31, 48
	809 Call 0x199B2E8
	810 Move W20, W31
	811 Move W21, W31
	812 Move X19, X31
	813 Move [X31+40], X31
	814 Move X27, [X31+32]
	815 Move X8, [X31+40]
	816 Move X20, [X31+24]
	817 Move W21, [X31+20]
	818 And X19, X8, 1
	819 Add X0, X31, 48
	820 Call 0x199B2E8
	821 Move X8, [X27+40]
	822 Move X9, [X31+392]
	823 NotImplemented "Instruction CMP not yet implemented."
	824 NotImplemented "Instruction BFM not yet implemented."
	825 Move W1, W21
	826 Move X0, X19
	827 Move X20, [X31+480]
	828 Move X19, [X31+488]
	829 Move X22, [X31+464]
	830 Move X21, [X31+472]
	831 Move X24, [X31+448]
	832 Move X23, [X31+456]
	833 Move X26, [X31+432]
	834 Move X25, [X31+440]
	835 Move X28, [X31+416]
	836 Move X27, [X31+424]
	837 Move X29, [X31+400]
	838 Move X30, [X31+408]
	839 Add X31, X31, 496
	840 Return X0
	841 Call 0x1C17F20
	842 Call 0x1C17F20
	843 Call 0x1C17F20
	844 Call 0x1C17F20
	845 Call 0x1C17F20
	846 Call 0x1C17F20
	847 Call 0x1C17F20
	848 Call 0x1C17F20
	849 Call 0x1C17F20
	850 Call 0x1C17F20
	851 Call 0x1C17F20
	852 Call 0x1C17F20
	853 Call 0x1C17F20
	854 Call 0x1C17F20
	855 Call 0x1C17F20
	856 Call 0x1C17F20
	857 Call 0x1C17F20
	858 Call 0x1C17F20
	859 Call 0x1C17F20
	860 Call 0x1C17F20
	861 Call 0x1C17F20
	862 Call 0x1C17F20
	863 Call 0x1C17F20
	864 Call 0x1C17F20
	865 Call 0x1C17F20
	866 Call 0x1C17F20
	867 Move X0, 0x2173000
	868 Move X0, [X0+1320]
	869 Call 0x1C17D08
	870 Call 0x1C17F10
	871 Move X19, X0
	872 Move X0, 0x2195000
	873 Move X0, [X0+1008]
	874 Call 0x1C17D08
	875 Move X1, X0
	876 Move X0, X19
	877 Move X2, X31
	878 Call ArgumentNullException..ctor, X0, X1
	879 Move X0, 0x2195000
	880 Move X0, [X0+1016]
	881 Call 0x1C17D08
	882 Move X1, X0
	883 Move X0, X19
	884 Call 0x1C17DEC
	885 Move X0, X22
	886 Call 0x1C17F18
	887 Call 0x1C17F20
	888 Call 0x1C17F20
	889 Call 0x1C17F20
	890 Call 0x1C17F20
	891 Call 0x1C17F20
	892 Call 0x3EB2B20
	893 Move X20, X1
	894 Move X21, X0
	895 NotImplemented "Instruction CMP not yet implemented."
	896 Move X0, X21
	897 Call 0x3EB2AD0
	898 Move X22, [X0]
	899 Call 0x3EB2AE0
	900 Move W20, W31
	901 Move X22, X31
	902 Move X1, [X23]
	903 Add X0, X31, 80
	904 Call Enumerator<Object>.Dispose, X0
	905 Compare X22, 0
	906 JumpIfEqual {914}
	907 Move X0, X22
	908 Call 0x1C17F18
	909 Move X20, X1
	910 Move X21, X0
	911 Move X27, [X31+32]
	912 Move X20, X1
	913 Move X21, X0
	914 NotImplemented "Instruction CMP not yet implemented."
	915 Move X0, X21
	916 Call 0x3EB2AD0
	917 Move X8, [X0]
	918 Move [X31+48], X8
	919 Call 0x3EB2AE0
	920 Move X19, X31
	921 Move W20, W31
	922 Move W21, W31
	923 Move X21, X0
	924 Add X0, X31, 48
	925 Call 0x199B2E8
	926 Move X0, X21
	927 Call 0x1D2D690
	928 Call 0x1991590

Method: System.Boolean Set(UnityEngine.MonoBehaviour host, ref T field, T value)

Disassembly:
	0x0222BAB4 LDR X9, [X19 + 0x38]
	0x0222BAB8 MOV X27, X4
	0x0222BABC MOV X24, X3
	0x0222BAC0 MOV X25, X2
	0x0222BAC4 MOV X28, X1
	0x0222BAC8 MOV X26, X0
	0x0222BACC MOV X20, X8
	0x0222BAD0 CBNZ X9, 0x222BAF0
	0x0222BAD4 ADRP X0, 0x1EF1000
	0x0222BAD8 LDR X0, [X0 + 0x1A8]
	0x0222BADC BL 0x1C16CF4
	0x0222BAE0 LDR X8, [X19 + 0x38]
	0x0222BAE4 CBNZ X8, 0x222BAF0
	0x0222BAE8 MOV X0, X19
	0x0222BAEC BL 0x1C5C6E0
	0x0222BAF0 STP X31, X31, [X31 + 0x50]
	0x0222BAF4 CBZ X28, 0x222BD08
	0x0222BAF8 ADRP X8, 0x1EF1000
	0x0222BAFC LDR X8, [X8 + 0x1A8]
	0x0222BB00 LDR X29, [X8]
	0x0222BB04 LDR X8, [X29 + 0x38]
	0x0222BB08 CBNZ X8, 0x222BB14
	0x0222BB0C MOV X0, X29
	0x0222BB10 BL 0x1C5C6E0
	0x0222BB14 MOV X0, X28
	0x0222BB18 MOV X1, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X4+56]
	006 Move W19, W3
	007 Move X20, X2
	008 Compare X8, 0
	009 JumpIfNotEqual {14}
	010 Move X0, X4
	011 Move X21, X4
	012 Call 0x1C5D6E0
	013 Move X8, [X21+56]
	014 Move X0, [X8]
	015 Call 0x211B0D4
	016 Compare X0, 0
	017 JumpIfEqual {36}
	018 Move X8, [X0]
	019 Move W1, [X20]
	020 Move W2, W19
	021 Move X9, [X8+440]
	022 Move X3, [X8+448]
	023 NotImplemented "Instruction BLR not yet implemented."
	024 Move TEMP, X0
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {29}
	028 Move [X20], W19
	029 Move X20, [X31+16]
	030 Move X19, [X31+24]
	031 NotImplemented "Instruction ORN not yet implemented."
	032 And W0, W8, 1
	033 Move X30, [X31+32]
	034 Move X21, [X31+40]
	035 Return X0
	036 Call 0x1C17F20

Method: System.Boolean Set(UnityEngine.MonoBehaviour host, ref T[] field, System.Collections.Generic.List`1<T> value)

Disassembly:
	0x0222BB1C BL 0x3C32ECC
	0x0222BB20 CBZ X0, 0x222BD3C
	0x0222BB24 LDR X8, [X29 + 0x38]
	0x0222BB28 ADD X1, X31, 0x58
	0x0222BB2C LDR X2, [X8 + 0x8]
	0x0222BB30 BL 0x21E6600
	0x0222BB34 TBZ X0, 0x0, 0x222BD40
	0x0222BB38 STR X31, [X31 + 0x50]
	0x0222BB3C LDR W8, [X27 + 0x10]
	0x0222BB40 LDR X9, [X31 + 0xC0]
	0x0222BB44 LDR V0, [X27]
	0x0222BB48 LDR X1, [X31 + 0x58]
	0x0222BB4C STR W8, [X31 + 0x30]
	0x0222BB50 ADD X8, X31, 0x38
	0x0222BB54 ADD X4, X31, 0x20
	0x0222BB58 MOV X0, X26
	0x0222BB5C MOV X2, X25
	0x0222BB60 MOV X3, X24
	0x0222BB64 MOV X5, X23
	0x0222BB68 MOV X6, X22
	0x0222BB6C MOV W7, W21
	0x0222BB70 STR V0, [X31 + 0x2]
	0x0222BB74 STP X9, X31, [X31]
	0x0222BB78 BL 0x1EB00CC
	0x0222BB7C ADRP X23, 0x21AE000
	0x0222BB80 LDR X22, [X31 + 0x38]
	0x0222BB84 LDR V0, [X31 + 0x40]
	0x0222BB88 LDRB W8, [X23 + 0x4B4]
	0x0222BB8C LDR X21, [X31 + 0x48]
	0x0222BB90 CBNZ W8, 0x222BBB0
	0x0222BB94 ADRP X0, 0x1ECB000
	0x0222BB98 LDR X0, [X0 + 0xBA0]
	0x0222BB9C STR V0, [X31 + 0x1]
	0x0222BBA0 BL 0x1C16CF4
	0x0222BBA4 LDR V0, [X31 + 0x1]
	0x0222BBA8 MOVZ W8, 0x1
	0x0222BBAC STRB W8, [X23 + 0x4B4]
	0x0222BBB0 FMOV W23, S0
	0x0222BBB4 MOV W8, W23

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X4+56]
	006 Move X21, X4
	007 Move X20, X3
	008 Move X19, X2
	009 Compare X8, 0
	010 JumpIfNotEqual {14}
	011 Move X0, X21
	012 Call 0x1C5D6E0
	013 Move X8, [X21+56]
	014 Move X0, [X8]
	015 Call 0x211C0E8
	016 Move X8, [X19]
	017 Compare X8, 0
	018 JumpIfEqual {35}
	019 Compare X20, 0
	020 JumpIfEqual {48}
	021 Move W9, [X20+24]
	022 Move W10, [X8+24]
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Move X9, [X21+56]
	025 Move X2, X0
	026 Move X0, X8
	027 Move X1, X20
	028 Move X3, [X9+48]
	029 Call Enumerable.SequenceEqual, X0, X1, X2
	030 Move TEMP, X0
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfNotEqual {37}
	034 Move W0, W31
	035 Compare X20, 0
	036 JumpIfEqual {48}
	037 Move X8, [X21+56]
	038 Move X0, X20
	039 Move X1, [X8+72]
	040 Call List`1<Object>.ToArray, X0
	041 Move [X19], X0
	042 Move W0, 1
	043 Move X20, [X31+16]
	044 Move X19, [X31+24]
	045 Move X30, [X31+32]
	046 Move X21, [X31+40]
	047 Return X0
	048 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x01F86C80 SCVTF S1, W0
	0x01F86C84 MOV X0, X31
	0x01F86C88 FMUL S8, S1, S0
	0x01F86C8C BL 0x3C0E0B0
	0x01F86C90 MOV W20, W0
	0x01F86C94 MOV X0, X31
	0x01F86C98 BL 0x3C0E0D8
	0x01F86C9C LDR X8, [X21]
	0x01F86CA0 MOV W21, W0
	0x01F86CA4 LDR W9, [X8 + 0xE0]
	0x01F86CA8 CBNZ W9, 0x1F86CB4
	0x01F86CAC MOV X0, X8
	0x01F86CB0 BL 0x1C16DFC
	0x01F86CB4 ADRP X8, 0xFFFFFFFFFEB64000
	0x01F86CB8 ADRP X9, 0xFFFFFFFFFEB64000
	0x01F86CBC LDR V0, [X8 + 0xC4]
	0x01F86CC0 LDR V1, [X9 + 0x90]
	0x01F86CC4 ADRP X26, 0x2194000
	0x01F86CC8 ADRP X27, 0x2194000
	0x01F86CCC LDR X26, [X26 + 0x4C8]
	0x01F86CD0 LDR X27, [X27 + 0x4B8]
	0x01F86CD4 SCVTF S2, W20
	0x01F86CD8 SCVTF S3, W21
	0x01F86CDC FMUL S0, S2, S0
	0x01F86CE0 FMUL S1, S3, S1
	0x01F86CE4 MOV X0, X31
	0x01F86CE8 BL 0x337EEBC
	0x01F86CEC MOV V9.16B, V0.16B
	0x01F86CF0 FMOV S0, 0.25
	0x01F86CF4 MOVZ W8, 0x7F800000
	0x01F86CF8 FMOV S1, 0.125
	0x01F86CFC FMUL S0, S8, S0
	0x01F86D00 FMOV S2, W8
	0x01F86D04 MOVZ W9, 0x80000000
	0x01F86D08 FMUL S1, S8, S1
	0x01F86D0C FCVTZS W8, S0
	0x01F86D10 FCMP S0, S2
	0x01F86D14 FCVTZS W10, S1
	0x01F86D18 CSEL W20, W9, W8, EQ
	0x01F86D1C FCMP S1, S2
	0x01F86D20 MOV X0, X31
	0x01F86D24 CSEL W21, W9, W10, EQ
	0x01F86D28 BL 0x3C0E0B0
	0x01F86D2C SDIV W8, W22, W23
	0x01F86D30 CMP W8, 0x1
	0x01F86D34 MOV W22, W0
	0x01F86D38 B.LE 0x1F86D58
	0x01F86D3C ADRP X8, 0xFFFFFFFFFEB64000
	0x01F86D40 LDR V0, [X8 + 0x2C8]
	0x01F86D44 UBFM W8, W20, 0x1F, 0x1E
	0x01F86D48 SCVTF S1, W8
	0x01F86D4C FSUB S1, S9, S1
	0x01F86D50 FMUL S0, S1, S0
	0x01F86D54 B 0x1F86D64
	0x01F86D58 ADRP X8, 0xFFFFFFFFFEB64000
	0x01F86D5C LDR V0, [X8 + 0x30C]
	0x01F86D60 FMUL S0, S8, S0
	0x01F86D64 LDR X0, [X26]
	0x01F86D68 MOVZ W9, 0x7F800000
	0x01F86D6C FMOV S1, W9
	0x01F86D70 FCVTZS W8, S0
	0x01F86D74 FCMP S0, S1
	0x01F86D78 MOVZ W9, 0x80000000
	0x01F86D7C CSEL W23, W9, W8, EQ
	0x01F86D80 BL 0x1C16F10
	0x01F86D84 MOV W1, W31
	0x01F86D88 MOV W2, W31
	0x01F86D8C MOV W3, W21
	0x01F86D90 MOV W4, W21
	0x01F86D94 MOV X5, X31
	0x01F86D98 MOV X24, X0
	0x01F86D9C BL 0x3C0C3DC
	0x01F86DA0 LDR X8, [X27]
	0x01F86DA4 LDR X8, [X8 + 0xB8]
	0x01F86DA8 LDR X0, [X8]
	0x01F86DAC CBZ X0, 0x1F86FA4
	0x01F86DB0 MOV X1, X31
	0x01F86DB4 BL 0x3C6D5C4
	0x01F86DB8 CBZ X0, 0x1F86FA4
	0x01F86DBC MOV W1, W23
	0x01F86DC0 MOV X2, X31
	0x01F86DC4 BL 0x3C73704
	0x01F86DC8 LDR X8, [X27]
	0x01F86DCC LDR X8, [X8 + 0xB8]
	0x01F86DD0 LDR X0, [X8]
	0x01F86DD4 CBZ X0, 0x1F86FA4
	0x01F86DD8 MOV X1, X31
	0x01F86DDC BL 0x3C6D5C4
	0x01F86DE0 CBZ X0, 0x1F86FA4
	0x01F86DE4 MOV X1, X24
	0x01F86DE8 MOV X2, X31
	0x01F86DEC BL 0x3C74700
	0x01F86DF0 LDR X8, [X27]
	0x01F86DF4 LDR X8, [X8 + 0xB8]
	0x01F86DF8 LDR X0, [X8]
	0x01F86DFC CBZ X0, 0x1F86FA4
	0x01F86E00 MOV X1, X31
	0x01F86E04 BL 0x3C67938
	0x01F86E08 CBZ X0, 0x1F86FA4
	0x01F86E0C MOV W1, W23
	0x01F86E10 MOV X2, X31

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X20, 0x2454000
	014 Move X22, 0x2173000
	015 Move X21, 0x2173000
	016 Move X29, 0x2195000
	017 Move X28, 0x2195000
	018 Move X27, 0x2178000
	019 Move X26, 0x2178000
	020 Move X25, 0x2195000
	021 Move X24, 0x2195000
	022 Move X23, 0x2195000
	023 Move X22, [X22+1408]
	024 Move X21, [X21+1416]
	025 Move X29, [X29+1096]
	026 Move X28, [X28+1104]
	027 Move W8, [X20+1725]
	028 Move X27, [X27+2728]
	029 Move X26, [X26+2720]
	030 Move X25, [X25+1112]
	031 Move X24, [X24+1120]
	032 Move X23, [X23+1128]
	033 Move X19, X0
	034 Move TEMP, X8
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfEqual {67}
	038 Move X0, 0x2195000
	039 Move X0, [X0+1104]
	040 Call 0x1C17CF4
	041 Move X0, 0x2195000
	042 Move X0, [X0+1128]
	043 Call 0x1C17CF4
	044 Move X0, 0x2178000
	045 Move X0, [X0+2720]
	046 Call 0x1C17CF4
	047 Move X0, 0x2173000
	048 Move X0, [X0+1416]
	049 Call 0x1C17CF4
	050 Move X0, 0x2173000
	051 Move X0, [X0+1408]
	052 Call 0x1C17CF4
	053 Move X0, 0x2195000
	054 Move X0, [X0+1120]
	055 Call 0x1C17CF4
	056 Move X0, 0x2178000
	057 Move X0, [X0+2728]
	058 Call 0x1C17CF4
	059 Move X0, 0x2195000
	060 Move X0, [X0+1096]
	061 Call 0x1C17CF4
	062 Move X0, 0x2195000
	063 Move X0, [X0+1112]
	064 Call 0x1C17CF4
	065 Move W8, 1
	066 Move [X20+1725], W8
	067 Move X0, [X22]
	068 Call 0x1C17F10
	069 Move X1, [X21]
	070 Move X20, X0
	071 Call List`1<Object>..ctor, X0
	072 Move [X19+16], X20
	073 Move X0, [X29]
	074 Call 0x1C17F10
	075 Move X1, [X28]
	076 Move X20, X0
	077 Call List`1<TransformPath>..ctor, X0
	078 Move [X19+24], X20
	079 Move X0, [X27]
	080 Call 0x1C17F10
	081 Move X1, [X26]
	082 Move X20, X0
	083 Call List`1<Object>..ctor, X0
	084 Move [X19+32], X20
	085 Move X0, [X25]
	086 Call 0x1C17F10
	087 Move X20, X0
	088 Call TransformPathCache..ctor, X0
	089 Move [X19+40], X20
	090 Move X0, [X24]
	091 Call 0x1C17F10
	092 Move X1, [X23]
	093 Move X20, X0
	094 Call List`1<Object>..ctor, X0
	095 Move [X19+48], X20
	096 Move X0, [X22]
	097 Call 0x1C17F10
	098 Move X1, [X21]
	099 Move X20, X0
	100 Call List`1<Object>..ctor, X0
	101 Move [X19+56], X20
	102 Move X0, X19
	103 Move X20, [X31+80]
	104 Move X19, [X31+88]
	105 Move X22, [X31+64]
	106 Move X21, [X31+72]
	107 Move X24, [X31+48]
	108 Move X23, [X31+56]
	109 Move X26, [X31+32]
	110 Move X25, [X31+40]
	111 Move X28, [X31+16]
	112 Move X27, [X31+24]
	113 Move X1, X31
	114 Move X29, [X31+96]
	115 Move X30, [X31+104]
	116 Call Object..ctor, X0
	117 Return 

