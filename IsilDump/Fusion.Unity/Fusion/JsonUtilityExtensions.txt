Type: Fusion.JsonUtilityExtensions

Method: System.String EnquoteIntegers(System.String json, System.Int32 minDigits = 8)

Disassembly:
	0x01F83BD4 LDR X8, [X8 + 0x5C8]
	0x01F83BD8 LDR X9, [X9 + 0x2C0]
	0x01F83BDC MOVZ W1, 0x1
	0x01F83BE0 MOV X0, X19
	0x01F83BE4 LDR X2, [X8]
	0x01F83BE8 LDR X3, [X9]
	0x01F83BEC BL 0x1C170BC
	0x01F83BF0 MOV X19, X0
	0x01F83BF4 ADRP X8, 0x2170000
	0x01F83BF8 LDR X8, [X8 + 0x6C0]
	0x01F83BFC LDR X0, [X8]
	0x01F83C00 ADRP X8, 0x2197000
	0x01F83C04 LDR X8, [X8 + 0x2D8]
	0x01F83C08 LDR W9, [X0 + 0xE0]
	0x01F83C0C LDR X21, [X8]
	0x01F83C10 CBNZ W9, 0x1F83C18
	0x01F83C14 BL 0x1C16DFC
	0x01F83C18 MOV X0, X21
	0x01F83C1C MOV X1, X31
	0x01F83C20 BL 0x338C698
	0x01F83C24 CBZ X19, 0x1F83C9C
	0x01F83C28 LDR X8, [X19]
	0x01F83C2C MOV X1, X0
	0x01F83C30 MOV X0, X19
	0x01F83C34 LDR X9, [X8 + 0x298]
	0x01F83C38 LDR X2, [X8 + 0x2A0]
	0x01F83C3C BLR X9
	0x01F83C40 TBZ X0, 0x0, 0x1F83C7C
	0x01F83C44 MOV X0, X19
	0x01F83C48 MOV X1, X31
	0x01F83C4C BL 0x3C36DE8
	0x01F83C50 MOV X19, X0
	0x01F83C54 MOV X0, X20
	0x01F83C58 MOV X1, X19
	0x01F83C5C MOV X2, X31
	0x01F83C60 BL 0x3C86F84
	0x01F83C64 MOV X0, X19
	0x01F83C68 LDP X20, X19, [X31 + 0x30]
	0x01F83C6C LDP X22, X21, [X31 + 0x20]
	0x01F83C70 LDP X30, X23, [X31 + 0x10]
	0x01F83C74 ADD X31, X31, 0x40
	0x01F83C78 RET
	0x01F83C7C MOV X0, X20
	0x01F83C80 MOV X1, X19
	0x01F83C84 LDP X20, X19, [X31 + 0x30]
	0x01F83C88 LDP X22, X21, [X31 + 0x20]
	0x01F83C8C LDP X30, X23, [X31 + 0x10]
	0x01F83C90 MOV X2, X31
	0x01F83C94 ADD X31, X31, 0x40
	0x01F83C98 B 0x3C86D98
	0x01F83C9C BL 0x1C16F20
	0x01F83CA0 STR W22, [X31 + 0x8]
	0x01F83CA4 ADRP X0, 0x2170000
	0x01F83CA8 LDR X0, [X0 + 0x758]
	0x01F83CAC BL 0x1C16D08
	0x01F83CB0 ADD X1, X31, 0x8
	0x01F83CB4 BL 0x1C16E04

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0x2457000
	009 Move X23, 0x2171000
	010 Move X22, 0x2198000
	011 Move X21, 0x2179000
	012 Move W8, [X24+1712]
	013 Move X23, [X23+1880]
	014 Move X22, [X22+592]
	015 Move X21, [X21+1536]
	016 Move W20, W1
	017 Move X19, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {36}
	022 Move X0, 0x2171000
	023 Move X0, [X0+1880]
	024 Call 0x1C17CF4
	025 Move X0, 0x2179000
	026 Move X0, [X0+1536]
	027 Call 0x1C17CF4
	028 Move X0, 0x2198000
	029 Move X0, [X0+600]
	030 Call 0x1C17CF4
	031 Move X0, 0x2198000
	032 Move X0, [X0+592]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X24+1712], W8
	036 Move X0, [X23]
	037 Move X23, 0x2198000
	038 Move X23, [X23+600]
	039 Add X1, X31, 12
	040 Move [X31+12], W20
	041 Call 0x1C17E04
	042 Move X8, [X22]
	043 Move X1, X0
	044 Move X2, X31
	045 Move X0, X8
	046 Call String.Format, X0, X1
	047 Move X8, [X21]
	048 Move X20, X0
	049 Move W9, [X8+224]
	050 Compare W9, 0
	051 JumpIfNotEqual {54}
	052 Move X0, X8
	053 Call 0x1C17DFC
	054 Move X2, [X23]
	055 Move W3, 8
	056 Move X0, X19
	057 Move X1, X20
	058 Move X4, X31
	059 Call Regex.Replace, X0, X1, X2, X3
	060 Move X20, [X31+48]
	061 Move X19, [X31+56]
	062 Move X22, [X31+32]
	063 Move X21, [X31+40]
	064 Move X24, [X31+16]
	065 Move X23, [X31+24]
	066 Move X30, [X31+64]
	067 Return X0

Method: System.String ToJsonWithTypeAnnotation(System.Object obj, Fusion.JsonUtilityExtensions/InstanceIDHandlerDelegate instanceIDHandler = null)

Disassembly:
	0x01F83CB8 MOV X19, X0
	0x01F83CBC ADRP X0, 0x2197000
	0x01F83CC0 LDR X0, [X0 + 0x2E8]
	0x01F83CC4 B 0x1F83CEC
	0x01F83CC8 STR W1, [X31 + 0xC]
	0x01F83CCC ADRP X0, 0x2170000
	0x01F83CD0 LDR X0, [X0 + 0x758]
	0x01F83CD4 BL 0x1C16D08
	0x01F83CD8 ADD X1, X31, 0xC
	0x01F83CDC BL 0x1C16E04
	0x01F83CE0 MOV X19, X0
	0x01F83CE4 ADRP X0, 0x2197000
	0x01F83CE8 LDR X0, [X0 + 0x2F0]
	0x01F83CEC BL 0x1C16D08
	0x01F83CF0 MOV X1, X19
	0x01F83CF4 MOV X2, X31
	0x01F83CF8 BL 0x321EFD0
	0x01F83CFC MOV X19, X0
	0x01F83D00 ADRP X0, 0x2170000
	0x01F83D04 LDR X0, [X0 + 0x5B0]
	0x01F83D08 BL 0x1C16D08
	0x01F83D0C BL 0x1C16F10
	0x01F83D10 MOV X1, X19
	0x01F83D14 MOV X2, X31
	0x01F83D18 MOV X20, X0
	0x01F83D1C BL 0x337DF1C
	0x01F83D20 ADRP X0, 0x2197000
	0x01F83D24 LDR X0, [X0 + 0x2C0]
	0x01F83D28 BL 0x1C16D08
	0x01F83D2C MOV X1, X0
	0x01F83D30 MOV X0, X20
	0x01F83D34 BL 0x1C16DEC
	0x01F83D38 SUB X31, X31, 0x50
	0x01F83D3C STR X30, [X31 + 0x10]
	0x01F83D40 STP X24, X23, [X31 + 0x20]
	0x01F83D44 STP X22, X21, [X31 + 0x30]
	0x01F83D48 STP X20, X19, [X31 + 0x40]
	0x01F83D4C ADRP X22, 0x2456000
	0x01F83D50 LDRB W8, [X22 + 0x6B4]
	0x01F83D54 MOV X19, X2
	0x01F83D58 MOV X21, X1
	0x01F83D5C MOV X20, X0
	0x01F83D60 TBNZ X8, 0x0, 0x1F83D9C
	0x01F83D64 ADRP X0, 0x2177000
	0x01F83D68 LDR X0, [X0 + 0x2F8]
	0x01F83D6C BL 0x1C16CF4
	0x01F83D70 ADRP X0, 0x2197000
	0x01F83D74 LDR X0, [X0 + 0x298]
	0x01F83D78 BL 0x1C16CF4
	0x01F83D7C ADRP X0, 0x2178000
	0x01F83D80 LDR X0, [X0 + 0xF30]
	0x01F83D84 BL 0x1C16CF4
	0x01F83D88 ADRP X0, 0x2175000
	0x01F83D8C LDR X0, [X0 + 0x740]
	0x01F83D90 BL 0x1C16CF4
	0x01F83D94 MOVZ W8, 0x1
	0x01F83D98 STRB W8, [X22 + 0x6B4]
	0x01F83D9C ADD X1, X31, 0x18
	0x01F83DA0 MOV W0, W31
	0x01F83DA4 STR X20, [X31 + 0x18]
	0x01F83DA8 BL 0x1F8405C
	0x01F83DAC STR W0, [X31 + 0xC]
	0x01F83DB0 CBZ X20, 0x1F83FA0
	0x01F83DB4 MOV W23, W0
	0x01F83DB8 MOV X0, X20
	0x01F83DBC MOV W1, W23
	0x01F83DC0 MOV X2, X31
	0x01F83DC4 BL 0x3222A1C
	0x01F83DC8 AND W8, W0, 0xFFFF
	0x01F83DCC CMP W8, 0x5B
	0x01F83DD0 B.NE 0x1F83F6C
	0x01F83DD4 MOV X22, X19
	0x01F83DD8 CBNZ X19, 0x1F83E00
	0x01F83DDC ADRP X8, 0x2175000
	0x01F83DE0 LDR X8, [X8 + 0x740]
	0x01F83DE4 LDR X0, [X8]
	0x01F83DE8 BL 0x1C16F10
	0x01F83DEC ADRP X8, 0x2178000
	0x01F83DF0 LDR X8, [X8 + 0xF30]
	0x01F83DF4 MOV X22, X0
	0x01F83DF8 LDR X1, [X8]
	0x01F83DFC BL 0x301B7C4
	0x01F83E00 ADD W0, W23, 0x1
	0x01F83E04 ADD X1, X31, 0x18
	0x01F83E08 BL 0x1F8405C
	0x01F83E0C MOV W23, W0
	0x01F83E10 STR W0, [X31 + 0xC]
	0x01F83E14 MOV X0, X20
	0x01F83E18 MOV W1, W23
	0x01F83E1C MOV X2, X31
	0x01F83E20 BL 0x3222A1C
	0x01F83E24 AND W8, W0, 0xFFFF
	0x01F83E28 CMP W8, 0x5D
	0x01F83E2C B.EQ 0x1F83F18
	0x01F83E30 ADRP X24, 0x2177000
	0x01F83E34 LDR X24, [X24 + 0x2F8]
	0x01F83E38 MOV W8, W31
	0x01F83E3C TBZ X8, 0x0, 0x1F83E6C
	0x01F83E40 MOV X0, X20
	0x01F83E44 MOV W1, W23
	0x01F83E48 MOV X2, X31
	0x01F83E4C BL 0x3222A1C
	0x01F83E50 AND W8, W0, 0xFFFF
	0x01F83E54 CMP W8, 0x2C
	0x01F83E58 B.NE 0x1F83FA4
	0x01F83E5C ADD W0, W23, 0x1
	0x01F83E60 ADD X1, X31, 0x18
	0x01F83E64 BL 0x1F8405C
	0x01F83E68 STR W0, [X31 + 0xC]
	0x01F83E6C ADD X0, X31, 0xC
	0x01F83E70 MOV X1, X20
	0x01F83E74 MOV X2, X21
	0x01F83E78 BL 0x1F83944
	0x01F83E7C CBZ X22, 0x1F83FA0
	0x01F83E80 LDR X8, [X22]
	0x01F83E84 LDR X1, [X24]
	0x01F83E88 MOV X23, X0
	0x01F83E8C LDRH W9, [X8 + 0x12E]
	0x01F83E90 CBZ X9, 0x1F83EB4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x2457000
	008 Move X21, 0x2171000
	009 Move X19, 0x2198000
	010 Move W8, [X23+1713]
	011 Move X21, [X21+2288]
	012 Move X19, [X19+608]
	013 Move X20, X1
	014 Move X22, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {30}
	019 Move X0, 0x2171000
	020 Move X0, [X0+3584]
	021 Call 0x1C17CF4
	022 Move X0, 0x2171000
	023 Move X0, [X0+2288]
	024 Call 0x1C17CF4
	025 Move X0, 0x2198000
	026 Move X0, [X0+608]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X23+1713], W8
	030 Move X0, [X21]
	031 Move X23, 0x2171000
	032 Move X23, [X23+3584]
	033 Call 0x1C17F10
	034 Move W1, 1000
	035 Move X2, X31
	036 Move X21, X0
	037 Call StringBuilder..ctor, X0, X1
	038 Move X0, [X19]
	039 Call 0x1C17F10
	040 Move X1, X21
	041 Move X2, X31
	042 Move X19, X0
	043 Call StringWriter..ctor, X0, X1
	044 Move X0, X22
	045 Move X1, X19
	046 Move X2, X31
	047 Move X3, X31
	048 Move X4, X20
	049 Call JsonUtilityExtensions.ToJsonWithTypeAnnotation, X0, X1, X2, X3, X4
	050 Move X20, X31
	051 Compare X19, 0
	052 JumpIfEqual {74}
	053 Move X8, [X19]
	054 Move X1, [X23]
	055 NotImplemented "Instruction LDRH not yet implemented."
	056 Compare X9, 0
	057 JumpIfEqual {64}
	058 Move X10, [X8+176]
	059 Add X10, X10, 8
	060 NotImplemented "Instruction LDUR not yet implemented."
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Subtract X9, X9, 1
	063 Add X10, X10, 16
	064 Move X0, X19
	065 Move W2, W31
	066 Call 0x1C5D788
	067 NotImplemented "Instruction LDRSW not yet implemented."
	068 Add X8, X8, X9
	069 Add X0, X8, 312
	070 Move X8, [X0]
	071 Move X1, [X0+8]
	072 Move X0, X19
	073 NotImplemented "Instruction BLR not yet implemented."
	074 Compare X20, 0
	075 JumpIfNotEqual {89}
	076 Compare X21, 0
	077 JumpIfEqual {91}
	078 Move X8, [X21]
	079 Move X0, X21
	080 Move X20, [X31+32]
	081 Move X19, [X31+40]
	082 Move X22, [X31+16]
	083 Move X21, [X31+24]
	084 Move X2, [X8+360]
	085 Move X1, [X8+368]
	086 Move X30, [X31+48]
	087 Move X23, [X31+56]
	088 CallNoReturn X2
	089 Move X0, X20
	090 Call 0x1C17F18
	091 Call 0x1C17F20
	092 NotImplemented "Instruction CMP not yet implemented."
	093 Move X22, X0
	094 Move X0, X22
	095 Call 0x3EB2AD0
	096 Move X20, [X0]
	097 Call 0x3EB2AE0
	098 Move X20, X31
	099 Move X22, X0
	100 Compare X19, 0
	101 JumpIfEqual {123}
	102 Move X8, [X19]
	103 Move X1, [X23]
	104 NotImplemented "Instruction LDRH not yet implemented."
	105 Compare X9, 0
	106 JumpIfEqual {113}
	107 Move X10, [X8+176]
	108 Add X10, X10, 8
	109 NotImplemented "Instruction LDUR not yet implemented."
	110 NotImplemented "Instruction CMP not yet implemented."
	111 Subtract X9, X9, 1
	112 Add X10, X10, 16
	113 Move X0, X19
	114 Move W2, W31
	115 Call 0x1C5D788
	116 NotImplemented "Instruction LDRSW not yet implemented."
	117 Add X8, X8, X9
	118 Add X0, X8, 312
	119 Move X8, [X0]
	120 Move X1, [X0+8]
	121 Move X0, X19
	122 NotImplemented "Instruction BLR not yet implemented."
	123 Compare X20, 0
	124 JumpIfNotEqual {127}
	125 Move X0, X22
	126 Call 0x1D2D690
	127 Move X0, X20
	128 Call 0x1C17F18
	129 Call 0x1991590

Method: System.Void ToJsonWithTypeAnnotation(System.Object obj, System.IO.TextWriter writer, System.Nullable`1<System.Int32> integerEnquoteMinDigits = null, Fusion.JsonUtilityExtensions/TypeSerializerDelegate typeSerializer = null, Fusion.JsonUtilityExtensions/InstanceIDHandlerDelegate instanceIDHandler = null)

Disassembly:
	0x01F83E94 LDR X10, [X8 + 0xB0]
	0x01F83E98 ADD X10, X10, 0x8
	0x01F83E9C LDUR X11, [X10 - 0x8]
	0x01F83EA0 CMP X11, X1
	0x01F83EA4 B.EQ 0x1F83EC4
	0x01F83EA8 SUBS X9, X9, 0x1
	0x01F83EAC ADD X10, X10, 0x10
	0x01F83EB0 B.NE 0x1F83E9C
	0x01F83EB4 MOVZ W2, 0x2
	0x01F83EB8 MOV X0, X22
	0x01F83EBC BL 0x1C5C788
	0x01F83EC0 B 0x1F83ED4
	0x01F83EC4 LDR W9, [X10]
	0x01F83EC8 ADD W9, W9, 0x2
	0x01F83ECC ADD X8, X8, W9, 0x4, SXTW
	0x01F83ED0 ADD X0, X8, 0x138
	0x01F83ED4 LDP X8, X2, [X0]
	0x01F83ED8 MOV X0, X22
	0x01F83EDC MOV X1, X23
	0x01F83EE0 BLR X8
	0x01F83EE4 LDR W0, [X31 + 0xC]
	0x01F83EE8 ADD X1, X31, 0x18
	0x01F83EEC BL 0x1F8405C
	0x01F83EF0 MOV W23, W0
	0x01F83EF4 STR W0, [X31 + 0xC]
	0x01F83EF8 MOV X0, X20
	0x01F83EFC MOV W1, W23
	0x01F83F00 MOV X2, X31
	0x01F83F04 BL 0x3222A1C
	0x01F83F08 AND W8, W0, 0xFFFF
	0x01F83F0C CMP W8, 0x5D
	0x01F83F10 MOVZ W8, 0x1
	0x01F83F14 B.NE 0x1F83E3C
	0x01F83F18 CBNZ X19, 0x1F83F84
	0x01F83F1C CBZ X22, 0x1F83FA0
	0x01F83F20 ADRP X9, 0x2175000
	0x01F83F24 LDR X9, [X9 + 0x740]
	0x01F83F28 LDR X8, [X22]
	0x01F83F2C LDR X1, [X9]
	0x01F83F30 LDRB W10, [X8 + 0x130]
	0x01F83F34 LDRB W9, [X1 + 0x130]
	0x01F83F38 CMP W10, W9
	0x01F83F3C B.CC 0x1F84054
	0x01F83F40 LDR X8, [X8 + 0xC8]
	0x01F83F44 ADD X8, X8, X9, 0x3, LSL
	0x01F83F48 LDUR X8, [X8 - 0x8]
	0x01F83F4C CMP X8, X1
	0x01F83F50 B.NE 0x1F84054
	0x01F83F54 ADRP X8, 0x2197000
	0x01F83F58 LDR X8, [X8 + 0x298]
	0x01F83F5C MOV X0, X22
	0x01F83F60 LDR X1, [X8]
	0x01F83F64 BL 0x301DDC4
	0x01F83F68 B 0x1F83F80
	0x01F83F6C CBNZ X19, 0x1F84014
	0x01F83F70 ADD X0, X31, 0xC
	0x01F83F74 MOV X1, X20
	0x01F83F78 MOV X2, X21
	0x01F83F7C BL 0x1F83944
	0x01F83F80 MOV X19, X0
	0x01F83F84 MOV X0, X19
	0x01F83F88 LDP X20, X19, [X31 + 0x40]
	0x01F83F8C LDP X22, X21, [X31 + 0x30]
	0x01F83F90 LDP X24, X23, [X31 + 0x20]
	0x01F83F94 LDR X30, [X31 + 0x10]
	0x01F83F98 ADD X31, X31, 0x50
	0x01F83F9C RET
	0x01F83FA0 BL 0x1C16F20
	0x01F83FA4 STR W23, [X31 + 0x8]
	0x01F83FA8 ADRP X0, 0x2170000
	0x01F83FAC LDR X0, [X0 + 0x758]
	0x01F83FB0 BL 0x1C16D08
	0x01F83FB4 ADD X1, X31, 0x8
	0x01F83FB8 BL 0x1C16E04
	0x01F83FBC MOV X19, X0
	0x01F83FC0 ADRP X0, 0x2197000
	0x01F83FC4 LDR X0, [X0 + 0x2A0]
	0x01F83FC8 BL 0x1C16D08
	0x01F83FCC MOV X1, X19
	0x01F83FD0 MOV X2, X31
	0x01F83FD4 BL 0x321EFD0
	0x01F83FD8 MOV X19, X0
	0x01F83FDC ADRP X0, 0x2170000
	0x01F83FE0 LDR X0, [X0 + 0x5B0]
	0x01F83FE4 BL 0x1C16D08
	0x01F83FE8 BL 0x1C16F10
	0x01F83FEC MOV X1, X19
	0x01F83FF0 MOV X2, X31
	0x01F83FF4 MOV X20, X0
	0x01F83FF8 BL 0x337DF1C
	0x01F83FFC ADRP X0, 0x2197000
	0x01F84000 LDR X0, [X0 + 0x2F8]
	0x01F84004 BL 0x1C16D08
	0x01F84008 MOV X1, X0
	0x01F8400C MOV X0, X20
	0x01F84010 BL 0x1C16DEC
	0x01F84014 MOV X0, X20
	0x01F84018 BL 0x19903C0
	0x01F8401C MOV X0, X20
	0x01F84020 MOV W1, W23
	0x01F84024 MOV X2, X31
	0x01F84028 BL 0x3222A1C
	0x01F8402C STRH W0, [X31 + 0x8]
	0x01F84030 ADRP X0, 0x2171000
	0x01F84034 LDR X0, [X0 + 0x170]
	0x01F84038 BL 0x1C16D08
	0x01F8403C ADD X1, X31, 0x8
	0x01F84040 BL 0x1C16E04
	0x01F84044 MOV X19, X0
	0x01F84048 ADRP X0, 0x2196000
	0x01F8404C LDR X0, [X0 + 0x300]
	0x01F84050 B 0x1F83FC8
	0x01F84054 MOV X0, X22
	0x01F84058 BL 0x1C171E0
	0x01F8405C STR X30, [X31 - 0x30]!
	0x01F84060 STP X22, X21, [X31 + 0x10]
	0x01F84064 STP X20, X19, [X31 + 0x20]
	0x01F84068 ADRP X21, 0x2455000
	0x01F8406C LDRB W8, [X21 + 0x6B8]
	0x01F84070 MOV X20, X1
	0x01F84074 MOV W19, W0
	0x01F84078 TBNZ X8, 0x0, 0x1F84090
	0x01F8407C ADRP X0, 0x2171000
	0x01F84080 LDR X0, [X0 + 0x170]
	0x01F84084 BL 0x1C16CF4
	0x01F84088 MOVZ W8, 0x1
	0x01F8408C STRB W8, [X21 + 0x6B8]
	0x01F84090 LDR X0, [X20]
	0x01F84094 CBZ X0, 0x1F840EC
	0x01F84098 ADRP X22, 0x2171000
	0x01F8409C LDR X22, [X22 + 0x170]
	0x01F840A0 LDR W8, [X0 + 0x10]
	0x01F840A4 CMP W19, W8
	0x01F840A8 B.GE 0x1F840F8
	0x01F840AC MOV W1, W19
	0x01F840B0 MOV X2, X31
	0x01F840B4 BL 0x3222A1C
	0x01F840B8 LDR X8, [X22]
	0x01F840BC MOV W21, W0
	0x01F840C0 LDR W9, [X8 + 0xE0]
	0x01F840C4 CBNZ W9, 0x1F840D0
	0x01F840C8 MOV X0, X8
	0x01F840CC BL 0x1C16DFC
	0x01F840D0 MOV W0, W21
	0x01F840D4 MOV X1, X31
	0x01F840D8 BL 0x3317FCC
	0x01F840DC TBZ X0, 0x0, 0x1F840F0

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X23, 0x2457000
	012 Move W8, [X23+1714]
	013 Move X20, X4
	014 Move X21, X3
	015 Move X22, X2
	016 Move X19, X1
	017 Move X24, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {42}
	022 Move X0, 0x2178000
	023 Move X0, [X0+752]
	024 Call 0x1C17CF4
	025 Move X0, 0x2178000
	026 Move X0, [X0+760]
	027 Call 0x1C17CF4
	028 Move X0, 0x2171000
	029 Move X0, [X0+2096]
	030 Call 0x1C17CF4
	031 Move X0, 0x2173000
	032 Move X0, [X0+928]
	033 Call 0x1C17CF4
	034 Move X0, 0x2171000
	035 Move X0, [X0+3784]
	036 Call 0x1C17CF4
	037 Move X0, 0x2171000
	038 Move X0, [X0+2120]
	039 Call 0x1C17CF4
	040 Move W8, 1
	041 Move [X23+1714], W8
	042 Compare X24, 0
	043 JumpIfEqual {129}
	044 Move X25, 0x2178000
	045 Move X25, [X25+760]
	046 Move X0, X24
	047 Move X1, [X25]
	048 Call 0x1C17E00
	049 Compare X0, 0
	050 JumpIfEqual {149}
	051 Compare X19, 0
	052 JumpIfEqual {164}
	053 Move X9, 0x2171000
	054 Move X8, [X19]
	055 Move X9, [X9+3784]
	056 Move X23, X0
	057 Move X0, X19
	058 Move X2, [X8+592]
	059 Move X1, [X9]
	060 Move X9, [X8+584]
	061 NotImplemented "Instruction BLR not yet implemented."
	062 Move X26, 0x2178000
	063 Move X27, 0x2173000
	064 Move X26, [X26+752]
	065 Move X27, [X27+928]
	066 Move W24, W31
	067 Move X8, [X23]
	068 Move X1, [X26]
	069 NotImplemented "Instruction LDRH not yet implemented."
	070 Compare X9, 0
	071 JumpIfEqual {78}
	072 Move X10, [X8+176]
	073 Add X10, X10, 8
	074 NotImplemented "Instruction LDUR not yet implemented."
	075 NotImplemented "Instruction CMP not yet implemented."
	076 Subtract X9, X9, 1
	077 Add X10, X10, 16
	078 Move W2, 1
	079 Move X0, X23
	080 Call 0x1C5D788
	081 Move W9, [X10]
	082 Add W9, W9, 1
	083 Add X8, X8, W9
	084 Add X0, X8, 312
	085 Move X8, [X0]
	086 Move X1, [X0+8]
	087 Move X0, X23
	088 NotImplemented "Instruction BLR not yet implemented."
	089 NotImplemented "Instruction CMP not yet implemented."
	090 Compare W24, 0
	091 JumpIfEqual {98}
	092 Move X8, [X19]
	093 Move X1, [X27]
	094 Move X0, X19
	095 Move X9, [X8+584]
	096 Move X2, [X8+592]
	097 NotImplemented "Instruction BLR not yet implemented."
	098 Move X8, [X23]
	099 Move X1, [X25]
	100 NotImplemented "Instruction LDRH not yet implemented."
	101 Compare X9, 0
	102 JumpIfEqual {109}
	103 Move X10, [X8+176]
	104 Add X10, X10, 8
	105 NotImplemented "Instruction LDUR not yet implemented."
	106 NotImplemented "Instruction CMP not yet implemented."
	107 Subtract X9, X9, 1
	108 Add X10, X10, 16
	109 Move X0, X23
	110 Move W2, W31
	111 Call 0x1C5D788
	112 NotImplemented "Instruction LDRSW not yet implemented."
	113 Add X8, X8, X9
	114 Add X0, X8, 312
	115 Move X8, [X0]
	116 Move X2, [X0+8]
	117 Move X0, X23
	118 Move W1, W24
	119 NotImplemented "Instruction BLR not yet implemented."
	120 Move X1, X19
	121 Move X2, X22
	122 Move X3, X21
	123 Move X4, X20
	124 Call JsonUtilityExtensions.ToJsonInternal, X0, X1, X2, X3, X4
	125 Add W24, W24, 1
	126 Move X9, 0x2170000
	127 Move X8, [X19]
	128 Move X9, [X9+2120]
	129 Compare X19, 0
	130 JumpIfEqual {164}
	131 Move X9, 0x2170000
	132 Move X8, [X19]
	133 Move X9, [X9+2096]
	134 Move X1, [X9]
	135 Move X3, [X8+584]
	136 Move X2, [X8+592]
	137 Move X0, X19
	138 Move X20, [X31+64]
	139 Move X19, [X31+72]
	140 Move X22, [X31+48]
	141 Move X21, [X31+56]
	142 Move X24, [X31+32]
	143 Move X23, [X31+40]
	144 Move X26, [X31+16]
	145 Move X25, [X31+24]
	146 Move X30, [X31+80]
	147 Move X27, [X31+88]
	148 CallNoReturn X3
	149 Move X0, X24
	150 Move X1, X19
	151 Move X2, X22
	152 Move X3, X21
	153 Move X4, X20
	154 Move X20, [X31+64]
	155 Move X19, [X31+72]
	156 Move X22, [X31+48]
	157 Move X21, [X31+56]
	158 Move X24, [X31+32]
	159 Move X23, [X31+40]
	160 Move X26, [X31+16]
	161 Move X25, [X31+24]
	162 Move X30, [X31+80]
	163 Move X27, [X31+88]
	164 Call 0x1C17F20

Method: T FromJsonWithTypeAnnotation(System.String json, Fusion.JsonUtilityExtensions/TypeResolverDelegate typeResolver = null)

Disassembly:
	0x02212F30 MOV X0, X20
	0x02212F34 BL 0x1C5C6E0
	0x02212F38 CBZ X21, 0x2212F7C
	0x02212F3C LDR X8, [X20 + 0x38]
	0x02212F40 MOV X0, X21
	0x02212F44 LDR X1, [X8 + 0x8]
	0x02212F48 BL 0x301BB2C
	0x02212F4C CMP W0, W19
	0x02212F50 B.GE 0x2212F70
	0x02212F54 LDR X8, [X20 + 0x38]
	0x02212F58 MOV W1, W19
	0x02212F5C LDP X20, X19, [X31 + 0x10]
	0x02212F60 MOV X0, X21
	0x02212F64 LDR X2, [X8 + 0x10]
	0x02212F68 LDP X30, X21, [X31], #0x20
	0x02212F6C B 0x301BB48
	0x02212F70 LDP X20, X19, [X31 + 0x10]
	0x02212F74 LDP X30, X21, [X31], #0x20
	0x02212F78 RET
	0x02212F7C BL 0x1C16F20
	0x02212F80 STP X30, X21, [X31 - 0x20]!
	0x02212F84 STP X20, X19, [X31 + 0x10]
	0x02212F88 LDR X8, [X2 + 0x38]
	0x02212F8C MOV X20, X2
	0x02212F90 MOV W19, W1
	0x02212F94 MOV X21, X0
	0x02212F98 CBNZ X8, 0x2212FA4
	0x02212F9C MOV X0, X20
	0x02212FA0 BL 0x1C5C6E0
	0x02212FA4 CBZ X21, 0x2212FF0
	0x02212FA8 LDR X8, [X20 + 0x38]
	0x02212FAC MOV X0, X21
	0x02212FB0 LDR X1, [X8 + 0x8]
	0x02212FB4 LDR X8, [X1]
	0x02212FB8 BLR X8
	0x02212FBC CMP W0, W19
	0x02212FC0 B.GE 0x2212FE4
	0x02212FC4 LDR X8, [X20 + 0x38]
	0x02212FC8 MOV W1, W19
	0x02212FCC LDP X20, X19, [X31 + 0x10]
	0x02212FD0 MOV X0, X21
	0x02212FD4 LDR X2, [X8 + 0x10]
	0x02212FD8 LDR X3, [X2]
	0x02212FDC LDP X30, X21, [X31], #0x20
	0x02212FE0 BR X3
	0x02212FE4 LDP X20, X19, [X31 + 0x10]
	0x02212FE8 LDP X30, X21, [X31], #0x20
	0x02212FEC RET
	0x02212FF0 BL 0x1C16F20
	0x02212FF4 STP X29, X30, [X31 - 0x40]!
	0x02212FF8 STR X23, [X31 + 0x10]
	0x02212FFC STP X22, X21, [X31 + 0x20]
	0x02213000 STP X20, X19, [X31 + 0x30]
	0x02213004 ADD X29, X31, 0x0
	0x02213008 SUB X31, X31, 0x10
	0x0221300C MRS X23, 0xC000
	0x02213010 LDR X8, [X23 + 0x28]
	0x02213014 MOV X20, X2
	0x02213018 MOV W21, W1
	0x0221301C MOV X19, X0
	0x02213020 STUR X8, [X29 - 0x8]
	0x02213024 LDR X8, [X2 + 0x38]
	0x02213028 CBNZ X8, 0x2213038
	0x0221302C MOV X0, X20
	0x02213030 BL 0x1C5C6E0
	0x02213034 LDR X8, [X20 + 0x38]
	0x02213038 LDR X9, [X8 + 0x10]
	0x0221303C ADD X10, X31, 0x0
	0x02213040 LDR W9, [X9 + 0xFC]
	0x02213044 ADD X9, X9, 0xF
	0x02213048 AND X9, X9, 0x1FFFFFFFF
	0x0221304C SUB X22, X10, X9
	0x02213050 ADD X31, X22, 0x0
	0x02213054 CMP W21, 0x1
	0x02213058 B.LT 0x22130C4
	0x0221305C LDR X1, [X8 + 0x8]
	0x02213060 SUB X3, X29, 0x10
	0x02213064 MOV X2, X31
	0x02213068 MOV X4, X22
	0x0221306C LDR X0, [X1]
	0x02213070 STUR X22, [X29 - 0x10]
	0x02213074 LDR X8, [X1 + 0x10]
	0x02213078 BLR X8
	0x0221307C CBZ X19, 0x22130F0
	0x02213080 LDR X8, [X20 + 0x38]
	0x02213084 MOV X4, X22
	0x02213088 LDR X9, [X8 + 0x10]
	0x0221308C LDR W9, [X9 + 0x28]
	0x02213090 TBNZ X9, 0x1F, 0x2213098
	0x02213094 LDR X4, [X22]
	0x02213098 LDR X1, [X8 + 0x18]
	0x0221309C SUB X3, X29, 0x10
	0x022130A0 MOV X2, X19
	0x022130A4 LDR X0, [X1]
	0x022130A8 STUR X4, [X29 - 0x10]
	0x022130AC LDR X8, [X1 + 0x10]
	0x022130B0 BLR X8
	0x022130B4 SUBS W21, W21, 0x1
	0x022130B8 B.EQ 0x22130C4
	0x022130BC LDR X8, [X20 + 0x38]
	0x022130C0 B 0x221305C
	0x022130C4 LDR X8, [X23 + 0x28]
	0x022130C8 LDUR X9, [X29 - 0x8]
	0x022130CC CMP X8, X9
	0x022130D0 B.NE 0x22130F4
	0x022130D4 MOV X0, X19
	0x022130D8 ADD X31, X29, 0x0
	0x022130DC LDP X20, X19, [X31 + 0x30]
	0x022130E0 LDP X22, X21, [X31 + 0x20]
	0x022130E4 LDR X23, [X31 + 0x10]
	0x022130E8 LDP X29, X30, [X31], #0x40
	0x022130EC RET
	0x022130F0 BL 0x1C16F20
	0x022130F4 BL 0x3EB1B20
	0x022130F8 STP X29, X30, [X31 - 0x60]!
	0x022130FC STP X28, X27, [X31 + 0x10]
	0x02213100 STP X26, X25, [X31 + 0x20]
	0x02213104 STP X24, X23, [X31 + 0x30]
	0x02213108 STP X22, X21, [X31 + 0x40]
	0x0221310C STP X20, X19, [X31 + 0x50]
	0x02213110 ADD X29, X31, 0x0
	0x02213114 SUB X31, X31, 0x40
	0x02213118 STP W1, W2, [X29 - 0x28]
	0x0221311C MRS X8, 0xC000
	0x02213120 STUR X8, [X29 - 0x30]
	0x02213124 LDR X8, [X8 + 0x28]
	0x02213128 MOV X20, X3
	0x0221312C MOV X21, X0
	0x02213130 STUR X8, [X29 - 0x8]
	0x02213134 LDR X19, [X3 + 0x38]
	0x02213138 CBNZ X19, 0x2213148
	0x0221313C MOV X0, X20
	0x02213140 BL 0x1C5C6E0
	0x02213144 LDR X19, [X20 + 0x38]
	0x02213148 LDR X8, [X19 + 0x10]
	0x0221314C STUR X20, [X29 - 0x38]
	0x02213150 LDR W23, [X8 + 0xFC]
	0x02213154 ADD X8, X31, 0x0
	0x02213158 ADD X9, X23, 0xF
	0x0221315C AND X27, X9, 0x1FFFFFFFF
	0x02213160 SUB X24, X8, X27
	0x02213164 ADD X31, X24, 0x0
	0x02213168 ADD X8, X31, 0x0
	0x0221316C SUB X20, X8, X27
	0x02213170 ADD X31, X20, 0x0
	0x02213174 ADD X8, X31, 0x0
	0x02213178 SUB X28, X8, X27
	0x0221317C ADD X31, X28, 0x0
	0x02213180 ADD X8, X31, 0x0
	0x02213184 SUB X26, X8, X27
	0x02213188 ADD X31, X26, 0x0
	0x0221318C ADD X8, X31, 0x0
	0x02213190 SUB X8, X8, X27
	0x02213194 STUR X8, [X29 - 0x40]
	0x02213198 ADD X31, X8, 0x0
	0x0221319C ADD X8, X31, 0x0
	0x022131A0 SUB X22, X8, X27
	0x022131A4 ADD X31, X22, 0x0
	0x022131A8 ADD X8, X31, 0x0
	0x022131AC SUB X25, X8, X27
	0x022131B0 ADD X31, X25, 0x0
	0x022131B4 MOV X0, X25
	0x022131B8 MOV W1, W31
	0x022131BC MOV X2, X23
	0x022131C0 BL 0x3EB1B10
	0x022131C4 ADD X8, X31, 0x0
	0x022131C8 SUB X27, X8, X27
	0x022131CC ADD X31, X27, 0x0
	0x022131D0 MOV X0, X27
	0x022131D4 MOV W1, W31
	0x022131D8 MOV X2, X23
	0x022131DC BL 0x3EB1B10
	0x022131E0 CBZ X21, 0x221334C
	0x022131E4 LDR X1, [X19 + 0x8]
	0x022131E8 LDUR W8, [X29 - 0x24]
	0x022131EC SUB X19, X29, 0xC
	0x022131F0 SUB X3, X29, 0x20
	0x022131F4 LDR X0, [X1]
	0x022131F8 STUR W8, [X29 - 0xC]
	0x022131FC STP X19, X24, [X29 - 0x20]
	0x02213200 LDR X8, [X1 + 0x10]
	0x02213204 MOV X2, X21
	0x02213208 MOV X4, X24
	0x0221320C BLR X8
	0x02213210 MOV X0, X25
	0x02213214 MOV X1, X24
	0x02213218 MOV X2, X23
	0x0221321C BL 0x3EB1AC0
	0x02213220 LDUR X24, [X29 - 0x38]
	0x02213224 SUB X3, X29, 0x20
	0x02213228 MOV X2, X21
	0x0221322C MOV X4, X20
	0x02213230 LDR X8, [X24 + 0x38]
	0x02213234 LDR X1, [X8 + 0x8]
	0x02213238 LDUR W8, [X29 - 0x28]
	0x0221323C LDR X0, [X1]
	0x02213240 STUR W8, [X29 - 0xC]
	0x02213244 STP X19, X20, [X29 - 0x20]
	0x02213248 LDR X8, [X1 + 0x10]
	0x0221324C BLR X8
	0x02213250 MOV X0, X27
	0x02213254 MOV X1, X20
	0x02213258 MOV X2, X23
	0x0221325C BL 0x3EB1AC0
	0x02213260 MOV X0, X28
	0x02213264 MOV X1, X25
	0x02213268 MOV X2, X23
	0x0221326C BL 0x3EB1AC0
	0x02213270 MOV X0, X26
	0x02213274 MOV X1, X28
	0x02213278 MOV X2, X23
	0x0221327C BL 0x3EB1AC0
	0x02213280 LDR X8, [X24 + 0x38]
	0x02213284 LDP X9, X1, [X8 + 0x10]
	0x02213288 LDR W8, [X9 + 0x28]
	0x0221328C LDR X0, [X1]
	0x02213290 TBNZ X8, 0x1F, 0x2213298
	0x02213294 LDR X26, [X26]
	0x02213298 LDUR W8, [X29 - 0x28]
	0x0221329C STP X19, X26, [X29 - 0x20]
	0x022132A0 SUB X3, X29, 0x20
	0x022132A4 MOV X2, X21
	0x022132A8 STUR W8, [X29 - 0xC]
	0x022132AC LDR X8, [X1 + 0x10]
	0x022132B0 MOV X4, X26
	0x022132B4 BLR X8
	0x022132B8 LDUR X19, [X29 - 0x40]
	0x022132BC MOV X1, X27
	0x022132C0 MOV X2, X23
	0x022132C4 MOV X0, X19
	0x022132C8 BL 0x3EB1AC0
	0x022132CC MOV X0, X22
	0x022132D0 MOV X1, X19
	0x022132D4 MOV X2, X23
	0x022132D8 BL 0x3EB1AC0
	0x022132DC LDR X8, [X24 + 0x38]
	0x022132E0 LDP X9, X1, [X8 + 0x10]
	0x022132E4 LDR W8, [X9 + 0x28]
	0x022132E8 LDR X0, [X1]
	0x022132EC TBNZ X8, 0x1F, 0x22132F4
	0x022132F0 LDR X22, [X22]
	0x022132F4 LDUR W8, [X29 - 0x24]
	0x022132F8 SUB X3, X29, 0x20
	0x022132FC MOV X2, X21
	0x02213300 MOV X4, X22
	0x02213304 STUR W8, [X29 - 0xC]
	0x02213308 SUB X8, X29, 0xC
	0x0221330C STP X8, X22, [X29 - 0x20]
	0x02213310 LDR X8, [X1 + 0x10]
	0x02213314 BLR X8
	0x02213318 LDUR X8, [X29 - 0x30]
	0x0221331C LDR X8, [X8 + 0x28]
	0x02213320 LDUR X9, [X29 - 0x8]
	0x02213324 CMP X8, X9
	0x02213328 B.NE 0x2213350
	0x0221332C ADD X31, X29, 0x0
	0x02213330 LDP X20, X19, [X31 + 0x50]
	0x02213334 LDP X22, X21, [X31 + 0x40]
	0x02213338 LDP X24, X23, [X31 + 0x30]
	0x0221333C LDP X26, X25, [X31 + 0x20]
	0x02213340 LDP X28, X27, [X31 + 0x10]
	0x02213344 LDP X29, X30, [X31], #0x60
	0x02213348 RET
	0x0221334C BL 0x1C16F20
	0x02213350 BL 0x3EB1B20
	0x02213354 STP X29, X30, [X31 - 0x40]!
	0x02213358 STP X24, X23, [X31 + 0x10]
	0x0221335C STP X22, X21, [X31 + 0x20]
	0x02213360 STP X20, X19, [X31 + 0x30]
	0x02213364 ADD X29, X31, 0x0
	0x02213368 SUB X31, X31, 0x20
	0x0221336C MRS X23, 0xC000
	0x02213370 LDR X8, [X23 + 0x28]
	0x02213374 MOV X19, X1
	0x02213378 MOV X20, X0
	0x0221337C STUR X8, [X29 - 0x8]
	0x02213380 LDR X8, [X1 + 0x38]
	0x02213384 CBNZ X8, 0x2213394
	0x02213388 MOV X0, X19
	0x0221338C BL 0x1C5C6E0
	0x02213390 LDR X8, [X19 + 0x38]
	0x02213394 LDR X9, [X8 + 0x18]
	0x02213398 ADD X10, X31, 0x0
	0x0221339C LDR W9, [X9 + 0xFC]
	0x022133A0 ADD X9, X9, 0xF
	0x022133A4 AND X9, X9, 0x1FFFFFFFF
	0x022133A8 SUB X21, X10, X9
	0x022133AC ADD X31, X21, 0x0
	0x022133B0 CBZ X20, 0x2213454
	0x022133B4 LDR X1, [X8 + 0x8]
	0x022133B8 MOV X0, X20
	0x022133BC LDR X8, [X1]
	0x022133C0 BLR X8
	0x022133C4 SUBS W22, W0, 0x1
	0x022133C8 B.MI 0x221342C
	0x022133CC SUB X24, X29, 0xC
	0x022133D0 LDR X8, [X19 + 0x38]
	0x022133D4 SUB X3, X29, 0x20
	0x022133D8 MOV X2, X20
	0x022133DC MOV X4, X21
	0x022133E0 LDR X1, [X8 + 0x10]
	0x022133E4 LDR X0, [X1]
	0x022133E8 STUR W22, [X29 - 0xC]
	0x022133EC STP X24, X21, [X29 - 0x20]

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Add X29, X31, 0
	014 Subtract X31, X31, 16
	015 NotImplemented "Instruction MRS not yet implemented."
	016 Move X8, [X28+40]
	017 Move X21, X3
	018 Move X19, X2
	019 Move X23, X1
	020 Move [X29-8], X8
	021 Move X8, [X3+56]
	022 Move X24, X0
	023 Compare X8, 0
	024 JumpIfNotEqual {49}
	025 Move X0, 0x1EE9000
	026 Move X0, [X0+752]
	027 Call 0x1C17CF4
	028 Move X0, 0x1F0B000
	029 Move X0, [X0+24]
	030 Call 0x1C17CF4
	031 Move X0, 0x1EE9000
	032 Move X0, [X0+760]
	033 Call 0x1C17CF4
	034 Move X0, 0x1F0B000
	035 Move X0, [X0+32]
	036 Call 0x1C17CF4
	037 Move X0, 0x1EEA000
	038 Move X0, [X0+3168]
	039 Call 0x1C17CF4
	040 Move X0, 0x1EE2000
	041 Move X0, [X0+1728]
	042 Call 0x1C17CF4
	043 Move X8, [X21+56]
	044 Compare X8, 0
	045 JumpIfNotEqual {49}
	046 Move X0, X21
	047 Call 0x1C5D6E0
	048 Move X8, [X21+56]
	049 Move X25, [X8]
	050 Move X9, [X8+8]
	051 Move W20, [X9+252]
	052 Add X9, X31, 0
	053 Add X10, X20, 15
	054 And X10, X10, 0x1FFFFFFFF
	055 Subtract X22, X9, X10
	056 Add X31, X22, 0
	057 Move X26, 0x1EE2000
	058 Move X26, [X26+1728]
	059 Move X0, [X26]
	060 Move W9, [X0+224]
	061 Compare W9, 0
	062 JumpIfNotEqual {64}
	063 Call 0x1C17DFC
	064 Move X0, X25
	065 Move X1, X31
	066 Call Type.GetTypeFromHandle, X0
	067 Compare X0, 0
	068 JumpIfEqual {342}
	069 Move X1, X31
	070 Call Type.get_IsArray, X0
	071 Move TEMP, X0
	072 And TEMP, TEMP, 1
	073 Compare TEMP, 1
	074 JumpIfNotEqual {141}
	075 Move X8, 0x1F0A000
	076 Move X0, [X26]
	077 Move X8, [X8+32]
	078 Move W9, [X0+224]
	079 Move X25, [X8]
	080 Compare W9, 0
	081 JumpIfNotEqual {83}
	082 Call 0x1C17DFC
	083 Move X0, X25
	084 Move X1, X31
	085 Call Type.GetTypeFromHandle, X0
	086 Move X8, 0x1EE9000
	087 Move X8, [X8+3168]
	088 Move X25, X0
	089 Move W1, 1
	090 Move X8, [X8]
	091 Move X0, X8
	092 Call 0x1C17D6C
	093 Move X8, [X21+56]
	094 Move X26, X0
	095 Move X1, X31
	096 Move X8, [X8]
	097 Move X0, X8
	098 Call Type.GetTypeFromHandle, X0
	099 Compare X0, 0
	100 JumpIfEqual {342}
	101 Move X8, [X0]
	102 Move X9, [X8+1064]
	103 Move X1, [X8+1072]
	104 NotImplemented "Instruction BLR not yet implemented."
	105 Compare X26, 0
	106 JumpIfEqual {342}
	107 Move X27, X0
	108 Compare X0, 0
	109 JumpIfEqual {116}
	110 Move X8, [X26]
	111 Move X0, X27
	112 Move X1, [X8+64]
	113 Call 0x1C17E00
	114 Compare X0, 0
	115 JumpIfEqual {344}
	116 Move W8, [X26+24]
	117 Compare W8, 0
	118 JumpIfEqual {343}
	119 Move [X26+32], X27
	120 Compare X25, 0
	121 JumpIfEqual {342}
	122 Move X8, [X25]
	123 Move X0, X25
	124 Move X1, X26
	125 Move X9, [X8+2264]
	126 Move X2, [X8+2272]
	127 NotImplemented "Instruction BLR not yet implemented."
	128 Move X1, X31
	129 Call Activator.CreateInstance, X0
	130 Compare X0, 0
	131 JumpIfEqual {220}
	132 Move X8, 0x1EE8000
	133 Move X8, [X8+760]
	134 Move X26, X0
	135 Move X27, [X8]
	136 Move X1, X27
	137 Call 0x1C17E00
	138 Move X25, X0
	139 Compare X0, 0
	140 JumpIfNotEqual {221}
	141 Move X0, [X26]
	142 Move X8, [X21+56]
	143 Move W9, [X0+224]
	144 Move X25, [X8]
	145 Compare W9, 0
	146 JumpIfNotEqual {148}
	147 Call 0x1C17DFC
	148 Move X0, X25
	149 Move X1, X31
	150 Call Type.GetTypeFromHandle, X0
	151 Move X8, 0x1F0A000
	152 Move X8, [X8+24]
	153 Move X25, X0
	154 Move X1, X31
	155 Move X8, [X8]
	156 Move X0, X8
	157 Call Type.GetTypeFromHandle, X0
	158 Compare X0, 0
	159 JumpIfEqual {342}
	160 Move X8, [X0]
	161 Move X9, [X8+744]
	162 Move X1, [X8+752]
	163 NotImplemented "Instruction BLR not yet implemented."
	164 Compare X25, 0
	165 JumpIfEqual {342}
	166 Move X1, X0
	167 Move X0, X25
	168 Move X2, X31
	169 Call Type.GetInterface, X0, X1
	170 Move X1, X31
	171 Move X2, X31
	172 Call Type.op_Inequality, X0, X1
	173 Move TEMP, X0
	174 And TEMP, TEMP, 1
	175 Compare TEMP, 1
	176 JumpIfNotEqual {203}
	177 Move X0, [X26]
	178 Move X8, [X21+56]
	179 Move W9, [X0+224]
	180 Move X25, [X8]
	181 Compare W9, 0
	182 JumpIfNotEqual {184}
	183 Call 0x1C17DFC
	184 Move X0, X25
	185 Move X1, X31
	186 Call Type.GetTypeFromHandle, X0
	187 Move X1, X31
	188 Call Activator.CreateInstance, X0
	189 Compare X0, 0
	190 JumpIfEqual {302}
	191 Move X8, 0x1EE8000
	192 Move X8, [X8+760]
	193 Move X26, X0
	194 Move X27, [X8]
	195 Move X1, X27
	196 Call 0x1C17E00
	197 Move X25, X0
	198 Compare X0, 0
	199 JumpIfNotEqual {303}
	200 Move X0, X26
	201 Move X1, X27
	202 Call 0x1C181E0
	203 Move X0, X24
	204 Move X1, X23
	205 Move X2, X31
	206 Move X3, X31
	207 Call JsonUtilityExtensions.FromJsonWithTypeAnnotationInternal, X0, X1, X2
	208 Move X8, [X21+56]
	209 Move X21, X0
	210 Move X1, [X8+8]
	211 Move W8, [X1+309]
	212 Move TEMP, X8
	213 And TEMP, TEMP, 1
	214 Compare TEMP, 1
	215 JumpIfEqual {219}
	216 Move X0, X1
	217 Call 0x1C5D684
	218 Move X1, X0
	219 Move X0, X21
	220 Move X25, X31
	221 Move X0, X24
	222 Move X1, X23
	223 Move X2, X25
	224 Move X3, X31
	225 Call JsonUtilityExtensions.FromJsonWithTypeAnnotationInternal, X0, X1, X2
	226 Move X8, [X21+56]
	227 Move X1, X31
	228 Move X0, [X8]
	229 Call Type.GetTypeFromHandle, X0
	230 Compare X0, 0
	231 JumpIfEqual {342}
	232 Move X8, [X0]
	233 Move X9, [X8+1064]
	234 Move X1, [X8+1072]
	235 NotImplemented "Instruction BLR not yet implemented."
	236 Compare X25, 0
	237 JumpIfEqual {342}
	238 Move X24, 0x1EE8000
	239 Move X8, [X25]
	240 Move X24, [X24+752]
	241 Move X23, X0
	242 NotImplemented "Instruction LDRH not yet implemented."
	243 Move X1, [X24]
	244 Compare X9, 0
	245 JumpIfEqual {252}
	246 Move X10, [X8+176]
	247 Add X10, X10, 8
	248 NotImplemented "Instruction LDUR not yet implemented."
	249 NotImplemented "Instruction CMP not yet implemented."
	250 Subtract X9, X9, 1
	251 Add X10, X10, 16
	252 Move W2, 1
	253 Move X0, X25
	254 Call 0x1C5D788
	255 Move W9, [X10]
	256 Add W9, W9, 1
	257 Add X8, X8, W9
	258 Add X0, X8, 312
	259 Move X8, [X0]
	260 Move X1, [X0+8]
	261 Move X0, X25
	262 NotImplemented "Instruction BLR not yet implemented."
	263 Move W1, W0
	264 Move X0, X23
	265 Move X2, X31
	266 Call Array.CreateInstance, X0, X1
	267 Move X8, [X25]
	268 Move X1, [X24]
	269 Move X23, X0
	270 NotImplemented "Instruction LDRH not yet implemented."
	271 Compare X9, 0
	272 JumpIfEqual {279}
	273 Move X10, [X8+176]
	274 Add X10, X10, 8
	275 NotImplemented "Instruction LDUR not yet implemented."
	276 NotImplemented "Instruction CMP not yet implemented."
	277 Subtract X9, X9, 1
	278 Add X10, X10, 16
	279 Move X0, X25
	280 Move W2, W31
	281 Call 0x1C5D788
	282 NotImplemented "Instruction LDRSW not yet implemented."
	283 Add X8, X8, X9
	284 Add X0, X8, 312
	285 Move X8, [X0]
	286 Move X3, [X0+8]
	287 Move X0, X25
	288 Move X1, X23
	289 Move W2, W31
	290 NotImplemented "Instruction BLR not yet implemented."
	291 Move X8, [X21+56]
	292 Move X1, [X8+8]
	293 Move W8, [X1+309]
	294 Move TEMP, X8
	295 And TEMP, TEMP, 1
	296 Compare TEMP, 1
	297 JumpIfEqual {301}
	298 Move X0, X1
	299 Call 0x1C5D684
	300 Move X1, X0
	301 Move X0, X23
	302 Move X25, X31
	303 Move X0, X24
	304 Move X1, X23
	305 Move X2, X25
	306 Move X3, X31
	307 Call JsonUtilityExtensions.FromJsonWithTypeAnnotationInternal, X0, X1, X2
	308 Move X8, [X21+56]
	309 Move X1, [X8+8]
	310 Move W8, [X1+309]
	311 Move TEMP, X8
	312 And TEMP, TEMP, 1
	313 Compare TEMP, 1
	314 JumpIfEqual {318}
	315 Move X0, X1
	316 Call 0x1C5D684
	317 Move X1, X0
	318 Move X0, X25
	319 Move X2, X22
	320 Call 0x1C17E10
	321 Move X1, X0
	322 Move X0, X19
	323 Move X2, X20
	324 Call 0x3EB2AC0
	325 Move X8, [X28+40]
	326 NotImplemented "Instruction LDUR not yet implemented."
	327 NotImplemented "Instruction CMP not yet implemented."
	328 Add X31, X29, 0
	329 Move X20, [X31+80]
	330 Move X19, [X31+88]
	331 Move X22, [X31+64]
	332 Move X21, [X31+72]
	333 Move X24, [X31+48]
	334 Move X23, [X31+56]
	335 Move X26, [X31+32]
	336 Move X25, [X31+40]
	337 Move X28, [X31+16]
	338 Move X27, [X31+24]
	339 Move X29, [X31+96]
	340 Move X30, [X31+104]
	341 Return X0
	342 Call 0x1C17F20
	343 Call 0x1C17F28
	344 Call 0x1C17F44
	345 Move X1, X31
	346 Call 0x1C17DEC
	347 Call 0x3EB2B20

Method: System.Object FromJsonWithTypeAnnotation(System.String json, Fusion.JsonUtilityExtensions/TypeResolverDelegate typeResolver = null)

Disassembly:
	0x01F845A4 ADRP X8, 0xFFFFFFFFFFA16000
	0x01F845A8 ADD X8, X8, 0x208
	0x01F845AC B 0x1F845B8
	0x01F845B0 ADRP X8, 0xFFFFFFFFFFA16000
	0x01F845B4 ADD X8, X8, 0x14C
	0x01F845B8 STR X8, [X19 + 0x18]
	0x01F845BC ADRP X8, 0xFFFFFFFFFFA16000
	0x01F845C0 ADD X8, X8, 0xB4
	0x01F845C4 STR X8, [X19 + 0x38]
	0x01F845C8 LDP X20, X19, [X31 + 0x20]
	0x01F845CC LDP X22, X21, [X31 + 0x10]
	0x01F845D0 LDR X30, [X31], #0x30
	0x01F845D4 RET
	0x01F845D8 ADRP X1, 0xFFFFFFFFFEB97000
	0x01F845DC ADD X1, X1, 0xEE3
	0x01F845E0 MOV X0, X31
	0x01F845E4 BL 0x1C16F3C
	0x01F845E8 MOV X1, X31
	0x01F845EC BL 0x1C16DEC
	0x01F845F0 LDR X8, [X0 + 0x40]
	0x01F845F4 LDR X4, [X0 + 0x18]
	0x01F845F8 LDR X3, [X0 + 0x28]
	0x01F845FC MOV X0, X8
	0x01F84600 BR X4
	0x01F84604 SUB X31, X31, 0x60
	0x01F84608 STR X30, [X31 + 0x20]
	0x01F8460C STP X24, X23, [X31 + 0x30]
	0x01F84610 STP X22, X21, [X31 + 0x40]
	0x01F84614 STP X20, X19, [X31 + 0x50]
	0x01F84618 ADRP X24, 0x2455000
	0x01F8461C STR W2, [X31 + 0x2C]
	0x01F84620 ADRP X23, 0x216F000
	0x01F84624 LDRB W8, [X24 + 0x6B9]
	0x01F84628 LDR X23, [X23 + 0x758]
	0x01F8462C MOV X19, X4
	0x01F84630 MOV X20, X3
	0x01F84634 MOV X22, X1
	0x01F84638 MOV X21, X0
	0x01F8463C TBNZ X8, 0x0, 0x1F84654
	0x01F84640 ADRP X0, 0x216F000
	0x01F84644 LDR X0, [X0 + 0x758]
	0x01F84648 BL 0x1C16CF4
	0x01F8464C MOVZ W8, 0x1
	0x01F84650 STRB W8, [X24 + 0x6B9]
	0x01F84654 LDR X0, [X23]
	0x01F84658 ADD X1, X31, 0x2C
	0x01F8465C STP X31, X31, [X31 + 0x10]
	0x01F84660 STR X22, [X31 + 0x8]
	0x01F84664 BL 0x1C16E04
	0x01F84668 STR X0, [X31 + 0x10]
	0x01F8466C ADD X1, X31, 0x8
	0x01F84670 MOV X0, X21
	0x01F84674 MOV X2, X20
	0x01F84678 MOV X3, X19
	0x01F8467C BL 0x1C16CB0
	0x01F84680 LDP X20, X19, [X31 + 0x50]
	0x01F84684 LDP X22, X21, [X31 + 0x40]
	0x01F84688 LDP X24, X23, [X31 + 0x30]
	0x01F8468C LDR X30, [X31 + 0x20]
	0x01F84690 ADD X31, X31, 0x60
	0x01F84694 RET
	0x01F84698 MOV X0, X1
	0x01F8469C MOV X1, X31
	0x01F846A0 B 0x1C16CB4
	0x01F846A4 MOV X1, X31
	0x01F846A8 B 0x33BDD8C
	0x01F846AC MOV X1, X31
	0x01F846B0 B 0x33BDD8C
	0x01F846B4 MOV W0, W31
	0x01F846B8 RET
	0x01F846BC MOV X0, X31
	0x01F846C0 RET
	0x01F846C4 MOV X1, X31
	0x01F846C8 B 0x33BDD8C
	0x01F846CC RET
	0x01F846D0 MOV W0, W31
	0x01F846D4 STR W31, [X2]
	0x01F846D8 RET
	0x01F846DC MOV W0, W31
	0x01F846E0 RET
	0x01F846E4 STR X30, [X31 - 0x30]!
	0x01F846E8 STP X22, X21, [X31 + 0x10]
	0x01F846EC STP X20, X19, [X31 + 0x20]
	0x01F846F0 ADRP X21, 0x2455000
	0x01F846F4 ADRP X22, 0x2196000
	0x01F846F8 ADRP X20, 0x216F000
	0x01F846FC LDRB W8, [X21 + 0x6BA]
	0x01F84700 LDR X22, [X22 + 0x310]
	0x01F84704 LDR X20, [X20 + 0xA28]
	0x01F84708 MOV X19, X0
	0x01F8470C TBNZ X8, 0x0, 0x1F84730
	0x01F84710 ADRP X0, 0x216F000
	0x01F84714 LDR X0, [X0 + 0xA28]
	0x01F84718 BL 0x1C16CF4
	0x01F8471C ADRP X0, 0x2196000
	0x01F84720 LDR X0, [X0 + 0x310]
	0x01F84724 BL 0x1C16CF4
	0x01F84728 MOVZ W8, 0x1
	0x01F8472C STRB W8, [X21 + 0x6BA]
	0x01F84730 LDR X0, [X22]
	0x01F84734 MOV X1, X19
	0x01F84738 MOV X2, X31
	0x01F8473C BL 0x321B938
	0x01F84740 LDR X8, [X20]
	0x01F84744 MOV X19, X0
	0x01F84748 LDR W9, [X8 + 0xE0]
	0x01F8474C CBNZ W9, 0x1F84758
	0x01F84750 MOV X0, X8
	0x01F84754 BL 0x1C16DFC
	0x01F84758 MOV X0, X19
	0x01F8475C LDP X20, X19, [X31 + 0x20]
	0x01F84760 LDP X22, X21, [X31 + 0x10]
	0x01F84764 MOV X1, X31
	0x01F84768 LDR X30, [X31], #0x30
	0x01F8476C B 0x3C06048
	0x01F84770 STP X30, X23, [X31 - 0x30]!
	0x01F84774 STP X22, X21, [X31 + 0x10]
	0x01F84778 STP X20, X19, [X31 + 0x20]
	0x01F8477C ADRP X22, 0x2455000
	0x01F84780 ADRP X23, 0x2196000
	0x01F84784 ADRP X21, 0x216F000
	0x01F84788 LDRB W8, [X22 + 0x6BB]
	0x01F8478C LDR X23, [X23 + 0x310]
	0x01F84790 LDR X21, [X21 + 0xA28]
	0x01F84794 MOV X19, X1
	0x01F84798 MOV X20, X0
	0x01F8479C TBNZ X8, 0x0, 0x1F847C0
	0x01F847A0 ADRP X0, 0x216F000
	0x01F847A4 LDR X0, [X0 + 0xA28]
	0x01F847A8 BL 0x1C16CF4
	0x01F847AC ADRP X0, 0x2196000
	0x01F847B0 LDR X0, [X0 + 0x310]
	0x01F847B4 BL 0x1C16CF4
	0x01F847B8 MOVZ W8, 0x1
	0x01F847BC STRB W8, [X22 + 0x6BB]
	0x01F847C0 LDR X0, [X23]
	0x01F847C4 MOV X1, X20
	0x01F847C8 MOV X2, X31
	0x01F847CC BL 0x321B938
	0x01F847D0 LDR X8, [X21]
	0x01F847D4 MOV X20, X0
	0x01F847D8 LDR W9, [X8 + 0xE0]
	0x01F847DC CBNZ W9, 0x1F847E8
	0x01F847E0 MOV X0, X8
	0x01F847E4 BL 0x1C16DFC
	0x01F847E8 MOV X0, X20
	0x01F847EC MOV X1, X19
	0x01F847F0 LDP X20, X19, [X31 + 0x20]
	0x01F847F4 LDP X22, X21, [X31 + 0x10]
	0x01F847F8 MOV X2, X31
	0x01F847FC LDP X30, X23, [X31], #0x30
	0x01F84800 B 0x3C06B0C
	0x01F84804 SUB X31, X31, 0x1F0
	0x01F84808 STP X29, X30, [X31 + 0x190]
	0x01F8480C STP X28, X27, [X31 + 0x1A0]
	0x01F84810 STP X26, X25, [X31 + 0x1B0]
	0x01F84814 STP X24, X23, [X31 + 0x1C0]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x2456000
	009 Move W8, [X21+1715]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {30}
	016 Move X0, 0x2178000
	017 Move X0, [X0+3864]
	018 Call 0x1C17CF4
	019 Move X0, 0x2197000
	020 Move X0, [X0+664]
	021 Call 0x1C17CF4
	022 Move X0, 0x2178000
	023 Move X0, [X0+3888]
	024 Call 0x1C17CF4
	025 Move X0, 0x2175000
	026 Move X0, [X0+1856]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X21+1715], W8
	030 Add X1, X31, 8
	031 Move W0, W31
	032 Move [X31+8], X20
	033 Call JsonUtilityExtensions.<FromJsonWithTypeAnnotation>g__SkipWhiteOrThrow|8_0, X0, X1
	034 Move [X31+4], W0
	035 Compare X20, 0
	036 JumpIfEqual {66}
	037 Move W22, W0
	038 Move X0, X20
	039 Move W1, W22
	040 Move X2, X31
	041 Call String.get_Chars, X0, X1
	042 And W8, W0, 0xFFFF
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Move X8, 0x2175000
	045 Move X8, [X8+1856]
	046 Move X0, [X8]
	047 Call 0x1C17F10
	048 Move X8, 0x2178000
	049 Move X8, [X8+3888]
	050 Move X21, X0
	051 Move X1, [X8]
	052 Call List`1<Object>..ctor, X0
	053 Add W0, W22, 1
	054 Add X1, X31, 8
	055 Call JsonUtilityExtensions.<FromJsonWithTypeAnnotation>g__SkipWhiteOrThrow|8_0, X0, X1
	056 Move W22, W0
	057 Move [X31+4], W0
	058 Move X0, X20
	059 Move W1, W22
	060 Move X2, X31
	061 Call String.get_Chars, X0, X1
	062 And W8, W0, 0xFFFF
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Compare X21, 0
	065 JumpIfNotEqual {126}
	066 Call 0x1C17F20
	067 Add X0, X31, 4
	068 Move X1, X20
	069 Move X2, X19
	070 Call JsonUtilityExtensions.FromJsonWithTypeAnnotationToObject, X0, X1, X2
	071 Move X23, 0x2178000
	072 Move X23, [X23+3864]
	073 Move W8, W31
	074 Move TEMP, X8
	075 And TEMP, TEMP, 1
	076 Compare TEMP, 1
	077 JumpIfNotEqual {88}
	078 Move X0, X20
	079 Move W1, W22
	080 Move X2, X31
	081 Call String.get_Chars, X0, X1
	082 And W8, W0, 0xFFFF
	083 NotImplemented "Instruction CMP not yet implemented."
	084 Add W0, W22, 1
	085 Add X1, X31, 8
	086 Call JsonUtilityExtensions.<FromJsonWithTypeAnnotation>g__SkipWhiteOrThrow|8_0, X0, X1
	087 Move [X31+4], W0
	088 Add X0, X31, 4
	089 Move X1, X20
	090 Move X2, X19
	091 Call JsonUtilityExtensions.FromJsonWithTypeAnnotationToObject, X0, X1, X2
	092 Compare X21, 0
	093 JumpIfEqual {66}
	094 Move W10, [X21+28]
	095 Move X8, [X21+16]
	096 Move X9, [X23]
	097 Add W10, W10, 1
	098 Move [X21+28], W10
	099 Compare X8, 0
	100 JumpIfEqual {66}
	101 NotImplemented "Instruction LDRSW not yet implemented."
	102 Move W11, [X8+24]
	103 Move X1, X0
	104 NotImplemented "Instruction CMP not yet implemented."
	105 Add W9, W10, 1
	106 Add X8, X8, X10
	107 Move [X21+24], W9
	108 Move [X8+32], X1
	109 Move X8, [X9+32]
	110 Move X0, X21
	111 Move X8, [X8+192]
	112 Move X2, [X8+112]
	113 Call List`1<Object>.AddWithResize, X0, X1
	114 Move W0, [X31+4]
	115 Add X1, X31, 8
	116 Call JsonUtilityExtensions.<FromJsonWithTypeAnnotation>g__SkipWhiteOrThrow|8_0, X0, X1
	117 Move W22, W0
	118 Move [X31+4], W0
	119 Move X0, X20
	120 Move W1, W22
	121 Move X2, X31
	122 Call String.get_Chars, X0, X1
	123 And W8, W0, 0xFFFF
	124 NotImplemented "Instruction CMP not yet implemented."
	125 Move W8, 1
	126 Move X8, 0x2197000
	127 Move X8, [X8+664]
	128 Move X0, X21
	129 Move X1, [X8]
	130 Call List`1<Object>.ToArray, X0
	131 Move X20, [X31+48]
	132 Move X19, [X31+56]
	133 Move X22, [X31+32]
	134 Move X21, [X31+40]
	135 Move X30, [X31+16]
	136 Move X23, [X31+24]
	137 Add X31, X31, 64
	138 Return X0
	139 Move [X31], W22
	140 Move X0, 0x2170000
	141 Move X0, [X0+1880]
	142 Call 0x1C17D08
	143 Add X1, X31, 0
	144 Call 0x1C17E04
	145 Move X19, X0
	146 Move X0, 0x2197000
	147 Move X0, [X0+672]
	148 Call 0x1C17D08
	149 Move X1, X19
	150 Move X2, X31
	151 Call String.Format, X0, X1
	152 Move X19, X0
	153 Move X0, 0x2170000
	154 Move X0, [X0+1456]
	155 Call 0x1C17D08
	156 Call 0x1C17F10
	157 Move X1, X19
	158 Move X2, X31
	159 Move X20, X0
	160 Call InvalidOperationException..ctor, X0, X1
	161 Move X0, 0x2197000
	162 Move X0, [X0+680]
	163 Call 0x1C17D08
	164 Move X1, X0
	165 Move X0, X20
	166 Call 0x1C17DEC

Method: System.Object FromJsonWithTypeAnnotationInternal(System.String json, Fusion.JsonUtilityExtensions/TypeResolverDelegate typeResolver = null, System.Collections.IList targetList = null)

Disassembly:
	0x01F84D38 LDR X8, [X0 + 0xB8]
	0x01F84D3C LDR X9, [X9 + 0x3B0]
	0x01F84D40 LDR X21, [X8]
	0x01F84D44 LDR X0, [X9]
	0x01F84D48 BL 0x1C16F10
	0x01F84D4C ADRP X8, 0x2196000
	0x01F84D50 LDR X8, [X8 + 0x3C0]
	0x01F84D54 MOV X20, X0
	0x01F84D58 LDR X2, [X8]
	0x01F84D5C MOV X1, X21
	0x01F84D60 MOV X3, X31
	0x01F84D64 BL 0x24AD1FC
	0x01F84D68 LDR X8, [X24]
	0x01F84D6C LDR X8, [X8 + 0xB8]
	0x01F84D70 STR X20, [X8 + 0x10]
	0x01F84D74 CBZ X19, 0x1F854C4
	0x01F84D78 ADRP X8, 0x2196000
	0x01F84D7C LDR X8, [X8 + 0x350]
	0x01F84D80 LDR X2, [X8]
	0x01F84D84 MOV X0, X19
	0x01F84D88 MOV X1, X20
	0x01F84D8C BL 0x301D8DC
	0x01F84D90 LDR X8, [X31 + 0x68]
	0x01F84D94 LDR X0, [X8 + 0x10]
	0x01F84D98 CBZ X0, 0x1F854C8
	0x01F84D9C LDR X8, [X8 + 0x20]
	0x01F84DA0 CBZ X8, 0x1F854CC
	0x01F84DA4 LDR W9, [X0 + 0x18]
	0x01F84DA8 LDR W8, [X8 + 0x18]
	0x01F84DAC CMP W9, 0x1
	0x01F84DB0 STR W8, [X31 + 0x14]
	0x01F84DB4 STP X9, X27, [X31 + 0x18]
	0x01F84DB8 B.LT 0x1F853AC
	0x01F84DBC STR X31, [X31 + 0x28]
	0x01F84DC0 ADRP X29, 0x217A000
	0x01F84DC4 ADRP X25, 0x2196000
	0x01F84DC8 ADRP X26, 0x2196000
	0x01F84DCC LDR X29, [X29 + 0xE08]
	0x01F84DD0 LDR X25, [X25 + 0x378]
	0x01F84DD4 LDR X26, [X26 + 0x380]
	0x01F84DD8 MOV W19, W31
	0x01F84DDC MOVZ W27, 0x1
	0x01F84DE0 LDR X2, [X29]
	0x01F84DE4 MOV W1, W19
	0x01F84DE8 BL 0x301BCCC
	0x01F84DEC MOV X20, X0
	0x01F84DF0 CBZ X0, 0x1F8544C
	0x01F84DF4 MOV X0, X20
	0x01F84DF8 MOV X1, X31
	0x01F84DFC BL 0x3C32ECC
	0x01F84E00 CBZ X0, 0x1F85450
	0x01F84E04 MOV X1, X31
	0x01F84E08 BL 0x3C35834
	0x01F84E0C STR X31, [X31 + 0x48]
	0x01F84E10 TBNZ X0, 0x0, 0x1F84E80
	0x01F84E14 LDR X0, [X31 + 0x68]
	0x01F84E18 LDR X8, [X0]
	0x01F84E1C LDP X9, X3, [X8 + 0x188]
	0x01F84E20 ADD X2, X31, 0x44
	0x01F84E24 MOV X1, X20
	0x01F84E28 BLR X9
	0x01F84E2C TBZ X0, 0x0, 0x1F84E4C
	0x01F84E30 ADRP X8, 0x2170000
	0x01F84E34 LDR W1, [X31 + 0x44]
	0x01F84E38 LDR X8, [X8 + 0x470]
	0x01F84E3C LDR X2, [X8]
	0x01F84E40 ADD X0, X31, 0x48
	0x01F84E44 BL 0x24341FC
	0x01F84E48 B 0x1F84E80
	0x01F84E4C ADRP X8, 0x2196000
	0x01F84E50 LDR X8, [X8 + 0x3E8]
	0x01F84E54 LDR X0, [X8]
	0x01F84E58 MOV X1, X20
	0x01F84E5C MOV X2, X31
	0x01F84E60 BL 0x321EFD0
	0x01F84E64 ADRP X8, 0x2196000
	0x01F84E68 LDR X8, [X8 + 0x3D8]
	0x01F84E6C LDR X1, [X8]
	0x01F84E70 MOV X2, X31
	0x01F84E74 BL 0x321B938
	0x01F84E78 MOV X1, X31
	0x01F84E7C BL 0x1F84770
	0x01F84E80 LDR X8, [X31 + 0x68]
	0x01F84E84 LDR X9, [X8 + 0x30]
	0x01F84E88 CBZ X9, 0x1F85444
	0x01F84E8C LDP W2, W10, [X9 + 0x18]
	0x01F84E90 ADD W10, W10, 0x1
	0x01F84E94 CMP W2, 0x1
	0x01F84E98 STP W31, W10, [X9 + 0x18]
	0x01F84E9C B.LT 0x1F84EB4
	0x01F84EA0 LDR X0, [X9 + 0x10]
	0x01F84EA4 MOV W1, W31
	0x01F84EA8 MOV X3, X31
	0x01F84EAC BL 0x339FA34
	0x01F84EB0 LDR X8, [X31 + 0x68]
	0x01F84EB4 LDR X0, [X8 + 0x18]
	0x01F84EB8 CBZ X0, 0x1F85448
	0x01F84EBC LDR X2, [X25]
	0x01F84EC0 ADD X8, X31, 0xD0
	0x01F84EC4 MOV W1, W19
	0x01F84EC8 BL 0x3113CF4
	0x01F84ECC LDR V0, [X31 + 0xD]
	0x01F84ED0 LDR X8, [X31 + 0xE0]
	0x01F84ED4 STR V0, [X31 + 0x13]
	0x01F84ED8 STR X8, [X31 + 0x140]
	0x01F84EDC ADD X0, X31, 0x130
	0x01F84EE0 BL 0x1F85A88
	0x01F84EE4 LDR X9, [X31 + 0x68]
	0x01F84EE8 LDR X8, [X9 + 0x20]
	0x01F84EEC CBZ X8, 0x1F85440
	0x01F84EF0 LDR W10, [X8 + 0x18]
	0x01F84EF4 SUBS W21, W10, 0x1
	0x01F84EF8 B.MI 0x1F85158
	0x01F84EFC LDR X2, [X26]
	0x01F84F00 MOV X0, X8
	0x01F84F04 MOV W1, W21
	0x01F84F08 BL 0x301BCCC
	0x01F84F0C MOV X22, X0
	0x01F84F10 CBZ X0, 0x1F8540C
	0x01F84F14 LDR X8, [X31 + 0x68]
	0x01F84F18 LDR X23, [X8 + 0x28]
	0x01F84F1C MOV X0, X22
	0x01F84F20 MOV X1, X31
	0x01F84F24 BL 0x3C32E90
	0x01F84F28 MOV X1, X0
	0x01F84F2C CBZ X23, 0x1F85408
	0x01F84F30 ADD X8, X31, 0xD0
	0x01F84F34 MOV X0, X23
	0x01F84F38 BL 0x1F85698
	0x01F84F3C LDR V0, [X31 + 0xD]
	0x01F84F40 LDR X8, [X31 + 0xE0]
	0x01F84F44 LDR X9, [X31 + 0x68]
	0x01F84F48 STR V0, [X31 + 0x11]
	0x01F84F4C STR X8, [X31 + 0x120]
	0x01F84F50 LDR X0, [X9 + 0x28]
	0x01F84F54 CBZ X0, 0x1F85404
	0x01F84F58 LDRH W3, [X31 + 0x144]
	0x01F84F5C LDRH W8, [X31 + 0x124]
	0x01F84F60 CMP W3, W8
	0x01F84F64 B.HI 0x1F84F80
	0x01F84F68 ADD X1, X31, 0x130
	0x01F84F6C ADD X2, X31, 0x110
	0x01F84F70 BL 0x1F8609C
	0x01F84F74 CBZ W0, 0x1F84FEC
	0x01F84F78 LDR X8, [X31 + 0x68]
	0x01F84F7C LDR X0, [X8 + 0x28]
	0x01F84F80 LDR V0, [X31 + 0x13]
	0x01F84F84 LDR X8, [X31 + 0x140]
	0x01F84F88 LDR V1, [X31 + 0x11]
	0x01F84F8C LDR X9, [X31 + 0x120]
	0x01F84F90 STR V0, [X31 + 0xD]
	0x01F84F94 STR X8, [X31 + 0xE0]
	0x01F84F98 STR V1, [X31 + 0xB]
	0x01F84F9C STR X9, [X31 + 0xC0]
	0x01F84FA0 CBZ X0, 0x1F85414
	0x01F84FA4 LDR V0, [X31 + 0xD]
	0x01F84FA8 LDR X8, [X31 + 0xE0]
	0x01F84FAC LDR V1, [X31 + 0xB]
	0x01F84FB0 LDR X9, [X31 + 0xC0]
	0x01F84FB4 STR V0, [X31 + 0x9]
	0x01F84FB8 STR X8, [X31 + 0xA0]
	0x01F84FBC STR V1, [X31 + 0x7]
	0x01F84FC0 STR X9, [X31 + 0x80]
	0x01F84FC4 ADD X1, X31, 0x90
	0x01F84FC8 ADD X2, X31, 0x70
	0x01F84FCC BL 0x1F85C10
	0x01F84FD0 TBZ X0, 0x1F, 0x1F85154
	0x01F84FD4 SUBS W21, W21, 0x1
	0x01F84FD8 B.MI 0x1F85154
	0x01F84FDC LDR X8, [X31 + 0x68]
	0x01F84FE0 LDR X8, [X8 + 0x20]
	0x01F84FE4 CBNZ X8, 0x1F84EFC
	0x01F84FE8 B 0x1F85410
	0x01F84FEC ADRP X8, 0x2179000
	0x01F84FF0 LDR X9, [X22]
	0x01F84FF4 LDR X8, [X8 + 0x4D8]
	0x01F84FF8 LDRB W11, [X9 + 0x130]
	0x01F84FFC LDR X8, [X8]
	0x01F85000 LDRB W10, [X8 + 0x130]
	0x01F85004 CMP W11, W10
	0x01F85008 B.CC 0x1F85084
	0x01F8500C LDR X9, [X9 + 0xC8]
	0x01F85010 ADD X9, X9, X10, 0x3, LSL
	0x01F85014 LDUR X9, [X9 - 0x8]
	0x01F85018 CMP X9, X8
	0x01F8501C B.NE 0x1F85084
	0x01F85020 LDR X8, [X31 + 0x68]
	0x01F85024 LDR X0, [X8 + 0x30]
	0x01F85028 CBZ X0, 0x1F85464
	0x01F8502C ADRP X9, 0x2195000
	0x01F85030 LDR W10, [X0 + 0x1C]
	0x01F85034 LDR X8, [X0 + 0x10]
	0x01F85038 LDR X9, [X9 + 0x328]
	0x01F8503C ADD W10, W10, 0x1
	0x01F85040 LDR X9, [X9]
	0x01F85044 STR W10, [X0 + 0x1C]
	0x01F85048 CBZ X8, 0x1F85460
	0x01F8504C LDRSW X10, [X0 + 0x18]
	0x01F85050 LDR W11, [X8 + 0x18]
	0x01F85054 CMP W10, W11
	0x01F85058 B.CS 0x1F85070

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+32], X24
	004 Move [X31+40], X23
	005 Move [X31+48], X22
	006 Move [X31+56], X21
	007 Move [X31+64], X20
	008 Move [X31+72], X19
	009 Move X22, 0x2456000
	010 Move W8, [X22+1716]
	011 Move X19, X2
	012 Move X21, X1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {32}
	018 Move X0, 0x2177000
	019 Move X0, [X0+760]
	020 Call 0x1C17CF4
	021 Move X0, 0x2197000
	022 Move X0, [X0+664]
	023 Call 0x1C17CF4
	024 Move X0, 0x2178000
	025 Move X0, [X0+3888]
	026 Call 0x1C17CF4
	027 Move X0, 0x2175000
	028 Move X0, [X0+1856]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X22+1716], W8
	032 Add X1, X31, 24
	033 Move W0, W31
	034 Move [X31+24], X20
	035 Call JsonUtilityExtensions.<FromJsonWithTypeAnnotationInternal>g__SkipWhiteOrThrow|9_0, X0, X1
	036 Move [X31+12], W0
	037 Compare X20, 0
	038 JumpIfEqual {165}
	039 Move W23, W0
	040 Move X0, X20
	041 Move W1, W23
	042 Move X2, X31
	043 Call String.get_Chars, X0, X1
	044 And W8, W0, 0xFFFF
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Move X22, X19
	047 Compare X19, 0
	048 JumpIfNotEqual {58}
	049 Move X8, 0x2175000
	050 Move X8, [X8+1856]
	051 Move X0, [X8]
	052 Call 0x1C17F10
	053 Move X8, 0x2178000
	054 Move X8, [X8+3888]
	055 Move X22, X0
	056 Move X1, [X8]
	057 Call List`1<Object>..ctor, X0
	058 Add W0, W23, 1
	059 Add X1, X31, 24
	060 Call JsonUtilityExtensions.<FromJsonWithTypeAnnotationInternal>g__SkipWhiteOrThrow|9_0, X0, X1
	061 Move W23, W0
	062 Move [X31+12], W0
	063 Move X0, X20
	064 Move W1, W23
	065 Move X2, X31
	066 Call String.get_Chars, X0, X1
	067 And W8, W0, 0xFFFF
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Move X24, 0x2177000
	070 Move X24, [X24+760]
	071 Move W8, W31
	072 Move TEMP, X8
	073 And TEMP, TEMP, 1
	074 Compare TEMP, 1
	075 JumpIfNotEqual {86}
	076 Move X0, X20
	077 Move W1, W23
	078 Move X2, X31
	079 Call String.get_Chars, X0, X1
	080 And W8, W0, 0xFFFF
	081 NotImplemented "Instruction CMP not yet implemented."
	082 Add W0, W23, 1
	083 Add X1, X31, 24
	084 Call JsonUtilityExtensions.<FromJsonWithTypeAnnotationInternal>g__SkipWhiteOrThrow|9_0, X0, X1
	085 Move [X31+12], W0
	086 Add X0, X31, 12
	087 Move X1, X20
	088 Move X2, X21
	089 Call JsonUtilityExtensions.FromJsonWithTypeAnnotationToObject, X0, X1, X2
	090 Compare X22, 0
	091 JumpIfEqual {165}
	092 Move X8, [X22]
	093 Move X1, [X24]
	094 Move X23, X0
	095 NotImplemented "Instruction LDRH not yet implemented."
	096 Compare X9, 0
	097 JumpIfEqual {104}
	098 Move X10, [X8+176]
	099 Add X10, X10, 8
	100 NotImplemented "Instruction LDUR not yet implemented."
	101 NotImplemented "Instruction CMP not yet implemented."
	102 Subtract X9, X9, 1
	103 Add X10, X10, 16
	104 Move W2, 2
	105 Move X0, X22
	106 Call 0x1C5D788
	107 Move W9, [X10]
	108 Add W9, W9, 2
	109 Add X8, X8, W9
	110 Add X0, X8, 312
	111 Move X8, [X0]
	112 Move X2, [X0+8]
	113 Move X0, X22
	114 Move X1, X23
	115 NotImplemented "Instruction BLR not yet implemented."
	116 Move W0, [X31+12]
	117 Add X1, X31, 24
	118 Call JsonUtilityExtensions.<FromJsonWithTypeAnnotationInternal>g__SkipWhiteOrThrow|9_0, X0, X1
	119 Move W23, W0
	120 Move [X31+12], W0
	121 Move X0, X20
	122 Move W1, W23
	123 Move X2, X31
	124 Call String.get_Chars, X0, X1
	125 And W8, W0, 0xFFFF
	126 NotImplemented "Instruction CMP not yet implemented."
	127 Move W8, 1
	128 Compare X19, 0
	129 JumpIfNotEqual {155}
	130 Compare X22, 0
	131 JumpIfEqual {165}
	132 Move X9, 0x2175000
	133 Move X9, [X9+1856]
	134 Move X8, [X22]
	135 Move X1, [X9]
	136 Move W10, [X8+304]
	137 Move W9, [X1+304]
	138 NotImplemented "Instruction CMP not yet implemented."
	139 Move X8, [X8+200]
	140 Add X8, X8, X9
	141 NotImplemented "Instruction LDUR not yet implemented."
	142 NotImplemented "Instruction CMP not yet implemented."
	143 Move X8, 0x2197000
	144 Move X8, [X8+664]
	145 Move X0, X22
	146 Move X1, [X8]
	147 Call List`1<Object>.ToArray, X0
	148 Compare X19, 0
	149 JumpIfNotEqual {194}
	150 Add X0, X31, 12
	151 Move X1, X20
	152 Move X2, X21
	153 Call JsonUtilityExtensions.FromJsonWithTypeAnnotationToObject, X0, X1, X2
	154 Move X19, X0
	155 Move X0, X19
	156 Move X20, [X31+64]
	157 Move X19, [X31+72]
	158 Move X22, [X31+48]
	159 Move X21, [X31+56]
	160 Move X24, [X31+32]
	161 Move X23, [X31+40]
	162 Move X30, [X31+16]
	163 Add X31, X31, 80
	164 Return X0
	165 Call 0x1C17F20
	166 Move [X31+8], W23
	167 Move X0, 0x2170000
	168 Move X0, [X0+1880]
	169 Call 0x1C17D08
	170 Add X1, X31, 8
	171 Call 0x1C17E04
	172 Move X19, X0
	173 Move X0, 0x2197000
	174 Move X0, [X0+672]
	175 Call 0x1C17D08
	176 Move X1, X19
	177 Move X2, X31
	178 Call String.Format, X0, X1
	179 Move X19, X0
	180 Move X0, 0x2170000
	181 Move X0, [X0+1456]
	182 Call 0x1C17D08
	183 Call 0x1C17F10
	184 Move X1, X19
	185 Move X2, X31
	186 Move X20, X0
	187 Call InvalidOperationException..ctor, X0, X1
	188 Move X0, 0x2197000
	189 Move X0, [X0+760]
	190 Call 0x1C17D08
	191 Move X1, X0
	192 Move X0, X20
	193 Call 0x1C17DEC
	194 Move X0, X20
	195 Call 0x19913C0
	196 Move X0, X20
	197 Move W1, W23
	198 Move X2, X31
	199 Call String.get_Chars, X0, X1
	200 NotImplemented "Instruction STRH not yet implemented."
	201 Move X0, 0x2171000
	202 Move X0, [X0+368]
	203 Call 0x1C17D08
	204 Add X1, X31, 8
	205 Call 0x1C17E04
	206 Move X19, X0
	207 Move X0, 0x2196000
	208 Move X0, [X0+768]
	209 Move X0, X22
	210 Call 0x1C181E0

Method: System.Void ToJsonInternal(System.Object obj, System.IO.TextWriter writer, System.Nullable`1<System.Int32> integerEnquoteMinDigits = null, Fusion.JsonUtilityExtensions/TypeSerializerDelegate typeResolver = null, Fusion.JsonUtilityExtensions/InstanceIDHandlerDelegate instanceIDHandler = null)

Disassembly:
	0x01F840E0 LDR X0, [X20]
	0x01F840E4 ADD W19, W19, 0x1
	0x01F840E8 CBNZ X0, 0x1F840A0
	0x01F840EC BL 0x1C16F20
	0x01F840F0 LDR X0, [X20]
	0x01F840F4 CBZ X0, 0x1F840EC
	0x01F840F8 LDR W8, [X0 + 0x10]
	0x01F840FC CMP W8, W19
	0x01F84100 B.EQ 0x1F84118
	0x01F84104 MOV W0, W19
	0x01F84108 LDP X20, X19, [X31 + 0x20]
	0x01F8410C LDP X22, X21, [X31 + 0x10]
	0x01F84110 LDR X30, [X31], #0x30
	0x01F84114 RET
	0x01F84118 STR W19, [X31 + 0xC]
	0x01F8411C ADRP X0, 0x216F000
	0x01F84120 LDR X0, [X0 + 0x758]
	0x01F84124 BL 0x1C16D08
	0x01F84128 ADD X1, X31, 0xC
	0x01F8412C BL 0x1C16E04
	0x01F84130 MOV X19, X0
	0x01F84134 ADRP X0, 0x2196000
	0x01F84138 LDR X0, [X0 + 0x2B0]
	0x01F8413C BL 0x1C16D08
	0x01F84140 MOV X1, X19
	0x01F84144 MOV X2, X31
	0x01F84148 BL 0x321EFD0
	0x01F8414C MOV X19, X0
	0x01F84150 ADRP X0, 0x216F000
	0x01F84154 LDR X0, [X0 + 0x5B0]
	0x01F84158 BL 0x1C16D08
	0x01F8415C BL 0x1C16F10
	0x01F84160 MOV X1, X19
	0x01F84164 MOV X2, X31
	0x01F84168 MOV X20, X0
	0x01F8416C BL 0x337DF1C
	0x01F84170 ADRP X0, 0x2196000
	0x01F84174 LDR X0, [X0 + 0x308]
	0x01F84178 BL 0x1C16D08
	0x01F8417C MOV X1, X0
	0x01F84180 MOV X0, X20
	0x01F84184 BL 0x1C16DEC
	0x01F84188 STR X30, [X31 - 0x40]!
	0x01F8418C STP X24, X23, [X31 + 0x10]
	0x01F84190 STP X22, X21, [X31 + 0x20]
	0x01F84194 STP X20, X19, [X31 + 0x30]
	0x01F84198 CBZ X0, 0x1F842C0
	0x01F8419C MOV W21, W2
	0x01F841A0 MOV X2, X31
	0x01F841A4 MOV W20, W3
	0x01F841A8 MOV W19, W1
	0x01F841AC MOV X22, X0
	0x01F841B0 BL 0x3222A1C
	0x01F841B4 AND W8, W0, 0xFFFF
	0x01F841B8 CMP W8, W21, UXTH
	0x01F841BC B.NE 0x1F842A4
	0x01F841C0 LDR W8, [X22 + 0x10]
	0x01F841C4 CMP W8, W19
	0x01F841C8 B.LE 0x1F842A4
	0x01F841CC MOV W24, W31
	0x01F841D0 MOV X0, X22
	0x01F841D4 MOV W1, W19
	0x01F841D8 MOV X2, X31
	0x01F841DC BL 0x3222A1C
	0x01F841E0 AND W8, W0, 0xFFFF
	0x01F841E4 CMP W8, 0x22
	0x01F841E8 B.NE 0x1F8424C
	0x01F841EC LDR W8, [X22 + 0x10]
	0x01F841F0 CMP W19, W8
	0x01F841F4 B.GE 0x1F84294
	0x01F841F8 MOV W23, W19
	0x01F841FC ADD W19, W19, 0x1
	0x01F84200 MOV X0, X22
	0x01F84204 MOV W1, W19
	0x01F84208 MOV X2, X31
	0x01F8420C BL 0x3222A1C
	0x01F84210 AND W8, W0, 0xFFFF
	0x01F84214 CMP W8, 0x22
	0x01F84218 B.NE 0x1F84238
	0x01F8421C MOV X0, X22
	0x01F84220 MOV W1, W23
	0x01F84224 MOV X2, X31
	0x01F84228 BL 0x3222A1C
	0x01F8422C AND W8, W0, 0xFFFF
	0x01F84230 CMP W8, 0x5C
	0x01F84234 B.NE 0x1F84244
	0x01F84238 LDR W8, [X22 + 0x10]
	0x01F8423C CMP W19, W8
	0x01F84240 B.LT 0x1F841F8
	0x01F84244 ADD W19, W23, 0x1
	0x01F84248 B 0x1F84294
	0x01F8424C MOV X0, X22
	0x01F84250 MOV W1, W19
	0x01F84254 MOV X2, X31
	0x01F84258 BL 0x3222A1C
	0x01F8425C AND W8, W0, 0xFFFF
	0x01F84260 CMP W8, W21, UXTH
	0x01F84264 B.NE 0x1F84270
	0x01F84268 ADD W24, W24, 0x1
	0x01F8426C B 0x1F84294
	0x01F84270 MOV X0, X22
	0x01F84274 MOV W1, W19
	0x01F84278 MOV X2, X31
	0x01F8427C BL 0x3222A1C
	0x01F84280 AND W8, W0, 0xFFFF
	0x01F84284 CMP W8, W20, UXTH
	0x01F84288 B.NE 0x1F84294
	0x01F8428C SUBS W24, W24, 0x1
	0x01F84290 B.EQ 0x1F842A8
	0x01F84294 LDR W8, [X22 + 0x10]
	0x01F84298 ADD W19, W19, 0x1
	0x01F8429C CMP W19, W8
	0x01F842A0 B.LT 0x1F841D0
	0x01F842A4 MOVN W19, 0x0
	0x01F842A8 MOV W0, W19
	0x01F842AC LDP X20, X19, [X31 + 0x30]
	0x01F842B0 LDP X22, X21, [X31 + 0x20]
	0x01F842B4 LDP X24, X23, [X31 + 0x10]
	0x01F842B8 LDR X30, [X31], #0x40
	0x01F842BC RET
	0x01F842C0 BL 0x1C16F20
	0x01F842C4 MOVZ W2, 0x7B
	0x01F842C8 MOVZ W3, 0x7D
	0x01F842CC B 0x1F84188
	0x01F842D0 STP X30, X21, [X31 - 0x20]!
	0x01F842D4 STP X20, X19, [X31 + 0x10]
	0x01F842D8 LDR X8, [X2 + 0x8]
	0x01F842DC STP X1, X2, [X0 + 0x20]
	0x01F842E0 MOV X19, X0
	0x01F842E4 MOV X20, X1
	0x01F842E8 STR X8, [X0 + 0x10]
	0x01F842EC LDRB W21, [X2 + 0x52]
	0x01F842F0 STR X0, [X0 + 0x40]
	0x01F842F4 MOV X0, X2
	0x01F842F8 BL 0x1C16D84
	0x01F842FC TBZ X0, 0x0, 0x1F84314
	0x01F84300 CMP W21, 0x1
	0x01F84304 B.NE 0x1F8431C
	0x01F84308 ADRP X8, 0xFFFFFFFFFFA15000
	0x01F8430C ADD X8, X8, 0xEAC
	0x01F84310 B 0x1F84338
	0x01F84314 CBZ W21, 0x1F84330
	0x01F84318 CBZ X20, 0x1F84354
	0x01F8431C LDR X8, [X19 + 0x10]
	0x01F84320 LDR X9, [X19 + 0x20]
	0x01F84324 STR X8, [X19 + 0x18]
	0x01F84328 STR X9, [X19 + 0x40]
	0x01F8432C B 0x1F8433C
	0x01F84330 ADRP X8, 0xFFFFFFFFFFA15000
	0x01F84334 ADD X8, X8, 0xE8C
	0x01F84338 STR X8, [X19 + 0x18]
	0x01F8433C ADRP X8, 0xFFFFFFFFFFA15000
	0x01F84340 ADD X8, X8, 0xE3C
	0x01F84344 STR X8, [X19 + 0x38]
	0x01F84348 LDP X20, X19, [X31 + 0x10]
	0x01F8434C LDP X30, X21, [X31], #0x20
	0x01F84350 RET
	0x01F84354 ADRP X1, 0xFFFFFFFFFEB97000
	0x01F84358 ADD X1, X1, 0xEE3
	0x01F8435C MOV X0, X31
	0x01F84360 BL 0x1C16F3C
	0x01F84364 MOV X1, X31
	0x01F84368 BL 0x1C16DEC
	0x01F8436C LDR X8, [X0 + 0x40]
	0x01F84370 LDR X3, [X0 + 0x18]
	0x01F84374 LDR X2, [X0 + 0x28]
	0x01F84378 MOV X0, X8
	0x01F8437C BR X3
	0x01F84380 SUB X31, X31, 0x20
	0x01F84384 STP X31, X30, [X31 + 0x8]
	0x01F84388 STR X1, [X31]
	0x01F8438C ADD X1, X31, 0x0
	0x01F84390 BL 0x1C16CB0
	0x01F84394 LDR X30, [X31 + 0x10]
	0x01F84398 ADD X31, X31, 0x20
	0x01F8439C RET
	0x01F843A0 MOV X0, X1
	0x01F843A4 MOV X1, X31
	0x01F843A8 B 0x1C16CB4
	0x01F843AC STR X30, [X31 - 0x30]!
	0x01F843B0 STP X22, X21, [X31 + 0x10]
	0x01F843B4 STP X20, X19, [X31 + 0x20]
	0x01F843B8 LDR X8, [X2 + 0x8]
	0x01F843BC STP X1, X2, [X0 + 0x20]
	0x01F843C0 MOV X19, X0
	0x01F843C4 MOV X20, X2
	0x01F843C8 STR X8, [X0 + 0x10]
	0x01F843CC LDRB W22, [X2 + 0x52]
	0x01F843D0 STR X0, [X0 + 0x40]
	0x01F843D4 MOV X0, X2
	0x01F843D8 MOV X21, X1
	0x01F843DC BL 0x1C16D84
	0x01F843E0 TBZ X0, 0x0, 0x1F843F8
	0x01F843E4 CMP W22, 0x1
	0x01F843E8 B.NE 0x1F84400
	0x01F843EC ADRP X8, 0xFFFFFFFFFFA15000
	0x01F843F0 ADD X8, X8, 0xF2C
	0x01F843F4 B 0x1F84474
	0x01F843F8 CBZ W22, 0x1F84414
	0x01F843FC CBZ X21, 0x1F84494
	0x01F84400 LDR X8, [X19 + 0x10]
	0x01F84404 LDR X9, [X19 + 0x20]
	0x01F84408 STR X8, [X19 + 0x18]
	0x01F8440C STR X9, [X19 + 0x40]
	0x01F84410 B 0x1F84478
	0x01F84414 LDRB W8, [X19 + 0x70]
	0x01F84418 CBZ W8, 0x1F84444
	0x01F8441C MOV X0, X20
	0x01F84420 BL 0x1C16D7C
	0x01F84424 MOV W21, W0
	0x01F84428 MOV X0, X20
	0x01F8442C BL 0x1C17238
	0x01F84430 TBZ X21, 0x0, 0x1F84450
	0x01F84434 TBZ X0, 0x0, 0x1F84460
	0x01F84438 ADRP X8, 0xFFFFFFFFFFA16000
	0x01F8443C ADD X8, X8, 0x28
	0x01F84440 B 0x1F84474
	0x01F84444 ADRP X8, 0xFFFFFFFFFFA15000
	0x01F84448 ADD X8, X8, 0xF0C
	0x01F8444C B 0x1F84474
	0x01F84450 TBZ X0, 0x0, 0x1F8446C
	0x01F84454 ADRP X8, 0xFFFFFFFFFFA15000
	0x01F84458 ADD X8, X8, 0xF68
	0x01F8445C B 0x1F84474
	0x01F84460 ADRP X8, 0xFFFFFFFFFFA15000
	0x01F84464 ADD X8, X8, 0xFEC
	0x01F84468 B 0x1F84474
	0x01F8446C ADRP X8, 0xFFFFFFFFFFA15000
	0x01F84470 ADD X8, X8, 0xF3C
	0x01F84474 STR X8, [X19 + 0x18]
	0x01F84478 ADRP X8, 0xFFFFFFFFFFA15000
	0x01F8447C ADD X8, X8, 0xEBC
	0x01F84480 STR X8, [X19 + 0x38]
	0x01F84484 LDP X20, X19, [X31 + 0x20]
	0x01F84488 LDP X22, X21, [X31 + 0x10]
	0x01F8448C LDR X30, [X31], #0x30
	0x01F84490 RET
	0x01F84494 ADRP X1, 0xFFFFFFFFFEB97000
	0x01F84498 ADD X1, X1, 0xEE3
	0x01F8449C MOV X0, X31
	0x01F844A0 BL 0x1C16F3C
	0x01F844A4 MOV X1, X31
	0x01F844A8 BL 0x1C16DEC
	0x01F844AC LDR X8, [X0 + 0x40]
	0x01F844B0 LDR X3, [X0 + 0x18]
	0x01F844B4 LDR X2, [X0 + 0x28]
	0x01F844B8 MOV X0, X8
	0x01F844BC BR X3
	0x01F844C0 SUB X31, X31, 0x20
	0x01F844C4 STP X31, X30, [X31 + 0x8]
	0x01F844C8 STR X1, [X31]
	0x01F844CC ADD X1, X31, 0x0
	0x01F844D0 BL 0x1C16CB0
	0x01F844D4 LDR X30, [X31 + 0x10]
	0x01F844D8 ADD X31, X31, 0x20
	0x01F844DC RET
	0x01F844E0 MOV X0, X1
	0x01F844E4 MOV X1, X31
	0x01F844E8 B 0x1C16CB4
	0x01F844EC STR X30, [X31 - 0x30]!
	0x01F844F0 STP X22, X21, [X31 + 0x10]
	0x01F844F4 STP X20, X19, [X31 + 0x20]
	0x01F844F8 LDR X8, [X2 + 0x8]
	0x01F844FC STP X1, X2, [X0 + 0x20]
	0x01F84500 MOV X19, X0
	0x01F84504 MOV X20, X2
	0x01F84508 STR X8, [X0 + 0x10]
	0x01F8450C LDRB W22, [X2 + 0x52]
	0x01F84510 STR X0, [X0 + 0x40]
	0x01F84514 MOV X0, X2
	0x01F84518 MOV X21, X1
	0x01F8451C BL 0x1C16D84
	0x01F84520 TBZ X0, 0x0, 0x1F84538
	0x01F84524 CMP W22, 0x2
	0x01F84528 B.NE 0x1F84574
	0x01F8452C ADRP X8, 0xFFFFFFFFFFA16000
	0x01F84530 ADD X8, X8, 0x138
	0x01F84534 B 0x1F845B8
	0x01F84538 CMP W22, 0x1
	0x01F8453C B.NE 0x1F84570
	0x01F84540 LDRB W8, [X19 + 0x70]
	0x01F84544 CBZ W8, 0x1F84588
	0x01F84548 MOV X0, X20
	0x01F8454C BL 0x1C16D7C
	0x01F84550 MOV W21, W0
	0x01F84554 MOV X0, X20
	0x01F84558 BL 0x1C17238
	0x01F8455C TBZ X21, 0x0, 0x1F84594
	0x01F84560 TBZ X0, 0x0, 0x1F845A4
	0x01F84564 ADRP X8, 0xFFFFFFFFFFA16000
	0x01F84568 ADD X8, X8, 0x254
	0x01F8456C B 0x1F845B8
	0x01F84570 CBZ X21, 0x1F845D8
	0x01F84574 LDR X8, [X19 + 0x10]
	0x01F84578 LDR X9, [X19 + 0x20]
	0x01F8457C STR X8, [X19 + 0x18]
	0x01F84580 STR X9, [X19 + 0x40]
	0x01F84584 B 0x1F845BC
	0x01F84588 ADRP X8, 0xFFFFFFFFFFA16000
	0x01F8458C ADD X8, X8, 0x114
	0x01F84590 B 0x1F845B8
	0x01F84594 TBZ X0, 0x0, 0x1F845B0
	0x01F84598 ADRP X8, 0xFFFFFFFFFFA16000
	0x01F8459C ADD X8, X8, 0x17C
	0x01F845A0 B 0x1F845B8

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X24, 0x2456000
	015 Move W8, [X24+1717]
	016 Move X21, X4
	017 Move X23, X3
	018 Move X20, X2
	019 Move X19, X1
	020 Move X22, X0
	021 Move [X31+8], X2
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {55}
	026 Move X0, 0x2173000
	027 Move X0, [X0+3832]
	028 Call 0x1C17CF4
	029 Move X0, 0x2173000
	030 Move X0, [X0+3840]
	031 Call 0x1C17CF4
	032 Move X0, 0x2178000
	033 Move X0, [X0+1504]
	034 Call 0x1C17CF4
	035 Move X0, 0x2197000
	036 Move X0, [X0+616]
	037 Call 0x1C17CF4
	038 Move X0, 0x2197000
	039 Move X0, [X0+624]
	040 Call 0x1C17CF4
	041 Move X0, 0x217B000
	042 Move X0, [X0+1752]
	043 Call 0x1C17CF4
	044 Move X0, 0x2197000
	045 Move X0, [X0+632]
	046 Call 0x1C17CF4
	047 Move X0, 0x2197000
	048 Move X0, [X0+640]
	049 Call 0x1C17CF4
	050 Move X0, 0x2197000
	051 Move X0, [X0+648]
	052 Call 0x1C17CF4
	053 Move W8, 1
	054 Move [X24+1717], W8
	055 Move X0, X22
	056 Move X1, X31
	057 Call JsonUtility.ToJson, X0
	058 And W31, W20, 255
	059 Move X20, X0
	060 Move X8, 0x2173000
	061 Move X8, [X8+3840]
	062 Add X0, X31, 8
	063 Move X1, [X8]
	064 Call Nullable`1<Int32>.get_Value, X0
	065 Move W1, W0
	066 Move X0, X20
	067 Call JsonUtilityExtensions.EnquoteIntegers, X0, X1
	068 Move X20, X0
	069 Compare X22, 0
	070 JumpIfEqual {333}
	071 Move X0, X22
	072 Move X1, X31
	073 Call "il2cpp_vm_object_is_inst", X0
	074 Compare X19, 0
	075 JumpIfEqual {333}
	076 Move X9, 0x2197000
	077 Move X8, [X19]
	078 Move X9, [X9+640]
	079 Move X26, 0x2197000
	080 Move X27, 0x2197000
	081 Move X2, [X8+592]
	082 Move X1, [X9]
	083 Move X9, [X8+584]
	084 Move X25, 0x2197000
	085 Move X26, [X26+624]
	086 Move X27, [X27+648]
	087 Move X25, [X25+632]
	088 Move X24, X0
	089 Move X0, X19
	090 NotImplemented "Instruction BLR not yet implemented."
	091 Move X8, [X19]
	092 Move X1, [X26]
	093 Move X0, X19
	094 Move X9, [X8+584]
	095 Move X2, [X8+592]
	096 NotImplemented "Instruction BLR not yet implemented."
	097 Move X8, [X19]
	098 Move X1, [X27]
	099 Move X0, X19
	100 Move X9, [X8+584]
	101 Move X2, [X8+592]
	102 NotImplemented "Instruction BLR not yet implemented."
	103 Compare X23, 0
	104 JumpIfEqual {113}
	105 Move X8, [X23+24]
	106 Move X0, [X23+64]
	107 Move X2, [X23+40]
	108 Move X1, X24
	109 NotImplemented "Instruction BLR not yet implemented."
	110 Move X1, X0
	111 Compare X0, 0
	112 JumpIfNotEqual {124}
	113 Move X8, 0x2178000
	114 Move X8, [X8+1504]
	115 Move X0, [X8]
	116 Move W8, [X0+224]
	117 Compare W8, 0
	118 JumpIfNotEqual {120}
	119 Call 0x1C17DFC
	120 Move X0, X24
	121 Move X1, X31
	122 Call SerializableType.GetShortAssemblyQualifiedName, X0
	123 Move X1, X0
	124 Move X8, [X19]
	125 Move X0, X19
	126 Move X9, [X8+584]
	127 Move X2, [X8+592]
	128 NotImplemented "Instruction BLR not yet implemented."
	129 Move X8, [X19]
	130 Move W1, 34
	131 Move X0, X19
	132 Move X9, [X8+504]
	133 Move X2, [X8+512]
	134 NotImplemented "Instruction BLR not yet implemented."
	135 Move X1, [X25]
	136 Move X0, X20
	137 Move X2, X31
	138 Call String.op_Equality, X0, X1
	139 Move TEMP, X0
	140 And TEMP, TEMP, 1
	141 Compare TEMP, 1
	142 JumpIfNotEqual {151}
	143 Move X9, 0x217B000
	144 Move X8, [X19]
	145 Move X9, [X9+1752]
	146 Move X0, X19
	147 Move X2, [X8+592]
	148 Move X1, [X9]
	149 Move X9, [X8+584]
	150 NotImplemented "Instruction BLR not yet implemented."
	151 Move X8, [X19]
	152 Move W1, 44
	153 Move X0, X19
	154 Move X9, [X8+504]
	155 Move X2, [X8+512]
	156 NotImplemented "Instruction BLR not yet implemented."
	157 Compare X21, 0
	158 JumpIfEqual {261}
	159 Compare X20, 0
	160 JumpIfEqual {333}
	161 Move X29, 0x2197000
	162 Move X29, [X29+616]
	163 Move W2, 1
	164 Move W3, 4
	165 Move X0, X20
	166 Move X1, [X29]
	167 Move X4, X31
	168 Call String.IndexOf, X0, X1, X2, X3
	169 Move X28, 0x2456000
	170 Move TEMP, X0
	171 And TEMP, TEMP, -2147483648
	172 Compare TEMP, -2147483648
	173 JumpIfEqual {272}
	174 Move W26, W0
	175 Move W23, 1
	176 Move X8, [X29]
	177 Compare X8, 0
	178 JumpIfEqual {333}
	179 Move W8, [X8+16]
	180 Move W1, 125
	181 Move X0, X20
	182 Move X3, X31
	183 Add W27, W8, W26
	184 Move W2, W27
	185 Call String.IndexOf, X0, X1, X2
	186 Move W8, [X28+1889]
	187 Move W25, W0
	188 Compare W8, 0
	189 JumpIfNotEqual {195}
	190 Move X0, 0x2197000
	191 Move X0, [X0+656]
	192 Call 0x1C17CF4
	193 Move W8, 1
	194 Move [X28+1889], W8
	195 Move W8, [X20+16]
	196 Subtract W24, W25, W27
	197 Subtract W8, W8, W27
	198 NotImplemented "Instruction CMP not yet implemented."
	199 Move W0, 24
	200 Move X1, X31
	201 Call ThrowHelper.ThrowArgumentOutOfRangeException, X0
	202 Move X0, X20
	203 Move X1, X31
	204 Call String.GetRawStringData, X0
	205 Add X0, X0, W27
	206 Move W1, W24
	207 Move W2, 7
	208 Move X3, X31
	209 Move X4, X31
	210 Call Int32.Parse, X0, X1, X2
	211 Move W8, [X28+1889]
	212 Move W27, W0
	213 Compare W8, 0
	214 JumpIfNotEqual {220}
	215 Move X0, 0x2197000
	216 Move X0, [X0+656]
	217 Call 0x1C17CF4
	218 Move W8, 1
	219 Move [X28+1889], W8
	220 Move W8, [X20+16]
	221 Subtract W26, W26, W23
	222 Subtract W8, W8, W23
	223 NotImplemented "Instruction CMP not yet implemented."
	224 Move W0, 24
	225 Move X1, X31
	226 Call ThrowHelper.ThrowArgumentOutOfRangeException, X0
	227 Move X0, X20
	228 Move X1, X31
	229 Call String.GetRawStringData, X0
	230 Move X8, [X19]
	231 Add X1, X0, W23
	232 Move W2, W26
	233 Move X0, X19
	234 Move X9, [X8+552]
	235 Move X3, [X8+560]
	236 NotImplemented "Instruction BLR not yet implemented."
	237 Move X8, [X21+24]
	238 Move X0, [X21+64]
	239 Move X3, [X21+40]
	240 Move X1, X22
	241 Move W2, W27
	242 NotImplemented "Instruction BLR not yet implemented."
	243 Move X8, [X19]
	244 Move X1, X0
	245 Move X0, X19
	246 Move X9, [X8+584]
	247 Move X2, [X8+592]
	248 NotImplemented "Instruction BLR not yet implemented."
	249 Move X1, [X29]
	250 Add W23, W25, 1
	251 Move W3, 4
	252 Move X0, X20
	253 Move W2, W23
	254 Move X4, X31
	255 Call String.IndexOf, X0, X1, X2, X3
	256 Move W26, W0
	257 Move TEMP, X0
	258 And TEMP, TEMP, -2147483648
	259 Compare TEMP, -2147483648
	260 JumpIfNotEqual {176}
	261 Compare X20, 0
	262 JumpIfEqual {333}
	263 Move W8, [X20+16]
	264 Move X22, 0x2456000
	265 Move W9, [X22+1889]
	266 Subtract W21, W8, 1
	267 Compare W9, 0
	268 JumpIfEqual {296}
	269 Move W9, W21
	270 Compare W8, 0
	271 JumpIfNotEqual {305}
	272 Move W23, 1
	273 Move W8, [X20+16]
	274 Move W9, [X28+1889]
	275 Subtract W21, W8, W23
	276 Compare W9, 0
	277 JumpIfEqual {279}
	278 Move W9, W21
	279 Move X0, 0x2197000
	280 Move X0, [X0+656]
	281 Call 0x1C17CF4
	282 Move W8, 1
	283 Move [X28+1889], W8
	284 Move W8, [X20+16]
	285 Subtract W9, W8, W23
	286 NotImplemented "Instruction CMP not yet implemented."
	287 NotImplemented "Instruction CMP not yet implemented."
	288 Move W0, 24
	289 Move X1, X31
	290 Call ThrowHelper.ThrowArgumentOutOfRangeException, X0
	291 Move X0, X20
	292 Move X1, X31
	293 Call String.GetRawStringData, X0
	294 Move X8, [X19]
	295 Add X1, X0, W23
	296 Move X0, 0x2197000
	297 Move X0, [X0+656]
	298 Call 0x1C17CF4
	299 Move W8, 1
	300 Move [X22+1889], W8
	301 Move W8, [X20+16]
	302 Subtract W9, W8, 1
	303 Compare W8, 0
	304 JumpIfEqual {306}
	305 NotImplemented "Instruction CMP not yet implemented."
	306 Move W0, 24
	307 Move X1, X31
	308 Call ThrowHelper.ThrowArgumentOutOfRangeException, X0
	309 Move X0, X20
	310 Move X1, X31
	311 Call String.GetRawStringData, X0
	312 Move X8, [X19]
	313 Add X1, X0, 2
	314 Move X9, [X8+552]
	315 Move X3, [X8+560]
	316 Move W2, W21
	317 Move X0, X19
	318 NotImplemented "Instruction BLR not yet implemented."
	319 Move X20, [X31+96]
	320 Move X19, [X31+104]
	321 Move X22, [X31+80]
	322 Move X21, [X31+88]
	323 Move X24, [X31+64]
	324 Move X23, [X31+72]
	325 Move X26, [X31+48]
	326 Move X25, [X31+56]
	327 Move X28, [X31+32]
	328 Move X27, [X31+40]
	329 Move X29, [X31+16]
	330 Move X30, [X31+24]
	331 Add X31, X31, 112
	332 Return 
	333 Call 0x1C17F20

Method: System.Object FromJsonWithTypeAnnotationToObject(ref System.Int32 i, System.String json, Fusion.JsonUtilityExtensions/TypeResolverDelegate typeResolver)

Disassembly:
	0x01F84944 BL 0x1C16CF4
	0x01F84948 ADRP X0, 0x217A000
	0x01F8494C LDR X0, [X0 + 0xE08]
	0x01F84950 BL 0x1C16CF4
	0x01F84954 ADRP X0, 0x2196000
	0x01F84958 LDR X0, [X0 + 0x378]
	0x01F8495C BL 0x1C16CF4
	0x01F84960 ADRP X0, 0x2196000
	0x01F84964 LDR X0, [X0 + 0x380]
	0x01F84968 BL 0x1C16CF4
	0x01F8496C ADRP X0, 0x2179000
	0x01F84970 LDR X0, [X0 + 0x4D8]
	0x01F84974 BL 0x1C16CF4
	0x01F84978 ADRP X0, 0x2196000
	0x01F8497C LDR X0, [X0 + 0x388]
	0x01F84980 BL 0x1C16CF4
	0x01F84984 ADRP X0, 0x2196000
	0x01F84988 LDR X0, [X0 + 0x390]
	0x01F8498C BL 0x1C16CF4
	0x01F84990 ADRP X0, 0x2196000
	0x01F84994 LDR X0, [X0 + 0x398]
	0x01F84998 BL 0x1C16CF4
	0x01F8499C ADRP X0, 0x2196000
	0x01F849A0 LDR X0, [X0 + 0x3A0]
	0x01F849A4 BL 0x1C16CF4
	0x01F849A8 ADRP X0, 0x2176000
	0x01F849AC LDR X0, [X0 + 0x5F0]
	0x01F849B0 BL 0x1C16CF4
	0x01F849B4 ADRP X0, 0x2170000
	0x01F849B8 LDR X0, [X0 + 0x470]
	0x01F849BC BL 0x1C16CF4
	0x01F849C0 ADRP X0, 0x2172000
	0x01F849C4 LDR X0, [X0 + 0xEF8]
	0x01F849C8 BL 0x1C16CF4
	0x01F849CC ADRP X0, 0x216F000
	0x01F849D0 LDR X0, [X0 + 0x598]
	0x01F849D4 BL 0x1C16CF4
	0x01F849D8 ADRP X0, 0x2196000
	0x01F849DC LDR X0, [X0 + 0x3A8]
	0x01F849E0 BL 0x1C16CF4
	0x01F849E4 ADRP X0, 0x2196000
	0x01F849E8 LDR X0, [X0 + 0x3B0]
	0x01F849EC BL 0x1C16CF4
	0x01F849F0 ADRP X0, 0x2196000
	0x01F849F4 LDR X0, [X0 + 0x3B8]
	0x01F849F8 BL 0x1C16CF4
	0x01F849FC ADRP X0, 0x2196000
	0x01F84A00 LDR X0, [X0 + 0x3C0]
	0x01F84A04 BL 0x1C16CF4
	0x01F84A08 ADRP X0, 0x2196000
	0x01F84A0C LDR X0, [X0 + 0x3C8]
	0x01F84A10 BL 0x1C16CF4
	0x01F84A14 ADRP X0, 0x2196000
	0x01F84A18 LDR X0, [X0 + 0x3D0]
	0x01F84A1C BL 0x1C16CF4
	0x01F84A20 ADRP X0, 0x2196000
	0x01F84A24 LDR X0, [X0 + 0x3D8]
	0x01F84A28 BL 0x1C16CF4
	0x01F84A2C ADRP X0, 0x2196000
	0x01F84A30 LDR X0, [X0 + 0x3E0]
	0x01F84A34 BL 0x1C16CF4
	0x01F84A38 ADRP X0, 0x2196000
	0x01F84A3C LDR X0, [X0 + 0x3E8]
	0x01F84A40 BL 0x1C16CF4
	0x01F84A44 MOVZ W8, 0x1
	0x01F84A48 STRB W8, [X22 + 0x6BC]
	0x01F84A4C LDR X0, [X21]
	0x01F84A50 STP X31, X31, [X31 + 0x50]
	0x01F84A54 STR X31, [X31 + 0x60]
	0x01F84A58 STP X31, X31, [X31 + 0x40]
	0x01F84A5C STP X31, X31, [X31 + 0x130]
	0x01F84A60 STR X31, [X31 + 0x140]
	0x01F84A64 STP X31, X31, [X31 + 0x110]
	0x01F84A68 STR X31, [X31 + 0x120]
	0x01F84A6C STP X31, X31, [X31 + 0xF0]
	0x01F84A70 STR X31, [X31 + 0x100]
	0x01F84A74 LDR W8, [X0 + 0xE0]
	0x01F84A78 CBNZ W8, 0x1F84A80
	0x01F84A7C BL 0x1C16DFC
	0x01F84A80 MOV X0, X19
	0x01F84A84 MOV X1, X31
	0x01F84A88 MOV X2, X31
	0x01F84A8C BL 0x3C3883C
	0x01F84A90 TBNZ X0, 0x0, 0x1F8546C
	0x01F84A94 CBZ X19, 0x1F85468
	0x01F84A98 ADRP X8, 0x2196000
	0x01F84A9C LDR X8, [X8 + 0x318]
	0x01F84AA0 LDR X2, [X20 + 0x10]
	0x01F84AA4 ADRP X24, 0x2196000
	0x01F84AA8 MOVZ W1, 0x1
	0x01F84AAC LDR X3, [X8]
	0x01F84AB0 LDR X24, [X24 + 0x3C8]
	0x01F84AB4 MOV X0, X19
	0x01F84AB8 BL 0x21E61D0
	0x01F84ABC LDR X0, [X24]
	0x01F84AC0 LDR X21, [X20 + 0x10]
	0x01F84AC4 LDR W8, [X0 + 0xE0]
	0x01F84AC8 CBNZ W8, 0x1F84AD4
	0x01F84ACC BL 0x1C16DFC
	0x01F84AD0 LDR X0, [X24]
	0x01F84AD4 LDR X8, [X0 + 0xB8]
	0x01F84AD8 LDR X22, [X8 + 0x8]
	0x01F84ADC CBNZ X22, 0x1F84B30
	0x01F84AE0 LDR W8, [X0 + 0xE0]
	0x01F84AE4 CBNZ W8, 0x1F84AF0
	0x01F84AE8 BL 0x1C16DFC
	0x01F84AEC LDR X0, [X24]
	0x01F84AF0 ADRP X9, 0x2196000
	0x01F84AF4 LDR X8, [X0 + 0xB8]
	0x01F84AF8 LDR X9, [X9 + 0x3A8]
	0x01F84AFC LDR X23, [X8]
	0x01F84B00 LDR X0, [X9]
	0x01F84B04 BL 0x1C16F10
	0x01F84B08 ADRP X8, 0x2196000
	0x01F84B0C LDR X8, [X8 + 0x3B8]
	0x01F84B10 MOV X1, X23
	0x01F84B14 MOV X3, X31
	0x01F84B18 MOV X22, X0
	0x01F84B1C LDR X2, [X8]
	0x01F84B20 BL 0x24AD1FC
	0x01F84B24 LDR X8, [X24]
	0x01F84B28 LDR X8, [X8 + 0xB8]
	0x01F84B2C STR X22, [X8 + 0x8]
	0x01F84B30 CBZ X21, 0x1F85468
	0x01F84B34 ADRP X8, 0x2196000
	0x01F84B38 LDR X8, [X8 + 0x348]
	0x01F84B3C MOV X0, X21
	0x01F84B40 MOV X1, X22
	0x01F84B44 LDR X2, [X8]
	0x01F84B48 BL 0x301D8DC
	0x01F84B4C LDR X0, [X20 + 0x10]
	0x01F84B50 CBZ X0, 0x1F85468
	0x01F84B54 LDR W8, [X0 + 0x18]
	0x01F84B58 CBZ W8, 0x1F8539C
	0x01F84B5C ADRP X8, 0x2175000
	0x01F84B60 LDR X8, [X8 + 0xFF8]
	0x01F84B64 LDR X1, [X8]
	0x01F84B68 ADD X8, X31, 0x68
	0x01F84B6C STP X31, X8, [X31 + 0x30]
	0x01F84B70 ADD X8, X31, 0x170
	0x01F84B74 BL 0x301CB58
	0x01F84B78 ADRP X22, 0x2175000
	0x01F84B7C LDR X22, [X22 + 0xFD8]
	0x01F84B80 LDR V0, [X31 + 0x17]
	0x01F84B84 LDR X8, [X31 + 0x180]
	0x01F84B88 ADRP X25, 0x2196000
	0x01F84B8C ADRP X23, 0x2175000
	0x01F84B90 LDR X25, [X25 + 0x330]
	0x01F84B94 LDR X23, [X23 + 0xFD0]
	0x01F84B98 STR V0, [X31 + 0x5]
	0x01F84B9C STR X8, [X31 + 0x60]
	0x01F84BA0 MOVZ W26, 0x18
	0x01F84BA4 LDR X1, [X22]
	0x01F84BA8 ADD X0, X31, 0x50
	0x01F84BAC BL 0x2BC4350
	0x01F84BB0 TBZ X0, 0x0, 0x1F84C80
	0x01F84BB4 LDR X0, [X31 + 0x60]
	0x01F84BB8 CBZ X0, 0x1F85434
	0x01F84BBC LDR X8, [X31 + 0x68]
	0x01F84BC0 LDR X20, [X8 + 0x18]
	0x01F84BC4 LDR X21, [X8 + 0x28]
	0x01F84BC8 MOV X1, X31
	0x01F84BCC BL 0x3C32E90
	0x01F84BD0 MOV X1, X0
	0x01F84BD4 CBZ X21, 0x1F85438
	0x01F84BD8 ADD X8, X31, 0x170
	0x01F84BDC MOV X0, X21
	0x01F84BE0 BL 0x1F85698
	0x01F84BE4 LDR V0, [X31 + 0x17]
	0x01F84BE8 LDR X8, [X31 + 0x180]
	0x01F84BEC STR V0, [X31 + 0xD]
	0x01F84BF0 STR X8, [X31 + 0xE0]
	0x01F84BF4 CBZ X20, 0x1F8542C
	0x01F84BF8 LDR V0, [X31 + 0xD]
	0x01F84BFC LDR X8, [X31 + 0xE0]
	0x01F84C00 LDR X10, [X25]
	0x01F84C04 STR V0, [X31 + 0x15]
	0x01F84C08 STR X8, [X31 + 0x160]
	0x01F84C0C LDR W9, [X20 + 0x1C]
	0x01F84C10 LDR X8, [X20 + 0x10]
	0x01F84C14 ADD W9, W9, 0x1
	0x01F84C18 STR W9, [X20 + 0x1C]
	0x01F84C1C CBZ X8, 0x1F85430
	0x01F84C20 LDRSW X9, [X20 + 0x18]
	0x01F84C24 LDR W11, [X8 + 0x18]
	0x01F84C28 CMP W9, W11
	0x01F84C2C B.CS 0x1F84C54
	0x01F84C30 ADD W10, W9, 0x1
	0x01F84C34 STR W10, [X20 + 0x18]
	0x01F84C38 LDR X10, [X31 + 0x160]
	0x01F84C3C LDR V0, [X31 + 0x15]
	0x01F84C40 NOP
	0x01F84C44 MADD X8, X9, X26, X8
	0x01F84C48 STR X10, [X8 + 0x30]
	0x01F84C4C STR V0, [X8 + 0x2]
	0x01F84C50 B 0x1F84BA4
	0x01F84C54 LDR X8, [X10 + 0x20]
	0x01F84C58 LDR V0, [X31 + 0x15]
	0x01F84C5C LDR X9, [X31 + 0x160]
	0x01F84C60 LDR X8, [X8 + 0xC0]
	0x01F84C64 LDR X2, [X8 + 0x70]
	0x01F84C68 STR V0, [X31 + 0x17]
	0x01F84C6C STR X9, [X31 + 0x180]
	0x01F84C70 ADD X1, X31, 0x170
	0x01F84C74 MOV X0, X20
	0x01F84C78 BL 0x3114114
	0x01F84C7C B 0x1F84BA4
	0x01F84C80 MOV X22, X31
	0x01F84C84 MOVZ W20, 0x9
	0x01F84C88 LDR X1, [X23]
	0x01F84C8C ADD X0, X31, 0x50
	0x01F84C90 BL 0x2BC434C
	0x01F84C94 CBNZ X22, 0x1F854B4
	0x01F84C98 CMP W20, 0x9
	0x01F84C9C B.EQ 0x1F84CA4
	0x01F84CA0 CBNZ W20, 0x1F85394
	0x01F84CA4 LDR X8, [X31 + 0x68]
	0x01F84CA8 LDR X0, [X8 + 0x10]
	0x01F84CAC CBZ X0, 0x1F854BC
	0x01F84CB0 ADRP X8, 0x2196000
	0x01F84CB4 LDR X8, [X8 + 0x370]
	0x01F84CB8 LDR X1, [X8]
	0x01F84CBC BL 0x301DB98
	0x01F84CC0 LDR X8, [X31 + 0x68]
	0x01F84CC4 LDR X0, [X8 + 0x18]
	0x01F84CC8 CBZ X0, 0x1F854C0
	0x01F84CCC ADRP X8, 0x2196000
	0x01F84CD0 LDR X8, [X8 + 0x360]
	0x01F84CD4 LDR X1, [X8]
	0x01F84CD8 BL 0x31165B8
	0x01F84CDC ADRP X9, 0x2196000
	0x01F84CE0 LDR X8, [X31 + 0x68]
	0x01F84CE4 LDR X9, [X9 + 0x320]
	0x01F84CE8 LDR X2, [X8 + 0x20]
	0x01F84CEC LDR X3, [X9]
	0x01F84CF0 MOVZ W1, 0x1
	0x01F84CF4 MOV X0, X19
	0x01F84CF8 BL 0x21E61D0
	0x01F84CFC LDR X0, [X24]
	0x01F84D00 LDR X8, [X31 + 0x68]
	0x01F84D04 LDR W9, [X0 + 0xE0]
	0x01F84D08 LDR X19, [X8 + 0x20]
	0x01F84D0C CBNZ W9, 0x1F84D18
	0x01F84D10 BL 0x1C16DFC
	0x01F84D14 LDR X0, [X24]
	0x01F84D18 LDR X8, [X0 + 0xB8]
	0x01F84D1C LDR X20, [X8 + 0x10]
	0x01F84D20 CBNZ X20, 0x1F84D74
	0x01F84D24 LDR W8, [X0 + 0xE0]
	0x01F84D28 CBNZ W8, 0x1F84D34
	0x01F84D2C BL 0x1C16DFC
	0x01F84D30 LDR X0, [X24]
	0x01F84D34 ADRP X9, 0x2196000

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0x2456000
	009 Move W8, [X22+1718]
	010 Move X21, X2
	011 Move X20, X1
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {46}
	017 Move X0, 0x2197000
	018 Move X0, [X0+704]
	019 Call 0x1C17CF4
	020 Move X0, 0x2197000
	021 Move X0, [X0+712]
	022 Call 0x1C17CF4
	023 Move X0, 0x2197000
	024 Move X0, [X0+720]
	025 Call 0x1C17CF4
	026 Move X0, 0x2197000
	027 Move X0, [X0+728]
	028 Call 0x1C17CF4
	029 Move X0, 0x2178000
	030 Move X0, [X0+1480]
	031 Call 0x1C17CF4
	032 Move X0, 0x2170000
	033 Move X0, [X0+1728]
	034 Call 0x1C17CF4
	035 Move X0, 0x2197000
	036 Move X0, [X0+624]
	037 Call 0x1C17CF4
	038 Move X0, 0x2170000
	039 Move X0, [X0+2096]
	040 Call 0x1C17CF4
	041 Move X0, 0x2197000
	042 Move X0, [X0+736]
	043 Call 0x1C17CF4
	044 Move W8, 1
	045 Move [X22+1718], W8
	046 Compare X20, 0
	047 JumpIfEqual {245}
	048 Move W1, [X19]
	049 Move X0, X20
	050 Move X2, X31
	051 Call String.get_Chars, X0, X1
	052 Move W22, [X19]
	053 And W8, W0, 0xFFFF
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Move W2, 123
	056 Move W3, 125
	057 Move X0, X20
	058 Move W1, W22
	059 Call JsonUtilityExtensions.FindScopeEnd, X0, X1, X2, X3
	060 Move W1, [X19]
	061 Move TEMP, X0
	062 And TEMP, TEMP, -2147483648
	063 Compare TEMP, -2147483648
	064 JumpIfEqual {255}
	065 Add W22, W0, 1
	066 Subtract W2, W22, W1
	067 Move X0, X20
	068 Move X3, X31
	069 Call String.Substring, X0, X1, X2
	070 Move [X19], W22
	071 Compare X0, 0
	072 JumpIfEqual {245}
	073 Move X8, 0x2197000
	074 Move X9, 0x2197000
	075 Move X8, [X8+624]
	076 Move X9, [X9+736]
	077 Move W3, 4
	078 Move X4, X31
	079 Move X1, [X8]
	080 Move X2, [X9]
	081 Move X20, X0
	082 Call String.Replace, X0, X1, X2, X3
	083 Move X8, 0x2197000
	084 Move X8, [X8+712]
	085 Move X1, [X8]
	086 Call JsonUtility.FromJson, X0
	087 Compare X0, 0
	088 JumpIfEqual {245}
	089 Move X19, [X0+16]
	090 Compare X21, 0
	091 JumpIfEqual {174}
	092 Move X8, [X21+24]
	093 Move X0, [X21+64]
	094 Move X2, [X21+40]
	095 Move X1, X19
	096 NotImplemented "Instruction BLR not yet implemented."
	097 Move X8, 0x2170000
	098 Move X8, [X8+1728]
	099 Move X19, X0
	100 Move X8, [X8]
	101 Move W9, [X8+224]
	102 Compare W9, 0
	103 JumpIfNotEqual {106}
	104 Move X0, X8
	105 Call 0x1C17DFC
	106 Move X0, X19
	107 Move X1, X31
	108 Move X2, X31
	109 Call Type.op_Equality, X0, X1
	110 Move TEMP, X0
	111 And TEMP, TEMP, 1
	112 Compare TEMP, 1
	113 JumpIfEqual {173}
	114 Move W8, [X20+16]
	115 Add W9, W22, 4
	116 NotImplemented "Instruction CMP not yet implemented."
	117 Move X21, 0x2456000
	118 Move W9, [X21+1889]
	119 Compare W9, 0
	120 JumpIfNotEqual {127}
	121 Move X0, 0x2197000
	122 Move X0, [X0+656]
	123 Call 0x1C17CF4
	124 Move W8, 1
	125 Move [X21+1889], W8
	126 Move W8, [X20+16]
	127 Subtract W8, W8, W22
	128 Move X22, W22
	129 NotImplemented "Instruction CMP not yet implemented."
	130 Move W0, 24
	131 Move X1, X31
	132 Call ThrowHelper.ThrowArgumentOutOfRangeException, X0
	133 Move X0, X20
	134 Move X1, X31
	135 Call String.GetRawStringData, X0
	136 Move X8, 0x2170000
	137 Move X8, [X8+2096]
	138 Move X23, 0x2456000
	139 Move W9, [X23+1890]
	140 Add X20, X0, X22
	141 Move X21, [X8]
	142 Compare W9, 0
	143 JumpIfEqual {151}
	144 Compare X21, 0
	145 JumpIfEqual {158}
	146 Move X0, X21
	147 Move X1, X31
	148 Call String.GetRawStringData, X0
	149 Move W3, [X21+16]
	150 Move X2, X0
	151 Move X0, 0x2197000
	152 Move X0, [X0+656]
	153 Call 0x1C17CF4
	154 Move W8, 1
	155 Move [X23+1890], W8
	156 Compare X21, 0
	157 JumpIfNotEqual {146}
	158 Move X2, X31
	159 Move X3, X31
	160 Move X8, 0x2197000
	161 Move X8, [X8+720]
	162 Move W1, 4
	163 Move X0, X20
	164 Move X4, [X8]
	165 Call 0x1F97ECC
	166 Move W22, [X19]
	167 Move TEMP, X0
	168 And TEMP, TEMP, 1
	169 Compare TEMP, 1
	170 JumpIfNotEqual {246}
	171 Add W8, W22, 4
	172 Move [X19], W8
	173 Move X0, X31
	174 Move X8, 0x2170000
	175 Move X8, [X8+1728]
	176 Move X0, [X8]
	177 Move W8, [X0+224]
	178 Compare W8, 0
	179 JumpIfNotEqual {181}
	180 Call 0x1C17DFC
	181 Move X8, 0x2178000
	182 Move X9, 0x2197000
	183 Move X8, [X8+1480]
	184 Move X9, [X9+704]
	185 Move W1, 1
	186 Move X0, X19
	187 Move X2, [X8]
	188 Move X3, [X9]
	189 Call 0x1C180BC
	190 Move X19, X0
	191 Move X8, 0x2170000
	192 Move X8, [X8+1728]
	193 Move X0, [X8]
	194 Move X8, 0x2197000
	195 Move X8, [X8+728]
	196 Move W9, [X0+224]
	197 Move X21, [X8]
	198 Compare W9, 0
	199 JumpIfNotEqual {201}
	200 Call 0x1C17DFC
	201 Move X0, X21
	202 Move X1, X31
	203 Call Type.GetTypeFromHandle, X0
	204 Compare X19, 0
	205 JumpIfEqual {245}
	206 Move X8, [X19]
	207 Move X1, X0
	208 Move X0, X19
	209 Move X9, [X8+664]
	210 Move X2, [X8+672]
	211 NotImplemented "Instruction BLR not yet implemented."
	212 Move TEMP, X0
	213 And TEMP, TEMP, 1
	214 Compare TEMP, 1
	215 JumpIfNotEqual {233}
	216 Move X0, X19
	217 Move X1, X31
	218 Call ScriptableObject.CreateInstance, X0
	219 Move X19, X0
	220 Move X0, X20
	221 Move X1, X19
	222 Move X2, X31
	223 Call JsonUtility.FromJsonOverwrite, X0, X1
	224 Move X0, X19
	225 Move X20, [X31+48]
	226 Move X19, [X31+56]
	227 Move X22, [X31+32]
	228 Move X21, [X31+40]
	229 Move X30, [X31+16]
	230 Move X23, [X31+24]
	231 Add X31, X31, 64
	232 Return X0
	233 Move X0, X20
	234 Move X1, X19
	235 Move X20, [X31+48]
	236 Move X19, [X31+56]
	237 Move X22, [X31+32]
	238 Move X21, [X31+40]
	239 Move X30, [X31+16]
	240 Move X23, [X31+24]
	241 Move X2, X31
	242 Add X31, X31, 64
	243 Call JsonUtility.FromJson, X0, X1
	244 Return X0
	245 Call 0x1C17F20
	246 Move [X31+8], W22
	247 Move X0, 0x2170000
	248 Move X0, [X0+1880]
	249 Call 0x1C17D08
	250 Add X1, X31, 8
	251 Call 0x1C17E04
	252 Move X19, X0
	253 Move X0, 0x2197000
	254 Move X0, [X0+744]
	255 Move [X31+12], W1
	256 Move X0, 0x2170000
	257 Move X0, [X0+1880]
	258 Call 0x1C17D08
	259 Add X1, X31, 12
	260 Call 0x1C17E04
	261 Move X19, X0
	262 Move X0, 0x2197000
	263 Move X0, [X0+752]
	264 Call 0x1C17D08
	265 Move X1, X19
	266 Move X2, X31
	267 Call String.Format, X0, X1
	268 Move X19, X0
	269 Move X0, 0x2170000
	270 Move X0, [X0+1456]
	271 Call 0x1C17D08
	272 Call 0x1C17F10
	273 Move X1, X19
	274 Move X2, X31
	275 Move X20, X0
	276 Call InvalidOperationException..ctor, X0, X1
	277 Move X0, 0x2197000
	278 Move X0, [X0+704]
	279 Call 0x1C17D08
	280 Move X1, X0
	281 Move X0, X20
	282 Call 0x1C17DEC

Method: System.Int32 FindObjectEnd(System.String json, System.Int32 start = 0)

Disassembly:
	0x01F852C4 STR X1, [X8 + 0x20]
	0x01F852C8 B 0x1F852E0
	0x01F852CC LDR X8, [X9 + 0x20]

ISIL:
	001 Move W2, 123
	002 Move W3, 125
	003 Call JsonUtilityExtensions.FindScopeEnd, X0, X1, X2, X3
	004 Return X0

Method: System.Int32 FindScopeEnd(System.String json, System.Int32 start, System.Char cstart = {, System.Char cend = })

Disassembly:
	0x01F85188 MOV X1, X20
	0x01F8518C BL 0x222AB1C
	0x01F85190 MOV X2, X20
	0x01F85194 ADRP X9, 0x2195000
	0x01F85198 MOV W21, W0
	0x01F8519C LDR W8, [X2 + 0x5C]!
	0x01F851A0 LDR X0, [X31 + 0x68]
	0x01F851A4 LDR X9, [X9 + 0x390]
	0x01F851A8 AND W10, W8, 0xFFFFFF00
	0x01F851AC ORR W10, W10, 0x1
	0x01F851B0 LDR X4, [X9]
	0x01F851B4 AND W9, W8, 0xFF
	0x01F851B8 CMP W9, 0x1
	0x01F851BC CSEL W3, W8, W10, EQ
	0x01F851C0 MOV X1, X20
	0x01F851C4 BL 0x222AAB4
	0x01F851C8 LDR X8, [X31 + 0x68]
	0x01F851CC LDR X8, [X8 + 0x38]
	0x01F851D0 CBZ X8, 0x1F85458
	0x01F851D4 LDP W2, W9, [X8 + 0x18]
	0x01F851D8 MOV W22, W0
	0x01F851DC ADD W9, W9, 0x1
	0x01F851E0 CMP W2, 0x1
	0x01F851E4 STP W31, W9, [X8 + 0x18]
	0x01F851E8 B.LT 0x1F851FC
	0x01F851EC LDR X0, [X8 + 0x10]
	0x01F851F0 MOV W1, W31
	0x01F851F4 MOV X3, X31
	0x01F851F8 BL 0x339FA34
	0x01F851FC CMP W19, 0x1
	0x01F85200 MOV W28, W27
	0x01F85204 B.LT 0x1F852EC
	0x01F85208 LDR X8, [X31 + 0x68]
	0x01F8520C LDR X0, [X8 + 0x18]
	0x01F85210 CBZ X0, 0x1F8541C
	0x01F85214 LDR X24, [X8 + 0x28]
	0x01F85218 LDR X2, [X25]
	0x01F8521C SUB W23, W28, 0x2
	0x01F85220 ADD X8, X31, 0xD0
	0x01F85224 MOV W1, W23
	0x01F85228 BL 0x3113CF4
	0x01F8522C LDR V0, [X31 + 0xD]
	0x01F85230 LDR X8, [X31 + 0xE0]
	0x01F85234 STR V0, [X31 + 0xF]
	0x01F85238 STR X8, [X31 + 0x100]
	0x01F8523C CBZ X24, 0x1F85418
	0x01F85240 LDRH W3, [X31 + 0x144]
	0x01F85244 LDRH W8, [X31 + 0x104]
	0x01F85248 CMP W3, W8
	0x01F8524C B.CS 0x1F852EC
	0x01F85250 ADD X1, X31, 0x130
	0x01F85254 ADD X2, X31, 0xF0
	0x01F85258 MOV X0, X24
	0x01F8525C BL 0x1F8609C
	0x01F85260 CBNZ W0, 0x1F852EC
	0x01F85264 LDR X8, [X31 + 0x68]
	0x01F85268 LDR X0, [X8 + 0x10]
	0x01F8526C CBZ X0, 0x1F85428
	0x01F85270 LDR X24, [X8 + 0x38]
	0x01F85274 LDR X2, [X29]
	0x01F85278 MOV W1, W23
	0x01F8527C BL 0x301BCCC
	0x01F85280 MOV X1, X0
	0x01F85284 CBZ X24, 0x1F85424
	0x01F85288 ADRP X9, 0x2173000
	0x01F8528C LDR W10, [X24 + 0x1C]
	0x01F85290 LDR X8, [X24 + 0x10]
	0x01F85294 LDR X9, [X9 + 0x5A0]
	0x01F85298 ADD W10, W10, 0x1
	0x01F8529C LDR X9, [X9]
	0x01F852A0 STR W10, [X24 + 0x1C]
	0x01F852A4 CBZ X8, 0x1F85420
	0x01F852A8 LDRSW X10, [X24 + 0x18]
	0x01F852AC LDR W11, [X8 + 0x18]
	0x01F852B0 CMP W10, W11
	0x01F852B4 B.CS 0x1F852CC
	0x01F852B8 ADD W9, W10, 0x1
	0x01F852BC ADD X8, X8, X10, 0x3, LSL
	0x01F852C0 STR W9, [X24 + 0x18]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Compare X0, 0
	009 JumpIfEqual {75}
	010 Move W21, W2
	011 Move X2, X31
	012 Move W20, W3
	013 Move W19, W1
	014 Move X22, X0
	015 Call String.get_Chars, X0, X1
	016 And W8, W0, 0xFFFF
	017 NotImplemented "Instruction CMP not yet implemented."
	018 Move W8, [X22+16]
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Move W24, W31
	021 Move X0, X22
	022 Move W1, W19
	023 Move X2, X31
	024 Call String.get_Chars, X0, X1
	025 And W8, W0, 0xFFFF
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move W8, [X22+16]
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Move W23, W19
	030 Add W19, W19, 1
	031 Move X0, X22
	032 Move W1, W19
	033 Move X2, X31
	034 Call String.get_Chars, X0, X1
	035 And W8, W0, 0xFFFF
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move X0, X22
	038 Move W1, W23
	039 Move X2, X31
	040 Call String.get_Chars, X0, X1
	041 And W8, W0, 0xFFFF
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move W8, [X22+16]
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Add W19, W23, 1
	046 Move X0, X22
	047 Move W1, W19
	048 Move X2, X31
	049 Call String.get_Chars, X0, X1
	050 And W8, W0, 0xFFFF
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Add W24, W24, 1
	053 Move X0, X22
	054 Move W1, W19
	055 Move X2, X31
	056 Call String.get_Chars, X0, X1
	057 And W8, W0, 0xFFFF
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Subtract W24, W24, 1
	060 Move W8, [X22+16]
	061 Add W19, W19, 1
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Move TEMP, 0
	064 Not TEMP
	065 Move W19, TEMP
	066 Move W0, W19
	067 Move X20, [X31+48]
	068 Move X19, [X31+56]
	069 Move X22, [X31+32]
	070 Move X21, [X31+40]
	071 Move X24, [X31+16]
	072 Move X23, [X31+24]
	073 Move X30, [X31+64]
	074 Return X0
	075 Call 0x1C17F20

Method: System.Int32 <FromJsonWithTypeAnnotation>g__SkipWhiteOrThrow|8_0(System.Int32 i, ref Fusion.JsonUtilityExtensions/<>c__DisplayClass8_0 param_1)

Disassembly:
	0x01F84818 STP X22, X21, [X31 + 0x1D0]
	0x01F8481C STP X20, X19, [X31 + 0x1E0]
	0x01F84820 MRS X27, 0xC000
	0x01F84824 LDR X8, [X27 + 0x28]
	0x01F84828 ADRP X22, 0x2455000
	0x01F8482C ADRP X21, 0x216F000
	0x01F84830 MOV X19, X1
	0x01F84834 STR X8, [X31 + 0x188]
	0x01F84838 STR X0, [X31 + 0x68]
	0x01F8483C LDRB W8, [X22 + 0x6BC]
	0x01F84840 LDR X21, [X21 + 0x598]
	0x01F84844 MOV X20, X0
	0x01F84848 TBNZ X8, 0x0, 0x1F84A4C
	0x01F8484C ADRP X0, 0x2175000
	0x01F84850 LDR X0, [X0 + 0xFD0]
	0x01F84854 BL 0x1C16CF4
	0x01F84858 ADRP X0, 0x2175000
	0x01F8485C LDR X0, [X0 + 0xFD8]
	0x01F84860 BL 0x1C16CF4
	0x01F84864 ADRP X0, 0x2175000
	0x01F84868 LDR X0, [X0 + 0xFE0]
	0x01F8486C BL 0x1C16CF4
	0x01F84870 ADRP X0, 0x2196000
	0x01F84874 LDR X0, [X0 + 0x318]
	0x01F84878 BL 0x1C16CF4
	0x01F8487C ADRP X0, 0x2196000
	0x01F84880 LDR X0, [X0 + 0x320]
	0x01F84884 BL 0x1C16CF4
	0x01F84888 ADRP X0, 0x2174000
	0x01F8488C LDR X0, [X0 + 0x5A0]
	0x01F84890 BL 0x1C16CF4
	0x01F84894 ADRP X0, 0x2196000
	0x01F84898 LDR X0, [X0 + 0x328]
	0x01F8489C BL 0x1C16CF4
	0x01F848A0 ADRP X0, 0x2196000
	0x01F848A4 LDR X0, [X0 + 0x330]
	0x01F848A8 BL 0x1C16CF4
	0x01F848AC ADRP X0, 0x217A000
	0x01F848B0 LDR X0, [X0 + 0xDF8]
	0x01F848B4 BL 0x1C16CF4
	0x01F848B8 ADRP X0, 0x2196000
	0x01F848BC LDR X0, [X0 + 0x338]
	0x01F848C0 BL 0x1C16CF4
	0x01F848C4 ADRP X0, 0x2196000
	0x01F848C8 LDR X0, [X0 + 0x340]
	0x01F848CC BL 0x1C16CF4
	0x01F848D0 ADRP X0, 0x2179000
	0x01F848D4 LDR X0, [X0 + 0x8B8]
	0x01F848D8 BL 0x1C16CF4
	0x01F848DC ADRP X0, 0x2175000
	0x01F848E0 LDR X0, [X0 + 0xFF8]
	0x01F848E4 BL 0x1C16CF4
	0x01F848E8 ADRP X0, 0x2196000
	0x01F848EC LDR X0, [X0 + 0x348]
	0x01F848F0 BL 0x1C16CF4
	0x01F848F4 ADRP X0, 0x2196000
	0x01F848F8 LDR X0, [X0 + 0x350]
	0x01F848FC BL 0x1C16CF4
	0x01F84900 ADRP X0, 0x2196000
	0x01F84904 LDR X0, [X0 + 0x358]
	0x01F84908 BL 0x1C16CF4
	0x01F8490C ADRP X0, 0x2196000
	0x01F84910 LDR X0, [X0 + 0x360]
	0x01F84914 BL 0x1C16CF4
	0x01F84918 ADRP X0, 0x2196000
	0x01F8491C LDR X0, [X0 + 0x368]
	0x01F84920 BL 0x1C16CF4
	0x01F84924 ADRP X0, 0x2196000
	0x01F84928 LDR X0, [X0 + 0x370]
	0x01F8492C BL 0x1C16CF4
	0x01F84930 ADRP X0, 0x2179000
	0x01F84934 LDR X0, [X0 + 0x8C8]
	0x01F84938 BL 0x1C16CF4
	0x01F8493C ADRP X0, 0x217A000
	0x01F84940 LDR X0, [X0 + 0xE00]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x2456000
	007 Move W8, [X21+1719]
	008 Move X20, X1
	009 Move W19, W0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x2172000
	015 Move X0, [X0+368]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+1719], W8
	019 Move X0, [X20]
	020 Compare X0, 0
	021 JumpIfEqual {47}
	022 Move X22, 0x2172000
	023 Move X22, [X22+368]
	024 Move W8, [X0+16]
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move W1, W19
	027 Move X2, X31
	028 Call String.get_Chars, X0, X1
	029 Move X8, [X22]
	030 Move W21, W0
	031 Move W9, [X8+224]
	032 Compare W9, 0
	033 JumpIfNotEqual {36}
	034 Move X0, X8
	035 Call 0x1C17DFC
	036 Move W0, W21
	037 Move X1, X31
	038 Call Char.IsWhiteSpace, X0
	039 Move TEMP, X0
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfNotEqual {48}
	043 Move X0, [X20]
	044 Add W19, W19, 1
	045 Compare X0, 0
	046 JumpIfNotEqual {24}
	047 Call 0x1C17F20
	048 Move X0, [X20]
	049 Compare X0, 0
	050 JumpIfEqual {47}
	051 Move W8, [X0+16]
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Move W0, W19
	054 Move X20, [X31+32]
	055 Move X19, [X31+40]
	056 Move X22, [X31+16]
	057 Move X21, [X31+24]
	058 Move X30, [X31+48]
	059 Return X0
	060 Move [X31+12], W19
	061 Move X0, 0x2170000
	062 Move X0, [X0+1880]
	063 Call 0x1C17D08
	064 Add X1, X31, 12
	065 Call 0x1C17E04
	066 Move X19, X0
	067 Move X0, 0x2197000
	068 Move X0, [X0+688]
	069 Call 0x1C17D08
	070 Move X1, X19
	071 Move X2, X31
	072 Call String.Format, X0, X1
	073 Move X19, X0
	074 Move X0, 0x2170000
	075 Move X0, [X0+1456]
	076 Call 0x1C17D08
	077 Call 0x1C17F10
	078 Move X1, X19
	079 Move X2, X31
	080 Move X20, X0
	081 Call InvalidOperationException..ctor, X0, X1
	082 Move X0, 0x2197000
	083 Move X0, [X0+696]
	084 Call 0x1C17D08
	085 Move X1, X0
	086 Move X0, X20
	087 Call 0x1C17DEC

Method: System.Int32 <FromJsonWithTypeAnnotationInternal>g__SkipWhiteOrThrow|9_0(System.Int32 i, ref Fusion.JsonUtilityExtensions/<>c__DisplayClass9_0 param_1)

Disassembly:
	0x01F8505C ADD W9, W10, 0x1
	0x01F85060 ADD X8, X8, X10, 0x3, LSL
	0x01F85064 STR W9, [X0 + 0x18]
	0x01F85068 STR X22, [X8 + 0x20]
	0x01F8506C B 0x1F85084
	0x01F85070 LDR X8, [X9 + 0x20]
	0x01F85074 LDR X8, [X8 + 0xC0]
	0x01F85078 LDR X2, [X8 + 0x70]
	0x01F8507C MOV X1, X22
	0x01F85080 BL 0x301BF90
	0x01F85084 LDR X8, [X31 + 0x68]
	0x01F85088 LDR X0, [X8 + 0x20]
	0x01F8508C CBZ X0, 0x1F8543C
	0x01F85090 ADRP X8, 0x2195000
	0x01F85094 LDR X8, [X8 + 0x358]
	0x01F85098 LDR X2, [X8]
	0x01F8509C MOV W1, W21
	0x01F850A0 BL 0x301DA48
	0x01F850A4 LDRB W8, [X31 + 0x48]
	0x01F850A8 CBZ W8, 0x1F84FD4
	0x01F850AC LDR X0, [X31 + 0x68]
	0x01F850B0 LDR X8, [X0]
	0x01F850B4 LDP X9, X3, [X8 + 0x188]
	0x01F850B8 ADD X2, X31, 0x40
	0x01F850BC MOV X1, X22
	0x01F850C0 BLR X9
	0x01F850C4 TBZ X0, 0x0, 0x1F8511C
	0x01F850C8 LDRB W8, [X31 + 0x48]
	0x01F850CC CBZ W8, 0x1F84FD4
	0x01F850D0 LDR W8, [X31 + 0x4C]
	0x01F850D4 LDR W9, [X31 + 0x40]
	0x01F850D8 CMP W9, W8
	0x01F850DC B.LT 0x1F84FD4
	0x01F850E0 ADRP X8, 0x2195000
	0x01F850E4 LDR X8, [X8 + 0x3E0]
	0x01F850E8 LDR X0, [X8]
	0x01F850EC MOV X1, X20
	0x01F850F0 MOV X2, X22
	0x01F850F4 MOV X3, X31
	0x01F850F8 BL 0x3227BD4
	0x01F850FC ADRP X8, 0x2195000
	0x01F85100 LDR X8, [X8 + 0x3D0]
	0x01F85104 LDR X1, [X8]
	0x01F85108 MOV X2, X31
	0x01F8510C BL 0x321B938
	0x01F85110 MOV X1, X22
	0x01F85114 BL 0x1F84770
	0x01F85118 B 0x1F84FD4
	0x01F8511C ADRP X8, 0x2195000
	0x01F85120 LDR X8, [X8 + 0x3E8]
	0x01F85124 LDR X0, [X8]
	0x01F85128 MOV X1, X22
	0x01F8512C MOV X2, X31
	0x01F85130 BL 0x321EFD0
	0x01F85134 ADRP X8, 0x2195000
	0x01F85138 LDR X8, [X8 + 0x3D8]
	0x01F8513C LDR X1, [X8]
	0x01F85140 MOV X2, X31
	0x01F85144 BL 0x321B938
	0x01F85148 MOV X1, X31
	0x01F8514C BL 0x1F84770
	0x01F85150 B 0x1F84FD4
	0x01F85154 LDR X9, [X31 + 0x68]
	0x01F85158 LDR X0, [X9 + 0x30]
	0x01F8515C CBZ X0, 0x1F85454
	0x01F85160 ADRP X8, 0x2195000
	0x01F85164 LDR X8, [X8 + 0x368]
	0x01F85168 LDR X1, [X8]
	0x01F8516C BL 0x301DB98
	0x01F85170 LDR X0, [X31 + 0x68]
	0x01F85174 ADRP X8, 0x2195000
	0x01F85178 ADD X2, X20, 0x78
	0x01F8517C LDR X3, [X0 + 0x30]
	0x01F85180 LDR X8, [X8 + 0x388]
	0x01F85184 LDR X4, [X8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x2455000
	007 Move W8, [X21+1720]
	008 Move X20, X1
	009 Move W19, W0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x2171000
	015 Move X0, [X0+368]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+1720], W8
	019 Move X0, [X20]
	020 Compare X0, 0
	021 JumpIfEqual {47}
	022 Move X22, 0x2171000
	023 Move X22, [X22+368]
	024 Move W8, [X0+16]
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move W1, W19
	027 Move X2, X31
	028 Call String.get_Chars, X0, X1
	029 Move X8, [X22]
	030 Move W21, W0
	031 Move W9, [X8+224]
	032 Compare W9, 0
	033 JumpIfNotEqual {36}
	034 Move X0, X8
	035 Call 0x1C17DFC
	036 Move W0, W21
	037 Move X1, X31
	038 Call Char.IsWhiteSpace, X0
	039 Move TEMP, X0
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfNotEqual {48}
	043 Move X0, [X20]
	044 Add W19, W19, 1
	045 Compare X0, 0
	046 JumpIfNotEqual {24}
	047 Call 0x1C17F20
	048 Move X0, [X20]
	049 Compare X0, 0
	050 JumpIfEqual {47}
	051 Move W8, [X0+16]
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Move W0, W19
	054 Move X20, [X31+32]
	055 Move X19, [X31+40]
	056 Move X22, [X31+16]
	057 Move X21, [X31+24]
	058 Move X30, [X31+48]
	059 Return X0
	060 Move [X31+12], W19
	061 Move X0, 0x216F000
	062 Move X0, [X0+1880]
	063 Call 0x1C17D08
	064 Add X1, X31, 12
	065 Call 0x1C17E04
	066 Move X19, X0
	067 Move X0, 0x2196000
	068 Move X0, [X0+688]
	069 Call 0x1C17D08
	070 Move X1, X19
	071 Move X2, X31
	072 Call String.Format, X0, X1
	073 Move X19, X0
	074 Move X0, 0x216F000
	075 Move X0, [X0+1456]
	076 Call 0x1C17D08
	077 Call 0x1C17F10
	078 Move X1, X19
	079 Move X2, X31
	080 Move X20, X0
	081 Call InvalidOperationException..ctor, X0, X1
	082 Move X0, 0x2196000
	083 Move X0, [X0+776]
	084 Call 0x1C17D08
	085 Move X1, X0
	086 Move X0, X20
	087 Call 0x1C17DEC

