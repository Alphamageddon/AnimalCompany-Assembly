Type: Fusion.FusionUnityLogger

Method: System.Void .ctor(System.Threading.Thread mainThread)

Disassembly:
	0x01F82960 MOV X0, X31
	0x01F82964 MOV W21, W1
	0x01F82968 BL 0x1E43664
	0x01F8296C MOV X1, X19
	0x01F82970 MOV X2, X20
	0x01F82974 LDP X20, X19, [X31 + 0x10]
	0x01F82978 AND X3, X0, 0x0
	0x01F8297C MOV W0, W21
	0x01F82980 LDP X30, X21, [X31], #0x20
	0x01F82984 B 0x1F82988
	0x01F82988 SUB X31, X31, 0x60
	0x01F8298C STR X30, [X31 + 0x20]
	0x01F82990 STP X24, X23, [X31 + 0x30]
	0x01F82994 STP X22, X21, [X31 + 0x40]
	0x01F82998 STP X20, X19, [X31 + 0x50]
	0x01F8299C MRS X24, 0xC000
	0x01F829A0 LDR X8, [X24 + 0x28]
	0x01F829A4 MOV W19, W0
	0x01F829A8 MOV X20, X2
	0x01F829AC MOV X22, X1
	0x01F829B0 ADD X0, X31, 0x8
	0x01F829B4 MOV W1, W19
	0x01F829B8 MOV X2, X31
	0x01F829BC MOV X23, X3
	0x01F829C0 STR X8, [X31 + 0x18]
	0x01F829C4 STP X31, X31, [X31 + 0x8]
	0x01F829C8 BL 0x1E8D334
	0x01F829CC ADDS W31, W19, 0x1
	0x01F829D0 B.EQ 0x1F82A24
	0x01F829D4 AND W1, W22, 0xFF
	0x01F829D8 AND W2, W20, 0xFF
	0x01F829DC ADD X0, X31, 0x8
	0x01F829E0 MOV X3, X31
	0x01F829E4 BL 0x1E8D6A0
	0x01F829E8 MOV W21, W0
	0x01F829EC UBFM W1, W22, 0x8, 0xF
	0x01F829F0 UBFM W2, W20, 0x8, 0xF
	0x01F829F4 ADD X0, X31, 0x8
	0x01F829F8 MOV X3, X31
	0x01F829FC BL 0x1E8D6A0
	0x01F82A00 MOV W19, W0
	0x01F82A04 UBFM W1, W22, 0x10, 0x17
	0x01F82A08 UBFM W2, W20, 0x10, 0x17
	0x01F82A0C ADD X0, X31, 0x8
	0x01F82A10 MOV X3, X31
	0x01F82A14 BL 0x1E8D6A0
	0x01F82A18 TBZ X21, 0x1F, 0x1F82A30
	0x01F82A1C MOV W8, W31
	0x01F82A20 B 0x1F82A40
	0x01F82A24 AND W21, W23, 0xFF
	0x01F82A28 UBFM W19, W23, 0x8, 0xF
	0x01F82A2C UBFM W0, W23, 0x10, 0x17
	0x01F82A30 CMP W21, 0xFF
	0x01F82A34 MOVZ W8, 0xFF
	0x01F82A38 CSEL W8, W21, W8, LT
	0x01F82A3C UBFM W8, W8, 0x10, 0xF

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x2458000
	009 Move X24, 0x2172000
	010 Move X23, 0x217C000
	011 Move X22, 0x2172000
	012 Move W8, [X21+1703]
	013 Move X24, [X24+2288]
	014 Move X23, [X23+3744]
	015 Move X22, [X22+2440]
	016 Move X20, X1
	017 Move X19, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {33}
	022 Move X0, 0x2172000
	023 Move X0, [X0+2288]
	024 Call 0x1C17CF4
	025 Move X0, 0x217C000
	026 Move X0, [X0+3744]
	027 Call 0x1C17CF4
	028 Move X0, 0x2172000
	029 Move X0, [X0+2440]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X21+1703], W8
	033 Move X0, [X24]
	034 Call 0x1C17F10
	035 Move X1, X31
	036 Move X21, X0
	037 Call StringBuilder..ctor, X0
	038 Move [X19+16], X21
	039 Move X9, [X23]
	040 Move X8, [X22]
	041 Move X0, X19
	042 Move X1, X31
	043 Move [X19+32], X9
	044 Move [X19+40], X8
	045 Call Object..ctor, X0
	046 Move X8, -21573632
	047 Move X9, -21590016
	048 Move V0, [X8+1128]
	049 Move V1, [X9+254]
	050 Move W0, 0x4014
	051 Move W8, 257
	052 NotImplemented "Instruction MOVK not yet implemented."
	053 Move [X19+24], X20
	054 Move [X19+64], D0
	055 Move [X19+72], V1
	056 NotImplemented "Instruction STRH not yet implemented."
	057 Call FusionUnityLogger.Color32ToRGBString, X0
	058 Move [X19+56], X0
	059 Move X20, [X31+48]
	060 Move X19, [X31+56]
	061 Move X22, [X31+32]
	062 Move X21, [X31+40]
	063 Move X24, [X31+16]
	064 Move X23, [X31+24]
	065 Move X30, [X31+64]
	066 Return 

Method: System.Void Log(Fusion.LogType logType, System.Object message, in Fusion.LogContext logContext)

Disassembly:
	0x01F82ACC SUB W9, W9, W20
	0x01F82AD0 ADD W21, W21, 0x1
	0x01F82AD4 CMP W21, W8
	0x01F82AD8 ADD W20, W9, W0, UXTH
	0x01F82ADC B.LT 0x1F82AB4
	0x01F82AE0 B 0x1F82AE8
	0x01F82AE4 MOV W20, W31
	0x01F82AE8 MOV W0, W20
	0x01F82AEC LDP X20, X19, [X31 + 0x10]
	0x01F82AF0 LDP X30, X21, [X31], #0x20
	0x01F82AF4 RET
	0x01F82AF8 BL 0x1C16F20
	0x01F82AFC AND W8, W0, 0xFF00
	0x01F82B00 BFM W8, W0, 0x10, 0x7
	0x01F82B04 BFM W8, W0, 0x10, 0x17
	0x01F82B08 MOV W0, W8
	0x01F82B0C RET
	0x01F82B10 STP X30, X21, [X31 - 0x20]!
	0x01F82B14 STP X20, X19, [X31 + 0x10]
	0x01F82B18 ADRP X19, 0x2457000
	0x01F82B1C ADRP X21, 0x2179000
	0x01F82B20 LDRB W8, [X19 + 0x6AB]
	0x01F82B24 LDR X21, [X21 + 0x8B0]
	0x01F82B28 TBNZ X8, 0x0, 0x1F82B4C
	0x01F82B2C ADRP X0, 0x2198000
	0x01F82B30 LDR X0, [X0 + 0x248]
	0x01F82B34 BL 0x1C16CF4
	0x01F82B38 ADRP X0, 0x2179000
	0x01F82B3C LDR X0, [X0 + 0x8B0]
	0x01F82B40 BL 0x1C16CF4
	0x01F82B44 MOVZ W8, 0x1
	0x01F82B48 STRB W8, [X19 + 0x6AB]
	0x01F82B4C LDR X0, [X21]
	0x01F82B50 LDR W8, [X0 + 0xE0]
	0x01F82B54 CBNZ W8, 0x1F82B5C
	0x01F82B58 BL 0x1C16DFC
	0x01F82B5C MOV X0, X31
	0x01F82B60 BL 0x1E3E40C
	0x01F82B64 TBNZ X0, 0x0, 0x1F82BC0
	0x01F82B68 ADRP X19, 0x2198000
	0x01F82B6C LDR X19, [X19 + 0x248]
	0x01F82B70 MOV X0, X31
	0x01F82B74 BL 0x33E3C68
	0x01F82B78 LDR X8, [X19]
	0x01F82B7C MOV X20, X0
	0x01F82B80 MOV X0, X8
	0x01F82B84 BL 0x1C16F10
	0x01F82B88 MOV X1, X20
	0x01F82B8C MOV X19, X0
	0x01F82B90 BL 0x1F81960
	0x01F82B94 CBZ X19, 0x1F82BC0
	0x01F82B98 LDR X0, [X21]
	0x01F82B9C LDR W8, [X0 + 0xE0]
	0x01F82BA0 CBNZ W8, 0x1F82BA8
	0x01F82BA4 BL 0x1C16DFC
	0x01F82BA8 MOV X0, X19
	0x01F82BAC LDP X20, X19, [X31 + 0x10]
	0x01F82BB0 MOVZ W1, 0x3
	0x01F82BB4 MOV X2, X31
	0x01F82BB8 LDP X30, X21, [X31], #0x20
	0x01F82BBC B 0x1E3E2B4
	0x01F82BC0 LDP X20, X19, [X31 + 0x10]
	0x01F82BC4 LDP X30, X21, [X31], #0x20
	0x01F82BC8 RET
	0x01F82BCC B 0x1F81ACC
	0x01F82BD0 B 0x1F82828
	0x01F82BD4 STR X30, [X31 - 0x40]!
	0x01F82BD8 STP X24, X23, [X31 + 0x10]
	0x01F82BDC STP X22, X21, [X31 + 0x20]
	0x01F82BE0 STP X20, X19, [X31 + 0x30]
	0x01F82BE4 ADRP X24, 0x2457000
	0x01F82BE8 ADRP X23, 0x2171000
	0x01F82BEC ADRP X22, 0x2198000
	0x01F82BF0 ADRP X21, 0x2179000
	0x01F82BF4 LDRB W8, [X24 + 0x6B0]
	0x01F82BF8 LDR X23, [X23 + 0x758]
	0x01F82BFC LDR X22, [X22 + 0x250]
	0x01F82C00 LDR X21, [X21 + 0x600]
	0x01F82C04 MOV W20, W1
	0x01F82C08 MOV X19, X0
	0x01F82C0C TBNZ X8, 0x0, 0x1F82C48
	0x01F82C10 ADRP X0, 0x2171000
	0x01F82C14 LDR X0, [X0 + 0x758]
	0x01F82C18 BL 0x1C16CF4
	0x01F82C1C ADRP X0, 0x2179000
	0x01F82C20 LDR X0, [X0 + 0x600]
	0x01F82C24 BL 0x1C16CF4
	0x01F82C28 ADRP X0, 0x2198000
	0x01F82C2C LDR X0, [X0 + 0x258]
	0x01F82C30 BL 0x1C16CF4
	0x01F82C34 ADRP X0, 0x2198000
	0x01F82C38 LDR X0, [X0 + 0x250]
	0x01F82C3C BL 0x1C16CF4
	0x01F82C40 MOVZ W8, 0x1
	0x01F82C44 STRB W8, [X24 + 0x6B0]
	0x01F82C48 LDR X0, [X23]
	0x01F82C4C ADRP X23, 0x2198000
	0x01F82C50 LDR X23, [X23 + 0x258]
	0x01F82C54 ADD X1, X31, 0xC
	0x01F82C58 STR W20, [X31 + 0xC]
	0x01F82C5C BL 0x1C16E04
	0x01F82C60 LDR X8, [X22]
	0x01F82C64 MOV X1, X0
	0x01F82C68 MOV X2, X31
	0x01F82C6C MOV X0, X8
	0x01F82C70 BL 0x321EFD0
	0x01F82C74 LDR X8, [X21]
	0x01F82C78 MOV X20, X0
	0x01F82C7C LDR W9, [X8 + 0xE0]
	0x01F82C80 CBNZ W9, 0x1F82C8C
	0x01F82C84 MOV X0, X8
	0x01F82C88 BL 0x1C16DFC
	0x01F82C8C LDR X2, [X23]
	0x01F82C90 MOVZ W3, 0x8
	0x01F82C94 MOV X0, X19
	0x01F82C98 MOV X1, X20
	0x01F82C9C MOV X4, X31
	0x01F82CA0 BL 0x3632E18
	0x01F82CA4 LDP X20, X19, [X31 + 0x30]
	0x01F82CA8 LDP X22, X21, [X31 + 0x20]
	0x01F82CAC LDP X24, X23, [X31 + 0x10]
	0x01F82CB0 LDR X30, [X31], #0x40
	0x01F82CB4 RET
	0x01F82CB8 STP X30, X23, [X31 - 0x30]!
	0x01F82CBC STP X22, X21, [X31 + 0x10]
	0x01F82CC0 STP X20, X19, [X31 + 0x20]
	0x01F82CC4 ADRP X23, 0x2457000
	0x01F82CC8 ADRP X21, 0x2171000
	0x01F82CCC ADRP X19, 0x2198000
	0x01F82CD0 LDRB W8, [X23 + 0x6B1]
	0x01F82CD4 LDR X21, [X21 + 0x8F0]
	0x01F82CD8 LDR X19, [X19 + 0x260]
	0x01F82CDC MOV X20, X1
	0x01F82CE0 MOV X22, X0
	0x01F82CE4 TBNZ X8, 0x0, 0x1F82D14
	0x01F82CE8 ADRP X0, 0x2171000
	0x01F82CEC LDR X0, [X0 + 0xE00]
	0x01F82CF0 BL 0x1C16CF4
	0x01F82CF4 ADRP X0, 0x2171000
	0x01F82CF8 LDR X0, [X0 + 0x8F0]
	0x01F82CFC BL 0x1C16CF4
	0x01F82D00 ADRP X0, 0x2198000
	0x01F82D04 LDR X0, [X0 + 0x260]
	0x01F82D08 BL 0x1C16CF4
	0x01F82D0C MOVZ W8, 0x1
	0x01F82D10 STRB W8, [X23 + 0x6B1]
	0x01F82D14 LDR X0, [X21]
	0x01F82D18 ADRP X23, 0x2171000
	0x01F82D1C LDR X23, [X23 + 0xE00]
	0x01F82D20 BL 0x1C16F10
	0x01F82D24 MOVZ W1, 0x3E8
	0x01F82D28 MOV X2, X31
	0x01F82D2C MOV X21, X0
	0x01F82D30 BL 0x3231B28
	0x01F82D34 LDR X0, [X19]
	0x01F82D38 BL 0x1C16F10
	0x01F82D3C MOV X1, X21
	0x01F82D40 MOV X2, X31
	0x01F82D44 MOV X19, X0
	0x01F82D48 BL 0x32F7BE4
	0x01F82D4C MOV X0, X22
	0x01F82D50 MOV X1, X19
	0x01F82D54 MOV X2, X31
	0x01F82D58 MOV X3, X31
	0x01F82D5C MOV X4, X20
	0x01F82D60 BL 0x1F82E94
	0x01F82D64 MOV X20, X31
	0x01F82D68 CBZ X19, 0x1F82DC4
	0x01F82D6C LDR X8, [X19]
	0x01F82D70 LDR X1, [X23]
	0x01F82D74 LDRH W9, [X8 + 0x12E]
	0x01F82D78 CBZ X9, 0x1F82D9C
	0x01F82D7C LDR X10, [X8 + 0xB0]
	0x01F82D80 ADD X10, X10, 0x8
	0x01F82D84 LDUR X11, [X10 - 0x8]
	0x01F82D88 CMP X11, X1
	0x01F82D8C B.EQ 0x1F82DAC
	0x01F82D90 SUBS X9, X9, 0x1
	0x01F82D94 ADD X10, X10, 0x10
	0x01F82D98 B.NE 0x1F82D84
	0x01F82D9C MOV X0, X19
	0x01F82DA0 MOV W2, W31
	0x01F82DA4 BL 0x1C5C788
	0x01F82DA8 B 0x1F82DB8
	0x01F82DAC LDRSW X9, [X10]
	0x01F82DB0 ADD X8, X8, X9, 0x4, LSL
	0x01F82DB4 ADD X0, X8, 0x138
	0x01F82DB8 LDP X8, X1, [X0]
	0x01F82DBC MOV X0, X19
	0x01F82DC0 BLR X8
	0x01F82DC4 CBNZ X20, 0x1F82DE8
	0x01F82DC8 CBZ X21, 0x1F82DF0
	0x01F82DCC LDR X8, [X21]
	0x01F82DD0 MOV X0, X21
	0x01F82DD4 LDP X20, X19, [X31 + 0x20]
	0x01F82DD8 LDP X22, X21, [X31 + 0x10]
	0x01F82DDC LDP X2, X1, [X8 + 0x168]
	0x01F82DE0 LDP X30, X23, [X31], #0x30
	0x01F82DE4 BR X2
	0x01F82DE8 MOV X0, X20
	0x01F82DEC BL 0x1C16F18
	0x01F82DF0 BL 0x1C16F20
	0x01F82DF4 CMP W1, 0x1
	0x01F82DF8 MOV X22, X0
	0x01F82DFC B.NE 0x1F82E14
	0x01F82E00 MOV X0, X22
	0x01F82E04 BL 0x3EB1AD0
	0x01F82E08 LDR X20, [X0]
	0x01F82E0C BL 0x3EB1AE0
	0x01F82E10 B 0x1F82D68
	0x01F82E14 MOV X20, X31
	0x01F82E18 B 0x1F82E20
	0x01F82E1C MOV X22, X0
	0x01F82E20 CBZ X19, 0x1F82E7C
	0x01F82E24 LDR X8, [X19]
	0x01F82E28 LDR X1, [X23]
	0x01F82E2C LDRH W9, [X8 + 0x12E]
	0x01F82E30 CBZ X9, 0x1F82E54
	0x01F82E34 LDR X10, [X8 + 0xB0]
	0x01F82E38 ADD X10, X10, 0x8
	0x01F82E3C LDUR X11, [X10 - 0x8]
	0x01F82E40 CMP X11, X1
	0x01F82E44 B.EQ 0x1F82E64
	0x01F82E48 SUBS X9, X9, 0x1
	0x01F82E4C ADD X10, X10, 0x10
	0x01F82E50 B.NE 0x1F82E3C
	0x01F82E54 MOV X0, X19
	0x01F82E58 MOV W2, W31
	0x01F82E5C BL 0x1C5C788
	0x01F82E60 B 0x1F82E70
	0x01F82E64 LDRSW X9, [X10]
	0x01F82E68 ADD X8, X8, X9, 0x4, LSL
	0x01F82E6C ADD X0, X8, 0x138
	0x01F82E70 LDP X8, X1, [X0]
	0x01F82E74 MOV X0, X19
	0x01F82E78 BLR X8
	0x01F82E7C CBNZ X20, 0x1F82E88
	0x01F82E80 MOV X0, X22
	0x01F82E84 BL 0x1D2C690
	0x01F82E88 MOV X0, X20
	0x01F82E8C BL 0x1C16F18
	0x01F82E90 BL 0x1990590
	0x01F82E94 STP X30, X27, [X31 - 0x50]!
	0x01F82E98 STP X26, X25, [X31 + 0x10]
	0x01F82E9C STP X24, X23, [X31 + 0x20]
	0x01F82EA0 STP X22, X21, [X31 + 0x30]
	0x01F82EA4 STP X20, X19, [X31 + 0x40]
	0x01F82EA8 ADRP X23, 0x2457000
	0x01F82EAC LDRB W8, [X23 + 0x6B2]
	0x01F82EB0 MOV X20, X4
	0x01F82EB4 MOV X21, X3
	0x01F82EB8 MOV X22, X2
	0x01F82EBC MOV X19, X1
	0x01F82EC0 MOV X24, X0
	0x01F82EC4 TBNZ X8, 0x0, 0x1F82F18
	0x01F82EC8 ADRP X0, 0x2178000
	0x01F82ECC LDR X0, [X0 + 0x2F0]
	0x01F82ED0 BL 0x1C16CF4
	0x01F82ED4 ADRP X0, 0x2178000
	0x01F82ED8 LDR X0, [X0 + 0x2F8]
	0x01F82EDC BL 0x1C16CF4
	0x01F82EE0 ADRP X0, 0x2171000
	0x01F82EE4 LDR X0, [X0 + 0x830]
	0x01F82EE8 BL 0x1C16CF4
	0x01F82EEC ADRP X0, 0x2173000
	0x01F82EF0 LDR X0, [X0 + 0x3A0]
	0x01F82EF4 BL 0x1C16CF4
	0x01F82EF8 ADRP X0, 0x2171000
	0x01F82EFC LDR X0, [X0 + 0xEC8]
	0x01F82F00 BL 0x1C16CF4
	0x01F82F04 ADRP X0, 0x2171000
	0x01F82F08 LDR X0, [X0 + 0x848]
	0x01F82F0C BL 0x1C16CF4
	0x01F82F10 MOVZ W8, 0x1
	0x01F82F14 STRB W8, [X23 + 0x6B2]
	0x01F82F18 CBZ X24, 0x1F83078
	0x01F82F1C ADRP X25, 0x2178000
	0x01F82F20 LDR X25, [X25 + 0x2F8]
	0x01F82F24 MOV X0, X24
	0x01F82F28 LDR X1, [X25]
	0x01F82F2C BL 0x1C16E00
	0x01F82F30 CBZ X0, 0x1F830B0
	0x01F82F34 CBZ X19, 0x1F830DC
	0x01F82F38 ADRP X9, 0x2171000
	0x01F82F3C LDR X8, [X19]
	0x01F82F40 LDR X9, [X9 + 0xEC8]
	0x01F82F44 MOV X23, X0
	0x01F82F48 MOV X0, X19
	0x01F82F4C LDR X2, [X8 + 0x250]
	0x01F82F50 LDR X1, [X9]
	0x01F82F54 LDR X9, [X8 + 0x248]
	0x01F82F58 BLR X9
	0x01F82F5C ADRP X26, 0x2178000
	0x01F82F60 ADRP X27, 0x2173000
	0x01F82F64 LDR X26, [X26 + 0x2F0]
	0x01F82F68 LDR X27, [X27 + 0x3A0]
	0x01F82F6C MOV W24, W31
	0x01F82F70 LDR X8, [X23]
	0x01F82F74 LDR X1, [X26]
	0x01F82F78 LDRH W9, [X8 + 0x12E]
	0x01F82F7C CBZ X9, 0x1F82FA0
	0x01F82F80 LDR X10, [X8 + 0xB0]
	0x01F82F84 ADD X10, X10, 0x8
	0x01F82F88 LDUR X11, [X10 - 0x8]
	0x01F82F8C CMP X11, X1
	0x01F82F90 B.EQ 0x1F82FB0
	0x01F82F94 SUBS X9, X9, 0x1
	0x01F82F98 ADD X10, X10, 0x10
	0x01F82F9C B.NE 0x1F82F88
	0x01F82FA0 MOVZ W2, 0x1
	0x01F82FA4 MOV X0, X23
	0x01F82FA8 BL 0x1C5C788
	0x01F82FAC B 0x1F82FC0
	0x01F82FB0 LDR W9, [X10]
	0x01F82FB4 ADD W9, W9, 0x1
	0x01F82FB8 ADD X8, X8, W9, 0x4, SXTW
	0x01F82FBC ADD X0, X8, 0x138
	0x01F82FC0 LDP X8, X1, [X0]
	0x01F82FC4 MOV X0, X23
	0x01F82FC8 BLR X8
	0x01F82FCC CMP W24, W0
	0x01F82FD0 B.GE 0x1F83068
	0x01F82FD4 CBZ W24, 0x1F82FF0
	0x01F82FD8 LDR X8, [X19]
	0x01F82FDC LDR X1, [X27]
	0x01F82FE0 MOV X0, X19
	0x01F82FE4 LDR X9, [X8 + 0x248]
	0x01F82FE8 LDR X2, [X8 + 0x250]
	0x01F82FEC BLR X9
	0x01F82FF0 LDR X8, [X23]
	0x01F82FF4 LDR X1, [X25]
	0x01F82FF8 LDRH W9, [X8 + 0x12E]
	0x01F82FFC CBZ X9, 0x1F83020
	0x01F83000 LDR X10, [X8 + 0xB0]
	0x01F83004 ADD X10, X10, 0x8
	0x01F83008 LDUR X11, [X10 - 0x8]
	0x01F8300C CMP X11, X1
	0x01F83010 B.EQ 0x1F83030
	0x01F83014 SUBS X9, X9, 0x1
	0x01F83018 ADD X10, X10, 0x10
	0x01F8301C B.NE 0x1F83008
	0x01F83020 MOV X0, X23
	0x01F83024 MOV W2, W31
	0x01F83028 BL 0x1C5C788
	0x01F8302C B 0x1F8303C
	0x01F83030 LDRSW X9, [X10]
	0x01F83034 ADD X8, X8, X9, 0x4, LSL
	0x01F83038 ADD X0, X8, 0x138
	0x01F8303C LDP X8, X2, [X0]
	0x01F83040 MOV X0, X23
	0x01F83044 MOV W1, W24
	0x01F83048 BLR X8
	0x01F8304C MOV X1, X19
	0x01F83050 MOV X2, X22
	0x01F83054 MOV X3, X21
	0x01F83058 MOV X4, X20
	0x01F8305C BL 0x1F830E0
	0x01F83060 ADD W24, W24, 0x1
	0x01F83064 B 0x1F82F70
	0x01F83068 ADRP X9, 0x2170000
	0x01F8306C LDR X8, [X19]
	0x01F83070 LDR X9, [X9 + 0x848]
	0x01F83074 B 0x1F83088
	0x01F83078 CBZ X19, 0x1F830DC
	0x01F8307C ADRP X9, 0x2170000
	0x01F83080 LDR X8, [X19]
	0x01F83084 LDR X9, [X9 + 0x830]
	0x01F83088 LDR X1, [X9]
	0x01F8308C LDR X3, [X8 + 0x248]
	0x01F83090 LDR X2, [X8 + 0x250]
	0x01F83094 MOV X0, X19
	0x01F83098 LDP X20, X19, [X31 + 0x40]
	0x01F8309C LDP X22, X21, [X31 + 0x30]
	0x01F830A0 LDP X24, X23, [X31 + 0x20]
	0x01F830A4 LDP X26, X25, [X31 + 0x10]
	0x01F830A8 LDP X30, X27, [X31], #0x50
	0x01F830AC BR X3
	0x01F830B0 MOV X0, X24
	0x01F830B4 MOV X1, X19
	0x01F830B8 MOV X2, X22
	0x01F830BC MOV X3, X21
	0x01F830C0 MOV X4, X20
	0x01F830C4 LDP X20, X19, [X31 + 0x40]
	0x01F830C8 LDP X22, X21, [X31 + 0x30]
	0x01F830CC LDP X24, X23, [X31 + 0x20]
	0x01F830D0 LDP X26, X25, [X31 + 0x10]
	0x01F830D4 LDP X30, X27, [X31], #0x50
	0x01F830D8 B 0x1F830E0
	0x01F830DC BL 0x1C16F20
	0x01F830E0 SUB X31, X31, 0x70
	0x01F830E4 STP X29, X30, [X31 + 0x10]
	0x01F830E8 STP X28, X27, [X31 + 0x20]
	0x01F830EC STP X26, X25, [X31 + 0x30]
	0x01F830F0 STP X24, X23, [X31 + 0x40]
	0x01F830F4 STP X22, X21, [X31 + 0x50]
	0x01F830F8 STP X20, X19, [X31 + 0x60]
	0x01F830FC ADRP X24, 0x2456000
	0x01F83100 LDRB W8, [X24 + 0x6B5]
	0x01F83104 MOV X21, X4
	0x01F83108 MOV X23, X3
	0x01F8310C MOV X20, X2
	0x01F83110 MOV X19, X1
	0x01F83114 MOV X22, X0
	0x01F83118 STR X2, [X31 + 0x8]
	0x01F8311C TBNZ X8, 0x0, 0x1F83194
	0x01F83120 ADRP X0, 0x2173000
	0x01F83124 LDR X0, [X0 + 0xEF8]
	0x01F83128 BL 0x1C16CF4
	0x01F8312C ADRP X0, 0x2173000
	0x01F83130 LDR X0, [X0 + 0xF00]
	0x01F83134 BL 0x1C16CF4
	0x01F83138 ADRP X0, 0x2178000
	0x01F8313C LDR X0, [X0 + 0x5E0]
	0x01F83140 BL 0x1C16CF4
	0x01F83144 ADRP X0, 0x2197000
	0x01F83148 LDR X0, [X0 + 0x268]
	0x01F8314C BL 0x1C16CF4
	0x01F83150 ADRP X0, 0x2197000
	0x01F83154 LDR X0, [X0 + 0x270]
	0x01F83158 BL 0x1C16CF4
	0x01F8315C ADRP X0, 0x217B000
	0x01F83160 LDR X0, [X0 + 0x6D8]
	0x01F83164 BL 0x1C16CF4
	0x01F83168 ADRP X0, 0x2197000
	0x01F8316C LDR X0, [X0 + 0x278]
	0x01F83170 BL 0x1C16CF4
	0x01F83174 ADRP X0, 0x2197000
	0x01F83178 LDR X0, [X0 + 0x280]
	0x01F8317C BL 0x1C16CF4
	0x01F83180 ADRP X0, 0x2197000
	0x01F83184 LDR X0, [X0 + 0x288]
	0x01F83188 BL 0x1C16CF4
	0x01F8318C MOVZ W8, 0x1
	0x01F83190 STRB W8, [X24 + 0x6B5]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x2458000
	009 Move W8, [X21+1704]
	010 Move X23, X3
	011 Move X22, X2
	012 Move W20, W1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {65}
	018 Move X0, 0x2172000
	019 Move X0, [X0+2600]
	020 Call 0x1C17CF4
	021 Move X0, 0x2175000
	022 Move X0, [X0+2984]
	023 Call 0x1C17CF4
	024 Move X0, 0x217B000
	025 Move X0, [X0+3712]
	026 Call 0x1C17CF4
	027 Move X0, 0x2172000
	028 Move X0, [X0+1432]
	029 Call 0x1C17CF4
	030 Move X0, 0x2199000
	031 Move X0, [X0+520]
	032 Call 0x1C17CF4
	033 Move X0, 0x2176000
	034 Move X0, [X0+2344]
	035 Call 0x1C17CF4
	036 Move X0, 0x2172000
	037 Move X0, [X0+3544]
	038 Call 0x1C17CF4
	039 Move X0, 0x2199000
	040 Move X0, [X0+528]
	041 Call 0x1C17CF4
	042 Move X0, 0x2173000
	043 Move X0, [X0+3784]
	044 Call 0x1C17CF4
	045 Move X0, 0x2199000
	046 Move X0, [X0+536]
	047 Call 0x1C17CF4
	048 Move X0, 0x217A000
	049 Move X0, [X0+2416]
	050 Call 0x1C17CF4
	051 Move X0, 0x2172000
	052 Move X0, [X0+2120]
	053 Call 0x1C17CF4
	054 Move X0, 0x2174000
	055 Move X0, [X0+608]
	056 Call 0x1C17CF4
	057 Move X0, 0x217A000
	058 Move X0, [X0+2504]
	059 Call 0x1C17CF4
	060 Move X0, 0x217A000
	061 Move X0, [X0+2424]
	062 Call 0x1C17CF4
	063 Move W8, 1
	064 Move [X21+1704], W8
	065 Move X24, 0x2172000
	066 Move X8, [X23+8]
	067 Move X24, [X24+1432]
	068 Compare X8, 0
	069 JumpIfEqual {75}
	070 Move X10, [X8]
	071 Move X9, [X24]
	072 Move W12, [X10+304]
	073 Move W11, [X9+304]
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Move X21, X31
	076 Move X10, [X10+200]
	077 Add X10, X10, X11
	078 NotImplemented "Instruction LDUR not yet implemented."
	079 NotImplemented "Instruction CMP not yet implemented."
	080 NotImplemented "Instruction CSEL not yet implemented."
	081 And W8, W20, 255
	082 NotImplemented "Instruction CMP not yet implemented."
	083 NotImplemented "Instruction CMP not yet implemented."
	084 Move X0, [X19+16]
	085 Compare X0, 0
	086 JumpIfEqual {404}
	087 Move X8, 0x217A000
	088 Move X8, [X8+2416]
	089 Move X1, [X8]
	090 Move X2, X31
	091 Call StringBuilder.Append, X0, X1
	092 Move X0, [X19+16]
	093 Compare X0, 0
	094 JumpIfEqual {405}
	095 Move X8, 0x217A000
	096 Move X8, [X8+2424]
	097 Move X1, [X8]
	098 Move X2, X31
	099 Call StringBuilder.Append, X0, X1
	100 Move W8, [X19+48]
	101 Compare W8, 0
	102 JumpIfEqual {184}
	103 Move W8, [X19+49]
	104 Compare W8, 0
	105 JumpIfEqual {128}
	106 Move X0, [X19+16]
	107 Compare X0, 0
	108 JumpIfEqual {400}
	109 Move X8, 0x217A000
	110 Move X8, [X8+2504]
	111 Move X1, [X8]
	112 Move X2, X31
	113 Call StringBuilder.Append, X0, X1
	114 Move X0, [X19+16]
	115 Compare X0, 0
	116 JumpIfEqual {401}
	117 Move X1, [X19+56]
	118 Move X2, X31
	119 Call StringBuilder.Append, X0, X1
	120 Move X0, [X19+16]
	121 Compare X0, 0
	122 JumpIfEqual {402}
	123 Move X8, 0x2174000
	124 Move X8, [X8+608]
	125 Move X1, [X8]
	126 Move X2, X31
	127 Call StringBuilder.Append, X0, X1
	128 Move X0, [X19+16]
	129 Compare X0, 0
	130 JumpIfEqual {395}
	131 Move X8, 0x2199000
	132 Move X8, [X8+528]
	133 Move X1, [X8]
	134 Move X2, X31
	135 Call StringBuilder.Append, X0, X1
	136 Move X0, [X23]
	137 Move X1, X31
	138 Call String.IsNullOrEmpty, X0
	139 Move TEMP, X0
	140 And TEMP, TEMP, 1
	141 Compare TEMP, 1
	142 JumpIfEqual {157}
	143 Move X0, [X19+16]
	144 Compare X0, 0
	145 JumpIfEqual {406}
	146 Move X8, 0x2173000
	147 Move X8, [X8+3784]
	148 Move X1, [X8]
	149 Move X2, X31
	150 Call StringBuilder.Append, X0, X1
	151 Move X0, [X19+16]
	152 Compare X0, 0
	153 JumpIfEqual {407}
	154 Move X1, [X23]
	155 Move X2, X31
	156 Call StringBuilder.Append, X0, X1
	157 Move X0, [X19+16]
	158 Compare X0, 0
	159 JumpIfEqual {396}
	160 Move X8, 0x2172000
	161 Move X8, [X8+2120]
	162 Move X1, [X8]
	163 Move X2, X31
	164 Call StringBuilder.Append, X0, X1
	165 Move W8, [X19+49]
	166 Compare W8, 0
	167 JumpIfEqual {176}
	168 Move X0, [X19+16]
	169 Compare X0, 0
	170 JumpIfEqual {403}
	171 Move X8, 0x2199000
	172 Move X8, [X8+536]
	173 Move X1, [X8]
	174 Move X2, X31
	175 Call StringBuilder.Append, X0, X1
	176 Move X0, [X19+16]
	177 Compare X0, 0
	178 JumpIfEqual {397}
	179 Move X8, 0x2172000
	180 Move X8, [X8+3544]
	181 Move X1, [X8]
	182 Move X2, X31
	183 Call StringBuilder.Append, X0, X1
	184 Move X0, [X23]
	185 Move X1, X31
	186 Call String.IsNullOrEmpty, X0
	187 Move TEMP, X0
	188 And TEMP, TEMP, 1
	189 Compare TEMP, 1
	190 JumpIfEqual {205}
	191 Move X0, [X19+16]
	192 Compare X0, 0
	193 JumpIfEqual {409}
	194 Move X1, [X23]
	195 Move X2, X31
	196 Call StringBuilder.Append, X0, X1
	197 Move X0, [X19+16]
	198 Compare X0, 0
	199 JumpIfEqual {410}
	200 Move X8, 0x2176000
	201 Move X8, [X8+2344]
	202 Move X1, [X8]
	203 Move X2, X31
	204 Call StringBuilder.Append, X0, X1
	205 Move X0, [X24]
	206 Move W8, [X0+224]
	207 Compare W8, 0
	208 JumpIfNotEqual {210}
	209 Call 0x1C17DFC
	210 Move X0, X21
	211 Move X1, X31
	212 Call Object.op_Implicit, X0
	213 Move TEMP, X0
	214 And TEMP, TEMP, 1
	215 Compare TEMP, 1
	216 JumpIfNotEqual {279}
	217 Move X0, [X19+16]
	218 Compare X0, 0
	219 JumpIfEqual {398}
	220 Move X1, X31
	221 Call StringBuilder.get_Length, X0
	222 Move W23, W0
	223 Compare X21, 0
	224 JumpIfEqual {249}
	225 Move X8, 0x217B000
	226 Move X8, [X8+3712]
	227 Move X9, [X8]
	228 Move X8, [X21]
	229 NotImplemented "Instruction CMP not yet implemented."
	230 Move X9, 0x2175000
	231 Move X9, [X9+2984]
	232 Move X10, [X9]
	233 Move W9, [X8+304]
	234 Move W11, [X10+304]
	235 NotImplemented "Instruction CMP not yet implemented."
	236 Move X12, [X8+200]
	237 Add X11, X12, X11
	238 NotImplemented "Instruction LDUR not yet implemented."
	239 NotImplemented "Instruction CMP not yet implemented."
	240 Move X10, 0x2199000
	241 Move X10, [X10+520]
	242 Move X10, [X10]
	243 Move W11, [X10+304]
	244 NotImplemented "Instruction CMP not yet implemented."
	245 Move X8, [X8+200]
	246 Add X8, X8, X11
	247 NotImplemented "Instruction LDUR not yet implemented."
	248 NotImplemented "Instruction CMP not yet implemented."
	249 Move X1, [X19+16]
	250 Move X0, X19
	251 Move X2, X21
	252 Call FusionUnityLogger.AppendNameThreadSafe, X0, X1, X2
	253 Move X1, [X19+16]
	254 Move X0, X19
	255 Move X2, X21
	256 Call FusionUnityLogger.TryAppendRunnerPrefix, X0, X1, X2
	257 Move X1, [X19+16]
	258 Move X0, X19
	259 Move X2, X21
	260 Call FusionUnityLogger.TryAppendNetworkObjectPrefix, X0, X1, X2
	261 Move X1, [X19+16]
	262 Move X0, X19
	263 Move X2, X21
	264 Call FusionUnityLogger.TryAppendSimulationBehaviourPrefix, X0, X1, X2
	265 Move X0, [X19+16]
	266 Compare X0, 0
	267 JumpIfEqual {399}
	268 Move X1, X31
	269 Call StringBuilder.get_Length, X0
	270 NotImplemented "Instruction CMP not yet implemented."
	271 Move X0, [X19+16]
	272 Compare X0, 0
	273 JumpIfEqual {408}
	274 Move X8, 0x2176000
	275 Move X8, [X8+2344]
	276 Move X1, [X8]
	277 Move X2, X31
	278 Call StringBuilder.Append, X0, X1
	279 Move X0, [X19+16]
	280 Compare X0, 0
	281 JumpIfEqual {393}
	282 Move X1, X22
	283 Move X2, X31
	284 Call StringBuilder.Append, X0, X1
	285 Move X0, [X19+16]
	286 Compare X0, 0
	287 JumpIfEqual {394}
	288 Move X8, [X0]
	289 Move X9, [X8+360]
	290 Move X1, [X8+368]
	291 NotImplemented "Instruction BLR not yet implemented."
	292 Move X22, X0
	293 Move X23, X31
	294 Move W24, 14
	295 Move X0, [X19+16]
	296 Compare X0, 0
	297 JumpIfEqual {390}
	298 Move X1, X31
	299 Call StringBuilder.Clear, X0
	300 Compare X23, 0
	301 JumpIfNotEqual {391}
	302 NotImplemented "Instruction CMP not yet implemented."
	303 Compare W24, 0
	304 JumpIfNotEqual {332}
	305 And W8, W20, 255
	306 NotImplemented "Instruction CMP not yet implemented."
	307 Move X19, [X19+24]
	308 Move X0, X31
	309 Call Thread.get_CurrentThread
	310 Move X8, 0x2172000
	311 Move X8, [X8+2600]
	312 NotImplemented "Instruction CMP not yet implemented."
	313 NotImplemented "Instruction CSEL not yet implemented."
	314 Move X8, [X8]
	315 Move W9, [X8+224]
	316 Compare W9, 0
	317 JumpIfNotEqual {320}
	318 Move X0, X8
	319 Call 0x1C17DFC
	320 Move X0, X22
	321 Move X1, X19
	322 Move X20, [X31+48]
	323 Move X19, [X31+56]
	324 Move X22, [X31+32]
	325 Move X21, [X31+40]
	326 Move X24, [X31+16]
	327 Move X23, [X31+24]
	328 Move X2, X31
	329 Move X30, [X31+64]
	330 Call Debug.LogWarning, X0, X1
	331 Return 
	332 Move X20, [X31+48]
	333 Move X19, [X31+56]
	334 Move X22, [X31+32]
	335 Move X21, [X31+40]
	336 Move X24, [X31+16]
	337 Move X23, [X31+24]
	338 Move X30, [X31+64]
	339 Return 
	340 Move X19, [X19+24]
	341 Move X0, X31
	342 Call Thread.get_CurrentThread
	343 Move X8, 0x2172000
	344 Move X8, [X8+2600]
	345 NotImplemented "Instruction CMP not yet implemented."
	346 NotImplemented "Instruction CSEL not yet implemented."
	347 Move X8, [X8]
	348 Move W9, [X8+224]
	349 Compare W9, 0
	350 JumpIfNotEqual {353}
	351 Move X0, X8
	352 Call 0x1C17DFC
	353 Move X0, X22
	354 Move X1, X19
	355 Move X20, [X31+48]
	356 Move X19, [X31+56]
	357 Move X22, [X31+32]
	358 Move X21, [X31+40]
	359 Move X24, [X31+16]
	360 Move X23, [X31+24]
	361 Move X2, X31
	362 Move X30, [X31+64]
	363 Call Debug.LogError, X0, X1
	364 Return 
	365 Move X19, [X19+24]
	366 Move X0, X31
	367 Call Thread.get_CurrentThread
	368 Move X8, 0x2172000
	369 Move X8, [X8+2600]
	370 NotImplemented "Instruction CMP not yet implemented."
	371 NotImplemented "Instruction CSEL not yet implemented."
	372 Move X8, [X8]
	373 Move W9, [X8+224]
	374 Compare W9, 0
	375 JumpIfNotEqual {378}
	376 Move X0, X8
	377 Call 0x1C17DFC
	378 Move X0, X22
	379 Move X1, X19
	380 Move X20, [X31+48]
	381 Move X19, [X31+56]
	382 Move X22, [X31+32]
	383 Move X21, [X31+40]
	384 Move X24, [X31+16]
	385 Move X23, [X31+24]
	386 Move X2, X31
	387 Move X30, [X31+64]
	388 Call Debug.Log, X0, X1
	389 Return 
	390 Call 0x1C17F20
	391 Move X0, X23
	392 Call 0x1C17F18
	393 Call 0x1C17F20
	394 Call 0x1C17F20
	395 Call 0x1C17F20
	396 Call 0x1C17F20
	397 Call 0x1C17F20
	398 Call 0x1C17F20
	399 Call 0x1C17F20
	400 Call 0x1C17F20
	401 Call 0x1C17F20
	402 Call 0x1C17F20
	403 Call 0x1C17F20
	404 Call 0x1C17F20
	405 Call 0x1C17F20
	406 Call 0x1C17F20
	407 Call 0x1C17F20
	408 Call 0x1C17F20
	409 Call 0x1C17F20
	410 Call 0x1C17F20
	411 Move X22, X0
	412 NotImplemented "Instruction CMP not yet implemented."
	413 Move X0, X22
	414 Call 0x3EB2AD0
	415 Move X23, [X0]
	416 Call 0x3EB2AE0
	417 Move W24, W31
	418 Move X22, X31
	419 Move X23, X31
	420 Move X22, X0
	421 Move X0, [X19+16]
	422 Compare X0, 0
	423 JumpIfNotEqual {425}
	424 Call 0x1C17F20
	425 Move X1, X31
	426 Call StringBuilder.Clear, X0
	427 Compare X23, 0
	428 JumpIfNotEqual {431}
	429 Move X0, X22
	430 Call 0x1D2D690
	431 Move X0, X23
	432 Call 0x1C17F18
	433 Call 0x1991590

Method: System.Void LogException(System.Exception ex, in Fusion.LogContext logContext)

Disassembly:
	0x01F83828 LDRB W8, [X21 + 0x6B7]
	0x01F8382C MOV X20, X1
	0x01F83830 MOV W19, W0
	0x01F83834 TBNZ X8, 0x0, 0x1F8384C
	0x01F83838 ADRP X0, 0x2172000
	0x01F8383C LDR X0, [X0 + 0x170]
	0x01F83840 BL 0x1C16CF4
	0x01F83844 MOVZ W8, 0x1
	0x01F83848 STRB W8, [X21 + 0x6B7]
	0x01F8384C LDR X0, [X20]
	0x01F83850 CBZ X0, 0x1F838A8
	0x01F83854 ADRP X22, 0x2172000
	0x01F83858 LDR X22, [X22 + 0x170]
	0x01F8385C LDR W8, [X0 + 0x10]
	0x01F83860 CMP W19, W8
	0x01F83864 B.GE 0x1F838B4
	0x01F83868 MOV W1, W19
	0x01F8386C MOV X2, X31
	0x01F83870 BL 0x3222A1C
	0x01F83874 LDR X8, [X22]
	0x01F83878 MOV W21, W0
	0x01F8387C LDR W9, [X8 + 0xE0]
	0x01F83880 CBNZ W9, 0x1F8388C
	0x01F83884 MOV X0, X8
	0x01F83888 BL 0x1C16DFC
	0x01F8388C MOV W0, W21
	0x01F83890 MOV X1, X31
	0x01F83894 BL 0x3317FCC
	0x01F83898 TBZ X0, 0x0, 0x1F838AC
	0x01F8389C LDR X0, [X20]
	0x01F838A0 ADD W19, W19, 0x1
	0x01F838A4 CBNZ X0, 0x1F8385C
	0x01F838A8 BL 0x1C16F20
	0x01F838AC LDR X0, [X20]
	0x01F838B0 CBZ X0, 0x1F838A8
	0x01F838B4 LDR W8, [X0 + 0x10]
	0x01F838B8 CMP W8, W19
	0x01F838BC B.EQ 0x1F838D4
	0x01F838C0 MOV W0, W19
	0x01F838C4 LDP X20, X19, [X31 + 0x20]
	0x01F838C8 LDP X22, X21, [X31 + 0x10]
	0x01F838CC LDR X30, [X31], #0x30
	0x01F838D0 RET
	0x01F838D4 STR W19, [X31 + 0xC]
	0x01F838D8 ADRP X0, 0x2170000
	0x01F838DC LDR X0, [X0 + 0x758]
	0x01F838E0 BL 0x1C16D08
	0x01F838E4 ADD X1, X31, 0xC
	0x01F838E8 BL 0x1C16E04
	0x01F838EC MOV X19, X0
	0x01F838F0 ADRP X0, 0x2197000
	0x01F838F4 LDR X0, [X0 + 0x2B0]
	0x01F838F8 BL 0x1C16D08
	0x01F838FC MOV X1, X19
	0x01F83900 MOV X2, X31
	0x01F83904 BL 0x321EFD0
	0x01F83908 MOV X19, X0
	0x01F8390C ADRP X0, 0x2170000
	0x01F83910 LDR X0, [X0 + 0x5B0]
	0x01F83914 BL 0x1C16D08
	0x01F83918 BL 0x1C16F10
	0x01F8391C MOV X1, X19
	0x01F83920 MOV X2, X31
	0x01F83924 MOV X20, X0
	0x01F83928 BL 0x337DF1C
	0x01F8392C ADRP X0, 0x2197000
	0x01F83930 LDR X0, [X0 + 0x2B8]
	0x01F83934 BL 0x1C16D08
	0x01F83938 MOV X1, X0
	0x01F8393C MOV X0, X20
	0x01F83940 BL 0x1C16DEC
	0x01F83944 SUB X31, X31, 0x40
	0x01F83948 STP X30, X23, [X31 + 0x10]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x2457000
	008 Move W8, [X22+1705]
	009 Move X20, X2
	010 Move X19, X1
	011 Move X21, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {27}
	016 Move X0, 0x2171000
	017 Move X0, [X0+2600]
	018 Call 0x1C17CF4
	019 Move X0, 0x2171000
	020 Move X0, [X0+1432]
	021 Call 0x1C17CF4
	022 Move X0, 0x2198000
	023 Move X0, [X0+576]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X22+1705], W8
	027 Compare X19, 0
	028 JumpIfEqual {89}
	029 Move X23, 0x2198000
	030 Move X22, 0x2171000
	031 Move X23, [X23+576]
	032 Move X22, [X22+2600]
	033 Move X0, X19
	034 Move X1, X31
	035 Call Exception.GetType, X0
	036 Move X8, [X23]
	037 Move X1, X0
	038 Move X2, X31
	039 Move X0, X8
	040 Call String.Format, X0, X1
	041 Move X2, X0
	042 Move X0, X21
	043 Move W1, W31
	044 Move X3, X20
	045 Call FusionUnityLogger.Log, X0, X1, X2, X3
	046 Move X8, [X20+8]
	047 Compare X8, 0
	048 JumpIfEqual {56}
	049 Move X9, 0x2171000
	050 Move X9, [X9+1432]
	051 Move X10, [X8]
	052 Move X9, [X9]
	053 Move W12, [X10+304]
	054 Move W11, [X9+304]
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Move X20, X31
	057 Move X10, [X10+200]
	058 Add X10, X10, X11
	059 NotImplemented "Instruction LDUR not yet implemented."
	060 NotImplemented "Instruction CMP not yet implemented."
	061 NotImplemented "Instruction CSEL not yet implemented."
	062 Move X0, [X22]
	063 Move W8, [X0+224]
	064 Compare W8, 0
	065 JumpIfNotEqual {67}
	066 Call 0x1C17DFC
	067 Move X0, X19
	068 Compare X20, 0
	069 JumpIfEqual {80}
	070 Move X1, X20
	071 Move X20, [X31+32]
	072 Move X19, [X31+40]
	073 Move X22, [X31+16]
	074 Move X21, [X31+24]
	075 Move X2, X31
	076 Move X30, [X31+48]
	077 Move X23, [X31+56]
	078 Call Debug.LogException, X0, X1
	079 Return 
	080 Move X20, [X31+32]
	081 Move X19, [X31+40]
	082 Move X22, [X31+16]
	083 Move X21, [X31+24]
	084 Move X1, X31
	085 Move X30, [X31+48]
	086 Move X23, [X31+56]
	087 Call Debug.LogException, X0
	088 Return 
	089 Call 0x1C17F20

Method: System.Int32 GetRandomColor(System.Int32 seed)

Disassembly:
	0x01F8394C STP X22, X21, [X31 + 0x20]
	0x01F83950 STP X20, X19, [X31 + 0x30]
	0x01F83954 ADRP X22, 0x2456000
	0x01F83958 LDRB W8, [X22 + 0x6B6]
	0x01F8395C MOV X21, X2
	0x01F83960 MOV X20, X1
	0x01F83964 MOV X19, X0
	0x01F83968 TBNZ X8, 0x0, 0x1F839E0
	0x01F8396C ADRP X0, 0x2197000
	0x01F83970 LDR X0, [X0 + 0x2C0]
	0x01F83974 BL 0x1C16CF4
	0x01F83978 ADRP X0, 0x2197000
	0x01F8397C LDR X0, [X0 + 0x2C8]
	0x01F83980 BL 0x1C16CF4
	0x01F83984 ADRP X0, 0x2197000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move S0, [X0+72]
	006 Move S1, [X0+76]
	007 Move S2, [X0+80]
	008 Move S3, [X0+84]
	009 Move W19, [X0+64]
	010 Move W20, [X0+68]
	011 Move X0, X31
	012 Move W21, W1
	013 Call 0x1E44664
	014 Move X1, X19
	015 Move X2, X20
	016 Move X20, [X31+16]
	017 Move X19, [X31+24]
	018 And X3, X0, 0
	019 Move W0, W21
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]

Method: System.Int32 GetColorSeed(System.String name)

Disassembly:
	0x01F83A90 BLR X8
	0x01F83A94 ADRP X8, 0x2170000
	0x01F83A98 LDR X8, [X8 + 0x6C0]
	0x01F83A9C MOV X19, X0
	0x01F83AA0 LDR X8, [X8]
	0x01F83AA4 LDR W9, [X8 + 0xE0]
	0x01F83AA8 CBNZ W9, 0x1F83AB4
	0x01F83AAC MOV X0, X8
	0x01F83AB0 BL 0x1C16DFC
	0x01F83AB4 MOV X0, X19
	0x01F83AB8 MOV X1, X31
	0x01F83ABC MOV X2, X31
	0x01F83AC0 BL 0x3395194
	0x01F83AC4 TBNZ X0, 0x0, 0x1F83BAC
	0x01F83AC8 B 0x1F83BF4
	0x01F83ACC LDR W8, [X20 + 0x10]
	0x01F83AD0 ADD W9, W22, 0x4
	0x01F83AD4 CMP W9, W8
	0x01F83AD8 B.GE 0x1F83CA0
	0x01F83ADC ADRP X21, 0x2456000
	0x01F83AE0 LDRB W9, [X21 + 0x761]
	0x01F83AE4 CBNZ W9, 0x1F83B00
	0x01F83AE8 ADRP X0, 0x2197000
	0x01F83AEC LDR X0, [X0 + 0x290]
	0x01F83AF0 BL 0x1C16CF4
	0x01F83AF4 MOVZ W8, 0x1
	0x01F83AF8 STRB W8, [X21 + 0x761]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Compare X1, 0
	006 JumpIfEqual {31}
	007 Move W8, [X1+16]
	008 Move X19, X1
	009 NotImplemented "Instruction CMP not yet implemented."
	010 Move W21, W31
	011 Move W20, W31
	012 Move X0, X19
	013 Move W1, W21
	014 Move X2, X31
	015 Call String.get_Chars, X0, X1
	016 Move W8, [X19+16]
	017 Move W9, W20
	018 ShiftRight W9, 27
	019 And W9, W9, 0x3FFFFFF
	020 Subtract W9, W9, W20
	021 Add W21, W21, 1
	022 NotImplemented "Instruction CMP not yet implemented."
	023 Add W20, W9, W0
	024 Move W20, W31
	025 Move W0, W20
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Return X0
	031 Call 0x1C17F20

Method: System.Int32 GetRandomColor(System.Int32 seed, UnityEngine.Color32 min, UnityEngine.Color32 max, UnityEngine.Color32 svr)

Disassembly:
	0x01F83988 LDR X0, [X0 + 0x2D0]
	0x01F8398C BL 0x1C16CF4
	0x01F83990 ADRP X0, 0x2197000
	0x01F83994 LDR X0, [X0 + 0x2D8]
	0x01F83998 BL 0x1C16CF4
	0x01F8399C ADRP X0, 0x2178000
	0x01F839A0 LDR X0, [X0 + 0x5C8]
	0x01F839A4 BL 0x1C16CF4
	0x01F839A8 ADRP X0, 0x2170000
	0x01F839AC LDR X0, [X0 + 0x6C0]
	0x01F839B0 BL 0x1C16CF4
	0x01F839B4 ADRP X0, 0x2197000
	0x01F839B8 LDR X0, [X0 + 0x270]
	0x01F839BC BL 0x1C16CF4
	0x01F839C0 ADRP X0, 0x2170000
	0x01F839C4 LDR X0, [X0 + 0x830]
	0x01F839C8 BL 0x1C16CF4
	0x01F839CC ADRP X0, 0x2197000
	0x01F839D0 LDR X0, [X0 + 0x2E0]
	0x01F839D4 BL 0x1C16CF4
	0x01F839D8 MOVZ W8, 0x1
	0x01F839DC STRB W8, [X22 + 0x6B6]
	0x01F839E0 CBZ X20, 0x1F83C9C
	0x01F839E4 LDR W1, [X19]
	0x01F839E8 MOV X0, X20
	0x01F839EC MOV X2, X31
	0x01F839F0 BL 0x3222A1C
	0x01F839F4 LDR W22, [X19]
	0x01F839F8 AND W8, W0, 0xFFFF
	0x01F839FC CMP W8, 0x7B
	0x01F83A00 B.NE 0x1F83ACC
	0x01F83A04 MOVZ W2, 0x7B
	0x01F83A08 MOVZ W3, 0x7D
	0x01F83A0C MOV X0, X20
	0x01F83A10 MOV W1, W22
	0x01F83A14 BL 0x1F84188
	0x01F83A18 LDR W1, [X19]
	0x01F83A1C TBNZ X0, 0x1F, 0x1F83CC8
	0x01F83A20 ADD W22, W0, 0x1
	0x01F83A24 SUB W2, W22, W1
	0x01F83A28 MOV X0, X20
	0x01F83A2C MOV X3, X31
	0x01F83A30 BL 0x3228DE4
	0x01F83A34 STR W22, [X19]
	0x01F83A38 CBZ X0, 0x1F83C9C
	0x01F83A3C ADRP X8, 0x2197000
	0x01F83A40 ADRP X9, 0x2197000
	0x01F83A44 LDR X8, [X8 + 0x270]
	0x01F83A48 LDR X9, [X9 + 0x2E0]
	0x01F83A4C MOVZ W3, 0x4
	0x01F83A50 MOV X4, X31
	0x01F83A54 LDR X1, [X8]
	0x01F83A58 LDR X2, [X9]
	0x01F83A5C MOV X20, X0
	0x01F83A60 BL 0x3228F7C
	0x01F83A64 ADRP X8, 0x2197000
	0x01F83A68 LDR X8, [X8 + 0x2C8]
	0x01F83A6C LDR X1, [X8]
	0x01F83A70 BL 0x22113C0
	0x01F83A74 CBZ X0, 0x1F83C9C
	0x01F83A78 LDR X19, [X0 + 0x10]
	0x01F83A7C CBZ X21, 0x1F83BB4
	0x01F83A80 LDR X8, [X21 + 0x18]
	0x01F83A84 LDR X0, [X21 + 0x40]
	0x01F83A88 LDR X2, [X21 + 0x28]
	0x01F83A8C MOV X1, X19

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+32], X30
	003 Move [X31+48], X24
	004 Move [X31+56], X23
	005 Move [X31+64], X22
	006 Move [X31+72], X21
	007 Move [X31+80], X20
	008 Move [X31+88], X19
	009 NotImplemented "Instruction MRS not yet implemented."
	010 Move X8, [X24+40]
	011 Move W19, W0
	012 Move X20, X2
	013 Move X22, X1
	014 Add X0, X31, 8
	015 Move W1, W19
	016 Move X2, X31
	017 Move X23, X3
	018 Move [X31+24], X8
	019 Move [X31+8], X31
	020 Move [X31+16], X31
	021 Call NetworkRNG..ctor, X0, X1
	022 Add W31, W19, 1
	023 And W1, W22, 255
	024 And W2, W20, 255
	025 Add X0, X31, 8
	026 Move X3, X31
	027 Call NetworkRNG.RangeInclusive, X0, X1, X2
	028 Move W21, W0
	029 Move W1, W22
	030 ShiftRight W1, 8
	031 And W1, W1, 0x7FFF
	032 Move W2, W20
	033 ShiftRight W2, 8
	034 And W2, W2, 0x7FFF
	035 Add X0, X31, 8
	036 Move X3, X31
	037 Call NetworkRNG.RangeInclusive, X0, X1, X2
	038 Move W19, W0
	039 Move W1, W22
	040 ShiftRight W1, 16
	041 And W1, W1, 0x7FFFFF
	042 Move W2, W20
	043 ShiftRight W2, 16
	044 And W2, W2, 0x7FFFFF
	045 Add X0, X31, 8
	046 Move X3, X31
	047 Call NetworkRNG.RangeInclusive, X0, X1, X2
	048 Move TEMP, X21
	049 And TEMP, TEMP, -2147483648
	050 Compare TEMP, -2147483648
	051 JumpIfNotEqual {60}
	052 Move W8, W31
	053 And W21, W23, 255
	054 Move W19, W23
	055 ShiftRight W19, 8
	056 And W19, W19, 0x7FFF
	057 Move W0, W23
	058 ShiftRight W0, 16
	059 And W0, W0, 0x7FFFFF
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Move W8, 255
	062 NotImplemented "Instruction CSEL not yet implemented."
	063 Move W8, W8
	064 ShiftRight W8, 16
	065 And W8, W8, 0x7FFF
	066 Move X11, [X24+40]
	067 Move X12, [X31+24]
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Move W10, 255
	070 NotImplemented "Instruction CSEL not yet implemented."
	071 NotImplemented "Instruction CMP not yet implemented."
	072 NotImplemented "Instruction CSEL not yet implemented."
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Move X20, [X31+80]
	075 Move X19, [X31+88]
	076 Move X22, [X31+64]
	077 Move X21, [X31+72]
	078 Move X24, [X31+48]
	079 Move X23, [X31+56]
	080 Move X30, [X31+32]
	081 NotImplemented "Instruction BIC not yet implemented."
	082 NotImplemented "Instruction BIC not yet implemented."
	083 Or W8, W8, W9
	084 Or W0, W8, W10
	085 Add X31, X31, 96
	086 Return X0
	087 Call 0x3EB2B20

Method: System.Int32 Color32ToRGB24(UnityEngine.Color32 c)

Disassembly:
	0x01F83AFC LDR W8, [X20 + 0x10]
	0x01F83B00 SUBS W8, W8, W22
	0x01F83B04 SXTW X22, W22
	0x01F83B08 B.CC 0x1F83B14
	0x01F83B0C CMP W8, 0x3

ISIL:
	001 And W8, W0, 0xFF00
	002 NotImplemented "Instruction BFM not yet implemented."
	003 NotImplemented "Instruction BFM not yet implemented."
	004 Move W0, W8
	005 Return X0

Method: System.String Color32ToRGBString(UnityEngine.Color32 c)

Disassembly:
	0x01F82A40 LDR X11, [X24 + 0x28]
	0x01F82A44 LDR X12, [X31 + 0x18]
	0x01F82A48 CMP W19, 0xFF
	0x01F82A4C MOVZ W10, 0xFF
	0x01F82A50 CSEL W9, W19, W10, LT
	0x01F82A54 CMP W0, 0xFF
	0x01F82A58 CSEL W10, W0, W10, LT
	0x01F82A5C CMP X11, X12
	0x01F82A60 B.NE 0x1F82A8C
	0x01F82A64 LDP X20, X19, [X31 + 0x50]
	0x01F82A68 LDP X22, X21, [X31 + 0x40]
	0x01F82A6C LDP X24, X23, [X31 + 0x30]
	0x01F82A70 LDR X30, [X31 + 0x20]
	0x01F82A74 BIC W9, W9, W9, 0x1F
	0x01F82A78 BIC W10, W10, W10, 0x1F
	0x01F82A7C ORR W8, W8, W9, 0x8
	0x01F82A80 ORR W0, W8, W10, 0x0
	0x01F82A84 ADD X31, X31, 0x60
	0x01F82A88 RET
	0x01F82A8C BL 0x3EB1B20
	0x01F82A90 STP X30, X21, [X31 - 0x20]!
	0x01F82A94 STP X20, X19, [X31 + 0x10]
	0x01F82A98 CBZ X1, 0x1F82AF8
	0x01F82A9C LDR W8, [X1 + 0x10]
	0x01F82AA0 MOV X19, X1
	0x01F82AA4 CMP W8, 0x1
	0x01F82AA8 B.LT 0x1F82AE4
	0x01F82AAC MOV W21, W31
	0x01F82AB0 MOV W20, W31
	0x01F82AB4 MOV X0, X19
	0x01F82AB8 MOV W1, W21
	0x01F82ABC MOV X2, X31
	0x01F82AC0 BL 0x3222A1C
	0x01F82AC4 LDR W8, [X19 + 0x10]
	0x01F82AC8 UBFM W9, W20, 0x1B, 0x1A

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x2458000
	007 Move X21, 0x2172000
	008 Move X20, 0x217A000
	009 Move W8, [X22+1706]
	010 Move X21, [X21+1880]
	011 Move X20, [X20+2440]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x2172000
	018 Move X0, [X0+1880]
	019 Call 0x1C17CF4
	020 Move X0, 0x217A000
	021 Move X0, [X0+2440]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X22+1706], W8
	025 Move X0, [X21]
	026 And W8, W19, 0xFF00
	027 NotImplemented "Instruction BFM not yet implemented."
	028 NotImplemented "Instruction BFM not yet implemented."
	029 Add X1, X31, 12
	030 Move [X31+12], W8
	031 Call 0x1C17E04
	032 Move X8, [X20]
	033 Move X1, X0
	034 Move X2, X31
	035 Move X0, X8
	036 Call String.Format, X0, X1
	037 Move X20, [X31+32]
	038 Move X19, [X31+40]
	039 Move X22, [X31+16]
	040 Move X21, [X31+24]
	041 Move X30, [X31+48]
	042 Return X0

Method: System.Void Initialize()

Disassembly:
	0x01F83B10 B.HI 0x1F83B20
	0x01F83B14 MOVZ W0, 0x18
	0x01F83B18 MOV X1, X31
	0x01F83B1C BL 0x339D764
	0x01F83B20 MOV X0, X20
	0x01F83B24 MOV X1, X31
	0x01F83B28 BL 0x3225708
	0x01F83B2C ADRP X8, 0x2170000
	0x01F83B30 LDR X8, [X8 + 0x830]
	0x01F83B34 ADRP X23, 0x2456000
	0x01F83B38 LDRB W9, [X23 + 0x762]
	0x01F83B3C ADD X20, X0, X22, 0x1, LSL
	0x01F83B40 LDR X21, [X8]
	0x01F83B44 CBZ W9, 0x1F83B64
	0x01F83B48 CBZ X21, 0x1F83B7C
	0x01F83B4C MOV X0, X21
	0x01F83B50 MOV X1, X31
	0x01F83B54 BL 0x3225708
	0x01F83B58 LDR W3, [X21 + 0x10]
	0x01F83B5C MOV X2, X0
	0x01F83B60 B 0x1F83B84
	0x01F83B64 ADRP X0, 0x2197000
	0x01F83B68 LDR X0, [X0 + 0x290]
	0x01F83B6C BL 0x1C16CF4
	0x01F83B70 MOVZ W8, 0x1
	0x01F83B74 STRB W8, [X23 + 0x762]
	0x01F83B78 CBNZ X21, 0x1F83B4C
	0x01F83B7C MOV X2, X31
	0x01F83B80 MOV X3, X31
	0x01F83B84 ADRP X8, 0x2197000
	0x01F83B88 LDR X8, [X8 + 0x2D0]
	0x01F83B8C MOVZ W1, 0x4
	0x01F83B90 MOV X0, X20
	0x01F83B94 LDR X4, [X8]
	0x01F83B98 BL 0x1F96ECC
	0x01F83B9C LDR W22, [X19]
	0x01F83BA0 TBZ X0, 0x0, 0x1F83CA0
	0x01F83BA4 ADD W8, W22, 0x4
	0x01F83BA8 STR W8, [X19]
	0x01F83BAC MOV X0, X31
	0x01F83BB0 B 0x1F83C68
	0x01F83BB4 ADRP X8, 0x2170000
	0x01F83BB8 LDR X8, [X8 + 0x6C0]
	0x01F83BBC LDR X0, [X8]
	0x01F83BC0 LDR W8, [X0 + 0xE0]
	0x01F83BC4 CBNZ W8, 0x1F83BCC
	0x01F83BC8 BL 0x1C16DFC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, 0x2457000
	006 Move X21, 0x2179000
	007 Move W8, [X19+1707]
	008 Move X21, [X21+2224]
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0x2198000
	014 Move X0, [X0+584]
	015 Call 0x1C17CF4
	016 Move X0, 0x2179000
	017 Move X0, [X0+2224]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X19+1707], W8
	021 Move X0, [X21]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move X0, X31
	027 Call Log.get_Initialized
	028 Move TEMP, X0
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfEqual {59}
	032 Move X19, 0x2198000
	033 Move X19, [X19+584]
	034 Move X0, X31
	035 Call Thread.get_CurrentThread
	036 Move X8, [X19]
	037 Move X20, X0
	038 Move X0, X8
	039 Call 0x1C17F10
	040 Move X1, X20
	041 Move X19, X0
	042 Call FusionUnityLogger..ctor, X0, X1
	043 Compare X19, 0
	044 JumpIfEqual {59}
	045 Move X0, [X21]
	046 Move W8, [X0+224]
	047 Compare W8, 0
	048 JumpIfNotEqual {50}
	049 Call 0x1C17DFC
	050 Move X0, X19
	051 Move X20, [X31+16]
	052 Move X19, [X31+24]
	053 Move W1, 3
	054 Move X2, X31
	055 Move X30, [X31+32]
	056 Move X21, [X31+40]
	057 Call Log.Init, X0, X1
	058 Return 
	059 Move X20, [X31+16]
	060 Move X19, [X31+24]
	061 Move X30, [X31+32]
	062 Move X21, [X31+40]
	063 Return 

Method: System.Void AppendNameThreadSafe(System.Text.StringBuilder builder, UnityEngine.Object obj)

Disassembly:
	0x01F835B8 LDRB W8, [X21 + 0x6B3]
	0x01F835BC MOV X19, X1
	0x01F835C0 MOV X20, X0
	0x01F835C4 TBNZ X8, 0x0, 0x1F83600
	0x01F835C8 ADRP X0, 0x2178000
	0x01F835CC LDR X0, [X0 + 0xF18]
	0x01F835D0 BL 0x1C16CF4
	0x01F835D4 ADRP X0, 0x2197000
	0x01F835D8 LDR X0, [X0 + 0x298]
	0x01F835DC BL 0x1C16CF4
	0x01F835E0 ADRP X0, 0x2178000
	0x01F835E4 LDR X0, [X0 + 0xF30]
	0x01F835E8 BL 0x1C16CF4
	0x01F835EC ADRP X0, 0x2175000
	0x01F835F0 LDR X0, [X0 + 0x740]
	0x01F835F4 BL 0x1C16CF4
	0x01F835F8 MOVZ W8, 0x1
	0x01F835FC STRB W8, [X21 + 0x6B3]
	0x01F83600 ADD X1, X31, 0x8
	0x01F83604 MOV W0, W31
	0x01F83608 STR X20, [X31 + 0x8]
	0x01F8360C BL 0x1F83818
	0x01F83610 STR W0, [X31 + 0x4]
	0x01F83614 CBZ X20, 0x1F83690
	0x01F83618 MOV W22, W0
	0x01F8361C MOV X0, X20
	0x01F83620 MOV W1, W22
	0x01F83624 MOV X2, X31
	0x01F83628 BL 0x3222A1C
	0x01F8362C AND W8, W0, 0xFFFF
	0x01F83630 CMP W8, 0x5B
	0x01F83634 B.NE 0x1F83694
	0x01F83638 ADRP X8, 0x2175000
	0x01F8363C LDR X8, [X8 + 0x740]
	0x01F83640 LDR X0, [X8]
	0x01F83644 BL 0x1C16F10
	0x01F83648 ADRP X8, 0x2178000
	0x01F8364C LDR X8, [X8 + 0xF30]
	0x01F83650 MOV X21, X0
	0x01F83654 LDR X1, [X8]
	0x01F83658 BL 0x301B7C4
	0x01F8365C ADD W0, W22, 0x1
	0x01F83660 ADD X1, X31, 0x8
	0x01F83664 BL 0x1F83818
	0x01F83668 MOV W22, W0
	0x01F8366C STR W0, [X31 + 0x4]
	0x01F83670 MOV X0, X20
	0x01F83674 MOV W1, W22
	0x01F83678 MOV X2, X31
	0x01F8367C BL 0x3222A1C
	0x01F83680 AND W8, W0, 0xFFFF
	0x01F83684 CMP W8, 0x5D
	0x01F83688 B.NE 0x1F836A8
	0x01F8368C CBNZ X21, 0x1F83780
	0x01F83690 BL 0x1C16F20
	0x01F83694 ADD X0, X31, 0x4
	0x01F83698 MOV X1, X20
	0x01F8369C MOV X2, X19
	0x01F836A0 BL 0x1F83944
	0x01F836A4 B 0x1F83794
	0x01F836A8 ADRP X23, 0x2178000
	0x01F836AC LDR X23, [X23 + 0xF18]
	0x01F836B0 MOV W8, W31
	0x01F836B4 TBZ X8, 0x0, 0x1F836E4
	0x01F836B8 MOV X0, X20
	0x01F836BC MOV W1, W22
	0x01F836C0 MOV X2, X31
	0x01F836C4 BL 0x3222A1C
	0x01F836C8 AND W8, W0, 0xFFFF
	0x01F836CC CMP W8, 0x2C
	0x01F836D0 B.NE 0x1F837A8
	0x01F836D4 ADD W0, W22, 0x1
	0x01F836D8 ADD X1, X31, 0x8
	0x01F836DC BL 0x1F83818
	0x01F836E0 STR W0, [X31 + 0x4]
	0x01F836E4 ADD X0, X31, 0x4
	0x01F836E8 MOV X1, X20
	0x01F836EC MOV X2, X19
	0x01F836F0 BL 0x1F83944
	0x01F836F4 CBZ X21, 0x1F83690
	0x01F836F8 LDR W10, [X21 + 0x1C]
	0x01F836FC LDR X8, [X21 + 0x10]
	0x01F83700 LDR X9, [X23]
	0x01F83704 ADD W10, W10, 0x1
	0x01F83708 STR W10, [X21 + 0x1C]
	0x01F8370C CBZ X8, 0x1F83690
	0x01F83710 LDRSW X10, [X21 + 0x18]
	0x01F83714 LDR W11, [X8 + 0x18]
	0x01F83718 MOV X1, X0
	0x01F8371C CMP W10, W11
	0x01F83720 B.CS 0x1F83738
	0x01F83724 ADD W9, W10, 0x1
	0x01F83728 ADD X8, X8, X10, 0x3, LSL
	0x01F8372C STR W9, [X21 + 0x18]
	0x01F83730 STR X1, [X8 + 0x20]
	0x01F83734 B 0x1F8374C
	0x01F83738 LDR X8, [X9 + 0x20]
	0x01F8373C MOV X0, X21
	0x01F83740 LDR X8, [X8 + 0xC0]
	0x01F83744 LDR X2, [X8 + 0x70]
	0x01F83748 BL 0x301BF90
	0x01F8374C LDR W0, [X31 + 0x4]
	0x01F83750 ADD X1, X31, 0x8
	0x01F83754 BL 0x1F83818
	0x01F83758 MOV W22, W0
	0x01F8375C STR W0, [X31 + 0x4]
	0x01F83760 MOV X0, X20
	0x01F83764 MOV W1, W22
	0x01F83768 MOV X2, X31
	0x01F8376C BL 0x3222A1C
	0x01F83770 AND W8, W0, 0xFFFF
	0x01F83774 CMP W8, 0x5D
	0x01F83778 MOVZ W8, 0x1
	0x01F8377C B.NE 0x1F836B4
	0x01F83780 ADRP X8, 0x2197000
	0x01F83784 LDR X8, [X8 + 0x298]
	0x01F83788 MOV X0, X21
	0x01F8378C LDR X1, [X8]
	0x01F83790 BL 0x301DDC4
	0x01F83794 LDP X20, X19, [X31 + 0x30]
	0x01F83798 LDP X22, X21, [X31 + 0x20]
	0x01F8379C LDP X30, X23, [X31 + 0x10]
	0x01F837A0 ADD X31, X31, 0x40
	0x01F837A4 RET
	0x01F837A8 STR W22, [X31]
	0x01F837AC ADRP X0, 0x2170000
	0x01F837B0 LDR X0, [X0 + 0x758]
	0x01F837B4 BL 0x1C16D08
	0x01F837B8 ADD X1, X31, 0x0
	0x01F837BC BL 0x1C16E04
	0x01F837C0 MOV X19, X0
	0x01F837C4 ADRP X0, 0x2197000
	0x01F837C8 LDR X0, [X0 + 0x2A0]
	0x01F837CC BL 0x1C16D08
	0x01F837D0 MOV X1, X19
	0x01F837D4 MOV X2, X31
	0x01F837D8 BL 0x321EFD0
	0x01F837DC MOV X19, X0
	0x01F837E0 ADRP X0, 0x2170000
	0x01F837E4 LDR X0, [X0 + 0x5B0]
	0x01F837E8 BL 0x1C16D08
	0x01F837EC BL 0x1C16F10
	0x01F837F0 MOV X1, X19
	0x01F837F4 MOV X2, X31
	0x01F837F8 MOV X20, X0
	0x01F837FC BL 0x337DF1C
	0x01F83800 ADRP X0, 0x2197000
	0x01F83804 LDR X0, [X0 + 0x2A8]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0x2457000
	009 Move W8, [X22+1708]
	010 Move X21, X2
	011 Move X19, X1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {37}
	017 Move X0, 0x2171000
	018 Move X0, [X0+1880]
	019 Call 0x1C17CF4
	020 Move X0, 0x2171000
	021 Move X0, [X0+1432]
	022 Call 0x1C17CF4
	023 Move X0, 0x2171000
	024 Move X0, [X0+3544]
	025 Call 0x1C17CF4
	026 Move X0, 0x2198000
	027 Move X0, [X0+552]
	028 Call 0x1C17CF4
	029 Move X0, 0x2198000
	030 Move X0, [X0+536]
	031 Call 0x1C17CF4
	032 Move X0, 0x2198000
	033 Move X0, [X0+560]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X22+1708], W8
	037 Compare X21, 0
	038 JumpIfEqual {151}
	039 Move X8, 0x2171000
	040 Move X8, [X8+1432]
	041 Move X0, [X8]
	042 Move W8, [X0+224]
	043 Compare W8, 0
	044 JumpIfNotEqual {46}
	045 Call 0x1C17DFC
	046 Move X0, X21
	047 Move X1, X31
	048 Move X2, X31
	049 Call Object.op_Equality, X0, X1
	050 Move TEMP, X0
	051 And TEMP, TEMP, 1
	052 Compare TEMP, 1
	053 JumpIfNotEqual {55}
	054 Move X22, [X20+32]
	055 Move X22, [X20+24]
	056 Move X0, X31
	057 Call Thread.get_CurrentThread
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Move X22, [X20+40]
	060 Move X0, X21
	061 Move X1, X31
	062 Call Object.get_name, X0
	063 Move X22, X0
	064 Move X23, 0x2171000
	065 Move W8, [X20+49]
	066 Move X23, [X23+1880]
	067 Compare W8, 0
	068 JumpIfEqual {88}
	069 Move X1, X22
	070 Call FusionUnityLogger.GetColorSeed, X0, X1
	071 Move W1, W0
	072 Move X0, X20
	073 Call FusionUnityLogger.GetRandomColor, X0, X1
	074 Move X8, [X23]
	075 Move [X31+12], W0
	076 Add X1, X31, 12
	077 Move X0, X8
	078 Call 0x1C17E04
	079 Compare X19, 0
	080 JumpIfEqual {150}
	081 Move X8, 0x2198000
	082 Move X8, [X8+552]
	083 Move X2, X0
	084 Move X0, X19
	085 Move X3, X31
	086 Move X1, [X8]
	087 Call StringBuilder.AppendFormat, X0, X1, X2
	088 Move W8, [X20+50]
	089 Compare W8, 0
	090 JumpIfEqual {110}
	091 Move X8, [X21]
	092 Move X0, X21
	093 Move X9, [X8+344]
	094 Move X1, [X8+352]
	095 NotImplemented "Instruction BLR not yet implemented."
	096 Move X8, [X23]
	097 Move [X31+8], W0
	098 Add X1, X31, 8
	099 Move X0, X8
	100 Call 0x1C17E04
	101 Compare X19, 0
	102 JumpIfEqual {150}
	103 Move X8, 0x2198000
	104 Move X8, [X8+560]
	105 Move X2, X0
	106 Move X0, X19
	107 Move X3, X31
	108 Move X1, [X8]
	109 Call StringBuilder.AppendFormat, X0, X1, X2
	110 Compare X22, 0
	111 JumpIfEqual {131}
	112 Move W8, [X22+16]
	113 NotImplemented "Instruction CMP not yet implemented."
	114 Move W8, [X20+50]
	115 Compare W8, 0
	116 JumpIfEqual {125}
	117 Compare X19, 0
	118 JumpIfEqual {150}
	119 Move X8, 0x2171000
	120 Move X8, [X8+3544]
	121 Move X0, X19
	122 Move X2, X31
	123 Move X1, [X8]
	124 Call StringBuilder.Append, X0, X1
	125 Compare X19, 0
	126 JumpIfEqual {150}
	127 Move X0, X19
	128 Move X1, X22
	129 Move X2, X31
	130 Call StringBuilder.Append, X0, X1
	131 Move W8, [X20+49]
	132 Compare W8, 0
	133 JumpIfEqual {142}
	134 Compare X19, 0
	135 JumpIfEqual {150}
	136 Move X8, 0x2198000
	137 Move X8, [X8+536]
	138 Move X0, X19
	139 Move X2, X31
	140 Move X1, [X8]
	141 Call StringBuilder.Append, X0, X1
	142 Move X20, [X31+48]
	143 Move X19, [X31+56]
	144 Move X22, [X31+32]
	145 Move X21, [X31+40]
	146 Move X30, [X31+16]
	147 Move X23, [X31+24]
	148 Add X31, X31, 64
	149 Return 
	150 Call 0x1C17F20
	151 Move X0, 0x2176000
	152 Move X0, [X0+1320]
	153 Call 0x1C17D08
	154 Call 0x1C17F10
	155 Move X19, X0
	156 Move X0, 0x217C000
	157 Move X0, [X0+2216]
	158 Call 0x1C17D08
	159 Move X1, X0
	160 Move X0, X19
	161 Move X2, X31
	162 Call ArgumentNullException..ctor, X0, X1
	163 Move X0, 0x2198000
	164 Move X0, [X0+568]
	165 Call 0x1C17D08
	166 Move X1, X0
	167 Move X0, X19
	168 Call 0x1C17DEC

Method: System.Boolean get_IsInMainThread()

Disassembly:
	0x01F83808 BL 0x1C16D08
	0x01F8380C MOV X1, X0
	0x01F83810 MOV X0, X20
	0x01F83814 BL 0x1C16DEC
	0x01F83818 STR X30, [X31 - 0x30]!
	0x01F8381C STP X22, X21, [X31 + 0x10]
	0x01F83820 STP X20, X19, [X31 + 0x20]
	0x01F83824 ADRP X21, 0x2456000

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, [X0+24]
	004 Move X0, X31
	005 Call Thread.get_CurrentThread
	006 NotImplemented "Instruction CMP not yet implemented."
	007 NotImplemented "Instruction CSET not yet implemented."
	008 Move X30, [X31+16]
	009 Move X19, [X31+24]
	010 Return X0

Method: System.Boolean TryAppendRunnerPrefix(System.Text.StringBuilder builder, Fusion.NetworkRunner runner)

Disassembly:
	0x01F83194 MOV X0, X22
	0x01F83198 MOV X1, X31
	0x01F8319C BL 0x3C86C20
	0x01F831A0 ANDS W31, W20, 0xFF
	0x01F831A4 MOV X20, X0
	0x01F831A8 B.EQ 0x1F831D0
	0x01F831AC ADRP X8, 0x2173000
	0x01F831B0 LDR X8, [X8 + 0xF00]
	0x01F831B4 ADD X0, X31, 0x8
	0x01F831B8 LDR X1, [X8]
	0x01F831BC BL 0x2434214
	0x01F831C0 MOV W1, W0
	0x01F831C4 MOV X0, X20
	0x01F831C8 BL 0x1F82BD4
	0x01F831CC MOV X20, X0
	0x01F831D0 CBZ X22, 0x1F835A0
	0x01F831D4 MOV X0, X22
	0x01F831D8 MOV X1, X31
	0x01F831DC BL 0x33BE520
	0x01F831E0 CBZ X19, 0x1F835A0
	0x01F831E4 ADRP X9, 0x2197000
	0x01F831E8 LDR X8, [X19]
	0x01F831EC LDR X9, [X9 + 0x280]
	0x01F831F0 ADRP X26, 0x2197000
	0x01F831F4 ADRP X27, 0x2197000
	0x01F831F8 LDR X2, [X8 + 0x250]
	0x01F831FC LDR X1, [X9]
	0x01F83200 LDR X9, [X8 + 0x248]
	0x01F83204 ADRP X25, 0x2197000
	0x01F83208 LDR X26, [X26 + 0x270]
	0x01F8320C LDR X27, [X27 + 0x288]
	0x01F83210 LDR X25, [X25 + 0x278]
	0x01F83214 MOV X24, X0
	0x01F83218 MOV X0, X19
	0x01F8321C BLR X9
	0x01F83220 LDR X8, [X19]
	0x01F83224 LDR X1, [X26]
	0x01F83228 MOV X0, X19
	0x01F8322C LDR X9, [X8 + 0x248]
	0x01F83230 LDR X2, [X8 + 0x250]
	0x01F83234 BLR X9
	0x01F83238 LDR X8, [X19]
	0x01F8323C LDR X1, [X27]
	0x01F83240 MOV X0, X19
	0x01F83244 LDR X9, [X8 + 0x248]
	0x01F83248 LDR X2, [X8 + 0x250]
	0x01F8324C BLR X9
	0x01F83250 CBZ X23, 0x1F83270
	0x01F83254 LDR X8, [X23 + 0x18]
	0x01F83258 LDR X0, [X23 + 0x40]
	0x01F8325C LDR X2, [X23 + 0x28]
	0x01F83260 MOV X1, X24
	0x01F83264 BLR X8
	0x01F83268 MOV X1, X0
	0x01F8326C CBNZ X0, 0x1F83298
	0x01F83270 ADRP X8, 0x2178000
	0x01F83274 LDR X8, [X8 + 0x5E0]
	0x01F83278 LDR X0, [X8]
	0x01F8327C LDR W8, [X0 + 0xE0]
	0x01F83280 CBNZ W8, 0x1F83288
	0x01F83284 BL 0x1C16DFC
	0x01F83288 MOV X0, X24
	0x01F8328C MOV X1, X31
	0x01F83290 BL 0x1E340CC
	0x01F83294 MOV X1, X0
	0x01F83298 LDR X8, [X19]
	0x01F8329C MOV X0, X19
	0x01F832A0 LDR X9, [X8 + 0x248]
	0x01F832A4 LDR X2, [X8 + 0x250]
	0x01F832A8 BLR X9
	0x01F832AC LDR X8, [X19]
	0x01F832B0 MOVZ W1, 0x22
	0x01F832B4 MOV X0, X19
	0x01F832B8 LDP X9, X2, [X8 + 0x1F8]
	0x01F832BC BLR X9
	0x01F832C0 LDR X1, [X25]
	0x01F832C4 MOV X0, X20
	0x01F832C8 MOV X2, X31
	0x01F832CC BL 0x321BA08
	0x01F832D0 TBZ X0, 0x0, 0x1F832F8
	0x01F832D4 ADRP X9, 0x217B000
	0x01F832D8 LDR X8, [X19]
	0x01F832DC LDR X9, [X9 + 0x6D8]
	0x01F832E0 MOV X0, X19
	0x01F832E4 LDR X2, [X8 + 0x250]
	0x01F832E8 LDR X1, [X9]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x2457000
	007 Move W8, [X22+1709]
	008 Move X20, X2
	009 Move X19, X1
	010 Move X21, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {29}
	015 Move X0, 0x2174000
	016 Move X0, [X0+3648]
	017 Call 0x1C17CF4
	018 Move X0, 0x217C000
	019 Move X0, [X0+3192]
	020 Call 0x1C17CF4
	021 Move X0, 0x2198000
	022 Move X0, [X0+544]
	023 Call 0x1C17CF4
	024 Move X0, 0x2171000
	025 Move X0, [X0+2120]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X22+1709], W8
	029 Compare X20, 0
	030 JumpIfEqual {82}
	031 Move X8, [X20+152]
	032 Compare X8, 0
	033 JumpIfEqual {82}
	034 Move W8, [X8+32]
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move X0, X21
	037 Move X1, X19
	038 Move X2, X20
	039 Call FusionUnityLogger.AppendNameThreadSafe, X0, X1, X2
	040 Move X0, X20
	041 Move X1, X31
	042 Call NetworkRunner.get_LocalPlayer, X0
	043 Move X21, 0x2174000
	044 Move X21, [X21+3648]
	045 Move X20, X0
	046 Move [X31+8], W20
	047 Move X8, [X21]
	048 Move W9, [X8+224]
	049 Compare W9, 0
	050 JumpIfNotEqual {53}
	051 Move X0, X8
	052 Call 0x1C17DFC
	053 Compare X19, 0
	054 JumpIfEqual {96}
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Move X8, 0x217C000
	057 Move X8, [X8+3192]
	058 Move X0, X19
	059 Move X2, X31
	060 Move X1, [X8]
	061 Call StringBuilder.Append, X0, X1
	062 Move X8, [X21]
	063 Move X19, X0
	064 Move W9, [X8+224]
	065 Compare W9, 0
	066 JumpIfNotEqual {69}
	067 Move X0, X8
	068 Call 0x1C17DFC
	069 Add X0, X31, 8
	070 Move X1, X31
	071 Call PlayerRef.get_PlayerId, X0
	072 Compare X19, 0
	073 JumpIfEqual {96}
	074 Move W1, W0
	075 Move X0, X19
	076 Move X2, X31
	077 Call StringBuilder.Append, X0, X1
	078 Compare X0, 0
	079 JumpIfEqual {96}
	080 Move X8, 0x2171000
	081 Move X8, [X8+2120]
	082 Move W0, W31
	083 Move X20, [X31+32]
	084 Move X19, [X31+40]
	085 Move X22, [X31+16]
	086 Move X21, [X31+24]
	087 Move X30, [X31+48]
	088 Return X0
	089 Move X8, 0x2198000
	090 Move X8, [X8+544]
	091 Move X0, X19
	092 Move X1, [X8]
	093 Move X2, X31
	094 Call StringBuilder.Append, X0, X1
	095 Move W0, 1
	096 Call 0x1C17F20

Method: System.Boolean TryAppendNetworkObjectPrefix(System.Text.StringBuilder builder, Fusion.NetworkObject networkObject)

Disassembly:
	0x01F832EC LDR X9, [X8 + 0x248]
	0x01F832F0 BLR X9
	0x01F832F4 B 0x1F83580
	0x01F832F8 LDR X8, [X19]
	0x01F832FC MOVZ W1, 0x2C
	0x01F83300 MOV X0, X19
	0x01F83304 LDP X9, X2, [X8 + 0x1F8]
	0x01F83308 BLR X9
	0x01F8330C CBZ X21, 0x1F83494
	0x01F83310 CBZ X20, 0x1F835A0
	0x01F83314 ADRP X29, 0x2197000
	0x01F83318 LDR X29, [X29 + 0x268]
	0x01F8331C MOVZ W2, 0x1
	0x01F83320 MOVZ W3, 0x4
	0x01F83324 MOV X0, X20
	0x01F83328 LDR X1, [X29]
	0x01F8332C MOV X4, X31
	0x01F83330 BL 0x322C310
	0x01F83334 ADRP X28, 0x2456000
	0x01F83338 TBNZ X0, 0x1F, 0x1F834B8
	0x01F8333C MOV W26, W0
	0x01F83340 MOVZ W23, 0x1
	0x01F83344 LDR X8, [X29]
	0x01F83348 CBZ X8, 0x1F835A0
	0x01F8334C LDR W8, [X8 + 0x10]
	0x01F83350 MOVZ W1, 0x7D
	0x01F83354 MOV X0, X20
	0x01F83358 MOV X3, X31
	0x01F8335C ADD W27, W8, W26
	0x01F83360 MOV W2, W27
	0x01F83364 BL 0x322BDA8
	0x01F83368 LDRB W8, [X28 + 0x761]
	0x01F8336C MOV W25, W0
	0x01F83370 CBNZ W8, 0x1F83388
	0x01F83374 ADRP X0, 0x2197000
	0x01F83378 LDR X0, [X0 + 0x290]
	0x01F8337C BL 0x1C16CF4
	0x01F83380 MOVZ W8, 0x1
	0x01F83384 STRB W8, [X28 + 0x761]
	0x01F83388 LDR W8, [X20 + 0x10]
	0x01F8338C SUB W24, W25, W27
	0x01F83390 SUBS W8, W8, W27
	0x01F83394 B.CC 0x1F833A0
	0x01F83398 CMP W8, W24
	0x01F8339C B.CS 0x1F833AC
	0x01F833A0 MOVZ W0, 0x18
	0x01F833A4 MOV X1, X31
	0x01F833A8 BL 0x339D764
	0x01F833AC MOV X0, X20
	0x01F833B0 MOV X1, X31
	0x01F833B4 BL 0x3225708
	0x01F833B8 ADD X0, X0, W27, 0x1, SXTW
	0x01F833BC MOV W1, W24
	0x01F833C0 MOVZ W2, 0x7
	0x01F833C4 MOV X3, X31
	0x01F833C8 MOV X4, X31
	0x01F833CC BL 0x337BD58
	0x01F833D0 LDRB W8, [X28 + 0x761]
	0x01F833D4 MOV W27, W0
	0x01F833D8 CBNZ W8, 0x1F833F0
	0x01F833DC ADRP X0, 0x2197000
	0x01F833E0 LDR X0, [X0 + 0x290]
	0x01F833E4 BL 0x1C16CF4
	0x01F833E8 MOVZ W8, 0x1
	0x01F833EC STRB W8, [X28 + 0x761]
	0x01F833F0 LDR W8, [X20 + 0x10]
	0x01F833F4 SUB W26, W26, W23
	0x01F833F8 SUBS W8, W8, W23
	0x01F833FC B.CC 0x1F83408
	0x01F83400 CMP W8, W26
	0x01F83404 B.CS 0x1F83414
	0x01F83408 MOVZ W0, 0x18
	0x01F8340C MOV X1, X31
	0x01F83410 BL 0x339D764
	0x01F83414 MOV X0, X20
	0x01F83418 MOV X1, X31
	0x01F8341C BL 0x3225708
	0x01F83420 LDR X8, [X19]
	0x01F83424 ADD X1, X0, W23, 0x1, SXTW
	0x01F83428 MOV W2, W26
	0x01F8342C MOV X0, X19
	0x01F83430 LDR X9, [X8 + 0x228]
	0x01F83434 LDR X3, [X8 + 0x230]
	0x01F83438 BLR X9
	0x01F8343C LDR X8, [X21 + 0x18]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0x2457000
	009 Move W8, [X22+1710]
	010 Move X20, X2
	011 Move X19, X1
	012 Move X21, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x2174000
	018 Move X0, [X0+920]
	019 Call 0x1C17CF4
	020 Move X0, 0x2171000
	021 Move X0, [X0+3544]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X22+1710], W8
	025 Move [X31+8], W31
	026 Compare X20, 0
	027 JumpIfEqual {38}
	028 Move X22, 0x2174000
	029 Move X22, [X22+920]
	030 Move X0, X21
	031 Move X1, X19
	032 Move X2, X20
	033 Call FusionUnityLogger.AppendNameThreadSafe, X0, X1, X2
	034 Move X8, [X20+32]
	035 Compare X8, 0
	036 JumpIfEqual {39}
	037 Move W23, [X8]
	038 Move W0, W31
	039 Move W23, W31
	040 Move X0, [X22]
	041 Move [X31+8], W23
	042 Move W8, [X0+224]
	043 Compare W8, 0
	044 JumpIfEqual {72}
	045 Compare W23, 0
	046 JumpIfEqual {75}
	047 Compare X19, 0
	048 JumpIfEqual {103}
	049 Move X8, 0x2171000
	050 Move X8, [X8+3544]
	051 Move X0, X19
	052 Move X2, X31
	053 Move X1, [X8]
	054 Call StringBuilder.Append, X0, X1
	055 Move X8, [X20+32]
	056 Compare X8, 0
	057 JumpIfEqual {59}
	058 Move W8, [X8]
	059 Move X0, [X22]
	060 Move [X31+8], W8
	061 Move W8, [X0+224]
	062 Compare W8, 0
	063 JumpIfNotEqual {65}
	064 Call 0x1C17DFC
	065 Add X0, X31, 8
	066 Move X1, X31
	067 Call NetworkId.ToString, X0
	068 Move X1, X0
	069 Move X0, X19
	070 Move X2, X31
	071 Call StringBuilder.Append, X0, X1
	072 Call 0x1C17DFC
	073 Compare W23, 0
	074 JumpIfNotEqual {47}
	075 Compare X19, 0
	076 JumpIfEqual {103}
	077 Move X0, X19
	078 Move X1, X31
	079 Call StringBuilder.get_Length, X0
	080 Move X2, [X20+48]
	081 Move W20, W0
	082 Move X0, X21
	083 Move X1, X19
	084 Call FusionUnityLogger.TryAppendRunnerPrefix, X0, X1, X2
	085 Move TEMP, X0
	086 And TEMP, TEMP, 1
	087 Compare TEMP, 1
	088 JumpIfNotEqual {94}
	089 Move W2, 64
	090 Move X0, X19
	091 Move W1, W20
	092 Move X3, X31
	093 Call StringBuilder.Insert, X0, X1, X2
	094 Move W0, 1
	095 Move X20, [X31+48]
	096 Move X19, [X31+56]
	097 Move X22, [X31+32]
	098 Move X21, [X31+40]
	099 Move X30, [X31+16]
	100 Move X23, [X31+24]
	101 Add X31, X31, 64
	102 Return X0
	103 Call 0x1C17F20

Method: System.Boolean TryAppendSimulationBehaviourPrefix(System.Text.StringBuilder builder, Fusion.SimulationBehaviour simulationBehaviour)

Disassembly:
	0x01F83440 LDR X0, [X21 + 0x40]
	0x01F83444 LDR X3, [X21 + 0x28]
	0x01F83448 MOV X1, X22
	0x01F8344C MOV W2, W27
	0x01F83450 BLR X8
	0x01F83454 LDR X8, [X19]
	0x01F83458 MOV X1, X0
	0x01F8345C MOV X0, X19
	0x01F83460 LDR X9, [X8 + 0x248]
	0x01F83464 LDR X2, [X8 + 0x250]
	0x01F83468 BLR X9
	0x01F8346C LDR X1, [X29]
	0x01F83470 ADD W23, W25, 0x1
	0x01F83474 MOVZ W3, 0x4
	0x01F83478 MOV X0, X20
	0x01F8347C MOV W2, W23
	0x01F83480 MOV X4, X31
	0x01F83484 BL 0x322C310
	0x01F83488 MOV W26, W0
	0x01F8348C TBZ X0, 0x1F, 0x1F83344
	0x01F83490 B 0x1F834BC
	0x01F83494 CBZ X20, 0x1F835A0
	0x01F83498 LDR W8, [X20 + 0x10]
	0x01F8349C ADRP X22, 0x2456000
	0x01F834A0 LDRB W9, [X22 + 0x761]
	0x01F834A4 SUB W21, W8, 0x1
	0x01F834A8 CBZ W9, 0x1F83524
	0x01F834AC MOV W9, W21
	0x01F834B0 CBNZ W8, 0x1F83544
	0x01F834B4 B 0x1F8354C
	0x01F834B8 MOVZ W23, 0x1
	0x01F834BC LDR W8, [X20 + 0x10]
	0x01F834C0 LDRB W9, [X28 + 0x761]
	0x01F834C4 SUB W21, W8, W23
	0x01F834C8 CBZ W9, 0x1F834D4
	0x01F834CC MOV W9, W21
	0x01F834D0 B 0x1F834F0
	0x01F834D4 ADRP X0, 0x2197000
	0x01F834D8 LDR X0, [X0 + 0x290]
	0x01F834DC BL 0x1C16CF4
	0x01F834E0 MOVZ W8, 0x1
	0x01F834E4 STRB W8, [X28 + 0x761]
	0x01F834E8 LDR W8, [X20 + 0x10]
	0x01F834EC SUB W9, W8, W23
	0x01F834F0 CMP W8, W23
	0x01F834F4 B.CC 0x1F83500
	0x01F834F8 CMP W9, W21
	0x01F834FC B.CS 0x1F8350C
	0x01F83500 MOVZ W0, 0x18
	0x01F83504 MOV X1, X31
	0x01F83508 BL 0x339D764
	0x01F8350C MOV X0, X20
	0x01F83510 MOV X1, X31
	0x01F83514 BL 0x3225708
	0x01F83518 LDR X8, [X19]
	0x01F8351C ADD X1, X0, W23, 0x1, SXTW
	0x01F83520 B 0x1F8356C
	0x01F83524 ADRP X0, 0x2197000
	0x01F83528 LDR X0, [X0 + 0x290]
	0x01F8352C BL 0x1C16CF4
	0x01F83530 MOVZ W8, 0x1
	0x01F83534 STRB W8, [X22 + 0x761]
	0x01F83538 LDR W8, [X20 + 0x10]
	0x01F8353C SUB W9, W8, 0x1
	0x01F83540 CBZ W8, 0x1F8354C
	0x01F83544 CMP W9, W21
	0x01F83548 B.CS 0x1F83558
	0x01F8354C MOVZ W0, 0x18
	0x01F83550 MOV X1, X31
	0x01F83554 BL 0x339D764
	0x01F83558 MOV X0, X20
	0x01F8355C MOV X1, X31
	0x01F83560 BL 0x3225708
	0x01F83564 LDR X8, [X19]
	0x01F83568 ADD X1, X0, 0x2
	0x01F8356C LDR X9, [X8 + 0x228]
	0x01F83570 LDR X3, [X8 + 0x230]
	0x01F83574 MOV W2, W21
	0x01F83578 MOV X0, X19
	0x01F8357C BLR X9
	0x01F83580 LDP X20, X19, [X31 + 0x60]
	0x01F83584 LDP X22, X21, [X31 + 0x50]
	0x01F83588 LDP X24, X23, [X31 + 0x40]
	0x01F8358C LDP X26, X25, [X31 + 0x30]
	0x01F83590 LDP X28, X27, [X31 + 0x20]
	0x01F83594 LDP X29, X30, [X31 + 0x10]
	0x01F83598 ADD X31, X31, 0x70
	0x01F8359C RET
	0x01F835A0 BL 0x1C16F20
	0x01F835A4 SUB X31, X31, 0x40
	0x01F835A8 STP X30, X23, [X31 + 0x10]
	0x01F835AC STP X22, X21, [X31 + 0x20]
	0x01F835B0 STP X20, X19, [X31 + 0x30]
	0x01F835B4 ADRP X21, 0x2456000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x2457000
	007 Move W8, [X22+1711]
	008 Move X20, X2
	009 Move X19, X1
	010 Move X21, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x217B000
	016 Move X0, [X0+1240]
	017 Call 0x1C17CF4
	018 Move X0, 0x2171000
	019 Move X0, [X0+3544]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+1711], W8
	023 Move [X31+8], X31
	024 Compare X20, 0
	025 JumpIfEqual {103}
	026 Move X22, 0x217B000
	027 Move X22, [X22+1240]
	028 Move X0, X21
	029 Move X1, X19
	030 Move X2, X20
	031 Call FusionUnityLogger.AppendNameThreadSafe, X0, X1, X2
	032 Move X9, [X20]
	033 Move X8, [X22]
	034 Move W11, [X9+304]
	035 Move W10, [X8+304]
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move X9, [X9+200]
	038 Add X9, X9, X10
	039 NotImplemented "Instruction LDUR not yet implemented."
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Move X8, [X20+64]
	042 Compare X8, 0
	043 JumpIfEqual {48}
	044 Move X8, [X8+32]
	045 Compare X8, 0
	046 JumpIfEqual {48}
	047 Move W8, [X8]
	048 Move W9, [X20+104]
	049 Add X0, X31, 8
	050 Move X1, X31
	051 NotImplemented "Instruction BFM not yet implemented."
	052 Move [X31+8], X8
	053 Call NetworkBehaviourId.get_IsValid, X0
	054 Move TEMP, X0
	055 And TEMP, TEMP, 1
	056 Compare TEMP, 1
	057 JumpIfNotEqual {83}
	058 Compare X19, 0
	059 JumpIfEqual {110}
	060 Move X8, 0x2171000
	061 Move X8, [X8+3544]
	062 Move X0, X19
	063 Move X2, X31
	064 Move X1, [X8]
	065 Call StringBuilder.Append, X0, X1
	066 Move X8, [X20+64]
	067 Compare X8, 0
	068 JumpIfEqual {73}
	069 Move X8, [X8+32]
	070 Compare X8, 0
	071 JumpIfEqual {73}
	072 Move W8, [X8]
	073 Move W9, [X20+104]
	074 Add X0, X31, 8
	075 Move X1, X31
	076 NotImplemented "Instruction BFM not yet implemented."
	077 Move [X31+8], X8
	078 Call NetworkBehaviourId.ToString, X0
	079 Move X1, X0
	080 Move X0, X19
	081 Move X2, X31
	082 Call StringBuilder.Append, X0, X1
	083 Compare X19, 0
	084 JumpIfEqual {110}
	085 Move X0, X19
	086 Move X1, X31
	087 Call StringBuilder.get_Length, X0
	088 Move X2, [X20+56]
	089 Move W20, W0
	090 Move X0, X21
	091 Move X1, X19
	092 Call FusionUnityLogger.TryAppendRunnerPrefix, X0, X1, X2
	093 Move TEMP, X0
	094 And TEMP, TEMP, 1
	095 Compare TEMP, 1
	096 JumpIfNotEqual {102}
	097 Move W2, 64
	098 Move X0, X19
	099 Move W1, W20
	100 Move X3, X31
	101 Call StringBuilder.Insert, X0, X1, X2
	102 Move W0, 1
	103 Move W0, W31
	104 Move X20, [X31+32]
	105 Move X19, [X31+40]
	106 Move X22, [X31+16]
	107 Move X21, [X31+24]
	108 Move X30, [X31+48]
	109 Return X0
	110 Call 0x1C17F20

Method: System.Void Fusion.ILogger.Log(Fusion.LogType logType, System.Object message, in Fusion.LogContext logContext)

Disassembly:
	0x01F83BCC ADRP X8, 0x2178000

ISIL:
	001 Call FusionUnityLogger.Log, X0, X1, X2, X3
	002 Return 

Method: System.Void Fusion.ILogger.LogException(System.Exception ex, in Fusion.LogContext logContext)

Disassembly:
	0x01F83BD0 ADRP X9, 0x2197000

ISIL:
	001 Call FusionUnityLogger.LogException, X0, X1, X2
	002 Return 

