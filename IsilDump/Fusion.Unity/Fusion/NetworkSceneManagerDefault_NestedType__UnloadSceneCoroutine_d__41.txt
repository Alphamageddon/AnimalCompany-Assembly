Type: Fusion.NetworkSceneManagerDefault/<UnloadSceneCoroutine>d__41

Method: System.Void .ctor(System.Int32 <>1__state)

Disassembly:
	0x01F9103C STR W0, [X8 + 0x10]
	0x01F91040 B 0x1F914A4
	0x01F91044 BL 0x1C16F20
	0x01F91048 ADRP X0, 0x2162000
	0x01F9104C LDR X0, [X0 + 0x9D0]
	0x01F91050 BL 0x1C16D08
	0x01F91054 MOVZ W1, 0x4
	0x01F91058 BL 0x1C16D6C
	0x01F9105C LDR X8, [X31 + 0x78]
	0x01F91060 MOV X19, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W19, W1
	005 Move X1, X31
	006 Move X20, X0
	007 Call Object..ctor, X0
	008 Move [X20+16], W19
	009 Move X20, [X31+16]
	010 Move X19, [X31+24]
	011 Move X30, [X31+32]
	012 Return 

Method: System.Void System.IDisposable.Dispose()

Disassembly:
	0x01F92C2C B.NE 0x1F92C64
	0x01F92C30 LDR X0, [X31 + 0x58]
	0x01F92C34 BL 0x3EB1AD0
	0x01F92C38 LDR X8, [X0]
	0x01F92C3C STR X8, [X31 + 0x20]
	0x01F92C40 BL 0x3EB1AE0
	0x01F92C44 MOV X19, X31
	0x01F92C48 B 0x1F92B58
	0x01F92C4C MOV X0, X19
	0x01F92C50 BL 0x1C16F18
	0x01F92C54 STR X1, [X31]
	0x01F92C58 STR X0, [X31 + 0x58]
	0x01F92C5C B 0x1F92C14
	0x01F92C60 STR X0, [X31 + 0x58]
	0x01F92C64 ADD X0, X31, 0x20
	0x01F92C68 BL 0x199A52C
	0x01F92C6C LDR X0, [X31 + 0x58]
	0x01F92C70 BL 0x1D2C690

ISIL:
	001 Move [X31-16], X30
	002 Move W8, [X0+16]
	003 Add W8, W8, 3
	004 NotImplemented "Instruction CMP not yet implemented."
	005 Move W9, 1
	006 NotImplemented "Instruction LSLV not yet implemented."
	007 Move W9, 49
	008 And W31, W8, W9
	009 Move X8, [X0+48]
	010 Move TEMP, 0
	011 Not TEMP
	012 Move W9, TEMP
	013 Move [X0+16], W9
	014 Compare X8, 0
	015 JumpIfEqual {19}
	016 Move [X8+88], W31
	017 Move X30, [X31+16]
	018 Return 
	019 Call 0x1C17F20

Method: System.Boolean MoveNext()

Disassembly:
	0x01F92C74 BL 0x1990590
	0x01F92C78 SUB X31, X31, 0x30
	0x01F92C7C STP X30, X21, [X31 + 0x10]
	0x01F92C80 STP X20, X19, [X31 + 0x20]
	0x01F92C84 ADRP X20, 0x2447000
	0x01F92C88 ADRP X21, 0x2188000
	0x01F92C8C LDRB W8, [X20 + 0x73A]
	0x01F92C90 LDR X21, [X21 + 0xBD0]
	0x01F92C94 MOV X19, X0
	0x01F92C98 TBNZ X8, 0x0, 0x1F92CB0
	0x01F92C9C ADRP X0, 0x2188000
	0x01F92CA0 LDR X0, [X0 + 0xBD0]
	0x01F92CA4 BL 0x1C16CF4
	0x01F92CA8 MOVZ W8, 0x1
	0x01F92CAC STRB W8, [X20 + 0x73A]
	0x01F92CB0 LDR X0, [X21]
	0x01F92CB4 MOV W1, W31
	0x01F92CB8 BL 0x1C16D6C
	0x01F92CBC STR X0, [X19 + 0x28]
	0x01F92CC0 MOV X0, X31
	0x01F92CC4 BL 0x337684C
	0x01F92CC8 STP X0, X1, [X31]
	0x01F92CCC ADD X0, X31, 0x0
	0x01F92CD0 MOV X1, X31
	0x01F92CD4 BL 0x337866C
	0x01F92CD8 CBZ X0, 0x1F92D0C
	0x01F92CDC MOVZ W2, 0x13
	0x01F92CE0 MOV W1, W31
	0x01F92CE4 MOV X3, X31
	0x01F92CE8 BL 0x3228DE4
	0x01F92CEC STR X0, [X19 + 0x30]
	0x01F92CF0 MOV X0, X19
	0x01F92CF4 MOV X1, X31
	0x01F92CF8 BL 0x1E82058
	0x01F92CFC LDP X20, X19, [X31 + 0x20]
	0x01F92D00 LDP X30, X21, [X31 + 0x10]
	0x01F92D04 ADD X31, X31, 0x30
	0x01F92D08 RET
	0x01F92D0C BL 0x1C16F20
	0x01F92D10 STR X30, [X31 - 0x30]!
	0x01F92D14 STP X22, X21, [X31 + 0x10]
	0x01F92D18 STP X20, X19, [X31 + 0x20]
	0x01F92D1C ADRP X19, 0x2447000
	0x01F92D20 ADRP X22, 0x2188000
	0x01F92D24 ADRP X21, 0x2188000
	0x01F92D28 ADRP X20, 0x2188000
	0x01F92D2C LDRB W8, [X19 + 0x73B]
	0x01F92D30 LDR X22, [X22 + 0xBD8]
	0x01F92D34 LDR X21, [X21 + 0xBE0]
	0x01F92D38 LDR X20, [X20 + 0xB80]
	0x01F92D3C TBNZ X8, 0x0, 0x1F92D6C
	0x01F92D40 ADRP X0, 0x2188000
	0x01F92D44 LDR X0, [X0 + 0xB80]
	0x01F92D48 BL 0x1C16CF4
	0x01F92D4C ADRP X0, 0x2188000
	0x01F92D50 LDR X0, [X0 + 0xBE0]
	0x01F92D54 BL 0x1C16CF4
	0x01F92D58 ADRP X0, 0x2188000
	0x01F92D5C LDR X0, [X0 + 0xBD8]
	0x01F92D60 BL 0x1C16CF4
	0x01F92D64 MOVZ W8, 0x1
	0x01F92D68 STRB W8, [X19 + 0x73B]
	0x01F92D6C LDR X0, [X22]
	0x01F92D70 BL 0x1C16F10
	0x01F92D74 LDR X1, [X21]
	0x01F92D78 MOV X19, X0
	0x01F92D7C BL 0x301B7C4
	0x01F92D80 LDR X8, [X20]
	0x01F92D84 LDR X8, [X8 + 0xB8]
	0x01F92D88 STR X19, [X8]
	0x01F92D8C LDR X0, [X22]
	0x01F92D90 BL 0x1C16F10
	0x01F92D94 LDR X1, [X21]
	0x01F92D98 MOV X19, X0
	0x01F92D9C BL 0x301B7C4
	0x01F92DA0 LDR X8, [X20]
	0x01F92DA4 LDP X22, X21, [X31 + 0x10]
	0x01F92DA8 LDR X8, [X8 + 0xB8]
	0x01F92DAC STR X19, [X8 + 0x8]
	0x01F92DB0 LDP X20, X19, [X31 + 0x20]
	0x01F92DB4 LDR X30, [X31], #0x30
	0x01F92DB8 RET
	0x01F92DBC MOV X1, X31
	0x01F92DC0 B 0x1E74F1C
	0x01F92DC4 STP X30, X23, [X31 - 0x30]!
	0x01F92DC8 STP X22, X21, [X31 + 0x10]
	0x01F92DCC STP X20, X19, [X31 + 0x20]
	0x01F92DD0 ADRP X21, 0x2447000
	0x01F92DD4 ADRP X22, 0x2188000
	0x01F92DD8 ADRP X20, 0x2161000
	0x01F92DDC LDRB W8, [X21 + 0x73C]
	0x01F92DE0 LDR X22, [X22 + 0xBE8]
	0x01F92DE4 LDR X20, [X20 + 0x598]
	0x01F92DE8 MOV X19, X0
	0x01F92DEC TBNZ X8, 0x0, 0x1F92E34
	0x01F92DF0 ADRP X0, 0x2188000
	0x01F92DF4 LDR X0, [X0 + 0xBE8]
	0x01F92DF8 BL 0x1C16CF4
	0x01F92DFC ADRP X0, 0x2188000
	0x01F92E00 LDR X0, [X0 + 0x548]
	0x01F92E04 BL 0x1C16CF4
	0x01F92E08 ADRP X0, 0x216C000
	0x01F92E0C LDR X0, [X0 + 0x7A0]
	0x01F92E10 BL 0x1C16CF4
	0x01F92E14 ADRP X0, 0x2161000
	0x01F92E18 LDR X0, [X0 + 0x598]
	0x01F92E1C BL 0x1C16CF4
	0x01F92E20 ADRP X0, 0x2188000
	0x01F92E24 LDR X0, [X0 + 0xBF0]
	0x01F92E28 BL 0x1C16CF4
	0x01F92E2C MOVZ W8, 0x1
	0x01F92E30 STRB W8, [X21 + 0x73C]
	0x01F92E34 LDR X1, [X22]
	0x01F92E38 MOV X0, X19
	0x01F92E3C BL 0x21A3F50
	0x01F92E40 LDR X8, [X20]
	0x01F92E44 MOV X20, X0
	0x01F92E48 LDR W9, [X8 + 0xE0]
	0x01F92E4C CBNZ W9, 0x1F92E58
	0x01F92E50 MOV X0, X8
	0x01F92E54 BL 0x1C16DFC
	0x01F92E58 MOV X0, X20
	0x01F92E5C MOV X1, X31
	0x01F92E60 BL 0x3C38948
	0x01F92E64 TBZ X0, 0x0, 0x1F92F00
	0x01F92E68 ADRP X8, 0x2188000
	0x01F92E6C LDR X8, [X8 + 0x548]
	0x01F92E70 LDR X0, [X8]
	0x01F92E74 LDR W8, [X0 + 0xE0]
	0x01F92E78 CBNZ W8, 0x1F92E80
	0x01F92E7C BL 0x1C16DFC
	0x01F92E80 MOV X0, X20
	0x01F92E84 BL 0x1F884C0
	0x01F92E88 ADRP X22, 0x216C000
	0x01F92E8C LDR X22, [X22 + 0x7A0]
	0x01F92E90 LDR X0, [X22]
	0x01F92E94 BL 0x1C16F10
	0x01F92E98 ADRP X23, 0x2188000
	0x01F92E9C LDR X23, [X23 + 0xBF0]
	0x01F92EA0 MOV X1, X19
	0x01F92EA4 MOV X3, X31
	0x01F92EA8 MOV X21, X0
	0x01F92EAC LDR X2, [X23]
	0x01F92EB0 BL 0x1EB1F6C
	0x01F92EB4 CBZ X20, 0x1F92F10
	0x01F92EB8 MOV X0, X20
	0x01F92EBC MOV X1, X21
	0x01F92EC0 MOV X2, X31
	0x01F92EC4 BL 0x1E9E224
	0x01F92EC8 LDR X0, [X22]
	0x01F92ECC BL 0x1C16F10
	0x01F92ED0 LDR X2, [X23]
	0x01F92ED4 MOV X1, X19
	0x01F92ED8 MOV X3, X31
	0x01F92EDC MOV X21, X0
	0x01F92EE0 BL 0x1EB1F6C
	0x01F92EE4 MOV X0, X20
	0x01F92EE8 MOV X1, X21
	0x01F92EEC LDP X20, X19, [X31 + 0x20]
	0x01F92EF0 LDP X22, X21, [X31 + 0x10]
	0x01F92EF4 MOV X2, X31
	0x01F92EF8 LDP X30, X23, [X31], #0x30
	0x01F92EFC B 0x1E9E188
	0x01F92F00 LDP X20, X19, [X31 + 0x20]
	0x01F92F04 LDP X22, X21, [X31 + 0x10]
	0x01F92F08 LDP X30, X23, [X31], #0x30
	0x01F92F0C RET
	0x01F92F10 BL 0x1C16F20
	0x01F92F14 SUB X31, X31, 0x30
	0x01F92F18 STP X30, X21, [X31 + 0x10]
	0x01F92F1C STP X20, X19, [X31 + 0x20]
	0x01F92F20 ADRP X21, 0x2447000
	0x01F92F24 ADRP X20, 0x2188000
	0x01F92F28 LDRB W8, [X21 + 0x73D]
	0x01F92F2C LDR X20, [X20 + 0xBF8]
	0x01F92F30 MOV X19, X0
	0x01F92F34 TBNZ X8, 0x0, 0x1F92F7C
	0x01F92F38 ADRP X0, 0x2188000
	0x01F92F3C LDR X0, [X0 + 0xBF8]
	0x01F92F40 BL 0x1C16CF4
	0x01F92F44 ADRP X0, 0x2165000
	0x01F92F48 LDR X0, [X0 + 0xF10]
	0x01F92F4C BL 0x1C16CF4
	0x01F92F50 ADRP X0, 0x2188000
	0x01F92F54 LDR X0, [X0 + 0x548]
	0x01F92F58 BL 0x1C16CF4
	0x01F92F5C ADRP X0, 0x216C000
	0x01F92F60 LDR X0, [X0 + 0x7A0]
	0x01F92F64 BL 0x1C16CF4
	0x01F92F68 ADRP X0, 0x2188000
	0x01F92F6C LDR X0, [X0 + 0xBF0]
	0x01F92F70 BL 0x1C16CF4
	0x01F92F74 MOVZ W8, 0x1
	0x01F92F78 STRB W8, [X21 + 0x73D]
	0x01F92F7C LDR X2, [X20]
	0x01F92F80 ADD X1, X31, 0x8
	0x01F92F84 MOV X0, X19
	0x01F92F88 STR X31, [X31 + 0x8]
	0x01F92F8C BL 0x21A4990
	0x01F92F90 TBZ X0, 0x0, 0x1F93054
	0x01F92F94 ADRP X8, 0x2188000
	0x01F92F98 LDR X8, [X8 + 0x548]
	0x01F92F9C LDR X20, [X31 + 0x8]
	0x01F92FA0 LDR X0, [X8]
	0x01F92FA4 LDR W8, [X0 + 0xE0]
	0x01F92FA8 CBNZ W8, 0x1F92FB0
	0x01F92FAC BL 0x1C16DFC
	0x01F92FB0 MOV X0, X20
	0x01F92FB4 BL 0x1F88674
	0x01F92FB8 ADRP X8, 0x2165000
	0x01F92FBC LDR X20, [X31 + 0x8]
	0x01F92FC0 LDR X8, [X8 + 0xF10]
	0x01F92FC4 MOVZ W1, 0x1
	0x01F92FC8 LDR X0, [X8]
	0x01F92FCC BL 0x1C16D6C
	0x01F92FD0 CBZ X0, 0x1F93064
	0x01F92FD4 MOV X21, X0
	0x01F92FD8 CBZ X19, 0x1F92FF0
	0x01F92FDC LDR X8, [X21]
	0x01F92FE0 MOV X0, X19
	0x01F92FE4 LDR X1, [X8 + 0x40]
	0x01F92FE8 BL 0x1C16E00
	0x01F92FEC CBZ X0, 0x1F9306C
	0x01F92FF0 LDR W8, [X21 + 0x18]
	0x01F92FF4 CBZ W8, 0x1F93068
	0x01F92FF8 STR X19, [X21 + 0x20]
	0x01F92FFC CBZ X20, 0x1F93064
	0x01F93000 MOV X0, X20
	0x01F93004 MOV X1, X21
	0x01F93008 MOV X2, X31
	0x01F9300C BL 0x1EA2280
	0x01F93010 ADRP X8, 0x216B000
	0x01F93014 LDR X20, [X31 + 0x8]
	0x01F93018 LDR X8, [X8 + 0x7A0]
	0x01F9301C LDR X0, [X8]
	0x01F93020 BL 0x1C16F10
	0x01F93024 ADRP X8, 0x2187000
	0x01F93028 LDR X8, [X8 + 0xBF0]
	0x01F9302C MOV X1, X19
	0x01F93030 MOV X3, X31
	0x01F93034 MOV X21, X0
	0x01F93038 LDR X2, [X8]
	0x01F9303C BL 0x1EB1F6C
	0x01F93040 CBZ X20, 0x1F93064
	0x01F93044 MOV X0, X20
	0x01F93048 MOV X1, X21
	0x01F9304C MOV X2, X31
	0x01F93050 BL 0x1E9E224
	0x01F93054 LDP X20, X19, [X31 + 0x20]
	0x01F93058 LDP X30, X21, [X31 + 0x10]
	0x01F9305C ADD X31, X31, 0x30
	0x01F93060 RET
	0x01F93064 BL 0x1C16F20
	0x01F93068 BL 0x1C16F28
	0x01F9306C BL 0x1C16F44
	0x01F93070 MOV X1, X31
	0x01F93074 BL 0x1C16DEC
	0x01F93078 STR X30, [X31 - 0x30]!
	0x01F9307C STP X22, X21, [X31 + 0x10]
	0x01F93080 STP X20, X19, [X31 + 0x20]
	0x01F93084 ADRP X22, 0x2446000
	0x01F93088 LDRB W8, [X22 + 0x73E]
	0x01F9308C MOV X21, X2
	0x01F93090 MOV X19, X1
	0x01F93094 MOV X20, X0
	0x01F93098 TBNZ X8, 0x0, 0x1F930BC
	0x01F9309C ADRP X0, 0x2187000
	0x01F930A0 LDR X0, [X0 + 0x548]
	0x01F930A4 BL 0x1C16CF4
	0x01F930A8 ADRP X0, 0x2160000
	0x01F930AC LDR X0, [X0 + 0x598]
	0x01F930B0 BL 0x1C16CF4
	0x01F930B4 MOVZ W8, 0x1
	0x01F930B8 STRB W8, [X22 + 0x73E]
	0x01F930BC CBZ X19, 0x1F93168
	0x01F930C0 MOV X0, X19
	0x01F930C4 MOV X1, X31
	0x01F930C8 BL 0x1E9E7CC
	0x01F930CC TBZ X0, 0x0, 0x1F93128
	0x01F930D0 LDR X8, [X19 + 0x98]
	0x01F930D4 CBZ X8, 0x1F93168
	0x01F930D8 LDR W8, [X8 + 0x20]
	0x01F930DC CBZ W8, 0x1F93138
	0x01F930E0 CBZ X21, 0x1F93168
	0x01F930E4 MOV X0, X21
	0x01F930E8 MOV X1, X31
	0x01F930EC BL 0x3C32ECC
	0x01F930F0 ADRP X8, 0x2187000
	0x01F930F4 LDR X8, [X8 + 0x548]
	0x01F930F8 MOV X20, X0
	0x01F930FC LDR X8, [X8]
	0x01F93100 LDR W9, [X8 + 0xE0]
	0x01F93104 CBNZ W9, 0x1F93110
	0x01F93108 MOV X0, X8
	0x01F9310C BL 0x1C16DFC
	0x01F93110 MOV X0, X19
	0x01F93114 MOV X1, X20
	0x01F93118 LDP X20, X19, [X31 + 0x20]
	0x01F9311C LDP X22, X21, [X31 + 0x10]
	0x01F93120 LDR X30, [X31], #0x30
	0x01F93124 B 0x1F88CBC
	0x01F93128 LDP X20, X19, [X31 + 0x20]
	0x01F9312C LDP X22, X21, [X31 + 0x10]
	0x01F93130 LDR X30, [X31], #0x30
	0x01F93134 RET
	0x01F93138 ADRP X8, 0x2160000
	0x01F9313C LDR X8, [X8 + 0x598]
	0x01F93140 LDR X0, [X8]
	0x01F93144 LDR W8, [X0 + 0xE0]
	0x01F93148 CBNZ W8, 0x1F93150
	0x01F9314C BL 0x1C16DFC
	0x01F93150 MOV X0, X20
	0x01F93154 LDP X20, X19, [X31 + 0x20]
	0x01F93158 LDP X22, X21, [X31 + 0x10]
	0x01F9315C MOV X1, X31
	0x01F93160 LDR X30, [X31], #0x30
	0x01F93164 B 0x3C394A8
	0x01F93168 BL 0x1C16F20
	0x01F9316C RET
	0x01F93170 STR X30, [X31 - 0x40]!
	0x01F93174 STP X24, X23, [X31 + 0x10]
	0x01F93178 STP X22, X21, [X31 + 0x20]
	0x01F9317C STP X20, X19, [X31 + 0x30]
	0x01F93180 ADRP X21, 0x2446000
	0x01F93184 LDRB W8, [X21 + 0x73F]
	0x01F93188 MOV X19, X1
	0x01F9318C MOV X20, X0
	0x01F93190 TBNZ X8, 0x0, 0x1F931B4
	0x01F93194 ADRP X0, 0x2187000
	0x01F93198 LDR X0, [X0 + 0x548]
	0x01F9319C BL 0x1C16CF4
	0x01F931A0 ADRP X0, 0x2160000
	0x01F931A4 LDR X0, [X0 + 0x598]
	0x01F931A8 BL 0x1C16CF4
	0x01F931AC MOVZ W8, 0x1
	0x01F931B0 STRB W8, [X21 + 0x73F]
	0x01F931B4 CBZ X19, 0x1F932A4
	0x01F931B8 MOV X0, X19
	0x01F931BC MOV X1, X31
	0x01F931C0 BL 0x1E9E7CC
	0x01F931C4 TBZ X0, 0x0, 0x1F9328C
	0x01F931C8 LDR X8, [X19 + 0x98]
	0x01F931CC CBZ X8, 0x1F932A4
	0x01F931D0 LDR W8, [X8 + 0x20]
	0x01F931D4 CBZ W8, 0x1F93268
	0x01F931D8 MOV X0, X19
	0x01F931DC MOV X1, X31
	0x01F931E0 BL 0x1EA8610
	0x01F931E4 STR W0, [X31 + 0x8]
	0x01F931E8 ADD X0, X31, 0x8
	0x01F931EC MOV X1, X31
	0x01F931F0 BL 0x3C46324
	0x01F931F4 TBZ X0, 0x0, 0x1F9328C
	0x01F931F8 ADD X0, X31, 0x8
	0x01F931FC MOV X1, X31
	0x01F93200 BL 0x3C46504
	0x01F93204 CBZ X0, 0x1F932A4
	0x01F93208 LDR X8, [X0 + 0x18]
	0x01F9320C MOV X20, X0
	0x01F93210 CMP W8, 0x1
	0x01F93214 B.LT 0x1F9328C
	0x01F93218 ADRP X24, 0x2187000
	0x01F9321C LDR X24, [X24 + 0x548]
	0x01F93220 MOV X22, X31
	0x01F93224 AND X8, X8, 0x0
	0x01F93228 ADD X23, X20, 0x20
	0x01F9322C CMP X22, W8, UXTW
	0x01F93230 B.CS 0x1F932A0
	0x01F93234 LDR X0, [X24]
	0x01F93238 LDR X21, [X23, X22, LSL #3]
	0x01F9323C LDR W8, [X0 + 0xE0]
	0x01F93240 CBNZ W8, 0x1F93248
	0x01F93244 BL 0x1C16DFC
	0x01F93248 MOV X0, X19
	0x01F9324C MOV X1, X21
	0x01F93250 BL 0x1F88CBC
	0x01F93254 LDR W8, [X20 + 0x18]
	0x01F93258 ADD X22, X22, 0x1
	0x01F9325C CMP X22, W8, SXTW
	0x01F93260 B.LT 0x1F9322C
	0x01F93264 B 0x1F9328C
	0x01F93268 ADRP X8, 0x2160000
	0x01F9326C LDR X8, [X8 + 0x598]
	0x01F93270 LDR X0, [X8]
	0x01F93274 LDR W8, [X0 + 0xE0]
	0x01F93278 CBNZ W8, 0x1F93280
	0x01F9327C BL 0x1C16DFC
	0x01F93280 MOV X0, X20
	0x01F93284 MOV X1, X31
	0x01F93288 BL 0x3C394A8
	0x01F9328C LDP X20, X19, [X31 + 0x30]
	0x01F93290 LDP X22, X21, [X31 + 0x20]
	0x01F93294 LDP X24, X23, [X31 + 0x10]
	0x01F93298 LDR X30, [X31], #0x40
	0x01F9329C RET
	0x01F932A0 BL 0x1C16F28
	0x01F932A4 BL 0x1C16F20
	0x01F932A8 RET
	0x01F932AC RET
	0x01F932B0 RET
	0x01F932B4 RET
	0x01F932B8 RET
	0x01F932BC RET
	0x01F932C0 RET
	0x01F932C4 RET
	0x01F932C8 RET
	0x01F932CC RET
	0x01F932D0 RET
	0x01F932D4 RET
	0x01F932D8 RET
	0x01F932DC RET
	0x01F932E0 RET
	0x01F932E4 RET
	0x01F932E8 RET
	0x01F932EC MOV X1, X31
	0x01F932F0 B 0x1E82058
	0x01F932F4 STR X30, [X31 - 0x30]!
	0x01F932F8 STP X22, X21, [X31 + 0x10]
	0x01F932FC STP X20, X19, [X31 + 0x20]
	0x01F93300 ADRP X20, 0x2446000
	0x01F93304 ADRP X22, 0x2187000
	0x01F93308 ADRP X21, 0x2160000
	0x01F9330C LDRB W8, [X20 + 0x740]
	0x01F93310 LDR X22, [X22 + 0xBE8]
	0x01F93314 LDR X21, [X21 + 0x598]
	0x01F93318 MOV X19, X0
	0x01F9331C TBNZ X8, 0x0, 0x1F93358
	0x01F93320 ADRP X0, 0x2187000
	0x01F93324 LDR X0, [X0 + 0xBE8]
	0x01F93328 BL 0x1C16CF4
	0x01F9332C ADRP X0, 0x2160000
	0x01F93330 LDR X0, [X0 + 0xA28]
	0x01F93334 BL 0x1C16CF4
	0x01F93338 ADRP X0, 0x2160000
	0x01F9333C LDR X0, [X0 + 0x598]
	0x01F93340 BL 0x1C16CF4
	0x01F93344 ADRP X0, 0x2187000
	0x01F93348 LDR X0, [X0 + 0xC00]
	0x01F9334C BL 0x1C16CF4
	0x01F93350 MOVZ W8, 0x1
	0x01F93354 STRB W8, [X20 + 0x740]
	0x01F93358 LDR X1, [X22]
	0x01F9335C MOV X0, X19
	0x01F93360 BL 0x21A3F50
	0x01F93364 STR X0, [X19 + 0x48]
	0x01F93368 MOV X20, X0
	0x01F9336C LDR X0, [X21]
	0x01F93370 LDR W8, [X0 + 0xE0]
	0x01F93374 CBNZ W8, 0x1F9337C
	0x01F93378 BL 0x1C16DFC
	0x01F9337C MOV X0, X20
	0x01F93380 MOV X1, X31
	0x01F93384 MOV X2, X31
	0x01F93388 BL 0x3C3883C
	0x01F9338C TBZ X0, 0x0, 0x1F933FC
	0x01F93390 ADRP X8, 0x2187000
	0x01F93394 LDR X8, [X8 + 0xC00]
	0x01F93398 ADRP X20, 0x2160000
	0x01F9339C MOV X1, X19
	0x01F933A0 MOV X2, X31
	0x01F933A4 LDR X0, [X8]
	0x01F933A8 LDR X20, [X20 + 0xA28]
	0x01F933AC BL 0x321EFD0
	0x01F933B0 LDR X8, [X20]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+48], X30
	003 Move [X31+56], X23
	004 Move [X31+64], X22
	005 Move [X31+72], X21
	006 Move [X31+80], X20
	007 Move [X31+88], X19
	008 Move X19, 0x2448000
	009 Move W8, [X19+1844]
	010 Move X20, X0
	011 Move [X31+40], X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {51}
	016 Move X0, 0x2189000
	017 Move X0, [X0+1336]
	018 Call 0x1C17CF4
	019 Move X0, 0x2189000
	020 Move X0, [X0+2888]
	021 Call 0x1C17CF4
	022 Move X0, 0x2189000
	023 Move X0, [X0+2568]
	024 Call 0x1C17CF4
	025 Move X0, 0x2189000
	026 Move X0, [X0+2896]
	027 Call 0x1C17CF4
	028 Move X0, 0x2189000
	029 Move X0, [X0+2688]
	030 Call 0x1C17CF4
	031 Move X0, 0x216A000
	032 Move X0, [X0+2224]
	033 Call 0x1C17CF4
	034 Move X0, 0x2162000
	035 Move X0, [X0+1432]
	036 Call 0x1C17CF4
	037 Move X0, 0x2162000
	038 Move X0, [X0+3216]
	039 Call 0x1C17CF4
	040 Move X0, 0x216D000
	041 Move X0, [X0+320]
	042 Call 0x1C17CF4
	043 Move X0, 0x2189000
	044 Move X0, [X0+2560]
	045 Call 0x1C17CF4
	046 Move X0, 0x2189000
	047 Move X0, [X0+2904]
	048 Call 0x1C17CF4
	049 Move W8, 1
	050 Move [X19+1844], W8
	051 Add X8, X31, 40
	052 Move [X31+32], W31
	053 Move [X31+24], W31
	054 Move [X31+8], X31
	055 Move [X31+16], X8
	056 Move W8, [X20+16]
	057 NotImplemented "Instruction CMP not yet implemented."
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Move W0, W31
	060 Compare W8, 0
	061 JumpIfNotEqual {327}
	062 Move X19, [X20+32]
	063 Move TEMP, 0
	064 Not TEMP
	065 Move W8, TEMP
	066 Move [X20+16], W8
	067 Compare X19, 0
	068 JumpIfEqual {372}
	069 Move W8, 1
	070 Move TEMP, 2
	071 Not TEMP
	072 Move W9, TEMP
	073 Move [X19+88], W8
	074 Move [X20+48], X19
	075 Move [X20+16], W9
	076 Move X0, X19
	077 Call NetworkSceneManagerDefault.get_IsMultiplePeer, X0
	078 Move TEMP, X0
	079 And TEMP, TEMP, 1
	080 Compare TEMP, 1
	081 JumpIfNotEqual {127}
	082 Move X8, [X19+40]
	083 Compare X8, 0
	084 JumpIfEqual {112}
	085 Move X21, 0x2189000
	086 Move X21, [X21+2896]
	087 Move W20, W31
	088 Move W9, [X8+24]
	089 NotImplemented "Instruction CMP not yet implemented."
	090 Move X2, [X21]
	091 Move X0, X8
	092 Move W1, W20
	093 Call List`1<Object>.get_Item, X0, X1
	094 Move X8, [X31+40]
	095 Move [X8+56], X0
	096 Compare X0, 0
	097 JumpIfEqual {335}
	098 Move W0, [X0+32]
	099 Move W1, [X8+40]
	100 Move X2, X31
	101 Call SceneRef.op_Equality, X0, X1
	102 Move X8, [X31+40]
	103 Move TEMP, X0
	104 And TEMP, TEMP, 1
	105 Compare TEMP, 1
	106 JumpIfEqual {256}
	107 Move [X8+56], X31
	108 Move X8, [X19+40]
	109 Add W20, W20, 1
	110 Compare X8, 0
	111 JumpIfNotEqual {88}
	112 Call 0x1C17F20
	113 Move TEMP, 2
	114 Not TEMP
	115 Move W8, TEMP
	116 Move [X20+16], W8
	117 Move X8, [X20+48]
	118 Move TEMP, 0
	119 Not TEMP
	120 Move W9, TEMP
	121 Move [X20+16], W9
	122 Compare X8, 0
	123 JumpIfEqual {371}
	124 Move W0, W31
	125 Move [X8+88], W31
	126 Move [X20+48], X31
	127 Move [X31+32], W31
	128 Move X22, 0x2162000
	129 Move X22, [X22+3216]
	130 Move W20, W31
	131 Move X0, [X22]
	132 Move W8, [X0+224]
	133 Compare W8, 0
	134 JumpIfNotEqual {136}
	135 Call 0x1C17DFC
	136 Move X0, X31
	137 Call SceneManager.get_sceneCount
	138 NotImplemented "Instruction CMP not yet implemented."
	139 Move X0, [X22]
	140 Move W8, [X0+224]
	141 Compare W8, 0
	142 JumpIfNotEqual {144}
	143 Call 0x1C17DFC
	144 Move W0, W20
	145 Move X1, X31
	146 Call SceneManager.GetSceneAt, X0
	147 Move [X31+24], W0
	148 Add X0, X31, 24
	149 Move X1, X31
	150 Call Scene.get_path, X0
	151 Move X1, X0
	152 Move X8, [X19]
	153 Move X9, [X8+792]
	154 Move X2, [X8+800]
	155 Move X0, X19
	156 NotImplemented "Instruction BLR not yet implemented."
	157 Move X8, [X31+40]
	158 And X0, X0, 0
	159 Move W1, [X8+40]
	160 Move X2, X31
	161 Call SceneRef.op_Equality, X0, X1
	162 Add W20, W20, 1
	163 Move TEMP, X0
	164 And TEMP, TEMP, 1
	165 Compare TEMP, 1
	166 JumpIfNotEqual {131}
	167 Move W8, [X31+24]
	168 Move [X31+32], W8
	169 Add X0, X31, 32
	170 Move X1, X31
	171 Call Scene.IsValid, X0
	172 Move TEMP, X0
	173 And TEMP, TEMP, 1
	174 Compare TEMP, 1
	175 JumpIfNotEqual {374}
	176 Move X21, 0x2189000
	177 Move X21, [X21+1336]
	178 Move W20, [X31+32]
	179 Move X0, [X21]
	180 Move W8, [X0+224]
	181 Compare W8, 0
	182 JumpIfNotEqual {184}
	183 Call 0x1C17DFC
	184 Move X0, X20
	185 Call FusionUnitySceneManagerUtils.CanBeUnloaded, X0
	186 Move TEMP, X0
	187 And TEMP, TEMP, 1
	188 Compare TEMP, 1
	189 JumpIfEqual {240}
	190 Move X0, [X21]
	191 Move X20, [X19+80]
	192 Move W21, [X31+32]
	193 Move W8, [X0+224]
	194 Compare W8, 0
	195 JumpIfNotEqual {197}
	196 Call 0x1C17DFC
	197 Move X0, X21
	198 Call FusionUnitySceneManagerUtils.Dump, X0
	199 Move X8, [X31+40]
	200 Move X9, 0x216D000
	201 Move X21, X0
	202 Move W8, [X8+40]
	203 Move X9, [X9+320]
	204 Move [X31], W8
	205 Move X0, [X9]
	206 Add X1, X31, 0
	207 Call 0x1C17E04
	208 Move X8, 0x2189000
	209 Move X8, [X8+2904]
	210 Move X2, X0
	211 Move X0, [X8]
	212 Move X1, X21
	213 Move X3, X31
	214 Call String.Format, X0, X1, X2
	215 Move X8, 0x216A000
	216 Move X8, [X8+2224]
	217 Move X21, X0
	218 Move X0, [X8]
	219 Move W8, [X0+224]
	220 Compare W8, 0
	221 JumpIfNotEqual {223}
	222 Call 0x1C17DFC
	223 Move X8, 0x2189000
	224 Move X8, [X8+2688]
	225 Move X2, [X8]
	226 Move X0, X20
	227 Move X1, X21
	228 Call 0x22159C8, X0, X1
	229 Move X0, [X22]
	230 Move W8, [X0+224]
	231 Compare W8, 0
	232 JumpIfNotEqual {234}
	233 Call 0x1C17DFC
	234 Move X8, 0x2189000
	235 Move X8, [X8+2560]
	236 Move X0, [X8]
	237 Move X1, X31
	238 Call SceneManager.CreateScene, X0
	239 Move [X19+64], W0
	240 Move X0, [X22]
	241 Move W19, [X31+32]
	242 Move W8, [X0+224]
	243 Compare W8, 0
	244 JumpIfNotEqual {246}
	245 Call 0x1C17DFC
	246 Move X0, X19
	247 Move X1, X31
	248 Call SceneManager.UnloadSceneAsync, X0
	249 Compare X0, 0
	250 JumpIfEqual {409}
	251 Move X8, [X31+40]
	252 Move W9, 2
	253 Move [X8+24], X0
	254 Move [X8+16], W9
	255 Move W0, 1
	256 Move X23, 0x2162000
	257 Move X23, [X23+1432]
	258 Move X21, [X8+56]
	259 Move X22, [X19+48]
	260 Move X0, [X23]
	261 Move W8, [X0+224]
	262 Compare W8, 0
	263 JumpIfNotEqual {265}
	264 Call 0x1C17DFC
	265 Move X0, X21
	266 Move X1, X22
	267 Move X2, X31
	268 Call Object.op_Equality, X0, X1
	269 Move TEMP, X0
	270 And TEMP, TEMP, 1
	271 Compare TEMP, 1
	272 JumpIfNotEqual {274}
	273 Move [X19+48], X31
	274 Move X0, [X19+40]
	275 Compare X0, 0
	276 JumpIfEqual {441}
	277 Move X8, 0x2188000
	278 Move X8, [X8+2888]
	279 Move X2, [X8]
	280 Move W1, W20
	281 Call List`1<Object>.RemoveAt, X0, X1
	282 Move X8, [X31+40]
	283 Move X0, [X8+56]
	284 Compare X0, 0
	285 JumpIfEqual {442}
	286 Move X1, X31
	287 Call Component.get_gameObject, X0
	288 Move X19, X0
	289 Move X0, [X23]
	290 Move W8, [X0+224]
	291 Compare W8, 0
	292 JumpIfNotEqual {294}
	293 Call 0x1C17DFC
	294 Move X0, X19
	295 Move X1, X31
	296 Call Object.Destroy, X0
	297 Move X20, [X31+40]
	298 Move X8, 0x2161000
	299 Move X8, [X8+1432]
	300 Move X19, [X20+56]
	301 Move X0, [X8]
	302 Move W8, [X0+224]
	303 Compare W8, 0
	304 JumpIfNotEqual {306}
	305 Call 0x1C17DFC
	306 Move X0, X19
	307 Move X1, X31
	308 Move X2, X31
	309 Call Object.op_Inequality, X0, X1
	310 Move X8, [X31+40]
	311 Move TEMP, X0
	312 And TEMP, TEMP, 1
	313 Compare TEMP, 1
	314 JumpIfNotEqual {318}
	315 Move W0, 1
	316 Move [X8+24], X31
	317 Move [X8+16], W0
	318 Move X9, [X8+48]
	319 Move TEMP, 0
	320 Not TEMP
	321 Move W10, TEMP
	322 Move [X8+16], W10
	323 Compare X9, 0
	324 JumpIfEqual {373}
	325 Move W0, W31
	326 Move [X9+88], W31
	327 Move X20, [X31+80]
	328 Move X19, [X31+88]
	329 Move X22, [X31+64]
	330 Move X21, [X31+72]
	331 Move X30, [X31+48]
	332 Move X23, [X31+56]
	333 Add X31, X31, 96
	334 Return X0
	335 Call 0x1C17F20
	336 Move X8, [X31+40]
	337 Move W8, [X8+40]
	338 Move [X31], W8
	339 Move X0, 0x216C000
	340 Move X0, [X0+320]
	341 Call 0x1C17D08
	342 Add X1, X31, 0
	343 Call 0x1C17E04
	344 Move X19, X0
	345 Move X0, 0x2188000
	346 Move X0, [X0+2912]
	347 Call 0x1C17D08
	348 Move X1, X19
	349 Move X2, X31
	350 Call String.Format, X0, X1
	351 Move X20, X0
	352 Move X0, 0x2169000
	353 Move X0, [X0+1888]
	354 Call 0x1C17D08
	355 Call 0x1C17F10
	356 Move X19, X0
	357 Move X0, 0x216C000
	358 Move X0, [X0+1240]
	359 Call 0x1C17D08
	360 Move X2, X0
	361 Move X0, X19
	362 Move X1, X20
	363 Move X3, X31
	364 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	365 Move X0, 0x2188000
	366 Move X0, [X0+2920]
	367 Call 0x1C17D08
	368 Move X1, X0
	369 Move X0, X19
	370 Call 0x1C17DEC
	371 Call 0x1C17F20
	372 Call 0x1C17F20
	373 Call 0x1C17F20
	374 Move X8, [X31+40]
	375 Move W8, [X8+40]
	376 Move [X31], W8
	377 Move X0, 0x216C000
	378 Move X0, [X0+320]
	379 Call 0x1C17D08
	380 Add X1, X31, 0
	381 Call 0x1C17E04
	382 Move X19, X0
	383 Move X0, 0x2188000
	384 Move X0, [X0+2912]
	385 Call 0x1C17D08
	386 Move X1, X19
	387 Move X2, X31
	388 Call String.Format, X0, X1
	389 Move X20, X0
	390 Move X0, 0x2169000
	391 Move X0, [X0+1888]
	392 Call 0x1C17D08
	393 Call 0x1C17F10
	394 Move X19, X0
	395 Move X0, 0x216C000
	396 Move X0, [X0+1240]
	397 Call 0x1C17D08
	398 Move X2, X0
	399 Move X0, X19
	400 Move X1, X20
	401 Move X3, X31
	402 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	403 Move X0, 0x2188000
	404 Move X0, [X0+2920]
	405 Call 0x1C17D08
	406 Move X1, X0
	407 Move X0, X19
	408 Call 0x1C17DEC
	409 Move W19, [X31+32]
	410 Move X0, 0x2188000
	411 Move X0, [X0+1336]
	412 Call 0x1C17D08
	413 Move W8, [X0+224]
	414 Compare W8, 0
	415 JumpIfNotEqual {417}
	416 Call 0x1C17DFC
	417 Move X0, X19
	418 Call FusionUnitySceneManagerUtils.Dump, X0
	419 Move X19, X0
	420 Move X0, 0x2188000
	421 Move X0, [X0+2928]
	422 Call 0x1C17D08
	423 Move X1, X19
	424 Move X2, X31
	425 Call String.Concat, X0, X1
	426 Move X19, X0
	427 Move X0, 0x2161000
	428 Move X0, [X0+1456]
	429 Call 0x1C17D08
	430 Call 0x1C17F10
	431 Move X20, X0
	432 Move X1, X19
	433 Move X2, X31
	434 Call InvalidOperationException..ctor, X0, X1
	435 Move X0, 0x2188000
	436 Move X0, [X0+2920]
	437 Call 0x1C17D08
	438 Move X1, X0
	439 Move X0, X20
	440 Call 0x1C17DEC
	441 Call 0x1C17F20
	442 Call 0x1C17F20
	443 NotImplemented "Instruction CMP not yet implemented."
	444 Call 0x3EB2AD0
	445 Move X19, [X0]
	446 Move [X31+8], X19
	447 Call 0x3EB2AE0
	448 Compare X19, 0
	449 JumpIfNotEqual {451}
	450 Move W0, W31
	451 Add X8, X31, 8
	452 Add X0, X8, 8
	453 Call 0x199B6BC
	454 Move X0, X19
	455 Call 0x1C17F18
	456 Compare X19, 0
	457 JumpIfNotEqual {459}
	458 Call 0x1D2D690
	459 Move X8, [X31+40]
	460 Move W9, [X8+16]
	461 Add W9, W9, 3
	462 NotImplemented "Instruction CMP not yet implemented."
	463 Move W10, 1
	464 NotImplemented "Instruction LSLV not yet implemented."
	465 Move W10, 49
	466 And W31, W9, W10
	467 Move X9, [X8+48]
	468 Move TEMP, 0
	469 Not TEMP
	470 Move W10, TEMP
	471 Move [X8+16], W10
	472 Compare X9, 0
	473 JumpIfNotEqual {475}
	474 Call 0x1C17F20
	475 Move [X9+88], W31
	476 Move X0, X19
	477 Call 0x1C17F18
	478 Call 0x1991590

Method: System.Void <>m__Finally1()

Disassembly:
	0x01F933B4 MOV X20, X0
	0x01F933B8 LDR W9, [X8 + 0xE0]
	0x01F933BC CBNZ W9, 0x1F933C8
	0x01F933C0 MOV X0, X8
	0x01F933C4 BL 0x1C16DFC
	0x01F933C8 MOV X0, X20
	0x01F933CC MOV X1, X31
	0x01F933D0 BL 0x3C06A04
	0x01F933D4 LDR X0, [X21]

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+48]
	003 Move TEMP, 0
	004 Not TEMP
	005 Move W9, TEMP
	006 Move [X0+16], W9
	007 Compare X8, 0
	008 JumpIfEqual {12}
	009 Move [X8+88], W31
	010 Move X30, [X31+16]
	011 Return 
	012 Call 0x1C17F20

Method: System.Object System.Collections.Generic.IEnumerator<System.Object>.get_Current()

Disassembly:
	0x01F933D8 LDR W8, [X0 + 0xE0]
	0x01F933DC CBNZ W8, 0x1F933E4

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void System.Collections.IEnumerator.Reset()

Disassembly:
	0x01F933E0 BL 0x1C16DFC
	0x01F933E4 MOV X0, X19
	0x01F933E8 LDP X20, X19, [X31 + 0x20]
	0x01F933EC LDP X22, X21, [X31 + 0x10]
	0x01F933F0 MOV X1, X31
	0x01F933F4 LDR X30, [X31], #0x30
	0x01F933F8 B 0x3C394A8
	0x01F933FC LDP X20, X19, [X31 + 0x20]
	0x01F93400 LDP X22, X21, [X31 + 0x10]
	0x01F93404 LDR X30, [X31], #0x30
	0x01F93408 RET
	0x01F9340C STP X30, X21, [X31 - 0x20]!
	0x01F93410 STP X20, X19, [X31 + 0x10]
	0x01F93414 ADRP X21, 0x2446000

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0x2161000
	004 Move X0, [X0+2880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X1, X31
	008 Move X19, X0
	009 Call NotSupportedException..ctor, X0
	010 Move X0, 0x2188000
	011 Move X0, [X0+2936]
	012 Call 0x1C17D08
	013 Move X1, X0
	014 Move X0, X19
	015 Call 0x1C17DEC

Method: System.Object System.Collections.IEnumerator.get_Current()

Disassembly:
	0x01F93418 ADRP X20, 0x2160000
	0x01F9341C LDRB W8, [X21 + 0x741]

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

