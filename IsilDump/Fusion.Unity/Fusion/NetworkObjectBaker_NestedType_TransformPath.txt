Type: Fusion.NetworkObjectBaker/TransformPath

Method: System.Void .ctor(System.UInt16 depth, System.UInt16 next, System.Collections.Generic.List`1<System.UInt16> indices, System.Int32 offset, System.Int32 count)

Disassembly:
	0x01F86F38 ADRP X25, 0x2194000
	0x01F86F3C LDR X25, [X25 + 0x4D0]
	0x01F86F40 SCVTF S0, W22
	0x01F86F44 FSUB S0, S0, S9
	0x01F86F48 FMOV S1, 0.5
	0x01F86F4C MOV X0, X23
	0x01F86F50 MOV X1, X24
	0x01F86F54 MOV X2, X31
	0x01F86F58 FMUL S10, S0, S1
	0x01F86F5C BL 0x3C74700
	0x01F86F60 LDR X3, [X25]
	0x01F86F64 STP X31, X31, [X19]
	0x01F86F68 STR W31, [X19 + 0x10]
	0x01F86F6C MOV X0, X19
	0x01F86F70 MOV V0.16B, V8.16B
	0x01F86F74 MOV V1.16B, V9.16B
	0x01F86F78 MOV W1, W20
	0x01F86F7C MOV W2, W21
	0x01F86F80 LDP X20, X19, [X31 + 0x60]
	0x01F86F84 LDP X22, X21, [X31 + 0x50]
	0x01F86F88 LDP X24, X23, [X31 + 0x40]
	0x01F86F8C LDP X26, X25, [X31 + 0x30]
	0x01F86F90 LDP X30, X27, [X31 + 0x20]
	0x01F86F94 LDP D9, D8, [X31 + 0x10]
	0x01F86F98 MOV V2.16B, V10.16B
	0x01F86F9C LDR V10, [X31], #0x70
	0x01F86FA0 B 0x27D24AC
	0x01F86FA4 BL 0x1C16F20
	0x01F86FA8 SUB X31, X31, 0x20
	0x01F86FAC STP X30, X19, [X31 + 0x10]
	0x01F86FB0 ADRP X19, 0x2453000
	0x01F86FB4 LDRB W8, [X19 + 0x6D0]
	0x01F86FB8 STR W0, [X31 + 0x8]
	0x01F86FBC TBNZ X8, 0x0, 0x1F86FD4
	0x01F86FC0 ADRP X0, 0x216D000
	0x01F86FC4 LDR X0, [X0 + 0xC90]
	0x01F86FC8 BL 0x1C16CF4
	0x01F86FCC MOVZ W8, 0x1
	0x01F86FD0 STRB W8, [X19 + 0x6D0]
	0x01F86FD4 ADD X0, X31, 0x8

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X25, 0x2454000
	010 Move W8, [X25+1726]
	011 Move W22, W5
	012 Move W19, W4
	013 Move X20, X3
	014 Move W23, W2
	015 Move W24, W1
	016 Move X21, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {26}
	021 Move X0, 0x2195000
	022 Move X0, [X0+1168]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X25+1726], W8
	026 NotImplemented "Instruction CMP not yet implemented."
	027 NotImplemented "Instruction STRH not yet implemented."
	028 NotImplemented "Instruction STRH not yet implemented."
	029 Compare X20, 0
	030 JumpIfEqual {50}
	031 Move X23, 0x2195000
	032 Move X23, [X23+1168]
	033 Move W22, W22
	034 Move X2, [X23]
	035 Move X0, X20
	036 Move W1, W19
	037 Call List`1<UInt16>.get_Item, X0, X1
	038 NotImplemented "Instruction STRH not yet implemented."
	039 Subtract X22, X22, 1
	040 Add W19, W19, 1
	041 Move X20, [X31+48]
	042 Move X19, [X31+56]
	043 Move X22, [X31+32]
	044 Move X21, [X31+40]
	045 Move X24, [X31+16]
	046 Move X23, [X31+24]
	047 Move X30, [X31+64]
	048 Move X25, [X31+72]
	049 Return 
	050 Call 0x1C17F20

Method: System.String ToString()

Disassembly:
	0x01F86A88 BL 0x1C16F10
	0x01F86A8C MOVZ W1, 0x8
	0x01F86A90 MOVZ W2, 0x8
	0x01F86A94 MOVZ W3, 0x8
	0x01F86A98 MOVZ W4, 0xA
	0x01F86A9C MOV X5, X31
	0x01F86AA0 MOV X20, X0
	0x01F86AA4 BL 0x3C0C3DC
	0x01F86AA8 CBZ X19, 0x1F86AE4
	0x01F86AAC MOV X0, X19
	0x01F86AB0 MOV X1, X20
	0x01F86AB4 LDP X20, X19, [X31 + 0x20]
	0x01F86AB8 LDP X22, X21, [X31 + 0x10]
	0x01F86ABC MOV X2, X31
	0x01F86AC0 LDR X30, [X31], #0x30
	0x01F86AC4 B 0x3C74610
	0x01F86AC8 LDR X8, [X21]
	0x01F86ACC LDP X22, X21, [X31 + 0x10]
	0x01F86AD0 LDR X8, [X8 + 0xB8]
	0x01F86AD4 STR X19, [X8]
	0x01F86AD8 LDP X20, X19, [X31 + 0x20]
	0x01F86ADC LDR X30, [X31], #0x30
	0x01F86AE0 RET
	0x01F86AE4 BL 0x1C16F20
	0x01F86AE8 SUB X31, X31, 0x70
	0x01F86AEC STP X30, X27, [X31 + 0x20]
	0x01F86AF0 STP X26, X25, [X31 + 0x30]
	0x01F86AF4 STP X24, X23, [X31 + 0x40]
	0x01F86AF8 STP X22, X21, [X31 + 0x50]
	0x01F86AFC STP X20, X19, [X31 + 0x60]
	0x01F86B00 ADRP X27, 0x2453000
	0x01F86B04 ADRP X26, 0x2194000
	0x01F86B08 ADRP X25, 0x216D000
	0x01F86B0C LDRB W8, [X27 + 0x6CE]
	0x01F86B10 LDR X26, [X26 + 0x4B8]
	0x01F86B14 LDR X25, [X25 + 0x598]
	0x01F86B18 MOV X19, X5
	0x01F86B1C MOV X20, X4
	0x01F86B20 MOV X21, X3
	0x01F86B24 MOV X22, X2
	0x01F86B28 MOV X23, X1
	0x01F86B2C MOV X24, X0
	0x01F86B30 TBNZ X8, 0x0, 0x1F86B54
	0x01F86B34 ADRP X0, 0x2194000
	0x01F86B38 LDR X0, [X0 + 0x4B8]
	0x01F86B3C BL 0x1C16CF4
	0x01F86B40 ADRP X0, 0x216D000
	0x01F86B44 LDR X0, [X0 + 0x598]
	0x01F86B48 BL 0x1C16CF4
	0x01F86B4C MOVZ W8, 0x1
	0x01F86B50 STRB W8, [X27 + 0x6CE]
	0x01F86B54 LDR X8, [X26]
	0x01F86B58 LDR X0, [X25]
	0x01F86B5C LDR X8, [X8 + 0xB8]
	0x01F86B60 LDR W9, [X0 + 0xE0]
	0x01F86B64 LDR X25, [X8]
	0x01F86B68 CBNZ W9, 0x1F86B70
	0x01F86B6C BL 0x1C16DFC
	0x01F86B70 MOV X0, X25
	0x01F86B74 MOV X1, X31
	0x01F86B78 MOV X2, X31
	0x01F86B7C BL 0x3C3883C
	0x01F86B80 TBZ X0, 0x0, 0x1F86B8C
	0x01F86B84 MOV X0, X24
	0x01F86B88 BL 0x1F866E4
	0x01F86B8C ADD X8, X31, 0x8
	0x01F86B90 BL 0x1F86BDC
	0x01F86B94 LDP S0, S1, [X31 + 0x8]
	0x01F86B98 LDP W8, W9, [X31 + 0x10]
	0x01F86B9C LDR V2, [X31 + 0x18]
	0x01F86BA0 LDP X30, X27, [X31 + 0x20]
	0x01F86BA4 STR S0, [X23]
	0x01F86BA8 STR S1, [X22]
	0x01F86BAC STR W8, [X21]
	0x01F86BB0 STR W9, [X20]
	0x01F86BB4 STR S2, [X19]
	0x01F86BB8 LDR X8, [X26]
	0x01F86BBC LDP X20, X19, [X31 + 0x60]
	0x01F86BC0 LDP X22, X21, [X31 + 0x50]
	0x01F86BC4 LDP X24, X23, [X31 + 0x40]
	0x01F86BC8 LDR X8, [X8 + 0xB8]
	0x01F86BCC LDP X26, X25, [X31 + 0x30]
	0x01F86BD0 LDR X0, [X8]
	0x01F86BD4 ADD X31, X31, 0x70
	0x01F86BD8 RET
	0x01F86BDC STR D10, [X31 - 0x70]!

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X19, 0x2454000
	009 Move X21, 0x216E000
	010 Move W8, [X19+1727]
	011 Move X21, [X21+2288]
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {31}
	017 Move X0, 0x216E000
	018 Move X0, [X0+1880]
	019 Call 0x1C17CF4
	020 Move X0, 0x216E000
	021 Move X0, [X0+2288]
	022 Call 0x1C17CF4
	023 Move X0, 0x2195000
	024 Move X0, [X0+1088]
	025 Call 0x1C17CF4
	026 Move X0, 0x216F000
	027 Move X0, [X0+3784]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X19+1727], W8
	031 Move X0, [X21]
	032 Call 0x1C17F10
	033 Move X1, X31
	034 Move X19, X0
	035 Call StringBuilder..ctor, X0
	036 NotImplemented "Instruction LDRH not yet implemented."
	037 Compare W8, 0
	038 JumpIfEqual {81}
	039 Move X23, 0x216F000
	040 Move X23, [X23+3784]
	041 Move X21, X31
	042 Move X22, X31
	043 Compare X21, 0
	044 JumpIfEqual {51}
	045 Compare X19, 0
	046 JumpIfEqual {96}
	047 Move X1, [X23]
	048 Move X0, X19
	049 Move X2, X31
	050 Call StringBuilder.Append, X0, X1
	051 Compare X19, 0
	052 JumpIfEqual {96}
	053 NotImplemented "Instruction LDRH not yet implemented."
	054 Move X0, X19
	055 Move X2, X31
	056 Call StringBuilder.Append, X0, X1
	057 NotImplemented "Instruction LDRH not yet implemented."
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Add X22, X22, 1
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Add X21, X21, 2
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Move X9, 0x216E000
	064 Move X9, [X9+1880]
	065 Subtract W8, W8, 10
	066 Add X1, X31, 12
	067 Move [X31+12], W8
	068 Move X0, [X9]
	069 Call 0x1C17E04
	070 Move X8, 0x2195000
	071 Move X8, [X8+1088]
	072 Move X1, X0
	073 Move X2, X31
	074 Move X8, [X8]
	075 Move X0, X8
	076 Call String.Format, X0, X1
	077 Move X1, X0
	078 Move X0, X19
	079 Move X2, X31
	080 Call StringBuilder.Append, X0, X1
	081 Compare X19, 0
	082 JumpIfEqual {96}
	083 Move X8, [X19]
	084 Move X0, X19
	085 Move X9, [X8+360]
	086 Move X1, [X8+368]
	087 NotImplemented "Instruction BLR not yet implemented."
	088 Move X20, [X31+48]
	089 Move X19, [X31+56]
	090 Move X22, [X31+32]
	091 Move X21, [X31+40]
	092 Move X30, [X31+16]
	093 Move X23, [X31+24]
	094 Add X31, X31, 64
	095 Return X0
	096 Call 0x1C17F20

