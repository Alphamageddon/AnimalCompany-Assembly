Type: Fusion.NetworkObjectBaker/TransformPathCache

Method: Fusion.NetworkObjectBaker/TransformPath Create(UnityEngine.Transform transform)

Disassembly:
	0x01F86698 RET
	0x01F8669C STP X30, X21, [X31 - 0x20]!
	0x01F866A0 STP X20, X19, [X31 + 0x10]
	0x01F866A4 ADRP X20, 0x2453000
	0x01F866A8 ADRP X21, 0x2194000
	0x01F866AC LDRB W8, [X20 + 0x6CC]
	0x01F866B0 LDR X21, [X21 + 0x4B0]
	0x01F866B4 MOV X19, X0
	0x01F866B8 TBNZ X8, 0x0, 0x1F866D0
	0x01F866BC ADRP X0, 0x2194000
	0x01F866C0 LDR X0, [X0 + 0x4B0]
	0x01F866C4 BL 0x1C16CF4
	0x01F866C8 MOVZ W8, 0x1
	0x01F866CC STRB W8, [X20 + 0x6CC]
	0x01F866D0 LDR X1, [X21]
	0x01F866D4 MOV X0, X19
	0x01F866D8 LDP X20, X19, [X31 + 0x10]
	0x01F866DC LDP X30, X21, [X31], #0x20
	0x01F866E0 B 0x2413E44
	0x01F866E4 STR X30, [X31 - 0x30]!
	0x01F866E8 STP X22, X21, [X31 + 0x10]
	0x01F866EC STP X20, X19, [X31 + 0x20]
	0x01F866F0 ADRP X21, 0x2453000
	0x01F866F4 ADRP X20, 0x216D000
	0x01F866F8 LDRB W8, [X21 + 0x6CD]
	0x01F866FC LDR X20, [X20 + 0x598]
	0x01F86700 MOV X19, X0
	0x01F86704 TBNZ X8, 0x0, 0x1F86740
	0x01F86708 ADRP X0, 0x2194000
	0x01F8670C LDR X0, [X0 + 0x4B8]
	0x01F86710 BL 0x1C16CF4
	0x01F86714 ADRP X0, 0x2194000
	0x01F86718 LDR X0, [X0 + 0x4C0]
	0x01F8671C BL 0x1C16CF4
	0x01F86720 ADRP X0, 0x216D000
	0x01F86724 LDR X0, [X0 + 0x598]
	0x01F86728 BL 0x1C16CF4
	0x01F8672C ADRP X0, 0x2194000
	0x01F86730 LDR X0, [X0 + 0x4C8]
	0x01F86734 BL 0x1C16CF4
	0x01F86738 MOVZ W8, 0x1
	0x01F8673C STRB W8, [X21 + 0x6CD]
	0x01F86740 LDR X0, [X20]
	0x01F86744 LDR W8, [X0 + 0xE0]
	0x01F86748 CBNZ W8, 0x1F86750
	0x01F8674C BL 0x1C16DFC
	0x01F86750 ADRP X21, 0x2194000
	0x01F86754 ADRP X22, 0x2194000
	0x01F86758 LDR X21, [X21 + 0x4B8]
	0x01F8675C LDR X22, [X22 + 0x4C0]
	0x01F86760 MOV X0, X19
	0x01F86764 MOV X1, X31
	0x01F86768 MOV X2, X31
	0x01F8676C BL 0x3C3883C
	0x01F86770 MOV W8, W0
	0x01F86774 MOV X0, X19
	0x01F86778 TBZ X8, 0x0, 0x1F86794
	0x01F8677C LDR X0, [X22]
	0x01F86780 LDR W8, [X0 + 0xE0]
	0x01F86784 CBNZ W8, 0x1F8678C
	0x01F86788 BL 0x1C16DFC
	0x01F8678C MOV X0, X31
	0x01F86790 BL 0x3C6748C
	0x01F86794 LDR X8, [X21]
	0x01F86798 LDR X8, [X8 + 0xB8]
	0x01F8679C STR X0, [X8]
	0x01F867A0 LDR X0, [X20]
	0x01F867A4 LDR W8, [X0 + 0xE0]
	0x01F867A8 CBNZ W8, 0x1F867B0
	0x01F867AC BL 0x1C16DFC
	0x01F867B0 MOV X0, X19
	0x01F867B4 MOV X1, X31
	0x01F867B8 MOV X2, X31
	0x01F867BC BL 0x3C3883C
	0x01F867C0 TBZ X0, 0x0, 0x1F86AC8
	0x01F867C4 LDR X0, [X22]
	0x01F867C8 LDR W8, [X0 + 0xE0]
	0x01F867CC CBNZ W8, 0x1F867D4
	0x01F867D0 BL 0x1C16DFC
	0x01F867D4 MOV X0, X31
	0x01F867D8 BL 0x3C6748C
	0x01F867DC LDR X8, [X21]
	0x01F867E0 LDR X8, [X8 + 0xB8]
	0x01F867E4 STR X0, [X8]
	0x01F867E8 LDR X8, [X21]
	0x01F867EC LDR X8, [X8 + 0xB8]
	0x01F867F0 LDR X0, [X8]
	0x01F867F4 CBZ X0, 0x1F86AE4
	0x01F867F8 MOV X1, X31
	0x01F867FC BL 0x3C6D5C4
	0x01F86800 CBZ X0, 0x1F86AE4
	0x01F86804 MOVZ W1, 0x4
	0x01F86808 MOV X2, X31
	0x01F8680C BL 0x3C7343C
	0x01F86810 LDR X8, [X21]
	0x01F86814 LDR X8, [X8 + 0xB8]
	0x01F86818 LDR X0, [X8]
	0x01F8681C CBZ X0, 0x1F86AE4
	0x01F86820 MOV X1, X31
	0x01F86824 BL 0x3C67938
	0x01F86828 CBZ X0, 0x1F86AE4
	0x01F8682C MOVZ W1, 0x4
	0x01F86830 MOV X2, X31
	0x01F86834 BL 0x3C7343C
	0x01F86838 LDR X8, [X21]
	0x01F8683C LDR X8, [X8 + 0xB8]
	0x01F86840 LDR X0, [X8]
	0x01F86844 CBZ X0, 0x1F86AE4
	0x01F86848 MOV X1, X31
	0x01F8684C BL 0x3C6D718
	0x01F86850 CBZ X0, 0x1F86AE4
	0x01F86854 MOVZ W1, 0x4
	0x01F86858 MOV X2, X31
	0x01F8685C BL 0x3C7343C
	0x01F86860 LDR X8, [X21]
	0x01F86864 LDR X8, [X8 + 0xB8]
	0x01F86868 LDR X0, [X8]
	0x01F8686C CBZ X0, 0x1F86AE4
	0x01F86870 MOV X1, X31
	0x01F86874 BL 0x3C6D5C4
	0x01F86878 CBZ X0, 0x1F86AE4
	0x01F8687C MOV X1, X31
	0x01F86880 BL 0x3C729A4
	0x01F86884 LDR X8, [X21]
	0x01F86888 LDR X8, [X8 + 0xB8]
	0x01F8688C LDR X8, [X8]
	0x01F86890 CBZ X8, 0x1F86AE4
	0x01F86894 MOV X19, X0
	0x01F86898 MOV X0, X8
	0x01F8689C MOV X1, X31
	0x01F868A0 BL 0x3C68C80
	0x01F868A4 CBZ X0, 0x1F86AE4
	0x01F868A8 MOV X1, X31
	0x01F868AC BL 0x3C729A4
	0x01F868B0 CBZ X0, 0x1F86AE4
	0x01F868B4 MOV X1, X31
	0x01F868B8 BL 0x3C7301C
	0x01F868BC CBZ X19, 0x1F86AE4
	0x01F868C0 MOV X1, X0
	0x01F868C4 MOV X0, X19
	0x01F868C8 MOV X2, X31
	0x01F868CC BL 0x3C73058
	0x01F868D0 LDR X8, [X21]
	0x01F868D4 LDR X8, [X8 + 0xB8]
	0x01F868D8 LDR X0, [X8]
	0x01F868DC CBZ X0, 0x1F86AE4
	0x01F868E0 MOV X1, X31
	0x01F868E4 BL 0x3C6D5C4
	0x01F868E8 CBZ X0, 0x1F86AE4
	0x01F868EC MOV X1, X31
	0x01F868F0 BL 0x3C74558
	0x01F868F4 LDR X8, [X21]
	0x01F868F8 LDR X8, [X8 + 0xB8]
	0x01F868FC LDR X8, [X8]
	0x01F86900 CBZ X8, 0x1F86AE4
	0x01F86904 MOV X19, X0
	0x01F86908 MOV X0, X8
	0x01F8690C MOV X1, X31
	0x01F86910 BL 0x3C6F104
	0x01F86914 CBZ X0, 0x1F86AE4
	0x01F86918 MOV X1, X31
	0x01F8691C BL 0x3C729A4
	0x01F86920 CBZ X0, 0x1F86AE4
	0x01F86924 MOV X1, X31
	0x01F86928 BL 0x3C7301C
	0x01F8692C CBZ X19, 0x1F86AE4
	0x01F86930 MOV X1, X0
	0x01F86934 MOV X0, X19
	0x01F86938 MOV X2, X31
	0x01F8693C BL 0x3C73058
	0x01F86940 LDR X8, [X21]
	0x01F86944 LDR X8, [X8 + 0xB8]
	0x01F86948 LDR X0, [X8]
	0x01F8694C CBZ X0, 0x1F86AE4
	0x01F86950 MOV X1, X31
	0x01F86954 BL 0x3C6D5C4
	0x01F86958 CBZ X0, 0x1F86AE4
	0x01F8695C MOV X1, X31
	0x01F86960 BL 0x3C729A4
	0x01F86964 CBZ X0, 0x1F86AE4
	0x01F86968 ADRP X8, 0xFFFFFFFFFEB64000
	0x01F8696C LDR V0, [X8 + 0x5C]
	0x01F86970 FMOV S3, 1
	0x01F86974 MOV X1, X31
	0x01F86978 MOV V1.16B, V0.16B
	0x01F8697C MOV V2.16B, V0.16B
	0x01F86980 BL 0x3C72A00
	0x01F86984 LDR X8, [X21]
	0x01F86988 LDR X8, [X8 + 0xB8]
	0x01F8698C LDR X0, [X8]
	0x01F86990 CBZ X0, 0x1F86AE4
	0x01F86994 MOV X1, X31
	0x01F86998 BL 0x3C6D5C4
	0x01F8699C CBZ X0, 0x1F86AE4
	0x01F869A0 MOV X1, X31
	0x01F869A4 BL 0x3C74558
	0x01F869A8 CBZ X0, 0x1F86AE4
	0x01F869AC FMOV S0, 1
	0x01F869B0 FMOV S1, 1
	0x01F869B4 FMOV S2, 1
	0x01F869B8 FMOV S3, 1
	0x01F869BC MOV X1, X31
	0x01F869C0 BL 0x3C72A00
	0x01F869C4 LDR X8, [X21]
	0x01F869C8 LDR X8, [X8 + 0xB8]
	0x01F869CC LDR X0, [X8]
	0x01F869D0 CBZ X0, 0x1F86AE4
	0x01F869D4 MOV X1, X31
	0x01F869D8 BL 0x3C6D5C4
	0x01F869DC CBZ X0, 0x1F86AE4
	0x01F869E0 MOV X1, X31
	0x01F869E4 BL 0x3C745B4
	0x01F869E8 CBZ X0, 0x1F86AE4
	0x01F869EC FMOV S0, 1
	0x01F869F0 FMOV S1, 1
	0x01F869F4 FMOV S2, 1
	0x01F869F8 FMOV S3, 1
	0x01F869FC MOV X1, X31
	0x01F86A00 BL 0x3C72A00
	0x01F86A04 LDR X8, [X21]
	0x01F86A08 LDR X8, [X8 + 0xB8]
	0x01F86A0C LDR X0, [X8]
	0x01F86A10 CBZ X0, 0x1F86AE4
	0x01F86A14 MOV X1, X31
	0x01F86A18 BL 0x3C6D5C4
	0x01F86A1C ADRP X22, 0x2194000
	0x01F86A20 LDR X22, [X22 + 0x4C8]
	0x01F86A24 MOV X19, X0
	0x01F86A28 LDR X8, [X22]
	0x01F86A2C MOV X0, X8
	0x01F86A30 BL 0x1C16F10
	0x01F86A34 MOVZ W1, 0x6
	0x01F86A38 MOVZ W2, 0x6
	0x01F86A3C MOVZ W3, 0x6
	0x01F86A40 MOVZ W4, 0x6
	0x01F86A44 MOV X5, X31
	0x01F86A48 MOV X20, X0
	0x01F86A4C BL 0x3C0C3DC
	0x01F86A50 CBZ X19, 0x1F86AE4
	0x01F86A54 MOV X0, X19
	0x01F86A58 MOV X1, X20
	0x01F86A5C MOV X2, X31
	0x01F86A60 BL 0x3C74610
	0x01F86A64 LDR X8, [X21]
	0x01F86A68 LDR X8, [X8 + 0xB8]
	0x01F86A6C LDR X0, [X8]
	0x01F86A70 CBZ X0, 0x1F86AE4
	0x01F86A74 MOV X1, X31
	0x01F86A78 BL 0x3C6F104
	0x01F86A7C LDR X8, [X22]
	0x01F86A80 MOV X19, X0
	0x01F86A84 MOV X0, X8

ISIL:
	001 Subtract X31, X31, 272
	002 Move [X31+176], X29
	003 Move [X31+184], X30
	004 Move [X31+192], X28
	005 Move [X31+200], X27
	006 Move [X31+208], X26
	007 Move [X31+216], X25
	008 Move [X31+224], X24
	009 Move [X31+232], X23
	010 Move [X31+240], X22
	011 Move [X31+248], X21
	012 Move [X31+256], X20
	013 Move [X31+264], X19
	014 NotImplemented "Instruction MRS not yet implemented."
	015 Move X9, [X25+40]
	016 Move X22, 0x2454000
	017 Move X20, X1
	018 Move X21, X0
	019 Move [X31+168], X9
	020 Move W9, [X22+1728]
	021 Move X19, X8
	022 Move TEMP, X9
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {58}
	026 Move X0, 0x2195000
	027 Move X0, [X0+1024]
	028 Call 0x1C17CF4
	029 Move X0, 0x2195000
	030 Move X0, [X0+1032]
	031 Call 0x1C17CF4
	032 Move X0, 0x2195000
	033 Move X0, [X0+816]
	034 Call 0x1C17CF4
	035 Move X0, 0x2195000
	036 Move X0, [X0+1040]
	037 Call 0x1C17CF4
	038 Move X0, 0x2195000
	039 Move X0, [X0+1048]
	040 Call 0x1C17CF4
	041 Move X0, 0x2195000
	042 Move X0, [X0+1056]
	043 Call 0x1C17CF4
	044 Move X0, 0x2195000
	045 Move X0, [X0+1064]
	046 Call 0x1C17CF4
	047 Move X0, 0x2195000
	048 Move X0, [X0+1072]
	049 Call 0x1C17CF4
	050 Move X0, 0x216E000
	051 Move X0, [X0+1432]
	052 Call 0x1C17CF4
	053 Move X0, 0x2195000
	054 Move X0, [X0+1080]
	055 Call 0x1C17CF4
	056 Move W8, 1
	057 Move [X22+1728], W8
	058 Move [X31+88], X31
	059 Move [X31+96], X31
	060 Move [X31+104], X31
	061 Move [X31+64], X31
	062 Move [X31+72], X31
	063 Move [X31+80], X31
	064 Move [X31+40], X31
	065 Move [X31+48], X31
	066 Move [X31+56], X31
	067 Move X0, [X21+16]
	068 Compare X0, 0
	069 JumpIfEqual {273}
	070 Move X8, 0x2195000
	071 Move X8, [X8+1032]
	072 Add X2, X31, 88
	073 Move X1, X20
	074 Move X3, [X8]
	075 Call Dictionary`2<Object, TransformPath>.TryGetValue, X0, X1, X2
	076 Move TEMP, X0
	077 And TEMP, TEMP, 1
	078 Compare TEMP, 1
	079 JumpIfNotEqual {82}
	080 Move X8, [X31+104]
	081 NotImplemented "Instruction LDUR not yet implemented."
	082 Move X8, [X21+24]
	083 Compare X8, 0
	084 JumpIfEqual {273}
	085 Move W9, [X8+28]
	086 Move X24, 0x216E000
	087 Move X24, [X24+1432]
	088 Move X26, 0x2195000
	089 Add W9, W9, 1
	090 Move [X8+24], W31
	091 Move [X8+28], W9
	092 Move X26, [X26+1040]
	093 Move X22, X20
	094 Move X0, [X24]
	095 Move W8, [X0+224]
	096 Compare W8, 0
	097 JumpIfNotEqual {99}
	098 Call 0x1C17DFC
	099 Move X0, X22
	100 Move X1, X31
	101 Move X2, X31
	102 Call Object.op_Inequality, X0, X1
	103 Move X23, [X21+24]
	104 Move TEMP, X0
	105 And TEMP, TEMP, 1
	106 Compare TEMP, 1
	107 JumpIfNotEqual {140}
	108 Compare X22, 0
	109 JumpIfEqual {273}
	110 Move X0, X22
	111 Move X1, X31
	112 Call Transform.GetSiblingIndex, X0
	113 NotImplemented "Instruction CMP not yet implemented."
	114 Compare X23, 0
	115 JumpIfEqual {273}
	116 Move W10, [X23+28]
	117 Move X8, [X23+16]
	118 Move X9, [X26]
	119 Add W10, W10, 1
	120 Move [X23+28], W10
	121 Compare X8, 0
	122 JumpIfEqual {273}
	123 NotImplemented "Instruction LDRSW not yet implemented."
	124 Move W11, [X8+24]
	125 Move W1, W0
	126 NotImplemented "Instruction CMP not yet implemented."
	127 Add W9, W10, 1
	128 Add X8, X8, X10
	129 Move [X23+24], W9
	130 NotImplemented "Instruction STRH not yet implemented."
	131 Move X8, [X9+32]
	132 Move X0, X23
	133 Move X8, [X8+192]
	134 Move X2, [X8+112]
	135 Call List`1<UInt16>.AddWithResize, X0, X1
	136 Move X0, X22
	137 Move X1, X31
	138 Call Transform.get_parent, X0
	139 Move X22, X0
	140 Compare X23, 0
	141 JumpIfEqual {273}
	142 Move X8, 0x2195000
	143 Move X8, [X8+1056]
	144 Move X0, X23
	145 Move X1, [X8]
	146 Call List`1<UInt16>.Reverse, X0
	147 Move X3, [X21+24]
	148 Compare X3, 0
	149 JumpIfEqual {273}
	150 Move W22, [X3+24]
	151 NotImplemented "Instruction CMP not yet implemented."
	152 And W26, W22, 0xFFFF
	153 NotImplemented "Instruction CMP not yet implemented."
	154 Move W2, W31
	155 Move W8, 0xCCCD
	156 NotImplemented "Instruction MOVK not yet implemented."
	157 NotImplemented "Instruction UMADDL not yet implemented."
	158 Move W27, 10
	159 Move X28, 0x2195000
	160 Move X8, X8
	161 ShiftRight X8, 35
	162 And X8, X8, 0x7FFFFFFF
	163 Move X28, [X28+816]
	164 NotImplemented "Instruction MSUB not yet implemented."
	165 Move TEMP, 9
	166 Not TEMP
	167 Move W9, TEMP
	168 NotImplemented "Instruction CMP not yet implemented."
	169 NotImplemented "Instruction CSNEG not yet implemented."
	170 Move W2, W31
	171 Add W23, W26, W8
	172 Subtract W24, W31, W8
	173 Move W29, 24
	174 NotImplemented "Instruction CMP not yet implemented."
	175 Move X3, [X21+24]
	176 NotImplemented "Instruction CMP not yet implemented."
	177 NotImplemented "Instruction CSEL not yet implemented."
	178 Add X0, X31, 40
	179 Move W1, W24
	180 Move W4, W23
	181 Call TransformPath..ctor, X0, X1, X2, X3, X4, X5
	182 Move X0, [X21+32]
	183 NotImplemented "Instruction LDUR not yet implemented."
	184 Move X8, [X31+56]
	185 Move [X31+1], V0
	186 Move [X31+32], X8
	187 Compare X0, 0
	188 JumpIfEqual {273}
	189 Move V0, [X31+1]
	190 Move X8, [X31+32]
	191 Move X10, [X28]
	192 Move [X31+7], V0
	193 Move [X31+128], X8
	194 Move W9, [X0+28]
	195 Move X8, [X0+16]
	196 Add W9, W9, 1
	197 Move [X0+28], W9
	198 Compare X8, 0
	199 JumpIfEqual {273}
	200 NotImplemented "Instruction LDRSW not yet implemented."
	201 Move W11, [X8+24]
	202 NotImplemented "Instruction CMP not yet implemented."
	203 Add W10, W9, 1
	204 Move [X0+24], W10
	205 Move X10, [X31+128]
	206 Move V0, [X31+7]
	207 NotImplemented "Instruction NOP not yet implemented."
	208 NotImplemented "Instruction MADD not yet implemented."
	209 Move [X8+48], X10
	210 Move [X8+2], V0
	211 Move X8, [X10+32]
	212 Move V0, [X31+7]
	213 Move X9, [X31+128]
	214 Add X1, X31, 144
	215 Move X8, [X8+192]
	216 Move X2, [X8+112]
	217 Move [X31+9], V0
	218 Move [X31+160], X9
	219 Call List`1<TransformPath>.AddWithResize, X0, X1
	220 Move X8, [X21+32]
	221 Compare X8, 0
	222 JumpIfEqual {273}
	223 Move W2, [X8+24]
	224 NotImplemented "Instruction CMP not yet implemented."
	225 Subtract W23, W23, 10
	226 Add W24, W24, 10
	227 Move X3, [X21+24]
	228 NotImplemented "Instruction CMP not yet implemented."
	229 Move W8, 10
	230 NotImplemented "Instruction CSEL not yet implemented."
	231 Add X0, X31, 64
	232 Move W1, W22
	233 Move W4, W31
	234 Call TransformPath..ctor, X0, X1, X2, X3, X4, X5
	235 Move X0, [X21+16]
	236 Move V0, [X31+4]
	237 Move X8, [X31+80]
	238 Move [X31+7], V0
	239 Move [X31+128], X8
	240 Compare X0, 0
	241 JumpIfEqual {273}
	242 Move X8, 0x2195000
	243 Move X8, [X8+1024]
	244 Move V0, [X31+7]
	245 Move X9, [X31+128]
	246 Add X2, X31, 144
	247 Move X3, [X8]
	248 Move X1, X20
	249 Move [X31+9], V0
	250 Move [X31+160], X9
	251 Call Dictionary`2<Object, TransformPath>.Add, X0, X1, X2
	252 Move X8, [X31+80]
	253 Move V0, [X31+4]
	254 Move [X19+16], X8
	255 Move [X19], V0
	256 Move X8, [X25+40]
	257 Move X9, [X31+168]
	258 NotImplemented "Instruction CMP not yet implemented."
	259 Move X20, [X31+256]
	260 Move X19, [X31+264]
	261 Move X22, [X31+240]
	262 Move X21, [X31+248]
	263 Move X24, [X31+224]
	264 Move X23, [X31+232]
	265 Move X26, [X31+208]
	266 Move X25, [X31+216]
	267 Move X28, [X31+192]
	268 Move X27, [X31+200]
	269 Move X29, [X31+176]
	270 Move X30, [X31+184]
	271 Add X31, X31, 272
	272 Return X0
	273 Call 0x1C17F20
	274 Call 0x1C17F30
	275 Move X8, 0x2195000
	276 Move X8, [X8+1080]
	277 Move X1, [X8]
	278 Call 0x1C17DEC
	279 Call 0x3EB2B20

Method: System.Void Clear()

Disassembly:
	0x01F86FD8 MOV X1, X31
	0x01F86FDC BL 0x3C46414
	0x01F86FE0 TBNZ X0, 0x1F, 0x1F87024
	0x01F86FE4 ADRP X19, 0x216D000
	0x01F86FE8 LDR X19, [X19 + 0xC90]
	0x01F86FEC ADD X0, X31, 0x8
	0x01F86FF0 MOV X1, X31
	0x01F86FF4 BL 0x3C46414
	0x01F86FF8 LDR X8, [X19]
	0x01F86FFC MOV W19, W0
	0x01F87000 LDR W9, [X8 + 0xE0]
	0x01F87004 CBNZ W9, 0x1F87010
	0x01F87008 MOV X0, X8
	0x01F8700C BL 0x1C16DFC
	0x01F87010 MOV X0, X31
	0x01F87014 BL 0x3C46D9C
	0x01F87018 CMP W19, W0
	0x01F8701C CSET W0, LT
	0x01F87020 B 0x1F87028
	0x01F87024 MOV W0, W31
	0x01F87028 LDP X30, X19, [X31 + 0x10]
	0x01F8702C ADD X31, X31, 0x20
	0x01F87030 RET
	0x01F87034 STP X30, X21, [X31 - 0x20]!
	0x01F87038 STP X20, X19, [X31 + 0x10]
	0x01F8703C ADRP X21, 0x2452000
	0x01F87040 ADRP X20, 0x216C000
	0x01F87044 LDRB W8, [X21 + 0x6D1]
	0x01F87048 LDR X20, [X20 + 0x5F8]
	0x01F8704C MOV X19, X0
	0x01F87050 TBNZ X8, 0x0, 0x1F87074
	0x01F87054 ADRP X0, 0x2173000
	0x01F87058 LDR X0, [X0 + 0xC60]
	0x01F8705C BL 0x1C16CF4
	0x01F87060 ADRP X0, 0x216C000
	0x01F87064 LDR X0, [X0 + 0x5F8]
	0x01F87068 BL 0x1C16CF4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x2454000
	005 Move W8, [X20+1729]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {22}
	011 Move X0, 0x2195000
	012 Move X0, [X0+1176]
	013 Call 0x1C17CF4
	014 Move X0, 0x2195000
	015 Move X0, [X0+824]
	016 Call 0x1C17CF4
	017 Move X0, 0x2194000
	018 Move X0, [X0+1048]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X20+1729], W8
	022 Move X8, [X19+32]
	023 Compare X8, 0
	024 JumpIfEqual {47}
	025 Move W9, [X8+28]
	026 Add W9, W9, 1
	027 Move [X8+24], W31
	028 Move [X8+28], W9
	029 Move X0, [X19+16]
	030 Compare X0, 0
	031 JumpIfEqual {47}
	032 Move X8, 0x2194000
	033 Move X8, [X8+1176]
	034 Move X1, [X8]
	035 Call Dictionary`2<Object, TransformPath>.Clear, X0
	036 Move X8, [X19+24]
	037 Compare X8, 0
	038 JumpIfEqual {47}
	039 Move W9, [X8+28]
	040 Move X20, [X31+16]
	041 Move X19, [X31+24]
	042 Add W9, W9, 1
	043 Move [X8+24], W31
	044 Move [X8+28], W9
	045 Move X30, [X31+32]
	046 Return 
	047 Call 0x1C17F20

Method: System.Boolean Equals(Fusion.NetworkObjectBaker/TransformPath x, Fusion.NetworkObjectBaker/TransformPath y)

Disassembly:
	0x01F8706C MOVZ W8, 0x1
	0x01F87070 STRB W8, [X21 + 0x6D1]
	0x01F87074 ADRP X21, 0x2173000
	0x01F87078 LDR X21, [X21 + 0xC60]
	0x01F8707C AND X19, X19, 0x0
	0x01F87080 MOV X0, X19
	0x01F87084 MOV X1, X31
	0x01F87088 BL 0x3C90E1C
	0x01F8708C LDR X8, [X20]
	0x01F87090 MOV X20, X0
	0x01F87094 LDR W9, [X8 + 0xE0]
	0x01F87098 CBNZ W9, 0x1F870A4

ISIL:
	001 Move [X31-16], X30
	002 NotImplemented "Instruction LDRH not yet implemented."
	003 NotImplemented "Instruction LDRH not yet implemented."
	004 NotImplemented "Instruction CMP not yet implemented."
	005 Call TransformPathCache.CompareToDepthUnchecked, X0, X1, X2, X3
	006 NotImplemented "Instruction CMP not yet implemented."
	007 NotImplemented "Instruction CSET not yet implemented."
	008 Move W0, W31
	009 Move X30, [X31+16]
	010 Return X0

Method: System.Int32 GetHashCode(Fusion.NetworkObjectBaker/TransformPath obj)

Disassembly:
	0x01F871EC LDP X20, X19, [X31 + 0x20]
	0x01F871F0 LDP X30, X21, [X31 + 0x10]

ISIL:
	001 NotImplemented "Instruction LDRH not yet implemented."

Method: System.Int32 Compare(Fusion.NetworkObjectBaker/TransformPath x, Fusion.NetworkObjectBaker/TransformPath y)

Disassembly:
	0x01F86C10 ADRP X0, 0x2194000
	0x01F86C14 LDR X0, [X0 + 0x4B8]
	0x01F86C18 BL 0x1C16CF4
	0x01F86C1C ADRP X0, 0x216D000
	0x01F86C20 LDR X0, [X0 + 0x5A8]
	0x01F86C24 BL 0x1C16CF4
	0x01F86C28 ADRP X0, 0x2194000
	0x01F86C2C LDR X0, [X0 + 0x4C8]
	0x01F86C30 BL 0x1C16CF4
	0x01F86C34 ADRP X0, 0x2194000
	0x01F86C38 LDR X0, [X0 + 0x4D0]
	0x01F86C3C BL 0x1C16CF4
	0x01F86C40 MOVZ W8, 0x1
	0x01F86C44 STRB W8, [X20 + 0x6CF]
	0x01F86C48 MOV X0, X31
	0x01F86C4C BL 0x3C0E0D8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 NotImplemented "Instruction LDRH not yet implemented."
	005 NotImplemented "Instruction LDRH not yet implemented."
	006 Move X19, X2
	007 Move X20, X1
	008 NotImplemented "Instruction CMP not yet implemented."
	009 NotImplemented "Instruction CSEL not yet implemented."
	010 Call TransformPathCache.CompareToDepthUnchecked, X0, X1, X2, X3
	011 Compare W0, 0
	012 JumpIfNotEqual {16}
	013 NotImplemented "Instruction LDRH not yet implemented."
	014 NotImplemented "Instruction LDRH not yet implemented."
	015 Subtract W0, W8, W9
	016 Move X20, [X31+16]
	017 Move X19, [X31+24]
	018 Move X30, [X31+32]
	019 Return X0

Method: System.Int32 CompareToDepthUnchecked(in Fusion.NetworkObjectBaker/TransformPath x, in Fusion.NetworkObjectBaker/TransformPath y, System.Int32 depth)

Disassembly:
	0x01F8709C MOV X0, X8
	0x01F870A0 BL 0x1C16DFC
	0x01F870A4 MOV X0, X31
	0x01F870A8 BL 0x3C8A804
	0x01F870AC AND X8, X20, 0x0
	0x01F870B0 AND X1, X0, 0x0
	0x01F870B4 MOV X0, X8
	0x01F870B8 MOV X2, X31
	0x01F870BC BL 0x3C902B4
	0x01F870C0 MOV W20, W0
	0x01F870C4 MOV X0, X19
	0x01F870C8 MOV X1, X31
	0x01F870CC BL 0x3C88600
	0x01F870D0 LDR X8, [X21]
	0x01F870D4 MOV X19, X0
	0x01F870D8 LDR W9, [X8 + 0xE0]
	0x01F870DC CBNZ W9, 0x1F870E8
	0x01F870E0 MOV X0, X8
	0x01F870E4 BL 0x1C16DFC
	0x01F870E8 ANDS W31, W20, 0x1
	0x01F870EC MOVZ W8, 0x2
	0x01F870F0 MOV X0, X31
	0x01F870F4 CSEL W20, W8, W31, NE
	0x01F870F8 BL 0x3C88790
	0x01F870FC AND X8, X19, 0x0
	0x01F87100 AND X1, X0, 0x0
	0x01F87104 MOV X0, X8
	0x01F87108 MOV X2, X31
	0x01F8710C BL 0x3C87758
	0x01F87110 BFM W20, W0, 0x0, 0x0
	0x01F87114 MOV W0, W20
	0x01F87118 LDP X20, X19, [X31 + 0x10]
	0x01F8711C LDP X30, X21, [X31], #0x20
	0x01F87120 RET
	0x01F87124 SUB X31, X31, 0x30
	0x01F87128 STP X30, X21, [X31 + 0x10]
	0x01F8712C STP X20, X19, [X31 + 0x20]
	0x01F87130 ADRP X19, 0x2452000
	0x01F87134 LDRB W8, [X19 + 0x6D2]
	0x01F87138 STR W0, [X31 + 0x8]
	0x01F8713C TBNZ X8, 0x0, 0x1F87154
	0x01F87140 ADRP X0, 0x216C000
	0x01F87144 LDR X0, [X0 + 0xC90]
	0x01F87148 BL 0x1C16CF4
	0x01F8714C MOVZ W8, 0x1
	0x01F87150 STRB W8, [X19 + 0x6D2]
	0x01F87154 ADD X0, X31, 0x8
	0x01F87158 MOV X1, X31
	0x01F8715C STR W31, [X31]
	0x01F87160 BL 0x3C463D8
	0x01F87164 MOV W20, W31
	0x01F87168 TBZ X0, 0x0, 0x1F871E8
	0x01F8716C ADRP X21, 0x216C000
	0x01F87170 LDR X21, [X21 + 0xC90]
	0x01F87174 MOV W19, W31
	0x01F87178 LDR X0, [X21]
	0x01F8717C LDR W8, [X0 + 0xE0]
	0x01F87180 CBNZ W8, 0x1F87188
	0x01F87184 BL 0x1C16DFC
	0x01F87188 MOV X0, X31
	0x01F8718C BL 0x3C46D74
	0x01F87190 CMP W19, W0
	0x01F87194 CSET W20, LT
	0x01F87198 B.GE 0x1F871E8
	0x01F8719C LDR X0, [X21]
	0x01F871A0 LDR W8, [X0 + 0xE0]
	0x01F871A4 CBNZ W8, 0x1F871AC
	0x01F871A8 BL 0x1C16DFC
	0x01F871AC MOV W0, W19
	0x01F871B0 MOV X1, X31
	0x01F871B4 BL 0x3C46FDC
	0x01F871B8 LDR W1, [X31 + 0x8]
	0x01F871BC STR W0, [X31]
	0x01F871C0 AND X0, X0, 0x0
	0x01F871C4 MOV X2, X31
	0x01F871C8 BL 0x3C4685C
	0x01F871CC TBZ X0, 0x0, 0x1F871E0
	0x01F871D0 ADD X0, X31, 0x0
	0x01F871D4 MOV X1, X31
	0x01F871D8 BL 0x3C463D8
	0x01F871DC TBNZ X0, 0x0, 0x1F871E8
	0x01F871E0 ADD W19, W19, 0x1
	0x01F871E4 B 0x1F87178
	0x01F871E8 MOV W0, W20

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+96], X30
	003 Move [X31+112], X24
	004 Move [X31+120], X23
	005 Move [X31+128], X22
	006 Move [X31+136], X21
	007 Move [X31+144], X20
	008 Move [X31+152], X19
	009 NotImplemented "Instruction MRS not yet implemented."
	010 Move X8, [X23+40]
	011 Move X24, 0x2453000
	012 Move W19, W3
	013 Move X21, X2
	014 Move [X31+88], X8
	015 Move W8, [X24+1730]
	016 Move X22, X1
	017 Move X20, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {27}
	022 Move X0, 0x2194000
	023 Move X0, [X0+888]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X24+1730], W8
	027 Subtract W8, W19, 1
	028 Move [X31+64], X31
	029 Move [X31+72], X31
	030 Move [X31+80], X31
	031 Move [X31+32], X31
	032 Move [X31+40], X31
	033 Move [X31+48], X31
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Move W8, 10
	036 NotImplemented "Instruction CSEL not yet implemented."
	037 Move X9, X21
	038 Move X10, X22
	039 NotImplemented "Instruction LDRH not yet implemented."
	040 NotImplemented "Instruction LDRH not yet implemented."
	041 Subtract W0, W11, W12
	042 Add X10, X10, 2
	043 Subtract X8, X8, 1
	044 Add X9, X9, 2
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Move X0, [X20+32]
	047 Compare X0, 0
	048 JumpIfEqual {90}
	049 NotImplemented "Instruction LDRH not yet implemented."
	050 Move X22, 0x2194000
	051 Move X22, [X22+888]
	052 Subtract W1, W8, 1
	053 Add X8, X31, 8
	054 Move X2, [X22]
	055 Call List`1<TransformPath>.get_Item, X0, X1
	056 NotImplemented "Instruction LDUR not yet implemented."
	057 Move X8, [X31+24]
	058 Move [X31+4], V0
	059 Move [X31+80], X8
	060 Move X0, [X20+32]
	061 Compare X0, 0
	062 JumpIfEqual {90}
	063 NotImplemented "Instruction LDRH not yet implemented."
	064 Move X2, [X22]
	065 Subtract W1, W8, 1
	066 Add X8, X31, 8
	067 Call List`1<TransformPath>.get_Item, X0, X1
	068 NotImplemented "Instruction LDUR not yet implemented."
	069 Move X8, [X31+24]
	070 Subtract W3, W19, 10
	071 Add X1, X31, 64
	072 Add X2, X31, 32
	073 Move X0, X20
	074 Move [X31+2], V0
	075 Move [X31+48], X8
	076 Call TransformPathCache.CompareToDepthUnchecked, X0, X1, X2, X3
	077 Move W0, W31
	078 Move X8, [X23+40]
	079 Move X9, [X31+88]
	080 NotImplemented "Instruction CMP not yet implemented."
	081 Move X20, [X31+144]
	082 Move X19, [X31+152]
	083 Move X22, [X31+128]
	084 Move X21, [X31+136]
	085 Move X24, [X31+112]
	086 Move X23, [X31+120]
	087 Move X30, [X31+96]
	088 Add X31, X31, 160
	089 Return X0
	090 Call 0x1C17F20
	091 Call 0x3EB2B20

Method: System.Int32 GetHashCode(in Fusion.NetworkObjectBaker/TransformPath path, System.Int32 hash)

Disassembly:
	0x01F871F4 ADD X31, X31, 0x30
	0x01F871F8 RET
	0x01F871FC SUB X31, X31, 0x30
	0x01F87200 STP X30, X21, [X31 + 0x10]
	0x01F87204 STP X20, X19, [X31 + 0x20]
	0x01F87208 ADRP X19, 0x2452000
	0x01F8720C STR W0, [X31 + 0x8]
	0x01F87210 ADRP X20, 0x216C000
	0x01F87214 LDRB W8, [X19 + 0x6D3]
	0x01F87218 LDR X20, [X20 + 0x8F0]
	0x01F8721C TBNZ X8, 0x0, 0x1F872AC
	0x01F87220 ADRP X0, 0x216C000
	0x01F87224 LDR X0, [X0 + 0x8F0]
	0x01F87228 BL 0x1C16CF4
	0x01F8722C ADRP X0, 0x2193000
	0x01F87230 LDR X0, [X0 + 0x4D8]
	0x01F87234 BL 0x1C16CF4
	0x01F87238 ADRP X0, 0x2193000
	0x01F8723C LDR X0, [X0 + 0x4E0]
	0x01F87240 BL 0x1C16CF4
	0x01F87244 ADRP X0, 0x2193000
	0x01F87248 LDR X0, [X0 + 0x4E8]
	0x01F8724C BL 0x1C16CF4
	0x01F87250 ADRP X0, 0x2193000
	0x01F87254 LDR X0, [X0 + 0x4F0]
	0x01F87258 BL 0x1C16CF4
	0x01F8725C ADRP X0, 0x2193000
	0x01F87260 LDR X0, [X0 + 0x4F8]
	0x01F87264 BL 0x1C16CF4
	0x01F87268 ADRP X0, 0x2193000
	0x01F8726C LDR X0, [X0 + 0x500]
	0x01F87270 BL 0x1C16CF4
	0x01F87274 ADRP X0, 0x216C000
	0x01F87278 LDR X0, [X0 + 0x848]
	0x01F8727C BL 0x1C16CF4
	0x01F87280 ADRP X0, 0x2193000
	0x01F87284 LDR X0, [X0 + 0x508]
	0x01F87288 BL 0x1C16CF4
	0x01F8728C ADRP X0, 0x2193000
	0x01F87290 LDR X0, [X0 + 0x510]
	0x01F87294 BL 0x1C16CF4
	0x01F87298 ADRP X0, 0x2193000
	0x01F8729C LDR X0, [X0 + 0x518]
	0x01F872A0 BL 0x1C16CF4
	0x01F872A4 MOVZ W8, 0x1
	0x01F872A8 STRB W8, [X19 + 0x6D3]
	0x01F872AC LDR X0, [X20]
	0x01F872B0 BL 0x1C16F10
	0x01F872B4 MOV X1, X31
	0x01F872B8 MOV X19, X0
	0x01F872BC BL 0x3231AC4
	0x01F872C0 CBZ X19, 0x1F87500
	0x01F872C4 ADRP X8, 0x2193000
	0x01F872C8 LDR X8, [X8 + 0x4E0]
	0x01F872CC MOV X0, X19
	0x01F872D0 MOV X2, X31
	0x01F872D4 LDR X1, [X8]
	0x01F872D8 BL 0x32333E0
	0x01F872DC ADD X0, X31, 0x8
	0x01F872E0 MOV X1, X31
	0x01F872E4 BL 0x3C46324
	0x01F872E8 TBZ X0, 0x0, 0x1F87474
	0x01F872EC ADD X0, X31, 0x8
	0x01F872F0 MOV X1, X31
	0x01F872F4 BL 0x3C4639C

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+64], X30
	003 Move [X31+72], X23
	004 Move [X31+80], X22
	005 Move [X31+88], X21
	006 Move [X31+96], X20
	007 Move [X31+104], X19
	008 NotImplemented "Instruction MRS not yet implemented."
	009 Move X8, [X22+40]
	010 Move X23, 0x2453000
	011 Move W19, W2
	012 Move X21, X1
	013 Move [X31+56], X8
	014 Move W8, [X23+1731]
	015 Move X20, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0x2194000
	021 Move X0, [X0+888]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X23+1731], W8
	025 Move [X31+32], X31
	026 Move [X31+40], X31
	027 Move [X31+48], X31
	028 NotImplemented "Instruction LDRH not yet implemented."
	029 Compare X8, 0
	030 JumpIfEqual {62}
	031 Move X9, X31
	032 Move X10, X21
	033 NotImplemented "Instruction LDRH not yet implemented."
	034 Move W12, W19
	035 ShiftRight W12, 27
	036 And W12, W12, 0x3FFFFFF
	037 Subtract W12, W12, W19
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Add W19, W12, W11
	040 Add X9, X9, 1
	041 NotImplemented "Instruction CMP not yet implemented."
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X0, [X20+32]
	044 Compare X0, 0
	045 JumpIfEqual {74}
	046 Move X9, 0x2194000
	047 NotImplemented "Instruction LDRH not yet implemented."
	048 Move X9, [X9+888]
	049 Subtract W1, W8, 1
	050 Move X2, [X9]
	051 Add X8, X31, 8
	052 Call List`1<TransformPath>.get_Item, X0, X1
	053 NotImplemented "Instruction LDUR not yet implemented."
	054 Move X8, [X31+24]
	055 Add X1, X31, 32
	056 Move X0, X20
	057 Move W2, W19
	058 Move [X31+2], V0
	059 Move [X31+48], X8
	060 Call TransformPathCache.GetHashCode, X0, X1, X2
	061 Move W19, W0
	062 Move X8, [X22+40]
	063 Move X9, [X31+56]
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Move W0, W19
	066 Move X20, [X31+96]
	067 Move X19, [X31+104]
	068 Move X22, [X31+80]
	069 Move X21, [X31+88]
	070 Move X30, [X31+64]
	071 Move X23, [X31+72]
	072 Add X31, X31, 112
	073 Return X0
	074 Call 0x1C17F20
	075 Call 0x3EB2B20

Method: System.Boolean IsAncestorOf(in Fusion.NetworkObjectBaker/TransformPath x, in Fusion.NetworkObjectBaker/TransformPath y)

Disassembly:
	0x01F86C50 MOV X0, X31
	0x01F86C54 BL 0x3C0E0B0
	0x01F86C58 MOV X0, X31
	0x01F86C5C BL 0x3C0E0D8
	0x01F86C60 MOV W22, W0
	0x01F86C64 MOV X0, X31
	0x01F86C68 BL 0x3C0E0B0
	0x01F86C6C MOV W23, W0
	0x01F86C70 MOV X0, X31
	0x01F86C74 BL 0x3C0E0D8
	0x01F86C78 ADRP X8, 0xFFFFFFFFFEB64000
	0x01F86C7C LDR V0, [X8 + 0x3C8]

ISIL:
	001 Move [X31-16], X30
	002 NotImplemented "Instruction LDRH not yet implemented."
	003 NotImplemented "Instruction LDRH not yet implemented."
	004 NotImplemented "Instruction CMP not yet implemented."
	005 Call TransformPathCache.CompareToDepthUnchecked, X0, X1, X2, X3
	006 NotImplemented "Instruction CMP not yet implemented."
	007 NotImplemented "Instruction CSET not yet implemented."
	008 Move W0, W31
	009 Move X30, [X31+16]
	010 Return X0

Method: System.Boolean IsEqualOrAncestorOf(in Fusion.NetworkObjectBaker/TransformPath x, in Fusion.NetworkObjectBaker/TransformPath y)

Disassembly:
	0x01F86BE0 STP D9, D8, [X31 + 0x10]
	0x01F86BE4 STP X30, X27, [X31 + 0x20]
	0x01F86BE8 STP X26, X25, [X31 + 0x30]
	0x01F86BEC STP X24, X23, [X31 + 0x40]
	0x01F86BF0 STP X22, X21, [X31 + 0x50]
	0x01F86BF4 STP X20, X19, [X31 + 0x60]
	0x01F86BF8 ADRP X20, 0x2453000
	0x01F86BFC ADRP X21, 0x216D000
	0x01F86C00 MOV X19, X8
	0x01F86C04 LDRB W8, [X20 + 0x6CF]
	0x01F86C08 LDR X21, [X21 + 0x5A8]
	0x01F86C0C TBNZ X8, 0x0, 0x1F86C48

ISIL:
	001 Move [X31-16], X30
	002 NotImplemented "Instruction LDRH not yet implemented."
	003 NotImplemented "Instruction LDRH not yet implemented."
	004 NotImplemented "Instruction CMP not yet implemented."
	005 Move W0, W31
	006 Call TransformPathCache.CompareToDepthUnchecked, X0, X1, X2, X3
	007 NotImplemented "Instruction CMP not yet implemented."
	008 NotImplemented "Instruction CSET not yet implemented."
	009 Move X30, [X31+16]
	010 Return X0

Method: System.String Dump(in Fusion.NetworkObjectBaker/TransformPath x)

Disassembly:
	0x01F872F8 MOV X1, X0
	0x01F872FC MOV X0, X19
	0x01F87300 MOV X2, X31
	0x01F87304 BL 0x32333E0
	0x01F87308 ADRP X8, 0x2193000
	0x01F8730C LDR X8, [X8 + 0x4D8]
	0x01F87310 MOV X0, X19
	0x01F87314 MOV X2, X31
	0x01F87318 LDR X1, [X8]
	0x01F8731C BL 0x32333E0
	0x01F87320 MOV X20, X0
	0x01F87324 ADD X0, X31, 0x8
	0x01F87328 MOV X1, X31
	0x01F8732C BL 0x3C463D8
	0x01F87330 CBZ X20, 0x1F87500
	0x01F87334 AND W1, W0, 0x1
	0x01F87338 MOV X0, X20
	0x01F8733C MOV X2, X31
	0x01F87340 BL 0x3233CB8
	0x01F87344 ADRP X8, 0x2193000
	0x01F87348 LDR X8, [X8 + 0x4F8]
	0x01F8734C MOV X0, X19
	0x01F87350 MOV X2, X31
	0x01F87354 LDR X1, [X8]
	0x01F87358 BL 0x32333E0
	0x01F8735C MOV X20, X0
	0x01F87360 ADD X0, X31, 0x8
	0x01F87364 MOV X1, X31
	0x01F87368 BL 0x3C46414
	0x01F8736C CBZ X20, 0x1F87500
	0x01F87370 MOV W1, W0
	0x01F87374 MOV X0, X20
	0x01F87378 MOV X2, X31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x2453000
	007 Move X22, 0x216D000
	008 Move W8, [X21+1732]
	009 Move X22, [X22+2288]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x216D000
	017 Move X0, [X0+2288]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+1732], W8
	021 Move X0, [X22]
	022 Call 0x1C17F10
	023 Move X1, X31
	024 Move X21, X0
	025 Call StringBuilder..ctor, X0
	026 Move X0, X20
	027 Move X1, X19
	028 Move X2, X21
	029 Call TransformPathCache.Dump, X0, X1, X2
	030 Compare X21, 0
	031 JumpIfEqual {42}
	032 Move X8, [X21]
	033 Move X0, X21
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X2, [X8+360]
	039 Move X1, [X8+368]
	040 Move X30, [X31+48]
	041 CallNoReturn X2
	042 Call 0x1C17F20

Method: System.Void Dump(in Fusion.NetworkObjectBaker/TransformPath x, System.Text.StringBuilder builder)

Disassembly:
	0x01F8737C BL 0x3233E30
	0x01F87380 ADRP X8, 0x2193000
	0x01F87384 LDR X8, [X8 + 0x4F0]
	0x01F87388 MOV X0, X19
	0x01F8738C MOV X2, X31
	0x01F87390 LDR X1, [X8]
	0x01F87394 BL 0x32333E0
	0x01F87398 MOV X20, X0
	0x01F8739C ADD X0, X31, 0x8
	0x01F873A0 MOV X1, X31
	0x01F873A4 BL 0x3C46450
	0x01F873A8 CBZ X20, 0x1F87500
	0x01F873AC AND W1, W0, 0x1
	0x01F873B0 MOV X0, X20
	0x01F873B4 MOV X2, X31
	0x01F873B8 BL 0x3233CB8
	0x01F873BC ADRP X8, 0x2193000
	0x01F873C0 LDR X8, [X8 + 0x510]
	0x01F873C4 MOV X0, X19
	0x01F873C8 MOV X2, X31
	0x01F873CC LDR X1, [X8]
	0x01F873D0 BL 0x32333E0
	0x01F873D4 MOV X20, X0
	0x01F873D8 ADD X0, X31, 0x8
	0x01F873DC MOV X1, X31
	0x01F873E0 BL 0x3C46360
	0x01F873E4 CBZ X20, 0x1F87500
	0x01F873E8 MOV X1, X0
	0x01F873EC MOV X0, X20
	0x01F873F0 MOV X2, X31
	0x01F873F4 BL 0x32333E0
	0x01F873F8 ADRP X8, 0x2193000
	0x01F873FC LDR X8, [X8 + 0x4E8]
	0x01F87400 MOV X0, X19
	0x01F87404 MOV X2, X31
	0x01F87408 LDR X1, [X8]
	0x01F8740C BL 0x32333E0
	0x01F87410 MOV X20, X0
	0x01F87414 ADD X0, X31, 0x8
	0x01F87418 MOV X1, X31
	0x01F8741C BL 0x3C4648C
	0x01F87420 CBZ X20, 0x1F87500
	0x01F87424 MOV W1, W0
	0x01F87428 MOV X0, X20
	0x01F8742C MOV X2, X31
	0x01F87430 BL 0x3233E30
	0x01F87434 ADRP X8, 0x2193000
	0x01F87438 LDR X8, [X8 + 0x518]
	0x01F8743C MOV X0, X19
	0x01F87440 MOV X2, X31
	0x01F87444 LDR X1, [X8]
	0x01F87448 BL 0x32333E0
	0x01F8744C MOV X20, X0
	0x01F87450 ADD X0, X31, 0x8
	0x01F87454 MOV X1, X31
	0x01F87458 BL 0x3C464C8
	0x01F8745C CBZ X20, 0x1F87500
	0x01F87460 AND W1, W0, 0x1
	0x01F87464 MOV X0, X20
	0x01F87468 MOV X2, X31
	0x01F8746C BL 0x3233CB8
	0x01F87470 B 0x1F8748C
	0x01F87474 ADRP X8, 0x2193000
	0x01F87478 LDR X8, [X8 + 0x500]
	0x01F8747C MOV X0, X19
	0x01F87480 MOV X2, X31
	0x01F87484 LDR X1, [X8]
	0x01F87488 BL 0x32333E0
	0x01F8748C ADRP X8, 0x2193000
	0x01F87490 LDR X8, [X8 + 0x508]
	0x01F87494 MOV X0, X19
	0x01F87498 MOV X2, X31
	0x01F8749C LDR X1, [X8]
	0x01F874A0 BL 0x32333E0
	0x01F874A4 MOV X20, X0
	0x01F874A8 ADD X0, X31, 0x8
	0x01F874AC MOV X1, X31
	0x01F874B0 BL 0x3C462E0
	0x01F874B4 CBZ X20, 0x1F87500
	0x01F874B8 ADRP X21, 0x216C000
	0x01F874BC LDR X21, [X21 + 0x848]
	0x01F874C0 MOV W1, W0
	0x01F874C4 MOV X0, X20
	0x01F874C8 MOV X2, X31

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+64], X30
	003 Move [X31+72], X25
	004 Move [X31+80], X24
	005 Move [X31+88], X23
	006 Move [X31+96], X22
	007 Move [X31+104], X21
	008 Move [X31+112], X20
	009 Move [X31+120], X19
	010 NotImplemented "Instruction MRS not yet implemented."
	011 Move X8, [X22+40]
	012 Move X23, 0x2453000
	013 Move X19, X2
	014 Move X21, X1
	015 Move [X31+56], X8
	016 Move W8, [X23+1733]
	017 Move X20, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {30}
	022 Move X0, 0x2194000
	023 Move X0, [X0+888]
	024 Call 0x1C17CF4
	025 Move X0, 0x216E000
	026 Move X0, [X0+3784]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X23+1733], W8
	030 Move [X31+32], X31
	031 Move [X31+40], X31
	032 Move [X31+48], X31
	033 NotImplemented "Instruction LDRH not yet implemented."
	034 Compare W8, 0
	035 JumpIfEqual {82}
	036 Move X23, 0x216E000
	037 Move X23, [X23+3784]
	038 Move X24, X31
	039 Move X25, X31
	040 Compare X24, 0
	041 JumpIfEqual {48}
	042 Compare X19, 0
	043 JumpIfEqual {95}
	044 Move X1, [X23]
	045 Move X0, X19
	046 Move X2, X31
	047 Call StringBuilder.Append, X0, X1
	048 Compare X19, 0
	049 JumpIfEqual {95}
	050 NotImplemented "Instruction LDRH not yet implemented."
	051 Move X0, X19
	052 Move X2, X31
	053 Call StringBuilder.Append, X0, X1
	054 NotImplemented "Instruction LDRH not yet implemented."
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Add X25, X25, 1
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Add X24, X24, 2
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Move X1, [X23]
	061 Move X0, X19
	062 Move X2, X31
	063 Call StringBuilder.Append, X0, X1
	064 Move X0, [X20+32]
	065 Compare X0, 0
	066 JumpIfEqual {95}
	067 Move X9, 0x2194000
	068 NotImplemented "Instruction LDRH not yet implemented."
	069 Move X9, [X9+888]
	070 Subtract W1, W8, 1
	071 Move X2, [X9]
	072 Add X8, X31, 8
	073 Call List`1<TransformPath>.get_Item, X0, X1
	074 NotImplemented "Instruction LDUR not yet implemented."
	075 Move X8, [X31+24]
	076 Add X1, X31, 32
	077 Move X0, X20
	078 Move X2, X19
	079 Move [X31+2], V0
	080 Move [X31+48], X8
	081 Call TransformPathCache.Dump, X0, X1, X2
	082 Move X8, [X22+40]
	083 Move X9, [X31+56]
	084 NotImplemented "Instruction CMP not yet implemented."
	085 Move X20, [X31+112]
	086 Move X19, [X31+120]
	087 Move X22, [X31+96]
	088 Move X21, [X31+104]
	089 Move X24, [X31+80]
	090 Move X23, [X31+88]
	091 Move X30, [X31+64]
	092 Move X25, [X31+72]
	093 Add X31, X31, 128
	094 Return 
	095 Call 0x1C17F20
	096 Call 0x3EB2B20

Method: System.Void .ctor()

Disassembly:
	0x01F86E14 BL 0x3C73704
	0x01F86E18 LDR X8, [X27]
	0x01F86E1C LDR X8, [X8 + 0xB8]
	0x01F86E20 LDR X0, [X8]
	0x01F86E24 CBZ X0, 0x1F86FA4
	0x01F86E28 MOV X1, X31
	0x01F86E2C BL 0x3C67938
	0x01F86E30 LDR X8, [X26]
	0x01F86E34 MOV X24, X0
	0x01F86E38 MOV X0, X8
	0x01F86E3C BL 0x1C16F10
	0x01F86E40 MOV W1, W20
	0x01F86E44 MOV W2, W20
	0x01F86E48 MOV W3, W20
	0x01F86E4C MOV W4, W20
	0x01F86E50 MOV X5, X31
	0x01F86E54 MOV X25, X0
	0x01F86E58 BL 0x3C0C3DC
	0x01F86E5C CBZ X24, 0x1F86FA4
	0x01F86E60 MOV X0, X24
	0x01F86E64 MOV X1, X25
	0x01F86E68 MOV X2, X31
	0x01F86E6C BL 0x3C747F0
	0x01F86E70 LDR X8, [X27]
	0x01F86E74 LDR X8, [X8 + 0xB8]
	0x01F86E78 LDR X0, [X8]
	0x01F86E7C CBZ X0, 0x1F86FA4
	0x01F86E80 MOV X1, X31
	0x01F86E84 BL 0x3C6D718
	0x01F86E88 CBZ X0, 0x1F86FA4
	0x01F86E8C MOV W1, W23
	0x01F86E90 MOV X2, X31
	0x01F86E94 BL 0x3C73704
	0x01F86E98 LDR X8, [X27]
	0x01F86E9C LDR X8, [X8 + 0xB8]
	0x01F86EA0 LDR X0, [X8]
	0x01F86EA4 CBZ X0, 0x1F86FA4
	0x01F86EA8 MOV X1, X31
	0x01F86EAC BL 0x3C6F104
	0x01F86EB0 LDR X8, [X26]
	0x01F86EB4 MOV X23, X0
	0x01F86EB8 MOV X0, X8
	0x01F86EBC BL 0x1C16F10
	0x01F86EC0 MOV W1, W20
	0x01F86EC4 MOV W2, W20
	0x01F86EC8 MOV W3, W20
	0x01F86ECC MOV W4, W20
	0x01F86ED0 MOV X5, X31
	0x01F86ED4 MOV X24, X0
	0x01F86ED8 BL 0x3C0C3DC
	0x01F86EDC CBZ X23, 0x1F86FA4
	0x01F86EE0 MOV X0, X23
	0x01F86EE4 MOV X1, X24
	0x01F86EE8 MOV X2, X31
	0x01F86EEC BL 0x3C747F0
	0x01F86EF0 LDR X8, [X27]
	0x01F86EF4 LDR X8, [X8 + 0xB8]
	0x01F86EF8 LDR X0, [X8]
	0x01F86EFC CBZ X0, 0x1F86FA4
	0x01F86F00 MOV X1, X31
	0x01F86F04 BL 0x3C6F104
	0x01F86F08 LDR X8, [X26]
	0x01F86F0C MOV X23, X0
	0x01F86F10 MOV X0, X8
	0x01F86F14 BL 0x1C16F10
	0x01F86F18 MOV W1, W21
	0x01F86F1C MOV W2, W21

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X25, 0x2454000
	011 Move X26, 0x2195000
	012 Move X20, 0x2195000
	013 Move X24, 0x2195000
	014 Move X23, 0x2195000
	015 Move X22, 0x2195000
	016 Move X21, 0x2195000
	017 Move X26, [X26+1136]
	018 Move W8, [X25+1734]
	019 Move X20, [X20+1144]
	020 Move X24, [X24+1152]
	021 Move X23, [X23+1160]
	022 Move X22, [X22+1096]
	023 Move X21, [X21+1104]
	024 Move X19, X0
	025 Move TEMP, X8
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {49}
	029 Move X0, 0x2195000
	030 Move X0, [X0+1144]
	031 Call 0x1C17CF4
	032 Move X0, 0x2195000
	033 Move X0, [X0+1136]
	034 Call 0x1C17CF4
	035 Move X0, 0x2195000
	036 Move X0, [X0+1104]
	037 Call 0x1C17CF4
	038 Move X0, 0x2195000
	039 Move X0, [X0+1160]
	040 Call 0x1C17CF4
	041 Move X0, 0x2195000
	042 Move X0, [X0+1152]
	043 Call 0x1C17CF4
	044 Move X0, 0x2195000
	045 Move X0, [X0+1096]
	046 Call 0x1C17CF4
	047 Move W8, 1
	048 Move [X25+1734], W8
	049 Move X0, [X26]
	050 Call 0x1C17F10
	051 Move X1, [X20]
	052 Move X20, X0
	053 Call Dictionary`2<Object, TransformPath>..ctor, X0
	054 Move [X19+16], X20
	055 Move X0, [X24]
	056 Call 0x1C17F10
	057 Move X1, [X23]
	058 Move X20, X0
	059 Call List`1<UInt16>..ctor, X0
	060 Move [X19+24], X20
	061 Move X0, [X22]
	062 Call 0x1C17F10
	063 Move X1, [X21]
	064 Move X20, X0
	065 Call List`1<TransformPath>..ctor, X0
	066 Move [X19+32], X20
	067 Move X0, X19
	068 Move X20, [X31+64]
	069 Move X19, [X31+72]
	070 Move X22, [X31+48]
	071 Move X21, [X31+56]
	072 Move X24, [X31+32]
	073 Move X23, [X31+40]
	074 Move X26, [X31+16]
	075 Move X25, [X31+24]
	076 Move X1, X31
	077 Move X30, [X31+80]
	078 Call Object..ctor, X0
	079 Return 

