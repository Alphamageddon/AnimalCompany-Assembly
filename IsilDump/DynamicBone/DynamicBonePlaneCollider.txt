Type: DynamicBonePlaneCollider

Method: System.Void OnValidate()

Disassembly:
	0x01E28D20 ADRP X8, 0x22D2000

ISIL:
	001 Return 

Method: System.Void Prepare()

Disassembly:
	0x01E28D24 LDR X26, [X31 + 0x228]
	0x01E28D28 LDR X8, [X8 + 0xAD8]
	0x01E28D2C LDR X0, [X8]
	0x01E28D30 BL 0x1C16F10
	0x01E28D34 ADRP X8, 0x22D2000
	0x01E28D38 LDR X8, [X8 + 0xA98]
	0x01E28D3C MOV X25, X0
	0x01E28D40 LDR X1, [X8]
	0x01E28D44 BL 0x2F722C8
	0x01E28D48 CBZ X26, 0x1E29798
	0x01E28D4C LDR W8, [X26 + 0x18]
	0x01E28D50 CMP W8, 0x1
	0x01E28D54 B.LT 0x1E28ED0
	0x01E28D58 MOV W27, W31
	0x01E28D5C LDR X2, [X20]
	0x01E28D60 MOVI V0.2D, 0x0
	0x01E28D64 STR X31, [X31 + 0x200]
	0x01E28D68 STP V0, V0, [X29 + 0x150]
	0x01E28D6C STP V0, V0, [X29 + 0x130]
	0x01E28D70 STP V0, V0, [X29 + 0x110]
	0x01E28D74 MOV X0, X26
	0x01E28D78 MOV W1, W27
	0x01E28D7C BL 0x301BCCC
	0x01E28D80 CBZ X0, 0x1E29778
	0x01E28D84 LDR X0, [X0 + 0x18]
	0x01E28D88 CBZ X0, 0x1E2977C
	0x01E28D8C MOV X1, X31
	0x01E28D90 BL 0x3C16D04
	0x01E28D94 MOV X1, X0
	0x01E28D98 ADD X0, X31, 0x1A0
	0x01E28D9C MOV X2, X31
	0x01E28DA0 BL 0x3C1A5E8
	0x01E28DA4 LDR X2, [X20]
	0x01E28DA8 MOV X0, X26
	0x01E28DAC MOV W1, W27
	0x01E28DB0 BL 0x301BCCC
	0x01E28DB4 CBZ X0, 0x1E29774
	0x01E28DB8 LDR W1, [X0 + 0x28]
	0x01E28DBC ADD X0, X31, 0x1A0
	0x01E28DC0 MOV X2, X31
	0x01E28DC4 BL 0x3C1A678
	0x01E28DC8 LDR X2, [X20]
	0x01E28DCC MOV X0, X26
	0x01E28DD0 MOV W1, W27
	0x01E28DD4 BL 0x301BCCC
	0x01E28DD8 CBZ X0, 0x1E2976C
	0x01E28DDC LDR X0, [X0 + 0x10]
	0x01E28DE0 CBZ X0, 0x1E29770
	0x01E28DE4 ADD X8, X31, 0x378
	0x01E28DE8 MOV X1, X31
	0x01E28DEC BL 0x3C3F1C8
	0x01E28DF0 ADD X8, X31, 0x279
	0x01E28DF4 LDUR V0, [X8 + 0xFF]
	0x01E28DF8 ADD X8, X31, 0x289
	0x01E28DFC LDUR V1, [X8 + 0xFF]
	0x01E28E00 ADD X8, X31, 0x299
	0x01E28E04 LDUR V2, [X8 + 0xFF]
	0x01E28E08 ADD X8, X31, 0x2A9
	0x01E28E0C LDUR V3, [X8 + 0xFF]
	0x01E28E10 STP V0, V1, [X29 + 0x40]
	0x01E28E14 STP V2, V3, [X29 + 0x60]
	0x01E28E18 ADD X0, X31, 0x1A0
	0x01E28E1C ADD X1, X31, 0xD0
	0x01E28E20 MOV X2, X31
	0x01E28E24 BL 0x3C1A680
	0x01E28E28 ADD X0, X31, 0x378
	0x01E28E2C ADD X1, X31, 0x1A0
	0x01E28E30 MOVZ W2, 0x68
	0x01E28E34 BL 0x3EB1AC0
	0x01E28E38 CBZ X25, 0x1E29784
	0x01E28E3C LDR X28, [X22]
	0x01E28E40 ADD X0, X31, 0x240
	0x01E28E44 ADD X1, X31, 0x378
	0x01E28E48 MOVZ W2, 0x68
	0x01E28E4C BL 0x3EB1AC0
	0x01E28E50 LDR W9, [X25 + 0x1C]
	0x01E28E54 LDR X8, [X25 + 0x10]
	0x01E28E58 ADD W9, W9, 0x1
	0x01E28E5C STR W9, [X25 + 0x1C]
	0x01E28E60 CBZ X8, 0x1E29780
	0x01E28E64 LDRSW X9, [X25 + 0x18]
	0x01E28E68 LDR W10, [X8 + 0x18]
	0x01E28E6C CMP W9, W10
	0x01E28E70 B.CS 0x1E28E94
	0x01E28E74 MADD X8, X9, X19, X8
	0x01E28E78 ADD W10, W9, 0x1
	0x01E28E7C ADD X0, X8, 0x20
	0x01E28E80 ADD X1, X31, 0x240
	0x01E28E84 MOVZ W2, 0x68
	0x01E28E88 STR W10, [X25 + 0x18]
	0x01E28E8C BL 0x3EB1AC0
	0x01E28E90 B 0x1E28EC0
	0x01E28E94 LDR X8, [X28 + 0x20]
	0x01E28E98 ADD X0, X31, 0x2A8
	0x01E28E9C ADD X1, X31, 0x240
	0x01E28EA0 MOVZ W2, 0x68
	0x01E28EA4 LDR X8, [X8 + 0xC0]
	0x01E28EA8 LDR X28, [X8 + 0x70]
	0x01E28EAC BL 0x3EB1AC0
	0x01E28EB0 ADD X1, X31, 0x2A8
	0x01E28EB4 MOV X0, X25
	0x01E28EB8 MOV X2, X28
	0x01E28EBC BL 0x2F72B88
	0x01E28EC0 LDR W8, [X26 + 0x18]
	0x01E28EC4 ADD W27, W27, 0x1
	0x01E28EC8 CMP W27, W8
	0x01E28ECC B.LT 0x1E28D5C
	0x01E28ED0 ADRP X8, 0x22D2000
	0x01E28ED4 LDR X8, [X8 + 0x700]
	0x01E28ED8 LDR X0, [X8]
	0x01E28EDC BL 0x1C16F10
	0x01E28EE0 MOV X26, X0
	0x01E28EE4 MOV X1, X31
	0x01E28EE8 BL 0x3C17028
	0x01E28EEC LDR X8, [X31 + 0x20]
	0x01E28EF0 LDR W8, [X8 + 0x20]

ISIL:
	001 Move [X31-80], D13
	002 Move [X31-72], D12
	003 Move [X31+16], D11
	004 Move [X31+24], D10
	005 Move [X31+32], D9
	006 Move [X31+40], D8
	007 Move [X31+48], X30
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X20, 0x25B1000
	012 Move W8, [X20+1926]
	013 Move X19, X0
	014 Compare W8, 0
	015 JumpIfNotEqual {21}
	016 Move X0, 0x22CC000
	017 Move X0, [X0+1440]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X20+1926], W8
	021 Move W8, [X19+32]
	022 Move X20, 0x22CC000
	023 Move X20, [X20+1440]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Compare W8, 0
	027 JumpIfNotEqual {52}
	028 Move X0, X19
	029 Move X1, X31
	030 Call Component.get_transform, X0
	031 Compare X0, 0
	032 JumpIfEqual {133}
	033 Move X1, X31
	034 Call Transform.get_right, X0
	035 Move X0, X19
	036 Move X1, X31
	037 Call Component.get_transform, X0
	038 Compare X0, 0
	039 JumpIfEqual {133}
	040 Move X1, X31
	041 Call Transform.get_forward, X0
	042 Move X0, X19
	043 Move X1, X31
	044 Call Component.get_transform, X0
	045 Compare X0, 0
	046 JumpIfEqual {133}
	047 Move X1, X31
	048 Call Transform.get_up, X0
	049 Move V8, V0
	050 Move V9, V1
	051 Move V10, V2
	052 Move X8, [X20]
	053 Move X8, [X8+184]
	054 Move S8, [X8+24]
	055 Move S9, [X8+28]
	056 Move V10, [X8+32]
	057 Move X0, X19
	058 Move X1, X31
	059 Call Component.get_transform, X0
	060 Compare X0, 0
	061 JumpIfEqual {133}
	062 Move S1, [X19+40]
	063 Move S2, [X19+44]
	064 Move V0, [X19+36]
	065 Move X1, X31
	066 Call Transform.TransformPoint, X0, X1
	067 Move X21, 0x25B1000
	068 Move W8, [X21+1925]
	069 Move V11, V0
	070 Move V12, V1
	071 Move V13, V2
	072 Compare W8, 0
	073 JumpIfNotEqual {79}
	074 Move X0, 0x22CC000
	075 Move X0, [X0+1448]
	076 Call 0x1C17CF4
	077 Move W8, 1
	078 Move [X21+1925], W8
	079 Move X8, 0x22CC000
	080 Move X8, [X8+1448]
	081 Move X0, [X8]
	082 Move W8, [X0+224]
	083 Compare W8, 0
	084 JumpIfNotEqual {86}
	085 Call 0x1C17DFC
	086 Multiply S0, S8, S8
	087 Multiply S1, S9, S9
	088 Move X8, -20172800
	089 Add S0, S0, S1
	090 Move V1, [X8+380]
	091 Multiply S2, S10, S10
	092 Add S0, S2, S0
	093 NotImplemented "Instruction FSQRT not yet implemented."
	094 NotImplemented "Instruction FCMP not yet implemented."
	095 NotImplemented "Instruction FDIV not yet implemented."
	096 NotImplemented "Instruction FDIV not yet implemented."
	097 NotImplemented "Instruction FDIV not yet implemented."
	098 Move X21, 0x25B1000
	099 Move W8, [X21+1923]
	100 Compare W8, 0
	101 JumpIfNotEqual {107}
	102 Move X0, 0x22CC000
	103 Move X0, [X0+1440]
	104 Call 0x1C17CF4
	105 Move W8, 1
	106 Move [X21+1923], W8
	107 Move X8, [X20]
	108 Move X8, [X8+184]
	109 Move S1, [X8]
	110 Move S2, [X8+4]
	111 Move V0, [X8+8]
	112 Move [X19+56], S1
	113 Move [X19+64], S2
	114 Multiply S1, S11, S1
	115 Multiply S2, S12, S2
	116 Multiply S3, S13, S0
	117 Add S1, S1, S2
	118 Add S1, S3, S1
	119 NotImplemented "Instruction FNEG not yet implemented."
	120 Move [X19+64], S0
	121 Move [X19+72], S1
	122 Move X20, [X31+64]
	123 Move X19, [X31+72]
	124 Move X30, [X31+48]
	125 Move X21, [X31+56]
	126 Move D9, [X31+32]
	127 Move D8, [X31+40]
	128 Move D11, [X31+16]
	129 Move D10, [X31+24]
	130 Move D13, [X31+80]
	131 Move D12, [X31+88]
	132 Return 
	133 Call 0x1C17F20

Method: System.Boolean Collide(ref UnityEngine.Vector3 particlePosition, System.Single particleRadius)

Disassembly:
	0x01E28EF4 CMP W23, W8
	0x01E28EF8 B.GT 0x1E28F18
	0x01E28EFC CBZ X26, 0x1E297B0
	0x01E28F00 MOV X0, X26
	0x01E28F04 MOV W1, W31
	0x01E28F08 MOV X2, X31
	0x01E28F0C BL 0x3C170A8
	0x01E28F10 LDR X8, [X31 + 0x20]
	0x01E28F14 LDR W8, [X8 + 0x20]
	0x01E28F18 CMP W23, W8
	0x01E28F1C B.LE 0x1E28F34
	0x01E28F20 CBZ X26, 0x1E297AC
	0x01E28F24 MOVZ W1, 0x1
	0x01E28F28 MOV X0, X26
	0x01E28F2C MOV X2, X31
	0x01E28F30 BL 0x3C170A8
	0x01E28F34 CBZ X25, 0x1E297A4
	0x01E28F38 ADRP X8, 0x22D2000
	0x01E28F3C LDR X8, [X8 + 0xA90]
	0x01E28F40 LDR X1, [X8]
	0x01E28F44 MOV X0, X25
	0x01E28F48 ADRP X25, 0x22D2000
	0x01E28F4C LDR X25, [X25 + 0xA30]
	0x01E28F50 BL 0x2F750BC
	0x01E28F54 MOV X1, X0
	0x01E28F58 CBZ X26, 0x1E2979C
	0x01E28F5C MOVZ W2, 0x1

ISIL:
	001 Move S2, [X1]
	002 Move S1, [X1+4]
	003 Move S5, [X0+56]
	004 Move S4, [X0+60]
	005 Move V0, [X1+8]
	006 Move S3, [X0+64]
	007 Move S6, [X0+68]
	008 Move W8, [X0+48]
	009 Multiply S7, S2, S5
	010 Multiply S16, S1, S4
	011 Add S7, S7, S16
	012 Multiply S16, S0, S3
	013 Add S7, S16, S7
	014 Add S6, S6, S7
	015 NotImplemented "Instruction FCMP not yet implemented."
	016 Compare W8, 0
	017 Invalid "Jump target not found in method."
	018 Multiply S5, S5, S6
	019 Multiply S4, S4, S6
	020 Multiply S3, S3, S6
	021 Subtract S2, S2, S5
	022 Subtract S1, S1, S4
	023 Subtract S0, S0, S3
	024 Move W0, 1
	025 Move [X1], S2
	026 Move [X1+8], S1
	027 Move [X1+8], S0
	028 Return X0
	029 Move W0, W31
	030 Return X0

Method: System.Void OnDrawGizmosSelected()

Disassembly:
	0x01E28F60 MOVZ W3, 0x1
	0x01E28F64 MOV X0, X26
	0x01E28F68 MOV X4, X31
	0x01E28F6C BL 0x3C1A284
	0x01E28F70 CBZ X24, 0x1E297A8
	0x01E28F74 ADRP X9, 0x22D2000
	0x01E28F78 LDR W10, [X24 + 0x1C]
	0x01E28F7C LDR X8, [X24 + 0x10]
	0x01E28F80 LDR X9, [X9 + 0xA58]
	0x01E28F84 ADD W10, W10, 0x1
	0x01E28F88 LDR X9, [X9]
	0x01E28F8C STR W10, [X24 + 0x1C]
	0x01E28F90 CBZ X8, 0x1E297A0
	0x01E28F94 LDRSW X10, [X24 + 0x18]
	0x01E28F98 LDR W11, [X8 + 0x18]
	0x01E28F9C CMP W10, W11
	0x01E28FA0 B.CS 0x1E28FB8
	0x01E28FA4 ADD W9, W10, 0x1
	0x01E28FA8 ADD X8, X8, X10, 0x3, LSL
	0x01E28FAC STR W9, [X24 + 0x18]
	0x01E28FB0 STR X26, [X8 + 0x20]
	0x01E28FB4 B 0x1E28D10
	0x01E28FB8 LDR X8, [X9 + 0x20]
	0x01E28FBC LDR X8, [X8 + 0xC0]
	0x01E28FC0 LDR X2, [X8 + 0x70]
	0x01E28FC4 MOV X0, X24
	0x01E28FC8 MOV X1, X26
	0x01E28FCC BL 0x301BF90
	0x01E28FD0 B 0x1E28D10
	0x01E28FD4 ADRP X8, 0x22D2000
	0x01E28FD8 LDR X8, [X8 + 0xA20]
	0x01E28FDC ADD X0, X31, 0x210
	0x01E28FE0 LDR X1, [X8]
	0x01E28FE4 BL 0x2C0A83C
	0x01E28FE8 ADRP X8, 0x22D2000
	0x01E28FEC LDR X8, [X8 + 0xAD8]
	0x01E28FF0 LDR X0, [X8]
	0x01E28FF4 BL 0x1C16F10
	0x01E28FF8 ADRP X8, 0x22D2000
	0x01E28FFC LDR X8, [X8 + 0xA98]
	0x01E29000 MOV X25, X0
	0x01E29004 LDR X1, [X8]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X1, X31
	004 Move X19, X0
	005 Call Behaviour.get_enabled, X0
	006 Move TEMP, X0
	007 And TEMP, TEMP, 1
	008 Compare TEMP, 1
	009 JumpIfNotEqual {50}
	010 Move X8, [X19]
	011 Move X0, X19
	012 Move X9, [X8+392]
	013 Move X1, [X8+400]
	014 NotImplemented "Instruction BLR not yet implemented."
	015 Move W8, [X19+48]
	016 Move X9, -20176896
	017 Move X10, -20172800
	018 Move V1, [X9+3984]
	019 Move V2, [X10+48]
	020 Move S0, W31
	021 Move S3, 1
	022 NotImplemented "Instruction CMP not yet implemented."
	023 NotImplemented "Instruction FCSEL not yet implemented."
	024 NotImplemented "Instruction FCSEL not yet implemented."
	025 Move S0, 1
	026 Move S3, 1
	027 Move X0, X31
	028 Call Gizmos.set_color, X0
	029 Move X0, X19
	030 Move X1, X31
	031 Call Component.get_transform, X0
	032 Compare X0, 0
	033 JumpIfEqual {53}
	034 Move S1, [X19+40]
	035 Move S2, [X19+44]
	036 Move V0, [X19+36]
	037 Move X1, X31
	038 Call Transform.TransformPoint, X0, X1
	039 Move S3, [X19+56]
	040 Move S4, [X19+60]
	041 Move V5, [X19+64]
	042 Move X0, X31
	043 Add S3, S0, S3
	044 Add S4, S1, S4
	045 Add S5, S2, S5
	046 Move X30, [X31+16]
	047 Move X19, [X31+24]
	048 Call Gizmos.DrawLine, X0, X1
	049 Return 
	050 Move X30, [X31+16]
	051 Move X19, [X31+24]
	052 Return 
	053 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x01E29008 BL 0x2F722C8

ISIL:
	001 Call DynamicBoneColliderBase..ctor, X0
	002 Return 

