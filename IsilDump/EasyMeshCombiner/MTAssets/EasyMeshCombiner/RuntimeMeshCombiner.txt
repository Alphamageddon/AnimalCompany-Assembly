Type: MTAssets.EasyMeshCombiner.RuntimeMeshCombiner

Method: System.Void Awake()

Disassembly:
	0x01E291E8 MOV X2, X31
	0x01E291EC BL 0x3C170A8
	0x01E291F0 LDR X0, [X31 + 0x20]
	0x01E291F4 MOV X1, X31
	0x01E291F8 BL 0x3C32ECC
	0x01E291FC CBZ X0, 0x1E29764
	0x01E29200 MOV X1, X31
	0x01E29204 BL 0x3C389D4
	0x01E29208 ADRP X8, 0x22D1000
	0x01E2920C LDR X8, [X8 + 0xB28]
	0x01E29210 MOV X2, X31
	0x01E29214 LDR X1, [X8]
	0x01E29218 BL 0x321B938
	0x01E2921C CBZ X24, 0x1E29764
	0x01E29220 MOV X1, X0
	0x01E29224 MOV X0, X24
	0x01E29228 MOV X2, X31
	0x01E2922C BL 0x3C38A84
	0x01E29230 CBZ X25, 0x1E29764
	0x01E29234 ADRP X8, 0x22D1000
	0x01E29238 LDR X8, [X8 + 0xA90]
	0x01E2923C MOV X0, X25
	0x01E29240 LDR X1, [X8]
	0x01E29244 BL 0x2F750BC
	0x01E29248 MOV X1, X0
	0x01E2924C MOV X0, X24
	0x01E29250 MOV W2, W31
	0x01E29254 MOV X3, X31
	0x01E29258 BL 0x3C1A2E4
	0x01E2925C MOV X0, X24
	0x01E29260 MOV X1, X31
	0x01E29264 BL 0x3C19CD4
	0x01E29268 LDR X8, [X31 + 0x20]
	0x01E2926C LDRB W8, [X8 + 0x62]
	0x01E29270 CBZ W8, 0x1E29280
	0x01E29274 MOV X0, X24
	0x01E29278 MOV X1, X31
	0x01E2927C BL 0x3C19DD0
	0x01E29280 LDR X8, [X31 + 0x20]
	0x01E29284 ADRP X20, 0x22D1000
	0x01E29288 LDRB W8, [X8 + 0x63]
	0x01E2928C LDR X20, [X20 + 0xA30]
	0x01E29290 CBZ W8, 0x1E292A0
	0x01E29294 MOV X0, X24
	0x01E29298 MOV X1, X31
	0x01E2929C BL 0x3C19ECC
	0x01E292A0 LDR X8, [X31 + 0x20]
	0x01E292A4 LDRB W8, [X8 + 0x64]
	0x01E292A8 CBZ W8, 0x1E292B8
	0x01E292AC MOV X0, X24
	0x01E292B0 MOV X1, X31
	0x01E292B4 BL 0x3C1A0B8
	0x01E292B8 CBZ X19, 0x1E29764
	0x01E292BC MOV X0, X19
	0x01E292C0 MOV X1, X24
	0x01E292C4 MOV X2, X31
	0x01E292C8 BL 0x3C16D40

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x25B0000
	005 Move W8, [X20+3677]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {22}
	011 Move X0, 0x22CB000
	012 Move X0, [X0+2600]
	013 Call 0x1C17CF4
	014 Move X0, 0x22D2000
	015 Move X0, [X0+2520]
	016 Call 0x1C17CF4
	017 Move X0, 0x22D2000
	018 Move X0, [X0+2528]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X20+3677], W8
	022 Move W8, [X19+92]
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Move W8, [X19+112]
	025 Compare W8, 0
	026 JumpIfEqual {56}
	027 Move X0, X19
	028 Move X1, X31
	029 Call Component.get_gameObject, X0
	030 Compare X0, 0
	031 JumpIfEqual {64}
	032 Move X1, X31
	033 Call Object.get_name, X0
	034 Move X8, 0x22D2000
	035 Move X8, [X8+2528]
	036 Move X9, 0x22D2000
	037 Move X9, [X9+2520]
	038 Move X1, X0
	039 Move X8, [X8]
	040 Move X3, X31
	041 Move X2, [X9]
	042 Move X0, X8
	043 Call String.Concat, X0, X1, X2
	044 Move X8, 0x22CB000
	045 Move X8, [X8+2600]
	046 Move X20, X0
	047 Move X8, [X8]
	048 Move W9, [X8+224]
	049 Compare W9, 0
	050 JumpIfNotEqual {53}
	051 Move X0, X8
	052 Call 0x1C17DFC
	053 Move X0, X20
	054 Move X1, X31
	055 Call Debug.Log, X0
	056 Move X0, X19
	057 Move X20, [X31+16]
	058 Move X19, [X31+24]
	059 Move X30, [X31+32]
	060 Move X20, [X31+16]
	061 Move X19, [X31+24]
	062 Move X30, [X31+32]
	063 Return 
	064 Call 0x1C17F20

Method: System.Void Start()

Disassembly:
	0x01E2A978 ADD W9, W10, 0x1
	0x01E2A97C ADD X8, X8, X10, 0x3, LSL
	0x01E2A980 STR W9, [X21 + 0x18]
	0x01E2A984 STR X1, [X8 + 0x20]
	0x01E2A988 B 0x1E2A9A0
	0x01E2A98C LDR X8, [X9 + 0x20]
	0x01E2A990 MOV X0, X21
	0x01E2A994 LDR X8, [X8 + 0xC0]
	0x01E2A998 LDR X2, [X8 + 0x70]
	0x01E2A99C BL 0x301BF90
	0x01E2A9A0 LDR W8, [X20 + 0x18]
	0x01E2A9A4 ADD W22, W22, 0x1
	0x01E2A9A8 CMP W22, W8
	0x01E2A9AC B.LT 0x1E2A144
	0x01E2A9B0 CBZ X21, 0x1E2A9E8
	0x01E2A9B4 ADRP X8, 0x22D0000
	0x01E2A9B8 LDR X8, [X8 + 0xB68]
	0x01E2A9BC MOV X0, X21
	0x01E2A9C0 LDR X1, [X8]
	0x01E2A9C4 BL 0x301DDC4
	0x01E2A9C8 LDP X20, X19, [X31 + 0x60]
	0x01E2A9CC LDP X22, X21, [X31 + 0x50]
	0x01E2A9D0 LDP X24, X23, [X31 + 0x40]
	0x01E2A9D4 LDP X26, X25, [X31 + 0x30]
	0x01E2A9D8 LDP X28, X27, [X31 + 0x20]
	0x01E2A9DC LDP X29, X30, [X31 + 0x10]
	0x01E2A9E0 ADD X31, X31, 0x70
	0x01E2A9E4 RET
	0x01E2A9E8 BL 0x1C16F20
	0x01E2A9EC BL 0x1C16F28
	0x01E2A9F0 STR X30, [X31 - 0x30]!
	0x01E2A9F4 STP X22, X21, [X31 + 0x10]
	0x01E2A9F8 STP X20, X19, [X31 + 0x20]
	0x01E2A9FC MOV X21, X1
	0x01E2AA00 MOV X1, X31
	0x01E2AA04 MOV X19, X3
	0x01E2AA08 MOV X20, X2
	0x01E2AA0C MOV X22, X0
	0x01E2AA10 BL 0x33BDD8C
	0x01E2AA14 STP X21, X20, [X22 + 0x10]
	0x01E2AA18 STR X19, [X22 + 0x20]
	0x01E2AA1C LDP X20, X19, [X31 + 0x20]
	0x01E2AA20 LDP X22, X21, [X31 + 0x10]
	0x01E2AA24 LDR X30, [X31], #0x30
	0x01E2AA28 RET
	0x01E2AA2C STP X30, X23, [X31 - 0x30]!
	0x01E2AA30 STP X22, X21, [X31 + 0x10]
	0x01E2AA34 STP X20, X19, [X31 + 0x20]
	0x01E2AA38 MOV X22, X1
	0x01E2AA3C MOV X1, X31
	0x01E2AA40 MOV W19, W4
	0x01E2AA44 MOV X20, X3
	0x01E2AA48 MOV X21, X2
	0x01E2AA4C MOV X23, X0
	0x01E2AA50 BL 0x33BDD8C
	0x01E2AA54 STP X22, X21, [X23 + 0x10]
	0x01E2AA58 STR X20, [X23 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x25AF000
	005 Move W8, [X20+3678]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {22}
	011 Move X0, 0x22CA000
	012 Move X0, [X0+2600]
	013 Call 0x1C17CF4
	014 Move X0, 0x22D1000
	015 Move X0, [X0+2520]
	016 Call 0x1C17CF4
	017 Move X0, 0x22D1000
	018 Move X0, [X0+2528]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X20+3678], W8
	022 Move W8, [X19+92]
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Move W8, [X19+112]
	025 Compare W8, 0
	026 JumpIfEqual {56}
	027 Move X0, X19
	028 Move X1, X31
	029 Call Component.get_gameObject, X0
	030 Compare X0, 0
	031 JumpIfEqual {66}
	032 Move X1, X31
	033 Call Object.get_name, X0
	034 Move X8, 0x22D1000
	035 Move X8, [X8+2528]
	036 Move X9, 0x22D1000
	037 Move X9, [X9+2520]
	038 Move X1, X0
	039 Move X8, [X8]
	040 Move X3, X31
	041 Move X2, [X9]
	042 Move X0, X8
	043 Call String.Concat, X0, X1, X2
	044 Move X8, 0x22CA000
	045 Move X8, [X8+2600]
	046 Move X20, X0
	047 Move X8, [X8]
	048 Move W9, [X8+224]
	049 Compare W9, 0
	050 JumpIfNotEqual {53}
	051 Move X0, X8
	052 Call 0x1C17DFC
	053 Move X0, X20
	054 Move X1, X31
	055 Call Debug.Log, X0
	056 Move X0, X19
	057 Move X20, [X31+16]
	058 Move X19, [X31+24]
	059 Move X30, [X31+32]
	060 Call RuntimeMeshCombiner.CombineMeshes, X0
	061 Return 
	062 Move X20, [X31+16]
	063 Move X19, [X31+24]
	064 Move X30, [X31+32]
	065 Return 
	066 Call 0x1C17F20

Method: MTAssets.EasyMeshCombiner.RuntimeMeshCombiner/GameObjectWithMesh[] GetValidatedTargetGameObjects()

Disassembly:
	0x01E2AA5C STR W19, [X23 + 0x28]
	0x01E2AA60 LDP X20, X19, [X31 + 0x20]
	0x01E2AA64 LDP X22, X21, [X31 + 0x10]
	0x01E2AA68 LDP X30, X23, [X31], #0x30
	0x01E2AA6C RET
	0x01E2AA70 STP X30, X23, [X31 - 0x30]!
	0x01E2AA74 STP X22, X21, [X31 + 0x10]
	0x01E2AA78 STP X20, X19, [X31 + 0x20]
	0x01E2AA7C MOV X20, X1
	0x01E2AA80 MOV X1, X31
	0x01E2AA84 MOV X19, X3
	0x01E2AA88 MOV X21, X0
	0x01E2AA8C AND W22, W2, 0x1
	0x01E2AA90 AND W23, W4, 0x1
	0x01E2AA94 BL 0x33BDD8C
	0x01E2AA98 STR X20, [X21 + 0x10]
	0x01E2AA9C STRB W22, [X21 + 0x18]
	0x01E2AAA0 STR X19, [X21 + 0x20]
	0x01E2AAA4 STRB W23, [X21 + 0x28]
	0x01E2AAA8 LDP X20, X19, [X31 + 0x20]
	0x01E2AAAC LDP X22, X21, [X31 + 0x10]
	0x01E2AAB0 LDP X30, X23, [X31], #0x30
	0x01E2AAB4 RET
	0x01E2AAB8 SUB X31, X31, 0x70
	0x01E2AABC STP X30, X23, [X31 + 0x40]
	0x01E2AAC0 STP X22, X21, [X31 + 0x50]
	0x01E2AAC4 STP X20, X19, [X31 + 0x60]
	0x01E2AAC8 ADRP X20, 0x25AE000
	0x01E2AACC LDRB W8, [X20 + 0xE61]
	0x01E2AAD0 MOV X19, X0
	0x01E2AAD4 TBNZ X8, 0x0, 0x1E2AB88
	0x01E2AAD8 ADRP X0, 0x22D0000
	0x01E2AADC LDR X0, [X0 + 0xBF0]
	0x01E2AAE0 BL 0x1C16CF4
	0x01E2AAE4 ADRP X0, 0x22D0000
	0x01E2AAE8 LDR X0, [X0 + 0xB38]
	0x01E2AAEC BL 0x1C16CF4
	0x01E2AAF0 ADRP X0, 0x22D0000
	0x01E2AAF4 LDR X0, [X0 + 0xB40]
	0x01E2AAF8 BL 0x1C16CF4
	0x01E2AAFC ADRP X0, 0x22C9000
	0x01E2AB00 LDR X0, [X0 + 0xA28]
	0x01E2AB04 BL 0x1C16CF4
	0x01E2AB08 ADRP X0, 0x22D0000
	0x01E2AB0C LDR X0, [X0 + 0xBF8]
	0x01E2AB10 BL 0x1C16CF4
	0x01E2AB14 ADRP X0, 0x22D0000
	0x01E2AB18 LDR X0, [X0 + 0xC00]
	0x01E2AB1C BL 0x1C16CF4
	0x01E2AB20 ADRP X0, 0x22D0000
	0x01E2AB24 LDR X0, [X0 + 0xC08]
	0x01E2AB28 BL 0x1C16CF4
	0x01E2AB2C ADRP X0, 0x22D0000
	0x01E2AB30 LDR X0, [X0 + 0xC10]
	0x01E2AB34 BL 0x1C16CF4
	0x01E2AB38 ADRP X0, 0x22D0000
	0x01E2AB3C LDR X0, [X0 + 0xC18]
	0x01E2AB40 BL 0x1C16CF4
	0x01E2AB44 ADRP X0, 0x22D0000
	0x01E2AB48 LDR X0, [X0 + 0xC20]
	0x01E2AB4C BL 0x1C16CF4
	0x01E2AB50 ADRP X0, 0x22C9000
	0x01E2AB54 LDR X0, [X0 + 0x598]
	0x01E2AB58 BL 0x1C16CF4
	0x01E2AB5C ADRP X0, 0x22D0000
	0x01E2AB60 LDR X0, [X0 + 0xAF8]
	0x01E2AB64 BL 0x1C16CF4
	0x01E2AB68 ADRP X0, 0x22D0000
	0x01E2AB6C LDR X0, [X0 + 0xC28]
	0x01E2AB70 BL 0x1C16CF4
	0x01E2AB74 ADRP X0, 0x22D0000
	0x01E2AB78 LDR X0, [X0 + 0xC30]
	0x01E2AB7C BL 0x1C16CF4
	0x01E2AB80 MOVZ W8, 0x1
	0x01E2AB84 STRB W8, [X20 + 0xE61]
	0x01E2AB88 STP X31, X31, [X31 + 0x20]
	0x01E2AB8C STR X31, [X31 + 0x30]
	0x01E2AB90 LDRB W8, [X19 + 0x50]
	0x01E2AB94 CBZ W8, 0x1E2AC34
	0x01E2AB98 ADRP X22, 0x22C9000
	0x01E2AB9C LDR W8, [X19 + 0x54]
	0x01E2ABA0 LDR X22, [X22 + 0x598]
	0x01E2ABA4 CBNZ W8, 0x1E2ACC4
	0x01E2ABA8 LDR X0, [X19 + 0x48]
	0x01E2ABAC CBZ X0, 0x1E2AF30
	0x01E2ABB0 ADRP X8, 0x22D0000
	0x01E2ABB4 LDR X8, [X8 + 0xC20]
	0x01E2ABB8 LDR X1, [X8]
	0x01E2ABBC ADD X8, X31, 0x8
	0x01E2ABC0 BL 0x301CB58
	0x01E2ABC4 LDUR V0, [X31 + 0x8]
	0x01E2ABC8 LDR X8, [X31 + 0x18]
	0x01E2ABCC ADRP X21, 0x22D0000
	0x01E2ABD0 STR V0, [X31 + 0x2]
	0x01E2ABD4 STR X8, [X31 + 0x30]
	0x01E2ABD8 LDR X21, [X21 + 0xC00]
	0x01E2ABDC LDR X1, [X21]
	0x01E2ABE0 ADD X0, X31, 0x20
	0x01E2ABE4 BL 0x2BC4350
	0x01E2ABE8 TBZ X0, 0x0, 0x1E2ACAC
	0x01E2ABEC LDR X23, [X31 + 0x30]
	0x01E2ABF0 CBZ X23, 0x1E2AF24
	0x01E2ABF4 LDR X0, [X22]
	0x01E2ABF8 LDR X20, [X23 + 0x20]
	0x01E2ABFC LDR W8, [X0 + 0xE0]
	0x01E2AC00 CBNZ W8, 0x1E2AC08
	0x01E2AC04 BL 0x1C16DFC
	0x01E2AC08 MOV X0, X20
	0x01E2AC0C MOV X1, X31
	0x01E2AC10 MOV X2, X31
	0x01E2AC14 BL 0x3C3883C
	0x01E2AC18 TBNZ X0, 0x0, 0x1E2ABDC
	0x01E2AC1C LDR X0, [X23 + 0x20]
	0x01E2AC20 CBZ X0, 0x1E2AF2C
	0x01E2AC24 LDRB W1, [X23 + 0x28]
	0x01E2AC28 MOV X2, X31
	0x01E2AC2C BL 0x3C13034
	0x01E2AC30 B 0x1E2ABDC
	0x01E2AC34 LDRB W8, [X19 + 0x70]
	0x01E2AC38 CBZ W8, 0x1E2AF08
	0x01E2AC3C MOV X0, X19
	0x01E2AC40 MOV X1, X31
	0x01E2AC44 BL 0x3C32ECC
	0x01E2AC48 CBZ X0, 0x1E2AF30
	0x01E2AC4C MOV X1, X31
	0x01E2AC50 BL 0x3C389D4
	0x01E2AC54 ADRP X8, 0x22D0000
	0x01E2AC58 LDR X8, [X8 + 0xAF8]
	0x01E2AC5C ADRP X9, 0x22D0000
	0x01E2AC60 LDR X9, [X9 + 0xC30]
	0x01E2AC64 MOV X1, X0
	0x01E2AC68 LDR X8, [X8]
	0x01E2AC6C MOV X3, X31
	0x01E2AC70 LDR X2, [X9]
	0x01E2AC74 MOV X0, X8
	0x01E2AC78 BL 0x32274B8
	0x01E2AC7C ADRP X8, 0x22C9000
	0x01E2AC80 LDR X8, [X8 + 0xA28]
	0x01E2AC84 MOV X19, X0
	0x01E2AC88 LDR X8, [X8]
	0x01E2AC8C LDR W9, [X8 + 0xE0]
	0x01E2AC90 CBNZ W9, 0x1E2AC9C
	0x01E2AC94 MOV X0, X8
	0x01E2AC98 BL 0x1C16DFC
	0x01E2AC9C MOV X0, X19
	0x01E2ACA0 MOV X1, X31
	0x01E2ACA4 BL 0x3C06048
	0x01E2ACA8 B 0x1E2AF08
	0x01E2ACAC ADRP X8, 0x22D0000
	0x01E2ACB0 LDR X8, [X8 + 0xBF8]
	0x01E2ACB4 ADD X0, X31, 0x20
	0x01E2ACB8 LDR X1, [X8]
	0x01E2ACBC BL 0x2BC434C
	0x01E2ACC0 LDR W8, [X19 + 0x54]
	0x01E2ACC4 CMP W8, 0x1
	0x01E2ACC8 B.NE 0x1E2ADD0
	0x01E2ACCC LDR X0, [X19 + 0x48]
	0x01E2ACD0 CBZ X0, 0x1E2AF30
	0x01E2ACD4 ADRP X8, 0x22D0000
	0x01E2ACD8 LDR X8, [X8 + 0xC20]
	0x01E2ACDC LDR X1, [X8]
	0x01E2ACE0 ADD X8, X31, 0x8
	0x01E2ACE4 BL 0x301CB58
	0x01E2ACE8 LDUR V0, [X31 + 0x8]
	0x01E2ACEC LDR X8, [X31 + 0x18]
	0x01E2ACF0 ADRP X21, 0x22D0000
	0x01E2ACF4 STR V0, [X31 + 0x2]
	0x01E2ACF8 STR X8, [X31 + 0x30]
	0x01E2ACFC LDR X21, [X21 + 0xC00]
	0x01E2AD00 LDR X1, [X21]
	0x01E2AD04 ADD X0, X31, 0x20
	0x01E2AD08 BL 0x2BC4350
	0x01E2AD0C TBZ X0, 0x0, 0x1E2AD58
	0x01E2AD10 LDR X23, [X31 + 0x30]
	0x01E2AD14 CBZ X23, 0x1E2AF20
	0x01E2AD18 LDR X0, [X22]
	0x01E2AD1C LDR X20, [X23 + 0x10]
	0x01E2AD20 LDR W8, [X0 + 0xE0]
	0x01E2AD24 CBNZ W8, 0x1E2AD2C
	0x01E2AD28 BL 0x1C16DFC
	0x01E2AD2C MOV X0, X20
	0x01E2AD30 MOV X1, X31
	0x01E2AD34 MOV X2, X31
	0x01E2AD38 BL 0x3C3883C
	0x01E2AD3C TBNZ X0, 0x0, 0x1E2AD00
	0x01E2AD40 LDR X0, [X23 + 0x10]
	0x01E2AD44 CBZ X0, 0x1E2AF28
	0x01E2AD48 LDRB W1, [X23 + 0x18]
	0x01E2AD4C MOV X2, X31
	0x01E2AD50 BL 0x3C357B4
	0x01E2AD54 B 0x1E2AD00
	0x01E2AD58 ADRP X8, 0x22D0000
	0x01E2AD5C LDR X8, [X8 + 0xBF8]
	0x01E2AD60 ADD X0, X31, 0x20
	0x01E2AD64 LDR X1, [X8]
	0x01E2AD68 BL 0x2BC434C
	0x01E2AD6C LDRB W8, [X19 + 0x58]
	0x01E2AD70 CBZ W8, 0x1E2ADD0
	0x01E2AD74 ADRP X8, 0x22D0000
	0x01E2AD78 LDR X8, [X8 + 0xBF0]
	0x01E2AD7C MOV X0, X19
	0x01E2AD80 LDR X1, [X8]
	0x01E2AD84 BL 0x21A3894
	0x01E2AD88 LDR X8, [X22]
	0x01E2AD8C MOV X20, X0
	0x01E2AD90 LDR W9, [X8 + 0xE0]
	0x01E2AD94 CBNZ W9, 0x1E2ADA0
	0x01E2AD98 MOV X0, X8
	0x01E2AD9C BL 0x1C16DFC
	0x01E2ADA0 MOV X0, X20
	0x01E2ADA4 MOV X1, X31
	0x01E2ADA8 MOV X2, X31
	0x01E2ADAC BL 0x3C354F8
	0x01E2ADB0 TBZ X0, 0x0, 0x1E2ADD0
	0x01E2ADB4 LDR X0, [X22]
	0x01E2ADB8 LDR W8, [X0 + 0xE0]
	0x01E2ADBC CBNZ W8, 0x1E2ADC4
	0x01E2ADC0 BL 0x1C16DFC
	0x01E2ADC4 MOV X0, X20
	0x01E2ADC8 MOV X1, X31
	0x01E2ADCC BL 0x3C394A8
	0x01E2ADD0 LDR X8, [X19 + 0x48]
	0x01E2ADD4 CBZ X8, 0x1E2AF30
	0x01E2ADD8 LDP W2, W9, [X8 + 0x18]
	0x01E2ADDC ADRP X20, 0x22D0000
	0x01E2ADE0 LDR X20, [X20 + 0xB40]
	0x01E2ADE4 ADD W9, W9, 0x1
	0x01E2ADE8 CMP W2, 0x1
	0x01E2ADEC STP W31, W9, [X8 + 0x18]
	0x01E2ADF0 B.LT 0x1E2AE04
	0x01E2ADF4 LDR X0, [X8 + 0x10]
	0x01E2ADF8 MOV W1, W31
	0x01E2ADFC MOV X3, X31
	0x01E2AE00 BL 0x339FA34
	0x01E2AE04 LDR X1, [X20]
	0x01E2AE08 ADRP X21, 0x22D0000
	0x01E2AE0C LDR X21, [X21 + 0xB38]
	0x01E2AE10 MOV X0, X19
	0x01E2AE14 BL 0x21A3894
	0x01E2AE18 LDR X8, [X22]
	0x01E2AE1C MOV X20, X0
	0x01E2AE20 LDR W9, [X8 + 0xE0]
	0x01E2AE24 CBNZ W9, 0x1E2AE30
	0x01E2AE28 MOV X0, X8
	0x01E2AE2C BL 0x1C16DFC
	0x01E2AE30 MOV X0, X20
	0x01E2AE34 MOV X1, X31
	0x01E2AE38 BL 0x3C394A8
	0x01E2AE3C LDR X1, [X21]
	0x01E2AE40 MOV X0, X19
	0x01E2AE44 BL 0x21A3894
	0x01E2AE48 MOV X1, X31
	0x01E2AE4C BL 0x3C394A8
	0x01E2AE50 LDRB W8, [X19 + 0x71]
	0x01E2AE54 CBZ W8, 0x1E2AE80
	0x01E2AE58 MOV X0, X31
	0x01E2AE5C BL 0x3C31478
	0x01E2AE60 ADRP X8, 0x22D0000
	0x01E2AE64 LDR X8, [X8 + 0xC10]
	0x01E2AE68 LDR X0, [X8]
	0x01E2AE6C LDR W8, [X0 + 0xE0]
	0x01E2AE70 CBNZ W8, 0x1E2AE78
	0x01E2AE74 BL 0x1C16DFC
	0x01E2AE78 MOV X0, X31
	0x01E2AE7C BL 0x33B3DF8
	0x01E2AE80 LDRB W8, [X19 + 0x70]
	0x01E2AE84 CBZ W8, 0x1E2AEF4
	0x01E2AE88 MOV X0, X19
	0x01E2AE8C MOV X1, X31
	0x01E2AE90 BL 0x3C32ECC
	0x01E2AE94 CBZ X0, 0x1E2AF30
	0x01E2AE98 MOV X1, X31
	0x01E2AE9C BL 0x3C389D4
	0x01E2AEA0 ADRP X8, 0x22D0000
	0x01E2AEA4 LDR X8, [X8 + 0xAF8]
	0x01E2AEA8 ADRP X9, 0x22D0000
	0x01E2AEAC LDR X9, [X9 + 0xC28]
	0x01E2AEB0 MOV X1, X0
	0x01E2AEB4 LDR X8, [X8]
	0x01E2AEB8 MOV X3, X31
	0x01E2AEBC LDR X2, [X9]
	0x01E2AEC0 MOV X0, X8
	0x01E2AEC4 BL 0x32274B8
	0x01E2AEC8 ADRP X8, 0x22C9000
	0x01E2AECC LDR X8, [X8 + 0xA28]
	0x01E2AED0 MOV X20, X0
	0x01E2AED4 LDR X8, [X8]
	0x01E2AED8 LDR W9, [X8 + 0xE0]
	0x01E2AEDC CBNZ W9, 0x1E2AEE8
	0x01E2AEE0 MOV X0, X8
	0x01E2AEE4 BL 0x1C16DFC
	0x01E2AEE8 MOV X0, X20
	0x01E2AEEC MOV X1, X31
	0x01E2AEF0 BL 0x3C06048
	0x01E2AEF4 LDR X0, [X19 + 0x80]
	0x01E2AEF8 CBZ X0, 0x1E2AF04
	0x01E2AEFC MOV X1, X31
	0x01E2AF00 BL 0x3C45DE8
	0x01E2AF04 STRB W31, [X19 + 0x50]
	0x01E2AF08 LDP X20, X19, [X31 + 0x60]
	0x01E2AF0C LDP X22, X21, [X31 + 0x50]
	0x01E2AF10 LDP X30, X23, [X31 + 0x40]
	0x01E2AF14 MOVZ W0, 0x1
	0x01E2AF18 ADD X31, X31, 0x70
	0x01E2AF1C RET
	0x01E2AF20 BL 0x1C16F20
	0x01E2AF24 BL 0x1C16F20
	0x01E2AF28 BL 0x1C16F20
	0x01E2AF2C BL 0x1C16F20
	0x01E2AF30 BL 0x1C16F20
	0x01E2AF34 B 0x1E2AF54
	0x01E2AF38 B 0x1E2AFC0
	0x01E2AF3C B 0x1E2AF54
	0x01E2AF40 B 0x1E2AF54
	0x01E2AF44 B 0x1E2AFC0
	0x01E2AF48 B 0x1E2AFC0
	0x01E2AF4C B 0x1E2AF54
	0x01E2AF50 B 0x1E2AF54
	0x01E2AF54 MOV X20, X0
	0x01E2AF58 CMP W1, 0x1
	0x01E2AF5C B.NE 0x1E2AF8C
	0x01E2AF60 MOV X0, X20
	0x01E2AF64 BL 0x3EB1AD0
	0x01E2AF68 LDR X21, [X0]
	0x01E2AF6C BL 0x3EB1AE0
	0x01E2AF70 ADRP X8, 0x22D0000
	0x01E2AF74 LDR X8, [X8 + 0xBF8]
	0x01E2AF78 ADD X0, X31, 0x20
	0x01E2AF7C LDR X1, [X8]
	0x01E2AF80 BL 0x2BC434C
	0x01E2AF84 CBZ X21, 0x1E2ACC0
	0x01E2AF88 B 0x1E2AFF4
	0x01E2AF8C MOV X21, X31
	0x01E2AF90 B 0x1E2AF98
	0x01E2AF94 MOV X20, X0
	0x01E2AF98 ADRP X8, 0x22D0000
	0x01E2AF9C LDR X8, [X8 + 0xBF8]
	0x01E2AFA0 LDR X1, [X8]
	0x01E2AFA4 ADD X0, X31, 0x20
	0x01E2AFA8 BL 0x2BC434C
	0x01E2AFAC CBZ X21, 0x1E2B020
	0x01E2AFB0 MOV X0, X21
	0x01E2AFB4 BL 0x1C16F18
	0x01E2AFB8 B 0x1E2AFC0
	0x01E2AFBC B 0x1E2AFC0
	0x01E2AFC0 MOV X20, X0
	0x01E2AFC4 CMP W1, 0x1
	0x01E2AFC8 B.NE 0x1E2AFFC
	0x01E2AFCC MOV X0, X20
	0x01E2AFD0 BL 0x3EB1AD0
	0x01E2AFD4 LDR X21, [X0]
	0x01E2AFD8 BL 0x3EB1AE0
	0x01E2AFDC ADRP X8, 0x22D0000
	0x01E2AFE0 LDR X8, [X8 + 0xBF8]
	0x01E2AFE4 ADD X0, X31, 0x20
	0x01E2AFE8 LDR X1, [X8]
	0x01E2AFEC BL 0x2BC434C
	0x01E2AFF0 CBZ X21, 0x1E2AD6C
	0x01E2AFF4 MOV X0, X21
	0x01E2AFF8 BL 0x1C16F18
	0x01E2AFFC MOV X21, X31
	0x01E2B000 B 0x1E2B008
	0x01E2B004 MOV X20, X0
	0x01E2B008 ADRP X8, 0x22CF000
	0x01E2B00C LDR X8, [X8 + 0xBF8]
	0x01E2B010 LDR X1, [X8]
	0x01E2B014 ADD X0, X31, 0x20
	0x01E2B018 BL 0x2BC434C
	0x01E2B01C CBNZ X21, 0x1E2B028
	0x01E2B020 MOV X0, X20
	0x01E2B024 BL 0x1D2C690
	0x01E2B028 MOV X0, X21
	0x01E2B02C BL 0x1C16F18
	0x01E2B030 BL 0x1990590
	0x01E2B034 LDRB W0, [X0 + 0x50]
	0x01E2B038 RET
	0x01E2B03C STR X30, [X31 - 0x40]!
	0x01E2B040 STP X24, X23, [X31 + 0x10]
	0x01E2B044 STP X22, X21, [X31 + 0x20]
	0x01E2B048 STP X20, X19, [X31 + 0x30]
	0x01E2B04C ADRP X20, 0x25AD000
	0x01E2B050 LDRB W8, [X20 + 0xE62]
	0x01E2B054 MOV X19, X0
	0x01E2B058 TBNZ X8, 0x0, 0x1E2B094
	0x01E2B05C ADRP X0, 0x22CE000
	0x01E2B060 LDR X0, [X0 + 0x550]
	0x01E2B064 BL 0x1C16CF4
	0x01E2B068 ADRP X0, 0x22CF000
	0x01E2B06C LDR X0, [X0 + 0xC38]
	0x01E2B070 BL 0x1C16CF4
	0x01E2B074 ADRP X0, 0x22CF000
	0x01E2B078 LDR X0, [X0 + 0xC40]
	0x01E2B07C BL 0x1C16CF4
	0x01E2B080 ADRP X0, 0x22CE000
	0x01E2B084 LDR X0, [X0 + 0x548]
	0x01E2B088 BL 0x1C16CF4
	0x01E2B08C MOVZ W8, 0x1
	0x01E2B090 STRB W8, [X20 + 0xE62]
	0x01E2B094 MOVZ W8, 0xC350
	0x01E2B098 STR W8, [X19 + 0x20]
	0x01E2B09C ADRP X24, 0x25AD000
	0x01E2B0A0 ADRP X23, 0x22CF000
	0x01E2B0A4 ADRP X20, 0x22CF000
	0x01E2B0A8 ADRP X22, 0x22CE000
	0x01E2B0AC ADRP X21, 0x22CE000
	0x01E2B0B0 LDRB W8, [X24 + 0x783]
	0x01E2B0B4 LDR X23, [X23 + 0xC40]
	0x01E2B0B8 LDR X20, [X20 + 0xC38]
	0x01E2B0BC LDR X22, [X22 + 0x548]
	0x01E2B0C0 LDR X21, [X21 + 0x550]
	0x01E2B0C4 CBNZ W8, 0x1E2B0DC
	0x01E2B0C8 ADRP X0, 0x22C8000
	0x01E2B0CC LDR X0, [X0 + 0x5A0]
	0x01E2B0D0 BL 0x1C16CF4
	0x01E2B0D4 MOVZ W8, 0x1
	0x01E2B0D8 STRB W8, [X24 + 0x783]
	0x01E2B0DC ADRP X8, 0x22C8000
	0x01E2B0E0 LDR X8, [X8 + 0x5A0]
	0x01E2B0E4 LDR X8, [X8]
	0x01E2B0E8 LDR X9, [X8 + 0xB8]
	0x01E2B0EC LDR V0, [X9]
	0x01E2B0F0 LDR V1, [X9 + 0x8]
	0x01E2B0F4 STUR D0, [X19 + 0x24]
	0x01E2B0F8 STR S1, [X19 + 0x2C]
	0x01E2B0FC LDR X9, [X8 + 0xB8]
	0x01E2B100 LDR V0, [X9]
	0x01E2B104 LDR V1, [X9 + 0x8]
	0x01E2B108 STR D0, [X19 + 0x30]
	0x01E2B10C STR S1, [X19 + 0x38]
	0x01E2B110 LDR X8, [X8 + 0xB8]
	0x01E2B114 LDR V0, [X8]
	0x01E2B118 LDR V1, [X8 + 0x8]
	0x01E2B11C STUR D0, [X19 + 0x3C]
	0x01E2B120 STR S1, [X19 + 0x44]
	0x01E2B124 LDR X0, [X23]
	0x01E2B128 BL 0x1C16F10
	0x01E2B12C LDR X1, [X20]
	0x01E2B130 MOV X20, X0
	0x01E2B134 BL 0x301B7C4
	0x01E2B138 MOVZ W8, 0x1
	0x01E2B13C MOVZ W23, 0x101
	0x01E2B140 STR X20, [X19 + 0x48]
	0x01E2B144 STRB W8, [X19 + 0x58]
	0x01E2B148 STRH W23, [X19 + 0x62]
	0x01E2B14C LDR X0, [X22]
	0x01E2B150 BL 0x1C16F10
	0x01E2B154 LDR X1, [X21]
	0x01E2B158 MOV X20, X0
	0x01E2B15C BL 0x301B7C4
	0x01E2B160 STR X20, [X19 + 0x68]
	0x01E2B164 STRH W23, [X19 + 0x70]
	0x01E2B168 MOV X0, X19
	0x01E2B16C LDP X20, X19, [X31 + 0x30]
	0x01E2B170 LDP X22, X21, [X31 + 0x20]
	0x01E2B174 LDP X24, X23, [X31 + 0x10]
	0x01E2B178 MOV X1, X31
	0x01E2B17C LDR X30, [X31], #0x40
	0x01E2B180 B 0x3C36C30
	0x01E2B184 STP X30, X23, [X31 - 0x30]!
	0x01E2B188 STP X22, X21, [X31 + 0x10]
	0x01E2B18C STP X20, X19, [X31 + 0x20]
	0x01E2B190 ADRP X23, 0x25AD000
	0x01E2B194 ADRP X22, 0x22C8000
	0x01E2B198 ADRP X20, 0x22CF000
	0x01E2B19C ADRP X21, 0x22CF000
	0x01E2B1A0 MOV X19, X8
	0x01E2B1A4 LDRB W8, [X23 + 0xE63]
	0x01E2B1A8 LDR X22, [X22 + 0x618]
	0x01E2B1AC LDR X20, [X20 + 0xC48]
	0x01E2B1B0 LDR X21, [X21 + 0xC50]
	0x01E2B1B4 TBNZ X8, 0x0, 0x1E2B1E4
	0x01E2B1B8 ADRP X0, 0x22C8000
	0x01E2B1BC LDR X0, [X0 + 0x618]
	0x01E2B1C0 BL 0x1C16CF4
	0x01E2B1C4 ADRP X0, 0x22CF000
	0x01E2B1C8 LDR X0, [X0 + 0xC50]
	0x01E2B1CC BL 0x1C16CF4
	0x01E2B1D0 ADRP X0, 0x22CF000
	0x01E2B1D4 LDR X0, [X0 + 0xC48]
	0x01E2B1D8 BL 0x1C16CF4
	0x01E2B1DC MOVZ W8, 0x1
	0x01E2B1E0 STRB W8, [X23 + 0xE63]
	0x01E2B1E4 LDR X0, [X22]
	0x01E2B1E8 MOVZ W1, 0x4A1
	0x01E2B1EC BL 0x1C16D6C
	0x01E2B1F0 LDR X1, [X20]
	0x01E2B1F4 MOV X2, X31
	0x01E2B1F8 MOV X20, X0
	0x01E2B1FC BL 0x32C5BD8
	0x01E2B200 LDR X0, [X22]
	0x01E2B204 MOVZ W1, 0x2C4
	0x01E2B208 BL 0x1C16D6C
	0x01E2B20C LDR X1, [X21]
	0x01E2B210 MOV X2, X31
	0x01E2B214 MOV X21, X0
	0x01E2B218 BL 0x32C5BD8
	0x01E2B21C ADRP X8, 0xFFFFFFFFFECC3000
	0x01E2B220 LDR V0, [X8 + 0x370]
	0x01E2B224 STP X20, X21, [X19]
	0x01E2B228 STRB W31, [X19 + 0x18]
	0x01E2B22C STUR W31, [X19 + 0x19]
	0x01E2B230 STR D0, [X19 + 0x10]
	0x01E2B234 STR W31, [X19 + 0x1C]
	0x01E2B238 LDP X20, X19, [X31 + 0x20]
	0x01E2B23C LDP X22, X21, [X31 + 0x10]
	0x01E2B240 LDP X30, X23, [X31], #0x30
	0x01E2B244 RET
	0x01E2B248 MOV X1, X31
	0x01E2B24C B 0x33BDD8C
	0x01E2B250 STR X30, [X31 - 0x10]!
	0x01E2B254 LDR X0, [X0 + 0xB8]
	0x01E2B258 CBZ X0, 0x1E2B270
	0x01E2B25C MOV X1, X31
	0x01E2B260 BL 0x3C89764
	0x01E2B264 FMOV S2, W31
	0x01E2B268 LDR X30, [X31], #0x10
	0x01E2B26C RET
	0x01E2B270 BL 0x1C16F20
	0x01E2B274 STR X30, [X31 - 0x10]!
	0x01E2B278 LDR X0, [X0 + 0xB8]
	0x01E2B27C CBZ X0, 0x1E2B28C
	0x01E2B280 MOV X1, X31
	0x01E2B284 LDR X30, [X31], #0x10
	0x01E2B288 B 0x3C897F4
	0x01E2B28C BL 0x1C16F20
	0x01E2B290 STR X30, [X31 - 0x10]!
	0x01E2B294 LDR X0, [X0 + 0xB8]
	0x01E2B298 CBZ X0, 0x1E2B2C8
	0x01E2B29C MOV X1, X31
	0x01E2B2A0 BL 0x3C89880
	0x01E2B2A4 ADRP X8, 0xFFFFFFFFFECBF000
	0x01E2B2A8 LDR V2, [X8 + 0x104]
	0x01E2B2AC MOV V1.16B, V0.16B
	0x01E2B2B0 FMOV S0, W31
	0x01E2B2B4 MOV X0, X31
	0x01E2B2B8 FMUL S2, S1, S2
	0x01E2B2BC FMOV S1, W31
	0x01E2B2C0 LDR X30, [X31], #0x10
	0x01E2B2C4 B 0x3C2A574
	0x01E2B2C8 BL 0x1C16F20
	0x01E2B2CC STP X30, X19, [X31 - 0x10]!
	0x01E2B2D0 LDR X19, [X0 + 0xB8]
	0x01E2B2D4 MOV X0, X31
	0x01E2B2D8 BL 0x3C2A60C
	0x01E2B2DC ADRP X8, 0xFFFFFFFFFECBF000
	0x01E2B2E0 LDR V3, [X8 + 0x448]
	0x01E2B2E4 MOV X0, X31
	0x01E2B2E8 FMUL S0, S0, S3
	0x01E2B2EC FMUL S1, S1, S3
	0x01E2B2F0 FMUL S2, S2, S3
	0x01E2B2F4 BL 0x3C2AB94
	0x01E2B2F8 CBZ X19, 0x1E2B310
	0x01E2B2FC MOV X0, X19
	0x01E2B300 MOV V0.16B, V2.16B
	0x01E2B304 MOV X1, X31
	0x01E2B308 LDP X30, X19, [X31], #0x10
	0x01E2B30C B 0x3C898BC
	0x01E2B310 BL 0x1C16F20
	0x01E2B314 STR X30, [X31 - 0x10]!
	0x01E2B318 LDR X0, [X0 + 0xB8]
	0x01E2B31C CBZ X0, 0x1E2B32C
	0x01E2B320 MOV X1, X31
	0x01E2B324 LDR X30, [X31], #0x10
	0x01E2B328 B 0x3C89D4C
	0x01E2B32C BL 0x1C16F20
	0x01E2B330 STR X30, [X31 - 0x10]!
	0x01E2B334 LDR X0, [X0 + 0xB8]
	0x01E2B338 CBZ X0, 0x1E2B34C
	0x01E2B33C AND W1, W1, 0x1
	0x01E2B340 MOV X2, X31
	0x01E2B344 LDR X30, [X31], #0x10
	0x01E2B348 B 0x3C89D94
	0x01E2B34C BL 0x1C16F20
	0x01E2B350 STR X30, [X31 - 0x30]!
	0x01E2B354 STP X22, X21, [X31 + 0x10]
	0x01E2B358 STP X20, X19, [X31 + 0x20]
	0x01E2B35C ADRP X21, 0x25AD000
	0x01E2B360 ADRP X22, 0x22CF000
	0x01E2B364 ADRP X20, 0x22CF000
	0x01E2B368 LDRB W8, [X21 + 0xE65]
	0x01E2B36C LDR X22, [X22 + 0xC58]
	0x01E2B370 LDR X20, [X20 + 0xC60]
	0x01E2B374 MOV X19, X0
	0x01E2B378 TBNZ X8, 0x0, 0x1E2B39C
	0x01E2B37C ADRP X0, 0x22CF000
	0x01E2B380 LDR X0, [X0 + 0xC58]
	0x01E2B384 BL 0x1C16CF4
	0x01E2B388 ADRP X0, 0x22CF000
	0x01E2B38C LDR X0, [X0 + 0xC60]
	0x01E2B390 BL 0x1C16CF4
	0x01E2B394 MOVZ W8, 0x1
	0x01E2B398 STRB W8, [X21 + 0xE65]
	0x01E2B39C LDR X1, [X22]
	0x01E2B3A0 MOV X0, X19
	0x01E2B3A4 BL 0x241EC74
	0x01E2B3A8 LDR X0, [X20]
	0x01E2B3AC LDR W8, [X0 + 0xE0]
	0x01E2B3B0 CBNZ W8, 0x1E2B3B8
	0x01E2B3B4 BL 0x1C16DFC
	0x01E2B3B8 MOV X0, X31
	0x01E2B3BC BL 0x3C88824
	0x01E2B3C0 CMP W0, 0x2
	0x01E2B3C4 CSET W8, NE
	0x01E2B3C8 STRB W8, [X19 + 0xB5]
	0x01E2B3CC LDP X20, X19, [X31 + 0x20]
	0x01E2B3D0 LDP X22, X21, [X31 + 0x10]
	0x01E2B3D4 LDR X30, [X31], #0x30
	0x01E2B3D8 RET
	0x01E2B3DC CBZ X1, 0x1E2B3EC
	0x01E2B3E0 MOV X0, X1
	0x01E2B3E4 MOV X1, X31
	0x01E2B3E8 B 0x3C89D4C
	0x01E2B3EC STR X30, [X31 - 0x10]!
	0x01E2B3F0 BL 0x1C16F20
	0x01E2B3F4 STR X30, [X31 - 0x20]!
	0x01E2B3F8 STP X20, X19, [X31 + 0x10]
	0x01E2B3FC CBZ X1, 0x1E2B444
	0x01E2B400 MOV X19, X1
	0x01E2B404 MOV X0, X1
	0x01E2B408 MOV X1, X31
	0x01E2B40C MOV W20, W2
	0x01E2B410 BL 0x3C89D4C
	0x01E2B414 AND W8, W0, 0x1
	0x01E2B418 AND W1, W20, 0x1
	0x01E2B41C CMP W8, W1
	0x01E2B420 B.EQ 0x1E2B438
	0x01E2B424 MOV X0, X19
	0x01E2B428 LDP X20, X19, [X31 + 0x10]
	0x01E2B42C MOV X2, X31
	0x01E2B430 LDR X30, [X31], #0x20
	0x01E2B434 B 0x3C89D94
	0x01E2B438 LDP X20, X19, [X31 + 0x10]
	0x01E2B43C LDR X30, [X31], #0x20
	0x01E2B440 RET
	0x01E2B444 BL 0x1C16F20
	0x01E2B448 STP X30, X21, [X31 - 0x20]!
	0x01E2B44C STP X20, X19, [X31 + 0x10]
	0x01E2B450 CBZ X1, 0x1E2B4C4
	0x01E2B454 MOV X20, X1
	0x01E2B458 MOV X21, X0
	0x01E2B45C MOV X0, X1
	0x01E2B460 MOV X1, X31
	0x01E2B464 MOV X19, X2
	0x01E2B468 BL 0x3C89764
	0x01E2B46C STP S0, S1, [X19 + 0x8]
	0x01E2B470 STR W31, [X19 + 0x10]
	0x01E2B474 LDRB W21, [X21 + 0x90]
	0x01E2B478 MOV X0, X20
	0x01E2B47C MOV X1, X31
	0x01E2B480 BL 0x3C89880
	0x01E2B484 ADRP X8, 0xFFFFFFFFFECBF000
	0x01E2B488 LDR V1, [X8 + 0x104]
	0x01E2B48C MOV X0, X31
	0x01E2B490 FMUL S2, S0, S1
	0x01E2B494 FMOV S0, W31
	0x01E2B498 FMOV S1, W31
	0x01E2B49C BL 0x3C2A574
	0x01E2B4A0 CBZ W21, 0x1E2B4B0
	0x01E2B4A4 STP S0, S1, [X19 + 0x6C]
	0x01E2B4A8 STP S2, S3, [X19 + 0x74]
	0x01E2B4AC B 0x1E2B4B8
	0x01E2B4B0 STP S0, S1, [X19 + 0x14]
	0x01E2B4B4 STP S2, S3, [X19 + 0x1C]
	0x01E2B4B8 LDP X20, X19, [X31 + 0x10]
	0x01E2B4BC LDP X30, X21, [X31], #0x20
	0x01E2B4C0 RET
	0x01E2B4C4 BL 0x1C16F20
	0x01E2B4C8 STP D11, D10, [X31 - 0x30]!
	0x01E2B4CC STP D9, D8, [X31 + 0x10]
	0x01E2B4D0 STP X30, X19, [X31 + 0x20]
	0x01E2B4D4 CBZ X1, 0x1E2B548
	0x01E2B4D8 MOV X19, X1
	0x01E2B4DC MOV X0, X1
	0x01E2B4E0 MOV X1, X31
	0x01E2B4E4 MOV V8.16B, V6.16B
	0x01E2B4E8 MOV V9.16B, V5.16B
	0x01E2B4EC MOV V10.16B, V4.16B
	0x01E2B4F0 MOV V11.16B, V3.16B
	0x01E2B4F4 BL 0x3C897F4
	0x01E2B4F8 MOV V0.16B, V11.16B
	0x01E2B4FC MOV V1.16B, V10.16B
	0x01E2B500 MOV V2.16B, V9.16B
	0x01E2B504 MOV V3.16B, V8.16B
	0x01E2B508 MOV X0, X31
	0x01E2B50C BL 0x3C2A60C
	0x01E2B510 ADRP X8, 0xFFFFFFFFFECBF000
	0x01E2B514 LDR V3, [X8 + 0x448]
	0x01E2B518 MOV X0, X31
	0x01E2B51C FMUL S0, S0, S3
	0x01E2B520 FMUL S1, S1, S3
	0x01E2B524 FMUL S2, S2, S3
	0x01E2B528 BL 0x3C2AB94
	0x01E2B52C MOV X0, X19
	0x01E2B530 LDP X30, X19, [X31 + 0x20]
	0x01E2B534 LDP D9, D8, [X31 + 0x10]
	0x01E2B538 MOV V0.16B, V2.16B
	0x01E2B53C MOV X1, X31
	0x01E2B540 LDP D11, D10, [X31], #0x30
	0x01E2B544 B 0x3C898BC
	0x01E2B548 BL 0x1C16F20
	0x01E2B54C STP X30, X21, [X31 - 0x20]!
	0x01E2B550 STP X20, X19, [X31 + 0x10]
	0x01E2B554 CBZ X1, 0x1E2B598
	0x01E2B558 MOV X19, X1
	0x01E2B55C MOV X0, X1
	0x01E2B560 MOV X1, X31
	0x01E2B564 BL 0x3C89D4C
	0x01E2B568 MOV W20, W0
	0x01E2B56C AND W21, W0, 0x1
	0x01E2B570 MOV X0, X19
	0x01E2B574 MOV X1, X31
	0x01E2B578 BL 0x3C89E60
	0x01E2B57C MOVZ W8, 0x2
	0x01E2B580 BFM W8, W20, 0x0, 0x0
	0x01E2B584 LDP X20, X19, [X31 + 0x10]
	0x01E2B588 ANDS W31, W0, 0x1
	0x01E2B58C CSEL W0, W8, W21, NE
	0x01E2B590 LDP X30, X21, [X31], #0x20
	0x01E2B594 RET
	0x01E2B598 BL 0x1C16F20
	0x01E2B59C CBZ X1, 0x1E2B5AC
	0x01E2B5A0 MOV X0, X1
	0x01E2B5A4 MOV X1, X31
	0x01E2B5A8 B 0x3C89DE0
	0x01E2B5AC STR X30, [X31 - 0x10]!
	0x01E2B5B0 BL 0x1C16F20
	0x01E2B5B4 CBZ X1, 0x1E2B5C8
	0x01E2B5B8 MOV X0, X1
	0x01E2B5BC MOV W1, W2
	0x01E2B5C0 MOV X2, X31
	0x01E2B5C4 B 0x3C89E1C
	0x01E2B5C8 STR X30, [X31 - 0x10]!
	0x01E2B5CC BL 0x1C16F20
	0x01E2B5D0 STP D9, D8, [X31 - 0x40]!
	0x01E2B5D4 STP X30, X23, [X31 + 0x10]
	0x01E2B5D8 STP X22, X21, [X31 + 0x20]
	0x01E2B5DC STP X20, X19, [X31 + 0x30]
	0x01E2B5E0 CBZ X1, 0x1E2B8D4
	0x01E2B5E4 MOV X20, X1
	0x01E2B5E8 MOV X0, X1
	0x01E2B5EC MOV X1, X31
	0x01E2B5F0 MOV X19, X2
	0x01E2B5F4 BL 0x3C89AAC
	0x01E2B5F8 ADRP X21, 0x25AD000
	0x01E2B5FC LDRB W8, [X21 + 0xE8F]
	0x01E2B600 MOV V8.16B, V0.16B
	0x01E2B604 CBNZ W8, 0x1E2B61C
	0x01E2B608 ADRP X0, 0x22CF000
	0x01E2B60C LDR X0, [X0 + 0xC68]
	0x01E2B610 BL 0x1C16CF4
	0x01E2B614 MOVZ W8, 0x1
	0x01E2B618 STRB W8, [X21 + 0xE8F]
	0x01E2B61C ADRP X22, 0x22CF000
	0x01E2B620 LDR X22, [X22 + 0xC68]
	0x01E2B624 LDR X0, [X22]
	0x01E2B628 LDR W8, [X0 + 0xE0]
	0x01E2B62C CBNZ W8, 0x1E2B634
	0x01E2B630 BL 0x1C16DFC
	0x01E2B634 FMOV W8, S8
	0x01E2B638 MOVZ W9, 0x44800000
	0x01E2B63C UBFM W8, W8, 0x1F, 0x1F
	0x01E2B640 FMOV S0, 0.5
	0x01E2B644 FMOV S1, W9
	0x01E2B648 UCVTF S2, W8
	0x01E2B64C MOVZ W9, 0x7F800000
	0x01E2B650 FMUL S1, S8, S1
	0x01E2B654 FSUB S0, S0, S2
	0x01E2B658 FMOV S2, W9
	0x01E2B65C FADD S0, S1, S0
	0x01E2B660 FCVTZS W8, S0
	0x01E2B664 FCMP S0, S2
	0x01E2B668 MOVZ W9, 0x80000000
	0x01E2B66C CSEL W8, W9, W8, EQ
	0x01E2B670 SBFM W9, W8, 0x1F, 0x1F
	0x01E2B674 EOR W8, W9, W8, 0x1
	0x01E2B678 MOV X0, X20
	0x01E2B67C MOV X1, X31
	0x01E2B680 STR W8, [X19 + 0x40]
	0x01E2B684 BL 0x3C89B34
	0x01E2B688 LDRB W8, [X21 + 0xE8F]
	0x01E2B68C MOV V8.16B, V0.16B
	0x01E2B690 CBNZ W8, 0x1E2B6A8
	0x01E2B694 ADRP X0, 0x22CF000
	0x01E2B698 LDR X0, [X0 + 0xC68]
	0x01E2B69C BL 0x1C16CF4
	0x01E2B6A0 MOVZ W8, 0x1
	0x01E2B6A4 STRB W8, [X21 + 0xE8F]
	0x01E2B6A8 LDR X0, [X22]
	0x01E2B6AC LDR W8, [X0 + 0xE0]
	0x01E2B6B0 CBNZ W8, 0x1E2B6B8
	0x01E2B6B4 BL 0x1C16DFC
	0x01E2B6B8 FMOV W8, S8
	0x01E2B6BC MOVZ W9, 0x44800000
	0x01E2B6C0 UBFM W8, W8, 0x1F, 0x1F
	0x01E2B6C4 FMOV S0, 0.5
	0x01E2B6C8 FMOV S1, W9
	0x01E2B6CC UCVTF S2, W8
	0x01E2B6D0 MOVZ W9, 0x7F800000
	0x01E2B6D4 FMUL S1, S8, S1
	0x01E2B6D8 FSUB S0, S0, S2
	0x01E2B6DC FMOV S2, W9
	0x01E2B6E0 FADD S0, S1, S0
	0x01E2B6E4 FCVTZS W8, S0
	0x01E2B6E8 FCMP S0, S2
	0x01E2B6EC MOVZ W9, 0x80000000
	0x01E2B6F0 CSEL W8, W9, W8, EQ
	0x01E2B6F4 SBFM W9, W8, 0x1F, 0x1F
	0x01E2B6F8 EOR W8, W9, W8, 0x1
	0x01E2B6FC MOV X0, X20
	0x01E2B700 MOV X1, X31
	0x01E2B704 STR W8, [X19 + 0x38]
	0x01E2B708 BL 0x3C89BBC
	0x01E2B70C LDRB W8, [X21 + 0xE8F]
	0x01E2B710 MOV V8.16B, V0.16B
	0x01E2B714 CBNZ W8, 0x1E2B72C
	0x01E2B718 ADRP X0, 0x22CF000
	0x01E2B71C LDR X0, [X0 + 0xC68]
	0x01E2B720 BL 0x1C16CF4
	0x01E2B724 MOVZ W8, 0x1
	0x01E2B728 STRB W8, [X21 + 0xE8F]
	0x01E2B72C LDR X0, [X22]
	0x01E2B730 LDR W8, [X0 + 0xE0]
	0x01E2B734 CBNZ W8, 0x1E2B73C
	0x01E2B738 BL 0x1C16DFC
	0x01E2B73C FMOV W8, S8
	0x01E2B740 MOVZ W9, 0x44800000
	0x01E2B744 UBFM W8, W8, 0x1F, 0x1F
	0x01E2B748 FMOV S0, 0.5
	0x01E2B74C FMOV S1, W9
	0x01E2B750 UCVTF S2, W8
	0x01E2B754 MOVZ W9, 0x7F800000
	0x01E2B758 FMUL S1, S8, S1
	0x01E2B75C FSUB S0, S0, S2
	0x01E2B760 FMOV S2, W9
	0x01E2B764 FADD S0, S1, S0
	0x01E2B768 FCVTZS W8, S0
	0x01E2B76C FCMP S0, S2
	0x01E2B770 MOVZ W9, 0x80000000
	0x01E2B774 CSEL W8, W9, W8, EQ
	0x01E2B778 SBFM W9, W8, 0x1F, 0x1F
	0x01E2B77C EOR W8, W9, W8, 0x1
	0x01E2B780 MOV X0, X20
	0x01E2B784 MOV X1, X31
	0x01E2B788 STR W8, [X19 + 0x3C]
	0x01E2B78C BL 0x3C89908
	0x01E2B790 LDRB W8, [X21 + 0xE8F]
	0x01E2B794 MOV V9.16B, V0.16B
	0x01E2B798 MOV V8.16B, V1.16B
	0x01E2B79C CBNZ W8, 0x1E2B7B4
	0x01E2B7A0 ADRP X0, 0x22CF000
	0x01E2B7A4 LDR X0, [X0 + 0xC68]
	0x01E2B7A8 BL 0x1C16CF4
	0x01E2B7AC MOVZ W8, 0x1
	0x01E2B7B0 STRB W8, [X21 + 0xE8F]
	0x01E2B7B4 LDR X0, [X22]
	0x01E2B7B8 LDR W8, [X0 + 0xE0]
	0x01E2B7BC CBZ W8, 0x1E2B7C8
	0x01E2B7C0 MOV W8, W31
	0x01E2B7C4 B 0x1E2B7D8
	0x01E2B7C8 BL 0x1C16DFC
	0x01E2B7CC LDRB W8, [X21 + 0xE8F]
	0x01E2B7D0 CMP W8, 0x0
	0x01E2B7D4 CSET W8, EQ
	0x01E2B7D8 FMOV W9, S9
	0x01E2B7DC MOVZ W10, 0x44800000
	0x01E2B7E0 UBFM W9, W9, 0x1F, 0x1F
	0x01E2B7E4 FMOV S0, 0.5
	0x01E2B7E8 FMOV S1, W10
	0x01E2B7EC UCVTF S2, W9
	0x01E2B7F0 MOVZ W11, 0x7F800000
	0x01E2B7F4 FMUL S1, S9, S1
	0x01E2B7F8 FSUB S0, S0, S2
	0x01E2B7FC FMOV S3, W11
	0x01E2B800 FADD S0, S1, S0
	0x01E2B804 FCVTZS W9, S0
	0x01E2B808 FCMP S0, S3
	0x01E2B80C MOVZ W10, 0x80000000
	0x01E2B810 CSEL W23, W10, W9, EQ
	0x01E2B814 CBZ W8, 0x1E2B82C
	0x01E2B818 ADRP X0, 0x22CF000
	0x01E2B81C LDR X0, [X0 + 0xC68]
	0x01E2B820 BL 0x1C16CF4
	0x01E2B824 MOVZ W8, 0x1
	0x01E2B828 STRB W8, [X21 + 0xE8F]
	0x01E2B82C LDR X0, [X22]
	0x01E2B830 LDR W8, [X0 + 0xE0]
	0x01E2B834 CBNZ W8, 0x1E2B83C
	0x01E2B838 BL 0x1C16DFC
	0x01E2B83C FMOV W9, S8
	0x01E2B840 MOVZ W10, 0x44800000
	0x01E2B844 UBFM W9, W9, 0x1F, 0x1F
	0x01E2B848 FMOV S0, 0.5
	0x01E2B84C FMOV S1, W10
	0x01E2B850 UCVTF S2, W9
	0x01E2B854 MOVZ W10, 0x7F800000
	0x01E2B858 FMUL S1, S8, S1
	0x01E2B85C FSUB S0, S0, S2
	0x01E2B860 FMOV S2, W10
	0x01E2B864 FADD S0, S1, S0
	0x01E2B868 FCVTZS W9, S0
	0x01E2B86C FCMP S0, S2
	0x01E2B870 MOVZ W10, 0x80000000
	0x01E2B874 CSEL W9, W10, W9, EQ
	0x01E2B878 SBFM W8, W23, 0x1F, 0x1F
	0x01E2B87C SBFM W10, W9, 0x1F, 0x1F
	0x01E2B880 EOR W8, W8, W23, 0x1
	0x01E2B884 EOR W9, W10, W9, 0x1
	0x01E2B888 BFM X8, X9, 0x20, 0x1F
	0x01E2B88C STR X8, [X19 + 0x48]!
	0x01E2B890 MOV X0, X20
	0x01E2B894 MOV X1, X31
	0x01E2B898 STR W31, [X19 + 0x8]
	0x01E2B89C BL 0x3C89A24
	0x01E2B8A0 ADD X0, X19, 0xC
	0x01E2B8A4 MOV X1, X31
	0x01E2B8A8 BL 0x1E8AE14
	0x01E2B8AC MOV X0, X20
	0x01E2B8B0 MOV X1, X31
	0x01E2B8B4 BL 0x3C89C44
	0x01E2B8B8 MOV X0, X19
	0x01E2B8BC LDP X20, X19, [X31 + 0x30]
	0x01E2B8C0 LDP X22, X21, [X31 + 0x20]
	0x01E2B8C4 LDP X30, X23, [X31 + 0x10]
	0x01E2B8C8 MOV X1, X31
	0x01E2B8CC LDP D9, D8, [X31], #0x40
	0x01E2B8D0 B 0x1E8AE14
	0x01E2B8D4 BL 0x1C16F20
	0x01E2B8D8 ADD X0, X0, 0x54
	0x01E2B8DC MOV X1, X31
	0x01E2B8E0 B 0x1E8AE14
	0x01E2B8E4 ADD X0, X0, 0x48
	0x01E2B8E8 MOV X1, X31
	0x01E2B8EC B 0x1E8AE14
	0x01E2B8F0 STP X30, X25, [X31 - 0x40]!
	0x01E2B8F4 STP X24, X23, [X31 + 0x10]
	0x01E2B8F8 STP X22, X21, [X31 + 0x20]
	0x01E2B8FC STP X20, X19, [X31 + 0x30]
	0x01E2B900 ADRP X22, 0x25AD000
	0x01E2B904 LDRB W8, [X22 + 0xE90]
	0x01E2B908 LDR W21, [X2 + 0x40]
	0x01E2B90C MOV X20, X2
	0x01E2B910 MOV X19, X1
	0x01E2B914 CBNZ W8, 0x1E2B92C
	0x01E2B918 ADRP X0, 0x22CF000
	0x01E2B91C LDR X0, [X0 + 0xC68]
	0x01E2B920 BL 0x1C16CF4
	0x01E2B924 MOVZ W8, 0x1
	0x01E2B928 STRB W8, [X22 + 0xE90]
	0x01E2B92C ADRP X23, 0x22CF000
	0x01E2B930 LDR X23, [X23 + 0xC68]
	0x01E2B934 LDR X0, [X23]
	0x01E2B938 LDR W8, [X0 + 0xE0]
	0x01E2B93C CBNZ W8, 0x1E2B944
	0x01E2B940 BL 0x1C16DFC
	0x01E2B944 CBZ X19, 0x1E2BB00
	0x01E2B948 AND W8, W21, 0x1
	0x01E2B94C SUB W8, W31, W8
	0x01E2B950 EOR W8, W8, W21, 0x1
	0x01E2B954 MOVZ W9, 0x3A800000
	0x01E2B958 SCVTF S0, W8
	0x01E2B95C FMOV S1, W9
	0x01E2B960 FMUL S0, S0, S1
	0x01E2B964 MOV X0, X19
	0x01E2B968 MOV X1, X31
	0x01E2B96C BL 0x3C89AE8
	0x01E2B970 LDRB W8, [X22 + 0xE90]
	0x01E2B974 LDR W21, [X20 + 0x38]
	0x01E2B978 CBNZ W8, 0x1E2B990
	0x01E2B97C ADRP X0, 0x22CF000
	0x01E2B980 LDR X0, [X0 + 0xC68]
	0x01E2B984 BL 0x1C16CF4
	0x01E2B988 MOVZ W8, 0x1
	0x01E2B98C STRB W8, [X22 + 0xE90]
	0x01E2B990 LDR X0, [X23]
	0x01E2B994 LDR W8, [X0 + 0xE0]
	0x01E2B998 CBNZ W8, 0x1E2B9A0
	0x01E2B99C BL 0x1C16DFC
	0x01E2B9A0 AND W8, W21, 0x1
	0x01E2B9A4 SUB W8, W31, W8
	0x01E2B9A8 EOR W8, W8, W21, 0x1
	0x01E2B9AC MOVZ W9, 0x3A800000
	0x01E2B9B0 SCVTF S0, W8
	0x01E2B9B4 FMOV S1, W9
	0x01E2B9B8 FMUL S0, S0, S1
	0x01E2B9BC MOV X0, X19
	0x01E2B9C0 MOV X1, X31
	0x01E2B9C4 BL 0x3C89B70
	0x01E2B9C8 LDRB W8, [X22 + 0xE90]
	0x01E2B9CC LDR W21, [X20 + 0x3C]
	0x01E2B9D0 CBNZ W8, 0x1E2B9E8
	0x01E2B9D4 ADRP X0, 0x22CF000
	0x01E2B9D8 LDR X0, [X0 + 0xC68]
	0x01E2B9DC BL 0x1C16CF4
	0x01E2B9E0 MOVZ W8, 0x1
	0x01E2B9E4 STRB W8, [X22 + 0xE90]
	0x01E2B9E8 LDR X0, [X23]
	0x01E2B9EC LDR W8, [X0 + 0xE0]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X22, 0x25AF000
	015 Move X21, 0x22D1000
	016 Move X20, 0x22D1000
	017 Move W8, [X22+3679]
	018 Move X21, [X21+2352]
	019 Move X20, [X20+2360]
	020 Move X19, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {132}
	025 Move X0, 0x22D1000
	026 Move X0, [X0+2872]
	027 Call 0x1C17CF4
	028 Move X0, 0x22D1000
	029 Move X0, [X0+2880]
	030 Call 0x1C17CF4
	031 Move X0, 0x22CA000
	032 Move X0, [X0+2600]
	033 Call 0x1C17CF4
	034 Move X0, 0x22D1000
	035 Move X0, [X0+2888]
	036 Call 0x1C17CF4
	037 Move X0, 0x22D1000
	038 Move X0, [X0+2896]
	039 Call 0x1C17CF4
	040 Move X0, 0x22D1000
	041 Move X0, [X0+2904]
	042 Call 0x1C17CF4
	043 Move X0, 0x22D0000
	044 Move X0, [X0+4016]
	045 Call 0x1C17CF4
	046 Move X0, 0x22D1000
	047 Move X0, [X0+2392]
	048 Call 0x1C17CF4
	049 Move X0, 0x22D1000
	050 Move X0, [X0+2912]
	051 Call 0x1C17CF4
	052 Move X0, 0x22D1000
	053 Move X0, [X0+2400]
	054 Call 0x1C17CF4
	055 Move X0, 0x22D1000
	056 Move X0, [X0+2920]
	057 Call 0x1C17CF4
	058 Move X0, 0x22D1000
	059 Move X0, [X0+2928]
	060 Call 0x1C17CF4
	061 Move X0, 0x22D1000
	062 Move X0, [X0+2360]
	063 Call 0x1C17CF4
	064 Move X0, 0x22D0000
	065 Move X0, [X0+3232]
	066 Call 0x1C17CF4
	067 Move X0, 0x22D1000
	068 Move X0, [X0+2936]
	069 Call 0x1C17CF4
	070 Move X0, 0x22D1000
	071 Move X0, [X0+2232]
	072 Call 0x1C17CF4
	073 Move X0, 0x22D1000
	074 Move X0, [X0+2240]
	075 Call 0x1C17CF4
	076 Move X0, 0x22D0000
	077 Move X0, [X0+3240]
	078 Call 0x1C17CF4
	079 Move X0, 0x22D1000
	080 Move X0, [X0+2944]
	081 Call 0x1C17CF4
	082 Move X0, 0x22D1000
	083 Move X0, [X0+2952]
	084 Call 0x1C17CF4
	085 Move X0, 0x22D1000
	086 Move X0, [X0+2352]
	087 Call 0x1C17CF4
	088 Move X0, 0x22CA000
	089 Move X0, [X0+1432]
	090 Call 0x1C17CF4
	091 Move X0, 0x22CA000
	092 Move X0, [X0+2760]
	093 Call 0x1C17CF4
	094 Move X0, 0x22D1000
	095 Move X0, [X0+2960]
	096 Call 0x1C17CF4
	097 Move X0, 0x22D1000
	098 Move X0, [X0+2968]
	099 Call 0x1C17CF4
	100 Move X0, 0x22D1000
	101 Move X0, [X0+2976]
	102 Call 0x1C17CF4
	103 Move X0, 0x22D1000
	104 Move X0, [X0+2984]
	105 Call 0x1C17CF4
	106 Move X0, 0x22D1000
	107 Move X0, [X0+2992]
	108 Call 0x1C17CF4
	109 Move X0, 0x22D1000
	110 Move X0, [X0+3000]
	111 Call 0x1C17CF4
	112 Move X0, 0x22D1000
	113 Move X0, [X0+3008]
	114 Call 0x1C17CF4
	115 Move X0, 0x22D1000
	116 Move X0, [X0+3016]
	117 Call 0x1C17CF4
	118 Move X0, 0x22D1000
	119 Move X0, [X0+3024]
	120 Call 0x1C17CF4
	121 Move X0, 0x22D1000
	122 Move X0, [X0+3032]
	123 Call 0x1C17CF4
	124 Move X0, 0x22D1000
	125 Move X0, [X0+3040]
	126 Call 0x1C17CF4
	127 Move X0, 0x22D1000
	128 Move X0, [X0+3048]
	129 Call 0x1C17CF4
	130 Move W8, 1
	131 Move [X22+3679], W8
	132 Move X0, [X21]
	133 Move [X31+8], X31
	134 Call 0x1C17F10
	135 Move X1, [X20]
	136 Move X21, X0
	137 Call List`1<Object>..ctor, X0
	138 Move X0, [X19+104]
	139 Compare X0, 0
	140 JumpIfEqual {1137}
	141 Move X24, 0x22D0000
	142 Move X27, 0x22CA000
	143 Move X26, 0x22D1000
	144 Move X29, 0x22D1000
	145 Move X28, 0x22D1000
	146 Move X25, 0x22CA000
	147 Move X23, 0x22D1000
	148 Move X24, [X24+3240]
	149 Move X27, [X27+1432]
	150 Move X26, [X26+2400]
	151 Move X29, [X29+2944]
	152 Move X28, [X28+3024]
	153 Move X25, [X25+2760]
	154 Move X23, [X23+2240]
	155 Move W20, W31
	156 Move W8, [X0+24]
	157 NotImplemented "Instruction CMP not yet implemented."
	158 Move X2, [X24]
	159 Move W1, W20
	160 Call List`1<Object>.get_Item, X0, X1
	161 Move X8, [X27]
	162 Move X22, X0
	163 Move W9, [X8+224]
	164 Compare W9, 0
	165 JumpIfNotEqual {168}
	166 Move X0, X8
	167 Call 0x1C17DFC
	168 Move X0, X22
	169 Move X1, X31
	170 Move X2, X31
	171 Call Object.op_Equality, X0, X1
	172 Move TEMP, X0
	173 And TEMP, TEMP, 1
	174 Compare TEMP, 1
	175 JumpIfEqual {300}
	176 Move W8, [X19+96]
	177 Compare W8, 0
	178 JumpIfEqual {255}
	179 Move X0, [X19+104]
	180 Compare X0, 0
	181 JumpIfEqual {1137}
	182 Move X2, [X24]
	183 Move W1, W20
	184 Move X25, X19
	185 Move X19, X27
	186 Call List`1<Object>.get_Item, X0, X1
	187 Compare X0, 0
	188 JumpIfEqual {1137}
	189 Move X8, 0x22D0000
	190 Move X8, [X8+4016]
	191 Move W1, 1
	192 Move X29, X24
	193 Move X27, X28
	194 Move X2, [X8]
	195 Call 0x21E6F84, X0, X1
	196 Move [X31+12], W31
	197 Compare X0, 0
	198 JumpIfEqual {1137}
	199 Move W8, [X0+24]
	200 Move X22, X0
	201 NotImplemented "Instruction CMP not yet implemented."
	202 Move X28, X31
	203 Add X24, X22, 32
	204 NotImplemented "Instruction CMP not yet implemented."
	205 Compare X21, 0
	206 JumpIfEqual {1137}
	207 Move X23, [X24]
	208 Move X2, [X26]
	209 Move X0, X21
	210 Move X1, X23
	211 Call List`1<Object>.Contains, X0, X1
	212 Move TEMP, X0
	213 And TEMP, TEMP, 1
	214 Compare TEMP, 1
	215 JumpIfEqual {238}
	216 Move X9, 0x22D1000
	217 Move W10, [X21+28]
	218 Move X8, [X21+16]
	219 Move X9, [X9+2392]
	220 Add W10, W10, 1
	221 Move X9, [X9]
	222 Move [X21+28], W10
	223 Compare X8, 0
	224 JumpIfEqual {1137}
	225 NotImplemented "Instruction LDRSW not yet implemented."
	226 Move W11, [X8+24]
	227 NotImplemented "Instruction CMP not yet implemented."
	228 Add W9, W10, 1
	229 Add X8, X8, X10
	230 Move [X21+24], W9
	231 Move [X8+32], X23
	232 Move X8, [X9+32]
	233 Move X0, X21
	234 Move X1, X23
	235 Move X8, [X8+192]
	236 Move X2, [X8+112]
	237 Call List`1<Object>.AddWithResize, X0, X1
	238 Add X28, X28, 1
	239 Move [X31+12], W28
	240 Move W8, [X22+24]
	241 NotImplemented "Instruction CMP not yet implemented."
	242 Move W8, [X25+96]
	243 Move X28, X27
	244 Move X27, X19
	245 Move X19, X25
	246 Move X25, 0x22CA000
	247 Move X23, 0x22D1000
	248 Move X24, X29
	249 Move X29, 0x22D1000
	250 Move X25, [X25+2760]
	251 Move X23, [X23+2240]
	252 Move X29, [X29+2944]
	253 Compare W8, 0
	254 JumpIfNotEqual {300}
	255 Move X0, [X19+104]
	256 Compare X0, 0
	257 JumpIfEqual {1137}
	258 Move X2, [X24]
	259 Move W1, W20
	260 Call List`1<Object>.get_Item, X0, X1
	261 Compare X0, 0
	262 JumpIfEqual {1137}
	263 Move X8, 0x22D1000
	264 Move X8, [X8+2904]
	265 Move X1, [X8]
	266 Call 0x21E62E4, X0
	267 Compare X21, 0
	268 JumpIfEqual {1137}
	269 Move X2, [X26]
	270 Move X22, X0
	271 Move X0, X21
	272 Move X1, X22
	273 Call List`1<Object>.Contains, X0, X1
	274 Move TEMP, X0
	275 And TEMP, TEMP, 1
	276 Compare TEMP, 1
	277 JumpIfEqual {300}
	278 Move X9, 0x22D1000
	279 Move W10, [X21+28]
	280 Move X8, [X21+16]
	281 Move X9, [X9+2392]
	282 Add W10, W10, 1
	283 Move X9, [X9]
	284 Move [X21+28], W10
	285 Compare X8, 0
	286 JumpIfEqual {1137}
	287 NotImplemented "Instruction LDRSW not yet implemented."
	288 Move W11, [X8+24]
	289 NotImplemented "Instruction CMP not yet implemented."
	290 Add W9, W10, 1
	291 Add X8, X8, X10
	292 Move [X21+24], W9
	293 Move [X8+32], X22
	294 Move X8, [X9+32]
	295 Move X0, X21
	296 Move X1, X22
	297 Move X8, [X8+192]
	298 Move X2, [X8+112]
	299 Call List`1<Object>.AddWithResize, X0, X1
	300 Move X0, [X19+104]
	301 Add W20, W20, 1
	302 Compare X0, 0
	303 JumpIfNotEqual {156}
	304 Move X8, 0x22D1000
	305 Move X8, [X8+2952]
	306 Move X0, [X8]
	307 Call 0x1C17F10
	308 Move X8, 0x22D1000
	309 Move X8, [X8+2928]
	310 Move X20, X0
	311 Move X1, [X8]
	312 Call List`1<Object>..ctor, X0
	313 Compare X21, 0
	314 JumpIfEqual {1137}
	315 Move W8, [X21+24]
	316 Move X26, 0x22CA000
	317 Move X26, [X26+2600]
	318 NotImplemented "Instruction CMP not yet implemented."
	319 Move W22, W31
	320 Move X2, [X23]
	321 Move X0, X21
	322 Move W1, W22
	323 Call List`1<Object>.get_Item, X0, X1
	324 Compare X0, 0
	325 JumpIfEqual {1137}
	326 Move X8, 0x22D1000
	327 Move X8, [X8+2872]
	328 Move X1, [X8]
	329 Call 0x21A4894, X0
	330 Move X2, [X23]
	331 Move X23, X0
	332 Move X0, X21
	333 Move W1, W22
	334 Call List`1<Object>.get_Item, X0, X1
	335 Compare X0, 0
	336 JumpIfEqual {1137}
	337 Move X8, 0x22D1000
	338 Move X8, [X8+2880]
	339 Move X1, [X8]
	340 Call 0x21A4894, X0
	341 Move X8, [X27]
	342 Move X24, X0
	343 Move W9, [X8+224]
	344 Compare W9, 0
	345 JumpIfNotEqual {348}
	346 Move X0, X8
	347 Call 0x1C17DFC
	348 Move X0, X23
	349 Move X1, X31
	350 Move X2, X31
	351 Call Object.op_Inequality, X0, X1
	352 Move TEMP, X0
	353 And TEMP, TEMP, 1
	354 Compare TEMP, 1
	355 JumpIfEqual {369}
	356 Move X0, [X27]
	357 Move W8, [X0+224]
	358 Compare W8, 0
	359 JumpIfNotEqual {361}
	360 Call 0x1C17DFC
	361 Move X0, X24
	362 Move X1, X31
	363 Move X2, X31
	364 Call Object.op_Inequality, X0, X1
	365 Move TEMP, X0
	366 And TEMP, TEMP, 1
	367 Compare TEMP, 1
	368 JumpIfNotEqual {422}
	369 Move W8, [X19+97]
	370 Compare W8, 0
	371 JumpIfEqual {427}
	372 Move X8, 0x22D1000
	373 Move X8, [X8+2240]
	374 Move X0, X21
	375 Move W1, W22
	376 Move X2, [X8]
	377 Call List`1<Object>.get_Item, X0, X1
	378 Compare X0, 0
	379 JumpIfEqual {1137}
	380 Move X1, X31
	381 Call Component.get_gameObject, X0
	382 Move X8, 0x22D1000
	383 Move X8, [X8+2888]
	384 Move X26, X0
	385 Move X8, [X8]
	386 Move X0, X8
	387 Call 0x1C17F10
	388 Move X1, X31
	389 Move X25, X0
	390 Call Object..ctor, X0
	391 Move [X25+16], X26
	392 Move [X25+24], X23
	393 Move [X25+32], X24
	394 Compare X20, 0
	395 JumpIfEqual {1137}
	396 Move X9, 0x22D1000
	397 Move W10, [X20+28]
	398 Move X8, [X20+16]
	399 Move X9, [X9+2912]
	400 Add W10, W10, 1
	401 Move X9, [X9]
	402 Move [X20+28], W10
	403 Compare X8, 0
	404 JumpIfEqual {1137}
	405 NotImplemented "Instruction LDRSW not yet implemented."
	406 Move W11, [X8+24]
	407 Move X26, 0x22C9000
	408 Move X26, [X26+2600]
	409 NotImplemented "Instruction CMP not yet implemented."
	410 Add W9, W10, 1
	411 Add X8, X8, X10
	412 Move [X20+24], W9
	413 Move [X8+32], X25
	414 Move X8, [X9+32]
	415 Move X0, X20
	416 Move X1, X25
	417 Move X8, [X8+192]
	418 Move X2, [X8+112]
	419 Call List`1<Object>.AddWithResize, X0, X1
	420 Move X25, 0x22C9000
	421 Move X25, [X25+2760]
	422 Move W8, [X21+24]
	423 Move X23, 0x22D0000
	424 Move X23, [X23+2240]
	425 Add W22, W22, 1
	426 NotImplemented "Instruction CMP not yet implemented."
	427 Compare X24, 0
	428 JumpIfEqual {1137}
	429 Move X0, X24
	430 Move X1, X31
	431 Call Renderer.get_enabled, X0
	432 Move TEMP, X0
	433 And TEMP, TEMP, 1
	434 Compare TEMP, 1
	435 JumpIfNotEqual {422}
	436 Move W8, [X19+97]
	437 Compare W8, 0
	438 JumpIfNotEqual {372}
	439 Move X8, 0x22D0000
	440 Move X8, [X8+2240]
	441 Move X0, X21
	442 Move W1, W22
	443 Move X2, [X8]
	444 Call List`1<Object>.get_Item, X0, X1
	445 Compare X0, 0
	446 JumpIfEqual {1137}
	447 Move X1, X31
	448 Call Component.get_gameObject, X0
	449 Compare X0, 0
	450 JumpIfEqual {1137}
	451 Move X1, X31
	452 Call GameObject.get_activeSelf, X0
	453 Move TEMP, X0
	454 And TEMP, TEMP, 1
	455 Compare TEMP, 1
	456 JumpIfNotEqual {422}
	457 Move W8, [X19+97]
	458 Compare W8, 0
	459 JumpIfNotEqual {372}
	460 Move X8, 0x22D0000
	461 Move X8, [X8+2240]
	462 Move X0, X21
	463 Move W1, W22
	464 Move X2, [X8]
	465 Call List`1<Object>.get_Item, X0, X1
	466 Compare X0, 0
	467 JumpIfEqual {1137}
	468 Move X1, X31
	469 Call Component.get_gameObject, X0
	470 Compare X0, 0
	471 JumpIfEqual {1137}
	472 Move X1, X31
	473 Call GameObject.get_activeInHierarchy, X0
	474 Move TEMP, X0
	475 And TEMP, TEMP, 1
	476 Compare TEMP, 1
	477 JumpIfEqual {372}
	478 Move X8, 0x22D0000
	479 Move X8, [X8+2952]
	480 Move X0, [X8]
	481 Call 0x1C17F10
	482 Move X8, 0x22D0000
	483 Move X8, [X8+2928]
	484 Move X21, X0
	485 Move X1, [X8]
	486 Call List`1<Object>..ctor, X0
	487 Compare X20, 0
	488 JumpIfEqual {1137}
	489 Move W8, [X20+24]
	490 NotImplemented "Instruction CMP not yet implemented."
	491 Move W22, W31
	492 Move X2, [X29]
	493 Move X0, X20
	494 Move W1, W22
	495 Call List`1<Object>.get_Item, X0, X1
	496 Compare X0, 0
	497 JumpIfEqual {1137}
	498 Move X8, [X27]
	499 Move X23, [X0+24]
	500 Move W9, [X8+224]
	501 Compare W9, 0
	502 JumpIfNotEqual {505}
	503 Move X0, X8
	504 Call 0x1C17DFC
	505 Move X0, X23
	506 Move X1, X31
	507 Move X2, X31
	508 Call Object.op_Equality, X0, X1
	509 Move TEMP, X0
	510 And TEMP, TEMP, 1
	511 Compare TEMP, 1
	512 JumpIfNotEqual {546}
	513 Move W8, [X19+112]
	514 Compare W8, 0
	515 JumpIfEqual {545}
	516 Move X2, [X29]
	517 Move X0, X20
	518 Move W1, W22
	519 Call List`1<Object>.get_Item, X0, X1
	520 Compare X0, 0
	521 JumpIfEqual {1137}
	522 Move X0, [X0+16]
	523 Compare X0, 0
	524 JumpIfEqual {1137}
	525 Move X1, X31
	526 Call Object.get_name, X0
	527 Move X9, 0x22D0000
	528 Move X8, [X28]
	529 Move X9, [X9+3016]
	530 Move X1, X0
	531 Move X3, X31
	532 Move X0, X8
	533 Move X2, [X9]
	534 Call String.Concat, X0, X1, X2
	535 Move X8, [X26]
	536 Move X23, X0
	537 Move W9, [X8+224]
	538 Compare W9, 0
	539 JumpIfNotEqual {542}
	540 Move X0, X8
	541 Call 0x1C17DFC
	542 Move X0, X23
	543 Move X1, X31
	544 Call Debug.LogError, X0
	545 Move W24, W31
	546 Move W24, 1
	547 Move X2, [X29]
	548 Move X0, X20
	549 Move W1, W22
	550 Call List`1<Object>.get_Item, X0, X1
	551 Compare X0, 0
	552 JumpIfEqual {1137}
	553 Move X8, [X27]
	554 Move X23, [X0+32]
	555 Move W9, [X8+224]
	556 Compare W9, 0
	557 JumpIfNotEqual {560}
	558 Move X0, X8
	559 Call 0x1C17DFC
	560 Move X0, X23
	561 Move X1, X31
	562 Move X2, X31
	563 Call Object.op_Equality, X0, X1
	564 Move TEMP, X0
	565 And TEMP, TEMP, 1
	566 Compare TEMP, 1
	567 JumpIfNotEqual {601}
	568 Move W8, [X19+112]
	569 Compare W8, 0
	570 JumpIfEqual {600}
	571 Move X2, [X29]
	572 Move X0, X20
	573 Move W1, W22
	574 Call List`1<Object>.get_Item, X0, X1
	575 Compare X0, 0
	576 JumpIfEqual {1137}
	577 Move X0, [X0+16]
	578 Compare X0, 0
	579 JumpIfEqual {1137}
	580 Move X1, X31
	581 Call Object.get_name, X0
	582 Move X9, 0x22D0000
	583 Move X8, [X28]
	584 Move X9, [X9+2976]
	585 Move X1, X0
	586 Move X3, X31
	587 Move X0, X8
	588 Move X2, [X9]
	589 Call String.Concat, X0, X1, X2
	590 Move X8, [X26]
	591 Move X23, X0
	592 Move W9, [X8+224]
	593 Compare W9, 0
	594 JumpIfNotEqual {597}
	595 Move X0, X8
	596 Call 0x1C17DFC
	597 Move X0, X23
	598 Move X1, X31
	599 Call Debug.LogError, X0
	600 Move W24, W31
	601 Move X2, [X29]
	602 Move X0, X20
	603 Move W1, W22
	604 Call List`1<Object>.get_Item, X0, X1
	605 Compare X0, 0
	606 JumpIfEqual {1137}
	607 Move X8, [X27]
	608 Move X23, [X0+24]
	609 Move W9, [X8+224]
	610 Compare W9, 0
	611 JumpIfNotEqual {614}
	612 Move X0, X8
	613 Call 0x1C17DFC
	614 Move X0, X23
	615 Move X1, X31
	616 Move X2, X31
	617 Call Object.op_Inequality, X0, X1
	618 Move TEMP, X0
	619 And TEMP, TEMP, 1
	620 Compare TEMP, 1
	621 JumpIfNotEqual {681}
	622 Move X2, [X29]
	623 Move X0, X20
	624 Move W1, W22
	625 Call List`1<Object>.get_Item, X0, X1
	626 Compare X0, 0
	627 JumpIfEqual {1137}
	628 Move X0, [X0+24]
	629 Compare X0, 0
	630 JumpIfEqual {1137}
	631 Move X1, X31
	632 Call MeshFilter.get_sharedMesh, X0
	633 Move X8, [X27]
	634 Move X23, X0
	635 Move W9, [X8+224]
	636 Compare W9, 0
	637 JumpIfNotEqual {640}
	638 Move X0, X8
	639 Call 0x1C17DFC
	640 Move X0, X23
	641 Move X1, X31
	642 Move X2, X31
	643 Call Object.op_Equality, X0, X1
	644 Move TEMP, X0
	645 And TEMP, TEMP, 1
	646 Compare TEMP, 1
	647 JumpIfNotEqual {681}
	648 Move W8, [X19+112]
	649 Compare W8, 0
	650 JumpIfEqual {680}
	651 Move X2, [X29]
	652 Move X0, X20
	653 Move W1, W22
	654 Call List`1<Object>.get_Item, X0, X1
	655 Compare X0, 0
	656 JumpIfEqual {1137}
	657 Move X0, [X0+16]
	658 Compare X0, 0
	659 JumpIfEqual {1137}
	660 Move X1, X31
	661 Call Object.get_name, X0
	662 Move X9, 0x22D0000
	663 Move X8, [X28]
	664 Move X9, [X9+2984]
	665 Move X1, X0
	666 Move X3, X31
	667 Move X0, X8
	668 Move X2, [X9]
	669 Call String.Concat, X0, X1, X2
	670 Move X8, [X26]
	671 Move X23, X0
	672 Move W9, [X8+224]
	673 Compare W9, 0
	674 JumpIfNotEqual {677}
	675 Move X0, X8
	676 Call 0x1C17DFC
	677 Move X0, X23
	678 Move X1, X31
	679 Call Debug.LogError, X0
	680 Move W24, W31
	681 Move X2, [X29]
	682 Move X0, X20
	683 Move W1, W22
	684 Call List`1<Object>.get_Item, X0, X1
	685 Compare X0, 0
	686 JumpIfEqual {1137}
	687 Move X8, [X27]
	688 Move X23, [X0+24]
	689 Move W9, [X8+224]
	690 Compare W9, 0
	691 JumpIfNotEqual {694}
	692 Move X0, X8
	693 Call 0x1C17DFC
	694 Move X0, X23
	695 Move X1, X31
	696 Move X2, X31
	697 Call Object.op_Inequality, X0, X1
	698 Move TEMP, X0
	699 And TEMP, TEMP, 1
	700 Compare TEMP, 1
	701 JumpIfNotEqual {882}
	702 Move X2, [X29]
	703 Move X0, X20
	704 Move W1, W22
	705 Call List`1<Object>.get_Item, X0, X1
	706 Compare X0, 0
	707 JumpIfEqual {1137}
	708 Move X8, [X27]
	709 Move X23, [X0+32]
	710 Move W9, [X8+224]
	711 Compare W9, 0
	712 JumpIfNotEqual {715}
	713 Move X0, X8
	714 Call 0x1C17DFC
	715 Move X0, X23
	716 Move X1, X31
	717 Move X2, X31
	718 Call Object.op_Inequality, X0, X1
	719 Move TEMP, X0
	720 And TEMP, TEMP, 1
	721 Compare TEMP, 1
	722 JumpIfNotEqual {882}
	723 Move X2, [X29]
	724 Move X0, X20
	725 Move W1, W22
	726 Call List`1<Object>.get_Item, X0, X1
	727 Compare X0, 0
	728 JumpIfEqual {1137}
	729 Move X0, [X0+24]
	730 Compare X0, 0
	731 JumpIfEqual {1137}
	732 Move X1, X31
	733 Call MeshFilter.get_sharedMesh, X0
	734 Move X8, [X27]
	735 Move X23, X0
	736 Move W9, [X8+224]
	737 Compare W9, 0
	738 JumpIfNotEqual {741}
	739 Move X0, X8
	740 Call 0x1C17DFC
	741 Move X0, X23
	742 Move X1, X31
	743 Move X2, X31
	744 Call Object.op_Inequality, X0, X1
	745 Move TEMP, X0
	746 And TEMP, TEMP, 1
	747 Compare TEMP, 1
	748 JumpIfNotEqual {882}
	749 Move X2, [X29]
	750 Move X0, X20
	751 Move W1, W22
	752 Call List`1<Object>.get_Item, X0, X1
	753 Compare X0, 0
	754 JumpIfEqual {1137}
	755 Move X0, [X0+24]
	756 Compare X0, 0
	757 JumpIfEqual {1137}
	758 Move X1, X31
	759 Call MeshFilter.get_sharedMesh, X0
	760 Compare X0, 0
	761 JumpIfEqual {1137}
	762 Move X1, X31
	763 Call Mesh.get_subMeshCount, X0
	764 Move X2, [X29]
	765 Move W23, W0
	766 Move X0, X20
	767 Move W1, W22
	768 Call List`1<Object>.get_Item, X0, X1
	769 Compare X0, 0
	770 JumpIfEqual {1137}
	771 Move X0, [X0+32]
	772 Compare X0, 0
	773 JumpIfEqual {1137}
	774 Move X1, X31
	775 Call Renderer.get_sharedMaterials, X0
	776 Compare X0, 0
	777 JumpIfEqual {1137}
	778 Move W8, [X0+24]
	779 NotImplemented "Instruction CMP not yet implemented."
	780 Move W8, [X19+112]
	781 Compare W8, 0
	782 JumpIfEqual {881}
	783 Move X0, [X25]
	784 Move W1, 7
	785 Call 0x1C17D6C
	786 Compare X0, 0
	787 JumpIfEqual {1137}
	788 Move W8, [X0+24]
	789 Move X23, X0
	790 Compare W8, 0
	791 JumpIfEqual {1138}
	792 Move X8, 0x22D0000
	793 Move X8, [X8+2960]
	794 Move X0, X20
	795 Move W1, W22
	796 Move X8, [X8]
	797 Move [X23+32], X8
	798 Move X2, [X29]
	799 Call List`1<Object>.get_Item, X0, X1
	800 Compare X0, 0
	801 JumpIfEqual {1137}
	802 Move X0, [X0+16]
	803 Compare X0, 0
	804 JumpIfEqual {1137}
	805 Move X1, X31
	806 Call Object.get_name, X0
	807 Move W8, [X23+24]
	808 NotImplemented "Instruction CMP not yet implemented."
	809 NotImplemented "Instruction CMP not yet implemented."
	810 Move [X23+40], X0
	811 Move X8, 0x22D0000
	812 Move X8, [X8+2968]
	813 Move X0, X20
	814 Move W1, W22
	815 Move X8, [X8]
	816 Move [X23+48], X8
	817 Move X2, [X29]
	818 Call List`1<Object>.get_Item, X0, X1
	819 Compare X0, 0
	820 JumpIfEqual {1137}
	821 Move X0, [X0+24]
	822 Compare X0, 0
	823 JumpIfEqual {1137}
	824 Move X1, X31
	825 Call MeshFilter.get_sharedMesh, X0
	826 Compare X0, 0
	827 JumpIfEqual {1137}
	828 Move X1, X31
	829 Call Mesh.get_subMeshCount, X0
	830 Move [X31+12], W0
	831 Add X0, X31, 12
	832 Move X1, X31
	833 Call Int32.ToString, X0
	834 Move W8, [X23+24]
	835 NotImplemented "Instruction CMP not yet implemented."
	836 NotImplemented "Instruction CMP not yet implemented."
	837 Move [X23+56], X0
	838 Move X8, 0x22D0000
	839 Move X8, [X8+2992]
	840 Move X0, X20
	841 Move W1, W22
	842 Move X8, [X8]
	843 Move [X23+64], X8
	844 Move X2, [X29]
	845 Call List`1<Object>.get_Item, X0, X1
	846 Compare X0, 0
	847 JumpIfEqual {1137}
	848 Move X0, [X0+32]
	849 Compare X0, 0
	850 JumpIfEqual {1137}
	851 Move X1, X31
	852 Call Renderer.get_sharedMaterials, X0
	853 Compare X0, 0
	854 JumpIfEqual {1137}
	855 Move X8, [X0+24]
	856 Add X0, X31, 12
	857 Move X1, X31
	858 Move [X31+12], W8
	859 Call Int32.ToString, X0
	860 Move W8, [X23+24]
	861 NotImplemented "Instruction CMP not yet implemented."
	862 NotImplemented "Instruction CMP not yet implemented."
	863 Move [X23+72], X0
	864 Move X8, 0x22D0000
	865 Move X8, [X8+3048]
	866 Move X0, X23
	867 Move X1, X31
	868 Move X8, [X8]
	869 Move [X23+80], X8
	870 Call String.Concat, X0
	871 Move X8, [X26]
	872 Move X23, X0
	873 Move W9, [X8+224]
	874 Compare W9, 0
	875 JumpIfNotEqual {878}
	876 Move X0, X8
	877 Call 0x1C17DFC
	878 Move X0, X23
	879 Move X1, X31
	880 Call Debug.LogError, X0
	881 Move W24, W31
	882 Move X2, [X29]
	883 Move X0, X20
	884 Move W1, W22
	885 Call List`1<Object>.get_Item, X0, X1
	886 Compare X0, 0
	887 JumpIfEqual {1137}
	888 Move X8, [X27]
	889 Move X23, [X0+32]
	890 Move W9, [X8+224]
	891 Compare W9, 0
	892 JumpIfNotEqual {895}
	893 Move X0, X8
	894 Call 0x1C17DFC
	895 Move X0, X23
	896 Move X1, X31
	897 Move X2, X31
	898 Call Object.op_Inequality, X0, X1
	899 Move TEMP, X0
	900 And TEMP, TEMP, 1
	901 Compare TEMP, 1
	902 JumpIfNotEqual {1021}
	903 Move X2, [X29]
	904 Move X0, X20
	905 Move W1, W22
	906 Move [X31+8], W31
	907 Call List`1<Object>.get_Item, X0, X1
	908 Compare X0, 0
	909 JumpIfEqual {1137}
	910 Move W23, W31
	911 Move X0, [X0+32]
	912 Compare X0, 0
	913 JumpIfEqual {1137}
	914 Move X1, X31
	915 Call Renderer.get_sharedMaterials, X0
	916 Compare X0, 0
	917 JumpIfEqual {1137}
	918 Move W8, [X0+24]
	919 NotImplemented "Instruction CMP not yet implemented."
	920 Move X2, [X29]
	921 Move X0, X20
	922 Move W1, W22
	923 Call List`1<Object>.get_Item, X0, X1
	924 Compare X0, 0
	925 JumpIfEqual {1137}
	926 Move X0, [X0+32]
	927 Compare X0, 0
	928 JumpIfEqual {1137}
	929 Move X1, X31
	930 Call Renderer.get_sharedMaterials, X0
	931 Compare X0, 0
	932 JumpIfEqual {1137}
	933 NotImplemented "Instruction LDRSW not yet implemented."
	934 Move W8, [X0+24]
	935 NotImplemented "Instruction CMP not yet implemented."
	936 Move X8, [X27]
	937 Add X9, X0, X9
	938 Move X23, [X9+32]
	939 Move W10, [X8+224]
	940 Compare W10, 0
	941 JumpIfNotEqual {944}
	942 Move X0, X8
	943 Call 0x1C17DFC
	944 Move X0, X23
	945 Move X1, X31
	946 Move X2, X31
	947 Call Object.op_Equality, X0, X1
	948 Move TEMP, X0
	949 And TEMP, TEMP, 1
	950 Compare TEMP, 1
	951 JumpIfNotEqual {1012}
	952 Move W8, [X19+112]
	953 Compare W8, 0
	954 JumpIfEqual {1011}
	955 Move X0, [X25]
	956 Move W1, 5
	957 Call 0x1C17D6C
	958 Compare X0, 0
	959 JumpIfEqual {1137}
	960 Move W8, [X0+24]
	961 Move X23, X0
	962 Compare W8, 0
	963 JumpIfEqual {1138}
	964 Move X8, 0x22D0000
	965 Move X8, [X8+3008]
	966 Add X0, X31, 8
	967 Move X1, X31
	968 Move X8, [X8]
	969 Move [X23+32], X8
	970 Call Int32.ToString, X0
	971 Move W8, [X23+24]
	972 NotImplemented "Instruction CMP not yet implemented."
	973 NotImplemented "Instruction CMP not yet implemented."
	974 Move [X23+40], X0
	975 Move X8, 0x22D0000
	976 Move X8, [X8+3040]
	977 Move X0, X20
	978 Move W1, W22
	979 Move X8, [X8]
	980 Move [X23+48], X8
	981 Move X2, [X29]
	982 Call List`1<Object>.get_Item, X0, X1
	983 Compare X0, 0
	984 JumpIfEqual {1137}
	985 Move X0, [X0+16]
	986 Compare X0, 0
	987 JumpIfEqual {1137}
	988 Move X1, X31
	989 Call Object.get_name, X0
	990 Move W8, [X23+24]
	991 NotImplemented "Instruction CMP not yet implemented."
	992 NotImplemented "Instruction CMP not yet implemented."
	993 Move [X23+56], X0
	994 Move X8, 0x22D0000
	995 Move X8, [X8+3000]
	996 Move X0, X23
	997 Move X1, X31
	998 Move X8, [X8]
	999 Move [X23+64], X8
	1000 Call String.Concat, X0
	1001 Move X8, [X26]
	1002 Move X23, X0
	1003 Move W9, [X8+224]
	1004 Compare W9, 0
	1005 JumpIfNotEqual {1008}
	1006 Move X0, X8
	1007 Call 0x1C17DFC
	1008 Move X0, X23
	1009 Move X1, X31
	1010 Call Debug.LogError, X0
	1011 Move W24, W31
	1012 Move W8, [X31+8]
	1013 Move X2, [X29]
	1014 Move X0, X20
	1015 Move W1, W22
	1016 Add W23, W8, 1
	1017 Move [X31+8], W23
	1018 Call List`1<Object>.get_Item, X0, X1
	1019 Compare X0, 0
	1020 JumpIfNotEqual {911}
	1021 Move X2, [X29]
	1022 Move X0, X20
	1023 Move W1, W22
	1024 Call List`1<Object>.get_Item, X0, X1
	1025 Compare X0, 0
	1026 JumpIfEqual {1137}
	1027 Move X0, [X0+16]
	1028 Compare X0, 0
	1029 JumpIfEqual {1137}
	1030 Move X8, 0x22D0000
	1031 Move X8, [X8+2896]
	1032 Move X1, [X8]
	1033 Call 0x21E62E4, X0
	1034 Move X8, [X27]
	1035 Move X23, X0
	1036 Move W9, [X8+224]
	1037 Compare W9, 0
	1038 JumpIfNotEqual {1041}
	1039 Move X0, X8
	1040 Call 0x1C17DFC
	1041 Move X0, X23
	1042 Move X1, X31
	1043 Move X2, X31
	1044 Call Object.op_Inequality, X0, X1
	1045 Move TEMP, X0
	1046 And TEMP, TEMP, 1
	1047 Compare TEMP, 1
	1048 JumpIfNotEqual {1081}
	1049 Move W8, [X19+112]
	1050 Compare W8, 0
	1051 JumpIfEqual {1113}
	1052 Move X2, [X29]
	1053 Move X0, X20
	1054 Move W1, W22
	1055 Call List`1<Object>.get_Item, X0, X1
	1056 Compare X0, 0
	1057 JumpIfEqual {1137}
	1058 Move X0, [X0+16]
	1059 Compare X0, 0
	1060 JumpIfEqual {1137}
	1061 Move X1, X31
	1062 Call Object.get_name, X0
	1063 Move X9, 0x22D0000
	1064 Move X8, [X28]
	1065 Move X9, [X9+3032]
	1066 Move X1, X0
	1067 Move X3, X31
	1068 Move X0, X8
	1069 Move X2, [X9]
	1070 Call String.Concat, X0, X1, X2
	1071 Move X8, [X26]
	1072 Move X23, X0
	1073 Move W9, [X8+224]
	1074 Compare W9, 0
	1075 JumpIfNotEqual {1078}
	1076 Move X0, X8
	1077 Call 0x1C17DFC
	1078 Move X0, X23
	1079 Move X1, X31
	1080 Call Debug.LogError, X0
	1081 Move TEMP, X24
	1082 And TEMP, TEMP, 1
	1083 Compare TEMP, 1
	1084 JumpIfNotEqual {1113}
	1085 Move X2, [X29]
	1086 Move X0, X20
	1087 Move W1, W22
	1088 Call List`1<Object>.get_Item, X0, X1
	1089 Compare X21, 0
	1090 JumpIfEqual {1137}
	1091 Move X9, 0x22D0000
	1092 Move W10, [X21+28]
	1093 Move X8, [X21+16]
	1094 Move X9, [X9+2912]
	1095 Add W10, W10, 1
	1096 Move X9, [X9]
	1097 Move [X21+28], W10
	1098 Compare X8, 0
	1099 JumpIfEqual {1137}
	1100 NotImplemented "Instruction LDRSW not yet implemented."
	1101 Move W11, [X8+24]
	1102 Move X1, X0
	1103 NotImplemented "Instruction CMP not yet implemented."
	1104 Add W9, W10, 1
	1105 Add X8, X8, X10
	1106 Move [X21+24], W9
	1107 Move [X8+32], X1
	1108 Move X8, [X9+32]
	1109 Move X0, X21
	1110 Move X8, [X8+192]
	1111 Move X2, [X8+112]
	1112 Call List`1<Object>.AddWithResize, X0, X1
	1113 Move W8, [X20+24]
	1114 Add W22, W22, 1
	1115 NotImplemented "Instruction CMP not yet implemented."
	1116 Compare X21, 0
	1117 JumpIfEqual {1137}
	1118 Move X8, 0x22D0000
	1119 Move X8, [X8+2920]
	1120 Move X0, X21
	1121 Move X1, [X8]
	1122 Call List`1<Object>.ToArray, X0
	1123 Move X20, [X31+96]
	1124 Move X19, [X31+104]
	1125 Move X22, [X31+80]
	1126 Move X21, [X31+88]
	1127 Move X24, [X31+64]
	1128 Move X23, [X31+72]
	1129 Move X26, [X31+48]
	1130 Move X25, [X31+56]
	1131 Move X28, [X31+32]
	1132 Move X27, [X31+40]
	1133 Move X29, [X31+16]
	1134 Move X30, [X31+24]
	1135 Add X31, X31, 112
	1136 Return X0
	1137 Call 0x1C17F20
	1138 Call 0x1C17F28

Method: System.Boolean CombineMeshes()

Disassembly:
	0x01E292CC ADRP X8, 0x22D1000
	0x01E292D0 LDR X8, [X8 + 0xAC8]
	0x01E292D4 LDR X0, [X8]
	0x01E292D8 BL 0x1C16F10
	0x01E292DC ADRP X8, 0x22D1000
	0x01E292E0 LDR X8, [X8 + 0xAA0]
	0x01E292E4 MOV X23, X0
	0x01E292E8 LDR X1, [X8]
	0x01E292EC BL 0x301B7C4
	0x01E292F0 ADRP X8, 0x22D1000
	0x01E292F4 LDR X8, [X8 + 0x9F8]
	0x01E292F8 MOV X0, X21
	0x01E292FC LDR X1, [X8]
	0x01E29300 ADD X8, X31, 0x28
	0x01E29304 BL 0x2AA54BC
	0x01E29308 LDUR V0, [X31 + 0x28]
	0x01E2930C LDUR V1, [X31 + 0x38]
	0x01E29310 LDR X8, [X31 + 0x48]
	0x01E29314 ADRP X19, 0x22D1000
	0x01E29318 STP V0, V1, [X29 + 0x180]
	0x01E2931C STR X8, [X31 + 0x230]
	0x01E29320 LDR X19, [X19 + 0xA70]
	0x01E29324 LDR X1, [X20]
	0x01E29328 ADD X0, X31, 0x210
	0x01E2932C BL 0x2C0A728
	0x01E29330 TBZ X0, 0x0, 0x1E29390
	0x01E29334 CBZ X23, 0x1E29788
	0x01E29338 LDR W10, [X23 + 0x1C]
	0x01E2933C LDR X1, [X31 + 0x220]
	0x01E29340 LDR X8, [X23 + 0x10]
	0x01E29344 LDR X9, [X19]
	0x01E29348 ADD W10, W10, 0x1
	0x01E2934C STR W10, [X23 + 0x1C]
	0x01E29350 CBZ X8, 0x1E2978C
	0x01E29354 LDRSW X10, [X23 + 0x18]
	0x01E29358 LDR W11, [X8 + 0x18]
	0x01E2935C CMP W10, W11
	0x01E29360 B.CS 0x1E29378
	0x01E29364 ADD W9, W10, 0x1
	0x01E29368 ADD X8, X8, X10, 0x3, LSL
	0x01E2936C STR W9, [X23 + 0x18]
	0x01E29370 STR X1, [X8 + 0x20]
	0x01E29374 B 0x1E29324
	0x01E29378 LDR X8, [X9 + 0x20]
	0x01E2937C LDR X8, [X8 + 0xC0]
	0x01E29380 LDR X2, [X8 + 0x70]
	0x01E29384 MOV X0, X23
	0x01E29388 BL 0x301BF90
	0x01E2938C B 0x1E29324
	0x01E29390 ADRP X8, 0x22D1000
	0x01E29394 LDR X8, [X8 + 0xA20]
	0x01E29398 ADD X0, X31, 0x210
	0x01E2939C LDR X1, [X8]
	0x01E293A0 BL 0x2C0A83C
	0x01E293A4 CBZ X23, 0x1E29764
	0x01E293A8 ADRP X8, 0x22D1000
	0x01E293AC LDR X8, [X8 + 0xA88]
	0x01E293B0 MOV X0, X23
	0x01E293B4 LDR X1, [X8]
	0x01E293B8 BL 0x301DDC4
	0x01E293BC MOV X1, X0
	0x01E293C0 LDR X21, [X31 + 0x20]
	0x01E293C4 LDR X0, [X31 + 0x10]
	0x01E293C8 CBZ X0, 0x1E29764
	0x01E293CC MOV X2, X31
	0x01E293D0 BL 0x3C13558
	0x01E293D4 LDR W8, [X21 + 0x54]
	0x01E293D8 LDR X9, [X31 + 0x18]
	0x01E293DC CMP W8, 0x1
	0x01E293E0 B.NE 0x1E29530
	0x01E293E4 LDR W8, [X9 + 0x18]
	0x01E293E8 CMP W8, 0x1
	0x01E293EC B.LT 0x1E29500
	0x01E293F0 ADRP X27, 0x22D1000
	0x01E293F4 ADRP X28, 0x22D1000
	0x01E293F8 LDR X27, [X27 + 0xAE8]
	0x01E293FC LDR X28, [X28 + 0xA68]
	0x01E29400 MOV X19, X31
	0x01E29404 ADD X20, X9, 0x20
	0x01E29408 CMP W19, W8
	0x01E2940C B.CS 0x1E29768
	0x01E29410 LDR X29, [X20, X19, LSL #3]
	0x01E29414 CBZ X29, 0x1E29764
	0x01E29418 LDR X23, [X29 + 0x10]
	0x01E2941C CBZ X23, 0x1E29764
	0x01E29420 LDR X21, [X21 + 0x48]
	0x01E29424 MOV X0, X23
	0x01E29428 MOV X1, X31
	0x01E2942C BL 0x3C357F8
	0x01E29430 LDR X24, [X29 + 0x20]
	0x01E29434 CBZ X24, 0x1E29764
	0x01E29438 MOV W25, W0
	0x01E2943C MOV X0, X24
	0x01E29440 MOV X1, X31
	0x01E29444 BL 0x3C12FF8
	0x01E29448 LDR X8, [X27]
	0x01E2944C MOV W26, W0
	0x01E29450 MOV X0, X8
	0x01E29454 BL 0x1C16F10
	0x01E29458 MOV X1, X31
	0x01E2945C MOV X22, X0
	0x01E29460 AND W25, W25, 0x1
	0x01E29464 AND W26, W26, 0x1
	0x01E29468 BL 0x33BDD8C
	0x01E2946C STR X23, [X22 + 0x10]
	0x01E29470 STRB W25, [X22 + 0x18]
	0x01E29474 STR X24, [X22 + 0x20]
	0x01E29478 STRB W26, [X22 + 0x28]
	0x01E2947C CBZ X21, 0x1E29764
	0x01E29480 LDR W10, [X21 + 0x1C]
	0x01E29484 LDR X8, [X21 + 0x10]
	0x01E29488 LDR X9, [X28]
	0x01E2948C ADD W10, W10, 0x1
	0x01E29490 STR W10, [X21 + 0x1C]
	0x01E29494 CBZ X8, 0x1E29764
	0x01E29498 LDRSW X10, [X21 + 0x18]
	0x01E2949C LDR W11, [X8 + 0x18]
	0x01E294A0 CMP W10, W11
	0x01E294A4 B.CS 0x1E294BC
	0x01E294A8 ADD W9, W10, 0x1
	0x01E294AC ADD X8, X8, X10, 0x3, LSL
	0x01E294B0 STR W9, [X21 + 0x18]
	0x01E294B4 STR X22, [X8 + 0x20]
	0x01E294B8 B 0x1E294D4
	0x01E294BC LDR X8, [X9 + 0x20]
	0x01E294C0 MOV X0, X21
	0x01E294C4 MOV X1, X22
	0x01E294C8 LDR X8, [X8 + 0xC0]
	0x01E294CC LDR X2, [X8 + 0x70]
	0x01E294D0 BL 0x301BF90
	0x01E294D4 LDR X0, [X29 + 0x10]
	0x01E294D8 LDR X21, [X31 + 0x20]
	0x01E294DC CBZ X0, 0x1E29764
	0x01E294E0 MOV W1, W31
	0x01E294E4 MOV X2, X31
	0x01E294E8 BL 0x3C357B4
	0x01E294EC LDR X9, [X31 + 0x18]
	0x01E294F0 ADD X19, X19, 0x1
	0x01E294F4 LDR W8, [X9 + 0x18]
	0x01E294F8 CMP W19, W8
	0x01E294FC B.LT 0x1E29408
	0x01E29500 LDRB W8, [X21 + 0x58]
	0x01E29504 CBZ W8, 0x1E2952C
	0x01E29508 MOV X0, X21
	0x01E2950C MOV X1, X31
	0x01E29510 BL 0x3C32ECC
	0x01E29514 CBZ X0, 0x1E29764
	0x01E29518 ADRP X8, 0x22CC000
	0x01E2951C LDR X8, [X8 + 0x160]
	0x01E29520 LDR X1, [X8]
	0x01E29524 BL 0x21E51FC
	0x01E29528 LDR X9, [X31 + 0x18]
	0x01E2952C LDR W8, [X21 + 0x54]
	0x01E29530 CBNZ W8, 0x1E29650
	0x01E29534 LDR W8, [X9 + 0x18]
	0x01E29538 CMP W8, 0x1
	0x01E2953C B.LT 0x1E29650
	0x01E29540 ADRP X27, 0x22D1000
	0x01E29544 ADRP X28, 0x22D1000
	0x01E29548 LDR X27, [X27 + 0xAE8]
	0x01E2954C LDR X28, [X28 + 0xA68]
	0x01E29550 MOV X19, X31
	0x01E29554 ADD X20, X9, 0x20
	0x01E29558 CMP W19, W8
	0x01E2955C B.CS 0x1E29768
	0x01E29560 LDR X29, [X20, X19, LSL #3]
	0x01E29564 CBZ X29, 0x1E29764
	0x01E29568 LDR X23, [X29 + 0x10]
	0x01E2956C CBZ X23, 0x1E29764
	0x01E29570 LDR X21, [X21 + 0x48]
	0x01E29574 MOV X0, X23
	0x01E29578 MOV X1, X31
	0x01E2957C BL 0x3C357F8
	0x01E29580 LDR X24, [X29 + 0x20]
	0x01E29584 CBZ X24, 0x1E29764
	0x01E29588 MOV W25, W0
	0x01E2958C MOV X0, X24
	0x01E29590 MOV X1, X31
	0x01E29594 BL 0x3C12FF8
	0x01E29598 LDR X8, [X27]
	0x01E2959C MOV W26, W0
	0x01E295A0 MOV X0, X8
	0x01E295A4 BL 0x1C16F10
	0x01E295A8 MOV X1, X31
	0x01E295AC MOV X22, X0
	0x01E295B0 AND W25, W25, 0x1
	0x01E295B4 AND W26, W26, 0x1
	0x01E295B8 BL 0x33BDD8C
	0x01E295BC STR X23, [X22 + 0x10]
	0x01E295C0 STRB W25, [X22 + 0x18]
	0x01E295C4 STR X24, [X22 + 0x20]
	0x01E295C8 STRB W26, [X22 + 0x28]
	0x01E295CC CBZ X21, 0x1E29764
	0x01E295D0 LDR W10, [X21 + 0x1C]
	0x01E295D4 LDR X8, [X21 + 0x10]
	0x01E295D8 LDR X9, [X28]
	0x01E295DC ADD W10, W10, 0x1
	0x01E295E0 STR W10, [X21 + 0x1C]
	0x01E295E4 CBZ X8, 0x1E29764
	0x01E295E8 LDRSW X10, [X21 + 0x18]
	0x01E295EC LDR W11, [X8 + 0x18]
	0x01E295F0 CMP W10, W11
	0x01E295F4 B.CS 0x1E2960C
	0x01E295F8 ADD W9, W10, 0x1
	0x01E295FC ADD X8, X8, X10, 0x3, LSL
	0x01E29600 STR W9, [X21 + 0x18]
	0x01E29604 STR X22, [X8 + 0x20]
	0x01E29608 B 0x1E29624
	0x01E2960C LDR X8, [X9 + 0x20]
	0x01E29610 MOV X0, X21
	0x01E29614 MOV X1, X22
	0x01E29618 LDR X8, [X8 + 0xC0]
	0x01E2961C LDR X2, [X8 + 0x70]
	0x01E29620 BL 0x301BF90
	0x01E29624 LDR X0, [X29 + 0x20]
	0x01E29628 LDR X21, [X31 + 0x20]
	0x01E2962C CBZ X0, 0x1E29764
	0x01E29630 MOV W1, W31
	0x01E29634 MOV X2, X31
	0x01E29638 BL 0x3C13034
	0x01E2963C LDR X8, [X31 + 0x18]
	0x01E29640 ADD X19, X19, 0x1
	0x01E29644 LDR W8, [X8 + 0x18]
	0x01E29648 CMP W19, W8
	0x01E2964C B.LT 0x1E29558
	0x01E29650 MOV X0, X21
	0x01E29654 MOV X1, X31
	0x01E29658 BL 0x3C32ECC
	0x01E2965C CBZ X0, 0x1E29764
	0x01E29660 MOV X1, X31
	0x01E29664 BL 0x3C356F8
	0x01E29668 CBZ X0, 0x1E29764
	0x01E2966C LDP S1, S2, [X21 + 0x28]
	0x01E29670 LDR V0, [X21 + 0x24]
	0x01E29674 MOV X1, X31
	0x01E29678 BL 0x3C3F62C
	0x01E2967C MOV X0, X21
	0x01E29680 MOV X1, X31
	0x01E29684 BL 0x3C32ECC
	0x01E29688 CBZ X0, 0x1E29764
	0x01E2968C MOV X1, X31
	0x01E29690 BL 0x3C356F8
	0x01E29694 CBZ X0, 0x1E29764
	0x01E29698 LDP S1, S2, [X21 + 0x34]
	0x01E2969C LDR V0, [X21 + 0x30]
	0x01E296A0 MOV X1, X31
	0x01E296A4 BL 0x3C3F77C
	0x01E296A8 MOV X0, X21
	0x01E296AC MOV X1, X31
	0x01E296B0 BL 0x3C32ECC
	0x01E296B4 CBZ X0, 0x1E29764
	0x01E296B8 MOV X1, X31
	0x01E296BC BL 0x3C356F8
	0x01E296C0 CBZ X0, 0x1E29764
	0x01E296C4 LDP S1, S2, [X21 + 0x40]
	0x01E296C8 LDR V0, [X21 + 0x3C]
	0x01E296CC MOV X1, X31
	0x01E296D0 BL 0x3C3FC4C
	0x01E296D4 LDRB W8, [X21 + 0x70]
	0x01E296D8 CBZ W8, 0x1E29748
	0x01E296DC MOV X0, X21
	0x01E296E0 MOV X1, X31
	0x01E296E4 BL 0x3C32ECC
	0x01E296E8 CBZ X0, 0x1E29764
	0x01E296EC MOV X1, X31
	0x01E296F0 BL 0x3C389D4
	0x01E296F4 ADRP X8, 0x22D1000
	0x01E296F8 LDR X8, [X8 + 0xB00]
	0x01E296FC ADRP X9, 0x22D1000
	0x01E29700 LDR X9, [X9 + 0xB20]
	0x01E29704 MOV X1, X0
	0x01E29708 LDR X8, [X8]
	0x01E2970C MOV X3, X31
	0x01E29710 LDR X2, [X9]
	0x01E29714 MOV X0, X8
	0x01E29718 BL 0x32274B8
	0x01E2971C ADRP X8, 0x22CA000
	0x01E29720 LDR X8, [X8 + 0xA28]
	0x01E29724 MOV X20, X0
	0x01E29728 LDR X8, [X8]
	0x01E2972C LDR W9, [X8 + 0xE0]
	0x01E29730 CBNZ W9, 0x1E2973C
	0x01E29734 MOV X0, X8
	0x01E29738 BL 0x1C16DFC
	0x01E2973C MOV X0, X20
	0x01E29740 MOV X1, X31
	0x01E29744 BL 0x3C06048
	0x01E29748 LDR X0, [X21 + 0x78]
	0x01E2974C CBZ X0, 0x1E29758
	0x01E29750 MOV X1, X31
	0x01E29754 BL 0x3C45DE8
	0x01E29758 MOVZ W0, 0x1
	0x01E2975C STRB W0, [X21 + 0x50]
	0x01E29760 B 0x1E2872C
	0x01E29764 BL 0x1C16F20
	0x01E29768 BL 0x1C16F28
	0x01E2976C BL 0x1C16F20
	0x01E29770 BL 0x1C16F20
	0x01E29774 BL 0x1C16F20
	0x01E29778 BL 0x1C16F20
	0x01E2977C BL 0x1C16F20
	0x01E29780 BL 0x1C16F20
	0x01E29784 BL 0x1C16F20
	0x01E29788 BL 0x1C16F20
	0x01E2978C BL 0x1C16F20
	0x01E29790 BL 0x1C16F20
	0x01E29794 BL 0x1C16F20
	0x01E29798 BL 0x1C16F20
	0x01E2979C BL 0x1C16F20
	0x01E297A0 BL 0x1C16F20
	0x01E297A4 BL 0x1C16F20
	0x01E297A8 BL 0x1C16F20
	0x01E297AC BL 0x1C16F20
	0x01E297B0 BL 0x1C16F20
	0x01E297B4 B 0x1E29804
	0x01E297B8 B 0x1E29908
	0x01E297BC B 0x1E29908
	0x01E297C0 B 0x1E29908
	0x01E297C4 B 0x1E29908
	0x01E297C8 B 0x1E29908
	0x01E297CC B 0x1E29804
	0x01E297D0 B 0x1E2986C
	0x01E297D4 B 0x1E29908
	0x01E297D8 B 0x1E29908
	0x01E297DC B 0x1E29908
	0x01E297E0 B 0x1E29804
	0x01E297E4 B 0x1E29908
	0x01E297E8 B 0x1E29804
	0x01E297EC B 0x1E2986C
	0x01E297F0 B 0x1E29908
	0x01E297F4 B 0x1E29908
	0x01E297F8 B 0x1E29908
	0x01E297FC B 0x1E29908
	0x01E29800 B 0x1E29804
	0x01E29804 MOV X24, X0
	0x01E29808 CMP W1, 0x1
	0x01E2980C B.NE 0x1E29840
	0x01E29810 MOV X0, X24
	0x01E29814 BL 0x3EB1AD0
	0x01E29818 LDR X26, [X0]
	0x01E2981C BL 0x3EB1AE0
	0x01E29820 ADRP X8, 0x22D1000
	0x01E29824 LDR X8, [X8 + 0xA18]
	0x01E29828 ADD X0, X31, 0x180
	0x01E2982C LDR X1, [X8]
	0x01E29830 BL 0x2BC434C
	0x01E29834 CBZ X26, 0x1E29188
	0x01E29838 MOV X0, X26
	0x01E2983C BL 0x1C16F18
	0x01E29840 MOV X26, X31
	0x01E29844 B 0x1E2984C
	0x01E29848 MOV X24, X0
	0x01E2984C ADRP X8, 0x22D1000
	0x01E29850 LDR X8, [X8 + 0xA18]
	0x01E29854 LDR X1, [X8]
	0x01E29858 ADD X0, X31, 0x180
	0x01E2985C BL 0x2BC434C
	0x01E29860 CBZ X26, 0x1E29964
	0x01E29864 MOV X0, X26
	0x01E29868 BL 0x1C16F18
	0x01E2986C MOV X24, X0
	0x01E29870 CMP W1, 0x1
	0x01E29874 B.NE 0x1E298A8
	0x01E29878 MOV X0, X24
	0x01E2987C BL 0x3EB1AD0
	0x01E29880 LDR X21, [X0]
	0x01E29884 BL 0x3EB1AE0
	0x01E29888 ADRP X8, 0x22D1000
	0x01E2988C LDR X8, [X8 + 0xA20]
	0x01E29890 ADD X0, X31, 0x210
	0x01E29894 LDR X1, [X8]
	0x01E29898 BL 0x2C0A83C
	0x01E2989C CBZ X21, 0x1E293A4
	0x01E298A0 MOV X0, X21
	0x01E298A4 BL 0x1C16F18
	0x01E298A8 MOV X21, X31
	0x01E298AC B 0x1E298B4
	0x01E298B0 MOV X24, X0
	0x01E298B4 ADRP X8, 0x22D1000
	0x01E298B8 LDR X8, [X8 + 0xA20]
	0x01E298BC LDR X1, [X8]
	0x01E298C0 ADD X0, X31, 0x210
	0x01E298C4 BL 0x2C0A83C
	0x01E298C8 CBZ X21, 0x1E29964
	0x01E298CC MOV X0, X21
	0x01E298D0 BL 0x1C16F18
	0x01E298D4 B 0x1E29908
	0x01E298D8 B 0x1E29908
	0x01E298DC B 0x1E29908
	0x01E298E0 B 0x1E29908
	0x01E298E4 B 0x1E29908
	0x01E298E8 B 0x1E29908
	0x01E298EC B 0x1E29908
	0x01E298F0 B 0x1E29908
	0x01E298F4 B 0x1E29908
	0x01E298F8 B 0x1E29908
	0x01E298FC B 0x1E29908
	0x01E29900 B 0x1E29908
	0x01E29904 B 0x1E29908
	0x01E29908 CMP W1, 0x1
	0x01E2990C B.NE 0x1E2993C
	0x01E29910 BL 0x3EB1AD0
	0x01E29914 LDR X25, [X0]
	0x01E29918 BL 0x3EB1AE0
	0x01E2991C ADRP X8, 0x22D1000
	0x01E29920 LDR X8, [X8 + 0xA20]
	0x01E29924 ADD X0, X31, 0x210
	0x01E29928 LDR X1, [X8]
	0x01E2992C BL 0x2C0A83C
	0x01E29930 CBZ X25, 0x1E28FE8
	0x01E29934 MOV X0, X25
	0x01E29938 BL 0x1C16F18
	0x01E2993C MOV X24, X0
	0x01E29940 MOV X25, X31
	0x01E29944 B 0x1E2994C
	0x01E29948 MOV X24, X0
	0x01E2994C ADRP X8, 0x22D1000
	0x01E29950 LDR X8, [X8 + 0xA20]
	0x01E29954 LDR X1, [X8]
	0x01E29958 ADD X0, X31, 0x210
	0x01E2995C BL 0x2C0A83C
	0x01E29960 CBNZ X25, 0x1E2996C
	0x01E29964 MOV X0, X24
	0x01E29968 BL 0x1D2C690
	0x01E2996C MOV X0, X25
	0x01E29970 BL 0x1C16F18
	0x01E29974 BL 0x1990590
	0x01E29978 STR X30, [X31 - 0x20]!
	0x01E2997C STP X20, X19, [X31 + 0x10]
	0x01E29980 ADRP X20, 0x25AF000
	0x01E29984 LDRB W8, [X20 + 0xE5E]
	0x01E29988 MOV X19, X0
	0x01E2998C TBNZ X8, 0x0, 0x1E299BC
	0x01E29990 ADRP X0, 0x22CA000
	0x01E29994 LDR X0, [X0 + 0xA28]
	0x01E29998 BL 0x1C16CF4
	0x01E2999C ADRP X0, 0x22D1000
	0x01E299A0 LDR X0, [X0 + 0x9D8]
	0x01E299A4 BL 0x1C16CF4
	0x01E299A8 ADRP X0, 0x22D1000
	0x01E299AC LDR X0, [X0 + 0x9E0]
	0x01E299B0 BL 0x1C16CF4
	0x01E299B4 MOVZ W8, 0x1
	0x01E299B8 STRB W8, [X20 + 0xE5E]
	0x01E299BC LDR W8, [X19 + 0x5C]
	0x01E299C0 CMP W8, 0x1
	0x01E299C4 B.NE 0x1E29A4C
	0x01E299C8 LDRB W8, [X19 + 0x70]
	0x01E299CC CBZ W8, 0x1E29A3C
	0x01E299D0 MOV X0, X19
	0x01E299D4 MOV X1, X31
	0x01E299D8 BL 0x3C32ECC
	0x01E299DC CBZ X0, 0x1E29A58
	0x01E299E0 MOV X1, X31
	0x01E299E4 BL 0x3C389D4
	0x01E299E8 ADRP X8, 0x22D1000
	0x01E299EC LDR X8, [X8 + 0x9E0]
	0x01E299F0 ADRP X9, 0x22D1000
	0x01E299F4 LDR X9, [X9 + 0x9D8]
	0x01E299F8 MOV X1, X0
	0x01E299FC LDR X8, [X8]
	0x01E29A00 MOV X3, X31
	0x01E29A04 LDR X2, [X9]
	0x01E29A08 MOV X0, X8
	0x01E29A0C BL 0x32274B8
	0x01E29A10 ADRP X8, 0x22CA000
	0x01E29A14 LDR X8, [X8 + 0xA28]
	0x01E29A18 MOV X20, X0
	0x01E29A1C LDR X8, [X8]
	0x01E29A20 LDR W9, [X8 + 0xE0]
	0x01E29A24 CBNZ W9, 0x1E29A30
	0x01E29A28 MOV X0, X8
	0x01E29A2C BL 0x1C16DFC
	0x01E29A30 MOV X0, X20
	0x01E29A34 MOV X1, X31
	0x01E29A38 BL 0x3C06048
	0x01E29A3C MOV X0, X19
	0x01E29A40 LDP X20, X19, [X31 + 0x10]
	0x01E29A44 LDR X30, [X31], #0x20
	0x01E29A48 B 0x1E282CC
	0x01E29A4C LDP X20, X19, [X31 + 0x10]
	0x01E29A50 LDR X30, [X31], #0x20
	0x01E29A54 RET
	0x01E29A58 BL 0x1C16F20
	0x01E29A5C SUB X31, X31, 0x70
	0x01E29A60 STP X29, X30, [X31 + 0x10]
	0x01E29A64 STP X28, X27, [X31 + 0x20]
	0x01E29A68 STP X26, X25, [X31 + 0x30]
	0x01E29A6C STP X24, X23, [X31 + 0x40]
	0x01E29A70 STP X22, X21, [X31 + 0x50]
	0x01E29A74 STP X20, X19, [X31 + 0x60]
	0x01E29A78 ADRP X22, 0x25AF000
	0x01E29A7C ADRP X21, 0x22D1000
	0x01E29A80 ADRP X20, 0x22D1000
	0x01E29A84 LDRB W8, [X22 + 0xE5F]
	0x01E29A88 LDR X21, [X21 + 0x930]
	0x01E29A8C LDR X20, [X20 + 0x938]
	0x01E29A90 MOV X19, X0
	0x01E29A94 TBNZ X8, 0x0, 0x1E29C44
	0x01E29A98 ADRP X0, 0x22D1000
	0x01E29A9C LDR X0, [X0 + 0xB38]
	0x01E29AA0 BL 0x1C16CF4
	0x01E29AA4 ADRP X0, 0x22D1000
	0x01E29AA8 LDR X0, [X0 + 0xB40]
	0x01E29AAC BL 0x1C16CF4
	0x01E29AB0 ADRP X0, 0x22CA000
	0x01E29AB4 LDR X0, [X0 + 0xA28]
	0x01E29AB8 BL 0x1C16CF4
	0x01E29ABC ADRP X0, 0x22D1000
	0x01E29AC0 LDR X0, [X0 + 0xB48]
	0x01E29AC4 BL 0x1C16CF4
	0x01E29AC8 ADRP X0, 0x22D1000
	0x01E29ACC LDR X0, [X0 + 0xB50]
	0x01E29AD0 BL 0x1C16CF4
	0x01E29AD4 ADRP X0, 0x22D1000
	0x01E29AD8 LDR X0, [X0 + 0xB58]
	0x01E29ADC BL 0x1C16CF4
	0x01E29AE0 ADRP X0, 0x22D0000
	0x01E29AE4 LDR X0, [X0 + 0xFB0]
	0x01E29AE8 BL 0x1C16CF4
	0x01E29AEC ADRP X0, 0x22D1000
	0x01E29AF0 LDR X0, [X0 + 0x958]
	0x01E29AF4 BL 0x1C16CF4
	0x01E29AF8 ADRP X0, 0x22D1000
	0x01E29AFC LDR X0, [X0 + 0xB60]
	0x01E29B00 BL 0x1C16CF4
	0x01E29B04 ADRP X0, 0x22D1000
	0x01E29B08 LDR X0, [X0 + 0x960]
	0x01E29B0C BL 0x1C16CF4
	0x01E29B10 ADRP X0, 0x22D1000
	0x01E29B14 LDR X0, [X0 + 0xB68]
	0x01E29B18 BL 0x1C16CF4
	0x01E29B1C ADRP X0, 0x22D1000
	0x01E29B20 LDR X0, [X0 + 0xB70]
	0x01E29B24 BL 0x1C16CF4
	0x01E29B28 ADRP X0, 0x22D1000
	0x01E29B2C LDR X0, [X0 + 0x938]
	0x01E29B30 BL 0x1C16CF4
	0x01E29B34 ADRP X0, 0x22D0000
	0x01E29B38 LDR X0, [X0 + 0xCA0]
	0x01E29B3C BL 0x1C16CF4
	0x01E29B40 ADRP X0, 0x22D1000
	0x01E29B44 LDR X0, [X0 + 0xB78]
	0x01E29B48 BL 0x1C16CF4
	0x01E29B4C ADRP X0, 0x22D1000
	0x01E29B50 LDR X0, [X0 + 0x8B8]
	0x01E29B54 BL 0x1C16CF4
	0x01E29B58 ADRP X0, 0x22D1000
	0x01E29B5C LDR X0, [X0 + 0x8C0]
	0x01E29B60 BL 0x1C16CF4
	0x01E29B64 ADRP X0, 0x22D0000
	0x01E29B68 LDR X0, [X0 + 0xCA8]
	0x01E29B6C BL 0x1C16CF4
	0x01E29B70 ADRP X0, 0x22D1000
	0x01E29B74 LDR X0, [X0 + 0xB80]
	0x01E29B78 BL 0x1C16CF4
	0x01E29B7C ADRP X0, 0x22D1000
	0x01E29B80 LDR X0, [X0 + 0xB88]
	0x01E29B84 BL 0x1C16CF4
	0x01E29B88 ADRP X0, 0x22D1000
	0x01E29B8C LDR X0, [X0 + 0x930]
	0x01E29B90 BL 0x1C16CF4
	0x01E29B94 ADRP X0, 0x22CA000
	0x01E29B98 LDR X0, [X0 + 0x598]
	0x01E29B9C BL 0x1C16CF4
	0x01E29BA0 ADRP X0, 0x22CA000
	0x01E29BA4 LDR X0, [X0 + 0xAC8]
	0x01E29BA8 BL 0x1C16CF4
	0x01E29BAC ADRP X0, 0x22D1000
	0x01E29BB0 LDR X0, [X0 + 0xB90]
	0x01E29BB4 BL 0x1C16CF4
	0x01E29BB8 ADRP X0, 0x22D1000
	0x01E29BBC LDR X0, [X0 + 0xB98]
	0x01E29BC0 BL 0x1C16CF4
	0x01E29BC4 ADRP X0, 0x22D1000
	0x01E29BC8 LDR X0, [X0 + 0xBA0]
	0x01E29BCC BL 0x1C16CF4
	0x01E29BD0 ADRP X0, 0x22D1000
	0x01E29BD4 LDR X0, [X0 + 0xBA8]
	0x01E29BD8 BL 0x1C16CF4
	0x01E29BDC ADRP X0, 0x22D1000
	0x01E29BE0 LDR X0, [X0 + 0xBB0]
	0x01E29BE4 BL 0x1C16CF4
	0x01E29BE8 ADRP X0, 0x22D1000
	0x01E29BEC LDR X0, [X0 + 0xBB8]
	0x01E29BF0 BL 0x1C16CF4
	0x01E29BF4 ADRP X0, 0x22D1000
	0x01E29BF8 LDR X0, [X0 + 0xBC0]
	0x01E29BFC BL 0x1C16CF4
	0x01E29C00 ADRP X0, 0x22D1000
	0x01E29C04 LDR X0, [X0 + 0xBC8]
	0x01E29C08 BL 0x1C16CF4
	0x01E29C0C ADRP X0, 0x22D1000
	0x01E29C10 LDR X0, [X0 + 0xBD0]
	0x01E29C14 BL 0x1C16CF4
	0x01E29C18 ADRP X0, 0x22D1000
	0x01E29C1C LDR X0, [X0 + 0xBD8]
	0x01E29C20 BL 0x1C16CF4
	0x01E29C24 ADRP X0, 0x22D1000
	0x01E29C28 LDR X0, [X0 + 0xBE0]
	0x01E29C2C BL 0x1C16CF4
	0x01E29C30 ADRP X0, 0x22D1000
	0x01E29C34 LDR X0, [X0 + 0xBE8]
	0x01E29C38 BL 0x1C16CF4
	0x01E29C3C MOVZ W8, 0x1
	0x01E29C40 STRB W8, [X22 + 0xE5F]
	0x01E29C44 LDR X0, [X21]
	0x01E29C48 STR X31, [X31 + 0x8]
	0x01E29C4C BL 0x1C16F10
	0x01E29C50 LDR X1, [X20]
	0x01E29C54 MOV X21, X0
	0x01E29C58 BL 0x301B7C4
	0x01E29C5C LDR X0, [X19 + 0x68]
	0x01E29C60 CBZ X0, 0x1E2A9E8
	0x01E29C64 ADRP X24, 0x22D0000
	0x01E29C68 ADRP X27, 0x22CA000
	0x01E29C6C ADRP X26, 0x22D1000
	0x01E29C70 ADRP X29, 0x22D1000
	0x01E29C74 ADRP X28, 0x22D1000
	0x01E29C78 ADRP X25, 0x22CA000
	0x01E29C7C ADRP X23, 0x22D1000
	0x01E29C80 LDR X24, [X24 + 0xCA8]
	0x01E29C84 LDR X27, [X27 + 0x598]
	0x01E29C88 LDR X26, [X26 + 0x960]
	0x01E29C8C LDR X29, [X29 + 0xB80]
	0x01E29C90 LDR X28, [X28 + 0xBD0]
	0x01E29C94 LDR X25, [X25 + 0xAC8]
	0x01E29C98 LDR X23, [X23 + 0x8C0]
	0x01E29C9C MOV W20, W31
	0x01E29CA0 LDR W8, [X0 + 0x18]
	0x01E29CA4 CMP W20, W8
	0x01E29CA8 B.GE 0x1E29EBC
	0x01E29CAC LDR X2, [X24]
	0x01E29CB0 MOV W1, W20
	0x01E29CB4 BL 0x301BCCC
	0x01E29CB8 LDR X8, [X27]
	0x01E29CBC MOV X22, X0
	0x01E29CC0 LDR W9, [X8 + 0xE0]
	0x01E29CC4 CBNZ W9, 0x1E29CD0
	0x01E29CC8 MOV X0, X8
	0x01E29CCC BL 0x1C16DFC
	0x01E29CD0 MOV X0, X22
	0x01E29CD4 MOV X1, X31
	0x01E29CD8 MOV X2, X31
	0x01E29CDC BL 0x3C3883C
	0x01E29CE0 TBNZ X0, 0x0, 0x1E29EAC
	0x01E29CE4 LDRB W8, [X19 + 0x60]
	0x01E29CE8 CBZ W8, 0x1E29E0C
	0x01E29CEC LDR X0, [X19 + 0x68]
	0x01E29CF0 CBZ X0, 0x1E2A9E8
	0x01E29CF4 LDR X2, [X24]
	0x01E29CF8 MOV W1, W20
	0x01E29CFC MOV X25, X19
	0x01E29D00 MOV X19, X27
	0x01E29D04 BL 0x301BCCC
	0x01E29D08 CBZ X0, 0x1E2A9E8
	0x01E29D0C ADRP X8, 0x22D0000
	0x01E29D10 LDR X8, [X8 + 0xFB0]
	0x01E29D14 MOVZ W1, 0x1
	0x01E29D18 MOV X29, X24
	0x01E29D1C MOV X27, X28
	0x01E29D20 LDR X2, [X8]
	0x01E29D24 BL 0x21E5F84
	0x01E29D28 STR W31, [X31 + 0xC]
	0x01E29D2C CBZ X0, 0x1E2A9E8
	0x01E29D30 LDR W8, [X0 + 0x18]
	0x01E29D34 MOV X22, X0
	0x01E29D38 CMP W8, 0x1
	0x01E29D3C B.LT 0x1E29DDC
	0x01E29D40 MOV X28, X31
	0x01E29D44 ADD X24, X22, 0x20
	0x01E29D48 CMP W28, W8
	0x01E29D4C B.CS 0x1E2A9EC
	0x01E29D50 CBZ X21, 0x1E2A9E8
	0x01E29D54 LDR X23, [X24, X28, LSL #3]
	0x01E29D58 LDR X2, [X26]
	0x01E29D5C MOV X0, X21
	0x01E29D60 MOV X1, X23
	0x01E29D64 BL 0x301C318
	0x01E29D68 TBNZ X0, 0x0, 0x1E29DC8
	0x01E29D6C ADRP X9, 0x22D1000
	0x01E29D70 LDR W10, [X21 + 0x1C]
	0x01E29D74 LDR X8, [X21 + 0x10]
	0x01E29D78 LDR X9, [X9 + 0x958]
	0x01E29D7C ADD W10, W10, 0x1
	0x01E29D80 LDR X9, [X9]
	0x01E29D84 STR W10, [X21 + 0x1C]
	0x01E29D88 CBZ X8, 0x1E2A9E8
	0x01E29D8C LDRSW X10, [X21 + 0x18]
	0x01E29D90 LDR W11, [X8 + 0x18]
	0x01E29D94 CMP W10, W11
	0x01E29D98 B.CS 0x1E29DB0
	0x01E29D9C ADD W9, W10, 0x1
	0x01E29DA0 ADD X8, X8, X10, 0x3, LSL
	0x01E29DA4 STR W9, [X21 + 0x18]
	0x01E29DA8 STR X23, [X8 + 0x20]
	0x01E29DAC B 0x1E29DC8
	0x01E29DB0 LDR X8, [X9 + 0x20]
	0x01E29DB4 MOV X0, X21
	0x01E29DB8 MOV X1, X23
	0x01E29DBC LDR X8, [X8 + 0xC0]
	0x01E29DC0 LDR X2, [X8 + 0x70]
	0x01E29DC4 BL 0x301BF90
	0x01E29DC8 ADD X28, X28, 0x1
	0x01E29DCC STR W28, [X31 + 0xC]
	0x01E29DD0 LDR W8, [X22 + 0x18]
	0x01E29DD4 CMP W28, W8
	0x01E29DD8 B.LT 0x1E29D48
	0x01E29DDC LDRB W8, [X25 + 0x60]
	0x01E29DE0 MOV X28, X27
	0x01E29DE4 MOV X27, X19
	0x01E29DE8 MOV X19, X25
	0x01E29DEC ADRP X25, 0x22CA000
	0x01E29DF0 ADRP X23, 0x22D1000
	0x01E29DF4 MOV X24, X29
	0x01E29DF8 ADRP X29, 0x22D1000
	0x01E29DFC LDR X25, [X25 + 0xAC8]
	0x01E29E00 LDR X23, [X23 + 0x8C0]
	0x01E29E04 LDR X29, [X29 + 0xB80]
	0x01E29E08 CBNZ W8, 0x1E29EAC
	0x01E29E0C LDR X0, [X19 + 0x68]
	0x01E29E10 CBZ X0, 0x1E2A9E8
	0x01E29E14 LDR X2, [X24]
	0x01E29E18 MOV W1, W20
	0x01E29E1C BL 0x301BCCC
	0x01E29E20 CBZ X0, 0x1E2A9E8
	0x01E29E24 ADRP X8, 0x22D1000
	0x01E29E28 LDR X8, [X8 + 0xB58]
	0x01E29E2C LDR X1, [X8]
	0x01E29E30 BL 0x21E52E4
	0x01E29E34 CBZ X21, 0x1E2A9E8
	0x01E29E38 LDR X2, [X26]
	0x01E29E3C MOV X22, X0
	0x01E29E40 MOV X0, X21
	0x01E29E44 MOV X1, X22
	0x01E29E48 BL 0x301C318
	0x01E29E4C TBNZ X0, 0x0, 0x1E29EAC
	0x01E29E50 ADRP X9, 0x22D1000
	0x01E29E54 LDR W10, [X21 + 0x1C]
	0x01E29E58 LDR X8, [X21 + 0x10]
	0x01E29E5C LDR X9, [X9 + 0x958]
	0x01E29E60 ADD W10, W10, 0x1
	0x01E29E64 LDR X9, [X9]
	0x01E29E68 STR W10, [X21 + 0x1C]
	0x01E29E6C CBZ X8, 0x1E2A9E8
	0x01E29E70 LDRSW X10, [X21 + 0x18]
	0x01E29E74 LDR W11, [X8 + 0x18]
	0x01E29E78 CMP W10, W11
	0x01E29E7C B.CS 0x1E29E94
	0x01E29E80 ADD W9, W10, 0x1
	0x01E29E84 ADD X8, X8, X10, 0x3, LSL
	0x01E29E88 STR W9, [X21 + 0x18]
	0x01E29E8C STR X22, [X8 + 0x20]
	0x01E29E90 B 0x1E29EAC
	0x01E29E94 LDR X8, [X9 + 0x20]
	0x01E29E98 MOV X0, X21
	0x01E29E9C MOV X1, X22
	0x01E29EA0 LDR X8, [X8 + 0xC0]
	0x01E29EA4 LDR X2, [X8 + 0x70]
	0x01E29EA8 BL 0x301BF90
	0x01E29EAC LDR X0, [X19 + 0x68]
	0x01E29EB0 ADD W20, W20, 0x1
	0x01E29EB4 CBNZ X0, 0x1E29CA0
	0x01E29EB8 B 0x1E2A9E8
	0x01E29EBC ADRP X8, 0x22D1000
	0x01E29EC0 LDR X8, [X8 + 0xB88]
	0x01E29EC4 LDR X0, [X8]
	0x01E29EC8 BL 0x1C16F10
	0x01E29ECC ADRP X8, 0x22D1000
	0x01E29ED0 LDR X8, [X8 + 0xB70]
	0x01E29ED4 MOV X20, X0
	0x01E29ED8 LDR X1, [X8]
	0x01E29EDC BL 0x301B7C4
	0x01E29EE0 CBZ X21, 0x1E2A9E8
	0x01E29EE4 LDR W8, [X21 + 0x18]
	0x01E29EE8 ADRP X26, 0x22CA000
	0x01E29EEC LDR X26, [X26 + 0xA28]
	0x01E29EF0 CMP W8, 0x1
	0x01E29EF4 B.LT 0x1E2A10C
	0x01E29EF8 MOV W22, W31
	0x01E29EFC LDR X2, [X23]
	0x01E29F00 MOV X0, X21
	0x01E29F04 MOV W1, W22
	0x01E29F08 BL 0x301BCCC
	0x01E29F0C CBZ X0, 0x1E2A9E8
	0x01E29F10 ADRP X8, 0x22D1000
	0x01E29F14 LDR X8, [X8 + 0xB38]
	0x01E29F18 LDR X1, [X8]
	0x01E29F1C BL 0x21A3894
	0x01E29F20 LDR X2, [X23]
	0x01E29F24 MOV X23, X0
	0x01E29F28 MOV X0, X21
	0x01E29F2C MOV W1, W22
	0x01E29F30 BL 0x301BCCC
	0x01E29F34 CBZ X0, 0x1E2A9E8
	0x01E29F38 ADRP X8, 0x22D1000
	0x01E29F3C LDR X8, [X8 + 0xB40]
	0x01E29F40 LDR X1, [X8]
	0x01E29F44 BL 0x21A3894
	0x01E29F48 LDR X8, [X27]
	0x01E29F4C MOV X24, X0
	0x01E29F50 LDR W9, [X8 + 0xE0]
	0x01E29F54 CBNZ W9, 0x1E29F60
	0x01E29F58 MOV X0, X8
	0x01E29F5C BL 0x1C16DFC
	0x01E29F60 MOV X0, X23
	0x01E29F64 MOV X1, X31
	0x01E29F68 MOV X2, X31
	0x01E29F6C BL 0x3C354F8
	0x01E29F70 TBNZ X0, 0x0, 0x1E29F98
	0x01E29F74 LDR X0, [X27]
	0x01E29F78 LDR W8, [X0 + 0xE0]
	0x01E29F7C CBNZ W8, 0x1E29F84
	0x01E29F80 BL 0x1C16DFC
	0x01E29F84 MOV X0, X24
	0x01E29F88 MOV X1, X31
	0x01E29F8C MOV X2, X31
	0x01E29F90 BL 0x3C354F8
	0x01E29F94 TBZ X0, 0x0, 0x1E2A060
	0x01E29F98 LDRB W8, [X19 + 0x61]
	0x01E29F9C CBZ W8, 0x1E2A07C
	0x01E29FA0 ADRP X8, 0x22D1000
	0x01E29FA4 LDR X8, [X8 + 0x8C0]
	0x01E29FA8 MOV X0, X21
	0x01E29FAC MOV W1, W22
	0x01E29FB0 LDR X2, [X8]
	0x01E29FB4 BL 0x301BCCC
	0x01E29FB8 CBZ X0, 0x1E2A9E8
	0x01E29FBC MOV X1, X31
	0x01E29FC0 BL 0x3C32ECC
	0x01E29FC4 ADRP X8, 0x22D1000
	0x01E29FC8 LDR X8, [X8 + 0xB48]
	0x01E29FCC MOV X26, X0
	0x01E29FD0 LDR X8, [X8]
	0x01E29FD4 MOV X0, X8
	0x01E29FD8 BL 0x1C16F10
	0x01E29FDC MOV X1, X31
	0x01E29FE0 MOV X25, X0
	0x01E29FE4 BL 0x33BDD8C
	0x01E29FE8 STP X26, X23, [X25 + 0x10]
	0x01E29FEC STR X24, [X25 + 0x20]
	0x01E29FF0 CBZ X20, 0x1E2A9E8
	0x01E29FF4 ADRP X9, 0x22D1000
	0x01E29FF8 LDR W10, [X20 + 0x1C]
	0x01E29FFC LDR X8, [X20 + 0x10]
	0x01E2A000 LDR X9, [X9 + 0xB60]
	0x01E2A004 ADD W10, W10, 0x1
	0x01E2A008 LDR X9, [X9]
	0x01E2A00C STR W10, [X20 + 0x1C]
	0x01E2A010 CBZ X8, 0x1E2A9E8
	0x01E2A014 LDRSW X10, [X20 + 0x18]
	0x01E2A018 LDR W11, [X8 + 0x18]
	0x01E2A01C ADRP X26, 0x22C9000
	0x01E2A020 LDR X26, [X26 + 0xA28]
	0x01E2A024 CMP W10, W11
	0x01E2A028 B.CS 0x1E2A040
	0x01E2A02C ADD W9, W10, 0x1
	0x01E2A030 ADD X8, X8, X10, 0x3, LSL
	0x01E2A034 STR W9, [X20 + 0x18]
	0x01E2A038 STR X25, [X8 + 0x20]
	0x01E2A03C B 0x1E2A058
	0x01E2A040 LDR X8, [X9 + 0x20]
	0x01E2A044 MOV X0, X20
	0x01E2A048 MOV X1, X25
	0x01E2A04C LDR X8, [X8 + 0xC0]
	0x01E2A050 LDR X2, [X8 + 0x70]
	0x01E2A054 BL 0x301BF90
	0x01E2A058 ADRP X25, 0x22C9000
	0x01E2A05C LDR X25, [X25 + 0xAC8]
	0x01E2A060 LDR W8, [X21 + 0x18]
	0x01E2A064 ADRP X23, 0x22D0000
	0x01E2A068 LDR X23, [X23 + 0x8C0]
	0x01E2A06C ADD W22, W22, 0x1
	0x01E2A070 CMP W22, W8
	0x01E2A074 B.LT 0x1E29EFC
	0x01E2A078 B 0x1E2A10C
	0x01E2A07C CBZ X24, 0x1E2A9E8
	0x01E2A080 MOV X0, X24
	0x01E2A084 MOV X1, X31
	0x01E2A088 BL 0x3C12FF8
	0x01E2A08C TBZ X0, 0x0, 0x1E2A060
	0x01E2A090 LDRB W8, [X19 + 0x61]
	0x01E2A094 CBNZ W8, 0x1E29FA0
	0x01E2A098 ADRP X8, 0x22D0000
	0x01E2A09C LDR X8, [X8 + 0x8C0]
	0x01E2A0A0 MOV X0, X21
	0x01E2A0A4 MOV W1, W22
	0x01E2A0A8 LDR X2, [X8]
	0x01E2A0AC BL 0x301BCCC
	0x01E2A0B0 CBZ X0, 0x1E2A9E8
	0x01E2A0B4 MOV X1, X31
	0x01E2A0B8 BL 0x3C32ECC
	0x01E2A0BC CBZ X0, 0x1E2A9E8
	0x01E2A0C0 MOV X1, X31
	0x01E2A0C4 BL 0x3C357F8
	0x01E2A0C8 TBZ X0, 0x0, 0x1E2A060
	0x01E2A0CC LDRB W8, [X19 + 0x61]
	0x01E2A0D0 CBNZ W8, 0x1E29FA0
	0x01E2A0D4 ADRP X8, 0x22D0000
	0x01E2A0D8 LDR X8, [X8 + 0x8C0]
	0x01E2A0DC MOV X0, X21
	0x01E2A0E0 MOV W1, W22
	0x01E2A0E4 LDR X2, [X8]
	0x01E2A0E8 BL 0x301BCCC
	0x01E2A0EC CBZ X0, 0x1E2A9E8
	0x01E2A0F0 MOV X1, X31
	0x01E2A0F4 BL 0x3C32ECC
	0x01E2A0F8 CBZ X0, 0x1E2A9E8
	0x01E2A0FC MOV X1, X31
	0x01E2A100 BL 0x3C35834
	0x01E2A104 TBNZ X0, 0x0, 0x1E29FA0
	0x01E2A108 B 0x1E2A060
	0x01E2A10C ADRP X8, 0x22D0000
	0x01E2A110 LDR X8, [X8 + 0xB88]
	0x01E2A114 LDR X0, [X8]
	0x01E2A118 BL 0x1C16F10
	0x01E2A11C ADRP X8, 0x22D0000
	0x01E2A120 LDR X8, [X8 + 0xB70]
	0x01E2A124 MOV X21, X0
	0x01E2A128 LDR X1, [X8]
	0x01E2A12C BL 0x301B7C4
	0x01E2A130 CBZ X20, 0x1E2A9E8
	0x01E2A134 LDR W8, [X20 + 0x18]
	0x01E2A138 CMP W8, 0x1
	0x01E2A13C B.LT 0x1E2A9B0
	0x01E2A140 MOV W22, W31
	0x01E2A144 LDR X2, [X29]
	0x01E2A148 MOV X0, X20
	0x01E2A14C MOV W1, W22
	0x01E2A150 BL 0x301BCCC
	0x01E2A154 CBZ X0, 0x1E2A9E8
	0x01E2A158 LDR X8, [X27]
	0x01E2A15C LDR X23, [X0 + 0x18]
	0x01E2A160 LDR W9, [X8 + 0xE0]
	0x01E2A164 CBNZ W9, 0x1E2A170
	0x01E2A168 MOV X0, X8
	0x01E2A16C BL 0x1C16DFC
	0x01E2A170 MOV X0, X23
	0x01E2A174 MOV X1, X31
	0x01E2A178 MOV X2, X31
	0x01E2A17C BL 0x3C3883C
	0x01E2A180 TBZ X0, 0x0, 0x1E2A1FC
	0x01E2A184 LDRB W8, [X19 + 0x70]
	0x01E2A188 CBZ W8, 0x1E2A1F4
	0x01E2A18C LDR X2, [X29]
	0x01E2A190 MOV X0, X20
	0x01E2A194 MOV W1, W22
	0x01E2A198 BL 0x301BCCC
	0x01E2A19C CBZ X0, 0x1E2A9E8
	0x01E2A1A0 LDR X0, [X0 + 0x10]
	0x01E2A1A4 CBZ X0, 0x1E2A9E8
	0x01E2A1A8 MOV X1, X31
	0x01E2A1AC BL 0x3C389D4
	0x01E2A1B0 ADRP X9, 0x22D0000
	0x01E2A1B4 LDR X8, [X28]
	0x01E2A1B8 LDR X9, [X9 + 0xBC8]
	0x01E2A1BC MOV X1, X0
	0x01E2A1C0 MOV X3, X31
	0x01E2A1C4 MOV X0, X8
	0x01E2A1C8 LDR X2, [X9]
	0x01E2A1CC BL 0x32274B8
	0x01E2A1D0 LDR X8, [X26]
	0x01E2A1D4 MOV X23, X0
	0x01E2A1D8 LDR W9, [X8 + 0xE0]
	0x01E2A1DC CBNZ W9, 0x1E2A1E8
	0x01E2A1E0 MOV X0, X8
	0x01E2A1E4 BL 0x1C16DFC
	0x01E2A1E8 MOV X0, X23
	0x01E2A1EC MOV X1, X31
	0x01E2A1F0 BL 0x3C0649C
	0x01E2A1F4 MOV W24, W31
	0x01E2A1F8 B 0x1E2A200
	0x01E2A1FC MOVZ W24, 0x1
	0x01E2A200 LDR X2, [X29]
	0x01E2A204 MOV X0, X20
	0x01E2A208 MOV W1, W22
	0x01E2A20C BL 0x301BCCC
	0x01E2A210 CBZ X0, 0x1E2A9E8
	0x01E2A214 LDR X8, [X27]
	0x01E2A218 LDR X23, [X0 + 0x20]
	0x01E2A21C LDR W9, [X8 + 0xE0]
	0x01E2A220 CBNZ W9, 0x1E2A22C
	0x01E2A224 MOV X0, X8
	0x01E2A228 BL 0x1C16DFC
	0x01E2A22C MOV X0, X23
	0x01E2A230 MOV X1, X31
	0x01E2A234 MOV X2, X31
	0x01E2A238 BL 0x3C3883C
	0x01E2A23C TBZ X0, 0x0, 0x1E2A2B4
	0x01E2A240 LDRB W8, [X19 + 0x70]
	0x01E2A244 CBZ W8, 0x1E2A2B0
	0x01E2A248 LDR X2, [X29]
	0x01E2A24C MOV X0, X20
	0x01E2A250 MOV W1, W22
	0x01E2A254 BL 0x301BCCC
	0x01E2A258 CBZ X0, 0x1E2A9E8
	0x01E2A25C LDR X0, [X0 + 0x10]
	0x01E2A260 CBZ X0, 0x1E2A9E8
	0x01E2A264 MOV X1, X31
	0x01E2A268 BL 0x3C389D4
	0x01E2A26C ADRP X9, 0x22D0000
	0x01E2A270 LDR X8, [X28]
	0x01E2A274 LDR X9, [X9 + 0xBA0]
	0x01E2A278 MOV X1, X0
	0x01E2A27C MOV X3, X31
	0x01E2A280 MOV X0, X8
	0x01E2A284 LDR X2, [X9]
	0x01E2A288 BL 0x32274B8
	0x01E2A28C LDR X8, [X26]
	0x01E2A290 MOV X23, X0
	0x01E2A294 LDR W9, [X8 + 0xE0]
	0x01E2A298 CBNZ W9, 0x1E2A2A4
	0x01E2A29C MOV X0, X8
	0x01E2A2A0 BL 0x1C16DFC
	0x01E2A2A4 MOV X0, X23
	0x01E2A2A8 MOV X1, X31
	0x01E2A2AC BL 0x3C0649C
	0x01E2A2B0 MOV W24, W31
	0x01E2A2B4 LDR X2, [X29]
	0x01E2A2B8 MOV X0, X20
	0x01E2A2BC MOV W1, W22
	0x01E2A2C0 BL 0x301BCCC
	0x01E2A2C4 CBZ X0, 0x1E2A9E8
	0x01E2A2C8 LDR X8, [X27]
	0x01E2A2CC LDR X23, [X0 + 0x18]
	0x01E2A2D0 LDR W9, [X8 + 0xE0]
	0x01E2A2D4 CBNZ W9, 0x1E2A2E0
	0x01E2A2D8 MOV X0, X8
	0x01E2A2DC BL 0x1C16DFC
	0x01E2A2E0 MOV X0, X23
	0x01E2A2E4 MOV X1, X31
	0x01E2A2E8 MOV X2, X31
	0x01E2A2EC BL 0x3C354F8
	0x01E2A2F0 TBZ X0, 0x0, 0x1E2A3B8
	0x01E2A2F4 LDR X2, [X29]
	0x01E2A2F8 MOV X0, X20
	0x01E2A2FC MOV W1, W22
	0x01E2A300 BL 0x301BCCC
	0x01E2A304 CBZ X0, 0x1E2A9E8
	0x01E2A308 LDR X0, [X0 + 0x18]
	0x01E2A30C CBZ X0, 0x1E2A9E8
	0x01E2A310 MOV X1, X31
	0x01E2A314 BL 0x3C16D04
	0x01E2A318 LDR X8, [X27]
	0x01E2A31C MOV X23, X0
	0x01E2A320 LDR W9, [X8 + 0xE0]
	0x01E2A324 CBNZ W9, 0x1E2A330
	0x01E2A328 MOV X0, X8
	0x01E2A32C BL 0x1C16DFC
	0x01E2A330 MOV X0, X23
	0x01E2A334 MOV X1, X31
	0x01E2A338 MOV X2, X31
	0x01E2A33C BL 0x3C3883C
	0x01E2A340 TBZ X0, 0x0, 0x1E2A3B8
	0x01E2A344 LDRB W8, [X19 + 0x70]
	0x01E2A348 CBZ W8, 0x1E2A3B4
	0x01E2A34C LDR X2, [X29]
	0x01E2A350 MOV X0, X20
	0x01E2A354 MOV W1, W22
	0x01E2A358 BL 0x301BCCC
	0x01E2A35C CBZ X0, 0x1E2A9E8
	0x01E2A360 LDR X0, [X0 + 0x10]
	0x01E2A364 CBZ X0, 0x1E2A9E8
	0x01E2A368 MOV X1, X31
	0x01E2A36C BL 0x3C389D4
	0x01E2A370 ADRP X9, 0x22D0000
	0x01E2A374 LDR X8, [X28]
	0x01E2A378 LDR X9, [X9 + 0xBA8]
	0x01E2A37C MOV X1, X0
	0x01E2A380 MOV X3, X31
	0x01E2A384 MOV X0, X8
	0x01E2A388 LDR X2, [X9]
	0x01E2A38C BL 0x32274B8
	0x01E2A390 LDR X8, [X26]
	0x01E2A394 MOV X23, X0
	0x01E2A398 LDR W9, [X8 + 0xE0]
	0x01E2A39C CBNZ W9, 0x1E2A3A8
	0x01E2A3A0 MOV X0, X8
	0x01E2A3A4 BL 0x1C16DFC
	0x01E2A3A8 MOV X0, X23
	0x01E2A3AC MOV X1, X31
	0x01E2A3B0 BL 0x3C0649C
	0x01E2A3B4 MOV W24, W31
	0x01E2A3B8 LDR X2, [X29]
	0x01E2A3BC MOV X0, X20
	0x01E2A3C0 MOV W1, W22
	0x01E2A3C4 BL 0x301BCCC
	0x01E2A3C8 CBZ X0, 0x1E2A9E8
	0x01E2A3CC LDR X8, [X27]
	0x01E2A3D0 LDR X23, [X0 + 0x18]
	0x01E2A3D4 LDR W9, [X8 + 0xE0]
	0x01E2A3D8 CBNZ W9, 0x1E2A3E4
	0x01E2A3DC MOV X0, X8
	0x01E2A3E0 BL 0x1C16DFC
	0x01E2A3E4 MOV X0, X23
	0x01E2A3E8 MOV X1, X31
	0x01E2A3EC MOV X2, X31
	0x01E2A3F0 BL 0x3C354F8
	0x01E2A3F4 TBZ X0, 0x0, 0x1E2A670
	0x01E2A3F8 LDR X2, [X29]
	0x01E2A3FC MOV X0, X20
	0x01E2A400 MOV W1, W22
	0x01E2A404 BL 0x301BCCC
	0x01E2A408 CBZ X0, 0x1E2A9E8
	0x01E2A40C LDR X8, [X27]
	0x01E2A410 LDR X23, [X0 + 0x20]
	0x01E2A414 LDR W9, [X8 + 0xE0]
	0x01E2A418 CBNZ W9, 0x1E2A424
	0x01E2A41C MOV X0, X8
	0x01E2A420 BL 0x1C16DFC
	0x01E2A424 MOV X0, X23
	0x01E2A428 MOV X1, X31
	0x01E2A42C MOV X2, X31
	0x01E2A430 BL 0x3C354F8
	0x01E2A434 TBZ X0, 0x0, 0x1E2A670
	0x01E2A438 LDR X2, [X29]
	0x01E2A43C MOV X0, X20
	0x01E2A440 MOV W1, W22
	0x01E2A444 BL 0x301BCCC
	0x01E2A448 CBZ X0, 0x1E2A9E8
	0x01E2A44C LDR X0, [X0 + 0x18]
	0x01E2A450 CBZ X0, 0x1E2A9E8
	0x01E2A454 MOV X1, X31
	0x01E2A458 BL 0x3C16D04
	0x01E2A45C LDR X8, [X27]
	0x01E2A460 MOV X23, X0
	0x01E2A464 LDR W9, [X8 + 0xE0]
	0x01E2A468 CBNZ W9, 0x1E2A474
	0x01E2A46C MOV X0, X8
	0x01E2A470 BL 0x1C16DFC
	0x01E2A474 MOV X0, X23
	0x01E2A478 MOV X1, X31
	0x01E2A47C MOV X2, X31
	0x01E2A480 BL 0x3C354F8
	0x01E2A484 TBZ X0, 0x0, 0x1E2A670
	0x01E2A488 LDR X2, [X29]
	0x01E2A48C MOV X0, X20
	0x01E2A490 MOV W1, W22
	0x01E2A494 BL 0x301BCCC
	0x01E2A498 CBZ X0, 0x1E2A9E8
	0x01E2A49C LDR X0, [X0 + 0x18]
	0x01E2A4A0 CBZ X0, 0x1E2A9E8
	0x01E2A4A4 MOV X1, X31
	0x01E2A4A8 BL 0x3C16D04
	0x01E2A4AC CBZ X0, 0x1E2A9E8
	0x01E2A4B0 MOV X1, X31
	0x01E2A4B4 BL 0x3C0F650
	0x01E2A4B8 LDR X2, [X29]
	0x01E2A4BC MOV W23, W0
	0x01E2A4C0 MOV X0, X20
	0x01E2A4C4 MOV W1, W22
	0x01E2A4C8 BL 0x301BCCC
	0x01E2A4CC CBZ X0, 0x1E2A9E8
	0x01E2A4D0 LDR X0, [X0 + 0x20]
	0x01E2A4D4 CBZ X0, 0x1E2A9E8
	0x01E2A4D8 MOV X1, X31
	0x01E2A4DC BL 0x3C1351C
	0x01E2A4E0 CBZ X0, 0x1E2A9E8
	0x01E2A4E4 LDR W8, [X0 + 0x18]
	0x01E2A4E8 CMP W23, W8
	0x01E2A4EC B.EQ 0x1E2A670
	0x01E2A4F0 LDRB W8, [X19 + 0x70]
	0x01E2A4F4 CBZ W8, 0x1E2A66C
	0x01E2A4F8 LDR X0, [X25]
	0x01E2A4FC MOVZ W1, 0x7
	0x01E2A500 BL 0x1C16D6C
	0x01E2A504 CBZ X0, 0x1E2A9E8
	0x01E2A508 LDR W8, [X0 + 0x18]
	0x01E2A50C MOV X23, X0
	0x01E2A510 CBZ W8, 0x1E2A9EC
	0x01E2A514 ADRP X8, 0x22D0000
	0x01E2A518 LDR X8, [X8 + 0xB90]
	0x01E2A51C MOV X0, X20
	0x01E2A520 MOV W1, W22
	0x01E2A524 LDR X8, [X8]
	0x01E2A528 STR X8, [X23 + 0x20]
	0x01E2A52C LDR X2, [X29]
	0x01E2A530 BL 0x301BCCC
	0x01E2A534 CBZ X0, 0x1E2A9E8
	0x01E2A538 LDR X0, [X0 + 0x10]
	0x01E2A53C CBZ X0, 0x1E2A9E8
	0x01E2A540 MOV X1, X31
	0x01E2A544 BL 0x3C389D4
	0x01E2A548 LDR W8, [X23 + 0x18]
	0x01E2A54C CMP W8, 0x1
	0x01E2A550 B.LS 0x1E2A9EC
	0x01E2A554 CMP W8, 0x2
	0x01E2A558 STR X0, [X23 + 0x28]
	0x01E2A55C B.EQ 0x1E2A9EC
	0x01E2A560 ADRP X8, 0x22D0000
	0x01E2A564 LDR X8, [X8 + 0xB98]
	0x01E2A568 MOV X0, X20
	0x01E2A56C MOV W1, W22
	0x01E2A570 LDR X8, [X8]
	0x01E2A574 STR X8, [X23 + 0x30]
	0x01E2A578 LDR X2, [X29]
	0x01E2A57C BL 0x301BCCC
	0x01E2A580 CBZ X0, 0x1E2A9E8
	0x01E2A584 LDR X0, [X0 + 0x18]
	0x01E2A588 CBZ X0, 0x1E2A9E8
	0x01E2A58C MOV X1, X31
	0x01E2A590 BL 0x3C16D04
	0x01E2A594 CBZ X0, 0x1E2A9E8
	0x01E2A598 MOV X1, X31
	0x01E2A59C BL 0x3C0F650
	0x01E2A5A0 STR W0, [X31 + 0xC]
	0x01E2A5A4 ADD X0, X31, 0xC
	0x01E2A5A8 MOV X1, X31
	0x01E2A5AC BL 0x337B6E0
	0x01E2A5B0 LDR W8, [X23 + 0x18]
	0x01E2A5B4 CMP W8, 0x3
	0x01E2A5B8 B.LS 0x1E2A9EC
	0x01E2A5BC CMP W8, 0x4
	0x01E2A5C0 STR X0, [X23 + 0x38]
	0x01E2A5C4 B.EQ 0x1E2A9EC
	0x01E2A5C8 ADRP X8, 0x22D0000
	0x01E2A5CC LDR X8, [X8 + 0xBB0]
	0x01E2A5D0 MOV X0, X20
	0x01E2A5D4 MOV W1, W22
	0x01E2A5D8 LDR X8, [X8]
	0x01E2A5DC STR X8, [X23 + 0x40]
	0x01E2A5E0 LDR X2, [X29]
	0x01E2A5E4 BL 0x301BCCC
	0x01E2A5E8 CBZ X0, 0x1E2A9E8
	0x01E2A5EC LDR X0, [X0 + 0x20]
	0x01E2A5F0 CBZ X0, 0x1E2A9E8
	0x01E2A5F4 MOV X1, X31
	0x01E2A5F8 BL 0x3C1351C
	0x01E2A5FC CBZ X0, 0x1E2A9E8
	0x01E2A600 LDR X8, [X0 + 0x18]
	0x01E2A604 ADD X0, X31, 0xC
	0x01E2A608 MOV X1, X31
	0x01E2A60C STR W8, [X31 + 0xC]
	0x01E2A610 BL 0x337B6E0
	0x01E2A614 LDR W8, [X23 + 0x18]
	0x01E2A618 CMP W8, 0x5
	0x01E2A61C B.LS 0x1E2A9EC
	0x01E2A620 CMP W8, 0x6
	0x01E2A624 STR X0, [X23 + 0x48]
	0x01E2A628 B.EQ 0x1E2A9EC
	0x01E2A62C ADRP X8, 0x22D0000
	0x01E2A630 LDR X8, [X8 + 0xBE8]
	0x01E2A634 MOV X0, X23
	0x01E2A638 MOV X1, X31
	0x01E2A63C LDR X8, [X8]
	0x01E2A640 STR X8, [X23 + 0x50]
	0x01E2A644 BL 0x32278CC
	0x01E2A648 LDR X8, [X26]
	0x01E2A64C MOV X23, X0
	0x01E2A650 LDR W9, [X8 + 0xE0]
	0x01E2A654 CBNZ W9, 0x1E2A660
	0x01E2A658 MOV X0, X8
	0x01E2A65C BL 0x1C16DFC
	0x01E2A660 MOV X0, X23
	0x01E2A664 MOV X1, X31
	0x01E2A668 BL 0x3C0649C
	0x01E2A66C MOV W24, W31
	0x01E2A670 LDR X2, [X29]
	0x01E2A674 MOV X0, X20
	0x01E2A678 MOV W1, W22
	0x01E2A67C BL 0x301BCCC
	0x01E2A680 CBZ X0, 0x1E2A9E8
	0x01E2A684 LDR X8, [X27]
	0x01E2A688 LDR X23, [X0 + 0x20]
	0x01E2A68C LDR W9, [X8 + 0xE0]
	0x01E2A690 CBNZ W9, 0x1E2A69C
	0x01E2A694 MOV X0, X8
	0x01E2A698 BL 0x1C16DFC
	0x01E2A69C MOV X0, X23
	0x01E2A6A0 MOV X1, X31
	0x01E2A6A4 MOV X2, X31
	0x01E2A6A8 BL 0x3C354F8
	0x01E2A6AC TBZ X0, 0x0, 0x1E2A860
	0x01E2A6B0 LDR X2, [X29]
	0x01E2A6B4 MOV X0, X20
	0x01E2A6B8 MOV W1, W22
	0x01E2A6BC STR W31, [X31 + 0x8]
	0x01E2A6C0 BL 0x301BCCC
	0x01E2A6C4 CBZ X0, 0x1E2A9E8
	0x01E2A6C8 MOV W23, W31
	0x01E2A6CC LDR X0, [X0 + 0x20]
	0x01E2A6D0 CBZ X0, 0x1E2A9E8
	0x01E2A6D4 MOV X1, X31
	0x01E2A6D8 BL 0x3C1351C
	0x01E2A6DC CBZ X0, 0x1E2A9E8
	0x01E2A6E0 LDR W8, [X0 + 0x18]
	0x01E2A6E4 CMP W23, W8
	0x01E2A6E8 B.GE 0x1E2A860
	0x01E2A6EC LDR X2, [X29]
	0x01E2A6F0 MOV X0, X20
	0x01E2A6F4 MOV W1, W22
	0x01E2A6F8 BL 0x301BCCC
	0x01E2A6FC CBZ X0, 0x1E2A9E8
	0x01E2A700 LDR X0, [X0 + 0x20]
	0x01E2A704 CBZ X0, 0x1E2A9E8
	0x01E2A708 MOV X1, X31
	0x01E2A70C BL 0x3C1351C
	0x01E2A710 CBZ X0, 0x1E2A9E8
	0x01E2A714 LDRSW X9, [X31 + 0x8]
	0x01E2A718 LDR W8, [X0 + 0x18]
	0x01E2A71C CMP W9, W8
	0x01E2A720 B.CS 0x1E2A9EC
	0x01E2A724 LDR X8, [X27]
	0x01E2A728 ADD X9, X0, X9, 0x3, LSL
	0x01E2A72C LDR X23, [X9 + 0x20]
	0x01E2A730 LDR W10, [X8 + 0xE0]
	0x01E2A734 CBNZ W10, 0x1E2A740
	0x01E2A738 MOV X0, X8
	0x01E2A73C BL 0x1C16DFC
	0x01E2A740 MOV X0, X23
	0x01E2A744 MOV X1, X31
	0x01E2A748 MOV X2, X31
	0x01E2A74C BL 0x3C3883C
	0x01E2A750 TBZ X0, 0x0, 0x1E2A83C
	0x01E2A754 LDRB W8, [X19 + 0x70]
	0x01E2A758 CBZ W8, 0x1E2A838
	0x01E2A75C LDR X0, [X25]
	0x01E2A760 MOVZ W1, 0x5
	0x01E2A764 BL 0x1C16D6C
	0x01E2A768 CBZ X0, 0x1E2A9E8
	0x01E2A76C LDR W8, [X0 + 0x18]
	0x01E2A770 MOV X23, X0
	0x01E2A774 CBZ W8, 0x1E2A9EC
	0x01E2A778 ADRP X8, 0x22D0000
	0x01E2A77C LDR X8, [X8 + 0xBC0]
	0x01E2A780 ADD X0, X31, 0x8
	0x01E2A784 MOV X1, X31
	0x01E2A788 LDR X8, [X8]
	0x01E2A78C STR X8, [X23 + 0x20]
	0x01E2A790 BL 0x337B6E0
	0x01E2A794 LDR W8, [X23 + 0x18]
	0x01E2A798 CMP W8, 0x1
	0x01E2A79C B.LS 0x1E2A9EC
	0x01E2A7A0 CMP W8, 0x2
	0x01E2A7A4 STR X0, [X23 + 0x28]
	0x01E2A7A8 B.EQ 0x1E2A9EC
	0x01E2A7AC ADRP X8, 0x22D0000
	0x01E2A7B0 LDR X8, [X8 + 0xBE0]
	0x01E2A7B4 MOV X0, X20
	0x01E2A7B8 MOV W1, W22
	0x01E2A7BC LDR X8, [X8]
	0x01E2A7C0 STR X8, [X23 + 0x30]
	0x01E2A7C4 LDR X2, [X29]
	0x01E2A7C8 BL 0x301BCCC
	0x01E2A7CC CBZ X0, 0x1E2A9E8
	0x01E2A7D0 LDR X0, [X0 + 0x10]
	0x01E2A7D4 CBZ X0, 0x1E2A9E8
	0x01E2A7D8 MOV X1, X31
	0x01E2A7DC BL 0x3C389D4
	0x01E2A7E0 LDR W8, [X23 + 0x18]
	0x01E2A7E4 CMP W8, 0x3
	0x01E2A7E8 B.LS 0x1E2A9EC
	0x01E2A7EC CMP W8, 0x4
	0x01E2A7F0 STR X0, [X23 + 0x38]
	0x01E2A7F4 B.EQ 0x1E2A9EC
	0x01E2A7F8 ADRP X8, 0x22D0000
	0x01E2A7FC LDR X8, [X8 + 0xBB8]
	0x01E2A800 MOV X0, X23
	0x01E2A804 MOV X1, X31
	0x01E2A808 LDR X8, [X8]
	0x01E2A80C STR X8, [X23 + 0x40]
	0x01E2A810 BL 0x32278CC
	0x01E2A814 LDR X8, [X26]
	0x01E2A818 MOV X23, X0
	0x01E2A81C LDR W9, [X8 + 0xE0]
	0x01E2A820 CBNZ W9, 0x1E2A82C
	0x01E2A824 MOV X0, X8
	0x01E2A828 BL 0x1C16DFC
	0x01E2A82C MOV X0, X23
	0x01E2A830 MOV X1, X31
	0x01E2A834 BL 0x3C0649C
	0x01E2A838 MOV W24, W31
	0x01E2A83C LDR W8, [X31 + 0x8]
	0x01E2A840 LDR X2, [X29]
	0x01E2A844 MOV X0, X20
	0x01E2A848 MOV W1, W22
	0x01E2A84C ADD W23, W8, 0x1
	0x01E2A850 STR W23, [X31 + 0x8]
	0x01E2A854 BL 0x301BCCC
	0x01E2A858 CBNZ X0, 0x1E2A6CC
	0x01E2A85C B 0x1E2A9E8
	0x01E2A860 LDR X2, [X29]
	0x01E2A864 MOV X0, X20
	0x01E2A868 MOV W1, W22
	0x01E2A86C BL 0x301BCCC
	0x01E2A870 CBZ X0, 0x1E2A9E8
	0x01E2A874 LDR X0, [X0 + 0x10]
	0x01E2A878 CBZ X0, 0x1E2A9E8
	0x01E2A87C ADRP X8, 0x22D0000
	0x01E2A880 LDR X8, [X8 + 0xB50]
	0x01E2A884 LDR X1, [X8]
	0x01E2A888 BL 0x21E52E4
	0x01E2A88C LDR X8, [X27]
	0x01E2A890 MOV X23, X0
	0x01E2A894 LDR W9, [X8 + 0xE0]
	0x01E2A898 CBNZ W9, 0x1E2A8A4
	0x01E2A89C MOV X0, X8
	0x01E2A8A0 BL 0x1C16DFC
	0x01E2A8A4 MOV X0, X23
	0x01E2A8A8 MOV X1, X31
	0x01E2A8AC MOV X2, X31
	0x01E2A8B0 BL 0x3C354F8
	0x01E2A8B4 TBZ X0, 0x0, 0x1E2A92C
	0x01E2A8B8 LDRB W8, [X19 + 0x70]
	0x01E2A8BC CBZ W8, 0x1E2A9A0
	0x01E2A8C0 LDR X2, [X29]
	0x01E2A8C4 MOV X0, X20
	0x01E2A8C8 MOV W1, W22
	0x01E2A8CC BL 0x301BCCC
	0x01E2A8D0 CBZ X0, 0x1E2A9E8
	0x01E2A8D4 LDR X0, [X0 + 0x10]
	0x01E2A8D8 CBZ X0, 0x1E2A9E8
	0x01E2A8DC MOV X1, X31
	0x01E2A8E0 BL 0x3C389D4
	0x01E2A8E4 ADRP X9, 0x22D0000
	0x01E2A8E8 LDR X8, [X28]
	0x01E2A8EC LDR X9, [X9 + 0xBD8]
	0x01E2A8F0 MOV X1, X0
	0x01E2A8F4 MOV X3, X31
	0x01E2A8F8 MOV X0, X8
	0x01E2A8FC LDR X2, [X9]
	0x01E2A900 BL 0x32274B8
	0x01E2A904 LDR X8, [X26]
	0x01E2A908 MOV X23, X0
	0x01E2A90C LDR W9, [X8 + 0xE0]
	0x01E2A910 CBNZ W9, 0x1E2A91C
	0x01E2A914 MOV X0, X8
	0x01E2A918 BL 0x1C16DFC
	0x01E2A91C MOV X0, X23
	0x01E2A920 MOV X1, X31
	0x01E2A924 BL 0x3C0649C
	0x01E2A928 B 0x1E2A9A0
	0x01E2A92C TBZ X24, 0x0, 0x1E2A9A0
	0x01E2A930 LDR X2, [X29]
	0x01E2A934 MOV X0, X20
	0x01E2A938 MOV W1, W22
	0x01E2A93C BL 0x301BCCC
	0x01E2A940 CBZ X21, 0x1E2A9E8
	0x01E2A944 ADRP X9, 0x22D0000
	0x01E2A948 LDR W10, [X21 + 0x1C]
	0x01E2A94C LDR X8, [X21 + 0x10]
	0x01E2A950 LDR X9, [X9 + 0xB60]
	0x01E2A954 ADD W10, W10, 0x1
	0x01E2A958 LDR X9, [X9]
	0x01E2A95C STR W10, [X21 + 0x1C]
	0x01E2A960 CBZ X8, 0x1E2A9E8
	0x01E2A964 LDRSW X10, [X21 + 0x18]
	0x01E2A968 LDR W11, [X8 + 0x18]
	0x01E2A96C MOV X1, X0
	0x01E2A970 CMP W10, W11
	0x01E2A974 B.CS 0x1E2A98C

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Subtract X31, X31, 992
	014 Move X19, 0x25B0000
	015 Move W8, [X19+3680]
	016 Move X21, X0
	017 Add X29, X31, 144
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {174}
	022 Move X0, 0x22CB000
	023 Move X0, [X0+2600]
	024 Call 0x1C17CF4
	025 Move X0, 0x22D2000
	026 Move X0, [X0+2536]
	027 Call 0x1C17CF4
	028 Move X0, 0x22D2000
	029 Move X0, [X0+2544]
	030 Call 0x1C17CF4
	031 Move X0, 0x22D2000
	032 Move X0, [X0+2552]
	033 Call 0x1C17CF4
	034 Move X0, 0x22D2000
	035 Move X0, [X0+2560]
	036 Call 0x1C17CF4
	037 Move X0, 0x22D2000
	038 Move X0, [X0+2568]
	039 Call 0x1C17CF4
	040 Move X0, 0x22D2000
	041 Move X0, [X0+2576]
	042 Call 0x1C17CF4
	043 Move X0, 0x22D2000
	044 Move X0, [X0+2584]
	045 Call 0x1C17CF4
	046 Move X0, 0x22D2000
	047 Move X0, [X0+2592]
	048 Call 0x1C17CF4
	049 Move X0, 0x22D2000
	050 Move X0, [X0+2600]
	051 Call 0x1C17CF4
	052 Move X0, 0x22D2000
	053 Move X0, [X0+2608]
	054 Call 0x1C17CF4
	055 Move X0, 0x22D2000
	056 Move X0, [X0+2616]
	057 Call 0x1C17CF4
	058 Move X0, 0x22D2000
	059 Move X0, [X0+2624]
	060 Call 0x1C17CF4
	061 Move X0, 0x22CD000
	062 Move X0, [X0+352]
	063 Call 0x1C17CF4
	064 Move X0, 0x22D2000
	065 Move X0, [X0+1776]
	066 Call 0x1C17CF4
	067 Move X0, 0x22D2000
	068 Move X0, [X0+1784]
	069 Call 0x1C17CF4
	070 Move X0, 0x22CD000
	071 Move X0, [X0+360]
	072 Call 0x1C17CF4
	073 Move X0, 0x22D2000
	074 Move X0, [X0+1920]
	075 Call 0x1C17CF4
	076 Move X0, 0x22D2000
	077 Move X0, [X0+2632]
	078 Call 0x1C17CF4
	079 Move X0, 0x22D2000
	080 Move X0, [X0+2640]
	081 Call 0x1C17CF4
	082 Move X0, 0x22D2000
	083 Move X0, [X0+2648]
	084 Call 0x1C17CF4
	085 Move X0, 0x22D2000
	086 Move X0, [X0+2656]
	087 Call 0x1C17CF4
	088 Move X0, 0x22D2000
	089 Move X0, [X0+2664]
	090 Call 0x1C17CF4
	091 Move X0, 0x22D2000
	092 Move X0, [X0+2672]
	093 Call 0x1C17CF4
	094 Move X0, 0x22D2000
	095 Move X0, [X0+2680]
	096 Call 0x1C17CF4
	097 Move X0, 0x22D2000
	098 Move X0, [X0+2688]
	099 Call 0x1C17CF4
	100 Move X0, 0x22D2000
	101 Move X0, [X0+2696]
	102 Call 0x1C17CF4
	103 Move X0, 0x22D2000
	104 Move X0, [X0+2704]
	105 Call 0x1C17CF4
	106 Move X0, 0x22D2000
	107 Move X0, [X0+2712]
	108 Call 0x1C17CF4
	109 Move X0, 0x22D2000
	110 Move X0, [X0+2720]
	111 Call 0x1C17CF4
	112 Move X0, 0x22D2000
	113 Move X0, [X0+2728]
	114 Call 0x1C17CF4
	115 Move X0, 0x22D2000
	116 Move X0, [X0+2736]
	117 Call 0x1C17CF4
	118 Move X0, 0x22D2000
	119 Move X0, [X0+2744]
	120 Call 0x1C17CF4
	121 Move X0, 0x22D2000
	122 Move X0, [X0+2752]
	123 Call 0x1C17CF4
	124 Move X0, 0x22D2000
	125 Move X0, [X0+2760]
	126 Call 0x1C17CF4
	127 Move X0, 0x22D2000
	128 Move X0, [X0+2768]
	129 Call 0x1C17CF4
	130 Move X0, 0x22D2000
	131 Move X0, [X0+2776]
	132 Call 0x1C17CF4
	133 Move X0, 0x22D2000
	134 Move X0, [X0+2784]
	135 Call 0x1C17CF4
	136 Move X0, 0x22D2000
	137 Move X0, [X0+1792]
	138 Call 0x1C17CF4
	139 Move X0, 0x22CB000
	140 Move X0, [X0+1432]
	141 Call 0x1C17CF4
	142 Move X0, 0x22D2000
	143 Move X0, [X0+2792]
	144 Call 0x1C17CF4
	145 Move X0, 0x22D2000
	146 Move X0, [X0+2800]
	147 Call 0x1C17CF4
	148 Move X0, 0x22D2000
	149 Move X0, [X0+2808]
	150 Call 0x1C17CF4
	151 Move X0, 0x22D2000
	152 Move X0, [X0+2816]
	153 Call 0x1C17CF4
	154 Move X0, 0x22D2000
	155 Move X0, [X0+2824]
	156 Call 0x1C17CF4
	157 Move X0, 0x22D2000
	158 Move X0, [X0+2832]
	159 Call 0x1C17CF4
	160 Move X0, 0x22D2000
	161 Move X0, [X0+2840]
	162 Call 0x1C17CF4
	163 Move X0, 0x22D2000
	164 Move X0, [X0+2848]
	165 Call 0x1C17CF4
	166 Move X0, 0x22D2000
	167 Move X0, [X0+2856]
	168 Call 0x1C17CF4
	169 Move X0, 0x22D2000
	170 Move X0, [X0+2864]
	171 Call 0x1C17CF4
	172 Move W8, 1
	173 Move [X19+3680], W8
	174 NotImplemented "Instruction MOVI not yet implemented."
	175 Move [X31+560], X31
	176 Move [X31+512], X31
	177 Move [X31+384], X31
	178 Move [X31+392], X31
	179 Move [X31+400], X31
	180 Move [X31+368], X31
	181 Move [X29+384], V0
	182 Move [X29+392], V0
	183 Move [X29+336], V0
	184 Move [X29+344], V0
	185 Move [X29+304], V0
	186 Move [X29+312], V0
	187 Move [X29+272], V0
	188 Move [X29+280], V0
	189 Move [X29+192], V0
	190 Move [X29+200], V0
	191 Move [X29+160], V0
	192 Move [X29+168], V0
	193 Move [X29+128], V0
	194 Move [X29+136], V0
	195 Move W8, [X21+80]
	196 Compare W8, 0
	197 JumpIfEqual {231}
	198 Move W8, [X21+112]
	199 Compare W8, 0
	200 JumpIfEqual {230}
	201 Move X0, X21
	202 Move X1, X31
	203 Call Component.get_gameObject, X0
	204 Compare X0, 0
	205 JumpIfEqual {1450}
	206 Move X1, X31
	207 Call Object.get_name, X0
	208 Move X8, 0x22D2000
	209 Move X8, [X8+2808]
	210 Move X9, 0x22D2000
	211 Move X9, [X9+2824]
	212 Move X1, X0
	213 Move X8, [X8]
	214 Move X3, X31
	215 Move X2, [X9]
	216 Move X0, X8
	217 Call String.Concat, X0, X1, X2
	218 Move X8, 0x22CB000
	219 Move X8, [X8+2600]
	220 Move X19, X0
	221 Move X8, [X8]
	222 Move W9, [X8+224]
	223 Compare W9, 0
	224 JumpIfNotEqual {227}
	225 Move X0, X8
	226 Call 0x1C17DFC
	227 Move X0, X19
	228 Move X1, X31
	229 Call Debug.Log, X0
	230 Move W0, 1
	231 Move X0, X21
	232 Move X1, X31
	233 Call Component.get_gameObject, X0
	234 Compare X0, 0
	235 JumpIfEqual {1450}
	236 Move X8, 0x22CD000
	237 Move X8, [X8+360]
	238 Move X1, [X8]
	239 Call 0x21E62E4, X0
	240 Move X19, 0x22CB000
	241 Move X19, [X19+1432]
	242 Move X20, X0
	243 Move X8, [X19]
	244 Move W9, [X8+224]
	245 Compare W9, 0
	246 JumpIfNotEqual {249}
	247 Move X0, X8
	248 Call 0x1C17DFC
	249 Move X0, X20
	250 Move X1, X31
	251 Move X2, X31
	252 Call Object.op_Inequality, X0, X1
	253 Move TEMP, X0
	254 And TEMP, TEMP, 1
	255 Compare TEMP, 1
	256 JumpIfEqual {281}
	257 Move X0, X21
	258 Move X1, X31
	259 Call Component.get_gameObject, X0
	260 Compare X0, 0
	261 JumpIfEqual {1450}
	262 Move X8, 0x22D2000
	263 Move X8, [X8+1920]
	264 Move X1, [X8]
	265 Call 0x21E62E4, X0
	266 Move X8, [X19]
	267 Move X20, X0
	268 Move W9, [X8+224]
	269 Compare W9, 0
	270 JumpIfNotEqual {273}
	271 Move X0, X8
	272 Call 0x1C17DFC
	273 Move X0, X20
	274 Move X1, X31
	275 Move X2, X31
	276 Call Object.op_Inequality, X0, X1
	277 Move TEMP, X0
	278 And TEMP, TEMP, 1
	279 Compare TEMP, 1
	280 JumpIfNotEqual {328}
	281 Move W8, [X21+112]
	282 Compare W8, 0
	283 JumpIfEqual {313}
	284 Move X0, X21
	285 Move X1, X31
	286 Call Component.get_gameObject, X0
	287 Compare X0, 0
	288 JumpIfEqual {1450}
	289 Move X1, X31
	290 Call Object.get_name, X0
	291 Move X8, 0x22D2000
	292 Move X8, [X8+2864]
	293 Move X9, 0x22D2000
	294 Move X9, [X9+2832]
	295 Move X1, X0
	296 Move X8, [X8]
	297 Move X3, X31
	298 Move X2, [X9]
	299 Move X0, X8
	300 Call String.Concat, X0, X1, X2
	301 Move X8, 0x22CB000
	302 Move X8, [X8+2600]
	303 Move X19, X0
	304 Move X8, [X8]
	305 Move W9, [X8+224]
	306 Compare W9, 0
	307 JumpIfNotEqual {310}
	308 Move X0, X8
	309 Call 0x1C17DFC
	310 Move X0, X19
	311 Move X1, X31
	312 Call Debug.LogError, X0
	313 Move W0, W31
	314 Add X31, X31, 992
	315 Move X20, [X31+80]
	316 Move X19, [X31+88]
	317 Move X22, [X31+64]
	318 Move X21, [X31+72]
	319 Move X24, [X31+48]
	320 Move X23, [X31+56]
	321 Move X26, [X31+32]
	322 Move X25, [X31+40]
	323 Move X28, [X31+16]
	324 Move X27, [X31+24]
	325 Move X29, [X31+96]
	326 Move X30, [X31+104]
	327 Return X0
	328 Move X0, X21
	329 Move X1, X31
	330 Call Component.get_gameObject, X0
	331 Compare X0, 0
	332 JumpIfEqual {1450}
	333 Move X1, X31
	334 Call GameObject.get_transform, X0
	335 Compare X0, 0
	336 JumpIfEqual {1450}
	337 Move X1, X31
	338 Call Transform.get_position, X0
	339 Move X0, X21
	340 Move X1, X31
	341 Move [X21+36], S0
	342 Move [X21+44], S1
	343 Move [X21+44], S2
	344 Call Component.get_gameObject, X0
	345 Compare X0, 0
	346 JumpIfEqual {1450}
	347 Move X1, X31
	348 Call GameObject.get_transform, X0
	349 Compare X0, 0
	350 JumpIfEqual {1450}
	351 Move X1, X31
	352 Call Transform.get_eulerAngles, X0
	353 Move X0, X21
	354 Move X1, X31
	355 Move [X21+48], S0
	356 Move [X21+56], S1
	357 Move [X21+56], S2
	358 Call Component.get_gameObject, X0
	359 Compare X0, 0
	360 JumpIfEqual {1450}
	361 Move X1, X31
	362 Call GameObject.get_transform, X0
	363 Compare X0, 0
	364 JumpIfEqual {1450}
	365 Move X1, X31
	366 Call Transform.get_lossyScale, X0
	367 Move X0, X21
	368 Move X1, X31
	369 Move [X21+60], S0
	370 Move [X21+68], S1
	371 Move [X21+68], S2
	372 Move [X31+32], X21
	373 Call Component.get_gameObject, X0
	374 Compare X0, 0
	375 JumpIfEqual {1450}
	376 Move X1, X31
	377 Call GameObject.get_transform, X0
	378 Move X21, 0x25B0000
	379 Move W8, [X21+1923]
	380 Move X20, X0
	381 Compare W8, 0
	382 JumpIfNotEqual {388}
	383 Move X0, 0x22CB000
	384 Move X0, [X0+1440]
	385 Call 0x1C17CF4
	386 Move W8, 1
	387 Move [X21+1923], W8
	388 Compare X20, 0
	389 JumpIfEqual {1450}
	390 Move X19, 0x22CB000
	391 Move X19, [X19+1440]
	392 Move X0, X20
	393 Move X1, X31
	394 Move X8, [X19]
	395 Move X8, [X8+184]
	396 Move S1, [X8+4]
	397 Move S2, [X8+8]
	398 Move V0, [X8]
	399 Call Transform.set_position, X0, X1
	400 Move X0, [X31+32]
	401 Move X1, X31
	402 Call Component.get_gameObject, X0
	403 Compare X0, 0
	404 JumpIfEqual {1450}
	405 Move X1, X31
	406 Call GameObject.get_transform, X0
	407 Move W8, [X21+1923]
	408 Move X20, X0
	409 Compare W8, 0
	410 JumpIfNotEqual {416}
	411 Move X0, 0x22CB000
	412 Move X0, [X0+1440]
	413 Call 0x1C17CF4
	414 Move W8, 1
	415 Move [X21+1923], W8
	416 Compare X20, 0
	417 JumpIfEqual {1450}
	418 Move X8, [X19]
	419 Move X0, X20
	420 Move X1, X31
	421 Move X8, [X8+184]
	422 Move S1, [X8+4]
	423 Move S2, [X8+8]
	424 Move V0, [X8]
	425 Call Transform.set_eulerAngles, X0, X1
	426 Move X0, [X31+32]
	427 Move X1, X31
	428 Call Component.get_gameObject, X0
	429 Compare X0, 0
	430 JumpIfEqual {1450}
	431 Move X1, X31
	432 Call GameObject.get_transform, X0
	433 Move X21, 0x25B0000
	434 Move W8, [X21+2139]
	435 Move X20, X0
	436 Compare W8, 0
	437 JumpIfNotEqual {443}
	438 Move X0, 0x22CB000
	439 Move X0, [X0+1440]
	440 Call 0x1C17CF4
	441 Move W8, 1
	442 Move [X21+2139], W8
	443 Compare X20, 0
	444 JumpIfEqual {1450}
	445 Move X8, [X19]
	446 Move X0, X20
	447 Move X1, X31
	448 Move X8, [X8+184]
	449 Move S1, [X8+16]
	450 Move S2, [X8+20]
	451 Move V0, [X8+12]
	452 Call Transform.set_localScale, X0, X1
	453 Move X19, [X31+32]
	454 Move X0, X19
	455 Call RuntimeMeshCombiner.GetValidatedTargetGameObjects, X0
	456 Compare X0, 0
	457 JumpIfEqual {1450}
	458 Move X8, [X0+24]
	459 Move X9, X0
	460 Compare X8, 0
	461 JumpIfEqual {690}
	462 Move X8, 0x22D2000
	463 Move X8, [X8+2576]
	464 Move [X31+24], X9
	465 Move X0, [X8]
	466 Call 0x1C17F10
	467 Move X8, 0x22D2000
	468 Move X8, [X8+2560]
	469 Move X21, X0
	470 Move X1, [X8]
	471 Call Dictionary`2<Object, Object>..ctor, X0
	472 Move X9, [X31+24]
	473 Move W8, [X9+24]
	474 NotImplemented "Instruction CMP not yet implemented."
	475 Move X20, 0x22D2000
	476 Move X20, [X20+2544]
	477 Move W10, W31
	478 NotImplemented "Instruction CMP not yet implemented."
	479 Add X8, X9, W10
	480 Move X26, [X8+32]
	481 Move [X31+16], W10
	482 Compare X26, 0
	483 JumpIfEqual {1450}
	484 Move X0, [X26+24]
	485 Compare X0, 0
	486 JumpIfEqual {1450}
	487 Move X19, X31
	488 Move X1, X31
	489 Call MeshFilter.get_sharedMesh, X0
	490 Compare X0, 0
	491 JumpIfEqual {1450}
	492 Move X1, X31
	493 Call Mesh.get_subMeshCount, X0
	494 NotImplemented "Instruction CMP not yet implemented."
	495 Move X0, [X26+32]
	496 Compare X0, 0
	497 JumpIfEqual {1450}
	498 Move X1, X31
	499 Call Renderer.get_sharedMaterials, X0
	500 Compare X0, 0
	501 JumpIfEqual {1450}
	502 Move W8, [X0+24]
	503 NotImplemented "Instruction CMP not yet implemented."
	504 Compare X21, 0
	505 JumpIfEqual {1450}
	506 Add X8, X0, X19
	507 Move X22, [X8+32]
	508 Move X2, [X20]
	509 Move X0, X21
	510 Move X1, X22
	511 Call Dictionary`2<Object, Object>.ContainsKey, X0, X1
	512 Move TEMP, X0
	513 And TEMP, TEMP, 1
	514 Compare TEMP, 1
	515 JumpIfNotEqual {568}
	516 Move X8, 0x22D2000
	517 Move X8, [X8+2568]
	518 Move X0, X21
	519 Move X1, X22
	520 Move X2, [X8]
	521 Call Dictionary`2<Object, Object>.get_Item, X0, X1
	522 Move X8, [X26+16]
	523 Compare X8, 0
	524 JumpIfEqual {1450}
	525 Move X23, X0
	526 Move X0, X8
	527 Move X1, X31
	528 Call GameObject.get_transform, X0
	529 Move X8, 0x22D2000
	530 Move X27, [X26+24]
	531 Move X28, [X26+32]
	532 Move X8, [X8+2800]
	533 Move X25, X0
	534 Move X8, [X8]
	535 Move X0, X8
	536 Call 0x1C17F10
	537 Move X1, X31
	538 Move X24, X0
	539 Call Object..ctor, X0
	540 Move [X24+16], X25
	541 Move [X24+24], X27
	542 Move [X24+32], X28
	543 Move [X24+40], W19
	544 Compare X23, 0
	545 JumpIfEqual {1450}
	546 Move X9, 0x22D2000
	547 Move W10, [X23+28]
	548 Move X8, [X23+16]
	549 Move X9, [X9+2656]
	550 Add W10, W10, 1
	551 Move X9, [X9]
	552 Move [X23+28], W10
	553 Compare X8, 0
	554 JumpIfEqual {1450}
	555 NotImplemented "Instruction LDRSW not yet implemented."
	556 Move W11, [X8+24]
	557 NotImplemented "Instruction CMP not yet implemented."
	558 Add W9, W10, 1
	559 Add X8, X8, X10
	560 Move [X23+24], W9
	561 Move [X8+32], X24
	562 Move X8, [X9+32]
	563 Move X0, X23
	564 Move X1, X24
	565 Move X8, [X8+192]
	566 Move X2, [X8+112]
	567 Call List`1<Object>.AddWithResize, X0, X1
	568 Move X2, [X20]
	569 Move X0, X21
	570 Move X1, X22
	571 Call Dictionary`2<Object, Object>.ContainsKey, X0, X1
	572 Move TEMP, X0
	573 And TEMP, TEMP, 1
	574 Compare TEMP, 1
	575 JumpIfEqual {636}
	576 Move X8, 0x22D2000
	577 Move X8, [X8+2784]
	578 Move X0, [X8]
	579 Call 0x1C17F10
	580 Move X8, 0x22D2000
	581 Move X8, [X8+2728]
	582 Move X23, X0
	583 Move X1, [X8]
	584 Call List`1<Object>..ctor, X0
	585 Move X0, [X26+16]
	586 Compare X0, 0
	587 JumpIfEqual {1450}
	588 Move X1, X31
	589 Call GameObject.get_transform, X0
	590 Move X8, 0x22D2000
	591 Move X27, [X26+24]
	592 Move X28, [X26+32]
	593 Move X8, [X8+2800]
	594 Move X25, X0
	595 Move X8, [X8]
	596 Move X0, X8
	597 Call 0x1C17F10
	598 Move X1, X31
	599 Move X24, X0
	600 Call Object..ctor, X0
	601 Move [X24+16], X25
	602 Move [X24+24], X27
	603 Move [X24+32], X28
	604 Move [X24+40], W19
	605 Compare X23, 0
	606 JumpIfEqual {1450}
	607 Move X9, 0x22D2000
	608 Move W10, [X23+28]
	609 Move X8, [X23+16]
	610 Move X9, [X9+2656]
	611 Add W10, W10, 1
	612 Move X9, [X9]
	613 Move [X23+28], W10
	614 Compare X8, 0
	615 JumpIfEqual {1450}
	616 NotImplemented "Instruction LDRSW not yet implemented."
	617 Move W11, [X8+24]
	618 NotImplemented "Instruction CMP not yet implemented."
	619 Add W9, W10, 1
	620 Add X8, X8, X10
	621 Move [X23+24], W9
	622 Move [X8+32], X24
	623 Move X8, [X9+32]
	624 Move X0, X23
	625 Move X1, X24
	626 Move X8, [X8+192]
	627 Move X2, [X8+112]
	628 Call List`1<Object>.AddWithResize, X0, X1
	629 Move X8, 0x22D2000
	630 Move X8, [X8+2536]
	631 Move X0, X21
	632 Move X1, X22
	633 Move X2, X23
	634 Move X3, [X8]
	635 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	636 Move X0, [X26+24]
	637 Add X19, X19, 1
	638 Compare X0, 0
	639 JumpIfNotEqual {488}
	640 Move X9, [X31+24]
	641 Move W10, [X31+16]
	642 Move W8, [X9+24]
	643 Add W10, W10, 1
	644 NotImplemented "Instruction CMP not yet implemented."
	645 Move X19, [X31+32]
	646 Move X1, X31
	647 Move X0, X19
	648 Call Component.get_gameObject, X0
	649 Compare X0, 0
	650 JumpIfEqual {1450}
	651 Move X8, 0x22D2000
	652 Move X8, [X8+1776]
	653 Move X1, [X8]
	654 Call 0x21E61FC, X0
	655 Move X22, X0
	656 Move X0, X19
	657 Move X1, X31
	658 Call Component.get_gameObject, X0
	659 Compare X0, 0
	660 JumpIfEqual {1450}
	661 Move X8, 0x22D2000
	662 Move X8, [X8+1784]
	663 Move X1, [X8]
	664 Call 0x21E61FC, X0
	665 Move X9, [X31+24]
	666 Move [X31+16], X0
	667 Move W8, [X9+24]
	668 NotImplemented "Instruction CMP not yet implemented."
	669 Move X19, X31
	670 Move W23, W31
	671 Add X20, X9, 32
	672 NotImplemented "Instruction CMP not yet implemented."
	673 Move X8, [X20]
	674 Compare X8, 0
	675 JumpIfEqual {1450}
	676 Move X0, [X8+24]
	677 Compare X0, 0
	678 JumpIfEqual {1450}
	679 Move X1, X31
	680 Call MeshFilter.get_sharedMesh, X0
	681 Compare X0, 0
	682 JumpIfEqual {1450}
	683 Move X1, X31
	684 Call Mesh.get_vertexCount, X0
	685 Move X8, [X31+24]
	686 Add X19, X19, 1
	687 Add W23, W0, W23
	688 Move W8, [X8+24]
	689 NotImplemented "Instruction CMP not yet implemented."
	690 Move W8, [X19+112]
	691 Compare W8, 0
	692 JumpIfEqual {313}
	693 Move X8, 0x22CB000
	694 Move X8, [X8+2600]
	695 Move X0, [X8]
	696 Move W8, [X0+224]
	697 Compare W8, 0
	698 JumpIfNotEqual {700}
	699 Call 0x1C17DFC
	700 Move X8, 0x22D2000
	701 Move X8, [X8+2840]
	702 Move X0, [X8]
	703 Move W23, W31
	704 Move [X31+8], X22
	705 Move X8, 0x22D2000
	706 Move X8, [X8+2768]
	707 Move X0, [X8]
	708 Call 0x1C17F10
	709 Move X8, 0x22D2000
	710 Move X8, [X8+2736]
	711 Move X24, X0
	712 Move X1, [X8]
	713 Call List`1<Object>..ctor, X0
	714 Compare X21, 0
	715 JumpIfEqual {1450}
	716 Move X8, 0x22D2000
	717 Move X8, [X8+2552]
	718 Move X0, X21
	719 Move X1, [X8]
	720 Add X8, X31, 888
	721 Call Dictionary`2<Object, Object>.GetEnumerator, X0
	722 Add X8, X31, 633
	723 NotImplemented "Instruction LDUR not yet implemented."
	724 Add X8, X31, 649
	725 NotImplemented "Instruction LDUR not yet implemented."
	726 Move X25, 0x22D2000
	727 Move X8, [X31+920]
	728 Move X25, [X25+2608]
	729 Move [X29+384], V0
	730 Move [X29+392], V1
	731 Move X20, 0x22D2000
	732 Move X22, 0x22D2000
	733 Move X20, [X20+2752]
	734 Move X22, [X22+2680]
	735 Move W19, 104
	736 Move [X31+560], X8
	737 Move X1, [X25]
	738 Add X0, X31, 528
	739 Call Enumerator<Object, Object>.MoveNext, X0
	740 Move TEMP, X0
	741 And TEMP, TEMP, 1
	742 Compare TEMP, 1
	743 JumpIfNotEqual {927}
	744 Move X8, 0x22D2000
	745 Move X26, [X31+552]
	746 Move X8, [X8+2776]
	747 Move X0, [X8]
	748 Call 0x1C17F10
	749 Move X8, 0x22D2000
	750 Move X8, [X8+2712]
	751 Move X25, X0
	752 Move X1, [X8]
	753 Call List`1<CombineInstance>..ctor, X0
	754 Compare X26, 0
	755 JumpIfEqual {1463}
	756 Move W8, [X26+24]
	757 NotImplemented "Instruction CMP not yet implemented."
	758 Move W27, W31
	759 Move X2, [X20]
	760 NotImplemented "Instruction MOVI not yet implemented."
	761 Move [X31+512], X31
	762 Move [X29+336], V0
	763 Move [X29+344], V0
	764 Move [X29+304], V0
	765 Move [X29+312], V0
	766 Move [X29+272], V0
	767 Move [X29+280], V0
	768 Move X0, X26
	769 Move W1, W27
	770 Call List`1<Object>.get_Item, X0, X1
	771 Compare X0, 0
	772 JumpIfEqual {1455}
	773 Move X0, [X0+24]
	774 Compare X0, 0
	775 JumpIfEqual {1456}
	776 Move X1, X31
	777 Call MeshFilter.get_sharedMesh, X0
	778 Move X1, X0
	779 Add X0, X31, 416
	780 Move X2, X31
	781 Call CombineInstance.set_mesh, X0, X1
	782 Move X2, [X20]
	783 Move X0, X26
	784 Move W1, W27
	785 Call List`1<Object>.get_Item, X0, X1
	786 Compare X0, 0
	787 JumpIfEqual {1454}
	788 Move W1, [X0+40]
	789 Add X0, X31, 416
	790 Move X2, X31
	791 Call CombineInstance.set_subMeshIndex, X0, X1
	792 Move X2, [X20]
	793 Move X0, X26
	794 Move W1, W27
	795 Call List`1<Object>.get_Item, X0, X1
	796 Compare X0, 0
	797 JumpIfEqual {1452}
	798 Move X0, [X0+16]
	799 Compare X0, 0
	800 JumpIfEqual {1453}
	801 Add X8, X31, 888
	802 Move X1, X31
	803 Call Transform.get_localToWorldMatrix, X0
	804 Add X8, X31, 633
	805 NotImplemented "Instruction LDUR not yet implemented."
	806 Add X8, X31, 649
	807 NotImplemented "Instruction LDUR not yet implemented."
	808 Add X8, X31, 665
	809 NotImplemented "Instruction LDUR not yet implemented."
	810 Add X8, X31, 681
	811 NotImplemented "Instruction LDUR not yet implemented."
	812 Move [X29+64], V0
	813 Move [X29+72], V1
	814 Move [X29+96], V2
	815 Move [X29+104], V3
	816 Add X0, X31, 416
	817 Add X1, X31, 208
	818 Move X2, X31
	819 Call CombineInstance.set_transform, X0, X1
	820 Add X0, X31, 888
	821 Add X1, X31, 416
	822 Move W2, 104
	823 Call 0x3EB2AC0
	824 Compare X25, 0
	825 JumpIfEqual {1458}
	826 Move X28, [X22]
	827 Add X0, X31, 576
	828 Add X1, X31, 888
	829 Move W2, 104
	830 Call 0x3EB2AC0
	831 Move W9, [X25+28]
	832 Move X8, [X25+16]
	833 Add W9, W9, 1
	834 Move [X25+28], W9
	835 Compare X8, 0
	836 JumpIfEqual {1457}
	837 NotImplemented "Instruction LDRSW not yet implemented."
	838 Move W10, [X8+24]
	839 NotImplemented "Instruction CMP not yet implemented."
	840 NotImplemented "Instruction MADD not yet implemented."
	841 Add W10, W9, 1
	842 Add X0, X8, 32
	843 Add X1, X31, 576
	844 Move W2, 104
	845 Move [X25+24], W10
	846 Call 0x3EB2AC0
	847 Move X8, [X28+32]
	848 Add X0, X31, 680
	849 Add X1, X31, 576
	850 Move W2, 104
	851 Move X8, [X8+192]
	852 Move X28, [X8+112]
	853 Call 0x3EB2AC0
	854 Add X1, X31, 680
	855 Move X0, X25
	856 Move X2, X28
	857 Call List`1<CombineInstance>.AddWithResize, X0, X1
	858 Move W8, [X26+24]
	859 Add W27, W27, 1
	860 NotImplemented "Instruction CMP not yet implemented."
	861 Move X8, 0x22D2000
	862 Move X8, [X8+1792]
	863 Move X0, [X8]
	864 Call 0x1C17F10
	865 Move X26, X0
	866 Move X1, X31
	867 Call Mesh..ctor, X0
	868 Move X8, [X31+32]
	869 Move W8, [X8+32]
	870 NotImplemented "Instruction CMP not yet implemented."
	871 Compare X26, 0
	872 JumpIfEqual {1469}
	873 Move X0, X26
	874 Move W1, W31
	875 Move X2, X31
	876 Call Mesh.set_indexFormat, X0, X1
	877 Move X8, [X31+32]
	878 Move W8, [X8+32]
	879 NotImplemented "Instruction CMP not yet implemented."
	880 Compare X26, 0
	881 JumpIfEqual {1468}
	882 Move W1, 1
	883 Move X0, X26
	884 Move X2, X31
	885 Call Mesh.set_indexFormat, X0, X1
	886 Compare X25, 0
	887 JumpIfEqual {1466}
	888 Move X8, 0x22D2000
	889 Move X8, [X8+2704]
	890 Move X1, [X8]
	891 Move X0, X25
	892 Move X25, 0x22D2000
	893 Move X25, [X25+2608]
	894 Call List`1<CombineInstance>.ToArray, X0
	895 Move X1, X0
	896 Compare X26, 0
	897 JumpIfEqual {1464}
	898 Move W2, 1
	899 Move W3, 1
	900 Move X0, X26
	901 Move X4, X31
	902 Call Mesh.CombineMeshes, X0, X1, X2, X3
	903 Compare X24, 0
	904 JumpIfEqual {1467}
	905 Move X9, 0x22D2000
	906 Move W10, [X24+28]
	907 Move X8, [X24+16]
	908 Move X9, [X9+2648]
	909 Add W10, W10, 1
	910 Move X9, [X9]
	911 Move [X24+28], W10
	912 Compare X8, 0
	913 JumpIfEqual {1465}
	914 NotImplemented "Instruction LDRSW not yet implemented."
	915 Move W11, [X8+24]
	916 NotImplemented "Instruction CMP not yet implemented."
	917 Add W9, W10, 1
	918 Add X8, X8, X10
	919 Move [X24+24], W9
	920 Move [X8+32], X26
	921 Move X8, [X9+32]
	922 Move X8, [X8+192]
	923 Move X2, [X8+112]
	924 Move X0, X24
	925 Move X1, X26
	926 Call List`1<Object>.AddWithResize, X0, X1
	927 Move X8, 0x22D2000
	928 Move X8, [X8+2592]
	929 Add X0, X31, 528
	930 Move X1, [X8]
	931 Call Enumerator<Object, Object>.Dispose, X0
	932 Move X8, 0x22D2000
	933 Move X8, [X8+2776]
	934 Move X0, [X8]
	935 Call 0x1C17F10
	936 Move X8, 0x22D2000
	937 Move X8, [X8+2712]
	938 Move X25, X0
	939 Move X1, [X8]
	940 Call List`1<CombineInstance>..ctor, X0
	941 Compare X24, 0
	942 JumpIfEqual {1450}
	943 Move X8, 0x22D1000
	944 Move X8, [X8+2688]
	945 Move X0, X24
	946 Move X1, [X8]
	947 Add X8, X31, 888
	948 Call List`1<Object>.GetEnumerator, X0
	949 Add X8, X31, 633
	950 NotImplemented "Instruction LDUR not yet implemented."
	951 Move X8, [X31+904]
	952 Move X19, 0x22D1000
	953 Move X24, 0x22CE000
	954 Move X19, [X19+2600]
	955 Move X24, [X24+624]
	956 Move X20, 0x25AF000
	957 Move W27, 1
	958 Move [X29+15], V0
	959 Move [X31+400], X8
	960 Move W28, 104
	961 Move X1, [X19]
	962 Add X0, X31, 384
	963 Call Enumerator<Object>.MoveNext, X0
	964 Move TEMP, X0
	965 And TEMP, TEMP, 1
	966 Compare TEMP, 1
	967 JumpIfNotEqual {1042}
	968 Move X1, [X31+400]
	969 NotImplemented "Instruction MOVI not yet implemented."
	970 Move [X29+128], V0
	971 Move [X29+136], V0
	972 Move [X29+160], V0
	973 Move [X29+168], V0
	974 Move [X29+192], V0
	975 Move [X29+200], V0
	976 Move [X31+368], X31
	977 Add X0, X31, 272
	978 Move X2, X31
	979 Call CombineInstance.set_mesh, X0, X1
	980 Add X0, X31, 272
	981 Move W1, W31
	982 Move X2, X31
	983 Call CombineInstance.set_subMeshIndex, X0, X1
	984 Move W8, [X20+2752]
	985 Compare W8, 0
	986 JumpIfNotEqual {990}
	987 Move X0, X24
	988 Call 0x1C17CF4
	989 Move [X20+2752], W27
	990 Move X8, [X24]
	991 Move X8, [X8+184]
	992 Move V1, [X8+96]
	993 Move V0, [X8+112]
	994 Move V2, [X8+64]
	995 Move V3, [X8+80]
	996 Move [X29+32], V1
	997 Move [X29+40], V0
	998 Move [X31+144], V2
	999 Move [X31+152], V3
	1000 Add X0, X31, 272
	1001 Add X1, X31, 144
	1002 Move X2, X31
	1003 Call CombineInstance.set_transform, X0, X1
	1004 Add X0, X31, 40
	1005 Add X1, X31, 272
	1006 Move W2, 104
	1007 Call 0x3EB2AC0
	1008 Compare X25, 0
	1009 JumpIfEqual {1461}
	1010 Move X26, [X22]
	1011 Add X0, X31, 784
	1012 Add X1, X31, 40
	1013 Move W2, 104
	1014 Call 0x3EB2AC0
	1015 Move W9, [X25+28]
	1016 Move X8, [X25+16]
	1017 Add W9, W9, 1
	1018 Move [X25+28], W9
	1019 Compare X8, 0
	1020 JumpIfEqual {1462}
	1021 NotImplemented "Instruction LDRSW not yet implemented."
	1022 Move W10, [X8+24]
	1023 NotImplemented "Instruction CMP not yet implemented."
	1024 NotImplemented "Instruction MADD not yet implemented."
	1025 Add W10, W9, 1
	1026 Add X0, X8, 32
	1027 Add X1, X31, 784
	1028 Move W2, 104
	1029 Move [X25+24], W10
	1030 Call 0x3EB2AC0
	1031 Move X8, [X26+32]
	1032 Add X0, X31, 888
	1033 Add X1, X31, 784
	1034 Move W2, 104
	1035 Move X8, [X8+192]
	1036 Move X26, [X8+112]
	1037 Call 0x3EB2AC0
	1038 Add X1, X31, 888
	1039 Move X0, X25
	1040 Move X2, X26
	1041 Call List`1<CombineInstance>.AddWithResize, X0, X1
	1042 Move X8, 0x22D1000
	1043 Move X8, [X8+2584]
	1044 Add X0, X31, 384
	1045 Move X1, [X8]
	1046 Call Enumerator<Object>.Dispose, X0
	1047 Move X8, 0x22D1000
	1048 Move X8, [X8+1792]
	1049 Move X0, [X8]
	1050 Call 0x1C17F10
	1051 Move X1, X31
	1052 Move X24, X0
	1053 Call Mesh..ctor, X0
	1054 Move X8, [X31+32]
	1055 Move X19, [X31+8]
	1056 Move W8, [X8+32]
	1057 NotImplemented "Instruction CMP not yet implemented."
	1058 Compare X24, 0
	1059 JumpIfEqual {1450}
	1060 Move X0, X24
	1061 Move W1, W31
	1062 Move X2, X31
	1063 Call Mesh.set_indexFormat, X0, X1
	1064 Move X8, [X31+32]
	1065 Move W8, [X8+32]
	1066 NotImplemented "Instruction CMP not yet implemented."
	1067 Compare X24, 0
	1068 JumpIfEqual {1450}
	1069 Move W1, 1
	1070 Move X0, X24
	1071 Move X2, X31
	1072 Call Mesh.set_indexFormat, X0, X1
	1073 Move X0, [X31+32]
	1074 Move X1, X31
	1075 Call Component.get_gameObject, X0
	1076 Compare X0, 0
	1077 JumpIfEqual {1450}
	1078 Move X1, X31
	1079 Call Object.get_name, X0
	1080 Move X8, 0x22D1000
	1081 Move X8, [X8+2856]
	1082 Move X2, X31
	1083 Move X1, [X8]
	1084 Call String.Concat, X0, X1
	1085 Compare X24, 0
	1086 JumpIfEqual {1450}
	1087 Move X1, X0
	1088 Move X0, X24
	1089 Move X2, X31
	1090 Call Object.set_name, X0, X1
	1091 Compare X25, 0
	1092 JumpIfEqual {1450}
	1093 Move X8, 0x22D1000
	1094 Move X8, [X8+2704]
	1095 Move X0, X25
	1096 Move X1, [X8]
	1097 Call List`1<CombineInstance>.ToArray, X0
	1098 Move X1, X0
	1099 Move X0, X24
	1100 Move W2, W31
	1101 Move X3, X31
	1102 Call Mesh.CombineMeshes, X0, X1, X2
	1103 Move X0, X24
	1104 Move X1, X31
	1105 Call Mesh.RecalculateBounds, X0
	1106 Move X8, [X31+32]
	1107 Move W8, [X8+98]
	1108 Compare W8, 0
	1109 JumpIfEqual {1113}
	1110 Move X0, X24
	1111 Move X1, X31
	1112 Call Mesh.RecalculateNormals, X0
	1113 Move X8, [X31+32]
	1114 Move X20, 0x22D1000
	1115 Move W8, [X8+99]
	1116 Move X20, [X20+2608]
	1117 Compare W8, 0
	1118 JumpIfEqual {1122}
	1119 Move X0, X24
	1120 Move X1, X31
	1121 Call Mesh.RecalculateTangents, X0
	1122 Move X8, [X31+32]
	1123 Move W8, [X8+100]
	1124 Compare W8, 0
	1125 JumpIfEqual {1129}
	1126 Move X0, X24
	1127 Move X1, X31
	1128 Call Mesh.Optimize, X0
	1129 Compare X19, 0
	1130 JumpIfEqual {1450}
	1131 Move X0, X19
	1132 Move X1, X24
	1133 Move X2, X31
	1134 Call MeshFilter.set_sharedMesh, X0, X1
	1135 Move X8, 0x22D1000
	1136 Move X8, [X8+2760]
	1137 Move X0, [X8]
	1138 Call 0x1C17F10
	1139 Move X8, 0x22D1000
	1140 Move X8, [X8+2720]
	1141 Move X23, X0
	1142 Move X1, [X8]
	1143 Call List`1<Object>..ctor, X0
	1144 Move X8, 0x22D1000
	1145 Move X8, [X8+2552]
	1146 Move X0, X21
	1147 Move X1, [X8]
	1148 Add X8, X31, 40
	1149 Call Dictionary`2<Object, Object>.GetEnumerator, X0
	1150 NotImplemented "Instruction LDUR not yet implemented."
	1151 NotImplemented "Instruction LDUR not yet implemented."
	1152 Move X8, [X31+72]
	1153 Move X19, 0x22D1000
	1154 Move [X29+384], V0
	1155 Move [X29+392], V1
	1156 Move [X31+560], X8
	1157 Move X19, [X19+2672]
	1158 Move X1, [X20]
	1159 Add X0, X31, 528
	1160 Call Enumerator<Object, Object>.MoveNext, X0
	1161 Move TEMP, X0
	1162 And TEMP, TEMP, 1
	1163 Compare TEMP, 1
	1164 JumpIfNotEqual {1187}
	1165 Compare X23, 0
	1166 JumpIfEqual {1459}
	1167 Move W10, [X23+28]
	1168 Move X1, [X31+544]
	1169 Move X8, [X23+16]
	1170 Move X9, [X19]
	1171 Add W10, W10, 1
	1172 Move [X23+28], W10
	1173 Compare X8, 0
	1174 JumpIfEqual {1460}
	1175 NotImplemented "Instruction LDRSW not yet implemented."
	1176 Move W11, [X8+24]
	1177 NotImplemented "Instruction CMP not yet implemented."
	1178 Add W9, W10, 1
	1179 Add X8, X8, X10
	1180 Move [X23+24], W9
	1181 Move [X8+32], X1
	1182 Move X8, [X9+32]
	1183 Move X8, [X8+192]
	1184 Move X2, [X8+112]
	1185 Move X0, X23
	1186 Call List`1<Object>.AddWithResize, X0, X1
	1187 Move X8, 0x22D1000
	1188 Move X8, [X8+2592]
	1189 Add X0, X31, 528
	1190 Move X1, [X8]
	1191 Call Enumerator<Object, Object>.Dispose, X0
	1192 Compare X23, 0
	1193 JumpIfEqual {1450}
	1194 Move X8, 0x22D1000
	1195 Move X8, [X8+2696]
	1196 Move X0, X23
	1197 Move X1, [X8]
	1198 Call List`1<Object>.ToArray, X0
	1199 Move X1, X0
	1200 Move X21, [X31+32]
	1201 Move X0, [X31+16]
	1202 Compare X0, 0
	1203 JumpIfEqual {1450}
	1204 Move X2, X31
	1205 Call Renderer.set_sharedMaterials, X0, X1
	1206 Move W8, [X21+84]
	1207 Move X9, [X31+24]
	1208 NotImplemented "Instruction CMP not yet implemented."
	1209 Move W8, [X9+24]
	1210 NotImplemented "Instruction CMP not yet implemented."
	1211 Move X27, 0x22D1000
	1212 Move X28, 0x22D1000
	1213 Move X27, [X27+2792]
	1214 Move X28, [X28+2664]
	1215 Move X19, X31
	1216 Add X20, X9, 32
	1217 NotImplemented "Instruction CMP not yet implemented."
	1218 Move X29, [X20]
	1219 Compare X29, 0
	1220 JumpIfEqual {1450}
	1221 Move X23, [X29+16]
	1222 Compare X23, 0
	1223 JumpIfEqual {1450}
	1224 Move X21, [X21+72]
	1225 Move X0, X23
	1226 Move X1, X31
	1227 Call GameObject.get_activeSelf, X0
	1228 Move X24, [X29+32]
	1229 Compare X24, 0
	1230 JumpIfEqual {1450}
	1231 Move W25, W0
	1232 Move X0, X24
	1233 Move X1, X31
	1234 Call Renderer.get_enabled, X0
	1235 Move X8, [X27]
	1236 Move W26, W0
	1237 Move X0, X8
	1238 Call 0x1C17F10
	1239 Move X1, X31
	1240 Move X22, X0
	1241 And W25, W25, 1
	1242 And W26, W26, 1
	1243 Call Object..ctor, X0
	1244 Move [X22+16], X23
	1245 Move [X22+24], W25
	1246 Move [X22+32], X24
	1247 Move [X22+40], W26
	1248 Compare X21, 0
	1249 JumpIfEqual {1450}
	1250 Move W10, [X21+28]
	1251 Move X8, [X21+16]
	1252 Move X9, [X28]
	1253 Add W10, W10, 1
	1254 Move [X21+28], W10
	1255 Compare X8, 0
	1256 JumpIfEqual {1450}
	1257 NotImplemented "Instruction LDRSW not yet implemented."
	1258 Move W11, [X8+24]
	1259 NotImplemented "Instruction CMP not yet implemented."
	1260 Add W9, W10, 1
	1261 Add X8, X8, X10
	1262 Move [X21+24], W9
	1263 Move [X8+32], X22
	1264 Move X8, [X9+32]
	1265 Move X0, X21
	1266 Move X1, X22
	1267 Move X8, [X8+192]
	1268 Move X2, [X8+112]
	1269 Call List`1<Object>.AddWithResize, X0, X1
	1270 Move X0, [X29+16]
	1271 Move X21, [X31+32]
	1272 Compare X0, 0
	1273 JumpIfEqual {1450}
	1274 Move W1, W31
	1275 Move X2, X31
	1276 Call GameObject.SetActive, X0, X1
	1277 Move X9, [X31+24]
	1278 Add X19, X19, 1
	1279 Move W8, [X9+24]
	1280 NotImplemented "Instruction CMP not yet implemented."
	1281 Move W8, [X21+88]
	1282 Compare W8, 0
	1283 JumpIfEqual {1294}
	1284 Move X0, X21
	1285 Move X1, X31
	1286 Call Component.get_gameObject, X0
	1287 Compare X0, 0
	1288 JumpIfEqual {1450}
	1289 Move X8, 0x22CC000
	1290 Move X8, [X8+352]
	1291 Move X1, [X8]
	1292 Call 0x21E61FC, X0
	1293 Move X9, [X31+24]
	1294 Move W8, [X21+84]
	1295 Compare W8, 0
	1296 JumpIfNotEqual {1369}
	1297 Move W8, [X9+24]
	1298 NotImplemented "Instruction CMP not yet implemented."
	1299 Move X27, 0x22D1000
	1300 Move X28, 0x22D1000
	1301 Move X27, [X27+2792]
	1302 Move X28, [X28+2664]
	1303 Move X19, X31
	1304 Add X20, X9, 32
	1305 NotImplemented "Instruction CMP not yet implemented."
	1306 Move X29, [X20]
	1307 Compare X29, 0
	1308 JumpIfEqual {1450}
	1309 Move X23, [X29+16]
	1310 Compare X23, 0
	1311 JumpIfEqual {1450}
	1312 Move X21, [X21+72]
	1313 Move X0, X23
	1314 Move X1, X31
	1315 Call GameObject.get_activeSelf, X0
	1316 Move X24, [X29+32]
	1317 Compare X24, 0
	1318 JumpIfEqual {1450}
	1319 Move W25, W0
	1320 Move X0, X24
	1321 Move X1, X31
	1322 Call Renderer.get_enabled, X0
	1323 Move X8, [X27]
	1324 Move W26, W0
	1325 Move X0, X8
	1326 Call 0x1C17F10
	1327 Move X1, X31
	1328 Move X22, X0
	1329 And W25, W25, 1
	1330 And W26, W26, 1
	1331 Call Object..ctor, X0
	1332 Move [X22+16], X23
	1333 Move [X22+24], W25
	1334 Move [X22+32], X24
	1335 Move [X22+40], W26
	1336 Compare X21, 0
	1337 JumpIfEqual {1450}
	1338 Move W10, [X21+28]
	1339 Move X8, [X21+16]
	1340 Move X9, [X28]
	1341 Add W10, W10, 1
	1342 Move [X21+28], W10
	1343 Compare X8, 0
	1344 JumpIfEqual {1450}
	1345 NotImplemented "Instruction LDRSW not yet implemented."
	1346 Move W11, [X8+24]
	1347 NotImplemented "Instruction CMP not yet implemented."
	1348 Add W9, W10, 1
	1349 Add X8, X8, X10
	1350 Move [X21+24], W9
	1351 Move [X8+32], X22
	1352 Move X8, [X9+32]
	1353 Move X0, X21
	1354 Move X1, X22
	1355 Move X8, [X8+192]
	1356 Move X2, [X8+112]
	1357 Call List`1<Object>.AddWithResize, X0, X1
	1358 Move X0, [X29+32]
	1359 Move X21, [X31+32]
	1360 Compare X0, 0
	1361 JumpIfEqual {1450}
	1362 Move W1, W31
	1363 Move X2, X31
	1364 Call Renderer.set_enabled, X0, X1
	1365 Move X8, [X31+24]
	1366 Add X19, X19, 1
	1367 Move W8, [X8+24]
	1368 NotImplemented "Instruction CMP not yet implemented."
	1369 Move X0, X21
	1370 Move X1, X31
	1371 Call Component.get_gameObject, X0
	1372 Compare X0, 0
	1373 JumpIfEqual {1450}
	1374 Move X1, X31
	1375 Call GameObject.get_transform, X0
	1376 Compare X0, 0
	1377 JumpIfEqual {1450}
	1378 Move S1, [X21+40]
	1379 Move S2, [X21+44]
	1380 Move V0, [X21+36]
	1381 Move X1, X31
	1382 Call Transform.set_position, X0, X1
	1383 Move X0, X21
	1384 Move X1, X31
	1385 Call Component.get_gameObject, X0
	1386 Compare X0, 0
	1387 JumpIfEqual {1450}
	1388 Move X1, X31
	1389 Call GameObject.get_transform, X0
	1390 Compare X0, 0
	1391 JumpIfEqual {1450}
	1392 Move S1, [X21+52]
	1393 Move S2, [X21+56]
	1394 Move V0, [X21+48]
	1395 Move X1, X31
	1396 Call Transform.set_eulerAngles, X0, X1
	1397 Move X0, X21
	1398 Move X1, X31
	1399 Call Component.get_gameObject, X0
	1400 Compare X0, 0
	1401 JumpIfEqual {1450}
	1402 Move X1, X31
	1403 Call GameObject.get_transform, X0
	1404 Compare X0, 0
	1405 JumpIfEqual {1450}
	1406 Move S1, [X21+64]
	1407 Move S2, [X21+68]
	1408 Move V0, [X21+60]
	1409 Move X1, X31
	1410 Call Transform.set_localScale, X0, X1
	1411 Move W8, [X21+112]
	1412 Compare W8, 0
	1413 JumpIfEqual {1443}
	1414 Move X0, X21
	1415 Move X1, X31
	1416 Call Component.get_gameObject, X0
	1417 Compare X0, 0
	1418 JumpIfEqual {1450}
	1419 Move X1, X31
	1420 Call Object.get_name, X0
	1421 Move X8, 0x22D1000
	1422 Move X8, [X8+2816]
	1423 Move X9, 0x22D1000
	1424 Move X9, [X9+2848]
	1425 Move X1, X0
	1426 Move X8, [X8]
	1427 Move X3, X31
	1428 Move X2, [X9]
	1429 Move X0, X8
	1430 Call String.Concat, X0, X1, X2
	1431 Move X8, 0x22CA000
	1432 Move X8, [X8+2600]
	1433 Move X20, X0
	1434 Move X8, [X8]
	1435 Move W9, [X8+224]
	1436 Compare W9, 0
	1437 JumpIfNotEqual {1440}
	1438 Move X0, X8
	1439 Call 0x1C17DFC
	1440 Move X0, X20
	1441 Move X1, X31
	1442 Call Debug.Log, X0
	1443 Move X0, [X21+120]
	1444 Compare X0, 0
	1445 JumpIfEqual {1448}
	1446 Move X1, X31
	1447 Call UnityEvent.Invoke, X0
	1448 Move W0, 1
	1449 Move [X21+80], W0
	1450 Call 0x1C17F20
	1451 Call 0x1C17F28
	1452 Call 0x1C17F20
	1453 Call 0x1C17F20
	1454 Call 0x1C17F20
	1455 Call 0x1C17F20
	1456 Call 0x1C17F20
	1457 Call 0x1C17F20
	1458 Call 0x1C17F20
	1459 Call 0x1C17F20
	1460 Call 0x1C17F20
	1461 Call 0x1C17F20
	1462 Call 0x1C17F20
	1463 Call 0x1C17F20
	1464 Call 0x1C17F20
	1465 Call 0x1C17F20
	1466 Call 0x1C17F20
	1467 Call 0x1C17F20
	1468 Call 0x1C17F20
	1469 Call 0x1C17F20
	1470 Move X24, X0
	1471 NotImplemented "Instruction CMP not yet implemented."
	1472 Move X0, X24
	1473 Call 0x3EB2AD0
	1474 Move X26, [X0]
	1475 Call 0x3EB2AE0
	1476 Move X8, 0x22D1000
	1477 Move X8, [X8+2584]
	1478 Add X0, X31, 384
	1479 Move X1, [X8]
	1480 Call Enumerator<Object>.Dispose, X0
	1481 Compare X26, 0
	1482 JumpIfEqual {1047}
	1483 Move X0, X26
	1484 Call 0x1C17F18
	1485 Move X26, X31
	1486 Move X24, X0
	1487 Move X8, 0x22D1000
	1488 Move X8, [X8+2584]
	1489 Move X1, [X8]
	1490 Add X0, X31, 384
	1491 Call Enumerator<Object>.Dispose, X0
	1492 Compare X26, 0
	1493 JumpIfEqual {1545}
	1494 Move X0, X26
	1495 Call 0x1C17F18
	1496 Move X24, X0
	1497 NotImplemented "Instruction CMP not yet implemented."
	1498 Move X0, X24
	1499 Call 0x3EB2AD0
	1500 Move X21, [X0]
	1501 Call 0x3EB2AE0
	1502 Move X8, 0x22D1000
	1503 Move X8, [X8+2592]
	1504 Add X0, X31, 528
	1505 Move X1, [X8]
	1506 Call Enumerator<Object, Object>.Dispose, X0
	1507 Compare X21, 0
	1508 JumpIfEqual {1192}
	1509 Move X0, X21
	1510 Call 0x1C17F18
	1511 Move X21, X31
	1512 Move X24, X0
	1513 Move X8, 0x22D1000
	1514 Move X8, [X8+2592]
	1515 Move X1, [X8]
	1516 Add X0, X31, 528
	1517 Call Enumerator<Object, Object>.Dispose, X0
	1518 Compare X21, 0
	1519 JumpIfEqual {1545}
	1520 Move X0, X21
	1521 Call 0x1C17F18
	1522 NotImplemented "Instruction CMP not yet implemented."
	1523 Call 0x3EB2AD0
	1524 Move X25, [X0]
	1525 Call 0x3EB2AE0
	1526 Move X8, 0x22D1000
	1527 Move X8, [X8+2592]
	1528 Add X0, X31, 528
	1529 Move X1, [X8]
	1530 Call Enumerator<Object, Object>.Dispose, X0
	1531 Compare X25, 0
	1532 JumpIfEqual {932}
	1533 Move X0, X25
	1534 Call 0x1C17F18
	1535 Move X24, X0
	1536 Move X25, X31
	1537 Move X24, X0
	1538 Move X8, 0x22D1000
	1539 Move X8, [X8+2592]
	1540 Move X1, [X8]
	1541 Add X0, X31, 528
	1542 Call Enumerator<Object, Object>.Dispose, X0
	1543 Compare X25, 0
	1544 JumpIfNotEqual {1547}
	1545 Move X0, X24
	1546 Call 0x1D2D690
	1547 Move X0, X25
	1548 Call 0x1C17F18
	1549 Call 0x1991590

Method: System.Boolean UndoMerge()

Disassembly:
	0x01E2BAB8 MOV X1, X31
	0x01E2BABC BL 0x3C89998
	0x01E2BAC0 ADD X0, X20, 0x54
	0x01E2BAC4 MOV X1, X31
	0x01E2BAC8 BL 0x1E8ADA8
	0x01E2BACC MOV X0, X19
	0x01E2BAD0 MOV X1, X31
	0x01E2BAD4 BL 0x3C89A60
	0x01E2BAD8 MOV X0, X21
	0x01E2BADC MOV X1, X31
	0x01E2BAE0 BL 0x1E8ADA8
	0x01E2BAE4 MOV X0, X19
	0x01E2BAE8 LDP X20, X19, [X31 + 0x30]
	0x01E2BAEC LDP X22, X21, [X31 + 0x20]
	0x01E2BAF0 LDP X24, X23, [X31 + 0x10]
	0x01E2BAF4 MOV X1, X31
	0x01E2BAF8 LDP X30, X25, [X31], #0x40
	0x01E2BAFC B 0x3C89C80
	0x01E2BB00 BL 0x1C16F20
	0x01E2BB04 ADD X0, X0, 0x48
	0x01E2BB08 MOV X1, X31
	0x01E2BB0C B 0x1E8ADA8
	0x01E2BB10 STP X30, X21, [X31 - 0x20]!
	0x01E2BB14 STP X20, X19, [X31 + 0x10]
	0x01E2BB18 ADRP X20, 0x25AD000
	0x01E2BB1C ADRP X21, 0x22CF000
	0x01E2BB20 LDRB W8, [X20 + 0xE66]
	0x01E2BB24 LDR X21, [X21 + 0xC70]
	0x01E2BB28 MOV X19, X0
	0x01E2BB2C TBNZ X8, 0x0, 0x1E2BB44
	0x01E2BB30 ADRP X0, 0x22CF000
	0x01E2BB34 LDR X0, [X0 + 0xC70]
	0x01E2BB38 BL 0x1C16CF4
	0x01E2BB3C MOVZ W8, 0x1
	0x01E2BB40 STRB W8, [X20 + 0xE66]
	0x01E2BB44 LDR X1, [X21]
	0x01E2BB48 MOV X0, X19
	0x01E2BB4C BL 0x241EE9C
	0x01E2BB50 LDR X19, [X19 + 0xB8]
	0x01E2BB54 CBZ X19, 0x1E2BB84
	0x01E2BB58 FMOV S0, W31
	0x01E2BB5C FMOV S1, W31
	0x01E2BB60 MOV X0, X19
	0x01E2BB64 MOV X1, X31
	0x01E2BB68 BL 0x3C89998
	0x01E2BB6C MOV X0, X19
	0x01E2BB70 LDP X20, X19, [X31 + 0x10]
	0x01E2BB74 FMOV S0, W31
	0x01E2BB78 MOV X1, X31
	0x01E2BB7C LDP X30, X21, [X31], #0x20
	0x01E2BB80 B 0x3C89A60
	0x01E2BB84 BL 0x1C16F20
	0x01E2BB88 CBZ X1, 0x1E2BB98
	0x01E2BB8C MOV X0, X1
	0x01E2BB90 MOV X1, X31
	0x01E2BB94 B 0x3C89E60
	0x01E2BB98 STR X30, [X31 - 0x10]!
	0x01E2BB9C BL 0x1C16F20
	0x01E2BBA0 CBZ X1, 0x1E2BBB0
	0x01E2BBA4 MOV X0, X1
	0x01E2BBA8 MOV X1, X31
	0x01E2BBAC B 0x3C89E9C
	0x01E2BBB0 STR X30, [X31 - 0x10]!
	0x01E2BBB4 BL 0x1C16F20
	0x01E2BBB8 CBZ X1, 0x1E2BBC8
	0x01E2BBBC MOV X0, X1
	0x01E2BBC0 MOV X1, X31
	0x01E2BBC4 B 0x3C89ED8
	0x01E2BBC8 STR X30, [X31 - 0x10]!
	0x01E2BBCC BL 0x1C16F20
	0x01E2BBD0 STP D9, D8, [X31 - 0x30]!
	0x01E2BBD4 STR X30, [X31 + 0x10]
	0x01E2BBD8 STP X20, X19, [X31 + 0x20]
	0x01E2BBDC ADRP X20, 0x25AD000
	0x01E2BBE0 LDRB W8, [X20 + 0xE67]
	0x01E2BBE4 MOV X19, X1
	0x01E2BBE8 TBNZ X8, 0x0, 0x1E2BC00
	0x01E2BBEC ADRP X0, 0x22CF000
	0x01E2BBF0 LDR X0, [X0 + 0xC60]
	0x01E2BBF4 BL 0x1C16CF4
	0x01E2BBF8 MOVZ W8, 0x1
	0x01E2BBFC STRB W8, [X20 + 0xE67]
	0x01E2BC00 CBZ X19, 0x1E2BCB0
	0x01E2BC04 ADRP X20, 0x22CF000
	0x01E2BC08 LDR X20, [X20 + 0xC60]
	0x01E2BC0C MOV X0, X19
	0x01E2BC10 MOV X1, X31
	0x01E2BC14 BL 0x3C89908
	0x01E2BC18 LDR X0, [X20]
	0x01E2BC1C FMUL S0, S0, S0
	0x01E2BC20 FMUL S1, S1, S1
	0x01E2BC24 FADD S9, S0, S1
	0x01E2BC28 LDR W8, [X0 + 0xE0]
	0x01E2BC2C CBNZ W8, 0x1E2BC34
	0x01E2BC30 BL 0x1C16DFC
	0x01E2BC34 MOV X0, X31
	0x01E2BC38 BL 0x3C88888
	0x01E2BC3C MOV X0, X31
	0x01E2BC40 MOV V8.16B, V0.16B
	0x01E2BC44 BL 0x3C88888
	0x01E2BC48 FMUL S0, S8, S0
	0x01E2BC4C FCMP S9, S0
	0x01E2BC50 B.GT 0x1E2BC9C
	0x01E2BC54 MOV X0, X19
	0x01E2BC58 MOV X1, X31
	0x01E2BC5C BL 0x3C89A24
	0x01E2BC60 LDR X0, [X20]
	0x01E2BC64 MOV V8.16B, V0.16B
	0x01E2BC68 LDR W8, [X0 + 0xE0]
	0x01E2BC6C CBNZ W8, 0x1E2BC74
	0x01E2BC70 BL 0x1C16DFC
	0x01E2BC74 MOV X0, X31
	0x01E2BC78 BL 0x3C888B0
	0x01E2BC7C MOV X0, X31
	0x01E2BC80 MOV V9.16B, V0.16B
	0x01E2BC84 BL 0x3C888B0
	0x01E2BC88 FMUL S1, S8, S8
	0x01E2BC8C FMUL S0, S9, S0
	0x01E2BC90 FCMP S1, S0
	0x01E2BC94 CSET W0, LS
	0x01E2BC98 B 0x1E2BCA0
	0x01E2BC9C MOV W0, W31
	0x01E2BCA0 LDP X20, X19, [X31 + 0x20]
	0x01E2BCA4 LDR X30, [X31 + 0x10]
	0x01E2BCA8 LDP D9, D8, [X31], #0x30
	0x01E2BCAC RET
	0x01E2BCB0 BL 0x1C16F20
	0x01E2BCB4 STP D9, D8, [X31 - 0x40]!
	0x01E2BCB8 STP X30, X23, [X31 + 0x10]
	0x01E2BCBC STP X22, X21, [X31 + 0x20]
	0x01E2BCC0 STP X20, X19, [X31 + 0x30]
	0x01E2BCC4 ADRP X20, 0x25AD000
	0x01E2BCC8 LDRB W8, [X20 + 0xE68]
	0x01E2BCCC MOV X19, X1
	0x01E2BCD0 TBNZ X8, 0x0, 0x1E2BCE8
	0x01E2BCD4 ADRP X0, 0x22CF000
	0x01E2BCD8 LDR X0, [X0 + 0xC60]
	0x01E2BCDC BL 0x1C16CF4
	0x01E2BCE0 MOVZ W8, 0x1
	0x01E2BCE4 STRB W8, [X20 + 0xE68]
	0x01E2BCE8 ADRP X20, 0x25AD000
	0x01E2BCEC LDRB W8, [X20 + 0xE90]
	0x01E2BCF0 LDP W22, W21, [X19 + 0x48]
	0x01E2BCF4 CBNZ W8, 0x1E2BD0C
	0x01E2BCF8 ADRP X0, 0x22CF000
	0x01E2BCFC LDR X0, [X0 + 0xC68]
	0x01E2BD00 BL 0x1C16CF4
	0x01E2BD04 MOVZ W8, 0x1
	0x01E2BD08 STRB W8, [X20 + 0xE90]
	0x01E2BD0C ADRP X23, 0x22CF000
	0x01E2BD10 LDR X23, [X23 + 0xC68]
	0x01E2BD14 LDR X0, [X23]
	0x01E2BD18 LDR W8, [X0 + 0xE0]
	0x01E2BD1C CBNZ W8, 0x1E2BD40
	0x01E2BD20 BL 0x1C16DFC
	0x01E2BD24 LDRB W8, [X20 + 0xE90]
	0x01E2BD28 CBNZ W8, 0x1E2BD40
	0x01E2BD2C ADRP X0, 0x22CF000
	0x01E2BD30 LDR X0, [X0 + 0xC68]
	0x01E2BD34 BL 0x1C16CF4
	0x01E2BD38 MOVZ W8, 0x1
	0x01E2BD3C STRB W8, [X20 + 0xE90]
	0x01E2BD40 LDR X0, [X23]
	0x01E2BD44 ADRP X20, 0x22CF000
	0x01E2BD48 LDR W8, [X0 + 0xE0]
	0x01E2BD4C LDR X20, [X20 + 0xC60]
	0x01E2BD50 CBNZ W8, 0x1E2BD58
	0x01E2BD54 BL 0x1C16DFC
	0x01E2BD58 MOVZ W8, 0x3A800000
	0x01E2BD5C LDR X0, [X20]
	0x01E2BD60 FMOV S0, W8
	0x01E2BD64 AND W8, W22, 0x1
	0x01E2BD68 AND W9, W21, 0x1
	0x01E2BD6C SUB W8, W31, W8
	0x01E2BD70 SUB W9, W31, W9
	0x01E2BD74 EOR W8, W8, W22, 0x1
	0x01E2BD78 EOR W9, W9, W21, 0x1
	0x01E2BD7C SCVTF S1, W8
	0x01E2BD80 SCVTF S2, W9
	0x01E2BD84 LDR W8, [X0 + 0xE0]
	0x01E2BD88 FMUL S1, S1, S0
	0x01E2BD8C FMUL S0, S2, S0
	0x01E2BD90 FMUL S1, S1, S1
	0x01E2BD94 FMUL S0, S0, S0
	0x01E2BD98 FADD S9, S1, S0
	0x01E2BD9C CBNZ W8, 0x1E2BDA4
	0x01E2BDA0 BL 0x1C16DFC
	0x01E2BDA4 MOV X0, X31
	0x01E2BDA8 BL 0x3C88888
	0x01E2BDAC MOV X0, X31
	0x01E2BDB0 MOV V8.16B, V0.16B
	0x01E2BDB4 BL 0x3C88888
	0x01E2BDB8 FMUL S0, S8, S0
	0x01E2BDBC FCMP S9, S0
	0x01E2BDC0 B.GT 0x1E2BE0C
	0x01E2BDC4 ADD X0, X19, 0x54
	0x01E2BDC8 MOV X1, X31
	0x01E2BDCC BL 0x1E8ADA8
	0x01E2BDD0 LDR X0, [X20]
	0x01E2BDD4 MOV V8.16B, V0.16B
	0x01E2BDD8 LDR W8, [X0 + 0xE0]
	0x01E2BDDC CBNZ W8, 0x1E2BDE4
	0x01E2BDE0 BL 0x1C16DFC
	0x01E2BDE4 MOV X0, X31
	0x01E2BDE8 BL 0x3C888B0
	0x01E2BDEC MOV X0, X31
	0x01E2BDF0 MOV V9.16B, V0.16B
	0x01E2BDF4 BL 0x3C888B0
	0x01E2BDF8 FMUL S1, S8, S8
	0x01E2BDFC FMUL S0, S9, S0
	0x01E2BE00 FCMP S1, S0
	0x01E2BE04 CSET W0, LS
	0x01E2BE08 B 0x1E2BE10
	0x01E2BE0C MOV W0, W31
	0x01E2BE10 LDP X20, X19, [X31 + 0x30]
	0x01E2BE14 LDP X22, X21, [X31 + 0x20]
	0x01E2BE18 LDP X30, X23, [X31 + 0x10]
	0x01E2BE1C LDP D9, D8, [X31], #0x40
	0x01E2BE20 RET
	0x01E2BE24 ADD X0, X0, 0x54
	0x01E2BE28 MOV X1, X31
	0x01E2BE2C B 0x1E8ADA8
	0x01E2BE30 STP X30, X21, [X31 - 0x20]!
	0x01E2BE34 STP X20, X19, [X31 + 0x10]
	0x01E2BE38 ADRP X20, 0x25AD000
	0x01E2BE3C ADRP X21, 0x22CF000
	0x01E2BE40 LDRB W8, [X20 + 0xE69]
	0x01E2BE44 LDR X21, [X21 + 0xC78]
	0x01E2BE48 MOV X19, X0
	0x01E2BE4C TBNZ X8, 0x0, 0x1E2BE64
	0x01E2BE50 ADRP X0, 0x22CF000
	0x01E2BE54 LDR X0, [X0 + 0xC78]
	0x01E2BE58 BL 0x1C16CF4
	0x01E2BE5C MOVZ W8, 0x1
	0x01E2BE60 STRB W8, [X20 + 0xE69]
	0x01E2BE64 LDR X1, [X21]
	0x01E2BE68 MOV X0, X19
	0x01E2BE6C LDP X20, X19, [X31 + 0x10]
	0x01E2BE70 LDP X30, X21, [X31], #0x20
	0x01E2BE74 B 0x2421258
	0x01E2BE78 STR X30, [X31 - 0x10]!
	0x01E2BE7C LDR X0, [X0 + 0xB8]
	0x01E2BE80 CBZ X0, 0x1E2BE90
	0x01E2BE84 MOV X1, X31
	0x01E2BE88 LDR X30, [X31], #0x10
	0x01E2BE8C B 0x3C8EF74
	0x01E2BE90 BL 0x1C16F20
	0x01E2BE94 STR X30, [X31 - 0x10]!
	0x01E2BE98 LDR X0, [X0 + 0xB8]
	0x01E2BE9C CBZ X0, 0x1E2BEAC
	0x01E2BEA0 MOV X1, X31
	0x01E2BEA4 LDR X30, [X31], #0x10
	0x01E2BEA8 B 0x3C8F014
	0x01E2BEAC BL 0x1C16F20
	0x01E2BEB0 STR X30, [X31 - 0x10]!
	0x01E2BEB4 LDR X0, [X0 + 0xB8]
	0x01E2BEB8 CBZ X0, 0x1E2BEC8
	0x01E2BEBC MOV X1, X31
	0x01E2BEC0 LDR X30, [X31], #0x10
	0x01E2BEC4 B 0x3C8F0AC
	0x01E2BEC8 BL 0x1C16F20
	0x01E2BECC STR X30, [X31 - 0x10]!
	0x01E2BED0 LDR X0, [X0 + 0xB8]
	0x01E2BED4 CBZ X0, 0x1E2BEE4
	0x01E2BED8 MOV X1, X31
	0x01E2BEDC LDR X30, [X31], #0x10
	0x01E2BEE0 B 0x3C8F148
	0x01E2BEE4 BL 0x1C16F20
	0x01E2BEE8 STR X30, [X31 - 0x10]!
	0x01E2BEEC LDR X0, [X0 + 0xB8]
	0x01E2BEF0 CBZ X0, 0x1E2BF00
	0x01E2BEF4 MOV X1, X31
	0x01E2BEF8 LDR X30, [X31], #0x10
	0x01E2BEFC B 0x3C8ECF0
	0x01E2BF00 BL 0x1C16F20
	0x01E2BF04 STR X30, [X31 - 0x10]!
	0x01E2BF08 LDR X0, [X0 + 0xB8]
	0x01E2BF0C CBZ X0, 0x1E2BF20
	0x01E2BF10 AND W1, W1, 0x1
	0x01E2BF14 MOV X2, X31
	0x01E2BF18 LDR X30, [X31], #0x10
	0x01E2BF1C B 0x3C8ED2C
	0x01E2BF20 BL 0x1C16F20
	0x01E2BF24 STR X30, [X31 - 0x30]!
	0x01E2BF28 STP X22, X21, [X31 + 0x10]
	0x01E2BF2C STP X20, X19, [X31 + 0x20]
	0x01E2BF30 ADRP X21, 0x25AD000
	0x01E2BF34 ADRP X22, 0x22CF000
	0x01E2BF38 ADRP X20, 0x22C8000
	0x01E2BF3C LDRB W8, [X21 + 0xE6A]
	0x01E2BF40 LDR X22, [X22 + 0xC80]
	0x01E2BF44 LDR X20, [X20 + 0x5F8]
	0x01E2BF48 MOV X19, X0
	0x01E2BF4C TBNZ X8, 0x0, 0x1E2BF70
	0x01E2BF50 ADRP X0, 0x22CF000
	0x01E2BF54 LDR X0, [X0 + 0xC80]
	0x01E2BF58 BL 0x1C16CF4
	0x01E2BF5C ADRP X0, 0x22C8000
	0x01E2BF60 LDR X0, [X0 + 0x5F8]
	0x01E2BF64 BL 0x1C16CF4
	0x01E2BF68 MOVZ W8, 0x1
	0x01E2BF6C STRB W8, [X21 + 0xE6A]
	0x01E2BF70 LDR X1, [X22]
	0x01E2BF74 MOV X0, X19
	0x01E2BF78 BL 0x241EC74
	0x01E2BF7C LDR X0, [X20]
	0x01E2BF80 LDR W8, [X0 + 0xE0]
	0x01E2BF84 CBNZ W8, 0x1E2BF8C
	0x01E2BF88 BL 0x1C16DFC
	0x01E2BF8C MOV X0, X31
	0x01E2BF90 BL 0x3C8A778
	0x01E2BF94 CMP W0, 0x2
	0x01E2BF98 CSET W8, NE
	0x01E2BF9C STRB W8, [X19 + 0xB5]
	0x01E2BFA0 LDP X20, X19, [X31 + 0x20]
	0x01E2BFA4 LDP X22, X21, [X31 + 0x10]
	0x01E2BFA8 LDR X30, [X31], #0x30
	0x01E2BFAC RET
	0x01E2BFB0 CBZ X1, 0x1E2BFC0
	0x01E2BFB4 MOV X0, X1
	0x01E2BFB8 MOV X1, X31
	0x01E2BFBC B 0x3C8ECF0
	0x01E2BFC0 STR X30, [X31 - 0x10]!
	0x01E2BFC4 BL 0x1C16F20
	0x01E2BFC8 STR X30, [X31 - 0x20]!
	0x01E2BFCC STP X20, X19, [X31 + 0x10]
	0x01E2BFD0 CBZ X1, 0x1E2C018
	0x01E2BFD4 MOV X19, X1
	0x01E2BFD8 MOV X0, X1
	0x01E2BFDC MOV X1, X31
	0x01E2BFE0 MOV W20, W2
	0x01E2BFE4 BL 0x3C8ECF0
	0x01E2BFE8 AND W8, W0, 0x1
	0x01E2BFEC AND W1, W20, 0x1
	0x01E2BFF0 CMP W8, W1
	0x01E2BFF4 B.EQ 0x1E2C00C
	0x01E2BFF8 MOV X0, X19
	0x01E2BFFC LDP X20, X19, [X31 + 0x10]
	0x01E2C000 MOV X2, X31
	0x01E2C004 LDR X30, [X31], #0x20
	0x01E2C008 B 0x3C8ED2C
	0x01E2C00C LDP X20, X19, [X31 + 0x10]
	0x01E2C010 LDR X30, [X31], #0x20
	0x01E2C014 RET
	0x01E2C018 BL 0x1C16F20
	0x01E2C01C STP X30, X21, [X31 - 0x20]!
	0x01E2C020 STP X20, X19, [X31 + 0x10]
	0x01E2C024 CBZ X1, 0x1E2C07C
	0x01E2C028 MOV X20, X1
	0x01E2C02C MOV X21, X0
	0x01E2C030 MOV X0, X1

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+64], X30
	003 Move [X31+72], X23
	004 Move [X31+80], X22
	005 Move [X31+88], X21
	006 Move [X31+96], X20
	007 Move [X31+104], X19
	008 Move X20, 0x25AE000
	009 Move W8, [X20+3681]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {59}
	015 Move X0, 0x22D0000
	016 Move X0, [X0+3056]
	017 Call 0x1C17CF4
	018 Move X0, 0x22D0000
	019 Move X0, [X0+2872]
	020 Call 0x1C17CF4
	021 Move X0, 0x22D0000
	022 Move X0, [X0+2880]
	023 Call 0x1C17CF4
	024 Move X0, 0x22C9000
	025 Move X0, [X0+2600]
	026 Call 0x1C17CF4
	027 Move X0, 0x22D0000
	028 Move X0, [X0+3064]
	029 Call 0x1C17CF4
	030 Move X0, 0x22D0000
	031 Move X0, [X0+3072]
	032 Call 0x1C17CF4
	033 Move X0, 0x22D0000
	034 Move X0, [X0+3080]
	035 Call 0x1C17CF4
	036 Move X0, 0x22D0000
	037 Move X0, [X0+3088]
	038 Call 0x1C17CF4
	039 Move X0, 0x22D0000
	040 Move X0, [X0+3096]
	041 Call 0x1C17CF4
	042 Move X0, 0x22D0000
	043 Move X0, [X0+3104]
	044 Call 0x1C17CF4
	045 Move X0, 0x22C9000
	046 Move X0, [X0+1432]
	047 Call 0x1C17CF4
	048 Move X0, 0x22D0000
	049 Move X0, [X0+2808]
	050 Call 0x1C17CF4
	051 Move X0, 0x22D0000
	052 Move X0, [X0+3112]
	053 Call 0x1C17CF4
	054 Move X0, 0x22D0000
	055 Move X0, [X0+3120]
	056 Call 0x1C17CF4
	057 Move W8, 1
	058 Move [X20+3681], W8
	059 Move [X31+32], X31
	060 Move [X31+40], X31
	061 Move [X31+48], X31
	062 Move W8, [X19+80]
	063 Compare W8, 0
	064 JumpIfEqual {114}
	065 Move X22, 0x22C9000
	066 Move W8, [X19+84]
	067 Move X22, [X22+1432]
	068 Compare W8, 0
	069 JumpIfNotEqual {152}
	070 Move X0, [X19+72]
	071 Compare X0, 0
	072 JumpIfEqual {333}
	073 Move X8, 0x22D0000
	074 Move X8, [X8+3104]
	075 Move X1, [X8]
	076 Add X8, X31, 8
	077 Call List`1<Object>.GetEnumerator, X0
	078 NotImplemented "Instruction LDUR not yet implemented."
	079 Move X8, [X31+24]
	080 Move X21, 0x22D0000
	081 Move [X31+2], V0
	082 Move [X31+48], X8
	083 Move X21, [X21+3072]
	084 Move X1, [X21]
	085 Add X0, X31, 32
	086 Call Enumerator<Object>.MoveNext, X0
	087 Move TEMP, X0
	088 And TEMP, TEMP, 1
	089 Compare TEMP, 1
	090 JumpIfNotEqual {146}
	091 Move X23, [X31+48]
	092 Compare X23, 0
	093 JumpIfEqual {330}
	094 Move X0, [X22]
	095 Move X20, [X23+32]
	096 Move W8, [X0+224]
	097 Compare W8, 0
	098 JumpIfNotEqual {100}
	099 Call 0x1C17DFC
	100 Move X0, X20
	101 Move X1, X31
	102 Move X2, X31
	103 Call Object.op_Equality, X0, X1
	104 Move TEMP, X0
	105 And TEMP, TEMP, 1
	106 Compare TEMP, 1
	107 JumpIfEqual {84}
	108 Move X0, [X23+32]
	109 Compare X0, 0
	110 JumpIfEqual {332}
	111 Move W1, [X23+40]
	112 Move X2, X31
	113 Call Renderer.set_enabled, X0, X1
	114 Move W8, [X19+112]
	115 Compare W8, 0
	116 JumpIfEqual {320}
	117 Move X0, X19
	118 Move X1, X31
	119 Call Component.get_gameObject, X0
	120 Compare X0, 0
	121 JumpIfEqual {333}
	122 Move X1, X31
	123 Call Object.get_name, X0
	124 Move X8, 0x22D0000
	125 Move X8, [X8+2808]
	126 Move X9, 0x22D0000
	127 Move X9, [X9+3120]
	128 Move X1, X0
	129 Move X8, [X8]
	130 Move X3, X31
	131 Move X2, [X9]
	132 Move X0, X8
	133 Call String.Concat, X0, X1, X2
	134 Move X8, 0x22C9000
	135 Move X8, [X8+2600]
	136 Move X19, X0
	137 Move X8, [X8]
	138 Move W9, [X8+224]
	139 Compare W9, 0
	140 JumpIfNotEqual {143}
	141 Move X0, X8
	142 Call 0x1C17DFC
	143 Move X0, X19
	144 Move X1, X31
	145 Call Debug.Log, X0
	146 Move X8, 0x22D0000
	147 Move X8, [X8+3064]
	148 Add X0, X31, 32
	149 Move X1, [X8]
	150 Call Enumerator<Object>.Dispose, X0
	151 Move W8, [X19+84]
	152 NotImplemented "Instruction CMP not yet implemented."
	153 Move X0, [X19+72]
	154 Compare X0, 0
	155 JumpIfEqual {333}
	156 Move X8, 0x22D0000
	157 Move X8, [X8+3104]
	158 Move X1, [X8]
	159 Add X8, X31, 8
	160 Call List`1<Object>.GetEnumerator, X0
	161 NotImplemented "Instruction LDUR not yet implemented."
	162 Move X8, [X31+24]
	163 Move X21, 0x22D0000
	164 Move [X31+2], V0
	165 Move [X31+48], X8
	166 Move X21, [X21+3072]
	167 Move X1, [X21]
	168 Add X0, X31, 32
	169 Call Enumerator<Object>.MoveNext, X0
	170 Move TEMP, X0
	171 And TEMP, TEMP, 1
	172 Compare TEMP, 1
	173 JumpIfNotEqual {197}
	174 Move X23, [X31+48]
	175 Compare X23, 0
	176 JumpIfEqual {329}
	177 Move X0, [X22]
	178 Move X20, [X23+16]
	179 Move W8, [X0+224]
	180 Compare W8, 0
	181 JumpIfNotEqual {183}
	182 Call 0x1C17DFC
	183 Move X0, X20
	184 Move X1, X31
	185 Move X2, X31
	186 Call Object.op_Equality, X0, X1
	187 Move TEMP, X0
	188 And TEMP, TEMP, 1
	189 Compare TEMP, 1
	190 JumpIfEqual {167}
	191 Move X0, [X23+16]
	192 Compare X0, 0
	193 JumpIfEqual {331}
	194 Move W1, [X23+24]
	195 Move X2, X31
	196 Call GameObject.SetActive, X0, X1
	197 Move X8, 0x22D0000
	198 Move X8, [X8+3064]
	199 Add X0, X31, 32
	200 Move X1, [X8]
	201 Call Enumerator<Object>.Dispose, X0
	202 Move W8, [X19+88]
	203 Compare W8, 0
	204 JumpIfEqual {233}
	205 Move X8, 0x22D0000
	206 Move X8, [X8+3056]
	207 Move X0, X19
	208 Move X1, [X8]
	209 Call 0x21A4894, X0
	210 Move X8, [X22]
	211 Move X20, X0
	212 Move W9, [X8+224]
	213 Compare W9, 0
	214 JumpIfNotEqual {217}
	215 Move X0, X8
	216 Call 0x1C17DFC
	217 Move X0, X20
	218 Move X1, X31
	219 Move X2, X31
	220 Call Object.op_Inequality, X0, X1
	221 Move TEMP, X0
	222 And TEMP, TEMP, 1
	223 Compare TEMP, 1
	224 JumpIfNotEqual {233}
	225 Move X0, [X22]
	226 Move W8, [X0+224]
	227 Compare W8, 0
	228 JumpIfNotEqual {230}
	229 Call 0x1C17DFC
	230 Move X0, X20
	231 Move X1, X31
	232 Call Object.Destroy, X0
	233 Move X8, [X19+72]
	234 Compare X8, 0
	235 JumpIfEqual {333}
	236 Move W2, [X8+24]
	237 Move W9, [X8+28]
	238 Move X20, 0x22D0000
	239 Move X20, [X20+2880]
	240 Add W9, W9, 1
	241 NotImplemented "Instruction CMP not yet implemented."
	242 Move [X8+24], W31
	243 Move [X8+28], W9
	244 Move X0, [X8+16]
	245 Move W1, W31
	246 Move X3, X31
	247 Call Array.Clear, X0, X1, X2
	248 Move X1, [X20]
	249 Move X21, 0x22D0000
	250 Move X21, [X21+2872]
	251 Move X0, X19
	252 Call 0x21A4894, X0
	253 Move X8, [X22]
	254 Move X20, X0
	255 Move W9, [X8+224]
	256 Compare W9, 0
	257 JumpIfNotEqual {260}
	258 Move X0, X8
	259 Call 0x1C17DFC
	260 Move X0, X20
	261 Move X1, X31
	262 Call Object.Destroy, X0
	263 Move X1, [X21]
	264 Move X0, X19
	265 Call 0x21A4894, X0
	266 Move X1, X31
	267 Call Object.Destroy, X0
	268 Move W8, [X19+113]
	269 Compare W8, 0
	270 JumpIfEqual {282}
	271 Move X0, X31
	272 Call Resources.UnloadUnusedAssets
	273 Move X8, 0x22D0000
	274 Move X8, [X8+3088]
	275 Move X0, [X8]
	276 Move W8, [X0+224]
	277 Compare W8, 0
	278 JumpIfNotEqual {280}
	279 Call 0x1C17DFC
	280 Move X0, X31
	281 Call GC.Collect
	282 Move W8, [X19+112]
	283 Compare W8, 0
	284 JumpIfEqual {314}
	285 Move X0, X19
	286 Move X1, X31
	287 Call Component.get_gameObject, X0
	288 Compare X0, 0
	289 JumpIfEqual {333}
	290 Move X1, X31
	291 Call Object.get_name, X0
	292 Move X8, 0x22D0000
	293 Move X8, [X8+2808]
	294 Move X9, 0x22D0000
	295 Move X9, [X9+3112]
	296 Move X1, X0
	297 Move X8, [X8]
	298 Move X3, X31
	299 Move X2, [X9]
	300 Move X0, X8
	301 Call String.Concat, X0, X1, X2
	302 Move X8, 0x22C9000
	303 Move X8, [X8+2600]
	304 Move X20, X0
	305 Move X8, [X8]
	306 Move W9, [X8+224]
	307 Compare W9, 0
	308 JumpIfNotEqual {311}
	309 Move X0, X8
	310 Call 0x1C17DFC
	311 Move X0, X20
	312 Move X1, X31
	313 Call Debug.Log, X0
	314 Move X0, [X19+128]
	315 Compare X0, 0
	316 JumpIfEqual {319}
	317 Move X1, X31
	318 Call UnityEvent.Invoke, X0
	319 Move [X19+80], W31
	320 Move X20, [X31+96]
	321 Move X19, [X31+104]
	322 Move X22, [X31+80]
	323 Move X21, [X31+88]
	324 Move X30, [X31+64]
	325 Move X23, [X31+72]
	326 Move W0, 1
	327 Add X31, X31, 112
	328 Return X0
	329 Call 0x1C17F20
	330 Call 0x1C17F20
	331 Call 0x1C17F20
	332 Call 0x1C17F20
	333 Call 0x1C17F20
	334 Move X20, X0
	335 NotImplemented "Instruction CMP not yet implemented."
	336 Move X0, X20
	337 Call 0x3EB2AD0
	338 Move X21, [X0]
	339 Call 0x3EB2AE0
	340 Move X8, 0x22D0000
	341 Move X8, [X8+3064]
	342 Add X0, X31, 32
	343 Move X1, [X8]
	344 Call Enumerator<Object>.Dispose, X0
	345 Compare X21, 0
	346 JumpIfEqual {151}
	347 Move X21, X31
	348 Move X20, X0
	349 Move X8, 0x22D0000
	350 Move X8, [X8+3064]
	351 Move X1, [X8]
	352 Add X0, X31, 32
	353 Call Enumerator<Object>.Dispose, X0
	354 Compare X21, 0
	355 JumpIfEqual {382}
	356 Move X0, X21
	357 Call 0x1C17F18
	358 Move X20, X0
	359 NotImplemented "Instruction CMP not yet implemented."
	360 Move X0, X20
	361 Call 0x3EB2AD0
	362 Move X21, [X0]
	363 Call 0x3EB2AE0
	364 Move X8, 0x22D0000
	365 Move X8, [X8+3064]
	366 Add X0, X31, 32
	367 Move X1, [X8]
	368 Call Enumerator<Object>.Dispose, X0
	369 Compare X21, 0
	370 JumpIfEqual {202}
	371 Move X0, X21
	372 Call 0x1C17F18
	373 Move X21, X31
	374 Move X20, X0
	375 Move X8, 0x22CF000
	376 Move X8, [X8+3064]
	377 Move X1, [X8]
	378 Add X0, X31, 32
	379 Call Enumerator<Object>.Dispose, X0
	380 Compare X21, 0
	381 JumpIfNotEqual {384}
	382 Move X0, X20
	383 Call 0x1D2D690
	384 Move X0, X21
	385 Call 0x1C17F18
	386 Call 0x1991590

Method: System.Boolean isTargetMeshesMerged()

Disassembly:
	0x01E2C034 MOV X1, X31
	0x01E2C038 MOV X19, X2

ISIL:
	001 Move W0, [X0+80]
	002 Return X0

Method: System.Void .ctor()

Disassembly:
	0x01E2C03C BL 0x3C8EF74
	0x01E2C040 STP S0, S1, [X19 + 0x8]
	0x01E2C044 STR S2, [X19 + 0x10]
	0x01E2C048 LDRB W21, [X21 + 0x90]
	0x01E2C04C MOV X0, X20
	0x01E2C050 MOV X1, X31
	0x01E2C054 BL 0x3C8F0AC
	0x01E2C058 CBZ W21, 0x1E2C068
	0x01E2C05C STP S0, S1, [X19 + 0x6C]
	0x01E2C060 STP S2, S3, [X19 + 0x74]
	0x01E2C064 B 0x1E2C070
	0x01E2C068 STP S0, S1, [X19 + 0x14]
	0x01E2C06C STP S2, S3, [X19 + 0x1C]
	0x01E2C070 LDP X20, X19, [X31 + 0x10]
	0x01E2C074 LDP X30, X21, [X31], #0x20
	0x01E2C078 RET
	0x01E2C07C BL 0x1C16F20
	0x01E2C080 STP D11, D10, [X31 - 0x30]!
	0x01E2C084 STP D9, D8, [X31 + 0x10]
	0x01E2C088 STP X30, X19, [X31 + 0x20]
	0x01E2C08C CBZ X1, 0x1E2C0D8
	0x01E2C090 MOV X19, X1
	0x01E2C094 MOV X0, X1
	0x01E2C098 MOV X1, X31
	0x01E2C09C MOV V8.16B, V6.16B
	0x01E2C0A0 MOV V9.16B, V5.16B
	0x01E2C0A4 MOV V10.16B, V4.16B
	0x01E2C0A8 MOV V11.16B, V3.16B
	0x01E2C0AC BL 0x3C8F014
	0x01E2C0B0 MOV X0, X19
	0x01E2C0B4 MOV V2.16B, V9.16B
	0x01E2C0B8 MOV V3.16B, V8.16B
	0x01E2C0BC LDP X30, X19, [X31 + 0x20]
	0x01E2C0C0 LDP D9, D8, [X31 + 0x10]
	0x01E2C0C4 MOV V0.16B, V11.16B
	0x01E2C0C8 MOV V1.16B, V10.16B
	0x01E2C0CC MOV X1, X31
	0x01E2C0D0 LDP D11, D10, [X31], #0x30
	0x01E2C0D4 B 0x3C8F148
	0x01E2C0D8 BL 0x1C16F20
	0x01E2C0DC STP X30, X21, [X31 - 0x20]!
	0x01E2C0E0 STP X20, X19, [X31 + 0x10]
	0x01E2C0E4 CBZ X1, 0x1E2C140
	0x01E2C0E8 MOV X19, X1
	0x01E2C0EC MOV X0, X1
	0x01E2C0F0 MOV X1, X31
	0x01E2C0F4 BL 0x3C8ECF0
	0x01E2C0F8 MOV W20, W0
	0x01E2C0FC AND W21, W0, 0x1
	0x01E2C100 MOV X0, X19
	0x01E2C104 MOV X1, X31
	0x01E2C108 BL 0x3C8F34C
	0x01E2C10C MOVZ W8, 0x2
	0x01E2C110 BFM W8, W20, 0x0, 0x0
	0x01E2C114 ANDS W31, W0, 0x1
	0x01E2C118 MOV X0, X19
	0x01E2C11C MOV X1, X31
	0x01E2C120 CSEL W20, W8, W21, NE
	0x01E2C124 BL 0x3C8EC70
	0x01E2C128 ORR W8, W20, 0x4
	0x01E2C12C ANDS W31, W0, 0x1
	0x01E2C130 CSEL W0, W8, W20, NE
	0x01E2C134 LDP X20, X19, [X31 + 0x10]
	0x01E2C138 LDP X30, X21, [X31], #0x20
	0x01E2C13C RET
	0x01E2C140 BL 0x1C16F20
	0x01E2C144 CBZ X1, 0x1E2C154
	0x01E2C148 MOV X0, X1
	0x01E2C14C MOV X1, X31
	0x01E2C150 B 0x3C8ED70
	0x01E2C154 STR X30, [X31 - 0x10]!
	0x01E2C158 BL 0x1C16F20
	0x01E2C15C CBZ X1, 0x1E2C170
	0x01E2C160 MOV X0, X1
	0x01E2C164 MOV W1, W2
	0x01E2C168 MOV X2, X31
	0x01E2C16C B 0x3C8EDAC
	0x01E2C170 STR X30, [X31 - 0x10]!
	0x01E2C174 BL 0x1C16F20
	0x01E2C178 STR D8, [X31 - 0x30]!
	0x01E2C17C STR X30, [X31 + 0x8]
	0x01E2C180 STP X22, X21, [X31 + 0x10]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0x25AD000
	009 Move W8, [X20+3682]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {29}
	015 Move X0, 0x22CE000
	016 Move X0, [X0+1360]
	017 Call 0x1C17CF4
	018 Move X0, 0x22CF000
	019 Move X0, [X0+3128]
	020 Call 0x1C17CF4
	021 Move X0, 0x22CF000
	022 Move X0, [X0+3136]
	023 Call 0x1C17CF4
	024 Move X0, 0x22CE000
	025 Move X0, [X0+1352]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X20+3682], W8
	029 Move W8, 0xC350
	030 Move [X19+32], W8
	031 Move X24, 0x25AD000
	032 Move X23, 0x22CF000
	033 Move X20, 0x22CF000
	034 Move X22, 0x22CE000
	035 Move X21, 0x22CE000
	036 Move W8, [X24+1923]
	037 Move X23, [X23+3136]
	038 Move X20, [X20+3128]
	039 Move X22, [X22+1352]
	040 Move X21, [X21+1360]
	041 Compare W8, 0
	042 JumpIfNotEqual {48}
	043 Move X0, 0x22C8000
	044 Move X0, [X0+1440]
	045 Call 0x1C17CF4
	046 Move W8, 1
	047 Move [X24+1923], W8
	048 Move X8, 0x22C8000
	049 Move X8, [X8+1440]
	050 Move X8, [X8]
	051 Move X9, [X8+184]
	052 Move V0, [X9]
	053 Move V1, [X9+8]
	054 Move [X19+36], D0
	055 Move [X19+44], S1
	056 Move X9, [X8+184]
	057 Move V0, [X9]
	058 Move V1, [X9+8]
	059 Move [X19+48], D0
	060 Move [X19+56], S1
	061 Move X8, [X8+184]
	062 Move V0, [X8]
	063 Move V1, [X8+8]
	064 Move [X19+60], D0
	065 Move [X19+68], S1
	066 Move X0, [X23]
	067 Call 0x1C17F10
	068 Move X1, [X20]
	069 Move X20, X0
	070 Call List`1<Object>..ctor, X0
	071 Move W8, 1
	072 Move W23, 257
	073 Move [X19+72], X20
	074 Move [X19+88], W8
	075 NotImplemented "Instruction STRH not yet implemented."
	076 Move X0, [X22]
	077 Call 0x1C17F10
	078 Move X1, [X21]
	079 Move X20, X0
	080 Call List`1<Object>..ctor, X0
	081 Move [X19+104], X20
	082 NotImplemented "Instruction STRH not yet implemented."
	083 Move X0, X19
	084 Move X20, [X31+48]
	085 Move X19, [X31+56]
	086 Move X22, [X31+32]
	087 Move X21, [X31+40]
	088 Move X24, [X31+16]
	089 Move X23, [X31+24]
	090 Move X1, X31
	091 Move X30, [X31+64]
	092 Call MonoBehaviour..ctor, X0
	093 Return 

