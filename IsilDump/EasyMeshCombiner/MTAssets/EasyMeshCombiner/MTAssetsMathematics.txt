Type: MTAssets.EasyMeshCombiner.MTAssetsMathematics

Method: System.Collections.Generic.List`1<T> RandomizeThisList(System.Collections.Generic.List`1<T> list)

Disassembly:
	0x02215D20 MOV X0, X19
	0x02215D24 BL 0x1C5C6E0
	0x02215D28 LDR X8, [X19 + 0x38]
	0x02215D2C ADRP X9, 0x1EDE000
	0x02215D30 LDR X9, [X9 + 0x6C0]
	0x02215D34 LDR X19, [X8]
	0x02215D38 LDR X0, [X9]
	0x02215D3C LDR W9, [X0 + 0xE0]
	0x02215D40 CBNZ W9, 0x2215D48
	0x02215D44 BL 0x1C16DFC
	0x02215D48 MOV X0, X19
	0x02215D4C MOV X1, X31
	0x02215D50 BL 0x338C698
	0x02215D54 ADRP X8, 0x1F06000
	0x02215D58 LDR X8, [X8 + 0x850]
	0x02215D5C MOV X19, X0
	0x02215D60 LDR X8, [X8]
	0x02215D64 LDR W9, [X8 + 0xE0]
	0x02215D68 CBNZ W9, 0x2215D74
	0x02215D6C MOV X0, X8
	0x02215D70 BL 0x1C16DFC
	0x02215D74 MOV X0, X19
	0x02215D78 MOV X1, X31
	0x02215D7C LDP X30, X19, [X31], #0x10
	0x02215D80 B 0x32C13AC
	0x02215D84 SUB X31, X31, 0x40
	0x02215D88 STR X30, [X31 + 0x20]
	0x02215D8C STP X20, X19, [X31 + 0x30]
	0x02215D90 LDR X8, [X1 + 0x38]
	0x02215D94 MOV W19, W0
	0x02215D98 CBNZ X8, 0x2215DC0
	0x02215D9C ADRP X0, 0x1F06000
	0x02215DA0 LDR X0, [X0 + 0x850]
	0x02215DA4 MOV X20, X1
	0x02215DA8 BL 0x1C16CF4
	0x02215DAC LDR X8, [X20 + 0x38]
	0x02215DB0 CBNZ X8, 0x2215DC0
	0x02215DB4 MOV X0, X20
	0x02215DB8 BL 0x1C5C6E0
	0x02215DBC LDR X8, [X20 + 0x38]
	0x02215DC0 LDR X0, [X8]
	0x02215DC4 LDRB W8, [X0 + 0x135]
	0x02215DC8 TBNZ X8, 0x0, 0x2215DD0
	0x02215DCC BL 0x1C5C684
	0x02215DD0 MOVN X8, 0x0
	0x02215DD4 STP X0, X8, [X31 + 0x8]
	0x02215DD8 ADD X0, X31, 0x8
	0x02215DDC MOV X1, X31
	0x02215DE0 STRH W19, [X31 + 0x18]
	0x02215DE4 BL 0x33BE520
	0x02215DE8 ADRP X8, 0x1F06000
	0x02215DEC LDR X8, [X8 + 0x850]
	0x02215DF0 MOV X19, X0
	0x02215DF4 LDR X8, [X8]
	0x02215DF8 LDR W9, [X8 + 0xE0]
	0x02215DFC CBNZ W9, 0x2215E08
	0x02215E00 MOV X0, X8
	0x02215E04 BL 0x1C16DFC
	0x02215E08 MOV X0, X19
	0x02215E0C MOV X1, X31
	0x02215E10 BL 0x32C13AC
	0x02215E14 LDP X20, X19, [X31 + 0x30]
	0x02215E18 LDR X30, [X31 + 0x20]
	0x02215E1C ADD X31, X31, 0x40
	0x02215E20 RET
	0x02215E24 SUB X31, X31, 0x40
	0x02215E28 STR D8, [X31 + 0x20]
	0x02215E2C STP X30, X19, [X31 + 0x30]
	0x02215E30 LDR X8, [X0 + 0x38]
	0x02215E34 MOV V8.16B, V0.16B
	0x02215E38 CBNZ X8, 0x2215E60
	0x02215E3C MOV X19, X0
	0x02215E40 ADRP X0, 0x1F06000
	0x02215E44 LDR X0, [X0 + 0x850]
	0x02215E48 BL 0x1C16CF4
	0x02215E4C LDR X8, [X19 + 0x38]
	0x02215E50 CBNZ X8, 0x2215E60
	0x02215E54 MOV X0, X19
	0x02215E58 BL 0x1C5C6E0
	0x02215E5C LDR X8, [X19 + 0x38]
	0x02215E60 LDR X0, [X8]
	0x02215E64 LDRB W8, [X0 + 0x135]
	0x02215E68 TBNZ X8, 0x0, 0x2215E70
	0x02215E6C BL 0x1C5C684
	0x02215E70 MOVN X8, 0x0
	0x02215E74 STP X0, X8, [X31 + 0x8]
	0x02215E78 ADD X0, X31, 0x8
	0x02215E7C MOV X1, X31
	0x02215E80 STR S8, [X31 + 0x18]
	0x02215E84 BL 0x33BE520
	0x02215E88 ADRP X8, 0x1F06000
	0x02215E8C LDR X8, [X8 + 0x850]
	0x02215E90 MOV X19, X0
	0x02215E94 LDR X8, [X8]
	0x02215E98 LDR W9, [X8 + 0xE0]
	0x02215E9C CBNZ W9, 0x2215EA8
	0x02215EA0 MOV X0, X8
	0x02215EA4 BL 0x1C16DFC
	0x02215EA8 MOV X0, X19
	0x02215EAC MOV X1, X31
	0x02215EB0 BL 0x32C13AC
	0x02215EB4 LDP X30, X19, [X31 + 0x30]
	0x02215EB8 LDR V8, [X31 + 0x20]
	0x02215EBC ADD X31, X31, 0x40
	0x02215EC0 RET
	0x02215EC4 STP X29, X30, [X31 - 0x30]!
	0x02215EC8 STP X22, X21, [X31 + 0x10]
	0x02215ECC STP X20, X19, [X31 + 0x20]
	0x02215ED0 ADD X29, X31, 0x0
	0x02215ED4 SUB X31, X31, 0x20
	0x02215ED8 MRS X22, 0xC000
	0x02215EDC LDR X8, [X22 + 0x28]
	0x02215EE0 MOV X20, X1
	0x02215EE4 MOV X19, X0
	0x02215EE8 STUR X8, [X29 - 0x8]
	0x02215EEC STUR X0, [X29 - 0x18]
	0x02215EF0 LDR X9, [X1 + 0x38]
	0x02215EF4 CBNZ X9, 0x2215F18
	0x02215EF8 ADRP X0, 0x1F06000
	0x02215EFC LDR X0, [X0 + 0x850]
	0x02215F00 BL 0x1C16CF4
	0x02215F04 LDR X9, [X20 + 0x38]
	0x02215F08 CBNZ X9, 0x2215F18
	0x02215F0C MOV X0, X20
	0x02215F10 BL 0x1C5C6E0
	0x02215F14 LDR X9, [X20 + 0x38]
	0x02215F18 LDR X8, [X9]
	0x02215F1C ADD X10, X8, 0x135

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Add X29, X31, 0
	014 Subtract X31, X31, 64
	015 NotImplemented "Instruction MRS not yet implemented."
	016 Move [X29-56], X8
	017 Move X8, [X8+40]
	018 Move X20, X1
	019 Move X19, X0
	020 Move [X29-8], X8
	021 Move X21, [X1+56]
	022 Compare X21, 0
	023 JumpIfNotEqual {27}
	024 Move X0, X20
	025 Call 0x1C5D6E0
	026 Move X21, [X20+56]
	027 Move X8, [X21+24]
	028 Move W2, [X8+252]
	029 Add X8, X31, 0
	030 Add X9, X2, 15
	031 And X9, X9, 0x1FFFFFFFF
	032 Subtract X22, X8, X9
	033 Add X31, X22, 0
	034 Add X8, X31, 0
	035 Subtract X23, X8, X9
	036 Add X31, X23, 0
	037 Add X8, X31, 0
	038 Subtract X24, X8, X9
	039 Add X31, X24, 0
	040 Add X8, X31, 0
	041 Subtract X0, X8, X9
	042 Add X31, X0, 0
	043 Move W1, W31
	044 Move [X29-48], X0
	045 Move [X29-40], X2
	046 Call 0x3EB2B10
	047 Compare X19, 0
	048 JumpIfEqual {152}
	049 Move X1, [X21+8]
	050 Move X0, X19
	051 Move X8, [X1]
	052 NotImplemented "Instruction BLR not yet implemented."
	053 Subtract W8, W0, 1
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Move W26, W0
	056 Move W21, 1
	057 Subtract X25, X29, 12
	058 Subtract W28, W21, 1
	059 Move W0, W28
	060 Move W1, W26
	061 Move X2, X31
	062 Call Random.Range, X0, X1
	063 Move X8, [X20+56]
	064 Move W27, W0
	065 Subtract X3, X29, 32
	066 Move X2, X19
	067 Move X1, [X8+16]
	068 Move X4, X22
	069 Move X8, [X1]
	070 Move [X29-12], W28
	071 Move [X29-32], X25
	072 Move [X29-24], X22
	073 Move X9, [X1+16]
	074 Move X0, X8
	075 NotImplemented "Instruction BLR not yet implemented."
	076 Move X0, [X29-48]
	077 Move X2, [X29-40]
	078 Move X1, X22
	079 Call 0x3EB2AC0
	080 Move X8, [X20+56]
	081 Subtract X3, X29, 32
	082 Move X2, X19
	083 Move X4, X23
	084 Move X1, [X8+16]
	085 Move X0, [X1]
	086 Move [X29-12], W27
	087 Move [X29-32], X25
	088 Move [X29-24], X23
	089 Move X8, [X1+16]
	090 NotImplemented "Instruction BLR not yet implemented."
	091 Move X8, [X20+56]
	092 Move X4, X23
	093 Move X9, [X8+24]
	094 Move W9, [X9+40]
	095 Move TEMP, X9
	096 And TEMP, TEMP, -2147483648
	097 Compare TEMP, -2147483648
	098 JumpIfEqual {100}
	099 Move X4, [X23]
	100 Move X1, [X8+32]
	101 Subtract X3, X29, 32
	102 Move X2, X19
	103 Move X0, [X1]
	104 Move [X29-12], W28
	105 Move [X29-32], X25
	106 Move [X29-24], X4
	107 Move X8, [X1+16]
	108 NotImplemented "Instruction BLR not yet implemented."
	109 Move X1, [X29-48]
	110 Move X2, [X29-40]
	111 Move X0, X24
	112 Call 0x3EB2AC0
	113 Move X8, [X20+56]
	114 Move X4, X24
	115 Move X9, [X8+24]
	116 Move X1, [X8+32]
	117 Move W8, [X9+40]
	118 Move X0, [X1]
	119 Move TEMP, X8
	120 And TEMP, TEMP, -2147483648
	121 Compare TEMP, -2147483648
	122 JumpIfEqual {124}
	123 Move X4, [X24]
	124 Move [X29-12], W27
	125 Move [X29-32], X25
	126 Move [X29-24], X4
	127 Move X8, [X1+16]
	128 Subtract X3, X29, 32
	129 Move X2, X19
	130 NotImplemented "Instruction BLR not yet implemented."
	131 Add W21, W21, 1
	132 NotImplemented "Instruction CMP not yet implemented."
	133 NotImplemented "Instruction LDUR not yet implemented."
	134 Move X8, [X8+40]
	135 NotImplemented "Instruction LDUR not yet implemented."
	136 NotImplemented "Instruction CMP not yet implemented."
	137 Move X0, X19
	138 Add X31, X29, 0
	139 Move X20, [X31+80]
	140 Move X19, [X31+88]
	141 Move X22, [X31+64]
	142 Move X21, [X31+72]
	143 Move X24, [X31+48]
	144 Move X23, [X31+56]
	145 Move X26, [X31+32]
	146 Move X25, [X31+40]
	147 Move X28, [X31+16]
	148 Move X27, [X31+24]
	149 Move X29, [X31+96]
	150 Move X30, [X31+104]
	151 Return X0
	152 Call 0x1C17F20
	153 Call 0x3EB2B20

Method: UnityEngine.Vector3 GetHalfPositionBetweenTwoPoints(UnityEngine.Vector3 pointA, UnityEngine.Vector3 pointB)

Disassembly:
	0x01E291AC LDR W8, [X8 + 0x20]
	0x01E291B0 CMP W23, W8
	0x01E291B4 B.GT 0x1E291D4
	0x01E291B8 CBZ X24, 0x1E29764
	0x01E291BC MOV X0, X24
	0x01E291C0 MOV W1, W31
	0x01E291C4 MOV X2, X31
	0x01E291C8 BL 0x3C170A8
	0x01E291CC LDR X8, [X31 + 0x20]
	0x01E291D0 LDR W8, [X8 + 0x20]
	0x01E291D4 CMP W23, W8

ISIL:
	001 Subtract S3, S3, S0
	002 Move S6, 0.5
	003 Subtract S4, S4, S1
	004 Subtract S5, S5, S2
	005 Multiply S3, S3, S6
	006 Multiply S4, S4, S6
	007 Multiply S5, S5, S6
	008 Add S0, S0, S3
	009 Add S1, S1, S4
	010 Add S2, S2, S5
	011 Return X0

Method: System.Void .ctor()

Disassembly:
	0x01E291D8 B.LE 0x1E291F0
	0x01E291DC CBZ X24, 0x1E29764

ISIL:
	001 Move X1, X31
	002 Call MonoBehaviour..ctor, X0
	003 Return 

