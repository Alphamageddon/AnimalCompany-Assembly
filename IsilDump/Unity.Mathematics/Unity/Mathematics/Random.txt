Type: Unity.Mathematics.Random

Method: System.Void .ctor(System.UInt32 seed)

Disassembly:
	0x038CAF64 EOR W10, W9, W9, 0xD
	0x038CAF68 EOR X8, X9, X8, 0x14
	0x038CAF6C EOR W9, W10, W10, 0x11
	0x038CAF70 ORR X8, X8, 0x3FFFFFFFFFFFFFFF
	0x038CAF74 EOR W9, W9, W9, 0x5

ISIL:
	001 Xor W8, W1, W1
	002 Xor W8, W8, W8
	003 Xor W8, W8, W8
	004 Move [X0], W8
	005 Return 

Method: Unity.Mathematics.Random CreateFromIndex(System.UInt32 index)

Disassembly:
	0x038CAF78 FMOV D4, X8
	0x038CAF7C EOR W8, W9, W9, 0xD
	0x038CAF80 EOR W8, W8, W8, 0x11
	0x038CAF84 EOR W8, W8, W8, 0x5
	0x038CAF88 EOR W10, W8, W8, 0xD
	0x038CAF8C EOR X8, X8, X9, 0x14
	0x038CAF90 EOR W9, W10, W10, 0x11
	0x038CAF94 FADD D4, D4, D3
	0x038CAF98 ORR X8, X8, 0x3FFFFFFFFFFFFFFF
	0x038CAF9C EOR W9, W9, W9, 0x5
	0x038CAFA0 FMUL D0, D0, D4
	0x038CAFA4 FMOV D4, X8
	0x038CAFA8 EOR W8, W9, W9, 0xD
	0x038CAFAC EOR W8, W8, W8, 0x11

ISIL:
	001 Add W8, W0, 62
	002 Move W9, 61
	003 Xor W8, W8, W8
	004 Xor W8, W8, W9
	005 Add W8, W8, W8
	006 Move W9, 0xEB2D
	007 Xor W8, W8, W8
	008 NotImplemented "Instruction MOVK not yet implemented."
	009 Multiply W8, W8, W9
	010 Xor W8, W8, W8
	011 Xor W8, W8, W8
	012 Xor W8, W8, W8
	013 Xor W0, W8, W8
	014 Return X0

Method: System.UInt32 WangHash(System.UInt32 n)

Disassembly:
	0x038CAFB0 EOR W8, W8, W8, 0x5
	0x038CAFB4 EOR W10, W8, W8, 0xD
	0x038CAFB8 EOR X8, X8, X9, 0x14
	0x038CAFBC ORR X8, X8, 0x3FFFFFFFFFFFFFFF
	0x038CAFC0 FMOV D5, X8
	0x038CAFC4 FADD D4, D4, D3
	0x038CAFC8 EOR W9, W10, W10, 0x11
	0x038CAFCC FADD D3, D5, D3
	0x038CAFD0 EOR W9, W9, W9, 0x5
	0x038CAFD4 FMUL D1, D1, D4

ISIL:
	001 Xor W8, W0, W0
	002 Move W9, 61
	003 Xor W8, W8, W9
	004 Add W8, W8, W8
	005 Move W9, 0xEB2D
	006 Xor W8, W8, W8
	007 NotImplemented "Instruction MOVK not yet implemented."
	008 Multiply W8, W8, W9
	009 Xor W0, W8, W8
	010 Return X0

Method: System.Void InitState(System.UInt32 seed = 1851936439)

Disassembly:
	0x038CAFD8 FMUL D2, D2, D3
	0x038CAFDC STR W9, [X0]
	0x038CAFE0 RET
	0x038CAFE4 LDR W8, [X0]
	0x038CAFE8 FMOV D4, -1

ISIL:
	001 Xor W8, W1, W1
	002 Xor W8, W8, W8
	003 Xor W8, W8, W8
	004 Move [X0], W8
	005 Return 

Method: System.Boolean NextBool()

Disassembly:
	0x038CAFEC EOR W9, W8, W8, 0xD
	0x038CAFF0 EOR W9, W9, W9, 0x11
	0x038CAFF4 EOR W9, W9, W9, 0x5
	0x038CAFF8 EOR W10, W9, W9, 0xD
	0x038CAFFC EOR X8, X9, X8, 0x14
	0x038CB000 EOR W9, W10, W10, 0x11
	0x038CB004 ORR X8, X8, 0x3FFFFFFFFFFFFFFF
	0x038CB008 EOR W9, W9, W9, 0x5

ISIL:
	001 Move W8, [X0]
	002 Xor W9, W8, W8
	003 Xor W9, W9, W9
	004 Xor W9, W9, W9
	005 And W8, W8, 1
	006 Move [X0], W9
	007 Move W0, W8
	008 Return X0

Method: Unity.Mathematics.bool2 NextBool2()

Disassembly:
	0x038CB00C FMOV D5, X8
	0x038CB010 EOR W8, W9, W9, 0xD
	0x038CB014 EOR W8, W8, W8, 0x11
	0x038CB018 EOR W8, W8, W8, 0x5
	0x038CB01C EOR W10, W8, W8, 0xD
	0x038CB020 EOR X8, X8, X9, 0x14
	0x038CB024 EOR W9, W10, W10, 0x11
	0x038CB028 FADD D5, D5, D4
	0x038CB02C ORR X8, X8, 0x3FFFFFFFFFFFFFFF
	0x038CB030 EOR W9, W9, W9, 0x5
	0x038CB034 FMUL D0, D0, D5
	0x038CB038 FMOV D5, X8

ISIL:
	001 Move W8, [X0]
	002 Move W10, W8
	003 ShiftRight W10, 25
	004 And W10, W10, 0xFFFFFF
	005 Xor W9, W8, W8
	006 And X10, X10, 511
	007 Xor W9, W9, W9
	008 NotImplemented "Instruction BFM not yet implemented."
	009 Move W8, 257
	010 Xor W9, W9, W9
	011 Xor X8, X10, X8
	012 Move [X0], W9
	013 Move X0, X8
	014 Return X0

Method: Unity.Mathematics.bool3 NextBool3()

Disassembly:
	0x038CB03C EOR W8, W9, W9, 0xD
	0x038CB040 EOR W8, W8, W8, 0x11
	0x038CB044 EOR W8, W8, W8, 0x5
	0x038CB048 EOR W10, W8, W8, 0xD
	0x038CB04C EOR X8, X8, X9, 0x14
	0x038CB050 EOR W9, W10, W10, 0x11
	0x038CB054 FADD D5, D5, D4
	0x038CB058 ORR X8, X8, 0x3FFFFFFFFFFFFFFF
	0x038CB05C EOR W9, W9, W9, 0x5
	0x038CB060 FMUL D1, D1, D5
	0x038CB064 FMOV D5, X8
	0x038CB068 EOR W8, W9, W9, 0xD
	0x038CB06C EOR W8, W8, W8, 0x11
	0x038CB070 EOR W8, W8, W8, 0x5
	0x038CB074 EOR W10, W8, W8, 0xD
	0x038CB078 EOR X8, X8, X9, 0x14

ISIL:
	001 Move W9, [X0]
	002 Move TEMP, 0
	003 Not TEMP
	004 Move W8, TEMP
	005 Move W10, W9
	006 ShiftRight W10, 25
	007 And W10, W10, 0xFFFFFF
	008 Xor W8, W8, W9
	009 And X10, X10, 511
	010 And X8, X8, 0x1FFFF
	011 NotImplemented "Instruction BFM not yet implemented."
	012 Xor W9, W9, W9
	013 Or X8, X10, X8
	014 Move W10, 257
	015 Xor W9, W9, W9
	016 Xor X8, X8, X10
	017 Xor W9, W9, W9
	018 Move [X0], W9
	019 Move X0, X8
	020 Return X0

Method: Unity.Mathematics.bool4 NextBool4()

Disassembly:
	0x038CB07C ORR X8, X8, 0x3FFFFFFFFFFFFFFF
	0x038CB080 FMOV D6, X8
	0x038CB084 FADD D5, D5, D4
	0x038CB088 EOR W9, W10, W10, 0x11
	0x038CB08C FADD D4, D6, D4
	0x038CB090 EOR W9, W9, W9, 0x5
	0x038CB094 FMUL D2, D2, D5
	0x038CB098 FMUL D3, D3, D4
	0x038CB09C STR W9, [X0]
	0x038CB0A0 RET
	0x038CB0A4 LDR W8, [X0]
	0x038CB0A8 FMOV D2, -1
	0x038CB0AC FSUB D1, D1, D0
	0x038CB0B0 EOR W9, W8, W8, 0xD
	0x038CB0B4 EOR W9, W9, W9, 0x11
	0x038CB0B8 EOR W9, W9, W9, 0x5
	0x038CB0BC EOR X8, X9, X8, 0x14
	0x038CB0C0 ORR X8, X8, 0x3FFFFFFFFFFFFFFF
	0x038CB0C4 FMOV D3, X8
	0x038CB0C8 EOR W10, W9, W9, 0xD

ISIL:
	001 Move W8, [X0]
	002 Move W9, W8
	003 ShiftRight W9, 11
	004 And W9, W9, 1023
	005 Move W10, W8
	006 ShiftRight W10, 25
	007 And W10, W10, 0xFFFFFF
	008 And X9, X9, 0x1FFFFFF
	009 And X10, X10, 511
	010 NotImplemented "Instruction BFM not yet implemented."
	011 Or X9, X9, X10
	012 Move TEMP, 0
	013 Not TEMP
	014 Move W10, TEMP
	015 Xor W10, W10, W8
	016 Xor W8, W8, W8
	017 Xor W8, W8, W8
	018 And X10, X10, 0x1FFFF
	019 Xor W11, W8, W8
	020 Or X8, X9, X10
	021 Move W9, 257
	022 NotImplemented "Instruction MOVK not yet implemented."
	023 Xor X8, X8, X9
	024 Move [X0], W11
	025 Move X0, X8
	026 Return X0

Method: System.Int32 NextInt()

Disassembly:
	0x038CB0CC FADD D2, D3, D2
	0x038CB0D0 EOR W9, W10, W10, 0x11
	0x038CB0D4 FMUL D1, D1, D2
	0x038CB0D8 EOR W9, W9, W9, 0x5
	0x038CB0DC FADD D0, D1, D0
	0x038CB0E0 STR W9, [X0]
	0x038CB0E4 RET
	0x038CB0E8 LDR W8, [X0]

ISIL:
	001 Move W8, [X0]
	002 Xor W9, W8, W8
	003 Xor W9, W9, W9
	004 Xor W9, W9, W9
	005 Xor W8, W8, 0x80000000
	006 Move [X0], W9
	007 Move W0, W8
	008 Return X0

Method: Unity.Mathematics.int2 NextInt2()

Disassembly:
	0x038CB0EC FMOV D4, -1
	0x038CB0F0 FSUB D2, D2, D0
	0x038CB0F4 FSUB D3, D3, D1
	0x038CB0F8 EOR W9, W8, W8, 0xD
	0x038CB0FC EOR W9, W9, W9, 0x11
	0x038CB100 EOR W9, W9, W9, 0x5
	0x038CB104 EOR W10, W9, W9, 0xD
	0x038CB108 EOR X8, X9, X8, 0x14
	0x038CB10C EOR W9, W10, W10, 0x11
	0x038CB110 ORR X8, X8, 0x3FFFFFFFFFFFFFFF
	0x038CB114 EOR W9, W9, W9, 0x5
	0x038CB118 FMOV D5, X8
	0x038CB11C EOR W8, W9, W9, 0xD

ISIL:
	001 Move W8, [X0]
	002 Xor W9, W8, W8
	003 Xor W9, W9, W9
	004 Xor W9, W9, W9
	005 Xor W10, W9, W9
	006 Xor X8, X8, 0xFFFFFFFF
	007 Xor W9, W9, 0x80000000
	008 Xor W10, W10, W10
	009 Xor W10, W10, W10
	010 NotImplemented "Instruction BFM not yet implemented."
	011 Move [X0], W10
	012 Move X0, X8
	013 Return X0

Method: Unity.Mathematics.int3 NextInt3()

Disassembly:
	0x038CB120 EOR W8, W8, W8, 0x11
	0x038CB124 EOR W8, W8, W8, 0x5
	0x038CB128 EOR W10, W8, W8, 0xD
	0x038CB12C EOR X8, X8, X9, 0x14
	0x038CB130 FADD D5, D5, D4
	0x038CB134 ORR X8, X8, 0x3FFFFFFFFFFFFFFF
	0x038CB138 FMUL D2, D2, D5
	0x038CB13C FMOV D5, X8
	0x038CB140 FADD D4, D5, D4
	0x038CB144 EOR W9, W10, W10, 0x11
	0x038CB148 FMUL D3, D3, D4
	0x038CB14C EOR W9, W9, W9, 0x5
	0x038CB150 FADD D0, D0, D2
	0x038CB154 FADD D1, D1, D3
	0x038CB158 STR W9, [X0]
	0x038CB15C RET
	0x038CB160 LDR W8, [X0]

ISIL:
	001 Move W8, [X0]
	002 Xor W9, W8, W8
	003 Xor W9, W9, W9
	004 Xor W9, W9, W9
	005 Xor W10, W9, W9
	006 Xor W10, W10, W10
	007 Xor W10, W10, W10
	008 Xor W11, W10, W10
	009 Xor X8, X8, 0xFFFFFFFF
	010 Xor W9, W9, 0x80000000
	011 Xor W1, W10, 0x80000000
	012 Xor W10, W11, W11
	013 Xor W10, W10, W10
	014 NotImplemented "Instruction BFM not yet implemented."
	015 Move [X0], W10
	016 Move X0, X8
	017 Return X0

Method: Unity.Mathematics.int4 NextInt4()

Disassembly:
	0x038CB164 FMOV D6, -1
	0x038CB168 FSUB D3, D3, D0
	0x038CB16C FSUB D4, D4, D1
	0x038CB170 EOR W9, W8, W8, 0xD
	0x038CB174 EOR W9, W9, W9, 0x11
	0x038CB178 EOR W9, W9, W9, 0x5
	0x038CB17C EOR W10, W9, W9, 0xD
	0x038CB180 EOR X8, X9, X8, 0x14
	0x038CB184 EOR W9, W10, W10, 0x11
	0x038CB188 ORR X8, X8, 0x3FFFFFFFFFFFFFFF
	0x038CB18C EOR W9, W9, W9, 0x5
	0x038CB190 FMOV D7, X8
	0x038CB194 EOR W8, W9, W9, 0xD
	0x038CB198 EOR W8, W8, W8, 0x11
	0x038CB19C EOR W8, W8, W8, 0x5
	0x038CB1A0 EOR W10, W8, W8, 0xD
	0x038CB1A4 FADD D7, D7, D6
	0x038CB1A8 EOR X8, X8, X9, 0x14
	0x038CB1AC EOR W9, W10, W10, 0x11
	0x038CB1B0 FMUL D3, D3, D7
	0x038CB1B4 ORR X8, X8, 0x3FFFFFFFFFFFFFFF
	0x038CB1B8 EOR W9, W9, W9, 0x5

ISIL:
	001 Move W8, [X0]
	002 Xor W9, W8, W8
	003 Xor W9, W9, W9
	004 Xor W9, W9, W9
	005 Xor W10, W9, W9
	006 Xor W10, W10, W10
	007 Xor W10, W10, W10
	008 Xor W11, W10, W10
	009 Xor W1, W10, 0x80000000
	010 Xor W10, W11, W11
	011 Xor W10, W10, W10
	012 Xor W11, W10, W10
	013 Xor X8, X8, 0xFFFFFFFF
	014 Xor W9, W9, 0x80000000
	015 Xor W10, W10, 0x80000000
	016 Xor W11, W11, W11
	017 NotImplemented "Instruction BFM not yet implemented."
	018 Xor W10, W11, W11
	019 NotImplemented "Instruction BFM not yet implemented."
	020 Move [X0], W10
	021 Move X0, X8
	022 Return X0

Method: System.Int32 NextInt(System.Int32 max)

Disassembly:
	0x038CB1BC FADD D0, D0, D3
	0x038CB1C0 FMOV D3, X8
	0x038CB1C4 EOR W8, W9, W9, 0xD
	0x038CB1C8 EOR W8, W8, W8, 0x11
	0x038CB1CC EOR W8, W8, W8, 0x5
	0x038CB1D0 EOR W10, W8, W8, 0xD
	0x038CB1D4 EOR X8, X8, X9, 0x14
	0x038CB1D8 FADD D3, D3, D6
	0x038CB1DC ORR X8, X8, 0x3FFFFFFFFFFFFFFF
	0x038CB1E0 FMUL D3, D4, D3

ISIL:
	001 Move W8, [X0]
	002 Move X9, W1
	003 Xor W10, W8, W8
	004 Multiply X8, X8, X9
	005 Xor W9, W10, W10
	006 Xor W9, W9, W9
	007 Move X8, X8
	008 ShiftRight X8, 32
	009 And X8, X8, 0x7FFFFFFF
	010 Move [X0], W9
	011 Move W0, W8
	012 Return X0

Method: Unity.Mathematics.int2 NextInt2(Unity.Mathematics.int2 max)

Disassembly:
	0x038CB1E4 FMOV D4, X8
	0x038CB1E8 FSUB D5, D5, D2
	0x038CB1EC FADD D4, D4, D6
	0x038CB1F0 EOR W9, W10, W10, 0x11
	0x038CB1F4 FMUL D4, D5, D4
	0x038CB1F8 EOR W9, W9, W9, 0x5
	0x038CB1FC FADD D1, D1, D3
	0x038CB200 FADD D2, D2, D4
	0x038CB204 STR W9, [X0]
	0x038CB208 RET
	0x038CB20C LDR W8, [X0]
	0x038CB210 FMOV D16, -1
	0x038CB214 FSUB D4, D4, D0
	0x038CB218 FSUB D5, D5, D1
	0x038CB21C EOR W9, W8, W8, 0xD

ISIL:
	001 Move W8, [X0]
	002 Move X9, W1
	003 NotImplemented "Instruction SBFM not yet implemented."
	004 Xor W11, W8, W8
	005 Multiply X9, X9, X8
	006 Xor W8, W11, W11
	007 Xor W8, W8, W8
	008 Xor W11, W8, W8
	009 Multiply X8, X10, X8
	010 Xor W10, W11, W11
	011 Xor W10, W10, W10
	012 NotImplemented "Instruction BFM not yet implemented."
	013 Move [X0], W10
	014 Move X0, X8
	015 Return X0

Method: Unity.Mathematics.int3 NextInt3(Unity.Mathematics.int3 max)

Disassembly:
	0x038CB220 EOR W9, W9, W9, 0x11
	0x038CB224 EOR W9, W9, W9, 0x5
	0x038CB228 EOR W10, W9, W9, 0xD
	0x038CB22C EOR X8, X9, X8, 0x14
	0x038CB230 EOR W9, W10, W10, 0x11
	0x038CB234 ORR X8, X8, 0x3FFFFFFFFFFFFFFF
	0x038CB238 EOR W9, W9, W9, 0x5
	0x038CB23C FMOV D17, X8
	0x038CB240 EOR W8, W9, W9, 0xD
	0x038CB244 EOR W8, W8, W8, 0x11
	0x038CB248 EOR W8, W8, W8, 0x5
	0x038CB24C EOR W10, W8, W8, 0xD
	0x038CB250 FADD D17, D17, D16
	0x038CB254 EOR X8, X8, X9, 0x14
	0x038CB258 EOR W9, W10, W10, 0x11
	0x038CB25C FMUL D4, D4, D17
	0x038CB260 ORR X8, X8, 0x3FFFFFFFFFFFFFFF
	0x038CB264 EOR W9, W9, W9, 0x5
	0x038CB268 FADD D0, D0, D4
	0x038CB26C FMOV D4, X8
	0x038CB270 EOR W8, W9, W9, 0xD

ISIL:
	001 Move W8, [X0]
	002 Move X9, W1
	003 NotImplemented "Instruction SBFM not yet implemented."
	004 Move X11, W2
	005 Xor W12, W8, W8
	006 Multiply X9, X9, X8
	007 Xor W8, W12, W12
	008 Xor W8, W8, W8
	009 Xor W12, W8, W8
	010 Multiply X8, X10, X8
	011 Xor W10, W12, W12
	012 Xor W10, W10, W10
	013 Xor W12, W10, W10
	014 Multiply X10, X11, X10
	015 Xor W11, W12, W12
	016 Move X1, X10
	017 ShiftRight X1, 32
	018 And X1, X1, 0x7FFFFFFF
	019 Xor W10, W11, W11
	020 NotImplemented "Instruction BFM not yet implemented."
	021 Move [X0], W10
	022 Move X0, X8
	023 Return X0

Method: Unity.Mathematics.int4 NextInt4(Unity.Mathematics.int4 max)

Disassembly:
	0x038CB274 EOR W8, W8, W8, 0x11
	0x038CB278 EOR W8, W8, W8, 0x5
	0x038CB27C EOR W10, W8, W8, 0xD
	0x038CB280 FADD D4, D4, D16
	0x038CB284 EOR X8, X8, X9, 0x14
	0x038CB288 EOR W9, W10, W10, 0x11
	0x038CB28C FMUL D4, D5, D4
	0x038CB290 ORR X8, X8, 0x3FFFFFFFFFFFFFFF
	0x038CB294 EOR W9, W9, W9, 0x5
	0x038CB298 FADD D1, D1, D4
	0x038CB29C FMOV D4, X8
	0x038CB2A0 EOR W8, W9, W9, 0xD
	0x038CB2A4 EOR W8, W8, W8, 0x11
	0x038CB2A8 EOR W8, W8, W8, 0x5
	0x038CB2AC EOR W10, W8, W8, 0xD
	0x038CB2B0 EOR X8, X8, X9, 0x14
	0x038CB2B4 ORR X8, X8, 0x3FFFFFFFFFFFFFFF
	0x038CB2B8 FMOV D5, X8
	0x038CB2BC FSUB D6, D6, D2
	0x038CB2C0 FSUB D7, D7, D3
	0x038CB2C4 FADD D4, D4, D16
	0x038CB2C8 FADD D5, D5, D16
	0x038CB2CC FMUL D4, D6, D4
	0x038CB2D0 EOR W9, W10, W10, 0x11
	0x038CB2D4 FMUL D5, D7, D5
	0x038CB2D8 EOR W9, W9, W9, 0x5

ISIL:
	001 Move W8, [X0]
	002 Move X9, W1
	003 NotImplemented "Instruction SBFM not yet implemented."
	004 Move X11, W2
	005 Xor W13, W8, W8
	006 Multiply X9, X9, X8
	007 Xor W8, W13, W13
	008 Xor W8, W8, W8
	009 Xor W13, W8, W8
	010 Multiply X8, X10, X8
	011 Xor W10, W13, W13
	012 Xor W10, W10, W10
	013 Xor W13, W10, W10
	014 Multiply X10, X11, X10
	015 Xor W11, W13, W13
	016 Xor W11, W11, W11
	017 NotImplemented "Instruction SBFM not yet implemented."
	018 Xor W13, W11, W11
	019 Multiply X1, X12, X11
	020 Xor W11, W13, W13
	021 NotImplemented "Instruction BFM not yet implemented."
	022 Xor W10, W11, W11
	023 NotImplemented "Instruction BFM not yet implemented."
	024 Move [X0], W10
	025 Move X0, X8
	026 Return X0

Method: System.Int32 NextInt(System.Int32 min, System.Int32 max)

Disassembly:
	0x038CB2DC FADD D2, D2, D4
	0x038CB2E0 FADD D3, D3, D5
	0x038CB2E4 STR W9, [X0]
	0x038CB2E8 RET
	0x038CB2EC SUB X31, X31, 0x40
	0x038CB2F0 STP D9, D8, [X31 + 0x10]
	0x038CB2F4 STR X30, [X31 + 0x20]
	0x038CB2F8 STP X20, X19, [X31 + 0x30]
	0x038CB2FC LDR W8, [X0]
	0x038CB300 MOVZ W9, 0x3F800000
	0x038CB304 ADRP X10, 0xFFFFFFFFFD21E000

ISIL:
	001 Move W8, [X0]
	002 Subtract W9, W2, W1
	003 Xor W10, W8, W8
	004 Multiply X8, X8, X9
	005 Xor W9, W10, W10
	006 Move X8, X8
	007 ShiftRight X8, 32
	008 And X8, X8, 0x7FFFFFFF
	009 Xor W9, W9, W9
	010 Add W8, W8, W1
	011 Move [X0], W9
	012 Move W0, W8
	013 Return X0

Method: Unity.Mathematics.int2 NextInt2(Unity.Mathematics.int2 min, Unity.Mathematics.int2 max)

Disassembly:
	0x038CB308 ADRP X19, 0xB16000
	0x038CB30C EOR W11, W8, W8, 0xD
	0x038CB310 BFM W9, W8, 0x9, 0x1F
	0x038CB314 EOR W8, W11, W11, 0x11
	0x038CB318 EOR W8, W8, W8, 0x5
	0x038CB31C STR W8, [X0]
	0x038CB320 LDRB W8, [X19 + 0x56A]
	0x038CB324 LDR V8, [X10 + 0xF4C]
	0x038CB328 FMOV S0, W9
	0x038CB32C FMOV S1, -1
	0x038CB330 FADD S9, S0, S1
	0x038CB334 CBNZ W8, 0x38CB34C
	0x038CB338 ADRP X0, 0x828000
	0x038CB33C LDR X0, [X0 + 0x5A8]
	0x038CB340 BL 0x1C16CF4
	0x038CB344 MOVZ W8, 0x1
	0x038CB348 STRB W8, [X19 + 0x56A]
	0x038CB34C ADRP X19, 0x828000
	0x038CB350 LDR X19, [X19 + 0x5A8]
	0x038CB354 FMUL S8, S9, S8
	0x038CB358 LDR X0, [X19]
	0x038CB35C LDR W8, [X0 + 0xE0]
	0x038CB360 CBNZ W8, 0x38CB368

ISIL:
	001 Move W9, [X0]
	002 And X8, X1, 0
	003 Subtract W10, W2, W1
	004 Subtract X8, X2, X8
	005 Xor W11, W9, W9
	006 Multiply X9, X10, X9
	007 Xor W10, W11, W11
	008 Move X8, X8
	009 ShiftRight X8, 32
	010 And X8, X8, 0x7FFFFFFF
	011 Xor W10, W10, W10
	012 Move X11, X9
	013 ShiftRight X11, 32
	014 And X11, X11, 0x7FFFFFFF
	015 Multiply X8, X8, X10
	016 Add W11, W11, W1
	017 NotImplemented "Instruction BFM not yet implemented."
	018 And X8, X8, 0
	019 Xor W9, W10, W10
	020 Add X8, X1, X8
	021 Xor W9, W9, W9
	022 And X8, X8, 0
	023 Xor W9, W9, W9
	024 Or X8, X8, X11
	025 Move [X0], W9
	026 Move X0, X8
	027 Return X0

Method: Unity.Mathematics.int3 NextInt3(Unity.Mathematics.int3 min, Unity.Mathematics.int3 max)

Disassembly:
	0x038CB364 BL 0x1C16DFC
	0x038CB368 ADRP X20, 0xB16000
	0x038CB36C LDRB W8, [X20 + 0x564]
	0x038CB370 FADD S8, S8, S8
	0x038CB374 CBNZ W8, 0x38CB38C
	0x038CB378 ADRP X0, 0x828000
	0x038CB37C LDR X0, [X0 + 0x5A8]
	0x038CB380 BL 0x1C16CF4
	0x038CB384 MOVZ W8, 0x1
	0x038CB388 STRB W8, [X20 + 0x564]
	0x038CB38C LDR X0, [X19]
	0x038CB390 FCVT S8, S8
	0x038CB394 LDR W8, [X0 + 0xE0]
	0x038CB398 CBNZ W8, 0x38CB3A0
	0x038CB39C BL 0x1C16DFC
	0x038CB3A0 ADD X0, X31, 0x28
	0x038CB3A4 ADD X1, X31, 0x8
	0x038CB3A8 MOV V0.16B, V8.16B
	0x038CB3AC BL 0x3EB1E40
	0x038CB3B0 LDR V0, [X31 + 0x28]
	0x038CB3B4 LDR V2, [X31 + 0x8]
	0x038CB3B8 LDP X20, X19, [X31 + 0x30]
	0x038CB3BC LDR X30, [X31 + 0x20]
	0x038CB3C0 LDP D9, D8, [X31 + 0x10]
	0x00000000 INVALID
	0x00000000 INVALID
	0x038CB3CC ADD X31, X31, 0x40
	0x038CB3D0 RET
	0x038CB3D4 SUB X31, X31, 0x40
	0x038CB3D8 STR D10, [X31 + 0x10]

ISIL:
	001 Move W10, [X0]
	002 Subtract W9, W3, W1
	003 And X8, X1, 0
	004 Subtract X8, X3, X8
	005 Xor W12, W10, W10
	006 Multiply X9, X9, X10
	007 Xor W10, W12, W12
	008 Move X12, X9
	009 ShiftRight X12, 32
	010 And X12, X12, 0x7FFFFFFF
	011 Xor W10, W10, W10
	012 Move X8, X8
	013 ShiftRight X8, 32
	014 And X8, X8, 0x7FFFFFFF
	015 Add W12, W12, W1
	016 NotImplemented "Instruction BFM not yet implemented."
	017 Xor W9, W10, W10
	018 Multiply X8, X8, X10
	019 Xor W9, W9, W9
	020 And X8, X8, 0
	021 Xor W9, W9, W9
	022 Subtract W11, W4, W2
	023 Add X8, X1, X8
	024 Xor W10, W9, W9
	025 NotImplemented "Instruction UMADDL not yet implemented."
	026 And X8, X8, 0
	027 Xor W10, W10, W10
	028 Move X9, X9
	029 ShiftRight X9, 32
	030 And X9, X9, 0x7FFFFFFF
	031 Xor W10, W10, W10
	032 Or X8, X8, X12
	033 Add W1, W9, W2
	034 Move [X0], W10
	035 Move X0, X8
	036 Return X0

Method: Unity.Mathematics.int4 NextInt4(Unity.Mathematics.int4 min, Unity.Mathematics.int4 max)

Disassembly:
	0x038CB3DC STP D9, D8, [X31 + 0x18]
	0x038CB3E0 STR X30, [X31 + 0x28]
	0x038CB3E4 STP X20, X19, [X31 + 0x30]
	0x038CB3E8 LDR W8, [X0]
	0x038CB3EC ADRP X19, 0xB16000
	0x038CB3F0 FMOV D9, -1
	0x038CB3F4 ADRP X20, 0xFFFFFFFFFD222000
	0x038CB3F8 EOR W9, W8, W8, 0xD
	0x038CB3FC EOR W9, W9, W9, 0x11
	0x038CB400 EOR W9, W9, W9, 0x5
	0x038CB404 EOR W10, W9, W9, 0xD
	0x038CB408 EOR X8, X9, X8, 0x14
	0x038CB40C EOR W9, W10, W10, 0x11
	0x038CB410 EOR W9, W9, W9, 0x5
	0x038CB414 STR W9, [X0]
	0x038CB418 LDRB W9, [X19 + 0x56B]
	0x038CB41C ORR X8, X8, 0x3FFFFFFFFFFFFFFF
	0x038CB420 FMOV D8, X8
	0x038CB424 CBNZ W9, 0x38CB43C
	0x038CB428 ADRP X0, 0x828000
	0x038CB42C LDR X0, [X0 + 0x5A8]
	0x038CB430 BL 0x1C16CF4
	0x038CB434 MOVZ W8, 0x1
	0x038CB438 STRB W8, [X19 + 0x56B]
	0x038CB43C ADRP X19, 0x828000
	0x038CB440 LDR X19, [X19 + 0x5A8]
	0x038CB444 LDR V10, [X20 + 0x4B8]
	0x038CB448 FADD D8, D8, D9
	0x038CB44C LDR X0, [X19]
	0x038CB450 LDR W8, [X0 + 0xE0]
	0x038CB454 CBNZ W8, 0x38CB45C
	0x038CB458 BL 0x1C16DFC
	0x038CB45C ADRP X20, 0xB16000
	0x038CB460 LDRB W8, [X20 + 0x565]
	0x038CB464 FMUL D8, D8, D10
	0x038CB468 CBNZ W8, 0x38CB480
	0x038CB46C ADRP X0, 0x828000
	0x038CB470 LDR X0, [X0 + 0x5A8]
	0x038CB474 BL 0x1C16CF4
	0x038CB478 MOVZ W8, 0x1
	0x038CB47C STRB W8, [X20 + 0x565]
	0x038CB480 LDR X0, [X19]

ISIL:
	001 Move W12, [X0]
	002 Subtract W10, W3, W1
	003 And X8, X1, 0
	004 Subtract X8, X3, X8
	005 Xor W13, W12, W12
	006 Multiply X10, X10, X12
	007 Xor W12, W13, W13
	008 Move X13, X10
	009 ShiftRight X13, 32
	010 And X13, X13, 0x7FFFFFFF
	011 Xor W12, W12, W12
	012 Add W13, W13, W1
	013 NotImplemented "Instruction BFM not yet implemented."
	014 Xor W10, W12, W12
	015 Xor W10, W10, W10
	016 Move X8, X8
	017 ShiftRight X8, 32
	018 And X8, X8, 0x7FFFFFFF
	019 Xor W10, W10, W10
	020 And X9, X2, 0
	021 Subtract W11, W4, W2
	022 Multiply X8, X8, X12
	023 Xor W12, W10, W10
	024 Subtract X9, X4, X9
	025 NotImplemented "Instruction UMADDL not yet implemented."
	026 Xor W11, W12, W12
	027 Move X9, X9
	028 ShiftRight X9, 32
	029 And X9, X9, 0x7FFFFFFF
	030 Xor W11, W11, W11
	031 And X8, X8, 0
	032 Move X12, X10
	033 ShiftRight X12, 32
	034 And X12, X12, 0x7FFFFFFF
	035 Multiply X9, X9, X11
	036 Add X8, X1, X8
	037 Add W12, W12, W2
	038 NotImplemented "Instruction BFM not yet implemented."
	039 Xor W10, W11, W11
	040 And X9, X9, 0
	041 And X8, X8, 0
	042 Xor W10, W10, W10
	043 Add X9, X2, X9
	044 Xor W10, W10, W10
	045 And X9, X9, 0
	046 Or X8, X8, X13
	047 Or X1, X9, X12
	048 Move [X0], W10
	049 Move X0, X8
	050 Return X0

Method: System.UInt32 NextUInt()

Disassembly:
	0x038CB484 FADD D8, D8, D8
	0x038CB488 LDR W8, [X0 + 0xE0]
	0x038CB48C CBNZ W8, 0x38CB494
	0x038CB490 BL 0x1C16DFC
	0x038CB494 ADD X0, X31, 0x8
	0x038CB498 ADD X1, X31, 0x0
	0x038CB49C MOV V0.16B, V8.16B
	0x038CB4A0 BL 0x3EB1E40

ISIL:
	001 Move W8, [X0]
	002 Xor W9, W8, W8
	003 Xor W9, W9, W9
	004 Xor W9, W9, W9
	005 Subtract W8, W8, 1
	006 Move [X0], W9
	007 Move W0, W8
	008 Return X0

Method: Unity.Mathematics.uint2 NextUInt2()

Disassembly:
	0x038CB4A4 LDP D0, D1, [X31]
	0x038CB4A8 LDP X20, X19, [X31 + 0x30]
	0x038CB4AC LDR X30, [X31 + 0x28]
	0x038CB4B0 LDP D9, D8, [X31 + 0x18]
	0x038CB4B4 LDR V10, [X31 + 0x10]
	0x038CB4B8 ADD X31, X31, 0x40
	0x038CB4BC RET
	0x038CB4C0 SUB X31, X31, 0x60
	0x038CB4C4 STP D13, D12, [X31 + 0x10]
	0x038CB4C8 STP D11, D10, [X31 + 0x20]
	0x038CB4CC STP D9, D8, [X31 + 0x30]
	0x038CB4D0 STR X30, [X31 + 0x40]
	0x038CB4D4 STP X20, X19, [X31 + 0x50]

ISIL:
	001 Move W8, [X0]
	002 Xor W9, W8, W8
	003 Xor W9, W9, W9
	004 Xor W9, W9, W9
	005 Xor W10, W9, W9
	006 Subtract W8, W8, 1
	007 Subtract W9, W9, 1
	008 Xor W10, W10, W10
	009 Xor W10, W10, W10
	010 NotImplemented "Instruction BFM not yet implemented."
	011 Move [X0], W10
	012 Move X0, X8
	013 Return X0

Method: Unity.Mathematics.uint3 NextUInt3()

Disassembly:
	0x038CB4D8 LDR W8, [X0]
	0x038CB4DC MOVZ W9, 0x3F800000
	0x038CB4E0 ADRP X19, 0xB16000
	0x038CB4E4 FMOV S9, -1
	0x038CB4E8 EOR W10, W8, W8, 0xD
	0x038CB4EC BFM W9, W8, 0x9, 0x1F
	0x038CB4F0 EOR W8, W10, W10, 0x11
	0x038CB4F4 EOR W8, W8, W8, 0x5
	0x038CB4F8 EOR W10, W8, W8, 0xD
	0x038CB4FC EOR W10, W10, W10, 0x11
	0x038CB500 EOR W10, W10, W10, 0x5
	0x038CB504 STR W10, [X0]
	0x038CB508 LDRB W10, [X19 + 0x585]
	0x038CB50C FMOV S0, W9
	0x038CB510 MOVZ W20, 0x3F800000
	0x038CB514 FADD S0, S0, S9
	0x038CB518 BFM W20, W8, 0x9, 0x1F

ISIL:
	001 Move W8, [X0]
	002 Xor W9, W8, W8
	003 Xor W9, W9, W9
	004 Xor W9, W9, W9
	005 Xor W10, W9, W9
	006 Xor W10, W10, W10
	007 Xor W10, W10, W10
	008 Xor W11, W10, W10
	009 Subtract W8, W8, 1
	010 Subtract W9, W9, 1
	011 Subtract W1, W10, 1
	012 Xor W10, W11, W11
	013 Xor W10, W10, W10
	014 NotImplemented "Instruction BFM not yet implemented."
	015 Move [X0], W10
	016 Move X0, X8
	017 Return X0

Method: Unity.Mathematics.uint4 NextUInt4()

Disassembly:
	0x038CB51C FADD S8, S0, S0
	0x038CB520 CBNZ W10, 0x38CB538
	0x038CB524 ADRP X0, 0x828000
	0x038CB528 LDR X0, [X0 + 0x5A8]
	0x038CB52C BL 0x1C16CF4
	0x038CB530 MOVZ W8, 0x1
	0x038CB534 STRB W8, [X19 + 0x585]
	0x038CB538 ADRP X19, 0x828000
	0x038CB53C LDR X19, [X19 + 0x5A8]
	0x038CB540 FMOV S10, W20
	0x038CB544 FADD S8, S8, S9
	0x038CB548 LDR X0, [X19]
	0x038CB54C LDR W8, [X0 + 0xE0]
	0x038CB550 CBNZ W8, 0x38CB558
	0x038CB554 BL 0x1C16DFC
	0x038CB558 ADRP X8, 0xFFFFFFFFFD21E000
	0x038CB55C ADRP X20, 0xB16000
	0x038CB560 LDRB W9, [X20 + 0x56A]
	0x038CB564 LDR V11, [X8 + 0xF4C]
	0x038CB568 FMUL S12, S8, S8
	0x038CB56C FMOV S13, 1
	0x038CB570 FADD S9, S10, S9

ISIL:
	001 Move W8, [X0]
	002 Xor W9, W8, W8
	003 Xor W9, W9, W9
	004 Xor W9, W9, W9
	005 Xor W10, W9, W9
	006 Xor W10, W10, W10
	007 Xor W10, W10, W10
	008 Xor W11, W10, W10
	009 Subtract W1, W10, 1
	010 Xor W10, W11, W11
	011 Xor W10, W10, W10
	012 Xor W11, W10, W10
	013 Subtract W8, W8, 1
	014 Subtract W9, W9, 1
	015 Subtract W10, W10, 1
	016 Xor W11, W11, W11
	017 NotImplemented "Instruction BFM not yet implemented."
	018 Xor W10, W11, W11
	019 NotImplemented "Instruction BFM not yet implemented."
	020 Move [X0], W10
	021 Move X0, X8
	022 Return X0

Method: System.UInt32 NextUInt(System.UInt32 max)

Disassembly:
	0x038CB574 CBNZ W9, 0x38CB58C
	0x038CB578 ADRP X0, 0x828000
	0x038CB57C LDR X0, [X0 + 0x5A8]
	0x038CB580 BL 0x1C16CF4
	0x038CB584 MOVZ W8, 0x1
	0x038CB588 STRB W8, [X20 + 0x56A]
	0x038CB58C LDR X0, [X19]
	0x038CB590 FSUB S10, S13, S12
	0x038CB594 FMOV S12, W31
	0x038CB598 FMUL S11, S9, S11

ISIL:
	001 Move W8, [X0]
	002 Move W9, W1
	003 Xor W10, W8, W8
	004 Multiply X8, X8, X9
	005 Xor W9, W10, W10
	006 Xor W9, W9, W9
	007 Move X8, X8
	008 ShiftRight X8, 32
	009 And X8, X8, 0x7FFFFFFF
	010 Move [X0], W9
	011 Move W0, W8
	012 Return X0

Method: Unity.Mathematics.uint2 NextUInt2(Unity.Mathematics.uint2 max)

Disassembly:
	0x038CB59C LDR W8, [X0 + 0xE0]
	0x038CB5A0 CBNZ W8, 0x38CB5A8
	0x038CB5A4 BL 0x1C16DFC
	0x038CB5A8 ADRP X20, 0xB16000
	0x038CB5AC LDRB W8, [X20 + 0x564]
	0x038CB5B0 FMAXNM S9, S10, S12
	0x038CB5B4 FADD S11, S11, S11
	0x038CB5B8 CBNZ W8, 0x38CB5D0
	0x038CB5BC ADRP X0, 0x828000
	0x038CB5C0 LDR X0, [X0 + 0x5A8]
	0x038CB5C4 BL 0x1C16CF4
	0x038CB5C8 MOVZ W8, 0x1
	0x038CB5CC STRB W8, [X20 + 0x564]
	0x038CB5D0 LDR X0, [X19]
	0x038CB5D4 FSQRT S10, S9

ISIL:
	001 Move W8, [X0]
	002 And X10, X1, 0
	003 Move X9, X1
	004 ShiftRight X9, 32
	005 And X9, X9, 0x7FFFFFFF
	006 Xor W11, W8, W8
	007 Multiply X10, X10, X8
	008 Xor W8, W11, W11
	009 Xor W8, W8, W8
	010 Xor W11, W8, W8
	011 Multiply X8, X9, X8
	012 Xor W9, W11, W11
	013 Xor W9, W9, W9
	014 NotImplemented "Instruction BFM not yet implemented."
	015 Move [X0], W9
	016 Move X0, X8
	017 Return X0

Method: Unity.Mathematics.uint3 NextUInt3(Unity.Mathematics.uint3 max)

Disassembly:
	0x038CB5D8 FCVT S9, S11
	0x038CB5DC LDR W8, [X0 + 0xE0]
	0x038CB5E0 CBNZ W8, 0x38CB5E8
	0x038CB5E4 BL 0x1C16DFC
	0x038CB5E8 ADD X0, X31, 0x48
	0x038CB5EC ADD X1, X31, 0x8
	0x038CB5F0 MOV V0.16B, V9.16B
	0x038CB5F4 BL 0x3EB1E40
	0x038CB5F8 LDR V0, [X31 + 0x48]
	0x038CB5FC LDR V1, [X31 + 0x8]
	0x038CB600 LDP X20, X19, [X31 + 0x50]
	0x038CB604 LDR X30, [X31 + 0x40]
	0x00000000 INVALID
	0x00000000 INVALID
	0x038CB610 FMUL S0, S10, S0
	0x038CB614 FMUL S1, S10, S2
	0x038CB618 MOV V2.16B, V8.16B
	0x038CB61C LDP D9, D8, [X31 + 0x30]
	0x038CB620 LDP D11, D10, [X31 + 0x20]
	0x038CB624 LDP D13, D12, [X31 + 0x10]

ISIL:
	001 Move W8, [X0]
	002 And X10, X1, 0
	003 Move X9, X1
	004 ShiftRight X9, 32
	005 And X9, X9, 0x7FFFFFFF
	006 Xor W11, W8, W8
	007 Multiply X10, X10, X8
	008 Xor W8, W11, W11
	009 Xor W8, W8, W8
	010 Xor W11, W8, W8
	011 Multiply X8, X9, X8
	012 Xor W9, W11, W11
	013 Xor W9, W9, W9
	014 Xor W11, W9, W9
	015 NotImplemented "Instruction UMADDL not yet implemented."
	016 Xor W11, W11, W11
	017 Move X1, X9
	018 ShiftRight X1, 32
	019 And X1, X1, 0x7FFFFFFF
	020 Xor W9, W11, W11
	021 NotImplemented "Instruction BFM not yet implemented."
	022 Move [X0], W9
	023 Move X0, X8
	024 Return X0

Method: Unity.Mathematics.uint4 NextUInt4(Unity.Mathematics.uint4 max)

Disassembly:
	0x038CB628 ADD X31, X31, 0x60
	0x038CB62C RET
	0x038CB630 SUB X31, X31, 0x60
	0x038CB634 STP D13, D12, [X31 + 0x10]
	0x038CB638 STP D11, D10, [X31 + 0x20]
	0x038CB63C STP D9, D8, [X31 + 0x30]
	0x038CB640 STP X30, X21, [X31 + 0x40]
	0x038CB644 STP X20, X19, [X31 + 0x50]
	0x038CB648 LDR W8, [X0]
	0x038CB64C ADRP X19, 0xB16000
	0x038CB650 FMOV D9, -1
	0x038CB654 EOR W9, W8, W8, 0xD
	0x038CB658 EOR W9, W9, W9, 0x11
	0x038CB65C EOR W9, W9, W9, 0x5
	0x038CB660 EOR W10, W9, W9, 0xD
	0x038CB664 EOR X8, X9, X8, 0x14
	0x038CB668 EOR W9, W10, W10, 0x11
	0x038CB66C EOR W9, W9, W9, 0x5
	0x038CB670 EOR W10, W9, W9, 0xD
	0x038CB674 EOR W10, W10, W10, 0x11
	0x038CB678 EOR W10, W10, W10, 0x5
	0x038CB67C EOR W11, W10, W10, 0xD
	0x038CB680 EOR W11, W11, W11, 0x11
	0x038CB684 EOR W11, W11, W11, 0x5
	0x038CB688 STR W11, [X0]

ISIL:
	001 Move W8, [X0]
	002 And X10, X1, 0
	003 Move X9, X1
	004 ShiftRight X9, 32
	005 And X9, X9, 0x7FFFFFFF
	006 Move X11, X2
	007 ShiftRight X11, 32
	008 And X11, X11, 0x7FFFFFFF
	009 Xor W12, W8, W8
	010 Multiply X10, X10, X8
	011 Xor W8, W12, W12
	012 Xor W8, W8, W8
	013 Xor W12, W8, W8
	014 Multiply X8, X9, X8
	015 Xor W9, W12, W12
	016 Xor W9, W9, W9
	017 Xor W12, W9, W9
	018 Xor W12, W12, W12
	019 Xor W12, W12, W12
	020 Xor W13, W12, W12
	021 NotImplemented "Instruction UMADDL not yet implemented."
	022 Multiply X1, X11, X12
	023 Xor W11, W13, W13
	024 NotImplemented "Instruction BFM not yet implemented."
	025 Xor W9, W11, W11
	026 NotImplemented "Instruction BFM not yet implemented."
	027 Move [X0], W9
	028 Move X0, X8
	029 Return X0

Method: System.UInt32 NextUInt(System.UInt32 min, System.UInt32 max)

Disassembly:
	0x038CB68C ORR X8, X8, 0x3FFFFFFFFFFFFFFF
	0x038CB690 LDRB W11, [X19 + 0x586]
	0x038CB694 FMOV D0, X8
	0x038CB698 FADD D0, D0, D9
	0x038CB69C EOR X20, X10, X9, 0x14
	0x038CB6A0 FADD D8, D0, D0
	0x038CB6A4 CBNZ W11, 0x38CB6BC
	0x038CB6A8 ADRP X0, 0x828000
	0x038CB6AC LDR X0, [X0 + 0x5A8]
	0x038CB6B0 BL 0x1C16CF4
	0x038CB6B4 MOVZ W8, 0x1

ISIL:
	001 Move W8, [X0]
	002 Subtract W9, W2, W1
	003 Xor W10, W8, W8
	004 Multiply X8, X8, X9
	005 Xor W9, W10, W10
	006 Move X8, X8
	007 ShiftRight X8, 32
	008 And X8, X8, 0x7FFFFFFF
	009 Xor W9, W9, W9
	010 Add W8, W8, W1
	011 Move [X0], W9
	012 Move W0, W8
	013 Return X0

Method: Unity.Mathematics.uint2 NextUInt2(Unity.Mathematics.uint2 min, Unity.Mathematics.uint2 max)

Disassembly:
	0x038CB6B8 STRB W8, [X19 + 0x586]
	0x038CB6BC ADRP X19, 0x828000
	0x038CB6C0 LDR X19, [X19 + 0x5A8]
	0x038CB6C4 ORR X20, X20, 0x3FFFFFFFFFFFFFFF
	0x038CB6C8 FADD D8, D8, D9
	0x038CB6CC LDR X0, [X19]
	0x038CB6D0 LDR W8, [X0 + 0xE0]
	0x038CB6D4 CBNZ W8, 0x38CB6DC
	0x038CB6D8 BL 0x1C16DFC
	0x038CB6DC ADRP X21, 0xB16000
	0x038CB6E0 LDRB W8, [X21 + 0x56B]
	0x038CB6E4 FMOV D10, X20
	0x038CB6E8 FMUL D11, D8, D8
	0x038CB6EC FMOV D12, 1
	0x038CB6F0 ADRP X20, 0xFFFFFFFFFD222000
	0x038CB6F4 CBNZ W8, 0x38CB70C
	0x038CB6F8 ADRP X0, 0x828000
	0x038CB6FC LDR X0, [X0 + 0x5A8]
	0x038CB700 BL 0x1C16CF4
	0x038CB704 MOVZ W8, 0x1
	0x038CB708 STRB W8, [X21 + 0x56B]
	0x038CB70C LDR X0, [X19]
	0x038CB710 LDR V13, [X20 + 0x4B8]

ISIL:
	001 Move W9, [X0]
	002 And X8, X1, 0
	003 Subtract W10, W2, W1
	004 Subtract X8, X2, X8
	005 Xor W11, W9, W9
	006 Multiply X9, X10, X9
	007 Xor W10, W11, W11
	008 Move X8, X8
	009 ShiftRight X8, 32
	010 And X8, X8, 0x7FFFFFFF
	011 Xor W10, W10, W10
	012 Move X11, X9
	013 ShiftRight X11, 32
	014 And X11, X11, 0x7FFFFFFF
	015 Multiply X8, X8, X10
	016 Add W11, W11, W1
	017 NotImplemented "Instruction BFM not yet implemented."
	018 And X8, X8, 0
	019 Xor W9, W10, W10
	020 Add X8, X1, X8
	021 Xor W9, W9, W9
	022 And X8, X8, 0
	023 Xor W9, W9, W9
	024 Or X8, X8, X11
	025 Move [X0], W9
	026 Move X0, X8
	027 Return X0

Method: Unity.Mathematics.uint3 NextUInt3(Unity.Mathematics.uint3 min, Unity.Mathematics.uint3 max)

Disassembly:
	0x038CB714 FSUB D11, D12, D11
	0x038CB718 FMOV D12, X31
	0x038CB71C LDR W8, [X0 + 0xE0]
	0x038CB720 FADD D10, D10, D9
	0x038CB724 CBNZ W8, 0x38CB72C
	0x038CB728 BL 0x1C16DFC
	0x038CB72C ADRP X20, 0xB16000
	0x038CB730 LDRB W8, [X20 + 0x565]
	0x038CB734 FMAXNM D9, D11, D12
	0x038CB738 FMUL D11, D10, D13
	0x038CB73C CBNZ W8, 0x38CB754
	0x038CB740 ADRP X0, 0x828000
	0x038CB744 LDR X0, [X0 + 0x5A8]
	0x038CB748 BL 0x1C16CF4
	0x038CB74C MOVZ W8, 0x1
	0x038CB750 STRB W8, [X20 + 0x565]
	0x038CB754 LDR X0, [X19]
	0x038CB758 FSQRT D10, D9
	0x038CB75C FADD D9, D11, D11
	0x038CB760 LDR W8, [X0 + 0xE0]
	0x038CB764 CBNZ W8, 0x38CB76C
	0x038CB768 BL 0x1C16DFC
	0x038CB76C ADD X0, X31, 0x8
	0x038CB770 ADD X1, X31, 0x0
	0x038CB774 MOV V0.16B, V9.16B
	0x038CB778 BL 0x3EB1E40
	0x038CB77C LDP D0, D1, [X31]
	0x038CB780 MOV V2.16B, V8.16B
	0x038CB784 LDP X20, X19, [X31 + 0x50]
	0x038CB788 LDP X30, X21, [X31 + 0x40]

ISIL:
	001 Move W10, [X0]
	002 Subtract W9, W3, W1
	003 And X8, X1, 0
	004 Subtract X8, X3, X8
	005 Xor W12, W10, W10
	006 Multiply X9, X9, X10
	007 Xor W10, W12, W12
	008 Move X12, X9
	009 ShiftRight X12, 32
	010 And X12, X12, 0x7FFFFFFF
	011 Xor W10, W10, W10
	012 Move X8, X8
	013 ShiftRight X8, 32
	014 And X8, X8, 0x7FFFFFFF
	015 Add W12, W12, W1
	016 NotImplemented "Instruction BFM not yet implemented."
	017 Xor W9, W10, W10
	018 Multiply X8, X8, X10
	019 Xor W9, W9, W9
	020 And X8, X8, 0
	021 Xor W9, W9, W9
	022 Subtract W11, W4, W2
	023 Add X8, X1, X8
	024 Xor W10, W9, W9
	025 NotImplemented "Instruction UMADDL not yet implemented."
	026 And X8, X8, 0
	027 Xor W10, W10, W10
	028 Move X9, X9
	029 ShiftRight X9, 32
	030 And X9, X9, 0x7FFFFFFF
	031 Xor W10, W10, W10
	032 Or X8, X8, X12
	033 Add W1, W9, W2
	034 Move [X0], W10
	035 Move X0, X8
	036 Return X0

Method: Unity.Mathematics.uint4 NextUInt4(Unity.Mathematics.uint4 min, Unity.Mathematics.uint4 max)

Disassembly:
	0x038CB78C FMUL D0, D10, D0
	0x038CB790 FMUL D1, D10, D1
	0x038CB794 LDP D9, D8, [X31 + 0x30]
	0x038CB798 LDP D11, D10, [X31 + 0x20]
	0x038CB79C LDP D13, D12, [X31 + 0x10]
	0x038CB7A0 ADD X31, X31, 0x60
	0x038CB7A4 RET
	0x038CB7A8 SUB X31, X31, 0x50
	0x038CB7AC STP D9, D8, [X31 + 0x10]
	0x038CB7B0 STP X30, X31, [X31 + 0x20]
	0x038CB7B4 STP X22, X21, [X31 + 0x30]
	0x038CB7B8 STP X20, X19, [X31 + 0x40]
	0x038CB7BC STR X31, [X31 + 0x8]
	0x038CB7C0 LDR W19, [X0]
	0x038CB7C4 MOVZ W8, 0x3F800000
	0x038CB7C8 ADRP X21, 0xB16000
	0x038CB7CC FMOV S1, -1
	0x038CB7D0 EOR W9, W19, W19, 0xD
	0x038CB7D4 EOR W9, W9, W9, 0x11
	0x038CB7D8 EOR W20, W9, W9, 0x5
	0x038CB7DC EOR W9, W20, W20, 0xD
	0x038CB7E0 EOR W9, W9, W9, 0x11
	0x038CB7E4 EOR W9, W9, W9, 0x5
	0x038CB7E8 BFM W8, W9, 0x9, 0x1F
	0x038CB7EC EOR W9, W9, W9, 0xD
	0x038CB7F0 EOR W9, W9, W9, 0x11
	0x038CB7F4 EOR W9, W9, W9, 0x5
	0x038CB7F8 STR W9, [X0]
	0x038CB7FC LDRB W9, [X21 + 0x585]
	0x038CB800 FMOV S0, W8
	0x038CB804 FADD S8, S0, S1
	0x038CB808 FMOV S9, 1
	0x038CB80C CBNZ W9, 0x38CB824
	0x038CB810 ADRP X0, 0x828000
	0x038CB814 LDR X0, [X0 + 0x5A8]
	0x038CB818 BL 0x1C16CF4
	0x038CB81C MOVZ W8, 0x1
	0x038CB820 STRB W8, [X21 + 0x585]
	0x038CB824 ADRP X22, 0x828000
	0x038CB828 LDR X22, [X22 + 0x5A8]
	0x038CB82C FSUB S9, S9, S8
	0x038CB830 LDR X0, [X22]

ISIL:
	001 Move W12, [X0]
	002 Subtract W10, W3, W1
	003 And X8, X1, 0
	004 Subtract X8, X3, X8
	005 Xor W13, W12, W12
	006 Multiply X10, X10, X12
	007 Xor W12, W13, W13
	008 Move X13, X10
	009 ShiftRight X13, 32
	010 And X13, X13, 0x7FFFFFFF
	011 Xor W12, W12, W12
	012 Add W13, W13, W1
	013 NotImplemented "Instruction BFM not yet implemented."
	014 Xor W10, W12, W12
	015 Xor W10, W10, W10
	016 Move X8, X8
	017 ShiftRight X8, 32
	018 And X8, X8, 0x7FFFFFFF
	019 Xor W10, W10, W10
	020 And X9, X2, 0
	021 Subtract W11, W4, W2
	022 Multiply X8, X8, X12
	023 Xor W12, W10, W10
	024 Subtract X9, X4, X9
	025 NotImplemented "Instruction UMADDL not yet implemented."
	026 Xor W11, W12, W12
	027 Move X9, X9
	028 ShiftRight X9, 32
	029 And X9, X9, 0x7FFFFFFF
	030 Xor W11, W11, W11
	031 And X8, X8, 0
	032 Move X12, X10
	033 ShiftRight X12, 32
	034 And X12, X12, 0x7FFFFFFF
	035 Multiply X9, X9, X11
	036 Add X8, X1, X8
	037 Add W12, W12, W2
	038 NotImplemented "Instruction BFM not yet implemented."
	039 Xor W10, W11, W11
	040 And X9, X9, 0
	041 And X8, X8, 0
	042 Xor W10, W10, W10
	043 Add X9, X2, X9
	044 Xor W10, W10, W10
	045 And X9, X9, 0
	046 Or X8, X8, X13
	047 Or X1, X9, X12
	048 Move [X0], W10
	049 Move X0, X8
	050 Return X0

Method: System.Single NextFloat()

Disassembly:
	0x038CB834 LDR W8, [X0 + 0xE0]
	0x038CB838 CBZ W8, 0x38CB844
	0x038CB83C FSQRT S9, S9
	0x038CB840 B 0x38CB868
	0x038CB844 BL 0x1C16DFC
	0x038CB848 LDRB W8, [X21 + 0x585]
	0x038CB84C FSQRT S9, S9
	0x038CB850 CBNZ W8, 0x38CB868
	0x038CB854 ADRP X0, 0x828000
	0x038CB858 LDR X0, [X0 + 0x5A8]
	0x038CB85C BL 0x1C16CF4

ISIL:
	001 Move W8, [X0]
	002 Move W9, 0x3F800000
	003 Move S0, -1
	004 Xor W10, W8, W8
	005 NotImplemented "Instruction BFM not yet implemented."
	006 Xor W8, W10, W10
	007 Move S1, W9
	008 Xor W8, W8, W8
	009 Add S0, S1, S0
	010 Move [X0], W8
	011 Return V0

Method: Unity.Mathematics.float2 NextFloat2()

Disassembly:
	0x038CB860 MOVZ W8, 0x1
	0x038CB864 STRB W8, [X21 + 0x585]
	0x038CB868 LDR X0, [X22]
	0x038CB86C LDR W8, [X0 + 0xE0]
	0x038CB870 CBNZ W8, 0x38CB878
	0x038CB874 BL 0x1C16DFC
	0x038CB878 FMOV S0, W19
	0x038CB87C UNIMPLEMENTED
	0x038CB880 FMOV V1.2S, 0x0
	0x038CB884 MOVZ W8, 0xFDB
	0x038CB888 UNIMPLEMENTED
	0x038CB88C FMOV V2.2S, 0x0
	0x038CB890 MOVK W8, 0x40C90000
	0x038CB894 ORR V0.8B, V0.8B, V1.8B
	0x038CB898 UNIMPLEMENTED
	0x038CB89C FADD V0.2S, V0.2S, V2.2S
	0x00000000 INVALID
	0x038CB8A4 MOV S1, V0.S[1]

ISIL:
	001 Move W8, [X0]
	002 Move W9, 0x3F800000
	003 Move W10, 0x3F800000
	004 Move S1, -1
	005 NotImplemented "Instruction BFM not yet implemented."
	006 Xor W8, W8, W8
	007 Xor W8, W8, W8
	008 Xor W8, W8, W8
	009 Move S0, W9
	010 Xor W9, W8, W8
	011 NotImplemented "Instruction BFM not yet implemented."
	012 Xor W8, W9, W9
	013 Move S2, W10
	014 Add S0, S0, S1
	015 Xor W8, W8, W8
	016 Add S1, S2, S1
	017 Move [X0], W8
	018 Return X0

Method: Unity.Mathematics.float3 NextFloat3()

Disassembly:
	0x038CB8A8 ADD X0, X31, 0x28
	0x038CB8AC ADD X1, X31, 0x8
	0x038CB8B0 MOV X2, X31
	0x038CB8B4 FSQRT S8, S8
	0x038CB8B8 BL 0x38D7FD8
	0x038CB8BC LDP S0, S2, [X31 + 0x28]
	0x038CB8C0 LDP S1, S3, [X31 + 0x8]
	0x038CB8C4 LDP X20, X19, [X31 + 0x40]
	0x038CB8C8 LDP X22, X21, [X31 + 0x30]
	0x038CB8CC FMUL S4, S9, S0
	0x038CB8D0 FMUL S5, S9, S1
	0x038CB8D4 FMUL S6, S8, S2
	0x038CB8D8 FMUL S7, S8, S3
	0x038CB8DC FNMUL S0, S9, S0
	0x038CB8E0 FNMUL S1, S9, S1
	0x038CB8E4 FNMUL S2, S8, S2
	0x038CB8E8 FNMUL S3, S8, S3
	0x038CB8EC LDR X30, [X31 + 0x20]
	0x038CB8F0 LDP D9, D8, [X31 + 0x10]
	0x038CB8F4 FCMP S7, 0x0
	0x038CB8F8 FCSEL S0, S0, S4, MI
	0x038CB8FC FCSEL S1, S1, S5, MI
	0x038CB900 FCSEL S2, S2, S6, MI
	0x038CB904 FCSEL S3, S3, S7, MI
	0x038CB908 ADD X31, X31, 0x50

ISIL:
	001 Move W8, [X0]
	002 Move W9, 0x3F800000
	003 Move W10, 0x3F800000
	004 Move W11, 0x3F800000
	005 NotImplemented "Instruction BFM not yet implemented."
	006 Xor W8, W8, W8
	007 Xor W8, W8, W8
	008 Xor W8, W8, W8
	009 Move S0, W9
	010 Xor W9, W8, W8
	011 NotImplemented "Instruction BFM not yet implemented."
	012 Xor W8, W9, W9
	013 Xor W8, W8, W8
	014 Xor W9, W8, W8
	015 NotImplemented "Instruction BFM not yet implemented."
	016 Move S2, -1
	017 Move S1, W10
	018 Xor W8, W9, W9
	019 Move S3, W11
	020 Add S0, S0, S2
	021 Add S1, S1, S2
	022 Xor W8, W8, W8
	023 Add S2, S3, S2
	024 Move [X0], W8
	025 Return X0

Method: Unity.Mathematics.float4 NextFloat4()

Disassembly:
	0x038CB90C RET
	0x038CB910 LDR W8, [X0]
	0x038CB914 EOR W9, W8, W8, 0xD
	0x038CB918 EOR W9, W9, W9, 0x11
	0x038CB91C EOR W9, W9, W9, 0x5
	0x038CB920 STR W9, [X0]
	0x038CB924 MOV W0, W8
	0x038CB928 RET
	0x038CB92C RET
	0x038CB930 ADDS W31, W0, 0x1
	0x038CB934 B.EQ 0x38CB93C
	0x038CB938 RET
	0x038CB93C STP X30, X19, [X31 - 0x10]!
	0x038CB940 ADRP X0, 0x830000
	0x038CB944 LDR X0, [X0 + 0x578]
	0x038CB948 BL 0x1C16D08
	0x038CB94C BL 0x1C16F10
	0x038CB950 MOV X19, X0
	0x038CB954 ADRP X0, 0x880000
	0x038CB958 LDR X0, [X0 + 0xC8]
	0x038CB95C BL 0x1C16D08
	0x038CB960 MOV X1, X0
	0x038CB964 MOV X0, X19
	0x038CB968 MOV X2, X31
	0x038CB96C BL 0x3314A68
	0x038CB970 ADRP X0, 0x880000
	0x038CB974 LDR X0, [X0 + 0xD0]
	0x038CB978 BL 0x1C16D08
	0x038CB97C MOV X1, X0
	0x038CB980 MOV X0, X19
	0x038CB984 BL 0x1C16DEC
	0x038CB988 RET

ISIL:
	001 Move W8, [X0]
	002 Move W9, 0x3F800000
	003 Move W10, 0x3F800000
	004 Move W12, 0x3F800000
	005 NotImplemented "Instruction BFM not yet implemented."
	006 Xor W8, W8, W8
	007 Xor W8, W8, W8
	008 Xor W8, W8, W8
	009 Move S0, W9
	010 Xor W9, W8, W8
	011 NotImplemented "Instruction BFM not yet implemented."
	012 Xor W8, W9, W9
	013 Xor W8, W8, W8
	014 Xor W9, W8, W8
	015 NotImplemented "Instruction BFM not yet implemented."
	016 Xor W8, W9, W9
	017 Move W11, 0x3F800000
	018 Xor W8, W8, W8
	019 Xor W9, W8, W8
	020 NotImplemented "Instruction BFM not yet implemented."
	021 Move S3, -1
	022 Move S1, W10
	023 Move S2, W12
	024 Xor W8, W9, W9
	025 Move S4, W11
	026 Add S0, S0, S3
	027 Add S1, S1, S3
	028 Add S2, S2, S3
	029 Xor W8, W8, W8
	030 Add S3, S4, S3
	031 Move [X0], W8
	032 Return X0

Method: System.Single NextFloat(System.Single max)

Disassembly:
	0x038CB98C RET
	0x038CB990 RET
	0x038CB994 RET
	0x038CB998 STP S0, S1, [X0]
	0x038CB99C STP S2, S3, [X0 + 0x8]
	0x038CB9A0 STP S4, S5, [X0 + 0x10]
	0x038CB9A4 STR S6, [X0 + 0x18]
	0x038CB9A8 RET
	0x038CB9AC SUB X31, X31, 0x70
	0x038CB9B0 STR D10, [X31 + 0x40]
	0x038CB9B4 STP D9, D8, [X31 + 0x50]
	0x038CB9B8 STP X30, X19, [X31 + 0x60]

ISIL:
	001 Move W8, [X0]
	002 Move W9, 0x3F800000
	003 Move S1, -1
	004 NotImplemented "Instruction BFM not yet implemented."
	005 Xor W10, W8, W8
	006 Move S2, W9
	007 Xor W8, W10, W10
	008 Add S1, S2, S1
	009 Xor W8, W8, W8
	010 Multiply S0, S1, S0
	011 Move [X0], W8
	012 Return V0

Method: Unity.Mathematics.float2 NextFloat2(Unity.Mathematics.float2 max)

Disassembly:
	0x038CB9BC MOV V9.16B, V1.16B
	0x038CB9C0 MOV V10.16B, V0.16B
	0x038CB9C4 LDR W8, [X1 + 0x20]
	0x038CB9C8 LDP V1, V0, [X1]
	0x038CB9CC MOV X19, X0
	0x038CB9D0 ADD X0, X31, 0x30
	0x038CB9D4 ADD X1, X31, 0x0
	0x038CB9D8 MOV X2, X31
	0x038CB9DC MOV V8.16B, V2.16B
	0x038CB9E0 STR W8, [X31 + 0x20]
	0x038CB9E4 STP V1, V0, [X31]
	0x038CB9E8 STP X31, X31, [X31 + 0x30]
	0x038CB9EC BL 0x38BD238
	0x038CB9F0 LDR V0, [X31 + 0x3]
	0x038CB9F4 STP S10, S9, [X19 + 0x10]
	0x038CB9F8 STR S8, [X19 + 0x18]
	0x038CB9FC LDP D9, D8, [X31 + 0x50]
	0x038CBA00 STR V0, [X19]
	0x038CBA04 LDP X30, X19, [X31 + 0x60]
	0x038CBA08 LDR V10, [X31 + 0x40]

ISIL:
	001 Move W8, [X0]
	002 Move W9, 0x3F800000
	003 Move W10, 0x3F800000
	004 Move S2, -1
	005 NotImplemented "Instruction BFM not yet implemented."
	006 Xor W8, W8, W8
	007 Xor W8, W8, W8
	008 Move S3, W9
	009 Xor W8, W8, W8
	010 Add S3, S3, S2
	011 NotImplemented "Instruction BFM not yet implemented."
	012 Multiply S0, S0, S3
	013 Xor W9, W8, W8
	014 Move S3, W10
	015 Xor W8, W9, W9
	016 Add S2, S3, S2
	017 Xor W8, W8, W8
	018 Multiply S1, S1, S2
	019 Move [X0], W8
	020 Return X0

Method: Unity.Mathematics.float3 NextFloat3(Unity.Mathematics.float3 max)

Disassembly:
	0x038CBA0C ADD X31, X31, 0x70
	0x038CBA10 RET
	0x038CBA14 SUB X31, X31, 0x70
	0x038CBA18 STP X31, X30, [X31 + 0x48]
	0x038CBA1C STP X20, X19, [X31 + 0x60]
	0x038CBA20 LDP V1, V0, [X1 + 0x20]
	0x038CBA24 LDP V3, V2, [X1]
	0x038CBA28 MOV X19, X1
	0x038CBA2C MOV X20, X0
	0x038CBA30 ADD X0, X31, 0x40
	0x038CBA34 ADD X1, X31, 0x0
	0x038CBA38 MOV X2, X31
	0x038CBA3C STP V1, V0, [X31 + 0x20]
	0x038CBA40 STP V3, V2, [X31]
	0x038CBA44 STR X31, [X31 + 0x40]
	0x038CBA48 BL 0x38BD3FC
	0x038CBA4C LDR V0, [X31 + 0x4]
	0x038CBA50 LDR X30, [X31 + 0x50]
	0x038CBA54 STR V0, [X20]
	0x038CBA58 LDR V0, [X19 + 0x30]
	0x038CBA5C LDR V1, [X19 + 0x38]
	0x038CBA60 STR D0, [X20 + 0x10]
	0x038CBA64 STR S1, [X20 + 0x18]
	0x038CBA68 LDP X20, X19, [X31 + 0x60]
	0x038CBA6C ADD X31, X31, 0x70
	0x038CBA70 RET
	0x038CBA74 STR D12, [X31 - 0x50]!
	0x038CBA78 STP D11, D10, [X31 + 0x10]

ISIL:
	001 Move W8, [X0]
	002 Move W9, 0x3F800000
	003 Move W10, 0x3F800000
	004 Move S3, -1
	005 NotImplemented "Instruction BFM not yet implemented."
	006 Xor W8, W8, W8
	007 Xor W8, W8, W8
	008 Xor W8, W8, W8
	009 Move S4, W9
	010 Xor W9, W8, W8
	011 Add S4, S4, S3
	012 NotImplemented "Instruction BFM not yet implemented."
	013 Xor W8, W9, W9
	014 Move W11, 0x3F800000
	015 Multiply S0, S0, S4
	016 Move S4, W10
	017 Xor W8, W8, W8
	018 Add S4, S4, S3
	019 NotImplemented "Instruction BFM not yet implemented."
	020 Multiply S1, S1, S4
	021 Xor W9, W8, W8
	022 Move S4, W11
	023 Xor W8, W9, W9
	024 Add S3, S4, S3
	025 Xor W8, W8, W8
	026 Multiply S2, S2, S3
	027 Move [X0], W8
	028 Return X0

Method: Unity.Mathematics.float4 NextFloat4(Unity.Mathematics.float4 max)

Disassembly:
	0x038CBA7C STP D9, D8, [X31 + 0x20]
	0x038CBA80 STP X30, X21, [X31 + 0x30]
	0x038CBA84 STP X20, X19, [X31 + 0x40]
	0x038CBA88 ADRP X20, 0xB16000
	0x038CBA8C LDRB W9, [X20 + 0x6A2]
	0x038CBA90 MOV V11.16B, V3.16B
	0x038CBA94 MOV V8.16B, V2.16B
	0x038CBA98 MOV V9.16B, V1.16B
	0x038CBA9C MOV V10.16B, V0.16B
	0x038CBAA0 MOV X19, X8
	0x038CBAA4 TBNZ X9, 0x0, 0x38CBABC
	0x038CBAA8 ADRP X0, 0x853000
	0x038CBAAC LDR X0, [X0 + 0x838]
	0x038CBAB0 BL 0x1C16CF4
	0x038CBAB4 MOVZ W8, 0x1
	0x038CBAB8 STRB W8, [X20 + 0x6A2]
	0x038CBABC ADRP X20, 0xB16000
	0x038CBAC0 LDRB W8, [X20 + 0x56A]
	0x038CBAC4 FMOV S12, 0.5
	0x038CBAC8 CBNZ W8, 0x38CBAE0
	0x038CBACC ADRP X0, 0x828000
	0x038CBAD0 LDR X0, [X0 + 0x5A8]
	0x038CBAD4 BL 0x1C16CF4
	0x038CBAD8 MOVZ W8, 0x1
	0x038CBADC STRB W8, [X20 + 0x56A]
	0x038CBAE0 ADRP X20, 0x828000
	0x038CBAE4 LDR X20, [X20 + 0x5A8]
	0x038CBAE8 FMUL S11, S11, S12
	0x038CBAEC LDR X0, [X20]
	0x038CBAF0 LDR W8, [X0 + 0xE0]
	0x038CBAF4 CBNZ W8, 0x38CBAFC
	0x038CBAF8 BL 0x1C16DFC
	0x038CBAFC FCVT S11, S11
	0x038CBB00 MOV V0.16B, V11.16B
	0x038CBB04 BL 0x3EB1C30
	0x038CBB08 ADRP X21, 0xB16000

ISIL:
	001 Move W8, [X0]
	002 Move W9, 0x3F800000
	003 Move W10, 0x3F800000
	004 Move S4, -1
	005 NotImplemented "Instruction BFM not yet implemented."
	006 Xor W8, W8, W8
	007 Xor W8, W8, W8
	008 Xor W8, W8, W8
	009 Move S5, W9
	010 Xor W9, W8, W8
	011 NotImplemented "Instruction BFM not yet implemented."
	012 Xor W8, W9, W9
	013 Add S5, S5, S4
	014 Xor W8, W8, W8
	015 Move W12, 0x3F800000
	016 Multiply S0, S0, S5
	017 Move S5, W10
	018 Xor W9, W8, W8
	019 Add S5, S5, S4
	020 NotImplemented "Instruction BFM not yet implemented."
	021 Xor W8, W9, W9
	022 Move W11, 0x3F800000
	023 Multiply S1, S1, S5
	024 Move S5, W12
	025 Xor W8, W8, W8
	026 Add S5, S5, S4
	027 NotImplemented "Instruction BFM not yet implemented."
	028 Multiply S2, S2, S5
	029 Xor W9, W8, W8
	030 Move S5, W11
	031 Xor W8, W9, W9
	032 Add S4, S5, S4
	033 Xor W8, W8, W8
	034 Multiply S3, S3, S4
	035 Move [X0], W8
	036 Return X0

Method: System.Single NextFloat(System.Single min, System.Single max)

Disassembly:
	0x038CBB0C LDRB W8, [X21 + 0x564]
	0x038CBB10 MOV V12.16B, V0.16B
	0x038CBB14 CBNZ W8, 0x38CBB2C
	0x038CBB18 ADRP X0, 0x828000
	0x038CBB1C LDR X0, [X0 + 0x5A8]
	0x038CBB20 BL 0x1C16CF4
	0x038CBB24 MOVZ W8, 0x1
	0x038CBB28 STRB W8, [X21 + 0x564]
	0x038CBB2C LDR X0, [X20]
	0x038CBB30 ADRP X20, 0x853000
	0x00000000 INVALID
	0x038CBB38 LDR W8, [X0 + 0xE0]
	0x038CBB3C LDR X20, [X20 + 0x838]
	0x038CBB40 CBNZ W8, 0x38CBB48

ISIL:
	001 Move W8, [X0]
	002 Move W9, 0x3F800000
	003 Move S2, -1
	004 Subtract S1, S1, S0
	005 NotImplemented "Instruction BFM not yet implemented."
	006 Move S3, W9
	007 Xor W8, W8, W8
	008 Add S2, S3, S2
	009 Xor W8, W8, W8
	010 Multiply S1, S1, S2
	011 Xor W8, W8, W8
	012 Add S0, S1, S0
	013 Move [X0], W8
	014 Return V0

Method: Unity.Mathematics.float2 NextFloat2(Unity.Mathematics.float2 min, Unity.Mathematics.float2 max)

Disassembly:
	0x038CBB44 BL 0x1C16DFC
	0x038CBB48 MOV V0.16B, V11.16B
	0x038CBB4C BL 0x3EB1BF0
	0x038CBB50 LDR X8, [X20]
	0x00000000 INVALID
	0x038CBB58 FMUL S1, S10, S12
	0x038CBB5C FMUL S2, S9, S12
	0x038CBB60 LDR X8, [X8 + 0xB8]
	0x038CBB64 FMUL S3, S8, S12
	0x038CBB68 LDP X30, X21, [X31 + 0x30]
	0x038CBB6C LDP D9, D8, [X31 + 0x20]
	0x038CBB70 LDR V4, [X8]
	0x038CBB74 LDR V5, [X8 + 0x8]
	0x038CBB78 STP S1, S2, [X19]
	0x038CBB7C STP S3, S0, [X19 + 0x8]
	0x038CBB80 STR D4, [X19 + 0x10]
	0x038CBB84 STR S5, [X19 + 0x18]
	0x038CBB88 LDP X20, X19, [X31 + 0x40]
	0x038CBB8C LDP D11, D10, [X31 + 0x10]
	0x038CBB90 LDR V12, [X31], #0x50
	0x038CBB94 RET
	0x038CBB98 STP D13, D12, [X31 - 0x50]!
	0x038CBB9C STP D11, D10, [X31 + 0x10]
	0x038CBBA0 STP D9, D8, [X31 + 0x20]

ISIL:
	001 Move W8, [X0]
	002 Move W9, 0x3F800000
	003 Move W10, 0x3F800000
	004 Move S4, -1
	005 NotImplemented "Instruction BFM not yet implemented."
	006 Xor W8, W8, W8
	007 Xor W8, W8, W8
	008 Move S5, W9
	009 Xor W8, W8, W8
	010 Subtract S2, S2, S0
	011 Add S5, S5, S4
	012 NotImplemented "Instruction BFM not yet implemented."
	013 Multiply S2, S2, S5
	014 Move S5, W10
	015 Subtract S3, S3, S1
	016 Xor W9, W8, W8
	017 Add S4, S5, S4
	018 Xor W8, W9, W9
	019 Multiply S3, S3, S4
	020 Xor W8, W8, W8
	021 Add S0, S0, S2
	022 Add S1, S1, S3
	023 Move [X0], W8
	024 Return X0

Method: Unity.Mathematics.float3 NextFloat3(Unity.Mathematics.float3 min, Unity.Mathematics.float3 max)

Disassembly:
	0x038CBBA4 STP X30, X21, [X31 + 0x30]
	0x038CBBA8 STP X20, X19, [X31 + 0x40]
	0x038CBBAC ADRP X21, 0xB16000
	0x038CBBB0 ADRP X20, 0x853000
	0x038CBBB4 MOV X19, X8
	0x038CBBB8 LDRB W8, [X21 + 0x6A3]
	0x038CBBBC LDR X20, [X20 + 0x838]
	0x038CBBC0 MOV V8.16B, V2.16B
	0x038CBBC4 MOV V9.16B, V1.16B
	0x038CBBC8 MOV V10.16B, V0.16B
	0x038CBBCC TBNZ X8, 0x0, 0x38CBBE4
	0x038CBBD0 ADRP X0, 0x853000
	0x038CBBD4 LDR X0, [X0 + 0x838]
	0x038CBBD8 BL 0x1C16CF4
	0x038CBBDC MOVZ W8, 0x1
	0x038CBBE0 STRB W8, [X21 + 0x6A3]
	0x038CBBE4 FMOV S0, 0.5
	0x038CBBE8 FMUL S10, S10, S0
	0x038CBBEC FMUL S9, S9, S0
	0x038CBBF0 FMUL S8, S8, S0
	0x038CBBF4 MOV V0.16B, V10.16B
	0x038CBBF8 MOV V1.16B, V9.16B
	0x038CBBFC MOV V2.16B, V8.16B
	0x038CBC00 MOV X0, X31
	0x038CBC04 BL 0x384BD60
	0x038CBC08 MOV V11.16B, V0.16B
	0x038CBC0C MOV V12.16B, V1.16B
	0x038CBC10 MOV V13.16B, V2.16B
	0x038CBC14 MOV V0.16B, V10.16B
	0x038CBC18 MOV V1.16B, V9.16B
	0x038CBC1C MOV V2.16B, V8.16B
	0x038CBC20 MOV X0, X31
	0x038CBC24 BL 0x384BE4C
	0x038CBC28 LDR X8, [X20]

ISIL:
	001 Move W8, [X0]
	002 Move W9, 0x3F800000
	003 Move S6, -1
	004 Move W10, 0x3F800000
	005 NotImplemented "Instruction BFM not yet implemented."
	006 Xor W8, W8, W8
	007 Xor W8, W8, W8
	008 Move S7, W9
	009 Xor W8, W8, W8
	010 Subtract S3, S3, S0
	011 Add S7, S7, S6
	012 Xor W9, W8, W8
	013 Multiply S3, S3, S7
	014 NotImplemented "Instruction BFM not yet implemented."
	015 Xor W8, W9, W9
	016 Move W11, 0x3F800000
	017 Add S0, S0, S3
	018 Move S3, W10
	019 Xor W8, W8, W8
	020 Subtract S4, S4, S1
	021 Add S3, S3, S6
	022 NotImplemented "Instruction BFM not yet implemented."
	023 Multiply S3, S4, S3
	024 Move S4, W11
	025 Subtract S5, S5, S2
	026 Xor W9, W8, W8
	027 Add S4, S4, S6
	028 Xor W8, W9, W9
	029 Multiply S4, S5, S4
	030 Xor W8, W8, W8
	031 Add S1, S1, S3
	032 Add S2, S2, S4
	033 Move [X0], W8
	034 Return X0

Method: Unity.Mathematics.float4 NextFloat4(Unity.Mathematics.float4 min, Unity.Mathematics.float4 max)

Disassembly:
	0x038CBC2C FMUL S3, S11, S1
	0x038CBC30 FMUL S4, S12, S0
	0x038CBC34 FMUL S5, S13, S0
	0x038CBC38 LDR X8, [X8 + 0xB8]
	0x038CBC3C FMUL S6, S0, S1
	0x038CBC40 FMUL S16, S11, S13
	0x038CBC44 FMUL S17, S12, S11
	0x038CBC48 FMUL S3, S2, S3
	0x038CBC4C FMUL S4, S2, S4
	0x038CBC50 FMUL S5, S1, S5
	0x038CBC54 FMUL S6, S2, S6
	0x038CBC58 FMUL S1, S16, S1
	0x038CBC5C FMUL S2, S17, S2
	0x038CBC60 FADD S1, S1, S4
	0x038CBC64 FSUB S2, S5, S2
	0x038CBC68 LDR V4, [X8]
	0x038CBC6C LDR V5, [X8 + 0x8]
	0x038CBC70 FMUL S7, S12, S13
	0x038CBC74 FMUL S16, S11, S7
	0x038CBC78 FMUL S0, S7, S0
	0x038CBC7C FSUB S0, S3, S0
	0x038CBC80 FADD S3, S16, S6
	0x038CBC84 STP S0, S1, [X19]
	0x038CBC88 STP S2, S3, [X19 + 0x8]
	0x038CBC8C STR D4, [X19 + 0x10]
	0x038CBC90 STR S5, [X19 + 0x18]
	0x038CBC94 LDP X20, X19, [X31 + 0x40]
	0x038CBC98 LDP X30, X21, [X31 + 0x30]
	0x038CBC9C LDP D9, D8, [X31 + 0x20]
	0x038CBCA0 LDP D11, D10, [X31 + 0x10]
	0x038CBCA4 LDP D13, D12, [X31], #0x50
	0x038CBCA8 RET
	0x038CBCAC STP D13, D12, [X31 - 0x50]!
	0x038CBCB0 STP D11, D10, [X31 + 0x10]
	0x038CBCB4 STP D9, D8, [X31 + 0x20]
	0x038CBCB8 STP X30, X21, [X31 + 0x30]
	0x038CBCBC STP X20, X19, [X31 + 0x40]
	0x038CBCC0 ADRP X21, 0xB16000
	0x038CBCC4 ADRP X20, 0x853000
	0x038CBCC8 MOV X19, X8
	0x038CBCCC LDRB W8, [X21 + 0x6A4]
	0x038CBCD0 LDR X20, [X20 + 0x838]
	0x038CBCD4 MOV V8.16B, V2.16B
	0x038CBCD8 MOV V9.16B, V1.16B

ISIL:
	001 Move W8, [X0]
	002 Move W9, 0x3F800000
	003 Move W10, 0x3F800000
	004 Move S16, -1
	005 NotImplemented "Instruction BFM not yet implemented."
	006 Xor W8, W8, W8
	007 Xor W8, W8, W8
	008 Xor W8, W8, W8
	009 Move S17, W9
	010 Xor W9, W8, W8
	011 NotImplemented "Instruction BFM not yet implemented."
	012 Xor W8, W9, W9
	013 Subtract S4, S4, S0
	014 Add S17, S17, S16
	015 Xor W8, W8, W8
	016 Move W12, 0x3F800000
	017 Multiply S4, S4, S17
	018 Xor W9, W8, W8
	019 Add S0, S0, S4
	020 Move S4, W10
	021 NotImplemented "Instruction BFM not yet implemented."
	022 Xor W8, W9, W9
	023 Move W11, 0x3F800000
	024 Subtract S5, S5, S1
	025 Add S4, S4, S16
	026 Xor W8, W8, W8
	027 Multiply S4, S5, S4
	028 NotImplemented "Instruction BFM not yet implemented."
	029 Add S1, S1, S4
	030 Move S4, W12
	031 Move S5, W11
	032 Subtract S6, S6, S2
	033 Subtract S7, S7, S3
	034 Add S4, S4, S16
	035 Xor W9, W8, W8
	036 Add S5, S5, S16
	037 Multiply S4, S6, S4
	038 Xor W8, W9, W9
	039 Multiply S5, S7, S5
	040 Xor W8, W8, W8
	041 Add S2, S2, S4
	042 Add S3, S3, S5
	043 Move [X0], W8
	044 Return X0

Method: System.Double NextDouble()

Disassembly:
	0x038CBCDC MOV V10.16B, V0.16B
	0x038CBCE0 TBNZ X8, 0x0, 0x38CBCF8
	0x038CBCE4 ADRP X0, 0x853000
	0x038CBCE8 LDR X0, [X0 + 0x838]
	0x038CBCEC BL 0x1C16CF4
	0x038CBCF0 MOVZ W8, 0x1
	0x038CBCF4 STRB W8, [X21 + 0x6A4]
	0x038CBCF8 FMOV S0, 0.5
	0x038CBCFC FMUL S10, S10, S0
	0x038CBD00 FMUL S9, S9, S0
	0x038CBD04 FMUL S8, S8, S0
	0x038CBD08 MOV V0.16B, V10.16B
	0x038CBD0C MOV V1.16B, V9.16B
	0x038CBD10 MOV V2.16B, V8.16B

ISIL:
	001 Move W8, [X0]
	002 Move D0, -1
	003 Xor W9, W8, W8
	004 Xor W9, W9, W9
	005 Xor W9, W9, W9
	006 Xor X8, X9, X8
	007 Xor W10, W9, W9
	008 Or X8, X8, 0x3FFFFFFFFFFFFFFF
	009 Xor W9, W10, W10
	010 Move D1, X8
	011 Xor W9, W9, W9
	012 Add D0, D1, D0
	013 Move [X0], W9
	014 Return V0

Method: Unity.Mathematics.double2 NextDouble2()

Disassembly:
	0x038CBD14 MOV X0, X31
	0x038CBD18 BL 0x384BD60
	0x038CBD1C MOV V11.16B, V0.16B
	0x038CBD20 MOV V12.16B, V1.16B
	0x038CBD24 MOV V13.16B, V2.16B
	0x038CBD28 MOV V0.16B, V10.16B
	0x038CBD2C MOV V1.16B, V9.16B
	0x038CBD30 MOV V2.16B, V8.16B
	0x038CBD34 MOV X0, X31
	0x038CBD38 BL 0x384BE4C
	0x038CBD3C LDR X8, [X20]
	0x038CBD40 FMUL S3, S11, S1
	0x038CBD44 FMUL S4, S12, S0
	0x038CBD48 FMUL S5, S13, S0
	0x038CBD4C LDR X8, [X8 + 0xB8]
	0x038CBD50 FMUL S6, S0, S1
	0x038CBD54 FMUL S16, S11, S13
	0x038CBD58 FMUL S17, S12, S11
	0x038CBD5C FMUL S3, S2, S3
	0x038CBD60 FMUL S4, S2, S4
	0x038CBD64 FMUL S5, S1, S5
	0x038CBD68 FMUL S6, S2, S6
	0x038CBD6C FMUL S1, S16, S1
	0x038CBD70 FMUL S2, S17, S2

ISIL:
	001 Move W8, [X0]
	002 Move D1, -1
	003 Xor W9, W8, W8
	004 Xor W9, W9, W9
	005 Xor W9, W9, W9
	006 Xor W10, W9, W9
	007 Xor X8, X9, X8
	008 Xor W9, W10, W10
	009 Or X8, X8, 0x3FFFFFFFFFFFFFFF
	010 Xor W9, W9, W9
	011 Move D0, X8
	012 Xor W8, W9, W9
	013 Xor W8, W8, W8
	014 Xor W8, W8, W8
	015 Xor W10, W8, W8
	016 Xor X8, X8, X9
	017 Or X8, X8, 0x3FFFFFFFFFFFFFFF
	018 Xor W9, W10, W10
	019 Move D2, X8
	020 Add D0, D0, D1
	021 Xor W9, W9, W9
	022 Add D1, D2, D1
	023 Move [X0], W9
	024 Return X0

Method: Unity.Mathematics.double3 NextDouble3()

Disassembly:
	0x038CBD74 FADD S1, S1, S4
	0x038CBD78 FSUB S2, S5, S2
	0x038CBD7C LDR V4, [X8]
	0x038CBD80 LDR V5, [X8 + 0x8]
	0x038CBD84 FMUL S7, S12, S13
	0x038CBD88 FMUL S0, S7, S0
	0x038CBD8C FMUL S7, S11, S7
	0x038CBD90 FADD S0, S0, S3
	0x038CBD94 FSUB S3, S6, S7
	0x038CBD98 STP S0, S1, [X19]
	0x038CBD9C STP S2, S3, [X19 + 0x8]
	0x038CBDA0 STR D4, [X19 + 0x10]
	0x038CBDA4 STR S5, [X19 + 0x18]
	0x038CBDA8 LDP X20, X19, [X31 + 0x40]
	0x038CBDAC LDP X30, X21, [X31 + 0x30]
	0x038CBDB0 LDP D9, D8, [X31 + 0x20]
	0x038CBDB4 LDP D11, D10, [X31 + 0x10]
	0x038CBDB8 LDP D13, D12, [X31], #0x50
	0x038CBDBC RET
	0x038CBDC0 STP D13, D12, [X31 - 0x50]!
	0x038CBDC4 STP D11, D10, [X31 + 0x10]
	0x038CBDC8 STP D9, D8, [X31 + 0x20]
	0x038CBDCC STP X30, X21, [X31 + 0x30]
	0x038CBDD0 STP X20, X19, [X31 + 0x40]
	0x038CBDD4 ADRP X21, 0xB16000
	0x038CBDD8 ADRP X20, 0x853000
	0x038CBDDC MOV X19, X8
	0x038CBDE0 LDRB W8, [X21 + 0x6A5]
	0x038CBDE4 LDR X20, [X20 + 0x838]
	0x038CBDE8 MOV V8.16B, V2.16B
	0x038CBDEC MOV V9.16B, V1.16B
	0x038CBDF0 MOV V10.16B, V0.16B
	0x038CBDF4 TBNZ X8, 0x0, 0x38CBE0C
	0x038CBDF8 ADRP X0, 0x853000

ISIL:
	001 Move W8, [X0]
	002 Move D2, -1
	003 Xor W9, W8, W8
	004 Xor W9, W9, W9
	005 Xor W9, W9, W9
	006 Xor W10, W9, W9
	007 Xor X8, X9, X8
	008 Xor W9, W10, W10
	009 Or X8, X8, 0x3FFFFFFFFFFFFFFF
	010 Xor W9, W9, W9
	011 Move D0, X8
	012 Xor W8, W9, W9
	013 Xor W8, W8, W8
	014 Xor W8, W8, W8
	015 Xor W10, W8, W8
	016 Xor X8, X8, X9
	017 Xor W9, W10, W10
	018 Or X8, X8, 0x3FFFFFFFFFFFFFFF
	019 Xor W9, W9, W9
	020 Move D1, X8
	021 Xor W8, W9, W9
	022 Xor W8, W8, W8
	023 Xor W8, W8, W8
	024 Xor W10, W8, W8
	025 Xor X8, X8, X9
	026 Or X8, X8, 0x3FFFFFFFFFFFFFFF
	027 Xor W9, W10, W10
	028 Move D3, X8
	029 Add D0, D0, D2
	030 Add D1, D1, D2
	031 Xor W9, W9, W9
	032 Add D2, D3, D2
	033 Move [X0], W9
	034 Return X0

Method: Unity.Mathematics.double4 NextDouble4()

Disassembly:
	0x038CBDFC LDR X0, [X0 + 0x838]
	0x038CBE00 BL 0x1C16CF4
	0x038CBE04 MOVZ W8, 0x1
	0x038CBE08 STRB W8, [X21 + 0x6A5]
	0x038CBE0C FMOV S0, 0.5
	0x038CBE10 FMUL S10, S10, S0
	0x038CBE14 FMUL S9, S9, S0
	0x038CBE18 FMUL S8, S8, S0
	0x038CBE1C MOV V0.16B, V10.16B
	0x038CBE20 MOV V1.16B, V9.16B
	0x038CBE24 MOV V2.16B, V8.16B
	0x038CBE28 MOV X0, X31
	0x038CBE2C BL 0x384BD60
	0x038CBE30 MOV V11.16B, V0.16B
	0x038CBE34 MOV V12.16B, V1.16B
	0x038CBE38 MOV V13.16B, V2.16B
	0x038CBE3C MOV V0.16B, V10.16B
	0x038CBE40 MOV V1.16B, V9.16B
	0x038CBE44 MOV V2.16B, V8.16B
	0x038CBE48 MOV X0, X31
	0x038CBE4C BL 0x384BE4C
	0x038CBE50 LDR X8, [X20]
	0x038CBE54 FMUL S3, S11, S1
	0x038CBE58 FMUL S4, S12, S0
	0x038CBE5C FMUL S5, S13, S0
	0x038CBE60 LDR X8, [X8 + 0xB8]
	0x038CBE64 FMUL S6, S0, S1
	0x038CBE68 FMUL S16, S11, S13
	0x038CBE6C FMUL S17, S11, S12
	0x038CBE70 FMUL S3, S2, S3
	0x038CBE74 FMUL S4, S2, S4
	0x038CBE78 FMUL S5, S1, S5
	0x038CBE7C FMUL S6, S2, S6
	0x038CBE80 FMUL S1, S16, S1
	0x038CBE84 FMUL S2, S17, S2
	0x038CBE88 FADD S1, S1, S4
	0x038CBE8C FADD S2, S2, S5
	0x038CBE90 LDR V4, [X8]
	0x038CBE94 LDR V5, [X8 + 0x8]
	0x038CBE98 FMUL S7, S12, S13
	0x038CBE9C FMUL S0, S7, S0
	0x038CBEA0 FMUL S7, S11, S7
	0x038CBEA4 FSUB S0, S3, S0
	0x038CBEA8 FSUB S3, S6, S7

ISIL:
	001 Move W8, [X0]
	002 Move D3, -1
	003 Xor W9, W8, W8
	004 Xor W9, W9, W9
	005 Xor W9, W9, W9
	006 Xor W10, W9, W9
	007 Xor X8, X9, X8
	008 Xor W9, W10, W10
	009 Or X8, X8, 0x3FFFFFFFFFFFFFFF
	010 Xor W9, W9, W9
	011 Move D0, X8
	012 Xor W8, W9, W9
	013 Xor W8, W8, W8
	014 Xor W8, W8, W8
	015 Xor W10, W8, W8
	016 Xor X8, X8, X9
	017 Xor W9, W10, W10
	018 Or X8, X8, 0x3FFFFFFFFFFFFFFF
	019 Xor W9, W9, W9
	020 Move D1, X8
	021 Xor W8, W9, W9
	022 Xor W8, W8, W8
	023 Xor W8, W8, W8
	024 Xor W10, W8, W8
	025 Xor X8, X8, X9
	026 Xor W9, W10, W10
	027 Or X8, X8, 0x3FFFFFFFFFFFFFFF
	028 Xor W9, W9, W9
	029 Move D2, X8
	030 Xor W8, W9, W9
	031 Xor W8, W8, W8
	032 Xor W8, W8, W8
	033 Xor W10, W8, W8
	034 Xor X8, X8, X9
	035 Or X8, X8, 0x3FFFFFFFFFFFFFFF
	036 Xor W9, W10, W10
	037 Move D4, X8
	038 Add D0, D0, D3
	039 Add D1, D1, D3
	040 Add D2, D2, D3
	041 Xor W9, W9, W9
	042 Add D3, D4, D3
	043 Move [X0], W9
	044 Return X0

Method: System.Double NextDouble(System.Double max)

Disassembly:
	0x038CBEAC STP S0, S1, [X19]
	0x038CBEB0 STP S2, S3, [X19 + 0x8]
	0x038CBEB4 STR D4, [X19 + 0x10]
	0x038CBEB8 STR S5, [X19 + 0x18]
	0x038CBEBC LDP X20, X19, [X31 + 0x40]
	0x038CBEC0 LDP X30, X21, [X31 + 0x30]
	0x038CBEC4 LDP D9, D8, [X31 + 0x20]
	0x038CBEC8 LDP D11, D10, [X31 + 0x10]
	0x038CBECC LDP D13, D12, [X31], #0x50
	0x038CBED0 RET
	0x038CBED4 STP D13, D12, [X31 - 0x50]!
	0x038CBED8 STP D11, D10, [X31 + 0x10]
	0x038CBEDC STP D9, D8, [X31 + 0x20]
	0x038CBEE0 STP X30, X21, [X31 + 0x30]
	0x038CBEE4 STP X20, X19, [X31 + 0x40]

ISIL:
	001 Move W8, [X0]
	002 Move D1, -1
	003 Xor W9, W8, W8
	004 Xor W9, W9, W9
	005 Xor W9, W9, W9
	006 Xor X8, X9, X8
	007 Or X8, X8, 0x3FFFFFFFFFFFFFFF
	008 Xor W10, W9, W9
	009 Move D2, X8
	010 Xor W9, W10, W10
	011 Add D1, D2, D1
	012 Xor W9, W9, W9
	013 Multiply D0, D1, D0
	014 Move [X0], W9
	015 Return V0

Method: Unity.Mathematics.double2 NextDouble2(Unity.Mathematics.double2 max)

Disassembly:
	0x038CBEE8 ADRP X21, 0xB16000
	0x038CBEEC ADRP X20, 0x853000
	0x038CBEF0 MOV X19, X8
	0x038CBEF4 LDRB W8, [X21 + 0x6A6]
	0x038CBEF8 LDR X20, [X20 + 0x838]
	0x038CBEFC MOV V8.16B, V2.16B
	0x038CBF00 MOV V9.16B, V1.16B
	0x038CBF04 MOV V10.16B, V0.16B
	0x038CBF08 TBNZ X8, 0x0, 0x38CBF20
	0x038CBF0C ADRP X0, 0x853000
	0x038CBF10 LDR X0, [X0 + 0x838]
	0x038CBF14 BL 0x1C16CF4
	0x038CBF18 MOVZ W8, 0x1
	0x038CBF1C STRB W8, [X21 + 0x6A6]
	0x038CBF20 FMOV S0, 0.5
	0x038CBF24 FMUL S10, S10, S0
	0x038CBF28 FMUL S9, S9, S0
	0x038CBF2C FMUL S8, S8, S0
	0x038CBF30 MOV V0.16B, V10.16B
	0x038CBF34 MOV V1.16B, V9.16B
	0x038CBF38 MOV V2.16B, V8.16B
	0x038CBF3C MOV X0, X31
	0x038CBF40 BL 0x384BD60
	0x038CBF44 MOV V11.16B, V0.16B
	0x038CBF48 MOV V12.16B, V1.16B
	0x038CBF4C MOV V13.16B, V2.16B

ISIL:
	001 Move W8, [X0]
	002 Move D2, -1
	003 Xor W9, W8, W8
	004 Xor W9, W9, W9
	005 Xor W9, W9, W9
	006 Xor W10, W9, W9
	007 Xor X8, X9, X8
	008 Xor W9, W10, W10
	009 Or X8, X8, 0x3FFFFFFFFFFFFFFF
	010 Xor W9, W9, W9
	011 Move D3, X8
	012 Xor W8, W9, W9
	013 Xor W8, W8, W8
	014 Xor W8, W8, W8
	015 Xor W10, W8, W8
	016 Xor X8, X8, X9
	017 Or X8, X8, 0x3FFFFFFFFFFFFFFF
	018 Move D4, X8
	019 Add D3, D3, D2
	020 Xor W9, W10, W10
	021 Add D2, D4, D2
	022 Xor W9, W9, W9
	023 Multiply D0, D0, D3
	024 Multiply D1, D1, D2
	025 Move [X0], W9
	026 Return X0

Method: Unity.Mathematics.double3 NextDouble3(Unity.Mathematics.double3 max)

Disassembly:
	0x038CBF50 MOV V0.16B, V10.16B
	0x038CBF54 MOV V1.16B, V9.16B
	0x038CBF58 MOV V2.16B, V8.16B
	0x038CBF5C MOV X0, X31
	0x038CBF60 BL 0x384BE4C
	0x038CBF64 LDR X8, [X20]
	0x038CBF68 FMUL S3, S11, S1
	0x038CBF6C FMUL S4, S12, S0
	0x038CBF70 FMUL S5, S13, S0
	0x038CBF74 LDR X8, [X8 + 0xB8]
	0x038CBF78 FMUL S6, S0, S1
	0x038CBF7C FMUL S16, S11, S12
	0x038CBF80 FMUL S17, S13, S11
	0x038CBF84 FMUL S3, S2, S3
	0x038CBF88 FMUL S4, S2, S4
	0x038CBF8C FMUL S5, S1, S5
	0x038CBF90 FMUL S6, S2, S6
	0x038CBF94 FMUL S2, S16, S2
	0x038CBF98 FMUL S1, S17, S1
	0x038CBF9C FSUB S1, S4, S1
	0x038CBFA0 FADD S2, S2, S5
	0x038CBFA4 LDR V4, [X8]
	0x038CBFA8 LDR V5, [X8 + 0x8]
	0x038CBFAC FMUL S7, S12, S13
	0x038CBFB0 FMUL S16, S11, S7
	0x038CBFB4 FMUL S0, S7, S0
	0x038CBFB8 FSUB S0, S3, S0
	0x038CBFBC FADD S3, S16, S6
	0x038CBFC0 STP S0, S1, [X19]
	0x038CBFC4 STP S2, S3, [X19 + 0x8]
	0x038CBFC8 STR D4, [X19 + 0x10]
	0x038CBFCC STR S5, [X19 + 0x18]
	0x038CBFD0 LDP X20, X19, [X31 + 0x40]
	0x038CBFD4 LDP X30, X21, [X31 + 0x30]
	0x038CBFD8 LDP D9, D8, [X31 + 0x20]
	0x038CBFDC LDP D11, D10, [X31 + 0x10]
	0x038CBFE0 LDP D13, D12, [X31], #0x50

ISIL:
	001 Move W8, [X0]
	002 Move D3, -1
	003 Xor W9, W8, W8
	004 Xor W9, W9, W9
	005 Xor W9, W9, W9
	006 Xor W10, W9, W9
	007 Xor X8, X9, X8
	008 Xor W9, W10, W10
	009 Or X8, X8, 0x3FFFFFFFFFFFFFFF
	010 Xor W9, W9, W9
	011 Move D4, X8
	012 Xor W8, W9, W9
	013 Xor W8, W8, W8
	014 Xor W8, W8, W8
	015 Xor W10, W8, W8
	016 Xor X8, X8, X9
	017 Xor W9, W10, W10
	018 Add D4, D4, D3
	019 Or X8, X8, 0x3FFFFFFFFFFFFFFF
	020 Xor W9, W9, W9
	021 Multiply D0, D0, D4
	022 Move D4, X8
	023 Xor W8, W9, W9
	024 Xor W8, W8, W8
	025 Xor W8, W8, W8
	026 Xor W10, W8, W8
	027 Xor X8, X8, X9
	028 Or X8, X8, 0x3FFFFFFFFFFFFFFF
	029 Move D5, X8
	030 Add D4, D4, D3
	031 Xor W9, W10, W10
	032 Add D3, D5, D3
	033 Xor W9, W9, W9
	034 Multiply D1, D1, D4
	035 Multiply D2, D2, D3
	036 Move [X0], W9
	037 Return X0

Method: Unity.Mathematics.double4 NextDouble4(Unity.Mathematics.double4 max)

Disassembly:
	0x038CBFE4 RET
	0x038CBFE8 STP D13, D12, [X31 - 0x50]!
	0x038CBFEC STP D11, D10, [X31 + 0x10]
	0x038CBFF0 STP D9, D8, [X31 + 0x20]
	0x038CBFF4 STP X30, X21, [X31 + 0x30]
	0x038CBFF8 STP X20, X19, [X31 + 0x40]
	0x038CBFFC ADRP X21, 0xB16000
	0x038CC000 ADRP X20, 0x852000
	0x038CC004 MOV X19, X8
	0x038CC008 LDRB W8, [X21 + 0x6A7]
	0x038CC00C LDR X20, [X20 + 0x838]
	0x038CC010 MOV V8.16B, V2.16B
	0x038CC014 MOV V9.16B, V1.16B
	0x038CC018 MOV V10.16B, V0.16B
	0x038CC01C TBNZ X8, 0x0, 0x38CC034
	0x038CC020 ADRP X0, 0x852000
	0x038CC024 LDR X0, [X0 + 0x838]
	0x038CC028 BL 0x1C16CF4
	0x038CC02C MOVZ W8, 0x1
	0x038CC030 STRB W8, [X21 + 0x6A7]
	0x038CC034 FMOV S0, 0.5
	0x038CC038 FMUL S10, S10, S0
	0x038CC03C FMUL S9, S9, S0
	0x038CC040 FMUL S8, S8, S0
	0x038CC044 MOV V0.16B, V10.16B
	0x038CC048 MOV V1.16B, V9.16B
	0x038CC04C MOV V2.16B, V8.16B
	0x038CC050 MOV X0, X31
	0x038CC054 BL 0x384BD60
	0x038CC058 MOV V11.16B, V0.16B
	0x038CC05C MOV V12.16B, V1.16B
	0x038CC060 MOV V13.16B, V2.16B
	0x038CC064 MOV V0.16B, V10.16B
	0x038CC068 MOV V1.16B, V9.16B
	0x038CC06C MOV V2.16B, V8.16B
	0x038CC070 MOV X0, X31
	0x038CC074 BL 0x384BE4C
	0x038CC078 LDR X8, [X20]
	0x038CC07C FMUL S3, S11, S1
	0x038CC080 FMUL S4, S12, S0
	0x038CC084 FMUL S5, S13, S0
	0x038CC088 LDR X8, [X8 + 0xB8]
	0x038CC08C FMUL S6, S0, S1
	0x038CC090 FMUL S16, S13, S11
	0x038CC094 FMUL S17, S12, S11
	0x038CC098 FMUL S3, S2, S3
	0x038CC09C FMUL S4, S2, S4
	0x038CC0A0 FMUL S5, S1, S5

ISIL:
	001 Move W8, [X0]
	002 Move D4, -1
	003 Xor W9, W8, W8
	004 Xor W9, W9, W9
	005 Xor W9, W9, W9
	006 Xor W10, W9, W9
	007 Xor X8, X9, X8
	008 Xor W9, W10, W10
	009 Or X8, X8, 0x3FFFFFFFFFFFFFFF
	010 Xor W9, W9, W9
	011 Move D5, X8
	012 Xor W8, W9, W9
	013 Xor W8, W8, W8
	014 Xor W8, W8, W8
	015 Xor W10, W8, W8
	016 Xor X8, X8, X9
	017 Xor W9, W10, W10
	018 Add D5, D5, D4
	019 Or X8, X8, 0x3FFFFFFFFFFFFFFF
	020 Xor W9, W9, W9
	021 Multiply D0, D0, D5
	022 Move D5, X8
	023 Xor W8, W9, W9
	024 Xor W8, W8, W8
	025 Xor W8, W8, W8
	026 Xor W10, W8, W8
	027 Xor X8, X8, X9
	028 Xor W9, W10, W10
	029 Add D5, D5, D4
	030 Or X8, X8, 0x3FFFFFFFFFFFFFFF
	031 Xor W9, W9, W9
	032 Multiply D1, D1, D5
	033 Move D5, X8
	034 Xor W8, W9, W9
	035 Xor W8, W8, W8
	036 Xor W8, W8, W8
	037 Xor W10, W8, W8
	038 Xor X8, X8, X9
	039 Or X8, X8, 0x3FFFFFFFFFFFFFFF
	040 Move D6, X8
	041 Add D5, D5, D4
	042 Xor W9, W10, W10
	043 Add D4, D6, D4
	044 Xor W9, W9, W9
	045 Multiply D2, D2, D5
	046 Multiply D3, D3, D4
	047 Move [X0], W9
	048 Return X0

Method: System.Double NextDouble(System.Double min, System.Double max)

Disassembly:
	0x038CC0A4 FMUL S6, S2, S6
	0x038CC0A8 FMUL S1, S16, S1
	0x038CC0AC FMUL S2, S17, S2
	0x038CC0B0 FSUB S1, S4, S1
	0x038CC0B4 FSUB S2, S5, S2
	0x038CC0B8 LDR V4, [X8]
	0x038CC0BC LDR V5, [X8 + 0x8]
	0x038CC0C0 FMUL S7, S12, S13
	0x038CC0C4 FMUL S0, S7, S0
	0x038CC0C8 FMUL S7, S11, S7
	0x038CC0CC FADD S0, S0, S3
	0x038CC0D0 FADD S3, S7, S6
	0x038CC0D4 STP S0, S1, [X19]
	0x038CC0D8 STP S2, S3, [X19 + 0x8]
	0x038CC0DC STR D4, [X19 + 0x10]
	0x038CC0E0 STR S5, [X19 + 0x18]
	0x038CC0E4 LDP X20, X19, [X31 + 0x40]

ISIL:
	001 Move W8, [X0]
	002 Move D2, -1
	003 Subtract D1, D1, D0
	004 Xor W9, W8, W8
	005 Xor W9, W9, W9
	006 Xor W9, W9, W9
	007 Xor X8, X9, X8
	008 Or X8, X8, 0x3FFFFFFFFFFFFFFF
	009 Move D3, X8
	010 Xor W10, W9, W9
	011 Add D2, D3, D2
	012 Xor W9, W10, W10
	013 Multiply D1, D1, D2
	014 Xor W9, W9, W9
	015 Add D0, D1, D0
	016 Move [X0], W9
	017 Return V0

Method: Unity.Mathematics.double2 NextDouble2(Unity.Mathematics.double2 min, Unity.Mathematics.double2 max)

Disassembly:
	0x038CC0E8 LDP X30, X21, [X31 + 0x30]
	0x038CC0EC LDP D9, D8, [X31 + 0x20]
	0x038CC0F0 LDP D11, D10, [X31 + 0x10]
	0x038CC0F4 LDP D13, D12, [X31], #0x50
	0x038CC0F8 RET
	0x038CC0FC STP D13, D12, [X31 - 0x50]!
	0x038CC100 STP D11, D10, [X31 + 0x10]
	0x038CC104 STP D9, D8, [X31 + 0x20]
	0x038CC108 STP X30, X21, [X31 + 0x30]
	0x038CC10C STP X20, X19, [X31 + 0x40]
	0x038CC110 ADRP X21, 0xB15000
	0x038CC114 ADRP X20, 0x852000
	0x038CC118 MOV X19, X8
	0x038CC11C LDRB W8, [X21 + 0x6A8]
	0x038CC120 LDR X20, [X20 + 0x838]
	0x038CC124 MOV V8.16B, V2.16B
	0x038CC128 MOV V9.16B, V1.16B
	0x038CC12C MOV V10.16B, V0.16B
	0x038CC130 TBNZ X8, 0x0, 0x38CC148
	0x038CC134 ADRP X0, 0x852000
	0x038CC138 LDR X0, [X0 + 0x838]
	0x038CC13C BL 0x1C16CF4
	0x038CC140 MOVZ W8, 0x1
	0x038CC144 STRB W8, [X21 + 0x6A8]
	0x038CC148 FMOV S0, 0.5
	0x038CC14C FMUL S10, S10, S0
	0x038CC150 FMUL S9, S9, S0
	0x038CC154 FMUL S8, S8, S0
	0x038CC158 MOV V0.16B, V10.16B
	0x038CC15C MOV V1.16B, V9.16B

ISIL:
	001 Move W8, [X0]
	002 Move D4, -1
	003 Subtract D2, D2, D0
	004 Subtract D3, D3, D1
	005 Xor W9, W8, W8
	006 Xor W9, W9, W9
	007 Xor W9, W9, W9
	008 Xor W10, W9, W9
	009 Xor X8, X9, X8
	010 Xor W9, W10, W10
	011 Or X8, X8, 0x3FFFFFFFFFFFFFFF
	012 Xor W9, W9, W9
	013 Move D5, X8
	014 Xor W8, W9, W9
	015 Xor W8, W8, W8
	016 Xor W8, W8, W8
	017 Xor W10, W8, W8
	018 Xor X8, X8, X9
	019 Add D5, D5, D4
	020 Or X8, X8, 0x3FFFFFFFFFFFFFFF
	021 Multiply D2, D2, D5
	022 Move D5, X8
	023 Add D4, D5, D4
	024 Xor W9, W10, W10
	025 Multiply D3, D3, D4
	026 Xor W9, W9, W9
	027 Add D0, D0, D2
	028 Add D1, D1, D3
	029 Move [X0], W9
	030 Return X0

Method: Unity.Mathematics.double3 NextDouble3(Unity.Mathematics.double3 min, Unity.Mathematics.double3 max)

Disassembly:
	0x038CC160 MOV V2.16B, V8.16B
	0x038CC164 MOV X0, X31
	0x038CC168 BL 0x384BD60
	0x038CC16C MOV V11.16B, V0.16B
	0x038CC170 MOV V12.16B, V1.16B
	0x038CC174 MOV V13.16B, V2.16B
	0x038CC178 MOV V0.16B, V10.16B
	0x038CC17C MOV V1.16B, V9.16B
	0x038CC180 MOV V2.16B, V8.16B
	0x038CC184 MOV X0, X31
	0x038CC188 BL 0x384BE4C
	0x038CC18C LDR X8, [X20]
	0x038CC190 FMUL S3, S11, S1
	0x038CC194 FMUL S4, S12, S0
	0x038CC198 FMUL S5, S13, S0
	0x038CC19C LDR X8, [X8 + 0xB8]
	0x038CC1A0 FMUL S6, S0, S1
	0x038CC1A4 FMUL S16, S11, S12
	0x038CC1A8 FMUL S17, S13, S11
	0x038CC1AC FMUL S3, S2, S3
	0x038CC1B0 FMUL S4, S2, S4
	0x038CC1B4 FMUL S5, S1, S5
	0x038CC1B8 FMUL S6, S2, S6
	0x038CC1BC FMUL S2, S16, S2
	0x038CC1C0 FMUL S1, S17, S1
	0x038CC1C4 FSUB S1, S4, S1
	0x038CC1C8 FADD S2, S2, S5
	0x038CC1CC LDR V4, [X8]
	0x038CC1D0 LDR V5, [X8 + 0x8]
	0x038CC1D4 FMUL S7, S12, S13
	0x038CC1D8 FMUL S0, S7, S0
	0x038CC1DC FMUL S7, S11, S7
	0x038CC1E0 FADD S0, S0, S3
	0x038CC1E4 FSUB S3, S6, S7
	0x038CC1E8 STP S0, S1, [X19]
	0x038CC1EC STP S2, S3, [X19 + 0x8]
	0x038CC1F0 STR D4, [X19 + 0x10]
	0x038CC1F4 STR S5, [X19 + 0x18]
	0x038CC1F8 LDP X20, X19, [X31 + 0x40]
	0x038CC1FC LDP X30, X21, [X31 + 0x30]
	0x038CC200 LDP D9, D8, [X31 + 0x20]
	0x038CC204 LDP D11, D10, [X31 + 0x10]
	0x038CC208 LDP D13, D12, [X31], #0x50

ISIL:
	001 Move W8, [X0]
	002 Move D6, -1
	003 Subtract D3, D3, D0
	004 Subtract D4, D4, D1
	005 Xor W9, W8, W8
	006 Xor W9, W9, W9
	007 Xor W9, W9, W9
	008 Xor W10, W9, W9
	009 Xor X8, X9, X8
	010 Xor W9, W10, W10
	011 Or X8, X8, 0x3FFFFFFFFFFFFFFF
	012 Xor W9, W9, W9
	013 Move D7, X8
	014 Xor W8, W9, W9
	015 Xor W8, W8, W8
	016 Xor W8, W8, W8
	017 Xor W10, W8, W8
	018 Add D7, D7, D6
	019 Xor X8, X8, X9
	020 Xor W9, W10, W10
	021 Multiply D3, D3, D7
	022 Or X8, X8, 0x3FFFFFFFFFFFFFFF
	023 Xor W9, W9, W9
	024 Add D0, D0, D3
	025 Move D3, X8
	026 Xor W8, W9, W9
	027 Xor W8, W8, W8
	028 Xor W8, W8, W8
	029 Xor W10, W8, W8
	030 Xor X8, X8, X9
	031 Add D3, D3, D6
	032 Or X8, X8, 0x3FFFFFFFFFFFFFFF
	033 Multiply D3, D4, D3
	034 Move D4, X8
	035 Subtract D5, D5, D2
	036 Add D4, D4, D6
	037 Xor W9, W10, W10
	038 Multiply D4, D5, D4
	039 Xor W9, W9, W9
	040 Add D1, D1, D3
	041 Add D2, D2, D4
	042 Move [X0], W9
	043 Return X0

Method: Unity.Mathematics.double4 NextDouble4(Unity.Mathematics.double4 min, Unity.Mathematics.double4 max)

Disassembly:
	0x038CC20C RET
	0x038CC210 STP D13, D12, [X31 - 0x50]!
	0x038CC214 STP D11, D10, [X31 + 0x10]
	0x038CC218 STP D9, D8, [X31 + 0x20]
	0x038CC21C STR X30, [X31 + 0x30]
	0x038CC220 STP X20, X19, [X31 + 0x40]
	0x038CC224 ADRP X20, 0xB15000
	0x038CC228 LDRB W9, [X20 + 0x6C9]
	0x038CC22C MOV V8.16B, V2.16B
	0x038CC230 MOV V9.16B, V1.16B
	0x038CC234 MOV V10.16B, V0.16B
	0x038CC238 MOV X19, X8
	0x038CC23C CBNZ W9, 0x38CC254
	0x038CC240 ADRP X0, 0x852000
	0x038CC244 LDR X0, [X0 + 0x838]
	0x038CC248 BL 0x1C16CF4
	0x038CC24C MOVZ W8, 0x1
	0x038CC250 STRB W8, [X20 + 0x6C9]
	0x038CC254 FMOV S0, 0.5
	0x038CC258 FMUL S10, S10, S0
	0x038CC25C FMUL S9, S9, S0
	0x038CC260 FMUL S8, S8, S0
	0x038CC264 MOV V0.16B, V10.16B
	0x038CC268 MOV V1.16B, V9.16B
	0x038CC26C MOV V2.16B, V8.16B
	0x038CC270 MOV X0, X31
	0x038CC274 BL 0x384BD60
	0x038CC278 MOV V11.16B, V0.16B
	0x038CC27C MOV V12.16B, V1.16B
	0x038CC280 MOV V13.16B, V2.16B
	0x038CC284 MOV V0.16B, V10.16B
	0x038CC288 MOV V1.16B, V9.16B
	0x038CC28C MOV V2.16B, V8.16B
	0x038CC290 MOV X0, X31
	0x038CC294 BL 0x384BE4C
	0x038CC298 ADRP X8, 0x852000
	0x038CC29C LDR X8, [X8 + 0x838]
	0x038CC2A0 FMUL S3, S11, S1
	0x038CC2A4 FMUL S4, S12, S0
	0x038CC2A8 FMUL S5, S13, S0
	0x038CC2AC LDR X8, [X8]
	0x038CC2B0 FMUL S6, S0, S1
	0x038CC2B4 FMUL S16, S11, S13
	0x038CC2B8 FMUL S17, S12, S11
	0x038CC2BC LDR X8, [X8 + 0xB8]
	0x038CC2C0 FMUL S3, S2, S3
	0x038CC2C4 FMUL S4, S2, S4
	0x038CC2C8 FMUL S5, S1, S5
	0x038CC2CC FMUL S6, S2, S6
	0x038CC2D0 FMUL S1, S16, S1
	0x038CC2D4 FMUL S2, S17, S2
	0x038CC2D8 FADD S1, S1, S4
	0x038CC2DC FSUB S2, S5, S2
	0x038CC2E0 LDR V4, [X8]
	0x038CC2E4 LDR V5, [X8 + 0x8]
	0x038CC2E8 FMUL S7, S12, S13

ISIL:
	001 Move W8, [X0]
	002 Move D16, -1
	003 Subtract D4, D4, D0
	004 Subtract D5, D5, D1
	005 Xor W9, W8, W8
	006 Xor W9, W9, W9
	007 Xor W9, W9, W9
	008 Xor W10, W9, W9
	009 Xor X8, X9, X8
	010 Xor W9, W10, W10
	011 Or X8, X8, 0x3FFFFFFFFFFFFFFF
	012 Xor W9, W9, W9
	013 Move D17, X8
	014 Xor W8, W9, W9
	015 Xor W8, W8, W8
	016 Xor W8, W8, W8
	017 Xor W10, W8, W8
	018 Add D17, D17, D16
	019 Xor X8, X8, X9
	020 Xor W9, W10, W10
	021 Multiply D4, D4, D17
	022 Or X8, X8, 0x3FFFFFFFFFFFFFFF
	023 Xor W9, W9, W9
	024 Add D0, D0, D4
	025 Move D4, X8
	026 Xor W8, W9, W9
	027 Xor W8, W8, W8
	028 Xor W8, W8, W8
	029 Xor W10, W8, W8
	030 Add D4, D4, D16
	031 Xor X8, X8, X9
	032 Xor W9, W10, W10
	033 Multiply D4, D5, D4
	034 Or X8, X8, 0x3FFFFFFFFFFFFFFF
	035 Xor W9, W9, W9
	036 Add D1, D1, D4
	037 Move D4, X8
	038 Xor W8, W9, W9
	039 Xor W8, W8, W8
	040 Xor W8, W8, W8
	041 Xor W10, W8, W8
	042 Xor X8, X8, X9
	043 Or X8, X8, 0x3FFFFFFFFFFFFFFF
	044 Move D5, X8
	045 Subtract D6, D6, D2
	046 Subtract D7, D7, D3
	047 Add D4, D4, D16
	048 Add D5, D5, D16
	049 Multiply D4, D6, D4
	050 Xor W9, W10, W10
	051 Multiply D5, D7, D5
	052 Xor W9, W9, W9
	053 Add D2, D2, D4
	054 Add D3, D3, D5
	055 Move [X0], W9
	056 Return X0

Method: Unity.Mathematics.float2 NextFloat2Direction()

Disassembly:
	0x038CC2EC FMUL S16, S11, S7
	0x038CC2F0 FMUL S0, S7, S0
	0x038CC2F4 FSUB S0, S3, S0
	0x038CC2F8 FADD S3, S16, S6
	0x038CC2FC STP S0, S1, [X19]
	0x038CC300 STP S2, S3, [X19 + 0x8]
	0x038CC304 STR D4, [X19 + 0x10]
	0x038CC308 STR S5, [X19 + 0x18]
	0x038CC30C LDP X20, X19, [X31 + 0x40]
	0x038CC310 LDR X30, [X31 + 0x30]
	0x038CC314 LDP D9, D8, [X31 + 0x20]
	0x038CC318 LDP D11, D10, [X31 + 0x10]
	0x038CC31C LDP D13, D12, [X31], #0x50
	0x038CC320 RET
	0x038CC324 STP D13, D12, [X31 - 0x50]!
	0x038CC328 STP D11, D10, [X31 + 0x10]
	0x038CC32C STP D9, D8, [X31 + 0x20]
	0x038CC330 STR X30, [X31 + 0x30]
	0x038CC334 STP X20, X19, [X31 + 0x40]
	0x038CC338 ADRP X20, 0xB15000
	0x038CC33C LDRB W9, [X20 + 0x6CA]
	0x038CC340 MOV V8.16B, V2.16B
	0x038CC344 MOV V9.16B, V1.16B
	0x038CC348 MOV V10.16B, V0.16B
	0x038CC34C MOV X19, X8
	0x038CC350 CBNZ W9, 0x38CC368
	0x038CC354 ADRP X0, 0x852000
	0x038CC358 LDR X0, [X0 + 0x838]
	0x038CC35C BL 0x1C16CF4
	0x038CC360 MOVZ W8, 0x1
	0x038CC364 STRB W8, [X20 + 0x6CA]
	0x038CC368 FMOV S0, 0.5
	0x038CC36C FMUL S10, S10, S0
	0x038CC370 FMUL S9, S9, S0
	0x038CC374 FMUL S8, S8, S0
	0x038CC378 MOV V0.16B, V10.16B
	0x038CC37C MOV V1.16B, V9.16B
	0x038CC380 MOV V2.16B, V8.16B
	0x038CC384 MOV X0, X31
	0x038CC388 BL 0x384BD60
	0x038CC38C MOV V11.16B, V0.16B
	0x038CC390 MOV V12.16B, V1.16B
	0x038CC394 MOV V13.16B, V2.16B
	0x038CC398 MOV V0.16B, V10.16B
	0x038CC39C MOV V1.16B, V9.16B
	0x038CC3A0 MOV V2.16B, V8.16B
	0x038CC3A4 MOV X0, X31
	0x038CC3A8 BL 0x384BE4C
	0x038CC3AC ADRP X8, 0x852000
	0x038CC3B0 LDR X8, [X8 + 0x838]
	0x038CC3B4 FMUL S3, S11, S1
	0x038CC3B8 FMUL S4, S12, S0
	0x038CC3BC FMUL S5, S13, S0
	0x038CC3C0 LDR X8, [X8]
	0x038CC3C4 FMUL S6, S0, S1
	0x038CC3C8 FMUL S16, S11, S13
	0x038CC3CC FMUL S17, S12, S11
	0x038CC3D0 LDR X8, [X8 + 0xB8]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], D9
	003 Move [X31+24], D8
	004 Move [X31+32], X30
	005 Move [X31+48], X20
	006 Move [X31+56], X19
	007 Move W8, [X0]
	008 Move W9, 0x3F800000
	009 Move X10, -48111616
	010 Move X19, 0xB16000
	011 Xor W11, W8, W8
	012 NotImplemented "Instruction BFM not yet implemented."
	013 Xor W8, W11, W11
	014 Xor W8, W8, W8
	015 Move [X0], W8
	016 Move W8, [X19+1386]
	017 Move V8, [X10+3916]
	018 Move S0, W9
	019 Move S1, -1
	020 Add S9, S0, S1
	021 Compare W8, 0
	022 JumpIfNotEqual {28}
	023 Move X0, 0x828000
	024 Move X0, [X0+1448]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X19+1386], W8
	028 Move X19, 0x828000
	029 Move X19, [X19+1448]
	030 Multiply S8, S9, S8
	031 Move X0, [X19]
	032 Move W8, [X0+224]
	033 Compare W8, 0
	034 JumpIfNotEqual {36}
	035 Call 0x1C17DFC
	036 Move X20, 0xB16000
	037 Move W8, [X20+1380]
	038 Add S8, S8, S8
	039 Compare W8, 0
	040 JumpIfNotEqual {46}
	041 Move X0, 0x828000
	042 Move X0, [X0+1448]
	043 Call 0x1C17CF4
	044 Move W8, 1
	045 Move [X20+1380], W8
	046 Move X0, [X19]
	047 NotImplemented "Instruction FCVT not yet implemented."
	048 Move W8, [X0+224]
	049 Compare W8, 0
	050 JumpIfNotEqual {52}
	051 Call 0x1C17DFC
	052 Add X0, X31, 40
	053 Add X1, X31, 8
	054 Move V0, V8
	055 Call 0x3EB2E40
	056 Move V0, [X31+40]
	057 Move V2, [X31+8]
	058 Move X20, [X31+48]
	059 Move X19, [X31+56]
	060 Move X30, [X31+32]
	061 Move D9, [X31+16]
	062 Move D8, [X31+24]
	063 NotImplemented "Instruction INVALID not yet implemented."
	064 NotImplemented "Instruction INVALID not yet implemented."
	065 Add X31, X31, 64
	066 Return X0

Method: Unity.Mathematics.double2 NextDouble2Direction()

Disassembly:
	0x038CC3D4 FMUL S3, S2, S3
	0x038CC3D8 FMUL S4, S2, S4
	0x038CC3DC FMUL S5, S1, S5
	0x038CC3E0 FMUL S6, S2, S6
	0x038CC3E4 FMUL S1, S16, S1
	0x038CC3E8 FMUL S2, S17, S2
	0x038CC3EC FADD S1, S1, S4
	0x038CC3F0 FSUB S2, S5, S2
	0x038CC3F4 LDR V4, [X8]
	0x038CC3F8 LDR V5, [X8 + 0x8]
	0x038CC3FC FMUL S7, S12, S13
	0x038CC400 FMUL S0, S7, S0
	0x038CC404 FMUL S7, S11, S7
	0x038CC408 FADD S0, S0, S3
	0x038CC40C FSUB S3, S6, S7
	0x038CC410 STP S0, S1, [X19]
	0x038CC414 STP S2, S3, [X19 + 0x8]
	0x038CC418 STR D4, [X19 + 0x10]
	0x038CC41C STR S5, [X19 + 0x18]
	0x038CC420 LDP X20, X19, [X31 + 0x40]
	0x038CC424 LDR X30, [X31 + 0x30]
	0x038CC428 LDP D9, D8, [X31 + 0x20]
	0x038CC42C LDP D11, D10, [X31 + 0x10]
	0x038CC430 LDP D13, D12, [X31], #0x50
	0x038CC434 RET
	0x038CC438 STP D13, D12, [X31 - 0x50]!
	0x038CC43C STP D11, D10, [X31 + 0x10]
	0x038CC440 STP D9, D8, [X31 + 0x20]
	0x038CC444 STR X30, [X31 + 0x30]
	0x038CC448 STP X20, X19, [X31 + 0x40]
	0x038CC44C ADRP X20, 0xB15000
	0x038CC450 LDRB W9, [X20 + 0x6CB]
	0x038CC454 MOV V8.16B, V2.16B
	0x038CC458 MOV V9.16B, V1.16B
	0x038CC45C MOV V10.16B, V0.16B
	0x038CC460 MOV X19, X8
	0x038CC464 CBNZ W9, 0x38CC47C
	0x038CC468 ADRP X0, 0x852000
	0x038CC46C LDR X0, [X0 + 0x838]
	0x038CC470 BL 0x1C16CF4
	0x038CC474 MOVZ W8, 0x1
	0x038CC478 STRB W8, [X20 + 0x6CB]
	0x038CC47C FMOV S0, 0.5
	0x038CC480 FMUL S10, S10, S0
	0x038CC484 FMUL S9, S9, S0
	0x038CC488 FMUL S8, S8, S0
	0x038CC48C MOV V0.16B, V10.16B
	0x038CC490 MOV V1.16B, V9.16B
	0x038CC494 MOV V2.16B, V8.16B
	0x038CC498 MOV X0, X31
	0x038CC49C BL 0x384BD60
	0x038CC4A0 MOV V11.16B, V0.16B
	0x038CC4A4 MOV V12.16B, V1.16B
	0x038CC4A8 MOV V13.16B, V2.16B
	0x038CC4AC MOV V0.16B, V10.16B
	0x038CC4B0 MOV V1.16B, V9.16B
	0x038CC4B4 MOV V2.16B, V8.16B
	0x038CC4B8 MOV X0, X31
	0x038CC4BC BL 0x384BE4C

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], D10
	003 Move [X31+24], D9
	004 Move [X31+32], D8
	005 Move [X31+40], X30
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move W8, [X0]
	009 Move X19, 0xB16000
	010 Move D9, -1
	011 Move X20, -48095232
	012 Xor W9, W8, W8
	013 Xor W9, W9, W9
	014 Xor W9, W9, W9
	015 Xor W10, W9, W9
	016 Xor X8, X9, X8
	017 Xor W9, W10, W10
	018 Xor W9, W9, W9
	019 Move [X0], W9
	020 Move W9, [X19+1387]
	021 Or X8, X8, 0x3FFFFFFFFFFFFFFF
	022 Move D8, X8
	023 Compare W9, 0
	024 JumpIfNotEqual {30}
	025 Move X0, 0x828000
	026 Move X0, [X0+1448]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X19+1387], W8
	030 Move X19, 0x828000
	031 Move X19, [X19+1448]
	032 Move V10, [X20+1208]
	033 Add D8, D8, D9
	034 Move X0, [X19]
	035 Move W8, [X0+224]
	036 Compare W8, 0
	037 JumpIfNotEqual {39}
	038 Call 0x1C17DFC
	039 Move X20, 0xB16000
	040 Move W8, [X20+1381]
	041 Multiply D8, D8, D10
	042 Compare W8, 0
	043 JumpIfNotEqual {49}
	044 Move X0, 0x828000
	045 Move X0, [X0+1448]
	046 Call 0x1C17CF4
	047 Move W8, 1
	048 Move [X20+1381], W8
	049 Move X0, [X19]
	050 Add D8, D8, D8
	051 Move W8, [X0+224]
	052 Compare W8, 0
	053 JumpIfNotEqual {55}
	054 Call 0x1C17DFC
	055 Add X0, X31, 8
	056 Add X1, X31, 0
	057 Move V0, V8
	058 Call 0x3EB2E40
	059 Move D0, [X31]
	060 Move D1, [X31+8]
	061 Move X20, [X31+48]
	062 Move X19, [X31+56]
	063 Move X30, [X31+40]
	064 Move D9, [X31+24]
	065 Move D8, [X31+32]
	066 Move V10, [X31+16]
	067 Add X31, X31, 64
	068 Return X0

Method: Unity.Mathematics.float3 NextFloat3Direction()

Disassembly:
	0x038CC4C0 ADRP X8, 0x852000
	0x038CC4C4 LDR X8, [X8 + 0x838]
	0x038CC4C8 FMUL S3, S11, S1
	0x038CC4CC FMUL S4, S12, S0
	0x038CC4D0 FMUL S5, S13, S0
	0x038CC4D4 LDR X8, [X8]
	0x038CC4D8 FMUL S6, S0, S1
	0x038CC4DC FMUL S16, S11, S13
	0x038CC4E0 FMUL S17, S11, S12
	0x038CC4E4 LDR X8, [X8 + 0xB8]
	0x038CC4E8 FMUL S3, S2, S3
	0x038CC4EC FMUL S4, S2, S4
	0x038CC4F0 FMUL S5, S1, S5
	0x038CC4F4 FMUL S6, S2, S6
	0x038CC4F8 FMUL S1, S16, S1
	0x038CC4FC FMUL S2, S17, S2
	0x038CC500 FADD S1, S1, S4
	0x038CC504 FADD S2, S2, S5
	0x038CC508 LDR V4, [X8]
	0x038CC50C LDR V5, [X8 + 0x8]
	0x038CC510 FMUL S7, S12, S13
	0x038CC514 FMUL S0, S7, S0
	0x038CC518 FMUL S7, S11, S7
	0x038CC51C FSUB S0, S3, S0
	0x038CC520 FSUB S3, S6, S7
	0x038CC524 STP S0, S1, [X19]
	0x038CC528 STP S2, S3, [X19 + 0x8]
	0x038CC52C STR D4, [X19 + 0x10]
	0x038CC530 STR S5, [X19 + 0x18]
	0x038CC534 LDP X20, X19, [X31 + 0x40]
	0x038CC538 LDR X30, [X31 + 0x30]
	0x038CC53C LDP D9, D8, [X31 + 0x20]
	0x038CC540 LDP D11, D10, [X31 + 0x10]
	0x038CC544 LDP D13, D12, [X31], #0x50
	0x038CC548 RET
	0x038CC54C STP D13, D12, [X31 - 0x50]!
	0x038CC550 STP D11, D10, [X31 + 0x10]
	0x038CC554 STP D9, D8, [X31 + 0x20]
	0x038CC558 STR X30, [X31 + 0x30]
	0x038CC55C STP X20, X19, [X31 + 0x40]
	0x038CC560 ADRP X20, 0xB15000
	0x038CC564 LDRB W9, [X20 + 0x6CC]
	0x038CC568 MOV V8.16B, V2.16B
	0x038CC56C MOV V9.16B, V1.16B
	0x038CC570 MOV V10.16B, V0.16B
	0x038CC574 MOV X19, X8
	0x038CC578 CBNZ W9, 0x38CC590
	0x038CC57C ADRP X0, 0x852000
	0x038CC580 LDR X0, [X0 + 0x838]
	0x038CC584 BL 0x1C16CF4
	0x038CC588 MOVZ W8, 0x1
	0x038CC58C STRB W8, [X20 + 0x6CC]
	0x038CC590 FMOV S0, 0.5
	0x038CC594 FMUL S10, S10, S0
	0x038CC598 FMUL S9, S9, S0
	0x038CC59C FMUL S8, S8, S0
	0x038CC5A0 MOV V0.16B, V10.16B
	0x038CC5A4 MOV V1.16B, V9.16B
	0x038CC5A8 MOV V2.16B, V8.16B
	0x038CC5AC MOV X0, X31
	0x038CC5B0 BL 0x384BD60
	0x038CC5B4 MOV V11.16B, V0.16B
	0x038CC5B8 MOV V12.16B, V1.16B
	0x038CC5BC MOV V13.16B, V2.16B
	0x038CC5C0 MOV V0.16B, V10.16B
	0x038CC5C4 MOV V1.16B, V9.16B
	0x038CC5C8 MOV V2.16B, V8.16B
	0x038CC5CC MOV X0, X31
	0x038CC5D0 BL 0x384BE4C
	0x038CC5D4 ADRP X8, 0x852000
	0x038CC5D8 LDR X8, [X8 + 0x838]
	0x038CC5DC FMUL S3, S11, S1
	0x038CC5E0 FMUL S4, S12, S0
	0x038CC5E4 FMUL S5, S13, S0
	0x038CC5E8 LDR X8, [X8]
	0x038CC5EC FMUL S6, S0, S1
	0x038CC5F0 FMUL S16, S11, S12
	0x038CC5F4 FMUL S17, S13, S11
	0x038CC5F8 LDR X8, [X8 + 0xB8]
	0x038CC5FC FMUL S3, S2, S3
	0x038CC600 FMUL S4, S2, S4
	0x038CC604 FMUL S5, S1, S5
	0x038CC608 FMUL S6, S2, S6
	0x038CC60C FMUL S2, S16, S2
	0x038CC610 FMUL S1, S17, S1
	0x038CC614 FSUB S1, S4, S1
	0x038CC618 FADD S2, S2, S5
	0x038CC61C LDR V4, [X8]
	0x038CC620 LDR V5, [X8 + 0x8]
	0x038CC624 FMUL S7, S12, S13
	0x038CC628 FMUL S16, S11, S7
	0x038CC62C FMUL S0, S7, S0

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+16], D13
	003 Move [X31+24], D12
	004 Move [X31+32], D11
	005 Move [X31+40], D10
	006 Move [X31+48], D9
	007 Move [X31+56], D8
	008 Move [X31+64], X30
	009 Move [X31+80], X20
	010 Move [X31+88], X19
	011 Move W8, [X0]
	012 Move W9, 0x3F800000
	013 Move X19, 0xB16000
	014 Move S9, -1
	015 Xor W10, W8, W8
	016 NotImplemented "Instruction BFM not yet implemented."
	017 Xor W8, W10, W10
	018 Xor W8, W8, W8
	019 Xor W10, W8, W8
	020 Xor W10, W10, W10
	021 Xor W10, W10, W10
	022 Move [X0], W10
	023 Move W10, [X19+1413]
	024 Move S0, W9
	025 Move W20, 0x3F800000
	026 Add S0, S0, S9
	027 NotImplemented "Instruction BFM not yet implemented."
	028 Add S8, S0, S0
	029 Compare W10, 0
	030 JumpIfNotEqual {36}
	031 Move X0, 0x828000
	032 Move X0, [X0+1448]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X19+1413], W8
	036 Move X19, 0x828000
	037 Move X19, [X19+1448]
	038 Move S10, W20
	039 Add S8, S8, S9
	040 Move X0, [X19]
	041 Move W8, [X0+224]
	042 Compare W8, 0
	043 JumpIfNotEqual {45}
	044 Call 0x1C17DFC
	045 Move X8, -48111616
	046 Move X20, 0xB16000
	047 Move W9, [X20+1386]
	048 Move V11, [X8+3916]
	049 Multiply S12, S8, S8
	050 Move S13, 1
	051 Add S9, S10, S9
	052 Compare W9, 0
	053 JumpIfNotEqual {59}
	054 Move X0, 0x828000
	055 Move X0, [X0+1448]
	056 Call 0x1C17CF4
	057 Move W8, 1
	058 Move [X20+1386], W8
	059 Move X0, [X19]
	060 Subtract S10, S13, S12
	061 Move S12, W31
	062 Multiply S11, S9, S11
	063 Move W8, [X0+224]
	064 Compare W8, 0
	065 JumpIfNotEqual {67}
	066 Call 0x1C17DFC
	067 Move X20, 0xB16000
	068 Move W8, [X20+1380]
	069 NotImplemented "Instruction FMAXNM not yet implemented."
	070 Add S11, S11, S11
	071 Compare W8, 0
	072 JumpIfNotEqual {78}
	073 Move X0, 0x828000
	074 Move X0, [X0+1448]
	075 Call 0x1C17CF4
	076 Move W8, 1
	077 Move [X20+1380], W8
	078 Move X0, [X19]
	079 NotImplemented "Instruction FSQRT not yet implemented."
	080 NotImplemented "Instruction FCVT not yet implemented."
	081 Move W8, [X0+224]
	082 Compare W8, 0
	083 JumpIfNotEqual {85}
	084 Call 0x1C17DFC
	085 Add X0, X31, 72
	086 Add X1, X31, 8
	087 Move V0, V9
	088 Call 0x3EB2E40
	089 Move V0, [X31+72]
	090 Move V1, [X31+8]
	091 Move X20, [X31+80]
	092 Move X19, [X31+88]
	093 Move X30, [X31+64]
	094 NotImplemented "Instruction INVALID not yet implemented."
	095 NotImplemented "Instruction INVALID not yet implemented."
	096 Multiply S0, S10, S0
	097 Multiply S1, S10, S2
	098 Move V2, V8
	099 Move D9, [X31+48]
	100 Move D8, [X31+56]
	101 Move D11, [X31+32]
	102 Move D10, [X31+40]
	103 Move D13, [X31+16]
	104 Move D12, [X31+24]
	105 Add X31, X31, 96
	106 Return X0

Method: Unity.Mathematics.double3 NextDouble3Direction()

Disassembly:
	0x038CC630 FSUB S0, S3, S0
	0x038CC634 FADD S3, S16, S6
	0x038CC638 STP S0, S1, [X19]
	0x038CC63C STP S2, S3, [X19 + 0x8]
	0x038CC640 STR D4, [X19 + 0x10]
	0x038CC644 STR S5, [X19 + 0x18]
	0x038CC648 LDP X20, X19, [X31 + 0x40]
	0x038CC64C LDR X30, [X31 + 0x30]
	0x038CC650 LDP D9, D8, [X31 + 0x20]
	0x038CC654 LDP D11, D10, [X31 + 0x10]
	0x038CC658 LDP D13, D12, [X31], #0x50
	0x038CC65C RET
	0x038CC660 STP D13, D12, [X31 - 0x50]!
	0x038CC664 STP D11, D10, [X31 + 0x10]
	0x038CC668 STP D9, D8, [X31 + 0x20]
	0x038CC66C STR X30, [X31 + 0x30]
	0x038CC670 STP X20, X19, [X31 + 0x40]
	0x038CC674 ADRP X20, 0xB15000
	0x038CC678 LDRB W9, [X20 + 0x6CD]
	0x038CC67C MOV V8.16B, V2.16B
	0x038CC680 MOV V9.16B, V1.16B
	0x038CC684 MOV V10.16B, V0.16B
	0x038CC688 MOV X19, X8
	0x038CC68C CBNZ W9, 0x38CC6A4
	0x038CC690 ADRP X0, 0x852000
	0x038CC694 LDR X0, [X0 + 0x838]
	0x038CC698 BL 0x1C16CF4
	0x038CC69C MOVZ W8, 0x1
	0x038CC6A0 STRB W8, [X20 + 0x6CD]
	0x038CC6A4 FMOV S0, 0.5
	0x038CC6A8 FMUL S10, S10, S0
	0x038CC6AC FMUL S9, S9, S0
	0x038CC6B0 FMUL S8, S8, S0
	0x038CC6B4 MOV V0.16B, V10.16B
	0x038CC6B8 MOV V1.16B, V9.16B
	0x038CC6BC MOV V2.16B, V8.16B
	0x038CC6C0 MOV X0, X31
	0x038CC6C4 BL 0x384BD60
	0x038CC6C8 MOV V11.16B, V0.16B
	0x038CC6CC MOV V12.16B, V1.16B
	0x038CC6D0 MOV V13.16B, V2.16B
	0x038CC6D4 MOV V0.16B, V10.16B
	0x038CC6D8 MOV V1.16B, V9.16B
	0x038CC6DC MOV V2.16B, V8.16B
	0x038CC6E0 MOV X0, X31
	0x038CC6E4 BL 0x384BE4C
	0x038CC6E8 ADRP X8, 0x852000
	0x038CC6EC LDR X8, [X8 + 0x838]
	0x038CC6F0 FMUL S3, S11, S1
	0x038CC6F4 FMUL S4, S12, S0
	0x038CC6F8 FMUL S5, S13, S0
	0x038CC6FC LDR X8, [X8]
	0x038CC700 FMUL S6, S0, S1
	0x038CC704 FMUL S16, S13, S11
	0x038CC708 FMUL S17, S12, S11
	0x038CC70C LDR X8, [X8 + 0xB8]
	0x038CC710 FMUL S3, S2, S3
	0x038CC714 FMUL S4, S2, S4
	0x038CC718 FMUL S5, S1, S5
	0x038CC71C FMUL S6, S2, S6
	0x038CC720 FMUL S1, S16, S1
	0x038CC724 FMUL S2, S17, S2
	0x038CC728 FSUB S1, S4, S1
	0x038CC72C FSUB S2, S5, S2
	0x038CC730 LDR V4, [X8]
	0x038CC734 LDR V5, [X8 + 0x8]
	0x038CC738 FMUL S7, S12, S13
	0x038CC73C FMUL S0, S7, S0
	0x038CC740 FMUL S7, S11, S7
	0x038CC744 FADD S0, S0, S3
	0x038CC748 FADD S3, S7, S6
	0x038CC74C STP S0, S1, [X19]
	0x038CC750 STP S2, S3, [X19 + 0x8]
	0x038CC754 STR D4, [X19 + 0x10]
	0x038CC758 STR S5, [X19 + 0x18]
	0x038CC75C LDP X20, X19, [X31 + 0x40]
	0x038CC760 LDR X30, [X31 + 0x30]
	0x038CC764 LDP D9, D8, [X31 + 0x20]
	0x038CC768 LDP D11, D10, [X31 + 0x10]
	0x038CC76C LDP D13, D12, [X31], #0x50
	0x038CC770 RET
	0x038CC774 STP D13, D12, [X31 - 0x50]!
	0x038CC778 STP D11, D10, [X31 + 0x10]
	0x038CC77C STP D9, D8, [X31 + 0x20]
	0x038CC780 STR X30, [X31 + 0x30]
	0x038CC784 STP X20, X19, [X31 + 0x40]
	0x038CC788 ADRP X20, 0xB15000
	0x038CC78C LDRB W9, [X20 + 0x6CE]
	0x038CC790 MOV V8.16B, V2.16B
	0x038CC794 MOV V9.16B, V1.16B
	0x038CC798 MOV V10.16B, V0.16B
	0x038CC79C MOV X19, X8
	0x038CC7A0 CBNZ W9, 0x38CC7B8
	0x038CC7A4 ADRP X0, 0x852000

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+16], D13
	003 Move [X31+24], D12
	004 Move [X31+32], D11
	005 Move [X31+40], D10
	006 Move [X31+48], D9
	007 Move [X31+56], D8
	008 Move [X31+64], X30
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move W8, [X0]
	013 Move X19, 0xB16000
	014 Move D9, -1
	015 Xor W9, W8, W8
	016 Xor W9, W9, W9
	017 Xor W9, W9, W9
	018 Xor W10, W9, W9
	019 Xor X8, X9, X8
	020 Xor W9, W10, W10
	021 Xor W9, W9, W9
	022 Xor W10, W9, W9
	023 Xor W10, W10, W10
	024 Xor W10, W10, W10
	025 Xor W11, W10, W10
	026 Xor W11, W11, W11
	027 Xor W11, W11, W11
	028 Move [X0], W11
	029 Or X8, X8, 0x3FFFFFFFFFFFFFFF
	030 Move W11, [X19+1414]
	031 Move D0, X8
	032 Add D0, D0, D9
	033 Xor X20, X10, X9
	034 Add D8, D0, D0
	035 Compare W11, 0
	036 JumpIfNotEqual {42}
	037 Move X0, 0x828000
	038 Move X0, [X0+1448]
	039 Call 0x1C17CF4
	040 Move W8, 1
	041 Move [X19+1414], W8
	042 Move X19, 0x828000
	043 Move X19, [X19+1448]
	044 Or X20, X20, 0x3FFFFFFFFFFFFFFF
	045 Add D8, D8, D9
	046 Move X0, [X19]
	047 Move W8, [X0+224]
	048 Compare W8, 0
	049 JumpIfNotEqual {51}
	050 Call 0x1C17DFC
	051 Move X21, 0xB16000
	052 Move W8, [X21+1387]
	053 Move D10, X20
	054 Multiply D11, D8, D8
	055 Move D12, 1
	056 Move X20, -48095232
	057 Compare W8, 0
	058 JumpIfNotEqual {64}
	059 Move X0, 0x828000
	060 Move X0, [X0+1448]
	061 Call 0x1C17CF4
	062 Move W8, 1
	063 Move [X21+1387], W8
	064 Move X0, [X19]
	065 Move V13, [X20+1208]
	066 Subtract D11, D12, D11
	067 Move D12, X31
	068 Move W8, [X0+224]
	069 Add D10, D10, D9
	070 Compare W8, 0
	071 JumpIfNotEqual {73}
	072 Call 0x1C17DFC
	073 Move X20, 0xB16000
	074 Move W8, [X20+1381]
	075 NotImplemented "Instruction FMAXNM not yet implemented."
	076 Multiply D11, D10, D13
	077 Compare W8, 0
	078 JumpIfNotEqual {84}
	079 Move X0, 0x828000
	080 Move X0, [X0+1448]
	081 Call 0x1C17CF4
	082 Move W8, 1
	083 Move [X20+1381], W8
	084 Move X0, [X19]
	085 NotImplemented "Instruction FSQRT not yet implemented."
	086 Add D9, D11, D11
	087 Move W8, [X0+224]
	088 Compare W8, 0
	089 JumpIfNotEqual {91}
	090 Call 0x1C17DFC
	091 Add X0, X31, 8
	092 Add X1, X31, 0
	093 Move V0, V9
	094 Call 0x3EB2E40
	095 Move D0, [X31]
	096 Move D1, [X31+8]
	097 Move V2, V8
	098 Move X20, [X31+80]
	099 Move X19, [X31+88]
	100 Move X30, [X31+64]
	101 Move X21, [X31+72]
	102 Multiply D0, D10, D0
	103 Multiply D1, D10, D1
	104 Move D9, [X31+48]
	105 Move D8, [X31+56]
	106 Move D11, [X31+32]
	107 Move D10, [X31+40]
	108 Move D13, [X31+16]
	109 Move D12, [X31+24]
	110 Add X31, X31, 96
	111 Return X0

Method: Unity.Mathematics.quaternion NextQuaternionRotation()

Disassembly:
	0x038CC7A8 LDR X0, [X0 + 0x838]
	0x038CC7AC BL 0x1C16CF4
	0x038CC7B0 MOVZ W8, 0x1
	0x038CC7B4 STRB W8, [X20 + 0x6CE]
	0x038CC7B8 FMOV S0, 0.5
	0x038CC7BC FMUL S10, S10, S0
	0x038CC7C0 FMUL S9, S9, S0
	0x038CC7C4 FMUL S8, S8, S0
	0x038CC7C8 MOV V0.16B, V10.16B
	0x038CC7CC MOV V1.16B, V9.16B
	0x038CC7D0 MOV V2.16B, V8.16B
	0x038CC7D4 MOV X0, X31
	0x038CC7D8 BL 0x384BD60
	0x038CC7DC MOV V11.16B, V0.16B
	0x038CC7E0 MOV V12.16B, V1.16B
	0x038CC7E4 MOV V13.16B, V2.16B
	0x038CC7E8 MOV V0.16B, V10.16B
	0x038CC7EC MOV V1.16B, V9.16B
	0x038CC7F0 MOV V2.16B, V8.16B
	0x038CC7F4 MOV X0, X31
	0x038CC7F8 BL 0x384BE4C
	0x038CC7FC ADRP X8, 0x852000
	0x038CC800 LDR X8, [X8 + 0x838]
	0x038CC804 FMUL S3, S11, S1
	0x038CC808 FMUL S4, S12, S0
	0x038CC80C FMUL S5, S13, S0
	0x038CC810 LDR X8, [X8]
	0x038CC814 FMUL S6, S0, S1
	0x038CC818 FMUL S16, S11, S12
	0x038CC81C FMUL S17, S13, S11
	0x038CC820 LDR X8, [X8 + 0xB8]
	0x038CC824 FMUL S3, S2, S3
	0x038CC828 FMUL S4, S2, S4
	0x038CC82C FMUL S5, S1, S5
	0x038CC830 FMUL S6, S2, S6
	0x038CC834 FMUL S2, S16, S2
	0x038CC838 FMUL S1, S17, S1
	0x038CC83C FSUB S1, S4, S1
	0x038CC840 FADD S2, S2, S5
	0x038CC844 LDR V4, [X8]
	0x038CC848 LDR V5, [X8 + 0x8]
	0x038CC84C FMUL S7, S12, S13
	0x038CC850 FMUL S0, S7, S0
	0x038CC854 FMUL S7, S11, S7
	0x038CC858 FADD S0, S0, S3
	0x038CC85C FSUB S3, S6, S7
	0x038CC860 STP S0, S1, [X19]
	0x038CC864 STP S2, S3, [X19 + 0x8]
	0x038CC868 STR D4, [X19 + 0x10]
	0x038CC86C STR S5, [X19 + 0x18]
	0x038CC870 LDP X20, X19, [X31 + 0x40]
	0x038CC874 LDR X30, [X31 + 0x30]
	0x038CC878 LDP D9, D8, [X31 + 0x20]
	0x038CC87C LDP D11, D10, [X31 + 0x10]
	0x038CC880 LDP D13, D12, [X31], #0x50
	0x038CC884 RET
	0x038CC888 STP D13, D12, [X31 - 0x50]!
	0x038CC88C STP D11, D10, [X31 + 0x10]
	0x038CC890 STP D9, D8, [X31 + 0x20]
	0x038CC894 STP X30, X21, [X31 + 0x30]
	0x038CC898 STP X20, X19, [X31 + 0x40]
	0x038CC89C ADRP X21, 0xB15000
	0x038CC8A0 LDRB W9, [X21 + 0x6A9]
	0x038CC8A4 MOV W20, W0
	0x038CC8A8 MOV V8.16B, V2.16B
	0x038CC8AC MOV V9.16B, V1.16B
	0x038CC8B0 MOV V10.16B, V0.16B
	0x038CC8B4 MOV X19, X8
	0x038CC8B8 TBNZ X9, 0x0, 0x38CC8D0
	0x038CC8BC ADRP X0, 0x87F000
	0x038CC8C0 LDR X0, [X0 + 0xD8]
	0x038CC8C4 BL 0x1C16CF4
	0x038CC8C8 MOVZ W8, 0x1
	0x038CC8CC STRB W8, [X21 + 0x6A9]
	0x038CC8D0 AND W8, W20, 0xFF
	0x038CC8D4 CMP W8, 0x5
	0x038CC8D8 B.HI 0x38CC9B8
	0x038CC8DC ADRP X9, 0xFFFFFFFFFD2CB000
	0x038CC8E0 AND X8, X20, 0xFF
	0x038CC8E4 ADD X9, X9, 0xA21
	0x038CC8E8 ADR X10, 0x10
	0x038CC8EC LDRB W11, [X9, X8, LSL]
	0x038CC8F0 ADD X10, X10, X11, 0x2, LSL
	0x038CC8F4 BR X10
	0x038CC8F8 ADRP X20, 0xB15000
	0x038CC8FC LDRB W8, [X20 + 0x6C9]
	0x038CC900 CBNZ W8, 0x38CC918
	0x038CC904 ADRP X0, 0x852000
	0x038CC908 LDR X0, [X0 + 0x838]
	0x038CC90C BL 0x1C16CF4

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], D9
	003 Move [X31+24], D8
	004 Move [X31+32], X30
	005 Move [X31+40], X31
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move [X31+8], X31
	011 Move W19, [X0]
	012 Move W8, 0x3F800000
	013 Move X21, 0xB16000
	014 Move S1, -1
	015 Xor W9, W19, W19
	016 Xor W9, W9, W9
	017 Xor W20, W9, W9
	018 Xor W9, W20, W20
	019 Xor W9, W9, W9
	020 Xor W9, W9, W9
	021 NotImplemented "Instruction BFM not yet implemented."
	022 Xor W9, W9, W9
	023 Xor W9, W9, W9
	024 Xor W9, W9, W9
	025 Move [X0], W9
	026 Move W9, [X21+1413]
	027 Move S0, W8
	028 Add S8, S0, S1
	029 Move S9, 1
	030 Compare W9, 0
	031 JumpIfNotEqual {37}
	032 Move X0, 0x828000
	033 Move X0, [X0+1448]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X21+1413], W8
	037 Move X22, 0x828000
	038 Move X22, [X22+1448]
	039 Subtract S9, S9, S8
	040 Move X0, [X22]
	041 Move W8, [X0+224]
	042 Compare W8, 0
	043 JumpIfEqual {45}
	044 NotImplemented "Instruction FSQRT not yet implemented."
	045 Call 0x1C17DFC
	046 Move W8, [X21+1413]
	047 NotImplemented "Instruction FSQRT not yet implemented."
	048 Compare W8, 0
	049 JumpIfNotEqual {55}
	050 Move X0, 0x828000
	051 Move X0, [X0+1448]
	052 Call 0x1C17CF4
	053 Move W8, 1
	054 Move [X21+1413], W8
	055 Move X0, [X22]
	056 Move W8, [X0+224]
	057 Compare W8, 0
	058 JumpIfNotEqual {60}
	059 Call 0x1C17DFC
	060 Move S0, W19
	061 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	062 Move V1, 0
	063 Move W8, 4059
	064 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	065 Move V2, 0
	066 NotImplemented "Instruction MOVK not yet implemented."
	067 Or V0, V0, V1
	068 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	069 Add V0, V0, V2
	070 NotImplemented "Instruction INVALID not yet implemented."
	071 Move S1, V0.S[1]
	072 Add X0, X31, 40
	073 Add X1, X31, 8
	074 Move X2, X31
	075 NotImplemented "Instruction FSQRT not yet implemented."
	076 Call 0x38D8FD8
	077 Move S0, [X31+40]
	078 Move S2, [X31+44]
	079 Move S1, [X31+8]
	080 Move S3, [X31+12]
	081 Move X20, [X31+64]
	082 Move X19, [X31+72]
	083 Move X22, [X31+48]
	084 Move X21, [X31+56]
	085 Multiply S4, S9, S0
	086 Multiply S5, S9, S1
	087 Multiply S6, S8, S2
	088 Multiply S7, S8, S3
	089 NotImplemented "Instruction FNMUL not yet implemented."
	090 NotImplemented "Instruction FNMUL not yet implemented."
	091 NotImplemented "Instruction FNMUL not yet implemented."
	092 NotImplemented "Instruction FNMUL not yet implemented."
	093 Move X30, [X31+32]
	094 Move D9, [X31+16]
	095 Move D8, [X31+24]
	096 NotImplemented "Instruction FCMP not yet implemented."
	097 NotImplemented "Instruction FCSEL not yet implemented."
	098 NotImplemented "Instruction FCSEL not yet implemented."
	099 NotImplemented "Instruction FCSEL not yet implemented."
	100 NotImplemented "Instruction FCSEL not yet implemented."
	101 Add X31, X31, 80
	102 Return X0

Method: System.UInt32 NextState()

Disassembly:
	0x038CC910 MOVZ W8, 0x1
	0x038CC914 STRB W8, [X20 + 0x6C9]
	0x038CC918 FMOV S0, 0.5
	0x038CC91C FMUL S10, S10, S0
	0x038CC920 FMUL S9, S9, S0
	0x038CC924 FMUL S8, S8, S0
	0x038CC928 MOV V0.16B, V10.16B

ISIL:
	001 Move W8, [X0]
	002 Xor W9, W8, W8
	003 Xor W9, W9, W9
	004 Xor W9, W9, W9
	005 Move [X0], W9
	006 Move W0, W8
	007 Return X0

Method: System.Void CheckInitState()

Disassembly:
	0x038CC92C MOV V1.16B, V9.16B

ISIL:
	001 Return 

Method: System.Void CheckIndexForHash(System.UInt32 index)

Disassembly:
	0x038CC930 MOV V2.16B, V8.16B
	0x038CC934 MOV X0, X31
	0x038CC938 BL 0x384BD60
	0x038CC93C MOV V11.16B, V0.16B
	0x038CC940 MOV V12.16B, V1.16B
	0x038CC944 MOV V13.16B, V2.16B
	0x038CC948 MOV V0.16B, V10.16B
	0x038CC94C MOV V1.16B, V9.16B
	0x038CC950 MOV V2.16B, V8.16B
	0x038CC954 MOV X0, X31
	0x038CC958 BL 0x384BE4C
	0x038CC95C ADRP X8, 0x852000
	0x038CC960 LDR X8, [X8 + 0x838]
	0x038CC964 FMUL S3, S11, S1
	0x038CC968 FMUL S4, S12, S0
	0x038CC96C FMUL S5, S13, S0
	0x038CC970 LDR X8, [X8]
	0x038CC974 FMUL S6, S0, S1
	0x038CC978 FMUL S7, S12, S13
	0x038CC97C FMUL S16, S11, S13
	0x038CC980 LDR X8, [X8 + 0xB8]
	0x038CC984 FMUL S17, S12, S11

ISIL:
	001 Add W31, W0, 1
	002 Return 
	003 Move [X31-16], X30
	004 Move [X31-8], X19
	005 Move X0, 0x830000
	006 Move X0, [X0+1400]
	007 Call 0x1C17D08
	008 Call 0x1C17F10
	009 Move X19, X0
	010 Move X0, 0x880000
	011 Move X0, [X0+200]
	012 Call 0x1C17D08
	013 Move X1, X0
	014 Move X0, X19
	015 Move X2, X31
	016 Call ArgumentException..ctor, X0, X1
	017 Move X0, 0x880000
	018 Move X0, [X0+208]
	019 Call 0x1C17D08
	020 Move X1, X0
	021 Move X0, X19
	022 Call 0x1C17DEC

Method: System.Void CheckState()

Disassembly:
	0x038CC988 FMUL S3, S2, S3

ISIL:
	001 Return 

Method: System.Void CheckNextIntMax(System.Int32 max)

Disassembly:
	0x038CC98C FMUL S4, S2, S4

ISIL:
	001 Return 

Method: System.Void CheckNextIntMinMax(System.Int32 min, System.Int32 max)

Disassembly:
	0x038CC990 FMUL S5, S1, S5

ISIL:
	001 Return 

Method: System.Void CheckNextUIntMinMax(System.UInt32 min, System.UInt32 max)

Disassembly:
	0x038CC994 FMUL S6, S2, S6

ISIL:
	001 Return 

