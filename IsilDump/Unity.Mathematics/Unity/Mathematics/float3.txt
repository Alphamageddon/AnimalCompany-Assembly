Type: Unity.Mathematics.float3

Method: System.Void .ctor(System.Single x, System.Single y, System.Single z)

Disassembly:
	0x03887880 LDP S1, S0, [X0 + 0x4]
	0x03887884 MOV V2.16B, V0.16B
	0x03887888 RET

ISIL:
	001 Move [X0], S0
	002 Move [X0+8], S1
	003 Move [X0+8], S2
	004 Return 

Method: System.Void .ctor(System.Single x, Unity.Mathematics.float2 yz)

Disassembly:
	0x0388788C LDR V0, [X0 + 0x8]
	0x03887890 LDR V2, [X0]
	0x03887894 MOV V1.16B, V0.16B

ISIL:
	001 Move [X0], S0
	002 Move [X0+8], S1
	003 Move [X0+8], S2
	004 Return 

Method: System.Void .ctor(Unity.Mathematics.float2 xy, System.Single z)

Disassembly:
	0x03887898 RET
	0x0388789C LDP S2, S0, [X0 + 0x4]
	0x038878A0 MOV V1.16B, V0.16B

ISIL:
	001 Move [X0], S0
	002 Move [X0+8], S1
	003 Move [X0+8], S2
	004 Return 

Method: System.Void .ctor(Unity.Mathematics.float3 xyz)

Disassembly:
	0x038878A4 RET
	0x038878A8 LDR V0, [X0 + 0x8]
	0x038878AC MOV V1.16B, V0.16B

ISIL:
	001 Move [X0], S0
	002 Move [X0+8], S1
	003 Move [X0+8], S2
	004 Return 

Method: System.Void .ctor(System.Single v)

Disassembly:
	0x038878B0 MOV V2.16B, V0.16B
	0x038878B4 RET
	0x038878B8 LDR V0, [X0]

ISIL:
	001 Move [X0], S0
	002 Move [X0+8], S0
	003 Move [X0+8], S0
	004 Return 

Method: System.Void .ctor(System.Boolean v)

Disassembly:
	0x038878BC MOV V1.16B, V0.16B
	0x038878C0 RET
	0x038878C4 LDP S0, S1, [X0]
	0x038878C8 RET
	0x038878CC STP S0, S1, [X0]
	0x038878D0 RET
	0x038878D4 LDR V0, [X0]

ISIL:
	001 And W31, W1, 1
	002 Move S0, W31
	003 Move S1, 1
	004 NotImplemented "Instruction FCSEL not yet implemented."
	005 Move [X0], S0
	006 Move [X0+8], S0
	007 Move [X0+8], S0
	008 Return 

Method: System.Void .ctor(Unity.Mathematics.bool3 v)

Disassembly:
	0x038878D8 LDR V1, [X0 + 0x8]
	0x038878DC RET
	0x038878E0 STR S0, [X0]
	0x038878E4 STR S1, [X0 + 0x8]
	0x038878E8 RET
	0x038878EC LDP S1, S0, [X0]
	0x038878F0 RET
	0x038878F4 STP S1, S0, [X0]
	0x038878F8 RET
	0x038878FC LDR V0, [X0 + 0x4]
	0x03887900 MOV V1.16B, V0.16B

ISIL:
	001 And X31, X1, 1
	002 Move S0, 1
	003 Move S1, W31
	004 NotImplemented "Instruction FCSEL not yet implemented."
	005 And X31, X1, 511
	006 NotImplemented "Instruction FCSEL not yet implemented."
	007 And X31, X1, 0x1FFFF
	008 NotImplemented "Instruction FCSEL not yet implemented."
	009 Move [X0], S2
	010 Move [X0+8], S3
	011 Move [X0+8], S0
	012 Return 

Method: System.Void .ctor(System.Int32 v)

Disassembly:
	0x03887904 RET
	0x03887908 LDP S0, S1, [X0 + 0x4]
	0x0388790C RET
	0x03887910 STP S0, S1, [X0 + 0x4]

ISIL:
	001 NotImplemented "Instruction SCVTF not yet implemented."
	002 Move [X0], S0
	003 Move [X0+8], S0
	004 Move [X0+8], S0
	005 Return 

Method: System.Void .ctor(Unity.Mathematics.int3 v)

Disassembly:
	0x03887914 RET
	0x03887918 LDR V0, [X0 + 0x8]
	0x0388791C LDR V1, [X0]
	0x03887920 RET
	0x03887924 STR S0, [X0 + 0x8]
	0x03887928 STR S1, [X0]
	0x0388792C RET

ISIL:
	001 Move X8, X1
	002 ShiftRight X8, 32
	003 And X8, X8, 0x7FFFFFFF
	004 NotImplemented "Instruction SCVTF not yet implemented."
	005 NotImplemented "Instruction SCVTF not yet implemented."
	006 NotImplemented "Instruction SCVTF not yet implemented."
	007 Move [X0], S0
	008 Move [X0+8], S2
	009 Move [X0+8], S1
	010 Return 

Method: System.Void .ctor(System.UInt32 v)

Disassembly:
	0x03887930 LDP S1, S0, [X0 + 0x4]
	0x03887934 RET
	0x03887938 STP S1, S0, [X0 + 0x4]
	0x0388793C RET

ISIL:
	001 NotImplemented "Instruction UCVTF not yet implemented."
	002 Move [X0], S0
	003 Move [X0+8], S0
	004 Move [X0+8], S0
	005 Return 

Method: System.Void .ctor(Unity.Mathematics.uint3 v)

Disassembly:
	0x03887940 LDR V0, [X0 + 0x8]
	0x03887944 MOV V1.16B, V0.16B
	0x03887948 RET
	0x0388794C LDR V0, [X0, W1, SXTW]
	0x03887950 RET
	0x03887954 STR S0, [X0, W1, SXTW]
	0x03887958 RET

ISIL:
	001 Move X8, X1
	002 ShiftRight X8, 32
	003 And X8, X8, 0x7FFFFFFF
	004 NotImplemented "Instruction UCVTF not yet implemented."
	005 NotImplemented "Instruction UCVTF not yet implemented."
	006 NotImplemented "Instruction UCVTF not yet implemented."
	007 Move [X0], S0
	008 Move [X0+8], S2
	009 Move [X0+8], S1
	010 Return 

Method: System.Void .ctor(Unity.Mathematics.half v)

Disassembly:
	0x0388795C LDR V3, [X0]
	0x03887960 FCMP S3, S0
	0x03887964 B.NE 0x3887984
	0x03887968 LDR V0, [X0 + 0x4]
	0x0388796C FCMP S0, S1
	0x03887970 B.NE 0x3887984
	0x03887974 LDR V0, [X0 + 0x8]
	0x03887978 FCMP S0, S2
	0x0388797C CSET W0, EQ
	0x03887980 RET
	0x03887984 MOV W0, W31
	0x03887988 RET
	0x0388798C STP X30, X21, [X31 - 0x20]!
	0x03887990 STP X20, X19, [X31 + 0x10]
	0x03887994 ADRP X21, 0xB5A000
	0x03887998 LDRB W8, [X21 + 0x615]
	0x0388799C MOV X20, X1
	0x038879A0 MOV X19, X0
	0x038879A4 TBNZ X8, 0x0, 0x38879BC
	0x038879A8 ADRP X0, 0x897000
	0x038879AC LDR X0, [X0 + 0x838]
	0x038879B0 BL 0x1C16CF4
	0x038879B4 MOVZ W8, 0x1
	0x038879B8 STRB W8, [X21 + 0x615]
	0x038879BC CBZ X20, 0x38879D8

ISIL:
	001 And W8, W1, 0xFFFF
	002 Move W9, 0xF800000
	003 Move W10, 0xB8800000
	004 Move S0, W10
	005 And W10, W9, W8
	006 Move W11, 0x38000000
	007 NotImplemented "Instruction CMP not yet implemented."
	008 NotImplemented "Instruction CSEL not yet implemented."
	009 And W31, W9, W8
	010 Move W9, W8
	011 ShiftRight W9, 19
	012 And W9, W9, 0x3FFFF
	013 And W9, W9, 0xFFFE000
	014 Add W9, W9, W10
	015 Move W10, 0x38800000
	016 Add W10, W9, W10
	017 Move S1, W10
	018 Add S0, S1, S0
	019 Move W8, W8
	020 ShiftRight W8, 16
	021 And W8, W8, 0x7FFF
	022 Add W9, W9, W11
	023 Move W10, S0
	024 And W8, W8, 0x80000000
	025 NotImplemented "Instruction CSEL not yet implemented."
	026 Or W8, W9, W8
	027 Move [X0], W8
	028 Move [X0+4], W8
	029 Move [X0+8], W8
	030 Return 

Method: System.Void .ctor(Unity.Mathematics.half3 v)

Disassembly:
	0x038879C0 ADRP X8, 0x897000
	0x038879C4 LDR X8, [X8 + 0x838]
	0x038879C8 LDR X9, [X20]
	0x038879CC LDR X8, [X8]
	0x038879D0 CMP X9, X8
	0x038879D4 B.EQ 0x38879E8
	0x038879D8 MOV W0, W31
	0x038879DC LDP X20, X19, [X31 + 0x10]
	0x038879E0 LDP X30, X21, [X31], #0x20
	0x038879E4 RET
	0x038879E8 MOV X0, X20
	0x038879EC BL 0x1C16E08
	0x038879F0 LDR V0, [X0]
	0x038879F4 LDR V1, [X19]
	0x038879F8 FCMP S1, S0
	0x038879FC B.NE 0x38879D8
	0x03887A00 LDR V0, [X0 + 0x4]
	0x03887A04 LDR V1, [X19 + 0x4]
	0x03887A08 FCMP S1, S0
	0x03887A0C B.NE 0x38879D8
	0x03887A10 LDR V0, [X0 + 0x8]
	0x03887A14 LDR V1, [X19 + 0x8]
	0x03887A18 FCMP S1, S0
	0x03887A1C CSET W0, EQ
	0x03887A20 B 0x38879DC
	0x03887A24 LDP W8, W9, [X0]
	0x03887A28 LDR W10, [X0 + 0x8]
	0x03887A2C MOVZ X11, 0x813
	0x03887A30 MOVZ W12, 0x8063
	0x03887A34 MOVK X11, 0x4ABF0000
	0x03887A38 MOVK W12, 0x86060000
	0x03887A3C MOVZ W13, 0xB92D
	0x03887A40 MOVK W13, 0x9B130000
	0x03887A44 MUL X9, X9, X11
	0x03887A48 MUL W10, W10, W12
	0x03887A4C UBFM X9, X9, 0x20, 0x3F
	0x03887A50 MADD W8, W8, W13, W10
	0x03887A54 ADD W8, W8, W9
	0x03887A58 MOVZ W9, 0x13F9
	0x03887A5C MOVK W9, 0xD7550000
	0x03887A60 ADD W0, W8, W9
	0x03887A64 RET
	0x03887A68 SUB X31, X31, 0x40
	0x03887A6C STP X30, X23, [X31 + 0x10]
	0x03887A70 STP X22, X21, [X31 + 0x20]
	0x03887A74 STP X20, X19, [X31 + 0x30]
	0x03887A78 ADRP X20, 0xB5A000
	0x03887A7C ADRP X23, 0x86C000
	0x03887A80 ADRP X22, 0x8C3000
	0x03887A84 LDRB W8, [X20 + 0x616]
	0x03887A88 LDR X23, [X23 + 0xA90]

ISIL:
	001 Move X8, X1
	002 ShiftRight X8, 32
	003 And X8, X8, 0x7FFF
	004 Move W9, 0xF800000
	005 Move X11, X1
	006 ShiftRight X11, 16
	007 And X11, X11, 0x7FFFFFFF
	008 Move S0, W1
	009 Or W12, W31, 0xFFFE000
	010 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	011 Move W11, 0xB8800000
	012 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	013 And W12, W9, W8
	014 Move W10, 0x38000000
	015 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	016 Move S6, W11
	017 Move W11, W8
	018 ShiftRight W11, 19
	019 And W11, W11, 0x3FFFF
	020 NotImplemented "Instruction CMP not yet implemented."
	021 NotImplemented "Instruction MOVI not yet implemented."
	022 And W11, W11, 0xFFFE000
	023 NotImplemented "Instruction CSEL not yet implemented."
	024 Move W13, 0x38800000
	025 And V0, V0, V1
	026 Add W11, W11, W12
	027 NotImplemented "Instruction MOVI not yet implemented."
	028 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	029 Add W12, W11, W13
	030 And V1, V1, V3
	031 Move S3, W12
	032 Add S3, S3, S6
	033 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	034 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	035 And V4, V0, V4
	036 And V0, V0, V6
	037 NotImplemented "Instruction MOVI not yet implemented."
	038 NotImplemented "Instruction INVALID not yet implemented."
	039 And V6, V6, V2
	040 Add S4, S4, S6
	041 Move W12, S3
	042 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	043 Add S3, S4, S3
	044 Add S2, S4, S2
	045 Move W13, W8
	046 ShiftRight W13, 16
	047 And W13, W13, 0x7FFF
	048 And W31, W9, W8
	049 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	050 Add W8, W11, W10
	051 Add V3, V3, V5
	052 And W13, W13, 0x80000000
	053 NotImplemented "Instruction CSEL not yet implemented."
	054 NotImplemented "Instruction INVALID not yet implemented."
	055 Or W8, W8, W13
	056 Or V0, V0, V1
	057 Move [X0], D0
	058 Move [X0+8], W8
	059 Return 

Method: System.Void .ctor(System.Double v)

Disassembly:
	0x03887A8C LDR X22, [X22 + 0xF58]
	0x03887A90 MOV X19, X0
	0x03887A94 TBNZ X8, 0x0, 0x3887AB8
	0x03887A98 ADRP X0, 0x86C000

ISIL:
	001 NotImplemented "Instruction INVALID not yet implemented."
	002 Move [X0], S0
	003 Move [X0+8], S0
	004 Move [X0+8], S0
	005 Return 

Method: System.Void .ctor(Unity.Mathematics.double3 v)

Disassembly:
	0x03887A9C LDR X0, [X0 + 0xA90]
	0x03887AA0 BL 0x1C16CF4
	0x03887AA4 ADRP X0, 0x8C3000
	0x03887AA8 LDR X0, [X0 + 0xF58]
	0x03887AAC BL 0x1C16CF4
	0x03887AB0 MOVZ W8, 0x1

ISIL:
	001 NotImplemented "Instruction INVALID not yet implemented."
	002 NotImplemented "Instruction INVALID not yet implemented."
	003 NotImplemented "Instruction INVALID not yet implemented."
	004 Move [X0], S0
	005 Move [X0+8], S1
	006 Move [X0+8], S2
	007 Return 

Method: Unity.Mathematics.float3 op_Implicit(System.Single v)

Disassembly:
	0x03887AB4 STRB W8, [X20 + 0x616]
	0x03887AB8 LDR V0, [X19]
	0x03887ABC LDR X0, [X23]

ISIL:
	001 Move V1, V0
	002 Move V2, V0
	003 Return X0

Method: Unity.Mathematics.float3 op_Explicit(System.Boolean v)

Disassembly:
	0x03887AC0 ADD X1, X31, 0xC
	0x03887AC4 STR S0, [X31 + 0xC]
	0x03887AC8 BL 0x1C16E04
	0x03887ACC MOV X20, X0
	0x03887AD0 LDR V0, [X19 + 0x4]
	0x03887AD4 LDR X0, [X23]
	0x03887AD8 ADD X1, X31, 0x8

ISIL:
	001 And W31, W0, 1
	002 Move S0, W31
	003 Move S1, 1
	004 NotImplemented "Instruction FCSEL not yet implemented."
	005 Move V1, V0
	006 Move V2, V0
	007 Return X0

Method: Unity.Mathematics.float3 op_Explicit(Unity.Mathematics.bool3 v)

Disassembly:
	0x03887ADC STR S0, [X31 + 0x8]
	0x03887AE0 BL 0x1C16E04
	0x03887AE4 MOV X21, X0
	0x03887AE8 LDR V0, [X19 + 0x8]
	0x03887AEC LDR X0, [X23]
	0x03887AF0 ADD X1, X31, 0x4
	0x03887AF4 STR S0, [X31 + 0x4]
	0x03887AF8 BL 0x1C16E04
	0x03887AFC LDR X8, [X22]

ISIL:
	001 And X31, X0, 1
	002 Move S2, 1
	003 Move S3, W31
	004 NotImplemented "Instruction FCSEL not yet implemented."
	005 And X31, X0, 511
	006 NotImplemented "Instruction FCSEL not yet implemented."
	007 And X31, X0, 0x1FFFF
	008 NotImplemented "Instruction FCSEL not yet implemented."
	009 Return X0

Method: Unity.Mathematics.float3 op_Implicit(System.Int32 v)

Disassembly:
	0x03887B00 MOV X3, X0
	0x03887B04 MOV X1, X20
	0x03887B08 MOV X2, X21
	0x03887B0C MOV X0, X8

ISIL:
	001 NotImplemented "Instruction SCVTF not yet implemented."
	002 Move V1, V0
	003 Move V2, V0
	004 Return X0

Method: Unity.Mathematics.float3 op_Implicit(Unity.Mathematics.int3 v)

Disassembly:
	0x03887B10 MOV X4, X31
	0x03887B14 BL 0x3227C18
	0x03887B18 LDP X20, X19, [X31 + 0x30]
	0x03887B1C LDP X22, X21, [X31 + 0x20]
	0x03887B20 LDP X30, X23, [X31 + 0x10]

ISIL:
	001 Move X8, X0
	002 ShiftRight X8, 32
	003 And X8, X8, 0x7FFFFFFF
	004 NotImplemented "Instruction SCVTF not yet implemented."
	005 NotImplemented "Instruction SCVTF not yet implemented."
	006 NotImplemented "Instruction SCVTF not yet implemented."
	007 Return X0

Method: Unity.Mathematics.float3 op_Implicit(System.UInt32 v)

Disassembly:
	0x03887B24 ADD X31, X31, 0x40
	0x03887B28 RET
	0x03887B2C STR X30, [X31 - 0x40]!
	0x03887B30 STP X24, X23, [X31 + 0x10]

ISIL:
	001 NotImplemented "Instruction UCVTF not yet implemented."
	002 Move V1, V0
	003 Move V2, V0
	004 Return X0

Method: Unity.Mathematics.float3 op_Implicit(Unity.Mathematics.uint3 v)

Disassembly:
	0x03887B34 STP X22, X21, [X31 + 0x20]
	0x03887B38 STP X20, X19, [X31 + 0x30]
	0x03887B3C ADRP X22, 0xB5A000
	0x03887B40 ADRP X24, 0x8C3000
	0x03887B44 LDRB W8, [X22 + 0x617]

ISIL:
	001 Move X8, X0
	002 ShiftRight X8, 32
	003 And X8, X8, 0x7FFFFFFF
	004 NotImplemented "Instruction UCVTF not yet implemented."
	005 NotImplemented "Instruction UCVTF not yet implemented."
	006 NotImplemented "Instruction UCVTF not yet implemented."
	007 Return X0

Method: Unity.Mathematics.float3 op_Implicit(Unity.Mathematics.half v)

Disassembly:
	0x03887B48 LDR X24, [X24 + 0xF58]
	0x03887B4C MOV X19, X2
	0x03887B50 MOV X20, X1
	0x03887B54 MOV X21, X0
	0x03887B58 TBNZ X8, 0x0, 0x3887B70
	0x03887B5C ADRP X0, 0x8C3000
	0x03887B60 LDR X0, [X0 + 0xF58]
	0x03887B64 BL 0x1C16CF4
	0x03887B68 MOVZ W8, 0x1
	0x03887B6C STRB W8, [X22 + 0x617]
	0x03887B70 MOV X0, X21
	0x03887B74 MOV X1, X20
	0x03887B78 MOV X2, X19
	0x03887B7C MOV X3, X31
	0x03887B80 BL 0x338FFB4
	0x03887B84 MOV X22, X0
	0x03887B88 ADD X0, X21, 0x4
	0x03887B8C MOV X1, X20
	0x03887B90 MOV X2, X19
	0x03887B94 MOV X3, X31
	0x03887B98 BL 0x338FFB4
	0x03887B9C MOV X23, X0
	0x03887BA0 ADD X0, X21, 0x8
	0x03887BA4 MOV X1, X20
	0x03887BA8 MOV X2, X19
	0x03887BAC MOV X3, X31

ISIL:
	001 And W8, W0, 0xFFFF
	002 Move W9, 0xF800000
	003 Move W10, 0xB8800000
	004 Move S0, W10
	005 And W10, W9, W8
	006 Move W11, 0x38000000
	007 NotImplemented "Instruction CMP not yet implemented."
	008 NotImplemented "Instruction CSEL not yet implemented."
	009 And W31, W9, W8
	010 Move W9, W8
	011 ShiftRight W9, 19
	012 And W9, W9, 0x3FFFF
	013 And W9, W9, 0xFFFE000
	014 Add W9, W9, W10
	015 Move W10, 0x38800000
	016 Add W10, W9, W10
	017 Move S1, W10
	018 Add S0, S1, S0
	019 Move W8, W8
	020 ShiftRight W8, 16
	021 And W8, W8, 0x7FFF
	022 Add W9, W9, W11
	023 Move W10, S0
	024 NotImplemented "Instruction CSEL not yet implemented."
	025 And W8, W8, 0x80000000
	026 Or W8, W9, W8
	027 Move S0, W8
	028 Move V1, V0
	029 Move V2, V0
	030 Return X0

Method: Unity.Mathematics.float3 op_Implicit(Unity.Mathematics.half3 v)

Disassembly:
	0x03887BB0 BL 0x338FFB4
	0x03887BB4 LDR X8, [X24]
	0x03887BB8 MOV X1, X22
	0x03887BBC MOV X2, X23
	0x03887BC0 LDP X20, X19, [X31 + 0x30]
	0x03887BC4 LDP X22, X21, [X31 + 0x20]
	0x03887BC8 LDP X24, X23, [X31 + 0x10]
	0x03887BCC MOV X3, X0
	0x03887BD0 MOV X0, X8
	0x03887BD4 MOV X4, X31
	0x03887BD8 LDR X30, [X31], #0x40
	0x03887BDC B 0x3227C18
	0x03887BE0 RET
	0x03887BE4 RET
	0x03887BE8 STR D10, [X31 - 0x30]!
	0x03887BEC STP D9, D8, [X31 + 0x10]
	0x03887BF0 STP X30, X19, [X31 + 0x20]
	0x03887BF4 MOV X1, X31
	0x03887BF8 MOV V8.16B, V2.16B
	0x03887BFC MOV V9.16B, V1.16B
	0x03887C00 MOV V10.16B, V0.16B
	0x03887C04 MOV X19, X0
	0x03887C08 BL 0x33BDD8C
	0x03887C0C STP S10, S9, [X19 + 0x10]
	0x03887C10 STR S8, [X19 + 0x18]
	0x03887C14 LDP X30, X19, [X31 + 0x20]
	0x03887C18 LDP D9, D8, [X31 + 0x10]
	0x03887C1C LDR V10, [X31], #0x30
	0x03887C20 RET
	0x03887C24 STP S0, S1, [X0]
	0x03887C28 STP S2, S3, [X0 + 0x8]
	0x03887C2C STP S4, S5, [X0 + 0x10]
	0x03887C30 RET
	0x03887C34 STP S0, S2, [X0]
	0x03887C38 STP S4, S1, [X0 + 0x8]
	0x03887C3C STP S3, S5, [X0 + 0x10]
	0x03887C40 RET
	0x03887C44 UNIMPLEMENTED
	0x03887C48 STR V1, [X0]
	0x03887C4C STP S0, S0, [X0 + 0x10]
	0x03887C50 RET
	0x03887C54 ANDS W31, W1, 0x1
	0x03887C58 FMOV S0, W31
	0x03887C5C FMOV S1, 1
	0x03887C60 FCSEL S0, S1, S0, NE
	0x03887C64 STP S0, S0, [X0]
	0x03887C68 STP S0, S0, [X0 + 0x8]
	0x03887C6C STP S0, S0, [X0 + 0x10]
	0x03887C70 RET
	0x03887C74 ANDS X31, X1, 0x1
	0x03887C78 FMOV S0, 1

ISIL:
	001 Move X8, X0
	002 ShiftRight X8, 32
	003 And X8, X8, 0x7FFF
	004 Move W9, 0xF800000
	005 Move X11, X0
	006 ShiftRight X11, 16
	007 And X11, X11, 0x7FFFFFFF
	008 Move S0, W0
	009 Or W12, W31, 0xFFFE000
	010 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	011 Move W11, 0xB8800000
	012 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	013 And W12, W9, W8
	014 Move W10, 0x38000000
	015 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	016 Move S6, W11
	017 Move W11, W8
	018 ShiftRight W11, 19
	019 And W11, W11, 0x3FFFF
	020 NotImplemented "Instruction CMP not yet implemented."
	021 NotImplemented "Instruction MOVI not yet implemented."
	022 And W11, W11, 0xFFFE000
	023 NotImplemented "Instruction CSEL not yet implemented."
	024 Move W13, 0x38800000
	025 And V0, V0, V1
	026 Add W11, W11, W12
	027 NotImplemented "Instruction MOVI not yet implemented."
	028 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	029 Add W12, W11, W13
	030 And V1, V1, V3
	031 Move S3, W12
	032 Add S3, S3, S6
	033 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	034 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	035 And V4, V0, V4
	036 And V0, V0, V6
	037 NotImplemented "Instruction MOVI not yet implemented."
	038 NotImplemented "Instruction INVALID not yet implemented."
	039 And V6, V6, V2
	040 Add S4, S4, S6
	041 Move W12, S3
	042 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	043 Add S3, S4, S3
	044 Add S2, S4, S2
	045 Move W13, W8
	046 ShiftRight W13, 16
	047 And W13, W13, 0x7FFF
	048 And W31, W9, W8
	049 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	050 Add W8, W11, W10
	051 Add V3, V3, V5
	052 And W13, W13, 0x80000000
	053 NotImplemented "Instruction CSEL not yet implemented."
	054 NotImplemented "Instruction INVALID not yet implemented."
	055 Or V0, V0, V1
	056 Or W8, W8, W13
	057 Move S1, V0.S[1]
	058 Move S2, W8
	059 Return X0

Method: Unity.Mathematics.float3 op_Explicit(System.Double v)

Disassembly:
	0x03887C7C FMOV S1, W31
	0x03887C80 FCSEL S2, S1, S0, EQ
	0x03887C84 ANDS X31, X1, 0x1FF
	0x03887C88 FCSEL S3, S1, S0, EQ

ISIL:
	001 NotImplemented "Instruction INVALID not yet implemented."
	002 Move V1, V0
	003 Move V2, V0
	004 Return X0

Method: Unity.Mathematics.float3 op_Explicit(Unity.Mathematics.double3 v)

Disassembly:
	0x03887C8C ANDS X31, X1, 0x1FFFF
	0x03887C90 FCSEL S4, S1, S0, EQ
	0x03887C94 ANDS X31, X1, 0x1FFFFFF
	0x03887C98 STP S2, S3, [X0]

ISIL:
	001 NotImplemented "Instruction INVALID not yet implemented."
	002 NotImplemented "Instruction INVALID not yet implemented."
	003 NotImplemented "Instruction INVALID not yet implemented."
	004 Return X0

Method: Unity.Mathematics.float3 op_Multiply(Unity.Mathematics.float3 lhs, Unity.Mathematics.float3 rhs)

Disassembly:
	0x03887C9C FCSEL S2, S1, S0, EQ
	0x03887CA0 ANDS X31, X1, 0x1FFFFFFFF
	0x03887CA4 FCSEL S3, S1, S0, EQ
	0x03887CA8 ANDS X31, X1, 0x1FFFFFFFFFF

ISIL:
	001 Multiply S0, S0, S3
	002 Multiply S1, S1, S4
	003 Multiply S2, S2, S5
	004 Return X0

Method: Unity.Mathematics.float3 op_Multiply(Unity.Mathematics.float3 lhs, System.Single rhs)

Disassembly:
	0x03887CAC FCSEL S0, S1, S0, EQ
	0x03887CB0 STP S4, S2, [X0 + 0x8]
	0x03887CB4 STP S3, S0, [X0 + 0x10]
	0x03887CB8 RET

ISIL:
	001 Multiply S0, S0, S3
	002 Multiply S1, S1, S3
	003 Multiply S2, S2, S3
	004 Return X0

Method: Unity.Mathematics.float3 op_Multiply(System.Single lhs, Unity.Mathematics.float3 rhs)

Disassembly:
	0x03887CBC SCVTF S0, W1
	0x03887CC0 UNIMPLEMENTED
	0x03887CC4 STR V1, [X0]
	0x03887CC8 STP S0, S0, [X0 + 0x10]
	0x03887CCC RET

ISIL:
	001 Multiply S4, S1, S0
	002 Multiply S1, S2, S0
	003 Multiply S2, S3, S0
	004 Move V0, V4
	005 Return X0

Method: Unity.Mathematics.float3 op_Addition(Unity.Mathematics.float3 lhs, Unity.Mathematics.float3 rhs)

Disassembly:
	0x03887CD0 LDP S0, S1, [X1]
	0x03887CD4 LDR V2, [X1 + 0x8]
	0x03887CD8 SCVTF S0, S0
	0x03887CDC SCVTF S1, S1

ISIL:
	001 Add S0, S0, S3
	002 Add S1, S1, S4
	003 Add S2, S2, S5
	004 Return X0

Method: Unity.Mathematics.float3 op_Addition(Unity.Mathematics.float3 lhs, System.Single rhs)

Disassembly:
	0x03887CE0 SCVTF S2, S2
	0x03887CE4 STP S0, S1, [X0]
	0x03887CE8 STR S2, [X0 + 0x8]
	0x03887CEC LDP S0, S1, [X1 + 0xC]

ISIL:
	001 Add S0, S0, S3
	002 Add S1, S1, S3
	003 Add S2, S2, S3
	004 Return X0

Method: Unity.Mathematics.float3 op_Addition(System.Single lhs, Unity.Mathematics.float3 rhs)

Disassembly:
	0x03887CF0 LDR V2, [X1 + 0x14]
	0x03887CF4 SCVTF S0, S0
	0x03887CF8 SCVTF S1, S1
	0x03887CFC SCVTF S2, S2
	0x03887D00 STP S0, S1, [X0 + 0xC]

ISIL:
	001 Add S4, S1, S0
	002 Add S1, S2, S0
	003 Add S2, S3, S0
	004 Move V0, V4
	005 Return X0

Method: Unity.Mathematics.float3 op_Subtraction(Unity.Mathematics.float3 lhs, Unity.Mathematics.float3 rhs)

Disassembly:
	0x03887D04 STR S2, [X0 + 0x14]
	0x03887D08 RET
	0x03887D0C UCVTF S0, W1
	0x03887D10 UNIMPLEMENTED

ISIL:
	001 Subtract S0, S0, S3
	002 Subtract S1, S1, S4
	003 Subtract S2, S2, S5
	004 Return X0

Method: Unity.Mathematics.float3 op_Subtraction(Unity.Mathematics.float3 lhs, System.Single rhs)

Disassembly:
	0x03887D14 STR V1, [X0]
	0x03887D18 STP S0, S0, [X0 + 0x10]
	0x03887D1C RET
	0x03887D20 LDP S0, S1, [X1]

ISIL:
	001 Subtract S0, S0, S3
	002 Subtract S1, S1, S3
	003 Subtract S2, S2, S3
	004 Return X0

Method: Unity.Mathematics.float3 op_Subtraction(System.Single lhs, Unity.Mathematics.float3 rhs)

Disassembly:
	0x03887D24 LDR V2, [X1 + 0x8]
	0x03887D28 UCVTF S0, S0
	0x03887D2C UCVTF S1, S1
	0x03887D30 UCVTF S2, S2
	0x03887D34 STP S0, S1, [X0]

ISIL:
	001 Subtract S4, S0, S1
	002 Subtract S1, S0, S2
	003 Subtract S2, S0, S3
	004 Move V0, V4
	005 Return X0

Method: Unity.Mathematics.float3 op_Division(Unity.Mathematics.float3 lhs, Unity.Mathematics.float3 rhs)

Disassembly:
	0x03887D38 STR S2, [X0 + 0x8]
	0x03887D3C LDP S0, S1, [X1 + 0xC]
	0x03887D40 LDR V2, [X1 + 0x14]
	0x03887D44 UCVTF S0, S0

ISIL:
	001 NotImplemented "Instruction FDIV not yet implemented."
	002 NotImplemented "Instruction FDIV not yet implemented."
	003 NotImplemented "Instruction FDIV not yet implemented."
	004 Return X0

Method: Unity.Mathematics.float3 op_Division(Unity.Mathematics.float3 lhs, System.Single rhs)

Disassembly:
	0x03887D48 UCVTF S1, S1
	0x03887D4C UCVTF S2, S2
	0x03887D50 STP S0, S1, [X0 + 0xC]
	0x03887D54 STR S2, [X0 + 0x14]

ISIL:
	001 NotImplemented "Instruction FDIV not yet implemented."
	002 NotImplemented "Instruction FDIV not yet implemented."
	003 NotImplemented "Instruction FDIV not yet implemented."
	004 Return X0

Method: Unity.Mathematics.float3 op_Division(System.Single lhs, Unity.Mathematics.float3 rhs)

Disassembly:
	0x03887D58 RET
	0x00000000 INVALID
	0x03887D60 UNIMPLEMENTED
	0x03887D64 STR V1, [X0]
	0x03887D68 STP S0, S0, [X0 + 0x10]

ISIL:
	001 NotImplemented "Instruction FDIV not yet implemented."
	002 NotImplemented "Instruction FDIV not yet implemented."
	003 NotImplemented "Instruction FDIV not yet implemented."
	004 Move V0, V4
	005 Return X0

Method: Unity.Mathematics.float3 op_Modulus(Unity.Mathematics.float3 lhs, Unity.Mathematics.float3 rhs)

Disassembly:
	0x03887D6C RET
	0x03887D70 LDR V0, [X1]
	0x03887D74 LDR V1, [X1 + 0x10]
	0x03887D78 UNIMPLEMENTED
	0x00000000 INVALID
	0x03887D80 STR D0, [X0]
	0x03887D84 STR S1, [X0 + 0x8]
	0x03887D88 LDUR V0, [X1 + 0x18]
	0x03887D8C LDR V1, [X1 + 0x28]
	0x03887D90 UNIMPLEMENTED
	0x00000000 INVALID
	0x03887D98 STUR D0, [X0 + 0xC]
	0x03887D9C STR S1, [X0 + 0x14]
	0x03887DA0 RET
	0x03887DA4 UNIMPLEMENTED
	0x03887DA8 STR V1, [X8]
	0x03887DAC STP S0, S0, [X8 + 0x10]
	0x03887DB0 RET
	0x03887DB4 ANDS W31, W0, 0x1
	0x03887DB8 FMOV S0, W31
	0x03887DBC FMOV S1, 1
	0x03887DC0 FCSEL S0, S1, S0, NE
	0x03887DC4 STP S0, S0, [X8]
	0x03887DC8 STP S0, S0, [X8 + 0x8]
	0x03887DCC STP S0, S0, [X8 + 0x10]
	0x03887DD0 RET

ISIL:
	001 Move [X31-48], D12
	002 Move [X31+8], D11
	003 Move [X31+16], D10
	004 Move [X31+24], D9
	005 Move [X31+32], D8
	006 Move [X31+40], X30
	007 Move V11, V1
	008 Move V1, V3
	009 Move V8, V5
	010 Move V9, V4
	011 Move V10, V2
	012 Call 0x3EB2BA0
	013 Move V12, V0
	014 Move V0, V11
	015 Move V1, V9
	016 Call 0x3EB2BA0
	017 Move V9, V0
	018 Move V0, V10
	019 Move V1, V8
	020 Call 0x3EB2BA0
	021 Move V1, V9
	022 Move X30, [X31+40]
	023 Move D9, [X31+24]
	024 Move D8, [X31+32]
	025 Move D11, [X31+8]
	026 Move D10, [X31+16]
	027 Move V2, V0
	028 Move V0, V12
	029 Move V12, [X31+48]
	030 Return X0

Method: Unity.Mathematics.float3 op_Modulus(Unity.Mathematics.float3 lhs, System.Single rhs)

Disassembly:
	0x03887DD4 ANDS X31, X0, 0x1
	0x03887DD8 FMOV S0, 1
	0x03887DDC FMOV S1, W31
	0x03887DE0 FCSEL S2, S1, S0, EQ
	0x03887DE4 ANDS X31, X0, 0x1FF
	0x03887DE8 FCSEL S3, S1, S0, EQ
	0x03887DEC ANDS X31, X0, 0x1FFFF
	0x03887DF0 FCSEL S4, S1, S0, EQ
	0x03887DF4 ANDS X31, X0, 0x1FFFFFF
	0x03887DF8 STP S2, S3, [X8]
	0x03887DFC FCSEL S2, S1, S0, EQ
	0x03887E00 ANDS X31, X0, 0x1FFFFFFFF
	0x03887E04 FCSEL S3, S1, S0, EQ
	0x03887E08 ANDS X31, X0, 0x1FFFFFFFFFF
	0x03887E0C FCSEL S0, S1, S0, EQ
	0x03887E10 STP S4, S2, [X8 + 0x8]
	0x03887E14 STP S3, S0, [X8 + 0x10]
	0x03887E18 RET
	0x03887E1C SCVTF S0, W0
	0x03887E20 UNIMPLEMENTED
	0x03887E24 STR V1, [X8]
	0x03887E28 STP S0, S0, [X8 + 0x10]
	0x03887E2C RET

ISIL:
	001 Move [X31-48], D11
	002 Move [X31-40], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move V10, V1
	007 Move V1, V3
	008 Move V8, V3
	009 Move V9, V2
	010 Call 0x3EB2BA0
	011 Move V11, V0
	012 Move V0, V10
	013 Move V1, V8
	014 Call 0x3EB2BA0
	015 Move V10, V0
	016 Move V0, V9
	017 Move V1, V8
	018 Call 0x3EB2BA0
	019 Move X30, [X31+32]
	020 Move D9, [X31+16]
	021 Move D8, [X31+24]
	022 Move V2, V0
	023 Move V0, V11
	024 Move V1, V10
	025 Move D11, [X31+48]
	026 Move D10, [X31+56]
	027 Return X0

Method: Unity.Mathematics.float3 op_Modulus(System.Single lhs, Unity.Mathematics.float3 rhs)

Disassembly:
	0x03887E30 LDP S0, S1, [X0]
	0x03887E34 LDP S2, S3, [X0 + 0x8]
	0x03887E38 LDP S4, S5, [X0 + 0x10]
	0x03887E3C SCVTF S0, S0
	0x03887E40 SCVTF S1, S1
	0x03887E44 SCVTF S2, S2
	0x03887E48 SCVTF S3, S3
	0x03887E4C SCVTF S4, S4
	0x03887E50 SCVTF S5, S5
	0x03887E54 STP S0, S1, [X8]
	0x03887E58 STP S2, S3, [X8 + 0x8]
	0x03887E5C STP S4, S5, [X8 + 0x10]
	0x03887E60 RET
	0x03887E64 UCVTF S0, W0
	0x03887E68 UNIMPLEMENTED
	0x03887E6C STR V1, [X8]
	0x03887E70 STP S0, S0, [X8 + 0x10]
	0x03887E74 RET
	0x03887E78 LDP S0, S1, [X0]
	0x03887E7C LDP S2, S3, [X0 + 0x8]
	0x03887E80 LDP S4, S5, [X0 + 0x10]
	0x03887E84 UCVTF S0, S0

ISIL:
	001 Move [X31-48], D11
	002 Move [X31-40], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move V8, V3
	007 Move V9, V2
	008 Move V10, V0
	009 Call 0x3EB2BA0
	010 Move V11, V0
	011 Move V0, V10
	012 Move V1, V9
	013 Call 0x3EB2BA0
	014 Move V9, V0
	015 Move V0, V10
	016 Move V1, V8
	017 Call 0x3EB2BA0
	018 Move V1, V9
	019 Move X30, [X31+32]
	020 Move D9, [X31+16]
	021 Move D8, [X31+24]
	022 Move V2, V0
	023 Move V0, V11
	024 Move D11, [X31+48]
	025 Move D10, [X31+56]
	026 Return X0

Method: Unity.Mathematics.float3 op_Increment(Unity.Mathematics.float3 val)

Disassembly:
	0x03887E88 UCVTF S1, S1
	0x03887E8C UCVTF S2, S2
	0x03887E90 UCVTF S3, S3
	0x03887E94 UCVTF S4, S4
	0x03887E98 UCVTF S5, S5

ISIL:
	001 Move S3, 1
	002 Add S0, S0, S3
	003 Add S1, S1, S3
	004 Add S2, S2, S3
	005 Return X0

Method: Unity.Mathematics.float3 op_Decrement(Unity.Mathematics.float3 val)

Disassembly:
	0x03887E9C STP S0, S1, [X8]
	0x03887EA0 STP S2, S3, [X8 + 0x8]
	0x03887EA4 STP S4, S5, [X8 + 0x10]
	0x03887EA8 RET
	0x00000000 INVALID

ISIL:
	001 Move S3, -1
	002 Add S0, S0, S3
	003 Add S1, S1, S3
	004 Add S2, S2, S3
	005 Return X0

Method: Unity.Mathematics.bool3 op_LessThan(Unity.Mathematics.float3 lhs, Unity.Mathematics.float3 rhs)

Disassembly:
	0x03887EB0 UNIMPLEMENTED
	0x03887EB4 STR V1, [X8]
	0x03887EB8 STP S0, S0, [X8 + 0x10]
	0x03887EBC RET
	0x03887EC0 LDP V0, V2, [X0]
	0x03887EC4 LDR V1, [X0 + 0x2]
	0x03887EC8 UNIMPLEMENTED
	0x03887ECC UNIMPLEMENTED
	0x03887ED0 UNIMPLEMENTED
	0x03887ED4 STR V0, [X8]

ISIL:
	001 NotImplemented "Instruction FCMP not yet implemented."
	002 NotImplemented "Instruction CSET not yet implemented."
	003 NotImplemented "Instruction FCMP not yet implemented."
	004 NotImplemented "Instruction CSET not yet implemented."
	005 NotImplemented "Instruction FCMP not yet implemented."
	006 Move X9, X9
	007 ShiftRight X9, 56
	008 And X9, X9, 0x7FFFFF
	009 NotImplemented "Instruction CSET not yet implemented."
	010 NotImplemented "Instruction BFM not yet implemented."
	011 Or X0, X9, X10
	012 Return X0

Method: Unity.Mathematics.bool3 op_LessThan(Unity.Mathematics.float3 lhs, System.Single rhs)

Disassembly:
	0x03887ED8 STR D1, [X8 + 0x10]
	0x03887EDC RET
	0x03887EE0 LDR V0, [X0]
	0x03887EE4 LDR V1, [X0 + 0x10]
	0x03887EE8 LDR V2, [X1]
	0x03887EEC LDR V3, [X1 + 0x10]
	0x00000000 INVALID
	0x00000000 INVALID
	0x03887EF8 STR V0, [X8]
	0x03887EFC STR D1, [X8 + 0x10]

ISIL:
	001 NotImplemented "Instruction FCMP not yet implemented."
	002 NotImplemented "Instruction CSET not yet implemented."
	003 NotImplemented "Instruction FCMP not yet implemented."
	004 NotImplemented "Instruction CSET not yet implemented."
	005 NotImplemented "Instruction FCMP not yet implemented."
	006 Move X9, X9
	007 ShiftRight X9, 56
	008 And X9, X9, 0x7FFFFF
	009 NotImplemented "Instruction CSET not yet implemented."
	010 NotImplemented "Instruction BFM not yet implemented."
	011 Or X0, X9, X10
	012 Return X0

Method: Unity.Mathematics.bool3 op_LessThan(System.Single lhs, Unity.Mathematics.float3 rhs)

Disassembly:
	0x03887F00 RET
	0x03887F04 LDR V1, [X0]
	0x03887F08 LDR V2, [X0 + 0x10]
	0x00000000 INVALID
	0x00000000 INVALID
	0x03887F14 STR V1, [X8]
	0x03887F18 STR D0, [X8 + 0x10]
	0x03887F1C RET
	0x03887F20 LDR V1, [X0]
	0x03887F24 LDR V2, [X0 + 0x10]

ISIL:
	001 NotImplemented "Instruction FCMP not yet implemented."
	002 NotImplemented "Instruction CSET not yet implemented."
	003 NotImplemented "Instruction FCMP not yet implemented."
	004 NotImplemented "Instruction CSET not yet implemented."
	005 NotImplemented "Instruction FCMP not yet implemented."
	006 Move X9, X9
	007 ShiftRight X9, 56
	008 And X9, X9, 0x7FFFFF
	009 NotImplemented "Instruction CSET not yet implemented."
	010 NotImplemented "Instruction BFM not yet implemented."
	011 Or X0, X9, X10
	012 Return X0

Method: Unity.Mathematics.bool3 op_LessThanOrEqual(Unity.Mathematics.float3 lhs, Unity.Mathematics.float3 rhs)

Disassembly:
	0x00000000 INVALID
	0x00000000 INVALID
	0x03887F30 STR V1, [X8]
	0x03887F34 STR D0, [X8 + 0x10]
	0x03887F38 RET
	0x03887F3C LDR V0, [X0]
	0x03887F40 LDR V1, [X0 + 0x10]
	0x03887F44 LDR V2, [X1]
	0x03887F48 LDR V3, [X1 + 0x10]
	0x03887F4C FADD V0.4S, V0.4S, V2.4S

ISIL:
	001 NotImplemented "Instruction FCMP not yet implemented."
	002 NotImplemented "Instruction CSET not yet implemented."
	003 NotImplemented "Instruction FCMP not yet implemented."
	004 NotImplemented "Instruction CSET not yet implemented."
	005 NotImplemented "Instruction FCMP not yet implemented."
	006 Move X9, X9
	007 ShiftRight X9, 56
	008 And X9, X9, 0x7FFFFF
	009 NotImplemented "Instruction CSET not yet implemented."
	010 NotImplemented "Instruction BFM not yet implemented."
	011 Or X0, X9, X10
	012 Return X0

Method: Unity.Mathematics.bool3 op_LessThanOrEqual(Unity.Mathematics.float3 lhs, System.Single rhs)

Disassembly:
	0x03887F50 FADD V1.2S, V1.2S, V3.2S
	0x03887F54 STR V0, [X8]
	0x03887F58 STR D1, [X8 + 0x10]
	0x03887F5C RET
	0x03887F60 LDR V1, [X0]
	0x03887F64 LDR V2, [X0 + 0x10]
	0x03887F68 UNIMPLEMENTED
	0x03887F6C UNIMPLEMENTED
	0x03887F70 FADD V1.4S, V1.4S, V3.4S
	0x03887F74 FADD V0.2S, V2.2S, V0.2S

ISIL:
	001 NotImplemented "Instruction FCMP not yet implemented."
	002 NotImplemented "Instruction CSET not yet implemented."
	003 NotImplemented "Instruction FCMP not yet implemented."
	004 NotImplemented "Instruction CSET not yet implemented."
	005 NotImplemented "Instruction FCMP not yet implemented."
	006 Move X9, X9
	007 ShiftRight X9, 56
	008 And X9, X9, 0x7FFFFF
	009 NotImplemented "Instruction CSET not yet implemented."
	010 NotImplemented "Instruction BFM not yet implemented."
	011 Or X0, X9, X10
	012 Return X0

Method: Unity.Mathematics.bool3 op_LessThanOrEqual(System.Single lhs, Unity.Mathematics.float3 rhs)

Disassembly:
	0x03887F78 STR V1, [X8]
	0x03887F7C STR D0, [X8 + 0x10]
	0x03887F80 RET
	0x03887F84 LDR V1, [X0]
	0x03887F88 LDR V2, [X0 + 0x10]
	0x03887F8C UNIMPLEMENTED
	0x03887F90 UNIMPLEMENTED
	0x03887F94 FADD V1.4S, V1.4S, V3.4S
	0x03887F98 FADD V0.2S, V2.2S, V0.2S
	0x03887F9C STR V1, [X8]

ISIL:
	001 NotImplemented "Instruction FCMP not yet implemented."
	002 NotImplemented "Instruction CSET not yet implemented."
	003 NotImplemented "Instruction FCMP not yet implemented."
	004 NotImplemented "Instruction CSET not yet implemented."
	005 NotImplemented "Instruction FCMP not yet implemented."
	006 Move X9, X9
	007 ShiftRight X9, 56
	008 And X9, X9, 0x7FFFFF
	009 NotImplemented "Instruction CSET not yet implemented."
	010 NotImplemented "Instruction BFM not yet implemented."
	011 Or X0, X9, X10
	012 Return X0

Method: Unity.Mathematics.bool3 op_GreaterThan(Unity.Mathematics.float3 lhs, Unity.Mathematics.float3 rhs)

Disassembly:
	0x03887FA0 STR D0, [X8 + 0x10]
	0x03887FA4 RET
	0x03887FA8 LDR V0, [X0]
	0x03887FAC LDR V1, [X0 + 0x10]
	0x03887FB0 LDR V2, [X1]
	0x03887FB4 LDR V3, [X1 + 0x10]
	0x03887FB8 FSUB V0.4S, V0.4S, V2.4S
	0x03887FBC FSUB V1.2S, V1.2S, V3.2S
	0x03887FC0 STR V0, [X8]
	0x03887FC4 STR D1, [X8 + 0x10]

ISIL:
	001 NotImplemented "Instruction FCMP not yet implemented."
	002 NotImplemented "Instruction CSET not yet implemented."
	003 NotImplemented "Instruction FCMP not yet implemented."
	004 NotImplemented "Instruction CSET not yet implemented."
	005 NotImplemented "Instruction FCMP not yet implemented."
	006 Move X9, X9
	007 ShiftRight X9, 56
	008 And X9, X9, 0x7FFFFF
	009 NotImplemented "Instruction CSET not yet implemented."
	010 NotImplemented "Instruction BFM not yet implemented."
	011 Or X0, X9, X10
	012 Return X0

Method: Unity.Mathematics.bool3 op_GreaterThan(Unity.Mathematics.float3 lhs, System.Single rhs)

Disassembly:
	0x03887FC8 RET
	0x03887FCC LDR V1, [X0]
	0x03887FD0 LDR V2, [X0 + 0x10]
	0x03887FD4 UNIMPLEMENTED
	0x03887FD8 UNIMPLEMENTED
	0x03887FDC FSUB V1.4S, V1.4S, V3.4S
	0x03887FE0 FSUB V0.2S, V2.2S, V0.2S
	0x03887FE4 STR V1, [X8]
	0x03887FE8 STR D0, [X8 + 0x10]
	0x03887FEC RET

ISIL:
	001 NotImplemented "Instruction FCMP not yet implemented."
	002 NotImplemented "Instruction CSET not yet implemented."
	003 NotImplemented "Instruction FCMP not yet implemented."
	004 NotImplemented "Instruction CSET not yet implemented."
	005 NotImplemented "Instruction FCMP not yet implemented."
	006 Move X9, X9
	007 ShiftRight X9, 56
	008 And X9, X9, 0x7FFFFF
	009 NotImplemented "Instruction CSET not yet implemented."
	010 NotImplemented "Instruction BFM not yet implemented."
	011 Or X0, X9, X10
	012 Return X0

Method: Unity.Mathematics.bool3 op_GreaterThan(System.Single lhs, Unity.Mathematics.float3 rhs)

Disassembly:
	0x03887FF0 LDR V1, [X0]
	0x03887FF4 LDR V2, [X0 + 0x10]
	0x03887FF8 UNIMPLEMENTED
	0x03887FFC UNIMPLEMENTED
	0x03888000 FSUB V1.4S, V3.4S, V1.4S
	0x03888004 FSUB V0.2S, V0.2S, V2.2S
	0x03888008 STR V1, [X8]
	0x0388800C STR D0, [X8 + 0x10]
	0x03888010 RET
	0x03888014 LDR V0, [X0]

ISIL:
	001 NotImplemented "Instruction FCMP not yet implemented."
	002 NotImplemented "Instruction CSET not yet implemented."
	003 NotImplemented "Instruction FCMP not yet implemented."
	004 NotImplemented "Instruction CSET not yet implemented."
	005 NotImplemented "Instruction FCMP not yet implemented."
	006 Move X9, X9
	007 ShiftRight X9, 56
	008 And X9, X9, 0x7FFFFF
	009 NotImplemented "Instruction CSET not yet implemented."
	010 NotImplemented "Instruction BFM not yet implemented."
	011 Or X0, X9, X10
	012 Return X0

Method: Unity.Mathematics.bool3 op_GreaterThanOrEqual(Unity.Mathematics.float3 lhs, Unity.Mathematics.float3 rhs)

Disassembly:
	0x03888018 LDR V1, [X0 + 0x10]
	0x0388801C LDR V2, [X1]
	0x03888020 LDR V3, [X1 + 0x10]
	0x00000000 INVALID
	0x00000000 INVALID
	0x0388802C STR V0, [X8]
	0x03888030 STR D1, [X8 + 0x10]
	0x03888034 RET
	0x03888038 LDR V1, [X0]
	0x0388803C LDR V2, [X0 + 0x10]

ISIL:
	001 NotImplemented "Instruction FCMP not yet implemented."
	002 NotImplemented "Instruction CSET not yet implemented."
	003 NotImplemented "Instruction FCMP not yet implemented."
	004 NotImplemented "Instruction CSET not yet implemented."
	005 NotImplemented "Instruction FCMP not yet implemented."
	006 Move X9, X9
	007 ShiftRight X9, 56
	008 And X9, X9, 0x7FFFFF
	009 NotImplemented "Instruction CSET not yet implemented."
	010 NotImplemented "Instruction BFM not yet implemented."
	011 Or X0, X9, X10
	012 Return X0

Method: Unity.Mathematics.bool3 op_GreaterThanOrEqual(Unity.Mathematics.float3 lhs, System.Single rhs)

Disassembly:
	0x03888040 UNIMPLEMENTED
	0x03888044 UNIMPLEMENTED
	0x00000000 INVALID
	0x00000000 INVALID
	0x03888050 STR V1, [X8]
	0x03888054 STR D0, [X8 + 0x10]
	0x03888058 RET
	0x0388805C LDR V1, [X0]
	0x03888060 LDR V2, [X0 + 0x10]
	0x03888064 UNIMPLEMENTED

ISIL:
	001 NotImplemented "Instruction FCMP not yet implemented."
	002 NotImplemented "Instruction CSET not yet implemented."
	003 NotImplemented "Instruction FCMP not yet implemented."
	004 NotImplemented "Instruction CSET not yet implemented."
	005 NotImplemented "Instruction FCMP not yet implemented."
	006 Move X9, X9
	007 ShiftRight X9, 56
	008 And X9, X9, 0x7FFFFF
	009 NotImplemented "Instruction CSET not yet implemented."
	010 NotImplemented "Instruction BFM not yet implemented."
	011 Or X0, X9, X10
	012 Return X0

Method: Unity.Mathematics.bool3 op_GreaterThanOrEqual(System.Single lhs, Unity.Mathematics.float3 rhs)

Disassembly:
	0x03888068 UNIMPLEMENTED
	0x00000000 INVALID
	0x00000000 INVALID
	0x03888074 STR V1, [X8]
	0x03888078 STR D0, [X8 + 0x10]
	0x0388807C RET
	0x03888080 STP D15, D14, [X31 - 0x60]!
	0x03888084 STP D13, D12, [X31 + 0x10]
	0x03888088 STP D11, D10, [X31 + 0x20]
	0x0388808C STP D9, D8, [X31 + 0x30]

ISIL:
	001 NotImplemented "Instruction FCMP not yet implemented."
	002 NotImplemented "Instruction CSET not yet implemented."
	003 NotImplemented "Instruction FCMP not yet implemented."
	004 NotImplemented "Instruction CSET not yet implemented."
	005 NotImplemented "Instruction FCMP not yet implemented."
	006 Move X9, X9
	007 ShiftRight X9, 56
	008 And X9, X9, 0x7FFFFF
	009 NotImplemented "Instruction CSET not yet implemented."
	010 NotImplemented "Instruction BFM not yet implemented."
	011 Or X0, X9, X10
	012 Return X0

Method: Unity.Mathematics.float3 op_UnaryNegation(Unity.Mathematics.float3 val)

Disassembly:
	0x03888090 STP X30, X21, [X31 + 0x40]
	0x03888094 STP X20, X19, [X31 + 0x50]
	0x03888098 LDP S0, S8, [X0]
	0x0388809C LDP S1, S10, [X1]

ISIL:
	001 NotImplemented "Instruction FNEG not yet implemented."
	002 NotImplemented "Instruction FNEG not yet implemented."
	003 NotImplemented "Instruction FNEG not yet implemented."
	004 Return X0

Method: Unity.Mathematics.float3 op_UnaryPlus(Unity.Mathematics.float3 val)

Disassembly:
	0x038880A0 LDR V9, [X0 + 0x8]

ISIL:
	001 Return X0

Method: Unity.Mathematics.bool3 op_Equality(Unity.Mathematics.float3 lhs, Unity.Mathematics.float3 rhs)

Disassembly:
	0x038880A4 LDR V11, [X1 + 0x8]
	0x038880A8 MOV X19, X1
	0x038880AC MOV X20, X0
	0x038880B0 MOV X21, X8
	0x038880B4 BL 0x3EB1BA0
	0x038880B8 MOV V12.16B, V0.16B
	0x038880BC MOV V0.16B, V8.16B
	0x038880C0 MOV V1.16B, V10.16B
	0x038880C4 BL 0x3EB1BA0
	0x038880C8 MOV V8.16B, V0.16B

ISIL:
	001 NotImplemented "Instruction FCMP not yet implemented."
	002 NotImplemented "Instruction CSET not yet implemented."
	003 NotImplemented "Instruction FCMP not yet implemented."
	004 NotImplemented "Instruction CSET not yet implemented."
	005 NotImplemented "Instruction FCMP not yet implemented."
	006 Move X9, X9
	007 ShiftRight X9, 56
	008 And X9, X9, 0x7FFFFF
	009 NotImplemented "Instruction CSET not yet implemented."
	010 NotImplemented "Instruction BFM not yet implemented."
	011 Or X0, X9, X10
	012 Return X0

Method: Unity.Mathematics.bool3 op_Equality(Unity.Mathematics.float3 lhs, System.Single rhs)

Disassembly:
	0x038880CC MOV V0.16B, V9.16B
	0x038880D0 MOV V1.16B, V11.16B
	0x038880D4 BL 0x3EB1BA0
	0x038880D8 LDP S2, S9, [X20 + 0xC]
	0x038880DC LDP S1, S11, [X19 + 0xC]
	0x038880E0 LDR V10, [X20 + 0x14]
	0x038880E4 LDR V13, [X19 + 0x14]
	0x038880E8 MOV V14.16B, V0.16B
	0x038880EC MOV V0.16B, V2.16B
	0x038880F0 BL 0x3EB1BA0

ISIL:
	001 NotImplemented "Instruction FCMP not yet implemented."
	002 NotImplemented "Instruction CSET not yet implemented."
	003 NotImplemented "Instruction FCMP not yet implemented."
	004 NotImplemented "Instruction CSET not yet implemented."
	005 NotImplemented "Instruction FCMP not yet implemented."
	006 Move X9, X9
	007 ShiftRight X9, 56
	008 And X9, X9, 0x7FFFFF
	009 NotImplemented "Instruction CSET not yet implemented."
	010 NotImplemented "Instruction BFM not yet implemented."
	011 Or X0, X9, X10
	012 Return X0

Method: Unity.Mathematics.bool3 op_Equality(System.Single lhs, Unity.Mathematics.float3 rhs)

Disassembly:
	0x038880F4 MOV V15.16B, V0.16B
	0x038880F8 MOV V0.16B, V9.16B
	0x038880FC MOV V1.16B, V11.16B
	0x03888100 BL 0x3EB1BA0
	0x03888104 MOV V9.16B, V0.16B
	0x03888108 MOV V0.16B, V10.16B
	0x0388810C MOV V1.16B, V13.16B
	0x03888110 BL 0x3EB1BA0
	0x03888114 STP S12, S8, [X21]
	0x03888118 STP S14, S15, [X21 + 0x8]

ISIL:
	001 NotImplemented "Instruction FCMP not yet implemented."
	002 NotImplemented "Instruction CSET not yet implemented."
	003 NotImplemented "Instruction FCMP not yet implemented."
	004 NotImplemented "Instruction CSET not yet implemented."
	005 NotImplemented "Instruction FCMP not yet implemented."
	006 Move X9, X9
	007 ShiftRight X9, 56
	008 And X9, X9, 0x7FFFFF
	009 NotImplemented "Instruction CSET not yet implemented."
	010 NotImplemented "Instruction BFM not yet implemented."
	011 Or X0, X9, X10
	012 Return X0

Method: Unity.Mathematics.bool3 op_Inequality(Unity.Mathematics.float3 lhs, Unity.Mathematics.float3 rhs)

Disassembly:
	0x0388811C STP S9, S0, [X21 + 0x10]
	0x03888120 LDP X20, X19, [X31 + 0x50]
	0x03888124 LDP X30, X21, [X31 + 0x40]
	0x03888128 LDP D9, D8, [X31 + 0x30]
	0x0388812C LDP D11, D10, [X31 + 0x20]
	0x03888130 LDP D13, D12, [X31 + 0x10]
	0x03888134 LDP D15, D14, [X31], #0x60
	0x03888138 RET
	0x0388813C STR D14, [X31 - 0x50]!
	0x03888140 STP D13, D12, [X31 + 0x8]

ISIL:
	001 NotImplemented "Instruction FCMP not yet implemented."
	002 NotImplemented "Instruction CSET not yet implemented."
	003 NotImplemented "Instruction FCMP not yet implemented."
	004 NotImplemented "Instruction CSET not yet implemented."
	005 NotImplemented "Instruction FCMP not yet implemented."
	006 Move X9, X9
	007 ShiftRight X9, 56
	008 And X9, X9, 0x7FFFFF
	009 NotImplemented "Instruction CSET not yet implemented."
	010 NotImplemented "Instruction BFM not yet implemented."
	011 Or X0, X9, X10
	012 Return X0

Method: Unity.Mathematics.bool3 op_Inequality(Unity.Mathematics.float3 lhs, System.Single rhs)

Disassembly:
	0x03888144 STP D11, D10, [X31 + 0x18]
	0x03888148 STP D9, D8, [X31 + 0x28]
	0x0388814C STR X30, [X31 + 0x38]
	0x03888150 STP X20, X19, [X31 + 0x40]
	0x03888154 MOV V8.16B, V0.16B
	0x03888158 LDP S0, S9, [X0]
	0x0388815C LDR V10, [X0 + 0x8]
	0x03888160 MOV V1.16B, V8.16B
	0x03888164 MOV X19, X0
	0x03888168 MOV X20, X8

ISIL:
	001 NotImplemented "Instruction FCMP not yet implemented."
	002 NotImplemented "Instruction CSET not yet implemented."
	003 NotImplemented "Instruction FCMP not yet implemented."
	004 NotImplemented "Instruction CSET not yet implemented."
	005 NotImplemented "Instruction FCMP not yet implemented."
	006 Move X9, X9
	007 ShiftRight X9, 56
	008 And X9, X9, 0x7FFFFF
	009 NotImplemented "Instruction CSET not yet implemented."
	010 NotImplemented "Instruction BFM not yet implemented."
	011 Or X0, X9, X10
	012 Return X0

Method: Unity.Mathematics.bool3 op_Inequality(System.Single lhs, Unity.Mathematics.float3 rhs)

Disassembly:
	0x0388816C BL 0x3EB1BA0
	0x03888170 MOV V11.16B, V0.16B
	0x03888174 MOV V0.16B, V9.16B
	0x03888178 MOV V1.16B, V8.16B
	0x0388817C BL 0x3EB1BA0
	0x03888180 MOV V9.16B, V0.16B
	0x03888184 MOV V0.16B, V10.16B
	0x03888188 MOV V1.16B, V8.16B
	0x0388818C BL 0x3EB1BA0
	0x03888190 LDP S1, S10, [X19 + 0xC]

ISIL:
	001 NotImplemented "Instruction FCMP not yet implemented."
	002 NotImplemented "Instruction CSET not yet implemented."
	003 NotImplemented "Instruction FCMP not yet implemented."
	004 NotImplemented "Instruction CSET not yet implemented."
	005 NotImplemented "Instruction FCMP not yet implemented."
	006 Move X9, X9
	007 ShiftRight X9, 56
	008 And X9, X9, 0x7FFFFF
	009 NotImplemented "Instruction CSET not yet implemented."
	010 NotImplemented "Instruction BFM not yet implemented."
	011 Or X0, X9, X10
	012 Return X0

Method: Unity.Mathematics.float4 get_xxxx()

Disassembly:
	0x03888194 LDR V12, [X19 + 0x14]
	0x03888198 MOV V13.16B, V0.16B
	0x0388819C MOV V0.16B, V1.16B
	0x038881A0 MOV V1.16B, V8.16B
	0x038881A4 BL 0x3EB1BA0

ISIL:
	001 Move V0, [X0]
	002 Move V1, V0
	003 Move V2, V0
	004 Move V3, V0
	005 Return X0

Method: Unity.Mathematics.float4 get_xxxy()

Disassembly:
	0x038881A8 MOV V14.16B, V0.16B
	0x038881AC MOV V0.16B, V10.16B
	0x038881B0 MOV V1.16B, V8.16B
	0x038881B4 BL 0x3EB1BA0

ISIL:
	001 Move S0, [X0]
	002 Move S3, [X0+4]
	003 Move V1, V0
	004 Move V2, V0
	005 Return X0

Method: Unity.Mathematics.float4 get_xxxz()

Disassembly:
	0x038881B8 MOV V10.16B, V0.16B
	0x038881BC MOV V0.16B, V12.16B
	0x038881C0 MOV V1.16B, V8.16B
	0x038881C4 BL 0x3EB1BA0
	0x038881C8 STP S11, S9, [X20]

ISIL:
	001 Move V0, [X0]
	002 Move V3, [X0+8]
	003 Move V1, V0
	004 Move V2, V0
	005 Return X0

Method: Unity.Mathematics.float4 get_xxyx()

Disassembly:
	0x038881CC STP S13, S14, [X20 + 0x8]
	0x038881D0 STP S10, S0, [X20 + 0x10]
	0x038881D4 LDP X20, X19, [X31 + 0x40]
	0x038881D8 LDR X30, [X31 + 0x38]
	0x038881DC LDP D9, D8, [X31 + 0x28]

ISIL:
	001 Move V0, [X0]
	002 Move S2, V0.S[1]
	003 Move V1, V0
	004 Move V3, V0
	005 Return X0

Method: Unity.Mathematics.float4 get_xxyy()

Disassembly:
	0x038881E0 LDP D11, D10, [X31 + 0x18]
	0x038881E4 LDP D13, D12, [X31 + 0x8]
	0x038881E8 LDR V14, [X31], #0x50
	0x038881EC RET
	0x038881F0 STR D14, [X31 - 0x50]!

ISIL:
	001 Move V0, [X0]
	002 Move S2, V0.S[1]
	003 Move V1, V0
	004 Move V3, V2
	005 Return X0

Method: Unity.Mathematics.float4 get_xxyz()

Disassembly:
	0x038881F4 STP D13, D12, [X31 + 0x8]
	0x038881F8 STP D11, D10, [X31 + 0x18]
	0x038881FC STP D9, D8, [X31 + 0x28]
	0x03888200 STR X30, [X31 + 0x38]

ISIL:
	001 Move S0, [X0]
	002 Move S2, [X0+4]
	003 Move V3, [X0+8]
	004 Move V1, V0
	005 Return X0

Method: Unity.Mathematics.float4 get_xxzx()

Disassembly:
	0x03888204 STP X20, X19, [X31 + 0x40]
	0x03888208 LDP S1, S9, [X0]
	0x0388820C LDR V10, [X0 + 0x8]
	0x03888210 MOV X19, X0
	0x03888214 MOV V8.16B, V0.16B

ISIL:
	001 Move V0, [X0]
	002 Move V2, [X0+8]
	003 Move V1, V0
	004 Move V3, V0
	005 Return X0

Method: Unity.Mathematics.float4 get_xxzy()

Disassembly:
	0x03888218 MOV X20, X8
	0x0388821C BL 0x3EB1BA0
	0x03888220 MOV V11.16B, V0.16B
	0x03888224 MOV V0.16B, V8.16B

ISIL:
	001 Move V0, [X0]
	002 Move S3, [X0+4]
	003 Move S2, [X0+8]
	004 Move V1, V0
	005 Return X0

Method: Unity.Mathematics.float4 get_xxzz()

Disassembly:
	0x03888228 MOV V1.16B, V9.16B
	0x0388822C BL 0x3EB1BA0
	0x03888230 MOV V9.16B, V0.16B
	0x03888234 MOV V0.16B, V8.16B
	0x03888238 MOV V1.16B, V10.16B

ISIL:
	001 Move V0, [X0]
	002 Move V2, [X0+8]
	003 Move V1, V0
	004 Move V3, V2
	005 Return X0

Method: Unity.Mathematics.float4 get_xyxx()

Disassembly:
	0x0388823C BL 0x3EB1BA0
	0x03888240 LDP S1, S10, [X19 + 0xC]
	0x03888244 LDR V12, [X19 + 0x14]
	0x03888248 MOV V13.16B, V0.16B

ISIL:
	001 Move S0, [X0]
	002 Move S1, [X0+4]
	003 Move V2, V0
	004 Move V3, V0
	005 Return X0

Method: Unity.Mathematics.float4 get_xyxy()

Disassembly:
	0x0388824C MOV V0.16B, V8.16B
	0x03888250 BL 0x3EB1BA0
	0x03888254 MOV V14.16B, V0.16B
	0x03888258 MOV V0.16B, V8.16B

ISIL:
	001 Move S0, [X0]
	002 Move S1, [X0+4]
	003 Move V2, V0
	004 Move V3, V1
	005 Return X0

Method: Unity.Mathematics.float4 get_xyxz()

Disassembly:
	0x0388825C MOV V1.16B, V10.16B
	0x03888260 BL 0x3EB1BA0
	0x03888264 MOV V10.16B, V0.16B
	0x03888268 MOV V0.16B, V8.16B

ISIL:
	001 Move S0, [X0]
	002 Move S1, [X0+4]
	003 Move V3, [X0+8]
	004 Move V2, V0
	005 Return X0

Method: Unity.Mathematics.float4 get_xyyx()

Disassembly:
	0x0388826C MOV V1.16B, V12.16B
	0x03888270 BL 0x3EB1BA0
	0x03888274 STP S11, S9, [X20]
	0x03888278 STP S13, S14, [X20 + 0x8]

ISIL:
	001 Move S0, [X0]
	002 Move S1, [X0+4]
	003 Move V2, V1
	004 Move V3, V0
	005 Return X0

Method: Unity.Mathematics.float4 get_xyyy()

Disassembly:
	0x0388827C STP S10, S0, [X20 + 0x10]
	0x03888280 LDP X20, X19, [X31 + 0x40]
	0x03888284 LDR X30, [X31 + 0x38]
	0x03888288 LDP D9, D8, [X31 + 0x28]

ISIL:
	001 Move S0, [X0]
	002 Move S1, [X0+4]
	003 Move V2, V1
	004 Move V3, V1
	005 Return X0

Method: Unity.Mathematics.float4 get_xyyz()

Disassembly:
	0x0388828C LDP D11, D10, [X31 + 0x18]
	0x03888290 LDP D13, D12, [X31 + 0x8]
	0x03888294 LDR V14, [X31], #0x50
	0x03888298 RET

ISIL:
	001 Move S0, [X0]
	002 Move S1, [X0+4]
	003 Move V3, [X0+8]
	004 Move V2, V1
	005 Return X0

Method: Unity.Mathematics.float4 get_xyzx()

Disassembly:
	0x0388829C LDR V0, [X0]
	0x038882A0 LDR V1, [X0 + 0x10]
	0x038882A4 FMOV V2.4S, 0x0
	0x038882A8 FMOV V3.2S, 0x0

ISIL:
	001 Move S0, [X0]
	002 Move S1, [X0+4]
	003 Move V2, [X0+8]
	004 Move V3, V0
	005 Return X0

Method: Unity.Mathematics.float4 get_xyzy()

Disassembly:
	0x038882AC FADD V0.4S, V0.4S, V2.4S
	0x038882B0 FADD V1.2S, V1.2S, V3.2S
	0x038882B4 STR V0, [X0]
	0x038882B8 STR D1, [X0 + 0x10]

ISIL:
	001 Move S0, [X0]
	002 Move S1, [X0+4]
	003 Move V2, [X0+8]
	004 Move V3, V1
	005 Return X0

Method: Unity.Mathematics.float4 get_xyzz()

Disassembly:
	0x038882BC STR V0, [X8]
	0x038882C0 STR D1, [X8 + 0x10]
	0x038882C4 RET
	0x038882C8 LDR V0, [X0]

ISIL:
	001 Move V2, [X0+8]
	002 Move S0, [X0]
	003 Move S1, [X0+4]
	004 Move V3, V2
	005 Return X0

Method: Unity.Mathematics.float4 get_xzxx()

Disassembly:
	0x038882CC LDR V1, [X0 + 0x10]
	0x038882D0 FMOV V2.4S, 0x0
	0x038882D4 FMOV V3.2S, 0x0
	0x038882D8 FADD V0.4S, V0.4S, V2.4S
	0x038882DC FADD V1.2S, V1.2S, V3.2S

ISIL:
	001 Move V0, [X0]
	002 Move V1, [X0+8]
	003 Move V2, V0
	004 Move V3, V0
	005 Return X0

Method: Unity.Mathematics.float4 get_xzxy()

Disassembly:
	0x038882E0 STR V0, [X0]
	0x038882E4 STR D1, [X0 + 0x10]
	0x038882E8 STR V0, [X8]
	0x038882EC STR D1, [X8 + 0x10]

ISIL:
	001 Move V0, [X0]
	002 Move S3, [X0+4]
	003 Move S1, [X0+8]
	004 Move V2, V0
	005 Return X0

Method: Unity.Mathematics.float4 get_xzxz()

Disassembly:
	0x038882F0 RET
	0x038882F4 LDP S2, S0, [X0]
	0x038882F8 LDP S1, S3, [X1 + 0x4]
	0x038882FC LDR V4, [X1]
	0x03888300 FCMP S0, S1

ISIL:
	001 Move V0, [X0]
	002 Move V1, [X0+8]
	003 Move V2, V0
	004 Move V3, V1
	005 Return X0

Method: Unity.Mathematics.float4 get_xzyx()

Disassembly:
	0x03888304 LDP S0, S1, [X0 + 0x8]
	0x03888308 CSET W8, MI
	0x0388830C FCMP S0, S3
	0x03888310 LDP S5, S0, [X1 + 0xC]

ISIL:
	001 Move V0, [X0]
	002 Move S2, [X0+4]
	003 Move S1, [X0+8]
	004 Move V3, V0
	005 Return X0

Method: Unity.Mathematics.float4 get_xzyy()

Disassembly:
	0x03888314 CSET W9, MI
	0x03888318 FCMP S2, S4
	0x0388831C LDP S2, S3, [X0 + 0x10]
	0x03888320 LDR V4, [X1 + 0x14]

ISIL:
	001 Move S2, [X0+4]
	002 Move S1, [X0+8]
	003 Move V0, [X0]
	004 Move V3, V2
	005 Return X0

Method: Unity.Mathematics.float4 get_xzyz()

Disassembly:
	0x03888324 CSET W10, MI
	0x03888328 BFM X10, X8, 0x38, 0x0
	0x0388832C FCMP S2, S0
	0x03888330 CSET W11, MI

ISIL:
	001 Move S2, [X0+4]
	002 Move S1, [X0+8]
	003 Move V0, [X0]
	004 Move V3, V1
	005 Return X0

Method: Unity.Mathematics.float4 get_xzzx()

Disassembly:
	0x03888334 FCMP S3, S4
	0x03888338 CSET W8, MI
	0x0388833C FCMP S1, S5
	0x03888340 CSET W12, MI
	0x03888344 ORR X11, X12, X11, 0x8

ISIL:
	001 Move V0, [X0]
	002 Move V1, [X0+8]
	003 Move V3, V0
	004 Move V2, V1
	005 Return X0

Method: Unity.Mathematics.float4 get_xzzy()

Disassembly:
	0x03888348 ORR X8, X11, X8, 0x10
	0x0388834C BFM X10, X9, 0x30, 0x0
	0x03888350 ORR X0, X10, X8, 0x18
	0x03888354 RET

ISIL:
	001 Move S3, [X0+4]
	002 Move S1, [X0+8]
	003 Move V0, [X0]
	004 Move V2, V1
	005 Return X0

Method: Unity.Mathematics.float4 get_xzzz()

Disassembly:
	0x03888358 LDP S2, S1, [X0]
	0x0388835C FCMP S1, S0
	0x03888360 LDP S3, S1, [X0 + 0x8]
	0x03888364 CSET W8, MI
	0x03888368 FCMP S3, S0

ISIL:
	001 Move V1, [X0+8]
	002 Move V0, [X0]
	003 Move V2, V1
	004 Move V3, V1
	005 Return X0

Method: Unity.Mathematics.float4 get_yxxx()

Disassembly:
	0x0388836C CSET W9, MI
	0x03888370 FCMP S2, S0
	0x03888374 LDP S3, S2, [X0 + 0x10]
	0x03888378 CSET W10, MI

ISIL:
	001 Move S1, [X0]
	002 Move S0, [X0+4]
	003 Move V2, V1
	004 Move V3, V1
	005 Return X0

Method: Unity.Mathematics.float4 get_yxxy()

Disassembly:
	0x0388837C BFM X10, X8, 0x38, 0x0
	0x03888380 BFM X10, X9, 0x30, 0x0
	0x03888384 FCMP S3, S0
	0x03888388 CSET W11, MI

ISIL:
	001 Move S1, [X0]
	002 Move S0, [X0+4]
	003 Move V2, V1
	004 Move V3, V0
	005 Return X0

Method: Unity.Mathematics.float4 get_yxxz()

Disassembly:
	0x0388838C FCMP S2, S0
	0x03888390 CSET W8, MI
	0x03888394 FCMP S1, S0
	0x03888398 CSET W12, MI

ISIL:
	001 Move S1, [X0]
	002 Move S0, [X0+4]
	003 Move V3, [X0+8]
	004 Move V2, V1
	005 Return X0

Method: Unity.Mathematics.float4 get_yxyx()

Disassembly:
	0x0388839C ORR X11, X12, X11, 0x8
	0x038883A0 ORR X8, X11, X8, 0x10
	0x038883A4 ORR X0, X10, X8, 0x18
	0x038883A8 RET

ISIL:
	001 Move S1, [X0]
	002 Move S0, [X0+4]
	003 Move V2, V0
	004 Move V3, V1
	005 Return X0

Method: Unity.Mathematics.float4 get_yxyy()

Disassembly:
	0x038883AC LDP S2, S1, [X0]
	0x038883B0 FCMP S1, S0
	0x038883B4 LDP S3, S1, [X0 + 0x8]
	0x038883B8 CSET W8, GT

ISIL:
	001 Move S1, [X0]
	002 Move S0, [X0+4]
	003 Move V2, V0
	004 Move V3, V0
	005 Return X0

Method: Unity.Mathematics.float4 get_yxyz()

Disassembly:
	0x038883BC FCMP S3, S0
	0x038883C0 CSET W9, GT
	0x038883C4 FCMP S2, S0
	0x038883C8 LDP S3, S2, [X0 + 0x10]

ISIL:
	001 Move S1, [X0]
	002 Move S0, [X0+4]
	003 Move V3, [X0+8]
	004 Move V2, V0
	005 Return X0

Method: Unity.Mathematics.float4 get_yxzx()

Disassembly:
	0x038883CC CSET W10, GT
	0x038883D0 BFM X10, X8, 0x38, 0x0
	0x038883D4 BFM X10, X9, 0x30, 0x0
	0x038883D8 FCMP S3, S0

ISIL:
	001 Move S1, [X0]
	002 Move S0, [X0+4]
	003 Move V2, [X0+8]
	004 Move V3, V1
	005 Return X0

Method: Unity.Mathematics.float4 get_yxzy()

Disassembly:
	0x038883DC CSET W11, GT
	0x038883E0 FCMP S2, S0
	0x038883E4 CSET W8, GT
	0x038883E8 FCMP S1, S0

ISIL:
	001 Move S1, [X0]
	002 Move S0, [X0+4]
	003 Move V2, [X0+8]
	004 Move V3, V0
	005 Return X0

Method: Unity.Mathematics.float4 get_yxzz()

Disassembly:
	0x038883EC CSET W12, GT
	0x038883F0 ORR X11, X12, X11, 0x8
	0x038883F4 ORR X8, X11, X8, 0x10
	0x038883F8 ORR X0, X10, X8, 0x18

ISIL:
	001 Move V2, [X0+8]
	002 Move S1, [X0]
	003 Move S0, [X0+4]
	004 Move V3, V2
	005 Return X0

Method: Unity.Mathematics.float4 get_yyxx()

Disassembly:
	0x038883FC RET
	0x03888400 LDP S2, S0, [X0]
	0x03888404 LDP S1, S3, [X1 + 0x4]
	0x03888408 LDR V4, [X1]
	0x0388840C FCMP S0, S1

ISIL:
	001 Move V2, [X0]
	002 Move S0, V2.S[1]
	003 Move V1, V0
	004 Move V3, V2
	005 Return X0

Method: Unity.Mathematics.float4 get_yyxy()

Disassembly:
	0x03888410 LDP S0, S1, [X0 + 0x8]
	0x03888414 CSET W8, LS
	0x03888418 FCMP S0, S3
	0x0388841C LDP S5, S0, [X1 + 0xC]
	0x03888420 CSET W9, LS

ISIL:
	001 Move V2, [X0]
	002 Move S0, V2.S[1]
	003 Move V1, V0
	004 Move V3, V0
	005 Return X0

Method: Unity.Mathematics.float4 get_yyxz()

Disassembly:
	0x03888424 FCMP S2, S4
	0x03888428 LDP S2, S3, [X0 + 0x10]
	0x0388842C LDR V4, [X1 + 0x14]
	0x03888430 CSET W10, LS

ISIL:
	001 Move S2, [X0]
	002 Move S0, [X0+4]
	003 Move V3, [X0+8]
	004 Move V1, V0
	005 Return X0

Method: Unity.Mathematics.float4 get_yyyx()

Disassembly:
	0x03888434 BFM X10, X8, 0x38, 0x0
	0x03888438 FCMP S2, S0
	0x0388843C CSET W11, LS
	0x03888440 FCMP S3, S4

ISIL:
	001 Move S3, [X0]
	002 Move S0, [X0+4]
	003 Move V1, V0
	004 Move V2, V0
	005 Return X0

Method: Unity.Mathematics.float4 get_yyyy()

Disassembly:
	0x03888444 CSET W8, LS
	0x03888448 FCMP S1, S5
	0x0388844C CSET W12, LS
	0x03888450 ORR X11, X12, X11, 0x8
	0x03888454 ORR X8, X11, X8, 0x10

ISIL:
	001 Move V0, [X0+4]
	002 Move V1, V0
	003 Move V2, V0
	004 Move V3, V0
	005 Return X0

Method: Unity.Mathematics.float4 get_yyyz()

Disassembly:
	0x03888458 BFM X10, X9, 0x30, 0x0
	0x0388845C ORR X0, X10, X8, 0x18
	0x03888460 RET
	0x03888464 LDP S2, S1, [X0]

ISIL:
	001 Move S0, [X0+4]
	002 Move S3, [X0+8]
	003 Move V1, V0
	004 Move V2, V0
	005 Return X0

Method: Unity.Mathematics.float4 get_yyzx()

Disassembly:
	0x03888468 FCMP S1, S0
	0x0388846C LDP S3, S1, [X0 + 0x8]
	0x03888470 CSET W8, LS
	0x03888474 FCMP S3, S0

ISIL:
	001 Move S0, [X0+4]
	002 Move S2, [X0+8]
	003 Move V3, [X0]
	004 Move V1, V0
	005 Return X0

Method: Unity.Mathematics.float4 get_yyzy()

Disassembly:
	0x03888478 CSET W9, LS
	0x0388847C FCMP S2, S0
	0x03888480 LDP S3, S2, [X0 + 0x10]
	0x03888484 CSET W10, LS
	0x03888488 BFM X10, X8, 0x38, 0x0

ISIL:
	001 NotImplemented "Instruction LDUR not yet implemented."
	002 Move S2, V0.S[1]
	003 Move V1, V0
	004 Move V3, V0
	005 Return X0

Method: Unity.Mathematics.float4 get_yyzz()

Disassembly:
	0x0388848C BFM X10, X9, 0x30, 0x0
	0x03888490 FCMP S3, S0
	0x03888494 CSET W11, LS
	0x03888498 FCMP S2, S0
	0x0388849C CSET W8, LS

ISIL:
	001 NotImplemented "Instruction LDUR not yet implemented."
	002 Move S2, V0.S[1]
	003 Move V1, V0
	004 Move V3, V2
	005 Return X0

Method: Unity.Mathematics.float4 get_yzxx()

Disassembly:
	0x038884A0 FCMP S1, S0
	0x038884A4 CSET W12, LS
	0x038884A8 ORR X11, X12, X11, 0x8
	0x038884AC ORR X8, X11, X8, 0x10

ISIL:
	001 Move V2, [X0]
	002 Move S0, [X0+4]
	003 Move S1, [X0+8]
	004 Move V3, V2
	005 Return X0

Method: Unity.Mathematics.float4 get_yzxy()

Disassembly:
	0x038884B0 ORR X0, X10, X8, 0x18
	0x038884B4 RET
	0x038884B8 LDP S2, S1, [X0]
	0x038884BC FCMP S1, S0

ISIL:
	001 Move S0, [X0+4]
	002 Move S1, [X0+8]
	003 Move V2, [X0]
	004 Move V3, V0
	005 Return X0

Method: Unity.Mathematics.float4 get_yzxz()

Disassembly:
	0x038884C0 LDP S3, S1, [X0 + 0x8]
	0x038884C4 CSET W8, GE
	0x038884C8 FCMP S3, S0
	0x038884CC CSET W9, GE

ISIL:
	001 Move S0, [X0+4]
	002 Move S1, [X0+8]
	003 Move V2, [X0]
	004 Move V3, V1
	005 Return X0

Method: Unity.Mathematics.float4 get_yzyx()

Disassembly:
	0x038884D0 FCMP S2, S0
	0x038884D4 LDP S3, S2, [X0 + 0x10]
	0x038884D8 CSET W10, GE
	0x038884DC BFM X10, X8, 0x38, 0x0

ISIL:
	001 Move S0, [X0+4]
	002 Move S1, [X0+8]
	003 Move V3, [X0]
	004 Move V2, V0
	005 Return X0

Method: Unity.Mathematics.float4 get_yzyy()

Disassembly:
	0x038884E0 BFM X10, X9, 0x30, 0x0
	0x038884E4 FCMP S3, S0
	0x038884E8 CSET W11, GE
	0x038884EC FCMP S2, S0

ISIL:
	001 Move S0, [X0+4]
	002 Move S1, [X0+8]
	003 Move V2, V0
	004 Move V3, V0
	005 Return X0

Method: Unity.Mathematics.float4 get_yzyz()

Disassembly:
	0x038884F0 CSET W8, GE
	0x038884F4 FCMP S1, S0
	0x038884F8 CSET W12, GE
	0x038884FC ORR X11, X12, X11, 0x8

ISIL:
	001 Move S0, [X0+4]
	002 Move S1, [X0+8]
	003 Move V2, V0
	004 Move V3, V1
	005 Return X0

Method: Unity.Mathematics.float4 get_yzzx()

Disassembly:
	0x03888500 ORR X8, X11, X8, 0x10
	0x03888504 ORR X0, X10, X8, 0x18
	0x03888508 RET
	0x0388850C LDP S2, S0, [X0]

ISIL:
	001 Move S0, [X0+4]
	002 Move S1, [X0+8]
	003 Move V3, [X0]
	004 Move V2, V1
	005 Return X0

Method: Unity.Mathematics.float4 get_yzzy()

Disassembly:
	0x03888510 LDP S1, S3, [X1 + 0x4]
	0x03888514 LDR V4, [X1]
	0x03888518 FCMP S0, S1
	0x0388851C LDP S0, S1, [X0 + 0x8]

ISIL:
	001 Move S0, [X0+4]
	002 Move S1, [X0+8]
	003 Move V2, V1
	004 Move V3, V0
	005 Return X0

Method: Unity.Mathematics.float4 get_yzzz()

Disassembly:
	0x03888520 CSET W8, GT
	0x03888524 FCMP S0, S3
	0x03888528 LDP S5, S0, [X1 + 0xC]
	0x0388852C CSET W9, GT

ISIL:
	001 Move S0, [X0+4]
	002 Move S1, [X0+8]
	003 Move V2, V1
	004 Move V3, V1
	005 Return X0

Method: Unity.Mathematics.float4 get_zxxx()

Disassembly:
	0x03888530 FCMP S2, S4
	0x03888534 LDP S2, S3, [X0 + 0x10]
	0x03888538 LDR V4, [X1 + 0x14]
	0x0388853C CSET W10, GT
	0x03888540 BFM X10, X8, 0x38, 0x0

ISIL:
	001 Move V1, [X0]
	002 Move V0, [X0+8]
	003 Move V2, V1
	004 Move V3, V1
	005 Return X0

Method: Unity.Mathematics.float4 get_zxxy()

Disassembly:
	0x03888544 FCMP S2, S0
	0x03888548 CSET W11, GT
	0x0388854C FCMP S3, S4
	0x03888550 CSET W8, GT

ISIL:
	001 Move V1, [X0]
	002 Move S3, [X0+4]
	003 Move S0, [X0+8]
	004 Move V2, V1
	005 Return X0

Method: Unity.Mathematics.float4 get_zxxz()

Disassembly:
	0x03888554 FCMP S1, S5
	0x03888558 CSET W12, GT
	0x0388855C ORR X11, X12, X11, 0x8
	0x03888560 ORR X8, X11, X8, 0x10
	0x03888564 BFM X10, X9, 0x30, 0x0

ISIL:
	001 Move V0, [X0+8]
	002 Move V1, [X0]
	003 Move V3, V0
	004 Move V2, V1
	005 Return X0

Method: Unity.Mathematics.float4 get_zxyx()

Disassembly:
	0x03888568 ORR X0, X10, X8, 0x18
	0x0388856C RET
	0x03888570 LDP S2, S1, [X0]
	0x03888574 FCMP S1, S0

ISIL:
	001 Move V1, [X0]
	002 Move S2, [X0+4]
	003 Move S0, [X0+8]
	004 Move V3, V1
	005 Return X0

Method: Unity.Mathematics.float4 get_zxyy()

Disassembly:
	0x03888578 LDP S3, S1, [X0 + 0x8]
	0x0388857C CSET W8, GT
	0x03888580 FCMP S3, S0
	0x03888584 CSET W9, GT

ISIL:
	001 Move S2, [X0+4]
	002 Move S0, [X0+8]
	003 Move V1, [X0]
	004 Move V3, V2
	005 Return X0

Method: Unity.Mathematics.float4 get_zxyz()

Disassembly:
	0x03888588 FCMP S2, S0
	0x0388858C LDP S3, S2, [X0 + 0x10]
	0x03888590 CSET W10, GT
	0x03888594 BFM X10, X8, 0x38, 0x0

ISIL:
	001 Move S2, [X0+4]
	002 Move S0, [X0+8]
	003 Move V1, [X0]
	004 Move V3, V0
	005 Return X0

Method: Unity.Mathematics.float4 get_zxzx()

Disassembly:
	0x03888598 BFM X10, X9, 0x30, 0x0
	0x0388859C FCMP S3, S0
	0x038885A0 CSET W11, GT
	0x038885A4 FCMP S2, S0
	0x038885A8 CSET W8, GT

ISIL:
	001 Move V0, [X0+8]
	002 Move V1, [X0]
	003 Move V2, V0
	004 Move V3, V1
	005 Return X0

Method: Unity.Mathematics.float4 get_zxzy()

Disassembly:
	0x038885AC FCMP S1, S0
	0x038885B0 CSET W12, GT
	0x038885B4 ORR X11, X12, X11, 0x8
	0x038885B8 ORR X8, X11, X8, 0x10

ISIL:
	001 Move S3, [X0+4]
	002 Move S0, [X0+8]
	003 Move V1, [X0]
	004 Move V2, V0
	005 Return X0

Method: Unity.Mathematics.float4 get_zxzz()

Disassembly:
	0x038885BC ORR X0, X10, X8, 0x18
	0x038885C0 RET
	0x038885C4 LDP S2, S1, [X0]
	0x038885C8 FCMP S1, S0
	0x038885CC LDP S3, S1, [X0 + 0x8]

ISIL:
	001 Move V0, [X0+8]
	002 Move V1, [X0]
	003 Move V2, V0
	004 Move V3, V0
	005 Return X0

Method: Unity.Mathematics.float4 get_zyxx()

Disassembly:
	0x038885D0 CSET W8, MI
	0x038885D4 FCMP S3, S0
	0x038885D8 CSET W9, MI
	0x038885DC FCMP S2, S0

ISIL:
	001 Move V2, [X0]
	002 Move S1, [X0+4]
	003 Move S0, [X0+8]
	004 Move V3, V2
	005 Return X0

Method: Unity.Mathematics.float4 get_zyxy()

Disassembly:
	0x038885E0 LDP S3, S2, [X0 + 0x10]
	0x038885E4 CSET W10, MI
	0x038885E8 BFM X10, X8, 0x38, 0x0
	0x038885EC BFM X10, X9, 0x30, 0x0

ISIL:
	001 Move S1, [X0+4]
	002 Move S0, [X0+8]
	003 Move V2, [X0]
	004 Move V3, V1
	005 Return X0

Method: Unity.Mathematics.float4 get_zyxz()

Disassembly:
	0x038885F0 FCMP S3, S0
	0x038885F4 CSET W11, MI
	0x038885F8 FCMP S2, S0
	0x038885FC CSET W8, MI

ISIL:
	001 Move S1, [X0+4]
	002 Move S0, [X0+8]
	003 Move V2, [X0]
	004 Move V3, V0
	005 Return X0

Method: Unity.Mathematics.float4 get_zyyx()

Disassembly:
	0x03888600 FCMP S1, S0
	0x03888604 CSET W12, MI
	0x03888608 ORR X11, X12, X11, 0x8
	0x0388860C ORR X8, X11, X8, 0x10

ISIL:
	001 Move S1, [X0+4]
	002 Move S0, [X0+8]
	003 Move V3, [X0]
	004 Move V2, V1
	005 Return X0

Method: Unity.Mathematics.float4 get_zyyy()

Disassembly:
	0x03888610 ORR X0, X10, X8, 0x18
	0x03888614 RET
	0x03888618 LDP S2, S0, [X0]
	0x0388861C LDP S1, S3, [X1 + 0x4]

ISIL:
	001 Move S1, [X0+4]
	002 Move S0, [X0+8]
	003 Move V2, V1
	004 Move V3, V1
	005 Return X0

Method: Unity.Mathematics.float4 get_zyyz()

Disassembly:
	0x03888620 LDR V4, [X1]
	0x03888624 FCMP S0, S1
	0x03888628 LDP S0, S1, [X0 + 0x8]
	0x0388862C CSET W8, GE

ISIL:
	001 Move S1, [X0+4]
	002 Move S0, [X0+8]
	003 Move V2, V1
	004 Move V3, V0
	005 Return X0

Method: Unity.Mathematics.float4 get_zyzx()

Disassembly:
	0x03888630 FCMP S0, S3
	0x03888634 LDP S5, S0, [X1 + 0xC]
	0x03888638 CSET W9, GE
	0x0388863C FCMP S2, S4

ISIL:
	001 Move S1, [X0+4]
	002 Move S0, [X0+8]
	003 Move V3, [X0]
	004 Move V2, V0
	005 Return X0

Method: Unity.Mathematics.float4 get_zyzy()

Disassembly:
	0x03888640 LDP S2, S3, [X0 + 0x10]
	0x03888644 LDR V4, [X1 + 0x14]
	0x03888648 CSET W10, GE
	0x0388864C BFM X10, X8, 0x38, 0x0

ISIL:
	001 Move S1, [X0+4]
	002 Move S0, [X0+8]
	003 Move V2, V0
	004 Move V3, V1
	005 Return X0

Method: Unity.Mathematics.float4 get_zyzz()

Disassembly:
	0x03888650 FCMP S2, S0
	0x03888654 CSET W11, GE
	0x03888658 FCMP S3, S4
	0x0388865C CSET W8, GE

ISIL:
	001 Move S1, [X0+4]
	002 Move S0, [X0+8]
	003 Move V2, V0
	004 Move V3, V0
	005 Return X0

Method: Unity.Mathematics.float4 get_zzxx()

Disassembly:
	0x03888660 FCMP S1, S5
	0x03888664 CSET W12, GE
	0x03888668 ORR X11, X12, X11, 0x8
	0x0388866C ORR X8, X11, X8, 0x10
	0x03888670 BFM X10, X9, 0x30, 0x0

ISIL:
	001 Move V0, [X0+8]
	002 Move V2, [X0]
	003 Move V1, V0
	004 Move V3, V2
	005 Return X0

Method: Unity.Mathematics.float4 get_zzxy()

Disassembly:
	0x03888674 ORR X0, X10, X8, 0x18
	0x03888678 RET
	0x0388867C LDP S2, S1, [X0]
	0x03888680 FCMP S1, S0

ISIL:
	001 Move S3, [X0+4]
	002 Move S0, [X0+8]
	003 Move V2, [X0]
	004 Move V1, V0
	005 Return X0

Method: Unity.Mathematics.float4 get_zzxz()

Disassembly:
	0x03888684 LDP S3, S1, [X0 + 0x8]
	0x03888688 CSET W8, GE
	0x0388868C FCMP S3, S0
	0x03888690 CSET W9, GE
	0x03888694 FCMP S2, S0

ISIL:
	001 Move V0, [X0+8]
	002 Move V2, [X0]
	003 Move V1, V0
	004 Move V3, V0
	005 Return X0

Method: Unity.Mathematics.float4 get_zzyx()

Disassembly:
	0x03888698 LDP S3, S2, [X0 + 0x10]
	0x0388869C CSET W10, GE
	0x038886A0 BFM X10, X8, 0x38, 0x0
	0x038886A4 BFM X10, X9, 0x30, 0x0

ISIL:
	001 Move S2, [X0+4]
	002 Move S0, [X0+8]
	003 Move V3, [X0]
	004 Move V1, V0
	005 Return X0

Method: Unity.Mathematics.float4 get_zzyy()

Disassembly:
	0x038886A8 FCMP S3, S0
	0x038886AC CSET W11, GE
	0x038886B0 FCMP S2, S0
	0x038886B4 CSET W8, GE
	0x038886B8 FCMP S1, S0

ISIL:
	001 NotImplemented "Instruction LDUR not yet implemented."
	002 Move S0, V2.S[1]
	003 Move V1, V0
	004 Move V3, V2
	005 Return X0

Method: Unity.Mathematics.float4 get_zzyz()

Disassembly:
	0x038886BC CSET W12, GE
	0x038886C0 ORR X11, X12, X11, 0x8
	0x038886C4 ORR X8, X11, X8, 0x10
	0x038886C8 ORR X0, X10, X8, 0x18
	0x038886CC RET

ISIL:
	001 NotImplemented "Instruction LDUR not yet implemented."
	002 Move S0, V2.S[1]
	003 Move V1, V0
	004 Move V3, V0
	005 Return X0

Method: Unity.Mathematics.float4 get_zzzx()

Disassembly:
	0x038886D0 LDP S2, S1, [X0]
	0x038886D4 FCMP S1, S0
	0x038886D8 LDP S3, S1, [X0 + 0x8]
	0x038886DC CSET W8, LS
	0x038886E0 FCMP S3, S0

ISIL:
	001 Move V0, [X0+8]
	002 Move V3, [X0]
	003 Move V1, V0
	004 Move V2, V0
	005 Return X0

Method: Unity.Mathematics.float4 get_zzzy()

Disassembly:
	0x038886E4 CSET W9, LS
	0x038886E8 FCMP S2, S0
	0x038886EC LDP S3, S2, [X0 + 0x10]
	0x038886F0 CSET W10, LS

ISIL:
	001 Move S3, [X0+4]
	002 Move S0, [X0+8]
	003 Move V1, V0
	004 Move V2, V0
	005 Return X0

Method: Unity.Mathematics.float4 get_zzzz()

Disassembly:
	0x038886F4 BFM X10, X8, 0x38, 0x0
	0x038886F8 BFM X10, X9, 0x30, 0x0
	0x038886FC FCMP S3, S0
	0x03888700 CSET W11, LS
	0x03888704 FCMP S2, S0

ISIL:
	001 Move V0, [X0+8]
	002 Move V1, V0
	003 Move V2, V0
	004 Move V3, V0
	005 Return X0

Method: Unity.Mathematics.float3 get_xxx()

Disassembly:
	0x03888708 CSET W8, LS
	0x0388870C FCMP S1, S0
	0x03888710 CSET W12, LS
	0x03888714 ORR X11, X12, X11, 0x8

ISIL:
	001 Move V0, [X0]
	002 Move V1, V0
	003 Move V2, V0
	004 Return X0

Method: Unity.Mathematics.float3 get_xxy()

Disassembly:
	0x03888718 ORR X8, X11, X8, 0x10
	0x0388871C ORR X0, X10, X8, 0x18
	0x03888720 RET

ISIL:
	001 Move S0, [X0]
	002 Move S2, [X0+4]
	003 Move V1, V0
	004 Return X0

Method: Unity.Mathematics.float3 get_xxz()

Disassembly:
	0x03888724 LDR V0, [X0]
	0x03888728 LDR V1, [X0 + 0x10]
	0x0388872C UNIMPLEMENTED
	0x03888730 UNIMPLEMENTED

ISIL:
	001 Move V0, [X0]
	002 Move V2, [X0+8]
	003 Move V1, V0
	004 Return X0

Method: Unity.Mathematics.float3 get_xyx()

Disassembly:
	0x03888734 STR V0, [X8]
	0x03888738 STR D1, [X8 + 0x10]
	0x0388873C RET

ISIL:
	001 Move S0, [X0]
	002 Move S1, [X0+4]
	003 Move V2, V0
	004 Return X0

Method: Unity.Mathematics.float3 get_xyy()

Disassembly:
	0x03888740 LDR V0, [X0]
	0x03888744 LDR V1, [X0 + 0x10]
	0x03888748 STR V0, [X8]

ISIL:
	001 Move S0, [X0]
	002 Move S1, [X0+4]
	003 Move V2, V1
	004 Return X0

Method: Unity.Mathematics.float3 get_xyz()

Disassembly:
	0x0388874C STR D1, [X8 + 0x10]
	0x03888750 RET
	0x03888754 LDP S2, S0, [X0]

ISIL:
	001 Move S0, [X0]
	002 Move S1, [X0+4]
	003 Move V2, [X0+8]
	004 Return X0

Method: System.Void set_xyz(Unity.Mathematics.float3 value)

Disassembly:
	0x03888758 LDP S1, S3, [X1 + 0x4]
	0x0388875C LDR V4, [X1]
	0x03888760 FCMP S0, S1

ISIL:
	001 Move [X0], S0
	002 Move [X0+8], S1
	003 Move [X0+8], S2
	004 Return 

Method: Unity.Mathematics.float3 get_xzx()

Disassembly:
	0x03888764 LDP S0, S1, [X0 + 0x8]
	0x03888768 CSET W8, EQ
	0x0388876C FCMP S0, S3
	0x03888770 LDP S5, S0, [X1 + 0xC]

ISIL:
	001 Move V0, [X0]
	002 Move V1, [X0+8]
	003 Move V2, V0
	004 Return X0

Method: Unity.Mathematics.float3 get_xzy()

Disassembly:
	0x03888774 CSET W9, EQ
	0x03888778 FCMP S2, S4
	0x0388877C LDP S2, S3, [X0 + 0x10]

ISIL:
	001 Move S2, [X0+4]
	002 Move S1, [X0+8]
	003 Move V0, [X0]
	004 Return X0

Method: System.Void set_xzy(Unity.Mathematics.float3 value)

Disassembly:
	0x03888780 LDR V4, [X1 + 0x14]
	0x03888784 CSET W10, EQ
	0x03888788 BFM X10, X8, 0x38, 0x0

ISIL:
	001 Move [X0+4], S2
	002 Move [X0+12], S1
	003 Move [X0], S0
	004 Return 

Method: Unity.Mathematics.float3 get_xzz()

Disassembly:
	0x0388878C FCMP S2, S0
	0x03888790 CSET W11, EQ
	0x03888794 FCMP S3, S4
	0x03888798 CSET W8, EQ

ISIL:
	001 Move V1, [X0+8]
	002 Move V0, [X0]
	003 Move V2, V1
	004 Return X0

Method: Unity.Mathematics.float3 get_yxx()

Disassembly:
	0x0388879C FCMP S1, S5
	0x038887A0 CSET W12, EQ
	0x038887A4 ORR X11, X12, X11, 0x8

ISIL:
	001 Move S1, [X0]
	002 Move S0, [X0+4]
	003 Move V2, V1
	004 Return X0

Method: Unity.Mathematics.float3 get_yxy()

Disassembly:
	0x038887A8 ORR X8, X11, X8, 0x10
	0x038887AC BFM X10, X9, 0x30, 0x0
	0x038887B0 ORR X0, X10, X8, 0x18

ISIL:
	001 Move S1, [X0]
	002 Move S0, [X0+4]
	003 Move V2, V0
	004 Return X0

Method: Unity.Mathematics.float3 get_yxz()

Disassembly:
	0x038887B4 RET
	0x038887B8 LDP S2, S1, [X0]
	0x038887BC FCMP S1, S0

ISIL:
	001 Move S1, [X0]
	002 Move S0, [X0+4]
	003 Move V2, [X0+8]
	004 Return X0

Method: System.Void set_yxz(Unity.Mathematics.float3 value)

Disassembly:
	0x038887C0 LDP S3, S1, [X0 + 0x8]
	0x038887C4 CSET W8, EQ
	0x038887C8 FCMP S3, S0

ISIL:
	001 Move [X0], S1
	002 Move [X0+8], S0
	003 Move [X0+8], S2
	004 Return 

Method: Unity.Mathematics.float3 get_yyx()

Disassembly:
	0x038887CC CSET W9, EQ
	0x038887D0 FCMP S2, S0
	0x038887D4 LDP S3, S2, [X0 + 0x10]

ISIL:
	001 Move S2, [X0]
	002 Move S0, [X0+4]
	003 Move V1, V0
	004 Return X0

Method: Unity.Mathematics.float3 get_yyy()

Disassembly:
	0x038887D8 CSET W10, EQ
	0x038887DC BFM X10, X8, 0x38, 0x0
	0x038887E0 BFM X10, X9, 0x30, 0x0
	0x038887E4 FCMP S3, S0

ISIL:
	001 Move V0, [X0+4]
	002 Move V1, V0
	003 Move V2, V0
	004 Return X0

Method: Unity.Mathematics.float3 get_yyz()

Disassembly:
	0x038887E8 CSET W11, EQ
	0x038887EC FCMP S2, S0
	0x038887F0 CSET W8, EQ

ISIL:
	001 Move S0, [X0+4]
	002 Move S2, [X0+8]
	003 Move V1, V0
	004 Return X0

Method: Unity.Mathematics.float3 get_yzx()

Disassembly:
	0x038887F4 FCMP S1, S0
	0x038887F8 CSET W12, EQ
	0x038887FC ORR X11, X12, X11, 0x8

ISIL:
	001 Move S0, [X0+4]
	002 Move S1, [X0+8]
	003 Move V2, [X0]
	004 Return X0

Method: System.Void set_yzx(Unity.Mathematics.float3 value)

Disassembly:
	0x03888800 ORR X8, X11, X8, 0x10
	0x03888804 ORR X0, X10, X8, 0x18
	0x03888808 RET

ISIL:
	001 Move [X0+4], S0
	002 Move [X0+12], S1
	003 Move [X0], S2
	004 Return 

Method: Unity.Mathematics.float3 get_yzy()

Disassembly:
	0x0388880C LDP S2, S1, [X0]
	0x03888810 FCMP S1, S0
	0x03888814 LDP S3, S1, [X0 + 0x8]

ISIL:
	001 Move S0, [X0+4]
	002 Move S1, [X0+8]
	003 Move V2, V0
	004 Return X0

Method: Unity.Mathematics.float3 get_yzz()

Disassembly:
	0x03888818 CSET W8, EQ
	0x0388881C FCMP S3, S0
	0x03888820 CSET W9, EQ

ISIL:
	001 Move S0, [X0+4]
	002 Move S1, [X0+8]
	003 Move V2, V1
	004 Return X0

Method: Unity.Mathematics.float3 get_zxx()

Disassembly:
	0x03888824 FCMP S2, S0
	0x03888828 LDP S3, S2, [X0 + 0x10]
	0x0388882C CSET W10, EQ
	0x03888830 BFM X10, X8, 0x38, 0x0

ISIL:
	001 Move V1, [X0]
	002 Move V0, [X0+8]
	003 Move V2, V1
	004 Return X0

Method: Unity.Mathematics.float3 get_zxy()

Disassembly:
	0x03888834 BFM X10, X9, 0x30, 0x0
	0x03888838 FCMP S3, S0
	0x0388883C CSET W11, EQ

ISIL:
	001 Move S2, [X0+4]
	002 Move S0, [X0+8]
	003 Move V1, [X0]
	004 Return X0

Method: System.Void set_zxy(Unity.Mathematics.float3 value)

Disassembly:
	0x03888840 FCMP S2, S0
	0x03888844 CSET W8, EQ
	0x03888848 FCMP S1, S0

ISIL:
	001 Move [X0+4], S2
	002 Move [X0+12], S0
	003 Move [X0], S1
	004 Return 

Method: Unity.Mathematics.float3 get_zxz()

Disassembly:
	0x0388884C CSET W12, EQ
	0x03888850 ORR X11, X12, X11, 0x8
	0x03888854 ORR X8, X11, X8, 0x10
	0x03888858 ORR X0, X10, X8, 0x18

ISIL:
	001 Move V0, [X0+8]
	002 Move V1, [X0]
	003 Move V2, V0
	004 Return X0

Method: Unity.Mathematics.float3 get_zyx()

Disassembly:
	0x0388885C RET
	0x03888860 LDP S2, S0, [X0]
	0x03888864 LDP S1, S3, [X1 + 0x4]

ISIL:
	001 Move S1, [X0+4]
	002 Move S0, [X0+8]
	003 Move V2, [X0]
	004 Return X0

Method: System.Void set_zyx(Unity.Mathematics.float3 value)

Disassembly:
	0x03888868 LDR V4, [X1]
	0x0388886C FCMP S0, S1
	0x03888870 LDP S0, S1, [X0 + 0x8]

ISIL:
	001 Move [X0+4], S1
	002 Move [X0+12], S0
	003 Move [X0], S2
	004 Return 

Method: Unity.Mathematics.float3 get_zyy()

Disassembly:
	0x03888874 CSET W8, NE
	0x03888878 FCMP S0, S3
	0x0388887C LDP S5, S0, [X1 + 0xC]

ISIL:
	001 Move S1, [X0+4]
	002 Move S0, [X0+8]
	003 Move V2, V1
	004 Return X0

Method: Unity.Mathematics.float3 get_zyz()

Disassembly:
	0x03888880 CSET W9, NE
	0x03888884 FCMP S2, S4
	0x03888888 LDP S2, S3, [X0 + 0x10]

ISIL:
	001 Move S1, [X0+4]
	002 Move S0, [X0+8]
	003 Move V2, V0
	004 Return X0

Method: Unity.Mathematics.float3 get_zzx()

Disassembly:
	0x0388888C LDR V4, [X1 + 0x14]
	0x03888890 CSET W10, NE
	0x03888894 BFM X10, X8, 0x38, 0x0
	0x03888898 FCMP S2, S0

ISIL:
	001 Move V0, [X0+8]
	002 Move V2, [X0]
	003 Move V1, V0
	004 Return X0

Method: Unity.Mathematics.float3 get_zzy()

Disassembly:
	0x0388889C CSET W11, NE
	0x038888A0 FCMP S3, S4
	0x038888A4 CSET W8, NE

ISIL:
	001 Move S2, [X0+4]
	002 Move S0, [X0+8]
	003 Move V1, V0
	004 Return X0

Method: Unity.Mathematics.float3 get_zzz()

Disassembly:
	0x038888A8 FCMP S1, S5
	0x038888AC CSET W12, NE
	0x038888B0 ORR X11, X12, X11, 0x8
	0x038888B4 ORR X8, X11, X8, 0x10

ISIL:
	001 Move V0, [X0+8]
	002 Move V1, V0
	003 Move V2, V0
	004 Return X0

Method: Unity.Mathematics.float2 get_xx()

Disassembly:
	0x038888B8 BFM X10, X9, 0x30, 0x0
	0x038888BC ORR X0, X10, X8, 0x18
	0x038888C0 RET

ISIL:
	001 Move V0, [X0]
	002 Move V1, V0
	003 Return X0

Method: Unity.Mathematics.float2 get_xy()

Disassembly:
	0x038888C4 LDP S2, S1, [X0]
	0x038888C8 FCMP S1, S0

ISIL:
	001 Move S0, [X0]
	002 Move S1, [X0+4]
	003 Return X0

Method: System.Void set_xy(Unity.Mathematics.float2 value)

Disassembly:
	0x038888CC LDP S3, S1, [X0 + 0x8]
	0x038888D0 CSET W8, NE

ISIL:
	001 Move [X0], S0
	002 Move [X0+8], S1
	003 Return 

Method: Unity.Mathematics.float2 get_xz()

Disassembly:
	0x038888D4 FCMP S3, S0
	0x038888D8 CSET W9, NE
	0x038888DC FCMP S2, S0

ISIL:
	001 Move V0, [X0]
	002 Move V1, [X0+8]
	003 Return X0

Method: System.Void set_xz(Unity.Mathematics.float2 value)

Disassembly:
	0x038888E0 LDP S3, S2, [X0 + 0x10]
	0x038888E4 CSET W10, NE
	0x038888E8 BFM X10, X8, 0x38, 0x0

ISIL:
	001 Move [X0], S0
	002 Move [X0+8], S1
	003 Return 

Method: Unity.Mathematics.float2 get_yx()

Disassembly:
	0x038888EC BFM X10, X9, 0x30, 0x0
	0x038888F0 FCMP S3, S0

ISIL:
	001 Move S1, [X0]
	002 Move S0, [X0+4]
	003 Return X0

Method: System.Void set_yx(Unity.Mathematics.float2 value)

Disassembly:
	0x038888F4 CSET W11, NE
	0x038888F8 FCMP S2, S0

ISIL:
	001 Move [X0], S1
	002 Move [X0+8], S0
	003 Return 

Method: Unity.Mathematics.float2 get_yy()

Disassembly:
	0x038888FC CSET W8, NE
	0x03888900 FCMP S1, S0
	0x03888904 CSET W12, NE

ISIL:
	001 Move V0, [X0+4]
	002 Move V1, V0
	003 Return X0

Method: Unity.Mathematics.float2 get_yz()

Disassembly:
	0x03888908 ORR X11, X12, X11, 0x8
	0x0388890C ORR X8, X11, X8, 0x10

ISIL:
	001 Move S0, [X0+4]
	002 Move S1, [X0+8]
	003 Return X0

Method: System.Void set_yz(Unity.Mathematics.float2 value)

Disassembly:
	0x03888910 ORR X0, X10, X8, 0x18
	0x03888914 RET

ISIL:
	001 Move [X0+4], S0
	002 Move [X0+12], S1
	003 Return 

Method: Unity.Mathematics.float2 get_zx()

Disassembly:
	0x03888918 LDP S2, S1, [X0]
	0x0388891C FCMP S1, S0
	0x03888920 LDP S3, S1, [X0 + 0x8]

ISIL:
	001 Move V0, [X0+8]
	002 Move V1, [X0]
	003 Return X0

Method: System.Void set_zx(Unity.Mathematics.float2 value)

Disassembly:
	0x03888924 CSET W8, NE
	0x03888928 FCMP S3, S0
	0x0388892C CSET W9, NE

ISIL:
	001 Move [X0+8], S0
	002 Move [X0], S1
	003 Return 

Method: Unity.Mathematics.float2 get_zy()

Disassembly:
	0x03888930 FCMP S2, S0
	0x03888934 LDP S3, S2, [X0 + 0x10]

ISIL:
	001 Move S1, [X0+4]
	002 Move S0, [X0+8]
	003 Return X0

Method: System.Void set_zy(Unity.Mathematics.float2 value)

Disassembly:
	0x03888938 CSET W10, NE
	0x0388893C BFM X10, X8, 0x38, 0x0

ISIL:
	001 Move [X0+4], S1
	002 Move [X0+12], S0
	003 Return 

Method: Unity.Mathematics.float2 get_zz()

Disassembly:
	0x03888940 BFM X10, X9, 0x30, 0x0
	0x03888944 FCMP S3, S0
	0x03888948 CSET W11, NE

ISIL:
	001 Move V0, [X0+8]
	002 Move V1, V0
	003 Return X0

Method: System.Single get_Item(System.Int32 index)

Disassembly:
	0x0388894C FCMP S2, S0
	0x03888950 CSET W8, NE

ISIL:
	001 Move V0, [X0]
	002 Return V0

Method: System.Void set_Item(System.Int32 index, System.Single value)

Disassembly:
	0x03888954 FCMP S1, S0
	0x03888958 CSET W12, NE

ISIL:
	001 Move [X0], S0
	002 Return 

Method: System.Boolean Equals(Unity.Mathematics.float3 rhs)

Disassembly:
	0x0388895C ORR X11, X12, X11, 0x8
	0x03888960 ORR X8, X11, X8, 0x10
	0x03888964 ORR X0, X10, X8, 0x18
	0x03888968 RET
	0x0388896C MOVZ W8, 0xC
	0x03888970 SMADDL X0, X1, X8, X0
	0x03888974 RET
	0x03888978 LDR V0, [X1]
	0x0388897C LDR V1, [X0]
	0x03888980 FCMP S1, S0
	0x03888984 B.NE 0x38889DC
	0x03888988 LDR V0, [X1 + 0x4]

ISIL:
	001 Move V3, [X0]
	002 NotImplemented "Instruction FCMP not yet implemented."
	003 Move V0, [X0+4]
	004 NotImplemented "Instruction FCMP not yet implemented."
	005 Move V0, [X0+8]
	006 NotImplemented "Instruction FCMP not yet implemented."
	007 NotImplemented "Instruction CSET not yet implemented."
	008 Return X0
	009 Move W0, W31
	010 Return X0

Method: System.Boolean Equals(System.Object o)

Disassembly:
	0x0388898C LDR V1, [X0 + 0x4]
	0x03888990 FCMP S1, S0
	0x03888994 B.NE 0x38889DC
	0x03888998 LDR V0, [X1 + 0x8]
	0x0388899C LDR V1, [X0 + 0x8]
	0x038889A0 FCMP S1, S0
	0x038889A4 B.NE 0x38889DC
	0x038889A8 LDR V0, [X1 + 0xC]
	0x038889AC LDR V1, [X0 + 0xC]
	0x038889B0 FCMP S1, S0
	0x038889B4 B.NE 0x38889DC
	0x038889B8 LDR V0, [X1 + 0x10]
	0x038889BC LDR V1, [X0 + 0x10]
	0x038889C0 FCMP S1, S0
	0x038889C4 B.NE 0x38889DC
	0x038889C8 LDR V0, [X1 + 0x14]
	0x038889CC LDR V1, [X0 + 0x14]
	0x038889D0 FCMP S1, S0
	0x038889D4 CSET W0, EQ
	0x038889D8 RET
	0x038889DC MOV W0, W31
	0x038889E0 RET
	0x038889E4 STP X30, X21, [X31 - 0x20]!
	0x038889E8 STP X20, X19, [X31 + 0x10]
	0x038889EC ADRP X21, 0xB59000
	0x038889F0 LDRB W8, [X21 + 0x618]
	0x038889F4 MOV X20, X1
	0x038889F8 MOV X19, X0
	0x038889FC TBNZ X8, 0x0, 0x3888A14
	0x03888A00 ADRP X0, 0x8C2000
	0x03888A04 LDR X0, [X0 + 0xF60]
	0x03888A08 BL 0x1C16CF4
	0x03888A0C MOVZ W8, 0x1
	0x03888A10 STRB W8, [X21 + 0x618]
	0x03888A14 CBZ X20, 0x3888A30
	0x03888A18 ADRP X8, 0x8C2000
	0x03888A1C LDR X8, [X8 + 0xF60]
	0x03888A20 LDR X9, [X20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xB5A000
	006 Move W8, [X21+1557]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x897000
	014 Move X0, [X0+2104]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+1557], W8
	018 Compare X20, 0
	019 JumpIfEqual {25}
	020 Move X8, 0x897000
	021 Move X8, [X8+2104]
	022 Move X9, [X20]
	023 Move X8, [X8]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move W0, W31
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Return X0
	031 Move X0, X20
	032 Call 0x1C17E08
	033 Move V0, [X0]
	034 Move V1, [X19]
	035 NotImplemented "Instruction FCMP not yet implemented."
	036 Move V0, [X0+4]
	037 Move V1, [X19+4]
	038 NotImplemented "Instruction FCMP not yet implemented."
	039 Move V0, [X0+8]
	040 Move V1, [X19+8]
	041 NotImplemented "Instruction FCMP not yet implemented."
	042 NotImplemented "Instruction CSET not yet implemented."

Method: System.Int32 GetHashCode()

Disassembly:
	0x03888A24 LDR X8, [X8]
	0x03888A28 CMP X9, X8
	0x03888A2C B.EQ 0x3888A40
	0x03888A30 MOV W0, W31
	0x03888A34 LDP X20, X19, [X31 + 0x10]
	0x03888A38 LDP X30, X21, [X31], #0x20
	0x03888A3C RET
	0x03888A40 MOV X0, X20
	0x03888A44 BL 0x1C16E08
	0x03888A48 LDR V0, [X0]
	0x03888A4C LDR V1, [X19]
	0x03888A50 FCMP S1, S0
	0x03888A54 B.NE 0x3888A30
	0x03888A58 LDR V0, [X0 + 0x4]
	0x03888A5C LDR V1, [X19 + 0x4]
	0x03888A60 FCMP S1, S0
	0x03888A64 B.NE 0x3888A30

ISIL:
	001 Move W8, [X0]
	002 Move W9, [X0+4]
	003 Move W10, [X0+8]
	004 Move X11, 2067
	005 Move W12, 0x8063
	006 NotImplemented "Instruction MOVK not yet implemented."
	007 NotImplemented "Instruction MOVK not yet implemented."
	008 Move W13, 0xB92D
	009 NotImplemented "Instruction MOVK not yet implemented."
	010 Multiply X9, X9, X11
	011 Multiply W10, W10, W12
	012 Move X9, X9
	013 ShiftRight X9, 32
	014 And X9, X9, 0x7FFFFFFF
	015 NotImplemented "Instruction MADD not yet implemented."
	016 Add W8, W8, W9
	017 Move W9, 0x13F9
	018 NotImplemented "Instruction MOVK not yet implemented."
	019 Add W0, W8, W9
	020 Return X0

Method: System.String ToString()

Disassembly:
	0x03888A68 LDR V0, [X0 + 0x8]
	0x03888A6C LDR V1, [X19 + 0x8]
	0x03888A70 FCMP S1, S0
	0x03888A74 B.NE 0x3888A30
	0x03888A78 LDR V0, [X0 + 0xC]
	0x03888A7C LDR V1, [X19 + 0xC]
	0x03888A80 FCMP S1, S0
	0x03888A84 B.NE 0x3888A30
	0x03888A88 LDR V0, [X0 + 0x10]
	0x03888A8C LDR V1, [X19 + 0x10]
	0x03888A90 FCMP S1, S0
	0x03888A94 B.NE 0x3888A30
	0x03888A98 LDR V0, [X0 + 0x14]
	0x03888A9C LDR V1, [X19 + 0x14]
	0x03888AA0 FCMP S1, S0
	0x03888AA4 CSET W0, EQ
	0x03888AA8 B 0x3888A34
	0x03888AAC LDP W11, W10, [X0]
	0x03888AB0 LDP W8, W9, [X0 + 0x10]
	0x03888AB4 MOVZ W12, 0xE6AD
	0x03888AB8 MOVZ X13, 0x1249
	0x03888ABC MOVK W12, 0xE1210000
	0x03888AC0 MOVK X13, 0xC9CA0000
	0x03888AC4 LDP W15, W16, [X0 + 0x8]
	0x03888AC8 MUL W11, W11, W12
	0x03888ACC MOVZ X12, 0xBEAB
	0x03888AD0 MUL X10, X10, X13
	0x03888AD4 MOVZ W13, 0x2B07
	0x03888AD8 MOVZ W14, 0xC81
	0x03888ADC MOVK X12, 0xF6480000
	0x03888AE0 MOVK W13, 0x6BDB0000
	0x03888AE4 MOVK W14, 0x69B60000
	0x03888AE8 MOVZ W17, 0x6C25
	0x03888AEC MUL W9, W9, W13
	0x03888AF0 MADD X8, X8, X12, X10
	0x03888AF4 MOVK W17, 0xE0EB0000
	0x03888AF8 MADD W9, W15, W14, W9
	0x03888AFC UBFM X8, X8, 0x20, 0x3F
	0x03888B00 MADD W11, W16, W17, W11
	0x03888B04 ADD W8, W9, W8
	0x03888B08 MOVZ W9, 0xC699
	0x03888B0C ADD W8, W8, W11
	0x03888B10 MOVK W9, 0xEF630000
	0x03888B14 ADD W0, W8, W9
	0x03888B18 RET
	0x03888B1C SUB X31, X31, 0x40
	0x03888B20 STR X30, [X31 + 0x10]
	0x03888B24 STP X22, X21, [X31 + 0x20]
	0x03888B28 STP X20, X19, [X31 + 0x30]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0xB5A000
	009 Move X23, 0x86C000
	010 Move X22, 0x8C3000
	011 Move W8, [X20+1558]
	012 Move X23, [X23+2704]
	013 Move X22, [X22+3928]
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0x86C000
	020 Move X0, [X0+2704]
	021 Call 0x1C17CF4
	022 Move X0, 0x8C3000
	023 Move X0, [X0+3928]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X20+1558], W8
	027 Move V0, [X19]
	028 Move X0, [X23]
	029 Add X1, X31, 12
	030 Move [X31+12], S0
	031 Call 0x1C17E04
	032 Move X20, X0
	033 Move V0, [X19+4]
	034 Move X0, [X23]
	035 Add X1, X31, 8
	036 Move [X31+8], S0
	037 Call 0x1C17E04
	038 Move X21, X0
	039 Move V0, [X19+8]
	040 Move X0, [X23]
	041 Add X1, X31, 4
	042 Move [X31+4], S0
	043 Call 0x1C17E04
	044 Move X8, [X22]
	045 Move X3, X0
	046 Move X1, X20
	047 Move X2, X21
	048 Move X0, X8
	049 Move X4, X31
	050 Call String.Format, X0, X1, X2, X3
	051 Move X20, [X31+48]
	052 Move X19, [X31+56]
	053 Move X22, [X31+32]
	054 Move X21, [X31+40]
	055 Move X30, [X31+16]
	056 Move X23, [X31+24]
	057 Add X31, X31, 64
	058 Return X0

Method: System.String ToString(System.String format, System.IFormatProvider formatProvider)

Disassembly:
	0x03888B2C ADRP X19, 0xB59000
	0x03888B30 ADRP X21, 0x86B000
	0x03888B34 ADRP X22, 0x86B000
	0x03888B38 LDRB W8, [X19 + 0x619]
	0x03888B3C LDR X21, [X21 + 0x9D0]
	0x03888B40 LDR X22, [X22 + 0xA90]
	0x03888B44 MOV X20, X0
	0x03888B48 TBNZ X8, 0x0, 0x3888B78
	0x03888B4C ADRP X0, 0x86B000
	0x03888B50 LDR X0, [X0 + 0x9D0]
	0x03888B54 BL 0x1C16CF4
	0x03888B58 ADRP X0, 0x86B000
	0x03888B5C LDR X0, [X0 + 0xA90]
	0x03888B60 BL 0x1C16CF4
	0x03888B64 ADRP X0, 0x8C2000
	0x03888B68 LDR X0, [X0 + 0xF68]
	0x03888B6C BL 0x1C16CF4
	0x03888B70 MOVZ W8, 0x1
	0x03888B74 STRB W8, [X19 + 0x619]
	0x03888B78 LDR X0, [X21]
	0x03888B7C MOVZ W1, 0x6
	0x03888B80 BL 0x1C16D6C
	0x03888B84 MOV X19, X0
	0x03888B88 LDR V0, [X20]
	0x03888B8C LDR X0, [X22]
	0x03888B90 ADD X1, X31, 0x1C
	0x03888B94 STR S0, [X31 + 0x1C]
	0x03888B98 BL 0x1C16E04
	0x03888B9C CBZ X19, 0x3888D44
	0x03888BA0 MOV X21, X0
	0x03888BA4 CBZ X0, 0x3888BBC
	0x03888BA8 LDR X8, [X19]
	0x03888BAC MOV X0, X21
	0x03888BB0 LDR X1, [X8 + 0x40]
	0x03888BB4 BL 0x1C16E00
	0x03888BB8 CBZ X0, 0x3888D38
	0x03888BBC LDR W8, [X19 + 0x18]
	0x03888BC0 CBZ W8, 0x3888D34
	0x03888BC4 STR X21, [X19 + 0x20]
	0x03888BC8 LDR V0, [X20 + 0xC]
	0x03888BCC LDR X0, [X22]
	0x03888BD0 ADD X1, X31, 0x18
	0x03888BD4 STR S0, [X31 + 0x18]
	0x03888BD8 BL 0x1C16E04
	0x03888BDC MOV X21, X0

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0xB5A000
	009 Move X24, 0x8C3000
	010 Move W8, [X22+1559]
	011 Move X24, [X24+3928]
	012 Move X19, X2
	013 Move X20, X1
	014 Move X21, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {24}
	019 Move X0, 0x8C3000
	020 Move X0, [X0+3928]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+1559], W8
	024 Move X0, X21
	025 Move X1, X20
	026 Move X2, X19
	027 Move X3, X31
	028 Call Single.ToString, X0, X1, X2
	029 Move X22, X0
	030 Add X0, X21, 4
	031 Move X1, X20
	032 Move X2, X19
	033 Move X3, X31
	034 Call Single.ToString, X0, X1, X2
	035 Move X23, X0
	036 Add X0, X21, 8
	037 Move X1, X20
	038 Move X2, X19
	039 Move X3, X31
	040 Call Single.ToString, X0, X1, X2
	041 Move X8, [X24]
	042 Move X1, X22
	043 Move X2, X23
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X3, X0
	051 Move X0, X8
	052 Move X4, X31
	053 Move X30, [X31+64]
	054 Call String.Format, X0, X1, X2, X3
	055 Return X0

Method: UnityEngine.Vector3 op_Implicit(Unity.Mathematics.float3 v)

Disassembly:
	0x03888BE0 CBZ X0, 0x3888BF8

ISIL:
	001 Return X0

Method: Unity.Mathematics.float3 op_Implicit(UnityEngine.Vector3 v)

Disassembly:
	0x03888BE4 LDR X8, [X19]

ISIL:
	001 Return X0

