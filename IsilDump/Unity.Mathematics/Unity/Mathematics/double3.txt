Type: Unity.Mathematics.double3

Method: System.Void .ctor(System.Double x, System.Double y, System.Double z)

Disassembly:
	0x0386F778 LDP D1, D0, [X0 + 0x8]
	0x0386F77C LDR V2, [X0]
	0x0386F780 RET

ISIL:
	001 Move [X0], D0
	002 Move [X0+8], D1
	003 Move [X0+16], D2
	004 Return 

Method: System.Void .ctor(System.Double x, Unity.Mathematics.double2 yz)

Disassembly:
	0x0386F784 STP D1, D0, [X0 + 0x8]
	0x0386F788 STR D2, [X0]
	0x0386F78C RET

ISIL:
	001 Move [X0], D0
	002 Move [X0+8], D1
	003 Move [X0+16], D2
	004 Return 

Method: System.Void .ctor(Unity.Mathematics.double2 xy, System.Double z)

Disassembly:
	0x0386F790 LDP D1, D0, [X0 + 0x8]
	0x0386F794 MOV V2.16B, V1.16B
	0x0386F798 RET

ISIL:
	001 Move [X0], D0
	002 Move [X0+8], D1
	003 Move [X0+16], D2
	004 Return 

Method: System.Void .ctor(Unity.Mathematics.double3 xyz)

Disassembly:
	0x0386F79C LDP D1, D0, [X0 + 0x8]
	0x0386F7A0 MOV V2.16B, V0.16B
	0x0386F7A4 RET

ISIL:
	001 Move [X0], D0
	002 Move [X0+8], D1
	003 Move [X0+16], D2
	004 Return 

Method: System.Void .ctor(System.Double v)

Disassembly:
	0x0386F7A8 LDR V0, [X0 + 0x10]
	0x0386F7AC LDR V2, [X0]
	0x0386F7B0 MOV V1.16B, V0.16B

ISIL:
	001 Move [X0], D0
	002 Move [X0+8], D0
	003 Move [X0+16], D0
	004 Return 

Method: System.Void .ctor(System.Boolean v)

Disassembly:
	0x0386F7B4 RET
	0x0386F7B8 LDP D2, D0, [X0 + 0x8]
	0x0386F7BC MOV V1.16B, V0.16B
	0x0386F7C0 RET
	0x0386F7C4 LDR V0, [X0 + 0x10]
	0x0386F7C8 MOV V1.16B, V0.16B
	0x0386F7CC MOV V2.16B, V0.16B

ISIL:
	001 And W31, W1, 1
	002 Move D0, X31
	003 Move D1, 1
	004 NotImplemented "Instruction FCSEL not yet implemented."
	005 Move [X0], D0
	006 Move [X0+8], D0
	007 Move [X0+16], D0
	008 Return 

Method: System.Void .ctor(Unity.Mathematics.bool3 v)

Disassembly:
	0x0386F7D0 RET
	0x0386F7D4 LDR V0, [X0]
	0x0386F7D8 MOV V1.16B, V0.16B
	0x0386F7DC RET
	0x0386F7E0 LDP D0, D1, [X0]
	0x0386F7E4 RET
	0x0386F7E8 STP D0, D1, [X0]
	0x0386F7EC RET
	0x0386F7F0 LDR V0, [X0]
	0x0386F7F4 LDR V1, [X0 + 0x10]
	0x0386F7F8 RET

ISIL:
	001 And X31, X1, 1
	002 Move D0, 1
	003 Move D1, X31
	004 NotImplemented "Instruction FCSEL not yet implemented."
	005 And X31, X1, 511
	006 NotImplemented "Instruction FCSEL not yet implemented."
	007 And X31, X1, 0x1FFFF
	008 NotImplemented "Instruction FCSEL not yet implemented."
	009 Move [X0], D2
	010 Move [X0+8], D3
	011 Move [X0+16], D0
	012 Return 

Method: System.Void .ctor(System.Int32 v)

Disassembly:
	0x0386F7FC STR D0, [X0]
	0x0386F800 STR D1, [X0 + 0x10]
	0x0386F804 RET
	0x0386F808 LDP D1, D0, [X0]

ISIL:
	001 NotImplemented "Instruction SCVTF not yet implemented."
	002 Move [X0], D0
	003 Move [X0+8], D0
	004 Move [X0+16], D0
	005 Return 

Method: System.Void .ctor(Unity.Mathematics.int3 v)

Disassembly:
	0x0386F80C RET
	0x0386F810 STP D1, D0, [X0]
	0x0386F814 RET
	0x0386F818 LDR V0, [X0 + 0x8]
	0x0386F81C MOV V1.16B, V0.16B
	0x0386F820 RET
	0x0386F824 LDP D0, D1, [X0 + 0x8]

ISIL:
	001 Move X8, X1
	002 ShiftRight X8, 32
	003 And X8, X8, 0x7FFFFFFF
	004 NotImplemented "Instruction SCVTF not yet implemented."
	005 NotImplemented "Instruction SCVTF not yet implemented."
	006 NotImplemented "Instruction SCVTF not yet implemented."
	007 Move [X0], D0
	008 Move [X0+8], D2
	009 Move [X0+16], D1
	010 Return 

Method: System.Void .ctor(System.UInt32 v)

Disassembly:
	0x0386F828 RET
	0x0386F82C STP D0, D1, [X0 + 0x8]
	0x0386F830 RET
	0x0386F834 LDR V0, [X0 + 0x10]

ISIL:
	001 NotImplemented "Instruction UCVTF not yet implemented."
	002 Move [X0], D0
	003 Move [X0+8], D0
	004 Move [X0+16], D0
	005 Return 

Method: System.Void .ctor(Unity.Mathematics.uint3 v)

Disassembly:
	0x0386F838 LDR V1, [X0]
	0x0386F83C RET
	0x0386F840 STR D0, [X0 + 0x10]
	0x0386F844 STR D1, [X0]
	0x0386F848 RET
	0x0386F84C LDP D1, D0, [X0 + 0x8]
	0x0386F850 RET

ISIL:
	001 Move X8, X1
	002 ShiftRight X8, 32
	003 And X8, X8, 0x7FFFFFFF
	004 NotImplemented "Instruction UCVTF not yet implemented."
	005 NotImplemented "Instruction UCVTF not yet implemented."
	006 NotImplemented "Instruction UCVTF not yet implemented."
	007 Move [X0], D0
	008 Move [X0+8], D2
	009 Move [X0+16], D1
	010 Return 

Method: System.Void .ctor(Unity.Mathematics.half v)

Disassembly:
	0x0386F854 STP D1, D0, [X0 + 0x8]
	0x0386F858 RET
	0x0386F85C LDR V0, [X0 + 0x10]
	0x0386F860 MOV V1.16B, V0.16B
	0x0386F864 RET
	0x0386F868 LDR V0, [X0, W1, SXTW]
	0x0386F86C RET
	0x0386F870 STR D0, [X0, W1, SXTW]
	0x0386F874 RET
	0x0386F878 LDR V3, [X0]
	0x0386F87C FCMP D3, D0
	0x0386F880 B.NE 0x386F8A0
	0x0386F884 LDR V0, [X0 + 0x8]
	0x0386F888 FCMP D0, D1
	0x0386F88C B.NE 0x386F8A0
	0x0386F890 LDR V0, [X0 + 0x10]
	0x0386F894 FCMP D0, D2
	0x0386F898 CSET W0, EQ
	0x0386F89C RET
	0x0386F8A0 MOV W0, W31
	0x0386F8A4 RET
	0x0386F8A8 STP X30, X21, [X31 - 0x20]!
	0x0386F8AC STP X20, X19, [X31 + 0x10]
	0x0386F8B0 ADRP X21, 0xB72000
	0x0386F8B4 LDRB W8, [X21 + 0x5D3]
	0x0386F8B8 MOV X20, X1
	0x0386F8BC MOV X19, X0

ISIL:
	001 And W8, W1, 0xFFFF
	002 Move W9, 0xF800000
	003 Move W10, 0xB8800000
	004 Move S0, W10
	005 And W10, W9, W8
	006 Move W11, 0x38000000
	007 NotImplemented "Instruction CMP not yet implemented."
	008 NotImplemented "Instruction CSEL not yet implemented."
	009 And W31, W9, W8
	010 Move W9, W8
	011 ShiftRight W9, 19
	012 And W9, W9, 0x3FFFF
	013 And W9, W9, 0xFFFE000
	014 Add W9, W9, W10
	015 Move W10, 0x38800000
	016 Add W10, W9, W10
	017 Move S1, W10
	018 Add S0, S1, S0
	019 Move W8, W8
	020 ShiftRight W8, 16
	021 And W8, W8, 0x7FFF
	022 Add W9, W9, W11
	023 Move W10, S0
	024 And W8, W8, 0x80000000
	025 NotImplemented "Instruction CSEL not yet implemented."
	026 Or W8, W9, W8
	027 Move S0, W8
	028 NotImplemented "Instruction FCVT not yet implemented."
	029 Move [X0], D0
	030 Move [X0+8], D0
	031 Move [X0+16], D0
	032 Return 

Method: System.Void .ctor(Unity.Mathematics.half3 v)

Disassembly:
	0x0386F8C0 TBNZ X8, 0x0, 0x386F8D8
	0x0386F8C4 ADRP X0, 0x8DB000
	0x0386F8C8 LDR X0, [X0 + 0xEA0]
	0x0386F8CC BL 0x1C16CF4
	0x0386F8D0 MOVZ W8, 0x1
	0x0386F8D4 STRB W8, [X21 + 0x5D3]
	0x0386F8D8 CBZ X20, 0x386F8F4
	0x0386F8DC ADRP X8, 0x8DB000
	0x0386F8E0 LDR X8, [X8 + 0xEA0]
	0x0386F8E4 LDR X9, [X20]
	0x0386F8E8 LDR X8, [X8]
	0x0386F8EC CMP X9, X8
	0x0386F8F0 B.EQ 0x386F904
	0x0386F8F4 MOV W0, W31
	0x0386F8F8 LDP X20, X19, [X31 + 0x10]
	0x0386F8FC LDP X30, X21, [X31], #0x20
	0x0386F900 RET
	0x0386F904 MOV X0, X20
	0x0386F908 BL 0x1C16E08
	0x0386F90C LDR V0, [X0]
	0x0386F910 LDR V1, [X19]
	0x0386F914 FCMP D1, D0
	0x0386F918 B.NE 0x386F8F4
	0x0386F91C LDR V0, [X0 + 0x8]
	0x0386F920 LDR V1, [X19 + 0x8]
	0x0386F924 FCMP D1, D0
	0x0386F928 B.NE 0x386F8F4
	0x0386F92C LDR V0, [X0 + 0x10]
	0x0386F930 LDR V1, [X19 + 0x10]
	0x0386F934 FCMP D1, D0
	0x0386F938 CSET W0, EQ
	0x0386F93C B 0x386F8F8
	0x0386F940 LDR X10, [X0 + 0x8]
	0x0386F944 LDP W11, W12, [X0 + 0x10]
	0x0386F948 LDP W8, W9, [X0]
	0x0386F94C MOVZ W13, 0x56C7
	0x0386F950 MOVK W13, 0xE4A00000
	0x0386F954 EOR W11, W12, W11, 0x0
	0x0386F958 AND X12, X10, 0x0
	0x0386F95C EOR X10, X12, X10, 0x20
	0x0386F960 MOVZ W12, 0x8225
	0x0386F964 EOR W8, W9, W8, 0x0
	0x0386F968 MOVZ W9, 0x3103
	0x0386F96C MOVK W12, 0x841D0000
	0x0386F970 MOVK W9, 0xAF0F0000
	0x0386F974 MUL W11, W11, W12
	0x0386F978 MUL X10, X10, X13
	0x0386F97C MADD W8, W8, W9, W11
	0x0386F980 UBFM X9, X10, 0x20, 0x3F
	0x0386F984 ADD W8, W8, W9
	0x0386F988 MOVZ W9, 0x3C7D
	0x0386F98C MOVK W9, 0xC9390000
	0x0386F990 ADD W0, W8, W9
	0x0386F994 RET

ISIL:
	001 Move X8, X1
	002 ShiftRight X8, 32
	003 And X8, X8, 0x7FFF
	004 Move W9, 0xF800000
	005 Move X11, X1
	006 ShiftRight X11, 16
	007 And X11, X11, 0x7FFFFFFF
	008 Move S0, W1
	009 Or W12, W31, 0xFFFE000
	010 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	011 Move W11, 0xB8800000
	012 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	013 And W12, W9, W8
	014 Move W10, 0x38000000
	015 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	016 Move S6, W11
	017 Move W11, W8
	018 ShiftRight W11, 19
	019 And W11, W11, 0x3FFFF
	020 NotImplemented "Instruction CMP not yet implemented."
	021 NotImplemented "Instruction MOVI not yet implemented."
	022 And W11, W11, 0xFFFE000
	023 NotImplemented "Instruction CSEL not yet implemented."
	024 Move W13, 0x38800000
	025 And V0, V0, V1
	026 Add W11, W11, W12
	027 NotImplemented "Instruction MOVI not yet implemented."
	028 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	029 Add W12, W11, W13
	030 And V1, V1, V3
	031 Move S3, W12
	032 Add S3, S3, S6
	033 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	034 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	035 And V4, V0, V4
	036 And V0, V0, V6
	037 NotImplemented "Instruction MOVI not yet implemented."
	038 NotImplemented "Instruction INVALID not yet implemented."
	039 And V6, V6, V2
	040 Add S4, S4, S6
	041 Move W12, S3
	042 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	043 Add S3, S4, S3
	044 Move W13, W8
	045 ShiftRight W13, 16
	046 And W13, W13, 0x7FFF
	047 And W31, W9, W8
	048 Add W8, W11, W10
	049 Add S2, S4, S2
	050 And W13, W13, 0x80000000
	051 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	052 NotImplemented "Instruction CSEL not yet implemented."
	053 Add V3, V3, V5
	054 Or W8, W8, W13
	055 NotImplemented "Instruction INVALID not yet implemented."
	056 Move S4, W8
	057 Or V0, V0, V1
	058 NotImplemented "Instruction FCVT not yet implemented."
	059 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	060 Move [X0], V0
	061 Move [X0+16], D4
	062 Return 

Method: System.Void .ctor(System.Single v)

Disassembly:
	0x0386F998 SUB X31, X31, 0x50
	0x0386F99C STP X30, X23, [X31 + 0x20]
	0x0386F9A0 STP X22, X21, [X31 + 0x30]
	0x0386F9A4 STP X20, X19, [X31 + 0x40]

ISIL:
	001 NotImplemented "Instruction FCVT not yet implemented."
	002 Move [X0], D0
	003 Move [X0+8], D0
	004 Move [X0+16], D0
	005 Return 

Method: System.Void .ctor(Unity.Mathematics.float3 v)

Disassembly:
	0x0386F9A8 ADRP X20, 0xB72000
	0x0386F9AC ADRP X23, 0x887000
	0x0386F9B0 ADRP X22, 0x8DB000
	0x0386F9B4 LDRB W8, [X20 + 0x5D4]
	0x0386F9B8 LDR X23, [X23 + 0x978]
	0x0386F9BC LDR X22, [X22 + 0xEA8]

ISIL:
	001 NotImplemented "Instruction FCVT not yet implemented."
	002 NotImplemented "Instruction FCVT not yet implemented."
	003 NotImplemented "Instruction FCVT not yet implemented."
	004 Move [X0], D0
	005 Move [X0+8], D1
	006 Move [X0+16], D2
	007 Return 

Method: Unity.Mathematics.double3 op_Implicit(System.Double v)

Disassembly:
	0x0386F9C0 MOV X19, X0
	0x0386F9C4 TBNZ X8, 0x0, 0x386F9E8
	0x0386F9C8 ADRP X0, 0x887000

ISIL:
	001 Move V1, V0
	002 Move V2, V0
	003 Return X0

Method: Unity.Mathematics.double3 op_Explicit(System.Boolean v)

Disassembly:
	0x0386F9CC LDR X0, [X0 + 0x978]
	0x0386F9D0 BL 0x1C16CF4
	0x0386F9D4 ADRP X0, 0x8DB000
	0x0386F9D8 LDR X0, [X0 + 0xEA8]
	0x0386F9DC BL 0x1C16CF4
	0x0386F9E0 MOVZ W8, 0x1
	0x0386F9E4 STRB W8, [X20 + 0x5D4]

ISIL:
	001 And W31, W0, 1
	002 Move D0, X31
	003 Move D1, 1
	004 NotImplemented "Instruction FCSEL not yet implemented."
	005 Move V1, V0
	006 Move V2, V0
	007 Return X0

Method: Unity.Mathematics.double3 op_Explicit(Unity.Mathematics.bool3 v)

Disassembly:
	0x0386F9E8 LDR V0, [X19]
	0x0386F9EC LDR X0, [X23]
	0x0386F9F0 ADD X1, X31, 0x18
	0x0386F9F4 STR D0, [X31 + 0x18]
	0x0386F9F8 BL 0x1C16E04
	0x0386F9FC MOV X20, X0
	0x0386FA00 LDR V0, [X19 + 0x8]
	0x0386FA04 LDR X0, [X23]
	0x0386FA08 ADD X1, X31, 0x10

ISIL:
	001 And X31, X0, 1
	002 Move D2, 1
	003 Move D3, X31
	004 NotImplemented "Instruction FCSEL not yet implemented."
	005 And X31, X0, 511
	006 NotImplemented "Instruction FCSEL not yet implemented."
	007 And X31, X0, 0x1FFFF
	008 NotImplemented "Instruction FCSEL not yet implemented."
	009 Return X0

Method: Unity.Mathematics.double3 op_Implicit(System.Int32 v)

Disassembly:
	0x0386FA0C STR D0, [X31 + 0x10]
	0x0386FA10 BL 0x1C16E04
	0x0386FA14 MOV X21, X0
	0x0386FA18 LDR V0, [X19 + 0x10]

ISIL:
	001 NotImplemented "Instruction SCVTF not yet implemented."
	002 Move V1, V0
	003 Move V2, V0
	004 Return X0

Method: Unity.Mathematics.double3 op_Implicit(Unity.Mathematics.int3 v)

Disassembly:
	0x0386FA1C LDR X0, [X23]
	0x0386FA20 ADD X1, X31, 0x8
	0x0386FA24 STR D0, [X31 + 0x8]
	0x0386FA28 BL 0x1C16E04
	0x0386FA2C LDR X8, [X22]

ISIL:
	001 Move X8, X0
	002 ShiftRight X8, 32
	003 And X8, X8, 0x7FFFFFFF
	004 NotImplemented "Instruction SCVTF not yet implemented."
	005 NotImplemented "Instruction SCVTF not yet implemented."
	006 NotImplemented "Instruction SCVTF not yet implemented."
	007 Return X0

Method: Unity.Mathematics.double3 op_Implicit(System.UInt32 v)

Disassembly:
	0x0386FA30 MOV X3, X0
	0x0386FA34 MOV X1, X20
	0x0386FA38 MOV X2, X21
	0x0386FA3C MOV X0, X8

ISIL:
	001 NotImplemented "Instruction UCVTF not yet implemented."
	002 Move V1, V0
	003 Move V2, V0
	004 Return X0

Method: Unity.Mathematics.double3 op_Implicit(Unity.Mathematics.uint3 v)

Disassembly:
	0x0386FA40 MOV X4, X31
	0x0386FA44 BL 0x3227C18
	0x0386FA48 LDP X20, X19, [X31 + 0x40]
	0x0386FA4C LDP X22, X21, [X31 + 0x30]
	0x0386FA50 LDP X30, X23, [X31 + 0x20]

ISIL:
	001 Move X8, X0
	002 ShiftRight X8, 32
	003 And X8, X8, 0x7FFFFFFF
	004 NotImplemented "Instruction UCVTF not yet implemented."
	005 NotImplemented "Instruction UCVTF not yet implemented."
	006 NotImplemented "Instruction UCVTF not yet implemented."
	007 Return X0

Method: Unity.Mathematics.double3 op_Implicit(Unity.Mathematics.half v)

Disassembly:
	0x0386FA54 ADD X31, X31, 0x50
	0x0386FA58 RET
	0x0386FA5C STR X30, [X31 - 0x40]!
	0x0386FA60 STP X24, X23, [X31 + 0x10]
	0x0386FA64 STP X22, X21, [X31 + 0x20]
	0x0386FA68 STP X20, X19, [X31 + 0x30]
	0x0386FA6C ADRP X22, 0xB72000
	0x0386FA70 ADRP X24, 0x8DB000
	0x0386FA74 LDRB W8, [X22 + 0x5D5]
	0x0386FA78 LDR X24, [X24 + 0xEA8]
	0x0386FA7C MOV X19, X2
	0x0386FA80 MOV X20, X1
	0x0386FA84 MOV X21, X0
	0x0386FA88 TBNZ X8, 0x0, 0x386FAA0
	0x0386FA8C ADRP X0, 0x8DB000
	0x0386FA90 LDR X0, [X0 + 0xEA8]
	0x0386FA94 BL 0x1C16CF4
	0x0386FA98 MOVZ W8, 0x1
	0x0386FA9C STRB W8, [X22 + 0x5D5]
	0x0386FAA0 MOV X0, X21
	0x0386FAA4 MOV X1, X20
	0x0386FAA8 MOV X2, X19
	0x0386FAAC MOV X3, X31
	0x0386FAB0 BL 0x336636C
	0x0386FAB4 MOV X22, X0
	0x0386FAB8 ADD X0, X21, 0x8
	0x0386FABC MOV X1, X20

ISIL:
	001 And W8, W0, 0xFFFF
	002 Move W9, 0xF800000
	003 Move W10, 0xB8800000
	004 Move S0, W10
	005 And W10, W9, W8
	006 Move W11, 0x38000000
	007 NotImplemented "Instruction CMP not yet implemented."
	008 NotImplemented "Instruction CSEL not yet implemented."
	009 And W31, W9, W8
	010 Move W9, W8
	011 ShiftRight W9, 19
	012 And W9, W9, 0x3FFFF
	013 And W9, W9, 0xFFFE000
	014 Add W9, W9, W10
	015 Move W10, 0x38800000
	016 Add W10, W9, W10
	017 Move S1, W10
	018 Add S0, S1, S0
	019 Move W8, W8
	020 ShiftRight W8, 16
	021 And W8, W8, 0x7FFF
	022 Add W9, W9, W11
	023 Move W10, S0
	024 And W8, W8, 0x80000000
	025 NotImplemented "Instruction CSEL not yet implemented."
	026 Or W8, W9, W8
	027 Move S0, W8
	028 NotImplemented "Instruction FCVT not yet implemented."
	029 Move V1, V0
	030 Move V2, V0
	031 Return X0

Method: Unity.Mathematics.double3 op_Implicit(Unity.Mathematics.half3 v)

Disassembly:
	0x0386FAC0 MOV X2, X19
	0x0386FAC4 MOV X3, X31
	0x0386FAC8 BL 0x336636C
	0x0386FACC MOV X23, X0
	0x0386FAD0 ADD X0, X21, 0x10
	0x0386FAD4 MOV X1, X20
	0x0386FAD8 MOV X2, X19
	0x0386FADC MOV X3, X31
	0x0386FAE0 BL 0x336636C
	0x0386FAE4 LDR X8, [X24]
	0x0386FAE8 MOV X1, X22
	0x0386FAEC MOV X2, X23
	0x0386FAF0 LDP X20, X19, [X31 + 0x30]
	0x0386FAF4 LDP X22, X21, [X31 + 0x20]
	0x0386FAF8 LDP X24, X23, [X31 + 0x10]
	0x0386FAFC MOV X3, X0
	0x0386FB00 MOV X0, X8
	0x0386FB04 MOV X4, X31
	0x0386FB08 LDR X30, [X31], #0x40
	0x0386FB0C B 0x3227C18
	0x0386FB10 STR D10, [X31 - 0x30]!
	0x0386FB14 STP D9, D8, [X31 + 0x10]
	0x0386FB18 STP X30, X19, [X31 + 0x20]
	0x0386FB1C MOV X1, X31
	0x0386FB20 MOV V8.16B, V2.16B
	0x0386FB24 MOV V9.16B, V1.16B
	0x0386FB28 MOV V10.16B, V0.16B
	0x0386FB2C MOV X19, X0
	0x0386FB30 BL 0x33BDD8C
	0x0386FB34 STP D10, D9, [X19 + 0x10]
	0x0386FB38 STR D8, [X19 + 0x20]
	0x0386FB3C LDP X30, X19, [X31 + 0x20]
	0x0386FB40 LDP D9, D8, [X31 + 0x10]
	0x0386FB44 LDR V10, [X31], #0x30
	0x0386FB48 RET
	0x0386FB4C STP D0, D1, [X0]
	0x0386FB50 STP D2, D3, [X0 + 0x10]
	0x0386FB54 STP D4, D5, [X0 + 0x20]
	0x0386FB58 RET
	0x0386FB5C STP D0, D2, [X0]
	0x0386FB60 STP D4, D1, [X0 + 0x10]
	0x0386FB64 STP D3, D5, [X0 + 0x20]
	0x0386FB68 RET
	0x0386FB6C STP D0, D0, [X0]
	0x0386FB70 STP D0, D0, [X0 + 0x10]
	0x0386FB74 STP D0, D0, [X0 + 0x20]
	0x0386FB78 RET
	0x0386FB7C ANDS W31, W1, 0x1
	0x0386FB80 FMOV D0, X31
	0x0386FB84 FMOV D1, 1
	0x0386FB88 FCSEL D0, D1, D0, NE
	0x0386FB8C STP D0, D0, [X0]
	0x0386FB90 STP D0, D0, [X0 + 0x10]
	0x0386FB94 STP D0, D0, [X0 + 0x20]
	0x0386FB98 RET
	0x0386FB9C ANDS X31, X1, 0x1
	0x0386FBA0 FMOV D0, 1
	0x0386FBA4 FMOV D1, X31
	0x0386FBA8 FCSEL D2, D1, D0, EQ
	0x0386FBAC ANDS X31, X1, 0x1FF
	0x0386FBB0 FCSEL D3, D1, D0, EQ
	0x0386FBB4 ANDS X31, X1, 0x1FFFF

ISIL:
	001 Move X10, X0
	002 ShiftRight X10, 32
	003 And X10, X10, 0x7FFF
	004 Move W8, 0xF800000
	005 Move W13, 0xB8800000
	006 And W14, W8, W10
	007 Move W9, 0x38000000
	008 Move S0, W13
	009 Move W13, W10
	010 ShiftRight W13, 19
	011 And W13, W13, 0x3FFFF
	012 NotImplemented "Instruction CMP not yet implemented."
	013 And W13, W13, 0xFFFE000
	014 NotImplemented "Instruction CSEL not yet implemented."
	015 Move W12, 0x38800000
	016 Add W13, W13, W14
	017 Add W14, W13, W12
	018 Move S1, W14
	019 Move X11, X0
	020 ShiftRight X11, 3
	021 And X11, X11, 0x7FFFFFFF
	022 Add S1, S1, S0
	023 And W15, W11, 0x1FFFE000
	024 And W31, W8, W10
	025 Add W13, W13, W9
	026 Move W14, S1
	027 NotImplemented "Instruction CSEL not yet implemented."
	028 And W14, W15, 0xF800000
	029 Move W10, W10
	030 ShiftRight W10, 16
	031 And W10, W10, 0x7FFF
	032 NotImplemented "Instruction CMP not yet implemented."
	033 And W10, W10, 0x80000000
	034 And W11, W11, 0xFFFE000
	035 Or W10, W13, W10
	036 NotImplemented "Instruction CSEL not yet implemented."
	037 Add W11, W11, W13
	038 Add W13, W11, W12
	039 Move S1, W13
	040 Add S1, S1, S0
	041 And W14, W0, 0xFFFF
	042 And W31, W15, 0xF800000
	043 Add W11, W11, W9
	044 Move W13, S1
	045 NotImplemented "Instruction CSEL not yet implemented."
	046 And W13, W8, W14
	047 Move W15, W14
	048 ShiftRight W15, 19
	049 And W15, W15, 0x3FFFF
	050 NotImplemented "Instruction CMP not yet implemented."
	051 And W15, W15, 0xFFFE000
	052 NotImplemented "Instruction CSEL not yet implemented."
	053 Add W13, W15, W13
	054 Add W12, W13, W12
	055 Move S1, W12
	056 Add S0, S1, S0
	057 Move S2, W10
	058 Move W10, W14
	059 ShiftRight W10, 16
	060 And W10, W10, 0x7FFF
	061 And W31, W8, W14
	062 Add W8, W13, W9
	063 Move W9, S0
	064 And W16, W0, 0x80000000
	065 And W10, W10, 0x80000000
	066 NotImplemented "Instruction CSEL not yet implemented."
	067 Or W11, W11, W16
	068 Or W8, W8, W10
	069 Move S1, W11
	070 Move S0, W8
	071 NotImplemented "Instruction FCVT not yet implemented."
	072 NotImplemented "Instruction FCVT not yet implemented."
	073 NotImplemented "Instruction FCVT not yet implemented."
	074 Return X0

Method: Unity.Mathematics.double3 op_Implicit(System.Single v)

Disassembly:
	0x0386FBB8 FCSEL D4, D1, D0, EQ
	0x0386FBBC ANDS X31, X1, 0x1FFFFFF
	0x0386FBC0 STP D2, D3, [X0]
	0x0386FBC4 FCSEL D2, D1, D0, EQ

ISIL:
	001 NotImplemented "Instruction FCVT not yet implemented."
	002 Move V1, V0
	003 Move V2, V0
	004 Return X0

Method: Unity.Mathematics.double3 op_Implicit(Unity.Mathematics.float3 v)

Disassembly:
	0x0386FBC8 ANDS X31, X1, 0x1FFFFFFFF
	0x0386FBCC FCSEL D3, D1, D0, EQ
	0x0386FBD0 ANDS X31, X1, 0x1FFFFFFFFFF
	0x0386FBD4 FCSEL D0, D1, D0, EQ

ISIL:
	001 NotImplemented "Instruction FCVT not yet implemented."
	002 NotImplemented "Instruction FCVT not yet implemented."
	003 NotImplemented "Instruction FCVT not yet implemented."
	004 Return X0

Method: Unity.Mathematics.double3 op_Multiply(Unity.Mathematics.double3 lhs, Unity.Mathematics.double3 rhs)

Disassembly:
	0x0386FBD8 STP D4, D2, [X0 + 0x10]
	0x0386FBDC STP D3, D0, [X0 + 0x20]
	0x0386FBE0 RET
	0x0386FBE4 SCVTF D0, W1

ISIL:
	001 Multiply D0, D0, D3
	002 Multiply D1, D1, D4
	003 Multiply D2, D2, D5
	004 Return X0

Method: Unity.Mathematics.double3 op_Multiply(Unity.Mathematics.double3 lhs, System.Double rhs)

Disassembly:
	0x0386FBE8 STP D0, D0, [X0]
	0x0386FBEC STP D0, D0, [X0 + 0x10]
	0x0386FBF0 STP D0, D0, [X0 + 0x20]
	0x0386FBF4 RET

ISIL:
	001 Multiply D0, D0, D3
	002 Multiply D1, D1, D3
	003 Multiply D2, D2, D3
	004 Return X0

Method: Unity.Mathematics.double3 op_Multiply(System.Double lhs, Unity.Mathematics.double3 rhs)

Disassembly:
	0x0386FBF8 LDP W8, W9, [X1]
	0x0386FBFC LDR W10, [X1 + 0x8]
	0x0386FC00 SCVTF D0, W8
	0x0386FC04 SCVTF D1, W9
	0x0386FC08 SCVTF D2, W10

ISIL:
	001 Multiply D4, D1, D0
	002 Multiply D1, D2, D0
	003 Multiply D2, D3, D0
	004 Move V0, V4
	005 Return X0

Method: Unity.Mathematics.double3 op_Addition(Unity.Mathematics.double3 lhs, Unity.Mathematics.double3 rhs)

Disassembly:
	0x0386FC0C STP D0, D1, [X0]
	0x0386FC10 STR D2, [X0 + 0x10]
	0x0386FC14 LDP W8, W9, [X1 + 0xC]
	0x0386FC18 LDR W10, [X1 + 0x14]

ISIL:
	001 Add D0, D0, D3
	002 Add D1, D1, D4
	003 Add D2, D2, D5
	004 Return X0

Method: Unity.Mathematics.double3 op_Addition(Unity.Mathematics.double3 lhs, System.Double rhs)

Disassembly:
	0x0386FC1C SCVTF D0, W8
	0x0386FC20 SCVTF D1, W9
	0x0386FC24 SCVTF D2, W10
	0x0386FC28 STP D0, D1, [X0 + 0x18]

ISIL:
	001 Add D0, D0, D3
	002 Add D1, D1, D3
	003 Add D2, D2, D3
	004 Return X0

Method: Unity.Mathematics.double3 op_Addition(System.Double lhs, Unity.Mathematics.double3 rhs)

Disassembly:
	0x0386FC2C STR D2, [X0 + 0x28]
	0x0386FC30 RET
	0x0386FC34 UCVTF D0, W1
	0x0386FC38 STP D0, D0, [X0]
	0x0386FC3C STP D0, D0, [X0 + 0x10]

ISIL:
	001 Add D4, D1, D0
	002 Add D1, D2, D0
	003 Add D2, D3, D0
	004 Move V0, V4
	005 Return X0

Method: Unity.Mathematics.double3 op_Subtraction(Unity.Mathematics.double3 lhs, Unity.Mathematics.double3 rhs)

Disassembly:
	0x0386FC40 STP D0, D0, [X0 + 0x20]
	0x0386FC44 RET
	0x0386FC48 LDP S0, S1, [X1]
	0x0386FC4C LDR V2, [X1 + 0x8]

ISIL:
	001 Subtract D0, D0, D3
	002 Subtract D1, D1, D4
	003 Subtract D2, D2, D5
	004 Return X0

Method: Unity.Mathematics.double3 op_Subtraction(Unity.Mathematics.double3 lhs, System.Double rhs)

Disassembly:
	0x0386FC50 UCVTF D0, D0
	0x0386FC54 UCVTF D1, D1
	0x0386FC58 UCVTF D2, D2
	0x0386FC5C STP D0, D1, [X0]

ISIL:
	001 Subtract D0, D0, D3
	002 Subtract D1, D1, D3
	003 Subtract D2, D2, D3
	004 Return X0

Method: Unity.Mathematics.double3 op_Subtraction(System.Double lhs, Unity.Mathematics.double3 rhs)

Disassembly:
	0x0386FC60 STR D2, [X0 + 0x10]
	0x0386FC64 LDP S0, S1, [X1 + 0xC]
	0x0386FC68 LDR V2, [X1 + 0x14]
	0x0386FC6C UCVTF D0, D0
	0x0386FC70 UCVTF D1, D1

ISIL:
	001 Subtract D4, D0, D1
	002 Subtract D1, D0, D2
	003 Subtract D2, D0, D3
	004 Move V0, V4
	005 Return X0

Method: Unity.Mathematics.double3 op_Division(Unity.Mathematics.double3 lhs, Unity.Mathematics.double3 rhs)

Disassembly:
	0x0386FC74 UCVTF D2, D2
	0x0386FC78 STP D0, D1, [X0 + 0x18]
	0x0386FC7C STR D2, [X0 + 0x28]
	0x0386FC80 RET

ISIL:
	001 NotImplemented "Instruction FDIV not yet implemented."
	002 NotImplemented "Instruction FDIV not yet implemented."
	003 NotImplemented "Instruction FDIV not yet implemented."
	004 Return X0

Method: Unity.Mathematics.double3 op_Division(Unity.Mathematics.double3 lhs, System.Double rhs)

Disassembly:
	0x0386FC84 FCVT S0, S0
	0x0386FC88 STP D0, D0, [X0]
	0x0386FC8C STP D0, D0, [X0 + 0x10]
	0x0386FC90 STP D0, D0, [X0 + 0x20]

ISIL:
	001 NotImplemented "Instruction FDIV not yet implemented."
	002 NotImplemented "Instruction FDIV not yet implemented."
	003 NotImplemented "Instruction FDIV not yet implemented."
	004 Return X0

Method: Unity.Mathematics.double3 op_Division(System.Double lhs, Unity.Mathematics.double3 rhs)

Disassembly:
	0x0386FC94 RET
	0x0386FC98 LDR V0, [X1]
	0x0386FC9C LDR V1, [X1 + 0x8]
	0x0386FCA0 UNIMPLEMENTED
	0x0386FCA4 FCVT S1, S1

ISIL:
	001 NotImplemented "Instruction FDIV not yet implemented."
	002 NotImplemented "Instruction FDIV not yet implemented."
	003 NotImplemented "Instruction FDIV not yet implemented."
	004 Move V0, V4
	005 Return X0

Method: Unity.Mathematics.double3 op_Modulus(Unity.Mathematics.double3 lhs, Unity.Mathematics.double3 rhs)

Disassembly:
	0x0386FCA8 STR V0, [X0]
	0x0386FCAC STR D1, [X0 + 0x10]
	0x0386FCB0 LDUR V0, [X1 + 0xC]
	0x0386FCB4 LDR V1, [X1 + 0x14]
	0x0386FCB8 UNIMPLEMENTED
	0x0386FCBC FCVT S1, S1
	0x0386FCC0 STUR V0, [X0 + 0x18]
	0x0386FCC4 STR D1, [X0 + 0x28]
	0x0386FCC8 RET
	0x0386FCCC STP D0, D0, [X8]
	0x0386FCD0 STP D0, D0, [X8 + 0x10]
	0x0386FCD4 STP D0, D0, [X8 + 0x20]
	0x0386FCD8 RET
	0x0386FCDC ANDS W31, W0, 0x1
	0x0386FCE0 FMOV D0, X31
	0x0386FCE4 FMOV D1, 1
	0x0386FCE8 FCSEL D0, D1, D0, NE
	0x0386FCEC STP D0, D0, [X8]
	0x0386FCF0 STP D0, D0, [X8 + 0x10]
	0x0386FCF4 STP D0, D0, [X8 + 0x20]
	0x0386FCF8 RET
	0x0386FCFC ANDS X31, X0, 0x1
	0x0386FD00 FMOV D0, 1
	0x0386FD04 FMOV D1, X31
	0x0386FD08 FCSEL D2, D1, D0, EQ
	0x0386FD0C ANDS X31, X0, 0x1FF

ISIL:
	001 Move [X31-48], D12
	002 Move [X31+8], D11
	003 Move [X31+16], D10
	004 Move [X31+24], D9
	005 Move [X31+32], D8
	006 Move [X31+40], X30
	007 Move V11, V1
	008 Move V1, V3
	009 Move V8, V5
	010 Move V9, V4
	011 Move V10, V2
	012 Call 0x3EB2C10
	013 Move V12, V0
	014 Move V0, V11
	015 Move V1, V9
	016 Call 0x3EB2C10
	017 Move V9, V0
	018 Move V0, V10
	019 Move V1, V8
	020 Call 0x3EB2C10
	021 Move V1, V9
	022 Move X30, [X31+40]
	023 Move D9, [X31+24]
	024 Move D8, [X31+32]
	025 Move D11, [X31+8]
	026 Move D10, [X31+16]
	027 Move V2, V0
	028 Move V0, V12
	029 Move V12, [X31+48]
	030 Return X0

Method: Unity.Mathematics.double3 op_Modulus(Unity.Mathematics.double3 lhs, System.Double rhs)

Disassembly:
	0x0386FD10 FCSEL D3, D1, D0, EQ
	0x0386FD14 ANDS X31, X0, 0x1FFFF
	0x0386FD18 FCSEL D4, D1, D0, EQ
	0x0386FD1C ANDS X31, X0, 0x1FFFFFF
	0x0386FD20 STP D2, D3, [X8]
	0x0386FD24 FCSEL D2, D1, D0, EQ
	0x0386FD28 ANDS X31, X0, 0x1FFFFFFFF
	0x0386FD2C FCSEL D3, D1, D0, EQ
	0x0386FD30 ANDS X31, X0, 0x1FFFFFFFFFF
	0x0386FD34 FCSEL D0, D1, D0, EQ
	0x0386FD38 STP D4, D2, [X8 + 0x10]
	0x0386FD3C STP D3, D0, [X8 + 0x20]
	0x0386FD40 RET
	0x0386FD44 SCVTF D0, W0
	0x0386FD48 STP D0, D0, [X8]
	0x0386FD4C STP D0, D0, [X8 + 0x10]
	0x0386FD50 STP D0, D0, [X8 + 0x20]
	0x0386FD54 RET
	0x0386FD58 LDP W10, W9, [X0]
	0x0386FD5C LDP W11, W12, [X0 + 0x8]
	0x0386FD60 LDP W13, W14, [X0 + 0x10]
	0x0386FD64 SCVTF D0, W10
	0x0386FD68 SCVTF D1, W9

ISIL:
	001 Move [X31-48], D11
	002 Move [X31-40], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move V10, V1
	007 Move V1, V3
	008 Move V8, V3
	009 Move V9, V2
	010 Call 0x3EB2C10
	011 Move V11, V0
	012 Move V0, V10
	013 Move V1, V8
	014 Call 0x3EB2C10
	015 Move V10, V0
	016 Move V0, V9
	017 Move V1, V8
	018 Call 0x3EB2C10
	019 Move X30, [X31+32]
	020 Move D9, [X31+16]
	021 Move D8, [X31+24]
	022 Move V2, V0
	023 Move V0, V11
	024 Move V1, V10
	025 Move D11, [X31+48]
	026 Move D10, [X31+56]
	027 Return X0

Method: Unity.Mathematics.double3 op_Modulus(System.Double lhs, Unity.Mathematics.double3 rhs)

Disassembly:
	0x0386FD6C SCVTF D2, W11
	0x0386FD70 SCVTF D3, W12
	0x0386FD74 SCVTF D4, W13
	0x0386FD78 STP D0, D1, [X8]
	0x0386FD7C SCVTF D0, W14
	0x0386FD80 STP D2, D3, [X8 + 0x10]
	0x0386FD84 STP D4, D0, [X8 + 0x20]
	0x0386FD88 RET
	0x0386FD8C UCVTF D0, W0
	0x0386FD90 STP D0, D0, [X8]
	0x0386FD94 STP D0, D0, [X8 + 0x10]
	0x0386FD98 STP D0, D0, [X8 + 0x20]
	0x0386FD9C RET
	0x0386FDA0 LDP S0, S1, [X0]
	0x0386FDA4 LDP S2, S3, [X0 + 0x8]
	0x0386FDA8 LDP S4, S5, [X0 + 0x10]
	0x0386FDAC UCVTF D0, D0
	0x0386FDB0 UCVTF D1, D1
	0x0386FDB4 UCVTF D2, D2
	0x0386FDB8 UCVTF D3, D3
	0x0386FDBC UCVTF D4, D4
	0x0386FDC0 UCVTF D5, D5

ISIL:
	001 Move [X31-48], D11
	002 Move [X31-40], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move V8, V3
	007 Move V9, V2
	008 Move V10, V0
	009 Call 0x3EB2C10
	010 Move V11, V0
	011 Move V0, V10
	012 Move V1, V9
	013 Call 0x3EB2C10
	014 Move V9, V0
	015 Move V0, V10
	016 Move V1, V8
	017 Call 0x3EB2C10
	018 Move V1, V9
	019 Move X30, [X31+32]
	020 Move D9, [X31+16]
	021 Move D8, [X31+24]
	022 Move V2, V0
	023 Move V0, V11
	024 Move D11, [X31+48]
	025 Move D10, [X31+56]
	026 Return X0

Method: Unity.Mathematics.double3 op_Increment(Unity.Mathematics.double3 val)

Disassembly:
	0x0386FDC4 STP D0, D1, [X8]
	0x0386FDC8 STP D2, D3, [X8 + 0x10]
	0x0386FDCC STP D4, D5, [X8 + 0x20]
	0x0386FDD0 RET
	0x0386FDD4 FCVT S0, S0

ISIL:
	001 Move D3, 1
	002 Add D0, D0, D3
	003 Add D1, D1, D3
	004 Add D2, D2, D3
	005 Return X0

Method: Unity.Mathematics.double3 op_Decrement(Unity.Mathematics.double3 val)

Disassembly:
	0x0386FDD8 STP D0, D0, [X8]
	0x0386FDDC STP D0, D0, [X8 + 0x10]
	0x0386FDE0 STP D0, D0, [X8 + 0x20]
	0x0386FDE4 RET
	0x0386FDE8 LDP D0, D1, [X0]

ISIL:
	001 Move D3, -1
	002 Add D0, D0, D3
	003 Add D1, D1, D3
	004 Add D2, D2, D3
	005 Return X0

Method: Unity.Mathematics.bool3 op_LessThan(Unity.Mathematics.double3 lhs, Unity.Mathematics.double3 rhs)

Disassembly:
	0x0386FDEC LDR V2, [X0 + 0x10]
	0x0386FDF0 UNIMPLEMENTED
	0x0386FDF4 UNIMPLEMENTED
	0x0386FDF8 UNIMPLEMENTED
	0x0386FDFC STP V0, V1, [X8]
	0x0386FE00 STR V2, [X8 + 0x2]
	0x0386FE04 RET
	0x0386FE08 LDP V0, V1, [X0]
	0x0386FE0C LDR V2, [X0 + 0x2]
	0x0386FE10 LDP V3, V4, [X1]

ISIL:
	001 NotImplemented "Instruction FCMP not yet implemented."
	002 NotImplemented "Instruction CSET not yet implemented."
	003 NotImplemented "Instruction FCMP not yet implemented."
	004 NotImplemented "Instruction CSET not yet implemented."
	005 NotImplemented "Instruction FCMP not yet implemented."
	006 Move X9, X9
	007 ShiftRight X9, 56
	008 And X9, X9, 0x7FFFFF
	009 NotImplemented "Instruction CSET not yet implemented."
	010 NotImplemented "Instruction BFM not yet implemented."
	011 Or X0, X9, X10
	012 Return X0

Method: Unity.Mathematics.bool3 op_LessThan(Unity.Mathematics.double3 lhs, System.Double rhs)

Disassembly:
	0x0386FE14 LDR V5, [X1 + 0x2]
	0x00000000 INVALID
	0x00000000 INVALID
	0x00000000 INVALID
	0x0386FE24 STP V0, V1, [X8]
	0x0386FE28 STR V2, [X8 + 0x2]
	0x0386FE2C RET
	0x0386FE30 LDP V1, V2, [X0]
	0x0386FE34 LDR V3, [X0 + 0x2]
	0x00000000 INVALID

ISIL:
	001 NotImplemented "Instruction FCMP not yet implemented."
	002 NotImplemented "Instruction CSET not yet implemented."
	003 NotImplemented "Instruction FCMP not yet implemented."
	004 NotImplemented "Instruction CSET not yet implemented."
	005 NotImplemented "Instruction FCMP not yet implemented."
	006 Move X9, X9
	007 ShiftRight X9, 56
	008 And X9, X9, 0x7FFFFF
	009 NotImplemented "Instruction CSET not yet implemented."
	010 NotImplemented "Instruction BFM not yet implemented."
	011 Or X0, X9, X10
	012 Return X0

Method: Unity.Mathematics.bool3 op_LessThan(System.Double lhs, Unity.Mathematics.double3 rhs)

Disassembly:
	0x00000000 INVALID
	0x00000000 INVALID
	0x0386FE44 STP V1, V2, [X8]
	0x0386FE48 STR V0, [X8 + 0x2]
	0x0386FE4C RET
	0x0386FE50 LDP V1, V2, [X0]
	0x0386FE54 LDR V3, [X0 + 0x2]
	0x00000000 INVALID
	0x00000000 INVALID
	0x00000000 INVALID

ISIL:
	001 NotImplemented "Instruction FCMP not yet implemented."
	002 NotImplemented "Instruction CSET not yet implemented."
	003 NotImplemented "Instruction FCMP not yet implemented."
	004 NotImplemented "Instruction CSET not yet implemented."
	005 NotImplemented "Instruction FCMP not yet implemented."
	006 Move X9, X9
	007 ShiftRight X9, 56
	008 And X9, X9, 0x7FFFFF
	009 NotImplemented "Instruction CSET not yet implemented."
	010 NotImplemented "Instruction BFM not yet implemented."
	011 Or X0, X9, X10
	012 Return X0

Method: Unity.Mathematics.bool3 op_LessThanOrEqual(Unity.Mathematics.double3 lhs, Unity.Mathematics.double3 rhs)

Disassembly:
	0x0386FE64 STP V1, V2, [X8]
	0x0386FE68 STR V0, [X8 + 0x2]
	0x0386FE6C RET
	0x0386FE70 LDP V0, V1, [X0]
	0x0386FE74 LDR V2, [X0 + 0x2]
	0x0386FE78 LDP V3, V4, [X1]
	0x0386FE7C LDR V5, [X1 + 0x2]
	0x0386FE80 FADD V0.2D, V0.2D, V3.2D
	0x0386FE84 FADD V1.2D, V1.2D, V4.2D
	0x0386FE88 FADD V2.2D, V2.2D, V5.2D

ISIL:
	001 NotImplemented "Instruction FCMP not yet implemented."
	002 NotImplemented "Instruction CSET not yet implemented."
	003 NotImplemented "Instruction FCMP not yet implemented."
	004 NotImplemented "Instruction CSET not yet implemented."
	005 NotImplemented "Instruction FCMP not yet implemented."
	006 Move X9, X9
	007 ShiftRight X9, 56
	008 And X9, X9, 0x7FFFFF
	009 NotImplemented "Instruction CSET not yet implemented."
	010 NotImplemented "Instruction BFM not yet implemented."
	011 Or X0, X9, X10
	012 Return X0

Method: Unity.Mathematics.bool3 op_LessThanOrEqual(Unity.Mathematics.double3 lhs, System.Double rhs)

Disassembly:
	0x0386FE8C STP V0, V1, [X8]
	0x0386FE90 STR V2, [X8 + 0x2]
	0x0386FE94 RET
	0x0386FE98 LDP V1, V2, [X0]
	0x0386FE9C LDR V3, [X0 + 0x2]
	0x0386FEA0 UNIMPLEMENTED
	0x0386FEA4 FADD V1.2D, V1.2D, V0.2D
	0x0386FEA8 FADD V2.2D, V2.2D, V0.2D
	0x0386FEAC FADD V0.2D, V3.2D, V0.2D
	0x0386FEB0 STP V1, V2, [X8]

ISIL:
	001 NotImplemented "Instruction FCMP not yet implemented."
	002 NotImplemented "Instruction CSET not yet implemented."
	003 NotImplemented "Instruction FCMP not yet implemented."
	004 NotImplemented "Instruction CSET not yet implemented."
	005 NotImplemented "Instruction FCMP not yet implemented."
	006 Move X9, X9
	007 ShiftRight X9, 56
	008 And X9, X9, 0x7FFFFF
	009 NotImplemented "Instruction CSET not yet implemented."
	010 NotImplemented "Instruction BFM not yet implemented."
	011 Or X0, X9, X10
	012 Return X0

Method: Unity.Mathematics.bool3 op_LessThanOrEqual(System.Double lhs, Unity.Mathematics.double3 rhs)

Disassembly:
	0x0386FEB4 STR V0, [X8 + 0x2]
	0x0386FEB8 RET
	0x0386FEBC LDP V1, V2, [X0]
	0x0386FEC0 LDR V3, [X0 + 0x2]
	0x0386FEC4 UNIMPLEMENTED
	0x0386FEC8 FADD V1.2D, V1.2D, V0.2D
	0x0386FECC FADD V2.2D, V2.2D, V0.2D
	0x0386FED0 FADD V0.2D, V3.2D, V0.2D
	0x0386FED4 STP V1, V2, [X8]
	0x0386FED8 STR V0, [X8 + 0x2]

ISIL:
	001 NotImplemented "Instruction FCMP not yet implemented."
	002 NotImplemented "Instruction CSET not yet implemented."
	003 NotImplemented "Instruction FCMP not yet implemented."
	004 NotImplemented "Instruction CSET not yet implemented."
	005 NotImplemented "Instruction FCMP not yet implemented."
	006 Move X9, X9
	007 ShiftRight X9, 56
	008 And X9, X9, 0x7FFFFF
	009 NotImplemented "Instruction CSET not yet implemented."
	010 NotImplemented "Instruction BFM not yet implemented."
	011 Or X0, X9, X10
	012 Return X0

Method: Unity.Mathematics.bool3 op_GreaterThan(Unity.Mathematics.double3 lhs, Unity.Mathematics.double3 rhs)

Disassembly:
	0x0386FEDC RET
	0x0386FEE0 LDP V0, V1, [X0]
	0x0386FEE4 LDR V2, [X0 + 0x2]
	0x0386FEE8 LDP V3, V4, [X1]
	0x0386FEEC LDR V5, [X1 + 0x2]
	0x0386FEF0 FSUB V0.2D, V0.2D, V3.2D
	0x0386FEF4 FSUB V1.2D, V1.2D, V4.2D
	0x0386FEF8 FSUB V2.2D, V2.2D, V5.2D
	0x0386FEFC STP V0, V1, [X8]
	0x0386FF00 STR V2, [X8 + 0x2]

ISIL:
	001 NotImplemented "Instruction FCMP not yet implemented."
	002 NotImplemented "Instruction CSET not yet implemented."
	003 NotImplemented "Instruction FCMP not yet implemented."
	004 NotImplemented "Instruction CSET not yet implemented."
	005 NotImplemented "Instruction FCMP not yet implemented."
	006 Move X9, X9
	007 ShiftRight X9, 56
	008 And X9, X9, 0x7FFFFF
	009 NotImplemented "Instruction CSET not yet implemented."
	010 NotImplemented "Instruction BFM not yet implemented."
	011 Or X0, X9, X10
	012 Return X0

Method: Unity.Mathematics.bool3 op_GreaterThan(Unity.Mathematics.double3 lhs, System.Double rhs)

Disassembly:
	0x0386FF04 RET
	0x0386FF08 LDP V1, V2, [X0]
	0x0386FF0C LDR V3, [X0 + 0x2]
	0x0386FF10 UNIMPLEMENTED
	0x0386FF14 FSUB V1.2D, V1.2D, V0.2D
	0x0386FF18 FSUB V2.2D, V2.2D, V0.2D
	0x0386FF1C FSUB V0.2D, V3.2D, V0.2D
	0x0386FF20 STP V1, V2, [X8]
	0x0386FF24 STR V0, [X8 + 0x2]
	0x0386FF28 RET

ISIL:
	001 NotImplemented "Instruction FCMP not yet implemented."
	002 NotImplemented "Instruction CSET not yet implemented."
	003 NotImplemented "Instruction FCMP not yet implemented."
	004 NotImplemented "Instruction CSET not yet implemented."
	005 NotImplemented "Instruction FCMP not yet implemented."
	006 Move X9, X9
	007 ShiftRight X9, 56
	008 And X9, X9, 0x7FFFFF
	009 NotImplemented "Instruction CSET not yet implemented."
	010 NotImplemented "Instruction BFM not yet implemented."
	011 Or X0, X9, X10
	012 Return X0

Method: Unity.Mathematics.bool3 op_GreaterThan(System.Double lhs, Unity.Mathematics.double3 rhs)

Disassembly:
	0x0386FF2C LDP V1, V2, [X0]
	0x0386FF30 LDR V3, [X0 + 0x2]
	0x0386FF34 UNIMPLEMENTED
	0x0386FF38 FSUB V1.2D, V0.2D, V1.2D
	0x0386FF3C FSUB V2.2D, V0.2D, V2.2D
	0x0386FF40 FSUB V0.2D, V0.2D, V3.2D
	0x0386FF44 STP V1, V2, [X8]
	0x0386FF48 STR V0, [X8 + 0x2]
	0x0386FF4C RET
	0x0386FF50 LDP V0, V1, [X0]

ISIL:
	001 NotImplemented "Instruction FCMP not yet implemented."
	002 NotImplemented "Instruction CSET not yet implemented."
	003 NotImplemented "Instruction FCMP not yet implemented."
	004 NotImplemented "Instruction CSET not yet implemented."
	005 NotImplemented "Instruction FCMP not yet implemented."
	006 Move X9, X9
	007 ShiftRight X9, 56
	008 And X9, X9, 0x7FFFFF
	009 NotImplemented "Instruction CSET not yet implemented."
	010 NotImplemented "Instruction BFM not yet implemented."
	011 Or X0, X9, X10
	012 Return X0

Method: Unity.Mathematics.bool3 op_GreaterThanOrEqual(Unity.Mathematics.double3 lhs, Unity.Mathematics.double3 rhs)

Disassembly:
	0x0386FF54 LDR V2, [X0 + 0x2]
	0x0386FF58 LDP V3, V4, [X1]
	0x0386FF5C LDR V5, [X1 + 0x2]
	0x00000000 INVALID
	0x00000000 INVALID
	0x00000000 INVALID
	0x0386FF6C STP V0, V1, [X8]
	0x0386FF70 STR V2, [X8 + 0x2]
	0x0386FF74 RET
	0x0386FF78 LDP V1, V2, [X0]

ISIL:
	001 NotImplemented "Instruction FCMP not yet implemented."
	002 NotImplemented "Instruction CSET not yet implemented."
	003 NotImplemented "Instruction FCMP not yet implemented."
	004 NotImplemented "Instruction CSET not yet implemented."
	005 NotImplemented "Instruction FCMP not yet implemented."
	006 Move X9, X9
	007 ShiftRight X9, 56
	008 And X9, X9, 0x7FFFFF
	009 NotImplemented "Instruction CSET not yet implemented."
	010 NotImplemented "Instruction BFM not yet implemented."
	011 Or X0, X9, X10
	012 Return X0

Method: Unity.Mathematics.bool3 op_GreaterThanOrEqual(Unity.Mathematics.double3 lhs, System.Double rhs)

Disassembly:
	0x0386FF7C LDR V3, [X0 + 0x2]
	0x0386FF80 UNIMPLEMENTED
	0x00000000 INVALID
	0x00000000 INVALID
	0x00000000 INVALID
	0x0386FF90 STP V1, V2, [X8]
	0x0386FF94 STR V0, [X8 + 0x2]
	0x0386FF98 RET
	0x0386FF9C LDP V1, V2, [X0]
	0x0386FFA0 LDR V3, [X0 + 0x2]

ISIL:
	001 NotImplemented "Instruction FCMP not yet implemented."
	002 NotImplemented "Instruction CSET not yet implemented."
	003 NotImplemented "Instruction FCMP not yet implemented."
	004 NotImplemented "Instruction CSET not yet implemented."
	005 NotImplemented "Instruction FCMP not yet implemented."
	006 Move X9, X9
	007 ShiftRight X9, 56
	008 And X9, X9, 0x7FFFFF
	009 NotImplemented "Instruction CSET not yet implemented."
	010 NotImplemented "Instruction BFM not yet implemented."
	011 Or X0, X9, X10
	012 Return X0

Method: Unity.Mathematics.bool3 op_GreaterThanOrEqual(System.Double lhs, Unity.Mathematics.double3 rhs)

Disassembly:
	0x0386FFA4 UNIMPLEMENTED
	0x00000000 INVALID
	0x00000000 INVALID
	0x00000000 INVALID
	0x0386FFB4 STP V1, V2, [X8]
	0x0386FFB8 STR V0, [X8 + 0x2]
	0x0386FFBC RET
	0x0386FFC0 STP D15, D14, [X31 - 0x60]!
	0x0386FFC4 STP D13, D12, [X31 + 0x10]
	0x0386FFC8 STP D11, D10, [X31 + 0x20]

ISIL:
	001 NotImplemented "Instruction FCMP not yet implemented."
	002 NotImplemented "Instruction CSET not yet implemented."
	003 NotImplemented "Instruction FCMP not yet implemented."
	004 NotImplemented "Instruction CSET not yet implemented."
	005 NotImplemented "Instruction FCMP not yet implemented."
	006 Move X9, X9
	007 ShiftRight X9, 56
	008 And X9, X9, 0x7FFFFF
	009 NotImplemented "Instruction CSET not yet implemented."
	010 NotImplemented "Instruction BFM not yet implemented."
	011 Or X0, X9, X10
	012 Return X0

Method: Unity.Mathematics.double3 op_UnaryNegation(Unity.Mathematics.double3 val)

Disassembly:
	0x0386FFCC STP D9, D8, [X31 + 0x30]
	0x0386FFD0 STP X30, X21, [X31 + 0x40]
	0x0386FFD4 STP X20, X19, [X31 + 0x50]
	0x0386FFD8 LDP D0, D8, [X0]

ISIL:
	001 NotImplemented "Instruction FNEG not yet implemented."
	002 NotImplemented "Instruction FNEG not yet implemented."
	003 NotImplemented "Instruction FNEG not yet implemented."
	004 Return X0

Method: Unity.Mathematics.double3 op_UnaryPlus(Unity.Mathematics.double3 val)

Disassembly:
	0x0386FFDC LDP D1, D10, [X1]

ISIL:
	001 Return X0

Method: Unity.Mathematics.bool3 op_Equality(Unity.Mathematics.double3 lhs, Unity.Mathematics.double3 rhs)

Disassembly:
	0x0386FFE0 LDR V9, [X0 + 0x10]
	0x0386FFE4 LDR V11, [X1 + 0x10]
	0x0386FFE8 MOV X19, X1
	0x0386FFEC MOV X20, X0
	0x0386FFF0 MOV X21, X8
	0x0386FFF4 BL 0x3EB1C10
	0x0386FFF8 MOV V12.16B, V0.16B
	0x0386FFFC MOV V0.16B, V8.16B
	0x03870000 MOV V1.16B, V10.16B
	0x03870004 BL 0x3EB1C10

ISIL:
	001 NotImplemented "Instruction FCMP not yet implemented."
	002 NotImplemented "Instruction CSET not yet implemented."
	003 NotImplemented "Instruction FCMP not yet implemented."
	004 NotImplemented "Instruction CSET not yet implemented."
	005 NotImplemented "Instruction FCMP not yet implemented."
	006 Move X9, X9
	007 ShiftRight X9, 56
	008 And X9, X9, 0x7FFFFF
	009 NotImplemented "Instruction CSET not yet implemented."
	010 NotImplemented "Instruction BFM not yet implemented."
	011 Or X0, X9, X10
	012 Return X0

Method: Unity.Mathematics.bool3 op_Equality(Unity.Mathematics.double3 lhs, System.Double rhs)

Disassembly:
	0x03870008 MOV V8.16B, V0.16B
	0x0387000C MOV V0.16B, V9.16B
	0x03870010 MOV V1.16B, V11.16B
	0x03870014 BL 0x3EB1C10
	0x03870018 LDP D2, D9, [X20 + 0x18]
	0x0387001C LDP D1, D11, [X19 + 0x18]
	0x03870020 LDR V10, [X20 + 0x28]
	0x03870024 LDR V13, [X19 + 0x28]
	0x03870028 MOV V14.16B, V0.16B
	0x0387002C MOV V0.16B, V2.16B

ISIL:
	001 NotImplemented "Instruction FCMP not yet implemented."
	002 NotImplemented "Instruction CSET not yet implemented."
	003 NotImplemented "Instruction FCMP not yet implemented."
	004 NotImplemented "Instruction CSET not yet implemented."
	005 NotImplemented "Instruction FCMP not yet implemented."
	006 Move X9, X9
	007 ShiftRight X9, 56
	008 And X9, X9, 0x7FFFFF
	009 NotImplemented "Instruction CSET not yet implemented."
	010 NotImplemented "Instruction BFM not yet implemented."
	011 Or X0, X9, X10
	012 Return X0

Method: Unity.Mathematics.bool3 op_Equality(System.Double lhs, Unity.Mathematics.double3 rhs)

Disassembly:
	0x03870030 BL 0x3EB1C10
	0x03870034 MOV V15.16B, V0.16B
	0x03870038 MOV V0.16B, V9.16B
	0x0387003C MOV V1.16B, V11.16B
	0x03870040 BL 0x3EB1C10
	0x03870044 MOV V9.16B, V0.16B
	0x03870048 MOV V0.16B, V10.16B
	0x0387004C MOV V1.16B, V13.16B
	0x03870050 BL 0x3EB1C10
	0x03870054 STP D12, D8, [X21]

ISIL:
	001 NotImplemented "Instruction FCMP not yet implemented."
	002 NotImplemented "Instruction CSET not yet implemented."
	003 NotImplemented "Instruction FCMP not yet implemented."
	004 NotImplemented "Instruction CSET not yet implemented."
	005 NotImplemented "Instruction FCMP not yet implemented."
	006 Move X9, X9
	007 ShiftRight X9, 56
	008 And X9, X9, 0x7FFFFF
	009 NotImplemented "Instruction CSET not yet implemented."
	010 NotImplemented "Instruction BFM not yet implemented."
	011 Or X0, X9, X10
	012 Return X0

Method: Unity.Mathematics.bool3 op_Inequality(Unity.Mathematics.double3 lhs, Unity.Mathematics.double3 rhs)

Disassembly:
	0x03870058 STP D14, D15, [X21 + 0x10]
	0x0387005C STP D9, D0, [X21 + 0x20]
	0x03870060 LDP X20, X19, [X31 + 0x50]
	0x03870064 LDP X30, X21, [X31 + 0x40]
	0x03870068 LDP D9, D8, [X31 + 0x30]
	0x0387006C LDP D11, D10, [X31 + 0x20]
	0x03870070 LDP D13, D12, [X31 + 0x10]
	0x03870074 LDP D15, D14, [X31], #0x60
	0x03870078 RET
	0x0387007C STR D14, [X31 - 0x50]!

ISIL:
	001 NotImplemented "Instruction FCMP not yet implemented."
	002 NotImplemented "Instruction CSET not yet implemented."
	003 NotImplemented "Instruction FCMP not yet implemented."
	004 NotImplemented "Instruction CSET not yet implemented."
	005 NotImplemented "Instruction FCMP not yet implemented."
	006 Move X9, X9
	007 ShiftRight X9, 56
	008 And X9, X9, 0x7FFFFF
	009 NotImplemented "Instruction CSET not yet implemented."
	010 NotImplemented "Instruction BFM not yet implemented."
	011 Or X0, X9, X10
	012 Return X0

Method: Unity.Mathematics.bool3 op_Inequality(Unity.Mathematics.double3 lhs, System.Double rhs)

Disassembly:
	0x03870080 STP D13, D12, [X31 + 0x8]
	0x03870084 STP D11, D10, [X31 + 0x18]
	0x03870088 STP D9, D8, [X31 + 0x28]
	0x0387008C STR X30, [X31 + 0x38]
	0x03870090 STP X20, X19, [X31 + 0x40]
	0x03870094 MOV V8.16B, V0.16B
	0x03870098 LDP D0, D9, [X0]
	0x0387009C LDR V10, [X0 + 0x10]
	0x038700A0 MOV V1.16B, V8.16B
	0x038700A4 MOV X19, X0

ISIL:
	001 NotImplemented "Instruction FCMP not yet implemented."
	002 NotImplemented "Instruction CSET not yet implemented."
	003 NotImplemented "Instruction FCMP not yet implemented."
	004 NotImplemented "Instruction CSET not yet implemented."
	005 NotImplemented "Instruction FCMP not yet implemented."
	006 Move X9, X9
	007 ShiftRight X9, 56
	008 And X9, X9, 0x7FFFFF
	009 NotImplemented "Instruction CSET not yet implemented."
	010 NotImplemented "Instruction BFM not yet implemented."
	011 Or X0, X9, X10
	012 Return X0

Method: Unity.Mathematics.bool3 op_Inequality(System.Double lhs, Unity.Mathematics.double3 rhs)

Disassembly:
	0x038700A8 MOV X20, X8
	0x038700AC BL 0x3EB1C10
	0x038700B0 MOV V11.16B, V0.16B
	0x038700B4 MOV V0.16B, V9.16B
	0x038700B8 MOV V1.16B, V8.16B
	0x038700BC BL 0x3EB1C10
	0x038700C0 MOV V9.16B, V0.16B
	0x038700C4 MOV V0.16B, V10.16B
	0x038700C8 MOV V1.16B, V8.16B
	0x038700CC BL 0x3EB1C10

ISIL:
	001 NotImplemented "Instruction FCMP not yet implemented."
	002 NotImplemented "Instruction CSET not yet implemented."
	003 NotImplemented "Instruction FCMP not yet implemented."
	004 NotImplemented "Instruction CSET not yet implemented."
	005 NotImplemented "Instruction FCMP not yet implemented."
	006 Move X9, X9
	007 ShiftRight X9, 56
	008 And X9, X9, 0x7FFFFF
	009 NotImplemented "Instruction CSET not yet implemented."
	010 NotImplemented "Instruction BFM not yet implemented."
	011 Or X0, X9, X10
	012 Return X0

Method: Unity.Mathematics.double4 get_xxxx()

Disassembly:
	0x038700D0 LDP D1, D10, [X19 + 0x18]
	0x038700D4 LDR V12, [X19 + 0x28]
	0x038700D8 MOV V13.16B, V0.16B
	0x038700DC MOV V0.16B, V1.16B
	0x038700E0 MOV V1.16B, V8.16B

ISIL:
	001 Move V0, [X0]
	002 Move V1, V0
	003 Move V2, V0
	004 Move V3, V0
	005 Return X0

Method: Unity.Mathematics.double4 get_xxxy()

Disassembly:
	0x038700E4 BL 0x3EB1C10
	0x038700E8 MOV V14.16B, V0.16B
	0x038700EC MOV V0.16B, V10.16B
	0x038700F0 MOV V1.16B, V8.16B

ISIL:
	001 Move D0, [X0]
	002 Move D3, [X0+8]
	003 Move V1, V0
	004 Move V2, V0
	005 Return X0

Method: Unity.Mathematics.double4 get_xxxz()

Disassembly:
	0x038700F4 BL 0x3EB1C10
	0x038700F8 MOV V10.16B, V0.16B
	0x038700FC MOV V0.16B, V12.16B
	0x03870100 MOV V1.16B, V8.16B
	0x03870104 BL 0x3EB1C10

ISIL:
	001 Move V0, [X0]
	002 Move V3, [X0+16]
	003 Move V1, V0
	004 Move V2, V0
	005 Return X0

Method: Unity.Mathematics.double4 get_xxyx()

Disassembly:
	0x03870108 STP D11, D9, [X20]
	0x0387010C STP D13, D14, [X20 + 0x10]
	0x03870110 STP D10, D0, [X20 + 0x20]
	0x03870114 LDP X20, X19, [X31 + 0x40]

ISIL:
	001 Move D0, [X0]
	002 Move D2, [X0+8]
	003 Move V1, V0
	004 Move V3, V0
	005 Return X0

Method: Unity.Mathematics.double4 get_xxyy()

Disassembly:
	0x03870118 LDR X30, [X31 + 0x38]
	0x0387011C LDP D9, D8, [X31 + 0x28]
	0x03870120 LDP D11, D10, [X31 + 0x18]
	0x03870124 LDP D13, D12, [X31 + 0x8]

ISIL:
	001 Move D0, [X0]
	002 Move D2, [X0+8]
	003 Move V1, V0
	004 Move V3, V2
	005 Return X0

Method: Unity.Mathematics.double4 get_xxyz()

Disassembly:
	0x03870128 LDR V14, [X31], #0x50
	0x0387012C RET
	0x03870130 STR D14, [X31 - 0x50]!
	0x03870134 STP D13, D12, [X31 + 0x8]

ISIL:
	001 Move D0, [X0]
	002 Move D2, [X0+8]
	003 Move V3, [X0+16]
	004 Move V1, V0
	005 Return X0

Method: Unity.Mathematics.double4 get_xxzx()

Disassembly:
	0x03870138 STP D11, D10, [X31 + 0x18]
	0x0387013C STP D9, D8, [X31 + 0x28]
	0x03870140 STR X30, [X31 + 0x38]
	0x03870144 STP X20, X19, [X31 + 0x40]
	0x03870148 LDP D1, D9, [X0]

ISIL:
	001 Move V0, [X0]
	002 Move V2, [X0+16]
	003 Move V1, V0
	004 Move V3, V0
	005 Return X0

Method: Unity.Mathematics.double4 get_xxzy()

Disassembly:
	0x0387014C LDR V10, [X0 + 0x10]
	0x03870150 MOV X19, X0
	0x03870154 MOV V8.16B, V0.16B
	0x03870158 MOV X20, X8

ISIL:
	001 Move V0, [X0]
	002 Move D3, [X0+8]
	003 Move D2, [X0+16]
	004 Move V1, V0
	005 Return X0

Method: Unity.Mathematics.double4 get_xxzz()

Disassembly:
	0x0387015C BL 0x3EB1C10
	0x03870160 MOV V11.16B, V0.16B
	0x03870164 MOV V0.16B, V8.16B
	0x03870168 MOV V1.16B, V9.16B
	0x0387016C BL 0x3EB1C10

ISIL:
	001 Move V0, [X0]
	002 Move V2, [X0+16]
	003 Move V1, V0
	004 Move V3, V2
	005 Return X0

Method: Unity.Mathematics.double4 get_xyxx()

Disassembly:
	0x03870170 MOV V9.16B, V0.16B
	0x03870174 MOV V0.16B, V8.16B
	0x03870178 MOV V1.16B, V10.16B
	0x0387017C BL 0x3EB1C10

ISIL:
	001 Move D0, [X0]
	002 Move D1, [X0+8]
	003 Move V2, V0
	004 Move V3, V0
	005 Return X0

Method: Unity.Mathematics.double4 get_xyxy()

Disassembly:
	0x03870180 LDP D1, D10, [X19 + 0x18]
	0x03870184 LDR V12, [X19 + 0x28]
	0x03870188 MOV V13.16B, V0.16B
	0x0387018C MOV V0.16B, V8.16B

ISIL:
	001 Move D0, [X0]
	002 Move D1, [X0+8]
	003 Move V2, V0
	004 Move V3, V1
	005 Return X0

Method: Unity.Mathematics.double4 get_xyxz()

Disassembly:
	0x03870190 BL 0x3EB1C10
	0x03870194 MOV V14.16B, V0.16B
	0x03870198 MOV V0.16B, V8.16B
	0x0387019C MOV V1.16B, V10.16B

ISIL:
	001 Move D0, [X0]
	002 Move D1, [X0+8]
	003 Move V3, [X0+16]
	004 Move V2, V0
	005 Return X0

Method: Unity.Mathematics.double4 get_xyyx()

Disassembly:
	0x038701A0 BL 0x3EB1C10
	0x038701A4 MOV V10.16B, V0.16B
	0x038701A8 MOV V0.16B, V8.16B
	0x038701AC MOV V1.16B, V12.16B

ISIL:
	001 Move D0, [X0]
	002 Move D1, [X0+8]
	003 Move V2, V1
	004 Move V3, V0
	005 Return X0

Method: Unity.Mathematics.double4 get_xyyy()

Disassembly:
	0x038701B0 BL 0x3EB1C10
	0x038701B4 STP D11, D9, [X20]
	0x038701B8 STP D13, D14, [X20 + 0x10]
	0x038701BC STP D10, D0, [X20 + 0x20]

ISIL:
	001 Move D0, [X0]
	002 Move D1, [X0+8]
	003 Move V2, V1
	004 Move V3, V1
	005 Return X0

Method: Unity.Mathematics.double4 get_xyyz()

Disassembly:
	0x038701C0 LDP X20, X19, [X31 + 0x40]
	0x038701C4 LDR X30, [X31 + 0x38]
	0x038701C8 LDP D9, D8, [X31 + 0x28]
	0x038701CC LDP D11, D10, [X31 + 0x18]

ISIL:
	001 Move D0, [X0]
	002 Move D1, [X0+8]
	003 Move V3, [X0+16]
	004 Move V2, V1
	005 Return X0

Method: Unity.Mathematics.double4 get_xyzx()

Disassembly:
	0x038701D0 LDP D13, D12, [X31 + 0x8]
	0x038701D4 LDR V14, [X31], #0x50
	0x038701D8 RET
	0x038701DC LDP V0, V1, [X0]

ISIL:
	001 Move D0, [X0]
	002 Move D1, [X0+8]
	003 Move V2, [X0+16]
	004 Move V3, V0
	005 Return X0

Method: Unity.Mathematics.double4 get_xyzy()

Disassembly:
	0x038701E0 LDR V2, [X0 + 0x2]
	0x038701E4 FMOV V3.2D, 0xFE000000000000
	0x038701E8 FADD V0.2D, V0.2D, V3.2D
	0x038701EC FADD V1.2D, V1.2D, V3.2D

ISIL:
	001 Move D0, [X0]
	002 Move D1, [X0+8]
	003 Move V2, [X0+16]
	004 Move V3, V1
	005 Return X0

Method: Unity.Mathematics.double4 get_xyzz()

Disassembly:
	0x038701F0 FADD V2.2D, V2.2D, V3.2D
	0x038701F4 STP V0, V1, [X0]
	0x038701F8 STR V2, [X0 + 0x2]
	0x038701FC STP V0, V1, [X8]

ISIL:
	001 Move V2, [X0+16]
	002 Move D0, [X0]
	003 Move D1, [X0+8]
	004 Move V3, V2
	005 Return X0

Method: Unity.Mathematics.double4 get_xzxx()

Disassembly:
	0x03870200 STR V2, [X8 + 0x2]
	0x03870204 RET
	0x03870208 LDP V0, V1, [X0]
	0x0387020C LDR V2, [X0 + 0x2]
	0x03870210 FMOV V3.2D, 0x2FE000000000000

ISIL:
	001 Move V0, [X0]
	002 Move V1, [X0+16]
	003 Move V2, V0
	004 Move V3, V0
	005 Return X0

Method: Unity.Mathematics.double4 get_xzxy()

Disassembly:
	0x03870214 FADD V0.2D, V0.2D, V3.2D
	0x03870218 FADD V1.2D, V1.2D, V3.2D
	0x0387021C FADD V2.2D, V2.2D, V3.2D
	0x03870220 STP V0, V1, [X0]

ISIL:
	001 Move V0, [X0]
	002 Move D3, [X0+8]
	003 Move D1, [X0+16]
	004 Move V2, V0
	005 Return X0

Method: Unity.Mathematics.double4 get_xzxz()

Disassembly:
	0x03870224 STR V2, [X0 + 0x2]
	0x03870228 STP V0, V1, [X8]
	0x0387022C STR V2, [X8 + 0x2]
	0x03870230 RET
	0x03870234 LDP D2, D0, [X0]

ISIL:
	001 Move V0, [X0]
	002 Move V1, [X0+16]
	003 Move V2, V0
	004 Move V3, V1
	005 Return X0

Method: Unity.Mathematics.double4 get_xzyx()

Disassembly:
	0x03870238 LDP D1, D3, [X1 + 0x8]
	0x0387023C LDR V4, [X1]
	0x03870240 FCMP D0, D1
	0x03870244 LDP D0, D1, [X0 + 0x10]

ISIL:
	001 Move V0, [X0]
	002 Move D2, [X0+8]
	003 Move D1, [X0+16]
	004 Move V3, V0
	005 Return X0

Method: Unity.Mathematics.double4 get_xzyy()

Disassembly:
	0x03870248 CSET W8, MI
	0x0387024C FCMP D0, D3
	0x03870250 LDP D5, D0, [X1 + 0x18]
	0x03870254 CSET W9, MI

ISIL:
	001 Move D2, [X0+8]
	002 Move D1, [X0+16]
	003 Move V0, [X0]
	004 Move V3, V2
	005 Return X0

Method: Unity.Mathematics.double4 get_xzyz()

Disassembly:
	0x03870258 FCMP D2, D4
	0x0387025C LDP D2, D3, [X0 + 0x20]
	0x03870260 LDR V4, [X1 + 0x28]
	0x03870264 CSET W10, MI

ISIL:
	001 Move D2, [X0+8]
	002 Move D1, [X0+16]
	003 Move V0, [X0]
	004 Move V3, V1
	005 Return X0

Method: Unity.Mathematics.double4 get_xzzx()

Disassembly:
	0x03870268 BFM X10, X8, 0x38, 0x0
	0x0387026C FCMP D2, D0
	0x03870270 CSET W11, MI
	0x03870274 FCMP D3, D4
	0x03870278 CSET W8, MI

ISIL:
	001 Move V0, [X0]
	002 Move V1, [X0+16]
	003 Move V3, V0
	004 Move V2, V1
	005 Return X0

Method: Unity.Mathematics.double4 get_xzzy()

Disassembly:
	0x0387027C FCMP D1, D5
	0x03870280 CSET W12, MI
	0x03870284 ORR X11, X12, X11, 0x8
	0x03870288 ORR X8, X11, X8, 0x10

ISIL:
	001 Move D3, [X0+8]
	002 Move D1, [X0+16]
	003 Move V0, [X0]
	004 Move V2, V1
	005 Return X0

Method: Unity.Mathematics.double4 get_xzzz()

Disassembly:
	0x0387028C BFM X10, X9, 0x30, 0x0
	0x03870290 ORR X0, X10, X8, 0x18
	0x03870294 RET
	0x03870298 LDP D2, D1, [X0]
	0x0387029C FCMP D1, D0

ISIL:
	001 Move V1, [X0+16]
	002 Move V0, [X0]
	003 Move V2, V1
	004 Move V3, V1
	005 Return X0

Method: Unity.Mathematics.double4 get_yxxx()

Disassembly:
	0x038702A0 LDP D3, D1, [X0 + 0x10]
	0x038702A4 CSET W8, MI
	0x038702A8 FCMP D3, D0
	0x038702AC CSET W9, MI

ISIL:
	001 Move D1, [X0]
	002 Move D0, [X0+8]
	003 Move V2, V1
	004 Move V3, V1
	005 Return X0

Method: Unity.Mathematics.double4 get_yxxy()

Disassembly:
	0x038702B0 FCMP D2, D0
	0x038702B4 LDP D3, D2, [X0 + 0x20]
	0x038702B8 CSET W10, MI
	0x038702BC BFM X10, X8, 0x38, 0x0

ISIL:
	001 Move D1, [X0]
	002 Move D0, [X0+8]
	003 Move V2, V1
	004 Move V3, V0
	005 Return X0

Method: Unity.Mathematics.double4 get_yxxz()

Disassembly:
	0x038702C0 BFM X10, X9, 0x30, 0x0
	0x038702C4 FCMP D3, D0
	0x038702C8 CSET W11, MI
	0x038702CC FCMP D2, D0

ISIL:
	001 Move D1, [X0]
	002 Move D0, [X0+8]
	003 Move V3, [X0+16]
	004 Move V2, V1
	005 Return X0

Method: Unity.Mathematics.double4 get_yxyx()

Disassembly:
	0x038702D0 CSET W8, MI
	0x038702D4 FCMP D1, D0
	0x038702D8 CSET W12, MI
	0x038702DC ORR X11, X12, X11, 0x8

ISIL:
	001 Move D1, [X0]
	002 Move D0, [X0+8]
	003 Move V2, V0
	004 Move V3, V1
	005 Return X0

Method: Unity.Mathematics.double4 get_yxyy()

Disassembly:
	0x038702E0 ORR X8, X11, X8, 0x10
	0x038702E4 ORR X0, X10, X8, 0x18
	0x038702E8 RET
	0x038702EC LDP D2, D1, [X0]

ISIL:
	001 Move D1, [X0]
	002 Move D0, [X0+8]
	003 Move V2, V0
	004 Move V3, V0
	005 Return X0

Method: Unity.Mathematics.double4 get_yxyz()

Disassembly:
	0x038702F0 FCMP D1, D0
	0x038702F4 LDP D3, D1, [X0 + 0x10]
	0x038702F8 CSET W8, GT
	0x038702FC FCMP D3, D0

ISIL:
	001 Move D1, [X0]
	002 Move D0, [X0+8]
	003 Move V3, [X0+16]
	004 Move V2, V0
	005 Return X0

Method: Unity.Mathematics.double4 get_yxzx()

Disassembly:
	0x03870300 CSET W9, GT
	0x03870304 FCMP D2, D0
	0x03870308 LDP D3, D2, [X0 + 0x20]
	0x0387030C CSET W10, GT

ISIL:
	001 Move D1, [X0]
	002 Move D0, [X0+8]
	003 Move V2, [X0+16]
	004 Move V3, V1
	005 Return X0

Method: Unity.Mathematics.double4 get_yxzy()

Disassembly:
	0x03870310 BFM X10, X8, 0x38, 0x0
	0x03870314 BFM X10, X9, 0x30, 0x0
	0x03870318 FCMP D3, D0
	0x0387031C CSET W11, GT

ISIL:
	001 Move D1, [X0]
	002 Move D0, [X0+8]
	003 Move V2, [X0+16]
	004 Move V3, V0
	005 Return X0

Method: Unity.Mathematics.double4 get_yxzz()

Disassembly:
	0x03870320 FCMP D2, D0
	0x03870324 CSET W8, GT
	0x03870328 FCMP D1, D0
	0x0387032C CSET W12, GT

ISIL:
	001 Move V2, [X0+16]
	002 Move D1, [X0]
	003 Move D0, [X0+8]
	004 Move V3, V2
	005 Return X0

Method: Unity.Mathematics.double4 get_yyxx()

Disassembly:
	0x03870330 ORR X11, X12, X11, 0x8
	0x03870334 ORR X8, X11, X8, 0x10
	0x03870338 ORR X0, X10, X8, 0x18
	0x0387033C RET

ISIL:
	001 Move D2, [X0]
	002 Move D0, [X0+8]
	003 Move V1, V0
	004 Move V3, V2
	005 Return X0

Method: Unity.Mathematics.double4 get_yyxy()

Disassembly:
	0x03870340 LDP D2, D0, [X0]
	0x03870344 LDP D1, D3, [X1 + 0x8]
	0x03870348 LDR V4, [X1]
	0x0387034C FCMP D0, D1

ISIL:
	001 Move D2, [X0]
	002 Move D0, [X0+8]
	003 Move V1, V0
	004 Move V3, V0
	005 Return X0

Method: Unity.Mathematics.double4 get_yyxz()

Disassembly:
	0x03870350 LDP D0, D1, [X0 + 0x10]
	0x03870354 CSET W8, LS
	0x03870358 FCMP D0, D3
	0x0387035C LDP D5, D0, [X1 + 0x18]

ISIL:
	001 Move D2, [X0]
	002 Move D0, [X0+8]
	003 Move V3, [X0+16]
	004 Move V1, V0
	005 Return X0

Method: Unity.Mathematics.double4 get_yyyx()

Disassembly:
	0x03870360 CSET W9, LS
	0x03870364 FCMP D2, D4
	0x03870368 LDP D2, D3, [X0 + 0x20]
	0x0387036C LDR V4, [X1 + 0x28]

ISIL:
	001 Move D3, [X0]
	002 Move D0, [X0+8]
	003 Move V1, V0
	004 Move V2, V0
	005 Return X0

Method: Unity.Mathematics.double4 get_yyyy()

Disassembly:
	0x03870370 CSET W10, LS
	0x03870374 BFM X10, X8, 0x38, 0x0
	0x03870378 FCMP D2, D0
	0x0387037C CSET W11, LS
	0x03870380 FCMP D3, D4

ISIL:
	001 Move V0, [X0+8]
	002 Move V1, V0
	003 Move V2, V0
	004 Move V3, V0
	005 Return X0

Method: Unity.Mathematics.double4 get_yyyz()

Disassembly:
	0x03870384 CSET W8, LS
	0x03870388 FCMP D1, D5
	0x0387038C CSET W12, LS
	0x03870390 ORR X11, X12, X11, 0x8

ISIL:
	001 Move D0, [X0+8]
	002 Move D3, [X0+16]
	003 Move V1, V0
	004 Move V2, V0
	005 Return X0

Method: Unity.Mathematics.double4 get_yyzx()

Disassembly:
	0x03870394 ORR X8, X11, X8, 0x10
	0x03870398 BFM X10, X9, 0x30, 0x0
	0x0387039C ORR X0, X10, X8, 0x18
	0x038703A0 RET

ISIL:
	001 Move D0, [X0+8]
	002 Move D2, [X0+16]
	003 Move V3, [X0]
	004 Move V1, V0
	005 Return X0

Method: Unity.Mathematics.double4 get_yyzy()

Disassembly:
	0x038703A4 LDP D2, D1, [X0]
	0x038703A8 FCMP D1, D0
	0x038703AC LDP D3, D1, [X0 + 0x10]
	0x038703B0 CSET W8, LS

ISIL:
	001 Move D0, [X0+8]
	002 Move D2, [X0+16]
	003 Move V1, V0
	004 Move V3, V0
	005 Return X0

Method: Unity.Mathematics.double4 get_yyzz()

Disassembly:
	0x038703B4 FCMP D3, D0
	0x038703B8 CSET W9, LS
	0x038703BC FCMP D2, D0
	0x038703C0 LDP D3, D2, [X0 + 0x20]

ISIL:
	001 Move D0, [X0+8]
	002 Move D2, [X0+16]
	003 Move V1, V0
	004 Move V3, V2
	005 Return X0

Method: Unity.Mathematics.double4 get_yzxx()

Disassembly:
	0x038703C4 CSET W10, LS
	0x038703C8 BFM X10, X8, 0x38, 0x0
	0x038703CC BFM X10, X9, 0x30, 0x0
	0x038703D0 FCMP D3, D0

ISIL:
	001 Move V2, [X0]
	002 Move D0, [X0+8]
	003 Move D1, [X0+16]
	004 Move V3, V2
	005 Return X0

Method: Unity.Mathematics.double4 get_yzxy()

Disassembly:
	0x038703D4 CSET W11, LS
	0x038703D8 FCMP D2, D0
	0x038703DC CSET W8, LS
	0x038703E0 FCMP D1, D0

ISIL:
	001 Move D0, [X0+8]
	002 Move D1, [X0+16]
	003 Move V2, [X0]
	004 Move V3, V0
	005 Return X0

Method: Unity.Mathematics.double4 get_yzxz()

Disassembly:
	0x038703E4 CSET W12, LS
	0x038703E8 ORR X11, X12, X11, 0x8
	0x038703EC ORR X8, X11, X8, 0x10
	0x038703F0 ORR X0, X10, X8, 0x18

ISIL:
	001 Move D0, [X0+8]
	002 Move D1, [X0+16]
	003 Move V2, [X0]
	004 Move V3, V1
	005 Return X0

Method: Unity.Mathematics.double4 get_yzyx()

Disassembly:
	0x038703F4 RET
	0x038703F8 LDP D2, D1, [X0]
	0x038703FC FCMP D1, D0
	0x03870400 LDP D3, D1, [X0 + 0x10]

ISIL:
	001 Move D0, [X0+8]
	002 Move D1, [X0+16]
	003 Move V3, [X0]
	004 Move V2, V0
	005 Return X0

Method: Unity.Mathematics.double4 get_yzyy()

Disassembly:
	0x03870404 CSET W8, GE
	0x03870408 FCMP D3, D0
	0x0387040C CSET W9, GE
	0x03870410 FCMP D2, D0

ISIL:
	001 Move D0, [X0+8]
	002 Move D1, [X0+16]
	003 Move V2, V0
	004 Move V3, V0
	005 Return X0

Method: Unity.Mathematics.double4 get_yzyz()

Disassembly:
	0x03870414 LDP D3, D2, [X0 + 0x20]
	0x03870418 CSET W10, GE
	0x0387041C BFM X10, X8, 0x38, 0x0
	0x03870420 BFM X10, X9, 0x30, 0x0

ISIL:
	001 Move D0, [X0+8]
	002 Move D1, [X0+16]
	003 Move V2, V0
	004 Move V3, V1
	005 Return X0

Method: Unity.Mathematics.double4 get_yzzx()

Disassembly:
	0x03870424 FCMP D3, D0
	0x03870428 CSET W11, GE
	0x0387042C FCMP D2, D0
	0x03870430 CSET W8, GE

ISIL:
	001 Move D0, [X0+8]
	002 Move D1, [X0+16]
	003 Move V3, [X0]
	004 Move V2, V1
	005 Return X0

Method: Unity.Mathematics.double4 get_yzzy()

Disassembly:
	0x03870434 FCMP D1, D0
	0x03870438 CSET W12, GE
	0x0387043C ORR X11, X12, X11, 0x8
	0x03870440 ORR X8, X11, X8, 0x10

ISIL:
	001 Move D0, [X0+8]
	002 Move D1, [X0+16]
	003 Move V2, V1
	004 Move V3, V0
	005 Return X0

Method: Unity.Mathematics.double4 get_yzzz()

Disassembly:
	0x03870444 ORR X0, X10, X8, 0x18
	0x03870448 RET
	0x0387044C LDP D2, D0, [X0]
	0x03870450 LDP D1, D3, [X1 + 0x8]

ISIL:
	001 Move D0, [X0+8]
	002 Move D1, [X0+16]
	003 Move V2, V1
	004 Move V3, V1
	005 Return X0

Method: Unity.Mathematics.double4 get_zxxx()

Disassembly:
	0x03870454 LDR V4, [X1]
	0x03870458 FCMP D0, D1
	0x0387045C LDP D0, D1, [X0 + 0x10]
	0x03870460 CSET W8, GT
	0x03870464 FCMP D0, D3

ISIL:
	001 Move V1, [X0]
	002 Move V0, [X0+16]
	003 Move V2, V1
	004 Move V3, V1
	005 Return X0

Method: Unity.Mathematics.double4 get_zxxy()

Disassembly:
	0x03870468 LDP D5, D0, [X1 + 0x18]
	0x0387046C CSET W9, GT
	0x03870470 FCMP D2, D4
	0x03870474 LDP D2, D3, [X0 + 0x20]

ISIL:
	001 Move V1, [X0]
	002 Move D3, [X0+8]
	003 Move D0, [X0+16]
	004 Move V2, V1
	005 Return X0

Method: Unity.Mathematics.double4 get_zxxz()

Disassembly:
	0x03870478 LDR V4, [X1 + 0x28]
	0x0387047C CSET W10, GT
	0x03870480 BFM X10, X8, 0x38, 0x0
	0x03870484 FCMP D2, D0
	0x03870488 CSET W11, GT

ISIL:
	001 Move V0, [X0+16]
	002 Move V1, [X0]
	003 Move V3, V0
	004 Move V2, V1
	005 Return X0

Method: Unity.Mathematics.double4 get_zxyx()

Disassembly:
	0x0387048C FCMP D3, D4
	0x03870490 CSET W8, GT
	0x03870494 FCMP D1, D5
	0x03870498 CSET W12, GT

ISIL:
	001 Move V1, [X0]
	002 Move D2, [X0+8]
	003 Move D0, [X0+16]
	004 Move V3, V1
	005 Return X0

Method: Unity.Mathematics.double4 get_zxyy()

Disassembly:
	0x0387049C ORR X11, X12, X11, 0x8
	0x038704A0 ORR X8, X11, X8, 0x10
	0x038704A4 BFM X10, X9, 0x30, 0x0
	0x038704A8 ORR X0, X10, X8, 0x18

ISIL:
	001 Move D2, [X0+8]
	002 Move D0, [X0+16]
	003 Move V1, [X0]
	004 Move V3, V2
	005 Return X0

Method: Unity.Mathematics.double4 get_zxyz()

Disassembly:
	0x038704AC RET
	0x038704B0 LDP D2, D1, [X0]
	0x038704B4 FCMP D1, D0
	0x038704B8 LDP D3, D1, [X0 + 0x10]

ISIL:
	001 Move D2, [X0+8]
	002 Move D0, [X0+16]
	003 Move V1, [X0]
	004 Move V3, V0
	005 Return X0

Method: Unity.Mathematics.double4 get_zxzx()

Disassembly:
	0x038704BC CSET W8, GT
	0x038704C0 FCMP D3, D0
	0x038704C4 CSET W9, GT
	0x038704C8 FCMP D2, D0
	0x038704CC LDP D3, D2, [X0 + 0x20]

ISIL:
	001 Move V0, [X0+16]
	002 Move V1, [X0]
	003 Move V2, V0
	004 Move V3, V1
	005 Return X0

Method: Unity.Mathematics.double4 get_zxzy()

Disassembly:
	0x038704D0 CSET W10, GT
	0x038704D4 BFM X10, X8, 0x38, 0x0
	0x038704D8 BFM X10, X9, 0x30, 0x0
	0x038704DC FCMP D3, D0

ISIL:
	001 Move D3, [X0+8]
	002 Move D0, [X0+16]
	003 Move V1, [X0]
	004 Move V2, V0
	005 Return X0

Method: Unity.Mathematics.double4 get_zxzz()

Disassembly:
	0x038704E0 CSET W11, GT
	0x038704E4 FCMP D2, D0
	0x038704E8 CSET W8, GT
	0x038704EC FCMP D1, D0
	0x038704F0 CSET W12, GT

ISIL:
	001 Move V0, [X0+16]
	002 Move V1, [X0]
	003 Move V2, V0
	004 Move V3, V0
	005 Return X0

Method: Unity.Mathematics.double4 get_zyxx()

Disassembly:
	0x038704F4 ORR X11, X12, X11, 0x8
	0x038704F8 ORR X8, X11, X8, 0x10
	0x038704FC ORR X0, X10, X8, 0x18
	0x03870500 RET

ISIL:
	001 Move V2, [X0]
	002 Move D1, [X0+8]
	003 Move D0, [X0+16]
	004 Move V3, V2
	005 Return X0

Method: Unity.Mathematics.double4 get_zyxy()

Disassembly:
	0x03870504 LDP D2, D1, [X0]
	0x03870508 FCMP D1, D0
	0x0387050C LDP D3, D1, [X0 + 0x10]
	0x03870510 CSET W8, MI

ISIL:
	001 Move D1, [X0+8]
	002 Move D0, [X0+16]
	003 Move V2, [X0]
	004 Move V3, V1
	005 Return X0

Method: Unity.Mathematics.double4 get_zyxz()

Disassembly:
	0x03870514 FCMP D3, D0
	0x03870518 CSET W9, MI
	0x0387051C FCMP D2, D0
	0x03870520 LDP D3, D2, [X0 + 0x20]

ISIL:
	001 Move D1, [X0+8]
	002 Move D0, [X0+16]
	003 Move V2, [X0]
	004 Move V3, V0
	005 Return X0

Method: Unity.Mathematics.double4 get_zyyx()

Disassembly:
	0x03870524 CSET W10, MI
	0x03870528 BFM X10, X8, 0x38, 0x0
	0x0387052C BFM X10, X9, 0x30, 0x0
	0x03870530 FCMP D3, D0

ISIL:
	001 Move D1, [X0+8]
	002 Move D0, [X0+16]
	003 Move V3, [X0]
	004 Move V2, V1
	005 Return X0

Method: Unity.Mathematics.double4 get_zyyy()

Disassembly:
	0x03870534 CSET W11, MI
	0x03870538 FCMP D2, D0
	0x0387053C CSET W8, MI
	0x03870540 FCMP D1, D0

ISIL:
	001 Move D1, [X0+8]
	002 Move D0, [X0+16]
	003 Move V2, V1
	004 Move V3, V1
	005 Return X0

Method: Unity.Mathematics.double4 get_zyyz()

Disassembly:
	0x03870544 CSET W12, MI
	0x03870548 ORR X11, X12, X11, 0x8
	0x0387054C ORR X8, X11, X8, 0x10
	0x03870550 ORR X0, X10, X8, 0x18

ISIL:
	001 Move D1, [X0+8]
	002 Move D0, [X0+16]
	003 Move V2, V1
	004 Move V3, V0
	005 Return X0

Method: Unity.Mathematics.double4 get_zyzx()

Disassembly:
	0x03870554 RET
	0x03870558 LDP D2, D0, [X0]
	0x0387055C LDP D1, D3, [X1 + 0x8]
	0x03870560 LDR V4, [X1]

ISIL:
	001 Move D1, [X0+8]
	002 Move D0, [X0+16]
	003 Move V3, [X0]
	004 Move V2, V0
	005 Return X0

Method: Unity.Mathematics.double4 get_zyzy()

Disassembly:
	0x03870564 FCMP D0, D1
	0x03870568 LDP D0, D1, [X0 + 0x10]
	0x0387056C CSET W8, GE
	0x03870570 FCMP D0, D3

ISIL:
	001 Move D1, [X0+8]
	002 Move D0, [X0+16]
	003 Move V2, V0
	004 Move V3, V1
	005 Return X0

Method: Unity.Mathematics.double4 get_zyzz()

Disassembly:
	0x03870574 LDP D5, D0, [X1 + 0x18]
	0x03870578 CSET W9, GE
	0x0387057C FCMP D2, D4
	0x03870580 LDP D2, D3, [X0 + 0x20]

ISIL:
	001 Move D1, [X0+8]
	002 Move D0, [X0+16]
	003 Move V2, V0
	004 Move V3, V0
	005 Return X0

Method: Unity.Mathematics.double4 get_zzxx()

Disassembly:
	0x03870584 LDR V4, [X1 + 0x28]
	0x03870588 CSET W10, GE
	0x0387058C BFM X10, X8, 0x38, 0x0
	0x03870590 FCMP D2, D0
	0x03870594 CSET W11, GE

ISIL:
	001 Move V0, [X0+16]
	002 Move V2, [X0]
	003 Move V1, V0
	004 Move V3, V2
	005 Return X0

Method: Unity.Mathematics.double4 get_zzxy()

Disassembly:
	0x03870598 FCMP D3, D4
	0x0387059C CSET W8, GE
	0x038705A0 FCMP D1, D5
	0x038705A4 CSET W12, GE

ISIL:
	001 Move D3, [X0+8]
	002 Move D0, [X0+16]
	003 Move V2, [X0]
	004 Move V1, V0
	005 Return X0

Method: Unity.Mathematics.double4 get_zzxz()

Disassembly:
	0x038705A8 ORR X11, X12, X11, 0x8
	0x038705AC ORR X8, X11, X8, 0x10
	0x038705B0 BFM X10, X9, 0x30, 0x0
	0x038705B4 ORR X0, X10, X8, 0x18
	0x038705B8 RET

ISIL:
	001 Move V0, [X0+16]
	002 Move V2, [X0]
	003 Move V1, V0
	004 Move V3, V0
	005 Return X0

Method: Unity.Mathematics.double4 get_zzyx()

Disassembly:
	0x038705BC LDP D2, D1, [X0]
	0x038705C0 FCMP D1, D0
	0x038705C4 LDP D3, D1, [X0 + 0x10]
	0x038705C8 CSET W8, GE

ISIL:
	001 Move D2, [X0+8]
	002 Move D0, [X0+16]
	003 Move V3, [X0]
	004 Move V1, V0
	005 Return X0

Method: Unity.Mathematics.double4 get_zzyy()

Disassembly:
	0x038705CC FCMP D3, D0
	0x038705D0 CSET W9, GE
	0x038705D4 FCMP D2, D0
	0x038705D8 LDP D3, D2, [X0 + 0x20]

ISIL:
	001 Move D2, [X0+8]
	002 Move D0, [X0+16]
	003 Move V1, V0
	004 Move V3, V2
	005 Return X0

Method: Unity.Mathematics.double4 get_zzyz()

Disassembly:
	0x038705DC CSET W10, GE
	0x038705E0 BFM X10, X8, 0x38, 0x0
	0x038705E4 BFM X10, X9, 0x30, 0x0
	0x038705E8 FCMP D3, D0

ISIL:
	001 Move D2, [X0+8]
	002 Move D0, [X0+16]
	003 Move V1, V0
	004 Move V3, V0
	005 Return X0

Method: Unity.Mathematics.double4 get_zzzx()

Disassembly:
	0x038705EC CSET W11, GE
	0x038705F0 FCMP D2, D0
	0x038705F4 CSET W8, GE
	0x038705F8 FCMP D1, D0
	0x038705FC CSET W12, GE

ISIL:
	001 Move V0, [X0+16]
	002 Move V3, [X0]
	003 Move V1, V0
	004 Move V2, V0
	005 Return X0

Method: Unity.Mathematics.double4 get_zzzy()

Disassembly:
	0x03870600 ORR X11, X12, X11, 0x8
	0x03870604 ORR X8, X11, X8, 0x10
	0x03870608 ORR X0, X10, X8, 0x18
	0x0387060C RET

ISIL:
	001 Move D3, [X0+8]
	002 Move D0, [X0+16]
	003 Move V1, V0
	004 Move V2, V0
	005 Return X0

Method: Unity.Mathematics.double4 get_zzzz()

Disassembly:
	0x03870610 LDP D2, D1, [X0]
	0x03870614 FCMP D1, D0
	0x03870618 LDP D3, D1, [X0 + 0x10]
	0x0387061C CSET W8, LS
	0x03870620 FCMP D3, D0

ISIL:
	001 Move V0, [X0+16]
	002 Move V1, V0
	003 Move V2, V0
	004 Move V3, V0
	005 Return X0

Method: Unity.Mathematics.double3 get_xxx()

Disassembly:
	0x03870624 CSET W9, LS
	0x03870628 FCMP D2, D0
	0x0387062C LDP D3, D2, [X0 + 0x20]
	0x03870630 CSET W10, LS

ISIL:
	001 Move V0, [X0]
	002 Move V1, V0
	003 Move V2, V0
	004 Return X0

Method: Unity.Mathematics.double3 get_xxy()

Disassembly:
	0x03870634 BFM X10, X8, 0x38, 0x0
	0x03870638 BFM X10, X9, 0x30, 0x0
	0x0387063C FCMP D3, D0

ISIL:
	001 Move D0, [X0]
	002 Move D2, [X0+8]
	003 Move V1, V0
	004 Return X0

Method: Unity.Mathematics.double3 get_xxz()

Disassembly:
	0x03870640 CSET W11, LS
	0x03870644 FCMP D2, D0
	0x03870648 CSET W8, LS
	0x0387064C FCMP D1, D0

ISIL:
	001 Move V0, [X0]
	002 Move V2, [X0+16]
	003 Move V1, V0
	004 Return X0

Method: Unity.Mathematics.double3 get_xyx()

Disassembly:
	0x03870650 CSET W12, LS
	0x03870654 ORR X11, X12, X11, 0x8
	0x03870658 ORR X8, X11, X8, 0x10

ISIL:
	001 Move D0, [X0]
	002 Move D1, [X0+8]
	003 Move V2, V0
	004 Return X0

Method: Unity.Mathematics.double3 get_xyy()

Disassembly:
	0x0387065C ORR X0, X10, X8, 0x18
	0x03870660 RET
	0x03870664 LDP V0, V1, [X0]

ISIL:
	001 Move D0, [X0]
	002 Move D1, [X0+8]
	003 Move V2, V1
	004 Return X0

Method: Unity.Mathematics.double3 get_xyz()

Disassembly:
	0x03870668 LDR V2, [X0 + 0x2]
	0x0387066C UNIMPLEMENTED
	0x03870670 UNIMPLEMENTED

ISIL:
	001 Move D0, [X0]
	002 Move D1, [X0+8]
	003 Move V2, [X0+16]
	004 Return X0

Method: System.Void set_xyz(Unity.Mathematics.double3 value)

Disassembly:
	0x03870674 UNIMPLEMENTED
	0x03870678 STP V0, V1, [X8]
	0x0387067C STR V2, [X8 + 0x2]

ISIL:
	001 Move [X0], D0
	002 Move [X0+8], D1
	003 Move [X0+16], D2
	004 Return 

Method: Unity.Mathematics.double3 get_xzx()

Disassembly:
	0x03870680 RET
	0x03870684 LDP V0, V1, [X0]
	0x03870688 LDR V2, [X0 + 0x2]
	0x0387068C STP V0, V1, [X8]

ISIL:
	001 Move V0, [X0]
	002 Move V1, [X0+16]
	003 Move V2, V0
	004 Return X0

Method: Unity.Mathematics.double3 get_xzy()

Disassembly:
	0x03870690 STR V2, [X8 + 0x2]
	0x03870694 RET
	0x03870698 LDP D2, D0, [X0]

ISIL:
	001 Move D2, [X0+8]
	002 Move D1, [X0+16]
	003 Move V0, [X0]
	004 Return X0

Method: System.Void set_xzy(Unity.Mathematics.double3 value)

Disassembly:
	0x0387069C LDP D1, D3, [X1 + 0x8]
	0x038706A0 LDR V4, [X1]
	0x038706A4 FCMP D0, D1

ISIL:
	001 Move [X0+8], D2
	002 Move [X0+16], D1
	003 Move [X0], D0
	004 Return 

Method: Unity.Mathematics.double3 get_xzz()

Disassembly:
	0x038706A8 LDP D0, D1, [X0 + 0x10]
	0x038706AC CSET W8, EQ
	0x038706B0 FCMP D0, D3
	0x038706B4 LDP D5, D0, [X1 + 0x18]

ISIL:
	001 Move V1, [X0+16]
	002 Move V0, [X0]
	003 Move V2, V1
	004 Return X0

Method: Unity.Mathematics.double3 get_yxx()

Disassembly:
	0x038706B8 CSET W9, EQ
	0x038706BC FCMP D2, D4
	0x038706C0 LDP D2, D3, [X0 + 0x20]

ISIL:
	001 Move D1, [X0]
	002 Move D0, [X0+8]
	003 Move V2, V1
	004 Return X0

Method: Unity.Mathematics.double3 get_yxy()

Disassembly:
	0x038706C4 LDR V4, [X1 + 0x28]
	0x038706C8 CSET W10, EQ
	0x038706CC BFM X10, X8, 0x38, 0x0

ISIL:
	001 Move D1, [X0]
	002 Move D0, [X0+8]
	003 Move V2, V0
	004 Return X0

Method: Unity.Mathematics.double3 get_yxz()

Disassembly:
	0x038706D0 FCMP D2, D0
	0x038706D4 CSET W11, EQ
	0x038706D8 FCMP D3, D4

ISIL:
	001 Move D1, [X0]
	002 Move D0, [X0+8]
	003 Move V2, [X0+16]
	004 Return X0

Method: System.Void set_yxz(Unity.Mathematics.double3 value)

Disassembly:
	0x038706DC CSET W8, EQ
	0x038706E0 FCMP D1, D5
	0x038706E4 CSET W12, EQ

ISIL:
	001 Move [X0], D1
	002 Move [X0+8], D0
	003 Move [X0+16], D2
	004 Return 

Method: Unity.Mathematics.double3 get_yyx()

Disassembly:
	0x038706E8 ORR X11, X12, X11, 0x8
	0x038706EC ORR X8, X11, X8, 0x10
	0x038706F0 BFM X10, X9, 0x30, 0x0

ISIL:
	001 Move D2, [X0]
	002 Move D0, [X0+8]
	003 Move V1, V0
	004 Return X0

Method: Unity.Mathematics.double3 get_yyy()

Disassembly:
	0x038706F4 ORR X0, X10, X8, 0x18
	0x038706F8 RET
	0x038706FC LDP D2, D1, [X0]
	0x03870700 FCMP D1, D0

ISIL:
	001 Move V0, [X0+8]
	002 Move V1, V0
	003 Move V2, V0
	004 Return X0

Method: Unity.Mathematics.double3 get_yyz()

Disassembly:
	0x03870704 LDP D3, D1, [X0 + 0x10]
	0x03870708 CSET W8, EQ
	0x0387070C FCMP D3, D0

ISIL:
	001 Move D0, [X0+8]
	002 Move D2, [X0+16]
	003 Move V1, V0
	004 Return X0

Method: Unity.Mathematics.double3 get_yzx()

Disassembly:
	0x03870710 CSET W9, EQ
	0x03870714 FCMP D2, D0
	0x03870718 LDP D3, D2, [X0 + 0x20]

ISIL:
	001 Move D0, [X0+8]
	002 Move D1, [X0+16]
	003 Move V2, [X0]
	004 Return X0

Method: System.Void set_yzx(Unity.Mathematics.double3 value)

Disassembly:
	0x0387071C CSET W10, EQ
	0x03870720 BFM X10, X8, 0x38, 0x0
	0x03870724 BFM X10, X9, 0x30, 0x0

ISIL:
	001 Move [X0+8], D0
	002 Move [X0+16], D1
	003 Move [X0], D2
	004 Return 

Method: Unity.Mathematics.double3 get_yzy()

Disassembly:
	0x03870728 FCMP D3, D0
	0x0387072C CSET W11, EQ
	0x03870730 FCMP D2, D0

ISIL:
	001 Move D0, [X0+8]
	002 Move D1, [X0+16]
	003 Move V2, V0
	004 Return X0

Method: Unity.Mathematics.double3 get_yzz()

Disassembly:
	0x03870734 CSET W8, EQ
	0x03870738 FCMP D1, D0
	0x0387073C CSET W12, EQ

ISIL:
	001 Move D0, [X0+8]
	002 Move D1, [X0+16]
	003 Move V2, V1
	004 Return X0

Method: Unity.Mathematics.double3 get_zxx()

Disassembly:
	0x03870740 ORR X11, X12, X11, 0x8
	0x03870744 ORR X8, X11, X8, 0x10
	0x03870748 ORR X0, X10, X8, 0x18
	0x0387074C RET

ISIL:
	001 Move V1, [X0]
	002 Move V0, [X0+16]
	003 Move V2, V1
	004 Return X0

Method: Unity.Mathematics.double3 get_zxy()

Disassembly:
	0x03870750 LDP D2, D1, [X0]
	0x03870754 FCMP D1, D0
	0x03870758 LDP D3, D1, [X0 + 0x10]

ISIL:
	001 Move D2, [X0+8]
	002 Move D0, [X0+16]
	003 Move V1, [X0]
	004 Return X0

Method: System.Void set_zxy(Unity.Mathematics.double3 value)

Disassembly:
	0x0387075C CSET W8, EQ
	0x03870760 FCMP D3, D0
	0x03870764 CSET W9, EQ

ISIL:
	001 Move [X0+8], D2
	002 Move [X0+16], D0
	003 Move [X0], D1
	004 Return 

Method: Unity.Mathematics.double3 get_zxz()

Disassembly:
	0x03870768 FCMP D2, D0
	0x0387076C LDP D3, D2, [X0 + 0x20]
	0x03870770 CSET W10, EQ
	0x03870774 BFM X10, X8, 0x38, 0x0

ISIL:
	001 Move V0, [X0+16]
	002 Move V1, [X0]
	003 Move V2, V0
	004 Return X0

Method: Unity.Mathematics.double3 get_zyx()

Disassembly:
	0x03870778 BFM X10, X9, 0x30, 0x0
	0x0387077C FCMP D3, D0
	0x03870780 CSET W11, EQ

ISIL:
	001 Move D1, [X0+8]
	002 Move D0, [X0+16]
	003 Move V2, [X0]
	004 Return X0

Method: System.Void set_zyx(Unity.Mathematics.double3 value)

Disassembly:
	0x03870784 FCMP D2, D0
	0x03870788 CSET W8, EQ
	0x0387078C FCMP D1, D0

ISIL:
	001 Move [X0+8], D1
	002 Move [X0+16], D0
	003 Move [X0], D2
	004 Return 

Method: Unity.Mathematics.double3 get_zyy()

Disassembly:
	0x03870790 CSET W12, EQ
	0x03870794 ORR X11, X12, X11, 0x8
	0x03870798 ORR X8, X11, X8, 0x10

ISIL:
	001 Move D1, [X0+8]
	002 Move D0, [X0+16]
	003 Move V2, V1
	004 Return X0

Method: Unity.Mathematics.double3 get_zyz()

Disassembly:
	0x0387079C ORR X0, X10, X8, 0x18
	0x038707A0 RET
	0x038707A4 LDP D2, D0, [X0]

ISIL:
	001 Move D1, [X0+8]
	002 Move D0, [X0+16]
	003 Move V2, V0
	004 Return X0

Method: Unity.Mathematics.double3 get_zzx()

Disassembly:
	0x038707A8 LDP D1, D3, [X1 + 0x8]
	0x038707AC LDR V4, [X1]
	0x038707B0 FCMP D0, D1
	0x038707B4 LDP D0, D1, [X0 + 0x10]

ISIL:
	001 Move V0, [X0+16]
	002 Move V2, [X0]
	003 Move V1, V0
	004 Return X0

Method: Unity.Mathematics.double3 get_zzy()

Disassembly:
	0x038707B8 CSET W8, NE
	0x038707BC FCMP D0, D3
	0x038707C0 LDP D5, D0, [X1 + 0x18]

ISIL:
	001 Move D2, [X0+8]
	002 Move D0, [X0+16]
	003 Move V1, V0
	004 Return X0

Method: Unity.Mathematics.double3 get_zzz()

Disassembly:
	0x038707C4 CSET W9, NE
	0x038707C8 FCMP D2, D4
	0x038707CC LDP D2, D3, [X0 + 0x20]
	0x038707D0 LDR V4, [X1 + 0x28]

ISIL:
	001 Move V0, [X0+16]
	002 Move V1, V0
	003 Move V2, V0
	004 Return X0

Method: Unity.Mathematics.double2 get_xx()

Disassembly:
	0x038707D4 CSET W10, NE
	0x038707D8 BFM X10, X8, 0x38, 0x0
	0x038707DC FCMP D2, D0

ISIL:
	001 Move V0, [X0]
	002 Move V1, V0
	003 Return X0

Method: Unity.Mathematics.double2 get_xy()

Disassembly:
	0x038707E0 CSET W11, NE
	0x038707E4 FCMP D3, D4

ISIL:
	001 Move D0, [X0]
	002 Move D1, [X0+8]
	003 Return X0

Method: System.Void set_xy(Unity.Mathematics.double2 value)

Disassembly:
	0x038707E8 CSET W8, NE
	0x038707EC FCMP D1, D5

ISIL:
	001 Move [X0], D0
	002 Move [X0+8], D1
	003 Return 

Method: Unity.Mathematics.double2 get_xz()

Disassembly:
	0x038707F0 CSET W12, NE
	0x038707F4 ORR X11, X12, X11, 0x8
	0x038707F8 ORR X8, X11, X8, 0x10

ISIL:
	001 Move V0, [X0]
	002 Move V1, [X0+16]
	003 Return X0

Method: System.Void set_xz(Unity.Mathematics.double2 value)

Disassembly:
	0x038707FC BFM X10, X9, 0x30, 0x0
	0x03870800 ORR X0, X10, X8, 0x18
	0x03870804 RET

ISIL:
	001 Move [X0], D0
	002 Move [X0+16], D1
	003 Return 

Method: Unity.Mathematics.double2 get_yx()

Disassembly:
	0x03870808 LDP D2, D1, [X0]
	0x0387080C FCMP D1, D0

ISIL:
	001 Move D1, [X0]
	002 Move D0, [X0+8]
	003 Return X0

Method: System.Void set_yx(Unity.Mathematics.double2 value)

Disassembly:
	0x03870810 LDP D3, D1, [X0 + 0x10]
	0x03870814 CSET W8, NE

ISIL:
	001 Move [X0], D1
	002 Move [X0+8], D0
	003 Return 

Method: Unity.Mathematics.double2 get_yy()

Disassembly:
	0x03870818 FCMP D3, D0
	0x0387081C CSET W9, NE
	0x03870820 FCMP D2, D0

ISIL:
	001 Move V0, [X0+8]
	002 Move V1, V0
	003 Return X0

Method: Unity.Mathematics.double2 get_yz()

Disassembly:
	0x03870824 LDP D3, D2, [X0 + 0x20]
	0x03870828 CSET W10, NE

ISIL:
	001 Move D0, [X0+8]
	002 Move D1, [X0+16]
	003 Return X0

Method: System.Void set_yz(Unity.Mathematics.double2 value)

Disassembly:
	0x0387082C BFM X10, X8, 0x38, 0x0
	0x03870830 BFM X10, X9, 0x30, 0x0

ISIL:
	001 Move [X0+8], D0
	002 Move [X0+16], D1
	003 Return 

Method: Unity.Mathematics.double2 get_zx()

Disassembly:
	0x03870834 FCMP D3, D0
	0x03870838 CSET W11, NE
	0x0387083C FCMP D2, D0

ISIL:
	001 Move V0, [X0+16]
	002 Move V1, [X0]
	003 Return X0

Method: System.Void set_zx(Unity.Mathematics.double2 value)

Disassembly:
	0x03870840 CSET W8, NE
	0x03870844 FCMP D1, D0
	0x03870848 CSET W12, NE

ISIL:
	001 Move [X0+16], D0
	002 Move [X0], D1
	003 Return 

Method: Unity.Mathematics.double2 get_zy()

Disassembly:
	0x0387084C ORR X11, X12, X11, 0x8
	0x03870850 ORR X8, X11, X8, 0x10

ISIL:
	001 Move D1, [X0+8]
	002 Move D0, [X0+16]
	003 Return X0

Method: System.Void set_zy(Unity.Mathematics.double2 value)

Disassembly:
	0x03870854 ORR X0, X10, X8, 0x18
	0x03870858 RET

ISIL:
	001 Move [X0+8], D1
	002 Move [X0+16], D0
	003 Return 

Method: Unity.Mathematics.double2 get_zz()

Disassembly:
	0x0387085C LDP D2, D1, [X0]
	0x03870860 FCMP D1, D0
	0x03870864 LDP D3, D1, [X0 + 0x10]

ISIL:
	001 Move V0, [X0+16]
	002 Move V1, V0
	003 Return X0

Method: System.Double get_Item(System.Int32 index)

Disassembly:
	0x03870868 CSET W8, NE
	0x0387086C FCMP D3, D0

ISIL:
	001 Move V0, [X0]
	002 Return V0

Method: System.Void set_Item(System.Int32 index, System.Double value)

Disassembly:
	0x03870870 CSET W9, NE
	0x03870874 FCMP D2, D0

ISIL:
	001 Move [X0], D0
	002 Return 

Method: System.Boolean Equals(Unity.Mathematics.double3 rhs)

Disassembly:
	0x03870878 LDP D3, D2, [X0 + 0x20]
	0x0387087C CSET W10, NE
	0x03870880 BFM X10, X8, 0x38, 0x0
	0x03870884 BFM X10, X9, 0x30, 0x0
	0x03870888 FCMP D3, D0
	0x0387088C CSET W11, NE
	0x03870890 FCMP D2, D0
	0x03870894 CSET W8, NE
	0x03870898 FCMP D1, D0
	0x0387089C CSET W12, NE
	0x038708A0 ORR X11, X12, X11, 0x8
	0x038708A4 ORR X8, X11, X8, 0x10

ISIL:
	001 Move V3, [X0]
	002 NotImplemented "Instruction FCMP not yet implemented."
	003 Move V0, [X0+8]
	004 NotImplemented "Instruction FCMP not yet implemented."
	005 Move V0, [X0+16]
	006 NotImplemented "Instruction FCMP not yet implemented."
	007 NotImplemented "Instruction CSET not yet implemented."
	008 Return X0
	009 Move W0, W31
	010 Return X0

Method: System.Boolean Equals(System.Object o)

Disassembly:
	0x038708A8 ORR X0, X10, X8, 0x18
	0x038708AC RET
	0x038708B0 MOVZ W8, 0x18
	0x038708B4 SMADDL X0, X1, X8, X0
	0x038708B8 RET
	0x038708BC LDR V0, [X1]
	0x038708C0 LDR V1, [X0]
	0x038708C4 FCMP D1, D0
	0x038708C8 B.NE 0x3870920
	0x038708CC LDR V0, [X1 + 0x8]
	0x038708D0 LDR V1, [X0 + 0x8]
	0x038708D4 FCMP D1, D0
	0x038708D8 B.NE 0x3870920
	0x038708DC LDR V0, [X1 + 0x10]
	0x038708E0 LDR V1, [X0 + 0x10]
	0x038708E4 FCMP D1, D0
	0x038708E8 B.NE 0x3870920
	0x038708EC LDR V0, [X1 + 0x18]
	0x038708F0 LDR V1, [X0 + 0x18]
	0x038708F4 FCMP D1, D0
	0x038708F8 B.NE 0x3870920
	0x038708FC LDR V0, [X1 + 0x20]
	0x03870900 LDR V1, [X0 + 0x20]
	0x03870904 FCMP D1, D0
	0x03870908 B.NE 0x3870920
	0x0387090C LDR V0, [X1 + 0x28]
	0x03870910 LDR V1, [X0 + 0x28]
	0x03870914 FCMP D1, D0
	0x03870918 CSET W0, EQ
	0x0387091C RET
	0x03870920 MOV W0, W31
	0x03870924 RET
	0x03870928 STP X30, X21, [X31 - 0x20]!
	0x0387092C STP X20, X19, [X31 + 0x10]
	0x03870930 ADRP X21, 0xB71000
	0x03870934 LDRB W8, [X21 + 0x5D6]
	0x03870938 MOV X20, X1
	0x0387093C MOV X19, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xB72000
	006 Move W8, [X21+1491]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x8DB000
	014 Move X0, [X0+3744]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+1491], W8
	018 Compare X20, 0
	019 JumpIfEqual {25}
	020 Move X8, 0x8DB000
	021 Move X8, [X8+3744]
	022 Move X9, [X20]
	023 Move X8, [X8]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move W0, W31
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Return X0
	031 Move X0, X20
	032 Call 0x1C17E08
	033 Move V0, [X0]
	034 Move V1, [X19]
	035 NotImplemented "Instruction FCMP not yet implemented."
	036 Move V0, [X0+8]
	037 Move V1, [X19+8]
	038 NotImplemented "Instruction FCMP not yet implemented."
	039 Move V0, [X0+16]
	040 Move V1, [X19+16]
	041 NotImplemented "Instruction FCMP not yet implemented."
	042 NotImplemented "Instruction CSET not yet implemented."

Method: System.Int32 GetHashCode()

Disassembly:
	0x03870940 TBNZ X8, 0x0, 0x3870958
	0x03870944 ADRP X0, 0x8DA000
	0x03870948 LDR X0, [X0 + 0xEB0]
	0x0387094C BL 0x1C16CF4
	0x03870950 MOVZ W8, 0x1
	0x03870954 STRB W8, [X21 + 0x5D6]
	0x03870958 CBZ X20, 0x3870974
	0x0387095C ADRP X8, 0x8DA000
	0x03870960 LDR X8, [X8 + 0xEB0]
	0x03870964 LDR X9, [X20]
	0x03870968 LDR X8, [X8]
	0x0387096C CMP X9, X8
	0x03870970 B.EQ 0x3870984
	0x03870974 MOV W0, W31
	0x03870978 LDP X20, X19, [X31 + 0x10]
	0x0387097C LDP X30, X21, [X31], #0x20
	0x03870980 RET
	0x03870984 MOV X0, X20
	0x03870988 BL 0x1C16E08
	0x0387098C LDR V0, [X0]
	0x03870990 LDR V1, [X19]
	0x03870994 FCMP D1, D0

ISIL:
	001 Move X10, [X0+8]
	002 Move W11, [X0+16]
	003 Move W12, [X0+20]
	004 Move W8, [X0]
	005 Move W9, [X0+4]
	006 Move W13, 0x56C7
	007 NotImplemented "Instruction MOVK not yet implemented."
	008 Xor W11, W12, W11
	009 And X12, X10, 0
	010 Xor X10, X12, X10
	011 Move W12, 0x8225
	012 Xor W8, W9, W8
	013 Move W9, 0x3103
	014 NotImplemented "Instruction MOVK not yet implemented."
	015 NotImplemented "Instruction MOVK not yet implemented."
	016 Multiply W11, W11, W12
	017 Multiply X10, X10, X13
	018 NotImplemented "Instruction MADD not yet implemented."
	019 Move X9, X10
	020 ShiftRight X9, 32
	021 And X9, X9, 0x7FFFFFFF
	022 Add W8, W8, W9
	023 Move W9, 0x3C7D
	024 NotImplemented "Instruction MOVK not yet implemented."
	025 Add W0, W8, W9
	026 Return X0

Method: System.String ToString()

Disassembly:
	0x03870998 B.NE 0x3870974
	0x0387099C LDR V0, [X0 + 0x8]
	0x038709A0 LDR V1, [X19 + 0x8]
	0x038709A4 FCMP D1, D0
	0x038709A8 B.NE 0x3870974
	0x038709AC LDR V0, [X0 + 0x10]
	0x038709B0 LDR V1, [X19 + 0x10]
	0x038709B4 FCMP D1, D0
	0x038709B8 B.NE 0x3870974
	0x038709BC LDR V0, [X0 + 0x18]
	0x038709C0 LDR V1, [X19 + 0x18]
	0x038709C4 FCMP D1, D0
	0x038709C8 B.NE 0x3870974
	0x038709CC LDR V0, [X0 + 0x20]
	0x038709D0 LDR V1, [X19 + 0x20]
	0x038709D4 FCMP D1, D0
	0x038709D8 B.NE 0x3870974
	0x038709DC LDR V0, [X0 + 0x28]
	0x038709E0 LDR V1, [X19 + 0x28]
	0x038709E4 FCMP D1, D0
	0x038709E8 CSET W0, EQ
	0x038709EC B 0x3870978
	0x038709F0 LDP W8, W9, [X0]
	0x038709F4 LDR X10, [X0 + 0x8]
	0x038709F8 LDP W11, W12, [X0 + 0x10]
	0x038709FC LDP W16, W17, [X0 + 0x28]
	0x03870A00 LDP W13, W14, [X0 + 0x18]
	0x03870A04 LDR X15, [X0 + 0x20]
	0x03870A08 MOVZ W0, 0xC97
	0x03870A0C EOR W8, W9, W8, 0x0
	0x03870A10 MOVZ W9, 0x6509
	0x03870A14 MOVK W0, 0xEE390000
	0x03870A18 MOVK W9, 0x4DDC0000
	0x03870A1C EOR W11, W12, W11, 0x0
	0x03870A20 MOVZ W12, 0x2F05
	0x03870A24 EOR W16, W17, W16, 0x0
	0x03870A28 AND X17, X10, 0x0
	0x03870A2C MOVK W12, 0x9C8A0000
	0x03870A30 EOR W13, W14, W13, 0x0
	0x03870A34 MOVZ W14, 0x83CB
	0x03870A38 EOR X10, X17, X10, 0x20
	0x03870A3C MOVZ W17, 0x7117
	0x03870A40 MUL W8, W8, W0
	0x03870A44 MOVZ W0, 0x6CED
	0x03870A48 MUL W9, W11, W9
	0x03870A4C AND X11, X15, 0x0
	0x03870A50 MOVK W14, 0x7CF00000
	0x03870A54 MOVK W17, 0xF9130000
	0x03870A58 MOVK W0, 0x5C4D0000

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+40], X23
	004 Move [X31+48], X22
	005 Move [X31+56], X21
	006 Move [X31+64], X20
	007 Move [X31+72], X19
	008 Move X20, 0xB72000
	009 Move X23, 0x887000
	010 Move X22, 0x8DB000
	011 Move W8, [X20+1492]
	012 Move X23, [X23+2424]
	013 Move X22, [X22+3752]
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0x887000
	020 Move X0, [X0+2424]
	021 Call 0x1C17CF4
	022 Move X0, 0x8DB000
	023 Move X0, [X0+3752]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X20+1492], W8
	027 Move V0, [X19]
	028 Move X0, [X23]
	029 Add X1, X31, 24
	030 Move [X31+24], D0
	031 Call 0x1C17E04
	032 Move X20, X0
	033 Move V0, [X19+8]
	034 Move X0, [X23]
	035 Add X1, X31, 16
	036 Move [X31+16], D0
	037 Call 0x1C17E04
	038 Move X21, X0
	039 Move V0, [X19+16]
	040 Move X0, [X23]
	041 Add X1, X31, 8
	042 Move [X31+8], D0
	043 Call 0x1C17E04
	044 Move X8, [X22]
	045 Move X3, X0
	046 Move X1, X20
	047 Move X2, X21
	048 Move X0, X8
	049 Move X4, X31
	050 Call String.Format, X0, X1, X2, X3
	051 Move X20, [X31+64]
	052 Move X19, [X31+72]
	053 Move X22, [X31+48]
	054 Move X21, [X31+56]
	055 Move X30, [X31+32]
	056 Move X23, [X31+40]
	057 Add X31, X31, 80
	058 Return X0

Method: System.String ToString(System.String format, System.IFormatProvider formatProvider)

Disassembly:
	0x03870A5C EOR X11, X11, X15, 0x20
	0x03870A60 MUL X10, X10, X12
	0x03870A64 MADD W8, W13, W14, W8
	0x03870A68 MADD W9, W16, W17, W9
	0x03870A6C MADD X10, X11, X0, X10
	0x03870A70 ADD W8, W8, W9
	0x03870A74 UBFM X9, X10, 0x20, 0x3F
	0x03870A78 ADD W8, W8, W9
	0x03870A7C MOVZ W9, 0xDCE1
	0x03870A80 MOVK W9, 0xE8570000
	0x03870A84 ADD W0, W8, W9
	0x03870A88 RET
	0x03870A8C SUB X31, X31, 0x60
	0x03870A90 STR X30, [X31 + 0x30]
	0x03870A94 STP X22, X21, [X31 + 0x40]
	0x03870A98 STP X20, X19, [X31 + 0x50]
	0x03870A9C ADRP X19, 0xB71000
	0x03870AA0 ADRP X21, 0x883000
	0x03870AA4 ADRP X22, 0x886000
	0x03870AA8 LDRB W8, [X19 + 0x5D7]
	0x03870AAC LDR X21, [X21 + 0x9D0]
	0x03870AB0 LDR X22, [X22 + 0x978]
	0x03870AB4 MOV X20, X0
	0x03870AB8 TBNZ X8, 0x0, 0x3870AE8
	0x03870ABC ADRP X0, 0x886000
	0x03870AC0 LDR X0, [X0 + 0x978]
	0x03870AC4 BL 0x1C16CF4
	0x03870AC8 ADRP X0, 0x883000
	0x03870ACC LDR X0, [X0 + 0x9D0]
	0x03870AD0 BL 0x1C16CF4
	0x03870AD4 ADRP X0, 0x8DA000
	0x03870AD8 LDR X0, [X0 + 0xEB8]
	0x03870ADC BL 0x1C16CF4
	0x03870AE0 MOVZ W8, 0x1
	0x03870AE4 STRB W8, [X19 + 0x5D7]
	0x03870AE8 LDR X0, [X21]
	0x03870AEC MOVZ W1, 0x6
	0x03870AF0 BL 0x1C16D6C
	0x03870AF4 MOV X19, X0
	0x03870AF8 LDR V0, [X20]
	0x03870AFC LDR X0, [X22]
	0x03870B00 ADD X1, X31, 0x38
	0x03870B04 STR D0, [X31 + 0x38]
	0x03870B08 BL 0x1C16E04
	0x03870B0C CBZ X19, 0x3870CB4

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0xB72000
	009 Move X24, 0x8DB000
	010 Move W8, [X22+1493]
	011 Move X24, [X24+3752]
	012 Move X19, X2
	013 Move X20, X1
	014 Move X21, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {24}
	019 Move X0, 0x8DB000
	020 Move X0, [X0+3752]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+1493], W8
	024 Move X0, X21
	025 Move X1, X20
	026 Move X2, X19
	027 Move X3, X31
	028 Call Double.ToString, X0, X1, X2
	029 Move X22, X0
	030 Add X0, X21, 8
	031 Move X1, X20
	032 Move X2, X19
	033 Move X3, X31
	034 Call Double.ToString, X0, X1, X2
	035 Move X23, X0
	036 Add X0, X21, 16
	037 Move X1, X20
	038 Move X2, X19
	039 Move X3, X31
	040 Call Double.ToString, X0, X1, X2
	041 Move X8, [X24]
	042 Move X1, X22
	043 Move X2, X23
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X3, X0
	051 Move X0, X8
	052 Move X4, X31
	053 Move X30, [X31+64]
	054 Call String.Format, X0, X1, X2, X3
	055 Return X0

