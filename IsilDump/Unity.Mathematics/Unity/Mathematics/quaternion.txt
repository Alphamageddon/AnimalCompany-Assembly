Type: Unity.Mathematics.quaternion

Method: UnityEngine.Quaternion op_Implicit(Unity.Mathematics.quaternion q)

Disassembly:
	0x038BE214 BL 0x384BE4C

ISIL:
	001 Return X0

Method: Unity.Mathematics.quaternion op_Implicit(UnityEngine.Quaternion q)

Disassembly:
	0x038BE218 FMUL S3, S11, S1

ISIL:
	001 Return X0

Method: System.Void .ctor(System.Single x, System.Single y, System.Single z, System.Single w)

Disassembly:
	0x038BE21C FMUL S4, S12, S0
	0x038BE220 FMUL S5, S13, S0
	0x038BE224 FMUL S6, S0, S1

ISIL:
	001 Move [X0], S0
	002 Move [X0+8], S1
	003 Move [X0+8], S2
	004 Move [X0+16], S3
	005 Return 

Method: System.Void .ctor(Unity.Mathematics.float4 value)

Disassembly:
	0x038BE228 FMUL S7, S12, S13
	0x038BE22C FMUL S16, S13, S11
	0x038BE230 FMUL S17, S12, S11

ISIL:
	001 Move [X0], S0
	002 Move [X0+8], S1
	003 Move [X0+8], S2
	004 Move [X0+16], S3
	005 Return 

Method: Unity.Mathematics.quaternion op_Implicit(Unity.Mathematics.float4 v)

Disassembly:
	0x038BE234 FMUL S3, S2, S3

ISIL:
	001 Return X0

Method: System.Void .ctor(Unity.Mathematics.float3x3 m)

Disassembly:
	0x038BE238 FMUL S4, S2, S4
	0x038BE23C FMUL S5, S1, S5
	0x038BE240 FMUL S6, S2, S6
	0x038BE244 FMUL S0, S7, S0
	0x038BE248 FMUL S7, S11, S7
	0x038BE24C FMUL S1, S16, S1
	0x038BE250 FMUL S2, S17, S2
	0x038BE254 FADD S0, S0, S3
	0x038BE258 FSUB S1, S4, S1
	0x038BE25C FSUB S2, S5, S2
	0x038BE260 FADD S3, S7, S6
	0x038BE264 B 0x38BE2F8
	0x038BE268 FMOV S0, 0.5
	0x038BE26C FMUL S10, S10, S0
	0x038BE270 FMUL S9, S9, S0
	0x038BE274 FMUL S8, S8, S0
	0x038BE278 MOV V0.16B, V10.16B
	0x038BE27C MOV V1.16B, V9.16B
	0x038BE280 MOV V2.16B, V8.16B
	0x038BE284 MOV X0, X31
	0x038BE288 BL 0x384BD60
	0x038BE28C MOV V11.16B, V0.16B
	0x038BE290 MOV V12.16B, V1.16B
	0x038BE294 MOV V13.16B, V2.16B
	0x038BE298 MOV V0.16B, V10.16B
	0x038BE29C MOV V1.16B, V9.16B
	0x038BE2A0 MOV V2.16B, V8.16B
	0x038BE2A4 MOV X0, X31
	0x038BE2A8 BL 0x384BE4C
	0x038BE2AC FMUL S3, S11, S1
	0x038BE2B0 FMUL S4, S12, S0
	0x038BE2B4 FMUL S5, S13, S0
	0x038BE2B8 FMUL S7, S12, S13
	0x038BE2BC FMUL S17, S13, S11
	0x038BE2C0 FMUL S6, S0, S1
	0x038BE2C4 FMUL S16, S11, S12
	0x038BE2C8 FMUL S3, S2, S3
	0x038BE2CC FMUL S4, S2, S4
	0x038BE2D0 FMUL S5, S1, S5
	0x038BE2D4 FMUL S0, S7, S0
	0x038BE2D8 FMUL S1, S17, S1
	0x038BE2DC FMUL S6, S2, S6
	0x038BE2E0 FMUL S2, S16, S2
	0x038BE2E4 FMUL S7, S11, S7
	0x038BE2E8 FADD S0, S0, S3
	0x038BE2EC FSUB S1, S4, S1
	0x038BE2F0 FADD S2, S2, S5
	0x038BE2F4 FSUB S3, S6, S7
	0x038BE2F8 LDP X20, X19, [X31 + 0x40]
	0x038BE2FC LDR X30, [X31 + 0x30]
	0x038BE300 LDP D9, D8, [X31 + 0x20]
	0x038BE304 LDP D11, D10, [X31 + 0x10]
	0x038BE308 LDP D13, D12, [X31], #0x50
	0x038BE30C RET
	0x038BE310 MOV X1, X31
	0x038BE314 B 0x38C9810
	0x038BE318 SUB X31, X31, 0x40
	0x038BE31C STP D9, D8, [X31 + 0x10]
	0x038BE320 STR X30, [X31 + 0x20]
	0x038BE324 STP X20, X19, [X31 + 0x30]
	0x038BE328 ADRP X19, 0xB23000
	0x038BE32C LDRB W8, [X19 + 0x56A]
	0x038BE330 MOV V8.16B, V0.16B
	0x038BE334 CBNZ W8, 0x38BE34C
	0x038BE338 ADRP X0, 0x835000
	0x038BE33C LDR X0, [X0 + 0x5A8]
	0x038BE340 BL 0x1C16CF4
	0x038BE344 MOVZ W8, 0x1
	0x038BE348 STRB W8, [X19 + 0x56A]
	0x038BE34C ADRP X19, 0x835000
	0x038BE350 LDR X19, [X19 + 0x5A8]
	0x038BE354 FMOV S9, 0.5
	0x038BE358 LDR X0, [X19]
	0x038BE35C LDR W8, [X0 + 0xE0]
	0x038BE360 CBNZ W8, 0x38BE368
	0x038BE364 BL 0x1C16DFC
	0x038BE368 ADRP X20, 0xB23000
	0x038BE36C LDRB W8, [X20 + 0x564]
	0x038BE370 FMUL S8, S8, S9
	0x038BE374 CBNZ W8, 0x38BE38C
	0x038BE378 ADRP X0, 0x835000
	0x038BE37C LDR X0, [X0 + 0x5A8]
	0x038BE380 BL 0x1C16CF4
	0x038BE384 MOVZ W8, 0x1
	0x038BE388 STRB W8, [X20 + 0x564]
	0x038BE38C LDR X0, [X19]
	0x038BE390 FCVT S8, S8
	0x038BE394 LDR W8, [X0 + 0xE0]
	0x038BE398 CBNZ W8, 0x38BE3A0
	0x038BE39C BL 0x1C16DFC
	0x038BE3A0 ADD X0, X31, 0x28
	0x038BE3A4 ADD X1, X31, 0x8
	0x038BE3A8 MOV V0.16B, V8.16B
	0x038BE3AC BL 0x3EB1E40
	0x038BE3B0 LDR V0, [X31 + 0x28]
	0x038BE3B4 LDR V2, [X31 + 0x8]
	0x038BE3B8 LDP X20, X19, [X31 + 0x30]
	0x038BE3BC LDR X30, [X31 + 0x20]
	0x038BE3C0 LDP D9, D8, [X31 + 0x10]
	0x038BE3C4 FMOV S1, W31
	0x00000000 INVALID
	0x00000000 INVALID
	0x038BE3D0 FMOV S2, W31
	0x038BE3D4 ADD X31, X31, 0x40
	0x038BE3D8 RET
	0x038BE3DC SUB X31, X31, 0x40
	0x038BE3E0 STP D9, D8, [X31 + 0x10]
	0x038BE3E4 STR X30, [X31 + 0x20]
	0x038BE3E8 STP X20, X19, [X31 + 0x30]
	0x038BE3EC ADRP X19, 0xB23000
	0x038BE3F0 LDRB W8, [X19 + 0x56A]
	0x038BE3F4 MOV V8.16B, V0.16B
	0x038BE3F8 CBNZ W8, 0x38BE410

ISIL:
	001 Move [X31-96], D11
	002 Move [X31-88], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move W8, [X1]
	013 Move W10, [X1+28]
	014 Move W9, [X1+32]
	015 Move S3, [X1+16]
	016 Move S1, [X1+20]
	017 Move W11, [X1+8]
	018 Move W12, [X1+12]
	019 And W13, W8, 0x80000000
	020 Xor W9, W9, W13
	021 Move S6, W9
	022 NotImplemented "Instruction SBFM not yet implemented."
	023 And W8, W8, 0x7FFFFFFF
	024 Add S3, S3, S6
	025 Move S5, W8
	026 Move W8, S3
	027 NotImplemented "Instruction SBFM not yet implemented."
	028 NotImplemented "Instruction BFM not yet implemented."
	029 Move X10, X14
	030 ShiftRight X10, 32
	031 And X10, X10, 0x7FFFFFFF
	032 Move X13, X9
	033 NotImplemented "Instruction BFM not yet implemented."
	034 Move V2, [X1+24]
	035 And X10, X10, -1
	036 NotImplemented "Instruction BFM not yet implemented."
	037 NotImplemented "Instruction BFM not yet implemented."
	038 And X9, X9, -9223372034707292160
	039 Xor X8, X8, X10
	040 And X10, X13, -9223372034707292160
	041 Xor X9, X11, X9
	042 Move V0, [X1+4]
	043 Move S4, 1
	044 Xor X8, X8, X10
	045 Xor X9, X9, -9223372034707292160
	046 Add S4, S5, S4
	047 Move X10, X8
	048 ShiftRight X10, 32
	049 And X10, X10, 0x7FFFFFFF
	050 Move S3, W8
	051 Move X8, X9
	052 ShiftRight X8, 32
	053 And X8, X8, 0x7FFFFFFF
	054 Move S5, W9
	055 Add S3, S4, S3
	056 Add S2, S2, S5
	057 Xor W9, W10, 0x80000000
	058 Move S4, W8
	059 Add S1, S1, S4
	060 Move W10, S2
	061 Move S2, W9
	062 Add S0, S0, S2
	063 Move W9, S1
	064 Move W8, S3
	065 NotImplemented "Instruction BFM not yet implemented."
	066 Move W9, S0
	067 NotImplemented "Instruction BFM not yet implemented."
	068 NotImplemented "Instruction BFM not yet implemented."
	069 NotImplemented "Instruction BIC not yet implemented."
	070 And X10, X10, X14
	071 NotImplemented "Instruction BIC not yet implemented."
	072 And X8, X8, X14
	073 NotImplemented "Instruction ORN not yet implemented."
	074 Or X10, X12, X10
	075 Or X8, X9, X8
	076 And X9, X11, X8
	077 And X11, X11, X10
	078 And X10, X10, X13
	079 And X8, X8, X13
	080 Or X21, X10, X9
	081 Or X20, X11, X8
	082 Move X22, X21
	083 ShiftRight X22, 32
	084 And X22, X22, 0x7FFFFFFF
	085 Move X23, X20
	086 ShiftRight X23, 32
	087 And X23, X23, 0x7FFFFFFF
	088 Move [X0], W21
	089 Move [X0+4], W22
	090 Move [X0+8], W20
	091 Move [X0+12], W23
	092 Move X24, 0xB24000
	093 Move W8, [X24+1413]
	094 Move X19, X0
	095 Compare W8, 0
	096 JumpIfNotEqual {102}
	097 Move X0, 0x836000
	098 Move X0, [X0+1448]
	099 Call 0x1C17CF4
	100 Move W8, 1
	101 Move [X24+1413], W8
	102 Move X8, 0x836000
	103 Move X8, [X8+1448]
	104 Move S11, W21
	105 Move S10, W22
	106 Move S9, W20
	107 Move X0, [X8]
	108 Move S8, W23
	109 Move W8, [X0+224]
	110 Compare W8, 0
	111 JumpIfNotEqual {113}
	112 Call 0x1C17DFC
	113 Multiply S2, S11, S11
	114 Multiply S3, S10, S10
	115 Multiply S1, S9, S9
	116 Add S2, S2, S3
	117 Multiply S0, S8, S8
	118 Add S1, S1, S2
	119 Add S0, S0, S1
	120 Move S3, 1
	121 NotImplemented "Instruction FSQRT not yet implemented."
	122 NotImplemented "Instruction FDIV not yet implemented."
	123 Multiply S1, S0, S11
	124 Multiply S2, S0, S10
	125 Multiply S3, S0, S9
	126 Multiply S0, S0, S8
	127 Move [X19], S1
	128 Move [X19+8], S2
	129 Move [X19+8], S3
	130 Move [X19+16], S0
	131 Move X20, [X31+80]
	132 Move X19, [X31+88]
	133 Move X22, [X31+64]
	134 Move X21, [X31+72]
	135 Move X24, [X31+48]
	136 Move X23, [X31+56]
	137 Move X30, [X31+32]
	138 Move D9, [X31+16]
	139 Move D8, [X31+24]
	140 Move D11, [X31+96]
	141 Move D10, [X31+104]
	142 Return 

Method: System.Void .ctor(Unity.Mathematics.float4x4 m)

Disassembly:
	0x038BE3FC ADRP X0, 0x835000
	0x038BE400 LDR X0, [X0 + 0x5A8]
	0x038BE404 BL 0x1C16CF4
	0x038BE408 MOVZ W8, 0x1
	0x038BE40C STRB W8, [X19 + 0x56A]
	0x038BE410 ADRP X19, 0x835000
	0x038BE414 LDR X19, [X19 + 0x5A8]
	0x038BE418 FMOV S9, 0.5
	0x038BE41C LDR X0, [X19]
	0x038BE420 LDR W8, [X0 + 0xE0]
	0x038BE424 CBNZ W8, 0x38BE42C
	0x038BE428 BL 0x1C16DFC
	0x038BE42C ADRP X20, 0xB23000
	0x038BE430 LDRB W8, [X20 + 0x564]
	0x038BE434 FMUL S8, S8, S9
	0x038BE438 CBNZ W8, 0x38BE450
	0x038BE43C ADRP X0, 0x835000
	0x038BE440 LDR X0, [X0 + 0x5A8]
	0x038BE444 BL 0x1C16CF4
	0x038BE448 MOVZ W8, 0x1
	0x038BE44C STRB W8, [X20 + 0x564]
	0x038BE450 LDR X0, [X19]
	0x038BE454 FCVT S8, S8
	0x038BE458 LDR W8, [X0 + 0xE0]
	0x038BE45C CBNZ W8, 0x38BE464
	0x038BE460 BL 0x1C16DFC
	0x038BE464 ADD X0, X31, 0x28
	0x038BE468 ADD X1, X31, 0x8
	0x038BE46C MOV V0.16B, V8.16B
	0x038BE470 BL 0x3EB1E40
	0x038BE474 LDR V1, [X31 + 0x28]
	0x038BE478 LDR V2, [X31 + 0x8]
	0x038BE47C LDP X20, X19, [X31 + 0x30]
	0x038BE480 LDR X30, [X31 + 0x20]
	0x038BE484 LDP D9, D8, [X31 + 0x10]
	0x038BE488 FMOV S0, W31
	0x00000000 INVALID
	0x00000000 INVALID
	0x038BE494 FMOV S2, W31
	0x038BE498 ADD X31, X31, 0x40
	0x038BE49C RET
	0x038BE4A0 SUB X31, X31, 0x40
	0x038BE4A4 STP D9, D8, [X31 + 0x10]
	0x038BE4A8 STR X30, [X31 + 0x20]
	0x038BE4AC STP X20, X19, [X31 + 0x30]
	0x038BE4B0 ADRP X19, 0xB23000
	0x038BE4B4 LDRB W8, [X19 + 0x56A]
	0x038BE4B8 MOV V8.16B, V0.16B
	0x038BE4BC CBNZ W8, 0x38BE4D4
	0x038BE4C0 ADRP X0, 0x835000
	0x038BE4C4 LDR X0, [X0 + 0x5A8]
	0x038BE4C8 BL 0x1C16CF4
	0x038BE4CC MOVZ W8, 0x1
	0x038BE4D0 STRB W8, [X19 + 0x56A]
	0x038BE4D4 ADRP X19, 0x835000
	0x038BE4D8 LDR X19, [X19 + 0x5A8]
	0x038BE4DC FMOV S9, 0.5
	0x038BE4E0 LDR X0, [X19]
	0x038BE4E4 LDR W8, [X0 + 0xE0]
	0x038BE4E8 CBNZ W8, 0x38BE4F0
	0x038BE4EC BL 0x1C16DFC
	0x038BE4F0 ADRP X20, 0xB23000
	0x038BE4F4 LDRB W8, [X20 + 0x564]
	0x038BE4F8 FMUL S8, S8, S9
	0x038BE4FC CBNZ W8, 0x38BE514
	0x038BE500 ADRP X0, 0x835000
	0x038BE504 LDR X0, [X0 + 0x5A8]
	0x038BE508 BL 0x1C16CF4
	0x038BE50C MOVZ W8, 0x1
	0x038BE510 STRB W8, [X20 + 0x564]
	0x038BE514 LDR X0, [X19]
	0x038BE518 FCVT S8, S8
	0x038BE51C LDR W8, [X0 + 0xE0]
	0x038BE520 CBNZ W8, 0x38BE528
	0x038BE524 BL 0x1C16DFC
	0x038BE528 ADD X0, X31, 0x28
	0x038BE52C ADD X1, X31, 0x8
	0x038BE530 MOV V0.16B, V8.16B
	0x038BE534 BL 0x3EB1E40
	0x038BE538 LDR V1, [X31 + 0x28]
	0x038BE53C LDR V3, [X31 + 0x8]
	0x038BE540 LDP X20, X19, [X31 + 0x30]
	0x038BE544 LDR X30, [X31 + 0x20]
	0x038BE548 LDP D9, D8, [X31 + 0x10]
	0x038BE54C FMOV S0, W31
	0x00000000 INVALID
	0x00000000 INVALID
	0x038BE558 FMOV S1, W31
	0x038BE55C ADD X31, X31, 0x40
	0x038BE560 RET
	0x038BE564 SUB X31, X31, 0x90
	0x038BE568 STP D15, D14, [X31 + 0x40]
	0x038BE56C STP D13, D12, [X31 + 0x50]
	0x038BE570 STP D11, D10, [X31 + 0x60]
	0x038BE574 STP D9, D8, [X31 + 0x70]
	0x038BE578 STP X30, X19, [X31 + 0x80]
	0x038BE57C ADRP X19, 0xB23000
	0x038BE580 LDRB W8, [X19 + 0x585]
	0x038BE584 MOV V9.16B, V0.16B
	0x038BE588 MOV V8.16B, V2.16B
	0x038BE58C MOV V10.16B, V1.16B
	0x038BE590 FMUL S11, S1, S3
	0x038BE594 FMUL S12, S2, S4
	0x038BE598 FMUL S0, S0, S5
	0x038BE59C FMUL S14, S9, S4
	0x038BE5A0 FMUL S15, S1, S5
	0x038BE5A4 FMUL S13, S2, S3
	0x038BE5A8 CBNZ W8, 0x38BE5C8
	0x038BE5AC ADRP X0, 0x835000
	0x038BE5B0 LDR X0, [X0 + 0x5A8]
	0x038BE5B4 STR S0, [X31 + 0x4]
	0x038BE5B8 BL 0x1C16CF4
	0x038BE5BC LDR V0, [X31 + 0x4]
	0x038BE5C0 MOVZ W8, 0x1

ISIL:
	001 Move [X31-96], D11
	002 Move [X31-88], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move W8, [X1]
	013 Move W11, [X1+36]
	014 Move W10, [X1+40]
	015 Move S3, [X1+20]
	016 Move S1, [X1+24]
	017 Move W9, [X1+8]
	018 And W13, W8, 0x80000000
	019 Xor W10, W10, W13
	020 Move S6, W10
	021 Move W12, [X1+16]
	022 NotImplemented "Instruction SBFM not yet implemented."
	023 And W8, W8, 0x7FFFFFFF
	024 Add S3, S3, S6
	025 Move S5, W8
	026 Move W8, S3
	027 NotImplemented "Instruction SBFM not yet implemented."
	028 NotImplemented "Instruction BFM not yet implemented."
	029 Move X11, X14
	030 ShiftRight X11, 32
	031 And X11, X11, 0x7FFFFFFF
	032 Move X13, X10
	033 NotImplemented "Instruction BFM not yet implemented."
	034 Move V2, [X1+32]
	035 And X11, X11, -1
	036 NotImplemented "Instruction BFM not yet implemented."
	037 NotImplemented "Instruction BFM not yet implemented."
	038 And X10, X10, -9223372034707292160
	039 Xor X8, X8, X11
	040 And X11, X13, -9223372034707292160
	041 Xor X9, X9, X10
	042 Move V0, [X1+4]
	043 Move S4, 1
	044 Xor X8, X8, X11
	045 Xor X9, X9, -9223372034707292160
	046 Add S4, S5, S4
	047 Move X11, X8
	048 ShiftRight X11, 32
	049 And X11, X11, 0x7FFFFFFF
	050 Move S3, W8
	051 Move X8, X9
	052 ShiftRight X8, 32
	053 And X8, X8, 0x7FFFFFFF
	054 Move S5, W9
	055 Add S3, S4, S3
	056 Add S2, S2, S5
	057 Xor W9, W11, 0x80000000
	058 Move S4, W8
	059 Add S1, S1, S4
	060 Move W11, S2
	061 Move S2, W9
	062 Add S0, S0, S2
	063 Move W9, S1
	064 Move W8, S3
	065 NotImplemented "Instruction BFM not yet implemented."
	066 Move W9, S0
	067 NotImplemented "Instruction BFM not yet implemented."
	068 NotImplemented "Instruction BFM not yet implemented."
	069 NotImplemented "Instruction BIC not yet implemented."
	070 And X11, X11, X14
	071 NotImplemented "Instruction BIC not yet implemented."
	072 And X8, X8, X14
	073 NotImplemented "Instruction ORN not yet implemented."
	074 Or X11, X12, X11
	075 Or X8, X9, X8
	076 And X9, X10, X8
	077 And X10, X10, X11
	078 And X11, X11, X13
	079 And X8, X8, X13
	080 Or X21, X11, X9
	081 Or X20, X10, X8
	082 Move X22, X21
	083 ShiftRight X22, 32
	084 And X22, X22, 0x7FFFFFFF
	085 Move X23, X20
	086 ShiftRight X23, 32
	087 And X23, X23, 0x7FFFFFFF
	088 Move [X0], W21
	089 Move [X0+4], W22
	090 Move [X0+8], W20
	091 Move [X0+12], W23
	092 Move X24, 0xB24000
	093 Move W8, [X24+1413]
	094 Move X19, X0
	095 Compare W8, 0
	096 JumpIfNotEqual {102}
	097 Move X0, 0x836000
	098 Move X0, [X0+1448]
	099 Call 0x1C17CF4
	100 Move W8, 1
	101 Move [X24+1413], W8
	102 Move X8, 0x836000
	103 Move X8, [X8+1448]
	104 Move S11, W21
	105 Move S10, W22
	106 Move S9, W20
	107 Move X0, [X8]
	108 Move S8, W23
	109 Move W8, [X0+224]
	110 Compare W8, 0
	111 JumpIfNotEqual {113}
	112 Call 0x1C17DFC
	113 Multiply S2, S11, S11
	114 Multiply S3, S10, S10
	115 Multiply S1, S9, S9
	116 Add S2, S2, S3
	117 Multiply S0, S8, S8
	118 Add S1, S1, S2
	119 Add S0, S0, S1
	120 Move S3, 1
	121 NotImplemented "Instruction FSQRT not yet implemented."
	122 NotImplemented "Instruction FDIV not yet implemented."
	123 Multiply S1, S0, S11
	124 Multiply S2, S0, S10
	125 Multiply S3, S0, S9
	126 Multiply S0, S0, S8
	127 Move [X19], S1
	128 Move [X19+8], S2
	129 Move [X19+8], S3
	130 Move [X19+16], S0
	131 Move X20, [X31+80]
	132 Move X19, [X31+88]
	133 Move X22, [X31+64]
	134 Move X21, [X31+72]
	135 Move X24, [X31+48]
	136 Move X23, [X31+56]
	137 Move X30, [X31+32]
	138 Move D9, [X31+16]
	139 Move D8, [X31+24]
	140 Move D11, [X31+96]
	141 Move D10, [X31+104]
	142 Return 

Method: Unity.Mathematics.quaternion AxisAngle(Unity.Mathematics.float3 axis, System.Single angle)

Disassembly:
	0x038BE5C4 STRB W8, [X19 + 0x585]
	0x038BE5C8 ADRP X8, 0x835000
	0x038BE5CC LDR X8, [X8 + 0x5A8]
	0x038BE5D0 FSUB S11, S11, S14
	0x038BE5D4 FSUB S12, S12, S15
	0x038BE5D8 FSUB S13, S0, S13
	0x038BE5DC LDR X0, [X8]
	0x038BE5E0 LDR W8, [X0 + 0xE0]
	0x038BE5E4 CBNZ W8, 0x38BE5EC
	0x038BE5E8 BL 0x1C16DFC
	0x038BE5EC FMUL S1, S12, S12
	0x038BE5F0 FMUL S2, S13, S13
	0x038BE5F4 FMUL S0, S11, S11
	0x038BE5F8 FADD S1, S1, S2
	0x038BE5FC FADD S0, S0, S1
	0x038BE600 FMOV S3, 1
	0x038BE604 FSQRT S0, S0
	0x038BE608 FDIV S0, S3, S0
	0x038BE60C FMUL S1, S12, S0
	0x038BE610 FMUL S2, S13, S0
	0x038BE614 FMUL S0, S11, S0
	0x038BE618 FMUL S3, S9, S2
	0x038BE61C FMUL S4, S10, S0
	0x038BE620 FMUL S5, S8, S1
	0x038BE624 FMUL S6, S10, S1
	0x038BE628 FMUL S7, S8, S2
	0x038BE62C FMUL S16, S9, S0
	0x038BE630 STP S1, S2, [X31 + 0x8]
	0x038BE634 FSUB S1, S3, S6
	0x038BE638 FSUB S2, S4, S7
	0x038BE63C FSUB S3, S5, S16
	0x038BE640 ADD X0, X31, 0x30
	0x038BE644 ADD X1, X31, 0x8
	0x038BE648 STP S9, S10, [X31 + 0x20]
	0x038BE64C STR S8, [X31 + 0x28]
	0x038BE650 STP S0, S2, [X31 + 0x10]
	0x038BE654 STP S3, S1, [X31 + 0x18]
	0x038BE658 STP X31, X31, [X31 + 0x30]
	0x038BE65C BL 0x38BD238
	0x038BE660 LDP S0, S1, [X31 + 0x30]
	0x038BE664 LDP S2, S3, [X31 + 0x38]
	0x038BE668 LDP X30, X19, [X31 + 0x80]
	0x038BE66C LDP D9, D8, [X31 + 0x70]
	0x038BE670 LDP D11, D10, [X31 + 0x60]
	0x038BE674 LDP D13, D12, [X31 + 0x50]
	0x038BE678 LDP D15, D14, [X31 + 0x40]
	0x038BE67C ADD X31, X31, 0x90
	0x038BE680 RET
	0x038BE684 SUB X31, X31, 0xA0
	0x038BE688 STP D15, D14, [X31 + 0x40]
	0x038BE68C STP D13, D12, [X31 + 0x50]
	0x038BE690 STP D11, D10, [X31 + 0x60]
	0x038BE694 STP D9, D8, [X31 + 0x70]
	0x038BE698 STR X30, [X31 + 0x80]

ISIL:
	001 Move [X31-64], D12
	002 Move [X31+8], D11
	003 Move [X31+16], D10
	004 Move [X31+24], D9
	005 Move [X31+32], D8
	006 Move [X31+40], X30
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X19, 0xB24000
	010 Move W8, [X19+1386]
	011 Move V11, V3
	012 Move V8, V2
	013 Move V9, V1
	014 Move V10, V0
	015 Move S12, 0.5
	016 Compare W8, 0
	017 JumpIfNotEqual {23}
	018 Move X0, 0x836000
	019 Move X0, [X0+1448]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X19+1386], W8
	023 Move X19, 0x836000
	024 Move X19, [X19+1448]
	025 Multiply S11, S11, S12
	026 Move X0, [X19]
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 NotImplemented "Instruction FCVT not yet implemented."
	032 Move V0, V11
	033 Call 0x3EB2C30
	034 Move X20, 0xB24000
	035 Move W8, [X20+1380]
	036 Move V12, V0
	037 Compare W8, 0
	038 JumpIfNotEqual {44}
	039 Move X0, 0x836000
	040 Move X0, [X0+1448]
	041 Call 0x1C17CF4
	042 Move W8, 1
	043 Move [X20+1380], W8
	044 Move X0, [X19]
	045 NotImplemented "Instruction INVALID not yet implemented."
	046 Move W8, [X0+224]
	047 Compare W8, 0
	048 JumpIfNotEqual {50}
	049 Call 0x1C17DFC
	050 Move V0, V11
	051 Call 0x3EB2BF0
	052 NotImplemented "Instruction INVALID not yet implemented."
	053 Multiply S0, S10, S12
	054 Multiply S1, S9, S12
	055 Multiply S2, S8, S12
	056 Move X20, [X31+48]
	057 Move X19, [X31+56]
	058 Move X30, [X31+40]
	059 Move D9, [X31+24]
	060 Move D8, [X31+32]
	061 Move D11, [X31+8]
	062 Move D10, [X31+16]
	063 Move V12, [X31+64]
	064 Return X0

Method: Unity.Mathematics.quaternion EulerXYZ(Unity.Mathematics.float3 xyz)

Disassembly:
	0x038BE69C STP X20, X19, [X31 + 0x90]
	0x038BE6A0 ADRP X19, 0xB23000
	0x038BE6A4 LDRB W8, [X19 + 0x585]
	0x038BE6A8 MOV V12.16B, V1.16B
	0x038BE6AC MOV V13.16B, V0.16B
	0x038BE6B0 FMUL S0, S0, S0
	0x038BE6B4 FMUL S1, S1, S1
	0x038BE6B8 MOV V15.16B, V4.16B
	0x038BE6BC MOV V10.16B, V3.16B
	0x038BE6C0 MOV V11.16B, V2.16B
	0x038BE6C4 FADD S9, S0, S1
	0x038BE6C8 FMUL S14, S2, S2
	0x038BE6CC STR S5, [X31 + 0x8C]
	0x038BE6D0 CBNZ W8, 0x38BE6E8
	0x038BE6D4 ADRP X0, 0x835000
	0x038BE6D8 LDR X0, [X0 + 0x5A8]
	0x038BE6DC BL 0x1C16CF4
	0x038BE6E0 MOVZ W8, 0x1
	0x038BE6E4 STRB W8, [X19 + 0x585]
	0x038BE6E8 ADRP X20, 0x835000
	0x038BE6EC LDR X20, [X20 + 0x5A8]
	0x038BE6F0 FMUL S8, S10, S10
	0x038BE6F4 STR S15, [X31 + 0x88]
	0x038BE6F8 FMUL S15, S15, S15
	0x038BE6FC LDR X0, [X20]
	0x038BE700 FADD S14, S14, S9
	0x038BE704 LDR W8, [X0 + 0xE0]
	0x038BE708 CBZ W8, 0x38BE714
	0x038BE70C MOV W8, W31
	0x038BE710 B 0x38BE724
	0x038BE714 BL 0x1C16DFC
	0x038BE718 LDRB W8, [X19 + 0x585]
	0x038BE71C CMP W8, 0x0
	0x038BE720 CSET W8, EQ
	0x038BE724 LDR V0, [X31 + 0x8C]
	0x038BE728 FADD S15, S8, S15
	0x038BE72C FMOV S1, 1
	0x038BE730 FMUL S8, S0, S0
	0x038BE734 FSQRT S0, S14
	0x038BE738 FDIV S9, S1, S0
	0x038BE73C CBZ W8, 0x38BE754
	0x038BE740 ADRP X0, 0x835000
	0x038BE744 LDR X0, [X0 + 0x5A8]
	0x038BE748 BL 0x1C16CF4
	0x038BE74C MOVZ W8, 0x1

ISIL:
	001 Move [X31-64], D13
	002 Move [X31-56], D12
	003 Move [X31+16], D11
	004 Move [X31+24], D10
	005 Move [X31+32], D9
	006 Move [X31+40], D8
	007 Move [X31+48], X30
	008 Move S3, 0.5
	009 Multiply S8, S0, S3
	010 Multiply S9, S1, S3
	011 Multiply S10, S2, S3
	012 Move V0, V8
	013 Move V1, V9
	014 Move V2, V10
	015 Move X0, X31
	016 Call 0x384CD60
	017 Move V11, V0
	018 Move V12, V1
	019 Move V13, V2
	020 Move V0, V8
	021 Move V1, V9
	022 Move V2, V10
	023 Move X0, X31
	024 Call 0x384CE4C
	025 Multiply S5, S13, S0
	026 Multiply S7, S12, S13
	027 Multiply S16, S11, S13
	028 Multiply S3, S11, S1
	029 Multiply S6, S0, S1
	030 Multiply S17, S12, S11
	031 Multiply S5, S1, S5
	032 Multiply S1, S16, S1
	033 Multiply S16, S11, S7
	034 Move X30, [X31+48]
	035 Move D9, [X31+32]
	036 Move D8, [X31+40]
	037 Move D11, [X31+16]
	038 Move D10, [X31+24]
	039 Multiply S4, S12, S0
	040 Multiply S3, S2, S3
	041 Multiply S4, S2, S4
	042 Multiply S6, S2, S6
	043 Multiply S2, S17, S2
	044 Multiply S0, S7, S0
	045 Subtract S0, S3, S0
	046 Add S1, S1, S4
	047 Subtract S2, S5, S2
	048 Add S3, S16, S6
	049 Move D13, [X31+64]
	050 Move D12, [X31+72]
	051 Return X0

Method: Unity.Mathematics.quaternion EulerXZY(Unity.Mathematics.float3 xyz)

Disassembly:
	0x038BE750 STRB W8, [X19 + 0x585]
	0x038BE754 LDR X0, [X20]
	0x038BE758 FADD S15, S8, S15
	0x038BE75C FMUL S13, S13, S9
	0x038BE760 FMUL S12, S12, S9
	0x038BE764 LDR W8, [X0 + 0xE0]
	0x038BE768 FMUL S8, S11, S9
	0x038BE76C CBZ W8, 0x38BE778
	0x038BE770 MOV W8, W31
	0x038BE774 B 0x38BE788
	0x038BE778 BL 0x1C16DFC
	0x038BE77C LDRB W8, [X19 + 0x585]
	0x038BE780 CMP W8, 0x0
	0x038BE784 CSET W8, EQ
	0x038BE788 LDP S2, S3, [X31 + 0x88]
	0x038BE78C FSQRT S0, S15
	0x038BE790 FMOV S1, 1
	0x038BE794 FDIV S0, S1, S0
	0x038BE798 FMUL S1, S10, S0
	0x038BE79C FMUL S2, S2, S0
	0x038BE7A0 FMUL S0, S3, S0
	0x038BE7A4 FMUL S3, S12, S1
	0x038BE7A8 FMUL S4, S8, S2
	0x038BE7AC FMUL S5, S13, S0
	0x038BE7B0 FMUL S0, S12, S0
	0x038BE7B4 FMUL S1, S8, S1
	0x038BE7B8 FMUL S2, S13, S2
	0x038BE7BC FSUB S10, S4, S0
	0x038BE7C0 FSUB S11, S5, S1
	0x038BE7C4 FSUB S6, S3, S2
	0x038BE7C8 FMUL S0, S10, S10
	0x038BE7CC FMUL S1, S11, S11
	0x038BE7D0 STR S8, [X31 + 0x8C]
	0x038BE7D4 FADD S8, S0, S1
	0x038BE7D8 FMUL S9, S6, S6
	0x038BE7DC CBZ W8, 0x38BE824
	0x038BE7E0 ADRP X0, 0x835000
	0x038BE7E4 LDR X0, [X0 + 0x5A8]
	0x038BE7E8 STR S13, [X31 + 0x88]
	0x038BE7EC MOV V13.16B, V12.16B
	0x038BE7F0 MOV V12.16B, V11.16B
	0x038BE7F4 MOV V11.16B, V14.16B
	0x038BE7F8 MOV V14.16B, V10.16B
	0x038BE7FC MOV V10.16B, V6.16B
	0x038BE800 BL 0x1C16CF4

ISIL:
	001 Move [X31-64], D13
	002 Move [X31-56], D12
	003 Move [X31+16], D11
	004 Move [X31+24], D10
	005 Move [X31+32], D9
	006 Move [X31+40], D8
	007 Move [X31+48], X30
	008 Move S3, 0.5
	009 Multiply S8, S0, S3
	010 Multiply S9, S1, S3
	011 Multiply S10, S2, S3
	012 Move V0, V8
	013 Move V1, V9
	014 Move V2, V10
	015 Move X0, X31
	016 Call 0x384CD60
	017 Move V11, V0
	018 Move V12, V1
	019 Move V13, V2
	020 Move V0, V8
	021 Move V1, V9
	022 Move V2, V10
	023 Move X0, X31
	024 Call 0x384CE4C
	025 Multiply S7, S12, S13
	026 Multiply S3, S11, S1
	027 Multiply S4, S12, S0
	028 Multiply S5, S13, S0
	029 Multiply S6, S0, S1
	030 Multiply S16, S11, S13
	031 Multiply S17, S12, S11
	032 Multiply S0, S7, S0
	033 Multiply S7, S11, S7
	034 Move X30, [X31+48]
	035 Move D9, [X31+32]
	036 Move D8, [X31+40]
	037 Move D11, [X31+16]
	038 Move D10, [X31+24]
	039 Multiply S3, S2, S3
	040 Multiply S4, S2, S4
	041 Multiply S5, S1, S5
	042 Multiply S6, S2, S6
	043 Multiply S1, S16, S1
	044 Multiply S2, S17, S2
	045 Add S0, S0, S3
	046 Add S1, S1, S4
	047 Subtract S2, S5, S2
	048 Subtract S3, S6, S7
	049 Move D13, [X31+64]
	050 Move D12, [X31+72]
	051 Return X0

Method: Unity.Mathematics.quaternion EulerYXZ(Unity.Mathematics.float3 xyz)

Disassembly:
	0x038BE804 MOV V6.16B, V10.16B
	0x038BE808 MOV V10.16B, V14.16B
	0x038BE80C MOV V14.16B, V11.16B
	0x038BE810 MOV V11.16B, V12.16B
	0x038BE814 MOV V12.16B, V13.16B
	0x038BE818 LDR V13, [X31 + 0x88]
	0x038BE81C MOVZ W8, 0x1
	0x038BE820 STRB W8, [X19 + 0x585]
	0x038BE824 LDR X0, [X20]
	0x038BE828 FADD S8, S9, S8
	0x038BE82C LDR W8, [X0 + 0xE0]
	0x038BE830 CBNZ W8, 0x38BE840
	0x038BE834 MOV V9.16B, V6.16B
	0x038BE838 BL 0x1C16DFC
	0x038BE83C MOV V6.16B, V9.16B
	0x038BE840 FMOV W8, S15
	0x038BE844 AND W8, W8, 0x7FFFFFFF
	0x038BE848 MOVZ W10, 0x7F800000
	0x038BE84C ADRP X9, 0xFFFFFFFFFD22C000
	0x038BE850 CMP W8, W10
	0x038BE854 LDR V0, [X9 + 0x224]
	0x038BE858 CSET W9, HI
	0x038BE85C FCMP S14, S15
	0x038BE860 CSET W11, MI
	0x038BE864 CSET W12, GT
	0x038BE868 ORR W11, W11, W9, 0x0
	0x038BE86C ORR W12, W12, W9, 0x0
	0x038BE870 FMOV W9, S8
	0x038BE874 AND W9, W9, 0x7FFFFFFF
	0x038BE878 CMP W11, 0x0
	0x038BE87C FCSEL S1, S14, S15, NE
	0x038BE880 CMP W9, W10
	0x038BE884 CSET W10, HI
	0x038BE888 FCMP S1, S8
	0x038BE88C CSET W11, MI
	0x038BE890 ORR W11, W11, W10, 0x0
	0x038BE894 CMP W11, 0x0
	0x038BE898 FCSEL S1, S1, S8, NE
	0x038BE89C CMP W12, 0x0
	0x038BE8A0 FCSEL S2, S14, S15, NE
	0x038BE8A4 FCMP S2, S8
	0x038BE8A8 CSET W11, GT
	0x038BE8AC ORR W10, W11, W10, 0x0
	0x038BE8B0 CMP W10, 0x0
	0x038BE8B4 FCSEL S3, S2, S8, NE

ISIL:
	001 Move [X31-64], D13
	002 Move [X31-56], D12
	003 Move [X31+16], D11
	004 Move [X31+24], D10
	005 Move [X31+32], D9
	006 Move [X31+40], D8
	007 Move [X31+48], X30
	008 Move S3, 0.5
	009 Multiply S8, S0, S3
	010 Multiply S9, S1, S3
	011 Multiply S10, S2, S3
	012 Move V0, V8
	013 Move V1, V9
	014 Move V2, V10
	015 Move X0, X31
	016 Call 0x384CD60
	017 Move V11, V0
	018 Move V12, V1
	019 Move V13, V2
	020 Move V0, V8
	021 Move V1, V9
	022 Move V2, V10
	023 Move X0, X31
	024 Call 0x384CE4C
	025 Multiply S7, S12, S13
	026 Multiply S3, S11, S1
	027 Multiply S4, S12, S0
	028 Multiply S5, S13, S0
	029 Multiply S6, S0, S1
	030 Multiply S16, S11, S13
	031 Multiply S17, S11, S12
	032 Multiply S0, S7, S0
	033 Multiply S7, S11, S7
	034 Move X30, [X31+48]
	035 Move D9, [X31+32]
	036 Move D8, [X31+40]
	037 Move D11, [X31+16]
	038 Move D10, [X31+24]
	039 Multiply S3, S2, S3
	040 Multiply S4, S2, S4
	041 Multiply S5, S1, S5
	042 Multiply S6, S2, S6
	043 Multiply S1, S16, S1
	044 Multiply S2, S17, S2
	045 Subtract S0, S3, S0
	046 Add S1, S1, S4
	047 Add S2, S2, S5
	048 Subtract S3, S6, S7
	049 Move D13, [X31+64]
	050 Move D12, [X31+72]
	051 Return X0

Method: Unity.Mathematics.quaternion EulerYZX(Unity.Mathematics.float3 xyz)

Disassembly:
	0x038BE8B8 FSQRT S2, S8
	0x038BE8BC FMOV S15, 1
	0x038BE8C0 FCMP S1, S0
	0x038BE8C4 FDIV S0, S15, S2
	0x038BE8C8 MOV W19, W31
	0x038BE8CC FMUL S2, S10, S0
	0x038BE8D0 FMUL S1, S11, S0
	0x038BE8D4 FMUL S0, S6, S0
	0x038BE8D8 B.LE 0x38BE934
	0x038BE8DC ADRP X10, 0xFFFFFFFFFD22C000
	0x038BE8E0 LDR V4, [X10 + 0xA0]
	0x038BE8E4 LDR V17, [X31 + 0x8C]
	0x038BE8E8 FCMP S3, S4
	0x038BE8EC B.PL 0x38BE938
	0x038BE8F0 MOVZ W10, 0x7F800000
	0x038BE8F4 FABS S3, S14
	0x038BE8F8 FMOV S4, W10
	0x038BE8FC FCMP S3, S4
	0x038BE900 MOV W19, W31
	0x038BE904 B.PL 0x38BE938
	0x038BE908 MOVZ W10, 0x7F800000
	0x038BE90C FMOV S3, W8
	0x038BE910 FMOV S4, W10
	0x038BE914 FCMP S3, S4
	0x038BE918 B.PL 0x38BE938
	0x038BE91C MOVZ W8, 0x7F800000
	0x038BE920 FMOV S3, W9
	0x038BE924 FMOV S4, W8
	0x038BE928 FCMP S3, S4
	0x038BE92C CSET W19, MI
	0x038BE930 B 0x38BE938
	0x038BE934 LDR V17, [X31 + 0x8C]
	0x038BE938 FMUL S3, S13, S1
	0x038BE93C FMUL S4, S12, S0
	0x038BE940 FMUL S5, S17, S2
	0x038BE944 FMUL S6, S12, S2
	0x038BE948 FMUL S7, S17, S1
	0x038BE94C FMUL S16, S13, S0
	0x038BE950 STP S2, S1, [X31 + 0x8]
	0x038BE954 FSUB S1, S3, S6
	0x038BE958 FSUB S2, S4, S7
	0x038BE95C FSUB S3, S5, S16
	0x038BE960 ADD X0, X31, 0x30
	0x038BE964 ADD X1, X31, 0x8
	0x038BE968 STP S13, S12, [X31 + 0x20]

ISIL:
	001 Move [X31-64], D13
	002 Move [X31-56], D12
	003 Move [X31+16], D11
	004 Move [X31+24], D10
	005 Move [X31+32], D9
	006 Move [X31+40], D8
	007 Move [X31+48], X30
	008 Move S3, 0.5
	009 Multiply S8, S0, S3
	010 Multiply S9, S1, S3
	011 Multiply S10, S2, S3
	012 Move V0, V8
	013 Move V1, V9
	014 Move V2, V10
	015 Move X0, X31
	016 Call 0x384CD60
	017 Move V11, V0
	018 Move V12, V1
	019 Move V13, V2
	020 Move V0, V8
	021 Move V1, V9
	022 Move V2, V10
	023 Move X0, X31
	024 Call 0x384CE4C
	025 Multiply S3, S11, S1
	026 Multiply S4, S12, S0
	027 Multiply S6, S0, S1
	028 Multiply S7, S12, S13
	029 Multiply S16, S11, S12
	030 Multiply S17, S13, S11
	031 Multiply S3, S2, S3
	032 Multiply S4, S2, S4
	033 Multiply S6, S2, S6
	034 Multiply S2, S16, S2
	035 Multiply S16, S11, S7
	036 Move X30, [X31+48]
	037 Move D9, [X31+32]
	038 Move D8, [X31+40]
	039 Move D11, [X31+16]
	040 Move D10, [X31+24]
	041 Multiply S5, S13, S0
	042 Multiply S5, S1, S5
	043 Multiply S1, S17, S1
	044 Multiply S0, S7, S0
	045 Subtract S0, S3, S0
	046 Subtract S1, S4, S1
	047 Add S2, S2, S5
	048 Add S3, S16, S6
	049 Move D13, [X31+64]
	050 Move D12, [X31+72]
	051 Return X0

Method: Unity.Mathematics.quaternion EulerZXY(Unity.Mathematics.float3 xyz)

Disassembly:
	0x038BE96C STR S17, [X31 + 0x28]
	0x038BE970 STP S0, S2, [X31 + 0x10]
	0x038BE974 STP S3, S1, [X31 + 0x18]
	0x038BE978 STP X31, X31, [X31 + 0x30]
	0x038BE97C BL 0x38BD238
	0x038BE980 LDP S2, S3, [X31 + 0x38]
	0x038BE984 LDP S0, S1, [X31 + 0x30]
	0x038BE988 CMP W19, 0x0
	0x038BE98C LDP X20, X19, [X31 + 0x90]
	0x038BE990 FCSEL S3, S3, S15, NE
	0x038BE994 LDR X30, [X31 + 0x80]
	0x038BE998 LDP D9, D8, [X31 + 0x70]
	0x038BE99C LDP D11, D10, [X31 + 0x60]
	0x038BE9A0 LDP D13, D12, [X31 + 0x50]
	0x038BE9A4 LDP D15, D14, [X31 + 0x40]
	0x038BE9A8 FMOV S4, W31
	0x038BE9AC FCSEL S0, S0, S4, NE
	0x038BE9B0 FCSEL S1, S1, S4, NE
	0x038BE9B4 FCSEL S2, S2, S4, NE
	0x038BE9B8 ADD X31, X31, 0xA0
	0x038BE9BC RET
	0x038BE9C0 LDR V4, [X0]
	0x038BE9C4 FCMP S4, S0
	0x038BE9C8 B.NE 0x38BE9F4
	0x038BE9CC LDR V0, [X0 + 0x4]
	0x038BE9D0 FCMP S0, S1
	0x038BE9D4 B.NE 0x38BE9F4
	0x038BE9D8 LDR V0, [X0 + 0x8]
	0x038BE9DC FCMP S0, S2
	0x038BE9E0 B.NE 0x38BE9F4
	0x038BE9E4 LDR V0, [X0 + 0xC]
	0x038BE9E8 FCMP S0, S3
	0x038BE9EC CSET W0, EQ
	0x038BE9F0 RET
	0x038BE9F4 MOV W0, W31
	0x038BE9F8 RET
	0x038BE9FC STP X30, X21, [X31 - 0x20]!
	0x038BEA00 STP X20, X19, [X31 + 0x10]
	0x038BEA04 ADRP X21, 0xB23000
	0x038BEA08 LDRB W8, [X21 + 0x695]
	0x038BEA0C MOV X20, X1
	0x038BEA10 MOV X19, X0
	0x038BEA14 TBNZ X8, 0x0, 0x38BEA2C
	0x038BEA18 ADRP X0, 0x83B000
	0x038BEA1C LDR X0, [X0 + 0x7B8]

ISIL:
	001 Move [X31-64], D13
	002 Move [X31-56], D12
	003 Move [X31+16], D11
	004 Move [X31+24], D10
	005 Move [X31+32], D9
	006 Move [X31+40], D8
	007 Move [X31+48], X30
	008 Move S3, 0.5
	009 Multiply S8, S0, S3
	010 Multiply S9, S1, S3
	011 Multiply S10, S2, S3
	012 Move V0, V8
	013 Move V1, V9
	014 Move V2, V10
	015 Move X0, X31
	016 Call 0x384CD60
	017 Move V11, V0
	018 Move V12, V1
	019 Move V13, V2
	020 Move V0, V8
	021 Move V1, V9
	022 Move V2, V10
	023 Move X0, X31
	024 Call 0x384CE4C
	025 Multiply S7, S12, S13
	026 Multiply S3, S11, S1
	027 Multiply S4, S12, S0
	028 Multiply S5, S13, S0
	029 Multiply S6, S0, S1
	030 Multiply S16, S13, S11
	031 Multiply S17, S12, S11
	032 Multiply S0, S7, S0
	033 Multiply S7, S11, S7
	034 Move X30, [X31+48]
	035 Move D9, [X31+32]
	036 Move D8, [X31+40]
	037 Move D11, [X31+16]
	038 Move D10, [X31+24]
	039 Multiply S3, S2, S3
	040 Multiply S4, S2, S4
	041 Multiply S5, S1, S5
	042 Multiply S6, S2, S6
	043 Multiply S1, S16, S1
	044 Multiply S2, S17, S2
	045 Add S0, S0, S3
	046 Subtract S1, S4, S1
	047 Subtract S2, S5, S2
	048 Add S3, S7, S6
	049 Move D13, [X31+64]
	050 Move D12, [X31+72]
	051 Return X0

Method: Unity.Mathematics.quaternion EulerZYX(Unity.Mathematics.float3 xyz)

Disassembly:
	0x038BEA20 BL 0x1C16CF4
	0x038BEA24 MOVZ W8, 0x1
	0x038BEA28 STRB W8, [X21 + 0x695]
	0x038BEA2C CBZ X20, 0x38BEA48
	0x038BEA30 ADRP X8, 0x83B000
	0x038BEA34 LDR X8, [X8 + 0x7B8]
	0x038BEA38 LDR X9, [X20]
	0x038BEA3C LDR X8, [X8]
	0x038BEA40 CMP X9, X8
	0x038BEA44 B.EQ 0x38BEA58
	0x038BEA48 MOV W0, W31
	0x038BEA4C LDP X20, X19, [X31 + 0x10]
	0x038BEA50 LDP X30, X21, [X31], #0x20
	0x038BEA54 RET
	0x038BEA58 MOV X0, X20
	0x038BEA5C BL 0x1C16E08
	0x038BEA60 LDR V0, [X0]
	0x038BEA64 LDR V1, [X19]
	0x038BEA68 FCMP S1, S0
	0x038BEA6C B.NE 0x38BEA48
	0x038BEA70 LDR V0, [X0 + 0x4]
	0x038BEA74 LDR V1, [X19 + 0x4]
	0x038BEA78 FCMP S1, S0
	0x038BEA7C B.NE 0x38BEA48
	0x038BEA80 LDR V0, [X0 + 0x8]
	0x038BEA84 LDR V1, [X19 + 0x8]
	0x038BEA88 FCMP S1, S0
	0x038BEA8C B.NE 0x38BEA48
	0x038BEA90 LDR V0, [X0 + 0xC]
	0x038BEA94 LDR V1, [X19 + 0xC]
	0x038BEA98 FCMP S1, S0
	0x038BEA9C CSET W0, EQ
	0x038BEAA0 B 0x38BEA4C
	0x038BEAA4 LDP W10, W11, [X0]
	0x038BEAA8 LDP W8, W9, [X0 + 0x8]
	0x038BEAAC MOVZ X13, 0xEEB
	0x038BEAB0 MOVZ X12, 0xB51
	0x038BEAB4 MOVK X13, 0xBD010000
	0x038BEAB8 MOVK X12, 0x43BE0000
	0x038BEABC MUL X11, X11, X13
	0x038BEAC0 MOVZ W13, 0xE1D1
	0x038BEAC4 MUL X9, X9, X12
	0x038BEAC8 MOVZ W12, 0x26FF
	0x038BEACC MOVK W13, 0x9CED0000
	0x038BEAD0 MOVK W12, 0xE6960000

ISIL:
	001 Move [X31-64], D13
	002 Move [X31-56], D12
	003 Move [X31+16], D11
	004 Move [X31+24], D10
	005 Move [X31+32], D9
	006 Move [X31+40], D8
	007 Move [X31+48], X30
	008 Move S3, 0.5
	009 Multiply S8, S0, S3
	010 Multiply S9, S1, S3
	011 Multiply S10, S2, S3
	012 Move V0, V8
	013 Move V1, V9
	014 Move V2, V10
	015 Move X0, X31
	016 Call 0x384CD60
	017 Move V11, V0
	018 Move V12, V1
	019 Move V13, V2
	020 Move V0, V8
	021 Move V1, V9
	022 Move V2, V10
	023 Move X0, X31
	024 Call 0x384CE4C
	025 Multiply S7, S12, S13
	026 Multiply S3, S11, S1
	027 Multiply S4, S12, S0
	028 Multiply S5, S13, S0
	029 Multiply S6, S0, S1
	030 Multiply S16, S11, S12
	031 Multiply S17, S13, S11
	032 Multiply S0, S7, S0
	033 Multiply S7, S11, S7
	034 Move X30, [X31+48]
	035 Move D9, [X31+32]
	036 Move D8, [X31+40]
	037 Move D11, [X31+16]
	038 Move D10, [X31+24]
	039 Multiply S3, S2, S3
	040 Multiply S4, S2, S4
	041 Multiply S5, S1, S5
	042 Multiply S6, S2, S6
	043 Multiply S2, S16, S2
	044 Multiply S1, S17, S1
	045 Add S0, S0, S3
	046 Subtract S1, S4, S1
	047 Add S2, S2, S5
	048 Subtract S3, S6, S7
	049 Move D13, [X31+64]
	050 Move D12, [X31+72]
	051 Return X0

Method: Unity.Mathematics.quaternion EulerXYZ(System.Single x, System.Single y, System.Single z)

Disassembly:
	0x038BEAD4 MUL W8, W8, W13
	0x038BEAD8 UBFM X11, X11, 0x20, 0x3F
	0x038BEADC MADD W8, W10, W12, W8
	0x038BEAE0 UBFM X9, X9, 0x20, 0x3F
	0x038BEAE4 ADD W8, W8, W11
	0x038BEAE8 ADD W8, W8, W9
	0x038BEAEC MOVZ W9, 0x6EE1
	0x038BEAF0 MOVK W9, 0xAF830000
	0x038BEAF4 ADD W0, W8, W9
	0x038BEAF8 RET
	0x038BEAFC SUB X31, X31, 0x40
	0x038BEB00 STR X30, [X31 + 0x10]
	0x038BEB04 STP X22, X21, [X31 + 0x20]
	0x038BEB08 STP X20, X19, [X31 + 0x30]
	0x038BEB0C ADRP X19, 0xB23000
	0x038BEB10 ADRP X21, 0x835000
	0x038BEB14 ADRP X22, 0x835000
	0x038BEB18 LDRB W8, [X19 + 0x696]
	0x038BEB1C LDR X21, [X21 + 0x9D0]
	0x038BEB20 LDR X22, [X22 + 0xA90]
	0x038BEB24 MOV X20, X0
	0x038BEB28 TBNZ X8, 0x0, 0x38BEB58
	0x038BEB2C ADRP X0, 0x835000
	0x038BEB30 LDR X0, [X0 + 0x9D0]
	0x038BEB34 BL 0x1C16CF4
	0x038BEB38 ADRP X0, 0x835000
	0x038BEB3C LDR X0, [X0 + 0xA90]
	0x038BEB40 BL 0x1C16CF4
	0x038BEB44 ADRP X0, 0x88D000
	0x038BEB48 LDR X0, [X0 + 0xC0]
	0x038BEB4C BL 0x1C16CF4
	0x038BEB50 MOVZ W8, 0x1
	0x038BEB54 STRB W8, [X19 + 0x696]
	0x038BEB58 LDR X0, [X21]
	0x038BEB5C MOVZ W1, 0x4
	0x038BEB60 BL 0x1C16D6C
	0x038BEB64 MOV X19, X0
	0x038BEB68 LDR V0, [X20]
	0x038BEB6C LDR X0, [X22]
	0x038BEB70 ADD X1, X31, 0x1C
	0x038BEB74 STR S0, [X31 + 0x1C]
	0x038BEB78 BL 0x1C16E04
	0x038BEB7C CBZ X19, 0x38BECA4
	0x038BEB80 MOV X21, X0
	0x038BEB84 CBZ X0, 0x38BEB9C

ISIL:
	001 Move [X31-64], D13
	002 Move [X31-56], D12
	003 Move [X31+16], D11
	004 Move [X31+24], D10
	005 Move [X31+32], D9
	006 Move [X31+40], D8
	007 Move [X31+48], X30
	008 Move S3, 0.5
	009 Multiply S8, S0, S3
	010 Multiply S9, S1, S3
	011 Multiply S10, S2, S3
	012 Move V0, V8
	013 Move V1, V9
	014 Move V2, V10
	015 Move X0, X31
	016 Call 0x384CD60
	017 Move V11, V0
	018 Move V12, V1
	019 Move V13, V2
	020 Move V0, V8
	021 Move V1, V9
	022 Move V2, V10
	023 Move X0, X31
	024 Call 0x384CE4C
	025 Multiply S5, S13, S0
	026 Multiply S7, S12, S13
	027 Multiply S16, S11, S13
	028 Multiply S3, S11, S1
	029 Multiply S6, S0, S1
	030 Multiply S17, S12, S11
	031 Multiply S5, S1, S5
	032 Multiply S1, S16, S1
	033 Multiply S16, S11, S7
	034 Move X30, [X31+48]
	035 Move D9, [X31+32]
	036 Move D8, [X31+40]
	037 Move D11, [X31+16]
	038 Move D10, [X31+24]
	039 Multiply S4, S12, S0
	040 Multiply S3, S2, S3
	041 Multiply S4, S2, S4
	042 Multiply S6, S2, S6
	043 Multiply S2, S17, S2
	044 Multiply S0, S7, S0
	045 Subtract S0, S3, S0
	046 Add S1, S1, S4
	047 Subtract S2, S5, S2
	048 Add S3, S16, S6
	049 Move D13, [X31+64]
	050 Move D12, [X31+72]
	051 Return X0

Method: Unity.Mathematics.quaternion EulerXZY(System.Single x, System.Single y, System.Single z)

Disassembly:
	0x038BEB88 LDR X8, [X19]
	0x038BEB8C MOV X0, X21
	0x038BEB90 LDR X1, [X8 + 0x40]
	0x038BEB94 BL 0x1C16E00
	0x038BEB98 CBZ X0, 0x38BEC98
	0x038BEB9C LDR W8, [X19 + 0x18]
	0x038BEBA0 CBZ W8, 0x38BEC94
	0x038BEBA4 STR X21, [X19 + 0x20]
	0x038BEBA8 LDR V0, [X20 + 0x4]
	0x038BEBAC LDR X0, [X22]
	0x038BEBB0 ADD X1, X31, 0x18
	0x038BEBB4 STR S0, [X31 + 0x18]
	0x038BEBB8 BL 0x1C16E04
	0x038BEBBC MOV X21, X0
	0x038BEBC0 CBZ X0, 0x38BEBD8
	0x038BEBC4 LDR X8, [X19]
	0x038BEBC8 MOV X0, X21
	0x038BEBCC LDR X1, [X8 + 0x40]
	0x038BEBD0 BL 0x1C16E00
	0x038BEBD4 CBZ X0, 0x38BEC98
	0x038BEBD8 LDR W8, [X19 + 0x18]
	0x038BEBDC CMP W8, 0x1
	0x038BEBE0 B.LS 0x38BEC94
	0x038BEBE4 STR X21, [X19 + 0x28]
	0x038BEBE8 LDR V0, [X20 + 0x8]
	0x038BEBEC LDR X0, [X22]
	0x038BEBF0 ADD X1, X31, 0xC
	0x038BEBF4 STR S0, [X31 + 0xC]
	0x038BEBF8 BL 0x1C16E04
	0x038BEBFC MOV X21, X0
	0x038BEC00 CBZ X0, 0x38BEC18
	0x038BEC04 LDR X8, [X19]
	0x038BEC08 MOV X0, X21
	0x038BEC0C LDR X1, [X8 + 0x40]
	0x038BEC10 BL 0x1C16E00
	0x038BEC14 CBZ X0, 0x38BEC98
	0x038BEC18 LDR W8, [X19 + 0x18]
	0x038BEC1C CMP W8, 0x2
	0x038BEC20 B.LS 0x38BEC94
	0x038BEC24 STR X21, [X19 + 0x30]
	0x038BEC28 LDR V0, [X20 + 0xC]
	0x038BEC2C LDR X0, [X22]
	0x038BEC30 ADD X1, X31, 0x8
	0x038BEC34 STR S0, [X31 + 0x8]
	0x038BEC38 BL 0x1C16E04

ISIL:
	001 Move [X31-64], D13
	002 Move [X31-56], D12
	003 Move [X31+16], D11
	004 Move [X31+24], D10
	005 Move [X31+32], D9
	006 Move [X31+40], D8
	007 Move [X31+48], X30
	008 Move S3, 0.5
	009 Multiply S8, S0, S3
	010 Multiply S9, S1, S3
	011 Multiply S10, S2, S3
	012 Move V0, V8
	013 Move V1, V9
	014 Move V2, V10
	015 Move X0, X31
	016 Call 0x384CD60
	017 Move V11, V0
	018 Move V12, V1
	019 Move V13, V2
	020 Move V0, V8
	021 Move V1, V9
	022 Move V2, V10
	023 Move X0, X31
	024 Call 0x384CE4C
	025 Multiply S7, S12, S13
	026 Multiply S3, S11, S1
	027 Multiply S4, S12, S0
	028 Multiply S5, S13, S0
	029 Multiply S6, S0, S1
	030 Multiply S16, S11, S13
	031 Multiply S17, S12, S11
	032 Multiply S0, S7, S0
	033 Multiply S7, S11, S7
	034 Move X30, [X31+48]
	035 Move D9, [X31+32]
	036 Move D8, [X31+40]
	037 Move D11, [X31+16]
	038 Move D10, [X31+24]
	039 Multiply S3, S2, S3
	040 Multiply S4, S2, S4
	041 Multiply S5, S1, S5
	042 Multiply S6, S2, S6
	043 Multiply S1, S16, S1
	044 Multiply S2, S17, S2
	045 Add S0, S0, S3
	046 Add S1, S1, S4
	047 Subtract S2, S5, S2
	048 Subtract S3, S6, S7
	049 Move D13, [X31+64]
	050 Move D12, [X31+72]
	051 Return X0

Method: Unity.Mathematics.quaternion EulerYXZ(System.Single x, System.Single y, System.Single z)

Disassembly:
	0x038BEC3C MOV X20, X0
	0x038BEC40 CBZ X0, 0x38BEC58
	0x038BEC44 LDR X8, [X19]
	0x038BEC48 MOV X0, X20
	0x038BEC4C LDR X1, [X8 + 0x40]
	0x038BEC50 BL 0x1C16E00
	0x038BEC54 CBZ X0, 0x38BEC98
	0x038BEC58 LDR W8, [X19 + 0x18]
	0x038BEC5C CMP W8, 0x3
	0x038BEC60 B.LS 0x38BEC94
	0x038BEC64 ADRP X8, 0x88D000
	0x038BEC68 LDR X8, [X8 + 0xC0]
	0x038BEC6C STR X20, [X19 + 0x38]
	0x038BEC70 MOV X1, X19
	0x038BEC74 MOV X2, X31
	0x038BEC78 LDR X0, [X8]
	0x038BEC7C BL 0x3227C5C
	0x038BEC80 LDP X20, X19, [X31 + 0x30]
	0x038BEC84 LDP X22, X21, [X31 + 0x20]
	0x038BEC88 LDR X30, [X31 + 0x10]
	0x038BEC8C ADD X31, X31, 0x40
	0x038BEC90 RET
	0x038BEC94 BL 0x1C16F28
	0x038BEC98 BL 0x1C16F44
	0x038BEC9C MOV X1, X31
	0x038BECA0 BL 0x1C16DEC
	0x038BECA4 BL 0x1C16F20
	0x038BECA8 STP X30, X23, [X31 - 0x30]!
	0x038BECAC STP X22, X21, [X31 + 0x10]
	0x038BECB0 STP X20, X19, [X31 + 0x20]
	0x038BECB4 ADRP X19, 0xB23000
	0x038BECB8 ADRP X23, 0x835000
	0x038BECBC LDRB W8, [X19 + 0x697]
	0x038BECC0 LDR X23, [X23 + 0x9D0]
	0x038BECC4 MOV X20, X2
	0x038BECC8 MOV X21, X1
	0x038BECCC MOV X22, X0
	0x038BECD0 TBNZ X8, 0x0, 0x38BECF4
	0x038BECD4 ADRP X0, 0x835000
	0x038BECD8 LDR X0, [X0 + 0x9D0]
	0x038BECDC BL 0x1C16CF4
	0x038BECE0 ADRP X0, 0x88D000
	0x038BECE4 LDR X0, [X0 + 0xC0]
	0x038BECE8 BL 0x1C16CF4
	0x038BECEC MOVZ W8, 0x1

ISIL:
	001 Move [X31-64], D13
	002 Move [X31-56], D12
	003 Move [X31+16], D11
	004 Move [X31+24], D10
	005 Move [X31+32], D9
	006 Move [X31+40], D8
	007 Move [X31+48], X30
	008 Move S3, 0.5
	009 Multiply S8, S0, S3
	010 Multiply S9, S1, S3
	011 Multiply S10, S2, S3
	012 Move V0, V8
	013 Move V1, V9
	014 Move V2, V10
	015 Move X0, X31
	016 Call 0x384CD60
	017 Move V11, V0
	018 Move V12, V1
	019 Move V13, V2
	020 Move V0, V8
	021 Move V1, V9
	022 Move V2, V10
	023 Move X0, X31
	024 Call 0x384CE4C
	025 Multiply S7, S12, S13
	026 Multiply S3, S11, S1
	027 Multiply S4, S12, S0
	028 Multiply S5, S13, S0
	029 Multiply S6, S0, S1
	030 Multiply S16, S11, S13
	031 Multiply S17, S11, S12
	032 Multiply S0, S7, S0
	033 Multiply S7, S11, S7
	034 Move X30, [X31+48]
	035 Move D9, [X31+32]
	036 Move D8, [X31+40]
	037 Move D11, [X31+16]
	038 Move D10, [X31+24]
	039 Multiply S3, S2, S3
	040 Multiply S4, S2, S4
	041 Multiply S5, S1, S5
	042 Multiply S6, S2, S6
	043 Multiply S1, S16, S1
	044 Multiply S2, S17, S2
	045 Subtract S0, S3, S0
	046 Add S1, S1, S4
	047 Add S2, S2, S5
	048 Subtract S3, S6, S7
	049 Move D13, [X31+64]
	050 Move D12, [X31+72]
	051 Return X0

Method: Unity.Mathematics.quaternion EulerYZX(System.Single x, System.Single y, System.Single z)

Disassembly:
	0x038BECF0 STRB W8, [X19 + 0x697]
	0x038BECF4 LDR X0, [X23]
	0x038BECF8 MOVZ W1, 0x4
	0x038BECFC BL 0x1C16D6C
	0x038BED00 MOV X19, X0
	0x038BED04 MOV X0, X22
	0x038BED08 MOV X1, X21
	0x038BED0C MOV X2, X20
	0x038BED10 MOV X3, X31
	0x038BED14 BL 0x338FFB4
	0x038BED18 CBZ X19, 0x38BEE38
	0x038BED1C MOV X23, X0
	0x038BED20 CBZ X0, 0x38BED38
	0x038BED24 LDR X8, [X19]
	0x038BED28 MOV X0, X23
	0x038BED2C LDR X1, [X8 + 0x40]
	0x038BED30 BL 0x1C16E00
	0x038BED34 CBZ X0, 0x38BEE2C
	0x038BED38 LDR W8, [X19 + 0x18]
	0x038BED3C CBZ W8, 0x38BEE28
	0x038BED40 ADD X0, X22, 0x4
	0x038BED44 MOV X1, X21
	0x038BED48 MOV X2, X20
	0x038BED4C MOV X3, X31
	0x038BED50 STR X23, [X19 + 0x20]
	0x038BED54 BL 0x338FFB4
	0x038BED58 MOV X23, X0
	0x038BED5C CBZ X0, 0x38BED74
	0x038BED60 LDR X8, [X19]
	0x038BED64 MOV X0, X23
	0x038BED68 LDR X1, [X8 + 0x40]
	0x038BED6C BL 0x1C16E00
	0x038BED70 CBZ X0, 0x38BEE2C
	0x038BED74 LDR W8, [X19 + 0x18]
	0x038BED78 CMP W8, 0x1
	0x038BED7C B.LS 0x38BEE28
	0x038BED80 ADD X0, X22, 0x8
	0x038BED84 MOV X1, X21
	0x038BED88 MOV X2, X20
	0x038BED8C MOV X3, X31
	0x038BED90 STR X23, [X19 + 0x28]
	0x038BED94 BL 0x338FFB4
	0x038BED98 MOV X23, X0
	0x038BED9C CBZ X0, 0x38BEDB4
	0x038BEDA0 LDR X8, [X19]

ISIL:
	001 Move [X31-64], D13
	002 Move [X31-56], D12
	003 Move [X31+16], D11
	004 Move [X31+24], D10
	005 Move [X31+32], D9
	006 Move [X31+40], D8
	007 Move [X31+48], X30
	008 Move S3, 0.5
	009 Multiply S8, S0, S3
	010 Multiply S9, S1, S3
	011 Multiply S10, S2, S3
	012 Move V0, V8
	013 Move V1, V9
	014 Move V2, V10
	015 Move X0, X31
	016 Call 0x384CD60
	017 Move V11, V0
	018 Move V12, V1
	019 Move V13, V2
	020 Move V0, V8
	021 Move V1, V9
	022 Move V2, V10
	023 Move X0, X31
	024 Call 0x384CE4C
	025 Multiply S3, S11, S1
	026 Multiply S4, S12, S0
	027 Multiply S6, S0, S1
	028 Multiply S7, S12, S13
	029 Multiply S16, S11, S12
	030 Multiply S17, S13, S11
	031 Multiply S3, S2, S3
	032 Multiply S4, S2, S4
	033 Multiply S6, S2, S6
	034 Multiply S2, S16, S2
	035 Multiply S16, S11, S7
	036 Move X30, [X31+48]
	037 Move D9, [X31+32]
	038 Move D8, [X31+40]
	039 Move D11, [X31+16]
	040 Move D10, [X31+24]
	041 Multiply S5, S13, S0
	042 Multiply S5, S1, S5
	043 Multiply S1, S17, S1
	044 Multiply S0, S7, S0
	045 Subtract S0, S3, S0
	046 Subtract S1, S4, S1
	047 Add S2, S2, S5
	048 Add S3, S16, S6
	049 Move D13, [X31+64]
	050 Move D12, [X31+72]
	051 Return X0

Method: Unity.Mathematics.quaternion EulerZXY(System.Single x, System.Single y, System.Single z)

Disassembly:
	0x038BEDA4 MOV X0, X23
	0x038BEDA8 LDR X1, [X8 + 0x40]
	0x038BEDAC BL 0x1C16E00
	0x038BEDB0 CBZ X0, 0x38BEE2C
	0x038BEDB4 LDR W8, [X19 + 0x18]
	0x038BEDB8 CMP W8, 0x2
	0x038BEDBC B.LS 0x38BEE28
	0x038BEDC0 ADD X0, X22, 0xC
	0x038BEDC4 MOV X1, X21
	0x038BEDC8 MOV X2, X20
	0x038BEDCC MOV X3, X31
	0x038BEDD0 STR X23, [X19 + 0x30]
	0x038BEDD4 BL 0x338FFB4
	0x038BEDD8 MOV X20, X0
	0x038BEDDC CBZ X0, 0x38BEDF4
	0x038BEDE0 LDR X8, [X19]
	0x038BEDE4 MOV X0, X20
	0x038BEDE8 LDR X1, [X8 + 0x40]
	0x038BEDEC BL 0x1C16E00
	0x038BEDF0 CBZ X0, 0x38BEE2C
	0x038BEDF4 LDR W8, [X19 + 0x18]
	0x038BEDF8 CMP W8, 0x3
	0x038BEDFC B.LS 0x38BEE28
	0x038BEE00 ADRP X8, 0x88D000
	0x038BEE04 LDR X8, [X8 + 0xC0]
	0x038BEE08 STR X20, [X19 + 0x38]
	0x038BEE0C MOV X1, X19
	0x038BEE10 LDP X20, X19, [X31 + 0x20]
	0x038BEE14 LDR X0, [X8]
	0x038BEE18 LDP X22, X21, [X31 + 0x10]
	0x038BEE1C MOV X2, X31
	0x038BEE20 LDP X30, X23, [X31], #0x30
	0x038BEE24 B 0x3227C5C
	0x038BEE28 BL 0x1C16F28
	0x038BEE2C BL 0x1C16F44
	0x038BEE30 MOV X1, X31
	0x038BEE34 BL 0x1C16DEC
	0x038BEE38 BL 0x1C16F20
	0x038BEE3C STR X30, [X31 - 0x20]!
	0x038BEE40 STP X20, X19, [X31 + 0x10]
	0x038BEE44 ADRP X19, 0xB23000
	0x038BEE48 ADRP X20, 0x83B000
	0x038BEE4C LDRB W8, [X19 + 0x698]
	0x038BEE50 LDR X20, [X20 + 0x7B8]
	0x038BEE54 TBNZ X8, 0x0, 0x38BEE6C

ISIL:
	001 Move [X31-64], D13
	002 Move [X31-56], D12
	003 Move [X31+16], D11
	004 Move [X31+24], D10
	005 Move [X31+32], D9
	006 Move [X31+40], D8
	007 Move [X31+48], X30
	008 Move S3, 0.5
	009 Multiply S8, S0, S3
	010 Multiply S9, S1, S3
	011 Multiply S10, S2, S3
	012 Move V0, V8
	013 Move V1, V9
	014 Move V2, V10
	015 Move X0, X31
	016 Call 0x384CD60
	017 Move V11, V0
	018 Move V12, V1
	019 Move V13, V2
	020 Move V0, V8
	021 Move V1, V9
	022 Move V2, V10
	023 Move X0, X31
	024 Call 0x384CE4C
	025 Multiply S7, S12, S13
	026 Multiply S3, S11, S1
	027 Multiply S4, S12, S0
	028 Multiply S5, S13, S0
	029 Multiply S6, S0, S1
	030 Multiply S16, S13, S11
	031 Multiply S17, S12, S11
	032 Multiply S0, S7, S0
	033 Multiply S7, S11, S7
	034 Move X30, [X31+48]
	035 Move D9, [X31+32]
	036 Move D8, [X31+40]
	037 Move D11, [X31+16]
	038 Move D10, [X31+24]
	039 Multiply S3, S2, S3
	040 Multiply S4, S2, S4
	041 Multiply S5, S1, S5
	042 Multiply S6, S2, S6
	043 Multiply S1, S16, S1
	044 Multiply S2, S17, S2
	045 Add S0, S0, S3
	046 Subtract S1, S4, S1
	047 Subtract S2, S5, S2
	048 Add S3, S7, S6
	049 Move D13, [X31+64]
	050 Move D12, [X31+72]
	051 Return X0

Method: Unity.Mathematics.quaternion EulerZYX(System.Single x, System.Single y, System.Single z)

Disassembly:
	0x038BEE58 ADRP X0, 0x83B000
	0x038BEE5C LDR X0, [X0 + 0x7B8]
	0x038BEE60 BL 0x1C16CF4
	0x038BEE64 MOVZ W8, 0x1
	0x038BEE68 STRB W8, [X19 + 0x698]
	0x038BEE6C LDR X8, [X20]
	0x038BEE70 ADRP X9, 0xFFFFFFFFFD22E000
	0x038BEE74 LDR V0, [X9 + 0xBB]
	0x038BEE78 LDP X20, X19, [X31 + 0x10]
	0x038BEE7C LDR X8, [X8 + 0xB8]
	0x038BEE80 STR V0, [X8]
	0x038BEE84 LDR X30, [X31], #0x20
	0x038BEE88 RET
	0x038BEE8C SUB X31, X31, 0x150
	0x038BEE90 STP D15, D14, [X31 + 0xF0]
	0x038BEE94 STP D13, D12, [X31 + 0x100]
	0x038BEE98 STP D11, D10, [X31 + 0x110]
	0x038BEE9C STP D9, D8, [X31 + 0x120]
	0x038BEEA0 STP X29, X30, [X31 + 0x130]
	0x038BEEA4 STP X20, X19, [X31 + 0x140]
	0x038BEEA8 ADRP X20, 0xB23000
	0x038BEEAC LDRB W8, [X20 + 0x570]
	0x038BEEB0 MOV V9.16B, V1.16B
	0x038BEEB4 MOV V10.16B, V0.16B
	0x038BEEB8 STR X31, [X31 + 0xE8]
	0x038BEEBC STR W31, [X31 + 0xE4]
	0x038BEEC0 CBNZ W8, 0x38BEED8
	0x038BEEC4 ADRP X0, 0x835000
	0x038BEEC8 LDR X0, [X0 + 0x5A8]
	0x038BEECC BL 0x1C16CF4
	0x038BEED0 MOVZ W8, 0x1
	0x038BEED4 STRB W8, [X20 + 0x570]
	0x038BEED8 ADRP X19, 0x835000
	0x038BEEDC LDR X19, [X19 + 0x5A8]
	0x038BEEE0 LDR X0, [X19]
	0x038BEEE4 LDR W8, [X0 + 0xE0]
	0x038BEEE8 CBNZ W8, 0x38BEF0C
	0x038BEEEC BL 0x1C16DFC
	0x038BEEF0 LDRB W8, [X20 + 0x570]
	0x038BEEF4 CBNZ W8, 0x38BEF0C
	0x038BEEF8 ADRP X0, 0x835000
	0x038BEEFC LDR X0, [X0 + 0x5A8]
	0x038BEF00 BL 0x1C16CF4
	0x038BEF04 MOVZ W8, 0x1
	0x038BEF08 STRB W8, [X20 + 0x570]

ISIL:
	001 Move [X31-64], D13
	002 Move [X31-56], D12
	003 Move [X31+16], D11
	004 Move [X31+24], D10
	005 Move [X31+32], D9
	006 Move [X31+40], D8
	007 Move [X31+48], X30
	008 Move S3, 0.5
	009 Multiply S8, S0, S3
	010 Multiply S9, S1, S3
	011 Multiply S10, S2, S3
	012 Move V0, V8
	013 Move V1, V9
	014 Move V2, V10
	015 Move X0, X31
	016 Call 0x384CD60
	017 Move V11, V0
	018 Move V12, V1
	019 Move V13, V2
	020 Move V0, V8
	021 Move V1, V9
	022 Move V2, V10
	023 Move X0, X31
	024 Call 0x384CE4C
	025 Multiply S7, S12, S13
	026 Multiply S3, S11, S1
	027 Multiply S4, S12, S0
	028 Multiply S5, S13, S0
	029 Multiply S6, S0, S1
	030 Multiply S16, S11, S12
	031 Multiply S17, S13, S11
	032 Multiply S0, S7, S0
	033 Multiply S7, S11, S7
	034 Move X30, [X31+48]
	035 Move D9, [X31+32]
	036 Move D8, [X31+40]
	037 Move D11, [X31+16]
	038 Move D10, [X31+24]
	039 Multiply S3, S2, S3
	040 Multiply S4, S2, S4
	041 Multiply S5, S1, S5
	042 Multiply S6, S2, S6
	043 Multiply S2, S16, S2
	044 Multiply S1, S17, S1
	045 Add S0, S0, S3
	046 Subtract S1, S4, S1
	047 Add S2, S2, S5
	048 Subtract S3, S6, S7
	049 Move D13, [X31+64]
	050 Move D12, [X31+72]
	051 Return X0

Method: Unity.Mathematics.quaternion Euler(Unity.Mathematics.float3 xyz, Unity.Mathematics.math/RotationOrder order = 4)

Disassembly:
	0x038BEF0C LDR X0, [X19]
	0x038BEF10 LDR W8, [X0 + 0xE0]
	0x038BEF14 CBNZ W8, 0x38BEF1C
	0x038BEF18 BL 0x1C16DFC
	0x038BEF1C FRINTM S11, S10
	0x038BEF20 FRINTM S12, S9
	0x038BEF24 MOV V0.16B, V11.16B
	0x038BEF28 MOV V1.16B, V12.16B
	0x038BEF2C BL 0x38BF4E4
	0x038BEF30 LDRB W8, [X20 + 0x570]
	0x038BEF34 MOV V13.16B, V0.16B
	0x038BEF38 MOV V8.16B, V1.16B
	0x038BEF3C CBNZ W8, 0x38BEF54
	0x038BEF40 ADRP X0, 0x835000
	0x038BEF44 LDR X0, [X0 + 0x5A8]
	0x038BEF48 BL 0x1C16CF4
	0x038BEF4C MOVZ W8, 0x1
	0x038BEF50 STRB W8, [X20 + 0x570]
	0x038BEF54 LDR X0, [X19]
	0x038BEF58 LDR W8, [X0 + 0xE0]
	0x038BEF5C CBNZ W8, 0x38BEF80
	0x038BEF60 BL 0x1C16DFC
	0x038BEF64 LDRB W8, [X20 + 0x570]
	0x038BEF68 CBNZ W8, 0x38BEF80
	0x038BEF6C ADRP X0, 0x835000
	0x038BEF70 LDR X0, [X0 + 0x5A8]
	0x038BEF74 BL 0x1C16CF4
	0x038BEF78 MOVZ W8, 0x1
	0x038BEF7C STRB W8, [X20 + 0x570]
	0x038BEF80 LDR X0, [X19]
	0x038BEF84 LDR W8, [X0 + 0xE0]
	0x038BEF88 CBNZ W8, 0x38BEF90
	0x038BEF8C BL 0x1C16DFC
	0x038BEF90 FSUB S0, S10, S11
	0x038BEF94 STR V0, [X31 + 0xD]
	0x038BEF98 FMOV S0, -1
	0x038BEF9C FMOV S1, W31
	0x038BEFA0 FMOV S2, 1
	0x038BEFA4 FADD S0, S13, S0
	0x038BEFA8 FADD S1, S13, S1
	0x038BEFAC FADD S2, S13, S2
	0x038BEFB0 FSUB S15, S9, S12
	0x038BEFB4 FMOV S11, -1
	0x038BEFB8 FMOV S10, W31
	0x038BEFBC FMOV S9, 1
	0x038BEFC0 BL 0x38BF5A0
	0x038BEFC4 STR S2, [X31 + 0x60]
	0x038BEFC8 FADD S2, S8, S0
	0x038BEFCC STR S1, [X31 + 0xC0]
	0x038BEFD0 FADD S0, S2, S11
	0x038BEFD4 FADD S1, S2, S10
	0x038BEFD8 FADD S2, S2, S9
	0x038BEFDC BL 0x38BF5A0
	0x038BEFE0 ADRP X8, 0xFFFFFFFFFD22C000
	0x038BEFE4 LDR V14, [X8 + 0x1E8]
	0x038BEFE8 MOV X0, X31
	0x038BEFEC FMUL S11, S0, S14
	0x038BEFF0 FMUL S12, S1, S14
	0x038BEFF4 FMUL S13, S2, S14
	0x038BEFF8 MOV V0.16B, V11.16B
	0x038BEFFC MOV V1.16B, V12.16B
	0x038BF000 MOV V2.16B, V13.16B
	0x038BF004 BL 0x384B1B4
	0x038BF008 ADRP X8, 0xFFFFFFFFFD22B000
	0x038BF00C LDR V9, [X8 + 0x2BC]
	0x038BF010 FSUB S0, S11, S0
	0x038BF014 FSUB S1, S12, S1
	0x038BF018 FSUB S2, S13, S2
	0x038BF01C FADD S10, S0, S9
	0x038BF020 FADD S0, S1, S9
	0x038BF024 STR S0, [X31 + 0xB0]
	0x038BF028 FADD S0, S2, S9
	0x038BF02C STR S0, [X31 + 0x70]
	0x038BF030 MOV V0.16B, V11.16B
	0x038BF034 MOV V1.16B, V12.16B
	0x038BF038 MOV V2.16B, V13.16B
	0x038BF03C MOV X0, X31
	0x038BF040 BL 0x384B1B4
	0x038BF044 BL 0x38BF5D4
	0x038BF048 FMUL S0, S0, S14
	0x038BF04C FADD S5, S0, S9
	0x038BF050 FMOV S0, -1.5
	0x038BF054 FADD S16, S15, S0
	0x038BF058 LDR V0, [X31 + 0xD]
	0x038BF05C FMOV S4, -0.5
	0x038BF060 FMUL S1, S1, S14
	0x038BF064 FMOV S3, 0.5
	0x038BF068 FADD S17, S15, S4
	0x038BF06C LDR V4, [X31 + 0x70]
	0x038BF070 FADD S6, S1, S9
	0x038BF074 LDR V1, [X31 + 0xC0]
	0x038BF078 FADD S18, S15, S3
	0x038BF07C FADD S0, S0, S3
	0x038BF080 LDR V3, [X31 + 0xB0]
	0x038BF084 FMUL S2, S2, S14
	0x038BF088 FADD S2, S2, S9
	0x038BF08C FADD S4, S0, S4
	0x038BF090 FADD S2, S16, S2
	0x038BF094 FADD S7, S8, S1
	0x038BF098 FADD S1, S0, S10
	0x038BF09C FADD S3, S0, S3
	0x038BF0A0 FADD S5, S18, S5
	0x038BF0A4 FADD S6, S17, S6
	0x038BF0A8 FMUL S4, S4, S4
	0x038BF0AC FMUL S2, S2, S2
	0x038BF0B0 MOV V12.16B, V8.16B
	0x038BF0B4 FMOV S11, -1
	0x038BF0B8 FMUL S1, S1, S1
	0x038BF0BC FMUL S5, S5, S5
	0x038BF0C0 FMOV S9, W31
	0x038BF0C4 FMUL S3, S3, S3
	0x038BF0C8 FMUL S6, S6, S6
	0x038BF0CC FADD S2, S4, S2
	0x038BF0D0 FMOV S8, 1
	0x038BF0D4 FADD S0, S7, S11
	0x038BF0D8 FADD S5, S1, S5
	0x038BF0DC FADD S1, S7, S9
	0x038BF0E0 FADD S3, S3, S6
	0x038BF0E4 STR S2, [X31 + 0xE4]
	0x038BF0E8 FADD S2, S7, S8
	0x038BF0EC STP V17, V16, [X31 + 0x90]
	0x038BF0F0 STR V18, [X31 + 0x8]
	0x038BF0F4 STP S3, S5, [X31 + 0xE8]
	0x038BF0F8 BL 0x38BF5A0
	0x038BF0FC FMUL S10, S2, S14
	0x038BF100 FMUL S0, S0, S14
	0x038BF104 FMUL S1, S1, S14
	0x038BF108 MOV V2.16B, V10.16B
	0x038BF10C MOV X0, X31
	0x038BF110 STP V0, V1, [X31 + 0xB0]
	0x038BF114 BL 0x384B1B4
	0x038BF118 STR D0, [X31 + 0x10]
	0x038BF11C FSUB S0, S10, S2
	0x038BF120 STR D1, [X31 + 0x20]
	0x038BF124 STR V0, [X31 + 0x7]
	0x038BF128 LDP V0, V1, [X31 + 0xB0]
	0x038BF12C MOV V2.16B, V10.16B
	0x038BF130 MOV X0, X31
	0x038BF134 BL 0x384B1B4
	0x038BF138 BL 0x38BF5D4
	0x038BF13C STR D0, [X31 + 0x30]
	0x038BF140 LDR V0, [X31 + 0x60]
	0x038BF144 STR D2, [X31 + 0x50]
	0x038BF148 STR D1, [X31 + 0x40]
	0x038BF14C FADD S2, S12, S0
	0x038BF150 FADD S0, S2, S11
	0x038BF154 FADD S1, S2, S9
	0x038BF158 FADD S2, S2, S8
	0x038BF15C BL 0x38BF5A0
	0x038BF160 FMUL S8, S2, S14
	0x038BF164 FMUL S0, S0, S14
	0x038BF168 FMUL S1, S1, S14
	0x038BF16C MOV V2.16B, V8.16B
	0x038BF170 MOV X0, X31
	0x038BF174 STR V0, [X31]
	0x038BF178 STR V1, [X31 + 0x6]
	0x038BF17C BL 0x384B1B4
	0x038BF180 LDP V16, V6, [X31]
	0x038BF184 LDP V5, V3, [X31 + 0xC0]
	0x038BF188 ADRP X8, 0xFFFFFFFFFD22E000
	0x038BF18C LDR V4, [X31 + 0xB]
	0x038BF190 LDR V17, [X31 + 0x6]
	0x038BF194 LDR V7, [X31 + 0x2]
	0x038BF198 MOV V6.S[1], V0.S[0]
	0x038BF19C LDR V0, [X8 + 0x7C0]
	0x038BF1A0 FSUB S2, S8, S2
	0x038BF1A4 MOVZ W8, 0x6DB7
	0x038BF1A8 MOV V4.S[1], V16.S[0]
	0x038BF1AC MOV V5.S[1], V17.S[0]
	0x038BF1B0 MOV V7.S[1], V1.S[0]
	0x038BF1B4 MOVK W8, 0xBEDB0000
	0x038BF1B8 MOV V3.S[1], V2.S[0]
	0x038BF1BC FSUB V1.2S, V4.2S, V6.2S
	0x038BF1C0 FSUB V2.2S, V5.2S, V7.2S
	0x038BF1C4 UNIMPLEMENTED
	0x038BF1C8 FADD V0.2S, V3.2S, V0.2S
	0x038BF1CC FADD V9.2S, V1.2S, V11.2S
	0x038BF1D0 STR V0, [X31 + 0xC]
	0x038BF1D4 FADD V10.2S, V2.2S, V11.2S
	0x038BF1D8 MOV V0.16B, V16.16B
	0x038BF1DC MOV V1.16B, V17.16B
	0x038BF1E0 MOV V2.16B, V8.16B
	0x038BF1E4 MOV X0, X31
	0x038BF1E8 BL 0x384B1B4
	0x038BF1EC BL 0x38BF5D4
	0x038BF1F0 LDR V17, [X31 + 0x5]
	0x038BF1F4 LDP V7, V16, [X31 + 0x30]
	0x038BF1F8 MOVZ W8, 0x4925
	0x038BF1FC ADRP X9, 0xFFFFFFFFFD22E000
	0x038BF200 MOV V17.S[1], V2.S[0]
	0x038BF204 LDR V2, [X31 + 0x9]
	0x038BF208 MOV V7.S[1], V0.S[0]
	0x038BF20C MOV V16.S[1], V1.S[0]
	0x038BF210 LDP V20, V0, [X31 + 0xC0]
	0x038BF214 LDP V19, V1, [X31 + 0x70]
	0x038BF218 MOVK W8, 0x3E120000
	0x038BF21C LDR V18, [X9 + 0x658]
	0x038BF220 UNIMPLEMENTED
	0x038BF224 LDR V2, [X31 + 0xA]
	0x038BF228 UNIMPLEMENTED
	0x00000000 INVALID
	0x038BF230 MOV V19.S[1], V0.S[0]
	0x038BF234 FADD V16.2S, V16.2S, V11.2S
	0x038BF238 MOV V0.16B, V20.16B
	0x00000000 INVALID
	0x00000000 INVALID
	0x038BF244 FADD V3.2S, V3.2S, V16.2S
	0x038BF248 FADD V16.2S, V19.2S, V18.2S
	0x038BF24C UNIMPLEMENTED
	0x038BF250 UNIMPLEMENTED
	0x038BF254 FADD V7.2S, V7.2S, V11.2S
	0x038BF258 FADD V17.2S, V17.2S, V11.2S
	0x038BF25C MOV V0.S[1], V16.S[1]
	0x038BF260 FADD V1.2S, V1.2S, V7.2S
	0x038BF264 FADD V5.2S, V5.2S, V17.2S
	0x038BF268 FADD V16.2S, V20.2S, V16.2S
	0x038BF26C FADD V17.2S, V0.2S, V9.2S
	0x038BF270 LDP S2, S6, [X31 + 0xE8]
	0x00000000 INVALID
	0x00000000 INVALID
	0x038BF27C FADD V0.2S, V0.2S, V10.2S
	0x00000000 INVALID
	0x00000000 INVALID
	0x00000000 INVALID
	0x00000000 INVALID
	0x038BF290 FADD V5.2S, V16.2S, V5.2S
	0x038BF294 FADD V1.2S, V17.2S, V1.2S
	0x038BF298 MOVZ W8, 0x7F800000
	0x038BF29C FADD V3.2S, V0.2S, V3.2S
	0x038BF2A0 MOV V0.16B, V5.16B
	0x038BF2A4 MOV V16.16B, V1.16B
	0x038BF2A8 UNIMPLEMENTED
	0x038BF2AC BIC V0.2S, 0x80, 0x18
	0x038BF2B0 BIC V16.2S, 0x80, 0x18
	0x038BF2B4 FCMP S6, S1
	0x00000000 INVALID
	0x00000000 INVALID
	0x038BF2C0 CSET W9, GT
	0x038BF2C4 FMOV W11, S0
	0x038BF2C8 MOV V17.16B, V3.16B
	0x038BF2CC ORR W9, W9, W11, 0x0
	0x038BF2D0 BIC V17.2S, 0x80, 0x18
	0x038BF2D4 ANDS W31, W9, 0x1
	0x038BF2D8 LDR V4, [X31 + 0xE4]
	0x00000000 INVALID
	0x038BF2E0 FCSEL S16, S6, S1, NE
	0x038BF2E4 FCMP S2, S3
	0x038BF2E8 FMOV W11, S7
	0x038BF2EC CSET W9, GT
	0x038BF2F0 MOV V6.S[1], V16.S[0]
	0x038BF2F4 ORR W9, W9, W11, 0x0
	0x00000000 INVALID
	0x038BF2FC ANDS W31, W9, 0x1
	0x038BF300 ORR V0.8B, V16.8B, V0.8B
	0x038BF304 FCSEL S16, S2, S3, NE
	0x038BF308 FCMP S4, S5
	0x038BF30C FMOV W10, S18

ISIL:
	001 Move [X31-80], D13
	002 Move [X31-72], D12
	003 Move [X31+16], D11
	004 Move [X31+24], D10
	005 Move [X31+32], D9
	006 Move [X31+40], D8
	007 Move [X31+48], X30
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X20, 0xB24000
	011 Move W8, [X20+1684]
	012 Move W19, W0
	013 Move V8, V2
	014 Move V9, V1
	015 Move V10, V0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0x83C000
	021 Move X0, [X0+1976]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X20+1684], W8
	025 And W8, W19, 255
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move X9, -47341568
	028 And X8, X19, 255
	029 Add X9, X9, 2587
	030 NotImplemented "Instruction ADR not yet implemented."
	031 Move W11, [X9]
	032 Add X10, X10, X11
	033 CallNoReturn X10
	034 Move S0, 0.5
	035 Multiply S10, S10, S0
	036 Multiply S9, S9, S0
	037 Multiply S8, S8, S0
	038 Move V0, V10
	039 Move V1, V9
	040 Move V2, V8
	041 Move X0, X31
	042 Call 0x384CD60
	043 Move V11, V0
	044 Move V12, V1
	045 Move V13, V2
	046 Move V0, V10
	047 Move V1, V9
	048 Move V2, V8
	049 Move X0, X31
	050 Call 0x384CE4C
	051 Multiply S3, S11, S1
	052 Multiply S4, S12, S0
	053 Multiply S5, S13, S0
	054 Multiply S6, S0, S1
	055 Multiply S7, S12, S13
	056 Multiply S16, S11, S13
	057 Multiply S17, S12, S11
	058 Multiply S3, S2, S3
	059 Multiply S4, S2, S4
	060 Multiply S5, S1, S5
	061 Multiply S6, S2, S6
	062 Multiply S1, S16, S1
	063 Multiply S16, S11, S7
	064 Multiply S2, S17, S2
	065 Multiply S0, S7, S0
	066 Subtract S0, S3, S0
	067 Add S1, S1, S4
	068 Subtract S2, S5, S2
	069 Move X8, 0x83B000
	070 Move X8, [X8+1976]
	071 Move X8, [X8]
	072 Move X8, [X8+184]
	073 Move S0, [X8]
	074 Move S1, [X8+4]
	075 Move S2, [X8+8]
	076 Move S3, [X8+12]
	077 Move S0, 0.5
	078 Multiply S10, S10, S0
	079 Multiply S9, S9, S0
	080 Multiply S8, S8, S0
	081 Move V0, V10
	082 Move V1, V9
	083 Move V2, V8
	084 Move X0, X31
	085 Call 0x384CD60
	086 Move V11, V0
	087 Move V12, V1
	088 Move V13, V2
	089 Move V0, V10
	090 Move V1, V9
	091 Move V2, V8
	092 Move X0, X31
	093 Call 0x384CE4C
	094 Multiply S3, S11, S1
	095 Multiply S4, S12, S0
	096 Multiply S5, S13, S0
	097 Multiply S6, S0, S1
	098 Multiply S7, S12, S13
	099 Multiply S16, S11, S13
	100 Multiply S17, S12, S11
	101 Multiply S3, S2, S3
	102 Multiply S4, S2, S4
	103 Multiply S5, S1, S5
	104 Multiply S6, S2, S6
	105 Multiply S0, S7, S0
	106 Multiply S1, S16, S1
	107 Multiply S2, S17, S2
	108 Multiply S7, S11, S7
	109 Add S0, S0, S3
	110 Add S1, S1, S4
	111 Subtract S2, S5, S2
	112 Move S0, 0.5
	113 Multiply S10, S10, S0
	114 Multiply S9, S9, S0
	115 Multiply S8, S8, S0
	116 Move V0, V10
	117 Move V1, V9
	118 Move V2, V8
	119 Move X0, X31
	120 Call 0x384CD60
	121 Move V11, V0
	122 Move V12, V1
	123 Move V13, V2
	124 Move V0, V10
	125 Move V1, V9
	126 Move V2, V8
	127 Move X0, X31
	128 Call 0x384CE4C
	129 Multiply S3, S11, S1
	130 Multiply S4, S12, S0
	131 Multiply S5, S13, S0
	132 Multiply S7, S12, S13
	133 Multiply S16, S11, S13
	134 Multiply S6, S0, S1
	135 Multiply S17, S11, S12
	136 Multiply S3, S2, S3
	137 Multiply S4, S2, S4
	138 Multiply S5, S1, S5
	139 Multiply S1, S16, S1
	140 Multiply S0, S7, S0
	141 Multiply S6, S2, S6
	142 Multiply S2, S17, S2
	143 Multiply S7, S11, S7
	144 Subtract S0, S3, S0
	145 Add S1, S1, S4
	146 Move S0, 0.5
	147 Multiply S10, S10, S0
	148 Multiply S9, S9, S0
	149 Multiply S8, S8, S0
	150 Move V0, V10
	151 Move V1, V9
	152 Move V2, V8
	153 Move X0, X31
	154 Call 0x384CD60
	155 Move V11, V0
	156 Move V12, V1
	157 Move V13, V2
	158 Move V0, V10
	159 Move V1, V9
	160 Move V2, V8
	161 Move X0, X31
	162 Call 0x384CE4C
	163 Multiply S3, S11, S1
	164 Multiply S4, S12, S0
	165 Multiply S5, S13, S0
	166 Multiply S6, S0, S1
	167 Multiply S7, S12, S13
	168 Multiply S16, S11, S12
	169 Multiply S17, S13, S11
	170 Multiply S3, S2, S3
	171 Multiply S4, S2, S4
	172 Multiply S5, S1, S5
	173 Multiply S6, S2, S6
	174 Multiply S2, S16, S2
	175 Multiply S16, S11, S7
	176 Multiply S1, S17, S1
	177 Multiply S0, S7, S0
	178 Subtract S0, S3, S0
	179 Subtract S1, S4, S1
	180 Add S2, S2, S5
	181 Add S3, S16, S6
	182 Move S0, 0.5
	183 Multiply S10, S10, S0
	184 Multiply S9, S9, S0
	185 Multiply S8, S8, S0
	186 Move V0, V10
	187 Move V1, V9
	188 Move V2, V8
	189 Move X0, X31
	190 Call 0x384CD60
	191 Move V11, V0
	192 Move V12, V1
	193 Move V13, V2
	194 Move V0, V10
	195 Move V1, V9
	196 Move V2, V8
	197 Move X0, X31
	198 Call 0x384CE4C
	199 Multiply S3, S11, S1
	200 Multiply S4, S12, S0
	201 Multiply S5, S13, S0
	202 Multiply S6, S0, S1
	203 Multiply S7, S12, S13
	204 Multiply S16, S13, S11
	205 Multiply S17, S12, S11
	206 Multiply S3, S2, S3
	207 Multiply S4, S2, S4
	208 Multiply S5, S1, S5
	209 Multiply S6, S2, S6
	210 Multiply S0, S7, S0
	211 Multiply S7, S11, S7
	212 Multiply S1, S16, S1
	213 Multiply S2, S17, S2
	214 Add S0, S0, S3
	215 Subtract S1, S4, S1
	216 Subtract S2, S5, S2
	217 Add S3, S7, S6
	218 Move S0, 0.5
	219 Multiply S10, S10, S0
	220 Multiply S9, S9, S0
	221 Multiply S8, S8, S0
	222 Move V0, V10
	223 Move V1, V9
	224 Move V2, V8
	225 Move X0, X31
	226 Call 0x384CD60
	227 Move V11, V0
	228 Move V12, V1
	229 Move V13, V2
	230 Move V0, V10
	231 Move V1, V9
	232 Move V2, V8
	233 Move X0, X31
	234 Call 0x384CE4C
	235 Multiply S3, S11, S1
	236 Multiply S4, S12, S0
	237 Multiply S5, S13, S0
	238 Multiply S7, S12, S13
	239 Multiply S17, S13, S11
	240 Multiply S6, S0, S1
	241 Multiply S16, S11, S12
	242 Multiply S3, S2, S3
	243 Multiply S4, S2, S4
	244 Multiply S5, S1, S5
	245 Multiply S0, S7, S0
	246 Multiply S1, S17, S1
	247 Multiply S6, S2, S6
	248 Multiply S2, S16, S2
	249 Multiply S7, S11, S7
	250 Add S0, S0, S3
	251 Subtract S1, S4, S1
	252 Add S2, S2, S5
	253 Subtract S3, S6, S7
	254 Move X20, [X31+64]
	255 Move X19, [X31+72]
	256 Move X30, [X31+48]
	257 Move D9, [X31+32]
	258 Move D8, [X31+40]
	259 Move D11, [X31+16]
	260 Move D10, [X31+24]
	261 Move D13, [X31+80]
	262 Move D12, [X31+88]
	263 Return X0

Method: Unity.Mathematics.quaternion Euler(System.Single x, System.Single y, System.Single z, Unity.Mathematics.math/RotationOrder order = 4)

Disassembly:
	0x038BF310 CSET W9, GT
	0x038BF314 MOV V2.S[1], V16.S[0]

ISIL:
	001 Move X1, X31
	002 Call 0x38CA810
	003 Return X0

Method: Unity.Mathematics.quaternion RotateX(System.Single angle)

Disassembly:
	0x038BF318 ORR W9, W9, W10, 0x0
	0x00000000 INVALID
	0x00000000 INVALID
	0x038BF324 ANDS W31, W9, 0x1
	0x038BF328 ORR V6.8B, V6.8B, V7.8B
	0x038BF32C FCSEL S7, S4, S5, NE
	0x038BF330 MOV V4.S[1], V7.S[0]
	0x038BF334 MOV S1, V0.S[1]
	0x00000000 INVALID
	0x00000000 INVALID
	0x038BF340 FMOV W10, S1
	0x038BF344 ORR V6.8B, V6.8B, V18.8B
	0x038BF348 AND W10, W10, 0x7FFFFFFF
	0x00000000 INVALID
	0x038BF350 CMP W10, W8
	0x038BF354 MOV S5, V4.S[1]
	0x038BF358 CSET W11, HI
	0x038BF35C MOV S3, V2.S[1]
	0x038BF360 FCMP S4, S5
	0x038BF364 CSET W9, MI
	0x038BF368 CSET W10, GT
	0x038BF36C FCMP S2, S3
	0x038BF370 CSET W12, MI
	0x038BF374 CSET W13, GT
	0x038BF378 FCMP S0, S1
	0x038BF37C CSET W14, MI
	0x038BF380 ORR W14, W14, W11, 0x0
	0x038BF384 CSET W15, GT
	0x038BF388 CMP W14, 0x0
	0x038BF38C FMOV W14, S3
	0x038BF390 AND W14, W14, 0x7FFFFFFF
	0x038BF394 FCSEL S6, S0, S1, NE
	0x038BF398 CMP W14, W8
	0x038BF39C CSET W14, HI
	0x038BF3A0 ORR W12, W12, W14, 0x0
	0x038BF3A4 CMP W12, 0x0
	0x038BF3A8 FMOV W12, S5
	0x038BF3AC AND W12, W12, 0x7FFFFFFF
	0x038BF3B0 FCSEL S7, S2, S3, NE
	0x038BF3B4 CMP W12, W8
	0x038BF3B8 CSET W12, HI
	0x038BF3BC ORR W9, W9, W12, 0x0
	0x038BF3C0 ORR W11, W15, W11, 0x0
	0x038BF3C4 CMP W9, 0x0
	0x038BF3C8 ORR W13, W13, W14, 0x0
	0x038BF3CC FCSEL S16, S4, S5, NE
	0x038BF3D0 CMP W11, 0x0
	0x038BF3D4 ORR W10, W10, W12, 0x0
	0x038BF3D8 FCSEL S8, S0, S1, NE

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], D9
	003 Move [X31+24], D8
	004 Move [X31+32], X30
	005 Move [X31+48], X20
	006 Move [X31+56], X19
	007 Move X19, 0xB23000
	008 Move W8, [X19+1386]
	009 Move V8, V0
	010 Compare W8, 0
	011 JumpIfNotEqual {17}
	012 Move X0, 0x835000
	013 Move X0, [X0+1448]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+1386], W8
	017 Move X19, 0x835000
	018 Move X19, [X19+1448]
	019 Move S9, 0.5
	020 Move X0, [X19]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move X20, 0xB23000
	026 Move W8, [X20+1380]
	027 Multiply S8, S8, S9
	028 Compare W8, 0
	029 JumpIfNotEqual {35}
	030 Move X0, 0x835000
	031 Move X0, [X0+1448]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X20+1380], W8
	035 Move X0, [X19]
	036 NotImplemented "Instruction FCVT not yet implemented."
	037 Move W8, [X0+224]
	038 Compare W8, 0
	039 JumpIfNotEqual {41}
	040 Call 0x1C17DFC
	041 Add X0, X31, 40
	042 Add X1, X31, 8
	043 Move V0, V8
	044 Call 0x3EB2E40
	045 Move V0, [X31+40]
	046 Move V2, [X31+8]
	047 Move X20, [X31+48]
	048 Move X19, [X31+56]
	049 Move X30, [X31+32]
	050 Move D9, [X31+16]
	051 Move D8, [X31+24]
	052 Move S1, W31
	053 NotImplemented "Instruction INVALID not yet implemented."
	054 NotImplemented "Instruction INVALID not yet implemented."
	055 Move S2, W31
	056 Add X31, X31, 64
	057 Return X0

Method: Unity.Mathematics.quaternion RotateY(System.Single angle)

Disassembly:
	0x038BF3DC CMP W13, 0x0
	0x038BF3E0 FCSEL S0, S2, S3, NE
	0x038BF3E4 CMP W10, 0x0
	0x038BF3E8 FCSEL S1, S4, S5, NE
	0x038BF3EC FCMP S6, S7
	0x038BF3F0 FMOV W9, S0
	0x038BF3F4 FCSEL S2, S6, S7, MI
	0x038BF3F8 AND W9, W9, 0x7FFFFFFF
	0x038BF3FC FCSEL S3, S7, S6, MI
	0x038BF400 FCMP S2, S16
	0x038BF404 FMOV W10, S1
	0x038BF408 FCSEL S4, S16, S2, MI
	0x038BF40C FCSEL S9, S2, S16, MI
	0x038BF410 CMP W9, W8
	0x038BF414 AND W10, W10, 0x7FFFFFFF
	0x038BF418 FCCMP S3, S0, 0x8, LS
	0x038BF41C FCSEL S0, S3, S0, MI
	0x038BF420 CMP W10, W8
	0x038BF424 FCCMP S4, S1, 0x8, LS
	0x038BF428 FCSEL S1, S4, S1, MI
	0x038BF42C ADRP X20, 0xB22000
	0x038BF430 FMOV W9, S1
	0x038BF434 LDRB W14, [X20 + 0x585]
	0x038BF438 AND W9, W9, 0x7FFFFFFF
	0x038BF43C CMP W9, W8
	0x038BF440 FCCMP S0, S1, 0x8, LS
	0x038BF444 FCSEL S10, S0, S1, MI
	0x038BF448 STP S16, S3, [X31 + 0xE4]
	0x038BF44C STR S9, [X31 + 0xEC]
	0x038BF450 CBNZ W14, 0x38BF468
	0x038BF454 ADRP X0, 0x834000
	0x038BF458 LDR X0, [X0 + 0x5A8]
	0x038BF45C BL 0x1C16CF4
	0x038BF460 MOVZ W8, 0x1
	0x038BF464 STRB W8, [X20 + 0x585]
	0x038BF468 LDR X0, [X19]
	0x038BF46C LDR W8, [X0 + 0xE0]
	0x038BF470 CBNZ W8, 0x38BF494
	0x038BF474 BL 0x1C16DFC
	0x038BF478 LDRB W8, [X20 + 0x585]
	0x038BF47C CBNZ W8, 0x38BF494
	0x038BF480 ADRP X0, 0x834000
	0x038BF484 LDR X0, [X0 + 0x5A8]
	0x038BF488 BL 0x1C16CF4
	0x038BF48C MOVZ W8, 0x1
	0x038BF490 STRB W8, [X20 + 0x585]
	0x038BF494 LDR X0, [X19]
	0x038BF498 LDR W8, [X0 + 0xE0]
	0x038BF49C CBNZ W8, 0x38BF4A4

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], D9
	003 Move [X31+24], D8
	004 Move [X31+32], X30
	005 Move [X31+48], X20
	006 Move [X31+56], X19
	007 Move X19, 0xB23000
	008 Move W8, [X19+1386]
	009 Move V8, V0
	010 Compare W8, 0
	011 JumpIfNotEqual {17}
	012 Move X0, 0x835000
	013 Move X0, [X0+1448]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+1386], W8
	017 Move X19, 0x835000
	018 Move X19, [X19+1448]
	019 Move S9, 0.5
	020 Move X0, [X19]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move X20, 0xB23000
	026 Move W8, [X20+1380]
	027 Multiply S8, S8, S9
	028 Compare W8, 0
	029 JumpIfNotEqual {35}
	030 Move X0, 0x835000
	031 Move X0, [X0+1448]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X20+1380], W8
	035 Move X0, [X19]
	036 NotImplemented "Instruction FCVT not yet implemented."
	037 Move W8, [X0+224]
	038 Compare W8, 0
	039 JumpIfNotEqual {41}
	040 Call 0x1C17DFC
	041 Add X0, X31, 40
	042 Add X1, X31, 8
	043 Move V0, V8
	044 Call 0x3EB2E40
	045 Move V1, [X31+40]
	046 Move V2, [X31+8]
	047 Move X20, [X31+48]
	048 Move X19, [X31+56]
	049 Move X30, [X31+32]
	050 Move D9, [X31+16]
	051 Move D8, [X31+24]
	052 Move S0, W31
	053 NotImplemented "Instruction INVALID not yet implemented."
	054 NotImplemented "Instruction INVALID not yet implemented."
	055 Move S2, W31
	056 Add X31, X31, 64
	057 Return X0

Method: Unity.Mathematics.quaternion RotateZ(System.Single angle)

Disassembly:
	0x038BF4A0 BL 0x1C16DFC
	0x038BF4A4 FMOV W8, S8
	0x038BF4A8 AND W8, W8, 0x7FFFFFFF
	0x038BF4AC FCMP S10, S8
	0x038BF4B0 MOVZ W9, 0x7F800000
	0x038BF4B4 CCMP W8, W9, 0x2, PL
	0x038BF4B8 FCSEL S1, S10, S8, HI
	0x038BF4BC FSQRT S0, S9
	0x038BF4C0 LDP X20, X19, [X31 + 0x140]
	0x038BF4C4 LDP X29, X30, [X31 + 0x130]
	0x038BF4C8 LDP D9, D8, [X31 + 0x120]
	0x038BF4CC LDP D11, D10, [X31 + 0x110]
	0x038BF4D0 LDP D13, D12, [X31 + 0x100]
	0x038BF4D4 LDP D15, D14, [X31 + 0xF0]
	0x038BF4D8 FSQRT S1, S1
	0x038BF4DC ADD X31, X31, 0x150
	0x038BF4E0 RET
	0x038BF4E4 SUB X31, X31, 0x40
	0x038BF4E8 STR X30, [X31 + 0x20]
	0x038BF4EC STP X20, X19, [X31 + 0x30]
	0x038BF4F0 ADRP X19, 0xB22000
	0x038BF4F4 LDRB W8, [X19 + 0x570]
	0x038BF4F8 STR D1, [X31]
	0x038BF4FC STR D0, [X31 + 0x10]
	0x038BF500 CBNZ W8, 0x38BF518
	0x038BF504 ADRP X0, 0x834000
	0x038BF508 LDR X0, [X0 + 0x5A8]
	0x038BF50C BL 0x1C16CF4
	0x038BF510 MOVZ W8, 0x1
	0x038BF514 STRB W8, [X19 + 0x570]
	0x038BF518 ADRP X20, 0x834000
	0x038BF51C LDR X20, [X20 + 0x5A8]
	0x038BF520 LDR X0, [X20]
	0x038BF524 LDR W8, [X0 + 0xE0]
	0x038BF528 CBNZ W8, 0x38BF54C
	0x038BF52C BL 0x1C16DFC
	0x038BF530 LDRB W8, [X19 + 0x570]
	0x038BF534 CBNZ W8, 0x38BF54C
	0x038BF538 ADRP X0, 0x834000
	0x038BF53C LDR X0, [X0 + 0x5A8]
	0x038BF540 BL 0x1C16CF4
	0x038BF544 MOVZ W8, 0x1
	0x038BF548 STRB W8, [X19 + 0x570]
	0x038BF54C LDR X0, [X20]
	0x038BF550 LDR W8, [X0 + 0xE0]
	0x038BF554 CBNZ W8, 0x38BF55C
	0x038BF558 BL 0x1C16DFC
	0x038BF55C LDP V0, V2, [X31]
	0x038BF560 MOVZ W8, 0xC4A7

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], D9
	003 Move [X31+24], D8
	004 Move [X31+32], X30
	005 Move [X31+48], X20
	006 Move [X31+56], X19
	007 Move X19, 0xB23000
	008 Move W8, [X19+1386]
	009 Move V8, V0
	010 Compare W8, 0
	011 JumpIfNotEqual {17}
	012 Move X0, 0x835000
	013 Move X0, [X0+1448]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+1386], W8
	017 Move X19, 0x835000
	018 Move X19, [X19+1448]
	019 Move S9, 0.5
	020 Move X0, [X19]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move X20, 0xB23000
	026 Move W8, [X20+1380]
	027 Multiply S8, S8, S9
	028 Compare W8, 0
	029 JumpIfNotEqual {35}
	030 Move X0, 0x835000
	031 Move X0, [X0+1448]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X20+1380], W8
	035 Move X0, [X19]
	036 NotImplemented "Instruction FCVT not yet implemented."
	037 Move W8, [X0+224]
	038 Compare W8, 0
	039 JumpIfNotEqual {41}
	040 Call 0x1C17DFC
	041 Add X0, X31, 40
	042 Add X1, X31, 8
	043 Move V0, V8
	044 Call 0x3EB2E40
	045 Move V1, [X31+40]
	046 Move V3, [X31+8]
	047 Move X20, [X31+48]
	048 Move X19, [X31+56]
	049 Move X30, [X31+32]
	050 Move D9, [X31+16]
	051 Move D8, [X31+24]
	052 Move S0, W31
	053 NotImplemented "Instruction INVALID not yet implemented."
	054 NotImplemented "Instruction INVALID not yet implemented."
	055 Move S1, W31
	056 Add X31, X31, 64
	057 Return X0

Method: Unity.Mathematics.quaternion LookRotation(Unity.Mathematics.float3 forward, Unity.Mathematics.float3 up)

Disassembly:
	0x038BF564 MOVK W8, 0x3B620000
	0x038BF568 MOVZ W9, 0x8000
	0x038BF56C MOV V2.S[1], V0.S[0]
	0x038BF570 UNIMPLEMENTED
	0x038BF574 MOVK W9, 0xC3900000
	0x00000000 INVALID
	0x038BF57C UNIMPLEMENTED
	0x038BF580 UNIMPLEMENTED
	0x038BF584 LDP X20, X19, [X31 + 0x30]
	0x038BF588 LDR X30, [X31 + 0x20]
	0x00000000 INVALID
	0x038BF590 FADD V0.2S, V2.2S, V0.2S
	0x038BF594 MOV S1, V0.S[1]
	0x038BF598 ADD X31, X31, 0x40
	0x038BF59C RET
	0x038BF5A0 MOVZ W8, 0x42080000
	0x038BF5A4 FMOV S4, W8
	0x038BF5A8 FMOV S3, 1
	0x038BF5AC FMUL S5, S0, S4
	0x038BF5B0 FMUL S6, S1, S4
	0x038BF5B4 FMUL S4, S2, S4
	0x038BF5B8 FADD S5, S5, S3
	0x038BF5BC FADD S6, S6, S3
	0x038BF5C0 FADD S3, S4, S3
	0x038BF5C4 FMUL S0, S0, S5
	0x038BF5C8 FMUL S1, S1, S6
	0x038BF5CC FMUL S2, S2, S3
	0x038BF5D0 B 0x38C0070
	0x038BF5D4 STR D10, [X31 - 0x20]!
	0x038BF5D8 STP D9, D8, [X31 + 0x8]
	0x038BF5DC STR X30, [X31 + 0x18]
	0x038BF5E0 ADRP X8, 0xFFFFFFFFFD22B000
	0x038BF5E4 MOV V8.16B, V2.16B
	0x038BF5E8 LDR V2, [X8 + 0x1E8]
	0x038BF5EC MOV V9.16B, V1.16B
	0x038BF5F0 MOV V10.16B, V0.16B
	0x038BF5F4 MOV X0, X31
	0x038BF5F8 FMUL S0, S0, S2
	0x038BF5FC FMUL S1, S1, S2
	0x038BF600 FMUL S2, S8, S2
	0x038BF604 BL 0x384B1B4
	0x038BF608 FMOV S3, 7
	0x038BF60C FMUL S1, S1, S3
	0x038BF610 FMUL S2, S2, S3
	0x038BF614 FSUB S1, S9, S1
	0x038BF618 FSUB S2, S8, S2
	0x038BF61C LDR X30, [X31 + 0x18]
	0x038BF620 LDP D9, D8, [X31 + 0x8]
	0x038BF624 FMUL S0, S0, S3
	0x038BF628 FSUB S0, S10, S0
	0x038BF62C LDR V10, [X31], #0x20
	0x038BF630 RET
	0x038BF634 SUB X31, X31, 0xB0
	0x038BF638 STR D14, [X31 + 0x60]
	0x038BF63C STP D13, D12, [X31 + 0x68]
	0x038BF640 STP D11, D10, [X31 + 0x78]
	0x038BF644 STP D9, D8, [X31 + 0x88]
	0x038BF648 STR X30, [X31 + 0x98]
	0x038BF64C STP X20, X19, [X31 + 0xA0]
	0x038BF650 ADRP X20, 0xB22000
	0x038BF654 LDRB W8, [X20 + 0x570]
	0x038BF658 MOV V8.16B, V1.16B
	0x038BF65C MOV V9.16B, V0.16B
	0x038BF660 STP X31, X31, [X31 + 0x50]
	0x038BF664 CBNZ W8, 0x38BF67C
	0x038BF668 ADRP X0, 0x834000
	0x038BF66C LDR X0, [X0 + 0x5A8]
	0x038BF670 BL 0x1C16CF4
	0x038BF674 MOVZ W8, 0x1
	0x038BF678 STRB W8, [X20 + 0x570]
	0x038BF67C ADRP X19, 0x834000
	0x038BF680 LDR X19, [X19 + 0x5A8]

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+64], D15
	003 Move [X31+72], D14
	004 Move [X31+80], D13
	005 Move [X31+88], D12
	006 Move [X31+96], D11
	007 Move [X31+104], D10
	008 Move [X31+112], D9
	009 Move [X31+120], D8
	010 Move [X31+128], X30
	011 Move [X31+136], X19
	012 Move X19, 0xB23000
	013 Move W8, [X19+1413]
	014 Move V9, V0
	015 Move V8, V2
	016 Move V10, V1
	017 Multiply S11, S1, S3
	018 Multiply S12, S2, S4
	019 Multiply S0, S0, S5
	020 Multiply S14, S9, S4
	021 Multiply S15, S1, S5
	022 Multiply S13, S2, S3
	023 Compare W8, 0
	024 JumpIfNotEqual {32}
	025 Move X0, 0x835000
	026 Move X0, [X0+1448]
	027 Move [X31+4], S0
	028 Call 0x1C17CF4
	029 Move V0, [X31+4]
	030 Move W8, 1
	031 Move [X19+1413], W8
	032 Move X8, 0x835000
	033 Move X8, [X8+1448]
	034 Subtract S11, S11, S14
	035 Subtract S12, S12, S15
	036 Subtract S13, S0, S13
	037 Move X0, [X8]
	038 Move W8, [X0+224]
	039 Compare W8, 0
	040 JumpIfNotEqual {42}
	041 Call 0x1C17DFC
	042 Multiply S1, S12, S12
	043 Multiply S2, S13, S13
	044 Multiply S0, S11, S11
	045 Add S1, S1, S2
	046 Add S0, S0, S1
	047 Move S3, 1
	048 NotImplemented "Instruction FSQRT not yet implemented."
	049 NotImplemented "Instruction FDIV not yet implemented."
	050 Multiply S1, S12, S0
	051 Multiply S2, S13, S0
	052 Multiply S0, S11, S0
	053 Multiply S3, S9, S2
	054 Multiply S4, S10, S0
	055 Multiply S5, S8, S1
	056 Multiply S6, S10, S1
	057 Multiply S7, S8, S2
	058 Multiply S16, S9, S0
	059 Move [X31+8], S1
	060 Move [X31+16], S2
	061 Subtract S1, S3, S6
	062 Subtract S2, S4, S7
	063 Subtract S3, S5, S16
	064 Add X0, X31, 48
	065 Add X1, X31, 8
	066 Move [X31+32], S9
	067 Move [X31+40], S10
	068 Move [X31+40], S8
	069 Move [X31+16], S0
	070 Move [X31+24], S2
	071 Move [X31+24], S3
	072 Move [X31+32], S1
	073 Move [X31+48], X31
	074 Move [X31+56], X31
	075 Call quaternion..ctor, X0, X1
	076 Move S0, [X31+48]
	077 Move S1, [X31+52]
	078 Move S2, [X31+56]
	079 Move S3, [X31+60]
	080 Move X30, [X31+128]
	081 Move X19, [X31+136]
	082 Move D9, [X31+112]
	083 Move D8, [X31+120]
	084 Move D11, [X31+96]
	085 Move D10, [X31+104]
	086 Move D13, [X31+80]
	087 Move D12, [X31+88]
	088 Move D15, [X31+64]
	089 Move D14, [X31+72]
	090 Add X31, X31, 144
	091 Return X0

Method: Unity.Mathematics.quaternion LookRotationSafe(Unity.Mathematics.float3 forward, Unity.Mathematics.float3 up)

Disassembly:
	0x038BF684 LDR X0, [X19]
	0x038BF688 LDR W8, [X0 + 0xE0]
	0x038BF68C CBNZ W8, 0x38BF6B0
	0x038BF690 BL 0x1C16DFC
	0x038BF694 LDRB W8, [X20 + 0x570]
	0x038BF698 CBNZ W8, 0x38BF6B0
	0x038BF69C ADRP X0, 0x834000
	0x038BF6A0 LDR X0, [X0 + 0x5A8]
	0x038BF6A4 BL 0x1C16CF4
	0x038BF6A8 MOVZ W8, 0x1
	0x038BF6AC STRB W8, [X20 + 0x570]
	0x038BF6B0 LDR X0, [X19]
	0x038BF6B4 LDR W8, [X0 + 0xE0]
	0x038BF6B8 CBNZ W8, 0x38BF6C0
	0x038BF6BC BL 0x1C16DFC
	0x038BF6C0 FRINTM S11, S9
	0x038BF6C4 FRINTM S12, S8
	0x038BF6C8 MOV V0.16B, V11.16B
	0x038BF6CC MOV V1.16B, V12.16B
	0x038BF6D0 BL 0x38BF4E4
	0x038BF6D4 LDRB W8, [X20 + 0x570]
	0x038BF6D8 MOV V10.16B, V1.16B
	0x038BF6DC STR D0, [X31 + 0x40]
	0x038BF6E0 CBNZ W8, 0x38BF6F8
	0x038BF6E4 ADRP X0, 0x834000
	0x038BF6E8 LDR X0, [X0 + 0x5A8]
	0x038BF6EC BL 0x1C16CF4
	0x038BF6F0 MOVZ W8, 0x1
	0x038BF6F4 STRB W8, [X20 + 0x570]
	0x038BF6F8 LDR X0, [X19]
	0x038BF6FC LDR W8, [X0 + 0xE0]
	0x038BF700 CBNZ W8, 0x38BF724
	0x038BF704 BL 0x1C16DFC
	0x038BF708 LDRB W8, [X20 + 0x570]
	0x038BF70C CBNZ W8, 0x38BF724
	0x038BF710 ADRP X0, 0x834000
	0x038BF714 LDR X0, [X0 + 0x5A8]
	0x038BF718 BL 0x1C16CF4
	0x038BF71C MOVZ W8, 0x1
	0x038BF720 STRB W8, [X20 + 0x570]
	0x038BF724 LDR X0, [X19]
	0x038BF728 LDR W8, [X0 + 0xE0]
	0x038BF72C CBNZ W8, 0x38BF734
	0x038BF730 BL 0x1C16DFC
	0x038BF734 ADRP X8, 0xFFFFFFFFFD22E000
	0x038BF738 LDR V4, [X31 + 0x4]
	0x038BF73C ADRP X9, 0xFFFFFFFFFD22F000
	0x038BF740 LDR V5, [X8 + 0x510]
	0x038BF744 LDR V6, [X9]
	0x038BF748 FSUB S0, S9, S11
	0x038BF74C FSUB S1, S8, S12
	0x038BF750 FMOV S2, -0.5
	0x038BF754 UNIMPLEMENTED
	0x038BF758 FMOV S3, -1.5
	0x038BF75C UNIMPLEMENTED
	0x038BF760 FADD S2, S1, S2
	0x038BF764 FADD V0.2S, V0.2S, V5.2S
	0x038BF768 FADD S1, S1, S3
	0x038BF76C STP V2, V0, [X31 + 0x20]
	0x038BF770 FADD V0.2S, V4.2S, V6.2S
	0x038BF774 STR V1, [X31 + 0x4]
	0x038BF778 MOV S1, V0.S[1]
	0x038BF77C MOV V2.16B, V0.16B
	0x038BF780 MOV V3.16B, V1.16B
	0x038BF784 BL 0x38BF988
	0x038BF788 FADD S0, S10, S0
	0x038BF78C FADD S1, S10, S1
	0x038BF790 FADD S2, S10, S2
	0x038BF794 FADD S3, S10, S3
	0x038BF798 FMOV S4, W31
	0x038BF79C FMOV S5, 1
	0x038BF7A0 FADD S0, S0, S4
	0x038BF7A4 FADD S1, S1, S4
	0x038BF7A8 FADD S2, S2, S5
	0x038BF7AC FADD S3, S3, S5
	0x038BF7B0 BL 0x38BF988
	0x038BF7B4 MOV V8.16B, V0.16B
	0x038BF7B8 MOV V9.16B, V1.16B
	0x038BF7BC MOV V10.16B, V2.16B
	0x038BF7C0 MOV V11.16B, V3.16B
	0x038BF7C4 BL 0x38BF9C8
	0x038BF7C8 MOVZ W8, 0x4925
	0x038BF7CC MOVK W8, 0x3E120000
	0x038BF7D0 UNIMPLEMENTED
	0x038BF7D4 ADRP X8, 0xFFFFFFFFFD22B000
	0x038BF7D8 STR D3, [X31 + 0x10]
	0x038BF7DC LDR V3, [X8 + 0x1E8]
	0x038BF7E0 MOVZ W8, 0x4925
	0x038BF7E4 MOVK W8, 0x3D920000
	0x038BF7E8 MOV V1.S[1], V0.S[0]
	0x038BF7EC UNIMPLEMENTED
	0x00000000 INVALID
	0x038BF7F4 STR D2, [X31]
	0x038BF7F8 FADD V14.2S, V0.2S, V13.2S
	0x038BF7FC FMUL S0, S8, S3
	0x038BF800 FMUL S1, S9, S3
	0x038BF804 FMUL S2, S10, S3
	0x038BF808 FMUL S3, S11, S3
	0x038BF80C MOV X0, X31
	0x038BF810 BL 0x384B280
	0x038BF814 BL 0x38BF9C8
	0x038BF818 LDP V4, V5, [X31]
	0x038BF81C MOVZ W8, 0xCCCD
	0x038BF820 MOV V1.S[1], V0.S[0]
	0x038BF824 LDR V16, [X31 + 0x4]
	0x038BF828 MOV V4.S[1], V2.S[0]
	0x038BF82C LDP V2, V7, [X31 + 0x20]
	0x038BF830 MOV V5.S[1], V3.S[0]
	0x038BF834 MOVK W8, 0x3F4C0000
	0x00000000 INVALID
	0x00000000 INVALID
	0x00000000 INVALID
	0x038BF844 UNIMPLEMENTED
	0x038BF848 FADD V1.2S, V1.2S, V13.2S
	0x038BF84C UNIMPLEMENTED
	0x038BF850 UNIMPLEMENTED
	0x038BF854 FADD V0.2S, V0.2S, V13.2S
	0x038BF858 FADD V4.2S, V4.2S, V13.2S
	0x00000000 INVALID
	0x00000000 INVALID
	0x038BF864 MOV V3.S[1], V16.S[0]
	0x038BF868 FADD V6.2S, V7.2S, V6.2S
	0x00000000 INVALID
	0x00000000 INVALID
	0x038BF874 MOV V7.S[1], V16.S[0]
	0x038BF878 FADD V1.2S, V2.2S, V1.2S
	0x038BF87C FADD V0.2S, V3.2S, V0.2S
	0x038BF880 FADD V3.2S, V7.2S, V4.2S
	0x00000000 INVALID
	0x00000000 INVALID
	0x038BF88C FADD V1.2S, V4.2S, V1.2S
	0x00000000 INVALID
	0x038BF894 MOV S3, V1.S[1]
	0x00000000 INVALID
	0x038BF89C FCMP S3, S1
	0x038BF8A0 FADDP S0, V0.2S
	0x038BF8A4 FCSEL S4, S3, S1, MI
	0x038BF8A8 FCSEL S1, S1, S3, MI
	0x038BF8AC FCMP S4, S0
	0x038BF8B0 FCSEL S3, S4, S0, MI
	0x038BF8B4 FCSEL S0, S0, S4, MI
	0x038BF8B8 FADDP S2, V2.2S
	0x038BF8BC FMOV W8, S0
	0x038BF8C0 MOVZ W9, 0x7F800000
	0x038BF8C4 FCMP S3, S2
	0x038BF8C8 AND W8, W8, 0x7FFFFFFF
	0x038BF8CC ADRP X20, 0xB22000
	0x038BF8D0 FCSEL S9, S2, S3, MI
	0x038BF8D4 FCSEL S8, S3, S2, MI
	0x038BF8D8 CMP W8, W9
	0x038BF8DC LDRB W8, [X20 + 0x585]
	0x038BF8E0 FCCMP S1, S0, 0x8, LS
	0x038BF8E4 FCSEL S10, S1, S0, MI
	0x038BF8E8 STP S0, S1, [X31 + 0x54]
	0x038BF8EC STR S8, [X31 + 0x5C]
	0x038BF8F0 STR S9, [X31 + 0x50]
	0x038BF8F4 CBNZ W8, 0x38BF90C
	0x038BF8F8 ADRP X0, 0x834000
	0x038BF8FC LDR X0, [X0 + 0x5A8]
	0x038BF900 BL 0x1C16CF4
	0x038BF904 MOVZ W8, 0x1
	0x038BF908 STRB W8, [X20 + 0x585]
	0x038BF90C LDR X0, [X19]
	0x038BF910 LDR W8, [X0 + 0xE0]
	0x038BF914 CBNZ W8, 0x38BF938
	0x038BF918 BL 0x1C16DFC
	0x038BF91C LDRB W8, [X20 + 0x585]
	0x038BF920 CBNZ W8, 0x38BF938
	0x038BF924 ADRP X0, 0x834000
	0x038BF928 LDR X0, [X0 + 0x5A8]
	0x038BF92C BL 0x1C16CF4
	0x038BF930 MOVZ W8, 0x1
	0x038BF934 STRB W8, [X20 + 0x585]
	0x038BF938 LDR X0, [X19]
	0x038BF93C LDR W8, [X0 + 0xE0]
	0x038BF940 CBNZ W8, 0x38BF948
	0x038BF944 BL 0x1C16DFC
	0x038BF948 FMOV W8, S9
	0x038BF94C AND W8, W8, 0x7FFFFFFF
	0x038BF950 FCMP S10, S9
	0x038BF954 MOVZ W9, 0x7F800000
	0x038BF958 CCMP W8, W9, 0x2, PL
	0x038BF95C FCSEL S1, S10, S9, HI
	0x038BF960 FSQRT S0, S8
	0x038BF964 LDP X20, X19, [X31 + 0xA0]
	0x038BF968 LDR X30, [X31 + 0x98]
	0x038BF96C LDP D9, D8, [X31 + 0x88]
	0x038BF970 LDP D11, D10, [X31 + 0x78]
	0x038BF974 LDP D13, D12, [X31 + 0x68]
	0x038BF978 LDR V14, [X31 + 0x60]
	0x038BF97C FSQRT S1, S1
	0x038BF980 ADD X31, X31, 0xB0
	0x038BF984 RET
	0x038BF988 MOVZ W8, 0x42080000
	0x038BF98C FMOV S5, W8
	0x038BF990 FMOV S4, 1
	0x038BF994 FMUL S6, S0, S5
	0x038BF998 FMUL S7, S1, S5
	0x038BF99C FMUL S16, S2, S5
	0x038BF9A0 FMUL S5, S3, S5
	0x038BF9A4 FADD S6, S6, S4
	0x038BF9A8 FADD S7, S7, S4
	0x038BF9AC FADD S16, S16, S4
	0x038BF9B0 FADD S4, S5, S4
	0x038BF9B4 FMUL S0, S0, S6
	0x038BF9B8 FMUL S1, S1, S7
	0x038BF9BC FMUL S2, S2, S16

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+64], D15
	003 Move [X31+72], D14
	004 Move [X31+80], D13
	005 Move [X31+88], D12
	006 Move [X31+96], D11
	007 Move [X31+104], D10
	008 Move [X31+112], D9
	009 Move [X31+120], D8
	010 Move [X31+128], X30
	011 Move [X31+144], X20
	012 Move [X31+152], X19
	013 Move X19, 0xB23000
	014 Move W8, [X19+1413]
	015 Move V12, V1
	016 Move V13, V0
	017 Multiply S0, S0, S0
	018 Multiply S1, S1, S1
	019 Move V15, V4
	020 Move V10, V3
	021 Move V11, V2
	022 Add S9, S0, S1
	023 Multiply S14, S2, S2
	024 Move [X31+140], S5
	025 Compare W8, 0
	026 JumpIfNotEqual {32}
	027 Move X0, 0x835000
	028 Move X0, [X0+1448]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X19+1413], W8
	032 Move X20, 0x835000
	033 Move X20, [X20+1448]
	034 Multiply S8, S10, S10
	035 Move [X31+136], S15
	036 Multiply S15, S15, S15
	037 Move X0, [X20]
	038 Add S14, S14, S9
	039 Move W8, [X0+224]
	040 Compare W8, 0
	041 JumpIfEqual {43}
	042 Move W8, W31
	043 Call 0x1C17DFC
	044 Move W8, [X19+1413]
	045 NotImplemented "Instruction CMP not yet implemented."
	046 NotImplemented "Instruction CSET not yet implemented."
	047 Move V0, [X31+140]
	048 Add S15, S8, S15
	049 Move S1, 1
	050 Multiply S8, S0, S0
	051 NotImplemented "Instruction FSQRT not yet implemented."
	052 NotImplemented "Instruction FDIV not yet implemented."
	053 Compare W8, 0
	054 JumpIfEqual {60}
	055 Move X0, 0x835000
	056 Move X0, [X0+1448]
	057 Call 0x1C17CF4
	058 Move W8, 1
	059 Move [X19+1413], W8
	060 Move X0, [X20]
	061 Add S15, S8, S15
	062 Multiply S13, S13, S9
	063 Multiply S12, S12, S9
	064 Move W8, [X0+224]
	065 Multiply S8, S11, S9
	066 Compare W8, 0
	067 JumpIfEqual {69}
	068 Move W8, W31
	069 Call 0x1C17DFC
	070 Move W8, [X19+1413]
	071 NotImplemented "Instruction CMP not yet implemented."
	072 NotImplemented "Instruction CSET not yet implemented."
	073 Move S2, [X31+136]
	074 Move S3, [X31+140]
	075 NotImplemented "Instruction FSQRT not yet implemented."
	076 Move S1, 1
	077 NotImplemented "Instruction FDIV not yet implemented."
	078 Multiply S1, S10, S0
	079 Multiply S2, S2, S0
	080 Multiply S0, S3, S0
	081 Multiply S3, S12, S1
	082 Multiply S4, S8, S2
	083 Multiply S5, S13, S0
	084 Multiply S0, S12, S0
	085 Multiply S1, S8, S1
	086 Multiply S2, S13, S2
	087 Subtract S10, S4, S0
	088 Subtract S11, S5, S1
	089 Subtract S6, S3, S2
	090 Multiply S0, S10, S10
	091 Multiply S1, S11, S11
	092 Move [X31+140], S8
	093 Add S8, S0, S1
	094 Multiply S9, S6, S6
	095 Compare W8, 0
	096 JumpIfEqual {114}
	097 Move X0, 0x835000
	098 Move X0, [X0+1448]
	099 Move [X31+136], S13
	100 Move V13, V12
	101 Move V12, V11
	102 Move V11, V14
	103 Move V14, V10
	104 Move V10, V6
	105 Call 0x1C17CF4
	106 Move V6, V10
	107 Move V10, V14
	108 Move V14, V11
	109 Move V11, V12
	110 Move V12, V13
	111 Move V13, [X31+136]
	112 Move W8, 1
	113 Move [X19+1413], W8
	114 Move X0, [X20]
	115 Add S8, S9, S8
	116 Move W8, [X0+224]
	117 Compare W8, 0
	118 JumpIfNotEqual {122}
	119 Move V9, V6
	120 Call 0x1C17DFC
	121 Move V6, V9
	122 Move W8, S15
	123 And W8, W8, 0x7FFFFFFF
	124 Move W10, 0x7F800000
	125 Move X9, -48054272
	126 NotImplemented "Instruction CMP not yet implemented."
	127 Move V0, [X9+548]
	128 NotImplemented "Instruction CSET not yet implemented."
	129 NotImplemented "Instruction FCMP not yet implemented."
	130 NotImplemented "Instruction CSET not yet implemented."
	131 NotImplemented "Instruction CSET not yet implemented."
	132 Or W11, W11, W9
	133 Or W12, W12, W9
	134 Move W9, S8
	135 And W9, W9, 0x7FFFFFFF
	136 NotImplemented "Instruction CMP not yet implemented."
	137 NotImplemented "Instruction FCSEL not yet implemented."
	138 NotImplemented "Instruction CMP not yet implemented."
	139 NotImplemented "Instruction CSET not yet implemented."
	140 NotImplemented "Instruction FCMP not yet implemented."
	141 NotImplemented "Instruction CSET not yet implemented."
	142 Or W11, W11, W10
	143 NotImplemented "Instruction CMP not yet implemented."
	144 NotImplemented "Instruction FCSEL not yet implemented."
	145 NotImplemented "Instruction CMP not yet implemented."
	146 NotImplemented "Instruction FCSEL not yet implemented."
	147 NotImplemented "Instruction FCMP not yet implemented."
	148 NotImplemented "Instruction CSET not yet implemented."
	149 Or W10, W11, W10
	150 NotImplemented "Instruction CMP not yet implemented."
	151 NotImplemented "Instruction FCSEL not yet implemented."
	152 NotImplemented "Instruction FSQRT not yet implemented."
	153 Move S15, 1
	154 NotImplemented "Instruction FCMP not yet implemented."
	155 NotImplemented "Instruction FDIV not yet implemented."
	156 Move W19, W31
	157 Multiply S2, S10, S0
	158 Multiply S1, S11, S0
	159 Multiply S0, S6, S0
	160 Move X10, -48054272
	161 Move V4, [X10+160]
	162 Move V17, [X31+140]
	163 NotImplemented "Instruction FCMP not yet implemented."
	164 Move W10, 0x7F800000
	165 NotImplemented "Instruction FABS not yet implemented."
	166 Move S4, W10
	167 NotImplemented "Instruction FCMP not yet implemented."
	168 Move W19, W31
	169 Move W10, 0x7F800000
	170 Move S3, W8
	171 Move S4, W10
	172 NotImplemented "Instruction FCMP not yet implemented."
	173 Move W8, 0x7F800000
	174 Move S3, W9
	175 Move S4, W8
	176 NotImplemented "Instruction FCMP not yet implemented."
	177 NotImplemented "Instruction CSET not yet implemented."
	178 Move V17, [X31+140]
	179 Multiply S3, S13, S1
	180 Multiply S4, S12, S0
	181 Multiply S5, S17, S2
	182 Multiply S6, S12, S2
	183 Multiply S7, S17, S1
	184 Multiply S16, S13, S0
	185 Move [X31+8], S2
	186 Move [X31+16], S1
	187 Subtract S1, S3, S6
	188 Subtract S2, S4, S7
	189 Subtract S3, S5, S16
	190 Add X0, X31, 48
	191 Add X1, X31, 8
	192 Move [X31+32], S13
	193 Move [X31+40], S12
	194 Move [X31+40], S17
	195 Move [X31+16], S0
	196 Move [X31+24], S2
	197 Move [X31+24], S3
	198 Move [X31+32], S1
	199 Move [X31+48], X31
	200 Move [X31+56], X31
	201 Call quaternion..ctor, X0, X1
	202 Move S2, [X31+56]
	203 Move S3, [X31+60]
	204 Move S0, [X31+48]
	205 Move S1, [X31+52]
	206 NotImplemented "Instruction CMP not yet implemented."
	207 Move X20, [X31+144]
	208 Move X19, [X31+152]
	209 NotImplemented "Instruction FCSEL not yet implemented."
	210 Move X30, [X31+128]
	211 Move D9, [X31+112]
	212 Move D8, [X31+120]
	213 Move D11, [X31+96]
	214 Move D10, [X31+104]
	215 Move D13, [X31+80]
	216 Move D12, [X31+88]
	217 Move D15, [X31+64]
	218 Move D14, [X31+72]
	219 Move S4, W31
	220 NotImplemented "Instruction FCSEL not yet implemented."
	221 NotImplemented "Instruction FCSEL not yet implemented."
	222 NotImplemented "Instruction FCSEL not yet implemented."
	223 Add X31, X31, 160
	224 Return X0

Method: System.Boolean Equals(Unity.Mathematics.quaternion x)

Disassembly:
	0x038BF9C0 FMUL S3, S3, S4
	0x038BF9C4 B 0x38C1ADC
	0x038BF9C8 STP D11, D10, [X31 - 0x30]!
	0x038BF9CC STP D9, D8, [X31 + 0x10]
	0x038BF9D0 STR X30, [X31 + 0x20]
	0x038BF9D4 ADRP X8, 0xFFFFFFFFFD22B000
	0x038BF9D8 MOV V8.16B, V3.16B
	0x038BF9DC LDR V3, [X8 + 0x1E8]
	0x038BF9E0 MOV V9.16B, V2.16B
	0x038BF9E4 MOV V10.16B, V1.16B
	0x038BF9E8 MOV V11.16B, V0.16B
	0x038BF9EC FMUL S0, S0, S3
	0x038BF9F0 FMUL S1, S1, S3
	0x038BF9F4 FMUL S2, S2, S3
	0x038BF9F8 FMUL S3, S8, S3

ISIL:
	001 Move V4, [X0]
	002 NotImplemented "Instruction FCMP not yet implemented."
	003 Move V0, [X0+4]
	004 NotImplemented "Instruction FCMP not yet implemented."
	005 Move V0, [X0+8]
	006 NotImplemented "Instruction FCMP not yet implemented."
	007 Move V0, [X0+12]
	008 NotImplemented "Instruction FCMP not yet implemented."
	009 NotImplemented "Instruction CSET not yet implemented."
	010 Return X0
	011 Move W0, W31
	012 Return X0

Method: System.Boolean Equals(System.Object x)

Disassembly:
	0x038BF9FC MOV X0, X31
	0x038BFA00 BL 0x384B280
	0x038BFA04 FMOV S4, 7
	0x038BFA08 FMUL S2, S2, S4
	0x038BFA0C FMUL S3, S3, S4
	0x038BFA10 FSUB S2, S9, S2
	0x038BFA14 FSUB S3, S8, S3
	0x038BFA18 LDR X30, [X31 + 0x20]
	0x038BFA1C LDP D9, D8, [X31 + 0x10]
	0x038BFA20 FMUL S0, S0, S4
	0x038BFA24 FMUL S1, S1, S4
	0x038BFA28 FSUB S0, S11, S0
	0x038BFA2C FSUB S1, S10, S1
	0x038BFA30 LDP D11, D10, [X31], #0x30
	0x038BFA34 RET
	0x038BFA38 SUB X31, X31, 0x1C0
	0x038BFA3C STP D15, D14, [X31 + 0x160]
	0x038BFA40 STP D13, D12, [X31 + 0x170]
	0x038BFA44 STP D11, D10, [X31 + 0x180]
	0x038BFA48 STP D9, D8, [X31 + 0x190]
	0x038BFA4C STP X29, X30, [X31 + 0x1A0]
	0x038BFA50 STP X20, X19, [X31 + 0x1B0]
	0x038BFA54 MOV X0, X31
	0x038BFA58 MOV V9.16B, V2.16B
	0x038BFA5C MOV V10.16B, V1.16B
	0x038BFA60 MOV V11.16B, V0.16B
	0x038BFA64 BL 0x384B1B4
	0x038BFA68 BL 0x38C0070
	0x038BFA6C STR D0, [X31 + 0x140]
	0x038BFA70 MOV V12.16B, V1.16B
	0x038BFA74 MOV V8.16B, V2.16B
	0x038BFA78 MOV V0.16B, V11.16B
	0x038BFA7C MOV V1.16B, V10.16B
	0x038BFA80 MOV V2.16B, V9.16B
	0x038BFA84 MOV X0, X31
	0x038BFA88 BL 0x384B1B4
	0x038BFA8C ADRP X8, 0xFFFFFFFFFD22F000
	0x038BFA90 FSUB S2, S9, S2
	0x038BFA94 LDR V3, [X8 + 0x378]
	0x038BFA98 STR V2, [X31 + 0x9]
	0x038BFA9C LDR V2, [X31 + 0x14]
	0x038BFAA0 ADRP X8, 0xFFFFFFFFFD22F000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xB23000
	006 Move W8, [X21+1685]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x83B000
	014 Move X0, [X0+1976]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+1685], W8
	018 Compare X20, 0
	019 JumpIfEqual {25}
	020 Move X8, 0x83B000
	021 Move X8, [X8+1976]
	022 Move X9, [X20]
	023 Move X8, [X8]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move W0, W31
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Return X0
	031 Move X0, X20
	032 Call 0x1C17E08
	033 Move V0, [X0]
	034 Move V1, [X19]
	035 NotImplemented "Instruction FCMP not yet implemented."
	036 Move V0, [X0+4]
	037 Move V1, [X19+4]
	038 NotImplemented "Instruction FCMP not yet implemented."
	039 Move V0, [X0+8]
	040 Move V1, [X19+8]
	041 NotImplemented "Instruction FCMP not yet implemented."
	042 Move V0, [X0+12]
	043 Move V1, [X19+12]
	044 NotImplemented "Instruction FCMP not yet implemented."
	045 NotImplemented "Instruction CSET not yet implemented."

Method: System.Int32 GetHashCode()

Disassembly:
	0x038BFAA4 FSUB S0, S11, S0
	0x038BFAA8 LDR V4, [X8]
	0x038BFAAC FSUB S1, S10, S1
	0x038BFAB0 FMOV S9, W31
	0x038BFAB4 UNIMPLEMENTED
	0x038BFAB8 FMOV S5, -1
	0x038BFABC FADD V6.2S, V0.2S, V3.2S
	0x038BFAC0 FADD S0, S1, S9
	0x038BFAC4 UNIMPLEMENTED
	0x038BFAC8 STP V0, V6, [X31 + 0x70]
	0x038BFACC FADD S0, S1, S5
	0x038BFAD0 STR V0, [X31 + 0xA]
	0x038BFAD4 FADD V0.2S, V2.2S, V4.2S
	0x038BFAD8 MOV S1, V0.S[1]
	0x038BFADC MOV V2.16B, V0.16B
	0x038BFAE0 MOV V3.16B, V1.16B
	0x038BFAE4 BL 0x38BF988
	0x038BFAE8 FADD S0, S12, S0
	0x038BFAEC FADD S1, S12, S1
	0x038BFAF0 FADD S2, S12, S2
	0x038BFAF4 FADD S3, S12, S3
	0x038BFAF8 FMOV S12, 1

ISIL:
	001 Move W10, [X0]
	002 Move W11, [X0+4]
	003 Move W8, [X0+8]
	004 Move W9, [X0+12]
	005 Move X13, 3819
	006 Move X12, 2897
	007 NotImplemented "Instruction MOVK not yet implemented."
	008 NotImplemented "Instruction MOVK not yet implemented."
	009 Multiply X11, X11, X13
	010 Move W13, 0xE1D1
	011 Multiply X9, X9, X12
	012 Move W12, 0x26FF
	013 NotImplemented "Instruction MOVK not yet implemented."
	014 NotImplemented "Instruction MOVK not yet implemented."
	015 Multiply W8, W8, W13
	016 Move X11, X11
	017 ShiftRight X11, 32
	018 And X11, X11, 0x7FFFFFFF
	019 NotImplemented "Instruction MADD not yet implemented."
	020 Move X9, X9
	021 ShiftRight X9, 32
	022 And X9, X9, 0x7FFFFFFF
	023 Add W8, W8, W11
	024 Add W8, W8, W9
	025 Move W9, 0x6EE1
	026 NotImplemented "Instruction MOVK not yet implemented."
	027 Add W0, W8, W9
	028 Return X0

Method: System.String ToString()

Disassembly:
	0x038BFAFC FADD S0, S0, S9
	0x038BFB00 FADD S1, S1, S9
	0x038BFB04 FADD S2, S2, S12
	0x038BFB08 FADD S3, S3, S12
	0x038BFB0C BL 0x38BF988
	0x038BFB10 FADD S9, S8, S0
	0x038BFB14 FADD S10, S8, S1
	0x038BFB18 FADD S11, S8, S2
	0x038BFB1C FADD S8, S8, S3
	0x038BFB20 MOV V0.16B, V9.16B
	0x038BFB24 MOV V1.16B, V10.16B
	0x038BFB28 MOV V2.16B, V11.16B
	0x038BFB2C MOV V3.16B, V8.16B
	0x038BFB30 BL 0x38BF988
	0x038BFB34 STR D0, [X31 + 0x100]
	0x038BFB38 STR D1, [X31 + 0xF0]
	0x038BFB3C STR D2, [X31 + 0xE0]
	0x038BFB40 STR D3, [X31 + 0xD0]
	0x038BFB44 FADD S0, S9, S12
	0x038BFB48 FADD S1, S10, S12
	0x038BFB4C FADD S2, S11, S12
	0x038BFB50 FADD S3, S8, S12
	0x038BFB54 BL 0x38BF988
	0x038BFB58 STR D0, [X31 + 0x120]
	0x038BFB5C LDP V6, V0, [X31 + 0xE0]
	0x038BFB60 LDR V5, [X31 + 0x10]
	0x038BFB64 MOVZ W8, 0x4925
	0x038BFB68 LDR V4, [X31 + 0xD]
	0x038BFB6C MOVK W8, 0x3E120000
	0x038BFB70 MOV V0.S[1], V5.S[0]
	0x038BFB74 UNIMPLEMENTED
	0x038BFB78 STR D1, [X31 + 0x110]
	0x00000000 INVALID
	0x038BFB80 MOV V6.S[1], V2.S[0]
	0x038BFB84 MOV V4.S[1], V3.S[0]
	0x038BFB88 MOV S8, V1.S[1]
	0x038BFB8C STP V2, V3, [X31 + 0x50]
	0x00000000 INVALID
	0x00000000 INVALID
	0x038BFB98 MOV V0.16B, V8.16B
	0x038BFB9C MOV X0, X31
	0x038BFBA0 STR V1, [X31 + 0xB]
	0x038BFBA4 STP V2, V3, [X31 + 0x130]
	0x038BFBA8 BL 0x384B280
	0x038BFBAC STR D2, [X31 + 0x10]
	0x038BFBB0 LDR V2, [X31 + 0xB]
	0x038BFBB4 MOVZ W8, 0x6DB7
	0x038BFBB8 MOVK W8, 0xBEDB0000
	0x038BFBBC MOV V1.S[1], V0.S[0]
	0x038BFBC0 FSUB V0.2S, V2.2S, V1.2S
	0x038BFBC4 UNIMPLEMENTED
	0x038BFBC8 FADD V0.2S, V0.2S, V11.2S
	0x038BFBCC STR D3, [X31 + 0x20]
	0x038BFBD0 STR D0, [X31 + 0xC8]
	0x038BFBD4 MOV V0.16B, V8.16B
	0x038BFBD8 MOV V1.16B, V2.16B
	0x038BFBDC LDP V2, V3, [X31 + 0x130]
	0x038BFBE0 MOV X0, X31
	0x038BFBE4 BL 0x384B280
	0x038BFBE8 BL 0x38BF9C8
	0x038BFBEC ADRP X8, 0xFFFFFFFFFD22B000
	0x038BFBF0 MOV V1.S[1], V0.S[0]
	0x00000000 INVALID
	0x038BFBF8 FADD V0.2S, V0.2S, V11.2S
	0x038BFBFC STR D2, [X31 + 0x30]
	0x038BFC00 STR D3, [X31 + 0x40]
	0x038BFC04 LDR V12, [X8 + 0x128]
	0x038BFC08 STR D0, [X31 + 0xB0]
	0x038BFC0C LDP V1, V0, [X31 + 0xF0]
	0x038BFC10 LDP V3, V2, [X31 + 0xD0]
	0x038BFC14 MOV X0, X31
	0x038BFC18 FMUL S0, S0, S12
	0x038BFC1C FMUL S1, S1, S12
	0x038BFC20 FMUL S2, S2, S12
	0x038BFC24 FMUL S3, S3, S12
	0x038BFC28 BL 0x384B280
	0x038BFC2C STR D2, [X31 + 0xD0]
	0x038BFC30 MOVZ W8, 0xAAAB
	0x038BFC34 MOV V1.S[1], V0.S[0]
	0x038BFC38 LDP V2, V0, [X31 + 0x110]
	0x038BFC3C MOVK W8, 0x3E2A0000
	0x038BFC40 STR D3, [X31 + 0xE0]
	0x038BFC44 UNIMPLEMENTED
	0x038BFC48 MOVZ W8, 0x5555
	0x038BFC4C MOVK W8, 0xBED50000
	0x038BFC50 UNIMPLEMENTED
	0x038BFC54 MOV V2.S[1], V0.S[0]
	0x00000000 INVALID
	0x038BFC5C FADD V0.2S, V0.2S, V15.2S
	0x038BFC60 LDR V4, [X31 + 0x13]
	0x038BFC64 STR D0, [X31 + 0x100]
	0x038BFC68 LDR V0, [X31 + 0x14]
	0x00000000 INVALID
	0x038BFC70 MOV S8, V4.S[1]
	0x038BFC74 MOV S9, V1.S[1]
	0x038BFC78 MOV S10, V0.S[1]
	0x038BFC7C STR D3, [X31 + 0xF0]
	0x038BFC80 MOV V0.16B, V9.16B
	0x038BFC84 MOV V2.16B, V8.16B
	0x038BFC88 MOV V3.16B, V10.16B
	0x038BFC8C MOV X0, X31
	0x038BFC90 STR V1, [X31]
	0x038BFC94 BL 0x384B280
	0x038BFC98 LDP V5, V4, [X31 + 0x10]
	0x038BFC9C MOV X0, X31
	0x038BFCA0 MOV V1.S[1], V0.S[0]
	0x038BFCA4 MOV V5.S[1], V2.S[0]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+32], X22
	004 Move [X31+40], X21
	005 Move [X31+48], X20
	006 Move [X31+56], X19
	007 Move X19, 0xB23000
	008 Move X21, 0x835000
	009 Move X22, 0x835000
	010 Move W8, [X19+1686]
	011 Move X21, [X21+2512]
	012 Move X22, [X22+2704]
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0x835000
	019 Move X0, [X0+2512]
	020 Call 0x1C17CF4
	021 Move X0, 0x835000
	022 Move X0, [X0+2704]
	023 Call 0x1C17CF4
	024 Move X0, 0x88D000
	025 Move X0, [X0+192]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X19+1686], W8
	029 Move X0, [X21]
	030 Move W1, 4
	031 Call 0x1C17D6C
	032 Move X19, X0
	033 Move V0, [X20]
	034 Move X0, [X22]
	035 Add X1, X31, 28
	036 Move [X31+28], S0
	037 Call 0x1C17E04
	038 Compare X19, 0
	039 JumpIfEqual {121}
	040 Move X21, X0
	041 Compare X0, 0
	042 JumpIfEqual {49}
	043 Move X8, [X19]
	044 Move X0, X21
	045 Move X1, [X8+64]
	046 Call 0x1C17E00
	047 Compare X0, 0
	048 JumpIfEqual {118}
	049 Move W8, [X19+24]
	050 Compare W8, 0
	051 JumpIfEqual {117}
	052 Move [X19+32], X21
	053 Move V0, [X20+4]
	054 Move X0, [X22]
	055 Add X1, X31, 24
	056 Move [X31+24], S0
	057 Call 0x1C17E04
	058 Move X21, X0
	059 Compare X0, 0
	060 JumpIfEqual {67}
	061 Move X8, [X19]
	062 Move X0, X21
	063 Move X1, [X8+64]
	064 Call 0x1C17E00
	065 Compare X0, 0
	066 JumpIfEqual {118}
	067 Move W8, [X19+24]
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Move [X19+40], X21
	070 Move V0, [X20+8]
	071 Move X0, [X22]
	072 Add X1, X31, 12
	073 Move [X31+12], S0
	074 Call 0x1C17E04
	075 Move X21, X0
	076 Compare X0, 0
	077 JumpIfEqual {84}
	078 Move X8, [X19]
	079 Move X0, X21
	080 Move X1, [X8+64]
	081 Call 0x1C17E00
	082 Compare X0, 0
	083 JumpIfEqual {118}
	084 Move W8, [X19+24]
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Move [X19+48], X21
	087 Move V0, [X20+12]
	088 Move X0, [X22]
	089 Add X1, X31, 8
	090 Move [X31+8], S0
	091 Call 0x1C17E04
	092 Move X20, X0
	093 Compare X0, 0
	094 JumpIfEqual {101}
	095 Move X8, [X19]
	096 Move X0, X20
	097 Move X1, [X8+64]
	098 Call 0x1C17E00
	099 Compare X0, 0
	100 JumpIfEqual {118}
	101 Move W8, [X19+24]
	102 NotImplemented "Instruction CMP not yet implemented."
	103 Move X8, 0x88D000
	104 Move X8, [X8+192]
	105 Move [X19+56], X20
	106 Move X1, X19
	107 Move X2, X31
	108 Move X0, [X8]
	109 Call String.Format, X0, X1
	110 Move X20, [X31+48]
	111 Move X19, [X31+56]
	112 Move X22, [X31+32]
	113 Move X21, [X31+40]
	114 Move X30, [X31+16]
	115 Add X31, X31, 64
	116 Return X0
	117 Call 0x1C17F28
	118 Call 0x1C17F44
	119 Move X1, X31
	120 Call 0x1C17DEC
	121 Call 0x1C17F20

Method: System.String ToString(System.String format, System.IFormatProvider formatProvider)

Disassembly:
	0x038BFCA8 MOV V4.S[1], V3.S[0]
	0x038BFCAC LDP V0, V2, [X31 + 0x130]
	0x038BFCB0 LDR V3, [X31]
	0x038BFCB4 FSUB V0.2S, V0.2S, V5.2S
	0x038BFCB8 FSUB V1.2S, V3.2S, V1.2S
	0x038BFCBC FSUB V2.2S, V2.2S, V4.2S
	0x038BFCC0 FADD V14.2S, V0.2S, V11.2S
	0x038BFCC4 FADD V0.2S, V1.2S, V11.2S
	0x038BFCC8 STR D0, [X31 + 0x140]
	0x038BFCCC FADD V0.2S, V2.2S, V11.2S
	0x038BFCD0 STR D0, [X31 + 0x130]
	0x038BFCD4 MOV V0.16B, V9.16B
	0x038BFCD8 MOV V1.16B, V3.16B
	0x038BFCDC MOV V2.16B, V8.16B
	0x038BFCE0 MOV V3.16B, V10.16B
	0x038BFCE4 BL 0x384B280
	0x038BFCE8 BL 0x38BF9C8
	0x038BFCEC LDP V6, V7, [X31 + 0x30]
	0x038BFCF0 MOV X0, X31
	0x038BFCF4 MOV V1.S[1], V0.S[0]
	0x00000000 INVALID
	0x038BFCFC MOV V6.S[1], V2.S[0]
	0x038BFD00 LDR V2, [X31 + 0x12]
	0x00000000 INVALID
	0x038BFD08 FADD V9.2S, V0.2S, V11.2S
	0x038BFD0C LDR V0, [X31 + 0x6]
	0x038BFD10 FMUL S4, S2, S12
	0x038BFD14 LDR V2, [X31 + 0x11]
	0x038BFD18 MOV V7.S[1], V3.S[0]
	0x00000000 INVALID
	0x038BFD20 FADD V10.2S, V3.2S, V11.2S
	0x038BFD24 FMUL S5, S2, S12
	0x038BFD28 LDR V2, [X31 + 0x5]
	0x038BFD2C FADD V8.2S, V1.2S, V11.2S
	0x038BFD30 FMUL S3, S0, S12
	0x038BFD34 MOV V0.16B, V4.16B
	0x038BFD38 FMUL S2, S2, S12
	0x038BFD3C MOV V1.16B, V5.16B
	0x038BFD40 BL 0x384B280
	0x038BFD44 LDP V16, V17, [X31 + 0xD0]
	0x038BFD48 LDR V18, [X31 + 0xF0]
	0x038BFD4C MOVZ W8, 0xCCCD
	0x038BFD50 LDP V21, V6, [X31 + 0x90]
	0x038BFD54 MOV V16.S[1], V2.S[0]
	0x038BFD58 MOV V17.S[1], V3.S[0]
	0x038BFD5C LDP V2, V23, [X31 + 0x70]
	0x00000000 INVALID
	0x00000000 INVALID
	0x038BFD68 MOV V22.16B, V18.16B
	0x038BFD6C LDR V18, [X31 + 0x130]
	0x038BFD70 MOVK W8, 0x3F4C0000
	0x038BFD74 MOV V1.S[1], V0.S[0]
	0x038BFD78 UNIMPLEMENTED
	0x038BFD7C UNIMPLEMENTED
	0x00000000 INVALID
	0x038BFD84 FMOV S7, -1
	0x038BFD88 FADD V4.2S, V4.2S, V5.2S
	0x038BFD8C UNIMPLEMENTED
	0x038BFD90 UNIMPLEMENTED
	0x038BFD94 FADD S7, S21, S7
	0x00000000 INVALID
	0x038BFD9C FADD V16.2S, V16.2S, V15.2S
	0x00000000 INVALID
	0x00000000 INVALID
	0x038BFDA8 UNIMPLEMENTED
	0x038BFDAC MOV V21.S[1], V7.S[0]
	0x038BFDB0 FADD V5.2S, V5.2S, V18.2S
	0x038BFDB4 FADD V17.2S, V17.2S, V15.2S
	0x038BFDB8 FADD V19.2S, V6.2S, V19.2S
	0x038BFDBC FADD V6.2S, V6.2S, V20.2S
	0x00000000 INVALID
	0x00000000 INVALID
	0x038BFDC8 FADD V16.2S, V21.2S, V16.2S
	0x00000000 INVALID
	0x00000000 INVALID
	0x00000000 INVALID
	0x00000000 INVALID
	0x038BFDDC FADD V17.2S, V21.2S, V17.2S
	0x038BFDE0 FADD V4.2S, V4.2S, V19.2S
	0x038BFDE4 FADD V5.2S, V5.2S, V6.2S
	0x00000000 INVALID
	0x00000000 INVALID
	0x038BFDF0 FADD V4.2S, V4.2S, V6.2S
	0x038BFDF4 LDR V17, [X31 + 0xC8]
	0x038BFDF8 LDR V19, [X31 + 0xB0]
	0x038BFDFC LDR V20, [X31 + 0x100]
	0x038BFE00 LDR V21, [X31 + 0x140]
	0x038BFE04 MOV S6, V4.S[1]
	0x038BFE08 FMOV W9, S6
	0x038BFE0C MOVZ W8, 0x7F800000
	0x038BFE10 FADD V5.2S, V5.2S, V16.2S
	0x038BFE14 AND W9, W9, 0x7FFFFFFF
	0x00000000 INVALID
	0x038BFE1C UNIMPLEMENTED
	0x038BFE20 MOV S16, V5.S[1]
	0x038BFE24 CMP W9, W8
	0x00000000 INVALID
	0x00000000 INVALID
	0x00000000 INVALID
	0x00000000 INVALID
	0x00000000 INVALID

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X19, 0xB23000
	008 Move X23, 0x835000
	009 Move W8, [X19+1687]
	010 Move X23, [X23+2512]
	011 Move X20, X2
	012 Move X21, X1
	013 Move X22, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0x835000
	019 Move X0, [X0+2512]
	020 Call 0x1C17CF4
	021 Move X0, 0x88D000
	022 Move X0, [X0+192]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X19+1687], W8
	026 Move X0, [X23]
	027 Move W1, 4
	028 Call 0x1C17D6C
	029 Move X19, X0
	030 Move X0, X22
	031 Move X1, X21
	032 Move X2, X20
	033 Move X3, X31
	034 Call Single.ToString, X0, X1, X2
	035 Compare X19, 0
	036 JumpIfEqual {118}
	037 Move X23, X0
	038 Compare X0, 0
	039 JumpIfEqual {46}
	040 Move X8, [X19]
	041 Move X0, X23
	042 Move X1, [X8+64]
	043 Call 0x1C17E00
	044 Compare X0, 0
	045 JumpIfEqual {115}
	046 Move W8, [X19+24]
	047 Compare W8, 0
	048 JumpIfEqual {114}
	049 Add X0, X22, 4
	050 Move X1, X21
	051 Move X2, X20
	052 Move X3, X31
	053 Move [X19+32], X23
	054 Call Single.ToString, X0, X1, X2
	055 Move X23, X0
	056 Compare X0, 0
	057 JumpIfEqual {64}
	058 Move X8, [X19]
	059 Move X0, X23
	060 Move X1, [X8+64]
	061 Call 0x1C17E00
	062 Compare X0, 0
	063 JumpIfEqual {115}
	064 Move W8, [X19+24]
	065 NotImplemented "Instruction CMP not yet implemented."
	066 Add X0, X22, 8
	067 Move X1, X21
	068 Move X2, X20
	069 Move X3, X31
	070 Move [X19+40], X23
	071 Call Single.ToString, X0, X1, X2
	072 Move X23, X0
	073 Compare X0, 0
	074 JumpIfEqual {81}
	075 Move X8, [X19]
	076 Move X0, X23
	077 Move X1, [X8+64]
	078 Call 0x1C17E00
	079 Compare X0, 0
	080 JumpIfEqual {115}
	081 Move W8, [X19+24]
	082 NotImplemented "Instruction CMP not yet implemented."
	083 Add X0, X22, 12
	084 Move X1, X21
	085 Move X2, X20
	086 Move X3, X31
	087 Move [X19+48], X23
	088 Call Single.ToString, X0, X1, X2
	089 Move X20, X0
	090 Compare X0, 0
	091 JumpIfEqual {98}
	092 Move X8, [X19]
	093 Move X0, X20
	094 Move X1, [X8+64]
	095 Call 0x1C17E00
	096 Compare X0, 0
	097 JumpIfEqual {115}
	098 Move W8, [X19+24]
	099 NotImplemented "Instruction CMP not yet implemented."
	100 Move X8, 0x88D000
	101 Move X8, [X8+192]
	102 Move [X19+56], X20
	103 Move X1, X19
	104 Move X20, [X31+32]
	105 Move X19, [X31+40]
	106 Move X0, [X8]
	107 Move X22, [X31+16]
	108 Move X21, [X31+24]
	109 Move X2, X31
	110 Move X30, [X31+48]
	111 Move X23, [X31+56]
	112 Call String.Format, X0, X1
	113 Return X0
	114 Call 0x1C17F28
	115 Call 0x1C17F44
	116 Move X1, X31
	117 Call 0x1C17DEC
	118 Call 0x1C17F20

Method: System.Void .cctor()

Disassembly:
	0x038BFE3C FADD V1.2S, V1.2S, V15.2S
	0x038BFE40 UNIMPLEMENTED
	0x038BFE44 CSET W9, HI
	0x038BFE48 FCMP S5, S16
	0x038BFE4C FADD V17.2S, V23.2S, V17.2S
	0x038BFE50 FADD V19.2S, V2.2S, V19.2S
	0x038BFE54 FADD V3.2S, V3.2S, V20.2S
	0x038BFE58 FADD V20.2S, V23.2S, V21.2S
	0x038BFE5C FADD V2.2S, V2.2S, V22.2S
	0x00000000 INVALID
	0x038BFE64 CSET W10, MI
	0x038BFE68 CSET W11, GT
	0x038BFE6C FCMP S4, S6
	0x00000000 INVALID
	0x00000000 INVALID
	0x00000000 INVALID
	0x00000000 INVALID
	0x038BFE80 FADD V0.2S, V7.2S, V0.2S
	0x038BFE84 CSET W12, MI
	0x038BFE88 FADD V2.2S, V19.2S, V2.2S

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0xB23000
	005 Move X20, 0x83B000
	006 Move W8, [X19+1688]
	007 Move X20, [X20+1976]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x83B000
	013 Move X0, [X0+1976]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+1688], W8
	017 Move X8, [X20]
	018 Move X9, -48046080
	019 Move V0, [X9+187]
	020 Move X20, [X31+16]
	021 Move X19, [X31+24]
	022 Move X8, [X8+184]
	023 Move [X8], V0
	024 Move X30, [X31+32]
	025 Return 

