Type: Unity.Mathematics.Geometry.Plane

Method: System.Void .ctor(System.Single coefficientA, System.Single coefficientB, System.Single coefficientC, System.Single coefficientD)

Disassembly:
	0x03868410 BL 0x1C16E00
	0x03868414 CBZ X0, 0x3868558
	0x03868418 LDR W8, [X19 + 0x18]
	0x0386841C CMP W8, 0x3
	0x03868420 B.LS 0x3868554
	0x03868424 STR X21, [X19 + 0x38]
	0x03868428 LDRB W8, [X20 + 0x2]
	0x0386842C LDR X0, [X22]
	0x03868430 ADD X1, X31, 0x14
	0x03868434 STRB W8, [X31 + 0x14]
	0x03868438 BL 0x1C16E04
	0x0386843C MOV X21, X0
	0x03868440 CBZ X0, 0x3868458
	0x03868444 LDR X8, [X19]
	0x03868448 MOV X0, X21
	0x0386844C LDR X1, [X8 + 0x40]
	0x03868450 BL 0x1C16E00
	0x03868454 CBZ X0, 0x3868558
	0x03868458 LDR W8, [X19 + 0x18]
	0x0386845C CMP W8, 0x4
	0x03868460 B.LS 0x3868554
	0x03868464 STR X21, [X19 + 0x40]
	0x03868468 LDRB W8, [X20 + 0x6]
	0x0386846C LDR X0, [X22]
	0x03868470 ADD X1, X31, 0x10
	0x03868474 STRB W8, [X31 + 0x10]
	0x03868478 BL 0x1C16E04
	0x0386847C MOV X21, X0
	0x03868480 CBZ X0, 0x3868498
	0x03868484 LDR X8, [X19]
	0x03868488 MOV X0, X21
	0x0386848C LDR X1, [X8 + 0x40]
	0x03868490 BL 0x1C16E00
	0x03868494 CBZ X0, 0x3868558
	0x03868498 LDR W8, [X19 + 0x18]
	0x0386849C CMP W8, 0x5
	0x038684A0 B.LS 0x3868554
	0x038684A4 STR X21, [X19 + 0x48]
	0x038684A8 LDRB W8, [X20 + 0x3]
	0x038684AC LDR X0, [X22]
	0x038684B0 ADD X1, X31, 0xC
	0x038684B4 STRB W8, [X31 + 0xC]

ISIL:
	001 Move [X31-64], D11
	002 Move [X31-56], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0xB7A000
	009 Move W8, [X20+1413]
	010 Move V8, V3
	011 Move V9, V2
	012 Move V10, V1
	013 Move V11, V0
	014 Move X19, X0
	015 Compare W8, 0
	016 JumpIfNotEqual {22}
	017 Move X0, 0x88C000
	018 Move X0, [X0+1448]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X20+1413], W8
	022 Move X8, 0x88C000
	023 Move X8, [X8+1448]
	024 Move X0, [X8]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Multiply S1, S11, S11
	030 Multiply S2, S10, S10
	031 Multiply S0, S9, S9
	032 Add S1, S1, S2
	033 Add S0, S0, S1
	034 Move S2, 1
	035 NotImplemented "Instruction FSQRT not yet implemented."
	036 NotImplemented "Instruction FDIV not yet implemented."
	037 Multiply S1, S0, S11
	038 Multiply S2, S0, S10
	039 Multiply S3, S0, S9
	040 Multiply S0, S0, S8
	041 Move [X19], S1
	042 Move [X19+8], S2
	043 Move [X19+8], S3
	044 Move [X19+16], S0
	045 Move X20, [X31+48]
	046 Move X19, [X31+56]
	047 Move X30, [X31+32]
	048 Move D9, [X31+16]
	049 Move D8, [X31+24]
	050 Move D11, [X31+64]
	051 Move D10, [X31+72]
	052 Return 

Method: System.Void .ctor(Unity.Mathematics.float3 normal, System.Single distance)

Disassembly:
	0x038684B8 BL 0x1C16E04
	0x038684BC MOV X21, X0
	0x038684C0 CBZ X0, 0x38684D8
	0x038684C4 LDR X8, [X19]
	0x038684C8 MOV X0, X21
	0x038684CC LDR X1, [X8 + 0x40]
	0x038684D0 BL 0x1C16E00
	0x038684D4 CBZ X0, 0x3868558
	0x038684D8 LDR W8, [X19 + 0x18]
	0x038684DC CMP W8, 0x6
	0x038684E0 B.LS 0x3868554
	0x038684E4 STR X21, [X19 + 0x50]
	0x038684E8 LDRB W8, [X20 + 0x7]
	0x038684EC LDR X0, [X22]
	0x038684F0 ADD X1, X31, 0x8
	0x038684F4 STRB W8, [X31 + 0x8]
	0x038684F8 BL 0x1C16E04
	0x038684FC MOV X20, X0
	0x03868500 CBZ X0, 0x3868518
	0x03868504 LDR X8, [X19]
	0x03868508 MOV X0, X20
	0x0386850C LDR X1, [X8 + 0x40]
	0x03868510 BL 0x1C16E00
	0x03868514 CBZ X0, 0x3868558
	0x03868518 LDR W8, [X19 + 0x18]
	0x0386851C CMP W8, 0x7
	0x03868520 B.LS 0x3868554
	0x03868524 ADRP X8, 0x8E2000
	0x03868528 LDR X8, [X8 + 0xE38]
	0x0386852C STR X20, [X19 + 0x58]
	0x03868530 MOV X1, X19
	0x03868534 MOV X2, X31
	0x03868538 LDR X0, [X8]
	0x0386853C BL 0x3227C5C
	0x03868540 LDP X20, X19, [X31 + 0x40]
	0x03868544 LDP X22, X21, [X31 + 0x30]
	0x03868548 LDR X30, [X31 + 0x20]
	0x0386854C ADD X31, X31, 0x50
	0x03868550 RET
	0x03868554 BL 0x1C16F28
	0x03868558 BL 0x1C16F44
	0x0386855C MOV X1, X31

ISIL:
	001 Move [X31-64], D11
	002 Move [X31-56], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0xB7A000
	009 Move W8, [X20+1413]
	010 Move V8, V3
	011 Move V9, V2
	012 Move V10, V1
	013 Move V11, V0
	014 Move X19, X0
	015 Compare W8, 0
	016 JumpIfNotEqual {22}
	017 Move X0, 0x88C000
	018 Move X0, [X0+1448]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X20+1413], W8
	022 Move X8, 0x88C000
	023 Move X8, [X8+1448]
	024 Move X0, [X8]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Multiply S1, S11, S11
	030 Multiply S2, S10, S10
	031 Multiply S0, S9, S9
	032 Add S1, S1, S2
	033 Add S0, S0, S1
	034 Move S2, 1
	035 NotImplemented "Instruction FSQRT not yet implemented."
	036 NotImplemented "Instruction FDIV not yet implemented."
	037 Multiply S1, S11, S0
	038 Multiply S2, S10, S0
	039 Multiply S3, S9, S0
	040 Multiply S0, S0, S8
	041 Move [X19], S1
	042 Move [X19+8], S2
	043 Move [X19+8], S3
	044 Move [X19+16], S0
	045 Move X20, [X31+48]
	046 Move X19, [X31+56]
	047 Move X30, [X31+32]
	048 Move D9, [X31+16]
	049 Move D8, [X31+24]
	050 Move D11, [X31+64]
	051 Move D10, [X31+72]
	052 Return 

Method: System.Void .ctor(Unity.Mathematics.float3 normal, Unity.Mathematics.float3 pointInPlane)

Disassembly:
	0x03868560 BL 0x1C16DEC
	0x03868564 BL 0x1C16F20
	0x03868568 STP W1, W2, [X0]
	0x0386856C STR W3, [X0 + 0x8]
	0x03868570 RET
	0x03868574 LDRB W12, [X31 + 0x10]
	0x03868578 LDRB W11, [X31 + 0x18]
	0x0386857C LDRB W10, [X31]
	0x03868580 MOVZ W13, 0x1000000
	0x03868584 ANDS W31, W12, 0x1
	0x03868588 MOVZ W14, 0x10000
	0x0386858C CSEL W12, W13, W31, NE
	0x03868590 ANDS W31, W7, 0x1
	0x03868594 LDRB W9, [X31 + 0x20]
	0x03868598 MOVZ W15, 0x100
	0x0386859C CSEL W16, W14, W31, NE
	0x038685A0 ANDS W31, W4, 0x1
	0x038685A4 LDRB W8, [X31 + 0x8]
	0x038685A8 CSEL W17, W15, W31, NE
	0x038685AC ANDS W31, W11, 0x1
	0x038685B0 BFM W17, W1, 0x0, 0x0
	0x038685B4 CSEL W11, W13, W31, NE
	0x038685B8 ANDS W31, W10, 0x1
	0x038685BC ORR W10, W17, W16, 0x0
	0x038685C0 CSEL W16, W14, W31, NE
	0x038685C4 ANDS W31, W5, 0x1
	0x038685C8 ORR W10, W10, W12, 0x0
	0x038685CC CSEL W12, W15, W31, NE
	0x038685D0 ANDS W31, W9, 0x1
	0x038685D4 BFM W12, W2, 0x0, 0x0
	0x038685D8 CSEL W9, W13, W31, NE
	0x038685DC ANDS W31, W8, 0x1
	0x038685E0 ORR W8, W12, W16, 0x0
	0x038685E4 CSEL W12, W14, W31, NE
	0x038685E8 ANDS W31, W6, 0x1
	0x038685EC ORR W8, W8, W11, 0x0
	0x038685F0 CSEL W11, W15, W31, NE
	0x038685F4 BFM W11, W3, 0x0, 0x0
	0x038685F8 STP W10, W8, [X0]
	0x038685FC ORR W8, W11, W12, 0x0
	0x03868600 ORR W8, W8, W9, 0x0
	0x03868604 STR W8, [X0 + 0x8]
	0x03868608 RET
	0x0386860C ANDS W31, W1, 0x1
	0x03868610 ORR W8, W31, 0x1010101
	0x03868614 CSEL W8, W8, W31, NE
	0x03868618 STP W8, W8, [X0]
	0x0386861C STR W8, [X0 + 0x8]
	0x03868620 RET
	0x03868624 ANDS W31, W0, 0x1
	0x03868628 ORR W8, W31, 0x1010101
	0x0386862C CSEL X1, X8, X31, NE

ISIL:
	001 Move [X31-80], D13
	002 Move [X31-72], D12
	003 Move [X31+16], D11
	004 Move [X31+24], D10
	005 Move [X31+32], D9
	006 Move [X31+40], D8
	007 Move [X31+48], X30
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X20, 0xB7A000
	011 Move W8, [X20+1413]
	012 Move V12, V5
	013 Move V11, V4
	014 Move V13, V3
	015 Move V8, V2
	016 Move V9, V1
	017 Move V10, V0
	018 Move X19, X0
	019 Compare W8, 0
	020 JumpIfNotEqual {26}
	021 Move X0, 0x88C000
	022 Move X0, [X0+1448]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X20+1413], W8
	026 Move X8, 0x88C000
	027 Move X8, [X8+1448]
	028 Move X0, [X8]
	029 Move W8, [X0+224]
	030 Compare W8, 0
	031 JumpIfNotEqual {33}
	032 Call 0x1C17DFC
	033 Multiply S1, S10, S13
	034 Multiply S2, S9, S11
	035 Multiply S3, S10, S10
	036 Add S1, S1, S2
	037 Multiply S2, S9, S9
	038 Add S2, S3, S2
	039 Multiply S3, S8, S8
	040 Multiply S0, S8, S12
	041 Add S2, S3, S2
	042 Add S0, S0, S1
	043 Move S1, 1
	044 NotImplemented "Instruction FSQRT not yet implemented."
	045 NotImplemented "Instruction FNEG not yet implemented."
	046 NotImplemented "Instruction FDIV not yet implemented."
	047 Multiply S2, S10, S1
	048 Multiply S3, S9, S1
	049 Multiply S4, S8, S1
	050 Multiply S0, S1, S0
	051 Move [X19], S2
	052 Move [X19+8], S3
	053 Move [X19+8], S4
	054 Move [X19+16], S0
	055 Move X20, [X31+64]
	056 Move X19, [X31+72]
	057 Move X30, [X31+48]
	058 Move D9, [X31+32]
	059 Move D8, [X31+40]
	060 Move D11, [X31+16]
	061 Move D10, [X31+24]
	062 Move D13, [X31+80]
	063 Move D12, [X31+88]
	064 Return 

Method: System.Void .ctor(Unity.Mathematics.float3 vector1InPlane, Unity.Mathematics.float3 vector2InPlane, Unity.Mathematics.float3 pointInPlane)

Disassembly:
	0x03868630 MOV X0, X1
	0x03868634 RET
	0x03868638 EON X8, X2, X0, 0x0
	0x0386863C EON W9, W3, W1, 0x0
	0x03868640 ORR W10, W31, 0x1010101
	0x03868644 AND X1, X9, X10, 0x0
	0x03868648 AND X0, X8, 0x101010101010101
	0x0386864C RET
	0x03868650 AND W8, W0, 0x1
	0x03868654 AND W9, W2, 0x1
	0x03868658 UBFM W12, W0, 0x18, 0x18
	0x0386865C UBFM X13, X0, 0x20, 0x20
	0x03868660 UBFM X16, X0, 0x38, 0x38
	0x03868664 UBFM W10, W0, 0x8, 0x8
	0x03868668 UBFM W11, W0, 0x10, 0x10
	0x0386866C UBFM X14, X0, 0x28, 0x28
	0x03868670 UBFM X15, X0, 0x30, 0x30
	0x03868674 AND W17, W1, 0x1
	0x03868678 UBFM W0, W1, 0x8, 0x8
	0x0386867C UBFM W2, W1, 0x10, 0x10
	0x03868680 UBFM W1, W1, 0x18, 0x18
	0x03868684 EOR W12, W12, W9, 0x0
	0x03868688 EOR W8, W8, W9, 0x0
	0x0386868C EOR W16, W16, W9, 0x0
	0x03868690 EOR W13, W13, W9, 0x0
	0x03868694 EOR W11, W11, W9, 0x0
	0x03868698 EOR W10, W10, W9, 0x0
	0x0386869C EOR W15, W15, W9, 0x0
	0x038686A0 EOR W14, W14, W9, 0x0
	0x038686A4 EOR W1, W1, W9, 0x0
	0x038686A8 EOR W2, W2, W9, 0x0
	0x038686AC EOR W0, W0, W9, 0x0
	0x038686B0 EOR W9, W17, W9, 0x0
	0x038686B4 BFM W8, W12, 0x8, 0x0
	0x038686B8 BFM W13, W16, 0x8, 0x0
	0x038686BC BFM W9, W1, 0x8, 0x0
	0x038686C0 BFM W8, W11, 0x10, 0x0
	0x038686C4 BFM W13, W15, 0x10, 0x0
	0x038686C8 BFM W9, W2, 0x10, 0x0
	0x038686CC BFM W8, W10, 0x18, 0x0
	0x038686D0 BFM W13, W14, 0x18, 0x0
	0x038686D4 BFM W9, W0, 0x18, 0x0
	0x038686D8 EOR W0, W8, 0x1010101
	0x038686DC EOR W8, W13, 0x1010101
	0x038686E0 EOR W1, W9, 0x1010101
	0x038686E4 BFM X0, X8, 0x20, 0x1F
	0x038686E8 RET
	0x038686EC AND W8, W0, 0x1
	0x038686F0 AND W9, W1, 0x1
	0x038686F4 UBFM W12, W1, 0x18, 0x18
	0x038686F8 UBFM X13, X1, 0x20, 0x20
	0x038686FC UBFM X16, X1, 0x38, 0x38
	0x03868700 UBFM W10, W1, 0x8, 0x8
	0x03868704 UBFM W11, W1, 0x10, 0x10
	0x03868708 UBFM X14, X1, 0x28, 0x28
	0x0386870C UBFM X15, X1, 0x30, 0x30
	0x03868710 AND W17, W2, 0x1
	0x03868714 UBFM W0, W2, 0x8, 0x8
	0x03868718 UBFM W1, W2, 0x10, 0x10
	0x0386871C UBFM W2, W2, 0x18, 0x18
	0x03868720 EOR W12, W12, W8, 0x0

ISIL:
	001 Move [X31-96], D15
	002 Move [X31-88], D14
	003 Move [X31+16], D13
	004 Move [X31+24], D12
	005 Move [X31+32], D11
	006 Move [X31+40], D10
	007 Move [X31+48], D9
	008 Move [X31+56], D8
	009 Move [X31+64], X30
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X20, 0xB7A000
	013 Move W8, [X20+1413]
	014 Move X19, X0
	015 Multiply S6, S0, S4
	016 Multiply S9, S1, S5
	017 Multiply S10, S2, S3
	018 Multiply S8, S1, S3
	019 Multiply S12, S2, S4
	020 Multiply S13, S0, S5
	021 Compare W8, 0
	022 JumpIfNotEqual {30}
	023 Move X0, 0x88C000
	024 Move X0, [X0+1448]
	025 Move V11, V6
	026 Call 0x1C17CF4
	027 Move V6, V11
	028 Move W8, 1
	029 Move [X20+1413], W8
	030 Move X8, 0x88C000
	031 Move X8, [X8+1448]
	032 Move S14, [X31+100]
	033 Move S15, [X31+104]
	034 Move V11, [X31+96]
	035 Subtract S8, S6, S8
	036 Move X0, [X8]
	037 Subtract S9, S9, S12
	038 Subtract S10, S10, S13
	039 Move W8, [X0+224]
	040 Compare W8, 0
	041 JumpIfNotEqual {43}
	042 Call 0x1C17DFC
	043 Multiply S1, S11, S9
	044 Multiply S2, S14, S10
	045 Multiply S3, S9, S9
	046 Add S1, S1, S2
	047 Multiply S2, S10, S10
	048 Add S2, S3, S2
	049 Multiply S3, S8, S8
	050 Multiply S0, S15, S8
	051 Add S2, S3, S2
	052 Add S0, S0, S1
	053 Move S1, 1
	054 NotImplemented "Instruction FSQRT not yet implemented."
	055 NotImplemented "Instruction FNEG not yet implemented."
	056 NotImplemented "Instruction FDIV not yet implemented."
	057 Multiply S2, S9, S1
	058 Multiply S3, S10, S1
	059 Multiply S4, S8, S1
	060 Multiply S0, S1, S0
	061 Move [X19], S2
	062 Move [X19+8], S3
	063 Move [X19+8], S4
	064 Move [X19+16], S0
	065 Move X20, [X31+80]
	066 Move X19, [X31+88]
	067 Move X30, [X31+64]
	068 Move D9, [X31+48]
	069 Move D8, [X31+56]
	070 Move D11, [X31+32]
	071 Move D10, [X31+40]
	072 Move D13, [X31+16]
	073 Move D12, [X31+24]
	074 Move D15, [X31+96]
	075 Move D14, [X31+104]
	076 Return 

Method: Unity.Mathematics.Geometry.Plane CreateFromUnitNormalAndDistance(Unity.Mathematics.float3 unitNormal, System.Single distance)

Disassembly:
	0x03868724 EOR W9, W9, W8, 0x0

ISIL:
	001 Return X0

Method: Unity.Mathematics.Geometry.Plane CreateFromUnitNormalAndPointInPlane(Unity.Mathematics.float3 unitNormal, Unity.Mathematics.float3 pointInPlane)

Disassembly:
	0x03868728 EOR W16, W16, W8, 0x0
	0x0386872C EOR W13, W13, W8, 0x0
	0x03868730 EOR W11, W11, W8, 0x0
	0x03868734 EOR W10, W10, W8, 0x0
	0x03868738 EOR W15, W15, W8, 0x0
	0x0386873C EOR W14, W14, W8, 0x0
	0x03868740 EOR W2, W2, W8, 0x0

ISIL:
	001 Multiply S3, S0, S3
	002 Multiply S4, S1, S4
	003 Add S3, S3, S4
	004 Multiply S4, S2, S5
	005 Add S3, S4, S3
	006 NotImplemented "Instruction FNEG not yet implemented."
	007 Return X0

Method: Unity.Mathematics.float3 get_Normal()

Disassembly:
	0x03868744 EOR W1, W1, W8, 0x0
	0x03868748 EOR W0, W0, W8, 0x0
	0x0386874C EOR W8, W17, W8, 0x0

ISIL:
	001 Move S0, [X0]
	002 Move S1, [X0+4]
	003 Move V2, [X0+8]
	004 Return X0

Method: System.Void set_Normal(Unity.Mathematics.float3 value)

Disassembly:
	0x03868750 BFM W9, W12, 0x8, 0x0
	0x03868754 BFM W13, W16, 0x8, 0x0
	0x03868758 BFM W8, W2, 0x8, 0x0

ISIL:
	001 Move [X0], S0
	002 Move [X0+8], S1
	003 Move [X0+8], S2
	004 Return 

Method: System.Single get_Distance()

Disassembly:
	0x0386875C BFM W9, W11, 0x10, 0x0
	0x03868760 BFM W13, W15, 0x10, 0x0

ISIL:
	001 Move V0, [X0+12]
	002 Return V0

Method: System.Void set_Distance(System.Single value)

Disassembly:
	0x03868764 BFM W8, W1, 0x10, 0x0
	0x03868768 BFM W9, W10, 0x18, 0x0

ISIL:
	001 Move [X0+12], S0
	002 Return 

Method: Unity.Mathematics.Geometry.Plane Normalize(Unity.Mathematics.Geometry.Plane plane)

Disassembly:
	0x0386876C BFM W13, W14, 0x18, 0x0
	0x03868770 BFM W8, W0, 0x18, 0x0
	0x03868774 EOR W0, W9, 0x1010101
	0x03868778 EOR W9, W13, 0x1010101
	0x0386877C EOR W1, W8, 0x1010101
	0x03868780 BFM X0, X9, 0x20, 0x1F
	0x03868784 RET
	0x03868788 EOR X8, X2, X0, 0x0
	0x0386878C EOR W9, W3, W1, 0x0
	0x03868790 ORR W10, W31, 0x1010101
	0x03868794 AND X1, X9, X10, 0x0
	0x03868798 AND X0, X8, 0x101010101010101
	0x0386879C RET
	0x038687A0 AND W8, W0, 0x1
	0x038687A4 AND W9, W2, 0x1
	0x038687A8 UBFM W10, W0, 0x8, 0x8
	0x038687AC UBFM W11, W0, 0x10, 0x10
	0x038687B0 UBFM W12, W0, 0x18, 0x18
	0x038687B4 UBFM X13, X0, 0x20, 0x20
	0x038687B8 UBFM X14, X0, 0x28, 0x28
	0x038687BC UBFM X15, X0, 0x30, 0x30
	0x038687C0 UBFM X16, X0, 0x38, 0x38
	0x038687C4 AND W17, W1, 0x1
	0x038687C8 UBFM W3, W1, 0x10, 0x10
	0x038687CC EOR W0, W8, W9, 0x0
	0x038687D0 EOR W8, W10, W9, 0x0
	0x038687D4 EOR W10, W11, W9, 0x0
	0x038687D8 EOR W11, W12, W9, 0x0
	0x038687DC EOR W12, W13, W9, 0x0
	0x038687E0 EOR W13, W14, W9, 0x0
	0x038687E4 EOR W14, W15, W9, 0x0
	0x038687E8 UBFM W2, W1, 0x8, 0x8
	0x038687EC UBFM W4, W1, 0x18, 0x18
	0x038687F0 EOR W15, W16, W9, 0x0
	0x038687F4 EOR W1, W17, W9, 0x0
	0x038687F8 EOR W17, W3, W9, 0x0
	0x038687FC BFM W0, W10, 0x10, 0x0

ISIL:
	001 Move [X31-48], D11
	002 Move [X31-40], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+40], X19
	007 Move X19, 0xB7A000
	008 Move W8, [X19+1413]
	009 Move V8, V3
	010 Move V9, V2
	011 Move V10, V1
	012 Move V11, V0
	013 Compare W8, 0
	014 JumpIfNotEqual {20}
	015 Move X0, 0x88C000
	016 Move X0, [X0+1448]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X19+1413], W8
	020 Move X8, 0x88C000
	021 Move X8, [X8+1448]
	022 Move X0, [X8]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Multiply S1, S11, S11
	028 Multiply S2, S10, S10
	029 Multiply S0, S9, S9
	030 Add S1, S1, S2
	031 Add S0, S0, S1
	032 Move S2, 1
	033 NotImplemented "Instruction FSQRT not yet implemented."
	034 NotImplemented "Instruction FDIV not yet implemented."
	035 Multiply S0, S11, S3
	036 Multiply S1, S10, S3
	037 Multiply S2, S9, S3
	038 Multiply S3, S8, S3
	039 Move X30, [X31+32]
	040 Move X19, [X31+40]
	041 Move D9, [X31+16]
	042 Move D8, [X31+24]
	043 Move D11, [X31+48]
	044 Move D10, [X31+56]
	045 Return X0

Method: Unity.Mathematics.float4 Normalize(Unity.Mathematics.float4 planeCoefficients)

Disassembly:
	0x03868800 BFM W12, W14, 0x10, 0x0
	0x03868804 EOR W16, W2, W9, 0x0
	0x03868808 EOR W9, W4, W9, 0x0
	0x0386880C BFM W1, W17, 0x10, 0x0
	0x03868810 BFM W0, W11, 0x8, 0x0
	0x03868814 BFM W12, W15, 0x8, 0x0
	0x03868818 BFM W1, W9, 0x8, 0x0
	0x0386881C BFM W0, W8, 0x18, 0x0
	0x03868820 BFM W12, W13, 0x18, 0x0
	0x03868824 BFM W1, W16, 0x18, 0x0
	0x03868828 BFM X0, X12, 0x20, 0x1F
	0x0386882C RET
	0x03868830 AND W8, W0, 0x1
	0x03868834 AND W9, W1, 0x1
	0x03868838 UBFM W10, W1, 0x8, 0x8
	0x0386883C UBFM W11, W1, 0x10, 0x10
	0x03868840 UBFM W12, W1, 0x18, 0x18
	0x03868844 UBFM X13, X1, 0x20, 0x20
	0x03868848 UBFM X14, X1, 0x28, 0x28
	0x0386884C UBFM X15, X1, 0x30, 0x30
	0x03868850 UBFM X16, X1, 0x38, 0x38
	0x03868854 AND W17, W2, 0x1
	0x03868858 UBFM W4, W2, 0x10, 0x10
	0x0386885C EOR W0, W9, W8, 0x0
	0x03868860 EOR W9, W10, W8, 0x0
	0x03868864 EOR W10, W11, W8, 0x0
	0x03868868 EOR W11, W12, W8, 0x0
	0x0386886C EOR W12, W13, W8, 0x0
	0x03868870 EOR W13, W14, W8, 0x0
	0x03868874 EOR W14, W15, W8, 0x0
	0x03868878 UBFM W3, W2, 0x8, 0x8
	0x0386887C UBFM W2, W2, 0x18, 0x18
	0x03868880 EOR W15, W16, W8, 0x0
	0x03868884 EOR W1, W17, W8, 0x0
	0x03868888 EOR W17, W4, W8, 0x0
	0x0386888C BFM W0, W10, 0x10, 0x0
	0x03868890 BFM W12, W14, 0x10, 0x0

ISIL:
	001 Move [X31-48], D11
	002 Move [X31-40], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+40], X19
	007 Move X19, 0xB7A000
	008 Move W8, [X19+1413]
	009 Move V8, V3
	010 Move V9, V2
	011 Move V10, V1
	012 Move V11, V0
	013 Compare W8, 0
	014 JumpIfNotEqual {20}
	015 Move X0, 0x88C000
	016 Move X0, [X0+1448]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X19+1413], W8
	020 Move X8, 0x88C000
	021 Move X8, [X8+1448]
	022 Move X0, [X8]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Multiply S1, S11, S11
	028 Multiply S2, S10, S10
	029 Multiply S0, S9, S9
	030 Add S1, S1, S2
	031 Add S0, S0, S1
	032 Move S2, 1
	033 NotImplemented "Instruction FSQRT not yet implemented."
	034 NotImplemented "Instruction FDIV not yet implemented."
	035 Multiply S0, S11, S3
	036 Multiply S1, S10, S3
	037 Multiply S2, S9, S3
	038 Multiply S3, S8, S3
	039 Move X30, [X31+32]
	040 Move X19, [X31+40]
	041 Move D9, [X31+16]
	042 Move D8, [X31+24]
	043 Move D11, [X31+48]
	044 Move D10, [X31+56]
	045 Return X0

Method: System.Single SignedDistanceToPoint(Unity.Mathematics.float3 point)

Disassembly:
	0x03868894 EOR W16, W3, W8, 0x0
	0x03868898 EOR W8, W2, W8, 0x0
	0x0386889C BFM W1, W17, 0x10, 0x0
	0x038688A0 BFM W0, W11, 0x8, 0x0
	0x038688A4 BFM W12, W15, 0x8, 0x0
	0x038688A8 BFM W1, W8, 0x8, 0x0
	0x038688AC BFM W0, W9, 0x18, 0x0
	0x038688B0 BFM W12, W13, 0x18, 0x0
	0x038688B4 BFM W1, W16, 0x18, 0x0

ISIL:
	001 Move S3, [X0]
	002 Move S4, [X0+4]
	003 Move S5, [X0+8]
	004 Move S6, [X0+12]
	005 Multiply S0, S0, S3
	006 Multiply S1, S1, S4
	007 Add S0, S0, S1
	008 Multiply S1, S2, S5
	009 Add S0, S1, S0
	010 Add S0, S6, S0
	011 Return V0

Method: Unity.Mathematics.float3 Projection(Unity.Mathematics.float3 point)

Disassembly:
	0x038688B8 BFM X0, X12, 0x20, 0x1F
	0x038688BC RET
	0x038688C0 ORN W8, W31, W1, 0x0
	0x038688C4 ORN X9, X31, X0, 0x0
	0x038688C8 ORR W10, W31, 0x1010101
	0x038688CC AND X1, X8, X10, 0x0
	0x038688D0 AND X0, X9, 0x101010101010101
	0x038688D4 RET
	0x038688D8 AND W8, W1, W3, 0x0
	0x038688DC ORR W9, W31, 0x1010101
	0x038688E0 AND X10, X0, X2, 0x0
	0x038688E4 AND X1, X8, X9, 0x0
	0x038688E8 AND X0, X10, 0x101010101010101
	0x038688EC RET
	0x038688F0 UBFM X9, X0, 0x20, 0x3F

ISIL:
	001 Move S3, [X0]
	002 Move S4, [X0+4]
	003 Move S5, [X0+8]
	004 Move S6, [X0+12]
	005 Multiply S7, S0, S3
	006 Multiply S16, S1, S4
	007 Add S7, S7, S16
	008 Multiply S16, S2, S5
	009 Add S7, S16, S7
	010 Add S6, S6, S7
	011 Multiply S3, S3, S6
	012 Multiply S4, S4, S6
	013 Multiply S5, S5, S6
	014 Subtract S0, S0, S3
	015 Subtract S1, S1, S4
	016 Subtract S2, S2, S5
	017 Return X0

Method: Unity.Mathematics.Geometry.Plane get_Flipped()

Disassembly:
	0x038688F4 AND W10, W2, 0x1
	0x038688F8 UBFM X12, X0, 0x30, 0x3F
	0x038688FC UBFM X13, X0, 0x38, 0x3F
	0x03868900 AND W8, W10, W0, 0x0
	0x03868904 AND W15, W10, W0, 0x10
	0x03868908 AND W17, W9, W10, 0x0
	0x0386890C AND W12, W12, W10, 0x0

ISIL:
	001 Move S0, [X0]
	002 Move S1, [X0+4]
	003 Move S2, [X0+8]
	004 Move S3, [X0+12]
	005 NotImplemented "Instruction FNEG not yet implemented."
	006 NotImplemented "Instruction FNEG not yet implemented."
	007 NotImplemented "Instruction FNEG not yet implemented."
	008 NotImplemented "Instruction FNEG not yet implemented."
	009 Return X0

Method: Unity.Mathematics.float4 op_Implicit(Unity.Mathematics.Geometry.Plane plane)

Disassembly:
	0x03868910 UBFM X11, X0, 0x28, 0x3F

ISIL:
	001 Return X0

Method: System.Void CheckPlaneIsNormalized()

Disassembly:
	0x03868914 AND W16, W10, W0, 0x18
	0x03868918 AND W13, W13, W10, 0x0
	0x0386891C AND W9, W10, W1, 0x0
	0x03868920 AND W2, W10, W1, 0x10
	0x03868924 BFM W8, W15, 0x10, 0x0
	0x03868928 BFM W17, W12, 0x10, 0x0
	0x0386892C AND W14, W10, W0, 0x8
	0x03868930 AND W11, W11, W10, 0x0
	0x03868934 AND W0, W10, W1, 0x8
	0x03868938 AND W10, W10, W1, 0x18
	0x0386893C BFM W9, W2, 0x10, 0x0
	0x03868940 BFM W8, W16, 0x8, 0x0
	0x03868944 BFM W17, W13, 0x8, 0x0
	0x03868948 BFM W9, W10, 0x8, 0x0
	0x0386894C BFM W8, W14, 0x18, 0x0
	0x03868950 BFM W17, W11, 0x18, 0x0
	0x03868954 BFM W9, W0, 0x18, 0x0
	0x03868958 BFM X8, X17, 0x20, 0x1F
	0x0386895C MOV X0, X8
	0x03868960 MOV X1, X9
	0x03868964 RET
	0x03868968 UBFM X8, X1, 0x20, 0x3F
	0x0386896C AND W9, W0, 0x1
	0x03868970 UBFM X11, X1, 0x30, 0x3F
	0x03868974 UBFM X12, X1, 0x38, 0x3F
	0x03868978 AND W0, W1, W9, 0x0
	0x0386897C AND W14, W9, W1, 0x10
	0x03868980 AND W8, W8, W9, 0x0
	0x03868984 AND W11, W11, W9, 0x0
	0x03868988 UBFM X10, X1, 0x28, 0x3F
	0x0386898C AND W13, W9, W1, 0x8
	0x03868990 AND W15, W9, W1, 0x18
	0x03868994 AND W12, W12, W9, 0x0
	0x03868998 AND W1, W2, W9, 0x0
	0x0386899C AND W17, W9, W2, 0x10
	0x038689A0 BFM W0, W14, 0x10, 0x0
	0x038689A4 BFM W8, W11, 0x10, 0x0
	0x038689A8 AND W10, W10, W9, 0x0
	0x038689AC AND W16, W9, W2, 0x8
	0x038689B0 AND W9, W9, W2, 0x18
	0x038689B4 BFM W1, W17, 0x10, 0x0
	0x038689B8 BFM W0, W15, 0x8, 0x0
	0x038689BC BFM W8, W12, 0x8, 0x0
	0x038689C0 BFM W1, W9, 0x8, 0x0
	0x038689C4 BFM W0, W13, 0x18, 0x0
	0x038689C8 BFM W8, W10, 0x18, 0x0
	0x038689CC BFM W1, W16, 0x18, 0x0
	0x038689D0 BFM X0, X8, 0x20, 0x1F
	0x038689D4 RET
	0x038689D8 ORR X8, X2, X0, 0x0
	0x038689DC ORR W9, W3, W1, 0x0
	0x038689E0 ORR W10, W31, 0x1010101
	0x038689E4 AND X1, X9, X10, 0x0
	0x038689E8 AND X0, X8, 0x101010101010101
	0x038689EC RET
	0x038689F0 ORR W9, W0, W2, 0x0
	0x038689F4 ORR W11, W2, W0, 0x10
	0x038689F8 UBFM X8, X0, 0x20, 0x3F
	0x038689FC ORR W10, W2, W0, 0x8
	0x03868A00 ORR W12, W2, W0, 0x18
	0x03868A04 UBFM X13, X0, 0x28, 0x3F
	0x03868A08 UBFM X14, X0, 0x30, 0x3F
	0x03868A0C UBFM X15, X0, 0x38, 0x3F
	0x03868A10 ORR W16, W1, W2, 0x0
	0x03868A14 ORR W0, W2, W1, 0x10
	0x03868A18 AND W11, W11, 0x1
	0x03868A1C AND W9, W9, 0x1
	0x03868A20 ORR W17, W2, W1, 0x8
	0x03868A24 ORR W3, W2, W1, 0x18
	0x03868A28 BFM W9, W11, 0x10, 0x0
	0x03868A2C AND W11, W0, 0x1
	0x03868A30 AND W1, W16, 0x1
	0x03868A34 ORR W8, W8, W2, 0x0
	0x03868A38 ORR W14, W14, W2, 0x0
	0x03868A3C BFM W1, W11, 0x10, 0x0
	0x03868A40 AND W11, W12, 0x1
	0x03868A44 ORR W15, W15, W2, 0x0
	0x03868A48 BFM W9, W11, 0x8, 0x0
	0x03868A4C AND W11, W14, 0x1
	0x03868A50 AND W8, W8, 0x1
	0x03868A54 ORR W13, W13, W2, 0x0
	0x03868A58 BFM W8, W11, 0x10, 0x0
	0x03868A5C AND W14, W15, 0x1
	0x03868A60 AND W10, W10, 0x1
	0x03868A64 AND W12, W3, 0x1
	0x03868A68 AND W13, W13, 0x1
	0x03868A6C BFM W8, W14, 0x8, 0x0
	0x03868A70 AND W11, W17, 0x1
	0x03868A74 BFM W1, W12, 0x8, 0x0
	0x03868A78 BFM W9, W10, 0x18, 0x0
	0x03868A7C BFM W8, W13, 0x18, 0x0
	0x03868A80 BFM W1, W11, 0x18, 0x0
	0x03868A84 ORR X0, X9, X8, 0x20
	0x03868A88 RET
	0x03868A8C ORR W9, W1, W0, 0x0
	0x03868A90 ORR W11, W0, W1, 0x10
	0x03868A94 UBFM X8, X1, 0x20, 0x3F
	0x03868A98 ORR W10, W0, W1, 0x8
	0x03868A9C ORR W12, W0, W1, 0x18
	0x03868AA0 UBFM X13, X1, 0x28, 0x3F
	0x03868AA4 UBFM X14, X1, 0x30, 0x3F
	0x03868AA8 UBFM X15, X1, 0x38, 0x3F
	0x03868AAC ORR W16, W2, W0, 0x0
	0x03868AB0 ORR W1, W0, W2, 0x10
	0x03868AB4 AND W11, W11, 0x1
	0x03868AB8 AND W9, W9, 0x1
	0x03868ABC BFM W9, W11, 0x10, 0x0
	0x03868AC0 AND W11, W1, 0x1
	0x03868AC4 AND W1, W16, 0x1
	0x03868AC8 ORR W8, W8, W0, 0x0
	0x03868ACC ORR W14, W14, W0, 0x0
	0x03868AD0 BFM W1, W11, 0x10, 0x0
	0x03868AD4 AND W11, W12, 0x1
	0x03868AD8 ORR W15, W15, W0, 0x0
	0x03868ADC BFM W9, W11, 0x8, 0x0
	0x03868AE0 AND W11, W14, 0x1
	0x03868AE4 AND W8, W8, 0x1
	0x03868AE8 ORR W17, W0, W2, 0x8
	0x03868AEC ORR W2, W0, W2, 0x18
	0x03868AF0 ORR W13, W13, W0, 0x0
	0x03868AF4 BFM W8, W11, 0x10, 0x0
	0x03868AF8 AND W14, W15, 0x1
	0x03868AFC AND W10, W10, 0x1
	0x03868B00 AND W12, W2, 0x1
	0x03868B04 AND W13, W13, 0x1
	0x03868B08 BFM W8, W14, 0x8, 0x0
	0x03868B0C AND W11, W17, 0x1
	0x03868B10 BFM W1, W12, 0x8, 0x0
	0x03868B14 BFM W9, W10, 0x18, 0x0
	0x03868B18 BFM W8, W13, 0x18, 0x0
	0x03868B1C BFM W1, W11, 0x18, 0x0
	0x03868B20 ORR X0, X9, X8, 0x20
	0x03868B24 RET
	0x03868B28 EOR X8, X2, X0, 0x0
	0x03868B2C EOR W9, W3, W1, 0x0
	0x03868B30 ORR W10, W31, 0x1010101
	0x03868B34 AND X1, X9, X10, 0x0

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move S0, [X0]
	004 Move S1, [X0+4]
	005 Move V2, [X0+8]
	006 Move X8, -47702016
	007 Move V3, [X8+4048]
	008 Multiply S0, S0, S0
	009 Multiply S1, S1, S1
	010 Add S0, S0, S1
	011 Multiply S1, S2, S2
	012 Add S0, S1, S0
	013 NotImplemented "Instruction FCMP not yet implemented."
	014 Move X8, -47697920
	015 Move V1, [X8+1104]
	016 NotImplemented "Instruction FCMP not yet implemented."
	017 Move X30, [X31+16]
	018 Move X19, [X31+24]
	019 Return 
	020 Move X0, 0x894000
	021 Move X0, [X0+1400]
	022 Call 0x1C17D08
	023 Call 0x1C17F10
	024 Move X19, X0
	025 Move X0, 0x8E3000
	026 Move X0, [X0+3616]
	027 Call 0x1C17D08
	028 Move X1, X0
	029 Move X0, X19
	030 Move X2, X31
	031 Call ArgumentException..ctor, X0, X1
	032 Move X0, 0x8E3000
	033 Move X0, [X0+3624]
	034 Call 0x1C17D08
	035 Move X1, X0
	036 Move X0, X19
	037 Call 0x1C17DEC
	038 Move S0, [X0]
	039 Move S1, [X0+4]
	040 Move S6, [X1]
	041 Move S7, [X1+4]
	042 Move S20, [X1+8]
	043 Move S19, [X1+12]
	044 Move S2, [X0+8]
	045 Move S3, [X0+12]
	046 Move S4, [X0+16]
	047 Move S5, [X0+20]
	048 Move S16, [X0+24]
	049 Move S17, [X0+28]
	050 Move V18, [X0+32]
	051 Move S21, [X1+16]
	052 Move S22, [X1+20]
	053 Multiply S23, S0, S6
	054 Multiply S0, S0, S19
	055 Multiply S24, S1, S6
	056 Multiply S1, S1, S19
	057 NotImplemented "Instruction FCMP not yet implemented."
	058 Multiply S6, S2, S6
	059 Multiply S2, S2, S19
	060 Multiply S19, S3, S7
	061 Multiply S25, S4, S7
	062 Multiply S3, S3, S21
	063 Multiply S4, S4, S21
	064 Multiply S7, S5, S7
	065 Multiply S5, S5, S21
	066 Multiply S21, S16, S20
	067 Multiply S26, S17, S20
	068 Multiply S16, S16, S22
	069 Multiply S17, S17, S22
	070 Multiply S20, S18, S20
	071 Multiply S18, S18, S22
	072 NotImplemented "Instruction CSET not yet implemented."
	073 NotImplemented "Instruction FCSEL not yet implemented."
	074 NotImplemented "Instruction FCMP not yet implemented."
	075 NotImplemented "Instruction CSET not yet implemented."
	076 NotImplemented "Instruction FCSEL not yet implemented."
	077 NotImplemented "Instruction FCMP not yet implemented."
	078 NotImplemented "Instruction CSET not yet implemented."
	079 Move X11, X11
	080 ShiftRight X11, 56
	081 And X11, X11, 0x7FFFFF
	082 Move W9, 257
	083 NotImplemented "Instruction BFM not yet implemented."
	084 NotImplemented "Instruction MOVK not yet implemented."
	085 Or X10, X11, X10
	086 Xor X10, X10, X9
	087 NotImplemented "Instruction FCSEL not yet implemented."
	088 And X31, X10, 1
	089 NotImplemented "Instruction FCSEL not yet implemented."
	090 And X31, X10, 511
	091 NotImplemented "Instruction FCSEL not yet implemented."
	092 And X31, X10, 0x1FFFF
	093 NotImplemented "Instruction FCSEL not yet implemented."
	094 NotImplemented "Instruction FCMP not yet implemented."
	095 NotImplemented "Instruction CSET not yet implemented."
	096 NotImplemented "Instruction FCSEL not yet implemented."
	097 NotImplemented "Instruction FCMP not yet implemented."
	098 NotImplemented "Instruction CSET not yet implemented."
	099 Add S6, S22, S6
	100 NotImplemented "Instruction FCSEL not yet implemented."
	101 NotImplemented "Instruction FCMP not yet implemented."
	102 NotImplemented "Instruction CSET not yet implemented."
	103 Move X11, X11
	104 ShiftRight X11, 56
	105 And X11, X11, 0x7FFFFF
	106 NotImplemented "Instruction BFM not yet implemented."
	107 Or X10, X11, X10
	108 Xor X10, X10, X9
	109 NotImplemented "Instruction FCSEL not yet implemented."
	110 And X31, X10, 1
	111 NotImplemented "Instruction FCSEL not yet implemented."
	112 And X31, X10, 511
	113 NotImplemented "Instruction FCSEL not yet implemented."
	114 And X31, X10, 0x1FFFF
	115 Add S0, S0, S3
	116 NotImplemented "Instruction FCSEL not yet implemented."
	117 NotImplemented "Instruction FCMP not yet implemented."
	118 Add S2, S2, S3
	119 NotImplemented "Instruction CSET not yet implemented."
	120 NotImplemented "Instruction FCSEL not yet implemented."
	121 NotImplemented "Instruction FCMP not yet implemented."
	122 Add S1, S1, S4
	123 NotImplemented "Instruction CSET not yet implemented."
	124 NotImplemented "Instruction FCSEL not yet implemented."
	125 NotImplemented "Instruction FCMP not yet implemented."
	126 NotImplemented "Instruction CSET not yet implemented."
	127 Move X11, X11
	128 ShiftRight X11, 56
	129 And X11, X11, 0x7FFFFF
	130 NotImplemented "Instruction BFM not yet implemented."
	131 Or X10, X11, X10
	132 Add S22, S27, S22
	133 Xor X9, X10, X9
	134 Add S3, S6, S3
	135 NotImplemented "Instruction FCSEL not yet implemented."
	136 Add S4, S22, S4
	137 And X31, X9, 1
	138 Move [X8], S3
	139 Move [X8+8], S4
	140 NotImplemented "Instruction FCSEL not yet implemented."
	141 And X31, X9, 511
	142 Add S23, S28, S23
	143 NotImplemented "Instruction FCSEL not yet implemented."
	144 And X31, X9, 0x1FFFF
	145 Add S5, S23, S5
	146 Add S0, S0, S3
	147 NotImplemented "Instruction FCSEL not yet implemented."
	148 Add S1, S1, S4
	149 Move [X8+8], S5
	150 Move [X8+16], S0
	151 Add S0, S2, S3
	152 Move [X8+16], S1
	153 Move [X8+24], S0
	154 Return 

