Type: UnityEngine.SendMouseEvents

Method: System.Void UpdateMouse()

Disassembly:
	0x03C861F8 MOV X1, X31
	0x03C861FC MOV X2, X31
	0x03C86200 BL 0x3C354F8
	0x03C86204 TBZ X0, 0x0, 0x3C86234
	0x03C86208 LDR X0, [X21]
	0x03C8620C LDR W8, [X0 + 0xE0]
	0x03C86210 CBNZ W8, 0x3C86218
	0x03C86214 BL 0x1C16DFC
	0x03C86218 MOV X0, X19
	0x03C8621C LDP X20, X19, [X31 + 0x20]
	0x03C86220 LDP X22, X21, [X31 + 0x10]
	0x03C86224 MOV X1, X31
	0x03C86228 MOV X2, X31
	0x03C8622C LDR X30, [X31], #0x30
	0x03C86230 B 0x3C354F8
	0x03C86234 LDP X20, X19, [X31 + 0x20]
	0x03C86238 LDP X22, X21, [X31 + 0x10]
	0x03C8623C MOV W0, W31
	0x03C86240 LDR X30, [X31], #0x30
	0x03C86244 RET
	0x03C86248 STR X30, [X31 - 0x10]!
	0x03C8624C LDR X0, [X0]
	0x03C86250 CBZ X0, 0x3C86268
	0x03C86254 MOVZ W3, 0x1
	0x03C86258 MOV X2, X31
	0x03C8625C MOV X4, X31
	0x03C86260 LDR X30, [X31], #0x10
	0x03C86264 B 0x3C35614
	0x03C86268 BL 0x1C16F20
	0x03C8626C STR X30, [X31 - 0x40]!
	0x03C86270 STP X24, X23, [X31 + 0x10]
	0x03C86274 STP X22, X21, [X31 + 0x20]
	0x03C86278 STP X20, X19, [X31 + 0x30]
	0x03C8627C ADRP X24, 0x760000
	0x03C86280 ADRP X23, 0x46D000
	0x03C86284 LDRB W8, [X24 + 0xAA6]
	0x03C86288 LDR X23, [X23 + 0x598]
	0x03C8628C MOV X19, X3
	0x03C86290 MOV X21, X2
	0x03C86294 MOV X20, X1
	0x03C86298 MOV X22, X0
	0x03C8629C TBNZ X8, 0x0, 0x3C862B4
	0x03C862A0 ADRP X0, 0x46D000
	0x03C862A4 LDR X0, [X0 + 0x598]
	0x03C862A8 BL 0x1C16CF4
	0x03C862AC MOVZ W8, 0x1
	0x03C862B0 STRB W8, [X24 + 0xAA6]
	0x03C862B4 LDR X0, [X23]
	0x03C862B8 LDR W8, [X0 + 0xE0]
	0x03C862BC CBNZ W8, 0x3C862C4
	0x03C862C0 BL 0x1C16DFC
	0x03C862C4 MOV X0, X22
	0x03C862C8 MOV X1, X21
	0x03C862CC MOV X2, X31
	0x03C862D0 BL 0x3C3883C
	0x03C862D4 TBZ X0, 0x0, 0x3C86308
	0x03C862D8 LDR X0, [X23]
	0x03C862DC LDR W8, [X0 + 0xE0]
	0x03C862E0 CBNZ W8, 0x3C862E8
	0x03C862E4 BL 0x1C16DFC
	0x03C862E8 MOV X0, X20
	0x03C862EC MOV X1, X19
	0x03C862F0 LDP X20, X19, [X31 + 0x30]
	0x03C862F4 LDP X22, X21, [X31 + 0x20]
	0x03C862F8 LDP X24, X23, [X31 + 0x10]
	0x03C862FC MOV X2, X31
	0x03C86300 LDR X30, [X31], #0x40
	0x03C86304 B 0x3C3883C
	0x03C86308 LDP X20, X19, [X31 + 0x30]
	0x03C8630C LDP X22, X21, [X31 + 0x20]
	0x03C86310 LDP X24, X23, [X31 + 0x10]
	0x03C86314 MOV W0, W31
	0x03C86318 LDR X30, [X31], #0x40
	0x03C8631C RET
	0x03C86320 STP X30, X21, [X31 - 0x20]!
	0x03C86324 STP X20, X19, [X31 + 0x10]
	0x03C86328 ADRP X21, 0x760000
	0x03C8632C ADRP X19, 0x4DA000
	0x03C86330 ADRP X20, 0x4DA000
	0x03C86334 LDRB W8, [X21 + 0xAA4]
	0x03C86338 LDR X19, [X19 + 0x7F0]
	0x03C8633C LDR X20, [X20 + 0x840]
	0x03C86340 TBNZ X8, 0x0, 0x3C86364
	0x03C86344 ADRP X0, 0x4DA000
	0x03C86348 LDR X0, [X0 + 0x840]
	0x03C8634C BL 0x1C16CF4
	0x03C86350 ADRP X0, 0x4DA000
	0x03C86354 LDR X0, [X0 + 0x7F0]
	0x03C86358 BL 0x1C16CF4
	0x03C8635C MOVZ W8, 0x1
	0x03C86360 STRB W8, [X21 + 0xAA4]
	0x03C86364 LDR X8, [X19]
	0x03C86368 MOVZ W1, 0x3
	0x03C8636C LDR X8, [X8 + 0xB8]
	0x03C86370 STRB W31, [X8]
	0x03C86374 LDR X0, [X20]
	0x03C86378 BL 0x1C16D6C
	0x03C8637C LDR X8, [X19]
	0x03C86380 MOVZ W1, 0x3
	0x03C86384 LDR X8, [X8 + 0xB8]
	0x03C86388 STR X0, [X8 + 0x8]
	0x03C8638C LDR X0, [X20]
	0x03C86390 BL 0x1C16D6C
	0x03C86394 LDR X8, [X19]
	0x03C86398 MOVZ W1, 0x3
	0x03C8639C LDR X8, [X8 + 0xB8]
	0x03C863A0 STR X0, [X8 + 0x10]
	0x03C863A4 LDR X0, [X20]
	0x03C863A8 BL 0x1C16D6C
	0x03C863AC LDR X8, [X19]
	0x03C863B0 LDP X20, X19, [X31 + 0x10]
	0x03C863B4 LDR X8, [X8 + 0xB8]
	0x03C863B8 STR X0, [X8 + 0x18]

ISIL:
	001 Move [X31-48], D9
	002 Move [X31-40], D8
	003 Move [X31+16], X30
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x761000
	007 Move X19, 0x4DB000
	008 Move W8, [X20+2720]
	009 Move X19, [X19+2032]
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {25}
	014 Move X0, 0x4DB000
	015 Move X0, [X0+2040]
	016 Call 0x1C17CF4
	017 Move X0, 0x4DB000
	018 Move X0, [X0+2048]
	019 Call 0x1C17CF4
	020 Move X0, 0x4DB000
	021 Move X0, [X0+2032]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X20+2720], W8
	025 Move X0, [X19]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {31}
	029 Call 0x1C17DFC
	030 Move X0, [X19]
	031 Move X8, [X0+184]
	032 Move X9, [X8+40]
	033 Compare X9, 0
	034 JumpIfEqual {62}
	035 Move W9, [X0+224]
	036 Compare W9, 0
	037 JumpIfNotEqual {41}
	038 Call 0x1C17DFC
	039 Move X8, [X19]
	040 Move X8, [X8+184]
	041 Move X8, [X8+40]
	042 Compare X8, 0
	043 JumpIfEqual {134}
	044 Move X9, [X8+24]
	045 Move X0, [X8+64]
	046 Move X1, [X8+40]
	047 NotImplemented "Instruction BLR not yet implemented."
	048 Move X8, [X19]
	049 Move X10, X0
	050 ShiftRight X10, 32
	051 And X10, X10, 0x7FFFFFFF
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Move X9, [X8+184]
	054 Move [X9+48], W10
	055 Move [X9+52], W1
	056 Move X8, [X8+184]
	057 NotImplemented "Instruction CSET not yet implemented."
	058 NotImplemented "Instruction CMP not yet implemented."
	059 NotImplemented "Instruction CSET not yet implemented."
	060 Move [X8+56], W9
	061 Move [X8+57], W10
	062 Move X20, 0x761000
	063 Move X8, [X20+2664]
	064 Compare X8, 0
	065 JumpIfNotEqual {71}
	066 Move X0, -51822592
	067 Add X0, X0, 416
	068 Call 0x1C17CB8
	069 Move X8, X0
	070 Move [X20+2664], X0
	071 NotImplemented "Instruction BLR not yet implemented."
	072 Move TEMP, X0
	073 And TEMP, TEMP, 1
	074 Compare TEMP, 1
	075 JumpIfNotEqual {86}
	076 Move X0, [X19]
	077 Move W8, [X0+224]
	078 Compare W8, 0
	079 JumpIfNotEqual {82}
	080 Call 0x1C17DFC
	081 Move X0, [X19]
	082 Move X8, [X0+184]
	083 Move [X8+48], X31
	084 Move X8, [X0+184]
	085 NotImplemented "Instruction STRH not yet implemented."
	086 Call Input.get_mousePosition
	087 Move X0, [X19]
	088 Move V8, V0
	089 Move V9, V1
	090 Move W8, [X0+224]
	091 Compare W8, 0
	092 JumpIfNotEqual {95}
	093 Call 0x1C17DFC
	094 Move X0, [X19]
	095 Move X8, [X0+184]
	096 Move X20, 0x761000
	097 Move [X8+48], S8
	098 Move [X8+56], S9
	099 Move X8, [X20+2568]
	100 Compare X8, 0
	101 JumpIfNotEqual {107}
	102 Move X0, -51773440
	103 Add X0, X0, 1391
	104 Call 0x1C17CB8
	105 Move X8, X0
	106 Move [X20+2568], X0
	107 Move W0, W31
	108 NotImplemented "Instruction BLR not yet implemented."
	109 Move X8, [X19]
	110 And W9, W0, 1
	111 Move X20, 0x761000
	112 Move X8, [X8+184]
	113 Move [X8+56], W9
	114 Move X8, [X20+2560]
	115 Compare X8, 0
	116 JumpIfNotEqual {122}
	117 Move X0, -51937280
	118 Add X0, X0, 2313
	119 Call 0x1C17CB8
	120 Move X8, X0
	121 Move [X20+2560], X0
	122 Move W0, W31
	123 NotImplemented "Instruction BLR not yet implemented."
	124 Move X8, [X19]
	125 And W9, W0, 1
	126 Move X8, [X8+184]
	127 Move [X8+57], W9
	128 Move X20, [X31+32]
	129 Move X19, [X31+40]
	130 Move X30, [X31+16]
	131 Move D9, [X31+48]
	132 Move D8, [X31+56]
	133 Return 
	134 Call 0x1C17F20

Method: System.Void SetMouseMoved()

Disassembly:
	0x03C863BC LDP X30, X21, [X31], #0x20
	0x03C863C0 RET
	0x03C863C4 STP X30, X21, [X31 - 0x20]!
	0x03C863C8 STP X20, X19, [X31 + 0x10]
	0x03C863CC ADRP X21, 0x760000
	0x03C863D0 LDR X2, [X21 + 0xAA8]
	0x03C863D4 MOV W19, W1
	0x03C863D8 MOV X20, X0
	0x03C863DC CBNZ X2, 0x3C863F4
	0x03C863E0 ADRP X0, 0xFFFFFFFFFCE7D000
	0x03C863E4 ADD X0, X0, 0x893
	0x03C863E8 BL 0x1C16CB8
	0x03C863EC MOV X2, X0
	0x03C863F0 STR X0, [X21 + 0xAA8]
	0x03C863F4 MOV X0, X20
	0x03C863F8 MOV W1, W19
	0x03C863FC LDP X20, X19, [X31 + 0x10]
	0x03C86400 LDP X30, X21, [X31], #0x20
	0x03C86404 BR X2
	0x03C86408 STP X30, X21, [X31 - 0x20]!
	0x03C8640C STP X20, X19, [X31 + 0x10]
	0x03C86410 ADRP X21, 0x760000
	0x03C86414 LDR X2, [X21 + 0xAB0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x761000
	005 Move X19, 0x4DB000
	006 Move W8, [X20+2721]
	007 Move X19, [X19+2032]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x4DB000
	013 Move X0, [X0+2032]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+2721], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move W9, 1
	027 Move [X8], W9
	028 Move X30, [X31+32]
	029 Return 

Method: System.Void DoSendMouseEvents(System.Int32 skipRTCameras)

Disassembly:
	0x03C86418 MOV W19, W1
	0x03C8641C MOV X20, X0
	0x03C86420 CBNZ X2, 0x3C86438
	0x03C86424 ADRP X0, 0xFFFFFFFFFCE9B000
	0x03C86428 ADD X0, X0, 0x2C8
	0x03C8642C BL 0x1C16CB8
	0x03C86430 MOV X2, X0
	0x03C86434 STR X0, [X21 + 0xAB0]
	0x03C86438 MOV X0, X20
	0x03C8643C MOV W1, W19
	0x03C86440 LDP X20, X19, [X31 + 0x10]
	0x03C86444 LDP X30, X21, [X31], #0x20
	0x03C86448 BR X2
	0x03C8644C STP X30, X21, [X31 - 0x20]!
	0x03C86450 STP X20, X19, [X31 + 0x10]
	0x03C86454 ADRP X21, 0x760000
	0x03C86458 LDR X2, [X21 + 0xAB8]
	0x03C8645C MOV W19, W1
	0x03C86460 MOV X20, X0
	0x03C86464 CBNZ X2, 0x3C8647C
	0x03C86468 ADRP X0, 0xFFFFFFFFFCEA5000
	0x03C8646C ADD X0, X0, 0x157
	0x03C86470 BL 0x1C16CB8
	0x03C86474 MOV X2, X0
	0x03C86478 STR X0, [X21 + 0xAB8]
	0x03C8647C MOV X0, X20
	0x03C86480 MOV W1, W19
	0x03C86484 LDP X20, X19, [X31 + 0x10]
	0x03C86488 LDP X30, X21, [X31], #0x20
	0x03C8648C BR X2
	0x03C86490 STP X30, X21, [X31 - 0x20]!
	0x03C86494 STP X20, X19, [X31 + 0x10]
	0x03C86498 ADRP X21, 0x760000
	0x03C8649C LDR X2, [X21 + 0xAC8]
	0x03C864A0 MOV W19, W1
	0x03C864A4 MOV X20, X0
	0x03C864A8 CBNZ X2, 0x3C864C0
	0x03C864AC ADRP X0, 0xFFFFFFFFFCE99000
	0x03C864B0 ADD X0, X0, 0x46B
	0x03C864B4 BL 0x1C16CB8
	0x03C864B8 MOV X2, X0
	0x03C864BC STR X0, [X21 + 0xAC8]
	0x03C864C0 MOV X0, X20
	0x03C864C4 MOV W1, W19
	0x03C864C8 LDP X20, X19, [X31 + 0x10]
	0x03C864CC LDP X30, X21, [X31], #0x20
	0x03C864D0 BR X2
	0x03C864D4 STP X30, X21, [X31 - 0x20]!
	0x03C864D8 STP X20, X19, [X31 + 0x10]
	0x03C864DC ADRP X21, 0x760000
	0x03C864E0 LDR X2, [X21 + 0xAD8]
	0x03C864E4 MOV W19, W1
	0x03C864E8 MOV X20, X0
	0x03C864EC CBNZ X2, 0x3C86504
	0x03C864F0 ADRP X0, 0xFFFFFFFFFCE99000
	0x03C864F4 ADD X0, X0, 0x4C2
	0x03C864F8 BL 0x1C16CB8
	0x03C864FC MOV X2, X0
	0x03C86500 STR X0, [X21 + 0xAD8]
	0x03C86504 MOV X0, X20
	0x03C86508 MOV W1, W19
	0x03C8650C LDP X20, X19, [X31 + 0x10]
	0x03C86510 LDP X30, X21, [X31], #0x20
	0x03C86514 BR X2
	0x03C86518 STP X30, X21, [X31 - 0x20]!
	0x03C8651C STP X20, X19, [X31 + 0x10]
	0x03C86520 ADRP X21, 0x760000
	0x03C86524 LDR X2, [X21 + 0xAE8]
	0x03C86528 MOV W19, W1
	0x03C8652C MOV X20, X0
	0x03C86530 CBNZ X2, 0x3C86548
	0x03C86534 ADRP X0, 0xFFFFFFFFFCE95000
	0x03C86538 ADD X0, X0, 0x45B
	0x03C8653C BL 0x1C16CB8
	0x03C86540 MOV X2, X0
	0x03C86544 STR X0, [X21 + 0xAE8]
	0x03C86548 MOV X0, X20
	0x03C8654C MOV W1, W19
	0x03C86550 LDP X20, X19, [X31 + 0x10]
	0x03C86554 LDP X30, X21, [X31], #0x20
	0x03C86558 BR X2
	0x03C8655C STP X30, X21, [X31 - 0x20]!
	0x03C86560 STP X20, X19, [X31 + 0x10]
	0x03C86564 ADRP X21, 0x760000
	0x03C86568 LDR X2, [X21 + 0xAF8]
	0x03C8656C MOV W19, W1
	0x03C86570 MOV X20, X0
	0x03C86574 CBNZ X2, 0x3C8658C
	0x03C86578 ADRP X0, 0xFFFFFFFFFCE97000
	0x03C8657C ADD X0, X0, 0x626
	0x03C86580 BL 0x1C16CB8
	0x03C86584 MOV X2, X0
	0x03C86588 STR X0, [X21 + 0xAF8]
	0x03C8658C MOV X0, X20
	0x03C86590 MOV W1, W19
	0x03C86594 LDP X20, X19, [X31 + 0x10]
	0x03C86598 LDP X30, X21, [X31], #0x20
	0x03C8659C BR X2
	0x03C865A0 STP X30, X21, [X31 - 0x20]!
	0x03C865A4 STP X20, X19, [X31 + 0x10]
	0x03C865A8 ADRP X21, 0x760000
	0x03C865AC LDR X2, [X21 + 0xB00]
	0x03C865B0 MOV W19, W1
	0x03C865B4 MOV X20, X0
	0x03C865B8 CBNZ X2, 0x3C865D0
	0x03C865BC ADRP X0, 0xFFFFFFFFFCE95000
	0x03C865C0 ADD X0, X0, 0x4B4
	0x03C865C4 BL 0x1C16CB8
	0x03C865C8 MOV X2, X0
	0x03C865CC STR X0, [X21 + 0xB00]
	0x03C865D0 MOV X0, X20
	0x03C865D4 MOV W1, W19
	0x03C865D8 LDP X20, X19, [X31 + 0x10]
	0x03C865DC LDP X30, X21, [X31], #0x20
	0x03C865E0 BR X2
	0x03C865E4 STP X30, X21, [X31 - 0x20]!
	0x03C865E8 STP X20, X19, [X31 + 0x10]
	0x03C865EC LDR X8, [X2 + 0x8]
	0x03C865F0 STP X1, X2, [X0 + 0x20]
	0x03C865F4 MOV X19, X0
	0x03C865F8 MOV X20, X1
	0x03C865FC STR X8, [X0 + 0x10]
	0x03C86600 LDRB W21, [X2 + 0x52]
	0x03C86604 STR X0, [X0 + 0x40]
	0x03C86608 MOV X0, X2
	0x03C8660C BL 0x1C16D84
	0x03C86610 TBZ X0, 0x0, 0x3C8662C
	0x03C86614 CMP W21, 0x2
	0x03C86618 B.NE 0x3C86630
	0x03C8661C ADRP X8, 0xFFFFFFFFFDF86000
	0x03C86620 ADD X8, X8, 0x744
	0x03C86624 STR X8, [X19 + 0x18]
	0x03C86628 B 0x3C86640
	0x03C8662C CBZ X20, 0x3C86658
	0x03C86630 LDR X8, [X19 + 0x10]
	0x03C86634 LDR X9, [X19 + 0x20]
	0x03C86638 STR X8, [X19 + 0x18]
	0x03C8663C STR X9, [X19 + 0x40]
	0x03C86640 ADRP X8, 0xFFFFFFFFFDF86000
	0x03C86644 ADD X8, X8, 0x6EC
	0x03C86648 STR X8, [X19 + 0x38]
	0x03C8664C LDP X20, X19, [X31 + 0x10]
	0x03C86650 LDP X30, X21, [X31], #0x20
	0x03C86654 RET
	0x03C86658 ADRP X1, 0xFFFFFFFFFCE95000
	0x03C8665C ADD X1, X1, 0xEE3
	0x03C86660 MOV X0, X31
	0x03C86664 BL 0x1C16F3C
	0x03C86668 MOV X1, X31
	0x03C8666C BL 0x1C16DEC
	0x03C86670 LDR X8, [X0 + 0x40]
	0x03C86674 LDR X4, [X0 + 0x18]
	0x03C86678 LDR X3, [X0 + 0x28]
	0x03C8667C MOV X0, X8
	0x03C86680 BR X4
	0x03C86684 STR X30, [X31 - 0x20]!
	0x03C86688 STP X20, X19, [X31 + 0x10]
	0x03C8668C ADRP X20, 0x760000
	0x03C86690 ADRP X19, 0x4C4000
	0x03C86694 LDRB W8, [X20 + 0xB08]
	0x03C86698 LDR X19, [X19 + 0x420]
	0x03C8669C TBNZ X8, 0x0, 0x3C866B4
	0x03C866A0 ADRP X0, 0x4C4000
	0x03C866A4 LDR X0, [X0 + 0x420]
	0x03C866A8 BL 0x1C16CF4
	0x03C866AC MOVZ W8, 0x1
	0x03C866B0 STRB W8, [X20 + 0xB08]
	0x03C866B4 LDR X0, [X19]
	0x03C866B8 LDR W8, [X0 + 0xE0]
	0x03C866BC CBNZ W8, 0x3C866C8
	0x03C866C0 BL 0x1C16DFC
	0x03C866C4 LDR X0, [X19]
	0x03C866C8 LDR X8, [X0 + 0xB8]
	0x03C866CC LDP X20, X19, [X31 + 0x10]
	0x03C866D0 LDR X0, [X8 + 0x18]
	0x03C866D4 LDR X30, [X31], #0x20
	0x03C866D8 RET
	0x03C866DC STP X30, X21, [X31 - 0x20]!
	0x03C866E0 STP X20, X19, [X31 + 0x10]
	0x03C866E4 ADRP X21, 0x760000
	0x03C866E8 ADRP X20, 0x4C4000
	0x03C866EC LDRB W8, [X21 + 0xB09]
	0x03C866F0 LDR X20, [X20 + 0x420]
	0x03C866F4 MOV X19, X0
	0x03C866F8 TBNZ X8, 0x0, 0x3C86710
	0x03C866FC ADRP X0, 0x4C4000
	0x03C86700 LDR X0, [X0 + 0x420]
	0x03C86704 BL 0x1C16CF4
	0x03C86708 MOVZ W8, 0x1
	0x03C8670C STRB W8, [X21 + 0xB09]
	0x03C86710 LDR X0, [X20]
	0x03C86714 LDR W8, [X0 + 0xE0]
	0x03C86718 CBNZ W8, 0x3C86724
	0x03C8671C BL 0x1C16DFC
	0x03C86720 LDR X0, [X20]
	0x03C86724 LDR X8, [X0 + 0xB8]
	0x03C86728 ADRP X20, 0x760000
	0x03C8672C STR X19, [X8 + 0x18]
	0x03C86730 LDR X1, [X20 + 0xB10]
	0x03C86734 CBNZ X1, 0x3C8674C
	0x03C86738 ADRP X0, 0xFFFFFFFFFCE77000
	0x03C8673C ADD X0, X0, 0x9AE
	0x03C86740 BL 0x1C16CB8
	0x03C86744 MOV X1, X0
	0x03C86748 STR X0, [X20 + 0xB10]
	0x03C8674C CMP X19, 0x0
	0x03C86750 LDP X20, X19, [X31 + 0x10]
	0x03C86754 CSET W0, NE
	0x03C86758 LDP X30, X21, [X31], #0x20
	0x03C8675C BR X1
	0x03C86760 STR X30, [X31 - 0x20]!
	0x03C86764 STP X20, X19, [X31 + 0x10]
	0x03C86768 ADRP X20, 0x760000
	0x03C8676C LDR X1, [X20 + 0xB10]
	0x03C86770 MOV W19, W0
	0x03C86774 CBNZ X1, 0x3C8678C
	0x03C86778 ADRP X0, 0xFFFFFFFFFCE77000
	0x03C8677C ADD X0, X0, 0x9AE
	0x03C86780 BL 0x1C16CB8
	0x03C86784 MOV X1, X0
	0x03C86788 STR X0, [X20 + 0xB10]
	0x03C8678C AND W0, W19, 0x1
	0x03C86790 LDP X20, X19, [X31 + 0x10]
	0x03C86794 LDR X30, [X31], #0x20
	0x03C86798 BR X1
	0x03C8679C STP X30, X19, [X31 - 0x10]!
	0x03C867A0 ADRP X19, 0x760000
	0x03C867A4 LDR X1, [X19 + 0xB10]
	0x03C867A8 CBNZ X1, 0x3C867C0
	0x03C867AC ADRP X0, 0xFFFFFFFFFCE77000
	0x03C867B0 ADD X0, X0, 0x9AE
	0x03C867B4 BL 0x1C16CB8
	0x03C867B8 MOV X1, X0
	0x03C867BC STR X0, [X19 + 0xB10]
	0x03C867C0 MOV W0, W31
	0x03C867C4 LDP X30, X19, [X31], #0x10
	0x03C867C8 BR X1
	0x03C867CC STP X30, X21, [X31 - 0x20]!
	0x03C867D0 STP X20, X19, [X31 + 0x10]
	0x03C867D4 ADRP X21, 0x760000
	0x03C867D8 ADRP X20, 0x4C4000
	0x03C867DC LDRB W8, [X21 + 0xB0A]
	0x03C867E0 LDR X20, [X20 + 0x420]
	0x03C867E4 MOV W19, W0
	0x03C867E8 TBNZ X8, 0x0, 0x3C86800
	0x03C867EC ADRP X0, 0x4C4000
	0x03C867F0 LDR X0, [X0 + 0x420]
	0x03C867F4 BL 0x1C16CF4
	0x03C867F8 MOVZ W8, 0x1
	0x03C867FC STRB W8, [X21 + 0xB0A]
	0x03C86800 LDR X0, [X20]
	0x03C86804 LDR W8, [X0 + 0xE0]
	0x03C86808 CBNZ W8, 0x3C86814
	0x03C8680C BL 0x1C16DFC
	0x03C86810 LDR X0, [X20]
	0x03C86814 LDR X8, [X0 + 0xB8]
	0x03C86818 LDR X8, [X8 + 0x8]
	0x03C8681C CBZ X8, 0x3C8683C
	0x03C86820 LDR X3, [X8 + 0x18]
	0x03C86824 LDR X0, [X8 + 0x40]
	0x03C86828 LDR X2, [X8 + 0x28]
	0x03C8682C MOV W1, W19
	0x03C86830 LDP X20, X19, [X31 + 0x10]
	0x03C86834 LDP X30, X21, [X31], #0x20
	0x03C86838 BR X3
	0x03C8683C LDP X20, X19, [X31 + 0x10]
	0x03C86840 LDP X30, X21, [X31], #0x20
	0x03C86844 RET
	0x03C86848 STR X30, [X31 - 0x30]!
	0x03C8684C STP X22, X21, [X31 + 0x10]
	0x03C86850 STP X20, X19, [X31 + 0x20]
	0x03C86854 ADRP X22, 0x760000
	0x03C86858 ADRP X21, 0x4C4000
	0x03C8685C LDRB W8, [X22 + 0xB0B]
	0x03C86860 LDR X21, [X21 + 0x420]
	0x03C86864 MOV X19, X1
	0x03C86868 MOV W20, W0
	0x03C8686C TBNZ X8, 0x0, 0x3C86884
	0x03C86870 ADRP X0, 0x4C4000
	0x03C86874 LDR X0, [X0 + 0x420]
	0x03C86878 BL 0x1C16CF4
	0x03C8687C MOVZ W8, 0x1
	0x03C86880 STRB W8, [X22 + 0xB0B]
	0x03C86884 LDR X0, [X21]
	0x03C86888 LDR W8, [X0 + 0xE0]
	0x03C8688C CBNZ W8, 0x3C86898
	0x03C86890 BL 0x1C16DFC
	0x03C86894 LDR X0, [X21]
	0x03C86898 LDR X8, [X0 + 0xB8]
	0x03C8689C LDR X8, [X8]
	0x03C868A0 CBZ X8, 0x3C868C8
	0x03C868A4 LDR X4, [X8 + 0x18]
	0x03C868A8 LDR X0, [X8 + 0x40]
	0x03C868AC LDR X3, [X8 + 0x28]
	0x03C868B0 MOV W1, W20
	0x03C868B4 MOV X2, X19
	0x03C868B8 LDP X20, X19, [X31 + 0x20]
	0x03C868BC LDP X22, X21, [X31 + 0x10]
	0x03C868C0 LDR X30, [X31], #0x30
	0x03C868C4 BR X4
	0x03C868C8 CBZ X19, 0x3C868E0
	0x03C868CC STR X31, [X19 + 0x8]
	0x03C868D0 LDP X20, X19, [X31 + 0x20]
	0x03C868D4 LDP X22, X21, [X31 + 0x10]
	0x03C868D8 LDR X30, [X31], #0x30
	0x03C868DC RET
	0x03C868E0 BL 0x1C16F20
	0x03C868E4 STR X30, [X31 - 0x30]!
	0x03C868E8 STP X22, X21, [X31 + 0x10]
	0x03C868EC STP X20, X19, [X31 + 0x20]
	0x03C868F0 ADRP X22, 0x760000
	0x03C868F4 ADRP X21, 0x4C4000
	0x03C868F8 LDRB W8, [X22 + 0xB0C]
	0x03C868FC LDR X21, [X21 + 0x420]
	0x03C86900 MOV X19, X1
	0x03C86904 MOV W20, W0
	0x03C86908 TBNZ X8, 0x0, 0x3C86920
	0x03C8690C ADRP X0, 0x4C4000
	0x03C86910 LDR X0, [X0 + 0x420]
	0x03C86914 BL 0x1C16CF4
	0x03C86918 MOVZ W8, 0x1
	0x03C8691C STRB W8, [X22 + 0xB0C]
	0x03C86920 LDR X0, [X21]
	0x03C86924 LDR W8, [X0 + 0xE0]
	0x03C86928 CBNZ W8, 0x3C86934
	0x03C8692C BL 0x1C16DFC
	0x03C86930 LDR X0, [X21]
	0x03C86934 LDR X8, [X0 + 0xB8]
	0x03C86938 LDR X8, [X8 + 0x18]
	0x03C8693C CBZ X8, 0x3C86964
	0x03C86940 LDR X4, [X8 + 0x18]
	0x03C86944 LDR X0, [X8 + 0x40]
	0x03C86948 LDR X3, [X8 + 0x28]
	0x03C8694C MOV W1, W20
	0x03C86950 MOV X2, X19
	0x03C86954 LDP X20, X19, [X31 + 0x20]
	0x03C86958 LDP X22, X21, [X31 + 0x10]
	0x03C8695C LDR X30, [X31], #0x30
	0x03C86960 BR X4
	0x03C86964 LDP X20, X19, [X31 + 0x20]
	0x03C86968 LDP X22, X21, [X31 + 0x10]
	0x03C8696C LDR X30, [X31], #0x30
	0x03C86970 RET
	0x03C86974 STR X30, [X31 - 0x30]!
	0x03C86978 STP X22, X21, [X31 + 0x10]
	0x03C8697C STP X20, X19, [X31 + 0x20]
	0x03C86980 ADRP X22, 0x760000
	0x03C86984 ADRP X21, 0x4C4000
	0x03C86988 LDRB W8, [X22 + 0xB0D]
	0x03C8698C LDR X21, [X21 + 0x420]
	0x03C86990 MOV X19, X1
	0x03C86994 MOV W20, W0
	0x03C86998 TBNZ X8, 0x0, 0x3C869B0
	0x03C8699C ADRP X0, 0x4C4000
	0x03C869A0 LDR X0, [X0 + 0x420]
	0x03C869A4 BL 0x1C16CF4
	0x03C869A8 MOVZ W8, 0x1
	0x03C869AC STRB W8, [X22 + 0xB0D]
	0x03C869B0 LDR X0, [X21]
	0x03C869B4 LDR W8, [X0 + 0xE0]
	0x03C869B8 CBNZ W8, 0x3C869C4
	0x03C869BC BL 0x1C16DFC
	0x03C869C0 LDR X0, [X21]
	0x03C869C4 LDR X8, [X0 + 0xB8]
	0x03C869C8 LDR X8, [X8 + 0x10]
	0x03C869CC CBZ X8, 0x3C869EC
	0x03C869D0 LDR X9, [X8 + 0x18]
	0x03C869D4 LDR X0, [X8 + 0x40]
	0x03C869D8 LDR X2, [X8 + 0x28]
	0x03C869DC MOV W1, W20
	0x03C869E0 BLR X9
	0x03C869E4 AND W8, W0, 0x1
	0x03C869E8 B 0x3C869F0
	0x03C869EC MOVZ W8, 0x1
	0x03C869F0 STRB W8, [X19]
	0x03C869F4 LDP X20, X19, [X31 + 0x20]
	0x03C869F8 LDP X22, X21, [X31 + 0x10]
	0x03C869FC LDR X30, [X31], #0x30
	0x03C86A00 RET
	0x03C86A04 STP X30, X19, [X31 - 0x10]!
	0x03C86A08 ADRP X19, 0x760000
	0x03C86A0C LDR X0, [X19 + 0xB18]
	0x03C86A10 CBNZ X0, 0x3C86A24
	0x03C86A14 ADRP X0, 0xFFFFFFFFFCE7B000
	0x03C86A18 ADD X0, X0, 0x630
	0x03C86A1C BL 0x1C16CB8
	0x03C86A20 STR X0, [X19 + 0xB18]
	0x03C86A24 LDP X30, X19, [X31], #0x10
	0x03C86A28 BR X0
	0x03C86A2C STP X30, X19, [X31 - 0x10]!
	0x03C86A30 ADRP X19, 0x760000
	0x03C86A34 LDR X0, [X19 + 0xB20]
	0x03C86A38 CBNZ X0, 0x3C86A4C
	0x03C86A3C ADRP X0, 0xFFFFFFFFFCE69000
	0x03C86A40 ADD X0, X0, 0x70D
	0x03C86A44 BL 0x1C16CB8
	0x03C86A48 STR X0, [X19 + 0xB20]
	0x03C86A4C LDP X30, X19, [X31], #0x10
	0x03C86A50 BR X0
	0x03C86A54 STP X30, X19, [X31 - 0x10]!
	0x03C86A58 ADRP X19, 0x760000
	0x03C86A5C LDR X0, [X19 + 0xB28]
	0x03C86A60 CBNZ X0, 0x3C86A74
	0x03C86A64 ADRP X0, 0xFFFFFFFFFCE7D000
	0x03C86A68 ADD X0, X0, 0x8EF
	0x03C86A6C BL 0x1C16CB8
	0x03C86A70 STR X0, [X19 + 0xB28]
	0x03C86A74 LDP X30, X19, [X31], #0x10
	0x03C86A78 BR X0
	0x03C86A7C STR X30, [X31 - 0x20]!
	0x03C86A80 STP X20, X19, [X31 + 0x10]
	0x03C86A84 ADRP X20, 0x760000
	0x03C86A88 LDR X1, [X20 + 0xB30]
	0x03C86A8C MOV X19, X0
	0x03C86A90 CBNZ X1, 0x3C86AA8
	0x03C86A94 ADRP X0, 0xFFFFFFFFFCE8F000
	0x03C86A98 ADD X0, X0, 0xB3
	0x03C86A9C BL 0x1C16CB8
	0x03C86AA0 MOV X1, X0
	0x03C86AA4 STR X0, [X20 + 0xB30]
	0x03C86AA8 MOV X0, X19
	0x03C86AAC LDP X20, X19, [X31 + 0x10]
	0x03C86AB0 LDR X30, [X31], #0x20
	0x03C86AB4 BR X1
	0x03C86AB8 STP X30, X23, [X31 - 0x30]!
	0x03C86ABC STP X22, X21, [X31 + 0x10]
	0x03C86AC0 STP X20, X19, [X31 + 0x20]
	0x03C86AC4 ADRP X23, 0x760000
	0x03C86AC8 LDR X4, [X23 + 0xB38]
	0x03C86ACC MOV W19, W3
	0x03C86AD0 MOV X20, X2
	0x03C86AD4 MOV W21, W1
	0x03C86AD8 MOV W22, W0
	0x03C86ADC CBNZ X4, 0x3C86AF4
	0x03C86AE0 ADRP X0, 0xFFFFFFFFFCE7D000
	0x03C86AE4 ADD X0, X0, 0x92F
	0x03C86AE8 BL 0x1C16CB8
	0x03C86AEC MOV X4, X0
	0x03C86AF0 STR X0, [X23 + 0xB38]
	0x03C86AF4 MOV W0, W22
	0x03C86AF8 MOV W1, W21
	0x03C86AFC MOV X2, X20
	0x03C86B00 MOV W3, W19
	0x03C86B04 LDP X20, X19, [X31 + 0x20]
	0x03C86B08 LDP X22, X21, [X31 + 0x10]
	0x03C86B0C LDP X30, X23, [X31], #0x30
	0x03C86B10 BR X4
	0x03C86B14 STR D8, [X31 - 0x20]!
	0x03C86B18 STP X30, X19, [X31 + 0x10]
	0x03C86B1C ADRP X19, 0x760000
	0x03C86B20 LDR X0, [X19 + 0xB40]
	0x03C86B24 MOV V8.16B, V0.16B
	0x03C86B28 CBNZ X0, 0x3C86B3C
	0x03C86B2C ADRP X0, 0xFFFFFFFFFCE9B000
	0x03C86B30 ADD X0, X0, 0x326
	0x03C86B34 BL 0x1C16CB8
	0x03C86B38 STR X0, [X19 + 0xB40]
	0x03C86B3C LDP X30, X19, [X31 + 0x10]
	0x03C86B40 MOV V0.16B, V8.16B
	0x03C86B44 LDR V8, [X31], #0x20
	0x03C86B48 BR X0
	0x03C86B4C STR X30, [X31 - 0x20]!
	0x03C86B50 STP X20, X19, [X31 + 0x10]
	0x03C86B54 ADRP X20, 0x760000
	0x03C86B58 LDR X1, [X20 + 0xB48]
	0x03C86B5C MOV W19, W0
	0x03C86B60 CBNZ X1, 0x3C86B78
	0x03C86B64 ADRP X0, 0xFFFFFFFFFCE9B000
	0x03C86B68 ADD X0, X0, 0x376
	0x03C86B6C BL 0x1C16CB8
	0x03C86B70 MOV X1, X0
	0x03C86B74 STR X0, [X20 + 0xB48]
	0x03C86B78 MOV W0, W19
	0x03C86B7C LDP X20, X19, [X31 + 0x10]
	0x03C86B80 LDR X30, [X31], #0x20
	0x03C86B84 BR X1
	0x03C86B88 STP X30, X21, [X31 - 0x20]!
	0x03C86B8C STP X20, X19, [X31 + 0x10]
	0x03C86B90 ADRP X21, 0x760000
	0x03C86B94 LDR X2, [X21 + 0xB50]
	0x03C86B98 MOV W19, W1
	0x03C86B9C MOV X20, X0
	0x03C86BA0 CBNZ X2, 0x3C86BB8
	0x03C86BA4 ADRP X0, 0xFFFFFFFFFCE9D000
	0x03C86BA8 ADD X0, X0, 0x7B7
	0x03C86BAC BL 0x1C16CB8
	0x03C86BB0 MOV X2, X0
	0x03C86BB4 STR X0, [X21 + 0xB50]
	0x03C86BB8 AND W1, W19, 0x1
	0x03C86BBC MOV X0, X20
	0x03C86BC0 LDP X20, X19, [X31 + 0x10]
	0x03C86BC4 LDP X30, X21, [X31], #0x20
	0x03C86BC8 BR X2
	0x03C86BCC STR X30, [X31 - 0x30]!
	0x03C86BD0 STP X22, X21, [X31 + 0x10]
	0x03C86BD4 STP X20, X19, [X31 + 0x20]
	0x03C86BD8 ADRP X22, 0x760000
	0x03C86BDC LDR X3, [X22 + 0xB58]
	0x03C86BE0 MOV X19, X2
	0x03C86BE4 MOV X20, X1
	0x03C86BE8 MOV X21, X0
	0x03C86BEC CBNZ X3, 0x3C86C04
	0x03C86BF0 ADRP X0, 0xFFFFFFFFFCE83000
	0x03C86BF4 ADD X0, X0, 0xAE9
	0x03C86BF8 BL 0x1C16CB8
	0x03C86BFC MOV X3, X0
	0x03C86C00 STR X0, [X22 + 0xB58]
	0x03C86C04 MOV X0, X21
	0x03C86C08 MOV X1, X20
	0x03C86C0C MOV X2, X19
	0x03C86C10 LDP X20, X19, [X31 + 0x20]
	0x03C86C14 LDP X22, X21, [X31 + 0x10]
	0x03C86C18 LDR X30, [X31], #0x30
	0x03C86C1C BR X3
	0x03C86C20 MOV W1, W31
	0x03C86C24 B 0x3C86C28
	0x03C86C28 STP X30, X21, [X31 - 0x20]!
	0x03C86C2C STP X20, X19, [X31 + 0x10]
	0x03C86C30 ADRP X21, 0x760000
	0x03C86C34 LDRB W8, [X21 + 0xB60]
	0x03C86C38 MOV W19, W1
	0x03C86C3C MOV X20, X0
	0x03C86C40 TBNZ X8, 0x0, 0x3C86C7C
	0x03C86C44 ADRP X0, 0x478000
	0x03C86C48 LDR X0, [X0 + 0x858]
	0x03C86C4C BL 0x1C16CF4
	0x03C86C50 ADRP X0, 0x46D000
	0x03C86C54 LDR X0, [X0 + 0x598]
	0x03C86C58 BL 0x1C16CF4
	0x03C86C5C ADRP X0, 0x4D9000
	0x03C86C60 LDR X0, [X0 + 0x650]
	0x03C86C64 BL 0x1C16CF4
	0x03C86C68 ADRP X0, 0x46D000
	0x03C86C6C LDR X0, [X0 + 0x988]
	0x03C86C70 BL 0x1C16CF4
	0x03C86C74 MOVZ W8, 0x1
	0x03C86C78 STRB W8, [X21 + 0xB60]
	0x03C86C7C CBZ X20, 0x3C86D38
	0x03C86C80 ADRP X8, 0x46D000
	0x03C86C84 LDR X8, [X8 + 0x598]
	0x03C86C88 LDR X9, [X20]
	0x03C86C8C LDR X10, [X8]
	0x03C86C90 LDRB W8, [X9 + 0x130]
	0x03C86C94 LDRB W11, [X10 + 0x130]
	0x03C86C98 CMP W8, W11
	0x03C86C9C B.CC 0x3C86D04
	0x03C86CA0 LDR X9, [X9 + 0xC8]
	0x03C86CA4 ADD X11, X9, X11, 0x3, LSL
	0x03C86CA8 LDUR X11, [X11 - 0x8]
	0x03C86CAC CMP X11, X10
	0x03C86CB0 B.NE 0x3C86D04
	0x03C86CB4 ADRP X10, 0x478000
	0x03C86CB8 LDR X10, [X10 + 0x858]
	0x03C86CBC LDR X10, [X10]
	0x03C86CC0 LDRB W11, [X10 + 0x130]
	0x03C86CC4 CMP W8, W11
	0x03C86CC8 B.CC 0x3C86CDC
	0x03C86CCC ADD X11, X9, X11, 0x3, LSL
	0x03C86CD0 LDUR X11, [X11 - 0x8]
	0x03C86CD4 CMP X11, X10
	0x03C86CD8 B.EQ 0x3C86D04
	0x03C86CDC ADRP X10, 0x4D9000
	0x03C86CE0 LDR X10, [X10 + 0x650]
	0x03C86CE4 LDR X10, [X10]
	0x03C86CE8 LDRB W11, [X10 + 0x130]
	0x03C86CEC CMP W8, W11
	0x03C86CF0 B.CC 0x3C86D50
	0x03C86CF4 ADD X8, X9, X11, 0x3, LSL
	0x03C86CF8 LDUR X8, [X8 - 0x8]
	0x03C86CFC CMP X8, X10
	0x03C86D00 B.NE 0x3C86D50
	0x03C86D04 ADRP X21, 0x760000
	0x03C86D08 LDR X2, [X21 + 0xB50]
	0x03C86D0C CBNZ X2, 0x3C86D24
	0x03C86D10 ADRP X0, 0xFFFFFFFFFCE9D000
	0x03C86D14 ADD X0, X0, 0x7B7
	0x03C86D18 BL 0x1C16CB8
	0x03C86D1C MOV X2, X0
	0x03C86D20 STR X0, [X21 + 0xB50]
	0x03C86D24 AND W1, W19, 0x1
	0x03C86D28 MOV X0, X20
	0x03C86D2C LDP X20, X19, [X31 + 0x10]
	0x03C86D30 LDP X30, X21, [X31], #0x20
	0x03C86D34 BR X2
	0x03C86D38 ADRP X8, 0x46D000
	0x03C86D3C LDR X8, [X8 + 0x988]
	0x03C86D40 LDP X20, X19, [X31 + 0x10]
	0x03C86D44 LDR X0, [X8]
	0x03C86D48 LDP X30, X21, [X31], #0x20
	0x03C86D4C RET
	0x03C86D50 ADRP X0, 0x475000
	0x03C86D54 LDR X0, [X0 + 0x578]
	0x03C86D58 BL 0x1C16D08
	0x03C86D5C BL 0x1C16F10
	0x03C86D60 MOV X19, X0
	0x03C86D64 ADRP X0, 0x4DA000
	0x03C86D68 LDR X0, [X0 + 0x848]
	0x03C86D6C BL 0x1C16D08
	0x03C86D70 MOV X1, X0
	0x03C86D74 MOV X0, X19
	0x03C86D78 MOV X2, X31
	0x03C86D7C BL 0x3314A68

ISIL:
	001 Subtract X31, X31, 288
	002 Move [X31+128], D15
	003 Move [X31+136], D14
	004 Move [X31+144], D13
	005 Move [X31+152], D12
	006 Move [X31+160], D11
	007 Move [X31+168], D10
	008 Move [X31+176], D9
	009 Move [X31+184], D8
	010 Move [X31+192], X29
	011 Move [X31+200], X30
	012 Move [X31+208], X28
	013 Move [X31+216], X27
	014 Move [X31+224], X26
	015 Move [X31+232], X25
	016 Move [X31+240], X24
	017 Move [X31+248], X23
	018 Move [X31+256], X22
	019 Move [X31+264], X21
	020 Move [X31+272], X20
	021 Move [X31+280], X19
	022 Move X20, 0x761000
	023 Move X28, 0x4DB000
	024 Move W8, [X20+2722]
	025 Move X28, [X28+2032]
	026 Move W19, W0
	027 Move TEMP, X8
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfEqual {45}
	031 Move X0, 0x498000
	032 Move X0, [X0+3992]
	033 Call 0x1C17CF4
	034 Move X0, 0x4D2000
	035 Move X0, [X0+1096]
	036 Call 0x1C17CF4
	037 Move X0, 0x46E000
	038 Move X0, [X0+1432]
	039 Call 0x1C17CF4
	040 Move X0, 0x4DB000
	041 Move X0, [X0+2032]
	042 Call 0x1C17CF4
	043 Move W8, 1
	044 Move [X20+2722], W8
	045 Move X0, [X28]
	046 Move [X31+120], W31
	047 Move [X31+112], X31
	048 Move W8, [X0+224]
	049 Compare W8, 0
	050 JumpIfNotEqual {52}
	051 Call 0x1C17DFC
	052 Call SendMouseEvents.UpdateMouse
	053 Move X8, [X28]
	054 Move X0, X31
	055 Move X8, [X8+184]
	056 Move S8, [X8+48]
	057 Move S9, [X8+52]
	058 Call Camera.get_allCamerasCount
	059 Move X8, [X28]
	060 Move W20, W0
	061 Move X9, [X8+184]
	062 Move X9, [X9+32]
	063 Compare X9, 0
	064 JumpIfEqual {77}
	065 Move W10, [X8+224]
	066 Compare W10, 0
	067 JumpIfNotEqual {75}
	068 Move X0, X8
	069 Call 0x1C17DFC
	070 Move X8, [X28]
	071 Move X9, [X8+184]
	072 Move X9, [X9+32]
	073 Compare X9, 0
	074 JumpIfEqual {653}
	075 Move W9, [X9+24]
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Move X8, 0x498000
	078 Move X8, [X8+3992]
	079 Move W1, W20
	080 Move X0, [X8]
	081 Call 0x1C17D6C
	082 Move X8, [X28]
	083 Move X20, X0
	084 Move W9, [X8+224]
	085 Compare W9, 0
	086 JumpIfNotEqual {90}
	087 Move X0, X8
	088 Call 0x1C17DFC
	089 Move X8, [X28]
	090 Move X9, [X8+184]
	091 Move [X9+32], X20
	092 Move W9, [X8+224]
	093 Compare W9, 0
	094 JumpIfNotEqual {98}
	095 Move X0, X8
	096 Call 0x1C17DFC
	097 Move X8, [X28]
	098 Move X8, [X8+184]
	099 Move X1, X31
	100 Move X0, [X8+32]
	101 Call Camera.GetAllCameras, X0
	102 Move X20, X31
	103 Move W21, 32
	104 Move X0, [X28]
	105 Move W8, [X0+224]
	106 Compare W8, 0
	107 JumpIfNotEqual {110}
	108 Call 0x1C17DFC
	109 Move X0, [X28]
	110 Move X8, [X0+184]
	111 Move X9, [X8+24]
	112 Compare X9, 0
	113 JumpIfEqual {653}
	114 Move W10, [X0+224]
	115 NotImplemented "Instruction LDRSW not yet implemented."
	116 Compare W10, 0
	117 JumpIfNotEqual {121}
	118 Call 0x1C17DFC
	119 Move X0, [X28]
	120 Move X8, [X0+184]
	121 NotImplemented "Instruction CMP not yet implemented."
	122 Move X8, [X8+24]
	123 Compare X8, 0
	124 JumpIfEqual {653}
	125 Move W9, [X8+24]
	126 NotImplemented "Instruction CMP not yet implemented."
	127 Add X8, X8, X21
	128 Add X20, X20, 1
	129 Add X21, X21, 16
	130 Move [X8], X31
	131 Move [X8+8], X31
	132 Move W9, [X8]
	133 Move [X31+32], S9
	134 Move [X31+40], S8
	135 Compare W9, 0
	136 JumpIfNotEqual {598}
	137 Move W9, [X0+224]
	138 Compare W9, 0
	139 JumpIfNotEqual {143}
	140 Call 0x1C17DFC
	141 Move X8, [X28]
	142 Move X8, [X8+184]
	143 Move X29, [X8+32]
	144 Compare X29, 0
	145 JumpIfEqual {653}
	146 Move X8, [X29+24]
	147 NotImplemented "Instruction CMP not yet implemented."
	148 Move X9, -52019200
	149 Move V0, [X9+3872]
	150 Move X20, 0x46E000
	151 Move X27, 0x4D2000
	152 Move X10, -52015104
	153 Move X20, [X20+1432]
	154 Move X27, [X27+1096]
	155 Move [X31+28], S0
	156 Move V0, [X10+576]
	157 Move X22, X31
	158 And X8, X8, 0
	159 Add X23, X29, 32
	160 Move X21, 0x753000
	161 Move [X31+20], S0
	162 Move [X31+24], W19
	163 NotImplemented "Instruction CMP not yet implemented."
	164 Move X0, [X20]
	165 Move X24, [X23]
	166 Move W8, [X0+224]
	167 Compare W8, 0
	168 JumpIfNotEqual {170}
	169 Call 0x1C17DFC
	170 Move X0, X24
	171 Move X1, X31
	172 Move X2, X31
	173 Call Object.op_Equality, X0, X1
	174 Move TEMP, X0
	175 And TEMP, TEMP, 1
	176 Compare TEMP, 1
	177 JumpIfEqual {595}
	178 Compare W19, 0
	179 JumpIfEqual {200}
	180 Compare X24, 0
	181 JumpIfEqual {653}
	182 Move X0, X24
	183 Move X1, X31
	184 Call Camera.get_targetTexture, X0
	185 Move X8, [X20]
	186 Move X25, X0
	187 Move W9, [X8+224]
	188 Compare W9, 0
	189 JumpIfNotEqual {192}
	190 Move X0, X8
	191 Call 0x1C17DFC
	192 Move X0, X25
	193 Move X1, X31
	194 Move X2, X31
	195 Call Object.op_Inequality, X0, X1
	196 Move TEMP, X0
	197 And TEMP, TEMP, 1
	198 Compare TEMP, 1
	199 JumpIfNotEqual {202}
	200 Compare X24, 0
	201 JumpIfEqual {653}
	202 Move X0, X24
	203 Move X1, X31
	204 Call Camera.get_targetDisplay, X0
	205 Move X8, [X27]
	206 Move W25, W0
	207 Move W9, [X8+224]
	208 Compare W9, 0
	209 JumpIfNotEqual {212}
	210 Move X0, X8
	211 Call 0x1C17DFC
	212 Move S9, [X31+32]
	213 Move S8, [X31+36]
	214 Move S2, W31
	215 Move X0, X31
	216 Move V0, V8
	217 Move V1, V9
	218 Call Display.RelativeMouseAt, X0
	219 Move W8, [X21+1923]
	220 Move V10, V0
	221 Move V11, V1
	222 Move V12, V2
	223 Compare W8, 0
	224 JumpIfNotEqual {230}
	225 Move X0, 0x46E000
	226 Move X0, [X0+1440]
	227 Call 0x1C17CF4
	228 Move W8, 1
	229 Move [X21+1923], W8
	230 Move X8, 0x46E000
	231 Move X8, [X8+1440]
	232 Move V13, V8
	233 Move V14, V9
	234 Move S15, W31
	235 Move X8, [X8]
	236 Move X8, [X8+184]
	237 Move S0, [X8]
	238 Move S1, [X8+4]
	239 Move V2, [X8+8]
	240 Subtract S0, S10, S0
	241 Subtract S1, S11, S1
	242 Subtract S2, S12, S2
	243 Multiply S0, S0, S0
	244 Multiply S1, S1, S1
	245 Add S0, S0, S1
	246 Multiply S1, S2, S2
	247 Add S0, S1, S0
	248 Move V1, [X31+28]
	249 NotImplemented "Instruction FCMP not yet implemented."
	250 Move W9, 0x7F800000
	251 Move S0, W9
	252 NotImplemented "Instruction FCVTZS not yet implemented."
	253 NotImplemented "Instruction FCMP not yet implemented."
	254 Move W9, 0x80000000
	255 NotImplemented "Instruction CSEL not yet implemented."
	256 NotImplemented "Instruction CMP not yet implemented."
	257 Move X0, X31
	258 Call Screen.get_width
	259 Move W26, W0
	260 Move X0, X31
	261 Call Screen.get_height
	262 NotImplemented "Instruction CMP not yet implemented."
	263 Move W27, W0
	264 Move X19, X29
	265 Move X29, X23
	266 Move X23, X21
	267 Move X21, X20
	268 Move X20, 0x4D2000
	269 Move X20, [X20+1096]
	270 Move X0, [X20]
	271 Move W8, [X0+224]
	272 Compare W8, 0
	273 JumpIfNotEqual {276}
	274 Call 0x1C17DFC
	275 Move X0, [X20]
	276 Move X8, [X0+184]
	277 Move X8, [X8]
	278 Compare X8, 0
	279 JumpIfEqual {653}
	280 Move W9, [X8+24]
	281 Move X20, X21
	282 Move X21, X23
	283 Move X23, X29
	284 NotImplemented "Instruction CMP not yet implemented."
	285 Move X29, X19
	286 Move W9, [X0+224]
	287 Compare W9, 0
	288 JumpIfNotEqual {297}
	289 Call 0x1C17DFC
	290 Move X8, 0x4D2000
	291 Move X8, [X8+1096]
	292 Move X8, [X8]
	293 Move X8, [X8+184]
	294 Move X8, [X8]
	295 Compare X8, 0
	296 JumpIfEqual {653}
	297 Move W9, [X8+24]
	298 NotImplemented "Instruction CMP not yet implemented."
	299 Move W27, W25
	300 Add X8, X8, X27
	301 Move X0, [X8+32]
	302 Compare X0, 0
	303 JumpIfEqual {653}
	304 Move X1, X31
	305 Call Display.get_systemWidth, X0
	306 Move X8, 0x4D2000
	307 Move X8, [X8+1096]
	308 Move X8, [X8]
	309 Move X8, [X8+184]
	310 Move X8, [X8]
	311 Compare X8, 0
	312 JumpIfEqual {653}
	313 Move W9, [X8+24]
	314 NotImplemented "Instruction CMP not yet implemented."
	315 Add X8, X8, X27
	316 Move W26, W0
	317 Move X0, [X8+32]
	318 Compare X0, 0
	319 JumpIfEqual {653}
	320 Move X1, X31
	321 Call Display.get_systemHeight, X0
	322 Move W27, W0
	323 NotImplemented "Instruction SCVTF not yet implemented."
	324 Move X27, 0x4D2000
	325 Move X27, [X27+1096]
	326 Move W19, [X31+24]
	327 NotImplemented "Instruction FDIV not yet implemented."
	328 Move S1, 1
	329 NotImplemented "Instruction FCMP not yet implemented."
	330 NotImplemented "Instruction FCMP not yet implemented."
	331 NotImplemented "Instruction SCVTF not yet implemented."
	332 NotImplemented "Instruction FDIV not yet implemented."
	333 NotImplemented "Instruction FCMP not yet implemented."
	334 Move S1, 1
	335 NotImplemented "Instruction FCMP not yet implemented."
	336 Move V13, V10
	337 Move V14, V11
	338 Move V15, V12
	339 Move V9, V11
	340 Move V8, V10
	341 Move X0, X24
	342 Move X1, X31
	343 Call Camera.get_pixelRect, X0
	344 Add S3, S1, S3
	345 NotImplemented "Instruction FCMP not yet implemented."
	346 NotImplemented "Instruction FCMP not yet implemented."
	347 NotImplemented "Instruction FCMP not yet implemented."
	348 Add S0, S0, S2
	349 NotImplemented "Instruction FCMP not yet implemented."
	350 Move X0, X24
	351 Move X1, X31
	352 Call Camera.get_eventMask, X0
	353 Compare W0, 0
	354 JumpIfEqual {595}
	355 Add X8, X31, 88
	356 Move X0, X24
	357 Move V0, V13
	358 Move V1, V14
	359 Move V2, V15
	360 Move X1, X31
	361 Call Camera.ScreenPointToRay, X0, X1
	362 Move X10, 0x754000
	363 Move X8, [X31+88]
	364 Move W9, [X31+96]
	365 Move S11, [X31+100]
	366 Move S12, [X31+104]
	367 Move W10, [X10+1450]
	368 Move V13, [X31+108]
	369 Move [X31+112], X8
	370 Move [X31+120], W9
	371 Compare W10, 0
	372 JumpIfNotEqual {379}
	373 Move X0, 0x475000
	374 Move X0, [X0+1208]
	375 Call 0x1C17CF4
	376 Move W8, 1
	377 Move X9, 0x754000
	378 Move [X9+1450], W8
	379 Move X8, 0x475000
	380 Move X8, [X8+1208]
	381 Move V2, [X31+20]
	382 NotImplemented "Instruction FABS not yet implemented."
	383 Move S3, 8
	384 Move X8, [X8]
	385 Multiply S2, S1, S2
	386 Move X8, [X8+184]
	387 Move V0, [X8]
	388 Multiply S0, S0, S3
	389 NotImplemented "Instruction FCMP not yet implemented."
	390 NotImplemented "Instruction FCSEL not yet implemented."
	391 NotImplemented "Instruction FCMP not yet implemented."
	392 Move W8, 0x7F800000
	393 Move S10, W8
	394 Move X0, X24
	395 Move X1, X31
	396 Call Camera.get_farClipPlane, X0
	397 Move X0, X24
	398 Move X1, X31
	399 Move V10, V0
	400 Call Camera.get_nearClipPlane, X0
	401 Subtract S0, S10, S0
	402 NotImplemented "Instruction FDIV not yet implemented."
	403 NotImplemented "Instruction FABS not yet implemented."
	404 Move X0, X24
	405 Move X1, X31
	406 Call Camera.get_cullingMask, X0
	407 Move W25, W0
	408 Move X0, X24
	409 Move X1, X31
	410 Call Camera.get_eventMask, X0
	411 Move X8, 0x761000
	412 Move X9, [X31+112]
	413 Move W10, [X31+120]
	414 Move X8, [X8+2520]
	415 Move W26, W0
	416 Move [X31+76], S11
	417 Move [X31+84], S12
	418 Move [X31+64], X9
	419 Move [X31+72], W10
	420 Move [X31+84], S13
	421 Compare X8, 0
	422 JumpIfNotEqual {429}
	423 Move X0, -51761152
	424 Add X0, X0, 3897
	425 Call 0x1C17CB8
	426 Move X8, X0
	427 Move X9, 0x761000
	428 Move [X9+2520], X0
	429 And W2, W26, W25
	430 Add X1, X31, 64
	431 Move X0, X24
	432 Move V0, V10
	433 NotImplemented "Instruction BLR not yet implemented."
	434 Move X8, [X20]
	435 Move X25, X0
	436 Move W9, [X8+224]
	437 Compare W9, 0
	438 JumpIfNotEqual {441}
	439 Move X0, X8
	440 Call 0x1C17DFC
	441 Move X0, X25
	442 Move X1, X31
	443 Move X2, X31
	444 Call Object.op_Inequality, X0, X1
	445 Move TEMP, X0
	446 And TEMP, TEMP, 1
	447 Compare TEMP, 1
	448 JumpIfNotEqual {470}
	449 Move X0, [X28]
	450 Move W8, [X0+224]
	451 Compare W8, 0
	452 JumpIfNotEqual {455}
	453 Call 0x1C17DFC
	454 Move X0, [X28]
	455 Move X8, [X0+184]
	456 Move X8, [X8+24]
	457 Compare X8, 0
	458 JumpIfEqual {653}
	459 Move W9, [X8+24]
	460 NotImplemented "Instruction CMP not yet implemented."
	461 Move [X8+48], X25
	462 Move X8, [X28]
	463 Move X8, [X8+184]
	464 Move X8, [X8+24]
	465 Compare X8, 0
	466 JumpIfEqual {653}
	467 Move W9, [X8+24]
	468 NotImplemented "Instruction CMP not yet implemented."
	469 Move X9, X24
	470 Move X0, X24
	471 Move X1, X31
	472 Call Camera.get_clearFlags, X0
	473 NotImplemented "Instruction CMP not yet implemented."
	474 Move X0, X24
	475 Move X1, X31
	476 Call Camera.get_clearFlags, X0
	477 NotImplemented "Instruction CMP not yet implemented."
	478 Move X0, [X28]
	479 Move W8, [X0+224]
	480 Compare W8, 0
	481 JumpIfNotEqual {484}
	482 Call 0x1C17DFC
	483 Move X0, [X28]
	484 Move X8, [X0+184]
	485 Move X8, [X8+24]
	486 Compare X8, 0
	487 JumpIfEqual {653}
	488 Move W9, [X8+24]
	489 NotImplemented "Instruction CMP not yet implemented."
	490 Move [X8+48], X31
	491 Move X8, [X28]
	492 Move X8, [X8+184]
	493 Move X8, [X8+24]
	494 Compare X8, 0
	495 JumpIfEqual {653}
	496 Move W9, [X8+24]
	497 NotImplemented "Instruction CMP not yet implemented."
	498 Move X9, X31
	499 Move [X8+56], X9
	500 Move X0, X24
	501 Move X1, X31
	502 Call Camera.get_cullingMask, X0
	503 Move W25, W0
	504 Move X0, X24
	505 Move X1, X31
	506 Call Camera.get_eventMask, X0
	507 Move X8, 0x761000
	508 Move X9, [X31+112]
	509 Move W10, [X31+120]
	510 Move X8, [X8+2528]
	511 Move W26, W0
	512 Move [X31+52], S11
	513 Move [X31+60], S12
	514 Move [X31+40], X9
	515 Move [X31+48], W10
	516 Move [X31+60], S13
	517 Compare X8, 0
	518 JumpIfNotEqual {525}
	519 Move X0, -51994624
	520 Add X0, X0, 1640
	521 Call 0x1C17CB8
	522 Move X8, X0
	523 Move X9, 0x761000
	524 Move [X9+2528], X0
	525 And W2, W26, W25
	526 Add X1, X31, 40
	527 Move X0, X24
	528 Move V0, V10
	529 NotImplemented "Instruction BLR not yet implemented."
	530 Move X8, [X20]
	531 Move X25, X0
	532 Move W9, [X8+224]
	533 Compare W9, 0
	534 JumpIfNotEqual {537}
	535 Move X0, X8
	536 Call 0x1C17DFC
	537 Move X0, X25
	538 Move X1, X31
	539 Move X2, X31
	540 Call Object.op_Inequality, X0, X1
	541 Move TEMP, X0
	542 And TEMP, TEMP, 1
	543 Compare TEMP, 1
	544 JumpIfNotEqual {566}
	545 Move X0, [X28]
	546 Move W8, [X0+224]
	547 Compare W8, 0
	548 JumpIfNotEqual {551}
	549 Call 0x1C17DFC
	550 Move X0, [X28]
	551 Move X8, [X0+184]
	552 Move X8, [X8+24]
	553 Compare X8, 0
	554 JumpIfEqual {653}
	555 Move W9, [X8+24]
	556 NotImplemented "Instruction CMP not yet implemented."
	557 Move [X8+64], X25
	558 Move X8, [X28]
	559 Move X8, [X8+184]
	560 Move X8, [X8+24]
	561 Compare X8, 0
	562 JumpIfEqual {653}
	563 Move W9, [X8+24]
	564 NotImplemented "Instruction CMP not yet implemented."
	565 Move [X8+72], X24
	566 Move X0, X24
	567 Move X1, X31
	568 Call Camera.get_clearFlags, X0
	569 NotImplemented "Instruction CMP not yet implemented."
	570 Move X0, X24
	571 Move X1, X31
	572 Call Camera.get_clearFlags, X0
	573 NotImplemented "Instruction CMP not yet implemented."
	574 Move X0, [X28]
	575 Move W8, [X0+224]
	576 Compare W8, 0
	577 JumpIfNotEqual {580}
	578 Call 0x1C17DFC
	579 Move X0, [X28]
	580 Move X8, [X0+184]
	581 Move X8, [X8+24]
	582 Compare X8, 0
	583 JumpIfEqual {653}
	584 Move W9, [X8+24]
	585 NotImplemented "Instruction CMP not yet implemented."
	586 Move [X8+64], X31
	587 Move X8, [X28]
	588 Move X8, [X8+184]
	589 Move X8, [X8+24]
	590 Compare X8, 0
	591 JumpIfEqual {653}
	592 Move W9, [X8+24]
	593 NotImplemented "Instruction CMP not yet implemented."
	594 Move [X8+72], X31
	595 Move W8, [X29+24]
	596 Add X22, X22, 1
	597 NotImplemented "Instruction CMP not yet implemented."
	598 Move X20, X31
	599 Move X19, X31
	600 Move X0, [X28]
	601 Move W8, [X0+224]
	602 Compare W8, 0
	603 JumpIfNotEqual {606}
	604 Call 0x1C17DFC
	605 Move X0, [X28]
	606 Move X8, [X0+184]
	607 Move X9, [X8+24]
	608 Compare X9, 0
	609 JumpIfEqual {653}
	610 Move W10, [X0+224]
	611 NotImplemented "Instruction LDRSW not yet implemented."
	612 Compare W10, 0
	613 JumpIfNotEqual {617}
	614 Call 0x1C17DFC
	615 Move X8, [X28]
	616 Move X8, [X8+184]
	617 NotImplemented "Instruction CMP not yet implemented."
	618 Move X8, [X8+24]
	619 Compare X8, 0
	620 JumpIfEqual {653}
	621 Move W9, [X8+24]
	622 NotImplemented "Instruction CMP not yet implemented."
	623 Add X8, X8, X20
	624 Move X1, [X8+32]
	625 Move X2, [X8+40]
	626 Move W0, W19
	627 Call SendMouseEvents.SendEvents, X0, X1
	628 Add X19, X19, 1
	629 Add X20, X20, 16
	630 Move X20, [X31+272]
	631 Move X19, [X31+280]
	632 Move X22, [X31+256]
	633 Move X21, [X31+264]
	634 Move X24, [X31+240]
	635 Move X23, [X31+248]
	636 Move X26, [X31+224]
	637 Move X25, [X31+232]
	638 Move X28, [X31+208]
	639 Move X27, [X31+216]
	640 Move X29, [X31+192]
	641 Move X30, [X31+200]
	642 Move D9, [X31+176]
	643 Move D8, [X31+184]
	644 Move D11, [X31+160]
	645 Move D10, [X31+168]
	646 Move D13, [X31+144]
	647 Move D12, [X31+152]
	648 Move D15, [X31+128]
	649 Move D14, [X31+136]
	650 Move [X8], W31
	651 Add X31, X31, 288
	652 Return 
	653 Call 0x1C17F20
	654 Call 0x1C17F28

Method: System.Void SendEvents(System.Int32 i, UnityEngine.SendMouseEvents/HitInfo hit)

Disassembly:
	0x03C86D80 ADRP X0, 0x4DA000
	0x03C86D84 LDR X0, [X0 + 0x850]
	0x03C86D88 BL 0x1C16D08
	0x03C86D8C MOV X1, X0
	0x03C86D90 MOV X0, X19
	0x03C86D94 BL 0x1C16DEC
	0x03C86D98 STP X30, X21, [X31 - 0x20]!
	0x03C86D9C STP X20, X19, [X31 + 0x10]
	0x03C86DA0 ADRP X21, 0x760000
	0x03C86DA4 LDRB W8, [X21 + 0xB61]
	0x03C86DA8 MOV X19, X1
	0x03C86DAC MOV X20, X0
	0x03C86DB0 TBNZ X8, 0x0, 0x3C86DD4
	0x03C86DB4 ADRP X0, 0x495000
	0x03C86DB8 LDR X0, [X0 + 0x7F8]
	0x03C86DBC BL 0x1C16CF4
	0x03C86DC0 ADRP X0, 0x46D000
	0x03C86DC4 LDR X0, [X0 + 0x6C0]
	0x03C86DC8 BL 0x1C16CF4
	0x03C86DCC MOVZ W8, 0x1
	0x03C86DD0 STRB W8, [X21 + 0xB61]
	0x03C86DD4 MOV X0, X20
	0x03C86DD8 MOV X1, X31
	0x03C86DDC BL 0x32277A8
	0x03C86DE0 TBZ X0, 0x0, 0x3C86DF4
	0x03C86DE4 LDP X20, X19, [X31 + 0x10]
	0x03C86DE8 MOV X0, X31
	0x03C86DEC LDP X30, X21, [X31], #0x20
	0x03C86DF0 RET
	0x03C86DF4 ADRP X21, 0x46D000
	0x03C86DF8 LDR X21, [X21 + 0x6C0]
	0x03C86DFC LDR X0, [X21]
	0x03C86E00 LDR W8, [X0 + 0xE0]
	0x03C86E04 CBNZ W8, 0x3C86E0C
	0x03C86E08 BL 0x1C16DFC
	0x03C86E0C MOV X0, X19
	0x03C86E10 MOV X1, X31
	0x03C86E14 MOV X2, X31
	0x03C86E18 BL 0x3395194
	0x03C86E1C TBNZ X0, 0x0, 0x3C86F38
	0x03C86E20 CBZ X19, 0x3C86F80
	0x03C86E24 MOV X0, X19
	0x03C86E28 MOV X1, X31
	0x03C86E2C BL 0x339703C
	0x03C86E30 TBNZ X0, 0x0, 0x3C86EB0
	0x03C86E34 ADRP X8, 0x495000
	0x03C86E38 LDR X0, [X21]
	0x03C86E3C LDR X8, [X8 + 0x7F8]
	0x03C86E40 LDR W9, [X0 + 0xE0]
	0x03C86E44 LDR X21, [X8]
	0x03C86E48 CBNZ W9, 0x3C86E50
	0x03C86E4C BL 0x1C16DFC
	0x03C86E50 MOV X0, X21
	0x03C86E54 MOV X1, X31
	0x03C86E58 BL 0x338C698
	0x03C86E5C LDR X8, [X19]
	0x03C86E60 MOV X1, X0
	0x03C86E64 MOV X0, X19
	0x03C86E68 LDR X9, [X8 + 0x298]
	0x03C86E6C LDR X2, [X8 + 0x2A0]
	0x03C86E70 BLR X9
	0x03C86E74 TBNZ X0, 0x0, 0x3C86EB0
	0x03C86E78 ADRP X21, 0x760000
	0x03C86E7C LDR X3, [X21 + 0xB58]
	0x03C86E80 CBNZ X3, 0x3C86E98
	0x03C86E84 ADRP X0, 0xFFFFFFFFFCE83000
	0x03C86E88 ADD X0, X0, 0xAE9
	0x03C86E8C BL 0x1C16CB8
	0x03C86E90 MOV X3, X0
	0x03C86E94 STR X0, [X21 + 0xB58]
	0x03C86E98 MOV X0, X20
	0x03C86E9C MOV X2, X19
	0x03C86EA0 LDP X20, X19, [X31 + 0x10]
	0x03C86EA4 MOV X1, X31
	0x03C86EA8 LDP X30, X21, [X31], #0x20
	0x03C86EAC BR X3
	0x03C86EB0 MOV X0, X19
	0x03C86EB4 BL 0x19903C0
	0x03C86EB8 LDR X8, [X19]
	0x03C86EBC MOV X0, X19
	0x03C86EC0 LDP X9, X1, [X8 + 0x1A8]
	0x03C86EC4 BLR X9
	0x03C86EC8 MOV X19, X0
	0x03C86ECC ADRP X0, 0x4DA000
	0x03C86ED0 LDR X0, [X0 + 0x858]
	0x03C86ED4 BL 0x1C16D08
	0x03C86ED8 MOV X20, X0
	0x03C86EDC ADRP X0, 0x4DA000
	0x03C86EE0 LDR X0, [X0 + 0x860]
	0x03C86EE4 BL 0x1C16D08
	0x03C86EE8 MOV X2, X0
	0x03C86EEC MOV X0, X20
	0x03C86EF0 MOV X1, X19
	0x03C86EF4 MOV X3, X31
	0x03C86EF8 BL 0x32274B8
	0x03C86EFC MOV X19, X0
	0x03C86F00 ADRP X0, 0x475000
	0x03C86F04 LDR X0, [X0 + 0x578]
	0x03C86F08 BL 0x1C16D08
	0x03C86F0C BL 0x1C16F10
	0x03C86F10 MOV X1, X19
	0x03C86F14 MOV X2, X31
	0x03C86F18 MOV X20, X0
	0x03C86F1C BL 0x3314A68
	0x03C86F20 ADRP X0, 0x4DA000
	0x03C86F24 LDR X0, [X0 + 0x868]
	0x03C86F28 BL 0x1C16D08
	0x03C86F2C MOV X1, X0
	0x03C86F30 MOV X0, X20
	0x03C86F34 BL 0x1C16DEC
	0x03C86F38 ADRP X0, 0x472000
	0x03C86F3C LDR X0, [X0 + 0x528]
	0x03C86F40 BL 0x1C16D08
	0x03C86F44 BL 0x1C16F10
	0x03C86F48 MOV X19, X0
	0x03C86F4C ADRP X0, 0x475000
	0x03C86F50 LDR X0, [X0 + 0x5E8]
	0x03C86F54 BL 0x1C16D08
	0x03C86F58 MOV X1, X0
	0x03C86F5C MOV X0, X19
	0x03C86F60 MOV X2, X31
	0x03C86F64 BL 0x330E100
	0x03C86F68 ADRP X0, 0x4DA000
	0x03C86F6C LDR X0, [X0 + 0x868]
	0x03C86F70 BL 0x1C16D08
	0x03C86F74 MOV X1, X0
	0x03C86F78 MOV X0, X19
	0x03C86F7C BL 0x1C16DEC
	0x03C86F80 BL 0x1C16F20
	0x03C86F84 STR X30, [X31 - 0x30]!
	0x03C86F88 STP X22, X21, [X31 + 0x10]
	0x03C86F8C STP X20, X19, [X31 + 0x20]
	0x03C86F90 ADRP X21, 0x760000
	0x03C86F94 LDRB W8, [X21 + 0xB62]
	0x03C86F98 MOV X19, X1
	0x03C86F9C MOV X20, X0
	0x03C86FA0 TBNZ X8, 0x0, 0x3C86FD0
	0x03C86FA4 ADRP X0, 0x478000
	0x03C86FA8 LDR X0, [X0 + 0x858]
	0x03C86FAC BL 0x1C16CF4
	0x03C86FB0 ADRP X0, 0x46D000
	0x03C86FB4 LDR X0, [X0 + 0x598]
	0x03C86FB8 BL 0x1C16CF4
	0x03C86FBC ADRP X0, 0x4D9000
	0x03C86FC0 LDR X0, [X0 + 0x650]
	0x03C86FC4 BL 0x1C16CF4
	0x03C86FC8 MOVZ W8, 0x1
	0x03C86FCC STRB W8, [X21 + 0xB62]
	0x03C86FD0 MOV X0, X20
	0x03C86FD4 MOV X1, X31
	0x03C86FD8 BL 0x32277A8
	0x03C86FDC TBZ X0, 0x0, 0x3C86FF0
	0x03C86FE0 LDP X20, X19, [X31 + 0x20]
	0x03C86FE4 LDP X22, X21, [X31 + 0x10]
	0x03C86FE8 LDR X30, [X31], #0x30
	0x03C86FEC RET
	0x03C86FF0 CBZ X19, 0x3C870C4
	0x03C86FF4 ADRP X8, 0x46D000
	0x03C86FF8 LDR X8, [X8 + 0x598]
	0x03C86FFC LDR X9, [X19]
	0x03C87000 LDR X10, [X8]
	0x03C87004 LDRB W8, [X9 + 0x130]
	0x03C87008 LDRB W11, [X10 + 0x130]
	0x03C8700C CMP W8, W11
	0x03C87010 B.CC 0x3C87078
	0x03C87014 LDR X9, [X9 + 0xC8]
	0x03C87018 ADD X11, X9, X11, 0x3, LSL
	0x03C8701C LDUR X11, [X11 - 0x8]
	0x03C87020 CMP X11, X10
	0x03C87024 B.NE 0x3C87078
	0x03C87028 ADRP X10, 0x477000
	0x03C8702C LDR X10, [X10 + 0x858]
	0x03C87030 LDR X10, [X10]
	0x03C87034 LDRB W11, [X10 + 0x130]
	0x03C87038 CMP W8, W11
	0x03C8703C B.CC 0x3C87050
	0x03C87040 ADD X11, X9, X11, 0x3, LSL
	0x03C87044 LDUR X11, [X11 - 0x8]
	0x03C87048 CMP X11, X10
	0x03C8704C B.EQ 0x3C87078
	0x03C87050 ADRP X10, 0x4D8000
	0x03C87054 LDR X10, [X10 + 0x650]
	0x03C87058 LDR X10, [X10]
	0x03C8705C LDRB W11, [X10 + 0x130]
	0x03C87060 CMP W8, W11
	0x03C87064 B.CC 0x3C870F8
	0x03C87068 ADD X8, X9, X11, 0x3, LSL
	0x03C8706C LDUR X8, [X8 - 0x8]
	0x03C87070 CMP X8, X10
	0x03C87074 B.NE 0x3C870F8
	0x03C87078 MOV X0, X19
	0x03C8707C MOV X1, X31
	0x03C87080 BL 0x33BE520
	0x03C87084 ADRP X22, 0x75F000
	0x03C87088 LDR X3, [X22 + 0xB58]
	0x03C8708C MOV X21, X0
	0x03C87090 CBNZ X3, 0x3C870A8
	0x03C87094 ADRP X0, 0xFFFFFFFFFCE82000
	0x03C87098 ADD X0, X0, 0xAE9
	0x03C8709C BL 0x1C16CB8
	0x03C870A0 MOV X3, X0
	0x03C870A4 STR X0, [X22 + 0xB58]
	0x03C870A8 MOV X0, X20
	0x03C870AC MOV X1, X19
	0x03C870B0 MOV X2, X21
	0x03C870B4 LDP X20, X19, [X31 + 0x20]
	0x03C870B8 LDP X22, X21, [X31 + 0x10]
	0x03C870BC LDR X30, [X31], #0x30
	0x03C870C0 BR X3
	0x03C870C4 ADRP X0, 0x471000
	0x03C870C8 LDR X0, [X0 + 0x528]
	0x03C870CC BL 0x1C16D08
	0x03C870D0 BL 0x1C16F10
	0x03C870D4 MOV X19, X0
	0x03C870D8 ADRP X0, 0x4D9000
	0x03C870DC LDR X0, [X0 + 0x870]
	0x03C870E0 BL 0x1C16D08
	0x03C870E4 MOV X1, X0
	0x03C870E8 MOV X0, X19
	0x03C870EC MOV X2, X31
	0x03C870F0 BL 0x330E100
	0x03C870F4 B 0x3C87128
	0x03C870F8 ADRP X0, 0x474000
	0x03C870FC LDR X0, [X0 + 0x578]
	0x03C87100 BL 0x1C16D08
	0x03C87104 BL 0x1C16F10
	0x03C87108 MOV X19, X0
	0x03C8710C ADRP X0, 0x4D9000
	0x03C87110 LDR X0, [X0 + 0x878]
	0x03C87114 BL 0x1C16D08
	0x03C87118 MOV X1, X0
	0x03C8711C MOV X0, X19
	0x03C87120 MOV X2, X31
	0x03C87124 BL 0x3314A68
	0x03C87128 ADRP X0, 0x4D9000
	0x03C8712C LDR X0, [X0 + 0x880]
	0x03C87130 BL 0x1C16D08
	0x03C87134 MOV X1, X0
	0x03C87138 MOV X0, X19
	0x03C8713C BL 0x1C16DEC
	0x03C87140 SUB X31, X31, 0xB0
	0x03C87144 STP X30, X21, [X31 + 0x90]
	0x03C87148 STP X20, X19, [X31 + 0xA0]
	0x03C8714C ADRP X21, 0x751000
	0x03C87150 LDRB W8, [X21 + 0x783]
	0x03C87154 MOV X20, X1
	0x03C87158 MOV X19, X0
	0x03C8715C MOVI V16.2D, 0x0
	0x03C87160 STP S0, S1, [X31 + 0x8]
	0x03C87164 STP S2, S3, [X31 + 0x10]
	0x03C87168 STP S4, S5, [X31 + 0x18]
	0x03C8716C STP V16, V16, [X31 + 0x60]
	0x03C87170 STP V16, V16, [X31 + 0x40]
	0x03C87174 STUR V16, [X31 + 0x7C]
	0x03C87178 STP V16, V16, [X31 + 0x20]
	0x03C8717C STP S7, S7, [X31 + 0x74]
	0x03C87180 STP S6, S6, [X31 + 0x5C]
	0x03C87184 STR S6, [X31 + 0x64]
	0x03C87188 CBNZ W8, 0x3C871A0
	0x03C8718C ADRP X0, 0x46C000
	0x03C87190 LDR X0, [X0 + 0x5A0]
	0x03C87194 BL 0x1C16CF4
	0x03C87198 MOVZ W8, 0x1
	0x03C8719C STRB W8, [X21 + 0x783]
	0x03C871A0 ADRP X8, 0x46C000
	0x03C871A4 LDR X8, [X8 + 0x5A0]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+8], X2
	003 Move [X31+16], X30
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X23, 0x761000
	011 Move [X31], X1
	012 Move X22, 0x4DB000
	013 Move W8, [X23+2723]
	014 Move X22, [X22+2032]
	015 Move X19, X2
	016 Move X20, X1
	017 Move W21, W0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {48}
	022 Move X0, 0x4DB000
	023 Move X0, [X0+2032]
	024 Call 0x1C17CF4
	025 Move X0, 0x4DB000
	026 Move X0, [X0+2056]
	027 Call 0x1C17CF4
	028 Move X0, 0x4DB000
	029 Move X0, [X0+2064]
	030 Call 0x1C17CF4
	031 Move X0, 0x4DB000
	032 Move X0, [X0+2072]
	033 Call 0x1C17CF4
	034 Move X0, 0x4DB000
	035 Move X0, [X0+2080]
	036 Call 0x1C17CF4
	037 Move X0, 0x4DB000
	038 Move X0, [X0+2088]
	039 Call 0x1C17CF4
	040 Move X0, 0x4DB000
	041 Move X0, [X0+2096]
	042 Call 0x1C17CF4
	043 Move X0, 0x4DB000
	044 Move X0, [X0+2104]
	045 Call 0x1C17CF4
	046 Move W8, 1
	047 Move [X23+2723], W8
	048 Move X0, [X22]
	049 Move W8, [X0+224]
	050 Compare W8, 0
	051 JumpIfNotEqual {54}
	052 Call 0x1C17DFC
	053 Move X0, [X22]
	054 Move X8, [X0+184]
	055 Move W9, [X8+56]
	056 Compare W9, 0
	057 JumpIfEqual {92}
	058 Move X0, X20
	059 Move X1, X19
	060 Call HitInfo.op_Implicit, X0
	061 Move TEMP, X0
	062 And TEMP, TEMP, 1
	063 Compare TEMP, 1
	064 JumpIfNotEqual {134}
	065 Move X0, [X22]
	066 Move W8, [X0+224]
	067 Compare W8, 0
	068 JumpIfNotEqual {71}
	069 Call 0x1C17DFC
	070 Move X0, [X22]
	071 Move X8, [X0+184]
	072 Move X9, [X8+16]
	073 Compare X9, 0
	074 JumpIfEqual {316}
	075 Move W8, [X9+24]
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Move X8, W21
	078 Add X9, X9, X8
	079 Move [X9+32], X20
	080 Move [X9+40], X19
	081 Move X9, [X22]
	082 Move X9, [X9+184]
	083 Move X9, [X9+16]
	084 Compare X9, 0
	085 JumpIfEqual {316}
	086 Move W10, [X9+24]
	087 NotImplemented "Instruction CMP not yet implemented."
	088 Move X10, 0x4DB000
	089 Move X10, [X10+2104]
	090 Add X8, X9, X8
	091 Move X1, [X10]
	092 Move W9, [X0+224]
	093 Move W24, [X8+57]
	094 Compare W9, 0
	095 JumpIfNotEqual {99}
	096 Call 0x1C17DFC
	097 Move X8, [X22]
	098 Move X8, [X8+184]
	099 Move X8, [X8+16]
	100 Compare X8, 0
	101 JumpIfEqual {316}
	102 Move W9, [X8+24]
	103 NotImplemented "Instruction CMP not yet implemented."
	104 Move W9, W21
	105 Move X23, W9
	106 Add X8, X8, X23
	107 Move X0, [X8+32]
	108 Move X1, [X8+40]
	109 Call HitInfo.op_Implicit, X0
	110 Compare W24, 0
	111 JumpIfEqual {244}
	112 Move TEMP, X0
	113 And TEMP, TEMP, 1
	114 Compare TEMP, 1
	115 JumpIfNotEqual {134}
	116 Move X0, [X22]
	117 Move W8, [X0+224]
	118 Compare W8, 0
	119 JumpIfNotEqual {122}
	120 Call 0x1C17DFC
	121 Move X0, [X22]
	122 Move X8, [X0+184]
	123 Move X8, [X8+16]
	124 Compare X8, 0
	125 JumpIfEqual {316}
	126 Move W9, [X8+24]
	127 NotImplemented "Instruction CMP not yet implemented."
	128 Move X9, 0x4DB000
	129 Move X9, [X9+2056]
	130 Add X8, X8, X23
	131 Move X1, [X9]
	132 Add X0, X8, 32
	133 Call HitInfo.SendMessage, X0, X1
	134 Move X0, [X22]
	135 Move W8, [X0+224]
	136 Compare W8, 0
	137 JumpIfNotEqual {140}
	138 Call 0x1C17DFC
	139 Move X0, [X22]
	140 Move X8, [X0+184]
	141 Move X8, [X8+8]
	142 Compare X8, 0
	143 JumpIfEqual {316}
	144 Move W9, [X8+24]
	145 NotImplemented "Instruction CMP not yet implemented."
	146 Move W9, W21
	147 Move X23, W9
	148 Add X8, X8, X23
	149 Move X2, [X8+32]
	150 Move X3, [X8+40]
	151 Move X0, X20
	152 Move X1, X19
	153 Call HitInfo.Compare, X0, X1
	154 Move TEMP, X0
	155 And TEMP, TEMP, 1
	156 Compare TEMP, 1
	157 JumpIfNotEqual {165}
	158 Move X0, X20
	159 Move X1, X19
	160 Call HitInfo.op_Implicit, X0
	161 Move TEMP, X0
	162 And TEMP, TEMP, 1
	163 Compare TEMP, 1
	164 JumpIfEqual {215}
	165 Move X0, [X22]
	166 Move W8, [X0+224]
	167 Compare W8, 0
	168 JumpIfNotEqual {171}
	169 Call 0x1C17DFC
	170 Move X0, [X22]
	171 Move X8, [X0+184]
	172 Move X8, [X8+8]
	173 Compare X8, 0
	174 JumpIfEqual {316}
	175 Move W9, [X8+24]
	176 NotImplemented "Instruction CMP not yet implemented."
	177 Add X8, X8, X23
	178 Move X0, [X8+32]
	179 Move X1, [X8+40]
	180 Call HitInfo.op_Implicit, X0
	181 Move TEMP, X0
	182 And TEMP, TEMP, 1
	183 Compare TEMP, 1
	184 JumpIfNotEqual {203}
	185 Move X0, [X22]
	186 Move W8, [X0+224]
	187 Compare W8, 0
	188 JumpIfNotEqual {191}
	189 Call 0x1C17DFC
	190 Move X0, [X22]
	191 Move X8, [X0+184]
	192 Move X8, [X8+8]
	193 Compare X8, 0
	194 JumpIfEqual {316}
	195 Move W9, [X8+24]
	196 NotImplemented "Instruction CMP not yet implemented."
	197 Move X9, 0x4DA000
	198 Move X9, [X9+2072]
	199 Add X8, X8, X23
	200 Add X0, X8, 32
	201 Move X1, [X9]
	202 Call HitInfo.SendMessage, X0, X1
	203 Move X0, X20
	204 Move X1, X19
	205 Call HitInfo.op_Implicit, X0
	206 Move TEMP, X0
	207 And TEMP, TEMP, 1
	208 Compare TEMP, 1
	209 JumpIfNotEqual {220}
	210 Move X8, 0x4DA000
	211 Move X8, [X8+2096]
	212 Add X0, X31, 0
	213 Move X1, [X8]
	214 Call HitInfo.SendMessage, X0, X1
	215 Move X8, 0x4DA000
	216 Move X8, [X8+2064]
	217 Add X0, X31, 0
	218 Move X1, [X8]
	219 Call HitInfo.SendMessage, X0, X1
	220 Move X0, [X22]
	221 Move W8, [X0+224]
	222 Compare W8, 0
	223 JumpIfNotEqual {226}
	224 Call 0x1C17DFC
	225 Move X0, [X22]
	226 Move X8, [X0+184]
	227 Move X8, [X8+8]
	228 Compare X8, 0
	229 JumpIfEqual {316}
	230 Move W9, [X8+24]
	231 NotImplemented "Instruction CMP not yet implemented."
	232 Add X8, X8, X23
	233 Move [X8+32], X20
	234 Move [X8+40], X19
	235 Move X20, [X31+64]
	236 Move X19, [X31+72]
	237 Move X22, [X31+48]
	238 Move X21, [X31+56]
	239 Move X24, [X31+32]
	240 Move X23, [X31+40]
	241 Move X30, [X31+16]
	242 Add X31, X31, 80
	243 Return 
	244 Move TEMP, X0
	245 And TEMP, TEMP, 1
	246 Compare TEMP, 1
	247 JumpIfNotEqual {134}
	248 Move X0, [X22]
	249 Move W8, [X0+224]
	250 Compare W8, 0
	251 JumpIfNotEqual {254}
	252 Call 0x1C17DFC
	253 Move X0, [X22]
	254 Move X8, [X0+184]
	255 Move X8, [X8+16]
	256 Compare X8, 0
	257 JumpIfEqual {316}
	258 Move W9, [X8+24]
	259 NotImplemented "Instruction CMP not yet implemented."
	260 Add X8, X8, X23
	261 Move X2, [X8+32]
	262 Move X3, [X8+40]
	263 Move X0, X20
	264 Move X1, X19
	265 Call HitInfo.Compare, X0, X1
	266 Move TEMP, X0
	267 And TEMP, TEMP, 1
	268 Compare TEMP, 1
	269 JumpIfNotEqual {288}
	270 Move X0, [X22]
	271 Move W8, [X0+224]
	272 Compare W8, 0
	273 JumpIfNotEqual {276}
	274 Call 0x1C17DFC
	275 Move X0, [X22]
	276 Move X8, [X0+184]
	277 Move X8, [X8+16]
	278 Compare X8, 0
	279 JumpIfEqual {316}
	280 Move W9, [X8+24]
	281 NotImplemented "Instruction CMP not yet implemented."
	282 Move X9, 0x4DA000
	283 Move X9, [X9+2088]
	284 Add X8, X8, X23
	285 Add X0, X8, 32
	286 Move X1, [X9]
	287 Call HitInfo.SendMessage, X0, X1
	288 Move X0, [X22]
	289 Move W8, [X0+224]
	290 Compare W8, 0
	291 JumpIfNotEqual {294}
	292 Call 0x1C17DFC
	293 Move X0, [X22]
	294 Move X8, [X0+184]
	295 Move X8, [X8+16]
	296 Compare X8, 0
	297 JumpIfEqual {316}
	298 Move W9, [X8+24]
	299 NotImplemented "Instruction CMP not yet implemented."
	300 Move X9, 0x4DA000
	301 Move X9, [X9+2080]
	302 Add X8, X8, X23
	303 Add X0, X8, 32
	304 Move X1, [X9]
	305 Call HitInfo.SendMessage, X0, X1
	306 Move X8, [X22]
	307 Move X8, [X8+184]
	308 Move X8, [X8+16]
	309 Compare X8, 0
	310 JumpIfEqual {316}
	311 Move W9, [X8+24]
	312 NotImplemented "Instruction CMP not yet implemented."
	313 Add X8, X8, X23
	314 Move [X8+32], X31
	315 Move [X8+40], X31
	316 Call 0x1C17F20
	317 Call 0x1C17F28

Method: System.Void .cctor()

Disassembly:
	0x03C87320 BR X2
	0x03C87324 STP X30, X21, [X31 - 0x20]!
	0x03C87328 STP X20, X19, [X31 + 0x10]
	0x03C8732C ADRP X21, 0x75F000
	0x03C87330 LDR X2, [X21 + 0xB78]
	0x03C87334 MOV X19, X1
	0x03C87338 MOV X20, X0
	0x03C8733C CBNZ X2, 0x3C87354
	0x03C87340 ADRP X0, 0xFFFFFFFFFCE6E000
	0x03C87344 ADD X0, X0, 0x836
	0x03C87348 BL 0x1C16CB8
	0x03C8734C MOV X2, X0
	0x03C87350 STR X0, [X21 + 0xB78]
	0x03C87354 MOV X0, X20
	0x03C87358 MOV X1, X19
	0x03C8735C LDP X20, X19, [X31 + 0x10]
	0x03C87360 LDP X30, X21, [X31], #0x20
	0x03C87364 BR X2
	0x03C87368 STP X30, X21, [X31 - 0x20]!
	0x03C8736C STP X20, X19, [X31 + 0x10]
	0x03C87370 ADRP X21, 0x75F000
	0x03C87374 LDR X2, [X21 + 0xB68]
	0x03C87378 MOV W19, W1
	0x03C8737C MOV X20, X0
	0x03C87380 CBNZ X2, 0x3C87398
	0x03C87384 ADRP X0, 0xFFFFFFFFFCE9C000
	0x03C87388 ADD X0, X0, 0x7FD
	0x03C8738C BL 0x1C16CB8
	0x03C87390 MOV X2, X0
	0x03C87394 STR X0, [X21 + 0xB68]
	0x03C87398 AND W1, W19, 0x1
	0x03C8739C MOV X0, X20
	0x03C873A0 LDP X20, X19, [X31 + 0x10]
	0x03C873A4 LDP X30, X21, [X31], #0x20
	0x03C873A8 BR X2
	0x03C873AC STR X30, [X31 - 0x20]!
	0x03C873B0 STP X20, X19, [X31 + 0x10]
	0x03C873B4 ADRP X20, 0x75F000
	0x03C873B8 LDR X2, [X20 + 0xB68]
	0x03C873BC MOV X19, X0
	0x03C873C0 CBNZ X2, 0x3C873D8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x760000
	006 Move X19, 0x4DA000
	007 Move X20, 0x4DA000
	008 Move W8, [X21+2724]
	009 Move X19, [X19+2032]
	010 Move X20, [X20+2112]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x4DA000
	016 Move X0, [X0+2112]
	017 Call 0x1C17CF4
	018 Move X0, 0x4DA000
	019 Move X0, [X0+2032]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X21+2724], W8
	023 Move X8, [X19]
	024 Move W1, 3
	025 Move X8, [X8+184]
	026 Move [X8], W31
	027 Move X0, [X20]
	028 Call 0x1C17D6C
	029 Move X8, [X19]
	030 Move W1, 3
	031 Move X8, [X8+184]
	032 Move [X8+8], X0
	033 Move X0, [X20]
	034 Call 0x1C17D6C
	035 Move X8, [X19]
	036 Move W1, 3
	037 Move X8, [X8+184]
	038 Move [X8+16], X0
	039 Move X0, [X20]
	040 Call 0x1C17D6C
	041 Move X8, [X19]
	042 Move X20, [X31+16]
	043 Move X19, [X31+24]
	044 Move X8, [X8+184]
	045 Move [X8+24], X0
	046 Move X30, [X31+32]
	047 Move X21, [X31+40]
	048 Return 

