Type: UnityEngine.SendMouseEvents/HitInfo

Method: System.Void SendMessage(System.String name)

Disassembly:
	0x03C87248 STR S2, [X0 + 0x8]
	0x03C8724C RET
	0x03C87250 STP S0, S1, [X0 + 0xC]
	0x03C87254 STR S2, [X0 + 0x14]
	0x03C87258 RET
	0x03C8725C STR S0, [X0 + 0x6C]
	0x03C87260 RET
	0x03C87264 STR S0, [X0 + 0x70]
	0x03C87268 RET

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0]
	003 Compare X0, 0
	004 JumpIfEqual {11}
	005 Move W3, 1
	006 Move X2, X31
	007 Move X4, X31
	008 Move X30, [X31+16]
	009 Call GameObject.SendMessage, X0, X1, X2, X3
	010 Return 
	011 Call 0x1C17F20

Method: System.Boolean op_Implicit(UnityEngine.SendMouseEvents/HitInfo exists)

Disassembly:
	0x03C871A8 ADRP X10, 0xFFFFFFFFFCE63000
	0x03C871AC LDR V1, [X10 + 0x104]
	0x03C871B0 MOVZ W9, 0xFA35
	0x03C871B4 LDR X8, [X8]
	0x03C871B8 MOVK W9, 0x3C8E0000
	0x03C871BC UNIMPLEMENTED
	0x03C871C0 MOVZ W9, 0x2
	0x03C871C4 LDR X8, [X8 + 0xB8]
	0x03C871C8 ADRP X21, 0x75F000
	0x03C871CC MOVZ W10, 0x5
	0x03C871D0 LDR V2, [X8]
	0x03C871D4 LDR V3, [X8 + 0x8]
	0x03C871D8 STR W9, [X31 + 0x88]
	0x00000000 INVALID
	0x03C871E0 FMUL S3, S3, S1
	0x03C871E4 STUR D2, [X31 + 0x44]
	0x03C871E8 STR S3, [X31 + 0x4C]
	0x03C871EC LDR V2, [X8]
	0x03C871F0 LDR V3, [X8 + 0x8]
	0x03C871F4 LDR X8, [X21 + 0xB78]
	0x03C871F8 STR W9, [X31 + 0x88]
	0x00000000 INVALID
	0x03C87200 FMUL S1, S3, S1
	0x03C87204 STR D0, [X31 + 0x50]
	0x03C87208 STR S1, [X31 + 0x58]
	0x03C8720C STP W20, W10, [X31 + 0x68]
	0x03C87210 CBNZ X8, 0x3C87228
	0x03C87214 ADRP X0, 0xFFFFFFFFFCE6E000
	0x03C87218 ADD X0, X0, 0x836
	0x03C8721C BL 0x1C16CB8
	0x03C87220 MOV X8, X0
	0x03C87224 STR X0, [X21 + 0xB78]
	0x03C87228 ADD X1, X31, 0x8
	0x03C8722C MOV X0, X19
	0x03C87230 BLR X8
	0x03C87234 LDP X20, X19, [X31 + 0xA0]
	0x03C87238 LDP X30, X21, [X31 + 0x90]
	0x03C8723C ADD X31, X31, 0xB0
	0x03C87240 RET
	0x03C87244 STP S0, S1, [X0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x760000
	007 Move X21, 0x46D000
	008 Move W8, [X22+2725]
	009 Move X21, [X21+1432]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x46D000
	017 Move X0, [X0+1432]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+2725], W8
	021 Move X0, [X21]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move X0, X20
	027 Move X1, X31
	028 Move X2, X31
	029 Call Object.op_Inequality, X0, X1
	030 Move TEMP, X0
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfNotEqual {49}
	034 Move X0, [X21]
	035 Move W8, [X0+224]
	036 Compare W8, 0
	037 JumpIfNotEqual {39}
	038 Call 0x1C17DFC
	039 Move X0, X19
	040 Move X20, [X31+32]
	041 Move X19, [X31+40]
	042 Move X22, [X31+16]
	043 Move X21, [X31+24]
	044 Move X1, X31
	045 Move X2, X31
	046 Move X30, [X31+48]
	047 Call Object.op_Inequality, X0, X1
	048 Return X0
	049 Move X20, [X31+32]
	050 Move X19, [X31+40]
	051 Move X22, [X31+16]
	052 Move X21, [X31+24]
	053 Move W0, W31
	054 Move X30, [X31+48]
	055 Return X0

Method: System.Boolean Compare(UnityEngine.SendMouseEvents/HitInfo lhs, UnityEngine.SendMouseEvents/HitInfo rhs)

Disassembly:
	0x03C8726C STP S0, S0, [X0 + 0x54]
	0x03C87270 STR S0, [X0 + 0x5C]
	0x03C87274 RET
	0x03C87278 ADRP X8, 0xFFFFFFFFFCE63000
	0x03C8727C LDR W9, [X0 + 0x80]
	0x03C87280 LDR V3, [X8 + 0x104]
	0x03C87284 ORR W8, W9, 0x2
	0x03C87288 FMUL S0, S0, S3
	0x03C8728C FMUL S1, S1, S3
	0x03C87290 FMUL S2, S2, S3
	0x03C87294 STP S0, S1, [X0 + 0x3C]
	0x03C87298 STR S2, [X0 + 0x44]
	0x03C8729C STR W8, [X0 + 0x80]
	0x03C872A0 RET
	0x03C872A4 ADRP X8, 0xFFFFFFFFFCE63000
	0x03C872A8 LDR W9, [X0 + 0x80]
	0x03C872AC LDR V3, [X8 + 0x104]
	0x03C872B0 ORR W8, W9, 0x2
	0x03C872B4 FMUL S0, S0, S3
	0x03C872B8 FMUL S1, S1, S3
	0x03C872BC FMUL S2, S2, S3
	0x03C872C0 STP S0, S1, [X0 + 0x48]
	0x03C872C4 STR S2, [X0 + 0x50]
	0x03C872C8 STR W8, [X0 + 0x80]
	0x03C872CC RET
	0x03C872D0 STR W1, [X0 + 0x60]
	0x03C872D4 RET
	0x03C872D8 STR W1, [X0 + 0x64]
	0x03C872DC RET
	0x03C872E0 STP X30, X21, [X31 - 0x20]!
	0x03C872E4 STP X20, X19, [X31 + 0x10]
	0x03C872E8 ADRP X21, 0x75F000
	0x03C872EC LDR X2, [X21 + 0xB78]
	0x03C872F0 MOV X19, X1
	0x03C872F4 MOV X20, X0
	0x03C872F8 CBNZ X2, 0x3C87310
	0x03C872FC ADRP X0, 0xFFFFFFFFFCE6E000
	0x03C87300 ADD X0, X0, 0x836
	0x03C87304 BL 0x1C16CB8
	0x03C87308 MOV X2, X0
	0x03C8730C STR X0, [X21 + 0xB78]
	0x03C87310 MOV X0, X20
	0x03C87314 MOV X1, X19
	0x03C87318 LDP X20, X19, [X31 + 0x10]
	0x03C8731C LDP X30, X21, [X31], #0x20

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0x760000
	009 Move X23, 0x46D000
	010 Move W8, [X24+2726]
	011 Move X23, [X23+1432]
	012 Move X19, X3
	013 Move X21, X2
	014 Move X20, X1
	015 Move X22, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0x46D000
	021 Move X0, [X0+1432]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X24+2726], W8
	025 Move X0, [X23]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 Move X0, X22
	031 Move X1, X21
	032 Move X2, X31
	033 Call Object.op_Equality, X0, X1
	034 Move TEMP, X0
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfNotEqual {55}
	038 Move X0, [X23]
	039 Move W8, [X0+224]
	040 Compare W8, 0
	041 JumpIfNotEqual {43}
	042 Call 0x1C17DFC
	043 Move X0, X20
	044 Move X1, X19
	045 Move X20, [X31+48]
	046 Move X19, [X31+56]
	047 Move X22, [X31+32]
	048 Move X21, [X31+40]
	049 Move X24, [X31+16]
	050 Move X23, [X31+24]
	051 Move X2, X31
	052 Move X30, [X31+64]
	053 Call Object.op_Equality, X0, X1
	054 Return X0
	055 Move X20, [X31+48]
	056 Move X19, [X31+56]
	057 Move X22, [X31+32]
	058 Move X21, [X31+40]
	059 Move X24, [X31+16]
	060 Move X23, [X31+24]
	061 Move W0, W31
	062 Move X30, [X31+64]
	063 Return X0

