Type: Fusion.Photon.Realtime.FusionRelayClient

Method: System.Void StartFallbackSendAck()

Disassembly:
	0x01E45D64 BLR X8
	0x01E45D68 ADRP X8, 0x22AE000
	0x01E45D6C LDR X8, [X8 + 0xE00]
	0x01E45D70 LDR X1, [X8]
	0x01E45D74 MOV X0, X24
	0x01E45D78 BL 0x1C16E00
	0x01E45D7C CMP X0, 0x0
	0x01E45D80 CSEL X20, X20, X0, EQ
	0x01E45D84 CBZ X0, 0x1E45EAC
	0x01E45D88 CBZ X20, 0x1E45DF8
	0x01E45D8C LDR X8, [X20]
	0x01E45D90 ADRP X10, 0x22AE000
	0x01E45D94 LDRH W9, [X8 + 0x12E]
	0x01E45D98 LDR X10, [X10 + 0xE00]
	0x01E45D9C LDR X1, [X10]
	0x01E45DA0 CBZ X9, 0x1E45DC4
	0x01E45DA4 LDR X10, [X8 + 0xB0]
	0x01E45DA8 ADD X10, X10, 0x8
	0x01E45DAC LDUR X11, [X10 - 0x8]
	0x01E45DB0 CMP X11, X1
	0x01E45DB4 B.EQ 0x1E45DD4
	0x01E45DB8 SUBS X9, X9, 0x1
	0x01E45DBC ADD X10, X10, 0x10
	0x01E45DC0 B.NE 0x1E45DAC
	0x01E45DC4 MOV X0, X20
	0x01E45DC8 MOV W2, W31
	0x01E45DCC BL 0x1C5C788
	0x01E45DD0 B 0x1E45DE0
	0x01E45DD4 LDRSW X9, [X10]
	0x01E45DD8 ADD X8, X8, X9, 0x4, LSL
	0x01E45DDC ADD X0, X8, 0x138
	0x01E45DE0 LDP X8, X1, [X0]
	0x01E45DE4 MOV X0, X20
	0x01E45DE8 BLR X8
	0x01E45DEC B 0x1E45EAC
	0x01E45DF0 BL 0x1C16F20
	0x01E45DF4 B 0x1E45EF4
	0x01E45DF8 BL 0x1C16F20
	0x01E45DFC B 0x1E45ED4
	0x01E45E00 B 0x1E45E10
	0x01E45E04 B 0x1E45E10
	0x01E45E08 B 0x1E45E10
	0x01E45E0C B 0x1E45E10
	0x01E45E10 MOV X23, X0
	0x01E45E14 CMP W1, 0x1
	0x01E45E18 B.NE 0x1E45F00
	0x01E45E1C MOV X0, X23
	0x01E45E20 BL 0x3EB1AD0
	0x01E45E24 MOV X23, X0
	0x01E45E28 ADRP X0, 0x22B4000
	0x01E45E2C LDR X0, [X0 + 0xCC0]
	0x01E45E30 BL 0x1C16D08
	0x01E45E34 LDR X8, [X23]
	0x01E45E38 LDR X1, [X8]
	0x01E45E3C BL 0x1C17270
	0x01E45E40 TBZ X0, 0x0, 0x1E45ED4
	0x01E45E44 BL 0x3EB1AE0
	0x01E45E48 B 0x1E45BE4
	0x01E45E4C LDR W8, [X19 + 0x18]
	0x01E45E50 ADD W27, W27, 0x1
	0x01E45E54 CMP W27, W8
	0x01E45E58 B.LT 0x1E45AAC
	0x01E45E5C MOV W9, W31
	0x01E45E60 TBNZ X28, 0x0, 0x1E45A98
	0x01E45E64 ADRP X0, 0x22AE000
	0x01E45E68 LDR X0, [X0 + 0x5B0]
	0x01E45E6C BL 0x1C16D08
	0x01E45E70 BL 0x1C16F10
	0x01E45E74 MOV X19, X0
	0x01E45E78 ADRP X0, 0x22B6000
	0x01E45E7C LDR X0, [X0 + 0xCF8]
	0x01E45E80 BL 0x1C16D08
	0x01E45E84 MOV X1, X0
	0x01E45E88 MOV X0, X19
	0x01E45E8C MOV X2, X31
	0x01E45E90 BL 0x337DF1C
	0x01E45E94 ADRP X0, 0x22B6000
	0x01E45E98 LDR X0, [X0 + 0xD00]
	0x01E45E9C BL 0x1C16D08
	0x01E45EA0 MOV X1, X0
	0x01E45EA4 MOV X0, X19
	0x01E45EA8 BL 0x1C16DEC
	0x01E45EAC MOV X0, X23
	0x01E45EB0 LDP X20, X19, [X31 + 0x50]
	0x01E45EB4 LDP X22, X21, [X31 + 0x40]
	0x01E45EB8 LDP X24, X23, [X31 + 0x30]
	0x01E45EBC LDP X26, X25, [X31 + 0x20]
	0x01E45EC0 LDP X28, X27, [X31 + 0x10]
	0x01E45EC4 LDP X29, X30, [X31], #0x60
	0x01E45EC8 RET
	0x01E45ECC BL 0x1C16F20
	0x01E45ED0 BL 0x1C16F28
	0x01E45ED4 MOVZ W0, 0x8
	0x01E45ED8 BL 0x3EB1AF0
	0x01E45EDC LDR X8, [X23]
	0x01E45EE0 STR X8, [X0]
	0x01E45EE4 ADRP X1, 0x206F000
	0x01E45EE8 ADD X1, X1, 0xE58
	0x01E45EEC MOV X2, X31
	0x01E45EF0 BL 0x3EB1B00
	0x01E45EF4 B 0x1E45EF8
	0x01E45EF8 MOV X23, X0
	0x01E45EFC BL 0x3EB1AE0
	0x01E45F00 MOV X0, X23
	0x01E45F04 BL 0x1D2C690
	0x01E45F08 BL 0x1990590
	0x01E45F0C STR X30, [X31 - 0x40]!
	0x01E45F10 STP X24, X23, [X31 + 0x10]
	0x01E45F14 STP X22, X21, [X31 + 0x20]
	0x01E45F18 STP X20, X19, [X31 + 0x30]
	0x01E45F1C ADRP X21, 0x2593000
	0x01E45F20 LDRB W8, [X21 + 0xFE9]
	0x01E45F24 MOV X19, X1
	0x01E45F28 MOV X20, X0
	0x01E45F2C TBNZ X8, 0x0, 0x1E45F44
	0x01E45F30 ADRP X0, 0x22B6000
	0x01E45F34 LDR X0, [X0 + 0xCB0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x2594000
	007 Move X22, 0x22AF000
	008 Move W8, [X20+4023]
	009 Move X22, [X22+1432]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {38}
	015 Move X0, 0x22B7000
	016 Move X0, [X0+3152]
	017 Call 0x1C17CF4
	018 Move X0, 0x22B7000
	019 Move X0, [X0+3160]
	020 Call 0x1C17CF4
	021 Move X0, 0x22AF000
	022 Move X0, [X0+2648]
	023 Call 0x1C17CF4
	024 Move X0, 0x22AF000
	025 Move X0, [X0+1432]
	026 Call 0x1C17CF4
	027 Move X0, 0x22B7000
	028 Move X0, [X0+3168]
	029 Call 0x1C17CF4
	030 Move X0, 0x22AF000
	031 Move X0, [X0+1728]
	032 Call 0x1C17CF4
	033 Move X0, 0x22B7000
	034 Move X0, [X0+3176]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X20+4023], W8
	038 Move X0, [X22]
	039 Move X20, [X19+392]
	040 Move W8, [X0+224]
	041 Compare W8, 0
	042 JumpIfNotEqual {44}
	043 Call 0x1C17DFC
	044 Move X0, X20
	045 Move X1, X31
	046 Move X2, X31
	047 Call Object.op_Equality, X0, X1
	048 Move TEMP, X0
	049 And TEMP, TEMP, 1
	050 Compare TEMP, 1
	051 JumpIfNotEqual {123}
	052 Move X8, 0x22B7000
	053 Move X8, [X8+3168]
	054 Move W1, 1
	055 Move X0, [X8]
	056 Call 0x1C17D6C
	057 Move X8, 0x22AF000
	058 Move X8, [X8+1728]
	059 Move X9, 0x22B7000
	060 Move X20, X0
	061 Move X8, [X8]
	062 Move X9, [X9+3152]
	063 Move W10, [X8+224]
	064 Move X21, [X9]
	065 Compare W10, 0
	066 JumpIfNotEqual {69}
	067 Move X0, X8
	068 Call 0x1C17DFC
	069 Move X0, X21
	070 Move X1, X31
	071 Call Type.GetTypeFromHandle, X0
	072 Compare X20, 0
	073 JumpIfEqual {131}
	074 Move X21, X0
	075 Compare X0, 0
	076 JumpIfEqual {83}
	077 Move X8, [X20]
	078 Move X0, X21
	079 Move X1, [X8+64]
	080 Call 0x1C17E00
	081 Compare X0, 0
	082 JumpIfEqual {133}
	083 Move W8, [X20+24]
	084 Compare W8, 0
	085 JumpIfEqual {132}
	086 Move [X20+32], X21
	087 Move X8, 0x22AF000
	088 Move X8, [X8+2648]
	089 Move X0, [X8]
	090 Call 0x1C17F10
	091 Move X8, 0x22B7000
	092 Move X8, [X8+3176]
	093 Move X2, X20
	094 Move X3, X31
	095 Move X21, X0
	096 Move X1, [X8]
	097 Call GameObject..ctor, X0, X1, X2
	098 Compare X21, 0
	099 JumpIfEqual {131}
	100 Move W1, 8
	101 Move X0, X21
	102 Move X2, X31
	103 Call Object.set_hideFlags, X0, X1
	104 Move X0, [X22]
	105 Move W8, [X0+224]
	106 Compare W8, 0
	107 JumpIfNotEqual {109}
	108 Call 0x1C17DFC
	109 Move X0, X21
	110 Move X1, X31
	111 Call Object.DontDestroyOnLoad, X0
	112 Move X8, 0x22B7000
	113 Move X8, [X8+3160]
	114 Move X0, X21
	115 Move X1, [X8]
	116 Call 0x21E62E4, X0
	117 Move [X19+392], X0
	118 Compare X0, 0
	119 JumpIfEqual {131}
	120 Move W8, 0xEA60
	121 Move [X0+32], X19
	122 Move [X0+44], W8
	123 Move X0, [X19+392]
	124 Compare X0, 0
	125 JumpIfEqual {131}
	126 Move X20, [X31+32]
	127 Move X19, [X31+40]
	128 Move X22, [X31+16]
	129 Move X21, [X31+24]
	130 Move X30, [X31+48]
	131 Call 0x1C17F20
	132 Call 0x1C17F28
	133 Call 0x1C17F44
	134 Move X1, X31
	135 Call 0x1C17DEC

Method: System.Void StopFallbackSendAck()

Disassembly:
	0x01E4603C LDP X20, X19, [X31 + 0x20]
	0x01E46040 LDR X2, [X8]
	0x01E46044 LDP X22, X21, [X31 + 0x10]
	0x01E46048 LDR X30, [X31], #0x30
	0x01E4604C B 0x24F1750
	0x01E46050 BL 0x1C16F20
	0x01E46054 RET
	0x01E46058 STR X30, [X31 - 0x30]!
	0x01E4605C STP X22, X21, [X31 + 0x10]
	0x01E46060 STP X20, X19, [X31 + 0x20]
	0x01E46064 ADRP X21, 0x2592000
	0x01E46068 LDRB W8, [X21 + 0xFC0]
	0x01E4606C MOV X20, X1
	0x01E46070 MOV X19, X0
	0x01E46074 TBNZ X8, 0x0, 0x1E460A4
	0x01E46078 ADRP X0, 0x22B5000
	0x01E4607C LDR X0, [X0 + 0xD18]
	0x01E46080 BL 0x1C16CF4
	0x01E46084 ADRP X0, 0x22B5000
	0x01E46088 LDR X0, [X0 + 0xD20]
	0x01E4608C BL 0x1C16CF4
	0x01E46090 ADRP X0, 0x22B5000
	0x01E46094 LDR X0, [X0 + 0xD28]
	0x01E46098 BL 0x1C16CF4
	0x01E4609C MOVZ W8, 0x1
	0x01E460A0 STRB W8, [X21 + 0xFC0]
	0x01E460A4 CBZ X20, 0x1E4619C
	0x01E460A8 MOV X0, X20
	0x01E460AC BL 0x1E461A0
	0x01E460B0 MOV X21, X19
	0x01E460B4 MOV X20, X0
	0x01E460B8 STR W31, [X21 + 0x62]!
	0x01E460BC MOV X0, X31
	0x01E460C0 STRH W31, [X21 + 0x4]
	0x01E460C4 BL 0x1E37B3C
	0x01E460C8 TBZ X0, 0x0, 0x1E460DC
	0x01E460CC CBZ X20, 0x1E4619C
	0x01E460D0 MOVZ W8, 0x5
	0x01E460D4 STRB W8, [X20 + 0x68]
	0x01E460D8 B 0x1E460E0
	0x01E460DC CBZ X20, 0x1E4619C
	0x01E460E0 LDRB W8, [X20 + 0x68]
	0x01E460E4 CBNZ W8, 0x1E4612C
	0x01E460E8 LDR W8, [X20 + 0x58]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x2593000
	006 Move X21, 0x22AE000
	007 Move W8, [X20+4024]
	008 Move X21, [X21+1432]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x22AE000
	015 Move X0, [X0+1432]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+4024], W8
	019 Move X0, [X21]
	020 Move X20, [X19+392]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move X0, X20
	026 Move X1, X31
	027 Move X2, X31
	028 Call Object.op_Inequality, X0, X1
	029 Move TEMP, X0
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfNotEqual {53}
	033 Move X0, [X19+392]
	034 Compare X0, 0
	035 JumpIfEqual {58}
	036 Call ConnectionHandler.StopFallbackSendAckThread, X0
	037 Move X0, [X19+392]
	038 Compare X0, 0
	039 JumpIfEqual {58}
	040 Move X1, X31
	041 Call Component.get_gameObject, X0
	042 Move X8, [X21]
	043 Move X20, X0
	044 Move W9, [X8+224]
	045 Compare W9, 0
	046 JumpIfNotEqual {49}
	047 Move X0, X8
	048 Call 0x1C17DFC
	049 Move X0, X20
	050 Move X1, X31
	051 Call Object.Destroy, X0
	052 Move [X19+392], X31
	053 Move X20, [X31+16]
	054 Move X19, [X31+24]
	055 Move X30, [X31+32]
	056 Move X21, [X31+40]
	057 Return 
	058 Call 0x1C17F20

Method: System.Void OnEventHandler(ExitGames.Client.Photon.EventData evt)

Disassembly:
	0x01E4616C BL 0x32277A8
	0x01E46170 TBZ X0, 0x0, 0x1E46184
	0x01E46174 ADRP X8, 0x22B5000
	0x01E46178 LDR X8, [X8 + 0xD20]
	0x01E4617C LDR X8, [X8]
	0x01E46180 STR X8, [X20 + 0x50]
	0x01E46184 MOV X0, X19
	0x01E46188 MOV X1, X20
	0x01E4618C LDP X20, X19, [X31 + 0x20]
	0x01E46190 LDP X22, X21, [X31 + 0x10]
	0x01E46194 LDR X30, [X31], #0x30
	0x01E46198 B 0x1E46224
	0x01E4619C BL 0x1C16F20
	0x01E461A0 STP X30, X21, [X31 - 0x20]!
	0x01E461A4 STP X20, X19, [X31 + 0x10]
	0x01E461A8 ADRP X20, 0x2592000
	0x01E461AC ADRP X21, 0x22B5000
	0x01E461B0 LDRB W8, [X20 + 0xFC7]
	0x01E461B4 LDR X21, [X21 + 0xD30]
	0x01E461B8 MOV X19, X0
	0x01E461BC TBNZ X8, 0x0, 0x1E461D4
	0x01E461C0 ADRP X0, 0x22B5000
	0x01E461C4 LDR X0, [X0 + 0xD30]
	0x01E461C8 BL 0x1C16CF4
	0x01E461CC MOVZ W8, 0x1
	0x01E461D0 STRB W8, [X20 + 0xFC7]
	0x01E461D4 LDR X0, [X21]
	0x01E461D8 BL 0x1C16F10
	0x01E461DC MOVZ W8, 0x1
	0x01E461E0 MOVZ W9, 0x100
	0x01E461E4 MOV X1, X31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Compare X1, 0
	007 JumpIfEqual {39}
	008 Move X22, X1
	009 Move X21, X0
	010 Move X0, X1
	011 Move X1, X31
	012 Call EventData.get_Sender, X0
	013 Move W19, [X22+16]
	014 Move W20, W0
	015 Move X0, X22
	016 Move X1, X31
	017 Call EventData.get_CustomData, X0
	018 Move X8, [X21+416]
	019 Compare X8, 0
	020 JumpIfEqual {33}
	021 Move X3, X0
	022 Move X5, [X8+24]
	023 Move X0, [X8+64]
	024 Move X4, [X8+40]
	025 Move W1, W20
	026 Move W2, W19
	027 Move X20, [X31+32]
	028 Move X19, [X31+40]
	029 Move X22, [X31+16]
	030 Move X21, [X31+24]
	031 Move X30, [X31+48]
	032 CallNoReturn X5
	033 Move X20, [X31+32]
	034 Move X19, [X31+40]
	035 Move X22, [X31+16]
	036 Move X21, [X31+24]
	037 Move X30, [X31+48]
	038 Return 
	039 Call 0x1C17F20

Method: System.Boolean SendEvent(System.Int32 target, System.Byte eventCode, System.Byte* buffer, System.Int32 bufferLength, System.Boolean reliable)

Disassembly:
	0x01E461E8 MOV X20, X0
	0x01E461EC STR W31, [X0 + 0x6C]
	0x01E461F0 STRB W8, [X0 + 0x38]
	0x01E461F4 STRH W9, [X0 + 0x68]
	0x01E461F8 STRB W8, [X0 + 0x71]
	0x01E461FC BL 0x33BDD8C
	0x01E46200 MOV X0, X19
	0x01E46204 MOV X1, X20
	0x01E46208 LDP X20, X19, [X31 + 0x10]
	0x01E4620C LDP X30, X21, [X31], #0x20
	0x01E46210 B 0x1E47B20
	0x01E46214 LDR W8, [X0 + 0x58]
	0x01E46218 CMP W8, 0x1
	0x01E4621C CSET W0, LT
	0x01E46220 RET
	0x01E46224 SUB X31, X31, 0x40
	0x01E46228 STP X30, X21, [X31 + 0x20]
	0x01E4622C STP X20, X19, [X31 + 0x30]
	0x01E46230 ADRP X21, 0x2592000
	0x01E46234 LDRB W8, [X21 + 0xFF1]
	0x01E46238 MOV X20, X1
	0x01E4623C MOV X19, X0
	0x01E46240 TBNZ X8, 0x0, 0x1E4627C
	0x01E46244 ADRP X0, 0x22B5000
	0x01E46248 LDR X0, [X0 + 0xD38]
	0x01E4624C BL 0x1C16CF4
	0x01E46250 ADRP X0, 0x22B5000
	0x01E46254 LDR X0, [X0 + 0xD40]
	0x01E46258 BL 0x1C16CF4
	0x01E4625C ADRP X0, 0x22B5000
	0x01E46260 LDR X0, [X0 + 0xD48]
	0x01E46264 BL 0x1C16CF4
	0x01E46268 ADRP X0, 0x22B5000
	0x01E4626C LDR X0, [X0 + 0xD50]
	0x01E46270 BL 0x1C16CF4
	0x01E46274 MOVZ W8, 0x1
	0x01E46278 STRB W8, [X21 + 0xFF1]
	0x01E4627C LDR X0, [X19 + 0x10]
	0x01E46280 CBZ X0, 0x1E46588
	0x01E46284 MOV X1, X31
	0x01E46288 BL 0x3501B48
	0x01E4628C ANDS W31, W0, 0xFF
	0x01E46290 B.EQ 0x1E46314
	0x01E46294 LDR X0, [X19 + 0x10]
	0x01E46298 CBZ X0, 0x1E46588
	0x01E4629C ADRP X20, 0x22B5000
	0x01E462A0 ADRP X21, 0x22B5000
	0x01E462A4 LDR X20, [X20 + 0xD40]
	0x01E462A8 LDR X21, [X21 + 0xD48]
	0x01E462AC MOV X1, X31
	0x01E462B0 BL 0x3501B48
	0x01E462B4 LDR X8, [X20]
	0x01E462B8 MOVN X9, 0x0
	0x01E462BC STRB W0, [X31 + 0x18]
	0x01E462C0 ADD X0, X31, 0x8
	0x01E462C4 MOV X1, X31
	0x01E462C8 STP X8, X9, [X31 + 0x8]
	0x01E462CC BL 0x33B162C
	0x01E462D0 LDR X8, [X21]
	0x01E462D4 MOV X1, X0
	0x01E462D8 MOV X2, X31
	0x01E462DC MOV X0, X8
	0x01E462E0 BL 0x321B938
	0x01E462E4 LDR X8, [X19]
	0x01E462E8 MOV X2, X0
	0x01E462EC MOVZ W1, 0x2
	0x01E462F0 LDR X9, [X8 + 0x218]
	0x01E462F4 LDR X3, [X8 + 0x220]
	0x01E462F8 MOV X0, X19
	0x01E462FC BLR X9
	0x01E46300 MOV W0, W31
	0x01E46304 LDP X20, X19, [X31 + 0x30]
	0x01E46308 LDP X30, X21, [X31 + 0x20]
	0x01E4630C ADD X31, X31, 0x40
	0x01E46310 RET
	0x01E46314 CBZ X20, 0x1E46338
	0x01E46318 LDR W8, [X19 + 0x28]
	0x01E4631C CMP W8, 0x2
	0x01E46320 B.EQ 0x1E46358
	0x01E46324 CMP W8, 0x1
	0x01E46328 B.EQ 0x1E46360
	0x01E4632C CBNZ W8, 0x1E4636C
	0x01E46330 ADD X8, X20, 0x10
	0x01E46334 B 0x1E46364

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move W21, W5
	010 Move W23, W4
	011 Move X24, X3
	012 Move W20, W2
	013 Move W22, W1
	014 Move X19, X0
	015 Call LoadBalancingClient.get_IsConnectedAndReady, X0
	016 Move TEMP, X0
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfNotEqual {47}
	020 Move W8, [X19+144]
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Move X8, [X19+272]
	023 Compare X8, 0
	024 JumpIfEqual {47}
	025 Move X0, [X19+16]
	026 Compare X0, 0
	027 JumpIfEqual {108}
	028 Move X1, X31
	029 Call PhotonPeer.get_ByteArraySlicePool, X0
	030 Compare X0, 0
	031 JumpIfEqual {108}
	032 Move W1, W23
	033 Move X2, X31
	034 Call ByteArraySlicePool.Acquire, X0, X1
	035 Move X25, X0
	036 Compare X24, 0
	037 JumpIfEqual {58}
	038 Compare X25, 0
	039 JumpIfEqual {108}
	040 Move X8, [X25+16]
	041 Compare X8, 0
	042 JumpIfEqual {60}
	043 Move W9, [X8+24]
	044 Add X8, X8, 32
	045 NotImplemented "Instruction CMP not yet implemented."
	046 NotImplemented "Instruction CSEL not yet implemented."
	047 Move W20, W31
	048 And W0, W20, 1
	049 Move X20, [X31+48]
	050 Move X19, [X31+56]
	051 Move X22, [X31+32]
	052 Move X21, [X31+40]
	053 Move X24, [X31+16]
	054 Move X23, [X31+24]
	055 Move X30, [X31+64]
	056 Move X25, [X31+72]
	057 Return X0
	058 Compare X25, 0
	059 JumpIfNotEqual {65}
	060 Move X0, X31
	061 Move X1, X24
	062 Move W2, W23
	063 Move X3, X31
	064 Call Native.MemCpy, X0, X1, X2
	065 Move [X25+28], W23
	066 Move X3, [X19+424]
	067 Compare X3, 0
	068 JumpIfEqual {108}
	069 Move X8, [X3+24]
	070 Compare X8, 0
	071 JumpIfEqual {108}
	072 Move W9, [X8+24]
	073 Compare W9, 0
	074 JumpIfEqual {109}
	075 Move [X8+32], W22
	076 Move X10, [X19]
	077 Add X8, X19, 440
	078 Add X9, X19, 432
	079 And W31, W21, 1
	080 NotImplemented "Instruction CSEL not yet implemented."
	081 Move X4, [X8]
	082 Move X8, [X10+472]
	083 Move X5, [X10+480]
	084 Move X0, X19
	085 Move W1, W20
	086 Move X2, X25
	087 NotImplemented "Instruction BLR not yet implemented."
	088 Move X8, [X19+16]
	089 Compare X8, 0
	090 JumpIfEqual {108}
	091 Move X9, [X8]
	092 Move W20, W0
	093 Move X0, X8
	094 Move X10, [X9+504]
	095 Move X1, [X9+512]
	096 NotImplemented "Instruction BLR not yet implemented."
	097 Move TEMP, X0
	098 And TEMP, TEMP, 1
	099 Compare TEMP, 1
	100 JumpIfNotEqual {48}
	101 Move X0, [X19+16]
	102 Compare X0, 0
	103 JumpIfEqual {108}
	104 Move X8, [X0]
	105 Move X9, [X8+504]
	106 Move X1, [X8+512]
	107 NotImplemented "Instruction BLR not yet implemented."
	108 Call 0x1C17F20
	109 Call 0x1C17F28

Method: System.Void ExtractData(System.Object dataObj, System.Byte[] buffer, ref System.Int32 bufferLength)

Disassembly:
	0x01E46370 MOV X1, X31
	0x01E46374 STR X8, [X19 + 0x18]
	0x01E46378 LDRB W8, [X20 + 0x38]
	0x01E4637C STRB W8, [X19 + 0x50]
	0x01E46380 LDR X0, [X20 + 0x40]
	0x01E46384 STR X0, [X19 + 0x140]
	0x01E46388 BL 0x32277A8
	0x01E4638C AND W8, W0, 0x1
	0x01E46390 STRB W8, [X19 + 0x168]
	0x01E46394 LDRB W9, [X20 + 0x70]
	0x01E46398 LDR X8, [X19 + 0x10]
	0x01E4639C STRB W9, [X19 + 0xF8]
	0x01E463A0 CBZ X8, 0x1E46588
	0x01E463A4 LDRB W9, [X20 + 0x71]
	0x01E463A8 STRB W9, [X8 + 0x40]
	0x01E463AC LDR W9, [X20 + 0x6C]
	0x01E463B0 CMP W9, 0x2
	0x01E463B4 STR W9, [X19 + 0x38]
	0x01E463B8 B.NE 0x1E463EC
	0x01E463BC ADRP X10, 0x22B5000
	0x01E463C0 LDR X10, [X10 + 0xD38]
	0x01E463C4 MOVZ W9, 0x5
	0x01E463C8 STRB W9, [X8 + 0x84]
	0x01E463CC LDRB W1, [X20 + 0x68]
	0x01E463D0 LDR X2, [X10]
	0x01E463D4 ADD X0, X31, 0x8
	0x01E463D8 STRH W31, [X31 + 0x8]
	0x01E463DC BL 0x242DF98
	0x01E463E0 LDRH W8, [X31 + 0x8]
	0x01E463E4 STRH W8, [X19 + 0x40]
	0x01E463E8 B 0x1E463F8
	0x01E463EC LDRB W9, [X20 + 0x68]
	0x01E463F0 STRB W9, [X8 + 0x84]
	0x01E463F4 STRH W31, [X19 + 0x40]
	0x01E463F8 LDRB W8, [X20 + 0x69]
	0x01E463FC MOV X0, X19
	0x01E46400 STRB W8, [X19 + 0x68]
	0x01E46404 LDR X8, [X20 + 0x48]
	0x01E46408 STR W31, [X19 + 0xE0]
	0x01E4640C STR X31, [X19 + 0xE8]
	0x01E46410 STR X8, [X19 + 0x158]
	0x01E46414 BL 0x1E4B980
	0x01E46418 LDRB W8, [X19 + 0x50]
	0x01E4641C CBZ W8, 0x1E464D8
	0x01E46420 MOVZ W8, 0x2
	0x01E46424 STR W8, [X19 + 0x80]
	0x01E46428 LDRB W8, [X20 + 0x38]
	0x01E4642C CBZ W8, 0x1E46440
	0x01E46430 LDR X0, [X20 + 0x50]
	0x01E46434 MOV X1, X31
	0x01E46438 BL 0x32277A8
	0x01E4643C TBNZ X0, 0x0, 0x1E46448
	0x01E46440 LDR X8, [X20 + 0x50]
	0x01E46444 STR X8, [X19 + 0x58]
	0x01E46448 LDR X8, [X20 + 0x60]
	0x01E4644C MOV X0, X19
	0x01E46450 STR X8, [X19 + 0x88]
	0x01E46454 LDR W8, [X20 + 0x58]
	0x01E46458 LDR X20, [X19 + 0x10]
	0x01E4645C STR W8, [X19 + 0x180]
	0x01E46460 BL 0x1E4AC88
	0x01E46464 LDR W8, [X19 + 0x38]
	0x01E46468 MOV X1, X0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x2593000
	007 Move W8, [X22+4025]
	008 Move X21, X3
	009 Move X20, X2
	010 Move X19, X1
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {26}
	015 Move X0, 0x22B6000
	016 Move X0, [X0+3216]
	017 Call 0x1C17CF4
	018 Move X0, 0x22B6000
	019 Move X0, [X0+3224]
	020 Call 0x1C17CF4
	021 Move X0, 0x22B6000
	022 Move X0, [X0+3232]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X22+4025], W8
	026 Compare X19, 0
	027 JumpIfEqual {39}
	028 Move X8, 0x22B6000
	029 Move X8, [X8+3224]
	030 Move X9, [X19]
	031 Move X8, [X8]
	032 Move W11, [X9+304]
	033 Move W10, [X8+304]
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Move X9, [X9+200]
	036 Add X9, X9, X10
	037 NotImplemented "Instruction LDUR not yet implemented."
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Move TEMP, 0
	040 Not TEMP
	041 Move W8, TEMP
	042 Move [X21], W8
	043 Move X20, [X31+32]
	044 Move X19, [X31+40]
	045 Move X22, [X31+16]
	046 Move X21, [X31+24]
	047 Move X30, [X31+48]
	048 Return 
	049 Move X8, 0x22B6000
	050 Move W3, [X19+28]
	051 Move W2, [X21]
	052 Move X8, [X8+3232]
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Move X1, [X8]
	055 Move X8, 0x22B6000
	056 Move X8, [X8+3216]
	057 NotImplemented "Instruction CSET not yet implemented."
	058 Move X4, [X8]
	059 Call 0x2182E54, X0, X1, X2, X3
	060 Move W2, [X19+28]
	061 Move X1, X20
	062 Move X3, X31
	063 Move [X21], W2
	064 Move X0, [X19+16]
	065 Call Array.Copy, X0, X1, X2
	066 Move X0, X19
	067 Move X20, [X31+32]
	068 Move X19, [X31+40]
	069 Move X22, [X31+16]
	070 Move X21, [X31+24]
	071 Move X1, X31
	072 Move X30, [X31+48]
	073 Call ByteArraySlice.Release, X0
	074 Return 

Method: System.Boolean get_IsReadyAndInRoom()

Disassembly:
	0x01E46338 ADRP X9, 0x22B5000
	0x01E4633C LDR X8, [X19]
	0x01E46340 LDR X9, [X9 + 0xD50]
	0x01E46344 MOVZ W1, 0x1
	0x01E46348 LDR X3, [X8 + 0x220]
	0x01E4634C LDR X2, [X9]
	0x01E46350 LDR X9, [X8 + 0x218]
	0x01E46354 B 0x1E462F8
	0x01E46358 ADD X8, X20, 0x18
	0x01E4635C B 0x1E46364
	0x01E46360 ADD X8, X20, 0x28
	0x01E46364 LDR X8, [X8]
	0x01E46368 STR X8, [X19 + 0x20]
	0x01E4636C LDR X8, [X20 + 0x30]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Call LoadBalancingClient.get_IsConnectedAndReady, X0
	005 Move TEMP, X0
	006 And TEMP, TEMP, 1
	007 Compare TEMP, 1
	008 JumpIfNotEqual {14}
	009 Move W8, [X19+144]
	010 NotImplemented "Instruction CMP not yet implemented."
	011 Move X8, [X19+272]
	012 NotImplemented "Instruction CMP not yet implemented."
	013 NotImplemented "Instruction CSET not yet implemented."
	014 Move W0, W31
	015 Move X30, [X31+16]
	016 Move X19, [X31+24]
	017 Return X0

Method: System.Boolean get_IsEncryptionEnabled()

Disassembly:
	0x01E464C4 LDR X9, [X8 + 0x18]
	0x01E464C8 LDR X0, [X8 + 0x40]
	0x01E464CC LDR X3, [X8 + 0x28]
	0x01E464D0 MOVZ W2, 0x10

ISIL:
	001 Move W8, [X0+60]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 NotImplemented "Instruction CSET not yet implemented."
	004 Return X0

Method: System.Void add_OnRoomChanged(System.Action value)

Disassembly:
	0x01E464D4 B 0x1E4657C
	0x01E464D8 LDR X8, [X19 + 0x10]
	0x01E464DC STR W31, [X19 + 0x80]
	0x01E464E0 CBZ X8, 0x1E46588
	0x01E464E4 LDR W9, [X20 + 0x58]
	0x01E464E8 LDR X1, [X20 + 0x50]
	0x01E464EC LDRB W3, [X8 + 0x84]
	0x01E464F0 MOVZ W8, 0x13BF
	0x01E464F4 CMP W9, 0x1
	0x01E464F8 CSEL W2, W8, W9, LT
	0x01E464FC MOV X0, X19
	0x01E46500 BL 0x1E4B688
	0x01E46504 LDR W9, [X19 + 0x38]
	0x01E46508 LDR X8, [X19 + 0x10]
	0x01E4650C MOV X1, X0
	0x01E46510 STR X0, [X19 + 0x70]
	0x01E46514 CBZ W9, 0x1E46528
	0x01E46518 LDR X9, [X19 + 0x30]
	0x01E4651C CBZ X9, 0x1E46528
	0x01E46520 LDR X4, [X9 + 0x28]
	0x01E46524 B 0x1E4652C
	0x01E46528 MOV X4, X31
	0x01E4652C CBZ X8, 0x1E46588
	0x01E46530 LDR X9, [X8]
	0x01E46534 LDR X2, [X19 + 0x88]
	0x01E46538 LDR X3, [X19 + 0x20]
	0x01E4653C MOV X0, X8
	0x01E46540 LDP X10, X6, [X9 + 0x1A8]
	0x01E46544 MOV X5, X31
	0x01E46548 BLR X10
	0x01E4654C TBZ X0, 0x0, 0x1E46300
	0x01E46550 LDR W1, [X19 + 0x90]
	0x01E46554 CMP W1, 0xC
	0x01E46558 B.EQ 0x1E46580
	0x01E4655C LDR X8, [X19 + 0x98]
	0x01E46560 MOVZ W9, 0xC
	0x01E46564 STR W9, [X19 + 0x90]
	0x01E46568 CBZ X8, 0x1E46580
	0x01E4656C LDR X9, [X8 + 0x18]
	0x01E46570 LDR X0, [X8 + 0x40]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x2593000
	007 Move W8, [X21+4026]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x22AF000
	015 Move X0, [X0+3696]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+4026], W8
	019 Move X22, 0x22AF000
	020 Move X21, [X20+400]
	021 Move X22, [X22+3696]
	022 Add X20, X20, 400
	023 Move X0, X21
	024 Move X1, X19
	025 Move X2, X31
	026 Call Delegate.Combine, X0, X1
	027 Move X8, X0
	028 Compare X0, 0
	029 JumpIfEqual {33}
	030 Move X1, [X22]
	031 Move X9, [X8]
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move X0, X20
	034 Move X1, X8
	035 Move X2, X21
	036 Call 0x1C25138
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move X21, X0
	039 Move X20, [X31+32]
	040 Move X19, [X31+40]
	041 Move X22, [X31+16]
	042 Move X21, [X31+24]
	043 Move X30, [X31+48]
	044 Return 
	045 Move X0, X8
	046 Call 0x1C181E0

Method: System.Void remove_OnRoomChanged(System.Action value)

Disassembly:
	0x01E46574 LDR X3, [X8 + 0x28]
	0x01E46578 MOVZ W2, 0xC
	0x01E4657C BLR X9
	0x01E46580 MOVZ W0, 0x1
	0x01E46584 B 0x1E46304
	0x01E46588 BL 0x1C16F20
	0x01E4658C SUB X31, X31, 0x90
	0x01E46590 STP X30, X27, [X31 + 0x40]
	0x01E46594 STP X26, X25, [X31 + 0x50]
	0x01E46598 STP X24, X23, [X31 + 0x60]
	0x01E4659C STP X22, X21, [X31 + 0x70]
	0x01E465A0 STP X20, X19, [X31 + 0x80]
	0x01E465A4 ADRP X20, 0x2592000
	0x01E465A8 LDRB W8, [X20 + 0xFC1]
	0x01E465AC MOV X21, X1
	0x01E465B0 MOV X19, X0
	0x01E465B4 TBNZ X8, 0x0, 0x1E46650
	0x01E465B8 ADRP X0, 0x22B5000
	0x01E465BC LDR X0, [X0 + 0xD58]
	0x01E465C0 BL 0x1C16CF4
	0x01E465C4 ADRP X0, 0x22B5000
	0x01E465C8 LDR X0, [X0 + 0xD60]
	0x01E465CC BL 0x1C16CF4
	0x01E465D0 ADRP X0, 0x22B5000
	0x01E465D4 LDR X0, [X0 + 0xD68]
	0x01E465D8 BL 0x1C16CF4
	0x01E465DC ADRP X0, 0x22B5000
	0x01E465E0 LDR X0, [X0 + 0xD70]
	0x01E465E4 BL 0x1C16CF4
	0x01E465E8 ADRP X0, 0x22B5000
	0x01E465EC LDR X0, [X0 + 0xD78]
	0x01E465F0 BL 0x1C16CF4
	0x01E465F4 ADRP X0, 0x22B5000
	0x01E465F8 LDR X0, [X0 + 0xD80]
	0x01E465FC BL 0x1C16CF4
	0x01E46600 ADRP X0, 0x22B5000
	0x01E46604 LDR X0, [X0 + 0xD88]
	0x01E46608 BL 0x1C16CF4
	0x01E4660C ADRP X0, 0x22B5000
	0x01E46610 LDR X0, [X0 + 0xD90]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x2593000
	007 Move W8, [X21+4027]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x22AF000
	015 Move X0, [X0+3696]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+4027], W8
	019 Move X22, 0x22AF000
	020 Move X21, [X20+400]
	021 Move X22, [X22+3696]
	022 Add X20, X20, 400
	023 Move X0, X21
	024 Move X1, X19
	025 Move X2, X31
	026 Call Delegate.Remove, X0, X1
	027 Move X8, X0
	028 Compare X0, 0
	029 JumpIfEqual {33}
	030 Move X1, [X22]
	031 Move X9, [X8]
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move X0, X20
	034 Move X1, X8
	035 Move X2, X21
	036 Call 0x1C25138
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move X21, X0
	039 Move X20, [X31+32]
	040 Move X19, [X31+40]
	041 Move X22, [X31+16]
	042 Move X21, [X31+24]
	043 Move X30, [X31+48]
	044 Return 
	045 Move X0, X8
	046 Call 0x1C181E0

Method: System.Boolean get_UseDefaultPorts()

Disassembly:
	0x01E46614 BL 0x1C16CF4
	0x01E46618 ADRP X0, 0x22B5000

ISIL:
	001 Move W0, [X0+408]
	002 Return X0

Method: System.Void set_UseDefaultPorts(System.Boolean value)

Disassembly:
	0x01E4661C LDR X0, [X0 + 0xD98]
	0x01E46620 BL 0x1C16CF4
	0x01E46624 ADRP X0, 0x22B5000

ISIL:
	001 And W8, W1, 1
	002 Move [X0+408], W8
	003 Return 

Method: System.Void add_OnEventCallback(System.Action`3<System.Int32, System.Int32, System.Object> value)

Disassembly:
	0x01E46628 LDR X0, [X0 + 0xDA0]
	0x01E4662C BL 0x1C16CF4
	0x01E46630 ADRP X0, 0x22B5000
	0x01E46634 LDR X0, [X0 + 0xDA8]
	0x01E46638 BL 0x1C16CF4
	0x01E4663C ADRP X0, 0x22B5000
	0x01E46640 LDR X0, [X0 + 0xDB0]
	0x01E46644 BL 0x1C16CF4
	0x01E46648 MOVZ W8, 0x1
	0x01E4664C STRB W8, [X20 + 0xFC1]
	0x01E46650 STP X31, X31, [X31 + 0x20]
	0x01E46654 STR X31, [X31 + 0x30]
	0x01E46658 CBZ X21, 0x1E46868
	0x01E4665C ADRP X8, 0x22B5000
	0x01E46660 LDR X8, [X8 + 0xD68]
	0x01E46664 MOV X0, X21
	0x01E46668 LDR X1, [X8]
	0x01E4666C BL 0x2AA4E88
	0x01E46670 CBZ W0, 0x1E4686C
	0x01E46674 LDR X0, [X19 + 0x110]
	0x01E46678 CBZ X0, 0x1E46898
	0x01E4667C MOV X1, X31
	0x01E46680 BL 0x1E5B1C4
	0x01E46684 TBNZ X0, 0x0, 0x1E46868
	0x01E46688 ADRP X8, 0x22B5000
	0x01E4668C LDR X8, [X8 + 0xDA0]
	0x01E46690 LDR X0, [X8]
	0x01E46694 BL 0x1C16F10
	0x01E46698 MOV X1, X31
	0x01E4669C MOV X20, X0
	0x01E466A0 BL 0x34ED7D8
	0x01E466A4 LDR X0, [X19 + 0x110]
	0x01E466A8 CBZ X0, 0x1E46898
	0x01E466AC MOV X1, X31
	0x01E466B0 BL 0x1E5B2B4
	0x01E466B4 ADRP X8, 0x22B5000
	0x01E466B8 LDR X8, [X8 + 0xD98]
	0x01E466BC MOV X22, X0
	0x01E466C0 LDR X8, [X8]
	0x01E466C4 LDR W9, [X8 + 0xE0]
	0x01E466C8 CBNZ W9, 0x1E466D4
	0x01E466CC MOV X0, X8
	0x01E466D0 BL 0x1C16DFC
	0x01E466D4 MOV X0, X20
	0x01E466D8 MOV X1, X22

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x2593000
	009 Move W8, [X21+4028]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x22B6000
	017 Move X0, [X0+3240]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+4028], W8
	021 Move X24, 0x22B6000
	022 Move X21, [X20+416]
	023 Move X24, [X24+3240]
	024 Add X20, X20, 416
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Combine, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Void remove_OnEventCallback(System.Action`3<System.Int32, System.Int32, System.Object> value)

Disassembly:
	0x01E466DC BL 0x1E46944
	0x01E466E0 ADRP X8, 0x22B5000
	0x01E466E4 LDR X8, [X8 + 0xD78]
	0x01E466E8 MOV X0, X21
	0x01E466EC LDR X1, [X8]
	0x01E466F0 BL 0x2AA4E98
	0x01E466F4 CBZ X0, 0x1E46898
	0x01E466F8 ADRP X8, 0x22B5000
	0x01E466FC LDR X8, [X8 + 0xDA8]
	0x01E46700 LDR X1, [X8]
	0x01E46704 ADD X8, X31, 0x8
	0x01E46708 BL 0x2EC7020
	0x01E4670C LDUR V0, [X31 + 0x8]
	0x01E46710 LDR X8, [X31 + 0x18]
	0x01E46714 ADRP X25, 0x22B5000
	0x01E46718 ADRP X26, 0x22B5000
	0x01E4671C LDR X25, [X25 + 0xD88]
	0x01E46720 LDR X26, [X26 + 0xD58]
	0x01E46724 STR V0, [X31 + 0x2]
	0x01E46728 STR X8, [X31 + 0x30]
	0x01E4672C ADRP X27, 0x22B5000
	0x01E46730 LDR X27, [X27 + 0xD70]
	0x01E46734 MOV W23, W31
	0x01E46738 MOV W24, W23
	0x01E4673C LDR X1, [X25]
	0x01E46740 ADD X0, X31, 0x20
	0x01E46744 BL 0x2C0B090
	0x01E46748 TBZ X0, 0x0, 0x1E467DC
	0x01E4674C CBZ X20, 0x1E4688C
	0x01E46750 LDR X22, [X31 + 0x30]
	0x01E46754 LDR X2, [X26]
	0x01E46758 MOV X0, X20
	0x01E4675C MOV X1, X22
	0x01E46760 BL 0x2AA528C
	0x01E46764 TBZ X0, 0x0, 0x1E4673C
	0x01E46768 MOV X0, X20
	0x01E4676C MOV X1, X22
	0x01E46770 MOV X2, X31
	0x01E46774 BL 0x34ED878
	0x01E46778 LDR X2, [X27]
	0x01E4677C MOV X23, X0
	0x01E46780 MOV X0, X21
	0x01E46784 MOV X1, X22
	0x01E46788 BL 0x2AA5018
	0x01E4678C CBZ X0, 0x1E46890

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x2593000
	009 Move W8, [X21+4029]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x22B6000
	017 Move X0, [X0+3240]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+4029], W8
	021 Move X24, 0x22B6000
	022 Move X21, [X20+416]
	023 Move X24, [X24+3240]
	024 Add X20, X20, 416
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Remove, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Int32 get_DisconnectTimeout()

Disassembly:
	0x01E46790 CBZ X23, 0x1E46894
	0x01E46794 LDR X8, [X23]
	0x01E46798 LDR X1, [X0 + 0x10]
	0x01E4679C LDP X9, X2, [X8 + 0x138]
	0x01E467A0 MOV X0, X23
	0x01E467A4 BLR X9
	0x01E467A8 TBNZ X0, 0x0, 0x1E4673C

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+16]
	003 Compare X0, 0
	004 JumpIfEqual {9}
	005 Move X1, X31
	006 Move X30, [X31+16]
	007 Call PhotonPeer.get_DisconnectTimeout, X0
	008 Return X0
	009 Call 0x1C17F20

Method: System.Void set_DisconnectTimeout(System.Int32 value)

Disassembly:
	0x01E467AC LDR X2, [X27]
	0x01E467B0 MOV X0, X21
	0x01E467B4 MOV X1, X22
	0x01E467B8 BL 0x2AA5018
	0x01E467BC CBZ X0, 0x1E4689C
	0x01E467C0 LDR X2, [X0 + 0x10]
	0x01E467C4 MOVZ W23, 0x1

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+16]
	003 Compare X0, 0
	004 JumpIfEqual {9}
	005 Move X2, X31
	006 Move X30, [X31+16]
	007 Call PhotonPeer.set_DisconnectTimeout, X0, X1
	008 Return 
	009 Call 0x1C17F20

Method: System.Void .ctor(Fusion.Photon.Realtime.FusionAppSettings config)

Disassembly:
	0x01E467C8 MOV X0, X20
	0x01E467CC MOV X1, X22
	0x01E467D0 MOV X3, X31
	0x01E467D4 BL 0x34ED8E0
	0x01E467D8 B 0x1E46738
	0x01E467DC ADRP X8, 0x22B5000
	0x01E467E0 LDR X8, [X8 + 0xD80]
	0x01E467E4 ADD X0, X31, 0x20
	0x01E467E8 LDR X1, [X8]
	0x01E467EC BL 0x2C0B08C
	0x01E467F0 CBZ X20, 0x1E46898
	0x01E467F4 ADRP X8, 0x22B5000
	0x01E467F8 LDR X8, [X8 + 0xD60]
	0x01E467FC MOV X0, X20
	0x01E46800 LDR X1, [X8]
	0x01E46804 BL 0x2AA4E88
	0x01E46808 CMP W0, 0xB
	0x01E4680C B.GE 0x1E46868
	0x01E46810 ADRP X8, 0x22B5000
	0x01E46814 LDR X8, [X8 + 0xDB0]
	0x01E46818 LDR X0, [X8]
	0x01E4681C LDR W8, [X0 + 0xE0]
	0x01E46820 CBNZ W8, 0x1E46828
	0x01E46824 BL 0x1C16DFC
	0x01E46828 MOV X0, X20
	0x01E4682C MOV X1, X31
	0x01E46830 BL 0x1E62608
	0x01E46834 CMP W0, 0x1F4
	0x01E46838 CSET W8, GT
	0x01E4683C ORN W8, W8, W24, 0x0
	0x01E46840 TBNZ X8, 0x0, 0x1E46868
	0x01E46844 LDR X0, [X19 + 0x110]
	0x01E46848 CBZ X0, 0x1E46898
	0x01E4684C LDR X8, [X0]
	0x01E46850 MOV X1, X20
	0x01E46854 MOV X2, X31
	0x01E46858 MOV X3, X31
	0x01E4685C LDP X9, X4, [X8 + 0x188]
	0x01E46860 BLR X9
	0x01E46864 B 0x1E4686C
	0x01E46868 MOV W0, W31
	0x01E4686C LDP X20, X19, [X31 + 0x80]
	0x01E46870 LDP X22, X21, [X31 + 0x70]
	0x01E46874 LDP X24, X23, [X31 + 0x60]
	0x01E46878 LDP X26, X25, [X31 + 0x50]
	0x01E4687C LDP X30, X27, [X31 + 0x40]
	0x01E46880 AND W0, W0, 0x1
	0x01E46884 ADD X31, X31, 0x90
	0x01E46888 RET
	0x01E4688C BL 0x1C16F20
	0x01E46890 BL 0x1C16F20
	0x01E46894 BL 0x1C16F20
	0x01E46898 BL 0x1C16F20
	0x01E4689C BL 0x1C16F20
	0x01E468A0 B 0x1E468D0
	0x01E468A4 B 0x1E468D0
	0x01E468A8 B 0x1E468D0
	0x01E468AC B 0x1E468D0
	0x01E468B0 B 0x1E468D0
	0x01E468B4 B 0x1E468D0
	0x01E468B8 B 0x1E468D0
	0x01E468BC B 0x1E468D0
	0x01E468C0 MOV X21, X0
	0x01E468C4 MOV W24, W31
	0x01E468C8 B 0x1E468D4
	0x01E468CC B 0x1E468D0
	0x01E468D0 MOV X21, X0
	0x01E468D4 CMP W1, 0x1
	0x01E468D8 B.NE 0x1E4690C
	0x01E468DC MOV X0, X21
	0x01E468E0 BL 0x3EB1AD0
	0x01E468E4 LDR X22, [X0]
	0x01E468E8 BL 0x3EB1AE0
	0x01E468EC ADRP X8, 0x22B5000
	0x01E468F0 LDR X8, [X8 + 0xD80]
	0x01E468F4 ADD X0, X31, 0x20
	0x01E468F8 LDR X1, [X8]
	0x01E468FC BL 0x2C0B08C
	0x01E46900 CBZ X22, 0x1E467F0
	0x01E46904 MOV X0, X22
	0x01E46908 BL 0x1C16F18
	0x01E4690C MOV X22, X31
	0x01E46910 B 0x1E46918
	0x01E46914 MOV X21, X0
	0x01E46918 ADRP X8, 0x22B5000
	0x01E4691C LDR X8, [X8 + 0xD80]
	0x01E46920 LDR X1, [X8]
	0x01E46924 ADD X0, X31, 0x20
	0x01E46928 BL 0x2C0B08C
	0x01E4692C CBNZ X22, 0x1E46938
	0x01E46930 MOV X0, X21
	0x01E46934 BL 0x1D2C690
	0x01E46938 MOV X0, X22
	0x01E4693C BL 0x1C16F18
	0x01E46940 BL 0x1990590
	0x01E46944 STP X30, X25, [X31 - 0x40]!
	0x01E46948 STP X24, X23, [X31 + 0x10]
	0x01E4694C STP X22, X21, [X31 + 0x20]
	0x01E46950 STP X20, X19, [X31 + 0x30]
	0x01E46954 ADRP X21, 0x2592000
	0x01E46958 LDRB W8, [X21 + 0xFDC]
	0x01E4695C MOV X19, X1
	0x01E46960 MOV X20, X0
	0x01E46964 TBNZ X8, 0x0, 0x1E469A0
	0x01E46968 ADRP X0, 0x22AD000
	0x01E4696C LDR X0, [X0 + 0x818]
	0x01E46970 BL 0x1C16CF4
	0x01E46974 ADRP X0, 0x22AD000
	0x01E46978 LDR X0, [X0 + 0xE00]
	0x01E4697C BL 0x1C16CF4
	0x01E46980 ADRP X0, 0x22B5000
	0x01E46984 LDR X0, [X0 + 0xDB8]
	0x01E46988 BL 0x1C16CF4
	0x01E4698C ADRP X0, 0x22AD000
	0x01E46990 LDR X0, [X0 + 0xE18]
	0x01E46994 BL 0x1C16CF4
	0x01E46998 MOVZ W8, 0x1
	0x01E4699C STRB W8, [X21 + 0xFDC]
	0x01E469A0 CBZ X19, 0x1E46C9C
	0x01E469A4 CBZ X20, 0x1E46CB0
	0x01E469A8 LDR X8, [X20]
	0x01E469AC MOV X0, X20
	0x01E469B0 MOV X1, X19
	0x01E469B4 LDP X9, X2, [X8 + 0x138]
	0x01E469B8 BLR X9
	0x01E469BC TBNZ X0, 0x0, 0x1E46C9C
	0x01E469C0 ADRP X24, 0x22AD000

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X22, 0x2593000
	010 Move X21, 0x22B6000
	011 Move W8, [X22+4030]
	012 Move X21, [X21+2856]
	013 Move X20, X1
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {36}
	019 Move X0, 0x22B6000
	020 Move X0, [X0+3248]
	021 Call 0x1C17CF4
	022 Move X0, 0x22B6000
	023 Move X0, [X0+3256]
	024 Call 0x1C17CF4
	025 Move X0, 0x22AF000
	026 Move X0, [X0+3672]
	027 Call 0x1C17CF4
	028 Move X0, 0x22B6000
	029 Move X0, [X0+2856]
	030 Call 0x1C17CF4
	031 Move X0, 0x22B6000
	032 Move X0, [X0+3264]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X22+4030], W8
	036 Move X0, [X21]
	037 Move W8, [X0+224]
	038 Compare W8, 0
	039 JumpIfNotEqual {41}
	040 Call 0x1C17DFC
	041 Move X0, X19
	042 Move W1, W31
	043 Call LoadBalancingClient..ctor, X0, X1
	044 Move X0, [X19+16]
	045 Move W8, 2
	046 Move [X19+448], X20
	047 Move [X19+40], W8
	048 Compare X0, 0
	049 JumpIfEqual {150}
	050 Move W8, 1
	051 Move W9, 200
	052 Move W1, 1
	053 Move X2, X31
	054 Move [X0+40], W8
	055 Move [X0+120], W9
	056 Call PhotonPeer.set_UseByteArraySlicePoolForEvents, X0, X1
	057 Move X0, [X19+16]
	058 Compare X0, 0
	059 JumpIfEqual {150}
	060 Move W1, 1
	061 Move X2, X31
	062 Call PhotonPeer.set_ReuseEventInstance, X0, X1
	063 Move X0, [X19+16]
	064 Compare X0, 0
	065 JumpIfEqual {150}
	066 Move W1, 8
	067 Move X2, X31
	068 Call PhotonPeer.set_QuickResendAttempts, X0, X1
	069 Move X0, [X19+16]
	070 Compare X0, 0
	071 JumpIfEqual {150}
	072 Move W8, [X0+112]
	073 Move W1, 0x3A98
	074 Move X2, X31
	075 Add W8, W8, W8
	076 Move W8, W8
	077 ShiftRight W8, 31
	078 And W8, W8, 0x3FFFFFFF
	079 Move [X0+112], W8
	080 Call PhotonPeer.set_DisconnectTimeout, X0, X1
	081 Move X8, [X19+448]
	082 Compare X8, 0
	083 JumpIfEqual {150}
	084 Move W8, [X8+116]
	085 Move X20, [X19+16]
	086 Move [X19+60], W8
	087 Compare W8, 0
	088 JumpIfEqual {93}
	089 Call FusionRelayClient.LoadPhotonEncryptorType
	090 Move X1, X0
	091 Compare X20, 0
	092 JumpIfNotEqual {96}
	093 Move X1, X31
	094 Compare X20, 0
	095 JumpIfEqual {150}
	096 Move X24, 0x22B6000
	097 Move X25, 0x22B6000
	098 Move X23, 0x22B6000
	099 Move X22, 0x22AF000
	100 Move X24, [X24+3248]
	101 Move X25, [X25+3256]
	102 Move X23, [X23+3264]
	103 Move X22, [X22+3672]
	104 Move X0, X20
	105 Move X2, X31
	106 Call PhotonPeer.set_EncryptorType, X0, X1
	107 Move [X19+408], W31
	108 Move X0, [X24]
	109 Call 0x1C17F10
	110 Move X2, [X25]
	111 Move X1, X19
	112 Move X3, X31
	113 Move X20, X0
	114 Call Action`1<Object>..ctor, X0, X1, X2
	115 Move X0, [X21]
	116 Move W8, [X0+224]
	117 Compare W8, 0
	118 JumpIfNotEqual {120}
	119 Call 0x1C17DFC
	120 Move X0, X19
	121 Move X1, X20
	122 Call LoadBalancingClient.add_EventReceived, X0, X1
	123 Move X0, X19
	124 Move X1, X19
	125 Call LoadBalancingClient.AddCallbackTarget, X0, X1
	126 Move X0, [X23]
	127 Call 0x1C17F10
	128 Move X1, X31
	129 Move X20, X0
	130 Call RaiseEventOptions..ctor, X0
	131 Move X0, [X22]
	132 Move W1, 1
	133 Call 0x1C17D6C
	134 Compare X20, 0
	135 JumpIfEqual {150}
	136 Move X8, -20295680
	137 Move V0, [X8+99]
	138 Move [X20+24], X0
	139 Move [X19+424], X20
	140 Move X22, [X31+32]
	141 Move X21, [X31+40]
	142 Move [X19+27], V0
	143 Move X20, [X31+48]
	144 Move X19, [X31+56]
	145 Move X24, [X31+16]
	146 Move X23, [X31+24]
	147 Move X30, [X31+64]
	148 Move X25, [X31+72]
	149 Return 
	150 Call 0x1C17F20

Method: System.Type LoadPhotonEncryptorType()

Disassembly:
	0x01E469E0 LDUR X11, [X10 - 0x8]
	0x01E469E4 CMP X11, X1
	0x01E469E8 B.EQ 0x1E46A08
	0x01E469EC SUBS X9, X9, 0x1
	0x01E469F0 ADD X10, X10, 0x10
	0x01E469F4 B.NE 0x1E469E0
	0x01E469F8 MOVZ W2, 0x2
	0x01E469FC MOV X0, X19
	0x01E46A00 BL 0x1C5C788
	0x01E46A04 B 0x1E46A18
	0x01E46A08 LDR W9, [X10]
	0x01E46A0C ADD W9, W9, 0x2
	0x01E46A10 ADD X8, X8, W9, 0x4, SXTW
	0x01E46A14 ADD X0, X8, 0x138
	0x01E46A18 LDP X8, X1, [X0]
	0x01E46A1C MOV X0, X19
	0x01E46A20 BLR X8
	0x01E46A24 CBZ X0, 0x1E46CB0
	0x01E46A28 ADRP X10, 0x22B5000
	0x01E46A2C LDR X8, [X0]
	0x01E46A30 LDR X10, [X10 + 0xDB8]
	0x01E46A34 MOV X21, X0
	0x01E46A38 LDRH W9, [X8 + 0x12E]
	0x01E46A3C LDR X1, [X10]
	0x01E46A40 CBZ X9, 0x1E46A64
	0x01E46A44 LDR X10, [X8 + 0xB0]
	0x01E46A48 ADD X10, X10, 0x8
	0x01E46A4C LDUR X11, [X10 - 0x8]
	0x01E46A50 CMP X11, X1
	0x01E46A54 B.EQ 0x1E46A74
	0x01E46A58 SUBS X9, X9, 0x1
	0x01E46A5C ADD X10, X10, 0x10
	0x01E46A60 B.NE 0x1E46A4C
	0x01E46A64 MOV X0, X21
	0x01E46A68 MOV W2, W31
	0x01E46A6C BL 0x1C5C788
	0x01E46A70 B 0x1E46A80
	0x01E46A74 LDRSW X9, [X10]
	0x01E46A78 ADD X8, X8, X9, 0x4, LSL
	0x01E46A7C ADD X0, X8, 0x138
	0x01E46A80 LDP X8, X1, [X0]
	0x01E46A84 MOV X0, X21
	0x01E46A88 BLR X8
	0x01E46A8C MOV X21, X0
	0x01E46A90 CBZ X0, 0x1E46CB4
	0x01E46A94 ADRP X25, 0x22AD000
	0x01E46A98 LDR X25, [X25 + 0xE18]
	0x01E46A9C LDR X8, [X21]
	0x01E46AA0 LDR X1, [X25]
	0x01E46AA4 LDRH W9, [X8 + 0x12E]
	0x01E46AA8 CBZ X9, 0x1E46ACC
	0x01E46AAC LDR X10, [X8 + 0xB0]
	0x01E46AB0 ADD X10, X10, 0x8
	0x01E46AB4 LDUR X11, [X10 - 0x8]
	0x01E46AB8 CMP X11, X1
	0x01E46ABC B.EQ 0x1E46ADC
	0x01E46AC0 SUBS X9, X9, 0x1
	0x01E46AC4 ADD X10, X10, 0x10
	0x01E46AC8 B.NE 0x1E46AB4
	0x01E46ACC MOV X0, X21
	0x01E46AD0 MOV W2, W31
	0x01E46AD4 BL 0x1C5C788
	0x01E46AD8 B 0x1E46AE8
	0x01E46ADC LDRSW X9, [X10]
	0x01E46AE0 ADD X8, X8, X9, 0x4, LSL
	0x01E46AE4 ADD X0, X8, 0x138
	0x01E46AE8 LDP X8, X1, [X0]
	0x01E46AEC MOV X0, X21
	0x01E46AF0 BLR X8
	0x01E46AF4 TBZ X0, 0x0, 0x1E46C20
	0x01E46AF8 LDR X8, [X21]
	0x01E46AFC LDR X1, [X25]
	0x01E46B00 LDRH W9, [X8 + 0x12E]
	0x01E46B04 CBZ X9, 0x1E46B28
	0x01E46B08 LDR X10, [X8 + 0xB0]
	0x01E46B0C ADD X10, X10, 0x8
	0x01E46B10 LDUR X11, [X10 - 0x8]
	0x01E46B14 CMP X11, X1
	0x01E46B18 B.EQ 0x1E46B38
	0x01E46B1C SUBS X9, X9, 0x1
	0x01E46B20 ADD X10, X10, 0x10
	0x01E46B24 B.NE 0x1E46B10
	0x01E46B28 MOVZ W2, 0x1
	0x01E46B2C MOV X0, X21
	0x01E46B30 BL 0x1C5C788
	0x01E46B34 B 0x1E46B48
	0x01E46B38 LDR W9, [X10]
	0x01E46B3C ADD W9, W9, 0x1
	0x01E46B40 ADD X8, X8, W9, 0x4, SXTW
	0x01E46B44 ADD X0, X8, 0x138
	0x01E46B48 LDP X8, X1, [X0]
	0x01E46B4C MOV X0, X21
	0x01E46B50 BLR X8
	0x01E46B54 LDR X8, [X19]
	0x01E46B58 LDR X1, [X24]
	0x01E46B5C MOV X22, X0
	0x01E46B60 LDRH W9, [X8 + 0x12E]
	0x01E46B64 CBZ X9, 0x1E46B88
	0x01E46B68 LDR X10, [X8 + 0xB0]
	0x01E46B6C ADD X10, X10, 0x8
	0x01E46B70 LDUR X11, [X10 - 0x8]
	0x01E46B74 CMP X11, X1
	0x01E46B78 B.EQ 0x1E46B98
	0x01E46B7C SUBS X9, X9, 0x1
	0x01E46B80 ADD X10, X10, 0x10
	0x01E46B84 B.NE 0x1E46B70
	0x01E46B88 MOV X0, X19
	0x01E46B8C MOV W2, W31
	0x01E46B90 BL 0x1C5C788
	0x01E46B94 B 0x1E46BA4
	0x01E46B98 LDRSW X9, [X10]
	0x01E46B9C ADD X8, X8, X9, 0x4, LSL
	0x01E46BA0 ADD X0, X8, 0x138
	0x01E46BA4 LDP X8, X2, [X0]
	0x01E46BA8 MOV X0, X19
	0x01E46BAC MOV X1, X22
	0x01E46BB0 BLR X8
	0x01E46BB4 LDR X8, [X20]
	0x01E46BB8 LDR X1, [X24]
	0x01E46BBC MOV X23, X0
	0x01E46BC0 LDRH W9, [X8 + 0x12E]
	0x01E46BC4 CBZ X9, 0x1E46BE8
	0x01E46BC8 LDR X10, [X8 + 0xB0]
	0x01E46BCC ADD X10, X10, 0x8
	0x01E46BD0 LDUR X11, [X10 - 0x8]
	0x01E46BD4 CMP X11, X1
	0x01E46BD8 B.EQ 0x1E46BF8
	0x01E46BDC SUBS X9, X9, 0x1
	0x01E46BE0 ADD X10, X10, 0x10
	0x01E46BE4 B.NE 0x1E46BD0
	0x01E46BE8 MOVZ W2, 0x1
	0x01E46BEC MOV X0, X20
	0x01E46BF0 BL 0x1C5C788
	0x01E46BF4 B 0x1E46C08
	0x01E46BF8 LDR W9, [X10]
	0x01E46BFC ADD W9, W9, 0x1
	0x01E46C00 ADD X8, X8, W9, 0x4, SXTW
	0x01E46C04 ADD X0, X8, 0x138
	0x01E46C08 LDP X8, X3, [X0]
	0x01E46C0C MOV X0, X20
	0x01E46C10 MOV X1, X22
	0x01E46C14 MOV X2, X23
	0x01E46C18 BLR X8
	0x01E46C1C B 0x1E46A9C
	0x01E46C20 MOV X19, X31
	0x01E46C24 ADRP X22, 0x22AD000
	0x01E46C28 LDR X22, [X22 + 0xE00]
	0x01E46C2C MOV X0, X21
	0x01E46C30 LDR X1, [X22]
	0x01E46C34 BL 0x1C16E00
	0x01E46C38 CBZ X0, 0x1E46C98
	0x01E46C3C LDR X8, [X0]
	0x01E46C40 LDR X1, [X22]
	0x01E46C44 MOV X20, X0
	0x01E46C48 LDRH W9, [X8 + 0x12E]
	0x01E46C4C CBZ X9, 0x1E46C70
	0x01E46C50 LDR X10, [X8 + 0xB0]
	0x01E46C54 ADD X10, X10, 0x8
	0x01E46C58 LDUR X11, [X10 - 0x8]
	0x01E46C5C CMP X11, X1
	0x01E46C60 B.EQ 0x1E46C80
	0x01E46C64 SUBS X9, X9, 0x1
	0x01E46C68 ADD X10, X10, 0x10
	0x01E46C6C B.NE 0x1E46C58
	0x01E46C70 MOV X0, X20
	0x01E46C74 MOV W2, W31
	0x01E46C78 BL 0x1C5C788
	0x01E46C7C B 0x1E46C8C
	0x01E46C80 LDRSW X9, [X10]
	0x01E46C84 ADD X8, X8, X9, 0x4, LSL
	0x01E46C88 ADD X0, X8, 0x138
	0x01E46C8C LDP X8, X1, [X0]
	0x01E46C90 MOV X0, X20
	0x01E46C94 BLR X8
	0x01E46C98 CBNZ X19, 0x1E46CB8
	0x01E46C9C LDP X20, X19, [X31 + 0x30]
	0x01E46CA0 LDP X22, X21, [X31 + 0x20]
	0x01E46CA4 LDP X24, X23, [X31 + 0x10]
	0x01E46CA8 LDP X30, X25, [X31], #0x40
	0x01E46CAC RET
	0x01E46CB0 BL 0x1C16F20
	0x01E46CB4 BL 0x1C16F20
	0x01E46CB8 MOV X0, X19
	0x01E46CBC BL 0x1C16F18
	0x01E46CC0 B 0x1E46CCC
	0x01E46CC4 B 0x1E46CCC
	0x01E46CC8 B 0x1E46CCC
	0x01E46CCC MOV X20, X0
	0x01E46CD0 CMP W1, 0x1
	0x01E46CD4 B.NE 0x1E46CEC
	0x01E46CD8 MOV X0, X20
	0x01E46CDC BL 0x3EB1AD0
	0x01E46CE0 LDR X19, [X0]
	0x01E46CE4 BL 0x3EB1AE0
	0x01E46CE8 B 0x1E46C24
	0x01E46CEC MOV X19, X31
	0x01E46CF0 B 0x1E46CF8
	0x01E46CF4 MOV X20, X0
	0x01E46CF8 ADRP X22, 0x22AD000
	0x01E46CFC LDR X22, [X22 + 0xE00]
	0x01E46D00 LDR X1, [X22]
	0x01E46D04 MOV X0, X21
	0x01E46D08 BL 0x1C16E00
	0x01E46D0C MOV X21, X0
	0x01E46D10 CBZ X0, 0x1E46D6C
	0x01E46D14 LDR X8, [X21]
	0x01E46D18 LDR X1, [X22]
	0x01E46D1C LDRH W9, [X8 + 0x12E]
	0x01E46D20 CBZ X9, 0x1E46D44
	0x01E46D24 LDR X10, [X8 + 0xB0]
	0x01E46D28 ADD X10, X10, 0x8
	0x01E46D2C LDUR X11, [X10 - 0x8]
	0x01E46D30 CMP X11, X1
	0x01E46D34 B.EQ 0x1E46D54
	0x01E46D38 SUBS X9, X9, 0x1
	0x01E46D3C ADD X10, X10, 0x10
	0x01E46D40 B.NE 0x1E46D2C
	0x01E46D44 MOV X0, X21
	0x01E46D48 MOV W2, W31
	0x01E46D4C BL 0x1C5C788
	0x01E46D50 B 0x1E46D60
	0x01E46D54 LDRSW X9, [X10]
	0x01E46D58 ADD X8, X8, X9, 0x4, LSL
	0x01E46D5C ADD X0, X8, 0x138
	0x01E46D60 LDP X8, X1, [X0]
	0x01E46D64 MOV X0, X21
	0x01E46D68 BLR X8
	0x01E46D6C CBNZ X19, 0x1E46D78
	0x01E46D70 MOV X0, X20
	0x01E46D74 BL 0x1D2C690
	0x01E46D78 MOV X0, X19
	0x01E46D7C BL 0x1C16F18
	0x01E46D80 BL 0x1990590
	0x01E46D84 STR X30, [X31 - 0x20]!
	0x01E46D88 STP X20, X19, [X31 + 0x10]
	0x01E46D8C MOV X20, X0
	0x01E46D90 LDR X0, [X0 + 0x110]
	0x01E46D94 CBZ X0, 0x1E46DF4
	0x01E46D98 MOV W19, W1
	0x01E46D9C MOV X1, X31
	0x01E46DA0 BL 0x1E5B1C4
	0x01E46DA4 TBNZ X0, 0x0, 0x1E46DE4
	0x01E46DA8 LDR X0, [X20 + 0x110]
	0x01E46DAC CBZ X0, 0x1E46DF4
	0x01E46DB0 MOV X1, X31
	0x01E46DB4 BL 0x1E5E780
	0x01E46DB8 AND W8, W0, 0x1
	0x01E46DBC AND W9, W19, 0x1
	0x01E46DC0 CMP W8, W9
	0x01E46DC4 B.EQ 0x1E46DE4
	0x01E46DC8 LDR X0, [X20 + 0x110]
	0x01E46DCC CBZ X0, 0x1E46DF4
	0x01E46DD0 AND W1, W19, 0x1
	0x01E46DD4 MOV X2, X31
	0x01E46DD8 BL 0x1E5E788
	0x01E46DDC MOVZ W0, 0x1
	0x01E46DE0 B 0x1E46DE8
	0x01E46DE4 MOV W0, W31
	0x01E46DE8 LDP X20, X19, [X31 + 0x10]
	0x01E46DEC LDR X30, [X31], #0x20
	0x01E46DF0 RET
	0x01E46DF4 BL 0x1C16F20
	0x01E46DF8 STR X30, [X31 - 0x20]!
	0x01E46DFC STP X20, X19, [X31 + 0x10]
	0x01E46E00 MOV X20, X0
	0x01E46E04 LDR X0, [X0 + 0x110]
	0x01E46E08 CBZ X0, 0x1E46E68
	0x01E46E0C MOV W19, W1
	0x01E46E10 MOV X1, X31
	0x01E46E14 BL 0x1E5B1C4
	0x01E46E18 TBNZ X0, 0x0, 0x1E46E58
	0x01E46E1C LDR X0, [X20 + 0x110]
	0x01E46E20 CBZ X0, 0x1E46E68
	0x01E46E24 MOV X1, X31
	0x01E46E28 BL 0x1E5E6A0
	0x01E46E2C AND W8, W0, 0x1
	0x01E46E30 AND W9, W19, 0x1
	0x01E46E34 CMP W8, W9
	0x01E46E38 B.EQ 0x1E46E58
	0x01E46E3C LDR X0, [X20 + 0x110]
	0x01E46E40 CBZ X0, 0x1E46E68
	0x01E46E44 AND W1, W19, 0x1
	0x01E46E48 MOV X2, X31
	0x01E46E4C BL 0x1E5E6A8
	0x01E46E50 MOVZ W0, 0x1
	0x01E46E54 B 0x1E46E5C
	0x01E46E58 MOV W0, W31
	0x01E46E5C LDP X20, X19, [X31 + 0x10]
	0x01E46E60 LDR X30, [X31], #0x20
	0x01E46E64 RET
	0x01E46E68 BL 0x1C16F20
	0x01E46E6C STP X30, X19, [X31 - 0x10]!
	0x01E46E70 LDR X0, [X0 + 0x10]
	0x01E46E74 CBZ X0, 0x1E46E84
	0x01E46E78 LDR X8, [X0]
	0x01E46E7C LDP X9, X1, [X8 + 0x1E8]
	0x01E46E80 BLR X9
	0x01E46E84 LDP X30, X19, [X31], #0x10
	0x01E46E88 RET
	0x01E46E8C CMP W1, 0x1
	0x01E46E90 MOV X19, X0
	0x01E46E94 B.NE 0x1E46EF0
	0x01E46E98 MOV X0, X19
	0x01E46E9C BL 0x3EB1AD0
	0x01E46EA0 MOV X19, X0
	0x01E46EA4 ADRP X0, 0x22AD000
	0x01E46EA8 LDR X0, [X0 + 0x7D0]
	0x01E46EAC BL 0x1C16D08
	0x01E46EB0 LDR X8, [X19]
	0x01E46EB4 LDR X1, [X8]
	0x01E46EB8 BL 0x1C17270
	0x01E46EBC TBZ X0, 0x0, 0x1E46EC8
	0x01E46EC0 LDP X30, X19, [X31], #0x10
	0x01E46EC4 B 0x3EB1AE0
	0x01E46EC8 MOVZ W0, 0x8
	0x01E46ECC BL 0x3EB1AF0
	0x01E46ED0 LDR X8, [X19]
	0x01E46ED4 STR X8, [X0]
	0x01E46ED8 ADRP X1, 0x206E000
	0x01E46EDC ADD X1, X1, 0xE58
	0x01E46EE0 MOV X2, X31
	0x01E46EE4 BL 0x3EB1B00
	0x01E46EE8 MOV X19, X0
	0x01E46EEC BL 0x3EB1AE0
	0x01E46EF0 MOV X0, X19
	0x01E46EF4 BL 0x1D2C690
	0x01E46EF8 BL 0x1990590
	0x01E46EFC LDR X0, [X0 + 0x10]
	0x01E46F00 CBZ X0, 0x1E46F10
	0x01E46F04 LDR X8, [X0]
	0x01E46F08 LDP X2, X1, [X8 + 0x1E8]

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X19, 0x2593000
	014 Move W8, [X19+4031]
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {45}
	019 Move X0, 0x22B6000
	020 Move X0, [X0+3272]
	021 Call 0x1C17CF4
	022 Move X0, 0x22AE000
	023 Move X0, [X0+3584]
	024 Call 0x1C17CF4
	025 Move X0, 0x22B6000
	026 Move X0, [X0+3280]
	027 Call 0x1C17CF4
	028 Move X0, 0x22B6000
	029 Move X0, [X0+3288]
	030 Call 0x1C17CF4
	031 Move X0, 0x22AE000
	032 Move X0, [X0+1728]
	033 Call 0x1C17CF4
	034 Move X0, 0x22B6000
	035 Move X0, [X0+3296]
	036 Call 0x1C17CF4
	037 Move X0, 0x22B6000
	038 Move X0, [X0+3304]
	039 Call 0x1C17CF4
	040 Move X0, 0x22B6000
	041 Move X0, [X0+3312]
	042 Call 0x1C17CF4
	043 Move W8, 1
	044 Move [X19+4031], W8
	045 Move X0, X31
	046 Call AppDomain.get_CurrentDomain
	047 Compare X0, 0
	048 JumpIfEqual {370}
	049 Move X1, X31
	050 Call AppDomain.GetAssemblies, X0
	051 Compare X0, 0
	052 JumpIfEqual {370}
	053 Move X29, 0x22AE000
	054 Move X29, [X29+1728]
	055 Move X19, X0
	056 Move X20, X31
	057 Move W9, 1
	058 Move W8, [X19+24]
	059 Move W28, W9
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Move W27, W31
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Add X8, X19, W27
	064 Move X22, [X8+32]
	065 Compare X22, 0
	066 JumpIfEqual {370}
	067 Move X8, [X22]
	068 Move X0, X22
	069 Move X9, [X8+440]
	070 Move X1, [X8+448]
	071 NotImplemented "Instruction BLR not yet implemented."
	072 Compare X0, 0
	073 JumpIfEqual {370}
	074 Move X1, X31
	075 Call String.ToLower, X0
	076 Move TEMP, X28
	077 And TEMP, TEMP, 1
	078 Compare TEMP, 1
	079 JumpIfNotEqual {113}
	080 Move X23, X0
	081 Compare X0, 0
	082 JumpIfEqual {370}
	083 Move X8, 0x22B6000
	084 Move X8, [X8+3296]
	085 Move X0, X23
	086 Move X2, X31
	087 Move X1, [X8]
	088 Call String.Contains, X0, X1
	089 Move TEMP, X0
	090 And TEMP, TEMP, 1
	091 Compare TEMP, 1
	092 JumpIfEqual {113}
	093 Move X8, 0x22B6000
	094 Move X8, [X8+3304]
	095 Move X0, X23
	096 Move X2, X31
	097 Move X1, [X8]
	098 Call String.Contains, X0, X1
	099 Move TEMP, X0
	100 And TEMP, TEMP, 1
	101 Compare TEMP, 1
	102 JumpIfEqual {113}
	103 Move X8, 0x22B6000
	104 Move X8, [X8+3312]
	105 Move X0, X23
	106 Move X2, X31
	107 Move X1, [X8]
	108 Call String.Contains, X0, X1
	109 Move TEMP, X0
	110 And TEMP, TEMP, 1
	111 Compare TEMP, 1
	112 JumpIfNotEqual {330}
	113 Move X8, [X22]
	114 Move X0, X22
	115 Move X9, [X8+552]
	116 Move X1, [X8+560]
	117 NotImplemented "Instruction BLR not yet implemented."
	118 Compare X0, 0
	119 JumpIfEqual {370}
	120 Move X8, [X0+24]
	121 Move X22, X0
	122 NotImplemented "Instruction CMP not yet implemented."
	123 Move X21, X31
	124 And X8, X8, 0
	125 NotImplemented "Instruction CMP not yet implemented."
	126 Move X0, [X29]
	127 Add X8, X22, X21
	128 Move X9, 0x22B6000
	129 Move X23, [X8+32]
	130 Move W8, [X0+224]
	131 Move X9, [X9+3280]
	132 Move X24, [X9]
	133 Compare W8, 0
	134 JumpIfNotEqual {136}
	135 Call 0x1C17DFC
	136 Move X0, X24
	137 Move X1, X31
	138 Call Type.GetTypeFromHandle, X0
	139 Compare X0, 0
	140 JumpIfEqual {370}
	141 Move X8, [X0]
	142 Move X1, X23
	143 Move X9, [X8+680]
	144 Move X2, [X8+688]
	145 NotImplemented "Instruction BLR not yet implemented."
	146 Move TEMP, X0
	147 And TEMP, TEMP, 1
	148 Compare TEMP, 1
	149 JumpIfNotEqual {166}
	150 Compare X23, 0
	151 JumpIfEqual {370}
	152 Move X0, X23
	153 Move X1, X31
	154 Call Type.get_IsInterface, X0
	155 Move TEMP, X0
	156 And TEMP, TEMP, 1
	157 Compare TEMP, 1
	158 JumpIfEqual {166}
	159 Move X0, X23
	160 Move X1, X31
	161 Call Type.get_IsAbstract, X0
	162 Move TEMP, X0
	163 And TEMP, TEMP, 1
	164 Compare TEMP, 1
	165 JumpIfNotEqual {169}
	166 Move W8, [X22+24]
	167 Add X21, X21, 1
	168 NotImplemented "Instruction CMP not yet implemented."
	169 Move X0, X23
	170 Move X1, X31
	171 Call Activator.CreateInstance, X0
	172 Move X25, X0
	173 Compare X0, 0
	174 JumpIfEqual {187}
	175 Move X8, 0x22B6000
	176 Move X8, [X8+3288]
	177 Move X26, [X8]
	178 Move X0, X25
	179 Move X1, X26
	180 Call 0x1C17E00
	181 Move X24, X0
	182 Compare X0, 0
	183 JumpIfNotEqual {188}
	184 Move X0, X25
	185 Move X1, X26
	186 Call 0x1C181E0
	187 Move X24, X31
	188 Move X8, 0x22B6000
	189 Move X8, [X8+3272]
	190 Move X25, [X8]
	191 Move X8, [X25+56]
	192 Compare X8, 0
	193 JumpIfNotEqual {197}
	194 Move X0, X25
	195 Call 0x1C5D6E0
	196 Move X8, [X25+56]
	197 Move X0, [X8+16]
	198 Move W8, [X0+309]
	199 Move TEMP, X8
	200 And TEMP, TEMP, 1
	201 Compare TEMP, 1
	202 JumpIfEqual {204}
	203 Call 0x1C5D684
	204 Move W8, [X0+224]
	205 Compare W8, 0
	206 JumpIfNotEqual {208}
	207 Call 0x1C17DFC
	208 Move X8, [X25+56]
	209 Move X0, [X8+16]
	210 Move W8, [X0+309]
	211 Move TEMP, X8
	212 And TEMP, TEMP, 1
	213 Compare TEMP, 1
	214 JumpIfEqual {216}
	215 Call 0x1C5D684
	216 Move X8, 0x22B6000
	217 Move X8, [X8+3272]
	218 Move X9, [X0+184]
	219 Move X26, [X8]
	220 Move X25, [X9]
	221 Move X8, [X26+56]
	222 Compare X8, 0
	223 JumpIfNotEqual {227}
	224 Move X0, X26
	225 Call 0x1C5D6E0
	226 Move X8, [X26+56]
	227 Move X0, [X8+16]
	228 Move W8, [X0+309]
	229 Move TEMP, X8
	230 And TEMP, TEMP, 1
	231 Compare TEMP, 1
	232 JumpIfEqual {234}
	233 Call 0x1C5D684
	234 Move W8, [X0+224]
	235 Compare W8, 0
	236 JumpIfNotEqual {238}
	237 Call 0x1C17DFC
	238 Move X8, [X26+56]
	239 Move X0, [X8+16]
	240 Move W8, [X0+309]
	241 Move TEMP, X8
	242 And TEMP, TEMP, 1
	243 Compare TEMP, 1
	244 JumpIfEqual {246}
	245 Call 0x1C5D684
	246 Compare X24, 0
	247 JumpIfEqual {312}
	248 Move X9, [X0+184]
	249 Move X8, [X24]
	250 Move X10, 0x22B6000
	251 Move X26, [X9]
	252 NotImplemented "Instruction LDRH not yet implemented."
	253 Move X10, [X10+3288]
	254 Move X1, [X10]
	255 Compare X9, 0
	256 JumpIfEqual {263}
	257 Move X10, [X8+176]
	258 Add X10, X10, 8
	259 NotImplemented "Instruction LDUR not yet implemented."
	260 NotImplemented "Instruction CMP not yet implemented."
	261 Subtract X9, X9, 1
	262 Add X10, X10, 16
	263 Move X0, X24
	264 Move W2, W31
	265 Call 0x1C5D788
	266 NotImplemented "Instruction LDRSW not yet implemented."
	267 Add X8, X8, X9
	268 Add X0, X8, 312
	269 Move X8, [X0]
	270 Move X6, [X0+8]
	271 Move W5, 1200
	272 Move X0, X24
	273 Move X1, X25
	274 Move X2, X26
	275 Move X3, X31
	276 Move W4, W31
	277 NotImplemented "Instruction BLR not yet implemented."
	278 Move X8, 0x22AE000
	279 Move X8, [X8+3584]
	280 Move X1, [X8]
	281 Move X0, X24
	282 Call 0x1C17E00
	283 NotImplemented "Instruction CMP not yet implemented."
	284 NotImplemented "Instruction CSEL not yet implemented."
	285 Compare X0, 0
	286 JumpIfEqual {356}
	287 Compare X20, 0
	288 JumpIfEqual {313}
	289 Move X8, [X20]
	290 Move X10, 0x22AE000
	291 NotImplemented "Instruction LDRH not yet implemented."
	292 Move X10, [X10+3584]
	293 Move X1, [X10]
	294 Compare X9, 0
	295 JumpIfEqual {302}
	296 Move X10, [X8+176]
	297 Add X10, X10, 8
	298 NotImplemented "Instruction LDUR not yet implemented."
	299 NotImplemented "Instruction CMP not yet implemented."
	300 Subtract X9, X9, 1
	301 Add X10, X10, 16
	302 Move X0, X20
	303 Move W2, W31
	304 Call 0x1C5D788
	305 NotImplemented "Instruction LDRSW not yet implemented."
	306 Add X8, X8, X9
	307 Add X0, X8, 312
	308 Move X8, [X0]
	309 Move X1, [X0+8]
	310 Move X0, X20
	311 NotImplemented "Instruction BLR not yet implemented."
	312 Call 0x1C17F20
	313 Call 0x1C17F20
	314 Move X23, X0
	315 NotImplemented "Instruction CMP not yet implemented."
	316 Move X0, X23
	317 Call 0x3EB2AD0
	318 Move X23, X0
	319 Move X0, 0x22B4000
	320 Move X0, [X0+3264]
	321 Call 0x1C17D08
	322 Move X8, [X23]
	323 Move X1, [X8]
	324 Call 0x1C18270
	325 Move TEMP, X0
	326 And TEMP, TEMP, 1
	327 Compare TEMP, 1
	328 JumpIfNotEqual {372}
	329 Call 0x3EB2AE0
	330 Move W8, [X19+24]
	331 Add W27, W27, 1
	332 NotImplemented "Instruction CMP not yet implemented."
	333 Move W9, W31
	334 Move TEMP, X28
	335 And TEMP, TEMP, 1
	336 Compare TEMP, 1
	337 JumpIfEqual {58}
	338 Move X0, 0x22AE000
	339 Move X0, [X0+1456]
	340 Call 0x1C17D08
	341 Call 0x1C17F10
	342 Move X19, X0
	343 Move X0, 0x22B6000
	344 Move X0, [X0+3320]
	345 Call 0x1C17D08
	346 Move X1, X0
	347 Move X0, X19
	348 Move X2, X31
	349 Call InvalidOperationException..ctor, X0, X1
	350 Move X0, 0x22B6000
	351 Move X0, [X0+3328]
	352 Call 0x1C17D08
	353 Move X1, X0
	354 Move X0, X19
	355 Call 0x1C17DEC
	356 Move X0, X23
	357 Move X20, [X31+80]
	358 Move X19, [X31+88]
	359 Move X22, [X31+64]
	360 Move X21, [X31+72]
	361 Move X24, [X31+48]
	362 Move X23, [X31+56]
	363 Move X26, [X31+32]
	364 Move X25, [X31+40]
	365 Move X28, [X31+16]
	366 Move X27, [X31+24]
	367 Move X29, [X31+96]
	368 Move X30, [X31+104]
	369 Return X0
	370 Call 0x1C17F20
	371 Call 0x1C17F28
	372 Move W0, 8
	373 Call 0x3EB2AF0
	374 Move X8, [X23]
	375 Move [X0], X8
	376 Move X1, 0x206F000
	377 Add X1, X1, 3672
	378 Move X2, X31
	379 Call 0x3EB2B00
	380 Move X23, X0
	381 Call 0x3EB2AE0
	382 Move X0, X23
	383 Call 0x1D2D690
	384 Call 0x1991590

Method: System.Void Reset()

Disassembly:
	0x01E47054 MOVZ W1, 0x1

ISIL:
	001 Return 

Method: System.Boolean ConnectUsingSettings(Fusion.Photon.Realtime.AppSettings appSettings)

Disassembly:
	0x01E47058 LDR X0, [X9]
	0x01E4705C BL 0x1C16D6C
	0x01E47060 CBZ X0, 0x1E470BC
	0x01E47064 LDR W8, [X0 + 0x18]
	0x01E47068 CBZ W8, 0x1E470C0
	0x01E4706C ADRP X8, 0x22B4000
	0x01E47070 LDR X8, [X8 + 0xDD0]
	0x01E47074 MOVZ W9, 0x1
	0x01E47078 LDP X20, X19, [X31 + 0x60]
	0x01E4707C LDP X26, X25, [X31 + 0x30]
	0x01E47080 LDR X8, [X8]
	0x01E47084 LDP X28, X27, [X31 + 0x20]
	0x01E47088 STR X8, [X0 + 0x20]
	0x01E4708C STRH W31, [X24 + 0x40]
	0x01E47090 STRB W9, [X24 + 0x42]
	0x01E47094 LDP X30, X8, [X31 + 0x10]
	0x01E47098 STR X8, [X24 + 0x28]
	0x01E4709C LDR X8, [X31 + 0x8]
	0x01E470A0 STP X8, X0, [X24 + 0x30]
	0x01E470A4 STR X24, [X21 + 0x18]
	0x01E470A8 MOV X0, X21
	0x01E470AC LDP X22, X21, [X31 + 0x50]
	0x01E470B0 LDP X24, X23, [X31 + 0x40]
	0x01E470B4 ADD X31, X31, 0x70
	0x01E470B8 RET
	0x01E470BC BL 0x1C16F20
	0x01E470C0 BL 0x1C16F28
	0x01E470C4 STR X30, [X31 - 0x30]!
	0x01E470C8 STP X22, X21, [X31 + 0x10]
	0x01E470CC STP X20, X19, [X31 + 0x20]
	0x01E470D0 ADRP X22, 0x2591000
	0x01E470D4 LDRB W8, [X22 + 0xFC4]
	0x01E470D8 MOV X19, X2
	0x01E470DC MOV X21, X1
	0x01E470E0 MOV X20, X0
	0x01E470E4 TBNZ X8, 0x0, 0x1E47138
	0x01E470E8 ADRP X0, 0x22B4000
	0x01E470EC LDR X0, [X0 + 0xD68]
	0x01E470F0 BL 0x1C16CF4
	0x01E470F4 ADRP X0, 0x22B4000
	0x01E470F8 LDR X0, [X0 + 0xD78]
	0x01E470FC BL 0x1C16CF4
	0x01E47100 ADRP X0, 0x22AE000
	0x01E47104 LDR X0, [X0 + 0xE78]
	0x01E47108 BL 0x1C16CF4
	0x01E4710C ADRP X0, 0x22B4000
	0x01E47110 LDR X0, [X0 + 0xDD8]
	0x01E47114 BL 0x1C16CF4
	0x01E47118 ADRP X0, 0x22AD000
	0x01E4711C LDR X0, [X0 + 0x1D0]
	0x01E47120 BL 0x1C16CF4
	0x01E47124 ADRP X0, 0x22B4000
	0x01E47128 LDR X0, [X0 + 0xDB0]
	0x01E4712C BL 0x1C16CF4
	0x01E47130 MOVZ W8, 0x1
	0x01E47134 STRB W8, [X22 + 0xFC4]
	0x01E47138 STR X31, [X21]
	0x01E4713C STR X31, [X19]
	0x01E47140 CBZ X20, 0x1E471E8
	0x01E47144 ADRP X8, 0x22B4000
	0x01E47148 LDR X8, [X8 + 0xD68]
	0x01E4714C MOV X0, X20
	0x01E47150 LDR X1, [X8]
	0x01E47154 BL 0x2AA4E88
	0x01E47158 CMP W0, 0x1
	0x01E4715C B.LT 0x1E471E8
	0x01E47160 ADRP X8, 0x22B4000
	0x01E47164 LDR X8, [X8 + 0xDB0]
	0x01E47168 LDR X0, [X8]
	0x01E4716C LDR W8, [X0 + 0xE0]
	0x01E47170 CBNZ W8, 0x1E47178
	0x01E47174 BL 0x1C16DFC
	0x01E47178 MOV X0, X20
	0x01E4717C MOV X1, X31
	0x01E47180 BL 0x1E62458
	0x01E47184 STR X0, [X21]
	0x01E47188 ADRP X8, 0x22B4000
	0x01E4718C LDR X8, [X8 + 0xD78]
	0x01E47190 MOV X0, X20
	0x01E47194 LDR X1, [X8]
	0x01E47198 BL 0x2AA4E98
	0x01E4719C ADRP X8, 0x22AD000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x2592000
	007 Move W8, [X21+4032]
	008 Move X20, X1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {25}
	014 Move X0, 0x22B5000
	015 Move X0, [X0+3352]
	016 Call 0x1C17CF4
	017 Move X0, 0x22B5000
	018 Move X0, [X0+3360]
	019 Call 0x1C17CF4
	020 Move X0, 0x22B5000
	021 Move X0, [X0+3368]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+4032], W8
	025 Compare X20, 0
	026 JumpIfEqual {106}
	027 Move X0, X20
	028 Call AppSettings.GetCopy, X0
	029 Move X21, X19
	030 Move X20, X0
	031 Move [X21+98], W31
	032 Move X0, X31
	033 NotImplemented "Instruction STRH not yet implemented."
	034 Call RuntimeUnityFlagsSetup.get_IsUNITY_WEBGL
	035 Move TEMP, X0
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfNotEqual {43}
	039 Compare X20, 0
	040 JumpIfEqual {106}
	041 Move W8, 5
	042 Move [X20+104], W8
	043 Compare X20, 0
	044 JumpIfEqual {106}
	045 Move W8, [X20+104]
	046 Compare W8, 0
	047 JumpIfNotEqual {66}
	048 Move W8, [X20+88]
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Move W8, [X19+408]
	051 Compare W8, 0
	052 JumpIfNotEqual {66}
	053 Move X22, 0x22B5000
	054 Move X22, [X22+3352]
	055 Move X0, [X22]
	056 Move W8, [X0+224]
	057 Compare W8, 0
	058 JumpIfNotEqual {61}
	059 Call 0x1C17DFC
	060 Move X0, [X22]
	061 Move X8, [X0+184]
	062 NotImplemented "Instruction LDRH not yet implemented."
	063 Move W8, [X8]
	064 NotImplemented "Instruction STRH not yet implemented."
	065 Move [X21], W8
	066 Move X0, [X20+64]
	067 Compare X0, 0
	068 JumpIfEqual {106}
	069 Move X1, X31
	070 Call String.ToLower, X0
	071 Compare X0, 0
	072 JumpIfEqual {106}
	073 Move X8, 0x22B5000
	074 Move X8, [X8+3368]
	075 Move X2, X31
	076 Move X1, [X8]
	077 Call String.Equals, X0, X1
	078 Move TEMP, X0
	079 And TEMP, TEMP, 1
	080 Compare TEMP, 1
	081 JumpIfNotEqual {97}
	082 Move X0, [X20+80]
	083 Compare X0, 0
	084 JumpIfEqual {87}
	085 Move X1, X31
	086 Call String.Trim, X0
	087 Move X1, X31
	088 Call String.IsNullOrEmpty, X0
	089 Move TEMP, X0
	090 And TEMP, TEMP, 1
	091 Compare TEMP, 1
	092 JumpIfNotEqual {97}
	093 Move X8, 0x22B5000
	094 Move X8, [X8+3360]
	095 Move X8, [X8]
	096 Move [X20+80], X8
	097 Move X0, X19
	098 Move X1, X20
	099 Move X20, [X31+32]
	100 Move X19, [X31+40]
	101 Move X22, [X31+16]
	102 Move X21, [X31+24]
	103 Move X30, [X31+48]
	104 Call LoadBalancingClient.ConnectUsingSettings, X0, X1
	105 Return X0
	106 Call 0x1C17F20

Method: System.Boolean UpdateRoomProperties(System.Collections.Generic.Dictionary`2<System.String, Fusion.SessionProperty> customProperties)

Disassembly:
	0x01E4758C BL 0x32274B8
	0x01E47590 MOV X22, X0
	0x01E47594 CBZ X22, 0x1E475AC
	0x01E47598 LDR X8, [X20]
	0x01E4759C MOV X0, X22
	0x01E475A0 LDR X1, [X8 + 0x40]
	0x01E475A4 BL 0x1C16E00
	0x01E475A8 CBZ X0, 0x1E479E0
	0x01E475AC LDR W8, [X20 + 0x18]
	0x01E475B0 CMP W8, 0x1
	0x01E475B4 B.LS 0x1E479DC
	0x01E475B8 STR X22, [X20 + 0x28]
	0x01E475BC LDR X0, [X19 + 0x20]
	0x01E475C0 MOV X1, X31
	0x01E475C4 BL 0x32277A8
	0x01E475C8 TBZ X0, 0x0, 0x1E475E0
	0x01E475CC LDR X8, [X24]
	0x01E475D0 LDR X8, [X8 + 0xB8]
	0x01E475D4 LDR X22, [X8]
	0x01E475D8 CBNZ X22, 0x1E47610
	0x01E475DC B 0x1E47624
	0x01E475E0 LDR X1, [X19 + 0x20]
	0x01E475E4 BL 0x1E479F0
	0x01E475E8 ADRP X8, 0x22B4000
	0x01E475EC LDR X8, [X8 + 0xE00]
	0x01E475F0 LDR X2, [X23]
	0x01E475F4 MOV X1, X0
	0x01E475F8 MOV X3, X31
	0x01E475FC LDR X8, [X8]
	0x01E47600 MOV X0, X8
	0x01E47604 BL 0x32274B8
	0x01E47608 MOV X22, X0
	0x01E4760C CBZ X22, 0x1E47624
	0x01E47610 LDR X8, [X20]
	0x01E47614 MOV X0, X22
	0x01E47618 LDR X1, [X8 + 0x40]
	0x01E4761C BL 0x1C16E00
	0x01E47620 CBZ X0, 0x1E479E0
	0x01E47624 LDR W8, [X20 + 0x18]
	0x01E47628 CMP W8, 0x2
	0x01E4762C B.LS 0x1E479DC
	0x01E47630 STR X22, [X20 + 0x30]
	0x01E47634 LDR X0, [X19 + 0x28]
	0x01E47638 MOV X1, X31
	0x01E4763C BL 0x32277A8
	0x01E47640 TBZ X0, 0x0, 0x1E47658
	0x01E47644 LDR X8, [X24]
	0x01E47648 LDR X8, [X8 + 0xB8]
	0x01E4764C LDR X22, [X8]
	0x01E47650 CBNZ X22, 0x1E47688
	0x01E47654 B 0x1E4769C
	0x01E47658 LDR X1, [X19 + 0x28]
	0x01E4765C BL 0x1E479F0
	0x01E47660 ADRP X8, 0x22B4000
	0x01E47664 LDR X8, [X8 + 0xE30]
	0x01E47668 LDR X2, [X23]
	0x01E4766C MOV X1, X0
	0x01E47670 MOV X3, X31
	0x01E47674 LDR X8, [X8]
	0x01E47678 MOV X0, X8
	0x01E4767C BL 0x32274B8
	0x01E47680 MOV X22, X0
	0x01E47684 CBZ X22, 0x1E4769C
	0x01E47688 LDR X8, [X20]
	0x01E4768C MOV X0, X22
	0x01E47690 LDR X1, [X8 + 0x40]
	0x01E47694 BL 0x1C16E00
	0x01E47698 CBZ X0, 0x1E479E0
	0x01E4769C LDR W8, [X20 + 0x18]
	0x01E476A0 CMP W8, 0x3
	0x01E476A4 B.LS 0x1E479DC
	0x01E476A8 STR X22, [X20 + 0x38]
	0x01E476AC LDR X0, [X19 + 0x30]
	0x01E476B0 MOV X1, X31
	0x01E476B4 BL 0x32277A8
	0x01E476B8 TBZ X0, 0x0, 0x1E476D0
	0x01E476BC LDR X8, [X24]
	0x01E476C0 LDR X8, [X8 + 0xB8]
	0x01E476C4 LDR X22, [X8]
	0x01E476C8 CBNZ X22, 0x1E476F4
	0x01E476CC B 0x1E47708
	0x01E476D0 ADRP X8, 0x22B4000
	0x01E476D4 LDR X1, [X19 + 0x30]
	0x01E476D8 LDR X8, [X8 + 0xE20]
	0x01E476DC LDR X2, [X23]
	0x01E476E0 MOV X3, X31
	0x01E476E4 LDR X0, [X8]
	0x01E476E8 BL 0x32274B8
	0x01E476EC MOV X22, X0
	0x01E476F0 CBZ X22, 0x1E47708
	0x01E476F4 LDR X8, [X20]
	0x01E476F8 MOV X0, X22
	0x01E476FC LDR X1, [X8 + 0x40]
	0x01E47700 BL 0x1C16E00
	0x01E47704 CBZ X0, 0x1E479E0
	0x01E47708 LDR W8, [X20 + 0x18]
	0x01E4770C CMP W8, 0x4
	0x01E47710 B.LS 0x1E479DC
	0x01E47714 ADRP X8, 0x22AC000
	0x01E47718 LDR X8, [X8 + 0xB58]
	0x01E4771C STR X22, [X20 + 0x40]
	0x01E47720 ADRP X25, 0x22B4000
	0x01E47724 ADD X22, X19, 0x38
	0x01E47728 LDR X0, [X8]
	0x01E4772C LDR W8, [X0 + 0xE0]
	0x01E47730 LDR X25, [X25 + 0xE38]
	0x01E47734 CBNZ W8, 0x1E4773C
	0x01E47738 BL 0x1C16DFC
	0x01E4773C MOV X0, X22
	0x01E47740 MOV X1, X31
	0x01E47744 BL 0x33176C4
	0x01E47748 LDR X8, [X25]
	0x01E4774C LDR X2, [X23]
	0x01E47750 MOV X1, X0
	0x01E47754 MOV X3, X31
	0x01E47758 MOV X0, X8
	0x01E4775C BL 0x32274B8
	0x01E47760 MOV X22, X0
	0x01E47764 CBZ X0, 0x1E4777C
	0x01E47768 LDR X8, [X20]
	0x01E4776C MOV X0, X22
	0x01E47770 LDR X1, [X8 + 0x40]
	0x01E47774 BL 0x1C16E00
	0x01E47778 CBZ X0, 0x1E479E0
	0x01E4777C LDR W8, [X20 + 0x18]
	0x01E47780 CMP W8, 0x5
	0x01E47784 B.LS 0x1E479DC
	0x01E47788 ADRP X8, 0x22B4000
	0x01E4778C LDR X8, [X8 + 0xE40]
	0x01E47790 STR X22, [X20 + 0x48]
	0x01E47794 LDR X1, [X19 + 0x40]
	0x01E47798 LDR X2, [X23]
	0x01E4779C LDR X0, [X8]
	0x01E477A0 MOV X3, X31
	0x01E477A4 BL 0x32274B8
	0x01E477A8 MOV X22, X0
	0x01E477AC CBZ X0, 0x1E477C4
	0x01E477B0 LDR X8, [X20]
	0x01E477B4 MOV X0, X22
	0x01E477B8 LDR X1, [X8 + 0x40]
	0x01E477BC BL 0x1C16E00
	0x01E477C0 CBZ X0, 0x1E479E0
	0x01E477C4 LDR W8, [X20 + 0x18]
	0x01E477C8 CMP W8, 0x6
	0x01E477CC B.LS 0x1E479DC
	0x01E477D0 STR X22, [X20 + 0x50]
	0x01E477D4 LDR X0, [X19 + 0x50]
	0x01E477D8 MOV X1, X31
	0x01E477DC BL 0x32277A8
	0x01E477E0 TBZ X0, 0x0, 0x1E477F8
	0x01E477E4 LDR X8, [X24]
	0x01E477E8 LDR X8, [X8 + 0xB8]
	0x01E477EC LDR X22, [X8]
	0x01E477F0 CBNZ X22, 0x1E4781C
	0x01E477F4 B 0x1E47830
	0x01E477F8 ADRP X8, 0x22B4000
	0x01E477FC LDR X1, [X19 + 0x50]
	0x01E47800 LDR X8, [X8 + 0xE28]
	0x01E47804 LDR X2, [X23]
	0x01E47808 MOV X3, X31
	0x01E4780C LDR X0, [X8]
	0x01E47810 BL 0x32274B8
	0x01E47814 MOV X22, X0
	0x01E47818 CBZ X22, 0x1E47830
	0x01E4781C LDR X8, [X20]
	0x01E47820 MOV X0, X22
	0x01E47824 LDR X1, [X8 + 0x40]
	0x01E47828 BL 0x1C16E00
	0x01E4782C CBZ X0, 0x1E479E0
	0x01E47830 LDR W8, [X20 + 0x18]
	0x01E47834 CMP W8, 0x7
	0x01E47838 B.LS 0x1E479DC
	0x01E4783C STR X22, [X20 + 0x58]
	0x01E47840 MOV X0, X19
	0x01E47844 LDR W8, [X0 + 0x58]!
	0x01E47848 CMP W8, 0x1
	0x01E4784C B.LT 0x1E47884
	0x01E47850 ADRP X22, 0x22B4000
	0x01E47854 LDR X22, [X22 + 0xE08]
	0x01E47858 MOV X1, X31
	0x01E4785C BL 0x337B6E0
	0x01E47860 LDR X8, [X22]
	0x01E47864 LDR X2, [X23]
	0x01E47868 MOV X1, X0
	0x01E4786C MOV X3, X31
	0x01E47870 MOV X0, X8
	0x01E47874 BL 0x32274B8
	0x01E47878 MOV X22, X0
	0x01E4787C CBNZ X22, 0x1E47894
	0x01E47880 B 0x1E478A8
	0x01E47884 LDR X8, [X24]
	0x01E47888 LDR X8, [X8 + 0xB8]
	0x01E4788C LDR X22, [X8]
	0x01E47890 CBZ X22, 0x1E478A8
	0x01E47894 LDR X8, [X20]
	0x01E47898 MOV X0, X22
	0x01E4789C LDR X1, [X8 + 0x40]
	0x01E478A0 BL 0x1C16E00
	0x01E478A4 CBZ X0, 0x1E479E0
	0x01E478A8 LDR W8, [X20 + 0x18]
	0x01E478AC CMP W8, 0x8
	0x01E478B0 B.LS 0x1E479DC
	0x01E478B4 STR X22, [X20 + 0x60]
	0x01E478B8 LDR X0, [X19 + 0x60]
	0x01E478BC MOV X1, X31
	0x01E478C0 BL 0x32277A8
	0x01E478C4 TBZ X0, 0x0, 0x1E478DC
	0x01E478C8 LDR X8, [X24]
	0x01E478CC LDR X8, [X8 + 0xB8]
	0x01E478D0 LDR X22, [X8]
	0x01E478D4 CBNZ X22, 0x1E47900
	0x01E478D8 B 0x1E47914
	0x01E478DC ADRP X8, 0x22B4000
	0x01E478E0 LDR X1, [X19 + 0x60]
	0x01E478E4 LDR X8, [X8 + 0xE48]
	0x01E478E8 LDR X2, [X23]
	0x01E478EC MOV X3, X31
	0x01E478F0 LDR X0, [X8]
	0x01E478F4 BL 0x32274B8
	0x01E478F8 MOV X22, X0
	0x01E478FC CBZ X22, 0x1E47914
	0x01E47900 LDR X8, [X20]
	0x01E47904 MOV X0, X22
	0x01E47908 LDR X1, [X8 + 0x40]
	0x01E4790C BL 0x1C16E00
	0x01E47910 CBZ X0, 0x1E479E0
	0x01E47914 LDR W8, [X20 + 0x18]
	0x01E47918 CMP W8, 0x9
	0x01E4791C B.LS 0x1E479DC
	0x01E47920 ADRP X8, 0x22B4000
	0x01E47924 LDR X8, [X8 + 0xDF8]
	0x01E47928 STR X22, [X20 + 0x68]
	0x01E4792C LDRB W9, [X19 + 0x68]
	0x01E47930 ADD X1, X31, 0xC
	0x01E47934 LDR X0, [X8]
	0x01E47938 STRB W9, [X31 + 0xC]
	0x01E4793C BL 0x1C16E04
	0x01E47940 MOV X22, X0

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+64], X30
	003 Move [X31+72], X27
	004 Move [X31+80], X26
	005 Move [X31+88], X25
	006 Move [X31+96], X24
	007 Move [X31+104], X23
	008 Move [X31+112], X22
	009 Move [X31+120], X21
	010 Move [X31+128], X20
	011 Move [X31+136], X19
	012 Move X20, 0x2592000
	013 Move W8, [X20+4033]
	014 Move X21, X1
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {58}
	020 Move X0, 0x22B5000
	021 Move X0, [X0+3416]
	022 Call 0x1C17CF4
	023 Move X0, 0x22B5000
	024 Move X0, [X0+3424]
	025 Call 0x1C17CF4
	026 Move X0, 0x22B5000
	027 Move X0, [X0+3432]
	028 Call 0x1C17CF4
	029 Move X0, 0x22B5000
	030 Move X0, [X0+3440]
	031 Call 0x1C17CF4
	032 Move X0, 0x22B5000
	033 Move X0, [X0+3448]
	034 Call 0x1C17CF4
	035 Move X0, 0x22B5000
	036 Move X0, [X0+3456]
	037 Call 0x1C17CF4
	038 Move X0, 0x22B5000
	039 Move X0, [X0+3464]
	040 Call 0x1C17CF4
	041 Move X0, 0x22B5000
	042 Move X0, [X0+3472]
	043 Call 0x1C17CF4
	044 Move X0, 0x22B5000
	045 Move X0, [X0+3480]
	046 Call 0x1C17CF4
	047 Move X0, 0x22B5000
	048 Move X0, [X0+3488]
	049 Call 0x1C17CF4
	050 Move X0, 0x22B5000
	051 Move X0, [X0+3496]
	052 Call 0x1C17CF4
	053 Move X0, 0x22B5000
	054 Move X0, [X0+3504]
	055 Call 0x1C17CF4
	056 Move W8, 1
	057 Move [X20+4033], W8
	058 Move [X31+32], X31
	059 Move [X31+40], X31
	060 Move [X31+48], X31
	061 Compare X21, 0
	062 JumpIfEqual {220}
	063 Move X8, 0x22B5000
	064 Move X8, [X8+3432]
	065 Move X0, X21
	066 Move X1, [X8]
	067 Call Dictionary`2<Object, Object>.get_Count, X0
	068 Compare W0, 0
	069 JumpIfEqual {221}
	070 Move X0, [X19+272]
	071 Compare X0, 0
	072 JumpIfEqual {237}
	073 Move X1, X31
	074 Call Room.get_IsOffline, X0
	075 Move TEMP, X0
	076 And TEMP, TEMP, 1
	077 Compare TEMP, 1
	078 JumpIfEqual {220}
	079 Move X8, 0x22B5000
	080 Move X8, [X8+3488]
	081 Move X0, [X8]
	082 Call 0x1C17F10
	083 Move X1, X31
	084 Move X20, X0
	085 Call Hashtable..ctor, X0
	086 Move X0, [X19+272]
	087 Compare X0, 0
	088 JumpIfEqual {237}
	089 Move X1, X31
	090 Call RoomInfo.get_CustomProperties, X0
	091 Move X8, 0x22B5000
	092 Move X8, [X8+3480]
	093 Move X22, X0
	094 Move X8, [X8]
	095 Move W9, [X8+224]
	096 Compare W9, 0
	097 JumpIfNotEqual {100}
	098 Move X0, X8
	099 Call 0x1C17DFC
	100 Move X0, X20
	101 Move X1, X22
	102 Call Extensions.Merge, X0, X1
	103 Move X8, 0x22B5000
	104 Move X8, [X8+3448]
	105 Move X0, X21
	106 Move X1, [X8]
	107 Call Dictionary`2<Object, Object>.get_Keys, X0
	108 Compare X0, 0
	109 JumpIfEqual {237}
	110 Move X8, 0x22B5000
	111 Move X8, [X8+3496]
	112 Move X1, [X8]
	113 Add X8, X31, 8
	114 Call KeyCollection<Object, Object>.GetEnumerator, X0
	115 NotImplemented "Instruction LDUR not yet implemented."
	116 Move X8, [X31+24]
	117 Move X25, 0x22B5000
	118 Move X26, 0x22B5000
	119 Move X25, [X25+3464]
	120 Move X26, [X26+3416]
	121 Move [X31+2], V0
	122 Move [X31+48], X8
	123 Move X27, 0x22B5000
	124 Move X27, [X27+3440]
	125 Move W23, W31
	126 Move W24, W23
	127 Move X1, [X25]
	128 Add X0, X31, 32
	129 Call Enumerator<Object, Object>.MoveNext, X0
	130 Move TEMP, X0
	131 And TEMP, TEMP, 1
	132 Compare TEMP, 1
	133 JumpIfNotEqual {180}
	134 Compare X20, 0
	135 JumpIfEqual {234}
	136 Move X22, [X31+48]
	137 Move X2, [X26]
	138 Move X0, X20
	139 Move X1, X22
	140 Call Dictionary`2<Object, Object>.ContainsKey, X0, X1
	141 Move TEMP, X0
	142 And TEMP, TEMP, 1
	143 Compare TEMP, 1
	144 JumpIfNotEqual {127}
	145 Move X0, X20
	146 Move X1, X22
	147 Move X2, X31
	148 Call Hashtable.get_Item, X0, X1
	149 Move X2, [X27]
	150 Move X23, X0
	151 Move X0, X21
	152 Move X1, X22
	153 Call Dictionary`2<Object, Object>.get_Item, X0, X1
	154 Compare X0, 0
	155 JumpIfEqual {235}
	156 Compare X23, 0
	157 JumpIfEqual {236}
	158 Move X8, [X23]
	159 Move X1, [X0+16]
	160 Move X9, [X8+312]
	161 Move X2, [X8+320]
	162 Move X0, X23
	163 NotImplemented "Instruction BLR not yet implemented."
	164 Move TEMP, X0
	165 And TEMP, TEMP, 1
	166 Compare TEMP, 1
	167 JumpIfEqual {127}
	168 Move X2, [X27]
	169 Move X0, X21
	170 Move X1, X22
	171 Call Dictionary`2<Object, Object>.get_Item, X0, X1
	172 Compare X0, 0
	173 JumpIfEqual {238}
	174 Move X2, [X0+16]
	175 Move W23, 1
	176 Move X0, X20
	177 Move X1, X22
	178 Move X3, X31
	179 Call Hashtable.set_Item, X0, X1, X2
	180 Move X8, 0x22B5000
	181 Move X8, [X8+3456]
	182 Add X0, X31, 32
	183 Move X1, [X8]
	184 Call Enumerator<Object, Object>.Dispose, X0
	185 Compare X20, 0
	186 JumpIfEqual {237}
	187 Move X8, 0x22B5000
	188 Move X8, [X8+3424]
	189 Move X0, X20
	190 Move X1, [X8]
	191 Call Dictionary`2<Object, Object>.get_Count, X0
	192 NotImplemented "Instruction CMP not yet implemented."
	193 Move X8, 0x22B5000
	194 Move X8, [X8+3504]
	195 Move X0, [X8]
	196 Move W8, [X0+224]
	197 Compare W8, 0
	198 JumpIfNotEqual {200}
	199 Call 0x1C17DFC
	200 Move X0, X20
	201 Move X1, X31
	202 Call RealtimeExtensions_Hashtable.CalculateTotalSize, X0
	203 NotImplemented "Instruction CMP not yet implemented."
	204 NotImplemented "Instruction CSET not yet implemented."
	205 NotImplemented "Instruction ORN not yet implemented."
	206 Move TEMP, X8
	207 And TEMP, TEMP, 1
	208 Compare TEMP, 1
	209 JumpIfEqual {220}
	210 Move X0, [X19+272]
	211 Compare X0, 0
	212 JumpIfEqual {237}
	213 Move X8, [X0]
	214 Move X1, X20
	215 Move X2, X31
	216 Move X3, X31
	217 Move X9, [X8+392]
	218 Move X4, [X8+400]
	219 NotImplemented "Instruction BLR not yet implemented."
	220 Move W0, W31
	221 Move X20, [X31+128]
	222 Move X19, [X31+136]
	223 Move X22, [X31+112]
	224 Move X21, [X31+120]
	225 Move X24, [X31+96]
	226 Move X23, [X31+104]
	227 Move X26, [X31+80]
	228 Move X25, [X31+88]
	229 Move X30, [X31+64]
	230 Move X27, [X31+72]
	231 And W0, W0, 1
	232 Add X31, X31, 144
	233 Return X0
	234 Call 0x1C17F20
	235 Call 0x1C17F20
	236 Call 0x1C17F20
	237 Call 0x1C17F20
	238 Call 0x1C17F20
	239 Move X21, X0
	240 Move W24, W31
	241 Move X21, X0
	242 NotImplemented "Instruction CMP not yet implemented."
	243 Move X0, X21
	244 Call 0x3EB2AD0
	245 Move X22, [X0]
	246 Call 0x3EB2AE0
	247 Move X8, 0x22B5000
	248 Move X8, [X8+3456]
	249 Add X0, X31, 32
	250 Move X1, [X8]
	251 Call Enumerator<Object, Object>.Dispose, X0
	252 Compare X22, 0
	253 JumpIfEqual {185}
	254 Move X0, X22
	255 Call 0x1C17F18
	256 Move X22, X31
	257 Move X21, X0
	258 Move X8, 0x22B5000
	259 Move X8, [X8+3456]
	260 Move X1, [X8]
	261 Add X0, X31, 32
	262 Call Enumerator<Object, Object>.Dispose, X0
	263 Compare X22, 0
	264 JumpIfNotEqual {267}
	265 Move X0, X21
	266 Call 0x1D2D690
	267 Move X0, X22
	268 Call 0x1C17F18
	269 Call 0x1991590

Method: System.Boolean UpdateRoomIsVisible(System.Boolean value)

Disassembly:
	0x01E47D84 LDP X20, X19, [X31 + 0x10]
	0x01E47D88 LDP X30, X21, [X31], #0x20
	0x01E47D8C RET
	0x01E47D90 BL 0x1C16F20
	0x01E47D94 LDR X8, [X0 + 0x10]
	0x01E47D98 CBZ X8, 0x1E47DB8
	0x01E47D9C LDR W8, [X0 + 0x90]
	0x01E47DA0 CMP W8, 0x0
	0x01E47DA4 CSET W9, NE
	0x01E47DA8 CMP W8, 0xE
	0x01E47DAC CSET W8, NE
	0x01E47DB0 AND W0, W9, W8, 0x0
	0x01E47DB4 RET
	0x01E47DB8 MOV W0, W31
	0x01E47DBC RET
	0x01E47DC0 SUB X31, X31, 0x80
	0x01E47DC4 STR X30, [X31 + 0x50]
	0x01E47DC8 STP X22, X21, [X31 + 0x60]
	0x01E47DCC STP X20, X19, [X31 + 0x70]
	0x01E47DD0 ADRP X21, 0x2591000
	0x01E47DD4 LDRB W8, [X21 + 0xFF9]
	0x01E47DD8 MOV W20, W1
	0x01E47DDC MOV X19, X0
	0x01E47DE0 TBNZ X8, 0x0, 0x1E47E34
	0x01E47DE4 ADRP X0, 0x22B4000
	0x01E47DE8 LDR X0, [X0 + 0xE68]
	0x01E47DEC BL 0x1C16CF4
	0x01E47DF0 ADRP X0, 0x22B4000
	0x01E47DF4 LDR X0, [X0 + 0xE70]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, X0
	005 Move X0, [X0+272]
	006 Compare X0, 0
	007 JumpIfEqual {35}
	008 Move W19, W1
	009 Move X1, X31
	010 Call Room.get_IsOffline, X0
	011 Move TEMP, X0
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {30}
	015 Move X0, [X20+272]
	016 Compare X0, 0
	017 JumpIfEqual {35}
	018 Move X1, X31
	019 Call Room.get_IsVisible, X0
	020 And W8, W0, 1
	021 And W9, W19, 1
	022 NotImplemented "Instruction CMP not yet implemented."
	023 Move X0, [X20+272]
	024 Compare X0, 0
	025 JumpIfEqual {35}
	026 And W1, W19, 1
	027 Move X2, X31
	028 Call Room.set_IsVisible, X0, X1
	029 Move W0, 1
	030 Move W0, W31
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X30, [X31+32]
	034 Return X0
	035 Call 0x1C17F20

Method: System.Boolean UpdateRoomIsOpen(System.Boolean value)

Disassembly:
	0x01E47DF8 BL 0x1C16CF4
	0x01E47DFC ADRP X0, 0x22AC000
	0x01E47E00 LDR X0, [X0 + 0xAC8]
	0x01E47E04 BL 0x1C16CF4
	0x01E47E08 ADRP X0, 0x22B4000
	0x01E47E0C LDR X0, [X0 + 0xE78]
	0x01E47E10 BL 0x1C16CF4
	0x01E47E14 ADRP X0, 0x22B4000
	0x01E47E18 LDR X0, [X0 + 0xE80]
	0x01E47E1C BL 0x1C16CF4
	0x01E47E20 ADRP X0, 0x22B4000
	0x01E47E24 LDR X0, [X0 + 0xE88]
	0x01E47E28 BL 0x1C16CF4
	0x01E47E2C MOVZ W8, 0x1
	0x01E47E30 STRB W8, [X21 + 0xFF9]
	0x01E47E34 LDR W1, [X19 + 0x90]
	0x01E47E38 CBZ W1, 0x1E47E4C
	0x01E47E3C CMP W1, 0xE
	0x01E47E40 B.EQ 0x1E47F74
	0x01E47E44 CMP W1, 0xD
	0x01E47E48 B.NE 0x1E47F88
	0x01E47E4C ADRP X8, 0x22AC000
	0x01E47E50 LDR X8, [X8 + 0xAC8]
	0x01E47E54 MOVZ W1, 0x6
	0x01E47E58 LDR X0, [X8]
	0x01E47E5C BL 0x1C16D6C
	0x01E47E60 CBZ X0, 0x1E47FD8
	0x01E47E64 LDR W8, [X0 + 0x18]
	0x01E47E68 MOV X21, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, X0
	005 Move X0, [X0+272]
	006 Compare X0, 0
	007 JumpIfEqual {35}
	008 Move W19, W1
	009 Move X1, X31
	010 Call Room.get_IsOffline, X0
	011 Move TEMP, X0
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {30}
	015 Move X0, [X20+272]
	016 Compare X0, 0
	017 JumpIfEqual {35}
	018 Move X1, X31
	019 Call Room.get_IsOpen, X0
	020 And W8, W0, 1
	021 And W9, W19, 1
	022 NotImplemented "Instruction CMP not yet implemented."
	023 Move X0, [X20+272]
	024 Compare X0, 0
	025 JumpIfEqual {35}
	026 And W1, W19, 1
	027 Move X2, X31
	028 Call Room.set_IsOpen, X0, X1
	029 Move W0, 1
	030 Move W0, W31
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X30, [X31+32]
	034 Return X0
	035 Call 0x1C17F20

Method: System.Void Update()

Disassembly:
	0x01E47E6C CBZ W8, 0x1E47FD4
	0x01E47E70 ADRP X8, 0x22B4000
	0x01E47E74 LDR X8, [X8 + 0xE88]
	0x01E47E78 ADRP X9, 0x22B4000
	0x01E47E7C MOVN X10, 0x0
	0x01E47E80 ADD X0, X31, 0x38
	0x01E47E84 LDR X8, [X8]
	0x01E47E88 LDR X9, [X9 + 0xE68]
	0x01E47E8C MOV X1, X31
	0x01E47E90 STR X8, [X21 + 0x20]
	0x01E47E94 LDR X8, [X9]
	0x01E47E98 LDR W9, [X19 + 0x90]
	0x01E47E9C STP X8, X10, [X31 + 0x38]
	0x01E47EA0 STR W9, [X31 + 0x48]
	0x01E47EA4 BL 0x33B162C
	0x01E47EA8 LDR W8, [X21 + 0x18]
	0x01E47EAC CMP W8, 0x1
	0x01E47EB0 B.LS 0x1E47FD4
	0x01E47EB4 CMP W8, 0x2
	0x01E47EB8 STR X0, [X21 + 0x28]
	0x01E47EBC B.EQ 0x1E47FD4
	0x01E47EC0 ADRP X8, 0x22B4000
	0x01E47EC4 LDR X8, [X8 + 0xE78]
	0x01E47EC8 ADRP X22, 0x22B4000
	0x01E47ECC MOVN X10, 0x0
	0x01E47ED0 ADD X0, X31, 0x20
	0x01E47ED4 LDR X8, [X8]
	0x01E47ED8 LDR X22, [X22 + 0xE70]
	0x01E47EDC MOV X1, X31
	0x01E47EE0 STR X8, [X21 + 0x30]
	0x01E47EE4 LDR X8, [X22]
	0x01E47EE8 LDR W9, [X19 + 0xE0]
	0x01E47EEC STP X8, X10, [X31 + 0x20]
	0x01E47EF0 STR W9, [X31 + 0x30]
	0x01E47EF4 BL 0x33B162C
	0x01E47EF8 LDR W8, [X21 + 0x18]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, [X0+16]
	004 Compare X0, 0
	005 JumpIfEqual {10}
	006 Move X8, [X0]
	007 Move X9, [X8+488]
	008 Move X1, [X8+496]
	009 NotImplemented "Instruction BLR not yet implemented."
	010 Move X30, [X31+16]
	011 Move X19, [X31+24]
	012 Return 
	013 NotImplemented "Instruction CMP not yet implemented."
	014 Move X19, X0
	015 Move X0, X19
	016 Call 0x3EB2AD0
	017 Move X19, X0
	018 Move X0, 0x22AD000
	019 Move X0, [X0+2000]
	020 Call 0x1C17D08
	021 Move X8, [X19]
	022 Move X1, [X8]
	023 Call 0x1C18270
	024 Move TEMP, X0
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfNotEqual {32}
	028 Move X30, [X31+16]
	029 Move X19, [X31+24]
	030 Call 0x3EB2AE0
	031 Return 
	032 Move W0, 8
	033 Call 0x3EB2AF0
	034 Move X8, [X19]
	035 Move [X0], X8
	036 Move X1, 0x206E000
	037 Add X1, X1, 3672
	038 Move X2, X31
	039 Call 0x3EB2B00
	040 Move X19, X0
	041 Call 0x3EB2AE0
	042 Move X0, X19
	043 Call 0x1D2D690
	044 Call 0x1991590

Method: Fusion.Photon.Realtime.EnterRoomParams BuildEnterRoomParams(Fusion.Photon.Realtime.TypedLobby typedLobby, System.String roomName, System.Int32 maxPlayers, System.Collections.Generic.Dictionary`2<System.String, Fusion.SessionProperty> customProperties = null, System.Boolean isOpen = True, System.Boolean isVisible = True, System.Boolean useDefaultEmptyRoomTtl = True, System.Boolean extendedTtl = False)

Disassembly:
	0x01E47F14 LDR X8, [X8 + 0xE80]
	0x01E47F18 MOVN X9, 0x0
	0x01E47F1C ADD X0, X31, 0x8
	0x01E47F20 MOV X1, X31
	0x01E47F24 LDR X8, [X8]
	0x01E47F28 STR X8, [X21 + 0x40]
	0x01E47F2C LDR X8, [X22]
	0x01E47F30 STR W20, [X31 + 0x18]
	0x01E47F34 STP X8, X9, [X31 + 0x8]
	0x01E47F38 BL 0x33B162C
	0x01E47F3C LDR W8, [X21 + 0x18]
	0x01E47F40 CMP W8, 0x5
	0x01E47F44 B.LS 0x1E47FD4
	0x01E47F48 STR X0, [X21 + 0x48]
	0x01E47F4C MOV X0, X21
	0x01E47F50 MOV X1, X31
	0x01E47F54 BL 0x32278CC
	0x01E47F58 LDR X8, [X19]
	0x01E47F5C MOV X2, X0
	0x01E47F60 MOVZ W1, 0x3
	0x01E47F64 MOV X0, X19
	0x01E47F68 LDR X9, [X8 + 0x218]
	0x01E47F6C LDR X3, [X8 + 0x220]
	0x01E47F70 BLR X9
	0x01E47F74 LDP X20, X19, [X31 + 0x70]
	0x01E47F78 LDP X22, X21, [X31 + 0x60]
	0x01E47F7C LDR X30, [X31 + 0x50]
	0x01E47F80 ADD X31, X31, 0x80
	0x01E47F84 RET
	0x01E47F88 LDR X8, [X19 + 0x98]
	0x01E47F8C MOVZ W9, 0xD
	0x01E47F90 STR W9, [X19 + 0x90]
	0x01E47F94 CBZ X8, 0x1E47FAC
	0x01E47F98 LDR X9, [X8 + 0x18]
	0x01E47F9C LDR X0, [X8 + 0x40]
	0x01E47FA0 LDR X3, [X8 + 0x28]
	0x01E47FA4 MOVZ W2, 0xD
	0x01E47FA8 BLR X9
	0x01E47FAC LDR X0, [X19 + 0x10]
	0x01E47FB0 STR W20, [X19 + 0xE0]
	0x01E47FB4 CBZ X0, 0x1E47FD8
	0x01E47FB8 LDR X8, [X0]
	0x01E47FBC LDP X20, X19, [X31 + 0x70]
	0x01E47FC0 LDP X22, X21, [X31 + 0x60]
	0x01E47FC4 LDR X30, [X31 + 0x50]
	0x01E47FC8 LDP X2, X1, [X8 + 0x1B8]
	0x01E47FCC ADD X31, X31, 0x80
	0x01E47FD0 BR X2
	0x01E47FD4 BL 0x1C16F28
	0x01E47FD8 BL 0x1C16F20
	0x01E47FDC STR X30, [X31 - 0x20]!
	0x01E47FE0 STP X20, X19, [X31 + 0x10]
	0x01E47FE4 ADRP X19, 0x2591000
	0x01E47FE8 ADRP X20, 0x22B4000
	0x01E47FEC LDRB W8, [X19 + 0xFCB]
	0x01E47FF0 LDR X20, [X20 + 0xE58]
	0x01E47FF4 TBNZ X8, 0x0, 0x1E4800C
	0x01E47FF8 ADRP X0, 0x22B4000
	0x01E47FFC LDR X0, [X0 + 0xE58]
	0x01E48000 BL 0x1C16CF4
	0x01E48004 MOVZ W8, 0x1
	0x01E48008 STRB W8, [X19 + 0xFCB]
	0x01E4800C LDR X8, [X20]
	0x01E48010 LDP X20, X19, [X31 + 0x10]
	0x01E48014 MOVZ W9, 0x1
	0x01E48018 LDR X8, [X8 + 0xB8]
	0x01E4801C STRB W9, [X8]
	0x01E48020 LDR X30, [X31], #0x20
	0x01E48024 RET
	0x01E48028 STP X30, X23, [X31 - 0x30]!
	0x01E4802C STP X22, X21, [X31 + 0x10]
	0x01E48030 STP X20, X19, [X31 + 0x20]
	0x01E48034 ADRP X23, 0x2590000
	0x01E48038 ADRP X22, 0x22B3000
	0x01E4803C LDRB W8, [X23 + 0xFCC]
	0x01E48040 LDR X22, [X22 + 0xE58]
	0x01E48044 MOV W20, W1
	0x01E48048 MOV X19, X0
	0x01E4804C AND W21, W1, 0x1
	0x01E48050 TBNZ X8, 0x0, 0x1E48074
	0x01E48054 ADRP X0, 0x22B3000
	0x01E48058 LDR X0, [X0 + 0xE58]
	0x01E4805C BL 0x1C16CF4
	0x01E48060 ADRP X0, 0x22B3000
	0x01E48064 LDR X0, [X0 + 0xE90]
	0x01E48068 BL 0x1C16CF4
	0x01E4806C MOVZ W8, 0x1
	0x01E48070 STRB W8, [X23 + 0xFCC]
	0x01E48074 LDR X8, [X22]
	0x01E48078 LDR X9, [X8 + 0xB8]
	0x01E4807C ADRP X8, 0x22B3000
	0x01E48080 LDR X8, [X8 + 0xE90]
	0x01E48084 STRB W21, [X9 + 0x1]
	0x01E48088 TBZ X20, 0x0, 0x1E480B0
	0x01E4808C MOVZ W10, 0x1
	0x01E48090 STRB W10, [X9 + 0x2]
	0x01E48094 LDR X1, [X8]
	0x01E48098 MOV X0, X19
	0x01E4809C LDP X20, X19, [X31 + 0x20]
	0x01E480A0 LDP X22, X21, [X31 + 0x10]
	0x01E480A4 MOV X2, X31
	0x01E480A8 LDP X30, X23, [X31], #0x30
	0x01E480AC B 0x3C36448
	0x01E480B0 LDR X1, [X8]
	0x01E480B4 MOV X0, X19
	0x01E480B8 LDP X20, X19, [X31 + 0x20]
	0x01E480BC LDP X22, X21, [X31 + 0x10]
	0x01E480C0 FMOV S0, 5

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X30
	003 Move [X31+32], X28
	004 Move [X31+40], X27
	005 Move [X31+48], X26
	006 Move [X31+56], X25
	007 Move [X31+64], X24
	008 Move [X31+72], X23
	009 Move [X31+80], X22
	010 Move [X31+88], X21
	011 Move [X31+96], X20
	012 Move [X31+104], X19
	013 Move X28, 0x2592000
	014 Move X27, 0x22B5000
	015 Move W8, [X28+4034]
	016 Move X27, [X27+3520]
	017 Move W19, W7
	018 Move W22, W6
	019 Move W23, W5
	020 Move X21, X4
	021 Move W25, W3
	022 Move X26, X2
	023 Move X24, X1
	024 Move X20, X0
	025 Move TEMP, X8
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {43}
	029 Move X0, 0x22B5000
	030 Move X0, [X0+3520]
	031 Call 0x1C17CF4
	032 Move X0, 0x22B5000
	033 Move X0, [X0+3528]
	034 Call 0x1C17CF4
	035 Move X0, 0x22AD000
	036 Move X0, [X0+2760]
	037 Call 0x1C17CF4
	038 Move X0, 0x22B5000
	039 Move X0, [X0+3536]
	040 Call 0x1C17CF4
	041 Move W8, 1
	042 Move [X28+4034], W8
	043 Add X1, X31, 24
	044 Add X2, X31, 8
	045 Move X0, X21
	046 Move [X31+24], X31
	047 Move [X31+8], X31
	048 Call FusionRelayClient.BuildSessionCustomPropertyHolders, X0, X1, X2
	049 Move X0, [X27]
	050 Call 0x1C17F10
	051 Move X1, X31
	052 Move X21, X0
	053 Call EnterRoomParams..ctor, X0
	054 Compare X21, 0
	055 JumpIfEqual {130}
	056 Move X8, 0x22B5000
	057 Move X8, [X8+3528]
	058 Move [X21+16], X26
	059 Move [X21+32], X24
	060 Move X0, [X8]
	061 Call 0x1C17F10
	062 Move X1, X31
	063 Move X24, X0
	064 Call RoomOptions..ctor, X0
	065 Compare X24, 0
	066 JumpIfEqual {130}
	067 Move W26, [X31+112]
	068 And W1, W23, 1
	069 Move X0, X24
	070 Move X2, X31
	071 Move [X24+20], W25
	072 Call RoomOptions.set_IsOpen, X0, X1
	073 And W1, W22, 1
	074 Move X0, X24
	075 Move X2, X31
	076 Call RoomOptions.set_IsVisible, X0, X1
	077 Move W9, 1
	078 And W31, W26, 1
	079 Move W10, 0x3A98
	080 Move W8, W31
	081 Move [X24+67], W9
	082 NotImplemented "Instruction CSEL not yet implemented."
	083 Move [X24+24], W9
	084 Move TEMP, X19
	085 And TEMP, TEMP, 1
	086 Compare TEMP, 1
	087 JumpIfEqual {92}
	088 Move X8, [X20+448]
	089 Compare X8, 0
	090 JumpIfEqual {130}
	091 Move W8, [X8+120]
	092 Move X9, 0x22AC000
	093 Move X9, [X9+2760]
	094 Move [X24+28], W8
	095 Move W1, 1
	096 Move X0, [X9]
	097 Call 0x1C17D6C
	098 Compare X0, 0
	099 JumpIfEqual {130}
	100 Move W8, [X0+24]
	101 Compare W8, 0
	102 JumpIfEqual {131}
	103 Move X8, 0x22B4000
	104 Move X8, [X8+3536]
	105 Move W9, 1
	106 Move X20, [X31+96]
	107 Move X19, [X31+104]
	108 Move X26, [X31+48]
	109 Move X25, [X31+56]
	110 Move X8, [X8]
	111 Move X28, [X31+32]
	112 Move X27, [X31+40]
	113 Move [X0+32], X8
	114 NotImplemented "Instruction STRH not yet implemented."
	115 Move [X24+66], W9
	116 Move X30, [X31+16]
	117 Move X8, [X31+24]
	118 Move [X24+40], X8
	119 Move X8, [X31+8]
	120 Move [X24+48], X8
	121 Move [X24+56], X0
	122 Move [X21+24], X24
	123 Move X0, X21
	124 Move X22, [X31+80]
	125 Move X21, [X31+88]
	126 Move X24, [X31+64]
	127 Move X23, [X31+72]
	128 Add X31, X31, 112
	129 Return X0
	130 Call 0x1C17F20
	131 Call 0x1C17F28

Method: Fusion.Photon.Realtime.OpJoinRandomRoomParams BuildJoinParams(Fusion.Photon.Realtime.TypedLobby typedLobby, System.Collections.Generic.Dictionary`2<System.String, Fusion.SessionProperty> customProperties = null, Fusion.Photon.Realtime.MatchmakingMode matchmakingMode = 0)

Disassembly:
	0x01E481FC LDR X8, [X8 + 0xB8]
	0x01E48200 STRB W31, [X8 + 0x4]
	0x01E48204 LDR X30, [X31], #0x20
	0x01E48208 RET
	0x01E4820C STR X30, [X31 - 0x20]!
	0x01E48210 STP X20, X19, [X31 + 0x10]
	0x01E48214 ADRP X19, 0x2590000
	0x01E48218 ADRP X20, 0x22AB000
	0x01E4821C LDRB W8, [X19 + 0xFD0]
	0x01E48220 LDR X20, [X20 + 0x970]
	0x01E48224 TBNZ X8, 0x0, 0x1E4823C
	0x01E48228 ADRP X0, 0x22AB000
	0x01E4822C LDR X0, [X0 + 0x970]
	0x01E48230 BL 0x1C16CF4
	0x01E48234 MOVZ W8, 0x1
	0x01E48238 STRB W8, [X19 + 0xFD0]
	0x01E4823C LDR X0, [X20]
	0x01E48240 LDR W8, [X0 + 0xE0]
	0x01E48244 CBNZ W8, 0x1E4824C
	0x01E48248 BL 0x1C16DFC
	0x01E4824C MOV X0, X31
	0x01E48250 BL 0x3C01B9C
	0x01E48254 LDP X20, X19, [X31 + 0x10]
	0x01E48258 CMP W0, 0x0
	0x01E4825C CSET W0, NE
	0x01E48260 LDR X30, [X31], #0x20
	0x01E48264 RET
	0x01E48268 B 0x1E4826C
	0x01E4826C STR X30, [X31 - 0x20]!
	0x01E48270 STP X20, X19, [X31 + 0x10]
	0x01E48274 LDR X8, [X0 + 0x20]
	0x01E48278 CBZ X8, 0x1E482E4
	0x01E4827C MOV X19, X0
	0x01E48280 LDR X0, [X8 + 0x10]
	0x01E48284 CBZ X0, 0x1E482C8
	0x01E48288 LDR W8, [X8 + 0x90]
	0x01E4828C CBZ W8, 0x1E482C8
	0x01E48290 CMP W8, 0xE
	0x01E48294 B.EQ 0x1E482C8

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x2591000
	009 Move X22, 0x22B4000
	010 Move W8, [X23+4035]
	011 Move X22, [X22+3552]
	012 Move W19, W3
	013 Move X21, X2
	014 Move X20, X1
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {24}
	019 Move X0, 0x22B4000
	020 Move X0, [X0+3552]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X23+4035], W8
	024 Add X1, X31, 8
	025 Add X2, X31, 0
	026 Move X0, X21
	027 Move [X31], X31
	028 Move [X31+8], X31
	029 Call FusionRelayClient.BuildSessionCustomPropertyHolders, X0, X1, X2
	030 Move X0, [X22]
	031 Call 0x1C17F10
	032 Move X1, X31
	033 Move X21, X0
	034 Call OpJoinRandomRoomParams..ctor, X0
	035 Compare X21, 0
	036 JumpIfEqual {50}
	037 Move [X21+28], W19
	038 Move [X21+32], X20
	039 Move X8, [X31+8]
	040 Move X0, X21
	041 Move X20, [X31+48]
	042 Move X19, [X31+56]
	043 Move X30, [X31+16]
	044 Move X23, [X31+24]
	045 Move [X21+16], X8
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Add X31, X31, 64
	049 Return X0
	050 Call 0x1C17F20

Method: System.Void BuildSessionCustomPropertyHolders(System.Collections.Generic.Dictionary`2<System.String, Fusion.SessionProperty> customProperties, out ExitGames.Client.Photon.Hashtable sessionCustomProperties, out System.String[] publicSessionProperties)

Disassembly:
	0x01E480C4 MOV X2, X31
	0x01E480C8 LDP X30, X23, [X31], #0x30
	0x01E480CC B 0x3C36264
	0x01E480D0 STR X30, [X31 - 0x20]!
	0x01E480D4 STP X20, X19, [X31 + 0x10]
	0x01E480D8 ADRP X19, 0x2590000
	0x01E480DC ADRP X20, 0x22B3000
	0x01E480E0 LDRB W8, [X19 + 0xFCD]
	0x01E480E4 LDR X20, [X20 + 0xE58]
	0x01E480E8 TBNZ X8, 0x0, 0x1E48100
	0x01E480EC ADRP X0, 0x22B3000
	0x01E480F0 LDR X0, [X0 + 0xE58]
	0x01E480F4 BL 0x1C16CF4
	0x01E480F8 MOVZ W8, 0x1
	0x01E480FC STRB W8, [X19 + 0xFCD]
	0x01E48100 LDR X8, [X20]
	0x01E48104 LDP X20, X19, [X31 + 0x10]
	0x01E48108 LDR X8, [X8 + 0xB8]
	0x01E4810C STRB W31, [X8 + 0x2]
	0x01E48110 LDR X30, [X31], #0x20
	0x01E48114 RET
	0x01E48118 STR X30, [X31 - 0x30]!
	0x01E4811C STP X22, X21, [X31 + 0x10]
	0x01E48120 STP X20, X19, [X31 + 0x20]
	0x01E48124 ADRP X22, 0x2590000
	0x01E48128 ADRP X21, 0x22B3000
	0x01E4812C LDRB W8, [X22 + 0xFCE]
	0x01E48130 LDR X21, [X21 + 0xE58]
	0x01E48134 MOV W20, W1
	0x01E48138 MOV X19, X0
	0x01E4813C TBNZ X8, 0x0, 0x1E48160
	0x01E48140 ADRP X0, 0x22B3000
	0x01E48144 LDR X0, [X0 + 0xE58]
	0x01E48148 BL 0x1C16CF4
	0x01E4814C ADRP X0, 0x22B3000
	0x01E48150 LDR X0, [X0 + 0xE98]
	0x01E48154 BL 0x1C16CF4
	0x01E48158 MOVZ W8, 0x1
	0x01E4815C STRB W8, [X22 + 0xFCE]
	0x01E48160 LDR X8, [X21]
	0x01E48164 ORN W10, W31, W20, 0x0
	0x01E48168 AND W10, W10, 0x1
	0x01E4816C LDR X9, [X8 + 0xB8]
	0x01E48170 ADRP X8, 0x22B3000
	0x01E48174 LDR X8, [X8 + 0xE98]
	0x01E48178 STRB W10, [X9 + 0x3]
	0x01E4817C TBZ X20, 0x0, 0x1E481A0
	0x01E48180 LDR X1, [X8]
	0x01E48184 MOV X0, X19
	0x01E48188 LDP X20, X19, [X31 + 0x20]
	0x01E4818C LDP X22, X21, [X31 + 0x10]
	0x01E48190 FMOV S0, 5
	0x01E48194 MOV X2, X31
	0x01E48198 LDR X30, [X31], #0x30
	0x01E4819C B 0x3C36264
	0x01E481A0 MOVZ W10, 0x1
	0x01E481A4 STRB W10, [X9 + 0x4]
	0x01E481A8 LDR X1, [X8]
	0x01E481AC MOV X0, X19
	0x01E481B0 LDP X20, X19, [X31 + 0x20]
	0x01E481B4 LDP X22, X21, [X31 + 0x10]
	0x01E481B8 MOV X2, X31
	0x01E481BC LDR X30, [X31], #0x30
	0x01E481C0 B 0x3C36448
	0x01E481C4 STR X30, [X31 - 0x20]!
	0x01E481C8 STP X20, X19, [X31 + 0x10]
	0x01E481CC ADRP X19, 0x2590000
	0x01E481D0 ADRP X20, 0x22B3000
	0x01E481D4 LDRB W8, [X19 + 0xFCF]
	0x01E481D8 LDR X20, [X20 + 0xE58]
	0x01E481DC TBNZ X8, 0x0, 0x1E481F4
	0x01E481E0 ADRP X0, 0x22B3000
	0x01E481E4 LDR X0, [X0 + 0xE58]
	0x01E481E8 BL 0x1C16CF4
	0x01E481EC MOVZ W8, 0x1
	0x01E481F0 STRB W8, [X19 + 0xFCF]
	0x01E481F4 LDR X8, [X20]
	0x01E481F8 LDP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x2591000
	007 Move W8, [X22+4036]
	008 Move X19, X2
	009 Move X21, X1
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {35}
	015 Move X0, 0x22B4000
	016 Move X0, [X0+3432]
	017 Call 0x1C17CF4
	018 Move X0, 0x22B4000
	019 Move X0, [X0+3448]
	020 Call 0x1C17CF4
	021 Move X0, 0x22AE000
	022 Move X0, [X0+3704]
	023 Call 0x1C17CF4
	024 Move X0, 0x22B4000
	025 Move X0, [X0+3544]
	026 Call 0x1C17CF4
	027 Move X0, 0x22AD000
	028 Move X0, [X0+464]
	029 Call 0x1C17CF4
	030 Move X0, 0x22B4000
	031 Move X0, [X0+3504]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X22+4036], W8
	035 Move [X21], X31
	036 Move [X19], X31
	037 Compare X20, 0
	038 JumpIfEqual {81}
	039 Move X8, 0x22B4000
	040 Move X8, [X8+3432]
	041 Move X0, X20
	042 Move X1, [X8]
	043 Call Dictionary`2<Object, Object>.get_Count, X0
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Move X8, 0x22B4000
	046 Move X8, [X8+3504]
	047 Move X0, [X8]
	048 Move W8, [X0+224]
	049 Compare W8, 0
	050 JumpIfNotEqual {52}
	051 Call 0x1C17DFC
	052 Move X0, X20
	053 Move X1, X31
	054 Call RealtimeExtensions_Hashtable.ConvertToHashtable, X0
	055 Move [X21], X0
	056 Move X8, 0x22B4000
	057 Move X8, [X8+3448]
	058 Move X0, X20
	059 Move X1, [X8]
	060 Call Dictionary`2<Object, Object>.get_Keys, X0
	061 Move X8, 0x22AD000
	062 Move X8, [X8+464]
	063 Move X21, X0
	064 Move X8, [X8]
	065 Move X0, X8
	066 Call 0x1C17F10
	067 Move X8, 0x22B4000
	068 Move X8, [X8+3544]
	069 Move X1, X21
	070 Move X20, X0
	071 Move X2, [X8]
	072 Call List`1<Object>..ctor, X0, X1
	073 Compare X20, 0
	074 JumpIfEqual {87}
	075 Move X8, 0x22AE000
	076 Move X8, [X8+3704]
	077 Move X0, X20
	078 Move X1, [X8]
	079 Call List`1<Object>.ToArray, X0
	080 Move [X19], X0
	081 Move X20, [X31+32]
	082 Move X19, [X31+40]
	083 Move X22, [X31+16]
	084 Move X21, [X31+24]
	085 Move X30, [X31+48]
	086 Return 
	087 Call 0x1C17F20

Method: System.Void OnJoinedRoom()

Disassembly:
	0x01E48298 MOV X1, X31

ISIL:
	001 Call FusionRelayClient.StartFallbackSendAck, X0
	002 Return 

Method: System.Void OnLeftRoom()

Disassembly:
	0x01E4829C BL 0x3502074

ISIL:
	001 Call FusionRelayClient.StopFallbackSendAck, X0
	002 Return 

Method: System.Void OnCreatedRoom()

Disassembly:
	0x01E482A0 LDR X8, [X19 + 0x20]

ISIL:
	001 Return 

Method: System.Void OnCreateRoomFailed(System.Int16 returnCode, System.String message)

Disassembly:
	0x01E482A4 CBZ X8, 0x1E48390

ISIL:
	001 Return 

Method: System.Void OnFriendListUpdate(System.Collections.Generic.List`1<Fusion.Photon.Realtime.FriendInfo> friendList)

Disassembly:
	0x01E482A8 MOV W20, W0

ISIL:
	001 Return 

Method: System.Void OnJoinRandomFailed(System.Int16 returnCode, System.String message)

Disassembly:
	0x01E482AC LDR X0, [X8 + 0x10]

ISIL:
	001 Return 

Method: System.Void OnJoinRoomFailed(System.Int16 returnCode, System.String message)

Disassembly:
	0x01E482B0 CBZ X0, 0x1E48390

ISIL:
	001 Return 

Method: System.Void OnJoinedLobby()

Disassembly:
	0x01E482B4 MOV X1, X31

ISIL:
	001 Call FusionRelayClient.StartFallbackSendAck, X0
	002 Return 

Method: System.Void OnLeftLobby()

Disassembly:
	0x01E482B8 BL 0x35021B0

ISIL:
	001 Call FusionRelayClient.StopFallbackSendAck, X0
	002 Return 

Method: System.Void OnRoomListUpdate(System.Collections.Generic.List`1<Fusion.Photon.Realtime.RoomInfo> roomList)

Disassembly:
	0x01E482BC SUB W8, W20, W0

ISIL:
	001 Return 

Method: System.Void OnLobbyStatisticsUpdate(System.Collections.Generic.List`1<Fusion.Photon.Realtime.TypedLobbyInfo> lobbyStatistics)

Disassembly:
	0x01E482C0 CMP W8, 0x65

ISIL:
	001 Return 

Method: System.Void OnMasterClientSwitched(Fusion.Photon.Realtime.Player newMasterClient)

Disassembly:
	0x01E482C4 B.GE 0x1E482F0
	0x01E482C8 LDR X0, [X19 + 0x38]
	0x01E482CC CBZ X0, 0x1E48390
	0x01E482D0 LDRB W8, [X0 + 0x20]
	0x01E482D4 CBZ W8, 0x1E482E0
	0x01E482D8 MOV X1, X31
	0x01E482DC BL 0x364C2E8

ISIL:
	001 Move X8, [X0+400]
	002 Compare X8, 0
	003 JumpIfEqual {8}
	004 Move X2, [X8+24]
	005 Move X0, [X8+64]
	006 Move X1, [X8+40]
	007 CallNoReturn X2
	008 Return 

Method: System.Void OnPlayerEnteredRoom(Fusion.Photon.Realtime.Player newPlayer)

Disassembly:
	0x01E482E0 STRB W31, [X19 + 0x36]
	0x01E482E4 LDP X20, X19, [X31 + 0x10]
	0x01E482E8 LDR X30, [X31], #0x20
	0x01E482EC RET
	0x01E482F0 LDRB W8, [X19 + 0x36]
	0x01E482F4 CBNZ W8, 0x1E48318
	0x01E482F8 LDR X0, [X19 + 0x38]

ISIL:
	001 Move X8, [X0+400]
	002 Compare X8, 0
	003 JumpIfEqual {8}
	004 Move X2, [X8+24]
	005 Move X0, [X8+64]
	006 Move X1, [X8+40]
	007 CallNoReturn X2
	008 Return 

Method: System.Void OnPlayerLeftRoom(Fusion.Photon.Realtime.Player otherPlayer)

Disassembly:
	0x01E482FC CBZ X0, 0x1E48390
	0x01E48300 MOV X1, X31
	0x01E48304 BL 0x364C2E8
	0x01E48308 LDR X0, [X19 + 0x38]
	0x01E4830C CBZ X0, 0x1E48390
	0x01E48310 MOV X1, X31
	0x01E48314 BL 0x364BFCC

ISIL:
	001 Move X8, [X0+400]
	002 Compare X8, 0
	003 JumpIfEqual {8}
	004 Move X2, [X8+24]
	005 Move X0, [X8+64]
	006 Move X1, [X8+40]
	007 CallNoReturn X2
	008 Return 

Method: System.Void OnPlayerPropertiesUpdate(Fusion.Photon.Realtime.Player targetPlayer, ExitGames.Client.Photon.Hashtable changedProps)

Disassembly:
	0x01E48318 LDR X0, [X19 + 0x38]

ISIL:
	001 Return 

Method: System.Void OnRoomPropertiesUpdate(ExitGames.Client.Photon.Hashtable propertiesThatChanged)

Disassembly:
	0x01E4831C CBZ X0, 0x1E48390
	0x01E48320 MOV X1, X31
	0x01E48324 BL 0x364C19C
	0x01E48328 LDRSW X8, [X19 + 0x2C]
	0x01E4832C CMP X0, X8
	0x01E48330 B.LE 0x1E48354
	0x01E48334 LDRB W8, [X19 + 0x28]

ISIL:
	001 Move X8, [X0+400]
	002 Compare X8, 0
	003 JumpIfEqual {8}
	004 Move X2, [X8+24]
	005 Move X0, [X8+64]
	006 Move X1, [X8+40]
	007 CallNoReturn X2
	008 Return 

