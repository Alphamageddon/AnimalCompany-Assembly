Type: Fusion.Photon.Realtime.Async.Log

Method: System.Void Init(System.Action`1<System.String> info, System.Action`1<System.String> warn, System.Action`1<System.String> error, System.Action`1<System.Exception> exn)

Disassembly:
	0x01E655D8 LDR X8, [X0 + 0x18]
	0x01E655DC CBZ X8, 0x1E65604
	0x01E655E0 LDR X8, [X8 + 0x20]
	0x01E655E4 CBZ X8, 0x1E655FC
	0x01E655E8 LDR X2, [X8 + 0x18]
	0x01E655EC LDR X0, [X8 + 0x40]
	0x01E655F0 LDR X1, [X8 + 0x28]
	0x01E655F4 LDR X30, [X31], #0x10
	0x01E655F8 BR X2
	0x01E655FC LDR X30, [X31], #0x10
	0x01E65600 RET
	0x01E65604 BL 0x1C16F20
	0x01E65608 STR X30, [X31 - 0x30]!
	0x01E6560C STP X22, X21, [X31 + 0x10]
	0x01E65610 STP X20, X19, [X31 + 0x20]
	0x01E65614 ADRP X22, 0x2574000
	0x01E65618 LDRB W8, [X22 + 0xF3]
	0x01E6561C MOV X20, X2
	0x01E65620 MOV W19, W1
	0x01E65624 MOV X21, X0
	0x01E65628 TBNZ X8, 0x0, 0x1E65640
	0x01E6562C ADRP X0, 0x2297000
	0x01E65630 LDR X0, [X0 + 0xDA8]
	0x01E65634 BL 0x1C16CF4
	0x01E65638 MOVZ W8, 0x1
	0x01E6563C STRB W8, [X22 + 0xF3]
	0x01E65640 LDR X8, [X21 + 0x18]
	0x01E65644 CBZ X8, 0x1E656D4
	0x01E65648 LDR X8, [X8 + 0x38]
	0x01E6564C CBZ X8, 0x1E65674
	0x01E65650 LDR X4, [X8 + 0x18]
	0x01E65654 LDR X0, [X8 + 0x40]
	0x01E65658 LDR X3, [X8 + 0x28]
	0x01E6565C MOV W1, W19
	0x01E65660 MOV X2, X20
	0x01E65664 LDP X20, X19, [X31 + 0x20]
	0x01E65668 LDP X22, X21, [X31 + 0x10]
	0x01E6566C LDR X30, [X31], #0x30
	0x01E65670 BR X4
	0x01E65674 LDRB W8, [X21 + 0x28]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X23, 0x2575000
	010 Move X25, 0x2295000
	011 Move X24, 0x2298000
	012 Move W8, [X23+220]
	013 Move X25, [X25+3264]
	014 Move X24, [X24+3352]
	015 Move X19, X3
	016 Move X20, X2
	017 Move X21, X1
	018 Move X22, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {31}
	023 Move X0, 0x2298000
	024 Move X0, [X0+3352]
	025 Call 0x1C17CF4
	026 Move X0, 0x2295000
	027 Move X0, [X0+3264]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X23+220], W8
	031 Move X0, [X25]
	032 Call 0x1C17F10
	033 Move X1, X31
	034 Move X23, X0
	035 Call Object..ctor, X0
	036 Move X8, [X24]
	037 Move X8, [X8+184]
	038 Move [X8], X23
	039 Move X8, [X24]
	040 Move X24, [X31+16]
	041 Move X23, [X31+24]
	042 Move X8, [X8+184]
	043 Move [X8+8], X22
	044 Move [X8+16], X21
	045 Move [X8+24], X20
	046 Move [X8+32], X19
	047 Move X20, [X31+48]
	048 Move X19, [X31+56]
	049 Move X22, [X31+32]
	050 Move X21, [X31+40]
	051 Move X30, [X31+64]
	052 Move X25, [X31+72]
	053 Return 

Method: System.Void InitForConsole()

Disassembly:
	0x01E65678 CBZ W8, 0x1E656B4
	0x01E6567C ADRP X8, 0x2297000
	0x01E65680 LDR X8, [X8 + 0xDA8]
	0x01E65684 LDR X0, [X8]
	0x01E65688 BL 0x1C16F10
	0x01E6568C MOV W1, W19
	0x01E65690 MOV X2, X20
	0x01E65694 MOV X22, X0
	0x01E65698 BL 0x1E6294C
	0x01E6569C MOV X0, X21
	0x01E656A0 MOV X1, X22
	0x01E656A4 LDP X20, X19, [X31 + 0x20]
	0x01E656A8 LDP X22, X21, [X31 + 0x10]
	0x01E656AC LDR X30, [X31], #0x30
	0x01E656B0 B 0x1E65250
	0x01E656B4 MOV X0, X20
	0x01E656B8 BL 0x1E64C7C
	0x01E656BC MOV X0, X21
	0x01E656C0 MOV W1, W19
	0x01E656C4 LDP X20, X19, [X31 + 0x20]
	0x01E656C8 LDP X22, X21, [X31 + 0x10]
	0x01E656CC LDR X30, [X31], #0x30
	0x01E656D0 B 0x1E641E4
	0x01E656D4 BL 0x1C16F20
	0x01E656D8 STR X30, [X31 - 0x10]!
	0x01E656DC LDR X8, [X0 + 0x18]
	0x01E656E0 CBZ X8, 0x1E65708
	0x01E656E4 LDR X8, [X8 + 0x10]
	0x01E656E8 CBZ X8, 0x1E65700
	0x01E656EC LDR X3, [X8 + 0x18]
	0x01E656F0 LDR X0, [X8 + 0x40]
	0x01E656F4 LDR X2, [X8 + 0x28]
	0x01E656F8 LDR X30, [X31], #0x10
	0x01E656FC BR X3
	0x01E65700 LDR X30, [X31], #0x10
	0x01E65704 RET
	0x01E65708 BL 0x1C16F20
	0x01E6570C STR X30, [X31 - 0x10]!
	0x01E65710 LDR X8, [X0 + 0x18]
	0x01E65714 CBZ X8, 0x1E65740
	0x01E65718 LDR X8, [X8 + 0x18]
	0x01E6571C CBZ X8, 0x1E65734
	0x01E65720 LDR X2, [X8 + 0x18]
	0x01E65724 LDR X0, [X8 + 0x40]
	0x01E65728 LDR X1, [X8 + 0x28]
	0x01E6572C LDR X30, [X31], #0x10
	0x01E65730 BR X2
	0x01E65734 MOV W1, W31
	0x01E65738 LDR X30, [X31], #0x10
	0x01E6573C B 0x1E641E4
	0x01E65740 BL 0x1C16F20
	0x01E65744 STR X30, [X31 - 0x30]!
	0x01E65748 STP X22, X21, [X31 + 0x10]
	0x01E6574C STP X20, X19, [X31 + 0x20]
	0x01E65750 ADRP X22, 0x2574000
	0x01E65754 LDRB W8, [X22 + 0xF4]
	0x01E65758 MOV X20, X2
	0x01E6575C MOV W19, W1
	0x01E65760 MOV X21, X0
	0x01E65764 TBNZ X8, 0x0, 0x1E6577C
	0x01E65768 ADRP X0, 0x2297000
	0x01E6576C LDR X0, [X0 + 0xDA8]
	0x01E65770 BL 0x1C16CF4
	0x01E65774 MOVZ W8, 0x1
	0x01E65778 STRB W8, [X22 + 0xF4]
	0x01E6577C LDR X8, [X21 + 0x18]
	0x01E65780 CBZ X8, 0x1E65810
	0x01E65784 LDR X8, [X8 + 0x30]
	0x01E65788 CBZ X8, 0x1E657B0
	0x01E6578C LDR X4, [X8 + 0x18]
	0x01E65790 LDR X0, [X8 + 0x40]
	0x01E65794 LDR X3, [X8 + 0x28]
	0x01E65798 MOV W1, W19
	0x01E6579C MOV X2, X20
	0x01E657A0 LDP X20, X19, [X31 + 0x20]
	0x01E657A4 LDP X22, X21, [X31 + 0x10]
	0x01E657A8 LDR X30, [X31], #0x30
	0x01E657AC BR X4
	0x01E657B0 LDRB W8, [X21 + 0x28]
	0x01E657B4 CBZ W8, 0x1E657F0
	0x01E657B8 ADRP X8, 0x2297000
	0x01E657BC LDR X8, [X8 + 0xDA8]
	0x01E657C0 LDR X0, [X8]
	0x01E657C4 BL 0x1C16F10
	0x01E657C8 MOV W1, W19
	0x01E657CC MOV X2, X20
	0x01E657D0 MOV X22, X0
	0x01E657D4 BL 0x1E6294C
	0x01E657D8 MOV X0, X21
	0x01E657DC MOV X1, X22
	0x01E657E0 LDP X20, X19, [X31 + 0x20]
	0x01E657E4 LDP X22, X21, [X31 + 0x10]
	0x01E657E8 LDR X30, [X31], #0x30
	0x01E657EC B 0x1E65250
	0x01E657F0 MOV X0, X20
	0x01E657F4 BL 0x1E64C7C
	0x01E657F8 MOV X0, X21
	0x01E657FC MOV W1, W19
	0x01E65800 LDP X20, X19, [X31 + 0x20]
	0x01E65804 LDP X22, X21, [X31 + 0x10]
	0x01E65808 LDR X30, [X31], #0x30
	0x01E6580C B 0x1E641E4
	0x01E65810 BL 0x1C16F20
	0x01E65814 STR X30, [X31 - 0x30]!
	0x01E65818 STP X22, X21, [X31 + 0x10]
	0x01E6581C STP X20, X19, [X31 + 0x20]
	0x01E65820 ADRP X22, 0x2574000
	0x01E65824 LDRB W8, [X22 + 0xF5]
	0x01E65828 MOV X20, X2
	0x01E6582C MOV W19, W1
	0x01E65830 MOV X21, X0
	0x01E65834 TBNZ X8, 0x0, 0x1E6584C
	0x01E65838 ADRP X0, 0x2297000
	0x01E6583C LDR X0, [X0 + 0xDA8]
	0x01E65840 BL 0x1C16CF4
	0x01E65844 MOVZ W8, 0x1
	0x01E65848 STRB W8, [X22 + 0xF5]
	0x01E6584C LDR X8, [X21 + 0x18]
	0x01E65850 CBZ X8, 0x1E658E0
	0x01E65854 LDR X8, [X8 + 0x28]
	0x01E65858 CBZ X8, 0x1E65880
	0x01E6585C LDR X4, [X8 + 0x18]
	0x01E65860 LDR X0, [X8 + 0x40]
	0x01E65864 LDR X3, [X8 + 0x28]
	0x01E65868 MOV W1, W19
	0x01E6586C MOV X2, X20
	0x01E65870 LDP X20, X19, [X31 + 0x20]
	0x01E65874 LDP X22, X21, [X31 + 0x10]
	0x01E65878 LDR X30, [X31], #0x30
	0x01E6587C BR X4
	0x01E65880 LDRB W8, [X21 + 0x28]
	0x01E65884 CBZ W8, 0x1E658C0
	0x01E65888 ADRP X8, 0x2297000
	0x01E6588C LDR X8, [X8 + 0xDA8]
	0x01E65890 LDR X0, [X8]
	0x01E65894 BL 0x1C16F10
	0x01E65898 MOV W1, W19
	0x01E6589C MOV X2, X20
	0x01E658A0 MOV X22, X0
	0x01E658A4 BL 0x1E6294C
	0x01E658A8 MOV X0, X21
	0x01E658AC MOV X1, X22
	0x01E658B0 LDP X20, X19, [X31 + 0x20]
	0x01E658B4 LDP X22, X21, [X31 + 0x10]
	0x01E658B8 LDR X30, [X31], #0x30
	0x01E658BC B 0x1E65250
	0x01E658C0 MOV X0, X20
	0x01E658C4 BL 0x1E64C7C
	0x01E658C8 MOV X0, X21
	0x01E658CC MOV W1, W19

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X19, 0x2575000
	009 Move X24, 0x2298000
	010 Move W8, [X19+221]
	011 Move X24, [X24+3368]
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {39}
	016 Move X0, 0x2290000
	017 Move X0, [X0+3688]
	018 Call 0x1C17CF4
	019 Move X0, 0x2292000
	020 Move X0, [X0+712]
	021 Call 0x1C17CF4
	022 Move X0, 0x2298000
	023 Move X0, [X0+3376]
	024 Call 0x1C17CF4
	025 Move X0, 0x2298000
	026 Move X0, [X0+3384]
	027 Call 0x1C17CF4
	028 Move X0, 0x2298000
	029 Move X0, [X0+3392]
	030 Call 0x1C17CF4
	031 Move X0, 0x2298000
	032 Move X0, [X0+3400]
	033 Call 0x1C17CF4
	034 Move X0, 0x2298000
	035 Move X0, [X0+3368]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X19+221], W8
	039 Move X0, [X24]
	040 Move W8, [X0+224]
	041 Compare W8, 0
	042 JumpIfNotEqual {45}
	043 Call 0x1C17DFC
	044 Move X0, [X24]
	045 Move X8, [X0+184]
	046 Move X19, [X8+8]
	047 Compare X19, 0
	048 JumpIfNotEqual {70}
	049 Move W8, [X0+224]
	050 Compare W8, 0
	051 JumpIfNotEqual {54}
	052 Call 0x1C17DFC
	053 Move X0, [X24]
	054 Move X9, 0x2290000
	055 Move X8, [X0+184]
	056 Move X9, [X9+3688]
	057 Move X20, [X8]
	058 Move X0, [X9]
	059 Call 0x1C17F10
	060 Move X8, 0x2298000
	061 Move X8, [X8+3376]
	062 Move X1, X20
	063 Move X3, X31
	064 Move X19, X0
	065 Move X2, [X8]
	066 Call Action`1<Object>..ctor, X0, X1, X2
	067 Move X0, [X24]
	068 Move X8, [X0+184]
	069 Move [X8+8], X19
	070 Move W8, [X0+224]
	071 Compare W8, 0
	072 JumpIfNotEqual {75}
	073 Call 0x1C17DFC
	074 Move X0, [X24]
	075 Move X8, [X0+184]
	076 Move X20, [X8+16]
	077 Compare X20, 0
	078 JumpIfNotEqual {100}
	079 Move W8, [X0+224]
	080 Compare W8, 0
	081 JumpIfNotEqual {84}
	082 Call 0x1C17DFC
	083 Move X0, [X24]
	084 Move X9, 0x2290000
	085 Move X8, [X0+184]
	086 Move X9, [X9+3688]
	087 Move X21, [X8]
	088 Move X0, [X9]
	089 Call 0x1C17F10
	090 Move X8, 0x2298000
	091 Move X8, [X8+3384]
	092 Move X1, X21
	093 Move X3, X31
	094 Move X20, X0
	095 Move X2, [X8]
	096 Call Action`1<Object>..ctor, X0, X1, X2
	097 Move X0, [X24]
	098 Move X8, [X0+184]
	099 Move [X8+16], X20
	100 Move W8, [X0+224]
	101 Compare W8, 0
	102 JumpIfNotEqual {105}
	103 Call 0x1C17DFC
	104 Move X0, [X24]
	105 Move X8, [X0+184]
	106 Move X21, [X8+24]
	107 Compare X21, 0
	108 JumpIfNotEqual {130}
	109 Move W8, [X0+224]
	110 Compare W8, 0
	111 JumpIfNotEqual {114}
	112 Call 0x1C17DFC
	113 Move X0, [X24]
	114 Move X9, 0x2290000
	115 Move X8, [X0+184]
	116 Move X9, [X9+3688]
	117 Move X22, [X8]
	118 Move X0, [X9]
	119 Call 0x1C17F10
	120 Move X8, 0x2298000
	121 Move X8, [X8+3392]
	122 Move X1, X22
	123 Move X3, X31
	124 Move X21, X0
	125 Move X2, [X8]
	126 Call Action`1<Object>..ctor, X0, X1, X2
	127 Move X0, [X24]
	128 Move X8, [X0+184]
	129 Move [X8+24], X21
	130 Move W8, [X0+224]
	131 Compare W8, 0
	132 JumpIfNotEqual {135}
	133 Call 0x1C17DFC
	134 Move X0, [X24]
	135 Move X8, [X0+184]
	136 Move X22, [X8+32]
	137 Compare X22, 0
	138 JumpIfNotEqual {160}
	139 Move W8, [X0+224]
	140 Compare W8, 0
	141 JumpIfNotEqual {144}
	142 Call 0x1C17DFC
	143 Move X0, [X24]
	144 Move X9, 0x2292000
	145 Move X8, [X0+184]
	146 Move X9, [X9+712]
	147 Move X23, [X8]
	148 Move X0, [X9]
	149 Call 0x1C17F10
	150 Move X8, 0x2298000
	151 Move X8, [X8+3400]
	152 Move X1, X23
	153 Move X3, X31
	154 Move X22, X0
	155 Move X2, [X8]
	156 Call Action`1<Object>..ctor, X0, X1, X2
	157 Move X8, [X24]
	158 Move X8, [X8+184]
	159 Move [X8+32], X22
	160 Move X0, X19
	161 Move X1, X20
	162 Move X2, X21
	163 Move X3, X22
	164 Move X20, [X31+48]
	165 Move X19, [X31+56]
	166 Move X22, [X31+32]
	167 Move X21, [X31+40]
	168 Move X24, [X31+16]
	169 Move X23, [X31+24]
	170 Move X30, [X31+64]
	171 Call Log.Init, X0, X1, X2, X3
	172 Return 

Method: System.Void InitForSystemDiagnostics()

Disassembly:
	0x01E658D0 LDP X20, X19, [X31 + 0x20]
	0x01E658D4 LDP X22, X21, [X31 + 0x10]
	0x01E658D8 LDR X30, [X31], #0x30
	0x01E658DC B 0x1E641E4
	0x01E658E0 BL 0x1C16F20
	0x01E658E4 RET
	0x01E658E8 STR X30, [X31 - 0x10]!
	0x01E658EC LDR X8, [X0 + 0x20]
	0x01E658F0 CBZ X8, 0x1E6591C
	0x01E658F4 LDR X8, [X8 + 0x10]
	0x01E658F8 CBZ X8, 0x1E65910
	0x01E658FC LDR X2, [X8 + 0x18]
	0x01E65900 LDR X0, [X8 + 0x40]
	0x01E65904 LDR X1, [X8 + 0x28]
	0x01E65908 LDR X30, [X31], #0x10
	0x01E6590C BR X2
	0x01E65910 MOV W1, W31
	0x01E65914 LDR X30, [X31], #0x10
	0x01E65918 B 0x1E641E4
	0x01E6591C BL 0x1C16F20
	0x01E65920 RET
	0x01E65924 RET
	0x01E65928 RET
	0x01E6592C MOV X1, X31
	0x01E65930 B 0x33A51F0
	0x01E65934 MOV X1, X31
	0x01E65938 B 0x33A51F0
	0x01E6593C MOV X1, X31
	0x01E65940 B 0x33A51F0
	0x01E65944 MOV X1, X31
	0x01E65948 B 0x33A51F0
	0x01E6594C LDR X8, [X0 + 0x58]
	0x01E65950 LDR W1, [X0 + 0x60]
	0x01E65954 MOV X0, X8
	0x01E65958 RET
	0x01E6595C LDR W8, [X0]
	0x01E65960 SUB W0, W1, W8
	0x01E65964 RET
	0x01E65968 LDR X8, [X0]
	0x01E6596C ADD X0, X8, W1, SXTW
	0x01E65970 RET
	0x01E65974 LDR X8, [X0]
	0x01E65978 LDR X9, [X0 + 0x28]
	0x01E6597C SUB W10, W1, W8
	0x01E65980 SUB X8, X8, X9
	0x01E65984 ADD X8, X8, W10, SXTW
	0x01E65988 ADD X9, X8, 0x3
	0x01E6598C CMP X8, 0x0
	0x01E65990 CSEL X8, X9, X8, LT
	0x01E65994 UBFM X0, X8, 0x2, 0x3F
	0x01E65998 RET
	0x01E6599C LDR X8, [X0]
	0x01E659A0 LDR X9, [X0 + 0x28]
	0x01E659A4 ADD X8, X8, W1, SXTW
	0x01E659A8 SUB X8, X8, X9
	0x01E659AC ADD X9, X8, 0x3
	0x01E659B0 CMP X8, 0x0
	0x01E659B4 CSEL X8, X9, X8, LT
	0x01E659B8 UBFM X0, X8, 0x2, 0x3F
	0x01E659BC RET
	0x01E659C0 LDR W8, [X0]
	0x01E659C4 SUB W0, W1, W8
	0x01E659C8 RET
	0x01E659CC LDR X8, [X0]
	0x01E659D0 ADD X0, X8, W1, SXTW
	0x01E659D4 RET
	0x01E659D8 LDR X8, [X0 + 0x10]
	0x01E659DC CMP X8, X1
	0x01E659E0 B.LS 0x1E659EC
	0x01E659E4 MOV W0, W31
	0x01E659E8 RET
	0x01E659EC LDR X8, [X0 + 0x8]
	0x01E659F0 CMP X8, X1
	0x01E659F4 CSET W0, HI
	0x01E659F8 RET
	0x01E659FC LDR X8, [X0 + 0x8]
	0x01E65A00 CMP X8, X1
	0x01E65A04 B.LS 0x1E65A10
	0x01E65A08 MOV W0, W31
	0x01E65A0C RET
	0x01E65A10 LDP W9, W10, [X0 + 0x58]
	0x01E65A14 LSLV W9, W10, W9
	0x01E65A18 ADD X8, X8, W9, SXTW
	0x01E65A1C CMP X8, X1
	0x01E65A20 CSET W0, HI
	0x01E65A24 RET
	0x01E65A28 LDP W8, W9, [X0]
	0x01E65A2C LSLV W0, W9, W8
	0x01E65A30 RET
	0x01E65A34 ADD W8, W0, 0x7
	0x01E65A38 SBFM W0, W8, 0x3, 0x1F
	0x01E65A3C RET
	0x01E65A40 LDR X8, [X0 + 0x40]
	0x01E65A44 ADD X0, X8, W1, 0x4, SXTW
	0x01E65A48 RET
	0x01E65A4C STR X30, [X31 - 0x10]!
	0x01E65A50 CBZ X1, 0x1E65A68
	0x01E65A54 LDRSW X8, [X1 + 0x8]
	0x01E65A58 LDR X9, [X0 + 0x40]
	0x01E65A5C ADD X0, X9, X8, 0x4, LSL
	0x01E65A60 LDR X30, [X31], #0x10
	0x01E65A64 RET
	0x01E65A68 BL 0x1C16F20
	0x01E65A6C LDR X8, [X0 + 0x50]
	0x01E65A70 ADD X0, X8, W1, 0x3, SXTW
	0x01E65A74 RET
	0x01E65A78 LDR X8, [X0 + 0x30]
	0x01E65A7C MOVZ W9, 0x1C
	0x01E65A80 SMADDL X0, X1, X9, X8
	0x01E65A84 RET
	0x01E65A88 LDR X8, [X0 + 0x30]
	0x01E65A8C MOVZ W9, 0x1C
	0x01E65A90 MADD X0, X1, X9, X8
	0x01E65A94 RET
	0x01E65A98 STR X30, [X31 - 0x10]!
	0x01E65A9C LDR X8, [X0 + 0x30]
	0x01E65AA0 MOVZ W9, 0x1C
	0x01E65AA4 MADD X8, X1, X9, X8
	0x01E65AA8 CBZ X8, 0x1E65AB8
	0x01E65AAC LDR W0, [X8 + 0x8]
	0x01E65AB0 LDR X30, [X31], #0x10
	0x01E65AB4 RET
	0x01E65AB8 BL 0x1C16F20
	0x01E65ABC LDR X8, [X0 + 0x8]
	0x01E65AC0 LDR W9, [X0 + 0x58]
	0x01E65AC4 LDR X10, [X0 + 0x30]
	0x01E65AC8 SUB X8, X1, X8
	0x01E65ACC ASRV X8, X8, X9
	0x01E65AD0 MOVZ W9, 0x1C
	0x01E65AD4 MADD X0, X8, X9, X10
	0x01E65AD8 RET
	0x01E65ADC LDR X8, [X0 + 0x8]
	0x01E65AE0 LDR W9, [X0 + 0x58]
	0x01E65AE4 SUB X8, X1, X8
	0x01E65AE8 ASRV X0, X8, X9
	0x01E65AEC RET
	0x01E65AF0 LDR X8, [X0 + 0x30]
	0x01E65AF4 MOVZ X9, 0x4925
	0x01E65AF8 MOVK X9, 0x24920000
	0x01E65AFC MOVK X9, 0x9249
	0x01E65B00 MOVK X9, 0x49240000
	0x01E65B04 LDR W11, [X0 + 0x58]
	0x01E65B08 SUB X8, X1, X8
	0x01E65B0C LDR X10, [X0 + 0x8]
	0x01E65B10 SMULH X8, X8, X9, X31
	0x01E65B14 UBFM X9, X8, 0x3F, 0x3F
	0x01E65B18 UBFM X8, X8, 0x3, 0x3F
	0x01E65B1C ADD W8, W8, W9
	0x01E65B20 LSLV W8, W8, W11
	0x01E65B24 ADD X0, X10, W8, SXTW

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X19, 0x2575000
	009 Move X24, 0x2298000
	010 Move W8, [X19+222]
	011 Move X24, [X24+3368]
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {39}
	016 Move X0, 0x2290000
	017 Move X0, [X0+3688]
	018 Call 0x1C17CF4
	019 Move X0, 0x2292000
	020 Move X0, [X0+712]
	021 Call 0x1C17CF4
	022 Move X0, 0x2298000
	023 Move X0, [X0+3408]
	024 Call 0x1C17CF4
	025 Move X0, 0x2298000
	026 Move X0, [X0+3416]
	027 Call 0x1C17CF4
	028 Move X0, 0x2298000
	029 Move X0, [X0+3424]
	030 Call 0x1C17CF4
	031 Move X0, 0x2298000
	032 Move X0, [X0+3432]
	033 Call 0x1C17CF4
	034 Move X0, 0x2298000
	035 Move X0, [X0+3368]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X19+222], W8
	039 Move X0, [X24]
	040 Move W8, [X0+224]
	041 Compare W8, 0
	042 JumpIfNotEqual {45}
	043 Call 0x1C17DFC
	044 Move X0, [X24]
	045 Move X8, [X0+184]
	046 Move X19, [X8+40]
	047 Compare X19, 0
	048 JumpIfNotEqual {70}
	049 Move W8, [X0+224]
	050 Compare W8, 0
	051 JumpIfNotEqual {54}
	052 Call 0x1C17DFC
	053 Move X0, [X24]
	054 Move X9, 0x2290000
	055 Move X8, [X0+184]
	056 Move X9, [X9+3688]
	057 Move X20, [X8]
	058 Move X0, [X9]
	059 Call 0x1C17F10
	060 Move X8, 0x2298000
	061 Move X8, [X8+3408]
	062 Move X1, X20
	063 Move X3, X31
	064 Move X19, X0
	065 Move X2, [X8]
	066 Call Action`1<Object>..ctor, X0, X1, X2
	067 Move X0, [X24]
	068 Move X8, [X0+184]
	069 Move [X8+40], X19
	070 Move W8, [X0+224]
	071 Compare W8, 0
	072 JumpIfNotEqual {75}
	073 Call 0x1C17DFC
	074 Move X0, [X24]
	075 Move X8, [X0+184]
	076 Move X20, [X8+48]
	077 Compare X20, 0
	078 JumpIfNotEqual {100}
	079 Move W8, [X0+224]
	080 Compare W8, 0
	081 JumpIfNotEqual {84}
	082 Call 0x1C17DFC
	083 Move X0, [X24]
	084 Move X9, 0x2290000
	085 Move X8, [X0+184]
	086 Move X9, [X9+3688]
	087 Move X21, [X8]
	088 Move X0, [X9]
	089 Call 0x1C17F10
	090 Move X8, 0x2298000
	091 Move X8, [X8+3416]
	092 Move X1, X21
	093 Move X3, X31
	094 Move X20, X0
	095 Move X2, [X8]
	096 Call Action`1<Object>..ctor, X0, X1, X2
	097 Move X0, [X24]
	098 Move X8, [X0+184]
	099 Move [X8+48], X20
	100 Move W8, [X0+224]
	101 Compare W8, 0
	102 JumpIfNotEqual {105}
	103 Call 0x1C17DFC
	104 Move X0, [X24]
	105 Move X8, [X0+184]
	106 Move X21, [X8+56]
	107 Compare X21, 0
	108 JumpIfNotEqual {130}
	109 Move W8, [X0+224]
	110 Compare W8, 0
	111 JumpIfNotEqual {114}
	112 Call 0x1C17DFC
	113 Move X0, [X24]
	114 Move X9, 0x2290000
	115 Move X8, [X0+184]
	116 Move X9, [X9+3688]
	117 Move X22, [X8]
	118 Move X0, [X9]
	119 Call 0x1C17F10
	120 Move X8, 0x2298000
	121 Move X8, [X8+3424]
	122 Move X1, X22
	123 Move X3, X31
	124 Move X21, X0
	125 Move X2, [X8]
	126 Call Action`1<Object>..ctor, X0, X1, X2
	127 Move X0, [X24]
	128 Move X8, [X0+184]
	129 Move [X8+56], X21
	130 Move W8, [X0+224]
	131 Compare W8, 0
	132 JumpIfNotEqual {135}
	133 Call 0x1C17DFC
	134 Move X0, [X24]
	135 Move X8, [X0+184]
	136 Move X22, [X8+64]
	137 Compare X22, 0
	138 JumpIfNotEqual {160}
	139 Move W8, [X0+224]
	140 Compare W8, 0
	141 JumpIfNotEqual {144}
	142 Call 0x1C17DFC
	143 Move X0, [X24]
	144 Move X9, 0x2292000
	145 Move X8, [X0+184]
	146 Move X9, [X9+712]
	147 Move X23, [X8]
	148 Move X0, [X9]
	149 Call 0x1C17F10
	150 Move X8, 0x2298000
	151 Move X8, [X8+3432]
	152 Move X1, X23
	153 Move X3, X31
	154 Move X22, X0
	155 Move X2, [X8]
	156 Call Action`1<Object>..ctor, X0, X1, X2
	157 Move X8, [X24]
	158 Move X8, [X8+184]
	159 Move [X8+64], X22
	160 Move X0, X19
	161 Move X1, X20
	162 Move X2, X21
	163 Move X3, X22
	164 Move X20, [X31+48]
	165 Move X19, [X31+56]
	166 Move X22, [X31+32]
	167 Move X21, [X31+40]
	168 Move X24, [X31+16]
	169 Move X23, [X31+24]
	170 Move X30, [X31+64]
	171 Call Log.Init, X0, X1, X2, X3
	172 Return 

Method: System.Void Debug(System.Object value)

Disassembly:
	0x01E65B28 RET

ISIL:
	001 Call Log.Info, X0
	002 Return 

Method: System.Void Trace(System.Object value)

Disassembly:
	0x01E65B2C LDR W8, [X0]

ISIL:
	001 Call Log.Info, X0
	002 Return 

Method: System.Void Info(System.Object value)

Disassembly:
	0x01E6548C LDR X3, [X8 + 0x18]
	0x01E65490 LDR X0, [X8 + 0x40]
	0x01E65494 LDR X2, [X8 + 0x28]
	0x01E65498 MOV X1, X19
	0x01E6549C LDP X20, X19, [X31 + 0x10]
	0x01E654A0 LDP X30, X21, [X31], #0x20
	0x01E654A4 BR X3
	0x01E654A8 ADRP X8, 0x2297000
	0x01E654AC LDR X8, [X8 + 0xD98]
	0x01E654B0 LDR X0, [X8]
	0x01E654B4 BL 0x1C16F10
	0x01E654B8 MOV X1, X19
	0x01E654BC MOV X21, X0
	0x01E654C0 BL 0x1E628E4
	0x01E654C4 MOV X0, X20
	0x01E654C8 LDP X20, X19, [X31 + 0x10]
	0x01E654CC MOV X1, X21
	0x01E654D0 LDP X30, X21, [X31], #0x20
	0x01E654D4 B 0x1E65250
	0x01E654D8 BL 0x1C16F20
	0x01E654DC STR X30, [X31 - 0x10]!
	0x01E654E0 LDR X8, [X0 + 0x10]
	0x01E654E4 CBZ X8, 0x1E6550C
	0x01E654E8 LDR X8, [X8 + 0x38]
	0x01E654EC CBZ X8, 0x1E65504
	0x01E654F0 LDR X3, [X8 + 0x18]
	0x01E654F4 LDR X0, [X8 + 0x40]
	0x01E654F8 LDR X2, [X8 + 0x28]
	0x01E654FC LDR X30, [X31], #0x10
	0x01E65500 BR X3
	0x01E65504 LDR X30, [X31], #0x10
	0x01E65508 RET
	0x01E6550C BL 0x1C16F20
	0x01E65510 STP X30, X21, [X31 - 0x20]!
	0x01E65514 STP X20, X19, [X31 + 0x10]
	0x01E65518 ADRP X21, 0x2574000
	0x01E6551C LDRB W8, [X21 + 0xF2]
	0x01E65520 MOV W19, W1
	0x01E65524 MOV X20, X0
	0x01E65528 TBNZ X8, 0x0, 0x1E65540
	0x01E6552C ADRP X0, 0x2297000
	0x01E65530 LDR X0, [X0 + 0xDA0]
	0x01E65534 BL 0x1C16CF4
	0x01E65538 MOVZ W8, 0x1
	0x01E6553C STRB W8, [X21 + 0xF2]
	0x01E65540 LDR X8, [X20 + 0x10]
	0x01E65544 CBZ X8, 0x1E6559C
	0x01E65548 LDR X8, [X8 + 0x28]
	0x01E6554C CBZ X8, 0x1E6556C
	0x01E65550 LDR X3, [X8 + 0x18]
	0x01E65554 LDR X0, [X8 + 0x40]
	0x01E65558 LDR X2, [X8 + 0x28]
	0x01E6555C MOV W1, W19
	0x01E65560 LDP X20, X19, [X31 + 0x10]
	0x01E65564 LDP X30, X21, [X31], #0x20
	0x01E65568 BR X3
	0x01E6556C ADRP X8, 0x2297000
	0x01E65570 LDR X8, [X8 + 0xDA0]
	0x01E65574 LDR X0, [X8]
	0x01E65578 BL 0x1C16F10
	0x01E6557C MOV W1, W19
	0x01E65580 MOV X21, X0
	0x01E65584 BL 0x1E62834
	0x01E65588 MOV X0, X20
	0x01E6558C LDP X20, X19, [X31 + 0x10]
	0x01E65590 MOV X1, X21
	0x01E65594 LDP X30, X21, [X31], #0x20
	0x01E65598 B 0x1E65250
	0x01E6559C BL 0x1C16F20
	0x01E655A0 STR X30, [X31 - 0x10]!
	0x01E655A4 LDR X8, [X0 + 0x10]
	0x01E655A8 CBZ X8, 0x1E655D0
	0x01E655AC LDR X8, [X8 + 0x20]
	0x01E655B0 CBZ X8, 0x1E655C8
	0x01E655B4 LDR X3, [X8 + 0x18]
	0x01E655B8 LDR X0, [X8 + 0x40]
	0x01E655BC LDR X2, [X8 + 0x28]
	0x01E655C0 LDR X30, [X31], #0x10
	0x01E655C4 BR X3
	0x01E655C8 LDR X30, [X31], #0x10
	0x01E655CC RET
	0x01E655D0 BL 0x1C16F20
	0x01E655D4 STR X30, [X31 - 0x10]!

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, 0x2575000
	007 Move X21, 0x2298000
	008 Move W8, [X19+223]
	009 Move X21, [X21+3352]
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x2298000
	016 Move X0, [X0+3352]
	017 Call 0x1C17CF4
	018 Move X0, 0x2298000
	019 Move X0, [X0+3360]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X19+223], W8
	023 Move X8, [X21]
	024 Move X8, [X8+184]
	025 Move X9, [X8+8]
	026 Compare X9, 0
	027 JumpIfEqual {60}
	028 Move X19, [X8]
	029 Move [X31+12], W31
	030 Add X1, X31, 12
	031 Move X0, X19
	032 Move X2, X31
	033 Call Monitor.Enter, X0, X1
	034 Move X8, [X21]
	035 Move X8, [X8+184]
	036 Move X21, [X8+8]
	037 Compare X20, 0
	038 JumpIfEqual {66}
	039 Move X8, [X20]
	040 Move X9, [X8+360]
	041 Move X1, [X8+368]
	042 Move X0, X20
	043 NotImplemented "Instruction BLR not yet implemented."
	044 Move X1, X0
	045 Compare X21, 0
	046 JumpIfEqual {71}
	047 Move X0, [X21+64]
	048 Move X8, [X21+24]
	049 Move X2, [X21+40]
	050 NotImplemented "Instruction BLR not yet implemented."
	051 Move X20, X31
	052 Move W8, [X31+12]
	053 Compare W8, 0
	054 JumpIfEqual {58}
	055 Move X0, X19
	056 Move X1, X31
	057 Call Monitor.Exit, X0
	058 Compare X20, 0
	059 JumpIfNotEqual {72}
	060 Move X20, [X31+32]
	061 Move X19, [X31+40]
	062 Move X30, [X31+16]
	063 Move X21, [X31+24]
	064 Add X31, X31, 48
	065 Return 
	066 Move X8, 0x2298000
	067 Move X8, [X8+3360]
	068 Move X1, [X8]
	069 Compare X21, 0
	070 JumpIfNotEqual {47}
	071 Call 0x1C17F20
	072 Move X0, X20
	073 Call 0x1C17F18
	074 Move X21, X0
	075 NotImplemented "Instruction CMP not yet implemented."
	076 Move X0, X21
	077 Call 0x3EB2AD0
	078 Move X20, [X0]
	079 Call 0x3EB2AE0
	080 Move X20, X31
	081 Move X21, X0
	082 Move W8, [X31+12]
	083 Compare W8, 0
	084 JumpIfEqual {88}
	085 Move X0, X19
	086 Move X1, X31
	087 Call Monitor.Exit, X0
	088 Compare X20, 0
	089 JumpIfNotEqual {92}
	090 Move X0, X21
	091 Call 0x1D2D690
	092 Move X0, X20
	093 Call 0x1C17F18
	094 Call 0x1991590

Method: System.Void Warn(System.Object value)

Disassembly:
	0x01E65B30 MOVZ W9, 0x1
	0x01E65B34 LSLV W0, W9, W8
	0x01E65B38 RET
	0x01E65B3C LDR W8, [X0 + 0x58]
	0x01E65B40 LDR X9, [X0 + 0x8]
	0x01E65B44 MOVZ W10, 0x1
	0x01E65B48 LSLV W8, W10, W8
	0x01E65B4C SXTW X8, W8
	0x01E65B50 MADD X0, X8, X1, X9
	0x01E65B54 RET
	0x01E65B58 STR X30, [X31 - 0x10]!
	0x01E65B5C LDR X8, [X0 + 0x8]
	0x01E65B60 CMP X8, X1
	0x01E65B64 B.HI 0x1E65BD8
	0x01E65B68 LDP W9, W10, [X0 + 0x58]
	0x01E65B6C LSLV W10, W10, W9
	0x01E65B70 ADD X10, X8, W10, SXTW
	0x01E65B74 CMP X10, X1
	0x01E65B78 B.LS 0x1E65BD8
	0x01E65B7C LDR X11, [X0 + 0x30]
	0x01E65B80 SUB X10, X1, X8
	0x01E65B84 ASRV X10, X10, X9
	0x01E65B88 MOVZ W12, 0x1C
	0x01E65B8C MADD X11, X10, X12, X11
	0x01E65B90 CBZ X11, 0x1E65BEC
	0x01E65B94 LDR X12, [X0 + 0x40]
	0x01E65B98 LDRSW X11, [X11 + 0x8]
	0x01E65B9C ADDS X11, X12, X11, 0x4, LSL
	0x01E65BA0 B.EQ 0x1E65BEC
	0x01E65BA4 AND X9, X9, 0x1F
	0x01E65BA8 MOVZ W12, 0x1
	0x01E65BAC LDRSW X11, [X11 + 0x4]
	0x01E65BB0 LSLV W9, W12, W9
	0x01E65BB4 SXTW X9, W9
	0x01E65BB8 MADD X8, X10, X9, X8
	0x01E65BBC SUB X8, X1, X8
	0x01E65BC0 SDIV X9, X8, X11
	0x01E65BC4 SUB X8, X31, X8
	0x01E65BC8 MADD X8, X9, X11, X8
	0x01E65BCC ADD X8, X1, X8
	0x01E65BD0 MOVZ W0, 0x1
	0x01E65BD4 B 0x1E65BE0
	0x01E65BD8 MOV X8, X31
	0x01E65BDC MOV W0, W31
	0x01E65BE0 STR X8, [X2]
	0x01E65BE4 LDR X30, [X31], #0x10
	0x01E65BE8 RET
	0x01E65BEC BL 0x1C16F20
	0x01E65BF0 SUB X31, X31, 0x30
	0x01E65BF4 STP X30, X21, [X31 + 0x10]
	0x01E65BF8 STP X20, X19, [X31 + 0x20]
	0x01E65BFC ADRP X21, 0x2574000
	0x01E65C00 LDRB W8, [X21 + 0xF6]
	0x01E65C04 MOV X19, X1
	0x01E65C08 MOV X20, X0
	0x01E65C0C TBNZ X8, 0x0, 0x1E65C24
	0x01E65C10 ADRP X0, 0x2297000
	0x01E65C14 LDR X0, [X0 + 0xDB0]
	0x01E65C18 BL 0x1C16CF4
	0x01E65C1C MOVZ W8, 0x1
	0x01E65C20 STRB W8, [X21 + 0xF6]
	0x01E65C24 ADD X2, X31, 0x8
	0x01E65C28 MOV X0, X20
	0x01E65C2C MOV X1, X19
	0x01E65C30 STR X31, [X31 + 0x8]
	0x01E65C34 BL 0x1E65B58
	0x01E65C38 TBZ X0, 0x0, 0x1E65C44
	0x01E65C3C LDR X0, [X31 + 0x8]
	0x01E65C40 B 0x1E65C5C
	0x01E65C44 ADRP X8, 0x2297000
	0x01E65C48 LDR X8, [X8 + 0xDB0]
	0x01E65C4C MOV X1, X31
	0x01E65C50 LDR X0, [X8]
	0x01E65C54 BL 0x1E3B98C
	0x01E65C58 MOV X0, X31
	0x01E65C5C LDP X20, X19, [X31 + 0x20]
	0x01E65C60 LDP X30, X21, [X31 + 0x10]
	0x01E65C64 ADD X31, X31, 0x30
	0x01E65C68 RET
	0x01E65C6C STR X30, [X31 - 0x20]!
	0x01E65C70 STP X20, X19, [X31 + 0x10]
	0x01E65C74 MOV W19, W1
	0x01E65C78 BL 0x1E65C9C

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, 0x2575000
	007 Move X21, 0x2298000
	008 Move W8, [X19+224]
	009 Move X21, [X21+3352]
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x2298000
	016 Move X0, [X0+3352]
	017 Call 0x1C17CF4
	018 Move X0, 0x2298000
	019 Move X0, [X0+3360]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X19+224], W8
	023 Move X8, [X21]
	024 Move X8, [X8+184]
	025 Move X9, [X8+16]
	026 Compare X9, 0
	027 JumpIfEqual {60}
	028 Move X19, [X8]
	029 Move [X31+12], W31
	030 Add X1, X31, 12
	031 Move X0, X19
	032 Move X2, X31
	033 Call Monitor.Enter, X0, X1
	034 Move X8, [X21]
	035 Move X8, [X8+184]
	036 Move X21, [X8+16]
	037 Compare X20, 0
	038 JumpIfEqual {66}
	039 Move X8, [X20]
	040 Move X9, [X8+360]
	041 Move X1, [X8+368]
	042 Move X0, X20
	043 NotImplemented "Instruction BLR not yet implemented."
	044 Move X1, X0
	045 Compare X21, 0
	046 JumpIfEqual {71}
	047 Move X0, [X21+64]
	048 Move X8, [X21+24]
	049 Move X2, [X21+40]
	050 NotImplemented "Instruction BLR not yet implemented."
	051 Move X20, X31
	052 Move W8, [X31+12]
	053 Compare W8, 0
	054 JumpIfEqual {58}
	055 Move X0, X19
	056 Move X1, X31
	057 Call Monitor.Exit, X0
	058 Compare X20, 0
	059 JumpIfNotEqual {72}
	060 Move X20, [X31+32]
	061 Move X19, [X31+40]
	062 Move X30, [X31+16]
	063 Move X21, [X31+24]
	064 Add X31, X31, 48
	065 Return 
	066 Move X8, 0x2298000
	067 Move X8, [X8+3360]
	068 Move X1, [X8]
	069 Compare X21, 0
	070 JumpIfNotEqual {47}
	071 Call 0x1C17F20
	072 Move X0, X20
	073 Call 0x1C17F18
	074 Move X21, X0
	075 NotImplemented "Instruction CMP not yet implemented."
	076 Move X0, X21
	077 Call 0x3EB2AD0
	078 Move X20, [X0]
	079 Call 0x3EB2AE0
	080 Move X20, X31
	081 Move X21, X0
	082 Move W8, [X31+12]
	083 Compare W8, 0
	084 JumpIfEqual {88}
	085 Move X0, X19
	086 Move X1, X31
	087 Call Monitor.Exit, X0
	088 Compare X20, 0
	089 JumpIfNotEqual {92}
	090 Move X0, X21
	091 Call 0x1D2D690
	092 Move X0, X20
	093 Call 0x1C17F18
	094 Call 0x1991590

Method: System.Void Error(System.Object value)

Disassembly:
	0x01E65C7C MOV W1, W19
	0x01E65C80 MOV X2, X31
	0x01E65C84 MOV X20, X0
	0x01E65C88 BL 0x1E35770
	0x01E65C8C MOV X0, X20
	0x01E65C90 LDP X20, X19, [X31 + 0x10]
	0x01E65C94 LDR X30, [X31], #0x20
	0x01E65C98 RET
	0x01E65C9C SUB X31, X31, 0x40
	0x01E65CA0 STR X30, [X31 + 0x10]
	0x01E65CA4 STP X22, X21, [X31 + 0x20]
	0x01E65CA8 STP X20, X19, [X31 + 0x30]
	0x01E65CAC CMP W1, 0x0
	0x01E65CB0 B.LE 0x1E65DC8
	0x01E65CB4 MOV X19, X0
	0x01E65CB8 CBZ X0, 0x1E65DC4
	0x01E65CBC LDR W8, [X19 + 0x58]
	0x01E65CC0 MOVZ W22, 0x1
	0x01E65CC4 LSLV W8, W22, W8
	0x01E65CC8 CMP W8, W1
	0x01E65CCC B.LE 0x1E65E00
	0x01E65CD0 LDR X8, [X19 + 0x48]
	0x01E65CD4 ADD W9, W1, 0x7
	0x01E65CD8 SBFM W9, W9, 0x3, 0x1F
	0x01E65CDC LDRB W22, [X8, W9, SXTW]
	0x01E65CE0 LDR X8, [X19 + 0x50]
	0x01E65CE4 ADDS X20, X8, W22, 0x3, UXTB
	0x01E65CE8 B.EQ 0x1E65DC4
	0x01E65CEC LDR X9, [X19 + 0x40]
	0x01E65CF0 LDRSW X8, [X20]
	0x01E65CF4 ADD X21, X9, W22, 0x4, UXTB
	0x01E65CF8 CBZ W8, 0x1E65D14
	0x01E65CFC LDR X9, [X19]
	0x01E65D00 MOV X0, X19
	0x01E65D04 MOV X1, X21
	0x01E65D08 ADD X2, X9, X8
	0x01E65D0C BL 0x1E66578
	0x01E65D10 CBNZ X0, 0x1E65DB0
	0x01E65D14 LDR X0, [X19 + 0x38]
	0x01E65D18 LDRSW X8, [X0]
	0x01E65D1C CBNZ W8, 0x1E65D68
	0x01E65D20 AND W8, W22, 0xFF
	0x01E65D24 ADD W22, W8, 0x1
	0x01E65D28 AND W8, W22, 0xFF
	0x01E65D2C CMP W8, 0x39
	0x01E65D30 B.CC 0x1E65CE0
	0x01E65D34 ADRP X0, 0x2297000
	0x01E65D38 LDR X0, [X0 + 0xDB8]
	0x01E65D3C BL 0x1C16D08
	0x01E65D40 BL 0x1C16F10
	0x01E65D44 MOV X1, X31
	0x01E65D48 MOV X19, X0
	0x01E65D4C BL 0x339F30C
	0x01E65D50 ADRP X0, 0x2297000
	0x01E65D54 LDR X0, [X0 + 0xDC0]
	0x01E65D58 BL 0x1C16D08
	0x01E65D5C MOV X1, X0
	0x01E65D60 MOV X0, X19
	0x01E65D64 BL 0x1C16DEC
	0x01E65D68 LDR X9, [X19]
	0x01E65D6C MOV X1, X19
	0x01E65D70 ADD X22, X9, X8
	0x01E65D74 MOV X2, X22
	0x01E65D78 BL 0x1E668DC
	0x01E65D7C CBZ X21, 0x1E65DC4
	0x01E65D80 CBZ X22, 0x1E65DC4
	0x01E65D84 LDR W8, [X21]
	0x01E65D88 MOV X0, X20
	0x01E65D8C MOV X1, X19
	0x01E65D90 MOV X2, X22
	0x01E65D94 STR W8, [X22 + 0x8]
	0x01E65D98 BL 0x1E6670C
	0x01E65D9C MOV X0, X19
	0x01E65DA0 MOV X1, X21
	0x01E65DA4 MOV X2, X22
	0x01E65DA8 BL 0x1E66578
	0x01E65DAC CBZ X0, 0x1E65EA0
	0x01E65DB0 LDP X20, X19, [X31 + 0x30]
	0x01E65DB4 LDP X22, X21, [X31 + 0x20]
	0x01E65DB8 LDR X30, [X31 + 0x10]
	0x01E65DBC ADD X31, X31, 0x40
	0x01E65DC0 RET
	0x01E65DC4 BL 0x1C16F20

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, 0x2575000
	007 Move X21, 0x2298000
	008 Move W8, [X19+225]
	009 Move X21, [X21+3352]
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x2298000
	016 Move X0, [X0+3352]
	017 Call 0x1C17CF4
	018 Move X0, 0x2298000
	019 Move X0, [X0+3360]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X19+225], W8
	023 Move X8, [X21]
	024 Move X8, [X8+184]
	025 Move X9, [X8+24]
	026 Compare X9, 0
	027 JumpIfEqual {60}
	028 Move X19, [X8]
	029 Move [X31+12], W31
	030 Add X1, X31, 12
	031 Move X0, X19
	032 Move X2, X31
	033 Call Monitor.Enter, X0, X1
	034 Move X8, [X21]
	035 Move X8, [X8+184]
	036 Move X21, [X8+24]
	037 Compare X20, 0
	038 JumpIfEqual {66}
	039 Move X8, [X20]
	040 Move X9, [X8+360]
	041 Move X1, [X8+368]
	042 Move X0, X20
	043 NotImplemented "Instruction BLR not yet implemented."
	044 Move X1, X0
	045 Compare X21, 0
	046 JumpIfEqual {71}
	047 Move X0, [X21+64]
	048 Move X8, [X21+24]
	049 Move X2, [X21+40]
	050 NotImplemented "Instruction BLR not yet implemented."
	051 Move X20, X31
	052 Move W8, [X31+12]
	053 Compare W8, 0
	054 JumpIfEqual {58}
	055 Move X0, X19
	056 Move X1, X31
	057 Call Monitor.Exit, X0
	058 Compare X20, 0
	059 JumpIfNotEqual {72}
	060 Move X20, [X31+32]
	061 Move X19, [X31+40]
	062 Move X30, [X31+16]
	063 Move X21, [X31+24]
	064 Add X31, X31, 48
	065 Return 
	066 Move X8, 0x2298000
	067 Move X8, [X8+3360]
	068 Move X1, [X8]
	069 Compare X21, 0
	070 JumpIfNotEqual {47}
	071 Call 0x1C17F20
	072 Move X0, X20
	073 Call 0x1C17F18
	074 Move X21, X0
	075 NotImplemented "Instruction CMP not yet implemented."
	076 Move X0, X21
	077 Call 0x3EB2AD0
	078 Move X20, [X0]
	079 Call 0x3EB2AE0
	080 Move X20, X31
	081 Move X21, X0
	082 Move W8, [X31+12]
	083 Compare W8, 0
	084 JumpIfEqual {88}
	085 Move X0, X19
	086 Move X1, X31
	087 Call Monitor.Exit, X0
	088 Compare X20, 0
	089 JumpIfNotEqual {92}
	090 Move X0, X21
	091 Call 0x1D2D690
	092 Move X0, X20
	093 Call 0x1C17F18
	094 Call 0x1991590

Method: System.Void Exception(System.Exception exn)

Disassembly:
	0x01E65DC8 STR W1, [X31 + 0x1C]
	0x01E65DCC ADRP X0, 0x228E000
	0x01E65DD0 LDR X0, [X0 + 0x758]
	0x01E65DD4 BL 0x1C16D08
	0x01E65DD8 ADD X1, X31, 0x1C
	0x01E65DDC BL 0x1C16E04
	0x01E65DE0 MOV X19, X0
	0x01E65DE4 ADRP X0, 0x2297000
	0x01E65DE8 LDR X0, [X0 + 0xDC8]
	0x01E65DEC BL 0x1C16D08
	0x01E65DF0 MOV X1, X19
	0x01E65DF4 MOV X2, X31
	0x01E65DF8 BL 0x321EFD0
	0x01E65DFC B 0x1E65E64
	0x01E65E00 STR W1, [X31 + 0x18]
	0x01E65E04 ADRP X20, 0x228E000
	0x01E65E08 LDR X20, [X20 + 0x758]
	0x01E65E0C MOV X0, X20
	0x01E65E10 BL 0x1C16D08
	0x01E65E14 ADD X1, X31, 0x18
	0x01E65E18 BL 0x1C16E04
	0x01E65E1C MOV X21, X0
	0x01E65E20 MOV X0, X19
	0x01E65E24 BL 0x19903C0
	0x01E65E28 LDR W8, [X19 + 0x58]
	0x01E65E2C MOV X0, X20
	0x01E65E30 LSLV W8, W22, W8
	0x01E65E34 STR W8, [X31 + 0xC]
	0x01E65E38 BL 0x1C16D08
	0x01E65E3C ADD X1, X31, 0xC
	0x01E65E40 BL 0x1C16E04
	0x01E65E44 MOV X19, X0
	0x01E65E48 ADRP X0, 0x2297000
	0x01E65E4C LDR X0, [X0 + 0xDD0]
	0x01E65E50 BL 0x1C16D08
	0x01E65E54 MOV X1, X21
	0x01E65E58 MOV X2, X19
	0x01E65E5C MOV X3, X31
	0x01E65E60 BL 0x3227BD4
	0x01E65E64 MOV X19, X0
	0x01E65E68 ADRP X0, 0x228E000
	0x01E65E6C LDR X0, [X0 + 0x5B0]
	0x01E65E70 BL 0x1C16D08
	0x01E65E74 BL 0x1C16F10
	0x01E65E78 MOV X1, X19
	0x01E65E7C MOV X2, X31
	0x01E65E80 MOV X20, X0
	0x01E65E84 BL 0x337DF1C
	0x01E65E88 ADRP X0, 0x2297000
	0x01E65E8C LDR X0, [X0 + 0xDC0]
	0x01E65E90 BL 0x1C16D08
	0x01E65E94 MOV X1, X0
	0x01E65E98 MOV X0, X20
	0x01E65E9C BL 0x1C16DEC
	0x01E65EA0 ADRP X0, 0x228E000
	0x01E65EA4 LDR X0, [X0 + 0x7D0]
	0x01E65EA8 BL 0x1C16D08
	0x01E65EAC BL 0x1C16F10
	0x01E65EB0 MOV X1, X31
	0x01E65EB4 MOV X19, X0
	0x01E65EB8 BL 0x33B2C54
	0x01E65EBC B 0x1E65D50
	0x01E65EC0 SUB X31, X31, 0xA0
	0x01E65EC4 STP X29, X30, [X31 + 0x40]
	0x01E65EC8 STP X28, X27, [X31 + 0x50]
	0x01E65ECC STP X26, X25, [X31 + 0x60]
	0x01E65ED0 STP X24, X23, [X31 + 0x70]
	0x01E65ED4 STP X22, X21, [X31 + 0x80]
	0x01E65ED8 STP X20, X19, [X31 + 0x90]
	0x01E65EDC ADRP X20, 0x2574000

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, 0x2575000
	007 Move X21, 0x2298000
	008 Move W8, [X19+226]
	009 Move X21, [X21+3352]
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x2298000
	016 Move X0, [X0+3352]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X19+226], W8
	020 Move X8, [X21]
	021 Move X8, [X8+184]
	022 Move X9, [X8+32]
	023 Compare X9, 0
	024 JumpIfEqual {50}
	025 Move X19, [X8]
	026 Move [X31+12], W31
	027 Add X1, X31, 12
	028 Move X0, X19
	029 Move X2, X31
	030 Call Monitor.Enter, X0, X1
	031 Move X8, [X21]
	032 Move X8, [X8+184]
	033 Move X8, [X8+32]
	034 Compare X8, 0
	035 JumpIfEqual {58}
	036 Move X0, [X8+64]
	037 Move X9, [X8+24]
	038 Move X2, [X8+40]
	039 Move X1, X20
	040 NotImplemented "Instruction BLR not yet implemented."
	041 Move X20, X31
	042 Move W8, [X31+12]
	043 Compare W8, 0
	044 JumpIfEqual {48}
	045 Move X0, X19
	046 Move X1, X31
	047 Call Monitor.Exit, X0
	048 Compare X20, 0
	049 JumpIfNotEqual {56}
	050 Move X20, [X31+32]
	051 Move X19, [X31+40]
	052 Move X30, [X31+16]
	053 Move X21, [X31+24]
	054 Add X31, X31, 48
	055 Return 
	056 Move X0, X20
	057 Call 0x1C17F18
	058 Call 0x1C17F20
	059 Move X21, X0
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Move X0, X21
	062 Call 0x3EB2AD0
	063 Move X20, [X0]
	064 Call 0x3EB2AE0
	065 Move X20, X31
	066 Move X21, X0
	067 Move W8, [X31+12]
	068 Compare W8, 0
	069 JumpIfEqual {73}
	070 Move X0, X19
	071 Move X1, X31
	072 Call Monitor.Exit, X0
	073 Compare X20, 0
	074 JumpIfNotEqual {77}
	075 Move X0, X21
	076 Call 0x1D2D690
	077 Move X0, X20
	078 Call 0x1C17F18
	079 Call 0x1991590

