Type: Fusion.Photon.Realtime.Async.LoadBalancingClientAsyncExtensions

Method: System.Threading.Tasks.Task`1<Fusion.Photon.Realtime.RegionHandler> GetRegionsAsync(Fusion.Photon.Realtime.LoadBalancingClient client, System.Boolean throwOnError = True, System.Boolean createServiceTask = True, System.Threading.CancellationToken externalCancelationToken = null)

Disassembly:
	0x01E63AF8 BL 0x1C16F20
	0x01E63AFC MOV X1, X31
	0x01E63B00 B 0x33BDD8C
	0x01E63B04 SUB X31, X31, 0x80
	0x01E63B08 STP X30, X2, [X31 + 0x20]
	0x01E63B0C STP X28, X27, [X31 + 0x30]
	0x01E63B10 STP X26, X25, [X31 + 0x40]
	0x01E63B14 STP X24, X23, [X31 + 0x50]
	0x01E63B18 STP X22, X21, [X31 + 0x60]
	0x01E63B1C STP X20, X19, [X31 + 0x70]
	0x01E63B20 ADRP X28, 0x2576000
	0x01E63B24 ADRP X22, 0x2299000
	0x01E63B28 ADRP X27, 0x2299000
	0x01E63B2C ADRP X26, 0x2299000
	0x01E63B30 ADRP X25, 0x2299000
	0x01E63B34 ADRP X24, 0x2299000
	0x01E63B38 ADRP X23, 0x2292000
	0x01E63B3C LDR X22, [X22 + 0xC90]
	0x01E63B40 LDRB W8, [X28 + 0xEC]
	0x01E63B44 LDR X27, [X27 + 0xC98]
	0x01E63B48 LDR X26, [X26 + 0xCA0]
	0x01E63B4C LDR X25, [X25 + 0xCA8]
	0x01E63B50 LDR X24, [X24 + 0xCB0]
	0x01E63B54 LDR X23, [X23 + 0x570]
	0x01E63B58 MOV X20, X2
	0x01E63B5C MOV W21, W1
	0x01E63B60 MOV X19, X0
	0x01E63B64 TBNZ X8, 0x0, 0x1E63BF4
	0x01E63B68 ADRP X0, 0x2291000
	0x01E63B6C LDR X0, [X0 + 0xE70]
	0x01E63B70 BL 0x1C16CF4
	0x01E63B74 ADRP X0, 0x2292000
	0x01E63B78 LDR X0, [X0 + 0xA50]
	0x01E63B7C BL 0x1C16CF4
	0x01E63B80 ADRP X0, 0x2298000
	0x01E63B84 LDR X0, [X0 + 0x7D8]
	0x01E63B88 BL 0x1C16CF4
	0x01E63B8C ADRP X0, 0x2299000
	0x01E63B90 LDR X0, [X0 + 0xCB8]
	0x01E63B94 BL 0x1C16CF4
	0x01E63B98 ADRP X0, 0x2299000
	0x01E63B9C LDR X0, [X0 + 0xCC0]
	0x01E63BA0 BL 0x1C16CF4
	0x01E63BA4 ADRP X0, 0x2299000
	0x01E63BA8 LDR X0, [X0 + 0xC90]
	0x01E63BAC BL 0x1C16CF4
	0x01E63BB0 ADRP X0, 0x2299000
	0x01E63BB4 LDR X0, [X0 + 0xCA0]
	0x01E63BB8 BL 0x1C16CF4
	0x01E63BBC ADRP X0, 0x2299000
	0x01E63BC0 LDR X0, [X0 + 0xC98]
	0x01E63BC4 BL 0x1C16CF4
	0x01E63BC8 ADRP X0, 0x2299000
	0x01E63BCC LDR X0, [X0 + 0xCB0]
	0x01E63BD0 BL 0x1C16CF4
	0x01E63BD4 ADRP X0, 0x2299000
	0x01E63BD8 LDR X0, [X0 + 0xCA8]
	0x01E63BDC BL 0x1C16CF4
	0x01E63BE0 ADRP X0, 0x2292000
	0x01E63BE4 LDR X0, [X0 + 0x570]
	0x01E63BE8 BL 0x1C16CF4
	0x01E63BEC MOVZ W8, 0x1
	0x01E63BF0 STRB W8, [X28 + 0xEC]
	0x01E63BF4 LDR X0, [X22]
	0x01E63BF8 ADRP X28, 0x2292000
	0x01E63BFC LDR X28, [X28 + 0xA50]
	0x01E63C00 STR X31, [X31 + 0x18]
	0x01E63C04 BL 0x1C16F10
	0x01E63C08 MOV X1, X31
	0x01E63C0C MOV X22, X0
	0x01E63C10 BL 0x33BDD8C
	0x01E63C14 STR X22, [X19 + 0x10]
	0x01E63C18 LDR X0, [X27]
	0x01E63C1C BL 0x1C16F10
	0x01E63C20 MOV X1, X31
	0x01E63C24 MOV X22, X0
	0x01E63C28 BL 0x33BDD8C
	0x01E63C2C STR X22, [X19 + 0x18]
	0x01E63C30 LDR X0, [X26]
	0x01E63C34 BL 0x1C16F10
	0x01E63C38 MOV X1, X31
	0x01E63C3C MOV X22, X0
	0x01E63C40 BL 0x33BDD8C
	0x01E63C44 MOV X0, X19
	0x01E63C48 MOV X1, X31
	0x01E63C4C STR X22, [X19 + 0x20]
	0x01E63C50 BL 0x33BDD8C
	0x01E63C54 LDR X0, [X25]
	0x01E63C58 BL 0x1C16F10
	0x01E63C5C LDR X1, [X24]
	0x01E63C60 MOV X22, X0
	0x01E63C64 BL 0x267A588
	0x01E63C68 STR X22, [X19 + 0x30]
	0x01E63C6C LDR X0, [X23]
	0x01E63C70 LDR W8, [X0 + 0xE0]
	0x01E63C74 CBNZ W8, 0x1E63C7C
	0x01E63C78 BL 0x1C16DFC
	0x01E63C7C FMOV D0, 16.00000000325963
	0x01E63C80 MOV X0, X31
	0x01E63C84 BL 0x3394754
	0x01E63C88 LDR X8, [X28]
	0x01E63C8C MOV X23, X0
	0x01E63C90 MOV X0, X8
	0x01E63C94 BL 0x1C16F10
	0x01E63C98 MOV X1, X23
	0x01E63C9C MOV X2, X31
	0x01E63CA0 MOV X22, X0
	0x01E63CA4 BL 0x33DFAC0
	0x01E63CA8 STR X22, [X19 + 0x38]
	0x01E63CAC CBZ X22, 0x1E63DA4
	0x01E63CB0 AND W25, W21, 0x1
	0x01E63CB4 ADRP X24, 0x2291000
	0x01E63CB8 ADRP X21, 0x2299000
	0x01E63CBC ADRP X23, 0x2298000
	0x01E63CC0 LDR X24, [X24 + 0xE70]
	0x01E63CC4 LDR X21, [X21 + 0xCC0]
	0x01E63CC8 LDR X23, [X23 + 0x7D8]
	0x01E63CCC MOV X0, X22
	0x01E63CD0 MOV X1, X31
	0x01E63CD4 BL 0x33DFA08
	0x01E63CD8 LDR X8, [X24]
	0x01E63CDC STR X0, [X31 + 0x18]
	0x01E63CE0 MOV X0, X8
	0x01E63CE4 BL 0x1C16F10
	0x01E63CE8 LDR X2, [X21]
	0x01E63CEC MOV X1, X19
	0x01E63CF0 MOV X3, X31
	0x01E63CF4 MOV X21, X0
	0x01E63CF8 BL 0x3314368
	0x01E63CFC LDR X0, [X23]
	0x01E63D00 LDR W8, [X0 + 0xE0]
	0x01E63D04 CBNZ W8, 0x1E63D0C
	0x01E63D08 BL 0x1C16DFC
	0x01E63D0C ADD X8, X31, 0x0
	0x01E63D10 ADD X0, X31, 0x18
	0x01E63D14 MOV X1, X21
	0x01E63D18 MOV X2, X31
	0x01E63D1C BL 0x33DD3A4
	0x01E63D20 MOV X0, X20
	0x01E63D24 MOV X1, X31
	0x01E63D28 MOV X2, X31
	0x01E63D2C STRB W25, [X19 + 0x28]
	0x01E63D30 STR X31, [X31 + 0x18]
	0x01E63D34 BL 0x33DDBCC
	0x01E63D38 TBZ X0, 0x0, 0x1E63D84
	0x01E63D3C LDR X0, [X24]
	0x01E63D40 BL 0x1C16F10
	0x01E63D44 ADRP X8, 0x2299000
	0x01E63D48 LDR X8, [X8 + 0xCB8]
	0x01E63D4C MOV X1, X19
	0x01E63D50 MOV X3, X31
	0x01E63D54 MOV X20, X0
	0x01E63D58 LDR X2, [X8]
	0x01E63D5C BL 0x3314368
	0x01E63D60 LDR X0, [X23]
	0x01E63D64 LDR W8, [X0 + 0xE0]
	0x01E63D68 CBNZ W8, 0x1E63D70
	0x01E63D6C BL 0x1C16DFC
	0x01E63D70 ADD X8, X31, 0x0
	0x01E63D74 ADD X0, X31, 0x28
	0x01E63D78 MOV X1, X20
	0x01E63D7C MOV X2, X31
	0x01E63D80 BL 0x33DD3A4
	0x01E63D84 LDP X20, X19, [X31 + 0x70]
	0x01E63D88 LDP X22, X21, [X31 + 0x60]
	0x01E63D8C LDP X24, X23, [X31 + 0x50]
	0x01E63D90 LDP X26, X25, [X31 + 0x40]
	0x01E63D94 LDP X28, X27, [X31 + 0x30]
	0x01E63D98 LDR X30, [X31 + 0x20]
	0x01E63D9C ADD X31, X31, 0x80
	0x01E63DA0 RET
	0x01E63DA4 BL 0x1C16F20
	0x01E63DA8 STR X30, [X31 - 0x10]!
	0x01E63DAC LDR X0, [X0 + 0x38]
	0x01E63DB0 CBZ X0, 0x1E63DC0
	0x01E63DB4 MOV X1, X31
	0x01E63DB8 LDR X30, [X31], #0x10
	0x01E63DBC B 0x33DFA08
	0x01E63DC0 BL 0x1C16F20
	0x01E63DC4 STP X30, X23, [X31 - 0x30]!
	0x01E63DC8 STP X22, X21, [X31 + 0x10]
	0x01E63DCC STP X20, X19, [X31 + 0x20]
	0x01E63DD0 ADRP X22, 0x2576000
	0x01E63DD4 ADRP X23, 0x2299000
	0x01E63DD8 LDRB W8, [X22 + 0xD5]
	0x01E63DDC LDR X23, [X23 + 0xCC8]
	0x01E63DE0 MOV X19, X2
	0x01E63DE4 MOV X21, X1
	0x01E63DE8 MOV X20, X0
	0x01E63DEC TBNZ X8, 0x0, 0x1E63E34
	0x01E63DF0 ADRP X0, 0x2298000
	0x01E63DF4 LDR X0, [X0 + 0x7F8]
	0x01E63DF8 BL 0x1C16CF4
	0x01E63DFC ADRP X0, 0x2298000

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X19, 0x2577000
	009 Move X24, 0x229A000
	010 Move W8, [X19+202]
	011 Move X24, [X24+3008]
	012 Move X23, X3
	013 Move W20, W2
	014 Move W22, W1
	015 Move X21, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {61}
	020 Move X0, 0x229A000
	021 Move X0, [X0+688]
	022 Call 0x1C17CF4
	023 Move X0, 0x229A000
	024 Move X0, [X0+3016]
	025 Call 0x1C17CF4
	026 Move X0, 0x2299000
	027 Move X0, [X0+2008]
	028 Call 0x1C17CF4
	029 Move X0, 0x229A000
	030 Move X0, [X0+3024]
	031 Call 0x1C17CF4
	032 Move X0, 0x229A000
	033 Move X0, [X0+3032]
	034 Call 0x1C17CF4
	035 Move X0, 0x229A000
	036 Move X0, [X0+3040]
	037 Call 0x1C17CF4
	038 Move X0, 0x229A000
	039 Move X0, [X0+3048]
	040 Call 0x1C17CF4
	041 Move X0, 0x229A000
	042 Move X0, [X0+3056]
	043 Call 0x1C17CF4
	044 Move X0, 0x2292000
	045 Move X0, [X0+1976]
	046 Call 0x1C17CF4
	047 Move X0, 0x229A000
	048 Move X0, [X0+3064]
	049 Call 0x1C17CF4
	050 Move X0, 0x229A000
	051 Move X0, [X0+3072]
	052 Call 0x1C17CF4
	053 Move X0, 0x229A000
	054 Move X0, [X0+3008]
	055 Call 0x1C17CF4
	056 Move X0, 0x229A000
	057 Move X0, [X0+3080]
	058 Call 0x1C17CF4
	059 Move W8, 1
	060 Move [X19+202], W8
	061 Move X0, [X24]
	062 Call 0x1C17F10
	063 Move X1, X31
	064 Move X19, X0
	065 Call Object..ctor, X0
	066 Compare X19, 0
	067 JumpIfEqual {223}
	068 Move [X19+32], X23
	069 Compare X21, 0
	070 JumpIfEqual {223}
	071 Move X0, X21
	072 Move X1, X31
	073 Call LoadBalancingClient.ConnectToNameServer, X0
	074 Move TEMP, X0
	075 And TEMP, TEMP, 1
	076 Compare TEMP, 1
	077 JumpIfNotEqual {140}
	078 Move X9, 0x2299000
	079 Move X8, [X19+32]
	080 Move X9, [X9+2008]
	081 Add X1, X31, 8
	082 Move [X31+8], X8
	083 Move X0, [X9]
	084 Call 0x1C17E04
	085 Move X8, 0x229A000
	086 Move X8, [X8+3048]
	087 Move X23, X0
	088 Move X8, [X8]
	089 Move X0, X8
	090 Call 0x1C17F10
	091 Move X8, 0x229A000
	092 Move X8, [X8+3032]
	093 Move X1, X23
	094 Move X24, X0
	095 Move X2, [X8]
	096 Call TaskCompletionSource`1<Object>..ctor, X0, X1
	097 Move X3, [X19+32]
	098 And W1, W22, 1
	099 And W2, W20, 1
	100 Move X0, X21
	101 Move [X19+24], X24
	102 Call LoadBalancingClientAsyncExtensions.CreateOpHandler, X0, X1, X2, X3
	103 Move [X19+16], X0
	104 Compare X0, 0
	105 JumpIfEqual {223}
	106 Move X22, [X0+16]
	107 Compare X22, 0
	108 JumpIfEqual {223}
	109 Move X23, 0x229A000
	110 Move X20, [X22+40]
	111 Move X23, [X23+3016]
	112 Move X0, [X23]
	113 Call 0x1C17F10
	114 Move X8, 0x229A000
	115 Move X8, [X8+3064]
	116 Move X1, X19
	117 Move X3, X31
	118 Move X21, X0
	119 Move X2, [X8]
	120 Call Action`1<Int32Enum>..ctor, X0, X1, X2
	121 Move X0, X20
	122 Move X1, X21
	123 Move X2, X31
	124 Call Delegate.Combine, X0, X1
	125 Compare X0, 0
	126 JumpIfEqual {169}
	127 Move X21, [X23]
	128 Move X20, X0
	129 Move X1, X21
	130 Call 0x1C17E00
	131 Compare X0, 0
	132 JumpIfEqual {207}
	133 Move [X22+40], X0
	134 Move X21, [X23]
	135 Move X0, X20
	136 Move X1, X21
	137 Call 0x1C17E00
	138 Compare X0, 0
	139 JumpIfNotEqual {170}
	140 Move X8, 0x229A000
	141 Move X8, [X8+3024]
	142 Move X0, [X8]
	143 Call 0x1C17F10
	144 Move X8, 0x229A000
	145 Move X8, [X8+3080]
	146 Move X19, X0
	147 Move X1, [X8]
	148 Call OperationStartException..ctor, X0, X1
	149 Move X8, 0x2292000
	150 Move X8, [X8+1976]
	151 Move X0, [X8]
	152 Move W8, [X0+224]
	153 Compare W8, 0
	154 JumpIfNotEqual {156}
	155 Call 0x1C17DFC
	156 Move X8, 0x229A000
	157 Move X8, [X8+3056]
	158 Move X0, X19
	159 Move X20, [X31+48]
	160 Move X19, [X31+56]
	161 Move X22, [X31+32]
	162 Move X21, [X31+40]
	163 Move X1, [X8]
	164 Move X24, [X31+16]
	165 Move X23, [X31+24]
	166 Move X30, [X31+64]
	167 Call Task.FromException, X0
	168 Return X0
	169 Move [X22+40], X31
	170 Move X8, [X19+16]
	171 Compare X8, 0
	172 JumpIfEqual {223}
	173 Move X22, [X8+16]
	174 Compare X22, 0
	175 JumpIfEqual {223}
	176 Move X23, 0x229A000
	177 Move X20, [X22+32]
	178 Move X23, [X23+688]
	179 Move X0, [X23]
	180 Call 0x1C17F10
	181 Move X8, 0x229A000
	182 Move X8, [X8+3072]
	183 Move X1, X19
	184 Move X3, X31
	185 Move X21, X0
	186 Move X2, [X8]
	187 Call Action`1<Object>..ctor, X0, X1, X2
	188 Move X0, X20
	189 Move X1, X21
	190 Move X2, X31
	191 Call Delegate.Combine, X0, X1
	192 Compare X0, 0
	193 JumpIfEqual {210}
	194 Move X21, [X23]
	195 Move X20, X0
	196 Move X1, X21
	197 Call 0x1C17E00
	198 Compare X0, 0
	199 JumpIfEqual {207}
	200 Move [X22+32], X0
	201 Move X21, [X23]
	202 Move X0, X20
	203 Move X1, X21
	204 Call 0x1C17E00
	205 Compare X0, 0
	206 JumpIfNotEqual {211}
	207 Move X0, X20
	208 Move X1, X21
	209 Call 0x1C181E0
	210 Move [X22+32], X31
	211 Move X8, [X19+24]
	212 Compare X8, 0
	213 JumpIfEqual {223}
	214 Move X0, [X8+16]
	215 Move X20, [X31+48]
	216 Move X19, [X31+56]
	217 Move X22, [X31+32]
	218 Move X21, [X31+40]
	219 Move X24, [X31+16]
	220 Move X23, [X31+24]
	221 Move X30, [X31+64]
	222 Return X0
	223 Call 0x1C17F20

Method: System.Threading.Tasks.Task ConnectUsingSettingsAsync(Fusion.Photon.Realtime.LoadBalancingClient client, Fusion.Photon.Realtime.AppSettings appSettings, System.Boolean createServiceTask = True, System.Threading.CancellationToken externalCancellationToken = null)

Disassembly:
	0x01E64010 BL 0x1E47D94
	0x01E64014 LDR X8, [X19]
	0x01E64018 MOV W19, W0
	0x01E6401C LDR W9, [X8 + 0xE0]
	0x01E64020 CBNZ W9, 0x1E6402C
	0x01E64024 MOV X0, X8
	0x01E64028 BL 0x1C16DFC
	0x01E6402C LDR X1, [X20]
	0x01E64030 AND W0, W19, 0x1
	0x01E64034 LDP X20, X19, [X31 + 0x10]
	0x01E64038 LDP X30, X21, [X31], #0x20
	0x01E6403C B 0x229A11C
	0x01E64040 BL 0x1C16F20
	0x01E64044 B 0x1E6404C
	0x01E64048 B 0x1E6404C
	0x01E6404C MOV X20, X0
	0x01E64050 CMP W1, 0x1
	0x01E64054 B.NE 0x1E640DC
	0x01E64058 MOV X0, X20
	0x01E6405C BL 0x3EB1AD0
	0x01E64060 MOV X20, X0
	0x01E64064 ADRP X0, 0x228F000
	0x01E64068 LDR X0, [X0 + 0x7D0]
	0x01E6406C BL 0x1C16D08
	0x01E64070 LDR X8, [X20]
	0x01E64074 LDR X1, [X8]
	0x01E64078 BL 0x1C17270
	0x01E6407C TBZ X0, 0x0, 0x1E640B4
	0x01E64080 LDR X20, [X20]
	0x01E64084 BL 0x3EB1AE0
	0x01E64088 LDR X21, [X19 + 0x20]
	0x01E6408C CBZ X21, 0x1E640B0
	0x01E64090 ADRP X0, 0x2298000
	0x01E64094 LDR X0, [X0 + 0xCE0]
	0x01E64098 BL 0x1C16D08
	0x01E6409C MOV X2, X0
	0x01E640A0 MOV X0, X21
	0x01E640A4 MOV X1, X20
	0x01E640A8 BL 0x267A708
	0x01E640AC B 0x1E63FF4
	0x01E640B0 BL 0x1C16F20
	0x01E640B4 MOVZ W0, 0x8
	0x01E640B8 BL 0x3EB1AF0
	0x01E640BC LDR X8, [X20]
	0x01E640C0 STR X8, [X0]
	0x01E640C4 ADRP X1, 0x2050000
	0x01E640C8 ADD X1, X1, 0xE58
	0x01E640CC MOV X2, X31
	0x01E640D0 BL 0x3EB1B00
	0x01E640D4 MOV X20, X0
	0x01E640D8 BL 0x3EB1AE0
	0x01E640DC MOV X0, X20
	0x01E640E0 BL 0x1D2C690
	0x01E640E4 BL 0x1990590
	0x01E640E8 SUB X31, X31, 0x40
	0x01E640EC STP X30, X23, [X31 + 0x10]
	0x01E640F0 STP X22, X21, [X31 + 0x20]
	0x01E640F4 STP X20, X19, [X31 + 0x30]
	0x01E640F8 ADRP X21, 0x2575000
	0x01E640FC LDRB W8, [X21 + 0xD8]
	0x01E64100 MOV W19, W1
	0x01E64104 MOV X20, X0
	0x01E64108 TBNZ X8, 0x0, 0x1E64144
	0x01E6410C ADRP X0, 0x2297000
	0x01E64110 LDR X0, [X0 + 0xE70]
	0x01E64114 BL 0x1C16CF4
	0x01E64118 ADRP X0, 0x2298000
	0x01E6411C LDR X0, [X0 + 0xBD0]
	0x01E64120 BL 0x1C16CF4
	0x01E64124 ADRP X0, 0x2298000
	0x01E64128 LDR X0, [X0 + 0xCE8]
	0x01E6412C BL 0x1C16CF4
	0x01E64130 ADRP X0, 0x2298000
	0x01E64134 LDR X0, [X0 + 0xCF0]
	0x01E64138 BL 0x1C16CF4
	0x01E6413C MOVZ W8, 0x1
	0x01E64140 STRB W8, [X21 + 0xD8]
	0x01E64144 LDR X0, [X20 + 0x10]
	0x01E64148 CBZ X0, 0x1E641E0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x2576000
	008 Move W8, [X23+203]
	009 Move X19, X3
	010 Move W20, W2
	011 Move X22, X1
	012 Move X21, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {31}
	017 Move X0, 0x2299000
	018 Move X0, [X0+3024]
	019 Call 0x1C17CF4
	020 Move X0, 0x2291000
	021 Move X0, [X0+1976]
	022 Call 0x1C17CF4
	023 Move X0, 0x2299000
	024 Move X0, [X0+3120]
	025 Call 0x1C17CF4
	026 Move X0, 0x2299000
	027 Move X0, [X0+3128]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X23+203], W8
	031 Compare X21, 0
	032 JumpIfEqual {97}
	033 Move X0, X21
	034 Move X1, X31
	035 Call LoadBalancingClient.get_State, X0
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move X0, X21
	038 Move X1, X31
	039 Call LoadBalancingClient.get_State, X0
	040 Compare W0, 0
	041 JumpIfEqual {48}
	042 Move X8, 0x2299000
	043 Move X8, [X8+3024]
	044 Move X0, [X8]
	045 Call 0x1C17F10
	046 Move X8, 0x2299000
	047 Move X8, [X8+3120]
	048 Move X8, [X21]
	049 Move X0, X21
	050 Move X1, X22
	051 Move X9, [X8+440]
	052 Move X2, [X8+448]
	053 NotImplemented "Instruction BLR not yet implemented."
	054 Move TEMP, X0
	055 And TEMP, TEMP, 1
	056 Compare TEMP, 1
	057 JumpIfNotEqual {71}
	058 And W2, W20, 1
	059 Move W1, 1
	060 Move X0, X21
	061 Move X3, X19
	062 Call LoadBalancingClientAsyncExtensions.CreateOpHandler, X0, X1, X2, X3
	063 Compare X0, 0
	064 JumpIfEqual {97}
	065 Move X20, [X31+32]
	066 Move X19, [X31+40]
	067 Move X22, [X31+16]
	068 Move X21, [X31+24]
	069 Move X30, [X31+48]
	070 Move X23, [X31+56]
	071 Move X8, 0x2299000
	072 Move X8, [X8+3024]
	073 Move X0, [X8]
	074 Call 0x1C17F10
	075 Move X8, 0x2299000
	076 Move X8, [X8+3128]
	077 Move X1, [X8]
	078 Move X19, X0
	079 Call OperationStartException..ctor, X0, X1
	080 Move X8, 0x2291000
	081 Move X8, [X8+1976]
	082 Move X0, [X8]
	083 Move W8, [X0+224]
	084 Compare W8, 0
	085 JumpIfNotEqual {87}
	086 Call 0x1C17DFC
	087 Move X0, X19
	088 Move X20, [X31+32]
	089 Move X19, [X31+40]
	090 Move X22, [X31+16]
	091 Move X21, [X31+24]
	092 Move X1, X31
	093 Move X30, [X31+48]
	094 Move X23, [X31+56]
	095 Call Task.FromException, X0
	096 Return X0
	097 Call 0x1C17F20

Method: System.Threading.Tasks.Task ReconnectAndRejoinAsync(Fusion.Photon.Realtime.LoadBalancingClient client, System.Boolean throwOnError = True, System.Boolean createServiceTask = True, System.Threading.CancellationToken externalCancellationToken = null)

Disassembly:
	0x01E64194 LDR X8, [X23]
	0x01E64198 MOV X21, X0
	0x01E6419C MOV X0, X8
	0x01E641A0 BL 0x1C16F10
	0x01E641A4 MOV X1, X21
	0x01E641A8 MOV X19, X0
	0x01E641AC BL 0x1E62A28
	0x01E641B0 CBZ X20, 0x1E641E0
	0x01E641B4 ADRP X8, 0x2298000
	0x01E641B8 LDR X8, [X8 + 0xCE8]
	0x01E641BC MOV X0, X20
	0x01E641C0 MOV X1, X19
	0x01E641C4 LDR X2, [X8]
	0x01E641C8 BL 0x267B1A0
	0x01E641CC LDP X20, X19, [X31 + 0x30]
	0x01E641D0 LDP X22, X21, [X31 + 0x20]
	0x01E641D4 LDP X30, X23, [X31 + 0x10]
	0x01E641D8 ADD X31, X31, 0x40
	0x01E641DC RET
	0x01E641E0 BL 0x1C16F20
	0x01E641E4 STP X30, X21, [X31 - 0x20]!
	0x01E641E8 STP X20, X19, [X31 + 0x10]
	0x01E641EC ADRP X21, 0x2575000
	0x01E641F0 LDRB W8, [X21 + 0xED]
	0x01E641F4 MOV W20, W1
	0x01E641F8 MOV X19, X0
	0x01E641FC TBNZ X8, 0x0, 0x1E64214
	0x01E64200 ADRP X0, 0x2298000
	0x01E64204 LDR X0, [X0 + 0xCF8]
	0x01E64208 BL 0x1C16CF4
	0x01E6420C MOVZ W8, 0x1
	0x01E64210 STRB W8, [X21 + 0xED]
	0x01E64214 LDR X0, [X19 + 0x30]
	0x01E64218 CBZ X0, 0x1E6427C
	0x01E6421C ADRP X8, 0x2298000
	0x01E64220 LDR X8, [X8 + 0xCF8]
	0x01E64224 MOV W1, W20
	0x01E64228 LDR X2, [X8]
	0x01E6422C BL 0x267A7D0
	0x01E64230 TBZ X0, 0x0, 0x1E64270
	0x01E64234 LDR X0, [X19 + 0x38]
	0x01E64238 CBZ X0, 0x1E6427C
	0x01E6423C MOV X1, X31
	0x01E64240 BL 0x33DD2DC
	0x01E64244 TBNZ X0, 0x0, 0x1E64258
	0x01E64248 LDR X0, [X19 + 0x38]
	0x01E6424C CBZ X0, 0x1E6427C
	0x01E64250 MOV X1, X31
	0x01E64254 BL 0x33DFCF8
	0x01E64258 LDR X0, [X19 + 0x38]
	0x01E6425C CBZ X0, 0x1E6427C
	0x01E64260 LDP X20, X19, [X31 + 0x10]
	0x01E64264 MOV X1, X31
	0x01E64268 LDP X30, X21, [X31], #0x20
	0x01E6426C B 0x33E01CC
	0x01E64270 LDP X20, X19, [X31 + 0x10]
	0x01E64274 LDP X30, X21, [X31], #0x20
	0x01E64278 RET
	0x01E6427C BL 0x1C16F20
	0x01E64280 STP X30, X21, [X31 - 0x20]!
	0x01E64284 STP X20, X19, [X31 + 0x10]
	0x01E64288 ADRP X21, 0x2575000
	0x01E6428C LDRB W8, [X21 + 0xD9]
	0x01E64290 MOV X19, X1
	0x01E64294 MOV X20, X0
	0x01E64298 TBNZ X8, 0x0, 0x1E642C8
	0x01E6429C ADRP X0, 0x2298000
	0x01E642A0 LDR X0, [X0 + 0x2B0]
	0x01E642A4 BL 0x1C16CF4
	0x01E642A8 ADRP X0, 0x2291000
	0x01E642AC LDR X0, [X0 + 0x278]
	0x01E642B0 BL 0x1C16CF4
	0x01E642B4 ADRP X0, 0x2298000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x2576000
	008 Move W8, [X23+204]
	009 Move X19, X3
	010 Move W20, W2
	011 Move W21, W1
	012 Move X22, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {31}
	017 Move X0, 0x2299000
	018 Move X0, [X0+3024]
	019 Call 0x1C17CF4
	020 Move X0, 0x2291000
	021 Move X0, [X0+1976]
	022 Call 0x1C17CF4
	023 Move X0, 0x2299000
	024 Move X0, [X0+3120]
	025 Call 0x1C17CF4
	026 Move X0, 0x2299000
	027 Move X0, [X0+3144]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X23+204], W8
	031 Compare X22, 0
	032 JumpIfEqual {91}
	033 Move X0, X22
	034 Move X1, X31
	035 Call LoadBalancingClient.get_State, X0
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move X0, X22
	038 Move X1, X31
	039 Call LoadBalancingClient.ReconnectAndRejoin, X0
	040 Move TEMP, X0
	041 And TEMP, TEMP, 1
	042 Compare TEMP, 1
	043 JumpIfNotEqual {65}
	044 And W1, W21, 1
	045 And W2, W20, 1
	046 Move X0, X22
	047 Move X3, X19
	048 Call LoadBalancingClientAsyncExtensions.CreateOpHandler, X0, X1, X2, X3
	049 Compare X0, 0
	050 JumpIfEqual {91}
	051 Move X20, [X31+32]
	052 Move X19, [X31+40]
	053 Move X22, [X31+16]
	054 Move X21, [X31+24]
	055 Move X30, [X31+48]
	056 Move X23, [X31+56]
	057 Call OperationHandler.get_Task, X0
	058 Return X0
	059 Move X8, 0x2299000
	060 Move X8, [X8+3024]
	061 Move X0, [X8]
	062 Call 0x1C17F10
	063 Move X8, 0x2299000
	064 Move X8, [X8+3120]
	065 Move X8, 0x2299000
	066 Move X8, [X8+3024]
	067 Move X0, [X8]
	068 Call 0x1C17F10
	069 Move X8, 0x2299000
	070 Move X8, [X8+3144]
	071 Move X1, [X8]
	072 Move X19, X0
	073 Call OperationStartException..ctor, X0, X1
	074 Move X8, 0x2291000
	075 Move X8, [X8+1976]
	076 Move X0, [X8]
	077 Move W8, [X0+224]
	078 Compare W8, 0
	079 JumpIfNotEqual {81}
	080 Call 0x1C17DFC
	081 Move X0, X19
	082 Move X20, [X31+32]
	083 Move X19, [X31+40]
	084 Move X22, [X31+16]
	085 Move X21, [X31+24]
	086 Move X1, X31
	087 Move X30, [X31+48]
	088 Move X23, [X31+56]
	089 Call Task.FromException, X0
	090 Return X0
	091 Call 0x1C17F20

Method: System.Threading.Tasks.Task DisconnectAsync(Fusion.Photon.Realtime.LoadBalancingClient client, System.Boolean createServiceTask = True, System.Threading.CancellationToken externalCancellationToken = null)

Disassembly:
	0x01E642B8 LDR X0, [X0 + 0xD00]
	0x01E642BC BL 0x1C16CF4
	0x01E642C0 MOVZ W8, 0x1
	0x01E642C4 STRB W8, [X21 + 0xD9]
	0x01E642C8 LDR X21, [X20 + 0x28]
	0x01E642CC CBNZ X21, 0x1E64300
	0x01E642D0 ADRP X8, 0x2298000
	0x01E642D4 LDR X8, [X8 + 0x2B0]
	0x01E642D8 LDR X0, [X8]
	0x01E642DC BL 0x1C16F10
	0x01E642E0 ADRP X8, 0x2298000
	0x01E642E4 LDR X8, [X8 + 0xD00]
	0x01E642E8 MOV X1, X20
	0x01E642EC MOV X3, X31
	0x01E642F0 MOV X21, X0
	0x01E642F4 LDR X2, [X8]
	0x01E642F8 BL 0x2A6B948
	0x01E642FC STR X21, [X20 + 0x28]
	0x01E64300 CBZ X19, 0x1E6432C
	0x01E64304 ADRP X8, 0x2291000
	0x01E64308 LDR X8, [X8 + 0x278]
	0x01E6430C MOV X0, X19
	0x01E64310 LDP X20, X19, [X31 + 0x10]
	0x01E64314 MOV X1, X21
	0x01E64318 LDR X8, [X8]
	0x01E6431C LDR X8, [X8 + 0xB8]
	0x01E64320 LDR X2, [X8]
	0x01E64324 LDP X30, X21, [X31], #0x20
	0x01E64328 B 0x1E5C09C
	0x01E6432C BL 0x1C16F20
	0x01E64330 STR X30, [X31 - 0x30]!
	0x01E64334 STP X22, X21, [X31 + 0x10]
	0x01E64338 STP X20, X19, [X31 + 0x20]
	0x01E6433C ADRP X22, 0x2575000
	0x01E64340 ADRP X21, 0x2297000
	0x01E64344 LDRB W8, [X22 + 0xDA]
	0x01E64348 LDR X21, [X21 + 0x7D8]
	0x01E6434C MOV X20, X1
	0x01E64350 MOV X19, X0
	0x01E64354 TBNZ X8, 0x0, 0x1E64378
	0x01E64358 ADRP X0, 0x2297000
	0x01E6435C LDR X0, [X0 + 0x7D8]
	0x01E64360 BL 0x1C16CF4
	0x01E64364 ADRP X0, 0x2298000
	0x01E64368 LDR X0, [X0 + 0xD08]
	0x01E6436C BL 0x1C16CF4
	0x01E64370 MOVZ W8, 0x1
	0x01E64374 STRB W8, [X22 + 0xDA]
	0x01E64378 LDR X0, [X21]
	0x01E6437C ADD X21, X19, 0x20
	0x01E64380 LDR W8, [X0 + 0xE0]
	0x01E64384 CBNZ W8, 0x1E6438C
	0x01E64388 BL 0x1C16DFC
	0x01E6438C MOV X0, X21
	0x01E64390 MOV X1, X31
	0x01E64394 BL 0x33DD2B0
	0x01E64398 LDR X8, [X19 + 0x18]
	0x01E6439C CBZ X8, 0x1E643E4
	0x01E643A0 ADRP X9, 0x2298000
	0x01E643A4 LDR X9, [X9 + 0xD08]
	0x01E643A8 LDR X2, [X9]
	0x01E643AC TBZ X0, 0x0, 0x1E643BC
	0x01E643B0 MOV X0, X8
	0x01E643B4 MOV X1, X31
	0x01E643B8 B 0x1E643C4
	0x01E643BC MOV X0, X8
	0x01E643C0 MOV X1, X20
	0x01E643C4 BL 0x267B244
	0x01E643C8 LDR X0, [X19 + 0x10]
	0x01E643CC CBZ X0, 0x1E643E4
	0x01E643D0 LDP X20, X19, [X31 + 0x20]
	0x01E643D4 LDP X22, X21, [X31 + 0x10]
	0x01E643D8 MOV W1, W31
	0x01E643DC LDR X30, [X31], #0x30
	0x01E643E0 B 0x1E641E4
	0x01E643E4 BL 0x1C16F20
	0x01E643E8 SUB X31, X31, 0x40
	0x01E643EC STP X30, X23, [X31 + 0x10]
	0x01E643F0 STP X22, X21, [X31 + 0x20]
	0x01E643F4 STP X20, X19, [X31 + 0x30]
	0x01E643F8 ADRP X23, 0x2575000
	0x01E643FC ADRP X22, 0x2297000
	0x01E64400 ADRP X21, 0x2298000
	0x01E64404 LDRB W8, [X23 + 0xDB]
	0x01E64408 LDR X22, [X22 + 0xE70]
	0x01E6440C LDR X21, [X21 + 0xD10]
	0x01E64410 MOV W20, W1
	0x01E64414 MOV X19, X0
	0x01E64418 TBNZ X8, 0x0, 0x1E6443C
	0x01E6441C ADRP X0, 0x2297000
	0x01E64420 LDR X0, [X0 + 0xE70]
	0x01E64424 BL 0x1C16CF4
	0x01E64428 ADRP X0, 0x2298000
	0x01E6442C LDR X0, [X0 + 0xD10]
	0x01E64430 BL 0x1C16CF4
	0x01E64434 MOVZ W8, 0x1
	0x01E64438 STRB W8, [X23 + 0xDB]
	0x01E6443C LDR X0, [X22]
	0x01E64440 ADD X1, X31, 0xC
	0x01E64444 STR W20, [X31 + 0xC]
	0x01E64448 BL 0x1C16E04
	0x01E6444C LDR X8, [X21]
	0x01E64450 MOV X1, X0
	0x01E64454 MOV X2, X31
	0x01E64458 MOV X0, X8
	0x01E6445C BL 0x321EFD0
	0x01E64460 BL 0x1E6448C
	0x01E64464 LDR X0, [X19 + 0x10]
	0x01E64468 CBZ X0, 0x1E64488
	0x01E6446C MOV W1, W31
	0x01E64470 BL 0x1E641E4
	0x01E64474 LDP X20, X19, [X31 + 0x30]
	0x01E64478 LDP X22, X21, [X31 + 0x20]
	0x01E6447C LDP X30, X23, [X31 + 0x10]
	0x01E64480 ADD X31, X31, 0x40
	0x01E64484 RET
	0x01E64488 BL 0x1C16F20

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0x2576000
	009 Move X23, 0x2299000
	010 Move W8, [X20+205]
	011 Move X23, [X23+3152]
	012 Move X21, X2
	013 Move W22, W1
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {33}
	019 Move X0, 0x2299000
	020 Move X0, [X0+3016]
	021 Call 0x1C17CF4
	022 Move X0, 0x2291000
	023 Move X0, [X0+1976]
	024 Call 0x1C17CF4
	025 Move X0, 0x2299000
	026 Move X0, [X0+3160]
	027 Call 0x1C17CF4
	028 Move X0, 0x2299000
	029 Move X0, [X0+3152]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X20+205], W8
	033 Move X0, [X23]
	034 Call 0x1C17F10
	035 Move X1, X31
	036 Move X20, X0
	037 Call Object..ctor, X0
	038 Compare X19, 0
	039 JumpIfEqual {44}
	040 Move X0, X19
	041 Move X1, X31
	042 Call LoadBalancingClient.get_State, X0
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Move X19, 0x2291000
	045 Move X19, [X19+1976]
	046 Move X0, [X19]
	047 Move W8, [X0+224]
	048 Compare W8, 0
	049 JumpIfNotEqual {51}
	050 Call 0x1C17DFC
	051 Move X20, 0x2575000
	052 Move W8, [X20+3869]
	053 Compare W8, 0
	054 JumpIfNotEqual {60}
	055 Move X0, 0x2291000
	056 Move X0, [X0+1976]
	057 Call 0x1C17CF4
	058 Move W8, 1
	059 Move [X20+3869], W8
	060 Move X0, [X19]
	061 Move W8, [X0+224]
	062 Compare W8, 0
	063 JumpIfNotEqual {66}
	064 Call 0x1C17DFC
	065 Move X0, [X19]
	066 Move X8, [X0+184]
	067 Move X20, [X31+48]
	068 Move X19, [X31+56]
	069 Move X22, [X31+32]
	070 Move X21, [X31+40]
	071 Move X24, [X31+16]
	072 Move X23, [X31+24]
	073 Move X0, [X8+48]
	074 Move X30, [X31+64]
	075 Return X0
	076 And W2, W22, 1
	077 Move W1, 1
	078 Move X0, X19
	079 Move X3, X21
	080 Call LoadBalancingClientAsyncExtensions.CreateOpHandler, X0, X1, X2, X3
	081 Compare X20, 0
	082 JumpIfEqual {140}
	083 Move [X20+16], X0
	084 Compare X0, 0
	085 JumpIfEqual {140}
	086 Move X23, [X0+16]
	087 Compare X23, 0
	088 JumpIfEqual {140}
	089 Move X24, 0x2299000
	090 Move X21, [X23+40]
	091 Move X24, [X24+3016]
	092 Move X0, [X24]
	093 Call 0x1C17F10
	094 Move X8, 0x2299000
	095 Move X8, [X8+3160]
	096 Move X1, X20
	097 Move X3, X31
	098 Move X22, X0
	099 Move X2, [X8]
	100 Call Action`1<Int32Enum>..ctor, X0, X1, X2
	101 Move X0, X21
	102 Move X1, X22
	103 Move X2, X31
	104 Call Delegate.Combine, X0, X1
	105 Compare X0, 0
	106 JumpIfEqual {123}
	107 Move X22, [X24]
	108 Move X21, X0
	109 Move X1, X22
	110 Call 0x1C17E00
	111 Compare X0, 0
	112 JumpIfEqual {120}
	113 Move [X23+40], X0
	114 Move X22, [X24]
	115 Move X0, X21
	116 Move X1, X22
	117 Call 0x1C17E00
	118 Compare X0, 0
	119 JumpIfNotEqual {124}
	120 Move X0, X21
	121 Move X1, X22
	122 Call 0x1C181E0
	123 Move [X23+40], X31
	124 Move W1, 17
	125 Move X0, X19
	126 Move X2, X31
	127 Call LoadBalancingClient.Disconnect, X0, X1
	128 Move X0, [X20+16]
	129 Compare X0, 0
	130 JumpIfEqual {140}
	131 Move X20, [X31+48]
	132 Move X19, [X31+56]
	133 Move X22, [X31+32]
	134 Move X21, [X31+40]
	135 Move X24, [X31+16]
	136 Move X23, [X31+24]
	137 Move X30, [X31+64]
	138 Call OperationHandler.get_Task, X0
	139 Return X0
	140 Call 0x1C17F20

Method: System.Threading.Tasks.Task`1<System.Int16> CreateRoomAsync(Fusion.Photon.Realtime.LoadBalancingClient client, Fusion.Photon.Realtime.EnterRoomParams enterRoomParams, System.Boolean throwOnError = True, System.Boolean createServiceTask = True, System.Threading.CancellationToken externalCancellationToken = null)

Disassembly:
	0x01E64494 STP X20, X19, [X31 + 0x20]
	0x01E64498 ADRP X19, 0x2575000
	0x01E6449C ADRP X21, 0x2298000
	0x01E644A0 LDRB W8, [X19 + 0xDF]
	0x01E644A4 LDR X21, [X21 + 0xD18]
	0x01E644A8 MOV X20, X0
	0x01E644AC TBNZ X8, 0x0, 0x1E644D0
	0x01E644B0 ADRP X0, 0x2298000
	0x01E644B4 LDR X0, [X0 + 0xD18]
	0x01E644B8 BL 0x1C16CF4
	0x01E644BC ADRP X0, 0x2298000
	0x01E644C0 LDR X0, [X0 + 0xD20]
	0x01E644C4 BL 0x1C16CF4
	0x01E644C8 MOVZ W8, 0x1
	0x01E644CC STRB W8, [X19 + 0xDF]
	0x01E644D0 LDR X8, [X21]
	0x01E644D4 LDR X8, [X8 + 0xB8]
	0x01E644D8 LDR X9, [X8 + 0x8]
	0x01E644DC CBZ X9, 0x1E6454C
	0x01E644E0 LDR X19, [X8]
	0x01E644E4 STRB W31, [X31 + 0xC]
	0x01E644E8 ADD X1, X31, 0xC
	0x01E644EC MOV X0, X19
	0x01E644F0 MOV X2, X31
	0x01E644F4 BL 0x33DE64C
	0x01E644F8 LDR X8, [X21]
	0x01E644FC LDR X8, [X8 + 0xB8]
	0x01E64500 LDR X21, [X8 + 0x8]
	0x01E64504 CBZ X20, 0x1E6455C
	0x01E64508 LDR X8, [X20]
	0x01E6450C LDP X9, X1, [X8 + 0x168]
	0x01E64510 MOV X0, X20
	0x01E64514 BLR X9
	0x01E64518 MOV X1, X0
	0x01E6451C CBZ X21, 0x1E6456C
	0x01E64520 LDR X0, [X21 + 0x40]
	0x01E64524 LDR X8, [X21 + 0x18]
	0x01E64528 LDR X2, [X21 + 0x28]
	0x01E6452C BLR X8
	0x01E64530 MOV X20, X31
	0x01E64534 LDRB W8, [X31 + 0xC]
	0x01E64538 CBZ W8, 0x1E64548
	0x01E6453C MOV X0, X19
	0x01E64540 MOV X1, X31
	0x01E64544 BL 0x33E14E4
	0x01E64548 CBNZ X20, 0x1E64570
	0x01E6454C LDP X20, X19, [X31 + 0x20]
	0x01E64550 LDP X30, X21, [X31 + 0x10]
	0x01E64554 ADD X31, X31, 0x30
	0x01E64558 RET
	0x01E6455C ADRP X8, 0x2298000
	0x01E64560 LDR X8, [X8 + 0xD20]
	0x01E64564 LDR X1, [X8]
	0x01E64568 CBNZ X21, 0x1E64520
	0x01E6456C BL 0x1C16F20
	0x01E64570 MOV X0, X20
	0x01E64574 BL 0x1C16F18
	0x01E64578 B 0x1E64580
	0x01E6457C B 0x1E64580
	0x01E64580 MOV X21, X0
	0x01E64584 CMP W1, 0x1
	0x01E64588 B.NE 0x1E645A0
	0x01E6458C MOV X0, X21
	0x01E64590 BL 0x3EB1AD0
	0x01E64594 LDR X20, [X0]
	0x01E64598 BL 0x3EB1AE0
	0x01E6459C B 0x1E64534
	0x01E645A0 MOV X20, X31

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0x2576000
	009 Move W8, [X24+206]
	010 Move X19, X4
	011 Move W20, W3
	012 Move W21, W2
	013 Move X23, X1
	014 Move X22, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {33}
	019 Move X0, 0x2299000
	020 Move X0, [X0+3024]
	021 Call 0x1C17CF4
	022 Move X0, 0x2299000
	023 Move X0, [X0+3168]
	024 Call 0x1C17CF4
	025 Move X0, 0x2291000
	026 Move X0, [X0+1976]
	027 Call 0x1C17CF4
	028 Move X0, 0x2299000
	029 Move X0, [X0+3176]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X24+206], W8
	033 Compare X22, 0
	034 JumpIfEqual {88}
	035 Move X0, X22
	036 Move X1, X23
	037 Move X2, X31
	038 Call LoadBalancingClient.OpCreateRoom, X0, X1
	039 Move TEMP, X0
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfNotEqual {59}
	043 And W1, W21, 1
	044 And W2, W20, 1
	045 Move X0, X22
	046 Move X3, X19
	047 Call LoadBalancingClientAsyncExtensions.CreateOpHandler, X0, X1, X2, X3
	048 Compare X0, 0
	049 JumpIfEqual {88}
	050 Move X20, [X31+48]
	051 Move X19, [X31+56]
	052 Move X22, [X31+32]
	053 Move X21, [X31+40]
	054 Move X24, [X31+16]
	055 Move X23, [X31+24]
	056 Move X30, [X31+64]
	057 Call OperationHandler.get_Task, X0
	058 Return X0
	059 Move X8, 0x2299000
	060 Move X8, [X8+3024]
	061 Move X0, [X8]
	062 Call 0x1C17F10
	063 Move X8, 0x2299000
	064 Move X8, [X8+3176]
	065 Move X19, X0
	066 Move X1, [X8]
	067 Call OperationStartException..ctor, X0, X1
	068 Move X8, 0x2291000
	069 Move X8, [X8+1976]
	070 Move X0, [X8]
	071 Move W8, [X0+224]
	072 Compare W8, 0
	073 JumpIfNotEqual {75}
	074 Call 0x1C17DFC
	075 Move X8, 0x2299000
	076 Move X8, [X8+3168]
	077 Move X0, X19
	078 Move X20, [X31+48]
	079 Move X19, [X31+56]
	080 Move X22, [X31+32]
	081 Move X21, [X31+40]
	082 Move X1, [X8]
	083 Move X24, [X31+16]
	084 Move X23, [X31+24]
	085 Move X30, [X31+64]
	086 Call 0x229AD4C, X0
	087 Return X0
	088 Call 0x1C17F20

Method: System.Threading.Tasks.Task`1<System.Int16> CreateOrJoinRoomAsync(Fusion.Photon.Realtime.LoadBalancingClient client, Fusion.Photon.Realtime.EnterRoomParams enterRoomParams, System.Boolean throwOnError = True, System.Boolean createServiceTask = True, System.Threading.CancellationToken externalCancellationToken = null)

Disassembly:
	0x01E645A4 B 0x1E645AC
	0x01E645A8 MOV X21, X0
	0x01E645AC LDRB W8, [X31 + 0xC]
	0x01E645B0 CBZ W8, 0x1E645C0
	0x01E645B4 MOV X0, X19
	0x01E645B8 MOV X1, X31
	0x01E645BC BL 0x33E14E4
	0x01E645C0 CBNZ X20, 0x1E645CC
	0x01E645C4 MOV X0, X21
	0x01E645C8 BL 0x1D2C690
	0x01E645CC MOV X0, X20
	0x01E645D0 BL 0x1C16F18
	0x01E645D4 BL 0x1990590
	0x01E645D8 STP X30, X25, [X31 - 0x40]!
	0x01E645DC STP X24, X23, [X31 + 0x10]
	0x01E645E0 STP X22, X21, [X31 + 0x20]
	0x01E645E4 STP X20, X19, [X31 + 0x30]
	0x01E645E8 ADRP X23, 0x2575000
	0x01E645EC ADRP X25, 0x2295000
	0x01E645F0 ADRP X24, 0x2298000
	0x01E645F4 LDRB W8, [X23 + 0xDC]
	0x01E645F8 LDR X25, [X25 + 0xCC0]
	0x01E645FC LDR X24, [X24 + 0xD18]
	0x01E64600 MOV X19, X3
	0x01E64604 MOV X20, X2
	0x01E64608 MOV X21, X1
	0x01E6460C MOV X22, X0
	0x01E64610 TBNZ X8, 0x0, 0x1E64634
	0x01E64614 ADRP X0, 0x2298000
	0x01E64618 LDR X0, [X0 + 0xD18]
	0x01E6461C BL 0x1C16CF4
	0x01E64620 ADRP X0, 0x2295000
	0x01E64624 LDR X0, [X0 + 0xCC0]
	0x01E64628 BL 0x1C16CF4
	0x01E6462C MOVZ W8, 0x1
	0x01E64630 STRB W8, [X23 + 0xDC]
	0x01E64634 LDR X0, [X25]
	0x01E64638 BL 0x1C16F10
	0x01E6463C MOV X1, X31
	0x01E64640 MOV X23, X0
	0x01E64644 BL 0x33BDD8C
	0x01E64648 LDR X8, [X24]
	0x01E6464C LDR X8, [X8 + 0xB8]
	0x01E64650 STR X23, [X8]
	0x01E64654 LDR X8, [X24]
	0x01E64658 LDP X24, X23, [X31 + 0x10]
	0x01E6465C LDR X8, [X8 + 0xB8]
	0x01E64660 STP X22, X21, [X8 + 0x8]
	0x01E64664 STP X20, X19, [X8 + 0x18]
	0x01E64668 LDP X20, X19, [X31 + 0x30]
	0x01E6466C LDP X22, X21, [X31 + 0x20]
	0x01E64670 LDP X30, X25, [X31], #0x40
	0x01E64674 RET
	0x01E64678 STR X30, [X31 - 0x40]!
	0x01E6467C STP X24, X23, [X31 + 0x10]
	0x01E64680 STP X22, X21, [X31 + 0x20]
	0x01E64684 STP X20, X19, [X31 + 0x30]
	0x01E64688 ADRP X19, 0x2575000
	0x01E6468C ADRP X24, 0x2298000
	0x01E64690 LDRB W8, [X19 + 0xDD]
	0x01E64694 LDR X24, [X24 + 0xD28]
	0x01E64698 TBNZ X8, 0x0, 0x1E646F8
	0x01E6469C ADRP X0, 0x2290000
	0x01E646A0 LDR X0, [X0 + 0xE68]
	0x01E646A4 BL 0x1C16CF4
	0x01E646A8 ADRP X0, 0x2292000
	0x01E646AC LDR X0, [X0 + 0x2C8]
	0x01E646B0 BL 0x1C16CF4

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0x2576000
	009 Move W8, [X24+207]
	010 Move X19, X4
	011 Move W20, W3
	012 Move W21, W2
	013 Move X23, X1
	014 Move X22, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {33}
	019 Move X0, 0x2299000
	020 Move X0, [X0+3024]
	021 Call 0x1C17CF4
	022 Move X0, 0x2299000
	023 Move X0, [X0+3168]
	024 Call 0x1C17CF4
	025 Move X0, 0x2291000
	026 Move X0, [X0+1976]
	027 Call 0x1C17CF4
	028 Move X0, 0x2299000
	029 Move X0, [X0+3176]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X24+207], W8
	033 Compare X22, 0
	034 JumpIfEqual {88}
	035 Move X0, X22
	036 Move X1, X23
	037 Move X2, X31
	038 Call LoadBalancingClient.OpJoinOrCreateRoom, X0, X1
	039 Move TEMP, X0
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfNotEqual {59}
	043 And W1, W21, 1
	044 And W2, W20, 1
	045 Move X0, X22
	046 Move X3, X19
	047 Call LoadBalancingClientAsyncExtensions.CreateOpHandler, X0, X1, X2, X3
	048 Compare X0, 0
	049 JumpIfEqual {88}
	050 Move X20, [X31+48]
	051 Move X19, [X31+56]
	052 Move X22, [X31+32]
	053 Move X21, [X31+40]
	054 Move X24, [X31+16]
	055 Move X23, [X31+24]
	056 Move X30, [X31+64]
	057 Call OperationHandler.get_Task, X0
	058 Return X0
	059 Move X8, 0x2299000
	060 Move X8, [X8+3024]
	061 Move X0, [X8]
	062 Call 0x1C17F10
	063 Move X8, 0x2299000
	064 Move X8, [X8+3176]
	065 Move X19, X0
	066 Move X1, [X8]
	067 Call OperationStartException..ctor, X0, X1
	068 Move X8, 0x2291000
	069 Move X8, [X8+1976]
	070 Move X0, [X8]
	071 Move W8, [X0+224]
	072 Compare W8, 0
	073 JumpIfNotEqual {75}
	074 Call 0x1C17DFC
	075 Move X8, 0x2299000
	076 Move X8, [X8+3168]
	077 Move X0, X19
	078 Move X20, [X31+48]
	079 Move X19, [X31+56]
	080 Move X22, [X31+32]
	081 Move X21, [X31+40]
	082 Move X1, [X8]
	083 Move X24, [X31+16]
	084 Move X23, [X31+24]
	085 Move X30, [X31+64]
	086 Call 0x229AD4C, X0
	087 Return X0
	088 Call 0x1C17F20

Method: System.Threading.Tasks.Task`1<System.Int16> JoinRoomAsync(Fusion.Photon.Realtime.LoadBalancingClient client, Fusion.Photon.Realtime.EnterRoomParams enterRoomParams, System.Boolean throwOnError = True, System.Boolean createServiceTask = True, System.Threading.CancellationToken externalCancellationToken = null)

Disassembly:
	0x01E646B4 ADRP X0, 0x2298000
	0x01E646B8 LDR X0, [X0 + 0xD30]
	0x01E646BC BL 0x1C16CF4
	0x01E646C0 ADRP X0, 0x2298000
	0x01E646C4 LDR X0, [X0 + 0xD38]
	0x01E646C8 BL 0x1C16CF4
	0x01E646CC ADRP X0, 0x2298000
	0x01E646D0 LDR X0, [X0 + 0xD40]
	0x01E646D4 BL 0x1C16CF4
	0x01E646D8 ADRP X0, 0x2298000
	0x01E646DC LDR X0, [X0 + 0xD48]
	0x01E646E0 BL 0x1C16CF4
	0x01E646E4 ADRP X0, 0x2298000
	0x01E646E8 LDR X0, [X0 + 0xD28]
	0x01E646EC BL 0x1C16CF4
	0x01E646F0 MOVZ W8, 0x1
	0x01E646F4 STRB W8, [X19 + 0xDD]
	0x01E646F8 LDR X0, [X24]
	0x01E646FC LDR W8, [X0 + 0xE0]
	0x01E64700 CBNZ W8, 0x1E6470C
	0x01E64704 BL 0x1C16DFC
	0x01E64708 LDR X0, [X24]
	0x01E6470C LDR X8, [X0 + 0xB8]
	0x01E64710 LDR X19, [X8 + 0x8]
	0x01E64714 CBNZ X19, 0x1E64768
	0x01E64718 LDR W8, [X0 + 0xE0]
	0x01E6471C CBNZ W8, 0x1E64728
	0x01E64720 BL 0x1C16DFC
	0x01E64724 LDR X0, [X24]
	0x01E64728 ADRP X9, 0x2290000
	0x01E6472C LDR X8, [X0 + 0xB8]
	0x01E64730 LDR X9, [X9 + 0xE68]
	0x01E64734 LDR X20, [X8]
	0x01E64738 LDR X0, [X9]
	0x01E6473C BL 0x1C16F10
	0x01E64740 ADRP X8, 0x2298000
	0x01E64744 LDR X8, [X8 + 0xD30]
	0x01E64748 MOV X1, X20
	0x01E6474C MOV X3, X31
	0x01E64750 MOV X19, X0
	0x01E64754 LDR X2, [X8]
	0x01E64758 BL 0x2A6B948
	0x01E6475C LDR X0, [X24]
	0x01E64760 LDR X8, [X0 + 0xB8]
	0x01E64764 STR X19, [X8 + 0x8]
	0x01E64768 LDR W8, [X0 + 0xE0]
	0x01E6476C CBNZ W8, 0x1E64778
	0x01E64770 BL 0x1C16DFC
	0x01E64774 LDR X0, [X24]
	0x01E64778 LDR X8, [X0 + 0xB8]
	0x01E6477C LDR X20, [X8 + 0x10]
	0x01E64780 CBNZ X20, 0x1E647D4
	0x01E64784 LDR W8, [X0 + 0xE0]
	0x01E64788 CBNZ W8, 0x1E64794
	0x01E6478C BL 0x1C16DFC
	0x01E64790 LDR X0, [X24]
	0x01E64794 ADRP X9, 0x2290000
	0x01E64798 LDR X8, [X0 + 0xB8]
	0x01E6479C LDR X9, [X9 + 0xE68]
	0x01E647A0 LDR X21, [X8]
	0x01E647A4 LDR X0, [X9]
	0x01E647A8 BL 0x1C16F10
	0x01E647AC ADRP X8, 0x2298000
	0x01E647B0 LDR X8, [X8 + 0xD38]
	0x01E647B4 MOV X1, X21
	0x01E647B8 MOV X3, X31
	0x01E647BC MOV X20, X0
	0x01E647C0 LDR X2, [X8]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0x2576000
	009 Move W8, [X24+208]
	010 Move X19, X4
	011 Move W20, W3
	012 Move W21, W2
	013 Move X23, X1
	014 Move X22, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {33}
	019 Move X0, 0x2299000
	020 Move X0, [X0+3024]
	021 Call 0x1C17CF4
	022 Move X0, 0x2299000
	023 Move X0, [X0+3168]
	024 Call 0x1C17CF4
	025 Move X0, 0x2291000
	026 Move X0, [X0+1976]
	027 Call 0x1C17CF4
	028 Move X0, 0x2299000
	029 Move X0, [X0+3184]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X24+208], W8
	033 Compare X22, 0
	034 JumpIfEqual {88}
	035 Move X0, X22
	036 Move X1, X23
	037 Move X2, X31
	038 Call LoadBalancingClient.OpJoinRoom, X0, X1
	039 Move TEMP, X0
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfNotEqual {59}
	043 And W1, W21, 1
	044 And W2, W20, 1
	045 Move X0, X22
	046 Move X3, X19
	047 Call LoadBalancingClientAsyncExtensions.CreateOpHandler, X0, X1, X2, X3
	048 Compare X0, 0
	049 JumpIfEqual {88}
	050 Move X20, [X31+48]
	051 Move X19, [X31+56]
	052 Move X22, [X31+32]
	053 Move X21, [X31+40]
	054 Move X24, [X31+16]
	055 Move X23, [X31+24]
	056 Move X30, [X31+64]
	057 Call OperationHandler.get_Task, X0
	058 Return X0
	059 Move X8, 0x2299000
	060 Move X8, [X8+3024]
	061 Move X0, [X8]
	062 Call 0x1C17F10
	063 Move X8, 0x2299000
	064 Move X8, [X8+3184]
	065 Move X19, X0
	066 Move X1, [X8]
	067 Call OperationStartException..ctor, X0, X1
	068 Move X8, 0x2291000
	069 Move X8, [X8+1976]
	070 Move X0, [X8]
	071 Move W8, [X0+224]
	072 Compare W8, 0
	073 JumpIfNotEqual {75}
	074 Call 0x1C17DFC
	075 Move X8, 0x2299000
	076 Move X8, [X8+3168]
	077 Move X0, X19
	078 Move X20, [X31+48]
	079 Move X19, [X31+56]
	080 Move X22, [X31+32]
	081 Move X21, [X31+40]
	082 Move X1, [X8]
	083 Move X24, [X31+16]
	084 Move X23, [X31+24]
	085 Move X30, [X31+64]
	086 Call 0x229AD4C, X0
	087 Return X0
	088 Call 0x1C17F20

Method: System.Threading.Tasks.Task`1<System.Int16> JoinRandomOrCreateRoomAsync(Fusion.Photon.Realtime.LoadBalancingClient client, Fusion.Photon.Realtime.OpJoinRandomRoomParams joinRandomRoomParams, Fusion.Photon.Realtime.EnterRoomParams enterRoomParams, System.Boolean throwOnError = True, System.Boolean createServiceTask = True, System.Threading.CancellationToken externalCancellationToken = null)

Disassembly:
	0x01E647C4 BL 0x2A6B948
	0x01E647C8 LDR X0, [X24]
	0x01E647CC LDR X8, [X0 + 0xB8]
	0x01E647D0 STR X20, [X8 + 0x10]
	0x01E647D4 LDR W8, [X0 + 0xE0]
	0x01E647D8 CBNZ W8, 0x1E647E4
	0x01E647DC BL 0x1C16DFC
	0x01E647E0 LDR X0, [X24]
	0x01E647E4 LDR X8, [X0 + 0xB8]
	0x01E647E8 LDR X21, [X8 + 0x18]
	0x01E647EC CBNZ X21, 0x1E64840
	0x01E647F0 LDR W8, [X0 + 0xE0]
	0x01E647F4 CBNZ W8, 0x1E64800
	0x01E647F8 BL 0x1C16DFC
	0x01E647FC LDR X0, [X24]
	0x01E64800 ADRP X9, 0x2290000
	0x01E64804 LDR X8, [X0 + 0xB8]
	0x01E64808 LDR X9, [X9 + 0xE68]
	0x01E6480C LDR X22, [X8]
	0x01E64810 LDR X0, [X9]
	0x01E64814 BL 0x1C16F10
	0x01E64818 ADRP X8, 0x2298000
	0x01E6481C LDR X8, [X8 + 0xD40]
	0x01E64820 MOV X1, X22
	0x01E64824 MOV X3, X31
	0x01E64828 MOV X21, X0
	0x01E6482C LDR X2, [X8]
	0x01E64830 BL 0x2A6B948
	0x01E64834 LDR X0, [X24]
	0x01E64838 LDR X8, [X0 + 0xB8]
	0x01E6483C STR X21, [X8 + 0x18]
	0x01E64840 LDR W8, [X0 + 0xE0]
	0x01E64844 CBNZ W8, 0x1E64850
	0x01E64848 BL 0x1C16DFC
	0x01E6484C LDR X0, [X24]
	0x01E64850 LDR X8, [X0 + 0xB8]
	0x01E64854 LDR X22, [X8 + 0x20]
	0x01E64858 CBNZ X22, 0x1E648AC
	0x01E6485C LDR W8, [X0 + 0xE0]
	0x01E64860 CBNZ W8, 0x1E6486C
	0x01E64864 BL 0x1C16DFC
	0x01E64868 LDR X0, [X24]
	0x01E6486C ADRP X9, 0x2292000
	0x01E64870 LDR X8, [X0 + 0xB8]
	0x01E64874 LDR X9, [X9 + 0x2C8]
	0x01E64878 LDR X23, [X8]
	0x01E6487C LDR X0, [X9]
	0x01E64880 BL 0x1C16F10
	0x01E64884 ADRP X8, 0x2298000
	0x01E64888 LDR X8, [X8 + 0xD48]
	0x01E6488C MOV X1, X23
	0x01E64890 MOV X3, X31
	0x01E64894 MOV X22, X0
	0x01E64898 LDR X2, [X8]
	0x01E6489C BL 0x2A6B948
	0x01E648A0 LDR X8, [X24]
	0x01E648A4 LDR X8, [X8 + 0xB8]
	0x01E648A8 STR X22, [X8 + 0x20]
	0x01E648AC MOV X0, X19
	0x01E648B0 MOV X1, X20
	0x01E648B4 MOV X2, X21
	0x01E648B8 MOV X3, X22
	0x01E648BC LDP X20, X19, [X31 + 0x30]
	0x01E648C0 LDP X22, X21, [X31 + 0x20]
	0x01E648C4 LDP X24, X23, [X31 + 0x10]
	0x01E648C8 LDR X30, [X31], #0x40
	0x01E648CC B 0x1E645D8
	0x01E648D0 STR X30, [X31 - 0x40]!
	0x01E648D4 STP X24, X23, [X31 + 0x10]
	0x01E648D8 STP X22, X21, [X31 + 0x20]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X25, 0x2576000
	010 Move W8, [X25+209]
	011 Move X19, X5
	012 Move W20, W4
	013 Move W21, W3
	014 Move X23, X2
	015 Move X24, X1
	016 Move X22, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {35}
	021 Move X0, 0x2299000
	022 Move X0, [X0+3024]
	023 Call 0x1C17CF4
	024 Move X0, 0x2299000
	025 Move X0, [X0+3168]
	026 Call 0x1C17CF4
	027 Move X0, 0x2291000
	028 Move X0, [X0+1976]
	029 Call 0x1C17CF4
	030 Move X0, 0x2299000
	031 Move X0, [X0+3192]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X25+209], W8
	035 Compare X22, 0
	036 JumpIfEqual {93}
	037 Move X0, X22
	038 Move X1, X24
	039 Move X2, X23
	040 Move X3, X31
	041 Call LoadBalancingClient.OpJoinRandomOrCreateRoom, X0, X1, X2
	042 Move TEMP, X0
	043 And TEMP, TEMP, 1
	044 Compare TEMP, 1
	045 JumpIfNotEqual {63}
	046 And W1, W21, 1
	047 And W2, W20, 1
	048 Move X0, X22
	049 Move X3, X19
	050 Call LoadBalancingClientAsyncExtensions.CreateOpHandler, X0, X1, X2, X3
	051 Compare X0, 0
	052 JumpIfEqual {93}
	053 Move X20, [X31+48]
	054 Move X19, [X31+56]
	055 Move X22, [X31+32]
	056 Move X21, [X31+40]
	057 Move X24, [X31+16]
	058 Move X23, [X31+24]
	059 Move X30, [X31+64]
	060 Move X25, [X31+72]
	061 Call OperationHandler.get_Task, X0
	062 Return X0
	063 Move X8, 0x2299000
	064 Move X8, [X8+3024]
	065 Move X0, [X8]
	066 Call 0x1C17F10
	067 Move X8, 0x2299000
	068 Move X8, [X8+3192]
	069 Move X19, X0
	070 Move X1, [X8]
	071 Call OperationStartException..ctor, X0, X1
	072 Move X8, 0x2291000
	073 Move X8, [X8+1976]
	074 Move X0, [X8]
	075 Move W8, [X0+224]
	076 Compare W8, 0
	077 JumpIfNotEqual {79}
	078 Call 0x1C17DFC
	079 Move X8, 0x2299000
	080 Move X8, [X8+3168]
	081 Move X0, X19
	082 Move X20, [X31+48]
	083 Move X19, [X31+56]
	084 Move X22, [X31+32]
	085 Move X21, [X31+40]
	086 Move X1, [X8]
	087 Move X24, [X31+16]
	088 Move X23, [X31+24]
	089 Move X30, [X31+64]
	090 Move X25, [X31+72]
	091 Call 0x229AD4C, X0
	092 Return X0
	093 Call 0x1C17F20

Method: System.Threading.Tasks.Task`1<System.Int16> JoinRandomRoomAsync(Fusion.Photon.Realtime.LoadBalancingClient client, Fusion.Photon.Realtime.OpJoinRandomRoomParams joinRandomRoomParams, System.Boolean throwOnError = True, System.Boolean createServiceTask = True, System.Threading.CancellationToken externalCancellationToken = null)

Disassembly:
	0x01E648DC STP X20, X19, [X31 + 0x30]
	0x01E648E0 ADRP X19, 0x2575000
	0x01E648E4 ADRP X24, 0x2298000
	0x01E648E8 LDRB W8, [X19 + 0xDE]
	0x01E648EC LDR X24, [X24 + 0xD28]
	0x01E648F0 TBNZ X8, 0x0, 0x1E64950
	0x01E648F4 ADRP X0, 0x2290000
	0x01E648F8 LDR X0, [X0 + 0xE68]
	0x01E648FC BL 0x1C16CF4
	0x01E64900 ADRP X0, 0x2292000
	0x01E64904 LDR X0, [X0 + 0x2C8]
	0x01E64908 BL 0x1C16CF4
	0x01E6490C ADRP X0, 0x2298000
	0x01E64910 LDR X0, [X0 + 0xD50]
	0x01E64914 BL 0x1C16CF4
	0x01E64918 ADRP X0, 0x2298000
	0x01E6491C LDR X0, [X0 + 0xD58]
	0x01E64920 BL 0x1C16CF4
	0x01E64924 ADRP X0, 0x2298000
	0x01E64928 LDR X0, [X0 + 0xD60]
	0x01E6492C BL 0x1C16CF4
	0x01E64930 ADRP X0, 0x2298000
	0x01E64934 LDR X0, [X0 + 0xD68]
	0x01E64938 BL 0x1C16CF4
	0x01E6493C ADRP X0, 0x2298000
	0x01E64940 LDR X0, [X0 + 0xD28]
	0x01E64944 BL 0x1C16CF4
	0x01E64948 MOVZ W8, 0x1
	0x01E6494C STRB W8, [X19 + 0xDE]
	0x01E64950 LDR X0, [X24]
	0x01E64954 LDR W8, [X0 + 0xE0]
	0x01E64958 CBNZ W8, 0x1E64964
	0x01E6495C BL 0x1C16DFC
	0x01E64960 LDR X0, [X24]
	0x01E64964 LDR X8, [X0 + 0xB8]
	0x01E64968 LDR X19, [X8 + 0x28]
	0x01E6496C CBNZ X19, 0x1E649C0
	0x01E64970 LDR W8, [X0 + 0xE0]
	0x01E64974 CBNZ W8, 0x1E64980
	0x01E64978 BL 0x1C16DFC
	0x01E6497C LDR X0, [X24]
	0x01E64980 ADRP X9, 0x2290000
	0x01E64984 LDR X8, [X0 + 0xB8]
	0x01E64988 LDR X9, [X9 + 0xE68]
	0x01E6498C LDR X20, [X8]
	0x01E64990 LDR X0, [X9]
	0x01E64994 BL 0x1C16F10
	0x01E64998 ADRP X8, 0x2298000
	0x01E6499C LDR X8, [X8 + 0xD50]
	0x01E649A0 MOV X1, X20
	0x01E649A4 MOV X3, X31
	0x01E649A8 MOV X19, X0
	0x01E649AC LDR X2, [X8]
	0x01E649B0 BL 0x2A6B948
	0x01E649B4 LDR X0, [X24]
	0x01E649B8 LDR X8, [X0 + 0xB8]
	0x01E649BC STR X19, [X8 + 0x28]
	0x01E649C0 LDR W8, [X0 + 0xE0]
	0x01E649C4 CBNZ W8, 0x1E649D0
	0x01E649C8 BL 0x1C16DFC
	0x01E649CC LDR X0, [X24]
	0x01E649D0 LDR X8, [X0 + 0xB8]
	0x01E649D4 LDR X20, [X8 + 0x30]
	0x01E649D8 CBNZ X20, 0x1E64A2C
	0x01E649DC LDR W8, [X0 + 0xE0]
	0x01E649E0 CBNZ W8, 0x1E649EC
	0x01E649E4 BL 0x1C16DFC
	0x01E649E8 LDR X0, [X24]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0x2576000
	009 Move W8, [X24+210]
	010 Move X19, X4
	011 Move W20, W3
	012 Move W21, W2
	013 Move X23, X1
	014 Move X22, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {33}
	019 Move X0, 0x2299000
	020 Move X0, [X0+3024]
	021 Call 0x1C17CF4
	022 Move X0, 0x2299000
	023 Move X0, [X0+3168]
	024 Call 0x1C17CF4
	025 Move X0, 0x2291000
	026 Move X0, [X0+1976]
	027 Call 0x1C17CF4
	028 Move X0, 0x2299000
	029 Move X0, [X0+3200]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X24+210], W8
	033 Compare X22, 0
	034 JumpIfEqual {88}
	035 Move X0, X22
	036 Move X1, X23
	037 Move X2, X31
	038 Call LoadBalancingClient.OpJoinRandomRoom, X0, X1
	039 Move TEMP, X0
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfNotEqual {59}
	043 And W1, W21, 1
	044 And W2, W20, 1
	045 Move X0, X22
	046 Move X3, X19
	047 Call LoadBalancingClientAsyncExtensions.CreateOpHandler, X0, X1, X2, X3
	048 Compare X0, 0
	049 JumpIfEqual {88}
	050 Move X20, [X31+48]
	051 Move X19, [X31+56]
	052 Move X22, [X31+32]
	053 Move X21, [X31+40]
	054 Move X24, [X31+16]
	055 Move X23, [X31+24]
	056 Move X30, [X31+64]
	057 Call OperationHandler.get_Task, X0
	058 Return X0
	059 Move X8, 0x2299000
	060 Move X8, [X8+3024]
	061 Move X0, [X8]
	062 Call 0x1C17F10
	063 Move X8, 0x2299000
	064 Move X8, [X8+3200]
	065 Move X19, X0
	066 Move X1, [X8]
	067 Call OperationStartException..ctor, X0, X1
	068 Move X8, 0x2291000
	069 Move X8, [X8+1976]
	070 Move X0, [X8]
	071 Move W8, [X0+224]
	072 Compare W8, 0
	073 JumpIfNotEqual {75}
	074 Call 0x1C17DFC
	075 Move X8, 0x2299000
	076 Move X8, [X8+3168]
	077 Move X0, X19
	078 Move X20, [X31+48]
	079 Move X19, [X31+56]
	080 Move X22, [X31+32]
	081 Move X21, [X31+40]
	082 Move X1, [X8]
	083 Move X24, [X31+16]
	084 Move X23, [X31+24]
	085 Move X30, [X31+64]
	086 Call 0x229AD4C, X0
	087 Return X0
	088 Call 0x1C17F20

Method: System.Threading.Tasks.Task`1<System.Int16> JoinLobbyAsync(Fusion.Photon.Realtime.LoadBalancingClient client, Fusion.Photon.Realtime.TypedLobby lobby, System.Boolean throwOnError = True, System.Boolean createServiceTask = True, System.Threading.CancellationToken externalCancelationToken = null)

Disassembly:
	0x01E649EC ADRP X9, 0x2290000
	0x01E649F0 LDR X8, [X0 + 0xB8]
	0x01E649F4 LDR X9, [X9 + 0xE68]
	0x01E649F8 LDR X21, [X8]
	0x01E649FC LDR X0, [X9]
	0x01E64A00 BL 0x1C16F10
	0x01E64A04 ADRP X8, 0x2298000
	0x01E64A08 LDR X8, [X8 + 0xD58]
	0x01E64A0C MOV X1, X21
	0x01E64A10 MOV X3, X31
	0x01E64A14 MOV X20, X0
	0x01E64A18 LDR X2, [X8]
	0x01E64A1C BL 0x2A6B948
	0x01E64A20 LDR X0, [X24]
	0x01E64A24 LDR X8, [X0 + 0xB8]
	0x01E64A28 STR X20, [X8 + 0x30]
	0x01E64A2C LDR W8, [X0 + 0xE0]
	0x01E64A30 CBNZ W8, 0x1E64A3C
	0x01E64A34 BL 0x1C16DFC
	0x01E64A38 LDR X0, [X24]
	0x01E64A3C LDR X8, [X0 + 0xB8]
	0x01E64A40 LDR X21, [X8 + 0x38]
	0x01E64A44 CBNZ X21, 0x1E64A98
	0x01E64A48 LDR W8, [X0 + 0xE0]
	0x01E64A4C CBNZ W8, 0x1E64A58
	0x01E64A50 BL 0x1C16DFC
	0x01E64A54 LDR X0, [X24]
	0x01E64A58 ADRP X9, 0x2290000
	0x01E64A5C LDR X8, [X0 + 0xB8]
	0x01E64A60 LDR X9, [X9 + 0xE68]
	0x01E64A64 LDR X22, [X8]
	0x01E64A68 LDR X0, [X9]
	0x01E64A6C BL 0x1C16F10
	0x01E64A70 ADRP X8, 0x2298000
	0x01E64A74 LDR X8, [X8 + 0xD60]
	0x01E64A78 MOV X1, X22
	0x01E64A7C MOV X3, X31
	0x01E64A80 MOV X21, X0
	0x01E64A84 LDR X2, [X8]
	0x01E64A88 BL 0x2A6B948
	0x01E64A8C LDR X0, [X24]
	0x01E64A90 LDR X8, [X0 + 0xB8]
	0x01E64A94 STR X21, [X8 + 0x38]
	0x01E64A98 LDR W8, [X0 + 0xE0]
	0x01E64A9C CBNZ W8, 0x1E64AA8
	0x01E64AA0 BL 0x1C16DFC
	0x01E64AA4 LDR X0, [X24]
	0x01E64AA8 LDR X8, [X0 + 0xB8]
	0x01E64AAC LDR X22, [X8 + 0x40]
	0x01E64AB0 CBNZ X22, 0x1E64B04
	0x01E64AB4 LDR W8, [X0 + 0xE0]
	0x01E64AB8 CBNZ W8, 0x1E64AC4
	0x01E64ABC BL 0x1C16DFC
	0x01E64AC0 LDR X0, [X24]
	0x01E64AC4 ADRP X9, 0x2292000
	0x01E64AC8 LDR X8, [X0 + 0xB8]
	0x01E64ACC LDR X9, [X9 + 0x2C8]
	0x01E64AD0 LDR X23, [X8]
	0x01E64AD4 LDR X0, [X9]
	0x01E64AD8 BL 0x1C16F10
	0x01E64ADC ADRP X8, 0x2298000
	0x01E64AE0 LDR X8, [X8 + 0xD68]
	0x01E64AE4 MOV X1, X23
	0x01E64AE8 MOV X3, X31
	0x01E64AEC MOV X22, X0
	0x01E64AF0 LDR X2, [X8]
	0x01E64AF4 BL 0x2A6B948
	0x01E64AF8 LDR X8, [X24]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0x2576000
	009 Move W8, [X24+211]
	010 Move X19, X4
	011 Move W20, W3
	012 Move W21, W2
	013 Move X23, X1
	014 Move X22, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {33}
	019 Move X0, 0x2299000
	020 Move X0, [X0+3024]
	021 Call 0x1C17CF4
	022 Move X0, 0x2299000
	023 Move X0, [X0+3168]
	024 Call 0x1C17CF4
	025 Move X0, 0x2291000
	026 Move X0, [X0+1976]
	027 Call 0x1C17CF4
	028 Move X0, 0x2299000
	029 Move X0, [X0+3208]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X24+211], W8
	033 Compare X22, 0
	034 JumpIfEqual {88}
	035 Move X0, X22
	036 Move X1, X23
	037 Move X2, X31
	038 Call LoadBalancingClient.OpJoinLobby, X0, X1
	039 Move TEMP, X0
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfNotEqual {59}
	043 And W1, W21, 1
	044 And W2, W20, 1
	045 Move X0, X22
	046 Move X3, X19
	047 Call LoadBalancingClientAsyncExtensions.CreateOpHandler, X0, X1, X2, X3
	048 Compare X0, 0
	049 JumpIfEqual {88}
	050 Move X20, [X31+48]
	051 Move X19, [X31+56]
	052 Move X22, [X31+32]
	053 Move X21, [X31+40]
	054 Move X24, [X31+16]
	055 Move X23, [X31+24]
	056 Move X30, [X31+64]
	057 Call OperationHandler.get_Task, X0
	058 Return X0
	059 Move X8, 0x2299000
	060 Move X8, [X8+3024]
	061 Move X0, [X8]
	062 Call 0x1C17F10
	063 Move X8, 0x2299000
	064 Move X8, [X8+3208]
	065 Move X19, X0
	066 Move X1, [X8]
	067 Call OperationStartException..ctor, X0, X1
	068 Move X8, 0x2291000
	069 Move X8, [X8+1976]
	070 Move X0, [X8]
	071 Move W8, [X0+224]
	072 Compare W8, 0
	073 JumpIfNotEqual {75}
	074 Call 0x1C17DFC
	075 Move X8, 0x2299000
	076 Move X8, [X8+3168]
	077 Move X0, X19
	078 Move X20, [X31+48]
	079 Move X19, [X31+56]
	080 Move X22, [X31+32]
	081 Move X21, [X31+40]
	082 Move X1, [X8]
	083 Move X24, [X31+16]
	084 Move X23, [X31+24]
	085 Move X30, [X31+64]
	086 Call 0x229AD4C, X0
	087 Return X0
	088 Call 0x1C17F20

Method: Fusion.Photon.Realtime.Async.OperationHandler CreateOpHandler(Fusion.Photon.Realtime.LoadBalancingClient client, System.Boolean throwOnErrors = True, System.Boolean createServiceTask = True, System.Threading.CancellationToken externalCancellationToken = null)

Disassembly:
	0x01E63E08 ADRP X0, 0x2299000
	0x01E63E0C LDR X0, [X0 + 0xCD0]
	0x01E63E10 BL 0x1C16CF4
	0x01E63E14 ADRP X0, 0x2299000
	0x01E63E18 LDR X0, [X0 + 0xCC8]
	0x01E63E1C BL 0x1C16CF4
	0x01E63E20 ADRP X0, 0x2299000
	0x01E63E24 LDR X0, [X0 + 0xCD8]
	0x01E63E28 BL 0x1C16CF4
	0x01E63E2C MOVZ W8, 0x1
	0x01E63E30 STRB W8, [X22 + 0xD5]
	0x01E63E34 LDR X0, [X23]
	0x01E63E38 BL 0x1C16F10
	0x01E63E3C MOV X1, X31
	0x01E63E40 MOV X22, X0
	0x01E63E44 BL 0x33BDD8C
	0x01E63E48 CBZ X22, 0x1E63EC8
	0x01E63E4C ADRP X8, 0x2298000
	0x01E63E50 LDR X8, [X8 + 0x7F8]
	0x01E63E54 STP X21, X20, [X22 + 0x10]
	0x01E63E58 STR X19, [X22 + 0x20]
	0x01E63E5C ADRP X19, 0x2299000
	0x01E63E60 LDR X0, [X8]
	0x01E63E64 ADRP X20, 0x2298000
	0x01E63E68 ADRP X21, 0x2299000
	0x01E63E6C LDR X19, [X19 + 0xCD0]
	0x01E63E70 LDR X20, [X20 + 0x7D0]
	0x01E63E74 LDR X21, [X21 + 0xCD8]
	0x01E63E78 BL 0x1C16F10
	0x01E63E7C LDR X2, [X19]
	0x01E63E80 MOV X1, X22
	0x01E63E84 MOV X3, X31
	0x01E63E88 MOV X19, X0
	0x01E63E8C BL 0x2D27AA8
	0x01E63E90 LDR X0, [X20]
	0x01E63E94 LDR X20, [X22 + 0x10]
	0x01E63E98 LDR W8, [X0 + 0xE0]
	0x01E63E9C CBNZ W8, 0x1E63EA4
	0x01E63EA0 BL 0x1C16DFC
	0x01E63EA4 LDR X3, [X21]
	0x01E63EA8 MOV X0, X19
	0x01E63EAC MOV X1, X20
	0x01E63EB0 LDP X20, X19, [X31 + 0x20]
	0x01E63EB4 LDP X22, X21, [X31 + 0x10]
	0x01E63EB8 MOVZ W2, 0xA
	0x01E63EBC MOV X4, X31
	0x01E63EC0 LDP X30, X23, [X31], #0x30
	0x01E63EC4 B 0x1E39CF0
	0x01E63EC8 BL 0x1C16F20
	0x01E63ECC MOV X1, X31
	0x01E63ED0 B 0x33BDD8C
	0x01E63ED4 STR X30, [X31 - 0x20]!
	0x01E63ED8 STP X20, X19, [X31 + 0x10]
	0x01E63EDC ADRP X20, 0x2576000
	0x01E63EE0 LDRB W8, [X20 + 0xD6]
	0x01E63EE4 MOV X19, X0
	0x01E63EE8 TBNZ X8, 0x0, 0x1E63F00
	0x01E63EEC ADRP X0, 0x2291000
	0x01E63EF0 LDR X0, [X0 + 0x7B8]
	0x01E63EF4 BL 0x1C16CF4
	0x01E63EF8 MOVZ W8, 0x1
	0x01E63EFC STRB W8, [X20 + 0xD6]
	0x01E63F00 LDR X0, [X19 + 0x10]
	0x01E63F04 CBZ X0, 0x1E63F74
	0x01E63F08 LDR X1, [X19 + 0x18]
	0x01E63F0C ADRP X19, 0x2291000
	0x01E63F10 LDR X19, [X19 + 0x7B8]
	0x01E63F14 MOV X2, X31
	0x01E63F18 BL 0x1E5531C
	0x01E63F1C LDR X0, [X19]
	0x01E63F20 LDR W8, [X0 + 0xE0]
	0x01E63F24 CBNZ W8, 0x1E63F2C
	0x01E63F28 BL 0x1C16DFC
	0x01E63F2C ADRP X20, 0x2575000
	0x01E63F30 LDRB W8, [X20 + 0xF1D]
	0x01E63F34 CBNZ W8, 0x1E63F4C
	0x01E63F38 ADRP X0, 0x2291000
	0x01E63F3C LDR X0, [X0 + 0x7B8]
	0x01E63F40 BL 0x1C16CF4
	0x01E63F44 MOVZ W8, 0x1
	0x01E63F48 STRB W8, [X20 + 0xF1D]
	0x01E63F4C LDR X0, [X19]
	0x01E63F50 LDR W8, [X0 + 0xE0]
	0x01E63F54 CBNZ W8, 0x1E63F60
	0x01E63F58 BL 0x1C16DFC
	0x01E63F5C LDR X0, [X19]
	0x01E63F60 LDR X8, [X0 + 0xB8]
	0x01E63F64 LDP X20, X19, [X31 + 0x10]
	0x01E63F68 LDR X0, [X8 + 0x30]
	0x01E63F6C LDR X30, [X31], #0x20
	0x01E63F70 RET
	0x01E63F74 BL 0x1C16F20
	0x01E63F78 STP X30, X21, [X31 - 0x20]!
	0x01E63F7C STP X20, X19, [X31 + 0x10]
	0x01E63F80 ADRP X20, 0x2576000
	0x01E63F84 ADRP X21, 0x2298000
	0x01E63F88 LDRB W8, [X20 + 0xD7]
	0x01E63F8C LDR X21, [X21 + 0x7D8]
	0x01E63F90 MOV X19, X0
	0x01E63F94 TBNZ X8, 0x0, 0x1E63FC4
	0x01E63F98 ADRP X0, 0x2298000
	0x01E63F9C LDR X0, [X0 + 0x7D8]
	0x01E63FA0 BL 0x1C16CF4
	0x01E63FA4 ADRP X0, 0x2298000
	0x01E63FA8 LDR X0, [X0 + 0x800]
	0x01E63FAC BL 0x1C16CF4
	0x01E63FB0 ADRP X0, 0x2291000
	0x01E63FB4 LDR X0, [X0 + 0x7B8]
	0x01E63FB8 BL 0x1C16CF4
	0x01E63FBC MOVZ W8, 0x1
	0x01E63FC0 STRB W8, [X20 + 0xD7]
	0x01E63FC4 LDR X0, [X21]
	0x01E63FC8 LDR W8, [X0 + 0xE0]
	0x01E63FCC CBNZ W8, 0x1E63FD4
	0x01E63FD0 BL 0x1C16DFC
	0x01E63FD4 ADD X0, X19, 0x10
	0x01E63FD8 MOV X1, X31
	0x01E63FDC BL 0x33DD2B0
	0x01E63FE0 TBNZ X0, 0x0, 0x1E63FF4
	0x01E63FE4 LDR X0, [X19 + 0x18]
	0x01E63FE8 CBZ X0, 0x1E64040
	0x01E63FEC MOV X1, X31
	0x01E63FF0 BL 0x1E46EFC
	0x01E63FF4 LDR X0, [X19 + 0x18]
	0x01E63FF8 CBZ X0, 0x1E640B0
	0x01E63FFC ADRP X19, 0x2291000
	0x01E64000 ADRP X20, 0x2297000
	0x01E64004 LDR X19, [X19 + 0x7B8]
	0x01E64008 B 0x3EB151C
	0x01E6400C MOV X1, X31

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0x2577000
	009 Move X24, 0x229A000
	010 Move W8, [X20+212]
	011 Move X24, [X24+3088]
	012 Move X21, X3
	013 Move W19, W2
	014 Move W22, W1
	015 Move X23, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {40}
	020 Move X0, 0x2299000
	021 Move X0, [X0+2152]
	022 Call 0x1C17CF4
	023 Move X0, 0x229A000
	024 Move X0, [X0+3096]
	025 Call 0x1C17CF4
	026 Move X0, 0x2299000
	027 Move X0, [X0+2000]
	028 Call 0x1C17CF4
	029 Move X0, 0x229A000
	030 Move X0, [X0+3104]
	031 Call 0x1C17CF4
	032 Move X0, 0x229A000
	033 Move X0, [X0+3112]
	034 Call 0x1C17CF4
	035 Move X0, 0x229A000
	036 Move X0, [X0+3088]
	037 Call 0x1C17CF4
	038 Move W8, 1
	039 Move [X20+212], W8
	040 Move X0, [X24]
	041 Call 0x1C17F10
	042 Move X1, X31
	043 Move X20, X0
	044 Call Object..ctor, X0
	045 Compare X20, 0
	046 JumpIfEqual {151}
	047 Move X8, 0x229A000
	048 Move X8, [X8+3096]
	049 Move [X20+16], X23
	050 Move X0, [X8]
	051 Call 0x1C17F10
	052 And W1, W22, 1
	053 Move X2, X21
	054 Move X23, X0
	055 Call OperationHandler..ctor, X0, X1, X2
	056 Move X0, [X20+16]
	057 Move [X20+24], X23
	058 Compare X0, 0
	059 JumpIfEqual {151}
	060 Move X21, 0x229A000
	061 Move X21, [X21+3104]
	062 Move X1, X23
	063 Move X2, X31
	064 Call LoadBalancingClient.AddCallbackTarget, X0, X1
	065 Move X0, [X21]
	066 Move W1, 1
	067 Call 0x1C17D6C
	068 Move X8, [X20+24]
	069 Compare X8, 0
	070 JumpIfEqual {151}
	071 Move X21, X0
	072 Move X0, X8
	073 Call OperationHandler.get_Task, X0
	074 Compare X21, 0
	075 JumpIfEqual {151}
	076 Move X22, X0
	077 Compare X0, 0
	078 JumpIfEqual {85}
	079 Move X8, [X21]
	080 Move X0, X22
	081 Move X1, [X8+64]
	082 Call 0x1C17E00
	083 Compare X0, 0
	084 JumpIfEqual {153}
	085 Move W8, [X21+24]
	086 Compare W8, 0
	087 JumpIfEqual {152}
	088 Move X8, 0x2299000
	089 Move X8, [X8+2152]
	090 Move [X21+32], X22
	091 Move X22, 0x229A000
	092 Move X0, [X8]
	093 Move X22, [X22+3112]
	094 Call 0x1C17F10
	095 Move X2, [X22]
	096 Move X1, X20
	097 Move X3, X31
	098 Move X22, X0
	099 Call Func`2<CancellationToken, Object>..ctor, X0, X1, X2
	100 Move X8, [X20+24]
	101 Compare X8, 0
	102 JumpIfEqual {151}
	103 Move X0, [X8+56]
	104 Compare X0, 0
	105 JumpIfEqual {151}
	106 Move X23, 0x2299000
	107 Move X23, [X23+2000]
	108 Move X1, X31
	109 Call CancellationTokenSource.get_Token, X0
	110 Move X8, [X23]
	111 Move X23, X0
	112 Move W9, [X8+224]
	113 Compare W9, 0
	114 JumpIfNotEqual {117}
	115 Move X0, X8
	116 Call 0x1C17DFC
	117 Move X0, X21
	118 Move X1, X22
	119 Move X2, X23
	120 Move X3, X31
	121 Call TaskManager.ContinueWhenAll, X0, X1, X2
	122 Move TEMP, X19
	123 And TEMP, TEMP, 1
	124 Compare TEMP, 1
	125 JumpIfNotEqual {142}
	126 Move X8, [X20+24]
	127 Compare X8, 0
	128 JumpIfEqual {151}
	129 Move X0, [X8+56]
	130 Compare X0, 0
	131 JumpIfEqual {151}
	132 Move X19, [X20+16]
	133 Move X1, X31
	134 Call CancellationTokenSource.get_Token, X0
	135 Move X8, [X20+24]
	136 Compare X8, 0
	137 JumpIfEqual {151}
	138 Move X2, [X8+48]
	139 Move X1, X0
	140 Move X0, X19
	141 Call LoadBalancingClientAsyncExtensions.Service_ClientUpdate, X0, X1, X2
	142 Move X0, [X20+24]
	143 Move X20, [X31+48]
	144 Move X19, [X31+56]
	145 Move X22, [X31+32]
	146 Move X21, [X31+40]
	147 Move X24, [X31+16]
	148 Move X23, [X31+24]
	149 Move X30, [X31+64]
	150 Return X0
	151 Call 0x1C17F20
	152 Call 0x1C17F28
	153 Call 0x1C17F44
	154 Move X1, X31
	155 Call 0x1C17DEC

Method: System.Void Service_ClientUpdate(Fusion.Photon.Realtime.LoadBalancingClient client, System.Threading.CancellationToken token, System.Threading.Tasks.TaskCompletionSource`1<System.Int16> completionSource)

Disassembly:
	0x01E64DC4 BL 0x1990590
	0x01E64DC8 SUB X31, X31, 0x30
	0x01E64DCC STP X30, X21, [X31 + 0x10]
	0x01E64DD0 STP X20, X19, [X31 + 0x20]
	0x01E64DD4 ADRP X19, 0x2575000
	0x01E64DD8 ADRP X21, 0x2298000
	0x01E64DDC LDRB W8, [X19 + 0xE2]
	0x01E64DE0 LDR X21, [X21 + 0xD18]
	0x01E64DE4 MOV X20, X0
	0x01E64DE8 TBNZ X8, 0x0, 0x1E64E00
	0x01E64DEC ADRP X0, 0x2298000
	0x01E64DF0 LDR X0, [X0 + 0xD18]
	0x01E64DF4 BL 0x1C16CF4
	0x01E64DF8 MOVZ W8, 0x1
	0x01E64DFC STRB W8, [X19 + 0xE2]
	0x01E64E00 LDR X8, [X21]
	0x01E64E04 LDR X8, [X8 + 0xB8]
	0x01E64E08 LDR X9, [X8 + 0x20]
	0x01E64E0C CBZ X9, 0x1E64E68
	0x01E64E10 LDR X19, [X8]
	0x01E64E14 STRB W31, [X31 + 0xC]
	0x01E64E18 ADD X1, X31, 0xC
	0x01E64E1C MOV X0, X19
	0x01E64E20 MOV X2, X31
	0x01E64E24 BL 0x33DE64C
	0x01E64E28 LDR X8, [X21]
	0x01E64E2C LDR X8, [X8 + 0xB8]
	0x01E64E30 LDR X8, [X8 + 0x20]
	0x01E64E34 CBZ X8, 0x1E64E80
	0x01E64E38 LDR X0, [X8 + 0x40]
	0x01E64E3C LDR X9, [X8 + 0x18]
	0x01E64E40 LDR X2, [X8 + 0x28]
	0x01E64E44 MOV X1, X20
	0x01E64E48 BLR X9
	0x01E64E4C MOV X20, X31
	0x01E64E50 LDRB W8, [X31 + 0xC]
	0x01E64E54 CBZ W8, 0x1E64E64
	0x01E64E58 MOV X0, X19
	0x01E64E5C MOV X1, X31
	0x01E64E60 BL 0x33E14E4
	0x01E64E64 CBNZ X20, 0x1E64E78
	0x01E64E68 LDP X20, X19, [X31 + 0x20]
	0x01E64E6C LDP X30, X21, [X31 + 0x10]
	0x01E64E70 ADD X31, X31, 0x30
	0x01E64E74 RET
	0x01E64E78 MOV X0, X20
	0x01E64E7C BL 0x1C16F18
	0x01E64E80 BL 0x1C16F20
	0x01E64E84 B 0x1E64E88
	0x01E64E88 MOV X21, X0
	0x01E64E8C CMP W1, 0x1
	0x01E64E90 B.NE 0x1E64EA8
	0x01E64E94 MOV X0, X21
	0x01E64E98 BL 0x3EB1AD0
	0x01E64E9C LDR X20, [X0]
	0x01E64EA0 BL 0x3EB1AE0
	0x01E64EA4 B 0x1E64E50
	0x01E64EA8 MOV X20, X31
	0x01E64EAC B 0x1E64EB4
	0x01E64EB0 MOV X21, X0
	0x01E64EB4 LDRB W8, [X31 + 0xC]
	0x01E64EB8 CBZ W8, 0x1E64EC8
	0x01E64EBC MOV X0, X19
	0x01E64EC0 MOV X1, X31
	0x01E64EC4 BL 0x33E14E4
	0x01E64EC8 CBNZ X20, 0x1E64ED4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x2576000
	008 Move X23, 0x2299000
	009 Move W8, [X22+213]
	010 Move X23, [X23+3272]
	011 Move X19, X2
	012 Move X21, X1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {35}
	018 Move X0, 0x2298000
	019 Move X0, [X0+2040]
	020 Call 0x1C17CF4
	021 Move X0, 0x2298000
	022 Move X0, [X0+2000]
	023 Call 0x1C17CF4
	024 Move X0, 0x2299000
	025 Move X0, [X0+3280]
	026 Call 0x1C17CF4
	027 Move X0, 0x2299000
	028 Move X0, [X0+3272]
	029 Call 0x1C17CF4
	030 Move X0, 0x2299000
	031 Move X0, [X0+3288]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X22+213], W8
	035 Move X0, [X23]
	036 Call 0x1C17F10
	037 Move X1, X31
	038 Move X22, X0
	039 Call Object..ctor, X0
	040 Compare X22, 0
	041 JumpIfEqual {79}
	042 Move X8, 0x2298000
	043 Move X8, [X8+2040]
	044 Move [X22+16], X21
	045 Move [X22+24], X20
	046 Move [X22+32], X19
	047 Move X19, 0x2299000
	048 Move X0, [X8]
	049 Move X20, 0x2298000
	050 Move X21, 0x2299000
	051 Move X19, [X19+3280]
	052 Move X20, [X20+2000]
	053 Move X21, [X21+3288]
	054 Call 0x1C17F10
	055 Move X2, [X19]
	056 Move X1, X22
	057 Move X3, X31
	058 Move X19, X0
	059 Call Func`1<Object>..ctor, X0, X1, X2
	060 Move X0, [X20]
	061 Move X20, [X22+16]
	062 Move W8, [X0+224]
	063 Compare W8, 0
	064 JumpIfNotEqual {66}
	065 Call 0x1C17DFC
	066 Move X3, [X21]
	067 Move X0, X19
	068 Move X1, X20
	069 Move X20, [X31+32]
	070 Move X19, [X31+40]
	071 Move X22, [X31+16]
	072 Move X21, [X31+24]
	073 Move W2, 10
	074 Move X4, X31
	075 Move X30, [X31+48]
	076 Move X23, [X31+56]
	077 Call TaskManager.Service, X0, X1, X2, X3
	078 Return 
	079 Call 0x1C17F20

