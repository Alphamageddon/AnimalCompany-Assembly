Type: Fusion.Photon.Realtime.RegionPinger/<RegionPingCoroutine>d__22

Method: System.Void .ctor(System.Int32 <>1__state)

Disassembly:
	0x01E5ED9C LDP X8, X3, [X9 + 0x1D8]
	0x01E5EDA0 BLR X8
	0x01E5EDA4 CBZ X20, 0x1E5EDC0
	0x01E5EDA8 MOV X1, X0
	0x01E5EDAC MOV X0, X20
	0x01E5EDB0 LDP X20, X19, [X31 + 0x10]
	0x01E5EDB4 MOV X2, X31
	0x01E5EDB8 LDR X30, [X31], #0x20
	0x01E5EDBC B 0x1E544E0
	0x01E5EDC0 BL 0x1C16F20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W19, W1
	005 Move X1, X31
	006 Move X20, X0
	007 Call Object..ctor, X0
	008 Move [X20+16], W19
	009 Move X20, [X31+16]
	010 Move X19, [X31+24]
	011 Move X30, [X31+32]
	012 Return 

Method: System.Void System.IDisposable.Dispose()

Disassembly:
	0x01E5EE20 ADRP X0, 0x2295000

ISIL:
	001 Return 

Method: System.Boolean MoveNext()

Disassembly:
	0x01E5EE24 LDR X0, [X0 + 0xAC8]
	0x01E5EE28 BL 0x1C16CF4
	0x01E5EE2C MOVZ W8, 0x1
	0x01E5EE30 STRB W8, [X21 + 0xA9]
	0x01E5EE34 CBZ X20, 0x1E5EEC4
	0x01E5EE38 ADRP X8, 0x229D000
	0x01E5EE3C LDR X8, [X8 + 0xD60]
	0x01E5EE40 MOV X0, X20
	0x01E5EE44 LDR X1, [X8]
	0x01E5EE48 BL 0x2AA4E88
	0x01E5EE4C CBZ W0, 0x1E5EEC4
	0x01E5EE50 LDR X0, [X19 + 0x18]
	0x01E5EE54 CBZ X0, 0x1E5F288
	0x01E5EE58 LDR X8, [X0]
	0x01E5EE5C MOV X1, X20
	0x01E5EE60 LDP X9, X2, [X8 + 0x138]
	0x01E5EE64 BLR X9
	0x01E5EE68 TBNZ X0, 0x0, 0x1E5EEC4
	0x01E5EE6C MOVZ W1, 0xFB
	0x01E5EE70 MOV X0, X20
	0x01E5EE74 MOV X2, X31
	0x01E5EE78 BL 0x34EDBF0
	0x01E5EE7C TBZ X0, 0x0, 0x1E5EED4
	0x01E5EE80 MOVZ W1, 0xFB
	0x01E5EE84 MOV X0, X20
	0x01E5EE88 MOV X2, X31
	0x01E5EE8C BL 0x34ED940
	0x01E5EE90 CBZ X0, 0x1E5F288
	0x01E5EE94 ADRP X8, 0x2295000
	0x01E5EE98 LDR X8, [X8 + 0xB58]
	0x01E5EE9C LDR X9, [X0]
	0x01E5EEA0 LDR X1, [X8]
	0x01E5EEA4 LDR X8, [X9 + 0x40]
	0x01E5EEA8 LDR X9, [X1 + 0x40]
	0x01E5EEAC CMP X8, X9
	0x01E5EEB0 B.NE 0x1E5F28C
	0x01E5EEB4 BL 0x1C16E08
	0x01E5EEB8 LDRB W8, [X0]
	0x01E5EEBC STRB W8, [X19 + 0x10]
	0x01E5EEC0 CBZ W8, 0x1E5EED4
	0x01E5EEC4 LDP X20, X19, [X31 + 0x20]
	0x01E5EEC8 LDP X22, X21, [X31 + 0x10]
	0x01E5EECC LDP X30, X23, [X31], #0x30
	0x01E5EED0 RET
	0x01E5EED4 MOVZ W1, 0xF3
	0x01E5EED8 MOV X0, X20
	0x01E5EEDC MOV X2, X31
	0x01E5EEE0 BL 0x34EDBF0
	0x01E5EEE4 TBZ X0, 0x0, 0x1E5EEF0
	0x01E5EEE8 MOVZ W1, 0xF3
	0x01E5EEEC B 0x1E5EF08
	0x01E5EEF0 MOVZ W1, 0xFF
	0x01E5EEF4 MOV X0, X20
	0x01E5EEF8 MOV X2, X31
	0x01E5EEFC BL 0x34EDBF0
	0x01E5EF00 TBZ X0, 0x0, 0x1E5EF44
	0x01E5EF04 MOVZ W1, 0xFF
	0x01E5EF08 MOV X0, X20
	0x01E5EF0C MOV X2, X31
	0x01E5EF10 BL 0x34ED940
	0x01E5EF14 ADRP X8, 0x229E000
	0x01E5EF18 LDR X8, [X8 + 0x9E8]
	0x01E5EF1C MOV X21, X0
	0x01E5EF20 LDR X8, [X8]
	0x01E5EF24 LDR W9, [X8 + 0xE0]
	0x01E5EF28 CBNZ W9, 0x1E5EF34
	0x01E5EF2C MOV X0, X8
	0x01E5EF30 BL 0x1C16DFC
	0x01E5EF34 MOV X0, X21
	0x01E5EF38 MOV X1, X31
	0x01E5EF3C BL 0x3320190
	0x01E5EF40 STR W0, [X19 + 0x20]
	0x01E5EF44 MOVZ W1, 0xFD
	0x01E5EF48 MOV X0, X20
	0x01E5EF4C MOV X2, X31
	0x01E5EF50 BL 0x34EDBF0
	0x01E5EF54 TBZ X0, 0x0, 0x1E5EF98
	0x01E5EF58 MOVZ W1, 0xFD
	0x01E5EF5C MOV X0, X20
	0x01E5EF60 MOV X2, X31
	0x01E5EF64 BL 0x34ED940
	0x01E5EF68 CBZ X0, 0x1E5F288
	0x01E5EF6C ADRP X8, 0x2295000
	0x01E5EF70 LDR X8, [X8 + 0xB58]
	0x01E5EF74 LDR X9, [X0]
	0x01E5EF78 LDR X1, [X8]
	0x01E5EF7C LDR X8, [X9 + 0x40]
	0x01E5EF80 LDR X9, [X1 + 0x40]
	0x01E5EF84 CMP X8, X9
	0x01E5EF88 B.NE 0x1E5F28C
	0x01E5EF8C BL 0x1C16E08
	0x01E5EF90 LDRB W8, [X0]
	0x01E5EF94 STRB W8, [X19 + 0x38]
	0x01E5EF98 MOVZ W1, 0xFE
	0x01E5EF9C MOV X0, X20
	0x01E5EFA0 MOV X2, X31
	0x01E5EFA4 BL 0x34EDBF0
	0x01E5EFA8 TBZ X0, 0x0, 0x1E5EFEC
	0x01E5EFAC MOVZ W1, 0xFE
	0x01E5EFB0 MOV X0, X20
	0x01E5EFB4 MOV X2, X31
	0x01E5EFB8 BL 0x34ED940
	0x01E5EFBC CBZ X0, 0x1E5F288
	0x01E5EFC0 ADRP X8, 0x2295000
	0x01E5EFC4 LDR X8, [X8 + 0xB58]
	0x01E5EFC8 LDR X9, [X0]
	0x01E5EFCC LDR X1, [X8]
	0x01E5EFD0 LDR X8, [X9 + 0x40]
	0x01E5EFD4 LDR X9, [X1 + 0x40]
	0x01E5EFD8 CMP X8, X9
	0x01E5EFDC B.NE 0x1E5F28C
	0x01E5EFE0 BL 0x1C16E08
	0x01E5EFE4 LDRB W8, [X0]
	0x01E5EFE8 STRB W8, [X19 + 0x39]
	0x01E5EFEC MOVZ W1, 0xFC
	0x01E5EFF0 MOV X0, X20
	0x01E5EFF4 MOV X2, X31
	0x01E5EFF8 BL 0x34EDBF0
	0x01E5EFFC TBZ X0, 0x0, 0x1E5F040
	0x01E5F000 MOVZ W1, 0xFC
	0x01E5F004 MOV X0, X20
	0x01E5F008 MOV X2, X31
	0x01E5F00C BL 0x34ED940
	0x01E5F010 ADRP X8, 0x229D000
	0x01E5F014 LDR X8, [X8 + 0x9E8]
	0x01E5F018 MOV X21, X0
	0x01E5F01C LDR X8, [X8]
	0x01E5F020 LDR W9, [X8 + 0xE0]
	0x01E5F024 CBNZ W9, 0x1E5F030
	0x01E5F028 MOV X0, X8
	0x01E5F02C BL 0x1C16DFC
	0x01E5F030 MOV X0, X21
	0x01E5F034 MOV X1, X31
	0x01E5F038 BL 0x3320190
	0x01E5F03C STR W0, [X19 + 0x58]
	0x01E5F040 MOVZ W1, 0xF9
	0x01E5F044 MOV X0, X20
	0x01E5F048 MOV X2, X31
	0x01E5F04C BL 0x34EDBF0
	0x01E5F050 TBZ X0, 0x0, 0x1E5F094
	0x01E5F054 MOVZ W1, 0xF9
	0x01E5F058 MOV X0, X20
	0x01E5F05C MOV X2, X31
	0x01E5F060 BL 0x34ED940
	0x01E5F064 CBZ X0, 0x1E5F288
	0x01E5F068 ADRP X8, 0x2294000
	0x01E5F06C LDR X8, [X8 + 0xB58]
	0x01E5F070 LDR X9, [X0]
	0x01E5F074 LDR X1, [X8]
	0x01E5F078 LDR X8, [X9 + 0x40]
	0x01E5F07C LDR X9, [X1 + 0x40]
	0x01E5F080 CMP X8, X9
	0x01E5F084 B.NE 0x1E5F28C
	0x01E5F088 BL 0x1C16E08
	0x01E5F08C LDRB W8, [X0]
	0x01E5F090 STRB W8, [X19 + 0x3A]
	0x01E5F094 MOVZ W1, 0xF8
	0x01E5F098 MOV X0, X20
	0x01E5F09C MOV X2, X31
	0x01E5F0A0 BL 0x34EDBF0
	0x01E5F0A4 TBZ X0, 0x0, 0x1E5F0E8
	0x01E5F0A8 MOVZ W1, 0xF8
	0x01E5F0AC MOV X0, X20
	0x01E5F0B0 MOV X2, X31
	0x01E5F0B4 BL 0x34ED940
	0x01E5F0B8 CBZ X0, 0x1E5F288
	0x01E5F0BC ADRP X8, 0x2294000
	0x01E5F0C0 LDR X8, [X8 + 0x758]
	0x01E5F0C4 LDR X9, [X0]
	0x01E5F0C8 LDR X1, [X8]
	0x01E5F0CC LDR X8, [X9 + 0x40]
	0x01E5F0D0 LDR X9, [X1 + 0x40]
	0x01E5F0D4 CMP X8, X9
	0x01E5F0D8 B.NE 0x1E5F28C
	0x01E5F0DC BL 0x1C16E08
	0x01E5F0E0 LDR W8, [X0]
	0x01E5F0E4 STR W8, [X19 + 0x48]
	0x01E5F0E8 MOVZ W1, 0xFA
	0x01E5F0EC MOV X0, X20
	0x01E5F0F0 MOV X2, X31
	0x01E5F0F4 BL 0x34EDBF0
	0x01E5F0F8 TBZ X0, 0x0, 0x1E5F130
	0x01E5F0FC MOVZ W1, 0xFA
	0x01E5F100 MOV X0, X20
	0x01E5F104 MOV X2, X31
	0x01E5F108 BL 0x34ED940
	0x01E5F10C ADRP X22, 0x2294000
	0x01E5F110 LDR X22, [X22 + 0xAC8]
	0x01E5F114 MOV X21, X0
	0x01E5F118 LDR X1, [X22]
	0x01E5F11C BL 0x1C16E00
	0x01E5F120 STR X0, [X19 + 0x50]
	0x01E5F124 LDR X1, [X22]
	0x01E5F128 MOV X0, X21
	0x01E5F12C BL 0x1C16E00
	0x01E5F130 MOVZ W1, 0xF7
	0x01E5F134 MOV X0, X20
	0x01E5F138 MOV X2, X31
	0x01E5F13C BL 0x34EDBF0
	0x01E5F140 TBZ X0, 0x0, 0x1E5F19C
	0x01E5F144 MOVZ W1, 0xF7
	0x01E5F148 MOV X0, X20
	0x01E5F14C MOV X2, X31
	0x01E5F150 BL 0x34ED940
	0x01E5F154 CBZ X0, 0x1E5F198
	0x01E5F158 ADRP X23, 0x2294000
	0x01E5F15C LDR X23, [X23 + 0xAC8]
	0x01E5F160 MOV X21, X0
	0x01E5F164 LDR X22, [X23]
	0x01E5F168 MOV X1, X22
	0x01E5F16C BL 0x1C16E00
	0x01E5F170 CBZ X0, 0x1E5F18C
	0x01E5F174 STR X0, [X19 + 0x30]
	0x01E5F178 LDR X22, [X23]
	0x01E5F17C MOV X0, X21
	0x01E5F180 MOV X1, X22
	0x01E5F184 BL 0x1C16E00
	0x01E5F188 CBNZ X0, 0x1E5F19C
	0x01E5F18C MOV X0, X21
	0x01E5F190 MOV X1, X22
	0x01E5F194 BL 0x1C171E0
	0x01E5F198 STR X31, [X19 + 0x30]
	0x01E5F19C MOVZ W1, 0xF5
	0x01E5F1A0 MOV X0, X20
	0x01E5F1A4 MOV X2, X31
	0x01E5F1A8 BL 0x34EDBF0
	0x01E5F1AC TBZ X0, 0x0, 0x1E5F1F0
	0x01E5F1B0 MOVZ W1, 0xF5
	0x01E5F1B4 MOV X0, X20
	0x01E5F1B8 MOV X2, X31
	0x01E5F1BC BL 0x34ED940
	0x01E5F1C0 CBZ X0, 0x1E5F288
	0x01E5F1C4 ADRP X8, 0x2294000
	0x01E5F1C8 LDR X8, [X8 + 0x758]
	0x01E5F1CC LDR X9, [X0]
	0x01E5F1D0 LDR X1, [X8]
	0x01E5F1D4 LDR X8, [X9 + 0x40]
	0x01E5F1D8 LDR X9, [X1 + 0x40]
	0x01E5F1DC CMP X8, X9
	0x01E5F1E0 B.NE 0x1E5F28C
	0x01E5F1E4 BL 0x1C16E08
	0x01E5F1E8 LDR W8, [X0]
	0x01E5F1EC STR W8, [X19 + 0x24]
	0x01E5F1F0 MOVZ W1, 0xF6
	0x01E5F1F4 MOV X0, X20
	0x01E5F1F8 MOV X2, X31
	0x01E5F1FC BL 0x34EDBF0
	0x01E5F200 TBZ X0, 0x0, 0x1E5F244
	0x01E5F204 MOVZ W1, 0xF6
	0x01E5F208 MOV X0, X20
	0x01E5F20C MOV X2, X31
	0x01E5F210 BL 0x34ED940
	0x01E5F214 CBZ X0, 0x1E5F288
	0x01E5F218 ADRP X8, 0x2294000
	0x01E5F21C LDR X8, [X8 + 0x758]
	0x01E5F220 LDR X9, [X0]
	0x01E5F224 LDR X1, [X8]
	0x01E5F228 LDR X8, [X9 + 0x40]
	0x01E5F22C LDR X9, [X1 + 0x40]
	0x01E5F230 CMP X8, X9
	0x01E5F234 B.NE 0x1E5F28C
	0x01E5F238 BL 0x1C16E08
	0x01E5F23C LDR W8, [X0]
	0x01E5F240 STR W8, [X19 + 0x28]
	0x01E5F244 ADRP X8, 0x229C000
	0x01E5F248 LDR X8, [X8 + 0xD98]
	0x01E5F24C LDR X21, [X19 + 0x18]
	0x01E5F250 LDR X0, [X8]
	0x01E5F254 LDR W8, [X0 + 0xE0]
	0x01E5F258 CBNZ W8, 0x1E5F260
	0x01E5F25C BL 0x1C16DFC
	0x01E5F260 MOV X0, X21
	0x01E5F264 MOV X1, X20
	0x01E5F268 MOV X2, X31
	0x01E5F26C BL 0x1E493F4
	0x01E5F270 LDR X0, [X19 + 0x18]
	0x01E5F274 LDP X20, X19, [X31 + 0x20]
	0x01E5F278 LDP X22, X21, [X31 + 0x10]
	0x01E5F27C MOV X1, X31
	0x01E5F280 LDP X30, X23, [X31], #0x30
	0x01E5F284 B 0x1E4A5B8
	0x01E5F288 BL 0x1C16F20
	0x01E5F28C BL 0x1C171E0
	0x01E5F290 STP X30, X25, [X31 - 0x40]!
	0x01E5F294 STP X24, X23, [X31 + 0x10]
	0x01E5F298 STP X22, X21, [X31 + 0x20]
	0x01E5F29C STP X20, X19, [X31 + 0x30]
	0x01E5F2A0 ADRP X23, 0x257A000
	0x01E5F2A4 LDRB W8, [X23 + 0x99]
	0x01E5F2A8 MOV X21, X3
	0x01E5F2AC MOV X22, X2
	0x01E5F2B0 MOV X19, X1
	0x01E5F2B4 MOV X20, X0
	0x01E5F2B8 TBNZ X8, 0x0, 0x1E5F2DC
	0x01E5F2BC ADRP X0, 0x229C000
	0x01E5F2C0 LDR X0, [X0 + 0xD60]
	0x01E5F2C4 BL 0x1C16CF4
	0x01E5F2C8 ADRP X0, 0x229C000
	0x01E5F2CC LDR X0, [X0 + 0xD98]
	0x01E5F2D0 BL 0x1C16CF4
	0x01E5F2D4 MOVZ W8, 0x1
	0x01E5F2D8 STRB W8, [X23 + 0x99]
	0x01E5F2DC CBZ X19, 0x1E5F390
	0x01E5F2E0 ADRP X25, 0x229C000
	0x01E5F2E4 LDR X25, [X25 + 0xD60]
	0x01E5F2E8 MOV X0, X19
	0x01E5F2EC LDR X1, [X25]
	0x01E5F2F0 BL 0x2AA4E88
	0x01E5F2F4 CBZ W0, 0x1E5F394
	0x01E5F2F8 ADRP X24, 0x229C000
	0x01E5F2FC LDR X24, [X24 + 0xD98]
	0x01E5F300 LDR X0, [X24]
	0x01E5F304 LDR W8, [X0 + 0xE0]
	0x01E5F308 CBNZ W8, 0x1E5F310
	0x01E5F30C BL 0x1C16DFC
	0x01E5F310 MOV X0, X19
	0x01E5F314 MOV X1, X31
	0x01E5F318 BL 0x1E49E14
	0x01E5F31C LDRB W8, [X20 + 0x68]
	0x01E5F320 MOV X23, X0
	0x01E5F324 CBZ W8, 0x1E5F3A8
	0x01E5F328 CBZ X23, 0x1E5F3D4
	0x01E5F32C LDR X1, [X25]
	0x01E5F330 MOV X0, X23
	0x01E5F334 BL 0x2AA4E88
	0x01E5F338 CBZ W0, 0x1E5F394
	0x01E5F33C LDR X0, [X24]
	0x01E5F340 LDR X21, [X20 + 0x18]
	0x01E5F344 LDR W8, [X0 + 0xE0]
	0x01E5F348 CBNZ W8, 0x1E5F350
	0x01E5F34C BL 0x1C16DFC
	0x01E5F350 MOV X0, X21
	0x01E5F354 MOV X1, X23
	0x01E5F358 MOV X2, X31
	0x01E5F35C BL 0x1E46944
	0x01E5F360 LDR X0, [X20 + 0x18]
	0x01E5F364 MOV X1, X31
	0x01E5F368 BL 0x1E4A5B8
	0x01E5F36C LDR X8, [X20 + 0x60]
	0x01E5F370 CBZ X8, 0x1E5F3D4
	0x01E5F374 LDR X0, [X8 + 0xC0]
	0x01E5F378 CBZ X0, 0x1E5F3D4
	0x01E5F37C MOV X1, X19
	0x01E5F380 MOV X2, X31
	0x01E5F384 BL 0x1E4E60C
	0x01E5F388 MOVZ W0, 0x1
	0x01E5F38C B 0x1E5F394
	0x01E5F390 MOV W0, W31
	0x01E5F394 LDP X20, X19, [X31 + 0x30]
	0x01E5F398 LDP X22, X21, [X31 + 0x20]
	0x01E5F39C LDP X24, X23, [X31 + 0x10]
	0x01E5F3A0 LDP X30, X25, [X31], #0x40
	0x01E5F3A4 RET
	0x01E5F3A8 LDR X0, [X20 + 0x60]
	0x01E5F3AC CBZ X0, 0x1E5F3D4
	0x01E5F3B0 MOV X1, X23
	0x01E5F3B4 MOV X2, X22
	0x01E5F3B8 MOV X3, X21
	0x01E5F3BC LDP X20, X19, [X31 + 0x30]
	0x01E5F3C0 LDP X22, X21, [X31 + 0x20]
	0x01E5F3C4 LDP X24, X23, [X31 + 0x10]
	0x01E5F3C8 MOV X4, X31
	0x01E5F3CC LDP X30, X25, [X31], #0x40
	0x01E5F3D0 B 0x1E4E434
	0x01E5F3D4 BL 0x1C16F20
	0x01E5F3D8 STP X30, X21, [X31 - 0x20]!
	0x01E5F3DC STP X20, X19, [X31 + 0x10]
	0x01E5F3E0 ADRP X21, 0x257A000
	0x01E5F3E4 LDRB W8, [X21 + 0x9A]
	0x01E5F3E8 MOV X20, X1
	0x01E5F3EC MOV X19, X0
	0x01E5F3F0 TBNZ X8, 0x0, 0x1E5F408
	0x01E5F3F4 ADRP X0, 0x229C000
	0x01E5F3F8 LDR X0, [X0 + 0xDA0]
	0x01E5F3FC BL 0x1C16CF4
	0x01E5F400 MOVZ W8, 0x1
	0x01E5F404 STRB W8, [X21 + 0x9A]
	0x01E5F408 LDRB W8, [X19 + 0x68]
	0x01E5F40C CBZ W8, 0x1E5F420
	0x01E5F410 LDP X20, X19, [X31 + 0x10]
	0x01E5F414 MOV W0, W31
	0x01E5F418 LDP X30, X21, [X31], #0x20
	0x01E5F41C RET
	0x01E5F420 ADRP X8, 0x229C000
	0x01E5F424 LDR X8, [X8 + 0xDA0]
	0x01E5F428 LDR X0, [X8]
	0x01E5F42C BL 0x1C16F10
	0x01E5F430 MOV X1, X31
	0x01E5F434 MOV X21, X0
	0x01E5F438 BL 0x34ED7D8
	0x01E5F43C CBZ X21, 0x1E5F478
	0x01E5F440 MOVZ W1, 0xFA
	0x01E5F444 MOV X0, X21
	0x01E5F448 MOV X2, X20
	0x01E5F44C MOV X3, X31
	0x01E5F450 BL 0x34ED9F4
	0x01E5F454 LDR X0, [X19 + 0x60]
	0x01E5F458 CBZ X0, 0x1E5F478
	0x01E5F45C LDP X20, X19, [X31 + 0x10]
	0x01E5F460 MOV X1, X21
	0x01E5F464 MOV X2, X31
	0x01E5F468 MOV X3, X31
	0x01E5F46C MOV X4, X31
	0x01E5F470 LDP X30, X21, [X31], #0x20
	0x01E5F474 B 0x1E4E434
	0x01E5F478 BL 0x1C16F20
	0x01E5F47C STP X30, X21, [X31 - 0x20]!
	0x01E5F480 STP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x257C000
	006 Move W8, [X20+141]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {32}
	012 Move X0, 0x2297000
	013 Move X0, [X0+3600]
	014 Call 0x1C17CF4
	015 Move X0, 0x2297000
	016 Move X0, [X0+3624]
	017 Call 0x1C17CF4
	018 Move X0, 0x229F000
	019 Move X0, [X0+2112]
	020 Call 0x1C17CF4
	021 Move X0, 0x229E000
	022 Move X0, [X0+1800]
	023 Call 0x1C17CF4
	024 Move X0, 0x229F000
	025 Move X0, [X0+2464]
	026 Call 0x1C17CF4
	027 Move X0, 0x2299000
	028 Move X0, [X0+3120]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X20+141], W8
	032 Move W8, [X19+16]
	033 Move W0, W31
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Move X9, -20119552
	036 Add X9, X9, 2872
	037 NotImplemented "Instruction ADR not yet implemented."
	038 NotImplemented "Instruction LDRH not yet implemented."
	039 Add X10, X10, X11
	040 Move TEMP, 0
	041 Not TEMP
	042 Move W8, TEMP
	043 CallNoReturn X10
	044 Move X8, [X19+32]
	045 Move TEMP, 0
	046 Not TEMP
	047 Move W9, TEMP
	048 Move [X19+16], W9
	049 Compare X8, 0
	050 JumpIfEqual {450}
	051 Move X21, 0x229F000
	052 Move X21, [X21+2112]
	053 Move X20, [X8+48]
	054 Move X0, [X21]
	055 Move W9, [X0+224]
	056 Compare W9, 0
	057 JumpIfNotEqual {59}
	058 Call 0x1C17DFC
	059 Compare X20, 0
	060 JumpIfEqual {450}
	061 Move X8, [X21]
	062 Move X8, [X8+184]
	063 Move W8, [X8+8]
	064 Move [X20+40], W8
	065 Move [X19+40], X31
	066 Move X8, 0x229E000
	067 Move X8, [X8+1800]
	068 Move X0, [X8]
	069 Call 0x1C17F10
	070 Move X1, X31
	071 Move X20, X0
	072 Call Stopwatch..ctor, X0
	073 Move X8, [X19+32]
	074 Move [X19+48], X20
	075 Compare X8, 0
	076 JumpIfEqual {450}
	077 Move W20, W31
	078 Move [X8+16], W31
	079 Move X8, [X19+32]
	080 Move TEMP, 0
	081 Not TEMP
	082 Move W9, TEMP
	083 Move [X19+16], W9
	084 Compare X8, 0
	085 JumpIfNotEqual {260}
	086 Move TEMP, 0
	087 Not TEMP
	088 Move W8, TEMP
	089 Move [X19+16], W8
	090 Move TEMP, 0
	091 Not TEMP
	092 Move W8, TEMP
	093 Move [X19+16], W8
	094 Move X8, [X19+32]
	095 Move TEMP, 0
	096 Not TEMP
	097 Move W9, TEMP
	098 Move [X19+16], W9
	099 Compare X8, 0
	100 JumpIfEqual {450}
	101 Move W9, [X8+16]
	102 Add W20, W9, 1
	103 Move [X8+16], W20
	104 Move X21, 0x229F000
	105 Move X21, [X21+2112]
	106 Move X0, [X21]
	107 Move W8, [X0+224]
	108 Compare W8, 0
	109 JumpIfNotEqual {112}
	110 Call 0x1C17DFC
	111 Move X0, [X21]
	112 Move X8, [X0+184]
	113 Move W8, [X8]
	114 NotImplemented "Instruction CMP not yet implemented."
	115 Move X8, [X19+32]
	116 Compare X8, 0
	117 JumpIfEqual {450}
	118 Move W8, [X8+21]
	119 Compare W8, 0
	120 JumpIfEqual {123}
	121 Move X20, X31
	122 Move W8, 1
	123 Move X0, [X19+48]
	124 Compare X0, 0
	125 JumpIfEqual {450}
	126 Move X1, X31
	127 Call Stopwatch.Reset, X0
	128 Move X0, [X19+48]
	129 Compare X0, 0
	130 JumpIfEqual {450}
	131 Move X1, X31
	132 Call Stopwatch.Start, X0
	133 Move X8, [X19+32]
	134 Compare X8, 0
	135 JumpIfEqual {295}
	136 Move X0, [X8+32]
	137 Compare X0, 0
	138 JumpIfEqual {296}
	139 Move X9, [X0]
	140 Move X1, [X8+56]
	141 Move X8, [X9+392]
	142 Move X2, [X9+400]
	143 NotImplemented "Instruction BLR not yet implemented."
	144 Move X8, [X19+32]
	145 Compare X8, 0
	146 JumpIfEqual {450}
	147 Move X0, [X8+32]
	148 Compare X0, 0
	149 JumpIfEqual {450}
	150 Move X8, [X0]
	151 Move X9, [X8+408]
	152 Move X1, [X8+416]
	153 NotImplemented "Instruction BLR not yet implemented."
	154 Move TEMP, X0
	155 And TEMP, TEMP, 1
	156 Compare TEMP, 1
	157 JumpIfEqual {186}
	158 Move X0, [X19+48]
	159 Compare X0, 0
	160 JumpIfEqual {450}
	161 Move X1, X31
	162 Call Stopwatch.get_ElapsedMilliseconds, X0
	163 Move X21, 0x229E000
	164 Move X21, [X21+2112]
	165 Move X20, X0
	166 Move X8, [X21]
	167 Move W9, [X8+224]
	168 Compare W9, 0
	169 JumpIfNotEqual {173}
	170 Move X0, X8
	171 Call 0x1C17DFC
	172 Move X8, [X21]
	173 Move X8, [X8+184]
	174 NotImplemented "Instruction LDRSW not yet implemented."
	175 NotImplemented "Instruction CMP not yet implemented."
	176 Move X8, 0x229E000
	177 Move X8, [X8+2464]
	178 Move X0, [X8]
	179 Call 0x1C17F10
	180 Move X8, -20398080
	181 Move V0, [X8+816]
	182 Move X1, X31
	183 Move X20, X0
	184 Call WaitForSecondsRealtime..ctor, X0, V0
	185 Move W8, 2
	186 Move X0, [X19+48]
	187 Compare X0, 0
	188 JumpIfEqual {450}
	189 Move X1, X31
	190 Call Stopwatch.Stop, X0
	191 Move X8, [X19+32]
	192 Compare X8, 0
	193 JumpIfEqual {450}
	194 Move X8, [X8+32]
	195 Compare X8, 0
	196 JumpIfEqual {450}
	197 Move W8, [X8+24]
	198 Compare W8, 0
	199 JumpIfEqual {206}
	200 Move X0, [X19+48]
	201 Compare X0, 0
	202 JumpIfEqual {450}
	203 Move X1, X31
	204 Call Stopwatch.get_ElapsedMilliseconds, X0
	205 Move X1, X0
	206 Move X20, 0x229E000
	207 Move X20, [X20+2112]
	208 Move X0, [X20]
	209 Move W8, [X0+224]
	210 Compare W8, 0
	211 JumpIfNotEqual {214}
	212 Call 0x1C17DFC
	213 Move X0, [X20]
	214 Move X8, [X0+184]
	215 Move W1, [X8+4]
	216 Move X8, [X19+32]
	217 Move [X19+56], W1
	218 Compare X8, 0
	219 JumpIfEqual {450}
	220 Move X0, [X8+40]
	221 Compare X0, 0
	222 JumpIfEqual {450}
	223 Move X10, 0x2296000
	224 Move X10, [X10+3600]
	225 Move W11, [X0+28]
	226 Move X9, [X0+16]
	227 Move X10, [X10]
	228 Add W11, W11, 1
	229 Move [X0+28], W11
	230 Compare X9, 0
	231 JumpIfEqual {450}
	232 NotImplemented "Instruction LDRSW not yet implemented."
	233 Move W12, [X9+24]
	234 NotImplemented "Instruction CMP not yet implemented."
	235 Add W10, W11, 1
	236 Add X9, X9, X11
	237 Move [X0+24], W10
	238 Move [X9+32], W1
	239 Move X8, [X10+32]
	240 Move X8, [X8+192]
	241 Move X2, [X8+112]
	242 Call List`1<Int32>.AddWithResize, X0, X1
	243 Move X8, [X19+32]
	244 Move W9, [X19+56]
	245 Move W10, [X19+40]
	246 Move W11, [X19+44]
	247 Add W9, W9, W10
	248 Add W10, W11, 1
	249 Move [X19+40], W9
	250 Move [X19+44], W10
	251 Compare X8, 0
	252 JumpIfEqual {450}
	253 Move X11, [X8+48]
	254 Compare X11, 0
	255 JumpIfEqual {450}
	256 NotImplemented "Instruction SDIV not yet implemented."
	257 Move W10, 4
	258 Move [X11+40], W9
	259 Move [X19+60], W10
	260 Move X0, [X8+32]
	261 Compare X0, 0
	262 JumpIfEqual {450}
	263 Move X8, [X0]
	264 Move X9, [X8+408]
	265 Move X1, [X8+416]
	266 NotImplemented "Instruction BLR not yet implemented."
	267 Move TEMP, X0
	268 And TEMP, TEMP, 1
	269 Compare TEMP, 1
	270 JumpIfEqual {285}
	271 Move W8, [X19+60]
	272 NotImplemented "Instruction CMP not yet implemented."
	273 Subtract W8, W8, 1
	274 Move [X19+60], W8
	275 Move X8, 0x2298000
	276 Move X8, [X8+3120]
	277 Move X0, [X8]
	278 Call 0x1C17F10
	279 Move X8, -20398080
	280 Move V0, [X8+188]
	281 Move X1, X31
	282 Move X20, X0
	283 Call WaitForSeconds..ctor, X0, V0
	284 Move W8, 3
	285 Move X8, 0x2298000
	286 Move X8, [X8+3120]
	287 Move X0, [X8]
	288 Call 0x1C17F10
	289 Move X8, -20398080
	290 Move V0, [X8+188]
	291 Move X1, X31
	292 Move X20, X0
	293 Call WaitForSeconds..ctor, X0, V0
	294 Move W8, 4
	295 Call 0x1C17F20
	296 Call 0x1C17F20
	297 Move X20, X0
	298 NotImplemented "Instruction CMP not yet implemented."
	299 Move X0, X20
	300 Call 0x3EB2AD0
	301 Move X20, X0
	302 Move X0, 0x2295000
	303 Move X0, [X0+2000]
	304 Call 0x1C17D08
	305 Move X8, [X20]
	306 Move X1, [X8]
	307 Call 0x1C18270
	308 Move TEMP, X0
	309 And TEMP, TEMP, 1
	310 Compare TEMP, 1
	311 JumpIfNotEqual {452}
	312 Move X20, [X20]
	313 Call 0x3EB2AE0
	314 Move [X19+64], X20
	315 Move X0, 0x2295000
	316 Move X0, [X0+2760]
	317 Call 0x1C17D08
	318 Move W1, 6
	319 Call 0x1C17D6C
	320 Compare X0, 0
	321 JumpIfEqual {450}
	322 Move X20, X0
	323 Move X0, 0x229E000
	324 Move X0, [X0+2472]
	325 Call 0x1C17D08
	326 Move W8, [X20+24]
	327 Compare W8, 0
	328 JumpIfEqual {451}
	329 Move [X20+32], X0
	330 Move X0, [X19+64]
	331 Compare X0, 0
	332 JumpIfEqual {338}
	333 Move X8, [X0]
	334 Move X9, [X8+360]
	335 Move X1, [X8+368]
	336 NotImplemented "Instruction BLR not yet implemented."
	337 Move W8, [X20+24]
	338 NotImplemented "Instruction CMP not yet implemented."
	339 Move [X20+40], X0
	340 Move X0, 0x229E000
	341 Move X0, [X0+2480]
	342 Call 0x1C17D08
	343 Move W8, [X20+24]
	344 NotImplemented "Instruction CMP not yet implemented."
	345 Move [X20+48], X0
	346 Move X0, [X19+64]
	347 Compare X0, 0
	348 JumpIfEqual {450}
	349 Move X8, [X0]
	350 Move X9, [X8+456]
	351 Move X1, [X8+464]
	352 NotImplemented "Instruction BLR not yet implemented."
	353 Move W8, [X20+24]
	354 NotImplemented "Instruction CMP not yet implemented."
	355 Move [X20+56], X0
	356 Move X0, 0x229E000
	357 Move X0, [X0+2488]
	358 Call 0x1C17D08
	359 Move W8, [X20+24]
	360 NotImplemented "Instruction CMP not yet implemented."
	361 Move [X20+64], X0
	362 Move X0, [X19+64]
	363 Compare X0, 0
	364 JumpIfEqual {450}
	365 Move X8, [X0]
	366 Move X9, [X8+392]
	367 Move X1, [X8+400]
	368 NotImplemented "Instruction BLR not yet implemented."
	369 Move W8, [X20+24]
	370 NotImplemented "Instruction CMP not yet implemented."
	371 Move [X20+72], X0
	372 Move X0, X20
	373 Move X1, X31
	374 Call String.Concat, X0
	375 Move X20, X0
	376 Move X0, 0x2295000
	377 Move X0, [X0+2600]
	378 Call 0x1C17D08
	379 Move W8, [X0+224]
	380 Compare W8, 0
	381 JumpIfNotEqual {383}
	382 Call 0x1C17DFC
	383 Move X0, X20
	384 Move X1, X31
	385 Call Debug.Log, X0
	386 Move X8, [X19+32]
	387 Compare X8, 0
	388 JumpIfEqual {450}
	389 Move X0, [X8+32]
	390 Move W9, 1
	391 Move [X8+20], W9
	392 Compare X0, 0
	393 JumpIfEqual {450}
	394 Move X8, [X0]
	395 Move X9, [X8+424]
	396 Move X1, [X8+432]
	397 NotImplemented "Instruction BLR not yet implemented."
	398 Move X8, [X19+32]
	399 Compare X8, 0
	400 JumpIfEqual {450}
	401 Move X0, [X8+40]
	402 Compare X0, 0
	403 JumpIfEqual {450}
	404 Move W9, [X0+24]
	405 NotImplemented "Instruction CMP not yet implemented."
	406 Move W9, [X19+44]
	407 NotImplemented "Instruction CMP not yet implemented."
	408 Move X1, X31
	409 Call Enumerable.Min, X0
	410 Move X8, [X19+32]
	411 Move [X19+72], W0
	412 Compare X8, 0
	413 JumpIfEqual {450}
	414 Move X0, [X8+40]
	415 Move X1, X31
	416 Call Enumerable.Max, X0
	417 Move W9, [X19+40]
	418 Move W10, [X19+72]
	419 Move X8, [X19+32]
	420 Subtract W9, W9, W0
	421 Add W9, W10, W9
	422 Move [X19+76], W0
	423 Move [X19+80], W9
	424 Compare X8, 0
	425 JumpIfEqual {450}
	426 Move X10, [X8+48]
	427 Compare X10, 0
	428 JumpIfEqual {450}
	429 Move W11, [X19+44]
	430 NotImplemented "Instruction SDIV not yet implemented."
	431 Move [X10+40], W9
	432 Move X9, [X8+24]
	433 Compare X9, 0
	434 JumpIfEqual {450}
	435 Move X1, [X8+48]
	436 Move X8, [X9+24]
	437 Move X0, [X9+64]
	438 Move X2, [X9+40]
	439 NotImplemented "Instruction BLR not yet implemented."
	440 Move X20, X31
	441 Move W8, 5
	442 Move W0, 1
	443 Move [X19+24], X20
	444 Move [X19+16], W8
	445 Move X20, [X31+16]
	446 Move X19, [X31+24]
	447 Move X30, [X31+32]
	448 Move X21, [X31+40]
	449 Return X0
	450 Call 0x1C17F20
	451 Call 0x1C17F28
	452 Move W0, 8
	453 Call 0x3EB2AF0
	454 Move X8, [X20]
	455 Move [X0], X8
	456 Move X1, 0x2056000
	457 Add X1, X1, 3672
	458 Move X2, X31
	459 Call 0x3EB2B00
	460 Move X20, X0
	461 Call 0x3EB2AE0
	462 Move X0, X20
	463 Call 0x1D2D690
	464 Call 0x1991590

Method: System.Object System.Collections.Generic.IEnumerator<System.Object>.get_Current()

Disassembly:
	0x01E5F484 ADRP X21, 0x257A000
	0x01E5F488 LDRB W8, [X21 + 0x9B]

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void System.Collections.IEnumerator.Reset()

Disassembly:
	0x01E5F48C MOV X19, X1
	0x01E5F490 MOV X20, X0
	0x01E5F494 TBNZ X8, 0x0, 0x1E5F4AC
	0x01E5F498 ADRP X0, 0x229D000
	0x01E5F49C LDR X0, [X0 + 0x9F0]
	0x01E5F4A0 BL 0x1C16CF4
	0x01E5F4A4 MOVZ W8, 0x1
	0x01E5F4A8 STRB W8, [X21 + 0x9B]
	0x01E5F4AC CBZ X19, 0x1E5F4DC
	0x01E5F4B0 LDR X0, [X20 + 0x70]
	0x01E5F4B4 CBZ X0, 0x1E5F4DC
	0x01E5F4B8 ADRP X8, 0x229D000
	0x01E5F4BC LDR X8, [X8 + 0x9F0]
	0x01E5F4C0 LDR W1, [X19 + 0x18]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0x2295000
	004 Move X0, [X0+2880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X1, X31
	008 Move X19, X0
	009 Call NotSupportedException..ctor, X0
	010 Move X0, 0x229E000
	011 Move X0, [X0+2496]
	012 Call 0x1C17D08
	013 Move X1, X0
	014 Move X0, X19
	015 Call 0x1C17DEC

Method: System.Object System.Collections.IEnumerator.get_Current()

Disassembly:
	0x01E5F4C4 LDR X2, [X8]
	0x01E5F4C8 BL 0x2A14A88

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

