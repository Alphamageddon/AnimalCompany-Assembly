Type: Fusion.Photon.Realtime.ConnectionHandler

Method: Fusion.Photon.Realtime.LoadBalancingClient get_Client()

Disassembly:
	0x01E48BC0 STR W31, [X31 + 0x8]
	0x01E48BC4 LDR W8, [X0 + 0xE0]

ISIL:
	001 Move X0, [X0+32]
	002 Return X0

Method: System.Void set_Client(Fusion.Photon.Realtime.LoadBalancingClient value)

Disassembly:
	0x01E48BC8 CBNZ W8, 0x1E48BD0
	0x01E48BCC BL 0x1C16DFC

ISIL:
	001 Move [X0+32], X1
	002 Return 

Method: System.Int32 get_CountSendAcksOnly()

Disassembly:
	0x01E48BD0 ADD X1, X31, 0x8
	0x01E48BD4 MOV V0.16B, V9.16B

ISIL:
	001 Move W0, [X0+48]
	002 Return X0

Method: System.Void set_CountSendAcksOnly(System.Int32 value)

Disassembly:
	0x01E48BD8 MOV X0, X21
	0x01E48BDC MOV X2, X31

ISIL:
	001 Move [X0+48], W1
	002 Return 

Method: System.Boolean get_FallbackThreadRunning()

Disassembly:
	0x01E48BE0 BL 0x3506860
	0x01E48BE4 ADD X1, X31, 0x8

ISIL:
	001 Move W0, [X0+52]
	002 Return X0

Method: System.Void set_FallbackThreadRunning(System.Boolean value)

Disassembly:
	0x01E48BE8 MOV V0.16B, V8.16B
	0x01E48BEC MOV X0, X21
	0x01E48BF0 MOV X2, X31

ISIL:
	001 And W8, W1, 1
	002 Move [X0+52], W8
	003 Return 

Method: System.Void StaticReset()

Disassembly:
	0x01E48BF4 BL 0x3506860
	0x01E48BF8 CBZ X20, 0x1E48C5C
	0x01E48BFC MOVZ W3, 0x8
	0x01E48C00 MOV X0, X20
	0x01E48C04 MOV X1, X21
	0x01E48C08 MOV W2, W31
	0x01E48C0C MOV X4, X31
	0x01E48C10 BL 0x3517F60
	0x01E48C14 MOV X21, X31
	0x01E48C18 LDRB W8, [X31 + 0xC]
	0x01E48C1C CBZ W8, 0x1E48C2C
	0x01E48C20 MOV X0, X19
	0x01E48C24 MOV X1, X31
	0x01E48C28 BL 0x33E14E4
	0x01E48C2C CBNZ X21, 0x1E48C54
	0x01E48C30 LDP X20, X19, [X31 + 0x30]
	0x01E48C34 LDP X30, X21, [X31 + 0x20]
	0x01E48C38 LDP D9, D8, [X31 + 0x10]
	0x01E48C3C MOVZ W0, 0x8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x2591000
	005 Move X20, 0x22B4000
	006 Move W8, [X19+4040]
	007 Move X20, [X20+3672]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x22B4000
	013 Move X0, [X0+3672]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+4040], W8
	017 Move X8, [X20]
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X8, [X8+184]
	021 Move [X8+4], W31
	022 Move [X8], W31
	023 Move X30, [X31+32]
	024 Return 

Method: System.Void Awake()

Disassembly:
	0x01E48C40 ADD X31, X31, 0x40
	0x01E48C44 RET
	0x01E48C48 BL 0x1C16F20
	0x01E48C4C MOV X0, X19
	0x01E48C50 BL 0x1C171E0
	0x01E48C54 MOV X0, X21
	0x01E48C58 BL 0x1C16F18
	0x01E48C5C BL 0x1C16F20
	0x01E48C60 B 0x1E48C6C
	0x01E48C64 B 0x1E48C6C
	0x01E48C68 B 0x1E48C6C
	0x01E48C6C MOV X20, X0
	0x01E48C70 CMP W1, 0x1
	0x01E48C74 B.NE 0x1E48C8C
	0x01E48C78 MOV X0, X20
	0x01E48C7C BL 0x3EB1AD0
	0x01E48C80 LDR X21, [X0]
	0x01E48C84 BL 0x3EB1AE0
	0x01E48C88 B 0x1E48C18
	0x01E48C8C MOV X21, X31
	0x01E48C90 B 0x1E48C98
	0x01E48C94 MOV X20, X0
	0x01E48C98 LDRB W8, [X31 + 0xC]
	0x01E48C9C CBZ W8, 0x1E48CAC
	0x01E48CA0 MOV X0, X19
	0x01E48CA4 MOV X1, X31
	0x01E48CA8 BL 0x33E14E4
	0x01E48CAC CBNZ X21, 0x1E48CB8
	0x01E48CB0 MOV X0, X20
	0x01E48CB4 BL 0x1D2C690
	0x01E48CB8 MOV X0, X21
	0x01E48CBC BL 0x1C16F18

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x2591000
	005 Move W8, [X20+4041]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x22AC000
	012 Move X0, [X0+1432]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+4041], W8
	016 Move W8, [X19+53]
	017 Compare W8, 0
	018 JumpIfEqual {38}
	019 Move X20, 0x22AC000
	020 Move X20, [X20+1432]
	021 Move X0, X19
	022 Move X1, X31
	023 Call Component.get_gameObject, X0
	024 Move X8, [X20]
	025 Move X19, X0
	026 Move W9, [X8+224]
	027 Compare W9, 0
	028 JumpIfNotEqual {31}
	029 Move X0, X8
	030 Call 0x1C17DFC
	031 Move X0, X19
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X1, X31
	035 Move X30, [X31+32]
	036 Call Object.DontDestroyOnLoad, X0
	037 Return 
	038 Move X20, [X31+16]
	039 Move X19, [X31+24]
	040 Move X30, [X31+32]
	041 Return 

Method: System.Void OnDisable()

Disassembly:
	0x01E48CC0 BL 0x1990590
	0x01E48CC4 SUB X31, X31, 0x50
	0x01E48CC8 STP X30, X23, [X31 + 0x20]
	0x01E48CCC STP X22, X21, [X31 + 0x30]
	0x01E48CD0 STP X20, X19, [X31 + 0x40]
	0x01E48CD4 ADRP X21, 0x2590000
	0x01E48CD8 LDRB W8, [X21 + 0xFD8]
	0x01E48CDC MOV W19, W1
	0x01E48CE0 MOV X20, X0
	0x01E48CE4 TBNZ X8, 0x0, 0x1E48D14
	0x01E48CE8 ADRP X0, 0x22B3000
	0x01E48CEC LDR X0, [X0 + 0xBB8]
	0x01E48CF0 BL 0x1C16CF4
	0x01E48CF4 ADRP X0, 0x22B3000
	0x01E48CF8 LDR X0, [X0 + 0xF00]
	0x01E48CFC BL 0x1C16CF4
	0x01E48D00 ADRP X0, 0x22B3000
	0x01E48D04 LDR X0, [X0 + 0xF08]
	0x01E48D08 BL 0x1C16CF4
	0x01E48D0C MOVZ W8, 0x1
	0x01E48D10 STRB W8, [X21 + 0xFD8]
	0x01E48D14 ADRP X22, 0x22B3000
	0x01E48D18 LDR X22, [X22 + 0xF08]
	0x01E48D1C AND W8, W19, 0xFFFF
	0x01E48D20 CMP W8, 0x8
	0x01E48D24 STRB W31, [X31 + 0x14]
	0x01E48D28 STR W31, [X31 + 0x10]
	0x01E48D2C STR X31, [X31 + 0x18]
	0x01E48D30 B.NE 0x1E48E28
	0x01E48D34 ADRP X21, 0x22B3000
	0x01E48D38 LDR X21, [X21 + 0xBB8]
	0x01E48D3C LDR X0, [X21]
	0x01E48D40 LDR W8, [X0 + 0xE0]
	0x01E48D44 CBNZ W8, 0x1E48D50
	0x01E48D48 BL 0x1C16DFC
	0x01E48D4C LDR X0, [X21]
	0x01E48D50 LDR X8, [X0 + 0xB8]
	0x01E48D54 LDR X19, [X8 + 0x8]
	0x01E48D58 STRB W31, [X31 + 0x14]
	0x01E48D5C ADD X1, X31, 0x14
	0x01E48D60 MOV X0, X19
	0x01E48D64 MOV X2, X31
	0x01E48D68 BL 0x33DE64C
	0x01E48D6C LDR X0, [X21]
	0x01E48D70 LDR W8, [X0 + 0xE0]
	0x01E48D74 CBNZ W8, 0x1E48D7C
	0x01E48D78 BL 0x1C16DFC
	0x01E48D7C CBZ X20, 0x1E48E54
	0x01E48D80 LDR X8, [X21]
	0x01E48D84 LDR X8, [X8 + 0xB8]
	0x01E48D88 LDR X1, [X8 + 0x8]
	0x01E48D8C MOVZ W3, 0x8
	0x01E48D90 MOV X0, X20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x2591000
	006 Move X20, 0x22B4000
	007 Move W8, [X21+4042]
	008 Move X20, [X20+3672]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x22B4000
	015 Move X0, [X0+3672]
	016 Call 0x1C17CF4
	017 Move X0, 0x22B4000
	018 Move X0, [X0+3680]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+4042], W8
	022 Move X0, X19
	023 Call ConnectionHandler.StopFallbackSendAckThread, X0
	024 Move X8, [X20]
	025 Move X8, [X8+184]
	026 Move W8, [X8]
	027 Compare W8, 0
	028 JumpIfEqual {65}
	029 Move X0, [X19+32]
	030 Compare X0, 0
	031 JumpIfEqual {51}
	032 Move X8, [X0+16]
	033 Compare X8, 0
	034 JumpIfEqual {51}
	035 Move W8, [X0+144]
	036 Compare W8, 0
	037 JumpIfEqual {51}
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Move W1, 20
	040 Call LoadBalancingClient.Disconnect, X0, X1
	041 Move X8, [X19+32]
	042 Compare X8, 0
	043 JumpIfEqual {70}
	044 Move X0, [X8+16]
	045 Compare X0, 0
	046 JumpIfEqual {70}
	047 Move X8, [X0]
	048 Move X9, [X8+456]
	049 Move X1, [X8+464]
	050 NotImplemented "Instruction BLR not yet implemented."
	051 Move X8, 0x22B4000
	052 Move X8, [X8+3680]
	053 Move X0, [X8]
	054 Move W8, [X0+224]
	055 Compare W8, 0
	056 JumpIfNotEqual {58}
	057 Call 0x1C17DFC
	058 Move X20, [X31+16]
	059 Move X19, [X31+24]
	060 Move X0, X31
	061 Move X30, [X31+32]
	062 Move X21, [X31+40]
	063 Call SupportClass.StopAllBackgroundCalls
	064 Return 
	065 Move X20, [X31+16]
	066 Move X19, [X31+24]
	067 Move X30, [X31+32]
	068 Move X21, [X31+40]
	069 Return 
	070 Call 0x1C17F20

Method: System.Void OnApplicationQuit()

Disassembly:
	0x01E48FDC ADD X1, X31, 0x8
	0x01E48FE0 MOV V0.16B, V10.16B
	0x01E48FE4 MOV X0, X21
	0x01E48FE8 MOV X2, X31
	0x01E48FEC BL 0x3506860
	0x01E48FF0 ADD X1, X31, 0x8
	0x01E48FF4 MOV V0.16B, V9.16B
	0x01E48FF8 MOV X0, X21
	0x01E48FFC MOV X2, X31
	0x01E49000 BL 0x3506860
	0x01E49004 ADD X1, X31, 0x8
	0x01E49008 MOV V0.16B, V8.16B
	0x01E4900C MOV X0, X21
	0x01E49010 MOV X2, X31
	0x01E49014 BL 0x3506860
	0x01E49018 CBZ X20, 0x1E49080
	0x01E4901C MOVZ W3, 0x10
	0x01E49020 MOV X0, X20
	0x01E49024 MOV X1, X21

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x2591000
	005 Move X20, 0x22B4000
	006 Move W8, [X19+4043]
	007 Move X20, [X20+3672]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x22B4000
	013 Move X0, [X0+3672]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+4043], W8
	017 Move X8, [X20]
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move W9, 1
	021 Move X8, [X8+184]
	022 Move [X8], W9
	023 Move X30, [X31+32]
	024 Return 

Method: System.Void OnApplicationPause(System.Boolean pause)

Disassembly:
	0x01E49028 MOV W2, W31
	0x01E4902C MOV X4, X31
	0x01E49030 BL 0x3517F60
	0x01E49034 MOV X21, X31
	0x01E49038 LDRB W8, [X31 + 0xC]
	0x01E4903C CBZ W8, 0x1E4904C
	0x01E49040 MOV X0, X19
	0x01E49044 MOV X1, X31
	0x01E49048 BL 0x33E14E4
	0x01E4904C CBNZ X21, 0x1E49078
	0x01E49050 LDP X20, X19, [X31 + 0x40]
	0x01E49054 LDP X30, X21, [X31 + 0x30]
	0x01E49058 LDP D9, D8, [X31 + 0x20]
	0x01E4905C LDP D11, D10, [X31 + 0x10]
	0x01E49060 MOVZ W0, 0x10
	0x01E49064 ADD X31, X31, 0x50
	0x01E49068 RET
	0x01E4906C BL 0x1C16F20
	0x01E49070 MOV X0, X19
	0x01E49074 BL 0x1C171E0
	0x01E49078 MOV X0, X21
	0x01E4907C BL 0x1C16F18
	0x01E49080 BL 0x1C16F20
	0x01E49084 B 0x1E49098
	0x01E49088 B 0x1E49098
	0x01E4908C B 0x1E49098
	0x01E49090 B 0x1E49098
	0x01E49094 B 0x1E49098
	0x01E49098 MOV X20, X0
	0x01E4909C CMP W1, 0x1
	0x01E490A0 B.NE 0x1E490B8
	0x01E490A4 MOV X0, X20
	0x01E490A8 BL 0x3EB1AD0
	0x01E490AC LDR X21, [X0]
	0x01E490B0 BL 0x3EB1AE0
	0x01E490B4 B 0x1E49038
	0x01E490B8 MOV X21, X31
	0x01E490BC B 0x1E490C4
	0x01E490C0 MOV X20, X0
	0x01E490C4 LDRB W8, [X31 + 0xC]
	0x01E490C8 CBZ W8, 0x1E490D8
	0x01E490CC MOV X0, X19

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x2590000
	008 Move X22, 0x22B3000
	009 Move W8, [X23+4044]
	010 Move X22, [X22+3672]
	011 Move W20, W1
	012 Move X19, X0
	013 And W21, W1, 1
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0x22B3000
	019 Move X0, [X0+3672]
	020 Call 0x1C17CF4
	021 Move X0, 0x22B3000
	022 Move X0, [X0+3728]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X23+4044], W8
	026 Move X8, [X22]
	027 Move X9, [X8+184]
	028 Move X8, 0x22B3000
	029 Move X8, [X8+3728]
	030 Move [X9+1], W21
	031 Move TEMP, X20
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfNotEqual {48}
	035 Move W10, 1
	036 Move [X9+2], W10
	037 Move X1, [X8]
	038 Move X0, X19
	039 Move X20, [X31+32]
	040 Move X19, [X31+40]
	041 Move X22, [X31+16]
	042 Move X21, [X31+24]
	043 Move X2, X31
	044 Move X30, [X31+48]
	045 Move X23, [X31+56]
	046 Call MonoBehaviour.CancelInvoke, X0, X1
	047 Return 
	048 Move X1, [X8]
	049 Move X0, X19
	050 Move X20, [X31+32]
	051 Move X19, [X31+40]
	052 Move X22, [X31+16]
	053 Move X21, [X31+24]
	054 Move S0, 5
	055 Move X2, X31
	056 Move X30, [X31+48]
	057 Move X23, [X31+56]
	058 Call MonoBehaviour.Invoke, X0, X1, V0
	059 Return 

Method: System.Void ResetAppPauseRecent()

Disassembly:
	0x01E490D0 MOV X1, X31
	0x01E490D4 BL 0x33E14E4
	0x01E490D8 CBNZ X21, 0x1E490E4
	0x01E490DC MOV X0, X20
	0x01E490E0 BL 0x1D2C690
	0x01E490E4 MOV X0, X21
	0x01E490E8 BL 0x1C16F18
	0x01E490EC BL 0x1990590
	0x01E490F0 SUB X31, X31, 0x60
	0x01E490F4 STP X30, X23, [X31 + 0x30]
	0x01E490F8 STP X22, X21, [X31 + 0x40]
	0x01E490FC STP X20, X19, [X31 + 0x50]
	0x01E49100 ADRP X21, 0x258F000
	0x01E49104 LDRB W8, [X21 + 0xFDA]
	0x01E49108 MOV W19, W1
	0x01E4910C MOV X20, X0
	0x01E49110 TBNZ X8, 0x0, 0x1E49140
	0x01E49114 ADRP X0, 0x22B2000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x2590000
	005 Move X20, 0x22B3000
	006 Move W8, [X19+4045]
	007 Move X20, [X20+3672]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x22B3000
	013 Move X0, [X0+3672]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+4045], W8
	017 Move X8, [X20]
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X8, [X8+184]
	021 Move [X8+2], W31
	022 Move X30, [X31+32]
	023 Return 

Method: System.Void OnApplicationFocus(System.Boolean focus)

Disassembly:
	0x01E49118 LDR X0, [X0 + 0xBB8]
	0x01E4911C BL 0x1C16CF4
	0x01E49120 ADRP X0, 0x22B2000
	0x01E49124 LDR X0, [X0 + 0xF00]
	0x01E49128 BL 0x1C16CF4
	0x01E4912C ADRP X0, 0x22AB000
	0x01E49130 LDR X0, [X0 + 0x5A8]
	0x01E49134 BL 0x1C16CF4
	0x01E49138 MOVZ W8, 0x1
	0x01E4913C STRB W8, [X21 + 0xFDA]
	0x01E49140 ADRP X22, 0x22AB000
	0x01E49144 ADRP X21, 0x258F000
	0x01E49148 LDR X22, [X22 + 0x5A8]
	0x01E4914C LDRB W8, [X21 + 0x793]
	0x01E49150 STP X31, X31, [X31 + 0x20]
	0x01E49154 STRB W31, [X31 + 0x1C]
	0x01E49158 STR W31, [X31 + 0x18]
	0x01E4915C CBNZ W8, 0x1E49174
	0x01E49160 ADRP X0, 0x22AB000
	0x01E49164 LDR X0, [X0 + 0x5A8]
	0x01E49168 BL 0x1C16CF4
	0x01E4916C MOVZ W8, 0x1
	0x01E49170 STRB W8, [X21 + 0x793]
	0x01E49174 LDR X0, [X22]
	0x01E49178 LDR X8, [X0 + 0xB8]
	0x01E4917C LDR V0, [X8]
	0x01E49180 AND W8, W19, 0xFFFF
	0x01E49184 CMP W8, 0x10
	0x01E49188 STR V0, [X31 + 0x2]
	0x01E4918C B.NE 0x1E492B8
	0x01E49190 ADRP X21, 0x22B2000
	0x01E49194 LDR X21, [X21 + 0xBB8]
	0x01E49198 LDR X0, [X21]
	0x01E4919C LDR W8, [X0 + 0xE0]
	0x01E491A0 CBNZ W8, 0x1E491AC
	0x01E491A4 BL 0x1C16DFC
	0x01E491A8 LDR X0, [X21]
	0x01E491AC LDR X8, [X0 + 0xB8]
	0x01E491B0 LDR X19, [X8 + 0x10]
	0x01E491B4 STRB W31, [X31 + 0x1C]
	0x01E491B8 ADD X1, X31, 0x1C
	0x01E491BC MOV X0, X19
	0x01E491C0 MOV X2, X31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x2590000
	007 Move X21, 0x22B3000
	008 Move W8, [X22+4046]
	009 Move X21, [X21+3672]
	010 Move W20, W1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x22B3000
	017 Move X0, [X0+3672]
	018 Call 0x1C17CF4
	019 Move X0, 0x22B3000
	020 Move X0, [X0+3736]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+4046], W8
	024 Move X8, [X21]
	025 NotImplemented "Instruction ORN not yet implemented."
	026 And W10, W10, 1
	027 Move X9, [X8+184]
	028 Move X8, 0x22B3000
	029 Move X8, [X8+3736]
	030 Move [X9+3], W10
	031 Move TEMP, X20
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfNotEqual {46}
	035 Move X1, [X8]
	036 Move X0, X19
	037 Move X20, [X31+32]
	038 Move X19, [X31+40]
	039 Move X22, [X31+16]
	040 Move X21, [X31+24]
	041 Move S0, 5
	042 Move X2, X31
	043 Move X30, [X31+48]
	044 Call MonoBehaviour.Invoke, X0, X1, V0
	045 Return 
	046 Move W10, 1
	047 Move [X9+4], W10
	048 Move X1, [X8]
	049 Move X0, X19
	050 Move X20, [X31+32]
	051 Move X19, [X31+40]
	052 Move X22, [X31+16]
	053 Move X21, [X31+24]
	054 Move X2, X31
	055 Move X30, [X31+48]
	056 Call MonoBehaviour.CancelInvoke, X0, X1
	057 Return 

Method: System.Void ResetAppOutOfFocusRecent()

Disassembly:
	0x01E491C4 BL 0x33DE64C
	0x01E491C8 LDR X0, [X21]
	0x01E491CC LDR W8, [X0 + 0xE0]
	0x01E491D0 CBNZ W8, 0x1E491D8
	0x01E491D4 BL 0x1C16DFC
	0x01E491D8 CBZ X20, 0x1E492E4
	0x01E491DC LDR X8, [X21]
	0x01E491E0 LDR X8, [X8 + 0xB8]
	0x01E491E4 LDR X1, [X8 + 0x10]
	0x01E491E8 MOVZ W3, 0x10
	0x01E491EC MOV X0, X20
	0x01E491F0 MOV W2, W31
	0x01E491F4 MOV X4, X31
	0x01E491F8 BL 0x351EE98
	0x01E491FC STR W31, [X31 + 0x18]
	0x01E49200 ADRP X9, 0x22B2000
	0x01E49204 LDR X8, [X21]
	0x01E49208 LDR X9, [X9 + 0xF00]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x2590000
	005 Move X20, 0x22B3000
	006 Move W8, [X19+4047]
	007 Move X20, [X20+3672]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x22B3000
	013 Move X0, [X0+3672]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+4047], W8
	017 Move X8, [X20]
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X8, [X8+184]
	021 Move [X8+4], W31
	022 Move X30, [X31+32]
	023 Return 

Method: System.Boolean IsNetworkReachableUnity()

Disassembly:
	0x01E4920C LDR X8, [X8 + 0xB8]
	0x01E49210 LDR X0, [X9]
	0x01E49214 LDR X20, [X8 + 0x10]
	0x01E49218 LDR W9, [X0 + 0xE0]
	0x01E4921C CBNZ W9, 0x1E49224
	0x01E49220 BL 0x1C16DFC
	0x01E49224 ADD X23, X31, 0x20
	0x01E49228 ORR X0, X23, 0xF
	0x01E4922C ADD X2, X31, 0x18
	0x01E49230 MOV X1, X20
	0x01E49234 MOV X3, X31
	0x01E49238 BL 0x3506B64
	0x01E4923C LDR X8, [X21]
	0x01E49240 LDR X8, [X8 + 0xB8]
	0x01E49244 LDR X1, [X8 + 0x10]
	0x01E49248 ADD X0, X31, 0x20
	0x01E4924C ADD X2, X31, 0x18
	0x01E49250 MOV X3, X31
	0x01E49254 BL 0x3506B64
	0x01E49258 LDR X8, [X21]
	0x01E4925C ORR X0, X23, 0x7
	0x01E49260 LDR X8, [X8 + 0xB8]
	0x01E49264 LDR X1, [X8 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x2590000
	005 Move X20, 0x22AB000
	006 Move W8, [X19+4048]
	007 Move X20, [X20+2416]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x22AB000
	013 Move X0, [X0+2416]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+4048], W8
	017 Move X0, [X20]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {22}
	021 Call 0x1C17DFC
	022 Move X0, X31
	023 Call Application.get_internetReachability
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 NotImplemented "Instruction CMP not yet implemented."
	027 NotImplemented "Instruction CSET not yet implemented."
	028 Move X30, [X31+32]
	029 Return X0

Method: System.Void StartFallbackSendAckThread()

Disassembly:
	0x01E45F38 BL 0x1C16CF4
	0x01E45F3C MOVZ W8, 0x1
	0x01E45F40 STRB W8, [X21 + 0xFE9]
	0x01E45F44 ADRP X24, 0x22B6000
	0x01E45F48 LDR X21, [X20 + 0xA0]!
	0x01E45F4C LDR X24, [X24 + 0xCB0]
	0x01E45F50 MOV X0, X21
	0x01E45F54 MOV X1, X19
	0x01E45F58 MOV X2, X31
	0x01E45F5C BL 0x33C0DE4
	0x01E45F60 CBZ X0, 0x1E45F80
	0x01E45F64 LDR X23, [X24]
	0x01E45F68 MOV X22, X0
	0x01E45F6C MOV X1, X23
	0x01E45F70 BL 0x1C16E00
	0x01E45F74 MOV X1, X0
	0x01E45F78 CBNZ X0, 0x1E45F84
	0x01E45F7C B 0x1E45FB0
	0x01E45F80 MOV X1, X31
	0x01E45F84 MOV X0, X20
	0x01E45F88 MOV X2, X21
	0x01E45F8C BL 0x1C24138
	0x01E45F90 CMP X21, X0
	0x01E45F94 MOV X21, X0
	0x01E45F98 B.NE 0x1E45F50
	0x01E45F9C LDP X20, X19, [X31 + 0x30]
	0x01E45FA0 LDP X22, X21, [X31 + 0x20]
	0x01E45FA4 LDP X24, X23, [X31 + 0x10]
	0x01E45FA8 LDR X30, [X31], #0x40
	0x01E45FAC RET
	0x01E45FB0 MOV X0, X22
	0x01E45FB4 MOV X1, X23
	0x01E45FB8 BL 0x1C171E0
	0x01E45FBC STR X30, [X31 - 0x30]!
	0x01E45FC0 STP X22, X21, [X31 + 0x10]
	0x01E45FC4 STP X20, X19, [X31 + 0x20]
	0x01E45FC8 ADRP X22, 0x2594000
	0x01E45FCC ADRP X21, 0x22B6000
	0x01E45FD0 LDRB W8, [X22 + 0x1F]
	0x01E45FD4 LDR X21, [X21 + 0xD08]
	0x01E45FD8 MOV X19, X1
	0x01E45FDC MOV X20, X0
	0x01E45FE0 TBNZ X8, 0x0, 0x1E46004
	0x01E45FE4 ADRP X0, 0x22B6000
	0x01E45FE8 LDR X0, [X0 + 0xD08]
	0x01E45FEC BL 0x1C16CF4
	0x01E45FF0 ADRP X0, 0x22B6000
	0x01E45FF4 LDR X0, [X0 + 0xD10]
	0x01E45FF8 BL 0x1C16CF4
	0x01E45FFC MOVZ W8, 0x1
	0x01E46000 STRB W8, [X22 + 0x1F]
	0x01E46004 LDR X0, [X21]
	0x01E46008 LDR X20, [X20 + 0x170]
	0x01E4600C BL 0x1C16F10
	0x01E46010 MOV X1, X31
	0x01E46014 MOV X21, X0
	0x01E46018 BL 0x33BDD8C
	0x01E4601C MOVZ W8, 0x1
	0x01E46020 STR X19, [X21 + 0x10]
	0x01E46024 STRB W8, [X21 + 0x18]
	0x01E46028 CBZ X20, 0x1E46050
	0x01E4602C ADRP X8, 0x22B5000
	0x01E46030 LDR X8, [X8 + 0xD10]
	0x01E46034 MOV X0, X20
	0x01E46038 MOV X1, X21

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x2594000
	006 Move W8, [X20+4049]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {26}
	012 Move X0, 0x22B7000
	013 Move X0, [X0+3184]
	014 Call 0x1C17CF4
	015 Move X0, 0x22B7000
	016 Move X0, [X0+3192]
	017 Call 0x1C17CF4
	018 Move X0, 0x22B7000
	019 Move X0, [X0+3200]
	020 Call 0x1C17CF4
	021 Move X0, 0x22B7000
	022 Move X0, [X0+3208]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X20+4049], W8
	026 Move X0, X31
	027 Call RuntimeUnityFlagsSetup.get_IsUNITY_WEBGL
	028 Move TEMP, X0
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfNotEqual {44}
	032 Move W8, [X19+52]
	033 Compare W8, 0
	034 JumpIfNotEqual {70}
	035 Move X8, 0x22B7000
	036 Move X8, [X8+3208]
	037 Move X0, X19
	038 Move X2, X31
	039 Move X1, [X8]
	040 Move X8, -20291584
	041 Move V0, [X8+512]
	042 Move V1, V0
	043 Call MonoBehaviour.InvokeRepeating, X0, X1, V0, V1
	044 Move X8, [X19+64]
	045 Compare X8, 0
	046 JumpIfNotEqual {72}
	047 Move X8, 0x22B7000
	048 Move X8, [X8+3192]
	049 Move X0, [X8]
	050 Call 0x1C17F10
	051 Move X8, 0x22B7000
	052 Move X8, [X8+3184]
	053 Move X1, X19
	054 Move X3, X31
	055 Move X20, X0
	056 Move X2, [X8]
	057 Call TimerCallback..ctor, X0, X1, X2
	058 Move X8, 0x22B7000
	059 Move X8, [X8+3200]
	060 Move X0, [X8]
	061 Call 0x1C17F10
	062 Move W3, 50
	063 Move W4, 50
	064 Move X1, X20
	065 Move X2, X31
	066 Move X5, X31
	067 Move X21, X0
	068 Call Timer..ctor, X0, X1, X2, X3, X4
	069 Move [X19+64], X21
	070 Move W8, 1
	071 Move [X19+52], W8
	072 Move X20, [X31+16]
	073 Move X19, [X31+24]
	074 Move X30, [X31+32]
	075 Move X21, [X31+40]
	076 Return 

Method: System.Void StopFallbackSendAckThread()

Disassembly:
	0x01E460EC CMP W8, 0x0
	0x01E460F0 B.GT 0x1E4612C
	0x01E460F4 LDRB W8, [X19 + 0x198]
	0x01E460F8 CBNZ W8, 0x1E4612C
	0x01E460FC ADRP X22, 0x22B5000
	0x01E46100 LDR X22, [X22 + 0xD18]
	0x01E46104 LDR X0, [X22]
	0x01E46108 LDR W8, [X0 + 0xE0]
	0x01E4610C CBNZ W8, 0x1E46118
	0x01E46110 BL 0x1C16DFC
	0x01E46114 LDR X0, [X22]
	0x01E46118 LDR X8, [X0 + 0xB8]
	0x01E4611C LDRH W9, [X8 + 0x4]
	0x01E46120 LDR W8, [X8]
	0x01E46124 STRH W9, [X21 + 0x4]
	0x01E46128 STR W8, [X21]
	0x01E4612C LDR X0, [X20 + 0x40]
	0x01E46130 CBZ X0, 0x1E4619C
	0x01E46134 MOV X1, X31
	0x01E46138 BL 0x322B5E4
	0x01E4613C CBZ X0, 0x1E4619C
	0x01E46140 ADRP X8, 0x22B5000
	0x01E46144 LDR X8, [X8 + 0xD28]
	0x01E46148 MOV X2, X31
	0x01E4614C LDR X1, [X8]
	0x01E46150 BL 0x322693C
	0x01E46154 TBZ X0, 0x0, 0x1E46184
	0x01E46158 LDR X0, [X20 + 0x50]
	0x01E4615C CBZ X0, 0x1E46168
	0x01E46160 MOV X1, X31
	0x01E46164 BL 0x322B8DC
	0x01E46168 MOV X1, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x2593000
	005 Move W8, [X20+4050]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x22B6000
	012 Move X0, [X0+3208]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+4050], W8
	016 Move X0, X31
	017 Call RuntimeUnityFlagsSetup.get_IsUNITY_WEBGL
	018 Move TEMP, X0
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfNotEqual {31}
	022 Move W8, [X19+52]
	023 Compare W8, 0
	024 JumpIfEqual {37}
	025 Move X8, 0x22B6000
	026 Move X8, [X8+3208]
	027 Move X0, X19
	028 Move X2, X31
	029 Move X1, [X8]
	030 Call MonoBehaviour.CancelInvoke, X0, X1
	031 Move X0, [X19+64]
	032 Compare X0, 0
	033 JumpIfEqual {37}
	034 Move X1, X31
	035 Call Timer.Dispose, X0
	036 Move [X19+64], X31
	037 Move [X19+52], W31
	038 Move X20, [X31+16]
	039 Move X19, [X31+24]
	040 Move X30, [X31+32]
	041 Return 

Method: System.Void RealtimeFallbackInvoke()

Disassembly:
	0x01E49268 ADD X2, X31, 0x18

ISIL:
No ISIL was generated
Method: System.Void RealtimeFallback(System.Object state = null)

Disassembly:
	0x01E4926C MOV X3, X31
	0x01E49270 BL 0x3506B64
	0x01E49274 LDR X8, [X21]
	0x01E49278 ORR X0, X23, 0xF
	0x01E4927C LDR X8, [X8 + 0xB8]
	0x01E49280 LDR X1, [X8 + 0x10]
	0x01E49284 ADD X2, X31, 0x18
	0x01E49288 MOV X3, X31
	0x01E4928C BL 0x3506B64
	0x01E49290 MOV X20, X31
	0x01E49294 LDRB W8, [X31 + 0x1C]
	0x01E49298 CBZ W8, 0x1E492A8
	0x01E4929C MOV X0, X19
	0x01E492A0 MOV X1, X31
	0x01E492A4 BL 0x33E14E4
	0x01E492A8 CBNZ X20, 0x1E492DC
	0x01E492AC LDR V0, [X31 + 0x2]
	0x01E492B0 LDR X0, [X22]
	0x01E492B4 B 0x1E492BC
	0x01E492B8 LDR V0, [X31 + 0x2]
	0x01E492BC ADD X1, X31, 0x0
	0x01E492C0 STR V0, [X31]
	0x01E492C4 BL 0x1C16E04
	0x01E492C8 LDP X20, X19, [X31 + 0x50]
	0x01E492CC LDP X22, X21, [X31 + 0x40]
	0x01E492D0 LDP X30, X23, [X31 + 0x30]
	0x01E492D4 ADD X31, X31, 0x60
	0x01E492D8 RET
	0x01E492DC MOV X0, X20
	0x01E492E0 BL 0x1C16F18
	0x01E492E4 BL 0x1C16F20
	0x01E492E8 B 0x1E49304
	0x01E492EC B 0x1E49304
	0x01E492F0 B 0x1E49304
	0x01E492F4 B 0x1E49304
	0x01E492F8 B 0x1E49304
	0x01E492FC B 0x1E49304
	0x01E49300 B 0x1E49304
	0x01E49304 MOV X21, X0
	0x01E49308 CMP W1, 0x1
	0x01E4930C B.NE 0x1E49324
	0x01E49310 MOV X0, X21
	0x01E49314 BL 0x3EB1AD0
	0x01E49318 LDR X20, [X0]
	0x01E4931C BL 0x3EB1AE0
	0x01E49320 B 0x1E49294
	0x01E49324 MOV X20, X31
	0x01E49328 B 0x1E49330
	0x01E4932C MOV X21, X0
	0x01E49330 LDRB W8, [X31 + 0x1C]
	0x01E49334 CBZ W8, 0x1E49344
	0x01E49338 MOV X0, X19
	0x01E4933C MOV X1, X31
	0x01E49340 BL 0x33E14E4
	0x01E49344 CBNZ X20, 0x1E49350
	0x01E49348 MOV X0, X21
	0x01E4934C BL 0x1D2C690
	0x01E49350 MOV X0, X20
	0x01E49354 BL 0x1C16F18
	0x01E49358 BL 0x1990590
	0x01E4935C STP X30, X21, [X31 - 0x20]!
	0x01E49360 STP X20, X19, [X31 + 0x10]
	0x01E49364 ADRP X21, 0x258F000
	0x01E49368 ADRP X20, 0x22AA000
	0x01E4936C ADRP X19, 0x22B2000
	0x01E49370 LDRB W8, [X21 + 0xFDB]
	0x01E49374 LDR X20, [X20 + 0x618]
	0x01E49378 LDR X19, [X19 + 0xBB8]
	0x01E4937C TBNZ X8, 0x0, 0x1E493A0
	0x01E49380 ADRP X0, 0x22AA000
	0x01E49384 LDR X0, [X0 + 0x618]
	0x01E49388 BL 0x1C16CF4
	0x01E4938C ADRP X0, 0x22B2000
	0x01E49390 LDR X0, [X0 + 0xBB8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X0+32]
	005 Compare X8, 0
	006 JumpIfEqual {37}
	007 Move X19, X0
	008 Move X0, [X8+16]
	009 Compare X0, 0
	010 JumpIfEqual {28}
	011 Move W8, [X8+144]
	012 Compare W8, 0
	013 JumpIfEqual {28}
	014 NotImplemented "Instruction CMP not yet implemented."
	015 Move X1, X31
	016 Call PhotonPeer.get_ConnectionTime, X0
	017 Move X8, [X19+32]
	018 Compare X8, 0
	019 JumpIfEqual {91}
	020 Move W20, W0
	021 Move X0, [X8+16]
	022 Compare X0, 0
	023 JumpIfEqual {91}
	024 Move X1, X31
	025 Call PhotonPeer.get_LastSendOutgoingTime, X0
	026 Subtract W8, W20, W0
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Move X0, [X19+56]
	029 Compare X0, 0
	030 JumpIfEqual {91}
	031 Move W8, [X0+32]
	032 Compare W8, 0
	033 JumpIfEqual {36}
	034 Move X1, X31
	035 Call Stopwatch.Reset, X0
	036 Move [X19+54], W31
	037 Move X20, [X31+16]
	038 Move X19, [X31+24]
	039 Move X30, [X31+32]
	040 Return 
	041 Move W8, [X19+54]
	042 Compare W8, 0
	043 JumpIfNotEqual {54}
	044 Move X0, [X19+56]
	045 Compare X0, 0
	046 JumpIfEqual {91}
	047 Move X1, X31
	048 Call Stopwatch.Reset, X0
	049 Move X0, [X19+56]
	050 Compare X0, 0
	051 JumpIfEqual {91}
	052 Move X1, X31
	053 Call Stopwatch.Start, X0
	054 Move X0, [X19+56]
	055 Compare X0, 0
	056 JumpIfEqual {91}
	057 Move X1, X31
	058 Call Stopwatch.get_ElapsedMilliseconds, X0
	059 NotImplemented "Instruction LDRSW not yet implemented."
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Move W8, [X19+40]
	062 Compare W8, 0
	063 JumpIfEqual {37}
	064 Move X0, [X19+32]
	065 Compare X0, 0
	066 JumpIfEqual {91}
	067 Move X20, [X31+16]
	068 Move X19, [X31+24]
	069 Move W1, 17
	070 Move X30, [X31+32]
	071 Call LoadBalancingClient.Disconnect, X0, X1
	072 Return 
	073 Move W9, [X19+48]
	074 Move X8, [X19+32]
	075 Move W10, 1
	076 Move [X19+54], W10
	077 Add W9, W9, 1
	078 Move [X19+48], W9
	079 Compare X8, 0
	080 JumpIfEqual {91}
	081 Move X0, [X8+16]
	082 Compare X0, 0
	083 JumpIfEqual {91}
	084 Move X8, [X0]
	085 Move X20, [X31+16]
	086 Move X19, [X31+24]
	087 Move X2, [X8+520]
	088 Move X1, [X8+528]
	089 Move X30, [X31+32]
	090 CallNoReturn X2
	091 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x01E49394 BL 0x1C16CF4
	0x01E49398 MOVZ W8, 0x1
	0x01E4939C STRB W8, [X21 + 0xFDB]
	0x01E493A0 LDR X0, [X20]
	0x01E493A4 MOVZ W1, 0xC
	0x01E493A8 BL 0x1C16D6C
	0x01E493AC LDR X8, [X19]
	0x01E493B0 MOVZ W1, 0x8
	0x01E493B4 LDR X8, [X8 + 0xB8]
	0x01E493B8 STR X0, [X8]
	0x01E493BC LDR X0, [X20]
	0x01E493C0 BL 0x1C16D6C
	0x01E493C4 LDR X8, [X19]
	0x01E493C8 MOVZ W1, 0x10
	0x01E493CC LDR X8, [X8 + 0xB8]
	0x01E493D0 STR X0, [X8 + 0x8]
	0x01E493D4 LDR X0, [X20]
	0x01E493D8 BL 0x1C16D6C
	0x01E493DC LDR X8, [X19]
	0x01E493E0 LDP X20, X19, [X31 + 0x10]
	0x01E493E4 LDR X8, [X8 + 0xB8]
	0x01E493E8 STR X0, [X8 + 0x10]
	0x01E493EC LDP X30, X21, [X31], #0x20
	0x01E493F0 RET
	0x01E493F4 STR X30, [X31 - 0x50]!
	0x01E493F8 STP X26, X25, [X31 + 0x10]
	0x01E493FC STP X24, X23, [X31 + 0x20]
	0x01E49400 STP X22, X21, [X31 + 0x30]
	0x01E49404 STP X20, X19, [X31 + 0x40]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x2590000
	006 Move X20, 0x22B3000
	007 Move W8, [X21+4051]
	008 Move X20, [X20+1800]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x22B3000
	015 Move X0, [X0+1800]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+4051], W8
	019 Move W8, 0xEA60
	020 Move W9, 1
	021 Move [X19+40], W31
	022 Move [X19+44], W8
	023 Move [X19+53], W9
	024 Move X0, [X20]
	025 Call 0x1C17F10
	026 Move X1, X31
	027 Move X20, X0
	028 Call Stopwatch..ctor, X0
	029 Move [X19+56], X20
	030 Move X0, X19
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X1, X31
	034 Move X30, [X31+32]
	035 Move X21, [X31+40]
	036 Call MonoBehaviour..ctor, X0
	037 Return 

