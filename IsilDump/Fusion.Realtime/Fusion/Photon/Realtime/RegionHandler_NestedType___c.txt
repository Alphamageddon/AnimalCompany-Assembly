Type: Fusion.Photon.Realtime.RegionHandler/<>c

Method: System.Void .cctor()

Disassembly:
	0x01E5E37C MOVZ W9, 0x1
	0x01E5E380 STRB W9, [X8 + 0x14]
	0x01E5E384 CBZ X0, 0x1E5E448
	0x01E5E388 LDR X8, [X0]
	0x01E5E38C LDP X9, X1, [X8 + 0x1A8]
	0x01E5E390 BLR X9
	0x01E5E394 LDR X8, [X19 + 0x20]
	0x01E5E398 CBZ X8, 0x1E5E448
	0x01E5E39C LDR X0, [X8 + 0x28]
	0x01E5E3A0 CBZ X0, 0x1E5E448
	0x01E5E3A4 LDR W9, [X0 + 0x18]
	0x01E5E3A8 CMP W9, 0x2
	0x01E5E3AC B.LT 0x1E5E40C
	0x01E5E3B0 LDR W9, [X19 + 0x2C]
	0x01E5E3B4 CMP W9, 0x1
	0x01E5E3B8 B.LT 0x1E5E40C
	0x01E5E3BC MOV X1, X31
	0x01E5E3C0 BL 0x35DF194
	0x01E5E3C4 LDR X8, [X19 + 0x20]
	0x01E5E3C8 STR W0, [X19 + 0x48]
	0x01E5E3CC CBZ X8, 0x1E5E448
	0x01E5E3D0 LDR X0, [X8 + 0x28]
	0x01E5E3D4 MOV X1, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x257C000
	005 Move X20, 0x229F000
	006 Move W8, [X19+132]
	007 Move X20, [X20+2104]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x229F000
	013 Move X0, [X0+2104]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+132], W8
	017 Move X0, [X20]
	018 Call 0x1C17F10
	019 Move X1, X31
	020 Move X19, X0
	021 Call Object..ctor, X0
	022 Move X8, [X20]
	023 Move X8, [X8+184]
	024 Move [X8], X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Return 

Method: System.Void .ctor()

Disassembly:
	0x01E5E3D8 BL 0x35DF820
	0x01E5E3DC LDR W9, [X19 + 0x28]

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Int32 <get_BestRegion>b__8_0(Fusion.Photon.Realtime.Region a, Fusion.Photon.Realtime.Region b)

Disassembly:
	0x01E5E3E0 LDR W10, [X19 + 0x48]
	0x01E5E3E4 LDR X8, [X19 + 0x20]
	0x01E5E3E8 SUB W9, W9, W0
	0x01E5E3EC ADD W9, W10, W9
	0x01E5E3F0 STP W0, W9, [X19 + 0x4C]
	0x01E5E3F4 CBZ X8, 0x1E5E448
	0x01E5E3F8 LDR X10, [X8 + 0x30]
	0x01E5E3FC CBZ X10, 0x1E5E448
	0x01E5E400 LDR W11, [X19 + 0x2C]
	0x01E5E404 SDIV W9, W9, W11
	0x01E5E408 STR W9, [X10 + 0x28]
	0x01E5E40C LDR X9, [X8 + 0x18]

ISIL:
	001 Move [X31-16], X30
	002 Compare X1, 0
	003 JumpIfEqual {14}
	004 Move W8, [X1+40]
	005 Move [X31+12], W8
	006 Compare X2, 0
	007 JumpIfEqual {14}
	008 Move W1, [X2+40]
	009 Add X0, X31, 12
	010 Move X2, X31
	011 Call Int32.CompareTo, X0, X1
	012 Move X30, [X31+16]
	013 Return X0
	014 Call 0x1C17F20

