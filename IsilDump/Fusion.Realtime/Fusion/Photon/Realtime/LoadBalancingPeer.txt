Type: Fusion.Photon.Realtime.LoadBalancingPeer

Method: System.Type get_PingImplementation()

Disassembly:
	0x01E564F4 BL 0x1C16F20
	0x01E564F8 STP X30, X21, [X31 - 0x20]!
	0x01E564FC STP X20, X19, [X31 + 0x10]
	0x01E56500 ADRP X21, 0x2583000
	0x01E56504 ADRP X20, 0x229D000
	0x01E56508 LDRB W8, [X21 + 0x5F]
	0x01E5650C LDR X20, [X20 + 0xAC8]
	0x01E56510 MOV X19, X0
	0x01E56514 TBNZ X8, 0x0, 0x1E5652C
	0x01E56518 ADRP X0, 0x229D000
	0x01E5651C LDR X0, [X0 + 0xAC8]
	0x01E56520 BL 0x1C16CF4
	0x01E56524 MOVZ W8, 0x1
	0x01E56528 STRB W8, [X21 + 0x5F]
	0x01E5652C MOVZ W8, 0x101
	0x01E56530 MOVZ W21, 0x1
	0x01E56534 STRH W8, [X19 + 0x10]
	0x01E56538 STRB W21, [X19 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x2584000
	005 Move X20, 0x22A7000
	006 Move W8, [X19+67]
	007 Move X20, [X20+776]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x22A7000
	013 Move X0, [X0+776]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+67], W8
	017 Move X8, [X20]
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X8, [X8+184]
	021 Move X0, [X8]
	022 Move X30, [X31+32]
	023 Return X0

Method: System.Void set_PingImplementation(System.Type value)

Disassembly:
	0x01E5653C LDR X0, [X20]
	0x01E56540 MOV W1, W31
	0x01E56544 BL 0x1C16D6C
	0x01E56548 STR X0, [X19 + 0x30]
	0x01E5654C STRB W21, [X19 + 0x44]
	0x01E56550 MOV X0, X19
	0x01E56554 LDP X20, X19, [X31 + 0x10]
	0x01E56558 MOV X1, X31
	0x01E5655C LDP X30, X21, [X31], #0x20
	0x01E56560 B 0x33BDD8C
	0x01E56564 LDRB W0, [X0 + 0x11]
	0x01E56568 RET
	0x01E5656C LDRB W0, [X0 + 0x10]
	0x01E56570 RET
	0x01E56574 LDRB W0, [X0 + 0x20]
	0x01E56578 RET
	0x01E5657C LDRB W0, [X0 + 0x44]
	0x01E56580 RET
	0x01E56584 STR X30, [X31 - 0x30]!

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x2584000
	006 Move X21, 0x22A7000
	007 Move W8, [X20+68]
	008 Move X21, [X21+776]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x22A7000
	015 Move X0, [X0+776]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+68], W8
	019 Move X8, [X21]
	020 Move X8, [X8+184]
	021 Move [X8], X19
	022 Move X20, [X31+16]
	023 Move X19, [X31+24]
	024 Move X30, [X31+32]
	025 Move X21, [X31+40]
	026 Return 

Method: System.Void .ctor(ExitGames.Client.Photon.ConnectionProtocol protocolType)

Disassembly:
	0x01E56588 STP X22, X21, [X31 + 0x10]
	0x01E5658C STP X20, X19, [X31 + 0x20]
	0x01E56590 ADRP X21, 0x2583000
	0x01E56594 LDRB W8, [X21 + 0x4C]
	0x01E56598 MOV X20, X1
	0x01E5659C MOV X19, X0
	0x01E565A0 TBNZ X8, 0x0, 0x1E56618
	0x01E565A4 ADRP X0, 0x229D000
	0x01E565A8 LDR X0, [X0 + 0xB58]
	0x01E565AC BL 0x1C16CF4
	0x01E565B0 ADRP X0, 0x229E000
	0x01E565B4 LDR X0, [X0 + 0x9D8]
	0x01E565B8 BL 0x1C16CF4
	0x01E565BC ADRP X0, 0x22A6000
	0x01E565C0 LDR X0, [X0 + 0x540]
	0x01E565C4 BL 0x1C16CF4
	0x01E565C8 ADRP X0, 0x22A5000
	0x01E565CC LDR X0, [X0 + 0xD60]
	0x01E565D0 BL 0x1C16CF4
	0x01E565D4 ADRP X0, 0x22A6000
	0x01E565D8 LDR X0, [X0 + 0x618]
	0x01E565DC BL 0x1C16CF4
	0x01E565E0 ADRP X0, 0x22A6000
	0x01E565E4 LDR X0, [X0 + 0x2B8]
	0x01E565E8 BL 0x1C16CF4
	0x01E565EC ADRP X0, 0x22A5000
	0x01E565F0 LDR X0, [X0 + 0xBC8]
	0x01E565F4 BL 0x1C16CF4
	0x01E565F8 ADRP X0, 0x22A6000
	0x01E565FC LDR X0, [X0 + 0x548]
	0x01E56600 BL 0x1C16CF4
	0x01E56604 ADRP X0, 0x22A6000
	0x01E56608 LDR X0, [X0 + 0x630]
	0x01E5660C BL 0x1C16CF4
	0x01E56610 MOVZ W8, 0x1
	0x01E56614 STRB W8, [X21 + 0x4C]
	0x01E56618 LDRB W8, [X19 + 0x40]
	0x01E5661C CMP W8, 0x3
	0x01E56620 B.CC 0x1E566A0
	0x01E56624 LDR X21, [X19 + 0x48]
	0x01E56628 CBZ X21, 0x1E56880
	0x01E5662C ADRP X9, 0x22A5000
	0x01E56630 LDR X8, [X21]
	0x01E56634 LDR X9, [X9 + 0xBC8]
	0x01E56638 ADRP X10, 0x22A6000
	0x01E5663C LDR X1, [X9]
	0x01E56640 LDR X10, [X10 + 0x630]
	0x01E56644 LDRH W9, [X8 + 0x12E]
	0x01E56648 LDR X22, [X10]
	0x01E5664C CBZ X9, 0x1E56670
	0x01E56650 LDR X10, [X8 + 0xB0]
	0x01E56654 ADD X10, X10, 0x8
	0x01E56658 LDUR X11, [X10 - 0x8]
	0x01E5665C CMP X11, X1
	0x01E56660 B.EQ 0x1E56680
	0x01E56664 SUBS X9, X9, 0x1
	0x01E56668 ADD X10, X10, 0x10
	0x01E5666C B.NE 0x1E56658
	0x01E56670 MOV X0, X21
	0x01E56674 MOV W2, W31
	0x01E56678 BL 0x1C5C788
	0x01E5667C B 0x1E5668C
	0x01E56680 LDRSW X9, [X10]
	0x01E56684 ADD X8, X8, X9, 0x4, LSL
	0x01E56688 ADD X0, X8, 0x138
	0x01E5668C LDP X8, X3, [X0]
	0x01E56690 MOVZ W1, 0x3
	0x01E56694 MOV X0, X21
	0x01E56698 MOV X2, X22
	0x01E5669C BLR X8
	0x01E566A0 ADRP X8, 0x22A6000
	0x01E566A4 LDR X8, [X8 + 0x2B8]
	0x01E566A8 ADRP X21, 0x22A6000
	0x01E566AC LDR X0, [X8]
	0x01E566B0 LDR X21, [X21 + 0x540]
	0x01E566B4 BL 0x1C16F10
	0x01E566B8 LDR X1, [X21]
	0x01E566BC MOV X21, X0
	0x01E566C0 BL 0x29D2C7C
	0x01E566C4 CBZ X20, 0x1E56880
	0x01E566C8 LDR X0, [X20 + 0x10]
	0x01E566CC ADRP X22, 0x22A6000
	0x01E566D0 LDR X22, [X22 + 0x618]
	0x01E566D4 MOV X1, X31
	0x01E566D8 BL 0x32277A8
	0x01E566DC TBNZ X0, 0x0, 0x1E566F8
	0x01E566E0 CBZ X21, 0x1E56880
	0x01E566E4 LDR X2, [X20 + 0x10]
	0x01E566E8 LDR X3, [X22]
	0x01E566EC MOVZ W1, 0xFF
	0x01E566F0 MOV X0, X21
	0x01E566F4 BL 0x29D3520
	0x01E566F8 LDR X8, [X20 + 0x20]
	0x01E566FC CBZ X8, 0x1E56768
	0x01E56700 LDR X0, [X8 + 0x10]
	0x01E56704 MOV X1, X31
	0x01E56708 BL 0x32277A8
	0x01E5670C TBNZ X0, 0x0, 0x1E56768
	0x01E56710 LDR X8, [X20 + 0x20]
	0x01E56714 CBZ X8, 0x1E56880
	0x01E56718 CBZ X21, 0x1E56880
	0x01E5671C LDR X2, [X8 + 0x10]
	0x01E56720 LDR X3, [X22]
	0x01E56724 MOVZ W1, 0xD5
	0x01E56728 MOV X0, X21
	0x01E5672C BL 0x29D3520
	0x01E56730 LDR X8, [X20 + 0x20]
	0x01E56734 CBZ X8, 0x1E56880
	0x01E56738 ADRP X9, 0x229E000
	0x01E5673C LDRB W8, [X8 + 0x18]
	0x01E56740 LDR X9, [X9 + 0x9D8]
	0x01E56744 ADD X1, X31, 0xC
	0x01E56748 STRB W8, [X31 + 0xC]
	0x01E5674C LDR X0, [X9]
	0x01E56750 BL 0x1C16E04
	0x01E56754 LDR X3, [X22]
	0x01E56758 MOV X2, X0
	0x01E5675C MOVZ W1, 0xD4
	0x01E56760 MOV X0, X21
	0x01E56764 BL 0x29D3520
	0x01E56768 LDR X2, [X20 + 0x38]
	0x01E5676C CBZ X2, 0x1E5678C
	0x01E56770 LDR W8, [X2 + 0x18]
	0x01E56774 CBZ W8, 0x1E5678C
	0x01E56778 CBZ X21, 0x1E56880

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X21, 0x2584000
	011 Move X24, 0x22A7000
	012 Move W8, [X21+69]
	013 Move X24, [X24+1408]
	014 Move W20, W1
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {46}
	020 Move X0, 0x22A7000
	021 Move X0, [X0+1416]
	022 Call 0x1C17CF4
	023 Move X0, 0x22A7000
	024 Move X0, [X0+1424]
	025 Call 0x1C17CF4
	026 Move X0, 0x22A6000
	027 Move X0, [X0+3808]
	028 Call 0x1C17CF4
	029 Move X0, 0x22A7000
	030 Move X0, [X0+1432]
	031 Call 0x1C17CF4
	032 Move X0, 0x22A7000
	033 Move X0, [X0+1440]
	034 Call 0x1C17CF4
	035 Move X0, 0x22A7000
	036 Move X0, [X0+1448]
	037 Call 0x1C17CF4
	038 Move X0, 0x22A7000
	039 Move X0, [X0+1456]
	040 Call 0x1C17CF4
	041 Move X0, 0x22A7000
	042 Move X0, [X0+1408]
	043 Call 0x1C17CF4
	044 Move W8, 1
	045 Move [X21+69], W8
	046 Move X0, [X24]
	047 Move W8, [X0+224]
	048 Compare W8, 0
	049 JumpIfNotEqual {52}
	050 Call 0x1C17DFC
	051 Move X0, [X24]
	052 Move X8, [X0+184]
	053 Move X21, [X8+8]
	054 Compare X21, 0
	055 JumpIfNotEqual {77}
	056 Move W8, [X0+224]
	057 Compare W8, 0
	058 JumpIfNotEqual {61}
	059 Call 0x1C17DFC
	060 Move X0, [X24]
	061 Move X9, 0x22A7000
	062 Move X8, [X0+184]
	063 Move X9, [X9+1424]
	064 Move X22, [X8]
	065 Move X0, [X9]
	066 Call 0x1C17F10
	067 Move X8, 0x22A7000
	068 Move X8, [X8+1448]
	069 Move X1, X22
	070 Move X3, X31
	071 Move X21, X0
	072 Move X2, [X8]
	073 Call Func`1<Object>..ctor, X0, X1, X2
	074 Move X0, [X24]
	075 Move X8, [X0+184]
	076 Move [X8+8], X21
	077 Move W8, [X0+224]
	078 Compare W8, 0
	079 JumpIfNotEqual {82}
	080 Call 0x1C17DFC
	081 Move X0, [X24]
	082 Move X8, [X0+184]
	083 Move X26, 0x22A7000
	084 Move X25, 0x22A7000
	085 Move X22, [X8+16]
	086 Move X26, [X26+1440]
	087 Move X25, [X25+1432]
	088 Compare X22, 0
	089 JumpIfNotEqual {111}
	090 Move W8, [X0+224]
	091 Compare W8, 0
	092 JumpIfNotEqual {95}
	093 Call 0x1C17DFC
	094 Move X0, [X24]
	095 Move X9, 0x22A7000
	096 Move X8, [X0+184]
	097 Move X9, [X9+1416]
	098 Move X23, [X8]
	099 Move X0, [X9]
	100 Call 0x1C17F10
	101 Move X8, 0x22A7000
	102 Move X8, [X8+1456]
	103 Move X1, X23
	104 Move X3, X31
	105 Move X22, X0
	106 Move X2, [X8]
	107 Call Action`1<Object>..ctor, X0, X1, X2
	108 Move X8, [X24]
	109 Move X8, [X8+184]
	110 Move [X8+16], X22
	111 Move X0, [X26]
	112 Call 0x1C17F10
	113 Move X4, [X25]
	114 Move W3, 1
	115 Move X1, X21
	116 Move X2, X22
	117 Move X23, X0
	118 Call 0x24A72B4, X0, X1, X2, X3
	119 Compare X19, 0
	120 JumpIfEqual {143}
	121 Move X8, 0x22A6000
	122 Move X8, [X8+3808]
	123 Move [X19+272], X23
	124 Move X0, [X8]
	125 Move W8, [X0+224]
	126 Compare W8, 0
	127 JumpIfNotEqual {129}
	128 Call 0x1C17DFC
	129 Move X0, X19
	130 Move W1, W20
	131 Move X2, X31
	132 Call PhotonPeer..ctor, X0, X1
	133 Move X0, X19
	134 Move X20, [X31+64]
	135 Move X19, [X31+72]
	136 Move X22, [X31+48]
	137 Move X21, [X31+56]
	138 Move X24, [X31+32]
	139 Move X23, [X31+40]
	140 Move X26, [X31+16]
	141 Move X25, [X31+24]
	142 Move X30, [X31+80]
	143 Call 0x1C17F20

Method: System.Void .ctor(ExitGames.Client.Photon.IPhotonPeerListener listener, ExitGames.Client.Photon.ConnectionProtocol protocolType)

Disassembly:
	0x01E56C34 ADRP X0, 0x22A6000
	0x01E56C38 LDR X0, [X0 + 0x540]
	0x01E56C3C BL 0x1C16CF4
	0x01E56C40 ADRP X0, 0x22A5000
	0x01E56C44 LDR X0, [X0 + 0xD60]
	0x01E56C48 BL 0x1C16CF4
	0x01E56C4C ADRP X0, 0x22A6000
	0x01E56C50 LDR X0, [X0 + 0x618]
	0x01E56C54 BL 0x1C16CF4
	0x01E56C58 ADRP X0, 0x22A6000
	0x01E56C5C LDR X0, [X0 + 0x2B8]
	0x01E56C60 BL 0x1C16CF4
	0x01E56C64 ADRP X0, 0x22A5000
	0x01E56C68 LDR X0, [X0 + 0xD98]
	0x01E56C6C BL 0x1C16CF4
	0x01E56C70 ADRP X0, 0x22A5000
	0x01E56C74 LDR X0, [X0 + 0xDA0]
	0x01E56C78 BL 0x1C16CF4
	0x01E56C7C ADRP X0, 0x22A5000
	0x01E56C80 LDR X0, [X0 + 0xBC8]
	0x01E56C84 BL 0x1C16CF4
	0x01E56C88 ADRP X0, 0x229D000
	0x01E56C8C LDR X0, [X0 + 0x758]
	0x01E56C90 BL 0x1C16CF4
	0x01E56C94 ADRP X0, 0x22A6000
	0x01E56C98 LDR X0, [X0 + 0x548]
	0x01E56C9C BL 0x1C16CF4
	0x01E56CA0 ADRP X0, 0x22A6000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x2584000
	008 Move X22, 0x22A6000
	009 Move W8, [X23+70]
	010 Move X22, [X22+3808]
	011 Move W21, W2
	012 Move X19, X1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0x22A6000
	019 Move X0, [X0+3808]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X23+70], W8
	023 Move X0, X20
	024 Move W1, W21
	025 Call LoadBalancingPeer..ctor, X0, X1
	026 Move X0, [X22]
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move [X20+72], X19
	032 Move X20, [X31+32]
	033 Move X19, [X31+40]
	034 Move X22, [X31+16]
	035 Move X21, [X31+24]
	036 Move X30, [X31+48]
	037 Move X23, [X31+56]
	038 Return 

Method: System.Void ConfigUnitySockets()

Disassembly:
	0x01E5677C LDR X3, [X22]
	0x01E56780 MOVZ W1, 0xEE
	0x01E56784 MOV X0, X21
	0x01E56788 BL 0x29D3520
	0x01E5678C LDR X2, [X20 + 0x40]
	0x01E56790 CBZ X2, 0x1E567A8
	0x01E56794 CBZ X21, 0x1E56880
	0x01E56798 LDR X3, [X22]
	0x01E5679C MOVZ W1, 0xBE
	0x01E567A0 MOV X0, X21
	0x01E567A4 BL 0x29D3520
	0x01E567A8 LDRB W8, [X20 + 0x30]
	0x01E567AC CBZ W8, 0x1E5682C
	0x01E567B0 LDR X0, [X20 + 0x28]
	0x01E567B4 CBZ X0, 0x1E567E8
	0x01E567B8 ADRP X8, 0x22A5000
	0x01E567BC LDR X8, [X8 + 0xD60]
	0x01E567C0 LDR X1, [X8]
	0x01E567C4 BL 0x2AA4E88
	0x01E567C8 CMP W0, 0x1
	0x01E567CC B.LT 0x1E567E8
	0x01E567D0 CBZ X21, 0x1E56880
	0x01E567D4 LDR X2, [X20 + 0x28]
	0x01E567D8 LDR X3, [X22]
	0x01E567DC MOVZ W1, 0xF9
	0x01E567E0 MOV X0, X21
	0x01E567E4 BL 0x29D3520
	0x01E567E8 ADRP X8, 0x229D000
	0x01E567EC LDR X8, [X8 + 0xB58]
	0x01E567F0 ADD X1, X31, 0x8
	0x01E567F4 LDR X0, [X8]
	0x01E567F8 MOVZ W8, 0x1
	0x01E567FC STRB W8, [X31 + 0x8]
	0x01E56800 BL 0x1C16E04
	0x01E56804 CBZ X21, 0x1E56880
	0x01E56808 LDR X3, [X22]
	0x01E5680C MOV X2, X0
	0x01E56810 MOVZ W1, 0xFA
	0x01E56814 MOV X0, X21
	0x01E56818 BL 0x29D3520
	0x01E5681C LDR X2, [X20 + 0x18]
	0x01E56820 MOV X1, X21
	0x01E56824 MOV W3, W31
	0x01E56828 BL 0x1E560CC
	0x01E5682C ADRP X20, 0x22A6000
	0x01E56830 LDR X20, [X20 + 0x548]
	0x01E56834 LDR X0, [X20]
	0x01E56838 LDR W8, [X0 + 0xE0]
	0x01E5683C CBNZ W8, 0x1E56848
	0x01E56840 BL 0x1C16DFC
	0x01E56844 LDR X0, [X20]
	0x01E56848 LDR X8, [X0 + 0xB8]
	0x01E5684C LDR X9, [X19]
	0x01E56850 MOVZ W1, 0xE3
	0x01E56854 MOV X0, X19
	0x01E56858 LDR X3, [X8]
	0x01E5685C LDR X8, [X9 + 0x228]
	0x01E56860 LDR X4, [X9 + 0x230]
	0x01E56864 MOV X2, X21
	0x01E56868 BLR X8
	0x01E5686C LDP X20, X19, [X31 + 0x20]
	0x01E56870 LDP X22, X21, [X31 + 0x10]
	0x01E56874 AND W0, W0, 0x1
	0x01E56878 LDR X30, [X31], #0x30
	0x01E5687C RET
	0x01E56880 BL 0x1C16F20
	0x01E56884 SUB X31, X31, 0x40
	0x01E56888 STP X30, X23, [X31 + 0x10]
	0x01E5688C STP X22, X21, [X31 + 0x20]
	0x01E56890 STP X20, X19, [X31 + 0x30]
	0x01E56894 ADRP X21, 0x2583000
	0x01E56898 LDRB W8, [X21 + 0x4D]
	0x01E5689C MOV X20, X1
	0x01E568A0 MOV X19, X0
	0x01E568A4 TBNZ X8, 0x0, 0x1E5691C
	0x01E568A8 ADRP X0, 0x229D000
	0x01E568AC LDR X0, [X0 + 0xB58]
	0x01E568B0 BL 0x1C16CF4
	0x01E568B4 ADRP X0, 0x229E000
	0x01E568B8 LDR X0, [X0 + 0x9D8]
	0x01E568BC BL 0x1C16CF4
	0x01E568C0 ADRP X0, 0x22A6000
	0x01E568C4 LDR X0, [X0 + 0x540]
	0x01E568C8 BL 0x1C16CF4
	0x01E568CC ADRP X0, 0x22A5000
	0x01E568D0 LDR X0, [X0 + 0xD60]
	0x01E568D4 BL 0x1C16CF4
	0x01E568D8 ADRP X0, 0x22A6000
	0x01E568DC LDR X0, [X0 + 0x618]
	0x01E568E0 BL 0x1C16CF4
	0x01E568E4 ADRP X0, 0x22A6000
	0x01E568E8 LDR X0, [X0 + 0x2B8]
	0x01E568EC BL 0x1C16CF4
	0x01E568F0 ADRP X0, 0x22A5000
	0x01E568F4 LDR X0, [X0 + 0xBC8]
	0x01E568F8 BL 0x1C16CF4
	0x01E568FC ADRP X0, 0x22A6000
	0x01E56900 LDR X0, [X0 + 0x548]
	0x01E56904 BL 0x1C16CF4
	0x01E56908 ADRP X0, 0x22A6000
	0x01E5690C LDR X0, [X0 + 0x638]
	0x01E56910 BL 0x1C16CF4
	0x01E56914 MOVZ W8, 0x1
	0x01E56918 STRB W8, [X21 + 0x4D]
	0x01E5691C LDRB W8, [X19 + 0x40]
	0x01E56920 CMP W8, 0x3
	0x01E56924 B.CC 0x1E569A4
	0x01E56928 LDR X21, [X19 + 0x48]
	0x01E5692C CBZ X21, 0x1E56BF0
	0x01E56930 ADRP X9, 0x22A5000
	0x01E56934 LDR X8, [X21]
	0x01E56938 LDR X9, [X9 + 0xBC8]
	0x01E5693C ADRP X10, 0x22A6000
	0x01E56940 LDR X1, [X9]
	0x01E56944 LDR X10, [X10 + 0x638]
	0x01E56948 LDRH W9, [X8 + 0x12E]
	0x01E5694C LDR X22, [X10]
	0x01E56950 CBZ X9, 0x1E56974
	0x01E56954 LDR X10, [X8 + 0xB0]
	0x01E56958 ADD X10, X10, 0x8
	0x01E5695C LDUR X11, [X10 - 0x8]
	0x01E56960 CMP X11, X1
	0x01E56964 B.EQ 0x1E56984
	0x01E56968 SUBS X9, X9, 0x1
	0x01E5696C ADD X10, X10, 0x10
	0x01E56970 B.NE 0x1E5695C
	0x01E56974 MOV X0, X21
	0x01E56978 MOV W2, W31
	0x01E5697C BL 0x1C5C788
	0x01E56980 B 0x1E56990
	0x01E56984 LDRSW X9, [X10]
	0x01E56988 ADD X8, X8, X9, 0x4, LSL
	0x01E5698C ADD X0, X8, 0x138
	0x01E56990 LDP X8, X3, [X0]
	0x01E56994 MOVZ W1, 0x3
	0x01E56998 MOV X0, X21
	0x01E5699C MOV X2, X22
	0x01E569A0 BLR X8
	0x01E569A4 ADRP X8, 0x22A6000
	0x01E569A8 LDR X8, [X8 + 0x2B8]
	0x01E569AC ADRP X21, 0x22A6000
	0x01E569B0 LDR X0, [X8]
	0x01E569B4 LDR X21, [X21 + 0x540]
	0x01E569B8 BL 0x1C16F10
	0x01E569BC LDR X1, [X21]
	0x01E569C0 MOV X21, X0
	0x01E569C4 BL 0x29D2C7C
	0x01E569C8 CBZ X20, 0x1E56BF0
	0x01E569CC LDR X0, [X20 + 0x10]
	0x01E569D0 ADRP X22, 0x22A6000
	0x01E569D4 LDR X22, [X22 + 0x618]
	0x01E569D8 MOV X1, X31
	0x01E569DC BL 0x32277A8
	0x01E569E0 TBNZ X0, 0x0, 0x1E569FC
	0x01E569E4 CBZ X21, 0x1E56BF0
	0x01E569E8 LDR X2, [X20 + 0x10]
	0x01E569EC LDR X3, [X22]
	0x01E569F0 MOVZ W1, 0xFF
	0x01E569F4 MOV X0, X21
	0x01E569F8 BL 0x29D3520
	0x01E569FC LDRB W8, [X20 + 0x31]
	0x01E56A00 CMP W8, 0x3
	0x01E56A04 B.EQ 0x1E56AA0
	0x01E56A08 CMP W8, 0x1
	0x01E56A0C B.NE 0x1E56AD4
	0x01E56A10 ADRP X23, 0x229E000
	0x01E56A14 LDR X23, [X23 + 0x9D8]
	0x01E56A18 ADD X1, X31, 0xC
	0x01E56A1C STRB W8, [X31 + 0xC]
	0x01E56A20 LDR X0, [X23]
	0x01E56A24 BL 0x1C16E04
	0x01E56A28 CBZ X21, 0x1E56BF0
	0x01E56A2C LDR X3, [X22]
	0x01E56A30 MOV X2, X0
	0x01E56A34 MOVZ W1, 0xD7
	0x01E56A38 MOV X0, X21
	0x01E56A3C BL 0x29D3520
	0x01E56A40 LDR X8, [X20 + 0x20]
	0x01E56A44 CBZ X8, 0x1E56AD4
	0x01E56A48 LDR X0, [X8 + 0x10]
	0x01E56A4C MOV X1, X31
	0x01E56A50 BL 0x32277A8
	0x01E56A54 TBNZ X0, 0x0, 0x1E56AD4
	0x01E56A58 LDR X8, [X20 + 0x20]
	0x01E56A5C CBZ X8, 0x1E56BF0
	0x01E56A60 LDR X2, [X8 + 0x10]
	0x01E56A64 LDR X3, [X22]
	0x01E56A68 MOVZ W1, 0xD5
	0x01E56A6C MOV X0, X21
	0x01E56A70 BL 0x29D3520
	0x01E56A74 LDR X8, [X20 + 0x20]
	0x01E56A78 CBZ X8, 0x1E56BF0
	0x01E56A7C LDRB W8, [X8 + 0x18]
	0x01E56A80 LDR X0, [X23]
	0x01E56A84 ADD X1, X31, 0x8
	0x01E56A88 STRB W8, [X31 + 0x8]
	0x01E56A8C BL 0x1C16E04
	0x01E56A90 LDR X3, [X22]
	0x01E56A94 MOV X2, X0
	0x01E56A98 MOVZ W1, 0xD4
	0x01E56A9C B 0x1E56ACC
	0x01E56AA0 ADRP X8, 0x229E000
	0x01E56AA4 LDR X8, [X8 + 0x9D8]
	0x01E56AA8 ADD X1, X31, 0x4
	0x01E56AAC LDR X0, [X8]
	0x01E56AB0 MOVZ W8, 0x3
	0x01E56AB4 STRB W8, [X31 + 0x4]
	0x01E56AB8 BL 0x1C16E04
	0x01E56ABC CBZ X21, 0x1E56BF0
	0x01E56AC0 LDR X3, [X22]
	0x01E56AC4 MOV X2, X0
	0x01E56AC8 MOVZ W1, 0xD7
	0x01E56ACC MOV X0, X21
	0x01E56AD0 BL 0x29D3520
	0x01E56AD4 LDR X2, [X20 + 0x38]
	0x01E56AD8 CBZ X2, 0x1E56AF8
	0x01E56ADC LDR W8, [X2 + 0x18]
	0x01E56AE0 CBZ W8, 0x1E56AF8
	0x01E56AE4 CBZ X21, 0x1E56BF0
	0x01E56AE8 LDR X3, [X22]
	0x01E56AEC MOVZ W1, 0xEE
	0x01E56AF0 MOV X0, X21
	0x01E56AF4 BL 0x29D3520
	0x01E56AF8 LDR X2, [X20 + 0x40]
	0x01E56AFC CBZ X2, 0x1E56B14
	0x01E56B00 CBZ X21, 0x1E56BF0
	0x01E56B04 LDR X3, [X22]
	0x01E56B08 MOVZ W1, 0xBE
	0x01E56B0C MOV X0, X21
	0x01E56B10 BL 0x29D3520
	0x01E56B14 LDRB W8, [X20 + 0x30]
	0x01E56B18 CBZ W8, 0x1E56B98
	0x01E56B1C LDR X0, [X20 + 0x28]
	0x01E56B20 CBZ X0, 0x1E56B54
	0x01E56B24 ADRP X8, 0x22A5000
	0x01E56B28 LDR X8, [X8 + 0xD60]
	0x01E56B2C LDR X1, [X8]
	0x01E56B30 BL 0x2AA4E88
	0x01E56B34 CMP W0, 0x1
	0x01E56B38 B.LT 0x1E56B54
	0x01E56B3C CBZ X21, 0x1E56BF0
	0x01E56B40 LDR X2, [X20 + 0x28]
	0x01E56B44 LDR X3, [X22]
	0x01E56B48 MOVZ W1, 0xF9
	0x01E56B4C MOV X0, X21
	0x01E56B50 BL 0x29D3520
	0x01E56B54 ADRP X8, 0x229D000
	0x01E56B58 LDR X8, [X8 + 0xB58]
	0x01E56B5C ADD X1, X31, 0x0
	0x01E56B60 LDR X0, [X8]
	0x01E56B64 MOVZ W8, 0x1
	0x01E56B68 STRB W8, [X31]
	0x01E56B6C BL 0x1C16E04
	0x01E56B70 CBZ X21, 0x1E56BF0
	0x01E56B74 LDR X3, [X22]
	0x01E56B78 MOV X2, X0
	0x01E56B7C MOVZ W1, 0xFA
	0x01E56B80 MOV X0, X21
	0x01E56B84 BL 0x29D3520
	0x01E56B88 LDR X2, [X20 + 0x18]
	0x01E56B8C MOV X1, X21
	0x01E56B90 MOV W3, W31
	0x01E56B94 BL 0x1E560CC
	0x01E56B98 ADRP X20, 0x22A6000
	0x01E56B9C LDR X20, [X20 + 0x548]
	0x01E56BA0 LDR X0, [X20]
	0x01E56BA4 LDR W8, [X0 + 0xE0]
	0x01E56BA8 CBNZ W8, 0x1E56BB4
	0x01E56BAC BL 0x1C16DFC
	0x01E56BB0 LDR X0, [X20]
	0x01E56BB4 LDR X8, [X0 + 0xB8]
	0x01E56BB8 LDR X9, [X19]
	0x01E56BBC MOVZ W1, 0xE2
	0x01E56BC0 MOV X0, X19
	0x01E56BC4 LDR X3, [X8]
	0x01E56BC8 LDR X8, [X9 + 0x228]
	0x01E56BCC LDR X4, [X9 + 0x230]
	0x01E56BD0 MOV X2, X21
	0x01E56BD4 BLR X8
	0x01E56BD8 LDP X20, X19, [X31 + 0x30]
	0x01E56BDC LDP X22, X21, [X31 + 0x20]
	0x01E56BE0 LDP X30, X23, [X31 + 0x10]
	0x01E56BE4 AND W0, W0, 0x1
	0x01E56BE8 ADD X31, X31, 0x40
	0x01E56BEC RET
	0x01E56BF0 BL 0x1C16F20
	0x01E56BF4 SUB X31, X31, 0x50
	0x01E56BF8 STR X30, [X31 + 0x10]
	0x01E56BFC STP X24, X23, [X31 + 0x20]
	0x01E56C00 STP X22, X21, [X31 + 0x30]
	0x01E56C04 STP X20, X19, [X31 + 0x40]
	0x01E56C08 ADRP X21, 0x2583000
	0x01E56C0C LDRB W8, [X21 + 0x4E]
	0x01E56C10 MOV X20, X1
	0x01E56C14 MOV X19, X0
	0x01E56C18 TBNZ X8, 0x0, 0x1E56CB4
	0x01E56C1C ADRP X0, 0x229D000
	0x01E56C20 LDR X0, [X0 + 0xB58]
	0x01E56C24 BL 0x1C16CF4
	0x01E56C28 ADRP X0, 0x229E000
	0x01E56C2C LDR X0, [X0 + 0x9D8]
	0x01E56C30 BL 0x1C16CF4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x2584000
	008 Move W8, [X20+71]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {58}
	014 Move X0, 0x22A7000
	015 Move X0, [X0+1464]
	016 Call 0x1C17CF4
	017 Move X0, 0x22A6000
	018 Move X0, [X0+3016]
	019 Call 0x1C17CF4
	020 Move X0, 0x22A7000
	021 Move X0, [X0+1472]
	022 Call 0x1C17CF4
	023 Move X0, 0x22A7000
	024 Move X0, [X0+1480]
	025 Call 0x1C17CF4
	026 Move X0, 0x22A7000
	027 Move X0, [X0+1488]
	028 Call 0x1C17CF4
	029 Move X0, 0x22A6000
	030 Move X0, [X0+1480]
	031 Call 0x1C17CF4
	032 Move X0, 0x229E000
	033 Move X0, [X0+1728]
	034 Call 0x1C17CF4
	035 Move X0, 0x22A7000
	036 Move X0, [X0+1496]
	037 Call 0x1C17CF4
	038 Move X0, 0x22A7000
	039 Move X0, [X0+1504]
	040 Call 0x1C17CF4
	041 Move X0, 0x22A7000
	042 Move X0, [X0+1512]
	043 Call 0x1C17CF4
	044 Move X0, 0x22A7000
	045 Move X0, [X0+1520]
	046 Call 0x1C17CF4
	047 Move X0, 0x22A7000
	048 Move X0, [X0+1528]
	049 Call 0x1C17CF4
	050 Move X0, 0x22A7000
	051 Move X0, [X0+1536]
	052 Call 0x1C17CF4
	053 Move X0, 0x22A7000
	054 Move X0, [X0+1544]
	055 Call 0x1C17CF4
	056 Move W8, 1
	057 Move [X20+71], W8
	058 Move X23, 0x229E000
	059 Move X23, [X23+1728]
	060 Move X0, X31
	061 Call RuntimeUnityFlagsSetup.get_IsUNITY_XBOXONE
	062 Move TEMP, X0
	063 And TEMP, TEMP, 1
	064 Compare TEMP, 1
	065 JumpIfEqual {72}
	066 Move X0, X31
	067 Call RuntimeUnityFlagsSetup.get_IsUNITY_GAMECORE
	068 Move TEMP, X0
	069 And TEMP, TEMP, 1
	070 Compare TEMP, 1
	071 JumpIfNotEqual {76}
	072 Move X0, X31
	073 Call RuntimeUnityFlagsSetup.get_IsUNITY_EDITOR
	074 NotImplemented "Instruction ORN not yet implemented."
	075 And W20, W8, 1
	076 Move W20, W31
	077 Move X0, [X23]
	078 Move W8, [X0+224]
	079 Compare W8, 0
	080 JumpIfNotEqual {82}
	081 Call 0x1C17DFC
	082 Move X22, 0x22A6000
	083 Move X21, 0x22A7000
	084 Move X22, [X22+1480]
	085 Move X21, [X21+1472]
	086 Compare W20, 0
	087 JumpIfEqual {164}
	088 Move X8, 0x22A7000
	089 Move X8, [X8+1536]
	090 Move X2, [X22]
	091 Move X3, [X21]
	092 Move W1, W31
	093 Move X0, [X8]
	094 Call 0x1C180BC
	095 Move X1, X31
	096 Move X2, X31
	097 Move X20, X0
	098 Call Type.op_Equality, X0, X1
	099 Move TEMP, X0
	100 And TEMP, TEMP, 1
	101 Compare TEMP, 1
	102 JumpIfNotEqual {116}
	103 Move X0, [X23]
	104 Move W8, [X0+224]
	105 Compare W8, 0
	106 JumpIfNotEqual {108}
	107 Call 0x1C17DFC
	108 Move X8, 0x22A7000
	109 Move X8, [X8+1512]
	110 Move X2, [X22]
	111 Move X3, [X21]
	112 Move W1, W31
	113 Move X0, [X8]
	114 Call 0x1C180BC
	115 Move X20, X0
	116 Move X0, [X23]
	117 Move W8, [X0+224]
	118 Compare W8, 0
	119 JumpIfNotEqual {121}
	120 Call 0x1C17DFC
	121 Move X0, X20
	122 Move X1, X31
	123 Move X2, X31
	124 Call Type.op_Equality, X0, X1
	125 Move TEMP, X0
	126 And TEMP, TEMP, 1
	127 Compare TEMP, 1
	128 JumpIfNotEqual {142}
	129 Move X0, [X23]
	130 Move W8, [X0+224]
	131 Compare W8, 0
	132 JumpIfNotEqual {134}
	133 Call 0x1C17DFC
	134 Move X8, 0x22A7000
	135 Move X8, [X8+1496]
	136 Move X2, [X22]
	137 Move X3, [X21]
	138 Move W1, W31
	139 Move X0, [X8]
	140 Call 0x1C180BC
	141 Move X20, X0
	142 Move X0, [X23]
	143 Move W8, [X0+224]
	144 Compare W8, 0
	145 JumpIfNotEqual {147}
	146 Call 0x1C17DFC
	147 Move X0, X20
	148 Move X1, X31
	149 Move X2, X31
	150 Call Type.op_Inequality, X0, X1
	151 Move TEMP, X0
	152 And TEMP, TEMP, 1
	153 Compare TEMP, 1
	154 JumpIfNotEqual {270}
	155 Move X0, [X19+48]
	156 Compare X0, 0
	157 JumpIfEqual {371}
	158 Move X8, 0x22A7000
	159 Move X8, [X8+1464]
	160 Move W1, W31
	161 Move X2, X20
	162 Move X3, [X8]
	163 Call Dictionary`2<ByteEnum, Object>.set_Item, X0, X1, X2
	164 Move X8, 0x22A7000
	165 Move X8, [X8+1528]
	166 Move X2, [X22]
	167 Move X3, [X21]
	168 Move W1, W31
	169 Move X0, [X8]
	170 Call 0x1C180BC
	171 Move X1, X31
	172 Move X2, X31
	173 Move X20, X0
	174 Call Type.op_Equality, X0, X1
	175 Move TEMP, X0
	176 And TEMP, TEMP, 1
	177 Compare TEMP, 1
	178 JumpIfNotEqual {192}
	179 Move X0, [X23]
	180 Move W8, [X0+224]
	181 Compare W8, 0
	182 JumpIfNotEqual {184}
	183 Call 0x1C17DFC
	184 Move X8, 0x22A7000
	185 Move X8, [X8+1504]
	186 Move X2, [X22]
	187 Move X3, [X21]
	188 Move W1, W31
	189 Move X0, [X8]
	190 Call 0x1C180BC
	191 Move X20, X0
	192 Move X0, [X23]
	193 Move W8, [X0+224]
	194 Compare W8, 0
	195 JumpIfNotEqual {197}
	196 Call 0x1C17DFC
	197 Move X0, X20
	198 Move X1, X31
	199 Move X2, X31
	200 Call Type.op_Equality, X0, X1
	201 Move TEMP, X0
	202 And TEMP, TEMP, 1
	203 Compare TEMP, 1
	204 JumpIfNotEqual {218}
	205 Move X0, [X23]
	206 Move W8, [X0+224]
	207 Compare W8, 0
	208 JumpIfNotEqual {210}
	209 Call 0x1C17DFC
	210 Move X8, 0x22A7000
	211 Move X8, [X8+1544]
	212 Move X2, [X22]
	213 Move X3, [X21]
	214 Move W1, W31
	215 Move X0, [X8]
	216 Call 0x1C180BC
	217 Move X20, X0
	218 Move X0, X31
	219 Call RuntimeUnityFlagsSetup.get_IsUNITY_WEBGL
	220 Move TEMP, X0
	221 And TEMP, TEMP, 1
	222 Compare TEMP, 1
	223 JumpIfNotEqual {270}
	224 Move X0, [X23]
	225 Move W8, [X0+224]
	226 Compare W8, 0
	227 JumpIfNotEqual {229}
	228 Call 0x1C17DFC
	229 Move X0, X20
	230 Move X1, X31
	231 Move X2, X31
	232 Call Type.op_Equality, X0, X1
	233 Move TEMP, X0
	234 And TEMP, TEMP, 1
	235 Compare TEMP, 1
	236 JumpIfNotEqual {270}
	237 Move W8, [X19+64]
	238 NotImplemented "Instruction CMP not yet implemented."
	239 Move X21, [X19+72]
	240 Compare X21, 0
	241 JumpIfEqual {371}
	242 Move X9, 0x22A6000
	243 Move X8, [X21]
	244 Move X9, [X9+3016]
	245 Move X10, 0x22A7000
	246 Move X1, [X9]
	247 Move X10, [X10+1520]
	248 NotImplemented "Instruction LDRH not yet implemented."
	249 Move X22, [X10]
	250 Compare X9, 0
	251 JumpIfEqual {258}
	252 Move X10, [X8+176]
	253 Add X10, X10, 8
	254 NotImplemented "Instruction LDUR not yet implemented."
	255 NotImplemented "Instruction CMP not yet implemented."
	256 Subtract X9, X9, 1
	257 Add X10, X10, 16
	258 Move X0, X21
	259 Move W2, W31
	260 Call 0x1C5D788
	261 NotImplemented "Instruction LDRSW not yet implemented."
	262 Add X8, X8, X9
	263 Add X0, X8, 312
	264 Move X8, [X0]
	265 Move X3, [X0+8]
	266 Move W1, 2
	267 Move X0, X21
	268 Move X2, X22
	269 NotImplemented "Instruction BLR not yet implemented."
	270 Move X0, [X23]
	271 Move W8, [X0+224]
	272 Compare W8, 0
	273 JumpIfNotEqual {275}
	274 Call 0x1C17DFC
	275 Move X0, X20
	276 Move X1, X31
	277 Move X2, X31
	278 Call Type.op_Inequality, X0, X1
	279 Move TEMP, X0
	280 And TEMP, TEMP, 1
	281 Compare TEMP, 1
	282 JumpIfNotEqual {299}
	283 Move X0, [X19+48]
	284 Compare X0, 0
	285 JumpIfEqual {371}
	286 Move X21, 0x22A7000
	287 Move X21, [X21+1464]
	288 Move W1, 4
	289 Move X2, X20
	290 Move X3, [X21]
	291 Call Dictionary`2<ByteEnum, Object>.set_Item, X0, X1, X2
	292 Move X0, [X19+48]
	293 Compare X0, 0
	294 JumpIfEqual {371}
	295 Move X3, [X21]
	296 Move W1, 5
	297 Move X2, X20
	298 Call Dictionary`2<ByteEnum, Object>.set_Item, X0, X1, X2
	299 Move X0, X31
	300 Call RuntimeUnityFlagsSetup.get_IsNET_4_6
	301 Move TEMP, X0
	302 And TEMP, TEMP, 1
	303 Compare TEMP, 1
	304 JumpIfNotEqual {323}
	305 Move X0, X31
	306 Call RuntimeUnityFlagsSetup.get_IsUNITY_EDITOR
	307 Move TEMP, X0
	308 And TEMP, TEMP, 1
	309 Compare TEMP, 1
	310 JumpIfEqual {317}
	311 Move X0, X31
	312 Call RuntimeUnityFlagsSetup.get_IsENABLE_IL2CPP
	313 Move TEMP, X0
	314 And TEMP, TEMP, 1
	315 Compare TEMP, 1
	316 JumpIfEqual {323}
	317 Move X0, X31
	318 Call RuntimeUnityFlagsSetup.get_IsNETFX_CORE
	319 Move TEMP, X0
	320 And TEMP, TEMP, 1
	321 Compare TEMP, 1
	322 JumpIfNotEqual {330}
	323 Move X20, [X31+32]
	324 Move X19, [X31+40]
	325 Move X22, [X31+16]
	326 Move X21, [X31+24]
	327 Move X30, [X31+48]
	328 Move X23, [X31+56]
	329 Return 
	330 Move X8, 0x22A7000
	331 Move X0, [X23]
	332 Move X20, [X19+48]
	333 Move X8, [X8+1488]
	334 Move W9, [X0+224]
	335 Move X21, [X8]
	336 Compare W9, 0
	337 JumpIfNotEqual {339}
	338 Call 0x1C17DFC
	339 Move X0, X21
	340 Move X1, X31
	341 Call Type.GetTypeFromHandle, X0
	342 Compare X20, 0
	343 JumpIfEqual {371}
	344 Move X21, 0x22A7000
	345 Move X21, [X21+1464]
	346 Move X2, X0
	347 Move X0, X20
	348 Move W1, W31
	349 Move X3, [X21]
	350 Call Dictionary`2<ByteEnum, Object>.set_Item, X0, X1, X2
	351 Move X8, 0x22A7000
	352 Move X19, [X19+48]
	353 Move X8, [X8+1480]
	354 Move X1, X31
	355 Move X0, [X8]
	356 Call Type.GetTypeFromHandle, X0
	357 Compare X19, 0
	358 JumpIfEqual {371}
	359 Move X2, X0
	360 Move X3, [X21]
	361 Move X0, X19
	362 Move X20, [X31+32]
	363 Move X19, [X31+40]
	364 Move X22, [X31+16]
	365 Move X21, [X31+24]
	366 Move W1, 1
	367 Move X30, [X31+48]
	368 Move X23, [X31+56]
	369 Call Dictionary`2<ByteEnum, Object>.set_Item, X0, X1, X2
	370 Return 
	371 Call 0x1C17F20

Method: System.Boolean OpGetRegions(System.String appId)

Disassembly:
	0x01E56CA4 LDR X0, [X0 + 0x640]
	0x01E56CA8 BL 0x1C16CF4
	0x01E56CAC MOVZ W8, 0x1
	0x01E56CB0 STRB W8, [X21 + 0x4E]
	0x01E56CB4 LDRB W8, [X19 + 0x40]
	0x01E56CB8 CMP W8, 0x3
	0x01E56CBC B.CC 0x1E56D3C
	0x01E56CC0 LDR X21, [X19 + 0x48]
	0x01E56CC4 CBZ X21, 0x1E56FFC
	0x01E56CC8 ADRP X9, 0x22A5000
	0x01E56CCC LDR X8, [X21]
	0x01E56CD0 LDR X9, [X9 + 0xBC8]
	0x01E56CD4 ADRP X10, 0x22A6000
	0x01E56CD8 LDR X1, [X9]
	0x01E56CDC LDR X10, [X10 + 0x640]
	0x01E56CE0 LDRH W9, [X8 + 0x12E]
	0x01E56CE4 LDR X22, [X10]
	0x01E56CE8 CBZ X9, 0x1E56D0C
	0x01E56CEC LDR X10, [X8 + 0xB0]
	0x01E56CF0 ADD X10, X10, 0x8
	0x01E56CF4 LDUR X11, [X10 - 0x8]
	0x01E56CF8 CMP X11, X1
	0x01E56CFC B.EQ 0x1E56D1C
	0x01E56D00 SUBS X9, X9, 0x1
	0x01E56D04 ADD X10, X10, 0x10
	0x01E56D08 B.NE 0x1E56CF4
	0x01E56D0C MOV X0, X21
	0x01E56D10 MOV W2, W31
	0x01E56D14 BL 0x1C5C788
	0x01E56D18 B 0x1E56D28
	0x01E56D1C LDRSW X9, [X10]
	0x01E56D20 ADD X8, X8, X9, 0x4, LSL
	0x01E56D24 ADD X0, X8, 0x138
	0x01E56D28 LDP X8, X3, [X0]
	0x01E56D2C MOVZ W1, 0x3
	0x01E56D30 MOV X0, X21
	0x01E56D34 MOV X2, X22
	0x01E56D38 BLR X8
	0x01E56D3C ADRP X8, 0x22A5000
	0x01E56D40 LDR X8, [X8 + 0xDA0]
	0x01E56D44 LDR X0, [X8]
	0x01E56D48 BL 0x1C16F10
	0x01E56D4C MOV X1, X31
	0x01E56D50 MOV X22, X0
	0x01E56D54 BL 0x34ED7D8
	0x01E56D58 CBZ X20, 0x1E56FFC
	0x01E56D5C ADRP X8, 0x22A5000
	0x01E56D60 LDR X8, [X8 + 0xD98]
	0x01E56D64 LDR X21, [X20 + 0x10]
	0x01E56D68 LDR X0, [X8]
	0x01E56D6C LDR W8, [X0 + 0xE0]
	0x01E56D70 CBNZ W8, 0x1E56D78
	0x01E56D74 BL 0x1C16DFC
	0x01E56D78 ADRP X24, 0x229E000
	0x01E56D7C LDR X24, [X24 + 0x9D8]
	0x01E56D80 MOV X0, X22
	0x01E56D84 MOV X1, X21
	0x01E56D88 MOV X2, X31
	0x01E56D8C BL 0x1E493F4
	0x01E56D90 LDR W8, [X20 + 0x18]
	0x01E56D94 CMP W8, 0x1
	0x01E56D98 B.LT 0x1E56E08
	0x01E56D9C LDR X0, [X24]
	0x01E56DA0 CMP W8, 0x100
	0x01E56DA4 MOVZ W9, 0x100
	0x01E56DA8 CSEL W8, W8, W9, LT
	0x01E56DAC ADD X1, X31, 0x1C
	0x01E56DB0 STRB W8, [X31 + 0x1C]
	0x01E56DB4 BL 0x1C16E04

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0x2584000
	009 Move X23, 0x22A7000
	010 Move X21, 0x22A7000
	011 Move W8, [X22+72]
	012 Move X23, [X23+696]
	013 Move X21, [X21+1552]
	014 Move X20, X1
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {34}
	020 Move X0, 0x22A7000
	021 Move X0, [X0+1552]
	022 Call 0x1C17CF4
	023 Move X0, 0x22A7000
	024 Move X0, [X0+1560]
	025 Call 0x1C17CF4
	026 Move X0, 0x22A7000
	027 Move X0, [X0+696]
	028 Call 0x1C17CF4
	029 Move X0, 0x22A7000
	030 Move X0, [X0+1352]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X22+72], W8
	034 Move X0, [X23]
	035 Call 0x1C17F10
	036 Move X2, [X21]
	037 Move W1, 1
	038 Move X21, X0
	039 Call Dictionary`2<Byte, Object>..ctor, X0, X1
	040 Compare X21, 0
	041 JumpIfEqual {80}
	042 Move X8, 0x22A7000
	043 Move X8, [X8+1560]
	044 Move X22, 0x22A7000
	045 Move W1, 224
	046 Move X0, X21
	047 Move X3, [X8]
	048 Move X22, [X22+1352]
	049 Move X2, X20
	050 Call Dictionary`2<Byte, Object>.set_Item, X0, X1, X2
	051 Move X0, [X22]
	052 Move [X31+8], X31
	053 Move W8, [X0+224]
	054 Compare W8, 0
	055 JumpIfNotEqual {57}
	056 Call 0x1C17DFC
	057 Add X0, X31, 8
	058 Move W1, 1
	059 Move X2, X31
	060 Move W20, 1
	061 Call SendOptions.set_Reliability, X0, X1
	062 Move [X31+12], W20
	063 Move X8, [X19]
	064 Move X3, [X31+8]
	065 Move W1, 220
	066 Move X0, X19
	067 Move X9, [X8+552]
	068 Move X4, [X8+560]
	069 Move X2, X21
	070 NotImplemented "Instruction BLR not yet implemented."
	071 Move X20, [X31+48]
	072 Move X19, [X31+56]
	073 Move X22, [X31+32]
	074 Move X21, [X31+40]
	075 Move X30, [X31+16]
	076 Move X23, [X31+24]
	077 And W0, W0, 1
	078 Add X31, X31, 64
	079 Return X0
	080 Call 0x1C17F20

Method: System.Boolean OpJoinLobby(Fusion.Photon.Realtime.TypedLobby lobby = null)

Disassembly:
	0x01E56DB8 CBZ X22, 0x1E56FFC
	0x01E56DBC MOV X2, X0
	0x01E56DC0 MOVZ W1, 0xFF
	0x01E56DC4 MOV X0, X22
	0x01E56DC8 MOV X3, X31
	0x01E56DCC BL 0x34ED9F4
	0x01E56DD0 LDR W8, [X20 + 0x18]
	0x01E56DD4 CMP W8, 0x100
	0x01E56DD8 B.LT 0x1E56E08
	0x01E56DDC ADRP X9, 0x229D000
	0x01E56DE0 LDR X9, [X9 + 0x758]
	0x01E56DE4 ADD X1, X31, 0x18
	0x01E56DE8 STR W8, [X31 + 0x18]
	0x01E56DEC LDR X0, [X9]
	0x01E56DF0 BL 0x1C16E04
	0x01E56DF4 MOV X2, X0
	0x01E56DF8 MOVZ W1, 0xF3
	0x01E56DFC MOV X0, X22
	0x01E56E00 MOV X3, X31
	0x01E56E04 BL 0x34ED9F4
	0x01E56E08 ADRP X8, 0x22A6000
	0x01E56E0C LDR X8, [X8 + 0x2B8]
	0x01E56E10 ADRP X21, 0x22A6000
	0x01E56E14 LDR X0, [X8]
	0x01E56E18 LDR X21, [X21 + 0x540]
	0x01E56E1C BL 0x1C16F10
	0x01E56E20 LDR X1, [X21]
	0x01E56E24 MOV X21, X0
	0x01E56E28 BL 0x29D2C7C
	0x01E56E2C CBZ X22, 0x1E56FFC
	0x01E56E30 ADRP X8, 0x22A5000
	0x01E56E34 LDR X8, [X8 + 0xD60]
	0x01E56E38 ADRP X23, 0x22A6000
	0x01E56E3C MOV X0, X22
	0x01E56E40 LDR X1, [X8]
	0x01E56E44 LDR X23, [X23 + 0x618]
	0x01E56E48 BL 0x2AA4E88
	0x01E56E4C CMP W0, 0x1
	0x01E56E50 B.LT 0x1E56E6C
	0x01E56E54 CBZ X21, 0x1E56FFC
	0x01E56E58 LDR X3, [X23]
	0x01E56E5C MOVZ W1, 0xF8
	0x01E56E60 MOV X0, X21
	0x01E56E64 MOV X2, X22
	0x01E56E68 BL 0x29D3520
	0x01E56E6C LDRB W8, [X20 + 0x1C]
	0x01E56E70 CBZ W8, 0x1E56E9C
	0x01E56E74 LDR X0, [X24]
	0x01E56E78 ADD X1, X31, 0xC
	0x01E56E7C STRB W8, [X31 + 0xC]
	0x01E56E80 BL 0x1C16E04
	0x01E56E84 CBZ X21, 0x1E56FFC
	0x01E56E88 LDR X3, [X23]
	0x01E56E8C MOV X2, X0
	0x01E56E90 MOVZ W1, 0xDF
	0x01E56E94 MOV X0, X21
	0x01E56E98 BL 0x29D3520
	0x01E56E9C LDR X8, [X20 + 0x20]
	0x01E56EA0 CBZ X8, 0x1E56F04
	0x01E56EA4 LDR X0, [X8 + 0x10]
	0x01E56EA8 MOV X1, X31
	0x01E56EAC BL 0x32277A8
	0x01E56EB0 TBNZ X0, 0x0, 0x1E56F04
	0x01E56EB4 LDR X8, [X20 + 0x20]
	0x01E56EB8 CBZ X8, 0x1E56FFC
	0x01E56EBC CBZ X21, 0x1E56FFC
	0x01E56EC0 LDR X2, [X8 + 0x10]
	0x01E56EC4 LDR X3, [X23]
	0x01E56EC8 MOVZ W1, 0xD5
	0x01E56ECC MOV X0, X21
	0x01E56ED0 BL 0x29D3520
	0x01E56ED4 LDR X8, [X20 + 0x20]
	0x01E56ED8 CBZ X8, 0x1E56FFC
	0x01E56EDC LDRB W8, [X8 + 0x18]
	0x01E56EE0 LDR X0, [X24]
	0x01E56EE4 ADD X1, X31, 0x8
	0x01E56EE8 STRB W8, [X31 + 0x8]
	0x01E56EEC BL 0x1C16E04
	0x01E56EF0 LDR X3, [X23]
	0x01E56EF4 MOV X2, X0
	0x01E56EF8 MOVZ W1, 0xD4
	0x01E56EFC MOV X0, X21
	0x01E56F00 BL 0x29D3520
	0x01E56F04 LDR X0, [X20 + 0x28]
	0x01E56F08 MOV X1, X31
	0x01E56F0C BL 0x32277A8
	0x01E56F10 TBNZ X0, 0x0, 0x1E56F2C
	0x01E56F14 CBZ X21, 0x1E56FFC
	0x01E56F18 LDR X2, [X20 + 0x28]
	0x01E56F1C LDR X3, [X23]
	0x01E56F20 MOVZ W1, 0xF5
	0x01E56F24 MOV X0, X21
	0x01E56F28 BL 0x29D3520
	0x01E56F2C LDR X2, [X20 + 0x30]
	0x01E56F30 CBZ X2, 0x1E56F50
	0x01E56F34 LDR W8, [X2 + 0x18]
	0x01E56F38 CBZ W8, 0x1E56F50
	0x01E56F3C CBZ X21, 0x1E56FFC
	0x01E56F40 LDR X3, [X23]
	0x01E56F44 MOVZ W1, 0xEE
	0x01E56F48 MOV X0, X21
	0x01E56F4C BL 0x29D3520
	0x01E56F50 LDR X2, [X20 + 0x38]
	0x01E56F54 CBZ X2, 0x1E56F6C
	0x01E56F58 CBZ X21, 0x1E56FFC
	0x01E56F5C LDR X3, [X23]
	0x01E56F60 MOVZ W1, 0xBE
	0x01E56F64 MOV X0, X21
	0x01E56F68 BL 0x29D3520
	0x01E56F6C ADRP X8, 0x229D000
	0x01E56F70 LDR X8, [X8 + 0xB58]
	0x01E56F74 ADD X1, X31, 0x4
	0x01E56F78 LDR X0, [X8]
	0x01E56F7C MOVZ W8, 0x1
	0x01E56F80 STRB W8, [X31 + 0x4]
	0x01E56F84 BL 0x1C16E04
	0x01E56F88 CBZ X21, 0x1E56FFC
	0x01E56F8C LDR X3, [X23]
	0x01E56F90 ADRP X20, 0x22A6000
	0x01E56F94 LDR X20, [X20 + 0x548]
	0x01E56F98 MOV X2, X0
	0x01E56F9C MOVZ W1, 0xBC
	0x01E56FA0 MOV X0, X21
	0x01E56FA4 BL 0x29D3520

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x2584000
	007 Move W8, [X21+73]
	008 Move X20, X1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {37}
	014 Move X0, 0x229F000
	015 Move X0, [X0+2520]
	016 Call 0x1C17CF4
	017 Move X0, 0x22A7000
	018 Move X0, [X0+1344]
	019 Call 0x1C17CF4
	020 Move X0, 0x22A7000
	021 Move X0, [X0+1560]
	022 Call 0x1C17CF4
	023 Move X0, 0x22A7000
	024 Move X0, [X0+696]
	025 Call 0x1C17CF4
	026 Move X0, 0x22A6000
	027 Move X0, [X0+3016]
	028 Call 0x1C17CF4
	029 Move X0, 0x22A7000
	030 Move X0, [X0+1352]
	031 Call 0x1C17CF4
	032 Move X0, 0x22A7000
	033 Move X0, [X0+1568]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X21+73], W8
	037 Move W8, [X19+64]
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Move X21, [X19+72]
	040 Compare X21, 0
	041 JumpIfEqual {135}
	042 Move X9, 0x22A6000
	043 Move X8, [X21]
	044 Move X9, [X9+3016]
	045 Move X10, 0x22A7000
	046 Move X1, [X9]
	047 Move X10, [X10+1568]
	048 NotImplemented "Instruction LDRH not yet implemented."
	049 Move X22, [X10]
	050 Compare X9, 0
	051 JumpIfEqual {58}
	052 Move X10, [X8+176]
	053 Add X10, X10, 8
	054 NotImplemented "Instruction LDUR not yet implemented."
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Subtract X9, X9, 1
	057 Add X10, X10, 16
	058 Move X0, X21
	059 Move W2, W31
	060 Call 0x1C5D788
	061 NotImplemented "Instruction LDRSW not yet implemented."
	062 Add X8, X8, X9
	063 Add X0, X8, 312
	064 Move X8, [X0]
	065 Move X3, [X0+8]
	066 Move W1, 3
	067 Move X0, X21
	068 Move X2, X22
	069 NotImplemented "Instruction BLR not yet implemented."
	070 Compare X20, 0
	071 JumpIfEqual {110}
	072 Move X0, [X20+16]
	073 Move X1, X31
	074 Call String.IsNullOrEmpty, X0
	075 Move X21, X31
	076 Move TEMP, X0
	077 And TEMP, TEMP, 1
	078 Compare TEMP, 1
	079 JumpIfEqual {111}
	080 Move X8, 0x22A7000
	081 Move X8, [X8+696]
	082 Move X0, [X8]
	083 Call 0x1C17F10
	084 Move X8, 0x22A7000
	085 Move X8, [X8+1344]
	086 Move X21, X0
	087 Move X1, [X8]
	088 Call Dictionary`2<Byte, Object>..ctor, X0
	089 Compare X21, 0
	090 JumpIfEqual {135}
	091 Move X22, 0x22A7000
	092 Move X2, [X20+16]
	093 Move X22, [X22+1560]
	094 Move W1, 213
	095 Move X0, X21
	096 Move X3, [X22]
	097 Call Dictionary`2<Byte, Object>.set_Item, X0, X1, X2
	098 Move X9, 0x229F000
	099 Move W8, [X20+24]
	100 Move X9, [X9+2520]
	101 Add X1, X31, 12
	102 Move [X31+12], W8
	103 Move X0, [X9]
	104 Call 0x1C17E04
	105 Move X3, [X22]
	106 Move X2, X0
	107 Move W1, 212
	108 Move X0, X21
	109 Call Dictionary`2<Byte, Object>.set_Item, X0, X1, X2
	110 Move X21, X31
	111 Move X20, 0x22A7000
	112 Move X20, [X20+1352]
	113 Move X0, [X20]
	114 Move W8, [X0+224]
	115 Compare W8, 0
	116 JumpIfNotEqual {119}
	117 Call 0x1C17DFC
	118 Move X0, [X20]
	119 Move X8, [X0+184]
	120 Move X9, [X19]
	121 Move W1, 229
	122 Move X0, X19
	123 Move X3, [X8]
	124 Move X8, [X9+552]
	125 Move X4, [X9+560]
	126 Move X2, X21
	127 NotImplemented "Instruction BLR not yet implemented."
	128 Move X20, [X31+32]
	129 Move X19, [X31+40]
	130 Move X22, [X31+16]
	131 Move X21, [X31+24]
	132 And W0, W0, 1
	133 Move X30, [X31+48]
	134 Return X0
	135 Call 0x1C17F20

Method: System.Boolean OpLeaveLobby()

Disassembly:
	0x01E56FB4 BL 0x1C16DFC
	0x01E56FB8 LDR X0, [X20]
	0x01E56FBC LDR X8, [X0 + 0xB8]
	0x01E56FC0 LDR X9, [X19]
	0x01E56FC4 MOVZ W1, 0xE1
	0x01E56FC8 MOV X0, X19
	0x01E56FCC LDR X3, [X8]
	0x01E56FD0 LDR X8, [X9 + 0x228]
	0x01E56FD4 LDR X4, [X9 + 0x230]
	0x01E56FD8 MOV X2, X21
	0x01E56FDC BLR X8
	0x01E56FE0 LDP X20, X19, [X31 + 0x40]
	0x01E56FE4 LDP X22, X21, [X31 + 0x30]
	0x01E56FE8 LDP X24, X23, [X31 + 0x20]
	0x01E56FEC LDR X30, [X31 + 0x10]
	0x01E56FF0 AND W0, W0, 0x1
	0x01E56FF4 ADD X31, X31, 0x50
	0x01E56FF8 RET
	0x01E56FFC BL 0x1C16F20
	0x01E57000 SUB X31, X31, 0x60
	0x01E57004 STP X30, X25, [X31 + 0x20]
	0x01E57008 STP X24, X23, [X31 + 0x30]
	0x01E5700C STP X22, X21, [X31 + 0x40]
	0x01E57010 STP X20, X19, [X31 + 0x50]
	0x01E57014 ADRP X22, 0x2582000
	0x01E57018 LDRB W8, [X22 + 0x4F]
	0x01E5701C MOV X20, X2
	0x01E57020 MOV X21, X1
	0x01E57024 MOV X19, X0
	0x01E57028 TBNZ X8, 0x0, 0x1E570C4
	0x01E5702C ADRP X0, 0x229C000
	0x01E57030 LDR X0, [X0 + 0xB58]
	0x01E57034 BL 0x1C16CF4
	0x01E57038 ADRP X0, 0x229D000
	0x01E5703C LDR X0, [X0 + 0x9D8]
	0x01E57040 BL 0x1C16CF4
	0x01E57044 ADRP X0, 0x22A5000
	0x01E57048 LDR X0, [X0 + 0x540]
	0x01E5704C BL 0x1C16CF4
	0x01E57050 ADRP X0, 0x22A4000
	0x01E57054 LDR X0, [X0 + 0xD60]
	0x01E57058 BL 0x1C16CF4
	0x01E5705C ADRP X0, 0x22A5000
	0x01E57060 LDR X0, [X0 + 0x618]
	0x01E57064 BL 0x1C16CF4
	0x01E57068 ADRP X0, 0x22A5000
	0x01E5706C LDR X0, [X0 + 0x2B8]
	0x01E57070 BL 0x1C16CF4
	0x01E57074 ADRP X0, 0x22A4000
	0x01E57078 LDR X0, [X0 + 0xD98]
	0x01E5707C BL 0x1C16CF4
	0x01E57080 ADRP X0, 0x22A4000
	0x01E57084 LDR X0, [X0 + 0xDA0]
	0x01E57088 BL 0x1C16CF4
	0x01E5708C ADRP X0, 0x22A4000
	0x01E57090 LDR X0, [X0 + 0xBC8]
	0x01E57094 BL 0x1C16CF4
	0x01E57098 ADRP X0, 0x229C000
	0x01E5709C LDR X0, [X0 + 0x758]
	0x01E570A0 BL 0x1C16CF4
	0x01E570A4 ADRP X0, 0x22A5000
	0x01E570A8 LDR X0, [X0 + 0x548]
	0x01E570AC BL 0x1C16CF4
	0x01E570B0 ADRP X0, 0x22A5000
	0x01E570B4 LDR X0, [X0 + 0x648]
	0x01E570B8 BL 0x1C16CF4
	0x01E570BC MOVZ W8, 0x1
	0x01E570C0 STRB W8, [X22 + 0x4F]
	0x01E570C4 LDRB W8, [X19 + 0x40]
	0x01E570C8 CMP W8, 0x3

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x2584000
	006 Move W8, [X20+74]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {23}
	012 Move X0, 0x22A6000
	013 Move X0, [X0+3016]
	014 Call 0x1C17CF4
	015 Move X0, 0x22A7000
	016 Move X0, [X0+1352]
	017 Call 0x1C17CF4
	018 Move X0, 0x22A7000
	019 Move X0, [X0+1576]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X20+74], W8
	023 Move W8, [X19+64]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move X20, [X19+72]
	026 Compare X20, 0
	027 JumpIfEqual {77}
	028 Move X9, 0x22A5000
	029 Move X8, [X20]
	030 Move X9, [X9+3016]
	031 Move X10, 0x22A6000
	032 Move X1, [X9]
	033 Move X10, [X10+1576]
	034 NotImplemented "Instruction LDRH not yet implemented."
	035 Move X21, [X10]
	036 Compare X9, 0
	037 JumpIfEqual {44}
	038 Move X10, [X8+176]
	039 Add X10, X10, 8
	040 NotImplemented "Instruction LDUR not yet implemented."
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Subtract X9, X9, 1
	043 Add X10, X10, 16
	044 Move X0, X20
	045 Move W2, W31
	046 Call 0x1C5D788
	047 NotImplemented "Instruction LDRSW not yet implemented."
	048 Add X8, X8, X9
	049 Add X0, X8, 312
	050 Move X8, [X0]
	051 Move X3, [X0+8]
	052 Move W1, 3
	053 Move X0, X20
	054 Move X2, X21
	055 NotImplemented "Instruction BLR not yet implemented."
	056 Move X20, 0x22A6000
	057 Move X20, [X20+1352]
	058 Move X0, [X20]
	059 Move W8, [X0+224]
	060 Compare W8, 0
	061 JumpIfNotEqual {64}
	062 Call 0x1C17DFC
	063 Move X0, [X20]
	064 Move X8, [X0+184]
	065 Move X9, [X19]
	066 Move X0, X19
	067 Move X20, [X31+16]
	068 Move X19, [X31+24]
	069 Move X3, [X8]
	070 Move X5, [X9+552]
	071 Move X4, [X9+560]
	072 Move W1, 228
	073 Move X2, X31
	074 Move X30, [X31+32]
	075 Move X21, [X31+40]
	076 CallNoReturn X5
	077 Call 0x1C17F20

Method: System.Void RoomOptionsToOpParameters(System.Collections.Generic.Dictionary`2<System.Byte, System.Object> op, Fusion.Photon.Realtime.RoomOptions roomOptions, System.Boolean usePropertiesKey = False)

Disassembly:
	0x01E570CC B.CC 0x1E5714C
	0x01E570D0 LDR X22, [X19 + 0x48]
	0x01E570D4 CBZ X22, 0x1E57458
	0x01E570D8 ADRP X9, 0x22A4000
	0x01E570DC LDR X8, [X22]
	0x01E570E0 LDR X9, [X9 + 0xBC8]
	0x01E570E4 ADRP X10, 0x22A5000
	0x01E570E8 LDR X1, [X9]
	0x01E570EC LDR X10, [X10 + 0x648]
	0x01E570F0 LDRH W9, [X8 + 0x12E]
	0x01E570F4 LDR X23, [X10]
	0x01E570F8 CBZ X9, 0x1E5711C
	0x01E570FC LDR X10, [X8 + 0xB0]
	0x01E57100 ADD X10, X10, 0x8
	0x01E57104 LDUR X11, [X10 - 0x8]
	0x01E57108 CMP X11, X1
	0x01E5710C B.EQ 0x1E5712C
	0x01E57110 SUBS X9, X9, 0x1
	0x01E57114 ADD X10, X10, 0x10
	0x01E57118 B.NE 0x1E57104
	0x01E5711C MOV X0, X22
	0x01E57120 MOV W2, W31
	0x01E57124 BL 0x1C5C788
	0x01E57128 B 0x1E57138
	0x01E5712C LDRSW X9, [X10]
	0x01E57130 ADD X8, X8, X9, 0x4, LSL
	0x01E57134 ADD X0, X8, 0x138
	0x01E57138 LDP X8, X3, [X0]
	0x01E5713C MOVZ W1, 0x3
	0x01E57140 MOV X0, X22
	0x01E57144 MOV X2, X23
	0x01E57148 BLR X8
	0x01E5714C ADRP X8, 0x22A4000
	0x01E57150 LDR X8, [X8 + 0xDA0]
	0x01E57154 LDR X0, [X8]
	0x01E57158 BL 0x1C16F10
	0x01E5715C MOV X1, X31
	0x01E57160 MOV X23, X0
	0x01E57164 BL 0x34ED7D8
	0x01E57168 CBZ X21, 0x1E57458
	0x01E5716C ADRP X8, 0x22A4000
	0x01E57170 LDR X8, [X8 + 0xD98]
	0x01E57174 LDR X22, [X21 + 0x10]
	0x01E57178 LDR X0, [X8]
	0x01E5717C LDR W8, [X0 + 0xE0]
	0x01E57180 CBNZ W8, 0x1E57188
	0x01E57184 BL 0x1C16DFC
	0x01E57188 ADRP X24, 0x229D000
	0x01E5718C LDR X24, [X24 + 0x9D8]
	0x01E57190 MOV X0, X23
	0x01E57194 MOV X1, X22
	0x01E57198 MOV X2, X31
	0x01E5719C BL 0x1E493F4
	0x01E571A0 LDR W8, [X21 + 0x18]
	0x01E571A4 CMP W8, 0x1
	0x01E571A8 B.LT 0x1E57218
	0x01E571AC LDR X0, [X24]
	0x01E571B0 CMP W8, 0x100
	0x01E571B4 MOVZ W9, 0x100
	0x01E571B8 CSEL W8, W8, W9, LT
	0x01E571BC ADD X1, X31, 0x1C
	0x01E571C0 STRB W8, [X31 + 0x1C]
	0x01E571C4 BL 0x1C16E04
	0x01E571C8 CBZ X23, 0x1E57458
	0x01E571CC MOV X2, X0
	0x01E571D0 MOVZ W1, 0xFF
	0x01E571D4 MOV X0, X23
	0x01E571D8 MOV X3, X31
	0x01E571DC BL 0x34ED9F4
	0x01E571E0 LDR W8, [X21 + 0x18]
	0x01E571E4 CMP W8, 0x100
	0x01E571E8 B.LT 0x1E57218
	0x01E571EC ADRP X9, 0x229C000
	0x01E571F0 LDR X9, [X9 + 0x758]
	0x01E571F4 ADD X1, X31, 0x18
	0x01E571F8 STR W8, [X31 + 0x18]
	0x01E571FC LDR X0, [X9]
	0x01E57200 BL 0x1C16E04
	0x01E57204 MOV X2, X0
	0x01E57208 MOVZ W1, 0xF3
	0x01E5720C MOV X0, X23
	0x01E57210 MOV X3, X31
	0x01E57214 BL 0x34ED9F4
	0x01E57218 ADRP X8, 0x22A5000
	0x01E5721C LDR X8, [X8 + 0x2B8]
	0x01E57220 ADRP X22, 0x22A5000
	0x01E57224 LDR X0, [X8]
	0x01E57228 LDR X22, [X22 + 0x540]
	0x01E5722C BL 0x1C16F10
	0x01E57230 LDR X1, [X22]
	0x01E57234 MOV X22, X0
	0x01E57238 BL 0x29D2C7C
	0x01E5723C CBZ X23, 0x1E57458
	0x01E57240 ADRP X8, 0x22A4000
	0x01E57244 LDR X8, [X8 + 0xD60]
	0x01E57248 ADRP X25, 0x22A5000
	0x01E5724C MOV X0, X23
	0x01E57250 LDR X1, [X8]
	0x01E57254 LDR X25, [X25 + 0x618]
	0x01E57258 BL 0x2AA4E88
	0x01E5725C CMP W0, 0x1
	0x01E57260 B.LT 0x1E5727C
	0x01E57264 CBZ X22, 0x1E57458
	0x01E57268 LDR X3, [X25]
	0x01E5726C MOVZ W1, 0xF8
	0x01E57270 MOV X0, X22
	0x01E57274 MOV X2, X23
	0x01E57278 BL 0x29D3520
	0x01E5727C LDRB W8, [X21 + 0x1C]
	0x01E57280 CBZ W8, 0x1E572AC
	0x01E57284 LDR X0, [X24]
	0x01E57288 ADD X1, X31, 0x14
	0x01E5728C STRB W8, [X31 + 0x14]
	0x01E57290 BL 0x1C16E04
	0x01E57294 CBZ X22, 0x1E57458
	0x01E57298 LDR X3, [X25]
	0x01E5729C MOV X2, X0
	0x01E572A0 MOVZ W1, 0xDF
	0x01E572A4 MOV X0, X22
	0x01E572A8 BL 0x29D3520
	0x01E572AC LDR X8, [X21 + 0x20]
	0x01E572B0 CBZ X8, 0x1E57314
	0x01E572B4 LDR X0, [X8 + 0x10]
	0x01E572B8 MOV X1, X31
	0x01E572BC BL 0x32277A8
	0x01E572C0 TBNZ X0, 0x0, 0x1E57314
	0x01E572C4 LDR X8, [X21 + 0x20]
	0x01E572C8 CBZ X8, 0x1E57458
	0x01E572CC CBZ X22, 0x1E57458
	0x01E572D0 LDR X2, [X8 + 0x10]
	0x01E572D4 LDR X3, [X25]
	0x01E572D8 MOVZ W1, 0xD5
	0x01E572DC MOV X0, X22
	0x01E572E0 BL 0x29D3520
	0x01E572E4 LDR X8, [X21 + 0x20]
	0x01E572E8 CBZ X8, 0x1E57458
	0x01E572EC LDRB W8, [X8 + 0x18]
	0x01E572F0 LDR X0, [X24]
	0x01E572F4 ADD X1, X31, 0x10
	0x01E572F8 STRB W8, [X31 + 0x10]
	0x01E572FC BL 0x1C16E04
	0x01E57300 LDR X3, [X25]
	0x01E57304 MOV X2, X0
	0x01E57308 MOVZ W1, 0xD4
	0x01E5730C MOV X0, X22
	0x01E57310 BL 0x29D3520
	0x01E57314 LDR X0, [X21 + 0x28]
	0x01E57318 MOV X1, X31
	0x01E5731C BL 0x32277A8
	0x01E57320 TBNZ X0, 0x0, 0x1E5733C
	0x01E57324 CBZ X22, 0x1E57458
	0x01E57328 LDR X2, [X21 + 0x28]
	0x01E5732C LDR X3, [X25]
	0x01E57330 MOVZ W1, 0xF5
	0x01E57334 MOV X0, X22
	0x01E57338 BL 0x29D3520
	0x01E5733C LDR X2, [X21 + 0x30]
	0x01E57340 CBZ X2, 0x1E57360
	0x01E57344 LDR W8, [X2 + 0x18]
	0x01E57348 CBZ W8, 0x1E57360
	0x01E5734C CBZ X22, 0x1E57458
	0x01E57350 LDR X3, [X25]
	0x01E57354 MOVZ W1, 0xEE
	0x01E57358 MOV X0, X22
	0x01E5735C BL 0x29D3520
	0x01E57360 LDR X2, [X21 + 0x38]
	0x01E57364 CBZ X2, 0x1E5737C
	0x01E57368 CBZ X22, 0x1E57458
	0x01E5736C LDR X3, [X25]
	0x01E57370 MOVZ W1, 0xBE
	0x01E57374 MOV X0, X22
	0x01E57378 BL 0x29D3520
	0x01E5737C LDR X0, [X24]
	0x01E57380 MOVZ W23, 0x1
	0x01E57384 ADD X1, X31, 0xC
	0x01E57388 STRB W23, [X31 + 0xC]
	0x01E5738C BL 0x1C16E04
	0x01E57390 CBZ X22, 0x1E57458
	0x01E57394 LDR X3, [X25]
	0x01E57398 ADRP X24, 0x229C000
	0x01E5739C ADRP X21, 0x22A5000
	0x01E573A0 LDR X24, [X24 + 0xB58]
	0x01E573A4 LDR X21, [X21 + 0x548]
	0x01E573A8 MOV X2, X0
	0x01E573AC MOVZ W1, 0xD7
	0x01E573B0 MOV X0, X22
	0x01E573B4 BL 0x29D3520
	0x01E573B8 LDR X0, [X24]
	0x01E573BC ADD X1, X31, 0x8
	0x01E573C0 STRB W23, [X31 + 0x8]
	0x01E573C4 BL 0x1C16E04
	0x01E573C8 LDR X3, [X25]
	0x01E573CC MOV X2, X0
	0x01E573D0 MOVZ W1, 0xBC
	0x01E573D4 MOV X0, X22
	0x01E573D8 BL 0x29D3520
	0x01E573DC CBZ X20, 0x1E57404
	0x01E573E0 LDR X0, [X20 + 0x10]
	0x01E573E4 MOV X1, X31
	0x01E573E8 BL 0x32277A8
	0x01E573EC TBNZ X0, 0x0, 0x1E57404
	0x01E573F0 LDR X2, [X20 + 0x10]
	0x01E573F4 LDR X3, [X25]
	0x01E573F8 MOVZ W1, 0xFF
	0x01E573FC MOV X0, X22
	0x01E57400 BL 0x29D3520
	0x01E57404 LDR X0, [X21]
	0x01E57408 LDR W8, [X0 + 0xE0]
	0x01E5740C CBNZ W8, 0x1E57418
	0x01E57410 BL 0x1C16DFC
	0x01E57414 LDR X0, [X21]
	0x01E57418 LDR X8, [X0 + 0xB8]
	0x01E5741C LDR X9, [X19]
	0x01E57420 MOVZ W1, 0xE1
	0x01E57424 MOV X0, X19
	0x01E57428 LDR X3, [X8]
	0x01E5742C LDR X8, [X9 + 0x228]
	0x01E57430 LDR X4, [X9 + 0x230]
	0x01E57434 MOV X2, X22
	0x01E57438 BLR X8
	0x01E5743C LDP X20, X19, [X31 + 0x50]
	0x01E57440 LDP X22, X21, [X31 + 0x40]
	0x01E57444 LDP X24, X23, [X31 + 0x30]
	0x01E57448 LDP X30, X25, [X31 + 0x20]
	0x01E5744C AND W0, W0, 0x1
	0x01E57450 ADD X31, X31, 0x60
	0x01E57454 RET
	0x01E57458 BL 0x1C16F20
	0x01E5745C STR X30, [X31 - 0x40]!
	0x01E57460 STP X24, X23, [X31 + 0x10]
	0x01E57464 STP X22, X21, [X31 + 0x20]
	0x01E57468 STP X20, X19, [X31 + 0x30]
	0x01E5746C ADRP X23, 0x2582000
	0x01E57470 ADRP X24, 0x22A5000
	0x01E57474 ADRP X20, 0x22A5000
	0x01E57478 LDRB W8, [X23 + 0x50]
	0x01E5747C LDR X24, [X24 + 0x2B8]
	0x01E57480 LDR X20, [X20 + 0x540]
	0x01E57484 MOV W21, W2
	0x01E57488 MOV W22, W1
	0x01E5748C MOV X19, X0
	0x01E57490 TBNZ X8, 0x0, 0x1E574E4
	0x01E57494 ADRP X0, 0x229C000
	0x01E57498 LDR X0, [X0 + 0xB58]
	0x01E5749C BL 0x1C16CF4
	0x01E574A0 ADRP X0, 0x229D000
	0x01E574A4 LDR X0, [X0 + 0x9D8]
	0x01E574A8 BL 0x1C16CF4
	0x01E574AC ADRP X0, 0x22A5000
	0x01E574B0 LDR X0, [X0 + 0x540]
	0x01E574B4 BL 0x1C16CF4
	0x01E574B8 ADRP X0, 0x22A5000
	0x01E574BC LDR X0, [X0 + 0x618]
	0x01E574C0 BL 0x1C16CF4
	0x01E574C4 ADRP X0, 0x22A5000
	0x01E574C8 LDR X0, [X0 + 0x2B8]
	0x01E574CC BL 0x1C16CF4
	0x01E574D0 ADRP X0, 0x22A5000
	0x01E574D4 LDR X0, [X0 + 0x548]
	0x01E574D8 BL 0x1C16CF4
	0x01E574DC MOVZ W8, 0x1
	0x01E574E0 STRB W8, [X23 + 0x50]
	0x01E574E4 LDR X0, [X24]
	0x01E574E8 BL 0x1C16F10
	0x01E574EC LDR X1, [X20]
	0x01E574F0 MOV X20, X0
	0x01E574F4 BL 0x29D2C7C

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X22, 0x2583000
	011 Move W8, [X22+75]
	012 Move W21, W3
	013 Move X20, X2
	014 Move X19, X1
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {45}
	019 Move X0, 0x229D000
	020 Move X0, [X0+2904]
	021 Call 0x1C17CF4
	022 Move X0, 0x229E000
	023 Move X0, [X0+2520]
	024 Call 0x1C17CF4
	025 Move X0, 0x22A6000
	026 Move X0, [X0+1560]
	027 Call 0x1C17CF4
	028 Move X0, 0x22A5000
	029 Move X0, [X0+3480]
	030 Call 0x1C17CF4
	031 Move X0, 0x22A5000
	032 Move X0, [X0+3488]
	033 Call 0x1C17CF4
	034 Move X0, 0x229D000
	035 Move X0, [X0+1880]
	036 Call 0x1C17CF4
	037 Move X0, 0x22A5000
	038 Move X0, [X0+3528]
	039 Call 0x1C17CF4
	040 Move X0, 0x229D000
	041 Move X0, [X0+2760]
	042 Call 0x1C17CF4
	043 Move W8, 1
	044 Move [X22+75], W8
	045 Move X22, 0x22A5000
	046 Move X22, [X22+3488]
	047 Compare X20, 0
	048 JumpIfNotEqual {55}
	049 Move X8, 0x22A5000
	050 Move X8, [X8+3528]
	051 Move X0, [X8]
	052 Call 0x1C17F10
	053 Move X20, X0
	054 Call RoomOptions..ctor, X0
	055 Move X0, [X22]
	056 Call 0x1C17F10
	057 Move X1, X31
	058 Move X22, X0
	059 Call Hashtable..ctor, X0
	060 Compare X20, 0
	061 JumpIfEqual {287}
	062 Move X24, 0x229D000
	063 Move X24, [X24+2904]
	064 Move W8, [X20+17]
	065 Add X1, X31, 8
	066 Move X0, [X24]
	067 Move [X31+8], W8
	068 Call 0x1C17E04
	069 Compare X22, 0
	070 JumpIfEqual {287}
	071 Move X23, 0x22A5000
	072 Move X23, [X23+3480]
	073 Move X2, X0
	074 Move W1, 253
	075 Move X0, X22
	076 Move X3, X31
	077 Call Hashtable.set_Item, X0, X1, X2
	078 Move W8, [X20+16]
	079 Move X0, [X24]
	080 Add X1, X31, 12
	081 Move [X31+12], W8
	082 Call 0x1C17E04
	083 Move X2, X0
	084 Move W1, 254
	085 Move X0, X22
	086 Move X3, X31
	087 Call Hashtable.set_Item, X0, X1, X2
	088 Move X2, [X20+48]
	089 Compare X2, 0
	090 JumpIfNotEqual {97}
	091 Move X8, 0x229D000
	092 Move X8, [X8+2760]
	093 Move W1, W31
	094 Move X0, [X8]
	095 Call 0x1C17D6C
	096 Move X2, X0
	097 Move W1, 250
	098 Move X0, X22
	099 Move X3, X31
	100 Call Hashtable.set_Item, X0, X1, X2
	101 Move X0, [X23]
	102 Move X23, [X20+40]
	103 Move W8, [X0+224]
	104 Compare W8, 0
	105 JumpIfNotEqual {107}
	106 Call 0x1C17DFC
	107 Move X25, 0x229D000
	108 Move X25, [X25+1880]
	109 Move X0, X22
	110 Move X1, X23
	111 Move X2, X31
	112 Call Extensions.MergeStringKeys, X0, X1
	113 Move W8, [X20+20]
	114 NotImplemented "Instruction CMP not yet implemented."
	115 Move X9, 0x229E000
	116 Move X9, [X9+2520]
	117 NotImplemented "Instruction CMP not yet implemented."
	118 Add X1, X31, 12
	119 Move X0, [X9]
	120 Move W9, 256
	121 NotImplemented "Instruction CSEL not yet implemented."
	122 Move [X31+12], W8
	123 Call 0x1C17E04
	124 Move X2, X0
	125 Move W1, 255
	126 Move X0, X22
	127 Move X3, X31
	128 Call Hashtable.set_Item, X0, X1, X2
	129 Move W8, [X20+20]
	130 Move X0, [X25]
	131 Add X1, X31, 8
	132 Move [X31+8], W8
	133 Call 0x1C17E04
	134 Move X2, X0
	135 Move W1, 243
	136 Move X0, X22
	137 Move X3, X31
	138 Call Hashtable.set_Item, X0, X1, X2
	139 Compare X19, 0
	140 JumpIfEqual {287}
	141 Move X23, 0x22A6000
	142 Move X23, [X23+1560]
	143 And W31, W21, 1
	144 Move TEMP, 7
	145 Not TEMP
	146 Move W8, TEMP
	147 Move TEMP, 4
	148 Not TEMP
	149 Move W9, TEMP
	150 Move X3, [X23]
	151 NotImplemented "Instruction CSEL not yet implemented."
	152 Move X0, X19
	153 Move X2, X22
	154 Call Dictionary`2<Byte, Object>.set_Item, X0, X1, X2
	155 Move W8, [X20+32]
	156 Compare W8, 0
	157 JumpIfEqual {169}
	158 Move X0, [X24]
	159 Move W8, 1
	160 Add X1, X31, 8
	161 Move [X31+8], W8
	162 Call 0x1C17E04
	163 Move X3, [X23]
	164 Move X2, X0
	165 Move W1, 241
	166 Move X0, X19
	167 Call Dictionary`2<Byte, Object>.set_Item, X0, X1, X2
	168 Move W21, 3
	169 Move X0, [X24]
	170 Add X1, X31, 8
	171 Move [X31+8], W31
	172 Call 0x1C17E04
	173 Move X3, [X23]
	174 Move X2, X0
	175 Move W1, 241
	176 Move X0, X19
	177 Call Dictionary`2<Byte, Object>.set_Item, X0, X1, X2
	178 Move X0, [X24]
	179 Add X1, X31, 12
	180 Move [X31+12], W31
	181 Call 0x1C17E04
	182 Move X2, X0
	183 Move W1, 249
	184 Move X0, X22
	185 Move X3, X31
	186 Call Hashtable.set_Item, X0, X1, X2
	187 Move W21, 1
	188 Move X0, [X24]
	189 Move W8, 1
	190 Add X1, X31, 8
	191 Move [X31+8], W8
	192 Call 0x1C17E04
	193 Move X3, [X23]
	194 Move X2, X0
	195 Move W1, 232
	196 Move X0, X19
	197 Call Dictionary`2<Byte, Object>.set_Item, X0, X1, X2
	198 Move W8, [X20+24]
	199 NotImplemented "Instruction CMP not yet implemented."
	200 Add W31, W8, 1
	201 Move X0, [X25]
	202 Add X1, X31, 8
	203 Move [X31+8], W8
	204 Call 0x1C17E04
	205 Move X3, [X23]
	206 Move X2, X0
	207 Move W1, 235
	208 Move X0, X19
	209 Call Dictionary`2<Byte, Object>.set_Item, X0, X1, X2
	210 Move W8, [X20+28]
	211 NotImplemented "Instruction CMP not yet implemented."
	212 Move X0, [X25]
	213 Add X1, X31, 8
	214 Move [X31+8], W8
	215 Call 0x1C17E04
	216 Move X3, [X23]
	217 Move X2, X0
	218 Move W1, 236
	219 Move X0, X19
	220 Call Dictionary`2<Byte, Object>.set_Item, X0, X1, X2
	221 Move W8, [X20+64]
	222 Compare W8, 0
	223 JumpIfEqual {235}
	224 Move X0, [X24]
	225 Move W8, 1
	226 Add X1, X31, 8
	227 Or W21, W21, 4
	228 Move [X31+8], W8
	229 Call 0x1C17E04
	230 Move X3, [X23]
	231 Move X2, X0
	232 Move W1, 237
	233 Move X0, X19
	234 Call Dictionary`2<Byte, Object>.set_Item, X0, X1, X2
	235 Move W8, [X20+65]
	236 Move X2, [X20+56]
	237 Or W9, W21, 64
	238 NotImplemented "Instruction CMP not yet implemented."
	239 NotImplemented "Instruction CSEL not yet implemented."
	240 Compare X2, 0
	241 JumpIfEqual {246}
	242 Move X3, [X23]
	243 Move W1, 204
	244 Move X0, X19
	245 Call Dictionary`2<Byte, Object>.set_Item, X0, X1, X2
	246 Move W8, [X20+66]
	247 Compare W8, 0
	248 JumpIfEqual {260}
	249 Move X0, [X24]
	250 Move W8, 1
	251 Add X1, X31, 8
	252 Or W21, W21, 8
	253 Move [X31+8], W8
	254 Call 0x1C17E04
	255 Move X3, [X23]
	256 Move X2, X0
	257 Move W1, 239
	258 Move X0, X19
	259 Call Dictionary`2<Byte, Object>.set_Item, X0, X1, X2
	260 Move W8, [X20+67]
	261 Move W10, [X20+68]
	262 Or W9, W21, 16
	263 Move X0, [X25]
	264 NotImplemented "Instruction CMP not yet implemented."
	265 NotImplemented "Instruction CSEL not yet implemented."
	266 Or W9, W8, 32
	267 NotImplemented "Instruction CMP not yet implemented."
	268 NotImplemented "Instruction CSEL not yet implemented."
	269 Add X1, X31, 8
	270 Move [X31+8], W8
	271 Call 0x1C17E04
	272 Move X3, [X23]
	273 Move X2, X0
	274 Move W1, 191
	275 Move X0, X19
	276 Call Dictionary`2<Byte, Object>.set_Item, X0, X1, X2
	277 Move X20, [X31+64]
	278 Move X19, [X31+72]
	279 Move X22, [X31+48]
	280 Move X21, [X31+56]
	281 Move X24, [X31+32]
	282 Move X23, [X31+40]
	283 Move X30, [X31+16]
	284 Move X25, [X31+24]
	285 Add X31, X31, 80
	286 Return 
	287 Call 0x1C17F20

Method: System.Boolean OpCreateRoom(Fusion.Photon.Realtime.EnterRoomParams opParams)

Disassembly:
	0x01E57584 LDR W8, [X0 + 0xE0]
	0x01E57588 CBNZ W8, 0x1E57594
	0x01E5758C BL 0x1C16DFC
	0x01E57590 LDR X0, [X21]
	0x01E57594 LDR X8, [X0 + 0xB8]
	0x01E57598 LDR X9, [X19]
	0x01E5759C MOVZ W1, 0xFE
	0x01E575A0 MOV X0, X19
	0x01E575A4 LDR X3, [X8]
	0x01E575A8 LDR X8, [X9 + 0x228]
	0x01E575AC LDR X4, [X9 + 0x230]
	0x01E575B0 MOV X2, X20
	0x01E575B4 BLR X8
	0x01E575B8 LDP X20, X19, [X31 + 0x30]
	0x01E575BC LDP X22, X21, [X31 + 0x20]
	0x01E575C0 LDP X24, X23, [X31 + 0x10]
	0x01E575C4 AND W0, W0, 0x1
	0x01E575C8 LDR X30, [X31], #0x40
	0x01E575CC RET
	0x01E575D0 BL 0x1C16F20
	0x01E575D4 SUB X31, X31, 0x40
	0x01E575D8 STP X30, X23, [X31 + 0x10]
	0x01E575DC STP X22, X21, [X31 + 0x20]
	0x01E575E0 STP X20, X19, [X31 + 0x30]
	0x01E575E4 ADRP X22, 0x2582000
	0x01E575E8 LDRB W8, [X22 + 0x51]
	0x01E575EC MOV X20, X2
	0x01E575F0 MOV X21, X1
	0x01E575F4 MOV X19, X0
	0x01E575F8 TBNZ X8, 0x0, 0x1E57688
	0x01E575FC ADRP X0, 0x229D000
	0x01E57600 LDR X0, [X0 + 0x9D8]
	0x01E57604 BL 0x1C16CF4
	0x01E57608 ADRP X0, 0x22A5000
	0x01E5760C LDR X0, [X0 + 0x540]
	0x01E57610 BL 0x1C16CF4
	0x01E57614 ADRP X0, 0x22A5000
	0x01E57618 LDR X0, [X0 + 0x618]
	0x01E5761C BL 0x1C16CF4
	0x01E57620 ADRP X0, 0x22A5000
	0x01E57624 LDR X0, [X0 + 0x2B8]
	0x01E57628 BL 0x1C16CF4
	0x01E5762C ADRP X0, 0x22A4000
	0x01E57630 LDR X0, [X0 + 0xBC8]
	0x01E57634 BL 0x1C16CF4
	0x01E57638 ADRP X0, 0x22A5000
	0x01E5763C LDR X0, [X0 + 0x548]
	0x01E57640 BL 0x1C16CF4
	0x01E57644 ADRP X0, 0x22A5000
	0x01E57648 LDR X0, [X0 + 0x650]
	0x01E5764C BL 0x1C16CF4
	0x01E57650 ADRP X0, 0x22A5000
	0x01E57654 LDR X0, [X0 + 0x658]
	0x01E57658 BL 0x1C16CF4
	0x01E5765C ADRP X0, 0x22A5000
	0x01E57660 LDR X0, [X0 + 0x660]
	0x01E57664 BL 0x1C16CF4
	0x01E57668 ADRP X0, 0x22A5000
	0x01E5766C LDR X0, [X0 + 0x668]
	0x01E57670 BL 0x1C16CF4
	0x01E57674 ADRP X0, 0x22A5000
	0x01E57678 LDR X0, [X0 + 0x670]
	0x01E5767C BL 0x1C16CF4
	0x01E57680 MOVZ W8, 0x1
	0x01E57684 STRB W8, [X22 + 0x51]
	0x01E57688 LDRB W8, [X19 + 0x40]
	0x01E5768C CMP W8, 0x3
	0x01E57690 B.CC 0x1E57710
	0x01E57694 LDR X22, [X19 + 0x48]
	0x01E57698 CBZ X22, 0x1E579C4
	0x01E5769C ADRP X9, 0x22A4000
	0x01E576A0 LDR X8, [X22]
	0x01E576A4 LDR X9, [X9 + 0xBC8]
	0x01E576A8 ADRP X10, 0x22A5000
	0x01E576AC LDR X1, [X9]
	0x01E576B0 LDR X10, [X10 + 0x650]
	0x01E576B4 LDRH W9, [X8 + 0x12E]
	0x01E576B8 LDR X23, [X10]
	0x01E576BC CBZ X9, 0x1E576E0
	0x01E576C0 LDR X10, [X8 + 0xB0]
	0x01E576C4 ADD X10, X10, 0x8
	0x01E576C8 LDUR X11, [X10 - 0x8]
	0x01E576CC CMP X11, X1
	0x01E576D0 B.EQ 0x1E576F0
	0x01E576D4 SUBS X9, X9, 0x1
	0x01E576D8 ADD X10, X10, 0x10
	0x01E576DC B.NE 0x1E576C8
	0x01E576E0 MOV X0, X22
	0x01E576E4 MOV W2, W31
	0x01E576E8 BL 0x1C5C788
	0x01E576EC B 0x1E576FC
	0x01E576F0 LDRSW X9, [X10]
	0x01E576F4 ADD X8, X8, X9, 0x4, LSL
	0x01E576F8 ADD X0, X8, 0x138
	0x01E576FC LDP X8, X3, [X0]
	0x01E57700 MOVZ W1, 0x3
	0x01E57704 MOV X0, X22
	0x01E57708 MOV X2, X23
	0x01E5770C BLR X8
	0x01E57710 CBZ X21, 0x1E5778C
	0x01E57714 LDRB W8, [X21 + 0x18]
	0x01E57718 CMP W8, 0x2
	0x01E5771C B.NE 0x1E577E8
	0x01E57720 LDR X0, [X21 + 0x10]
	0x01E57724 MOV X1, X31
	0x01E57728 BL 0x32277A8
	0x01E5772C TBZ X0, 0x0, 0x1E57844
	0x01E57730 LDRB W8, [X19 + 0x40]
	0x01E57734 CMP W8, 0x3
	0x01E57738 B.CC 0x1E578DC
	0x01E5773C LDR X19, [X19 + 0x48]
	0x01E57740 CBZ X19, 0x1E579C4
	0x01E57744 ADRP X9, 0x22A4000
	0x01E57748 LDR X8, [X19]
	0x01E5774C LDR X9, [X9 + 0xBC8]
	0x01E57750 ADRP X10, 0x22A5000
	0x01E57754 LDR X1, [X9]
	0x01E57758 LDR X10, [X10 + 0x670]
	0x01E5775C LDRH W9, [X8 + 0x12E]
	0x01E57760 LDR X20, [X10]
	0x01E57764 CBZ X9, 0x1E578AC
	0x01E57768 LDR X10, [X8 + 0xB0]
	0x01E5776C ADD X10, X10, 0x8
	0x01E57770 LDUR X11, [X10 - 0x8]
	0x01E57774 CMP X11, X1
	0x01E57778 B.EQ 0x1E578BC
	0x01E5777C SUBS X9, X9, 0x1
	0x01E57780 ADD X10, X10, 0x10
	0x01E57784 B.NE 0x1E57770
	0x01E57788 B 0x1E578AC
	0x01E5778C LDRB W8, [X19 + 0x40]
	0x01E57790 CMP W8, 0x3
	0x01E57794 B.CC 0x1E578DC
	0x01E57798 LDR X19, [X19 + 0x48]
	0x01E5779C CBZ X19, 0x1E579C4
	0x01E577A0 ADRP X9, 0x22A4000
	0x01E577A4 LDR X8, [X19]
	0x01E577A8 LDR X9, [X9 + 0xBC8]
	0x01E577AC ADRP X10, 0x22A5000
	0x01E577B0 LDR X1, [X9]
	0x01E577B4 LDR X10, [X10 + 0x658]
	0x01E577B8 LDRH W9, [X8 + 0x12E]
	0x01E577BC LDR X20, [X10]
	0x01E577C0 CBZ X9, 0x1E578AC
	0x01E577C4 LDR X10, [X8 + 0xB0]
	0x01E577C8 ADD X10, X10, 0x8
	0x01E577CC LDUR X11, [X10 - 0x8]
	0x01E577D0 CMP X11, X1
	0x01E577D4 B.EQ 0x1E578BC
	0x01E577D8 SUBS X9, X9, 0x1
	0x01E577DC ADD X10, X10, 0x10
	0x01E577E0 B.NE 0x1E577CC
	0x01E577E4 B 0x1E578AC
	0x01E577E8 LDRB W8, [X19 + 0x40]
	0x01E577EC CMP W8, 0x3
	0x01E577F0 B.CC 0x1E578DC
	0x01E577F4 LDR X19, [X19 + 0x48]
	0x01E577F8 CBZ X19, 0x1E579C4
	0x01E577FC ADRP X9, 0x22A4000
	0x01E57800 LDR X8, [X19]
	0x01E57804 LDR X9, [X9 + 0xBC8]
	0x01E57808 ADRP X10, 0x22A5000
	0x01E5780C LDR X1, [X9]
	0x01E57810 LDR X10, [X10 + 0x668]
	0x01E57814 LDRH W9, [X8 + 0x12E]
	0x01E57818 LDR X20, [X10]
	0x01E5781C CBZ X9, 0x1E578AC
	0x01E57820 LDR X10, [X8 + 0xB0]
	0x01E57824 ADD X10, X10, 0x8
	0x01E57828 LDUR X11, [X10 - 0x8]
	0x01E5782C CMP X11, X1
	0x01E57830 B.EQ 0x1E578BC
	0x01E57834 SUBS X9, X9, 0x1
	0x01E57838 ADD X10, X10, 0x10
	0x01E5783C B.NE 0x1E57828
	0x01E57840 B 0x1E578AC
	0x01E57844 MOV X0, X20
	0x01E57848 MOV X1, X31
	0x01E5784C BL 0x32277A8
	0x01E57850 TBZ X0, 0x0, 0x1E578F8
	0x01E57854 LDRB W8, [X19 + 0x40]
	0x01E57858 CMP W8, 0x3
	0x01E5785C B.CC 0x1E578DC
	0x01E57860 LDR X19, [X19 + 0x48]
	0x01E57864 CBZ X19, 0x1E579C4
	0x01E57868 ADRP X9, 0x22A4000
	0x01E5786C LDR X8, [X19]
	0x01E57870 LDR X9, [X9 + 0xBC8]
	0x01E57874 ADRP X10, 0x22A5000
	0x01E57878 LDR X1, [X9]
	0x01E5787C LDR X10, [X10 + 0x660]
	0x01E57880 LDRH W9, [X8 + 0x12E]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x2583000
	007 Move W8, [X21+76]
	008 Move X20, X1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {43}
	014 Move X0, 0x229D000
	015 Move X0, [X0+2904]
	016 Call 0x1C17CF4
	017 Move X0, 0x229E000
	018 Move X0, [X0+2520]
	019 Call 0x1C17CF4
	020 Move X0, 0x22A6000
	021 Move X0, [X0+1344]
	022 Call 0x1C17CF4
	023 Move X0, 0x22A5000
	024 Move X0, [X0+3424]
	025 Call 0x1C17CF4
	026 Move X0, 0x22A6000
	027 Move X0, [X0+1560]
	028 Call 0x1C17CF4
	029 Move X0, 0x22A6000
	030 Move X0, [X0+696]
	031 Call 0x1C17CF4
	032 Move X0, 0x22A5000
	033 Move X0, [X0+3016]
	034 Call 0x1C17CF4
	035 Move X0, 0x22A6000
	036 Move X0, [X0+1352]
	037 Call 0x1C17CF4
	038 Move X0, 0x22A6000
	039 Move X0, [X0+1584]
	040 Call 0x1C17CF4
	041 Move W8, 1
	042 Move [X21+76], W8
	043 Move W8, [X19+64]
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Move X21, [X19+72]
	046 Compare X21, 0
	047 JumpIfEqual {219}
	048 Move X9, 0x22A5000
	049 Move X8, [X21]
	050 Move X9, [X9+3016]
	051 Move X10, 0x22A6000
	052 Move X1, [X9]
	053 Move X10, [X10+1584]
	054 NotImplemented "Instruction LDRH not yet implemented."
	055 Move X22, [X10]
	056 Compare X9, 0
	057 JumpIfEqual {64}
	058 Move X10, [X8+176]
	059 Add X10, X10, 8
	060 NotImplemented "Instruction LDUR not yet implemented."
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Subtract X9, X9, 1
	063 Add X10, X10, 16
	064 Move X0, X21
	065 Move W2, W31
	066 Call 0x1C5D788
	067 NotImplemented "Instruction LDRSW not yet implemented."
	068 Add X8, X8, X9
	069 Add X0, X8, 312
	070 Move X8, [X0]
	071 Move X3, [X0+8]
	072 Move W1, 3
	073 Move X0, X21
	074 Move X2, X22
	075 NotImplemented "Instruction BLR not yet implemented."
	076 Move X8, 0x22A6000
	077 Move X8, [X8+696]
	078 Move X21, 0x22A6000
	079 Move X0, [X8]
	080 Move X21, [X21+1344]
	081 Call 0x1C17F10
	082 Move X1, [X21]
	083 Move X21, X0
	084 Call Dictionary`2<Byte, Object>..ctor, X0
	085 Compare X20, 0
	086 JumpIfEqual {219}
	087 Move X0, [X20+16]
	088 Move X22, 0x22A6000
	089 Move X22, [X22+1560]
	090 Move X1, X31
	091 Call String.IsNullOrEmpty, X0
	092 Move TEMP, X0
	093 And TEMP, TEMP, 1
	094 Compare TEMP, 1
	095 JumpIfEqual {103}
	096 Compare X21, 0
	097 JumpIfEqual {219}
	098 Move X2, [X20+16]
	099 Move X3, [X22]
	100 Move W1, 255
	101 Move X0, X21
	102 Call Dictionary`2<Byte, Object>.set_Item, X0, X1, X2
	103 Move X8, [X20+32]
	104 Compare X8, 0
	105 JumpIfEqual {138}
	106 Move X0, [X8+16]
	107 Move X1, X31
	108 Call String.IsNullOrEmpty, X0
	109 Move TEMP, X0
	110 And TEMP, TEMP, 1
	111 Compare TEMP, 1
	112 JumpIfEqual {138}
	113 Move X8, [X20+32]
	114 Compare X8, 0
	115 JumpIfEqual {219}
	116 Compare X21, 0
	117 JumpIfEqual {219}
	118 Move X2, [X8+16]
	119 Move X3, [X22]
	120 Move W1, 213
	121 Move X0, X21
	122 Call Dictionary`2<Byte, Object>.set_Item, X0, X1, X2
	123 Move X8, [X20+32]
	124 Compare X8, 0
	125 JumpIfEqual {219}
	126 Move X9, 0x229E000
	127 Move W8, [X8+24]
	128 Move X9, [X9+2520]
	129 Add X1, X31, 12
	130 Move [X31+12], W8
	131 Move X0, [X9]
	132 Call 0x1C17E04
	133 Move X3, [X22]
	134 Move X2, X0
	135 Move W1, 212
	136 Move X0, X21
	137 Call Dictionary`2<Byte, Object>.set_Item, X0, X1, X2
	138 Move X2, [X20+56]
	139 Compare X2, 0
	140 JumpIfEqual {150}
	141 Move W8, [X2+24]
	142 Compare W8, 0
	143 JumpIfEqual {150}
	144 Compare X21, 0
	145 JumpIfEqual {219}
	146 Move X3, [X22]
	147 Move W1, 238
	148 Move X0, X21
	149 Call Dictionary`2<Byte, Object>.set_Item, X0, X1, X2
	150 Move X2, [X20+64]
	151 Compare X2, 0
	152 JumpIfEqual {159}
	153 Compare X21, 0
	154 JumpIfEqual {219}
	155 Move X3, [X22]
	156 Move W1, 190
	157 Move X0, X21
	158 Call Dictionary`2<Byte, Object>.set_Item, X0, X1, X2
	159 Move W8, [X20+48]
	160 Compare W8, 0
	161 JumpIfEqual {195}
	162 Move X0, [X20+40]
	163 Compare X0, 0
	164 JumpIfEqual {177}
	165 Move X8, 0x22A5000
	166 Move X8, [X8+3424]
	167 Move X1, [X8]
	168 Call Dictionary`2<Object, Object>.get_Count, X0
	169 NotImplemented "Instruction CMP not yet implemented."
	170 Compare X21, 0
	171 JumpIfEqual {219}
	172 Move X2, [X20+40]
	173 Move X3, [X22]
	174 Move W1, 249
	175 Move X0, X21
	176 Call Dictionary`2<Byte, Object>.set_Item, X0, X1, X2
	177 Move X8, 0x229D000
	178 Move X8, [X8+2904]
	179 Add X1, X31, 8
	180 Move X0, [X8]
	181 Move W8, 1
	182 Move [X31+8], W8
	183 Call 0x1C17E04
	184 Compare X21, 0
	185 JumpIfEqual {219}
	186 Move X3, [X22]
	187 Move X2, X0
	188 Move W1, 250
	189 Move X0, X21
	190 Call Dictionary`2<Byte, Object>.set_Item, X0, X1, X2
	191 Move X2, [X20+24]
	192 Move X1, X21
	193 Move W3, W31
	194 Call LoadBalancingPeer.RoomOptionsToOpParameters, X0, X1, X2, X3
	195 Move X20, 0x22A6000
	196 Move X20, [X20+1352]
	197 Move X0, [X20]
	198 Move W8, [X0+224]
	199 Compare W8, 0
	200 JumpIfNotEqual {203}
	201 Call 0x1C17DFC
	202 Move X0, [X20]
	203 Move X8, [X0+184]
	204 Move X9, [X19]
	205 Move W1, 227
	206 Move X0, X19
	207 Move X3, [X8]
	208 Move X8, [X9+552]
	209 Move X4, [X9+560]
	210 Move X2, X21
	211 NotImplemented "Instruction BLR not yet implemented."
	212 Move X20, [X31+32]
	213 Move X19, [X31+40]
	214 Move X22, [X31+16]
	215 Move X21, [X31+24]
	216 And W0, W0, 1
	217 Move X30, [X31+48]
	218 Return X0
	219 Call 0x1C17F20

Method: System.Boolean OpJoinRoom(Fusion.Photon.Realtime.EnterRoomParams opParams)

Disassembly:
	0x01E57884 LDR X20, [X10]
	0x01E57888 CBZ X9, 0x1E578AC
	0x01E5788C LDR X10, [X8 + 0xB0]
	0x01E57890 ADD X10, X10, 0x8
	0x01E57894 LDUR X11, [X10 - 0x8]
	0x01E57898 CMP X11, X1
	0x01E5789C B.EQ 0x1E578BC
	0x01E578A0 SUBS X9, X9, 0x1
	0x01E578A4 ADD X10, X10, 0x10
	0x01E578A8 B.NE 0x1E57894
	0x01E578AC MOV X0, X19
	0x01E578B0 MOV W2, W31
	0x01E578B4 BL 0x1C5C788
	0x01E578B8 B 0x1E578C8
	0x01E578BC LDRSW X9, [X10]
	0x01E578C0 ADD X8, X8, X9, 0x4, LSL
	0x01E578C4 ADD X0, X8, 0x138
	0x01E578C8 LDP X8, X3, [X0]
	0x01E578CC MOVZ W1, 0x3
	0x01E578D0 MOV X0, X19
	0x01E578D4 MOV X2, X20
	0x01E578D8 BLR X8
	0x01E578DC MOV W0, W31
	0x01E578E0 LDP X20, X19, [X31 + 0x30]
	0x01E578E4 LDP X22, X21, [X31 + 0x20]
	0x01E578E8 LDP X30, X23, [X31 + 0x10]
	0x01E578EC AND W0, W0, 0x1
	0x01E578F0 ADD X31, X31, 0x40
	0x01E578F4 RET
	0x01E578F8 ADRP X8, 0x22A5000
	0x01E578FC LDR X8, [X8 + 0x2B8]
	0x01E57900 LDR X0, [X8]
	0x01E57904 BL 0x1C16F10
	0x01E57908 ADRP X8, 0x22A5000
	0x01E5790C LDR X8, [X8 + 0x540]
	0x01E57910 MOV X22, X0
	0x01E57914 LDR X1, [X8]
	0x01E57918 BL 0x29D2C7C
	0x01E5791C CBZ X22, 0x1E579C4
	0x01E57920 ADRP X23, 0x22A5000
	0x01E57924 LDR X2, [X21 + 0x10]
	0x01E57928 LDR X23, [X23 + 0x618]
	0x01E5792C MOVZ W1, 0xD5
	0x01E57930 MOV X0, X22
	0x01E57934 LDR X3, [X23]
	0x01E57938 BL 0x29D3520
	0x01E5793C ADRP X9, 0x229D000
	0x01E57940 LDRB W8, [X21 + 0x18]
	0x01E57944 LDR X9, [X9 + 0x9D8]
	0x01E57948 ADD X1, X31, 0xC
	0x01E5794C STRB W8, [X31 + 0xC]
	0x01E57950 LDR X0, [X9]
	0x01E57954 BL 0x1C16E04
	0x01E57958 LDR X3, [X23]
	0x01E5795C MOV X2, X0
	0x01E57960 MOVZ W1, 0xD4
	0x01E57964 MOV X0, X22
	0x01E57968 BL 0x29D3520
	0x01E5796C LDR X3, [X23]
	0x01E57970 MOVZ W1, 0xF5
	0x01E57974 MOV X0, X22
	0x01E57978 MOV X2, X20
	0x01E5797C BL 0x29D3520
	0x01E57980 ADRP X20, 0x22A5000
	0x01E57984 LDR X20, [X20 + 0x548]
	0x01E57988 LDR X0, [X20]
	0x01E5798C LDR W8, [X0 + 0xE0]
	0x01E57990 CBNZ W8, 0x1E5799C
	0x01E57994 BL 0x1C16DFC
	0x01E57998 LDR X0, [X20]
	0x01E5799C LDR X8, [X0 + 0xB8]
	0x01E579A0 LDR X9, [X19]
	0x01E579A4 MOVZ W1, 0xD9
	0x01E579A8 MOV X0, X19
	0x01E579AC LDR X3, [X8]
	0x01E579B0 LDR X8, [X9 + 0x228]
	0x01E579B4 LDR X4, [X9 + 0x230]
	0x01E579B8 MOV X2, X22
	0x01E579BC BLR X8
	0x01E579C0 B 0x1E578E0
	0x01E579C4 BL 0x1C16F20
	0x01E579C8 STR X30, [X31 - 0x40]!
	0x01E579CC STP X24, X23, [X31 + 0x10]
	0x01E579D0 STP X22, X21, [X31 + 0x20]
	0x01E579D4 STP X20, X19, [X31 + 0x30]
	0x01E579D8 ADRP X24, 0x2582000
	0x01E579DC ADRP X23, 0x22A5000
	0x01E579E0 ADRP X20, 0x22A5000
	0x01E579E4 LDRB W8, [X24 + 0x52]
	0x01E579E8 LDR X23, [X23 + 0x2B8]
	0x01E579EC LDR X20, [X20 + 0x540]
	0x01E579F0 MOV X21, X2
	0x01E579F4 MOV X22, X1
	0x01E579F8 MOV X19, X0
	0x01E579FC TBNZ X8, 0x0, 0x1E57A44
	0x01E57A00 ADRP X0, 0x22A5000
	0x01E57A04 LDR X0, [X0 + 0x540]
	0x01E57A08 BL 0x1C16CF4
	0x01E57A0C ADRP X0, 0x22A5000
	0x01E57A10 LDR X0, [X0 + 0x618]
	0x01E57A14 BL 0x1C16CF4
	0x01E57A18 ADRP X0, 0x22A5000
	0x01E57A1C LDR X0, [X0 + 0x2B8]
	0x01E57A20 BL 0x1C16CF4
	0x01E57A24 ADRP X0, 0x229C000
	0x01E57A28 LDR X0, [X0 + 0x758]
	0x01E57A2C BL 0x1C16CF4
	0x01E57A30 ADRP X0, 0x22A5000
	0x01E57A34 LDR X0, [X0 + 0x548]
	0x01E57A38 BL 0x1C16CF4
	0x01E57A3C MOVZ W8, 0x1
	0x01E57A40 STRB W8, [X24 + 0x52]
	0x01E57A44 LDR X0, [X23]
	0x01E57A48 ADRP X23, 0x22A5000
	0x01E57A4C LDR X23, [X23 + 0x618]
	0x01E57A50 BL 0x1C16F10
	0x01E57A54 LDR X1, [X20]
	0x01E57A58 MOV X20, X0
	0x01E57A5C BL 0x29D2C7C
	0x01E57A60 CBZ X22, 0x1E57A84
	0x01E57A64 LDR W8, [X22 + 0x18]
	0x01E57A68 CBZ W8, 0x1E57A84
	0x01E57A6C CBZ X20, 0x1E57B34
	0x01E57A70 LDR X3, [X23]
	0x01E57A74 MOVZ W1, 0x1
	0x01E57A78 MOV X0, X20
	0x01E57A7C MOV X2, X22
	0x01E57A80 BL 0x29D3520
	0x01E57A84 CBZ X21, 0x1E57ADC
	0x01E57A88 ADRP X8, 0x229C000
	0x01E57A8C LDR X8, [X8 + 0x758]
	0x01E57A90 LDRB W9, [X21 + 0x10]
	0x01E57A94 LDRB W10, [X21 + 0x11]
	0x01E57A98 LDRB W11, [X21 + 0x12]
	0x01E57A9C LDR X0, [X8]
	0x01E57AA0 ORR W8, W9, 0x2
	0x01E57AA4 CMP W10, 0x0
	0x01E57AA8 CSEL W8, W9, W8, EQ
	0x01E57AAC ORR W9, W8, 0x4
	0x01E57AB0 CMP W11, 0x0
	0x01E57AB4 CSEL W8, W8, W9, EQ
	0x01E57AB8 ADD X1, X31, 0xC
	0x01E57ABC STR W8, [X31 + 0xC]
	0x01E57AC0 BL 0x1C16E04
	0x01E57AC4 CBZ X20, 0x1E57B34
	0x01E57AC8 LDR X3, [X23]
	0x01E57ACC MOV X2, X0
	0x01E57AD0 MOVZ W1, 0x2
	0x01E57AD4 MOV X0, X20
	0x01E57AD8 BL 0x29D3520
	0x01E57ADC ADRP X21, 0x22A5000
	0x01E57AE0 LDR X21, [X21 + 0x548]
	0x01E57AE4 LDR X0, [X21]
	0x01E57AE8 LDR W8, [X0 + 0xE0]
	0x01E57AEC CBNZ W8, 0x1E57AF8
	0x01E57AF0 BL 0x1C16DFC
	0x01E57AF4 LDR X0, [X21]
	0x01E57AF8 LDR X8, [X0 + 0xB8]
	0x01E57AFC LDR X9, [X19]
	0x01E57B00 MOVZ W1, 0xDE
	0x01E57B04 MOV X0, X19
	0x01E57B08 LDR X3, [X8]
	0x01E57B0C LDR X8, [X9 + 0x228]
	0x01E57B10 LDR X4, [X9 + 0x230]
	0x01E57B14 MOV X2, X20
	0x01E57B18 BLR X8
	0x01E57B1C LDP X20, X19, [X31 + 0x30]
	0x01E57B20 LDP X22, X21, [X31 + 0x20]
	0x01E57B24 LDP X24, X23, [X31 + 0x10]
	0x01E57B28 AND W0, W0, 0x1
	0x01E57B2C LDR X30, [X31], #0x40
	0x01E57B30 RET
	0x01E57B34 BL 0x1C16F20
	0x01E57B38 LDRB W8, [X0 + 0x10]
	0x01E57B3C LDRB W9, [X0 + 0x11]
	0x01E57B40 LDRB W10, [X0 + 0x12]
	0x01E57B44 ORR W11, W8, 0x2
	0x01E57B48 CMP W9, 0x0
	0x01E57B4C CSEL W8, W8, W11, EQ
	0x01E57B50 ORR W9, W8, 0x4
	0x01E57B54 CMP W10, 0x0
	0x01E57B58 CSEL W0, W8, W9, EQ
	0x01E57B5C RET
	0x01E57B60 STP X30, X23, [X31 - 0x30]!
	0x01E57B64 STP X22, X21, [X31 + 0x10]
	0x01E57B68 STP X20, X19, [X31 + 0x20]
	0x01E57B6C ADRP X22, 0x2582000
	0x01E57B70 ADRP X23, 0x22A4000
	0x01E57B74 LDRB W8, [X22 + 0x53]
	0x01E57B78 LDR X23, [X23 + 0xD98]
	0x01E57B7C MOV X21, X2
	0x01E57B80 MOV W19, W1
	0x01E57B84 MOV X20, X0
	0x01E57B88 TBNZ X8, 0x0, 0x1E57BA0
	0x01E57B8C ADRP X0, 0x22A4000
	0x01E57B90 LDR X0, [X0 + 0xD98]
	0x01E57B94 BL 0x1C16CF4
	0x01E57B98 MOVZ W8, 0x1
	0x01E57B9C STRB W8, [X22 + 0x53]
	0x01E57BA0 LDR X0, [X23]
	0x01E57BA4 LDR W8, [X0 + 0xE0]
	0x01E57BA8 CBNZ W8, 0x1E57BB0
	0x01E57BAC BL 0x1C16DFC
	0x01E57BB0 MOV X0, X21
	0x01E57BB4 MOV X1, X31
	0x01E57BB8 BL 0x1E49E14
	0x01E57BBC MOV X2, X0
	0x01E57BC0 MOV X0, X20
	0x01E57BC4 MOV W1, W19
	0x01E57BC8 LDP X20, X19, [X31 + 0x20]
	0x01E57BCC LDP X22, X21, [X31 + 0x10]
	0x01E57BD0 MOV X3, X31
	0x01E57BD4 MOV X4, X31
	0x01E57BD8 LDP X30, X23, [X31], #0x30
	0x01E57BDC B 0x1E57BE0
	0x01E57BE0 SUB X31, X31, 0x60
	0x01E57BE4 STR X30, [X31 + 0x10]
	0x01E57BE8 STP X26, X25, [X31 + 0x20]
	0x01E57BEC STP X24, X23, [X31 + 0x30]
	0x01E57BF0 STP X22, X21, [X31 + 0x40]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x2583000
	009 Move W8, [X21+77]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {45}
	016 Move X0, 0x229D000
	017 Move X0, [X0+2904]
	018 Call 0x1C17CF4
	019 Move X0, 0x229E000
	020 Move X0, [X0+2520]
	021 Call 0x1C17CF4
	022 Move X0, 0x22A6000
	023 Move X0, [X0+1344]
	024 Call 0x1C17CF4
	025 Move X0, 0x22A5000
	026 Move X0, [X0+3424]
	027 Call 0x1C17CF4
	028 Move X0, 0x22A6000
	029 Move X0, [X0+1560]
	030 Call 0x1C17CF4
	031 Move X0, 0x22A6000
	032 Move X0, [X0+696]
	033 Call 0x1C17CF4
	034 Move X0, 0x22A5000
	035 Move X0, [X0+3016]
	036 Call 0x1C17CF4
	037 Move X0, 0x22A6000
	038 Move X0, [X0+1352]
	039 Call 0x1C17CF4
	040 Move X0, 0x22A6000
	041 Move X0, [X0+1592]
	042 Call 0x1C17CF4
	043 Move W8, 1
	044 Move [X21+77], W8
	045 Move W8, [X19+64]
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Move X21, [X19+72]
	048 Compare X21, 0
	049 JumpIfEqual {247}
	050 Move X9, 0x22A5000
	051 Move X8, [X21]
	052 Move X9, [X9+3016]
	053 Move X10, 0x22A6000
	054 Move X1, [X9]
	055 Move X10, [X10+1592]
	056 NotImplemented "Instruction LDRH not yet implemented."
	057 Move X22, [X10]
	058 Compare X9, 0
	059 JumpIfEqual {66}
	060 Move X10, [X8+176]
	061 Add X10, X10, 8
	062 NotImplemented "Instruction LDUR not yet implemented."
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Subtract X9, X9, 1
	065 Add X10, X10, 16
	066 Move X0, X21
	067 Move W2, W31
	068 Call 0x1C5D788
	069 NotImplemented "Instruction LDRSW not yet implemented."
	070 Add X8, X8, X9
	071 Add X0, X8, 312
	072 Move X8, [X0]
	073 Move X3, [X0+8]
	074 Move W1, 3
	075 Move X0, X21
	076 Move X2, X22
	077 NotImplemented "Instruction BLR not yet implemented."
	078 Move X8, 0x22A6000
	079 Move X8, [X8+696]
	080 Move X21, 0x22A6000
	081 Move X0, [X8]
	082 Move X21, [X21+1344]
	083 Call 0x1C17F10
	084 Move X1, [X21]
	085 Move X21, X0
	086 Call Dictionary`2<Byte, Object>..ctor, X0
	087 Compare X20, 0
	088 JumpIfEqual {247}
	089 Move X0, [X20+16]
	090 Move X22, 0x22A6000
	091 Move X22, [X22+1560]
	092 Move X1, X31
	093 Call String.IsNullOrEmpty, X0
	094 Move TEMP, X0
	095 And TEMP, TEMP, 1
	096 Compare TEMP, 1
	097 JumpIfEqual {105}
	098 Compare X21, 0
	099 JumpIfEqual {247}
	100 Move X2, [X20+16]
	101 Move X3, [X22]
	102 Move W1, 255
	103 Move X0, X21
	104 Call Dictionary`2<Byte, Object>.set_Item, X0, X1, X2
	105 Move W8, [X20+49]
	106 NotImplemented "Instruction CMP not yet implemented."
	107 NotImplemented "Instruction CMP not yet implemented."
	108 Move X23, 0x229E000
	109 Move X23, [X23+2520]
	110 Add X1, X31, 12
	111 Move [X31+12], W8
	112 Move X0, [X23]
	113 Call 0x1C17E04
	114 Compare X21, 0
	115 JumpIfEqual {247}
	116 Move X3, [X22]
	117 Move X2, X0
	118 Move W1, 215
	119 Move X0, X21
	120 Call Dictionary`2<Byte, Object>.set_Item, X0, X1, X2
	121 Move X8, [X20+32]
	122 Compare X8, 0
	123 JumpIfEqual {164}
	124 Move X0, [X8+16]
	125 Move X1, X31
	126 Call String.IsNullOrEmpty, X0
	127 Move TEMP, X0
	128 And TEMP, TEMP, 1
	129 Compare TEMP, 1
	130 JumpIfEqual {164}
	131 Move X8, [X20+32]
	132 Compare X8, 0
	133 JumpIfEqual {247}
	134 Move X2, [X8+16]
	135 Move X3, [X22]
	136 Move W1, 213
	137 Move X0, X21
	138 Call Dictionary`2<Byte, Object>.set_Item, X0, X1, X2
	139 Move X8, [X20+32]
	140 Compare X8, 0
	141 JumpIfEqual {247}
	142 Move W8, [X8+24]
	143 Move X0, [X23]
	144 Add X1, X31, 8
	145 Move [X31+8], W8
	146 Call 0x1C17E04
	147 Move X3, [X22]
	148 Move X2, X0
	149 Move W1, 212
	150 Move X8, 0x229E000
	151 Move X8, [X8+2520]
	152 Add X1, X31, 4
	153 Move X0, [X8]
	154 Move W8, 3
	155 Move [X31+4], W8
	156 Call 0x1C17E04
	157 Compare X21, 0
	158 JumpIfEqual {247}
	159 Move X3, [X22]
	160 Move X2, X0
	161 Move W1, 215
	162 Move X0, X21
	163 Call Dictionary`2<Byte, Object>.set_Item, X0, X1, X2
	164 Move X2, [X20+56]
	165 Compare X2, 0
	166 JumpIfEqual {176}
	167 Move W8, [X2+24]
	168 Compare W8, 0
	169 JumpIfEqual {176}
	170 Compare X21, 0
	171 JumpIfEqual {247}
	172 Move X3, [X22]
	173 Move W1, 238
	174 Move X0, X21
	175 Call Dictionary`2<Byte, Object>.set_Item, X0, X1, X2
	176 Move X2, [X20+64]
	177 Compare X2, 0
	178 JumpIfEqual {185}
	179 Compare X21, 0
	180 JumpIfEqual {247}
	181 Move X3, [X22]
	182 Move W1, 190
	183 Move X0, X21
	184 Call Dictionary`2<Byte, Object>.set_Item, X0, X1, X2
	185 Move W8, [X20+48]
	186 Compare W8, 0
	187 JumpIfEqual {221}
	188 Move X0, [X20+40]
	189 Compare X0, 0
	190 JumpIfEqual {203}
	191 Move X8, 0x22A5000
	192 Move X8, [X8+3424]
	193 Move X1, [X8]
	194 Call Dictionary`2<Object, Object>.get_Count, X0
	195 NotImplemented "Instruction CMP not yet implemented."
	196 Compare X21, 0
	197 JumpIfEqual {247}
	198 Move X2, [X20+40]
	199 Move X3, [X22]
	200 Move W1, 249
	201 Move X0, X21
	202 Call Dictionary`2<Byte, Object>.set_Item, X0, X1, X2
	203 Move X8, 0x229D000
	204 Move X8, [X8+2904]
	205 Add X1, X31, 0
	206 Move X0, [X8]
	207 Move W8, 1
	208 Move [X31], W8
	209 Call 0x1C17E04
	210 Compare X21, 0
	211 JumpIfEqual {247}
	212 Move X3, [X22]
	213 Move X2, X0
	214 Move W1, 250
	215 Move X0, X21
	216 Call Dictionary`2<Byte, Object>.set_Item, X0, X1, X2
	217 Move X2, [X20+24]
	218 Move X1, X21
	219 Move W3, W31
	220 Call LoadBalancingPeer.RoomOptionsToOpParameters, X0, X1, X2, X3
	221 Move X20, 0x22A6000
	222 Move X20, [X20+1352]
	223 Move X0, [X20]
	224 Move W8, [X0+224]
	225 Compare W8, 0
	226 JumpIfNotEqual {229}
	227 Call 0x1C17DFC
	228 Move X0, [X20]
	229 Move X8, [X0+184]
	230 Move X9, [X19]
	231 Move W1, 226
	232 Move X0, X19
	233 Move X3, [X8]
	234 Move X8, [X9+552]
	235 Move X4, [X9+560]
	236 Move X2, X21
	237 NotImplemented "Instruction BLR not yet implemented."
	238 Move X20, [X31+48]
	239 Move X19, [X31+56]
	240 Move X22, [X31+32]
	241 Move X21, [X31+40]
	242 Move X30, [X31+16]
	243 Move X23, [X31+24]
	244 And W0, W0, 1
	245 Add X31, X31, 64
	246 Return X0
	247 Call 0x1C17F20

Method: System.Boolean OpJoinRandomRoom(Fusion.Photon.Realtime.OpJoinRandomRoomParams opJoinRandomRoomParams)

Disassembly:
	0x01E57BF4 STP X20, X19, [X31 + 0x50]
	0x01E57BF8 ADRP X24, 0x2582000
	0x01E57BFC LDRB W8, [X24 + 0x54]
	0x01E57C00 MOV X20, X4
	0x01E57C04 MOV X21, X3
	0x01E57C08 MOV X23, X2
	0x01E57C0C MOV W22, W1
	0x01E57C10 MOV X19, X0
	0x01E57C14 TBNZ X8, 0x0, 0x1E57CB0
	0x01E57C18 ADRP X0, 0x229C000
	0x01E57C1C LDR X0, [X0 + 0xB58]
	0x01E57C20 BL 0x1C16CF4
	0x01E57C24 ADRP X0, 0x229D000
	0x01E57C28 LDR X0, [X0 + 0x9D8]
	0x01E57C2C BL 0x1C16CF4
	0x01E57C30 ADRP X0, 0x22A5000
	0x01E57C34 LDR X0, [X0 + 0x538]
	0x01E57C38 BL 0x1C16CF4
	0x01E57C3C ADRP X0, 0x22A5000
	0x01E57C40 LDR X0, [X0 + 0x540]
	0x01E57C44 BL 0x1C16CF4
	0x01E57C48 ADRP X0, 0x22A4000
	0x01E57C4C LDR X0, [X0 + 0xD60]
	0x01E57C50 BL 0x1C16CF4
	0x01E57C54 ADRP X0, 0x22A5000
	0x01E57C58 LDR X0, [X0 + 0x618]
	0x01E57C5C BL 0x1C16CF4
	0x01E57C60 ADRP X0, 0x22A5000
	0x01E57C64 LDR X0, [X0 + 0x2B8]
	0x01E57C68 BL 0x1C16CF4
	0x01E57C6C ADRP X0, 0x22A4000
	0x01E57C70 LDR X0, [X0 + 0xBC8]
	0x01E57C74 BL 0x1C16CF4
	0x01E57C78 ADRP X0, 0x229C000
	0x01E57C7C LDR X0, [X0 + 0x758]
	0x01E57C80 BL 0x1C16CF4
	0x01E57C84 ADRP X0, 0x22A5000
	0x01E57C88 LDR X0, [X0 + 0x548]
	0x01E57C8C BL 0x1C16CF4
	0x01E57C90 ADRP X0, 0x22A5000
	0x01E57C94 LDR X0, [X0 + 0x678]
	0x01E57C98 BL 0x1C16CF4
	0x01E57C9C ADRP X0, 0x22A5000
	0x01E57CA0 LDR X0, [X0 + 0x680]
	0x01E57CA4 BL 0x1C16CF4
	0x01E57CA8 MOVZ W8, 0x1
	0x01E57CAC STRB W8, [X24 + 0x54]
	0x01E57CB0 LDRB W8, [X19 + 0x40]
	0x01E57CB4 CMP W8, 0x3
	0x01E57CB8 B.CC 0x1E57D38
	0x01E57CBC LDR X24, [X19 + 0x48]
	0x01E57CC0 CBZ X24, 0x1E57F54
	0x01E57CC4 ADRP X9, 0x22A4000
	0x01E57CC8 LDR X8, [X24]
	0x01E57CCC LDR X9, [X9 + 0xBC8]
	0x01E57CD0 ADRP X10, 0x22A5000
	0x01E57CD4 LDR X1, [X9]
	0x01E57CD8 LDR X10, [X10 + 0x680]
	0x01E57CDC LDRH W9, [X8 + 0x12E]
	0x01E57CE0 LDR X25, [X10]
	0x01E57CE4 CBZ X9, 0x1E57D08
	0x01E57CE8 LDR X10, [X8 + 0xB0]
	0x01E57CEC ADD X10, X10, 0x8
	0x01E57CF0 LDUR X11, [X10 - 0x8]
	0x01E57CF4 CMP X11, X1
	0x01E57CF8 B.EQ 0x1E57D18
	0x01E57CFC SUBS X9, X9, 0x1
	0x01E57D00 ADD X10, X10, 0x10
	0x01E57D04 B.NE 0x1E57CF0
	0x01E57D08 MOV X0, X24
	0x01E57D0C MOV W2, W31
	0x01E57D10 BL 0x1C5C788
	0x01E57D14 B 0x1E57D24
	0x01E57D18 LDRSW X9, [X10]
	0x01E57D1C ADD X8, X8, X9, 0x4, LSL
	0x01E57D20 ADD X0, X8, 0x138
	0x01E57D24 LDP X8, X3, [X0]
	0x01E57D28 MOVZ W1, 0x3
	0x01E57D2C MOV X0, X24
	0x01E57D30 MOV X2, X25
	0x01E57D34 BLR X8
	0x01E57D38 CMP W22, 0x1
	0x01E57D3C B.LT 0x1E57EA8
	0x01E57D40 CBZ X23, 0x1E57EA8
	0x01E57D44 ADRP X25, 0x22A4000
	0x01E57D48 LDR X25, [X25 + 0xD60]
	0x01E57D4C MOV X0, X23
	0x01E57D50 LDR X1, [X25]
	0x01E57D54 BL 0x2AA4E88
	0x01E57D58 CBZ W0, 0x1E57EA8
	0x01E57D5C ADRP X8, 0x22A5000
	0x01E57D60 LDR X8, [X8 + 0x2B8]
	0x01E57D64 LDR X0, [X8]
	0x01E57D68 BL 0x1C16F10
	0x01E57D6C ADRP X8, 0x22A5000
	0x01E57D70 LDR X8, [X8 + 0x540]
	0x01E57D74 MOV X24, X0
	0x01E57D78 LDR X1, [X8]
	0x01E57D7C BL 0x29D2C7C
	0x01E57D80 CBZ X24, 0x1E57F54
	0x01E57D84 ADRP X26, 0x22A5000
	0x01E57D88 LDR X26, [X26 + 0x538]
	0x01E57D8C MOVZ W1, 0xFB
	0x01E57D90 MOV X0, X24
	0x01E57D94 MOV X2, X23
	0x01E57D98 LDR X3, [X26]
	0x01E57D9C BL 0x29D3534
	0x01E57DA0 ADRP X8, 0x229C000
	0x01E57DA4 LDR X8, [X8 + 0x758]
	0x01E57DA8 ADD X1, X31, 0x1C
	0x01E57DAC STR W22, [X31 + 0x1C]
	0x01E57DB0 LDR X0, [X8]
	0x01E57DB4 BL 0x1C16E04
	0x01E57DB8 LDR X3, [X26]
	0x01E57DBC MOV X2, X0
	0x01E57DC0 MOVZ W1, 0xFE
	0x01E57DC4 MOV X0, X24
	0x01E57DC8 BL 0x29D3534
	0x01E57DCC ADRP X8, 0x229C000
	0x01E57DD0 LDR X8, [X8 + 0xB58]
	0x01E57DD4 ADD X1, X31, 0x18
	0x01E57DD8 LDR X0, [X8]
	0x01E57DDC MOVZ W8, 0x1
	0x01E57DE0 STRB W8, [X31 + 0x18]
	0x01E57DE4 BL 0x1C16E04
	0x01E57DE8 LDR X3, [X26]
	0x01E57DEC MOV X2, X0
	0x01E57DF0 MOVZ W1, 0xFA
	0x01E57DF4 MOV X0, X24
	0x01E57DF8 BL 0x29D3534
	0x01E57DFC CBZ X21, 0x1E57E24
	0x01E57E00 LDR X1, [X25]
	0x01E57E04 MOV X0, X21
	0x01E57E08 BL 0x2AA4E88
	0x01E57E0C CBZ W0, 0x1E57E24
	0x01E57E10 LDR X3, [X26]
	0x01E57E14 MOVZ W1, 0xE7
	0x01E57E18 MOV X0, X24
	0x01E57E1C MOV X2, X21
	0x01E57E20 BL 0x29D3534
	0x01E57E24 CBZ X20, 0x1E57E64
	0x01E57E28 LDRB W8, [X20 + 0x10]
	0x01E57E2C TBZ X8, 0x0, 0x1E57E64
	0x01E57E30 ADRP X9, 0x229D000
	0x01E57E34 LDR X9, [X9 + 0x9D8]
	0x01E57E38 ADD X1, X31, 0xC
	0x01E57E3C STRB W8, [X31 + 0xC]
	0x01E57E40 LDR X0, [X9]
	0x01E57E44 BL 0x1C16E04
	0x01E57E48 ADRP X8, 0x22A5000
	0x01E57E4C LDR X8, [X8 + 0x618]
	0x01E57E50 MOV X2, X0
	0x01E57E54 MOVZ W1, 0xEA
	0x01E57E58 MOV X0, X24
	0x01E57E5C LDR X3, [X8]
	0x01E57E60 BL 0x29D3520
	0x01E57E64 ADRP X20, 0x22A5000
	0x01E57E68 LDR X20, [X20 + 0x548]
	0x01E57E6C LDR X0, [X20]
	0x01E57E70 LDR W8, [X0 + 0xE0]
	0x01E57E74 CBNZ W8, 0x1E57E80
	0x01E57E78 BL 0x1C16DFC
	0x01E57E7C LDR X0, [X20]
	0x01E57E80 LDR X8, [X0 + 0xB8]
	0x01E57E84 LDR X9, [X19]
	0x01E57E88 MOVZ W1, 0xFC
	0x01E57E8C MOV X0, X19
	0x01E57E90 LDR X3, [X8]
	0x01E57E94 LDR X8, [X9 + 0x228]
	0x01E57E98 LDR X4, [X9 + 0x230]
	0x01E57E9C MOV X2, X24
	0x01E57EA0 BLR X8
	0x01E57EA4 B 0x1E57F34
	0x01E57EA8 LDRB W8, [X19 + 0x40]
	0x01E57EAC CMP W8, 0x3
	0x01E57EB0 B.CC 0x1E57F30
	0x01E57EB4 LDR X19, [X19 + 0x48]
	0x01E57EB8 CBZ X19, 0x1E57F54
	0x01E57EBC ADRP X9, 0x22A4000
	0x01E57EC0 LDR X8, [X19]
	0x01E57EC4 LDR X9, [X9 + 0xBC8]
	0x01E57EC8 ADRP X10, 0x22A5000
	0x01E57ECC LDR X1, [X9]
	0x01E57ED0 LDR X10, [X10 + 0x678]
	0x01E57ED4 LDRH W9, [X8 + 0x12E]
	0x01E57ED8 LDR X20, [X10]
	0x01E57EDC CBZ X9, 0x1E57F00
	0x01E57EE0 LDR X10, [X8 + 0xB0]
	0x01E57EE4 ADD X10, X10, 0x8
	0x01E57EE8 LDUR X11, [X10 - 0x8]
	0x01E57EEC CMP X11, X1
	0x01E57EF0 B.EQ 0x1E57F10
	0x01E57EF4 SUBS X9, X9, 0x1
	0x01E57EF8 ADD X10, X10, 0x10
	0x01E57EFC B.NE 0x1E57EE8
	0x01E57F00 MOV X0, X19
	0x01E57F04 MOV W2, W31
	0x01E57F08 BL 0x1C5C788
	0x01E57F0C B 0x1E57F1C
	0x01E57F10 LDRSW X9, [X10]
	0x01E57F14 ADD X8, X8, X9, 0x4, LSL
	0x01E57F18 ADD X0, X8, 0x138
	0x01E57F1C LDP X8, X3, [X0]
	0x01E57F20 MOVZ W1, 0x3
	0x01E57F24 MOV X0, X19
	0x01E57F28 MOV X2, X20
	0x01E57F2C BLR X8
	0x01E57F30 MOV W0, W31
	0x01E57F34 LDP X20, X19, [X31 + 0x50]
	0x01E57F38 LDP X22, X21, [X31 + 0x40]
	0x01E57F3C LDP X24, X23, [X31 + 0x30]
	0x01E57F40 LDP X26, X25, [X31 + 0x20]
	0x01E57F44 LDR X30, [X31 + 0x10]
	0x01E57F48 AND W0, W0, 0x1
	0x01E57F4C ADD X31, X31, 0x60
	0x01E57F50 RET
	0x01E57F54 BL 0x1C16F20
	0x01E57F58 LDRB W8, [X0 + 0x10]
	0x01E57F5C AND W0, W8, 0x1
	0x01E57F60 RET
	0x01E57F64 STP X30, X23, [X31 - 0x30]!
	0x01E57F68 STP X22, X21, [X31 + 0x10]
	0x01E57F6C STP X20, X19, [X31 + 0x20]
	0x01E57F70 ADRP X22, 0x2582000
	0x01E57F74 ADRP X23, 0x22A4000
	0x01E57F78 LDRB W8, [X22 + 0x55]
	0x01E57F7C LDR X23, [X23 + 0xDA0]
	0x01E57F80 MOV X20, X2
	0x01E57F84 MOV W21, W1
	0x01E57F88 MOV X19, X0
	0x01E57F8C TBNZ X8, 0x0, 0x1E57FA4
	0x01E57F90 ADRP X0, 0x22A4000
	0x01E57F94 LDR X0, [X0 + 0xDA0]
	0x01E57F98 BL 0x1C16CF4
	0x01E57F9C MOVZ W8, 0x1
	0x01E57FA0 STRB W8, [X22 + 0x55]
	0x01E57FA4 LDR X0, [X23]
	0x01E57FA8 BL 0x1C16F10
	0x01E57FAC MOV X1, X31
	0x01E57FB0 MOV X22, X0
	0x01E57FB4 BL 0x34ED7D8
	0x01E57FB8 CBZ X22, 0x1E57FF0
	0x01E57FBC MOV X0, X22
	0x01E57FC0 MOV W1, W21
	0x01E57FC4 MOV X2, X20
	0x01E57FC8 MOV X3, X31
	0x01E57FCC BL 0x34ED9F4
	0x01E57FD0 MOV X0, X19
	0x01E57FD4 MOV X1, X22
	0x01E57FD8 LDP X20, X19, [X31 + 0x20]
	0x01E57FDC LDP X22, X21, [X31 + 0x10]
	0x01E57FE0 MOV X2, X31
	0x01E57FE4 MOV X3, X31
	0x01E57FE8 LDP X30, X23, [X31], #0x30
	0x01E57FEC B 0x1E57FF4
	0x01E57FF0 BL 0x1C16F20
	0x01E57FF4 SUB X31, X31, 0x50
	0x01E57FF8 STP X30, X25, [X31 + 0x10]
	0x01E57FFC STP X24, X23, [X31 + 0x20]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+32], X24
	004 Move [X31+40], X23
	005 Move [X31+48], X22
	006 Move [X31+56], X21
	007 Move [X31+64], X20
	008 Move [X31+72], X19
	009 Move X21, 0x2583000
	010 Move W8, [X21+78]
	011 Move X20, X1
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {55}
	017 Move X0, 0x229D000
	018 Move X0, [X0+2904]
	019 Call 0x1C17CF4
	020 Move X0, 0x229E000
	021 Move X0, [X0+2520]
	022 Call 0x1C17CF4
	023 Move X0, 0x22A6000
	024 Move X0, [X0+1344]
	025 Call 0x1C17CF4
	026 Move X0, 0x22A5000
	027 Move X0, [X0+3424]
	028 Call 0x1C17CF4
	029 Move X0, 0x22A6000
	030 Move X0, [X0+1560]
	031 Call 0x1C17CF4
	032 Move X0, 0x22A6000
	033 Move X0, [X0+696]
	034 Call 0x1C17CF4
	035 Move X0, 0x22A5000
	036 Move X0, [X0+3480]
	037 Call 0x1C17CF4
	038 Move X0, 0x22A5000
	039 Move X0, [X0+3488]
	040 Call 0x1C17CF4
	041 Move X0, 0x22A5000
	042 Move X0, [X0+3016]
	043 Call 0x1C17CF4
	044 Move X0, 0x229D000
	045 Move X0, [X0+1880]
	046 Call 0x1C17CF4
	047 Move X0, 0x22A6000
	048 Move X0, [X0+1352]
	049 Call 0x1C17CF4
	050 Move X0, 0x22A6000
	051 Move X0, [X0+1600]
	052 Call 0x1C17CF4
	053 Move W8, 1
	054 Move [X21+78], W8
	055 Move W8, [X19+64]
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Move X21, [X19+72]
	058 Compare X21, 0
	059 JumpIfEqual {289}
	060 Move X9, 0x22A5000
	061 Move X8, [X21]
	062 Move X9, [X9+3016]
	063 Move X10, 0x22A6000
	064 Move X1, [X9]
	065 Move X10, [X10+1600]
	066 NotImplemented "Instruction LDRH not yet implemented."
	067 Move X22, [X10]
	068 Compare X9, 0
	069 JumpIfEqual {76}
	070 Move X10, [X8+176]
	071 Add X10, X10, 8
	072 NotImplemented "Instruction LDUR not yet implemented."
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Subtract X9, X9, 1
	075 Add X10, X10, 16
	076 Move X0, X21
	077 Move W2, W31
	078 Call 0x1C5D788
	079 NotImplemented "Instruction LDRSW not yet implemented."
	080 Add X8, X8, X9
	081 Add X0, X8, 312
	082 Move X8, [X0]
	083 Move X3, [X0+8]
	084 Move W1, 3
	085 Move X0, X21
	086 Move X2, X22
	087 NotImplemented "Instruction BLR not yet implemented."
	088 Move X8, 0x22A5000
	089 Move X8, [X8+3488]
	090 Move X0, [X8]
	091 Call 0x1C17F10
	092 Move X1, X31
	093 Move X22, X0
	094 Call Hashtable..ctor, X0
	095 Compare X20, 0
	096 JumpIfEqual {289}
	097 Move X8, 0x22A5000
	098 Move X8, [X8+3480]
	099 Move X21, [X20+16]
	100 Move X0, [X8]
	101 Move W8, [X0+224]
	102 Compare W8, 0
	103 JumpIfNotEqual {105}
	104 Call 0x1C17DFC
	105 Move X24, 0x229E000
	106 Move X24, [X24+2520]
	107 Move X0, X22
	108 Move X1, X21
	109 Move X2, X31
	110 Call Extensions.MergeStringKeys, X0, X1
	111 Move W8, [X20+24]
	112 NotImplemented "Instruction CMP not yet implemented."
	113 Move X0, [X24]
	114 NotImplemented "Instruction CMP not yet implemented."
	115 Move W9, 256
	116 NotImplemented "Instruction CSEL not yet implemented."
	117 Add X1, X31, 28
	118 Move [X31+28], W8
	119 Call 0x1C17E04
	120 Compare X22, 0
	121 JumpIfEqual {289}
	122 Move X2, X0
	123 Move W1, 255
	124 Move X0, X22
	125 Move X3, X31
	126 Call Hashtable.set_Item, X0, X1, X2
	127 Move W8, [X20+24]
	128 NotImplemented "Instruction CMP not yet implemented."
	129 Move X9, 0x229D000
	130 Move X9, [X9+1880]
	131 Add X1, X31, 24
	132 Move [X31+24], W8
	133 Move X0, [X9]
	134 Call 0x1C17E04
	135 Move X2, X0
	136 Move W1, 243
	137 Move X0, X22
	138 Move X3, X31
	139 Call Hashtable.set_Item, X0, X1, X2
	140 Move X8, 0x22A6000
	141 Move X8, [X8+696]
	142 Move X21, 0x22A6000
	143 Move X0, [X8]
	144 Move X21, [X21+1344]
	145 Call 0x1C17F10
	146 Move X1, [X21]
	147 Move X21, X0
	148 Call Dictionary`2<Byte, Object>..ctor, X0
	149 Compare X22, 0
	150 JumpIfEqual {289}
	151 Move X8, 0x22A5000
	152 Move X8, [X8+3424]
	153 Move X23, 0x22A6000
	154 Move X0, X22
	155 Move X1, [X8]
	156 Move X23, [X23+1560]
	157 Call Dictionary`2<Object, Object>.get_Count, X0
	158 NotImplemented "Instruction CMP not yet implemented."
	159 Compare X21, 0
	160 JumpIfEqual {289}
	161 Move X3, [X23]
	162 Move W1, 248
	163 Move X0, X21
	164 Move X2, X22
	165 Call Dictionary`2<Byte, Object>.set_Item, X0, X1, X2
	166 Move W8, [X20+28]
	167 Compare W8, 0
	168 JumpIfEqual {180}
	169 Move X0, [X24]
	170 Add X1, X31, 12
	171 Move [X31+12], W8
	172 Call 0x1C17E04
	173 Compare X21, 0
	174 JumpIfEqual {289}
	175 Move X3, [X23]
	176 Move X2, X0
	177 Move W1, 223
	178 Move X0, X21
	179 Call Dictionary`2<Byte, Object>.set_Item, X0, X1, X2
	180 Move X8, [X20+32]
	181 Compare X8, 0
	182 JumpIfEqual {213}
	183 Move X0, [X8+16]
	184 Move X1, X31
	185 Call String.IsNullOrEmpty, X0
	186 Move TEMP, X0
	187 And TEMP, TEMP, 1
	188 Compare TEMP, 1
	189 JumpIfEqual {213}
	190 Move X8, [X20+32]
	191 Compare X8, 0
	192 JumpIfEqual {289}
	193 Compare X21, 0
	194 JumpIfEqual {289}
	195 Move X2, [X8+16]
	196 Move X3, [X23]
	197 Move W1, 213
	198 Move X0, X21
	199 Call Dictionary`2<Byte, Object>.set_Item, X0, X1, X2
	200 Move X8, [X20+32]
	201 Compare X8, 0
	202 JumpIfEqual {289}
	203 Move W8, [X8+24]
	204 Move X0, [X24]
	205 Add X1, X31, 8
	206 Move [X31+8], W8
	207 Call 0x1C17E04
	208 Move X3, [X23]
	209 Move X2, X0
	210 Move W1, 212
	211 Move X0, X21
	212 Call Dictionary`2<Byte, Object>.set_Item, X0, X1, X2
	213 Move X0, [X20+40]
	214 Move X1, X31
	215 Call String.IsNullOrEmpty, X0
	216 Move TEMP, X0
	217 And TEMP, TEMP, 1
	218 Compare TEMP, 1
	219 JumpIfEqual {227}
	220 Compare X21, 0
	221 JumpIfEqual {289}
	222 Move X2, [X20+40]
	223 Move X3, [X23]
	224 Move W1, 245
	225 Move X0, X21
	226 Call Dictionary`2<Byte, Object>.set_Item, X0, X1, X2
	227 Move X2, [X20+48]
	228 Compare X2, 0
	229 JumpIfEqual {239}
	230 Move W8, [X2+24]
	231 Compare W8, 0
	232 JumpIfEqual {239}
	233 Compare X21, 0
	234 JumpIfEqual {289}
	235 Move X3, [X23]
	236 Move W1, 238
	237 Move X0, X21
	238 Call Dictionary`2<Byte, Object>.set_Item, X0, X1, X2
	239 Move X2, [X20+56]
	240 Compare X2, 0
	241 JumpIfEqual {248}
	242 Compare X21, 0
	243 JumpIfEqual {289}
	244 Move X3, [X23]
	245 Move W1, 190
	246 Move X0, X21
	247 Call Dictionary`2<Byte, Object>.set_Item, X0, X1, X2
	248 Move X8, 0x229D000
	249 Move X8, [X8+2904]
	250 Add X1, X31, 4
	251 Move X0, [X8]
	252 Move W8, 1
	253 Move [X31+4], W8
	254 Call 0x1C17E04
	255 Compare X21, 0
	256 JumpIfEqual {289}
	257 Move X3, [X23]
	258 Move X20, 0x22A6000
	259 Move X20, [X20+1352]
	260 Move X2, X0
	261 Move W1, 188
	262 Move X0, X21
	263 Call Dictionary`2<Byte, Object>.set_Item, X0, X1, X2
	264 Move X0, [X20]
	265 Move W8, [X0+224]
	266 Compare W8, 0
	267 JumpIfNotEqual {270}
	268 Call 0x1C17DFC
	269 Move X0, [X20]
	270 Move X8, [X0+184]
	271 Move X9, [X19]
	272 Move W1, 225
	273 Move X0, X19
	274 Move X3, [X8]
	275 Move X8, [X9+552]
	276 Move X4, [X9+560]
	277 Move X2, X21
	278 NotImplemented "Instruction BLR not yet implemented."
	279 Move X20, [X31+64]
	280 Move X19, [X31+72]
	281 Move X22, [X31+48]
	282 Move X21, [X31+56]
	283 Move X24, [X31+32]
	284 Move X23, [X31+40]
	285 Move X30, [X31+16]
	286 And W0, W0, 1
	287 Add X31, X31, 80
	288 Return X0
	289 Call 0x1C17F20

Method: System.Boolean OpJoinRandomOrCreateRoom(Fusion.Photon.Realtime.OpJoinRandomRoomParams opJoinRandomRoomParams, Fusion.Photon.Realtime.EnterRoomParams createRoomParams)

Disassembly:
	0x01E58000 STP X22, X21, [X31 + 0x30]
	0x01E58004 STP X20, X19, [X31 + 0x40]
	0x01E58008 ADRP X23, 0x2581000
	0x01E5800C LDRB W8, [X23 + 0x57]
	0x01E58010 MOV X20, X3
	0x01E58014 MOV X21, X2
	0x01E58018 MOV X22, X1
	0x01E5801C MOV X19, X0
	0x01E58020 TBNZ X8, 0x0, 0x1E580B0
	0x01E58024 ADRP X0, 0x229B000
	0x01E58028 LDR X0, [X0 + 0xB58]
	0x01E5802C BL 0x1C16CF4
	0x01E58030 ADRP X0, 0x229C000
	0x01E58034 LDR X0, [X0 + 0x9D8]
	0x01E58038 BL 0x1C16CF4
	0x01E5803C ADRP X0, 0x22A4000
	0x01E58040 LDR X0, [X0 + 0x538]
	0x01E58044 BL 0x1C16CF4
	0x01E58048 ADRP X0, 0x22A4000
	0x01E5804C LDR X0, [X0 + 0x540]
	0x01E58050 BL 0x1C16CF4
	0x01E58054 ADRP X0, 0x22A3000
	0x01E58058 LDR X0, [X0 + 0xD60]
	0x01E5805C BL 0x1C16CF4
	0x01E58060 ADRP X0, 0x22A4000
	0x01E58064 LDR X0, [X0 + 0x618]
	0x01E58068 BL 0x1C16CF4
	0x01E5806C ADRP X0, 0x22A4000
	0x01E58070 LDR X0, [X0 + 0x2B8]
	0x01E58074 BL 0x1C16CF4
	0x01E58078 ADRP X0, 0x22A3000
	0x01E5807C LDR X0, [X0 + 0xBC8]
	0x01E58080 BL 0x1C16CF4
	0x01E58084 ADRP X0, 0x22A4000
	0x01E58088 LDR X0, [X0 + 0x548]
	0x01E5808C BL 0x1C16CF4
	0x01E58090 ADRP X0, 0x22A4000
	0x01E58094 LDR X0, [X0 + 0x688]
	0x01E58098 BL 0x1C16CF4
	0x01E5809C ADRP X0, 0x22A4000
	0x01E580A0 LDR X0, [X0 + 0x690]
	0x01E580A4 BL 0x1C16CF4
	0x01E580A8 MOVZ W8, 0x1
	0x01E580AC STRB W8, [X23 + 0x57]
	0x01E580B0 LDRB W8, [X19 + 0x40]
	0x01E580B4 CMP W8, 0x3
	0x01E580B8 B.CC 0x1E58138
	0x01E580BC LDR X23, [X19 + 0x48]
	0x01E580C0 CBZ X23, 0x1E5831C
	0x01E580C4 ADRP X9, 0x22A3000
	0x01E580C8 LDR X8, [X23]
	0x01E580CC LDR X9, [X9 + 0xBC8]
	0x01E580D0 ADRP X10, 0x22A4000
	0x01E580D4 LDR X1, [X9]
	0x01E580D8 LDR X10, [X10 + 0x688]
	0x01E580DC LDRH W9, [X8 + 0x12E]
	0x01E580E0 LDR X24, [X10]
	0x01E580E4 CBZ X9, 0x1E58108
	0x01E580E8 LDR X10, [X8 + 0xB0]
	0x01E580EC ADD X10, X10, 0x8
	0x01E580F0 LDUR X11, [X10 - 0x8]
	0x01E580F4 CMP X11, X1
	0x01E580F8 B.EQ 0x1E58118
	0x01E580FC SUBS X9, X9, 0x1
	0x01E58100 ADD X10, X10, 0x10
	0x01E58104 B.NE 0x1E580F0
	0x01E58108 MOV X0, X23
	0x01E5810C MOV W2, W31
	0x01E58110 BL 0x1C5C788
	0x01E58114 B 0x1E58124
	0x01E58118 LDRSW X9, [X10]
	0x01E5811C ADD X8, X8, X9, 0x4, LSL
	0x01E58120 ADD X0, X8, 0x138
	0x01E58124 LDP X8, X3, [X0]
	0x01E58128 MOVZ W1, 0x3
	0x01E5812C MOV X0, X23
	0x01E58130 MOV X2, X24
	0x01E58134 BLR X8
	0x01E58138 CBZ X22, 0x1E58274
	0x01E5813C ADRP X24, 0x22A3000
	0x01E58140 LDR X24, [X24 + 0xD60]
	0x01E58144 MOV X0, X22
	0x01E58148 LDR X1, [X24]
	0x01E5814C BL 0x2AA4E88
	0x01E58150 CBZ W0, 0x1E58274
	0x01E58154 ADRP X8, 0x22A4000
	0x01E58158 LDR X8, [X8 + 0x2B8]
	0x01E5815C LDR X0, [X8]
	0x01E58160 BL 0x1C16F10
	0x01E58164 ADRP X8, 0x22A4000
	0x01E58168 LDR X8, [X8 + 0x540]
	0x01E5816C MOV X23, X0
	0x01E58170 LDR X1, [X8]
	0x01E58174 BL 0x29D2C7C
	0x01E58178 CBZ X23, 0x1E5831C
	0x01E5817C ADRP X25, 0x22A4000
	0x01E58180 LDR X25, [X25 + 0x538]
	0x01E58184 MOVZ W1, 0xFB
	0x01E58188 MOV X0, X23
	0x01E5818C MOV X2, X22
	0x01E58190 LDR X3, [X25]
	0x01E58194 BL 0x29D3534
	0x01E58198 ADRP X8, 0x229B000
	0x01E5819C LDR X8, [X8 + 0xB58]
	0x01E581A0 ADD X1, X31, 0xC
	0x01E581A4 LDR X0, [X8]
	0x01E581A8 MOVZ W8, 0x1
	0x01E581AC STRB W8, [X31 + 0xC]
	0x01E581B0 BL 0x1C16E04
	0x01E581B4 LDR X3, [X25]
	0x01E581B8 MOV X2, X0
	0x01E581BC MOVZ W1, 0xFA
	0x01E581C0 MOV X0, X23
	0x01E581C4 BL 0x29D3534
	0x01E581C8 CBZ X21, 0x1E581F0
	0x01E581CC LDR X1, [X24]
	0x01E581D0 MOV X0, X21
	0x01E581D4 BL 0x2AA4E88
	0x01E581D8 CBZ W0, 0x1E581F0
	0x01E581DC LDR X3, [X25]
	0x01E581E0 MOVZ W1, 0xE7
	0x01E581E4 MOV X0, X23
	0x01E581E8 MOV X2, X21
	0x01E581EC BL 0x29D3534
	0x01E581F0 CBZ X20, 0x1E58230
	0x01E581F4 LDRB W8, [X20 + 0x10]
	0x01E581F8 TBZ X8, 0x0, 0x1E58230
	0x01E581FC ADRP X9, 0x229C000
	0x01E58200 LDR X9, [X9 + 0x9D8]
	0x01E58204 ADD X1, X31, 0x8
	0x01E58208 STRB W8, [X31 + 0x8]
	0x01E5820C LDR X0, [X9]
	0x01E58210 BL 0x1C16E04
	0x01E58214 ADRP X8, 0x22A4000
	0x01E58218 LDR X8, [X8 + 0x618]
	0x01E5821C MOV X2, X0
	0x01E58220 MOVZ W1, 0xEA
	0x01E58224 MOV X0, X23
	0x01E58228 LDR X3, [X8]
	0x01E5822C BL 0x29D3520
	0x01E58230 ADRP X20, 0x22A4000
	0x01E58234 LDR X20, [X20 + 0x548]
	0x01E58238 LDR X0, [X20]
	0x01E5823C LDR W8, [X0 + 0xE0]
	0x01E58240 CBNZ W8, 0x1E5824C
	0x01E58244 BL 0x1C16DFC
	0x01E58248 LDR X0, [X20]
	0x01E5824C LDR X8, [X0 + 0xB8]
	0x01E58250 LDR X9, [X19]
	0x01E58254 MOVZ W1, 0xFC
	0x01E58258 MOV X0, X19
	0x01E5825C LDR X3, [X8]
	0x01E58260 LDR X8, [X9 + 0x228]
	0x01E58264 LDR X4, [X9 + 0x230]
	0x01E58268 MOV X2, X23
	0x01E5826C BLR X8
	0x01E58270 B 0x1E58300
	0x01E58274 LDRB W8, [X19 + 0x40]
	0x01E58278 CMP W8, 0x3
	0x01E5827C B.CC 0x1E582FC
	0x01E58280 LDR X19, [X19 + 0x48]
	0x01E58284 CBZ X19, 0x1E5831C
	0x01E58288 ADRP X9, 0x22A3000
	0x01E5828C LDR X8, [X19]
	0x01E58290 LDR X9, [X9 + 0xBC8]
	0x01E58294 ADRP X10, 0x22A4000
	0x01E58298 LDR X1, [X9]
	0x01E5829C LDR X10, [X10 + 0x690]
	0x01E582A0 LDRH W9, [X8 + 0x12E]
	0x01E582A4 LDR X20, [X10]
	0x01E582A8 CBZ X9, 0x1E582CC
	0x01E582AC LDR X10, [X8 + 0xB0]
	0x01E582B0 ADD X10, X10, 0x8
	0x01E582B4 LDUR X11, [X10 - 0x8]
	0x01E582B8 CMP X11, X1
	0x01E582BC B.EQ 0x1E582DC
	0x01E582C0 SUBS X9, X9, 0x1
	0x01E582C4 ADD X10, X10, 0x10
	0x01E582C8 B.NE 0x1E582B4
	0x01E582CC MOV X0, X19
	0x01E582D0 MOV W2, W31
	0x01E582D4 BL 0x1C5C788
	0x01E582D8 B 0x1E582E8
	0x01E582DC LDRSW X9, [X10]
	0x01E582E0 ADD X8, X8, X9, 0x4, LSL
	0x01E582E4 ADD X0, X8, 0x138
	0x01E582E8 LDP X8, X3, [X0]
	0x01E582EC MOVZ W1, 0x3
	0x01E582F0 MOV X0, X19
	0x01E582F4 MOV X2, X20
	0x01E582F8 BLR X8
	0x01E582FC MOV W0, W31
	0x01E58300 LDP X20, X19, [X31 + 0x40]
	0x01E58304 LDP X22, X21, [X31 + 0x30]
	0x01E58308 LDP X24, X23, [X31 + 0x20]
	0x01E5830C LDP X30, X25, [X31 + 0x10]
	0x01E58310 AND W0, W0, 0x1
	0x01E58314 ADD X31, X31, 0x50
	0x01E58318 RET
	0x01E5831C BL 0x1C16F20
	0x01E58320 STR X30, [X31 - 0x30]!
	0x01E58324 STP X22, X21, [X31 + 0x10]
	0x01E58328 STP X20, X19, [X31 + 0x20]
	0x01E5832C ADRP X21, 0x2581000
	0x01E58330 ADRP X22, 0x22A3000
	0x01E58334 LDRB W8, [X21 + 0x56]
	0x01E58338 LDR X22, [X22 + 0xD98]
	0x01E5833C MOV X20, X1
	0x01E58340 MOV X19, X0
	0x01E58344 TBNZ X8, 0x0, 0x1E5835C
	0x01E58348 ADRP X0, 0x22A3000
	0x01E5834C LDR X0, [X0 + 0xD98]
	0x01E58350 BL 0x1C16CF4
	0x01E58354 MOVZ W8, 0x1
	0x01E58358 STRB W8, [X21 + 0x56]
	0x01E5835C LDR X0, [X22]
	0x01E58360 LDR W8, [X0 + 0xE0]
	0x01E58364 CBNZ W8, 0x1E5836C
	0x01E58368 BL 0x1C16DFC
	0x01E5836C MOV X0, X20
	0x01E58370 MOV X1, X31
	0x01E58374 BL 0x1E49E14
	0x01E58378 MOV X1, X0
	0x01E5837C MOV X0, X19
	0x01E58380 LDP X20, X19, [X31 + 0x20]
	0x01E58384 LDP X22, X21, [X31 + 0x10]
	0x01E58388 MOV X2, X31
	0x01E5838C MOV X3, X31
	0x01E58390 LDR X30, [X31], #0x30
	0x01E58394 B 0x1E57FF4
	0x01E58398 SUB X31, X31, 0x60
	0x01E5839C STR X30, [X31 + 0x10]
	0x01E583A0 STP X26, X25, [X31 + 0x20]
	0x01E583A4 STP X24, X23, [X31 + 0x30]
	0x01E583A8 STP X22, X21, [X31 + 0x40]
	0x01E583AC STP X20, X19, [X31 + 0x50]
	0x01E583B0 ADRP X21, 0x2581000
	0x01E583B4 LDRB W8, [X21 + 0x58]
	0x01E583B8 MOV W25, W5
	0x01E583BC MOV X22, X4
	0x01E583C0 MOV X20, X3
	0x01E583C4 MOV X24, X2
	0x01E583C8 MOV X23, X1
	0x01E583CC MOV X19, X0
	0x01E583D0 TBNZ X8, 0x0, 0x1E5843C
	0x01E583D4 ADRP X0, 0x229B000
	0x01E583D8 LDR X0, [X0 + 0xB58]
	0x01E583DC BL 0x1C16CF4
	0x01E583E0 ADRP X0, 0x229C000
	0x01E583E4 LDR X0, [X0 + 0x9D8]
	0x01E583E8 BL 0x1C16CF4
	0x01E583EC ADRP X0, 0x22A4000
	0x01E583F0 LDR X0, [X0 + 0x540]
	0x01E583F4 BL 0x1C16CF4
	0x01E583F8 ADRP X0, 0x22A4000
	0x01E583FC LDR X0, [X0 + 0x618]
	0x01E58400 BL 0x1C16CF4
	0x01E58404 ADRP X0, 0x22A4000
	0x01E58408 LDR X0, [X0 + 0x2B8]
	0x01E5840C BL 0x1C16CF4
	0x01E58410 ADRP X0, 0x22A3000
	0x01E58414 LDR X0, [X0 + 0xBC8]
	0x01E58418 BL 0x1C16CF4
	0x01E5841C ADRP X0, 0x22A4000
	0x01E58420 LDR X0, [X0 + 0x548]
	0x01E58424 BL 0x1C16CF4
	0x01E58428 ADRP X0, 0x22A4000
	0x01E5842C LDR X0, [X0 + 0x698]
	0x01E58430 BL 0x1C16CF4
	0x01E58434 MOVZ W8, 0x1
	0x01E58438 STRB W8, [X21 + 0x58]
	0x01E5843C STR X31, [X31 + 0x18]
	0x01E58440 LDRB W8, [X19 + 0x40]
	0x01E58444 CMP W8, 0x3
	0x01E58448 B.CC 0x1E584C8
	0x01E5844C LDR X21, [X19 + 0x48]
	0x01E58450 CBZ X21, 0x1E586E8
	0x01E58454 ADRP X9, 0x22A3000
	0x01E58458 LDR X8, [X21]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+32], X30
	003 Move [X31+40], X25
	004 Move [X31+48], X24
	005 Move [X31+56], X23
	006 Move [X31+64], X22
	007 Move [X31+72], X21
	008 Move [X31+80], X20
	009 Move [X31+88], X19
	010 Move X22, 0x2582000
	011 Move W8, [X22+79]
	012 Move X20, X2
	013 Move X21, X1
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {57}
	019 Move X0, 0x229C000
	020 Move X0, [X0+2904]
	021 Call 0x1C17CF4
	022 Move X0, 0x229D000
	023 Move X0, [X0+2520]
	024 Call 0x1C17CF4
	025 Move X0, 0x22A5000
	026 Move X0, [X0+1344]
	027 Call 0x1C17CF4
	028 Move X0, 0x22A4000
	029 Move X0, [X0+3424]
	030 Call 0x1C17CF4
	031 Move X0, 0x22A5000
	032 Move X0, [X0+1560]
	033 Call 0x1C17CF4
	034 Move X0, 0x22A5000
	035 Move X0, [X0+696]
	036 Call 0x1C17CF4
	037 Move X0, 0x22A4000
	038 Move X0, [X0+3480]
	039 Call 0x1C17CF4
	040 Move X0, 0x22A4000
	041 Move X0, [X0+3488]
	042 Call 0x1C17CF4
	043 Move X0, 0x22A4000
	044 Move X0, [X0+3016]
	045 Call 0x1C17CF4
	046 Move X0, 0x229C000
	047 Move X0, [X0+1880]
	048 Call 0x1C17CF4
	049 Move X0, 0x22A5000
	050 Move X0, [X0+1352]
	051 Call 0x1C17CF4
	052 Move X0, 0x22A5000
	053 Move X0, [X0+1608]
	054 Call 0x1C17CF4
	055 Move W8, 1
	056 Move [X22+79], W8
	057 Move W8, [X19+64]
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Move X22, [X19+72]
	060 Compare X22, 0
	061 JumpIfEqual {315}
	062 Move X9, 0x22A4000
	063 Move X8, [X22]
	064 Move X9, [X9+3016]
	065 Move X10, 0x22A5000
	066 Move X1, [X9]
	067 Move X10, [X10+1608]
	068 NotImplemented "Instruction LDRH not yet implemented."
	069 Move X23, [X10]
	070 Compare X9, 0
	071 JumpIfEqual {78}
	072 Move X10, [X8+176]
	073 Add X10, X10, 8
	074 NotImplemented "Instruction LDUR not yet implemented."
	075 NotImplemented "Instruction CMP not yet implemented."
	076 Subtract X9, X9, 1
	077 Add X10, X10, 16
	078 Move X0, X22
	079 Move W2, W31
	080 Call 0x1C5D788
	081 NotImplemented "Instruction LDRSW not yet implemented."
	082 Add X8, X8, X9
	083 Add X0, X8, 312
	084 Move X8, [X0]
	085 Move X3, [X0+8]
	086 Move W1, 3
	087 Move X0, X22
	088 Move X2, X23
	089 NotImplemented "Instruction BLR not yet implemented."
	090 Move X8, 0x22A4000
	091 Move X8, [X8+3488]
	092 Move X0, [X8]
	093 Call 0x1C17F10
	094 Move X1, X31
	095 Move X23, X0
	096 Call Hashtable..ctor, X0
	097 Compare X21, 0
	098 JumpIfEqual {315}
	099 Move X8, 0x22A4000
	100 Move X8, [X8+3480]
	101 Move X22, [X21+16]
	102 Move X0, [X8]
	103 Move W8, [X0+224]
	104 Compare W8, 0
	105 JumpIfNotEqual {107}
	106 Call 0x1C17DFC
	107 Move X24, 0x229D000
	108 Move X24, [X24+2520]
	109 Move X0, X23
	110 Move X1, X22
	111 Move X2, X31
	112 Call Extensions.MergeStringKeys, X0, X1
	113 Move W8, [X21+24]
	114 NotImplemented "Instruction CMP not yet implemented."
	115 Move X0, [X24]
	116 NotImplemented "Instruction CMP not yet implemented."
	117 Move W9, 256
	118 NotImplemented "Instruction CSEL not yet implemented."
	119 Add X1, X31, 28
	120 Move [X31+28], W8
	121 Call 0x1C17E04
	122 Compare X23, 0
	123 JumpIfEqual {315}
	124 Move X2, X0
	125 Move W1, 255
	126 Move X0, X23
	127 Move X3, X31
	128 Call Hashtable.set_Item, X0, X1, X2
	129 Move W8, [X21+24]
	130 NotImplemented "Instruction CMP not yet implemented."
	131 Move X9, 0x229C000
	132 Move X9, [X9+1880]
	133 Add X1, X31, 24
	134 Move [X31+24], W8
	135 Move X0, [X9]
	136 Call 0x1C17E04
	137 Move X2, X0
	138 Move W1, 243
	139 Move X0, X23
	140 Move X3, X31
	141 Call Hashtable.set_Item, X0, X1, X2
	142 Move X8, 0x22A5000
	143 Move X8, [X8+696]
	144 Move X22, 0x22A5000
	145 Move X0, [X8]
	146 Move X22, [X22+1344]
	147 Call 0x1C17F10
	148 Move X1, [X22]
	149 Move X22, X0
	150 Call Dictionary`2<Byte, Object>..ctor, X0
	151 Compare X23, 0
	152 JumpIfEqual {315}
	153 Move X8, 0x22A4000
	154 Move X8, [X8+3424]
	155 Move X25, 0x22A5000
	156 Move X0, X23
	157 Move X1, [X8]
	158 Move X25, [X25+1560]
	159 Call Dictionary`2<Object, Object>.get_Count, X0
	160 NotImplemented "Instruction CMP not yet implemented."
	161 Compare X22, 0
	162 JumpIfEqual {315}
	163 Move X3, [X25]
	164 Move W1, 248
	165 Move X0, X22
	166 Move X2, X23
	167 Call Dictionary`2<Byte, Object>.set_Item, X0, X1, X2
	168 Move W8, [X21+28]
	169 Compare W8, 0
	170 JumpIfEqual {182}
	171 Move X0, [X24]
	172 Add X1, X31, 20
	173 Move [X31+20], W8
	174 Call 0x1C17E04
	175 Compare X22, 0
	176 JumpIfEqual {315}
	177 Move X3, [X25]
	178 Move X2, X0
	179 Move W1, 223
	180 Move X0, X22
	181 Call Dictionary`2<Byte, Object>.set_Item, X0, X1, X2
	182 Move X8, [X21+32]
	183 Compare X8, 0
	184 JumpIfEqual {215}
	185 Move X0, [X8+16]
	186 Move X1, X31
	187 Call String.IsNullOrEmpty, X0
	188 Move TEMP, X0
	189 And TEMP, TEMP, 1
	190 Compare TEMP, 1
	191 JumpIfEqual {215}
	192 Move X8, [X21+32]
	193 Compare X8, 0
	194 JumpIfEqual {315}
	195 Compare X22, 0
	196 JumpIfEqual {315}
	197 Move X2, [X8+16]
	198 Move X3, [X25]
	199 Move W1, 213
	200 Move X0, X22
	201 Call Dictionary`2<Byte, Object>.set_Item, X0, X1, X2
	202 Move X8, [X21+32]
	203 Compare X8, 0
	204 JumpIfEqual {315}
	205 Move W8, [X8+24]
	206 Move X0, [X24]
	207 Add X1, X31, 16
	208 Move [X31+16], W8
	209 Call 0x1C17E04
	210 Move X3, [X25]
	211 Move X2, X0
	212 Move W1, 212
	213 Move X0, X22
	214 Call Dictionary`2<Byte, Object>.set_Item, X0, X1, X2
	215 Move X0, [X21+40]
	216 Move X1, X31
	217 Call String.IsNullOrEmpty, X0
	218 Move TEMP, X0
	219 And TEMP, TEMP, 1
	220 Compare TEMP, 1
	221 JumpIfEqual {229}
	222 Compare X22, 0
	223 JumpIfEqual {315}
	224 Move X2, [X21+40]
	225 Move X3, [X25]
	226 Move W1, 245
	227 Move X0, X22
	228 Call Dictionary`2<Byte, Object>.set_Item, X0, X1, X2
	229 Move X2, [X21+48]
	230 Compare X2, 0
	231 JumpIfEqual {241}
	232 Move W8, [X2+24]
	233 Compare W8, 0
	234 JumpIfEqual {241}
	235 Compare X22, 0
	236 JumpIfEqual {315}
	237 Move X3, [X25]
	238 Move W1, 238
	239 Move X0, X22
	240 Call Dictionary`2<Byte, Object>.set_Item, X0, X1, X2
	241 Move X2, [X21+56]
	242 Compare X2, 0
	243 JumpIfEqual {250}
	244 Compare X22, 0
	245 JumpIfEqual {315}
	246 Move X3, [X25]
	247 Move W1, 190
	248 Move X0, X22
	249 Call Dictionary`2<Byte, Object>.set_Item, X0, X1, X2
	250 Move X0, [X24]
	251 Move W23, 1
	252 Add X1, X31, 12
	253 Move [X31+12], W23
	254 Call 0x1C17E04
	255 Compare X22, 0
	256 JumpIfEqual {315}
	257 Move X3, [X25]
	258 Move X24, 0x229C000
	259 Move X21, 0x22A5000
	260 Move X24, [X24+2904]
	261 Move X21, [X21+1352]
	262 Move X2, X0
	263 Move W1, 215
	264 Move X0, X22
	265 Call Dictionary`2<Byte, Object>.set_Item, X0, X1, X2
	266 Move X0, [X24]
	267 Add X1, X31, 8
	268 Move [X31+8], W23
	269 Call 0x1C17E04
	270 Move X3, [X25]
	271 Move X2, X0
	272 Move W1, 188
	273 Move X0, X22
	274 Call Dictionary`2<Byte, Object>.set_Item, X0, X1, X2
	275 Compare X20, 0
	276 JumpIfEqual {289}
	277 Move X0, [X20+16]
	278 Move X1, X31
	279 Call String.IsNullOrEmpty, X0
	280 Move TEMP, X0
	281 And TEMP, TEMP, 1
	282 Compare TEMP, 1
	283 JumpIfEqual {289}
	284 Move X2, [X20+16]
	285 Move X3, [X25]
	286 Move W1, 255
	287 Move X0, X22
	288 Call Dictionary`2<Byte, Object>.set_Item, X0, X1, X2
	289 Move X0, [X21]
	290 Move W8, [X0+224]
	291 Compare W8, 0
	292 JumpIfNotEqual {295}
	293 Call 0x1C17DFC
	294 Move X0, [X21]
	295 Move X8, [X0+184]
	296 Move X9, [X19]
	297 Move W1, 225
	298 Move X0, X19
	299 Move X3, [X8]
	300 Move X8, [X9+552]
	301 Move X4, [X9+560]
	302 Move X2, X22
	303 NotImplemented "Instruction BLR not yet implemented."
	304 Move X20, [X31+80]
	305 Move X19, [X31+88]
	306 Move X22, [X31+64]
	307 Move X21, [X31+72]
	308 Move X24, [X31+48]
	309 Move X23, [X31+56]
	310 Move X30, [X31+32]
	311 Move X25, [X31+40]
	312 And W0, W0, 1
	313 Add X31, X31, 96
	314 Return X0
	315 Call 0x1C17F20

Method: System.Boolean OpLeaveRoom(System.Boolean becomeInactive, System.Boolean sendAuthCookie = False)

Disassembly:
	0x01E5845C LDR X9, [X9 + 0xBC8]
	0x01E58460 ADRP X10, 0x22A4000
	0x01E58464 LDR X1, [X9]
	0x01E58468 LDR X10, [X10 + 0x698]
	0x01E5846C LDRH W9, [X8 + 0x12E]
	0x01E58470 LDR X26, [X10]
	0x01E58474 CBZ X9, 0x1E58498
	0x01E58478 LDR X10, [X8 + 0xB0]
	0x01E5847C ADD X10, X10, 0x8
	0x01E58480 LDUR X11, [X10 - 0x8]
	0x01E58484 CMP X11, X1
	0x01E58488 B.EQ 0x1E584A8
	0x01E5848C SUBS X9, X9, 0x1
	0x01E58490 ADD X10, X10, 0x10
	0x01E58494 B.NE 0x1E58480
	0x01E58498 MOV X0, X21
	0x01E5849C MOV W2, W31
	0x01E584A0 BL 0x1C5C788
	0x01E584A4 B 0x1E584B4
	0x01E584A8 LDRSW X9, [X10]
	0x01E584AC ADD X8, X8, X9, 0x4, LSL
	0x01E584B0 ADD X0, X8, 0x138
	0x01E584B4 LDP X8, X3, [X0]
	0x01E584B8 MOVZ W1, 0x3
	0x01E584BC MOV X0, X21
	0x01E584C0 MOV X2, X26
	0x01E584C4 BLR X8
	0x01E584C8 ADRP X8, 0x22A4000
	0x01E584CC LDR X8, [X8 + 0x2B8]
	0x01E584D0 ADRP X21, 0x22A4000
	0x01E584D4 ADRP X26, 0x22A4000
	0x01E584D8 LDR X0, [X8]
	0x01E584DC LDR X21, [X21 + 0x540]
	0x01E584E0 LDR X26, [X26 + 0x618]
	0x01E584E4 BL 0x1C16F10
	0x01E584E8 LDR X1, [X21]
	0x01E584EC MOV X21, X0
	0x01E584F0 BL 0x29D2C7C
	0x01E584F4 TBZ X25, 0x0, 0x1E5852C
	0x01E584F8 ADRP X8, 0x229B000
	0x01E584FC LDR X8, [X8 + 0xB58]
	0x01E58500 ADD X1, X31, 0xC
	0x01E58504 LDR X0, [X8]
	0x01E58508 MOVZ W8, 0x1
	0x01E5850C STRB W8, [X31 + 0xC]
	0x01E58510 BL 0x1C16E04
	0x01E58514 CBZ X21, 0x1E586E8
	0x01E58518 LDR X3, [X26]
	0x01E5851C MOV X2, X0
	0x01E58520 MOVZ W1, 0xD3
	0x01E58524 MOV X0, X21
	0x01E58528 BL 0x29D3520
	0x01E5852C ADRP X25, 0x22A4000
	0x01E58530 LDR X25, [X25 + 0x548]
	0x01E58534 CBZ X20, 0x1E58590
	0x01E58538 LDR X2, [X20 + 0x28]
	0x01E5853C CBZ X2, 0x1E58590
	0x01E58540 CBZ X21, 0x1E586E8
	0x01E58544 LDR X3, [X26]
	0x01E58548 MOVZ W1, 0xDD
	0x01E5854C MOV X0, X21
	0x01E58550 BL 0x29D3520
	0x01E58554 LDR X0, [X25]
	0x01E58558 LDR W8, [X0 + 0xE0]
	0x01E5855C CBNZ W8, 0x1E58568
	0x01E58560 BL 0x1C16DFC
	0x01E58564 LDR X0, [X25]
	0x01E58568 LDR X8, [X0 + 0xB8]
	0x01E5856C LDR X9, [X19]
	0x01E58570 MOVZ W1, 0xE6
	0x01E58574 MOV X0, X19
	0x01E58578 LDR X3, [X8]
	0x01E5857C LDR X8, [X9 + 0x228]
	0x01E58580 LDR X4, [X9 + 0x230]
	0x01E58584 MOV X2, X21
	0x01E58588 BLR X8
	0x01E5858C B 0x1E586C8
	0x01E58590 CBZ X21, 0x1E586E8
	0x01E58594 LDR X3, [X26]
	0x01E58598 MOVZ W1, 0xDC
	0x01E5859C MOV X0, X21
	0x01E585A0 MOV X2, X24
	0x01E585A4 BL 0x29D3520
	0x01E585A8 LDR X3, [X26]
	0x01E585AC MOVZ W1, 0xE0
	0x01E585B0 MOV X0, X21
	0x01E585B4 MOV X2, X23
	0x01E585B8 BL 0x29D3520
	0x01E585BC MOV X0, X22
	0x01E585C0 MOV X1, X31
	0x01E585C4 BL 0x32277A8
	0x01E585C8 TBNZ X0, 0x0, 0x1E585E0
	0x01E585CC LDR X3, [X26]
	0x01E585D0 MOVZ W1, 0xD2

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x2582000
	009 Move X24, 0x22A5000
	010 Move X20, 0x22A5000
	011 Move W8, [X23+80]
	012 Move X24, [X24+696]
	013 Move X20, [X20+1344]
	014 Move W21, W2
	015 Move W22, W1
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {41}
	021 Move X0, 0x229C000
	022 Move X0, [X0+2904]
	023 Call 0x1C17CF4
	024 Move X0, 0x229D000
	025 Move X0, [X0+2520]
	026 Call 0x1C17CF4
	027 Move X0, 0x22A5000
	028 Move X0, [X0+1344]
	029 Call 0x1C17CF4
	030 Move X0, 0x22A5000
	031 Move X0, [X0+1560]
	032 Call 0x1C17CF4
	033 Move X0, 0x22A5000
	034 Move X0, [X0+696]
	035 Call 0x1C17CF4
	036 Move X0, 0x22A5000
	037 Move X0, [X0+1352]
	038 Call 0x1C17CF4
	039 Move W8, 1
	040 Move [X23+80], W8
	041 Move X0, [X24]
	042 Call 0x1C17F10
	043 Move X1, [X20]
	044 Move X20, X0
	045 Call Dictionary`2<Byte, Object>..ctor, X0
	046 Move TEMP, X22
	047 And TEMP, TEMP, 1
	048 Compare TEMP, 1
	049 JumpIfNotEqual {66}
	050 Move X8, 0x229C000
	051 Move X8, [X8+2904]
	052 Add X1, X31, 12
	053 Move X0, [X8]
	054 Move W8, 1
	055 Move [X31+12], W8
	056 Call 0x1C17E04
	057 Compare X20, 0
	058 JumpIfEqual {112}
	059 Move X8, 0x22A5000
	060 Move X8, [X8+1560]
	061 Move X2, X0
	062 Move W1, 233
	063 Move X0, X20
	064 Move X3, [X8]
	065 Call Dictionary`2<Byte, Object>.set_Item, X0, X1, X2
	066 Move TEMP, X21
	067 And TEMP, TEMP, 1
	068 Compare TEMP, 1
	069 JumpIfNotEqual {86}
	070 Move X8, 0x229D000
	071 Move X8, [X8+2520]
	072 Add X1, X31, 8
	073 Move X0, [X8]
	074 Move W8, 2
	075 Move [X31+8], W8
	076 Call 0x1C17E04
	077 Compare X20, 0
	078 JumpIfEqual {112}
	079 Move X8, 0x22A5000
	080 Move X8, [X8+1560]
	081 Move X2, X0
	082 Move W1, 234
	083 Move X0, X20
	084 Move X3, [X8]
	085 Call Dictionary`2<Byte, Object>.set_Item, X0, X1, X2
	086 Move X21, 0x22A5000
	087 Move X21, [X21+1352]
	088 Move X0, [X21]
	089 Move W8, [X0+224]
	090 Compare W8, 0
	091 JumpIfNotEqual {94}
	092 Call 0x1C17DFC
	093 Move X0, [X21]
	094 Move X8, [X0+184]
	095 Move X9, [X19]
	096 Move W1, 254
	097 Move X0, X19
	098 Move X3, [X8]
	099 Move X8, [X9+552]
	100 Move X4, [X9+560]
	101 Move X2, X20
	102 NotImplemented "Instruction BLR not yet implemented."
	103 Move X20, [X31+48]
	104 Move X19, [X31+56]
	105 Move X22, [X31+32]
	106 Move X21, [X31+40]
	107 Move X24, [X31+16]
	108 Move X23, [X31+24]
	109 And W0, W0, 1
	110 Move X30, [X31+64]
	111 Return X0
	112 Call 0x1C17F20

Method: System.Boolean OpGetGameList(Fusion.Photon.Realtime.TypedLobby lobby, System.String queryData)

Disassembly:
	0x01E585D4 MOV X0, X21
	0x01E585D8 MOV X2, X22
	0x01E585DC BL 0x29D3520
	0x01E585E0 CBZ X20, 0x1E5867C
	0x01E585E4 LDR X0, [X20 + 0x30]
	0x01E585E8 MOV X1, X31
	0x01E585EC BL 0x32277A8
	0x01E585F0 TBNZ X0, 0x0, 0x1E58608
	0x01E585F4 LDR X2, [X20 + 0x30]
	0x01E585F8 LDR X3, [X26]
	0x01E585FC MOVZ W1, 0xE1
	0x01E58600 MOV X0, X21
	0x01E58604 BL 0x29D3520
	0x01E58608 LDRB W8, [X20 + 0x10]
	0x01E5860C CMP W8, 0xFF
	0x01E58610 B.EQ 0x1E5867C
	0x01E58614 ADRP X9, 0x229C000
	0x01E58618 LDR X9, [X9 + 0x9D8]
	0x01E5861C ADD X1, X31, 0x8
	0x01E58620 STRB W8, [X31 + 0x8]
	0x01E58624 LDR X0, [X9]
	0x01E58628 BL 0x1C16E04
	0x01E5862C LDR X3, [X26]
	0x01E58630 MOV X2, X0
	0x01E58634 MOVZ W1, 0xD9
	0x01E58638 MOV X0, X21
	0x01E5863C BL 0x29D3520
	0x01E58640 LDR X0, [X20 + 0x18]
	0x01E58644 MOV X1, X31
	0x01E58648 BL 0x32277A8
	0x01E5864C TBNZ X0, 0x0, 0x1E58664
	0x01E58650 LDR X2, [X20 + 0x18]
	0x01E58654 LDR X3, [X26]
	0x01E58658 MOVZ W1, 0xD8
	0x01E5865C MOV X0, X21
	0x01E58660 BL 0x29D3520
	0x01E58664 LDR X2, [X20 + 0x20]
	0x01E58668 CBZ X2, 0x1E5867C
	0x01E5866C LDR X3, [X26]
	0x01E58670 MOVZ W1, 0xD6
	0x01E58674 MOV X0, X21
	0x01E58678 BL 0x29D3520
	0x01E5867C LDR X0, [X25]
	0x01E58680 STR X31, [X31 + 0x18]
	0x01E58684 LDR W8, [X0 + 0xE0]
	0x01E58688 CBNZ W8, 0x1E58690
	0x01E5868C BL 0x1C16DFC
	0x01E58690 ADD X0, X31, 0x18
	0x01E58694 MOVZ W1, 0x1
	0x01E58698 MOV X2, X31
	0x01E5869C MOVZ W20, 0x1
	0x01E586A0 BL 0x35160A8
	0x01E586A4 STRB W20, [X31 + 0x1C]
	0x01E586A8 LDR X8, [X19]
	0x01E586AC LDR X3, [X31 + 0x18]
	0x01E586B0 MOVZ W1, 0xE6
	0x01E586B4 MOV X0, X19
	0x01E586B8 LDR X9, [X8 + 0x228]
	0x01E586BC LDR X4, [X8 + 0x230]
	0x01E586C0 MOV X2, X21
	0x01E586C4 BLR X9
	0x01E586C8 LDP X20, X19, [X31 + 0x50]
	0x01E586CC LDP X22, X21, [X31 + 0x40]
	0x01E586D0 LDP X24, X23, [X31 + 0x30]
	0x01E586D4 LDP X26, X25, [X31 + 0x20]
	0x01E586D8 LDR X30, [X31 + 0x10]
	0x01E586DC AND W0, W0, 0x1
	0x01E586E0 ADD X31, X31, 0x60
	0x01E586E4 RET
	0x01E586E8 BL 0x1C16F20
	0x01E586EC LDRB W0, [X0 + 0x10]
	0x01E586F0 RET
	0x01E586F4 SUB X31, X31, 0x90
	0x01E586F8 STP X29, X30, [X31 + 0x30]
	0x01E586FC STP X28, X27, [X31 + 0x40]
	0x01E58700 STP X26, X25, [X31 + 0x50]
	0x01E58704 STP X24, X23, [X31 + 0x60]
	0x01E58708 STP X22, X21, [X31 + 0x70]
	0x01E5870C STP X20, X19, [X31 + 0x80]
	0x01E58710 ADRP X26, 0x2581000
	0x01E58714 LDRB W8, [X26 + 0x59]
	0x01E58718 MOV W25, W6
	0x01E5871C MOV W24, W5
	0x01E58720 MOV X21, X4
	0x01E58724 MOV X20, X3
	0x01E58728 MOV X23, X2
	0x01E5872C MOV X22, X1
	0x01E58730 MOV X19, X0
	0x01E58734 TBNZ X8, 0x0, 0x1E587C4
	0x01E58738 ADRP X0, 0x229C000
	0x01E5873C LDR X0, [X0 + 0x9D8]
	0x01E58740 BL 0x1C16CF4
	0x01E58744 ADRP X0, 0x22A4000
	0x01E58748 LDR X0, [X0 + 0x540]
	0x01E5874C BL 0x1C16CF4
	0x01E58750 ADRP X0, 0x22A4000
	0x01E58754 LDR X0, [X0 + 0x618]
	0x01E58758 BL 0x1C16CF4
	0x01E5875C ADRP X0, 0x22A4000
	0x01E58760 LDR X0, [X0 + 0x2B8]
	0x01E58764 BL 0x1C16CF4
	0x01E58768 ADRP X0, 0x22A4000
	0x01E5876C LDR X0, [X0 + 0x6A0]
	0x01E58770 BL 0x1C16CF4
	0x01E58774 ADRP X0, 0x22A3000
	0x01E58778 LDR X0, [X0 + 0xBC8]
	0x01E5877C BL 0x1C16CF4
	0x01E58780 ADRP X0, 0x22A4000
	0x01E58784 LDR X0, [X0 + 0x548]
	0x01E58788 BL 0x1C16CF4
	0x01E5878C ADRP X0, 0x229B000
	0x01E58790 LDR X0, [X0 + 0xAC8]
	0x01E58794 BL 0x1C16CF4
	0x01E58798 ADRP X0, 0x22A4000
	0x01E5879C LDR X0, [X0 + 0x6A8]
	0x01E587A0 BL 0x1C16CF4
	0x01E587A4 ADRP X0, 0x22A4000
	0x01E587A8 LDR X0, [X0 + 0x6B0]
	0x01E587AC BL 0x1C16CF4
	0x01E587B0 ADRP X0, 0x22A4000
	0x01E587B4 LDR X0, [X0 + 0x6B8]
	0x01E587B8 BL 0x1C16CF4
	0x01E587BC MOVZ W8, 0x1
	0x01E587C0 STRB W8, [X26 + 0x59]
	0x01E587C4 STR X31, [X31 + 0x28]
	0x01E587C8 LDRB W8, [X19 + 0x40]
	0x01E587CC CMP W8, 0x3
	0x01E587D0 B.CC 0x1E58924
	0x01E587D4 ADRP X8, 0x229B000
	0x01E587D8 LDR X8, [X8 + 0xAC8]
	0x01E587DC LDR X26, [X19 + 0x48]
	0x01E587E0 MOVZ W1, 0x6
	0x01E587E4 LDR X0, [X8]
	0x01E587E8 BL 0x1C16D6C
	0x01E587EC CBZ X0, 0x1E58B80
	0x01E587F0 LDR X8, [X0 + 0x18]
	0x01E587F4 MOV X27, X0
	0x01E587F8 CBZ W8, 0x1E58B7C
	0x01E587FC ADRP X9, 0x22A4000
	0x01E58800 LDR X9, [X9 + 0x6B8]
	0x01E58804 LDR X9, [X9]
	0x01E58808 STR X9, [X27 + 0x20]
	0x01E5880C CBZ X20, 0x1E58828
	0x01E58810 LDR X8, [X20]
	0x01E58814 MOV X0, X20
	0x01E58818 LDP X9, X1, [X8 + 0x168]
	0x01E5881C BLR X9
	0x01E58820 LDR X8, [X27 + 0x18]
	0x01E58824 B 0x1E5882C
	0x01E58828 MOV X0, X31
	0x01E5882C CMP W8, 0x1
	0x01E58830 B.LS 0x1E58B7C
	0x01E58834 CMP W8, 0x2
	0x01E58838 STR X0, [X27 + 0x28]
	0x01E5883C B.EQ 0x1E58B7C
	0x01E58840 ADRP X9, 0x22A4000
	0x01E58844 LDR X9, [X9 + 0x6B0]
	0x01E58848 CMP W8, 0x3
	0x01E5884C LDR X9, [X9]
	0x01E58850 STR X9, [X27 + 0x30]
	0x01E58854 B.LS 0x1E58B7C
	0x01E58858 CMP W8, 0x4
	0x01E5885C STR X21, [X27 + 0x38]
	0x01E58860 B.EQ 0x1E58B7C
	0x01E58864 ADRP X8, 0x22A4000
	0x01E58868 LDR X8, [X8 + 0x6A8]
	0x01E5886C ADRP X9, 0x22A4000
	0x01E58870 ADD X0, X31, 0x10
	0x01E58874 MOV X1, X31
	0x01E58878 LDR X8, [X8]
	0x01E5887C LDR X9, [X9 + 0x6A0]
	0x01E58880 STR X8, [X27 + 0x40]
	0x01E58884 LDR X8, [X9]
	0x01E58888 MOVN X9, 0x0
	0x01E5888C STR W24, [X31 + 0x20]
	0x01E58890 STP X8, X9, [X31 + 0x10]
	0x01E58894 BL 0x33B162C
	0x01E58898 LDR W8, [X27 + 0x18]
	0x01E5889C CMP W8, 0x5
	0x01E588A0 B.LS 0x1E58B7C
	0x01E588A4 STR X0, [X27 + 0x48]
	0x01E588A8 MOV X0, X27
	0x01E588AC MOV X1, X31
	0x01E588B0 BL 0x32278CC
	0x01E588B4 CBZ X26, 0x1E58B80
	0x01E588B8 ADRP X10, 0x22A3000
	0x01E588BC LDR X8, [X26]
	0x01E588C0 LDR X10, [X10 + 0xBC8]
	0x01E588C4 MOV X27, X0
	0x01E588C8 LDRH W9, [X8 + 0x12E]
	0x01E588CC LDR X1, [X10]
	0x01E588D0 CBZ X9, 0x1E588F4
	0x01E588D4 LDR X10, [X8 + 0xB0]
	0x01E588D8 ADD X10, X10, 0x8
	0x01E588DC LDUR X11, [X10 - 0x8]
	0x01E588E0 CMP X11, X1
	0x01E588E4 B.EQ 0x1E58904
	0x01E588E8 SUBS X9, X9, 0x1
	0x01E588EC ADD X10, X10, 0x10
	0x01E588F0 B.NE 0x1E588DC
	0x01E588F4 MOV X0, X26
	0x01E588F8 MOV W2, W31
	0x01E588FC BL 0x1C5C788
	0x01E58900 B 0x1E58910
	0x01E58904 LDRSW X9, [X10]
	0x01E58908 ADD X8, X8, X9, 0x4, LSL
	0x01E5890C ADD X0, X8, 0x138
	0x01E58910 LDP X8, X3, [X0]
	0x01E58914 MOVZ W1, 0x3
	0x01E58918 MOV X0, X26
	0x01E5891C MOV X2, X27
	0x01E58920 BLR X8
	0x01E58924 ADRP X8, 0x22A4000
	0x01E58928 LDR X8, [X8 + 0x2B8]
	0x01E5892C ADRP X26, 0x22A4000
	0x01E58930 ADRP X28, 0x22A4000
	0x01E58934 ADRP X27, 0x22A4000
	0x01E58938 LDR X0, [X8]
	0x01E5893C LDR X26, [X26 + 0x540]
	0x01E58940 LDR X28, [X28 + 0x618]
	0x01E58944 LDR X27, [X27 + 0x548]
	0x01E58948 BL 0x1C16F10
	0x01E5894C LDR X1, [X26]
	0x01E58950 MOV X26, X0
	0x01E58954 BL 0x29D2C7C
	0x01E58958 CBZ X20, 0x1E589B4
	0x01E5895C LDR X2, [X20 + 0x28]
	0x01E58960 CBZ X2, 0x1E589B4
	0x01E58964 CBZ X26, 0x1E58B80
	0x01E58968 LDR X3, [X28]
	0x01E5896C MOVZ W1, 0xDD
	0x01E58970 MOV X0, X26
	0x01E58974 BL 0x29D3520
	0x01E58978 LDR X0, [X27]
	0x01E5897C LDR W8, [X0 + 0xE0]
	0x01E58980 CBNZ W8, 0x1E5898C
	0x01E58984 BL 0x1C16DFC
	0x01E58988 LDR X0, [X27]
	0x01E5898C LDR X8, [X0 + 0xB8]
	0x01E58990 LDR X9, [X19]
	0x01E58994 MOVZ W1, 0xE7
	0x01E58998 MOV X0, X19
	0x01E5899C LDR X3, [X8]
	0x01E589A0 LDR X8, [X9 + 0x228]
	0x01E589A4 LDR X4, [X9 + 0x230]
	0x01E589A8 MOV X2, X26
	0x01E589AC BLR X8
	0x01E589B0 B 0x1E58B58
	0x01E589B4 CMP W24, 0xD
	0x01E589B8 B.NE 0x1E589C4
	0x01E589BC ANDS W31, W25, 0xFF
	0x01E589C0 B.NE 0x1E58B84
	0x01E589C4 ADRP X29, 0x229C000

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0x2582000
	009 Move W8, [X22+81]
	010 Move X20, X2
	011 Move X21, X1
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {52}
	017 Move X0, 0x229D000
	018 Move X0, [X0+2520]
	019 Call 0x1C17CF4
	020 Move X0, 0x22A5000
	021 Move X0, [X0+1344]
	022 Call 0x1C17CF4
	023 Move X0, 0x22A5000
	024 Move X0, [X0+1560]
	025 Call 0x1C17CF4
	026 Move X0, 0x22A5000
	027 Move X0, [X0+696]
	028 Call 0x1C17CF4
	029 Move X0, 0x22A4000
	030 Move X0, [X0+3016]
	031 Call 0x1C17CF4
	032 Move X0, 0x22A5000
	033 Move X0, [X0+1352]
	034 Call 0x1C17CF4
	035 Move X0, 0x22A5000
	036 Move X0, [X0+1616]
	037 Call 0x1C17CF4
	038 Move X0, 0x22A5000
	039 Move X0, [X0+1624]
	040 Call 0x1C17CF4
	041 Move X0, 0x22A5000
	042 Move X0, [X0+1632]
	043 Call 0x1C17CF4
	044 Move X0, 0x22A5000
	045 Move X0, [X0+1640]
	046 Call 0x1C17CF4
	047 Move X0, 0x22A5000
	048 Move X0, [X0+1648]
	049 Call 0x1C17CF4
	050 Move W8, 1
	051 Move [X22+81], W8
	052 Move W8, [X19+64]
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Move X22, [X19+72]
	055 Compare X22, 0
	056 JumpIfEqual {261}
	057 Move X9, 0x22A4000
	058 Move X8, [X22]
	059 Move X9, [X9+3016]
	060 Move X10, 0x22A5000
	061 Move X1, [X9]
	062 Move X10, [X10+1616]
	063 NotImplemented "Instruction LDRH not yet implemented."
	064 Move X23, [X10]
	065 Compare X9, 0
	066 JumpIfEqual {73}
	067 Move X10, [X8+176]
	068 Add X10, X10, 8
	069 NotImplemented "Instruction LDUR not yet implemented."
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Subtract X9, X9, 1
	072 Add X10, X10, 16
	073 Move X0, X22
	074 Move W2, W31
	075 Call 0x1C5D788
	076 NotImplemented "Instruction LDRSW not yet implemented."
	077 Add X8, X8, X9
	078 Add X0, X8, 312
	079 Move X8, [X0]
	080 Move X3, [X0+8]
	081 Move W1, 3
	082 Move X0, X22
	083 Move X2, X23
	084 NotImplemented "Instruction BLR not yet implemented."
	085 Compare X21, 0
	086 JumpIfEqual {117}
	087 Move W8, [X21+24]
	088 NotImplemented "Instruction CMP not yet implemented."
	089 Move X0, [X21+16]
	090 Move X1, X31
	091 Call String.IsNullOrEmpty, X0
	092 Move TEMP, X0
	093 And TEMP, TEMP, 1
	094 Compare TEMP, 1
	095 JumpIfNotEqual {159}
	096 Move W8, [X19+64]
	097 NotImplemented "Instruction CMP not yet implemented."
	098 Move X19, [X19+72]
	099 Compare X19, 0
	100 JumpIfEqual {261}
	101 Move X9, 0x22A4000
	102 Move X8, [X19]
	103 Move X9, [X9+3016]
	104 Move X10, 0x22A5000
	105 Move X1, [X9]
	106 Move X10, [X10+1648]
	107 NotImplemented "Instruction LDRH not yet implemented."
	108 Move X20, [X10]
	109 Compare X9, 0
	110 JumpIfEqual {187}
	111 Move X10, [X8+176]
	112 Add X10, X10, 8
	113 NotImplemented "Instruction LDUR not yet implemented."
	114 NotImplemented "Instruction CMP not yet implemented."
	115 Subtract X9, X9, 1
	116 Add X10, X10, 16
	117 Move W8, [X19+64]
	118 NotImplemented "Instruction CMP not yet implemented."
	119 Move X19, [X19+72]
	120 Compare X19, 0
	121 JumpIfEqual {261}
	122 Move X9, 0x22A4000
	123 Move X8, [X19]
	124 Move X9, [X9+3016]
	125 Move X10, 0x22A5000
	126 Move X1, [X9]
	127 Move X10, [X10+1624]
	128 NotImplemented "Instruction LDRH not yet implemented."
	129 Move X20, [X10]
	130 Compare X9, 0
	131 JumpIfEqual {187}
	132 Move X10, [X8+176]
	133 Add X10, X10, 8
	134 NotImplemented "Instruction LDUR not yet implemented."
	135 NotImplemented "Instruction CMP not yet implemented."
	136 Subtract X9, X9, 1
	137 Add X10, X10, 16
	138 Move W8, [X19+64]
	139 NotImplemented "Instruction CMP not yet implemented."
	140 Move X19, [X19+72]
	141 Compare X19, 0
	142 JumpIfEqual {261}
	143 Move X9, 0x22A4000
	144 Move X8, [X19]
	145 Move X9, [X9+3016]
	146 Move X10, 0x22A5000
	147 Move X1, [X9]
	148 Move X10, [X10+1640]
	149 NotImplemented "Instruction LDRH not yet implemented."
	150 Move X20, [X10]
	151 Compare X9, 0
	152 JumpIfEqual {187}
	153 Move X10, [X8+176]
	154 Add X10, X10, 8
	155 NotImplemented "Instruction LDUR not yet implemented."
	156 NotImplemented "Instruction CMP not yet implemented."
	157 Subtract X9, X9, 1
	158 Add X10, X10, 16
	159 Move X0, X20
	160 Move X1, X31
	161 Call String.IsNullOrEmpty, X0
	162 Move TEMP, X0
	163 And TEMP, TEMP, 1
	164 Compare TEMP, 1
	165 JumpIfNotEqual {209}
	166 Move W8, [X19+64]
	167 NotImplemented "Instruction CMP not yet implemented."
	168 Move X19, [X19+72]
	169 Compare X19, 0
	170 JumpIfEqual {261}
	171 Move X9, 0x22A4000
	172 Move X8, [X19]
	173 Move X9, [X9+3016]
	174 Move X10, 0x22A5000
	175 Move X1, [X9]
	176 Move X10, [X10+1632]
	177 NotImplemented "Instruction LDRH not yet implemented."
	178 Move X20, [X10]
	179 Compare X9, 0
	180 JumpIfEqual {187}
	181 Move X10, [X8+176]
	182 Add X10, X10, 8
	183 NotImplemented "Instruction LDUR not yet implemented."
	184 NotImplemented "Instruction CMP not yet implemented."
	185 Subtract X9, X9, 1
	186 Add X10, X10, 16
	187 Move X0, X19
	188 Move W2, W31
	189 Call 0x1C5D788
	190 NotImplemented "Instruction LDRSW not yet implemented."
	191 Add X8, X8, X9
	192 Add X0, X8, 312
	193 Move X8, [X0]
	194 Move X3, [X0+8]
	195 Move W1, 3
	196 Move X0, X19
	197 Move X2, X20
	198 NotImplemented "Instruction BLR not yet implemented."
	199 Move W0, W31
	200 Move X20, [X31+48]
	201 Move X19, [X31+56]
	202 Move X22, [X31+32]
	203 Move X21, [X31+40]
	204 Move X30, [X31+16]
	205 Move X23, [X31+24]
	206 And W0, W0, 1
	207 Add X31, X31, 64
	208 Return X0
	209 Move X8, 0x22A5000
	210 Move X8, [X8+696]
	211 Move X0, [X8]
	212 Call 0x1C17F10
	213 Move X8, 0x22A5000
	214 Move X8, [X8+1344]
	215 Move X22, X0
	216 Move X1, [X8]
	217 Call Dictionary`2<Byte, Object>..ctor, X0
	218 Compare X22, 0
	219 JumpIfEqual {261}
	220 Move X23, 0x22A5000
	221 Move X2, [X21+16]
	222 Move X23, [X23+1560]
	223 Move W1, 213
	224 Move X0, X22
	225 Move X3, [X23]
	226 Call Dictionary`2<Byte, Object>.set_Item, X0, X1, X2
	227 Move X9, 0x229D000
	228 Move W8, [X21+24]
	229 Move X9, [X9+2520]
	230 Add X1, X31, 12
	231 Move [X31+12], W8
	232 Move X0, [X9]
	233 Call 0x1C17E04
	234 Move X3, [X23]
	235 Move X2, X0
	236 Move W1, 212
	237 Move X0, X22
	238 Call Dictionary`2<Byte, Object>.set_Item, X0, X1, X2
	239 Move X3, [X23]
	240 Move W1, 245
	241 Move X0, X22
	242 Move X2, X20
	243 Call Dictionary`2<Byte, Object>.set_Item, X0, X1, X2
	244 Move X20, 0x22A5000
	245 Move X20, [X20+1352]
	246 Move X0, [X20]
	247 Move W8, [X0+224]
	248 Compare W8, 0
	249 JumpIfNotEqual {252}
	250 Call 0x1C17DFC
	251 Move X0, [X20]
	252 Move X8, [X0+184]
	253 Move X9, [X19]
	254 Move W1, 217
	255 Move X0, X19
	256 Move X3, [X8]
	257 Move X8, [X9+552]
	258 Move X4, [X9+560]
	259 Move X2, X22
	260 NotImplemented "Instruction BLR not yet implemented."
	261 Call 0x1C17F20

Method: System.Boolean OpFindFriends(System.String[] friendsToFind, Fusion.Photon.Realtime.FindFriendsOptions options = null)

Disassembly:
	0x01E589C8 LDR X29, [X29 + 0x9D8]
	0x01E589CC ADD X1, X31, 0x10
	0x01E589D0 STRB W25, [X31 + 0x10]
	0x01E589D4 LDR X0, [X29]
	0x01E589D8 BL 0x1C16E04
	0x01E589DC CBZ X26, 0x1E58B80
	0x01E589E0 LDR X3, [X28]
	0x01E589E4 MOV X2, X0
	0x01E589E8 MOVZ W1, 0xC3
	0x01E589EC MOV X0, X26
	0x01E589F0 BL 0x29D3520
	0x01E589F4 LDR X0, [X29]
	0x01E589F8 ADD X1, X31, 0xC
	0x01E589FC STRB W24, [X31 + 0xC]
	0x01E58A00 BL 0x1C16E04
	0x01E58A04 LDR X3, [X28]
	0x01E58A08 MOV X2, X0
	0x01E58A0C MOVZ W1, 0xC1
	0x01E58A10 MOV X0, X26
	0x01E58A14 BL 0x29D3520
	0x01E58A18 LDR X3, [X28]
	0x01E58A1C MOVZ W1, 0xDC
	0x01E58A20 MOV X0, X26
	0x01E58A24 MOV X2, X23
	0x01E58A28 BL 0x29D3520
	0x01E58A2C LDR X3, [X28]
	0x01E58A30 MOVZ W1, 0xE0
	0x01E58A34 MOV X0, X26
	0x01E58A38 MOV X2, X22
	0x01E58A3C BL 0x29D3520
	0x01E58A40 MOV X0, X21
	0x01E58A44 MOV X1, X31
	0x01E58A48 BL 0x32277A8
	0x01E58A4C TBNZ X0, 0x0, 0x1E58A64
	0x01E58A50 LDR X3, [X28]
	0x01E58A54 MOVZ W1, 0xD2
	0x01E58A58 MOV X0, X26
	0x01E58A5C MOV X2, X21
	0x01E58A60 BL 0x29D3520
	0x01E58A64 CBZ X20, 0x1E58B0C
	0x01E58A68 LDR X0, [X20 + 0x30]
	0x01E58A6C MOV X1, X31
	0x01E58A70 BL 0x32277A8
	0x01E58A74 TBNZ X0, 0x0, 0x1E58A8C
	0x01E58A78 LDR X2, [X20 + 0x30]
	0x01E58A7C LDR X3, [X28]
	0x01E58A80 MOVZ W1, 0xE1
	0x01E58A84 MOV X0, X26
	0x01E58A88 BL 0x29D3520
	0x01E58A8C LDRB W8, [X20 + 0x10]
	0x01E58A90 CMP W8, 0xFF
	0x01E58A94 B.EQ 0x1E58B0C
	0x01E58A98 LDR X0, [X29]
	0x01E58A9C ADD X1, X31, 0x10
	0x01E58AA0 STRB W8, [X31 + 0x10]
	0x01E58AA4 BL 0x1C16E04
	0x01E58AA8 LDR X3, [X28]
	0x01E58AAC MOV X2, X0
	0x01E58AB0 MOVZ W1, 0xD9
	0x01E58AB4 MOV X0, X26
	0x01E58AB8 BL 0x29D3520
	0x01E58ABC LDR X2, [X20 + 0x28]
	0x01E58AC0 CBZ X2, 0x1E58AD0
	0x01E58AC4 LDR X3, [X28]
	0x01E58AC8 MOVZ W1, 0xDD
	0x01E58ACC B 0x1E58B04
	0x01E58AD0 LDR X0, [X20 + 0x18]
	0x01E58AD4 MOV X1, X31
	0x01E58AD8 BL 0x32277A8
	0x01E58ADC TBNZ X0, 0x0, 0x1E58AF4
	0x01E58AE0 LDR X2, [X20 + 0x18]
	0x01E58AE4 LDR X3, [X28]
	0x01E58AE8 MOVZ W1, 0xD8
	0x01E58AEC MOV X0, X26
	0x01E58AF0 BL 0x29D3520
	0x01E58AF4 LDR X2, [X20 + 0x20]
	0x01E58AF8 CBZ X2, 0x1E58B0C
	0x01E58AFC LDR X3, [X28]
	0x01E58B00 MOVZ W1, 0xD6
	0x01E58B04 MOV X0, X26
	0x01E58B08 BL 0x29D3520
	0x01E58B0C LDR X0, [X27]
	0x01E58B10 STR X31, [X31 + 0x28]
	0x01E58B14 LDR W8, [X0 + 0xE0]
	0x01E58B18 CBNZ W8, 0x1E58B20
	0x01E58B1C BL 0x1C16DFC
	0x01E58B20 ADD X0, X31, 0x28
	0x01E58B24 MOVZ W1, 0x1
	0x01E58B28 MOV X2, X31
	0x01E58B2C MOVZ W20, 0x1
	0x01E58B30 BL 0x35160A8
	0x01E58B34 STRB W20, [X31 + 0x2C]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0x2582000
	009 Move X23, 0x22A5000
	010 Move X20, 0x22A5000
	011 Move W8, [X24+82]
	012 Move X23, [X23+696]
	013 Move X20, [X20+1344]
	014 Move X21, X2
	015 Move X22, X1
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {38}
	021 Move X0, 0x22A5000
	022 Move X0, [X0+1344]
	023 Call 0x1C17CF4
	024 Move X0, 0x22A5000
	025 Move X0, [X0+1560]
	026 Call 0x1C17CF4
	027 Move X0, 0x22A5000
	028 Move X0, [X0+696]
	029 Call 0x1C17CF4
	030 Move X0, 0x229C000
	031 Move X0, [X0+1880]
	032 Call 0x1C17CF4
	033 Move X0, 0x22A5000
	034 Move X0, [X0+1352]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X24+82], W8
	038 Move X0, [X23]
	039 Move X23, 0x22A5000
	040 Move X23, [X23+1560]
	041 Call 0x1C17F10
	042 Move X1, [X20]
	043 Move X20, X0
	044 Call Dictionary`2<Byte, Object>..ctor, X0
	045 Compare X22, 0
	046 JumpIfEqual {57}
	047 Move W8, [X22+24]
	048 Compare W8, 0
	049 JumpIfEqual {57}
	050 Compare X20, 0
	051 JumpIfEqual {107}
	052 Move X3, [X23]
	053 Move W1, 1
	054 Move X0, X20
	055 Move X2, X22
	056 Call Dictionary`2<Byte, Object>.set_Item, X0, X1, X2
	057 Compare X21, 0
	058 JumpIfEqual {81}
	059 Move X8, 0x229C000
	060 Move X8, [X8+1880]
	061 Move W9, [X21+16]
	062 Move W10, [X21+17]
	063 Move W11, [X21+18]
	064 Move X0, [X8]
	065 Or W8, W9, 2
	066 NotImplemented "Instruction CMP not yet implemented."
	067 NotImplemented "Instruction CSEL not yet implemented."
	068 Or W9, W8, 4
	069 NotImplemented "Instruction CMP not yet implemented."
	070 NotImplemented "Instruction CSEL not yet implemented."
	071 Add X1, X31, 12
	072 Move [X31+12], W8
	073 Call 0x1C17E04
	074 Compare X20, 0
	075 JumpIfEqual {107}
	076 Move X3, [X23]
	077 Move X2, X0
	078 Move W1, 2
	079 Move X0, X20
	080 Call Dictionary`2<Byte, Object>.set_Item, X0, X1, X2
	081 Move X21, 0x22A5000
	082 Move X21, [X21+1352]
	083 Move X0, [X21]
	084 Move W8, [X0+224]
	085 Compare W8, 0
	086 JumpIfNotEqual {89}
	087 Call 0x1C17DFC
	088 Move X0, [X21]
	089 Move X8, [X0+184]
	090 Move X9, [X19]
	091 Move W1, 222
	092 Move X0, X19
	093 Move X3, [X8]
	094 Move X8, [X9+552]
	095 Move X4, [X9+560]
	096 Move X2, X20
	097 NotImplemented "Instruction BLR not yet implemented."
	098 Move X20, [X31+48]
	099 Move X19, [X31+56]
	100 Move X22, [X31+32]
	101 Move X21, [X31+40]
	102 Move X24, [X31+16]
	103 Move X23, [X31+24]
	104 And W0, W0, 1
	105 Move X30, [X31+64]
	106 Return X0
	107 Call 0x1C17F20

Method: System.Boolean OpSetCustomPropertiesOfActor(System.Int32 actorNr, ExitGames.Client.Photon.Hashtable actorProperties)

Disassembly:
	0x01E58B60 LDP X24, X23, [X31 + 0x60]
	0x01E58B64 LDP X26, X25, [X31 + 0x50]
	0x01E58B68 LDP X28, X27, [X31 + 0x40]
	0x01E58B6C LDP X29, X30, [X31 + 0x30]
	0x01E58B70 AND W0, W0, 0x1
	0x01E58B74 ADD X31, X31, 0x90
	0x01E58B78 RET
	0x01E58B7C BL 0x1C16F28
	0x01E58B80 BL 0x1C16F20
	0x01E58B84 ADRP X0, 0x229B000
	0x01E58B88 LDR X0, [X0 + 0xB40]
	0x01E58B8C BL 0x1C16D08
	0x01E58B90 BL 0x1C16F10
	0x01E58B94 MOV X19, X0
	0x01E58B98 ADRP X0, 0x22A4000
	0x01E58B9C LDR X0, [X0 + 0x6C0]
	0x01E58BA0 BL 0x1C16D08
	0x01E58BA4 MOV X1, X0
	0x01E58BA8 MOV X0, X19
	0x01E58BAC MOV X2, X31
	0x01E58BB0 BL 0x3379A44
	0x01E58BB4 ADRP X0, 0x22A4000
	0x01E58BB8 LDR X0, [X0 + 0x6C8]
	0x01E58BBC BL 0x1C16D08
	0x01E58BC0 MOV X1, X0
	0x01E58BC4 MOV X0, X19
	0x01E58BC8 BL 0x1C16DEC
	0x01E58BCC STP X30, X23, [X31 - 0x30]!
	0x01E58BD0 STP X22, X21, [X31 + 0x10]
	0x01E58BD4 STP X20, X19, [X31 + 0x20]
	0x01E58BD8 ADRP X22, 0x2581000
	0x01E58BDC LDRB W8, [X22 + 0x5A]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x2582000
	008 Move X23, 0x22A4000
	009 Move W8, [X22+83]
	010 Move X23, [X23+3480]
	011 Move X21, X2
	012 Move W19, W1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0x22A4000
	019 Move X0, [X0+3480]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+83], W8
	023 Move X0, [X23]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Move X0, X21
	029 Move X1, X31
	030 Call Extensions.StripToStringKeys, X0
	031 Move X2, X0
	032 Move X0, X20
	033 Move W1, W19
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X3, X31
	039 Move X4, X31
	040 Move X30, [X31+48]
	041 Move X23, [X31+56]

Method: System.Boolean OpSetPropertiesOfActor(System.Int32 actorNr, ExitGames.Client.Photon.Hashtable actorProperties, ExitGames.Client.Photon.Hashtable expectedProperties = null, Fusion.Photon.Realtime.WebFlags webflags = null)

Disassembly:
	0x01E58BE0 MOV X20, X2
	0x01E58BE4 MOV X21, X1
	0x01E58BE8 MOV X19, X0
	0x01E58BEC TBNZ X8, 0x0, 0x1E58C40
	0x01E58BF0 ADRP X0, 0x22A4000
	0x01E58BF4 LDR X0, [X0 + 0x540]
	0x01E58BF8 BL 0x1C16CF4
	0x01E58BFC ADRP X0, 0x22A4000
	0x01E58C00 LDR X0, [X0 + 0x618]
	0x01E58C04 BL 0x1C16CF4
	0x01E58C08 ADRP X0, 0x22A4000
	0x01E58C0C LDR X0, [X0 + 0x2B8]
	0x01E58C10 BL 0x1C16CF4
	0x01E58C14 ADRP X0, 0x22A3000
	0x01E58C18 LDR X0, [X0 + 0xBC8]
	0x01E58C1C BL 0x1C16CF4
	0x01E58C20 ADRP X0, 0x22A4000
	0x01E58C24 LDR X0, [X0 + 0x548]
	0x01E58C28 BL 0x1C16CF4
	0x01E58C2C ADRP X0, 0x22A4000
	0x01E58C30 LDR X0, [X0 + 0x6D0]
	0x01E58C34 BL 0x1C16CF4
	0x01E58C38 MOVZ W8, 0x1
	0x01E58C3C STRB W8, [X22 + 0x5A]
	0x01E58C40 LDRB W8, [X19 + 0x40]
	0x01E58C44 CMP W8, 0x5
	0x01E58C48 B.CC 0x1E58CC8
	0x01E58C4C LDR X22, [X19 + 0x48]
	0x01E58C50 CBZ X22, 0x1E58D78
	0x01E58C54 ADRP X9, 0x22A3000
	0x01E58C58 LDR X8, [X22]
	0x01E58C5C LDR X9, [X9 + 0xBC8]
	0x01E58C60 ADRP X10, 0x22A4000
	0x01E58C64 LDR X1, [X9]
	0x01E58C68 LDR X10, [X10 + 0x6D0]
	0x01E58C6C LDRH W9, [X8 + 0x12E]
	0x01E58C70 LDR X23, [X10]
	0x01E58C74 CBZ X9, 0x1E58C98
	0x01E58C78 LDR X10, [X8 + 0xB0]
	0x01E58C7C ADD X10, X10, 0x8
	0x01E58C80 LDUR X11, [X10 - 0x8]
	0x01E58C84 CMP X11, X1
	0x01E58C88 B.EQ 0x1E58CA8
	0x01E58C8C SUBS X9, X9, 0x1
	0x01E58C90 ADD X10, X10, 0x10
	0x01E58C94 B.NE 0x1E58C80
	0x01E58C98 MOV X0, X22
	0x01E58C9C MOV W2, W31
	0x01E58CA0 BL 0x1C5C788
	0x01E58CA4 B 0x1E58CB4
	0x01E58CA8 LDRSW X9, [X10]
	0x01E58CAC ADD X8, X8, X9, 0x4, LSL
	0x01E58CB0 ADD X0, X8, 0x138
	0x01E58CB4 LDP X8, X3, [X0]
	0x01E58CB8 MOVZ W1, 0x5
	0x01E58CBC MOV X0, X22
	0x01E58CC0 MOV X2, X23
	0x01E58CC4 BLR X8
	0x01E58CC8 ADRP X8, 0x22A4000
	0x01E58CCC LDR X8, [X8 + 0x2B8]
	0x01E58CD0 ADRP X22, 0x22A4000
	0x01E58CD4 ADRP X23, 0x22A4000
	0x01E58CD8 LDR X0, [X8]
	0x01E58CDC LDR X22, [X22 + 0x540]
	0x01E58CE0 LDR X23, [X23 + 0x618]
	0x01E58CE4 BL 0x1C16F10
	0x01E58CE8 LDR X1, [X22]
	0x01E58CEC MOV X22, X0
	0x01E58CF0 BL 0x29D2C7C
	0x01E58CF4 CBZ X21, 0x1E58D10
	0x01E58CF8 CBZ X22, 0x1E58D78
	0x01E58CFC LDR X3, [X23]
	0x01E58D00 MOVZ W1, 0xEF
	0x01E58D04 MOV X0, X22
	0x01E58D08 MOV X2, X21
	0x01E58D0C BL 0x29D3520
	0x01E58D10 CBZ X20, 0x1E58D2C
	0x01E58D14 CBZ X22, 0x1E58D78
	0x01E58D18 LDR X3, [X23]
	0x01E58D1C MOVZ W1, 0xEE
	0x01E58D20 MOV X0, X22
	0x01E58D24 MOV X2, X20
	0x01E58D28 BL 0x29D3520
	0x01E58D2C ADRP X20, 0x22A4000
	0x01E58D30 LDR X20, [X20 + 0x548]
	0x01E58D34 LDR X0, [X20]
	0x01E58D38 LDR W8, [X0 + 0xE0]
	0x01E58D3C CBNZ W8, 0x1E58D48
	0x01E58D40 BL 0x1C16DFC
	0x01E58D44 LDR X0, [X20]
	0x01E58D48 LDR X8, [X0 + 0xB8]
	0x01E58D4C LDR X9, [X19]
	0x01E58D50 MOV X0, X19
	0x01E58D54 MOV X2, X22
	0x01E58D58 LDR X3, [X8]
	0x01E58D5C LDR X5, [X9 + 0x228]
	0x01E58D60 LDR X4, [X9 + 0x230]
	0x01E58D64 LDP X20, X19, [X31 + 0x20]
	0x01E58D68 LDP X22, X21, [X31 + 0x10]
	0x01E58D6C MOVZ W1, 0xF8
	0x01E58D70 LDP X30, X23, [X31], #0x30
	0x01E58D74 BR X5
	0x01E58D78 BL 0x1C16F20
	0x01E58D7C STP X30, X25, [X31 - 0x40]!
	0x01E58D80 STP X24, X23, [X31 + 0x10]
	0x01E58D84 STP X22, X21, [X31 + 0x20]
	0x01E58D88 STP X20, X19, [X31 + 0x30]
	0x01E58D8C ADRP X20, 0x2581000
	0x01E58D90 LDRB W8, [X20 + 0x5B]
	0x01E58D94 MOV X21, X4
	0x01E58D98 MOV X24, X3
	0x01E58D9C MOV X22, X2
	0x01E58DA0 MOV W23, W1
	0x01E58DA4 MOV X19, X0
	0x01E58DA8 TBNZ X8, 0x0, 0x1E58DCC
	0x01E58DAC ADRP X0, 0x22A4000
	0x01E58DB0 LDR X0, [X0 + 0x6D8]
	0x01E58DB4 BL 0x1C16CF4
	0x01E58DB8 ADRP X0, 0x22A4000
	0x01E58DBC LDR X0, [X0 + 0x6E0]
	0x01E58DC0 BL 0x1C16CF4
	0x01E58DC4 MOVZ W8, 0x1
	0x01E58DC8 STRB W8, [X20 + 0x5B]
	0x01E58DCC LDR X0, [X19 + 0x110]
	0x01E58DD0 CBZ X0, 0x1E58FA8
	0x01E58DD4 ADRP X8, 0x22A4000
	0x01E58DD8 LDR X8, [X8 + 0x6D8]
	0x01E58DDC ADRP X25, 0x22A4000
	0x01E58DE0 LDR X1, [X8]
	0x01E58DE4 LDR X25, [X25 + 0x6E0]
	0x01E58DE8 BL 0x24A6860
	0x01E58DEC MOV X20, X0
	0x01E58DF0 CBZ X24, 0x1E58F08
	0x01E58DF4 LDRB W2, [X24 + 0x10]
	0x01E58DF8 CBZ W2, 0x1E58E5C
	0x01E58DFC CBZ X20, 0x1E58FB4
	0x01E58E00 MOVZ W1, 0xF7
	0x01E58E04 MOV X0, X20
	0x01E58E08 MOV X3, X31
	0x01E58E0C BL 0x34FBD80
	0x01E58E10 LDRB W8, [X24 + 0x10]
	0x01E58E14 SUB W8, W8, 0x6
	0x01E58E18 CMP W8, 0x7
	0x01E58E1C B.HI 0x1E58E5C
	0x01E58E20 ADRP X9, 0xFFFFFFFFFECD5000
	0x01E58E24 ADD X9, X9, 0xB30
	0x01E58E28 ADR X10, 0x10
	0x01E58E2C LDRB W11, [X9, X8, LSL]
	0x01E58E30 ADD X10, X10, X11, 0x2, LSL
	0x01E58E34 BR X10
	0x01E58E38 LDR X8, [X19]
	0x01E58E3C LDR X9, [X8 + 0x238]
	0x01E58E40 LDR X4, [X8 + 0x240]
	0x01E58E44 MOVZ W1, 0xFD
	0x01E58E48 MOV X0, X19
	0x01E58E4C MOV X2, X20
	0x01E58E50 MOV X3, X21
	0x01E58E54 BLR X9
	0x01E58E58 B 0x1E58F70
	0x01E58E5C LDR X2, [X24 + 0x18]
	0x01E58E60 CBZ X2, 0x1E58EA0
	0x01E58E64 CBZ X20, 0x1E58FBC
	0x01E58E68 MOVZ W1, 0xFC
	0x01E58E6C MOV X0, X20
	0x01E58E70 MOV X3, X31
	0x01E58E74 BL 0x34FC3A4
	0x01E58E78 B 0x1E58EF8
	0x01E58E7C LDR X8, [X19]
	0x01E58E80 LDR X9, [X8 + 0x238]
	0x01E58E84 LDR X4, [X8 + 0x240]
	0x01E58E88 MOVZ W1, 0xFD
	0x01E58E8C MOV X0, X19
	0x01E58E90 MOV X2, X20
	0x01E58E94 MOV X3, X21
	0x01E58E98 BLR X9
	0x01E58E9C B 0x1E58F70
	0x01E58EA0 LDRB W2, [X24 + 0x11]
	0x01E58EA4 CBZ W2, 0x1E58EDC
	0x01E58EA8 CBZ X20, 0x1E58FC4
	0x01E58EAC MOVZ W1, 0xF0
	0x01E58EB0 MOV X0, X20
	0x01E58EB4 MOV X3, X31
	0x01E58EB8 BL 0x34FBD80
	0x01E58EBC B 0x1E58EF8
	0x01E58EC0 LDR X2, [X24 + 0x18]
	0x01E58EC4 CBZ X2, 0x1E58F24
	0x01E58EC8 MOVZ W1, 0xFC
	0x01E58ECC MOV X0, X20
	0x01E58ED0 MOV X3, X31
	0x01E58ED4 BL 0x34FC3A4
	0x01E58ED8 B 0x1E58F24
	0x01E58EDC LDRB W2, [X24 + 0x20]
	0x01E58EE0 CBZ W2, 0x1E58EF8
	0x01E58EE4 CBZ X20, 0x1E58FC8
	0x01E58EE8 MOVZ W1, 0xF6
	0x01E58EEC MOV X0, X20
	0x01E58EF0 MOV X3, X31
	0x01E58EF4 BL 0x34FBD80
	0x01E58EF8 LDR X8, [X24 + 0x28]
	0x01E58EFC CBZ X8, 0x1E58FB8
	0x01E58F00 LDRB W2, [X8 + 0x10]
	0x01E58F04 TBNZ X2, 0x0, 0x1E58F10
	0x01E58F08 CBNZ X20, 0x1E58F24
	0x01E58F0C BL 0x1C16F20
	0x01E58F10 CBZ X20, 0x1E58FC0
	0x01E58F14 MOVZ W1, 0xEA
	0x01E58F18 MOV X0, X20
	0x01E58F1C MOV X3, X31
	0x01E58F20 BL 0x34FBD80
	0x01E58F24 MOVZ W1, 0xF4
	0x01E58F28 MOV X0, X20
	0x01E58F2C MOV W2, W23
	0x01E58F30 MOV X3, X31
	0x01E58F34 BL 0x34FBD80
	0x01E58F38 CBZ X22, 0x1E58F50
	0x01E58F3C MOVZ W1, 0xF5
	0x01E58F40 MOV X0, X20
	0x01E58F44 MOV X2, X22
	0x01E58F48 MOV X3, X31
	0x01E58F4C BL 0x34FC3A4
	0x01E58F50 LDR X8, [X19]
	0x01E58F54 LDR X9, [X8 + 0x238]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+16], X30
	003 Move [X31+32], X26
	004 Move [X31+40], X25
	005 Move [X31+48], X24
	006 Move [X31+56], X23
	007 Move [X31+64], X22
	008 Move [X31+72], X21
	009 Move [X31+80], X20
	010 Move [X31+88], X19
	011 Move X24, 0x2582000
	012 Move W8, [X24+84]
	013 Move X20, X4
	014 Move X21, X3
	015 Move X23, X2
	016 Move W22, W1
	017 Move X19, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {60}
	022 Move X0, 0x229C000
	023 Move X0, [X0+2904]
	024 Call 0x1C17CF4
	025 Move X0, 0x229D000
	026 Move X0, [X0+2520]
	027 Call 0x1C17CF4
	028 Move X0, 0x22A5000
	029 Move X0, [X0+1336]
	030 Call 0x1C17CF4
	031 Move X0, 0x22A5000
	032 Move X0, [X0+1344]
	033 Call 0x1C17CF4
	034 Move X0, 0x22A4000
	035 Move X0, [X0+3424]
	036 Call 0x1C17CF4
	037 Move X0, 0x22A5000
	038 Move X0, [X0+1560]
	039 Call 0x1C17CF4
	040 Move X0, 0x22A5000
	041 Move X0, [X0+696]
	042 Call 0x1C17CF4
	043 Move X0, 0x22A4000
	044 Move X0, [X0+3016]
	045 Call 0x1C17CF4
	046 Move X0, 0x229C000
	047 Move X0, [X0+1880]
	048 Call 0x1C17CF4
	049 Move X0, 0x22A5000
	050 Move X0, [X0+1352]
	051 Call 0x1C17CF4
	052 Move X0, 0x22A5000
	053 Move X0, [X0+1656]
	054 Call 0x1C17CF4
	055 Move X0, 0x22A5000
	056 Move X0, [X0+1664]
	057 Call 0x1C17CF4
	058 Move W8, 1
	059 Move [X24+84], W8
	060 Move W8, [X19+64]
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Move X24, [X19+72]
	063 Compare X24, 0
	064 JumpIfEqual {239}
	065 Move X9, 0x22A4000
	066 Move X8, [X24]
	067 Move X9, [X9+3016]
	068 Move X10, 0x22A5000
	069 Move X1, [X9]
	070 Move X10, [X10+1664]
	071 NotImplemented "Instruction LDRH not yet implemented."
	072 Move X25, [X10]
	073 Compare X9, 0
	074 JumpIfEqual {81}
	075 Move X10, [X8+176]
	076 Add X10, X10, 8
	077 NotImplemented "Instruction LDUR not yet implemented."
	078 NotImplemented "Instruction CMP not yet implemented."
	079 Subtract X9, X9, 1
	080 Add X10, X10, 16
	081 Move X0, X24
	082 Move W2, W31
	083 Call 0x1C5D788
	084 NotImplemented "Instruction LDRSW not yet implemented."
	085 Add X8, X8, X9
	086 Add X0, X8, 312
	087 Move X8, [X0]
	088 Move X3, [X0+8]
	089 Move W1, 3
	090 Move X0, X24
	091 Move X2, X25
	092 NotImplemented "Instruction BLR not yet implemented."
	093 NotImplemented "Instruction CMP not yet implemented."
	094 Compare X23, 0
	095 JumpIfEqual {193}
	096 Move X25, 0x22A4000
	097 Move X25, [X25+3424]
	098 Move X0, X23
	099 Move X1, [X25]
	100 Call Dictionary`2<Object, Object>.get_Count, X0
	101 Compare W0, 0
	102 JumpIfEqual {193}
	103 Move X8, 0x22A5000
	104 Move X8, [X8+696]
	105 Move X0, [X8]
	106 Call 0x1C17F10
	107 Move X8, 0x22A5000
	108 Move X8, [X8+1344]
	109 Move X24, X0
	110 Move X1, [X8]
	111 Call Dictionary`2<Byte, Object>..ctor, X0
	112 Compare X24, 0
	113 JumpIfEqual {239}
	114 Move X26, 0x22A5000
	115 Move X26, [X26+1336]
	116 Move W1, 251
	117 Move X0, X24
	118 Move X2, X23
	119 Move X3, [X26]
	120 Call Dictionary`2<Byte, Object>.Add, X0, X1, X2
	121 Move X8, 0x229C000
	122 Move X8, [X8+1880]
	123 Add X1, X31, 28
	124 Move [X31+28], W22
	125 Move X0, [X8]
	126 Call 0x1C17E04
	127 Move X3, [X26]
	128 Move X2, X0
	129 Move W1, 254
	130 Move X0, X24
	131 Call Dictionary`2<Byte, Object>.Add, X0, X1, X2
	132 Move X8, 0x229C000
	133 Move X8, [X8+2904]
	134 Add X1, X31, 24
	135 Move X0, [X8]
	136 Move W8, 1
	137 Move [X31+24], W8
	138 Call 0x1C17E04
	139 Move X3, [X26]
	140 Move X2, X0
	141 Move W1, 250
	142 Move X0, X24
	143 Call Dictionary`2<Byte, Object>.Add, X0, X1, X2
	144 Compare X21, 0
	145 JumpIfEqual {156}
	146 Move X1, [X25]
	147 Move X0, X21
	148 Call Dictionary`2<Object, Object>.get_Count, X0
	149 Compare W0, 0
	150 JumpIfEqual {156}
	151 Move X3, [X26]
	152 Move W1, 231
	153 Move X0, X24
	154 Move X2, X21
	155 Call Dictionary`2<Byte, Object>.Add, X0, X1, X2
	156 Compare X20, 0
	157 JumpIfEqual {176}
	158 Move W8, [X20+16]
	159 Move TEMP, X8
	160 And TEMP, TEMP, 1
	161 Compare TEMP, 1
	162 JumpIfNotEqual {176}
	163 Move X9, 0x229D000
	164 Move X9, [X9+2520]
	165 Add X1, X31, 12
	166 Move [X31+12], W8
	167 Move X0, [X9]
	168 Call 0x1C17E04
	169 Move X8, 0x22A5000
	170 Move X8, [X8+1560]
	171 Move X2, X0
	172 Move W1, 234
	173 Move X0, X24
	174 Move X3, [X8]
	175 Call Dictionary`2<Byte, Object>.set_Item, X0, X1, X2
	176 Move X20, 0x22A5000
	177 Move X20, [X20+1352]
	178 Move X0, [X20]
	179 Move W8, [X0+224]
	180 Compare W8, 0
	181 JumpIfNotEqual {184}
	182 Call 0x1C17DFC
	183 Move X0, [X20]
	184 Move X8, [X0+184]
	185 Move X9, [X19]
	186 Move W1, 252
	187 Move X0, X19
	188 Move X3, [X8]
	189 Move X8, [X9+552]
	190 Move X4, [X9+560]
	191 Move X2, X24
	192 NotImplemented "Instruction BLR not yet implemented."
	193 Move W8, [X19+64]
	194 NotImplemented "Instruction CMP not yet implemented."
	195 Move X19, [X19+72]
	196 Compare X19, 0
	197 JumpIfEqual {239}
	198 Move X9, 0x22A4000
	199 Move X8, [X19]
	200 Move X9, [X9+3016]
	201 Move X10, 0x22A5000
	202 Move X1, [X9]
	203 Move X10, [X10+1656]
	204 NotImplemented "Instruction LDRH not yet implemented."
	205 Move X20, [X10]
	206 Compare X9, 0
	207 JumpIfEqual {214}
	208 Move X10, [X8+176]
	209 Add X10, X10, 8
	210 NotImplemented "Instruction LDUR not yet implemented."
	211 NotImplemented "Instruction CMP not yet implemented."
	212 Subtract X9, X9, 1
	213 Add X10, X10, 16
	214 Move X0, X19
	215 Move W2, W31
	216 Call 0x1C5D788
	217 NotImplemented "Instruction LDRSW not yet implemented."
	218 Add X8, X8, X9
	219 Add X0, X8, 312
	220 Move X8, [X0]
	221 Move X3, [X0+8]
	222 Move W1, 3
	223 Move X0, X19
	224 Move X2, X20
	225 NotImplemented "Instruction BLR not yet implemented."
	226 Move W0, W31
	227 Move X20, [X31+80]
	228 Move X19, [X31+88]
	229 Move X22, [X31+64]
	230 Move X21, [X31+72]
	231 Move X24, [X31+48]
	232 Move X23, [X31+56]
	233 Move X26, [X31+32]
	234 Move X25, [X31+40]
	235 Move X30, [X31+16]
	236 And W0, W0, 1
	237 Add X31, X31, 96
	238 Return X0
	239 Call 0x1C17F20

Method: System.Boolean OpSetPropertyOfRoom(System.Byte propCode, System.Object value)

Disassembly:
	0x01E58F64 MOV X2, X20
	0x01E58F68 MOV X3, X21
	0x01E58F6C BLR X9
	0x01E58F70 MOV W21, W0
	0x01E58F74 MOV X22, X31
	0x01E58F78 LDR X0, [X19 + 0x110]
	0x01E58F7C CBZ X0, 0x1E58FA8
	0x01E58F80 LDR X2, [X25]
	0x01E58F84 MOV X1, X20
	0x01E58F88 BL 0x24A65D0
	0x01E58F8C CBNZ X22, 0x1E58FAC
	0x01E58F90 AND W0, W21, 0x1
	0x01E58F94 LDP X20, X19, [X31 + 0x30]
	0x01E58F98 LDP X22, X21, [X31 + 0x20]
	0x01E58F9C LDP X24, X23, [X31 + 0x10]
	0x01E58FA0 LDP X30, X25, [X31], #0x40
	0x01E58FA4 RET
	0x01E58FA8 BL 0x1C16F20
	0x01E58FAC MOV X0, X22
	0x01E58FB0 BL 0x1C16F18
	0x01E58FB4 BL 0x1C16F20
	0x01E58FB8 BL 0x1C16F20
	0x01E58FBC BL 0x1C16F20
	0x01E58FC0 BL 0x1C16F20
	0x01E58FC4 BL 0x1C16F20
	0x01E58FC8 BL 0x1C16F20
	0x01E58FCC B 0x1E58FF8
	0x01E58FD0 B 0x1E58FF8
	0x01E58FD4 B 0x1E58FF8
	0x01E58FD8 B 0x1E58FF8
	0x01E58FDC B 0x1E58FF8
	0x01E58FE0 B 0x1E58FF8
	0x01E58FE4 B 0x1E58FF8
	0x01E58FE8 B 0x1E58FF8
	0x01E58FEC B 0x1E58FF8
	0x01E58FF0 B 0x1E58FF8

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x2582000
	008 Move X23, 0x22A4000
	009 Move W8, [X22+85]
	010 Move X23, [X23+3488]
	011 Move X20, X2
	012 Move W21, W1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0x22A4000
	019 Move X0, [X0+3488]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+85], W8
	023 Move X0, [X23]
	024 Call 0x1C17F10
	025 Move X1, X31
	026 Move X22, X0
	027 Call Hashtable..ctor, X0
	028 Compare X22, 0
	029 JumpIfEqual {45}
	030 Move X0, X22
	031 Move W1, W21
	032 Move X2, X20
	033 Move X3, X31
	034 Call Hashtable.set_Item, X0, X1, X2
	035 Move X0, X19
	036 Move X1, X22
	037 Move X20, [X31+32]
	038 Move X19, [X31+40]
	039 Move X22, [X31+16]
	040 Move X21, [X31+24]
	041 Move X2, X31
	042 Move X3, X31
	043 Move X30, [X31+48]
	044 Move X23, [X31+56]
	045 Call 0x1C17F20

Method: System.Boolean OpSetCustomPropertiesOfRoom(ExitGames.Client.Photon.Hashtable gameProperties)

Disassembly:
	0x01E59320 STRH W31, [X0 + 0x10]
	0x01E59324 STRB W31, [X0 + 0x12]
	0x01E59328 B 0x33BDD8C
	0x01E5932C MOV X1, X31
	0x01E59330 B 0x33BDD8C
	0x01E59334 MOVZ W8, 0x1
	0x01E59338 MOV X1, X31
	0x01E5933C STRB W8, [X0 + 0x30]
	0x01E59340 B 0x33BDD8C
	0x01E59344 MOV X1, X31
	0x01E59348 B 0x33BDD8C
	0x01E5934C MOV X1, X31
	0x01E59350 B 0x33BDD8C
	0x01E59354 MOV X1, X31
	0x01E59358 B 0x33BDD8C
	0x01E5935C MOV X1, X31
	0x01E59360 B 0x33BDD8C
	0x01E59364 MOV X1, X31
	0x01E59368 B 0x33BDD8C
	0x01E5936C MOV X1, X31
	0x01E59370 B 0x33BDD8C
	0x01E59374 AND W8, W1, 0x1
	0x01E59378 STRB W8, [X0 + 0x10]
	0x01E5937C RET
	0x01E59380 AND W8, W1, 0x1
	0x01E59384 STRB W8, [X0 + 0x11]
	0x01E59388 RET
	0x01E5938C AND W8, W1, 0x1
	0x01E59390 STRB W8, [X0 + 0x20]
	0x01E59394 RET

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x2581000
	007 Move X22, 0x22A3000
	008 Move W8, [X21+86]
	009 Move X22, [X22+3480]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x22A3000
	017 Move X0, [X0+3480]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+86], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move X0, X20
	027 Move X1, X31
	028 Call Extensions.StripToStringKeys, X0
	029 Move X1, X0
	030 Move X0, X19
	031 Move X20, [X31+32]
	032 Move X19, [X31+40]
	033 Move X22, [X31+16]
	034 Move X21, [X31+24]
	035 Move X2, X31
	036 Move X3, X31
	037 Move X30, [X31+48]
	038 Call LoadBalancingPeer.OpSetPropertiesOfRoom, X0, X1, X2, X3
	039 Return X0

Method: System.Boolean OpSetPropertiesOfRoom(ExitGames.Client.Photon.Hashtable gameProperties, ExitGames.Client.Photon.Hashtable expectedProperties = null, Fusion.Photon.Realtime.WebFlags webflags = null)

Disassembly:
	0x01E58FF4 B 0x1E58FF8
	0x01E58FF8 MOV X21, X0
	0x01E58FFC CMP W1, 0x1
	0x01E59000 B.NE 0x1E5901C
	0x01E59004 MOV X0, X21
	0x01E59008 BL 0x3EB1AD0
	0x01E5900C LDR X22, [X0]
	0x01E59010 BL 0x3EB1AE0
	0x01E59014 MOV W21, W31
	0x01E59018 B 0x1E58F78
	0x01E5901C MOV X22, X31
	0x01E59020 B 0x1E59028
	0x01E59024 MOV X21, X0
	0x01E59028 LDR X0, [X19 + 0x110]
	0x01E5902C CBNZ X0, 0x1E59034
	0x01E59030 BL 0x1C16F20
	0x01E59034 LDR X2, [X25]
	0x01E59038 MOV X1, X20
	0x01E5903C BL 0x24A65D0
	0x01E59040 CBNZ X22, 0x1E5904C
	0x01E59044 MOV X0, X21
	0x01E59048 BL 0x1D2C690
	0x01E5904C MOV X0, X22
	0x01E59050 BL 0x1C16F18
	0x01E59054 BL 0x1990590
	0x01E59058 STR X30, [X31 - 0x30]!
	0x01E5905C STP X22, X21, [X31 + 0x10]
	0x01E59060 STP X20, X19, [X31 + 0x20]
	0x01E59064 ADRP X21, 0x2580000
	0x01E59068 LDRB W8, [X21 + 0x5C]
	0x01E5906C MOV W20, W1
	0x01E59070 MOV X19, X0
	0x01E59074 TBNZ X8, 0x0, 0x1E590E0
	0x01E59078 ADRP X0, 0x229A000
	0x01E5907C LDR X0, [X0 + 0xB58]
	0x01E59080 BL 0x1C16CF4
	0x01E59084 ADRP X0, 0x22A3000
	0x01E59088 LDR X0, [X0 + 0x540]
	0x01E5908C BL 0x1C16CF4
	0x01E59090 ADRP X0, 0x22A3000
	0x01E59094 LDR X0, [X0 + 0x6E8]
	0x01E59098 BL 0x1C16CF4
	0x01E5909C ADRP X0, 0x22A3000
	0x01E590A0 LDR X0, [X0 + 0x618]
	0x01E590A4 BL 0x1C16CF4
	0x01E590A8 ADRP X0, 0x22A3000
	0x01E590AC LDR X0, [X0 + 0x2B8]
	0x01E590B0 BL 0x1C16CF4
	0x01E590B4 ADRP X0, 0x22A2000
	0x01E590B8 LDR X0, [X0 + 0xBC8]
	0x01E590BC BL 0x1C16CF4
	0x01E590C0 ADRP X0, 0x22A3000
	0x01E590C4 LDR X0, [X0 + 0x548]
	0x01E590C8 BL 0x1C16CF4
	0x01E590CC ADRP X0, 0x22A3000
	0x01E590D0 LDR X0, [X0 + 0x6F0]
	0x01E590D4 BL 0x1C16CF4
	0x01E590D8 MOVZ W8, 0x1
	0x01E590DC STRB W8, [X21 + 0x5C]
	0x01E590E0 LDRB W8, [X19 + 0x40]
	0x01E590E4 CMP W8, 0x5
	0x01E590E8 B.CC 0x1E59168
	0x01E590EC LDR X21, [X19 + 0x48]
	0x01E590F0 CBZ X21, 0x1E59248
	0x01E590F4 ADRP X9, 0x22A2000
	0x01E590F8 LDR X8, [X21]
	0x01E590FC LDR X9, [X9 + 0xBC8]
	0x01E59100 ADRP X10, 0x22A3000
	0x01E59104 LDR X1, [X9]
	0x01E59108 LDR X10, [X10 + 0x6F0]
	0x01E5910C LDRH W9, [X8 + 0x12E]
	0x01E59110 LDR X22, [X10]
	0x01E59114 CBZ X9, 0x1E59138
	0x01E59118 LDR X10, [X8 + 0xB0]
	0x01E5911C ADD X10, X10, 0x8
	0x01E59120 LDUR X11, [X10 - 0x8]
	0x01E59124 CMP X11, X1
	0x01E59128 B.EQ 0x1E59148
	0x01E5912C SUBS X9, X9, 0x1
	0x01E59130 ADD X10, X10, 0x10
	0x01E59134 B.NE 0x1E59120
	0x01E59138 MOV X0, X21
	0x01E5913C MOV W2, W31
	0x01E59140 BL 0x1C5C788
	0x01E59144 B 0x1E59154
	0x01E59148 LDRSW X9, [X10]
	0x01E5914C ADD X8, X8, X9, 0x4, LSL
	0x01E59150 ADD X0, X8, 0x138
	0x01E59154 LDP X8, X3, [X0]
	0x01E59158 MOVZ W1, 0x5
	0x01E5915C MOV X0, X21
	0x01E59160 MOV X2, X22
	0x01E59164 BLR X8
	0x01E59168 ADRP X8, 0x22A3000
	0x01E5916C LDR X8, [X8 + 0x2B8]
	0x01E59170 ADRP X21, 0x22A3000
	0x01E59174 LDR X0, [X8]
	0x01E59178 LDR X21, [X21 + 0x540]
	0x01E5917C BL 0x1C16F10
	0x01E59180 LDR X1, [X21]
	0x01E59184 MOV X21, X0
	0x01E59188 BL 0x29D2C7C
	0x01E5918C TBZ X20, 0x0, 0x1E591D0
	0x01E59190 ADRP X8, 0x229A000
	0x01E59194 LDR X8, [X8 + 0xB58]
	0x01E59198 ADD X1, X31, 0xC
	0x01E5919C LDR X0, [X8]
	0x01E591A0 AND W8, W20, 0x1
	0x01E591A4 STRB W8, [X31 + 0xC]
	0x01E591A8 BL 0x1C16E04
	0x01E591AC CBZ X21, 0x1E59248
	0x01E591B0 ADRP X8, 0x22A3000
	0x01E591B4 LDR X8, [X8 + 0x618]
	0x01E591B8 MOV X2, X0
	0x01E591BC MOV X0, X21
	0x01E591C0 MOV W1, W31
	0x01E591C4 LDR X3, [X8]
	0x01E591C8 BL 0x29D3520
	0x01E591CC B 0x1E591D4
	0x01E591D0 CBZ X21, 0x1E59248
	0x01E591D4 ADRP X8, 0x22A3000
	0x01E591D8 LDR X8, [X8 + 0x6E8]
	0x01E591DC MOV X0, X21
	0x01E591E0 LDR X1, [X8]
	0x01E591E4 BL 0x29D3304
	0x01E591E8 CBZ W0, 0x1E59230
	0x01E591EC ADRP X20, 0x22A3000
	0x01E591F0 LDR X20, [X20 + 0x548]
	0x01E591F4 LDR X0, [X20]
	0x01E591F8 LDR W8, [X0 + 0xE0]
	0x01E591FC CBNZ W8, 0x1E59208
	0x01E59200 BL 0x1C16DFC
	0x01E59204 LDR X0, [X20]
	0x01E59208 LDR X8, [X0 + 0xB8]
	0x01E5920C LDR X9, [X19]
	0x01E59210 MOVZ W1, 0xDA
	0x01E59214 MOV X0, X19
	0x01E59218 LDR X3, [X8]
	0x01E5921C LDR X8, [X9 + 0x228]
	0x01E59220 LDR X4, [X9 + 0x230]
	0x01E59224 MOV X2, X21
	0x01E59228 BLR X8
	0x01E5922C B 0x1E59234
	0x01E59230 MOVZ W0, 0x1
	0x01E59234 LDP X20, X19, [X31 + 0x20]
	0x01E59238 LDP X22, X21, [X31 + 0x10]
	0x01E5923C AND W0, W0, 0x1
	0x01E59240 LDR X30, [X31], #0x30
	0x01E59244 RET
	0x01E59248 BL 0x1C16F20
	0x01E5924C STR X30, [X31 - 0x20]!
	0x01E59250 STP X20, X19, [X31 + 0x10]
	0x01E59254 ADRP X19, 0x2580000
	0x01E59258 ADRP X20, 0x22A3000
	0x01E5925C LDRB W8, [X19 + 0x5D]
	0x01E59260 LDR X20, [X20 + 0x580]
	0x01E59264 TBNZ X8, 0x0, 0x1E5927C
	0x01E59268 ADRP X0, 0x22A3000
	0x01E5926C LDR X0, [X0 + 0x580]
	0x01E59270 BL 0x1C16CF4
	0x01E59274 MOVZ W8, 0x1
	0x01E59278 STRB W8, [X19 + 0x5D]
	0x01E5927C LDR X0, [X20]
	0x01E59280 BL 0x1C16F10
	0x01E59284 MOV X1, X31
	0x01E59288 MOV X19, X0
	0x01E5928C BL 0x33BDD8C
	0x01E59290 LDR X8, [X20]
	0x01E59294 LDR X8, [X8 + 0xB8]
	0x01E59298 STR X19, [X8]
	0x01E5929C LDP X20, X19, [X31 + 0x10]
	0x01E592A0 LDR X30, [X31], #0x20
	0x01E592A4 RET
	0x01E592A8 MOV X1, X31
	0x01E592AC B 0x33BDD8C
	0x01E592B0 STR X30, [X31 - 0x20]!
	0x01E592B4 STP X20, X19, [X31 + 0x10]
	0x01E592B8 ADRP X19, 0x2580000
	0x01E592BC ADRP X20, 0x22A3000
	0x01E592C0 LDRB W8, [X19 + 0x5E]
	0x01E592C4 LDR X20, [X20 + 0x6F8]
	0x01E592C8 TBNZ X8, 0x0, 0x1E592E0
	0x01E592CC ADRP X0, 0x22A3000
	0x01E592D0 LDR X0, [X0 + 0x6F8]
	0x01E592D4 BL 0x1C16CF4
	0x01E592D8 MOVZ W8, 0x1
	0x01E592DC STRB W8, [X19 + 0x5E]
	0x01E592E0 LDR X0, [X20]
	0x01E592E4 BL 0x1C16F10
	0x01E592E8 MOV X1, X31
	0x01E592EC MOV X19, X0
	0x01E592F0 BL 0x34FB6A4
	0x01E592F4 MOV X0, X19
	0x01E592F8 LDP X20, X19, [X31 + 0x10]
	0x01E592FC LDR X30, [X31], #0x20
	0x01E59300 RET
	0x01E59304 CBZ X1, 0x1E59314
	0x01E59308 MOV X0, X1
	0x01E5930C MOV X1, X31
	0x01E59310 B 0x34FBB20
	0x01E59314 STR X30, [X31 - 0x10]!
	0x01E59318 BL 0x1C16F20
	0x01E5931C MOV X1, X31

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X23, 0x2581000
	011 Move W8, [X23+87]
	012 Move X20, X3
	013 Move X21, X2
	014 Move X22, X1
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {55}
	020 Move X0, 0x229B000
	021 Move X0, [X0+2904]
	022 Call 0x1C17CF4
	023 Move X0, 0x229C000
	024 Move X0, [X0+2520]
	025 Call 0x1C17CF4
	026 Move X0, 0x22A4000
	027 Move X0, [X0+1336]
	028 Call 0x1C17CF4
	029 Move X0, 0x22A4000
	030 Move X0, [X0+1344]
	031 Call 0x1C17CF4
	032 Move X0, 0x22A3000
	033 Move X0, [X0+3424]
	034 Call 0x1C17CF4
	035 Move X0, 0x22A4000
	036 Move X0, [X0+1560]
	037 Call 0x1C17CF4
	038 Move X0, 0x22A4000
	039 Move X0, [X0+696]
	040 Call 0x1C17CF4
	041 Move X0, 0x22A3000
	042 Move X0, [X0+3016]
	043 Call 0x1C17CF4
	044 Move X0, 0x22A4000
	045 Move X0, [X0+1352]
	046 Call 0x1C17CF4
	047 Move X0, 0x22A4000
	048 Move X0, [X0+1672]
	049 Call 0x1C17CF4
	050 Move X0, 0x22A4000
	051 Move X0, [X0+1680]
	052 Call 0x1C17CF4
	053 Move W8, 1
	054 Move [X23+87], W8
	055 Move W8, [X19+64]
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Move X23, [X19+72]
	058 Compare X23, 0
	059 JumpIfEqual {221}
	060 Move X9, 0x22A3000
	061 Move X8, [X23]
	062 Move X9, [X9+3016]
	063 Move X10, 0x22A4000
	064 Move X1, [X9]
	065 Move X10, [X10+1672]
	066 NotImplemented "Instruction LDRH not yet implemented."
	067 Move X24, [X10]
	068 Compare X9, 0
	069 JumpIfEqual {76}
	070 Move X10, [X8+176]
	071 Add X10, X10, 8
	072 NotImplemented "Instruction LDUR not yet implemented."
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Subtract X9, X9, 1
	075 Add X10, X10, 16
	076 Move X0, X23
	077 Move W2, W31
	078 Call 0x1C5D788
	079 NotImplemented "Instruction LDRSW not yet implemented."
	080 Add X8, X8, X9
	081 Add X0, X8, 312
	082 Move X8, [X0]
	083 Move X3, [X0+8]
	084 Move W1, 3
	085 Move X0, X23
	086 Move X2, X24
	087 NotImplemented "Instruction BLR not yet implemented."
	088 Compare X22, 0
	089 JumpIfEqual {176}
	090 Move X24, 0x22A3000
	091 Move X24, [X24+3424]
	092 Move X0, X22
	093 Move X1, [X24]
	094 Call Dictionary`2<Object, Object>.get_Count, X0
	095 Compare W0, 0
	096 JumpIfEqual {176}
	097 Move X8, 0x22A4000
	098 Move X8, [X8+696]
	099 Move X0, [X8]
	100 Call 0x1C17F10
	101 Move X8, 0x22A4000
	102 Move X8, [X8+1344]
	103 Move X23, X0
	104 Move X1, [X8]
	105 Call Dictionary`2<Byte, Object>..ctor, X0
	106 Compare X23, 0
	107 JumpIfEqual {221}
	108 Move X25, 0x22A4000
	109 Move X25, [X25+1336]
	110 Move W1, 251
	111 Move X0, X23
	112 Move X2, X22
	113 Move X3, [X25]
	114 Call Dictionary`2<Byte, Object>.Add, X0, X1, X2
	115 Move X8, 0x229B000
	116 Move X8, [X8+2904]
	117 Add X1, X31, 12
	118 Move X0, [X8]
	119 Move W8, 1
	120 Move [X31+12], W8
	121 Call 0x1C17E04
	122 Move X3, [X25]
	123 Move X2, X0
	124 Move W1, 250
	125 Move X0, X23
	126 Call Dictionary`2<Byte, Object>.Add, X0, X1, X2
	127 Compare X21, 0
	128 JumpIfEqual {139}
	129 Move X1, [X24]
	130 Move X0, X21
	131 Call Dictionary`2<Object, Object>.get_Count, X0
	132 Compare W0, 0
	133 JumpIfEqual {139}
	134 Move X3, [X25]
	135 Move W1, 231
	136 Move X0, X23
	137 Move X2, X21
	138 Call Dictionary`2<Byte, Object>.Add, X0, X1, X2
	139 Compare X20, 0
	140 JumpIfEqual {159}
	141 Move W8, [X20+16]
	142 Move TEMP, X8
	143 And TEMP, TEMP, 1
	144 Compare TEMP, 1
	145 JumpIfNotEqual {159}
	146 Move X9, 0x229C000
	147 Move X9, [X9+2520]
	148 Add X1, X31, 8
	149 Move [X31+8], W8
	150 Move X0, [X9]
	151 Call 0x1C17E04
	152 Move X8, 0x22A4000
	153 Move X8, [X8+1560]
	154 Move X2, X0
	155 Move W1, 234
	156 Move X0, X23
	157 Move X3, [X8]
	158 Call Dictionary`2<Byte, Object>.set_Item, X0, X1, X2
	159 Move X20, 0x22A4000
	160 Move X20, [X20+1352]
	161 Move X0, [X20]
	162 Move W8, [X0+224]
	163 Compare W8, 0
	164 JumpIfNotEqual {167}
	165 Call 0x1C17DFC
	166 Move X0, [X20]
	167 Move X8, [X0+184]
	168 Move X9, [X19]
	169 Move W1, 252
	170 Move X0, X19
	171 Move X3, [X8]
	172 Move X8, [X9+552]
	173 Move X4, [X9+560]
	174 Move X2, X23
	175 NotImplemented "Instruction BLR not yet implemented."
	176 Move W8, [X19+64]
	177 NotImplemented "Instruction CMP not yet implemented."
	178 Move X19, [X19+72]
	179 Compare X19, 0
	180 JumpIfEqual {221}
	181 Move X9, 0x22A3000
	182 Move X8, [X19]
	183 Move X9, [X9+3016]
	184 Move X10, 0x22A4000
	185 Move X1, [X9]
	186 Move X10, [X10+1680]
	187 NotImplemented "Instruction LDRH not yet implemented."
	188 Move X20, [X10]
	189 Compare X9, 0
	190 JumpIfEqual {197}
	191 Move X10, [X8+176]
	192 Add X10, X10, 8
	193 NotImplemented "Instruction LDUR not yet implemented."
	194 NotImplemented "Instruction CMP not yet implemented."
	195 Subtract X9, X9, 1
	196 Add X10, X10, 16
	197 Move X0, X19
	198 Move W2, W31
	199 Call 0x1C5D788
	200 NotImplemented "Instruction LDRSW not yet implemented."
	201 Add X8, X8, X9
	202 Add X0, X8, 312
	203 Move X8, [X0]
	204 Move X3, [X0+8]
	205 Move W1, 3
	206 Move X0, X19
	207 Move X2, X20
	208 NotImplemented "Instruction BLR not yet implemented."
	209 Move W0, W31
	210 Move X20, [X31+64]
	211 Move X19, [X31+72]
	212 Move X22, [X31+48]
	213 Move X21, [X31+56]
	214 Move X24, [X31+32]
	215 Move X23, [X31+40]
	216 Move X30, [X31+16]
	217 Move X25, [X31+24]
	218 And W0, W0, 1
	219 Add X31, X31, 80
	220 Return X0
	221 Call 0x1C17F20

Method: System.Boolean OpAuthenticate(System.String appId, System.String appVersion, Fusion.Photon.Realtime.AuthenticationValues authValues, System.String regionCode, System.Boolean getLobbyStatistics)

Disassembly:
	0x01E59398 LDRB W0, [X0 + 0x40]
	0x01E5939C RET
	0x01E593A0 AND W8, W1, 0x1
	0x01E593A4 STRB W8, [X0 + 0x40]
	0x01E593A8 RET
	0x01E593AC LDRB W0, [X0 + 0x41]
	0x01E593B0 RET
	0x01E593B4 AND W8, W1, 0x1
	0x01E593B8 STRB W8, [X0 + 0x41]
	0x01E593BC RET
	0x01E593C0 LDRB W0, [X0 + 0x42]
	0x01E593C4 RET
	0x01E593C8 AND W8, W1, 0x1
	0x01E593CC STRB W8, [X0 + 0x42]
	0x01E593D0 RET
	0x01E593D4 LDRB W0, [X0 + 0x43]
	0x01E593D8 RET
	0x01E593DC AND W8, W1, 0x1
	0x01E593E0 STRB W8, [X0 + 0x43]
	0x01E593E4 RET
	0x01E593E8 AND W8, W1, 0x1
	0x01E593EC STRB W8, [X0 + 0x44]
	0x01E593F0 RET
	0x01E593F4 STP X30, X21, [X31 - 0x20]!
	0x01E593F8 STP X20, X19, [X31 + 0x10]
	0x01E593FC ADRP X21, 0x2580000
	0x01E59400 ADRP X20, 0x22A3000
	0x01E59404 LDRB W8, [X21 + 0x60]
	0x01E59408 LDR X20, [X20 + 0x700]
	0x01E5940C MOV X19, X0
	0x01E59410 TBNZ X8, 0x0, 0x1E59428
	0x01E59414 ADRP X0, 0x22A3000
	0x01E59418 LDR X0, [X0 + 0x700]
	0x01E5941C BL 0x1C16CF4
	0x01E59420 MOVZ W8, 0x1
	0x01E59424 STRB W8, [X21 + 0x60]
	0x01E59428 LDR X0, [X20]
	0x01E5942C LDR W8, [X0 + 0xE0]
	0x01E59430 CBNZ W8, 0x1E5943C
	0x01E59434 BL 0x1C16DFC
	0x01E59438 LDR X0, [X20]
	0x01E5943C LDR X8, [X0 + 0xB8]
	0x01E59440 MOV X0, X19
	0x01E59444 MOV X1, X31
	0x01E59448 LDR X8, [X8]
	0x01E5944C STR X8, [X19 + 0x28]
	0x01E59450 LDP X20, X19, [X31 + 0x10]
	0x01E59454 LDP X30, X21, [X31], #0x20
	0x01E59458 B 0x33BDD8C
	0x01E5945C STR X30, [X31 - 0x20]!
	0x01E59460 STP X20, X19, [X31 + 0x10]
	0x01E59464 ADRP X19, 0x2580000
	0x01E59468 ADRP X20, 0x22A2000
	0x01E5946C LDRB W8, [X19 + 0x61]
	0x01E59470 LDR X20, [X20 + 0xCC0]
	0x01E59474 TBNZ X8, 0x0, 0x1E5948C
	0x01E59478 ADRP X0, 0x22A2000
	0x01E5947C LDR X0, [X0 + 0xCC0]
	0x01E59480 BL 0x1C16CF4
	0x01E59484 MOVZ W8, 0x1
	0x01E59488 STRB W8, [X19 + 0x61]
	0x01E5948C LDR X0, [X20]
	0x01E59490 BL 0x1C16F10
	0x01E59494 MOV X19, X0
	0x01E59498 BL 0x1E593F4
	0x01E5949C LDR X8, [X20]
	0x01E594A0 LDR X8, [X8 + 0xB8]
	0x01E594A4 STR X19, [X8]
	0x01E594A8 LDP X20, X19, [X31 + 0x10]
	0x01E594AC LDR X30, [X31], #0x20
	0x01E594B0 RET
	0x01E594B4 MOV X1, X31
	0x01E594B8 B 0x33BDD8C
	0x01E594BC STP X30, X21, [X31 - 0x20]!
	0x01E594C0 STP X20, X19, [X31 + 0x10]
	0x01E594C4 MOV X20, X1
	0x01E594C8 MOV X1, X31
	0x01E594CC MOV W19, W2
	0x01E594D0 MOV X21, X0
	0x01E594D4 BL 0x33BDD8C
	0x01E594D8 STR X20, [X21 + 0x10]
	0x01E594DC STRB W19, [X21 + 0x18]
	0x01E594E0 LDP X20, X19, [X31 + 0x10]
	0x01E594E4 LDP X30, X21, [X31], #0x20
	0x01E594E8 RET
	0x01E594EC STR X30, [X31 - 0x30]!
	0x01E594F0 STP X22, X21, [X31 + 0x10]
	0x01E594F4 STP X20, X19, [X31 + 0x20]
	0x01E594F8 ADRP X20, 0x2580000
	0x01E594FC ADRP X22, 0x22A3000
	0x01E59500 ADRP X21, 0x22A3000
	0x01E59504 LDRB W8, [X20 + 0x62]
	0x01E59508 LDR X22, [X22 + 0x708]
	0x01E5950C LDR X21, [X21 + 0x710]
	0x01E59510 MOV X19, X0
	0x01E59514 TBNZ X8, 0x0, 0x1E59538
	0x01E59518 ADRP X0, 0x22A3000
	0x01E5951C LDR X0, [X0 + 0x708]
	0x01E59520 BL 0x1C16CF4
	0x01E59524 ADRP X0, 0x22A3000
	0x01E59528 LDR X0, [X0 + 0x710]
	0x01E5952C BL 0x1C16CF4
	0x01E59530 MOVZ W8, 0x1
	0x01E59534 STRB W8, [X20 + 0x62]
	0x01E59538 LDRB W8, [X19 + 0x18]
	0x01E5953C LDR X0, [X22]
	0x01E59540 LDR X20, [X19 + 0x10]
	0x01E59544 ADD X1, X31, 0xC
	0x01E59548 STRB W8, [X31 + 0xC]
	0x01E5954C BL 0x1C16E04
	0x01E59550 LDR X8, [X21]
	0x01E59554 MOV X2, X0
	0x01E59558 MOV X1, X20
	0x01E5955C MOV X3, X31
	0x01E59560 MOV X0, X8
	0x01E59564 BL 0x3227BD4
	0x01E59568 LDP X20, X19, [X31 + 0x20]
	0x01E5956C LDP X22, X21, [X31 + 0x10]
	0x01E59570 LDR X30, [X31], #0x30
	0x01E59574 RET
	0x01E59578 STR X30, [X31 - 0x20]!
	0x01E5957C STP X20, X19, [X31 + 0x10]
	0x01E59580 ADRP X19, 0x2580000
	0x01E59584 ADRP X20, 0x22A3000
	0x01E59588 LDRB W8, [X19 + 0x63]
	0x01E5958C LDR X20, [X20 + 0x160]
	0x01E59590 TBNZ X8, 0x0, 0x1E595A8
	0x01E59594 ADRP X0, 0x22A3000
	0x01E59598 LDR X0, [X0 + 0x160]
	0x01E5959C BL 0x1C16CF4
	0x01E595A0 MOVZ W8, 0x1
	0x01E595A4 STRB W8, [X19 + 0x63]
	0x01E595A8 LDR X0, [X20]
	0x01E595AC BL 0x1C16F10
	0x01E595B0 MOV X1, X31
	0x01E595B4 MOV X19, X0
	0x01E595B8 BL 0x33BDD8C
	0x01E595BC LDR X8, [X20]
	0x01E595C0 LDR X8, [X8 + 0xB8]
	0x01E595C4 STR X19, [X8]
	0x01E595C8 LDP X20, X19, [X31 + 0x10]
	0x01E595CC LDR X30, [X31], #0x20
	0x01E595D0 RET
	0x01E595D4 SUB X31, X31, 0x40
	0x01E595D8 STR X30, [X31 + 0x10]
	0x01E595DC STP X22, X21, [X31 + 0x20]
	0x01E595E0 STP X20, X19, [X31 + 0x30]
	0x01E595E4 ADRP X20, 0x2580000
	0x01E595E8 ADRP X21, 0x229A000
	0x01E595EC LDRB W8, [X20 + 0x64]
	0x01E595F0 LDR X21, [X21 + 0x9D0]
	0x01E595F4 MOV X19, X0
	0x01E595F8 TBNZ X8, 0x0, 0x1E59634
	0x01E595FC ADRP X0, 0x229A000
	0x01E59600 LDR X0, [X0 + 0x758]
	0x01E59604 BL 0x1C16CF4
	0x01E59608 ADRP X0, 0x22A3000
	0x01E5960C LDR X0, [X0 + 0x708]
	0x01E59610 BL 0x1C16CF4
	0x01E59614 ADRP X0, 0x229A000
	0x01E59618 LDR X0, [X0 + 0x9D0]
	0x01E5961C BL 0x1C16CF4
	0x01E59620 ADRP X0, 0x22A3000
	0x01E59624 LDR X0, [X0 + 0x718]
	0x01E59628 BL 0x1C16CF4
	0x01E5962C MOVZ W8, 0x1
	0x01E59630 STRB W8, [X20 + 0x64]
	0x01E59634 LDR X0, [X21]
	0x01E59638 MOVZ W1, 0x4
	0x01E5963C BL 0x1C16D6C
	0x01E59640 CBZ X0, 0x1E5977C
	0x01E59644 LDR X21, [X19 + 0x10]
	0x01E59648 MOV X20, X0
	0x01E5964C CBZ X21, 0x1E59664
	0x01E59650 LDR X8, [X20]
	0x01E59654 MOV X0, X21
	0x01E59658 LDR X1, [X8 + 0x40]
	0x01E5965C BL 0x1C16E00
	0x01E59660 CBZ X0, 0x1E59770
	0x01E59664 LDR W8, [X20 + 0x18]
	0x01E59668 CBZ W8, 0x1E5976C
	0x01E5966C ADRP X8, 0x22A3000
	0x01E59670 LDR X8, [X8 + 0x708]
	0x01E59674 STR X21, [X20 + 0x20]
	0x01E59678 LDRB W9, [X19 + 0x18]
	0x01E5967C ADD X1, X31, 0x1C
	0x01E59680 LDR X0, [X8]
	0x01E59684 STRB W9, [X31 + 0x1C]
	0x01E59688 BL 0x1C16E04
	0x01E5968C MOV X21, X0
	0x01E59690 CBZ X0, 0x1E596A8
	0x01E59694 LDR X8, [X20]
	0x01E59698 MOV X0, X21
	0x01E5969C LDR X1, [X8 + 0x40]
	0x01E596A0 BL 0x1C16E00
	0x01E596A4 CBZ X0, 0x1E59770
	0x01E596A8 LDR W8, [X20 + 0x18]
	0x01E596AC CMP W8, 0x1
	0x01E596B0 B.LS 0x1E5976C
	0x01E596B4 ADRP X22, 0x229A000
	0x01E596B8 LDR X22, [X22 + 0x758]
	0x01E596BC STR X21, [X20 + 0x28]
	0x01E596C0 LDR W8, [X19 + 0x20]
	0x01E596C4 ADD X1, X31, 0x18
	0x01E596C8 LDR X0, [X22]
	0x01E596CC STR W8, [X31 + 0x18]
	0x01E596D0 BL 0x1C16E04
	0x01E596D4 MOV X21, X0
	0x01E596D8 CBZ X0, 0x1E596F0
	0x01E596DC LDR X8, [X20]
	0x01E596E0 MOV X0, X21
	0x01E596E4 LDR X1, [X8 + 0x40]
	0x01E596E8 BL 0x1C16E00

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+16], X30
	003 Move [X31+32], X26
	004 Move [X31+40], X25
	005 Move [X31+48], X24
	006 Move [X31+56], X23
	007 Move [X31+64], X22
	008 Move [X31+72], X21
	009 Move [X31+80], X20
	010 Move [X31+88], X19
	011 Move X21, 0x2581000
	012 Move W8, [X21+88]
	013 Move W25, W5
	014 Move X22, X4
	015 Move X20, X3
	016 Move X24, X2
	017 Move X23, X1
	018 Move X19, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {49}
	023 Move X0, 0x229B000
	024 Move X0, [X0+2904]
	025 Call 0x1C17CF4
	026 Move X0, 0x229C000
	027 Move X0, [X0+2520]
	028 Call 0x1C17CF4
	029 Move X0, 0x22A4000
	030 Move X0, [X0+1344]
	031 Call 0x1C17CF4
	032 Move X0, 0x22A4000
	033 Move X0, [X0+1560]
	034 Call 0x1C17CF4
	035 Move X0, 0x22A4000
	036 Move X0, [X0+696]
	037 Call 0x1C17CF4
	038 Move X0, 0x22A3000
	039 Move X0, [X0+3016]
	040 Call 0x1C17CF4
	041 Move X0, 0x22A4000
	042 Move X0, [X0+1352]
	043 Call 0x1C17CF4
	044 Move X0, 0x22A4000
	045 Move X0, [X0+1688]
	046 Call 0x1C17CF4
	047 Move W8, 1
	048 Move [X21+88], W8
	049 Move [X31+24], X31
	050 Move W8, [X19+64]
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Move X21, [X19+72]
	053 Compare X21, 0
	054 JumpIfEqual {242}
	055 Move X9, 0x22A3000
	056 Move X8, [X21]
	057 Move X9, [X9+3016]
	058 Move X10, 0x22A4000
	059 Move X1, [X9]
	060 Move X10, [X10+1688]
	061 NotImplemented "Instruction LDRH not yet implemented."
	062 Move X26, [X10]
	063 Compare X9, 0
	064 JumpIfEqual {71}
	065 Move X10, [X8+176]
	066 Add X10, X10, 8
	067 NotImplemented "Instruction LDUR not yet implemented."
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Subtract X9, X9, 1
	070 Add X10, X10, 16
	071 Move X0, X21
	072 Move W2, W31
	073 Call 0x1C5D788
	074 NotImplemented "Instruction LDRSW not yet implemented."
	075 Add X8, X8, X9
	076 Add X0, X8, 312
	077 Move X8, [X0]
	078 Move X3, [X0+8]
	079 Move W1, 3
	080 Move X0, X21
	081 Move X2, X26
	082 NotImplemented "Instruction BLR not yet implemented."
	083 Move X8, 0x22A4000
	084 Move X8, [X8+696]
	085 Move X21, 0x22A4000
	086 Move X26, 0x22A4000
	087 Move X0, [X8]
	088 Move X21, [X21+1344]
	089 Move X26, [X26+1560]
	090 Call 0x1C17F10
	091 Move X1, [X21]
	092 Move X21, X0
	093 Call Dictionary`2<Byte, Object>..ctor, X0
	094 Move TEMP, X25
	095 And TEMP, TEMP, 1
	096 Compare TEMP, 1
	097 JumpIfNotEqual {112}
	098 Move X8, 0x229B000
	099 Move X8, [X8+2904]
	100 Add X1, X31, 12
	101 Move X0, [X8]
	102 Move W8, 1
	103 Move [X31+12], W8
	104 Call 0x1C17E04
	105 Compare X21, 0
	106 JumpIfEqual {242}
	107 Move X3, [X26]
	108 Move X2, X0
	109 Move W1, 211
	110 Move X0, X21
	111 Call Dictionary`2<Byte, Object>.set_Item, X0, X1, X2
	112 Move X25, 0x22A4000
	113 Move X25, [X25+1352]
	114 Compare X20, 0
	115 JumpIfEqual {140}
	116 Move X2, [X20+40]
	117 Compare X2, 0
	118 JumpIfEqual {140}
	119 Compare X21, 0
	120 JumpIfEqual {242}
	121 Move X3, [X26]
	122 Move W1, 221
	123 Move X0, X21
	124 Call Dictionary`2<Byte, Object>.set_Item, X0, X1, X2
	125 Move X0, [X25]
	126 Move W8, [X0+224]
	127 Compare W8, 0
	128 JumpIfNotEqual {131}
	129 Call 0x1C17DFC
	130 Move X0, [X25]
	131 Move X8, [X0+184]
	132 Move X9, [X19]
	133 Move W1, 230
	134 Move X0, X19
	135 Move X3, [X8]
	136 Move X8, [X9+552]
	137 Move X4, [X9+560]
	138 Move X2, X21
	139 NotImplemented "Instruction BLR not yet implemented."
	140 Compare X21, 0
	141 JumpIfEqual {242}
	142 Move X3, [X26]
	143 Move W1, 220
	144 Move X0, X21
	145 Move X2, X24
	146 Call Dictionary`2<Byte, Object>.set_Item, X0, X1, X2
	147 Move X3, [X26]
	148 Move W1, 224
	149 Move X0, X21
	150 Move X2, X23
	151 Call Dictionary`2<Byte, Object>.set_Item, X0, X1, X2
	152 Move X0, X22
	153 Move X1, X31
	154 Call String.IsNullOrEmpty, X0
	155 Move TEMP, X0
	156 And TEMP, TEMP, 1
	157 Compare TEMP, 1
	158 JumpIfEqual {164}
	159 Move X3, [X26]
	160 Move W1, 210
	161 Move X0, X21
	162 Move X2, X22
	163 Call Dictionary`2<Byte, Object>.set_Item, X0, X1, X2
	164 Compare X20, 0
	165 JumpIfEqual {210}
	166 Move X0, [X20+48]
	167 Move X1, X31
	168 Call String.IsNullOrEmpty, X0
	169 Move TEMP, X0
	170 And TEMP, TEMP, 1
	171 Compare TEMP, 1
	172 JumpIfEqual {178}
	173 Move X2, [X20+48]
	174 Move X3, [X26]
	175 Move W1, 225
	176 Move X0, X21
	177 Call Dictionary`2<Byte, Object>.set_Item, X0, X1, X2
	178 Move W8, [X20+16]
	179 NotImplemented "Instruction CMP not yet implemented."
	180 Move X9, 0x229C000
	181 Move X9, [X9+2520]
	182 Add X1, X31, 8
	183 Move [X31+8], W8
	184 Move X0, [X9]
	185 Call 0x1C17E04
	186 Move X3, [X26]
	187 Move X2, X0
	188 Move W1, 217
	189 Move X0, X21
	190 Call Dictionary`2<Byte, Object>.set_Item, X0, X1, X2
	191 Move X0, [X20+24]
	192 Move X1, X31
	193 Call String.IsNullOrEmpty, X0
	194 Move TEMP, X0
	195 And TEMP, TEMP, 1
	196 Compare TEMP, 1
	197 JumpIfEqual {203}
	198 Move X2, [X20+24]
	199 Move X3, [X26]
	200 Move W1, 216
	201 Move X0, X21
	202 Call Dictionary`2<Byte, Object>.set_Item, X0, X1, X2
	203 Move X2, [X20+32]
	204 Compare X2, 0
	205 JumpIfEqual {210}
	206 Move X3, [X26]
	207 Move W1, 214
	208 Move X0, X21
	209 Call Dictionary`2<Byte, Object>.set_Item, X0, X1, X2
	210 Move X0, [X25]
	211 Move [X31+24], X31
	212 Move W8, [X0+224]
	213 Compare W8, 0
	214 JumpIfNotEqual {216}
	215 Call 0x1C17DFC
	216 Add X0, X31, 24
	217 Move W1, 1
	218 Move X2, X31
	219 Move W20, 1
	220 Call SendOptions.set_Reliability, X0, X1
	221 Move [X31+28], W20
	222 Move X8, [X19]
	223 Move X3, [X31+24]
	224 Move W1, 230
	225 Move X0, X19
	226 Move X9, [X8+552]
	227 Move X4, [X8+560]
	228 Move X2, X21
	229 NotImplemented "Instruction BLR not yet implemented."
	230 Move X20, [X31+80]
	231 Move X19, [X31+88]
	232 Move X22, [X31+64]
	233 Move X21, [X31+72]
	234 Move X24, [X31+48]
	235 Move X23, [X31+56]
	236 Move X26, [X31+32]
	237 Move X25, [X31+40]
	238 Move X30, [X31+16]
	239 And W0, W0, 1
	240 Add X31, X31, 96
	241 Return X0
	242 Call 0x1C17F20

Method: System.Boolean OpAuthenticateOnce(System.String appId, System.String appVersion, Fusion.Photon.Realtime.AuthenticationValues authValues, System.String regionCode, Fusion.Photon.Realtime.EncryptionMode encryptionMode, ExitGames.Client.Photon.ConnectionProtocol expectedProtocol)

Disassembly:
	0x01E596F4 CMP W8, 0x2
	0x01E596F8 B.LS 0x1E5976C
	0x01E596FC STR X21, [X20 + 0x30]
	0x01E59700 LDR W8, [X19 + 0x1C]
	0x01E59704 LDR X0, [X22]
	0x01E59708 ADD X1, X31, 0xC
	0x01E5970C STR W8, [X31 + 0xC]
	0x01E59710 BL 0x1C16E04
	0x01E59714 MOV X19, X0
	0x01E59718 CBZ X0, 0x1E59730
	0x01E5971C LDR X8, [X20]
	0x01E59720 MOV X0, X19
	0x01E59724 LDR X1, [X8 + 0x40]
	0x01E59728 BL 0x1C16E00
	0x01E5972C CBZ X0, 0x1E59770
	0x01E59730 LDR W8, [X20 + 0x18]
	0x01E59734 CMP W8, 0x3
	0x01E59738 B.LS 0x1E5976C
	0x01E5973C ADRP X8, 0x22A3000
	0x01E59740 LDR X8, [X8 + 0x718]
	0x01E59744 STR X19, [X20 + 0x38]
	0x01E59748 MOV X1, X20
	0x01E5974C MOV X2, X31
	0x01E59750 LDR X0, [X8]
	0x01E59754 BL 0x3227C5C
	0x01E59758 LDP X20, X19, [X31 + 0x30]
	0x01E5975C LDP X22, X21, [X31 + 0x20]
	0x01E59760 LDR X30, [X31 + 0x10]
	0x01E59764 ADD X31, X31, 0x40
	0x01E59768 RET
	0x01E5976C BL 0x1C16F28
	0x01E59770 BL 0x1C16F44
	0x01E59774 MOV X1, X31
	0x01E59778 BL 0x1C16DEC
	0x01E5977C BL 0x1C16F20
	0x01E59780 STP X30, X21, [X31 - 0x20]!
	0x01E59784 STP X20, X19, [X31 + 0x10]
	0x01E59788 ADRP X20, 0x2580000
	0x01E5978C ADRP X21, 0x22A3000
	0x01E59790 LDRB W8, [X20 + 0x65]
	0x01E59794 LDR X21, [X21 + 0x160]
	0x01E59798 MOV X19, X0
	0x01E5979C TBNZ X8, 0x0, 0x1E597B4
	0x01E597A0 ADRP X0, 0x22A3000
	0x01E597A4 LDR X0, [X0 + 0x160]
	0x01E597A8 BL 0x1C16CF4
	0x01E597AC MOVZ W8, 0x1
	0x01E597B0 STRB W8, [X20 + 0x65]
	0x01E597B4 LDR X0, [X21]
	0x01E597B8 LDR W8, [X0 + 0xE0]
	0x01E597BC CBNZ W8, 0x1E597C4
	0x01E597C0 BL 0x1C16DFC
	0x01E597C4 MOV X0, X19
	0x01E597C8 LDP X20, X19, [X31 + 0x10]
	0x01E597CC MOV X1, X31
	0x01E597D0 LDP X30, X21, [X31], #0x20
	0x01E597D4 B 0x33BDD8C
	0x01E597D8 STRB W1, [X0 + 0x10]
	0x01E597DC RET
	0x01E597E0 LDR X0, [X0 + 0x18]
	0x01E597E4 RET
	0x01E597E8 STR X1, [X0 + 0x18]
	0x01E597EC RET
	0x01E597F0 LDR X0, [X0 + 0x20]
	0x01E597F4 RET
	0x01E597F8 STR X1, [X0 + 0x20]
	0x01E597FC RET
	0x01E59800 LDR X0, [X0 + 0x28]
	0x01E59804 RET
	0x01E59808 STR X1, [X0 + 0x28]
	0x01E5980C RET
	0x01E59810 LDR X0, [X0 + 0x30]
	0x01E59814 RET
	0x01E59818 STR X1, [X0 + 0x30]
	0x01E5981C RET
	0x01E59820 MOVZ W8, 0xFF
	0x01E59824 MOV X1, X31
	0x01E59828 STRB W8, [X0 + 0x10]
	0x01E5982C B 0x33BDD8C
	0x01E59830 STR X30, [X31 - 0x20]!
	0x01E59834 STP X20, X19, [X31 + 0x10]
	0x01E59838 MOV X19, X1
	0x01E5983C MOVZ W8, 0xFF
	0x01E59840 MOV X1, X31
	0x01E59844 MOV X20, X0
	0x01E59848 STRB W8, [X0 + 0x10]
	0x01E5984C BL 0x33BDD8C
	0x01E59850 STR X19, [X20 + 0x30]
	0x01E59854 LDP X20, X19, [X31 + 0x10]
	0x01E59858 LDR X30, [X31], #0x20
	0x01E5985C RET
	0x01E59860 STR X30, [X31 - 0x20]!
	0x01E59864 STP X20, X19, [X31 + 0x10]
	0x01E59868 MOV X20, X1
	0x01E5986C MOV X19, X0
	0x01E59870 MOV X0, X1
	0x01E59874 MOV X1, X31
	0x01E59878 BL 0x32277A8
	0x01E5987C CBZ X19, 0x1E59898
	0x01E59880 ANDS W31, W0, 0x1
	0x01E59884 CSEL X8, X31, X20, NE
	0x01E59888 STR X8, [X19 + 0x20]
	0x01E5988C LDP X20, X19, [X31 + 0x10]
	0x01E59890 LDR X30, [X31], #0x20
	0x01E59894 RET
	0x01E59898 BL 0x1C16F20
	0x01E5989C STR X1, [X0 + 0x20]
	0x01E598A0 RET
	0x01E598A4 STR X1, [X0 + 0x20]
	0x01E598A8 RET
	0x01E598AC STP X30, X25, [X31 - 0x40]!
	0x01E598B0 STP X24, X23, [X31 + 0x10]
	0x01E598B4 STP X22, X21, [X31 + 0x20]
	0x01E598B8 STP X20, X19, [X31 + 0x30]
	0x01E598BC ADRP X25, 0x2580000
	0x01E598C0 ADRP X21, 0x229A000
	0x01E598C4 ADRP X23, 0x22A3000
	0x01E598C8 ADRP X24, 0x229A000
	0x01E598CC LDRB W8, [X25 + 0x66]
	0x01E598D0 LDR X21, [X21 + 0x988]
	0x01E598D4 LDR X23, [X23 + 0x720]
	0x01E598D8 LDR X24, [X24 + 0x9D0]
	0x01E598DC MOV X20, X2
	0x01E598E0 MOV X22, X1
	0x01E598E4 MOV X19, X0
	0x01E598E8 TBNZ X8, 0x0, 0x1E59930
	0x01E598EC ADRP X0, 0x229A000
	0x01E598F0 LDR X0, [X0 + 0x9D0]
	0x01E598F4 BL 0x1C16CF4
	0x01E598F8 ADRP X0, 0x229C000
	0x01E598FC LDR X0, [X0 + 0xA28]
	0x01E59900 BL 0x1C16CF4
	0x01E59904 ADRP X0, 0x22A3000
	0x01E59908 LDR X0, [X0 + 0x728]
	0x01E5990C BL 0x1C16CF4
	0x01E59910 ADRP X0, 0x22A3000
	0x01E59914 LDR X0, [X0 + 0x720]
	0x01E59918 BL 0x1C16CF4
	0x01E5991C ADRP X0, 0x229A000
	0x01E59920 LDR X0, [X0 + 0x988]
	0x01E59924 BL 0x1C16CF4
	0x01E59928 MOVZ W8, 0x1
	0x01E5992C STRB W8, [X25 + 0x66]
	0x01E59930 LDR X0, [X19 + 0x18]
	0x01E59934 MOV X1, X31
	0x01E59938 BL 0x32277A8
	0x01E5993C ANDS W31, W0, 0x1
	0x01E59940 CSEL X8, X21, X23, NE
	0x01E59944 LDR X0, [X24]
	0x01E59948 LDR X23, [X8]
	0x01E5994C MOVZ W1, 0x4
	0x01E59950 BL 0x1C16D6C
	0x01E59954 CBZ X0, 0x1E59A74
	0x01E59958 LDR X24, [X19 + 0x18]
	0x01E5995C MOV X21, X0
	0x01E59960 CBZ X24, 0x1E59978
	0x01E59964 LDR X8, [X21]
	0x01E59968 MOV X0, X24
	0x01E5996C LDR X1, [X8 + 0x40]
	0x01E59970 BL 0x1C16E00
	0x01E59974 CBZ X0, 0x1E59A68
	0x01E59978 LDR W8, [X21 + 0x18]
	0x01E5997C CBZ W8, 0x1E59A64
	0x01E59980 STR X24, [X21 + 0x20]
	0x01E59984 CBZ X23, 0x1E599A0
	0x01E59988 LDR X8, [X21]
	0x01E5998C MOV X0, X23
	0x01E59990 LDR X1, [X8 + 0x40]
	0x01E59994 BL 0x1C16E00
	0x01E59998 CBZ X0, 0x1E59A68
	0x01E5999C LDR W8, [X21 + 0x18]
	0x01E599A0 CMP W8, 0x1
	0x01E599A4 B.LS 0x1E59A64
	0x01E599A8 ADRP X8, 0x229C000
	0x01E599AC LDR X8, [X8 + 0xA28]
	0x01E599B0 STR X23, [X21 + 0x28]
	0x01E599B4 LDR X0, [X8]
	0x01E599B8 LDR W8, [X0 + 0xE0]
	0x01E599BC CBNZ W8, 0x1E599C4
	0x01E599C0 BL 0x1C16DFC
	0x01E599C4 MOV X0, X22
	0x01E599C8 MOV X1, X31
	0x01E599CC BL 0x3624D20
	0x01E599D0 MOV X22, X0
	0x01E599D4 CBZ X0, 0x1E599EC
	0x01E599D8 LDR X8, [X21]
	0x01E599DC MOV X0, X22
	0x01E599E0 LDR X1, [X8 + 0x40]
	0x01E599E4 BL 0x1C16E00
	0x01E599E8 CBZ X0, 0x1E59A68
	0x01E599EC LDR W8, [X21 + 0x18]
	0x01E599F0 CMP W8, 0x2
	0x01E599F4 B.LS 0x1E59A64
	0x01E599F8 MOV X0, X20
	0x01E599FC MOV X1, X31
	0x01E59A00 STR X22, [X21 + 0x30]
	0x01E59A04 BL 0x3624D20
	0x01E59A08 MOV X20, X0
	0x01E59A0C CBZ X0, 0x1E59A24
	0x01E59A10 LDR X8, [X21]
	0x01E59A14 MOV X0, X20
	0x01E59A18 LDR X1, [X8 + 0x40]
	0x01E59A1C BL 0x1C16E00
	0x01E59A20 CBZ X0, 0x1E59A68
	0x01E59A24 LDR W8, [X21 + 0x18]
	0x01E59A28 CMP W8, 0x3
	0x01E59A2C B.LS 0x1E59A64
	0x01E59A30 ADRP X8, 0x22A3000
	0x01E59A34 LDR X8, [X8 + 0x728]
	0x01E59A38 STR X20, [X21 + 0x38]
	0x01E59A3C MOV X1, X21
	0x01E59A40 MOV X2, X31
	0x01E59A44 LDR X0, [X8]
	0x01E59A48 BL 0x3227C5C
	0x01E59A4C STR X0, [X19 + 0x18]
	0x01E59A50 LDP X20, X19, [X31 + 0x30]
	0x01E59A54 LDP X22, X21, [X31 + 0x20]
	0x01E59A58 LDP X24, X23, [X31 + 0x10]
	0x01E59A5C LDP X30, X25, [X31], #0x40
	0x01E59A60 RET
	0x01E59A64 BL 0x1C16F28
	0x01E59A68 BL 0x1C16F44
	0x01E59A6C MOV X1, X31
	0x01E59A70 BL 0x1C16DEC
	0x01E59A74 BL 0x1C16F20
	0x01E59A78 SUB X31, X31, 0x40
	0x01E59A7C STP X30, X23, [X31 + 0x10]
	0x01E59A80 STP X22, X21, [X31 + 0x20]
	0x01E59A84 STP X20, X19, [X31 + 0x30]
	0x01E59A88 ADRP X20, 0x2580000
	0x01E59A8C ADRP X22, 0x229A000
	0x01E59A90 ADRP X21, 0x22A3000
	0x01E59A94 LDRB W8, [X20 + 0x67]
	0x01E59A98 LDR X22, [X22 + 0x9D0]
	0x01E59A9C LDR X21, [X21 + 0x730]
	0x01E59AA0 MOV X19, X0
	0x01E59AA4 TBNZ X8, 0x0, 0x1E59B04
	0x01E59AA8 ADRP X0, 0x22A3000
	0x01E59AAC LDR X0, [X0 + 0x730]
	0x01E59AB0 BL 0x1C16CF4
	0x01E59AB4 ADRP X0, 0x229A000
	0x01E59AB8 LDR X0, [X0 + 0x9D0]
	0x01E59ABC BL 0x1C16CF4
	0x01E59AC0 ADRP X0, 0x22A3000
	0x01E59AC4 LDR X0, [X0 + 0x738]
	0x01E59AC8 BL 0x1C16CF4
	0x01E59ACC ADRP X0, 0x22A3000
	0x01E59AD0 LDR X0, [X0 + 0x740]
	0x01E59AD4 BL 0x1C16CF4
	0x01E59AD8 ADRP X0, 0x22A3000
	0x01E59ADC LDR X0, [X0 + 0x748]
	0x01E59AE0 BL 0x1C16CF4
	0x01E59AE4 ADRP X0, 0x22A3000
	0x01E59AE8 LDR X0, [X0 + 0x750]
	0x01E59AEC BL 0x1C16CF4
	0x01E59AF0 ADRP X0, 0x229A000
	0x01E59AF4 LDR X0, [X0 + 0x988]
	0x01E59AF8 BL 0x1C16CF4
	0x01E59AFC MOVZ W8, 0x1
	0x01E59B00 STRB W8, [X20 + 0x67]
	0x01E59B04 LDR X0, [X22]
	0x01E59B08 MOVZ W1, 0x5
	0x01E59B0C BL 0x1C16D6C
	0x01E59B10 MOV X20, X0
	0x01E59B14 LDRB W8, [X19 + 0x10]
	0x01E59B18 LDR X0, [X21]
	0x01E59B1C ADD X1, X31, 0xC
	0x01E59B20 STRB W8, [X31 + 0xC]
	0x01E59B24 BL 0x1C16E04
	0x01E59B28 CBZ X20, 0x1E59C90
	0x01E59B2C MOV X21, X0
	0x01E59B30 CBZ X0, 0x1E59B48
	0x01E59B34 LDR X8, [X20]
	0x01E59B38 MOV X0, X21
	0x01E59B3C LDR X1, [X8 + 0x40]
	0x01E59B40 BL 0x1C16E00
	0x01E59B44 CBZ X0, 0x1E59C84
	0x01E59B48 LDR W8, [X20 + 0x18]
	0x01E59B4C CBZ W8, 0x1E59C80
	0x01E59B50 STR X21, [X20 + 0x20]
	0x01E59B54 LDR X21, [X19 + 0x30]
	0x01E59B58 CBZ X21, 0x1E59B74
	0x01E59B5C LDR X8, [X20]
	0x01E59B60 MOV X0, X21
	0x01E59B64 LDR X1, [X8 + 0x40]
	0x01E59B68 BL 0x1C16E00
	0x01E59B6C CBZ X0, 0x1E59C84
	0x01E59B70 LDR W8, [X20 + 0x18]
	0x01E59B74 CMP W8, 0x1
	0x01E59B78 B.LS 0x1E59C80
	0x01E59B7C STR X21, [X20 + 0x28]
	0x01E59B80 LDR X0, [X19 + 0x18]
	0x01E59B84 ADRP X21, 0x22A3000
	0x01E59B88 ADRP X22, 0x22A3000
	0x01E59B8C ADRP X23, 0x229A000
	0x01E59B90 LDR X21, [X21 + 0x750]
	0x01E59B94 LDR X22, [X22 + 0x740]
	0x01E59B98 LDR X23, [X23 + 0x988]
	0x01E59B9C MOV X1, X31
	0x01E59BA0 BL 0x32277A8
	0x01E59BA4 ANDS W31, W0, 0x1
	0x01E59BA8 CSEL X8, X22, X23, NE
	0x01E59BAC LDR X22, [X8]
	0x01E59BB0 LDR X21, [X21]
	0x01E59BB4 CBZ X22, 0x1E59BCC
	0x01E59BB8 LDR X8, [X20]
	0x01E59BBC MOV X0, X22
	0x01E59BC0 LDR X1, [X8 + 0x40]
	0x01E59BC4 BL 0x1C16E00
	0x01E59BC8 CBZ X0, 0x1E59C84

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+48], X29
	003 Move [X31+56], X30
	004 Move [X31+64], X28
	005 Move [X31+72], X27
	006 Move [X31+80], X26
	007 Move [X31+88], X25
	008 Move [X31+96], X24
	009 Move [X31+104], X23
	010 Move [X31+112], X22
	011 Move [X31+120], X21
	012 Move [X31+128], X20
	013 Move [X31+136], X19
	014 Move X26, 0x2581000
	015 Move W8, [X26+89]
	016 Move W25, W6
	017 Move W24, W5
	018 Move X21, X4
	019 Move X20, X3
	020 Move X23, X2
	021 Move X22, X1
	022 Move X19, X0
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {62}
	027 Move X0, 0x229C000
	028 Move X0, [X0+2520]
	029 Call 0x1C17CF4
	030 Move X0, 0x22A4000
	031 Move X0, [X0+1344]
	032 Call 0x1C17CF4
	033 Move X0, 0x22A4000
	034 Move X0, [X0+1560]
	035 Call 0x1C17CF4
	036 Move X0, 0x22A4000
	037 Move X0, [X0+696]
	038 Call 0x1C17CF4
	039 Move X0, 0x22A4000
	040 Move X0, [X0+1696]
	041 Call 0x1C17CF4
	042 Move X0, 0x22A3000
	043 Move X0, [X0+3016]
	044 Call 0x1C17CF4
	045 Move X0, 0x22A4000
	046 Move X0, [X0+1352]
	047 Call 0x1C17CF4
	048 Move X0, 0x229B000
	049 Move X0, [X0+2760]
	050 Call 0x1C17CF4
	051 Move X0, 0x22A4000
	052 Move X0, [X0+1704]
	053 Call 0x1C17CF4
	054 Move X0, 0x22A4000
	055 Move X0, [X0+1712]
	056 Call 0x1C17CF4
	057 Move X0, 0x22A4000
	058 Move X0, [X0+1720]
	059 Call 0x1C17CF4
	060 Move W8, 1
	061 Move [X26+89], W8
	062 Move [X31+40], X31
	063 Move W8, [X19+64]
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Move X8, 0x229B000
	066 Move X8, [X8+2760]
	067 Move X26, [X19+72]
	068 Move W1, 6
	069 Move X0, [X8]
	070 Call 0x1C17D6C
	071 Compare X0, 0
	072 JumpIfEqual {320}
	073 Move X8, [X0+24]
	074 Move X27, X0
	075 Compare W8, 0
	076 JumpIfEqual {319}
	077 Move X9, 0x22A4000
	078 Move X9, [X9+1720]
	079 Move X9, [X9]
	080 Move [X27+32], X9
	081 Compare X20, 0
	082 JumpIfEqual {89}
	083 Move X8, [X20]
	084 Move X0, X20
	085 Move X9, [X8+360]
	086 Move X1, [X8+368]
	087 NotImplemented "Instruction BLR not yet implemented."
	088 Move X8, [X27+24]
	089 Move X0, X31
	090 NotImplemented "Instruction CMP not yet implemented."
	091 NotImplemented "Instruction CMP not yet implemented."
	092 Move [X27+40], X0
	093 Move X9, 0x22A4000
	094 Move X9, [X9+1712]
	095 NotImplemented "Instruction CMP not yet implemented."
	096 Move X9, [X9]
	097 Move [X27+48], X9
	098 NotImplemented "Instruction CMP not yet implemented."
	099 Move [X27+56], X21
	100 Move X8, 0x22A4000
	101 Move X8, [X8+1704]
	102 Move X9, 0x22A4000
	103 Add X0, X31, 16
	104 Move X1, X31
	105 Move X8, [X8]
	106 Move X9, [X9+1696]
	107 Move [X27+64], X8
	108 Move X8, [X9]
	109 Move TEMP, 0
	110 Not TEMP
	111 Move X9, TEMP
	112 Move [X31+32], W24
	113 Move [X31+16], X8
	114 Move [X31+24], X9
	115 Call Enum.ToString, X0
	116 Move W8, [X27+24]
	117 NotImplemented "Instruction CMP not yet implemented."
	118 Move [X27+72], X0
	119 Move X0, X27
	120 Move X1, X31
	121 Call String.Concat, X0
	122 Compare X26, 0
	123 JumpIfEqual {320}
	124 Move X10, 0x22A3000
	125 Move X8, [X26]
	126 Move X10, [X10+3016]
	127 Move X27, X0
	128 NotImplemented "Instruction LDRH not yet implemented."
	129 Move X1, [X10]
	130 Compare X9, 0
	131 JumpIfEqual {138}
	132 Move X10, [X8+176]
	133 Add X10, X10, 8
	134 NotImplemented "Instruction LDUR not yet implemented."
	135 NotImplemented "Instruction CMP not yet implemented."
	136 Subtract X9, X9, 1
	137 Add X10, X10, 16
	138 Move X0, X26
	139 Move W2, W31
	140 Call 0x1C5D788
	141 NotImplemented "Instruction LDRSW not yet implemented."
	142 Add X8, X8, X9
	143 Add X0, X8, 312
	144 Move X8, [X0]
	145 Move X3, [X0+8]
	146 Move W1, 3
	147 Move X0, X26
	148 Move X2, X27
	149 NotImplemented "Instruction BLR not yet implemented."
	150 Move X8, 0x22A4000
	151 Move X8, [X8+696]
	152 Move X26, 0x22A4000
	153 Move X28, 0x22A4000
	154 Move X27, 0x22A4000
	155 Move X0, [X8]
	156 Move X26, [X26+1344]
	157 Move X28, [X28+1560]
	158 Move X27, [X27+1352]
	159 Call 0x1C17F10
	160 Move X1, [X26]
	161 Move X26, X0
	162 Call Dictionary`2<Byte, Object>..ctor, X0
	163 Compare X20, 0
	164 JumpIfEqual {189}
	165 Move X2, [X20+40]
	166 Compare X2, 0
	167 JumpIfEqual {189}
	168 Compare X26, 0
	169 JumpIfEqual {320}
	170 Move X3, [X28]
	171 Move W1, 221
	172 Move X0, X26
	173 Call Dictionary`2<Byte, Object>.set_Item, X0, X1, X2
	174 Move X0, [X27]
	175 Move W8, [X0+224]
	176 Compare W8, 0
	177 JumpIfNotEqual {180}
	178 Call 0x1C17DFC
	179 Move X0, [X27]
	180 Move X8, [X0+184]
	181 Move X9, [X19]
	182 Move W1, 231
	183 Move X0, X19
	184 Move X3, [X8]
	185 Move X8, [X9+552]
	186 Move X4, [X9+560]
	187 Move X2, X26
	188 NotImplemented "Instruction BLR not yet implemented."
	189 NotImplemented "Instruction CMP not yet implemented."
	190 And W31, W25, 255
	191 Move X29, 0x229C000
	192 Move X29, [X29+2520]
	193 Add X1, X31, 16
	194 Move [X31+16], W25
	195 Move X0, [X29]
	196 Call 0x1C17E04
	197 Compare X26, 0
	198 JumpIfEqual {320}
	199 Move X3, [X28]
	200 Move X2, X0
	201 Move W1, 195
	202 Move X0, X26
	203 Call Dictionary`2<Byte, Object>.set_Item, X0, X1, X2
	204 Move X0, [X29]
	205 Add X1, X31, 12
	206 Move [X31+12], W24
	207 Call 0x1C17E04
	208 Move X3, [X28]
	209 Move X2, X0
	210 Move W1, 193
	211 Move X0, X26
	212 Call Dictionary`2<Byte, Object>.set_Item, X0, X1, X2
	213 Move X3, [X28]
	214 Move W1, 220
	215 Move X0, X26
	216 Move X2, X23
	217 Call Dictionary`2<Byte, Object>.set_Item, X0, X1, X2
	218 Move X3, [X28]
	219 Move W1, 224
	220 Move X0, X26
	221 Move X2, X22
	222 Call Dictionary`2<Byte, Object>.set_Item, X0, X1, X2
	223 Move X0, X21
	224 Move X1, X31
	225 Call String.IsNullOrEmpty, X0
	226 Move TEMP, X0
	227 And TEMP, TEMP, 1
	228 Compare TEMP, 1
	229 JumpIfEqual {235}
	230 Move X3, [X28]
	231 Move W1, 210
	232 Move X0, X26
	233 Move X2, X21
	234 Call Dictionary`2<Byte, Object>.set_Item, X0, X1, X2
	235 Compare X20, 0
	236 JumpIfEqual {284}
	237 Move X0, [X20+48]
	238 Move X1, X31
	239 Call String.IsNullOrEmpty, X0
	240 Move TEMP, X0
	241 And TEMP, TEMP, 1
	242 Compare TEMP, 1
	243 JumpIfEqual {249}
	244 Move X2, [X20+48]
	245 Move X3, [X28]
	246 Move W1, 225
	247 Move X0, X26
	248 Call Dictionary`2<Byte, Object>.set_Item, X0, X1, X2
	249 Move W8, [X20+16]
	250 NotImplemented "Instruction CMP not yet implemented."
	251 Move X0, [X29]
	252 Add X1, X31, 16
	253 Move [X31+16], W8
	254 Call 0x1C17E04
	255 Move X3, [X28]
	256 Move X2, X0
	257 Move W1, 217
	258 Move X0, X26
	259 Call Dictionary`2<Byte, Object>.set_Item, X0, X1, X2
	260 Move X2, [X20+40]
	261 Compare X2, 0
	262 JumpIfEqual {265}
	263 Move X3, [X28]
	264 Move W1, 221
	265 Move X0, [X20+24]
	266 Move X1, X31
	267 Call String.IsNullOrEmpty, X0
	268 Move TEMP, X0
	269 And TEMP, TEMP, 1
	270 Compare TEMP, 1
	271 JumpIfEqual {277}
	272 Move X2, [X20+24]
	273 Move X3, [X28]
	274 Move W1, 216
	275 Move X0, X26
	276 Call Dictionary`2<Byte, Object>.set_Item, X0, X1, X2
	277 Move X2, [X20+32]
	278 Compare X2, 0
	279 JumpIfEqual {284}
	280 Move X3, [X28]
	281 Move W1, 214
	282 Move X0, X26
	283 Call Dictionary`2<Byte, Object>.set_Item, X0, X1, X2
	284 Move X0, [X27]
	285 Move [X31+40], X31
	286 Move W8, [X0+224]
	287 Compare W8, 0
	288 JumpIfNotEqual {290}
	289 Call 0x1C17DFC
	290 Add X0, X31, 40
	291 Move W1, 1
	292 Move X2, X31
	293 Move W20, 1
	294 Call SendOptions.set_Reliability, X0, X1
	295 Move [X31+44], W20
	296 Move X8, [X19]
	297 Move X3, [X31+40]
	298 Move W1, 231
	299 Move X0, X19
	300 Move X9, [X8+552]
	301 Move X4, [X8+560]
	302 Move X2, X26
	303 NotImplemented "Instruction BLR not yet implemented."
	304 Move X20, [X31+128]
	305 Move X19, [X31+136]
	306 Move X22, [X31+112]
	307 Move X21, [X31+120]
	308 Move X24, [X31+96]
	309 Move X23, [X31+104]
	310 Move X26, [X31+80]
	311 Move X25, [X31+88]
	312 Move X28, [X31+64]
	313 Move X27, [X31+72]
	314 Move X29, [X31+48]
	315 Move X30, [X31+56]
	316 And W0, W0, 1
	317 Add X31, X31, 144
	318 Return X0
	319 Call 0x1C17F28
	320 Call 0x1C17F20
	321 Move X0, 0x229B000
	322 Move X0, [X0+2880]
	323 Call 0x1C17D08
	324 Call 0x1C17F10
	325 Move X19, X0
	326 Move X0, 0x22A4000
	327 Move X0, [X0+1728]
	328 Call 0x1C17D08
	329 Move X1, X0
	330 Move X0, X19
	331 Move X2, X31
	332 Call NotSupportedException..ctor, X0, X1
	333 Move X0, 0x22A4000
	334 Move X0, [X0+1736]
	335 Call 0x1C17D08
	336 Move X1, X0
	337 Move X0, X19
	338 Call 0x1C17DEC

Method: System.Boolean OpChangeGroups(System.Byte[] groupsToRemove, System.Byte[] groupsToAdd)

Disassembly:
	0x01E59BCC LDR W8, [X20 + 0x18]
	0x01E59BD0 CMP W8, 0x2
	0x01E59BD4 B.LS 0x1E59C80
	0x01E59BD8 STR X22, [X20 + 0x30]
	0x01E59BDC LDR X9, [X19 + 0x20]
	0x01E59BE0 ADRP X10, 0x22A3000
	0x01E59BE4 LDR X10, [X10 + 0x748]
	0x01E59BE8 CMP X9, 0x0
	0x01E59BEC CSEL X9, X23, X10, EQ
	0x01E59BF0 LDR X22, [X9]
	0x01E59BF4 CBZ X22, 0x1E59C10
	0x01E59BF8 LDR X8, [X20]
	0x01E59BFC MOV X0, X22
	0x01E59C00 LDR X1, [X8 + 0x40]
	0x01E59C04 BL 0x1C16E00
	0x01E59C08 CBZ X0, 0x1E59C84
	0x01E59C0C LDR W8, [X20 + 0x18]
	0x01E59C10 CMP W8, 0x3
	0x01E59C14 B.LS 0x1E59C80
	0x01E59C18 STR X22, [X20 + 0x38]
	0x01E59C1C LDR X9, [X19 + 0x28]
	0x01E59C20 ADRP X10, 0x22A3000
	0x01E59C24 LDR X10, [X10 + 0x738]
	0x01E59C28 CMP X9, 0x0
	0x01E59C2C CSEL X9, X23, X10, EQ
	0x01E59C30 LDR X19, [X9]
	0x01E59C34 CBZ X19, 0x1E59C50
	0x01E59C38 LDR X8, [X20]
	0x01E59C3C MOV X0, X19
	0x01E59C40 LDR X1, [X8 + 0x40]
	0x01E59C44 BL 0x1C16E00
	0x01E59C48 CBZ X0, 0x1E59C84
	0x01E59C4C LDR W8, [X20 + 0x18]
	0x01E59C50 CMP W8, 0x4
	0x01E59C54 B.LS 0x1E59C80
	0x01E59C58 MOV X0, X21
	0x01E59C5C MOV X1, X20
	0x01E59C60 MOV X2, X31
	0x01E59C64 STR X19, [X20 + 0x40]
	0x01E59C68 BL 0x3227C5C
	0x01E59C6C LDP X20, X19, [X31 + 0x30]
	0x01E59C70 LDP X22, X21, [X31 + 0x20]
	0x01E59C74 LDP X30, X23, [X31 + 0x10]
	0x01E59C78 ADD X31, X31, 0x40
	0x01E59C7C RET
	0x01E59C80 BL 0x1C16F28
	0x01E59C84 BL 0x1C16F44
	0x01E59C88 MOV X1, X31
	0x01E59C8C BL 0x1C16DEC
	0x01E59C90 BL 0x1C16F20
	0x01E59C94 STR X30, [X31 - 0x10]!
	0x01E59C98 CBZ X1, 0x1E59CC8
	0x01E59C9C LDRB W8, [X0 + 0x10]
	0x01E59CA0 STRB W8, [X1 + 0x10]
	0x01E59CA4 LDR X8, [X0 + 0x18]
	0x01E59CA8 STR X8, [X1 + 0x18]
	0x01E59CAC LDR X8, [X0 + 0x20]
	0x01E59CB0 STR X8, [X1 + 0x20]
	0x01E59CB4 LDR X8, [X0 + 0x30]
	0x01E59CB8 MOV X0, X1
	0x01E59CBC STR X8, [X1 + 0x30]
	0x01E59CC0 LDR X30, [X31], #0x10
	0x01E59CC4 RET
	0x01E59CC8 BL 0x1C16F20
	0x01E59CCC STP X30, X19, [X31 - 0x10]!
	0x01E59CD0 ADRP X0, 0x22A3000
	0x01E59CD4 LDR X0, [X0 + 0x758]
	0x01E59CD8 BL 0x1C16D08
	0x01E59CDC BL 0x1C16F10
	0x01E59CE0 MOV X1, X31
	0x01E59CE4 MOV X19, X0
	0x01E59CE8 BL 0x3380288
	0x01E59CEC ADRP X0, 0x22A3000
	0x01E59CF0 LDR X0, [X0 + 0x760]
	0x01E59CF4 BL 0x1C16D08
	0x01E59CF8 MOV X1, X0
	0x01E59CFC MOV X0, X19
	0x01E59D00 BL 0x1C16DEC
	0x01E59D04 STP X30, X19, [X31 - 0x10]!
	0x01E59D08 ADRP X0, 0x22A3000
	0x01E59D0C LDR X0, [X0 + 0x758]
	0x01E59D10 BL 0x1C16D08
	0x01E59D14 BL 0x1C16F10
	0x01E59D18 MOV X1, X31
	0x01E59D1C MOV X19, X0
	0x01E59D20 BL 0x3380288
	0x01E59D24 ADRP X0, 0x22A3000
	0x01E59D28 LDR X0, [X0 + 0x768]
	0x01E59D2C BL 0x1C16D08
	0x01E59D30 MOV X1, X0
	0x01E59D34 MOV X0, X19
	0x01E59D38 BL 0x1C16DEC
	0x01E59D3C STP X30, X19, [X31 - 0x10]!
	0x01E59D40 ADRP X0, 0x22A3000
	0x01E59D44 LDR X0, [X0 + 0x758]
	0x01E59D48 BL 0x1C16D08
	0x01E59D4C BL 0x1C16F10
	0x01E59D50 MOV X1, X31
	0x01E59D54 MOV X19, X0
	0x01E59D58 BL 0x3380288
	0x01E59D5C ADRP X0, 0x22A3000
	0x01E59D60 LDR X0, [X0 + 0x770]
	0x01E59D64 BL 0x1C16D08
	0x01E59D68 MOV X1, X0
	0x01E59D6C MOV X0, X19
	0x01E59D70 BL 0x1C16DEC
	0x01E59D74 STP X30, X21, [X31 - 0x20]!
	0x01E59D78 STP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x2581000
	008 Move W8, [X22+90]
	009 Move X20, X2
	010 Move X21, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {36}
	016 Move X0, 0x22A4000
	017 Move X0, [X0+1344]
	018 Call 0x1C17CF4
	019 Move X0, 0x22A4000
	020 Move X0, [X0+1560]
	021 Call 0x1C17CF4
	022 Move X0, 0x22A4000
	023 Move X0, [X0+696]
	024 Call 0x1C17CF4
	025 Move X0, 0x22A3000
	026 Move X0, [X0+3016]
	027 Call 0x1C17CF4
	028 Move X0, 0x22A4000
	029 Move X0, [X0+1352]
	030 Call 0x1C17CF4
	031 Move X0, 0x22A4000
	032 Move X0, [X0+1744]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X22+90], W8
	036 Move W8, [X19+64]
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move X22, [X19+72]
	039 Compare X22, 0
	040 JumpIfEqual {121}
	041 Move X9, 0x22A3000
	042 Move X8, [X22]
	043 Move X9, [X9+3016]
	044 Move X10, 0x22A4000
	045 Move X1, [X9]
	046 Move X10, [X10+1744]
	047 NotImplemented "Instruction LDRH not yet implemented."
	048 Move X23, [X10]
	049 Compare X9, 0
	050 JumpIfEqual {57}
	051 Move X10, [X8+176]
	052 Add X10, X10, 8
	053 NotImplemented "Instruction LDUR not yet implemented."
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Subtract X9, X9, 1
	056 Add X10, X10, 16
	057 Move X0, X22
	058 Move W2, W31
	059 Call 0x1C5D788
	060 NotImplemented "Instruction LDRSW not yet implemented."
	061 Add X8, X8, X9
	062 Add X0, X8, 312
	063 Move X8, [X0]
	064 Move X3, [X0+8]
	065 Move W1, 5
	066 Move X0, X22
	067 Move X2, X23
	068 NotImplemented "Instruction BLR not yet implemented."
	069 Move X8, 0x22A4000
	070 Move X8, [X8+696]
	071 Move X22, 0x22A4000
	072 Move X23, 0x22A4000
	073 Move X0, [X8]
	074 Move X22, [X22+1344]
	075 Move X23, [X23+1560]
	076 Call 0x1C17F10
	077 Move X1, [X22]
	078 Move X22, X0
	079 Call Dictionary`2<Byte, Object>..ctor, X0
	080 Compare X21, 0
	081 JumpIfEqual {89}
	082 Compare X22, 0
	083 JumpIfEqual {121}
	084 Move X3, [X23]
	085 Move W1, 239
	086 Move X0, X22
	087 Move X2, X21
	088 Call Dictionary`2<Byte, Object>.set_Item, X0, X1, X2
	089 Compare X20, 0
	090 JumpIfEqual {98}
	091 Compare X22, 0
	092 JumpIfEqual {121}
	093 Move X3, [X23]
	094 Move W1, 238
	095 Move X0, X22
	096 Move X2, X20
	097 Call Dictionary`2<Byte, Object>.set_Item, X0, X1, X2
	098 Move X20, 0x22A4000
	099 Move X20, [X20+1352]
	100 Move X0, [X20]
	101 Move W8, [X0+224]
	102 Compare W8, 0
	103 JumpIfNotEqual {106}
	104 Call 0x1C17DFC
	105 Move X0, [X20]
	106 Move X8, [X0+184]
	107 Move X9, [X19]
	108 Move X0, X19
	109 Move X2, X22
	110 Move X3, [X8]
	111 Move X5, [X9+552]
	112 Move X4, [X9+560]
	113 Move X20, [X31+32]
	114 Move X19, [X31+40]
	115 Move X22, [X31+16]
	116 Move X21, [X31+24]
	117 Move W1, 248
	118 Move X30, [X31+48]
	119 Move X23, [X31+56]
	120 CallNoReturn X5
	121 Call 0x1C17F20

Method: System.Boolean OpRaiseEvent(System.Byte eventCode, System.Object customEventContent, Fusion.Photon.Realtime.RaiseEventOptions raiseEventOptions, ExitGames.Client.Photon.SendOptions sendOptions)

Disassembly:
	0x01E59D7C ADRP X21, 0x2580000
	0x01E59D80 ADRP X20, 0x22A3000
	0x01E59D84 LDRB W8, [X21 + 0x68]
	0x01E59D88 LDR X20, [X20 + 0x778]
	0x01E59D8C MOV X19, X0
	0x01E59D90 TBNZ X8, 0x0, 0x1E59DA8
	0x01E59D94 ADRP X0, 0x22A3000
	0x01E59D98 LDR X0, [X0 + 0x778]
	0x01E59D9C BL 0x1C16CF4
	0x01E59DA0 MOVZ W8, 0x1
	0x01E59DA4 STRB W8, [X21 + 0x68]
	0x01E59DA8 STRH W31, [X19 + 0x18]
	0x01E59DAC LDR X0, [X20]
	0x01E59DB0 LDR W8, [X0 + 0xE0]
	0x01E59DB4 CBNZ W8, 0x1E59DC0
	0x01E59DB8 BL 0x1C16DFC
	0x01E59DBC LDR X0, [X20]
	0x01E59DC0 LDR X8, [X0 + 0xB8]
	0x01E59DC4 LDR X0, [X8]
	0x01E59DC8 CBZ X0, 0x1E59DEC
	0x01E59DCC LDR X8, [X0]
	0x01E59DD0 MOVZ W1, 0xFF
	0x01E59DD4 LDP X9, X2, [X8 + 0x1A8]
	0x01E59DD8 BLR X9
	0x01E59DDC STRB W0, [X19 + 0x28]
	0x01E59DE0 LDP X20, X19, [X31 + 0x10]
	0x01E59DE4 LDP X30, X21, [X31], #0x20
	0x01E59DE8 RET
	0x01E59DEC BL 0x1C16F20
	0x01E59DF0 STP X30, X23, [X31 - 0x30]!
	0x01E59DF4 STP X22, X21, [X31 + 0x10]
	0x01E59DF8 STP X20, X19, [X31 + 0x20]
	0x01E59DFC ADRP X22, 0x2580000
	0x01E59E00 ADRP X23, 0x229A000
	0x01E59E04 ADRP X21, 0x229A000
	0x01E59E08 ADRP X20, 0x22A3000
	0x01E59E0C LDRB W8, [X22 + 0x69]
	0x01E59E10 LDR X23, [X23 + 0x988]
	0x01E59E14 LDR X21, [X21 + 0x618]
	0x01E59E18 LDR X20, [X20 + 0x780]
	0x01E59E1C MOV X19, X0
	0x01E59E20 TBNZ X8, 0x0, 0x1E59E50
	0x01E59E24 ADRP X0, 0x229A000
	0x01E59E28 LDR X0, [X0 + 0x618]
	0x01E59E2C BL 0x1C16CF4
	0x01E59E30 ADRP X0, 0x22A3000
	0x01E59E34 LDR X0, [X0 + 0x780]
	0x01E59E38 BL 0x1C16CF4
	0x01E59E3C ADRP X0, 0x229A000
	0x01E59E40 LDR X0, [X0 + 0x988]
	0x01E59E44 BL 0x1C16CF4
	0x01E59E48 MOVZ W8, 0x1
	0x01E59E4C STRB W8, [X22 + 0x69]
	0x01E59E50 LDR X8, [X23]
	0x01E59E54 MOVZ W9, 0xD
	0x01E59E58 STR W9, [X19 + 0x1C]
	0x01E59E5C MOVZ W1, 0xD
	0x01E59E60 STR X8, [X19 + 0x10]
	0x01E59E64 LDR X0, [X21]
	0x01E59E68 BL 0x1C16D6C
	0x01E59E6C LDR X1, [X20]
	0x01E59E70 MOV X2, X31
	0x01E59E74 MOV X20, X0
	0x01E59E78 BL 0x32C5BD8
	0x01E59E7C STR X20, [X19 + 0x20]
	0x01E59E80 MOV X0, X19
	0x01E59E84 LDP X20, X19, [X31 + 0x20]
	0x01E59E88 LDP X22, X21, [X31 + 0x10]
	0x01E59E8C MOV X1, X31
	0x01E59E90 LDP X30, X23, [X31], #0x30
	0x01E59E94 B 0x33BDD8C
	0x01E59E98 STP X30, X21, [X31 - 0x20]!
	0x01E59E9C STP X20, X19, [X31 + 0x10]
	0x01E59EA0 ADRP X19, 0x2580000
	0x01E59EA4 ADRP X21, 0x22A1000
	0x01E59EA8 ADRP X20, 0x22A3000
	0x01E59EAC LDRB W8, [X19 + 0x6A]
	0x01E59EB0 LDR X21, [X21 + 0x2E8]
	0x01E59EB4 LDR X20, [X20 + 0x778]
	0x01E59EB8 TBNZ X8, 0x0, 0x1E59EDC
	0x01E59EBC ADRP X0, 0x22A3000
	0x01E59EC0 LDR X0, [X0 + 0x778]
	0x01E59EC4 BL 0x1C16CF4
	0x01E59EC8 ADRP X0, 0x22A1000
	0x01E59ECC LDR X0, [X0 + 0x2E8]
	0x01E59ED0 BL 0x1C16CF4
	0x01E59ED4 MOVZ W8, 0x1
	0x01E59ED8 STRB W8, [X19 + 0x6A]
	0x01E59EDC LDR X0, [X21]
	0x01E59EE0 BL 0x1C16F10
	0x01E59EE4 MOV X1, X31
	0x01E59EE8 MOV X19, X0
	0x01E59EEC BL 0x338E3CC
	0x01E59EF0 LDR X8, [X20]
	0x01E59EF4 LDR X8, [X8 + 0xB8]
	0x01E59EF8 STR X19, [X8]
	0x01E59EFC LDP X20, X19, [X31 + 0x10]
	0x01E59F00 LDP X30, X21, [X31], #0x20
	0x01E59F04 RET
	0x01E59F08 STP X30, X21, [X31 - 0x20]!
	0x01E59F0C STP X20, X19, [X31 + 0x10]
	0x01E59F10 ADRP X21, 0x2580000
	0x01E59F14 LDRB W8, [X21 + 0x6B]
	0x01E59F18 MOV X20, X1
	0x01E59F1C MOV X19, X0
	0x01E59F20 TBNZ X8, 0x0, 0x1E59F50
	0x01E59F24 ADRP X0, 0x22A3000
	0x01E59F28 LDR X0, [X0 + 0x308]
	0x01E59F2C BL 0x1C16CF4
	0x01E59F30 ADRP X0, 0x22A3000
	0x01E59F34 LDR X0, [X0 + 0x788]
	0x01E59F38 BL 0x1C16CF4
	0x01E59F3C ADRP X0, 0x22A3000
	0x01E59F40 LDR X0, [X0 + 0x790]
	0x01E59F44 BL 0x1C16CF4
	0x01E59F48 MOVZ W8, 0x1
	0x01E59F4C STRB W8, [X21 + 0x6B]
	0x01E59F50 MOV X0, X19
	0x01E59F54 BL 0x1E59D74
	0x01E59F58 LDR X8, [X19 + 0x30]
	0x01E59F5C CBNZ X8, 0x1E5A018
	0x01E59F60 CBZ X20, 0x1E5A094
	0x01E59F64 ADRP X8, 0x22A3000
	0x01E59F68 LDR X8, [X8 + 0x790]
	0x01E59F6C LDR X1, [X8]
	0x01E59F70 MOV X0, X20
	0x01E59F74 MOV X2, X31
	0x01E59F78 BL 0x322BD1C
	0x01E59F7C ADRP X9, 0x22A3000
	0x01E59F80 LDR X9, [X9 + 0x788]
	0x01E59F84 MOV W8, W0
	0x01E59F88 LDR X0, [X9]
	0x01E59F8C TBZ X8, 0x0, 0x1E59FB0
	0x01E59F90 BL 0x1C16F10
	0x01E59F94 MOV X21, X0
	0x01E59F98 MOVZ W1, 0x2
	0x01E59F9C MOVZ W2, 0x2
	0x01E59FA0 MOVZ W3, 0x11
	0x01E59FA4 MOV X4, X31
	0x01E59FA8 BL 0x36AC13C
	0x01E59FAC B 0x1E59FCC
	0x01E59FB0 BL 0x1C16F10
	0x01E59FB4 MOV X21, X0
	0x01E59FB8 MOVZ W1, 0x17
	0x01E59FBC MOVZ W2, 0x2
	0x01E59FC0 MOVZ W3, 0x11
	0x01E59FC4 MOV X4, X31
	0x01E59FC8 BL 0x36AC13C
	0x01E59FCC STR X21, [X19 + 0x30]
	0x01E59FD0 CBZ X21, 0x1E5A098
	0x01E59FD4 MOVZ W1, 0x1388
	0x01E59FD8 MOV X0, X21
	0x01E59FDC MOV X2, X31
	0x01E59FE0 BL 0x36BF3EC
	0x01E59FE4 LDR X0, [X19 + 0x30]
	0x01E59FE8 CBZ X0, 0x1E5A09C
	0x01E59FEC ADRP X8, 0x22A3000
	0x01E59FF0 LDR X8, [X8 + 0x308]
	0x01E59FF4 MOVZ W9, 0x13BF
	0x01E59FF8 LDR X8, [X8]
	0x01E59FFC LDR X8, [X8 + 0xB8]
	0x01E5A000 LDRH W8, [X8 + 0x8]
	0x01E5A004 CMP W8, 0x0
	0x01E5A008 CSEL W2, W9, W8, EQ
	0x01E5A00C MOV X1, X20
	0x01E5A010 MOV X3, X31
	0x01E5A014 BL 0x36C2FF4
	0x01E5A018 LDR X8, [X19 + 0x20]
	0x01E5A01C CBZ X8, 0x1E5A080
	0x01E5A020 LDR X9, [X8 + 0x18]
	0x01E5A024 CBZ W9, 0x1E5A084
	0x01E5A028 LDRB W10, [X19 + 0x28]
	0x01E5A02C SUB W9, W9, 0x1
	0x01E5A030 ADD X8, X8, W9, SXTW
	0x01E5A034 STRB W10, [X8 + 0x20]
	0x01E5A038 LDR X0, [X19 + 0x30]
	0x01E5A03C CBZ X0, 0x1E5A088
	0x01E5A040 LDR X1, [X19 + 0x20]
	0x01E5A044 MOV X2, X31
	0x01E5A048 BL 0x36BFE20
	0x01E5A04C LDR X8, [X19 + 0x20]
	0x01E5A050 CBZ X8, 0x1E5A08C
	0x01E5A054 LDR X9, [X8 + 0x18]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X20, 0x2581000
	010 Move W8, [X20+91]
	011 Move X21, X4
	012 Move X24, X3
	013 Move X22, X2
	014 Move W23, W1
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {28}
	020 Move X0, 0x22A4000
	021 Move X0, [X0+1752]
	022 Call 0x1C17CF4
	023 Move X0, 0x22A4000
	024 Move X0, [X0+1760]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X20+91], W8
	028 Move X0, [X19+272]
	029 Compare X0, 0
	030 JumpIfEqual {165}
	031 Move X8, 0x22A4000
	032 Move X8, [X8+1752]
	033 Move X25, 0x22A4000
	034 Move X1, [X8]
	035 Move X25, [X25+1760]
	036 Call 0x24A7860, X0
	037 Move X20, X0
	038 Compare X24, 0
	039 JumpIfEqual {116}
	040 Move W2, [X24+16]
	041 Compare W2, 0
	042 JumpIfEqual {66}
	043 Compare X20, 0
	044 JumpIfEqual {168}
	045 Move W1, 247
	046 Move X0, X20
	047 Move X3, X31
	048 Call ParameterDictionary.Add, X0, X1, X2
	049 Move W8, [X24+16]
	050 Subtract W8, W8, 6
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Move X9, -20099072
	053 Add X9, X9, 2864
	054 NotImplemented "Instruction ADR not yet implemented."
	055 Move W11, [X9]
	056 Add X10, X10, X11
	057 CallNoReturn X10
	058 Move X8, [X19]
	059 Move X9, [X8+568]
	060 Move X4, [X8+576]
	061 Move W1, 253
	062 Move X0, X19
	063 Move X2, X20
	064 Move X3, X21
	065 NotImplemented "Instruction BLR not yet implemented."
	066 Move X2, [X24+24]
	067 Compare X2, 0
	068 JumpIfEqual {83}
	069 Compare X20, 0
	070 JumpIfEqual {170}
	071 Move W1, 252
	072 Move X0, X20
	073 Move X3, X31
	074 Call ParameterDictionary.Add, X0, X1, X2
	075 Move X8, [X19]
	076 Move X9, [X8+568]
	077 Move X4, [X8+576]
	078 Move W1, 253
	079 Move X0, X19
	080 Move X2, X20
	081 Move X3, X21
	082 NotImplemented "Instruction BLR not yet implemented."
	083 Move W2, [X24+17]
	084 Compare W2, 0
	085 JumpIfEqual {99}
	086 Compare X20, 0
	087 JumpIfEqual {172}
	088 Move W1, 240
	089 Move X0, X20
	090 Move X3, X31
	091 Call ParameterDictionary.Add, X0, X1, X2
	092 Move X2, [X24+24]
	093 Compare X2, 0
	094 JumpIfEqual {125}
	095 Move W1, 252
	096 Move X0, X20
	097 Move X3, X31
	098 Call ParameterDictionary.Add, X0, X1, X2
	099 Move W2, [X24+32]
	100 Compare W2, 0
	101 JumpIfEqual {108}
	102 Compare X20, 0
	103 JumpIfEqual {173}
	104 Move W1, 246
	105 Move X0, X20
	106 Move X3, X31
	107 Call ParameterDictionary.Add, X0, X1, X2
	108 Move X8, [X24+40]
	109 Compare X8, 0
	110 JumpIfEqual {169}
	111 Move W2, [X8+16]
	112 Move TEMP, X2
	113 And TEMP, TEMP, 1
	114 Compare TEMP, 1
	115 JumpIfEqual {119}
	116 Compare X20, 0
	117 JumpIfNotEqual {125}
	118 Call 0x1C17F20
	119 Compare X20, 0
	120 JumpIfEqual {171}
	121 Move W1, 234
	122 Move X0, X20
	123 Move X3, X31
	124 Call ParameterDictionary.Add, X0, X1, X2
	125 Move W1, 244
	126 Move X0, X20
	127 Move W2, W23
	128 Move X3, X31
	129 Call ParameterDictionary.Add, X0, X1, X2
	130 Compare X22, 0
	131 JumpIfEqual {137}
	132 Move W1, 245
	133 Move X0, X20
	134 Move X2, X22
	135 Move X3, X31
	136 Call ParameterDictionary.Add, X0, X1, X2
	137 Move X8, [X19]
	138 Move X9, [X8+568]
	139 Move X4, [X8+576]
	140 Move W1, 253
	141 Move X0, X19
	142 Move X2, X20
	143 Move X3, X21
	144 NotImplemented "Instruction BLR not yet implemented."
	145 Move W21, W0
	146 Move X22, X31
	147 Move X0, [X19+272]
	148 Compare X0, 0
	149 JumpIfEqual {165}
	150 Move X2, [X25]
	151 Move X1, X20
	152 Call 0x24A75D0, X0, X1
	153 Compare X22, 0
	154 JumpIfNotEqual {166}
	155 And W0, W21, 1
	156 Move X20, [X31+48]
	157 Move X19, [X31+56]
	158 Move X22, [X31+32]
	159 Move X21, [X31+40]
	160 Move X24, [X31+16]
	161 Move X23, [X31+24]
	162 Move X30, [X31+64]
	163 Move X25, [X31+72]
	164 Return X0
	165 Call 0x1C17F20
	166 Move X0, X22
	167 Call 0x1C17F18
	168 Call 0x1C17F20
	169 Call 0x1C17F20
	170 Call 0x1C17F20
	171 Call 0x1C17F20
	172 Call 0x1C17F20
	173 Call 0x1C17F20
	174 Move X21, X0
	175 NotImplemented "Instruction CMP not yet implemented."
	176 Move X0, X21
	177 Call 0x3EB2AD0
	178 Move X22, [X0]
	179 Call 0x3EB2AE0
	180 Move W21, W31
	181 Move X22, X31
	182 Move X21, X0
	183 Move X0, [X19+272]
	184 Compare X0, 0
	185 JumpIfNotEqual {187}
	186 Call 0x1C17F20
	187 Move X2, [X25]
	188 Move X1, X20
	189 Call 0x24A75D0, X0, X1
	190 Compare X22, 0
	191 JumpIfNotEqual {194}
	192 Move X0, X21
	193 Call 0x1D2D690
	194 Move X0, X22
	195 Call 0x1C17F18
	196 Call 0x1991590

Method: System.Boolean OpSettings(System.Boolean receiveLobbyStats)

Disassembly:
	0x01E5A058 CBZ W9, 0x1E5A090
	0x01E5A05C LDRB W10, [X19 + 0x28]
	0x01E5A060 LDP X20, X19, [X31 + 0x10]
	0x01E5A064 SUB W9, W9, 0x1
	0x01E5A068 ADD X8, X8, W9, SXTW
	0x01E5A06C ADD W10, W10, 0x1
	0x01E5A070 STRB W10, [X8 + 0x20]
	0x01E5A074 MOV W0, W31
	0x01E5A078 LDP X30, X21, [X31], #0x20
	0x01E5A07C RET
	0x01E5A080 BL 0x1C16F20
	0x01E5A084 BL 0x1C16F28
	0x01E5A088 BL 0x1C16F20
	0x01E5A08C BL 0x1C16F20
	0x01E5A090 BL 0x1C16F28
	0x01E5A094 BL 0x1C16F20
	0x01E5A098 BL 0x1C16F20
	0x01E5A09C BL 0x1C16F20
	0x01E5A0A0 B 0x1E5A0CC
	0x01E5A0A4 B 0x1E5A0CC
	0x01E5A0A8 B 0x1E5A0CC
	0x01E5A0AC B 0x1E5A0CC
	0x01E5A0B0 B 0x1E5A0CC
	0x01E5A0B4 B 0x1E5A0CC
	0x01E5A0B8 B 0x1E5A0CC
	0x01E5A0BC B 0x1E5A0CC
	0x01E5A0C0 B 0x1E5A0CC
	0x01E5A0C4 B 0x1E5A0CC
	0x01E5A0C8 B 0x1E5A0CC
	0x01E5A0CC MOV X20, X0
	0x01E5A0D0 CMP W1, 0x1
	0x01E5A0D4 B.NE 0x1E5A13C
	0x01E5A0D8 MOV X0, X20
	0x01E5A0DC BL 0x3EB1AD0
	0x01E5A0E0 MOV X20, X0
	0x01E5A0E4 ADRP X0, 0x2299000
	0x01E5A0E8 LDR X0, [X0 + 0x7D0]
	0x01E5A0EC BL 0x1C16D08
	0x01E5A0F0 LDR X8, [X20]
	0x01E5A0F4 LDR X1, [X8]
	0x01E5A0F8 BL 0x1C17270
	0x01E5A0FC TBZ X0, 0x0, 0x1E5A114
	0x01E5A100 LDR X20, [X20]
	0x01E5A104 BL 0x3EB1AE0
	0x01E5A108 MOV X0, X20
	0x01E5A10C STR X31, [X19 + 0x30]
	0x01E5A110 BL 0x1C16F18
	0x01E5A114 MOVZ W0, 0x8
	0x01E5A118 BL 0x3EB1AF0
	0x01E5A11C LDR X8, [X20]
	0x01E5A120 STR X8, [X0]
	0x01E5A124 ADRP X1, 0x205A000
	0x01E5A128 ADD X1, X1, 0xE58
	0x01E5A12C MOV X2, X31
	0x01E5A130 BL 0x3EB1B00
	0x01E5A134 MOV X20, X0
	0x01E5A138 BL 0x3EB1AE0
	0x01E5A13C MOV X0, X20
	0x01E5A140 BL 0x1D2C690
	0x01E5A144 BL 0x1990590
	0x01E5A148 STR X30, [X31 - 0x30]!
	0x01E5A14C STP X22, X21, [X31 + 0x10]
	0x01E5A150 STP X20, X19, [X31 + 0x20]
	0x01E5A154 ADRP X20, 0x257F000
	0x01E5A158 LDRB W8, [X20 + 0x6C]
	0x01E5A15C MOV X19, X0
	0x01E5A160 TBNZ X8, 0x0, 0x1E5A178
	0x01E5A164 ADRP X0, 0x22A2000
	0x01E5A168 LDR X0, [X0 + 0x798]
	0x01E5A16C BL 0x1C16CF4
	0x01E5A170 MOVZ W8, 0x1
	0x01E5A174 STRB W8, [X20 + 0x6C]
	0x01E5A178 LDRB W8, [X19 + 0x19]
	0x01E5A17C CBZ W8, 0x1E5A194
	0x01E5A180 MOVZ W0, 0x1
	0x01E5A184 LDP X20, X19, [X31 + 0x20]
	0x01E5A188 LDP X22, X21, [X31 + 0x10]
	0x01E5A18C LDR X30, [X31], #0x30
	0x01E5A190 RET
	0x01E5A194 LDR X0, [X19 + 0x30]
	0x01E5A198 CBZ X0, 0x1E5A180
	0x01E5A19C MOV W1, W31
	0x01E5A1A0 MOV W2, W31
	0x01E5A1A4 MOV X3, X31
	0x01E5A1A8 BL 0x36A987C
	0x01E5A1AC TBZ X0, 0x0, 0x1E5A204
	0x01E5A1B0 LDR X0, [X19 + 0x30]
	0x01E5A1B4 CBZ X0, 0x1E5A23C
	0x01E5A1B8 LDR X1, [X19 + 0x20]
	0x01E5A1BC MOV W2, W31
	0x01E5A1C0 MOV X3, X31
	0x01E5A1C4 BL 0x36C0594
	0x01E5A1C8 LDR X8, [X19 + 0x20]
	0x01E5A1CC CBZ X8, 0x1E5A308
	0x01E5A1D0 LDR X9, [X8 + 0x18]
	0x01E5A1D4 CBZ W9, 0x1E5A240
	0x01E5A1D8 SUB W9, W9, 0x1
	0x01E5A1DC ADD X8, X8, W9, SXTW
	0x01E5A1E0 LDRB W8, [X8 + 0x20]
	0x01E5A1E4 LDRB W9, [X19 + 0x28]
	0x01E5A1E8 CMP W8, W9
	0x01E5A1EC B.NE 0x1E5A20C
	0x01E5A1F0 LDR W8, [X19 + 0x1C]
	0x01E5A1F4 CMP W0, W8
	0x01E5A1F8 B.NE 0x1E5A20C
	0x01E5A1FC MOVZ W8, 0x1
	0x01E5A200 B 0x1E5A22C
	0x01E5A204 MOV W0, W31
	0x01E5A208 B 0x1E5A184
	0x01E5A20C ADRP X8, 0x22A2000
	0x01E5A210 LDR X0, [X19 + 0x10]
	0x01E5A214 LDR X8, [X8 + 0x798]
	0x01E5A218 MOV X2, X31
	0x01E5A21C LDR X1, [X8]
	0x01E5A220 BL 0x321B938
	0x01E5A224 MOV W8, W31
	0x01E5A228 STR X0, [X19 + 0x10]
	0x01E5A22C MOVZ W0, 0x1
	0x01E5A230 STRB W8, [X19 + 0x18]
	0x01E5A234 STRB W0, [X19 + 0x19]
	0x01E5A238 B 0x1E5A184
	0x01E5A23C BL 0x1C16F20
	0x01E5A240 BL 0x1C16F28
	0x01E5A244 B 0x1E5A24C
	0x01E5A248 B 0x1E5A24C

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x2580000
	007 Move W8, [X21+92]
	008 Move W20, W1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {40}
	014 Move X0, 0x229A000
	015 Move X0, [X0+2904]
	016 Call 0x1C17CF4
	017 Move X0, 0x22A3000
	018 Move X0, [X0+1344]
	019 Call 0x1C17CF4
	020 Move X0, 0x22A3000
	021 Move X0, [X0+1768]
	022 Call 0x1C17CF4
	023 Move X0, 0x22A3000
	024 Move X0, [X0+1560]
	025 Call 0x1C17CF4
	026 Move X0, 0x22A3000
	027 Move X0, [X0+696]
	028 Call 0x1C17CF4
	029 Move X0, 0x22A2000
	030 Move X0, [X0+3016]
	031 Call 0x1C17CF4
	032 Move X0, 0x22A3000
	033 Move X0, [X0+1352]
	034 Call 0x1C17CF4
	035 Move X0, 0x22A3000
	036 Move X0, [X0+1776]
	037 Call 0x1C17CF4
	038 Move W8, 1
	039 Move [X21+92], W8
	040 Move W8, [X19+64]
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Move X21, [X19+72]
	043 Compare X21, 0
	044 JumpIfEqual {136}
	045 Move X9, 0x22A2000
	046 Move X8, [X21]
	047 Move X9, [X9+3016]
	048 Move X10, 0x22A3000
	049 Move X1, [X9]
	050 Move X10, [X10+1776]
	051 NotImplemented "Instruction LDRH not yet implemented."
	052 Move X22, [X10]
	053 Compare X9, 0
	054 JumpIfEqual {61}
	055 Move X10, [X8+176]
	056 Add X10, X10, 8
	057 NotImplemented "Instruction LDUR not yet implemented."
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Subtract X9, X9, 1
	060 Add X10, X10, 16
	061 Move X0, X21
	062 Move W2, W31
	063 Call 0x1C5D788
	064 NotImplemented "Instruction LDRSW not yet implemented."
	065 Add X8, X8, X9
	066 Add X0, X8, 312
	067 Move X8, [X0]
	068 Move X3, [X0+8]
	069 Move W1, 5
	070 Move X0, X21
	071 Move X2, X22
	072 NotImplemented "Instruction BLR not yet implemented."
	073 Move X8, 0x22A3000
	074 Move X8, [X8+696]
	075 Move X21, 0x22A3000
	076 Move X0, [X8]
	077 Move X21, [X21+1344]
	078 Call 0x1C17F10
	079 Move X1, [X21]
	080 Move X21, X0
	081 Call Dictionary`2<Byte, Object>..ctor, X0
	082 Move TEMP, X20
	083 And TEMP, TEMP, 1
	084 Compare TEMP, 1
	085 JumpIfNotEqual {102}
	086 Move X8, 0x229A000
	087 Move X8, [X8+2904]
	088 Add X1, X31, 12
	089 Move X0, [X8]
	090 And W8, W20, 1
	091 Move [X31+12], W8
	092 Call 0x1C17E04
	093 Compare X21, 0
	094 JumpIfEqual {136}
	095 Move X8, 0x22A3000
	096 Move X8, [X8+1560]
	097 Move X2, X0
	098 Move X0, X21
	099 Move W1, W31
	100 Move X3, [X8]
	101 Call Dictionary`2<Byte, Object>.set_Item, X0, X1, X2
	102 Compare X21, 0
	103 JumpIfEqual {136}
	104 Move X8, 0x22A3000
	105 Move X8, [X8+1768]
	106 Move X0, X21
	107 Move X1, [X8]
	108 Call Dictionary`2<Byte, Object>.get_Count, X0
	109 Compare W0, 0
	110 JumpIfEqual {128}
	111 Move X20, 0x22A3000
	112 Move X20, [X20+1352]
	113 Move X0, [X20]
	114 Move W8, [X0+224]
	115 Compare W8, 0
	116 JumpIfNotEqual {119}
	117 Call 0x1C17DFC
	118 Move X0, [X20]
	119 Move X8, [X0+184]
	120 Move X9, [X19]
	121 Move W1, 218
	122 Move X0, X19
	123 Move X3, [X8]
	124 Move X8, [X9+552]
	125 Move X4, [X9+560]
	126 Move X2, X21
	127 NotImplemented "Instruction BLR not yet implemented."
	128 Move W0, 1
	129 Move X20, [X31+32]
	130 Move X19, [X31+40]
	131 Move X22, [X31+16]
	132 Move X21, [X31+24]
	133 And W0, W0, 1
	134 Move X30, [X31+48]
	135 Return X0
	136 Call 0x1C17F20

