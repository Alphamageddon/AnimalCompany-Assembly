Type: Fusion.Photon.Realtime.SupportLogger

Method: Fusion.Photon.Realtime.LoadBalancingClient get_Client()

Disassembly:
	0x01E613CC LDR X0, [X19 + 0x28]
	0x01E613D0 CBZ X0, 0x1E613E0

ISIL:
	001 Move X0, [X0+40]
	002 Return X0

Method: System.Void set_Client(Fusion.Photon.Realtime.LoadBalancingClient value)

Disassembly:
	0x01E613D4 MOV X1, X31
	0x01E613D8 LDP X30, X19, [X31], #0x10
	0x01E613DC B 0x1E4AE38
	0x01E613E0 LDP X30, X19, [X31], #0x10
	0x01E613E4 RET
	0x01E613E8 RET
	0x01E613EC RET
	0x01E613F0 RET
	0x01E613F4 RET
	0x01E613F8 RET
	0x01E613FC RET
	0x01E61400 RET
	0x01E61404 RET
	0x01E61408 RET
	0x01E6140C RET
	0x01E61410 RET
	0x01E61414 MOVZ W8, 0x1
	0x01E61418 MOV X1, X31
	0x01E6141C STRB W8, [X0 + 0x20]
	0x01E61420 STRB W31, [X0 + 0x38]
	0x01E61424 B 0x3C36C30
	0x01E61428 STP X30, X21, [X31 - 0x20]!

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X0
	005 Move X0, [X0+40]
	006 NotImplemented "Instruction CMP not yet implemented."
	007 Move X20, X1
	008 Compare X0, 0
	009 JumpIfEqual {13}
	010 Move X1, X19
	011 Move X2, X31
	012 Call LoadBalancingClient.RemoveCallbackTarget, X0, X1
	013 Move [X19+40], X20
	014 Compare X20, 0
	015 JumpIfEqual {24}
	016 Move X0, X20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X2, X31
	021 Move X30, [X31+32]
	022 Call LoadBalancingClient.AddCallbackTarget, X0, X1
	023 Return 
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X30, [X31+32]
	027 Return 

Method: System.Void Start()

Disassembly:
	0x01E6142C STP X20, X19, [X31 + 0x10]
	0x01E61430 ADRP X21, 0x2578000
	0x01E61434 LDRB W8, [X21 + 0xB1]
	0x01E61438 MOV X20, X1
	0x01E6143C MOV X19, X0
	0x01E61440 TBNZ X8, 0x0, 0x1E61458
	0x01E61444 ADRP X0, 0x229A000
	0x01E61448 LDR X0, [X0 + 0xE58]
	0x01E6144C BL 0x1C16CF4
	0x01E61450 MOVZ W8, 0x1
	0x01E61454 STRB W8, [X21 + 0xB1]
	0x01E61458 MOV X0, X19
	0x01E6145C MOV X1, X31
	0x01E61460 STRB W31, [X19 + 0x10]
	0x01E61464 BL 0x33BDD8C
	0x01E61468 CBZ X20, 0x1E61498
	0x01E6146C LDR X0, [X20 + 0x10]
	0x01E61470 CBZ X0, 0x1E61504
	0x01E61474 MOV X1, X31
	0x01E61478 BL 0x3502010
	0x01E6147C AND W8, W0, 0x7
	0x01E61480 STRB W8, [X19 + 0x11]
	0x01E61484 LDR X0, [X20 + 0x10]
	0x01E61488 CBZ X0, 0x1E61504
	0x01E6148C MOV X1, X31
	0x01E61490 BL 0x350175C
	0x01E61494 STR W0, [X19 + 0x1C]
	0x01E61498 ADRP X8, 0x229A000
	0x01E6149C LDR X8, [X8 + 0xE58]
	0x01E614A0 MOV X0, X31
	0x01E614A4 LDR X8, [X8]
	0x01E614A8 LDR X8, [X8 + 0xB8]
	0x01E614AC LDRB W9, [X8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x2579000
	005 Move W8, [X20+170]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x229B000
	012 Move X0, [X0+1800]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+170], W8
	016 Move X0, X19
	017 Call SupportLogger.LogBasics, X0
	018 Move X8, [X19+48]
	019 Compare X8, 0
	020 JumpIfEqual {25}
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move X30, [X31+32]
	024 Return 
	025 Move X8, 0x229B000
	026 Move X8, [X8+1800]
	027 Move X0, [X8]
	028 Call 0x1C17F10
	029 Move X1, X31
	030 Move X20, X0
	031 Call Stopwatch..ctor, X0
	032 Move [X19+48], X20
	033 Compare X20, 0
	034 JumpIfEqual {42}
	035 Move X0, X20
	036 Move X20, [X31+16]
	037 Move X19, [X31+24]
	038 Move X1, X31
	039 Move X30, [X31+32]
	040 Call Stopwatch.Start, X0
	041 Return 
	042 Call 0x1C17F20

Method: System.Void OnDestroy()

Disassembly:
	0x01E61F0C LDRB W8, [X0 + 0x10]
	0x01E61F10 BFM W8, W1, 0x0, 0x0
	0x01E61F14 STRB W8, [X0 + 0x10]
	0x01E61F18 RET
	0x01E61F1C LDRB W8, [X0 + 0x10]
	0x01E61F20 UBFM W0, W8, 0x1, 0x1
	0x01E61F24 RET
	0x01E61F28 LDRB W8, [X0 + 0x10]
	0x01E61F2C ANDS W31, W1, 0x1
	0x01E61F30 MOVZ W9, 0x2

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, [X0+40]
	005 Compare X0, 0
	006 JumpIfEqual {11}
	007 Move X1, X19
	008 Move X2, X31
	009 Call LoadBalancingClient.RemoveCallbackTarget, X0, X1
	010 Move [X19+40], X31
	011 Move X30, [X31+16]
	012 Move X19, [X31+24]
	013 Return 

Method: System.Void OnApplicationPause(System.Boolean pause)

Disassembly:
	0x01E61F34 CSEL W9, W9, W31, NE
	0x01E61F38 AND W8, W8, 0xFFFFFFFD
	0x01E61F3C ORR W8, W8, W9, 0x0
	0x01E61F40 STRB W8, [X0 + 0x10]
	0x01E61F44 RET
	0x01E61F48 LDRB W8, [X0 + 0x10]

ISIL:
	001 Move W8, [X0+56]
	002 Compare W8, 0
	003 JumpIfEqual {5}
	004 Return 
	005 Move W8, 1
	006 Move [X0+56], W8
	007 Return 

Method: System.Void OnApplicationQuit()

Disassembly:
	0x01E61F4C UBFM W0, W8, 0x2, 0x2
	0x01E61F50 RET

ISIL:
	001 Move X1, X31
	002 Call MonoBehaviour.CancelInvoke, X0
	003 Return 

Method: System.Void StartLogStats()

Disassembly:
	0x01E61F54 LDRB W8, [X0 + 0x10]
	0x01E61F58 ANDS W31, W1, 0x1
	0x01E61F5C MOVZ W9, 0x4
	0x01E61F60 CSEL W9, W9, W31, NE
	0x01E61F64 AND W8, W8, 0xFFFFFFFB
	0x01E61F68 ORR W8, W8, W9, 0x0
	0x01E61F6C STRB W8, [X0 + 0x10]
	0x01E61F70 RET
	0x01E61F74 LDRB W8, [X0 + 0x10]
	0x01E61F78 UBFM W0, W8, 0x3, 0x3
	0x01E61F7C RET
	0x01E61F80 LDRB W8, [X0 + 0x10]
	0x01E61F84 ANDS W31, W1, 0x1
	0x01E61F88 MOVZ W9, 0x8
	0x01E61F8C CSEL W9, W9, W31, NE
	0x01E61F90 AND W8, W8, 0xFFFFFFF7
	0x01E61F94 ORR W8, W8, W9, 0x0
	0x01E61F98 STRB W8, [X0 + 0x10]
	0x01E61F9C RET
	0x01E61FA0 STR X30, [X31 - 0x20]!
	0x01E61FA4 STP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x2579000
	006 Move X21, 0x229C000
	007 Move W8, [X20+171]
	008 Move X21, [X21+2744]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x229C000
	015 Move X0, [X0+2744]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+171], W8
	019 Move X1, [X21]
	020 Move X0, X19
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move S0, 10
	024 Move S1, 10
	025 Move X2, X31
	026 Move X30, [X31+32]
	027 Move X21, [X31+40]
	028 Call MonoBehaviour.InvokeRepeating, X0, X1, V0, V1
	029 Return 

Method: System.Void StopLogStats()

Disassembly:
	0x01E61FA8 MOV W19, W1
	0x01E61FAC MOV X1, X31
	0x01E61FB0 MOV X20, X0
	0x01E61FB4 BL 0x33BDD8C
	0x01E61FB8 STRB W19, [X20 + 0x10]
	0x01E61FBC LDP X20, X19, [X31 + 0x10]
	0x01E61FC0 LDR X30, [X31], #0x20
	0x01E61FC4 RET
	0x01E61FC8 STR X30, [X31 - 0x20]!
	0x01E61FCC STP X20, X19, [X31 + 0x10]
	0x01E61FD0 ADRP X19, 0x2578000
	0x01E61FD4 ADRP X20, 0x229B000
	0x01E61FD8 LDRB W8, [X19 + 0xB8]
	0x01E61FDC LDR X20, [X20 + 0x700]
	0x01E61FE0 TBNZ X8, 0x0, 0x1E61FF8
	0x01E61FE4 ADRP X0, 0x229B000
	0x01E61FE8 LDR X0, [X0 + 0x700]
	0x01E61FEC BL 0x1C16CF4
	0x01E61FF0 MOVZ W8, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x2579000
	006 Move X21, 0x229C000
	007 Move W8, [X20+172]
	008 Move X21, [X21+2744]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x229C000
	015 Move X0, [X0+2744]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+172], W8
	019 Move X1, [X21]
	020 Move X0, X19
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move X2, X31
	024 Move X30, [X31+32]
	025 Move X21, [X31+40]
	026 Call MonoBehaviour.CancelInvoke, X0, X1
	027 Return 

Method: System.Void StartTrackValues()

Disassembly:
	0x01E61FF4 STRB W8, [X19 + 0xB8]
	0x01E61FF8 LDR X0, [X20]
	0x01E61FFC BL 0x1C16F10
	0x01E62000 MOV X1, X31
	0x01E62004 MOV X19, X0
	0x01E62008 BL 0x33BDD8C
	0x01E6200C STRB W31, [X19 + 0x10]
	0x01E62010 LDR X8, [X20]
	0x01E62014 LDR X8, [X8 + 0xB8]
	0x01E62018 STR X19, [X8]
	0x01E6201C LDP X20, X19, [X31 + 0x10]
	0x01E62020 LDR X30, [X31], #0x20
	0x01E62024 RET
	0x01E62028 STP X30, X21, [X31 - 0x20]!
	0x01E6202C STP X20, X19, [X31 + 0x10]
	0x01E62030 ADRP X20, 0x2577000
	0x01E62034 ADRP X21, 0x229A000
	0x01E62038 LDRB W8, [X20 + 0xB9]
	0x01E6203C LDR X21, [X21 + 0xB70]
	0x01E62040 MOV X19, X0
	0x01E62044 TBNZ X8, 0x0, 0x1E6205C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x2579000
	006 Move X21, 0x229B000
	007 Move W8, [X20+173]
	008 Call 0x3EB2514
	009 Return 
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x229B000
	016 Move X0, [X0+2752]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+173], W8
	020 Move X1, [X21]
	021 Move X0, X19
	022 Move X20, [X31+16]
	023 Move X19, [X31+24]
	024 Move S0, 0.5
	025 Move S1, 0.5
	026 Move X2, X31
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Call MonoBehaviour.InvokeRepeating, X0, X1, V0, V1
	030 Return 

Method: System.Void StopTrackValues()

Disassembly:
	0x01E62048 ADRP X0, 0x229A000
	0x01E6204C LDR X0, [X0 + 0xB70]
	0x01E62050 BL 0x1C16CF4
	0x01E62054 MOVZ W8, 0x1
	0x01E62058 STRB W8, [X20 + 0xB9]
	0x01E6205C LDR X0, [X21]
	0x01E62060 BL 0x1C16F10
	0x01E62064 MOV X1, X31
	0x01E62068 MOV X20, X0
	0x01E6206C BL 0x1E47BA0
	0x01E62070 MOV X0, X19
	0x01E62074 MOV X1, X20
	0x01E62078 MOV X2, X31
	0x01E6207C BL 0x1E47B20
	0x01E62080 CBZ X20, 0x1E6209C
	0x01E62084 LDUR V0, [X19 + 0x74]
	0x01E62088 MOV X0, X20
	0x01E6208C STUR D0, [X20 + 0x74]
	0x01E62090 LDP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x2578000
	006 Move X21, 0x229B000
	007 Move W8, [X20+174]
	008 Move X21, [X21+2752]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x229B000
	015 Move X0, [X0+2752]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+174], W8
	019 Move X1, [X21]
	020 Move X0, X19
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move X2, X31
	024 Move X30, [X31+32]
	025 Move X21, [X31+40]
	026 Call MonoBehaviour.CancelInvoke, X0, X1
	027 Return 

Method: System.String GetFormattedTimestamp()

Disassembly:
	0x01E62094 LDP X30, X21, [X31], #0x20
	0x01E62098 RET
	0x01E6209C BL 0x1C16F20
	0x01E620A0 MOV X1, X31
	0x01E620A4 B 0x1E47BA0
	0x01E620A8 SUB X31, X31, 0x40
	0x01E620AC STP X30, X23, [X31 + 0x10]
	0x01E620B0 STP X22, X21, [X31 + 0x20]
	0x01E620B4 STP X20, X19, [X31 + 0x30]
	0x01E620B8 ADRP X23, 0x2577000
	0x01E620BC ADRP X20, 0x229A000
	0x01E620C0 ADRP X21, 0x2291000
	0x01E620C4 ADRP X22, 0x229A000
	0x01E620C8 LDRB W8, [X23 + 0xBA]
	0x01E620CC LDR X20, [X20 + 0x6A0]
	0x01E620D0 LDR X21, [X21 + 0x758]
	0x01E620D4 LDR X22, [X22 + 0xB78]
	0x01E620D8 MOV X19, X0
	0x01E620DC TBNZ X8, 0x0, 0x1E6210C
	0x01E620E0 ADRP X0, 0x229A000
	0x01E620E4 LDR X0, [X0 + 0x6A0]
	0x01E620E8 BL 0x1C16CF4
	0x01E620EC ADRP X0, 0x2291000
	0x01E620F0 LDR X0, [X0 + 0x758]
	0x01E620F4 BL 0x1C16CF4
	0x01E620F8 ADRP X0, 0x229A000
	0x01E620FC LDR X0, [X0 + 0xB78]
	0x01E62100 BL 0x1C16CF4
	0x01E62104 MOVZ W8, 0x1
	0x01E62108 STRB W8, [X23 + 0xBA]
	0x01E6210C LDR W8, [X19 + 0x74]
	0x01E62110 LDR X0, [X20]
	0x01E62114 ADD X1, X31, 0xC
	0x01E62118 STR W8, [X31 + 0xC]
	0x01E6211C BL 0x1C16E04
	0x01E62120 MOV X20, X0
	0x01E62124 LDR W8, [X19 + 0x78]
	0x01E62128 LDR X0, [X21]
	0x01E6212C ADD X1, X31, 0x8
	0x01E62130 STR W8, [X31 + 0x8]
	0x01E62134 BL 0x1C16E04
	0x01E62138 MOV X21, X0
	0x01E6213C MOV X0, X19
	0x01E62140 MOV X1, X31
	0x01E62144 BL 0x1E473A0
	0x01E62148 LDR X8, [X22]
	0x01E6214C MOV X3, X0
	0x01E62150 MOV X1, X20
	0x01E62154 MOV X2, X21
	0x01E62158 MOV X0, X8
	0x01E6215C MOV X4, X31
	0x01E62160 BL 0x3227C18
	0x01E62164 LDP X20, X19, [X31 + 0x30]
	0x01E62168 LDP X22, X21, [X31 + 0x20]
	0x01E6216C LDP X30, X23, [X31 + 0x10]
	0x01E62170 ADD X31, X31, 0x40
	0x01E62174 RET
	0x01E62178 STR X30, [X31 - 0x20]!
	0x01E6217C STP X20, X19, [X31 + 0x10]
	0x01E62180 ADRP X19, 0x2577000
	0x01E62184 ADRP X20, 0x229A000
	0x01E62188 LDRB W8, [X19 + 0xBB]
	0x01E6218C LDR X20, [X20 + 0xB80]
	0x01E62190 TBNZ X8, 0x0, 0x1E621A8
	0x01E62194 ADRP X0, 0x229A000
	0x01E62198 LDR X0, [X0 + 0xB80]
	0x01E6219C BL 0x1C16CF4
	0x01E621A0 MOVZ W8, 0x1
	0x01E621A4 STRB W8, [X19 + 0xBB]
	0x01E621A8 LDR X0, [X20]
	0x01E621AC LDP X20, X19, [X31 + 0x10]
	0x01E621B0 LDR X30, [X31], #0x20
	0x01E621B4 B 0x2D41C44
	0x01E621B8 STP X30, X21, [X31 - 0x20]!
	0x01E621BC STP X20, X19, [X31 + 0x10]
	0x01E621C0 ADRP X20, 0x2577000
	0x01E621C4 ADRP X21, 0x229A000
	0x01E621C8 LDRB W8, [X20 + 0xBC]
	0x01E621CC LDR X21, [X21 + 0xB88]
	0x01E621D0 MOV X19, X0
	0x01E621D4 TBNZ X8, 0x0, 0x1E621EC
	0x01E621D8 ADRP X0, 0x229A000
	0x01E621DC LDR X0, [X0 + 0xB88]
	0x01E621E0 BL 0x1C16CF4
	0x01E621E4 MOVZ W8, 0x1
	0x01E621E8 STRB W8, [X20 + 0xBC]
	0x01E621EC LDR X1, [X21]
	0x01E621F0 MOV X0, X19
	0x01E621F4 LDP X20, X19, [X31 + 0x10]
	0x01E621F8 LDP X30, X21, [X31], #0x20
	0x01E621FC B 0x2D41E74
	0x01E62200 STR X30, [X31 - 0x20]!
	0x01E62204 STP X20, X19, [X31 + 0x10]
	0x01E62208 ADRP X19, 0x2577000
	0x01E6220C ADRP X20, 0x229A000
	0x01E62210 LDRB W8, [X19 + 0xBD]
	0x01E62214 LDR X20, [X20 + 0xB90]
	0x01E62218 TBNZ X8, 0x0, 0x1E62230
	0x01E6221C ADRP X0, 0x229A000
	0x01E62220 LDR X0, [X0 + 0xB90]
	0x01E62224 BL 0x1C16CF4
	0x01E62228 MOVZ W8, 0x1
	0x01E6222C STRB W8, [X19 + 0xBD]
	0x01E62230 LDR X0, [X20]
	0x01E62234 LDP X20, X19, [X31 + 0x10]
	0x01E62238 LDR X30, [X31], #0x20
	0x01E6223C B 0x2D41DE8
	0x01E62240 STP X30, X21, [X31 - 0x20]!
	0x01E62244 STP X20, X19, [X31 + 0x10]
	0x01E62248 ADRP X20, 0x2577000
	0x01E6224C ADRP X21, 0x229A000
	0x01E62250 LDRB W8, [X20 + 0xBE]
	0x01E62254 LDR X21, [X21 + 0xB98]
	0x01E62258 MOV X19, X0
	0x01E6225C TBNZ X8, 0x0, 0x1E62274
	0x01E62260 ADRP X0, 0x229A000
	0x01E62264 LDR X0, [X0 + 0xB98]
	0x01E62268 BL 0x1C16CF4
	0x01E6226C MOVZ W8, 0x1
	0x01E62270 STRB W8, [X20 + 0xBE]
	0x01E62274 LDR X1, [X21]
	0x01E62278 MOV X0, X19
	0x01E6227C LDP X20, X19, [X31 + 0x10]
	0x01E62280 LDP X30, X21, [X31], #0x20
	0x01E62284 B 0x2D42AF4
	0x01E62288 SUB X31, X31, 0x90
	0x01E6228C STP X30, X23, [X31 + 0x60]
	0x01E62290 STP X22, X21, [X31 + 0x70]
	0x01E62294 STP X20, X19, [X31 + 0x80]
	0x01E62298 ADRP X22, 0x2577000
	0x01E6229C ADRP X21, 0x2295000

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+32], X22
	004 Move [X31+40], X21
	005 Move [X31+48], X20
	006 Move [X31+56], X19
	007 Move X20, 0x2578000
	008 Move W8, [X20+175]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {31}
	014 Move X0, 0x2292000
	015 Move X0, [X0+1880]
	016 Call 0x1C17CF4
	017 Move X0, 0x229A000
	018 Move X0, [X0+1800]
	019 Call 0x1C17CF4
	020 Move X0, 0x2294000
	021 Move X0, [X0+1392]
	022 Call 0x1C17CF4
	023 Move X0, 0x229B000
	024 Move X0, [X0+2760]
	025 Call 0x1C17CF4
	026 Move X0, 0x229B000
	027 Move X0, [X0+2768]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X20+175], W8
	031 Move X0, [X19+48]
	032 Compare X0, 0
	033 JumpIfNotEqual {48}
	034 Move X8, 0x229A000
	035 Move X8, [X8+1800]
	036 Move X0, [X8]
	037 Call 0x1C17F10
	038 Move X1, X31
	039 Move X20, X0
	040 Call Stopwatch..ctor, X0
	041 Move [X19+48], X20
	042 Compare X20, 0
	043 JumpIfEqual {141}
	044 Move X0, X20
	045 Move X1, X31
	046 Call Stopwatch.Start, X0
	047 Move X0, [X19+48]
	048 Compare X0, 0
	049 JumpIfEqual {141}
	050 Move X19, 0x2294000
	051 Move X19, [X19+1392]
	052 Move X1, X31
	053 Call Stopwatch.get_Elapsed, X0
	054 Move X8, [X19]
	055 Move [X31+24], X0
	056 Move W9, [X8+224]
	057 Compare W9, 0
	058 JumpIfNotEqual {61}
	059 Move X0, X8
	060 Call 0x1C17DFC
	061 Add X0, X31, 24
	062 Move X1, X31
	063 Call TimeSpan.get_Minutes, X0
	064 Move X8, [X19]
	065 Move W19, W0
	066 Move W9, [X8+224]
	067 Compare W9, 0
	068 JumpIfNotEqual {71}
	069 Move X0, X8
	070 Call 0x1C17DFC
	071 Move X21, 0x2292000
	072 Move X21, [X21+1880]
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Move X22, 0x229B000
	075 Move X22, [X22+2760]
	076 Add X0, X31, 24
	077 Move X1, X31
	078 Call TimeSpan.get_Minutes, X0
	079 Move X8, [X21]
	080 Move [X31+12], W0
	081 Add X1, X31, 12
	082 Move X0, X8
	083 Call 0x1C17E04
	084 Move X19, X0
	085 Add X0, X31, 24
	086 Move X1, X31
	087 Call TimeSpan.get_Seconds, X0
	088 Move X8, [X21]
	089 Move [X31+8], W0
	090 Add X1, X31, 8
	091 Move X0, X8
	092 Call 0x1C17E04
	093 Move X20, X0
	094 Add X0, X31, 24
	095 Move X1, X31
	096 Call TimeSpan.get_Milliseconds, X0
	097 Move X8, [X21]
	098 Move [X31+4], W0
	099 Add X1, X31, 4
	100 Move X0, X8
	101 Call 0x1C17E04
	102 Move X8, [X22]
	103 Move X3, X0
	104 Move X1, X19
	105 Move X2, X20
	106 Move X0, X8
	107 Move X4, X31
	108 Call String.Format, X0, X1, X2, X3
	109 Add X0, X31, 24
	110 Move X1, X31
	111 Call TimeSpan.get_Seconds, X0
	112 Move X8, [X21]
	113 Move [X31+12], W0
	114 Add X1, X31, 12
	115 Move X0, X8
	116 Call 0x1C17E04
	117 Move X19, X0
	118 Add X0, X31, 24
	119 Move X1, X31
	120 Call TimeSpan.get_Milliseconds, X0
	121 Move X8, [X21]
	122 Move [X31+8], W0
	123 Add X1, X31, 8
	124 Move X0, X8
	125 Call 0x1C17E04
	126 Move X8, 0x229B000
	127 Move X8, [X8+2768]
	128 Move X2, X0
	129 Move X1, X19
	130 Move X3, X31
	131 Move X8, [X8]
	132 Move X0, X8
	133 Call String.Format, X0, X1, X2
	134 Move X20, [X31+48]
	135 Move X19, [X31+56]
	136 Move X22, [X31+32]
	137 Move X21, [X31+40]
	138 Move X30, [X31+16]
	139 Add X31, X31, 64
	140 Return X0
	141 Call 0x1C17F20

Method: System.Void TrackValues()

Disassembly:
	0x01E622A0 ADRP X19, 0x2295000
	0x01E622A4 LDRB W8, [X22 + 0xBF]
	0x01E622A8 LDR X21, [X21 + 0xF78]
	0x01E622AC LDR X19, [X19 + 0xF80]
	0x01E622B0 MOV X20, X0
	0x01E622B4 TBNZ X8, 0x0, 0x1E622F0
	0x01E622B8 ADRP X0, 0x2295000
	0x01E622BC LDR X0, [X0 + 0xF80]
	0x01E622C0 BL 0x1C16CF4
	0x01E622C4 ADRP X0, 0x229A000
	0x01E622C8 LDR X0, [X0 + 0xBA0]
	0x01E622CC BL 0x1C16CF4
	0x01E622D0 ADRP X0, 0x2295000
	0x01E622D4 LDR X0, [X0 + 0xF78]
	0x01E622D8 BL 0x1C16CF4
	0x01E622DC ADRP X0, 0x2293000
	0x01E622E0 LDR X0, [X0 + 0x278]
	0x01E622E4 BL 0x1C16CF4
	0x01E622E8 MOVZ W8, 0x1

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0+40]
	004 Compare X8, 0
	005 JumpIfEqual {18}
	006 Move X19, X0
	007 Move X0, [X8+16]
	008 Compare X0, 0
	009 JumpIfEqual {21}
	010 Move X1, X31
	011 Call PhotonPeer.get_RoundTripTime, X0
	012 Move W8, [X19+60]
	013 NotImplemented "Instruction CMP not yet implemented."
	014 Move [X19+60], W0
	015 Move W8, [X19+64]
	016 NotImplemented "Instruction CMP not yet implemented."
	017 Move [X19+64], W0
	018 Move X30, [X31+16]
	019 Move X19, [X31+24]
	020 Return 
	021 Call 0x1C17F20

Method: System.Void LogStats()

Disassembly:
	0x01E622EC STRB W8, [X22 + 0xBF]
	0x01E622F0 LDR X0, [X21]
	0x01E622F4 MOVI V0.2D, 0x0
	0x01E622F8 STR X31, [X31 + 0x50]
	0x01E622FC STP V0, V0, [X31 + 0x30]

ISIL:
	001 Move X0, [X0+40]
	002 Compare X0, 0
	003 JumpIfEqual {7}
	004 Move X1, X31
	005 Call LoadBalancingClient.get_State, X0
	006 Return 
	007 Return 

Method: System.Void LogBasics()

Disassembly:
	0x01E614B0 STRB W9, [X19 + 0x12]
	0x01E614B4 LDRB W9, [X8 + 0x1]
	0x01E614B8 STRB W9, [X19 + 0x13]
	0x01E614BC LDRB W9, [X8 + 0x2]
	0x01E614C0 STRB W9, [X19 + 0x14]
	0x01E614C4 LDRB W9, [X8 + 0x3]
	0x01E614C8 STRB W9, [X19 + 0x15]
	0x01E614CC LDRB W8, [X8 + 0x4]
	0x01E614D0 STRB W8, [X19 + 0x16]
	0x01E614D4 BL 0x1E4820C
	0x01E614D8 LDR W8, [X19 + 0x1C]
	0x01E614DC AND W9, W0, 0x1
	0x01E614E0 MOVZ W10, 0x1
	0x01E614E4 STRB W9, [X19 + 0x17]
	0x01E614E8 CMP W8, 0x8000
	0x01E614EC CSET W8, LT
	0x01E614F0 STRB W8, [X19 + 0x18]
	0x01E614F4 STRB W10, [X19 + 0x19]
	0x01E614F8 LDP X20, X19, [X31 + 0x10]
	0x01E614FC LDP X30, X21, [X31], #0x20
	0x01E61500 RET
	0x01E61504 BL 0x1C16F20
	0x01E61508 STR X30, [X31 - 0x30]!
	0x01E6150C STP X22, X21, [X31 + 0x10]
	0x01E61510 STP X20, X19, [X31 + 0x20]
	0x01E61514 ADRP X22, 0x2578000
	0x01E61518 ADRP X21, 0x229B000
	0x01E6151C LDRB W8, [X22 + 0xB2]
	0x01E61520 LDR X21, [X21 + 0x418]
	0x01E61524 MOV W20, W1
	0x01E61528 MOV X19, X0
	0x01E6152C TBNZ X8, 0x0, 0x1E61544
	0x01E61530 ADRP X0, 0x229B000
	0x01E61534 LDR X0, [X0 + 0x418]
	0x01E61538 BL 0x1C16CF4
	0x01E6153C MOVZ W8, 0x1
	0x01E61540 STRB W8, [X22 + 0xB2]
	0x01E61544 MOV X0, X19
	0x01E61548 MOV X1, X31
	0x01E6154C STRB W31, [X19 + 0x10]
	0x01E61550 BL 0x33BDD8C
	0x01E61554 LDR X0, [X21]
	0x01E61558 LDR W8, [X0 + 0xE0]
	0x01E6155C CBNZ W8, 0x1E61564
	0x01E61560 BL 0x1C16DFC
	0x01E61564 UBFM W8, W20, 0x1C, 0x1F
	0x01E61568 STRB W8, [X19 + 0x10]
	0x01E6156C UBFM W8, W20, 0x19, 0x1B
	0x01E61570 STRB W8, [X19 + 0x11]
	0x01E61574 UBFM W8, W20, 0x17, 0x17
	0x01E61578 STRB W8, [X19 + 0x12]
	0x01E6157C UBFM W8, W20, 0x16, 0x16
	0x01E61580 STRB W8, [X19 + 0x13]
	0x01E61584 UBFM W8, W20, 0x15, 0x15
	0x01E61588 STRB W8, [X19 + 0x14]
	0x01E6158C UBFM W8, W20, 0x14, 0x14
	0x01E61590 STRB W8, [X19 + 0x15]
	0x01E61594 UBFM W8, W20, 0x13, 0x13
	0x01E61598 STRB W8, [X19 + 0x16]
	0x01E6159C UBFM W8, W20, 0x12, 0x12
	0x01E615A0 STRB W8, [X19 + 0x17]
	0x01E615A4 UBFM W8, W20, 0x11, 0x11
	0x01E615A8 STRB W8, [X19 + 0x18]
	0x01E615AC UBFM W8, W20, 0x10, 0x10
	0x01E615B0 AND W9, W20, 0xFFFF
	0x01E615B4 STRB W8, [X19 + 0x19]
	0x01E615B8 STR W9, [X19 + 0x1C]
	0x01E615BC LDP X20, X19, [X31 + 0x20]
	0x01E615C0 LDP X22, X21, [X31 + 0x10]
	0x01E615C4 LDR X30, [X31], #0x30
	0x01E615C8 RET
	0x01E615CC LDR W8, [X0]
	0x01E615D0 ASRV W8, W8, W1
	0x01E615D4 AND W0, W8, W2, 0x0
	0x01E615D8 RET
	0x01E615DC LDR W8, [X0]
	0x01E615E0 LSRV W8, W8, W1
	0x01E615E4 AND W0, W8, 0x1
	0x01E615E8 RET
	0x01E615EC STP X30, X21, [X31 - 0x20]!
	0x01E615F0 STP X20, X19, [X31 + 0x10]
	0x01E615F4 ADRP X21, 0x2578000
	0x01E615F8 ADRP X20, 0x229B000
	0x01E615FC LDRB W8, [X21 + 0xB3]
	0x01E61600 LDR X20, [X20 + 0x418]
	0x01E61604 MOV X19, X0
	0x01E61608 TBNZ X8, 0x0, 0x1E61620
	0x01E6160C ADRP X0, 0x229B000
	0x01E61610 LDR X0, [X0 + 0x418]
	0x01E61614 BL 0x1C16CF4
	0x01E61618 MOVZ W8, 0x1
	0x01E6161C STRB W8, [X21 + 0xB3]
	0x01E61620 LDR X0, [X20]
	0x01E61624 LDRB W20, [X19 + 0x10]
	0x01E61628 LDR W8, [X0 + 0xE0]
	0x01E6162C CBNZ W8, 0x1E61634
	0x01E61630 BL 0x1C16DFC
	0x01E61634 LDRB W8, [X19 + 0x11]
	0x01E61638 LDRB W12, [X19 + 0x15]
	0x01E6163C LDRB W9, [X19 + 0x12]
	0x01E61640 LDRB W11, [X19 + 0x14]
	0x01E61644 LDRB W10, [X19 + 0x13]
	0x01E61648 UBFM W8, W8, 0x7, 0x6
	0x01E6164C LDRB W13, [X19 + 0x16]
	0x01E61650 ORR W8, W8, W20, 0x1C
	0x01E61654 UBFM W12, W12, 0xC, 0xB
	0x01E61658 CMP W9, 0x0
	0x01E6165C ORR W11, W12, W11, 0x15
	0x01E61660 ORR W12, W8, 0x800000
	0x01E61664 LDRB W9, [X19 + 0x17]
	0x01E61668 CSEL W8, W8, W12, EQ
	0x01E6166C LDRB W14, [X19 + 0x18]
	0x01E61670 CMP W10, 0x0
	0x01E61674 ORR W10, W8, 0x400000
	0x01E61678 LDRB W12, [X19 + 0x19]
	0x01E6167C CSEL W8, W8, W10, EQ
	0x01E61680 ORR W10, W11, W13, 0x13
	0x01E61684 LDRH W15, [X19 + 0x1C]
	0x01E61688 ORR W8, W10, W8, 0x0
	0x01E6168C ORR W8, W8, W9, 0x12
	0x01E61690 LDP X20, X19, [X31 + 0x10]
	0x01E61694 ORR W8, W8, W14, 0x11
	0x01E61698 ORR W8, W8, W12, 0x10
	0x01E6169C ORR W0, W8, W15, 0x0
	0x01E616A0 LDP X30, X21, [X31], #0x20
	0x01E616A4 RET
	0x01E616A8 LDR W8, [X0]
	0x01E616AC AND W9, W1, 0xFF
	0x01E616B0 LSLV W9, W9, W2
	0x01E616B4 ORR W8, W8, W9, 0x0
	0x01E616B8 STR W8, [X0]
	0x01E616BC RET
	0x01E616C0 LDR W8, [X0]
	0x01E616C4 MOVZ W9, 0x1
	0x01E616C8 LSLV W9, W9, W2
	0x01E616CC ANDS W31, W1, 0x1
	0x01E616D0 BIC W10, W8, W9, 0x0
	0x01E616D4 ORR W8, W8, W9, 0x0
	0x01E616D8 CSEL W8, W8, W10, NE
	0x01E616DC STR W8, [X0]
	0x01E616E0 RET
	0x01E616E4 STR X30, [X31 - 0x40]!
	0x01E616E8 STP X24, X23, [X31 + 0x10]
	0x01E616EC STP X22, X21, [X31 + 0x20]
	0x01E616F0 STP X20, X19, [X31 + 0x30]
	0x01E616F4 ADRP X20, 0x2578000
	0x01E616F8 ADRP X22, 0x2292000
	0x01E616FC ADRP X21, 0x229B000
	0x01E61700 LDRB W8, [X20 + 0xB4]
	0x01E61704 LDR X22, [X22 + 0x8F0]
	0x01E61708 LDR X21, [X21 + 0x418]
	0x01E6170C MOV X19, X0
	0x01E61710 TBNZ X8, 0x0, 0x1E617C4
	0x01E61714 ADRP X0, 0x2293000
	0x01E61718 LDR X0, [X0 + 0x9D8]
	0x01E6171C BL 0x1C16CF4
	0x01E61720 ADRP X0, 0x2292000
	0x01E61724 LDR X0, [X0 + 0x758]
	0x01E61728 BL 0x1C16CF4
	0x01E6172C ADRP X0, 0x2292000
	0x01E61730 LDR X0, [X0 + 0x8F0]
	0x01E61734 BL 0x1C16CF4
	0x01E61738 ADRP X0, 0x229B000
	0x01E6173C LDR X0, [X0 + 0x418]
	0x01E61740 BL 0x1C16CF4
	0x01E61744 ADRP X0, 0x229B000
	0x01E61748 LDR X0, [X0 + 0xAD8]
	0x01E6174C BL 0x1C16CF4
	0x01E61750 ADRP X0, 0x229B000
	0x01E61754 LDR X0, [X0 + 0xAE0]
	0x01E61758 BL 0x1C16CF4
	0x01E6175C ADRP X0, 0x229B000
	0x01E61760 LDR X0, [X0 + 0xAE8]
	0x01E61764 BL 0x1C16CF4
	0x01E61768 ADRP X0, 0x229B000
	0x01E6176C LDR X0, [X0 + 0xAF0]
	0x01E61770 BL 0x1C16CF4
	0x01E61774 ADRP X0, 0x229B000
	0x01E61778 LDR X0, [X0 + 0xAF8]
	0x01E6177C BL 0x1C16CF4
	0x01E61780 ADRP X0, 0x229B000
	0x01E61784 LDR X0, [X0 + 0xB00]
	0x01E61788 BL 0x1C16CF4
	0x01E6178C ADRP X0, 0x229B000
	0x01E61790 LDR X0, [X0 + 0xB08]
	0x01E61794 BL 0x1C16CF4
	0x01E61798 ADRP X0, 0x229B000
	0x01E6179C LDR X0, [X0 + 0xB10]
	0x01E617A0 BL 0x1C16CF4
	0x01E617A4 ADRP X0, 0x229B000
	0x01E617A8 LDR X0, [X0 + 0xB18]
	0x01E617AC BL 0x1C16CF4
	0x01E617B0 ADRP X0, 0x229B000
	0x01E617B4 LDR X0, [X0 + 0xB20]
	0x01E617B8 BL 0x1C16CF4
	0x01E617BC MOVZ W8, 0x1
	0x01E617C0 STRB W8, [X20 + 0xB4]
	0x01E617C4 LDR X0, [X22]
	0x01E617C8 BL 0x1C16F10
	0x01E617CC MOV X1, X31
	0x01E617D0 MOV X20, X0
	0x01E617D4 BL 0x3231AC4
	0x01E617D8 LDR X0, [X21]
	0x01E617DC LDR W8, [X0 + 0xE0]
	0x01E617E0 CBNZ W8, 0x1E617EC
	0x01E617E4 BL 0x1C16DFC
	0x01E617E8 LDR X0, [X21]
	0x01E617EC LDR X8, [X0 + 0xB8]
	0x01E617F0 LDR X8, [X8]
	0x01E617F4 CBZ X8, 0x1E619C4
	0x01E617F8 LDRB W9, [X19 + 0x11]
	0x01E617FC LDR W10, [X8 + 0x18]
	0x01E61800 CMP W9, W10
	0x01E61804 B.CS 0x1E619C8
	0x01E61808 ADRP X10, 0x2293000
	0x01E6180C LDR X10, [X10 + 0x9D8]
	0x01E61810 ADD X8, X8, X9, 0x3, LSL
	0x01E61814 LDRB W9, [X19 + 0x10]
	0x01E61818 ADRP X23, 0x2292000
	0x01E6181C LDR X0, [X10]
	0x01E61820 ADRP X24, 0x229B000
	0x01E61824 LDR X21, [X8 + 0x20]
	0x01E61828 LDR X23, [X23 + 0x758]
	0x01E6182C LDR X24, [X24 + 0xB00]
	0x01E61830 ADD X1, X31, 0xC
	0x01E61834 STRB W9, [X31 + 0xC]
	0x01E61838 BL 0x1C16E04
	0x01E6183C MOV X22, X0
	0x01E61840 LDR W8, [X19 + 0x1C]
	0x01E61844 LDR X0, [X23]
	0x01E61848 ADD X1, X31, 0x8
	0x01E6184C STR W8, [X31 + 0x8]
	0x01E61850 BL 0x1C16E04
	0x01E61854 LDR X8, [X24]
	0x01E61858 MOV X3, X0
	0x01E6185C MOV X1, X22
	0x01E61860 MOV X2, X21
	0x01E61864 MOV X0, X8
	0x01E61868 MOV X4, X31
	0x01E6186C BL 0x3227C18
	0x01E61870 CBZ X20, 0x1E619C4
	0x01E61874 MOV X1, X0
	0x01E61878 MOV X0, X20
	0x01E6187C MOV X2, X31
	0x01E61880 BL 0x32333E0
	0x01E61884 LDRB W8, [X19 + 0x12]
	0x01E61888 CBZ W8, 0x1E618A4
	0x01E6188C ADRP X8, 0x229B000
	0x01E61890 LDR X8, [X8 + 0xB18]
	0x01E61894 MOV X0, X20
	0x01E61898 MOV X2, X31
	0x01E6189C LDR X1, [X8]
	0x01E618A0 BL 0x32333E0
	0x01E618A4 LDRB W8, [X19 + 0x13]
	0x01E618A8 CBZ W8, 0x1E618CC
	0x01E618AC ADRP X8, 0x229B000
	0x01E618B0 LDR X8, [X8 + 0xAE0]
	0x01E618B4 MOV X0, X20
	0x01E618B8 MOV X2, X31
	0x01E618BC LDR X1, [X8]
	0x01E618C0 BL 0x32333E0
	0x01E618C4 LDRB W8, [X19 + 0x13]
	0x01E618C8 CBNZ W8, 0x1E618EC
	0x01E618CC LDRB W8, [X19 + 0x14]
	0x01E618D0 CBZ W8, 0x1E618EC
	0x01E618D4 ADRP X8, 0x229B000
	0x01E618D8 LDR X8, [X8 + 0xAF8]
	0x01E618DC MOV X0, X20
	0x01E618E0 MOV X2, X31
	0x01E618E4 LDR X1, [X8]
	0x01E618E8 BL 0x32333E0
	0x01E618EC LDRB W8, [X19 + 0x15]
	0x01E618F0 CBZ W8, 0x1E61914
	0x01E618F4 ADRP X8, 0x229B000
	0x01E618F8 LDR X8, [X8 + 0xB10]
	0x01E618FC MOV X0, X20
	0x01E61900 MOV X2, X31
	0x01E61904 LDR X1, [X8]
	0x01E61908 BL 0x32333E0
	0x01E6190C LDRB W8, [X19 + 0x15]
	0x01E61910 CBNZ W8, 0x1E61934
	0x01E61914 LDRB W8, [X19 + 0x16]
	0x01E61918 CBZ W8, 0x1E61934
	0x01E6191C ADRP X8, 0x229B000
	0x01E61920 LDR X8, [X8 + 0xAD8]
	0x01E61924 MOV X0, X20
	0x01E61928 MOV X2, X31
	0x01E6192C LDR X1, [X8]
	0x01E61930 BL 0x32333E0
	0x01E61934 LDRB W8, [X19 + 0x17]
	0x01E61938 CBNZ W8, 0x1E61954
	0x01E6193C ADRP X8, 0x229B000
	0x01E61940 LDR X8, [X8 + 0xAF0]
	0x01E61944 MOV X0, X20
	0x01E61948 MOV X2, X31
	0x01E6194C LDR X1, [X8]
	0x01E61950 BL 0x32333E0
	0x01E61954 ADRP X21, 0x229B000
	0x01E61958 ADRP X22, 0x229B000
	0x01E6195C LDRB W8, [X19 + 0x18]
	0x01E61960 LDR X21, [X21 + 0xAE8]
	0x01E61964 LDR X22, [X22 + 0xB08]
	0x01E61968 CBNZ W8, 0x1E61984
	0x01E6196C ADRP X8, 0x229B000
	0x01E61970 LDR X8, [X8 + 0xB20]
	0x01E61974 MOV X0, X20
	0x01E61978 MOV X2, X31
	0x01E6197C LDR X1, [X8]
	0x01E61980 BL 0x32333E0
	0x01E61984 LDRB W8, [X19 + 0x19]
	0x01E61988 MOV X0, X20
	0x01E6198C MOV X2, X31
	0x01E61990 CMP W8, 0x0
	0x01E61994 CSEL X8, X21, X22, EQ
	0x01E61998 LDR X1, [X8]
	0x01E6199C BL 0x32333E0
	0x01E619A0 LDR X8, [X20]
	0x01E619A4 MOV X0, X20
	0x01E619A8 LDP X9, X1, [X8 + 0x168]
	0x01E619AC BLR X9
	0x01E619B0 LDP X20, X19, [X31 + 0x30]
	0x01E619B4 LDP X22, X21, [X31 + 0x20]
	0x01E619B8 LDP X24, X23, [X31 + 0x10]
	0x01E619BC LDR X30, [X31], #0x40
	0x01E619C0 RET
	0x01E619C4 BL 0x1C16F20
	0x01E619C8 BL 0x1C16F28
	0x01E619CC STR X30, [X31 - 0x20]!
	0x01E619D0 STP X20, X19, [X31 + 0x10]
	0x01E619D4 ADRP X19, 0x2578000
	0x01E619D8 ADRP X20, 0x2292000
	0x01E619DC LDRB W8, [X19 + 0xB5]
	0x01E619E0 LDR X20, [X20 + 0xAC8]
	0x01E619E4 TBNZ X8, 0x0, 0x1E61A68
	0x01E619E8 ADRP X0, 0x2292000
	0x01E619EC LDR X0, [X0 + 0xAC8]
	0x01E619F0 BL 0x1C16CF4
	0x01E619F4 ADRP X0, 0x229B000
	0x01E619F8 LDR X0, [X0 + 0x418]
	0x01E619FC BL 0x1C16CF4
	0x01E61A00 ADRP X0, 0x229B000
	0x01E61A04 LDR X0, [X0 + 0xB28]
	0x01E61A08 BL 0x1C16CF4
	0x01E61A0C ADRP X0, 0x229B000
	0x01E61A10 LDR X0, [X0 + 0xB30]
	0x01E61A14 BL 0x1C16CF4
	0x01E61A18 ADRP X0, 0x229B000
	0x01E61A1C LDR X0, [X0 + 0xB38]
	0x01E61A20 BL 0x1C16CF4
	0x01E61A24 ADRP X0, 0x229B000
	0x01E61A28 LDR X0, [X0 + 0xB40]
	0x01E61A2C BL 0x1C16CF4
	0x01E61A30 ADRP X0, 0x229B000
	0x01E61A34 LDR X0, [X0 + 0xB48]
	0x01E61A38 BL 0x1C16CF4
	0x01E61A3C ADRP X0, 0x229B000
	0x01E61A40 LDR X0, [X0 + 0xB50]
	0x01E61A44 BL 0x1C16CF4
	0x01E61A48 ADRP X0, 0x229B000
	0x01E61A4C LDR X0, [X0 + 0xB58]
	0x01E61A50 BL 0x1C16CF4
	0x01E61A54 ADRP X0, 0x229B000
	0x01E61A58 LDR X0, [X0 + 0xB60]
	0x01E61A5C BL 0x1C16CF4
	0x01E61A60 MOVZ W8, 0x1
	0x01E61A64 STRB W8, [X19 + 0xB5]
	0x01E61A68 LDR X0, [X20]
	0x01E61A6C MOVZ W1, 0x8
	0x01E61A70 BL 0x1C16D6C
	0x01E61A74 CBZ X0, 0x1E61B5C
	0x01E61A78 LDR W8, [X0 + 0x18]
	0x01E61A7C CBZ W8, 0x1E61B58
	0x01E61A80 ADRP X9, 0x229B000
	0x01E61A84 LDR X9, [X9 + 0xB58]
	0x01E61A88 CMP W8, 0x1
	0x01E61A8C LDR X9, [X9]
	0x01E61A90 STR X9, [X0 + 0x20]
	0x01E61A94 B.EQ 0x1E61B58
	0x01E61A98 ADRP X9, 0x229B000
	0x01E61A9C LDR X9, [X9 + 0xB50]
	0x01E61AA0 CMP W8, 0x2
	0x01E61AA4 LDR X9, [X9]
	0x01E61AA8 STR X9, [X0 + 0x28]
	0x01E61AAC B.LS 0x1E61B58
	0x01E61AB0 ADRP X9, 0x229B000
	0x01E61AB4 LDR X9, [X9 + 0xB28]
	0x01E61AB8 CMP W8, 0x3
	0x01E61ABC LDR X9, [X9]
	0x01E61AC0 STR X9, [X0 + 0x30]
	0x01E61AC4 B.EQ 0x1E61B58
	0x01E61AC8 ADRP X9, 0x229B000
	0x01E61ACC LDR X9, [X9 + 0xB38]
	0x01E61AD0 CMP W8, 0x4
	0x01E61AD4 LDR X9, [X9]
	0x01E61AD8 STR X9, [X0 + 0x38]
	0x01E61ADC B.LS 0x1E61B58
	0x01E61AE0 ADRP X9, 0x229B000
	0x01E61AE4 LDR X9, [X9 + 0xB40]
	0x01E61AE8 CMP W8, 0x5
	0x01E61AEC LDR X9, [X9]
	0x01E61AF0 STR X9, [X0 + 0x40]
	0x01E61AF4 B.EQ 0x1E61B58
	0x01E61AF8 ADRP X9, 0x229B000
	0x01E61AFC LDR X9, [X9 + 0xB30]
	0x01E61B00 CMP W8, 0x6
	0x01E61B04 LDR X9, [X9]
	0x01E61B08 STR X9, [X0 + 0x48]
	0x01E61B0C B.LS 0x1E61B58
	0x01E61B10 ADRP X9, 0x229B000
	0x01E61B14 LDR X9, [X9 + 0xB48]
	0x01E61B18 CMP W8, 0x7
	0x01E61B1C LDR X9, [X9]
	0x01E61B20 STR X9, [X0 + 0x50]
	0x01E61B24 B.EQ 0x1E61B58
	0x01E61B28 ADRP X8, 0x229B000
	0x01E61B2C LDR X8, [X8 + 0xB60]
	0x01E61B30 ADRP X9, 0x229B000
	0x01E61B34 LDR X8, [X8]
	0x01E61B38 LDR X9, [X9 + 0x418]
	0x01E61B3C LDP X20, X19, [X31 + 0x10]
	0x01E61B40 STR X8, [X0 + 0x58]
	0x01E61B44 LDR X8, [X9]
	0x01E61B48 LDR X8, [X8 + 0xB8]
	0x01E61B4C STR X0, [X8]
	0x01E61B50 LDR X30, [X31], #0x20
	0x01E61B54 RET
	0x01E61B58 BL 0x1C16F28
	0x01E61B5C BL 0x1C16F20
	0x01E61B60 MOV X1, X31
	0x01E61B64 B 0x33BDD8C
	0x01E61B68 LDR X0, [X0 + 0x10]
	0x01E61B6C RET
	0x01E61B70 STR X1, [X0 + 0x10]
	0x01E61B74 RET
	0x01E61B78 LDR W0, [X0 + 0x18]
	0x01E61B7C RET
	0x01E61B80 STR W1, [X0 + 0x18]
	0x01E61B84 RET
	0x01E61B88 LDR W0, [X0 + 0x18]
	0x01E61B8C RET
	0x01E61B90 LDR X0, [X0 + 0x20]
	0x01E61B94 RET
	0x01E61B98 STR X1, [X0 + 0x20]
	0x01E61B9C RET
	0x01E61BA0 LDR X0, [X0 + 0x20]
	0x01E61BA4 RET
	0x01E61BA8 LDR X0, [X0 + 0x28]
	0x01E61BAC RET
	0x01E61BB0 STR X1, [X0 + 0x28]
	0x01E61BB4 RET
	0x01E61BB8 SUB X31, X31, 0x30
	0x01E61BBC STP X30, X21, [X31 + 0x10]
	0x01E61BC0 STP X20, X19, [X31 + 0x20]
	0x01E61BC4 ADRP X21, 0x2578000
	0x01E61BC8 LDRB W8, [X21 + 0xB6]
	0x01E61BCC MOV X20, X1
	0x01E61BD0 MOV X19, X0
	0x01E61BD4 TBNZ X8, 0x0, 0x1E61C04
	0x01E61BD8 ADRP X0, 0x2293000
	0x01E61BDC LDR X0, [X0 + 0x9D8]
	0x01E61BE0 BL 0x1C16CF4
	0x01E61BE4 ADRP X0, 0x2292000
	0x01E61BE8 LDR X0, [X0 + 0x720]
	0x01E61BEC BL 0x1C16CF4
	0x01E61BF0 ADRP X0, 0x2294000
	0x01E61BF4 LDR X0, [X0 + 0x278]
	0x01E61BF8 BL 0x1C16CF4
	0x01E61BFC MOVZ W8, 0x1
	0x01E61C00 STRB W8, [X21 + 0xB6]
	0x01E61C04 MOV X0, X19
	0x01E61C08 MOV X1, X31
	0x01E61C0C STR X31, [X31 + 0x8]
	0x01E61C10 BL 0x33BDD8C
	0x01E61C14 CBZ X20, 0x1E61D64
	0x01E61C18 LDR X0, [X20 + 0x20]
	0x01E61C1C CBZ X0, 0x1E61D64
	0x01E61C20 ADD X2, X31, 0x8
	0x01E61C24 MOVZ W1, 0xD1
	0x01E61C28 MOV X3, X31
	0x01E61C2C BL 0x34FC574
	0x01E61C30 TBZ X0, 0x0, 0x1E61C58
	0x01E61C34 LDR X8, [X31 + 0x8]
	0x01E61C38 CBZ X8, 0x1E61C54
	0x01E61C3C ADRP X9, 0x2294000
	0x01E61C40 LDR X9, [X9 + 0x278]
	0x01E61C44 LDR X10, [X8]
	0x01E61C48 LDR X9, [X9]
	0x01E61C4C CMP X10, X9
	0x01E61C50 CSEL X8, X8, X31, EQ
	0x01E61C54 STR X8, [X19 + 0x10]
	0x01E61C58 MOVN W8, 0x0
	0x01E61C5C STR W8, [X19 + 0x18]
	0x01E61C60 LDR X0, [X20 + 0x20]
	0x01E61C64 CBZ X0, 0x1E61D64
	0x01E61C68 ADD X2, X31, 0x8
	0x01E61C6C MOVZ W1, 0xCF
	0x01E61C70 MOV X3, X31
	0x01E61C74 BL 0x34FC574
	0x01E61C78 TBZ X0, 0x0, 0x1E61CB0
	0x01E61C7C LDR X0, [X31 + 0x8]
	0x01E61C80 CBZ X0, 0x1E61D64
	0x01E61C84 ADRP X8, 0x2293000
	0x01E61C88 LDR X8, [X8 + 0x9D8]
	0x01E61C8C LDR X9, [X0]
	0x01E61C90 LDR X1, [X8]
	0x01E61C94 LDR X8, [X9 + 0x40]
	0x01E61C98 LDR X9, [X1 + 0x40]
	0x01E61C9C CMP X8, X9
	0x01E61CA0 B.NE 0x1E61D68
	0x01E61CA4 BL 0x1C16E08
	0x01E61CA8 LDRB W8, [X0]
	0x01E61CAC STR W8, [X19 + 0x18]
	0x01E61CB0 LDR X0, [X20 + 0x20]
	0x01E61CB4 CBZ X0, 0x1E61D64
	0x01E61CB8 ADD X2, X31, 0x8
	0x01E61CBC MOVZ W1, 0xD0
	0x01E61CC0 MOV X3, X31
	0x01E61CC4 BL 0x34FC574
	0x01E61CC8 TBZ X0, 0x0, 0x1E61D14
	0x01E61CCC LDR X8, [X31 + 0x8]
	0x01E61CD0 CBZ X8, 0x1E61D10
	0x01E61CD4 ADRP X9, 0x2292000
	0x01E61CD8 LDR X9, [X9 + 0x720]
	0x01E61CDC LDR X10, [X8]
	0x01E61CE0 LDR X9, [X9]
	0x01E61CE4 LDRB W12, [X10 + 0x130]
	0x01E61CE8 LDRB W11, [X9 + 0x130]
	0x01E61CEC CMP W12, W11
	0x01E61CF0 B.CS 0x1E61CFC
	0x01E61CF4 MOV X8, X31
	0x01E61CF8 B 0x1E61D10
	0x01E61CFC LDR X10, [X10 + 0xC8]
	0x01E61D00 ADD X10, X10, X11, 0x3, LSL
	0x01E61D04 LDUR X10, [X10 - 0x8]
	0x01E61D08 CMP X10, X9
	0x01E61D0C CSEL X8, X8, X31, EQ
	0x01E61D10 STR X8, [X19 + 0x28]
	0x01E61D14 LDR X0, [X20 + 0x20]
	0x01E61D18 CBZ X0, 0x1E61D64
	0x01E61D1C ADD X2, X31, 0x8
	0x01E61D20 MOVZ W1, 0xCE
	0x01E61D24 MOV X3, X31
	0x01E61D28 BL 0x34FC574
	0x01E61D2C TBZ X0, 0x0, 0x1E61D54
	0x01E61D30 LDR X8, [X31 + 0x8]
	0x01E61D34 CBZ X8, 0x1E61D50
	0x01E61D38 ADRP X9, 0x2294000
	0x01E61D3C LDR X9, [X9 + 0x278]
	0x01E61D40 LDR X10, [X8]
	0x01E61D44 LDR X9, [X9]
	0x01E61D48 CMP X10, X9
	0x01E61D4C CSEL X8, X8, X31, EQ
	0x01E61D50 STR X8, [X19 + 0x20]
	0x01E61D54 LDP X20, X19, [X31 + 0x20]
	0x01E61D58 LDP X30, X21, [X31 + 0x10]
	0x01E61D5C ADD X31, X31, 0x30
	0x01E61D60 RET
	0x01E61D64 BL 0x1C16F20
	0x01E61D68 BL 0x1C171E0
	0x01E61D6C SUB X31, X31, 0x30
	0x01E61D70 STP X30, X21, [X31 + 0x10]
	0x01E61D74 STP X20, X19, [X31 + 0x20]
	0x01E61D78 ADRP X20, 0x2578000
	0x01E61D7C ADRP X21, 0x2292000
	0x01E61D80 LDRB W8, [X20 + 0xB7]
	0x01E61D84 LDR X21, [X21 + 0x9D0]
	0x01E61D88 MOV X19, X0
	0x01E61D8C TBNZ X8, 0x0, 0x1E61DC8
	0x01E61D90 ADRP X0, 0x2292000
	0x01E61D94 LDR X0, [X0 + 0x758]
	0x01E61D98 BL 0x1C16CF4
	0x01E61D9C ADRP X0, 0x2292000
	0x01E61DA0 LDR X0, [X0 + 0x9D0]
	0x01E61DA4 BL 0x1C16CF4
	0x01E61DA8 ADRP X0, 0x229A000
	0x01E61DAC LDR X0, [X0 + 0xE60]
	0x01E61DB0 BL 0x1C16CF4
	0x01E61DB4 ADRP X0, 0x229B000
	0x01E61DB8 LDR X0, [X0 + 0xB68]
	0x01E61DBC BL 0x1C16CF4
	0x01E61DC0 MOVZ W8, 0x1
	0x01E61DC4 STRB W8, [X20 + 0xB7]
	0x01E61DC8 LDR X0, [X21]
	0x01E61DCC MOVZ W1, 0x4
	0x01E61DD0 BL 0x1C16D6C
	0x01E61DD4 CBZ X0, 0x1E61F08
	0x01E61DD8 LDR X21, [X19 + 0x10]
	0x01E61DDC MOV X20, X0
	0x01E61DE0 CBZ X21, 0x1E61DF8
	0x01E61DE4 LDR X8, [X20]
	0x01E61DE8 MOV X0, X21
	0x01E61DEC LDR X1, [X8 + 0x40]
	0x01E61DF0 BL 0x1C16E00
	0x01E61DF4 CBZ X0, 0x1E61EFC
	0x01E61DF8 LDR W8, [X20 + 0x18]
	0x01E61DFC CBZ W8, 0x1E61EF8
	0x01E61E00 ADRP X8, 0x229A000
	0x01E61E04 LDR X8, [X8 + 0xE60]
	0x01E61E08 STR X21, [X20 + 0x20]
	0x01E61E0C LDR X21, [X19 + 0x28]
	0x01E61E10 LDR X0, [X8]
	0x01E61E14 LDR W8, [X0 + 0xE0]
	0x01E61E18 CBNZ W8, 0x1E61E20
	0x01E61E1C BL 0x1C16DFC
	0x01E61E20 MOVZ W1, 0x1
	0x01E61E24 MOV X0, X21
	0x01E61E28 MOV X2, X31
	0x01E61E2C BL 0x35201B0
	0x01E61E30 MOV X21, X0
	0x01E61E34 CBZ X0, 0x1E61E4C
	0x01E61E38 LDR X8, [X20]
	0x01E61E3C MOV X0, X21
	0x01E61E40 LDR X1, [X8 + 0x40]
	0x01E61E44 BL 0x1C16E00
	0x01E61E48 CBZ X0, 0x1E61EFC
	0x01E61E4C LDR W8, [X20 + 0x18]
	0x01E61E50 CMP W8, 0x1
	0x01E61E54 B.LS 0x1E61EF8
	0x01E61E58 ADRP X8, 0x2292000
	0x01E61E5C LDR X8, [X8 + 0x758]
	0x01E61E60 STR X21, [X20 + 0x28]
	0x01E61E64 LDR W9, [X19 + 0x18]
	0x01E61E68 ADD X1, X31, 0xC
	0x01E61E6C LDR X0, [X8]
	0x01E61E70 STR W9, [X31 + 0xC]
	0x01E61E74 BL 0x1C16E04
	0x01E61E78 MOV X21, X0
	0x01E61E7C CBZ X0, 0x1E61E94
	0x01E61E80 LDR X8, [X20]
	0x01E61E84 MOV X0, X21
	0x01E61E88 LDR X1, [X8 + 0x40]
	0x01E61E8C BL 0x1C16E00
	0x01E61E90 CBZ X0, 0x1E61EFC
	0x01E61E94 LDR W8, [X20 + 0x18]
	0x01E61E98 CMP W8, 0x2
	0x01E61E9C B.LS 0x1E61EF8
	0x01E61EA0 STR X21, [X20 + 0x30]
	0x01E61EA4 LDR X19, [X19 + 0x20]
	0x01E61EA8 CBZ X19, 0x1E61EC4
	0x01E61EAC LDR X8, [X20]
	0x01E61EB0 MOV X0, X19
	0x01E61EB4 LDR X1, [X8 + 0x40]
	0x01E61EB8 BL 0x1C16E00
	0x01E61EBC CBZ X0, 0x1E61EFC
	0x01E61EC0 LDR W8, [X20 + 0x18]
	0x01E61EC4 CMP W8, 0x3
	0x01E61EC8 B.LS 0x1E61EF8
	0x01E61ECC ADRP X8, 0x229B000
	0x01E61ED0 LDR X8, [X8 + 0xB68]
	0x01E61ED4 STR X19, [X20 + 0x38]
	0x01E61ED8 MOV X1, X20
	0x01E61EDC MOV X2, X31
	0x01E61EE0 LDR X0, [X8]
	0x01E61EE4 BL 0x3227C5C
	0x01E61EE8 LDP X20, X19, [X31 + 0x20]
	0x01E61EEC LDP X30, X21, [X31 + 0x10]
	0x01E61EF0 ADD X31, X31, 0x30
	0x01E61EF4 RET
	0x01E61EF8 BL 0x1C16F28
	0x01E61EFC BL 0x1C16F44
	0x01E61F00 MOV X1, X31
	0x01E61F04 BL 0x1C16DEC
	0x01E61F08 BL 0x1C16F20

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+32], X30
	003 Move [X31+48], X24
	004 Move [X31+56], X23
	005 Move [X31+64], X22
	006 Move [X31+72], X21
	007 Move [X31+80], X20
	008 Move [X31+88], X19
	009 Move X20, 0x2579000
	010 Move W8, [X20+176]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {105}
	016 Move X0, 0x2293000
	017 Move X0, [X0+2416]
	018 Call 0x1C17CF4
	019 Move X0, 0x229B000
	020 Move X0, [X0+3568]
	021 Call 0x1C17CF4
	022 Move X0, 0x229B000
	023 Move X0, [X0+3688]
	024 Call 0x1C17CF4
	025 Move X0, 0x229C000
	026 Move X0, [X0+1840]
	027 Call 0x1C17CF4
	028 Move X0, 0x229C000
	029 Move X0, [X0+1696]
	030 Call 0x1C17CF4
	031 Move X0, 0x2294000
	032 Move X0, [X0+440]
	033 Call 0x1C17CF4
	034 Move X0, 0x2295000
	035 Move X0, [X0+3704]
	036 Call 0x1C17CF4
	037 Move X0, 0x229C000
	038 Move X0, [X0+280]
	039 Call 0x1C17CF4
	040 Move X0, 0x2294000
	041 Move X0, [X0+464]
	042 Call 0x1C17CF4
	043 Move X0, 0x2293000
	044 Move X0, [X0+2512]
	045 Call 0x1C17CF4
	046 Move X0, 0x229B000
	047 Move X0, [X0+3808]
	048 Call 0x1C17CF4
	049 Move X0, 0x229C000
	050 Move X0, [X0+2632]
	051 Call 0x1C17CF4
	052 Move X0, 0x2293000
	053 Move X0, [X0+2288]
	054 Call 0x1C17CF4
	055 Move X0, 0x229C000
	056 Move X0, [X0+2640]
	057 Call 0x1C17CF4
	058 Move X0, 0x2293000
	059 Move X0, [X0+1728]
	060 Call 0x1C17CF4
	061 Move X0, 0x229C000
	062 Move X0, [X0+2648]
	063 Call 0x1C17CF4
	064 Move X0, 0x229C000
	065 Move X0, [X0+2656]
	066 Call 0x1C17CF4
	067 Move X0, 0x229C000
	068 Move X0, [X0+2664]
	069 Call 0x1C17CF4
	070 Move X0, 0x229C000
	071 Move X0, [X0+2672]
	072 Call 0x1C17CF4
	073 Move X0, 0x229C000
	074 Move X0, [X0+2680]
	075 Call 0x1C17CF4
	076 Move X0, 0x229C000
	077 Move X0, [X0+2688]
	078 Call 0x1C17CF4
	079 Move X0, 0x2293000
	080 Move X0, [X0+2104]
	081 Call 0x1C17CF4
	082 Move X0, 0x229C000
	083 Move X0, [X0+2696]
	084 Call 0x1C17CF4
	085 Move X0, 0x229C000
	086 Move X0, [X0+2704]
	087 Call 0x1C17CF4
	088 Move X0, 0x229C000
	089 Move X0, [X0+2712]
	090 Call 0x1C17CF4
	091 Move X0, 0x229B000
	092 Move X0, [X0+3664]
	093 Call 0x1C17CF4
	094 Move X0, 0x229C000
	095 Move X0, [X0+2720]
	096 Call 0x1C17CF4
	097 Move X0, 0x229C000
	098 Move X0, [X0+2728]
	099 Call 0x1C17CF4
	100 Move X0, 0x229C000
	101 Move X0, [X0+2736]
	102 Call 0x1C17CF4
	103 Move W8, 1
	104 Move [X20+176], W8
	105 Move X8, [X19+40]
	106 Compare X8, 0
	107 JumpIfEqual {728}
	108 Move X8, 0x2294000
	109 Move X8, [X8+464]
	110 Move X20, 0x229C000
	111 Move X22, 0x2293000
	112 Move X0, [X8]
	113 Move X20, [X20+280]
	114 Move X22, [X22+2416]
	115 Call 0x1C17F10
	116 Move X2, [X20]
	117 Move W1, 10
	118 Move X21, X0
	119 Call List`1<Object>..ctor, X0, X1
	120 Move X0, [X22]
	121 Move W8, [X0+224]
	122 Compare W8, 0
	123 JumpIfNotEqual {125}
	124 Call 0x1C17DFC
	125 Move X0, X31
	126 Call Application.get_unityVersion
	127 Compare X21, 0
	128 JumpIfEqual {737}
	129 Move X20, 0x2294000
	130 Move X20, [X20+440]
	131 Move W10, [X21+28]
	132 Move X8, [X21+16]
	133 Move X9, [X20]
	134 Add W10, W10, 1
	135 Move [X21+28], W10
	136 Compare X8, 0
	137 JumpIfEqual {737}
	138 NotImplemented "Instruction LDRSW not yet implemented."
	139 Move W11, [X8+24]
	140 Move X22, 0x229C000
	141 Move X22, [X22+2632]
	142 Move X1, X0
	143 NotImplemented "Instruction CMP not yet implemented."
	144 Add W9, W10, 1
	145 Add X8, X8, X10
	146 Move [X21+24], W9
	147 Move [X8+32], X1
	148 Move X8, [X9+32]
	149 Move X0, X21
	150 Move X8, [X8+192]
	151 Move X2, [X8+112]
	152 Call List`1<Object>.AddWithResize, X0, X1
	153 Move X0, X31
	154 Call Application.get_platform
	155 Move X8, [X22]
	156 Move TEMP, 0
	157 Not TEMP
	158 Move X9, TEMP
	159 Move [X31+24], W0
	160 Add X0, X31, 8
	161 Move X1, X31
	162 Move [X31+8], X8
	163 Move [X31+16], X9
	164 Call Enum.ToString, X0
	165 Move W10, [X21+28]
	166 Move X8, [X21+16]
	167 Move X9, [X20]
	168 Add W10, W10, 1
	169 Move [X21+28], W10
	170 Compare X8, 0
	171 JumpIfEqual {737}
	172 NotImplemented "Instruction LDRSW not yet implemented."
	173 Move W11, [X8+24]
	174 Move X1, X0
	175 NotImplemented "Instruction CMP not yet implemented."
	176 Add W9, W10, 1
	177 Add X8, X8, X10
	178 Move [X21+24], W9
	179 Move [X8+32], X1
	180 Move X8, [X9+32]
	181 Move X0, X21
	182 Move X8, [X8+192]
	183 Move X2, [X8+112]
	184 Call List`1<Object>.AddWithResize, X0, X1
	185 Move X0, X31
	186 Call RuntimeUnityFlagsSetup.get_IsENABLE_IL2CPP
	187 Move TEMP, X0
	188 And TEMP, TEMP, 1
	189 Compare TEMP, 1
	190 JumpIfNotEqual {213}
	191 Move X8, 0x229C000
	192 Move X8, [X8+2696]
	193 Move W10, [X21+28]
	194 Move X9, [X20]
	195 Move X1, [X8]
	196 Move X8, [X21+16]
	197 Add W10, W10, 1
	198 Move [X21+28], W10
	199 Compare X8, 0
	200 JumpIfEqual {737}
	201 NotImplemented "Instruction LDRSW not yet implemented."
	202 Move W11, [X8+24]
	203 NotImplemented "Instruction CMP not yet implemented."
	204 Add W9, W10, 1
	205 Add X8, X8, X10
	206 Move [X21+24], W9
	207 Move [X8+32], X1
	208 Move X8, [X9+32]
	209 Move X0, X21
	210 Move X8, [X8+192]
	211 Move X2, [X8+112]
	212 Call List`1<Object>.AddWithResize, X0, X1
	213 Move X0, X31
	214 Call RuntimeUnityFlagsSetup.get_IsENABLE_MONO
	215 Move TEMP, X0
	216 And TEMP, TEMP, 1
	217 Compare TEMP, 1
	218 JumpIfNotEqual {241}
	219 Move X8, 0x229C000
	220 Move X8, [X8+2664]
	221 Move W10, [X21+28]
	222 Move X9, [X20]
	223 Move X1, [X8]
	224 Move X8, [X21+16]
	225 Add W10, W10, 1
	226 Move [X21+28], W10
	227 Compare X8, 0
	228 JumpIfEqual {737}
	229 NotImplemented "Instruction LDRSW not yet implemented."
	230 Move W11, [X8+24]
	231 NotImplemented "Instruction CMP not yet implemented."
	232 Add W9, W10, 1
	233 Add X8, X8, X10
	234 Move [X21+24], W9
	235 Move [X8+32], X1
	236 Move X8, [X9+32]
	237 Move X0, X21
	238 Move X8, [X8+192]
	239 Move X2, [X8+112]
	240 Call List`1<Object>.AddWithResize, X0, X1
	241 Move X0, X31
	242 Call RuntimeUnityFlagsSetup.get_IsNET_4_6
	243 Move TEMP, X0
	244 And TEMP, TEMP, 1
	245 Compare TEMP, 1
	246 JumpIfNotEqual {269}
	247 Move X8, 0x229C000
	248 Move X8, [X8+2736]
	249 Move W10, [X21+28]
	250 Move X9, [X20]
	251 Move X1, [X8]
	252 Move X8, [X21+16]
	253 Add W10, W10, 1
	254 Move [X21+28], W10
	255 Compare X8, 0
	256 JumpIfEqual {737}
	257 NotImplemented "Instruction LDRSW not yet implemented."
	258 Move W11, [X8+24]
	259 NotImplemented "Instruction CMP not yet implemented."
	260 Add W9, W10, 1
	261 Add X8, X8, X10
	262 Move [X21+24], W9
	263 Move [X8+32], X1
	264 Move X8, [X9+32]
	265 Move X0, X21
	266 Move X8, [X8+192]
	267 Move X2, [X8+112]
	268 Call List`1<Object>.AddWithResize, X0, X1
	269 Move X0, X31
	270 Call RuntimeUnityFlagsSetup.get_IsNET_STANDARD_2_0
	271 Move TEMP, X0
	272 And TEMP, TEMP, 1
	273 Compare TEMP, 1
	274 JumpIfNotEqual {297}
	275 Move X8, 0x229C000
	276 Move X8, [X8+2704]
	277 Move W10, [X21+28]
	278 Move X9, [X20]
	279 Move X1, [X8]
	280 Move X8, [X21+16]
	281 Add W10, W10, 1
	282 Move [X21+28], W10
	283 Compare X8, 0
	284 JumpIfEqual {737}
	285 NotImplemented "Instruction LDRSW not yet implemented."
	286 Move W11, [X8+24]
	287 NotImplemented "Instruction CMP not yet implemented."
	288 Add W9, W10, 1
	289 Add X8, X8, X10
	290 Move [X21+24], W9
	291 Move [X8+32], X1
	292 Move X8, [X9+32]
	293 Move X0, X21
	294 Move X8, [X8+192]
	295 Move X2, [X8+112]
	296 Call List`1<Object>.AddWithResize, X0, X1
	297 Move X8, 0x2293000
	298 Move X8, [X8+2288]
	299 Move X0, [X8]
	300 Call 0x1C17F10
	301 Move X1, X31
	302 Move X20, X0
	303 Call StringBuilder..ctor, X0
	304 Move X8, [X19+40]
	305 Compare X8, 0
	306 JumpIfEqual {737}
	307 Move X0, [X8+32]
	308 Move X1, X31
	309 Call String.IsNullOrEmpty, X0
	310 Move X8, [X19+40]
	311 Move TEMP, X0
	312 And TEMP, TEMP, 1
	313 Compare TEMP, 1
	314 JumpIfNotEqual {317}
	315 Compare X8, 0
	316 JumpIfNotEqual {324}
	317 Compare X8, 0
	318 JumpIfEqual {737}
	319 Move X0, [X8+32]
	320 Compare X0, 0
	321 JumpIfEqual {737}
	322 Move W9, [X0+16]
	323 NotImplemented "Instruction CMP not yet implemented."
	324 Move X23, [X8+32]
	325 Move W2, 8
	326 Move W1, W31
	327 Move X3, X31
	328 Call String.Substring, X0, X1, X2
	329 Move X8, 0x229B000
	330 Move X8, [X8+3664]
	331 Move X2, X31
	332 Move X1, [X8]
	333 Call String.Concat, X0, X1
	334 Move X23, X0
	335 Move X0, X19
	336 Call SupportLogger.GetFormattedTimestamp, X0
	337 Compare X20, 0
	338 JumpIfEqual {737}
	339 Move X8, 0x229C000
	340 Move X8, [X8+2720]
	341 Move X24, 0x2293000
	342 Move X2, X0
	343 Move X0, X20
	344 Move X1, [X8]
	345 Move X24, [X24+2512]
	346 Move X3, X31
	347 Call StringBuilder.AppendFormat, X0, X1, X2
	348 Move X0, [X24]
	349 Move W1, 5
	350 Call 0x1C17D6C
	351 Compare X0, 0
	352 JumpIfEqual {737}
	353 Move X22, X0
	354 Compare X23, 0
	355 JumpIfEqual {362}
	356 Move X8, [X22]
	357 Move X0, X23
	358 Move X1, [X8+64]
	359 Call 0x1C17E00
	360 Compare X0, 0
	361 JumpIfEqual {739}
	362 Move W8, [X22+24]
	363 Compare W8, 0
	364 JumpIfEqual {738}
	365 Move [X22+32], X23
	366 Move X9, [X19+40]
	367 Compare X9, 0
	368 JumpIfEqual {737}
	369 Move X23, [X9+24]
	370 Compare X23, 0
	371 JumpIfEqual {379}
	372 Move X8, [X22]
	373 Move X0, X23
	374 Move X1, [X8+64]
	375 Call 0x1C17E00
	376 Compare X0, 0
	377 JumpIfEqual {739}
	378 Move W8, [X22+24]
	379 NotImplemented "Instruction CMP not yet implemented."
	380 Move X8, 0x229B000
	381 Move X8, [X8+3808]
	382 Move [X22+40], X23
	383 Move X0, [X8]
	384 Move W8, [X0+224]
	385 Compare W8, 0
	386 JumpIfNotEqual {388}
	387 Call 0x1C17DFC
	388 Move X0, X31
	389 Call PhotonPeer.get_Version
	390 Move X23, X0
	391 Compare X0, 0
	392 JumpIfEqual {399}
	393 Move X8, [X22]
	394 Move X0, X23
	395 Move X1, [X8+64]
	396 Call 0x1C17E00
	397 Compare X0, 0
	398 JumpIfEqual {739}
	399 Move W8, [X22+24]
	400 NotImplemented "Instruction CMP not yet implemented."
	401 Move X8, 0x2295000
	402 Move X8, [X8+3704]
	403 Move [X22+48], X23
	404 Move X23, 0x2293000
	405 Move X0, X21
	406 Move X1, [X8]
	407 Move X23, [X23+2104]
	408 Call List`1<Object>.ToArray, X0
	409 Move X8, [X23]
	410 Move X1, X0
	411 Move X2, X31
	412 Move X0, X8
	413 Call String.Join, X0, X1
	414 Move X21, X0
	415 Compare X0, 0
	416 JumpIfEqual {423}
	417 Move X8, [X22]
	418 Move X0, X21
	419 Move X1, [X8+64]
	420 Call 0x1C17E00
	421 Compare X0, 0
	422 JumpIfEqual {739}
	423 Move W8, [X22+24]
	424 NotImplemented "Instruction CMP not yet implemented."
	425 Move [X22+56], X21
	426 Move X8, [X19+40]
	427 Compare X8, 0
	428 JumpIfEqual {737}
	429 Move X8, [X8+16]
	430 Compare X8, 0
	431 JumpIfEqual {737}
	432 Move X9, 0x229C000
	433 Move X9, [X9+2640]
	434 Move W8, [X8+32]
	435 Add X1, X31, 8
	436 Move X0, [X9]
	437 Move [X31+8], W8
	438 Call 0x1C17E04
	439 Move X21, X0
	440 Compare X0, 0
	441 JumpIfEqual {448}
	442 Move X8, [X22]
	443 Move X0, X21
	444 Move X1, [X8+64]
	445 Call 0x1C17E00
	446 Compare X0, 0
	447 JumpIfEqual {739}
	448 Move W8, [X22+24]
	449 NotImplemented "Instruction CMP not yet implemented."
	450 Move X8, 0x229C000
	451 Move X8, [X8+2712]
	452 Move [X22+64], X21
	453 Move X0, X20
	454 Move X2, X22
	455 Move X1, [X8]
	456 Move X3, X31
	457 Call StringBuilder.AppendFormat, X0, X1, X2
	458 Move X8, [X19+40]
	459 Compare X8, 0
	460 JumpIfEqual {500}
	461 Move X8, [X8+16]
	462 Compare X8, 0
	463 JumpIfEqual {500}
	464 Move X9, 0x2293000
	465 Move X9, [X9+1728]
	466 Move X21, [X8+56]
	467 Move X0, [X9]
	468 Move W9, [X0+224]
	469 Compare W9, 0
	470 JumpIfNotEqual {472}
	471 Call 0x1C17DFC
	472 Move X0, X21
	473 Move X1, X31
	474 Move X2, X31
	475 Call Type.op_Inequality, X0, X1
	476 Move TEMP, X0
	477 And TEMP, TEMP, 1
	478 Compare TEMP, 1
	479 JumpIfNotEqual {500}
	480 Move X8, [X19+40]
	481 Compare X8, 0
	482 JumpIfEqual {737}
	483 Move X8, [X8+16]
	484 Compare X8, 0
	485 JumpIfEqual {737}
	486 Move X0, [X8+56]
	487 Compare X0, 0
	488 JumpIfEqual {737}
	489 Move X8, [X0]
	490 Move X9, [X8+424]
	491 Move X1, [X8+432]
	492 NotImplemented "Instruction BLR not yet implemented."
	493 Move X8, 0x229C000
	494 Move X8, [X8+2656]
	495 Move X2, X0
	496 Move X0, X20
	497 Move X3, X31
	498 Move X1, [X8]
	499 Call StringBuilder.AppendFormat, X0, X1, X2
	500 Move X0, [X24]
	501 Move W1, 4
	502 Call 0x1C17D6C
	503 Move X8, [X19+40]
	504 Compare X8, 0
	505 JumpIfEqual {737}
	506 Move X21, X0
	507 Move X0, X8
	508 Move X1, X31
	509 Call LoadBalancingClient.get_UserId, X0
	510 Compare X21, 0
	511 JumpIfEqual {737}
	512 Move X22, X0
	513 Compare X0, 0
	514 JumpIfEqual {521}
	515 Move X8, [X21]
	516 Move X0, X22
	517 Move X1, [X8+64]
	518 Call 0x1C17E00
	519 Compare X0, 0
	520 JumpIfEqual {739}
	521 Move W8, [X21+24]
	522 Compare W8, 0
	523 JumpIfEqual {738}
	524 Move [X21+32], X22
	525 Move X8, [X19+40]
	526 Compare X8, 0
	527 JumpIfEqual {737}
	528 Move X9, 0x229C000
	529 Move X9, [X9+2680]
	530 Move X8, [X8+48]
	531 Move X22, [X9]
	532 Compare X8, 0
	533 JumpIfEqual {550}
	534 Move X9, 0x229C000
	535 Move X9, [X9+1840]
	536 Move W8, [X8+16]
	537 Move TEMP, 0
	538 Not TEMP
	539 Move X10, TEMP
	540 Add X0, X31, 8
	541 Move X9, [X9]
	542 Move X1, X31
	543 Move [X31+24], W8
	544 Move [X31+8], X9
	545 Move [X31+16], X10
	546 Call Enum.ToString, X0
	547 Move X23, X0
	548 Compare X23, 0
	549 JumpIfNotEqual {555}
	550 Move X8, 0x229C000
	551 Move X8, [X8+2648]
	552 Move X23, [X8]
	553 Compare X23, 0
	554 JumpIfEqual {561}
	555 Move X8, [X21]
	556 Move X0, X23
	557 Move X1, [X8+64]
	558 Call 0x1C17E00
	559 Compare X0, 0
	560 JumpIfEqual {739}
	561 Move W8, [X21+24]
	562 NotImplemented "Instruction CMP not yet implemented."
	563 Move [X21+40], X23
	564 Move X8, [X19+40]
	565 Compare X8, 0
	566 JumpIfEqual {737}
	567 Move X9, 0x229B000
	568 Move X9, [X9+3568]
	569 Move W8, [X8+56]
	570 Add X1, X31, 8
	571 Move X0, [X9]
	572 Move [X31+8], W8
	573 Call 0x1C17E04
	574 Move X23, X0
	575 Compare X0, 0
	576 JumpIfEqual {583}
	577 Move X8, [X21]
	578 Move X0, X23
	579 Move X1, [X8+64]
	580 Call 0x1C17E00
	581 Compare X0, 0
	582 JumpIfEqual {739}
	583 Move W8, [X21+24]
	584 NotImplemented "Instruction CMP not yet implemented."
	585 Move [X21+48], X23
	586 Move X8, [X19+40]
	587 Compare X8, 0
	588 JumpIfEqual {737}
	589 Move X9, 0x229C000
	590 Move X9, [X9+1696]
	591 Move W8, [X8+60]
	592 Add X1, X31, 44
	593 Move X0, [X9]
	594 Move [X31+44], W8
	595 Call 0x1C17E04
	596 Move X23, X0
	597 Compare X0, 0
	598 JumpIfEqual {605}
	599 Move X8, [X21]
	600 Move X0, X23
	601 Move X1, [X8+64]
	602 Call 0x1C17E00
	603 Compare X0, 0
	604 JumpIfEqual {739}
	605 Move W8, [X21+24]
	606 NotImplemented "Instruction CMP not yet implemented."
	607 Move X0, X20
	608 Move X1, X22
	609 Move X2, X21
	610 Move X3, X31
	611 Move [X21+56], X23
	612 Call StringBuilder.AppendFormat, X0, X1, X2
	613 Move X0, [X19+40]
	614 Compare X0, 0
	615 JumpIfEqual {737}
	616 Move X21, 0x229B000
	617 Move X22, 0x229C000
	618 Move X21, [X21+3688]
	619 Move X22, [X22+2688]
	620 Move X1, X31
	621 Call LoadBalancingClient.get_State, X0
	622 Move X8, [X21]
	623 Move [X31+40], W0
	624 Add X1, X31, 40
	625 Move X0, X8
	626 Call 0x1C17E04
	627 Move X1, [X22]
	628 Move X2, X0
	629 Move X0, X20
	630 Move X3, X31
	631 Call StringBuilder.AppendFormat, X0, X1, X2
	632 Move X8, [X19+40]
	633 Compare X8, 0
	634 JumpIfEqual {737}
	635 Move X0, [X8+16]
	636 Compare X0, 0
	637 JumpIfEqual {737}
	638 Move X21, 0x229C000
	639 Move X21, [X21+2672]
	640 Move X1, X31
	641 Call PhotonPeer.get_PeerID, X0
	642 Move X1, [X21]
	643 Move X2, X0
	644 Move X0, X20
	645 Move X3, X31
	646 Call StringBuilder.AppendFormat, X0, X1, X2
	647 Move X0, [X24]
	648 Move W1, 4
	649 Call 0x1C17D6C
	650 Move X8, [X19+40]
	651 Compare X8, 0
	652 JumpIfEqual {737}
	653 Move X21, X0
	654 Compare X0, 0
	655 JumpIfEqual {737}
	656 Move X22, [X8+88]
	657 Compare X22, 0
	658 JumpIfEqual {665}
	659 Move X8, [X21]
	660 Move X0, X22
	661 Move X1, [X8+64]
	662 Call 0x1C17E00
	663 Compare X0, 0
	664 JumpIfEqual {739}
	665 Move W8, [X21+24]
	666 Compare W8, 0
	667 JumpIfEqual {738}
	668 Move [X21+32], X22
	669 Move X0, [X19+40]
	670 Compare X0, 0
	671 JumpIfEqual {737}
	672 Move X1, X31
	673 Call LoadBalancingClient.get_CurrentServerAddress, X0
	674 Move X22, X0
	675 Compare X0, 0
	676 JumpIfEqual {683}
	677 Move X8, [X21]
	678 Move X0, X22
	679 Move X1, [X8+64]
	680 Call 0x1C17E00
	681 Compare X0, 0
	682 JumpIfEqual {739}
	683 Move W8, [X21+24]
	684 NotImplemented "Instruction CMP not yet implemented."
	685 Move [X21+40], X22
	686 Move X8, [X19+40]
	687 Compare X8, 0
	688 JumpIfEqual {737}
	689 Move X0, [X8+16]
	690 Compare X0, 0
	691 JumpIfEqual {737}
	692 Move X1, X31
	693 Call PhotonPeer.get_ServerIpAddress, X0
	694 Move X22, X0
	695 Compare X0, 0
	696 JumpIfEqual {703}
	697 Move X8, [X21]
	698 Move X0, X22
	699 Move X1, [X8+64]
	700 Call 0x1C17E00
	701 Compare X0, 0
	702 JumpIfEqual {739}
	703 Move W8, [X21+24]
	704 NotImplemented "Instruction CMP not yet implemented."
	705 Move [X21+48], X22
	706 Move X9, [X19+40]
	707 Compare X9, 0
	708 JumpIfEqual {737}
	709 Move X19, [X9+320]
	710 Compare X19, 0
	711 JumpIfEqual {719}
	712 Move X8, [X21]
	713 Move X0, X19
	714 Move X1, [X8+64]
	715 Call 0x1C17E00
	716 Compare X0, 0
	717 JumpIfEqual {739}
	718 Move W8, [X21+24]
	719 NotImplemented "Instruction CMP not yet implemented."
	720 Move X8, 0x229C000
	721 Move X8, [X8+2728]
	722 Move [X21+56], X19
	723 Move X0, X20
	724 Move X2, X21
	725 Move X1, [X8]
	726 Move X3, X31
	727 Call StringBuilder.AppendFormat, X0, X1, X2
	728 Move X20, [X31+80]
	729 Move X19, [X31+88]
	730 Move X22, [X31+64]
	731 Move X21, [X31+72]
	732 Move X24, [X31+48]
	733 Move X23, [X31+56]
	734 Move X30, [X31+32]
	735 Add X31, X31, 96
	736 Return 
	737 Call 0x1C17F20
	738 Call 0x1C17F28
	739 Call 0x1C17F44
	740 Move X1, X31
	741 Call 0x1C17DEC

Method: System.Void OnConnected()

Disassembly:
	0x01E62300 BL 0x1C16F10
	0x01E62304 LDR X1, [X19]
	0x01E62308 MOV X19, X0
	0x01E6230C BL 0x2AA4804
	0x01E62310 CBZ X20, 0x1E623E0
	0x01E62314 ADRP X22, 0x2293000
	0x01E62318 ADRP X23, 0x229A000
	0x01E6231C LDR X22, [X22 + 0x278]
	0x01E62320 LDR X23, [X23 + 0xBA0]
	0x01E62324 ADD X8, X31, 0x8
	0x01E62328 MOV X0, X20
	0x01E6232C MOV X1, X31
	0x01E62330 BL 0x34EDC94
	0x01E62334 LDUR V0, [X31 + 0x8]
	0x01E62338 LDUR V1, [X31 + 0x18]
	0x01E6233C LDR X8, [X31 + 0x28]
	0x01E62340 STP V0, V1, [X31 + 0x30]
	0x01E62344 STR X8, [X31 + 0x50]
	0x01E62348 ADD X0, X31, 0x30
	0x01E6234C MOV X1, X31
	0x01E62350 BL 0x34EE4C8
	0x01E62354 TBZ X0, 0x0, 0x1E623B8
	0x01E62358 ADD X0, X31, 0x30
	0x01E6235C MOV X1, X31
	0x01E62360 BL 0x34EE3C8
	0x01E62364 MOV X20, X0
	0x01E62368 CBZ X0, 0x1E62348
	0x01E6236C LDR X8, [X22]
	0x01E62370 LDR X9, [X20]
	0x01E62374 CMP X9, X8
	0x01E62378 B.NE 0x1E62348
	0x01E6237C MOV X21, X1
	0x01E62380 MOV X0, X1
	0x01E62384 MOV X1, X31

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0+40]
	004 Move [X0+60], W31
	005 Compare X8, 0
	006 JumpIfEqual {44}
	007 Move X19, X0
	008 Move X0, [X8+16]
	009 Compare X0, 0
	010 JumpIfEqual {44}
	011 Move X1, X31
	012 Call PhotonPeer.get_RoundTripTime, X0
	013 Move [X19+64], W0
	014 Move X0, X19
	015 Call SupportLogger.LogBasics, X0
	016 Move W8, [X19+32]
	017 Compare W8, 0
	018 JumpIfEqual {39}
	019 Move X8, [X19+40]
	020 Compare X8, 0
	021 JumpIfEqual {44}
	022 Move X0, [X8+16]
	023 Compare X0, 0
	024 JumpIfEqual {44}
	025 Move W1, W31
	026 Move X2, X31
	027 Call PhotonPeer.set_TrafficStatsEnabled, X0, X1
	028 Move X8, [X19+40]
	029 Compare X8, 0
	030 JumpIfEqual {44}
	031 Move X0, [X8+16]
	032 Compare X0, 0
	033 JumpIfEqual {44}
	034 Move W1, 1
	035 Move X2, X31
	036 Call PhotonPeer.set_TrafficStatsEnabled, X0, X1
	037 Move X0, X19
	038 Call SupportLogger.StartLogStats, X0
	039 Move X0, X19
	040 Move X30, [X31+16]
	041 Move X19, [X31+24]
	042 Call SupportLogger.StartTrackValues, X0
	043 Return 
	044 Call 0x1C17F20

Method: System.Void OnConnectedToMaster()

Disassembly:
	0x01E62388 BL 0x1E44B30

ISIL:
	001 Return 

Method: System.Void OnFriendListUpdate(System.Collections.Generic.List`1<Fusion.Photon.Realtime.FriendInfo> friendList)

Disassembly:
	0x01E6238C TBZ X0, 0x0, 0x1E62348

ISIL:
	001 Return 

Method: System.Void OnJoinedLobby()

Disassembly:
	0x01E62390 MOV X0, X21

ISIL:
	001 Return 

Method: System.Void OnLeftLobby()

Disassembly:
	0x01E62394 MOV X1, X31

ISIL:
	001 Return 

Method: System.Void OnCreateRoomFailed(System.Int16 returnCode, System.String message)

Disassembly:
	0x01E62398 BL 0x1E44BD0

ISIL:
	001 Return 

Method: System.Void OnJoinedRoom()

Disassembly:
	0x01E6239C CBZ X19, 0x1E623DC

ISIL:
	001 Return 

Method: System.Void OnJoinRoomFailed(System.Int16 returnCode, System.String message)

Disassembly:
	0x01E623A0 LDR X3, [X23]

ISIL:
	001 Return 

Method: System.Void OnJoinRandomFailed(System.Int16 returnCode, System.String message)

Disassembly:
	0x01E623A4 MOV X2, X0

ISIL:
	001 Return 

Method: System.Void OnCreatedRoom()

Disassembly:
	0x01E623A8 MOV X0, X19

ISIL:
	001 Return 

Method: System.Void OnLeftRoom()

Disassembly:
	0x01E623AC MOV X1, X20

ISIL:
	001 Return 

Method: System.Void OnDisconnected(Fusion.Photon.Realtime.DisconnectCause cause)

Disassembly:
	0x01E623B0 BL 0x2AA5084
	0x01E623B4 B 0x1E62348
	0x01E623B8 ADD X0, X31, 0x30
	0x01E623BC MOV X1, X31
	0x01E623C0 BL 0x34EE5B8
	0x01E623C4 MOV X0, X19
	0x01E623C8 LDP X20, X19, [X31 + 0x80]
	0x01E623CC LDP X22, X21, [X31 + 0x70]
	0x01E623D0 LDP X30, X23, [X31 + 0x60]
	0x01E623D4 ADD X31, X31, 0x90
	0x01E623D8 RET
	0x01E623DC BL 0x1C16F20
	0x01E623E0 BL 0x1C16F20
	0x01E623E4 B 0x1E623F4

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Call SupportLogger.StopLogStats, X0
	005 Move X0, X19
	006 Call SupportLogger.StopTrackValues, X0
	007 Move X0, X19
	008 Call SupportLogger.LogBasics, X0
	009 Move X0, [X19+40]
	010 Compare X0, 0
	011 JumpIfEqual {17}
	012 Move X1, X31
	013 Move X30, [X31+16]
	014 Move X19, [X31+24]
	015 Call LoadBalancingClient.get_State, X0
	016 Return 
	017 Move X30, [X31+16]
	018 Move X19, [X31+24]
	019 Return 

Method: System.Void OnRegionListReceived(Fusion.Photon.Realtime.RegionHandler regionHandler)

Disassembly:
	0x01E623E8 B 0x1E623F4

ISIL:
	001 Return 

Method: System.Void OnRoomListUpdate(System.Collections.Generic.List`1<Fusion.Photon.Realtime.RoomInfo> roomList)

Disassembly:
	0x01E623EC B 0x1E623F4

ISIL:
	001 Return 

Method: System.Void OnPlayerEnteredRoom(Fusion.Photon.Realtime.Player newPlayer)

Disassembly:
	0x01E623F0 B 0x1E623F4

ISIL:
	001 Return 

Method: System.Void OnPlayerLeftRoom(Fusion.Photon.Realtime.Player otherPlayer)

Disassembly:
	0x01E623F4 MOV X20, X0

ISIL:
	001 Return 

Method: System.Void OnRoomPropertiesUpdate(ExitGames.Client.Photon.Hashtable propertiesThatChanged)

Disassembly:
	0x01E623F8 CMP W1, 0x1

ISIL:
	001 Return 

Method: System.Void OnPlayerPropertiesUpdate(Fusion.Photon.Realtime.Player targetPlayer, ExitGames.Client.Photon.Hashtable changedProps)

Disassembly:
	0x01E623FC B.NE 0x1E62428

ISIL:
	001 Return 

Method: System.Void OnMasterClientSwitched(Fusion.Photon.Realtime.Player newMasterClient)

Disassembly:
	0x01E62400 MOV X0, X20

ISIL:
	001 Return 

Method: System.Void OnCustomAuthenticationResponse(System.Collections.Generic.Dictionary`2<System.String, System.Object> data)

Disassembly:
	0x01E62404 BL 0x3EB1AD0

ISIL:
	001 Return 

Method: System.Void OnCustomAuthenticationFailed(System.String debugMessage)

Disassembly:
	0x01E62408 LDR X21, [X0]

ISIL:
	001 Return 

Method: System.Void OnLobbyStatisticsUpdate(System.Collections.Generic.List`1<Fusion.Photon.Realtime.TypedLobbyInfo> lobbyStatistics)

Disassembly:
	0x01E6240C BL 0x3EB1AE0

ISIL:
	001 Return 

Method: System.Void OnErrorInfo(Fusion.Photon.Realtime.ErrorInfo errorInfo)

Disassembly:
	0x01E62410 ADD X0, X31, 0x30

ISIL:
	001 Return 

Method: System.Void .ctor()

Disassembly:
	0x01E62414 MOV X1, X31
	0x01E62418 BL 0x34EE5B8
	0x01E6241C CBZ X21, 0x1E623C4
	0x01E62420 MOV X0, X21
	0x01E62424 BL 0x1C16F18

ISIL:
	001 Move W8, 1
	002 Move X1, X31
	003 Move [X0+32], W8
	004 Move [X0+56], W31
	005 Call MonoBehaviour..ctor, X0
	006 Return 

