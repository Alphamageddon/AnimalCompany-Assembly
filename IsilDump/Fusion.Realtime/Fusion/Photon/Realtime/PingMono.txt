Type: Fusion.Photon.Realtime.PingMono

Method: System.Boolean StartPing(System.String ip)

Disassembly:
	0x01E5AF08 BL 0x1C16F44
	0x01E5AF0C MOV X1, X31
	0x01E5AF10 BL 0x1C16DEC
	0x01E5AF14 BL 0x1C16F20
	0x01E5AF18 STP X30, X21, [X31 - 0x20]!
	0x01E5AF1C STP X20, X19, [X31 + 0x10]
	0x01E5AF20 ADRP X21, 0x257F000
	0x01E5AF24 LDRB W8, [X21 + 0x75]
	0x01E5AF28 MOV X20, X1
	0x01E5AF2C MOV X19, X0
	0x01E5AF30 TBNZ X8, 0x0, 0x1E5AF48
	0x01E5AF34 ADRP X0, 0x22A2000
	0x01E5AF38 LDR X0, [X0 + 0x290]
	0x01E5AF3C BL 0x1C16CF4
	0x01E5AF40 MOVZ W8, 0x1
	0x01E5AF44 STRB W8, [X21 + 0x75]
	0x01E5AF48 CBZ X20, 0x1E5AF84
	0x01E5AF4C ADRP X8, 0x22A2000
	0x01E5AF50 LDR X8, [X8 + 0x290]
	0x01E5AF54 LDR X9, [X20]
	0x01E5AF58 LDR X8, [X8]
	0x01E5AF5C LDRB W11, [X9 + 0x130]
	0x01E5AF60 LDRB W10, [X8 + 0x130]
	0x01E5AF64 CMP W11, W10
	0x01E5AF68 B.CC 0x1E5AF84
	0x01E5AF6C LDR X9, [X9 + 0xC8]
	0x01E5AF70 ADD X9, X9, X10, 0x3, LSL
	0x01E5AF74 LDUR X9, [X9 - 0x8]
	0x01E5AF78 CMP X9, X8
	0x01E5AF7C CSEL X20, X20, X31, EQ
	0x01E5AF80 B.EQ 0x1E5AF94
	0x01E5AF84 MOV W0, W31
	0x01E5AF88 LDP X20, X19, [X31 + 0x10]
	0x01E5AF8C LDP X30, X21, [X31], #0x20
	0x01E5AF90 RET
	0x01E5AF94 LDR X8, [X19]
	0x01E5AF98 MOV X0, X19
	0x01E5AF9C LDP X9, X1, [X8 + 0x158]
	0x01E5AFA0 BLR X9
	0x01E5AFA4 CBZ X20, 0x1E5AFC8
	0x01E5AFA8 LDR X8, [X20]
	0x01E5AFAC MOV W19, W0
	0x01E5AFB0 MOV X0, X20
	0x01E5AFB4 LDP X9, X1, [X8 + 0x158]
	0x01E5AFB8 BLR X9
	0x01E5AFBC CMP W19, W0
	0x01E5AFC0 CSET W0, EQ
	0x01E5AFC4 B 0x1E5AF88
	0x01E5AFC8 BL 0x1C16F20
	0x01E5AFCC LDR W0, [X0 + 0x18]
	0x01E5AFD0 RET
	0x01E5AFD4 LDRB W8, [X0 + 0x1C]
	0x01E5AFD8 CBZ W8, 0x1E5AFE0
	0x01E5AFDC STR W1, [X0 + 0x18]
	0x01E5AFE0 RET
	0x01E5AFE4 STR X30, [X31 - 0x40]!
	0x01E5AFE8 STP X24, X23, [X31 + 0x10]
	0x01E5AFEC STP X22, X21, [X31 + 0x20]
	0x01E5AFF0 STP X20, X19, [X31 + 0x30]
	0x01E5AFF4 ADRP X23, 0x257F000
	0x01E5AFF8 LDRB W8, [X23 + 0x76]
	0x01E5AFFC MOV X21, X3
	0x01E5B000 MOV X22, X2
	0x01E5B004 MOV X20, X1
	0x01E5B008 MOV X19, X0
	0x01E5B00C TBNZ X8, 0x0, 0x1E5B030
	0x01E5B010 ADRP X0, 0x22A0000
	0x01E5B014 LDR X0, [X0 + 0xD60]
	0x01E5B018 BL 0x1C16CF4
	0x01E5B01C ADRP X0, 0x22A0000
	0x01E5B020 LDR X0, [X0 + 0xD98]
	0x01E5B024 BL 0x1C16CF4
	0x01E5B028 MOVZ W8, 0x1
	0x01E5B02C STRB W8, [X23 + 0x76]
	0x01E5B030 CBZ X20, 0x1E5B154
	0x01E5B034 ADRP X24, 0x22A0000
	0x01E5B038 LDR X24, [X24 + 0xD60]
	0x01E5B03C MOV X0, X20
	0x01E5B040 LDR X1, [X24]
	0x01E5B044 BL 0x2AA4E88
	0x01E5B048 CBZ W0, 0x1E5B158
	0x01E5B04C ADRP X23, 0x22A0000
	0x01E5B050 LDR X23, [X23 + 0xD98]
	0x01E5B054 LDR X0, [X23]
	0x01E5B058 LDR W8, [X0 + 0xE0]
	0x01E5B05C CBNZ W8, 0x1E5B064
	0x01E5B060 BL 0x1C16DFC
	0x01E5B064 MOV X0, X20
	0x01E5B068 MOV X1, X31
	0x01E5B06C BL 0x1E49E14
	0x01E5B070 LDR X8, [X19 + 0x10]
	0x01E5B074 MOV X20, X0
	0x01E5B078 CBZ X8, 0x1E5B0F4
	0x01E5B07C LDRB W8, [X8 + 0x68]
	0x01E5B080 CBZ W8, 0x1E5B16C
	0x01E5B084 CBZ X20, 0x1E5B1C0
	0x01E5B088 LDR X1, [X24]
	0x01E5B08C MOV X0, X20
	0x01E5B090 BL 0x2AA4E88
	0x01E5B094 CBZ W0, 0x1E5B158
	0x01E5B098 LDR X0, [X23]
	0x01E5B09C LDR X21, [X19 + 0x38]
	0x01E5B0A0 LDR W8, [X0 + 0xE0]
	0x01E5B0A4 CBNZ W8, 0x1E5B0AC
	0x01E5B0A8 BL 0x1C16DFC
	0x01E5B0AC MOV X0, X21
	0x01E5B0B0 MOV X1, X20
	0x01E5B0B4 MOV X2, X31
	0x01E5B0B8 BL 0x1E46944
	0x01E5B0BC LDR X0, [X19 + 0x38]
	0x01E5B0C0 MOV X1, X31
	0x01E5B0C4 BL 0x1E4A5B8
	0x01E5B0C8 LDR X8, [X19 + 0x10]
	0x01E5B0CC CBZ X8, 0x1E5B1C0
	0x01E5B0D0 LDR X8, [X8 + 0x60]
	0x01E5B0D4 CBZ X8, 0x1E5B1C0
	0x01E5B0D8 LDR X0, [X8 + 0xC0]
	0x01E5B0DC CBZ X0, 0x1E5B1C0
	0x01E5B0E0 MOV X1, X19
	0x01E5B0E4 MOV X2, X20
	0x01E5B0E8 MOV X3, X31
	0x01E5B0EC BL 0x1E4E114
	0x01E5B0F0 B 0x1E5B14C
	0x01E5B0F4 LDRB W8, [X19 + 0x1C]
	0x01E5B0F8 CBZ W8, 0x1E5B154
	0x01E5B0FC CBZ X20, 0x1E5B1C0
	0x01E5B100 LDR X1, [X24]
	0x01E5B104 MOV X0, X20
	0x01E5B108 BL 0x2AA4E88
	0x01E5B10C CBZ W0, 0x1E5B158
	0x01E5B110 MOV W0, W31
	0x01E5B114 CBNZ X22, 0x1E5B158
	0x01E5B118 CBNZ X21, 0x1E5B158
	0x01E5B11C LDR X0, [X23]
	0x01E5B120 LDR X21, [X19 + 0x38]
	0x01E5B124 LDR W8, [X0 + 0xE0]
	0x01E5B128 CBNZ W8, 0x1E5B130
	0x01E5B12C BL 0x1C16DFC
	0x01E5B130 MOV X0, X21
	0x01E5B134 MOV X1, X20
	0x01E5B138 MOV X2, X31
	0x01E5B13C BL 0x1E46944
	0x01E5B140 LDR X0, [X19 + 0x38]
	0x01E5B144 MOV X1, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x2580000
	006 Move W8, [X21+107]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {24}
	013 Move X0, 0x22A3000
	014 Move X0, [X0+776]
	015 Call 0x1C17CF4
	016 Move X0, 0x22A3000
	017 Move X0, [X0+1928]
	018 Call 0x1C17CF4
	019 Move X0, 0x22A3000
	020 Move X0, [X0+1936]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X21+107], W8
	024 Move X0, X19
	025 Call PhotonPing.Init, X0
	026 Move X8, [X19+48]
	027 Compare X8, 0
	028 JumpIfNotEqual {80}
	029 Compare X20, 0
	030 JumpIfEqual {118}
	031 Move X8, 0x22A3000
	032 Move X8, [X8+1936]
	033 Move X1, [X8]
	034 Move X0, X20
	035 Move X2, X31
	036 Call String.Contains, X0, X1
	037 Move X9, 0x22A3000
	038 Move X9, [X9+1928]
	039 Move W8, W0
	040 Move X0, [X9]
	041 Move TEMP, X8
	042 And TEMP, TEMP, 1
	043 Compare TEMP, 1
	044 JumpIfNotEqual {52}
	045 Call 0x1C17F10
	046 Move X21, X0
	047 Move W1, 2
	048 Move W2, 2
	049 Move W3, 17
	050 Move X4, X31
	051 Call Socket..ctor, X0, X1, X2, X3
	052 Call 0x1C17F10
	053 Move X21, X0
	054 Move W1, 23
	055 Move W2, 2
	056 Move W3, 17
	057 Move X4, X31
	058 Call Socket..ctor, X0, X1, X2, X3
	059 Move [X19+48], X21
	060 Compare X21, 0
	061 JumpIfEqual {119}
	062 Move W1, 0x1388
	063 Move X0, X21
	064 Move X2, X31
	065 Call Socket.set_ReceiveTimeout, X0, X1
	066 Move X0, [X19+48]
	067 Compare X0, 0
	068 JumpIfEqual {120}
	069 Move X8, 0x22A3000
	070 Move X8, [X8+776]
	071 Move W9, 0x13BF
	072 Move X8, [X8]
	073 Move X8, [X8+184]
	074 NotImplemented "Instruction LDRH not yet implemented."
	075 NotImplemented "Instruction CMP not yet implemented."
	076 NotImplemented "Instruction CSEL not yet implemented."
	077 Move X1, X20
	078 Move X3, X31
	079 Call Socket.Connect, X0, X1, X2
	080 Move X8, [X19+32]
	081 Compare X8, 0
	082 JumpIfEqual {113}
	083 Move X9, [X8+24]
	084 Compare W9, 0
	085 JumpIfEqual {114}
	086 Move W10, [X19+40]
	087 Subtract W9, W9, 1
	088 Add X8, X8, W9
	089 Move [X8+32], W10
	090 Move X0, [X19+48]
	091 Compare X0, 0
	092 JumpIfEqual {115}
	093 Move X1, [X19+32]
	094 Move X2, X31
	095 Call Socket.Send, X0, X1
	096 Move X8, [X19+32]
	097 Compare X8, 0
	098 JumpIfEqual {116}
	099 Move X9, [X8+24]
	100 Compare W9, 0
	101 JumpIfEqual {117}
	102 Move W10, [X19+40]
	103 Move X20, [X31+16]
	104 Move X19, [X31+24]
	105 Subtract W9, W9, 1
	106 Add X8, X8, W9
	107 Add W10, W10, 1
	108 Move [X8+32], W10
	109 Move W0, W31
	110 Move X30, [X31+32]
	111 Move X21, [X31+40]
	112 Return X0
	113 Call 0x1C17F20
	114 Call 0x1C17F28
	115 Call 0x1C17F20
	116 Call 0x1C17F20
	117 Call 0x1C17F28
	118 Call 0x1C17F20
	119 Call 0x1C17F20
	120 Call 0x1C17F20
	121 Move X20, X0
	122 NotImplemented "Instruction CMP not yet implemented."
	123 Move X0, X20
	124 Call 0x3EB2AD0
	125 Move X20, X0
	126 Move X0, 0x2299000
	127 Move X0, [X0+2000]
	128 Call 0x1C17D08
	129 Move X8, [X20]
	130 Move X1, [X8]
	131 Call 0x1C18270
	132 Move TEMP, X0
	133 And TEMP, TEMP, 1
	134 Compare TEMP, 1
	135 JumpIfNotEqual {141}
	136 Move X20, [X20]
	137 Call 0x3EB2AE0
	138 Move X0, X20
	139 Move [X19+48], X31
	140 Call 0x1C17F18
	141 Move W0, 8
	142 Call 0x3EB2AF0
	143 Move X8, [X20]
	144 Move [X0], X8
	145 Move X1, 0x205A000
	146 Add X1, X1, 3672
	147 Move X2, X31
	148 Call 0x3EB2B00
	149 Move X20, X0
	150 Call 0x3EB2AE0
	151 Move X0, X20
	152 Call 0x1D2D690
	153 Call 0x1991590

Method: System.Boolean Done()

Disassembly:
	0x01E5B148 BL 0x1E4A5B8
	0x01E5B14C MOVZ W0, 0x1
	0x01E5B150 B 0x1E5B158
	0x01E5B154 MOV W0, W31
	0x01E5B158 LDP X20, X19, [X31 + 0x30]
	0x01E5B15C LDP X22, X21, [X31 + 0x20]
	0x01E5B160 LDP X24, X23, [X31 + 0x10]
	0x01E5B164 LDR X30, [X31], #0x40
	0x01E5B168 RET
	0x01E5B16C LDR X0, [X23]
	0x01E5B170 LDR W8, [X0 + 0xE0]
	0x01E5B174 CBNZ W8, 0x1E5B17C
	0x01E5B178 BL 0x1C16DFC
	0x01E5B17C MOV X0, X22
	0x01E5B180 MOV X1, X31
	0x01E5B184 BL 0x1E49E14
	0x01E5B188 LDR X8, [X19 + 0x10]
	0x01E5B18C CBZ X8, 0x1E5B1C0
	0x01E5B190 MOV X3, X0
	0x01E5B194 LDR X0, [X8 + 0x60]
	0x01E5B198 CBZ X0, 0x1E5B1C0
	0x01E5B19C LDR W1, [X19 + 0x18]
	0x01E5B1A0 MOV X2, X20
	0x01E5B1A4 MOV X4, X21
	0x01E5B1A8 LDP X20, X19, [X31 + 0x30]
	0x01E5B1AC LDP X22, X21, [X31 + 0x20]
	0x01E5B1B0 LDP X24, X23, [X31 + 0x10]
	0x01E5B1B4 MOV X5, X31
	0x01E5B1B8 LDR X30, [X31], #0x40
	0x01E5B1BC B 0x1E4DFA0
	0x01E5B1C0 BL 0x1C16F20
	0x01E5B1C4 LDRB W0, [X0 + 0x68]
	0x01E5B1C8 RET
	0x01E5B1CC STR X30, [X31 - 0x20]!
	0x01E5B1D0 STP X20, X19, [X31 + 0x10]
	0x01E5B1D4 ADRP X20, 0x257E000
	0x01E5B1D8 LDRB W8, [X20 + 0x77]
	0x01E5B1DC MOV X19, X0
	0x01E5B1E0 TBNZ X8, 0x0, 0x1E5B1F8
	0x01E5B1E4 ADRP X0, 0x229A000
	0x01E5B1E8 LDR X0, [X0 + 0x278]
	0x01E5B1EC BL 0x1C16CF4
	0x01E5B1F0 MOVZ W8, 0x1
	0x01E5B1F4 STRB W8, [X20 + 0x77]
	0x01E5B1F8 LDR X8, [X19 + 0x10]
	0x01E5B1FC CBZ X8, 0x1E5B25C
	0x01E5B200 LDR X0, [X8 + 0x18]
	0x01E5B204 CBZ X0, 0x1E5B260
	0x01E5B208 LDRB W8, [X19 + 0x1C]
	0x01E5B20C CBZ W8, 0x1E5B25C
	0x01E5B210 MOVZ W1, 0xFF
	0x01E5B214 MOV X2, X31
	0x01E5B218 BL 0x34EDBF0
	0x01E5B21C TBZ X0, 0x0, 0x1E5B26C
	0x01E5B220 LDR X8, [X19 + 0x10]
	0x01E5B224 CBZ X8, 0x1E5B2B0
	0x01E5B228 LDR X0, [X8 + 0x18]
	0x01E5B22C CBZ X0, 0x1E5B2B0
	0x01E5B230 MOVZ W1, 0xFF
	0x01E5B234 MOV X2, X31
	0x01E5B238 BL 0x34ED940
	0x01E5B23C CBZ X0, 0x1E5B284
	0x01E5B240 ADRP X8, 0x229A000
	0x01E5B244 LDR X8, [X8 + 0x278]
	0x01E5B248 LDR X9, [X0]
	0x01E5B24C LDR X8, [X8]
	0x01E5B250 CMP X9, X8
	0x01E5B254 CSEL X1, X0, X31, EQ
	0x01E5B258 B 0x1E5B288
	0x01E5B25C MOV W0, W31
	0x01E5B260 LDP X20, X19, [X31 + 0x10]
	0x01E5B264 LDR X30, [X31], #0x20
	0x01E5B268 RET
	0x01E5B26C ADRP X8, 0x229A000
	0x01E5B270 LDR X8, [X8 + 0x278]
	0x01E5B274 LDR X8, [X8]
	0x01E5B278 LDR X8, [X8 + 0xB8]
	0x01E5B27C LDR X1, [X8]
	0x01E5B280 B 0x1E5B288
	0x01E5B284 MOV X1, X31
	0x01E5B288 LDR X0, [X19 + 0x20]
	0x01E5B28C MOV X2, X31
	0x01E5B290 BL 0x3226C14
	0x01E5B294 TBZ X0, 0x0, 0x1E5B2A0
	0x01E5B298 MOVZ W0, 0x1
	0x01E5B29C B 0x1E5B260
	0x01E5B2A0 MOV X0, X19
	0x01E5B2A4 LDP X20, X19, [X31 + 0x10]
	0x01E5B2A8 LDR X30, [X31], #0x20
	0x01E5B2AC B 0x1E5A6A4
	0x01E5B2B0 BL 0x1C16F20
	0x01E5B2B4 LDR X0, [X0 + 0x18]
	0x01E5B2B8 RET
	0x01E5B2BC LDR X0, [X0 + 0x10]
	0x01E5B2C0 RET
	0x01E5B2C4 STR X1, [X0 + 0x10]
	0x01E5B2C8 RET
	0x01E5B2CC LDR X0, [X0 + 0x18]
	0x01E5B2D0 RET
	0x01E5B2D4 STR X1, [X0 + 0x18]
	0x01E5B2D8 RET
	0x01E5B2DC LDR X0, [X0 + 0x20]
	0x01E5B2E0 RET
	0x01E5B2E4 STR X1, [X0 + 0x20]
	0x01E5B2E8 RET
	0x01E5B2EC LDR W0, [X0 + 0x28]
	0x01E5B2F0 RET
	0x01E5B2F4 STR W1, [X0 + 0x28]
	0x01E5B2F8 RET
	0x01E5B2FC LDR W8, [X0 + 0x28]
	0x01E5B300 MOVN W9, 0x80000000
	0x01E5B304 CMP W8, W9
	0x01E5B308 CSET W0, NE
	0x01E5B30C RET
	0x01E5B310 STP X30, X21, [X31 - 0x20]!
	0x01E5B314 STP X20, X19, [X31 + 0x10]
	0x01E5B318 MOV X20, X1
	0x01E5B31C MOV X1, X31
	0x01E5B320 MOV X19, X2
	0x01E5B324 MOV X21, X0
	0x01E5B328 BL 0x33BDD8C
	0x01E5B32C MOV X0, X21
	0x01E5B330 MOV X1, X20
	0x01E5B334 BL 0x1E5B350
	0x01E5B338 STR X19, [X21 + 0x20]
	0x01E5B33C LDP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x257F000
	007 Move W8, [X20+108]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x22A2000
	014 Move X0, [X0+1944]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X20+108], W8
	018 Move W8, [X19+25]
	019 Compare W8, 0
	020 JumpIfEqual {28}
	021 Move W0, 1
	022 Move X20, [X31+32]
	023 Move X19, [X31+40]
	024 Move X22, [X31+16]
	025 Move X21, [X31+24]
	026 Move X30, [X31+48]
	027 Return X0
	028 Move X0, [X19+48]
	029 Compare X0, 0
	030 JumpIfEqual {21}
	031 Move W1, W31
	032 Move W2, W31
	033 Move X3, X31
	034 Call Socket.Poll, X0, X1, X2
	035 Move TEMP, X0
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfNotEqual {60}
	039 Move X0, [X19+48]
	040 Compare X0, 0
	041 JumpIfEqual {72}
	042 Move X1, [X19+32]
	043 Move W2, W31
	044 Move X3, X31
	045 Call Socket.Receive, X0, X1, X2
	046 Move X8, [X19+32]
	047 Compare X8, 0
	048 JumpIfEqual {126}
	049 Move X9, [X8+24]
	050 Compare W9, 0
	051 JumpIfEqual {73}
	052 Subtract W9, W9, 1
	053 Add X8, X8, W9
	054 Move W8, [X8+32]
	055 Move W9, [X19+40]
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Move W8, [X19+28]
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Move W8, 1
	060 Move W0, W31
	061 Move X8, 0x22A2000
	062 Move X0, [X19+16]
	063 Move X8, [X8+1944]
	064 Move X2, X31
	065 Move X1, [X8]
	066 Call String.Concat, X0, X1
	067 Move W8, W31
	068 Move [X19+16], X0
	069 Move W0, 1
	070 Move [X19+24], W8
	071 Move [X19+25], W0
	072 Call 0x1C17F20
	073 Call 0x1C17F28
	074 Move X20, X0
	075 NotImplemented "Instruction CMP not yet implemented."
	076 Move X0, X20
	077 Call 0x3EB2AD0
	078 Move X20, X0
	079 Move X0, 0x2299000
	080 Move X0, [X0+2000]
	081 Call 0x1C17D08
	082 Move X8, [X20]
	083 Move X1, [X8]
	084 Call 0x1C18270
	085 Move TEMP, X0
	086 And TEMP, TEMP, 1
	087 Compare TEMP, 1
	088 JumpIfNotEqual {127}
	089 Move X21, [X20]
	090 Call 0x3EB2AE0
	091 Move X0, [X19+48]
	092 Compare X0, 0
	093 JumpIfEqual {97}
	094 Move X1, X31
	095 Call Socket.Close, X0
	096 Move [X19+48], X31
	097 Compare X21, 0
	098 JumpIfEqual {126}
	099 Move X20, [X19+16]
	100 Move X0, X21
	101 Move X1, X31
	102 Call Exception.GetType, X0
	103 Move X22, X0
	104 Move X0, 0x22A2000
	105 Move X0, [X0+1952]
	106 Call 0x1C17D08
	107 Move X21, X0
	108 Compare X22, 0
	109 JumpIfEqual {116}
	110 Move X8, [X22]
	111 Move X0, X22
	112 Move X9, [X8+360]
	113 Move X1, [X8+368]
	114 NotImplemented "Instruction BLR not yet implemented."
	115 Move X22, X0
	116 Move X0, 0x2299000
	117 Move X0, [X0+3544]
	118 Call 0x1C17D08
	119 Move X3, X0
	120 Move X0, X20
	121 Move X1, X21
	122 Move X2, X22
	123 Move X4, X31
	124 Call String.Concat, X0, X1, X2, X3
	125 Move [X19+16], X0
	126 Call 0x1C17F20
	127 Move W0, 8
	128 Call 0x3EB2AF0
	129 Move X8, [X20]
	130 Move [X0], X8
	131 Move X1, 0x205A000
	132 Add X1, X1, 3672
	133 Move X2, X31
	134 Call 0x3EB2B00
	135 Move X20, X0
	136 Call 0x3EB2AE0
	137 Move X0, X20
	138 Call 0x1D2D690
	139 Call 0x1991590

Method: System.Void Dispose()

Disassembly:
	0x01E5B340 MOVN W8, 0x80000000
	0x01E5B344 STR W8, [X21 + 0x28]
	0x01E5B348 LDP X30, X21, [X31], #0x20
	0x01E5B34C RET
	0x01E5B350 STR X30, [X31 - 0x30]!
	0x01E5B354 STP X22, X21, [X31 + 0x10]
	0x01E5B358 STP X20, X19, [X31 + 0x20]
	0x01E5B35C ADRP X21, 0x257E000
	0x01E5B360 LDRB W8, [X21 + 0x79]
	0x01E5B364 MOV X20, X1
	0x01E5B368 MOV X19, X0
	0x01E5B36C TBNZ X8, 0x0, 0x1E5B384
	0x01E5B370 ADRP X0, 0x2298000
	0x01E5B374 LDR X0, [X0 + 0x988]
	0x01E5B378 BL 0x1C16CF4
	0x01E5B37C MOVZ W8, 0x1
	0x01E5B380 STRB W8, [X21 + 0x79]
	0x01E5B384 CBZ X20, 0x1E5B400
	0x01E5B388 MOV X0, X20
	0x01E5B38C MOV X1, X31
	0x01E5B390 BL 0x322B5E4
	0x01E5B394 CBZ X0, 0x1E5B440
	0x01E5B398 MOVZ W1, 0x2F
	0x01E5B39C MOV X2, X31
	0x01E5B3A0 MOV X20, X0
	0x01E5B3A4 BL 0x322BD98
	0x01E5B3A8 CMP W0, 0x1
	0x01E5B3AC CSEL X22, X31, X19, LT
	0x01E5B3B0 CSEL X8, X19, X31, LT
	0x01E5B3B4 CMP W0, 0x0
	0x01E5B3B8 B.LE 0x1E5B414
	0x01E5B3BC MOV W21, W0
	0x01E5B3C0 MOV X0, X20
	0x01E5B3C4 MOV W1, W31
	0x01E5B3C8 MOV W2, W21
	0x01E5B3CC MOV X3, X31
	0x01E5B3D0 BL 0x3228DE4
	0x01E5B3D4 CBZ X22, 0x1E5B440
	0x01E5B3D8 STR X0, [X22 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X0
	005 Move X0, [X0+48]
	006 Compare X0, 0
	007 JumpIfEqual {11}
	008 Move X1, X31
	009 Call Socket.Close, X0
	010 Move [X19+48], X31
	011 Move X20, [X31+16]
	012 Move X19, [X31+24]
	013 Move X30, [X31+32]
	014 Return 
	015 NotImplemented "Instruction CMP not yet implemented."
	016 Move X20, X0
	017 Move X0, X20
	018 Call 0x3EB2AD0
	019 Move X20, X0
	020 Move X0, 0x229F000
	021 Move X0, [X0+3264]
	022 Call 0x1C17D08
	023 Move X8, [X20]
	024 Move X1, [X8]
	025 Call 0x1C18270
	026 Move TEMP, X0
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfNotEqual {31}
	030 Call 0x3EB2AE0
	031 Move W0, 8
	032 Call 0x3EB2AF0
	033 Move X8, [X20]
	034 Move [X0], X8
	035 Move X1, 0x205A000
	036 Add X1, X1, 3672
	037 Move X2, X31
	038 Call 0x3EB2B00
	039 Move X20, X0
	040 Call 0x3EB2AE0
	041 Move X0, X20
	042 Call 0x1D2D690
	043 Call 0x1991590

Method: System.Void .ctor()

Disassembly:
	0x01E5B3DC LDR W8, [X20 + 0x10]
	0x01E5B3E0 ORN W9, W31, W21, 0x0
	0x01E5B3E4 ADD W1, W21, 0x1
	0x01E5B3E8 MOV X0, X20
	0x01E5B3EC ADD W2, W8, W9
	0x01E5B3F0 MOV X3, X31
	0x01E5B3F4 BL 0x3228DE4
	0x01E5B3F8 CBNZ X19, 0x1E5B42C
	0x01E5B3FC B 0x1E5B440
	0x01E5B400 ADRP X8, 0x2298000
	0x01E5B404 LDR X8, [X8 + 0x988]
	0x01E5B408 LDR X0, [X8]
	0x01E5B40C STR X0, [X19 + 0x10]
	0x01E5B410 B 0x1E5B42C
	0x01E5B414 CBZ X8, 0x1E5B440
	0x01E5B418 STR X20, [X8 + 0x10]
	0x01E5B41C ADRP X8, 0x2298000
	0x01E5B420 LDR X8, [X8 + 0x988]
	0x01E5B424 LDR X0, [X8]
	0x01E5B428 CBZ X19, 0x1E5B440
	0x01E5B42C STR X0, [X19 + 0x18]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x257F000
	006 Move X21, 0x22A2000
	007 Move W8, [X20+109]
	008 Move X21, [X21+1912]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x22A2000
	015 Move X0, [X0+1912]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+109], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Call PhotonPing..ctor, X0
	030 Return 

