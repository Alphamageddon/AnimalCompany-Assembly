Type: Fusion.Photon.Realtime.Room

Method: Fusion.Photon.Realtime.LoadBalancingClient get_LoadBalancingClient()

Disassembly:
	0x01E5F674 LDR W1, [X19 + 0x18]
	0x01E5F678 LDR X2, [X8]

ISIL:
	001 Move X0, [X0+96]
	002 Return X0

Method: System.Void set_LoadBalancingClient(Fusion.Photon.Realtime.LoadBalancingClient value)

Disassembly:
	0x01E5F67C BL 0x2A13880
	0x01E5F680 MOV W21, W0

ISIL:
	001 Move [X0+96], X1
	002 Return 

Method: System.String get_Name()

Disassembly:
	0x01E5F684 TBNZ X0, 0x0, 0x1E5F69C
	0x01E5F688 LDR X8, [X20]

ISIL:
	001 Move X0, [X0+64]
	002 Return X0

Method: System.Void set_Name(System.String value)

Disassembly:
	0x01E5F68C MOV X0, X20
	0x01E5F690 MOV X1, X19

ISIL:
	001 Move [X0+64], X1
	002 Return 

Method: System.Boolean get_IsOffline()

Disassembly:
	0x01E5C1C4 LDP X22, X21, [X31 + 0x20]
	0x01E5C1C8 LDP X30, X23, [X31 + 0x10]

ISIL:
	001 Move W0, [X0+104]
	002 Return X0

Method: System.Void set_IsOffline(System.Boolean value)

Disassembly:
	0x01E5F694 LDP X9, X2, [X8 + 0x1C8]
	0x01E5F698 BLR X9
	0x01E5F69C LDP X20, X19, [X31 + 0x10]

ISIL:
	001 And W8, W1, 1
	002 Move [X0+104], W8
	003 Return 

Method: System.Boolean get_IsOpen()

Disassembly:
	0x01E5F6A0 ORN W8, W31, W21, 0x0
	0x01E5F6A4 AND W0, W8, 0x1

ISIL:
	001 Move W0, [X0+56]
	002 Return X0

Method: System.Void set_IsOpen(System.Boolean value)

Disassembly:
	0x01E5F6A8 LDP X30, X21, [X31], #0x20
	0x01E5F6AC RET
	0x01E5F6B0 BL 0x1C16F20
	0x01E5F6B4 STP X30, X21, [X31 - 0x20]!
	0x01E5F6B8 STP X20, X19, [X31 + 0x10]
	0x01E5F6BC ADRP X21, 0x257A000
	0x01E5F6C0 LDRB W8, [X21 + 0x9E]
	0x01E5F6C4 MOV X19, X1
	0x01E5F6C8 MOV X20, X0
	0x01E5F6CC TBNZ X8, 0x0, 0x1E5F6E4
	0x01E5F6D0 ADRP X0, 0x229D000
	0x01E5F6D4 LDR X0, [X0 + 0xA00]
	0x01E5F6D8 BL 0x1C16CF4
	0x01E5F6DC MOVZ W8, 0x1
	0x01E5F6E0 STRB W8, [X21 + 0x9E]
	0x01E5F6E4 CBZ X19, 0x1E5F71C
	0x01E5F6E8 LDR X0, [X20 + 0x70]
	0x01E5F6EC CBZ X0, 0x1E5F71C
	0x01E5F6F0 ADRP X8, 0x229D000
	0x01E5F6F4 LDR X8, [X8 + 0xA00]
	0x01E5F6F8 LDR W1, [X19 + 0x18]
	0x01E5F6FC MOV X2, X19
	0x01E5F700 LDR X3, [X8]
	0x01E5F704 BL 0x2A13678
	0x01E5F708 STR X20, [X19 + 0x10]
	0x01E5F70C MOV X0, X19
	0x01E5F710 LDP X20, X19, [X31 + 0x10]
	0x01E5F714 LDP X30, X21, [X31], #0x20
	0x01E5F718 RET
	0x01E5F71C BL 0x1C16F20
	0x01E5F720 STR X30, [X31 - 0x30]!
	0x01E5F724 STP X22, X21, [X31 + 0x10]
	0x01E5F728 STP X20, X19, [X31 + 0x20]
	0x01E5F72C ADRP X22, 0x257A000
	0x01E5F730 LDRB W8, [X22 + 0x9F]
	0x01E5F734 MOV W21, W2
	0x01E5F738 MOV W19, W1
	0x01E5F73C MOV X20, X0
	0x01E5F740 TBNZ X8, 0x0, 0x1E5F758
	0x01E5F744 ADRP X0, 0x229D000
	0x01E5F748 LDR X0, [X0 + 0xA08]
	0x01E5F74C BL 0x1C16CF4
	0x01E5F750 MOVZ W8, 0x1
	0x01E5F754 STRB W8, [X22 + 0x9F]
	0x01E5F758 CBNZ W19, 0x1E5F764
	0x01E5F75C TBZ X21, 0x0, 0x1E5F764
	0x01E5F760 LDR W19, [X20 + 0x48]
	0x01E5F764 STR X31, [X31 + 0x8]
	0x01E5F768 LDR X0, [X20 + 0x70]
	0x01E5F76C CBZ X0, 0x1E5F79C
	0x01E5F770 ADRP X8, 0x229D000
	0x01E5F774 LDR X8, [X8 + 0xA08]
	0x01E5F778 ADD X2, X31, 0x8
	0x01E5F77C MOV W1, W19

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x257B000
	007 Move W8, [X20+146]
	008 Move X19, X0
	009 And W22, W1, 1
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x2295000
	015 Move X0, [X0+2904]
	016 Call 0x1C17CF4
	017 Move X0, 0x229D000
	018 Move X0, [X0+3488]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X20+146], W8
	022 Move W8, [X19+56]
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Move W8, [X19+104]
	025 Compare W8, 0
	026 JumpIfNotEqual {56}
	027 Move X8, 0x229D000
	028 Move X20, [X19+96]
	029 Move X8, [X8+3488]
	030 Move X0, [X8]
	031 Call 0x1C17F10
	032 Move X1, X31
	033 Move X21, X0
	034 Call Hashtable..ctor, X0
	035 Move X8, 0x2295000
	036 Move X8, [X8+2904]
	037 Add X1, X31, 12
	038 Move [X31+12], W22
	039 Move X0, [X8]
	040 Call 0x1C17E04
	041 Compare X21, 0
	042 JumpIfEqual {63}
	043 Move X2, X0
	044 Move W1, 253
	045 Move X0, X21
	046 Move X3, X31
	047 Call Hashtable.Add, X0, X1, X2
	048 Compare X20, 0
	049 JumpIfEqual {63}
	050 Move X0, X20
	051 Move X1, X21
	052 Move X2, X31
	053 Move X3, X31
	054 Move X4, X31
	055 Call LoadBalancingClient.OpSetPropertiesOfRoom, X0, X1, X2, X3
	056 Move [X19+56], W22
	057 Move X20, [X31+32]
	058 Move X19, [X31+40]
	059 Move X22, [X31+16]
	060 Move X21, [X31+24]
	061 Move X30, [X31+48]
	062 Return 
	063 Call 0x1C17F20

Method: System.Boolean get_IsVisible()

Disassembly:
	0x01E5F780 LDR X3, [X8]
	0x01E5F784 BL 0x2A150AC

ISIL:
	001 Move W0, [X0+57]
	002 Return X0

Method: System.Void set_IsVisible(System.Boolean value)

Disassembly:
	0x01E5F788 LDR X0, [X31 + 0x8]
	0x01E5F78C LDP X20, X19, [X31 + 0x20]
	0x01E5F790 LDP X22, X21, [X31 + 0x10]
	0x01E5F794 LDR X30, [X31], #0x30
	0x01E5F798 RET
	0x01E5F79C BL 0x1C16F20
	0x01E5F7A0 STR X30, [X31 - 0x20]!
	0x01E5F7A4 STP X20, X19, [X31 + 0x10]
	0x01E5F7A8 ADRP X20, 0x257A000
	0x01E5F7AC LDRB W8, [X20 + 0xA0]
	0x01E5F7B0 MOV X19, X0
	0x01E5F7B4 TBNZ X8, 0x0, 0x1E5F7CC
	0x01E5F7B8 ADRP X0, 0x2294000
	0x01E5F7BC LDR X0, [X0 + 0xAC8]
	0x01E5F7C0 BL 0x1C16CF4
	0x01E5F7C4 MOVZ W8, 0x1
	0x01E5F7C8 STRB W8, [X20 + 0xA0]
	0x01E5F7CC LDR X8, [X19 + 0x30]
	0x01E5F7D0 CBZ X8, 0x1E5F808
	0x01E5F7D4 LDR W8, [X8 + 0x18]
	0x01E5F7D8 CBZ W8, 0x1E5F808
	0x01E5F7DC ADRP X8, 0x2294000
	0x01E5F7E0 LDR X8, [X8 + 0xAC8]
	0x01E5F7E4 MOV W1, W31
	0x01E5F7E8 LDR X0, [X8]
	0x01E5F7EC BL 0x1C16D6C
	0x01E5F7F0 LDR X2, [X19 + 0x30]
	0x01E5F7F4 MOV X1, X0
	0x01E5F7F8 MOV X0, X19
	0x01E5F7FC LDP X20, X19, [X31 + 0x10]
	0x01E5F800 LDR X30, [X31], #0x20
	0x01E5F804 B 0x1E5F818
	0x01E5F808 LDP X20, X19, [X31 + 0x10]
	0x01E5F80C MOV W0, W31
	0x01E5F810 LDR X30, [X31], #0x20
	0x01E5F814 RET
	0x01E5F818 STP X30, X23, [X31 - 0x30]!
	0x01E5F81C STP X22, X21, [X31 + 0x10]
	0x01E5F820 STP X20, X19, [X31 + 0x20]
	0x01E5F824 ADRP X21, 0x257A000
	0x01E5F828 LDRB W8, [X21 + 0xA2]
	0x01E5F82C MOV X20, X2
	0x01E5F830 MOV X22, X1
	0x01E5F834 MOV X19, X0
	0x01E5F838 TBNZ X8, 0x0, 0x1E5F850
	0x01E5F83C ADRP X0, 0x229C000
	0x01E5F840 LDR X0, [X0 + 0xDA0]
	0x01E5F844 BL 0x1C16CF4
	0x01E5F848 MOVZ W8, 0x1
	0x01E5F84C STRB W8, [X21 + 0xA2]
	0x01E5F850 LDRB W8, [X19 + 0x68]
	0x01E5F854 CBZ W8, 0x1E5F86C
	0x01E5F858 LDP X20, X19, [X31 + 0x20]
	0x01E5F85C LDP X22, X21, [X31 + 0x10]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x257B000
	007 Move W8, [X20+147]
	008 Move X19, X0
	009 And W22, W1, 1
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x2295000
	015 Move X0, [X0+2904]
	016 Call 0x1C17CF4
	017 Move X0, 0x229D000
	018 Move X0, [X0+3488]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X20+147], W8
	022 Move W8, [X19+57]
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Move W8, [X19+104]
	025 Compare W8, 0
	026 JumpIfNotEqual {56}
	027 Move X8, 0x229D000
	028 Move X20, [X19+96]
	029 Move X8, [X8+3488]
	030 Move X0, [X8]
	031 Call 0x1C17F10
	032 Move X1, X31
	033 Move X21, X0
	034 Call Hashtable..ctor, X0
	035 Move X8, 0x2295000
	036 Move X8, [X8+2904]
	037 Add X1, X31, 12
	038 Move [X31+12], W22
	039 Move X0, [X8]
	040 Call 0x1C17E04
	041 Compare X21, 0
	042 JumpIfEqual {63}
	043 Move X2, X0
	044 Move W1, 254
	045 Move X0, X21
	046 Move X3, X31
	047 Call Hashtable.Add, X0, X1, X2
	048 Compare X20, 0
	049 JumpIfEqual {63}
	050 Move X0, X20
	051 Move X1, X21
	052 Move X2, X31
	053 Move X3, X31
	054 Move X4, X31
	055 Call LoadBalancingClient.OpSetPropertiesOfRoom, X0, X1, X2, X3
	056 Move [X19+57], W22
	057 Move X20, [X31+32]
	058 Move X19, [X31+40]
	059 Move X22, [X31+16]
	060 Move X21, [X31+24]
	061 Move X30, [X31+48]
	062 Return 
	063 Call 0x1C17F20

Method: System.Int32 get_MaxPlayers()

Disassembly:
	0x01E5F860 MOV W0, W31
	0x01E5F864 LDP X30, X23, [X31], #0x30

ISIL:
	001 Move W0, [X0+32]
	002 Return X0

Method: System.Void set_MaxPlayers(System.Int32 value)

Disassembly:
	0x01E5F868 RET
	0x01E5F86C ADRP X23, 0x229C000
	0x01E5F870 LDR X23, [X23 + 0xDA0]
	0x01E5F874 LDR X0, [X23]
	0x01E5F878 BL 0x1C16F10
	0x01E5F87C MOVZ W1, 0x1
	0x01E5F880 MOV X2, X31
	0x01E5F884 MOV X21, X0
	0x01E5F888 BL 0x34ED820
	0x01E5F88C CBZ X21, 0x1E5F908
	0x01E5F890 MOVZ W1, 0xF7
	0x01E5F894 MOV X0, X21
	0x01E5F898 MOV X2, X22
	0x01E5F89C MOV X3, X31
	0x01E5F8A0 BL 0x34EDAA0
	0x01E5F8A4 CBZ X20, 0x1E5F8DC
	0x01E5F8A8 LDR X0, [X23]
	0x01E5F8AC BL 0x1C16F10
	0x01E5F8B0 MOVZ W1, 0x1
	0x01E5F8B4 MOV X2, X31
	0x01E5F8B8 MOV X22, X0
	0x01E5F8BC BL 0x34ED820
	0x01E5F8C0 CBZ X22, 0x1E5F908
	0x01E5F8C4 MOVZ W1, 0xF7
	0x01E5F8C8 MOV X0, X22
	0x01E5F8CC MOV X2, X20
	0x01E5F8D0 MOV X3, X31
	0x01E5F8D4 BL 0x34EDAA0
	0x01E5F8D8 B 0x1E5F8E0
	0x01E5F8DC MOV X22, X31
	0x01E5F8E0 LDR X0, [X19 + 0x60]
	0x01E5F8E4 CBZ X0, 0x1E5F908
	0x01E5F8E8 MOV X1, X21
	0x01E5F8EC MOV X2, X22
	0x01E5F8F0 LDP X20, X19, [X31 + 0x20]
	0x01E5F8F4 LDP X22, X21, [X31 + 0x10]
	0x01E5F8F8 MOV X3, X31
	0x01E5F8FC MOV X4, X31
	0x01E5F900 LDP X30, X23, [X31], #0x30
	0x01E5F904 B 0x1E4E434
	0x01E5F908 BL 0x1C16F20
	0x01E5F90C STP X30, X21, [X31 - 0x20]!
	0x01E5F910 STP X20, X19, [X31 + 0x10]
	0x01E5F914 ADRP X21, 0x257A000
	0x01E5F918 LDRB W8, [X21 + 0xA1]
	0x01E5F91C MOV X19, X1
	0x01E5F920 MOV X20, X0
	0x01E5F924 TBNZ X8, 0x0, 0x1E5F93C
	0x01E5F928 ADRP X0, 0x229D000
	0x01E5F92C LDR X0, [X0 + 0xA10]
	0x01E5F930 BL 0x1C16CF4
	0x01E5F934 MOVZ W8, 0x1
	0x01E5F938 STRB W8, [X21 + 0xA1]
	0x01E5F93C CBZ X19, 0x1E5F960
	0x01E5F940 LDR W8, [X19 + 0x18]
	0x01E5F944 CBZ W8, 0x1E5F960
	0x01E5F948 LDR X2, [X20 + 0x30]
	0x01E5F94C MOV X0, X20
	0x01E5F950 MOV X1, X19
	0x01E5F954 LDP X20, X19, [X31 + 0x10]
	0x01E5F958 LDP X30, X21, [X31], #0x20
	0x01E5F95C B 0x1E5F818
	0x01E5F960 LDR X0, [X20 + 0x60]
	0x01E5F964 CBZ X0, 0x1E5F998
	0x01E5F968 ADRP X9, 0x229D000
	0x01E5F96C LDR X8, [X0]
	0x01E5F970 LDR X9, [X9 + 0xA10]
	0x01E5F974 MOVZ W1, 0x1
	0x01E5F978 LDR X3, [X8 + 0x220]
	0x01E5F97C LDR X2, [X9]
	0x01E5F980 LDR X9, [X8 + 0x218]
	0x01E5F984 BLR X9
	0x01E5F988 LDP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x257B000
	007 Move W8, [X20+148]
	008 Move W21, W1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {25}
	014 Move X0, 0x2296000
	015 Move X0, [X0+2520]
	016 Call 0x1C17CF4
	017 Move X0, 0x229D000
	018 Move X0, [X0+3488]
	019 Call 0x1C17CF4
	020 Move X0, 0x2295000
	021 Move X0, [X0+1880]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X20+148], W8
	025 Move TEMP, X21
	026 And TEMP, TEMP, -2147483648
	027 Compare TEMP, -2147483648
	028 JumpIfEqual {79}
	029 Move W8, [X19+32]
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move W8, [X19+104]
	032 Move [X19+32], W21
	033 Compare W8, 0
	034 JumpIfNotEqual {79}
	035 Move X8, 0x229D000
	036 Move X20, [X19+96]
	037 Move X8, [X8+3488]
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Move X0, [X8]
	040 Move W8, 256
	041 NotImplemented "Instruction CSEL not yet implemented."
	042 Call 0x1C17F10
	043 Move X1, X31
	044 Move X21, X0
	045 Call Hashtable..ctor, X0
	046 Move X8, 0x2296000
	047 Move X8, [X8+2520]
	048 Add X1, X31, 12
	049 Move [X31+12], W22
	050 Move X0, [X8]
	051 Call 0x1C17E04
	052 Compare X21, 0
	053 JumpIfEqual {85}
	054 Move X2, X0
	055 Move W1, 255
	056 Move X0, X21
	057 Move X3, X31
	058 Call Hashtable.Add, X0, X1, X2
	059 Move X9, 0x2295000
	060 Move W8, [X19+32]
	061 Move X9, [X9+1880]
	062 Add X1, X31, 8
	063 Move [X31+8], W8
	064 Move X0, [X9]
	065 Call 0x1C17E04
	066 Move X2, X0
	067 Move W1, 243
	068 Move X0, X21
	069 Move X3, X31
	070 Call Hashtable.Add, X0, X1, X2
	071 Compare X20, 0
	072 JumpIfEqual {85}
	073 Move X0, X20
	074 Move X1, X21
	075 Move X2, X31
	076 Move X3, X31
	077 Move X4, X31
	078 Call LoadBalancingClient.OpSetPropertiesOfRoom, X0, X1, X2, X3
	079 Move X20, [X31+32]
	080 Move X19, [X31+40]
	081 Move X22, [X31+16]
	082 Move X21, [X31+24]
	083 Move X30, [X31+48]
	084 Return 
	085 Call 0x1C17F20

Method: System.Int32 get_PlayerCount()

Disassembly:
	0x01E5F98C MOV W0, W31
	0x01E5F990 LDP X30, X21, [X31], #0x20
	0x01E5F994 RET
	0x01E5F998 BL 0x1C16F20
	0x01E5F99C SUB X31, X31, 0x40
	0x01E5F9A0 STP X30, X23, [X31 + 0x10]
	0x01E5F9A4 STP X22, X21, [X31 + 0x20]
	0x01E5F9A8 STP X20, X19, [X31 + 0x30]
	0x01E5F9AC ADRP X20, 0x257A000
	0x01E5F9B0 ADRP X21, 0x2294000
	0x01E5F9B4 LDRB W8, [X20 + 0xA3]
	0x01E5F9B8 LDR X21, [X21 + 0x9D0]
	0x01E5F9BC MOV X19, X0
	0x01E5F9C0 TBNZ X8, 0x0, 0x1E5FA20
	0x01E5F9C4 ADRP X0, 0x2294000
	0x01E5F9C8 LDR X0, [X0 + 0x758]
	0x01E5F9CC BL 0x1C16CF4
	0x01E5F9D0 ADRP X0, 0x2294000
	0x01E5F9D4 LDR X0, [X0 + 0x9D0]
	0x01E5F9D8 BL 0x1C16CF4
	0x01E5F9DC ADRP X0, 0x229D000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x257B000
	005 Move W8, [X20+149]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x229E000
	012 Move X0, [X0+1984]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+149], W8
	016 Move X0, [X19+112]
	017 Compare X0, 0
	018 JumpIfEqual {24}
	019 Move X8, 0x229E000
	020 Move X8, [X8+1984]
	021 Move X1, [X8]
	022 Call Dictionary`2<Int32, Object>.get_Count, X0
	023 And W0, W0, 255
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X30, [X31+32]
	027 Return X0

Method: System.Collections.Generic.Dictionary`2<System.Int32, Fusion.Photon.Realtime.Player> get_Players()

Disassembly:
	0x01E5BAE0 LDR X22, [X22 + 0x858]
	0x01E5BAE4 LDR X23, [X23 + 0x878]

ISIL:
	001 Move X0, [X0+112]
	002 Return X0

Method: System.Void set_Players(System.Collections.Generic.Dictionary`2<System.Int32, Fusion.Photon.Realtime.Player> value)

Disassembly:
	0x01E5F9E0 LDR X0, [X0 + 0xA18]
	0x01E5F9E4 BL 0x1C16CF4

ISIL:
	001 Move [X0+112], X1
	002 Return 

Method: System.String[] get_ExpectedUsers()

Disassembly:
	0x01E5F9E8 ADRP X0, 0x229D000
	0x01E5F9EC LDR X0, [X0 + 0xA20]

ISIL:
	001 Move X0, [X0+48]
	002 Return X0

Method: System.Int32 get_PlayerTtl()

Disassembly:
	0x01E5F9F0 BL 0x1C16CF4
	0x01E5F9F4 ADRP X0, 0x229D000

ISIL:
	001 Move W0, [X0+40]
	002 Return X0

Method: System.Void set_PlayerTtl(System.Int32 value)

Disassembly:
	0x01E5F9F8 LDR X0, [X0 + 0xA28]
	0x01E5F9FC BL 0x1C16CF4
	0x01E5FA00 ADRP X0, 0x229D000
	0x01E5FA04 LDR X0, [X0 + 0xA30]
	0x01E5FA08 BL 0x1C16CF4
	0x01E5FA0C ADRP X0, 0x229D000
	0x01E5FA10 LDR X0, [X0 + 0xA38]
	0x01E5FA14 BL 0x1C16CF4
	0x01E5FA18 MOVZ W8, 0x1
	0x01E5FA1C STRB W8, [X20 + 0xA3]
	0x01E5FA20 LDR X0, [X21]
	0x01E5FA24 MOVZ W1, 0x5
	0x01E5FA28 BL 0x1C16D6C
	0x01E5FA2C CBZ X0, 0x1E5FBBC
	0x01E5FA30 LDR X21, [X19 + 0x40]
	0x01E5FA34 MOV X20, X0
	0x01E5FA38 CBZ X21, 0x1E5FA50
	0x01E5FA3C LDR X8, [X20]
	0x01E5FA40 MOV X0, X21
	0x01E5FA44 LDR X1, [X8 + 0x40]
	0x01E5FA48 BL 0x1C16E00
	0x01E5FA4C CBZ X0, 0x1E5FBB0
	0x01E5FA50 LDR W8, [X20 + 0x18]
	0x01E5FA54 CBZ W8, 0x1E5FBAC
	0x01E5FA58 STR X21, [X20 + 0x20]
	0x01E5FA5C LDRB W9, [X19 + 0x39]
	0x01E5FA60 ADRP X10, 0x229D000
	0x01E5FA64 ADRP X11, 0x229D000
	0x01E5FA68 ADRP X12, 0x229D000
	0x01E5FA6C LDR X10, [X10 + 0xA38]
	0x01E5FA70 LDR X11, [X11 + 0xA18]
	0x01E5FA74 LDR X12, [X12 + 0xA30]
	0x01E5FA78 CMP W9, 0x0
	0x01E5FA7C LDR X21, [X10]
	0x01E5FA80 CSEL X9, X11, X12, EQ
	0x01E5FA84 LDR X22, [X9]
	0x01E5FA88 CBZ X22, 0x1E5FAA4

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x257B000
	007 Move W8, [X21+150]
	008 Move W19, W1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x2295000
	015 Move X0, [X0+1880]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+150], W8
	019 Move W8, [X20+40]
	020 NotImplemented "Instruction CMP not yet implemented."
	021 Move W8, [X20+104]
	022 Compare W8, 0
	023 JumpIfNotEqual {38}
	024 Move X8, 0x2295000
	025 Move X21, [X20+96]
	026 Move X8, [X8+1880]
	027 Add X1, X31, 12
	028 Move [X31+12], W19
	029 Move X0, [X8]
	030 Call 0x1C17E04
	031 Compare X21, 0
	032 JumpIfEqual {45}
	033 Move X2, X0
	034 Move W1, 246
	035 Move X0, X21
	036 Move X3, X31
	037 Call LoadBalancingClient.OpSetPropertyOfRoom, X0, X1, X2
	038 Move [X20+40], W19
	039 Move X20, [X31+32]
	040 Move X19, [X31+40]
	041 Move X30, [X31+16]
	042 Move X21, [X31+24]
	043 Add X31, X31, 48
	044 Return 
	045 Call 0x1C17F20

Method: System.Int32 get_EmptyRoomTtl()

Disassembly:
	0x01E5FA8C LDR X8, [X20]
	0x01E5FA90 MOV X0, X22

ISIL:
	001 Move W0, [X0+36]
	002 Return X0

Method: System.Void set_EmptyRoomTtl(System.Int32 value)

Disassembly:
	0x01E5FA94 LDR X1, [X8 + 0x40]
	0x01E5FA98 BL 0x1C16E00
	0x01E5FA9C CBZ X0, 0x1E5FBB0
	0x01E5FAA0 LDR W8, [X20 + 0x18]
	0x01E5FAA4 CMP W8, 0x1
	0x01E5FAA8 B.LS 0x1E5FBAC
	0x01E5FAAC STR X22, [X20 + 0x28]
	0x01E5FAB0 LDRB W9, [X19 + 0x38]
	0x01E5FAB4 ADRP X10, 0x229D000
	0x01E5FAB8 ADRP X11, 0x229D000
	0x01E5FABC LDR X10, [X10 + 0xA28]
	0x01E5FAC0 LDR X11, [X11 + 0xA20]
	0x01E5FAC4 CMP W9, 0x0
	0x01E5FAC8 CSEL X9, X10, X11, EQ
	0x01E5FACC LDR X22, [X9]
	0x01E5FAD0 CBZ X22, 0x1E5FAEC
	0x01E5FAD4 LDR X8, [X20]
	0x01E5FAD8 MOV X0, X22
	0x01E5FADC LDR X1, [X8 + 0x40]
	0x01E5FAE0 BL 0x1C16E00
	0x01E5FAE4 CBZ X0, 0x1E5FBB0
	0x01E5FAE8 LDR W8, [X20 + 0x18]
	0x01E5FAEC CMP W8, 0x2
	0x01E5FAF0 B.LS 0x1E5FBAC
	0x01E5FAF4 ADRP X23, 0x2294000
	0x01E5FAF8 LDR X23, [X23 + 0x758]
	0x01E5FAFC STR X22, [X20 + 0x30]
	0x01E5FB00 LDR W8, [X19 + 0x20]
	0x01E5FB04 ADD X1, X31, 0xC
	0x01E5FB08 LDR X0, [X23]
	0x01E5FB0C STR W8, [X31 + 0xC]
	0x01E5FB10 BL 0x1C16E04
	0x01E5FB14 MOV X22, X0
	0x01E5FB18 CBZ X0, 0x1E5FB30
	0x01E5FB1C LDR X8, [X20]
	0x01E5FB20 MOV X0, X22
	0x01E5FB24 LDR X1, [X8 + 0x40]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x257B000
	007 Move W8, [X21+151]
	008 Move W19, W1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x2295000
	015 Move X0, [X0+1880]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+151], W8
	019 Move W8, [X20+36]
	020 NotImplemented "Instruction CMP not yet implemented."
	021 Move W8, [X20+104]
	022 Compare W8, 0
	023 JumpIfNotEqual {38}
	024 Move X8, 0x2295000
	025 Move X21, [X20+96]
	026 Move X8, [X8+1880]
	027 Add X1, X31, 12
	028 Move [X31+12], W19
	029 Move X0, [X8]
	030 Call 0x1C17E04
	031 Compare X21, 0
	032 JumpIfEqual {45}
	033 Move X2, X0
	034 Move W1, 245
	035 Move X0, X21
	036 Move X3, X31
	037 Call LoadBalancingClient.OpSetPropertyOfRoom, X0, X1, X2
	038 Move [X20+36], W19
	039 Move X20, [X31+32]
	040 Move X19, [X31+40]
	041 Move X30, [X31+16]
	042 Move X21, [X31+24]
	043 Add X31, X31, 48
	044 Return 
	045 Call 0x1C17F20

Method: System.Int32 get_MasterClientId()

Disassembly:
	0x01E5B78C LDR X21, [X31 + 0x30]
	0x01E5B790 CBZ X21, 0x1E5B7F8

ISIL:
	001 Move W0, [X0+72]
	002 Return X0

Method: System.String[] get_PropertiesListedInLobby()

Disassembly:
	0x01E5FB28 BL 0x1C16E00
	0x01E5FB2C CBZ X0, 0x1E5FBB0

ISIL:
	001 Move X0, [X0+80]
	002 Return X0

Method: System.Void set_PropertiesListedInLobby(System.String[] value)

Disassembly:
	0x01E5FB30 LDR W8, [X20 + 0x18]
	0x01E5FB34 CMP W8, 0x3

ISIL:
	001 Move [X0+80], X1
	002 Return 

Method: System.Boolean get_AutoCleanUp()

Disassembly:
	0x01E5FB38 B.LS 0x1E5FBAC
	0x01E5FB3C MOV X0, X19

ISIL:
	001 Move W0, [X0+58]
	002 Return X0

Method: System.Boolean get_BroadcastPropertiesChangeToAll()

Disassembly:
	0x01E5FB40 STR X22, [X20 + 0x38]
	0x01E5FB44 BL 0x1E5E98C

ISIL:
	001 Move W0, [X0+120]
	002 Return X0

Method: System.Void set_BroadcastPropertiesChangeToAll(System.Boolean value)

Disassembly:
	0x01E5FB48 LDR X8, [X23]
	0x01E5FB4C STR W0, [X31 + 0x8]
	0x01E5FB50 ADD X1, X31, 0x8

ISIL:
	001 And W8, W1, 1
	002 Move [X0+120], W8
	003 Return 

Method: System.Boolean get_SuppressRoomEvents()

Disassembly:
	0x01E5FB54 MOV X0, X8
	0x01E5FB58 BL 0x1C16E04

ISIL:
	001 Move W0, [X0+121]
	002 Return X0

Method: System.Void set_SuppressRoomEvents(System.Boolean value)

Disassembly:
	0x01E5FB5C MOV X19, X0
	0x01E5FB60 CBZ X0, 0x1E5FB78
	0x01E5FB64 LDR X8, [X20]

ISIL:
	001 And W8, W1, 1
	002 Move [X0+121], W8
	003 Return 

Method: System.Boolean get_SuppressPlayerInfo()

Disassembly:
	0x01E5FB68 MOV X0, X19
	0x01E5FB6C LDR X1, [X8 + 0x40]

ISIL:
	001 Move W0, [X0+122]
	002 Return X0

Method: System.Void set_SuppressPlayerInfo(System.Boolean value)

Disassembly:
	0x01E5FB70 BL 0x1C16E00
	0x01E5FB74 CBZ X0, 0x1E5FBB0
	0x01E5FB78 LDR W8, [X20 + 0x18]

ISIL:
	001 And W8, W1, 1
	002 Move [X0+122], W8
	003 Return 

Method: System.Boolean get_PublishUserId()

Disassembly:
	0x01E5FB7C CMP W8, 0x4
	0x01E5FB80 B.LS 0x1E5FBAC

ISIL:
	001 Move W0, [X0+123]
	002 Return X0

Method: System.Void set_PublishUserId(System.Boolean value)

Disassembly:
	0x01E5FB84 MOV X0, X21
	0x01E5FB88 MOV X1, X20
	0x01E5FB8C MOV X2, X31

ISIL:
	001 And W8, W1, 1
	002 Move [X0+123], W8
	003 Return 

Method: System.Boolean get_DeleteNullProperties()

Disassembly:
	0x01E5FB90 STR X19, [X20 + 0x40]
	0x01E5FB94 BL 0x3227C5C

ISIL:
	001 Move W0, [X0+124]
	002 Return X0

Method: System.Void set_DeleteNullProperties(System.Boolean value)

Disassembly:
	0x01E5FB98 LDP X20, X19, [X31 + 0x30]
	0x01E5FB9C LDP X22, X21, [X31 + 0x20]
	0x01E5FBA0 LDP X30, X23, [X31 + 0x10]

ISIL:
	001 And W8, W1, 1
	002 Move [X0+124], W8
	003 Return 

Method: System.Void .ctor(System.String roomName, Fusion.Photon.Realtime.RoomOptions options, System.Boolean isOffline = False)

Disassembly:
	0x01E5FBA4 ADD X31, X31, 0x40
	0x01E5FBA8 RET
	0x01E5FBAC BL 0x1C16F28
	0x01E5FBB0 BL 0x1C16F44
	0x01E5FBB4 MOV X1, X31
	0x01E5FBB8 BL 0x1C16DEC
	0x01E5FBBC BL 0x1C16F20
	0x01E5FBC0 SUB X31, X31, 0x40
	0x01E5FBC4 STP X30, X23, [X31 + 0x10]
	0x01E5FBC8 STP X22, X21, [X31 + 0x20]
	0x01E5FBCC STP X20, X19, [X31 + 0x30]
	0x01E5FBD0 ADRP X20, 0x257A000
	0x01E5FBD4 ADRP X21, 0x2294000
	0x01E5FBD8 LDRB W8, [X20 + 0xA4]
	0x01E5FBDC LDR X21, [X21 + 0x9D0]
	0x01E5FBE0 MOV X19, X0
	0x01E5FBE4 TBNZ X8, 0x0, 0x1E5FC50
	0x01E5FBE8 ADRP X0, 0x229C000
	0x01E5FBEC LDR X0, [X0 + 0xD98]
	0x01E5FBF0 BL 0x1C16CF4
	0x01E5FBF4 ADRP X0, 0x2294000
	0x01E5FBF8 LDR X0, [X0 + 0x758]
	0x01E5FBFC BL 0x1C16CF4
	0x01E5FC00 ADRP X0, 0x2294000
	0x01E5FC04 LDR X0, [X0 + 0x9D0]
	0x01E5FC08 BL 0x1C16CF4
	0x01E5FC0C ADRP X0, 0x229D000
	0x01E5FC10 LDR X0, [X0 + 0xA18]
	0x01E5FC14 BL 0x1C16CF4
	0x01E5FC18 ADRP X0, 0x229D000
	0x01E5FC1C LDR X0, [X0 + 0xA40]
	0x01E5FC20 BL 0x1C16CF4
	0x01E5FC24 ADRP X0, 0x229D000
	0x01E5FC28 LDR X0, [X0 + 0xA20]
	0x01E5FC2C BL 0x1C16CF4
	0x01E5FC30 ADRP X0, 0x229D000
	0x01E5FC34 LDR X0, [X0 + 0xA28]
	0x01E5FC38 BL 0x1C16CF4
	0x01E5FC3C ADRP X0, 0x229D000
	0x01E5FC40 LDR X0, [X0 + 0xA30]
	0x01E5FC44 BL 0x1C16CF4
	0x01E5FC48 MOVZ W8, 0x1
	0x01E5FC4C STRB W8, [X20 + 0xA4]
	0x01E5FC50 LDR X0, [X21]
	0x01E5FC54 MOVZ W1, 0x6
	0x01E5FC58 BL 0x1C16D6C
	0x01E5FC5C CBZ X0, 0x1E5FE40
	0x01E5FC60 LDR X21, [X19 + 0x40]
	0x01E5FC64 MOV X20, X0
	0x01E5FC68 CBZ X21, 0x1E5FC80
	0x01E5FC6C LDR X8, [X20]
	0x01E5FC70 MOV X0, X21
	0x01E5FC74 LDR X1, [X8 + 0x40]
	0x01E5FC78 BL 0x1C16E00

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X24, 0x257B000
	010 Move X25, 0x229E000
	011 Move X23, 0x229E000
	012 Move W8, [X24+152]
	013 Move X25, [X25+2520]
	014 Move X23, [X23+2528]
	015 Move W19, W3
	016 Move X21, X2
	017 Move X22, X1
	018 Move X20, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {31}
	023 Move X0, 0x229E000
	024 Move X0, [X0+2528]
	025 Call 0x1C17CF4
	026 Move X0, 0x229E000
	027 Move X0, [X0+2520]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X24+152], W8
	031 Move X0, [X25]
	032 Call 0x1C17F10
	033 Move X1, [X23]
	034 Move X23, X0
	035 Call Dictionary`2<Int32, Object>..ctor, X0
	036 Move [X20+112], X23
	037 Compare X21, 0
	038 JumpIfEqual {51}
	039 Move X2, [X21+40]
	040 Move X0, X20
	041 Move X1, X22
	042 Call RoomInfo..ctor, X0, X1, X2
	043 Move W8, [X21+16]
	044 Move [X20+57], W8
	045 Move W8, [X21+17]
	046 Move [X20+56], W8
	047 Move W8, [X21+20]
	048 Move [X20+32], W8
	049 Move X8, [X21+48]
	050 Move [X20+80], X8
	051 Move X0, X20
	052 Move X1, X22
	053 Move X2, X31
	054 Call RoomInfo..ctor, X0, X1, X2
	055 And W8, W19, 1
	056 Move [X20+104], W8
	057 Move X20, [X31+48]
	058 Move X19, [X31+56]
	059 Move X22, [X31+32]
	060 Move X21, [X31+40]
	061 Move X24, [X31+16]
	062 Move X23, [X31+24]
	063 Move X30, [X31+64]
	064 Move X25, [X31+72]
	065 Return 

Method: System.Void InternalCacheRoomFlags(System.Int32 roomFlags)

Disassembly:
	0x01E5FD1C CMP W8, 0x2
	0x01E5FD20 B.LS 0x1E5FE30
	0x01E5FD24 ADRP X23, 0x2294000
	0x01E5FD28 LDR X23, [X23 + 0x758]
	0x01E5FD2C STR X22, [X20 + 0x30]
	0x01E5FD30 LDR W8, [X19 + 0x20]
	0x01E5FD34 ADD X1, X31, 0xC
	0x01E5FD38 LDR X0, [X23]
	0x01E5FD3C STR W8, [X31 + 0xC]
	0x01E5FD40 BL 0x1C16E04
	0x01E5FD44 MOV X22, X0
	0x01E5FD48 CBZ X0, 0x1E5FD60
	0x01E5FD4C LDR X8, [X20]
	0x01E5FD50 MOV X0, X22

ISIL:
	001 And W8, W1, 255
	002 Move W9, W8
	003 ShiftRight W9, 5
	004 And W9, W9, 31
	005 Move W10, W8
	006 ShiftRight W10, 2
	007 And W10, W10, 3
	008 Move W11, W8
	009 ShiftRight W11, 6
	010 And W11, W11, 63
	011 Move W12, W8
	012 ShiftRight W12, 3
	013 And W12, W12, 7
	014 Move W13, W8
	015 ShiftRight W13, 4
	016 And W13, W13, 15
	017 Move W8, W8
	018 ShiftRight W8, 1
	019 And W8, W8, 1
	020 Move [X0+120], W9
	021 Move [X0+121], W10
	022 Move [X0+122], W11
	023 Move [X0+123], W12
	024 Move [X0+124], W13
	025 Move [X0+58], W8
	026 Return 

Method: System.Void InternalCacheProperties(ExitGames.Client.Photon.Hashtable propertiesToCache)

Disassembly:
	0x01E5FD54 LDR X1, [X8 + 0x40]
	0x01E5FD58 BL 0x1C16E00
	0x01E5FD5C CBZ X0, 0x1E5FE34
	0x01E5FD60 LDR W8, [X20 + 0x18]
	0x01E5FD64 CMP W8, 0x3
	0x01E5FD68 B.LS 0x1E5FE30
	0x01E5FD6C MOV X0, X19
	0x01E5FD70 STR X22, [X20 + 0x38]
	0x01E5FD74 BL 0x1E5E98C
	0x01E5FD78 LDR X8, [X23]
	0x01E5FD7C STR W0, [X31 + 0x8]
	0x01E5FD80 ADD X1, X31, 0x8
	0x01E5FD84 MOV X0, X8
	0x01E5FD88 BL 0x1C16E04
	0x01E5FD8C MOV X22, X0
	0x01E5FD90 CBZ X0, 0x1E5FDA8
	0x01E5FD94 LDR X8, [X20]
	0x01E5FD98 MOV X0, X22
	0x01E5FD9C LDR X1, [X8 + 0x40]
	0x01E5FDA0 BL 0x1C16E00
	0x01E5FDA4 CBZ X0, 0x1E5FE34
	0x01E5FDA8 LDR W8, [X20 + 0x18]
	0x01E5FDAC CMP W8, 0x4
	0x01E5FDB0 B.LS 0x1E5FE30
	0x01E5FDB4 ADRP X8, 0x229C000
	0x01E5FDB8 LDR X8, [X8 + 0xD98]
	0x01E5FDBC STR X22, [X20 + 0x40]
	0x01E5FDC0 LDR X19, [X19 + 0x18]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W20, [X0+72]
	005 Move X19, X0
	006 Call RoomInfo.InternalCacheProperties, X0, X1
	007 Compare W20, 0
	008 JumpIfEqual {11}
	009 Move W1, [X19+72]
	010 NotImplemented "Instruction CMP not yet implemented."
	011 Move X20, [X31+16]
	012 Move X19, [X31+24]
	013 Move X30, [X31+32]
	014 Return 
	015 Move X8, [X19+96]
	016 Compare X8, 0
	017 JumpIfEqual {35}
	018 Move X9, [X19]
	019 Move X20, [X8+192]
	020 Move X0, X19
	021 Move W2, W31
	022 Move X8, [X9+472]
	023 Move X3, [X9+480]
	024 NotImplemented "Instruction BLR not yet implemented."
	025 Compare X20, 0
	026 JumpIfEqual {35}
	027 Move X1, X0
	028 Move X0, X20
	029 Move X20, [X31+16]
	030 Move X19, [X31+24]
	031 Move X2, X31
	032 Move X30, [X31+32]
	033 Call InRoomCallbacksContainer.OnMasterClientSwitched, X0, X1
	034 Return 
	035 Call 0x1C17F20

Method: System.Boolean SetCustomProperties(ExitGames.Client.Photon.Hashtable propertiesToSet, ExitGames.Client.Photon.Hashtable expectedProperties = null, Fusion.Photon.Realtime.WebFlags webFlags = null)

Disassembly:
	0x01E60290 CBZ X22, 0x1E602AC
	0x01E60294 LDR X8, [X20]
	0x01E60298 MOV X0, X22
	0x01E6029C LDR X1, [X8 + 0x40]
	0x01E602A0 BL 0x1C16E00
	0x01E602A4 CBZ X0, 0x1E603BC
	0x01E602A8 LDR W8, [X20 + 0x18]
	0x01E602AC CMP W8, 0x2
	0x01E602B0 B.LS 0x1E603B8
	0x01E602B4 ADRP X23, 0x2293000
	0x01E602B8 LDR X23, [X23 + 0x758]
	0x01E602BC STR X22, [X20 + 0x30]
	0x01E602C0 LDR W8, [X19 + 0x20]
	0x01E602C4 ADD X1, X31, 0xC
	0x01E602C8 LDR X0, [X23]
	0x01E602CC STR W8, [X31 + 0xC]
	0x01E602D0 BL 0x1C16E04
	0x01E602D4 MOV X22, X0
	0x01E602D8 CBZ X0, 0x1E602F0
	0x01E602DC LDR X8, [X20]
	0x01E602E0 MOV X0, X22
	0x01E602E4 LDR X1, [X8 + 0x40]
	0x01E602E8 BL 0x1C16E00
	0x01E602EC CBZ X0, 0x1E603BC
	0x01E602F0 LDR W8, [X20 + 0x18]
	0x01E602F4 CMP W8, 0x3
	0x01E602F8 B.LS 0x1E603B8
	0x01E602FC STR X22, [X20 + 0x38]
	0x01E60300 LDR W8, [X19 + 0x58]
	0x01E60304 LDR X0, [X23]
	0x01E60308 ADD X1, X31, 0x8
	0x01E6030C STR W8, [X31 + 0x8]
	0x01E60310 BL 0x1C16E04
	0x01E60314 MOV X22, X0
	0x01E60318 CBZ X0, 0x1E60330
	0x01E6031C LDR X8, [X20]
	0x01E60320 MOV X0, X22
	0x01E60324 LDR X1, [X8 + 0x40]
	0x01E60328 BL 0x1C16E00
	0x01E6032C CBZ X0, 0x1E603BC
	0x01E60330 LDR W8, [X20 + 0x18]
	0x01E60334 CMP W8, 0x4
	0x01E60338 B.LS 0x1E603B8
	0x01E6033C ADRP X8, 0x229B000
	0x01E60340 LDR X8, [X8 + 0xD98]
	0x01E60344 STR X22, [X20 + 0x40]
	0x01E60348 LDR X19, [X19 + 0x18]
	0x01E6034C LDR X0, [X8]
	0x01E60350 LDR W8, [X0 + 0xE0]
	0x01E60354 CBNZ W8, 0x1E6035C
	0x01E60358 BL 0x1C16DFC
	0x01E6035C MOV X0, X19
	0x01E60360 MOV X1, X31
	0x01E60364 BL 0x1E49864
	0x01E60368 MOV X19, X0
	0x01E6036C CBZ X0, 0x1E60384
	0x01E60370 LDR X8, [X20]
	0x01E60374 MOV X0, X19
	0x01E60378 LDR X1, [X8 + 0x40]
	0x01E6037C BL 0x1C16E00
	0x01E60380 CBZ X0, 0x1E603BC
	0x01E60384 LDR W8, [X20 + 0x18]
	0x01E60388 CMP W8, 0x5
	0x01E6038C B.LS 0x1E603B8
	0x01E60390 MOV X0, X21
	0x01E60394 MOV X1, X20
	0x01E60398 MOV X2, X31
	0x01E6039C STR X19, [X20 + 0x48]
	0x01E603A0 BL 0x3227C5C
	0x01E603A4 LDP X20, X19, [X31 + 0x30]
	0x01E603A8 LDP X22, X21, [X31 + 0x20]
	0x01E603AC LDP X30, X23, [X31 + 0x10]
	0x01E603B0 ADD X31, X31, 0x40
	0x01E603B4 RET
	0x01E603B8 BL 0x1C16F28
	0x01E603BC BL 0x1C16F44
	0x01E603C0 MOV X1, X31
	0x01E603C4 BL 0x1C16DEC
	0x01E603C8 BL 0x1C16F20
	0x01E603CC LDR X0, [X0 + 0x28]
	0x01E603D0 RET
	0x01E603D4 STR X30, [X31 - 0x20]!

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X23, 0x257A000
	010 Move W8, [X23+153]
	011 Move X21, X3
	012 Move X22, X2
	013 Move X19, X1
	014 Move X20, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0x229C000
	020 Move X0, [X0+3424]
	021 Call 0x1C17CF4
	022 Move X0, 0x229C000
	023 Move X0, [X0+3480]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X23+153], W8
	027 Compare X19, 0
	028 JumpIfEqual {80}
	029 Move X25, 0x229C000
	030 Move X25, [X25+3424]
	031 Move X0, X19
	032 Move X1, [X25]
	033 Call Dictionary`2<Object, Object>.get_Count, X0
	034 Compare W0, 0
	035 JumpIfEqual {81}
	036 Move X24, 0x229C000
	037 Move X24, [X24+3480]
	038 Move X0, [X24]
	039 Move W8, [X0+224]
	040 Compare W8, 0
	041 JumpIfNotEqual {43}
	042 Call 0x1C17DFC
	043 Move X0, X19
	044 Move X1, X31
	045 Call Extensions.StripToStringKeys, X0
	046 Move W8, [X20+104]
	047 Move X23, X0
	048 Compare W8, 0
	049 JumpIfEqual {90}
	050 Compare X23, 0
	051 JumpIfEqual {107}
	052 Move X1, [X25]
	053 Move X0, X23
	054 Call Dictionary`2<Object, Object>.get_Count, X0
	055 Compare W0, 0
	056 JumpIfEqual {81}
	057 Move X0, [X24]
	058 Move X21, [X20+24]
	059 Move W8, [X0+224]
	060 Compare W8, 0
	061 JumpIfNotEqual {63}
	062 Call 0x1C17DFC
	063 Move X0, X21
	064 Move X1, X23
	065 Move X2, X31
	066 Call Extensions.Merge, X0, X1
	067 Move X0, [X20+24]
	068 Move X1, X31
	069 Call Extensions.StripKeysWithNullValues, X0
	070 Move X8, [X20+96]
	071 Compare X8, 0
	072 JumpIfEqual {107}
	073 Move X0, [X8+192]
	074 Compare X0, 0
	075 JumpIfEqual {107}
	076 Move X1, X19
	077 Move X2, X31
	078 Call InRoomCallbacksContainer.OnRoomPropertiesUpdate, X0, X1
	079 Move W0, 1
	080 Move W0, W31
	081 Move X20, [X31+48]
	082 Move X19, [X31+56]
	083 Move X22, [X31+32]
	084 Move X21, [X31+40]
	085 Move X24, [X31+16]
	086 Move X23, [X31+24]
	087 Move X30, [X31+64]
	088 Move X25, [X31+72]
	089 Return X0
	090 Move X0, [X20+96]
	091 Compare X0, 0
	092 JumpIfEqual {107}
	093 Move X1, X23
	094 Move X2, X22
	095 Move X3, X21
	096 Move X20, [X31+48]
	097 Move X19, [X31+56]
	098 Move X22, [X31+32]
	099 Move X21, [X31+40]
	100 Move X24, [X31+16]
	101 Move X23, [X31+24]
	102 Move X4, X31
	103 Move X30, [X31+64]
	104 Move X25, [X31+72]
	105 Call LoadBalancingClient.OpSetPropertiesOfRoom, X0, X1, X2, X3
	106 Return X0
	107 Call 0x1C17F20

Method: System.Boolean SetPropertiesListedInLobby(System.String[] lobbyProps)

Disassembly:
	0x01E603D8 STP X20, X19, [X31 + 0x10]
	0x01E603DC MOV X19, X0
	0x01E603E0 LDR X0, [X0 + 0x28]
	0x01E603E4 CMP X0, X1
	0x01E603E8 B.EQ 0x1E60420
	0x01E603EC MOV X20, X1
	0x01E603F0 CBZ X0, 0x1E60400
	0x01E603F4 MOV X1, X19
	0x01E603F8 MOV X2, X31
	0x01E603FC BL 0x1E5531C
	0x01E60400 STR X20, [X19 + 0x28]
	0x01E60404 CBZ X20, 0x1E60420
	0x01E60408 MOV X0, X20
	0x01E6040C MOV X1, X19
	0x01E60410 LDP X20, X19, [X31 + 0x10]
	0x01E60414 MOV X2, X31
	0x01E60418 LDR X30, [X31], #0x20
	0x01E6041C B 0x1E45FBC
	0x01E60420 LDP X20, X19, [X31 + 0x10]
	0x01E60424 LDR X30, [X31], #0x20
	0x01E60428 RET
	0x01E6042C STR X30, [X31 - 0x20]!
	0x01E60430 STP X20, X19, [X31 + 0x10]
	0x01E60434 ADRP X20, 0x2579000
	0x01E60438 LDRB W8, [X20 + 0xAA]
	0x01E6043C MOV X19, X0
	0x01E60440 TBNZ X8, 0x0, 0x1E60458
	0x01E60444 ADRP X0, 0x229B000
	0x01E60448 LDR X0, [X0 + 0x708]
	0x01E6044C BL 0x1C16CF4
	0x01E60450 MOVZ W8, 0x1
	0x01E60454 STRB W8, [X20 + 0xAA]
	0x01E60458 MOV X0, X19
	0x01E6045C BL 0x1E604B0
	0x01E60460 LDR X8, [X19 + 0x30]
	0x01E60464 CBZ X8, 0x1E60474
	0x01E60468 LDP X20, X19, [X31 + 0x10]
	0x01E6046C LDR X30, [X31], #0x20
	0x01E60470 RET
	0x01E60474 ADRP X8, 0x229B000
	0x01E60478 LDR X8, [X8 + 0x708]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x257A000
	006 Move W8, [X21+154]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x229C000
	014 Move X0, [X0+3488]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+154], W8
	018 Move W8, [X19+104]
	019 Compare W8, 0
	020 JumpIfEqual {27}
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move W0, W31
	024 Move X30, [X31+32]
	025 Move X21, [X31+40]
	026 Return X0
	027 Move X8, 0x229C000
	028 Move X8, [X8+3488]
	029 Move X0, [X8]
	030 Call 0x1C17F10
	031 Move X1, X31
	032 Move X21, X0
	033 Call Hashtable..ctor, X0
	034 Compare X21, 0
	035 JumpIfEqual {54}
	036 Move W1, 250
	037 Move X0, X21
	038 Move X2, X20
	039 Move X3, X31
	040 Call Hashtable.set_Item, X0, X1, X2
	041 Move X0, [X19+96]
	042 Compare X0, 0
	043 JumpIfEqual {54}
	044 Move X20, [X31+16]
	045 Move X19, [X31+24]
	046 Move X1, X21
	047 Move X2, X31
	048 Move X3, X31
	049 Move X4, X31
	050 Move X30, [X31+32]
	051 Move X21, [X31+40]
	052 Call LoadBalancingClient.OpSetPropertiesOfRoom, X0, X1, X2, X3
	053 Return X0
	054 Call 0x1C17F20

Method: System.Void RemovePlayer(Fusion.Photon.Realtime.Player player)

Disassembly:
	0x01E6047C LDR X0, [X8]
	0x01E60480 BL 0x1C16F10
	0x01E60484 MOV X1, X31
	0x01E60488 MOV X20, X0
	0x01E6048C BL 0x364BFC4
	0x01E60490 STR X20, [X19 + 0x30]
	0x01E60494 CBZ X20, 0x1E604AC
	0x01E60498 MOV X0, X20
	0x01E6049C LDP X20, X19, [X31 + 0x10]
	0x01E604A0 MOV X1, X31
	0x01E604A4 LDR X30, [X31], #0x20
	0x01E604A8 B 0x364BFCC
	0x01E604AC BL 0x1C16F20
	0x01E604B0 SUB X31, X31, 0x60
	0x01E604B4 STR X30, [X31 + 0x20]
	0x01E604B8 STP X24, X23, [X31 + 0x30]
	0x01E604BC STP X22, X21, [X31 + 0x40]
	0x01E604C0 STP X20, X19, [X31 + 0x50]
	0x01E604C4 ADRP X20, 0x2579000
	0x01E604C8 LDRB W8, [X20 + 0xB0]
	0x01E604CC MOV X19, X0
	0x01E604D0 TBNZ X8, 0x0, 0x1E60638
	0x01E604D4 ADRP X0, 0x2293000
	0x01E604D8 LDR X0, [X0 + 0x970]
	0x01E604DC BL 0x1C16CF4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x257A000
	006 Move W8, [X21+155]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x229D000
	014 Move X0, [X0+2544]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+155], W8
	018 Compare X19, 0
	019 JumpIfEqual {34}
	020 Move X0, [X20+112]
	021 Compare X0, 0
	022 JumpIfEqual {34}
	023 Move X8, 0x229D000
	024 Move X8, [X8+2544]
	025 Move W1, [X19+24]
	026 Move X2, [X8]
	027 Call Dictionary`2<Int32, Object>.Remove, X0, X1
	028 Move [X19+16], X31
	029 Move X20, [X31+16]
	030 Move X19, [X31+24]
	031 Move X30, [X31+32]
	032 Move X21, [X31+40]
	033 Return 
	034 Call 0x1C17F20

Method: System.Void RemovePlayer(System.Int32 id)

Disassembly:
	0x01E604E0 ADRP X0, 0x229B000
	0x01E604E4 LDR X0, [X0 + 0xDF0]
	0x01E604E8 BL 0x1C16CF4
	0x01E604EC ADRP X0, 0x229B000
	0x01E604F0 LDR X0, [X0 + 0xE68]
	0x01E604F4 BL 0x1C16CF4
	0x01E604F8 ADRP X0, 0x229C000
	0x01E604FC LDR X0, [X0 + 0x730]
	0x01E60500 BL 0x1C16CF4
	0x01E60504 ADRP X0, 0x229C000
	0x01E60508 LDR X0, [X0 + 0x6A0]
	0x01E6050C BL 0x1C16CF4

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0]
	004 Move W2, W31
	005 Move X19, X0
	006 Move X9, [X8+472]
	007 Move X3, [X8+480]
	008 NotImplemented "Instruction BLR not yet implemented."
	009 Move X8, [X19]
	010 Move X1, X0
	011 Move X0, X19
	012 Move X3, [X8+408]
	013 Move X2, [X8+416]
	014 Move X30, [X31+16]
	015 Move X19, [X31+24]
	016 CallNoReturn X3

Method: System.Boolean SetMasterClient(Fusion.Photon.Realtime.Player masterClientPlayer)

Disassembly:
	0x01E60510 ADRP X0, 0x2294000
	0x01E60514 LDR X0, [X0 + 0x1B8]
	0x01E60518 BL 0x1C16CF4
	0x01E6051C ADRP X0, 0x2295000
	0x01E60520 LDR X0, [X0 + 0xE78]
	0x01E60524 BL 0x1C16CF4
	0x01E60528 ADRP X0, 0x229C000
	0x01E6052C LDR X0, [X0 + 0x118]
	0x01E60530 BL 0x1C16CF4
	0x01E60534 ADRP X0, 0x2294000
	0x01E60538 LDR X0, [X0 + 0x1D0]
	0x01E6053C BL 0x1C16CF4
	0x01E60540 ADRP X0, 0x2293000
	0x01E60544 LDR X0, [X0 + 0x9D0]
	0x01E60548 BL 0x1C16CF4
	0x01E6054C ADRP X0, 0x229B000
	0x01E60550 LDR X0, [X0 + 0xEE0]
	0x01E60554 BL 0x1C16CF4
	0x01E60558 ADRP X0, 0x229C000
	0x01E6055C LDR X0, [X0 + 0xA48]
	0x01E60560 BL 0x1C16CF4
	0x01E60564 ADRP X0, 0x2293000
	0x01E60568 LDR X0, [X0 + 0x8F0]
	0x01E6056C BL 0x1C16CF4
	0x01E60570 ADRP X0, 0x229C000
	0x01E60574 LDR X0, [X0 + 0xA50]
	0x01E60578 BL 0x1C16CF4
	0x01E6057C ADRP X0, 0x2293000
	0x01E60580 LDR X0, [X0 + 0x6C0]
	0x01E60584 BL 0x1C16CF4
	0x01E60588 ADRP X0, 0x229C000
	0x01E6058C LDR X0, [X0 + 0xA58]
	0x01E60590 BL 0x1C16CF4
	0x01E60594 ADRP X0, 0x229C000
	0x01E60598 LDR X0, [X0 + 0xA60]
	0x01E6059C BL 0x1C16CF4
	0x01E605A0 ADRP X0, 0x229C000
	0x01E605A4 LDR X0, [X0 + 0xA68]
	0x01E605A8 BL 0x1C16CF4
	0x01E605AC ADRP X0, 0x229C000
	0x01E605B0 LDR X0, [X0 + 0xA70]
	0x01E605B4 BL 0x1C16CF4
	0x01E605B8 ADRP X0, 0x229C000
	0x01E605BC LDR X0, [X0 + 0xA78]
	0x01E605C0 BL 0x1C16CF4
	0x01E605C4 ADRP X0, 0x229C000
	0x01E605C8 LDR X0, [X0 + 0xA80]
	0x01E605CC BL 0x1C16CF4
	0x01E605D0 ADRP X0, 0x2293000
	0x01E605D4 LDR X0, [X0 + 0x838]
	0x01E605D8 BL 0x1C16CF4
	0x01E605DC ADRP X0, 0x229C000
	0x01E605E0 LDR X0, [X0 + 0xA88]
	0x01E605E4 BL 0x1C16CF4
	0x01E605E8 ADRP X0, 0x229C000
	0x01E605EC LDR X0, [X0 + 0xA90]
	0x01E605F0 BL 0x1C16CF4
	0x01E605F4 ADRP X0, 0x229C000
	0x01E605F8 LDR X0, [X0 + 0xA98]
	0x01E605FC BL 0x1C16CF4
	0x01E60600 ADRP X0, 0x229B000
	0x01E60604 LDR X0, [X0 + 0xE50]
	0x01E60608 BL 0x1C16CF4
	0x01E6060C ADRP X0, 0x229C000
	0x01E60610 LDR X0, [X0 + 0xAA0]
	0x01E60614 BL 0x1C16CF4
	0x01E60618 ADRP X0, 0x229C000
	0x01E6061C LDR X0, [X0 + 0xAA8]
	0x01E60620 BL 0x1C16CF4
	0x01E60624 ADRP X0, 0x229C000
	0x01E60628 LDR X0, [X0 + 0xAB0]
	0x01E6062C BL 0x1C16CF4

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0x257A000
	009 Move W8, [X20+156]
	010 Move X21, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x229C000
	017 Move X0, [X0+3488]
	018 Call 0x1C17CF4
	019 Move X0, 0x2294000
	020 Move X0, [X0+1880]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X20+156], W8
	024 Move W8, [X19+104]
	025 Compare W8, 0
	026 JumpIfEqual {28}
	027 Move W0, W31
	028 Move X22, 0x229C000
	029 Move X22, [X22+3488]
	030 Move X0, [X22]
	031 Call 0x1C17F10
	032 Move X1, X31
	033 Move X20, X0
	034 Call Hashtable..ctor, X0
	035 Compare X21, 0
	036 JumpIfEqual {85}
	037 Move X23, 0x2294000
	038 Move W8, [X21+24]
	039 Move X23, [X23+1880]
	040 Add X1, X31, 12
	041 Move [X31+12], W8
	042 Move X0, [X23]
	043 Call 0x1C17E04
	044 Compare X20, 0
	045 JumpIfEqual {85}
	046 Move X2, X0
	047 Move W1, 248
	048 Move X0, X20
	049 Move X3, X31
	050 Call Hashtable.Add, X0, X1, X2
	051 Move X0, [X22]
	052 Call 0x1C17F10
	053 Move X1, X31
	054 Move X21, X0
	055 Call Hashtable..ctor, X0
	056 Move W8, [X19+72]
	057 Move X0, [X23]
	058 Add X1, X31, 8
	059 Move [X31+8], W8
	060 Call 0x1C17E04
	061 Compare X21, 0
	062 JumpIfEqual {85}
	063 Move X2, X0
	064 Move W1, 248
	065 Move X0, X21
	066 Move X3, X31
	067 Call Hashtable.Add, X0, X1, X2
	068 Move X0, [X19+96]
	069 Compare X0, 0
	070 JumpIfEqual {85}
	071 Move X1, X20
	072 Move X2, X21
	073 Move X3, X31
	074 Move X4, X31
	075 Call LoadBalancingClient.OpSetPropertiesOfRoom, X0, X1, X2, X3
	076 Move X20, [X31+48]
	077 Move X19, [X31+56]
	078 Move X22, [X31+32]
	079 Move X21, [X31+40]
	080 Move X30, [X31+16]
	081 Move X23, [X31+24]
	082 And W0, W0, 1
	083 Add X31, X31, 64
	084 Return X0
	085 Call 0x1C17F20

Method: System.Boolean AddPlayer(Fusion.Photon.Realtime.Player player)

Disassembly:
	0x01E60630 MOVZ W8, 0x1
	0x01E60634 STRB W8, [X20 + 0xB0]
	0x01E60638 LDR X8, [X19 + 0x28]
	0x01E6063C CBZ X8, 0x1E60EE0
	0x01E60640 ADRP X8, 0x2294000
	0x01E60644 LDR X8, [X8 + 0x1D0]
	0x01E60648 ADRP X20, 0x229C000
	0x01E6064C ADRP X22, 0x2293000
	0x01E60650 LDR X0, [X8]
	0x01E60654 LDR X20, [X20 + 0x118]
	0x01E60658 LDR X22, [X22 + 0x970]
	0x01E6065C BL 0x1C16F10
	0x01E60660 LDR X2, [X20]
	0x01E60664 MOVZ W1, 0xA
	0x01E60668 MOV X21, X0
	0x01E6066C BL 0x301B830
	0x01E60670 LDR X0, [X22]
	0x01E60674 LDR W8, [X0 + 0xE0]
	0x01E60678 CBNZ W8, 0x1E60680
	0x01E6067C BL 0x1C16DFC
	0x01E60680 MOV X0, X31
	0x01E60684 BL 0x3C019E8
	0x01E60688 CBZ X21, 0x1E60EF8
	0x01E6068C ADRP X20, 0x2294000
	0x01E60690 LDR X20, [X20 + 0x1B8]
	0x01E60694 LDR W10, [X21 + 0x1C]
	0x01E60698 LDR X8, [X21 + 0x10]
	0x01E6069C LDR X9, [X20]
	0x01E606A0 ADD W10, W10, 0x1
	0x01E606A4 STR W10, [X21 + 0x1C]
	0x01E606A8 CBZ X8, 0x1E60EF8
	0x01E606AC LDRSW X10, [X21 + 0x18]
	0x01E606B0 LDR W11, [X8 + 0x18]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x257A000
	006 Move W8, [X21+157]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x229D000
	014 Move X0, [X0+2552]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+157], W8
	018 Compare X19, 0
	019 JumpIfEqual {46}
	020 Move X0, [X20+112]
	021 Compare X0, 0
	022 JumpIfEqual {46}
	023 Move X8, 0x229D000
	024 Move X8, [X8+2552]
	025 Move W1, [X19+24]
	026 Move X2, [X8]
	027 Call Dictionary`2<Int32, Object>.ContainsKey, X0, X1
	028 Move W21, W0
	029 Move TEMP, X0
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfEqual {39}
	033 Move X8, [X20]
	034 Move X0, X20
	035 Move X1, X19
	036 Move X9, [X8+456]
	037 Move X2, [X8+464]
	038 NotImplemented "Instruction BLR not yet implemented."
	039 Move X20, [X31+16]
	040 Move X19, [X31+24]
	041 NotImplemented "Instruction ORN not yet implemented."
	042 And W0, W8, 1
	043 Move X30, [X31+32]
	044 Move X21, [X31+40]
	045 Return X0
	046 Call 0x1C17F20

Method: Fusion.Photon.Realtime.Player StorePlayer(Fusion.Photon.Realtime.Player player)

Disassembly:
	0x01E606B4 ADRP X22, 0x229C000
	0x01E606B8 LDR X22, [X22 + 0xA48]
	0x01E606BC MOV X1, X0
	0x01E606C0 CMP W10, W11
	0x01E606C4 B.CS 0x1E606DC
	0x01E606C8 ADD W9, W10, 0x1
	0x01E606CC ADD X8, X8, X10, 0x3, LSL
	0x01E606D0 STR W9, [X21 + 0x18]
	0x01E606D4 STR X1, [X8 + 0x20]
	0x01E606D8 B 0x1E606F0
	0x01E606DC LDR X8, [X9 + 0x20]
	0x01E606E0 MOV X0, X21
	0x01E606E4 LDR X8, [X8 + 0xC0]
	0x01E606E8 LDR X2, [X8 + 0x70]
	0x01E606EC BL 0x301BF90
	0x01E606F0 MOV X0, X31
	0x01E606F4 BL 0x3C01AB0
	0x01E606F8 LDR X8, [X22]
	0x01E606FC MOVN X9, 0x0
	0x01E60700 STR W0, [X31 + 0x18]
	0x01E60704 ADD X0, X31, 0x8
	0x01E60708 MOV X1, X31
	0x01E6070C STP X8, X9, [X31 + 0x8]
	0x01E60710 BL 0x33B162C
	0x01E60714 LDR W10, [X21 + 0x1C]
	0x01E60718 LDR X8, [X21 + 0x10]
	0x01E6071C LDR X9, [X20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x257A000
	006 Move W8, [X21+158]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x229D000
	014 Move X0, [X0+2560]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+158], W8
	018 Compare X19, 0
	019 JumpIfEqual {36}
	020 Move X0, [X20+112]
	021 Compare X0, 0
	022 JumpIfEqual {36}
	023 Move X8, 0x229D000
	024 Move X8, [X8+2560]
	025 Move W1, [X19+24]
	026 Move X2, X19
	027 Move X3, [X8]
	028 Call Dictionary`2<Int32, Object>.set_Item, X0, X1, X2
	029 Move [X19+16], X20
	030 Move X0, X19
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X30, [X31+32]
	034 Move X21, [X31+40]
	035 Return X0
	036 Call 0x1C17F20

Method: Fusion.Photon.Realtime.Player GetPlayer(System.Int32 id, System.Boolean findMaster = False)

Disassembly:
	0x01E60720 ADD W10, W10, 0x1
	0x01E60724 STR W10, [X21 + 0x1C]
	0x01E60728 CBZ X8, 0x1E60EF8
	0x01E6072C LDRSW X10, [X21 + 0x18]
	0x01E60730 LDR W11, [X8 + 0x18]
	0x01E60734 MOV X1, X0
	0x01E60738 CMP W10, W11
	0x01E6073C B.CS 0x1E60754
	0x01E60740 ADD W9, W10, 0x1
	0x01E60744 ADD X8, X8, X10, 0x3, LSL
	0x01E60748 STR W9, [X21 + 0x18]
	0x01E6074C STR X1, [X8 + 0x20]
	0x01E60750 B 0x1E60768
	0x01E60754 LDR X8, [X9 + 0x20]
	0x01E60758 MOV X0, X21
	0x01E6075C LDR X8, [X8 + 0xC0]
	0x01E60760 LDR X2, [X8 + 0x70]
	0x01E60764 BL 0x301BF90
	0x01E60768 MOV X0, X31
	0x01E6076C BL 0x1E37F30
	0x01E60770 TBZ X0, 0x0, 0x1E607D0
	0x01E60774 ADRP X8, 0x229C000
	0x01E60778 LDR X8, [X8 + 0xA88]
	0x01E6077C LDR W10, [X21 + 0x1C]
	0x01E60780 LDR X9, [X20]
	0x01E60784 LDR X1, [X8]
	0x01E60788 LDR X8, [X21 + 0x10]
	0x01E6078C ADD W10, W10, 0x1
	0x01E60790 STR W10, [X21 + 0x1C]
	0x01E60794 CBZ X8, 0x1E60EF8
	0x01E60798 LDRSW X10, [X21 + 0x18]
	0x01E6079C LDR W11, [X8 + 0x18]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x257A000
	007 Move W8, [X22+159]
	008 Move W21, W2
	009 Move W19, W1
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x229D000
	016 Move X0, [X0+2568]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+159], W8
	020 Compare W19, 0
	021 JumpIfNotEqual {27}
	022 Move TEMP, X21
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfNotEqual {27}
	026 Move W19, [X20+72]
	027 Move [X31+8], X31
	028 Move X0, [X20+112]
	029 Compare X0, 0
	030 JumpIfEqual {44}
	031 Move X8, 0x229D000
	032 Move X8, [X8+2568]
	033 Add X2, X31, 8
	034 Move W1, W19
	035 Move X3, [X8]
	036 Call Dictionary`2<Int32, Object>.TryGetValue, X0, X1, X2
	037 Move X0, [X31+8]
	038 Move X20, [X31+32]
	039 Move X19, [X31+40]
	040 Move X22, [X31+16]
	041 Move X21, [X31+24]
	042 Move X30, [X31+48]
	043 Return X0
	044 Call 0x1C17F20

Method: System.Boolean ClearExpectedUsers()

Disassembly:
	0x01E607A0 CMP W10, W11
	0x01E607A4 B.CS 0x1E607BC
	0x01E607A8 ADD W9, W10, 0x1
	0x01E607AC ADD X8, X8, X10, 0x3, LSL
	0x01E607B0 STR W9, [X21 + 0x18]
	0x01E607B4 STR X1, [X8 + 0x20]
	0x01E607B8 B 0x1E607D0
	0x01E607BC LDR X8, [X9 + 0x20]
	0x01E607C0 MOV X0, X21
	0x01E607C4 LDR X8, [X8 + 0xC0]
	0x01E607C8 LDR X2, [X8 + 0x70]
	0x01E607CC BL 0x301BF90
	0x01E607D0 MOV X0, X31
	0x01E607D4 BL 0x1E37EE4
	0x01E607D8 TBZ X0, 0x0, 0x1E60838
	0x01E607DC ADRP X8, 0x229C000
	0x01E607E0 LDR X8, [X8 + 0xA68]
	0x01E607E4 LDR W10, [X21 + 0x1C]
	0x01E607E8 LDR X9, [X20]
	0x01E607EC LDR X1, [X8]
	0x01E607F0 LDR X8, [X21 + 0x10]
	0x01E607F4 ADD W10, W10, 0x1
	0x01E607F8 STR W10, [X21 + 0x1C]
	0x01E607FC CBZ X8, 0x1E60EF8
	0x01E60800 LDRSW X10, [X21 + 0x18]
	0x01E60804 LDR W11, [X8 + 0x18]
	0x01E60808 CMP W10, W11
	0x01E6080C B.CS 0x1E60824
	0x01E60810 ADD W9, W10, 0x1
	0x01E60814 ADD X8, X8, X10, 0x3, LSL

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x257A000
	005 Move W8, [X20+160]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x2294000
	012 Move X0, [X0+2760]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+160], W8
	016 Move X8, [X19+48]
	017 Compare X8, 0
	018 JumpIfEqual {33}
	019 Move W8, [X8+24]
	020 Compare W8, 0
	021 JumpIfEqual {33}
	022 Move X8, 0x2294000
	023 Move X8, [X8+2760]
	024 Move W1, W31
	025 Move X0, [X8]
	026 Call 0x1C17D6C
	027 Move X2, [X19+48]
	028 Move X1, X0
	029 Move X0, X19
	030 Move X20, [X31+16]
	031 Move X19, [X31+24]
	032 Move X30, [X31+32]
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move W0, W31
	036 Move X30, [X31+32]
	037 Return X0

Method: System.Boolean SetExpectedUsers(System.String[] newExpectedUsers)

Disassembly:
	0x01E6090C LDR X8, [X8 + 0x8F0]
	0x01E60910 LDR X0, [X8]
	0x01E60914 BL 0x1C16F10
	0x01E60918 MOV X1, X31
	0x01E6091C MOV X20, X0
	0x01E60920 BL 0x3231AC4
	0x01E60924 LDR X8, [X19 + 0x28]
	0x01E60928 CBZ X8, 0x1E60EF8
	0x01E6092C LDR X0, [X8 + 0x20]
	0x01E60930 MOV X1, X31
	0x01E60934 BL 0x32277A8
	0x01E60938 LDR X8, [X19 + 0x28]
	0x01E6093C TBZ X0, 0x0, 0x1E60948
	0x01E60940 CBNZ X8, 0x1E60960
	0x01E60944 B 0x1E60EF8
	0x01E60948 CBZ X8, 0x1E60EF8
	0x01E6094C LDR X0, [X8 + 0x20]
	0x01E60950 CBZ X0, 0x1E60EF8
	0x01E60954 LDR W9, [X0 + 0x10]
	0x01E60958 CMP W9, 0x8
	0x01E6095C B.GE 0x1E60968
	0x01E60960 LDR X23, [X8 + 0x20]
	0x01E60964 B 0x1E60990
	0x01E60968 MOVZ W2, 0x8
	0x01E6096C MOV W1, W31
	0x01E60970 MOV X3, X31
	0x01E60974 BL 0x3228DE4
	0x01E60978 ADRP X8, 0x229B000
	0x01E6097C LDR X8, [X8 + 0xE50]
	0x01E60980 MOV X2, X31
	0x01E60984 LDR X1, [X8]
	0x01E60988 BL 0x321B938
	0x01E6098C MOV X23, X0
	0x01E60990 MOV X0, X19
	0x01E60994 BL 0x1E61094
	0x01E60998 CBZ X20, 0x1E60EF8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x257A000
	006 Move W8, [X21+161]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x229D000
	014 Move X0, [X0+2576]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+161], W8
	018 Compare X19, 0
	019 JumpIfEqual {32}
	020 Move W8, [X19+24]
	021 Compare W8, 0
	022 JumpIfEqual {32}
	023 Move X2, [X20+48]
	024 Move X0, X20
	025 Move X1, X19
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call Room.SetExpectedUsers, X0, X1, X2
	031 Return X0
	032 Move X0, [X20+96]
	033 Compare X0, 0
	034 JumpIfEqual {49}
	035 Move X9, 0x229D000
	036 Move X8, [X0]
	037 Move X9, [X9+2576]
	038 Move W1, 1
	039 Move X3, [X8+544]
	040 Move X2, [X9]
	041 Move X9, [X8+536]
	042 NotImplemented "Instruction BLR not yet implemented."
	043 Move X20, [X31+16]
	044 Move X19, [X31+24]
	045 Move W0, W31
	046 Move X30, [X31+32]
	047 Move X21, [X31+40]
	048 Return X0
	049 Call 0x1C17F20

Method: System.Boolean SetExpectedUsers(System.String[] newExpectedUsers, System.String[] oldExpectedUsers)

Disassembly:
	0x01E60818 STR W9, [X21 + 0x18]
	0x01E6081C STR X1, [X8 + 0x20]
	0x01E60820 B 0x1E60838
	0x01E60824 LDR X8, [X9 + 0x20]
	0x01E60828 MOV X0, X21
	0x01E6082C LDR X8, [X8 + 0xC0]
	0x01E60830 LDR X2, [X8 + 0x70]
	0x01E60834 BL 0x301BF90
	0x01E60838 MOV X0, X31
	0x01E6083C BL 0x1E3801C
	0x01E60840 TBZ X0, 0x0, 0x1E608A0
	0x01E60844 ADRP X8, 0x229C000
	0x01E60848 LDR X8, [X8 + 0xAB0]
	0x01E6084C LDR W10, [X21 + 0x1C]
	0x01E60850 LDR X9, [X20]
	0x01E60854 LDR X1, [X8]
	0x01E60858 LDR X8, [X21 + 0x10]
	0x01E6085C ADD W10, W10, 0x1
	0x01E60860 STR W10, [X21 + 0x1C]
	0x01E60864 CBZ X8, 0x1E60EF8
	0x01E60868 LDRSW X10, [X21 + 0x18]
	0x01E6086C LDR W11, [X8 + 0x18]
	0x01E60870 CMP W10, W11
	0x01E60874 B.CS 0x1E6088C
	0x01E60878 ADD W9, W10, 0x1
	0x01E6087C ADD X8, X8, X10, 0x3, LSL
	0x01E60880 STR W9, [X21 + 0x18]
	0x01E60884 STR X1, [X8 + 0x20]
	0x01E60888 B 0x1E608A0
	0x01E6088C LDR X8, [X9 + 0x20]
	0x01E60890 MOV X0, X21
	0x01E60894 LDR X8, [X8 + 0xC0]
	0x01E60898 LDR X2, [X8 + 0x70]
	0x01E6089C BL 0x301BF90
	0x01E608A0 MOV X0, X31
	0x01E608A4 BL 0x1E380B4
	0x01E608A8 TBZ X0, 0x0, 0x1E60908
	0x01E608AC ADRP X8, 0x229C000
	0x01E608B0 LDR X8, [X8 + 0xA90]
	0x01E608B4 LDR W10, [X21 + 0x1C]
	0x01E608B8 LDR X9, [X20]
	0x01E608BC LDR X1, [X8]
	0x01E608C0 LDR X8, [X21 + 0x10]
	0x01E608C4 ADD W10, W10, 0x1
	0x01E608C8 STR W10, [X21 + 0x1C]
	0x01E608CC CBZ X8, 0x1E60EF8
	0x01E608D0 LDRSW X10, [X21 + 0x18]
	0x01E608D4 LDR W11, [X8 + 0x18]
	0x01E608D8 CMP W10, W11
	0x01E608DC B.CS 0x1E608F4
	0x01E608E0 ADD W9, W10, 0x1
	0x01E608E4 ADD X8, X8, X10, 0x3, LSL
	0x01E608E8 STR W9, [X21 + 0x18]
	0x01E608EC STR X1, [X8 + 0x20]
	0x01E608F0 B 0x1E60908
	0x01E608F4 LDR X8, [X9 + 0x20]
	0x01E608F8 MOV X0, X21
	0x01E608FC LDR X8, [X8 + 0xC0]
	0x01E60900 LDR X2, [X8 + 0x70]
	0x01E60904 BL 0x301BF90
	0x01E60908 ADRP X8, 0x2293000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0x257A000
	008 Move W8, [X21+162]
	009 Move X20, X2
	010 Move X22, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x229C000
	017 Move X0, [X0+3488]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+162], W8
	021 Move W8, [X19+104]
	022 Compare W8, 0
	023 JumpIfEqual {32}
	024 Move X20, [X31+32]
	025 Move X19, [X31+40]
	026 Move X22, [X31+16]
	027 Move X21, [X31+24]
	028 Move W0, W31
	029 Move X30, [X31+48]
	030 Move X23, [X31+56]
	031 Return X0
	032 Move X23, 0x229C000
	033 Move X23, [X23+3488]
	034 Move X0, [X23]
	035 Call 0x1C17F10
	036 Move W1, 1
	037 Move X2, X31
	038 Move X21, X0
	039 Call Hashtable..ctor, X0, X1
	040 Compare X21, 0
	041 JumpIfEqual {78}
	042 Move W1, 247
	043 Move X0, X21
	044 Move X2, X22
	045 Move X3, X31
	046 Call Hashtable.Add, X0, X1, X2
	047 Compare X20, 0
	048 JumpIfEqual {62}
	049 Move X0, [X23]
	050 Call 0x1C17F10
	051 Move W1, 1
	052 Move X2, X31
	053 Move X22, X0
	054 Call Hashtable..ctor, X0, X1
	055 Compare X22, 0
	056 JumpIfEqual {78}
	057 Move W1, 247
	058 Move X0, X22
	059 Move X2, X20
	060 Move X3, X31
	061 Call Hashtable.Add, X0, X1, X2
	062 Move X22, X31
	063 Move X0, [X19+96]
	064 Compare X0, 0
	065 JumpIfEqual {78}
	066 Move X1, X21
	067 Move X2, X22
	068 Move X20, [X31+32]
	069 Move X19, [X31+40]
	070 Move X22, [X31+16]
	071 Move X21, [X31+24]
	072 Move X3, X31
	073 Move X4, X31
	074 Move X30, [X31+48]
	075 Move X23, [X31+56]
	076 Call LoadBalancingClient.OpSetPropertiesOfRoom, X0, X1, X2, X3
	077 Return X0
	078 Call 0x1C17F20

Method: System.String ToString()

Disassembly:
	0x01E6099C ADRP X8, 0x229C000
	0x01E609A0 LDR X8, [X8 + 0xAA0]
	0x01E609A4 ADRP X24, 0x2293000
	0x01E609A8 MOV X2, X0
	0x01E609AC MOV X0, X20
	0x01E609B0 LDR X1, [X8]
	0x01E609B4 LDR X24, [X24 + 0x9D0]
	0x01E609B8 MOV X3, X31
	0x01E609BC BL 0x3234224
	0x01E609C0 LDR X0, [X24]
	0x01E609C4 MOVZ W1, 0x5
	0x01E609C8 BL 0x1C16D6C
	0x01E609CC CBZ X0, 0x1E60EF8
	0x01E609D0 MOV X22, X0
	0x01E609D4 CBZ X23, 0x1E609EC
	0x01E609D8 LDR X8, [X22]
	0x01E609DC MOV X0, X23
	0x01E609E0 LDR X1, [X8 + 0x40]
	0x01E609E4 BL 0x1C16E00
	0x01E609E8 CBZ X0, 0x1E60F00
	0x01E609EC LDR W8, [X22 + 0x18]
	0x01E609F0 CBZ W8, 0x1E60EFC
	0x01E609F4 STR X23, [X22 + 0x20]
	0x01E609F8 LDR X9, [X19 + 0x28]
	0x01E609FC CBZ X9, 0x1E60EF8
	0x01E60A00 LDR X23, [X9 + 0x18]
	0x01E60A04 CBZ X23, 0x1E60A20
	0x01E60A08 LDR X8, [X22]
	0x01E60A0C MOV X0, X23
	0x01E60A10 LDR X1, [X8 + 0x40]
	0x01E60A14 BL 0x1C16E00
	0x01E60A18 CBZ X0, 0x1E60F00
	0x01E60A1C LDR W8, [X22 + 0x18]
	0x01E60A20 CMP W8, 0x1
	0x01E60A24 B.LS 0x1E60EFC
	0x01E60A28 ADRP X8, 0x229B000
	0x01E60A2C LDR X8, [X8 + 0xEE0]
	0x01E60A30 STR X23, [X22 + 0x28]
	0x01E60A34 LDR X0, [X8]
	0x01E60A38 LDR W8, [X0 + 0xE0]
	0x01E60A3C CBNZ W8, 0x1E60A44
	0x01E60A40 BL 0x1C16DFC
	0x01E60A44 MOV X0, X31
	0x01E60A48 BL 0x350147C
	0x01E60A4C MOV X23, X0
	0x01E60A50 CBZ X0, 0x1E60A68
	0x01E60A54 LDR X8, [X22]
	0x01E60A58 MOV X0, X23
	0x01E60A5C LDR X1, [X8 + 0x40]
	0x01E60A60 BL 0x1C16E00
	0x01E60A64 CBZ X0, 0x1E60F00
	0x01E60A68 LDR W8, [X22 + 0x18]
	0x01E60A6C CMP W8, 0x2
	0x01E60A70 B.LS 0x1E60EFC
	0x01E60A74 ADRP X8, 0x2295000
	0x01E60A78 LDR X8, [X8 + 0xE78]
	0x01E60A7C STR X23, [X22 + 0x30]
	0x01E60A80 ADRP X23, 0x2293000
	0x01E60A84 MOV X0, X21
	0x01E60A88 LDR X1, [X8]
	0x01E60A8C LDR X23, [X23 + 0x838]
	0x01E60A90 BL 0x301DDC4
	0x01E60A94 LDR X8, [X23]
	0x01E60A98 MOV X1, X0
	0x01E60A9C MOV X2, X31
	0x01E60AA0 MOV X0, X8
	0x01E60AA4 BL 0x3227FF8
	0x01E60AA8 MOV X21, X0
	0x01E60AAC CBZ X0, 0x1E60AC4
	0x01E60AB0 LDR X8, [X22]
	0x01E60AB4 MOV X0, X21
	0x01E60AB8 LDR X1, [X8 + 0x40]
	0x01E60ABC BL 0x1C16E00
	0x01E60AC0 CBZ X0, 0x1E60F00
	0x01E60AC4 LDR W8, [X22 + 0x18]
	0x01E60AC8 CMP W8, 0x3
	0x01E60ACC B.LS 0x1E60EFC
	0x01E60AD0 STR X21, [X22 + 0x38]
	0x01E60AD4 LDR X8, [X19 + 0x28]
	0x01E60AD8 CBZ X8, 0x1E60EF8
	0x01E60ADC LDR X8, [X8 + 0x10]
	0x01E60AE0 CBZ X8, 0x1E60EF8
	0x01E60AE4 ADRP X9, 0x229C000
	0x01E60AE8 LDR X9, [X9 + 0xA50]
	0x01E60AEC LDR W8, [X8 + 0x20]
	0x01E60AF0 ADD X1, X31, 0x8
	0x01E60AF4 LDR X0, [X9]
	0x01E60AF8 STR W8, [X31 + 0x8]
	0x01E60AFC BL 0x1C16E04
	0x01E60B00 MOV X21, X0
	0x01E60B04 CBZ X0, 0x1E60B1C
	0x01E60B08 LDR X8, [X22]
	0x01E60B0C MOV X0, X21
	0x01E60B10 LDR X1, [X8 + 0x40]
	0x01E60B14 BL 0x1C16E00
	0x01E60B18 CBZ X0, 0x1E60F00
	0x01E60B1C LDR W8, [X22 + 0x18]
	0x01E60B20 CMP W8, 0x4
	0x01E60B24 B.LS 0x1E60EFC
	0x01E60B28 ADRP X8, 0x229C000
	0x01E60B2C LDR X8, [X8 + 0xA98]
	0x01E60B30 STR X21, [X22 + 0x40]
	0x01E60B34 MOV X0, X20
	0x01E60B38 MOV X2, X22
	0x01E60B3C LDR X1, [X8]
	0x01E60B40 MOV X3, X31
	0x01E60B44 BL 0x3234E54
	0x01E60B48 LDR X8, [X19 + 0x28]
	0x01E60B4C CBZ X8, 0x1E60BC8
	0x01E60B50 LDR X8, [X8 + 0x10]
	0x01E60B54 CBZ X8, 0x1E60BC8
	0x01E60B58 ADRP X9, 0x2293000
	0x01E60B5C LDR X9, [X9 + 0x6C0]
	0x01E60B60 LDR X21, [X8 + 0x38]
	0x01E60B64 LDR X0, [X9]
	0x01E60B68 LDR W9, [X0 + 0xE0]
	0x01E60B6C CBNZ W9, 0x1E60B74
	0x01E60B70 BL 0x1C16DFC
	0x01E60B74 MOV X0, X21
	0x01E60B78 MOV X1, X31
	0x01E60B7C MOV X2, X31
	0x01E60B80 BL 0x3395F0C
	0x01E60B84 TBZ X0, 0x0, 0x1E60BC8
	0x01E60B88 LDR X8, [X19 + 0x28]
	0x01E60B8C CBZ X8, 0x1E60EF8
	0x01E60B90 LDR X8, [X8 + 0x10]
	0x01E60B94 CBZ X8, 0x1E60EF8
	0x01E60B98 LDR X0, [X8 + 0x38]
	0x01E60B9C CBZ X0, 0x1E60EF8
	0x01E60BA0 LDR X8, [X0]
	0x01E60BA4 LDP X9, X1, [X8 + 0x1A8]
	0x01E60BA8 BLR X9
	0x01E60BAC ADRP X8, 0x229C000
	0x01E60BB0 LDR X8, [X8 + 0xA60]
	0x01E60BB4 MOV X2, X0
	0x01E60BB8 MOV X0, X20
	0x01E60BBC MOV X3, X31

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0x257A000
	009 Move X21, 0x2294000
	010 Move W8, [X20+163]
	011 Move X21, [X21+2512]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {40}
	017 Move X0, 0x2294000
	018 Move X0, [X0+1880]
	019 Call 0x1C17CF4
	020 Move X0, 0x2294000
	021 Move X0, [X0+2512]
	022 Call 0x1C17CF4
	023 Move X0, 0x229D000
	024 Move X0, [X0+2584]
	025 Call 0x1C17CF4
	026 Move X0, 0x229D000
	027 Move X0, [X0+2592]
	028 Call 0x1C17CF4
	029 Move X0, 0x229D000
	030 Move X0, [X0+2600]
	031 Call 0x1C17CF4
	032 Move X0, 0x229D000
	033 Move X0, [X0+2608]
	034 Call 0x1C17CF4
	035 Move X0, 0x229D000
	036 Move X0, [X0+2616]
	037 Call 0x1C17CF4
	038 Move W8, 1
	039 Move [X20+163], W8
	040 Move X0, [X21]
	041 Move W1, 5
	042 Call 0x1C17D6C
	043 Compare X0, 0
	044 JumpIfEqual {154}
	045 Move X21, [X19+64]
	046 Move X20, X0
	047 Compare X21, 0
	048 JumpIfEqual {55}
	049 Move X8, [X20]
	050 Move X0, X21
	051 Move X1, [X8+64]
	052 Call 0x1C17E00
	053 Compare X0, 0
	054 JumpIfEqual {151}
	055 Move W8, [X20+24]
	056 Compare W8, 0
	057 JumpIfEqual {150}
	058 Move [X20+32], X21
	059 Move W9, [X19+57]
	060 Move X10, 0x229D000
	061 Move X11, 0x229D000
	062 Move X12, 0x229D000
	063 Move X10, [X10+2616]
	064 Move X11, [X11+2584]
	065 Move X12, [X12+2608]
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Move X21, [X10]
	068 NotImplemented "Instruction CSEL not yet implemented."
	069 Move X22, [X9]
	070 Compare X22, 0
	071 JumpIfEqual {79}
	072 Move X8, [X20]
	073 Move X0, X22
	074 Move X1, [X8+64]
	075 Call 0x1C17E00
	076 Compare X0, 0
	077 JumpIfEqual {151}
	078 Move W8, [X20+24]
	079 NotImplemented "Instruction CMP not yet implemented."
	080 Move [X20+40], X22
	081 Move W9, [X19+56]
	082 Move X10, 0x229D000
	083 Move X11, 0x229D000
	084 Move X10, [X10+2600]
	085 Move X11, [X11+2592]
	086 NotImplemented "Instruction CMP not yet implemented."
	087 NotImplemented "Instruction CSEL not yet implemented."
	088 Move X22, [X9]
	089 Compare X22, 0
	090 JumpIfEqual {98}
	091 Move X8, [X20]
	092 Move X0, X22
	093 Move X1, [X8+64]
	094 Call 0x1C17E00
	095 Compare X0, 0
	096 JumpIfEqual {151}
	097 Move W8, [X20+24]
	098 NotImplemented "Instruction CMP not yet implemented."
	099 Move X23, 0x2294000
	100 Move X23, [X23+1880]
	101 Move [X20+48], X22
	102 Move W8, [X19+32]
	103 Add X1, X31, 12
	104 Move X0, [X23]
	105 Move [X31+12], W8
	106 Call 0x1C17E04
	107 Move X22, X0
	108 Compare X0, 0
	109 JumpIfEqual {116}
	110 Move X8, [X20]
	111 Move X0, X22
	112 Move X1, [X8+64]
	113 Call 0x1C17E00
	114 Compare X0, 0
	115 JumpIfEqual {151}
	116 Move W8, [X20+24]
	117 NotImplemented "Instruction CMP not yet implemented."
	118 Move X0, X19
	119 Move [X20+56], X22
	120 Call Room.get_PlayerCount, X0
	121 Move X8, [X23]
	122 Move [X31+8], W0
	123 Add X1, X31, 8
	124 Move X0, X8
	125 Call 0x1C17E04
	126 Move X19, X0
	127 Compare X0, 0
	128 JumpIfEqual {135}
	129 Move X8, [X20]
	130 Move X0, X19
	131 Move X1, [X8+64]
	132 Call 0x1C17E00
	133 Compare X0, 0
	134 JumpIfEqual {151}
	135 Move W8, [X20+24]
	136 NotImplemented "Instruction CMP not yet implemented."
	137 Move X0, X21
	138 Move X1, X20
	139 Move X2, X31
	140 Move [X20+64], X19
	141 Call String.Format, X0, X1
	142 Move X20, [X31+48]
	143 Move X19, [X31+56]
	144 Move X22, [X31+32]
	145 Move X21, [X31+40]
	146 Move X30, [X31+16]
	147 Move X23, [X31+24]
	148 Add X31, X31, 64
	149 Return X0
	150 Call 0x1C17F28
	151 Call 0x1C17F44
	152 Move X1, X31
	153 Call 0x1C17DEC
	154 Call 0x1C17F20

Method: System.String ToStringFull()

Disassembly:
	0x01E60BC0 LDR X1, [X8]
	0x01E60BC4 BL 0x3234224
	0x01E60BC8 LDR X0, [X24]
	0x01E60BCC MOVZ W1, 0x4
	0x01E60BD0 BL 0x1C16D6C
	0x01E60BD4 LDR X8, [X19 + 0x28]
	0x01E60BD8 CBZ X8, 0x1E60EF8
	0x01E60BDC MOV X21, X0
	0x01E60BE0 MOV X0, X8
	0x01E60BE4 MOV X1, X31
	0x01E60BE8 BL 0x1E4B254
	0x01E60BEC CBZ X21, 0x1E60EF8
	0x01E60BF0 MOV X22, X0
	0x01E60BF4 CBZ X0, 0x1E60C0C
	0x01E60BF8 LDR X8, [X21]
	0x01E60BFC MOV X0, X22
	0x01E60C00 LDR X1, [X8 + 0x40]
	0x01E60C04 BL 0x1C16E00
	0x01E60C08 CBZ X0, 0x1E60F00
	0x01E60C0C LDR W8, [X21 + 0x18]
	0x01E60C10 CBZ W8, 0x1E60EFC
	0x01E60C14 STR X22, [X21 + 0x20]
	0x01E60C18 LDR X8, [X19 + 0x28]
	0x01E60C1C CBZ X8, 0x1E60EF8
	0x01E60C20 ADRP X9, 0x229C000
	0x01E60C24 LDR X9, [X9 + 0xA78]
	0x01E60C28 LDR X8, [X8 + 0x30]
	0x01E60C2C LDR X22, [X9]
	0x01E60C30 CBZ X8, 0x1E60C68
	0x01E60C34 ADRP X9, 0x229C000
	0x01E60C38 LDR X9, [X9 + 0x730]
	0x01E60C3C LDRB W8, [X8 + 0x10]
	0x01E60C40 MOVN X10, 0x0
	0x01E60C44 ADD X0, X31, 0x8
	0x01E60C48 LDR X9, [X9]
	0x01E60C4C MOV X1, X31
	0x01E60C50 STRB W8, [X31 + 0x18]
	0x01E60C54 STP X9, X10, [X31 + 0x8]
	0x01E60C58 BL 0x33B162C
	0x01E60C5C MOV X23, X0
	0x01E60C60 CBNZ X23, 0x1E60C78
	0x01E60C64 B 0x1E60C8C
	0x01E60C68 ADRP X8, 0x229C000
	0x01E60C6C LDR X8, [X8 + 0xA58]
	0x01E60C70 LDR X23, [X8]
	0x01E60C74 CBZ X23, 0x1E60C8C
	0x01E60C78 LDR X8, [X21]
	0x01E60C7C MOV X0, X23
	0x01E60C80 LDR X1, [X8 + 0x40]
	0x01E60C84 BL 0x1C16E00
	0x01E60C88 CBZ X0, 0x1E60F00
	0x01E60C8C LDR W8, [X21 + 0x18]
	0x01E60C90 CMP W8, 0x1
	0x01E60C94 B.LS 0x1E60EFC
	0x01E60C98 STR X23, [X21 + 0x28]
	0x01E60C9C LDR X8, [X19 + 0x28]
	0x01E60CA0 CBZ X8, 0x1E60EF8
	0x01E60CA4 ADRP X9, 0x229B000
	0x01E60CA8 LDR X9, [X9 + 0xDF0]
	0x01E60CAC LDR W8, [X8 + 0x38]
	0x01E60CB0 ADD X1, X31, 0x8
	0x01E60CB4 LDR X0, [X9]
	0x01E60CB8 STR W8, [X31 + 0x8]
	0x01E60CBC BL 0x1C16E04
	0x01E60CC0 MOV X23, X0
	0x01E60CC4 CBZ X0, 0x1E60CDC
	0x01E60CC8 LDR X8, [X21]
	0x01E60CCC MOV X0, X23
	0x01E60CD0 LDR X1, [X8 + 0x40]
	0x01E60CD4 BL 0x1C16E00
	0x01E60CD8 CBZ X0, 0x1E60F00
	0x01E60CDC LDR W8, [X21 + 0x18]
	0x01E60CE0 CMP W8, 0x2
	0x01E60CE4 B.LS 0x1E60EFC
	0x01E60CE8 STR X23, [X21 + 0x30]
	0x01E60CEC LDR X8, [X19 + 0x28]
	0x01E60CF0 CBZ X8, 0x1E60EF8
	0x01E60CF4 ADRP X9, 0x229C000
	0x01E60CF8 LDR X9, [X9 + 0x6A0]
	0x01E60CFC LDR W8, [X8 + 0x3C]
	0x01E60D00 ADD X1, X31, 0x2C
	0x01E60D04 LDR X0, [X9]
	0x01E60D08 STR W8, [X31 + 0x2C]
	0x01E60D0C BL 0x1C16E04
	0x01E60D10 MOV X23, X0
	0x01E60D14 CBZ X0, 0x1E60D2C
	0x01E60D18 LDR X8, [X21]
	0x01E60D1C MOV X0, X23
	0x01E60D20 LDR X1, [X8 + 0x40]
	0x01E60D24 BL 0x1C16E00
	0x01E60D28 CBZ X0, 0x1E60F00
	0x01E60D2C LDR W8, [X21 + 0x18]
	0x01E60D30 CMP W8, 0x3
	0x01E60D34 B.LS 0x1E60EFC
	0x01E60D38 MOV X0, X20
	0x01E60D3C MOV X1, X22
	0x01E60D40 MOV X2, X21
	0x01E60D44 MOV X3, X31
	0x01E60D48 STR X23, [X21 + 0x38]
	0x01E60D4C BL 0x3234E54
	0x01E60D50 LDR X0, [X19 + 0x28]
	0x01E60D54 CBZ X0, 0x1E60EF8
	0x01E60D58 ADRP X21, 0x229B000
	0x01E60D5C ADRP X22, 0x229C000
	0x01E60D60 LDR X21, [X21 + 0xE68]
	0x01E60D64 LDR X22, [X22 + 0xA80]
	0x01E60D68 MOV X1, X31
	0x01E60D6C BL 0x1E4AE38
	0x01E60D70 LDR X8, [X21]
	0x01E60D74 STR W0, [X31 + 0x28]
	0x01E60D78 ADD X1, X31, 0x28
	0x01E60D7C MOV X0, X8
	0x01E60D80 BL 0x1C16E04
	0x01E60D84 LDR X1, [X22]
	0x01E60D88 MOV X2, X0
	0x01E60D8C MOV X0, X20
	0x01E60D90 MOV X3, X31
	0x01E60D94 BL 0x3234224
	0x01E60D98 LDR X8, [X19 + 0x28]
	0x01E60D9C CBZ X8, 0x1E60EF8
	0x01E60DA0 LDR X0, [X8 + 0x10]
	0x01E60DA4 CBZ X0, 0x1E60EF8
	0x01E60DA8 ADRP X21, 0x229C000
	0x01E60DAC LDR X21, [X21 + 0xA70]
	0x01E60DB0 MOV X1, X31
	0x01E60DB4 BL 0x3501B78
	0x01E60DB8 LDR X1, [X21]
	0x01E60DBC MOV X2, X0
	0x01E60DC0 MOV X0, X20
	0x01E60DC4 MOV X3, X31
	0x01E60DC8 BL 0x3234224
	0x01E60DCC LDR X0, [X24]
	0x01E60DD0 MOVZ W1, 0x4
	0x01E60DD4 BL 0x1C16D6C
	0x01E60DD8 LDR X8, [X19 + 0x28]
	0x01E60DDC CBZ X8, 0x1E60EF8
	0x01E60DE0 MOV X21, X0
	0x01E60DE4 CBZ X0, 0x1E60EF8
	0x01E60DE8 LDR X22, [X8 + 0x58]
	0x01E60DEC CBZ X22, 0x1E60E04
	0x01E60DF0 LDR X8, [X21]
	0x01E60DF4 MOV X0, X22
	0x01E60DF8 LDR X1, [X8 + 0x40]
	0x01E60DFC BL 0x1C16E00
	0x01E60E00 CBZ X0, 0x1E60F00
	0x01E60E04 LDR W8, [X21 + 0x18]
	0x01E60E08 CBZ W8, 0x1E60EFC
	0x01E60E0C STR X22, [X21 + 0x20]
	0x01E60E10 LDR X0, [X19 + 0x28]
	0x01E60E14 CBZ X0, 0x1E60EF8
	0x01E60E18 MOV X1, X31
	0x01E60E1C BL 0x1E4ADEC
	0x01E60E20 MOV X22, X0
	0x01E60E24 CBZ X0, 0x1E60E3C
	0x01E60E28 LDR X8, [X21]
	0x01E60E2C MOV X0, X22
	0x01E60E30 LDR X1, [X8 + 0x40]
	0x01E60E34 BL 0x1C16E00
	0x01E60E38 CBZ X0, 0x1E60F00
	0x01E60E3C LDR W8, [X21 + 0x18]
	0x01E60E40 CMP W8, 0x1

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0x257A000
	009 Move X21, 0x2294000
	010 Move W8, [X20+164]
	011 Move X21, [X21+2512]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {43}
	017 Move X0, 0x229C000
	018 Move X0, [X0+3480]
	019 Call 0x1C17CF4
	020 Move X0, 0x2294000
	021 Move X0, [X0+1880]
	022 Call 0x1C17CF4
	023 Move X0, 0x2294000
	024 Move X0, [X0+2512]
	025 Call 0x1C17CF4
	026 Move X0, 0x229D000
	027 Move X0, [X0+2584]
	028 Call 0x1C17CF4
	029 Move X0, 0x229D000
	030 Move X0, [X0+2624]
	031 Call 0x1C17CF4
	032 Move X0, 0x229D000
	033 Move X0, [X0+2592]
	034 Call 0x1C17CF4
	035 Move X0, 0x229D000
	036 Move X0, [X0+2600]
	037 Call 0x1C17CF4
	038 Move X0, 0x229D000
	039 Move X0, [X0+2608]
	040 Call 0x1C17CF4
	041 Move W8, 1
	042 Move [X20+164], W8
	043 Move X0, [X21]
	044 Move W1, 6
	045 Call 0x1C17D6C
	046 Compare X0, 0
	047 JumpIfEqual {180}
	048 Move X21, [X19+64]
	049 Move X20, X0
	050 Compare X21, 0
	051 JumpIfEqual {58}
	052 Move X8, [X20]
	053 Move X0, X21
	054 Move X1, [X8+64]
	055 Call 0x1C17E00
	056 Compare X0, 0
	057 JumpIfEqual {177}
	058 Move W8, [X20+24]
	059 Compare W8, 0
	060 JumpIfEqual {176}
	061 Move [X20+32], X21
	062 Move W9, [X19+57]
	063 Move X10, 0x229D000
	064 Move X11, 0x229D000
	065 Move X12, 0x229D000
	066 Move X10, [X10+2624]
	067 Move X11, [X11+2584]
	068 Move X12, [X12+2608]
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Move X21, [X10]
	071 NotImplemented "Instruction CSEL not yet implemented."
	072 Move X22, [X9]
	073 Compare X22, 0
	074 JumpIfEqual {82}
	075 Move X8, [X20]
	076 Move X0, X22
	077 Move X1, [X8+64]
	078 Call 0x1C17E00
	079 Compare X0, 0
	080 JumpIfEqual {177}
	081 Move W8, [X20+24]
	082 NotImplemented "Instruction CMP not yet implemented."
	083 Move [X20+40], X22
	084 Move W9, [X19+56]
	085 Move X10, 0x229D000
	086 Move X11, 0x229D000
	087 Move X10, [X10+2600]
	088 Move X11, [X11+2592]
	089 NotImplemented "Instruction CMP not yet implemented."
	090 NotImplemented "Instruction CSEL not yet implemented."
	091 Move X22, [X9]
	092 Compare X22, 0
	093 JumpIfEqual {101}
	094 Move X8, [X20]
	095 Move X0, X22
	096 Move X1, [X8+64]
	097 Call 0x1C17E00
	098 Compare X0, 0
	099 JumpIfEqual {177}
	100 Move W8, [X20+24]
	101 NotImplemented "Instruction CMP not yet implemented."
	102 Move X23, 0x2294000
	103 Move X23, [X23+1880]
	104 Move [X20+48], X22
	105 Move W8, [X19+32]
	106 Add X1, X31, 12
	107 Move X0, [X23]
	108 Move [X31+12], W8
	109 Call 0x1C17E04
	110 Move X22, X0
	111 Compare X0, 0
	112 JumpIfEqual {119}
	113 Move X8, [X20]
	114 Move X0, X22
	115 Move X1, [X8+64]
	116 Call 0x1C17E00
	117 Compare X0, 0
	118 JumpIfEqual {177}
	119 Move W8, [X20+24]
	120 NotImplemented "Instruction CMP not yet implemented."
	121 Move X0, X19
	122 Move [X20+56], X22
	123 Call Room.get_PlayerCount, X0
	124 Move X8, [X23]
	125 Move [X31+8], W0
	126 Add X1, X31, 8
	127 Move X0, X8
	128 Call 0x1C17E04
	129 Move X22, X0
	130 Compare X0, 0
	131 JumpIfEqual {138}
	132 Move X8, [X20]
	133 Move X0, X22
	134 Move X1, [X8+64]
	135 Call 0x1C17E00
	136 Compare X0, 0
	137 JumpIfEqual {177}
	138 Move W8, [X20+24]
	139 NotImplemented "Instruction CMP not yet implemented."
	140 Move X8, 0x229C000
	141 Move X8, [X8+3480]
	142 Move [X20+64], X22
	143 Move X19, [X19+24]
	144 Move X0, [X8]
	145 Move W8, [X0+224]
	146 Compare W8, 0
	147 JumpIfNotEqual {149}
	148 Call 0x1C17DFC
	149 Move X0, X19
	150 Move X1, X31
	151 Call Extensions.ToStringFull, X0
	152 Move X19, X0
	153 Compare X0, 0
	154 JumpIfEqual {161}
	155 Move X8, [X20]
	156 Move X0, X19
	157 Move X1, [X8+64]
	158 Call 0x1C17E00
	159 Compare X0, 0
	160 JumpIfEqual {177}
	161 Move W8, [X20+24]
	162 NotImplemented "Instruction CMP not yet implemented."
	163 Move X0, X21
	164 Move X1, X20
	165 Move X2, X31
	166 Move [X20+72], X19
	167 Call String.Format, X0, X1
	168 Move X20, [X31+48]
	169 Move X19, [X31+56]
	170 Move X22, [X31+32]
	171 Move X21, [X31+40]
	172 Move X30, [X31+16]
	173 Move X23, [X31+24]
	174 Add X31, X31, 64
	175 Return X0
	176 Call 0x1C17F28
	177 Call 0x1C17F44
	178 Move X1, X31
	179 Call 0x1C17DEC
	180 Call 0x1C17F20

