Type: Fusion.Photon.Realtime.LoadBalancingClient

Method: Fusion.Photon.Realtime.LoadBalancingPeer get_LoadBalancingPeer()

Disassembly:
	0x01E4BBD4 CMP W1, 0xC
	0x01E4BBD8 B.EQ 0x1E4BC00

ISIL:
	001 Move X0, [X0+16]
	002 Return X0

Method: System.Void set_LoadBalancingPeer(Fusion.Photon.Realtime.LoadBalancingPeer value)

Disassembly:
	0x01E4BBDC LDR X8, [X19 + 0x98]
	0x01E4BBE0 MOVZ W9, 0xC

ISIL:
	001 Move [X0+16], X1
	002 Return 

Method: ExitGames.Client.Photon.SerializationProtocol get_SerializationProtocol()

Disassembly:
	0x01E4BBE4 STR W9, [X19 + 0x90]
	0x01E4BBE8 CBZ X8, 0x1E4BC00
	0x01E4BBEC LDR X9, [X8 + 0x18]
	0x01E4BBF0 LDR X0, [X8 + 0x40]
	0x01E4BBF4 LDR X3, [X8 + 0x28]
	0x01E4BBF8 MOVZ W2, 0xC
	0x01E4BBFC BLR X9

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+16]
	003 Compare X8, 0
	004 JumpIfEqual {8}
	005 Move W0, [X8+40]
	006 Move X30, [X31+16]
	007 Return X0
	008 Call 0x1C17F20

Method: System.Void set_SerializationProtocol(ExitGames.Client.Photon.SerializationProtocol value)

Disassembly:
	0x01E469C4 LDR X8, [X19]
	0x01E469C8 LDR X24, [X24 + 0x818]
	0x01E469CC LDRH W9, [X8 + 0x12E]
	0x01E469D0 LDR X1, [X24]
	0x01E469D4 CBZ X9, 0x1E469F8
	0x01E469D8 LDR X10, [X8 + 0xB0]
	0x01E469DC ADD X10, X10, 0x8

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+16]
	003 Compare X8, 0
	004 JumpIfEqual {8}
	005 Move [X8+40], W1
	006 Move X30, [X31+16]
	007 Return 
	008 Call 0x1C17F20

Method: System.String get_AppVersion()

Disassembly:
	0x01E4BC00 MOVZ W0, 0x1
	0x01E4BC04 STR W31, [X19 + 0x80]

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void set_AppVersion(System.String value)

Disassembly:
	0x01E4BC08 B 0x1E4BB00
	0x01E4BC0C BL 0x1C16F20

ISIL:
	001 Move [X0+24], X1
	002 Return 

Method: System.String get_AppId()

Disassembly:
	0x01E4BC10 SUB X31, X31, 0x40
	0x01E4BC14 STP X30, X21, [X31 + 0x20]

ISIL:
	001 Move X0, [X0+32]
	002 Return X0

Method: System.Void set_AppId(System.String value)

Disassembly:
	0x01E4BC18 STP X20, X19, [X31 + 0x30]
	0x01E4BC1C ADRP X20, 0x258D000

ISIL:
	001 Move [X0+32], X1
	002 Return 

Method: Fusion.Photon.Realtime.ClientAppType get_ClientType()

Disassembly:
	0x01E4BC20 LDRB W8, [X20 + 0xFF3]
	0x01E4BC24 MOV X19, X0

ISIL:
	001 Move W0, [X0+40]
	002 Return X0

Method: System.Void set_ClientType(Fusion.Photon.Realtime.ClientAppType value)

Disassembly:
	0x01E4BC28 TBNZ X8, 0x0, 0x1E4BC70
	0x01E4BC2C ADRP X0, 0x22B0000

ISIL:
	001 Move [X0+40], W1
	002 Return 

Method: Fusion.Photon.Realtime.AuthenticationValues get_AuthValues()

Disassembly:
	0x01E4BC30 LDR X0, [X0 + 0xD38]
	0x01E4BC34 BL 0x1C16CF4

ISIL:
	001 Move X0, [X0+48]
	002 Return X0

Method: System.Void set_AuthValues(Fusion.Photon.Realtime.AuthenticationValues value)

Disassembly:
	0x01E4BC38 ADRP X0, 0x22B1000
	0x01E4BC3C LDR X0, [X0 + 0x18]

ISIL:
	001 Move [X0+48], X1
	002 Return 

Method: System.Nullable`1<ExitGames.Client.Photon.ConnectionProtocol> get_ExpectedProtocol()

Disassembly:
	0x01E4BC40 BL 0x1C16CF4
	0x01E4BC44 ADRP X0, 0x22B0000

ISIL:
	001 NotImplemented "Instruction LDRH not yet implemented."
	002 Return X0

Method: System.Void set_ExpectedProtocol(System.Nullable`1<ExitGames.Client.Photon.ConnectionProtocol> value)

Disassembly:
	0x01E4BC48 LDR X0, [X0 + 0xD40]
	0x01E4BC4C BL 0x1C16CF4

ISIL:
	001 NotImplemented "Instruction STRH not yet implemented."
	002 Return 

Method: System.Object get_TokenForInit()

Disassembly:
	0x01E4BC50 ADRP X0, 0x22B1000
	0x01E4BC54 LDR X0, [X0 + 0x20]
	0x01E4BC58 BL 0x1C16CF4
	0x01E4BC5C ADRP X0, 0x22B1000
	0x01E4BC60 LDR X0, [X0 + 0x28]
	0x01E4BC64 BL 0x1C16CF4
	0x01E4BC68 MOVZ W8, 0x1
	0x01E4BC6C STRB W8, [X20 + 0xFF3]

ISIL:
	001 Move W8, [X0+56]
	002 Compare W8, 0
	003 JumpIfEqual {9}
	004 Move X8, [X0+48]
	005 Compare X8, 0
	006 JumpIfEqual {9}
	007 Move X0, [X8+40]
	008 Return X0
	009 Move X0, X31
	010 Return X0

Method: System.Boolean get_IsUsingNameServer()

Disassembly:
	0x01E4BC70 LDR X0, [X19 + 0x10]
	0x01E4BC74 CBZ X0, 0x1E4BE18

ISIL:
	001 Move W0, [X0+80]
	002 Return X0

Method: System.Void set_IsUsingNameServer(System.Boolean value)

Disassembly:
	0x01E4BC78 MOV X1, X31
	0x01E4BC7C BL 0x3501B48
	0x01E4BC80 ANDS W31, W0, 0xFF

ISIL:
	001 And W8, W1, 1
	002 Move [X0+80], W8
	003 Return 

Method: System.String get_NameServerAddress()

Disassembly:
	0x01E4BC84 B.EQ 0x1E4BCF8

ISIL:
No ISIL was generated
Method: System.Boolean get_UseAlternativeUdpPorts()

Disassembly:
	0x01E4BDC4 STRB W31, [X19 + 0x168]
	0x01E4BDC8 CMP W1, 0x10

ISIL:
	001 Move W0, [X0+96]
	002 Return X0

Method: System.Void set_UseAlternativeUdpPorts(System.Boolean value)

Disassembly:
	0x01E4BDCC B.EQ 0x1E4BDF4
	0x01E4BDD0 LDR X8, [X19 + 0x98]
	0x01E4BDD4 MOVZ W9, 0x10

ISIL:
	001 And W8, W1, 1
	002 Move [X0+96], W8
	003 Return 

Method: System.Boolean get_EnableProtocolFallback()

Disassembly:
	0x01E4BDD8 STR W9, [X19 + 0x90]
	0x01E4BDDC CBZ X8, 0x1E4BDF4

ISIL:
	001 Move W0, [X0+104]
	002 Return X0

Method: System.Void set_EnableProtocolFallback(System.Boolean value)

Disassembly:
	0x01E4BDE0 LDR X9, [X8 + 0x18]
	0x01E4BDE4 LDR X0, [X8 + 0x40]
	0x01E4BDE8 LDR X3, [X8 + 0x28]

ISIL:
	001 And W8, W1, 1
	002 Move [X0+104], W8
	003 Return 

Method: System.String get_CurrentServerAddress()

Disassembly:
	0x01E4BDEC MOVZ W2, 0x10
	0x01E4BDF0 BLR X9
	0x01E4BDF4 MOVZ W8, 0x2
	0x01E4BDF8 MOVZ W0, 0x1
	0x01E4BDFC STR W8, [X19 + 0x80]
	0x01E4BE00 B 0x1E4BE08
	0x01E4BE04 MOV W0, W31

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+16]
	003 Compare X0, 0
	004 JumpIfEqual {9}
	005 Move X1, X31
	006 Move X30, [X31+16]
	007 Call PhotonPeer.get_ServerAddress, X0
	008 Return X0
	009 Call 0x1C17F20

Method: System.String get_MasterServerAddress()

Disassembly:
	0x01E4BE08 LDP X20, X19, [X31 + 0x30]
	0x01E4BE0C LDP X30, X21, [X31 + 0x20]

ISIL:
	001 Move X0, [X0+112]
	002 Return X0

Method: System.Void set_MasterServerAddress(System.String value)

Disassembly:
	0x01E4BE10 ADD X31, X31, 0x40
	0x01E4BE14 RET

ISIL:
	001 Move [X0+112], X1
	002 Return 

Method: System.String get_GameServerAddress()

Disassembly:
	0x01E4BE18 BL 0x1C16F20
	0x01E4BE1C SUB X31, X31, 0x30

ISIL:
	001 Move X0, [X0+120]
	002 Return X0

Method: System.Void set_GameServerAddress(System.String value)

Disassembly:
	0x01E4BE20 STP X30, X21, [X31 + 0x10]
	0x01E4BE24 STP X20, X19, [X31 + 0x20]

ISIL:
	001 Move [X0+120], X1
	002 Return 

Method: Fusion.Photon.Realtime.ServerConnection get_Server()

Disassembly:
	0x01E4BE28 ADRP X21, 0x258D000
	0x01E4BE2C LDRB W8, [X21 + 0xFF4]

ISIL:
	001 Move W0, [X0+128]
	002 Return X0

Method: System.Void set_Server(Fusion.Photon.Realtime.ServerConnection value)

Disassembly:
	0x01E4BE30 MOV X20, X1
	0x01E4BE34 MOV X19, X0

ISIL:
	001 Move [X0+128], W1
	002 Return 

Method: Fusion.Photon.Realtime.ClientState get_State()

Disassembly:
	0x01E4BE38 TBNZ X8, 0x0, 0x1E4BE80
	0x01E4BE3C ADRP X0, 0x22B0000

ISIL:
	001 Move W0, [X0+144]
	002 Return X0

Method: System.Void set_State(Fusion.Photon.Realtime.ClientState value)

Disassembly:
	0x01E4BE40 LDR X0, [X0 + 0xD38]
	0x01E4BE44 BL 0x1C16CF4
	0x01E4BE48 ADRP X0, 0x22B1000
	0x01E4BE4C LDR X0, [X0 + 0x18]
	0x01E4BE50 BL 0x1C16CF4
	0x01E4BE54 ADRP X0, 0x22B1000
	0x01E4BE58 LDR X0, [X0 + 0x30]
	0x01E4BE5C BL 0x1C16CF4
	0x01E4BE60 ADRP X0, 0x22B1000
	0x01E4BE64 LDR X0, [X0 + 0x20]
	0x01E4BE68 BL 0x1C16CF4
	0x01E4BE6C ADRP X0, 0x22B1000
	0x01E4BE70 LDR X0, [X0 + 0x38]

ISIL:
	001 Move W8, [X0+144]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 Move X9, [X0+152]
	004 Move W2, W1
	005 Move [X0+144], W1
	006 Compare X9, 0
	007 JumpIfEqual {13}
	008 Move X4, [X9+24]
	009 Move X0, [X9+64]
	010 Move X3, [X9+40]
	011 Move W1, W8
	012 CallNoReturn X4
	013 Return 

Method: System.Boolean get_IsConnected()

Disassembly:
	0x01E48D94 MOV W2, W31
	0x01E48D98 MOV X4, X31
	0x01E48D9C BL 0x351EE98
	0x01E48DA0 STR W31, [X31 + 0x10]
	0x01E48DA4 ADRP X9, 0x22B3000
	0x01E48DA8 LDR X8, [X21]
	0x01E48DAC LDR X9, [X9 + 0xF00]
	0x01E48DB0 LDR X8, [X8 + 0xB8]
	0x01E48DB4 LDR X0, [X9]
	0x01E48DB8 LDR X20, [X8 + 0x8]
	0x01E48DBC LDR W9, [X0 + 0xE0]

ISIL:
	001 Move X8, [X0+16]
	002 Compare X8, 0
	003 JumpIfEqual {11}
	004 Move W8, [X0+144]
	005 NotImplemented "Instruction CMP not yet implemented."
	006 NotImplemented "Instruction CSET not yet implemented."
	007 NotImplemented "Instruction CMP not yet implemented."
	008 NotImplemented "Instruction CSET not yet implemented."
	009 And W0, W9, W8
	010 Return X0
	011 Move W0, W31
	012 Return X0

Method: System.Boolean get_IsConnectedAndReady()

Disassembly:
	0x01E4646C CBZ W8, 0x1E46480
	0x01E46470 LDR X8, [X19 + 0x30]
	0x01E46474 CBZ X8, 0x1E46480
	0x01E46478 LDR X4, [X8 + 0x28]
	0x01E4647C B 0x1E46484
	0x01E46480 MOV X4, X31
	0x01E46484 CBZ X20, 0x1E46588
	0x01E46488 LDR X8, [X20]
	0x01E4648C LDR X2, [X19 + 0x88]
	0x01E46490 LDR X3, [X19 + 0x20]
	0x01E46494 MOV X0, X20
	0x01E46498 LDP X9, X6, [X8 + 0x1A8]
	0x01E4649C MOV X5, X31

ISIL:
	001 Move X8, [X0+16]
	002 Compare X8, 0
	003 JumpIfEqual {11}
	004 Move W9, [X0+144]
	005 NotImplemented "Instruction CMP not yet implemented."
	006 Move W8, 0x829C
	007 NotImplemented "Instruction MOVK not yet implemented."
	008 NotImplemented "Instruction LSRV not yet implemented."
	009 And W0, W8, 1
	010 Return X0
	011 NotImplemented "Instruction CMP not yet implemented."
	012 NotImplemented "Instruction CSET not yet implemented."
	013 Return X0

Method: System.Void add_StateChanged(System.Action`2<Fusion.Photon.Realtime.ClientState, Fusion.Photon.Realtime.ClientState> value)

Disassembly:
	0x01E4BE74 BL 0x1C16CF4
	0x01E4BE78 MOVZ W8, 0x1
	0x01E4BE7C STRB W8, [X21 + 0xFF4]
	0x01E4BE80 MOV X0, X20
	0x01E4BE84 MOV X1, X31
	0x01E4BE88 BL 0x32277A8
	0x01E4BE8C TBZ X0, 0x0, 0x1E4BEBC
	0x01E4BE90 ADRP X9, 0x22B1000
	0x01E4BE94 LDR X8, [X19]
	0x01E4BE98 LDR X9, [X9 + 0x30]
	0x01E4BE9C MOVZ W1, 0x1
	0x01E4BEA0 MOV X0, X19
	0x01E4BEA4 LDR X3, [X8 + 0x220]
	0x01E4BEA8 LDR X2, [X9]
	0x01E4BEAC LDR X9, [X8 + 0x218]
	0x01E4BEB0 BLR X9
	0x01E4BEB4 MOV W20, W31
	0x01E4BEB8 B 0x1E4C058
	0x01E4BEBC LDR W8, [X19 + 0x90]
	0x01E4BEC0 MOVZ W9, 0x1
	0x01E4BEC4 STRB W9, [X19 + 0x50]
	0x01E4BEC8 CMP W8, 0x11
	0x01E4BECC B.EQ 0x1E4BF14
	0x01E4BED0 CMP W8, 0x1
	0x01E4BED4 B.NE 0x1E4BF5C
	0x01E4BED8 LDR X8, [X19 + 0x10]
	0x01E4BEDC CBZ X8, 0x1E4C06C
	0x01E4BEE0 LDRB W8, [X8 + 0x40]
	0x01E4BEE4 CMP W8, 0x3
	0x01E4BEE8 B.CC 0x1E4C054
	0x01E4BEEC ADRP X9, 0x22B1000
	0x01E4BEF0 LDR X8, [X19]
	0x01E4BEF4 LDR X9, [X9 + 0x38]
	0x01E4BEF8 MOVZ W1, 0x3
	0x01E4BEFC MOV X0, X19
	0x01E4BF00 LDR X3, [X8 + 0x220]
	0x01E4BF04 LDR X2, [X9]
	0x01E4BF08 LDR X9, [X8 + 0x218]
	0x01E4BF0C BLR X9
	0x01E4BF10 B 0x1E4C054
	0x01E4BF14 MOV X0, X19
	0x01E4BF18 STR X20, [X19 + 0x140]
	0x01E4BF1C BL 0x1E4C070
	0x01E4BF20 TBZ X0, 0x0, 0x1E4BEB4

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x258E000
	009 Move W8, [X21+4071]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x22B1000
	017 Move X0, [X0+3944]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+4071], W8
	021 Move X24, 0x22B1000
	022 Add X20, X20, 152
	023 Move X21, [X20]
	024 Move X24, [X24+3944]
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Combine, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Void remove_StateChanged(System.Action`2<Fusion.Photon.Realtime.ClientState, Fusion.Photon.Realtime.ClientState> value)

Disassembly:
	0x01E4BF24 LDR W1, [X19 + 0x90]
	0x01E4BF28 MOVZ W20, 0x1
	0x01E4BF2C CMP W1, 0x1
	0x01E4BF30 B.EQ 0x1E4C058
	0x01E4BF34 LDR X8, [X19 + 0x98]
	0x01E4BF38 STR W20, [X19 + 0x90]
	0x01E4BF3C CBZ X8, 0x1E4C058
	0x01E4BF40 LDR X9, [X8 + 0x18]
	0x01E4BF44 LDR X0, [X8 + 0x40]
	0x01E4BF48 LDR X3, [X8 + 0x28]
	0x01E4BF4C MOVZ W2, 0x1
	0x01E4BF50 MOVZ W20, 0x1
	0x01E4BF54 BLR X9
	0x01E4BF58 B 0x1E4C058
	0x01E4BF5C LDR X0, [X19 + 0x10]
	0x01E4BF60 CBZ X0, 0x1E4C06C
	0x01E4BF64 LDR X8, [X0]
	0x01E4BF68 LDP X9, X1, [X8 + 0x1B8]
	0x01E4BF6C BLR X9
	0x01E4BF70 MOV X0, X19
	0x01E4BF74 STR X20, [X19 + 0x140]
	0x01E4BF78 BL 0x1E4B980
	0x01E4BF7C LDR W8, [X19 + 0x38]
	0x01E4BF80 CMP W8, 0x2
	0x01E4BF84 B.NE 0x1E4BFD0
	0x01E4BF88 LDRB W8, [X19 + 0x40]
	0x01E4BF8C CBNZ W8, 0x1E4BFBC
	0x01E4BF90 LDR X8, [X19 + 0x10]
	0x01E4BF94 CBZ X8, 0x1E4C06C
	0x01E4BF98 LDRB W1, [X8 + 0x84]
	0x01E4BF9C ADRP X8, 0x22B0000
	0x01E4BFA0 LDR X8, [X8 + 0xD38]
	0x01E4BFA4 ADD X0, X31, 0xC
	0x01E4BFA8 STRH W31, [X31 + 0xC]
	0x01E4BFAC LDR X2, [X8]
	0x01E4BFB0 BL 0x242DF98
	0x01E4BFB4 LDRH W8, [X31 + 0xC]
	0x01E4BFB8 STRH W8, [X19 + 0x40]
	0x01E4BFBC LDR X20, [X19 + 0x10]
	0x01E4BFC0 CBZ X20, 0x1E4C06C
	0x01E4BFC4 MOVZ W8, 0x5
	0x01E4BFC8 STRB W8, [X20 + 0x84]
	0x01E4BFCC B 0x1E4BFD4
	0x01E4BFD0 LDR X20, [X19 + 0x10]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x258E000
	009 Move W8, [X21+4072]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x22B1000
	017 Move X0, [X0+3944]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+4072], W8
	021 Move X24, 0x22B1000
	022 Add X20, X20, 152
	023 Move X21, [X20]
	024 Move X24, [X24+3944]
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Remove, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Void add_EventReceived(System.Action`1<ExitGames.Client.Photon.EventData> value)

Disassembly:
	0x01E46F0C BR X2
	0x01E46F10 RET
	0x01E46F14 SUB X31, X31, 0x70
	0x01E46F18 STR X30, [X31 + 0x10]
	0x01E46F1C STP X28, X27, [X31 + 0x20]
	0x01E46F20 STP X26, X25, [X31 + 0x30]
	0x01E46F24 STP X24, X23, [X31 + 0x40]
	0x01E46F28 STP X22, X21, [X31 + 0x50]
	0x01E46F2C STP X20, X19, [X31 + 0x60]
	0x01E46F30 ADRP X28, 0x2592000
	0x01E46F34 ADRP X27, 0x22B5000
	0x01E46F38 LDRB W8, [X28 + 0xFC2]
	0x01E46F3C LDR X27, [X27 + 0xDC0]
	0x01E46F40 MOV W19, W7
	0x01E46F44 MOV W22, W6
	0x01E46F48 MOV W23, W5
	0x01E46F4C MOV X21, X4
	0x01E46F50 MOV W25, W3
	0x01E46F54 MOV X26, X2
	0x01E46F58 MOV X24, X1
	0x01E46F5C MOV X20, X0
	0x01E46F60 TBNZ X8, 0x0, 0x1E46F9C
	0x01E46F64 ADRP X0, 0x22B5000
	0x01E46F68 LDR X0, [X0 + 0xDC0]
	0x01E46F6C BL 0x1C16CF4
	0x01E46F70 ADRP X0, 0x22B5000
	0x01E46F74 LDR X0, [X0 + 0xDC8]
	0x01E46F78 BL 0x1C16CF4
	0x01E46F7C ADRP X0, 0x22AD000
	0x01E46F80 LDR X0, [X0 + 0xAC8]
	0x01E46F84 BL 0x1C16CF4
	0x01E46F88 ADRP X0, 0x22B5000
	0x01E46F8C LDR X0, [X0 + 0xDD0]
	0x01E46F90 BL 0x1C16CF4
	0x01E46F94 MOVZ W8, 0x1
	0x01E46F98 STRB W8, [X28 + 0xFC2]
	0x01E46F9C ADD X1, X31, 0x18
	0x01E46FA0 ADD X2, X31, 0x8
	0x01E46FA4 MOV X0, X21
	0x01E46FA8 STR X31, [X31 + 0x18]
	0x01E46FAC STR X31, [X31 + 0x8]
	0x01E46FB0 BL 0x1E470C4
	0x01E46FB4 LDR X0, [X27]
	0x01E46FB8 BL 0x1C16F10

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x2593000
	009 Move W8, [X21+4073]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x22B6000
	017 Move X0, [X0+3248]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+4073], W8
	021 Move X24, 0x22B6000
	022 Add X20, X20, 160
	023 Move X21, [X20]
	024 Move X24, [X24+3248]
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Combine, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Void remove_EventReceived(System.Action`1<ExitGames.Client.Photon.EventData> value)

Disassembly:
	0x01E4BFD4 MOV X0, X19
	0x01E4BFD8 STRB W31, [X19 + 0x168]
	0x01E4BFDC STR W31, [X19 + 0xE0]
	0x01E4BFE0 STR X31, [X19 + 0xE8]
	0x01E4BFE4 BL 0x1E4AC88
	0x01E4BFE8 CBZ X20, 0x1E4C06C
	0x01E4BFEC ADRP X9, 0x22B1000
	0x01E4BFF0 LDR X8, [X20]
	0x01E4BFF4 LDR X2, [X19 + 0x88]
	0x01E4BFF8 LDR X9, [X9 + 0x20]
	0x01E4BFFC MOV X1, X0
	0x01E4C000 MOV X0, X20
	0x01E4C004 MOV X4, X31
	0x01E4C008 LDR X3, [X9]
	0x01E4C00C LDP X9, X6, [X8 + 0x1A8]
	0x01E4C010 MOV X5, X31
	0x01E4C014 BLR X9
	0x01E4C018 TBZ X0, 0x0, 0x1E4BEB4
	0x01E4C01C LDR W1, [X19 + 0x90]
	0x01E4C020 CMP W1, 0x10
	0x01E4C024 B.EQ 0x1E4C04C
	0x01E4C028 LDR X8, [X19 + 0x98]
	0x01E4C02C MOVZ W9, 0x10
	0x01E4C030 STR W9, [X19 + 0x90]
	0x01E4C034 CBZ X8, 0x1E4C04C
	0x01E4C038 LDR X9, [X8 + 0x18]
	0x01E4C03C LDR X0, [X8 + 0x40]
	0x01E4C040 LDR X3, [X8 + 0x28]
	0x01E4C044 MOVZ W2, 0x10
	0x01E4C048 BLR X9
	0x01E4C04C MOVZ W8, 0x2
	0x01E4C050 STR W8, [X19 + 0x80]
	0x01E4C054 MOVZ W20, 0x1
	0x01E4C058 MOV W0, W20
	0x01E4C05C LDP X20, X19, [X31 + 0x20]
	0x01E4C060 LDP X30, X21, [X31 + 0x10]
	0x01E4C064 ADD X31, X31, 0x30
	0x01E4C068 RET
	0x01E4C06C BL 0x1C16F20
	0x01E4C070 SUB X31, X31, 0x50
	0x01E4C074 STR X30, [X31 + 0x30]
	0x01E4C078 STP X20, X19, [X31 + 0x40]
	0x01E4C07C ADRP X20, 0x258C000
	0x01E4C080 LDRB W8, [X20 + 0xFFB]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x258E000
	009 Move W8, [X21+4074]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x22B1000
	017 Move X0, [X0+3248]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+4074], W8
	021 Move X24, 0x22B0000
	022 Add X20, X20, 160
	023 Move X21, [X20]
	024 Move X24, [X24+3248]
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Remove, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Void add_OpResponseReceived(System.Action`1<ExitGames.Client.Photon.OperationResponse> value)

Disassembly:
	0x01E4C084 MOV X19, X0
	0x01E4C088 TBNZ X8, 0x0, 0x1E4C10C
	0x01E4C08C ADRP X0, 0x22AF000
	0x01E4C090 LDR X0, [X0 + 0xE68]
	0x01E4C094 BL 0x1C16CF4
	0x01E4C098 ADRP X0, 0x22B0000
	0x01E4C09C LDR X0, [X0 + 0x18]
	0x01E4C0A0 BL 0x1C16CF4
	0x01E4C0A4 ADRP X0, 0x22B0000
	0x01E4C0A8 LDR X0, [X0 + 0x40]
	0x01E4C0AC BL 0x1C16CF4
	0x01E4C0B0 ADRP X0, 0x22B0000
	0x01E4C0B4 LDR X0, [X0 + 0x48]
	0x01E4C0B8 BL 0x1C16CF4
	0x01E4C0BC ADRP X0, 0x22A7000
	0x01E4C0C0 LDR X0, [X0 + 0xAC8]
	0x01E4C0C4 BL 0x1C16CF4
	0x01E4C0C8 ADRP X0, 0x22B0000
	0x01E4C0CC LDR X0, [X0 + 0x50]
	0x01E4C0D0 BL 0x1C16CF4
	0x01E4C0D4 ADRP X0, 0x22B0000
	0x01E4C0D8 LDR X0, [X0 + 0x58]
	0x01E4C0DC BL 0x1C16CF4
	0x01E4C0E0 ADRP X0, 0x22B0000
	0x01E4C0E4 LDR X0, [X0 + 0x60]
	0x01E4C0E8 BL 0x1C16CF4
	0x01E4C0EC ADRP X0, 0x22B0000
	0x01E4C0F0 LDR X0, [X0 + 0x68]
	0x01E4C0F4 BL 0x1C16CF4
	0x01E4C0F8 ADRP X0, 0x22B0000
	0x01E4C0FC LDR X0, [X0 + 0x70]
	0x01E4C100 BL 0x1C16CF4
	0x01E4C104 MOVZ W8, 0x1
	0x01E4C108 STRB W8, [X20 + 0xFFB]
	0x01E4C10C STRH W31, [X31 + 0x3C]
	0x01E4C110 LDRB W8, [X19 + 0x50]
	0x01E4C114 LDR W2, [X19 + 0x80]
	0x01E4C118 CBZ W8, 0x1E4C134
	0x01E4C11C CMP W2, 0x2
	0x01E4C120 B.EQ 0x1E4C134
	0x01E4C124 LDR X8, [X19 + 0x30]
	0x01E4C128 CBZ X8, 0x1E4C1CC
	0x01E4C12C LDR X8, [X8 + 0x28]
	0x01E4C130 CBZ X8, 0x1E4C1CC

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x258D000
	009 Move W8, [X21+4075]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x22B0000
	017 Move X0, [X0+3952]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+4075], W8
	021 Move X24, 0x22B0000
	022 Add X20, X20, 168
	023 Move X21, [X20]
	024 Move X24, [X24+3952]
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Combine, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Void remove_OpResponseReceived(System.Action`1<ExitGames.Client.Photon.OperationResponse> value)

Disassembly:
	0x01E4C134 LDR W8, [X19 + 0x38]
	0x01E4C138 CBZ W8, 0x1E4C190
	0x01E4C13C ADRP X8, 0x22B0000
	0x01E4C140 LDR X8, [X8 + 0x50]
	0x01E4C144 MOVZ W1, 0xE7
	0x01E4C148 MOV X0, X19
	0x01E4C14C LDR X3, [X8]
	0x01E4C150 BL 0x1E4CB70
	0x01E4C154 TBZ X0, 0x0, 0x1E4C2E8
	0x01E4C158 LDRH W8, [X19 + 0x40]
	0x01E4C15C ANDS W31, W8, 0xFF
	0x01E4C160 STRH W8, [X31 + 0x3C]
	0x01E4C164 B.EQ 0x1E4C2F0
	0x01E4C168 ADRP X9, 0x22B0000
	0x01E4C16C LDR X9, [X9 + 0x40]
	0x01E4C170 ADD X0, X31, 0x3C
	0x01E4C174 STRH W8, [X31 + 0x3C]
	0x01E4C178 LDR X1, [X9]
	0x01E4C17C BL 0x242DFB0
	0x01E4C180 LDR X8, [X19 + 0x10]
	0x01E4C184 CBZ X8, 0x1E4C360
	0x01E4C188 MOV W6, W0
	0x01E4C18C B 0x1E4C2FC
	0x01E4C190 ADRP X8, 0x22B0000
	0x01E4C194 LDR X8, [X8 + 0x68]
	0x01E4C198 MOVZ W1, 0xE6
	0x01E4C19C MOV X0, X19
	0x01E4C1A0 LDR X3, [X8]
	0x01E4C1A4 BL 0x1E4CB70
	0x01E4C1A8 TBZ X0, 0x0, 0x1E4C2E8
	0x01E4C1AC LDRB W8, [X19 + 0xF8]
	0x01E4C1B0 LDR X0, [X19 + 0x10]
	0x01E4C1B4 CBZ W8, 0x1E4C324
	0x01E4C1B8 LDR W8, [X19 + 0x80]
	0x01E4C1BC CMP W8, 0x0
	0x01E4C1C0 CSET W5, EQ
	0x01E4C1C4 CBNZ X0, 0x1E4C32C
	0x01E4C1C8 B 0x1E4C360
	0x01E4C1CC ADRP X8, 0x22A7000
	0x01E4C1D0 LDR X8, [X8 + 0xAC8]
	0x01E4C1D4 MOVZ W1, 0x6
	0x01E4C1D8 LDR X0, [X8]
	0x01E4C1DC BL 0x1C16D6C
	0x01E4C1E0 CBZ X0, 0x1E4C360

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x258D000
	009 Move W8, [X21+4076]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x22B0000
	017 Move X0, [X0+3952]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+4076], W8
	021 Move X24, 0x22B0000
	022 Add X20, X20, 168
	023 Move X21, [X20]
	024 Move X24, [X24+3952]
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Remove, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: Fusion.Photon.Realtime.DisconnectCause get_DisconnectedCause()

Disassembly:
	0x01E4C1E4 LDR W8, [X0 + 0x18]
	0x01E4C1E8 MOV X20, X0

ISIL:
	001 Move W0, [X0+224]
	002 Return X0

Method: System.Void set_DisconnectedCause(Fusion.Photon.Realtime.DisconnectCause value)

Disassembly:
	0x01E4C1EC CBZ W8, 0x1E4C35C
	0x01E4C1F0 ADRP X8, 0x22B0000

ISIL:
	001 Move [X0+224], W1
	002 Return 

Method: System.Boolean get_InLobby()

Disassembly:
	0x01E4C1F4 LDR X8, [X8 + 0x60]
	0x01E4C1F8 ADRP X9, 0x22B0000
	0x01E4C1FC MOVN X10, 0x0
	0x01E4C200 ADD X0, X31, 0x18

ISIL:
	001 Move W8, [X0+144]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 NotImplemented "Instruction CSET not yet implemented."
	004 Return X0

Method: Fusion.Photon.Realtime.TypedLobby get_CurrentLobby()

Disassembly:
	0x01E4C204 LDR X8, [X8]
	0x01E4C208 LDR X9, [X9 + 0x48]

ISIL:
	001 Move X0, [X0+240]
	002 Return X0

Method: System.Void set_CurrentLobby(Fusion.Photon.Realtime.TypedLobby value)

Disassembly:
	0x01E4C20C MOV X1, X31
	0x01E4C210 STR X8, [X20 + 0x20]

ISIL:
	001 Move [X0+240], X1
	002 Return 

Method: Fusion.Photon.Realtime.Player get_LocalPlayer()

Disassembly:
	0x01E4C214 LDR X8, [X9]
	0x01E4C218 LDR W9, [X19 + 0x80]

ISIL:
	001 Move X0, [X0+264]
	002 Return X0

Method: System.Void set_LocalPlayer(Fusion.Photon.Realtime.Player value)

Disassembly:
	0x01E4C21C STP X8, X10, [X31 + 0x18]
	0x01E4C220 STR W9, [X31 + 0x28]

ISIL:
	001 Move [X0+264], X1
	002 Return 

Method: System.String get_NickName()

Disassembly:
	0x01E4C224 BL 0x33B162C
	0x01E4C228 LDR W8, [X20 + 0x18]
	0x01E4C22C CMP W8, 0x1
	0x01E4C230 B.LS 0x1E4C35C
	0x01E4C234 CMP W8, 0x2
	0x01E4C238 STR X0, [X20 + 0x28]
	0x01E4C23C B.EQ 0x1E4C35C

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+264]
	003 Compare X0, 0
	004 JumpIfEqual {9}
	005 Move X1, X31
	006 Move X30, [X31+16]
	007 Call Player.get_NickName, X0
	008 Return X0
	009 Call 0x1C17F20

Method: System.Void set_NickName(System.String value)

Disassembly:
	0x01E4C240 ADRP X8, 0x22B0000
	0x01E4C244 LDR X8, [X8 + 0x58]
	0x01E4C248 LDR X8, [X8]
	0x01E4C24C STR X8, [X20 + 0x30]
	0x01E4C250 LDR X0, [X19 + 0x10]

ISIL:
	001 Move X0, [X0+264]
	002 Compare X0, 0
	003 JumpIfEqual {7}
	004 Move X2, X31
	005 Call Player.set_NickName, X0, X1
	006 Return 
	007 Return 

Method: System.String get_UserId()

Disassembly:
	0x01E4C254 CBZ X0, 0x1E4C360
	0x01E4C258 MOV X1, X31
	0x01E4C25C BL 0x3502274
	0x01E4C260 LDR W8, [X20 + 0x18]
	0x01E4C264 CMP W8, 0x3
	0x01E4C268 B.LS 0x1E4C35C

ISIL:
	001 Move X8, [X0+48]
	002 Compare X8, 0
	003 JumpIfEqual {6}
	004 Move X0, [X8+48]
	005 Return X0
	006 Move X0, X31
	007 Return X0

Method: System.Void set_UserId(System.String value)

Disassembly:
	0x01E4C26C CMP W8, 0x4
	0x01E4C270 STR X0, [X20 + 0x38]
	0x01E4C274 B.EQ 0x1E4C35C
	0x01E4C278 ADRP X8, 0x22B0000
	0x01E4C27C LDR X8, [X8 + 0x70]
	0x01E4C280 ADRP X9, 0x22AF000
	0x01E4C284 MOVN X10, 0x0
	0x01E4C288 ADD X0, X31, 0x0
	0x01E4C28C LDR X8, [X8]
	0x01E4C290 LDR X9, [X9 + 0xE68]
	0x01E4C294 MOV X1, X31
	0x01E4C298 STR X8, [X20 + 0x40]
	0x01E4C29C LDR X8, [X9]
	0x01E4C2A0 LDR W9, [X19 + 0x90]
	0x01E4C2A4 STP X8, X10, [X31]
	0x01E4C2A8 STR W9, [X31 + 0x10]
	0x01E4C2AC BL 0x33B162C
	0x01E4C2B0 LDR W8, [X20 + 0x18]
	0x01E4C2B4 CMP W8, 0x5
	0x01E4C2B8 B.LS 0x1E4C35C
	0x01E4C2BC STR X0, [X20 + 0x48]
	0x01E4C2C0 MOV X0, X20
	0x01E4C2C4 MOV X1, X31
	0x01E4C2C8 BL 0x32278CC
	0x01E4C2CC LDR X8, [X19]
	0x01E4C2D0 MOV X2, X0
	0x01E4C2D4 MOVZ W1, 0x1
	0x01E4C2D8 MOV X0, X19

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x258D000
	006 Move W8, [X21+4077]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x22AC000
	014 Move X0, [X0+3992]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+4077], W8
	018 Move X21, [X20+48]
	019 Compare X21, 0
	020 JumpIfNotEqual {31}
	021 Move X8, 0x22AC000
	022 Move X8, [X8+3992]
	023 Move X0, [X8]
	024 Call 0x1C17F10
	025 Move X1, X31
	026 Move X21, X0
	027 Call AuthenticationValues..ctor, X0
	028 Move [X20+48], X21
	029 Compare X21, 0
	030 JumpIfEqual {37}
	031 Move [X21+48], X19
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X30, [X31+32]
	035 Move X21, [X31+40]
	036 Return 
	037 Call 0x1C17F20

Method: Fusion.Photon.Realtime.Room get_CurrentRoom()

Disassembly:
	0x01E4C2DC LDR X9, [X8 + 0x218]
	0x01E4C2E0 LDR X3, [X8 + 0x220]

ISIL:
	001 Move X0, [X0+272]
	002 Return X0

Method: System.Void set_CurrentRoom(Fusion.Photon.Realtime.Room value)

Disassembly:
	0x01E4C2E4 BLR X9
	0x01E4C2E8 MOV W0, W31

ISIL:
	001 Move [X0+272], X1
	002 Return 

Method: System.Boolean get_InRoom()

Disassembly:
	0x01E464A0 BLR X9
	0x01E464A4 TBZ X0, 0x0, 0x1E46300
	0x01E464A8 LDR W1, [X19 + 0x90]
	0x01E464AC CMP W1, 0x10
	0x01E464B0 B.EQ 0x1E46580
	0x01E464B4 LDR X8, [X19 + 0x98]
	0x01E464B8 MOVZ W9, 0x10
	0x01E464BC STR W9, [X19 + 0x90]
	0x01E464C0 CBZ X8, 0x1E46580

ISIL:
	001 Move W8, [X0+144]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 Move X8, [X0+272]
	004 NotImplemented "Instruction CMP not yet implemented."
	005 NotImplemented "Instruction CSET not yet implemented."
	006 Return X0
	007 Move W0, W31
	008 Return X0

Method: System.Int32 get_PlayersOnMasterCount()

Disassembly:
	0x01E4C2EC B 0x1E4C348
	0x01E4C2F0 LDR X8, [X19 + 0x10]

ISIL:
	001 Move W0, [X0+280]
	002 Return X0

Method: System.Void set_PlayersOnMasterCount(System.Int32 value)

Disassembly:
	0x01E4C2F4 CBZ X8, 0x1E4C360
	0x01E4C2F8 LDRB W6, [X8 + 0x84]

ISIL:
	001 Move [X0+280], W1
	002 Return 

Method: System.Int32 get_PlayersInRoomsCount()

Disassembly:
	0x01E4C2FC LDR X9, [X8]
	0x01E4C300 LDR W5, [X19 + 0x3C]

ISIL:
	001 Move W0, [X0+284]
	002 Return X0

Method: System.Void set_PlayersInRoomsCount(System.Int32 value)

Disassembly:
	0x01E4C304 LDR X4, [X19 + 0x140]
	0x01E4C308 LDR X3, [X19 + 0x30]

ISIL:
	001 Move [X0+284], W1
	002 Return 

Method: System.Int32 get_RoomsCount()

Disassembly:
	0x01E4C30C LDP X2, X1, [X19 + 0x18]
	0x01E4C310 LDR X10, [X9 + 0x2F8]

ISIL:
	001 Move W0, [X0+288]
	002 Return X0

Method: System.Void set_RoomsCount(System.Int32 value)

Disassembly:
	0x01E4C314 LDR X7, [X9 + 0x300]
	0x01E4C318 MOV X0, X8

ISIL:
	001 Move [X0+288], W1
	002 Return 

Method: System.Boolean get_IsFetchingFriendList()

Disassembly:
	0x01E4C31C BLR X10
	0x01E4C320 B 0x1E4C348
	0x01E4C324 MOV W5, W31
	0x01E4C328 CBZ X0, 0x1E4C360

ISIL:
	001 Move X8, [X0+312]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 NotImplemented "Instruction CSET not yet implemented."
	004 Return X0

Method: System.String get_CloudRegion()

Disassembly:
	0x01E4C32C LDR X8, [X0]
	0x01E4C330 LDP X2, X1, [X19 + 0x18]

ISIL:
	001 Move X0, [X0+320]
	002 Return X0

Method: System.Void set_CloudRegion(System.String value)

Disassembly:
	0x01E4C334 LDR X3, [X19 + 0x30]
	0x01E4C338 LDR X4, [X19 + 0x140]

ISIL:
	001 Move [X0+320], X1
	002 Return 

Method: System.String get_CurrentCluster()

Disassembly:
	0x01E4C33C LDR X9, [X8 + 0x2E8]
	0x01E4C340 LDR X6, [X8 + 0x2F0]

ISIL:
	001 Move X0, [X0+328]
	002 Return X0

Method: System.Void set_CurrentCluster(System.String value)

Disassembly:
	0x01E4C344 BLR X9
	0x01E4C348 LDP X20, X19, [X31 + 0x40]

ISIL:
	001 Move [X0+328], X1
	002 Return 

Method: System.Void .ctor(ExitGames.Client.Photon.ConnectionProtocol protocol = 0)

Disassembly:
	0x01E45238 BL 0x35019FC
	0x01E4523C CBZ X0, 0x1E45330
	0x01E45240 MOV W1, W23
	0x01E45244 MOV X2, X31
	0x01E45248 BL 0x34ED0AC
	0x01E4524C MOV X25, X0
	0x01E45250 CBZ X24, 0x1E45290
	0x01E45254 CBZ X25, 0x1E45330
	0x01E45258 LDR X8, [X25 + 0x10]
	0x01E4525C CBZ X8, 0x1E45298
	0x01E45260 LDR W9, [X8 + 0x18]
	0x01E45264 ADD X8, X8, 0x20
	0x01E45268 CMP W9, 0x0
	0x01E4526C CSEL X0, X31, X8, EQ
	0x01E45270 B 0x1E4529C
	0x01E45274 MOV W20, W31
	0x01E45278 AND W0, W20, 0x1
	0x01E4527C LDP X20, X19, [X31 + 0x30]
	0x01E45280 LDP X22, X21, [X31 + 0x20]
	0x01E45284 LDP X24, X23, [X31 + 0x10]
	0x01E45288 LDP X30, X25, [X31], #0x40
	0x01E4528C RET
	0x01E45290 CBNZ X25, 0x1E452AC
	0x01E45294 B 0x1E45330
	0x01E45298 MOV X0, X31
	0x01E4529C MOV X1, X24
	0x01E452A0 MOV W2, W23
	0x01E452A4 MOV X3, X31
	0x01E452A8 BL 0x1E35764
	0x01E452AC STR W23, [X25 + 0x1C]
	0x01E452B0 LDR X3, [X19 + 0x1A8]
	0x01E452B4 CBZ X3, 0x1E45330
	0x01E452B8 LDR X8, [X3 + 0x18]
	0x01E452BC CBZ X8, 0x1E45330
	0x01E452C0 LDR W9, [X8 + 0x18]
	0x01E452C4 CBZ W9, 0x1E45334
	0x01E452C8 STR W22, [X8 + 0x20]
	0x01E452CC LDR X10, [X19]
	0x01E452D0 ADD X8, X19, 0x1B8
	0x01E452D4 ADD X9, X19, 0x1B0
	0x01E452D8 ANDS W31, W21, 0x1
	0x01E452DC CSEL X8, X8, X9, NE
	0x01E452E0 LDR X4, [X8]
	0x01E452E4 LDP X8, X5, [X10 + 0x1D8]
	0x01E452E8 MOV X0, X19
	0x01E452EC MOV W1, W20
	0x01E452F0 MOV X2, X25
	0x01E452F4 BLR X8
	0x01E452F8 LDR X8, [X19 + 0x10]
	0x01E452FC CBZ X8, 0x1E45330
	0x01E45300 LDR X9, [X8]
	0x01E45304 MOV W20, W0
	0x01E45308 MOV X0, X8
	0x01E4530C LDP X10, X1, [X9 + 0x1F8]
	0x01E45310 BLR X10
	0x01E45314 TBZ X0, 0x0, 0x1E45278
	0x01E45318 LDR X0, [X19 + 0x10]
	0x01E4531C CBZ X0, 0x1E45330
	0x01E45320 LDR X8, [X0]
	0x01E45324 LDP X9, X1, [X8 + 0x1F8]
	0x01E45328 BLR X9
	0x01E4532C B 0x1E45278
	0x01E45330 BL 0x1C16F20
	0x01E45334 BL 0x1C16F28
	0x01E45338 STP X30, X19, [X31 - 0x10]!
	0x01E4533C MOV X19, X0
	0x01E45340 BL 0x1E4546C
	0x01E45344 TBZ X0, 0x0, 0x1E45364
	0x01E45348 LDR W8, [X19 + 0x90]
	0x01E4534C CMP W8, 0x9
	0x01E45350 B.NE 0x1E45364
	0x01E45354 LDR X8, [X19 + 0x110]
	0x01E45358 CMP X8, 0x0
	0x01E4535C CSET W0, NE
	0x01E45360 B 0x1E45368
	0x01E45364 MOV W0, W31
	0x01E45368 LDP X30, X19, [X31], #0x10
	0x01E4536C RET
	0x01E45370 STR X30, [X31 - 0x30]!
	0x01E45374 STP X22, X21, [X31 + 0x10]
	0x01E45378 STP X20, X19, [X31 + 0x20]
	0x01E4537C ADRP X22, 0x2593000
	0x01E45380 LDRB W8, [X22 + 0xFB9]
	0x01E45384 MOV X21, X3
	0x01E45388 MOV X20, X2
	0x01E4538C MOV X19, X1
	0x01E45390 TBNZ X8, 0x0, 0x1E453C0
	0x01E45394 ADRP X0, 0x22B6000
	0x01E45398 LDR X0, [X0 + 0xC90]
	0x01E4539C BL 0x1C16CF4
	0x01E453A0 ADRP X0, 0x22B6000
	0x01E453A4 LDR X0, [X0 + 0xC98]
	0x01E453A8 BL 0x1C16CF4
	0x01E453AC ADRP X0, 0x22B6000
	0x01E453B0 LDR X0, [X0 + 0xCA0]
	0x01E453B4 BL 0x1C16CF4
	0x01E453B8 MOVZ W8, 0x1
	0x01E453BC STRB W8, [X22 + 0xFB9]
	0x01E453C0 CBZ X19, 0x1E453F8
	0x01E453C4 ADRP X8, 0x22B6000
	0x01E453C8 LDR X8, [X8 + 0xC98]
	0x01E453CC LDR X9, [X19]
	0x01E453D0 LDR X8, [X8]
	0x01E453D4 LDRB W11, [X9 + 0x130]
	0x01E453D8 LDRB W10, [X8 + 0x130]
	0x01E453DC CMP W11, W10
	0x01E453E0 B.CC 0x1E453F8
	0x01E453E4 LDR X9, [X9 + 0xC8]
	0x01E453E8 ADD X9, X9, X10, 0x3, LSL
	0x01E453EC LDUR X9, [X9 - 0x8]
	0x01E453F0 CMP X9, X8
	0x01E453F4 B.EQ 0x1E45410
	0x01E453F8 MOVN W8, 0x0
	0x01E453FC STR W8, [X21]
	0x01E45400 LDP X20, X19, [X31 + 0x20]
	0x01E45404 LDP X22, X21, [X31 + 0x10]
	0x01E45408 LDR X30, [X31], #0x30
	0x01E4540C RET
	0x01E45410 ADRP X8, 0x22B6000
	0x01E45414 LDR W3, [X19 + 0x1C]
	0x01E45418 LDR W2, [X21]
	0x01E4541C LDR X8, [X8 + 0xCA0]
	0x01E45420 CMP W3, W2
	0x01E45424 LDR X1, [X8]
	0x01E45428 ADRP X8, 0x22B6000
	0x01E4542C LDR X8, [X8 + 0xC90]
	0x01E45430 CSET W0, LE
	0x01E45434 LDR X4, [X8]
	0x01E45438 BL 0x2181E54
	0x01E4543C LDR W2, [X19 + 0x1C]
	0x01E45440 MOV X1, X20
	0x01E45444 MOV X3, X31
	0x01E45448 STR W2, [X21]
	0x01E4544C LDR X0, [X19 + 0x10]
	0x01E45450 BL 0x33A0C7C
	0x01E45454 MOV X0, X19
	0x01E45458 LDP X20, X19, [X31 + 0x20]
	0x01E4545C LDP X22, X21, [X31 + 0x10]
	0x01E45460 MOV X1, X31
	0x01E45464 LDR X30, [X31], #0x30
	0x01E45468 B 0x34EC900
	0x01E4546C LDR X8, [X0 + 0x10]
	0x01E45470 CBZ X8, 0x1E45494
	0x01E45474 LDR W9, [X0 + 0x90]
	0x01E45478 CMP W9, 0x12
	0x01E4547C B.HI 0x1E45494
	0x01E45480 MOVZ W8, 0x829C
	0x01E45484 MOVK W8, 0x20000
	0x01E45488 LSRV W8, W8, W9
	0x01E4548C AND W0, W8, 0x1
	0x01E45490 RET
	0x01E45494 CMP X8, 0x0
	0x01E45498 CSET W0, NE
	0x01E4549C RET
	0x01E454A0 LDR W8, [X0 + 0x90]
	0x01E454A4 CMP W8, 0x9
	0x01E454A8 B.NE 0x1E454BC
	0x01E454AC LDR X8, [X0 + 0x110]
	0x01E454B0 CMP X8, 0x0
	0x01E454B4 CSET W0, NE
	0x01E454B8 RET
	0x01E454BC MOV W0, W31
	0x01E454C0 RET
	0x01E454C4 LDR W8, [X0 + 0x3C]
	0x01E454C8 CMP W8, 0x0
	0x01E454CC CSET W0, NE
	0x01E454D0 RET
	0x01E454D4 STR X30, [X31 - 0x30]!
	0x01E454D8 STP X22, X21, [X31 + 0x10]
	0x01E454DC STP X20, X19, [X31 + 0x20]
	0x01E454E0 ADRP X21, 0x2593000
	0x01E454E4 LDRB W8, [X21 + 0xFBA]
	0x01E454E8 MOV X19, X1
	0x01E454EC MOV X20, X0
	0x01E454F0 TBNZ X8, 0x0, 0x1E45508
	0x01E454F4 ADRP X0, 0x22AF000
	0x01E454F8 LDR X0, [X0 + 0xE70]
	0x01E454FC BL 0x1C16CF4
	0x01E45500 MOVZ W8, 0x1
	0x01E45504 STRB W8, [X21 + 0xFBA]
	0x01E45508 ADRP X22, 0x22AF000
	0x01E4550C LDR X21, [X20 + 0x190]
	0x01E45510 LDR X22, [X22 + 0xE70]
	0x01E45514 ADD X20, X20, 0x190
	0x01E45518 MOV X0, X21
	0x01E4551C MOV X1, X19
	0x01E45520 MOV X2, X31
	0x01E45524 BL 0x33C0DE4
	0x01E45528 MOV X8, X0
	0x01E4552C CBZ X0, 0x1E45540
	0x01E45530 LDR X1, [X22]
	0x01E45534 LDR X9, [X8]
	0x01E45538 CMP X9, X1
	0x01E4553C B.NE 0x1E4556C
	0x01E45540 MOV X0, X20
	0x01E45544 MOV X1, X8
	0x01E45548 MOV X2, X21
	0x01E4554C BL 0x1C24138
	0x01E45550 CMP X21, X0
	0x01E45554 MOV X21, X0
	0x01E45558 B.NE 0x1E45518
	0x01E4555C LDP X20, X19, [X31 + 0x20]
	0x01E45560 LDP X22, X21, [X31 + 0x10]
	0x01E45564 LDR X30, [X31], #0x30
	0x01E45568 RET
	0x01E4556C MOV X0, X8
	0x01E45570 BL 0x1C171E0
	0x01E45574 STR X30, [X31 - 0x30]!
	0x01E45578 STP X22, X21, [X31 + 0x10]
	0x01E4557C STP X20, X19, [X31 + 0x20]
	0x01E45580 ADRP X21, 0x2593000
	0x01E45584 LDRB W8, [X21 + 0xFBB]
	0x01E45588 MOV X19, X1
	0x01E4558C MOV X20, X0
	0x01E45590 TBNZ X8, 0x0, 0x1E455A8
	0x01E45594 ADRP X0, 0x22AF000
	0x01E45598 LDR X0, [X0 + 0xE70]
	0x01E4559C BL 0x1C16CF4
	0x01E455A0 MOVZ W8, 0x1
	0x01E455A4 STRB W8, [X21 + 0xFBB]
	0x01E455A8 ADRP X22, 0x22AF000
	0x01E455AC LDR X21, [X20 + 0x190]
	0x01E455B0 LDR X22, [X22 + 0xE70]
	0x01E455B4 ADD X20, X20, 0x190
	0x01E455B8 MOV X0, X21
	0x01E455BC MOV X1, X19
	0x01E455C0 MOV X2, X31
	0x01E455C4 BL 0x33C0FDC
	0x01E455C8 MOV X8, X0
	0x01E455CC CBZ X0, 0x1E455E0
	0x01E455D0 LDR X1, [X22]
	0x01E455D4 LDR X9, [X8]
	0x01E455D8 CMP X9, X1
	0x01E455DC B.NE 0x1E4560C
	0x01E455E0 MOV X0, X20
	0x01E455E4 MOV X1, X8
	0x01E455E8 MOV X2, X21
	0x01E455EC BL 0x1C24138
	0x01E455F0 CMP X21, X0
	0x01E455F4 MOV X21, X0
	0x01E455F8 B.NE 0x1E455B8
	0x01E455FC LDP X20, X19, [X31 + 0x20]
	0x01E45600 LDP X22, X21, [X31 + 0x10]
	0x01E45604 LDR X30, [X31], #0x30
	0x01E45608 RET
	0x01E4560C MOV X0, X8
	0x01E45610 BL 0x1C171E0
	0x01E45614 LDRB W0, [X0 + 0x198]
	0x01E45618 RET
	0x01E4561C AND W8, W1, 0x1
	0x01E45620 STRB W8, [X0 + 0x198]
	0x01E45624 RET
	0x01E45628 STR X30, [X31 - 0x40]!
	0x01E4562C STP X24, X23, [X31 + 0x10]
	0x01E45630 STP X22, X21, [X31 + 0x20]
	0x01E45634 STP X20, X19, [X31 + 0x30]
	0x01E45638 ADRP X21, 0x2593000
	0x01E4563C LDRB W8, [X21 + 0xFBC]
	0x01E45640 MOV X19, X1
	0x01E45644 MOV X20, X0
	0x01E45648 TBNZ X8, 0x0, 0x1E45660
	0x01E4564C ADRP X0, 0x22B6000
	0x01E45650 LDR X0, [X0 + 0xCA8]
	0x01E45654 BL 0x1C16CF4
	0x01E45658 MOVZ W8, 0x1
	0x01E4565C STRB W8, [X21 + 0xFBC]
	0x01E45660 ADRP X24, 0x22B6000
	0x01E45664 LDR X21, [X20 + 0x1A0]
	0x01E45668 LDR X24, [X24 + 0xCA8]
	0x01E4566C ADD X20, X20, 0x1A0
	0x01E45670 MOV X0, X21
	0x01E45674 MOV X1, X19
	0x01E45678 MOV X2, X31
	0x01E4567C BL 0x33C0DE4
	0x01E45680 CBZ X0, 0x1E456A0
	0x01E45684 LDR X23, [X24]
	0x01E45688 MOV X22, X0
	0x01E4568C MOV X1, X23
	0x01E45690 BL 0x1C16E00

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X29, 0x2594000
	014 Move X28, 0x22B7000
	015 Move X27, 0x22B7000
	016 Move X21, 0x22B7000
	017 Move X26, 0x22B7000
	018 Move X25, 0x22B7000
	019 Move X24, 0x22B7000
	020 Move X23, 0x22B7000
	021 Move X22, 0x22B7000
	022 Move X28, [X28+2928]
	023 Move X27, [X27+2936]
	024 Move X21, [X21+2944]
	025 Move X26, [X26+2952]
	026 Move X25, [X25+2960]
	027 Move X24, [X24+2968]
	028 Move X23, [X23+2976]
	029 Move X22, [X22+2984]
	030 Move W8, [X29+4078]
	031 Move W20, W1
	032 Move X19, X0
	033 Move TEMP, X8
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfEqual {99}
	037 Move X0, 0x22B7000
	038 Move X0, [X0+2992]
	039 Call 0x1C17CF4
	040 Move X0, 0x22B7000
	041 Move X0, [X0+2984]
	042 Call 0x1C17CF4
	043 Move X0, 0x22B7000
	044 Move X0, [X0+3000]
	045 Call 0x1C17CF4
	046 Move X0, 0x22B7000
	047 Move X0, [X0+3008]
	048 Call 0x1C17CF4
	049 Move X0, 0x22B7000
	050 Move X0, [X0+2976]
	051 Call 0x1C17CF4
	052 Move X0, 0x22B7000
	053 Move X0, [X0+2968]
	054 Call 0x1C17CF4
	055 Move X0, 0x22B7000
	056 Move X0, [X0+3016]
	057 Call 0x1C17CF4
	058 Move X0, 0x22B7000
	059 Move X0, [X0+3024]
	060 Call 0x1C17CF4
	061 Move X0, 0x22B7000
	062 Move X0, [X0+2944]
	063 Call 0x1C17CF4
	064 Move X0, 0x22B7000
	065 Move X0, [X0+2936]
	066 Call 0x1C17CF4
	067 Move X0, 0x22B7000
	068 Move X0, [X0+3032]
	069 Call 0x1C17CF4
	070 Move X0, 0x22B7000
	071 Move X0, [X0+3040]
	072 Call 0x1C17CF4
	073 Move X0, 0x22B7000
	074 Move X0, [X0+3048]
	075 Call 0x1C17CF4
	076 Move X0, 0x22B7000
	077 Move X0, [X0+3056]
	078 Call 0x1C17CF4
	079 Move X0, 0x22B7000
	080 Move X0, [X0+2960]
	081 Call 0x1C17CF4
	082 Move X0, 0x22B7000
	083 Move X0, [X0+2952]
	084 Call 0x1C17CF4
	085 Move X0, 0x22B1000
	086 Move X0, [X0+632]
	087 Call 0x1C17CF4
	088 Move X0, 0x22B7000
	089 Move X0, [X0+3064]
	090 Call 0x1C17CF4
	091 Move X0, 0x22B7000
	092 Move X0, [X0+2928]
	093 Call 0x1C17CF4
	094 Move X0, 0x22B7000
	095 Move X0, [X0+3072]
	096 Call 0x1C17CF4
	097 Move W8, 1
	098 Move [X29+4078], W8
	099 Move [X19+56], X31
	100 Move X8, [X28]
	101 Move [X19+144], W31
	102 Move [X19+88], X8
	103 Move X0, [X27]
	104 Call 0x1C17F10
	105 Move X1, [X21]
	106 Move X21, X0
	107 Call List`1<Object>..ctor, X0
	108 Move W8, 1
	109 Move [X19+256], X21
	110 Move [X19+360], W8
	111 Move X0, [X26]
	112 Call 0x1C17F10
	113 Move X1, [X25]
	114 Move X21, X0
	115 Call Queue`1<Object>..ctor, X0
	116 Move [X19+368], X21
	117 Move X0, [X24]
	118 Call 0x1C17F10
	119 Move X1, [X23]
	120 Move X21, X0
	121 Call HashSet`1<Object>..ctor, X0
	122 Move X0, X19
	123 Move X1, X31
	124 Move [X19+376], X21
	125 Call Object..ctor, X0
	126 Move X0, [X22]
	127 Call 0x1C17F10
	128 Move X1, X19
	129 Move X21, X0
	130 Call ConnectionCallbacksContainer..ctor, X0, X1
	131 Move [X19+176], X21
	132 Move X8, 0x22B7000
	133 Move X8, [X8+3056]
	134 Move X0, [X8]
	135 Call 0x1C17F10
	136 Move X1, X19
	137 Move X21, X0
	138 Call MatchMakingCallbacksContainer..ctor, X0, X1
	139 Move [X19+184], X21
	140 Move X8, 0x22B7000
	141 Move X8, [X8+3024]
	142 Move X0, [X8]
	143 Call 0x1C17F10
	144 Move X1, X19
	145 Move X21, X0
	146 Call InRoomCallbacksContainer..ctor, X0, X1
	147 Move [X19+192], X21
	148 Move X8, 0x22B7000
	149 Move X8, [X8+3048]
	150 Move X0, [X8]
	151 Call 0x1C17F10
	152 Move X1, X19
	153 Move X21, X0
	154 Call LobbyCallbacksContainer..ctor, X0, X1
	155 Move [X19+200], X21
	156 Move X8, 0x22B7000
	157 Move X8, [X8+3064]
	158 Move X0, [X8]
	159 Call 0x1C17F10
	160 Move X1, X19
	161 Move X21, X0
	162 Call WebRpcCallbacksContainer..ctor, X0, X1
	163 Move [X19+208], X21
	164 Move X8, 0x22B7000
	165 Move X8, [X8+3008]
	166 Move X0, [X8]
	167 Call 0x1C17F10
	168 Move X1, X19
	169 Move X21, X0
	170 Call ErrorInfoCallbacksContainer..ctor, X0, X1
	171 Move [X19+216], X21
	172 Move X8, 0x22B7000
	173 Move X8, [X8+3040]
	174 Move X0, [X8]
	175 Call 0x1C17F10
	176 Move X1, X19
	177 Move W2, W20
	178 Move X3, X31
	179 Move X21, X0
	180 Call LoadBalancingPeer..ctor, X0, X1, X2
	181 Move [X19+16], X21
	182 Move X8, 0x22B7000
	183 Move X8, [X8+2992]
	184 Move X0, [X8]
	185 Call 0x1C17F10
	186 Move X8, 0x22B7000
	187 Move X8, [X8+3032]
	188 Move X1, X19
	189 Move X3, X31
	190 Move X20, X0
	191 Move X2, [X8]
	192 Call Action`1<Object>..ctor, X0, X1, X2
	193 Compare X21, 0
	194 JumpIfEqual {312}
	195 Move X0, X21
	196 Move X1, X20
	197 Move X2, X31
	198 Call PhotonPeer.add_OnDisconnectMessage, X0, X1
	199 Move X8, [X19+16]
	200 Compare X8, 0
	201 JumpIfEqual {312}
	202 Move X9, 0x22B1000
	203 Move X9, [X9+632]
	204 Move W10, 1
	205 Move [X8+40], W10
	206 Move X20, 0x22B7000
	207 Move X8, [X9]
	208 Move X9, [X19]
	209 Move TEMP, 0
	210 Not TEMP
	211 Move W2, TEMP
	212 Move W3, 1
	213 Move X8, [X8+184]
	214 Move X0, X19
	215 Move X4, X31
	216 Move X1, [X8]
	217 Move X8, [X9+504]
	218 Move X5, [X9+512]
	219 Move X20, [X20+3000]
	220 NotImplemented "Instruction BLR not yet implemented."
	221 Move [X19+264], X0
	222 Move X0, [X20]
	223 Move W8, [X0+224]
	224 Compare W8, 0
	225 JumpIfNotEqual {227}
	226 Call 0x1C17DFC
	227 Call CustomTypesUnity.Register
	228 Move X0, X31
	229 Call RuntimeUnityFlagsSetup.get_IsUNITY_WEBGL
	230 Move TEMP, X0
	231 And TEMP, TEMP, 1
	232 Compare TEMP, 1
	233 JumpIfNotEqual {275}
	234 Move X8, [X19+16]
	235 Compare X8, 0
	236 JumpIfEqual {312}
	237 Move W9, [X8+132]
	238 NotImplemented "Instruction CMP not yet implemented."
	239 Move X20, [X8+72]
	240 Compare X20, 0
	241 JumpIfEqual {312}
	242 Move X9, 0x22B7000
	243 Move X8, [X20]
	244 Move X9, [X9+3016]
	245 Move X10, 0x22B7000
	246 Move X1, [X9]
	247 Move X10, [X10+3072]
	248 NotImplemented "Instruction LDRH not yet implemented."
	249 Move X21, [X10]
	250 Compare X9, 0
	251 JumpIfEqual {258}
	252 Move X10, [X8+176]
	253 Add X10, X10, 8
	254 NotImplemented "Instruction LDUR not yet implemented."
	255 NotImplemented "Instruction CMP not yet implemented."
	256 Subtract X9, X9, 1
	257 Add X10, X10, 16
	258 Move X0, X20
	259 Move W2, W31
	260 Call 0x1C5D788
	261 NotImplemented "Instruction LDRSW not yet implemented."
	262 Add X8, X8, X9
	263 Add X0, X8, 312
	264 Move X8, [X0]
	265 Move X3, [X0+8]
	266 Move W1, 2
	267 Move X0, X20
	268 Move X2, X21
	269 NotImplemented "Instruction BLR not yet implemented."
	270 Move X8, [X19+16]
	271 Compare X8, 0
	272 JumpIfEqual {312}
	273 Move W9, 5
	274 Move [X8+132], W9
	275 Move W1, [X19+144]
	276 Compare W1, 0
	277 JumpIfEqual {299}
	278 Move X8, [X19+152]
	279 Move [X19+144], W31
	280 Compare X8, 0
	281 JumpIfEqual {299}
	282 Move X4, [X8+24]
	283 Move X0, [X8+64]
	284 Move X3, [X8+40]
	285 Move X20, [X31+80]
	286 Move X19, [X31+88]
	287 Move X22, [X31+64]
	288 Move X21, [X31+72]
	289 Move X24, [X31+48]
	290 Move X23, [X31+56]
	291 Move X26, [X31+32]
	292 Move X25, [X31+40]
	293 Move X28, [X31+16]
	294 Move X27, [X31+24]
	295 Move W2, W31
	296 Move X29, [X31+96]
	297 Move X30, [X31+104]
	298 CallNoReturn X4
	299 Move X20, [X31+80]
	300 Move X19, [X31+88]
	301 Move X22, [X31+64]
	302 Move X21, [X31+72]
	303 Move X24, [X31+48]
	304 Move X23, [X31+56]
	305 Move X26, [X31+32]
	306 Move X25, [X31+40]
	307 Move X28, [X31+16]
	308 Move X27, [X31+24]
	309 Move X29, [X31+96]
	310 Move X30, [X31+104]
	311 Return 
	312 Call 0x1C17F20

Method: System.Void .ctor(System.String masterAddress, System.String appId, System.String gameVersion, ExitGames.Client.Photon.ConnectionProtocol protocol = 0)

Disassembly:
	0x01E4C64C LDR X0, [X0 + 0xA0]
	0x01E4C650 BL 0x1C16CF4
	0x01E4C654 ADRP X0, 0x22B0000
	0x01E4C658 LDR X0, [X0 + 0xA8]
	0x01E4C65C BL 0x1C16CF4
	0x01E4C660 MOVZ W8, 0x1
	0x01E4C664 STRB W8, [X20 + 0xFF7]
	0x01E4C668 LDR X0, [X19 + 0x10]
	0x01E4C66C CBZ X0, 0x1E4C7B4
	0x01E4C670 MOV X1, X31
	0x01E4C674 BL 0x3501B48
	0x01E4C678 ANDS W31, W0, 0xFF
	0x01E4C67C B.EQ 0x1E4C6DC
	0x01E4C680 LDR X0, [X19 + 0x10]
	0x01E4C684 CBZ X0, 0x1E4C7B4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, X1
	007 Move W1, W4
	008 Move X19, X3
	009 Move X20, X2
	010 Move X22, X0
	011 Call LoadBalancingClient..ctor, X0, X1
	012 Move [X22+112], X21
	013 Move [X22+24], X19
	014 Move [X22+32], X20
	015 Move X20, [X31+32]
	016 Move X19, [X31+40]
	017 Move X22, [X31+16]
	018 Move X21, [X31+24]
	019 Move X30, [X31+48]
	020 Return 

Method: System.String GetNameServerAddress()

Disassembly:
	0x01E4BC88 LDR X0, [X19 + 0x10]
	0x01E4BC8C CBZ X0, 0x1E4BE18
	0x01E4BC90 ADRP X20, 0x22B0000
	0x01E4BC94 ADRP X21, 0x22B1000
	0x01E4BC98 LDR X20, [X20 + 0xD40]
	0x01E4BC9C LDR X21, [X21 + 0x28]
	0x01E4BCA0 MOV X1, X31
	0x01E4BCA4 BL 0x3501B48
	0x01E4BCA8 LDR X8, [X20]
	0x01E4BCAC MOVN X9, 0x0
	0x01E4BCB0 STRB W0, [X31 + 0x18]
	0x01E4BCB4 ADD X0, X31, 0x8
	0x01E4BCB8 MOV X1, X31
	0x01E4BCBC STP X8, X9, [X31 + 0x8]
	0x01E4BCC0 BL 0x33B162C
	0x01E4BCC4 LDR X8, [X21]
	0x01E4BCC8 MOV X1, X0
	0x01E4BCCC MOV X2, X31
	0x01E4BCD0 MOV X0, X8
	0x01E4BCD4 BL 0x321B938
	0x01E4BCD8 LDR X8, [X19]
	0x01E4BCDC MOV X2, X0
	0x01E4BCE0 MOVZ W1, 0x2
	0x01E4BCE4 MOV X0, X19
	0x01E4BCE8 LDR X9, [X8 + 0x218]
	0x01E4BCEC LDR X3, [X8 + 0x220]
	0x01E4BCF0 BLR X9
	0x01E4BCF4 B 0x1E4BE04
	0x01E4BCF8 MOVZ W8, 0x1
	0x01E4BCFC MOV X0, X19
	0x01E4BD00 STRB W8, [X19 + 0x50]
	0x01E4BD04 STR X31, [X19 + 0x140]
	0x01E4BD08 BL 0x1E4B980
	0x01E4BD0C LDR W8, [X19 + 0x38]
	0x01E4BD10 CMP W8, 0x2
	0x01E4BD14 B.NE 0x1E4BD60
	0x01E4BD18 LDRB W8, [X19 + 0x40]
	0x01E4BD1C CBNZ W8, 0x1E4BD4C
	0x01E4BD20 LDR X8, [X19 + 0x10]
	0x01E4BD24 CBZ X8, 0x1E4BE18
	0x01E4BD28 LDRB W1, [X8 + 0x84]
	0x01E4BD2C ADRP X8, 0x22B0000
	0x01E4BD30 LDR X8, [X8 + 0xD38]
	0x01E4BD34 ADD X0, X31, 0x8
	0x01E4BD38 STRH W31, [X31 + 0x8]
	0x01E4BD3C LDR X2, [X8]
	0x01E4BD40 BL 0x242DF98
	0x01E4BD44 LDRH W8, [X31 + 0x8]
	0x01E4BD48 STRH W8, [X19 + 0x40]
	0x01E4BD4C LDR X20, [X19 + 0x10]
	0x01E4BD50 CBZ X20, 0x1E4BE18
	0x01E4BD54 MOVZ W8, 0x5
	0x01E4BD58 STRB W8, [X20 + 0x84]
	0x01E4BD5C B 0x1E4BD64
	0x01E4BD60 LDR X20, [X19 + 0x10]
	0x01E4BD64 MOV X0, X19
	0x01E4BD68 STR W31, [X19 + 0xE0]
	0x01E4BD6C STR X31, [X19 + 0xE8]
	0x01E4BD70 BL 0x1E4AC88
	0x01E4BD74 LDR W8, [X19 + 0x38]
	0x01E4BD78 MOV X1, X0
	0x01E4BD7C CBZ W8, 0x1E4BD90
	0x01E4BD80 LDR X8, [X19 + 0x30]
	0x01E4BD84 CBZ X8, 0x1E4BD90
	0x01E4BD88 LDR X4, [X8 + 0x28]
	0x01E4BD8C B 0x1E4BD94
	0x01E4BD90 MOV X4, X31
	0x01E4BD94 CBZ X20, 0x1E4BE18
	0x01E4BD98 ADRP X9, 0x22B1000
	0x01E4BD9C LDR X8, [X20]
	0x01E4BDA0 LDR X2, [X19 + 0x88]
	0x01E4BDA4 LDR X9, [X9 + 0x20]
	0x01E4BDA8 MOV X0, X20
	0x01E4BDAC MOV X5, X31
	0x01E4BDB0 LDR X3, [X9]
	0x01E4BDB4 LDP X9, X6, [X8 + 0x1A8]
	0x01E4BDB8 BLR X9
	0x01E4BDBC TBZ X0, 0x0, 0x1E4BE04
	0x01E4BDC0 LDR W1, [X19 + 0x90]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x258E000
	007 Move X20, 0x22B1000
	008 Move W8, [X21+4079]
	009 Move X20, [X20+2856]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {29}
	015 Move X0, 0x22B1000
	016 Move X0, [X0+3928]
	017 Call 0x1C17CF4
	018 Move X0, 0x22A9000
	019 Move X0, [X0+1880]
	020 Call 0x1C17CF4
	021 Move X0, 0x22B1000
	022 Move X0, [X0+2856]
	023 Call 0x1C17CF4
	024 Move X0, 0x22B1000
	025 Move X0, [X0+3936]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X21+4079], W8
	029 Move X0, [X20]
	030 Move [X31+12], W31
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {36}
	034 Call 0x1C17DFC
	035 Move X0, [X20]
	036 Move X8, [X19+16]
	037 Compare X8, 0
	038 JumpIfEqual {92}
	039 Move X9, [X0+184]
	040 Move X0, [X9]
	041 Compare X0, 0
	042 JumpIfEqual {92}
	043 Move X9, 0x22B1000
	044 Move X9, [X9+3928]
	045 Move W1, [X8+132]
	046 Add X2, X31, 12
	047 Move X3, [X9]
	048 Call Dictionary`2<ByteEnum, Int32>.TryGetValue, X0, X1, X2
	049 Move W8, [X19+384]
	050 Compare W8, 0
	051 JumpIfEqual {74}
	052 Move X9, 0x22A9000
	053 Move X9, [X9+1880]
	054 Move X20, 0x22B1000
	055 Add X1, X31, 8
	056 Move X0, [X9]
	057 Move X20, [X20+3936]
	058 Move [X31+8], W8
	059 Call 0x1C17E04
	060 Move X8, [X20]
	061 Move X1, X0
	062 Move X2, X31
	063 Move X0, X8
	064 Call String.Format, X0, X1
	065 Move X8, [X19]
	066 Move X2, X0
	067 Move W1, 3
	068 Move X0, X19
	069 Move X9, [X8+536]
	070 Move X3, [X8+544]
	071 NotImplemented "Instruction BLR not yet implemented."
	072 Move W8, [X19+384]
	073 Move [X31+12], W8
	074 NotImplemented "Instruction LDRH not yet implemented."
	075 Compare W8, 0
	076 JumpIfEqual {78}
	077 Move [X31+12], W8
	078 Move X8, [X19+16]
	079 Compare X8, 0
	080 JumpIfEqual {92}
	081 Move W2, [X31+12]
	082 Move X1, [X19+88]
	083 Move W3, [X8+132]
	084 Move X0, X19
	085 Call LoadBalancingClient.ToProtocolAddress, X0, X1, X2, X3
	086 Move X20, [X31+32]
	087 Move X19, [X31+40]
	088 Move X30, [X31+16]
	089 Move X21, [X31+24]
	090 Add X31, X31, 48
	091 Return X0
	092 Call 0x1C17F20

Method: System.String ToProtocolAddress(System.String address, System.Int32 port, ExitGames.Client.Photon.ConnectionProtocol protocol)

Disassembly:
	0x01E4C688 ADRP X20, 0x22AF000
	0x01E4C68C ADRP X21, 0x22B0000
	0x01E4C690 LDR X20, [X20 + 0xD40]
	0x01E4C694 LDR X21, [X21 + 0xA8]
	0x01E4C698 MOV X1, X31
	0x01E4C69C BL 0x3501B48
	0x01E4C6A0 LDR X8, [X20]
	0x01E4C6A4 MOVN X9, 0x0
	0x01E4C6A8 STRB W0, [X31 + 0x18]
	0x01E4C6AC ADD X0, X31, 0x8
	0x01E4C6B0 MOV X1, X31
	0x01E4C6B4 STP X8, X9, [X31 + 0x8]
	0x01E4C6B8 BL 0x33B162C
	0x01E4C6BC LDR X8, [X21]
	0x01E4C6C0 MOV X1, X0
	0x01E4C6C4 MOV X2, X31
	0x01E4C6C8 MOV X0, X8
	0x01E4C6CC BL 0x321B938
	0x01E4C6D0 LDR X8, [X19]
	0x01E4C6D4 MOV X2, X0
	0x01E4C6D8 B 0x1E4C78C
	0x01E4C6DC LDR X0, [X19 + 0x70]
	0x01E4C6E0 MOV X1, X31
	0x01E4C6E4 BL 0x32277A8
	0x01E4C6E8 TBZ X0, 0x0, 0x1E4C6FC
	0x01E4C6EC ADRP X9, 0x22B0000
	0x01E4C6F0 LDR X8, [X19]
	0x01E4C6F4 LDR X9, [X9 + 0xA0]
	0x01E4C6F8 B 0x1E4C788
	0x01E4C6FC LDR X8, [X19 + 0x48]
	0x01E4C700 CBZ X8, 0x1E4C77C
	0x01E4C704 LDR X20, [X19 + 0x30]
	0x01E4C708 CBNZ X20, 0x1E4C754
	0x01E4C70C ADRP X9, 0x22B0000
	0x01E4C710 LDR X8, [X19]
	0x01E4C714 LDR X9, [X9 + 0x90]
	0x01E4C718 MOVZ W1, 0x2
	0x01E4C71C MOV X0, X19
	0x01E4C720 LDR X3, [X8 + 0x220]
	0x01E4C724 LDR X2, [X9]
	0x01E4C728 LDR X9, [X8 + 0x218]
	0x01E4C72C BLR X9
	0x01E4C730 ADRP X8, 0x22AB000
	0x01E4C734 LDR X8, [X8 + 0xF98]
	0x01E4C738 LDR X0, [X8]
	0x01E4C73C BL 0x1C16F10
	0x01E4C740 MOV X1, X31
	0x01E4C744 MOV X20, X0
	0x01E4C748 BL 0x1E59820
	0x01E4C74C STR X20, [X19 + 0x30]
	0x01E4C750 CBZ X20, 0x1E4C7B4
	0x01E4C754 LDR X8, [X19 + 0x48]
	0x01E4C758 MOV X0, X19
	0x01E4C75C LDP X30, X21, [X31 + 0x20]
	0x01E4C760 MOV W3, W31
	0x01E4C764 STR X8, [X20 + 0x28]
	0x01E4C768 LDR X1, [X19 + 0x70]
	0x01E4C76C LDR X2, [X19 + 0x88]
	0x01E4C770 LDP X20, X19, [X31 + 0x30]
	0x01E4C774 ADD X31, X31, 0x40
	0x01E4C778 B 0x1E4C364
	0x01E4C77C ADRP X9, 0x22B0000
	0x01E4C780 LDR X8, [X19]
	0x01E4C784 LDR X9, [X9 + 0x98]
	0x01E4C788 LDR X2, [X9]
	0x01E4C78C LDR X9, [X8 + 0x218]
	0x01E4C790 LDR X3, [X8 + 0x220]
	0x01E4C794 MOVZ W1, 0x2
	0x01E4C798 MOV X0, X19
	0x01E4C79C BLR X9
	0x01E4C7A0 LDP X20, X19, [X31 + 0x30]
	0x01E4C7A4 LDP X30, X21, [X31 + 0x20]
	0x01E4C7A8 MOV W0, W31
	0x01E4C7AC ADD X31, X31, 0x40
	0x01E4C7B0 RET
	0x01E4C7B4 BL 0x1C16F20
	0x01E4C7B8 SUB X31, X31, 0x40
	0x01E4C7BC STP X30, X21, [X31 + 0x20]
	0x01E4C7C0 STP X20, X19, [X31 + 0x30]
	0x01E4C7C4 ADRP X20, 0x258C000
	0x01E4C7C8 LDRB W8, [X20 + 0xFF8]
	0x01E4C7CC MOV X19, X0
	0x01E4C7D0 TBNZ X8, 0x0, 0x1E4C824
	0x01E4C7D4 ADRP X0, 0x22AB000
	0x01E4C7D8 LDR X0, [X0 + 0xF98]
	0x01E4C7DC BL 0x1C16CF4
	0x01E4C7E0 ADRP X0, 0x22AF000
	0x01E4C7E4 LDR X0, [X0 + 0xD40]
	0x01E4C7E8 BL 0x1C16CF4
	0x01E4C7EC ADRP X0, 0x22B0000
	0x01E4C7F0 LDR X0, [X0 + 0xB0]
	0x01E4C7F4 BL 0x1C16CF4
	0x01E4C7F8 ADRP X0, 0x22B0000
	0x01E4C7FC LDR X0, [X0 + 0xB8]
	0x01E4C800 BL 0x1C16CF4
	0x01E4C804 ADRP X0, 0x22B0000
	0x01E4C808 LDR X0, [X0 + 0xC0]
	0x01E4C80C BL 0x1C16CF4
	0x01E4C810 ADRP X0, 0x22B0000
	0x01E4C814 LDR X0, [X0 + 0xC8]
	0x01E4C818 BL 0x1C16CF4
	0x01E4C81C MOVZ W8, 0x1
	0x01E4C820 STRB W8, [X20 + 0xFF8]
	0x01E4C824 LDR X0, [X19 + 0x10]
	0x01E4C828 CBZ X0, 0x1E4C98C
	0x01E4C82C MOV X1, X31
	0x01E4C830 BL 0x3501B48
	0x01E4C834 ANDS W31, W0, 0xFF
	0x01E4C838 B.EQ 0x1E4C898
	0x01E4C83C LDR X0, [X19 + 0x10]
	0x01E4C840 CBZ X0, 0x1E4C98C
	0x01E4C844 ADRP X20, 0x22AF000
	0x01E4C848 ADRP X21, 0x22B0000
	0x01E4C84C LDR X20, [X20 + 0xD40]
	0x01E4C850 LDR X21, [X21 + 0xB0]
	0x01E4C854 MOV X1, X31
	0x01E4C858 BL 0x3501B48
	0x01E4C85C LDR X8, [X20]
	0x01E4C860 MOVN X9, 0x0
	0x01E4C864 STRB W0, [X31 + 0x18]
	0x01E4C868 ADD X0, X31, 0x8
	0x01E4C86C MOV X1, X31
	0x01E4C870 STP X8, X9, [X31 + 0x8]
	0x01E4C874 BL 0x33B162C
	0x01E4C878 LDR X8, [X21]
	0x01E4C87C MOV X1, X0
	0x01E4C880 MOV X2, X31
	0x01E4C884 MOV X0, X8
	0x01E4C888 BL 0x321B938
	0x01E4C88C LDR X8, [X19]
	0x01E4C890 MOV X2, X0
	0x01E4C894 B 0x1E4C964
	0x01E4C898 LDR X0, [X19 + 0x78]
	0x01E4C89C MOV X1, X31
	0x01E4C8A0 BL 0x32277A8
	0x01E4C8A4 TBZ X0, 0x0, 0x1E4C8B8
	0x01E4C8A8 ADRP X9, 0x22B0000
	0x01E4C8AC LDR X8, [X19]
	0x01E4C8B0 LDR X9, [X9 + 0xC0]
	0x01E4C8B4 B 0x1E4C960
	0x01E4C8B8 LDR X8, [X19 + 0x128]
	0x01E4C8BC CBZ X8, 0x1E4C944
	0x01E4C8C0 LDR X8, [X19 + 0x48]
	0x01E4C8C4 CBZ X8, 0x1E4C954
	0x01E4C8C8 LDR X20, [X19 + 0x30]
	0x01E4C8CC CBNZ X20, 0x1E4C8F4
	0x01E4C8D0 ADRP X8, 0x22AB000
	0x01E4C8D4 LDR X8, [X8 + 0xF98]
	0x01E4C8D8 LDR X0, [X8]
	0x01E4C8DC BL 0x1C16F10
	0x01E4C8E0 MOV X1, X31
	0x01E4C8E4 MOV X20, X0
	0x01E4C8E8 BL 0x1E59820
	0x01E4C8EC STR X20, [X19 + 0x30]
	0x01E4C8F0 CBZ X20, 0x1E4C98C
	0x01E4C8F4 LDR X8, [X19 + 0x48]
	0x01E4C8F8 MOV X1, X31
	0x01E4C8FC STR X8, [X20 + 0x28]
	0x01E4C900 LDR X0, [X19 + 0x78]
	0x01E4C904 BL 0x32277A8
	0x01E4C908 TBNZ X0, 0x0, 0x1E4C978
	0x01E4C90C LDR X8, [X19 + 0x128]
	0x01E4C910 CBZ X8, 0x1E4C978
	0x01E4C914 MOVZ W9, 0x1
	0x01E4C918 MOVZ W10, 0x3
	0x01E4C91C STR W9, [X19 + 0x124]
	0x01E4C920 STRB W10, [X8 + 0x31]
	0x01E4C924 LDR X1, [X19 + 0x78]
	0x01E4C928 LDR X2, [X19 + 0x88]
	0x01E4C92C MOV X0, X19
	0x01E4C930 LDP X20, X19, [X31 + 0x30]
	0x01E4C934 LDP X30, X21, [X31 + 0x20]
	0x01E4C938 MOVZ W3, 0x1
	0x01E4C93C ADD X31, X31, 0x40
	0x01E4C940 B 0x1E4C364
	0x01E4C944 ADRP X9, 0x22B0000
	0x01E4C948 LDR X8, [X19]
	0x01E4C94C LDR X9, [X9 + 0xC8]
	0x01E4C950 B 0x1E4C960
	0x01E4C954 ADRP X9, 0x22B0000
	0x01E4C958 LDR X8, [X19]
	0x01E4C95C LDR X9, [X9 + 0xB8]
	0x01E4C960 LDR X2, [X9]
	0x01E4C964 LDR X9, [X8 + 0x218]
	0x01E4C968 LDR X3, [X8 + 0x220]
	0x01E4C96C MOVZ W1, 0x2
	0x01E4C970 MOV X0, X19
	0x01E4C974 BLR X9
	0x01E4C978 LDP X20, X19, [X31 + 0x30]
	0x01E4C97C LDP X30, X21, [X31 + 0x20]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x258D000
	009 Move W8, [X23+4080]
	010 Move W21, W3
	011 Move W19, W2
	012 Move X20, X1
	013 Move X22, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {44}
	018 Move X0, 0x22A8000
	019 Move X0, [X0+1880]
	020 Call 0x1C17CF4
	021 Move X0, 0x22A8000
	022 Move X0, [X0+2512]
	023 Call 0x1C17CF4
	024 Move X0, 0x22AA000
	025 Move X0, [X0+632]
	026 Call 0x1C17CF4
	027 Move X0, 0x22AA000
	028 Move X0, [X0+2600]
	029 Call 0x1C17CF4
	030 Move X0, 0x22B0000
	031 Move X0, [X0+4056]
	032 Call 0x1C17CF4
	033 Move X0, 0x22B0000
	034 Move X0, [X0+4064]
	035 Call 0x1C17CF4
	036 Move X0, 0x22B0000
	037 Move X0, [X0+4072]
	038 Call 0x1C17CF4
	039 Move X0, 0x22B0000
	040 Move X0, [X0+4080]
	041 Call 0x1C17CF4
	042 Move W8, 1
	043 Move [X23+4080], W8
	044 Move X8, [X22+16]
	045 Compare X8, 0
	046 JumpIfEqual {171}
	047 Move W8, [X8+132]
	048 NotImplemented "Instruction CMP not yet implemented."
	049 NotImplemented "Instruction CMP not yet implemented."
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Move X8, 0x22B0000
	052 Move X8, [X8+4064]
	053 Move X8, 0x22A8000
	054 Move X8, [X8+1880]
	055 Add X1, X31, 12
	056 Move [X31+12], W19
	057 Move X0, [X8]
	058 Call 0x1C17E04
	059 Move X8, 0x22B0000
	060 Move X8, [X8+4080]
	061 Move X2, X0
	062 Move X1, X20
	063 Move X3, X31
	064 Move X8, [X8]
	065 Move X0, X8
	066 Call String.Format, X0, X1, X2
	067 Move X8, 0x22B0000
	068 Move X8, [X8+4056]
	069 Move X0, [X8]
	070 Move X1, X20
	071 Move X2, X31
	072 Call String.Concat, X0, X1
	073 Move X8, 0x22AA000
	074 Move X8, [X8+2600]
	075 Move X20, X0
	076 Move X8, [X8]
	077 Move X0, X8
	078 Call 0x1C17F10
	079 Move X1, X20
	080 Move X2, X31
	081 Move X21, X0
	082 Call Uri..ctor, X0, X1
	083 Move X8, 0x22A8000
	084 Move X8, [X8+2512]
	085 Move W1, 4
	086 Move X0, [X8]
	087 Call 0x1C17D6C
	088 Compare X21, 0
	089 JumpIfEqual {171}
	090 Move X20, X0
	091 Move X0, X21
	092 Move X1, X31
	093 Call Uri.get_Scheme, X0
	094 Compare X20, 0
	095 JumpIfEqual {171}
	096 Move X22, X0
	097 Compare X0, 0
	098 JumpIfEqual {105}
	099 Move X8, [X20]
	100 Move X0, X22
	101 Move X1, [X8+64]
	102 Call 0x1C17E00
	103 Compare X0, 0
	104 JumpIfEqual {173}
	105 Move W8, [X20+24]
	106 Compare W8, 0
	107 JumpIfEqual {172}
	108 Move X0, X21
	109 Move X1, X31
	110 Move [X20+32], X22
	111 Call Uri.get_Host, X0
	112 Move X22, X0
	113 Compare X0, 0
	114 JumpIfEqual {121}
	115 Move X8, [X20]
	116 Move X0, X22
	117 Move X1, [X8+64]
	118 Call 0x1C17E00
	119 Compare X0, 0
	120 JumpIfEqual {173}
	121 Move W8, [X20+24]
	122 NotImplemented "Instruction CMP not yet implemented."
	123 Move [X20+40], X22
	124 Move X8, 0x22A8000
	125 Move X8, [X8+1880]
	126 Add X1, X31, 4
	127 Move [X31+4], W19
	128 Move X0, [X8]
	129 Call 0x1C17E04
	130 Move X19, X0
	131 Compare X0, 0
	132 JumpIfEqual {139}
	133 Move X8, [X20]
	134 Move X0, X19
	135 Move X1, [X8+64]
	136 Call 0x1C17E00
	137 Compare X0, 0
	138 JumpIfEqual {173}
	139 Move W8, [X20+24]
	140 NotImplemented "Instruction CMP not yet implemented."
	141 Move X0, X21
	142 Move X1, X31
	143 Move [X20+48], X19
	144 Call Uri.get_AbsolutePath, X0
	145 Move X19, X0
	146 Compare X0, 0
	147 JumpIfEqual {154}
	148 Move X8, [X20]
	149 Move X0, X19
	150 Move X1, [X8+64]
	151 Call 0x1C17E00
	152 Compare X0, 0
	153 JumpIfEqual {173}
	154 Move W8, [X20+24]
	155 NotImplemented "Instruction CMP not yet implemented."
	156 Move [X20+56], X19
	157 Move X8, 0x22B0000
	158 Move X8, [X8+4072]
	159 Move X1, X20
	160 Move X2, X31
	161 Move X0, [X8]
	162 Call String.Format, X0, X1
	163 Move X20, [X31+48]
	164 Move X19, [X31+56]
	165 Move X22, [X31+32]
	166 Move X21, [X31+40]
	167 Move X30, [X31+16]
	168 Move X23, [X31+24]
	169 Add X31, X31, 64
	170 Return X0
	171 Call 0x1C17F20
	172 Call 0x1C17F28
	173 Call 0x1C17F44
	174 Move X1, X31
	175 Call 0x1C17DEC
	176 Move [X31+8], W21
	177 Move X0, 0x22B0000
	178 Move X0, [X0+3576]
	179 Call 0x1C17D08
	180 Add X1, X31, 8
	181 Call 0x1C17E04
	182 Move X19, X0
	183 Move X0, 0x22B0000
	184 Move X0, [X0+4088]
	185 Call 0x1C17D08
	186 Move X1, X19
	187 Move X2, X31
	188 Call String.Format, X0, X1
	189 Move X19, X0
	190 Move X0, 0x22B0000
	191 Move X0, [X0+1888]
	192 Call 0x1C17D08
	193 Call 0x1C17F10
	194 Move X1, X19
	195 Move X2, X31
	196 Move X20, X0
	197 Call ArgumentOutOfRangeException..ctor, X0, X1
	198 Move X0, 0x22B1000
	199 Move X0, [X0]
	200 Call 0x1C17D08
	201 Move X1, X0
	202 Move X0, X20
	203 Call 0x1C17DEC

Method: System.Boolean ConnectUsingSettings(Fusion.Photon.Realtime.AppSettings appSettings)

Disassembly:
	0x01E47224 MOV X20, X1
	0x01E47228 TBNZ X8, 0x0, 0x1E47240
	0x01E4722C ADRP X0, 0x22B4000
	0x01E47230 LDR X0, [X0 + 0xDE0]
	0x01E47234 BL 0x1C16CF4
	0x01E47238 MOVZ W8, 0x1
	0x01E4723C STRB W8, [X23 + 0xFC3]
	0x01E47240 ADD X1, X31, 0x8
	0x01E47244 ADD X2, X31, 0x0
	0x01E47248 MOV X0, X21
	0x01E4724C STP X31, X31, [X31]
	0x01E47250 BL 0x1E470C4
	0x01E47254 LDR X0, [X22]
	0x01E47258 BL 0x1C16F10
	0x01E4725C MOV X1, X31
	0x01E47260 MOV X21, X0
	0x01E47264 BL 0x1E5932C
	0x01E47268 CBZ X21, 0x1E47294
	0x01E4726C STRB W19, [X21 + 0x1C]
	0x01E47270 STR X20, [X21 + 0x20]
	0x01E47274 LDR X8, [X31 + 0x8]
	0x01E47278 MOV X0, X21
	0x01E4727C LDP X20, X19, [X31 + 0x30]
	0x01E47280 LDP X30, X23, [X31 + 0x10]
	0x01E47284 STR X8, [X21 + 0x10]
	0x01E47288 LDP X22, X21, [X31 + 0x20]
	0x01E4728C ADD X31, X31, 0x40
	0x01E47290 RET
	0x01E47294 BL 0x1C16F20
	0x01E47298 B 0x1E44D64
	0x01E4729C B 0x1E4503C
	0x01E472A0 RET
	0x01E472A4 RET
	0x01E472A8 RET
	0x01E472AC RET
	0x01E472B0 RET
	0x01E472B4 B 0x1E44D64
	0x01E472B8 B 0x1E4503C
	0x01E472BC RET
	0x01E472C0 RET
	0x01E472C4 LDR X8, [X0 + 0x190]
	0x01E472C8 CBZ X8, 0x1E472DC
	0x01E472CC LDR X2, [X8 + 0x18]
	0x01E472D0 LDR X0, [X8 + 0x40]
	0x01E472D4 LDR X1, [X8 + 0x28]
	0x01E472D8 BR X2
	0x01E472DC RET
	0x01E472E0 LDR X8, [X0 + 0x190]
	0x01E472E4 CBZ X8, 0x1E472F8
	0x01E472E8 LDR X2, [X8 + 0x18]
	0x01E472EC LDR X0, [X8 + 0x40]
	0x01E472F0 LDR X1, [X8 + 0x28]
	0x01E472F4 BR X2
	0x01E472F8 RET
	0x01E472FC LDR X8, [X0 + 0x190]
	0x01E47300 CBZ X8, 0x1E47314
	0x01E47304 LDR X2, [X8 + 0x18]
	0x01E47308 LDR X0, [X8 + 0x40]
	0x01E4730C LDR X1, [X8 + 0x28]
	0x01E47310 BR X2
	0x01E47314 RET
	0x01E47318 RET
	0x01E4731C LDR X8, [X0 + 0x190]
	0x01E47320 CBZ X8, 0x1E47334
	0x01E47324 LDR X2, [X8 + 0x18]
	0x01E47328 LDR X0, [X8 + 0x40]
	0x01E4732C LDR X1, [X8 + 0x28]
	0x01E47330 BR X2
	0x01E47334 RET
	0x01E47338 MOV X1, X31
	0x01E4733C B 0x1E6448C
	0x01E47340 MOV X1, X31
	0x01E47344 B 0x1E64B30
	0x01E47348 MOV X1, X31
	0x01E4734C B 0x1E64C7C
	0x01E47350 MOV X1, X31
	0x01E47354 B 0x1E64C7C
	0x01E47358 LDRB W8, [X0 + 0x38]
	0x01E4735C CMP W8, 0x0
	0x01E47360 CSET W0, EQ
	0x01E47364 RET
	0x01E47368 LDRB W8, [X0 + 0x38]
	0x01E4736C CBZ W8, 0x1E4737C
	0x01E47370 LDR X0, [X0 + 0x40]
	0x01E47374 MOV X1, X31
	0x01E47378 B 0x32277A8
	0x01E4737C MOV W0, W31
	0x01E47380 RET
	0x01E47384 LDRB W8, [X0 + 0x38]
	0x01E47388 CBZ W8, 0x1E47398
	0x01E4738C LDR X0, [X0 + 0x50]
	0x01E47390 MOV X1, X31
	0x01E47394 B 0x32277A8
	0x01E47398 MOV W0, W31
	0x01E4739C RET
	0x01E473A0 SUB X31, X31, 0x50
	0x01E473A4 STP X30, X25, [X31 + 0x10]
	0x01E473A8 STP X24, X23, [X31 + 0x20]
	0x01E473AC STP X22, X21, [X31 + 0x30]
	0x01E473B0 STP X20, X19, [X31 + 0x40]
	0x01E473B4 ADRP X22, 0x2591000
	0x01E473B8 ADRP X20, 0x22AC000
	0x01E473BC ADRP X21, 0x22B4000
	0x01E473C0 LDRB W8, [X22 + 0xFC5]
	0x01E473C4 LDR X20, [X20 + 0x9D0]
	0x01E473C8 LDR X21, [X21 + 0xDE8]
	0x01E473CC MOV X19, X0
	0x01E473D0 TBNZ X8, 0x0, 0x1E474A8
	0x01E473D4 ADRP X0, 0x22B4000
	0x01E473D8 LDR X0, [X0 + 0xDF0]
	0x01E473DC BL 0x1C16CF4
	0x01E473E0 ADRP X0, 0x22AC000
	0x01E473E4 LDR X0, [X0 + 0xB58]
	0x01E473E8 BL 0x1C16CF4
	0x01E473EC ADRP X0, 0x22B4000
	0x01E473F0 LDR X0, [X0 + 0xDF8]
	0x01E473F4 BL 0x1C16CF4
	0x01E473F8 ADRP X0, 0x22AC000
	0x01E473FC LDR X0, [X0 + 0x9D0]
	0x01E47400 BL 0x1C16CF4
	0x01E47404 ADRP X0, 0x22AE000
	0x01E47408 LDR X0, [X0 + 0x278]
	0x01E4740C BL 0x1C16CF4
	0x01E47410 ADRP X0, 0x22B4000
	0x01E47414 LDR X0, [X0 + 0xE00]
	0x01E47418 BL 0x1C16CF4
	0x01E4741C ADRP X0, 0x22B4000
	0x01E47420 LDR X0, [X0 + 0xE08]
	0x01E47424 BL 0x1C16CF4
	0x01E47428 ADRP X0, 0x22B4000
	0x01E4742C LDR X0, [X0 + 0xE10]
	0x01E47430 BL 0x1C16CF4
	0x01E47434 ADRP X0, 0x22B4000
	0x01E47438 LDR X0, [X0 + 0xE18]
	0x01E4743C BL 0x1C16CF4
	0x01E47440 ADRP X0, 0x22B4000
	0x01E47444 LDR X0, [X0 + 0xE20]
	0x01E47448 BL 0x1C16CF4
	0x01E4744C ADRP X0, 0x22B4000
	0x01E47450 LDR X0, [X0 + 0xE28]
	0x01E47454 BL 0x1C16CF4
	0x01E47458 ADRP X0, 0x22B4000
	0x01E4745C LDR X0, [X0 + 0xE30]
	0x01E47460 BL 0x1C16CF4
	0x01E47464 ADRP X0, 0x22AC000
	0x01E47468 LDR X0, [X0 + 0x838]
	0x01E4746C BL 0x1C16CF4
	0x01E47470 ADRP X0, 0x22B4000
	0x01E47474 LDR X0, [X0 + 0xE38]
	0x01E47478 BL 0x1C16CF4
	0x01E4747C ADRP X0, 0x22B4000
	0x01E47480 LDR X0, [X0 + 0xE40]
	0x01E47484 BL 0x1C16CF4
	0x01E47488 ADRP X0, 0x22B4000
	0x01E4748C LDR X0, [X0 + 0xDE8]
	0x01E47490 BL 0x1C16CF4
	0x01E47494 ADRP X0, 0x22B4000
	0x01E47498 LDR X0, [X0 + 0xE48]
	0x01E4749C BL 0x1C16CF4
	0x01E474A0 MOVZ W8, 0x1
	0x01E474A4 STRB W8, [X22 + 0xFC5]
	0x01E474A8 LDR X0, [X20]
	0x01E474AC ADRP X23, 0x22AC000
	0x01E474B0 ADRP X24, 0x22AE000
	0x01E474B4 LDR X23, [X23 + 0x838]
	0x01E474B8 LDR X24, [X24 + 0x278]
	0x01E474BC MOVZ W1, 0xC
	0x01E474C0 BL 0x1C16D6C
	0x01E474C4 LDR X8, [X19 + 0x10]
	0x01E474C8 MOV X20, X0
	0x01E474CC MOV X1, X31
	0x01E474D0 MOV X0, X8
	0x01E474D4 BL 0x32277A8
	0x01E474D8 LDR X21, [X21]
	0x01E474DC TBZ X0, 0x0, 0x1E474F0
	0x01E474E0 LDR X8, [X24]
	0x01E474E4 LDR X8, [X8 + 0xB8]
	0x01E474E8 LDR X22, [X8]
	0x01E474EC B 0x1E4751C
	0x01E474F0 LDR X1, [X19 + 0x10]
	0x01E474F4 ADRP X22, 0x22B4000
	0x01E474F8 LDR X22, [X22 + 0xE10]
	0x01E474FC BL 0x1E479F0
	0x01E47500 LDR X8, [X22]
	0x01E47504 LDR X2, [X23]
	0x01E47508 MOV X1, X0
	0x01E4750C MOV X3, X31
	0x01E47510 MOV X0, X8
	0x01E47514 BL 0x32274B8
	0x01E47518 MOV X22, X0
	0x01E4751C CBZ X20, 0x1E479EC
	0x01E47520 CBZ X22, 0x1E47538
	0x01E47524 LDR X8, [X20]
	0x01E47528 MOV X0, X22
	0x01E4752C LDR X1, [X8 + 0x40]
	0x01E47530 BL 0x1C16E00
	0x01E47534 CBZ X0, 0x1E479E0
	0x01E47538 LDR W8, [X20 + 0x18]
	0x01E4753C CBZ W8, 0x1E479DC
	0x01E47540 STR X22, [X20 + 0x20]
	0x01E47544 LDR X0, [X19 + 0x18]
	0x01E47548 MOV X1, X31
	0x01E4754C BL 0x32277A8
	0x01E47550 TBZ X0, 0x0, 0x1E47568
	0x01E47554 LDR X8, [X24]
	0x01E47558 LDR X8, [X8 + 0xB8]
	0x01E4755C LDR X22, [X8]
	0x01E47560 CBNZ X22, 0x1E47598
	0x01E47564 B 0x1E475AC
	0x01E47568 LDR X1, [X19 + 0x18]
	0x01E4756C BL 0x1E479F0
	0x01E47570 ADRP X8, 0x22B4000
	0x01E47574 LDR X8, [X8 + 0xE18]
	0x01E47578 LDR X2, [X23]
	0x01E4757C MOV X1, X0
	0x01E47580 MOV X3, X31
	0x01E47584 LDR X8, [X8]
	0x01E47588 MOV X0, X8

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+32], X30
	003 Move [X31+40], X21
	004 Move [X31+48], X20
	005 Move [X31+56], X19
	006 Move X21, 0x2592000
	007 Move W8, [X21+4081]
	008 Move X20, X1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {28}
	014 Move X0, 0x22B5000
	015 Move X0, [X0+3384]
	016 Call 0x1C17CF4
	017 Move X0, 0x22B5000
	018 Move X0, [X0+3392]
	019 Call 0x1C17CF4
	020 Move X0, 0x22B5000
	021 Move X0, [X0+3400]
	022 Call 0x1C17CF4
	023 Move X0, 0x22B5000
	024 Move X0, [X0+3408]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X21+4081], W8
	028 Move X0, [X19+16]
	029 Compare X0, 0
	030 JumpIfEqual {241}
	031 Move X1, X31
	032 Call PhotonPeer.get_PeerState, X0
	033 And W31, W0, 255
	034 Move X0, [X19+16]
	035 Compare X0, 0
	036 JumpIfEqual {241}
	037 Move X20, 0x22B5000
	038 Move X21, 0x22B5000
	039 Move X20, [X20+3392]
	040 Move X21, [X21+3400]
	041 Move X1, X31
	042 Call PhotonPeer.get_PeerState, X0
	043 Move X8, [X20]
	044 Move TEMP, 0
	045 Not TEMP
	046 Move X9, TEMP
	047 Move [X31+24], W0
	048 Add X0, X31, 8
	049 Move X1, X31
	050 Move [X31+8], X8
	051 Move [X31+16], X9
	052 Call Enum.ToString, X0
	053 Move X8, [X21]
	054 Move X1, X0
	055 Move X2, X31
	056 Move X0, X8
	057 Call String.Concat, X0, X1
	058 Move X8, [X19]
	059 Move X2, X0
	060 Move W1, 2
	061 Move X9, [X8+536]
	062 Move X3, [X8+544]
	063 Move X0, X19
	064 NotImplemented "Instruction BLR not yet implemented."
	065 Move W0, W31
	066 Move X20, [X31+48]
	067 Move X19, [X31+56]
	068 Move X30, [X31+32]
	069 Move X21, [X31+40]
	070 Add X31, X31, 64
	071 Return X0
	072 Compare X20, 0
	073 JumpIfEqual {80}
	074 Move W8, [X19+40]
	075 NotImplemented "Instruction CMP not yet implemented."
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Compare W8, 0
	078 JumpIfNotEqual {91}
	079 Add X8, X20, 16
	080 Move X9, 0x22B5000
	081 Move X8, [X19]
	082 Move X9, [X9+3408]
	083 Move W1, 1
	084 Move X3, [X8+544]
	085 Move X2, [X9]
	086 Move X9, [X8+536]
	087 Add X8, X20, 24
	088 Add X8, X20, 40
	089 Move X8, [X8]
	090 Move [X19+32], X8
	091 Move X8, [X20+48]
	092 Move X1, X31
	093 Move [X19+24], X8
	094 Move W8, [X20+56]
	095 Move [X19+80], W8
	096 Move X0, [X20+64]
	097 Move [X19+320], X0
	098 Call String.IsNullOrEmpty, X0
	099 And W8, W0, 1
	100 Move [X19+360], W8
	101 Move W9, [X20+112]
	102 Move X8, [X19+16]
	103 Move [X19+248], W9
	104 Compare X8, 0
	105 JumpIfEqual {241}
	106 Move W9, [X20+113]
	107 Move [X8+64], W9
	108 Move W9, [X20+108]
	109 NotImplemented "Instruction CMP not yet implemented."
	110 Move [X19+56], W9
	111 Move X10, 0x22B5000
	112 Move X10, [X10+3384]
	113 Move W9, 5
	114 Move [X8+132], W9
	115 Move W1, [X20+104]
	116 Move X2, [X10]
	117 Add X0, X31, 8
	118 NotImplemented "Instruction STRH not yet implemented."
	119 Call Nullable`1<ByteEnum>..ctor, X0, X1
	120 NotImplemented "Instruction LDRH not yet implemented."
	121 NotImplemented "Instruction STRH not yet implemented."
	122 Move W9, [X20+104]
	123 Move [X8+132], W9
	124 NotImplemented "Instruction STRH not yet implemented."
	125 Move W8, [X20+105]
	126 Move X0, X19
	127 Move [X19+104], W8
	128 Move X8, [X20+72]
	129 Move [X19+224], W31
	130 Move [X19+232], X31
	131 Move [X19+344], X8
	132 Call LoadBalancingClient.CheckConnectSetupWebGl, X0
	133 Move W8, [X19+80]
	134 Compare W8, 0
	135 JumpIfEqual {191}
	136 Move W8, 2
	137 Move [X19+128], W8
	138 Move W8, [X20+56]
	139 Compare W8, 0
	140 JumpIfEqual {148}
	141 Move X0, [X20+80]
	142 Move X1, X31
	143 Call String.IsNullOrEmpty, X0
	144 Move TEMP, X0
	145 And TEMP, TEMP, 1
	146 Compare TEMP, 1
	147 JumpIfEqual {150}
	148 Move X8, [X20+80]
	149 Move [X19+88], X8
	150 Move X8, [X20+96]
	151 Move X0, X19
	152 Move [X19+136], X8
	153 Move W8, [X20+88]
	154 Move X20, [X19+16]
	155 Move [X19+384], W8
	156 Call LoadBalancingClient.GetNameServerAddress, X0
	157 Move W8, [X19+56]
	158 Move X1, X0
	159 Compare W8, 0
	160 JumpIfEqual {165}
	161 Move X8, [X19+48]
	162 Compare X8, 0
	163 JumpIfEqual {165}
	164 Move X4, [X8+40]
	165 Move X4, X31
	166 Compare X20, 0
	167 JumpIfEqual {241}
	168 Move X8, [X20]
	169 Move X2, [X19+136]
	170 Move X3, [X19+32]
	171 Move X0, X20
	172 Move X9, [X8+424]
	173 Move X6, [X8+432]
	174 Move X5, X31
	175 NotImplemented "Instruction BLR not yet implemented."
	176 Move TEMP, X0
	177 And TEMP, TEMP, 1
	178 Compare TEMP, 1
	179 JumpIfNotEqual {65}
	180 Move W1, [X19+144]
	181 NotImplemented "Instruction CMP not yet implemented."
	182 Move X8, [X19+152]
	183 Move W9, 16
	184 Move [X19+144], W9
	185 Compare X8, 0
	186 JumpIfEqual {240}
	187 Move X9, [X8+24]
	188 Move X0, [X8+64]
	189 Move X3, [X8+40]
	190 Move W2, 16
	191 Move X8, [X19+16]
	192 Move [X19+128], W31
	193 Compare X8, 0
	194 JumpIfEqual {241}
	195 Move W9, [X20+88]
	196 Move X1, [X20+80]
	197 Move W3, [X8+132]
	198 Move W8, 0x13BF
	199 NotImplemented "Instruction CMP not yet implemented."
	200 NotImplemented "Instruction CSEL not yet implemented."
	201 Move X0, X19
	202 Call LoadBalancingClient.ToProtocolAddress, X0, X1, X2, X3
	203 Move W9, [X19+56]
	204 Move X8, [X19+16]
	205 Move X1, X0
	206 Move [X19+112], X0
	207 Compare W9, 0
	208 JumpIfEqual {213}
	209 Move X9, [X19+48]
	210 Compare X9, 0
	211 JumpIfEqual {213}
	212 Move X4, [X9+40]
	213 Move X4, X31
	214 Compare X8, 0
	215 JumpIfEqual {241}
	216 Move X9, [X8]
	217 Move X2, [X19+136]
	218 Move X3, [X19+32]
	219 Move X0, X8
	220 Move X10, [X9+424]
	221 Move X6, [X9+432]
	222 Move X5, X31
	223 NotImplemented "Instruction BLR not yet implemented."
	224 Move TEMP, X0
	225 And TEMP, TEMP, 1
	226 Compare TEMP, 1
	227 JumpIfNotEqual {65}
	228 Move W1, [X19+144]
	229 NotImplemented "Instruction CMP not yet implemented."
	230 Move X8, [X19+152]
	231 Move W9, 12
	232 Move [X19+144], W9
	233 Compare X8, 0
	234 JumpIfEqual {240}
	235 Move X9, [X8+24]
	236 Move X0, [X8+64]
	237 Move X3, [X8+40]
	238 Move W2, 12
	239 NotImplemented "Instruction BLR not yet implemented."
	240 Move W0, 1
	241 Call 0x1C17F20

Method: System.Boolean Connect()

Disassembly:
	0x01E4CA18 B.EQ 0x1E4CA40
	0x01E4CA1C LDR X8, [X19 + 0x98]
	0x01E4CA20 MOVZ W9, 0x5

ISIL:
	001 Move X8, [X0]
	002 Move X2, [X8+456]
	003 Move X1, [X8+464]
	004 CallNoReturn X2

Method: System.Boolean ConnectToMasterServer()

Disassembly:
	0x01E4CA24 STR W9, [X19 + 0x90]
	0x01E4CA28 CBZ X8, 0x1E4CA40
	0x01E4CA2C LDR X9, [X8 + 0x18]
	0x01E4CA30 LDR X0, [X8 + 0x40]
	0x01E4CA34 LDR X3, [X8 + 0x28]
	0x01E4CA38 MOVZ W2, 0x5
	0x01E4CA3C BLR X9
	0x01E4CA40 LDR X0, [X19 + 0x10]
	0x01E4CA44 CBZ X0, 0x1E4CA58
	0x01E4CA48 LDR X8, [X0]
	0x01E4CA4C LDP X2, X1, [X8 + 0x1B8]
	0x01E4CA50 LDP X30, X19, [X31], #0x10
	0x01E4CA54 BR X2
	0x01E4CA58 BL 0x1C16F20
	0x01E4CA5C SUB X31, X31, 0x30
	0x01E4CA60 STP X30, X21, [X31 + 0x10]
	0x01E4CA64 STP X20, X19, [X31 + 0x20]
	0x01E4CA68 AND W9, W1, 0x1
	0x01E4CA6C ADRP X21, 0x258C000
	0x01E4CA70 STRB W9, [X31 + 0xC]
	0x01E4CA74 ADRP X20, 0x22A7000
	0x01E4CA78 LDRB W8, [X21 + 0xFFA]
	0x01E4CA7C LDR X20, [X20 + 0xB58]
	0x01E4CA80 MOV X19, X0
	0x01E4CA84 TBNZ X8, 0x0, 0x1E4CAA8
	0x01E4CA88 ADRP X0, 0x22A7000
	0x01E4CA8C LDR X0, [X0 + 0xB58]
	0x01E4CA90 BL 0x1C16CF4
	0x01E4CA94 ADRP X0, 0x22B0000
	0x01E4CA98 LDR X0, [X0 + 0xD0]
	0x01E4CA9C BL 0x1C16CF4
	0x01E4CAA0 MOVZ W8, 0x1
	0x01E4CAA4 STRB W8, [X21 + 0xFFA]
	0x01E4CAA8 LDR X0, [X20]
	0x01E4CAAC ADRP X20, 0x22B0000
	0x01E4CAB0 LDR W8, [X0 + 0xE0]
	0x01E4CAB4 LDR X20, [X20 + 0xD0]
	0x01E4CAB8 CBNZ W8, 0x1E4CAC0
	0x01E4CABC BL 0x1C16DFC
	0x01E4CAC0 ADD X0, X31, 0xC
	0x01E4CAC4 MOV X1, X31
	0x01E4CAC8 BL 0x33176C4
	0x01E4CACC LDR X8, [X20]
	0x01E4CAD0 MOV X1, X0
	0x01E4CAD4 MOV X2, X31
	0x01E4CAD8 MOV X0, X8
	0x01E4CADC BL 0x321B938
	0x01E4CAE0 LDR X8, [X19]
	0x01E4CAE4 MOV X2, X0
	0x01E4CAE8 MOVZ W1, 0x2
	0x01E4CAEC MOV X0, X19
	0x01E4CAF0 LDR X9, [X8 + 0x218]
	0x01E4CAF4 LDR X3, [X8 + 0x220]
	0x01E4CAF8 BLR X9
	0x01E4CAFC LDRB W8, [X31 + 0xC]
	0x01E4CB00 CBZ W8, 0x1E4CB44
	0x01E4CB04 LDR X0, [X19 + 0x10]
	0x01E4CB08 CBZ X0, 0x1E4CB6C
	0x01E4CB0C MOV X1, X31
	0x01E4CB10 BL 0x3502308
	0x01E4CB14 CBZ X0, 0x1E4CB6C
	0x01E4CB18 MOVZ W1, 0x64
	0x01E4CB1C MOV X2, X31
	0x01E4CB20 BL 0x34FB37C
	0x01E4CB24 LDR X0, [X19 + 0x10]
	0x01E4CB28 CBZ X0, 0x1E4CB6C
	0x01E4CB2C MOV X1, X31
	0x01E4CB30 BL 0x3502308
	0x01E4CB34 CBZ X0, 0x1E4CB6C
	0x01E4CB38 MOVZ W1, 0x64
	0x01E4CB3C MOV X2, X31
	0x01E4CB40 BL 0x34FB34C
	0x01E4CB44 LDR X0, [X19 + 0x10]
	0x01E4CB48 CBZ X0, 0x1E4CB6C
	0x01E4CB4C LDR X8, [X0]
	0x01E4CB50 LDRB W1, [X31 + 0xC]
	0x01E4CB54 LDP X9, X2, [X8 + 0x188]
	0x01E4CB58 BLR X9
	0x01E4CB5C LDP X20, X19, [X31 + 0x20]
	0x01E4CB60 LDP X30, X21, [X31 + 0x10]
	0x01E4CB64 ADD X31, X31, 0x30
	0x01E4CB68 RET
	0x01E4CB6C BL 0x1C16F20
	0x01E4CB70 SUB X31, X31, 0x60
	0x01E4CB74 STR X30, [X31 + 0x20]
	0x01E4CB78 STP X24, X23, [X31 + 0x30]
	0x01E4CB7C STP X22, X21, [X31 + 0x40]
	0x01E4CB80 STP X20, X19, [X31 + 0x50]
	0x01E4CB84 ADRP X23, 0x258D000
	0x01E4CB88 LDRB W8, [X23 + 0x16]
	0x01E4CB8C MOV X20, X3
	0x01E4CB90 MOV W22, W2
	0x01E4CB94 MOV W21, W1
	0x01E4CB98 MOV X19, X0
	0x01E4CB9C TBNZ X8, 0x0, 0x1E4CC2C
	0x01E4CBA0 ADRP X0, 0x22A8000
	0x01E4CBA4 LDR X0, [X0 + 0x9D8]
	0x01E4CBA8 BL 0x1C16CF4
	0x01E4CBAC ADRP X0, 0x22B0000
	0x01E4CBB0 LDR X0, [X0 + 0xD8]
	0x01E4CBB4 BL 0x1C16CF4
	0x01E4CBB8 ADRP X0, 0x22AF000
	0x01E4CBBC LDR X0, [X0 + 0xE68]
	0x01E4CBC0 BL 0x1C16CF4
	0x01E4CBC4 ADRP X0, 0x22A7000
	0x01E4CBC8 LDR X0, [X0 + 0xDF8]
	0x01E4CBCC BL 0x1C16CF4
	0x01E4CBD0 ADRP X0, 0x22AF000
	0x01E4CBD4 LDR X0, [X0 + 0xD40]
	0x01E4CBD8 BL 0x1C16CF4
	0x01E4CBDC ADRP X0, 0x22B0000
	0x01E4CBE0 LDR X0, [X0 + 0x48]
	0x01E4CBE4 BL 0x1C16CF4
	0x01E4CBE8 ADRP X0, 0x22A7000
	0x01E4CBEC LDR X0, [X0 + 0x6C0]
	0x01E4CBF0 BL 0x1C16CF4
	0x01E4CBF4 ADRP X0, 0x22B0000
	0x01E4CBF8 LDR X0, [X0 + 0xE0]
	0x01E4CBFC BL 0x1C16CF4
	0x01E4CC00 ADRP X0, 0x22B0000
	0x01E4CC04 LDR X0, [X0 + 0xE8]
	0x01E4CC08 BL 0x1C16CF4
	0x01E4CC0C ADRP X0, 0x22B0000

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+32], X30
	003 Move [X31+40], X21
	004 Move [X31+48], X20
	005 Move [X31+56], X19
	006 Move X20, 0x258D000
	007 Move W8, [X20+4082]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {27}
	013 Move X0, 0x22B0000
	014 Move X0, [X0+3568]
	015 Call 0x1C17CF4
	016 Move X0, 0x22B0000
	017 Move X0, [X0+3392]
	018 Call 0x1C17CF4
	019 Move X0, 0x22B1000
	020 Move X0, [X0+8]
	021 Call 0x1C17CF4
	022 Move X0, 0x22B1000
	023 Move X0, [X0+16]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X20+4082], W8
	027 Move X0, [X19+16]
	028 Compare X0, 0
	029 JumpIfEqual {144}
	030 Move X1, X31
	031 Call PhotonPeer.get_PeerState, X0
	032 And W31, W0, 255
	033 Move X0, [X19+16]
	034 Compare X0, 0
	035 JumpIfEqual {144}
	036 Move X20, 0x22B0000
	037 Move X21, 0x22B1000
	038 Move X20, [X20+3392]
	039 Move X21, [X21+16]
	040 Move X1, X31
	041 Call PhotonPeer.get_PeerState, X0
	042 Move X8, [X20]
	043 Move TEMP, 0
	044 Not TEMP
	045 Move X9, TEMP
	046 Move [X31+24], W0
	047 Add X0, X31, 8
	048 Move X1, X31
	049 Move [X31+8], X8
	050 Move [X31+16], X9
	051 Call Enum.ToString, X0
	052 Move X8, [X21]
	053 Move X1, X0
	054 Move X2, X31
	055 Move X0, X8
	056 Call String.Concat, X0, X1
	057 Move X8, [X19]
	058 Move X2, X0
	059 Move W1, 2
	060 Move X9, [X8+536]
	061 Move X3, [X8+544]
	062 Move X0, X19
	063 NotImplemented "Instruction BLR not yet implemented."
	064 Move W0, W31
	065 Move X20, [X31+48]
	066 Move X19, [X31+56]
	067 Move X30, [X31+32]
	068 Move X21, [X31+40]
	069 Add X31, X31, 64
	070 Return X0
	071 Move W8, [X19+56]
	072 Compare W8, 0
	073 JumpIfEqual {80}
	074 Move X9, [X19+48]
	075 Compare X9, 0
	076 JumpIfEqual {92}
	077 Move X9, [X9+40]
	078 Compare X9, 0
	079 JumpIfEqual {92}
	080 Move X0, X19
	081 Call LoadBalancingClient.CheckConnectSetupWebGl, X0
	082 Move W8, [X19+56]
	083 Move X0, [X19+16]
	084 Move [X19+224], W31
	085 Move [X19+232], X31
	086 Compare W8, 0
	087 JumpIfEqual {114}
	088 Move X8, [X19+48]
	089 Compare X8, 0
	090 JumpIfEqual {114}
	091 Move X4, [X8+40]
	092 Move X9, 0x22B0000
	093 Move X9, [X9+3568]
	094 Move TEMP, 0
	095 Not TEMP
	096 Move X10, TEMP
	097 Add X0, X31, 8
	098 Move X1, X31
	099 Move X9, [X9]
	100 Move [X31+24], W8
	101 Move [X31+8], X9
	102 Move [X31+16], X10
	103 Call Enum.ToString, X0
	104 Move X8, 0x22B1000
	105 Move X8, [X8+8]
	106 Move X1, X0
	107 Move X2, X31
	108 Move X8, [X8]
	109 Move X0, X8
	110 Call String.Concat, X0, X1
	111 Move X8, [X19]
	112 Move X2, X0
	113 Move W1, 1
	114 Move X4, X31
	115 Compare X0, 0
	116 JumpIfEqual {144}
	117 Move X8, [X0]
	118 Move X1, [X19+112]
	119 Move X2, [X19+136]
	120 Move X3, [X19+32]
	121 Move X9, [X8+424]
	122 Move X6, [X8+432]
	123 Move X5, X31
	124 NotImplemented "Instruction BLR not yet implemented."
	125 Move TEMP, X0
	126 And TEMP, TEMP, 1
	127 Compare TEMP, 1
	128 JumpIfNotEqual {64}
	129 Move W1, [X19+144]
	130 Move [X19+360], W31
	131 NotImplemented "Instruction CMP not yet implemented."
	132 Move X8, [X19+152]
	133 Move W9, 12
	134 Move [X19+144], W9
	135 Compare X8, 0
	136 JumpIfEqual {142}
	137 Move X9, [X8+24]
	138 Move X0, [X8+64]
	139 Move X3, [X8+40]
	140 Move W2, 12
	141 NotImplemented "Instruction BLR not yet implemented."
	142 Move W0, 1
	143 Move [X19+128], W31
	144 Call 0x1C17F20

Method: System.Boolean ConnectToNameServer()

Disassembly:
	0x01E4CC10 LDR X0, [X0 + 0xF0]
	0x01E4CC14 BL 0x1C16CF4
	0x01E4CC18 ADRP X0, 0x22B0000
	0x01E4CC1C LDR X0, [X0 + 0xF8]
	0x01E4CC20 BL 0x1C16CF4
	0x01E4CC24 MOVZ W8, 0x1
	0x01E4CC28 STRB W8, [X23 + 0x16]
	0x01E4CC2C LDR X8, [X19 + 0x10]
	0x01E4CC30 CBZ X8, 0x1E4CC78
	0x01E4CC34 MOV W1, W21
	0x01E4CC38 MOV W2, W22
	0x01E4CC3C BL 0x1E4F7E4
	0x01E4CC40 TBZ X0, 0x0, 0x1E4CCB4
	0x01E4CC44 MOV X0, X19
	0x01E4CC48 MOV W1, W21
	0x01E4CC4C BL 0x1E4F90C
	0x01E4CC50 TBZ X0, 0x0, 0x1E4CD04
	0x01E4CC54 LDR X0, [X19 + 0x10]
	0x01E4CC58 CBZ X0, 0x1E4CECC
	0x01E4CC5C MOV X1, X31
	0x01E4CC60 BL 0x3501B48
	0x01E4CC64 AND W8, W0, 0xFF
	0x01E4CC68 CMP W8, 0x3
	0x01E4CC6C B.NE 0x1E4CE24
	0x01E4CC70 MOVZ W0, 0x1
	0x01E4CC74 B 0x1E4CEB4
	0x01E4CC78 ADRP X8, 0x22A8000
	0x01E4CC7C LDR X8, [X8 + 0x9D8]
	0x01E4CC80 ADD X1, X31, 0x2C
	0x01E4CC84 STRB W21, [X31 + 0x2C]
	0x01E4CC88 LDR X0, [X8]
	0x01E4CC8C BL 0x1C16E04
	0x01E4CC90 ADRP X8, 0x22B0000
	0x01E4CC94 LDR X8, [X8 + 0xF8]
	0x01E4CC98 MOV X2, X0
	0x01E4CC9C MOV X1, X20
	0x01E4CCA0 MOV X3, X31
	0x01E4CCA4 LDR X8, [X8]
	0x01E4CCA8 MOV X0, X8
	0x01E4CCAC BL 0x3227BD4
	0x01E4CCB0 B 0x1E4CE94
	0x01E4CCB4 LDR X8, [X19 + 0x10]
	0x01E4CCB8 CBZ X8, 0x1E4CECC
	0x01E4CCBC LDRB W8, [X8 + 0x40]
	0x01E4CCC0 CBZ W8, 0x1E4CEB0
	0x01E4CCC4 ADRP X8, 0x22A8000
	0x01E4CCC8 LDR X8, [X8 + 0x9D8]
	0x01E4CCCC ADD X1, X31, 0x28
	0x01E4CCD0 STRB W21, [X31 + 0x28]
	0x01E4CCD4 LDR X0, [X8]
	0x01E4CCD8 BL 0x1C16E04
	0x01E4CCDC ADRP X8, 0x22B0000
	0x01E4CCE0 LDR X8, [X8 + 0x48]
	0x01E4CCE4 MOV X21, X0
	0x01E4CCE8 ADD X1, X31, 0x1C
	0x01E4CCEC STR W22, [X31 + 0x1C]
	0x01E4CCF0 LDR X0, [X8]
	0x01E4CCF4 BL 0x1C16E04
	0x01E4CCF8 ADRP X8, 0x22B0000
	0x01E4CCFC LDR X8, [X8 + 0xE8]
	0x01E4CD00 B 0x1E4CE78
	0x01E4CD04 AND W8, W21, 0xFF
	0x01E4CD08 CMP W8, 0xFD
	0x01E4CD0C B.NE 0x1E4CD34
	0x01E4CD10 LDR W8, [X19 + 0x90]
	0x01E4CD14 SUB W8, W8, 0xA
	0x01E4CD18 CMP W8, 0x3
	0x01E4CD1C B.HI 0x1E4CD34
	0x01E4CD20 MOVZ W9, 0x303
	0x01E4CD24 UBFM W8, W8, 0x1D, 0x1C
	0x01E4CD28 MOVK W9, 0x3010000
	0x01E4CD2C LSRV W22, W9, W8
	0x01E4CD30 B 0x1E4CD38
	0x01E4CD34 MOVZ W22, 0x1
	0x01E4CD38 LDR X8, [X19 + 0x10]
	0x01E4CD3C CBZ X8, 0x1E4CECC
	0x01E4CD40 LDRB W8, [X8 + 0x40]
	0x01E4CD44 CMP W8, W22, UXTB
	0x01E4CD48 B.CC 0x1E4CEB0
	0x01E4CD4C ADRP X8, 0x22A8000
	0x01E4CD50 LDR X8, [X8 + 0x9D8]
	0x01E4CD54 ADD X1, X31, 0x18
	0x01E4CD58 STRB W21, [X31 + 0x18]
	0x01E4CD5C LDR X0, [X8]
	0x01E4CD60 BL 0x1C16E04
	0x01E4CD64 ADRP X8, 0x22A7000
	0x01E4CD68 LDR X8, [X8 + 0x6C0]
	0x01E4CD6C ADRP X9, 0x22B0000
	0x01E4CD70 MOV X21, X0
	0x01E4CD74 LDR X8, [X8]
	0x01E4CD78 LDR X9, [X9 + 0xD8]
	0x01E4CD7C LDR W10, [X8 + 0xE0]
	0x01E4CD80 LDR X23, [X9]
	0x01E4CD84 CBNZ W10, 0x1E4CD90
	0x01E4CD88 MOV X0, X8
	0x01E4CD8C BL 0x1C16DFC
	0x01E4CD90 MOV X0, X23
	0x01E4CD94 MOV X1, X31
	0x01E4CD98 BL 0x338C698
	0x01E4CD9C ADRP X9, 0x22AF000
	0x01E4CDA0 LDR W8, [X19 + 0x90]
	0x01E4CDA4 LDR X9, [X9 + 0xE68]
	0x01E4CDA8 MOV X23, X0
	0x01E4CDAC ADD X1, X31, 0x14
	0x01E4CDB0 STR W8, [X31 + 0x14]
	0x01E4CDB4 LDR X0, [X9]
	0x01E4CDB8 BL 0x1C16E04
	0x01E4CDBC ADRP X8, 0x22A7000
	0x01E4CDC0 LDR X8, [X8 + 0xDF8]
	0x01E4CDC4 MOV X24, X0
	0x01E4CDC8 LDR X8, [X8]
	0x01E4CDCC LDR W9, [X8 + 0xE0]
	0x01E4CDD0 CBNZ W9, 0x1E4CDDC
	0x01E4CDD4 MOV X0, X8
	0x01E4CDD8 BL 0x1C16DFC
	0x01E4CDDC MOV X0, X23
	0x01E4CDE0 MOV X1, X24
	0x01E4CDE4 MOV X2, X31
	0x01E4CDE8 BL 0x33AED00
	0x01E4CDEC ADRP X8, 0x22B0000
	0x01E4CDF0 LDR X8, [X8 + 0xF0]
	0x01E4CDF4 MOV X3, X0
	0x01E4CDF8 MOV X1, X20
	0x01E4CDFC MOV X2, X21
	0x01E4CE00 LDR X8, [X8]
	0x01E4CE04 MOV X4, X31
	0x01E4CE08 MOV X0, X8
	0x01E4CE0C BL 0x3227C18
	0x01E4CE10 LDR X8, [X19]
	0x01E4CE14 MOV X2, X0
	0x01E4CE18 MOV X0, X19

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+32], X30
	003 Move [X31+40], X21
	004 Move [X31+48], X20
	005 Move [X31+56], X19
	006 Move X20, 0x258D000
	007 Move W8, [X20+4083]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {30}
	013 Move X0, 0x22B0000
	014 Move X0, [X0+3384]
	015 Call 0x1C17CF4
	016 Move X0, 0x22B1000
	017 Move X0, [X0+24]
	018 Call 0x1C17CF4
	019 Move X0, 0x22B0000
	020 Move X0, [X0+3392]
	021 Call 0x1C17CF4
	022 Move X0, 0x22B1000
	023 Move X0, [X0+32]
	024 Call 0x1C17CF4
	025 Move X0, 0x22B1000
	026 Move X0, [X0+40]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X20+4083], W8
	030 Move X0, [X19+16]
	031 Compare X0, 0
	032 JumpIfEqual {147}
	033 Move X1, X31
	034 Call PhotonPeer.get_PeerState, X0
	035 And W31, W0, 255
	036 Move X0, [X19+16]
	037 Compare X0, 0
	038 JumpIfEqual {147}
	039 Move X20, 0x22B0000
	040 Move X21, 0x22B1000
	041 Move X20, [X20+3392]
	042 Move X21, [X21+40]
	043 Move X1, X31
	044 Call PhotonPeer.get_PeerState, X0
	045 Move X8, [X20]
	046 Move TEMP, 0
	047 Not TEMP
	048 Move X9, TEMP
	049 Move [X31+24], W0
	050 Add X0, X31, 8
	051 Move X1, X31
	052 Move [X31+8], X8
	053 Move [X31+16], X9
	054 Call Enum.ToString, X0
	055 Move X8, [X21]
	056 Move X1, X0
	057 Move X2, X31
	058 Move X0, X8
	059 Call String.Concat, X0, X1
	060 Move X8, [X19]
	061 Move X2, X0
	062 Move W1, 2
	063 Move X0, X19
	064 Move X9, [X8+536]
	065 Move X3, [X8+544]
	066 NotImplemented "Instruction BLR not yet implemented."
	067 Move W8, 1
	068 Move X0, X19
	069 Move [X19+80], W8
	070 Move [X19+320], X31
	071 Call LoadBalancingClient.CheckConnectSetupWebGl, X0
	072 Move W8, [X19+56]
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Move W8, [X19+64]
	075 Compare W8, 0
	076 JumpIfNotEqual {89}
	077 Move X8, [X19+16]
	078 Compare X8, 0
	079 JumpIfEqual {147}
	080 Move W1, [X8+132]
	081 Move X8, 0x22B0000
	082 Move X8, [X8+3384]
	083 Add X0, X31, 8
	084 NotImplemented "Instruction STRH not yet implemented."
	085 Move X2, [X8]
	086 Call Nullable`1<ByteEnum>..ctor, X0, X1
	087 NotImplemented "Instruction LDRH not yet implemented."
	088 NotImplemented "Instruction STRH not yet implemented."
	089 Move X20, [X19+16]
	090 Compare X20, 0
	091 JumpIfEqual {147}
	092 Move W8, 5
	093 Move [X20+132], W8
	094 Move X20, [X19+16]
	095 Move X0, X19
	096 Move [X19+224], W31
	097 Move [X19+232], X31
	098 Call LoadBalancingClient.GetNameServerAddress, X0
	099 Move W8, [X19+56]
	100 Move X1, X0
	101 Compare W8, 0
	102 JumpIfEqual {107}
	103 Move X8, [X19+48]
	104 Compare X8, 0
	105 JumpIfEqual {107}
	106 Move X4, [X8+40]
	107 Move X4, X31
	108 Compare X20, 0
	109 JumpIfEqual {147}
	110 Move X9, 0x22B1000
	111 Move X8, [X20]
	112 Move X2, [X19+136]
	113 Move X9, [X9+32]
	114 Move X0, X20
	115 Move X5, X31
	116 Move X3, [X9]
	117 Move X9, [X8+424]
	118 Move X6, [X8+432]
	119 NotImplemented "Instruction BLR not yet implemented."
	120 Move TEMP, X0
	121 And TEMP, TEMP, 1
	122 Compare TEMP, 1
	123 JumpIfNotEqual {140}
	124 Move W1, [X19+144]
	125 Move [X19+360], W31
	126 NotImplemented "Instruction CMP not yet implemented."
	127 Move X8, [X19+152]
	128 Move W9, 16
	129 Move [X19+144], W9
	130 Compare X8, 0
	131 JumpIfEqual {137}
	132 Move X9, [X8+24]
	133 Move X0, [X8+64]
	134 Move X3, [X8+40]
	135 Move W2, 16
	136 NotImplemented "Instruction BLR not yet implemented."
	137 Move W8, 2
	138 Move W0, 1
	139 Move [X19+128], W8
	140 Move W0, W31
	141 Move X20, [X31+48]
	142 Move X19, [X31+56]
	143 Move X30, [X31+32]
	144 Move X21, [X31+40]
	145 Add X31, X31, 64
	146 Return X0
	147 Call 0x1C17F20

Method: System.Boolean ConnectToRegionMaster(System.String region)

Disassembly:
	0x01E4CE1C MOV W1, W22
	0x01E4CE20 B 0x1E4CEA4
	0x01E4CE24 ADRP X8, 0x22A8000
	0x01E4CE28 LDR X8, [X8 + 0x9D8]
	0x01E4CE2C ADD X1, X31, 0x10
	0x01E4CE30 STRB W21, [X31 + 0x10]
	0x01E4CE34 LDR X0, [X8]
	0x01E4CE38 BL 0x1C16E04
	0x01E4CE3C LDR X8, [X19 + 0x10]
	0x01E4CE40 CBZ X8, 0x1E4CECC
	0x01E4CE44 MOV X21, X0
	0x01E4CE48 MOV X0, X8
	0x01E4CE4C MOV X1, X31
	0x01E4CE50 BL 0x3501B48
	0x01E4CE54 ADRP X8, 0x22AF000
	0x01E4CE58 LDR X8, [X8 + 0xD40]
	0x01E4CE5C STRB W0, [X31 + 0xC]
	0x01E4CE60 ADD X1, X31, 0xC
	0x01E4CE64 LDR X8, [X8]
	0x01E4CE68 MOV X0, X8
	0x01E4CE6C BL 0x1C16E04
	0x01E4CE70 ADRP X8, 0x22B0000
	0x01E4CE74 LDR X8, [X8 + 0xE0]
	0x01E4CE78 LDR X8, [X8]
	0x01E4CE7C MOV X3, X0
	0x01E4CE80 MOV X1, X20
	0x01E4CE84 MOV X2, X21
	0x01E4CE88 MOV X0, X8
	0x01E4CE8C MOV X4, X31
	0x01E4CE90 BL 0x3227C18
	0x01E4CE94 LDR X8, [X19]
	0x01E4CE98 MOV X2, X0
	0x01E4CE9C MOVZ W1, 0x1
	0x01E4CEA0 MOV X0, X19
	0x01E4CEA4 LDR X9, [X8 + 0x218]
	0x01E4CEA8 LDR X3, [X8 + 0x220]
	0x01E4CEAC BLR X9
	0x01E4CEB0 MOV W0, W31
	0x01E4CEB4 LDP X20, X19, [X31 + 0x50]
	0x01E4CEB8 LDP X22, X21, [X31 + 0x40]
	0x01E4CEBC LDP X24, X23, [X31 + 0x30]
	0x01E4CEC0 LDR X30, [X31 + 0x20]
	0x01E4CEC4 ADD X31, X31, 0x60
	0x01E4CEC8 RET
	0x01E4CECC BL 0x1C16F20
	0x01E4CED0 STP X30, X21, [X31 - 0x20]!
	0x01E4CED4 STP X20, X19, [X31 + 0x10]
	0x01E4CED8 ADRP X21, 0x258C000
	0x01E4CEDC ADRP X20, 0x22B0000
	0x01E4CEE0 LDRB W8, [X21 + 0xFFC]
	0x01E4CEE4 LDR X20, [X20 + 0x100]
	0x01E4CEE8 MOV X19, X0
	0x01E4CEEC TBNZ X8, 0x0, 0x1E4CF04
	0x01E4CEF0 ADRP X0, 0x22B0000
	0x01E4CEF4 LDR X0, [X0 + 0x100]
	0x01E4CEF8 BL 0x1C16CF4
	0x01E4CEFC MOVZ W8, 0x1
	0x01E4CF00 STRB W8, [X21 + 0xFFC]
	0x01E4CF04 LDR W2, [X19 + 0x80]
	0x01E4CF08 LDR X3, [X20]
	0x01E4CF0C MOVZ W1, 0xDC
	0x01E4CF10 MOV X0, X19
	0x01E4CF14 BL 0x1E4CB70
	0x01E4CF18 TBZ X0, 0x0, 0x1E4CF40
	0x01E4CF1C LDR X0, [X19 + 0x10]
	0x01E4CF20 CBZ X0, 0x1E4CF50
	0x01E4CF24 LDR X8, [X0]
	0x01E4CF28 LDR X1, [X19 + 0x20]
	0x01E4CF2C LDP X20, X19, [X31 + 0x10]
	0x01E4CF30 LDR X3, [X8 + 0x248]
	0x01E4CF34 LDR X2, [X8 + 0x250]
	0x01E4CF38 LDP X30, X21, [X31], #0x20
	0x01E4CF3C BR X3
	0x01E4CF40 LDP X20, X19, [X31 + 0x10]
	0x01E4CF44 MOV W0, W31
	0x01E4CF48 LDP X30, X21, [X31], #0x20
	0x01E4CF4C RET
	0x01E4CF50 BL 0x1C16F20
	0x01E4CF54 SUB X31, X31, 0x70
	0x01E4CF58 STP X29, X30, [X31 + 0x10]
	0x01E4CF5C STP X28, X27, [X31 + 0x20]
	0x01E4CF60 STP X26, X25, [X31 + 0x30]
	0x01E4CF64 STP X24, X23, [X31 + 0x40]
	0x01E4CF68 STP X22, X21, [X31 + 0x50]
	0x01E4CF6C STP X20, X19, [X31 + 0x60]
	0x01E4CF70 ADRP X23, 0x258C000
	0x01E4CF74 ADRP X22, 0x22B0000
	0x01E4CF78 LDRB W8, [X23 + 0xFFD]
	0x01E4CF7C LDR X22, [X22 + 0x108]
	0x01E4CF80 MOV X20, X2
	0x01E4CF84 MOV X21, X1
	0x01E4CF88 MOV X19, X0
	0x01E4CF8C TBNZ X8, 0x0, 0x1E4D04C
	0x01E4CF90 ADRP X0, 0x22A7000
	0x01E4CF94 LDR X0, [X0 + 0x758]
	0x01E4CF98 BL 0x1C16CF4
	0x01E4CF9C ADRP X0, 0x22A8000
	0x01E4CFA0 LDR X0, [X0 + 0x1B8]
	0x01E4CFA4 BL 0x1C16CF4
	0x01E4CFA8 ADRP X0, 0x22B0000
	0x01E4CFAC LDR X0, [X0 + 0x110]
	0x01E4CFB0 BL 0x1C16CF4
	0x01E4CFB4 ADRP X0, 0x22A9000
	0x01E4CFB8 LDR X0, [X0 + 0xE78]
	0x01E4CFBC BL 0x1C16CF4
	0x01E4CFC0 ADRP X0, 0x22B0000
	0x01E4CFC4 LDR X0, [X0 + 0x118]
	0x01E4CFC8 BL 0x1C16CF4
	0x01E4CFCC ADRP X0, 0x22A8000
	0x01E4CFD0 LDR X0, [X0 + 0x1C8]
	0x01E4CFD4 BL 0x1C16CF4
	0x01E4CFD8 ADRP X0, 0x22A8000
	0x01E4CFDC LDR X0, [X0 + 0x1D0]
	0x01E4CFE0 BL 0x1C16CF4
	0x01E4CFE4 ADRP X0, 0x22B0000
	0x01E4CFE8 LDR X0, [X0 + 0x108]
	0x01E4CFEC BL 0x1C16CF4
	0x01E4CFF0 ADRP X0, 0x22B0000
	0x01E4CFF4 LDR X0, [X0 + 0x120]
	0x01E4CFF8 BL 0x1C16CF4
	0x01E4CFFC ADRP X0, 0x22B0000
	0x01E4D000 LDR X0, [X0 + 0x128]
	0x01E4D004 BL 0x1C16CF4
	0x01E4D008 ADRP X0, 0x22AF000
	0x01E4D00C LDR X0, [X0 + 0x130]
	0x01E4D010 BL 0x1C16CF4
	0x01E4D014 ADRP X0, 0x22AF000
	0x01E4D018 LDR X0, [X0 + 0x138]
	0x01E4D01C BL 0x1C16CF4
	0x01E4D020 ADRP X0, 0x22AF000
	0x01E4D024 LDR X0, [X0 + 0x140]
	0x01E4D028 BL 0x1C16CF4
	0x01E4D02C ADRP X0, 0x22AF000
	0x01E4D030 LDR X0, [X0 + 0x148]
	0x01E4D034 BL 0x1C16CF4
	0x01E4D038 ADRP X0, 0x22AF000
	0x01E4D03C LDR X0, [X0 + 0x150]
	0x01E4D040 BL 0x1C16CF4
	0x01E4D044 MOVZ W8, 0x1
	0x01E4D048 STRB W8, [X23 + 0xFFD]
	0x01E4D04C LDR W2, [X19 + 0x80]
	0x01E4D050 LDR X3, [X22]
	0x01E4D054 MOVZ W1, 0xDE
	0x01E4D058 MOV X0, X19
	0x01E4D05C BL 0x1E4CB70
	0x01E4D060 TBZ X0, 0x0, 0x1E4D108
	0x01E4D064 LDR X8, [X19 + 0x138]
	0x01E4D068 CBZ X8, 0x1E4D08C
	0x01E4D06C ADRP X9, 0x22AF000

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x258D000
	007 Move W8, [X21+4084]
	008 Move X20, X1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {31}
	014 Move X0, 0x22B0000
	015 Move X0, [X0+3384]
	016 Call 0x1C17CF4
	017 Move X0, 0x22B1000
	018 Move X0, [X0+24]
	019 Call 0x1C17CF4
	020 Move X0, 0x22B1000
	021 Move X0, [X0+48]
	022 Call 0x1C17CF4
	023 Move X0, 0x22B1000
	024 Move X0, [X0+32]
	025 Call 0x1C17CF4
	026 Move X0, 0x22B1000
	027 Move X0, [X0+56]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X21+4084], W8
	031 Move X0, X20
	032 Move X1, X31
	033 Call String.IsNullOrEmpty, X0
	034 Move TEMP, X0
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfNotEqual {48}
	038 Move X9, 0x22B1000
	039 Move X8, [X19]
	040 Move X9, [X9+48]
	041 Move W1, 1
	042 Move X0, X19
	043 Move X3, [X8+544]
	044 Move X2, [X9]
	045 Move X9, [X8+536]
	046 NotImplemented "Instruction BLR not yet implemented."
	047 Move W20, W31
	048 Move W8, [X19+144]
	049 Move W9, 1
	050 Move [X19+80], W9
	051 NotImplemented "Instruction CMP not yet implemented."
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Move X8, [X19+16]
	054 Compare X8, 0
	055 JumpIfEqual {165}
	056 Move W8, [X8+64]
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Move X9, 0x22B1000
	059 Move X8, [X19]
	060 Move X9, [X9+56]
	061 Move W1, 3
	062 Move X0, X19
	063 Move X3, [X8+544]
	064 Move X2, [X9]
	065 Move X9, [X8+536]
	066 NotImplemented "Instruction BLR not yet implemented."
	067 Move X0, X19
	068 Move [X19+320], X20
	069 Call LoadBalancingClient.CallAuthenticate, X0
	070 Move TEMP, X0
	071 And TEMP, TEMP, 1
	072 Compare TEMP, 1
	073 JumpIfNotEqual {47}
	074 Move W1, [X19+144]
	075 Move W20, 1
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Move X8, [X19+152]
	078 Move [X19+144], W20
	079 Compare X8, 0
	080 JumpIfEqual {158}
	081 Move X9, [X8+24]
	082 Move X0, [X8+64]
	083 Move X3, [X8+40]
	084 Move W2, 1
	085 Move W20, 1
	086 NotImplemented "Instruction BLR not yet implemented."
	087 Move X0, [X19+16]
	088 Compare X0, 0
	089 JumpIfEqual {165}
	090 Move X8, [X0]
	091 Move X9, [X8+440]
	092 Move X1, [X8+448]
	093 NotImplemented "Instruction BLR not yet implemented."
	094 Move X0, X19
	095 Move [X19+320], X20
	096 Call LoadBalancingClient.CheckConnectSetupWebGl, X0
	097 Move W8, [X19+56]
	098 NotImplemented "Instruction CMP not yet implemented."
	099 Move W8, [X19+64]
	100 Compare W8, 0
	101 JumpIfNotEqual {114}
	102 Move X8, [X19+16]
	103 Compare X8, 0
	104 JumpIfEqual {165}
	105 Move W1, [X8+132]
	106 Move X8, 0x22B0000
	107 Move X8, [X8+3384]
	108 Add X0, X31, 12
	109 NotImplemented "Instruction STRH not yet implemented."
	110 Move X2, [X8]
	111 Call Nullable`1<ByteEnum>..ctor, X0, X1
	112 NotImplemented "Instruction LDRH not yet implemented."
	113 NotImplemented "Instruction STRH not yet implemented."
	114 Move X20, [X19+16]
	115 Compare X20, 0
	116 JumpIfEqual {165}
	117 Move W8, 5
	118 Move [X20+132], W8
	119 Move X20, [X19+16]
	120 Move X0, X19
	121 Move [X19+360], W31
	122 Move [X19+224], W31
	123 Move [X19+232], X31
	124 Call LoadBalancingClient.GetNameServerAddress, X0
	125 Compare X20, 0
	126 JumpIfEqual {165}
	127 Move X9, 0x22B1000
	128 Move X8, [X20]
	129 Move X2, [X19+136]
	130 Move X9, [X9+32]
	131 Move X1, X0
	132 Move X0, X20
	133 Move X4, X31
	134 Move X3, [X9]
	135 Move X9, [X8+424]
	136 Move X6, [X8+432]
	137 Move X5, X31
	138 NotImplemented "Instruction BLR not yet implemented."
	139 Move TEMP, X0
	140 And TEMP, TEMP, 1
	141 Compare TEMP, 1
	142 JumpIfNotEqual {47}
	143 Move W1, [X19+144]
	144 NotImplemented "Instruction CMP not yet implemented."
	145 Move X8, [X19+152]
	146 Move W9, 16
	147 Move [X19+144], W9
	148 Compare X8, 0
	149 JumpIfEqual {155}
	150 Move X9, [X8+24]
	151 Move X0, [X8+64]
	152 Move X3, [X8+40]
	153 Move W2, 16
	154 NotImplemented "Instruction BLR not yet implemented."
	155 Move W8, 2
	156 Move [X19+128], W8
	157 Move W20, 1
	158 Move W0, W20
	159 Move X20, [X31+32]
	160 Move X19, [X31+40]
	161 Move X30, [X31+16]
	162 Move X21, [X31+24]
	163 Add X31, X31, 48
	164 Return X0
	165 Call 0x1C17F20

Method: System.Void CheckConnectSetupWebGl()

Disassembly:
	0x01E4C980 MOV W0, W31
	0x01E4C984 ADD X31, X31, 0x40
	0x01E4C988 RET
	0x01E4C98C BL 0x1C16F20
	0x01E4C990 STP X30, X19, [X31 - 0x10]!
	0x01E4C994 LDR W8, [X0 + 0x80]
	0x01E4C998 MOV X19, X0
	0x01E4C99C CBZ W8, 0x1E4CA10
	0x01E4C9A0 CMP W8, 0x1
	0x01E4C9A4 B.EQ 0x1E4C9E0
	0x01E4C9A8 CMP W8, 0x2
	0x01E4C9AC B.NE 0x1E4CA40
	0x01E4C9B0 LDR W1, [X19 + 0x90]
	0x01E4C9B4 CMP W1, 0x12
	0x01E4C9B8 B.EQ 0x1E4CA40
	0x01E4C9BC LDR X8, [X19 + 0x98]
	0x01E4C9C0 MOVZ W9, 0x12
	0x01E4C9C4 STR W9, [X19 + 0x90]
	0x01E4C9C8 CBZ X8, 0x1E4CA40
	0x01E4C9CC LDR X9, [X8 + 0x18]
	0x01E4C9D0 LDR X0, [X8 + 0x40]
	0x01E4C9D4 LDR X3, [X8 + 0x28]
	0x01E4C9D8 MOVZ W2, 0x12
	0x01E4C9DC B 0x1E4CA3C
	0x01E4C9E0 LDR W1, [X19 + 0x90]
	0x01E4C9E4 CMP W1, 0xB
	0x01E4C9E8 B.EQ 0x1E4CA40
	0x01E4C9EC LDR X8, [X19 + 0x98]
	0x01E4C9F0 MOVZ W9, 0xB
	0x01E4C9F4 STR W9, [X19 + 0x90]
	0x01E4C9F8 CBZ X8, 0x1E4CA40
	0x01E4C9FC LDR X9, [X8 + 0x18]
	0x01E4CA00 LDR X0, [X8 + 0x40]
	0x01E4CA04 LDR X3, [X8 + 0x28]
	0x01E4CA08 MOVZ W2, 0xB
	0x01E4CA0C B 0x1E4CA3C
	0x01E4CA10 LDR W1, [X19 + 0x90]
	0x01E4CA14 CMP W1, 0x5

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x258D000
	005 Move W8, [X20+4085]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x22B0000
	012 Move X0, [X0+3072]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+4085], W8
	016 Move X0, X31
	017 Call RuntimeUnityFlagsSetup.get_IsUNITY_WEBGL
	018 Move TEMP, X0
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfNotEqual {43}
	022 Move X8, [X19+16]
	023 Compare X8, 0
	024 JumpIfEqual {47}
	025 Move W8, [X8+132]
	026 And W8, W8, 254
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Move X9, 0x22B0000
	029 Move X8, [X19]
	030 Move X9, [X9+3072]
	031 Move W1, 2
	032 Move X0, X19
	033 Move X3, [X8+544]
	034 Move X2, [X9]
	035 Move X9, [X8+536]
	036 NotImplemented "Instruction BLR not yet implemented."
	037 Move X8, [X19+16]
	038 Compare X8, 0
	039 JumpIfEqual {47}
	040 Move W9, 5
	041 Move [X8+132], W9
	042 Move [X19+104], W31
	043 Move X20, [X31+16]
	044 Move X19, [X31+24]
	045 Move X30, [X31+32]
	046 Return 
	047 Call 0x1C17F20

Method: System.Boolean Connect(System.String serverAddress, System.String proxyServerAddress, Fusion.Photon.Realtime.ServerConnection serverType)

Disassembly:
	0x01E4D364 STP X22, X21, [X31 + 0x10]
	0x01E4D368 STP X20, X19, [X31 + 0x20]
	0x01E4D36C ADRP X22, 0x258B000
	0x01E4D370 ADRP X21, 0x22AF000
	0x01E4D374 LDRB W8, [X22 + 0xFFE]
	0x01E4D378 LDR X21, [X21 + 0x158]
	0x01E4D37C MOV X20, X1
	0x01E4D380 MOV X19, X0
	0x01E4D384 TBNZ X8, 0x0, 0x1E4D3A8
	0x01E4D388 ADRP X0, 0x22AF000
	0x01E4D38C LDR X0, [X0 + 0x160]
	0x01E4D390 BL 0x1C16CF4
	0x01E4D394 ADRP X0, 0x22AF000
	0x01E4D398 LDR X0, [X0 + 0x158]
	0x01E4D39C BL 0x1C16CF4
	0x01E4D3A0 MOVZ W8, 0x1
	0x01E4D3A4 STRB W8, [X22 + 0xFFE]
	0x01E4D3A8 LDR W2, [X19 + 0x80]
	0x01E4D3AC LDR X3, [X21]
	0x01E4D3B0 MOVZ W1, 0xE5
	0x01E4D3B4 MOV X0, X19
	0x01E4D3B8 BL 0x1E4CB70
	0x01E4D3BC TBZ X0, 0x0, 0x1E4D444
	0x01E4D3C0 CBNZ X20, 0x1E4D3E8
	0x01E4D3C4 ADRP X20, 0x22AF000
	0x01E4D3C8 LDR X20, [X20 + 0x160]
	0x01E4D3CC LDR X0, [X20]
	0x01E4D3D0 LDR W8, [X0 + 0xE0]
	0x01E4D3D4 CBNZ W8, 0x1E4D3E0
	0x01E4D3D8 BL 0x1C16DFC
	0x01E4D3DC LDR X0, [X20]
	0x01E4D3E0 LDR X8, [X0 + 0xB8]
	0x01E4D3E4 LDR X20, [X8]
	0x01E4D3E8 LDR X0, [X19 + 0x10]
	0x01E4D3EC CBZ X0, 0x1E4D458
	0x01E4D3F0 LDR X8, [X0]
	0x01E4D3F4 MOV X1, X20
	0x01E4D3F8 LDR X9, [X8 + 0x258]
	0x01E4D3FC LDR X2, [X8 + 0x260]
	0x01E4D400 BLR X9
	0x01E4D404 TBZ X0, 0x0, 0x1E4D444
	0x01E4D408 LDR W1, [X19 + 0x90]
	0x01E4D40C STR X20, [X19 + 0xF0]
	0x01E4D410 CMP W1, 0x3
	0x01E4D414 B.EQ 0x1E4D43C
	0x01E4D418 LDR X8, [X19 + 0x98]
	0x01E4D41C MOVZ W9, 0x3
	0x01E4D420 STR W9, [X19 + 0x90]
	0x01E4D424 CBZ X8, 0x1E4D43C
	0x01E4D428 LDR X9, [X8 + 0x18]
	0x01E4D42C LDR X0, [X8 + 0x40]
	0x01E4D430 LDR X3, [X8 + 0x28]
	0x01E4D434 MOVZ W2, 0x3
	0x01E4D438 BLR X9
	0x01E4D43C MOVZ W0, 0x1
	0x01E4D440 B 0x1E4D448
	0x01E4D444 MOV W0, W31
	0x01E4D448 LDP X20, X19, [X31 + 0x20]
	0x01E4D44C LDP X22, X21, [X31 + 0x10]
	0x01E4D450 LDR X30, [X31], #0x30
	0x01E4D454 RET
	0x01E4D458 BL 0x1C16F20
	0x01E4D45C STP X30, X21, [X31 - 0x20]!
	0x01E4D460 STP X20, X19, [X31 + 0x10]
	0x01E4D464 ADRP X21, 0x258B000
	0x01E4D468 ADRP X20, 0x22AF000
	0x01E4D46C LDRB W8, [X21 + 0xFFF]
	0x01E4D470 LDR X20, [X20 + 0x168]
	0x01E4D474 MOV X19, X0
	0x01E4D478 TBNZ X8, 0x0, 0x1E4D490
	0x01E4D47C ADRP X0, 0x22AF000
	0x01E4D480 LDR X0, [X0 + 0x168]
	0x01E4D484 BL 0x1C16CF4
	0x01E4D488 MOVZ W8, 0x1
	0x01E4D48C STRB W8, [X21 + 0xFFF]
	0x01E4D490 LDR W2, [X19 + 0x80]
	0x01E4D494 LDR X3, [X20]
	0x01E4D498 MOVZ W1, 0xE4
	0x01E4D49C MOV X0, X19
	0x01E4D4A0 BL 0x1E4CB70
	0x01E4D4A4 TBZ X0, 0x0, 0x1E4D4C8
	0x01E4D4A8 LDR X0, [X19 + 0x10]
	0x01E4D4AC CBZ X0, 0x1E4D4D8
	0x01E4D4B0 LDR X8, [X0]
	0x01E4D4B4 LDP X20, X19, [X31 + 0x10]
	0x01E4D4B8 LDR X2, [X8 + 0x268]
	0x01E4D4BC LDR X1, [X8 + 0x270]
	0x01E4D4C0 LDP X30, X21, [X31], #0x20
	0x01E4D4C4 BR X2
	0x01E4D4C8 LDP X20, X19, [X31 + 0x10]
	0x01E4D4CC MOV W0, W31
	0x01E4D4D0 LDP X30, X21, [X31], #0x20
	0x01E4D4D4 RET
	0x01E4D4D8 BL 0x1C16F20
	0x01E4D4DC STR X30, [X31 - 0x30]!
	0x01E4D4E0 STP X22, X21, [X31 + 0x10]
	0x01E4D4E4 STP X20, X19, [X31 + 0x20]
	0x01E4D4E8 ADRP X22, 0x258C000
	0x01E4D4EC ADRP X21, 0x22AF000
	0x01E4D4F0 LDRB W8, [X22]
	0x01E4D4F4 LDR X21, [X21 + 0x170]
	0x01E4D4F8 MOV X20, X1
	0x01E4D4FC MOV X19, X0
	0x01E4D500 TBNZ X8, 0x0, 0x1E4D530
	0x01E4D504 ADRP X0, 0x22AE000
	0x01E4D508 LDR X0, [X0 + 0xDC0]
	0x01E4D50C BL 0x1C16CF4
	0x01E4D510 ADRP X0, 0x22AE000
	0x01E4D514 LDR X0, [X0 + 0xDE0]
	0x01E4D518 BL 0x1C16CF4
	0x01E4D51C ADRP X0, 0x22AF000
	0x01E4D520 LDR X0, [X0 + 0x170]
	0x01E4D524 BL 0x1C16CF4
	0x01E4D528 MOVZ W8, 0x1
	0x01E4D52C STRB W8, [X22]
	0x01E4D530 LDR W2, [X19 + 0x80]
	0x01E4D534 LDR X3, [X21]
	0x01E4D538 MOVZ W1, 0xE1
	0x01E4D53C MOV X0, X19
	0x01E4D540 BL 0x1E4CB70
	0x01E4D544 TBZ X0, 0x0, 0x1E4D608
	0x01E4D548 ADRP X21, 0x22AE000
	0x01E4D54C LDR X21, [X21 + 0xDC0]
	0x01E4D550 CBNZ X20, 0x1E4D570
	0x01E4D554 ADRP X8, 0x22AE000
	0x01E4D558 LDR X8, [X8 + 0xDE0]
	0x01E4D55C LDR X0, [X8]
	0x01E4D560 BL 0x1C16F10
	0x01E4D564 MOV X1, X31
	0x01E4D568 MOV X20, X0
	0x01E4D56C BL 0x1E5932C
	0x01E4D570 LDR X0, [X21]
	0x01E4D574 BL 0x1C16F10
	0x01E4D578 MOV X1, X31
	0x01E4D57C MOV X21, X0
	0x01E4D580 BL 0x1E59334
	0x01E4D584 STR X21, [X19 + 0x128]
	0x01E4D588 CBZ X20, 0x1E4D61C
	0x01E4D58C CBZ X21, 0x1E4D61C
	0x01E4D590 LDR X8, [X20 + 0x20]
	0x01E4D594 STR X8, [X21 + 0x20]
	0x01E4D598 LDR X8, [X20 + 0x30]
	0x01E4D59C STR X8, [X21 + 0x38]
	0x01E4D5A0 LDR X8, [X20 + 0x38]
	0x01E4D5A4 STR X8, [X21 + 0x40]
	0x01E4D5A8 LDR X0, [X19 + 0x10]
	0x01E4D5AC CBZ X0, 0x1E4D61C
	0x01E4D5B0 LDR X8, [X0]
	0x01E4D5B4 MOV X1, X20
	0x01E4D5B8 LDR X9, [X8 + 0x298]
	0x01E4D5BC LDR X2, [X8 + 0x2A0]
	0x01E4D5C0 BLR X9
	0x01E4D5C4 TBZ X0, 0x0, 0x1E4D608
	0x01E4D5C8 LDR W1, [X19 + 0x90]
	0x01E4D5CC MOVZ W8, 0x2
	0x01E4D5D0 STR W8, [X19 + 0x124]
	0x01E4D5D4 CMP W1, 0x8
	0x01E4D5D8 B.EQ 0x1E4D600
	0x01E4D5DC LDR X8, [X19 + 0x98]
	0x01E4D5E0 MOVZ W9, 0x8
	0x01E4D5E4 STR W9, [X19 + 0x90]
	0x01E4D5E8 CBZ X8, 0x1E4D600
	0x01E4D5EC LDR X9, [X8 + 0x18]
	0x01E4D5F0 LDR X0, [X8 + 0x40]
	0x01E4D5F4 LDR X3, [X8 + 0x28]
	0x01E4D5F8 MOVZ W2, 0x8

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+48], X30
	003 Move [X31+56], X23
	004 Move [X31+64], X22
	005 Move [X31+72], X21
	006 Move [X31+80], X20
	007 Move [X31+88], X19
	008 Move X23, 0x258C000
	009 Move W8, [X23+4086]
	010 Move W20, W3
	011 Move X21, X2
	012 Move X22, X1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {38}
	018 Move X0, 0x22AF000
	019 Move X0, [X0+3568]
	020 Call 0x1C17CF4
	021 Move X0, 0x22AF000
	022 Move X0, [X0+3688]
	023 Call 0x1C17CF4
	024 Move X0, 0x22B0000
	025 Move X0, [X0+72]
	026 Call 0x1C17CF4
	027 Move X0, 0x22B0000
	028 Move X0, [X0+120]
	029 Call 0x1C17CF4
	030 Move X0, 0x22B0000
	031 Move X0, [X0+128]
	032 Call 0x1C17CF4
	033 Move X0, 0x22B0000
	034 Move X0, [X0+136]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X23+4086], W8
	038 Move W8, [X19+144]
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Move X8, 0x22AF000
	041 Move X8, [X8+3688]
	042 Move TEMP, 0
	043 Not TEMP
	044 Move X9, TEMP
	045 Move W10, 13
	046 Add X0, X31, 24
	047 Move X8, [X8]
	048 Move X1, X31
	049 Move [X31+40], W10
	050 Move [X31+24], X8
	051 Move [X31+32], X9
	052 Call Enum.ToString, X0
	053 Move X8, 0x22B0000
	054 Move X8, [X8+128]
	055 Move X1, X0
	056 Move X2, X31
	057 Move X8, [X8]
	058 Move X0, X8
	059 Call String.Concat, X0, X1
	060 Move W8, [X19+56]
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Compare W8, 0
	063 JumpIfEqual {70}
	064 Move X9, [X19+48]
	065 Compare X9, 0
	066 JumpIfEqual {110}
	067 Move X9, [X9+40]
	068 Compare X9, 0
	069 JumpIfEqual {110}
	070 Move X0, [X19+16]
	071 Move [X19+224], W31
	072 Move [X19+232], X31
	073 Compare W8, 0
	074 JumpIfEqual {79}
	075 Move X8, [X19+48]
	076 Compare X8, 0
	077 JumpIfEqual {79}
	078 Move X4, [X8+40]
	079 Move X4, X31
	080 Compare X0, 0
	081 JumpIfEqual {184}
	082 Move X8, [X0]
	083 Move X3, [X19+32]
	084 Move X1, X22
	085 Move X2, X21
	086 Move X9, [X8+424]
	087 Move X6, [X8+432]
	088 Move X5, X31
	089 NotImplemented "Instruction BLR not yet implemented."
	090 Move TEMP, X0
	091 And TEMP, TEMP, 1
	092 Compare TEMP, 1
	093 JumpIfNotEqual {151}
	094 Move [X19+128], W20
	095 Compare W20, 0
	096 JumpIfEqual {171}
	097 NotImplemented "Instruction CMP not yet implemented."
	098 NotImplemented "Instruction CMP not yet implemented."
	099 Move W1, [X19+144]
	100 NotImplemented "Instruction CMP not yet implemented."
	101 Move X8, [X19+152]
	102 Move W9, 16
	103 Move [X19+144], W9
	104 Compare X8, 0
	105 JumpIfEqual {183}
	106 Move X9, [X8+24]
	107 Move X0, [X8+64]
	108 Move X3, [X8+40]
	109 Move W2, 16
	110 Move X8, 0x22B0000
	111 Move X8, [X8+72]
	112 Move TEMP, 0
	113 Not TEMP
	114 Move X21, TEMP
	115 Add X0, X31, 24
	116 Move X1, X31
	117 Move X8, [X8]
	118 Move [X31+40], W20
	119 Move [X31+24], X8
	120 Move [X31+32], X21
	121 Call Enum.ToString, X0
	122 Move X8, 0x22AF000
	123 Move X8, [X8+3568]
	124 Move X20, X0
	125 Add X0, X31, 0
	126 Move X1, X31
	127 Move X8, [X8]
	128 Move [X31], X8
	129 Move [X31+8], X21
	130 Move W8, [X19+56]
	131 Move [X31+16], W8
	132 Call Enum.ToString, X0
	133 Move X8, 0x22B0000
	134 Move X8, [X8+136]
	135 Move X9, 0x22B0000
	136 Move X9, [X9+120]
	137 Move X3, X0
	138 Move X8, [X8]
	139 Move X1, X20
	140 Move X2, [X9]
	141 Move X4, X31
	142 Move X0, X8
	143 Call String.Concat, X0, X1, X2, X3
	144 Move X8, [X19]
	145 Move X2, X0
	146 Move W1, 1
	147 Move X0, X19
	148 Move X9, [X8+536]
	149 Move X3, [X8+544]
	150 NotImplemented "Instruction BLR not yet implemented."
	151 Move W0, W31
	152 Move X20, [X31+80]
	153 Move X19, [X31+88]
	154 Move X22, [X31+64]
	155 Move X21, [X31+72]
	156 Move X30, [X31+48]
	157 Move X23, [X31+56]
	158 Add X31, X31, 96
	159 Return X0
	160 Move W1, [X19+144]
	161 NotImplemented "Instruction CMP not yet implemented."
	162 Move X8, [X19+152]
	163 Move W9, 6
	164 Move [X19+144], W9
	165 Compare X8, 0
	166 JumpIfEqual {183}
	167 Move X9, [X8+24]
	168 Move X0, [X8+64]
	169 Move X3, [X8+40]
	170 Move W2, 6
	171 Move W1, [X19+144]
	172 NotImplemented "Instruction CMP not yet implemented."
	173 Move X8, [X19+152]
	174 Move W9, 12
	175 Move [X19+144], W9
	176 Compare X8, 0
	177 JumpIfEqual {183}
	178 Move X9, [X8+24]
	179 Move X0, [X8+64]
	180 Move X3, [X8+40]
	181 Move W2, 12
	182 NotImplemented "Instruction BLR not yet implemented."
	183 Move W0, 1
	184 Call 0x1C17F20

Method: System.Boolean ReconnectToMaster()

Disassembly:
	0x01E4D5FC BLR X9
	0x01E4D600 MOVZ W0, 0x1
	0x01E4D604 B 0x1E4D60C
	0x01E4D608 MOV W0, W31
	0x01E4D60C LDP X20, X19, [X31 + 0x20]
	0x01E4D610 LDP X22, X21, [X31 + 0x10]
	0x01E4D614 LDR X30, [X31], #0x30
	0x01E4D618 RET
	0x01E4D61C BL 0x1C16F20
	0x01E4D620 STP X30, X23, [X31 - 0x30]!
	0x01E4D624 STP X22, X21, [X31 + 0x10]
	0x01E4D628 STP X20, X19, [X31 + 0x20]
	0x01E4D62C ADRP X23, 0x258C000
	0x01E4D630 ADRP X22, 0x22AF000
	0x01E4D634 LDRB W8, [X23 + 0x1]
	0x01E4D638 LDR X22, [X22 + 0x178]
	0x01E4D63C MOV X20, X2
	0x01E4D640 MOV X21, X1
	0x01E4D644 MOV X19, X0
	0x01E4D648 TBNZ X8, 0x0, 0x1E4D678
	0x01E4D64C ADRP X0, 0x22AE000
	0x01E4D650 LDR X0, [X0 + 0xDC0]
	0x01E4D654 BL 0x1C16CF4
	0x01E4D658 ADRP X0, 0x22AE000
	0x01E4D65C LDR X0, [X0 + 0xDE0]
	0x01E4D660 BL 0x1C16CF4
	0x01E4D664 ADRP X0, 0x22AF000
	0x01E4D668 LDR X0, [X0 + 0x178]
	0x01E4D66C BL 0x1C16CF4
	0x01E4D670 MOVZ W8, 0x1
	0x01E4D674 STRB W8, [X23 + 0x1]
	0x01E4D678 LDR W2, [X19 + 0x80]
	0x01E4D67C LDR X3, [X22]
	0x01E4D680 MOVZ W1, 0xE1
	0x01E4D684 MOV X0, X19
	0x01E4D688 BL 0x1E4CB70
	0x01E4D68C TBZ X0, 0x0, 0x1E4D76C
	0x01E4D690 CBZ X21, 0x1E4D69C
	0x01E4D694 CBNZ X20, 0x1E4D6DC
	0x01E4D698 B 0x1E4D6BC
	0x01E4D69C ADRP X8, 0x22AE000
	0x01E4D6A0 LDR X8, [X8 + 0xDE0]
	0x01E4D6A4 LDR X0, [X8]
	0x01E4D6A8 BL 0x1C16F10
	0x01E4D6AC MOV X1, X31
	0x01E4D6B0 MOV X21, X0
	0x01E4D6B4 BL 0x1E5932C
	0x01E4D6B8 CBNZ X20, 0x1E4D6DC
	0x01E4D6BC ADRP X8, 0x22AE000
	0x01E4D6C0 LDR X8, [X8 + 0xDC0]
	0x01E4D6C4 LDR X0, [X8]
	0x01E4D6C8 BL 0x1C16F10
	0x01E4D6CC MOV X1, X31
	0x01E4D6D0 MOV X20, X0
	0x01E4D6D4 BL 0x1E59334
	0x01E4D6D8 CBZ X20, 0x1E4D780
	0x01E4D6DC MOVZ W8, 0x1
	0x01E4D6E0 STRB W8, [X20 + 0x31]
	0x01E4D6E4 STR X20, [X19 + 0x128]
	0x01E4D6E8 CBZ X21, 0x1E4D780
	0x01E4D6EC LDR X8, [X21 + 0x20]
	0x01E4D6F0 STR X8, [X20 + 0x20]
	0x01E4D6F4 LDR X8, [X21 + 0x30]
	0x01E4D6F8 STR X8, [X20 + 0x38]
	0x01E4D6FC LDR X8, [X21 + 0x38]
	0x01E4D700 CBZ X8, 0x1E4D708
	0x01E4D704 STR X8, [X20 + 0x40]
	0x01E4D708 LDR X0, [X19 + 0x10]
	0x01E4D70C CBZ X0, 0x1E4D780
	0x01E4D710 LDR X8, [X0]
	0x01E4D714 MOV X1, X21
	0x01E4D718 MOV X2, X20
	0x01E4D71C LDR X9, [X8 + 0x2A8]
	0x01E4D720 LDR X3, [X8 + 0x2B0]
	0x01E4D724 BLR X9
	0x01E4D728 TBZ X0, 0x0, 0x1E4D76C
	0x01E4D72C LDR W1, [X19 + 0x90]
	0x01E4D730 MOVZ W8, 0x3
	0x01E4D734 STR W8, [X19 + 0x124]
	0x01E4D738 CMP W1, 0x8
	0x01E4D73C B.EQ 0x1E4D764
	0x01E4D740 LDR X8, [X19 + 0x98]
	0x01E4D744 MOVZ W9, 0x8
	0x01E4D748 STR W9, [X19 + 0x90]
	0x01E4D74C CBZ X8, 0x1E4D764
	0x01E4D750 LDR X9, [X8 + 0x18]
	0x01E4D754 LDR X0, [X8 + 0x40]
	0x01E4D758 LDR X3, [X8 + 0x28]
	0x01E4D75C MOVZ W2, 0x8
	0x01E4D760 BLR X9
	0x01E4D764 MOVZ W0, 0x1
	0x01E4D768 B 0x1E4D770
	0x01E4D76C MOV W0, W31
	0x01E4D770 LDP X20, X19, [X31 + 0x20]
	0x01E4D774 LDP X22, X21, [X31 + 0x10]
	0x01E4D778 LDP X30, X23, [X31], #0x30
	0x01E4D77C RET
	0x01E4D780 BL 0x1C16F20
	0x01E4D784 STR X30, [X31 - 0x30]!
	0x01E4D788 STP X22, X21, [X31 + 0x10]
	0x01E4D78C STP X20, X19, [X31 + 0x20]
	0x01E4D790 ADRP X22, 0x258C000
	0x01E4D794 ADRP X21, 0x22AF000
	0x01E4D798 LDRB W8, [X22 + 0x2]
	0x01E4D79C LDR X21, [X21 + 0x180]
	0x01E4D7A0 MOV X20, X1
	0x01E4D7A4 MOV X19, X0
	0x01E4D7A8 TBNZ X8, 0x0, 0x1E4D7C0
	0x01E4D7AC ADRP X0, 0x22AF000
	0x01E4D7B0 LDR X0, [X0 + 0x180]
	0x01E4D7B4 BL 0x1C16CF4

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+32], X30
	003 Move [X31+40], X21
	004 Move [X31+48], X20
	005 Move [X31+56], X19
	006 Move X20, 0x258C000
	007 Move W8, [X20+4087]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {33}
	013 Move X0, 0x22AB000
	014 Move X0, [X0+3992]
	015 Call 0x1C17CF4
	016 Move X0, 0x22AF000
	017 Move X0, [X0+3392]
	018 Call 0x1C17CF4
	019 Move X0, 0x22B0000
	020 Move X0, [X0+144]
	021 Call 0x1C17CF4
	022 Move X0, 0x22B0000
	023 Move X0, [X0+152]
	024 Call 0x1C17CF4
	025 Move X0, 0x22B0000
	026 Move X0, [X0+160]
	027 Call 0x1C17CF4
	028 Move X0, 0x22B0000
	029 Move X0, [X0+168]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X20+4087], W8
	033 Move X0, [X19+16]
	034 Compare X0, 0
	035 JumpIfEqual {129}
	036 Move X1, X31
	037 Call PhotonPeer.get_PeerState, X0
	038 And W31, W0, 255
	039 Move X0, [X19+16]
	040 Compare X0, 0
	041 JumpIfEqual {129}
	042 Move X20, 0x22AF000
	043 Move X21, 0x22B0000
	044 Move X20, [X20+3392]
	045 Move X21, [X21+168]
	046 Move X1, X31
	047 Call PhotonPeer.get_PeerState, X0
	048 Move X8, [X20]
	049 Move TEMP, 0
	050 Not TEMP
	051 Move X9, TEMP
	052 Move [X31+24], W0
	053 Add X0, X31, 8
	054 Move X1, X31
	055 Move [X31+8], X8
	056 Move [X31+16], X9
	057 Call Enum.ToString, X0
	058 Move X8, [X21]
	059 Move X1, X0
	060 Move X2, X31
	061 Move X0, X8
	062 Call String.Concat, X0, X1
	063 Move X8, [X19]
	064 Move X2, X0
	065 Move X0, [X19+112]
	066 Move X1, X31
	067 Call String.IsNullOrEmpty, X0
	068 Move TEMP, X0
	069 And TEMP, TEMP, 1
	070 Compare TEMP, 1
	071 JumpIfNotEqual {75}
	072 Move X9, 0x22B0000
	073 Move X8, [X19]
	074 Move X9, [X9+160]
	075 Move X8, [X19+72]
	076 Compare X8, 0
	077 JumpIfEqual {113}
	078 Move X20, [X19+48]
	079 Compare X20, 0
	080 JumpIfNotEqual {100}
	081 Move X9, 0x22B0000
	082 Move X8, [X19]
	083 Move X9, [X9+144]
	084 Move W1, 2
	085 Move X0, X19
	086 Move X3, [X8+544]
	087 Move X2, [X9]
	088 Move X9, [X8+536]
	089 NotImplemented "Instruction BLR not yet implemented."
	090 Move X8, 0x22AB000
	091 Move X8, [X8+3992]
	092 Move X0, [X8]
	093 Call 0x1C17F10
	094 Move X1, X31
	095 Move X20, X0
	096 Call AuthenticationValues..ctor, X0
	097 Move [X19+48], X20
	098 Compare X20, 0
	099 JumpIfEqual {129}
	100 Move X8, [X19+72]
	101 Move X0, X19
	102 Move X30, [X31+32]
	103 Move X21, [X31+40]
	104 Move W3, W31
	105 Move [X20+40], X8
	106 Move X1, [X19+112]
	107 Move X2, [X19+136]
	108 Move X20, [X31+48]
	109 Move X19, [X31+56]
	110 Add X31, X31, 64
	111 Call LoadBalancingClient.Connect, X0, X1, X2, X3
	112 Return X0
	113 Move X9, 0x22B0000
	114 Move X8, [X19]
	115 Move X9, [X9+152]
	116 Move X2, [X9]
	117 Move X9, [X8+536]
	118 Move X3, [X8+544]
	119 Move W1, 2
	120 Move X0, X19
	121 NotImplemented "Instruction BLR not yet implemented."
	122 Move X20, [X31+48]
	123 Move X19, [X31+56]
	124 Move X30, [X31+32]
	125 Move X21, [X31+40]
	126 Move W0, W31
	127 Add X31, X31, 64
	128 Return X0
	129 Call 0x1C17F20

Method: System.Boolean ReconnectAndRejoin()

Disassembly:
	0x01E4D7B8 MOVZ W8, 0x1
	0x01E4D7BC STRB W8, [X22 + 0x2]
	0x01E4D7C0 LDR W2, [X19 + 0x80]
	0x01E4D7C4 LDR X3, [X21]
	0x01E4D7C8 MOVZ W1, 0xE3
	0x01E4D7CC MOV X0, X19
	0x01E4D7D0 BL 0x1E4CB70
	0x01E4D7D4 TBZ X0, 0x0, 0x1E4D850
	0x01E4D7D8 CBZ X20, 0x1E4D864
	0x01E4D7DC LDR W8, [X19 + 0x80]
	0x01E4D7E0 CMP W8, 0x1
	0x01E4D7E4 CSET W8, EQ
	0x01E4D7E8 STRB W8, [X20 + 0x30]
	0x01E4D7EC B.EQ 0x1E4D7F4
	0x01E4D7F0 STR X20, [X19 + 0x128]
	0x01E4D7F4 LDR X0, [X19 + 0x10]
	0x01E4D7F8 CBZ X0, 0x1E4D864
	0x01E4D7FC LDR X8, [X0]
	0x01E4D800 MOV X1, X20
	0x01E4D804 LDR X9, [X8 + 0x278]
	0x01E4D808 LDR X2, [X8 + 0x280]
	0x01E4D80C BLR X9
	0x01E4D810 TBZ X0, 0x0, 0x1E4D850
	0x01E4D814 LDR W1, [X19 + 0x90]
	0x01E4D818 STR W31, [X19 + 0x124]
	0x01E4D81C CMP W1, 0x8
	0x01E4D820 B.EQ 0x1E4D848
	0x01E4D824 LDR X8, [X19 + 0x98]
	0x01E4D828 MOVZ W9, 0x8
	0x01E4D82C STR W9, [X19 + 0x90]
	0x01E4D830 CBZ X8, 0x1E4D848
	0x01E4D834 LDR X9, [X8 + 0x18]
	0x01E4D838 LDR X0, [X8 + 0x40]
	0x01E4D83C LDR X3, [X8 + 0x28]
	0x01E4D840 MOVZ W2, 0x8
	0x01E4D844 BLR X9
	0x01E4D848 MOVZ W0, 0x1
	0x01E4D84C B 0x1E4D854
	0x01E4D850 MOV W0, W31
	0x01E4D854 LDP X20, X19, [X31 + 0x20]
	0x01E4D858 LDP X22, X21, [X31 + 0x10]
	0x01E4D85C LDR X30, [X31], #0x30
	0x01E4D860 RET
	0x01E4D864 BL 0x1C16F20
	0x01E4D868 STR X30, [X31 - 0x30]!
	0x01E4D86C STP X22, X21, [X31 + 0x10]
	0x01E4D870 STP X20, X19, [X31 + 0x20]
	0x01E4D874 ADRP X22, 0x258C000
	0x01E4D878 ADRP X21, 0x22AF000
	0x01E4D87C LDRB W8, [X22 + 0x3]
	0x01E4D880 LDR X21, [X21 + 0x188]
	0x01E4D884 MOV X20, X1
	0x01E4D888 MOV X19, X0
	0x01E4D88C TBNZ X8, 0x0, 0x1E4D8A4
	0x01E4D890 ADRP X0, 0x22AF000
	0x01E4D894 LDR X0, [X0 + 0x188]
	0x01E4D898 BL 0x1C16CF4
	0x01E4D89C MOVZ W8, 0x1
	0x01E4D8A0 STRB W8, [X22 + 0x3]
	0x01E4D8A4 LDR W2, [X19 + 0x80]
	0x01E4D8A8 LDR X3, [X21]
	0x01E4D8AC MOVZ W1, 0xE2
	0x01E4D8B0 MOV X0, X19
	0x01E4D8B4 BL 0x1E4CB70
	0x01E4D8B8 TBZ X0, 0x0, 0x1E4D940
	0x01E4D8BC CBZ X20, 0x1E4D954
	0x01E4D8C0 LDR W8, [X19 + 0x80]
	0x01E4D8C4 MOVZ W9, 0x1
	0x01E4D8C8 STRB W9, [X20 + 0x31]
	0x01E4D8CC CMP W8, 0x1
	0x01E4D8D0 CSET W8, EQ
	0x01E4D8D4 STRB W8, [X20 + 0x30]
	0x01E4D8D8 B.EQ 0x1E4D8E0
	0x01E4D8DC STR X20, [X19 + 0x128]
	0x01E4D8E0 LDR X0, [X19 + 0x10]
	0x01E4D8E4 CBZ X0, 0x1E4D954
	0x01E4D8E8 LDR X8, [X0]
	0x01E4D8EC MOV X1, X20
	0x01E4D8F0 LDR X9, [X8 + 0x288]
	0x01E4D8F4 LDR X2, [X8 + 0x290]
	0x01E4D8F8 BLR X9
	0x01E4D8FC TBZ X0, 0x0, 0x1E4D940
	0x01E4D900 LDR W1, [X19 + 0x90]
	0x01E4D904 MOVZ W8, 0x4
	0x01E4D908 STR W8, [X19 + 0x124]
	0x01E4D90C CMP W1, 0x8
	0x01E4D910 B.EQ 0x1E4D938
	0x01E4D914 LDR X8, [X19 + 0x98]
	0x01E4D918 MOVZ W9, 0x8
	0x01E4D91C STR W9, [X19 + 0x90]
	0x01E4D920 CBZ X8, 0x1E4D938
	0x01E4D924 LDR X9, [X8 + 0x18]
	0x01E4D928 LDR X0, [X8 + 0x40]
	0x01E4D92C LDR X3, [X8 + 0x28]
	0x01E4D930 MOVZ W2, 0x8
	0x01E4D934 BLR X9
	0x01E4D938 MOVZ W0, 0x1
	0x01E4D93C B 0x1E4D944
	0x01E4D940 MOV W0, W31
	0x01E4D944 LDP X20, X19, [X31 + 0x20]
	0x01E4D948 LDP X22, X21, [X31 + 0x10]
	0x01E4D94C LDR X30, [X31], #0x30
	0x01E4D950 RET
	0x01E4D954 BL 0x1C16F20
	0x01E4D958 STR X30, [X31 - 0x30]!
	0x01E4D95C STP X22, X21, [X31 + 0x10]
	0x01E4D960 STP X20, X19, [X31 + 0x20]
	0x01E4D964 ADRP X22, 0x258C000
	0x01E4D968 ADRP X21, 0x22AF000
	0x01E4D96C LDRB W8, [X22 + 0x4]
	0x01E4D970 LDR X21, [X21 + 0x190]
	0x01E4D974 MOV X20, X1
	0x01E4D978 MOV X19, X0
	0x01E4D97C TBNZ X8, 0x0, 0x1E4D994
	0x01E4D980 ADRP X0, 0x22AF000
	0x01E4D984 LDR X0, [X0 + 0x190]
	0x01E4D988 BL 0x1C16CF4
	0x01E4D98C MOVZ W8, 0x1

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+32], X30
	003 Move [X31+40], X21
	004 Move [X31+48], X20
	005 Move [X31+56], X19
	006 Move X20, 0x258C000
	007 Move W8, [X20+4088]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {33}
	013 Move X0, 0x22AB000
	014 Move X0, [X0+3992]
	015 Call 0x1C17CF4
	016 Move X0, 0x22AF000
	017 Move X0, [X0+3392]
	018 Call 0x1C17CF4
	019 Move X0, 0x22B0000
	020 Move X0, [X0+176]
	021 Call 0x1C17CF4
	022 Move X0, 0x22B0000
	023 Move X0, [X0+184]
	024 Call 0x1C17CF4
	025 Move X0, 0x22B0000
	026 Move X0, [X0+192]
	027 Call 0x1C17CF4
	028 Move X0, 0x22B0000
	029 Move X0, [X0+200]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X20+4088], W8
	033 Move X0, [X19+16]
	034 Compare X0, 0
	035 JumpIfEqual {140}
	036 Move X1, X31
	037 Call PhotonPeer.get_PeerState, X0
	038 And W31, W0, 255
	039 Move X0, [X19+16]
	040 Compare X0, 0
	041 JumpIfEqual {140}
	042 Move X20, 0x22AF000
	043 Move X21, 0x22B0000
	044 Move X20, [X20+3392]
	045 Move X21, [X21+176]
	046 Move X1, X31
	047 Call PhotonPeer.get_PeerState, X0
	048 Move X8, [X20]
	049 Move TEMP, 0
	050 Not TEMP
	051 Move X9, TEMP
	052 Move [X31+24], W0
	053 Add X0, X31, 8
	054 Move X1, X31
	055 Move [X31+8], X8
	056 Move [X31+16], X9
	057 Call Enum.ToString, X0
	058 Move X8, [X21]
	059 Move X1, X0
	060 Move X2, X31
	061 Move X0, X8
	062 Call String.Concat, X0, X1
	063 Move X8, [X19]
	064 Move X2, X0
	065 Move X0, [X19+120]
	066 Move X1, X31
	067 Call String.IsNullOrEmpty, X0
	068 Move TEMP, X0
	069 And TEMP, TEMP, 1
	070 Compare TEMP, 1
	071 JumpIfNotEqual {75}
	072 Move X9, 0x22B0000
	073 Move X8, [X19]
	074 Move X9, [X9+192]
	075 Move X8, [X19+296]
	076 Compare X8, 0
	077 JumpIfEqual {121}
	078 Move X8, [X19+72]
	079 Compare X8, 0
	080 JumpIfEqual {124}
	081 Move X20, [X19+48]
	082 Compare X20, 0
	083 JumpIfNotEqual {94}
	084 Move X8, 0x22AB000
	085 Move X8, [X8+3992]
	086 Move X0, [X8]
	087 Call 0x1C17F10
	088 Move X1, X31
	089 Move X20, X0
	090 Call AuthenticationValues..ctor, X0
	091 Move [X19+48], X20
	092 Compare X20, 0
	093 JumpIfEqual {140}
	094 Move X8, [X19+72]
	095 Move X1, X31
	096 Move [X20+40], X8
	097 Move X0, [X19+120]
	098 Call String.IsNullOrEmpty, X0
	099 Move TEMP, X0
	100 And TEMP, TEMP, 1
	101 Compare TEMP, 1
	102 JumpIfEqual {133}
	103 Move X8, [X19+296]
	104 Compare X8, 0
	105 JumpIfEqual {133}
	106 Move W9, 1
	107 Move W10, 3
	108 Move [X19+292], W9
	109 Move [X8+49], W10
	110 Move X1, [X19+120]
	111 Move X2, [X19+136]
	112 Move X0, X19
	113 Move X20, [X31+48]
	114 Move X19, [X31+56]
	115 Move X30, [X31+32]
	116 Move X21, [X31+40]
	117 Move W3, 1
	118 Add X31, X31, 64
	119 Call LoadBalancingClient.Connect, X0, X1, X2, X3
	120 Return X0
	121 Move X9, 0x22B0000
	122 Move X8, [X19]
	123 Move X9, [X9+200]
	124 Move X9, 0x22B0000
	125 Move X8, [X19]
	126 Move X9, [X9+184]
	127 Move X2, [X9]
	128 Move X9, [X8+536]
	129 Move X3, [X8+544]
	130 Move W1, 2
	131 Move X0, X19
	132 NotImplemented "Instruction BLR not yet implemented."
	133 Move X20, [X31+48]
	134 Move X19, [X31+56]
	135 Move X30, [X31+32]
	136 Move X21, [X31+40]
	137 Move W0, W31
	138 Add X31, X31, 64
	139 Return X0
	140 Call 0x1C17F20

Method: System.Void Disconnect(Fusion.Photon.Realtime.DisconnectCause cause = 17)

Disassembly:
	0x01E48DC0 CBNZ W9, 0x1E48DC8
	0x01E48DC4 BL 0x1C16DFC
	0x01E48DC8 ADD X0, X31, 0x18
	0x01E48DCC ADD X2, X31, 0x10
	0x01E48DD0 MOV X1, X20
	0x01E48DD4 MOV X3, X31
	0x01E48DD8 ADD X23, X31, 0x18
	0x01E48DDC BL 0x3506B64
	0x01E48DE0 LDR X8, [X21]
	0x01E48DE4 ORR X0, X23, 0x7
	0x01E48DE8 LDR X8, [X8 + 0xB8]
	0x01E48DEC LDR X1, [X8 + 0x8]
	0x01E48DF0 ADD X2, X31, 0x10
	0x01E48DF4 MOV X3, X31
	0x01E48DF8 BL 0x3506B64
	0x01E48DFC MOV X20, X31
	0x01E48E00 LDRB W8, [X31 + 0x14]
	0x01E48E04 CBZ W8, 0x1E48E14
	0x01E48E08 MOV X0, X19
	0x01E48E0C MOV X1, X31
	0x01E48E10 BL 0x33E14E4
	0x01E48E14 CBNZ X20, 0x1E48E4C
	0x01E48E18 LDR X8, [X31 + 0x18]
	0x01E48E1C LDR X0, [X22]
	0x01E48E20 STR X8, [X31 + 0x8]
	0x01E48E24 B 0x1E48E30
	0x01E48E28 LDR X0, [X22]
	0x01E48E2C STR X31, [X31 + 0x8]
	0x01E48E30 ADD X1, X31, 0x8
	0x01E48E34 BL 0x1C16E04
	0x01E48E38 LDP X20, X19, [X31 + 0x40]
	0x01E48E3C LDP X22, X21, [X31 + 0x30]
	0x01E48E40 LDP X30, X23, [X31 + 0x20]
	0x01E48E44 ADD X31, X31, 0x50
	0x01E48E48 RET
	0x01E48E4C MOV X0, X20
	0x01E48E50 BL 0x1C16F18
	0x01E48E54 BL 0x1C16F20
	0x01E48E58 B 0x1E48E6C
	0x01E48E5C B 0x1E48E6C
	0x01E48E60 B 0x1E48E6C
	0x01E48E64 B 0x1E48E6C
	0x01E48E68 B 0x1E48E6C
	0x01E48E6C MOV X21, X0
	0x01E48E70 CMP W1, 0x1
	0x01E48E74 B.NE 0x1E48E8C
	0x01E48E78 MOV X0, X21
	0x01E48E7C BL 0x3EB1AD0
	0x01E48E80 LDR X20, [X0]
	0x01E48E84 BL 0x3EB1AE0
	0x01E48E88 B 0x1E48E00
	0x01E48E8C MOV X20, X31
	0x01E48E90 B 0x1E48E98
	0x01E48E94 MOV X21, X0
	0x01E48E98 LDRB W8, [X31 + 0x14]
	0x01E48E9C CBZ W8, 0x1E48EAC
	0x01E48EA0 MOV X0, X19
	0x01E48EA4 MOV X1, X31
	0x01E48EA8 BL 0x33E14E4
	0x01E48EAC CBNZ X20, 0x1E48EB8
	0x01E48EB0 MOV X0, X21
	0x01E48EB4 BL 0x1D2C690
	0x01E48EB8 MOV X0, X20
	0x01E48EBC BL 0x1C16F18
	0x01E48EC0 BL 0x1990590
	0x01E48EC4 SUB X31, X31, 0x50
	0x01E48EC8 STP D11, D10, [X31 + 0x10]
	0x01E48ECC STP D9, D8, [X31 + 0x20]
	0x01E48ED0 STP X30, X21, [X31 + 0x30]
	0x01E48ED4 STP X20, X19, [X31 + 0x40]
	0x01E48ED8 ADRP X21, 0x2590000
	0x01E48EDC LDRB W8, [X21 + 0xFD9]
	0x01E48EE0 MOV X19, X1
	0x01E48EE4 MOV X20, X0
	0x01E48EE8 TBNZ X8, 0x0, 0x1E48F18
	0x01E48EEC ADRP X0, 0x22B3000
	0x01E48EF0 LDR X0, [X0 + 0xBB8]
	0x01E48EF4 BL 0x1C16CF4
	0x01E48EF8 ADRP X0, 0x22B3000
	0x01E48EFC LDR X0, [X0 + 0xF00]
	0x01E48F00 BL 0x1C16CF4
	0x01E48F04 ADRP X0, 0x22AC000
	0x01E48F08 LDR X0, [X0 + 0x5A8]
	0x01E48F0C BL 0x1C16CF4
	0x01E48F10 MOVZ W8, 0x1
	0x01E48F14 STRB W8, [X21 + 0xFD9]
	0x01E48F18 STRB W31, [X31 + 0xC]
	0x01E48F1C STR W31, [X31 + 0x8]
	0x01E48F20 CBZ X19, 0x1E4906C
	0x01E48F24 ADRP X8, 0x22AC000
	0x01E48F28 LDR X8, [X8 + 0x5A8]
	0x01E48F2C LDR X9, [X19]
	0x01E48F30 LDR X1, [X8]
	0x01E48F34 LDR X8, [X9 + 0x40]
	0x01E48F38 LDR X9, [X1 + 0x40]
	0x01E48F3C CMP X8, X9
	0x01E48F40 B.NE 0x1E49070
	0x01E48F44 ADRP X21, 0x22B3000
	0x01E48F48 LDR X21, [X21 + 0xBB8]
	0x01E48F4C MOV X0, X19
	0x01E48F50 BL 0x1C16E08
	0x01E48F54 MOV X8, X0
	0x01E48F58 LDR X0, [X21]
	0x01E48F5C LDP S10, S9, [X8]
	0x01E48F60 LDP S8, S11, [X8 + 0x8]
	0x01E48F64 LDR W9, [X0 + 0xE0]
	0x01E48F68 CBNZ W9, 0x1E48F74
	0x01E48F6C BL 0x1C16DFC
	0x01E48F70 LDR X0, [X21]
	0x01E48F74 LDR X8, [X0 + 0xB8]
	0x01E48F78 LDR X19, [X8 + 0x10]
	0x01E48F7C STRB W31, [X31 + 0xC]
	0x01E48F80 ADD X1, X31, 0xC
	0x01E48F84 MOV X0, X19
	0x01E48F88 MOV X2, X31
	0x01E48F8C BL 0x33DE64C
	0x01E48F90 LDR X0, [X21]
	0x01E48F94 LDR W8, [X0 + 0xE0]
	0x01E48F98 CBNZ W8, 0x1E48FA4
	0x01E48F9C BL 0x1C16DFC
	0x01E48FA0 LDR X0, [X21]
	0x01E48FA4 ADRP X9, 0x22B3000
	0x01E48FA8 LDR X8, [X0 + 0xB8]
	0x01E48FAC LDR X9, [X9 + 0xF00]
	0x01E48FB0 LDR X21, [X8 + 0x10]
	0x01E48FB4 LDR X0, [X9]
	0x01E48FB8 STR W31, [X31 + 0x8]
	0x01E48FBC LDR W8, [X0 + 0xE0]
	0x01E48FC0 CBNZ W8, 0x1E48FC8
	0x01E48FC4 BL 0x1C16DFC
	0x01E48FC8 ADD X1, X31, 0x8
	0x01E48FCC MOV V0.16B, V11.16B
	0x01E48FD0 MOV X0, X21
	0x01E48FD4 MOV X2, X31
	0x01E48FD8 BL 0x3506860

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+80], X30
	003 Move [X31+96], X22
	004 Move [X31+104], X21
	005 Move [X31+112], X20
	006 Move [X31+120], X19
	007 Move X21, 0x2591000
	008 Move W8, [X21+4089]
	009 Move W20, W1
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {35}
	015 Move X0, 0x22B4000
	016 Move X0, [X0+3688]
	017 Call 0x1C17CF4
	018 Move X0, 0x22B4000
	019 Move X0, [X0+3696]
	020 Call 0x1C17CF4
	021 Move X0, 0x22AC000
	022 Move X0, [X0+2760]
	023 Call 0x1C17CF4
	024 Move X0, 0x22B4000
	025 Move X0, [X0+3704]
	026 Call 0x1C17CF4
	027 Move X0, 0x22B4000
	028 Move X0, [X0+3712]
	029 Call 0x1C17CF4
	030 Move X0, 0x22B4000
	031 Move X0, [X0+3720]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X21+4089], W8
	035 Move W1, [X19+144]
	036 Compare W1, 0
	037 JumpIfEqual {40}
	038 NotImplemented "Instruction CMP not yet implemented."
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Move X8, 0x22AC000
	041 Move X8, [X8+2760]
	042 Move W1, 6
	043 Move X0, [X8]
	044 Call 0x1C17D6C
	045 Compare X0, 0
	046 JumpIfEqual {152}
	047 Move W8, [X0+24]
	048 Move X21, X0
	049 Compare W8, 0
	050 JumpIfEqual {151}
	051 Move X8, 0x22B4000
	052 Move X8, [X8+3720]
	053 Move X9, 0x22B4000
	054 Move TEMP, 0
	055 Not TEMP
	056 Move X10, TEMP
	057 Add X0, X31, 56
	058 Move X8, [X8]
	059 Move X9, [X9+3688]
	060 Move X1, X31
	061 Move [X21+32], X8
	062 Move X8, [X9]
	063 Move W9, [X19+144]
	064 Move [X31+56], X8
	065 Move [X31+64], X10
	066 Move [X31+72], W9
	067 Call Enum.ToString, X0
	068 Move W8, [X21+24]
	069 NotImplemented "Instruction CMP not yet implemented."
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Move [X21+40], X0
	072 Move X8, 0x22B4000
	073 Move X8, [X8+3704]
	074 Move X22, 0x22B4000
	075 Move TEMP, 0
	076 Not TEMP
	077 Move X10, TEMP
	078 Add X0, X31, 32
	079 Move X8, [X8]
	080 Move X22, [X22+3696]
	081 Move X1, X31
	082 Move [X21+48], X8
	083 Move X8, [X22]
	084 Move W9, [X19+224]
	085 Move [X31+32], X8
	086 Move [X31+40], X10
	087 Move [X31+48], W9
	088 Call Enum.ToString, X0
	089 Move W8, [X21+24]
	090 NotImplemented "Instruction CMP not yet implemented."
	091 NotImplemented "Instruction CMP not yet implemented."
	092 Move [X21+56], X0
	093 Move X8, 0x22B4000
	094 Move X8, [X8+3712]
	095 Move TEMP, 0
	096 Not TEMP
	097 Move X9, TEMP
	098 Add X0, X31, 8
	099 Move X1, X31
	100 Move X8, [X8]
	101 Move [X21+64], X8
	102 Move X8, [X22]
	103 Move [X31+24], W20
	104 Move [X31+8], X8
	105 Move [X31+16], X9
	106 Call Enum.ToString, X0
	107 Move W8, [X21+24]
	108 NotImplemented "Instruction CMP not yet implemented."
	109 Move [X21+72], X0
	110 Move X0, X21
	111 Move X1, X31
	112 Call String.Concat, X0
	113 Move X8, [X19]
	114 Move X2, X0
	115 Move W1, 3
	116 Move X0, X19
	117 Move X9, [X8+536]
	118 Move X3, [X8+544]
	119 NotImplemented "Instruction BLR not yet implemented."
	120 Move X20, [X31+112]
	121 Move X19, [X31+120]
	122 Move X22, [X31+96]
	123 Move X21, [X31+104]
	124 Move X30, [X31+80]
	125 Add X31, X31, 128
	126 Return 
	127 Move X8, [X19+152]
	128 Move W9, 13
	129 Move [X19+144], W9
	130 Compare X8, 0
	131 JumpIfEqual {137}
	132 Move X9, [X8+24]
	133 Move X0, [X8+64]
	134 Move X3, [X8+40]
	135 Move W2, 13
	136 NotImplemented "Instruction BLR not yet implemented."
	137 Move X0, [X19+16]
	138 Move [X19+224], W20
	139 Compare X0, 0
	140 JumpIfEqual {152}
	141 Move X8, [X0]
	142 Move X20, [X31+112]
	143 Move X19, [X31+120]
	144 Move X22, [X31+96]
	145 Move X21, [X31+104]
	146 Move X30, [X31+80]
	147 Move X2, [X8+440]
	148 Move X1, [X8+448]
	149 Add X31, X31, 128
	150 CallNoReturn X2
	151 Call 0x1C17F28
	152 Call 0x1C17F20

Method: System.Void DisconnectToReconnect()

Disassembly:
	0x01E4D990 STRB W8, [X22 + 0x4]
	0x01E4D994 LDR W2, [X19 + 0x80]
	0x01E4D998 LDR X3, [X21]
	0x01E4D99C MOVZ W1, 0xE2
	0x01E4D9A0 MOV X0, X19
	0x01E4D9A4 BL 0x1E4CB70
	0x01E4D9A8 TBZ X0, 0x0, 0x1E4DA34
	0x01E4D9AC CBZ X20, 0x1E4DA48
	0x01E4D9B0 LDR W8, [X19 + 0x80]
	0x01E4D9B4 CMP W8, 0x1
	0x01E4D9B8 CSET W8, EQ
	0x01E4D9BC STRB W8, [X20 + 0x30]
	0x01E4D9C0 B.EQ 0x1E4D9C8
	0x01E4D9C4 STR X20, [X19 + 0x128]
	0x01E4D9C8 LDR X0, [X19 + 0x10]
	0x01E4D9CC CBZ X0, 0x1E4DA48
	0x01E4D9D0 LDR X8, [X0]
	0x01E4D9D4 MOV X1, X20
	0x01E4D9D8 LDR X9, [X8 + 0x288]
	0x01E4D9DC LDR X2, [X8 + 0x290]
	0x01E4D9E0 BLR X9
	0x01E4D9E4 TBZ X0, 0x0, 0x1E4DA34
	0x01E4D9E8 LDRB W8, [X20 + 0x31]
	0x01E4D9EC LDR W1, [X19 + 0x90]
	0x01E4D9F0 MOVZ W9, 0x4
	0x01E4D9F4 CMP W8, 0x1
	0x01E4D9F8 CSINC W8, W9, W31, EQ
	0x01E4D9FC CMP W1, 0x8
	0x01E4DA00 STR W8, [X19 + 0x124]
	0x01E4DA04 B.EQ 0x1E4DA2C
	0x01E4DA08 LDR X8, [X19 + 0x98]
	0x01E4DA0C MOVZ W9, 0x8
	0x01E4DA10 STR W9, [X19 + 0x90]
	0x01E4DA14 CBZ X8, 0x1E4DA2C
	0x01E4DA18 LDR X9, [X8 + 0x18]
	0x01E4DA1C LDR X0, [X8 + 0x40]
	0x01E4DA20 LDR X3, [X8 + 0x28]
	0x01E4DA24 MOVZ W2, 0x8
	0x01E4DA28 BLR X9
	0x01E4DA2C MOVZ W0, 0x1
	0x01E4DA30 B 0x1E4DA38
	0x01E4DA34 MOV W0, W31
	0x01E4DA38 LDP X20, X19, [X31 + 0x20]
	0x01E4DA3C LDP X22, X21, [X31 + 0x10]
	0x01E4DA40 LDR X30, [X31], #0x30
	0x01E4DA44 RET
	0x01E4DA48 BL 0x1C16F20
	0x01E4DA4C STP X30, X23, [X31 - 0x30]!
	0x01E4DA50 STP X22, X21, [X31 + 0x10]
	0x01E4DA54 STP X20, X19, [X31 + 0x20]
	0x01E4DA58 ADRP X23, 0x258C000

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move W8, [X0+128]
	004 Move X19, X0
	005 Compare W8, 0
	006 JumpIfEqual {31}
	007 NotImplemented "Instruction CMP not yet implemented."
	008 NotImplemented "Instruction CMP not yet implemented."
	009 Move W1, [X19+144]
	010 NotImplemented "Instruction CMP not yet implemented."
	011 Move X8, [X19+152]
	012 Move W9, 18
	013 Move [X19+144], W9
	014 Compare X8, 0
	015 JumpIfEqual {43}
	016 Move X9, [X8+24]
	017 Move X0, [X8+64]
	018 Move X3, [X8+40]
	019 Move W2, 18
	020 Move W1, [X19+144]
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Move X8, [X19+152]
	023 Move W9, 11
	024 Move [X19+144], W9
	025 Compare X8, 0
	026 JumpIfEqual {43}
	027 Move X9, [X8+24]
	028 Move X0, [X8+64]
	029 Move X3, [X8+40]
	030 Move W2, 11
	031 Move W1, [X19+144]
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move X8, [X19+152]
	034 Move W9, 5
	035 Move [X19+144], W9
	036 Compare X8, 0
	037 JumpIfEqual {43}
	038 Move X9, [X8+24]
	039 Move X0, [X8+64]
	040 Move X3, [X8+40]
	041 Move W2, 5
	042 NotImplemented "Instruction BLR not yet implemented."
	043 Move X0, [X19+16]
	044 Compare X0, 0
	045 JumpIfEqual {52}
	046 Move X8, [X0]
	047 Move X2, [X8+440]
	048 Move X1, [X8+448]
	049 Move X30, [X31+16]
	050 Move X19, [X31+24]
	051 CallNoReturn X2
	052 Call 0x1C17F20

Method: System.Void SimulateConnectionLoss(System.Boolean simulateTimeout)

Disassembly:
	0x01E4DA5C ADRP X22, 0x22AF000
	0x01E4DA60 LDRB W8, [X23 + 0x5]
	0x01E4DA64 LDR X22, [X22 + 0x198]
	0x01E4DA68 MOV X20, X2
	0x01E4DA6C MOV X21, X1
	0x01E4DA70 MOV X19, X0
	0x01E4DA74 TBNZ X8, 0x0, 0x1E4DA98
	0x01E4DA78 ADRP X0, 0x22AE000
	0x01E4DA7C LDR X0, [X0 + 0xDC0]
	0x01E4DA80 BL 0x1C16CF4
	0x01E4DA84 ADRP X0, 0x22AF000
	0x01E4DA88 LDR X0, [X0 + 0x198]
	0x01E4DA8C BL 0x1C16CF4
	0x01E4DA90 MOVZ W8, 0x1
	0x01E4DA94 STRB W8, [X23 + 0x5]
	0x01E4DA98 LDR W2, [X19 + 0x80]
	0x01E4DA9C LDR X3, [X22]
	0x01E4DAA0 MOVZ W1, 0xE2
	0x01E4DAA4 MOV X0, X19
	0x01E4DAA8 BL 0x1E4CB70
	0x01E4DAAC TBZ X0, 0x0, 0x1E4DB54
	0x01E4DAB0 ADRP X8, 0x22AE000
	0x01E4DAB4 LDR X8, [X8 + 0xDC0]
	0x01E4DAB8 LDR W23, [X19 + 0x80]
	0x01E4DABC LDR X0, [X8]
	0x01E4DAC0 BL 0x1C16F10
	0x01E4DAC4 MOV X1, X31
	0x01E4DAC8 MOV X22, X0
	0x01E4DACC BL 0x1E59334
	0x01E4DAD0 CBZ X22, 0x1E4DB68
	0x01E4DAD4 CMP W23, 0x1
	0x01E4DAD8 MOVZ W8, 0x3
	0x01E4DADC CSET W9, EQ
	0x01E4DAE0 STR X21, [X22 + 0x10]
	0x01E4DAE4 STRB W8, [X22 + 0x31]
	0x01E4DAE8 STRB W9, [X22 + 0x30]
	0x01E4DAEC STR X20, [X22 + 0x40]
	0x01E4DAF0 LDR X0, [X19 + 0x10]
	0x01E4DAF4 STR X22, [X19 + 0x128]
	0x01E4DAF8 CBZ X0, 0x1E4DB68
	0x01E4DAFC LDR X8, [X0]
	0x01E4DB00 MOV X1, X22
	0x01E4DB04 LDR X9, [X8 + 0x288]
	0x01E4DB08 LDR X2, [X8 + 0x290]
	0x01E4DB0C BLR X9
	0x01E4DB10 TBZ X0, 0x0, 0x1E4DB54
	0x01E4DB14 LDR W1, [X19 + 0x90]
	0x01E4DB18 MOVZ W0, 0x1
	0x01E4DB1C STR W0, [X19 + 0x124]
	0x01E4DB20 CMP W1, 0x8
	0x01E4DB24 B.EQ 0x1E4DB58
	0x01E4DB28 LDR X8, [X19 + 0x98]
	0x01E4DB2C MOVZ W9, 0x8
	0x01E4DB30 STR W9, [X19 + 0x90]
	0x01E4DB34 CBZ X8, 0x1E4DB4C
	0x01E4DB38 LDR X9, [X8 + 0x18]
	0x01E4DB3C LDR X0, [X8 + 0x40]
	0x01E4DB40 LDR X3, [X8 + 0x28]
	0x01E4DB44 MOVZ W2, 0x8
	0x01E4DB48 BLR X9
	0x01E4DB4C MOVZ W0, 0x1
	0x01E4DB50 B 0x1E4DB58
	0x01E4DB54 MOV W0, W31
	0x01E4DB58 LDP X20, X19, [X31 + 0x20]
	0x01E4DB5C LDP X22, X21, [X31 + 0x10]
	0x01E4DB60 LDP X30, X23, [X31], #0x30
	0x01E4DB64 RET
	0x01E4DB68 BL 0x1C16F20
	0x01E4DB6C STP X30, X23, [X31 - 0x30]!

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 And W9, W1, 1
	007 Move X21, 0x258C000
	008 Move [X31+12], W9
	009 Move X20, 0x22A7000
	010 Move W8, [X21+4090]
	011 Move X20, [X20+2904]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x22A7000
	018 Move X0, [X0+2904]
	019 Call 0x1C17CF4
	020 Move X0, 0x22B0000
	021 Move X0, [X0+208]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+4090], W8
	025 Move X0, [X20]
	026 Move X20, 0x22B0000
	027 Move W8, [X0+224]
	028 Move X20, [X20+208]
	029 Compare W8, 0
	030 JumpIfNotEqual {32}
	031 Call 0x1C17DFC
	032 Add X0, X31, 12
	033 Move X1, X31
	034 Call Boolean.ToString, X0
	035 Move X8, [X20]
	036 Move X1, X0
	037 Move X2, X31
	038 Move X0, X8
	039 Call String.Concat, X0, X1
	040 Move X8, [X19]
	041 Move X2, X0
	042 Move W1, 2
	043 Move X0, X19
	044 Move X9, [X8+536]
	045 Move X3, [X8+544]
	046 NotImplemented "Instruction BLR not yet implemented."
	047 Move W8, [X31+12]
	048 Compare W8, 0
	049 JumpIfEqual {70}
	050 Move X0, [X19+16]
	051 Compare X0, 0
	052 JumpIfEqual {84}
	053 Move X1, X31
	054 Call PhotonPeer.get_NetworkSimulationSettings, X0
	055 Compare X0, 0
	056 JumpIfEqual {84}
	057 Move W1, 100
	058 Move X2, X31
	059 Call NetworkSimulationSet.set_IncomingLossPercentage, X0, X1
	060 Move X0, [X19+16]
	061 Compare X0, 0
	062 JumpIfEqual {84}
	063 Move X1, X31
	064 Call PhotonPeer.get_NetworkSimulationSettings, X0
	065 Compare X0, 0
	066 JumpIfEqual {84}
	067 Move W1, 100
	068 Move X2, X31
	069 Call NetworkSimulationSet.set_OutgoingLossPercentage, X0, X1
	070 Move X0, [X19+16]
	071 Compare X0, 0
	072 JumpIfEqual {84}
	073 Move X8, [X0]
	074 Move W1, [X31+12]
	075 Move X9, [X8+392]
	076 Move X2, [X8+400]
	077 NotImplemented "Instruction BLR not yet implemented."
	078 Move X20, [X31+32]
	079 Move X19, [X31+40]
	080 Move X30, [X31+16]
	081 Move X21, [X31+24]
	082 Add X31, X31, 48
	083 Return 
	084 Call 0x1C17F20

Method: System.Boolean CallAuthenticate()

Disassembly:
	0x01E4D070 LDR X8, [X19]
	0x01E4D074 LDR X9, [X9 + 0x148]
	0x01E4D078 MOVZ W1, 0x2
	0x01E4D07C LDR X3, [X8 + 0x220]
	0x01E4D080 LDR X2, [X9]
	0x01E4D084 LDR X9, [X8 + 0x218]
	0x01E4D088 B 0x1E4D100
	0x01E4D08C CBZ X21, 0x1E4D0E4
	0x01E4D090 LDR W8, [X21 + 0x18]
	0x01E4D094 CBZ W8, 0x1E4D0E4
	0x01E4D098 CMP W8, 0x201
	0x01E4D09C B.LT 0x1E4D130
	0x01E4D0A0 ADRP X8, 0x22A6000
	0x01E4D0A4 LDR X8, [X8 + 0x758]
	0x01E4D0A8 ADD X1, X31, 0xC
	0x01E4D0AC LDR X0, [X8]
	0x01E4D0B0 MOVZ W8, 0x200
	0x01E4D0B4 STR W8, [X31 + 0xC]
	0x01E4D0B8 BL 0x1C16E04
	0x01E4D0BC ADRP X8, 0x22AF000
	0x01E4D0C0 LDR X8, [X8 + 0x128]
	0x01E4D0C4 MOV X1, X0
	0x01E4D0C8 MOV X2, X31
	0x01E4D0CC LDR X8, [X8]
	0x01E4D0D0 MOV X0, X8
	0x01E4D0D4 BL 0x321EFD0
	0x01E4D0D8 LDR X8, [X19]
	0x01E4D0DC MOV X2, X0
	0x01E4D0E0 B 0x1E4D0F4
	0x01E4D0E4 ADRP X9, 0x22AF000
	0x01E4D0E8 LDR X8, [X19]
	0x01E4D0EC LDR X9, [X9 + 0x138]
	0x01E4D0F0 LDR X2, [X9]
	0x01E4D0F4 LDR X9, [X8 + 0x218]
	0x01E4D0F8 LDR X3, [X8 + 0x220]
	0x01E4D0FC MOVZ W1, 0x1
	0x01E4D100 MOV X0, X19
	0x01E4D104 BLR X9
	0x01E4D108 MOV W0, W31
	0x01E4D10C LDP X20, X19, [X31 + 0x60]
	0x01E4D110 LDP X22, X21, [X31 + 0x50]
	0x01E4D114 LDP X24, X23, [X31 + 0x40]
	0x01E4D118 LDP X26, X25, [X31 + 0x30]
	0x01E4D11C LDP X28, X27, [X31 + 0x20]
	0x01E4D120 LDP X29, X30, [X31 + 0x10]
	0x01E4D124 AND W0, W0, 0x1
	0x01E4D128 ADD X31, X31, 0x70
	0x01E4D12C RET
	0x01E4D130 ADRP X8, 0x22A7000
	0x01E4D134 LDR X8, [X8 + 0x1D0]
	0x01E4D138 LDR X0, [X8]
	0x01E4D13C BL 0x1C16F10
	0x01E4D140 ADRP X8, 0x22AF000
	0x01E4D144 LDR W1, [X21 + 0x18]
	0x01E4D148 LDR X8, [X8 + 0x118]
	0x01E4D14C MOV X22, X0
	0x01E4D150 LDR X2, [X8]
	0x01E4D154 BL 0x301B830
	0x01E4D158 LDR X8, [X21 + 0x18]
	0x01E4D15C CMP W8, 0x1
	0x01E4D160 B.LT 0x1E4D2F0
	0x01E4D164 ADRP X26, 0x22A6000
	0x01E4D168 ADRP X27, 0x22AF000
	0x01E4D16C ADRP X28, 0x22AF000
	0x01E4D170 ADRP X29, 0x22AF000
	0x01E4D174 LDR X26, [X26 + 0x758]
	0x01E4D178 LDR X27, [X27 + 0x120]
	0x01E4D17C LDR X28, [X28 + 0x150]
	0x01E4D180 LDR X29, [X29 + 0x110]
	0x01E4D184 MOV X24, X31
	0x01E4D188 AND X8, X8, 0x0
	0x01E4D18C ADD X25, X21, 0x20
	0x01E4D190 CMP X24, W8, UXTW
	0x01E4D194 B.CS 0x1E4D358
	0x01E4D198 LDR X23, [X25, X24, LSL #3]
	0x01E4D19C MOV X1, X31
	0x01E4D1A0 MOV X0, X23
	0x01E4D1A4 BL 0x32277A8
	0x01E4D1A8 TBZ X0, 0x0, 0x1E4D1D4
	0x01E4D1AC LDR X0, [X26]
	0x01E4D1B0 ADD X1, X31, 0xC
	0x01E4D1B4 STR W24, [X31 + 0xC]
	0x01E4D1B8 BL 0x1C16E04
	0x01E4D1BC LDR X8, [X27]
	0x01E4D1C0 MOV X1, X0
	0x01E4D1C4 MOV X2, X31
	0x01E4D1C8 MOV X0, X8
	0x01E4D1CC BL 0x321EFD0
	0x01E4D1D0 B 0x1E4D260
	0x01E4D1D4 LDR X8, [X19 + 0x30]
	0x01E4D1D8 CBZ X8, 0x1E4D1E8
	0x01E4D1DC LDR X1, [X8 + 0x30]
	0x01E4D1E0 CBNZ X23, 0x1E4D1F0
	0x01E4D1E4 B 0x1E4D35C
	0x01E4D1E8 MOV X1, X31
	0x01E4D1EC CBZ X23, 0x1E4D35C
	0x01E4D1F0 MOV X0, X23
	0x01E4D1F4 MOV X2, X31
	0x01E4D1F8 BL 0x322693C
	0x01E4D1FC TBZ X0, 0x0, 0x1E4D218
	0x01E4D200 LDR X0, [X26]
	0x01E4D204 ADD X1, X31, 0xC
	0x01E4D208 STR W24, [X31 + 0xC]
	0x01E4D20C BL 0x1C16E04
	0x01E4D210 LDR X8, [X28]
	0x01E4D214 B 0x1E4D24C
	0x01E4D218 CBZ X22, 0x1E4D35C
	0x01E4D21C LDR X2, [X29]
	0x01E4D220 MOV X0, X22
	0x01E4D224 MOV X1, X23
	0x01E4D228 BL 0x301C318
	0x01E4D22C TBZ X0, 0x0, 0x1E4D290
	0x01E4D230 LDR X0, [X26]
	0x01E4D234 ADD X1, X31, 0xC
	0x01E4D238 STR W24, [X31 + 0xC]
	0x01E4D23C BL 0x1C16E04
	0x01E4D240 ADRP X8, 0x22AF000
	0x01E4D244 LDR X8, [X8 + 0x140]
	0x01E4D248 LDR X8, [X8]
	0x01E4D24C MOV X2, X0
	0x01E4D250 MOV X0, X8
	0x01E4D254 MOV X1, X23
	0x01E4D258 MOV X3, X31
	0x01E4D25C BL 0x3227BD4
	0x01E4D260 LDR X8, [X19]
	0x01E4D264 MOV X2, X0
	0x01E4D268 MOVZ W1, 0x2
	0x01E4D26C MOV X0, X19
	0x01E4D270 LDR X9, [X8 + 0x218]
	0x01E4D274 LDR X3, [X8 + 0x220]
	0x01E4D278 BLR X9
	0x01E4D27C LDR W8, [X21 + 0x18]
	0x01E4D280 ADD X24, X24, 0x1
	0x01E4D284 CMP X24, W8, SXTW
	0x01E4D288 B.LT 0x1E4D190
	0x01E4D28C B 0x1E4D2F0
	0x01E4D290 ADRP X9, 0x22A7000
	0x01E4D294 LDR W10, [X22 + 0x1C]
	0x01E4D298 LDR X8, [X22 + 0x10]
	0x01E4D29C LDR X9, [X9 + 0x1B8]
	0x01E4D2A0 ADD W10, W10, 0x1
	0x01E4D2A4 LDR X9, [X9]
	0x01E4D2A8 STR W10, [X22 + 0x1C]
	0x01E4D2AC CBZ X8, 0x1E4D35C
	0x01E4D2B0 LDRSW X10, [X22 + 0x18]
	0x01E4D2B4 LDR W11, [X8 + 0x18]
	0x01E4D2B8 CMP W10, W11
	0x01E4D2BC B.CS 0x1E4D2D4
	0x01E4D2C0 ADD W9, W10, 0x1
	0x01E4D2C4 ADD X8, X8, X10, 0x3, LSL
	0x01E4D2C8 STR W9, [X22 + 0x18]
	0x01E4D2CC STR X23, [X8 + 0x20]
	0x01E4D2D0 B 0x1E4D27C
	0x01E4D2D4 LDR X8, [X9 + 0x20]
	0x01E4D2D8 MOV X0, X22
	0x01E4D2DC MOV X1, X23
	0x01E4D2E0 LDR X8, [X8 + 0xC0]
	0x01E4D2E4 LDR X2, [X8 + 0x70]
	0x01E4D2E8 BL 0x301BF90
	0x01E4D2EC B 0x1E4D27C
	0x01E4D2F0 CBZ X22, 0x1E4D35C
	0x01E4D2F4 LDR W8, [X22 + 0x18]
	0x01E4D2F8 CBZ W8, 0x1E4D348
	0x01E4D2FC ADRP X8, 0x22A8000
	0x01E4D300 LDR X8, [X8 + 0xE78]
	0x01E4D304 MOV X0, X22
	0x01E4D308 LDR X1, [X8]
	0x01E4D30C BL 0x301DDC4
	0x01E4D310 LDR X8, [X19 + 0x10]
	0x01E4D314 CBZ X8, 0x1E4D35C
	0x01E4D318 LDR X9, [X8]
	0x01E4D31C MOV X21, X0
	0x01E4D320 MOV X0, X8
	0x01E4D324 MOV X1, X21
	0x01E4D328 LDR X10, [X9 + 0x2D8]
	0x01E4D32C LDR X3, [X9 + 0x2E0]
	0x01E4D330 MOV X2, X20
	0x01E4D334 BLR X10
	0x01E4D338 ANDS W31, W0, 0x1
	0x01E4D33C CSEL X8, X21, X31, NE
	0x01E4D340 STR X8, [X19 + 0x138]
	0x01E4D344 B 0x1E4D10C
	0x01E4D348 ADRP X9, 0x22AF000
	0x01E4D34C LDR X8, [X19]
	0x01E4D350 LDR X9, [X9 + 0x130]
	0x01E4D354 B 0x1E4D0F0
	0x01E4D358 BL 0x1C16F28
	0x01E4D35C BL 0x1C16F20
	0x01E4D360 STR X30, [X31 - 0x30]!

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0x258C000
	006 Move W8, [X20+4091]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {44}
	012 Move X0, 0x22AF000
	013 Move X0, [X0+3688]
	014 Call 0x1C17CF4
	015 Move X0, 0x22B0000
	016 Move X0, [X0+24]
	017 Call 0x1C17CF4
	018 Move X0, 0x22B0000
	019 Move X0, [X0+64]
	020 Call 0x1C17CF4
	021 Move X0, 0x22B0000
	022 Move X0, [X0+72]
	023 Call 0x1C17CF4
	024 Move X0, 0x22A7000
	025 Move X0, [X0+2760]
	026 Call 0x1C17CF4
	027 Move X0, 0x22B0000
	028 Move X0, [X0+80]
	029 Call 0x1C17CF4
	030 Move X0, 0x22B0000
	031 Move X0, [X0+88]
	032 Call 0x1C17CF4
	033 Move X0, 0x22B0000
	034 Move X0, [X0+96]
	035 Call 0x1C17CF4
	036 Move X0, 0x22B0000
	037 Move X0, [X0+104]
	038 Call 0x1C17CF4
	039 Move X0, 0x22B0000
	040 Move X0, [X0+112]
	041 Call 0x1C17CF4
	042 Move W8, 1
	043 Move [X20+4091], W8
	044 NotImplemented "Instruction STRH not yet implemented."
	045 Move W8, [X19+80]
	046 Move W2, [X19+128]
	047 Compare W8, 0
	048 JumpIfEqual {56}
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Move X8, [X19+48]
	051 Compare X8, 0
	052 JumpIfEqual {101}
	053 Move X8, [X8+40]
	054 Compare X8, 0
	055 JumpIfEqual {101}
	056 Move W8, [X19+56]
	057 Compare W8, 0
	058 JumpIfEqual {82}
	059 Move X8, 0x22B0000
	060 Move X8, [X8+80]
	061 Move W1, 231
	062 Move X0, X19
	063 Move X3, [X8]
	064 Call LoadBalancingClient.CheckIfOpCanBeSent, X0, X1, X2, X3
	065 Move TEMP, X0
	066 And TEMP, TEMP, 1
	067 Compare TEMP, 1
	068 JumpIfNotEqual {176}
	069 NotImplemented "Instruction LDRH not yet implemented."
	070 And W31, W8, 255
	071 NotImplemented "Instruction STRH not yet implemented."
	072 Move X9, 0x22B0000
	073 Move X9, [X9+64]
	074 Add X0, X31, 60
	075 NotImplemented "Instruction STRH not yet implemented."
	076 Move X1, [X9]
	077 Call Nullable`1<ByteEnum>.get_Value, X0
	078 Move X8, [X19+16]
	079 Compare X8, 0
	080 JumpIfEqual {209}
	081 Move W6, W0
	082 Move X8, 0x22B0000
	083 Move X8, [X8+104]
	084 Move W1, 230
	085 Move X0, X19
	086 Move X3, [X8]
	087 Call LoadBalancingClient.CheckIfOpCanBeSent, X0, X1, X2, X3
	088 Move TEMP, X0
	089 And TEMP, TEMP, 1
	090 Compare TEMP, 1
	091 JumpIfNotEqual {176}
	092 Move W8, [X19+248]
	093 Move X0, [X19+16]
	094 Compare W8, 0
	095 JumpIfEqual {191}
	096 Move W8, [X19+128]
	097 NotImplemented "Instruction CMP not yet implemented."
	098 NotImplemented "Instruction CSET not yet implemented."
	099 Compare X0, 0
	100 JumpIfNotEqual {194}
	101 Move X8, 0x22A7000
	102 Move X8, [X8+2760]
	103 Move W1, 6
	104 Move X0, [X8]
	105 Call 0x1C17D6C
	106 Compare X0, 0
	107 JumpIfEqual {209}
	108 Move W8, [X0+24]
	109 Move X20, X0
	110 Compare W8, 0
	111 JumpIfEqual {208}
	112 Move X8, 0x22B0000
	113 Move X8, [X8+96]
	114 Move X9, 0x22B0000
	115 Move TEMP, 0
	116 Not TEMP
	117 Move X10, TEMP
	118 Add X0, X31, 24
	119 Move X8, [X8]
	120 Move X9, [X9+72]
	121 Move X1, X31
	122 Move [X20+32], X8
	123 Move X8, [X9]
	124 Move W9, [X19+128]
	125 Move [X31+24], X8
	126 Move [X31+32], X10
	127 Move [X31+40], W9
	128 Call Enum.ToString, X0
	129 Move W8, [X20+24]
	130 NotImplemented "Instruction CMP not yet implemented."
	131 NotImplemented "Instruction CMP not yet implemented."
	132 Move [X20+40], X0
	133 Move X8, 0x22B0000
	134 Move X8, [X8+88]
	135 Move X8, [X8]
	136 Move [X20+48], X8
	137 Move X0, [X19+16]
	138 Compare X0, 0
	139 JumpIfEqual {209}
	140 Move X1, X31
	141 Call PhotonPeer.get_ServerAddress, X0
	142 Move W8, [X20+24]
	143 NotImplemented "Instruction CMP not yet implemented."
	144 NotImplemented "Instruction CMP not yet implemented."
	145 Move [X20+56], X0
	146 Move X8, 0x22B0000
	147 Move X8, [X8+112]
	148 Move X9, 0x22AF000
	149 Move TEMP, 0
	150 Not TEMP
	151 Move X10, TEMP
	152 Add X0, X31, 0
	153 Move X8, [X8]
	154 Move X9, [X9+3688]
	155 Move X1, X31
	156 Move [X20+64], X8
	157 Move X8, [X9]
	158 Move W9, [X19+144]
	159 Move [X31], X8
	160 Move [X31+8], X10
	161 Move [X31+16], W9
	162 Call Enum.ToString, X0
	163 Move W8, [X20+24]
	164 NotImplemented "Instruction CMP not yet implemented."
	165 Move [X20+72], X0
	166 Move X0, X20
	167 Move X1, X31
	168 Call String.Concat, X0
	169 Move X8, [X19]
	170 Move X2, X0
	171 Move W1, 1
	172 Move X0, X19
	173 Move X9, [X8+536]
	174 Move X3, [X8+544]
	175 NotImplemented "Instruction BLR not yet implemented."
	176 Move W0, W31
	177 Move X8, [X19+16]
	178 Compare X8, 0
	179 JumpIfEqual {209}
	180 Move W6, [X8+132]
	181 Move X9, [X8]
	182 Move W5, [X19+60]
	183 Move X4, [X19+320]
	184 Move X3, [X19+48]
	185 Move X2, [X19+24]
	186 Move X1, [X19+32]
	187 Move X10, [X9+760]
	188 Move X7, [X9+768]
	189 Move X0, X8
	190 NotImplemented "Instruction BLR not yet implemented."
	191 Move W5, W31
	192 Compare X0, 0
	193 JumpIfEqual {209}
	194 Move X8, [X0]
	195 Move X2, [X19+24]
	196 Move X1, [X19+32]
	197 Move X3, [X19+48]
	198 Move X4, [X19+320]
	199 Move X9, [X8+744]
	200 Move X6, [X8+752]
	201 NotImplemented "Instruction BLR not yet implemented."
	202 Move X20, [X31+64]
	203 Move X19, [X31+72]
	204 Move X30, [X31+48]
	205 And W0, W0, 1
	206 Add X31, X31, 80
	207 Return X0
	208 Call 0x1C17F28
	209 Call 0x1C17F20

Method: System.Void Service()

Disassembly:
	0x01E47EFC CMP W8, 0x3
	0x01E47F00 B.LS 0x1E47FD4
	0x01E47F04 CMP W8, 0x4
	0x01E47F08 STR X0, [X21 + 0x38]
	0x01E47F0C B.EQ 0x1E47FD4
	0x01E47F10 ADRP X8, 0x22B4000

ISIL:
	001 Move X0, [X0+16]
	002 Compare X0, 0
	003 JumpIfEqual {8}
	004 Move X8, [X0]
	005 Move X2, [X8+488]
	006 Move X1, [X8+496]
	007 CallNoReturn X2
	008 Return 

Method: System.Boolean OpGetRegions()

Disassembly:
	0x01E4DED0 MOV W0, W31
	0x01E4DED4 ADD X31, X31, 0x60
	0x01E4DED8 RET
	0x01E4DEDC CBNZ X23, 0x1E4DF2C
	0x01E4DEE0 CBNZ X22, 0x1E4DF2C
	0x01E4DEE4 LDR X0, [X19 + 0x108]
	0x01E4DEE8 CBZ X0, 0x1E4DF2C
	0x01E4DEEC MOV X1, X31
	0x01E4DEF0 BL 0x1E5A61C
	0x01E4DEF4 CMP W0, W20
	0x01E4DEF8 B.NE 0x1E4DF2C
	0x01E4DEFC LDR X0, [X19 + 0x108]
	0x01E4DF00 CBZ X0, 0x1E4DF9C
	0x01E4DF04 MOV X1, X21
	0x01E4DF08 LDP X20, X19, [X31 + 0x50]
	0x01E4DF0C LDP X22, X21, [X31 + 0x40]
	0x01E4DF10 LDP X24, X23, [X31 + 0x30]
	0x01E4DF14 LDP X30, X25, [X31 + 0x20]
	0x01E4DF18 MOV X2, X31
	0x01E4DF1C MOV X3, X31
	0x01E4DF20 MOV X4, X31
	0x01E4DF24 ADD X31, X31, 0x60
	0x01E4DF28 B 0x1E5AFE4
	0x01E4DF2C LDR X8, [X19 + 0x10]
	0x01E4DF30 CBZ X8, 0x1E4DF9C
	0x01E4DF34 LDRB W8, [X8 + 0x40]
	0x01E4DF38 CBZ W8, 0x1E4DEC0
	0x01E4DF3C ADRP X8, 0x22AE000
	0x01E4DF40 LDR X8, [X8 + 0xE68]
	0x01E4DF44 LDR W9, [X19 + 0x90]
	0x01E4DF48 MOVN X10, 0x0
	0x01E4DF4C ADD X0, X31, 0x8
	0x01E4DF50 LDR X8, [X8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x258C000
	006 Move X20, 0x22B0000
	007 Move W8, [X21+4092]
	008 Move X20, [X20+256]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x22B0000
	015 Move X0, [X0+256]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+4092], W8
	019 Move W2, [X19+128]
	020 Move X3, [X20]
	021 Move W1, 220
	022 Move X0, X19
	023 Call LoadBalancingClient.CheckIfOpCanBeSent, X0, X1, X2, X3
	024 Move TEMP, X0
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfNotEqual {40}
	028 Move X0, [X19+16]
	029 Compare X0, 0
	030 JumpIfEqual {46}
	031 Move X8, [X0]
	032 Move X1, [X19+32]
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move X3, [X8+584]
	036 Move X2, [X8+592]
	037 Move X30, [X31+32]
	038 Move X21, [X31+40]
	039 CallNoReturn X3
	040 Move X20, [X31+16]
	041 Move X19, [X31+24]
	042 Move W0, W31
	043 Move X30, [X31+32]
	044 Move X21, [X31+40]
	045 Return X0
	046 Call 0x1C17F20

Method: System.Boolean OpFindFriends(System.String[] friendsToFind, Fusion.Photon.Realtime.FindFriendsOptions options = null)

Disassembly:
	0x01E4DF54 MOV X1, X31
	0x01E4DF58 STR W9, [X31 + 0x18]
	0x01E4DF5C STP X8, X10, [X31 + 0x8]
	0x01E4DF60 BL 0x33B162C
	0x01E4DF64 ADRP X8, 0x22AF000
	0x01E4DF68 LDR X8, [X8 + 0x1C0]
	0x01E4DF6C MOV X1, X0
	0x01E4DF70 MOV X2, X31
	0x01E4DF74 LDR X8, [X8]
	0x01E4DF78 MOV X0, X8
	0x01E4DF7C BL 0x321B938
	0x01E4DF80 LDR X8, [X19]
	0x01E4DF84 MOV X2, X0
	0x01E4DF88 B 0x1E4DEAC
	0x01E4DF8C ADRP X9, 0x22AF000
	0x01E4DF90 LDR X8, [X19]
	0x01E4DF94 LDR X9, [X9 + 0x1C8]
	0x01E4DF98 B 0x1E4DEA8
	0x01E4DF9C BL 0x1C16F20
	0x01E4DFA0 STP X30, X25, [X31 - 0x40]!
	0x01E4DFA4 STP X24, X23, [X31 + 0x10]
	0x01E4DFA8 STP X22, X21, [X31 + 0x20]
	0x01E4DFAC STP X20, X19, [X31 + 0x30]
	0x01E4DFB0 ADRP X25, 0x258C000
	0x01E4DFB4 ADRP X24, 0x22AF000
	0x01E4DFB8 LDRB W8, [X25 + 0x9]
	0x01E4DFBC LDR X24, [X24 + 0x1D8]
	0x01E4DFC0 MOV X23, X4
	0x01E4DFC4 MOV X22, X3
	0x01E4DFC8 MOV X19, X2
	0x01E4DFCC MOV W21, W1
	0x01E4DFD0 MOV X20, X0
	0x01E4DFD4 TBNZ X8, 0x0, 0x1E4E004
	0x01E4DFD8 ADRP X0, 0x22AE000
	0x01E4DFDC LDR X0, [X0 + 0xD60]
	0x01E4DFE0 BL 0x1C16CF4
	0x01E4DFE4 ADRP X0, 0x22AF000
	0x01E4DFE8 LDR X0, [X0 + 0x1E0]
	0x01E4DFEC BL 0x1C16CF4
	0x01E4DFF0 ADRP X0, 0x22AF000
	0x01E4DFF4 LDR X0, [X0 + 0x1D8]
	0x01E4DFF8 BL 0x1C16CF4
	0x01E4DFFC MOVZ W8, 0x1
	0x01E4E000 STRB W8, [X25 + 0x9]
	0x01E4E004 LDR W2, [X20 + 0x80]
	0x01E4E008 LDR X3, [X24]
	0x01E4E00C MOVZ W1, 0xFC
	0x01E4E010 MOV X0, X20
	0x01E4E014 BL 0x1E4CB70
	0x01E4E018 TBZ X0, 0x0, 0x1E4E098
	0x01E4E01C CBZ X19, 0x1E4E074
	0x01E4E020 ADRP X24, 0x22AD000
	0x01E4E024 LDR X24, [X24 + 0xD60]
	0x01E4E028 MOV X0, X19
	0x01E4E02C LDR X1, [X24]
	0x01E4E030 BL 0x2AA4E88
	0x01E4E034 CBZ W0, 0x1E4E074
	0x01E4E038 LDR X0, [X20 + 0x10]
	0x01E4E03C CBZ X0, 0x1E4E110
	0x01E4E040 MOV W1, W21
	0x01E4E044 MOV X2, X19
	0x01E4E048 MOV X3, X22
	0x01E4E04C MOV X4, X23
	0x01E4E050 MOV X5, X31
	0x01E4E054 BL 0x1E57BE0
	0x01E4E058 TBZ X0, 0x0, 0x1E4E098
	0x01E4E05C LDR X0, [X20 + 0x110]
	0x01E4E060 CBZ X0, 0x1E4E110
	0x01E4E064 LDRB W8, [X0 + 0x78]
	0x01E4E068 CBZ W8, 0x1E4E0B0
	0x01E4E06C MOVZ W0, 0x1
	0x01E4E070 B 0x1E4E09C
	0x01E4E074 ADRP X9, 0x22AE000
	0x01E4E078 LDR X8, [X20]
	0x01E4E07C LDR X9, [X9 + 0x1E0]
	0x01E4E080 MOVZ W1, 0x1
	0x01E4E084 MOV X0, X20
	0x01E4E088 LDR X3, [X8 + 0x220]
	0x01E4E08C LDR X2, [X9]
	0x01E4E090 LDR X9, [X8 + 0x218]
	0x01E4E094 BLR X9
	0x01E4E098 MOV W0, W31
	0x01E4E09C LDP X20, X19, [X31 + 0x30]
	0x01E4E0A0 LDP X22, X21, [X31 + 0x20]
	0x01E4E0A4 LDP X24, X23, [X31 + 0x10]
	0x01E4E0A8 LDP X30, X25, [X31], #0x40
	0x01E4E0AC RET
	0x01E4E0B0 CBZ X22, 0x1E4E0CC
	0x01E4E0B4 LDR X1, [X24]
	0x01E4E0B8 MOV X0, X22
	0x01E4E0BC BL 0x2AA4E88
	0x01E4E0C0 CBNZ W0, 0x1E4E06C
	0x01E4E0C4 LDR X0, [X20 + 0x110]
	0x01E4E0C8 CBZ X0, 0x1E4E110
	0x01E4E0CC LDR X8, [X0]
	0x01E4E0D0 MOV W1, W21
	0x01E4E0D4 MOV W2, W31
	0x01E4E0D8 LDP X9, X3, [X8 + 0x1D8]
	0x01E4E0DC BLR X9
	0x01E4E0E0 CBZ X0, 0x1E4E06C
	0x01E4E0E4 LDR X8, [X0]
	0x01E4E0E8 MOV X1, X19
	0x01E4E0EC MOV X21, X0
	0x01E4E0F0 LDP X9, X2, [X8 + 0x178]
	0x01E4E0F4 BLR X9
	0x01E4E0F8 LDR X0, [X20 + 0xC0]
	0x01E4E0FC CBZ X0, 0x1E4E110
	0x01E4E100 MOV X1, X21
	0x01E4E104 MOV X2, X19
	0x01E4E108 BL 0x1E4E114
	0x01E4E10C B 0x1E4E06C
	0x01E4E110 BL 0x1C16F20
	0x01E4E114 SUB X31, X31, 0x60
	0x01E4E118 STP X30, X25, [X31 + 0x20]
	0x01E4E11C STP X24, X23, [X31 + 0x30]
	0x01E4E120 STP X22, X21, [X31 + 0x40]
	0x01E4E124 STP X20, X19, [X31 + 0x50]
	0x01E4E128 ADRP X22, 0x258B000
	0x01E4E12C LDRB W8, [X22 + 0x36]
	0x01E4E130 MOV X19, X2
	0x01E4E134 MOV X20, X1
	0x01E4E138 MOV X21, X0
	0x01E4E13C TBNZ X8, 0x0, 0x1E4E184
	0x01E4E140 ADRP X0, 0x22AE000
	0x01E4E144 LDR X0, [X0 + 0x1E8]
	0x01E4E148 BL 0x1C16CF4
	0x01E4E14C ADRP X0, 0x22AE000
	0x01E4E150 LDR X0, [X0 + 0x1F0]
	0x01E4E154 BL 0x1C16CF4
	0x01E4E158 ADRP X0, 0x22AE000
	0x01E4E15C LDR X0, [X0 + 0x1F8]
	0x01E4E160 BL 0x1C16CF4
	0x01E4E164 ADRP X0, 0x22AE000
	0x01E4E168 LDR X0, [X0 + 0x200]
	0x01E4E16C BL 0x1C16CF4
	0x01E4E170 ADRP X0, 0x22AE000
	0x01E4E174 LDR X0, [X0 + 0x208]
	0x01E4E178 BL 0x1C16CF4
	0x01E4E17C MOVZ W8, 0x1
	0x01E4E180 STRB W8, [X22 + 0x36]
	0x01E4E184 STP X31, X31, [X31 + 0x8]
	0x01E4E188 STR X31, [X31 + 0x18]
	0x01E4E18C LDR X0, [X21 + 0x28]
	0x01E4E190 CBZ X0, 0x1E4E270
	0x01E4E194 ADRP X25, 0x22AE000
	0x01E4E198 ADRP X23, 0x22AE000
	0x01E4E19C ADRP X24, 0x22AE000
	0x01E4E1A0 ADRP X22, 0x22AE000
	0x01E4E1A4 LDR X25, [X25 + 0x208]
	0x01E4E1A8 LDR X23, [X23 + 0x1F0]
	0x01E4E1AC LDR X24, [X24 + 0x200]
	0x01E4E1B0 LDR X22, [X22 + 0x1E8]
	0x01E4E1B4 BL 0x1E54C74
	0x01E4E1B8 LDR X1, [X25]
	0x01E4E1BC ADD X8, X31, 0x8
	0x01E4E1C0 MOV X0, X21
	0x01E4E1C4 BL 0x301CB58
	0x01E4E1C8 LDR X1, [X23]
	0x01E4E1CC ADD X0, X31, 0x8
	0x01E4E1D0 BL 0x2BC4350
	0x01E4E1D4 TBZ X0, 0x0, 0x1E4E248
	0x01E4E1D8 LDR X21, [X31 + 0x18]
	0x01E4E1DC CBZ X21, 0x1E4E26C
	0x01E4E1E0 LDR X8, [X21]
	0x01E4E1E4 LDR X1, [X24]
	0x01E4E1E8 LDRH W9, [X8 + 0x12E]
	0x01E4E1EC CBZ X9, 0x1E4E210
	0x01E4E1F0 LDR X10, [X8 + 0xB0]
	0x01E4E1F4 ADD X10, X10, 0x8
	0x01E4E1F8 LDUR X11, [X10 - 0x8]
	0x01E4E1FC CMP X11, X1
	0x01E4E200 B.EQ 0x1E4E220
	0x01E4E204 SUBS X9, X9, 0x1
	0x01E4E208 ADD X10, X10, 0x10
	0x01E4E20C B.NE 0x1E4E1F8
	0x01E4E210 MOVZ W2, 0x3
	0x01E4E214 MOV X0, X21
	0x01E4E218 BL 0x1C5C788
	0x01E4E21C B 0x1E4E230
	0x01E4E220 LDR W9, [X10]
	0x01E4E224 ADD W9, W9, 0x3
	0x01E4E228 ADD X8, X8, W9, 0x4, SXTW
	0x01E4E22C ADD X0, X8, 0x138
	0x01E4E230 LDP X8, X3, [X0]
	0x01E4E234 MOV X0, X21
	0x01E4E238 MOV X1, X20
	0x01E4E23C MOV X2, X19
	0x01E4E240 BLR X8
	0x01E4E244 B 0x1E4E1C8
	0x01E4E248 LDR X1, [X22]
	0x01E4E24C ADD X0, X31, 0x8
	0x01E4E250 BL 0x2BC434C
	0x01E4E254 LDP X20, X19, [X31 + 0x50]
	0x01E4E258 LDP X22, X21, [X31 + 0x40]
	0x01E4E25C LDP X24, X23, [X31 + 0x30]
	0x01E4E260 LDP X30, X25, [X31 + 0x20]
	0x01E4E264 ADD X31, X31, 0x60
	0x01E4E268 RET
	0x01E4E26C BL 0x1C16F20
	0x01E4E270 BL 0x1C16F20
	0x01E4E274 B 0x1E4E27C
	0x01E4E278 B 0x1E4E27C
	0x01E4E27C MOV X19, X0
	0x01E4E280 CMP W1, 0x1
	0x01E4E284 B.NE 0x1E4E2B0
	0x01E4E288 MOV X0, X19
	0x01E4E28C BL 0x3EB1AD0
	0x01E4E290 LDR X20, [X0]
	0x01E4E294 BL 0x3EB1AE0
	0x01E4E298 LDR X1, [X22]
	0x01E4E29C ADD X0, X31, 0x8
	0x01E4E2A0 BL 0x2BC434C
	0x01E4E2A4 CBZ X20, 0x1E4E254
	0x01E4E2A8 MOV X0, X20
	0x01E4E2AC BL 0x1C16F18
	0x01E4E2B0 MOV X20, X31
	0x01E4E2B4 B 0x1E4E2BC
	0x01E4E2B8 MOV X19, X0
	0x01E4E2BC LDR X1, [X22]
	0x01E4E2C0 ADD X0, X31, 0x8
	0x01E4E2C4 BL 0x2BC434C
	0x01E4E2C8 CBNZ X20, 0x1E4E2D4
	0x01E4E2CC MOV X0, X19
	0x01E4E2D0 BL 0x1D2C690
	0x01E4E2D4 MOV X0, X20
	0x01E4E2D8 BL 0x1C16F18
	0x01E4E2DC BL 0x1990590
	0x01E4E2E0 STR X30, [X31 - 0x40]!
	0x01E4E2E4 STP X24, X23, [X31 + 0x10]
	0x01E4E2E8 STP X22, X21, [X31 + 0x20]
	0x01E4E2EC STP X20, X19, [X31 + 0x30]
	0x01E4E2F0 ADRP X23, 0x258B000
	0x01E4E2F4 LDRB W8, [X23 + 0xA]
	0x01E4E2F8 MOV X20, X3
	0x01E4E2FC MOV X21, X2
	0x01E4E300 MOV X22, X1
	0x01E4E304 MOV X19, X0
	0x01E4E308 TBNZ X8, 0x0, 0x1E4E350
	0x01E4E30C ADRP X0, 0x22AD000
	0x01E4E310 LDR X0, [X0 + 0xD60]
	0x01E4E314 BL 0x1C16CF4
	0x01E4E318 ADRP X0, 0x22AD000
	0x01E4E31C LDR X0, [X0 + 0xD98]
	0x01E4E320 BL 0x1C16CF4
	0x01E4E324 ADRP X0, 0x22AD000
	0x01E4E328 LDR X0, [X0 + 0xDA0]
	0x01E4E32C BL 0x1C16CF4
	0x01E4E330 ADRP X0, 0x22AE000
	0x01E4E334 LDR X0, [X0 + 0x210]
	0x01E4E338 BL 0x1C16CF4
	0x01E4E33C ADRP X0, 0x22AE000
	0x01E4E340 LDR X0, [X0 + 0x218]
	0x01E4E344 BL 0x1C16CF4
	0x01E4E348 MOVZ W8, 0x1
	0x01E4E34C STRB W8, [X23 + 0xA]
	0x01E4E350 CBZ X22, 0x1E4E3E4
	0x01E4E354 ADRP X24, 0x22AD000
	0x01E4E358 LDR X24, [X24 + 0xD60]
	0x01E4E35C MOV X0, X22

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X23, 0x258C000
	015 Move X22, 0x22B0000
	016 Move W8, [X23+4093]
	017 Move X22, [X22+264]
	018 Move X20, X2
	019 Move X21, X1
	020 Move X19, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {72}
	025 Move X0, 0x22A7000
	026 Move X0, [X0+1880]
	027 Call 0x1C17CF4
	028 Move X0, 0x22A8000
	029 Move X0, [X0+440]
	030 Call 0x1C17CF4
	031 Move X0, 0x22B0000
	032 Move X0, [X0+272]
	033 Call 0x1C17CF4
	034 Move X0, 0x22A9000
	035 Move X0, [X0+3704]
	036 Call 0x1C17CF4
	037 Move X0, 0x22B0000
	038 Move X0, [X0+280]
	039 Call 0x1C17CF4
	040 Move X0, 0x22A8000
	041 Move X0, [X0+456]
	042 Call 0x1C17CF4
	043 Move X0, 0x22A8000
	044 Move X0, [X0+464]
	045 Call 0x1C17CF4
	046 Move X0, 0x22B0000
	047 Move X0, [X0+264]
	048 Call 0x1C17CF4
	049 Move X0, 0x22B0000
	050 Move X0, [X0+288]
	051 Call 0x1C17CF4
	052 Move X0, 0x22B0000
	053 Move X0, [X0+296]
	054 Call 0x1C17CF4
	055 Move X0, 0x22AF000
	056 Move X0, [X0+304]
	057 Call 0x1C17CF4
	058 Move X0, 0x22AF000
	059 Move X0, [X0+312]
	060 Call 0x1C17CF4
	061 Move X0, 0x22AF000
	062 Move X0, [X0+320]
	063 Call 0x1C17CF4
	064 Move X0, 0x22AF000
	065 Move X0, [X0+328]
	066 Call 0x1C17CF4
	067 Move X0, 0x22AF000
	068 Move X0, [X0+336]
	069 Call 0x1C17CF4
	070 Move W8, 1
	071 Move [X23+4093], W8
	072 Move W2, [X19+128]
	073 Move X3, [X22]
	074 Move W1, 222
	075 Move X0, X19
	076 Call LoadBalancingClient.CheckIfOpCanBeSent, X0, X1, X2, X3
	077 Move TEMP, X0
	078 And TEMP, TEMP, 1
	079 Compare TEMP, 1
	080 JumpIfNotEqual {122}
	081 Move X8, [X19+312]
	082 Compare X8, 0
	083 JumpIfEqual {91}
	084 Move X9, 0x22AF000
	085 Move X8, [X19]
	086 Move X9, [X9+328]
	087 Move W1, 2
	088 Move X3, [X8+544]
	089 Move X2, [X9]
	090 Move X9, [X8+536]
	091 Compare X21, 0
	092 JumpIfEqual {113}
	093 Move W8, [X21+24]
	094 Compare W8, 0
	095 JumpIfEqual {113}
	096 NotImplemented "Instruction CMP not yet implemented."
	097 Move X8, 0x22A6000
	098 Move X8, [X8+1880]
	099 Add X1, X31, 12
	100 Move X0, [X8]
	101 Move W8, 512
	102 Move [X31+12], W8
	103 Call 0x1C17E04
	104 Move X8, 0x22AF000
	105 Move X8, [X8+296]
	106 Move X1, X0
	107 Move X2, X31
	108 Move X8, [X8]
	109 Move X0, X8
	110 Call String.Format, X0, X1
	111 Move X8, [X19]
	112 Move X2, X0
	113 Move X9, 0x22AF000
	114 Move X8, [X19]
	115 Move X9, [X9+312]
	116 Move X2, [X9]
	117 Move X9, [X8+536]
	118 Move X3, [X8+544]
	119 Move W1, 1
	120 Move X0, X19
	121 NotImplemented "Instruction BLR not yet implemented."
	122 Move W0, W31
	123 Move X20, [X31+96]
	124 Move X19, [X31+104]
	125 Move X22, [X31+80]
	126 Move X21, [X31+88]
	127 Move X24, [X31+64]
	128 Move X23, [X31+72]
	129 Move X26, [X31+48]
	130 Move X25, [X31+56]
	131 Move X28, [X31+32]
	132 Move X27, [X31+40]
	133 Move X29, [X31+16]
	134 Move X30, [X31+24]
	135 And W0, W0, 1
	136 Add X31, X31, 112
	137 Return X0
	138 Move X8, 0x22A7000
	139 Move X8, [X8+464]
	140 Move X0, [X8]
	141 Call 0x1C17F10
	142 Move X8, 0x22AF000
	143 Move W1, [X21+24]
	144 Move X8, [X8+280]
	145 Move X22, X0
	146 Move X2, [X8]
	147 Call List`1<Object>..ctor, X0, X1
	148 Move X8, [X21+24]
	149 NotImplemented "Instruction CMP not yet implemented."
	150 Move X26, 0x22A6000
	151 Move X27, 0x22AF000
	152 Move X28, 0x22AF000
	153 Move X29, 0x22AF000
	154 Move X26, [X26+1880]
	155 Move X27, [X27+288]
	156 Move X28, [X28+336]
	157 Move X29, [X29+272]
	158 Move X24, X31
	159 And X8, X8, 0
	160 Add X25, X21, 32
	161 NotImplemented "Instruction CMP not yet implemented."
	162 Move X23, [X25]
	163 Move X1, X31
	164 Move X0, X23
	165 Call String.IsNullOrEmpty, X0
	166 Move TEMP, X0
	167 And TEMP, TEMP, 1
	168 Compare TEMP, 1
	169 JumpIfNotEqual {179}
	170 Move X0, [X26]
	171 Add X1, X31, 12
	172 Move [X31+12], W24
	173 Call 0x1C17E04
	174 Move X8, [X27]
	175 Move X1, X0
	176 Move X2, X31
	177 Move X0, X8
	178 Call String.Format, X0, X1
	179 Move X8, [X19+48]
	180 Compare X8, 0
	181 JumpIfEqual {185}
	182 Move X1, [X8+48]
	183 Compare X23, 0
	184 JumpIfNotEqual {188}
	185 Move X1, X31
	186 Compare X23, 0
	187 JumpIfEqual {282}
	188 Move X0, X23
	189 Move X2, X31
	190 Call String.Equals, X0, X1
	191 Move TEMP, X0
	192 And TEMP, TEMP, 1
	193 Compare TEMP, 1
	194 JumpIfNotEqual {200}
	195 Move X0, [X26]
	196 Add X1, X31, 12
	197 Move [X31+12], W24
	198 Call 0x1C17E04
	199 Move X8, [X28]
	200 Compare X22, 0
	201 JumpIfEqual {282}
	202 Move X2, [X29]
	203 Move X0, X22
	204 Move X1, X23
	205 Call List`1<Object>.Contains, X0, X1
	206 Move TEMP, X0
	207 And TEMP, TEMP, 1
	208 Compare TEMP, 1
	209 JumpIfNotEqual {232}
	210 Move X0, [X26]
	211 Add X1, X31, 12
	212 Move [X31+12], W24
	213 Call 0x1C17E04
	214 Move X8, 0x22AF000
	215 Move X8, [X8+320]
	216 Move X8, [X8]
	217 Move X2, X0
	218 Move X0, X8
	219 Move X1, X23
	220 Move X3, X31
	221 Call String.Format, X0, X1, X2
	222 Move X8, [X19]
	223 Move X2, X0
	224 Move W1, 2
	225 Move X0, X19
	226 Move X9, [X8+536]
	227 Move X3, [X8+544]
	228 NotImplemented "Instruction BLR not yet implemented."
	229 Move W8, [X21+24]
	230 Add X24, X24, 1
	231 NotImplemented "Instruction CMP not yet implemented."
	232 Move X9, 0x22A7000
	233 Move W10, [X22+28]
	234 Move X8, [X22+16]
	235 Move X9, [X9+440]
	236 Add W10, W10, 1
	237 Move X9, [X9]
	238 Move [X22+28], W10
	239 Compare X8, 0
	240 JumpIfEqual {282}
	241 NotImplemented "Instruction LDRSW not yet implemented."
	242 Move W11, [X8+24]
	243 NotImplemented "Instruction CMP not yet implemented."
	244 Add W9, W10, 1
	245 Add X8, X8, X10
	246 Move [X22+24], W9
	247 Move [X8+32], X23
	248 Move X8, [X9+32]
	249 Move X0, X22
	250 Move X1, X23
	251 Move X8, [X8+192]
	252 Move X2, [X8+112]
	253 Call List`1<Object>.AddWithResize, X0, X1
	254 Compare X22, 0
	255 JumpIfEqual {282}
	256 Move W8, [X22+24]
	257 Compare W8, 0
	258 JumpIfEqual {278}
	259 Move X8, 0x22A8000
	260 Move X8, [X8+3704]
	261 Move X0, X22
	262 Move X1, [X8]
	263 Call List`1<Object>.ToArray, X0
	264 Move X8, [X19+16]
	265 Compare X8, 0
	266 JumpIfEqual {282}
	267 Move X9, [X8]
	268 Move X21, X0
	269 Move X0, X8
	270 Move X1, X21
	271 Move X10, [X9+728]
	272 Move X3, [X9+736]
	273 Move X2, X20
	274 NotImplemented "Instruction BLR not yet implemented."
	275 And W31, W0, 1
	276 NotImplemented "Instruction CSEL not yet implemented."
	277 Move [X19+312], X8
	278 Move X9, 0x22AF000
	279 Move X8, [X19]
	280 Move X9, [X9+304]
	281 Call 0x1C17F28
	282 Call 0x1C17F20

Method: System.Boolean OpJoinLobby(Fusion.Photon.Realtime.TypedLobby lobby)

Disassembly:
	0x01E4E360 LDR X1, [X24]
	0x01E4E364 BL 0x2AA4E88
	0x01E4E368 CBZ W0, 0x1E4E3E4
	0x01E4E36C ADRP X8, 0x22AD000
	0x01E4E370 LDR X8, [X8 + 0xDA0]
	0x01E4E374 LDR X0, [X8]
	0x01E4E378 BL 0x1C16F10
	0x01E4E37C MOV X1, X31
	0x01E4E380 MOV X23, X0
	0x01E4E384 BL 0x34ED7D8
	0x01E4E388 ADRP X8, 0x22AD000
	0x01E4E38C LDR X8, [X8 + 0xD98]
	0x01E4E390 LDR X0, [X8]
	0x01E4E394 LDR W8, [X0 + 0xE0]
	0x01E4E398 CBNZ W8, 0x1E4E3A0
	0x01E4E39C BL 0x1C16DFC
	0x01E4E3A0 MOV X0, X23
	0x01E4E3A4 MOV X1, X22
	0x01E4E3A8 BL 0x1E493F4
	0x01E4E3AC CBZ X23, 0x1E4E430
	0x01E4E3B0 LDR X1, [X24]
	0x01E4E3B4 MOV X0, X23
	0x01E4E3B8 BL 0x2AA4E88
	0x01E4E3BC CBZ W0, 0x1E4E420
	0x01E4E3C0 MOV X0, X19
	0x01E4E3C4 MOV X1, X23
	0x01E4E3C8 MOV X2, X21
	0x01E4E3CC MOV X3, X20
	0x01E4E3D0 LDP X20, X19, [X31 + 0x30]
	0x01E4E3D4 LDP X22, X21, [X31 + 0x20]
	0x01E4E3D8 LDP X24, X23, [X31 + 0x10]
	0x01E4E3DC LDR X30, [X31], #0x40
	0x01E4E3E0 B 0x1E4E434
	0x01E4E3E4 ADRP X9, 0x22AE000
	0x01E4E3E8 LDR X8, [X19]
	0x01E4E3EC LDR X9, [X9 + 0x210]
	0x01E4E3F0 LDR X2, [X9]
	0x01E4E3F4 LDR X9, [X8 + 0x218]
	0x01E4E3F8 LDR X3, [X8 + 0x220]
	0x01E4E3FC MOVZ W1, 0x1
	0x01E4E400 MOV X0, X19
	0x01E4E404 BLR X9
	0x01E4E408 LDP X20, X19, [X31 + 0x30]
	0x01E4E40C LDP X22, X21, [X31 + 0x20]
	0x01E4E410 LDP X24, X23, [X31 + 0x10]
	0x01E4E414 MOV W0, W31
	0x01E4E418 LDR X30, [X31], #0x40
	0x01E4E41C RET
	0x01E4E420 ADRP X9, 0x22AE000
	0x01E4E424 LDR X8, [X19]
	0x01E4E428 LDR X9, [X9 + 0x218]
	0x01E4E42C B 0x1E4E3F0
	0x01E4E430 BL 0x1C16F20
	0x01E4E434 STR X30, [X31 - 0x40]!
	0x01E4E438 STP X24, X23, [X31 + 0x10]
	0x01E4E43C STP X22, X21, [X31 + 0x20]
	0x01E4E440 STP X20, X19, [X31 + 0x30]
	0x01E4E444 ADRP X24, 0x258B000
	0x01E4E448 ADRP X23, 0x22AE000
	0x01E4E44C LDRB W8, [X24 + 0xC]
	0x01E4E450 LDR X23, [X23 + 0x1D8]
	0x01E4E454 MOV X22, X3
	0x01E4E458 MOV X21, X2

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x258B000
	007 Move X21, 0x22AF000
	008 Move W8, [X22+4094]
	009 Move X21, [X21+344]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x22AF000
	017 Move X0, [X0+352]
	018 Call 0x1C17CF4
	019 Move X0, 0x22AF000
	020 Move X0, [X0+344]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+4094], W8
	024 Move W2, [X19+128]
	025 Move X3, [X21]
	026 Move W1, 229
	027 Move X0, X19
	028 Call LoadBalancingClient.CheckIfOpCanBeSent, X0, X1, X2, X3
	029 Move TEMP, X0
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfNotEqual {71}
	033 Compare X20, 0
	034 JumpIfNotEqual {45}
	035 Move X20, 0x22AF000
	036 Move X20, [X20+352]
	037 Move X0, [X20]
	038 Move W8, [X0+224]
	039 Compare W8, 0
	040 JumpIfNotEqual {43}
	041 Call 0x1C17DFC
	042 Move X0, [X20]
	043 Move X8, [X0+184]
	044 Move X20, [X8]
	045 Move X0, [X19+16]
	046 Compare X0, 0
	047 JumpIfEqual {78}
	048 Move X8, [X0]
	049 Move X1, X20
	050 Move X9, [X8+600]
	051 Move X2, [X8+608]
	052 NotImplemented "Instruction BLR not yet implemented."
	053 Move TEMP, X0
	054 And TEMP, TEMP, 1
	055 Compare TEMP, 1
	056 JumpIfNotEqual {71}
	057 Move W1, [X19+144]
	058 Move [X19+240], X20
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Move X8, [X19+152]
	061 Move W9, 3
	062 Move [X19+144], W9
	063 Compare X8, 0
	064 JumpIfEqual {70}
	065 Move X9, [X8+24]
	066 Move X0, [X8+64]
	067 Move X3, [X8+40]
	068 Move W2, 3
	069 NotImplemented "Instruction BLR not yet implemented."
	070 Move W0, 1
	071 Move W0, W31
	072 Move X20, [X31+32]
	073 Move X19, [X31+40]
	074 Move X22, [X31+16]
	075 Move X21, [X31+24]
	076 Move X30, [X31+48]
	077 Return X0
	078 Call 0x1C17F20

Method: System.Boolean OpLeaveLobby()

Disassembly:
	0x01E4E45C MOV X20, X1
	0x01E4E460 MOV X19, X0
	0x01E4E464 TBNZ X8, 0x0, 0x1E4E494
	0x01E4E468 ADRP X0, 0x22AD000
	0x01E4E46C LDR X0, [X0 + 0xD60]
	0x01E4E470 BL 0x1C16CF4
	0x01E4E474 ADRP X0, 0x22AE000
	0x01E4E478 LDR X0, [X0 + 0x220]
	0x01E4E47C BL 0x1C16CF4
	0x01E4E480 ADRP X0, 0x22AE000
	0x01E4E484 LDR X0, [X0 + 0x1D8]
	0x01E4E488 BL 0x1C16CF4
	0x01E4E48C MOVZ W8, 0x1
	0x01E4E490 STRB W8, [X24 + 0xC]
	0x01E4E494 LDR W2, [X19 + 0x80]
	0x01E4E498 LDR X3, [X23]
	0x01E4E49C MOVZ W1, 0xFC
	0x01E4E4A0 MOV X0, X19
	0x01E4E4A4 BL 0x1E4CB70
	0x01E4E4A8 TBZ X0, 0x0, 0x1E4E560
	0x01E4E4AC CBZ X20, 0x1E4E53C
	0x01E4E4B0 ADRP X23, 0x22AD000
	0x01E4E4B4 LDR X23, [X23 + 0xD60]
	0x01E4E4B8 MOV X0, X20
	0x01E4E4BC LDR X1, [X23]
	0x01E4E4C0 BL 0x2AA4E88
	0x01E4E4C4 CBZ W0, 0x1E4E53C
	0x01E4E4C8 LDR X0, [X19 + 0x10]
	0x01E4E4CC CBZ X0, 0x1E4E578
	0x01E4E4D0 MOV X1, X20
	0x01E4E4D4 MOV X2, X21
	0x01E4E4D8 MOV X3, X22

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x258B000
	006 Move X20, 0x22AF000
	007 Move W8, [X21+4095]
	008 Move X20, [X20+360]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x22AF000
	015 Move X0, [X0+360]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+4095], W8
	019 Move W2, [X19+128]
	020 Move X3, [X20]
	021 Move W1, 228
	022 Move X0, X19
	023 Call LoadBalancingClient.CheckIfOpCanBeSent, X0, X1, X2, X3
	024 Move TEMP, X0
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfNotEqual {39}
	028 Move X0, [X19+16]
	029 Compare X0, 0
	030 JumpIfEqual {45}
	031 Move X8, [X0]
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X2, [X8+616]
	035 Move X1, [X8+624]
	036 Move X30, [X31+32]
	037 Move X21, [X31+40]
	038 CallNoReturn X2
	039 Move X20, [X31+16]
	040 Move X19, [X31+24]
	041 Move W0, W31
	042 Move X30, [X31+32]
	043 Move X21, [X31+40]
	044 Return X0
	045 Call 0x1C17F20

Method: System.Boolean OpJoinRandomRoom(Fusion.Photon.Realtime.OpJoinRandomRoomParams opJoinRandomRoomParams = null)

Disassembly:
	0x01E4E4DC MOV X4, X31
	0x01E4E4E0 BL 0x1E57FF4
	0x01E4E4E4 TBZ X0, 0x0, 0x1E4E560
	0x01E4E4E8 LDR X0, [X19 + 0x110]
	0x01E4E4EC CBZ X0, 0x1E4E578
	0x01E4E4F0 LDRB W8, [X0 + 0x78]
	0x01E4E4F4 CBNZ W8, 0x1E4E534
	0x01E4E4F8 CBZ X21, 0x1E4E514
	0x01E4E4FC LDR X1, [X23]
	0x01E4E500 MOV X0, X21
	0x01E4E504 BL 0x2AA4E88
	0x01E4E508 CBNZ W0, 0x1E4E534
	0x01E4E50C LDR X0, [X19 + 0x110]
	0x01E4E510 CBZ X0, 0x1E4E578
	0x01E4E514 LDR X8, [X0]
	0x01E4E518 MOV X1, X20
	0x01E4E51C LDP X9, X2, [X8 + 0x178]
	0x01E4E520 BLR X9
	0x01E4E524 LDR X0, [X19 + 0xC0]
	0x01E4E528 CBZ X0, 0x1E4E578
	0x01E4E52C MOV X1, X20
	0x01E4E530 BL 0x1E4E60C
	0x01E4E534 MOVZ W0, 0x1
	0x01E4E538 B 0x1E4E564
	0x01E4E53C ADRP X9, 0x22AE000
	0x01E4E540 LDR X8, [X19]
	0x01E4E544 LDR X9, [X9 + 0x220]
	0x01E4E548 MOVZ W1, 0x1
	0x01E4E54C MOV X0, X19
	0x01E4E550 LDR X3, [X8 + 0x220]
	0x01E4E554 LDR X2, [X9]
	0x01E4E558 LDR X9, [X8 + 0x218]
	0x01E4E55C BLR X9
	0x01E4E560 MOV W0, W31
	0x01E4E564 LDP X20, X19, [X31 + 0x30]
	0x01E4E568 LDP X22, X21, [X31 + 0x20]
	0x01E4E56C LDP X24, X23, [X31 + 0x10]
	0x01E4E570 LDR X30, [X31], #0x40
	0x01E4E574 RET
	0x01E4E578 BL 0x1C16F20
	0x01E4E57C STP X30, X23, [X31 - 0x30]!
	0x01E4E580 STP X22, X21, [X31 + 0x10]
	0x01E4E584 STP X20, X19, [X31 + 0x20]
	0x01E4E588 ADRP X22, 0x258B000
	0x01E4E58C ADRP X23, 0x22AD000
	0x01E4E590 LDRB W8, [X22 + 0xB]
	0x01E4E594 LDR X23, [X23 + 0xDA0]
	0x01E4E598 MOV X20, X2
	0x01E4E59C MOV W21, W1
	0x01E4E5A0 MOV X19, X0
	0x01E4E5A4 TBNZ X8, 0x0, 0x1E4E5BC
	0x01E4E5A8 ADRP X0, 0x22AD000
	0x01E4E5AC LDR X0, [X0 + 0xDA0]
	0x01E4E5B0 BL 0x1C16CF4
	0x01E4E5B4 MOVZ W8, 0x1
	0x01E4E5B8 STRB W8, [X22 + 0xB]
	0x01E4E5BC LDR X0, [X23]
	0x01E4E5C0 BL 0x1C16F10
	0x01E4E5C4 MOV X1, X31
	0x01E4E5C8 MOV X22, X0
	0x01E4E5CC BL 0x34ED7D8
	0x01E4E5D0 CBZ X22, 0x1E4E608
	0x01E4E5D4 MOV X0, X22
	0x01E4E5D8 MOV W1, W21
	0x01E4E5DC MOV X2, X20
	0x01E4E5E0 MOV X3, X31
	0x01E4E5E4 BL 0x34ED9F4
	0x01E4E5E8 MOV X0, X19
	0x01E4E5EC MOV X1, X22
	0x01E4E5F0 LDP X20, X19, [X31 + 0x20]
	0x01E4E5F4 LDP X22, X21, [X31 + 0x10]
	0x01E4E5F8 MOV X2, X31
	0x01E4E5FC MOV X3, X31
	0x01E4E600 LDP X30, X23, [X31], #0x30
	0x01E4E604 B 0x1E4E434
	0x01E4E608 BL 0x1C16F20
	0x01E4E60C SUB X31, X31, 0x60
	0x01E4E610 STR X30, [X31 + 0x20]
	0x01E4E614 STP X24, X23, [X31 + 0x30]
	0x01E4E618 STP X22, X21, [X31 + 0x40]
	0x01E4E61C STP X20, X19, [X31 + 0x50]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x258C000
	007 Move X21, 0x22AF000
	008 Move W8, [X22]
	009 Move X21, [X21+368]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {27}
	016 Move X0, 0x22AE000
	017 Move X0, [X0+3520]
	018 Call 0x1C17CF4
	019 Move X0, 0x22AE000
	020 Move X0, [X0+3552]
	021 Call 0x1C17CF4
	022 Move X0, 0x22AF000
	023 Move X0, [X0+368]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X22], W8
	027 Move W2, [X19+128]
	028 Move X3, [X21]
	029 Move W1, 225
	030 Move X0, X19
	031 Call LoadBalancingClient.CheckIfOpCanBeSent, X0, X1, X2, X3
	032 Move TEMP, X0
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfNotEqual {90}
	036 Move X21, 0x22AE000
	037 Move X21, [X21+3520]
	038 Compare X20, 0
	039 JumpIfNotEqual {47}
	040 Move X8, 0x22AE000
	041 Move X8, [X8+3552]
	042 Move X0, [X8]
	043 Call 0x1C17F10
	044 Move X1, X31
	045 Move X20, X0
	046 Call OpJoinRandomRoomParams..ctor, X0
	047 Move X0, [X21]
	048 Call 0x1C17F10
	049 Move X1, X31
	050 Move X21, X0
	051 Call EnterRoomParams..ctor, X0
	052 Move [X19+296], X21
	053 Compare X20, 0
	054 JumpIfEqual {97}
	055 Compare X21, 0
	056 JumpIfEqual {97}
	057 Move X8, [X20+32]
	058 Move [X21+32], X8
	059 Move X8, [X20+48]
	060 Move [X21+56], X8
	061 Move X8, [X20+56]
	062 Move [X21+64], X8
	063 Move X0, [X19+16]
	064 Compare X0, 0
	065 JumpIfEqual {97}
	066 Move X8, [X0]
	067 Move X1, X20
	068 Move X9, [X8+664]
	069 Move X2, [X8+672]
	070 NotImplemented "Instruction BLR not yet implemented."
	071 Move TEMP, X0
	072 And TEMP, TEMP, 1
	073 Compare TEMP, 1
	074 JumpIfNotEqual {90}
	075 Move W1, [X19+144]
	076 Move W8, 2
	077 Move [X19+292], W8
	078 NotImplemented "Instruction CMP not yet implemented."
	079 Move X8, [X19+152]
	080 Move W9, 8
	081 Move [X19+144], W9
	082 Compare X8, 0
	083 JumpIfEqual {89}
	084 Move X9, [X8+24]
	085 Move X0, [X8+64]
	086 Move X3, [X8+40]
	087 Move W2, 8
	088 NotImplemented "Instruction BLR not yet implemented."
	089 Move W0, 1
	090 Move W0, W31
	091 Move X20, [X31+32]
	092 Move X19, [X31+40]
	093 Move X22, [X31+16]
	094 Move X21, [X31+24]
	095 Move X30, [X31+48]
	096 Return X0
	097 Call 0x1C17F20

Method: System.Boolean OpJoinRandomOrCreateRoom(Fusion.Photon.Realtime.OpJoinRandomRoomParams opJoinRandomRoomParams, Fusion.Photon.Realtime.EnterRoomParams createRoomParams)

Disassembly:
	0x01E4E620 ADRP X21, 0x258B000
	0x01E4E624 LDRB W8, [X21 + 0x35]
	0x01E4E628 MOV X19, X1
	0x01E4E62C MOV X20, X0
	0x01E4E630 TBNZ X8, 0x0, 0x1E4E678
	0x01E4E634 ADRP X0, 0x22AE000
	0x01E4E638 LDR X0, [X0 + 0x1E8]
	0x01E4E63C BL 0x1C16CF4
	0x01E4E640 ADRP X0, 0x22AE000
	0x01E4E644 LDR X0, [X0 + 0x1F0]
	0x01E4E648 BL 0x1C16CF4
	0x01E4E64C ADRP X0, 0x22AE000
	0x01E4E650 LDR X0, [X0 + 0x1F8]
	0x01E4E654 BL 0x1C16CF4
	0x01E4E658 ADRP X0, 0x22AE000
	0x01E4E65C LDR X0, [X0 + 0x200]
	0x01E4E660 BL 0x1C16CF4
	0x01E4E664 ADRP X0, 0x22AE000
	0x01E4E668 LDR X0, [X0 + 0x208]
	0x01E4E66C BL 0x1C16CF4
	0x01E4E670 MOVZ W8, 0x1
	0x01E4E674 STRB W8, [X21 + 0x35]
	0x01E4E678 STP X31, X31, [X31 + 0x8]
	0x01E4E67C STR X31, [X31 + 0x18]
	0x01E4E680 LDR X0, [X20 + 0x28]
	0x01E4E684 CBZ X0, 0x1E4E760
	0x01E4E688 ADRP X24, 0x22AE000
	0x01E4E68C ADRP X22, 0x22AE000
	0x01E4E690 ADRP X23, 0x22AE000
	0x01E4E694 ADRP X21, 0x22AE000
	0x01E4E698 LDR X24, [X24 + 0x208]
	0x01E4E69C LDR X22, [X22 + 0x1F0]
	0x01E4E6A0 LDR X23, [X23 + 0x200]
	0x01E4E6A4 LDR X21, [X21 + 0x1E8]
	0x01E4E6A8 BL 0x1E54C74
	0x01E4E6AC LDR X1, [X24]
	0x01E4E6B0 ADD X8, X31, 0x8
	0x01E4E6B4 MOV X0, X20
	0x01E4E6B8 BL 0x301CB58
	0x01E4E6BC LDR X1, [X22]
	0x01E4E6C0 ADD X0, X31, 0x8
	0x01E4E6C4 BL 0x2BC4350
	0x01E4E6C8 TBZ X0, 0x0, 0x1E4E738
	0x01E4E6CC LDR X20, [X31 + 0x18]
	0x01E4E6D0 CBZ X20, 0x1E4E75C
	0x01E4E6D4 LDR X8, [X20]
	0x01E4E6D8 LDR X1, [X23]
	0x01E4E6DC LDRH W9, [X8 + 0x12E]
	0x01E4E6E0 CBZ X9, 0x1E4E704
	0x01E4E6E4 LDR X10, [X8 + 0xB0]
	0x01E4E6E8 ADD X10, X10, 0x8
	0x01E4E6EC LDUR X11, [X10 - 0x8]
	0x01E4E6F0 CMP X11, X1
	0x01E4E6F4 B.EQ 0x1E4E714
	0x01E4E6F8 SUBS X9, X9, 0x1
	0x01E4E6FC ADD X10, X10, 0x10
	0x01E4E700 B.NE 0x1E4E6EC
	0x01E4E704 MOVZ W2, 0x2
	0x01E4E708 MOV X0, X20
	0x01E4E70C BL 0x1C5C788
	0x01E4E710 B 0x1E4E724
	0x01E4E714 LDR W9, [X10]
	0x01E4E718 ADD W9, W9, 0x2
	0x01E4E71C ADD X8, X8, W9, 0x4, SXTW
	0x01E4E720 ADD X0, X8, 0x138
	0x01E4E724 LDP X8, X2, [X0]
	0x01E4E728 MOV X0, X20
	0x01E4E72C MOV X1, X19
	0x01E4E730 BLR X8
	0x01E4E734 B 0x1E4E6BC
	0x01E4E738 LDR X1, [X21]
	0x01E4E73C ADD X0, X31, 0x8
	0x01E4E740 BL 0x2BC434C
	0x01E4E744 LDP X20, X19, [X31 + 0x50]
	0x01E4E748 LDP X22, X21, [X31 + 0x40]
	0x01E4E74C LDP X24, X23, [X31 + 0x30]
	0x01E4E750 LDR X30, [X31 + 0x20]
	0x01E4E754 ADD X31, X31, 0x60
	0x01E4E758 RET
	0x01E4E75C BL 0x1C16F20
	0x01E4E760 BL 0x1C16F20
	0x01E4E764 B 0x1E4E76C
	0x01E4E768 B 0x1E4E76C
	0x01E4E76C MOV X19, X0
	0x01E4E770 CMP W1, 0x1
	0x01E4E774 B.NE 0x1E4E7A0
	0x01E4E778 MOV X0, X19
	0x01E4E77C BL 0x3EB1AD0
	0x01E4E780 LDR X20, [X0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x258C000
	008 Move X22, 0x22AF000
	009 Move W8, [X23+1]
	010 Move X22, [X22+376]
	011 Move X20, X2
	012 Move X21, X1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0x22AE000
	019 Move X0, [X0+3520]
	020 Call 0x1C17CF4
	021 Move X0, 0x22AE000
	022 Move X0, [X0+3552]
	023 Call 0x1C17CF4
	024 Move X0, 0x22AF000
	025 Move X0, [X0+376]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X23+1], W8
	029 Move W2, [X19+128]
	030 Move X3, [X22]
	031 Move W1, 225
	032 Move X0, X19
	033 Call LoadBalancingClient.CheckIfOpCanBeSent, X0, X1, X2, X3
	034 Move TEMP, X0
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfNotEqual {101}
	038 Compare X21, 0
	039 JumpIfEqual {42}
	040 Compare X20, 0
	041 JumpIfNotEqual {60}
	042 Move X8, 0x22AE000
	043 Move X8, [X8+3552]
	044 Move X0, [X8]
	045 Call 0x1C17F10
	046 Move X1, X31
	047 Move X21, X0
	048 Call OpJoinRandomRoomParams..ctor, X0
	049 Compare X20, 0
	050 JumpIfNotEqual {60}
	051 Move X8, 0x22AE000
	052 Move X8, [X8+3520]
	053 Move X0, [X8]
	054 Call 0x1C17F10
	055 Move X1, X31
	056 Move X20, X0
	057 Call EnterRoomParams..ctor, X0
	058 Compare X20, 0
	059 JumpIfEqual {109}
	060 Move W8, 1
	061 Move [X20+49], W8
	062 Move [X19+296], X20
	063 Compare X21, 0
	064 JumpIfEqual {109}
	065 Move X8, [X21+32]
	066 Move [X20+32], X8
	067 Move X8, [X21+48]
	068 Move [X20+56], X8
	069 Move X8, [X21+56]
	070 Compare X8, 0
	071 JumpIfEqual {73}
	072 Move [X20+64], X8
	073 Move X0, [X19+16]
	074 Compare X0, 0
	075 JumpIfEqual {109}
	076 Move X8, [X0]
	077 Move X1, X21
	078 Move X2, X20
	079 Move X9, [X8+680]
	080 Move X3, [X8+688]
	081 NotImplemented "Instruction BLR not yet implemented."
	082 Move TEMP, X0
	083 And TEMP, TEMP, 1
	084 Compare TEMP, 1
	085 JumpIfNotEqual {101}
	086 Move W1, [X19+144]
	087 Move W8, 3
	088 Move [X19+292], W8
	089 NotImplemented "Instruction CMP not yet implemented."
	090 Move X8, [X19+152]
	091 Move W9, 8
	092 Move [X19+144], W9
	093 Compare X8, 0
	094 JumpIfEqual {100}
	095 Move X9, [X8+24]
	096 Move X0, [X8+64]
	097 Move X3, [X8+40]
	098 Move W2, 8
	099 NotImplemented "Instruction BLR not yet implemented."
	100 Move W0, 1
	101 Move W0, W31
	102 Move X20, [X31+32]
	103 Move X19, [X31+40]
	104 Move X22, [X31+16]
	105 Move X21, [X31+24]
	106 Move X30, [X31+48]
	107 Move X23, [X31+56]
	108 Return X0
	109 Call 0x1C17F20

Method: System.Boolean OpCreateRoom(Fusion.Photon.Realtime.EnterRoomParams enterRoomParams)

Disassembly:
	0x01E4E784 BL 0x3EB1AE0
	0x01E4E788 LDR X1, [X21]
	0x01E4E78C ADD X0, X31, 0x8
	0x01E4E790 BL 0x2BC434C
	0x01E4E794 CBZ X20, 0x1E4E744
	0x01E4E798 MOV X0, X20
	0x01E4E79C BL 0x1C16F18
	0x01E4E7A0 MOV X20, X31
	0x01E4E7A4 B 0x1E4E7AC
	0x01E4E7A8 MOV X19, X0
	0x01E4E7AC LDR X1, [X21]
	0x01E4E7B0 ADD X0, X31, 0x8
	0x01E4E7B4 BL 0x2BC434C
	0x01E4E7B8 CBNZ X20, 0x1E4E7C4
	0x01E4E7BC MOV X0, X19
	0x01E4E7C0 BL 0x1D2C690
	0x01E4E7C4 MOV X0, X20
	0x01E4E7C8 BL 0x1C16F18
	0x01E4E7CC BL 0x1990590
	0x01E4E7D0 STP X30, X25, [X31 - 0x40]!
	0x01E4E7D4 STP X24, X23, [X31 + 0x10]
	0x01E4E7D8 STP X22, X21, [X31 + 0x20]
	0x01E4E7DC STP X20, X19, [X31 + 0x30]
	0x01E4E7E0 ADRP X25, 0x258B000
	0x01E4E7E4 ADRP X24, 0x22AE000
	0x01E4E7E8 LDRB W8, [X25 + 0xD]
	0x01E4E7EC LDR X24, [X24 + 0x228]
	0x01E4E7F0 MOV X19, X4
	0x01E4E7F4 MOV X20, X3
	0x01E4E7F8 MOV X21, X2
	0x01E4E7FC MOV W22, W1
	0x01E4E800 MOV X23, X0
	0x01E4E804 TBNZ X8, 0x0, 0x1E4E81C
	0x01E4E808 ADRP X0, 0x22AE000
	0x01E4E80C LDR X0, [X0 + 0x228]
	0x01E4E810 BL 0x1C16CF4
	0x01E4E814 MOVZ W8, 0x1
	0x01E4E818 STRB W8, [X25 + 0xD]
	0x01E4E81C LDR W2, [X23 + 0x80]
	0x01E4E820 LDR X3, [X24]
	0x01E4E824 MOVZ W1, 0xFD
	0x01E4E828 MOV X0, X23
	0x01E4E82C BL 0x1E4CB70
	0x01E4E830 TBZ X0, 0x0, 0x1E4E86C
	0x01E4E834 LDR X0, [X23 + 0x10]
	0x01E4E838 CBZ X0, 0x1E4E884
	0x01E4E83C LDR X8, [X0]
	0x01E4E840 MOV W1, W22
	0x01E4E844 MOV X2, X21
	0x01E4E848 MOV X3, X20
	0x01E4E84C LDR X6, [X8 + 0x318]
	0x01E4E850 LDR X5, [X8 + 0x320]
	0x01E4E854 MOV X4, X19
	0x01E4E858 LDP X20, X19, [X31 + 0x30]
	0x01E4E85C LDP X22, X21, [X31 + 0x20]
	0x01E4E860 LDP X24, X23, [X31 + 0x10]
	0x01E4E864 LDP X30, X25, [X31], #0x40

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x258C000
	007 Move X21, 0x22AF000
	008 Move W8, [X22+2]
	009 Move X21, [X21+384]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x22AF000
	017 Move X0, [X0+384]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+2], W8
	021 Move W2, [X19+128]
	022 Move X3, [X21]
	023 Move W1, 227
	024 Move X0, X19
	025 Call LoadBalancingClient.CheckIfOpCanBeSent, X0, X1, X2, X3
	026 Move TEMP, X0
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfNotEqual {63}
	030 Compare X20, 0
	031 JumpIfEqual {70}
	032 Move W8, [X19+128]
	033 NotImplemented "Instruction CMP not yet implemented."
	034 NotImplemented "Instruction CSET not yet implemented."
	035 Move [X20+48], W8
	036 Move [X19+296], X20
	037 Move X0, [X19+16]
	038 Compare X0, 0
	039 JumpIfEqual {70}
	040 Move X8, [X0]
	041 Move X1, X20
	042 Move X9, [X8+632]
	043 Move X2, [X8+640]
	044 NotImplemented "Instruction BLR not yet implemented."
	045 Move TEMP, X0
	046 And TEMP, TEMP, 1
	047 Compare TEMP, 1
	048 JumpIfNotEqual {63}
	049 Move W1, [X19+144]
	050 Move [X19+292], W31
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Move X8, [X19+152]
	053 Move W9, 8
	054 Move [X19+144], W9
	055 Compare X8, 0
	056 JumpIfEqual {62}
	057 Move X9, [X8+24]
	058 Move X0, [X8+64]
	059 Move X3, [X8+40]
	060 Move W2, 8
	061 NotImplemented "Instruction BLR not yet implemented."
	062 Move W0, 1
	063 Move W0, W31
	064 Move X20, [X31+32]
	065 Move X19, [X31+40]
	066 Move X22, [X31+16]
	067 Move X21, [X31+24]
	068 Move X30, [X31+48]
	069 Return X0
	070 Call 0x1C17F20

Method: System.Boolean OpJoinOrCreateRoom(Fusion.Photon.Realtime.EnterRoomParams enterRoomParams)

Disassembly:
	0x01E4E868 BR X6
	0x01E4E86C LDP X20, X19, [X31 + 0x30]
	0x01E4E870 LDP X22, X21, [X31 + 0x20]
	0x01E4E874 LDP X24, X23, [X31 + 0x10]
	0x01E4E878 MOV W0, W31
	0x01E4E87C LDP X30, X25, [X31], #0x40
	0x01E4E880 RET
	0x01E4E884 BL 0x1C16F20
	0x01E4E888 STP X30, X23, [X31 - 0x30]!
	0x01E4E88C STP X22, X21, [X31 + 0x10]
	0x01E4E890 STP X20, X19, [X31 + 0x20]
	0x01E4E894 ADRP X23, 0x258B000
	0x01E4E898 ADRP X22, 0x22AE000
	0x01E4E89C LDRB W8, [X23 + 0xE]
	0x01E4E8A0 LDR X22, [X22 + 0x230]
	0x01E4E8A4 MOV X19, X2
	0x01E4E8A8 MOV X20, X1
	0x01E4E8AC MOV X21, X0
	0x01E4E8B0 TBNZ X8, 0x0, 0x1E4E8C8
	0x01E4E8B4 ADRP X0, 0x22AE000
	0x01E4E8B8 LDR X0, [X0 + 0x230]
	0x01E4E8BC BL 0x1C16CF4
	0x01E4E8C0 MOVZ W8, 0x1
	0x01E4E8C4 STRB W8, [X23 + 0xE]
	0x01E4E8C8 LDR W2, [X21 + 0x80]
	0x01E4E8CC LDR X3, [X22]
	0x01E4E8D0 MOVZ W1, 0xF8
	0x01E4E8D4 MOV X0, X21
	0x01E4E8D8 BL 0x1E4CB70
	0x01E4E8DC TBZ X0, 0x0, 0x1E4E90C
	0x01E4E8E0 LDR X0, [X21 + 0x10]
	0x01E4E8E4 CBZ X0, 0x1E4E920
	0x01E4E8E8 LDR X8, [X0]
	0x01E4E8EC MOV X1, X20
	0x01E4E8F0 MOV X2, X19
	0x01E4E8F4 LDP X20, X19, [X31 + 0x20]
	0x01E4E8F8 LDR X4, [X8 + 0x308]
	0x01E4E8FC LDR X3, [X8 + 0x310]
	0x01E4E900 LDP X22, X21, [X31 + 0x10]
	0x01E4E904 LDP X30, X23, [X31], #0x30
	0x01E4E908 BR X4
	0x01E4E90C LDP X20, X19, [X31 + 0x20]
	0x01E4E910 LDP X22, X21, [X31 + 0x10]
	0x01E4E914 MOV W0, W31
	0x01E4E918 LDP X30, X23, [X31], #0x30
	0x01E4E91C RET
	0x01E4E920 BL 0x1C16F20
	0x01E4E924 SUB X31, X31, 0xA0
	0x01E4E928 STR X30, [X31 + 0x40]
	0x01E4E92C STP X28, X27, [X31 + 0x50]
	0x01E4E930 STP X26, X25, [X31 + 0x60]
	0x01E4E934 STP X24, X23, [X31 + 0x70]
	0x01E4E938 STP X22, X21, [X31 + 0x80]
	0x01E4E93C STP X20, X19, [X31 + 0x90]
	0x01E4E940 ADRP X23, 0x258B000
	0x01E4E944 LDRB W8, [X23 + 0xF]
	0x01E4E948 MOV W21, W3
	0x01E4E94C MOV X20, X2
	0x01E4E950 MOV X22, X1
	0x01E4E954 MOV X19, X0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x258C000
	007 Move X21, 0x22AF000
	008 Move W8, [X22+3]
	009 Move X21, [X21+392]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x22AF000
	017 Move X0, [X0+392]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+3], W8
	021 Move W2, [X19+128]
	022 Move X3, [X21]
	023 Move W1, 226
	024 Move X0, X19
	025 Call LoadBalancingClient.CheckIfOpCanBeSent, X0, X1, X2, X3
	026 Move TEMP, X0
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfNotEqual {66}
	030 Compare X20, 0
	031 JumpIfEqual {73}
	032 Move W8, [X19+128]
	033 Move W9, 1
	034 Move [X20+49], W9
	035 NotImplemented "Instruction CMP not yet implemented."
	036 NotImplemented "Instruction CSET not yet implemented."
	037 Move [X20+48], W8
	038 Move [X19+296], X20
	039 Move X0, [X19+16]
	040 Compare X0, 0
	041 JumpIfEqual {73}
	042 Move X8, [X0]
	043 Move X1, X20
	044 Move X9, [X8+648]
	045 Move X2, [X8+656]
	046 NotImplemented "Instruction BLR not yet implemented."
	047 Move TEMP, X0
	048 And TEMP, TEMP, 1
	049 Compare TEMP, 1
	050 JumpIfNotEqual {66}
	051 Move W1, [X19+144]
	052 Move W8, 4
	053 Move [X19+292], W8
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Move X8, [X19+152]
	056 Move W9, 8
	057 Move [X19+144], W9
	058 Compare X8, 0
	059 JumpIfEqual {65}
	060 Move X9, [X8+24]
	061 Move X0, [X8+64]
	062 Move X3, [X8+40]
	063 Move W2, 8
	064 NotImplemented "Instruction BLR not yet implemented."
	065 Move W0, 1
	066 Move W0, W31
	067 Move X20, [X31+32]
	068 Move X19, [X31+40]
	069 Move X22, [X31+16]
	070 Move X21, [X31+24]
	071 Move X30, [X31+48]
	072 Return X0
	073 Call 0x1C17F20

Method: System.Boolean OpJoinRoom(Fusion.Photon.Realtime.EnterRoomParams enterRoomParams)

Disassembly:
	0x01E4E958 TBNZ X8, 0x0, 0x1E4E9D0
	0x01E4E95C ADRP X0, 0x22AD000
	0x01E4E960 LDR X0, [X0 + 0xD60]
	0x01E4E964 BL 0x1C16CF4
	0x01E4E968 ADRP X0, 0x22AE000
	0x01E4E96C LDR X0, [X0 + 0x238]
	0x01E4E970 BL 0x1C16CF4
	0x01E4E974 ADRP X0, 0x22AE000
	0x01E4E978 LDR X0, [X0 + 0x240]
	0x01E4E97C BL 0x1C16CF4
	0x01E4E980 ADRP X0, 0x22AE000
	0x01E4E984 LDR X0, [X0 + 0x248]
	0x01E4E988 BL 0x1C16CF4
	0x01E4E98C ADRP X0, 0x22AE000
	0x01E4E990 LDR X0, [X0 + 0x250]
	0x01E4E994 BL 0x1C16CF4
	0x01E4E998 ADRP X0, 0x22AD000
	0x01E4E99C LDR X0, [X0 + 0xDA0]
	0x01E4E9A0 BL 0x1C16CF4
	0x01E4E9A4 ADRP X0, 0x22A5000
	0x01E4E9A8 LDR X0, [X0 + 0x758]
	0x01E4E9AC BL 0x1C16CF4
	0x01E4E9B0 ADRP X0, 0x22AE000
	0x01E4E9B4 LDR X0, [X0 + 0x258]
	0x01E4E9B8 BL 0x1C16CF4
	0x01E4E9BC ADRP X0, 0x22A7000
	0x01E4E9C0 LDR X0, [X0 + 0x278]
	0x01E4E9C4 BL 0x1C16CF4
	0x01E4E9C8 MOVZ W8, 0x1
	0x01E4E9CC STRB W8, [X23 + 0xF]
	0x01E4E9D0 STP X31, X31, [X31 + 0x20]
	0x01E4E9D4 STR X31, [X31 + 0x30]
	0x01E4E9D8 CBZ X22, 0x1E4EA18
	0x01E4E9DC LDR X0, [X19 + 0x110]
	0x01E4E9E0 CBZ X0, 0x1E4EA18
	0x01E4E9E4 LDR X8, [X0]
	0x01E4E9E8 MOV X1, X22
	0x01E4E9EC LDP X9, X2, [X8 + 0x178]
	0x01E4E9F0 BLR X9
	0x01E4E9F4 LDR W8, [X19 + 0x90]
	0x01E4E9F8 CMP W8, 0x9
	0x01E4E9FC B.NE 0x1E4EA18
	0x01E4EA00 LDR X8, [X19 + 0x110]
	0x01E4EA04 CBZ X8, 0x1E4EA18
	0x01E4EA08 LDR X0, [X19 + 0xC0]
	0x01E4EA0C CBZ X0, 0x1E4EC84
	0x01E4EA10 MOV X1, X22
	0x01E4EA14 BL 0x1E4E60C
	0x01E4EA18 CBZ X20, 0x1E4EC38
	0x01E4EA1C ADRP X8, 0x22AD000
	0x01E4EA20 LDR X8, [X8 + 0xD60]
	0x01E4EA24 MOV X0, X20
	0x01E4EA28 LDR X1, [X8]
	0x01E4EA2C BL 0x2AA4E88
	0x01E4EA30 CMP W0, 0x1
	0x01E4EA34 B.LT 0x1E4EC38
	0x01E4EA38 CMP W21, 0x1
	0x01E4EA3C B.LT 0x1E4EAA0
	0x01E4EA40 LDR X0, [X19 + 0x110]
	0x01E4EA44 CBZ X0, 0x1E4EC84
	0x01E4EA48 LDR X8, [X0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x258C000
	007 Move X21, 0x22AF000
	008 Move W8, [X22+4]
	009 Move X21, [X21+400]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x22AF000
	017 Move X0, [X0+400]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+4], W8
	021 Move W2, [X19+128]
	022 Move X3, [X21]
	023 Move W1, 226
	024 Move X0, X19
	025 Call LoadBalancingClient.CheckIfOpCanBeSent, X0, X1, X2, X3
	026 Move TEMP, X0
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfNotEqual {67}
	030 Compare X20, 0
	031 JumpIfEqual {74}
	032 Move W8, [X19+128]
	033 NotImplemented "Instruction CMP not yet implemented."
	034 NotImplemented "Instruction CSET not yet implemented."
	035 Move [X20+48], W8
	036 Move [X19+296], X20
	037 Move X0, [X19+16]
	038 Compare X0, 0
	039 JumpIfEqual {74}
	040 Move X8, [X0]
	041 Move X1, X20
	042 Move X9, [X8+648]
	043 Move X2, [X8+656]
	044 NotImplemented "Instruction BLR not yet implemented."
	045 Move TEMP, X0
	046 And TEMP, TEMP, 1
	047 Compare TEMP, 1
	048 JumpIfNotEqual {67}
	049 Move W8, [X20+49]
	050 Move W1, [X19+144]
	051 Move W9, 4
	052 NotImplemented "Instruction CMP not yet implemented."
	053 NotImplemented "Instruction CSINC not yet implemented."
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Move [X19+292], W8
	056 Move X8, [X19+152]
	057 Move W9, 8
	058 Move [X19+144], W9
	059 Compare X8, 0
	060 JumpIfEqual {66}
	061 Move X9, [X8+24]
	062 Move X0, [X8+64]
	063 Move X3, [X8+40]
	064 Move W2, 8
	065 NotImplemented "Instruction BLR not yet implemented."
	066 Move W0, 1
	067 Move W0, W31
	068 Move X20, [X31+32]
	069 Move X19, [X31+40]
	070 Move X22, [X31+16]
	071 Move X21, [X31+24]
	072 Move X30, [X31+48]
	073 Return X0
	074 Call 0x1C17F20

Method: System.Boolean OpRejoinRoom(System.String roomName, System.Object ticket = null)

Disassembly:
	0x01E4EA4C MOV W1, W21
	0x01E4EA50 MOV W2, W31
	0x01E4EA54 LDP X9, X3, [X8 + 0x1D8]
	0x01E4EA58 BLR X9
	0x01E4EA5C CBZ X0, 0x1E4EC38
	0x01E4EA60 MOV X1, X20
	0x01E4EA64 MOV W2, W21
	0x01E4EA68 MOV X22, X0
	0x01E4EA6C BL 0x1E4ED34
	0x01E4EA70 LDR X8, [X22]
	0x01E4EA74 MOV X20, X0
	0x01E4EA78 MOV X0, X22
	0x01E4EA7C MOV X1, X20
	0x01E4EA80 LDP X9, X2, [X8 + 0x178]
	0x01E4EA84 BLR X9
	0x01E4EA88 LDR X0, [X19 + 0xC0]
	0x01E4EA8C CBZ X0, 0x1E4EC84
	0x01E4EA90 MOV X1, X22
	0x01E4EA94 MOV X2, X20
	0x01E4EA98 BL 0x1E4E114
	0x01E4EA9C B 0x1E4EC38
	0x01E4EAA0 ADRP X8, 0x22AE000
	0x01E4EAA4 LDR X8, [X8 + 0x238]
	0x01E4EAA8 MOV X0, X20
	0x01E4EAAC LDR X1, [X8]
	0x01E4EAB0 BL 0x2AA4E98
	0x01E4EAB4 CBZ X0, 0x1E4EC84
	0x01E4EAB8 ADRP X8, 0x22AE000
	0x01E4EABC LDR X8, [X8 + 0x258]
	0x01E4EAC0 LDR X1, [X8]
	0x01E4EAC4 ADD X8, X31, 0x8
	0x01E4EAC8 BL 0x2EC7020
	0x01E4EACC LDUR V0, [X31 + 0x8]
	0x01E4EAD0 LDR X8, [X31 + 0x18]
	0x01E4EAD4 ADRP X25, 0x22AE000
	0x01E4EAD8 ADRP X26, 0x22A5000
	0x01E4EADC ADRP X27, 0x22AD000
	0x01E4EAE0 LDR X25, [X25 + 0x248]
	0x01E4EAE4 LDR X26, [X26 + 0x758]
	0x01E4EAE8 LDR X27, [X27 + 0xDA0]
	0x01E4EAEC STR V0, [X31 + 0x2]
	0x01E4EAF0 STR X8, [X31 + 0x30]
	0x01E4EAF4 ADRP X28, 0x22A7000
	0x01E4EAF8 LDR X28, [X28 + 0x278]
	0x01E4EAFC LDR X1, [X25]
	0x01E4EB00 ADD X0, X31, 0x20
	0x01E4EB04 BL 0x2C0B090
	0x01E4EB08 TBZ X0, 0x0, 0x1E4EC24
	0x01E4EB0C LDR X21, [X31 + 0x30]
	0x01E4EB10 CBZ X21, 0x1E4EC60
	0x01E4EB14 LDR X8, [X21]
	0x01E4EB18 LDR X1, [X26]
	0x01E4EB1C LDR X8, [X8 + 0x40]
	0x01E4EB20 LDR X9, [X1 + 0x40]
	0x01E4EB24 CMP X8, X9
	0x01E4EB28 B.NE 0x1E4EC64
	0x01E4EB2C MOV X0, X21
	0x01E4EB30 BL 0x1C16E08
	0x01E4EB34 LDR W22, [X0]
	0x01E4EB38 CBZ W22, 0x1E4EAFC
	0x01E4EB3C MOV X0, X20
	0x01E4EB40 MOV X1, X21
	0x01E4EB44 MOV X2, X31
	0x01E4EB48 BL 0x34ED878
	0x01E4EB4C MOV X21, X0
	0x01E4EB50 CBZ X0, 0x1E4EC70
	0x01E4EB54 LDR X8, [X21]
	0x01E4EB58 LDR X1, [X27]
	0x01E4EB5C LDRB W10, [X8 + 0x130]
	0x01E4EB60 LDRB W9, [X1 + 0x130]
	0x01E4EB64 CMP W10, W9
	0x01E4EB68 B.CC 0x1E4EC58

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x258C000
	008 Move X22, 0x22AF000
	009 Move W8, [X23+5]
	010 Move X22, [X22+408]
	011 Move X20, X2
	012 Move X21, X1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0x22AE000
	019 Move X0, [X0+3520]
	020 Call 0x1C17CF4
	021 Move X0, 0x22AF000
	022 Move X0, [X0+408]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X23+5], W8
	026 Move W2, [X19+128]
	027 Move X3, [X22]
	028 Move W1, 226
	029 Move X0, X19
	030 Call LoadBalancingClient.CheckIfOpCanBeSent, X0, X1, X2, X3
	031 Move TEMP, X0
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfNotEqual {80}
	035 Move X8, 0x22AE000
	036 Move X8, [X8+3520]
	037 Move W23, [X19+128]
	038 Move X0, [X8]
	039 Call 0x1C17F10
	040 Move X1, X31
	041 Move X22, X0
	042 Call EnterRoomParams..ctor, X0
	043 Compare X22, 0
	044 JumpIfEqual {88}
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Move W8, 3
	047 NotImplemented "Instruction CSET not yet implemented."
	048 Move [X22+16], X21
	049 Move [X22+49], W8
	050 Move [X22+48], W9
	051 Move [X22+64], X20
	052 Move X0, [X19+16]
	053 Move [X19+296], X22
	054 Compare X0, 0
	055 JumpIfEqual {88}
	056 Move X8, [X0]
	057 Move X1, X22
	058 Move X9, [X8+648]
	059 Move X2, [X8+656]
	060 NotImplemented "Instruction BLR not yet implemented."
	061 Move TEMP, X0
	062 And TEMP, TEMP, 1
	063 Compare TEMP, 1
	064 JumpIfNotEqual {80}
	065 Move W1, [X19+144]
	066 Move W0, 1
	067 Move [X19+292], W0
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Move X8, [X19+152]
	070 Move W9, 8
	071 Move [X19+144], W9
	072 Compare X8, 0
	073 JumpIfEqual {79}
	074 Move X9, [X8+24]
	075 Move X0, [X8+64]
	076 Move X3, [X8+40]
	077 Move W2, 8
	078 NotImplemented "Instruction BLR not yet implemented."
	079 Move W0, 1
	080 Move W0, W31
	081 Move X20, [X31+32]
	082 Move X19, [X31+40]
	083 Move X22, [X31+16]
	084 Move X21, [X31+24]
	085 Move X30, [X31+48]
	086 Move X23, [X31+56]
	087 Return X0
	088 Call 0x1C17F20

Method: System.Boolean OpLeaveRoom(System.Boolean becomeInactive, System.Boolean sendAuthCookie = False)

Disassembly:
	0x01E4EB6C LDR X8, [X8 + 0xC8]
	0x01E4EB70 ADD X8, X8, X9, 0x3, LSL
	0x01E4EB74 LDUR X8, [X8 - 0x8]
	0x01E4EB78 CMP X8, X1
	0x01E4EB7C B.NE 0x1E4EC58
	0x01E4EB80 MOVZ W1, 0xFF
	0x01E4EB84 MOV X0, X21
	0x01E4EB88 MOV X2, X31
	0x01E4EB8C BL 0x34ED940
	0x01E4EB90 MOV X23, X0
	0x01E4EB94 CBZ X0, 0x1E4EBA8
	0x01E4EB98 LDR X1, [X28]
	0x01E4EB9C LDR X8, [X23]
	0x01E4EBA0 CMP X8, X1
	0x01E4EBA4 B.NE 0x1E4EC74
	0x01E4EBA8 LDR X0, [X19 + 0x110]
	0x01E4EBAC CBZ X0, 0x1E4EC6C
	0x01E4EBB0 LDR X8, [X0]
	0x01E4EBB4 LDP X9, X3, [X8 + 0x1D8]
	0x01E4EBB8 MOV W1, W22
	0x01E4EBBC MOV W2, W31
	0x01E4EBC0 BLR X9
	0x01E4EBC4 MOV X24, X0
	0x01E4EBC8 CBNZ X0, 0x1E4EC0C
	0x01E4EBCC LDR X8, [X19]
	0x01E4EBD0 LDP X9, X5, [X8 + 0x1F8]
	0x01E4EBD4 MOV X0, X19
	0x01E4EBD8 MOV X1, X23
	0x01E4EBDC MOV W2, W22
	0x01E4EBE0 MOV W3, W31
	0x01E4EBE4 MOV X4, X21
	0x01E4EBE8 BLR X9
	0x01E4EBEC MOV X24, X0
	0x01E4EBF0 LDR X0, [X19 + 0x110]
	0x01E4EBF4 CBZ X0, 0x1E4EC7C
	0x01E4EBF8 LDR X8, [X0]
	0x01E4EBFC LDP X9, X2, [X8 + 0x1C8]
	0x01E4EC00 MOV X1, X24
	0x01E4EC04 BLR X9
	0x01E4EC08 CBZ X24, 0x1E4EC80
	0x01E4EC0C LDR X8, [X24]
	0x01E4EC10 LDP X9, X2, [X8 + 0x178]
	0x01E4EC14 MOV X0, X24
	0x01E4EC18 MOV X1, X21
	0x01E4EC1C BLR X9
	0x01E4EC20 B 0x1E4EAFC
	0x01E4EC24 ADRP X8, 0x22AE000
	0x01E4EC28 LDR X8, [X8 + 0x240]
	0x01E4EC2C ADD X0, X31, 0x20
	0x01E4EC30 LDR X1, [X8]
	0x01E4EC34 BL 0x2C0B08C
	0x01E4EC38 LDP X20, X19, [X31 + 0x90]
	0x01E4EC3C LDP X22, X21, [X31 + 0x80]
	0x01E4EC40 LDP X24, X23, [X31 + 0x70]
	0x01E4EC44 LDP X26, X25, [X31 + 0x60]
	0x01E4EC48 LDP X28, X27, [X31 + 0x50]
	0x01E4EC4C LDR X30, [X31 + 0x40]
	0x01E4EC50 ADD X31, X31, 0xA0
	0x01E4EC54 RET
	0x01E4EC58 MOV X0, X21
	0x01E4EC5C BL 0x1C171E0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x258C000
	008 Move X22, 0x22AF000
	009 Move W8, [X23+6]
	010 Move X22, [X22+416]
	011 Move W19, W2
	012 Move W20, W1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0x22A8000
	019 Move X0, [X0+632]
	020 Call 0x1C17CF4
	021 Move X0, 0x22AF000
	022 Move X0, [X0+416]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X23+6], W8
	026 Move W2, [X21+128]
	027 Move X3, [X22]
	028 Move W1, 254
	029 Move X0, X21
	030 Call LoadBalancingClient.CheckIfOpCanBeSent, X0, X1, X2, X3
	031 Move TEMP, X0
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfNotEqual {69}
	035 Move W1, [X21+144]
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move X8, [X21+152]
	038 Move W9, 10
	039 Move [X21+144], W9
	040 Compare X8, 0
	041 JumpIfEqual {47}
	042 Move X9, [X8+24]
	043 Move X0, [X8+64]
	044 Move X3, [X8+40]
	045 Move W2, 10
	046 NotImplemented "Instruction BLR not yet implemented."
	047 Move X8, 0x22A8000
	048 Move X8, [X8+632]
	049 Move X0, [X21+16]
	050 Move X8, [X8]
	051 Move X8, [X8+184]
	052 Move X8, [X8]
	053 Move [X21+296], X31
	054 Move [X21+120], X8
	055 Compare X0, 0
	056 JumpIfEqual {77}
	057 Move X8, [X0]
	058 And W1, W20, 1
	059 And W2, W19, 1
	060 Move X20, [X31+32]
	061 Move X19, [X31+40]
	062 Move X4, [X8+696]
	063 Move X3, [X8+704]
	064 Move X22, [X31+16]
	065 Move X21, [X31+24]
	066 Move X30, [X31+48]
	067 Move X23, [X31+56]
	068 CallNoReturn X4
	069 Move X20, [X31+32]
	070 Move X19, [X31+40]
	071 Move X22, [X31+16]
	072 Move X21, [X31+24]
	073 Move W0, W31
	074 Move X30, [X31+48]
	075 Move X23, [X31+56]
	076 Return X0
	077 Call 0x1C17F20

Method: System.Boolean OpGetGameList(Fusion.Photon.Realtime.TypedLobby typedLobby, System.String sqlLobbyFilter)

Disassembly:
	0x01E4EC60 BL 0x1C16F20
	0x01E4EC64 MOV X0, X21
	0x01E4EC68 BL 0x1C171E0
	0x01E4EC6C BL 0x1C16F20
	0x01E4EC70 BL 0x1C16F20
	0x01E4EC74 MOV X0, X23
	0x01E4EC78 BL 0x1C171E0
	0x01E4EC7C BL 0x1C16F20
	0x01E4EC80 BL 0x1C16F20
	0x01E4EC84 BL 0x1C16F20
	0x01E4EC88 B 0x1E4ECC0
	0x01E4EC8C B 0x1E4ECC0
	0x01E4EC90 B 0x1E4ECC0
	0x01E4EC94 B 0x1E4ECC0
	0x01E4EC98 B 0x1E4ECC0
	0x01E4EC9C B 0x1E4ECC0
	0x01E4ECA0 B 0x1E4ECC0
	0x01E4ECA4 B 0x1E4ECC0
	0x01E4ECA8 B 0x1E4ECC0
	0x01E4ECAC B 0x1E4ECC0
	0x01E4ECB0 B 0x1E4ECC0
	0x01E4ECB4 B 0x1E4ECC0
	0x01E4ECB8 B 0x1E4ECC0
	0x01E4ECBC B 0x1E4ECC0
	0x01E4ECC0 MOV X19, X0
	0x01E4ECC4 CMP W1, 0x1
	0x01E4ECC8 B.NE 0x1E4ECFC
	0x01E4ECCC MOV X0, X19
	0x01E4ECD0 BL 0x3EB1AD0
	0x01E4ECD4 LDR X20, [X0]
	0x01E4ECD8 BL 0x3EB1AE0
	0x01E4ECDC ADRP X8, 0x22AE000
	0x01E4ECE0 LDR X8, [X8 + 0x240]
	0x01E4ECE4 ADD X0, X31, 0x20
	0x01E4ECE8 LDR X1, [X8]
	0x01E4ECEC BL 0x2C0B08C
	0x01E4ECF0 CBZ X20, 0x1E4EC38
	0x01E4ECF4 MOV X0, X20
	0x01E4ECF8 BL 0x1C16F18
	0x01E4ECFC MOV X20, X31
	0x01E4ED00 B 0x1E4ED08
	0x01E4ED04 MOV X19, X0
	0x01E4ED08 ADRP X8, 0x22AE000
	0x01E4ED0C LDR X8, [X8 + 0x240]
	0x01E4ED10 LDR X1, [X8]
	0x01E4ED14 ADD X0, X31, 0x20
	0x01E4ED18 BL 0x2C0B08C
	0x01E4ED1C CBNZ X20, 0x1E4ED28
	0x01E4ED20 MOV X0, X19
	0x01E4ED24 BL 0x1D2C690
	0x01E4ED28 MOV X0, X20
	0x01E4ED2C BL 0x1C16F18
	0x01E4ED30 BL 0x1990590
	0x01E4ED34 STR X30, [X31 - 0x30]!
	0x01E4ED38 STP X22, X21, [X31 + 0x10]
	0x01E4ED3C STP X20, X19, [X31 + 0x20]
	0x01E4ED40 ADRP X22, 0x258B000
	0x01E4ED44 ADRP X21, 0x22A5000
	0x01E4ED48 LDRB W8, [X22 + 0x10]
	0x01E4ED4C LDR X21, [X21 + 0x758]
	0x01E4ED50 MOV W20, W2
	0x01E4ED54 MOV X19, X1
	0x01E4ED58 TBNZ X8, 0x0, 0x1E4ED88
	0x01E4ED5C ADRP X0, 0x22AD000
	0x01E4ED60 LDR X0, [X0 + 0xD58]
	0x01E4ED64 BL 0x1C16CF4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x258C000
	008 Move X22, 0x22AF000
	009 Move W8, [X23+7]
	010 Move X22, [X22+424]
	011 Move X20, X2
	012 Move X21, X1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0x22AF000
	019 Move X0, [X0+432]
	020 Call 0x1C17CF4
	021 Move X0, 0x22AF000
	022 Move X0, [X0+440]
	023 Call 0x1C17CF4
	024 Move X0, 0x22AF000
	025 Move X0, [X0+424]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X23+7], W8
	029 Move W2, [X19+128]
	030 Move X3, [X22]
	031 Move W1, 217
	032 Move X0, X19
	033 Call LoadBalancingClient.CheckIfOpCanBeSent, X0, X1, X2, X3
	034 Move TEMP, X0
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfNotEqual {76}
	038 Move X0, X20
	039 Move X1, X31
	040 Call String.IsNullOrEmpty, X0
	041 Move TEMP, X0
	042 And TEMP, TEMP, 1
	043 Compare TEMP, 1
	044 JumpIfNotEqual {48}
	045 Move X9, 0x22AF000
	046 Move X8, [X19]
	047 Move X9, [X9+432]
	048 Compare X21, 0
	049 JumpIfEqual {84}
	050 Move W8, [X21+24]
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Move X0, [X19+16]
	053 Compare X0, 0
	054 JumpIfEqual {84}
	055 Move X8, [X0]
	056 Move X1, X21
	057 Move X2, X20
	058 Move X20, [X31+32]
	059 Move X19, [X31+40]
	060 Move X4, [X8+712]
	061 Move X3, [X8+720]
	062 Move X22, [X31+16]
	063 Move X21, [X31+24]
	064 Move X30, [X31+48]
	065 Move X23, [X31+56]
	066 CallNoReturn X4
	067 Move X9, 0x22AF000
	068 Move X8, [X19]
	069 Move X9, [X9+440]
	070 Move X2, [X9]
	071 Move X9, [X8+536]
	072 Move X3, [X8+544]
	073 Move W1, 1
	074 Move X0, X19
	075 NotImplemented "Instruction BLR not yet implemented."
	076 Move X20, [X31+32]
	077 Move X19, [X31+40]
	078 Move X22, [X31+16]
	079 Move X21, [X31+24]
	080 Move W0, W31
	081 Move X30, [X31+48]
	082 Move X23, [X31+56]
	083 Return X0
	084 Call 0x1C17F20

Method: System.Boolean OpSetCustomPropertiesOfActor(System.Int32 actorNr, ExitGames.Client.Photon.Hashtable propertiesToSet, ExitGames.Client.Photon.Hashtable expectedProperties = null, Fusion.Photon.Realtime.WebFlags webFlags = null)

Disassembly:
	0x01E4ED68 ADRP X0, 0x22AD000
	0x01E4ED6C LDR X0, [X0 + 0xDA0]
	0x01E4ED70 BL 0x1C16CF4
	0x01E4ED74 ADRP X0, 0x22A5000
	0x01E4ED78 LDR X0, [X0 + 0x758]
	0x01E4ED7C BL 0x1C16CF4
	0x01E4ED80 MOVZ W8, 0x1
	0x01E4ED84 STRB W8, [X22 + 0x10]
	0x01E4ED88 LDR X0, [X21]
	0x01E4ED8C ADD X1, X31, 0xC
	0x01E4ED90 STR W20, [X31 + 0xC]
	0x01E4ED94 BL 0x1C16E04
	0x01E4ED98 CBZ X19, 0x1E4EE28
	0x01E4ED9C ADRP X8, 0x22AD000
	0x01E4EDA0 LDR X8, [X8 + 0xD58]
	0x01E4EDA4 MOV X1, X0
	0x01E4EDA8 MOV X0, X19
	0x01E4EDAC LDR X2, [X8]
	0x01E4EDB0 BL 0x2AA528C
	0x01E4EDB4 TBZ X0, 0x0, 0x1E4EE14
	0x01E4EDB8 LDR X0, [X21]
	0x01E4EDBC ADD X1, X31, 0x8
	0x01E4EDC0 STR W20, [X31 + 0x8]
	0x01E4EDC4 BL 0x1C16E04
	0x01E4EDC8 MOV X1, X0
	0x01E4EDCC MOV X0, X19
	0x01E4EDD0 MOV X2, X31
	0x01E4EDD4 BL 0x34ED878
	0x01E4EDD8 MOV X19, X0
	0x01E4EDDC CBZ X0, 0x1E4EE14
	0x01E4EDE0 ADRP X9, 0x22AD000
	0x01E4EDE4 LDR X9, [X9 + 0xDA0]
	0x01E4EDE8 LDR X8, [X19]
	0x01E4EDEC LDR X1, [X9]
	0x01E4EDF0 LDRB W10, [X8 + 0x130]
	0x01E4EDF4 LDRB W9, [X1 + 0x130]
	0x01E4EDF8 CMP W10, W9
	0x01E4EDFC B.CC 0x1E4EE2C
	0x01E4EE00 LDR X8, [X8 + 0xC8]
	0x01E4EE04 ADD X8, X8, X9, 0x3, LSL
	0x01E4EE08 LDUR X8, [X8 - 0x8]
	0x01E4EE0C CMP X8, X1
	0x01E4EE10 B.NE 0x1E4EE2C
	0x01E4EE14 MOV X0, X19
	0x01E4EE18 LDP X20, X19, [X31 + 0x20]
	0x01E4EE1C LDP X22, X21, [X31 + 0x10]
	0x01E4EE20 LDR X30, [X31], #0x30
	0x01E4EE24 RET
	0x01E4EE28 BL 0x1C16F20
	0x01E4EE2C MOV X0, X19
	0x01E4EE30 BL 0x1C171E0
	0x01E4EE34 SUB X31, X31, 0x30
	0x01E4EE38 STP X30, X21, [X31 + 0x10]
	0x01E4EE3C STP X20, X19, [X31 + 0x20]
	0x01E4EE40 ADRP X21, 0x258B000
	0x01E4EE44 LDRB W8, [X21 + 0x11]
	0x01E4EE48 MOV W20, W1
	0x01E4EE4C MOV X19, X0
	0x01E4EE50 TBNZ X8, 0x0, 0x1E4EE80
	0x01E4EE54 ADRP X0, 0x22A5000
	0x01E4EE58 LDR X0, [X0 + 0xB58]
	0x01E4EE5C BL 0x1C16CF4
	0x01E4EE60 ADRP X0, 0x22A5000
	0x01E4EE64 LDR X0, [X0 + 0x758]
	0x01E4EE68 BL 0x1C16CF4
	0x01E4EE6C ADRP X0, 0x22AE000
	0x01E4EE70 LDR X0, [X0 + 0x260]
	0x01E4EE74 BL 0x1C16CF4
	0x01E4EE78 MOVZ W8, 0x1
	0x01E4EE7C STRB W8, [X21 + 0x11]
	0x01E4EE80 LDR X1, [X19 + 0x108]
	0x01E4EE84 CBNZ X1, 0x1E4EF1C
	0x01E4EE88 LDR X0, [X19 + 0x110]
	0x01E4EE8C CBZ X0, 0x1E4EF90
	0x01E4EE90 MOV X1, X31
	0x01E4EE94 BL 0x1E5AAE0
	0x01E4EE98 ADRP X8, 0x22A5000
	0x01E4EE9C LDR X8, [X8 + 0xB58]
	0x01E4EEA0 CMP X0, 0x0
	0x01E4EEA4 CSET W9, EQ
	0x01E4EEA8 ADD X1, X31, 0xC
	0x01E4EEAC LDR X8, [X8]
	0x01E4EEB0 STRB W9, [X31 + 0xC]
	0x01E4EEB4 MOV X0, X8
	0x01E4EEB8 BL 0x1C16E04
	0x01E4EEBC ADRP X8, 0x22A5000
	0x01E4EEC0 LDR X8, [X8 + 0x758]
	0x01E4EEC4 MOV X21, X0
	0x01E4EEC8 ADD X1, X31, 0x8
	0x01E4EECC STR W20, [X31 + 0x8]
	0x01E4EED0 LDR X0, [X8]
	0x01E4EED4 BL 0x1C16E04
	0x01E4EED8 ADRP X8, 0x22AE000
	0x01E4EEDC LDR X8, [X8 + 0x260]
	0x01E4EEE0 MOV X3, X0
	0x01E4EEE4 MOV X1, X31
	0x01E4EEE8 MOV X2, X21
	0x01E4EEEC LDR X8, [X8]
	0x01E4EEF0 MOV X4, X31
	0x01E4EEF4 MOV X0, X8
	0x01E4EEF8 BL 0x3227C18
	0x01E4EEFC LDR X8, [X19]
	0x01E4EF00 MOV X2, X0
	0x01E4EF04 MOVZ W1, 0x2
	0x01E4EF08 MOV X0, X19
	0x01E4EF0C LDR X9, [X8 + 0x218]
	0x01E4EF10 LDR X3, [X8 + 0x220]
	0x01E4EF14 BLR X9
	0x01E4EF18 LDR X1, [X19 + 0x108]
	0x01E4EF1C LDR X0, [X19 + 0x110]
	0x01E4EF20 CBZ X0, 0x1E4EF60
	0x01E4EF24 LDR X8, [X0]
	0x01E4EF28 LDP X9, X2, [X8 + 0x198]
	0x01E4EF2C BLR X9
	0x01E4EF30 LDR X0, [X19 + 0x108]
	0x01E4EF34 CBZ X0, 0x1E4EF90
	0x01E4EF38 MOV W1, W20
	0x01E4EF3C MOV X2, X31
	0x01E4EF40 BL 0x1E5AFD4
	0x01E4EF44 LDR X0, [X19 + 0x110]
	0x01E4EF48 CBZ X0, 0x1E4EF90
	0x01E4EF4C LDR X8, [X0]
	0x01E4EF50 LDR X1, [X19 + 0x108]
	0x01E4EF54 LDP X9, X2, [X8 + 0x1C8]
	0x01E4EF58 BLR X9
	0x01E4EF5C B 0x1E4EF80
	0x01E4EF60 CBZ X1, 0x1E4EF90
	0x01E4EF64 MOV X0, X1
	0x01E4EF68 MOV W1, W20
	0x01E4EF6C MOV X2, X31
	0x01E4EF70 BL 0x1E5AFD4
	0x01E4EF74 LDR X8, [X19 + 0x108]
	0x01E4EF78 CBZ X8, 0x1E4EF90
	0x01E4EF7C STR X31, [X8 + 0x10]
	0x01E4EF80 LDP X20, X19, [X31 + 0x20]
	0x01E4EF84 LDP X30, X21, [X31 + 0x10]
	0x01E4EF88 ADD X31, X31, 0x30
	0x01E4EF8C RET
	0x01E4EF90 BL 0x1C16F20
	0x01E4EF94 SUB X31, X31, 0x40
	0x01E4EF98 STP X30, X23, [X31 + 0x10]
	0x01E4EF9C STP X22, X21, [X31 + 0x20]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+32], X30
	003 Move [X31+40], X25
	004 Move [X31+48], X24
	005 Move [X31+56], X23
	006 Move [X31+64], X22
	007 Move [X31+72], X21
	008 Move [X31+80], X20
	009 Move [X31+88], X19
	010 Move X24, 0x258C000
	011 Move W8, [X24+8]
	012 Move X22, X4
	013 Move X23, X3
	014 Move X21, X2
	015 Move W20, W1
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {44}
	021 Move X0, 0x22AE000
	022 Move X0, [X0+3688]
	023 Call 0x1C17CF4
	024 Move X0, 0x22AE000
	025 Move X0, [X0+3424]
	026 Call 0x1C17CF4
	027 Move X0, 0x22AE000
	028 Move X0, [X0+3480]
	029 Call 0x1C17CF4
	030 Move X0, 0x22AE000
	031 Move X0, [X0+3488]
	032 Call 0x1C17CF4
	033 Move X0, 0x22AF000
	034 Move X0, [X0+448]
	035 Call 0x1C17CF4
	036 Move X0, 0x22AF000
	037 Move X0, [X0+456]
	038 Call 0x1C17CF4
	039 Move X0, 0x22AF000
	040 Move X0, [X0+464]
	041 Call 0x1C17CF4
	042 Move W8, 1
	043 Move [X24+8], W8
	044 Compare X21, 0
	045 JumpIfEqual {94}
	046 Move X25, 0x22AE000
	047 Move X25, [X25+3424]
	048 Move X0, X21
	049 Move X1, [X25]
	050 Call Dictionary`2<Object, Object>.get_Count, X0
	051 Compare W0, 0
	052 JumpIfEqual {94}
	053 Move X8, [X19+272]
	054 Compare X8, 0
	055 JumpIfEqual {114}
	056 Move X8, 0x22AE000
	057 Move X8, [X8+3488]
	058 Move X0, [X8]
	059 Call 0x1C17F10
	060 Move X1, X31
	061 Move X24, X0
	062 Call Hashtable..ctor, X0
	063 Move X8, 0x22AE000
	064 Move X8, [X8+3480]
	065 Move X0, [X8]
	066 Move W8, [X0+224]
	067 Compare W8, 0
	068 JumpIfNotEqual {70}
	069 Call 0x1C17DFC
	070 Move X0, X24
	071 Move X1, X21
	072 Call Extensions.MergeStringKeys, X0, X1
	073 Compare X24, 0
	074 JumpIfEqual {173}
	075 Move X1, [X25]
	076 Move X0, X24
	077 Call Dictionary`2<Object, Object>.get_Count, X0
	078 Compare W0, 0
	079 JumpIfEqual {170}
	080 Move X0, X19
	081 Move W1, W20
	082 Move X2, X24
	083 Move X3, X23
	084 Move X4, X22
	085 Move X20, [X31+80]
	086 Move X19, [X31+88]
	087 Move X22, [X31+64]
	088 Move X21, [X31+72]
	089 Move X24, [X31+48]
	090 Move X23, [X31+56]
	091 Move X30, [X31+32]
	092 Move X25, [X31+40]
	093 Add X31, X31, 96
	094 Move X9, 0x22AF000
	095 Move X8, [X19]
	096 Move X9, [X9+464]
	097 Move X2, [X9]
	098 Move X9, [X8+536]
	099 Move X3, [X8+544]
	100 Move W1, 1
	101 Move X0, X19
	102 NotImplemented "Instruction BLR not yet implemented."
	103 Move X20, [X31+80]
	104 Move X19, [X31+88]
	105 Move X22, [X31+64]
	106 Move X21, [X31+72]
	107 Move X24, [X31+48]
	108 Move X23, [X31+56]
	109 Move X30, [X31+32]
	110 Move X25, [X31+40]
	111 Move W0, W31
	112 Add X31, X31, 96
	113 Return X0
	114 Compare X23, 0
	115 JumpIfNotEqual {142}
	116 Compare X22, 0
	117 JumpIfNotEqual {142}
	118 Move X0, [X19+264]
	119 Compare X0, 0
	120 JumpIfEqual {142}
	121 Move X1, X31
	122 Call Player.get_ActorNumber, X0
	123 NotImplemented "Instruction CMP not yet implemented."
	124 Move X0, [X19+264]
	125 Compare X0, 0
	126 JumpIfEqual {173}
	127 Move X1, X21
	128 Move X20, [X31+80]
	129 Move X19, [X31+88]
	130 Move X22, [X31+64]
	131 Move X21, [X31+72]
	132 Move X24, [X31+48]
	133 Move X23, [X31+56]
	134 Move X30, [X31+32]
	135 Move X25, [X31+40]
	136 Move X2, X31
	137 Move X3, X31
	138 Move X4, X31
	139 Add X31, X31, 96
	140 Call Player.SetCustomProperties, X0, X1, X2, X3
	141 Return X0
	142 Move X8, [X19+16]
	143 Compare X8, 0
	144 JumpIfEqual {173}
	145 Move W8, [X8+64]
	146 Compare W8, 0
	147 JumpIfEqual {103}
	148 Move X8, 0x22AE000
	149 Move X8, [X8+3688]
	150 Move W9, [X19+144]
	151 Move TEMP, 0
	152 Not TEMP
	153 Move X10, TEMP
	154 Add X0, X31, 8
	155 Move X8, [X8]
	156 Move X1, X31
	157 Move [X31+24], W9
	158 Move [X31+8], X8
	159 Move [X31+16], X10
	160 Call Enum.ToString, X0
	161 Move X8, 0x22AF000
	162 Move X8, [X8+448]
	163 Move X1, X0
	164 Move X2, X31
	165 Move X8, [X8]
	166 Move X0, X8
	167 Call String.Concat, X0, X1
	168 Move X8, [X19]
	169 Move X2, X0
	170 Move X9, 0x22AF000
	171 Move X8, [X19]
	172 Move X9, [X9+456]
	173 Call 0x1C17F20

Method: System.Boolean OpSetPropertiesOfActor(System.Int32 actorNr, ExitGames.Client.Photon.Hashtable actorProperties, ExitGames.Client.Photon.Hashtable expectedProperties = null, Fusion.Photon.Realtime.WebFlags webFlags = null)

Disassembly:
	0x01E4EFA0 STP X20, X19, [X31 + 0x30]
	0x01E4EFA4 ADRP X21, 0x258B000
	0x01E4EFA8 LDRB W8, [X21 + 0x12]
	0x01E4EFAC MOV X20, X1
	0x01E4EFB0 MOV X19, X0
	0x01E4EFB4 TBNZ X8, 0x0, 0x1E4EFE4
	0x01E4EFB8 ADRP X0, 0x22AD000
	0x01E4EFBC LDR X0, [X0 + 0xDA0]
	0x01E4EFC0 BL 0x1C16CF4
	0x01E4EFC4 ADRP X0, 0x22A6000
	0x01E4EFC8 LDR X0, [X0 + 0xE58]
	0x01E4EFCC BL 0x1C16CF4
	0x01E4EFD0 ADRP X0, 0x22A5000
	0x01E4EFD4 LDR X0, [X0 + 0x758]
	0x01E4EFD8 BL 0x1C16CF4
	0x01E4EFDC MOVZ W8, 0x1
	0x01E4EFE0 STRB W8, [X21 + 0x12]
	0x01E4EFE4 STR X31, [X31 + 0x8]
	0x01E4EFE8 LDR X8, [X19 + 0x128]
	0x01E4EFEC CBZ X8, 0x1E4F264
	0x01E4EFF0 LDR X9, [X19]
	0x01E4EFF4 LDP X1, X2, [X8 + 0x10]
	0x01E4EFF8 MOV X0, X19
	0x01E4EFFC LDR X8, [X9 + 0x208]
	0x01E4F000 LDR X3, [X9 + 0x210]
	0x01E4F004 BLR X8
	0x01E4F008 STR X0, [X19 + 0x110]
	0x01E4F00C CBZ X0, 0x1E4F264
	0x01E4F010 STR X19, [X0 + 0x60]
	0x01E4F014 CBZ X20, 0x1E4F264
	0x01E4F018 MOVZ W1, 0xFE
	0x01E4F01C MOV X0, X20
	0x01E4F020 MOV X2, X31
	0x01E4F024 BL 0x3505754
	0x01E4F028 CBZ X0, 0x1E4F264
	0x01E4F02C ADRP X23, 0x22A4000
	0x01E4F030 LDR X23, [X23 + 0x758]
	0x01E4F034 LDR X8, [X0]
	0x01E4F038 LDR X1, [X23]
	0x01E4F03C LDR X8, [X8 + 0x40]
	0x01E4F040 LDR X9, [X1 + 0x40]
	0x01E4F044 CMP X8, X9
	0x01E4F048 B.NE 0x1E4F268
	0x01E4F04C BL 0x1C16E08
	0x01E4F050 LDR W1, [X0]
	0x01E4F054 MOV X0, X19
	0x01E4F058 BL 0x1E4EE34
	0x01E4F05C LDR X0, [X20 + 0x20]
	0x01E4F060 CBZ X0, 0x1E4F264
	0x01E4F064 MOVZ W1, 0xFC
	0x01E4F068 MOV X2, X31
	0x01E4F06C BL 0x34FC4A4
	0x01E4F070 TBZ X0, 0x0, 0x1E4F0C4
	0x01E4F074 LDR X0, [X20 + 0x20]
	0x01E4F078 CBZ X0, 0x1E4F264
	0x01E4F07C MOVZ W1, 0xFC
	0x01E4F080 MOV X2, X31
	0x01E4F084 BL 0x34FB9B8
	0x01E4F088 CBZ X0, 0x1E4F0B8
	0x01E4F08C ADRP X8, 0x22A5000
	0x01E4F090 LDR X8, [X8 + 0xE58]
	0x01E4F094 MOV X21, X0
	0x01E4F098 LDR X22, [X8]
	0x01E4F09C MOV X1, X22
	0x01E4F0A0 BL 0x1C16E00
	0x01E4F0A4 MOV X1, X0
	0x01E4F0A8 CBNZ X0, 0x1E4F0BC
	0x01E4F0AC MOV X0, X21
	0x01E4F0B0 MOV X1, X22
	0x01E4F0B4 BL 0x1C171E0
	0x01E4F0B8 MOV X1, X31
	0x01E4F0BC MOV X0, X19
	0x01E4F0C0 BL 0x1E4F27C
	0x01E4F0C4 ADRP X22, 0x22AC000
	0x01E4F0C8 LDR X22, [X22 + 0xDA0]
	0x01E4F0CC MOVZ W1, 0xF9
	0x01E4F0D0 MOV X0, X20
	0x01E4F0D4 MOV X2, X31
	0x01E4F0D8 BL 0x3505754
	0x01E4F0DC MOV X21, X0
	0x01E4F0E0 CBZ X0, 0x1E4F110
	0x01E4F0E4 LDR X8, [X21]
	0x01E4F0E8 LDR X1, [X22]
	0x01E4F0EC LDRB W10, [X8 + 0x130]
	0x01E4F0F0 LDRB W9, [X1 + 0x130]
	0x01E4F0F4 CMP W10, W9
	0x01E4F0F8 B.CC 0x1E4F26C
	0x01E4F0FC LDR X8, [X8 + 0xC8]
	0x01E4F100 ADD X8, X8, X9, 0x3, LSL
	0x01E4F104 LDUR X8, [X8 - 0x8]
	0x01E4F108 CMP X8, X1
	0x01E4F10C B.NE 0x1E4F26C
	0x01E4F110 MOVZ W1, 0xF8

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X25, 0x258C000
	010 Move X24, 0x22AF000
	011 Move W8, [X25+9]
	012 Move X24, [X24+472]
	013 Move X23, X4
	014 Move X22, X3
	015 Move X19, X2
	016 Move W21, W1
	017 Move X20, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {33}
	022 Move X0, 0x22AE000
	023 Move X0, [X0+3424]
	024 Call 0x1C17CF4
	025 Move X0, 0x22AF000
	026 Move X0, [X0+480]
	027 Call 0x1C17CF4
	028 Move X0, 0x22AF000
	029 Move X0, [X0+472]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X25+9], W8
	033 Move W2, [X20+128]
	034 Move X3, [X24]
	035 Move W1, 252
	036 Move X0, X20
	037 Call LoadBalancingClient.CheckIfOpCanBeSent, X0, X1, X2, X3
	038 Move TEMP, X0
	039 And TEMP, TEMP, 1
	040 Compare TEMP, 1
	041 JumpIfNotEqual {80}
	042 Compare X19, 0
	043 JumpIfEqual {71}
	044 Move X24, 0x22AD000
	045 Move X24, [X24+3424]
	046 Move X0, X19
	047 Move X1, [X24]
	048 Call Dictionary`2<Object, Object>.get_Count, X0
	049 Compare W0, 0
	050 JumpIfEqual {71}
	051 Move X0, [X20+16]
	052 Compare X0, 0
	053 JumpIfEqual {120}
	054 Move W1, W21
	055 Move X2, X19
	056 Move X3, X22
	057 Move X4, X23
	058 Move X5, X31
	059 Call LoadBalancingPeer.OpSetPropertiesOfActor, X0, X1, X2, X3, X4
	060 Move TEMP, X0
	061 And TEMP, TEMP, 1
	062 Compare TEMP, 1
	063 JumpIfNotEqual {80}
	064 Move X0, [X20+272]
	065 Compare X0, 0
	066 JumpIfEqual {120}
	067 Move W8, [X0+120]
	068 Compare W8, 0
	069 JumpIfEqual {90}
	070 Move W0, 1
	071 Move X9, 0x22AE000
	072 Move X8, [X20]
	073 Move X9, [X9+480]
	074 Move W1, 1
	075 Move X0, X20
	076 Move X3, [X8+544]
	077 Move X2, [X9]
	078 Move X9, [X8+536]
	079 NotImplemented "Instruction BLR not yet implemented."
	080 Move W0, W31
	081 Move X20, [X31+48]
	082 Move X19, [X31+56]
	083 Move X22, [X31+32]
	084 Move X21, [X31+40]
	085 Move X24, [X31+16]
	086 Move X23, [X31+24]
	087 Move X30, [X31+64]
	088 Move X25, [X31+72]
	089 Return X0
	090 Compare X22, 0
	091 JumpIfEqual {100}
	092 Move X1, [X24]
	093 Move X0, X22
	094 Call Dictionary`2<Object, Object>.get_Count, X0
	095 Compare W0, 0
	096 JumpIfNotEqual {70}
	097 Move X0, [X20+272]
	098 Compare X0, 0
	099 JumpIfEqual {120}
	100 Move X8, [X0]
	101 Move W1, W21
	102 Move W2, W31
	103 Move X9, [X8+472]
	104 Move X3, [X8+480]
	105 NotImplemented "Instruction BLR not yet implemented."
	106 Compare X0, 0
	107 JumpIfEqual {70}
	108 Move X8, [X0]
	109 Move X1, X19
	110 Move X21, X0
	111 Move X9, [X8+376]
	112 Move X2, [X8+384]
	113 NotImplemented "Instruction BLR not yet implemented."
	114 Move X0, [X20+192]
	115 Compare X0, 0
	116 JumpIfEqual {120}
	117 Move X1, X21
	118 Move X2, X19
	119 Call InRoomCallbacksContainer.OnPlayerPropertiesUpdate, X0, X1, X2
	120 Call 0x1C17F20

Method: System.Boolean OpSetCustomPropertiesOfRoom(ExitGames.Client.Photon.Hashtable propertiesToSet, ExitGames.Client.Photon.Hashtable expectedProperties = null, Fusion.Photon.Realtime.WebFlags webFlags = null)

Disassembly:
	0x01E4F2E0 LDR W21, [X24, X23, LSL #2]
	0x01E4F2E4 CBZ W21, 0x1E4F34C
	0x01E4F2E8 LDR X0, [X20 + 0x110]
	0x01E4F2EC CBZ X0, 0x1E4F374
	0x01E4F2F0 LDR X8, [X0]
	0x01E4F2F4 MOV W1, W21
	0x01E4F2F8 MOV W2, W31
	0x01E4F2FC LDP X9, X3, [X8 + 0x1D8]
	0x01E4F300 BLR X9
	0x01E4F304 CBNZ X0, 0x1E4F34C
	0x01E4F308 LDR X8, [X25]
	0x01E4F30C LDR X9, [X20]
	0x01E4F310 LDR X22, [X20 + 0x110]
	0x01E4F314 MOV X0, X20
	0x01E4F318 LDR X8, [X8 + 0xB8]
	0x01E4F31C MOV W2, W21
	0x01E4F320 MOV W3, W31
	0x01E4F324 MOV X4, X31
	0x01E4F328 LDR X1, [X8]
	0x01E4F32C LDP X8, X5, [X9 + 0x1F8]
	0x01E4F330 BLR X8
	0x01E4F334 CBZ X22, 0x1E4F374
	0x01E4F338 LDR X8, [X22]
	0x01E4F33C MOV X1, X0
	0x01E4F340 MOV X0, X22
	0x01E4F344 LDP X9, X2, [X8 + 0x1C8]
	0x01E4F348 BLR X9
	0x01E4F34C LDR W8, [X19 + 0x18]
	0x01E4F350 ADD X23, X23, 0x1
	0x01E4F354 CMP X23, W8, SXTW
	0x01E4F358 B.LT 0x1E4F2D8
	0x01E4F35C LDP X20, X19, [X31 + 0x30]
	0x01E4F360 LDP X22, X21, [X31 + 0x20]
	0x01E4F364 LDP X24, X23, [X31 + 0x10]
	0x01E4F368 LDP X30, X25, [X31], #0x40
	0x01E4F36C RET
	0x01E4F370 BL 0x1C16F28
	0x01E4F374 BL 0x1C16F20
	0x01E4F378 SUB X31, X31, 0x50
	0x01E4F37C STP X30, X23, [X31 + 0x20]
	0x01E4F380 STP X22, X21, [X31 + 0x30]
	0x01E4F384 STP X20, X19, [X31 + 0x40]
	0x01E4F388 ADRP X20, 0x258A000
	0x01E4F38C LDRB W8, [X20 + 0x2B]
	0x01E4F390 MOV X19, X0
	0x01E4F394 TBNZ X8, 0x0, 0x1E4F3DC
	0x01E4F398 ADRP X0, 0x22AD000
	0x01E4F39C LDR X0, [X0 + 0x268]
	0x01E4F3A0 BL 0x1C16CF4
	0x01E4F3A4 ADRP X0, 0x22AD000
	0x01E4F3A8 LDR X0, [X0 + 0x270]
	0x01E4F3AC BL 0x1C16CF4
	0x01E4F3B0 ADRP X0, 0x22AD000
	0x01E4F3B4 LDR X0, [X0 + 0x278]
	0x01E4F3B8 BL 0x1C16CF4
	0x01E4F3BC ADRP X0, 0x22AD000
	0x01E4F3C0 LDR X0, [X0 + 0x280]
	0x01E4F3C4 BL 0x1C16CF4
	0x01E4F3C8 ADRP X0, 0x22AD000
	0x01E4F3CC LDR X0, [X0 + 0x288]
	0x01E4F3D0 BL 0x1C16CF4
	0x01E4F3D4 MOVZ W8, 0x1
	0x01E4F3D8 STRB W8, [X20 + 0x2B]
	0x01E4F3DC STP X31, X31, [X31 + 0x8]
	0x01E4F3E0 STR X31, [X31 + 0x18]
	0x01E4F3E4 LDR X0, [X19 + 0x28]
	0x01E4F3E8 CBZ X0, 0x1E4F4C0
	0x01E4F3EC ADRP X23, 0x22AD000
	0x01E4F3F0 ADRP X21, 0x22AD000
	0x01E4F3F4 ADRP X22, 0x22AD000
	0x01E4F3F8 ADRP X20, 0x22AD000
	0x01E4F3FC LDR X23, [X23 + 0x288]
	0x01E4F400 LDR X21, [X21 + 0x270]
	0x01E4F404 LDR X22, [X22 + 0x280]
	0x01E4F408 LDR X20, [X20 + 0x268]
	0x01E4F40C BL 0x1E54C74
	0x01E4F410 LDR X1, [X23]
	0x01E4F414 ADD X8, X31, 0x8
	0x01E4F418 MOV X0, X19
	0x01E4F41C BL 0x301CB58
	0x01E4F420 LDR X1, [X21]
	0x01E4F424 ADD X0, X31, 0x8
	0x01E4F428 BL 0x2BC4350
	0x01E4F42C TBZ X0, 0x0, 0x1E4F498
	0x01E4F430 LDR X19, [X31 + 0x18]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x258B000
	009 Move W8, [X23+10]
	010 Move X20, X3
	011 Move X21, X2
	012 Move X22, X1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {35}
	018 Move X0, 0x22AD000
	019 Move X0, [X0+3424]
	020 Call 0x1C17CF4
	021 Move X0, 0x22AD000
	022 Move X0, [X0+3480]
	023 Call 0x1C17CF4
	024 Move X0, 0x22AD000
	025 Move X0, [X0+3488]
	026 Call 0x1C17CF4
	027 Move X0, 0x22AE000
	028 Move X0, [X0+528]
	029 Call 0x1C17CF4
	030 Move X0, 0x22AE000
	031 Move X0, [X0+536]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X23+10], W8
	035 Compare X22, 0
	036 JumpIfEqual {79}
	037 Move X24, 0x22AD000
	038 Move X24, [X24+3424]
	039 Move X0, X22
	040 Move X1, [X24]
	041 Call Dictionary`2<Object, Object>.get_Count, X0
	042 Compare W0, 0
	043 JumpIfEqual {79}
	044 Move X8, 0x22AD000
	045 Move X8, [X8+3488]
	046 Move X0, [X8]
	047 Call 0x1C17F10
	048 Move X1, X31
	049 Move X23, X0
	050 Call Hashtable..ctor, X0
	051 Move X8, 0x22AD000
	052 Move X8, [X8+3480]
	053 Move X0, [X8]
	054 Move W8, [X0+224]
	055 Compare W8, 0
	056 JumpIfNotEqual {58}
	057 Call 0x1C17DFC
	058 Move X0, X23
	059 Move X1, X22
	060 Call Extensions.MergeStringKeys, X0, X1
	061 Compare X23, 0
	062 JumpIfEqual {100}
	063 Move X1, [X24]
	064 Move X0, X23
	065 Call Dictionary`2<Object, Object>.get_Count, X0
	066 Compare W0, 0
	067 JumpIfEqual {97}
	068 Move X0, X19
	069 Move X1, X23
	070 Move X2, X21
	071 Move X3, X20
	072 Move X20, [X31+48]
	073 Move X19, [X31+56]
	074 Move X22, [X31+32]
	075 Move X21, [X31+40]
	076 Move X24, [X31+16]
	077 Move X23, [X31+24]
	078 Move X30, [X31+64]
	079 Move X9, 0x22AE000
	080 Move X8, [X19]
	081 Move X9, [X9+528]
	082 Move X2, [X9]
	083 Move X9, [X8+536]
	084 Move X3, [X8+544]
	085 Move W1, 1
	086 Move X0, X19
	087 NotImplemented "Instruction BLR not yet implemented."
	088 Move X20, [X31+48]
	089 Move X19, [X31+56]
	090 Move X22, [X31+32]
	091 Move X21, [X31+40]
	092 Move X24, [X31+16]
	093 Move X23, [X31+24]
	094 Move W0, W31
	095 Move X30, [X31+64]
	096 Return X0
	097 Move X9, 0x22AE000
	098 Move X8, [X19]
	099 Move X9, [X9+536]
	100 Call 0x1C17F20

Method: System.Boolean OpSetPropertyOfRoom(System.Byte propCode, System.Object value)

Disassembly:
	0x01E4F57C LDR X0, [X0 + 0x280]
	0x01E4F580 BL 0x1C16CF4
	0x01E4F584 ADRP X0, 0x22AD000
	0x01E4F588 LDR X0, [X0 + 0x288]
	0x01E4F58C BL 0x1C16CF4
	0x01E4F590 MOVZ W8, 0x1
	0x01E4F594 STRB W8, [X20 + 0x2C]
	0x01E4F598 STP X31, X31, [X31 + 0x8]
	0x01E4F59C STR X31, [X31 + 0x18]
	0x01E4F5A0 LDR X0, [X19 + 0x28]
	0x01E4F5A4 CBZ X0, 0x1E4F67C
	0x01E4F5A8 ADRP X23, 0x22AD000
	0x01E4F5AC ADRP X21, 0x22AD000
	0x01E4F5B0 ADRP X22, 0x22AD000
	0x01E4F5B4 ADRP X20, 0x22AD000
	0x01E4F5B8 LDR X23, [X23 + 0x288]
	0x01E4F5BC LDR X21, [X21 + 0x270]
	0x01E4F5C0 LDR X22, [X22 + 0x280]
	0x01E4F5C4 LDR X20, [X20 + 0x268]
	0x01E4F5C8 BL 0x1E54C74
	0x01E4F5CC LDR X1, [X23]
	0x01E4F5D0 ADD X8, X31, 0x8
	0x01E4F5D4 MOV X0, X19
	0x01E4F5D8 BL 0x301CB58
	0x01E4F5DC LDR X1, [X21]
	0x01E4F5E0 ADD X0, X31, 0x8
	0x01E4F5E4 BL 0x2BC4350
	0x01E4F5E8 TBZ X0, 0x0, 0x1E4F654
	0x01E4F5EC LDR X19, [X31 + 0x18]
	0x01E4F5F0 CBZ X19, 0x1E4F674
	0x01E4F5F4 LDR X8, [X19]
	0x01E4F5F8 LDR X1, [X22]
	0x01E4F5FC LDRH W9, [X8 + 0x12E]
	0x01E4F600 CBZ X9, 0x1E4F624
	0x01E4F604 LDR X10, [X8 + 0xB0]
	0x01E4F608 ADD X10, X10, 0x8

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x258B000
	008 Move X23, 0x22AD000
	009 Move W8, [X22+11]
	010 Move X23, [X23+3488]
	011 Move X20, X2
	012 Move W21, W1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0x22AD000
	019 Move X0, [X0+3488]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+11], W8
	023 Move X0, [X23]
	024 Call 0x1C17F10
	025 Move X1, X31
	026 Move X22, X0
	027 Call Hashtable..ctor, X0
	028 Compare X22, 0
	029 JumpIfEqual {47}
	030 Move X0, X22
	031 Move W1, W21
	032 Move X2, X20
	033 Move X3, X31
	034 Call Hashtable.set_Item, X0, X1, X2
	035 Move X0, X19
	036 Move X1, X22
	037 Move X20, [X31+32]
	038 Move X19, [X31+40]
	039 Move X22, [X31+16]
	040 Move X21, [X31+24]
	041 Move X2, X31
	042 Move X3, X31
	043 Move X30, [X31+48]
	044 Move X23, [X31+56]
	045 Call LoadBalancingClient.OpSetPropertiesOfRoom, X0, X1, X2, X3
	046 Return X0
	047 Call 0x1C17F20

Method: System.Boolean OpSetPropertiesOfRoom(ExitGames.Client.Photon.Hashtable gameProperties, ExitGames.Client.Photon.Hashtable expectedProperties = null, Fusion.Photon.Realtime.WebFlags webFlags = null)

Disassembly:
	0x01E4F434 CBZ X19, 0x1E4F4B8
	0x01E4F438 LDR X8, [X19]
	0x01E4F43C LDR X1, [X22]
	0x01E4F440 LDRH W9, [X8 + 0x12E]
	0x01E4F444 CBZ X9, 0x1E4F468
	0x01E4F448 LDR X10, [X8 + 0xB0]
	0x01E4F44C ADD X10, X10, 0x8
	0x01E4F450 LDUR X11, [X10 - 0x8]
	0x01E4F454 CMP X11, X1
	0x01E4F458 B.EQ 0x1E4F478
	0x01E4F45C SUBS X9, X9, 0x1
	0x01E4F460 ADD X10, X10, 0x10
	0x01E4F464 B.NE 0x1E4F450
	0x01E4F468 MOVZ W2, 0x1
	0x01E4F46C MOV X0, X19
	0x01E4F470 BL 0x1C5C788
	0x01E4F474 B 0x1E4F488
	0x01E4F478 LDR W9, [X10]
	0x01E4F47C ADD W9, W9, 0x1
	0x01E4F480 ADD X8, X8, W9, 0x4, SXTW
	0x01E4F484 ADD X0, X8, 0x138
	0x01E4F488 LDP X8, X1, [X0]
	0x01E4F48C MOV X0, X19
	0x01E4F490 BLR X8
	0x01E4F494 B 0x1E4F420
	0x01E4F498 LDR X1, [X20]
	0x01E4F49C ADD X0, X31, 0x8
	0x01E4F4A0 BL 0x2BC434C
	0x01E4F4A4 LDP X20, X19, [X31 + 0x40]
	0x01E4F4A8 LDP X22, X21, [X31 + 0x30]
	0x01E4F4AC LDP X30, X23, [X31 + 0x20]
	0x01E4F4B0 ADD X31, X31, 0x50
	0x01E4F4B4 RET
	0x01E4F4B8 MOV X21, X20
	0x01E4F4BC BL 0x1C16F20
	0x01E4F4C0 BL 0x1C16F20
	0x01E4F4C4 B 0x1E4F4D0
	0x01E4F4C8 B 0x1E4F4CC
	0x01E4F4CC MOV X21, X20
	0x01E4F4D0 MOV X19, X0
	0x01E4F4D4 CMP W1, 0x1
	0x01E4F4D8 B.NE 0x1E4F504
	0x01E4F4DC MOV X0, X19
	0x01E4F4E0 BL 0x3EB1AD0
	0x01E4F4E4 LDR X20, [X0]
	0x01E4F4E8 BL 0x3EB1AE0
	0x01E4F4EC LDR X1, [X21]
	0x01E4F4F0 ADD X0, X31, 0x8
	0x01E4F4F4 BL 0x2BC434C
	0x01E4F4F8 CBZ X20, 0x1E4F4A4
	0x01E4F4FC MOV X0, X20
	0x01E4F500 BL 0x1C16F18
	0x01E4F504 MOV X20, X31
	0x01E4F508 B 0x1E4F510
	0x01E4F50C MOV X19, X0
	0x01E4F510 LDR X1, [X21]
	0x01E4F514 ADD X0, X31, 0x8
	0x01E4F518 BL 0x2BC434C
	0x01E4F51C CBNZ X20, 0x1E4F528
	0x01E4F520 MOV X0, X19
	0x01E4F524 BL 0x1D2C690
	0x01E4F528 MOV X0, X20
	0x01E4F52C BL 0x1C16F18
	0x01E4F530 BL 0x1990590
	0x01E4F534 SUB X31, X31, 0x50
	0x01E4F538 STP X30, X23, [X31 + 0x20]
	0x01E4F53C STP X22, X21, [X31 + 0x30]
	0x01E4F540 STP X20, X19, [X31 + 0x40]
	0x01E4F544 ADRP X20, 0x258A000
	0x01E4F548 LDRB W8, [X20 + 0x2C]
	0x01E4F54C MOV X19, X0
	0x01E4F550 TBNZ X8, 0x0, 0x1E4F598
	0x01E4F554 ADRP X0, 0x22AD000
	0x01E4F558 LDR X0, [X0 + 0x268]
	0x01E4F55C BL 0x1C16CF4
	0x01E4F560 ADRP X0, 0x22AD000
	0x01E4F564 LDR X0, [X0 + 0x270]
	0x01E4F568 BL 0x1C16CF4
	0x01E4F56C ADRP X0, 0x22AD000
	0x01E4F570 LDR X0, [X0 + 0x278]
	0x01E4F574 BL 0x1C16CF4
	0x01E4F578 ADRP X0, 0x22AD000

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0x258B000
	009 Move X23, 0x22AE000
	010 Move W8, [X24+12]
	011 Move X23, [X23+472]
	012 Move X22, X3
	013 Move X21, X2
	014 Move X20, X1
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {31}
	020 Move X0, 0x22AD000
	021 Move X0, [X0+3424]
	022 Call 0x1C17CF4
	023 Move X0, 0x22AE000
	024 Move X0, [X0+544]
	025 Call 0x1C17CF4
	026 Move X0, 0x22AE000
	027 Move X0, [X0+472]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X24+12], W8
	031 Move W2, [X19+128]
	032 Move X3, [X23]
	033 Move W1, 252
	034 Move X0, X19
	035 Call LoadBalancingClient.CheckIfOpCanBeSent, X0, X1, X2, X3
	036 Move TEMP, X0
	037 And TEMP, TEMP, 1
	038 Compare TEMP, 1
	039 JumpIfNotEqual {97}
	040 Compare X20, 0
	041 JumpIfEqual {88}
	042 Move X23, 0x22AD000
	043 Move X23, [X23+3424]
	044 Move X0, X20
	045 Move X1, [X23]
	046 Call Dictionary`2<Object, Object>.get_Count, X0
	047 Compare W0, 0
	048 JumpIfEqual {88}
	049 Move X0, [X19+16]
	050 Compare X0, 0
	051 JumpIfEqual {106}
	052 Move X1, X20
	053 Move X2, X21
	054 Move X3, X22
	055 Move X4, X31
	056 Call LoadBalancingPeer.OpSetPropertiesOfRoom, X0, X1, X2, X3
	057 Move TEMP, X0
	058 And TEMP, TEMP, 1
	059 Compare TEMP, 1
	060 JumpIfNotEqual {97}
	061 Move X0, [X19+272]
	062 Compare X0, 0
	063 JumpIfEqual {106}
	064 Move W8, [X0+120]
	065 Compare W8, 0
	066 JumpIfNotEqual {87}
	067 Compare X21, 0
	068 JumpIfEqual {77}
	069 Move X1, [X23]
	070 Move X0, X21
	071 Call Dictionary`2<Object, Object>.get_Count, X0
	072 Compare W0, 0
	073 JumpIfNotEqual {87}
	074 Move X0, [X19+272]
	075 Compare X0, 0
	076 JumpIfEqual {106}
	077 Move X8, [X0]
	078 Move X1, X20
	079 Move X9, [X8+376]
	080 Move X2, [X8+384]
	081 NotImplemented "Instruction BLR not yet implemented."
	082 Move X0, [X19+192]
	083 Compare X0, 0
	084 JumpIfEqual {106}
	085 Move X1, X20
	086 Call InRoomCallbacksContainer.OnRoomPropertiesUpdate, X0, X1
	087 Move W0, 1
	088 Move X9, 0x22AE000
	089 Move X8, [X19]
	090 Move X9, [X9+544]
	091 Move W1, 1
	092 Move X0, X19
	093 Move X3, [X8+544]
	094 Move X2, [X9]
	095 Move X9, [X8+536]
	096 NotImplemented "Instruction BLR not yet implemented."
	097 Move W0, W31
	098 Move X20, [X31+48]
	099 Move X19, [X31+56]
	100 Move X22, [X31+32]
	101 Move X21, [X31+40]
	102 Move X24, [X31+16]
	103 Move X23, [X31+24]
	104 Move X30, [X31+64]
	105 Return X0
	106 Call 0x1C17F20

Method: System.Boolean OpRaiseEvent(System.Byte eventCode, System.Object customEventContent, Fusion.Photon.Realtime.RaiseEventOptions raiseEventOptions, ExitGames.Client.Photon.SendOptions sendOptions)

Disassembly:
	0x01E4F7D0 MOV X0, X21
	0x01E4F7D4 LDP X20, X19, [X31 + 0x20]
	0x01E4F7D8 LDP X22, X21, [X31 + 0x10]
	0x01E4F7DC LDR X30, [X31], #0x30
	0x01E4F7E0 RET
	0x01E4F7E4 CMP W2, 0x2
	0x01E4F7E8 B.EQ 0x1E4F818
	0x01E4F7EC CMP W2, 0x1
	0x01E4F7F0 B.EQ 0x1E4F844
	0x01E4F7F4 CBNZ W2, 0x1E4F898
	0x01E4F7F8 ADD W8, W1, 0x27
	0x01E4F7FC AND W9, W8, 0xFF
	0x01E4F800 CMP W9, 0xF
	0x01E4F804 B.CS 0x1E4F890
	0x01E4F808 MOVZ W9, 0x7F37
	0x01E4F80C LSRV W8, W9, W8
	0x01E4F810 AND W0, W8, 0x1
	0x01E4F814 RET
	0x01E4F818 AND W8, W1, 0xFF
	0x01E4F81C CMP W8, 0xDA
	0x01E4F820 MOVZ W0, 0x1
	0x01E4F824 B.EQ 0x1E4F868
	0x01E4F828 CMP W8, 0xDC
	0x01E4F82C B.EQ 0x1E4F868
	0x01E4F830 AND W8, W1, 0xFE
	0x01E4F834 CMP W8, 0xE6
	0x01E4F838 B.NE 0x1E4F890
	0x01E4F83C MOVZ W0, 0x1
	0x01E4F840 RET
	0x01E4F844 AND W9, W1, 0xFF
	0x01E4F848 CMP W9, 0xE3
	0x01E4F84C AND W8, W1, 0xFE
	0x01E4F850 B.HI 0x1E4F86C
	0x01E4F854 CMP W8, 0xDA
	0x01E4F858 MOVZ W0, 0x1
	0x01E4F85C B.EQ 0x1E4F868
	0x01E4F860 CMP W8, 0xE2
	0x01E4F864 B.NE 0x1E4F890
	0x01E4F868 RET
	0x01E4F86C SUB W9, W9, 0xFB
	0x01E4F870 CMP W9, 0x4
	0x01E4F874 MOVZ W0, 0x1
	0x01E4F878 B.CC 0x1E4F868
	0x01E4F87C AND W9, W1, 0xFF
	0x01E4F880 CMP W9, 0xF8
	0x01E4F884 B.EQ 0x1E4F868

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X25, 0x258B000
	010 Move X24, 0x22AE000
	011 Move W8, [X25+13]
	012 Move X24, [X24+552]
	013 Move X19, X4
	014 Move X20, X3
	015 Move X21, X2
	016 Move W22, W1
	017 Move X23, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {27}
	022 Move X0, 0x22AE000
	023 Move X0, [X0+552]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X25+13], W8
	027 Move W2, [X23+128]
	028 Move X3, [X24]
	029 Move W1, 253
	030 Move X0, X23
	031 Call LoadBalancingClient.CheckIfOpCanBeSent, X0, X1, X2, X3
	032 Move TEMP, X0
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfNotEqual {55}
	036 Move X0, [X23+16]
	037 Compare X0, 0
	038 JumpIfEqual {65}
	039 Move X8, [X0]
	040 Move W1, W22
	041 Move X2, X21
	042 Move X3, X20
	043 Move X6, [X8+792]
	044 Move X5, [X8+800]
	045 Move X4, X19
	046 Move X20, [X31+48]
	047 Move X19, [X31+56]
	048 Move X22, [X31+32]
	049 Move X21, [X31+40]
	050 Move X24, [X31+16]
	051 Move X23, [X31+24]
	052 Move X30, [X31+64]
	053 Move X25, [X31+72]
	054 CallNoReturn X6
	055 Move X20, [X31+48]
	056 Move X19, [X31+56]
	057 Move X22, [X31+32]
	058 Move X21, [X31+40]
	059 Move X24, [X31+16]
	060 Move X23, [X31+24]
	061 Move W0, W31
	062 Move X30, [X31+64]
	063 Move X25, [X31+72]
	064 Return X0
	065 Call 0x1C17F20

Method: System.Boolean OpChangeGroups(System.Byte[] groupsToRemove, System.Byte[] groupsToAdd)

Disassembly:
	0x01E4F888 CMP W8, 0xE6
	0x01E4F88C B.EQ 0x1E4F868
	0x01E4F890 MOV W0, W31
	0x01E4F894 RET
	0x01E4F898 STR X30, [X31 - 0x20]!
	0x01E4F89C STP X20, X19, [X31 + 0x10]
	0x01E4F8A0 STR W2, [X31 + 0xC]
	0x01E4F8A4 ADRP X0, 0x22AD000
	0x01E4F8A8 LDR X0, [X0 + 0x48]
	0x01E4F8AC BL 0x1C16D08
	0x01E4F8B0 ADD X1, X31, 0xC
	0x01E4F8B4 BL 0x1C16E04
	0x01E4F8B8 MOV X19, X0
	0x01E4F8BC ADRP X0, 0x22AC000
	0x01E4F8C0 LDR X0, [X0 + 0x760]
	0x01E4F8C4 BL 0x1C16D08
	0x01E4F8C8 BL 0x1C16F10
	0x01E4F8CC MOV X20, X0
	0x01E4F8D0 ADRP X0, 0x22AD000
	0x01E4F8D4 LDR X0, [X0 + 0x2A0]
	0x01E4F8D8 BL 0x1C16D08
	0x01E4F8DC MOV X1, X0
	0x01E4F8E0 MOV X0, X20
	0x01E4F8E4 MOV X2, X19
	0x01E4F8E8 MOV X3, X31
	0x01E4F8EC MOV X4, X31
	0x01E4F8F0 BL 0x3312C8C
	0x01E4F8F4 ADRP X0, 0x22AD000
	0x01E4F8F8 LDR X0, [X0 + 0x2A8]
	0x01E4F8FC BL 0x1C16D08
	0x01E4F900 MOV X1, X0
	0x01E4F904 MOV X0, X20
	0x01E4F908 BL 0x1C16DEC
	0x01E4F90C STP X30, X19, [X31 - 0x10]!
	0x01E4F910 AND W8, W1, 0xFF
	0x01E4F914 SUB W9, W8, 0xD9
	0x01E4F918 CMP W9, 0xE
	0x01E4F91C MOV X19, X0
	0x01E4F920 B.HI 0x1E4F9B0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x258B000
	008 Move X22, 0x22AE000
	009 Move W8, [X23+14]
	010 Move X22, [X22+560]
	011 Move X19, X2
	012 Move X20, X1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0x22AE000
	019 Move X0, [X0+560]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X23+14], W8
	023 Move W2, [X21+128]
	024 Move X3, [X22]
	025 Move W1, 248
	026 Move X0, X21
	027 Call LoadBalancingClient.CheckIfOpCanBeSent, X0, X1, X2, X3
	028 Move TEMP, X0
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfNotEqual {47}
	032 Move X0, [X21+16]
	033 Compare X0, 0
	034 JumpIfEqual {55}
	035 Move X8, [X0]
	036 Move X1, X20
	037 Move X2, X19
	038 Move X20, [X31+32]
	039 Move X19, [X31+40]
	040 Move X4, [X8+776]
	041 Move X3, [X8+784]
	042 Move X22, [X31+16]
	043 Move X21, [X31+24]
	044 Move X30, [X31+48]
	045 Move X23, [X31+56]
	046 CallNoReturn X4
	047 Move X20, [X31+32]
	048 Move X19, [X31+40]
	049 Move X22, [X31+16]
	050 Move X21, [X31+24]
	051 Move W0, W31
	052 Move X30, [X31+48]
	053 Move X23, [X31+56]
	054 Return X0
	055 Call 0x1C17F20

Method: System.Void ReadoutProperties(ExitGames.Client.Photon.Hashtable gameProperties, ExitGames.Client.Photon.Hashtable actorProperties, System.Int32 targetActorNr)

Disassembly:
	0x01E4F924 ADRP X8, 0xFFFFFFFFFECDE000
	0x01E4F928 ADD X8, X8, 0xA82
	0x01E4F92C ADR X10, 0x10
	0x01E4F930 LDRB W11, [X8, X9, LSL]
	0x01E4F934 ADD X10, X10, X11, 0x2, LSL
	0x01E4F938 BR X10
	0x01E4F93C LDR W8, [X19 + 0x90]
	0x01E4F940 CMP W8, 0xF
	0x01E4F944 CSET W9, EQ
	0x01E4F948 CMP W8, 0x4
	0x01E4F94C CSET W8, EQ
	0x01E4F950 ORR W0, W9, W8, 0x0
	0x01E4F954 B 0x1E4FA18
	0x01E4F958 LDR W8, [X19 + 0x90]
	0x01E4F95C CMP W8, 0xF
	0x01E4F960 B.EQ 0x1E4F98C
	0x01E4F964 CMP W8, 0x4
	0x01E4F968 CSET W9, EQ
	0x01E4F96C CMP W8, 0x7
	0x01E4F970 B 0x1E4F94C
	0x01E4F974 MOV X0, X19
	0x01E4F978 BL 0x1E4546C
	0x01E4F97C TBNZ X0, 0x0, 0x1E4F98C
	0x01E4F980 LDR W8, [X19 + 0x90]
	0x01E4F984 CMP W8, 0x10
	0x01E4F988 B.NE 0x1E4F9E8
	0x01E4F98C MOVZ W0, 0x1
	0x01E4F990 B 0x1E4FA18
	0x01E4F994 LDR W8, [X19 + 0x90]
	0x01E4F998 CMP W8, 0x11
	0x01E4F99C B 0x1E4F9A8
	0x01E4F9A0 LDR W8, [X19 + 0x90]
	0x01E4F9A4 CMP W8, 0x4
	0x01E4F9A8 CSET W0, EQ
	0x01E4F9AC B 0x1E4FA18
	0x01E4F9B0 CMP W8, 0xF8
	0x01E4F9B4 B.EQ 0x1E4F9F8
	0x01E4F9B8 SUB W8, W8, 0xFB
	0x01E4F9BC CMP W8, 0x3
	0x01E4F9C0 B.LS 0x1E4F9F8
	0x01E4F9C4 LDR X8, [X19 + 0x10]
	0x01E4F9C8 CBZ X8, 0x1E4FA14
	0x01E4F9CC LDR W8, [X19 + 0x90]
	0x01E4F9D0 CMP W8, 0x0
	0x01E4F9D4 CSET W9, NE
	0x01E4F9D8 CMP W8, 0xE
	0x01E4F9DC CSET W8, NE
	0x01E4F9E0 AND W0, W9, W8, 0x0
	0x01E4F9E4 B 0x1E4FA18
	0x01E4F9E8 CMP W8, 0xC
	0x01E4F9EC CSET W9, EQ
	0x01E4F9F0 CMP W8, 0x6
	0x01E4F9F4 B 0x1E4F94C
	0x01E4F9F8 LDR W8, [X19 + 0x90]
	0x01E4F9FC CMP W8, 0x9
	0x01E4FA00 B.NE 0x1E4FA14
	0x01E4FA04 LDR X8, [X19 + 0x110]
	0x01E4FA08 CMP X8, 0x0
	0x01E4FA0C CSET W0, NE
	0x01E4FA10 B 0x1E4FA18
	0x01E4FA14 MOV W0, W31
	0x01E4FA18 LDP X30, X19, [X31], #0x10
	0x01E4FA1C RET
	0x01E4FA20 STR X30, [X31 - 0x10]!
	0x01E4FA24 LDR X8, [X0 + 0x10]
	0x01E4FA28 CBZ X8, 0x1E4FA34
	0x01E4FA2C LDR X30, [X31], #0x10
	0x01E4FA30 RET
	0x01E4FA34 BL 0x1C16F20
	0x01E4FA38 STR X30, [X31 - 0x10]!
	0x01E4FA3C CBZ X1, 0x1E4FAAC
	0x01E4FA40 MOV X8, X1
	0x01E4FA44 LDRH W1, [X1 + 0x12]
	0x01E4FA48 CBZ W1, 0x1E4FA7C
	0x01E4FA4C LDRB W9, [X8 + 0x10]
	0x01E4FA50 CMP W9, 0xE1
	0x01E4FA54 B.EQ 0x1E4FA84
	0x01E4FA58 CMP W9, 0xE3
	0x01E4FA5C B.EQ 0x1E4FA98
	0x01E4FA60 CMP W9, 0xE2
	0x01E4FA64 B.NE 0x1E4FA7C
	0x01E4FA68 LDR X0, [X0 + 0xB8]
	0x01E4FA6C CBZ X0, 0x1E4FAAC
	0x01E4FA70 LDR X2, [X8 + 0x18]
	0x01E4FA74 LDR X30, [X31], #0x10
	0x01E4FA78 B 0x1E4FAB0
	0x01E4FA7C LDR X30, [X31], #0x10
	0x01E4FA80 RET
	0x01E4FA84 LDR X0, [X0 + 0xB8]
	0x01E4FA88 CBZ X0, 0x1E4FAAC
	0x01E4FA8C LDR X2, [X8 + 0x18]
	0x01E4FA90 LDR X30, [X31], #0x10
	0x01E4FA94 B 0x1E4FE48
	0x01E4FA98 LDR X0, [X0 + 0xB8]
	0x01E4FA9C CBZ X0, 0x1E4FAAC
	0x01E4FAA0 LDR X2, [X8 + 0x18]
	0x01E4FAA4 LDR X30, [X31], #0x10
	0x01E4FAA8 B 0x1E4FC7C
	0x01E4FAAC BL 0x1C16F20
	0x01E4FAB0 SUB X31, X31, 0x60
	0x01E4FAB4 STP X30, X25, [X31 + 0x20]
	0x01E4FAB8 STP X24, X23, [X31 + 0x30]
	0x01E4FABC STP X22, X21, [X31 + 0x40]
	0x01E4FAC0 STP X20, X19, [X31 + 0x50]
	0x01E4FAC4 ADRP X22, 0x258A000
	0x01E4FAC8 LDRB W8, [X22 + 0x2F]
	0x01E4FACC MOV X19, X2
	0x01E4FAD0 MOV W20, W1
	0x01E4FAD4 MOV X21, X0
	0x01E4FAD8 TBNZ X8, 0x0, 0x1E4FB20
	0x01E4FADC ADRP X0, 0x22AD000
	0x01E4FAE0 LDR X0, [X0 + 0x268]
	0x01E4FAE4 BL 0x1C16CF4
	0x01E4FAE8 ADRP X0, 0x22AD000
	0x01E4FAEC LDR X0, [X0 + 0x270]
	0x01E4FAF0 BL 0x1C16CF4
	0x01E4FAF4 ADRP X0, 0x22AD000
	0x01E4FAF8 LDR X0, [X0 + 0x278]
	0x01E4FAFC BL 0x1C16CF4
	0x01E4FB00 ADRP X0, 0x22AD000
	0x01E4FB04 LDR X0, [X0 + 0x280]
	0x01E4FB08 BL 0x1C16CF4
	0x01E4FB0C ADRP X0, 0x22AD000
	0x01E4FB10 LDR X0, [X0 + 0x288]
	0x01E4FB14 BL 0x1C16CF4
	0x01E4FB18 MOVZ W8, 0x1
	0x01E4FB1C STRB W8, [X22 + 0x2F]
	0x01E4FB20 STP X31, X31, [X31 + 0x8]
	0x01E4FB24 STR X31, [X31 + 0x18]
	0x01E4FB28 LDR X0, [X21 + 0x28]
	0x01E4FB2C CBZ X0, 0x1E4FC0C
	0x01E4FB30 ADRP X25, 0x22AD000
	0x01E4FB34 ADRP X23, 0x22AD000
	0x01E4FB38 ADRP X24, 0x22AD000
	0x01E4FB3C ADRP X22, 0x22AD000
	0x01E4FB40 LDR X25, [X25 + 0x288]
	0x01E4FB44 LDR X23, [X23 + 0x270]
	0x01E4FB48 LDR X24, [X24 + 0x280]
	0x01E4FB4C LDR X22, [X22 + 0x268]
	0x01E4FB50 BL 0x1E54C74
	0x01E4FB54 LDR X1, [X25]
	0x01E4FB58 ADD X8, X31, 0x8
	0x01E4FB5C MOV X0, X21
	0x01E4FB60 BL 0x301CB58
	0x01E4FB64 LDR X1, [X23]
	0x01E4FB68 ADD X0, X31, 0x8
	0x01E4FB6C BL 0x2BC4350
	0x01E4FB70 TBZ X0, 0x0, 0x1E4FBE4
	0x01E4FB74 LDR X21, [X31 + 0x18]
	0x01E4FB78 CBZ X21, 0x1E4FC08
	0x01E4FB7C LDR X8, [X21]
	0x01E4FB80 LDR X1, [X24]
	0x01E4FB84 LDRH W9, [X8 + 0x12E]
	0x01E4FB88 CBZ X9, 0x1E4FBAC
	0x01E4FB8C LDR X10, [X8 + 0xB0]
	0x01E4FB90 ADD X10, X10, 0x8
	0x01E4FB94 LDUR X11, [X10 - 0x8]
	0x01E4FB98 CMP X11, X1
	0x01E4FB9C B.EQ 0x1E4FBBC
	0x01E4FBA0 SUBS X9, X9, 0x1
	0x01E4FBA4 ADD X10, X10, 0x10
	0x01E4FBA8 B.NE 0x1E4FB94
	0x01E4FBAC MOVZ W2, 0x4
	0x01E4FBB0 MOV X0, X21
	0x01E4FBB4 BL 0x1C5C788
	0x01E4FBB8 B 0x1E4FBCC
	0x01E4FBBC LDR W9, [X10]
	0x01E4FBC0 ADD W9, W9, 0x4
	0x01E4FBC4 ADD X8, X8, W9, 0x4, SXTW
	0x01E4FBC8 ADD X0, X8, 0x138
	0x01E4FBCC LDP X8, X3, [X0]
	0x01E4FBD0 MOV X0, X21
	0x01E4FBD4 MOV W1, W20
	0x01E4FBD8 MOV X2, X19
	0x01E4FBDC BLR X8
	0x01E4FBE0 B 0x1E4FB64
	0x01E4FBE4 LDR X1, [X22]
	0x01E4FBE8 ADD X0, X31, 0x8
	0x01E4FBEC BL 0x2BC434C
	0x01E4FBF0 LDP X20, X19, [X31 + 0x50]
	0x01E4FBF4 LDP X22, X21, [X31 + 0x40]
	0x01E4FBF8 LDP X24, X23, [X31 + 0x30]
	0x01E4FBFC LDP X30, X25, [X31 + 0x20]
	0x01E4FC00 ADD X31, X31, 0x60
	0x01E4FC04 RET
	0x01E4FC08 BL 0x1C16F20
	0x01E4FC0C BL 0x1C16F20
	0x01E4FC10 B 0x1E4FC18
	0x01E4FC14 B 0x1E4FC18
	0x01E4FC18 MOV X19, X0
	0x01E4FC1C CMP W1, 0x1
	0x01E4FC20 B.NE 0x1E4FC4C
	0x01E4FC24 MOV X0, X19
	0x01E4FC28 BL 0x3EB1AD0
	0x01E4FC2C LDR X20, [X0]
	0x01E4FC30 BL 0x3EB1AE0
	0x01E4FC34 LDR X1, [X22]
	0x01E4FC38 ADD X0, X31, 0x8
	0x01E4FC3C BL 0x2BC434C
	0x01E4FC40 CBZ X20, 0x1E4FBF0
	0x01E4FC44 MOV X0, X20
	0x01E4FC48 BL 0x1C16F18
	0x01E4FC4C MOV X20, X31
	0x01E4FC50 B 0x1E4FC58
	0x01E4FC54 MOV X19, X0
	0x01E4FC58 LDR X1, [X22]
	0x01E4FC5C ADD X0, X31, 0x8
	0x01E4FC60 BL 0x2BC434C
	0x01E4FC64 CBNZ X20, 0x1E4FC70
	0x01E4FC68 MOV X0, X19
	0x01E4FC6C BL 0x1D2C690
	0x01E4FC70 MOV X0, X20
	0x01E4FC74 BL 0x1C16F18
	0x01E4FC78 BL 0x1990590
	0x01E4FC7C SUB X31, X31, 0x60
	0x01E4FC80 STP X30, X25, [X31 + 0x20]
	0x01E4FC84 STP X24, X23, [X31 + 0x30]
	0x01E4FC88 STP X22, X21, [X31 + 0x40]
	0x01E4FC8C STP X20, X19, [X31 + 0x50]
	0x01E4FC90 ADRP X22, 0x258A000
	0x01E4FC94 LDRB W8, [X22 + 0x2D]
	0x01E4FC98 MOV X19, X2
	0x01E4FC9C MOV W20, W1
	0x01E4FCA0 MOV X21, X0
	0x01E4FCA4 TBNZ X8, 0x0, 0x1E4FCEC
	0x01E4FCA8 ADRP X0, 0x22AD000
	0x01E4FCAC LDR X0, [X0 + 0x268]
	0x01E4FCB0 BL 0x1C16CF4
	0x01E4FCB4 ADRP X0, 0x22AD000
	0x01E4FCB8 LDR X0, [X0 + 0x270]
	0x01E4FCBC BL 0x1C16CF4
	0x01E4FCC0 ADRP X0, 0x22AD000
	0x01E4FCC4 LDR X0, [X0 + 0x278]
	0x01E4FCC8 BL 0x1C16CF4
	0x01E4FCCC ADRP X0, 0x22AD000
	0x01E4FCD0 LDR X0, [X0 + 0x280]
	0x01E4FCD4 BL 0x1C16CF4
	0x01E4FCD8 ADRP X0, 0x22AD000
	0x01E4FCDC LDR X0, [X0 + 0x288]
	0x01E4FCE0 BL 0x1C16CF4
	0x01E4FCE4 MOVZ W8, 0x1
	0x01E4FCE8 STRB W8, [X22 + 0x2D]
	0x01E4FCEC STP X31, X31, [X31 + 0x8]
	0x01E4FCF0 STR X31, [X31 + 0x18]
	0x01E4FCF4 LDR X0, [X21 + 0x28]
	0x01E4FCF8 CBZ X0, 0x1E4FDD8
	0x01E4FCFC ADRP X25, 0x22AD000
	0x01E4FD00 ADRP X23, 0x22AD000
	0x01E4FD04 ADRP X24, 0x22AD000
	0x01E4FD08 ADRP X22, 0x22AD000
	0x01E4FD0C LDR X25, [X25 + 0x288]
	0x01E4FD10 LDR X23, [X23 + 0x270]
	0x01E4FD14 LDR X24, [X24 + 0x280]
	0x01E4FD18 LDR X22, [X22 + 0x268]
	0x01E4FD1C BL 0x1E54C74
	0x01E4FD20 LDR X1, [X25]
	0x01E4FD24 ADD X8, X31, 0x8
	0x01E4FD28 MOV X0, X21
	0x01E4FD2C BL 0x301CB58
	0x01E4FD30 LDR X1, [X23]

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+64], X30
	003 Move [X31+80], X28
	004 Move [X31+88], X27
	005 Move [X31+96], X26
	006 Move [X31+104], X25
	007 Move [X31+112], X24
	008 Move [X31+120], X23
	009 Move [X31+128], X22
	010 Move [X31+136], X21
	011 Move [X31+144], X20
	012 Move [X31+152], X19
	013 Move X23, 0x258B000
	014 Move W8, [X23+15]
	015 Move W21, W3
	016 Move X20, X2
	017 Move X22, X1
	018 Move X19, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {52}
	023 Move X0, 0x22AD000
	024 Move X0, [X0+3424]
	025 Call 0x1C17CF4
	026 Move X0, 0x22AE000
	027 Move X0, [X0+568]
	028 Call 0x1C17CF4
	029 Move X0, 0x22AE000
	030 Move X0, [X0+576]
	031 Call 0x1C17CF4
	032 Move X0, 0x22AE000
	033 Move X0, [X0+584]
	034 Call 0x1C17CF4
	035 Move X0, 0x22AE000
	036 Move X0, [X0+592]
	037 Call 0x1C17CF4
	038 Move X0, 0x22AD000
	039 Move X0, [X0+3488]
	040 Call 0x1C17CF4
	041 Move X0, 0x22A5000
	042 Move X0, [X0+1880]
	043 Call 0x1C17CF4
	044 Move X0, 0x22AE000
	045 Move X0, [X0+600]
	046 Call 0x1C17CF4
	047 Move X0, 0x22A7000
	048 Move X0, [X0+632]
	049 Call 0x1C17CF4
	050 Move W8, 1
	051 Move [X23+15], W8
	052 Move [X31+32], X31
	053 Move [X31+40], X31
	054 Move [X31+48], X31
	055 Compare X22, 0
	056 JumpIfEqual {75}
	057 Move X0, [X19+272]
	058 Compare X0, 0
	059 JumpIfEqual {75}
	060 Move X8, [X0]
	061 Move X1, X22
	062 Move X9, [X8+376]
	063 Move X2, [X8+384]
	064 NotImplemented "Instruction BLR not yet implemented."
	065 Move W8, [X19+144]
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Move X8, [X19+272]
	068 Compare X8, 0
	069 JumpIfEqual {75}
	070 Move X0, [X19+192]
	071 Compare X0, 0
	072 JumpIfEqual {249}
	073 Move X1, X22
	074 Call InRoomCallbacksContainer.OnRoomPropertiesUpdate, X0, X1
	075 Compare X20, 0
	076 JumpIfEqual {225}
	077 Move X8, 0x22AD000
	078 Move X8, [X8+3424]
	079 Move X0, X20
	080 Move X1, [X8]
	081 Call Dictionary`2<Object, Object>.get_Count, X0
	082 NotImplemented "Instruction CMP not yet implemented."
	083 NotImplemented "Instruction CMP not yet implemented."
	084 Move X0, [X19+272]
	085 Compare X0, 0
	086 JumpIfEqual {249}
	087 Move X8, [X0]
	088 Move W1, W21
	089 Move W2, W31
	090 Move X9, [X8+472]
	091 Move X3, [X8+480]
	092 NotImplemented "Instruction BLR not yet implemented."
	093 Compare X0, 0
	094 JumpIfEqual {225}
	095 Move X1, X20
	096 Move W2, W21
	097 Move X22, X0
	098 Call LoadBalancingClient.ReadoutPropertiesForActorNr, X0, X1, X2
	099 Move X8, [X22]
	100 Move X20, X0
	101 Move X0, X22
	102 Move X1, X20
	103 Move X9, [X8+376]
	104 Move X2, [X8+384]
	105 NotImplemented "Instruction BLR not yet implemented."
	106 Move X0, [X19+192]
	107 Compare X0, 0
	108 JumpIfEqual {249}
	109 Move X1, X22
	110 Move X2, X20
	111 Call InRoomCallbacksContainer.OnPlayerPropertiesUpdate, X0, X1, X2
	112 Move X8, 0x22AE000
	113 Move X8, [X8+568]
	114 Move X0, X20
	115 Move X1, [X8]
	116 Call Dictionary`2<Object, Object>.get_Keys, X0
	117 Compare X0, 0
	118 JumpIfEqual {249}
	119 Move X8, 0x22AE000
	120 Move X8, [X8+600]
	121 Move X1, [X8]
	122 Add X8, X31, 8
	123 Call KeyCollection<Object, Object>.GetEnumerator, X0
	124 NotImplemented "Instruction LDUR not yet implemented."
	125 Move X8, [X31+24]
	126 Move X25, 0x22AE000
	127 Move X26, 0x22A5000
	128 Move X27, 0x22AD000
	129 Move X25, [X25+584]
	130 Move X26, [X26+1880]
	131 Move X27, [X27+3488]
	132 Move [X31+2], V0
	133 Move [X31+48], X8
	134 Move X28, 0x22A7000
	135 Move X28, [X28+632]
	136 Move X1, [X25]
	137 Add X0, X31, 32
	138 Call Enumerator<Object, Object>.MoveNext, X0
	139 Move TEMP, X0
	140 And TEMP, TEMP, 1
	141 Compare TEMP, 1
	142 JumpIfNotEqual {220}
	143 Move X21, [X31+48]
	144 Compare X21, 0
	145 JumpIfEqual {240}
	146 Move X8, [X21]
	147 Move X1, [X26]
	148 Move X8, [X8+64]
	149 Move X9, [X1+64]
	150 NotImplemented "Instruction CMP not yet implemented."
	151 Move X0, X21
	152 Call 0x1C17E08
	153 Move W22, [X0]
	154 Compare W22, 0
	155 JumpIfEqual {136}
	156 Move X0, X20
	157 Move X1, X21
	158 Move X2, X31
	159 Call Hashtable.get_Item, X0, X1
	160 Move X21, X0
	161 Compare X0, 0
	162 JumpIfEqual {244}
	163 Move X8, [X21]
	164 Move X1, [X27]
	165 Move W10, [X8+304]
	166 Move W9, [X1+304]
	167 NotImplemented "Instruction CMP not yet implemented."
	168 Move X8, [X8+200]
	169 Add X8, X8, X9
	170 NotImplemented "Instruction LDUR not yet implemented."
	171 NotImplemented "Instruction CMP not yet implemented."
	172 Move W1, 255
	173 Move X0, X21
	174 Move X2, X31
	175 Call Hashtable.get_Item, X0, X1
	176 Move X23, X0
	177 Compare X0, 0
	178 JumpIfEqual {182}
	179 Move X1, [X28]
	180 Move X8, [X23]
	181 NotImplemented "Instruction CMP not yet implemented."
	182 Move X0, [X19+272]
	183 Compare X0, 0
	184 JumpIfEqual {243}
	185 Move X8, [X0]
	186 Move X9, [X8+472]
	187 Move X3, [X8+480]
	188 Move W1, W22
	189 Move W2, W31
	190 NotImplemented "Instruction BLR not yet implemented."
	191 Move X24, X0
	192 Compare X0, 0
	193 JumpIfNotEqual {214}
	194 Move X8, [X19]
	195 Move X9, [X8+504]
	196 Move X5, [X8+512]
	197 Move X0, X19
	198 Move X1, X23
	199 Move W2, W22
	200 Move W3, W31
	201 Move X4, X21
	202 NotImplemented "Instruction BLR not yet implemented."
	203 Move X24, X0
	204 Move X0, [X19+272]
	205 Compare X0, 0
	206 JumpIfEqual {247}
	207 Move X8, [X0]
	208 Move X9, [X8+456]
	209 Move X2, [X8+464]
	210 Move X1, X24
	211 NotImplemented "Instruction BLR not yet implemented."
	212 Compare X24, 0
	213 JumpIfEqual {248}
	214 Move X8, [X24]
	215 Move X9, [X8+376]
	216 Move X2, [X8+384]
	217 Move X0, X24
	218 Move X1, X21
	219 NotImplemented "Instruction BLR not yet implemented."
	220 Move X8, 0x22AE000
	221 Move X8, [X8+576]
	222 Add X0, X31, 32
	223 Move X1, [X8]
	224 Call Enumerator<Object, Object>.Dispose, X0
	225 Move X20, [X31+144]
	226 Move X19, [X31+152]
	227 Move X22, [X31+128]
	228 Move X21, [X31+136]
	229 Move X24, [X31+112]
	230 Move X23, [X31+120]
	231 Move X26, [X31+96]
	232 Move X25, [X31+104]
	233 Move X28, [X31+80]
	234 Move X27, [X31+88]
	235 Move X30, [X31+64]
	236 Add X31, X31, 160
	237 Return 
	238 Move X0, X21
	239 Call 0x1C181E0
	240 Call 0x1C17F20
	241 Move X0, X21
	242 Call 0x1C181E0
	243 Call 0x1C17F20
	244 Call 0x1C17F20
	245 Move X0, X23
	246 Call 0x1C181E0
	247 Call 0x1C17F20
	248 Call 0x1C17F20
	249 Call 0x1C17F20
	250 Move X19, X0
	251 NotImplemented "Instruction CMP not yet implemented."
	252 Move X0, X19
	253 Call 0x3EB2AD0
	254 Move X20, [X0]
	255 Call 0x3EB2AE0
	256 Move X8, 0x22AE000
	257 Move X8, [X8+576]
	258 Add X0, X31, 32
	259 Move X1, [X8]
	260 Call Enumerator<Object, Object>.Dispose, X0
	261 Compare X20, 0
	262 JumpIfEqual {225}
	263 Move X0, X20
	264 Call 0x1C17F18
	265 Move X20, X31
	266 Move X19, X0
	267 Move X8, 0x22AE000
	268 Move X8, [X8+576]
	269 Move X1, [X8]
	270 Add X0, X31, 32
	271 Call Enumerator<Object, Object>.Dispose, X0
	272 Compare X20, 0
	273 JumpIfNotEqual {276}
	274 Move X0, X19
	275 Call 0x1D2D690
	276 Move X0, X20
	277 Call 0x1C17F18
	278 Call 0x1991590

Method: ExitGames.Client.Photon.Hashtable ReadoutPropertiesForActorNr(ExitGames.Client.Photon.Hashtable actorProperties, System.Int32 actorNr)

Disassembly:
	0x01E4FD34 ADD X0, X31, 0x8
	0x01E4FD38 BL 0x2BC4350
	0x01E4FD3C TBZ X0, 0x0, 0x1E4FDB0
	0x01E4FD40 LDR X21, [X31 + 0x18]
	0x01E4FD44 CBZ X21, 0x1E4FDD4
	0x01E4FD48 LDR X8, [X21]
	0x01E4FD4C LDR X1, [X24]
	0x01E4FD50 LDRH W9, [X8 + 0x12E]
	0x01E4FD54 CBZ X9, 0x1E4FD78
	0x01E4FD58 LDR X10, [X8 + 0xB0]
	0x01E4FD5C ADD X10, X10, 0x8
	0x01E4FD60 LDUR X11, [X10 - 0x8]
	0x01E4FD64 CMP X11, X1
	0x01E4FD68 B.EQ 0x1E4FD88
	0x01E4FD6C SUBS X9, X9, 0x1
	0x01E4FD70 ADD X10, X10, 0x10
	0x01E4FD74 B.NE 0x1E4FD60
	0x01E4FD78 MOVZ W2, 0x2
	0x01E4FD7C MOV X0, X21
	0x01E4FD80 BL 0x1C5C788
	0x01E4FD84 B 0x1E4FD98
	0x01E4FD88 LDR W9, [X10]
	0x01E4FD8C ADD W9, W9, 0x2
	0x01E4FD90 ADD X8, X8, W9, 0x4, SXTW
	0x01E4FD94 ADD X0, X8, 0x138
	0x01E4FD98 LDP X8, X3, [X0]
	0x01E4FD9C MOV X0, X21
	0x01E4FDA0 MOV W1, W20
	0x01E4FDA4 MOV X2, X19
	0x01E4FDA8 BLR X8
	0x01E4FDAC B 0x1E4FD30
	0x01E4FDB0 LDR X1, [X22]
	0x01E4FDB4 ADD X0, X31, 0x8
	0x01E4FDB8 BL 0x2BC434C
	0x01E4FDBC LDP X20, X19, [X31 + 0x50]
	0x01E4FDC0 LDP X22, X21, [X31 + 0x40]
	0x01E4FDC4 LDP X24, X23, [X31 + 0x30]
	0x01E4FDC8 LDP X30, X25, [X31 + 0x20]
	0x01E4FDCC ADD X31, X31, 0x60
	0x01E4FDD0 RET
	0x01E4FDD4 BL 0x1C16F20
	0x01E4FDD8 BL 0x1C16F20
	0x01E4FDDC B 0x1E4FDE4
	0x01E4FDE0 B 0x1E4FDE4
	0x01E4FDE4 MOV X19, X0
	0x01E4FDE8 CMP W1, 0x1
	0x01E4FDEC B.NE 0x1E4FE18
	0x01E4FDF0 MOV X0, X19
	0x01E4FDF4 BL 0x3EB1AD0
	0x01E4FDF8 LDR X20, [X0]
	0x01E4FDFC BL 0x3EB1AE0
	0x01E4FE00 LDR X1, [X22]
	0x01E4FE04 ADD X0, X31, 0x8
	0x01E4FE08 BL 0x2BC434C
	0x01E4FE0C CBZ X20, 0x1E4FDBC
	0x01E4FE10 MOV X0, X20
	0x01E4FE14 BL 0x1C16F18
	0x01E4FE18 MOV X20, X31
	0x01E4FE1C B 0x1E4FE24
	0x01E4FE20 MOV X19, X0
	0x01E4FE24 LDR X1, [X22]
	0x01E4FE28 ADD X0, X31, 0x8
	0x01E4FE2C BL 0x2BC434C
	0x01E4FE30 CBNZ X20, 0x1E4FE3C

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x258B000
	007 Move X21, 0x22A5000
	008 Move W8, [X22+16]
	009 Move X21, [X21+1880]
	010 Move W20, W2
	011 Move X19, X1
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {27}
	016 Move X0, 0x22AD000
	017 Move X0, [X0+3416]
	018 Call 0x1C17CF4
	019 Move X0, 0x22AD000
	020 Move X0, [X0+3488]
	021 Call 0x1C17CF4
	022 Move X0, 0x22A5000
	023 Move X0, [X0+1880]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X22+16], W8
	027 Move X0, [X21]
	028 Add X1, X31, 12
	029 Move [X31+12], W20
	030 Call 0x1C17E04
	031 Compare X19, 0
	032 JumpIfEqual {72}
	033 Move X8, 0x22AD000
	034 Move X8, [X8+3416]
	035 Move X1, X0
	036 Move X0, X19
	037 Move X2, [X8]
	038 Call Dictionary`2<Object, Object>.ContainsKey, X0, X1
	039 Move TEMP, X0
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfNotEqual {65}
	043 Move X0, [X21]
	044 Add X1, X31, 8
	045 Move [X31+8], W20
	046 Call 0x1C17E04
	047 Move X1, X0
	048 Move X0, X19
	049 Move X2, X31
	050 Call Hashtable.get_Item, X0, X1
	051 Move X19, X0
	052 Compare X0, 0
	053 JumpIfEqual {65}
	054 Move X9, 0x22AD000
	055 Move X9, [X9+3488]
	056 Move X8, [X19]
	057 Move X1, [X9]
	058 Move W10, [X8+304]
	059 Move W9, [X1+304]
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Move X8, [X8+200]
	062 Add X8, X8, X9
	063 NotImplemented "Instruction LDUR not yet implemented."
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Move X0, X19
	066 Move X20, [X31+32]
	067 Move X19, [X31+40]
	068 Move X22, [X31+16]
	069 Move X21, [X31+24]
	070 Move X30, [X31+48]
	071 Return X0
	072 Call 0x1C17F20
	073 Move X0, X19
	074 Call 0x1C181E0

Method: System.Void ChangeLocalID(System.Int32 newID)

Disassembly:
	0x01E4FE34 MOV X0, X19
	0x01E4FE38 BL 0x1D2C690
	0x01E4FE3C MOV X0, X20
	0x01E4FE40 BL 0x1C16F18
	0x01E4FE44 BL 0x1990590
	0x01E4FE48 SUB X31, X31, 0x60
	0x01E4FE4C STP X30, X25, [X31 + 0x20]
	0x01E4FE50 STP X24, X23, [X31 + 0x30]
	0x01E4FE54 STP X22, X21, [X31 + 0x40]
	0x01E4FE58 STP X20, X19, [X31 + 0x50]
	0x01E4FE5C ADRP X22, 0x258A000
	0x01E4FE60 LDRB W8, [X22 + 0x2E]
	0x01E4FE64 MOV X19, X2
	0x01E4FE68 MOV W20, W1
	0x01E4FE6C MOV X21, X0
	0x01E4FE70 TBNZ X8, 0x0, 0x1E4FEB8
	0x01E4FE74 ADRP X0, 0x22AD000
	0x01E4FE78 LDR X0, [X0 + 0x268]
	0x01E4FE7C BL 0x1C16CF4
	0x01E4FE80 ADRP X0, 0x22AD000
	0x01E4FE84 LDR X0, [X0 + 0x270]
	0x01E4FE88 BL 0x1C16CF4
	0x01E4FE8C ADRP X0, 0x22AD000
	0x01E4FE90 LDR X0, [X0 + 0x278]
	0x01E4FE94 BL 0x1C16CF4
	0x01E4FE98 ADRP X0, 0x22AD000
	0x01E4FE9C LDR X0, [X0 + 0x280]
	0x01E4FEA0 BL 0x1C16CF4
	0x01E4FEA4 ADRP X0, 0x22AD000
	0x01E4FEA8 LDR X0, [X0 + 0x288]
	0x01E4FEAC BL 0x1C16CF4
	0x01E4FEB0 MOVZ W8, 0x1
	0x01E4FEB4 STRB W8, [X22 + 0x2E]
	0x01E4FEB8 STP X31, X31, [X31 + 0x8]
	0x01E4FEBC STR X31, [X31 + 0x18]
	0x01E4FEC0 LDR X0, [X21 + 0x28]
	0x01E4FEC4 CBZ X0, 0x1E4FFA4
	0x01E4FEC8 ADRP X25, 0x22AD000
	0x01E4FECC ADRP X23, 0x22AD000
	0x01E4FED0 ADRP X24, 0x22AD000
	0x01E4FED4 ADRP X22, 0x22AD000
	0x01E4FED8 LDR X25, [X25 + 0x288]
	0x01E4FEDC LDR X23, [X23 + 0x270]
	0x01E4FEE0 LDR X24, [X24 + 0x280]
	0x01E4FEE4 LDR X22, [X22 + 0x268]
	0x01E4FEE8 BL 0x1E54C74
	0x01E4FEEC LDR X1, [X25]
	0x01E4FEF0 ADD X8, X31, 0x8
	0x01E4FEF4 MOV X0, X21
	0x01E4FEF8 BL 0x301CB58
	0x01E4FEFC LDR X1, [X23]
	0x01E4FF00 ADD X0, X31, 0x8
	0x01E4FF04 BL 0x2BC4350
	0x01E4FF08 TBZ X0, 0x0, 0x1E4FF7C
	0x01E4FF0C LDR X21, [X31 + 0x18]
	0x01E4FF10 CBZ X21, 0x1E4FFA0
	0x01E4FF14 LDR X8, [X21]
	0x01E4FF18 LDR X1, [X24]
	0x01E4FF1C LDRH W9, [X8 + 0x12E]
	0x01E4FF20 CBZ X9, 0x1E4FF44
	0x01E4FF24 LDR X10, [X8 + 0xB0]
	0x01E4FF28 ADD X10, X10, 0x8
	0x01E4FF2C LDUR X11, [X10 - 0x8]
	0x01E4FF30 CMP X11, X1
	0x01E4FF34 B.EQ 0x1E4FF54
	0x01E4FF38 SUBS X9, X9, 0x1
	0x01E4FF3C ADD X10, X10, 0x10
	0x01E4FF40 B.NE 0x1E4FF2C
	0x01E4FF44 MOVZ W2, 0x5
	0x01E4FF48 MOV X0, X21
	0x01E4FF4C BL 0x1C5C788
	0x01E4FF50 B 0x1E4FF64
	0x01E4FF54 LDR W9, [X10]
	0x01E4FF58 ADD W9, W9, 0x5
	0x01E4FF5C ADD X8, X8, W9, 0x4, SXTW
	0x01E4FF60 ADD X0, X8, 0x138
	0x01E4FF64 LDP X8, X3, [X0]
	0x01E4FF68 MOV X0, X21
	0x01E4FF6C MOV W1, W20
	0x01E4FF70 MOV X2, X19
	0x01E4FF74 BLR X8
	0x01E4FF78 B 0x1E4FEFC
	0x01E4FF7C LDR X1, [X22]
	0x01E4FF80 ADD X0, X31, 0x8
	0x01E4FF84 BL 0x2BC434C
	0x01E4FF88 LDP X20, X19, [X31 + 0x50]
	0x01E4FF8C LDP X22, X21, [X31 + 0x40]
	0x01E4FF90 LDP X24, X23, [X31 + 0x30]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x258B000
	007 Move W8, [X21+17]
	008 Move W20, W1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {25}
	014 Move X0, 0x22A5000
	015 Move X0, [X0+2904]
	016 Call 0x1C17CF4
	017 Move X0, 0x22A5000
	018 Move X0, [X0+1880]
	019 Call 0x1C17CF4
	020 Move X0, 0x22AE000
	021 Move X0, [X0+608]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+17], W8
	025 Move X1, [X19+264]
	026 Compare X1, 0
	027 JumpIfNotEqual {66}
	028 Move X0, [X19+272]
	029 Compare X0, 0
	030 JumpIfEqual {103}
	031 Move X1, X31
	032 Call Room.get_Players, X0
	033 Move X8, 0x22A5000
	034 Move X8, [X8+2904]
	035 NotImplemented "Instruction CMP not yet implemented."
	036 NotImplemented "Instruction CSET not yet implemented."
	037 Add X1, X31, 12
	038 Move X8, [X8]
	039 Move [X31+12], W9
	040 Move X0, X8
	041 Call 0x1C17E04
	042 Move X8, 0x22A5000
	043 Move X8, [X8+1880]
	044 Move X21, X0
	045 Add X1, X31, 8
	046 Move [X31+8], W20
	047 Move X0, [X8]
	048 Call 0x1C17E04
	049 Move X8, 0x22AE000
	050 Move X8, [X8+608]
	051 Move X3, X0
	052 Move X1, X31
	053 Move X2, X21
	054 Move X8, [X8]
	055 Move X4, X31
	056 Move X0, X8
	057 Call String.Format, X0, X1, X2, X3
	058 Move X8, [X19]
	059 Move X2, X0
	060 Move W1, 2
	061 Move X0, X19
	062 Move X9, [X8+536]
	063 Move X3, [X8+544]
	064 NotImplemented "Instruction BLR not yet implemented."
	065 Move X1, [X19+264]
	066 Move X0, [X19+272]
	067 Compare X0, 0
	068 JumpIfEqual {87}
	069 Move X8, [X0]
	070 Move X9, [X8+408]
	071 Move X2, [X8+416]
	072 NotImplemented "Instruction BLR not yet implemented."
	073 Move X0, [X19+264]
	074 Compare X0, 0
	075 JumpIfEqual {103}
	076 Move W1, W20
	077 Move X2, X31
	078 Call Player.ChangeLocalID, X0, X1
	079 Move X0, [X19+272]
	080 Compare X0, 0
	081 JumpIfEqual {103}
	082 Move X8, [X0]
	083 Move X1, [X19+264]
	084 Move X9, [X8+456]
	085 Move X2, [X8+464]
	086 NotImplemented "Instruction BLR not yet implemented."
	087 Compare X1, 0
	088 JumpIfEqual {103}
	089 Move X0, X1
	090 Move W1, W20
	091 Move X2, X31
	092 Call Player.ChangeLocalID, X0, X1
	093 Move X8, [X19+264]
	094 Compare X8, 0
	095 JumpIfEqual {103}
	096 Move [X8+16], X31
	097 Move X20, [X31+32]
	098 Move X19, [X31+40]
	099 Move X30, [X31+16]
	100 Move X21, [X31+24]
	101 Add X31, X31, 48
	102 Return 
	103 Call 0x1C17F20

Method: System.Void GameEnteredOnGameServer(ExitGames.Client.Photon.OperationResponse operationResponse)

Disassembly:
	0x01E4FF94 LDP X30, X25, [X31 + 0x20]
	0x01E4FF98 ADD X31, X31, 0x60
	0x01E4FF9C RET
	0x01E4FFA0 BL 0x1C16F20
	0x01E4FFA4 BL 0x1C16F20
	0x01E4FFA8 B 0x1E4FFB0
	0x01E4FFAC B 0x1E4FFB0
	0x01E4FFB0 MOV X19, X0
	0x01E4FFB4 CMP W1, 0x1
	0x01E4FFB8 B.NE 0x1E4FFE4
	0x01E4FFBC MOV X0, X19
	0x01E4FFC0 BL 0x3EB1AD0
	0x01E4FFC4 LDR X20, [X0]
	0x01E4FFC8 BL 0x3EB1AE0
	0x01E4FFCC LDR X1, [X22]
	0x01E4FFD0 ADD X0, X31, 0x8
	0x01E4FFD4 BL 0x2BC434C
	0x01E4FFD8 CBZ X20, 0x1E4FF88
	0x01E4FFDC MOV X0, X20
	0x01E4FFE0 BL 0x1C16F18
	0x01E4FFE4 MOV X20, X31
	0x01E4FFE8 B 0x1E4FFF0
	0x01E4FFEC MOV X19, X0
	0x01E4FFF0 LDR X1, [X22]
	0x01E4FFF4 ADD X0, X31, 0x8
	0x01E4FFF8 BL 0x2BC434C
	0x01E4FFFC CBNZ X20, 0x1E50008
	0x01E50000 MOV X0, X19
	0x01E50004 BL 0x1D2C690
	0x01E50008 MOV X0, X20
	0x01E5000C BL 0x1C16F18
	0x01E50010 BL 0x1990590
	0x01E50014 SUB X31, X31, 0xA0
	0x01E50018 STP X29, X30, [X31 + 0x40]
	0x01E5001C STP X28, X27, [X31 + 0x50]
	0x01E50020 STP X26, X25, [X31 + 0x60]
	0x01E50024 STP X24, X23, [X31 + 0x70]
	0x01E50028 STP X22, X21, [X31 + 0x80]
	0x01E5002C STP X20, X19, [X31 + 0x90]
	0x01E50030 ADRP X21, 0x2589000
	0x01E50034 LDRB W8, [X21 + 0x17]
	0x01E50038 MOV X19, X1
	0x01E5003C MOV X20, X0
	0x01E50040 TBNZ X8, 0x0, 0x1E50238
	0x01E50044 ADRP X0, 0x22AC000
	0x01E50048 LDR X0, [X0 + 0x2B0]
	0x01E5004C BL 0x1C16CF4
	0x01E50050 ADRP X0, 0x22A3000
	0x01E50054 LDR X0, [X0 + 0x9C8]
	0x01E50058 BL 0x1C16CF4
	0x01E5005C ADRP X0, 0x22A7000
	0x01E50060 LDR X0, [X0 + 0xF98]
	0x01E50064 BL 0x1C16CF4
	0x01E50068 ADRP X0, 0x22A5000
	0x01E5006C LDR X0, [X0 + 0x9B8]
	0x01E50070 BL 0x1C16CF4
	0x01E50074 ADRP X0, 0x22AC000
	0x01E50078 LDR X0, [X0 + 0x238]
	0x01E5007C BL 0x1C16CF4
	0x01E50080 ADRP X0, 0x22AC000
	0x01E50084 LDR X0, [X0 + 0x2B8]
	0x01E50088 BL 0x1C16CF4
	0x01E5008C ADRP X0, 0x22A3000
	0x01E50090 LDR X0, [X0 + 0x720]
	0x01E50094 BL 0x1C16CF4
	0x01E50098 ADRP X0, 0x22AC000
	0x01E5009C LDR X0, [X0 + 0x240]
	0x01E500A0 BL 0x1C16CF4
	0x01E500A4 ADRP X0, 0x22AC000
	0x01E500A8 LDR X0, [X0 + 0x248]
	0x01E500AC BL 0x1C16CF4
	0x01E500B0 ADRP X0, 0x22AC000
	0x01E500B4 LDR X0, [X0 + 0x250]
	0x01E500B8 BL 0x1C16CF4
	0x01E500BC ADRP X0, 0x22AB000
	0x01E500C0 LDR X0, [X0 + 0xD98]
	0x01E500C4 BL 0x1C16CF4
	0x01E500C8 ADRP X0, 0x22AC000
	0x01E500CC LDR X0, [X0 + 0x2C0]
	0x01E500D0 BL 0x1C16CF4
	0x01E500D4 ADRP X0, 0x22AB000
	0x01E500D8 LDR X0, [X0 + 0xDA0]
	0x01E500DC BL 0x1C16CF4
	0x01E500E0 ADRP X0, 0x22AC000
	0x01E500E4 LDR X0, [X0 + 0x258]
	0x01E500E8 BL 0x1C16CF4
	0x01E500EC ADRP X0, 0x22AC000
	0x01E500F0 LDR X0, [X0 + 0x2C8]
	0x01E500F4 BL 0x1C16CF4
	0x01E500F8 ADRP X0, 0x22AC000
	0x01E500FC LDR X0, [X0 + 0x2D0]
	0x01E50100 BL 0x1C16CF4
	0x01E50104 ADRP X0, 0x22AC000
	0x01E50108 LDR X0, [X0 + 0x2D8]
	0x01E5010C BL 0x1C16CF4
	0x01E50110 ADRP X0, 0x22AC000
	0x01E50114 LDR X0, [X0 + 0x2E0]
	0x01E50118 BL 0x1C16CF4
	0x01E5011C ADRP X0, 0x22AC000
	0x01E50120 LDR X0, [X0 + 0x2E8]
	0x01E50124 BL 0x1C16CF4
	0x01E50128 ADRP X0, 0x22AC000
	0x01E5012C LDR X0, [X0 + 0x2F0]
	0x01E50130 BL 0x1C16CF4
	0x01E50134 ADRP X0, 0x22AC000
	0x01E50138 LDR X0, [X0 + 0x2F8]
	0x01E5013C BL 0x1C16CF4
	0x01E50140 ADRP X0, 0x22AB000
	0x01E50144 LDR X0, [X0 + 0xB28]
	0x01E50148 BL 0x1C16CF4
	0x01E5014C ADRP X0, 0x22AC000
	0x01E50150 LDR X0, [X0 + 0x18]
	0x01E50154 BL 0x1C16CF4
	0x01E50158 ADRP X0, 0x22AC000
	0x01E5015C LDR X0, [X0 + 0x40]
	0x01E50160 BL 0x1C16CF4
	0x01E50164 ADRP X0, 0x22AC000
	0x01E50168 LDR X0, [X0 + 0x300]
	0x01E5016C BL 0x1C16CF4
	0x01E50170 ADRP X0, 0x22AC000
	0x01E50174 LDR X0, [X0 + 0x308]
	0x01E50178 BL 0x1C16CF4
	0x01E5017C ADRP X0, 0x22AC000
	0x01E50180 LDR X0, [X0 + 0x310]
	0x01E50184 BL 0x1C16CF4
	0x01E50188 ADRP X0, 0x22AC000
	0x01E5018C LDR X0, [X0 + 0x48]
	0x01E50190 BL 0x1C16CF4
	0x01E50194 ADRP X0, 0x22A3000
	0x01E50198 LDR X0, [X0 + 0xAC8]
	0x01E5019C BL 0x1C16CF4
	0x01E501A0 ADRP X0, 0x22A5000
	0x01E501A4 LDR X0, [X0 + 0x278]
	0x01E501A8 BL 0x1C16CF4
	0x01E501AC ADRP X0, 0x22A7000
	0x01E501B0 LDR X0, [X0 + 0x928]
	0x01E501B4 BL 0x1C16CF4
	0x01E501B8 ADRP X0, 0x22AC000
	0x01E501BC LDR X0, [X0 + 0x318]
	0x01E501C0 BL 0x1C16CF4
	0x01E501C4 ADRP X0, 0x22AC000
	0x01E501C8 LDR X0, [X0 + 0x320]
	0x01E501CC BL 0x1C16CF4
	0x01E501D0 ADRP X0, 0x22AC000
	0x01E501D4 LDR X0, [X0 + 0x328]
	0x01E501D8 BL 0x1C16CF4
	0x01E501DC ADRP X0, 0x22AC000
	0x01E501E0 LDR X0, [X0 + 0x330]
	0x01E501E4 BL 0x1C16CF4
	0x01E501E8 ADRP X0, 0x22AC000
	0x01E501EC LDR X0, [X0 + 0x338]
	0x01E501F0 BL 0x1C16CF4
	0x01E501F4 ADRP X0, 0x22AC000
	0x01E501F8 LDR X0, [X0 + 0x340]
	0x01E501FC BL 0x1C16CF4
	0x01E50200 ADRP X0, 0x22AC000
	0x01E50204 LDR X0, [X0 + 0x348]
	0x01E50208 BL 0x1C16CF4
	0x01E5020C ADRP X0, 0x22AC000
	0x01E50210 LDR X0, [X0 + 0x350]
	0x01E50214 BL 0x1C16CF4
	0x01E50218 ADRP X0, 0x22AC000
	0x01E5021C LDR X0, [X0 + 0x358]
	0x01E50220 BL 0x1C16CF4
	0x01E50224 ADRP X0, 0x22AC000
	0x01E50228 LDR X0, [X0 + 0x360]
	0x01E5022C BL 0x1C16CF4
	0x01E50230 MOVZ W8, 0x1
	0x01E50234 STRB W8, [X21 + 0x17]
	0x01E50238 STRH W31, [X31 + 0x3C]
	0x01E5023C STP X31, X31, [X31 + 0x20]
	0x01E50240 STR X31, [X31 + 0x30]
	0x01E50244 CBZ X19, 0x1E508DC
	0x01E50248 LDR X0, [X19 + 0x20]
	0x01E5024C CBZ X0, 0x1E508DC
	0x01E50250 MOVZ W1, 0xDD
	0x01E50254 MOV X2, X31
	0x01E50258 BL 0x34FC4A4
	0x01E5025C TBZ X0, 0x0, 0x1E502B4
	0x01E50260 LDR X21, [X20 + 0x30]
	0x01E50264 CBNZ X21, 0x1E50288
	0x01E50268 ADRP X8, 0x22A7000
	0x01E5026C LDR X8, [X8 + 0xF98]
	0x01E50270 LDR X0, [X8]
	0x01E50274 BL 0x1C16F10
	0x01E50278 MOV X1, X31

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x258B000
	009 Move W8, [X21+18]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {27}
	016 Move X0, 0x22AD000
	017 Move X0, [X0+3488]
	018 Call 0x1C17CF4
	019 Move X0, 0x22A6000
	020 Move X0, [X0+3672]
	021 Call 0x1C17CF4
	022 Move X0, 0x22A5000
	023 Move X0, [X0+1880]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X21+18], W8
	027 Move [X31+8], X31
	028 Move X8, [X19+296]
	029 Compare X8, 0
	030 JumpIfEqual {209}
	031 Move X9, [X19]
	032 Move X1, [X8+16]
	033 Move X2, [X8+24]
	034 Move X0, X19
	035 Move X8, [X9+520]
	036 Move X3, [X9+528]
	037 NotImplemented "Instruction BLR not yet implemented."
	038 Move [X19+272], X0
	039 Compare X0, 0
	040 JumpIfEqual {209}
	041 Move [X0+96], X19
	042 Compare X20, 0
	043 JumpIfEqual {209}
	044 Move W1, 254
	045 Move X0, X20
	046 Move X2, X31
	047 Call OperationResponse.get_Item, X0, X1
	048 Compare X0, 0
	049 JumpIfEqual {209}
	050 Move X23, 0x22A4000
	051 Move X23, [X23+1880]
	052 Move X8, [X0]
	053 Move X1, [X23]
	054 Move X8, [X8+64]
	055 Move X9, [X1+64]
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Call 0x1C17E08
	058 Move W1, [X0]
	059 Move X0, X19
	060 Call LoadBalancingClient.ChangeLocalID, X0, X1
	061 Move X0, [X20+32]
	062 Compare X0, 0
	063 JumpIfEqual {209}
	064 Move W1, 252
	065 Move X2, X31
	066 Call ParameterDictionary.ContainsKey, X0, X1
	067 Move TEMP, X0
	068 And TEMP, TEMP, 1
	069 Compare TEMP, 1
	070 JumpIfNotEqual {94}
	071 Move X0, [X20+32]
	072 Compare X0, 0
	073 JumpIfEqual {209}
	074 Move W1, 252
	075 Move X2, X31
	076 Call ParameterDictionary.get_Item, X0, X1
	077 Compare X0, 0
	078 JumpIfEqual {91}
	079 Move X8, 0x22A5000
	080 Move X8, [X8+3672]
	081 Move X21, X0
	082 Move X22, [X8]
	083 Move X1, X22
	084 Call 0x1C17E00
	085 Move X1, X0
	086 Compare X0, 0
	087 JumpIfNotEqual {92}
	088 Move X0, X21
	089 Move X1, X22
	090 Call 0x1C181E0
	091 Move X1, X31
	092 Move X0, X19
	093 Call LoadBalancingClient.UpdatedActorList, X0, X1
	094 Move X22, 0x22AC000
	095 Move X22, [X22+3488]
	096 Move W1, 249
	097 Move X0, X20
	098 Move X2, X31
	099 Call OperationResponse.get_Item, X0, X1
	100 Move X21, X0
	101 Compare X0, 0
	102 JumpIfEqual {112}
	103 Move X8, [X21]
	104 Move X1, [X22]
	105 Move W10, [X8+304]
	106 Move W9, [X1+304]
	107 NotImplemented "Instruction CMP not yet implemented."
	108 Move X8, [X8+200]
	109 Add X8, X8, X9
	110 NotImplemented "Instruction LDUR not yet implemented."
	111 NotImplemented "Instruction CMP not yet implemented."
	112 Move W1, 248
	113 Move X0, X20
	114 Move X2, X31
	115 Call OperationResponse.get_Item, X0, X1
	116 Move X8, X0
	117 Compare X0, 0
	118 JumpIfEqual {128}
	119 Move X9, [X8]
	120 Move X1, [X22]
	121 Move W11, [X9+304]
	122 Move W10, [X1+304]
	123 NotImplemented "Instruction CMP not yet implemented."
	124 Move X9, [X9+200]
	125 Add X9, X9, X10
	126 NotImplemented "Instruction LDUR not yet implemented."
	127 NotImplemented "Instruction CMP not yet implemented."
	128 Move X0, X19
	129 Move X1, X8
	130 Move X2, X21
	131 Move W3, W31
	132 Call LoadBalancingClient.ReadoutProperties, X0, X1, X2, X3
	133 Move X0, [X20+32]
	134 Compare X0, 0
	135 JumpIfEqual {209}
	136 Add X2, X31, 8
	137 Move W1, 191
	138 Move X3, X31
	139 Call ParameterDictionary.TryGetValue, X0, X1, X2
	140 Move TEMP, X0
	141 And TEMP, TEMP, 1
	142 Compare TEMP, 1
	143 JumpIfNotEqual {160}
	144 Move X20, [X19+272]
	145 Compare X20, 0
	146 JumpIfEqual {209}
	147 Move X0, [X31+8]
	148 Compare X0, 0
	149 JumpIfEqual {209}
	150 Move X8, [X0]
	151 Move X1, [X23]
	152 Move X8, [X8+64]
	153 Move X9, [X1+64]
	154 NotImplemented "Instruction CMP not yet implemented."
	155 Call 0x1C17E08
	156 Move W1, [X0]
	157 Move X0, X20
	158 Move X2, X31
	159 Call Room.InternalCacheRoomFlags, X0, X1
	160 Move X8, [X19+272]
	161 Compare X8, 0
	162 JumpIfEqual {209}
	163 Move W8, [X8+121]
	164 Compare W8, 0
	165 JumpIfEqual {201}
	166 Move W1, [X19+144]
	167 NotImplemented "Instruction CMP not yet implemented."
	168 Move X8, [X19+152]
	169 Move W9, 9
	170 Move [X19+144], W9
	171 Compare X8, 0
	172 JumpIfEqual {178}
	173 Move X9, [X8+24]
	174 Move X0, [X8+64]
	175 Move X3, [X8+40]
	176 Move W2, 9
	177 NotImplemented "Instruction BLR not yet implemented."
	178 Move X0, [X19+264]
	179 Compare X0, 0
	180 JumpIfEqual {209}
	181 Move X1, X31
	182 Call Player.UpdateNickNameOnJoined, X0
	183 Move W8, [X19+292]
	184 Compare W8, 0
	185 JumpIfEqual {193}
	186 NotImplemented "Instruction CMP not yet implemented."
	187 Move X0, [X19+264]
	188 Compare X0, 0
	189 JumpIfEqual {209}
	190 Move X1, X31
	191 Call Player.get_ActorNumber, X0
	192 NotImplemented "Instruction CMP not yet implemented."
	193 Move X0, [X19+184]
	194 Compare X0, 0
	195 JumpIfEqual {209}
	196 Call MatchMakingCallbacksContainer.OnCreatedRoom, X0
	197 Move X0, [X19+184]
	198 Compare X0, 0
	199 JumpIfEqual {209}
	200 Call MatchMakingCallbacksContainer.OnJoinedRoom, X0
	201 Move X20, [X31+48]
	202 Move X19, [X31+56]
	203 Move X22, [X31+32]
	204 Move X21, [X31+40]
	205 Move X30, [X31+16]
	206 Move X23, [X31+24]
	207 Add X31, X31, 64
	208 Return 
	209 Call 0x1C17F20
	210 Call 0x1C181E0
	211 Move X0, X21
	212 Call 0x1C181E0
	213 Move X0, X8
	214 Call 0x1C181E0

Method: System.Void UpdatedActorList(System.Int32[] actorsInGame)

Disassembly:
	0x01E5027C MOV X21, X0
	0x01E50280 BL 0x1E59820
	0x01E50284 STR X21, [X20 + 0x30]
	0x01E50288 LDR X0, [X19 + 0x20]
	0x01E5028C CBZ X0, 0x1E508DC
	0x01E50290 MOVZ W1, 0xDD
	0x01E50294 MOV X2, X31
	0x01E50298 BL 0x34FB9B8
	0x01E5029C CBZ X21, 0x1E508DC
	0x01E502A0 STR X0, [X21 + 0x28]
	0x01E502A4 LDR X8, [X20 + 0x30]
	0x01E502A8 CBZ X8, 0x1E508DC
	0x01E502AC LDR X8, [X8 + 0x28]
	0x01E502B0 STR X8, [X20 + 0x48]
	0x01E502B4 MOV X21, X19
	0x01E502B8 LDRH W8, [X21 + 0x12]!
	0x01E502BC MOVZ W9, 0x7FE7
	0x01E502C0 CMP W8, W9
	0x01E502C4 B.NE 0x1E502D4
	0x01E502C8 MOVZ W1, 0x12
	0x01E502CC MOV X0, X20
	0x01E502D0 BL 0x1E47DC0
	0x01E502D4 LDRB W9, [X19 + 0x10]
	0x01E502D8 SUB W8, W9, 0xD9
	0x01E502DC CMP W8, 0xE
	0x01E502E0 B.HI 0x1E50444
	0x01E502E4 ADRP X9, 0xFFFFFFFFFECDD000
	0x01E502E8 ADD X9, X9, 0xA92
	0x01E502EC ADR X10, 0x10
	0x01E502F0 LDRH W11, [X9, X8, LSL #1]
	0x01E502F4 ADD X10, X10, X11, 0x2, LSL
	0x01E502F8 BR X10
	0x01E502FC LDR W8, [X20 + 0x80]
	0x01E50300 LDRH W9, [X21]
	0x01E50304 CMP W8, 0x1
	0x01E50308 CBZ W9, 0x1E50450
	0x01E5030C B.NE 0x1E50634
	0x01E50310 STR X19, [X20 + 0x130]
	0x01E50314 B 0x1E50BC4
	0x01E50318 LDRH W8, [X21]
	0x01E5031C CBZ W8, 0x1E50678
	0x01E50320 ADRP X8, 0x22A3000
	0x01E50324 LDR X8, [X8 + 0xAC8]
	0x01E50328 MOVZ W1, 0x5
	0x01E5032C LDR X0, [X8]
	0x01E50330 BL 0x1C16D6C
	0x01E50334 MOV X22, X0
	0x01E50338 MOV X0, X19
	0x01E5033C MOV X1, X31
	0x01E50340 BL 0x3505858
	0x01E50344 CBZ X22, 0x1E508DC
	0x01E50348 LDR W8, [X22 + 0x18]
	0x01E5034C CBZ W8, 0x1E5118C
	0x01E50350 CMP W8, 0x1
	0x01E50354 STR X0, [X22 + 0x20]
	0x01E50358 B.EQ 0x1E5118C
	0x01E5035C ADRP X8, 0x22AC000
	0x01E50360 LDR X8, [X8 + 0x330]
	0x01E50364 ADRP X9, 0x22AC000
	0x01E50368 MOVN X10, 0x0
	0x01E5036C ADD X0, X31, 0x8
	0x01E50370 LDR X8, [X8]
	0x01E50374 LDR X9, [X9 + 0x48]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X21, 0x258A000
	010 Move W8, [X21+19]
	011 Move X19, X1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0x22A6000
	018 Move X0, [X0+632]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+19], W8
	022 Compare X19, 0
	023 JumpIfEqual {69}
	024 Move X8, [X19+24]
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move X25, 0x22A6000
	027 Move X25, [X25+632]
	028 Move X23, X31
	029 And X8, X8, 0
	030 Add X24, X19, 32
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move W21, [X24]
	033 Compare W21, 0
	034 JumpIfEqual {66}
	035 Move X0, [X20+272]
	036 Compare X0, 0
	037 JumpIfEqual {79}
	038 Move X8, [X0]
	039 Move W1, W21
	040 Move W2, W31
	041 Move X9, [X8+472]
	042 Move X3, [X8+480]
	043 NotImplemented "Instruction BLR not yet implemented."
	044 Compare X0, 0
	045 JumpIfNotEqual {66}
	046 Move X8, [X25]
	047 Move X9, [X20]
	048 Move X22, [X20+272]
	049 Move X0, X20
	050 Move X8, [X8+184]
	051 Move W2, W21
	052 Move W3, W31
	053 Move X4, X31
	054 Move X1, [X8]
	055 Move X8, [X9+504]
	056 Move X5, [X9+512]
	057 NotImplemented "Instruction BLR not yet implemented."
	058 Compare X22, 0
	059 JumpIfEqual {79}
	060 Move X8, [X22]
	061 Move X1, X0
	062 Move X0, X22
	063 Move X9, [X8+456]
	064 Move X2, [X8+464]
	065 NotImplemented "Instruction BLR not yet implemented."
	066 Move W8, [X19+24]
	067 Add X23, X23, 1
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Move X20, [X31+48]
	070 Move X19, [X31+56]
	071 Move X22, [X31+32]
	072 Move X21, [X31+40]
	073 Move X24, [X31+16]
	074 Move X23, [X31+24]
	075 Move X30, [X31+64]
	076 Move X25, [X31+72]
	077 Return 
	078 Call 0x1C17F28
	079 Call 0x1C17F20

Method: Fusion.Photon.Realtime.Player CreatePlayer(System.String actorName, System.Int32 actorNumber, System.Boolean isLocal, ExitGames.Client.Photon.Hashtable actorProperties)

Disassembly:
	0x01E506F0 LDR X8, [X20 + 0x108]
	0x01E506F4 CBZ X8, 0x1E508DC
	0x01E506F8 STR X21, [X8 + 0x28]
	0x01E506FC LDR X8, [X20 + 0x30]
	0x01E50700 CBZ X8, 0x1E50CBC
	0x01E50704 LDR X1, [X8 + 0x30]
	0x01E50708 B 0x1E50CC0
	0x01E5070C MOVZ W8, 0x10
	0x01E50710 STR W8, [X20 + 0xE0]
	0x01E50714 LDR W1, [X20 + 0xE0]
	0x01E50718 B 0x1E50B98
	0x01E5071C MOVZ W1, 0xE6
	0x01E50720 MOV X0, X19
	0x01E50724 MOV X2, X31
	0x01E50728 BL 0x3505754
	0x01E5072C ADRP X23, 0x22A5000
	0x01E50730 LDR X23, [X23 + 0x278]
	0x01E50734 MOV X21, X0
	0x01E50738 CBZ X0, 0x1E5074C
	0x01E5073C LDR X1, [X23]
	0x01E50740 LDR X8, [X21]
	0x01E50744 CMP X8, X1
	0x01E50748 B.NE 0x1E511B8
	0x01E5074C LDRH W22, [X20 + 0x66]
	0x01E50750 STR X21, [X20 + 0x78]
	0x01E50754 CBZ W22, 0x1E50780
	0x01E50758 ADRP X8, 0x22AB000
	0x01E5075C LDR X8, [X8 + 0xB28]
	0x01E50760 LDR X0, [X8]
	0x01E50764 LDR W8, [X0 + 0xE0]
	0x01E50768 CBNZ W8, 0x1E50770
	0x01E5076C BL 0x1C16DFC
	0x01E50770 MOV X0, X21

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x258A000
	009 Move X24, 0x22AD000
	010 Move W8, [X23+20]
	011 Move X24, [X24+656]
	012 Move X19, X4
	013 Move W22, W3
	014 Move W20, W2
	015 Move X21, X1
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0x22AD000
	021 Move X0, [X0+656]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X23+20], W8
	025 Move X0, [X24]
	026 Call 0x1C17F10
	027 And W3, W22, 1
	028 Move X1, X21
	029 Move W2, W20
	030 Move X4, X19
	031 Move X5, X31
	032 Move X23, X0
	033 Call Player..ctor, X0, X1, X2, X3, X4
	034 Move X0, X23
	035 Move X20, [X31+48]
	036 Move X19, [X31+56]
	037 Move X22, [X31+32]
	038 Move X21, [X31+40]
	039 Move X24, [X31+16]
	040 Move X23, [X31+24]
	041 Move X30, [X31+64]
	042 Return X0

Method: Fusion.Photon.Realtime.Room CreateRoom(System.String roomName, Fusion.Photon.Realtime.RoomOptions opt)

Disassembly:
	0x01E50774 MOV W1, W22
	0x01E50778 BL 0x1E5159C
	0x01E5077C STR X0, [X20 + 0x78]
	0x01E50780 MOVZ W1, 0xFF
	0x01E50784 MOV X0, X19
	0x01E50788 MOV X2, X31
	0x01E5078C BL 0x3505754
	0x01E50790 CBZ X0, 0x1E50BA4
	0x01E50794 LDR X8, [X23]
	0x01E50798 LDR X9, [X0]
	0x01E5079C CMP X9, X8
	0x01E507A0 CSEL X21, X0, X31, EQ
	0x01E507A4 B 0x1E50BA8
	0x01E507A8 MOVZ W1, 0x1
	0x01E507AC MOV X0, X19
	0x01E507B0 MOV X2, X31
	0x01E507B4 BL 0x3505754
	0x01E507B8 ADRP X8, 0x22A5000
	0x01E507BC LDR X8, [X8 + 0x9B8]
	0x01E507C0 LDR X1, [X8]
	0x01E507C4 BL 0x1C16E00
	0x01E507C8 MOV X21, X0
	0x01E507CC MOVZ W1, 0x2
	0x01E507D0 MOV X0, X19
	0x01E507D4 MOV X2, X31
	0x01E507D8 BL 0x3505754
	0x01E507DC ADRP X8, 0x22A3000
	0x01E507E0 LDR X8, [X8 + 0xAC8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x258A000
	007 Move X22, 0x22AD000
	008 Move W8, [X21+21]
	009 Move X22, [X22+664]
	010 Move X19, X2
	011 Move X20, X1
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x22AD000
	017 Move X0, [X0+664]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+21], W8
	021 Move X0, [X22]
	022 Call 0x1C17F10
	023 Move X1, X20
	024 Move X2, X19
	025 Move W3, W31
	026 Move X4, X31
	027 Move X21, X0
	028 Call Room..ctor, X0, X1, X2, X3
	029 Move X0, X21
	030 Move X20, [X31+32]
	031 Move X19, [X31+40]
	032 Move X22, [X31+16]
	033 Move X21, [X31+24]
	034 Move X30, [X31+48]
	035 Return X0

Method: System.Boolean CheckIfOpAllowedOnServer(System.Byte opCode, Fusion.Photon.Realtime.ServerConnection serverConnection)

Disassembly:
	0x01E507E4 LDR X1, [X8]
	0x01E507E8 BL 0x1C16E00
	0x01E507EC LDR X23, [X20 + 0x138]
	0x01E507F0 CBZ X23, 0x1E508DC
	0x01E507F4 ADRP X8, 0x22AC000
	0x01E507F8 LDR X8, [X8 + 0x2F0]
	0x01E507FC MOV X22, X0
	0x01E50800 LDR X0, [X8]
	0x01E50804 BL 0x1C16F10
	0x01E50808 ADRP X8, 0x22AC000
	0x01E5080C LDR W1, [X23 + 0x18]
	0x01E50810 LDR X8, [X8 + 0x2D8]
	0x01E50814 MOV X23, X0
	0x01E50818 LDR X2, [X8]
	0x01E5081C BL 0x301B830
	0x01E50820 LDR X8, [X20 + 0x138]
	0x01E50824 CBZ X8, 0x1E508DC
	0x01E50828 ADRP X28, 0x22AC000
	0x01E5082C ADRP X29, 0x22AC000
	0x01E50830 LDR X28, [X28 + 0x2C0]
	0x01E50834 LDR X29, [X29 + 0x2D0]
	0x01E50838 MOV X24, X31
	0x01E5083C ADD X26, X21, 0x20
	0x01E50840 ADD X27, X22, 0x20
	0x01E50844 LDRSW X8, [X8 + 0x18]
	0x01E50848 CMP X24, X8
	0x01E5084C B.GE 0x1E50AC4
	0x01E50850 LDR X0, [X28]
	0x01E50854 BL 0x1C16F10
	0x01E50858 MOV X1, X31
	0x01E5085C MOV X25, X0
	0x01E50860 BL 0x33BDD8C
	0x01E50864 LDR X8, [X20 + 0x138]
	0x01E50868 CBZ X8, 0x1E508DC
	0x01E5086C LDR W9, [X8 + 0x18]
	0x01E50870 CMP X24, X9
	0x01E50874 B.CS 0x1E5118C
	0x01E50878 CBZ X25, 0x1E508DC
	0x01E5087C ADD X8, X8, X24, 0x3, LSL
	0x01E50880 LDR X8, [X8 + 0x20]
	0x01E50884 STR X8, [X25 + 0x10]
	0x01E50888 CBZ X22, 0x1E508DC
	0x01E5088C LDR W8, [X22 + 0x18]
	0x01E50890 CMP X24, X8
	0x01E50894 B.CS 0x1E5118C
	0x01E50898 LDR X8, [X27, X24, LSL #3]
	0x01E5089C STR X8, [X25 + 0x20]
	0x01E508A0 CBZ X21, 0x1E508DC
	0x01E508A4 LDR W8, [X21 + 0x18]
	0x01E508A8 CMP X24, X8
	0x01E508AC B.CS 0x1E5118C
	0x01E508B0 LDRB W8, [X26, X24, LSL]
	0x01E508B4 STRB W8, [X25 + 0x18]
	0x01E508B8 CBZ X23, 0x1E508DC
	0x01E508BC LDR X3, [X29]
	0x01E508C0 MOV X0, X23
	0x01E508C4 MOV W1, W24
	0x01E508C8 MOV X2, X25
	0x01E508CC BL 0x301CEEC
	0x01E508D0 LDR X8, [X20 + 0x138]
	0x01E508D4 ADD X24, X24, 0x1
	0x01E508D8 CBNZ X8, 0x1E50844
	0x01E508DC BL 0x1C16F20
	0x01E508E0 ADRP X8, 0x22AC000
	0x01E508E4 LDR X8, [X8 + 0x2E8]
	0x01E508E8 LDR X0, [X8]
	0x01E508EC BL 0x1C16F10
	0x01E508F0 ADRP X8, 0x22AC000
	0x01E508F4 LDR X8, [X8 + 0x2E0]
	0x01E508F8 MOV X21, X0
	0x01E508FC LDR X1, [X8]
	0x01E50900 BL 0x301B7C4
	0x01E50904 MOVZ W1, 0xDE
	0x01E50908 MOV X0, X19

ISIL:
	001 NotImplemented "Instruction CMP not yet implemented."
	002 NotImplemented "Instruction CMP not yet implemented."
	003 Compare W2, 0
	004 JumpIfNotEqual {35}
	005 Add W8, W1, 39
	006 And W9, W8, 255
	007 NotImplemented "Instruction CMP not yet implemented."
	008 Move W9, 0x7F37
	009 NotImplemented "Instruction LSRV not yet implemented."
	010 And W0, W8, 1
	011 Return X0
	012 And W8, W1, 255
	013 NotImplemented "Instruction CMP not yet implemented."
	014 Move W0, 1
	015 NotImplemented "Instruction CMP not yet implemented."
	016 And W8, W1, 254
	017 NotImplemented "Instruction CMP not yet implemented."
	018 Move W0, 1
	019 Return X0
	020 And W9, W1, 255
	021 NotImplemented "Instruction CMP not yet implemented."
	022 And W8, W1, 254
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Move W0, 1
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Return X0
	027 Subtract W9, W9, 251
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Move W0, 1
	030 And W9, W1, 255
	031 NotImplemented "Instruction CMP not yet implemented."
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move W0, W31
	034 Return X0
	035 Move [X31-32], X30
	036 Move [X31+16], X20
	037 Move [X31+24], X19
	038 Move [X31+12], W2
	039 Move X0, 0x22AD000
	040 Move X0, [X0+72]
	041 Call 0x1C17D08
	042 Add X1, X31, 12
	043 Call 0x1C17E04
	044 Move X19, X0
	045 Move X0, 0x22AC000
	046 Move X0, [X0+1888]
	047 Call 0x1C17D08
	048 Call 0x1C17F10
	049 Move X20, X0
	050 Move X0, 0x22AD000
	051 Move X0, [X0+672]
	052 Call 0x1C17D08
	053 Move X1, X0
	054 Move X0, X20
	055 Move X2, X19
	056 Move X3, X31
	057 Move X4, X31
	058 Call ArgumentOutOfRangeException..ctor, X0, X1, X2, X3
	059 Move X0, 0x22AD000
	060 Move X0, [X0+680]
	061 Call 0x1C17D08
	062 Move X1, X0
	063 Move X0, X20
	064 Call 0x1C17DEC

Method: System.Boolean CheckIfOpCanBeSent(System.Byte opCode, Fusion.Photon.Realtime.ServerConnection serverConnection, System.String opName)

Disassembly:
	0x01E4DB70 STP X22, X21, [X31 + 0x10]
	0x01E4DB74 STP X20, X19, [X31 + 0x20]
	0x01E4DB78 ADRP X23, 0x258C000
	0x01E4DB7C ADRP X22, 0x22AF000
	0x01E4DB80 LDRB W8, [X23 + 0x6]
	0x01E4DB84 LDR X22, [X22 + 0x1A0]
	0x01E4DB88 MOV W19, W2
	0x01E4DB8C MOV W20, W1
	0x01E4DB90 MOV X21, X0
	0x01E4DB94 TBNZ X8, 0x0, 0x1E4DBB8
	0x01E4DB98 ADRP X0, 0x22A8000
	0x01E4DB9C LDR X0, [X0 + 0x278]
	0x01E4DBA0 BL 0x1C16CF4
	0x01E4DBA4 ADRP X0, 0x22AF000
	0x01E4DBA8 LDR X0, [X0 + 0x1A0]
	0x01E4DBAC BL 0x1C16CF4
	0x01E4DBB0 MOVZ W8, 0x1
	0x01E4DBB4 STRB W8, [X23 + 0x6]
	0x01E4DBB8 LDR W2, [X21 + 0x80]
	0x01E4DBBC LDR X3, [X22]
	0x01E4DBC0 MOVZ W1, 0xFE
	0x01E4DBC4 MOV X0, X21
	0x01E4DBC8 BL 0x1E4CB70
	0x01E4DBCC TBZ X0, 0x0, 0x1E4DC48
	0x01E4DBD0 LDR W1, [X21 + 0x90]
	0x01E4DBD4 CMP W1, 0xA
	0x01E4DBD8 B.EQ 0x1E4DC00
	0x01E4DBDC LDR X8, [X21 + 0x98]
	0x01E4DBE0 MOVZ W9, 0xA
	0x01E4DBE4 STR W9, [X21 + 0x90]
	0x01E4DBE8 CBZ X8, 0x1E4DC00
	0x01E4DBEC LDR X9, [X8 + 0x18]
	0x01E4DBF0 LDR X0, [X8 + 0x40]
	0x01E4DBF4 LDR X3, [X8 + 0x28]
	0x01E4DBF8 MOVZ W2, 0xA
	0x01E4DBFC BLR X9
	0x01E4DC00 ADRP X8, 0x22A8000
	0x01E4DC04 LDR X8, [X8 + 0x278]
	0x01E4DC08 LDR X0, [X21 + 0x10]
	0x01E4DC0C LDR X8, [X8]
	0x01E4DC10 LDR X8, [X8 + 0xB8]
	0x01E4DC14 LDR X8, [X8]
	0x01E4DC18 STR X31, [X21 + 0x128]
	0x01E4DC1C STR X8, [X21 + 0x78]
	0x01E4DC20 CBZ X0, 0x1E4DC5C
	0x01E4DC24 LDR X8, [X0]
	0x01E4DC28 AND W1, W20, 0x1
	0x01E4DC2C AND W2, W19, 0x1
	0x01E4DC30 LDP X20, X19, [X31 + 0x20]
	0x01E4DC34 LDR X4, [X8 + 0x2B8]
	0x01E4DC38 LDR X3, [X8 + 0x2C0]
	0x01E4DC3C LDP X22, X21, [X31 + 0x10]
	0x01E4DC40 LDP X30, X23, [X31], #0x30
	0x01E4DC44 BR X4
	0x01E4DC48 LDP X20, X19, [X31 + 0x20]
	0x01E4DC4C LDP X22, X21, [X31 + 0x10]
	0x01E4DC50 MOV W0, W31
	0x01E4DC54 LDP X30, X23, [X31], #0x30
	0x01E4DC58 RET
	0x01E4DC5C BL 0x1C16F20
	0x01E4DC60 STP X30, X23, [X31 - 0x30]!
	0x01E4DC64 STP X22, X21, [X31 + 0x10]
	0x01E4DC68 STP X20, X19, [X31 + 0x20]
	0x01E4DC6C ADRP X23, 0x258C000
	0x01E4DC70 ADRP X22, 0x22AF000
	0x01E4DC74 LDRB W8, [X23 + 0x7]
	0x01E4DC78 LDR X22, [X22 + 0x1A8]
	0x01E4DC7C MOV X20, X2
	0x01E4DC80 MOV X21, X1
	0x01E4DC84 MOV X19, X0
	0x01E4DC88 TBNZ X8, 0x0, 0x1E4DCB8
	0x01E4DC8C ADRP X0, 0x22AF000
	0x01E4DC90 LDR X0, [X0 + 0x1B0]
	0x01E4DC94 BL 0x1C16CF4
	0x01E4DC98 ADRP X0, 0x22AF000
	0x01E4DC9C LDR X0, [X0 + 0x1B8]
	0x01E4DCA0 BL 0x1C16CF4
	0x01E4DCA4 ADRP X0, 0x22AF000
	0x01E4DCA8 LDR X0, [X0 + 0x1A8]
	0x01E4DCAC BL 0x1C16CF4
	0x01E4DCB0 MOVZ W8, 0x1
	0x01E4DCB4 STRB W8, [X23 + 0x7]
	0x01E4DCB8 LDR W2, [X19 + 0x80]
	0x01E4DCBC LDR X3, [X22]
	0x01E4DCC0 MOVZ W1, 0xD9
	0x01E4DCC4 MOV X0, X19
	0x01E4DCC8 BL 0x1E4CB70
	0x01E4DCCC TBZ X0, 0x0, 0x1E4DD50
	0x01E4DCD0 MOV X0, X20
	0x01E4DCD4 MOV X1, X31
	0x01E4DCD8 BL 0x32277A8
	0x01E4DCDC TBZ X0, 0x0, 0x1E4DCF0
	0x01E4DCE0 ADRP X9, 0x22AF000
	0x01E4DCE4 LDR X8, [X19]
	0x01E4DCE8 LDR X9, [X9 + 0x1B0]
	0x01E4DCEC B 0x1E4DD38
	0x01E4DCF0 CBZ X21, 0x1E4DD64
	0x01E4DCF4 LDRB W8, [X21 + 0x18]
	0x01E4DCF8 CMP W8, 0x2
	0x01E4DCFC B.NE 0x1E4DD2C
	0x01E4DD00 LDR X0, [X19 + 0x10]
	0x01E4DD04 CBZ X0, 0x1E4DD64
	0x01E4DD08 LDR X8, [X0]
	0x01E4DD0C MOV X1, X21
	0x01E4DD10 MOV X2, X20
	0x01E4DD14 LDP X20, X19, [X31 + 0x20]
	0x01E4DD18 LDR X4, [X8 + 0x2C8]
	0x01E4DD1C LDR X3, [X8 + 0x2D0]
	0x01E4DD20 LDP X22, X21, [X31 + 0x10]
	0x01E4DD24 LDP X30, X23, [X31], #0x30
	0x01E4DD28 BR X4
	0x01E4DD2C ADRP X9, 0x22AF000
	0x01E4DD30 LDR X8, [X19]
	0x01E4DD34 LDR X9, [X9 + 0x1B8]
	0x01E4DD38 LDR X2, [X9]
	0x01E4DD3C LDR X9, [X8 + 0x218]
	0x01E4DD40 LDR X3, [X8 + 0x220]
	0x01E4DD44 MOVZ W1, 0x1
	0x01E4DD48 MOV X0, X19
	0x01E4DD4C BLR X9
	0x01E4DD50 LDP X20, X19, [X31 + 0x20]
	0x01E4DD54 LDP X22, X21, [X31 + 0x10]
	0x01E4DD58 MOV W0, W31
	0x01E4DD5C LDP X30, X23, [X31], #0x30
	0x01E4DD60 RET
	0x01E4DD64 BL 0x1C16F20
	0x01E4DD68 SUB X31, X31, 0x60
	0x01E4DD6C STP X30, X25, [X31 + 0x20]
	0x01E4DD70 STP X24, X23, [X31 + 0x30]
	0x01E4DD74 STP X22, X21, [X31 + 0x40]
	0x01E4DD78 STP X20, X19, [X31 + 0x50]
	0x01E4DD7C ADRP X24, 0x258C000
	0x01E4DD80 LDRB W8, [X24 + 0x8]
	0x01E4DD84 MOV X22, X4
	0x01E4DD88 MOV X23, X3
	0x01E4DD8C MOV X21, X2
	0x01E4DD90 MOV W20, W1
	0x01E4DD94 MOV X19, X0
	0x01E4DD98 TBNZ X8, 0x0, 0x1E4DDF8
	0x01E4DD9C ADRP X0, 0x22AE000
	0x01E4DDA0 LDR X0, [X0 + 0xE68]
	0x01E4DDA4 BL 0x1C16CF4
	0x01E4DDA8 ADRP X0, 0x22AE000
	0x01E4DDAC LDR X0, [X0 + 0xD60]
	0x01E4DDB0 BL 0x1C16CF4
	0x01E4DDB4 ADRP X0, 0x22AE000
	0x01E4DDB8 LDR X0, [X0 + 0xD98]
	0x01E4DDBC BL 0x1C16CF4
	0x01E4DDC0 ADRP X0, 0x22AE000
	0x01E4DDC4 LDR X0, [X0 + 0xDA0]
	0x01E4DDC8 BL 0x1C16CF4
	0x01E4DDCC ADRP X0, 0x22AF000
	0x01E4DDD0 LDR X0, [X0 + 0x1C0]
	0x01E4DDD4 BL 0x1C16CF4
	0x01E4DDD8 ADRP X0, 0x22AF000
	0x01E4DDDC LDR X0, [X0 + 0x1C8]
	0x01E4DDE0 BL 0x1C16CF4
	0x01E4DDE4 ADRP X0, 0x22AF000
	0x01E4DDE8 LDR X0, [X0 + 0x1D0]
	0x01E4DDEC BL 0x1C16CF4
	0x01E4DDF0 MOVZ W8, 0x1
	0x01E4DDF4 STRB W8, [X24 + 0x8]
	0x01E4DDF8 CBZ X21, 0x1E4DE9C
	0x01E4DDFC ADRP X25, 0x22AE000
	0x01E4DE00 LDR X25, [X25 + 0xD60]
	0x01E4DE04 MOV X0, X21
	0x01E4DE08 LDR X1, [X25]
	0x01E4DE0C BL 0x2AA4E88
	0x01E4DE10 CBZ W0, 0x1E4DE9C
	0x01E4DE14 LDR X8, [X19 + 0x110]
	0x01E4DE18 CBZ X8, 0x1E4DEDC
	0x01E4DE1C ADRP X8, 0x22AE000
	0x01E4DE20 LDR X8, [X8 + 0xDA0]
	0x01E4DE24 LDR X0, [X8]
	0x01E4DE28 BL 0x1C16F10
	0x01E4DE2C MOV X1, X31
	0x01E4DE30 MOV X24, X0
	0x01E4DE34 BL 0x34ED7D8
	0x01E4DE38 ADRP X8, 0x22AE000
	0x01E4DE3C LDR X8, [X8 + 0xD98]
	0x01E4DE40 LDR X0, [X8]
	0x01E4DE44 LDR W8, [X0 + 0xE0]
	0x01E4DE48 CBNZ W8, 0x1E4DE50
	0x01E4DE4C BL 0x1C16DFC
	0x01E4DE50 MOV X0, X24
	0x01E4DE54 MOV X1, X21
	0x01E4DE58 BL 0x1E493F4
	0x01E4DE5C CBZ X24, 0x1E4DF9C
	0x01E4DE60 LDR X1, [X25]
	0x01E4DE64 MOV X0, X24
	0x01E4DE68 BL 0x2AA4E88
	0x01E4DE6C CBZ W0, 0x1E4DF8C
	0x01E4DE70 MOV X0, X19
	0x01E4DE74 MOV W1, W20
	0x01E4DE78 MOV X2, X24
	0x01E4DE7C MOV X3, X23
	0x01E4DE80 MOV X4, X22
	0x01E4DE84 LDP X20, X19, [X31 + 0x50]
	0x01E4DE88 LDP X22, X21, [X31 + 0x40]
	0x01E4DE8C LDP X24, X23, [X31 + 0x30]
	0x01E4DE90 LDP X30, X25, [X31 + 0x20]
	0x01E4DE94 ADD X31, X31, 0x60
	0x01E4DE98 B 0x1E4DFA0
	0x01E4DE9C ADRP X9, 0x22AF000
	0x01E4DEA0 LDR X8, [X19]
	0x01E4DEA4 LDR X9, [X9 + 0x1D0]
	0x01E4DEA8 LDR X2, [X9]
	0x01E4DEAC LDR X9, [X8 + 0x218]
	0x01E4DEB0 LDR X3, [X8 + 0x220]
	0x01E4DEB4 MOVZ W1, 0x1
	0x01E4DEB8 MOV X0, X19
	0x01E4DEBC BLR X9
	0x01E4DEC0 LDP X20, X19, [X31 + 0x50]
	0x01E4DEC4 LDP X22, X21, [X31 + 0x40]
	0x01E4DEC8 LDP X24, X23, [X31 + 0x30]
	0x01E4DECC LDP X30, X25, [X31 + 0x20]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+32], X30
	003 Move [X31+48], X24
	004 Move [X31+56], X23
	005 Move [X31+64], X22
	006 Move [X31+72], X21
	007 Move [X31+80], X20
	008 Move [X31+88], X19
	009 Move X23, 0x258D000
	010 Move W8, [X23+22]
	011 Move X20, X3
	012 Move W22, W2
	013 Move W21, W1
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {54}
	019 Move X0, 0x22A8000
	020 Move X0, [X0+2520]
	021 Call 0x1C17CF4
	022 Move X0, 0x22B0000
	023 Move X0, [X0+216]
	024 Call 0x1C17CF4
	025 Move X0, 0x22AF000
	026 Move X0, [X0+3688]
	027 Call 0x1C17CF4
	028 Move X0, 0x22A7000
	029 Move X0, [X0+3576]
	030 Call 0x1C17CF4
	031 Move X0, 0x22AF000
	032 Move X0, [X0+3392]
	033 Call 0x1C17CF4
	034 Move X0, 0x22B0000
	035 Move X0, [X0+72]
	036 Call 0x1C17CF4
	037 Move X0, 0x22A7000
	038 Move X0, [X0+1728]
	039 Call 0x1C17CF4
	040 Move X0, 0x22B0000
	041 Move X0, [X0+224]
	042 Call 0x1C17CF4
	043 Move X0, 0x22B0000
	044 Move X0, [X0+232]
	045 Call 0x1C17CF4
	046 Move X0, 0x22B0000
	047 Move X0, [X0+240]
	048 Call 0x1C17CF4
	049 Move X0, 0x22B0000
	050 Move X0, [X0+248]
	051 Call 0x1C17CF4
	052 Move W8, 1
	053 Move [X23+22], W8
	054 Move X8, [X19+16]
	055 Compare X8, 0
	056 JumpIfEqual {79}
	057 Move W1, W21
	058 Move W2, W22
	059 Call LoadBalancingClient.CheckIfOpAllowedOnServer, X0, X1, X2
	060 Move TEMP, X0
	061 And TEMP, TEMP, 1
	062 Compare TEMP, 1
	063 JumpIfNotEqual {93}
	064 Move X0, X19
	065 Move W1, W21
	066 Call LoadBalancingClient.CheckIfClientIsReadyToCallOperation, X0, X1
	067 Move TEMP, X0
	068 And TEMP, TEMP, 1
	069 Compare TEMP, 1
	070 JumpIfNotEqual {114}
	071 Move X0, [X19+16]
	072 Compare X0, 0
	073 JumpIfEqual {232}
	074 Move X1, X31
	075 Call PhotonPeer.get_PeerState, X0
	076 And W8, W0, 255
	077 NotImplemented "Instruction CMP not yet implemented."
	078 Move W0, 1
	079 Move X8, 0x22A8000
	080 Move X8, [X8+2520]
	081 Add X1, X31, 44
	082 Move [X31+44], W21
	083 Move X0, [X8]
	084 Call 0x1C17E04
	085 Move X8, 0x22B0000
	086 Move X8, [X8+248]
	087 Move X2, X0
	088 Move X1, X20
	089 Move X3, X31
	090 Move X8, [X8]
	091 Move X0, X8
	092 Call String.Format, X0, X1, X2
	093 Move X8, [X19+16]
	094 Compare X8, 0
	095 JumpIfEqual {232}
	096 Move W8, [X8+64]
	097 Compare W8, 0
	098 JumpIfEqual {222}
	099 Move X8, 0x22A8000
	100 Move X8, [X8+2520]
	101 Add X1, X31, 40
	102 Move [X31+40], W21
	103 Move X0, [X8]
	104 Call 0x1C17E04
	105 Move X8, 0x22B0000
	106 Move X8, [X8+72]
	107 Move X21, X0
	108 Add X1, X31, 28
	109 Move [X31+28], W22
	110 Move X0, [X8]
	111 Call 0x1C17E04
	112 Move X8, 0x22B0000
	113 Move X8, [X8+232]
	114 And W8, W21, 255
	115 NotImplemented "Instruction CMP not yet implemented."
	116 Move W8, [X19+144]
	117 Subtract W8, W8, 10
	118 NotImplemented "Instruction CMP not yet implemented."
	119 Move W9, 771
	120 Move W8, W8
	121 ShiftRight W8, 29
	122 And W8, W8, 0xFFFFFFF
	123 NotImplemented "Instruction MOVK not yet implemented."
	124 NotImplemented "Instruction LSRV not yet implemented."
	125 Move W22, 1
	126 Move X8, [X19+16]
	127 Compare X8, 0
	128 JumpIfEqual {232}
	129 Move W8, [X8+64]
	130 NotImplemented "Instruction CMP not yet implemented."
	131 Move X8, 0x22A8000
	132 Move X8, [X8+2520]
	133 Add X1, X31, 24
	134 Move [X31+24], W21
	135 Move X0, [X8]
	136 Call 0x1C17E04
	137 Move X8, 0x22A7000
	138 Move X8, [X8+1728]
	139 Move X9, 0x22B0000
	140 Move X21, X0
	141 Move X8, [X8]
	142 Move X9, [X9+216]
	143 Move W10, [X8+224]
	144 Move X23, [X9]
	145 Compare W10, 0
	146 JumpIfNotEqual {149}
	147 Move X0, X8
	148 Call 0x1C17DFC
	149 Move X0, X23
	150 Move X1, X31
	151 Call Type.GetTypeFromHandle, X0
	152 Move X9, 0x22AF000
	153 Move W8, [X19+144]
	154 Move X9, [X9+3688]
	155 Move X23, X0
	156 Add X1, X31, 20
	157 Move [X31+20], W8
	158 Move X0, [X9]
	159 Call 0x1C17E04
	160 Move X8, 0x22A7000
	161 Move X8, [X8+3576]
	162 Move X24, X0
	163 Move X8, [X8]
	164 Move W9, [X8+224]
	165 Compare W9, 0
	166 JumpIfNotEqual {169}
	167 Move X0, X8
	168 Call 0x1C17DFC
	169 Move X0, X23
	170 Move X1, X24
	171 Move X2, X31
	172 Call Enum.GetName, X0, X1
	173 Move X8, 0x22B0000
	174 Move X8, [X8+240]
	175 Move X3, X0
	176 Move X1, X20
	177 Move X2, X21
	178 Move X8, [X8]
	179 Move X4, X31
	180 Move X0, X8
	181 Call String.Format, X0, X1, X2, X3
	182 Move X8, [X19]
	183 Move X2, X0
	184 Move X0, X19
	185 Move W1, W22
	186 Move X8, 0x22A8000
	187 Move X8, [X8+2520]
	188 Add X1, X31, 16
	189 Move [X31+16], W21
	190 Move X0, [X8]
	191 Call 0x1C17E04
	192 Move X8, [X19+16]
	193 Compare X8, 0
	194 JumpIfEqual {232}
	195 Move X21, X0
	196 Move X0, X8
	197 Move X1, X31
	198 Call PhotonPeer.get_PeerState, X0
	199 Move X8, 0x22AF000
	200 Move X8, [X8+3392]
	201 Move [X31+12], W0
	202 Add X1, X31, 12
	203 Move X8, [X8]
	204 Move X0, X8
	205 Call 0x1C17E04
	206 Move X8, 0x22B0000
	207 Move X8, [X8+224]
	208 Move X8, [X8]
	209 Move X3, X0
	210 Move X1, X20
	211 Move X2, X21
	212 Move X0, X8
	213 Move X4, X31
	214 Call String.Format, X0, X1, X2, X3
	215 Move X8, [X19]
	216 Move X2, X0
	217 Move W1, 1
	218 Move X0, X19
	219 Move X9, [X8+536]
	220 Move X3, [X8+544]
	221 NotImplemented "Instruction BLR not yet implemented."
	222 Move W0, W31
	223 Move X20, [X31+80]
	224 Move X19, [X31+88]
	225 Move X22, [X31+64]
	226 Move X21, [X31+72]
	227 Move X24, [X31+48]
	228 Move X23, [X31+56]
	229 Move X30, [X31+32]
	230 Add X31, X31, 96
	231 Return X0
	232 Call 0x1C17F20

Method: System.Boolean CheckIfClientIsReadyToCallOperation(System.Byte opCode)

Disassembly:
	0x01E5090C MOV X2, X31
	0x01E50910 BL 0x3505754
	0x01E50914 CBZ X0, 0x1E508DC
	0x01E50918 ADRP X9, 0x22AB000
	0x01E5091C LDR X9, [X9 + 0xDA0]
	0x01E50920 LDR X8, [X0]
	0x01E50924 MOV X22, X0
	0x01E50928 LDR X1, [X9]
	0x01E5092C LDRB W10, [X8 + 0x130]
	0x01E50930 LDRB W9, [X1 + 0x130]
	0x01E50934 CMP W10, W9
	0x01E50938 B.CC 0x1E511B0
	0x01E5093C LDR X8, [X8 + 0xC8]
	0x01E50940 ADD X8, X8, X9, 0x3, LSL
	0x01E50944 LDUR X8, [X8 - 0x8]
	0x01E50948 CMP X8, X1
	0x01E5094C B.NE 0x1E511B0
	0x01E50950 ADRP X8, 0x22AC000
	0x01E50954 LDR X8, [X8 + 0x238]
	0x01E50958 MOV X0, X22
	0x01E5095C LDR X1, [X8]
	0x01E50960 BL 0x2AA4E98
	0x01E50964 CBZ X0, 0x1E508DC
	0x01E50968 ADRP X8, 0x22AC000
	0x01E5096C LDR X8, [X8 + 0x258]
	0x01E50970 LDR X1, [X8]
	0x01E50974 ADD X8, X31, 0x8
	0x01E50978 BL 0x2EC7020
	0x01E5097C LDUR V0, [X31 + 0x8]
	0x01E50980 LDR X8, [X31 + 0x18]
	0x01E50984 ADRP X27, 0x22AC000
	0x01E50988 ADRP X28, 0x22A5000
	0x01E5098C ADRP X29, 0x22AC000
	0x01E50990 LDR X27, [X27 + 0x248]
	0x01E50994 LDR X28, [X28 + 0x278]
	0x01E50998 LDR X29, [X29 + 0x310]
	0x01E5099C STR V0, [X31 + 0x2]
	0x01E509A0 STR X8, [X31 + 0x30]
	0x01E509A4 ADRP X26, 0x22AC000
	0x01E509A8 LDR X26, [X26 + 0x2C8]
	0x01E509AC LDR X1, [X27]
	0x01E509B0 ADD X0, X31, 0x20
	0x01E509B4 BL 0x2C0B090
	0x01E509B8 TBZ X0, 0x0, 0x1E50A9C
	0x01E509BC LDR X24, [X31 + 0x30]
	0x01E509C0 CBZ X24, 0x1E509D4
	0x01E509C4 LDR X1, [X28]
	0x01E509C8 LDR X8, [X24]
	0x01E509CC CMP X8, X1
	0x01E509D0 B.NE 0x1E511A0
	0x01E509D4 MOV X0, X22
	0x01E509D8 MOV X1, X24
	0x01E509DC MOV X2, X31
	0x01E509E0 BL 0x34ED878
	0x01E509E4 MOV X25, X0
	0x01E509E8 LDR X0, [X29]
	0x01E509EC BL 0x1C16F10
	0x01E509F0 MOV X23, X0
	0x01E509F4 CBZ X25, 0x1E50A2C
	0x01E509F8 ADRP X9, 0x22AB000
	0x01E509FC LDR X8, [X25]
	0x01E50A00 LDR X9, [X9 + 0xDA0]
	0x01E50A04 LDRB W10, [X8 + 0x130]
	0x01E50A08 LDR X1, [X9]
	0x01E50A0C LDRB W9, [X1 + 0x130]
	0x01E50A10 CMP W10, W9
	0x01E50A14 B.CC 0x1E51190
	0x01E50A18 LDR X8, [X8 + 0xC8]
	0x01E50A1C ADD X8, X8, X9, 0x3, LSL

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 And W8, W1, 255
	004 Subtract W9, W8, 217
	005 NotImplemented "Instruction CMP not yet implemented."
	006 Move X19, X0
	007 Move X8, -20062208
	008 Add X8, X8, 2690
	009 NotImplemented "Instruction ADR not yet implemented."
	010 Move W11, [X8]
	011 Add X10, X10, X11
	012 CallNoReturn X10
	013 Move W8, [X19+144]
	014 NotImplemented "Instruction CMP not yet implemented."
	015 NotImplemented "Instruction CSET not yet implemented."
	016 NotImplemented "Instruction CMP not yet implemented."
	017 NotImplemented "Instruction CSET not yet implemented."
	018 Or W0, W9, W8
	019 Move W8, [X19+144]
	020 NotImplemented "Instruction CMP not yet implemented."
	021 NotImplemented "Instruction CMP not yet implemented."
	022 NotImplemented "Instruction CSET not yet implemented."
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Move X0, X19
	025 Call LoadBalancingClient.get_IsConnectedAndReady, X0
	026 Move TEMP, X0
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {32}
	030 Move W8, [X19+144]
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move W0, 1
	033 Move W8, [X19+144]
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Move W8, [X19+144]
	036 NotImplemented "Instruction CMP not yet implemented."
	037 NotImplemented "Instruction CSET not yet implemented."
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Subtract W8, W8, 251
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Move X8, [X19+16]
	042 Compare X8, 0
	043 JumpIfEqual {58}
	044 Move W8, [X19+144]
	045 NotImplemented "Instruction CMP not yet implemented."
	046 NotImplemented "Instruction CSET not yet implemented."
	047 NotImplemented "Instruction CMP not yet implemented."
	048 NotImplemented "Instruction CSET not yet implemented."
	049 And W0, W9, W8
	050 NotImplemented "Instruction CMP not yet implemented."
	051 NotImplemented "Instruction CSET not yet implemented."
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Move W8, [X19+144]
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Move X8, [X19+272]
	056 NotImplemented "Instruction CMP not yet implemented."
	057 NotImplemented "Instruction CSET not yet implemented."
	058 Move W0, W31
	059 Move X30, [X31+16]
	060 Move X19, [X31+24]
	061 Return X0

Method: System.Void DebugReturn(ExitGames.Client.Photon.DebugLevel level, System.String message)

Disassembly:
	0x01E50A20 LDUR X8, [X8 - 0x8]
	0x01E50A24 CMP X8, X1
	0x01E50A28 B.NE 0x1E51190
	0x01E50A2C MOV X0, X23
	0x01E50A30 MOV X1, X24
	0x01E50A34 MOV X2, X25

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+16]
	003 Compare X8, 0
	004 JumpIfEqual {7}
	005 Move X30, [X31+16]
	006 Return 
	007 Call 0x1C17F20

Method: System.Void CallbackRoomEnterFailed(ExitGames.Client.Photon.OperationResponse operationResponse)

Disassembly:
	0x01E50A38 MOV X3, X31
	0x01E50A3C BL 0x1E5EC7C
	0x01E50A40 CBZ X21, 0x1E51198
	0x01E50A44 LDR W10, [X21 + 0x1C]
	0x01E50A48 LDR X8, [X21 + 0x10]
	0x01E50A4C LDR X9, [X26]
	0x01E50A50 ADD W10, W10, 0x1
	0x01E50A54 STR W10, [X21 + 0x1C]
	0x01E50A58 CBZ X8, 0x1E5119C
	0x01E50A5C LDRSW X10, [X21 + 0x18]
	0x01E50A60 LDR W11, [X8 + 0x18]
	0x01E50A64 CMP W10, W11
	0x01E50A68 B.CS 0x1E50A80
	0x01E50A6C ADD W9, W10, 0x1
	0x01E50A70 ADD X8, X8, X10, 0x3, LSL
	0x01E50A74 STR W9, [X21 + 0x18]
	0x01E50A78 STR X23, [X8 + 0x20]
	0x01E50A7C B 0x1E509AC
	0x01E50A80 LDR X8, [X9 + 0x20]
	0x01E50A84 LDR X8, [X8 + 0xC0]
	0x01E50A88 LDR X2, [X8 + 0x70]
	0x01E50A8C MOV X0, X21
	0x01E50A90 MOV X1, X23
	0x01E50A94 BL 0x301BF90
	0x01E50A98 B 0x1E509AC
	0x01E50A9C ADRP X8, 0x22AC000
	0x01E50AA0 LDR X8, [X8 + 0x240]
	0x01E50AA4 ADD X0, X31, 0x20
	0x01E50AA8 LDR X1, [X8]
	0x01E50AAC BL 0x2C0B08C

ISIL:
	001 Move [X31-16], X30
	002 Compare X1, 0
	003 JumpIfEqual {33}
	004 Move X8, X1
	005 NotImplemented "Instruction LDRH not yet implemented."
	006 Compare W1, 0
	007 JumpIfEqual {17}
	008 Move W9, [X8+16]
	009 NotImplemented "Instruction CMP not yet implemented."
	010 NotImplemented "Instruction CMP not yet implemented."
	011 NotImplemented "Instruction CMP not yet implemented."
	012 Move X0, [X0+184]
	013 Compare X0, 0
	014 JumpIfEqual {33}
	015 Move X2, [X8+24]
	016 Move X30, [X31+16]
	017 Move X30, [X31+16]
	018 Return 
	019 Move X0, [X0+184]
	020 Compare X0, 0
	021 JumpIfEqual {33}
	022 Move X2, [X8+24]
	023 Move X30, [X31+16]
	024 Call MatchMakingCallbacksContainer.OnJoinRandomFailed, X0, X1, X2
	025 Return 
	026 Move X0, [X0+184]
	027 Compare X0, 0
	028 JumpIfEqual {33}
	029 Move X2, [X8+24]
	030 Move X30, [X31+16]
	031 Call MatchMakingCallbacksContainer.OnCreateRoomFailed, X0, X1, X2
	032 Return 
	033 Call 0x1C17F20

Method: System.Void OnOperationResponse(ExitGames.Client.Photon.OperationResponse operationResponse)

Disassembly:
	0x01E51014 ADRP X8, 0x22A4000
	0x01E51018 LDR X8, [X8 + 0x278]
	0x01E5101C LDR X9, [X0]
	0x01E51020 LDR X8, [X8]
	0x01E51024 CMP X9, X8
	0x01E51028 CSEL X21, X0, X31, EQ
	0x01E5102C B 0x1E51034
	0x01E51030 MOV X21, X31
	0x01E51034 LDRH W22, [X20 + 0x64]
	0x01E51038 STR X21, [X20 + 0x70]
	0x01E5103C CBZ W22, 0x1E51068
	0x01E51040 ADRP X8, 0x22AA000
	0x01E51044 LDR X8, [X8 + 0xB28]
	0x01E51048 LDR X0, [X8]
	0x01E5104C LDR W8, [X0 + 0xE0]
	0x01E51050 CBNZ W8, 0x1E51058
	0x01E51054 BL 0x1C16DFC
	0x01E51058 MOV X0, X21
	0x01E5105C MOV W1, W22
	0x01E51060 BL 0x1E5159C
	0x01E51064 STR X0, [X20 + 0x70]
	0x01E51068 LDR W8, [X20 + 0x38]
	0x01E5106C CMP W8, 0x2
	0x01E51070 B.NE 0x1E51104
	0x01E51074 LDRH W8, [X20 + 0x40]
	0x01E51078 ANDS W31, W8, 0xFF
	0x01E5107C STRH W8, [X31 + 0x3C]
	0x01E51080 B.EQ 0x1E51104
	0x01E51084 ADRP X9, 0x22AB000
	0x01E51088 LDR X9, [X9 + 0x300]
	0x01E5108C ADD X1, X31, 0x8
	0x01E51090 STRH W8, [X31 + 0x8]
	0x01E51094 LDR X0, [X9]
	0x01E51098 BL 0x1C16E04
	0x01E5109C ADRP X8, 0x22AB000
	0x01E510A0 LDR X8, [X8 + 0x348]
	0x01E510A4 MOV X1, X0
	0x01E510A8 MOV X2, X31
	0x01E510AC LDR X8, [X8]
	0x01E510B0 MOV X0, X8
	0x01E510B4 BL 0x321EFD0
	0x01E510B8 LDR X8, [X20]
	0x01E510BC MOV X2, X0
	0x01E510C0 MOVZ W1, 0x3
	0x01E510C4 MOV X0, X20
	0x01E510C8 LDR X9, [X8 + 0x218]
	0x01E510CC LDR X3, [X8 + 0x220]
	0x01E510D0 BLR X9
	0x01E510D4 ADRP X9, 0x22AB000
	0x01E510D8 LDR X21, [X20 + 0x10]
	0x01E510DC LDRH W8, [X20 + 0x40]
	0x01E510E0 LDR X9, [X9 + 0x40]
	0x01E510E4 ADD X0, X31, 0x3C
	0x01E510E8 STRH W8, [X31 + 0x3C]
	0x01E510EC LDR X1, [X9]
	0x01E510F0 BL 0x242DFB0
	0x01E510F4 CBZ X21, 0x1E508DC
	0x01E510F8 STRB W0, [X21 + 0x84]
	0x01E510FC STRH W31, [X31 + 0x3C]
	0x01E51100 STRH W31, [X20 + 0x40]
	0x01E51104 MOV X0, X20
	0x01E51108 BL 0x1E4C990
	0x01E5110C MOVZ W1, 0xF5
	0x01E51110 MOV X0, X19
	0x01E51114 MOV X2, X31
	0x01E51118 BL 0x3505754
	0x01E5111C CBZ X0, 0x1E50BCC
	0x01E51120 ADRP X10, 0x22A2000
	0x01E51124 LDR X10, [X10 + 0x720]
	0x01E51128 LDR X9, [X0]
	0x01E5112C MOV X8, X0
	0x01E51130 LDR X1, [X10]
	0x01E51134 LDRB W11, [X9 + 0x130]
	0x01E51138 LDRB W10, [X1 + 0x130]
	0x01E5113C CMP W11, W10
	0x01E51140 B.CC 0x1E511A8
	0x01E51144 LDR X9, [X9 + 0xC8]
	0x01E51148 ADD X9, X9, X10, 0x3, LSL
	0x01E5114C LDUR X9, [X9 - 0x8]
	0x01E51150 CMP X9, X1
	0x01E51154 B.NE 0x1E511A8
	0x01E51158 LDR X0, [X20 + 0xB0]
	0x01E5115C CBZ X0, 0x1E508DC
	0x01E51160 MOV X1, X8
	0x01E51164 BL 0x1E518C0
	0x01E51168 B 0x1E50BCC
	0x01E5116C CBNZ W8, 0x1E50BCC
	0x01E51170 LDR X0, [X20 + 0x10]
	0x01E51174 CBZ X0, 0x1E508DC
	0x01E51178 LDR X8, [X0]
	0x01E5117C LDR X9, [X8 + 0x278]
	0x01E51180 LDR X2, [X8 + 0x280]
	0x01E51184 BLR X9
	0x01E51188 B 0x1E50BCC
	0x01E5118C BL 0x1C16F28
	0x01E51190 MOV X0, X25
	0x01E51194 BL 0x1C171E0
	0x01E51198 BL 0x1C16F20
	0x01E5119C BL 0x1C16F20
	0x01E511A0 MOV X0, X24
	0x01E511A4 BL 0x1C171E0
	0x01E511A8 MOV X0, X8
	0x01E511AC BL 0x1C171E0
	0x01E511B0 MOV X0, X22
	0x01E511B4 BL 0x1C171E0
	0x01E511B8 MOV X0, X21
	0x01E511BC BL 0x1C171E0
	0x01E511C0 B 0x1E511D0
	0x01E511C4 B 0x1E511D0
	0x01E511C8 B 0x1E511D0
	0x01E511CC B 0x1E511D0
	0x01E511D0 MOV X22, X0
	0x01E511D4 CMP W1, 0x1
	0x01E511D8 B.NE 0x1E5120C
	0x01E511DC MOV X0, X22
	0x01E511E0 BL 0x3EB1AD0
	0x01E511E4 LDR X23, [X0]
	0x01E511E8 BL 0x3EB1AE0
	0x01E511EC ADRP X8, 0x22AB000
	0x01E511F0 LDR X8, [X8 + 0x240]
	0x01E511F4 ADD X0, X31, 0x20
	0x01E511F8 LDR X1, [X8]
	0x01E511FC BL 0x2C0B08C
	0x01E51200 CBZ X23, 0x1E50AB0
	0x01E51204 MOV X0, X23
	0x01E51208 BL 0x1C16F18
	0x01E5120C MOV X23, X31
	0x01E51210 B 0x1E51218
	0x01E51214 MOV X22, X0
	0x01E51218 ADRP X8, 0x22AB000
	0x01E5121C LDR X8, [X8 + 0x240]
	0x01E51220 LDR X1, [X8]
	0x01E51224 ADD X0, X31, 0x20
	0x01E51228 BL 0x2C0B08C
	0x01E5122C CBNZ X23, 0x1E51238
	0x01E51230 MOV X0, X22
	0x01E51234 BL 0x1D2C690
	0x01E51238 MOV X0, X23
	0x01E5123C BL 0x1C16F18
	0x01E51240 BL 0x1990590
	0x01E51244 SUB X31, X31, 0x60
	0x01E51248 STR X30, [X31 + 0x20]
	0x01E5124C STP X24, X23, [X31 + 0x30]
	0x01E51250 STP X22, X21, [X31 + 0x40]
	0x01E51254 STP X20, X19, [X31 + 0x50]
	0x01E51258 ADRP X21, 0x2588000
	0x01E5125C LDRB W8, [X21 + 0x29]
	0x01E51260 MOV X19, X1
	0x01E51264 MOV X20, X0
	0x01E51268 TBNZ X8, 0x0, 0x1E512B0
	0x01E5126C ADRP X0, 0x22AB000
	0x01E51270 LDR X0, [X0 + 0x368]
	0x01E51274 BL 0x1C16CF4
	0x01E51278 ADRP X0, 0x22AB000
	0x01E5127C LDR X0, [X0 + 0x370]
	0x01E51280 BL 0x1C16CF4
	0x01E51284 ADRP X0, 0x22AB000
	0x01E51288 LDR X0, [X0 + 0x378]
	0x01E5128C BL 0x1C16CF4
	0x01E51290 ADRP X0, 0x22AB000
	0x01E51294 LDR X0, [X0 + 0x380]
	0x01E51298 BL 0x1C16CF4
	0x01E5129C ADRP X0, 0x22AB000
	0x01E512A0 LDR X0, [X0 + 0x388]
	0x01E512A4 BL 0x1C16CF4
	0x01E512A8 MOVZ W8, 0x1
	0x01E512AC STRB W8, [X21 + 0x29]
	0x01E512B0 STP X31, X31, [X31 + 0x8]
	0x01E512B4 STR X31, [X31 + 0x18]
	0x01E512B8 LDR X0, [X20 + 0x28]
	0x01E512BC CBZ X0, 0x1E51398
	0x01E512C0 ADRP X24, 0x22AB000
	0x01E512C4 ADRP X22, 0x22AB000
	0x01E512C8 ADRP X23, 0x22AB000
	0x01E512CC ADRP X21, 0x22AB000
	0x01E512D0 LDR X24, [X24 + 0x388]
	0x01E512D4 LDR X22, [X22 + 0x370]
	0x01E512D8 LDR X23, [X23 + 0x380]
	0x01E512DC LDR X21, [X21 + 0x368]
	0x01E512E0 BL 0x1E54C74
	0x01E512E4 LDR X1, [X24]
	0x01E512E8 ADD X8, X31, 0x8
	0x01E512EC MOV X0, X20
	0x01E512F0 BL 0x301CB58
	0x01E512F4 LDR X1, [X22]
	0x01E512F8 ADD X0, X31, 0x8
	0x01E512FC BL 0x2BC4350
	0x01E51300 TBZ X0, 0x0, 0x1E51370
	0x01E51304 LDR X20, [X31 + 0x18]
	0x01E51308 CBZ X20, 0x1E51394
	0x01E5130C LDR X8, [X20]
	0x01E51310 LDR X1, [X23]
	0x01E51314 LDRH W9, [X8 + 0x12E]
	0x01E51318 CBZ X9, 0x1E5133C
	0x01E5131C LDR X10, [X8 + 0xB0]
	0x01E51320 ADD X10, X10, 0x8
	0x01E51324 LDUR X11, [X10 - 0x8]
	0x01E51328 CMP X11, X1
	0x01E5132C B.EQ 0x1E5134C
	0x01E51330 SUBS X9, X9, 0x1
	0x01E51334 ADD X10, X10, 0x10
	0x01E51338 B.NE 0x1E51324
	0x01E5133C MOVZ W2, 0x5
	0x01E51340 MOV X0, X20
	0x01E51344 BL 0x1C5C788
	0x01E51348 B 0x1E5135C
	0x01E5134C LDR W9, [X10]
	0x01E51350 ADD W9, W9, 0x5
	0x01E51354 ADD X8, X8, W9, 0x4, SXTW
	0x01E51358 ADD X0, X8, 0x138
	0x01E5135C LDP X8, X2, [X0]
	0x01E51360 MOV X0, X20
	0x01E51364 MOV X1, X19
	0x01E51368 BLR X8
	0x01E5136C B 0x1E512F4
	0x01E51370 LDR X1, [X21]
	0x01E51374 ADD X0, X31, 0x8
	0x01E51378 BL 0x2BC434C
	0x01E5137C LDP X20, X19, [X31 + 0x50]
	0x01E51380 LDP X22, X21, [X31 + 0x40]
	0x01E51384 LDP X24, X23, [X31 + 0x30]
	0x01E51388 LDR X30, [X31 + 0x20]
	0x01E5138C ADD X31, X31, 0x60
	0x01E51390 RET
	0x01E51394 BL 0x1C16F20
	0x01E51398 BL 0x1C16F20
	0x01E5139C B 0x1E513A4
	0x01E513A0 B 0x1E513A4
	0x01E513A4 MOV X19, X0
	0x01E513A8 CMP W1, 0x1
	0x01E513AC B.NE 0x1E513D8
	0x01E513B0 MOV X0, X19
	0x01E513B4 BL 0x3EB1AD0
	0x01E513B8 LDR X20, [X0]
	0x01E513BC BL 0x3EB1AE0
	0x01E513C0 LDR X1, [X21]
	0x01E513C4 ADD X0, X31, 0x8
	0x01E513C8 BL 0x2BC434C
	0x01E513CC CBZ X20, 0x1E5137C
	0x01E513D0 MOV X0, X20
	0x01E513D4 BL 0x1C16F18
	0x01E513D8 MOV X20, X31
	0x01E513DC B 0x1E513E4
	0x01E513E0 MOV X19, X0
	0x01E513E4 LDR X1, [X21]
	0x01E513E8 ADD X0, X31, 0x8
	0x01E513EC BL 0x2BC434C
	0x01E513F0 CBNZ X20, 0x1E513FC
	0x01E513F4 MOV X0, X19
	0x01E513F8 BL 0x1D2C690
	0x01E513FC MOV X0, X20
	0x01E51400 BL 0x1C16F18
	0x01E51404 BL 0x1990590
	0x01E51408 STP X30, X21, [X31 - 0x20]!
	0x01E5140C STP X20, X19, [X31 + 0x10]
	0x01E51410 ADRP X21, 0x2588000
	0x01E51414 LDRB W8, [X21 + 0x1D]
	0x01E51418 MOV X20, X1
	0x01E5141C MOV X19, X0
	0x01E51420 TBNZ X8, 0x0, 0x1E51450
	0x01E51424 ADRP X0, 0x22A2000
	0x01E51428 LDR X0, [X0 + 0x618]
	0x01E5142C BL 0x1C16CF4
	0x01E51430 ADRP X0, 0x22A3000
	0x01E51434 LDR X0, [X0 + 0x9D8]
	0x01E51438 BL 0x1C16CF4
	0x01E5143C ADRP X0, 0x22AB000
	0x01E51440 LDR X0, [X0 + 0x390]
	0x01E51444 BL 0x1C16CF4
	0x01E51448 MOVZ W8, 0x1
	0x01E5144C STRB W8, [X21 + 0x1D]
	0x01E51450 CBZ X20, 0x1E51560
	0x01E51454 ADRP X21, 0x22AB000
	0x01E51458 LDR X21, [X21 + 0x390]
	0x01E5145C MOV X0, X20
	0x01E51460 MOV W1, W31
	0x01E51464 LDR X2, [X21]
	0x01E51468 BL 0x29D3494
	0x01E5146C CBZ X0, 0x1E51560
	0x01E51470 ADRP X8, 0x22A3000
	0x01E51474 LDR X8, [X8 + 0x9D8]
	0x01E51478 LDR X9, [X0]
	0x01E5147C LDR X1, [X8]
	0x01E51480 LDR X8, [X9 + 0x40]
	0x01E51484 LDR X9, [X1 + 0x40]
	0x01E51488 CMP X8, X9
	0x01E5148C B.NE 0x1E51564
	0x01E51490 BL 0x1C16E08
	0x01E51494 LDRB W8, [X0]
	0x01E51498 CMP W8, 0xD
	0x01E5149C B.EQ 0x1E514DC
	0x01E514A0 CBNZ W8, 0x1E51568
	0x01E514A4 LDR X2, [X21]
	0x01E514A8 MOVZ W1, 0x1
	0x01E514AC MOV X0, X20
	0x01E514B0 BL 0x29D3494
	0x01E514B4 CBZ X0, 0x1E51544
	0x01E514B8 ADRP X8, 0x22A2000
	0x01E514BC LDR X8, [X8 + 0x618]
	0x01E514C0 MOV X20, X0
	0x01E514C4 LDR X21, [X8]
	0x01E514C8 MOV X1, X21
	0x01E514CC BL 0x1C16E00
	0x01E514D0 MOV X1, X0
	0x01E514D4 CBNZ X0, 0x1E51548
	0x01E514D8 B 0x1E51510
	0x01E514DC LDR X2, [X21]
	0x01E514E0 MOVZ W1, 0x1
	0x01E514E4 MOV X0, X20
	0x01E514E8 BL 0x29D3494
	0x01E514EC CBZ X0, 0x1E5151C
	0x01E514F0 ADRP X8, 0x22A2000
	0x01E514F4 LDR X8, [X8 + 0x618]
	0x01E514F8 MOV X20, X0
	0x01E514FC LDR X21, [X8]
	0x01E51500 MOV X1, X21
	0x01E51504 BL 0x1C16E00
	0x01E51508 MOV X1, X0
	0x01E5150C CBNZ X0, 0x1E51520
	0x01E51510 MOV X0, X20
	0x01E51514 MOV X1, X21
	0x01E51518 BL 0x1C171E0
	0x01E5151C MOV X1, X31
	0x01E51520 LDR X0, [X19 + 0x10]
	0x01E51524 CBZ X0, 0x1E51560
	0x01E51528 LDP X20, X19, [X31 + 0x10]
	0x01E5152C MOVZ W3, 0x1
	0x01E51530 MOVZ W4, 0x1
	0x01E51534 MOV X2, X31
	0x01E51538 MOV X5, X31
	0x01E5153C LDP X30, X21, [X31], #0x20
	0x01E51540 B 0x3503F44
	0x01E51544 MOV X1, X31
	0x01E51548 LDR X0, [X19 + 0x10]
	0x01E5154C CBZ X0, 0x1E51560
	0x01E51550 LDP X20, X19, [X31 + 0x10]
	0x01E51554 MOV X2, X31
	0x01E51558 LDP X30, X21, [X31], #0x20
	0x01E5155C B 0x3504530
	0x01E51560 BL 0x1C16F20
	0x01E51564 BL 0x1C171E0
	0x01E51568 ADRP X0, 0x22AA000
	0x01E5156C LDR X0, [X0 + 0x760]
	0x01E51570 BL 0x1C16D08
	0x01E51574 BL 0x1C16F10
	0x01E51578 MOV X1, X31
	0x01E5157C MOV X19, X0
	0x01E51580 BL 0x3315FB8
	0x01E51584 ADRP X0, 0x22AB000
	0x01E51588 LDR X0, [X0 + 0x398]
	0x01E5158C BL 0x1C16D08
	0x01E51590 MOV X1, X0
	0x01E51594 MOV X0, X19
	0x01E51598 BL 0x1C16DEC
	0x01E5159C SUB X31, X31, 0x30
	0x01E515A0 STP X30, X21, [X31 + 0x10]
	0x01E515A4 STP X20, X19, [X31 + 0x20]
	0x01E515A8 ADRP X21, 0x2588000
	0x01E515AC LDRB W8, [X21 + 0x1C]
	0x01E515B0 MOV W19, W1
	0x01E515B4 MOV X20, X0
	0x01E515B8 TBNZ X8, 0x0, 0x1E51600
	0x01E515BC ADRP X0, 0x22A7000
	0x01E515C0 LDR X0, [X0 + 0x658]
	0x01E515C4 BL 0x1C16CF4
	0x01E515C8 ADRP X0, 0x22AB000
	0x01E515CC LDR X0, [X0 + 0x3A0]
	0x01E515D0 BL 0x1C16CF4
	0x01E515D4 ADRP X0, 0x22AB000
	0x01E515D8 LDR X0, [X0 + 0x3A8]
	0x01E515DC BL 0x1C16CF4
	0x01E515E0 ADRP X0, 0x22AA000
	0x01E515E4 LDR X0, [X0 + 0xFF0]
	0x01E515E8 BL 0x1C16CF4
	0x01E515EC ADRP X0, 0x22AB000
	0x01E515F0 LDR X0, [X0 + 0x3B0]
	0x01E515F4 BL 0x1C16CF4
	0x01E515F8 MOVZ W8, 0x1
	0x01E515FC STRB W8, [X21 + 0x1C]
	0x01E51600 CBZ X20, 0x1E51700
	0x01E51604 ADRP X8, 0x22AB000
	0x01E51608 LDR X8, [X8 + 0x3A8]
	0x01E5160C MOV X0, X20
	0x01E51610 MOV X2, X31
	0x01E51614 LDR X1, [X8]
	0x01E51618 BL 0x3226F64
	0x01E5161C TBZ X0, 0x0, 0x1E51670
	0x01E51620 ADRP X8, 0x22AB000
	0x01E51624 LDR X8, [X8 + 0x3A0]
	0x01E51628 LDR X0, [X8]
	0x01E5162C BL 0x1C16F10
	0x01E51630 MOV X1, X20
	0x01E51634 MOV X2, X31
	0x01E51638 MOV X21, X0
	0x01E5163C BL 0x3627EE0
	0x01E51640 CBZ X21, 0x1E51700
	0x01E51644 AND W1, W19, 0xFFFF
	0x01E51648 MOV X0, X21
	0x01E5164C MOV X2, X31
	0x01E51650 BL 0x3628858
	0x01E51654 LDR X8, [X21]
	0x01E51658 MOV X0, X21
	0x01E5165C LDP X20, X19, [X31 + 0x20]
	0x01E51660 LDP X30, X21, [X31 + 0x10]
	0x01E51664 LDP X2, X1, [X8 + 0x168]
	0x01E51668 ADD X31, X31, 0x30
	0x01E5166C BR X2
	0x01E51670 ADRP X8, 0x22AB000
	0x01E51674 LDR X8, [X8 + 0x3B0]
	0x01E51678 MOV X1, X20
	0x01E5167C MOV X2, X31
	0x01E51680 LDR X0, [X8]
	0x01E51684 BL 0x321EFD0
	0x01E51688 ADRP X8, 0x22AB000
	0x01E5168C LDR X8, [X8 + 0x3A0]
	0x01E51690 MOV X21, X0
	0x01E51694 LDR X8, [X8]
	0x01E51698 MOV X0, X8
	0x01E5169C BL 0x1C16F10
	0x01E516A0 MOV X1, X21
	0x01E516A4 MOV X2, X31
	0x01E516A8 MOV X20, X0
	0x01E516AC BL 0x3627EE0
	0x01E516B0 CBZ X20, 0x1E51700
	0x01E516B4 ADRP X8, 0x22A7000
	0x01E516B8 LDR X20, [X20 + 0x20]
	0x01E516BC LDR X8, [X8 + 0x658]
	0x01E516C0 ADD X1, X31, 0xC
	0x01E516C4 STRH W19, [X31 + 0xC]
	0x01E516C8 LDR X0, [X8]
	0x01E516CC BL 0x1C16E04
	0x01E516D0 ADRP X8, 0x22AA000
	0x01E516D4 LDR X8, [X8 + 0xFF0]
	0x01E516D8 MOV X2, X0
	0x01E516DC MOV X1, X20
	0x01E516E0 MOV X3, X31
	0x01E516E4 LDR X8, [X8]
	0x01E516E8 MOV X0, X8
	0x01E516EC BL 0x3227BD4
	0x01E516F0 LDP X20, X19, [X31 + 0x20]
	0x01E516F4 LDP X30, X21, [X31 + 0x10]
	0x01E516F8 ADD X31, X31, 0x30
	0x01E516FC RET
	0x01E51700 BL 0x1C16F20
	0x01E51704 SUB X31, X31, 0x50
	0x01E51708 STP X30, X23, [X31 + 0x20]
	0x01E5170C STP X22, X21, [X31 + 0x30]
	0x01E51710 STP X20, X19, [X31 + 0x40]
	0x01E51714 ADRP X20, 0x2588000
	0x01E51718 LDRB W8, [X20 + 0x25]
	0x01E5171C MOV X19, X0
	0x01E51720 TBNZ X8, 0x0, 0x1E51768
	0x01E51724 ADRP X0, 0x22AB000
	0x01E51728 LDR X0, [X0 + 0x368]
	0x01E5172C BL 0x1C16CF4
	0x01E51730 ADRP X0, 0x22AB000
	0x01E51734 LDR X0, [X0 + 0x370]
	0x01E51738 BL 0x1C16CF4
	0x01E5173C ADRP X0, 0x22AB000
	0x01E51740 LDR X0, [X0 + 0x378]
	0x01E51744 BL 0x1C16CF4
	0x01E51748 ADRP X0, 0x22AB000
	0x01E5174C LDR X0, [X0 + 0x380]
	0x01E51750 BL 0x1C16CF4
	0x01E51754 ADRP X0, 0x22AB000
	0x01E51758 LDR X0, [X0 + 0x388]
	0x01E5175C BL 0x1C16CF4
	0x01E51760 MOVZ W8, 0x1
	0x01E51764 STRB W8, [X20 + 0x25]
	0x01E51768 STP X31, X31, [X31 + 0x8]
	0x01E5176C STR X31, [X31 + 0x18]
	0x01E51770 LDR X0, [X19 + 0x28]
	0x01E51774 CBZ X0, 0x1E5184C
	0x01E51778 ADRP X23, 0x22AB000
	0x01E5177C ADRP X21, 0x22AB000
	0x01E51780 ADRP X22, 0x22AB000
	0x01E51784 ADRP X20, 0x22AB000
	0x01E51788 LDR X23, [X23 + 0x388]
	0x01E5178C LDR X21, [X21 + 0x370]
	0x01E51790 LDR X22, [X22 + 0x380]
	0x01E51794 LDR X20, [X20 + 0x368]
	0x01E51798 BL 0x1E54C74
	0x01E5179C LDR X1, [X23]
	0x01E517A0 ADD X8, X31, 0x8
	0x01E517A4 MOV X0, X19
	0x01E517A8 BL 0x301CB58
	0x01E517AC LDR X1, [X21]
	0x01E517B0 ADD X0, X31, 0x8
	0x01E517B4 BL 0x2BC4350
	0x01E517B8 TBZ X0, 0x0, 0x1E51824
	0x01E517BC LDR X19, [X31 + 0x18]
	0x01E517C0 CBZ X19, 0x1E51844
	0x01E517C4 LDR X8, [X19]
	0x01E517C8 LDR X1, [X22]
	0x01E517CC LDRH W9, [X8 + 0x12E]
	0x01E517D0 CBZ X9, 0x1E517F4
	0x01E517D4 LDR X10, [X8 + 0xB0]
	0x01E517D8 ADD X10, X10, 0x8
	0x01E517DC LDUR X11, [X10 - 0x8]
	0x01E517E0 CMP X11, X1
	0x01E517E4 B.EQ 0x1E51804
	0x01E517E8 SUBS X9, X9, 0x1
	0x01E517EC ADD X10, X10, 0x10
	0x01E517F0 B.NE 0x1E517DC
	0x01E517F4 MOVZ W2, 0x1
	0x01E517F8 MOV X0, X19
	0x01E517FC BL 0x1C5C788
	0x01E51800 B 0x1E51814
	0x01E51804 LDR W9, [X10]
	0x01E51808 ADD W9, W9, 0x1
	0x01E5180C ADD X8, X8, W9, 0x4, SXTW
	0x01E51810 ADD X0, X8, 0x138
	0x01E51814 LDP X8, X1, [X0]
	0x01E51818 MOV X0, X19
	0x01E5181C BLR X8
	0x01E51820 B 0x1E517AC
	0x01E51824 LDR X1, [X20]
	0x01E51828 ADD X0, X31, 0x8
	0x01E5182C BL 0x2BC434C
	0x01E51830 LDP X20, X19, [X31 + 0x40]
	0x01E51834 LDP X22, X21, [X31 + 0x30]
	0x01E51838 LDP X30, X23, [X31 + 0x20]
	0x01E5183C ADD X31, X31, 0x50
	0x01E51840 RET
	0x01E51844 MOV X21, X20
	0x01E51848 BL 0x1C16F20
	0x01E5184C BL 0x1C16F20
	0x01E51850 B 0x1E5185C
	0x01E51854 B 0x1E51858
	0x01E51858 MOV X21, X20
	0x01E5185C MOV X19, X0
	0x01E51860 CMP W1, 0x1
	0x01E51864 B.NE 0x1E51890
	0x01E51868 MOV X0, X19
	0x01E5186C BL 0x3EB1AD0
	0x01E51870 LDR X20, [X0]
	0x01E51874 BL 0x3EB1AE0
	0x01E51878 LDR X1, [X21]
	0x01E5187C ADD X0, X31, 0x8
	0x01E51880 BL 0x2BC434C
	0x01E51884 CBZ X20, 0x1E51830
	0x01E51888 MOV X0, X20
	0x01E5188C BL 0x1C16F18
	0x01E51890 MOV X20, X31
	0x01E51894 B 0x1E5189C
	0x01E51898 MOV X19, X0
	0x01E5189C LDR X1, [X21]
	0x01E518A0 ADD X0, X31, 0x8
	0x01E518A4 BL 0x2BC434C
	0x01E518A8 CBNZ X20, 0x1E518B4
	0x01E518AC MOV X0, X19
	0x01E518B0 BL 0x1D2C690
	0x01E518B4 MOV X0, X20
	0x01E518B8 BL 0x1C16F18
	0x01E518BC BL 0x1990590
	0x01E518C0 SUB X31, X31, 0x60
	0x01E518C4 STR X30, [X31 + 0x20]
	0x01E518C8 STP X24, X23, [X31 + 0x30]
	0x01E518CC STP X22, X21, [X31 + 0x40]
	0x01E518D0 STP X20, X19, [X31 + 0x50]
	0x01E518D4 ADRP X21, 0x2588000
	0x01E518D8 LDRB W8, [X21 + 0x28]
	0x01E518DC MOV X19, X1
	0x01E518E0 MOV X20, X0
	0x01E518E4 TBNZ X8, 0x0, 0x1E5192C
	0x01E518E8 ADRP X0, 0x22AB000
	0x01E518EC LDR X0, [X0 + 0x368]
	0x01E518F0 BL 0x1C16CF4
	0x01E518F4 ADRP X0, 0x22AB000
	0x01E518F8 LDR X0, [X0 + 0x370]
	0x01E518FC BL 0x1C16CF4
	0x01E51900 ADRP X0, 0x22AB000
	0x01E51904 LDR X0, [X0 + 0x378]
	0x01E51908 BL 0x1C16CF4
	0x01E5190C ADRP X0, 0x22AB000
	0x01E51910 LDR X0, [X0 + 0x380]
	0x01E51914 BL 0x1C16CF4
	0x01E51918 ADRP X0, 0x22AB000
	0x01E5191C LDR X0, [X0 + 0x388]
	0x01E51920 BL 0x1C16CF4
	0x01E51924 MOVZ W8, 0x1
	0x01E51928 STRB W8, [X21 + 0x28]
	0x01E5192C STP X31, X31, [X31 + 0x8]
	0x01E51930 STR X31, [X31 + 0x18]
	0x01E51934 LDR X0, [X20 + 0x28]
	0x01E51938 CBZ X0, 0x1E51A14
	0x01E5193C ADRP X24, 0x22AB000
	0x01E51940 ADRP X22, 0x22AB000
	0x01E51944 ADRP X23, 0x22AB000
	0x01E51948 ADRP X21, 0x22AB000
	0x01E5194C LDR X24, [X24 + 0x388]
	0x01E51950 LDR X22, [X22 + 0x370]
	0x01E51954 LDR X23, [X23 + 0x380]
	0x01E51958 LDR X21, [X21 + 0x368]
	0x01E5195C BL 0x1E54C74
	0x01E51960 LDR X1, [X24]
	0x01E51964 ADD X8, X31, 0x8
	0x01E51968 MOV X0, X20
	0x01E5196C BL 0x301CB58
	0x01E51970 LDR X1, [X22]
	0x01E51974 ADD X0, X31, 0x8
	0x01E51978 BL 0x2BC4350
	0x01E5197C TBZ X0, 0x0, 0x1E519EC
	0x01E51980 LDR X20, [X31 + 0x18]
	0x01E51984 CBZ X20, 0x1E51A10
	0x01E51988 LDR X8, [X20]
	0x01E5198C LDR X1, [X23]
	0x01E51990 LDRH W9, [X8 + 0x12E]
	0x01E51994 CBZ X9, 0x1E519B8
	0x01E51998 LDR X10, [X8 + 0xB0]
	0x01E5199C ADD X10, X10, 0x8
	0x01E519A0 LDUR X11, [X10 - 0x8]
	0x01E519A4 CMP X11, X1
	0x01E519A8 B.EQ 0x1E519C8
	0x01E519AC SUBS X9, X9, 0x1
	0x01E519B0 ADD X10, X10, 0x10
	0x01E519B4 B.NE 0x1E519A0
	0x01E519B8 MOVZ W2, 0x4
	0x01E519BC MOV X0, X20
	0x01E519C0 BL 0x1C5C788
	0x01E519C4 B 0x1E519D8
	0x01E519C8 LDR W9, [X10]
	0x01E519CC ADD W9, W9, 0x4
	0x01E519D0 ADD X8, X8, W9, 0x4, SXTW
	0x01E519D4 ADD X0, X8, 0x138
	0x01E519D8 LDP X8, X2, [X0]
	0x01E519DC MOV X0, X20
	0x01E519E0 MOV X1, X19
	0x01E519E4 BLR X8
	0x01E519E8 B 0x1E51970
	0x01E519EC LDR X1, [X21]
	0x01E519F0 ADD X0, X31, 0x8
	0x01E519F4 BL 0x2BC434C
	0x01E519F8 LDP X20, X19, [X31 + 0x50]
	0x01E519FC LDP X22, X21, [X31 + 0x40]
	0x01E51A00 LDP X24, X23, [X31 + 0x30]
	0x01E51A04 LDR X30, [X31 + 0x20]
	0x01E51A08 ADD X31, X31, 0x60
	0x01E51A0C RET
	0x01E51A10 BL 0x1C16F20
	0x01E51A14 BL 0x1C16F20
	0x01E51A18 B 0x1E51A20
	0x01E51A1C B 0x1E51A20
	0x01E51A20 MOV X19, X0
	0x01E51A24 CMP W1, 0x1
	0x01E51A28 B.NE 0x1E51A54
	0x01E51A2C MOV X0, X19
	0x01E51A30 BL 0x3EB1AD0
	0x01E51A34 LDR X20, [X0]
	0x01E51A38 BL 0x3EB1AE0
	0x01E51A3C LDR X1, [X21]
	0x01E51A40 ADD X0, X31, 0x8
	0x01E51A44 BL 0x2BC434C
	0x01E51A48 CBZ X20, 0x1E519F8
	0x01E51A4C MOV X0, X20
	0x01E51A50 BL 0x1C16F18
	0x01E51A54 MOV X20, X31
	0x01E51A58 B 0x1E51A60
	0x01E51A5C MOV X19, X0
	0x01E51A60 LDR X1, [X21]
	0x01E51A64 ADD X0, X31, 0x8
	0x01E51A68 BL 0x2BC434C
	0x01E51A6C CBNZ X20, 0x1E51A78
	0x01E51A70 MOV X0, X19
	0x01E51A74 BL 0x1D2C690
	0x01E51A78 MOV X0, X20
	0x01E51A7C BL 0x1C16F18
	0x01E51A80 BL 0x1990590
	0x01E51A84 SUB X31, X31, 0x60
	0x01E51A88 STR X30, [X31 + 0x20]
	0x01E51A8C STP X24, X23, [X31 + 0x30]
	0x01E51A90 STP X22, X21, [X31 + 0x40]
	0x01E51A94 STP X20, X19, [X31 + 0x50]
	0x01E51A98 ADRP X21, 0x2588000
	0x01E51A9C LDRB W8, [X21 + 0x26]
	0x01E51AA0 MOV X19, X1
	0x01E51AA4 MOV X20, X0
	0x01E51AA8 TBNZ X8, 0x0, 0x1E51AF0
	0x01E51AAC ADRP X0, 0x22AB000
	0x01E51AB0 LDR X0, [X0 + 0x368]
	0x01E51AB4 BL 0x1C16CF4
	0x01E51AB8 ADRP X0, 0x22AB000
	0x01E51ABC LDR X0, [X0 + 0x370]
	0x01E51AC0 BL 0x1C16CF4
	0x01E51AC4 ADRP X0, 0x22AB000
	0x01E51AC8 LDR X0, [X0 + 0x378]
	0x01E51ACC BL 0x1C16CF4
	0x01E51AD0 ADRP X0, 0x22AB000
	0x01E51AD4 LDR X0, [X0 + 0x380]
	0x01E51AD8 BL 0x1C16CF4
	0x01E51ADC ADRP X0, 0x22AB000
	0x01E51AE0 LDR X0, [X0 + 0x388]
	0x01E51AE4 BL 0x1C16CF4
	0x01E51AE8 MOVZ W8, 0x1
	0x01E51AEC STRB W8, [X21 + 0x26]
	0x01E51AF0 STP X31, X31, [X31 + 0x8]
	0x01E51AF4 STR X31, [X31 + 0x18]
	0x01E51AF8 LDR X0, [X20 + 0x28]
	0x01E51AFC CBZ X0, 0x1E51BD8
	0x01E51B00 ADRP X24, 0x22AB000
	0x01E51B04 ADRP X22, 0x22AB000
	0x01E51B08 ADRP X23, 0x22AB000
	0x01E51B0C ADRP X21, 0x22AB000
	0x01E51B10 LDR X24, [X24 + 0x388]
	0x01E51B14 LDR X22, [X22 + 0x370]
	0x01E51B18 LDR X23, [X23 + 0x380]
	0x01E51B1C LDR X21, [X21 + 0x368]
	0x01E51B20 BL 0x1E54C74
	0x01E51B24 LDR X1, [X24]
	0x01E51B28 ADD X8, X31, 0x8
	0x01E51B2C MOV X0, X20
	0x01E51B30 BL 0x301CB58
	0x01E51B34 LDR X1, [X22]
	0x01E51B38 ADD X0, X31, 0x8
	0x01E51B3C BL 0x2BC4350
	0x01E51B40 TBZ X0, 0x0, 0x1E51BB0
	0x01E51B44 LDR X20, [X31 + 0x18]
	0x01E51B48 CBZ X20, 0x1E51BD4
	0x01E51B4C LDR X8, [X20]
	0x01E51B50 LDR X1, [X23]
	0x01E51B54 LDRH W9, [X8 + 0x12E]
	0x01E51B58 CBZ X9, 0x1E51B7C
	0x01E51B5C LDR X10, [X8 + 0xB0]
	0x01E51B60 ADD X10, X10, 0x8
	0x01E51B64 LDUR X11, [X10 - 0x8]
	0x01E51B68 CMP X11, X1
	0x01E51B6C B.EQ 0x1E51B8C
	0x01E51B70 SUBS X9, X9, 0x1
	0x01E51B74 ADD X10, X10, 0x10
	0x01E51B78 B.NE 0x1E51B64
	0x01E51B7C MOVZ W2, 0x3
	0x01E51B80 MOV X0, X20
	0x01E51B84 BL 0x1C5C788
	0x01E51B88 B 0x1E51B9C
	0x01E51B8C LDR W9, [X10]
	0x01E51B90 ADD W9, W9, 0x3
	0x01E51B94 ADD X8, X8, W9, 0x4, SXTW
	0x01E51B98 ADD X0, X8, 0x138
	0x01E51B9C LDP X8, X2, [X0]
	0x01E51BA0 MOV X0, X20
	0x01E51BA4 MOV X1, X19
	0x01E51BA8 BLR X8
	0x01E51BAC B 0x1E51B34
	0x01E51BB0 LDR X1, [X21]
	0x01E51BB4 ADD X0, X31, 0x8
	0x01E51BB8 BL 0x2BC434C
	0x01E51BBC LDP X20, X19, [X31 + 0x50]
	0x01E51BC0 LDP X22, X21, [X31 + 0x40]
	0x01E51BC4 LDP X24, X23, [X31 + 0x30]
	0x01E51BC8 LDR X30, [X31 + 0x20]
	0x01E51BCC ADD X31, X31, 0x60
	0x01E51BD0 RET
	0x01E51BD4 BL 0x1C16F20
	0x01E51BD8 BL 0x1C16F20
	0x01E51BDC B 0x1E51BE4
	0x01E51BE0 B 0x1E51BE4
	0x01E51BE4 MOV X19, X0
	0x01E51BE8 CMP W1, 0x1
	0x01E51BEC B.NE 0x1E51C18
	0x01E51BF0 MOV X0, X19
	0x01E51BF4 BL 0x3EB1AD0
	0x01E51BF8 LDR X20, [X0]
	0x01E51BFC BL 0x3EB1AE0
	0x01E51C00 LDR X1, [X21]
	0x01E51C04 ADD X0, X31, 0x8
	0x01E51C08 BL 0x2BC434C
	0x01E51C0C CBZ X20, 0x1E51BBC
	0x01E51C10 MOV X0, X20
	0x01E51C14 BL 0x1C16F18
	0x01E51C18 MOV X20, X31
	0x01E51C1C B 0x1E51C24
	0x01E51C20 MOV X19, X0
	0x01E51C24 LDR X1, [X21]
	0x01E51C28 ADD X0, X31, 0x8
	0x01E51C2C BL 0x2BC434C
	0x01E51C30 CBNZ X20, 0x1E51C3C
	0x01E51C34 MOV X0, X19
	0x01E51C38 BL 0x1D2C690
	0x01E51C3C MOV X0, X20
	0x01E51C40 BL 0x1C16F18
	0x01E51C44 BL 0x1990590
	0x01E51C48 SUB X31, X31, 0x60
	0x01E51C4C STR X30, [X31 + 0x20]
	0x01E51C50 STP X24, X23, [X31 + 0x30]
	0x01E51C54 STP X22, X21, [X31 + 0x40]
	0x01E51C58 STP X20, X19, [X31 + 0x50]
	0x01E51C5C ADRP X21, 0x2588000
	0x01E51C60 LDRB W8, [X21 + 0x3B]
	0x01E51C64 MOV X19, X1
	0x01E51C68 MOV X20, X0
	0x01E51C6C TBNZ X8, 0x0, 0x1E51CB4
	0x01E51C70 ADRP X0, 0x22AB000
	0x01E51C74 LDR X0, [X0 + 0x3B8]
	0x01E51C78 BL 0x1C16CF4
	0x01E51C7C ADRP X0, 0x22AB000
	0x01E51C80 LDR X0, [X0 + 0x3C0]
	0x01E51C84 BL 0x1C16CF4
	0x01E51C88 ADRP X0, 0x22AB000
	0x01E51C8C LDR X0, [X0 + 0x3C8]
	0x01E51C90 BL 0x1C16CF4
	0x01E51C94 ADRP X0, 0x22AB000
	0x01E51C98 LDR X0, [X0 + 0x3D0]
	0x01E51C9C BL 0x1C16CF4
	0x01E51CA0 ADRP X0, 0x22AB000
	0x01E51CA4 LDR X0, [X0 + 0x3D8]
	0x01E51CA8 BL 0x1C16CF4
	0x01E51CAC MOVZ W8, 0x1
	0x01E51CB0 STRB W8, [X21 + 0x3B]
	0x01E51CB4 STP X31, X31, [X31 + 0x8]
	0x01E51CB8 STR X31, [X31 + 0x18]
	0x01E51CBC LDR X0, [X20 + 0x28]
	0x01E51CC0 CBZ X0, 0x1E51D9C
	0x01E51CC4 ADRP X24, 0x22AB000
	0x01E51CC8 ADRP X22, 0x22AB000
	0x01E51CCC ADRP X23, 0x22AB000
	0x01E51CD0 ADRP X21, 0x22AB000
	0x01E51CD4 LDR X24, [X24 + 0x3D8]
	0x01E51CD8 LDR X22, [X22 + 0x3C0]
	0x01E51CDC LDR X23, [X23 + 0x3D0]
	0x01E51CE0 LDR X21, [X21 + 0x3B8]
	0x01E51CE4 BL 0x1E54C74
	0x01E51CE8 LDR X1, [X24]
	0x01E51CEC ADD X8, X31, 0x8
	0x01E51CF0 MOV X0, X20
	0x01E51CF4 BL 0x301CB58
	0x01E51CF8 LDR X1, [X22]
	0x01E51CFC ADD X0, X31, 0x8
	0x01E51D00 BL 0x2BC4350
	0x01E51D04 TBZ X0, 0x0, 0x1E51D74
	0x01E51D08 LDR X20, [X31 + 0x18]
	0x01E51D0C CBZ X20, 0x1E51D98
	0x01E51D10 LDR X8, [X20]
	0x01E51D14 LDR X1, [X23]
	0x01E51D18 LDRH W9, [X8 + 0x12E]
	0x01E51D1C CBZ X9, 0x1E51D40
	0x01E51D20 LDR X10, [X8 + 0xB0]
	0x01E51D24 ADD X10, X10, 0x8
	0x01E51D28 LDUR X11, [X10 - 0x8]
	0x01E51D2C CMP X11, X1
	0x01E51D30 B.EQ 0x1E51D50
	0x01E51D34 SUBS X9, X9, 0x1
	0x01E51D38 ADD X10, X10, 0x10
	0x01E51D3C B.NE 0x1E51D28
	0x01E51D40 MOVZ W2, 0x2
	0x01E51D44 MOV X0, X20
	0x01E51D48 BL 0x1C5C788
	0x01E51D4C B 0x1E51D60
	0x01E51D50 LDR W9, [X10]
	0x01E51D54 ADD W9, W9, 0x2
	0x01E51D58 ADD X8, X8, W9, 0x4, SXTW
	0x01E51D5C ADD X0, X8, 0x138
	0x01E51D60 LDP X8, X2, [X0]
	0x01E51D64 MOV X0, X20
	0x01E51D68 MOV X1, X19
	0x01E51D6C BLR X8
	0x01E51D70 B 0x1E51CF8
	0x01E51D74 LDR X1, [X21]
	0x01E51D78 ADD X0, X31, 0x8
	0x01E51D7C BL 0x2BC434C
	0x01E51D80 LDP X20, X19, [X31 + 0x50]
	0x01E51D84 LDP X22, X21, [X31 + 0x40]
	0x01E51D88 LDP X24, X23, [X31 + 0x30]
	0x01E51D8C LDR X30, [X31 + 0x20]
	0x01E51D90 ADD X31, X31, 0x60
	0x01E51D94 RET
	0x01E51D98 BL 0x1C16F20
	0x01E51D9C BL 0x1C16F20
	0x01E51DA0 B 0x1E51DA8
	0x01E51DA4 B 0x1E51DA8
	0x01E51DA8 MOV X19, X0
	0x01E51DAC CMP W1, 0x1
	0x01E51DB0 B.NE 0x1E51DDC
	0x01E51DB4 MOV X0, X19
	0x01E51DB8 BL 0x3EB1AD0
	0x01E51DBC LDR X20, [X0]
	0x01E51DC0 BL 0x3EB1AE0
	0x01E51DC4 LDR X1, [X21]
	0x01E51DC8 ADD X0, X31, 0x8
	0x01E51DCC BL 0x2BC434C
	0x01E51DD0 CBZ X20, 0x1E51D80
	0x01E51DD4 MOV X0, X20
	0x01E51DD8 BL 0x1C16F18
	0x01E51DDC MOV X20, X31
	0x01E51DE0 B 0x1E51DE8
	0x01E51DE4 MOV X19, X0
	0x01E51DE8 LDR X1, [X21]
	0x01E51DEC ADD X0, X31, 0x8
	0x01E51DF0 BL 0x2BC434C
	0x01E51DF4 CBNZ X20, 0x1E51E00
	0x01E51DF8 MOV X0, X19
	0x01E51DFC BL 0x1D2C690
	0x01E51E00 MOV X0, X20
	0x01E51E04 BL 0x1C16F18
	0x01E51E08 BL 0x1990590
	0x01E51E0C SUB X31, X31, 0x50
	0x01E51E10 STP X30, X23, [X31 + 0x20]
	0x01E51E14 STP X22, X21, [X31 + 0x30]
	0x01E51E18 STP X20, X19, [X31 + 0x40]
	0x01E51E1C ADRP X20, 0x2588000
	0x01E51E20 LDRB W8, [X20 + 0x39]
	0x01E51E24 MOV X19, X0
	0x01E51E28 TBNZ X8, 0x0, 0x1E51E70
	0x01E51E2C ADRP X0, 0x22AB000
	0x01E51E30 LDR X0, [X0 + 0x3B8]
	0x01E51E34 BL 0x1C16CF4
	0x01E51E38 ADRP X0, 0x22AB000
	0x01E51E3C LDR X0, [X0 + 0x3C0]
	0x01E51E40 BL 0x1C16CF4
	0x01E51E44 ADRP X0, 0x22AB000
	0x01E51E48 LDR X0, [X0 + 0x3C8]
	0x01E51E4C BL 0x1C16CF4
	0x01E51E50 ADRP X0, 0x22AB000
	0x01E51E54 LDR X0, [X0 + 0x3D0]
	0x01E51E58 BL 0x1C16CF4
	0x01E51E5C ADRP X0, 0x22AB000
	0x01E51E60 LDR X0, [X0 + 0x3D8]
	0x01E51E64 BL 0x1C16CF4
	0x01E51E68 MOVZ W8, 0x1
	0x01E51E6C STRB W8, [X20 + 0x39]
	0x01E51E70 STP X31, X31, [X31 + 0x8]
	0x01E51E74 STR X31, [X31 + 0x18]
	0x01E51E78 LDR X0, [X19 + 0x28]
	0x01E51E7C CBZ X0, 0x1E51F50
	0x01E51E80 ADRP X23, 0x22AB000
	0x01E51E84 ADRP X21, 0x22AB000
	0x01E51E88 ADRP X22, 0x22AB000
	0x01E51E8C ADRP X20, 0x22AB000
	0x01E51E90 LDR X23, [X23 + 0x3D8]
	0x01E51E94 LDR X21, [X21 + 0x3C0]
	0x01E51E98 LDR X22, [X22 + 0x3D0]
	0x01E51E9C LDR X20, [X20 + 0x3B8]
	0x01E51EA0 BL 0x1E54C74
	0x01E51EA4 LDR X1, [X23]
	0x01E51EA8 ADD X8, X31, 0x8
	0x01E51EAC MOV X0, X19
	0x01E51EB0 BL 0x301CB58
	0x01E51EB4 LDR X1, [X21]
	0x01E51EB8 ADD X0, X31, 0x8
	0x01E51EBC BL 0x2BC4350
	0x01E51EC0 TBZ X0, 0x0, 0x1E51F28
	0x01E51EC4 LDR X19, [X31 + 0x18]
	0x01E51EC8 CBZ X19, 0x1E51F48
	0x01E51ECC LDR X8, [X19]
	0x01E51ED0 LDR X1, [X22]
	0x01E51ED4 LDRH W9, [X8 + 0x12E]
	0x01E51ED8 CBZ X9, 0x1E51EFC
	0x01E51EDC LDR X10, [X8 + 0xB0]
	0x01E51EE0 ADD X10, X10, 0x8
	0x01E51EE4 LDUR X11, [X10 - 0x8]
	0x01E51EE8 CMP X11, X1
	0x01E51EEC B.EQ 0x1E51F0C
	0x01E51EF0 SUBS X9, X9, 0x1
	0x01E51EF4 ADD X10, X10, 0x10
	0x01E51EF8 B.NE 0x1E51EE4
	0x01E51EFC MOV X0, X19
	0x01E51F00 MOV W2, W31
	0x01E51F04 BL 0x1C5C788
	0x01E51F08 B 0x1E51F18
	0x01E51F0C LDRSW X9, [X10]
	0x01E51F10 ADD X8, X8, X9, 0x4, LSL
	0x01E51F14 ADD X0, X8, 0x138
	0x01E51F18 LDP X8, X1, [X0]
	0x01E51F1C MOV X0, X19
	0x01E51F20 BLR X8
	0x01E51F24 B 0x1E51EB4
	0x01E51F28 LDR X1, [X20]
	0x01E51F2C ADD X0, X31, 0x8
	0x01E51F30 BL 0x2BC434C
	0x01E51F34 LDP X20, X19, [X31 + 0x40]
	0x01E51F38 LDP X22, X21, [X31 + 0x30]
	0x01E51F3C LDP X30, X23, [X31 + 0x20]
	0x01E51F40 ADD X31, X31, 0x50
	0x01E51F44 RET
	0x01E51F48 MOV X21, X20
	0x01E51F4C BL 0x1C16F20
	0x01E51F50 BL 0x1C16F20
	0x01E51F54 B 0x1E51F60
	0x01E51F58 B 0x1E51F5C
	0x01E51F5C MOV X21, X20
	0x01E51F60 MOV X19, X0
	0x01E51F64 CMP W1, 0x1
	0x01E51F68 B.NE 0x1E51F94
	0x01E51F6C MOV X0, X19
	0x01E51F70 BL 0x3EB1AD0
	0x01E51F74 LDR X20, [X0]
	0x01E51F78 BL 0x3EB1AE0
	0x01E51F7C LDR X1, [X21]
	0x01E51F80 ADD X0, X31, 0x8
	0x01E51F84 BL 0x2BC434C
	0x01E51F88 CBZ X20, 0x1E51F34
	0x01E51F8C MOV X0, X20
	0x01E51F90 BL 0x1C16F18
	0x01E51F94 MOV X20, X31
	0x01E51F98 B 0x1E51FA0
	0x01E51F9C MOV X19, X0
	0x01E51FA0 LDR X1, [X21]
	0x01E51FA4 ADD X0, X31, 0x8
	0x01E51FA8 BL 0x2BC434C
	0x01E51FAC CBNZ X20, 0x1E51FB8
	0x01E51FB0 MOV X0, X19
	0x01E51FB4 BL 0x1D2C690
	0x01E51FB8 MOV X0, X20
	0x01E51FBC BL 0x1C16F18
	0x01E51FC0 BL 0x1990590
	0x01E51FC4 SUB X31, X31, 0x50
	0x01E51FC8 STP X30, X23, [X31 + 0x20]
	0x01E51FCC STP X22, X21, [X31 + 0x30]
	0x01E51FD0 STP X20, X19, [X31 + 0x40]
	0x01E51FD4 ADRP X20, 0x2588000
	0x01E51FD8 LDRB W8, [X20 + 0x3A]
	0x01E51FDC MOV X19, X0
	0x01E51FE0 TBNZ X8, 0x0, 0x1E52028
	0x01E51FE4 ADRP X0, 0x22AB000
	0x01E51FE8 LDR X0, [X0 + 0x3B8]
	0x01E51FEC BL 0x1C16CF4
	0x01E51FF0 ADRP X0, 0x22AB000
	0x01E51FF4 LDR X0, [X0 + 0x3C0]
	0x01E51FF8 BL 0x1C16CF4
	0x01E51FFC ADRP X0, 0x22AB000
	0x01E52000 LDR X0, [X0 + 0x3C8]
	0x01E52004 BL 0x1C16CF4
	0x01E52008 ADRP X0, 0x22AA000
	0x01E5200C LDR X0, [X0 + 0x3D0]
	0x01E52010 BL 0x1C16CF4
	0x01E52014 ADRP X0, 0x22AA000
	0x01E52018 LDR X0, [X0 + 0x3D8]
	0x01E5201C BL 0x1C16CF4
	0x01E52020 MOVZ W8, 0x1
	0x01E52024 STRB W8, [X20 + 0x3A]
	0x01E52028 STP X31, X31, [X31 + 0x8]
	0x01E5202C STR X31, [X31 + 0x18]
	0x01E52030 LDR X0, [X19 + 0x28]
	0x01E52034 CBZ X0, 0x1E5210C
	0x01E52038 ADRP X23, 0x22AA000
	0x01E5203C ADRP X21, 0x22AA000
	0x01E52040 ADRP X22, 0x22AA000
	0x01E52044 ADRP X20, 0x22AA000
	0x01E52048 LDR X23, [X23 + 0x3D8]
	0x01E5204C LDR X21, [X21 + 0x3C0]
	0x01E52050 LDR X22, [X22 + 0x3D0]
	0x01E52054 LDR X20, [X20 + 0x3B8]
	0x01E52058 BL 0x1E54C74
	0x01E5205C LDR X1, [X23]
	0x01E52060 ADD X8, X31, 0x8
	0x01E52064 MOV X0, X19
	0x01E52068 BL 0x301CB58
	0x01E5206C LDR X1, [X21]
	0x01E52070 ADD X0, X31, 0x8
	0x01E52074 BL 0x2BC4350
	0x01E52078 TBZ X0, 0x0, 0x1E520E4
	0x01E5207C LDR X19, [X31 + 0x18]
	0x01E52080 CBZ X19, 0x1E52104
	0x01E52084 LDR X8, [X19]
	0x01E52088 LDR X1, [X22]
	0x01E5208C LDRH W9, [X8 + 0x12E]
	0x01E52090 CBZ X9, 0x1E520B4
	0x01E52094 LDR X10, [X8 + 0xB0]
	0x01E52098 ADD X10, X10, 0x8
	0x01E5209C LDUR X11, [X10 - 0x8]
	0x01E520A0 CMP X11, X1
	0x01E520A4 B.EQ 0x1E520C4
	0x01E520A8 SUBS X9, X9, 0x1
	0x01E520AC ADD X10, X10, 0x10
	0x01E520B0 B.NE 0x1E5209C
	0x01E520B4 MOVZ W2, 0x1
	0x01E520B8 MOV X0, X19
	0x01E520BC BL 0x1C5C788
	0x01E520C0 B 0x1E520D4
	0x01E520C4 LDR W9, [X10]
	0x01E520C8 ADD W9, W9, 0x1
	0x01E520CC ADD X8, X8, W9, 0x4, SXTW
	0x01E520D0 ADD X0, X8, 0x138
	0x01E520D4 LDP X8, X1, [X0]
	0x01E520D8 MOV X0, X19
	0x01E520DC BLR X8
	0x01E520E0 B 0x1E5206C
	0x01E520E4 LDR X1, [X20]
	0x01E520E8 ADD X0, X31, 0x8
	0x01E520EC BL 0x2BC434C
	0x01E520F0 LDP X20, X19, [X31 + 0x40]
	0x01E520F4 LDP X22, X21, [X31 + 0x30]
	0x01E520F8 LDP X30, X23, [X31 + 0x20]
	0x01E520FC ADD X31, X31, 0x50
	0x01E52100 RET
	0x01E52104 MOV X21, X20
	0x01E52108 BL 0x1C16F20
	0x01E5210C BL 0x1C16F20
	0x01E52110 B 0x1E5211C
	0x01E52114 B 0x1E52118
	0x01E52118 MOV X21, X20
	0x01E5211C MOV X19, X0
	0x01E52120 CMP W1, 0x1
	0x01E52124 B.NE 0x1E52150
	0x01E52128 MOV X0, X19
	0x01E5212C BL 0x3EB1AD0
	0x01E52130 LDR X20, [X0]
	0x01E52134 BL 0x3EB1AE0
	0x01E52138 LDR X1, [X21]
	0x01E5213C ADD X0, X31, 0x8
	0x01E52140 BL 0x2BC434C
	0x01E52144 CBZ X20, 0x1E520F0
	0x01E52148 MOV X0, X20
	0x01E5214C BL 0x1C16F18
	0x01E52150 MOV X20, X31
	0x01E52154 B 0x1E5215C
	0x01E52158 MOV X19, X0
	0x01E5215C LDR X1, [X21]
	0x01E52160 ADD X0, X31, 0x8
	0x01E52164 BL 0x2BC434C
	0x01E52168 CBNZ X20, 0x1E52174
	0x01E5216C MOV X0, X19
	0x01E52170 BL 0x1D2C690
	0x01E52174 MOV X0, X20
	0x01E52178 BL 0x1C16F18
	0x01E5217C BL 0x1990590
	0x01E52180 SUB X31, X31, 0x60
	0x01E52184 STR X30, [X31 + 0x20]
	0x01E52188 STP X24, X23, [X31 + 0x30]
	0x01E5218C STP X22, X21, [X31 + 0x40]
	0x01E52190 STP X20, X19, [X31 + 0x50]
	0x01E52194 ADRP X21, 0x2587000
	0x01E52198 LDRB W8, [X21 + 0x31]
	0x01E5219C MOV X19, X1
	0x01E521A0 MOV X20, X0
	0x01E521A4 TBNZ X8, 0x0, 0x1E521EC
	0x01E521A8 ADRP X0, 0x22AA000
	0x01E521AC LDR X0, [X0 + 0x268]
	0x01E521B0 BL 0x1C16CF4
	0x01E521B4 ADRP X0, 0x22AA000
	0x01E521B8 LDR X0, [X0 + 0x270]
	0x01E521BC BL 0x1C16CF4
	0x01E521C0 ADRP X0, 0x22AA000
	0x01E521C4 LDR X0, [X0 + 0x278]
	0x01E521C8 BL 0x1C16CF4
	0x01E521CC ADRP X0, 0x22AA000
	0x01E521D0 LDR X0, [X0 + 0x280]
	0x01E521D4 BL 0x1C16CF4
	0x01E521D8 ADRP X0, 0x22AA000
	0x01E521DC LDR X0, [X0 + 0x288]
	0x01E521E0 BL 0x1C16CF4
	0x01E521E4 MOVZ W8, 0x1
	0x01E521E8 STRB W8, [X21 + 0x31]
	0x01E521EC STP X31, X31, [X31 + 0x8]
	0x01E521F0 STR X31, [X31 + 0x18]
	0x01E521F4 LDR X0, [X20 + 0x28]
	0x01E521F8 CBZ X0, 0x1E522D0
	0x01E521FC ADRP X24, 0x22AA000
	0x01E52200 ADRP X22, 0x22AA000
	0x01E52204 ADRP X23, 0x22AA000
	0x01E52208 ADRP X21, 0x22AA000
	0x01E5220C LDR X24, [X24 + 0x288]
	0x01E52210 LDR X22, [X22 + 0x270]
	0x01E52214 LDR X23, [X23 + 0x280]
	0x01E52218 LDR X21, [X21 + 0x268]
	0x01E5221C BL 0x1E54C74
	0x01E52220 LDR X1, [X24]
	0x01E52224 ADD X8, X31, 0x8
	0x01E52228 MOV X0, X20
	0x01E5222C BL 0x301CB58
	0x01E52230 LDR X1, [X22]
	0x01E52234 ADD X0, X31, 0x8
	0x01E52238 BL 0x2BC4350
	0x01E5223C TBZ X0, 0x0, 0x1E522A8
	0x01E52240 LDR X20, [X31 + 0x18]

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+64], X29
	003 Move [X31+72], X30
	004 Move [X31+80], X28
	005 Move [X31+88], X27
	006 Move [X31+96], X26
	007 Move [X31+104], X25
	008 Move [X31+112], X24
	009 Move [X31+120], X23
	010 Move [X31+128], X22
	011 Move [X31+136], X21
	012 Move [X31+144], X20
	013 Move [X31+152], X19
	014 Move X21, 0x2589000
	015 Move W8, [X21+23]
	016 Move X19, X1
	017 Move X20, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {147}
	022 Move X0, 0x22AC000
	023 Move X0, [X0+688]
	024 Call 0x1C17CF4
	025 Move X0, 0x22A3000
	026 Move X0, [X0+2504]
	027 Call 0x1C17CF4
	028 Move X0, 0x22A7000
	029 Move X0, [X0+3992]
	030 Call 0x1C17CF4
	031 Move X0, 0x22A5000
	032 Move X0, [X0+2488]
	033 Call 0x1C17CF4
	034 Move X0, 0x22AC000
	035 Move X0, [X0+568]
	036 Call 0x1C17CF4
	037 Move X0, 0x22AC000
	038 Move X0, [X0+696]
	039 Call 0x1C17CF4
	040 Move X0, 0x22A3000
	041 Move X0, [X0+1824]
	042 Call 0x1C17CF4
	043 Move X0, 0x22AC000
	044 Move X0, [X0+576]
	045 Call 0x1C17CF4
	046 Move X0, 0x22AC000
	047 Move X0, [X0+584]
	048 Call 0x1C17CF4
	049 Move X0, 0x22AC000
	050 Move X0, [X0+592]
	051 Call 0x1C17CF4
	052 Move X0, 0x22AB000
	053 Move X0, [X0+3480]
	054 Call 0x1C17CF4
	055 Move X0, 0x22AC000
	056 Move X0, [X0+704]
	057 Call 0x1C17CF4
	058 Move X0, 0x22AB000
	059 Move X0, [X0+3488]
	060 Call 0x1C17CF4
	061 Move X0, 0x22AC000
	062 Move X0, [X0+600]
	063 Call 0x1C17CF4
	064 Move X0, 0x22AC000
	065 Move X0, [X0+712]
	066 Call 0x1C17CF4
	067 Move X0, 0x22AC000
	068 Move X0, [X0+720]
	069 Call 0x1C17CF4
	070 Move X0, 0x22AC000
	071 Move X0, [X0+728]
	072 Call 0x1C17CF4
	073 Move X0, 0x22AC000
	074 Move X0, [X0+736]
	075 Call 0x1C17CF4
	076 Move X0, 0x22AC000
	077 Move X0, [X0+744]
	078 Call 0x1C17CF4
	079 Move X0, 0x22AC000
	080 Move X0, [X0+752]
	081 Call 0x1C17CF4
	082 Move X0, 0x22AC000
	083 Move X0, [X0+760]
	084 Call 0x1C17CF4
	085 Move X0, 0x22AB000
	086 Move X0, [X0+2856]
	087 Call 0x1C17CF4
	088 Move X0, 0x22AC000
	089 Move X0, [X0+24]
	090 Call 0x1C17CF4
	091 Move X0, 0x22AC000
	092 Move X0, [X0+64]
	093 Call 0x1C17CF4
	094 Move X0, 0x22AC000
	095 Move X0, [X0+768]
	096 Call 0x1C17CF4
	097 Move X0, 0x22AC000
	098 Move X0, [X0+776]
	099 Call 0x1C17CF4
	100 Move X0, 0x22AC000
	101 Move X0, [X0+784]
	102 Call 0x1C17CF4
	103 Move X0, 0x22AC000
	104 Move X0, [X0+72]
	105 Call 0x1C17CF4
	106 Move X0, 0x22A3000
	107 Move X0, [X0+2760]
	108 Call 0x1C17CF4
	109 Move X0, 0x22A5000
	110 Move X0, [X0+632]
	111 Call 0x1C17CF4
	112 Move X0, 0x22A7000
	113 Move X0, [X0+2344]
	114 Call 0x1C17CF4
	115 Move X0, 0x22AC000
	116 Move X0, [X0+792]
	117 Call 0x1C17CF4
	118 Move X0, 0x22AC000
	119 Move X0, [X0+800]
	120 Call 0x1C17CF4
	121 Move X0, 0x22AC000
	122 Move X0, [X0+808]
	123 Call 0x1C17CF4
	124 Move X0, 0x22AC000
	125 Move X0, [X0+816]
	126 Call 0x1C17CF4
	127 Move X0, 0x22AC000
	128 Move X0, [X0+824]
	129 Call 0x1C17CF4
	130 Move X0, 0x22AC000
	131 Move X0, [X0+832]
	132 Call 0x1C17CF4
	133 Move X0, 0x22AC000
	134 Move X0, [X0+840]
	135 Call 0x1C17CF4
	136 Move X0, 0x22AC000
	137 Move X0, [X0+848]
	138 Call 0x1C17CF4
	139 Move X0, 0x22AC000
	140 Move X0, [X0+856]
	141 Call 0x1C17CF4
	142 Move X0, 0x22AC000
	143 Move X0, [X0+864]
	144 Call 0x1C17CF4
	145 Move W8, 1
	146 Move [X21+23], W8
	147 NotImplemented "Instruction STRH not yet implemented."
	148 Move [X31+32], X31
	149 Move [X31+40], X31
	150 Move [X31+48], X31
	151 Compare X19, 0
	152 JumpIfEqual {596}
	153 Move X0, [X19+32]
	154 Compare X0, 0
	155 JumpIfEqual {596}
	156 Move W1, 221
	157 Move X2, X31
	158 Call ParameterDictionary.ContainsKey, X0, X1
	159 Move TEMP, X0
	160 And TEMP, TEMP, 1
	161 Compare TEMP, 1
	162 JumpIfNotEqual {188}
	163 Move X21, [X20+48]
	164 Compare X21, 0
	165 JumpIfNotEqual {174}
	166 Move X8, 0x22A7000
	167 Move X8, [X8+3992]
	168 Move X0, [X8]
	169 Call 0x1C17F10
	170 Move X1, X31
	171 Move X21, X0
	172 Call AuthenticationValues..ctor, X0
	173 Move [X20+48], X21
	174 Move X0, [X19+32]
	175 Compare X0, 0
	176 JumpIfEqual {596}
	177 Move W1, 221
	178 Move X2, X31
	179 Call ParameterDictionary.get_Item, X0, X1
	180 Compare X21, 0
	181 JumpIfEqual {596}
	182 Move [X21+40], X0
	183 Move X8, [X20+48]
	184 Compare X8, 0
	185 JumpIfEqual {596}
	186 Move X8, [X8+40]
	187 Move [X20+72], X8
	188 Move X21, X19
	189 NotImplemented "Instruction LDRH not yet implemented."
	190 Move W9, 0x7FE7
	191 NotImplemented "Instruction CMP not yet implemented."
	192 Move W1, 18
	193 Move X0, X20
	194 Call LoadBalancingClient.Disconnect, X0, X1
	195 Move W9, [X19+16]
	196 Subtract W8, W9, 217
	197 NotImplemented "Instruction CMP not yet implemented."
	198 Move X9, -20066304
	199 Add X9, X9, 2706
	200 NotImplemented "Instruction ADR not yet implemented."
	201 NotImplemented "Instruction LDRH not yet implemented."
	202 Add X10, X10, X11
	203 CallNoReturn X10
	204 Move W8, [X20+128]
	205 NotImplemented "Instruction LDRH not yet implemented."
	206 NotImplemented "Instruction CMP not yet implemented."
	207 Compare W9, 0
	208 Invalid "Jump target not found in method."
	209 Move [X20+304], X19
	210 NotImplemented "Instruction LDRH not yet implemented."
	211 Compare W8, 0
	212 JumpIfEqual {430}
	213 Move X8, 0x22A3000
	214 Move X8, [X8+2760]
	215 Move W1, 5
	216 Move X0, [X8]
	217 Call 0x1C17D6C
	218 Move X22, X0
	219 Move X0, X19
	220 Move X1, X31
	221 Call OperationResponse.ToStringFull, X0
	222 Compare X22, 0
	223 JumpIfEqual {596}
	224 Move W8, [X22+24]
	225 Compare W8, 0
	226 JumpIfEqual {1186}
	227 NotImplemented "Instruction CMP not yet implemented."
	228 Move [X22+32], X0
	229 Move X8, 0x22AC000
	230 Move X8, [X8+816]
	231 Move X9, 0x22AC000
	232 Move TEMP, 0
	233 Not TEMP
	234 Move X10, TEMP
	235 Add X0, X31, 8
	236 Move X8, [X8]
	237 Move X9, [X9+72]
	238 Move X1, X31
	239 Move [X22+40], X8
	240 Move X8, [X9]
	241 Move W9, [X20+128]
	242 Move [X31+8], X8
	243 Move [X31+16], X10
	244 Move [X31+24], W9
	245 Call Enum.ToString, X0
	246 Move W8, [X22+24]
	247 NotImplemented "Instruction CMP not yet implemented."
	248 NotImplemented "Instruction CMP not yet implemented."
	249 Move [X22+48], X0
	250 Move X8, 0x22AC000
	251 Move X8, [X8+824]
	252 Move X8, [X8]
	253 Move [X22+56], X8
	254 Move X0, [X20+16]
	255 Compare X0, 0
	256 JumpIfEqual {596}
	257 Move X1, X31
	258 Call PhotonPeer.get_ServerAddress, X0
	259 Move W8, [X22+24]
	260 NotImplemented "Instruction CMP not yet implemented."
	261 Move [X22+64], X0
	262 Move X0, X22
	263 Move X1, X31
	264 Call String.Concat, X0
	265 Move X8, [X20]
	266 Move X2, X0
	267 Move W1, 1
	268 Move X0, X20
	269 Move X9, [X8+536]
	270 Move X3, [X8+544]
	271 NotImplemented "Instruction BLR not yet implemented."
	272 NotImplemented "Instruction LDRSH not yet implemented."
	273 Add W9, W8, 3
	274 NotImplemented "Instruction CMP not yet implemented."
	275 Move TEMP, 0x7FF0
	276 Not TEMP
	277 Move W9, TEMP
	278 Add W9, W8, W9
	279 NotImplemented "Instruction CMP not yet implemented."
	280 Move X8, -20066304
	281 Add X8, X8, 2736
	282 NotImplemented "Instruction ADR not yet implemented."
	283 NotImplemented "Instruction LDRH not yet implemented."
	284 Add X10, X10, X11
	285 CallNoReturn X10
	286 Move W8, 13
	287 NotImplemented "Instruction CMP not yet implemented."
	288 Move X0, X20
	289 Move X1, X19
	290 Call LoadBalancingClient.GameEnteredOnGameServer, X0, X1
	291 NotImplemented "Instruction LDRH not yet implemented."
	292 Compare W8, 0
	293 JumpIfEqual {515}
	294 Move X0, X19
	295 Move X1, X31
	296 Call OperationResponse.ToStringFull, X0
	297 Move X8, 0x22AC000
	298 Move X8, [X8+856]
	299 Move X1, X0
	300 Move X2, X31
	301 Move X8, [X8]
	302 Move X0, X8
	303 Call String.Concat, X0, X1
	304 Move X8, [X20]
	305 Move X2, X0
	306 Move W1, 1
	307 Move X0, X20
	308 Move X9, [X8+536]
	309 Move X3, [X8+544]
	310 NotImplemented "Instruction BLR not yet implemented."
	311 Move [X20+312], X31
	312 NotImplemented "Instruction LDRH not yet implemented."
	313 Compare W8, 0
	314 JumpIfEqual {725}
	315 Move W9, 0x7FFF
	316 NotImplemented "Instruction CMP not yet implemented."
	317 Move X8, 0x22AC000
	318 Move X1, [X19+24]
	319 Move X8, [X8+808]
	320 Move X2, X31
	321 Move X0, [X8]
	322 Call String.Concat, X0, X1
	323 Move X8, 0x22A3000
	324 Move X8, [X8+2504]
	325 Move X21, X0
	326 Move X22, [X8]
	327 Move X8, [X22+56]
	328 Compare X8, 0
	329 JumpIfNotEqual {333}
	330 Move X0, X22
	331 Call 0x1C5D6E0
	332 Move X8, [X22+56]
	333 Move X0, [X8+16]
	334 Move W8, [X0+309]
	335 Move TEMP, X8
	336 And TEMP, TEMP, 1
	337 Compare TEMP, 1
	338 JumpIfEqual {340}
	339 Call 0x1C5D684
	340 Move W8, [X0+224]
	341 Compare W8, 0
	342 JumpIfNotEqual {344}
	343 Call 0x1C17DFC
	344 Move X8, [X22+56]
	345 Move X0, [X8+16]
	346 Move W8, [X0+309]
	347 Move TEMP, X8
	348 And TEMP, TEMP, 1
	349 Compare TEMP, 1
	350 JumpIfEqual {352}
	351 Call 0x1C5D684
	352 Move X8, [X0+184]
	353 Move X0, X21
	354 Move X2, X31
	355 Move X1, [X8]
	356 Call String.Format, X0, X1
	357 Move W1, [X20+144]
	358 NotImplemented "Instruction CMP not yet implemented."
	359 Move X8, [X20+152]
	360 Move W9, 15
	361 Move [X20+144], W9
	362 Compare X8, 0
	363 JumpIfEqual {369}
	364 Move X9, [X8+24]
	365 Move X0, [X8+64]
	366 Move X3, [X8+40]
	367 Move W2, 15
	368 NotImplemented "Instruction BLR not yet implemented."
	369 Move X0, [X20+200]
	370 Compare X0, 0
	371 JumpIfEqual {596}
	372 Call LobbyCallbacksContainer.OnLeftLobby, X0
	373 NotImplemented "Instruction LDRH not yet implemented."
	374 Compare W8, 0
	375 JumpIfEqual {597}
	376 Move X0, X19
	377 Move X1, X31
	378 Call OperationResponse.ToStringFull, X0
	379 Move X8, 0x22AC000
	380 Move X8, [X8+848]
	381 Move X1, X0
	382 Move X2, X31
	383 Move X8, [X8]
	384 Move X0, X8
	385 Call String.Concat, X0, X1
	386 Move X8, [X20]
	387 Move X2, X0
	388 Move W1, 1
	389 Move X0, X20
	390 Move X9, [X8+536]
	391 Move X3, [X8+544]
	392 NotImplemented "Instruction BLR not yet implemented."
	393 Move X0, [X20+208]
	394 Compare X0, 0
	395 JumpIfEqual {596}
	396 Move X1, X19
	397 Call WebRpcCallbacksContainer.OnWebRpcResponse, X0, X1
	398 Move W1, [X20+144]
	399 NotImplemented "Instruction CMP not yet implemented."
	400 Move X8, [X20+152]
	401 Move W9, 4
	402 Move [X20+144], W9
	403 Compare X8, 0
	404 JumpIfEqual {410}
	405 Move X9, [X8+24]
	406 Move X0, [X8+64]
	407 Move X3, [X8+40]
	408 Move W2, 4
	409 NotImplemented "Instruction BLR not yet implemented."
	410 Move X0, [X20+200]
	411 Compare X0, 0
	412 JumpIfEqual {596}
	413 Call LobbyCallbacksContainer.OnJoinedLobby, X0
	414 Move W1, [X20+144]
	415 Move W8, 15
	416 NotImplemented "Instruction CMP not yet implemented."
	417 NotImplemented "Instruction CSEL not yet implemented."
	418 NotImplemented "Instruction CMP not yet implemented."
	419 Move X8, [X20+152]
	420 Move [X20+144], W2
	421 Compare X8, 0
	422 JumpIfEqual {427}
	423 Move X9, [X8+24]
	424 Move X0, [X8+64]
	425 Move X3, [X8+40]
	426 NotImplemented "Instruction BLR not yet implemented."
	427 Move X0, X20
	428 Move X1, X19
	429 Call LoadBalancingClient.CallbackRoomEnterFailed, X0, X1
	430 Move W8, [X20+128]
	431 Or W9, W8, 2
	432 NotImplemented "Instruction CMP not yet implemented."
	433 Move X0, [X19+32]
	434 Compare X0, 0
	435 JumpIfEqual {596}
	436 Move W1, 225
	437 Move X2, X31
	438 Call ParameterDictionary.ContainsKey, X0, X1
	439 Move TEMP, X0
	440 And TEMP, TEMP, 1
	441 Compare TEMP, 1
	442 JumpIfNotEqual {868}
	443 Move X0, [X19+32]
	444 Compare X0, 0
	445 JumpIfEqual {596}
	446 Move W1, 225
	447 Move X2, X31
	448 Call ParameterDictionary.get_Item, X0, X1
	449 Move X21, X0
	450 Compare X0, 0
	451 JumpIfEqual {457}
	452 Move X8, 0x22A5000
	453 Move X8, [X8+632]
	454 Move X1, [X8]
	455 Move X8, [X21]
	456 NotImplemented "Instruction CMP not yet implemented."
	457 Move X0, X21
	458 Move X1, X31
	459 Call String.IsNullOrEmpty, X0
	460 Move TEMP, X0
	461 And TEMP, TEMP, 1
	462 Compare TEMP, 1
	463 JumpIfEqual {868}
	464 Move X0, X20
	465 Move X1, X21
	466 Call LoadBalancingClient.set_UserId, X0, X1
	467 Move X8, [X20+264]
	468 Compare X8, 0
	469 JumpIfEqual {596}
	470 Move [X8+40], X21
	471 Move X8, [X20+48]
	472 Compare X8, 0
	473 JumpIfEqual {855}
	474 Move X1, [X8+48]
	475 Move W8, 16
	476 Move [X20+224], W8
	477 Move W1, [X20+224]
	478 Move W1, 230
	479 Move X0, X19
	480 Move X2, X31
	481 Call OperationResponse.get_Item, X0, X1
	482 Move X23, 0x22A5000
	483 Move X23, [X23+632]
	484 Move X21, X0
	485 Compare X0, 0
	486 JumpIfEqual {490}
	487 Move X1, [X23]
	488 Move X8, [X21]
	489 NotImplemented "Instruction CMP not yet implemented."
	490 NotImplemented "Instruction LDRH not yet implemented."
	491 Move [X20+120], X21
	492 Compare W22, 0
	493 JumpIfEqual {505}
	494 Move X8, 0x22AB000
	495 Move X8, [X8+2856]
	496 Move X0, [X8]
	497 Move W8, [X0+224]
	498 Compare W8, 0
	499 JumpIfNotEqual {501}
	500 Call 0x1C17DFC
	501 Move X0, X21
	502 Move W1, W22
	503 Call LoadBalancingClient.ReplacePortWithAlternative, X0, X1
	504 Move [X20+120], X0
	505 Move W1, 255
	506 Move X0, X19
	507 Move X2, X31
	508 Call OperationResponse.get_Item, X0, X1
	509 Compare X0, 0
	510 JumpIfEqual {776}
	511 Move X8, [X23]
	512 Move X9, [X0]
	513 NotImplemented "Instruction CMP not yet implemented."
	514 NotImplemented "Instruction CSEL not yet implemented."
	515 Move W1, 1
	516 Move X0, X19
	517 Move X2, X31
	518 Call OperationResponse.get_Item, X0, X1
	519 Move X8, 0x22A5000
	520 Move X8, [X8+2488]
	521 Move X1, [X8]
	522 Call 0x1C17E00
	523 Move X21, X0
	524 Move W1, 2
	525 Move X0, X19
	526 Move X2, X31
	527 Call OperationResponse.get_Item, X0, X1
	528 Move X8, 0x22A3000
	529 Move X8, [X8+2760]
	530 Move X1, [X8]
	531 Call 0x1C17E00
	532 Move X23, [X20+312]
	533 Compare X23, 0
	534 JumpIfEqual {596}
	535 Move X8, 0x22AC000
	536 Move X8, [X8+752]
	537 Move X22, X0
	538 Move X0, [X8]
	539 Call 0x1C17F10
	540 Move X8, 0x22AC000
	541 Move W1, [X23+24]
	542 Move X8, [X8+728]
	543 Move X23, X0
	544 Move X2, [X8]
	545 Call List`1<Object>..ctor, X0, X1
	546 Move X8, [X20+312]
	547 Compare X8, 0
	548 JumpIfEqual {596}
	549 Move X28, 0x22AC000
	550 Move X29, 0x22AC000
	551 Move X28, [X28+704]
	552 Move X29, [X29+720]
	553 Move X24, X31
	554 Add X26, X21, 32
	555 Add X27, X22, 32
	556 NotImplemented "Instruction LDRSW not yet implemented."
	557 NotImplemented "Instruction CMP not yet implemented."
	558 Move X0, [X28]
	559 Call 0x1C17F10
	560 Move X1, X31
	561 Move X25, X0
	562 Call Object..ctor, X0
	563 Move X8, [X20+312]
	564 Compare X8, 0
	565 JumpIfEqual {596}
	566 Move W9, [X8+24]
	567 NotImplemented "Instruction CMP not yet implemented."
	568 Compare X25, 0
	569 JumpIfEqual {596}
	570 Add X8, X8, X24
	571 Move X8, [X8+32]
	572 Move [X25+16], X8
	573 Compare X22, 0
	574 JumpIfEqual {596}
	575 Move W8, [X22+24]
	576 NotImplemented "Instruction CMP not yet implemented."
	577 Move X8, [X27]
	578 Move [X25+32], X8
	579 Compare X21, 0
	580 JumpIfEqual {596}
	581 Move W8, [X21+24]
	582 NotImplemented "Instruction CMP not yet implemented."
	583 Move W8, [X26]
	584 Move [X25+24], W8
	585 Compare X23, 0
	586 JumpIfEqual {596}
	587 Move X3, [X29]
	588 Move X0, X23
	589 Move W1, W24
	590 Move X2, X25
	591 Call List`1<Object>.Insert, X0, X1, X2
	592 Move X8, [X20+312]
	593 Add X24, X24, 1
	594 Compare X8, 0
	595 JumpIfNotEqual {556}
	596 Call 0x1C17F20
	597 Move X8, 0x22AC000
	598 Move X8, [X8+744]
	599 Move X0, [X8]
	600 Call 0x1C17F10
	601 Move X8, 0x22AC000
	602 Move X8, [X8+736]
	603 Move X21, X0
	604 Move X1, [X8]
	605 Call List`1<Object>..ctor, X0
	606 Move W1, 222
	607 Move X0, X19
	608 Move X2, X31
	609 Call OperationResponse.get_Item, X0, X1
	610 Compare X0, 0
	611 JumpIfEqual {596}
	612 Move X9, 0x22AB000
	613 Move X9, [X9+3488]
	614 Move X8, [X0]
	615 Move X22, X0
	616 Move X1, [X9]
	617 Move W10, [X8+304]
	618 Move W9, [X1+304]
	619 NotImplemented "Instruction CMP not yet implemented."
	620 Move X8, [X8+200]
	621 Add X8, X8, X9
	622 NotImplemented "Instruction LDUR not yet implemented."
	623 NotImplemented "Instruction CMP not yet implemented."
	624 Move X8, 0x22AC000
	625 Move X8, [X8+568]
	626 Move X0, X22
	627 Move X1, [X8]
	628 Call Dictionary`2<Object, Object>.get_Keys, X0
	629 Compare X0, 0
	630 JumpIfEqual {596}
	631 Move X8, 0x22AC000
	632 Move X8, [X8+600]
	633 Move X1, [X8]
	634 Add X8, X31, 8
	635 Call KeyCollection<Object, Object>.GetEnumerator, X0
	636 NotImplemented "Instruction LDUR not yet implemented."
	637 Move X8, [X31+24]
	638 Move X27, 0x22AC000
	639 Move X28, 0x22A5000
	640 Move X29, 0x22AC000
	641 Move X27, [X27+584]
	642 Move X28, [X28+632]
	643 Move X29, [X29+784]
	644 Move [X31+2], V0
	645 Move [X31+48], X8
	646 Move X26, 0x22AC000
	647 Move X26, [X26+712]
	648 Move X1, [X27]
	649 Add X0, X31, 32
	650 Call Enumerator<Object, Object>.MoveNext, X0
	651 Move TEMP, X0
	652 And TEMP, TEMP, 1
	653 Compare TEMP, 1
	654 JumpIfNotEqual {709}
	655 Move X24, [X31+48]
	656 Compare X24, 0
	657 JumpIfEqual {661}
	658 Move X1, [X28]
	659 Move X8, [X24]
	660 NotImplemented "Instruction CMP not yet implemented."
	661 Move X0, X22
	662 Move X1, X24
	663 Move X2, X31
	664 Call Hashtable.get_Item, X0, X1
	665 Move X25, X0
	666 Move X0, [X29]
	667 Call 0x1C17F10
	668 Move X23, X0
	669 Compare X25, 0
	670 JumpIfEqual {682}
	671 Move X9, 0x22AB000
	672 Move X8, [X25]
	673 Move X9, [X9+3488]
	674 Move W10, [X8+304]
	675 Move X1, [X9]
	676 Move W9, [X1+304]
	677 NotImplemented "Instruction CMP not yet implemented."
	678 Move X8, [X8+200]
	679 Add X8, X8, X9
	680 NotImplemented "Instruction LDUR not yet implemented."
	681 NotImplemented "Instruction CMP not yet implemented."
	682 Move X0, X23
	683 Move X1, X24
	684 Move X2, X25
	685 Move X3, X31
	686 Call RoomInfo..ctor, X0, X1, X2
	687 Compare X21, 0
	688 JumpIfEqual {1189}
	689 Move W10, [X21+28]
	690 Move X8, [X21+16]
	691 Move X9, [X26]
	692 Add W10, W10, 1
	693 Move [X21+28], W10
	694 Compare X8, 0
	695 JumpIfEqual {1190}
	696 NotImplemented "Instruction LDRSW not yet implemented."
	697 Move W11, [X8+24]
	698 NotImplemented "Instruction CMP not yet implemented."
	699 Add W9, W10, 1
	700 Add X8, X8, X10
	701 Move [X21+24], W9
	702 Move [X8+32], X23
	703 Move X8, [X9+32]
	704 Move X8, [X8+192]
	705 Move X2, [X8+112]
	706 Move X0, X21
	707 Move X1, X23
	708 Call List`1<Object>.AddWithResize, X0, X1
	709 Move X8, 0x22AC000
	710 Move X8, [X8+576]
	711 Add X0, X31, 32
	712 Move X1, [X8]
	713 Call Enumerator<Object, Object>.Dispose, X0
	714 Move X0, [X20+200]
	715 Compare X0, 0
	716 JumpIfEqual {596}
	717 Move X1, X21
	718 Call LobbyCallbacksContainer.OnRoomListUpdate, X0, X1
	719 Move X0, [X20+184]
	720 Move [X20+312], X31
	721 Compare X0, 0
	722 JumpIfEqual {596}
	723 Move X1, X23
	724 Call MatchMakingCallbacksContainer.OnFriendListUpdate, X0, X1
	725 Move X21, [X20+336]
	726 Compare X21, 0
	727 JumpIfNotEqual {738}
	728 Move X8, 0x22AC000
	729 Move X8, [X8+776]
	730 NotImplemented "Instruction LDRH not yet implemented."
	731 Move X0, [X8]
	732 Call 0x1C17F10
	733 Move W1, W22
	734 Move X2, X31
	735 Move X21, X0
	736 Call RegionHandler..ctor, X0, X1
	737 Move [X20+336], X21
	738 Compare X21, 0
	739 JumpIfEqual {596}
	740 Move W8, [X21+84]
	741 Compare W8, 0
	742 JumpIfEqual {812}
	743 Move X9, 0x22AC000
	744 Move X8, [X20]
	745 Move X9, [X9+832]
	746 Move W1, 2
	747 Move X0, X20
	748 Move X3, [X8+544]
	749 Move X2, [X9]
	750 Move X9, [X8+536]
	751 NotImplemented "Instruction BLR not yet implemented."
	752 Move X0, X21
	753 Move X1, X31
	754 Call Int16.ToString, X0
	755 Move X8, 0x22AC000
	756 Move X3, [X19+24]
	757 Move X8, [X8+800]
	758 Move X9, 0x22A7000
	759 Move X9, [X9+2344]
	760 Move X1, X0
	761 Move X8, [X8]
	762 Move X4, X31
	763 Move X2, [X9]
	764 Move X0, X8
	765 Call String.Concat, X0, X1, X2, X3
	766 Move X8, [X20]
	767 Move X2, X0
	768 Move W1, 1
	769 Move X0, X20
	770 Move X9, [X8+536]
	771 Move X3, [X8+544]
	772 NotImplemented "Instruction BLR not yet implemented."
	773 Move W1, 11
	774 Move X0, X20
	775 Call LoadBalancingClient.Disconnect, X0, X1
	776 Move X21, X31
	777 Move X0, X21
	778 Move X1, X31
	779 Call String.IsNullOrEmpty, X0
	780 Move TEMP, X0
	781 And TEMP, TEMP, 1
	782 Compare TEMP, 1
	783 JumpIfEqual {788}
	784 Move X8, [X20+296]
	785 Compare X8, 0
	786 JumpIfEqual {596}
	787 Move [X8+16], X21
	788 Move X0, X20
	789 Call LoadBalancingClient.DisconnectToReconnect, X0
	790 Move X8, [X20+168]
	791 Compare X8, 0
	792 JumpIfEqual {798}
	793 Move X9, [X8+24]
	794 Move X0, [X8+64]
	795 Move X2, [X8+40]
	796 Move X1, X19
	797 NotImplemented "Instruction BLR not yet implemented."
	798 Move X20, [X31+144]
	799 Move X19, [X31+152]
	800 Move X22, [X31+128]
	801 Move X21, [X31+136]
	802 Move X24, [X31+112]
	803 Move X23, [X31+120]
	804 Move X26, [X31+96]
	805 Move X25, [X31+104]
	806 Move X28, [X31+80]
	807 Move X27, [X31+88]
	808 Move X29, [X31+64]
	809 Move X30, [X31+72]
	810 Add X31, X31, 160
	811 Return 
	812 Move X0, X21
	813 Move X1, X19
	814 Move X2, X31
	815 Call RegionHandler.SetRegions, X0, X1
	816 Move X0, [X20+176]
	817 Compare X0, 0
	818 JumpIfEqual {596}
	819 Move X1, [X20+336]
	820 Call ConnectionCallbacksContainer.OnRegionListReceived, X0, X1
	821 Move W8, [X20+360]
	822 Compare W8, 0
	823 JumpIfEqual {790}
	824 Move X8, 0x22AC000
	825 Move X21, [X20+336]
	826 Move X8, [X8+688]
	827 Move X0, [X8]
	828 Call 0x1C17F10
	829 Move X8, 0x22AC000
	830 Move X8, [X8+760]
	831 Move X1, X20
	832 Move X3, X31
	833 Move X22, X0
	834 Move X2, [X8]
	835 Call Action`1<Object>..ctor, X0, X1, X2
	836 Compare X21, 0
	837 JumpIfEqual {596}
	838 Move X2, [X20+344]
	839 Move X0, X21
	840 Move X1, X22
	841 Move X3, X31
	842 Call RegionHandler.PingMinimumOfRegions, X0, X1, X2
	843 Move W8, 14
	844 Move X0, [X20+176]
	845 Move W8, 12
	846 Move [X20+224], W8
	847 Compare X0, 0
	848 JumpIfEqual {596}
	849 Move X1, [X19+24]
	850 Call ConnectionCallbacksContainer.OnCustomAuthenticationFailed, X0, X1
	851 Move W8, 15
	852 Move W9, 0x7FFF
	853 NotImplemented "Instruction CMP not yet implemented."
	854 Move W8, 11
	855 Move X1, X31
	856 Move X8, 0x22AC000
	857 Move X8, [X8+864]
	858 Move X2, X31
	859 Move X0, [X8]
	860 Call String.Format, X0, X1
	861 Move X8, [X20]
	862 Move X2, X0
	863 Move W1, 3
	864 Move X0, X20
	865 Move X9, [X8+536]
	866 Move X3, [X8+544]
	867 NotImplemented "Instruction BLR not yet implemented."
	868 Move X0, [X19+32]
	869 Compare X0, 0
	870 JumpIfEqual {596}
	871 Move W1, 202
	872 Move X2, X31
	873 Call ParameterDictionary.ContainsKey, X0, X1
	874 Move TEMP, X0
	875 And TEMP, TEMP, 1
	876 Compare TEMP, 1
	877 JumpIfNotEqual {917}
	878 Move X0, [X19+32]
	879 Compare X0, 0
	880 JumpIfEqual {596}
	881 Move W1, 202
	882 Move X2, X31
	883 Call ParameterDictionary.get_Item, X0, X1
	884 Move X8, X0
	885 Compare X0, 0
	886 JumpIfEqual {892}
	887 Move X9, 0x22A5000
	888 Move X9, [X9+632]
	889 Move X1, [X9]
	890 Move X9, [X8]
	891 NotImplemented "Instruction CMP not yet implemented."
	892 Move X0, [X20+264]
	893 Compare X0, 0
	894 JumpIfEqual {596}
	895 Move X1, X8
	896 Move X2, X31
	897 Call Player.set_NickName, X0, X1
	898 Move X0, [X20+264]
	899 Compare X0, 0
	900 JumpIfEqual {596}
	901 Move X1, X31
	902 Call Player.get_NickName, X0
	903 Move X8, 0x22AC000
	904 Move X8, [X8+792]
	905 Move X1, X0
	906 Move X2, X31
	907 Move X8, [X8]
	908 Move X0, X8
	909 Call String.Format, X0, X1
	910 Move X8, [X20]
	911 Move X2, X0
	912 Move W1, 3
	913 Move X0, X20
	914 Move X9, [X8+536]
	915 Move X3, [X8+544]
	916 NotImplemented "Instruction BLR not yet implemented."
	917 Move X0, [X19+32]
	918 Compare X0, 0
	919 JumpIfEqual {596}
	920 Move W1, 192
	921 Move X2, X31
	922 Call ParameterDictionary.ContainsKey, X0, X1
	923 Move TEMP, X0
	924 And TEMP, TEMP, 1
	925 Compare TEMP, 1
	926 JumpIfNotEqual {950}
	927 Move X0, [X19+32]
	928 Compare X0, 0
	929 JumpIfEqual {596}
	930 Move W1, 192
	931 Move X2, X31
	932 Call ParameterDictionary.get_Item, X0, X1
	933 Move X8, X0
	934 Compare X0, 0
	935 JumpIfEqual {947}
	936 Move X10, 0x22AC000
	937 Move X10, [X10+696]
	938 Move X9, [X8]
	939 Move X1, [X10]
	940 Move W11, [X9+304]
	941 Move W10, [X1+304]
	942 NotImplemented "Instruction CMP not yet implemented."
	943 Move X9, [X9+200]
	944 Add X9, X9, X10
	945 NotImplemented "Instruction LDUR not yet implemented."
	946 NotImplemented "Instruction CMP not yet implemented."
	947 Move X0, X20
	948 Move X1, X8
	949 Call LoadBalancingClient.SetupEncryption, X0, X1
	950 Move W8, [X20+128]
	951 Compare W8, 0
	952 JumpIfEqual {985}
	953 NotImplemented "Instruction CMP not yet implemented."
	954 NotImplemented "Instruction CMP not yet implemented."
	955 Move W1, 196
	956 Move X0, X19
	957 Move X2, X31
	958 Call OperationResponse.get_Item, X0, X1
	959 Compare X0, 0
	960 JumpIfEqual {1077}
	961 Move X8, 0x22A5000
	962 Move X8, [X8+632]
	963 Move X9, [X0]
	964 Move X8, [X8]
	965 NotImplemented "Instruction CMP not yet implemented."
	966 NotImplemented "Instruction CSEL not yet implemented."
	967 Move W1, [X20+144]
	968 NotImplemented "Instruction CMP not yet implemented."
	969 Move X8, [X20+152]
	970 Move W9, 8
	971 Move [X20+144], W9
	972 Compare X8, 0
	973 JumpIfEqual {979}
	974 Move X9, [X8+24]
	975 Move X0, [X8+64]
	976 Move X3, [X8+40]
	977 Move W2, 8
	978 NotImplemented "Instruction BLR not yet implemented."
	979 Move X1, [X20+296]
	980 Compare X1, 0
	981 JumpIfEqual {596}
	982 Move W8, [X1+49]
	983 NotImplemented "Instruction CMP not yet implemented."
	984 Move [X1+40], X31
	985 Move W1, [X20+144]
	986 NotImplemented "Instruction CMP not yet implemented."
	987 Move X8, [X20+152]
	988 Move W9, 15
	989 Move [X20+144], W9
	990 Compare X8, 0
	991 JumpIfEqual {997}
	992 Move X9, [X8+24]
	993 Move X0, [X8+64]
	994 Move X3, [X8+40]
	995 Move W2, 15
	996 NotImplemented "Instruction BLR not yet implemented."
	997 Move X1, [X20+304]
	998 Compare X1, 0
	999 JumpIfEqual {1062}
	1000 Move X0, X20
	1001 Call LoadBalancingClient.CallbackRoomEnterFailed, X0, X1
	1002 Move [X20+304], X31
	1003 Move X8, 0x22AB000
	1004 Move X8, [X8+3488]
	1005 Move X0, [X8]
	1006 Call 0x1C17F10
	1007 Move X1, X31
	1008 Move X21, X0
	1009 Call Hashtable..ctor, X0
	1010 Move X8, [X20+264]
	1011 Compare X8, 0
	1012 JumpIfEqual {596}
	1013 Move X9, 0x22AB000
	1014 Move X9, [X9+3480]
	1015 Move X22, [X8+56]
	1016 Move X0, [X9]
	1017 Move W9, [X0+224]
	1018 Compare W9, 0
	1019 JumpIfNotEqual {1021}
	1020 Call 0x1C17DFC
	1021 Move X0, X21
	1022 Move X1, X22
	1023 Call Extensions.Merge, X0, X1
	1024 Move X0, [X20+264]
	1025 Compare X0, 0
	1026 JumpIfEqual {596}
	1027 Move X1, X31
	1028 Call Player.get_NickName, X0
	1029 Move X1, X31
	1030 Call String.IsNullOrEmpty, X0
	1031 Move TEMP, X0
	1032 And TEMP, TEMP, 1
	1033 Compare TEMP, 1
	1034 JumpIfEqual {1047}
	1035 Move X0, [X20+264]
	1036 Compare X0, 0
	1037 JumpIfEqual {596}
	1038 Move X1, X31
	1039 Call Player.get_NickName, X0
	1040 Compare X21, 0
	1041 JumpIfEqual {596}
	1042 Move X2, X0
	1043 Move W1, 255
	1044 Move X0, X21
	1045 Move X3, X31
	1046 Call Hashtable.set_Item, X0, X1, X2
	1047 Move X1, [X20+296]
	1048 Compare X1, 0
	1049 JumpIfEqual {596}
	1050 Move [X1+40], X21
	1051 Move W8, 1
	1052 Move [X1+48], W8
	1053 Move W8, [X20+292]
	1054 Subtract W9, W8, 1
	1055 NotImplemented "Instruction CMP not yet implemented."
	1056 Move X0, [X20+16]
	1057 Compare X0, 0
	1058 JumpIfEqual {596}
	1059 Move X8, [X0]
	1060 Move X9, [X8+648]
	1061 Move X2, [X8+656]
	1062 Move X0, [X20+176]
	1063 Compare X0, 0
	1064 JumpIfEqual {596}
	1065 Call ConnectionCallbacksContainer.OnConnectedToMaster, X0
	1066 Move W8, [X20+56]
	1067 Compare W8, 0
	1068 JumpIfEqual {1154}
	1069 Move X0, [X20+16]
	1070 Compare X0, 0
	1071 JumpIfEqual {596}
	1072 Move X8, [X0]
	1073 Move W1, [X20+248]
	1074 Move X9, [X8+808]
	1075 Move X2, [X8+816]
	1076 NotImplemented "Instruction BLR not yet implemented."
	1077 Move X21, X31
	1078 Move X0, X21
	1079 Move X1, X31
	1080 Call String.IsNullOrEmpty, X0
	1081 Move TEMP, X0
	1082 And TEMP, TEMP, 1
	1083 Compare TEMP, 1
	1084 JumpIfEqual {1086}
	1085 Move [X20+328], X21
	1086 Move W1, 230
	1087 Move X0, X19
	1088 Move X2, X31
	1089 Call OperationResponse.get_Item, X0, X1
	1090 Compare X0, 0
	1091 JumpIfEqual {1098}
	1092 Move X8, 0x22A4000
	1093 Move X8, [X8+632]
	1094 Move X9, [X0]
	1095 Move X8, [X8]
	1096 NotImplemented "Instruction CMP not yet implemented."
	1097 NotImplemented "Instruction CSEL not yet implemented."
	1098 Move X21, X31
	1099 NotImplemented "Instruction LDRH not yet implemented."
	1100 Move [X20+112], X21
	1101 Compare W22, 0
	1102 JumpIfEqual {1114}
	1103 Move X8, 0x22AA000
	1104 Move X8, [X8+2856]
	1105 Move X0, [X8]
	1106 Move W8, [X0+224]
	1107 Compare W8, 0
	1108 JumpIfNotEqual {1110}
	1109 Call 0x1C17DFC
	1110 Move X0, X21
	1111 Move W1, W22
	1112 Call LoadBalancingClient.ReplacePortWithAlternative, X0, X1
	1113 Move [X20+112], X0
	1114 Move W8, [X20+56]
	1115 NotImplemented "Instruction CMP not yet implemented."
	1116 NotImplemented "Instruction LDRH not yet implemented."
	1117 And W31, W8, 255
	1118 NotImplemented "Instruction STRH not yet implemented."
	1119 Move X9, 0x22AB000
	1120 Move X9, [X9+768]
	1121 Add X1, X31, 8
	1122 NotImplemented "Instruction STRH not yet implemented."
	1123 Move X0, [X9]
	1124 Call 0x1C17E04
	1125 Move X8, 0x22AB000
	1126 Move X8, [X8+840]
	1127 Move X1, X0
	1128 Move X2, X31
	1129 Move X8, [X8]
	1130 Move X0, X8
	1131 Call String.Format, X0, X1
	1132 Move X8, [X20]
	1133 Move X2, X0
	1134 Move W1, 3
	1135 Move X0, X20
	1136 Move X9, [X8+536]
	1137 Move X3, [X8+544]
	1138 NotImplemented "Instruction BLR not yet implemented."
	1139 Move X9, 0x22AB000
	1140 Move X21, [X20+16]
	1141 NotImplemented "Instruction LDRH not yet implemented."
	1142 Move X9, [X9+64]
	1143 Add X0, X31, 60
	1144 NotImplemented "Instruction STRH not yet implemented."
	1145 Move X1, [X9]
	1146 Call Nullable`1<ByteEnum>.get_Value, X0
	1147 Compare X21, 0
	1148 JumpIfEqual {596}
	1149 Move [X21+132], W0
	1150 NotImplemented "Instruction STRH not yet implemented."
	1151 NotImplemented "Instruction STRH not yet implemented."
	1152 Move X0, X20
	1153 Call LoadBalancingClient.DisconnectToReconnect, X0
	1154 Move W1, 245
	1155 Move X0, X19
	1156 Move X2, X31
	1157 Call OperationResponse.get_Item, X0, X1
	1158 Compare X0, 0
	1159 JumpIfEqual {790}
	1160 Move X10, 0x22A2000
	1161 Move X10, [X10+1824]
	1162 Move X9, [X0]
	1163 Move X8, X0
	1164 Move X1, [X10]
	1165 Move W11, [X9+304]
	1166 Move W10, [X1+304]
	1167 NotImplemented "Instruction CMP not yet implemented."
	1168 Move X9, [X9+200]
	1169 Add X9, X9, X10
	1170 NotImplemented "Instruction LDUR not yet implemented."
	1171 NotImplemented "Instruction CMP not yet implemented."
	1172 Move X0, [X20+176]
	1173 Compare X0, 0
	1174 JumpIfEqual {596}
	1175 Move X1, X8
	1176 Call ConnectionCallbacksContainer.OnCustomAuthenticationResponse, X0, X1
	1177 Compare W8, 0
	1178 JumpIfNotEqual {790}
	1179 Move X0, [X20+16]
	1180 Compare X0, 0
	1181 JumpIfEqual {596}
	1182 Move X8, [X0]
	1183 Move X9, [X8+632]
	1184 Move X2, [X8+640]
	1185 NotImplemented "Instruction BLR not yet implemented."
	1186 Call 0x1C17F28
	1187 Move X0, X25
	1188 Call 0x1C181E0
	1189 Call 0x1C17F20
	1190 Call 0x1C17F20
	1191 Move X0, X24
	1192 Call 0x1C181E0
	1193 Move X0, X8
	1194 Call 0x1C181E0
	1195 Move X0, X22
	1196 Call 0x1C181E0
	1197 Move X0, X21
	1198 Call 0x1C181E0
	1199 Move X22, X0
	1200 NotImplemented "Instruction CMP not yet implemented."
	1201 Move X0, X22
	1202 Call 0x3EB2AD0
	1203 Move X23, [X0]
	1204 Call 0x3EB2AE0
	1205 Move X8, 0x22AB000
	1206 Move X8, [X8+576]
	1207 Add X0, X31, 32
	1208 Move X1, [X8]
	1209 Call Enumerator<Object, Object>.Dispose, X0
	1210 Compare X23, 0
	1211 JumpIfEqual {714}
	1212 Move X0, X23
	1213 Call 0x1C17F18
	1214 Move X23, X31
	1215 Move X22, X0
	1216 Move X8, 0x22AB000
	1217 Move X8, [X8+576]
	1218 Move X1, [X8]
	1219 Add X0, X31, 32
	1220 Call Enumerator<Object, Object>.Dispose, X0
	1221 Compare X23, 0
	1222 JumpIfNotEqual {1225}
	1223 Move X0, X22
	1224 Call 0x1D2D690
	1225 Move X0, X23
	1226 Call 0x1C17F18
	1227 Call 0x1991590

Method: System.Void OnStatusChanged(ExitGames.Client.Photon.StatusCode statusCode)

Disassembly:
	0x01E53500 MOV X0, X19
	0x01E53504 BL 0x1D2C690
	0x01E53508 MOV X0, X20
	0x01E5350C BL 0x1C16F18
	0x01E53510 BL 0x1990590
	0x01E53514 SUB X31, X31, 0x60
	0x01E53518 STR X30, [X31 + 0x20]
	0x01E5351C STP X24, X23, [X31 + 0x30]
	0x01E53520 STP X22, X21, [X31 + 0x40]
	0x01E53524 STP X20, X19, [X31 + 0x50]
	0x01E53528 ADRP X21, 0x2586000
	0x01E5352C LDRB W8, [X21 + 0x27]
	0x01E53530 MOV W19, W1
	0x01E53534 MOV X20, X0
	0x01E53538 TBNZ X8, 0x0, 0x1E53580
	0x01E5353C ADRP X0, 0x22A9000
	0x01E53540 LDR X0, [X0 + 0x368]
	0x01E53544 BL 0x1C16CF4
	0x01E53548 ADRP X0, 0x22A9000
	0x01E5354C LDR X0, [X0 + 0x370]
	0x01E53550 BL 0x1C16CF4
	0x01E53554 ADRP X0, 0x22A9000
	0x01E53558 LDR X0, [X0 + 0x378]
	0x01E5355C BL 0x1C16CF4
	0x01E53560 ADRP X0, 0x22A9000
	0x01E53564 LDR X0, [X0 + 0x380]
	0x01E53568 BL 0x1C16CF4
	0x01E5356C ADRP X0, 0x22A9000
	0x01E53570 LDR X0, [X0 + 0x388]
	0x01E53574 BL 0x1C16CF4
	0x01E53578 MOVZ W8, 0x1
	0x01E5357C STRB W8, [X21 + 0x27]
	0x01E53580 STP X31, X31, [X31 + 0x8]
	0x01E53584 STR X31, [X31 + 0x18]
	0x01E53588 LDR X0, [X20 + 0x28]
	0x01E5358C CBZ X0, 0x1E53668
	0x01E53590 ADRP X24, 0x22A9000
	0x01E53594 ADRP X22, 0x22A9000
	0x01E53598 ADRP X23, 0x22A9000
	0x01E5359C ADRP X21, 0x22A9000
	0x01E535A0 LDR X24, [X24 + 0x388]
	0x01E535A4 LDR X22, [X22 + 0x370]
	0x01E535A8 LDR X23, [X23 + 0x380]
	0x01E535AC LDR X21, [X21 + 0x368]
	0x01E535B0 BL 0x1E54C74
	0x01E535B4 LDR X1, [X24]
	0x01E535B8 ADD X8, X31, 0x8
	0x01E535BC MOV X0, X20
	0x01E535C0 BL 0x301CB58
	0x01E535C4 LDR X1, [X22]
	0x01E535C8 ADD X0, X31, 0x8
	0x01E535CC BL 0x2BC4350
	0x01E535D0 TBZ X0, 0x0, 0x1E53640
	0x01E535D4 LDR X20, [X31 + 0x18]
	0x01E535D8 CBZ X20, 0x1E53664
	0x01E535DC LDR X8, [X20]
	0x01E535E0 LDR X1, [X23]
	0x01E535E4 LDRH W9, [X8 + 0x12E]
	0x01E535E8 CBZ X9, 0x1E5360C
	0x01E535EC LDR X10, [X8 + 0xB0]
	0x01E535F0 ADD X10, X10, 0x8
	0x01E535F4 LDUR X11, [X10 - 0x8]
	0x01E535F8 CMP X11, X1
	0x01E535FC B.EQ 0x1E5361C
	0x01E53600 SUBS X9, X9, 0x1
	0x01E53604 ADD X10, X10, 0x10
	0x01E53608 B.NE 0x1E535F4
	0x01E5360C MOVZ W2, 0x2
	0x01E53610 MOV X0, X20
	0x01E53614 BL 0x1C5C788
	0x01E53618 B 0x1E5362C
	0x01E5361C LDR W9, [X10]
	0x01E53620 ADD W9, W9, 0x2
	0x01E53624 ADD X8, X8, W9, 0x4, SXTW
	0x01E53628 ADD X0, X8, 0x138
	0x01E5362C LDP X8, X2, [X0]
	0x01E53630 MOV X0, X20
	0x01E53634 MOV W1, W19
	0x01E53638 BLR X8
	0x01E5363C B 0x1E535C4
	0x01E53640 LDR X1, [X21]
	0x01E53644 ADD X0, X31, 0x8
	0x01E53648 BL 0x2BC434C
	0x01E5364C LDP X20, X19, [X31 + 0x50]
	0x01E53650 LDP X22, X21, [X31 + 0x40]
	0x01E53654 LDP X24, X23, [X31 + 0x30]
	0x01E53658 LDR X30, [X31 + 0x20]
	0x01E5365C ADD X31, X31, 0x60
	0x01E53660 RET
	0x01E53664 BL 0x1C16F20
	0x01E53668 BL 0x1C16F20
	0x01E5366C B 0x1E53674
	0x01E53670 B 0x1E53674
	0x01E53674 MOV X19, X0
	0x01E53678 CMP W1, 0x1
	0x01E5367C B.NE 0x1E536A8
	0x01E53680 MOV X0, X19
	0x01E53684 BL 0x3EB1AD0
	0x01E53688 LDR X20, [X0]
	0x01E5368C BL 0x3EB1AE0
	0x01E53690 LDR X1, [X21]
	0x01E53694 ADD X0, X31, 0x8
	0x01E53698 BL 0x2BC434C
	0x01E5369C CBZ X20, 0x1E5364C
	0x01E536A0 MOV X0, X20
	0x01E536A4 BL 0x1C16F18
	0x01E536A8 MOV X20, X31
	0x01E536AC B 0x1E536B4
	0x01E536B0 MOV X19, X0
	0x01E536B4 LDR X1, [X21]
	0x01E536B8 ADD X0, X31, 0x8
	0x01E536BC BL 0x2BC434C
	0x01E536C0 CBNZ X20, 0x1E536CC
	0x01E536C4 MOV X0, X19
	0x01E536C8 BL 0x1D2C690
	0x01E536CC MOV X0, X20
	0x01E536D0 BL 0x1C16F18
	0x01E536D4 BL 0x1990590
	0x01E536D8 SUB X31, X31, 0xB0
	0x01E536DC STP X29, X30, [X31 + 0x50]
	0x01E536E0 STP X28, X27, [X31 + 0x60]
	0x01E536E4 STP X26, X25, [X31 + 0x70]
	0x01E536E8 STP X24, X23, [X31 + 0x80]
	0x01E536EC STP X22, X21, [X31 + 0x90]
	0x01E536F0 STP X20, X19, [X31 + 0xA0]
	0x01E536F4 ADRP X19, 0x2586000
	0x01E536F8 LDRB W8, [X19 + 0x19]
	0x01E536FC MOV X20, X1
	0x01E53700 MOV X24, X0
	0x01E53704 TBNZ X8, 0x0, 0x1E53818
	0x01E53708 ADRP X0, 0x22A4000
	0x01E5370C LDR X0, [X0 + 0xF98]
	0x01E53710 BL 0x1C16CF4
	0x01E53714 ADRP X0, 0x22A0000
	0x01E53718 LDR X0, [X0 + 0xB58]
	0x01E5371C BL 0x1C16CF4
	0x01E53720 ADRP X0, 0x22A8000
	0x01E53724 LDR X0, [X0 + 0xC98]
	0x01E53728 BL 0x1C16CF4
	0x01E5372C ADRP X0, 0x22A0000
	0x01E53730 LDR X0, [X0 + 0x618]
	0x01E53734 BL 0x1C16CF4
	0x01E53738 ADRP X0, 0x22A9000
	0x01E5373C LDR X0, [X0 + 0x238]
	0x01E53740 BL 0x1C16CF4
	0x01E53744 ADRP X0, 0x22A9000
	0x01E53748 LDR X0, [X0 + 0x240]
	0x01E5374C BL 0x1C16CF4
	0x01E53750 ADRP X0, 0x22A9000
	0x01E53754 LDR X0, [X0 + 0x248]
	0x01E53758 BL 0x1C16CF4
	0x01E5375C ADRP X0, 0x22A9000
	0x01E53760 LDR X0, [X0 + 0x250]
	0x01E53764 BL 0x1C16CF4
	0x01E53768 ADRP X0, 0x22A9000
	0x01E5376C LDR X0, [X0 + 0x480]
	0x01E53770 BL 0x1C16CF4
	0x01E53774 ADRP X0, 0x22A8000
	0x01E53778 LDR X0, [X0 + 0xDA0]
	0x01E5377C BL 0x1C16CF4
	0x01E53780 ADRP X0, 0x22A1000
	0x01E53784 LDR X0, [X0 + 0xE58]
	0x01E53788 BL 0x1C16CF4
	0x01E5378C ADRP X0, 0x22A0000
	0x01E53790 LDR X0, [X0 + 0x758]
	0x01E53794 BL 0x1C16CF4
	0x01E53798 ADRP X0, 0x22A9000
	0x01E5379C LDR X0, [X0 + 0x258]
	0x01E537A0 BL 0x1C16CF4
	0x01E537A4 ADRP X0, 0x22A9000
	0x01E537A8 LDR X0, [X0 + 0x488]
	0x01E537AC BL 0x1C16CF4
	0x01E537B0 ADRP X0, 0x22A9000
	0x01E537B4 LDR X0, [X0 + 0x2C8]
	0x01E537B8 BL 0x1C16CF4
	0x01E537BC ADRP X0, 0x22A9000
	0x01E537C0 LDR X0, [X0 + 0x490]
	0x01E537C4 BL 0x1C16CF4
	0x01E537C8 ADRP X0, 0x22A9000
	0x01E537CC LDR X0, [X0 + 0x2E0]
	0x01E537D0 BL 0x1C16CF4
	0x01E537D4 ADRP X0, 0x22A9000
	0x01E537D8 LDR X0, [X0 + 0x2E8]
	0x01E537DC BL 0x1C16CF4
	0x01E537E0 ADRP X0, 0x22A9000
	0x01E537E4 LDR X0, [X0 + 0x310]
	0x01E537E8 BL 0x1C16CF4
	0x01E537EC ADRP X0, 0x22A0000
	0x01E537F0 LDR X0, [X0 + 0xAC8]
	0x01E537F4 BL 0x1C16CF4
	0x01E537F8 ADRP X0, 0x22A2000
	0x01E537FC LDR X0, [X0 + 0x278]
	0x01E53800 BL 0x1C16CF4
	0x01E53804 ADRP X0, 0x22A9000
	0x01E53808 LDR X0, [X0 + 0x498]
	0x01E5380C BL 0x1C16CF4
	0x01E53810 MOVZ W8, 0x1
	0x01E53814 STRB W8, [X19 + 0x19]
	0x01E53818 STP X31, X31, [X31 + 0x30]
	0x01E5381C STR X31, [X31 + 0x40]
	0x01E53820 CBZ X20, 0x1E5426C
	0x01E53824 MOV X0, X20
	0x01E53828 MOV X1, X31
	0x01E5382C BL 0x3505B04
	0x01E53830 LDR X8, [X24 + 0x110]
	0x01E53834 MOV W22, W0
	0x01E53838 CBZ X8, 0x1E5385C
	0x01E5383C LDR X9, [X8]
	0x01E53840 MOV X0, X8
	0x01E53844 MOV W1, W22
	0x01E53848 MOV W2, W31
	0x01E5384C LDP X10, X3, [X9 + 0x1D8]
	0x01E53850 BLR X10
	0x01E53854 MOV X21, X0
	0x01E53858 B 0x1E53860
	0x01E5385C MOV X21, X31
	0x01E53860 LDRB W9, [X20 + 0x10]
	0x01E53864 SUB W8, W9, 0xDF
	0x01E53868 CMP W8, 0x7
	0x01E5386C B.HI 0x1E53A40
	0x01E53870 ADRP X9, 0xFFFFFFFFFECDA000
	0x01E53874 ADD X9, X9, 0xB16
	0x01E53878 ADR X10, 0x10
	0x01E5387C LDRH W11, [X9, X8, LSL #1]
	0x01E53880 ADD X10, X10, X11, 0x2, LSL
	0x01E53884 BR X10
	0x01E53888 ADRP X8, 0x22A9000
	0x01E5388C LDR X8, [X8 + 0x2E8]
	0x01E53890 LDR X0, [X8]
	0x01E53894 BL 0x1C16F10
	0x01E53898 ADRP X8, 0x22A9000
	0x01E5389C LDR X8, [X8 + 0x2E0]
	0x01E538A0 MOV X21, X0
	0x01E538A4 LDR X1, [X8]
	0x01E538A8 BL 0x301B7C4
	0x01E538AC MOVZ W1, 0xDE
	0x01E538B0 MOV X0, X20
	0x01E538B4 MOV X2, X31
	0x01E538B8 BL 0x3505ABC
	0x01E538BC CBZ X0, 0x1E5426C
	0x01E538C0 ADRP X26, 0x22A8000
	0x01E538C4 LDR X26, [X26 + 0xDA0]
	0x01E538C8 LDR X8, [X0]
	0x01E538CC MOV X22, X0
	0x01E538D0 LDR X1, [X26]
	0x01E538D4 LDRB W10, [X8 + 0x130]
	0x01E538D8 LDRB W9, [X1 + 0x130]
	0x01E538DC CMP W10, W9
	0x01E538E0 B.CC 0x1E5428C
	0x01E538E4 LDR X8, [X8 + 0xC8]
	0x01E538E8 ADD X8, X8, X9, 0x3, LSL
	0x01E538EC LDUR X8, [X8 - 0x8]
	0x01E538F0 CMP X8, X1
	0x01E538F4 B.NE 0x1E5428C
	0x01E538F8 STR X24, [X31 + 0x10]
	0x01E538FC ADRP X8, 0x22A9000
	0x01E53900 LDR X8, [X8 + 0x238]
	0x01E53904 MOV X0, X22
	0x01E53908 LDR X1, [X8]
	0x01E5390C BL 0x2AA4E98
	0x01E53910 CBZ X0, 0x1E5426C
	0x01E53914 ADRP X8, 0x22A9000
	0x01E53918 LDR X8, [X8 + 0x258]
	0x01E5391C LDR X1, [X8]
	0x01E53920 ADD X8, X31, 0x18
	0x01E53924 BL 0x2EC7020
	0x01E53928 LDUR V0, [X31 + 0x18]
	0x01E5392C LDR X8, [X31 + 0x28]
	0x01E53930 ADRP X27, 0x22A9000
	0x01E53934 ADRP X28, 0x22A2000
	0x01E53938 ADRP X29, 0x22A9000
	0x01E5393C LDR X27, [X27 + 0x248]
	0x01E53940 LDR X28, [X28 + 0x278]
	0x01E53944 LDR X29, [X29 + 0x310]
	0x01E53948 STR V0, [X31 + 0x3]
	0x01E5394C STR X8, [X31 + 0x40]
	0x01E53950 ADRP X19, 0x22A9000
	0x01E53954 LDR X19, [X19 + 0x2C8]
	0x01E53958 LDR X1, [X27]
	0x01E5395C ADD X0, X31, 0x30
	0x01E53960 BL 0x2C0B090
	0x01E53964 TBZ X0, 0x0, 0x1E53A98
	0x01E53968 LDR X24, [X31 + 0x40]
	0x01E5396C CBZ X24, 0x1E53980
	0x01E53970 LDR X1, [X28]
	0x01E53974 LDR X8, [X24]
	0x01E53978 CMP X8, X1
	0x01E5397C B.NE 0x1E54284
	0x01E53980 MOV X0, X22
	0x01E53984 MOV X1, X24
	0x01E53988 MOV X2, X31
	0x01E5398C BL 0x34ED878
	0x01E53990 MOV X25, X0
	0x01E53994 LDR X0, [X29]
	0x01E53998 BL 0x1C16F10
	0x01E5399C MOV X23, X0
	0x01E539A0 CBZ X25, 0x1E539D0
	0x01E539A4 LDR X8, [X25]
	0x01E539A8 LDR X1, [X26]
	0x01E539AC LDRB W10, [X8 + 0x130]
	0x01E539B0 LDRB W9, [X1 + 0x130]
	0x01E539B4 CMP W10, W9
	0x01E539B8 B.CC 0x1E54274
	0x01E539BC LDR X8, [X8 + 0xC8]
	0x01E539C0 ADD X8, X8, X9, 0x3, LSL
	0x01E539C4 LDUR X8, [X8 - 0x8]
	0x01E539C8 CMP X8, X1
	0x01E539CC B.NE 0x1E54274
	0x01E539D0 MOV X0, X23
	0x01E539D4 MOV X1, X24
	0x01E539D8 MOV X2, X25
	0x01E539DC MOV X3, X31
	0x01E539E0 BL 0x1E5EC7C
	0x01E539E4 CBZ X21, 0x1E5427C
	0x01E539E8 LDR W10, [X21 + 0x1C]
	0x01E539EC LDR X8, [X21 + 0x10]
	0x01E539F0 LDR X9, [X19]
	0x01E539F4 ADD W10, W10, 0x1
	0x01E539F8 STR W10, [X21 + 0x1C]
	0x01E539FC CBZ X8, 0x1E54280
	0x01E53A00 LDRSW X10, [X21 + 0x18]
	0x01E53A04 LDR W11, [X8 + 0x18]
	0x01E53A08 CMP W10, W11
	0x01E53A0C B.CS 0x1E53A24
	0x01E53A10 ADD W9, W10, 0x1
	0x01E53A14 ADD X8, X8, X10, 0x3, LSL
	0x01E53A18 STR W9, [X21 + 0x18]
	0x01E53A1C STR X23, [X8 + 0x20]
	0x01E53A20 B 0x1E53958
	0x01E53A24 LDR X8, [X9 + 0x20]
	0x01E53A28 LDR X8, [X8 + 0xC0]
	0x01E53A2C LDR X2, [X8 + 0x70]
	0x01E53A30 MOV X0, X21
	0x01E53A34 MOV X1, X23
	0x01E53A38 BL 0x301BF90
	0x01E53A3C B 0x1E53958
	0x01E53A40 SUB W8, W9, 0xFB
	0x01E53A44 CMP W8, 0x4
	0x01E53A48 B.HI 0x1E5421C
	0x01E53A4C ADRP X9, 0xFFFFFFFFFECDA000
	0x01E53A50 ADD X9, X9, 0xB26
	0x01E53A54 ADR X10, 0x10
	0x01E53A58 LDRH W11, [X9, X8, LSL #1]
	0x01E53A5C ADD X10, X10, X11, 0x2, LSL
	0x01E53A60 BR X10
	0x01E53A64 ADRP X8, 0x22A9000
	0x01E53A68 LDR X21, [X24 + 0xD8]
	0x01E53A6C LDR X8, [X8 + 0x480]
	0x01E53A70 LDR X0, [X8]
	0x01E53A74 BL 0x1C16F10
	0x01E53A78 MOV X1, X20
	0x01E53A7C MOV X22, X0
	0x01E53A80 BL 0x1E54A2C
	0x01E53A84 CBZ X21, 0x1E5426C
	0x01E53A88 MOV X0, X21
	0x01E53A8C MOV X1, X22
	0x01E53A90 BL 0x1E54AB4
	0x01E53A94 B 0x1E5421C
	0x01E53A98 ADRP X8, 0x22A9000
	0x01E53A9C LDR X8, [X8 + 0x240]
	0x01E53AA0 ADD X0, X31, 0x30
	0x01E53AA4 LDR X1, [X8]
	0x01E53AA8 BL 0x2C0B08C
	0x01E53AAC LDR X24, [X31 + 0x10]
	0x01E53AB0 LDR X0, [X24 + 0xC8]
	0x01E53AB4 CBZ X0, 0x1E5426C
	0x01E53AB8 MOV X1, X21
	0x01E53ABC BL 0x1E51C48
	0x01E53AC0 B 0x1E5421C
	0x01E53AC4 MOVZ W1, 0xE5
	0x01E53AC8 MOV X0, X20
	0x01E53ACC MOV X2, X31
	0x01E53AD0 BL 0x3505ABC
	0x01E53AD4 CBZ X0, 0x1E5426C
	0x01E53AD8 ADRP X19, 0x22A0000
	0x01E53ADC LDR X19, [X19 + 0x758]
	0x01E53AE0 LDR X8, [X0]
	0x01E53AE4 LDR X1, [X19]
	0x01E53AE8 LDR X8, [X8 + 0x40]
	0x01E53AEC LDR X9, [X1 + 0x40]
	0x01E53AF0 CMP X8, X9
	0x01E53AF4 B.NE 0x1E5415C
	0x01E53AF8 BL 0x1C16E08
	0x01E53AFC LDR W8, [X0]
	0x01E53B00 MOVZ W1, 0xE4
	0x01E53B04 MOV X0, X20
	0x01E53B08 MOV X2, X31
	0x01E53B0C STR W8, [X24 + 0x11C]
	0x01E53B10 BL 0x3505ABC
	0x01E53B14 CBZ X0, 0x1E5426C
	0x01E53B18 LDR X8, [X0]
	0x01E53B1C LDR X1, [X19]
	0x01E53B20 LDR X8, [X8 + 0x40]
	0x01E53B24 LDR X9, [X1 + 0x40]
	0x01E53B28 CMP X8, X9
	0x01E53B2C B.NE 0x1E5415C
	0x01E53B30 BL 0x1C16E08
	0x01E53B34 LDR W8, [X0]
	0x01E53B38 MOVZ W1, 0xE3
	0x01E53B3C MOV X0, X20
	0x01E53B40 MOV X2, X31
	0x01E53B44 STR W8, [X24 + 0x120]
	0x01E53B48 BL 0x3505ABC
	0x01E53B4C CBZ X0, 0x1E5426C
	0x01E53B50 LDR X8, [X0]
	0x01E53B54 LDR X1, [X19]
	0x01E53B58 LDR X8, [X8 + 0x40]
	0x01E53B5C LDR X9, [X1 + 0x40]
	0x01E53B60 CMP X8, X9
	0x01E53B64 B.NE 0x1E5415C
	0x01E53B68 BL 0x1C16E08
	0x01E53B6C LDR W8, [X0]
	0x01E53B70 STR W8, [X24 + 0x118]
	0x01E53B74 B 0x1E5421C
	0x01E53B78 MOVZ W1, 0xD5
	0x01E53B7C MOV X0, X20
	0x01E53B80 MOV X2, X31
	0x01E53B84 BL 0x3505ABC
	0x01E53B88 ADRP X8, 0x22A0000
	0x01E53B8C LDR X8, [X8 + 0xAC8]
	0x01E53B90 LDR X1, [X8]
	0x01E53B94 BL 0x1C16E00
	0x01E53B98 MOV X21, X0
	0x01E53B9C MOVZ W1, 0xE5
	0x01E53BA0 MOV X0, X20
	0x01E53BA4 MOV X2, X31
	0x01E53BA8 BL 0x3505ABC
	0x01E53BAC ADRP X19, 0x22A1000
	0x01E53BB0 LDR X19, [X19 + 0xE58]
	0x01E53BB4 LDR X1, [X19]
	0x01E53BB8 BL 0x1C16E00
	0x01E53BBC MOV X22, X0
	0x01E53BC0 MOVZ W1, 0xE4
	0x01E53BC4 MOV X0, X20
	0x01E53BC8 MOV X2, X31
	0x01E53BCC BL 0x3505ABC
	0x01E53BD0 LDR X1, [X19]
	0x01E53BD4 BL 0x1C16E00
	0x01E53BD8 MOV X23, X0
	0x01E53BDC MOVZ W1, 0xD4
	0x01E53BE0 MOV X0, X20
	0x01E53BE4 MOV X2, X31
	0x01E53BE8 BL 0x3505ABC
	0x01E53BEC CBZ X0, 0x1E53C28
	0x01E53BF0 ADRP X8, 0x22A8000
	0x01E53BF4 LDR X8, [X8 + 0xC98]
	0x01E53BF8 LDR X9, [X0]
	0x01E53BFC MOV X26, X0
	0x01E53C00 LDR X8, [X8]
	0x01E53C04 LDRB W11, [X9 + 0x130]
	0x01E53C08 LDRB W10, [X8 + 0x130]
	0x01E53C0C CMP W11, W10
	0x01E53C10 B.CC 0x1E53C28
	0x01E53C14 LDR X9, [X9 + 0xC8]
	0x01E53C18 ADD X9, X9, X10, 0x3, LSL
	0x01E53C1C LDUR X9, [X9 - 0x8]
	0x01E53C20 CMP X9, X8
	0x01E53C24 B.EQ 0x1E54260
	0x01E53C28 MOVZ W1, 0xD4
	0x01E53C2C MOV X0, X20
	0x01E53C30 MOV X2, X31
	0x01E53C34 BL 0x3505ABC
	0x01E53C38 ADRP X8, 0x22A0000
	0x01E53C3C LDR X8, [X8 + 0x618]
	0x01E53C40 LDR X1, [X8]
	0x01E53C44 BL 0x1C16E00
	0x01E53C48 MOV X25, X0
	0x01E53C4C MOV X26, X31
	0x01E53C50 MOVZ W9, 0x1
	0x01E53C54 LDR X8, [X24 + 0x100]
	0x01E53C58 CBZ X8, 0x1E5426C
	0x01E53C5C STR W9, [X31 + 0xC]
	0x01E53C60 LDP W2, W9, [X8 + 0x18]
	0x01E53C64 MOV X19, X20
	0x01E53C68 ADD W9, W9, 0x1
	0x01E53C6C CMP W2, 0x1
	0x01E53C70 STP W31, W9, [X8 + 0x18]
	0x01E53C74 B.LT 0x1E53C88
	0x01E53C78 LDR X0, [X8 + 0x10]
	0x01E53C7C MOV W1, W31
	0x01E53C80 MOV X3, X31
	0x01E53C84 BL 0x339FA34
	0x01E53C88 STR X26, [X31]
	0x01E53C8C STR X19, [X31 + 0x10]
	0x01E53C90 CBZ X21, 0x1E5426C
	0x01E53C94 LDR W8, [X21 + 0x18]
	0x01E53C98 MOV X20, X24
	0x01E53C9C CMP W8, 0x1
	0x01E53CA0 B.LT 0x1E53DA4
	0x01E53CA4 MOV X19, X31
	0x01E53CA8 ADD X28, X23, 0x20
	0x01E53CAC ADD X29, X22, 0x20
	0x01E53CB0 ADD X27, X25, 0x20
	0x01E53CB4 ADD X24, X21, 0x20
	0x01E53CB8 ADRP X8, 0x22A9000
	0x01E53CBC LDR X8, [X8 + 0x498]
	0x01E53CC0 LDR X0, [X8]
	0x01E53CC4 BL 0x1C16F10
	0x01E53CC8 MOV X1, X31
	0x01E53CCC MOV X26, X0
	0x01E53CD0 BL 0x1E59780
	0x01E53CD4 LDR W8, [X21 + 0x18]
	0x01E53CD8 CMP X19, X8
	0x01E53CDC B.CS 0x1E54270
	0x01E53CE0 CBZ X26, 0x1E5426C
	0x01E53CE4 LDR X8, [X24, X19, LSL #3]
	0x01E53CE8 STR X8, [X26 + 0x10]
	0x01E53CEC CBZ X25, 0x1E5426C
	0x01E53CF0 LDR W8, [X25 + 0x18]
	0x01E53CF4 CMP X19, X8
	0x01E53CF8 B.CS 0x1E54270
	0x01E53CFC LDRB W8, [X27, X19, LSL]
	0x01E53D00 STRB W8, [X26 + 0x18]
	0x01E53D04 CBZ X22, 0x1E5426C
	0x01E53D08 LDR W8, [X22 + 0x18]
	0x01E53D0C CMP X19, X8
	0x01E53D10 B.CS 0x1E54270
	0x01E53D14 LDR W8, [X29, X19, LSL #2]
	0x01E53D18 STR W8, [X26 + 0x1C]
	0x01E53D1C CBZ X23, 0x1E5426C
	0x01E53D20 LDR W8, [X23 + 0x18]
	0x01E53D24 CMP X19, X8
	0x01E53D28 B.CS 0x1E54270
	0x01E53D2C LDR W8, [X28, X19, LSL #2]
	0x01E53D30 STR W8, [X26 + 0x20]
	0x01E53D34 LDR X0, [X20 + 0x100]
	0x01E53D38 CBZ X0, 0x1E5426C
	0x01E53D3C ADRP X9, 0x22A9000
	0x01E53D40 LDR W10, [X0 + 0x1C]
	0x01E53D44 LDR X8, [X0 + 0x10]
	0x01E53D48 LDR X9, [X9 + 0x488]
	0x01E53D4C ADD W10, W10, 0x1
	0x01E53D50 LDR X9, [X9]
	0x01E53D54 STR W10, [X0 + 0x1C]
	0x01E53D58 CBZ X8, 0x1E5426C
	0x01E53D5C LDRSW X10, [X0 + 0x18]
	0x01E53D60 LDR W11, [X8 + 0x18]
	0x01E53D64 CMP W10, W11
	0x01E53D68 B.CS 0x1E53D80
	0x01E53D6C ADD W9, W10, 0x1
	0x01E53D70 ADD X8, X8, X10, 0x3, LSL
	0x01E53D74 STR W9, [X0 + 0x18]
	0x01E53D78 STR X26, [X8 + 0x20]
	0x01E53D7C B 0x1E53D94
	0x01E53D80 LDR X8, [X9 + 0x20]
	0x01E53D84 MOV X1, X26
	0x01E53D88 LDR X8, [X8 + 0xC0]
	0x01E53D8C LDR X2, [X8 + 0x70]
	0x01E53D90 BL 0x301BF90
	0x01E53D94 LDRSW X8, [X21 + 0x18]
	0x01E53D98 ADD X19, X19, 0x1
	0x01E53D9C CMP X19, X8
	0x01E53DA0 B.LT 0x1E53CB8
	0x01E53DA4 LDR W8, [X31 + 0xC]
	0x01E53DA8 TBNZ X8, 0x0, 0x1E53DB8
	0x01E53DAC LDR X0, [X31]
	0x01E53DB0 MOV X1, X31
	0x01E53DB4 BL 0x34EC900
	0x01E53DB8 MOV X24, X20
	0x01E53DBC LDR X0, [X20 + 0xC8]
	0x01E53DC0 LDR X20, [X31 + 0x10]
	0x01E53DC4 CBZ X0, 0x1E5426C
	0x01E53DC8 LDR X1, [X24 + 0x100]
	0x01E53DCC BL 0x1E54868
	0x01E53DD0 B 0x1E5421C
	0x01E53DD4 LDR X21, [X24 + 0x30]
	0x01E53DD8 CBZ X21, 0x1E53FA4
	0x01E53DDC MOVZ W1, 0xDD
	0x01E53DE0 MOV X0, X20
	0x01E53DE4 MOV X2, X31
	0x01E53DE8 BL 0x3505ABC
	0x01E53DEC B 0x1E53FD8
	0x01E53DF0 CBZ X21, 0x1E54068
	0x01E53DF4 LDR X0, [X20 + 0x18]
	0x01E53DF8 CBZ X0, 0x1E5426C
	0x01E53DFC MOVZ W1, 0xE9
	0x01E53E00 MOV X2, X31
	0x01E53E04 BL 0x34FC4A4
	0x01E53E08 TBZ X0, 0x0, 0x1E54048
	0x01E53E0C LDR X0, [X20 + 0x18]
	0x01E53E10 CBZ X0, 0x1E5426C
	0x01E53E14 MOVZ W1, 0xE9
	0x01E53E18 MOV X2, X31
	0x01E53E1C BL 0x34FB9B8
	0x01E53E20 CBZ X0, 0x1E5426C
	0x01E53E24 ADRP X8, 0x22A0000
	0x01E53E28 LDR X8, [X8 + 0xB58]
	0x01E53E2C LDR X9, [X0]
	0x01E53E30 LDR X1, [X8]
	0x01E53E34 LDR X8, [X9 + 0x40]
	0x01E53E38 LDR X9, [X1 + 0x40]
	0x01E53E3C CMP X8, X9
	0x01E53E40 B.NE 0x1E5415C
	0x01E53E44 BL 0x1C16E08
	0x01E53E48 LDRB W8, [X0]
	0x01E53E4C STRB W31, [X21 + 0x1D]
	0x01E53E50 STRB W8, [X21 + 0x30]
	0x01E53E54 CBNZ W8, 0x1E54068
	0x01E53E58 B 0x1E54050
	0x01E53E5C LDR X0, [X20 + 0x18]
	0x01E53E60 CBZ X0, 0x1E5426C
	0x01E53E64 MOVZ W1, 0xFD
	0x01E53E68 MOV X2, X31
	0x01E53E6C BL 0x34FC4A4
	0x01E53E70 TBZ X0, 0x0, 0x1E53F3C
	0x01E53E74 MOVZ W1, 0xFD
	0x01E53E78 MOV X0, X20
	0x01E53E7C MOV X2, X31
	0x01E53E80 BL 0x3505ABC
	0x01E53E84 CBZ X0, 0x1E5426C
	0x01E53E88 ADRP X8, 0x22A0000
	0x01E53E8C LDR X8, [X8 + 0x758]
	0x01E53E90 LDR X9, [X0]
	0x01E53E94 LDR X1, [X8]
	0x01E53E98 LDR X8, [X9 + 0x40]
	0x01E53E9C LDR X9, [X1 + 0x40]
	0x01E53EA0 CMP X8, X9
	0x01E53EA4 B.NE 0x1E5415C
	0x01E53EA8 BL 0x1C16E08
	0x01E53EAC LDR W21, [X0]
	0x01E53EB0 B 0x1E53F40
	0x01E53EB4 MOVZ W1, 0xF9
	0x01E53EB8 MOV X0, X20
	0x01E53EBC MOV X2, X31
	0x01E53EC0 BL 0x3505ABC
	0x01E53EC4 MOV X4, X0
	0x01E53EC8 CBZ X0, 0x1E53F00
	0x01E53ECC ADRP X9, 0x22A8000
	0x01E53ED0 LDR X9, [X9 + 0xDA0]
	0x01E53ED4 LDR X8, [X4]
	0x01E53ED8 LDR X1, [X9]
	0x01E53EDC LDRB W10, [X8 + 0x130]
	0x01E53EE0 LDRB W9, [X1 + 0x130]
	0x01E53EE4 CMP W10, W9
	0x01E53EE8 B.CC 0x1E54294
	0x01E53EEC LDR X8, [X8 + 0xC8]
	0x01E53EF0 ADD X8, X8, X9, 0x3, LSL
	0x01E53EF4 LDUR X8, [X8 - 0x8]
	0x01E53EF8 CMP X8, X1
	0x01E53EFC B.NE 0x1E54294
	0x01E53F00 CBZ X21, 0x1E53FF0
	0x01E53F04 LDR X8, [X21]
	0x01E53F08 MOV X0, X21
	0x01E53F0C MOV X1, X4
	0x01E53F10 LDP X9, X2, [X8 + 0x178]
	0x01E53F14 BLR X9
	0x01E53F18 STRB W31, [X21 + 0x30]
	0x01E53F1C LDR X0, [X24 + 0x108]
	0x01E53F20 CBZ X0, 0x1E5426C
	0x01E53F24 MOV X1, X31
	0x01E53F28 BL 0x1E5A61C
	0x01E53F2C CMP W22, W0
	0x01E53F30 CSET W8, NE
	0x01E53F34 STRB W8, [X21 + 0x1D]
	0x01E53F38 B 0x1E54108
	0x01E53F3C MOV W21, W31
	0x01E53F40 MOVZ W1, 0xFB
	0x01E53F44 MOV X0, X20
	0x01E53F48 MOV X2, X31
	0x01E53F4C BL 0x3505ABC
	0x01E53F50 CBZ X0, 0x1E53F88
	0x01E53F54 ADRP X9, 0x22A8000
	0x01E53F58 LDR X9, [X9 + 0xDA0]
	0x01E53F5C LDR X8, [X0]
	0x01E53F60 LDR X1, [X9]
	0x01E53F64 LDRB W10, [X8 + 0x130]
	0x01E53F68 LDRB W9, [X1 + 0x130]
	0x01E53F6C CMP W10, W9
	0x01E53F70 B.CC 0x1E5415C
	0x01E53F74 LDR X8, [X8 + 0xC8]
	0x01E53F78 ADD X8, X8, X9, 0x3, LSL
	0x01E53F7C LDUR X8, [X8 - 0x8]
	0x01E53F80 CMP X8, X1
	0x01E53F84 B.NE 0x1E5415C
	0x01E53F88 CMP W21, 0x0
	0x01E53F8C CSEL X2, X31, X0, EQ
	0x01E53F90 CSEL X1, X0, X31, EQ
	0x01E53F94 MOV X0, X24
	0x01E53F98 MOV W3, W21
	0x01E53F9C BL 0x1E4E924
	0x01E53FA0 B 0x1E5421C
	0x01E53FA4 ADRP X8, 0x22A4000
	0x01E53FA8 LDR X8, [X8 + 0xF98]
	0x01E53FAC LDR X0, [X8]
	0x01E53FB0 BL 0x1C16F10
	0x01E53FB4 MOV X1, X31
	0x01E53FB8 MOV X21, X0
	0x01E53FBC BL 0x1E59820
	0x01E53FC0 MOVZ W1, 0xDD
	0x01E53FC4 MOV X0, X20
	0x01E53FC8 MOV X2, X31
	0x01E53FCC STR X21, [X24 + 0x30]
	0x01E53FD0 BL 0x3505ABC
	0x01E53FD4 CBZ X21, 0x1E5426C
	0x01E53FD8 STR X0, [X21 + 0x28]
	0x01E53FDC LDR X8, [X24 + 0x30]
	0x01E53FE0 CBZ X8, 0x1E5426C
	0x01E53FE4 LDR X8, [X8 + 0x28]
	0x01E53FE8 STR X8, [X24 + 0x48]
	0x01E53FEC B 0x1E5421C
	0x01E53FF0 CMP W22, 0x1
	0x01E53FF4 B.LT 0x1E54104
	0x01E53FF8 ADRP X8, 0x22A2000
	0x01E53FFC LDR X8, [X8 + 0x278]
	0x01E54000 LDR X9, [X24]
	0x01E54004 MOV X0, X24
	0x01E54008 MOV W2, W22
	0x01E5400C LDR X8, [X8]
	0x01E54010 MOV W3, W31
	0x01E54014 LDR X8, [X8 + 0xB8]
	0x01E54018 LDR X1, [X8]
	0x01E5401C LDP X8, X5, [X9 + 0x1F8]
	0x01E54020 BLR X8
	0x01E54024 LDR X8, [X24 + 0x110]
	0x01E54028 CBZ X8, 0x1E5426C
	0x01E5402C LDR X9, [X8]
	0x01E54030 MOV X21, X0
	0x01E54034 MOV X0, X8
	0x01E54038 MOV X1, X21
	0x01E5403C LDP X10, X2, [X9 + 0x1C8]
	0x01E54040 BLR X10
	0x01E54044 B 0x1E54108
	0x01E54048 STRB W31, [X21 + 0x30]
	0x01E5404C STRB W31, [X21 + 0x1D]
	0x01E54050 LDR X0, [X24 + 0x110]
	0x01E54054 CBZ X0, 0x1E5426C
	0x01E54058 LDR X8, [X0]
	0x01E5405C MOV W1, W22
	0x01E54060 LDP X9, X2, [X8 + 0x1A8]
	0x01E54064 BLR X9
	0x01E54068 LDR X0, [X20 + 0x18]
	0x01E5406C CBZ X0, 0x1E5426C
	0x01E54070 MOVZ W1, 0xCB
	0x01E54074 MOV X2, X31
	0x01E54078 BL 0x34FC4A4
	0x01E5407C TBZ X0, 0x0, 0x1E540F0
	0x01E54080 MOVZ W1, 0xCB
	0x01E54084 MOV X0, X20
	0x01E54088 MOV X2, X31
	0x01E5408C BL 0x3505ABC
	0x01E54090 CBZ X0, 0x1E5426C
	0x01E54094 ADRP X8, 0x229F000
	0x01E54098 LDR X8, [X8 + 0x758]
	0x01E5409C LDR X9, [X0]
	0x01E540A0 LDR X1, [X8]
	0x01E540A4 LDR X8, [X9 + 0x40]
	0x01E540A8 LDR X9, [X1 + 0x40]
	0x01E540AC CMP X8, X9
	0x01E540B0 B.NE 0x1E5415C
	0x01E540B4 BL 0x1C16E08
	0x01E540B8 LDR W1, [X0]
	0x01E540BC CBZ W1, 0x1E540F0
	0x01E540C0 LDR X0, [X24 + 0x110]
	0x01E540C4 CBZ X0, 0x1E5426C
	0x01E540C8 LDR X8, [X0]
	0x01E540CC STR W1, [X0 + 0x48]
	0x01E540D0 LDR X22, [X24 + 0xC0]
	0x01E540D4 MOV W2, W31
	0x01E540D8 LDP X9, X3, [X8 + 0x1D8]
	0x01E540DC BLR X9
	0x01E540E0 CBZ X22, 0x1E5426C
	0x01E540E4 MOV X1, X0
	0x01E540E8 MOV X0, X22
	0x01E540EC BL 0x1E544E0
	0x01E540F0 LDR X0, [X24 + 0xC0]
	0x01E540F4 CBZ X0, 0x1E5426C
	0x01E540F8 MOV X1, X21
	0x01E540FC BL 0x1E546A4
	0x01E54100 B 0x1E5421C
	0x01E54104 MOV X21, X31
	0x01E54108 LDR X0, [X24 + 0x108]
	0x01E5410C CBZ X0, 0x1E5426C
	0x01E54110 MOV X1, X31
	0x01E54114 BL 0x1E5A61C
	0x01E54118 CMP W22, W0
	0x01E5411C B.NE 0x1E54160
	0x01E54120 MOVZ W1, 0xFC
	0x01E54124 MOV X0, X20
	0x01E54128 MOV X2, X31
	0x01E5412C BL 0x3505ABC
	0x01E54130 CBZ X0, 0x1E54174
	0x01E54134 ADRP X8, 0x22A0000
	0x01E54138 LDR X8, [X8 + 0xE58]
	0x01E5413C MOV X22, X0
	0x01E54140 LDR X23, [X8]
	0x01E54144 MOV X1, X23
	0x01E54148 BL 0x1C16E00
	0x01E5414C MOV X1, X0
	0x01E54150 CBNZ X0, 0x1E54178
	0x01E54154 MOV X0, X22
	0x01E54158 MOV X1, X23
	0x01E5415C BL 0x1C171E0
	0x01E54160 LDR X0, [X24 + 0xC0]
	0x01E54164 CBZ X0, 0x1E5426C
	0x01E54168 MOV X1, X21
	0x01E5416C BL 0x1E54320
	0x01E54170 B 0x1E5421C
	0x01E54174 MOV X1, X31
	0x01E54178 MOV X0, X24
	0x01E5417C BL 0x1E4F27C
	0x01E54180 LDR X8, [X24 + 0x128]
	0x01E54184 CBZ X8, 0x1E54194
	0x01E54188 LDRB W8, [X8 + 0x31]
	0x01E5418C CMP W8, 0x3
	0x01E54190 CSET W8, EQ
	0x01E54194 CBZ X21, 0x1E5426C
	0x01E54198 STRB W8, [X21 + 0x1D]
	0x01E5419C LDR W1, [X24 + 0x90]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+64], X30
	003 Move [X31+72], X21
	004 Move [X31+80], X20
	005 Move [X31+88], X19
	006 Move X21, 0x2587000
	007 Move W8, [X21+24]
	008 Move W20, W1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {91}
	014 Move X0, 0x22A1000
	015 Move X0, [X0+2504]
	016 Call 0x1C17CF4
	017 Move X0, 0x22A9000
	018 Move X0, [X0+3688]
	019 Call 0x1C17CF4
	020 Move X0, 0x22A9000
	021 Move X0, [X0+3576]
	022 Call 0x1C17CF4
	023 Move X0, 0x22A9000
	024 Move X0, [X0+3696]
	025 Call 0x1C17CF4
	026 Move X0, 0x22AA000
	027 Move X0, [X0+1032]
	028 Call 0x1C17CF4
	029 Move X0, 0x22AA000
	030 Move X0, [X0+24]
	031 Call 0x1C17CF4
	032 Move X0, 0x22AA000
	033 Move X0, [X0+64]
	034 Call 0x1C17CF4
	035 Move X0, 0x22AA000
	036 Move X0, [X0+768]
	037 Call 0x1C17CF4
	038 Move X0, 0x22AA000
	039 Move X0, [X0+72]
	040 Call 0x1C17CF4
	041 Move X0, 0x22AA000
	042 Move X0, [X0+1040]
	043 Call 0x1C17CF4
	044 Move X0, 0x22A1000
	045 Move X0, [X0+2760]
	046 Call 0x1C17CF4
	047 Move X0, 0x22AA000
	048 Move X0, [X0+1048]
	049 Call 0x1C17CF4
	050 Move X0, 0x22AA000
	051 Move X0, [X0+1056]
	052 Call 0x1C17CF4
	053 Move X0, 0x22AA000
	054 Move X0, [X0+1064]
	055 Call 0x1C17CF4
	056 Move X0, 0x22AA000
	057 Move X0, [X0+1072]
	058 Call 0x1C17CF4
	059 Move X0, 0x22AA000
	060 Move X0, [X0+1080]
	061 Call 0x1C17CF4
	062 Move X0, 0x22AA000
	063 Move X0, [X0+1088]
	064 Call 0x1C17CF4
	065 Move X0, 0x22AA000
	066 Move X0, [X0+1096]
	067 Call 0x1C17CF4
	068 Move X0, 0x22AA000
	069 Move X0, [X0+1104]
	070 Call 0x1C17CF4
	071 Move X0, 0x22AA000
	072 Move X0, [X0+1112]
	073 Call 0x1C17CF4
	074 Move X0, 0x22AA000
	075 Move X0, [X0+1120]
	076 Call 0x1C17CF4
	077 Move X0, 0x22AA000
	078 Move X0, [X0+1128]
	079 Call 0x1C17CF4
	080 Move X0, 0x22A1000
	081 Move X0, [X0+2440]
	082 Call 0x1C17CF4
	083 Move X0, 0x22AA000
	084 Move X0, [X0+1136]
	085 Call 0x1C17CF4
	086 Move X0, 0x22AA000
	087 Move X0, [X0+1144]
	088 Call 0x1C17CF4
	089 Move W8, 1
	090 Move [X21+24], W8
	091 Subtract W8, W20, 1022
	092 NotImplemented "Instruction CMP not yet implemented."
	093 NotImplemented "Instruction STRH not yet implemented."
	094 Move X9, -20074496
	095 Add X9, X9, 2746
	096 NotImplemented "Instruction ADR not yet implemented."
	097 NotImplemented "Instruction LDRH not yet implemented."
	098 Add X10, X10, X11
	099 CallNoReturn X10
	100 Move X8, 0x22AA000
	101 Move X8, [X8+1048]
	102 Move X0, [X8]
	103 Call 0x1C17F10
	104 Move X1, X19
	105 Move X2, X31
	106 Move X21, X0
	107 Call SystemConnectionSummary..ctor, X0, X1
	108 Move [X19+232], X21
	109 Move X8, 0x22AA000
	110 Move X8, [X8+1040]
	111 Add X1, X31, 32
	112 Move [X31+32], W20
	113 Move X0, [X8]
	114 Call 0x1C17E04
	115 Move X9, 0x22A9000
	116 Move W8, [X19+144]
	117 Move X9, [X9+3688]
	118 Move X20, X0
	119 Add X1, X31, 8
	120 Move [X31+8], W8
	121 Move X0, [X9]
	122 Call 0x1C17E04
	123 Move X8, [X19+232]
	124 Compare X8, 0
	125 JumpIfEqual {836}
	126 Move X9, [X8]
	127 Move X21, X0
	128 Move X0, X8
	129 Move X10, [X9+360]
	130 Move X1, [X9+368]
	131 NotImplemented "Instruction BLR not yet implemented."
	132 Move X8, 0x22AA000
	133 Move X8, [X8+1096]
	134 Move X3, X0
	135 Move X1, X20
	136 Move X2, X21
	137 Move X8, [X8]
	138 Move X4, X31
	139 Move X0, X8
	140 Call String.Format, X0, X1, X2, X3
	141 Move X8, [X19]
	142 Move X2, X0
	143 Move W1, 1
	144 Move X0, X19
	145 Move X9, [X8+536]
	146 Move X3, [X8+544]
	147 Move W20, 1
	148 NotImplemented "Instruction BLR not yet implemented."
	149 Move W1, [X19+144]
	150 Move [X19+224], W20
	151 Move X8, 0x22AA000
	152 Move X8, [X8+1048]
	153 Move X0, [X8]
	154 Call 0x1C17F10
	155 Move X1, X19
	156 Move X2, X31
	157 Move X21, X0
	158 Call SystemConnectionSummary..ctor, X0, X1
	159 Move [X19+232], X21
	160 Move X8, 0x22AA000
	161 Move X8, [X8+1040]
	162 Add X1, X31, 32
	163 Move [X31+32], W20
	164 Move X0, [X8]
	165 Call 0x1C17E04
	166 Move X9, 0x22A9000
	167 Move W8, [X19+144]
	168 Move X9, [X9+3688]
	169 Move X20, X0
	170 Add X1, X31, 8
	171 Move [X31+8], W8
	172 Move X0, [X9]
	173 Call 0x1C17E04
	174 Move X8, [X19+232]
	175 Compare X8, 0
	176 JumpIfEqual {836}
	177 Move X9, [X8]
	178 Move X21, X0
	179 Move X0, X8
	180 Move X10, [X9+360]
	181 Move X1, [X9+368]
	182 NotImplemented "Instruction BLR not yet implemented."
	183 Move X8, 0x22AA000
	184 Move X8, [X8+1096]
	185 Move X3, X0
	186 Move X1, X20
	187 Move X2, X21
	188 Move X8, [X8]
	189 Move X4, X31
	190 Move X0, X8
	191 Call String.Format, X0, X1, X2, X3
	192 Move X8, [X19]
	193 Move X2, X0
	194 Move W1, 1
	195 Move X0, X19
	196 Move X9, [X8+536]
	197 Move X3, [X8+544]
	198 NotImplemented "Instruction BLR not yet implemented."
	199 Move W1, [X19+144]
	200 Move W8, 4
	201 Move W8, [X19+144]
	202 NotImplemented "Instruction CMP not yet implemented."
	203 Move X8, [X19+16]
	204 Compare X8, 0
	205 JumpIfEqual {836}
	206 Move W8, [X8+64]
	207 NotImplemented "Instruction CMP not yet implemented."
	208 Move X9, 0x22AA000
	209 Move X8, [X19]
	210 Move X9, [X9+1072]
	211 Move W1, 5
	212 Move X0, X19
	213 Move X3, [X8+544]
	214 Move X2, [X9]
	215 Move X9, [X8+536]
	216 NotImplemented "Instruction BLR not yet implemented."
	217 Move X8, [X19+48]
	218 Move W9, 2
	219 Move [X19+128], W9
	220 Compare X8, 0
	221 JumpIfEqual {223}
	222 Move [X8+40], X31
	223 Move W8, [X19+144]
	224 NotImplemented "Instruction CMP not yet implemented."
	225 Move X8, [X19+16]
	226 Compare X8, 0
	227 JumpIfEqual {836}
	228 Move W8, [X8+64]
	229 NotImplemented "Instruction CMP not yet implemented."
	230 Move X9, 0x22AA000
	231 Move X8, [X19]
	232 Move X9, [X9+1064]
	233 Move W1, 5
	234 Move X0, X19
	235 Move X3, [X8+544]
	236 Move X2, [X9]
	237 Move X9, [X8+536]
	238 NotImplemented "Instruction BLR not yet implemented."
	239 Move W8, [X19+144]
	240 Move X20, [X19+272]
	241 Move TEMP, 0
	242 Not TEMP
	243 Move W1, TEMP
	244 Move X0, X19
	245 Move [X19+312], X31
	246 Move [X19+272], X31
	247 Call LoadBalancingClient.ChangeLocalID, X0, X1
	248 Compare X20, 0
	249 JumpIfEqual {256}
	250 Move W8, [X19+128]
	251 NotImplemented "Instruction CMP not yet implemented."
	252 Move X0, [X19+184]
	253 Compare X0, 0
	254 JumpIfEqual {836}
	255 Call MatchMakingCallbacksContainer.OnLeftRoom, X0
	256 NotImplemented "Instruction LDRH not yet implemented."
	257 And W31, W8, 255
	258 NotImplemented "Instruction STRH not yet implemented."
	259 Move X9, [X19+16]
	260 Compare X9, 0
	261 JumpIfEqual {836}
	262 Move W9, [X9+132]
	263 Xor W10, W8, 1
	264 And W10, W10, 255
	265 NotImplemented "Instruction STRH not yet implemented."
	266 NotImplemented "Instruction CMP not yet implemented."
	267 NotImplemented "Instruction CSET not yet implemented."
	268 Or W9, W10, W9
	269 Compare W9, 0
	270 JumpIfEqual {304}
	271 Move X9, 0x22AA000
	272 Move X9, [X9+768]
	273 Add X1, X31, 32
	274 NotImplemented "Instruction STRH not yet implemented."
	275 Move X0, [X9]
	276 Call 0x1C17E04
	277 Move X8, 0x22AA000
	278 Move X8, [X8+1112]
	279 Move X1, X0
	280 Move X2, X31
	281 Move X8, [X8]
	282 Move X0, X8
	283 Call String.Format, X0, X1
	284 Move X8, [X19]
	285 Move X2, X0
	286 Move W1, 3
	287 Move X0, X19
	288 Move X9, [X8+536]
	289 Move X3, [X8+544]
	290 NotImplemented "Instruction BLR not yet implemented."
	291 Move X9, 0x22AA000
	292 Move X20, [X19+16]
	293 NotImplemented "Instruction LDRH not yet implemented."
	294 Move X9, [X9+64]
	295 Add X0, X31, 60
	296 NotImplemented "Instruction STRH not yet implemented."
	297 Move X1, [X9]
	298 Call Nullable`1<ByteEnum>.get_Value, X0
	299 Compare X20, 0
	300 JumpIfEqual {836}
	301 Move [X20+132], W0
	302 NotImplemented "Instruction STRH not yet implemented."
	303 NotImplemented "Instruction STRH not yet implemented."
	304 Move W1, [X19+144]
	305 Subtract W8, W1, 5
	306 NotImplemented "Instruction CMP not yet implemented."
	307 Move X9, -20074496
	308 Add X9, X9, 2806
	309 NotImplemented "Instruction ADR not yet implemented."
	310 NotImplemented "Instruction LDRH not yet implemented."
	311 Add X10, X10, X11
	312 CallNoReturn X10
	313 Move X8, [X19]
	314 Move X0, X19
	315 Move X9, [X8+456]
	316 Move X1, [X8+464]
	317 NotImplemented "Instruction BLR not yet implemented."
	318 Move X8, 0x22AA000
	319 Move X8, [X8+1048]
	320 Move X0, [X8]
	321 Call 0x1C17F10
	322 Move X1, X19
	323 Move X2, X31
	324 Move X20, X0
	325 Call SystemConnectionSummary..ctor, X0, X1
	326 Move [X19+232], X20
	327 Move X8, 0x22AA000
	328 Move X8, [X8+1040]
	329 Add X1, X31, 32
	330 Move X0, [X8]
	331 Move W8, 1040
	332 Move [X31+32], W8
	333 Call 0x1C17E04
	334 Move X9, 0x22A9000
	335 Move W8, [X19+144]
	336 Move X9, [X9+3688]
	337 Move X20, X0
	338 Add X1, X31, 8
	339 Move [X31+8], W8
	340 Move X0, [X9]
	341 Call 0x1C17E04
	342 Move X8, [X19+232]
	343 Compare X8, 0
	344 JumpIfEqual {836}
	345 Move X9, [X8]
	346 Move X21, X0
	347 Move X0, X8
	348 Move X10, [X9+360]
	349 Move X1, [X9+368]
	350 NotImplemented "Instruction BLR not yet implemented."
	351 Move X8, 0x22AA000
	352 Move X8, [X8+1096]
	353 Move X3, X0
	354 Move X1, X20
	355 Move X2, X21
	356 Move X8, [X8]
	357 Move X4, X31
	358 Move X0, X8
	359 Call String.Format, X0, X1, X2, X3
	360 Move X8, [X19]
	361 Move X2, X0
	362 Move W1, 1
	363 Move X0, X19
	364 Move X9, [X8+536]
	365 Move X3, [X8+544]
	366 NotImplemented "Instruction BLR not yet implemented."
	367 Move W1, [X19+144]
	368 Move W8, 8
	369 Move [X19+224], W8
	370 NotImplemented "Instruction CMP not yet implemented."
	371 Move W8, [X19+56]
	372 NotImplemented "Instruction CMP not yet implemented."
	373 NotImplemented "Instruction LDRH not yet implemented."
	374 And W9, W8, 0xFF00
	375 NotImplemented "Instruction CMP not yet implemented."
	376 NotImplemented "Instruction STRH not yet implemented."
	377 Move W8, [X19+104]
	378 Move W9, 19
	379 NotImplemented "Instruction CMP not yet implemented."
	380 Move W8, 13
	381 NotImplemented "Instruction CSEL not yet implemented."
	382 Move W2, 13
	383 Move X8, 0x22AA000
	384 Move X8, [X8+1048]
	385 Move X0, [X8]
	386 Call 0x1C17F10
	387 Move X1, X19
	388 Move X2, X31
	389 Move X20, X0
	390 Call SystemConnectionSummary..ctor, X0, X1
	391 Move [X19+232], X20
	392 Move X8, 0x22AA000
	393 Move X8, [X8+1040]
	394 Add X1, X31, 32
	395 Move X0, [X8]
	396 Move W8, 1041
	397 Move [X31+32], W8
	398 Call 0x1C17E04
	399 Move X9, 0x22A9000
	400 Move W8, [X19+144]
	401 Move X9, [X9+3688]
	402 Move X20, X0
	403 Add X1, X31, 8
	404 Move [X31+8], W8
	405 Move X0, [X9]
	406 Call 0x1C17E04
	407 Move X8, [X19+232]
	408 Compare X8, 0
	409 JumpIfEqual {836}
	410 Move X9, [X8]
	411 Move X21, X0
	412 Move X0, X8
	413 Move X10, [X9+360]
	414 Move X1, [X9+368]
	415 NotImplemented "Instruction BLR not yet implemented."
	416 Move X8, 0x22AA000
	417 Move X8, [X8+1096]
	418 Move X3, X0
	419 Move X1, X20
	420 Move X2, X21
	421 Move X8, [X8]
	422 Move X4, X31
	423 Move X0, X8
	424 Call String.Format, X0, X1, X2, X3
	425 Move X8, [X19]
	426 Move X2, X0
	427 Move W1, 1
	428 Move X0, X19
	429 Move X9, [X8+536]
	430 Move X3, [X8+544]
	431 NotImplemented "Instruction BLR not yet implemented."
	432 Move W1, [X19+144]
	433 Move W8, 7
	434 Move X9, 0x22AA000
	435 Move X8, [X19]
	436 Move X9, [X9+1088]
	437 Move W1, 1
	438 Move X0, X19
	439 Move X3, [X8+544]
	440 Move X2, [X9]
	441 Move X9, [X8+536]
	442 NotImplemented "Instruction BLR not yet implemented."
	443 Move W1, [X19+144]
	444 Move W8, 14
	445 Move W1, [X19+144]
	446 Move W8, 9
	447 Move W1, [X19+144]
	448 Move W8, 10
	449 Move W1, [X19+144]
	450 Move W8, 3
	451 Move W1, [X19+144]
	452 Move W8, 2
	453 NotImplemented "Instruction CMP not yet implemented."
	454 Move [X19+224], W8
	455 Move X8, [X19+152]
	456 Move W9, 13
	457 Move [X19+144], W9
	458 Compare X8, 0
	459 JumpIfEqual {476}
	460 Move X9, [X8+24]
	461 Move X0, [X8+64]
	462 Move X3, [X8+40]
	463 Move W2, 13
	464 Move W2, 20
	465 Move W8, 1
	466 Move [X19+56], W8
	467 NotImplemented "Instruction CMP not yet implemented."
	468 Move X8, [X19+152]
	469 Move [X19+144], W2
	470 Compare X8, 0
	471 JumpIfEqual {476}
	472 Move X9, [X8+24]
	473 Move X0, [X8+64]
	474 Move X3, [X8+40]
	475 NotImplemented "Instruction BLR not yet implemented."
	476 Move X20, [X31+80]
	477 Move X19, [X31+88]
	478 Move X30, [X31+64]
	479 Move X21, [X31+72]
	480 Add X31, X31, 96
	481 Return 
	482 Move W8, 6
	483 Move W9, 1
	484 Move [X19+128], W9
	485 NotImplemented "Instruction CMP not yet implemented."
	486 Move X8, [X19+16]
	487 Compare X8, 0
	488 JumpIfEqual {836}
	489 Move W8, [X8+64]
	490 NotImplemented "Instruction CMP not yet implemented."
	491 Move X9, 0x22AA000
	492 Move X8, [X19]
	493 Move X9, [X9+1056]
	494 Move W1, 5
	495 Move X0, X19
	496 Move X3, [X8+544]
	497 Move X2, [X9]
	498 Move X9, [X8+536]
	499 NotImplemented "Instruction BLR not yet implemented."
	500 Move X0, [X19+176]
	501 Move [X19+128], W31
	502 Compare X0, 0
	503 JumpIfEqual {836}
	504 Call ConnectionCallbacksContainer.OnConnected, X0
	505 Move X0, [X19+16]
	506 Compare X0, 0
	507 JumpIfEqual {836}
	508 Move W8, [X0+132]
	509 NotImplemented "Instruction CMP not yet implemented."
	510 Move W8, [X19+128]
	511 NotImplemented "Instruction CMP not yet implemented."
	512 Move W1, [X19+144]
	513 NotImplemented "Instruction CMP not yet implemented."
	514 Move X8, [X19+152]
	515 Move W9, 17
	516 Move [X19+144], W9
	517 Compare X8, 0
	518 JumpIfEqual {524}
	519 Move X9, [X8+24]
	520 Move X0, [X8+64]
	521 Move X3, [X8+40]
	522 Move W2, 17
	523 NotImplemented "Instruction BLR not yet implemented."
	524 Move X0, [X19+320]
	525 Move X1, X31
	526 Call String.IsNullOrEmpty, X0
	527 Move TEMP, X0
	528 And TEMP, TEMP, 1
	529 Compare TEMP, 1
	530 JumpIfNotEqual {536}
	531 Move X0, X19
	532 Call LoadBalancingClient.OpGetRegions, X0
	533 Move W8, [X19+56]
	534 Subtract W8, W8, 1
	535 NotImplemented "Instruction CMP not yet implemented."
	536 Move X0, X19
	537 Call LoadBalancingClient.CallAuthenticate, X0
	538 Move W1, [X19+144]
	539 Move TEMP, X0
	540 And TEMP, TEMP, 1
	541 Compare TEMP, 1
	542 JumpIfNotEqual {560}
	543 NotImplemented "Instruction CMP not yet implemented."
	544 Move X8, [X19+152]
	545 Move W9, 1
	546 Move [X19+144], W9
	547 Compare X8, 0
	548 JumpIfEqual {476}
	549 Move X9, [X8+24]
	550 Move X0, [X8+64]
	551 Move X3, [X8+40]
	552 Move W2, 1
	553 Move W8, [X19+128]
	554 NotImplemented "Instruction CMP not yet implemented."
	555 Move W8, [X19+56]
	556 Compare W8, 0
	557 JumpIfNotEqual {476}
	558 Move X1, X31
	559 Call PhotonPeer.EstablishEncryption, X0
	560 Move X8, 0x22A9000
	561 Move X8, [X8+3688]
	562 Move TEMP, 0
	563 Not TEMP
	564 Move X9, TEMP
	565 Move [X31+48], W1
	566 Add X0, X31, 32
	567 Move X8, [X8]
	568 Move X1, X31
	569 Move [X31+32], X8
	570 Move [X31+40], X9
	571 Call Enum.ToString, X0
	572 Move X8, 0x22AA000
	573 Move X8, [X8+1128]
	574 Move X1, X0
	575 Move X2, X31
	576 Move X8, [X8]
	577 Move X0, X8
	578 Call String.Concat, X0, X1
	579 Move X8, [X19]
	580 Move X2, X0
	581 Move W1, 1
	582 Move X0, X19
	583 Move X9, [X8+536]
	584 Move X3, [X8+544]
	585 NotImplemented "Instruction BLR not yet implemented."
	586 Compare W1, 0
	587 JumpIfNotEqual {592}
	588 Move X8, [X19+48]
	589 Compare X8, 0
	590 JumpIfEqual {670}
	591 Move [X8+40], X31
	592 Move X8, 0x22A1000
	593 Move X9, 0x22A1000
	594 Move X8, [X8+2440]
	595 Move X9, [X9+2760]
	596 Move W1, 6
	597 Move X21, [X8]
	598 Move X0, [X9]
	599 Call 0x1C17D6C
	600 Compare X0, 0
	601 JumpIfEqual {836}
	602 Move W8, [X0+24]
	603 Move X20, X0
	604 Compare W8, 0
	605 JumpIfEqual {837}
	606 Move X8, 0x22AA000
	607 Move X8, [X8+1120]
	608 Move X9, 0x22A9000
	609 Move TEMP, 0
	610 Not TEMP
	611 Move X10, TEMP
	612 Add X0, X31, 32
	613 Move X8, [X8]
	614 Move X9, [X9+3688]
	615 Move X1, X31
	616 Move [X20+32], X8
	617 Move X8, [X9]
	618 Move W9, [X19+144]
	619 Move [X31+32], X8
	620 Move [X31+40], X10
	621 Move [X31+48], W9
	622 Call Enum.ToString, X0
	623 Move W8, [X20+24]
	624 NotImplemented "Instruction CMP not yet implemented."
	625 NotImplemented "Instruction CMP not yet implemented."
	626 Move [X20+40], X0
	627 Move X8, 0x22AA000
	628 Move X8, [X8+1144]
	629 Move X9, 0x22AA000
	630 Move TEMP, 0
	631 Not TEMP
	632 Move X10, TEMP
	633 Add X0, X31, 8
	634 Move X8, [X8]
	635 Move X9, [X9+72]
	636 Move X1, X31
	637 Move [X20+48], X8
	638 Move X8, [X9]
	639 Move W9, [X19+128]
	640 Move [X31+8], X8
	641 Move [X31+16], X10
	642 Move [X31+24], W9
	643 Call Enum.ToString, X0
	644 Move W8, [X20+24]
	645 NotImplemented "Instruction CMP not yet implemented."
	646 NotImplemented "Instruction CMP not yet implemented."
	647 Move [X20+56], X0
	648 Move X9, 0x22AA000
	649 Move X9, [X9+1104]
	650 NotImplemented "Instruction CMP not yet implemented."
	651 Move X9, [X9]
	652 Move [X20+64], X9
	653 Move X0, X20
	654 Move X1, X31
	655 Move [X20+72], X21
	656 Call String.Concat, X0
	657 Move X8, [X19]
	658 Move X2, X0
	659 Move W1, 2
	660 Move X0, X19
	661 Move X9, [X8+536]
	662 Move X3, [X8+544]
	663 NotImplemented "Instruction BLR not yet implemented."
	664 Move X8, [X19+48]
	665 Compare X8, 0
	666 JumpIfEqual {668}
	667 Move [X8+40], X31
	668 Move W1, [X19+144]
	669 NotImplemented "Instruction CMP not yet implemented."
	670 Move X8, [X19+152]
	671 Move W9, 14
	672 Move [X19+144], W9
	673 Compare X8, 0
	674 JumpIfEqual {680}
	675 Move X9, [X8+24]
	676 Move X0, [X8+64]
	677 Move X3, [X8+40]
	678 Move W2, 14
	679 NotImplemented "Instruction BLR not yet implemented."
	680 Move X0, [X19+176]
	681 Compare X0, 0
	682 JumpIfEqual {836}
	683 Move W1, [X19+224]
	684 Call ConnectionCallbacksContainer.OnDisconnected, X0, X1
	685 Move X1, [X19+120]
	686 Move X2, [X19+136]
	687 Move W3, 1
	688 Move X0, X19
	689 Call LoadBalancingClient.Connect, X0, X1, X2, X3
	690 Move X20, [X19+16]
	691 Move [X19+104], W31
	692 Compare X20, 0
	693 JumpIfEqual {836}
	694 Move W8, [X20+132]
	695 Move W9, 5
	696 Move X0, X19
	697 NotImplemented "Instruction CMP not yet implemented."
	698 NotImplemented "Instruction CSEL not yet implemented."
	699 Move [X20+132], W8
	700 Move [X19+384], W31
	701 Move [X19+98], W31
	702 NotImplemented "Instruction STRH not yet implemented."
	703 Call LoadBalancingClient.GetNameServerAddress, X0
	704 Move X2, [X19+136]
	705 Move W8, [X19+56]
	706 Move X3, [X19+32]
	707 Move X1, X0
	708 Compare W8, 0
	709 JumpIfEqual {808}
	710 Move X8, [X19+48]
	711 Compare X8, 0
	712 JumpIfEqual {808}
	713 Move X4, [X8+40]
	714 Move X8, 0x22A9000
	715 Move X8, [X8+3696]
	716 Move W9, [X19+224]
	717 Move TEMP, 0
	718 Not TEMP
	719 Move X21, TEMP
	720 Add X0, X31, 32
	721 Move X8, [X8]
	722 Move X1, X31
	723 Move [X31+48], W9
	724 Move [X31+32], X8
	725 Move [X31+40], X21
	726 Call Enum.ToString, X0
	727 Move X8, [X19+16]
	728 Compare X8, 0
	729 JumpIfEqual {836}
	730 Move X9, 0x22A8000
	731 Move X9, [X9+3576]
	732 Move W8, [X8+132]
	733 Move X20, X0
	734 Add X0, X31, 8
	735 Move X9, [X9]
	736 Move X1, X31
	737 Move [X31+24], W8
	738 Move [X31+8], X9
	739 Move [X31+16], X21
	740 Call Enum.ToString, X0
	741 Move X8, 0x22A9000
	742 Move X8, [X8+1136]
	743 Move X9, 0x22A9000
	744 Move X9, [X9+1080]
	745 Move X3, X0
	746 Move X8, [X8]
	747 Move X1, X20
	748 Move X2, [X9]
	749 Move X4, X31
	750 Move X0, X8
	751 Call String.Concat, X0, X1, X2, X3
	752 Move X8, 0x22A0000
	753 Move X8, [X8+2504]
	754 Move X20, X0
	755 Move X21, [X8]
	756 Move X8, [X21+56]
	757 Compare X8, 0
	758 JumpIfNotEqual {762}
	759 Move X0, X21
	760 Call 0x1C5D6E0
	761 Move X8, [X21+56]
	762 Move X0, [X8+16]
	763 Move W8, [X0+309]
	764 Move TEMP, X8
	765 And TEMP, TEMP, 1
	766 Compare TEMP, 1
	767 JumpIfEqual {769}
	768 Call 0x1C5D684
	769 Move W8, [X0+224]
	770 Compare W8, 0
	771 JumpIfNotEqual {773}
	772 Call 0x1C17DFC
	773 Move X8, [X21+56]
	774 Move X0, [X8+16]
	775 Move W8, [X0+309]
	776 Move TEMP, X8
	777 And TEMP, TEMP, 1
	778 Compare TEMP, 1
	779 JumpIfEqual {781}
	780 Call 0x1C5D684
	781 Move X8, [X0+184]
	782 Move X0, X20
	783 Move X2, X31
	784 Move X1, [X8]
	785 Call String.Format, X0, X1
	786 Move X8, [X19]
	787 Move X2, X0
	788 Move W1, 3
	789 Move X0, X19
	790 Move X9, [X8+536]
	791 Move X3, [X8+544]
	792 NotImplemented "Instruction BLR not yet implemented."
	793 Move X20, [X19+16]
	794 Move X0, X19
	795 Move [X19+56], W31
	796 Move [X19+384], W31
	797 Move [X19+98], W31
	798 NotImplemented "Instruction STRH not yet implemented."
	799 Call LoadBalancingClient.GetNameServerAddress, X0
	800 Move W8, [X19+56]
	801 Move X1, X0
	802 Compare W8, 0
	803 JumpIfEqual {810}
	804 Move X8, [X19+48]
	805 Compare X8, 0
	806 JumpIfEqual {810}
	807 Move X4, [X8+40]
	808 Move X4, X31
	809 Move X8, [X20]
	810 Move X4, X31
	811 Compare X20, 0
	812 JumpIfEqual {836}
	813 Move X8, [X20]
	814 Move X2, [X19+136]
	815 Move X3, [X19+32]
	816 Move X9, [X8+424]
	817 Move X6, [X8+432]
	818 Move X0, X20
	819 Move X5, X31
	820 NotImplemented "Instruction BLR not yet implemented."
	821 Move TEMP, X0
	822 And TEMP, TEMP, 1
	823 Compare TEMP, 1
	824 JumpIfNotEqual {476}
	825 Move W1, [X19+144]
	826 NotImplemented "Instruction CMP not yet implemented."
	827 Move X8, [X19+152]
	828 Move W9, 16
	829 Move [X19+144], W9
	830 Compare X8, 0
	831 JumpIfEqual {476}
	832 Move X9, [X8+24]
	833 Move X0, [X8+64]
	834 Move X3, [X8+40]
	835 Move W2, 16
	836 Call 0x1C17F20
	837 Call 0x1C17F28

Method: System.Void OnEvent(ExitGames.Client.Photon.EventData photonEvent)

Disassembly:
	0x01E546D8 ADRP X0, 0x22A8000
	0x01E546DC LDR X0, [X0 + 0x1F0]
	0x01E546E0 BL 0x1C16CF4
	0x01E546E4 ADRP X0, 0x22A8000
	0x01E546E8 LDR X0, [X0 + 0x1F8]
	0x01E546EC BL 0x1C16CF4
	0x01E546F0 ADRP X0, 0x22A8000
	0x01E546F4 LDR X0, [X0 + 0x200]
	0x01E546F8 BL 0x1C16CF4
	0x01E546FC ADRP X0, 0x22A8000
	0x01E54700 LDR X0, [X0 + 0x208]
	0x01E54704 BL 0x1C16CF4
	0x01E54708 MOVZ W8, 0x1
	0x01E5470C STRB W8, [X21 + 0x34]
	0x01E54710 STP X31, X31, [X31 + 0x8]
	0x01E54714 STR X31, [X31 + 0x18]
	0x01E54718 LDR X0, [X20 + 0x28]
	0x01E5471C CBZ X0, 0x1E547F8
	0x01E54720 ADRP X24, 0x22A8000
	0x01E54724 ADRP X22, 0x22A8000
	0x01E54728 ADRP X23, 0x22A8000
	0x01E5472C ADRP X21, 0x22A8000
	0x01E54730 LDR X24, [X24 + 0x208]
	0x01E54734 LDR X22, [X22 + 0x1F0]
	0x01E54738 LDR X23, [X23 + 0x200]
	0x01E5473C LDR X21, [X21 + 0x1E8]
	0x01E54740 BL 0x1E54C74
	0x01E54744 LDR X1, [X24]
	0x01E54748 ADD X8, X31, 0x8
	0x01E5474C MOV X0, X20
	0x01E54750 BL 0x301CB58
	0x01E54754 LDR X1, [X22]
	0x01E54758 ADD X0, X31, 0x8
	0x01E5475C BL 0x2BC4350
	0x01E54760 TBZ X0, 0x0, 0x1E547D0
	0x01E54764 LDR X20, [X31 + 0x18]
	0x01E54768 CBZ X20, 0x1E547F4
	0x01E5476C LDR X8, [X20]
	0x01E54770 LDR X1, [X23]
	0x01E54774 LDRH W9, [X8 + 0x12E]
	0x01E54778 CBZ X9, 0x1E5479C
	0x01E5477C LDR X10, [X8 + 0xB0]
	0x01E54780 ADD X10, X10, 0x8
	0x01E54784 LDUR X11, [X10 - 0x8]
	0x01E54788 CMP X11, X1
	0x01E5478C B.EQ 0x1E547AC
	0x01E54790 SUBS X9, X9, 0x1
	0x01E54794 ADD X10, X10, 0x10
	0x01E54798 B.NE 0x1E54784
	0x01E5479C MOVZ W2, 0x1
	0x01E547A0 MOV X0, X20
	0x01E547A4 BL 0x1C5C788
	0x01E547A8 B 0x1E547BC
	0x01E547AC LDR W9, [X10]
	0x01E547B0 ADD W9, W9, 0x1
	0x01E547B4 ADD X8, X8, W9, 0x4, SXTW
	0x01E547B8 ADD X0, X8, 0x138
	0x01E547BC LDP X8, X2, [X0]
	0x01E547C0 MOV X0, X20
	0x01E547C4 MOV X1, X19
	0x01E547C8 BLR X8
	0x01E547CC B 0x1E54754
	0x01E547D0 LDR X1, [X21]
	0x01E547D4 ADD X0, X31, 0x8
	0x01E547D8 BL 0x2BC434C
	0x01E547DC LDP X20, X19, [X31 + 0x50]
	0x01E547E0 LDP X22, X21, [X31 + 0x40]
	0x01E547E4 LDP X24, X23, [X31 + 0x30]
	0x01E547E8 LDR X30, [X31 + 0x20]
	0x01E547EC ADD X31, X31, 0x60
	0x01E547F0 RET
	0x01E547F4 BL 0x1C16F20
	0x01E547F8 BL 0x1C16F20
	0x01E547FC B 0x1E54804
	0x01E54800 B 0x1E54804
	0x01E54804 MOV X19, X0
	0x01E54808 CMP W1, 0x1
	0x01E5480C B.NE 0x1E54838
	0x01E54810 MOV X0, X19
	0x01E54814 BL 0x3EB1AD0
	0x01E54818 LDR X20, [X0]
	0x01E5481C BL 0x3EB1AE0
	0x01E54820 LDR X1, [X21]
	0x01E54824 ADD X0, X31, 0x8
	0x01E54828 BL 0x2BC434C
	0x01E5482C CBZ X20, 0x1E547DC
	0x01E54830 MOV X0, X20
	0x01E54834 BL 0x1C16F18
	0x01E54838 MOV X20, X31
	0x01E5483C B 0x1E54844
	0x01E54840 MOV X19, X0
	0x01E54844 LDR X1, [X21]
	0x01E54848 ADD X0, X31, 0x8
	0x01E5484C BL 0x2BC434C
	0x01E54850 CBNZ X20, 0x1E5485C
	0x01E54854 MOV X0, X19
	0x01E54858 BL 0x1D2C690
	0x01E5485C MOV X0, X20
	0x01E54860 BL 0x1C16F18
	0x01E54864 BL 0x1990590
	0x01E54868 SUB X31, X31, 0x60
	0x01E5486C STR X30, [X31 + 0x20]
	0x01E54870 STP X24, X23, [X31 + 0x30]
	0x01E54874 STP X22, X21, [X31 + 0x40]
	0x01E54878 STP X20, X19, [X31 + 0x50]
	0x01E5487C ADRP X21, 0x2585000
	0x01E54880 LDRB W8, [X21 + 0x3C]
	0x01E54884 MOV X19, X1
	0x01E54888 MOV X20, X0
	0x01E5488C TBNZ X8, 0x0, 0x1E548D4
	0x01E54890 ADRP X0, 0x22A8000
	0x01E54894 LDR X0, [X0 + 0x3B8]
	0x01E54898 BL 0x1C16CF4
	0x01E5489C ADRP X0, 0x22A8000
	0x01E548A0 LDR X0, [X0 + 0x3C0]
	0x01E548A4 BL 0x1C16CF4
	0x01E548A8 ADRP X0, 0x22A8000
	0x01E548AC LDR X0, [X0 + 0x3C8]
	0x01E548B0 BL 0x1C16CF4
	0x01E548B4 ADRP X0, 0x22A8000
	0x01E548B8 LDR X0, [X0 + 0x3D0]
	0x01E548BC BL 0x1C16CF4
	0x01E548C0 ADRP X0, 0x22A8000
	0x01E548C4 LDR X0, [X0 + 0x3D8]
	0x01E548C8 BL 0x1C16CF4
	0x01E548CC MOVZ W8, 0x1
	0x01E548D0 STRB W8, [X21 + 0x3C]
	0x01E548D4 STP X31, X31, [X31 + 0x8]
	0x01E548D8 STR X31, [X31 + 0x18]
	0x01E548DC LDR X0, [X20 + 0x28]
	0x01E548E0 CBZ X0, 0x1E549BC
	0x01E548E4 ADRP X24, 0x22A8000
	0x01E548E8 ADRP X22, 0x22A8000
	0x01E548EC ADRP X23, 0x22A8000
	0x01E548F0 ADRP X21, 0x22A8000
	0x01E548F4 LDR X24, [X24 + 0x3D8]
	0x01E548F8 LDR X22, [X22 + 0x3C0]
	0x01E548FC LDR X23, [X23 + 0x3D0]
	0x01E54900 LDR X21, [X21 + 0x3B8]
	0x01E54904 BL 0x1E54C74
	0x01E54908 LDR X1, [X24]
	0x01E5490C ADD X8, X31, 0x8
	0x01E54910 MOV X0, X20
	0x01E54914 BL 0x301CB58
	0x01E54918 LDR X1, [X22]
	0x01E5491C ADD X0, X31, 0x8
	0x01E54920 BL 0x2BC4350
	0x01E54924 TBZ X0, 0x0, 0x1E54994
	0x01E54928 LDR X20, [X31 + 0x18]
	0x01E5492C CBZ X20, 0x1E549B8
	0x01E54930 LDR X8, [X20]
	0x01E54934 LDR X1, [X23]
	0x01E54938 LDRH W9, [X8 + 0x12E]
	0x01E5493C CBZ X9, 0x1E54960
	0x01E54940 LDR X10, [X8 + 0xB0]
	0x01E54944 ADD X10, X10, 0x8
	0x01E54948 LDUR X11, [X10 - 0x8]
	0x01E5494C CMP X11, X1
	0x01E54950 B.EQ 0x1E54970
	0x01E54954 SUBS X9, X9, 0x1
	0x01E54958 ADD X10, X10, 0x10
	0x01E5495C B.NE 0x1E54948
	0x01E54960 MOVZ W2, 0x3
	0x01E54964 MOV X0, X20
	0x01E54968 BL 0x1C5C788
	0x01E5496C B 0x1E54980
	0x01E54970 LDR W9, [X10]
	0x01E54974 ADD W9, W9, 0x3
	0x01E54978 ADD X8, X8, W9, 0x4, SXTW
	0x01E5497C ADD X0, X8, 0x138
	0x01E54980 LDP X8, X2, [X0]
	0x01E54984 MOV X0, X20
	0x01E54988 MOV X1, X19
	0x01E5498C BLR X8
	0x01E54990 B 0x1E54918
	0x01E54994 LDR X1, [X21]
	0x01E54998 ADD X0, X31, 0x8
	0x01E5499C BL 0x2BC434C
	0x01E549A0 LDP X20, X19, [X31 + 0x50]
	0x01E549A4 LDP X22, X21, [X31 + 0x40]
	0x01E549A8 LDP X24, X23, [X31 + 0x30]
	0x01E549AC LDR X30, [X31 + 0x20]
	0x01E549B0 ADD X31, X31, 0x60
	0x01E549B4 RET
	0x01E549B8 BL 0x1C16F20
	0x01E549BC BL 0x1C16F20
	0x01E549C0 B 0x1E549C8
	0x01E549C4 B 0x1E549C8
	0x01E549C8 MOV X19, X0
	0x01E549CC CMP W1, 0x1
	0x01E549D0 B.NE 0x1E549FC
	0x01E549D4 MOV X0, X19
	0x01E549D8 BL 0x3EB1AD0
	0x01E549DC LDR X20, [X0]
	0x01E549E0 BL 0x3EB1AE0
	0x01E549E4 LDR X1, [X21]
	0x01E549E8 ADD X0, X31, 0x8
	0x01E549EC BL 0x2BC434C
	0x01E549F0 CBZ X20, 0x1E549A0
	0x01E549F4 MOV X0, X20
	0x01E549F8 BL 0x1C16F18
	0x01E549FC MOV X20, X31
	0x01E54A00 B 0x1E54A08
	0x01E54A04 MOV X19, X0
	0x01E54A08 LDR X1, [X21]
	0x01E54A0C ADD X0, X31, 0x8
	0x01E54A10 BL 0x2BC434C
	0x01E54A14 CBNZ X20, 0x1E54A20
	0x01E54A18 MOV X0, X19
	0x01E54A1C BL 0x1D2C690
	0x01E54A20 MOV X0, X20
	0x01E54A24 BL 0x1C16F18
	0x01E54A28 BL 0x1990590
	0x01E54A2C STP X30, X21, [X31 - 0x20]!
	0x01E54A30 STP X20, X19, [X31 + 0x10]
	0x01E54A34 ADRP X21, 0x2585000
	0x01E54A38 LDRB W8, [X21 + 0x41]
	0x01E54A3C MOV X20, X1
	0x01E54A40 MOV X19, X0
	0x01E54A44 TBNZ X8, 0x0, 0x1E54A5C
	0x01E54A48 ADRP X0, 0x22A1000
	0x01E54A4C LDR X0, [X0 + 0x278]
	0x01E54A50 BL 0x1C16CF4
	0x01E54A54 MOVZ W8, 0x1
	0x01E54A58 STRB W8, [X21 + 0x41]
	0x01E54A5C MOV X0, X19
	0x01E54A60 MOV X1, X31
	0x01E54A64 BL 0x33BDD8C
	0x01E54A68 CBZ X20, 0x1E54AB0
	0x01E54A6C MOVZ W1, 0xDA
	0x01E54A70 MOV X0, X20
	0x01E54A74 MOV X2, X31
	0x01E54A78 BL 0x3505ABC
	0x01E54A7C CBZ X0, 0x1E54A9C
	0x01E54A80 ADRP X8, 0x22A1000
	0x01E54A84 LDR X8, [X8 + 0x278]
	0x01E54A88 LDR X9, [X0]
	0x01E54A8C LDR X8, [X8]
	0x01E54A90 CMP X9, X8
	0x01E54A94 CSEL X8, X0, X31, EQ
	0x01E54A98 B 0x1E54AA0
	0x01E54A9C MOV X8, X31
	0x01E54AA0 STR X8, [X19 + 0x10]
	0x01E54AA4 LDP X20, X19, [X31 + 0x10]
	0x01E54AA8 LDP X30, X21, [X31], #0x20
	0x01E54AAC RET
	0x01E54AB0 BL 0x1C16F20
	0x01E54AB4 SUB X31, X31, 0x60
	0x01E54AB8 STR X30, [X31 + 0x20]
	0x01E54ABC STP X24, X23, [X31 + 0x30]
	0x01E54AC0 STP X22, X21, [X31 + 0x40]
	0x01E54AC4 STP X20, X19, [X31 + 0x50]
	0x01E54AC8 ADRP X21, 0x2585000
	0x01E54ACC LDRB W8, [X21 + 0x40]
	0x01E54AD0 MOV X19, X1
	0x01E54AD4 MOV X20, X0
	0x01E54AD8 TBNZ X8, 0x0, 0x1E54B20
	0x01E54ADC ADRP X0, 0x22A8000
	0x01E54AE0 LDR X0, [X0 + 0x4A0]
	0x01E54AE4 BL 0x1C16CF4
	0x01E54AE8 ADRP X0, 0x22A8000
	0x01E54AEC LDR X0, [X0 + 0x4A8]
	0x01E54AF0 BL 0x1C16CF4
	0x01E54AF4 ADRP X0, 0x22A8000
	0x01E54AF8 LDR X0, [X0 + 0x4B0]
	0x01E54AFC BL 0x1C16CF4
	0x01E54B00 ADRP X0, 0x22A8000
	0x01E54B04 LDR X0, [X0 + 0x4B8]
	0x01E54B08 BL 0x1C16CF4
	0x01E54B0C ADRP X0, 0x22A8000
	0x01E54B10 LDR X0, [X0 + 0x4C0]
	0x01E54B14 BL 0x1C16CF4
	0x01E54B18 MOVZ W8, 0x1
	0x01E54B1C STRB W8, [X21 + 0x40]
	0x01E54B20 STP X31, X31, [X31 + 0x8]
	0x01E54B24 STR X31, [X31 + 0x18]
	0x01E54B28 LDR X0, [X20 + 0x28]
	0x01E54B2C CBZ X0, 0x1E54C04
	0x01E54B30 ADRP X24, 0x22A8000
	0x01E54B34 ADRP X22, 0x22A8000
	0x01E54B38 ADRP X23, 0x22A8000
	0x01E54B3C ADRP X21, 0x22A8000
	0x01E54B40 LDR X24, [X24 + 0x4C0]
	0x01E54B44 LDR X22, [X22 + 0x4A8]
	0x01E54B48 LDR X23, [X23 + 0x4B8]
	0x01E54B4C LDR X21, [X21 + 0x4A0]
	0x01E54B50 BL 0x1E54C74
	0x01E54B54 LDR X1, [X24]
	0x01E54B58 ADD X8, X31, 0x8
	0x01E54B5C MOV X0, X20
	0x01E54B60 BL 0x301CB58
	0x01E54B64 LDR X1, [X22]
	0x01E54B68 ADD X0, X31, 0x8
	0x01E54B6C BL 0x2BC4350
	0x01E54B70 TBZ X0, 0x0, 0x1E54BDC
	0x01E54B74 LDR X20, [X31 + 0x18]
	0x01E54B78 CBZ X20, 0x1E54C00
	0x01E54B7C LDR X8, [X20]
	0x01E54B80 LDR X1, [X23]
	0x01E54B84 LDRH W9, [X8 + 0x12E]
	0x01E54B88 CBZ X9, 0x1E54BAC
	0x01E54B8C LDR X10, [X8 + 0xB0]
	0x01E54B90 ADD X10, X10, 0x8
	0x01E54B94 LDUR X11, [X10 - 0x8]
	0x01E54B98 CMP X11, X1
	0x01E54B9C B.EQ 0x1E54BBC
	0x01E54BA0 SUBS X9, X9, 0x1
	0x01E54BA4 ADD X10, X10, 0x10
	0x01E54BA8 B.NE 0x1E54B94
	0x01E54BAC MOV X0, X20
	0x01E54BB0 MOV W2, W31
	0x01E54BB4 BL 0x1C5C788
	0x01E54BB8 B 0x1E54BC8
	0x01E54BBC LDRSW X9, [X10]
	0x01E54BC0 ADD X8, X8, X9, 0x4, LSL
	0x01E54BC4 ADD X0, X8, 0x138
	0x01E54BC8 LDP X8, X2, [X0]
	0x01E54BCC MOV X0, X20
	0x01E54BD0 MOV X1, X19
	0x01E54BD4 BLR X8
	0x01E54BD8 B 0x1E54B64
	0x01E54BDC LDR X1, [X21]
	0x01E54BE0 ADD X0, X31, 0x8
	0x01E54BE4 BL 0x2BC434C
	0x01E54BE8 LDP X20, X19, [X31 + 0x50]
	0x01E54BEC LDP X22, X21, [X31 + 0x40]
	0x01E54BF0 LDP X24, X23, [X31 + 0x30]
	0x01E54BF4 LDR X30, [X31 + 0x20]
	0x01E54BF8 ADD X31, X31, 0x60
	0x01E54BFC RET
	0x01E54C00 BL 0x1C16F20
	0x01E54C04 BL 0x1C16F20
	0x01E54C08 B 0x1E54C10
	0x01E54C0C B 0x1E54C10
	0x01E54C10 MOV X19, X0
	0x01E54C14 CMP W1, 0x1
	0x01E54C18 B.NE 0x1E54C44
	0x01E54C1C MOV X0, X19
	0x01E54C20 BL 0x3EB1AD0
	0x01E54C24 LDR X20, [X0]
	0x01E54C28 BL 0x3EB1AE0
	0x01E54C2C LDR X1, [X21]
	0x01E54C30 ADD X0, X31, 0x8
	0x01E54C34 BL 0x2BC434C
	0x01E54C38 CBZ X20, 0x1E54BE8
	0x01E54C3C MOV X0, X20
	0x01E54C40 BL 0x1C16F18
	0x01E54C44 MOV X20, X31
	0x01E54C48 B 0x1E54C50
	0x01E54C4C MOV X19, X0
	0x01E54C50 LDR X1, [X21]
	0x01E54C54 ADD X0, X31, 0x8
	0x01E54C58 BL 0x2BC434C
	0x01E54C5C CBNZ X20, 0x1E54C68
	0x01E54C60 MOV X0, X19
	0x01E54C64 BL 0x1D2C690
	0x01E54C68 MOV X0, X20
	0x01E54C6C BL 0x1C16F18
	0x01E54C70 BL 0x1990590
	0x01E54C74 STP X29, X30, [X31 - 0x60]!
	0x01E54C78 STP X28, X27, [X31 + 0x10]
	0x01E54C7C STP X26, X25, [X31 + 0x20]
	0x01E54C80 STP X24, X23, [X31 + 0x30]
	0x01E54C84 STP X22, X21, [X31 + 0x40]
	0x01E54C88 STP X20, X19, [X31 + 0x50]
	0x01E54C8C ADRP X20, 0x2585000
	0x01E54C90 LDRB W8, [X20 + 0x21]
	0x01E54C94 MOV X19, X0
	0x01E54C98 TBNZ X8, 0x0, 0x1E54D40
	0x01E54C9C ADRP X0, 0x22A7000
	0x01E54CA0 LDR X0, [X0 + 0xCB0]
	0x01E54CA4 BL 0x1C16CF4
	0x01E54CA8 ADRP X0, 0x22A8000
	0x01E54CAC LDR X0, [X0 + 0x4C8]
	0x01E54CB0 BL 0x1C16CF4
	0x01E54CB4 ADRP X0, 0x22A8000
	0x01E54CB8 LDR X0, [X0 + 0x4D0]
	0x01E54CBC BL 0x1C16CF4
	0x01E54CC0 ADRP X0, 0x22A8000
	0x01E54CC4 LDR X0, [X0 + 0x4D8]
	0x01E54CC8 BL 0x1C16CF4
	0x01E54CCC ADRP X0, 0x22A8000
	0x01E54CD0 LDR X0, [X0 + 0x4E0]
	0x01E54CD4 BL 0x1C16CF4
	0x01E54CD8 ADRP X0, 0x22A8000
	0x01E54CDC LDR X0, [X0 + 0x4E8]
	0x01E54CE0 BL 0x1C16CF4
	0x01E54CE4 ADRP X0, 0x22A8000
	0x01E54CE8 LDR X0, [X0 + 0x4F0]
	0x01E54CEC BL 0x1C16CF4
	0x01E54CF0 ADRP X0, 0x22A8000
	0x01E54CF4 LDR X0, [X0 + 0x4F8]
	0x01E54CF8 BL 0x1C16CF4
	0x01E54CFC ADRP X0, 0x22A8000
	0x01E54D00 LDR X0, [X0 + 0x500]
	0x01E54D04 BL 0x1C16CF4
	0x01E54D08 ADRP X0, 0x22A8000
	0x01E54D0C LDR X0, [X0 + 0x508]
	0x01E54D10 BL 0x1C16CF4
	0x01E54D14 ADRP X0, 0x22A8000
	0x01E54D18 LDR X0, [X0 + 0x510]
	0x01E54D1C BL 0x1C16CF4
	0x01E54D20 ADRP X0, 0x22A8000
	0x01E54D24 LDR X0, [X0 + 0x518]
	0x01E54D28 BL 0x1C16CF4
	0x01E54D2C ADRP X0, 0x22A8000
	0x01E54D30 LDR X0, [X0 + 0x520]
	0x01E54D34 BL 0x1C16CF4
	0x01E54D38 MOVZ W8, 0x1
	0x01E54D3C STRB W8, [X20 + 0x21]
	0x01E54D40 LDR X0, [X19 + 0x170]
	0x01E54D44 CBZ X0, 0x1E54F30
	0x01E54D48 ADRP X22, 0x22A8000
	0x01E54D4C ADRP X23, 0x22A8000
	0x01E54D50 ADRP X27, 0x22A8000
	0x01E54D54 ADRP X28, 0x22A8000
	0x01E54D58 ADRP X29, 0x22A8000
	0x01E54D5C ADRP X24, 0x22A8000
	0x01E54D60 ADRP X25, 0x22A8000
	0x01E54D64 LDR X22, [X22 + 0x518]
	0x01E54D68 LDR X23, [X23 + 0x4D0]
	0x01E54D6C LDR X27, [X27 + 0x508]
	0x01E54D70 LDR X28, [X28 + 0x500]
	0x01E54D74 LDR X29, [X29 + 0x510]
	0x01E54D78 LDR X24, [X24 + 0x4F0]
	0x01E54D7C LDR X25, [X25 + 0x4E0]
	0x01E54D80 LDR W8, [X0 + 0x20]
	0x01E54D84 CMP W8, 0x0
	0x01E54D88 B.LE 0x1E54F34
	0x01E54D8C LDR X1, [X22]
	0x01E54D90 BL 0x24F18D4
	0x01E54D94 CBZ X0, 0x1E54F30
	0x01E54D98 MOV X20, X0
	0x01E54D9C LDR X0, [X19 + 0x178]
	0x01E54DA0 CBZ X0, 0x1E54F30
	0x01E54DA4 LDR X1, [X20 + 0x10]
	0x01E54DA8 LDR X2, [X23]
	0x01E54DAC LDRB W21, [X20 + 0x18]
	0x01E54DB0 BL 0x2DBE4B0
	0x01E54DB4 CBZ W21, 0x1E54DDC
	0x01E54DB8 TBNZ X0, 0x0, 0x1E54F28
	0x01E54DBC LDR X0, [X19 + 0x178]
	0x01E54DC0 CBZ X0, 0x1E54F30
	0x01E54DC4 ADRP X8, 0x22A8000
	0x01E54DC8 LDR X1, [X20 + 0x10]
	0x01E54DCC LDR X8, [X8 + 0x4C8]
	0x01E54DD0 LDR X2, [X8]
	0x01E54DD4 BL 0x2DBEF30
	0x01E54DD8 B 0x1E54DFC
	0x01E54DDC TBZ X0, 0x0, 0x1E54F28
	0x01E54DE0 LDR X0, [X19 + 0x178]
	0x01E54DE4 CBZ X0, 0x1E54F30
	0x01E54DE8 ADRP X8, 0x22A8000
	0x01E54DEC LDR X1, [X20 + 0x10]
	0x01E54DF0 LDR X8, [X8 + 0x4D8]
	0x01E54DF4 LDR X2, [X8]
	0x01E54DF8 BL 0x2DBE67C
	0x01E54DFC ADRP X8, 0x22A8000
	0x01E54E00 LDR X2, [X19 + 0xC0]
	0x01E54E04 LDR X8, [X8 + 0x4F8]
	0x01E54E08 MOV X0, X19
	0x01E54E0C MOV X1, X20
	0x01E54E10 LDR X3, [X8]
	0x01E54E14 BL 0x221345C
	0x01E54E18 ADRP X8, 0x22A8000
	0x01E54E1C LDR X2, [X19 + 0xB0]
	0x01E54E20 LDR X8, [X8 + 0x4E8]
	0x01E54E24 MOV X0, X19
	0x01E54E28 MOV X1, X20
	0x01E54E2C LDR X3, [X8]
	0x01E54E30 BL 0x221345C
	0x01E54E34 LDR X2, [X19 + 0xB8]
	0x01E54E38 LDR X3, [X27]
	0x01E54E3C MOV X0, X19
	0x01E54E40 MOV X1, X20
	0x01E54E44 BL 0x221345C
	0x01E54E48 LDR X2, [X19 + 0xC8]
	0x01E54E4C LDR X3, [X28]
	0x01E54E50 MOV X0, X19
	0x01E54E54 MOV X1, X20
	0x01E54E58 BL 0x221345C
	0x01E54E5C LDR X2, [X19 + 0xD0]
	0x01E54E60 LDR X3, [X29]
	0x01E54E64 MOV X0, X19
	0x01E54E68 MOV X1, X20
	0x01E54E6C BL 0x221345C
	0x01E54E70 LDR X2, [X19 + 0xD8]
	0x01E54E74 LDR X3, [X24]
	0x01E54E78 MOV X0, X19
	0x01E54E7C MOV X1, X20
	0x01E54E80 BL 0x221345C
	0x01E54E84 LDR X0, [X20 + 0x10]
	0x01E54E88 LDR X1, [X25]
	0x01E54E8C BL 0x1C16E00
	0x01E54E90 CBZ X0, 0x1E54F28
	0x01E54E94 ADRP X8, 0x22A7000
	0x01E54E98 LDRB W26, [X20 + 0x18]
	0x01E54E9C LDR X8, [X8 + 0xCB0]
	0x01E54EA0 MOV X21, X0
	0x01E54EA4 LDR X0, [X8]
	0x01E54EA8 BL 0x1C16F10
	0x01E54EAC LDR X8, [X21]
	0x01E54EB0 LDR X1, [X25]
	0x01E54EB4 MOV X20, X0
	0x01E54EB8 LDRH W9, [X8 + 0x12E]
	0x01E54EBC CBZ X9, 0x1E54EE0
	0x01E54EC0 LDR X10, [X8 + 0xB0]
	0x01E54EC4 ADD X10, X10, 0x8
	0x01E54EC8 LDUR X11, [X10 - 0x8]
	0x01E54ECC CMP X11, X1
	0x01E54ED0 B.EQ 0x1E54EF0
	0x01E54ED4 SUBS X9, X9, 0x1
	0x01E54ED8 ADD X10, X10, 0x10
	0x01E54EDC B.NE 0x1E54EC8
	0x01E54EE0 MOV X0, X21
	0x01E54EE4 MOV W2, W31
	0x01E54EE8 BL 0x1C5C788
	0x01E54EEC B 0x1E54EFC
	0x01E54EF0 LDRSW X9, [X10]
	0x01E54EF4 ADD X8, X8, X9, 0x4, LSL
	0x01E54EF8 ADD X0, X8, 0x138
	0x01E54EFC LDR X2, [X0 + 0x8]
	0x01E54F00 MOV X0, X20
	0x01E54F04 MOV X1, X21
	0x01E54F08 MOV X3, X31
	0x01E54F0C BL 0x2A6B948
	0x01E54F10 MOV X0, X19
	0x01E54F14 MOV X1, X20
	0x01E54F18 CBZ W26, 0x1E54F24
	0x01E54F1C BL 0x1E45F0C
	0x01E54F20 B 0x1E54F28
	0x01E54F24 BL 0x1E4AFD4
	0x01E54F28 LDR X0, [X19 + 0x170]
	0x01E54F2C CBNZ X0, 0x1E54D80
	0x01E54F30 BL 0x1C16F20
	0x01E54F34 LDP X20, X19, [X31 + 0x50]
	0x01E54F38 LDP X22, X21, [X31 + 0x40]
	0x01E54F3C LDP X24, X23, [X31 + 0x30]
	0x01E54F40 LDP X26, X25, [X31 + 0x20]
	0x01E54F44 LDP X28, X27, [X31 + 0x10]
	0x01E54F48 LDP X29, X30, [X31], #0x60
	0x01E54F4C RET
	0x01E54F50 STR X30, [X31 - 0x30]!
	0x01E54F54 STP X22, X21, [X31 + 0x10]
	0x01E54F58 STP X20, X19, [X31 + 0x20]
	0x01E54F5C ADRP X21, 0x2585000
	0x01E54F60 ADRP X22, 0x22A8000
	0x01E54F64 LDRB W8, [X21 + 0x1A]
	0x01E54F68 LDR X22, [X22 + 0x528]
	0x01E54F6C MOV X20, X1
	0x01E54F70 MOV X19, X0
	0x01E54F74 TBNZ X8, 0x0, 0x1E54F8C
	0x01E54F78 ADRP X0, 0x22A8000
	0x01E54F7C LDR X0, [X0 + 0x528]
	0x01E54F80 BL 0x1C16CF4
	0x01E54F84 MOVZ W8, 0x1
	0x01E54F88 STRB W8, [X21 + 0x1A]
	0x01E54F8C LDR X0, [X22]
	0x01E54F90 MOV X1, X20
	0x01E54F94 MOV X2, X31
	0x01E54F98 BL 0x321EFD0
	0x01E54F9C LDR X8, [X19]
	0x01E54FA0 MOV X2, X0
	0x01E54FA4 MOV X0, X19
	0x01E54FA8 LDP X20, X19, [X31 + 0x20]
	0x01E54FAC LDR X4, [X8 + 0x218]
	0x01E54FB0 LDR X3, [X8 + 0x220]
	0x01E54FB4 LDP X22, X21, [X31 + 0x10]
	0x01E54FB8 MOVZ W1, 0x5
	0x01E54FBC LDR X30, [X31], #0x30
	0x01E54FC0 BR X4
	0x01E54FC4 SUB X31, X31, 0x40
	0x01E54FC8 STP X30, X23, [X31 + 0x10]
	0x01E54FCC STP X22, X21, [X31 + 0x20]
	0x01E54FD0 STP X20, X19, [X31 + 0x30]
	0x01E54FD4 ADRP X21, 0x2585000
	0x01E54FD8 LDRB W8, [X21 + 0x1B]
	0x01E54FDC MOV X20, X1
	0x01E54FE0 MOV X19, X0
	0x01E54FE4 TBNZ X8, 0x0, 0x1E55014
	0x01E54FE8 ADRP X0, 0x22A7000
	0x01E54FEC LDR X0, [X0 + 0xD98]
	0x01E54FF0 BL 0x1C16CF4
	0x01E54FF4 ADRP X0, 0x22A3000
	0x01E54FF8 LDR X0, [X0 + 0x628]
	0x01E54FFC BL 0x1C16CF4
	0x01E55000 ADRP X0, 0x22A7000
	0x01E55004 LDR X0, [X0 + 0x530]
	0x01E55008 BL 0x1C16CF4
	0x01E5500C MOVZ W8, 0x1
	0x01E55010 STRB W8, [X21 + 0x1B]
	0x01E55014 CBZ X20, 0x1E550C0
	0x01E55018 ADRP X8, 0x22A2000
	0x01E5501C LDR X8, [X8 + 0x628]
	0x01E55020 LDRH W9, [X20 + 0x10]
	0x01E55024 ADRP X21, 0x22A6000
	0x01E55028 ADRP X23, 0x22A7000
	0x01E5502C LDR X0, [X8]
	0x01E55030 LDR X21, [X21 + 0xD98]
	0x01E55034 LDR X23, [X23 + 0x530]
	0x01E55038 ADD X1, X31, 0xC
	0x01E5503C STRH W9, [X31 + 0xC]
	0x01E55040 BL 0x1C16E04
	0x01E55044 LDR X8, [X21]
	0x01E55048 LDP X21, X22, [X20 + 0x18]
	0x01E5504C MOV X20, X0
	0x01E55050 LDR W9, [X8 + 0xE0]
	0x01E55054 CBNZ W9, 0x1E55060
	0x01E55058 MOV X0, X8
	0x01E5505C BL 0x1C16DFC
	0x01E55060 MOV X0, X22
	0x01E55064 BL 0x1E49864
	0x01E55068 LDR X8, [X23]
	0x01E5506C MOV X3, X0
	0x01E55070 MOV X1, X20
	0x01E55074 MOV X2, X21
	0x01E55078 MOV X0, X8
	0x01E5507C MOV X4, X31
	0x01E55080 BL 0x3227C18
	0x01E55084 LDR X8, [X19]
	0x01E55088 MOV X2, X0
	0x01E5508C MOVZ W1, 0x1
	0x01E55090 MOV X0, X19
	0x01E55094 LDR X9, [X8 + 0x218]
	0x01E55098 LDR X3, [X8 + 0x220]
	0x01E5509C BLR X9
	0x01E550A0 MOVZ W1, 0x13
	0x01E550A4 MOV X0, X19
	0x01E550A8 BL 0x1E47DC0
	0x01E550AC LDP X20, X19, [X31 + 0x30]
	0x01E550B0 LDP X22, X21, [X31 + 0x20]
	0x01E550B4 LDP X30, X23, [X31 + 0x10]
	0x01E550B8 ADD X31, X31, 0x40
	0x01E550BC RET
	0x01E550C0 BL 0x1C16F20
	0x01E550C4 STR X30, [X31 - 0x20]!
	0x01E550C8 STP X20, X19, [X31 + 0x10]
	0x01E550CC CBZ X1, 0x1E5510C
	0x01E550D0 MOV X20, X1
	0x01E550D4 MOV X19, X0
	0x01E550D8 MOV X0, X1
	0x01E550DC MOV X1, X31
	0x01E550E0 BL 0x1E5B88C
	0x01E550E4 STR X0, [X19 + 0x160]
	0x01E550E8 MOV X0, X20
	0x01E550EC MOV X1, X31
	0x01E550F0 BL 0x1E5B5A4
	0x01E550F4 CBZ X0, 0x1E5510C
	0x01E550F8 LDR X1, [X0 + 0x10]
	0x01E550FC MOV X0, X19
	0x01E55100 LDP X20, X19, [X31 + 0x10]
	0x01E55104 LDR X30, [X31], #0x20
	0x01E55108 B 0x1E4BE1C
	0x01E5510C BL 0x1C16F20
	0x01E55110 STR X30, [X31 - 0x40]!
	0x01E55114 STP X24, X23, [X31 + 0x10]
	0x01E55118 STP X22, X21, [X31 + 0x20]
	0x01E5511C STP X20, X19, [X31 + 0x30]
	0x01E55120 ADRP X23, 0x2584000
	0x01E55124 LDRB W8, [X23 + 0x1E]
	0x01E55128 MOV W20, W3
	0x01E5512C MOV X21, X2
	0x01E55130 MOV X22, X1
	0x01E55134 MOV X19, X0
	0x01E55138 TBNZ X8, 0x0, 0x1E55198
	0x01E5513C ADRP X0, 0x229F000
	0x01E55140 LDR X0, [X0 + 0x9D8]
	0x01E55144 BL 0x1C16CF4
	0x01E55148 ADRP X0, 0x22A7000
	0x01E5514C LDR X0, [X0 + 0x538]
	0x01E55150 BL 0x1C16CF4
	0x01E55154 ADRP X0, 0x22A7000
	0x01E55158 LDR X0, [X0 + 0x540]
	0x01E5515C BL 0x1C16CF4
	0x01E55160 ADRP X0, 0x22A7000
	0x01E55164 LDR X0, [X0 + 0x2B8]
	0x01E55168 BL 0x1C16CF4
	0x01E5516C ADRP X0, 0x22A7000
	0x01E55170 LDR X0, [X0 + 0x548]
	0x01E55174 BL 0x1C16CF4
	0x01E55178 ADRP X0, 0x22A7000
	0x01E5517C LDR X0, [X0 + 0x550]
	0x01E55180 BL 0x1C16CF4
	0x01E55184 ADRP X0, 0x22A7000
	0x01E55188 LDR X0, [X0 + 0x558]
	0x01E5518C BL 0x1C16CF4
	0x01E55190 MOVZ W8, 0x1
	0x01E55194 STRB W8, [X23 + 0x1E]
	0x01E55198 MOV X0, X22
	0x01E5519C MOV X1, X31
	0x01E551A0 BL 0x32277A8
	0x01E551A4 TBZ X0, 0x0, 0x1E551D0
	0x01E551A8 ADRP X9, 0x22A7000
	0x01E551AC LDR X8, [X19]
	0x01E551B0 LDR X9, [X9 + 0x550]
	0x01E551B4 MOVZ W1, 0x1
	0x01E551B8 MOV X0, X19
	0x01E551BC LDR X3, [X8 + 0x220]
	0x01E551C0 LDR X2, [X9]
	0x01E551C4 LDR X9, [X8 + 0x218]
	0x01E551C8 BLR X9
	0x01E551CC B 0x1E552CC
	0x01E551D0 ADRP X8, 0x22A7000
	0x01E551D4 LDR X8, [X8 + 0x558]
	0x01E551D8 LDR W2, [X19 + 0x80]
	0x01E551DC MOVZ W1, 0xDB
	0x01E551E0 MOV X0, X19
	0x01E551E4 LDR X3, [X8]
	0x01E551E8 BL 0x1E4CB70
	0x01E551EC TBZ X0, 0x0, 0x1E552CC
	0x01E551F0 ADRP X8, 0x22A7000
	0x01E551F4 LDR X8, [X8 + 0x2B8]
	0x01E551F8 LDR X0, [X8]
	0x01E551FC BL 0x1C16F10
	0x01E55200 ADRP X8, 0x22A7000
	0x01E55204 LDR X8, [X8 + 0x540]
	0x01E55208 MOV X23, X0
	0x01E5520C LDR X1, [X8]
	0x01E55210 BL 0x29D2C7C
	0x01E55214 CBZ X23, 0x1E552E8
	0x01E55218 ADRP X24, 0x22A7000
	0x01E5521C LDR X24, [X24 + 0x538]
	0x01E55220 MOVZ W1, 0xD1
	0x01E55224 MOV X0, X23
	0x01E55228 MOV X2, X22
	0x01E5522C LDR X3, [X24]
	0x01E55230 BL 0x29D3534
	0x01E55234 CBZ X21, 0x1E5524C
	0x01E55238 LDR X3, [X24]
	0x01E5523C MOVZ W1, 0xD0
	0x01E55240 MOV X0, X23
	0x01E55244 MOV X2, X21
	0x01E55248 BL 0x29D3534
	0x01E5524C TBZ X20, 0x0, 0x1E55280
	0x01E55250 ADRP X8, 0x229F000
	0x01E55254 LDR X8, [X8 + 0x9D8]
	0x01E55258 ADD X1, X31, 0xC
	0x01E5525C LDR X0, [X8]
	0x01E55260 MOVZ W8, 0x2
	0x01E55264 STRB W8, [X31 + 0xC]
	0x01E55268 BL 0x1C16E04
	0x01E5526C LDR X3, [X24]
	0x01E55270 MOV X2, X0
	0x01E55274 MOVZ W1, 0xEA
	0x01E55278 MOV X0, X23
	0x01E5527C BL 0x29D3534
	0x01E55280 ADRP X20, 0x22A7000
	0x01E55284 LDR X20, [X20 + 0x548]
	0x01E55288 LDR X19, [X19 + 0x10]
	0x01E5528C LDR X0, [X20]
	0x01E55290 LDR W8, [X0 + 0xE0]
	0x01E55294 CBNZ W8, 0x1E5529C
	0x01E55298 BL 0x1C16DFC
	0x01E5529C CBZ X19, 0x1E552E8
	0x01E552A0 LDR X8, [X20]
	0x01E552A4 LDR X9, [X19]
	0x01E552A8 MOVZ W1, 0xDB
	0x01E552AC MOV X0, X19
	0x01E552B0 LDR X8, [X8 + 0xB8]
	0x01E552B4 LDR X10, [X9 + 0x228]
	0x01E552B8 LDR X4, [X9 + 0x230]
	0x01E552BC MOV X2, X23
	0x01E552C0 LDR X3, [X8]
	0x01E552C4 BLR X10
	0x01E552C8 B 0x1E552D0
	0x01E552CC MOV W0, W31
	0x01E552D0 LDP X20, X19, [X31 + 0x30]
	0x01E552D4 LDP X22, X21, [X31 + 0x20]
	0x01E552D8 LDP X24, X23, [X31 + 0x10]
	0x01E552DC AND W0, W0, 0x1
	0x01E552E0 LDR X30, [X31], #0x40
	0x01E552E4 RET
	0x01E552E8 BL 0x1C16F20
	0x01E552EC STP X30, X21, [X31 - 0x20]!
	0x01E552F0 STP X20, X19, [X31 + 0x10]
	0x01E552F4 MOV X19, X1
	0x01E552F8 MOV X1, X31
	0x01E552FC MOV X20, X0
	0x01E55300 AND W21, W2, 0x1
	0x01E55304 BL 0x33BDD8C
	0x01E55308 STR X19, [X20 + 0x10]
	0x01E5530C STRB W21, [X20 + 0x18]
	0x01E55310 LDP X20, X19, [X31 + 0x10]
	0x01E55314 LDP X30, X21, [X31], #0x20
	0x01E55318 RET
	0x01E5531C STR X30, [X31 - 0x30]!

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+80], X29
	003 Move [X31+88], X30
	004 Move [X31+96], X28
	005 Move [X31+104], X27
	006 Move [X31+112], X26
	007 Move [X31+120], X25
	008 Move [X31+128], X24
	009 Move [X31+136], X23
	010 Move [X31+144], X22
	011 Move [X31+152], X21
	012 Move [X31+160], X20
	013 Move [X31+168], X19
	014 Move X19, 0x2586000
	015 Move W8, [X19+25]
	016 Move X20, X1
	017 Move X24, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {90}
	022 Move X0, 0x22A4000
	023 Move X0, [X0+3992]
	024 Call 0x1C17CF4
	025 Move X0, 0x22A0000
	026 Move X0, [X0+2904]
	027 Call 0x1C17CF4
	028 Move X0, 0x22A8000
	029 Move X0, [X0+3224]
	030 Call 0x1C17CF4
	031 Move X0, 0x22A0000
	032 Move X0, [X0+1560]
	033 Call 0x1C17CF4
	034 Move X0, 0x22A9000
	035 Move X0, [X0+568]
	036 Call 0x1C17CF4
	037 Move X0, 0x22A9000
	038 Move X0, [X0+576]
	039 Call 0x1C17CF4
	040 Move X0, 0x22A9000
	041 Move X0, [X0+584]
	042 Call 0x1C17CF4
	043 Move X0, 0x22A9000
	044 Move X0, [X0+592]
	045 Call 0x1C17CF4
	046 Move X0, 0x22A9000
	047 Move X0, [X0+1152]
	048 Call 0x1C17CF4
	049 Move X0, 0x22A8000
	050 Move X0, [X0+3488]
	051 Call 0x1C17CF4
	052 Move X0, 0x22A1000
	053 Move X0, [X0+3672]
	054 Call 0x1C17CF4
	055 Move X0, 0x22A0000
	056 Move X0, [X0+1880]
	057 Call 0x1C17CF4
	058 Move X0, 0x22A9000
	059 Move X0, [X0+600]
	060 Call 0x1C17CF4
	061 Move X0, 0x22A9000
	062 Move X0, [X0+1160]
	063 Call 0x1C17CF4
	064 Move X0, 0x22A9000
	065 Move X0, [X0+712]
	066 Call 0x1C17CF4
	067 Move X0, 0x22A9000
	068 Move X0, [X0+1168]
	069 Call 0x1C17CF4
	070 Move X0, 0x22A9000
	071 Move X0, [X0+736]
	072 Call 0x1C17CF4
	073 Move X0, 0x22A9000
	074 Move X0, [X0+744]
	075 Call 0x1C17CF4
	076 Move X0, 0x22A9000
	077 Move X0, [X0+784]
	078 Call 0x1C17CF4
	079 Move X0, 0x22A0000
	080 Move X0, [X0+2760]
	081 Call 0x1C17CF4
	082 Move X0, 0x22A2000
	083 Move X0, [X0+632]
	084 Call 0x1C17CF4
	085 Move X0, 0x22A9000
	086 Move X0, [X0+1176]
	087 Call 0x1C17CF4
	088 Move W8, 1
	089 Move [X19+25], W8
	090 Move [X31+48], X31
	091 Move [X31+56], X31
	092 Move [X31+64], X31
	093 Compare X20, 0
	094 JumpIfEqual {788}
	095 Move X0, X20
	096 Move X1, X31
	097 Call EventData.get_Sender, X0
	098 Move X8, [X24+272]
	099 Move W22, W0
	100 Compare X8, 0
	101 JumpIfEqual {110}
	102 Move X9, [X8]
	103 Move X0, X8
	104 Move W1, W22
	105 Move W2, W31
	106 Move X10, [X9+472]
	107 Move X3, [X9+480]
	108 NotImplemented "Instruction BLR not yet implemented."
	109 Move X21, X0
	110 Move X21, X31
	111 Move W9, [X20+16]
	112 Subtract W8, W9, 223
	113 NotImplemented "Instruction CMP not yet implemented."
	114 Move X9, -20078592
	115 Add X9, X9, 2838
	116 NotImplemented "Instruction ADR not yet implemented."
	117 NotImplemented "Instruction LDRH not yet implemented."
	118 Add X10, X10, X11
	119 CallNoReturn X10
	120 Move X8, 0x22A9000
	121 Move X8, [X8+744]
	122 Move X0, [X8]
	123 Call 0x1C17F10
	124 Move X8, 0x22A9000
	125 Move X8, [X8+736]
	126 Move X21, X0
	127 Move X1, [X8]
	128 Call List`1<Object>..ctor, X0
	129 Move W1, 222
	130 Move X0, X20
	131 Move X2, X31
	132 Call EventData.get_Item, X0, X1
	133 Compare X0, 0
	134 JumpIfEqual {788}
	135 Move X26, 0x22A8000
	136 Move X26, [X26+3488]
	137 Move X8, [X0]
	138 Move X22, X0
	139 Move X1, [X26]
	140 Move W10, [X8+304]
	141 Move W9, [X1+304]
	142 NotImplemented "Instruction CMP not yet implemented."
	143 Move X8, [X8+200]
	144 Add X8, X8, X9
	145 NotImplemented "Instruction LDUR not yet implemented."
	146 NotImplemented "Instruction CMP not yet implemented."
	147 Move [X31+16], X24
	148 Move X8, 0x22A9000
	149 Move X8, [X8+568]
	150 Move X0, X22
	151 Move X1, [X8]
	152 Call Dictionary`2<Object, Object>.get_Keys, X0
	153 Compare X0, 0
	154 JumpIfEqual {788}
	155 Move X8, 0x22A9000
	156 Move X8, [X8+600]
	157 Move X1, [X8]
	158 Add X8, X31, 24
	159 Call KeyCollection<Object, Object>.GetEnumerator, X0
	160 NotImplemented "Instruction LDUR not yet implemented."
	161 Move X8, [X31+40]
	162 Move X27, 0x22A9000
	163 Move X28, 0x22A2000
	164 Move X29, 0x22A9000
	165 Move X27, [X27+584]
	166 Move X28, [X28+632]
	167 Move X29, [X29+784]
	168 Move [X31+3], V0
	169 Move [X31+64], X8
	170 Move X19, 0x22A9000
	171 Move X19, [X19+712]
	172 Move X1, [X27]
	173 Add X0, X31, 48
	174 Call Enumerator<Object, Object>.MoveNext, X0
	175 Move TEMP, X0
	176 And TEMP, TEMP, 1
	177 Compare TEMP, 1
	178 JumpIfNotEqual {252}
	179 Move X24, [X31+64]
	180 Compare X24, 0
	181 JumpIfEqual {185}
	182 Move X1, [X28]
	183 Move X8, [X24]
	184 NotImplemented "Instruction CMP not yet implemented."
	185 Move X0, X22
	186 Move X1, X24
	187 Move X2, X31
	188 Call Hashtable.get_Item, X0, X1
	189 Move X25, X0
	190 Move X0, [X29]
	191 Call 0x1C17F10
	192 Move X23, X0
	193 Compare X25, 0
	194 JumpIfEqual {204}
	195 Move X8, [X25]
	196 Move X1, [X26]
	197 Move W10, [X8+304]
	198 Move W9, [X1+304]
	199 NotImplemented "Instruction CMP not yet implemented."
	200 Move X8, [X8+200]
	201 Add X8, X8, X9
	202 NotImplemented "Instruction LDUR not yet implemented."
	203 NotImplemented "Instruction CMP not yet implemented."
	204 Move X0, X23
	205 Move X1, X24
	206 Move X2, X25
	207 Move X3, X31
	208 Call RoomInfo..ctor, X0, X1, X2
	209 Compare X21, 0
	210 JumpIfEqual {792}
	211 Move W10, [X21+28]
	212 Move X8, [X21+16]
	213 Move X9, [X19]
	214 Add W10, W10, 1
	215 Move [X21+28], W10
	216 Compare X8, 0
	217 JumpIfEqual {793}
	218 NotImplemented "Instruction LDRSW not yet implemented."
	219 Move W11, [X8+24]
	220 NotImplemented "Instruction CMP not yet implemented."
	221 Add W9, W10, 1
	222 Add X8, X8, X10
	223 Move [X21+24], W9
	224 Move [X8+32], X23
	225 Move X8, [X9+32]
	226 Move X8, [X8+192]
	227 Move X2, [X8+112]
	228 Move X0, X21
	229 Move X1, X23
	230 Call List`1<Object>.AddWithResize, X0, X1
	231 Subtract W8, W9, 251
	232 NotImplemented "Instruction CMP not yet implemented."
	233 Move X9, -20078592
	234 Add X9, X9, 2854
	235 NotImplemented "Instruction ADR not yet implemented."
	236 NotImplemented "Instruction LDRH not yet implemented."
	237 Add X10, X10, X11
	238 CallNoReturn X10
	239 Move X8, 0x22A9000
	240 Move X21, [X24+216]
	241 Move X8, [X8+1152]
	242 Move X0, [X8]
	243 Call 0x1C17F10
	244 Move X1, X20
	245 Move X22, X0
	246 Call ErrorInfo..ctor, X0, X1
	247 Compare X21, 0
	248 JumpIfEqual {788}
	249 Move X0, X21
	250 Move X1, X22
	251 Call ErrorInfoCallbacksContainer.OnErrorInfo, X0, X1
	252 Move X8, 0x22A9000
	253 Move X8, [X8+576]
	254 Add X0, X31, 48
	255 Move X1, [X8]
	256 Call Enumerator<Object, Object>.Dispose, X0
	257 Move X24, [X31+16]
	258 Move X0, [X24+200]
	259 Compare X0, 0
	260 JumpIfEqual {788}
	261 Move X1, X21
	262 Call LobbyCallbacksContainer.OnRoomListUpdate, X0, X1
	263 Move W1, 229
	264 Move X0, X20
	265 Move X2, X31
	266 Call EventData.get_Item, X0, X1
	267 Compare X0, 0
	268 JumpIfEqual {788}
	269 Move X19, 0x22A0000
	270 Move X19, [X19+1880]
	271 Move X8, [X0]
	272 Move X1, [X19]
	273 Move X8, [X8+64]
	274 Move X9, [X1+64]
	275 NotImplemented "Instruction CMP not yet implemented."
	276 Call 0x1C17E08
	277 Move W8, [X0]
	278 Move W1, 228
	279 Move X0, X20
	280 Move X2, X31
	281 Move [X24+284], W8
	282 Call EventData.get_Item, X0, X1
	283 Compare X0, 0
	284 JumpIfEqual {788}
	285 Move X8, [X0]
	286 Move X1, [X19]
	287 Move X8, [X8+64]
	288 Move X9, [X1+64]
	289 NotImplemented "Instruction CMP not yet implemented."
	290 Call 0x1C17E08
	291 Move W8, [X0]
	292 Move W1, 227
	293 Move X0, X20
	294 Move X2, X31
	295 Move [X24+288], W8
	296 Call EventData.get_Item, X0, X1
	297 Compare X0, 0
	298 JumpIfEqual {788}
	299 Move X8, [X0]
	300 Move X1, [X19]
	301 Move X8, [X8+64]
	302 Move X9, [X1+64]
	303 NotImplemented "Instruction CMP not yet implemented."
	304 Call 0x1C17E08
	305 Move W8, [X0]
	306 Move [X24+280], W8
	307 Move W1, 213
	308 Move X0, X20
	309 Move X2, X31
	310 Call EventData.get_Item, X0, X1
	311 Move X8, 0x22A0000
	312 Move X8, [X8+2760]
	313 Move X1, [X8]
	314 Call 0x1C17E00
	315 Move X21, X0
	316 Move W1, 229
	317 Move X0, X20
	318 Move X2, X31
	319 Call EventData.get_Item, X0, X1
	320 Move X19, 0x22A1000
	321 Move X19, [X19+3672]
	322 Move X1, [X19]
	323 Call 0x1C17E00
	324 Move X22, X0
	325 Move W1, 228
	326 Move X0, X20
	327 Move X2, X31
	328 Call EventData.get_Item, X0, X1
	329 Move X1, [X19]
	330 Call 0x1C17E00
	331 Move X23, X0
	332 Move W1, 212
	333 Move X0, X20
	334 Move X2, X31
	335 Call EventData.get_Item, X0, X1
	336 Compare X0, 0
	337 JumpIfEqual {350}
	338 Move X8, 0x22A8000
	339 Move X8, [X8+3224]
	340 Move X9, [X0]
	341 Move X26, X0
	342 Move X8, [X8]
	343 Move W11, [X9+304]
	344 Move W10, [X8+304]
	345 NotImplemented "Instruction CMP not yet implemented."
	346 Move X9, [X9+200]
	347 Add X9, X9, X10
	348 NotImplemented "Instruction LDUR not yet implemented."
	349 NotImplemented "Instruction CMP not yet implemented."
	350 Move W1, 212
	351 Move X0, X20
	352 Move X2, X31
	353 Call EventData.get_Item, X0, X1
	354 Move X8, 0x22A0000
	355 Move X8, [X8+1560]
	356 Move X1, [X8]
	357 Call 0x1C17E00
	358 Move X25, X0
	359 Move X26, X31
	360 Move W9, 1
	361 Move X8, [X24+256]
	362 Compare X8, 0
	363 JumpIfEqual {788}
	364 Move [X31+12], W9
	365 Move W2, [X8+24]
	366 Move W9, [X8+28]
	367 Move X19, X20
	368 Add W9, W9, 1
	369 NotImplemented "Instruction CMP not yet implemented."
	370 Move [X8+24], W31
	371 Move [X8+28], W9
	372 Move X0, [X8+16]
	373 Move W1, W31
	374 Move X3, X31
	375 Call Array.Clear, X0, X1, X2
	376 Move [X31], X26
	377 Move [X31+16], X19
	378 Compare X21, 0
	379 JumpIfEqual {788}
	380 Move W8, [X21+24]
	381 Move X20, X24
	382 NotImplemented "Instruction CMP not yet implemented."
	383 Move X19, X31
	384 Add X28, X23, 32
	385 Add X29, X22, 32
	386 Add X27, X25, 32
	387 Add X24, X21, 32
	388 Move X8, 0x22A9000
	389 Move X8, [X8+1176]
	390 Move X0, [X8]
	391 Call 0x1C17F10
	392 Move X1, X31
	393 Move X26, X0
	394 Call TypedLobbyInfo..ctor, X0
	395 Move W8, [X21+24]
	396 NotImplemented "Instruction CMP not yet implemented."
	397 Compare X26, 0
	398 JumpIfEqual {788}
	399 Move X8, [X24]
	400 Move [X26+16], X8
	401 Compare X25, 0
	402 JumpIfEqual {788}
	403 Move W8, [X25+24]
	404 NotImplemented "Instruction CMP not yet implemented."
	405 Move W8, [X27]
	406 Move [X26+24], W8
	407 Compare X22, 0
	408 JumpIfEqual {788}
	409 Move W8, [X22+24]
	410 NotImplemented "Instruction CMP not yet implemented."
	411 Move W8, [X29]
	412 Move [X26+28], W8
	413 Compare X23, 0
	414 JumpIfEqual {788}
	415 Move W8, [X23+24]
	416 NotImplemented "Instruction CMP not yet implemented."
	417 Move W8, [X28]
	418 Move [X26+32], W8
	419 Move X0, [X20+256]
	420 Compare X0, 0
	421 JumpIfEqual {788}
	422 Move X9, 0x22A9000
	423 Move W10, [X0+28]
	424 Move X8, [X0+16]
	425 Move X9, [X9+1160]
	426 Add W10, W10, 1
	427 Move X9, [X9]
	428 Move [X0+28], W10
	429 Compare X8, 0
	430 JumpIfEqual {788}
	431 NotImplemented "Instruction LDRSW not yet implemented."
	432 Move W11, [X8+24]
	433 NotImplemented "Instruction CMP not yet implemented."
	434 Add W9, W10, 1
	435 Add X8, X8, X10
	436 Move [X0+24], W9
	437 Move [X8+32], X26
	438 Move X8, [X9+32]
	439 Move X1, X26
	440 Move X8, [X8+192]
	441 Move X2, [X8+112]
	442 Call List`1<Object>.AddWithResize, X0, X1
	443 NotImplemented "Instruction LDRSW not yet implemented."
	444 Add X19, X19, 1
	445 NotImplemented "Instruction CMP not yet implemented."
	446 Move W8, [X31+12]
	447 Move TEMP, X8
	448 And TEMP, TEMP, 1
	449 Compare TEMP, 1
	450 JumpIfEqual {454}
	451 Move X0, [X31]
	452 Move X1, X31
	453 Call ByteArraySlice.Release, X0
	454 Move X24, X20
	455 Move X0, [X20+200]
	456 Move X20, [X31+16]
	457 Compare X0, 0
	458 JumpIfEqual {788}
	459 Move X1, [X24+256]
	460 Call LobbyCallbacksContainer.OnLobbyStatisticsUpdate, X0, X1
	461 Move X21, [X24+48]
	462 Compare X21, 0
	463 JumpIfEqual {585}
	464 Move W1, 221
	465 Move X0, X20
	466 Move X2, X31
	467 Call EventData.get_Item, X0, X1
	468 Compare X21, 0
	469 JumpIfEqual {638}
	470 Move X0, [X20+24]
	471 Compare X0, 0
	472 JumpIfEqual {788}
	473 Move W1, 233
	474 Move X2, X31
	475 Call ParameterDictionary.ContainsKey, X0, X1
	476 Move TEMP, X0
	477 And TEMP, TEMP, 1
	478 Compare TEMP, 1
	479 JumpIfNotEqual {628}
	480 Move X0, [X20+24]
	481 Compare X0, 0
	482 JumpIfEqual {788}
	483 Move W1, 233
	484 Move X2, X31
	485 Call ParameterDictionary.get_Item, X0, X1
	486 Compare X0, 0
	487 JumpIfEqual {788}
	488 Move X8, 0x22A0000
	489 Move X8, [X8+2904]
	490 Move X9, [X0]
	491 Move X1, [X8]
	492 Move X8, [X9+64]
	493 Move X9, [X1+64]
	494 NotImplemented "Instruction CMP not yet implemented."
	495 Call 0x1C17E08
	496 Move W8, [X0]
	497 Move [X21+29], W31
	498 Move [X21+48], W8
	499 Compare W8, 0
	500 JumpIfNotEqual {638}
	501 Move X0, [X20+24]
	502 Compare X0, 0
	503 JumpIfEqual {788}
	504 Move W1, 253
	505 Move X2, X31
	506 Call ParameterDictionary.ContainsKey, X0, X1
	507 Move TEMP, X0
	508 And TEMP, TEMP, 1
	509 Compare TEMP, 1
	510 JumpIfNotEqual {561}
	511 Move W1, 253
	512 Move X0, X20
	513 Move X2, X31
	514 Call EventData.get_Item, X0, X1
	515 Compare X0, 0
	516 JumpIfEqual {788}
	517 Move X8, 0x22A0000
	518 Move X8, [X8+1880]
	519 Move X9, [X0]
	520 Move X1, [X8]
	521 Move X8, [X9+64]
	522 Move X9, [X1+64]
	523 NotImplemented "Instruction CMP not yet implemented."
	524 Call 0x1C17E08
	525 Move W21, [X0]
	526 Move W1, 249
	527 Move X0, X20
	528 Move X2, X31
	529 Call EventData.get_Item, X0, X1
	530 Move X4, X0
	531 Compare X0, 0
	532 JumpIfEqual {544}
	533 Move X9, 0x22A8000
	534 Move X9, [X9+3488]
	535 Move X8, [X4]
	536 Move X1, [X9]
	537 Move W10, [X8+304]
	538 Move W9, [X1+304]
	539 NotImplemented "Instruction CMP not yet implemented."
	540 Move X8, [X8+200]
	541 Add X8, X8, X9
	542 NotImplemented "Instruction LDUR not yet implemented."
	543 NotImplemented "Instruction CMP not yet implemented."
	544 Compare X21, 0
	545 JumpIfEqual {605}
	546 Move X8, [X21]
	547 Move X0, X21
	548 Move X1, X4
	549 Move X9, [X8+376]
	550 Move X2, [X8+384]
	551 NotImplemented "Instruction BLR not yet implemented."
	552 Move [X21+48], W31
	553 Move X0, [X24+264]
	554 Compare X0, 0
	555 JumpIfEqual {788}
	556 Move X1, X31
	557 Call Player.get_ActorNumber, X0
	558 NotImplemented "Instruction CMP not yet implemented."
	559 NotImplemented "Instruction CSET not yet implemented."
	560 Move [X21+29], W8
	561 Move W21, W31
	562 Move W1, 251
	563 Move X0, X20
	564 Move X2, X31
	565 Call EventData.get_Item, X0, X1
	566 Compare X0, 0
	567 JumpIfEqual {579}
	568 Move X9, 0x22A8000
	569 Move X9, [X9+3488]
	570 Move X8, [X0]
	571 Move X1, [X9]
	572 Move W10, [X8+304]
	573 Move W9, [X1+304]
	574 NotImplemented "Instruction CMP not yet implemented."
	575 Move X8, [X8+200]
	576 Add X8, X8, X9
	577 NotImplemented "Instruction LDUR not yet implemented."
	578 NotImplemented "Instruction CMP not yet implemented."
	579 NotImplemented "Instruction CMP not yet implemented."
	580 NotImplemented "Instruction CSEL not yet implemented."
	581 NotImplemented "Instruction CSEL not yet implemented."
	582 Move X0, X24
	583 Move W3, W21
	584 Call LoadBalancingClient.ReadoutProperties, X0, X1, X2, X3
	585 Move X8, 0x22A4000
	586 Move X8, [X8+3992]
	587 Move X0, [X8]
	588 Call 0x1C17F10
	589 Move X1, X31
	590 Move X21, X0
	591 Call AuthenticationValues..ctor, X0
	592 Move W1, 221
	593 Move X0, X20
	594 Move X2, X31
	595 Move [X24+48], X21
	596 Call EventData.get_Item, X0, X1
	597 Compare X21, 0
	598 JumpIfEqual {788}
	599 Move [X21+40], X0
	600 Move X8, [X24+48]
	601 Compare X8, 0
	602 JumpIfEqual {788}
	603 Move X8, [X8+40]
	604 Move [X24+72], X8
	605 NotImplemented "Instruction CMP not yet implemented."
	606 Move X8, 0x22A2000
	607 Move X8, [X8+632]
	608 Move X9, [X24]
	609 Move X0, X24
	610 Move W2, W22
	611 Move X8, [X8]
	612 Move W3, W31
	613 Move X8, [X8+184]
	614 Move X1, [X8]
	615 Move X8, [X9+504]
	616 Move X5, [X9+512]
	617 NotImplemented "Instruction BLR not yet implemented."
	618 Move X8, [X24+272]
	619 Compare X8, 0
	620 JumpIfEqual {788}
	621 Move X9, [X8]
	622 Move X21, X0
	623 Move X0, X8
	624 Move X1, X21
	625 Move X10, [X9+456]
	626 Move X2, [X9+464]
	627 NotImplemented "Instruction BLR not yet implemented."
	628 Move [X21+48], W31
	629 Move [X21+29], W31
	630 Move X0, [X24+272]
	631 Compare X0, 0
	632 JumpIfEqual {788}
	633 Move X8, [X0]
	634 Move W1, W22
	635 Move X9, [X8+424]
	636 Move X2, [X8+432]
	637 NotImplemented "Instruction BLR not yet implemented."
	638 Move X0, [X20+24]
	639 Compare X0, 0
	640 JumpIfEqual {788}
	641 Move W1, 203
	642 Move X2, X31
	643 Call ParameterDictionary.ContainsKey, X0, X1
	644 Move TEMP, X0
	645 And TEMP, TEMP, 1
	646 Compare TEMP, 1
	647 JumpIfNotEqual {680}
	648 Move W1, 203
	649 Move X0, X20
	650 Move X2, X31
	651 Call EventData.get_Item, X0, X1
	652 Compare X0, 0
	653 JumpIfEqual {788}
	654 Move X8, 0x229F000
	655 Move X8, [X8+1880]
	656 Move X9, [X0]
	657 Move X1, [X8]
	658 Move X8, [X9+64]
	659 Move X9, [X1+64]
	660 NotImplemented "Instruction CMP not yet implemented."
	661 Call 0x1C17E08
	662 Move W1, [X0]
	663 Compare W1, 0
	664 JumpIfEqual {680}
	665 Move X0, [X24+272]
	666 Compare X0, 0
	667 JumpIfEqual {788}
	668 Move X8, [X0]
	669 Move [X0+72], W1
	670 Move X22, [X24+192]
	671 Move W2, W31
	672 Move X9, [X8+472]
	673 Move X3, [X8+480]
	674 NotImplemented "Instruction BLR not yet implemented."
	675 Compare X22, 0
	676 JumpIfEqual {788}
	677 Move X1, X0
	678 Move X0, X22
	679 Call InRoomCallbacksContainer.OnMasterClientSwitched, X0, X1
	680 Move X0, [X24+192]
	681 Compare X0, 0
	682 JumpIfEqual {788}
	683 Move X1, X21
	684 Call InRoomCallbacksContainer.OnPlayerLeftRoom, X0, X1
	685 Move X21, X31
	686 Move X0, [X24+264]
	687 Compare X0, 0
	688 JumpIfEqual {788}
	689 Move X1, X31
	690 Call Player.get_ActorNumber, X0
	691 NotImplemented "Instruction CMP not yet implemented."
	692 Move W1, 252
	693 Move X0, X20
	694 Move X2, X31
	695 Call EventData.get_Item, X0, X1
	696 Compare X0, 0
	697 JumpIfEqual {715}
	698 Move X8, 0x22A0000
	699 Move X8, [X8+3672]
	700 Move X22, X0
	701 Move X23, [X8]
	702 Move X1, X23
	703 Call 0x1C17E00
	704 Move X1, X0
	705 Compare X0, 0
	706 JumpIfNotEqual {716}
	707 Move X0, X22
	708 Move X1, X23
	709 Call 0x1C181E0
	710 Move X0, [X24+192]
	711 Compare X0, 0
	712 JumpIfEqual {788}
	713 Move X1, X21
	714 Call InRoomCallbacksContainer.OnPlayerEnteredRoom, X0, X1
	715 Move X1, X31
	716 Move X0, X24
	717 Call LoadBalancingClient.UpdatedActorList, X0, X1
	718 Move X8, [X24+296]
	719 Compare X8, 0
	720 JumpIfEqual {724}
	721 Move W8, [X8+49]
	722 NotImplemented "Instruction CMP not yet implemented."
	723 NotImplemented "Instruction CSET not yet implemented."
	724 Compare X21, 0
	725 JumpIfEqual {788}
	726 Move [X21+29], W8
	727 Move W1, [X24+144]
	728 NotImplemented "Instruction CMP not yet implemented."
	729 Move X8, [X24+152]
	730 Move W9, 9
	731 Move [X24+144], W9
	732 Compare X8, 0
	733 JumpIfEqual {739}
	734 Move X9, [X8+24]
	735 Move X0, [X8+64]
	736 Move X3, [X8+40]
	737 Move W2, 9
	738 NotImplemented "Instruction BLR not yet implemented."
	739 Move X0, [X24+264]
	740 Compare X0, 0
	741 JumpIfEqual {788}
	742 Move X1, X31
	743 Call Player.UpdateNickNameOnJoined, X0
	744 Move W8, [X24+292]
	745 Compare W8, 0
	746 JumpIfEqual {754}
	747 NotImplemented "Instruction CMP not yet implemented."
	748 Move X0, [X24+264]
	749 Compare X0, 0
	750 JumpIfEqual {788}
	751 Move X1, X31
	752 Call Player.get_ActorNumber, X0
	753 NotImplemented "Instruction CMP not yet implemented."
	754 Move X0, [X24+184]
	755 Compare X0, 0
	756 JumpIfEqual {788}
	757 Call MatchMakingCallbacksContainer.OnCreatedRoom, X0
	758 Move X0, [X24+184]
	759 Compare X0, 0
	760 JumpIfEqual {788}
	761 Call MatchMakingCallbacksContainer.OnJoinedRoom, X0
	762 Move X0, X24
	763 Call LoadBalancingClient.UpdateCallbackTargets, X0
	764 Move X8, [X24+160]
	765 Compare X8, 0
	766 JumpIfEqual {772}
	767 Move X9, [X8+24]
	768 Move X0, [X8+64]
	769 Move X2, [X8+40]
	770 Move X1, X20
	771 NotImplemented "Instruction BLR not yet implemented."
	772 Move X20, [X31+160]
	773 Move X19, [X31+168]
	774 Move X22, [X31+144]
	775 Move X21, [X31+152]
	776 Move X24, [X31+128]
	777 Move X23, [X31+136]
	778 Move X26, [X31+112]
	779 Move X25, [X31+120]
	780 Move X28, [X31+96]
	781 Move X27, [X31+104]
	782 Move X29, [X31+80]
	783 Move X30, [X31+88]
	784 Add X31, X31, 176
	785 Return 
	786 Move X25, [X26+16]
	787 Move W9, W31
	788 Call 0x1C17F20
	789 Call 0x1C17F28
	790 Move X0, X25
	791 Call 0x1C181E0
	792 Call 0x1C17F20
	793 Call 0x1C17F20
	794 Move X0, X24
	795 Call 0x1C181E0
	796 Move X0, X22
	797 Call 0x1C181E0
	798 Move X0, X4
	799 Call 0x1C181E0
	800 Move X22, X0
	801 NotImplemented "Instruction CMP not yet implemented."
	802 Move X0, X22
	803 Call 0x3EB2AD0
	804 Move X23, [X0]
	805 Call 0x3EB2AE0
	806 Move X8, 0x22A8000
	807 Move X8, [X8+576]
	808 Add X0, X31, 48
	809 Move X1, [X8]
	810 Call Enumerator<Object, Object>.Dispose, X0
	811 Compare X23, 0
	812 JumpIfEqual {257}
	813 Move X0, X23
	814 Call 0x1C17F18
	815 Move X23, X31
	816 Move X22, X0
	817 Move X8, 0x22A8000
	818 Move X8, [X8+576]
	819 Move X1, [X8]
	820 Add X0, X31, 48
	821 Call Enumerator<Object, Object>.Dispose, X0
	822 Compare X23, 0
	823 JumpIfNotEqual {826}
	824 Move X0, X22
	825 Call 0x1D2D690
	826 Move X0, X23
	827 Call 0x1C17F18
	828 Call 0x1991590

Method: System.Void OnMessage(System.Object message)

Disassembly:
	0x01E55F50 ADRP X20, 0x22A7000
	0x01E55F54 LDR X20, [X20 + 0x548]
	0x01E55F58 LDR X0, [X20]
	0x01E55F5C LDR W8, [X0 + 0xE0]
	0x01E55F60 CBNZ W8, 0x1E55F6C
	0x01E55F64 BL 0x1C16DFC
	0x01E55F68 LDR X0, [X20]
	0x01E55F6C LDR X8, [X0 + 0xB8]
	0x01E55F70 LDR X9, [X19]
	0x01E55F74 MOVZ W1, 0xE5
	0x01E55F78 MOV X0, X19
	0x01E55F7C LDR X3, [X8]
	0x01E55F80 LDR X8, [X9 + 0x228]
	0x01E55F84 LDR X4, [X9 + 0x230]
	0x01E55F88 MOV X2, X21
	0x01E55F8C BLR X8
	0x01E55F90 LDP X20, X19, [X31 + 0x20]
	0x01E55F94 LDP X22, X21, [X31 + 0x10]
	0x01E55F98 AND W0, W0, 0x1
	0x01E55F9C LDR X30, [X31], #0x30
	0x01E55FA0 RET
	0x01E55FA4 BL 0x1C16F20
	0x01E55FA8 LDR X0, [X0 + 0x10]
	0x01E55FAC MOV X1, X31
	0x01E55FB0 B 0x32277A8
	0x01E55FB4 STP X30, X21, [X31 - 0x20]!
	0x01E55FB8 STP X20, X19, [X31 + 0x10]
	0x01E55FBC ADRP X20, 0x2584000
	0x01E55FC0 LDRB W8, [X20 + 0x4A]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x2585000
	007 Move X22, 0x22A8000
	008 Move W8, [X21+26]
	009 Move X22, [X22+1320]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x22A8000
	017 Move X0, [X0+1320]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+26], W8
	021 Move X0, [X22]
	022 Move X1, X20
	023 Move X2, X31
	024 Call String.Format, X0, X1
	025 Move X8, [X19]
	026 Move X2, X0
	027 Move X0, X19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X4, [X8+536]
	031 Move X3, [X8+544]
	032 Move X22, [X31+16]
	033 Move X21, [X31+24]
	034 Move W1, 5
	035 Move X30, [X31+48]
	036 CallNoReturn X4

Method: System.Void OnDisconnectMessageReceived(ExitGames.Client.Photon.DisconnectMessage obj)

Disassembly:
	0x01E55FC4 MOV X19, X0
	0x01E55FC8 TBNZ X8, 0x0, 0x1E55FF8
	0x01E55FCC ADRP X0, 0x22A6000
	0x01E55FD0 LDR X0, [X0 + 0xBC8]
	0x01E55FD4 BL 0x1C16CF4
	0x01E55FD8 ADRP X0, 0x22A7000
	0x01E55FDC LDR X0, [X0 + 0x548]
	0x01E55FE0 BL 0x1C16CF4
	0x01E55FE4 ADRP X0, 0x22A7000
	0x01E55FE8 LDR X0, [X0 + 0x628]
	0x01E55FEC BL 0x1C16CF4
	0x01E55FF0 MOVZ W8, 0x1
	0x01E55FF4 STRB W8, [X20 + 0x4A]
	0x01E55FF8 LDRB W8, [X19 + 0x40]
	0x01E55FFC CMP W8, 0x3
	0x01E56000 B.CC 0x1E56080
	0x01E56004 LDR X20, [X19 + 0x48]
	0x01E56008 CBZ X20, 0x1E560C8
	0x01E5600C ADRP X9, 0x22A5000
	0x01E56010 LDR X8, [X20]
	0x01E56014 LDR X9, [X9 + 0xBC8]
	0x01E56018 ADRP X10, 0x22A6000
	0x01E5601C LDR X1, [X9]
	0x01E56020 LDR X10, [X10 + 0x628]
	0x01E56024 LDRH W9, [X8 + 0x12E]
	0x01E56028 LDR X21, [X10]
	0x01E5602C CBZ X9, 0x1E56050
	0x01E56030 LDR X10, [X8 + 0xB0]
	0x01E56034 ADD X10, X10, 0x8
	0x01E56038 LDUR X11, [X10 - 0x8]
	0x01E5603C CMP X11, X1
	0x01E56040 B.EQ 0x1E56060
	0x01E56044 SUBS X9, X9, 0x1
	0x01E56048 ADD X10, X10, 0x10
	0x01E5604C B.NE 0x1E56038
	0x01E56050 MOV X0, X20
	0x01E56054 MOV W2, W31
	0x01E56058 BL 0x1C5C788
	0x01E5605C B 0x1E5606C
	0x01E56060 LDRSW X9, [X10]
	0x01E56064 ADD X8, X8, X9, 0x4, LSL
	0x01E56068 ADD X0, X8, 0x138
	0x01E5606C LDP X8, X3, [X0]
	0x01E56070 MOVZ W1, 0x3
	0x01E56074 MOV X0, X20
	0x01E56078 MOV X2, X21
	0x01E5607C BLR X8
	0x01E56080 ADRP X20, 0x22A6000
	0x01E56084 LDR X20, [X20 + 0x548]
	0x01E56088 LDR X0, [X20]
	0x01E5608C LDR W8, [X0 + 0xE0]
	0x01E56090 CBNZ W8, 0x1E5609C
	0x01E56094 BL 0x1C16DFC
	0x01E56098 LDR X0, [X20]
	0x01E5609C LDR X8, [X0 + 0xB8]
	0x01E560A0 LDR X9, [X19]
	0x01E560A4 MOV X0, X19
	0x01E560A8 LDP X20, X19, [X31 + 0x10]
	0x01E560AC LDR X3, [X8]
	0x01E560B0 LDR X5, [X9 + 0x228]
	0x01E560B4 LDR X4, [X9 + 0x230]
	0x01E560B8 MOVZ W1, 0xE4
	0x01E560BC MOV X2, X31
	0x01E560C0 LDP X30, X21, [X31], #0x20

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x2585000
	009 Move W8, [X21+27]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {27}
	016 Move X0, 0x22A7000
	017 Move X0, [X0+3480]
	018 Call 0x1C17CF4
	019 Move X0, 0x22A3000
	020 Move X0, [X0+1576]
	021 Call 0x1C17CF4
	022 Move X0, 0x22A7000
	023 Move X0, [X0+1328]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X21+27], W8
	027 Compare X20, 0
	028 JumpIfEqual {76}
	029 Move X8, 0x22A2000
	030 Move X8, [X8+1576]
	031 NotImplemented "Instruction LDRH not yet implemented."
	032 Move X21, 0x22A6000
	033 Move X23, 0x22A7000
	034 Move X0, [X8]
	035 Move X21, [X21+3480]
	036 Move X23, [X23+1328]
	037 Add X1, X31, 12
	038 NotImplemented "Instruction STRH not yet implemented."
	039 Call 0x1C17E04
	040 Move X8, [X21]
	041 Move X21, [X20+24]
	042 Move X22, [X20+32]
	043 Move X20, X0
	044 Move W9, [X8+224]
	045 Compare W9, 0
	046 JumpIfNotEqual {49}
	047 Move X0, X8
	048 Call 0x1C17DFC
	049 Move X0, X22
	050 Call Extensions.ToStringFull, X0
	051 Move X8, [X23]
	052 Move X3, X0
	053 Move X1, X20
	054 Move X2, X21
	055 Move X0, X8
	056 Move X4, X31
	057 Call String.Format, X0, X1, X2, X3
	058 Move X8, [X19]
	059 Move X2, X0
	060 Move W1, 1
	061 Move X0, X19
	062 Move X9, [X8+536]
	063 Move X3, [X8+544]
	064 NotImplemented "Instruction BLR not yet implemented."
	065 Move W1, 19
	066 Move X0, X19
	067 Call LoadBalancingClient.Disconnect, X0, X1
	068 Move X20, [X31+48]
	069 Move X19, [X31+56]
	070 Move X22, [X31+32]
	071 Move X21, [X31+40]
	072 Move X30, [X31+16]
	073 Move X23, [X31+24]
	074 Add X31, X31, 64
	075 Return 
	076 Call 0x1C17F20

Method: System.Void OnRegionPingCompleted(Fusion.Photon.Realtime.RegionHandler regionHandler)

Disassembly:
	0x01E560C4 BR X5
	0x01E560C8 BL 0x1C16F20
	0x01E560CC SUB X31, X31, 0x50
	0x01E560D0 STP X30, X25, [X31 + 0x10]
	0x01E560D4 STP X24, X23, [X31 + 0x20]
	0x01E560D8 STP X22, X21, [X31 + 0x30]
	0x01E560DC STP X20, X19, [X31 + 0x40]
	0x01E560E0 ADRP X22, 0x2583000
	0x01E560E4 LDRB W8, [X22 + 0x4B]
	0x01E560E8 MOV W21, W3
	0x01E560EC MOV X20, X2
	0x01E560F0 MOV X19, X1
	0x01E560F4 TBNZ X8, 0x0, 0x1E56160
	0x01E560F8 ADRP X0, 0x229D000
	0x01E560FC LDR X0, [X0 + 0xB58]
	0x01E56100 BL 0x1C16CF4
	0x01E56104 ADRP X0, 0x229E000
	0x01E56108 LDR X0, [X0 + 0x9D8]
	0x01E5610C BL 0x1C16CF4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Compare X1, 0
	005 JumpIfEqual {24}
	006 Move X20, X1
	007 Move X19, X0
	008 Move X0, X1
	009 Move X1, X31
	010 Call RegionHandler.get_SummaryToCache, X0
	011 Move [X19+352], X0
	012 Move X0, X20
	013 Move X1, X31
	014 Call RegionHandler.get_BestRegion, X0
	015 Compare X0, 0
	016 JumpIfEqual {24}
	017 Move X1, [X0+16]
	018 Move X0, X19
	019 Move X20, [X31+16]
	020 Move X19, [X31+24]
	021 Move X30, [X31+32]
	022 Call LoadBalancingClient.ConnectToRegionMaster, X0, X1
	023 Return 
	024 Call 0x1C17F20

Method: System.String ReplacePortWithAlternative(System.String address, System.UInt16 replacementPort)

Disassembly:
	0x01E5259C LDR X0, [X0 + 0xAC8]
	0x01E525A0 BL 0x1C16CF4
	0x01E525A4 ADRP X0, 0x22AA000
	0x01E525A8 LDR X0, [X0 + 0x418]
	0x01E525AC BL 0x1C16CF4
	0x01E525B0 ADRP X0, 0x22AA000
	0x01E525B4 LDR X0, [X0 + 0x420]
	0x01E525B8 BL 0x1C16CF4
	0x01E525BC ADRP X0, 0x22AA000
	0x01E525C0 LDR X0, [X0 + 0x428]
	0x01E525C4 BL 0x1C16CF4
	0x01E525C8 ADRP X0, 0x22AA000
	0x01E525CC LDR X0, [X0 + 0x430]
	0x01E525D0 BL 0x1C16CF4
	0x01E525D4 ADRP X0, 0x22AA000
	0x01E525D8 LDR X0, [X0 + 0x438]
	0x01E525DC BL 0x1C16CF4
	0x01E525E0 ADRP X0, 0x22AA000
	0x01E525E4 LDR X0, [X0 + 0x440]
	0x01E525E8 BL 0x1C16CF4
	0x01E525EC ADRP X0, 0x22AA000
	0x01E525F0 LDR X0, [X0 + 0x448]
	0x01E525F4 BL 0x1C16CF4
	0x01E525F8 ADRP X0, 0x22AA000
	0x01E525FC LDR X0, [X0 + 0x450]
	0x01E52600 BL 0x1C16CF4
	0x01E52604 ADRP X0, 0x22AA000
	0x01E52608 LDR X0, [X0 + 0x458]
	0x01E5260C BL 0x1C16CF4
	0x01E52610 ADRP X0, 0x22AA000
	0x01E52614 LDR X0, [X0 + 0x460]
	0x01E52618 BL 0x1C16CF4
	0x01E5261C ADRP X0, 0x22AA000
	0x01E52620 LDR X0, [X0 + 0x468]
	0x01E52624 BL 0x1C16CF4
	0x01E52628 ADRP X0, 0x22A1000
	0x01E5262C LDR X0, [X0 + 0x988]
	0x01E52630 BL 0x1C16CF4
	0x01E52634 ADRP X0, 0x22AA000
	0x01E52638 LDR X0, [X0 + 0x470]
	0x01E5263C BL 0x1C16CF4
	0x01E52640 ADRP X0, 0x22AA000
	0x01E52644 LDR X0, [X0 + 0x478]
	0x01E52648 BL 0x1C16CF4
	0x01E5264C MOVZ W8, 0x1
	0x01E52650 STRB W8, [X21 + 0x18]
	0x01E52654 SUB W8, W20, 0x3FE
	0x01E52658 CMP W8, 0x1D
	0x01E5265C STRH W31, [X31 + 0x3C]
	0x01E52660 B.HI 0x1E52C68
	0x01E52664 ADRP X9, 0xFFFFFFFFFECDB000
	0x01E52668 ADD X9, X9, 0xABA
	0x01E5266C ADR X10, 0x10
	0x01E52670 LDRH W11, [X9, X8, LSL #1]
	0x01E52674 ADD X10, X10, X11, 0x2, LSL
	0x01E52678 BR X10
	0x01E5267C ADRP X8, 0x22AA000
	0x01E52680 LDR X8, [X8 + 0x418]
	0x01E52684 LDR X0, [X8]
	0x01E52688 BL 0x1C16F10
	0x01E5268C MOV X1, X19
	0x01E52690 MOV X2, X31
	0x01E52694 MOV X21, X0
	0x01E52698 BL 0x1E61428
	0x01E5269C STR X21, [X19 + 0xE8]
	0x01E526A0 ADRP X8, 0x22AA000
	0x01E526A4 LDR X8, [X8 + 0x410]
	0x01E526A8 ADD X1, X31, 0x20
	0x01E526AC STR W20, [X31 + 0x20]
	0x01E526B0 LDR X0, [X8]
	0x01E526B4 BL 0x1C16E04
	0x01E526B8 ADRP X9, 0x22A9000
	0x01E526BC LDR W8, [X19 + 0x90]
	0x01E526C0 LDR X9, [X9 + 0xE68]
	0x01E526C4 MOV X20, X0
	0x01E526C8 ADD X1, X31, 0x8
	0x01E526CC STR W8, [X31 + 0x8]
	0x01E526D0 LDR X0, [X9]
	0x01E526D4 BL 0x1C16E04
	0x01E526D8 LDR X8, [X19 + 0xE8]
	0x01E526DC CBZ X8, 0x1E53198
	0x01E526E0 LDR X9, [X8]
	0x01E526E4 MOV X21, X0
	0x01E526E8 MOV X0, X8
	0x01E526EC LDP X10, X1, [X9 + 0x168]
	0x01E526F0 BLR X10
	0x01E526F4 ADRP X8, 0x22AA000
	0x01E526F8 LDR X8, [X8 + 0x448]
	0x01E526FC MOV X3, X0
	0x01E52700 MOV X1, X20

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x2588000
	007 Move W8, [X21+28]
	008 Move W19, W1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {31}
	014 Move X0, 0x22A7000
	015 Move X0, [X0+1624]
	016 Call 0x1C17CF4
	017 Move X0, 0x22AB000
	018 Move X0, [X0+928]
	019 Call 0x1C17CF4
	020 Move X0, 0x22AB000
	021 Move X0, [X0+936]
	022 Call 0x1C17CF4
	023 Move X0, 0x22AA000
	024 Move X0, [X0+4080]
	025 Call 0x1C17CF4
	026 Move X0, 0x22AB000
	027 Move X0, [X0+944]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X21+28], W8
	031 Compare X20, 0
	032 JumpIfEqual {106}
	033 Move X8, 0x22AB000
	034 Move X8, [X8+936]
	035 Move X0, X20
	036 Move X2, X31
	037 Move X1, [X8]
	038 Call String.StartsWith, X0, X1
	039 Move TEMP, X0
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfNotEqual {67}
	043 Move X8, 0x22AB000
	044 Move X8, [X8+928]
	045 Move X0, [X8]
	046 Call 0x1C17F10
	047 Move X1, X20
	048 Move X2, X31
	049 Move X21, X0
	050 Call UriBuilder..ctor, X0, X1
	051 Compare X21, 0
	052 JumpIfEqual {106}
	053 And W1, W19, 0xFFFF
	054 Move X0, X21
	055 Move X2, X31
	056 Call UriBuilder.set_Port, X0, X1
	057 Move X8, [X21]
	058 Move X0, X21
	059 Move X20, [X31+32]
	060 Move X19, [X31+40]
	061 Move X30, [X31+16]
	062 Move X21, [X31+24]
	063 Move X2, [X8+360]
	064 Move X1, [X8+368]
	065 Add X31, X31, 48
	066 CallNoReturn X2
	067 Move X8, 0x22AB000
	068 Move X8, [X8+944]
	069 Move X1, X20
	070 Move X2, X31
	071 Move X0, [X8]
	072 Call String.Format, X0, X1
	073 Move X8, 0x22AB000
	074 Move X8, [X8+928]
	075 Move X21, X0
	076 Move X8, [X8]
	077 Move X0, X8
	078 Call 0x1C17F10
	079 Move X1, X21
	080 Move X2, X31
	081 Move X20, X0
	082 Call UriBuilder..ctor, X0, X1
	083 Compare X20, 0
	084 JumpIfEqual {106}
	085 Move X8, 0x22A7000
	086 Move X20, [X20+32]
	087 Move X8, [X8+1624]
	088 Add X1, X31, 12
	089 NotImplemented "Instruction STRH not yet implemented."
	090 Move X0, [X8]
	091 Call 0x1C17E04
	092 Move X8, 0x22AA000
	093 Move X8, [X8+4080]
	094 Move X2, X0
	095 Move X1, X20
	096 Move X3, X31
	097 Move X8, [X8]
	098 Move X0, X8
	099 Call String.Format, X0, X1, X2
	100 Move X20, [X31+32]
	101 Move X19, [X31+40]
	102 Move X30, [X31+16]
	103 Move X21, [X31+24]
	104 Add X31, X31, 48
	105 Return X0
	106 Call 0x1C17F20

Method: System.Void SetupEncryption(System.Collections.Generic.Dictionary`2<System.Byte, System.Object> encryptionData)

Disassembly:
	0x01E52408 LDR X8, [X20]
	0x01E5240C LDR X1, [X23]
	0x01E52410 LDRH W9, [X8 + 0x12E]
	0x01E52414 CBZ X9, 0x1E52438
	0x01E52418 LDR X10, [X8 + 0xB0]
	0x01E5241C ADD X10, X10, 0x8
	0x01E52420 LDUR X11, [X10 - 0x8]
	0x01E52424 CMP X11, X1
	0x01E52428 B.EQ 0x1E52448
	0x01E5242C SUBS X9, X9, 0x1
	0x01E52430 ADD X10, X10, 0x10
	0x01E52434 B.NE 0x1E52420
	0x01E52438 MOV X0, X20
	0x01E5243C MOV W2, W31
	0x01E52440 BL 0x1C5C788
	0x01E52444 B 0x1E52454
	0x01E52448 LDRSW X9, [X10]
	0x01E5244C ADD X8, X8, X9, 0x4, LSL
	0x01E52450 ADD X0, X8, 0x138
	0x01E52454 LDP X8, X2, [X0]
	0x01E52458 MOV X0, X20
	0x01E5245C MOV X1, X19
	0x01E52460 BLR X8
	0x01E52464 B 0x1E523F0
	0x01E52468 LDR X1, [X21]
	0x01E5246C ADD X0, X31, 0x8
	0x01E52470 BL 0x2BC434C
	0x01E52474 LDP X20, X19, [X31 + 0x50]
	0x01E52478 LDP X22, X21, [X31 + 0x40]
	0x01E5247C LDP X24, X23, [X31 + 0x30]
	0x01E52480 LDR X30, [X31 + 0x20]
	0x01E52484 ADD X31, X31, 0x60
	0x01E52488 RET
	0x01E5248C BL 0x1C16F20
	0x01E52490 BL 0x1C16F20
	0x01E52494 B 0x1E5249C
	0x01E52498 B 0x1E5249C
	0x01E5249C MOV X19, X0
	0x01E524A0 CMP W1, 0x1
	0x01E524A4 B.NE 0x1E524D0
	0x01E524A8 MOV X0, X19
	0x01E524AC BL 0x3EB1AD0
	0x01E524B0 LDR X20, [X0]
	0x01E524B4 BL 0x3EB1AE0
	0x01E524B8 LDR X1, [X21]
	0x01E524BC ADD X0, X31, 0x8
	0x01E524C0 BL 0x2BC434C
	0x01E524C4 CBZ X20, 0x1E52474
	0x01E524C8 MOV X0, X20
	0x01E524CC BL 0x1C16F18
	0x01E524D0 MOV X20, X31
	0x01E524D4 B 0x1E524DC
	0x01E524D8 MOV X19, X0
	0x01E524DC LDR X1, [X21]
	0x01E524E0 ADD X0, X31, 0x8
	0x01E524E4 BL 0x2BC434C
	0x01E524E8 CBNZ X20, 0x1E524F4
	0x01E524EC MOV X0, X19
	0x01E524F0 BL 0x1D2C690
	0x01E524F4 MOV X0, X20
	0x01E524F8 BL 0x1C16F18
	0x01E524FC BL 0x1990590
	0x01E52500 SUB X31, X31, 0x60
	0x01E52504 STP X30, X21, [X31 + 0x40]
	0x01E52508 STP X20, X19, [X31 + 0x50]
	0x01E5250C ADRP X21, 0x2587000
	0x01E52510 LDRB W8, [X21 + 0x18]
	0x01E52514 MOV W20, W1
	0x01E52518 MOV X19, X0
	0x01E5251C TBNZ X8, 0x0, 0x1E52654
	0x01E52520 ADRP X0, 0x22A1000
	0x01E52524 LDR X0, [X0 + 0x9C8]
	0x01E52528 BL 0x1C16CF4
	0x01E5252C ADRP X0, 0x22A9000
	0x01E52530 LDR X0, [X0 + 0xE68]
	0x01E52534 BL 0x1C16CF4
	0x01E52538 ADRP X0, 0x22A9000
	0x01E5253C LDR X0, [X0 + 0xDF8]
	0x01E52540 BL 0x1C16CF4
	0x01E52544 ADRP X0, 0x22A9000
	0x01E52548 LDR X0, [X0 + 0xE70]
	0x01E5254C BL 0x1C16CF4
	0x01E52550 ADRP X0, 0x22AA000
	0x01E52554 LDR X0, [X0 + 0x408]
	0x01E52558 BL 0x1C16CF4
	0x01E5255C ADRP X0, 0x22AA000
	0x01E52560 LDR X0, [X0 + 0x18]
	0x01E52564 BL 0x1C16CF4
	0x01E52568 ADRP X0, 0x22AA000
	0x01E5256C LDR X0, [X0 + 0x40]
	0x01E52570 BL 0x1C16CF4
	0x01E52574 ADRP X0, 0x22AA000
	0x01E52578 LDR X0, [X0 + 0x300]
	0x01E5257C BL 0x1C16CF4
	0x01E52580 ADRP X0, 0x22AA000
	0x01E52584 LDR X0, [X0 + 0x48]
	0x01E52588 BL 0x1C16CF4
	0x01E5258C ADRP X0, 0x22AA000
	0x01E52590 LDR X0, [X0 + 0x410]
	0x01E52594 BL 0x1C16CF4
	0x01E52598 ADRP X0, 0x22A1000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x2588000
	006 Move W8, [X21+29]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {24}
	013 Move X0, 0x22A2000
	014 Move X0, [X0+1560]
	015 Call 0x1C17CF4
	016 Move X0, 0x22A3000
	017 Move X0, [X0+2520]
	018 Call 0x1C17CF4
	019 Move X0, 0x22AB000
	020 Move X0, [X0+912]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X21+29], W8
	024 Compare X20, 0
	025 JumpIfEqual {104}
	026 Move X21, 0x22AB000
	027 Move X21, [X21+912]
	028 Move X0, X20
	029 Move W1, W31
	030 Move X2, [X21]
	031 Call Dictionary`2<Byte, Object>.get_Item, X0, X1
	032 Compare X0, 0
	033 JumpIfEqual {104}
	034 Move X8, 0x22A3000
	035 Move X8, [X8+2520]
	036 Move X9, [X0]
	037 Move X1, [X8]
	038 Move X8, [X9+64]
	039 Move X9, [X1+64]
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Call 0x1C17E08
	042 Move W8, [X0]
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Compare W8, 0
	045 JumpIfNotEqual {106}
	046 Move X2, [X21]
	047 Move W1, 1
	048 Move X0, X20
	049 Call Dictionary`2<Byte, Object>.get_Item, X0, X1
	050 Compare X0, 0
	051 JumpIfEqual {93}
	052 Move X8, 0x22A2000
	053 Move X8, [X8+1560]
	054 Move X20, X0
	055 Move X21, [X8]
	056 Move X1, X21
	057 Call 0x1C17E00
	058 Move X1, X0
	059 Compare X0, 0
	060 JumpIfNotEqual {94}
	061 Move X2, [X21]
	062 Move W1, 1
	063 Move X0, X20
	064 Call Dictionary`2<Byte, Object>.get_Item, X0, X1
	065 Compare X0, 0
	066 JumpIfEqual {79}
	067 Move X8, 0x22A2000
	068 Move X8, [X8+1560]
	069 Move X20, X0
	070 Move X21, [X8]
	071 Move X1, X21
	072 Call 0x1C17E00
	073 Move X1, X0
	074 Compare X0, 0
	075 JumpIfNotEqual {80}
	076 Move X0, X20
	077 Move X1, X21
	078 Call 0x1C181E0
	079 Move X1, X31
	080 Move X0, [X19+16]
	081 Compare X0, 0
	082 JumpIfEqual {104}
	083 Move X20, [X31+16]
	084 Move X19, [X31+24]
	085 Move W3, 1
	086 Move W4, 1
	087 Move X2, X31
	088 Move X5, X31
	089 Move X30, [X31+32]
	090 Move X21, [X31+40]
	091 Call PhotonPeer.InitDatagramEncryption, X0, X1, X2, X3, X4
	092 Return 
	093 Move X1, X31
	094 Move X0, [X19+16]
	095 Compare X0, 0
	096 JumpIfEqual {104}
	097 Move X20, [X31+16]
	098 Move X19, [X31+24]
	099 Move X2, X31
	100 Move X30, [X31+32]
	101 Move X21, [X31+40]
	102 Call PhotonPeer.InitPayloadEncryption, X0, X1
	103 Return 
	104 Call 0x1C17F20
	105 Call 0x1C181E0
	106 Move X0, 0x22AA000
	107 Move X0, [X0+1888]
	108 Call 0x1C17D08
	109 Call 0x1C17F10
	110 Move X1, X31
	111 Move X19, X0
	112 Call ArgumentOutOfRangeException..ctor, X0
	113 Move X0, 0x22AB000
	114 Move X0, [X0+920]
	115 Call 0x1C17D08
	116 Move X1, X0
	117 Move X0, X19
	118 Call 0x1C17DEC

Method: System.Boolean OpWebRpc(System.String uriPath, System.Object parameters, System.Boolean sendAuthCookie = False)

Disassembly:
	0x01E56110 ADRP X0, 0x22A6000
	0x01E56114 LDR X0, [X0 + 0x618]
	0x01E56118 BL 0x1C16CF4
	0x01E5611C ADRP X0, 0x22A5000
	0x01E56120 LDR X0, [X0 + 0xD98]
	0x01E56124 BL 0x1C16CF4
	0x01E56128 ADRP X0, 0x22A5000
	0x01E5612C LDR X0, [X0 + 0xDA0]
	0x01E56130 BL 0x1C16CF4
	0x01E56134 ADRP X0, 0x229D000
	0x01E56138 LDR X0, [X0 + 0x758]
	0x01E5613C BL 0x1C16CF4
	0x01E56140 ADRP X0, 0x22A5000
	0x01E56144 LDR X0, [X0 + 0xDC8]
	0x01E56148 BL 0x1C16CF4
	0x01E5614C ADRP X0, 0x229D000
	0x01E56150 LDR X0, [X0 + 0xAC8]
	0x01E56154 BL 0x1C16CF4
	0x01E56158 MOVZ W8, 0x1
	0x01E5615C STRB W8, [X22 + 0x4B]
	0x01E56160 ADRP X22, 0x22A5000
	0x01E56164 LDR X22, [X22 + 0xDA0]
	0x01E56168 CBNZ X20, 0x1E56184
	0x01E5616C ADRP X8, 0x22A5000
	0x01E56170 LDR X8, [X8 + 0xDC8]
	0x01E56174 LDR X0, [X8]
	0x01E56178 BL 0x1C16F10
	0x01E5617C MOV X20, X0
	0x01E56180 BL 0x1E564F8
	0x01E56184 LDR X0, [X22]
	0x01E56188 BL 0x1C16F10
	0x01E5618C MOV X1, X31
	0x01E56190 MOV X22, X0
	0x01E56194 BL 0x34ED7D8
	0x01E56198 CBZ X20, 0x1E564F4
	0x01E5619C ADRP X24, 0x229D000
	0x01E561A0 LDR X24, [X24 + 0xB58]
	0x01E561A4 LDRB W8, [X20 + 0x11]
	0x01E561A8 ADD X1, X31, 0x8
	0x01E561AC LDR X0, [X24]
	0x01E561B0 STRB W8, [X31 + 0x8]
	0x01E561B4 BL 0x1C16E04
	0x01E561B8 CBZ X22, 0x1E564F4
	0x01E561BC ADRP X23, 0x22A5000
	0x01E561C0 LDR X23, [X23 + 0xD98]
	0x01E561C4 MOV X2, X0
	0x01E561C8 MOVZ W1, 0xFD
	0x01E561CC MOV X0, X22
	0x01E561D0 MOV X3, X31
	0x01E561D4 BL 0x34ED9F4
	0x01E561D8 LDRB W8, [X20 + 0x10]
	0x01E561DC LDR X0, [X24]
	0x01E561E0 ADD X1, X31, 0xC
	0x01E561E4 STRB W8, [X31 + 0xC]
	0x01E561E8 BL 0x1C16E04
	0x01E561EC MOV X2, X0
	0x01E561F0 MOVZ W1, 0xFE
	0x01E561F4 MOV X0, X22
	0x01E561F8 MOV X3, X31
	0x01E561FC BL 0x34ED9F4
	0x01E56200 LDR X2, [X20 + 0x30]
	0x01E56204 CBNZ X2, 0x1E56220
	0x01E56208 ADRP X8, 0x229D000
	0x01E5620C LDR X8, [X8 + 0xAC8]
	0x01E56210 MOV W1, W31
	0x01E56214 LDR X0, [X8]
	0x01E56218 BL 0x1C16D6C
	0x01E5621C MOV X2, X0
	0x01E56220 MOVZ W1, 0xFA
	0x01E56224 MOV X0, X22
	0x01E56228 MOV X3, X31
	0x01E5622C BL 0x34ED9F4
	0x01E56230 LDR X0, [X23]
	0x01E56234 LDR X23, [X20 + 0x28]
	0x01E56238 LDR W8, [X0 + 0xE0]
	0x01E5623C CBNZ W8, 0x1E56244
	0x01E56240 BL 0x1C16DFC
	0x01E56244 ADRP X25, 0x229D000
	0x01E56248 LDR X25, [X25 + 0x758]
	0x01E5624C MOV X0, X22
	0x01E56250 MOV X1, X23
	0x01E56254 MOV X2, X31
	0x01E56258 BL 0x1E493F4
	0x01E5625C LDR W8, [X20 + 0x14]
	0x01E56260 CMP W8, 0x1
	0x01E56264 B.LT 0x1E562C8
	0x01E56268 ADRP X9, 0x229E000
	0x01E5626C LDR X9, [X9 + 0x9D8]
	0x01E56270 CMP W8, 0x100
	0x01E56274 ADD X1, X31, 0xC
	0x01E56278 LDR X0, [X9]
	0x01E5627C MOVZ W9, 0x100
	0x01E56280 CSEL W8, W8, W9, LT
	0x01E56284 STRB W8, [X31 + 0xC]
	0x01E56288 BL 0x1C16E04
	0x01E5628C MOV X2, X0
	0x01E56290 MOVZ W1, 0xFF
	0x01E56294 MOV X0, X22
	0x01E56298 MOV X3, X31
	0x01E5629C BL 0x34ED9F4
	0x01E562A0 LDR W8, [X20 + 0x14]
	0x01E562A4 LDR X0, [X25]
	0x01E562A8 ADD X1, X31, 0x8
	0x01E562AC STR W8, [X31 + 0x8]
	0x01E562B0 BL 0x1C16E04
	0x01E562B4 MOV X2, X0
	0x01E562B8 MOVZ W1, 0xF3
	0x01E562BC MOV X0, X22
	0x01E562C0 MOV X3, X31
	0x01E562C4 BL 0x34ED9F4
	0x01E562C8 CBZ X19, 0x1E564F4
	0x01E562CC ADRP X23, 0x22A6000
	0x01E562D0 LDR X23, [X23 + 0x618]
	0x01E562D4 ANDS W31, W21, 0x1
	0x01E562D8 MOVN W8, 0x7
	0x01E562DC MOVN W9, 0x4
	0x01E562E0 LDR X3, [X23]
	0x01E562E4 CSEL W1, W9, W8, NE
	0x01E562E8 MOV X0, X19

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x2584000
	009 Move W8, [X23+30]
	010 Move W20, W3
	011 Move X21, X2
	012 Move X22, X1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {41}
	018 Move X0, 0x229F000
	019 Move X0, [X0+2520]
	020 Call 0x1C17CF4
	021 Move X0, 0x22A7000
	022 Move X0, [X0+1336]
	023 Call 0x1C17CF4
	024 Move X0, 0x22A7000
	025 Move X0, [X0+1344]
	026 Call 0x1C17CF4
	027 Move X0, 0x22A7000
	028 Move X0, [X0+696]
	029 Call 0x1C17CF4
	030 Move X0, 0x22A7000
	031 Move X0, [X0+1352]
	032 Call 0x1C17CF4
	033 Move X0, 0x22A7000
	034 Move X0, [X0+1360]
	035 Call 0x1C17CF4
	036 Move X0, 0x22A7000
	037 Move X0, [X0+1368]
	038 Call 0x1C17CF4
	039 Move W8, 1
	040 Move [X23+30], W8
	041 Move X0, X22
	042 Move X1, X31
	043 Call String.IsNullOrEmpty, X0
	044 Move TEMP, X0
	045 And TEMP, TEMP, 1
	046 Compare TEMP, 1
	047 JumpIfNotEqual {57}
	048 Move X9, 0x22A7000
	049 Move X8, [X19]
	050 Move X9, [X9+1360]
	051 Move W1, 1
	052 Move X0, X19
	053 Move X3, [X8+544]
	054 Move X2, [X9]
	055 Move X9, [X8+536]
	056 NotImplemented "Instruction BLR not yet implemented."
	057 Move X8, 0x22A7000
	058 Move X8, [X8+1368]
	059 Move W2, [X19+128]
	060 Move W1, 219
	061 Move X0, X19
	062 Move X3, [X8]
	063 Call LoadBalancingClient.CheckIfOpCanBeSent, X0, X1, X2, X3
	064 Move TEMP, X0
	065 And TEMP, TEMP, 1
	066 Compare TEMP, 1
	067 JumpIfNotEqual {129}
	068 Move X8, 0x22A7000
	069 Move X8, [X8+696]
	070 Move X0, [X8]
	071 Call 0x1C17F10
	072 Move X8, 0x22A7000
	073 Move X8, [X8+1344]
	074 Move X23, X0
	075 Move X1, [X8]
	076 Call Dictionary`2<Byte, Object>..ctor, X0
	077 Compare X23, 0
	078 JumpIfEqual {139}
	079 Move X24, 0x22A7000
	080 Move X24, [X24+1336]
	081 Move W1, 209
	082 Move X0, X23
	083 Move X2, X22
	084 Move X3, [X24]
	085 Call Dictionary`2<Byte, Object>.Add, X0, X1, X2
	086 Compare X21, 0
	087 JumpIfEqual {93}
	088 Move X3, [X24]
	089 Move W1, 208
	090 Move X0, X23
	091 Move X2, X21
	092 Call Dictionary`2<Byte, Object>.Add, X0, X1, X2
	093 Move TEMP, X20
	094 And TEMP, TEMP, 1
	095 Compare TEMP, 1
	096 JumpIfNotEqual {109}
	097 Move X8, 0x229F000
	098 Move X8, [X8+2520]
	099 Add X1, X31, 12
	100 Move X0, [X8]
	101 Move W8, 2
	102 Move [X31+12], W8
	103 Call 0x1C17E04
	104 Move X3, [X24]
	105 Move X2, X0
	106 Move W1, 234
	107 Move X0, X23
	108 Call Dictionary`2<Byte, Object>.Add, X0, X1, X2
	109 Move X20, 0x22A7000
	110 Move X20, [X20+1352]
	111 Move X19, [X19+16]
	112 Move X0, [X20]
	113 Move W8, [X0+224]
	114 Compare W8, 0
	115 JumpIfNotEqual {117}
	116 Call 0x1C17DFC
	117 Compare X19, 0
	118 JumpIfEqual {139}
	119 Move X8, [X20]
	120 Move X9, [X19]
	121 Move W1, 219
	122 Move X0, X19
	123 Move X8, [X8+184]
	124 Move X10, [X9+552]
	125 Move X4, [X9+560]
	126 Move X2, X23
	127 Move X3, [X8]
	128 NotImplemented "Instruction BLR not yet implemented."
	129 Move W0, W31
	130 Move X20, [X31+48]
	131 Move X19, [X31+56]
	132 Move X22, [X31+32]
	133 Move X21, [X31+40]
	134 Move X24, [X31+16]
	135 Move X23, [X31+24]
	136 And W0, W0, 1
	137 Move X30, [X31+64]
	138 Return X0
	139 Call 0x1C17F20

Method: System.Void AddCallbackTarget(System.Object target)

Disassembly:
	0x01E46FBC MOV X1, X31
	0x01E46FC0 MOV X21, X0
	0x01E46FC4 BL 0x1E59334
	0x01E46FC8 CBZ X21, 0x1E470BC
	0x01E46FCC ADRP X8, 0x22B5000
	0x01E46FD0 LDR X8, [X8 + 0xDC8]
	0x01E46FD4 STR X26, [X21 + 0x10]
	0x01E46FD8 STR X24, [X21 + 0x20]
	0x01E46FDC LDR X0, [X8]
	0x01E46FE0 BL 0x1C16F10
	0x01E46FE4 MOV X1, X31
	0x01E46FE8 MOV X24, X0
	0x01E46FEC BL 0x1E564F8
	0x01E46FF0 CBZ X24, 0x1E470BC
	0x01E46FF4 LDRB W26, [X31 + 0x70]
	0x01E46FF8 AND W1, W23, 0x1
	0x01E46FFC MOV X0, X24
	0x01E47000 MOV X2, X31
	0x01E47004 STR W25, [X24 + 0x14]
	0x01E47008 BL 0x1E59380
	0x01E4700C AND W1, W22, 0x1
	0x01E47010 MOV X0, X24
	0x01E47014 MOV X2, X31
	0x01E47018 BL 0x1E59374
	0x01E4701C MOVZ W9, 0x1
	0x01E47020 ANDS W31, W26, 0x1
	0x01E47024 MOVZ W10, 0x3A98
	0x01E47028 MOV W8, W31
	0x01E4702C STRB W9, [X24 + 0x43]
	0x01E47030 CSEL W9, W10, W31, NE
	0x01E47034 STR W9, [X24 + 0x18]
	0x01E47038 TBNZ X19, 0x0, 0x1E47048
	0x01E4703C LDR X8, [X20 + 0x1C0]
	0x01E47040 CBZ X8, 0x1E470BC
	0x01E47044 LDR W8, [X8 + 0x78]
	0x01E47048 ADRP X9, 0x22AC000
	0x01E4704C LDR X9, [X9 + 0xAC8]
	0x01E47050 STR W8, [X24 + 0x1C]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x2594000
	007 Move X21, 0x22B6000
	008 Move W8, [X22+31]
	009 Move X21, [X21+3336]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x22B6000
	017 Move X0, [X0+3336]
	018 Call 0x1C17CF4
	019 Move X0, 0x22B6000
	020 Move X0, [X0+3344]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+31], W8
	024 Move X0, [X21]
	025 Move X20, [X20+368]
	026 Call 0x1C17F10
	027 Move X1, X31
	028 Move X21, X0
	029 Call Object..ctor, X0
	030 Move W8, 1
	031 Move [X21+16], X19
	032 Move [X21+24], W8
	033 Compare X20, 0
	034 JumpIfEqual {47}
	035 Move X8, 0x22B5000
	036 Move X8, [X8+3344]
	037 Move X0, X20
	038 Move X1, X21
	039 Move X20, [X31+32]
	040 Move X19, [X31+40]
	041 Move X2, [X8]
	042 Move X22, [X31+16]
	043 Move X21, [X31+24]
	044 Move X30, [X31+48]
	045 Call Queue`1<Object>.Enqueue, X0, X1
	046 Return 
	047 Call 0x1C17F20

Method: System.Void RemoveCallbackTarget(System.Object target)

Disassembly:
	0x01E5631C MOV X0, X19
	0x01E56320 BL 0x29D3520
	0x01E56324 MOVZ W21, 0x3
	0x01E56328 B 0x1E56378
	0x01E5632C LDR X0, [X24]
	0x01E56330 ADD X1, X31, 0x8
	0x01E56334 STRB W31, [X31 + 0x8]
	0x01E56338 BL 0x1C16E04
	0x01E5633C LDR X3, [X23]
	0x01E56340 MOV X2, X0
	0x01E56344 MOVZ W1, 0xF1
	0x01E56348 MOV X0, X19
	0x01E5634C BL 0x29D3520
	0x01E56350 LDR X0, [X24]
	0x01E56354 ADD X1, X31, 0xC
	0x01E56358 STRB W31, [X31 + 0xC]
	0x01E5635C BL 0x1C16E04
	0x01E56360 MOV X2, X0
	0x01E56364 MOVZ W1, 0xF9
	0x01E56368 MOV X0, X22
	0x01E5636C MOV X3, X31
	0x01E56370 BL 0x34ED9F4
	0x01E56374 MOVZ W21, 0x1
	0x01E56378 LDR X0, [X24]
	0x01E5637C MOVZ W8, 0x1
	0x01E56380 ADD X1, X31, 0x8
	0x01E56384 STRB W8, [X31 + 0x8]
	0x01E56388 BL 0x1C16E04
	0x01E5638C LDR X3, [X23]
	0x01E56390 MOV X2, X0
	0x01E56394 MOVZ W1, 0xE8
	0x01E56398 MOV X0, X19
	0x01E5639C BL 0x29D3520
	0x01E563A0 LDR W8, [X20 + 0x18]
	0x01E563A4 CMP W8, 0x0
	0x01E563A8 B.GT 0x1E563B4
	0x01E563AC ADDS W31, W8, 0x1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x2584000
	007 Move X21, 0x22A6000
	008 Move W8, [X22+32]
	009 Move X21, [X21+3336]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x22A6000
	017 Move X0, [X0+3336]
	018 Call 0x1C17CF4
	019 Move X0, 0x22A6000
	020 Move X0, [X0+3344]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+32], W8
	024 Move X0, [X21]
	025 Move X20, [X20+368]
	026 Call 0x1C17F10
	027 Move X1, X31
	028 Move X21, X0
	029 Call Object..ctor, X0
	030 Move [X21+16], X19
	031 Move [X21+24], W31
	032 Compare X20, 0
	033 JumpIfEqual {46}
	034 Move X8, 0x22A6000
	035 Move X8, [X8+3344]
	036 Move X0, X20
	037 Move X1, X21
	038 Move X20, [X31+32]
	039 Move X19, [X31+40]
	040 Move X2, [X8]
	041 Move X22, [X31+16]
	042 Move X21, [X31+24]
	043 Move X30, [X31+48]
	044 Call Queue`1<Object>.Enqueue, X0, X1
	045 Return 
	046 Call 0x1C17F20

Method: System.Void UpdateCallbackTargets()

Disassembly:
	0x01E55C74 MOV X0, X20
	0x01E55C78 MOV W1, W21
	0x01E55C7C BL 0x1E55588
	0x01E55C80 LDR X0, [X22]
	0x01E55C84 LDR W8, [X0 + 0xE0]
	0x01E55C88 CBNZ W8, 0x1E55C90
	0x01E55C8C BL 0x1C16DFC
	0x01E55C90 STR X19, [X20 + 0x48]
	0x01E55C94 LDP X20, X19, [X31 + 0x20]
	0x01E55C98 LDP X22, X21, [X31 + 0x10]
	0x01E55C9C LDP X30, X23, [X31], #0x30
	0x01E55CA0 RET
	0x01E55CA4 SUB X31, X31, 0x40
	0x01E55CA8 STP X30, X23, [X31 + 0x10]
	0x01E55CAC STP X22, X21, [X31 + 0x20]
	0x01E55CB0 STP X20, X19, [X31 + 0x30]
	0x01E55CB4 ADRP X22, 0x2584000
	0x01E55CB8 ADRP X23, 0x22A7000
	0x01E55CBC ADRP X21, 0x22A7000
	0x01E55CC0 LDRB W8, [X22 + 0x48]
	0x01E55CC4 LDR X23, [X23 + 0x2B8]
	0x01E55CC8 LDR X21, [X21 + 0x610]
	0x01E55CCC MOV X20, X1
	0x01E55CD0 MOV X19, X0
	0x01E55CD4 TBNZ X8, 0x0, 0x1E55D10
	0x01E55CD8 ADRP X0, 0x22A7000
	0x01E55CDC LDR X0, [X0 + 0x610]
	0x01E55CE0 BL 0x1C16CF4
	0x01E55CE4 ADRP X0, 0x22A7000
	0x01E55CE8 LDR X0, [X0 + 0x618]
	0x01E55CEC BL 0x1C16CF4
	0x01E55CF0 ADRP X0, 0x22A7000
	0x01E55CF4 LDR X0, [X0 + 0x2B8]
	0x01E55CF8 BL 0x1C16CF4
	0x01E55CFC ADRP X0, 0x22A7000
	0x01E55D00 LDR X0, [X0 + 0x548]
	0x01E55D04 BL 0x1C16CF4
	0x01E55D08 MOVZ W8, 0x1
	0x01E55D0C STRB W8, [X22 + 0x48]
	0x01E55D10 LDR X0, [X23]
	0x01E55D14 BL 0x1C16F10
	0x01E55D18 LDR X2, [X21]
	0x01E55D1C MOVZ W1, 0x1
	0x01E55D20 MOV X21, X0
	0x01E55D24 BL 0x29D2C94
	0x01E55D28 CBZ X21, 0x1E55DB4
	0x01E55D2C ADRP X8, 0x22A7000
	0x01E55D30 LDR X8, [X8 + 0x618]
	0x01E55D34 ADRP X22, 0x22A7000
	0x01E55D38 MOVZ W1, 0xE0
	0x01E55D3C MOV X0, X21
	0x01E55D40 LDR X3, [X8]
	0x01E55D44 LDR X22, [X22 + 0x548]
	0x01E55D48 MOV X2, X20
	0x01E55D4C BL 0x29D3520
	0x01E55D50 LDR X0, [X22]
	0x01E55D54 STR X31, [X31 + 0x8]
	0x01E55D58 LDR W8, [X0 + 0xE0]
	0x01E55D5C CBNZ W8, 0x1E55D64
	0x01E55D60 BL 0x1C16DFC
	0x01E55D64 ADD X0, X31, 0x8
	0x01E55D68 MOVZ W1, 0x1
	0x01E55D6C MOV X2, X31
	0x01E55D70 MOVZ W20, 0x1
	0x01E55D74 BL 0x35160A8
	0x01E55D78 STRB W20, [X31 + 0xC]
	0x01E55D7C LDR X8, [X19]
	0x01E55D80 LDR X3, [X31 + 0x8]
	0x01E55D84 MOVZ W1, 0xDC
	0x01E55D88 MOV X0, X19
	0x01E55D8C LDR X9, [X8 + 0x228]
	0x01E55D90 LDR X4, [X8 + 0x230]
	0x01E55D94 MOV X2, X21
	0x01E55D98 BLR X9
	0x01E55D9C LDP X20, X19, [X31 + 0x30]
	0x01E55DA0 LDP X22, X21, [X31 + 0x20]
	0x01E55DA4 LDP X30, X23, [X31 + 0x10]
	0x01E55DA8 AND W0, W0, 0x1
	0x01E55DAC ADD X31, X31, 0x40
	0x01E55DB0 RET
	0x01E55DB4 BL 0x1C16F20
	0x01E55DB8 STR X30, [X31 - 0x30]!
	0x01E55DBC STP X22, X21, [X31 + 0x10]
	0x01E55DC0 STP X20, X19, [X31 + 0x20]
	0x01E55DC4 ADRP X21, 0x2584000
	0x01E55DC8 LDRB W8, [X21 + 0x49]
	0x01E55DCC MOV X20, X1
	0x01E55DD0 MOV X19, X0
	0x01E55DD4 TBNZ X8, 0x0, 0x1E55E34
	0x01E55DD8 ADRP X0, 0x229F000
	0x01E55DDC LDR X0, [X0 + 0x9D8]
	0x01E55DE0 BL 0x1C16CF4
	0x01E55DE4 ADRP X0, 0x22A7000
	0x01E55DE8 LDR X0, [X0 + 0x540]
	0x01E55DEC BL 0x1C16CF4
	0x01E55DF0 ADRP X0, 0x22A7000
	0x01E55DF4 LDR X0, [X0 + 0x618]
	0x01E55DF8 BL 0x1C16CF4
	0x01E55DFC ADRP X0, 0x22A7000
	0x01E55E00 LDR X0, [X0 + 0x2B8]
	0x01E55E04 BL 0x1C16CF4
	0x01E55E08 ADRP X0, 0x22A6000
	0x01E55E0C LDR X0, [X0 + 0xBC8]
	0x01E55E10 BL 0x1C16CF4
	0x01E55E14 ADRP X0, 0x22A7000
	0x01E55E18 LDR X0, [X0 + 0x548]
	0x01E55E1C BL 0x1C16CF4
	0x01E55E20 ADRP X0, 0x22A7000
	0x01E55E24 LDR X0, [X0 + 0x620]
	0x01E55E28 BL 0x1C16CF4
	0x01E55E2C MOVZ W8, 0x1
	0x01E55E30 STRB W8, [X21 + 0x49]
	0x01E55E34 LDRB W8, [X19 + 0x40]
	0x01E55E38 CMP W8, 0x3
	0x01E55E3C B.CC 0x1E55EBC
	0x01E55E40 LDR X21, [X19 + 0x48]
	0x01E55E44 CBZ X21, 0x1E55FA4
	0x01E55E48 ADRP X9, 0x22A6000
	0x01E55E4C LDR X8, [X21]
	0x01E55E50 LDR X9, [X9 + 0xBC8]
	0x01E55E54 ADRP X10, 0x22A7000
	0x01E55E58 LDR X1, [X9]
	0x01E55E5C LDR X10, [X10 + 0x620]
	0x01E55E60 LDRH W9, [X8 + 0x12E]
	0x01E55E64 LDR X22, [X10]
	0x01E55E68 CBZ X9, 0x1E55E8C
	0x01E55E6C LDR X10, [X8 + 0xB0]
	0x01E55E70 ADD X10, X10, 0x8
	0x01E55E74 LDUR X11, [X10 - 0x8]
	0x01E55E78 CMP X11, X1
	0x01E55E7C B.EQ 0x1E55E9C
	0x01E55E80 SUBS X9, X9, 0x1
	0x01E55E84 ADD X10, X10, 0x10
	0x01E55E88 B.NE 0x1E55E74
	0x01E55E8C MOV X0, X21
	0x01E55E90 MOV W2, W31
	0x01E55E94 BL 0x1C5C788
	0x01E55E98 B 0x1E55EA8
	0x01E55E9C LDRSW X9, [X10]
	0x01E55EA0 ADD X8, X8, X9, 0x4, LSL
	0x01E55EA4 ADD X0, X8, 0x138
	0x01E55EA8 LDP X8, X3, [X0]
	0x01E55EAC MOVZ W1, 0x3
	0x01E55EB0 MOV X0, X21
	0x01E55EB4 MOV X2, X22
	0x01E55EB8 BLR X8
	0x01E55EBC CBZ X20, 0x1E55F4C
	0x01E55EC0 LDR X0, [X20 + 0x10]
	0x01E55EC4 MOV X1, X31
	0x01E55EC8 BL 0x32277A8
	0x01E55ECC MOV X21, X31
	0x01E55ED0 TBNZ X0, 0x0, 0x1E55F50
	0x01E55ED4 ADRP X8, 0x22A7000
	0x01E55ED8 LDR X8, [X8 + 0x2B8]
	0x01E55EDC LDR X0, [X8]
	0x01E55EE0 BL 0x1C16F10
	0x01E55EE4 ADRP X8, 0x22A7000
	0x01E55EE8 LDR X8, [X8 + 0x540]
	0x01E55EEC MOV X21, X0
	0x01E55EF0 LDR X1, [X8]
	0x01E55EF4 BL 0x29D2C7C
	0x01E55EF8 CBZ X21, 0x1E55FA4
	0x01E55EFC ADRP X22, 0x22A7000
	0x01E55F00 LDR X2, [X20 + 0x10]
	0x01E55F04 LDR X22, [X22 + 0x618]
	0x01E55F08 MOVZ W1, 0xD5
	0x01E55F0C MOV X0, X21
	0x01E55F10 LDR X3, [X22]
	0x01E55F14 BL 0x29D3520
	0x01E55F18 ADRP X9, 0x229F000
	0x01E55F1C LDRB W8, [X20 + 0x18]
	0x01E55F20 LDR X9, [X9 + 0x9D8]
	0x01E55F24 ADD X1, X31, 0xC
	0x01E55F28 STRB W8, [X31 + 0xC]
	0x01E55F2C LDR X0, [X9]
	0x01E55F30 BL 0x1C16E04
	0x01E55F34 LDR X3, [X22]
	0x01E55F38 MOV X2, X0
	0x01E55F3C MOVZ W1, 0xD4
	0x01E55F40 MOV X0, X21
	0x01E55F44 BL 0x29D3520
	0x01E55F48 B 0x1E55F50
	0x01E55F4C MOV X21, X31

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X20, 0x2585000
	014 Move W8, [X20+33]
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {61}
	020 Move X0, 0x22A7000
	021 Move X0, [X0+3248]
	022 Call 0x1C17CF4
	023 Move X0, 0x22A8000
	024 Move X0, [X0+1224]
	025 Call 0x1C17CF4
	026 Move X0, 0x22A8000
	027 Move X0, [X0+1232]
	028 Call 0x1C17CF4
	029 Move X0, 0x22A8000
	030 Move X0, [X0+1240]
	031 Call 0x1C17CF4
	032 Move X0, 0x22A8000
	033 Move X0, [X0+1248]
	034 Call 0x1C17CF4
	035 Move X0, 0x22A8000
	036 Move X0, [X0+1256]
	037 Call 0x1C17CF4
	038 Move X0, 0x22A8000
	039 Move X0, [X0+1264]
	040 Call 0x1C17CF4
	041 Move X0, 0x22A8000
	042 Move X0, [X0+1272]
	043 Call 0x1C17CF4
	044 Move X0, 0x22A8000
	045 Move X0, [X0+1280]
	046 Call 0x1C17CF4
	047 Move X0, 0x22A8000
	048 Move X0, [X0+1288]
	049 Call 0x1C17CF4
	050 Move X0, 0x22A8000
	051 Move X0, [X0+1296]
	052 Call 0x1C17CF4
	053 Move X0, 0x22A8000
	054 Move X0, [X0+1304]
	055 Call 0x1C17CF4
	056 Move X0, 0x22A8000
	057 Move X0, [X0+1312]
	058 Call 0x1C17CF4
	059 Move W8, 1
	060 Move [X20+33], W8
	061 Move X0, [X19+368]
	062 Compare X0, 0
	063 JumpIfEqual {195}
	064 Move X22, 0x22A8000
	065 Move X23, 0x22A8000
	066 Move X27, 0x22A8000
	067 Move X28, 0x22A8000
	068 Move X29, 0x22A8000
	069 Move X24, 0x22A8000
	070 Move X25, 0x22A8000
	071 Move X22, [X22+1304]
	072 Move X23, [X23+1232]
	073 Move X27, [X27+1288]
	074 Move X28, [X28+1280]
	075 Move X29, [X29+1296]
	076 Move X24, [X24+1264]
	077 Move X25, [X25+1248]
	078 Move W8, [X0+32]
	079 NotImplemented "Instruction CMP not yet implemented."
	080 Move X1, [X22]
	081 Call Queue`1<Object>.Dequeue, X0
	082 Compare X0, 0
	083 JumpIfEqual {195}
	084 Move X20, X0
	085 Move X0, [X19+376]
	086 Compare X0, 0
	087 JumpIfEqual {195}
	088 Move X1, [X20+16]
	089 Move X2, [X23]
	090 Move W21, [X20+24]
	091 Call HashSet`1<Object>.Contains, X0, X1
	092 Compare W21, 0
	093 JumpIfEqual {106}
	094 Move TEMP, X0
	095 And TEMP, TEMP, 1
	096 Compare TEMP, 1
	097 JumpIfEqual {192}
	098 Move X0, [X19+376]
	099 Compare X0, 0
	100 JumpIfEqual {195}
	101 Move X8, 0x22A8000
	102 Move X1, [X20+16]
	103 Move X8, [X8+1224]
	104 Move X2, [X8]
	105 Call HashSet`1<Object>.Add, X0, X1
	106 Move TEMP, X0
	107 And TEMP, TEMP, 1
	108 Compare TEMP, 1
	109 JumpIfNotEqual {192}
	110 Move X0, [X19+376]
	111 Compare X0, 0
	112 JumpIfEqual {195}
	113 Move X8, 0x22A8000
	114 Move X1, [X20+16]
	115 Move X8, [X8+1240]
	116 Move X2, [X8]
	117 Call HashSet`1<Object>.Remove, X0, X1
	118 Move X8, 0x22A8000
	119 Move X2, [X19+192]
	120 Move X8, [X8+1272]
	121 Move X0, X19
	122 Move X1, X20
	123 Move X3, [X8]
	124 Call 0x221445C, X0, X1, X2
	125 Move X8, 0x22A8000
	126 Move X2, [X19+176]
	127 Move X8, [X8+1256]
	128 Move X0, X19
	129 Move X1, X20
	130 Move X3, [X8]
	131 Call 0x221445C, X0, X1, X2
	132 Move X2, [X19+184]
	133 Move X3, [X27]
	134 Move X0, X19
	135 Move X1, X20
	136 Call 0x221445C, X0, X1, X2
	137 Move X2, [X19+200]
	138 Move X3, [X28]
	139 Move X0, X19
	140 Move X1, X20
	141 Call 0x221445C, X0, X1, X2
	142 Move X2, [X19+208]
	143 Move X3, [X29]
	144 Move X0, X19
	145 Move X1, X20
	146 Call 0x221445C, X0, X1, X2
	147 Move X2, [X19+216]
	148 Move X3, [X24]
	149 Move X0, X19
	150 Move X1, X20
	151 Call 0x221445C, X0, X1, X2
	152 Move X0, [X20+16]
	153 Move X1, [X25]
	154 Call 0x1C17E00
	155 Compare X0, 0
	156 JumpIfEqual {192}
	157 Move X8, 0x22A7000
	158 Move W26, [X20+24]
	159 Move X8, [X8+3248]
	160 Move X21, X0
	161 Move X0, [X8]
	162 Call 0x1C17F10
	163 Move X8, [X21]
	164 Move X1, [X25]
	165 Move X20, X0
	166 NotImplemented "Instruction LDRH not yet implemented."
	167 Compare X9, 0
	168 JumpIfEqual {175}
	169 Move X10, [X8+176]
	170 Add X10, X10, 8
	171 NotImplemented "Instruction LDUR not yet implemented."
	172 NotImplemented "Instruction CMP not yet implemented."
	173 Subtract X9, X9, 1
	174 Add X10, X10, 16
	175 Move X0, X21
	176 Move W2, W31
	177 Call 0x1C5D788
	178 NotImplemented "Instruction LDRSW not yet implemented."
	179 Add X8, X8, X9
	180 Add X0, X8, 312
	181 Move X2, [X0+8]
	182 Move X0, X20
	183 Move X1, X21
	184 Move X3, X31
	185 Call Action`1<Object>..ctor, X0, X1, X2
	186 Move X0, X19
	187 Move X1, X20
	188 Compare W26, 0
	189 JumpIfEqual {191}
	190 Call LoadBalancingClient.add_EventReceived, X0, X1
	191 Call LoadBalancingClient.remove_EventReceived, X0, X1
	192 Move X0, [X19+368]
	193 Compare X0, 0
	194 JumpIfNotEqual {78}
	195 Call 0x1C17F20
	196 Move X20, [X31+80]
	197 Move X19, [X31+88]
	198 Move X22, [X31+64]
	199 Move X21, [X31+72]
	200 Move X24, [X31+48]
	201 Move X23, [X31+56]
	202 Move X26, [X31+32]
	203 Move X25, [X31+40]
	204 Move X28, [X31+16]
	205 Move X27, [X31+24]
	206 Move X29, [X31+96]
	207 Move X30, [X31+104]
	208 Return 

Method: System.Void UpdateCallbackTarget(Fusion.Photon.Realtime.LoadBalancingClient/CallbackTargetChange change, System.Collections.Generic.List`1<T> container)

Disassembly:
	0x0221445C STR X30, [X31 - 0x30]!
	0x02214460 STP X22, X21, [X31 + 0x10]
	0x02214464 STP X20, X19, [X31 + 0x20]
	0x02214468 ADRP X22, 0x21C5000
	0x0221446C ADRP X21, 0x1EE7000
	0x02214470 LDRB W8, [X22 + 0x86B]
	0x02214474 LDR X21, [X21 + 0x8B0]
	0x02214478 MOV X19, X1
	0x0221447C MOV X20, X0
	0x02214480 TBNZ X8, 0x0, 0x22144A4
	0x02214484 ADRP X0, 0x1EE7000
	0x02214488 LDR X0, [X0 + 0x8B0]
	0x0221448C BL 0x1C16CF4
	0x02214490 ADRP X0, 0x1EE7000
	0x02214494 LDR X0, [X0 + 0xA48]
	0x02214498 BL 0x1C16CF4
	0x0221449C MOVZ W8, 0x1
	0x022144A0 STRB W8, [X22 + 0x86B]
	0x022144A4 LDR X0, [X21]
	0x022144A8 ADRP X21, 0x1EE7000
	0x022144AC LDR W8, [X0 + 0xE0]
	0x022144B0 LDR X21, [X21 + 0xA48]
	0x022144B4 CBNZ W8, 0x22144BC
	0x022144B8 BL 0x1C16DFC
	0x022144BC LDR X2, [X21]
	0x022144C0 MOV X0, X20
	0x022144C4 MOV X1, X19
	0x022144C8 LDP X20, X19, [X31 + 0x20]
	0x022144CC LDP X22, X21, [X31 + 0x10]
	0x022144D0 MOV X3, X31
	0x022144D4 LDR X30, [X31], #0x30
	0x022144D8 B 0x1E3F018
	0x022144DC STR X30, [X31 - 0x30]!
	0x022144E0 STP X22, X21, [X31 + 0x10]
	0x022144E4 STP X20, X19, [X31 + 0x20]
	0x022144E8 ADRP X22, 0x21C5000
	0x022144EC ADRP X21, 0x1EE7000
	0x022144F0 LDRB W8, [X22 + 0x86C]
	0x022144F4 LDR X21, [X21 + 0x8B0]
	0x022144F8 MOV X19, X1
	0x022144FC MOV X20, X0
	0x02214500 TBNZ X8, 0x0, 0x2214524
	0x02214504 ADRP X0, 0x1EE7000
	0x02214508 LDR X0, [X0 + 0x8B0]
	0x0221450C BL 0x1C16CF4
	0x02214510 ADRP X0, 0x1EE7000
	0x02214514 LDR X0, [X0 + 0xA48]
	0x02214518 BL 0x1C16CF4
	0x0221451C MOVZ W8, 0x1
	0x02214520 STRB W8, [X22 + 0x86C]
	0x02214524 LDR X0, [X21]
	0x02214528 ADRP X21, 0x1EE7000
	0x0221452C LDR W8, [X0 + 0xE0]
	0x02214530 LDR X21, [X21 + 0xA48]
	0x02214534 CBNZ W8, 0x221453C
	0x02214538 BL 0x1C16DFC
	0x0221453C LDR X2, [X21]
	0x02214540 MOV X0, X20
	0x02214544 MOV X1, X19
	0x02214548 LDP X20, X19, [X31 + 0x20]
	0x0221454C LDP X22, X21, [X31 + 0x10]
	0x02214550 MOV X3, X31
	0x02214554 LDR X30, [X31], #0x30
	0x02214558 B 0x1E3F5A4
	0x0221455C STR X30, [X31 - 0x30]!
	0x02214560 STP X22, X21, [X31 + 0x10]
	0x02214564 STP X20, X19, [X31 + 0x20]
	0x02214568 ADRP X22, 0x21C5000
	0x0221456C ADRP X21, 0x1EE7000
	0x02214570 LDRB W8, [X22 + 0x86D]
	0x02214574 LDR X21, [X21 + 0x8B0]
	0x02214578 MOV X19, X1
	0x0221457C MOV X20, X0
	0x02214580 TBNZ X8, 0x0, 0x22145A4
	0x02214584 ADRP X0, 0x1EE7000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X8, [X3+56]
	008 Move X20, X3
	009 Move X19, X2
	010 Move X21, X1
	011 Compare X8, 0
	012 JumpIfNotEqual {15}
	013 Move X0, X20
	014 Call 0x1C5D6E0
	015 Compare X21, 0
	016 JumpIfEqual {98}
	017 Move X8, [X20+56]
	018 Move X22, [X21+16]
	019 Move X1, [X8]
	020 Move W8, [X1+309]
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {28}
	025 Move X0, X1
	026 Call 0x1C5D684
	027 Move X1, X0
	028 Move X0, X22
	029 Call 0x1C17E00
	030 Move X8, [X20+56]
	031 Move X23, X0
	032 Move X22, [X8]
	033 Move W8, [X22+309]
	034 Move TEMP, X8
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfEqual {41}
	038 Move X0, X22
	039 Call 0x1C5D684
	040 Move X22, X0
	041 Compare X23, 0
	042 JumpIfEqual {69}
	043 Move X0, X23
	044 Move X1, X22
	045 Call 0x1C17E00
	046 Compare X0, 0
	047 JumpIfEqual {99}
	048 Compare X19, 0
	049 JumpIfEqual {98}
	050 Move W8, [X21+24]
	051 Move X9, [X20+56]
	052 Move X1, X0
	053 Compare W8, 0
	054 JumpIfEqual {76}
	055 Move W10, [X19+28]
	056 Move X8, [X19+16]
	057 Move X9, [X9+16]
	058 Add W10, W10, 1
	059 Move [X19+28], W10
	060 Compare X8, 0
	061 JumpIfEqual {98}
	062 NotImplemented "Instruction LDRSW not yet implemented."
	063 Move W11, [X8+24]
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Add W9, W10, 1
	066 Add X8, X8, X10
	067 Move [X19+24], W9
	068 Move [X8+32], X1
	069 Move X20, [X31+32]
	070 Move X19, [X31+40]
	071 Move X22, [X31+16]
	072 Move X21, [X31+24]
	073 Move X30, [X31+48]
	074 Move X23, [X31+56]
	075 Return 
	076 Move X2, [X9+24]
	077 Move X0, X19
	078 Move X20, [X31+32]
	079 Move X19, [X31+40]
	080 Move X22, [X31+16]
	081 Move X21, [X31+24]
	082 Move X30, [X31+48]
	083 Move X23, [X31+56]
	084 Call List`1<Object>.Remove, X0, X1
	085 Return 
	086 Move X8, [X9+32]
	087 Move X0, X19
	088 Move X20, [X31+32]
	089 Move X19, [X31+40]
	090 Move X22, [X31+16]
	091 Move X21, [X31+24]
	092 Move X8, [X8+192]
	093 Move X2, [X8+112]
	094 Move X30, [X31+48]
	095 Move X23, [X31+56]
	096 Call List`1<Object>.AddWithResize, X0, X1
	097 Return 
	098 Call 0x1C17F20
	099 Move X0, X23
	100 Move X1, X22
	101 Call 0x1C181E0

Method: System.Void .cctor()

Disassembly:
	0x01E563B0 B.NE 0x1E563D8
	0x01E563B4 LDR X0, [X25]
	0x01E563B8 ADD X1, X31, 0x8
	0x01E563BC STR W8, [X31 + 0x8]
	0x01E563C0 BL 0x1C16E04
	0x01E563C4 LDR X3, [X23]
	0x01E563C8 MOV X2, X0
	0x01E563CC MOVZ W1, 0xEB
	0x01E563D0 MOV X0, X19
	0x01E563D4 BL 0x29D3520
	0x01E563D8 LDR W8, [X20 + 0x1C]
	0x01E563DC CMP W8, 0x1
	0x01E563E0 B.LT 0x1E56408
	0x01E563E4 LDR X0, [X25]
	0x01E563E8 ADD X1, X31, 0x8
	0x01E563EC STR W8, [X31 + 0x8]
	0x01E563F0 BL 0x1C16E04
	0x01E563F4 LDR X3, [X23]
	0x01E563F8 MOV X2, X0
	0x01E563FC MOVZ W1, 0xEC
	0x01E56400 MOV X0, X19
	0x01E56404 BL 0x29D3520
	0x01E56408 LDRB W8, [X20 + 0x40]
	0x01E5640C CBZ W8, 0x1E5643C
	0x01E56410 LDR X0, [X24]
	0x01E56414 MOVZ W8, 0x1
	0x01E56418 ADD X1, X31, 0x8
	0x01E5641C ORR W21, W21, 0x4
	0x01E56420 STRB W8, [X31 + 0x8]
	0x01E56424 BL 0x1C16E04
	0x01E56428 LDR X3, [X23]
	0x01E5642C MOV X2, X0
	0x01E56430 MOVZ W1, 0xED
	0x01E56434 MOV X0, X19
	0x01E56438 BL 0x29D3520
	0x01E5643C LDRB W8, [X20 + 0x41]
	0x01E56440 LDR X2, [X20 + 0x38]
	0x01E56444 ORR W9, W21, 0x40
	0x01E56448 CMP W8, 0x0
	0x01E5644C CSEL W21, W21, W9, EQ
	0x01E56450 CBZ X2, 0x1E56464
	0x01E56454 LDR X3, [X23]
	0x01E56458 MOVZ W1, 0xCC
	0x01E5645C MOV X0, X19
	0x01E56460 BL 0x29D3520
	0x01E56464 LDRB W8, [X20 + 0x42]
	0x01E56468 CBZ W8, 0x1E56498
	0x01E5646C LDR X0, [X24]
	0x01E56470 MOVZ W8, 0x1
	0x01E56474 ADD X1, X31, 0x8
	0x01E56478 ORR W21, W21, 0x8
	0x01E5647C STRB W8, [X31 + 0x8]
	0x01E56480 BL 0x1C16E04
	0x01E56484 LDR X3, [X23]
	0x01E56488 MOV X2, X0
	0x01E5648C MOVZ W1, 0xEF
	0x01E56490 MOV X0, X19
	0x01E56494 BL 0x29D3520
	0x01E56498 LDRB W8, [X20 + 0x43]
	0x01E5649C LDRB W10, [X20 + 0x44]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x2584000
	006 Move X21, 0x22A7000
	007 Move X19, 0x22A7000
	008 Move W8, [X20+34]
	009 Move X21, [X21+1376]
	010 Move X19, [X19+1384]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {29}
	015 Move X0, 0x22A7000
	016 Move X0, [X0+1392]
	017 Call 0x1C17CF4
	018 Move X0, 0x22A7000
	019 Move X0, [X0+1384]
	020 Call 0x1C17CF4
	021 Move X0, 0x22A7000
	022 Move X0, [X0+1376]
	023 Call 0x1C17CF4
	024 Move X0, 0x22A6000
	025 Move X0, [X0+2856]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X20+34], W8
	029 Move X0, [X21]
	030 Call 0x1C17F10
	031 Move X1, [X19]
	032 Move X19, X0
	033 Call Dictionary`2<ByteEnum, Int32>..ctor, X0
	034 Compare X19, 0
	035 JumpIfEqual {68}
	036 Move X20, 0x22A7000
	037 Move X20, [X20+1392]
	038 Move X21, 0x22A6000
	039 Move W2, 0x13C2
	040 Move X0, X19
	041 Move X3, [X20]
	042 Move X21, [X21+2856]
	043 Move W1, W31
	044 Call Dictionary`2<ByteEnum, Int32>.Add, X0, X1, X2
	045 Move X3, [X20]
	046 Move W1, 1
	047 Move W2, 0x11B5
	048 Move X0, X19
	049 Call Dictionary`2<ByteEnum, Int32>.Add, X0, X1, X2
	050 Move X3, [X20]
	051 Move W1, 4
	052 Move W2, 80
	053 Move X0, X19
	054 Call Dictionary`2<ByteEnum, Int32>.Add, X0, X1, X2
	055 Move X3, [X20]
	056 Move W1, 5
	057 Move W2, 443
	058 Move X0, X19
	059 Call Dictionary`2<ByteEnum, Int32>.Add, X0, X1, X2
	060 Move X8, [X21]
	061 Move X8, [X8+184]
	062 Move [X8], X19
	063 Move X20, [X31+16]
	064 Move X19, [X31+24]
	065 Move X30, [X31+32]
	066 Move X21, [X31+40]
	067 Return 
	068 Call 0x1C17F20

