Type: Fusion.Photon.Realtime.PhotonPing

Method: System.Boolean StartPing(System.String ip)

Disassembly:
	0x01E5ACCC ADRP X21, 0x2299000
	0x01E5ACD0 ADRP X20, 0x22A2000
	0x01E5ACD4 LDRB W8, [X22 + 0x73]
	0x01E5ACD8 LDR X21, [X21 + 0x758]
	0x01E5ACDC LDR X20, [X20 + 0x7F8]
	0x01E5ACE0 MOV X19, X0
	0x01E5ACE4 TBNZ X8, 0x0, 0x1E5AD08
	0x01E5ACE8 ADRP X0, 0x2299000
	0x01E5ACEC LDR X0, [X0 + 0x758]
	0x01E5ACF0 BL 0x1C16CF4
	0x01E5ACF4 ADRP X0, 0x22A2000
	0x01E5ACF8 LDR X0, [X0 + 0x7F8]
	0x01E5ACFC BL 0x1C16CF4
	0x01E5AD00 MOVZ W8, 0x1

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0x22A3000
	004 Move X0, [X0+1880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X1, X31
	008 Move X19, X0
	009 Call NotImplementedException..ctor, X0
	010 Move X0, 0x22A3000
	011 Move X0, [X0+1888]
	012 Call 0x1C17D08
	013 Move X1, X0
	014 Move X0, X19
	015 Call 0x1C17DEC

Method: System.Boolean Done()

Disassembly:
	0x01E5AD04 STRB W8, [X22 + 0x73]
	0x01E5AD08 LDR W8, [X19 + 0x18]
	0x01E5AD0C LDR X0, [X21]
	0x01E5AD10 ADD X1, X31, 0xC
	0x01E5AD14 STR W8, [X31 + 0xC]
	0x01E5AD18 BL 0x1C16E04
	0x01E5AD1C LDR X8, [X20]
	0x01E5AD20 LDR X2, [X19 + 0x20]
	0x01E5AD24 MOV X1, X0
	0x01E5AD28 MOV X3, X31
	0x01E5AD2C MOV X0, X8
	0x01E5AD30 BL 0x3227BD4
	0x01E5AD34 LDP X20, X19, [X31 + 0x20]
	0x01E5AD38 LDP X22, X21, [X31 + 0x10]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0x22A3000
	004 Move X0, [X0+1880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X1, X31
	008 Move X19, X0
	009 Call NotImplementedException..ctor, X0
	010 Move X0, 0x22A3000
	011 Move X0, [X0+1896]
	012 Call 0x1C17D08
	013 Move X1, X0
	014 Move X0, X19
	015 Call 0x1C17DEC

Method: System.Void Dispose()

Disassembly:
	0x01E5AD3C LDR X30, [X31], #0x30
	0x01E5AD40 RET
	0x01E5AD44 STR X30, [X31 - 0x30]!
	0x01E5AD48 STP X22, X21, [X31 + 0x10]
	0x01E5AD4C STP X20, X19, [X31 + 0x20]
	0x01E5AD50 ADRP X20, 0x257F000
	0x01E5AD54 ADRP X22, 0x2299000
	0x01E5AD58 ADRP X21, 0x2299000
	0x01E5AD5C LDRB W8, [X20 + 0x74]
	0x01E5AD60 LDR X22, [X22 + 0x9D0]
	0x01E5AD64 LDR X21, [X21 + 0x758]
	0x01E5AD68 MOV X19, X0
	0x01E5AD6C TBNZ X8, 0x0, 0x1E5ADC0
	0x01E5AD70 ADRP X0, 0x22A1000

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0x22A3000
	004 Move X0, [X0+1880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X1, X31
	008 Move X19, X0
	009 Call NotImplementedException..ctor, X0
	010 Move X0, 0x22A3000
	011 Move X0, [X0+1904]
	012 Call 0x1C17D08
	013 Move X1, X0
	014 Move X0, X19
	015 Call 0x1C17DEC

Method: System.Void Init()

Disassembly:
	0x01E5AD74 LDR X0, [X0 + 0xD98]
	0x01E5AD78 BL 0x1C16CF4
	0x01E5AD7C ADRP X0, 0x2299000
	0x01E5AD80 LDR X0, [X0 + 0x758]
	0x01E5AD84 BL 0x1C16CF4
	0x01E5AD88 ADRP X0, 0x2299000
	0x01E5AD8C LDR X0, [X0 + 0x9D0]
	0x01E5AD90 BL 0x1C16CF4
	0x01E5AD94 ADRP X0, 0x22A2000
	0x01E5AD98 LDR X0, [X0 + 0x800]
	0x01E5AD9C BL 0x1C16CF4
	0x01E5ADA0 ADRP X0, 0x22A2000
	0x01E5ADA4 LDR X0, [X0 + 0x808]
	0x01E5ADA8 BL 0x1C16CF4
	0x01E5ADAC ADRP X0, 0x2299000
	0x01E5ADB0 LDR X0, [X0 + 0x988]
	0x01E5ADB4 BL 0x1C16CF4
	0x01E5ADB8 MOVZ W8, 0x1
	0x01E5ADBC STRB W8, [X20 + 0x74]
	0x01E5ADC0 LDR X0, [X22]
	0x01E5ADC4 MOVZ W1, 0x4
	0x01E5ADC8 BL 0x1C16D6C
	0x01E5ADCC MOV X20, X0
	0x01E5ADD0 LDR W8, [X19 + 0x18]
	0x01E5ADD4 LDR X0, [X21]
	0x01E5ADD8 ADD X1, X31, 0xC
	0x01E5ADDC STR W8, [X31 + 0xC]
	0x01E5ADE0 BL 0x1C16E04
	0x01E5ADE4 CBZ X20, 0x1E5AF14
	0x01E5ADE8 MOV X21, X0
	0x01E5ADEC CBZ X0, 0x1E5AE04

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x2580000
	006 Move X20, 0x22A3000
	007 Move W8, [X21+104]
	008 Move X20, [X20+1912]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x22A3000
	015 Move X0, [X0+1912]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+104], W8
	019 NotImplemented "Instruction STRH not yet implemented."
	020 Move X0, [X20]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {26}
	024 Call 0x1C17DFC
	025 Move X0, [X20]
	026 Move X8, [X0+184]
	027 Move X0, [X8]
	028 Compare X0, 0
	029 JumpIfEqual {41}
	030 Move X8, [X0]
	031 Move W1, 255
	032 Move X9, [X8+424]
	033 Move X2, [X8+432]
	034 NotImplemented "Instruction BLR not yet implemented."
	035 Move [X19+40], W0
	036 Move X20, [X31+16]
	037 Move X19, [X31+24]
	038 Move X30, [X31+32]
	039 Move X21, [X31+40]
	040 Return 
	041 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x01E5ADF0 LDR X8, [X20]
	0x01E5ADF4 MOV X0, X21
	0x01E5ADF8 LDR X1, [X8 + 0x40]
	0x01E5ADFC BL 0x1C16E00
	0x01E5AE00 CBZ X0, 0x1E5AF08
	0x01E5AE04 LDR W8, [X20 + 0x18]
	0x01E5AE08 CBZ W8, 0x1E5AF04
	0x01E5AE0C STR X21, [X20 + 0x20]
	0x01E5AE10 LDR X21, [X19 + 0x20]
	0x01E5AE14 CBZ X21, 0x1E5AE30
	0x01E5AE18 LDR X8, [X20]
	0x01E5AE1C MOV X0, X21
	0x01E5AE20 LDR X1, [X8 + 0x40]
	0x01E5AE24 BL 0x1C16E00
	0x01E5AE28 CBZ X0, 0x1E5AF08
	0x01E5AE2C LDR W8, [X20 + 0x18]
	0x01E5AE30 CMP W8, 0x1
	0x01E5AE34 B.LS 0x1E5AF04
	0x01E5AE38 STR X21, [X20 + 0x28]
	0x01E5AE3C LDRB W9, [X19 + 0x30]
	0x01E5AE40 ADRP X10, 0x22A2000
	0x01E5AE44 ADRP X11, 0x2299000
	0x01E5AE48 ADRP X12, 0x22A2000
	0x01E5AE4C LDR X10, [X10 + 0x800]
	0x01E5AE50 LDR X11, [X11 + 0x988]
	0x01E5AE54 LDR X12, [X12 + 0x808]
	0x01E5AE58 CMP W9, 0x0
	0x01E5AE5C LDR X21, [X10]
	0x01E5AE60 CSEL X9, X11, X12, EQ
	0x01E5AE64 LDR X22, [X9]
	0x01E5AE68 CBZ X22, 0x1E5AE84
	0x01E5AE6C LDR X8, [X20]
	0x01E5AE70 MOV X0, X22
	0x01E5AE74 LDR X1, [X8 + 0x40]
	0x01E5AE78 BL 0x1C16E00
	0x01E5AE7C CBZ X0, 0x1E5AF08
	0x01E5AE80 LDR W8, [X20 + 0x18]
	0x01E5AE84 CMP W8, 0x2
	0x01E5AE88 B.LS 0x1E5AF04
	0x01E5AE8C ADRP X8, 0x22A1000
	0x01E5AE90 LDR X8, [X8 + 0xD98]
	0x01E5AE94 STR X22, [X20 + 0x30]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x2580000
	008 Move X23, 0x229A000
	009 Move X21, 0x229A000
	010 Move X20, 0x22A3000
	011 Move W8, [X22+105]
	012 Move X23, [X23+2440]
	013 Move X21, [X21+1560]
	014 Move X20, [X20+1920]
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {31}
	020 Move X0, 0x229A000
	021 Move X0, [X0+1560]
	022 Call 0x1C17CF4
	023 Move X0, 0x22A3000
	024 Move X0, [X0+1920]
	025 Call 0x1C17CF4
	026 Move X0, 0x229A000
	027 Move X0, [X0+2440]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X22+105], W8
	031 Move X8, [X23]
	032 Move W9, 13
	033 Move [X19+28], W9
	034 Move W1, 13
	035 Move [X19+16], X8
	036 Move X0, [X21]
	037 Call 0x1C17D6C
	038 Move X1, [X20]
	039 Move X2, X31
	040 Move X20, X0
	041 Call RuntimeHelpers.InitializeArray, X0, X1
	042 Move [X19+32], X20
	043 Move X0, X19
	044 Move X20, [X31+32]
	045 Move X19, [X31+40]
	046 Move X22, [X31+16]
	047 Move X21, [X31+24]
	048 Move X1, X31
	049 Move X30, [X31+48]
	050 Move X23, [X31+56]
	051 Call Object..ctor, X0
	052 Return 

Method: System.Void .cctor()

Disassembly:
	0x01E5AE98 LDR X19, [X19 + 0x38]
	0x01E5AE9C LDR X0, [X8]
	0x01E5AEA0 LDR W8, [X0 + 0xE0]
	0x01E5AEA4 CBNZ W8, 0x1E5AEAC
	0x01E5AEA8 BL 0x1C16DFC
	0x01E5AEAC MOV X0, X19
	0x01E5AEB0 MOV X1, X31
	0x01E5AEB4 BL 0x1E49864
	0x01E5AEB8 MOV X19, X0
	0x01E5AEBC CBZ X0, 0x1E5AED4
	0x01E5AEC0 LDR X8, [X20]
	0x01E5AEC4 MOV X0, X19
	0x01E5AEC8 LDR X1, [X8 + 0x40]
	0x01E5AECC BL 0x1C16E00
	0x01E5AED0 CBZ X0, 0x1E5AF08
	0x01E5AED4 LDR W8, [X20 + 0x18]
	0x01E5AED8 CMP W8, 0x3
	0x01E5AEDC B.LS 0x1E5AF04
	0x01E5AEE0 MOV X0, X21
	0x01E5AEE4 MOV X1, X20
	0x01E5AEE8 MOV X2, X31
	0x01E5AEEC STR X19, [X20 + 0x38]
	0x01E5AEF0 BL 0x3227C5C
	0x01E5AEF4 LDP X20, X19, [X31 + 0x20]
	0x01E5AEF8 LDP X22, X21, [X31 + 0x10]
	0x01E5AEFC LDR X30, [X31], #0x30
	0x01E5AF00 RET
	0x01E5AF04 BL 0x1C16F28

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, 0x2580000
	006 Move X21, 0x22A1000
	007 Move X20, 0x22A3000
	008 Move W8, [X19+106]
	009 Move X21, [X21+744]
	010 Move X20, [X20+1912]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x22A3000
	016 Move X0, [X0+1912]
	017 Call 0x1C17CF4
	018 Move X0, 0x22A1000
	019 Move X0, [X0+744]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X19+106], W8
	023 Move X0, [X21]
	024 Call 0x1C17F10
	025 Move X1, X31
	026 Move X19, X0
	027 Call Random..ctor, X0
	028 Move X8, [X20]
	029 Move X8, [X8+184]
	030 Move [X8], X19
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X30, [X31+32]
	034 Move X21, [X31+40]
	035 Return 

