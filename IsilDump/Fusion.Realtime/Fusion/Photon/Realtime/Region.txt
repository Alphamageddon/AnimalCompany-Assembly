Type: Fusion.Photon.Realtime.Region

Method: System.String get_Code()

Disassembly:
	0x01E5C2BC CBZ X0, 0x1E5C514
	0x01E5C2C0 LDR W8, [X0 + 0x18]

ISIL:
	001 Move X0, [X0+16]
	002 Return X0

Method: System.Void set_Code(System.String value)

Disassembly:
	0x01E5C2C4 MOV X21, X0
	0x01E5C2C8 CMP W8, 0x2

ISIL:
	001 Move [X0+16], X1
	002 Return 

Method: System.String get_Cluster()

Disassembly:
	0x01E5C2CC B.LE 0x1E5C4B4
	0x01E5C2D0 LDR X0, [X21 + 0x28]

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void set_Cluster(System.String value)

Disassembly:
	0x01E5C2D4 ADD X1, X31, 0xC
	0x01E5C2D8 MOV X2, X31

ISIL:
	001 Move [X0+24], X1
	002 Return 

Method: System.String get_HostAndPort()

Disassembly:
	0x01E5C2DC BL 0x337BDF4
	0x01E5C2E0 TBZ X0, 0x0, 0x1E5C4B4

ISIL:
	001 Move X0, [X0+32]
	002 Return X0

Method: System.Void set_HostAndPort(System.String value)

Disassembly:
	0x01E5C2E4 LDR W8, [X21 + 0x18]
	0x01E5C2E8 CBZ W8, 0x1E5C518

ISIL:
	001 Move [X0+32], X1
	002 Return 

Method: System.Int32 get_Ping()

Disassembly:
	0x01E5C2EC CBZ X20, 0x1E5C514
	0x01E5C2F0 LDR X0, [X21 + 0x20]

ISIL:
	001 Move W0, [X0+40]
	002 Return X0

Method: System.Void set_Ping(System.Int32 value)

Disassembly:
	0x01E5C2F4 CMP W8, 0x2
	0x01E5C2F8 STR X0, [X20 + 0x10]

ISIL:
	001 Move [X0+40], W1
	002 Return 

Method: System.Boolean get_WasPinged()

Disassembly:
	0x01E5C2FC B.LS 0x1E5C518
	0x01E5C300 LDR X21, [X21 + 0x30]
	0x01E5C304 MOV X1, X31
	0x01E5C308 BL 0x32277A8
	0x01E5C30C TBNZ X0, 0x0, 0x1E5C4B4

ISIL:
	001 Move W8, [X0+40]
	002 Move TEMP, 0x80000000
	003 Not TEMP
	004 Move W9, TEMP
	005 NotImplemented "Instruction CMP not yet implemented."
	006 NotImplemented "Instruction CSET not yet implemented."
	007 Return X0

Method: System.Void .ctor(System.String code, System.String address)

Disassembly:
	0x01E5C310 MOV X0, X21
	0x01E5C314 MOV X1, X31
	0x01E5C318 BL 0x32277A8
	0x01E5C31C TBNZ X0, 0x0, 0x1E5C4B4
	0x01E5C320 LDR X0, [X19 + 0x18]
	0x01E5C324 CBZ X0, 0x1E5C514
	0x01E5C328 MOV X1, X21
	0x01E5C32C MOV X2, X31
	0x01E5C330 BL 0x322693C
	0x01E5C334 TBZ X0, 0x0, 0x1E5C4B4
	0x01E5C338 LDR X0, [X19 + 0x18]
	0x01E5C33C CBZ X0, 0x1E5C514
	0x01E5C340 LDR X1, [X20 + 0x10]
	0x01E5C344 MOV X2, X31
	0x01E5C348 BL 0x322BD1C
	0x01E5C34C TBZ X0, 0x0, 0x1E5C4B4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, X1
	006 Move X1, X31
	007 Move X19, X2
	008 Move X21, X0
	009 Call Object..ctor, X0
	010 Move X0, X21
	011 Move X1, X20
	012 Call Region.SetCodeAndCluster, X0, X1
	013 Move [X21+32], X19
	014 Move X20, [X31+16]
	015 Move X19, [X31+24]
	016 Move TEMP, 0x80000000
	017 Not TEMP
	018 Move W8, TEMP
	019 Move [X21+40], W8
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 Return 

Method: System.Void .ctor(System.String code, System.Int32 ping)

Disassembly:
	0x01E5C444 ADD W8, W8, 0x1
	0x01E5C448 CMP W2, 0x1
	0x01E5C44C STP W31, W8, [X0 + 0x18]
	0x01E5C450 B.LT 0x1E5C46C
	0x01E5C454 LDR X0, [X0 + 0x10]
	0x01E5C458 MOV W1, W31
	0x01E5C45C MOV X3, X31
	0x01E5C460 BL 0x339FA34
	0x01E5C464 LDR X0, [X19 + 0x28]
	0x01E5C468 CBZ X0, 0x1E5C52C
	0x01E5C46C ADRP X9, 0x22A0000
	0x01E5C470 LDR X9, [X9 + 0x8E0]
	0x01E5C474 LDR W10, [X0 + 0x1C]
	0x01E5C478 LDR X8, [X0 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, X1
	006 Move X1, X31
	007 Move W19, W2
	008 Move X21, X0
	009 Call Object..ctor, X0
	010 Move X0, X21
	011 Move X1, X20
	012 Call Region.SetCodeAndCluster, X0, X1
	013 Move [X21+40], W19
	014 Move X20, [X31+16]
	015 Move X19, [X31+24]
	016 Move X30, [X31+32]
	017 Move X21, [X31+40]
	018 Return 

Method: System.Void SetCodeAndCluster(System.String codeAsString)

Disassembly:
	0x01E5C350 ADRP X23, 0x22A0000
	0x01E5C354 LDR X23, [X23 + 0x840]
	0x01E5C358 LDR W21, [X31 + 0xC]
	0x01E5C35C LDR X0, [X23]
	0x01E5C360 LDR W8, [X0 + 0xE0]
	0x01E5C364 CBNZ W8, 0x1E5C370
	0x01E5C368 BL 0x1C16DFC
	0x01E5C36C LDR X0, [X23]
	0x01E5C370 LDR X8, [X0 + 0xB8]
	0x01E5C374 LDR W8, [X8 + 0x8]
	0x01E5C378 CMP W21, W8
	0x01E5C37C B.GE 0x1E5C4B4
	0x01E5C380 LDR W8, [X31 + 0xC]
	0x01E5C384 LDR X21, [X19 + 0x10]
	0x01E5C388 STR W8, [X19 + 0x38]
	0x01E5C38C ADRP X8, 0x22A0000
	0x01E5C390 LDR X8, [X8 + 0x908]
	0x01E5C394 LDR X0, [X8]
	0x01E5C398 BL 0x1C16F10
	0x01E5C39C ADRP X8, 0x22A0000
	0x01E5C3A0 LDR X8, [X8 + 0x918]
	0x01E5C3A4 MOV X1, X20
	0x01E5C3A8 MOV X3, X31
	0x01E5C3AC MOV X22, X0
	0x01E5C3B0 LDR X2, [X8]
	0x01E5C3B4 BL 0x24AD1FC
	0x01E5C3B8 CBZ X21, 0x1E5C514
	0x01E5C3BC ADRP X8, 0x22A0000
	0x01E5C3C0 LDR X8, [X8 + 0x8F0]
	0x01E5C3C4 MOV X0, X21
	0x01E5C3C8 MOV X1, X22
	0x01E5C3CC LDR X2, [X8]
	0x01E5C3D0 BL 0x301C5F0
	0x01E5C3D4 ADRP X8, 0x22A0000
	0x01E5C3D8 LDR X8, [X8 + 0x8D0]
	0x01E5C3DC MOV X21, X0
	0x01E5C3E0 LDR X8, [X8]
	0x01E5C3E4 MOV X0, X8
	0x01E5C3E8 BL 0x1C16F10
	0x01E5C3EC ADRP X8, 0x22A0000
	0x01E5C3F0 LDR X8, [X8 + 0x910]
	0x01E5C3F4 MOV X1, X19
	0x01E5C3F8 MOV X3, X31
	0x01E5C3FC MOV X22, X0
	0x01E5C400 LDR X2, [X8]
	0x01E5C404 BL 0x2A6B948
	0x01E5C408 LDR X0, [X23]
	0x01E5C40C BL 0x1C16F10
	0x01E5C410 MOV X1, X21
	0x01E5C414 MOV X2, X22
	0x01E5C418 MOV X20, X0
	0x01E5C41C BL 0x1E5CA4C
	0x01E5C420 LDR X21, [X19 + 0x28]
	0x01E5C424 STRB W31, [X31 + 0x8]
	0x01E5C428 ADD X1, X31, 0x8
	0x01E5C42C MOV X0, X21
	0x01E5C430 MOV X2, X31
	0x01E5C434 BL 0x33DE64C
	0x01E5C438 LDR X0, [X19 + 0x28]
	0x01E5C43C CBZ X0, 0x1E5C524
	0x01E5C440 LDP W2, W8, [X0 + 0x18]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x257E000
	007 Move W8, [X21+121]
	008 Move X20, X1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x2298000
	015 Move X0, [X0+2440]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+121], W8
	019 Compare X20, 0
	020 JumpIfEqual {52}
	021 Move X0, X20
	022 Move X1, X31
	023 Call String.ToLower, X0
	024 Compare X0, 0
	025 JumpIfEqual {71}
	026 Move W1, 47
	027 Move X2, X31
	028 Move X20, X0
	029 Call String.IndexOf, X0, X1
	030 NotImplemented "Instruction CMP not yet implemented."
	031 NotImplemented "Instruction CSEL not yet implemented."
	032 NotImplemented "Instruction CSEL not yet implemented."
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move W21, W0
	035 Move X0, X20
	036 Move W1, W31
	037 Move W2, W21
	038 Move X3, X31
	039 Call String.Substring, X0, X1, X2
	040 Compare X22, 0
	041 JumpIfEqual {71}
	042 Move [X22+16], X0
	043 Move W8, [X20+16]
	044 NotImplemented "Instruction ORN not yet implemented."
	045 Add W1, W21, 1
	046 Move X0, X20
	047 Add W2, W8, W9
	048 Move X3, X31
	049 Call String.Substring, X0, X1, X2
	050 Compare X19, 0
	051 JumpIfNotEqual {64}
	052 Move X8, 0x2298000
	053 Move X8, [X8+2440]
	054 Move X0, [X8]
	055 Move [X19+16], X0
	056 Compare X8, 0
	057 JumpIfEqual {71}
	058 Move [X8+16], X20
	059 Move X8, 0x2298000
	060 Move X8, [X8+2440]
	061 Move X0, [X8]
	062 Compare X19, 0
	063 JumpIfEqual {71}
	064 Move [X19+24], X0
	065 Move X20, [X31+32]
	066 Move X19, [X31+40]
	067 Move X22, [X31+16]
	068 Move X21, [X31+24]
	069 Move X30, [X31+48]
	070 Return 
	071 Call 0x1C17F20

Method: System.String ToString()

Disassembly:
	0x01E5C47C LDR X9, [X9]
	0x01E5C480 ADD W10, W10, 0x1

ISIL:
	001 Move W1, W31

Method: System.String ToString(System.Boolean compact = False)

Disassembly:
	0x01E5C484 STR W10, [X0 + 0x1C]
	0x01E5C488 CBZ X8, 0x1E5C528
	0x01E5C48C LDRSW X10, [X0 + 0x18]
	0x01E5C490 LDR W11, [X8 + 0x18]
	0x01E5C494 CMP W10, W11
	0x01E5C498 B.CS 0x1E5C4C0
	0x01E5C49C ADD W9, W10, 0x1
	0x01E5C4A0 ADD X8, X8, X10, 0x3, LSL
	0x01E5C4A4 MOV X19, X31
	0x01E5C4A8 STR W9, [X0 + 0x18]
	0x01E5C4AC STR X20, [X8 + 0x20]
	0x01E5C4B0 B 0x1E5C4D8
	0x01E5C4B4 MOV X0, X19
	0x01E5C4B8 BL 0x1E5C6DC
	0x01E5C4BC B 0x1E5C1C0
	0x01E5C4C0 LDR X8, [X9 + 0x20]
	0x01E5C4C4 LDR X8, [X8 + 0xC0]
	0x01E5C4C8 LDR X2, [X8 + 0x70]
	0x01E5C4CC MOV X1, X20
	0x01E5C4D0 BL 0x301BF90
	0x01E5C4D4 MOV X19, X31
	0x01E5C4D8 MOVZ W22, 0x11
	0x01E5C4DC LDRB W8, [X31 + 0x8]
	0x01E5C4E0 CBZ W8, 0x1E5C4F0
	0x01E5C4E4 MOV X0, X21
	0x01E5C4E8 MOV X1, X31
	0x01E5C4EC BL 0x33E14E4
	0x01E5C4F0 CBNZ X19, 0x1E5C51C
	0x01E5C4F4 CMP W22, 0x11
	0x01E5C4F8 B.EQ 0x1E5C500
	0x01E5C4FC CBNZ W22, 0x1E5C1C0
	0x01E5C500 CBZ X20, 0x1E5C514
	0x01E5C504 MOV X0, X20
	0x01E5C508 BL 0x1E5CAE0
	0x01E5C50C MOVZ W0, 0x1
	0x01E5C510 B 0x1E5C1C0
	0x01E5C514 BL 0x1C16F20
	0x01E5C518 BL 0x1C16F28
	0x01E5C51C MOV X0, X19
	0x01E5C520 BL 0x1C16F18
	0x01E5C524 BL 0x1C16F20
	0x01E5C528 BL 0x1C16F20
	0x01E5C52C BL 0x1C16F20
	0x01E5C530 B 0x1E5C538
	0x01E5C534 B 0x1E5C538
	0x01E5C538 MOV X22, X0
	0x01E5C53C CMP W1, 0x1
	0x01E5C540 B.NE 0x1E5C55C
	0x01E5C544 MOV X0, X22
	0x01E5C548 BL 0x3EB1AD0
	0x01E5C54C LDR X19, [X0]
	0x01E5C550 BL 0x3EB1AE0
	0x01E5C554 MOV W22, W31
	0x01E5C558 B 0x1E5C4DC
	0x01E5C55C MOV X19, X31
	0x01E5C560 B 0x1E5C568
	0x01E5C564 MOV X22, X0
	0x01E5C568 LDRB W8, [X31 + 0x8]
	0x01E5C56C CBZ W8, 0x1E5C57C
	0x01E5C570 MOV X0, X21
	0x01E5C574 MOV X1, X31
	0x01E5C578 BL 0x33E14E4
	0x01E5C57C CBNZ X19, 0x1E5C588
	0x01E5C580 MOV X0, X22
	0x01E5C584 BL 0x1D2C690
	0x01E5C588 MOV X0, X19
	0x01E5C58C BL 0x1C16F18
	0x01E5C590 BL 0x1990590

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x257E000
	007 Move W8, [X21+122]
	008 Move W20, W1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {28}
	014 Move X0, 0x2298000
	015 Move X0, [X0+1880]
	016 Call 0x1C17CF4
	017 Move X0, 0x2299000
	018 Move X0, [X0+3784]
	019 Call 0x1C17CF4
	020 Move X0, 0x22A0000
	021 Move X0, [X0+4080]
	022 Call 0x1C17CF4
	023 Move X0, 0x22A1000
	024 Move X0, [X0+2064]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X21+122], W8
	028 Move X21, [X19+16]
	029 Move X0, [X19+24]
	030 Move X1, X31
	031 Call String.IsNullOrEmpty, X0
	032 Move TEMP, X0
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfEqual {44}
	036 Move X8, 0x2299000
	037 Move X8, [X8+3784]
	038 Move X2, [X19+24]
	039 Move X0, X21
	040 Move X3, X31
	041 Move X1, [X8]
	042 Call String.Concat, X0, X1, X2
	043 Move X21, X0
	044 Move X9, 0x2298000
	045 Move W8, [X19+40]
	046 Move X9, [X9+1880]
	047 Move TEMP, X20
	048 And TEMP, TEMP, 1
	049 Compare TEMP, 1
	050 JumpIfNotEqual {63}
	051 Move X0, [X9]
	052 Move X19, 0x22A0000
	053 Move X19, [X19+4080]
	054 Add X1, X31, 12
	055 Move [X31+12], W8
	056 Call 0x1C17E04
	057 Move X8, [X19]
	058 Move X2, X0
	059 Move X1, X21
	060 Move X3, X31
	061 Move X0, X8
	062 Call String.Format, X0, X1, X2
	063 Move X0, [X9]
	064 Move X20, 0x22A1000
	065 Move X20, [X20+2064]
	066 Add X1, X31, 8
	067 Move [X31+8], W8
	068 Call 0x1C17E04
	069 Move X8, [X20]
	070 Move X3, [X19+32]
	071 Move X2, X0
	072 Move X1, X21
	073 Move X0, X8
	074 Move X4, X31
	075 Call String.Format, X0, X1, X2, X3
	076 Move X20, [X31+32]
	077 Move X19, [X31+40]
	078 Move X30, [X31+16]
	079 Move X21, [X31+24]
	080 Add X31, X31, 48
	081 Return X0

