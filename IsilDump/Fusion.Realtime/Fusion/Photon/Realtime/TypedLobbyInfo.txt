Type: Fusion.Photon.Realtime.TypedLobbyInfo

Method: System.String ToString()

Disassembly:
	0x01E5A5D4 TBNZ X8, 0x0, 0x1E5A5EC
	0x01E5A5D8 ADRP X0, 0x22A2000
	0x01E5A5DC LDR X0, [X0 + 0x778]
	0x01E5A5E0 BL 0x1C16CF4
	0x01E5A5E4 MOVZ W8, 0x1
	0x01E5A5E8 STRB W8, [X20 + 0x6F]
	0x01E5A5EC LDR X0, [X21]
	0x01E5A5F0 LDR W8, [X0 + 0xE0]
	0x01E5A5F4 CBNZ W8, 0x1E5A5FC
	0x01E5A5F8 BL 0x1C16DFC
	0x01E5A5FC MOV X0, X19
	0x01E5A600 LDP X20, X19, [X31 + 0x10]
	0x01E5A604 LDP X30, X21, [X31], #0x20
	0x01E5A608 B 0x1E59DF0
	0x01E5A60C LDR X0, [X0 + 0x10]
	0x01E5A610 RET
	0x01E5A614 STR X1, [X0 + 0x10]
	0x01E5A618 RET
	0x01E5A61C LDR W0, [X0 + 0x18]
	0x01E5A620 RET
	0x01E5A624 LDRB W0, [X0 + 0x1D]
	0x01E5A628 RET
	0x01E5A62C AND W8, W1, 0x1
	0x01E5A630 STRB W8, [X0 + 0x1D]
	0x01E5A634 RET
	0x01E5A638 LDR X0, [X0 + 0x20]
	0x01E5A63C RET
	0x01E5A640 STR X30, [X31 - 0x20]!
	0x01E5A644 STP X20, X19, [X31 + 0x10]
	0x01E5A648 MOV X19, X0
	0x01E5A64C LDR X0, [X0 + 0x20]
	0x01E5A650 MOV X20, X1
	0x01E5A654 MOV X1, X31
	0x01E5A658 BL 0x32277A8
	0x01E5A65C TBNZ X0, 0x0, 0x1E5A678
	0x01E5A660 LDR X0, [X19 + 0x20]
	0x01E5A664 CBZ X0, 0x1E5A6A0
	0x01E5A668 MOV X1, X20
	0x01E5A66C MOV X2, X31
	0x01E5A670 BL 0x322693C
	0x01E5A674 TBNZ X0, 0x0, 0x1E5A694
	0x01E5A678 LDRB W8, [X19 + 0x1C]
	0x01E5A67C STR X20, [X19 + 0x20]
	0x01E5A680 CBZ W8, 0x1E5A694
	0x01E5A684 MOV X0, X19
	0x01E5A688 LDP X20, X19, [X31 + 0x10]
	0x01E5A68C LDR X30, [X31], #0x20
	0x01E5A690 B 0x1E5A6A4
	0x01E5A694 LDP X20, X19, [X31 + 0x10]
	0x01E5A698 LDR X30, [X31], #0x20
	0x01E5A69C RET
	0x01E5A6A0 BL 0x1C16F20
	0x01E5A6A4 STR X30, [X31 - 0x20]!
	0x01E5A6A8 STP X20, X19, [X31 + 0x10]
	0x01E5A6AC ADRP X20, 0x257F000
	0x01E5A6B0 LDRB W8, [X20 + 0x78]
	0x01E5A6B4 MOV X19, X0
	0x01E5A6B8 TBNZ X8, 0x0, 0x1E5A6D0
	0x01E5A6BC ADRP X0, 0x22A1000
	0x01E5A6C0 LDR X0, [X0 + 0xDA0]
	0x01E5A6C4 BL 0x1C16CF4
	0x01E5A6C8 MOVZ W8, 0x1
	0x01E5A6CC STRB W8, [X20 + 0x78]
	0x01E5A6D0 LDR X8, [X19 + 0x10]
	0x01E5A6D4 CBZ X8, 0x1E5A6E0
	0x01E5A6D8 LDRB W8, [X8 + 0x68]
	0x01E5A6DC CBZ W8, 0x1E5A6F0
	0x01E5A6E0 LDP X20, X19, [X31 + 0x10]
	0x01E5A6E4 MOV W0, W31
	0x01E5A6E8 LDR X30, [X31], #0x20
	0x01E5A6EC RET
	0x01E5A6F0 ADRP X8, 0x22A1000
	0x01E5A6F4 LDR X8, [X8 + 0xDA0]
	0x01E5A6F8 LDR X0, [X8]
	0x01E5A6FC BL 0x1C16F10
	0x01E5A700 MOV X1, X31
	0x01E5A704 MOV X20, X0
	0x01E5A708 BL 0x34ED7D8
	0x01E5A70C CBZ X20, 0x1E5A754
	0x01E5A710 LDR X2, [X19 + 0x20]
	0x01E5A714 MOVZ W1, 0xFF
	0x01E5A718 MOV X0, X20
	0x01E5A71C MOV X3, X31
	0x01E5A720 BL 0x34ED9F4
	0x01E5A724 LDR X8, [X19 + 0x10]
	0x01E5A728 CBZ X8, 0x1E5A754
	0x01E5A72C LDR X0, [X8 + 0x60]
	0x01E5A730 CBZ X0, 0x1E5A754
	0x01E5A734 LDR W1, [X19 + 0x18]
	0x01E5A738 MOV X2, X20
	0x01E5A73C LDP X20, X19, [X31 + 0x10]
	0x01E5A740 MOV X3, X31
	0x01E5A744 MOV X4, X31
	0x01E5A748 MOV X5, X31
	0x01E5A74C LDR X30, [X31], #0x20
	0x01E5A750 B 0x1E4DFA0
	0x01E5A754 BL 0x1C16F20
	0x01E5A758 LDR X0, [X0 + 0x28]
	0x01E5A75C RET
	0x01E5A760 STR X1, [X0 + 0x28]
	0x01E5A764 RET
	0x01E5A768 LDR X8, [X0 + 0x10]
	0x01E5A76C CBZ X8, 0x1E5A784
	0x01E5A770 LDR W9, [X0 + 0x18]
	0x01E5A774 LDR W8, [X8 + 0x48]
	0x01E5A778 CMP W9, W8
	0x01E5A77C CSET W0, EQ

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+32], X22
	004 Move [X31+40], X21
	005 Move [X31+48], X20
	006 Move [X31+56], X19
	007 Move X20, 0x2580000
	008 Move X21, 0x229A000
	009 Move W8, [X20+100]
	010 Move X21, [X21+2512]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {30}
	016 Move X0, 0x229A000
	017 Move X0, [X0+1880]
	018 Call 0x1C17CF4
	019 Move X0, 0x22A3000
	020 Move X0, [X0+1800]
	021 Call 0x1C17CF4
	022 Move X0, 0x229A000
	023 Move X0, [X0+2512]
	024 Call 0x1C17CF4
	025 Move X0, 0x22A3000
	026 Move X0, [X0+1816]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X20+100], W8
	030 Move X0, [X21]
	031 Move W1, 4
	032 Call 0x1C17D6C
	033 Compare X0, 0
	034 JumpIfEqual {121}
	035 Move X21, [X19+16]
	036 Move X20, X0
	037 Compare X21, 0
	038 JumpIfEqual {45}
	039 Move X8, [X20]
	040 Move X0, X21
	041 Move X1, [X8+64]
	042 Call 0x1C17E00
	043 Compare X0, 0
	044 JumpIfEqual {118}
	045 Move W8, [X20+24]
	046 Compare W8, 0
	047 JumpIfEqual {117}
	048 Move X8, 0x22A3000
	049 Move X8, [X8+1800]
	050 Move [X20+32], X21
	051 Move W9, [X19+24]
	052 Add X1, X31, 28
	053 Move X0, [X8]
	054 Move [X31+28], W9
	055 Call 0x1C17E04
	056 Move X21, X0
	057 Compare X0, 0
	058 JumpIfEqual {65}
	059 Move X8, [X20]
	060 Move X0, X21
	061 Move X1, [X8+64]
	062 Call 0x1C17E00
	063 Compare X0, 0
	064 JumpIfEqual {118}
	065 Move W8, [X20+24]
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Move X22, 0x229A000
	068 Move X22, [X22+1880]
	069 Move [X20+40], X21
	070 Move W8, [X19+32]
	071 Add X1, X31, 24
	072 Move X0, [X22]
	073 Move [X31+24], W8
	074 Call 0x1C17E04
	075 Move X21, X0
	076 Compare X0, 0
	077 JumpIfEqual {84}
	078 Move X8, [X20]
	079 Move X0, X21
	080 Move X1, [X8+64]
	081 Call 0x1C17E00
	082 Compare X0, 0
	083 JumpIfEqual {118}
	084 Move W8, [X20+24]
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Move [X20+48], X21
	087 Move W8, [X19+28]
	088 Move X0, [X22]
	089 Add X1, X31, 12
	090 Move [X31+12], W8
	091 Call 0x1C17E04
	092 Move X19, X0
	093 Compare X0, 0
	094 JumpIfEqual {101}
	095 Move X8, [X20]
	096 Move X0, X19
	097 Move X1, [X8+64]
	098 Call 0x1C17E00
	099 Compare X0, 0
	100 JumpIfEqual {118}
	101 Move W8, [X20+24]
	102 NotImplemented "Instruction CMP not yet implemented."
	103 Move X8, 0x22A3000
	104 Move X8, [X8+1816]
	105 Move [X20+56], X19
	106 Move X1, X20
	107 Move X2, X31
	108 Move X0, [X8]
	109 Call String.Format, X0, X1
	110 Move X20, [X31+48]
	111 Move X19, [X31+56]
	112 Move X22, [X31+32]
	113 Move X21, [X31+40]
	114 Move X30, [X31+16]
	115 Add X31, X31, 64
	116 Return X0
	117 Call 0x1C17F28
	118 Call 0x1C17F44
	119 Move X1, X31
	120 Call 0x1C17DEC
	121 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x01E5A780 RET
	0x01E5A784 MOV W0, W31
	0x01E5A788 RET
	0x01E5A78C LDR W0, [X0 + 0x48]
	0x01E5A790 RET
	0x01E5A794 LDRB W0, [X0 + 0x30]
	0x01E5A798 RET
	0x01E5A79C AND W8, W1, 0x1
	0x01E5A7A0 STRB W8, [X0 + 0x30]
	0x01E5A7A4 RET
	0x01E5A7A8 LDR X0, [X0 + 0x38]
	0x01E5A7AC RET
	0x01E5A7B0 STR X1, [X0 + 0x38]
	0x01E5A7B4 RET
	0x01E5A7B8 AND W3, W3, 0x1
	0x01E5A7BC MOV X4, X31
	0x01E5A7C0 B 0x1E5A7C4
	0x01E5A7C4 STR X30, [X31 - 0x50]!
	0x01E5A7C8 STP X26, X25, [X31 + 0x10]
	0x01E5A7CC STP X24, X23, [X31 + 0x20]
	0x01E5A7D0 STP X22, X21, [X31 + 0x30]
	0x01E5A7D4 STP X20, X19, [X31 + 0x40]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x2580000
	006 Move X21, 0x22A3000
	007 Move W8, [X20+101]
	008 Move X21, [X21+352]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x22A3000
	015 Move X0, [X0+352]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+101], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X1, X31
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call Object..ctor, X0
	031 Return 

