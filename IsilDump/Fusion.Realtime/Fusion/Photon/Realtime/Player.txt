Type: Fusion.Photon.Realtime.Player

Method: Fusion.Photon.Realtime.Room get_RoomReference()

Disassembly:
	0x01E5B60C ADRP X0, 0x22A1000
	0x01E5B610 LDR X0, [X0 + 0x828]

ISIL:
	001 Move X0, [X0+16]
	002 Return X0

Method: System.Void set_RoomReference(Fusion.Photon.Realtime.Room value)

Disassembly:
	0x01E5B614 BL 0x1C16CF4
	0x01E5B618 ADRP X0, 0x22A1000

ISIL:
	001 Move [X0+16], X1
	002 Return 

Method: System.Int32 get_ActorNumber()

Disassembly:
	0x01E5B61C LDR X0, [X0 + 0x830]
	0x01E5B620 BL 0x1C16CF4

ISIL:
	001 Move W0, [X0+24]
	002 Return X0

Method: System.Boolean get_HasRejoined()

Disassembly:
	0x01E5B624 ADRP X0, 0x22A1000
	0x01E5B628 LDR X0, [X0 + 0x838]

ISIL:
	001 Move W0, [X0+29]
	002 Return X0

Method: System.Void set_HasRejoined(System.Boolean value)

Disassembly:
	0x01E5B62C BL 0x1C16CF4
	0x01E5B630 MOVZ W8, 0x1
	0x01E5B634 STRB W8, [X20 + 0x7B]

ISIL:
	001 And W8, W1, 1
	002 Move [X0+29], W8
	003 Return 

Method: System.String get_NickName()

Disassembly:
	0x01E5B638 STP X31, X31, [X31 + 0x20]
	0x01E5B63C STR X31, [X31 + 0x30]

ISIL:
	001 Move X0, [X0+32]
	002 Return X0

Method: System.Void set_NickName(System.String value)

Disassembly:
	0x01E5B640 LDR X21, [X19 + 0x10]
	0x01E5B644 CBZ X21, 0x1E5B7C0
	0x01E5B648 LDR X20, [X19 + 0x20]
	0x01E5B64C CBNZ X20, 0x1E5B7E0
	0x01E5B650 ADRP X23, 0x22A1000
	0x01E5B654 LDR X23, [X23 + 0x838]
	0x01E5B658 LDR X0, [X23]
	0x01E5B65C LDR W8, [X0 + 0xE0]
	0x01E5B660 CBNZ W8, 0x1E5B66C
	0x01E5B664 BL 0x1C16DFC
	0x01E5B668 LDR X0, [X23]
	0x01E5B66C LDR X8, [X0 + 0xB8]
	0x01E5B670 LDR X20, [X8 + 0x8]
	0x01E5B674 CBNZ X20, 0x1E5B6C8
	0x01E5B678 LDR W8, [X0 + 0xE0]
	0x01E5B67C CBNZ W8, 0x1E5B688
	0x01E5B680 BL 0x1C16DFC
	0x01E5B684 LDR X0, [X23]
	0x01E5B688 ADRP X9, 0x22A1000
	0x01E5B68C LDR X8, [X0 + 0xB8]
	0x01E5B690 LDR X9, [X9 + 0x818]
	0x01E5B694 LDR X22, [X8]
	0x01E5B698 LDR X0, [X9]
	0x01E5B69C BL 0x1C16F10
	0x01E5B6A0 ADRP X8, 0x22A1000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X0
	005 Move X0, [X0+32]
	006 Move X20, X1
	007 Move X1, X31
	008 Call String.IsNullOrEmpty, X0
	009 Move TEMP, X0
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {23}
	013 Move X0, [X19+32]
	014 Compare X0, 0
	015 JumpIfEqual {35}
	016 Move X1, X20
	017 Move X2, X31
	018 Call String.Equals, X0, X1
	019 Move TEMP, X0
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {31}
	023 Move W8, [X19+28]
	024 Move [X19+32], X20
	025 Compare W8, 0
	026 JumpIfEqual {31}
	027 Move X0, X19
	028 Move X20, [X31+16]
	029 Move X19, [X31+24]
	030 Move X30, [X31+32]
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X30, [X31+32]
	034 Return 
	035 Call 0x1C17F20

Method: System.String get_UserId()

Disassembly:
	0x01E5B758 ADD X8, X31, 0x8
	0x01E5B75C BL 0x301CB58

ISIL:
	001 Move X0, [X0+40]
	002 Return X0

Method: System.Void set_UserId(System.String value)

Disassembly:
	0x01E5B760 LDUR V0, [X31 + 0x8]
	0x01E5B764 LDR X8, [X31 + 0x18]

ISIL:
	001 Move [X0+40], X1
	002 Return 

Method: System.Boolean get_IsMasterClient()

Disassembly:
	0x01E5B768 ADRP X23, 0x22A0000
	0x01E5B76C STR V0, [X31 + 0x2]
	0x01E5B770 STR X8, [X31 + 0x30]
	0x01E5B774 LDR X23, [X23 + 0xAE8]
	0x01E5B778 MOV X20, X21
	0x01E5B77C LDR X1, [X23]
	0x01E5B780 ADD X0, X31, 0x20
	0x01E5B784 BL 0x2BC4350
	0x01E5B788 TBZ X0, 0x0, 0x1E5B7C8

ISIL:
	001 Move X8, [X0+16]
	002 Compare X8, 0
	003 JumpIfEqual {9}
	004 Move W9, [X0+24]
	005 Move W8, [X8+72]
	006 NotImplemented "Instruction CMP not yet implemented."
	007 NotImplemented "Instruction CSET not yet implemented."
	008 Return X0
	009 Move W0, W31
	010 Return X0

Method: System.Boolean get_IsInactive()

Disassembly:
	0x01E5B794 LDR W8, [X21 + 0x28]
	0x01E5B798 CMP W8, W22

ISIL:
	001 Move W0, [X0+48]
	002 Return X0

Method: System.Void set_IsInactive(System.Boolean value)

Disassembly:
	0x01E5B79C B.GT 0x1E5B77C
	0x01E5B7A0 CBZ X20, 0x1E5B7FC
	0x01E5B7A4 LDR X0, [X21 + 0x10]

ISIL:
	001 And W8, W1, 1
	002 Move [X0+48], W8
	003 Return 

Method: ExitGames.Client.Photon.Hashtable get_CustomProperties()

Disassembly:
	0x01E5B7A8 CBZ X0, 0x1E5B800
	0x01E5B7AC LDR X1, [X20 + 0x10]

ISIL:
	001 Move X0, [X0+56]
	002 Return X0

Method: System.Void set_CustomProperties(ExitGames.Client.Photon.Hashtable value)

Disassembly:
	0x01E5B7B0 MOV X2, X31
	0x01E5B7B4 BL 0x3226580

ISIL:
	001 Move [X0+56], X1
	002 Return 

Method: System.Void .ctor(System.String nickName, System.Int32 actorNumber, System.Boolean isLocal)

Disassembly:
	0x01E5B7B8 TBZ X0, 0x1F, 0x1E5B77C
	0x01E5B7BC B 0x1E5B778
	0x01E5B7C0 MOV X20, X31

ISIL:
	001 And W3, W3, 1
	002 Move X4, X31

Method: System.Void .ctor(System.String nickName, System.Int32 actorNumber, System.Boolean isLocal, ExitGames.Client.Photon.Hashtable playerProperties)

Disassembly:
	0x01E5B7C4 B 0x1E5B7E0
	0x01E5B7C8 ADRP X8, 0x22A0000
	0x01E5B7CC LDR X8, [X8 + 0xAE0]
	0x01E5B7D0 ADD X0, X31, 0x20
	0x01E5B7D4 LDR X1, [X8]
	0x01E5B7D8 BL 0x2BC434C
	0x01E5B7DC STR X20, [X19 + 0x20]
	0x01E5B7E0 MOV X0, X20
	0x01E5B7E4 LDP X20, X19, [X31 + 0x60]
	0x01E5B7E8 LDP X22, X21, [X31 + 0x50]
	0x01E5B7EC LDP X30, X23, [X31 + 0x40]
	0x01E5B7F0 ADD X31, X31, 0x70
	0x01E5B7F4 RET
	0x01E5B7F8 BL 0x1C16F20
	0x01E5B7FC BL 0x1C16F20
	0x01E5B800 BL 0x1C16F20
	0x01E5B804 BL 0x1C16F20
	0x01E5B808 B 0x1E5B818
	0x01E5B80C B 0x1E5B818
	0x01E5B810 B 0x1E5B818
	0x01E5B814 B 0x1E5B818
	0x01E5B818 MOV X21, X0
	0x01E5B81C CMP W1, 0x1
	0x01E5B820 B.NE 0x1E5B854
	0x01E5B824 MOV X0, X21
	0x01E5B828 BL 0x3EB1AD0
	0x01E5B82C LDR X22, [X0]
	0x01E5B830 BL 0x3EB1AE0
	0x01E5B834 ADRP X8, 0x22A0000
	0x01E5B838 LDR X8, [X8 + 0xAE0]
	0x01E5B83C ADD X0, X31, 0x20
	0x01E5B840 LDR X1, [X8]
	0x01E5B844 BL 0x2BC434C
	0x01E5B848 CBZ X22, 0x1E5B7DC
	0x01E5B84C MOV X0, X22
	0x01E5B850 BL 0x1C16F18
	0x01E5B854 MOV X22, X31
	0x01E5B858 B 0x1E5B860
	0x01E5B85C MOV X21, X0
	0x01E5B860 ADRP X8, 0x22A0000
	0x01E5B864 LDR X8, [X8 + 0xAE0]
	0x01E5B868 LDR X1, [X8]
	0x01E5B86C ADD X0, X31, 0x20
	0x01E5B870 BL 0x2BC434C
	0x01E5B874 CBNZ X22, 0x1E5B880
	0x01E5B878 MOV X0, X21
	0x01E5B87C BL 0x1D2C690
	0x01E5B880 MOV X0, X22
	0x01E5B884 BL 0x1C16F18
	0x01E5B888 BL 0x1990590
	0x01E5B88C SUB X31, X31, 0x30
	0x01E5B890 STP X30, X21, [X31 + 0x10]
	0x01E5B894 STP X20, X19, [X31 + 0x20]
	0x01E5B898 ADRP X20, 0x257E000
	0x01E5B89C LDRB W8, [X20 + 0x7C]
	0x01E5B8A0 MOV X19, X0

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X26, 0x257F000
	011 Move X25, 0x229B000
	012 Move X24, 0x22A1000
	013 Move W8, [X26+112]
	014 Move X25, [X25+632]
	015 Move X24, [X24+3488]
	016 Move X19, X4
	017 Move W23, W3
	018 Move W22, W2
	019 Move X21, X1
	020 Move X20, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {33}
	025 Move X0, 0x22A1000
	026 Move X0, [X0+3488]
	027 Call 0x1C17CF4
	028 Move X0, 0x229B000
	029 Move X0, [X0+632]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X26+112], W8
	033 Move TEMP, 0
	034 Not TEMP
	035 Move W8, TEMP
	036 Move [X20+24], W8
	037 Move X8, [X25]
	038 Move X0, X20
	039 Move X1, X31
	040 And W23, W23, 1
	041 Move X8, [X8+184]
	042 Move X8, [X8]
	043 Move [X20+32], X8
	044 Call Object..ctor, X0
	045 Move X0, X20
	046 Move X1, X21
	047 Move [X20+28], W23
	048 Move [X20+24], W22
	049 Call Player.set_NickName, X0, X1
	050 Move X0, [X24]
	051 Call 0x1C17F10
	052 Move X1, X31
	053 Move X21, X0
	054 Call Hashtable..ctor, X0
	055 Move X8, [X20]
	056 Move [X20+56], X21
	057 Move X0, X20
	058 Move X1, X19
	059 Move X3, [X8+376]
	060 Move X2, [X8+384]
	061 Move X20, [X31+64]
	062 Move X19, [X31+72]
	063 Move X22, [X31+48]
	064 Move X21, [X31+56]
	065 Move X24, [X31+32]
	066 Move X23, [X31+40]
	067 Move X26, [X31+16]
	068 Move X25, [X31+24]
	069 Move X30, [X31+80]
	070 CallNoReturn X3

Method: Fusion.Photon.Realtime.Player Get(System.Int32 id)

Disassembly:
	0x01E5B8A4 TBNZ X8, 0x0, 0x1E5B8D4
	0x01E5B8A8 ADRP X0, 0x22A1000
	0x01E5B8AC LDR X0, [X0 + 0x840]
	0x01E5B8B0 BL 0x1C16CF4
	0x01E5B8B4 ADRP X0, 0x2298000
	0x01E5B8B8 LDR X0, [X0 + 0xAC8]
	0x01E5B8BC BL 0x1C16CF4

ISIL:
	001 Move X0, [X0+16]
	002 Compare X0, 0
	003 JumpIfEqual {9}
	004 Move X8, [X0]
	005 Move W2, W31
	006 Move X4, [X8+472]
	007 Move X3, [X8+480]
	008 CallNoReturn X4
	009 Return X0

Method: Fusion.Photon.Realtime.Player GetNext()

Disassembly:
	0x01E5B8C0 ADRP X0, 0x22A1000
	0x01E5B8C4 LDR X0, [X0 + 0x848]

ISIL:
	001 Move W1, [X0+24]

Method: Fusion.Photon.Realtime.Player GetNextFor(Fusion.Photon.Realtime.Player currentPlayer)

Disassembly:
	0x01E5BACC LDR X8, [X8 + 0x868]
	0x01E5BAD0 ADRP X22, 0x22A1000
	0x01E5BAD4 ADRP X23, 0x22A1000
	0x01E5BAD8 ADRP X21, 0x22A1000
	0x01E5BADC LDR X1, [X8]

ISIL:
	001 Compare X1, 0
	002 JumpIfEqual {6}
	003 Move W1, [X1+24]
	004 Call Player.GetNextFor, X0, X1
	005 Return X0
	006 Move X0, X31
	007 Return X0

Method: Fusion.Photon.Realtime.Player GetNextFor(System.Int32 currentPlayerId)

Disassembly:
	0x01E5B8C8 BL 0x1C16CF4
	0x01E5B8CC MOVZ W8, 0x1
	0x01E5B8D0 STRB W8, [X20 + 0x7C]
	0x01E5B8D4 MOV X0, X19
	0x01E5B8D8 BL 0x1E5B5A4
	0x01E5B8DC CBZ X0, 0x1E5B9D0
	0x01E5B8E0 MOV X0, X19
	0x01E5B8E4 BL 0x1E5B5A4
	0x01E5B8E8 CBZ X0, 0x1E5B9E4
	0x01E5B8EC ADRP X21, 0x22A1000
	0x01E5B8F0 LDR X21, [X21 + 0x840]
	0x01E5B8F4 MOV X8, X0
	0x01E5B8F8 LDR W20, [X8 + 0x28]
	0x01E5B8FC LDR X0, [X21]
	0x01E5B900 LDR W9, [X0 + 0xE0]
	0x01E5B904 CBNZ W9, 0x1E5B910
	0x01E5B908 BL 0x1C16DFC
	0x01E5B90C LDR X0, [X21]
	0x01E5B910 LDR X8, [X0 + 0xB8]
	0x01E5B914 LDR W8, [X8 + 0x4]
	0x01E5B918 CMP W20, W8
	0x01E5B91C B.GE 0x1E5B9D0
	0x01E5B920 ADRP X8, 0x2298000
	0x01E5B924 LDR X8, [X8 + 0xAC8]
	0x01E5B928 MOVZ W1, 0x5
	0x01E5B92C LDR X0, [X8]
	0x01E5B930 BL 0x1C16D6C
	0x01E5B934 MOV X20, X0
	0x01E5B938 MOV X0, X19
	0x01E5B93C BL 0x1E5B5A4
	0x01E5B940 CBZ X0, 0x1E5B9E4
	0x01E5B944 CBZ X20, 0x1E5B9E4
	0x01E5B948 LDR W8, [X20 + 0x18]
	0x01E5B94C CBZ W8, 0x1E5B9E8
	0x01E5B950 LDR X9, [X0 + 0x10]
	0x01E5B954 CMP W8, 0x1
	0x01E5B958 STR X9, [X20 + 0x20]
	0x01E5B95C B.EQ 0x1E5B9E8
	0x01E5B960 ADRP X21, 0x22A1000
	0x01E5B964 LDR X21, [X21 + 0x848]
	0x01E5B968 MOV X0, X19
	0x01E5B96C LDR X8, [X21]
	0x01E5B970 STR X8, [X20 + 0x28]
	0x01E5B974 BL 0x1E5B5A4
	0x01E5B978 CBZ X0, 0x1E5B9E4
	0x01E5B97C LDR W8, [X0 + 0x28]
	0x01E5B980 ADD X0, X31, 0xC
	0x01E5B984 MOV X1, X31
	0x01E5B988 STR W8, [X31 + 0xC]
	0x01E5B98C BL 0x337B6E0
	0x01E5B990 LDR W8, [X20 + 0x18]
	0x01E5B994 CMP W8, 0x2
	0x01E5B998 B.LS 0x1E5B9E8
	0x01E5B99C CMP W8, 0x3
	0x01E5B9A0 STR X0, [X20 + 0x30]
	0x01E5B9A4 B.EQ 0x1E5B9E8
	0x01E5B9A8 LDR X9, [X21]
	0x01E5B9AC CMP W8, 0x4
	0x01E5B9B0 STR X9, [X20 + 0x38]
	0x01E5B9B4 B.LS 0x1E5B9E8
	0x01E5B9B8 LDR X8, [X19 + 0x18]
	0x01E5B9BC MOV X0, X20
	0x01E5B9C0 MOV X1, X31
	0x01E5B9C4 STR X8, [X20 + 0x40]
	0x01E5B9C8 BL 0x32278CC
	0x01E5B9CC B 0x1E5B9D4
	0x01E5B9D0 LDR X0, [X19 + 0x18]
	0x01E5B9D4 LDP X20, X19, [X31 + 0x20]
	0x01E5B9D8 LDP X30, X21, [X31 + 0x10]
	0x01E5B9DC ADD X31, X31, 0x30
	0x01E5B9E0 RET
	0x01E5B9E4 BL 0x1C16F20
	0x01E5B9E8 BL 0x1C16F28
	0x01E5B9EC SUB X31, X31, 0x50
	0x01E5B9F0 STP X30, X23, [X31 + 0x20]
	0x01E5B9F4 STP X22, X21, [X31 + 0x30]
	0x01E5B9F8 STP X20, X19, [X31 + 0x40]
	0x01E5B9FC ADRP X21, 0x257E000
	0x01E5BA00 ADRP X20, 0x2298000
	0x01E5BA04 LDRB W8, [X21 + 0x7D]
	0x01E5BA08 LDR X20, [X20 + 0x8F0]
	0x01E5BA0C MOV X19, X0
	0x01E5BA10 TBNZ X8, 0x0, 0x1E5BA70
	0x01E5BA14 ADRP X0, 0x22A1000
	0x01E5BA18 LDR X0, [X0 + 0x850]
	0x01E5BA1C BL 0x1C16CF4
	0x01E5BA20 ADRP X0, 0x22A1000
	0x01E5BA24 LDR X0, [X0 + 0x858]
	0x01E5BA28 BL 0x1C16CF4
	0x01E5BA2C ADRP X0, 0x22A1000
	0x01E5BA30 LDR X0, [X0 + 0x860]
	0x01E5BA34 BL 0x1C16CF4
	0x01E5BA38 ADRP X0, 0x22A1000
	0x01E5BA3C LDR X0, [X0 + 0x868]
	0x01E5BA40 BL 0x1C16CF4
	0x01E5BA44 ADRP X0, 0x2298000
	0x01E5BA48 LDR X0, [X0 + 0x8F0]
	0x01E5BA4C BL 0x1C16CF4
	0x01E5BA50 ADRP X0, 0x22A1000
	0x01E5BA54 LDR X0, [X0 + 0x870]
	0x01E5BA58 BL 0x1C16CF4
	0x01E5BA5C ADRP X0, 0x22A1000
	0x01E5BA60 LDR X0, [X0 + 0x878]
	0x01E5BA64 BL 0x1C16CF4
	0x01E5BA68 MOVZ W8, 0x1
	0x01E5BA6C STRB W8, [X21 + 0x7D]
	0x01E5BA70 LDR X0, [X20]
	0x01E5BA74 STP X31, X31, [X31 + 0x8]
	0x01E5BA78 STR X31, [X31 + 0x18]
	0x01E5BA7C BL 0x1C16F10
	0x01E5BA80 MOV X1, X31
	0x01E5BA84 MOV X20, X0
	0x01E5BA88 BL 0x3231AC4
	0x01E5BA8C MOV X0, X19
	0x01E5BA90 BL 0x1E5B5A4
	0x01E5BA94 CBZ X0, 0x1E5BB6C
	0x01E5BA98 MOV W1, W31
	0x01E5BA9C BL 0x1E5B484
	0x01E5BAA0 CBZ X20, 0x1E5BB6C
	0x01E5BAA4 ADRP X8, 0x22A1000
	0x01E5BAA8 LDR X8, [X8 + 0x870]
	0x01E5BAAC MOV X2, X0
	0x01E5BAB0 MOV X0, X20
	0x01E5BAB4 MOV X3, X31
	0x01E5BAB8 LDR X1, [X8]
	0x01E5BABC BL 0x3234224
	0x01E5BAC0 LDR X0, [X19 + 0x28]
	0x01E5BAC4 CBZ X0, 0x1E5BB6C
	0x01E5BAC8 ADRP X8, 0x22A1000

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+40], X23
	004 Move [X31+48], X22
	005 Move [X31+56], X21
	006 Move [X31+64], X20
	007 Move [X31+72], X19
	008 Move X21, 0x257F000
	009 Move W8, [X21+113]
	010 Move W19, W1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {39}
	016 Move X0, 0x22A2000
	017 Move X0, [X0+1984]
	018 Call 0x1C17CF4
	019 Move X0, 0x22A2000
	020 Move X0, [X0+1992]
	021 Call 0x1C17CF4
	022 Move X0, 0x22A2000
	023 Move X0, [X0+2000]
	024 Call 0x1C17CF4
	025 Move X0, 0x22A2000
	026 Move X0, [X0+2008]
	027 Call 0x1C17CF4
	028 Move X0, 0x22A2000
	029 Move X0, [X0+2016]
	030 Call 0x1C17CF4
	031 Move X0, 0x22A2000
	032 Move X0, [X0+2024]
	033 Call 0x1C17CF4
	034 Move X0, 0x22A2000
	035 Move X0, [X0+2032]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X21+113], W8
	039 Move [X31+8], X31
	040 Move [X31+16], X31
	041 Move [X31+24], X31
	042 Move X8, [X20+16]
	043 Compare X8, 0
	044 JumpIfEqual {92}
	045 Move X0, [X8+112]
	046 Compare X0, 0
	047 JumpIfEqual {109}
	048 Move X8, 0x22A2000
	049 Move X8, [X8+1984]
	050 Move X1, [X8]
	051 Call Dictionary`2<Int32, Object>.get_Count, X0
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Move X8, [X20+16]
	054 Compare X8, 0
	055 JumpIfEqual {117}
	056 Move X20, [X8+112]
	057 Compare X20, 0
	058 JumpIfEqual {117}
	059 Move X8, 0x22A2000
	060 Move X8, [X8+2000]
	061 Move X0, X20
	062 Move X1, [X8]
	063 Call Dictionary`2<Int32, Object>.get_Keys, X0
	064 Compare X0, 0
	065 JumpIfEqual {117}
	066 Move X8, 0x22A2000
	067 Move X8, [X8+2032]
	068 Move X1, [X8]
	069 Add X8, X31, 8
	070 Call KeyCollection<Int32, Object>.GetEnumerator, X0
	071 Move X23, 0x22A2000
	072 Move X23, [X23+2016]
	073 Move TEMP, 0x80000000
	074 Not TEMP
	075 Move W21, TEMP
	076 Move W22, W19
	077 Move X1, [X23]
	078 Add X0, X31, 8
	079 Call Enumerator<Int32, Object>.MoveNext, X0
	080 Move TEMP, X0
	081 And TEMP, TEMP, 1
	082 Compare TEMP, 1
	083 JumpIfNotEqual {93}
	084 Move W8, [X31+24]
	085 NotImplemented "Instruction CMP not yet implemented."
	086 NotImplemented "Instruction CSEL not yet implemented."
	087 NotImplemented "Instruction CMP not yet implemented."
	088 NotImplemented "Instruction CCMP not yet implemented."
	089 NotImplemented "Instruction CCMP not yet implemented."
	090 NotImplemented "Instruction CSEL not yet implemented."
	091 Move W22, W9
	092 Move X0, X31
	093 Move X8, 0x22A2000
	094 Move X8, [X8+2008]
	095 Add X0, X31, 8
	096 Move X1, [X8]
	097 Call Enumerator<Int32, Object>.Dispose, X0
	098 Move X8, 0x22A2000
	099 Move X8, [X8+1992]
	100 Move X0, X20
	101 Move X2, [X8]
	102 Move TEMP, 0x80000000
	103 Not TEMP
	104 Move W8, TEMP
	105 NotImplemented "Instruction CMP not yet implemented."
	106 Move W1, W22
	107 Move W1, W21
	108 Call Dictionary`2<Int32, Object>.get_Item, X0, X1
	109 Move X20, [X31+64]
	110 Move X19, [X31+72]
	111 Move X22, [X31+48]
	112 Move X21, [X31+56]
	113 Move X30, [X31+32]
	114 Move X23, [X31+40]
	115 Add X31, X31, 80
	116 Return X0
	117 Call 0x1C17F20
	118 NotImplemented "Instruction CMP not yet implemented."
	119 Move X23, X0
	120 Move X0, X23
	121 Call 0x3EB2AD0
	122 Move X19, [X0]
	123 Call 0x3EB2AE0
	124 Move X8, 0x22A2000
	125 Move X8, [X8+2008]
	126 Add X0, X31, 8
	127 Move X1, [X8]
	128 Call Enumerator<Int32, Object>.Dispose, X0
	129 Compare X19, 0
	130 JumpIfEqual {98}
	131 Move X0, X19
	132 Call 0x1C17F18
	133 Move X19, X31
	134 Move X23, X0
	135 Move X8, 0x22A2000
	136 Move X8, [X8+2008]
	137 Move X1, [X8]
	138 Add X0, X31, 8
	139 Call Enumerator<Int32, Object>.Dispose, X0
	140 Compare X19, 0
	141 JumpIfNotEqual {144}
	142 Move X0, X23
	143 Call 0x1D2D690
	144 Move X0, X19
	145 Call 0x1C17F18
	146 Call 0x1991590

Method: System.Void InternalCacheProperties(ExitGames.Client.Photon.Hashtable properties)

Disassembly:
	0x01E5BAE8 LDR X21, [X21 + 0x850]
	0x01E5BAEC ADD X8, X31, 0x8
	0x01E5BAF0 BL 0x301CB58
	0x01E5BAF4 LDR X1, [X22]
	0x01E5BAF8 ADD X0, X31, 0x8
	0x01E5BAFC BL 0x2BC4350
	0x01E5BB00 TBZ X0, 0x0, 0x1E5BB24
	0x01E5BB04 LDR X0, [X31 + 0x18]
	0x01E5BB08 CBZ X0, 0x1E5BB68
	0x01E5BB0C BL 0x1E5BBF0
	0x01E5BB10 MOV X1, X0
	0x01E5BB14 MOV X0, X20
	0x01E5BB18 MOV X2, X31
	0x01E5BB1C BL 0x32338A8
	0x01E5BB20 B 0x1E5BAF4
	0x01E5BB24 LDR X1, [X21]
	0x01E5BB28 ADD X0, X31, 0x8
	0x01E5BB2C BL 0x2BC434C
	0x01E5BB30 LDR X2, [X19 + 0x40]
	0x01E5BB34 LDR X1, [X23]
	0x01E5BB38 MOV X0, X20
	0x01E5BB3C MOV X3, X31
	0x01E5BB40 BL 0x3234224
	0x01E5BB44 LDR X8, [X20]
	0x01E5BB48 MOV X0, X20
	0x01E5BB4C LDP X9, X1, [X8 + 0x168]
	0x01E5BB50 BLR X9
	0x01E5BB54 LDP X20, X19, [X31 + 0x40]
	0x01E5BB58 LDP X22, X21, [X31 + 0x30]
	0x01E5BB5C LDP X30, X23, [X31 + 0x20]
	0x01E5BB60 ADD X31, X31, 0x50
	0x01E5BB64 RET
	0x01E5BB68 BL 0x1C16F20
	0x01E5BB6C BL 0x1C16F20
	0x01E5BB70 B 0x1E5BB7C
	0x01E5BB74 B 0x1E5BB7C
	0x01E5BB78 B 0x1E5BB7C
	0x01E5BB7C MOV X21, X0
	0x01E5BB80 CMP W1, 0x1
	0x01E5BB84 B.NE 0x1E5BBB8
	0x01E5BB88 MOV X0, X21
	0x01E5BB8C BL 0x3EB1AD0
	0x01E5BB90 LDR X22, [X0]
	0x01E5BB94 BL 0x3EB1AE0
	0x01E5BB98 ADRP X8, 0x22A1000
	0x01E5BB9C LDR X8, [X8 + 0x850]
	0x01E5BBA0 ADD X0, X31, 0x8
	0x01E5BBA4 LDR X1, [X8]
	0x01E5BBA8 BL 0x2BC434C
	0x01E5BBAC CBZ X22, 0x1E5BB30
	0x01E5BBB0 MOV X0, X22
	0x01E5BBB4 BL 0x1C16F18
	0x01E5BBB8 MOV X22, X31
	0x01E5BBBC B 0x1E5BBC4
	0x01E5BBC0 MOV X21, X0
	0x01E5BBC4 ADRP X8, 0x22A1000
	0x01E5BBC8 LDR X8, [X8 + 0x850]
	0x01E5BBCC LDR X1, [X8]
	0x01E5BBD0 ADD X0, X31, 0x8
	0x01E5BBD4 BL 0x2BC434C
	0x01E5BBD8 CBNZ X22, 0x1E5BBE4
	0x01E5BBDC MOV X0, X21
	0x01E5BBE0 BL 0x1D2C690
	0x01E5BBE4 MOV X0, X22
	0x01E5BBE8 BL 0x1C16F18
	0x01E5BBEC BL 0x1990590
	0x01E5BBF0 SUB X31, X31, 0x40
	0x01E5BBF4 STP X30, X23, [X31 + 0x10]
	0x01E5BBF8 STP X22, X21, [X31 + 0x20]
	0x01E5BBFC STP X20, X19, [X31 + 0x30]
	0x01E5BC00 ADRP X20, 0x257E000
	0x01E5BC04 LDRB W8, [X20 + 0x8A]
	0x01E5BC08 MOV X19, X0
	0x01E5BC0C TBNZ X8, 0x0, 0x1E5BC48
	0x01E5BC10 ADRP X0, 0x22A1000
	0x01E5BC14 LDR X0, [X0 + 0x880]
	0x01E5BC18 BL 0x1C16CF4
	0x01E5BC1C ADRP X0, 0x22A0000
	0x01E5BC20 LDR X0, [X0 + 0xD98]
	0x01E5BC24 BL 0x1C16CF4
	0x01E5BC28 ADRP X0, 0x2298000
	0x01E5BC2C LDR X0, [X0 + 0x758]
	0x01E5BC30 BL 0x1C16CF4
	0x01E5BC34 ADRP X0, 0x22A1000
	0x01E5BC38 LDR X0, [X0 + 0x888]
	0x01E5BC3C BL 0x1C16CF4
	0x01E5BC40 MOVZ W8, 0x1
	0x01E5BC44 STRB W8, [X20 + 0x8A]
	0x01E5BC48 LDR X8, [X19 + 0x30]
	0x01E5BC4C CBZ X8, 0x1E5BCE0
	0x01E5BC50 ADRP X9, 0x2298000
	0x01E5BC54 LDR X9, [X9 + 0x758]
	0x01E5BC58 ADRP X21, 0x22A0000
	0x01E5BC5C LDR X21, [X21 + 0xD98]
	0x01E5BC60 LDR X20, [X8 + 0x10]
	0x01E5BC64 LDR W8, [X8 + 0x28]
	0x01E5BC68 LDR X0, [X9]
	0x01E5BC6C ADRP X23, 0x22A1000
	0x01E5BC70 ADRP X22, 0x22A1000
	0x01E5BC74 LDR X23, [X23 + 0x880]
	0x01E5BC78 LDR X22, [X22 + 0x888]
	0x01E5BC7C ADD X1, X31, 0xC
	0x01E5BC80 STR W8, [X31 + 0xC]
	0x01E5BC84 BL 0x1C16E04
	0x01E5BC88 LDR X8, [X21]
	0x01E5BC8C LDR X21, [X19 + 0x28]
	0x01E5BC90 MOV X19, X0
	0x01E5BC94 LDR W9, [X8 + 0xE0]
	0x01E5BC98 CBNZ W9, 0x1E5BCA4
	0x01E5BC9C MOV X0, X8
	0x01E5BCA0 BL 0x1C16DFC
	0x01E5BCA4 LDR X1, [X23]
	0x01E5BCA8 MOV X0, X21
	0x01E5BCAC BL 0x21E3040
	0x01E5BCB0 LDR X8, [X22]
	0x01E5BCB4 MOV X3, X0
	0x01E5BCB8 MOV X1, X20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x257F000
	006 Move W8, [X21+114]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {27}
	013 Move X0, 0x2299000
	014 Move X0, [X0+2904]
	015 Call 0x1C17CF4
	016 Move X0, 0x22A1000
	017 Move X0, [X0+3424]
	018 Call 0x1C17CF4
	019 Move X0, 0x22A1000
	020 Move X0, [X0+3480]
	021 Call 0x1C17CF4
	022 Move X0, 0x229B000
	023 Move X0, [X0+632]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X21+114], W8
	027 Compare X20, 0
	028 JumpIfEqual {48}
	029 Move X8, 0x22A1000
	030 Move X8, [X8+3424]
	031 Move X0, X20
	032 Move X1, [X8]
	033 Call Dictionary`2<Object, Object>.get_Count, X0
	034 Compare W0, 0
	035 JumpIfEqual {48}
	036 Move X0, [X19+56]
	037 Compare X0, 0
	038 JumpIfEqual {143}
	039 Move X8, [X0]
	040 Move X1, X20
	041 Move X9, [X8+312]
	042 Move X2, [X8+320]
	043 NotImplemented "Instruction BLR not yet implemented."
	044 Move TEMP, X0
	045 And TEMP, TEMP, 1
	046 Compare TEMP, 1
	047 JumpIfNotEqual {53}
	048 Move X20, [X31+16]
	049 Move X19, [X31+24]
	050 Move X30, [X31+32]
	051 Move X21, [X31+40]
	052 Return 
	053 Move W8, [X19+28]
	054 Compare W8, 0
	055 JumpIfNotEqual {79}
	056 Move W1, 255
	057 Move X0, X20
	058 Move X2, X31
	059 Call Hashtable.ContainsKey, X0, X1
	060 Move TEMP, X0
	061 And TEMP, TEMP, 1
	062 Compare TEMP, 1
	063 JumpIfNotEqual {79}
	064 Move W1, 255
	065 Move X0, X20
	066 Move X2, X31
	067 Call Hashtable.get_Item, X0, X1
	068 Move X8, X0
	069 Compare X0, 0
	070 JumpIfEqual {76}
	071 Move X9, 0x229B000
	072 Move X9, [X9+632]
	073 Move X1, [X9]
	074 Move X9, [X8]
	075 NotImplemented "Instruction CMP not yet implemented."
	076 Move X0, X19
	077 Move X1, X8
	078 Call Player.set_NickName, X0, X1
	079 Move W1, 253
	080 Move X0, X20
	081 Move X2, X31
	082 Call Hashtable.ContainsKey, X0, X1
	083 Move TEMP, X0
	084 And TEMP, TEMP, 1
	085 Compare TEMP, 1
	086 JumpIfNotEqual {99}
	087 Move W1, 253
	088 Move X0, X20
	089 Move X2, X31
	090 Call Hashtable.get_Item, X0, X1
	091 Compare X0, 0
	092 JumpIfEqual {98}
	093 Move X8, 0x229B000
	094 Move X8, [X8+632]
	095 Move X1, [X8]
	096 Move X8, [X0]
	097 NotImplemented "Instruction CMP not yet implemented."
	098 Move [X19+40], X0
	099 Move W1, 254
	100 Move X0, X20
	101 Move X2, X31
	102 Call Hashtable.ContainsKey, X0, X1
	103 Move TEMP, X0
	104 And TEMP, TEMP, 1
	105 Compare TEMP, 1
	106 JumpIfNotEqual {123}
	107 Move W1, 254
	108 Move X0, X20
	109 Move X2, X31
	110 Call Hashtable.get_Item, X0, X1
	111 Compare X0, 0
	112 JumpIfEqual {143}
	113 Move X8, 0x2299000
	114 Move X8, [X8+2904]
	115 Move X9, [X0]
	116 Move X1, [X8]
	117 Move X8, [X9+64]
	118 Move X9, [X1+64]
	119 NotImplemented "Instruction CMP not yet implemented."
	120 Call 0x1C17E08
	121 Move W8, [X0]
	122 Move [X19+48], W8
	123 Move X8, 0x22A1000
	124 Move X8, [X8+3480]
	125 Move X21, [X19+56]
	126 Move X0, [X8]
	127 Move W8, [X0+224]
	128 Compare W8, 0
	129 JumpIfNotEqual {131}
	130 Call 0x1C17DFC
	131 Move X0, X21
	132 Move X1, X20
	133 Move X2, X31
	134 Call Extensions.MergeStringKeys, X0, X1
	135 Move X0, [X19+56]
	136 Move X20, [X31+16]
	137 Move X19, [X31+24]
	138 Move X1, X31
	139 Move X30, [X31+32]
	140 Move X21, [X31+40]
	141 Call Extensions.StripKeysWithNullValues, X0
	142 Return 
	143 Call 0x1C17F20
	144 Move X0, X8
	145 Call 0x1C181E0

Method: System.String ToString()

Disassembly:
	0x01E5BCBC MOV X2, X19
	0x01E5BCC0 MOV X0, X8
	0x01E5BCC4 MOV X4, X31
	0x01E5BCC8 BL 0x3227C18
	0x01E5BCCC LDP X20, X19, [X31 + 0x30]
	0x01E5BCD0 LDP X22, X21, [X31 + 0x20]
	0x01E5BCD4 LDP X30, X23, [X31 + 0x10]
	0x01E5BCD8 ADD X31, X31, 0x40
	0x01E5BCDC RET
	0x01E5BCE0 BL 0x1C16F20
	0x01E5BCE4 STP X29, X30, [X31 - 0x60]!
	0x01E5BCE8 STP X28, X27, [X31 + 0x10]
	0x01E5BCEC STP X26, X25, [X31 + 0x20]
	0x01E5BCF0 STP X24, X23, [X31 + 0x30]
	0x01E5BCF4 STP X22, X21, [X31 + 0x40]
	0x01E5BCF8 STP X20, X19, [X31 + 0x50]
	0x01E5BCFC ADRP X20, 0x257E000
	0x01E5BD00 LDRB W8, [X20 + 0x7E]
	0x01E5BD04 MOV X21, X1
	0x01E5BD08 MOV X19, X0
	0x01E5BD0C TBNZ X8, 0x0, 0x1E5BD84
	0x01E5BD10 ADRP X0, 0x22A1000
	0x01E5BD14 LDR X0, [X0 + 0x890]
	0x01E5BD18 BL 0x1C16CF4
	0x01E5BD1C ADRP X0, 0x22A1000
	0x01E5BD20 LDR X0, [X0 + 0x898]
	0x01E5BD24 BL 0x1C16CF4
	0x01E5BD28 ADRP X0, 0x22A1000
	0x01E5BD2C LDR X0, [X0 + 0x8A0]
	0x01E5BD30 BL 0x1C16CF4
	0x01E5BD34 ADRP X0, 0x22A1000
	0x01E5BD38 LDR X0, [X0 + 0x8A8]
	0x01E5BD3C BL 0x1C16CF4
	0x01E5BD40 ADRP X0, 0x22A0000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x257F000
	007 Move X21, 0x2299000
	008 Move X20, 0x22A2000
	009 Move W8, [X22+115]
	010 Move X21, [X21+1880]
	011 Move X20, [X20+2040]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x2299000
	018 Move X0, [X0+1880]
	019 Call 0x1C17CF4
	020 Move X0, 0x22A2000
	021 Move X0, [X0+2040]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X22+115], W8
	025 Move W8, [X19+24]
	026 Move X0, [X21]
	027 Add X1, X31, 12
	028 Move [X31+12], W8
	029 Call 0x1C17E04
	030 Move X8, [X20]
	031 Move X2, [X19+32]
	032 Move X1, X0
	033 Move X3, X31
	034 Move X0, X8
	035 Call String.Format, X0, X1, X2
	036 Move X20, [X31+32]
	037 Move X19, [X31+40]
	038 Move X22, [X31+16]
	039 Move X21, [X31+24]
	040 Move X30, [X31+48]
	041 Return X0

Method: System.String ToStringFull()

Disassembly:
	0x01E5BD44 LDR X0, [X0 + 0xB28]
	0x01E5BD48 BL 0x1C16CF4
	0x01E5BD4C ADRP X0, 0x22A1000
	0x01E5BD50 LDR X0, [X0 + 0x308]
	0x01E5BD54 BL 0x1C16CF4
	0x01E5BD58 ADRP X0, 0x22A1000
	0x01E5BD5C LDR X0, [X0 + 0x8B0]
	0x01E5BD60 BL 0x1C16CF4
	0x01E5BD64 ADRP X0, 0x2298000
	0x01E5BD68 LDR X0, [X0 + 0xAC8]
	0x01E5BD6C BL 0x1C16CF4
	0x01E5BD70 ADRP X0, 0x229A000
	0x01E5BD74 LDR X0, [X0 + 0x3A0]
	0x01E5BD78 BL 0x1C16CF4
	0x01E5BD7C MOVZ W8, 0x1
	0x01E5BD80 STRB W8, [X20 + 0x7E]
	0x01E5BD84 CBZ X21, 0x1E5BFAC
	0x01E5BD88 LDRB W8, [X21 + 0x10]
	0x01E5BD8C CMP W8, 0xDC
	0x01E5BD90 B.NE 0x1E5BD9C
	0x01E5BD94 LDRH W8, [X21 + 0x12]
	0x01E5BD98 CBZ W8, 0x1E5BDB8
	0x01E5BD9C LDP X20, X19, [X31 + 0x50]
	0x01E5BDA0 LDP X22, X21, [X31 + 0x40]
	0x01E5BDA4 LDP X24, X23, [X31 + 0x30]
	0x01E5BDA8 LDP X26, X25, [X31 + 0x20]
	0x01E5BDAC LDP X28, X27, [X31 + 0x10]
	0x01E5BDB0 LDP X29, X30, [X31], #0x60
	0x01E5BDB4 RET
	0x01E5BDB8 MOVZ W1, 0xD2
	0x01E5BDBC MOV X0, X21
	0x01E5BDC0 MOV X2, X31
	0x01E5BDC4 BL 0x3505754
	0x01E5BDC8 ADRP X22, 0x2298000
	0x01E5BDCC LDR X22, [X22 + 0xAC8]
	0x01E5BDD0 LDR X1, [X22]
	0x01E5BDD4 BL 0x1C16E00
	0x01E5BDD8 MOV X20, X0
	0x01E5BDDC MOVZ W1, 0xE6
	0x01E5BDE0 MOV X0, X21
	0x01E5BDE4 MOV X2, X31
	0x01E5BDE8 BL 0x3505754
	0x01E5BDEC LDR X1, [X22]
	0x01E5BDF0 BL 0x1C16E00
	0x01E5BDF4 CBZ X20, 0x1E5BD9C
	0x01E5BDF8 MOV X21, X0
	0x01E5BDFC CBZ X0, 0x1E5BD9C
	0x01E5BE00 LDR W8, [X20 + 0x18]
	0x01E5BE04 LDR W9, [X21 + 0x18]
	0x01E5BE08 CMP W8, W9
	0x01E5BE0C B.NE 0x1E5BD9C
	0x01E5BE10 STR X31, [X19 + 0x20]
	0x01E5BE14 ADRP X8, 0x22A1000
	0x01E5BE18 LDR X8, [X8 + 0x8A8]
	0x01E5BE1C LDR X0, [X8]
	0x01E5BE20 BL 0x1C16F10
	0x01E5BE24 ADRP X8, 0x22A1000
	0x01E5BE28 LDR W1, [X20 + 0x18]
	0x01E5BE2C LDR X8, [X8 + 0x8A0]
	0x01E5BE30 MOV X22, X0
	0x01E5BE34 LDR X2, [X8]
	0x01E5BE38 BL 0x301B830
	0x01E5BE3C STR X22, [X19 + 0x10]
	0x01E5BE40 LDR X8, [X20 + 0x18]
	0x01E5BE44 CMP W8, 0x1
	0x01E5BE48 B.LT 0x1E5BF74
	0x01E5BE4C ADRP X29, 0x22A1000
	0x01E5BE50 LDR X29, [X29 + 0x8B0]
	0x01E5BE54 MOV X25, X31
	0x01E5BE58 AND X8, X8, 0x0
	0x01E5BE5C ADD X26, X21, 0x20
	0x01E5BE60 ADD X27, X20, 0x20
	0x01E5BE64 MOVN W28, 0x80000000
	0x01E5BE68 LDR W9, [X21 + 0x18]
	0x01E5BE6C CMP X25, X9
	0x01E5BE70 B.CS 0x1E5BFA8
	0x01E5BE74 ADRP X9, 0x22A1000
	0x01E5BE78 LDR X9, [X9 + 0x308]
	0x01E5BE7C LDR X23, [X26, X25, LSL #3]
	0x01E5BE80 LDR X9, [X9]
	0x01E5BE84 LDR X9, [X9 + 0xB8]
	0x01E5BE88 LDRH W22, [X9 + 0x8]
	0x01E5BE8C CBZ W22, 0x1E5BEC0
	0x01E5BE90 ADRP X8, 0x22A0000
	0x01E5BE94 LDR X8, [X8 + 0xB28]
	0x01E5BE98 LDR X0, [X8]
	0x01E5BE9C LDR W8, [X0 + 0xE0]
	0x01E5BEA0 CBNZ W8, 0x1E5BEA8
	0x01E5BEA4 BL 0x1C16DFC
	0x01E5BEA8 MOV X0, X23
	0x01E5BEAC MOV W1, W22
	0x01E5BEB0 MOV X2, X31
	0x01E5BEB4 BL 0x1E5159C
	0x01E5BEB8 LDR W8, [X20 + 0x18]
	0x01E5BEBC MOV X23, X0
	0x01E5BEC0 CMP X25, W8, UXTW
	0x01E5BEC4 B.CS 0x1E5BFA8
	0x01E5BEC8 LDR X0, [X29]
	0x01E5BECC LDR X24, [X27, X25, LSL #3]
	0x01E5BED0 BL 0x1C16F10
	0x01E5BED4 MOV X1, X31
	0x01E5BED8 MOV X22, X0
	0x01E5BEDC BL 0x33BDD8C
	0x01E5BEE0 MOV X0, X22
	0x01E5BEE4 MOV X1, X24
	0x01E5BEE8 BL 0x1E5B350
	0x01E5BEEC LDR X0, [X22 + 0x10]
	0x01E5BEF0 MOV X1, X31
	0x01E5BEF4 STR X23, [X22 + 0x20]
	0x01E5BEF8 STR W28, [X22 + 0x28]
	0x01E5BEFC BL 0x32277A8
	0x01E5BF00 TBNZ X0, 0x0, 0x1E5BF64
	0x01E5BF04 LDR X0, [X19 + 0x10]
	0x01E5BF08 CBZ X0, 0x1E5BFAC
	0x01E5BF0C ADRP X9, 0x22A1000
	0x01E5BF10 LDR W10, [X0 + 0x1C]
	0x01E5BF14 LDR X8, [X0 + 0x10]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x257F000
	007 Move X22, 0x2299000
	008 Move X21, 0x2299000
	009 Move W8, [X20+116]
	010 Move X22, [X22+2512]
	011 Move X21, [X21+1880]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {37}
	017 Move X0, 0x22A1000
	018 Move X0, [X0+3480]
	019 Call 0x1C17CF4
	020 Move X0, 0x2299000
	021 Move X0, [X0+1880]
	022 Call 0x1C17CF4
	023 Move X0, 0x2299000
	024 Move X0, [X0+2512]
	025 Call 0x1C17CF4
	026 Move X0, 0x22A2000
	027 Move X0, [X0+2048]
	028 Call 0x1C17CF4
	029 Move X0, 0x22A2000
	030 Move X0, [X0+2056]
	031 Call 0x1C17CF4
	032 Move X0, 0x2299000
	033 Move X0, [X0+2440]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X20+116], W8
	037 Move X0, [X22]
	038 Move W1, 4
	039 Call 0x1C17D6C
	040 Move X20, X0
	041 Move W8, [X19+24]
	042 Move X0, [X21]
	043 Add X1, X31, 12
	044 Move [X31+12], W8
	045 Call 0x1C17E04
	046 Compare X20, 0
	047 JumpIfEqual {132}
	048 Move X21, X0
	049 Compare X0, 0
	050 JumpIfEqual {57}
	051 Move X8, [X20]
	052 Move X0, X21
	053 Move X1, [X8+64]
	054 Call 0x1C17E00
	055 Compare X0, 0
	056 JumpIfEqual {129}
	057 Move W8, [X20+24]
	058 Compare W8, 0
	059 JumpIfEqual {128}
	060 Move [X20+32], X21
	061 Move X21, [X19+32]
	062 Compare X21, 0
	063 JumpIfEqual {71}
	064 Move X8, [X20]
	065 Move X0, X21
	066 Move X1, [X8+64]
	067 Call 0x1C17E00
	068 Compare X0, 0
	069 JumpIfEqual {129}
	070 Move W8, [X20+24]
	071 NotImplemented "Instruction CMP not yet implemented."
	072 Move [X20+40], X21
	073 Move W9, [X19+48]
	074 Move X10, 0x22A2000
	075 Move X11, 0x2299000
	076 Move X12, 0x22A2000
	077 Move X10, [X10+2048]
	078 Move X11, [X11+2440]
	079 Move X12, [X12+2056]
	080 NotImplemented "Instruction CMP not yet implemented."
	081 Move X21, [X10]
	082 NotImplemented "Instruction CSEL not yet implemented."
	083 Move X22, [X9]
	084 Compare X22, 0
	085 JumpIfEqual {93}
	086 Move X8, [X20]
	087 Move X0, X22
	088 Move X1, [X8+64]
	089 Call 0x1C17E00
	090 Compare X0, 0
	091 JumpIfEqual {129}
	092 Move W8, [X20+24]
	093 NotImplemented "Instruction CMP not yet implemented."
	094 Move X8, 0x22A1000
	095 Move X8, [X8+3480]
	096 Move [X20+48], X22
	097 Move X19, [X19+56]
	098 Move X0, [X8]
	099 Move W8, [X0+224]
	100 Compare W8, 0
	101 JumpIfNotEqual {103}
	102 Call 0x1C17DFC
	103 Move X0, X19
	104 Move X1, X31
	105 Call Extensions.ToStringFull, X0
	106 Move X19, X0
	107 Compare X0, 0
	108 JumpIfEqual {115}
	109 Move X8, [X20]
	110 Move X0, X19
	111 Move X1, [X8+64]
	112 Call 0x1C17E00
	113 Compare X0, 0
	114 JumpIfEqual {129}
	115 Move W8, [X20+24]
	116 NotImplemented "Instruction CMP not yet implemented."
	117 Move X0, X21
	118 Move X1, X20
	119 Move X2, X31
	120 Move [X20+56], X19
	121 Call String.Format, X0, X1
	122 Move X20, [X31+32]
	123 Move X19, [X31+40]
	124 Move X22, [X31+16]
	125 Move X21, [X31+24]
	126 Move X30, [X31+48]
	127 Return X0
	128 Call 0x1C17F28
	129 Call 0x1C17F44
	130 Move X1, X31
	131 Call 0x1C17DEC
	132 Call 0x1C17F20

Method: System.Boolean Equals(System.Object p)

Disassembly:
	0x01E5BF18 LDR X9, [X9 + 0x898]
	0x01E5BF1C ADD W10, W10, 0x1
	0x01E5BF20 LDR X9, [X9]
	0x01E5BF24 STR W10, [X0 + 0x1C]
	0x01E5BF28 CBZ X8, 0x1E5BFAC
	0x01E5BF2C LDRSW X10, [X0 + 0x18]
	0x01E5BF30 LDR W11, [X8 + 0x18]
	0x01E5BF34 CMP W10, W11
	0x01E5BF38 B.CS 0x1E5BF50
	0x01E5BF3C ADD W9, W10, 0x1
	0x01E5BF40 ADD X8, X8, X10, 0x3, LSL
	0x01E5BF44 STR W9, [X0 + 0x18]
	0x01E5BF48 STR X22, [X8 + 0x20]
	0x01E5BF4C B 0x1E5BF64
	0x01E5BF50 LDR X8, [X9 + 0x20]
	0x01E5BF54 MOV X1, X22
	0x01E5BF58 LDR X8, [X8 + 0xC0]
	0x01E5BF5C LDR X2, [X8 + 0x70]
	0x01E5BF60 BL 0x301BF90
	0x01E5BF64 LDR W8, [X20 + 0x18]
	0x01E5BF68 ADD X25, X25, 0x1
	0x01E5BF6C CMP X25, W8, SXTW
	0x01E5BF70 B.LT 0x1E5BE68
	0x01E5BF74 ADRP X8, 0x22A1000
	0x01E5BF78 LDR X8, [X8 + 0x890]
	0x01E5BF7C MOV X0, X20
	0x01E5BF80 LDR X1, [X8]
	0x01E5BF84 BL 0x2157BDC
	0x01E5BF88 ADRP X8, 0x229A000
	0x01E5BF8C LDR X8, [X8 + 0x3A0]
	0x01E5BF90 MOV X1, X20
	0x01E5BF94 MOV X2, X31
	0x01E5BF98 LDR X0, [X8]
	0x01E5BF9C BL 0x3227FF8
	0x01E5BFA0 STR X0, [X19 + 0x18]
	0x01E5BFA4 B 0x1E5BD9C
	0x01E5BFA8 BL 0x1C16F28
	0x01E5BFAC BL 0x1C16F20
	0x01E5BFB0 LDRB W0, [X0 + 0x54]
	0x01E5BFB4 RET
	0x01E5BFB8 AND W8, W1, 0x1
	0x01E5BFBC STRB W8, [X0 + 0x54]
	0x01E5BFC0 RET
	0x01E5BFC4 LDRB W0, [X0 + 0x55]
	0x01E5BFC8 RET

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x257F000
	006 Move W8, [X21+117]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x22A2000
	014 Move X0, [X0+656]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+117], W8
	018 Compare X20, 0
	019 JumpIfEqual {32}
	020 Move X8, 0x22A2000
	021 Move X8, [X8+656]
	022 Move X9, [X20]
	023 Move X8, [X8]
	024 Move W11, [X9+304]
	025 Move W10, [X8+304]
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move X9, [X9+200]
	028 Add X9, X9, X10
	029 NotImplemented "Instruction LDUR not yet implemented."
	030 NotImplemented "Instruction CMP not yet implemented."
	031 NotImplemented "Instruction CSEL not yet implemented."
	032 Move W0, W31
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move X30, [X31+32]
	036 Move X21, [X31+40]
	037 Return X0
	038 Move X8, [X19]
	039 Move X0, X19
	040 Move X9, [X8+344]
	041 Move X1, [X8+352]
	042 NotImplemented "Instruction BLR not yet implemented."
	043 Compare X20, 0
	044 JumpIfEqual {53}
	045 Move X8, [X20]
	046 Move W19, W0
	047 Move X0, X20
	048 Move X9, [X8+344]
	049 Move X1, [X8+352]
	050 NotImplemented "Instruction BLR not yet implemented."
	051 NotImplemented "Instruction CMP not yet implemented."
	052 NotImplemented "Instruction CSET not yet implemented."
	053 Call 0x1C17F20

Method: System.Int32 GetHashCode()

Disassembly:
	0x01E5BFCC AND W8, W1, 0x1
	0x01E5BFD0 STRB W8, [X0 + 0x55]

ISIL:
	001 Move W0, [X0+24]
	002 Return X0

Method: System.Void ChangeLocalID(System.Int32 newID)

Disassembly:
	0x01E5BFD4 RET
	0x01E5BFD8 STR X30, [X31 - 0x40]!
	0x01E5BFDC STP X24, X23, [X31 + 0x10]
	0x01E5BFE0 STP X22, X21, [X31 + 0x20]

ISIL:
	001 Move W8, [X0+28]
	002 Compare W8, 0
	003 JumpIfEqual {5}
	004 Move [X0+24], W1
	005 Return 

Method: System.Boolean SetCustomProperties(ExitGames.Client.Photon.Hashtable propertiesToSet, ExitGames.Client.Photon.Hashtable expectedValues = null, Fusion.Photon.Realtime.WebFlags webFlags = null)

Disassembly:
	0x01E5BFE4 STP X20, X19, [X31 + 0x30]
	0x01E5BFE8 ADRP X23, 0x257E000
	0x01E5BFEC ADRP X24, 0x22A1000
	0x01E5BFF0 ADRP X21, 0x22A1000
	0x01E5BFF4 ADRP X22, 0x22A1000
	0x01E5BFF8 LDRB W8, [X23 + 0x7F]
	0x01E5BFFC LDR X24, [X24 + 0x8B8]
	0x01E5C000 LDR X21, [X21 + 0x8C0]
	0x01E5C004 LDR X22, [X22 + 0x308]
	0x01E5C008 MOV W19, W1
	0x01E5C00C MOV X20, X0
	0x01E5C010 TBNZ X8, 0x0, 0x1E5C040
	0x01E5C014 ADRP X0, 0x22A0000
	0x01E5C018 LDR X0, [X0 + 0x8C0]
	0x01E5C01C BL 0x1C16CF4
	0x01E5C020 ADRP X0, 0x22A0000
	0x01E5C024 LDR X0, [X0 + 0x8B8]
	0x01E5C028 BL 0x1C16CF4
	0x01E5C02C ADRP X0, 0x22A0000
	0x01E5C030 LDR X0, [X0 + 0x308]
	0x01E5C034 BL 0x1C16CF4
	0x01E5C038 MOVZ W8, 0x1
	0x01E5C03C STRB W8, [X23 + 0x7F]
	0x01E5C040 LDR X0, [X24]
	0x01E5C044 BL 0x1C16F10
	0x01E5C048 LDR X1, [X21]
	0x01E5C04C MOV X21, X0
	0x01E5C050 BL 0x301B7C4
	0x01E5C054 MOVZ W8, 0x999A
	0x01E5C058 MOVK W8, 0x3F990000
	0x01E5C05C MOVZ W9, 0x5A
	0x01E5C060 UNIMPLEMENTED
	0x01E5C064 MOV X0, X20
	0x01E5C068 MOV X1, X31
	0x01E5C06C STR X21, [X20 + 0x28]
	0x01E5C070 STR D0, [X20 + 0x48]
	0x01E5C074 STR W9, [X20 + 0x50]
	0x01E5C078 BL 0x33BDD8C
	0x01E5C07C LDR X8, [X22]
	0x01E5C080 LDP X22, X21, [X31 + 0x20]
	0x01E5C084 LDP X24, X23, [X31 + 0x10]
	0x01E5C088 LDR X8, [X8 + 0xB8]
	0x01E5C08C STRH W19, [X8 + 0x8]
	0x01E5C090 LDP X20, X19, [X31 + 0x30]
	0x01E5C094 LDR X30, [X31], #0x40
	0x01E5C098 RET
	0x01E5C09C SUB X31, X31, 0x40
	0x01E5C0A0 STP X30, X23, [X31 + 0x10]
	0x01E5C0A4 STP X22, X21, [X31 + 0x20]
	0x01E5C0A8 STP X20, X19, [X31 + 0x30]
	0x01E5C0AC ADRP X23, 0x257D000
	0x01E5C0B0 ADRP X20, 0x22A0000
	0x01E5C0B4 LDRB W8, [X23 + 0x80]
	0x01E5C0B8 LDR X20, [X20 + 0x8C8]
	0x01E5C0BC MOV X21, X2
	0x01E5C0C0 MOV X22, X1
	0x01E5C0C4 MOV X19, X0
	0x01E5C0C8 TBNZ X8, 0x0, 0x1E5C188
	0x01E5C0CC ADRP X0, 0x22A0000
	0x01E5C0D0 LDR X0, [X0 + 0x8D0]
	0x01E5C0D4 BL 0x1C16CF4
	0x01E5C0D8 ADRP X0, 0x22A0000
	0x01E5C0DC LDR X0, [X0 + 0x2B0]
	0x01E5C0E0 BL 0x1C16CF4
	0x01E5C0E4 ADRP X0, 0x22A0000
	0x01E5C0E8 LDR X0, [X0 + 0x8D8]
	0x01E5C0EC BL 0x1C16CF4
	0x01E5C0F0 ADRP X0, 0x22A0000
	0x01E5C0F4 LDR X0, [X0 + 0x8E0]
	0x01E5C0F8 BL 0x1C16CF4
	0x01E5C0FC ADRP X0, 0x22A0000
	0x01E5C100 LDR X0, [X0 + 0x8E8]
	0x01E5C104 BL 0x1C16CF4
	0x01E5C108 ADRP X0, 0x22A0000
	0x01E5C10C LDR X0, [X0 + 0x8F0]
	0x01E5C110 BL 0x1C16CF4
	0x01E5C114 ADRP X0, 0x22A0000
	0x01E5C118 LDR X0, [X0 + 0x8F8]
	0x01E5C11C BL 0x1C16CF4
	0x01E5C120 ADRP X0, 0x22A0000
	0x01E5C124 LDR X0, [X0 + 0x900]
	0x01E5C128 BL 0x1C16CF4
	0x01E5C12C ADRP X0, 0x2297000
	0x01E5C130 LDR X0, [X0 + 0x598]
	0x01E5C134 BL 0x1C16CF4
	0x01E5C138 ADRP X0, 0x22A0000
	0x01E5C13C LDR X0, [X0 + 0x908]
	0x01E5C140 BL 0x1C16CF4
	0x01E5C144 ADRP X0, 0x22A0000
	0x01E5C148 LDR X0, [X0 + 0x910]
	0x01E5C14C BL 0x1C16CF4
	0x01E5C150 ADRP X0, 0x22A0000
	0x01E5C154 LDR X0, [X0 + 0x840]
	0x01E5C158 BL 0x1C16CF4
	0x01E5C15C ADRP X0, 0x22A0000
	0x01E5C160 LDR X0, [X0 + 0x918]
	0x01E5C164 BL 0x1C16CF4
	0x01E5C168 ADRP X0, 0x22A0000
	0x01E5C16C LDR X0, [X0 + 0x8C8]
	0x01E5C170 BL 0x1C16CF4
	0x01E5C174 ADRP X0, 0x22A0000
	0x01E5C178 LDR X0, [X0 + 0x920]
	0x01E5C17C BL 0x1C16CF4
	0x01E5C180 MOVZ W8, 0x1
	0x01E5C184 STRB W8, [X23 + 0x80]
	0x01E5C188 LDR X0, [X20]
	0x01E5C18C STR W31, [X31 + 0xC]
	0x01E5C190 STRB W31, [X31 + 0x8]
	0x01E5C194 BL 0x1C16F10
	0x01E5C198 MOV X1, X31
	0x01E5C19C MOV X20, X0
	0x01E5C1A0 BL 0x33BDD8C
	0x01E5C1A4 LDR X8, [X19 + 0x10]
	0x01E5C1A8 CBZ X8, 0x1E5C1BC
	0x01E5C1AC LDR W8, [X8 + 0x18]
	0x01E5C1B0 CBZ W8, 0x1E5C1BC
	0x01E5C1B4 LDRB W8, [X19 + 0x54]
	0x01E5C1B8 CBZ W8, 0x1E5C1D8
	0x01E5C1BC MOV W0, W31
	0x01E5C1C0 LDP X20, X19, [X31 + 0x30]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x257F000
	009 Move W8, [X23+118]
	010 Move X21, X3
	011 Move X22, X2
	012 Move X20, X1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0x22A0000
	019 Move X0, [X0+3424]
	020 Call 0x1C17CF4
	021 Move X0, 0x22A0000
	022 Move X0, [X0+3480]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X23+118], W8
	026 Compare X20, 0
	027 JumpIfEqual {114}
	028 Move X24, 0x22A0000
	029 Move X24, [X24+3424]
	030 Move X0, X20
	031 Move X1, [X24]
	032 Call Dictionary`2<Object, Object>.get_Count, X0
	033 Compare W0, 0
	034 JumpIfEqual {115}
	035 Move X23, 0x22A0000
	036 Move X23, [X23+3480]
	037 Move X0, [X23]
	038 Move W8, [X0+224]
	039 Compare W8, 0
	040 JumpIfNotEqual {42}
	041 Call 0x1C17DFC
	042 Move X0, X20
	043 Move X1, X31
	044 Call Extensions.StripToStringKeys, X0
	045 Move X8, [X19+16]
	046 Move X20, X0
	047 Compare X8, 0
	048 JumpIfEqual {85}
	049 Move W8, [X8+104]
	050 Compare W8, 0
	051 JumpIfEqual {123}
	052 Compare X20, 0
	053 JumpIfEqual {151}
	054 Move X1, [X24]
	055 Move X0, X20
	056 Call Dictionary`2<Object, Object>.get_Count, X0
	057 Compare W0, 0
	058 JumpIfEqual {115}
	059 Move X0, [X23]
	060 Move X21, [X19+56]
	061 Move W8, [X0+224]
	062 Compare W8, 0
	063 JumpIfNotEqual {65}
	064 Call 0x1C17DFC
	065 Move X0, X21
	066 Move X1, X20
	067 Move X2, X31
	068 Call Extensions.Merge, X0, X1
	069 Move X0, [X19+56]
	070 Move X1, X31
	071 Call Extensions.StripKeysWithNullValues, X0
	072 Move X8, [X19+16]
	073 Compare X8, 0
	074 JumpIfEqual {151}
	075 Move X8, [X8+96]
	076 Compare X8, 0
	077 JumpIfEqual {151}
	078 Move X0, [X8+192]
	079 Compare X0, 0
	080 JumpIfEqual {151}
	081 Move X1, X19
	082 Move X2, X20
	083 Move X3, X31
	084 Call InRoomCallbacksContainer.OnPlayerPropertiesUpdate, X0, X1, X2
	085 Move W8, [X19+28]
	086 Compare W8, 0
	087 JumpIfEqual {114}
	088 Compare X20, 0
	089 JumpIfEqual {151}
	090 Move X1, [X24]
	091 Move X0, X20
	092 Call Dictionary`2<Object, Object>.get_Count, X0
	093 Compare W0, 0
	094 JumpIfEqual {115}
	095 Move W0, W31
	096 Compare X22, 0
	097 JumpIfNotEqual {115}
	098 Compare X21, 0
	099 JumpIfNotEqual {115}
	100 Move X0, [X23]
	101 Move X21, [X19+56]
	102 Move W8, [X0+224]
	103 Compare W8, 0
	104 JumpIfNotEqual {106}
	105 Call 0x1C17DFC
	106 Move X0, X21
	107 Move X1, X20
	108 Move X2, X31
	109 Call Extensions.Merge, X0, X1
	110 Move X0, [X19+56]
	111 Move X1, X31
	112 Call Extensions.StripKeysWithNullValues, X0
	113 Move W0, 1
	114 Move W0, W31
	115 Move X20, [X31+48]
	116 Move X19, [X31+56]
	117 Move X22, [X31+32]
	118 Move X21, [X31+40]
	119 Move X24, [X31+16]
	120 Move X23, [X31+24]
	121 Move X30, [X31+64]
	122 Return X0
	123 Move X0, [X23]
	124 Move W8, [X0+224]
	125 Compare W8, 0
	126 JumpIfNotEqual {128}
	127 Call 0x1C17DFC
	128 Move X0, X22
	129 Move X1, X31
	130 Call Extensions.StripToStringKeys, X0
	131 Move X8, [X19+16]
	132 Compare X8, 0
	133 JumpIfEqual {151}
	134 Move X3, X0
	135 Move X0, [X8+96]
	136 Compare X0, 0
	137 JumpIfEqual {151}
	138 Move W1, [X19+24]
	139 Move X2, X20
	140 Move X4, X21
	141 Move X20, [X31+48]
	142 Move X19, [X31+56]
	143 Move X22, [X31+32]
	144 Move X21, [X31+40]
	145 Move X24, [X31+16]
	146 Move X23, [X31+24]
	147 Move X5, X31
	148 Move X30, [X31+64]
	149 Call LoadBalancingClient.OpSetPropertiesOfActor, X0, X1, X2, X3, X4
	150 Return X0
	151 Call 0x1C17F20

Method: System.Boolean UpdateNickNameOnJoined()

Disassembly:
	0x01E5C1CC AND W0, W0, 0x1
	0x01E5C1D0 ADD X31, X31, 0x40
	0x01E5C1D4 RET
	0x01E5C1D8 MOVZ W8, 0x1
	0x01E5C1DC STR X21, [X19 + 0x40]
	0x01E5C1E0 STRH W8, [X19 + 0x54]
	0x01E5C1E4 ADRP X8, 0x2297000
	0x01E5C1E8 LDR X8, [X8 + 0x598]
	0x01E5C1EC LDR X23, [X19 + 0x58]
	0x01E5C1F0 LDR X0, [X8]
	0x01E5C1F4 LDR W8, [X0 + 0xE0]
	0x01E5C1F8 CBNZ W8, 0x1E5C200
	0x01E5C1FC BL 0x1C16DFC
	0x01E5C200 MOV X0, X23
	0x01E5C204 MOV X1, X31
	0x01E5C208 MOV X2, X31
	0x01E5C20C BL 0x3C354F8
	0x01E5C210 TBZ X0, 0x0, 0x1E5C220
	0x01E5C214 LDR X0, [X19 + 0x58]
	0x01E5C218 CBZ X0, 0x1E5C514
	0x01E5C21C BL 0x1E5C59C
	0x01E5C220 ADRP X8, 0x22A0000
	0x01E5C224 LDR X8, [X8 + 0x920]
	0x01E5C228 LDR X0, [X8]
	0x01E5C22C BL 0x1E5C608
	0x01E5C230 STR X0, [X19 + 0x58]
	0x01E5C234 CBZ X0, 0x1E5C514
	0x01E5C238 STR X22, [X0 + 0x20]
	0x01E5C23C ADRP X8, 0x22A0000
	0x01E5C240 LDR X8, [X8 + 0x2B0]
	0x01E5C244 MOV X23, X0
	0x01E5C248 LDR X0, [X8]
	0x01E5C24C BL 0x1C16F10
	0x01E5C250 ADRP X8, 0x22A0000
	0x01E5C254 LDR X8, [X8 + 0x900]
	0x01E5C258 MOV X1, X23
	0x01E5C25C MOV X3, X31
	0x01E5C260 MOV X22, X0
	0x01E5C264 LDR X2, [X8]
	0x01E5C268 BL 0x2A6B948
	0x01E5C26C MOV X0, X21
	0x01E5C270 MOV X1, X31
	0x01E5C274 STR X22, [X19 + 0x30]
	0x01E5C278 BL 0x32277A8
	0x01E5C27C TBNZ X0, 0x0, 0x1E5C4B4
	0x01E5C280 ADRP X8, 0x22A0000
	0x01E5C284 LDR X8, [X8 + 0x8D8]
	0x01E5C288 MOVZ W1, 0x1
	0x01E5C28C LDR X0, [X8]
	0x01E5C290 BL 0x1C16D6C
	0x01E5C294 CBZ X0, 0x1E5C514
	0x01E5C298 LDR W8, [X0 + 0x18]
	0x01E5C29C MOV X1, X0
	0x01E5C2A0 CBZ W8, 0x1E5C518
	0x01E5C2A4 MOVZ W8, 0x3B
	0x01E5C2A8 STRH W8, [X1 + 0x20]
	0x01E5C2AC CBZ X21, 0x1E5C514
	0x01E5C2B0 MOV X0, X21

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x257E000
	005 Move W8, [X20+119]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x229A000
	012 Move X0, [X0+632]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+119], W8
	016 Move X8, [X19+16]
	017 Compare X8, 0
	018 JumpIfEqual {49}
	019 Move X0, [X8+24]
	020 Compare X0, 0
	021 JumpIfEqual {50}
	022 Move W8, [X19+28]
	023 Compare W8, 0
	024 JumpIfEqual {49}
	025 Move W1, 255
	026 Move X2, X31
	027 Call Hashtable.ContainsKey, X0, X1
	028 Move TEMP, X0
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfNotEqual {54}
	032 Move X8, [X19+16]
	033 Compare X8, 0
	034 JumpIfEqual {74}
	035 Move X0, [X8+24]
	036 Compare X0, 0
	037 JumpIfEqual {74}
	038 Move W1, 255
	039 Move X2, X31
	040 Call Hashtable.get_Item, X0, X1
	041 Compare X0, 0
	042 JumpIfEqual {59}
	043 Move X8, 0x229A000
	044 Move X8, [X8+632]
	045 Move X9, [X0]
	046 Move X8, [X8]
	047 NotImplemented "Instruction CMP not yet implemented."
	048 NotImplemented "Instruction CSEL not yet implemented."
	049 Move W0, W31
	050 Move X20, [X31+16]
	051 Move X19, [X31+24]
	052 Move X30, [X31+32]
	053 Return X0
	054 Move X8, 0x229A000
	055 Move X8, [X8+632]
	056 Move X8, [X8]
	057 Move X8, [X8+184]
	058 Move X1, [X8]
	059 Move X1, X31
	060 Move X0, [X19+32]
	061 Move X2, X31
	062 Call String.Equals, X0, X1
	063 Move TEMP, X0
	064 And TEMP, TEMP, 1
	065 Compare TEMP, 1
	066 JumpIfNotEqual {68}
	067 Move W0, 1
	068 Move X0, X19
	069 Move X20, [X31+16]
	070 Move X19, [X31+24]
	071 Move X30, [X31+32]
	072 Call Player.SetPlayerNameProperty, X0
	073 Return X0
	074 Call 0x1C17F20

Method: System.Boolean SetPlayerNameProperty()

Disassembly:
	0x01E5B6A4 LDR X8, [X8 + 0x830]
	0x01E5B6A8 MOV X1, X22
	0x01E5B6AC MOV X3, X31
	0x01E5B6B0 MOV X20, X0
	0x01E5B6B4 LDR X2, [X8]
	0x01E5B6B8 BL 0x295A080
	0x01E5B6BC LDR X8, [X23]
	0x01E5B6C0 LDR X8, [X8 + 0xB8]
	0x01E5B6C4 STR X20, [X8 + 0x8]
	0x01E5B6C8 ADRP X8, 0x22A1000
	0x01E5B6CC LDR X8, [X8 + 0x820]
	0x01E5B6D0 MOV X0, X21
	0x01E5B6D4 MOV X1, X20
	0x01E5B6D8 LDR X2, [X8]
	0x01E5B6DC BL 0x301DD30
	0x01E5B6E0 LDR X0, [X19 + 0x10]
	0x01E5B6E4 CBZ X0, 0x1E5B804
	0x01E5B6E8 ADRP X20, 0x22A1000
	0x01E5B6EC LDR X20, [X20 + 0x828]
	0x01E5B6F0 MOV W1, W31
	0x01E5B6F4 LDR X2, [X20]
	0x01E5B6F8 BL 0x301BCCC
	0x01E5B6FC CBZ X0, 0x1E5B804
	0x01E5B700 LDR V0, [X0 + 0x28]
	0x01E5B704 LDR V1, [X19 + 0x4C]
	0x01E5B708 MOVZ W8, 0x7F800000
	0x01E5B70C LDR X0, [X19 + 0x10]
	0x01E5B710 SCVTF S0, S0
	0x01E5B714 FMOV S2, W8
	0x01E5B718 FMUL S0, S1, S0
	0x01E5B71C FCVTZS W8, S0
	0x01E5B720 FCMP S0, S2
	0x01E5B724 MOVZ W9, 0x80000000
	0x01E5B728 CSEL W22, W9, W8, EQ
	0x01E5B72C CBZ X0, 0x1E5B804
	0x01E5B730 LDR X2, [X20]
	0x01E5B734 MOV W1, W31
	0x01E5B738 BL 0x301BCCC
	0x01E5B73C LDR X9, [X19 + 0x10]
	0x01E5B740 CBZ X9, 0x1E5B804
	0x01E5B744 ADRP X8, 0x22A0000
	0x01E5B748 LDR X8, [X8 + 0xB08]
	0x01E5B74C MOV X21, X0
	0x01E5B750 MOV X0, X9
	0x01E5B754 LDR X1, [X8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x257F000
	005 Move W8, [X20+120]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x22A1000
	012 Move X0, [X0+3488]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+120], W8
	016 Move X8, [X19+16]
	017 Compare X8, 0
	018 JumpIfEqual {22}
	019 Move W8, [X8+104]
	020 Compare W8, 0
	021 JumpIfEqual {27}
	022 Move X20, [X31+16]
	023 Move X19, [X31+24]
	024 Move W0, W31
	025 Move X30, [X31+32]
	026 Return X0
	027 Move X8, 0x22A1000
	028 Move X8, [X8+3488]
	029 Move X0, [X8]
	030 Call 0x1C17F10
	031 Move X1, X31
	032 Move X20, X0
	033 Call Hashtable..ctor, X0
	034 Compare X20, 0
	035 JumpIfEqual {57}
	036 Move X2, [X19+32]
	037 Move W1, 255
	038 Move X0, X20
	039 Move X3, X31
	040 Call Hashtable.set_Item, X0, X1, X2
	041 Move X8, [X19+16]
	042 Compare X8, 0
	043 JumpIfEqual {57}
	044 Move X0, [X8+96]
	045 Compare X0, 0
	046 JumpIfEqual {57}
	047 Move W1, [X19+24]
	048 Move X2, X20
	049 Move X20, [X31+16]
	050 Move X19, [X31+24]
	051 Move X3, X31
	052 Move X4, X31
	053 Move X5, X31
	054 Move X30, [X31+32]
	055 Call LoadBalancingClient.OpSetPropertiesOfActor, X0, X1, X2, X3, X4
	056 Return X0
	057 Call 0x1C17F20

