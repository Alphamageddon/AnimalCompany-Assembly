Type: Fusion.Photon.Realtime.RegionHandler

Method: System.Collections.Generic.List`1<Fusion.Photon.Realtime.Region> get_EnabledRegions()

Disassembly:
	0x01E5C594 MOV X1, X31
	0x01E5C598 B 0x33BDD8C

ISIL:
	001 Move X0, [X0+16]
	002 Return X0

Method: System.Void set_EnabledRegions(System.Collections.Generic.List`1<Fusion.Photon.Realtime.Region> value)

Disassembly:
	0x01E5C59C STP X30, X21, [X31 - 0x20]!
	0x01E5C5A0 STP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X0+16], X1
	002 Return 

Method: Fusion.Photon.Realtime.Region get_BestRegion()

Disassembly:
	0x01E5C5A4 ADRP X21, 0x257D000
	0x01E5C5A8 ADRP X20, 0x2297000
	0x01E5C5AC LDRB W8, [X21 + 0x8F]
	0x01E5C5B0 LDR X20, [X20 + 0x598]
	0x01E5C5B4 MOV X19, X0
	0x01E5C5B8 TBNZ X8, 0x0, 0x1E5C5D0
	0x01E5C5BC ADRP X0, 0x2297000
	0x01E5C5C0 LDR X0, [X0 + 0x598]
	0x01E5C5C4 BL 0x1C16CF4
	0x01E5C5C8 MOVZ W8, 0x1
	0x01E5C5CC STRB W8, [X21 + 0x8F]
	0x01E5C5D0 MOV X0, X19
	0x01E5C5D4 MOV X1, X31
	0x01E5C5D8 BL 0x3C32ECC
	0x01E5C5DC LDR X8, [X20]
	0x01E5C5E0 MOV X19, X0
	0x01E5C5E4 LDR W9, [X8 + 0xE0]
	0x01E5C5E8 CBNZ W9, 0x1E5C5F4
	0x01E5C5EC MOV X0, X8
	0x01E5C5F0 BL 0x1C16DFC
	0x01E5C5F4 MOV X0, X19
	0x01E5C5F8 LDP X20, X19, [X31 + 0x10]
	0x01E5C5FC MOV X1, X31
	0x01E5C600 LDP X30, X21, [X31], #0x20
	0x01E5C604 B 0x3C394A8
	0x01E5C608 STP X30, X23, [X31 - 0x30]!
	0x01E5C60C STP X22, X21, [X31 + 0x10]
	0x01E5C610 STP X20, X19, [X31 + 0x20]
	0x01E5C614 ADRP X22, 0x257D000
	0x01E5C618 ADRP X23, 0x22A0000
	0x01E5C61C ADRP X20, 0x2297000
	0x01E5C620 ADRP X21, 0x2297000
	0x01E5C624 LDRB W8, [X22 + 0x8E]
	0x01E5C628 LDR X23, [X23 + 0x928]
	0x01E5C62C LDR X20, [X20 + 0xA58]
	0x01E5C630 LDR X21, [X21 + 0x598]
	0x01E5C634 MOV X19, X0
	0x01E5C638 TBNZ X8, 0x0, 0x1E5C674
	0x01E5C63C ADRP X0, 0x22A0000
	0x01E5C640 LDR X0, [X0 + 0x930]
	0x01E5C644 BL 0x1C16CF4
	0x01E5C648 ADRP X0, 0x2297000
	0x01E5C64C LDR X0, [X0 + 0xA58]
	0x01E5C650 BL 0x1C16CF4
	0x01E5C654 ADRP X0, 0x2297000
	0x01E5C658 LDR X0, [X0 + 0x598]
	0x01E5C65C BL 0x1C16CF4
	0x01E5C660 ADRP X0, 0x22A0000
	0x01E5C664 LDR X0, [X0 + 0x928]
	0x01E5C668 BL 0x1C16CF4
	0x01E5C66C MOVZ W8, 0x1
	0x01E5C670 STRB W8, [X22 + 0x8E]
	0x01E5C674 LDR X8, [X23]
	0x01E5C678 LDR X0, [X20]
	0x01E5C67C CMP X19, 0x0
	0x01E5C680 CSEL X20, X8, X19, EQ
	0x01E5C684 BL 0x1C16F10
	0x01E5C688 MOV X1, X20
	0x01E5C68C MOV X2, X31
	0x01E5C690 MOV X19, X0
	0x01E5C694 BL 0x3C35934
	0x01E5C698 LDR X0, [X21]
	0x01E5C69C LDR W8, [X0 + 0xE0]
	0x01E5C6A0 CBNZ W8, 0x1E5C6A8
	0x01E5C6A4 BL 0x1C16DFC
	0x01E5C6A8 MOV X0, X19
	0x01E5C6AC MOV X1, X31
	0x01E5C6B0 BL 0x3C39674
	0x01E5C6B4 CBZ X19, 0x1E5C6D8
	0x01E5C6B8 ADRP X8, 0x22A0000
	0x01E5C6BC LDR X8, [X8 + 0x930]
	0x01E5C6C0 MOV X0, X19
	0x01E5C6C4 LDP X20, X19, [X31 + 0x20]
	0x01E5C6C8 LDP X22, X21, [X31 + 0x10]
	0x01E5C6CC LDR X1, [X8]
	0x01E5C6D0 LDP X30, X23, [X31], #0x30
	0x01E5C6D4 B 0x21E51FC
	0x01E5C6D8 BL 0x1C16F20
	0x01E5C6DC SUB X31, X31, 0xA0
	0x01E5C6E0 STR X30, [X31 + 0x40]
	0x01E5C6E4 STP X28, X27, [X31 + 0x50]
	0x01E5C6E8 STP X26, X25, [X31 + 0x60]
	0x01E5C6EC STP X24, X23, [X31 + 0x70]
	0x01E5C6F0 STP X22, X21, [X31 + 0x80]
	0x01E5C6F4 STP X20, X19, [X31 + 0x90]
	0x01E5C6F8 ADRP X19, 0x257D000
	0x01E5C6FC LDRB W8, [X19 + 0x82]
	0x01E5C700 MOV X20, X0
	0x01E5C704 TBNZ X8, 0x0, 0x1E5C788
	0x01E5C708 ADRP X0, 0x22A0000
	0x01E5C70C LDR X0, [X0 + 0x8D0]
	0x01E5C710 BL 0x1C16CF4
	0x01E5C714 ADRP X0, 0x229F000
	0x01E5C718 LDR X0, [X0 + 0xAE0]
	0x01E5C71C BL 0x1C16CF4
	0x01E5C720 ADRP X0, 0x229F000
	0x01E5C724 LDR X0, [X0 + 0xAE8]
	0x01E5C728 BL 0x1C16CF4
	0x01E5C72C ADRP X0, 0x229F000
	0x01E5C730 LDR X0, [X0 + 0xAF0]
	0x01E5C734 BL 0x1C16CF4
	0x01E5C738 ADRP X0, 0x22A0000
	0x01E5C73C LDR X0, [X0 + 0x8E0]
	0x01E5C740 BL 0x1C16CF4
	0x01E5C744 ADRP X0, 0x22A0000
	0x01E5C748 LDR X0, [X0 + 0x8E8]
	0x01E5C74C BL 0x1C16CF4
	0x01E5C750 ADRP X0, 0x229F000
	0x01E5C754 LDR X0, [X0 + 0xB08]
	0x01E5C758 BL 0x1C16CF4
	0x01E5C75C ADRP X0, 0x22A0000
	0x01E5C760 LDR X0, [X0 + 0x8F8]
	0x01E5C764 BL 0x1C16CF4
	0x01E5C768 ADRP X0, 0x22A0000
	0x01E5C76C LDR X0, [X0 + 0x938]
	0x01E5C770 BL 0x1C16CF4
	0x01E5C774 ADRP X0, 0x22A0000
	0x01E5C778 LDR X0, [X0 + 0x840]
	0x01E5C77C BL 0x1C16CF4
	0x01E5C780 MOVZ W8, 0x1
	0x01E5C784 STRB W8, [X19 + 0x82]
	0x01E5C788 STP X31, X31, [X31 + 0x20]
	0x01E5C78C STR X31, [X31 + 0x30]
	0x01E5C790 LDR X8, [X20 + 0x10]
	0x01E5C794 CBZ X8, 0x1E5C8E8
	0x01E5C798 LDR W8, [X8 + 0x18]
	0x01E5C79C CBZ W8, 0x1E5C8E8
	0x01E5C7A0 LDR X19, [X20 + 0x28]
	0x01E5C7A4 STRB W31, [X31 + 0x4C]
	0x01E5C7A8 ADD X1, X31, 0x4C
	0x01E5C7AC MOV X0, X19
	0x01E5C7B0 MOV X2, X31
	0x01E5C7B4 BL 0x33DE64C
	0x01E5C7B8 LDR X8, [X20 + 0x28]
	0x01E5C7BC CBZ X8, 0x1E5C960
	0x01E5C7C0 LDP W2, W9, [X8 + 0x18]
	0x01E5C7C4 ADD W9, W9, 0x1
	0x01E5C7C8 CMP W2, 0x1
	0x01E5C7CC STP W31, W9, [X8 + 0x18]
	0x01E5C7D0 B.LT 0x1E5C7E4
	0x01E5C7D4 LDR X0, [X8 + 0x10]
	0x01E5C7D8 MOV W1, W31
	0x01E5C7DC MOV X3, X31
	0x01E5C7E0 BL 0x339FA34
	0x01E5C7E4 LDR X0, [X20 + 0x10]
	0x01E5C7E8 CBZ X0, 0x1E5C964
	0x01E5C7EC ADRP X8, 0x229F000
	0x01E5C7F0 LDR X8, [X8 + 0xB08]
	0x01E5C7F4 LDR X1, [X8]
	0x01E5C7F8 ADD X8, X31, 0x8
	0x01E5C7FC BL 0x301CB58
	0x01E5C800 LDUR V0, [X31 + 0x8]
	0x01E5C804 LDR X8, [X31 + 0x18]
	0x01E5C808 ADRP X24, 0x229F000
	0x01E5C80C ADRP X25, 0x22A0000
	0x01E5C810 ADRP X26, 0x22A0000
	0x01E5C814 ADRP X27, 0x22A0000
	0x01E5C818 LDR X24, [X24 + 0xAE8]
	0x01E5C81C LDR X25, [X25 + 0x8D0]
	0x01E5C820 LDR X26, [X26 + 0x938]
	0x01E5C824 LDR X27, [X27 + 0x840]
	0x01E5C828 STR V0, [X31 + 0x2]
	0x01E5C82C STR X8, [X31 + 0x30]
	0x01E5C830 ADRP X28, 0x22A0000
	0x01E5C834 LDR X28, [X28 + 0x8E0]
	0x01E5C838 LDR X1, [X24]
	0x01E5C83C ADD X0, X31, 0x20
	0x01E5C840 BL 0x2BC4350
	0x01E5C844 TBZ X0, 0x0, 0x1E5C8F0
	0x01E5C848 LDR X22, [X31 + 0x30]
	0x01E5C84C LDR X0, [X25]
	0x01E5C850 BL 0x1C16F10
	0x01E5C854 LDR X2, [X26]
	0x01E5C858 MOV X23, X0
	0x01E5C85C MOV X1, X20
	0x01E5C860 MOV X3, X31
	0x01E5C864 BL 0x2A6B948
	0x01E5C868 LDR X0, [X27]
	0x01E5C86C BL 0x1C16F10
	0x01E5C870 MOV X21, X0
	0x01E5C874 MOV X1, X22
	0x01E5C878 MOV X2, X23
	0x01E5C87C BL 0x1E5CA4C
	0x01E5C880 LDR X0, [X20 + 0x28]
	0x01E5C884 CBZ X0, 0x1E5C950
	0x01E5C888 LDR W10, [X0 + 0x1C]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+64], X30
	003 Move [X31+72], X23
	004 Move [X31+80], X22
	005 Move [X31+88], X21
	006 Move [X31+96], X20
	007 Move [X31+104], X19
	008 Move X20, 0x257E000
	009 Move W8, [X20+123]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {44}
	015 Move X0, 0x22A1000
	016 Move X0, [X0+2072]
	017 Call 0x1C17CF4
	018 Move X0, 0x22A0000
	019 Move X0, [X0+2784]
	020 Call 0x1C17CF4
	021 Move X0, 0x22A0000
	022 Move X0, [X0+2792]
	023 Call 0x1C17CF4
	024 Move X0, 0x22A0000
	025 Move X0, [X0+2800]
	026 Call 0x1C17CF4
	027 Move X0, 0x22A0000
	028 Move X0, [X0+2824]
	029 Call 0x1C17CF4
	030 Move X0, 0x22A1000
	031 Move X0, [X0+2080]
	032 Call 0x1C17CF4
	033 Move X0, 0x22A1000
	034 Move X0, [X0+2088]
	035 Call 0x1C17CF4
	036 Move X0, 0x22A1000
	037 Move X0, [X0+2096]
	038 Call 0x1C17CF4
	039 Move X0, 0x22A1000
	040 Move X0, [X0+2104]
	041 Call 0x1C17CF4
	042 Move W8, 1
	043 Move [X20+123], W8
	044 Move [X31+32], X31
	045 Move [X31+40], X31
	046 Move [X31+48], X31
	047 Move X21, [X19+16]
	048 Compare X21, 0
	049 JumpIfEqual {159}
	050 Move X20, [X19+32]
	051 Compare X20, 0
	052 JumpIfNotEqual {166}
	053 Move X23, 0x22A1000
	054 Move X23, [X23+2104]
	055 Move X0, [X23]
	056 Move W8, [X0+224]
	057 Compare W8, 0
	058 JumpIfNotEqual {61}
	059 Call 0x1C17DFC
	060 Move X0, [X23]
	061 Move X8, [X0+184]
	062 Move X20, [X8+8]
	063 Compare X20, 0
	064 JumpIfNotEqual {86}
	065 Move W8, [X0+224]
	066 Compare W8, 0
	067 JumpIfNotEqual {70}
	068 Call 0x1C17DFC
	069 Move X0, [X23]
	070 Move X9, 0x22A1000
	071 Move X8, [X0+184]
	072 Move X9, [X9+2072]
	073 Move X22, [X8]
	074 Move X0, [X9]
	075 Call 0x1C17F10
	076 Move X8, 0x22A1000
	077 Move X8, [X8+2096]
	078 Move X1, X22
	079 Move X3, X31
	080 Move X20, X0
	081 Move X2, [X8]
	082 Call Comparison`1<Object>..ctor, X0, X1, X2
	083 Move X8, [X23]
	084 Move X8, [X8+184]
	085 Move [X8+8], X20
	086 Move X8, 0x22A1000
	087 Move X8, [X8+2080]
	088 Move X0, X21
	089 Move X1, X20
	090 Move X2, [X8]
	091 Call List`1<Object>.Sort, X0, X1
	092 Move X0, [X19+16]
	093 Compare X0, 0
	094 JumpIfEqual {178}
	095 Move X20, 0x22A1000
	096 Move X20, [X20+2088]
	097 Move W1, W31
	098 Move X2, [X20]
	099 Call List`1<Object>.get_Item, X0, X1
	100 Compare X0, 0
	101 JumpIfEqual {178}
	102 Move V0, [X0+40]
	103 Move V1, [X19+76]
	104 Move W8, 0x7F800000
	105 Move X0, [X19+16]
	106 NotImplemented "Instruction SCVTF not yet implemented."
	107 Move S2, W8
	108 Multiply S0, S1, S0
	109 NotImplemented "Instruction FCVTZS not yet implemented."
	110 NotImplemented "Instruction FCMP not yet implemented."
	111 Move W9, 0x80000000
	112 NotImplemented "Instruction CSEL not yet implemented."
	113 Compare X0, 0
	114 JumpIfEqual {178}
	115 Move X2, [X20]
	116 Move W1, W31
	117 Call List`1<Object>.get_Item, X0, X1
	118 Move X9, [X19+16]
	119 Compare X9, 0
	120 JumpIfEqual {178}
	121 Move X8, 0x22A0000
	122 Move X8, [X8+2824]
	123 Move X21, X0
	124 Move X0, X9
	125 Move X1, [X8]
	126 Add X8, X31, 8
	127 Call List`1<Object>.GetEnumerator, X0
	128 NotImplemented "Instruction LDUR not yet implemented."
	129 Move X8, [X31+24]
	130 Move X23, 0x22A0000
	131 Move [X31+2], V0
	132 Move [X31+48], X8
	133 Move X23, [X23+2792]
	134 Move X20, X21
	135 Move X1, [X23]
	136 Add X0, X31, 32
	137 Call Enumerator<Object>.MoveNext, X0
	138 Move TEMP, X0
	139 And TEMP, TEMP, 1
	140 Compare TEMP, 1
	141 JumpIfNotEqual {160}
	142 Move X21, [X31+48]
	143 Compare X21, 0
	144 JumpIfEqual {175}
	145 Move W8, [X21+40]
	146 NotImplemented "Instruction CMP not yet implemented."
	147 Compare X20, 0
	148 JumpIfEqual {176}
	149 Move X0, [X21+16]
	150 Compare X0, 0
	151 JumpIfEqual {177}
	152 Move X1, [X20+16]
	153 Move X2, X31
	154 Call String.CompareTo, X0, X1
	155 Move TEMP, X0
	156 And TEMP, TEMP, -2147483648
	157 Compare TEMP, -2147483648
	158 JumpIfNotEqual {135}
	159 Move X20, X31
	160 Move X8, 0x22A0000
	161 Move X8, [X8+2784]
	162 Add X0, X31, 32
	163 Move X1, [X8]
	164 Call Enumerator<Object>.Dispose, X0
	165 Move [X19+32], X20
	166 Move X0, X20
	167 Move X20, [X31+96]
	168 Move X19, [X31+104]
	169 Move X22, [X31+80]
	170 Move X21, [X31+88]
	171 Move X30, [X31+64]
	172 Move X23, [X31+72]
	173 Add X31, X31, 112
	174 Return X0
	175 Call 0x1C17F20
	176 Call 0x1C17F20
	177 Call 0x1C17F20
	178 Call 0x1C17F20
	179 Move X21, X0
	180 NotImplemented "Instruction CMP not yet implemented."
	181 Move X0, X21
	182 Call 0x3EB2AD0
	183 Move X22, [X0]
	184 Call 0x3EB2AE0
	185 Move X8, 0x22A0000
	186 Move X8, [X8+2784]
	187 Add X0, X31, 32
	188 Move X1, [X8]
	189 Call Enumerator<Object>.Dispose, X0
	190 Compare X22, 0
	191 JumpIfEqual {165}
	192 Move X0, X22
	193 Call 0x1C17F18
	194 Move X22, X31
	195 Move X21, X0
	196 Move X8, 0x22A0000
	197 Move X8, [X8+2784]
	198 Move X1, [X8]
	199 Add X0, X31, 32
	200 Call Enumerator<Object>.Dispose, X0
	201 Compare X22, 0
	202 JumpIfNotEqual {205}
	203 Move X0, X21
	204 Call 0x1D2D690
	205 Move X0, X22
	206 Call 0x1C17F18
	207 Call 0x1991590

Method: System.String get_SummaryToCache()

Disassembly:
	0x01E5C88C LDR X8, [X0 + 0x10]
	0x01E5C890 LDR X9, [X28]
	0x01E5C894 ADD W10, W10, 0x1
	0x01E5C898 STR W10, [X0 + 0x1C]
	0x01E5C89C CBZ X8, 0x1E5C954
	0x01E5C8A0 LDRSW X10, [X0 + 0x18]
	0x01E5C8A4 LDR W11, [X8 + 0x18]
	0x01E5C8A8 CMP W10, W11
	0x01E5C8AC B.CS 0x1E5C8C4
	0x01E5C8B0 ADD W9, W10, 0x1
	0x01E5C8B4 ADD X8, X8, X10, 0x3, LSL
	0x01E5C8B8 STR W9, [X0 + 0x18]
	0x01E5C8BC STR X21, [X8 + 0x20]
	0x01E5C8C0 B 0x1E5C8D8
	0x01E5C8C4 LDR X8, [X9 + 0x20]
	0x01E5C8C8 LDR X8, [X8 + 0xC0]
	0x01E5C8CC LDR X2, [X8 + 0x70]
	0x01E5C8D0 MOV X1, X21
	0x01E5C8D4 BL 0x301BF90
	0x01E5C8D8 CBZ X21, 0x1E5C94C
	0x01E5C8DC MOV X0, X21
	0x01E5C8E0 BL 0x1E5CAE0
	0x01E5C8E4 B 0x1E5C838
	0x01E5C8E8 MOV W0, W31
	0x01E5C8EC B 0x1E5C92C
	0x01E5C8F0 MOV X21, X31
	0x01E5C8F4 ADRP X8, 0x229F000
	0x01E5C8F8 LDR X8, [X8 + 0xAE0]
	0x01E5C8FC LDR X1, [X8]
	0x01E5C900 ADD X0, X31, 0x20
	0x01E5C904 BL 0x2BC434C
	0x01E5C908 CBNZ X21, 0x1E5C968
	0x01E5C90C MOV X20, X31
	0x01E5C910 LDRB W8, [X31 + 0x4C]
	0x01E5C914 CBZ W8, 0x1E5C924
	0x01E5C918 MOV X0, X19
	0x01E5C91C MOV X1, X31
	0x01E5C920 BL 0x33E14E4
	0x01E5C924 CBNZ X20, 0x1E5C958
	0x01E5C928 MOVZ W0, 0x1
	0x01E5C92C LDP X20, X19, [X31 + 0x90]
	0x01E5C930 LDP X22, X21, [X31 + 0x80]
	0x01E5C934 LDP X24, X23, [X31 + 0x70]
	0x01E5C938 LDP X26, X25, [X31 + 0x60]
	0x01E5C93C LDP X28, X27, [X31 + 0x50]
	0x01E5C940 LDR X30, [X31 + 0x40]
	0x01E5C944 ADD X31, X31, 0xA0
	0x01E5C948 RET
	0x01E5C94C BL 0x1C16F20
	0x01E5C950 BL 0x1C16F20
	0x01E5C954 BL 0x1C16F20
	0x01E5C958 MOV X0, X20
	0x01E5C95C BL 0x1C16F18
	0x01E5C960 BL 0x1C16F20
	0x01E5C964 BL 0x1C16F20
	0x01E5C968 MOV X0, X21
	0x01E5C96C BL 0x1C16F18
	0x01E5C970 B 0x1E5C980
	0x01E5C974 B 0x1E5C980
	0x01E5C978 B 0x1E5C980
	0x01E5C97C B 0x1E5C980
	0x01E5C980 MOV X20, X1
	0x01E5C984 MOV X22, X0
	0x01E5C988 B 0x1E5C9E4
	0x01E5C98C B 0x1E5C9A4
	0x01E5C990 B 0x1E5C9A4
	0x01E5C994 B 0x1E5C9A4
	0x01E5C998 B 0x1E5C9A4
	0x01E5C99C B 0x1E5C9A4
	0x01E5C9A0 B 0x1E5C9A4
	0x01E5C9A4 MOV X22, X0
	0x01E5C9A8 CMP W1, 0x1
	0x01E5C9AC B.NE 0x1E5C9C4
	0x01E5C9B0 MOV X0, X22
	0x01E5C9B4 BL 0x3EB1AD0
	0x01E5C9B8 LDR X21, [X0]
	0x01E5C9BC BL 0x3EB1AE0
	0x01E5C9C0 B 0x1E5C8F4
	0x01E5C9C4 MOV X20, X1
	0x01E5C9C8 MOV X21, X31
	0x01E5C9CC ADRP X8, 0x229F000
	0x01E5C9D0 LDR X8, [X8 + 0xAE0]
	0x01E5C9D4 LDR X1, [X8]
	0x01E5C9D8 ADD X0, X31, 0x20
	0x01E5C9DC BL 0x2BC434C
	0x01E5C9E0 CBNZ X21, 0x1E5CA08
	0x01E5C9E4 CMP W20, 0x1
	0x01E5C9E8 B.NE 0x1E5CA00

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x257E000
	007 Move W8, [X20+124]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {24}
	013 Move X0, 0x22A1000
	014 Move X0, [X0+2112]
	015 Call 0x1C17CF4
	016 Move X0, 0x2298000
	017 Move X0, [X0+2760]
	018 Call 0x1C17CF4
	019 Move X0, 0x22A1000
	020 Move X0, [X0+2120]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X20+124], W8
	024 Move X0, X19
	025 Call RegionHandler.get_BestRegion, X0
	026 Compare X0, 0
	027 JumpIfEqual {88}
	028 Move X0, X19
	029 Call RegionHandler.get_BestRegion, X0
	030 Compare X0, 0
	031 JumpIfEqual {95}
	032 Move X21, 0x22A1000
	033 Move X21, [X21+2112]
	034 Move X8, X0
	035 Move W20, [X8+40]
	036 Move X0, [X21]
	037 Move W9, [X0+224]
	038 Compare W9, 0
	039 JumpIfNotEqual {42}
	040 Call 0x1C17DFC
	041 Move X0, [X21]
	042 Move X8, [X0+184]
	043 Move W8, [X8+4]
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Move X8, 0x2298000
	046 Move X8, [X8+2760]
	047 Move W1, 5
	048 Move X0, [X8]
	049 Call 0x1C17D6C
	050 Move X20, X0
	051 Move X0, X19
	052 Call RegionHandler.get_BestRegion, X0
	053 Compare X0, 0
	054 JumpIfEqual {95}
	055 Compare X20, 0
	056 JumpIfEqual {95}
	057 Move W8, [X20+24]
	058 Compare W8, 0
	059 JumpIfEqual {96}
	060 Move X9, [X0+16]
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Move [X20+32], X9
	063 Move X21, 0x22A1000
	064 Move X21, [X21+2120]
	065 Move X0, X19
	066 Move X8, [X21]
	067 Move [X20+40], X8
	068 Call RegionHandler.get_BestRegion, X0
	069 Compare X0, 0
	070 JumpIfEqual {95}
	071 Move W8, [X0+40]
	072 Add X0, X31, 12
	073 Move X1, X31
	074 Move [X31+12], W8
	075 Call Int32.ToString, X0
	076 Move W8, [X20+24]
	077 NotImplemented "Instruction CMP not yet implemented."
	078 NotImplemented "Instruction CMP not yet implemented."
	079 Move [X20+48], X0
	080 Move X9, [X21]
	081 NotImplemented "Instruction CMP not yet implemented."
	082 Move [X20+56], X9
	083 Move X8, [X19+24]
	084 Move X0, X20
	085 Move X1, X31
	086 Move [X20+64], X8
	087 Call String.Concat, X0
	088 Move X0, [X19+24]
	089 Move X20, [X31+32]
	090 Move X19, [X31+40]
	091 Move X30, [X31+16]
	092 Move X21, [X31+24]
	093 Add X31, X31, 48
	094 Return X0
	095 Call 0x1C17F20
	096 Call 0x1C17F28

Method: System.String GetResults()

Disassembly:
	0x01E5C9EC MOV X0, X22
	0x01E5C9F0 BL 0x3EB1AD0
	0x01E5C9F4 LDR X20, [X0]
	0x01E5C9F8 BL 0x3EB1AE0
	0x01E5C9FC B 0x1E5C910
	0x01E5CA00 MOV X20, X31
	0x01E5CA04 B 0x1E5CA20
	0x01E5CA08 MOV X0, X21
	0x01E5CA0C BL 0x1C16F18
	0x01E5CA10 MOV X20, X1
	0x01E5CA14 MOV X22, X0
	0x01E5CA18 B 0x1E5C9CC
	0x01E5CA1C MOV X22, X0
	0x01E5CA20 LDRB W8, [X31 + 0x4C]
	0x01E5CA24 CBZ W8, 0x1E5CA34
	0x01E5CA28 MOV X0, X19
	0x01E5CA2C MOV X1, X31
	0x01E5CA30 BL 0x33E14E4
	0x01E5CA34 CBNZ X20, 0x1E5CA40
	0x01E5CA38 MOV X0, X22
	0x01E5CA3C BL 0x1D2C690
	0x01E5CA40 MOV X0, X20
	0x01E5CA44 BL 0x1C16F18
	0x01E5CA48 BL 0x1990590
	0x01E5CA4C STP X30, X23, [X31 - 0x30]!
	0x01E5CA50 STP X22, X21, [X31 + 0x10]
	0x01E5CA54 STP X20, X19, [X31 + 0x20]
	0x01E5CA58 ADRP X23, 0x257D000
	0x01E5CA5C ADRP X22, 0x22A0000
	0x01E5CA60 LDRB W8, [X23 + 0x85]
	0x01E5CA64 LDR X22, [X22 + 0x840]
	0x01E5CA68 MOV X19, X2
	0x01E5CA6C MOV X21, X1
	0x01E5CA70 MOV X20, X0
	0x01E5CA74 TBNZ X8, 0x0, 0x1E5CA8C
	0x01E5CA78 ADRP X0, 0x22A0000
	0x01E5CA7C LDR X0, [X0 + 0x840]
	0x01E5CA80 BL 0x1C16CF4
	0x01E5CA84 MOVZ W8, 0x1
	0x01E5CA88 STRB W8, [X23 + 0x85]
	0x01E5CA8C MOV X0, X20
	0x01E5CA90 MOV X1, X31
	0x01E5CA94 STR W31, [X20 + 0x10]
	0x01E5CA98 BL 0x33BDD8C
	0x01E5CA9C STR X21, [X20 + 0x30]
	0x01E5CAA0 LDR X0, [X22]
	0x01E5CAA4 LDR W8, [X0 + 0xE0]
	0x01E5CAA8 CBNZ W8, 0x1E5CAB0
	0x01E5CAAC BL 0x1C16DFC
	0x01E5CAB0 CBZ X21, 0x1E5CADC
	0x01E5CAB4 LDR X8, [X22]
	0x01E5CAB8 LDR X8, [X8 + 0xB8]
	0x01E5CABC LDR W8, [X8 + 0x8]
	0x01E5CAC0 STR W8, [X21 + 0x28]
	0x01E5CAC4 STRB W31, [X20 + 0x14]
	0x01E5CAC8 STR X19, [X20 + 0x18]
	0x01E5CACC LDP X20, X19, [X31 + 0x20]
	0x01E5CAD0 LDP X22, X21, [X31 + 0x10]
	0x01E5CAD4 LDP X30, X23, [X31], #0x30
	0x01E5CAD8 RET
	0x01E5CADC BL 0x1C16F20
	0x01E5CAE0 STP X30, X23, [X31 - 0x30]!
	0x01E5CAE4 STP X22, X21, [X31 + 0x10]
	0x01E5CAE8 STP X20, X19, [X31 + 0x20]
	0x01E5CAEC ADRP X20, 0x257D000
	0x01E5CAF0 LDRB W8, [X20 + 0x87]
	0x01E5CAF4 MOV X19, X0
	0x01E5CAF8 TBNZ X8, 0x0, 0x1E5CB7C
	0x01E5CAFC ADRP X0, 0x22A0000
	0x01E5CB00 LDR X0, [X0 + 0x940]
	0x01E5CB04 BL 0x1C16CF4
	0x01E5CB08 ADRP X0, 0x2298000
	0x01E5CB0C LDR X0, [X0 + 0xE20]
	0x01E5CB10 BL 0x1C16CF4
	0x01E5CB14 ADRP X0, 0x2298000
	0x01E5CB18 LDR X0, [X0 + 0xE30]
	0x01E5CB1C BL 0x1C16CF4
	0x01E5CB20 ADRP X0, 0x22A0000
	0x01E5CB24 LDR X0, [X0 + 0x948]
	0x01E5CB28 BL 0x1C16CF4
	0x01E5CB2C ADRP X0, 0x22A0000
	0x01E5CB30 LDR X0, [X0 + 0x950]
	0x01E5CB34 BL 0x1C16CF4
	0x01E5CB38 ADRP X0, 0x22A0000
	0x01E5CB3C LDR X0, [X0 + 0x840]
	0x01E5CB40 BL 0x1C16CF4
	0x01E5CB44 ADRP X0, 0x229F000
	0x01E5CB48 LDR X0, [X0 + 0xE60]
	0x01E5CB4C BL 0x1C16CF4
	0x01E5CB50 ADRP X0, 0x22A0000
	0x01E5CB54 LDR X0, [X0 + 0x958]
	0x01E5CB58 BL 0x1C16CF4
	0x01E5CB5C ADRP X0, 0x22A0000
	0x01E5CB60 LDR X0, [X0 + 0x960]
	0x01E5CB64 BL 0x1C16CF4
	0x01E5CB68 ADRP X0, 0x2297000
	0x01E5CB6C LDR X0, [X0 + 0xDE0]
	0x01E5CB70 BL 0x1C16CF4
	0x01E5CB74 MOVZ W8, 0x1
	0x01E5CB78 STRB W8, [X20 + 0x87]
	0x01E5CB7C LDR X8, [X19 + 0x30]
	0x01E5CB80 CBZ X8, 0x1E5CD60
	0x01E5CB84 LDR X20, [X8 + 0x20]
	0x01E5CB88 CBZ X20, 0x1E5CD60
	0x01E5CB8C ADRP X21, 0x22A0000
	0x01E5CB90 LDR X21, [X21 + 0x840]
	0x01E5CB94 MOVZ W1, 0x3A
	0x01E5CB98 MOV X0, X20
	0x01E5CB9C MOV X2, X31
	0x01E5CBA0 BL 0x322C668
	0x01E5CBA4 CMP W0, 0x2
	0x01E5CBA8 B.LT 0x1E5CBC4
	0x01E5CBAC MOV W2, W0
	0x01E5CBB0 MOV X0, X20
	0x01E5CBB4 MOV W1, W31
	0x01E5CBB8 MOV X3, X31
	0x01E5CBBC BL 0x3228DE4
	0x01E5CBC0 MOV X20, X0
	0x01E5CBC4 LDR X0, [X21]
	0x01E5CBC8 ADRP X23, 0x2298000
	0x01E5CBCC ADRP X22, 0x2298000
	0x01E5CBD0 LDR W8, [X0 + 0xE0]
	0x01E5CBD4 LDR X23, [X23 + 0xE30]
	0x01E5CBD8 LDR X22, [X22 + 0xE20]
	0x01E5CBDC CBNZ W8, 0x1E5CBE4
	0x01E5CBE0 BL 0x1C16DFC
	0x01E5CBE4 MOV X0, X20
	0x01E5CBE8 BL 0x1E5D698
	0x01E5CBEC STR X0, [X19 + 0x38]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+40], X23
	004 Move [X31+48], X22
	005 Move [X31+56], X21
	006 Move [X31+64], X20
	007 Move [X31+72], X19
	008 Move X21, 0x257E000
	009 Move X20, 0x2298000
	010 Move W8, [X21+125]
	011 Move X20, [X20+2288]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {40}
	017 Move X0, 0x22A1000
	018 Move X0, [X0+2128]
	019 Call 0x1C17CF4
	020 Move X0, 0x22A1000
	021 Move X0, [X0+2136]
	022 Call 0x1C17CF4
	023 Move X0, 0x22A1000
	024 Move X0, [X0+2144]
	025 Call 0x1C17CF4
	026 Move X0, 0x22A1000
	027 Move X0, [X0+2152]
	028 Call 0x1C17CF4
	029 Move X0, 0x2298000
	030 Move X0, [X0+2288]
	031 Call 0x1C17CF4
	032 Move X0, 0x22A1000
	033 Move X0, [X0+2160]
	034 Call 0x1C17CF4
	035 Move X0, 0x22A1000
	036 Move X0, [X0+2168]
	037 Call 0x1C17CF4
	038 Move W8, 1
	039 Move [X21+125], W8
	040 Move X0, [X20]
	041 Move [X31+8], X31
	042 Move [X31+16], X31
	043 Move [X31+24], X31
	044 Call 0x1C17F10
	045 Move X1, X31
	046 Move X20, X0
	047 Call StringBuilder..ctor, X0
	048 Move X0, X19
	049 Call RegionHandler.get_BestRegion, X0
	050 Compare X0, 0
	051 JumpIfEqual {114}
	052 Move W1, W31
	053 Call Region.ToString, X0, X1
	054 Compare X20, 0
	055 JumpIfEqual {114}
	056 Move X8, 0x22A1000
	057 Move X8, [X8+2160]
	058 Move X2, X0
	059 Move X0, X20
	060 Move X3, X31
	061 Move X1, [X8]
	062 Call StringBuilder.AppendFormat, X0, X1, X2
	063 Move X0, [X19+40]
	064 Compare X0, 0
	065 JumpIfEqual {114}
	066 Move X8, 0x22A1000
	067 Move X8, [X8+2152]
	068 Move X22, 0x22A1000
	069 Move X23, 0x22A1000
	070 Move X21, 0x22A1000
	071 Move X1, [X8]
	072 Move X22, [X22+2136]
	073 Move X23, [X23+2168]
	074 Move X21, [X21+2128]
	075 Add X8, X31, 8
	076 Call List`1<Object>.GetEnumerator, X0
	077 Move X1, [X22]
	078 Add X0, X31, 8
	079 Call Enumerator<Object>.MoveNext, X0
	080 Move TEMP, X0
	081 And TEMP, TEMP, 1
	082 Compare TEMP, 1
	083 JumpIfNotEqual {92}
	084 Move X0, [X31+24]
	085 Compare X0, 0
	086 JumpIfEqual {113}
	087 Call RegionPinger.GetResults, X0
	088 Move X1, X0
	089 Move X0, X20
	090 Move X2, X31
	091 Call StringBuilder.AppendLine, X0, X1
	092 Move X1, [X21]
	093 Add X0, X31, 8
	094 Call Enumerator<Object>.Dispose, X0
	095 Move X2, [X19+64]
	096 Move X1, [X23]
	097 Move X0, X20
	098 Move X3, X31
	099 Call StringBuilder.AppendFormat, X0, X1, X2
	100 Move X8, [X20]
	101 Move X0, X20
	102 Move X9, [X8+360]
	103 Move X1, [X8+368]
	104 NotImplemented "Instruction BLR not yet implemented."
	105 Move X20, [X31+64]
	106 Move X19, [X31+72]
	107 Move X22, [X31+48]
	108 Move X21, [X31+56]
	109 Move X30, [X31+32]
	110 Move X23, [X31+40]
	111 Add X31, X31, 80
	112 Return X0
	113 Call 0x1C17F20
	114 Call 0x1C17F20
	115 Move X21, X0
	116 NotImplemented "Instruction CMP not yet implemented."
	117 Move X0, X21
	118 Call 0x3EB2AD0
	119 Move X22, [X0]
	120 Call 0x3EB2AE0
	121 Move X8, 0x22A1000
	122 Move X8, [X8+2128]
	123 Add X0, X31, 8
	124 Move X1, [X8]
	125 Call Enumerator<Object>.Dispose, X0
	126 Compare X22, 0
	127 JumpIfEqual {95}
	128 Move X0, X22
	129 Call 0x1C17F18
	130 Move X22, X31
	131 Move X21, X0
	132 Move X8, 0x22A1000
	133 Move X8, [X8+2128]
	134 Move X1, [X8]
	135 Add X0, X31, 8
	136 Call Enumerator<Object>.Dispose, X0
	137 Compare X22, 0
	138 JumpIfNotEqual {141}
	139 Move X0, X21
	140 Call 0x1D2D690
	141 Move X0, X22
	142 Call 0x1C17F18
	143 Call 0x1991590

Method: System.Void SetRegions(ExitGames.Client.Photon.OperationResponse opGetRegions)

Disassembly:
	0x01E5CCE4 LDR X2, [X8]
	0x01E5CCE8 BL 0x2D27194
	0x01E5CCEC LDR X8, [X19 + 0x30]
	0x01E5CCF0 CBZ X8, 0x1E5CD60
	0x01E5CCF4 LDP X1, X3, [X8 + 0x10]
	0x01E5CCF8 ADRP X8, 0x22A0000
	0x01E5CCFC ADRP X9, 0x2297000
	0x01E5CD00 LDR X8, [X8 + 0x960]
	0x01E5CD04 LDR X9, [X9 + 0xDE0]
	0x01E5CD08 MOV X4, X31
	0x01E5CD0C LDR X0, [X8]
	0x01E5CD10 LDR X2, [X9]
	0x01E5CD14 BL 0x32277C4
	0x01E5CD18 ADRP X8, 0x229F000
	0x01E5CD1C LDR X8, [X8 + 0xE60]
	0x01E5CD20 MOV X19, X0
	0x01E5CD24 LDR X8, [X8]
	0x01E5CD28 LDR W9, [X8 + 0xE0]
	0x01E5CD2C CBNZ W9, 0x1E5CD38
	0x01E5CD30 MOV X0, X8
	0x01E5CD34 BL 0x1C16DFC
	0x01E5CD38 MOV X0, X20
	0x01E5CD3C MOV W1, W31
	0x01E5CD40 MOV X2, X19
	0x01E5CD44 MOV X3, X31
	0x01E5CD48 BL 0x351F6A0
	0x01E5CD4C MOVZ W0, 0x1
	0x01E5CD50 LDP X20, X19, [X31 + 0x20]
	0x01E5CD54 LDP X22, X21, [X31 + 0x10]
	0x01E5CD58 LDP X30, X23, [X31], #0x30
	0x01E5CD5C RET
	0x01E5CD60 BL 0x1C16F20
	0x01E5CD64 B 0x1E5CD68
	0x01E5CD68 MOV X20, X0
	0x01E5CD6C CMP W1, 0x1
	0x01E5CD70 B.NE 0x1E5CDCC
	0x01E5CD74 MOV X0, X20
	0x01E5CD78 BL 0x3EB1AD0
	0x01E5CD7C MOV X20, X0
	0x01E5CD80 ADRP X0, 0x229D000
	0x01E5CD84 LDR X0, [X0 + 0xCC0]
	0x01E5CD88 BL 0x1C16D08
	0x01E5CD8C LDR X8, [X20]
	0x01E5CD90 LDR X1, [X8]
	0x01E5CD94 BL 0x1C17270
	0x01E5CD98 TBZ X0, 0x0, 0x1E5CDA4
	0x01E5CD9C BL 0x3EB1AE0
	0x01E5CDA0 B 0x1E5CCC0
	0x01E5CDA4 MOVZ W0, 0x8
	0x01E5CDA8 BL 0x3EB1AF0
	0x01E5CDAC LDR X8, [X20]
	0x01E5CDB0 STR X8, [X0]
	0x01E5CDB4 ADRP X1, 0x2058000
	0x01E5CDB8 ADD X1, X1, 0xE58
	0x01E5CDBC MOV X2, X31
	0x01E5CDC0 BL 0x3EB1B00
	0x01E5CDC4 MOV X20, X0
	0x01E5CDC8 BL 0x3EB1AE0
	0x01E5CDCC MOV X0, X20
	0x01E5CDD0 BL 0x1D2C690
	0x01E5CDD4 BL 0x1990590
	0x01E5CDD8 SUB X31, X31, 0x70
	0x01E5CDDC STP X30, X23, [X31 + 0x40]
	0x01E5CDE0 STP X22, X21, [X31 + 0x50]
	0x01E5CDE4 STP X20, X19, [X31 + 0x60]
	0x01E5CDE8 ADRP X20, 0x257D000
	0x01E5CDEC LDRB W8, [X20 + 0x81]
	0x01E5CDF0 MOV X19, X0
	0x01E5CDF4 TBNZ X8, 0x0, 0x1E5CE3C
	0x01E5CDF8 ADRP X0, 0x22A0000
	0x01E5CDFC LDR X0, [X0 + 0x850]
	0x01E5CE00 BL 0x1C16CF4
	0x01E5CE04 ADRP X0, 0x22A0000
	0x01E5CE08 LDR X0, [X0 + 0x858]
	0x01E5CE0C BL 0x1C16CF4
	0x01E5CE10 ADRP X0, 0x22A0000
	0x01E5CE14 LDR X0, [X0 + 0x860]
	0x01E5CE18 BL 0x1C16CF4
	0x01E5CE1C ADRP X0, 0x22A0000
	0x01E5CE20 LDR X0, [X0 + 0x868]
	0x01E5CE24 BL 0x1C16CF4
	0x01E5CE28 ADRP X0, 0x2297000
	0x01E5CE2C LDR X0, [X0 + 0x598]
	0x01E5CE30 BL 0x1C16CF4
	0x01E5CE34 MOVZ W8, 0x1
	0x01E5CE38 STRB W8, [X20 + 0x81]
	0x01E5CE3C STP X31, X31, [X31 + 0x20]
	0x01E5CE40 STR X31, [X31 + 0x30]
	0x01E5CE44 LDRB W8, [X19 + 0x55]
	0x01E5CE48 CBZ W8, 0x1E5CE60
	0x01E5CE4C LDP X20, X19, [X31 + 0x60]
	0x01E5CE50 LDP X22, X21, [X31 + 0x50]
	0x01E5CE54 LDP X30, X23, [X31 + 0x40]
	0x01E5CE58 ADD X31, X31, 0x70
	0x01E5CE5C RET
	0x01E5CE60 LDR X20, [X19 + 0x28]
	0x01E5CE64 MOVZ W8, 0x1
	0x01E5CE68 STRB W8, [X19 + 0x55]
	0x01E5CE6C STRB W31, [X31 + 0x3C]
	0x01E5CE70 ADD X1, X31, 0x3C
	0x01E5CE74 MOV X0, X20
	0x01E5CE78 MOV X2, X31
	0x01E5CE7C BL 0x33DE64C
	0x01E5CE80 LDR X0, [X19 + 0x28]
	0x01E5CE84 CBZ X0, 0x1E5CF98
	0x01E5CE88 ADRP X8, 0x22A0000
	0x01E5CE8C LDR X8, [X8 + 0x868]
	0x01E5CE90 LDR X1, [X8]
	0x01E5CE94 ADD X8, X31, 0x8
	0x01E5CE98 BL 0x301CB58
	0x01E5CE9C LDUR V0, [X31 + 0x8]
	0x01E5CEA0 LDR X8, [X31 + 0x18]
	0x01E5CEA4 ADRP X21, 0x22A0000
	0x01E5CEA8 LDR X21, [X21 + 0x858]
	0x01E5CEAC STR V0, [X31 + 0x2]
	0x01E5CEB0 STR X8, [X31 + 0x30]
	0x01E5CEB4 MOVZ W22, 0x1
	0x01E5CEB8 LDR X1, [X21]
	0x01E5CEBC ADD X0, X31, 0x20
	0x01E5CEC0 BL 0x2BC4350
	0x01E5CEC4 TBZ X0, 0x0, 0x1E5CEEC
	0x01E5CEC8 LDR X8, [X31 + 0x30]
	0x01E5CECC CBZ X8, 0x1E5CF8C
	0x01E5CED0 LDR X0, [X8 + 0x20]
	0x01E5CED4 STRB W22, [X8 + 0x15]
	0x01E5CED8 CBZ X0, 0x1E5CEB8
	0x01E5CEDC LDR X8, [X0]
	0x01E5CEE0 LDP X9, X1, [X8 + 0x1A8]
	0x01E5CEE4 BLR X9
	0x01E5CEE8 B 0x1E5CEB8
	0x01E5CEEC MOV X21, X31
	0x01E5CEF0 MOVZ W23, 0x6
	0x01E5CEF4 ADRP X8, 0x22A0000
	0x01E5CEF8 LDR X8, [X8 + 0x850]
	0x01E5CEFC LDR X1, [X8]
	0x01E5CF00 ADD X0, X31, 0x20
	0x01E5CF04 BL 0x2BC434C
	0x01E5CF08 CBNZ X21, 0x1E5CF9C
	0x01E5CF0C CMP W23, 0x6
	0x01E5CF10 B.EQ 0x1E5CF18
	0x01E5CF14 CBNZ W23, 0x1E5CF24
	0x01E5CF18 MOV X22, X31
	0x01E5CF1C MOVZ W23, 0x7
	0x01E5CF20 B 0x1E5CF28
	0x01E5CF24 MOV X22, X31
	0x01E5CF28 LDRB W8, [X31 + 0x3C]
	0x01E5CF2C CBZ W8, 0x1E5CF3C
	0x01E5CF30 MOV X0, X20
	0x01E5CF34 MOV X1, X31
	0x01E5CF38 BL 0x33E14E4
	0x01E5CF3C CBNZ X22, 0x1E5CF90
	0x01E5CF40 CMP W23, 0x7
	0x01E5CF44 B.EQ 0x1E5CF4C
	0x01E5CF48 CBNZ W23, 0x1E5CE4C
	0x01E5CF4C ADRP X8, 0x2297000
	0x01E5CF50 LDR X8, [X8 + 0x598]
	0x01E5CF54 LDR X20, [X19 + 0x58]
	0x01E5CF58 LDR X0, [X8]
	0x01E5CF5C LDR W8, [X0 + 0xE0]
	0x01E5CF60 CBNZ W8, 0x1E5CF68
	0x01E5CF64 BL 0x1C16DFC
	0x01E5CF68 MOV X0, X20
	0x01E5CF6C MOV X1, X31
	0x01E5CF70 MOV X2, X31
	0x01E5CF74 BL 0x3C354F8
	0x01E5CF78 TBZ X0, 0x0, 0x1E5CE4C
	0x01E5CF7C LDR X0, [X19 + 0x58]
	0x01E5CF80 CBZ X0, 0x1E5CFA4
	0x01E5CF84 BL 0x1E5C59C
	0x01E5CF88 B 0x1E5CE4C
	0x01E5CF8C BL 0x1C16F20
	0x01E5CF90 MOV X0, X22
	0x01E5CF94 BL 0x1C16F18
	0x01E5CF98 BL 0x1C16F20
	0x01E5CF9C MOV X0, X21
	0x01E5CFA0 BL 0x1C16F18
	0x01E5CFA4 BL 0x1C16F20
	0x01E5CFA8 B 0x1E5CFB4
	0x01E5CFAC B 0x1E5CFB4

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X20, 0x257E000
	014 Move W8, [X20+126]
	015 Move X21, X1
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {50}
	021 Move X0, 0x22A1000
	022 Move X0, [X0+2192]
	023 Call 0x1C17CF4
	024 Move X0, 0x22A1000
	025 Move X0, [X0+2200]
	026 Call 0x1C17CF4
	027 Move X0, 0x22A1000
	028 Move X0, [X0+2208]
	029 Call 0x1C17CF4
	030 Move X0, 0x22A1000
	031 Move X0, [X0+2216]
	032 Call 0x1C17CF4
	033 Move X0, 0x22A0000
	034 Move X0, [X0+2856]
	035 Call 0x1C17CF4
	036 Move X0, 0x22A1000
	037 Move X0, [X0+776]
	038 Call 0x1C17CF4
	039 Move X0, 0x22A1000
	040 Move X0, [X0+2224]
	041 Call 0x1C17CF4
	042 Move X0, 0x2298000
	043 Move X0, [X0+2760]
	044 Call 0x1C17CF4
	045 Move X0, 0x229A000
	046 Move X0, [X0+928]
	047 Call 0x1C17CF4
	048 Move W8, 1
	049 Move [X20+126], W8
	050 Compare X21, 0
	051 JumpIfEqual {198}
	052 Move W8, [X21+16]
	053 NotImplemented "Instruction CMP not yet implemented."
	054 NotImplemented "Instruction LDRH not yet implemented."
	055 Compare W8, 0
	056 JumpIfEqual {70}
	057 Move X20, [X31+80]
	058 Move X19, [X31+88]
	059 Move X22, [X31+64]
	060 Move X21, [X31+72]
	061 Move X24, [X31+48]
	062 Move X23, [X31+56]
	063 Move X26, [X31+32]
	064 Move X25, [X31+40]
	065 Move X28, [X31+16]
	066 Move X27, [X31+24]
	067 Move X29, [X31+96]
	068 Move X30, [X31+104]
	069 Return 
	070 Move W1, 210
	071 Move X0, X21
	072 Move X2, X31
	073 Call OperationResponse.get_Item, X0, X1
	074 Move X22, 0x2298000
	075 Move X22, [X22+2760]
	076 Move X1, [X22]
	077 Call 0x1C17E00
	078 Move X20, X0
	079 Move W1, 230
	080 Move X0, X21
	081 Move X2, X31
	082 Call OperationResponse.get_Item, X0, X1
	083 Move X1, [X22]
	084 Call 0x1C17E00
	085 Compare X20, 0
	086 JumpIfEqual {57}
	087 Move X21, X0
	088 Compare X0, 0
	089 JumpIfEqual {57}
	090 Move W8, [X20+24]
	091 Move W9, [X21+24]
	092 NotImplemented "Instruction CMP not yet implemented."
	093 Move [X19+32], X31
	094 Move X8, 0x22A1000
	095 Move X8, [X8+2216]
	096 Move X0, [X8]
	097 Call 0x1C17F10
	098 Move X8, 0x22A1000
	099 Move W1, [X20+24]
	100 Move X8, [X8+2208]
	101 Move X22, X0
	102 Move X2, [X8]
	103 Call List`1<Object>..ctor, X0, X1
	104 Move [X19+16], X22
	105 Move X8, [X20+24]
	106 NotImplemented "Instruction CMP not yet implemented."
	107 Move X29, 0x22A1000
	108 Move X29, [X29+2224]
	109 Move X25, X31
	110 And X8, X8, 0
	111 Add X26, X21, 32
	112 Add X27, X20, 32
	113 Move TEMP, 0x80000000
	114 Not TEMP
	115 Move W28, TEMP
	116 Move W9, [X21+24]
	117 NotImplemented "Instruction CMP not yet implemented."
	118 Move X9, 0x22A1000
	119 Move X9, [X9+776]
	120 Move X23, [X26]
	121 Move X9, [X9]
	122 Move X9, [X9+184]
	123 NotImplemented "Instruction LDRH not yet implemented."
	124 Compare W22, 0
	125 JumpIfEqual {139}
	126 Move X8, 0x22A0000
	127 Move X8, [X8+2856]
	128 Move X0, [X8]
	129 Move W8, [X0+224]
	130 Compare W8, 0
	131 JumpIfNotEqual {133}
	132 Call 0x1C17DFC
	133 Move X0, X23
	134 Move W1, W22
	135 Move X2, X31
	136 Call LoadBalancingClient.ReplacePortWithAlternative, X0, X1
	137 Move W8, [X20+24]
	138 Move X23, X0
	139 NotImplemented "Instruction CMP not yet implemented."
	140 Move X0, [X29]
	141 Move X24, [X27]
	142 Call 0x1C17F10
	143 Move X1, X31
	144 Move X22, X0
	145 Call Object..ctor, X0
	146 Move X0, X22
	147 Move X1, X24
	148 Call Region.SetCodeAndCluster, X0, X1
	149 Move X0, [X22+16]
	150 Move X1, X31
	151 Move [X22+32], X23
	152 Move [X22+40], W28
	153 Call String.IsNullOrEmpty, X0
	154 Move TEMP, X0
	155 And TEMP, TEMP, 1
	156 Compare TEMP, 1
	157 JumpIfEqual {182}
	158 Move X0, [X19+16]
	159 Compare X0, 0
	160 JumpIfEqual {198}
	161 Move X9, 0x22A1000
	162 Move W10, [X0+28]
	163 Move X8, [X0+16]
	164 Move X9, [X9+2200]
	165 Add W10, W10, 1
	166 Move X9, [X9]
	167 Move [X0+28], W10
	168 Compare X8, 0
	169 JumpIfEqual {198}
	170 NotImplemented "Instruction LDRSW not yet implemented."
	171 Move W11, [X8+24]
	172 NotImplemented "Instruction CMP not yet implemented."
	173 Add W9, W10, 1
	174 Add X8, X8, X10
	175 Move [X0+24], W9
	176 Move [X8+32], X22
	177 Move X8, [X9+32]
	178 Move X1, X22
	179 Move X8, [X8+192]
	180 Move X2, [X8+112]
	181 Call List`1<Object>.AddWithResize, X0, X1
	182 Move W8, [X20+24]
	183 Add X25, X25, 1
	184 NotImplemented "Instruction CMP not yet implemented."
	185 Move X8, 0x22A1000
	186 Move X8, [X8+2192]
	187 Move X0, X20
	188 Move X1, [X8]
	189 Call 0x2158BDC, X0
	190 Move X8, 0x229A000
	191 Move X8, [X8+928]
	192 Move X1, X20
	193 Move X2, X31
	194 Move X0, [X8]
	195 Call String.Join, X0, X1
	196 Move [X19+24], X0
	197 Call 0x1C17F28
	198 Call 0x1C17F20

Method: System.Boolean get_IsPinging()

Disassembly:
	0x01E5CFB0 B 0x1E5CFB4
	0x01E5CFB4 MOV X22, X1

ISIL:
	001 Move W0, [X0+84]
	002 Return X0

Method: System.Void set_IsPinging(System.Boolean value)

Disassembly:
	0x01E5CFB8 MOV X23, X0
	0x01E5CFBC B 0x1E5D00C
	0x01E5CFC0 B 0x1E5CFC8

ISIL:
	001 And W8, W1, 1
	002 Move [X0+84], W8
	003 Return 

Method: System.Boolean get_Aborted()

Disassembly:
	0x01E5CFC4 B 0x1E5CFC8
	0x01E5CFC8 MOV X22, X1

ISIL:
	001 Move W0, [X0+85]
	002 Return X0

Method: System.Void set_Aborted(System.Boolean value)

Disassembly:
	0x01E5CFCC MOV X23, X0
	0x01E5CFD0 CMP W22, 0x1
	0x01E5CFD4 B.NE 0x1E5CFF0

ISIL:
	001 And W8, W1, 1
	002 Move [X0+85], W8
	003 Return 

Method: System.Void .ctor(System.UInt16 masterServerPortOverride = 0)

Disassembly:
	0x01E5CFD8 MOV X0, X23
	0x01E5CFDC BL 0x3EB1AD0
	0x01E5CFE0 LDR X21, [X0]
	0x01E5CFE4 BL 0x3EB1AE0
	0x01E5CFE8 MOV W23, W31
	0x01E5CFEC B 0x1E5CEF4
	0x01E5CFF0 MOV X21, X31
	0x01E5CFF4 ADRP X8, 0x22A0000
	0x01E5CFF8 LDR X8, [X8 + 0x850]
	0x01E5CFFC LDR X1, [X8]
	0x01E5D000 ADD X0, X31, 0x20
	0x01E5D004 BL 0x2BC434C
	0x01E5D008 CBNZ X21, 0x1E5D034
	0x01E5D00C CMP W22, 0x1
	0x01E5D010 B.NE 0x1E5D02C
	0x01E5D014 MOV X0, X23
	0x01E5D018 BL 0x3EB1AD0
	0x01E5D01C LDR X22, [X0]
	0x01E5D020 BL 0x3EB1AE0
	0x01E5D024 MOV W23, W31
	0x01E5D028 B 0x1E5CF28
	0x01E5D02C MOV X22, X31
	0x01E5D030 B 0x1E5D04C
	0x01E5D034 MOV X0, X21
	0x01E5D038 BL 0x1C16F18
	0x01E5D03C MOV X22, X1
	0x01E5D040 MOV X23, X0
	0x01E5D044 B 0x1E5CFF4
	0x01E5D048 MOV X23, X0
	0x01E5D04C LDRB W8, [X31 + 0x3C]
	0x01E5D050 CBZ W8, 0x1E5D060
	0x01E5D054 MOV X0, X20
	0x01E5D058 MOV X1, X31
	0x01E5D05C BL 0x33E14E4
	0x01E5D060 CBNZ X22, 0x1E5D06C
	0x01E5D064 MOV X0, X23
	0x01E5D068 BL 0x1D2C690
	0x01E5D06C MOV X0, X22
	0x01E5D070 BL 0x1C16F18
	0x01E5D074 BL 0x1990590
	0x01E5D078 MOV X8, X0
	0x01E5D07C LDR X0, [X0 + 0x20]
	0x01E5D080 MOVZ W9, 0x1
	0x01E5D084 STRB W9, [X8 + 0x15]
	0x01E5D088 CBZ X0, 0x1E5D098
	0x01E5D08C LDR X8, [X0]
	0x01E5D090 LDP X2, X1, [X8 + 0x1A8]
	0x01E5D094 BR X2
	0x01E5D098 RET

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x257E000
	009 Move X24, 0x22A1000
	010 Move X21, 0x22A1000
	011 Move X22, 0x22A1000
	012 Move W8, [X23+127]
	013 Move X24, [X24+2232]
	014 Move X21, [X21+2240]
	015 Move X22, [X22+776]
	016 Move W19, W1
	017 Move X20, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {33}
	022 Move X0, 0x22A0000
	023 Move X0, [X0+2240]
	024 Call 0x1C17CF4
	025 Move X0, 0x22A0000
	026 Move X0, [X0+2232]
	027 Call 0x1C17CF4
	028 Move X0, 0x22A0000
	029 Move X0, [X0+776]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X23+127], W8
	033 Move X0, [X24]
	034 Call 0x1C17F10
	035 Move X1, [X21]
	036 Move X21, X0
	037 Call List`1<Object>..ctor, X0
	038 Move W8, 0x999A
	039 NotImplemented "Instruction MOVK not yet implemented."
	040 Move W9, 90
	041 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	042 Move X0, X20
	043 Move X1, X31
	044 Move [X20+40], X21
	045 Move [X20+72], D0
	046 Move [X20+80], W9
	047 Call Object..ctor, X0
	048 Move X8, [X22]
	049 Move X22, [X31+32]
	050 Move X21, [X31+40]
	051 Move X24, [X31+16]
	052 Move X23, [X31+24]
	053 Move X8, [X8+184]
	054 NotImplemented "Instruction STRH not yet implemented."
	055 Move X20, [X31+48]
	056 Move X19, [X31+56]
	057 Move X30, [X31+64]
	058 Return 

Method: System.Boolean PingMinimumOfRegions(System.Action`1<Fusion.Photon.Realtime.RegionHandler> onCompleteCallback, System.String previousSummary)

Disassembly:
	0x01E5D09C STR X30, [X31 - 0x10]!
	0x01E5D0A0 CBZ X1, 0x1E5D104
	0x01E5D0A4 LDR W9, [X1 + 0x28]
	0x01E5D0A8 LDR W10, [X0 + 0x50]
	0x01E5D0AC MOV X8, X0
	0x01E5D0B0 CMP W9, W10
	0x01E5D0B4 B.GT 0x1E5D0F8
	0x01E5D0B8 LDR V0, [X8 + 0x38]
	0x01E5D0BC LDR V1, [X8 + 0x48]
	0x01E5D0C0 SCVTF S2, W9
	0x01E5D0C4 SCVTF S0, S0
	0x01E5D0C8 FMUL S0, S1, S0
	0x01E5D0CC FCMP S0, S2
	0x01E5D0D0 B.MI 0x1E5D0F8
	0x01E5D0D4 LDR X9, [X8 + 0x30]
	0x01E5D0D8 STRB W31, [X8 + 0x54]
	0x01E5D0DC CBZ X9, 0x1E5D104
	0x01E5D0E0 LDR X3, [X9 + 0x18]
	0x01E5D0E4 LDR X0, [X9 + 0x40]
	0x01E5D0E8 LDR X2, [X9 + 0x28]
	0x01E5D0EC MOV X1, X8
	0x01E5D0F0 LDR X30, [X31], #0x10
	0x01E5D0F4 BR X3
	0x01E5D0F8 MOV X0, X8
	0x01E5D0FC LDR X30, [X31], #0x10
	0x01E5D100 B 0x1E5C6DC
	0x01E5D104 BL 0x1C16F20
	0x01E5D108 SUB X31, X31, 0x80
	0x01E5D10C STR X30, [X31 + 0x40]
	0x01E5D110 STP X24, X23, [X31 + 0x50]
	0x01E5D114 STP X22, X21, [X31 + 0x60]
	0x01E5D118 STP X20, X19, [X31 + 0x70]
	0x01E5D11C ADRP X20, 0x257C000
	0x01E5D120 LDRB W8, [X20 + 0x83]
	0x01E5D124 MOV X19, X0
	0x01E5D128 TBNZ X8, 0x0, 0x1E5D164
	0x01E5D12C ADRP X0, 0x229F000
	0x01E5D130 LDR X0, [X0 + 0x850]
	0x01E5D134 BL 0x1C16CF4
	0x01E5D138 ADRP X0, 0x229F000
	0x01E5D13C LDR X0, [X0 + 0x858]
	0x01E5D140 BL 0x1C16CF4
	0x01E5D144 ADRP X0, 0x229F000
	0x01E5D148 LDR X0, [X0 + 0x860]
	0x01E5D14C BL 0x1C16CF4
	0x01E5D150 ADRP X0, 0x229F000
	0x01E5D154 LDR X0, [X0 + 0x868]
	0x01E5D158 BL 0x1C16CF4
	0x01E5D15C MOVZ W8, 0x1
	0x01E5D160 STRB W8, [X20 + 0x83]
	0x01E5D164 STP X31, X31, [X31 + 0x20]
	0x01E5D168 STR X31, [X31 + 0x30]
	0x01E5D16C LDR X20, [X19 + 0x28]
	0x01E5D170 STRB W31, [X31 + 0x4C]
	0x01E5D174 ADD X1, X31, 0x4C
	0x01E5D178 MOV X0, X20
	0x01E5D17C MOV X2, X31
	0x01E5D180 BL 0x33DE64C
	0x01E5D184 LDRB W8, [X19 + 0x54]
	0x01E5D188 CBZ W8, 0x1E5D1F8
	0x01E5D18C LDR X0, [X19 + 0x28]
	0x01E5D190 STR X31, [X19 + 0x20]
	0x01E5D194 CBZ X0, 0x1E5D2A8
	0x01E5D198 ADRP X8, 0x229F000
	0x01E5D19C LDR X8, [X8 + 0x868]
	0x01E5D1A0 LDR X1, [X8]
	0x01E5D1A4 ADD X8, X31, 0x8
	0x01E5D1A8 BL 0x301CB58
	0x01E5D1AC ADRP X21, 0x229F000
	0x01E5D1B0 ADRP X24, 0x229F000
	0x01E5D1B4 LDUR V0, [X31 + 0x8]
	0x01E5D1B8 LDR X8, [X31 + 0x18]
	0x01E5D1BC LDR X21, [X21 + 0x858]
	0x01E5D1C0 LDR X24, [X24 + 0x850]
	0x01E5D1C4 STR V0, [X31 + 0x2]
	0x01E5D1C8 STR X8, [X31 + 0x30]
	0x01E5D1CC LDR X1, [X21]
	0x01E5D1D0 ADD X0, X31, 0x20
	0x01E5D1D4 BL 0x2BC4350
	0x01E5D1D8 TBZ X0, 0x0, 0x1E5D204
	0x01E5D1DC LDR X8, [X31 + 0x30]
	0x01E5D1E0 CBZ X8, 0x1E5D29C
	0x01E5D1E4 LDRB W8, [X8 + 0x14]
	0x01E5D1E8 CBNZ W8, 0x1E5D1CC
	0x01E5D1EC MOV X21, X31
	0x01E5D1F0 MOVZ W23, 0x3
	0x01E5D1F4 B 0x1E5D20C
	0x01E5D1F8 MOV X22, X31
	0x01E5D1FC MOVZ W23, 0x3
	0x01E5D200 B 0x1E5D23C
	0x01E5D204 MOV X21, X31
	0x01E5D208 MOVZ W23, 0x7
	0x01E5D20C LDR X1, [X24]
	0x01E5D210 ADD X0, X31, 0x20
	0x01E5D214 BL 0x2BC434C
	0x01E5D218 CBNZ X21, 0x1E5D2AC
	0x01E5D21C CMP W23, 0x7
	0x01E5D220 B.EQ 0x1E5D228
	0x01E5D224 CBNZ W23, 0x1E5D238
	0x01E5D228 MOV X22, X31
	0x01E5D22C STRB W31, [X19 + 0x54]
	0x01E5D230 MOVZ W23, 0x8
	0x01E5D234 B 0x1E5D23C
	0x01E5D238 MOV X22, X31
	0x01E5D23C LDRB W8, [X31 + 0x4C]
	0x01E5D240 CBZ W8, 0x1E5D250
	0x01E5D244 MOV X0, X20
	0x01E5D248 MOV X1, X31
	0x01E5D24C BL 0x33E14E4
	0x01E5D250 CBNZ X22, 0x1E5D2A0
	0x01E5D254 ORR W8, W23, 0x8
	0x01E5D258 CMP W8, 0x8
	0x01E5D25C B.NE 0x1E5D284
	0x01E5D260 LDRB W8, [X19 + 0x55]
	0x01E5D264 CBNZ W8, 0x1E5D284
	0x01E5D268 LDR X8, [X19 + 0x30]
	0x01E5D26C CBZ X8, 0x1E5D2B4
	0x01E5D270 LDR X9, [X8 + 0x18]
	0x01E5D274 LDR X0, [X8 + 0x40]
	0x01E5D278 LDR X2, [X8 + 0x28]
	0x01E5D27C MOV X1, X19
	0x01E5D280 BLR X9
	0x01E5D284 LDP X20, X19, [X31 + 0x70]
	0x01E5D288 LDP X22, X21, [X31 + 0x60]
	0x01E5D28C LDP X24, X23, [X31 + 0x50]
	0x01E5D290 LDR X30, [X31 + 0x40]
	0x01E5D294 ADD X31, X31, 0x80
	0x01E5D298 RET
	0x01E5D29C BL 0x1C16F20
	0x01E5D2A0 MOV X0, X22
	0x01E5D2A4 BL 0x1C16F18
	0x01E5D2A8 BL 0x1C16F20
	0x01E5D2AC MOV X0, X21
	0x01E5D2B0 BL 0x1C16F18
	0x01E5D2B4 BL 0x1C16F20
	0x01E5D2B8 B 0x1E5D2C4
	0x01E5D2BC B 0x1E5D2C4
	0x01E5D2C0 B 0x1E5D2C4
	0x01E5D2C4 MOV X22, X1
	0x01E5D2C8 MOV X23, X0
	0x01E5D2CC B 0x1E5D310
	0x01E5D2D0 B 0x1E5D2D4
	0x01E5D2D4 MOV X22, X1
	0x01E5D2D8 MOV X23, X0
	0x01E5D2DC CMP W22, 0x1
	0x01E5D2E0 B.NE 0x1E5D2FC
	0x01E5D2E4 MOV X0, X23
	0x01E5D2E8 BL 0x3EB1AD0
	0x01E5D2EC LDR X21, [X0]
	0x01E5D2F0 BL 0x3EB1AE0
	0x01E5D2F4 MOV W23, W31
	0x01E5D2F8 B 0x1E5D20C
	0x01E5D2FC MOV X21, X31
	0x01E5D300 LDR X1, [X24]
	0x01E5D304 ADD X0, X31, 0x20
	0x01E5D308 BL 0x2BC434C
	0x01E5D30C CBNZ X21, 0x1E5D338
	0x01E5D310 CMP W22, 0x1
	0x01E5D314 B.NE 0x1E5D330
	0x01E5D318 MOV X0, X23
	0x01E5D31C BL 0x3EB1AD0
	0x01E5D320 LDR X22, [X0]
	0x01E5D324 BL 0x3EB1AE0
	0x01E5D328 MOV W23, W31
	0x01E5D32C B 0x1E5D23C
	0x01E5D330 MOV X22, X31
	0x01E5D334 B 0x1E5D350
	0x01E5D338 MOV X0, X21
	0x01E5D33C BL 0x1C16F18
	0x01E5D340 MOV X22, X1
	0x01E5D344 MOV X23, X0
	0x01E5D348 B 0x1E5D300
	0x01E5D34C MOV X23, X0
	0x01E5D350 LDRB W8, [X31 + 0x4C]
	0x01E5D354 CBZ W8, 0x1E5D364
	0x01E5D358 MOV X0, X20
	0x01E5D35C MOV X1, X31
	0x01E5D360 BL 0x33E14E4
	0x01E5D364 CBNZ X22, 0x1E5D370
	0x01E5D368 MOV X0, X23
	0x01E5D36C BL 0x1D2C690
	0x01E5D370 MOV X0, X22
	0x01E5D374 BL 0x1C16F18
	0x01E5D378 BL 0x1990590
	0x01E5D37C STR X30, [X31 - 0x20]!
	0x01E5D380 STP X20, X19, [X31 + 0x10]
	0x01E5D384 ADRP X19, 0x257C000
	0x01E5D388 ADRP X20, 0x229F000
	0x01E5D38C LDRB W8, [X19 + 0x84]
	0x01E5D390 LDR X20, [X20 + 0x838]
	0x01E5D394 TBNZ X8, 0x0, 0x1E5D3AC
	0x01E5D398 ADRP X0, 0x229F000
	0x01E5D39C LDR X0, [X0 + 0x838]
	0x01E5D3A0 BL 0x1C16CF4
	0x01E5D3A4 MOVZ W8, 0x1
	0x01E5D3A8 STRB W8, [X19 + 0x84]
	0x01E5D3AC LDR X0, [X20]
	0x01E5D3B0 BL 0x1C16F10
	0x01E5D3B4 MOV X1, X31
	0x01E5D3B8 MOV X19, X0
	0x01E5D3BC BL 0x33BDD8C
	0x01E5D3C0 LDR X8, [X20]
	0x01E5D3C4 LDR X8, [X8 + 0xB8]
	0x01E5D3C8 STR X19, [X8]
	0x01E5D3CC LDP X20, X19, [X31 + 0x10]
	0x01E5D3D0 LDR X30, [X31], #0x20
	0x01E5D3D4 RET
	0x01E5D3D8 MOV X1, X31
	0x01E5D3DC B 0x33BDD8C
	0x01E5D3E0 STR X30, [X31 - 0x10]!
	0x01E5D3E4 CBZ X1, 0x1E5D40C
	0x01E5D3E8 LDR W8, [X1 + 0x28]
	0x01E5D3EC STR W8, [X31 + 0xC]
	0x01E5D3F0 CBZ X2, 0x1E5D40C
	0x01E5D3F4 LDR W1, [X2 + 0x28]
	0x01E5D3F8 ADD X0, X31, 0xC
	0x01E5D3FC MOV X2, X31
	0x01E5D400 BL 0x337B634
	0x01E5D404 LDR X30, [X31], #0x10
	0x01E5D408 RET
	0x01E5D40C BL 0x1C16F20
	0x01E5D410 STR X30, [X31 - 0x10]!
	0x01E5D414 CBZ X1, 0x1E5D434
	0x01E5D418 LDR X8, [X1 + 0x10]
	0x01E5D41C CBZ X8, 0x1E5D434
	0x01E5D420 LDR X1, [X0 + 0x10]
	0x01E5D424 MOV X0, X8
	0x01E5D428 MOV X2, X31
	0x01E5D42C LDR X30, [X31], #0x10
	0x01E5D430 B 0x322693C
	0x01E5D434 BL 0x1C16F20
	0x01E5D438 LDRB W0, [X0 + 0x14]
	0x01E5D43C RET
	0x01E5D440 AND W8, W1, 0x1
	0x01E5D444 STRB W8, [X0 + 0x14]
	0x01E5D448 RET
	0x01E5D44C LDRB W0, [X0 + 0x15]
	0x01E5D450 RET
	0x01E5D454 AND W8, W1, 0x1
	0x01E5D458 STRB W8, [X0 + 0x15]
	0x01E5D45C RET
	0x01E5D460 STR X30, [X31 - 0x30]!
	0x01E5D464 STP X22, X21, [X31 + 0x10]
	0x01E5D468 STP X20, X19, [X31 + 0x20]
	0x01E5D46C ADRP X19, 0x257C000
	0x01E5D470 ADRP X21, 0x229F000
	0x01E5D474 ADRP X22, 0x2296000
	0x01E5D478 LDRB W8, [X19 + 0x86]
	0x01E5D47C LDR X21, [X21 + 0x308]
	0x01E5D480 LDR X22, [X22 + 0x6C0]
	0x01E5D484 TBNZ X8, 0x0, 0x1E5D4E4
	0x01E5D488 ADRP X0, 0x229F000
	0x01E5D48C LDR X0, [X0 + 0x778]
	0x01E5D490 BL 0x1C16CF4
	0x01E5D494 ADRP X0, 0x229F000
	0x01E5D498 LDR X0, [X0 + 0x968]
	0x01E5D49C BL 0x1C16CF4
	0x01E5D4A0 ADRP X0, 0x229F000
	0x01E5D4A4 LDR X0, [X0 + 0x970]
	0x01E5D4A8 BL 0x1C16CF4
	0x01E5D4AC ADRP X0, 0x229F000
	0x01E5D4B0 LDR X0, [X0 + 0x978]
	0x01E5D4B4 BL 0x1C16CF4
	0x01E5D4B8 ADRP X0, 0x229F000
	0x01E5D4BC LDR X0, [X0 + 0x980]
	0x01E5D4C0 BL 0x1C16CF4
	0x01E5D4C4 ADRP X0, 0x229F000
	0x01E5D4C8 LDR X0, [X0 + 0x308]
	0x01E5D4CC BL 0x1C16CF4
	0x01E5D4D0 ADRP X0, 0x2296000
	0x01E5D4D4 LDR X0, [X0 + 0x6C0]
	0x01E5D4D8 BL 0x1C16CF4
	0x01E5D4DC MOVZ W8, 0x1
	0x01E5D4E0 STRB W8, [X19 + 0x86]
	0x01E5D4E4 MOV X0, X31
	0x01E5D4E8 BL 0x1E37B3C
	0x01E5D4EC LDR X9, [X21]
	0x01E5D4F0 LDR X8, [X22]
	0x01E5D4F4 MOV W19, W0
	0x01E5D4F8 LDR X9, [X9 + 0xB8]
	0x01E5D4FC LDR W10, [X8 + 0xE0]
	0x01E5D500 LDR X20, [X9]
	0x01E5D504 CBNZ W10, 0x1E5D510
	0x01E5D508 MOV X0, X8
	0x01E5D50C BL 0x1C16DFC
	0x01E5D510 MOV X0, X20
	0x01E5D514 MOV X1, X31
	0x01E5D518 MOV X2, X31
	0x01E5D51C BL 0x3395194
	0x01E5D520 TBZ X19, 0x0, 0x1E5D590
	0x01E5D524 TBNZ X0, 0x0, 0x1E5D570
	0x01E5D528 LDR X8, [X21]
	0x01E5D52C ADRP X9, 0x229F000
	0x01E5D530 LDR X0, [X22]
	0x01E5D534 LDR X8, [X8 + 0xB8]
	0x01E5D538 LDR X9, [X9 + 0x968]
	0x01E5D53C LDR W10, [X0 + 0xE0]
	0x01E5D540 LDR X19, [X8]
	0x01E5D544 LDR X20, [X9]
	0x01E5D548 CBNZ W10, 0x1E5D550
	0x01E5D54C BL 0x1C16DFC
	0x01E5D550 MOV X0, X20
	0x01E5D554 MOV X1, X31
	0x01E5D558 BL 0x338C698
	0x01E5D55C MOV X1, X0
	0x01E5D560 MOV X0, X19
	0x01E5D564 MOV X2, X31
	0x01E5D568 BL 0x3395194
	0x01E5D56C TBZ X0, 0x0, 0x1E5D5F8
	0x01E5D570 ADRP X8, 0x229F000
	0x01E5D574 LDR X8, [X8 + 0x970]
	0x01E5D578 LDR X0, [X8]
	0x01E5D57C BL 0x1C16F10
	0x01E5D580 MOV X19, X0
	0x01E5D584 BL 0x1E5A5B8
	0x01E5D588 CBNZ X19, 0x1E5D67C
	0x01E5D58C B 0x1E5D5F8
	0x01E5D590 TBNZ X0, 0x0, 0x1E5D5DC

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x257D000
	009 Move X20, 0x22A0000
	010 Move W8, [X23+128]
	011 Move X20, [X20+2248]
	012 Move X21, X2
	013 Move X22, X1
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {66}
	019 Move X0, 0x22A0000
	020 Move X0, [X0+2256]
	021 Call 0x1C17CF4
	022 Move X0, 0x22A0000
	023 Move X0, [X0+688]
	024 Call 0x1C17CF4
	025 Move X0, 0x22A0000
	026 Move X0, [X0+2264]
	027 Call 0x1C17CF4
	028 Move X0, 0x22A0000
	029 Move X0, [X0+2272]
	030 Call 0x1C17CF4
	031 Move X0, 0x22A0000
	032 Move X0, [X0+2280]
	033 Call 0x1C17CF4
	034 Move X0, 0x22A0000
	035 Move X0, [X0+2288]
	036 Call 0x1C17CF4
	037 Move X0, 0x22A0000
	038 Move X0, [X0+2296]
	039 Call 0x1C17CF4
	040 Move X0, 0x22A0000
	041 Move X0, [X0+2304]
	042 Call 0x1C17CF4
	043 Move X0, 0x2297000
	044 Move X0, [X0+1432]
	045 Call 0x1C17CF4
	046 Move X0, 0x22A0000
	047 Move X0, [X0+2312]
	048 Call 0x1C17CF4
	049 Move X0, 0x22A0000
	050 Move X0, [X0+2320]
	051 Call 0x1C17CF4
	052 Move X0, 0x22A0000
	053 Move X0, [X0+2112]
	054 Call 0x1C17CF4
	055 Move X0, 0x22A0000
	056 Move X0, [X0+2328]
	057 Call 0x1C17CF4
	058 Move X0, 0x22A0000
	059 Move X0, [X0+2248]
	060 Call 0x1C17CF4
	061 Move X0, 0x22A0000
	062 Move X0, [X0+2336]
	063 Call 0x1C17CF4
	064 Move W8, 1
	065 Move [X23+128], W8
	066 Move X0, [X20]
	067 Move [X31+12], W31
	068 Move [X31+8], W31
	069 Call 0x1C17F10
	070 Move X1, X31
	071 Move X20, X0
	072 Call Object..ctor, X0
	073 Move X8, [X19+16]
	074 Compare X8, 0
	075 JumpIfEqual {82}
	076 Move W8, [X8+24]
	077 Compare W8, 0
	078 JumpIfEqual {82}
	079 Move W8, [X19+84]
	080 Compare W8, 0
	081 JumpIfEqual {92}
	082 Move W0, W31
	083 Move X20, [X31+48]
	084 Move X19, [X31+56]
	085 Move X22, [X31+32]
	086 Move X21, [X31+40]
	087 Move X30, [X31+16]
	088 Move X23, [X31+24]
	089 And W0, W0, 1
	090 Add X31, X31, 64
	091 Return X0
	092 Move W8, 1
	093 Move [X19+64], X21
	094 NotImplemented "Instruction STRH not yet implemented."
	095 Move X8, 0x2297000
	096 Move X8, [X8+1432]
	097 Move X23, [X19+88]
	098 Move X0, [X8]
	099 Move W8, [X0+224]
	100 Compare W8, 0
	101 JumpIfNotEqual {103}
	102 Call 0x1C17DFC
	103 Move X0, X23
	104 Move X1, X31
	105 Move X2, X31
	106 Call Object.op_Inequality, X0, X1
	107 Move TEMP, X0
	108 And TEMP, TEMP, 1
	109 Compare TEMP, 1
	110 JumpIfNotEqual {115}
	111 Move X0, [X19+88]
	112 Compare X0, 0
	113 JumpIfEqual {333}
	114 Call MonoBehaviourEmpty.SelfDestroy, X0
	115 Move X8, 0x22A0000
	116 Move X8, [X8+2336]
	117 Move X0, [X8]
	118 Call MonoBehaviourEmpty.BuildInstance, X0
	119 Move [X19+88], X0
	120 Compare X0, 0
	121 JumpIfEqual {333}
	122 Move [X0+32], X22
	123 Move X8, 0x22A0000
	124 Move X8, [X8+688]
	125 Move X23, X0
	126 Move X0, [X8]
	127 Call 0x1C17F10
	128 Move X8, 0x22A0000
	129 Move X8, [X8+2304]
	130 Move X1, X23
	131 Move X3, X31
	132 Move X22, X0
	133 Move X2, [X8]
	134 Call Action`1<Object>..ctor, X0, X1, X2
	135 Move X0, X21
	136 Move X1, X31
	137 Move [X19+48], X22
	138 Call String.IsNullOrEmpty, X0
	139 Move TEMP, X0
	140 And TEMP, TEMP, 1
	141 Compare TEMP, 1
	142 JumpIfEqual {308}
	143 Move X8, 0x22A0000
	144 Move X8, [X8+2264]
	145 Move W1, 1
	146 Move X0, [X8]
	147 Call 0x1C17D6C
	148 Compare X0, 0
	149 JumpIfEqual {333}
	150 Move W8, [X0+24]
	151 Move X1, X0
	152 Compare W8, 0
	153 JumpIfEqual {334}
	154 Move W8, 59
	155 NotImplemented "Instruction STRH not yet implemented."
	156 Compare X21, 0
	157 JumpIfEqual {333}
	158 Move X0, X21
	159 Move X2, X31
	160 Call String.Split, X0, X1
	161 Compare X0, 0
	162 JumpIfEqual {333}
	163 Move W8, [X0+24]
	164 Move X21, X0
	165 NotImplemented "Instruction CMP not yet implemented."
	166 Move X0, [X21+40]
	167 Add X1, X31, 12
	168 Move X2, X31
	169 Call Int32.TryParse, X0, X1
	170 Move TEMP, X0
	171 And TEMP, TEMP, 1
	172 Compare TEMP, 1
	173 JumpIfNotEqual {308}
	174 Move W8, [X21+24]
	175 Compare W8, 0
	176 JumpIfEqual {334}
	177 Compare X20, 0
	178 JumpIfEqual {333}
	179 Move X0, [X21+32]
	180 NotImplemented "Instruction CMP not yet implemented."
	181 Move [X20+16], X0
	182 Move X21, [X21+48]
	183 Move X1, X31
	184 Call String.IsNullOrEmpty, X0
	185 Move TEMP, X0
	186 And TEMP, TEMP, 1
	187 Compare TEMP, 1
	188 JumpIfEqual {308}
	189 Move X0, X21
	190 Move X1, X31
	191 Call String.IsNullOrEmpty, X0
	192 Move TEMP, X0
	193 And TEMP, TEMP, 1
	194 Compare TEMP, 1
	195 JumpIfEqual {308}
	196 Move X0, [X19+24]
	197 Compare X0, 0
	198 JumpIfEqual {333}
	199 Move X1, X21
	200 Move X2, X31
	201 Call String.Equals, X0, X1
	202 Move TEMP, X0
	203 And TEMP, TEMP, 1
	204 Compare TEMP, 1
	205 JumpIfNotEqual {308}
	206 Move X0, [X19+24]
	207 Compare X0, 0
	208 JumpIfEqual {333}
	209 Move X1, [X20+16]
	210 Move X2, X31
	211 Call String.Contains, X0, X1
	212 Move TEMP, X0
	213 And TEMP, TEMP, 1
	214 Compare TEMP, 1
	215 JumpIfNotEqual {308}
	216 Move X23, 0x22A0000
	217 Move X23, [X23+2112]
	218 Move W21, [X31+12]
	219 Move X0, [X23]
	220 Move W8, [X0+224]
	221 Compare W8, 0
	222 JumpIfNotEqual {225}
	223 Call 0x1C17DFC
	224 Move X0, [X23]
	225 Move X8, [X0+184]
	226 Move W8, [X8+8]
	227 NotImplemented "Instruction CMP not yet implemented."
	228 Move W8, [X31+12]
	229 Move X21, [X19+16]
	230 Move [X19+56], W8
	231 Move X8, 0x22A0000
	232 Move X8, [X8+2312]
	233 Move X0, [X8]
	234 Call 0x1C17F10
	235 Move X8, 0x22A0000
	236 Move X8, [X8+2328]
	237 Move X1, X20
	238 Move X3, X31
	239 Move X22, X0
	240 Move X2, [X8]
	241 Call Predicate`1<Object>..ctor, X0, X1, X2
	242 Compare X21, 0
	243 JumpIfEqual {333}
	244 Move X8, 0x22A0000
	245 Move X8, [X8+2288]
	246 Move X0, X21
	247 Move X1, X22
	248 Move X2, [X8]
	249 Call List`1<Object>.Find, X0, X1
	250 Move X8, 0x22A0000
	251 Move X8, [X8+2256]
	252 Move X21, X0
	253 Move X8, [X8]
	254 Move X0, X8
	255 Call 0x1C17F10
	256 Move X8, 0x22A0000
	257 Move X8, [X8+2320]
	258 Move X1, X19
	259 Move X3, X31
	260 Move X22, X0
	261 Move X2, [X8]
	262 Call Action`1<Object>..ctor, X0, X1, X2
	263 Move X0, [X23]
	264 Call 0x1C17F10
	265 Move X1, X21
	266 Move X2, X22
	267 Move X20, X0
	268 Call RegionPinger..ctor, X0, X1, X2
	269 Move X21, [X19+40]
	270 Move [X31+8], W31
	271 Add X1, X31, 8
	272 Move X0, X21
	273 Move X2, X31
	274 Call Monitor.Enter, X0, X1
	275 Move X0, [X19+40]
	276 Compare X0, 0
	277 JumpIfEqual {337}
	278 Move W2, [X0+24]
	279 Move W8, [X0+28]
	280 Add W8, W8, 1
	281 NotImplemented "Instruction CMP not yet implemented."
	282 Move [X0+24], W31
	283 Move [X0+28], W8
	284 Move X0, [X0+16]
	285 Move W1, W31
	286 Move X3, X31
	287 Call Array.Clear, X0, X1, X2
	288 Move X0, [X19+40]
	289 Compare X0, 0
	290 JumpIfEqual {339}
	291 Move X9, 0x22A0000
	292 Move X9, [X9+2272]
	293 Move W10, [X0+28]
	294 Move X8, [X0+16]
	295 Move X9, [X9]
	296 Add W10, W10, 1
	297 Move [X0+28], W10
	298 Compare X8, 0
	299 JumpIfEqual {338}
	300 NotImplemented "Instruction LDRSW not yet implemented."
	301 Move W11, [X8+24]
	302 NotImplemented "Instruction CMP not yet implemented."
	303 Add W9, W10, 1
	304 Add X8, X8, X10
	305 Move X19, X31
	306 Move [X0+24], W9
	307 Move [X8+32], X20
	308 Move X0, X19
	309 Call RegionHandler.PingEnabledRegions, X0
	310 Move X8, [X9+32]
	311 Move X8, [X8+192]
	312 Move X2, [X8+112]
	313 Move X1, X20
	314 Call List`1<Object>.AddWithResize, X0, X1
	315 Move X19, X31
	316 Move W22, 17
	317 Move W8, [X31+8]
	318 Compare W8, 0
	319 JumpIfEqual {323}
	320 Move X0, X21
	321 Move X1, X31
	322 Call Monitor.Exit, X0
	323 Compare X19, 0
	324 JumpIfNotEqual {335}
	325 NotImplemented "Instruction CMP not yet implemented."
	326 Compare W22, 0
	327 JumpIfNotEqual {83}
	328 Compare X20, 0
	329 JumpIfEqual {333}
	330 Move X0, X20
	331 Call RegionPinger.Start, X0
	332 Move W0, 1
	333 Call 0x1C17F20
	334 Call 0x1C17F28
	335 Move X0, X19
	336 Call 0x1C17F18
	337 Call 0x1C17F20
	338 Call 0x1C17F20
	339 Call 0x1C17F20
	340 Move X22, X0
	341 NotImplemented "Instruction CMP not yet implemented."
	342 Move X0, X22
	343 Call 0x3EB2AD0
	344 Move X19, [X0]
	345 Call 0x3EB2AE0
	346 Move W22, W31
	347 Move X19, X31
	348 Move X22, X0
	349 Move W8, [X31+8]
	350 Compare W8, 0
	351 JumpIfEqual {355}
	352 Move X0, X21
	353 Move X1, X31
	354 Call Monitor.Exit, X0
	355 Compare X19, 0
	356 JumpIfNotEqual {359}
	357 Move X0, X22
	358 Call 0x1D2D690
	359 Move X0, X19
	360 Call 0x1C17F18
	361 Call 0x1991590

Method: System.Void Abort()

Disassembly:
	0x01E5DDD8 LDR X20, [X20 + 0x840]
	0x01E5DDDC TBNZ X8, 0x0, 0x1E5DDF4
	0x01E5DDE0 ADRP X0, 0x229F000
	0x01E5DDE4 LDR X0, [X0 + 0x840]
	0x01E5DDE8 BL 0x1C16CF4
	0x01E5DDEC MOVZ W8, 0x1
	0x01E5DDF0 STRB W8, [X19 + 0x8C]
	0x01E5DDF4 LDR X8, [X20]
	0x01E5DDF8 ADRP X9, 0xFFFFFFFFFEC90000
	0x01E5DDFC LDR V0, [X9 + 0xE48]
	0x01E5DE00 LDP X20, X19, [X31 + 0x10]
	0x01E5DE04 LDR X8, [X8 + 0xB8]
	0x01E5DE08 MOVZ W9, 0xFA0
	0x01E5DE0C STR D0, [X8]
	0x01E5DE10 STR W9, [X8 + 0x8]
	0x01E5DE14 LDR X30, [X31], #0x20
	0x01E5DE18 RET
	0x01E5DE1C B 0x1E5D9F8
	0x01E5DE20 RET
	0x01E5DE24 STP X30, X21, [X31 - 0x20]!
	0x01E5DE28 STP X20, X19, [X31 + 0x10]
	0x01E5DE2C ADRP X20, 0x257C000
	0x01E5DE30 LDRB W8, [X20 + 0x8D]
	0x01E5DE34 MOV X19, X0
	0x01E5DE38 TBNZ X8, 0x0, 0x1E5DE8C
	0x01E5DE3C ADRP X0, 0x2297000
	0x01E5DE40 LDR X0, [X0 + 0xE10]
	0x01E5DE44 BL 0x1C16CF4
	0x01E5DE48 ADRP X0, 0x2297000
	0x01E5DE4C LDR X0, [X0 + 0xE28]
	0x01E5DE50 BL 0x1C16CF4
	0x01E5DE54 ADRP X0, 0x229F000
	0x01E5DE58 LDR X0, [X0 + 0x840]
	0x01E5DE5C BL 0x1C16CF4
	0x01E5DE60 ADRP X0, 0x229E000
	0x01E5DE64 LDR X0, [X0 + 0x708]
	0x01E5DE68 BL 0x1C16CF4
	0x01E5DE6C ADRP X0, 0x229F000
	0x01E5DE70 LDR X0, [X0 + 0x9A0]
	0x01E5DE74 BL 0x1C16CF4
	0x01E5DE78 ADRP X0, 0x2299000
	0x01E5DE7C LDR X0, [X0 + 0xC30]
	0x01E5DE80 BL 0x1C16CF4
	0x01E5DE84 MOVZ W8, 0x1
	0x01E5DE88 STRB W8, [X20 + 0x8D]
	0x01E5DE8C LDR W8, [X19 + 0x10]
	0x01E5DE90 MOV W0, W31
	0x01E5DE94 CMP W8, 0x5
	0x01E5DE98 B.HI 0x1E5E43C
	0x01E5DE9C ADRP X9, 0xFFFFFFFFFECD0000
	0x01E5DEA0 ADD X9, X9, 0xB38
	0x01E5DEA4 ADR X10, 0x14
	0x01E5DEA8 LDRH W11, [X9, X8, LSL #1]
	0x01E5DEAC ADD X10, X10, X11, 0x2, LSL
	0x01E5DEB0 MOVN W8, 0x0
	0x01E5DEB4 BR X10
	0x01E5DEB8 LDR X8, [X19 + 0x20]
	0x01E5DEBC MOVN W9, 0x0
	0x01E5DEC0 STR W9, [X19 + 0x10]
	0x01E5DEC4 CBZ X8, 0x1E5E448
	0x01E5DEC8 ADRP X21, 0x229F000
	0x01E5DECC LDR X21, [X21 + 0x840]
	0x01E5DED0 LDR X20, [X8 + 0x30]
	0x01E5DED4 LDR X0, [X21]
	0x01E5DED8 LDR W9, [X0 + 0xE0]
	0x01E5DEDC CBNZ W9, 0x1E5DEE4
	0x01E5DEE0 BL 0x1C16DFC
	0x01E5DEE4 CBZ X20, 0x1E5E448
	0x01E5DEE8 LDR X8, [X21]
	0x01E5DEEC LDR X8, [X8 + 0xB8]
	0x01E5DEF0 LDR W8, [X8 + 0x8]
	0x01E5DEF4 STR W8, [X20 + 0x28]
	0x01E5DEF8 STR X31, [X19 + 0x28]
	0x01E5DEFC ADRP X8, 0x229E000
	0x01E5DF00 LDR X8, [X8 + 0x708]
	0x01E5DF04 LDR X0, [X8]
	0x01E5DF08 BL 0x1C16F10
	0x01E5DF0C MOV X1, X31
	0x01E5DF10 MOV X20, X0
	0x01E5DF14 BL 0x364BFC4
	0x01E5DF18 LDR X8, [X19 + 0x20]
	0x01E5DF1C STR X20, [X19 + 0x30]
	0x01E5DF20 CBZ X8, 0x1E5E448
	0x01E5DF24 MOV W20, W31
	0x01E5DF28 STR W31, [X8 + 0x10]
	0x01E5DF2C B 0x1E5DF78
	0x01E5DF30 LDR X8, [X19 + 0x20]
	0x01E5DF34 MOVN W9, 0x0
	0x01E5DF38 STR W9, [X19 + 0x10]
	0x01E5DF3C CBNZ X8, 0x1E5E190
	0x01E5DF40 B 0x1E5E448
	0x01E5DF44 MOVN W8, 0x0
	0x01E5DF48 STR W8, [X19 + 0x10]
	0x01E5DF4C B 0x1E5DFC0
	0x01E5DF50 MOVN W8, 0x0
	0x01E5DF54 STR W8, [X19 + 0x10]
	0x01E5DF58 B 0x1E5E000
	0x01E5DF5C LDR X8, [X19 + 0x20]
	0x01E5DF60 MOVN W9, 0x0
	0x01E5DF64 STR W9, [X19 + 0x10]
	0x01E5DF68 CBZ X8, 0x1E5E448
	0x01E5DF6C LDR W9, [X8 + 0x10]
	0x01E5DF70 ADD W20, W9, 0x1
	0x01E5DF74 STR W20, [X8 + 0x10]
	0x01E5DF78 ADRP X21, 0x229F000
	0x01E5DF7C LDR X21, [X21 + 0x840]
	0x01E5DF80 LDR X0, [X21]
	0x01E5DF84 LDR W8, [X0 + 0xE0]
	0x01E5DF88 CBNZ W8, 0x1E5DF94
	0x01E5DF8C BL 0x1C16DFC
	0x01E5DF90 LDR X0, [X21]
	0x01E5DF94 LDR X8, [X0 + 0xB8]
	0x01E5DF98 LDR W8, [X8]
	0x01E5DF9C CMP W20, W8
	0x01E5DFA0 B.GE 0x1E5E370
	0x01E5DFA4 LDR X8, [X19 + 0x20]
	0x01E5DFA8 CBZ X8, 0x1E5E448
	0x01E5DFAC LDRB W8, [X8 + 0x15]
	0x01E5DFB0 CBZ W8, 0x1E5DFC0
	0x01E5DFB4 MOV X20, X31
	0x01E5DFB8 MOVZ W8, 0x1
	0x01E5DFBC B 0x1E5E430
	0x01E5DFC0 LDR X0, [X19 + 0x30]
	0x01E5DFC4 CBZ X0, 0x1E5E448
	0x01E5DFC8 MOV X1, X31
	0x01E5DFCC BL 0x364C2E8
	0x01E5DFD0 LDR X0, [X19 + 0x30]
	0x01E5DFD4 CBZ X0, 0x1E5E448
	0x01E5DFD8 MOV X1, X31
	0x01E5DFDC BL 0x364BFCC
	0x01E5DFE0 LDR X8, [X19 + 0x20]
	0x01E5DFE4 CBZ X8, 0x1E5E214
	0x01E5DFE8 LDR X0, [X8 + 0x20]
	0x01E5DFEC CBZ X0, 0x1E5E218
	0x01E5DFF0 LDR X9, [X0]
	0x01E5DFF4 LDR X1, [X8 + 0x38]
	0x01E5DFF8 LDP X8, X2, [X9 + 0x188]
	0x01E5DFFC BLR X8
	0x01E5E000 LDR X8, [X19 + 0x20]
	0x01E5E004 CBZ X8, 0x1E5E448
	0x01E5E008 LDR X0, [X8 + 0x20]
	0x01E5E00C CBZ X0, 0x1E5E448
	0x01E5E010 LDR X8, [X0]
	0x01E5E014 LDP X9, X1, [X8 + 0x198]
	0x01E5E018 BLR X9
	0x01E5E01C TBNZ X0, 0x0, 0x1E5E090
	0x01E5E020 LDR X0, [X19 + 0x30]
	0x01E5E024 CBZ X0, 0x1E5E448
	0x01E5E028 MOV X1, X31
	0x01E5E02C BL 0x364C19C
	0x01E5E030 ADRP X21, 0x229E000
	0x01E5E034 LDR X21, [X21 + 0x840]
	0x01E5E038 MOV X20, X0
	0x01E5E03C LDR X8, [X21]
	0x01E5E040 LDR W9, [X8 + 0xE0]
	0x01E5E044 CBNZ W9, 0x1E5E054
	0x01E5E048 MOV X0, X8
	0x01E5E04C BL 0x1C16DFC
	0x01E5E050 LDR X8, [X21]
	0x01E5E054 LDR X8, [X8 + 0xB8]
	0x01E5E058 LDRSW X8, [X8 + 0x4]
	0x01E5E05C CMP X20, X8
	0x01E5E060 B.GE 0x1E5E090
	0x01E5E064 ADRP X8, 0x229E000
	0x01E5E068 LDR X8, [X8 + 0x9A0]
	0x01E5E06C LDR X0, [X8]
	0x01E5E070 BL 0x1C16F10
	0x01E5E074 ADRP X8, 0xFFFFFFFFFEC8C000

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+64], X30
	003 Move [X31+72], X23
	004 Move [X31+80], X22
	005 Move [X31+88], X21
	006 Move [X31+96], X20
	007 Move [X31+104], X19
	008 Move X20, 0x257D000
	009 Move W8, [X20+129]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {32}
	015 Move X0, 0x22A0000
	016 Move X0, [X0+2128]
	017 Call 0x1C17CF4
	018 Move X0, 0x22A0000
	019 Move X0, [X0+2136]
	020 Call 0x1C17CF4
	021 Move X0, 0x22A0000
	022 Move X0, [X0+2144]
	023 Call 0x1C17CF4
	024 Move X0, 0x22A0000
	025 Move X0, [X0+2152]
	026 Call 0x1C17CF4
	027 Move X0, 0x2297000
	028 Move X0, [X0+1432]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X20+129], W8
	032 Move [X31+32], X31
	033 Move [X31+40], X31
	034 Move [X31+48], X31
	035 Move W8, [X19+85]
	036 Compare W8, 0
	037 JumpIfEqual {46}
	038 Move X20, [X31+96]
	039 Move X19, [X31+104]
	040 Move X22, [X31+80]
	041 Move X21, [X31+88]
	042 Move X30, [X31+64]
	043 Move X23, [X31+72]
	044 Add X31, X31, 112
	045 Return 
	046 Move X20, [X19+40]
	047 Move W8, 1
	048 Move [X19+85], W8
	049 Move [X31+60], W31
	050 Add X1, X31, 60
	051 Move X0, X20
	052 Move X2, X31
	053 Call Monitor.Enter, X0, X1
	054 Move X0, [X19+40]
	055 Compare X0, 0
	056 JumpIfEqual {136}
	057 Move X8, 0x22A0000
	058 Move X8, [X8+2152]
	059 Move X1, [X8]
	060 Add X8, X31, 8
	061 Call List`1<Object>.GetEnumerator, X0
	062 NotImplemented "Instruction LDUR not yet implemented."
	063 Move X8, [X31+24]
	064 Move X21, 0x22A0000
	065 Move X21, [X21+2136]
	066 Move [X31+2], V0
	067 Move [X31+48], X8
	068 Move W22, 1
	069 Move X1, [X21]
	070 Add X0, X31, 32
	071 Call Enumerator<Object>.MoveNext, X0
	072 Move TEMP, X0
	073 And TEMP, TEMP, 1
	074 Compare TEMP, 1
	075 JumpIfNotEqual {87}
	076 Move X8, [X31+48]
	077 Compare X8, 0
	078 JumpIfEqual {133}
	079 Move X0, [X8+32]
	080 Move [X8+21], W22
	081 Compare X0, 0
	082 JumpIfEqual {69}
	083 Move X8, [X0]
	084 Move X9, [X8+424]
	085 Move X1, [X8+432]
	086 NotImplemented "Instruction BLR not yet implemented."
	087 Move X21, X31
	088 Move W23, 6
	089 Move X8, 0x22A0000
	090 Move X8, [X8+2128]
	091 Move X1, [X8]
	092 Add X0, X31, 32
	093 Call Enumerator<Object>.Dispose, X0
	094 Compare X21, 0
	095 JumpIfNotEqual {137}
	096 NotImplemented "Instruction CMP not yet implemented."
	097 Compare W23, 0
	098 JumpIfNotEqual {101}
	099 Move X22, X31
	100 Move W23, 7
	101 Move X22, X31
	102 Move W8, [X31+60]
	103 Compare W8, 0
	104 JumpIfEqual {108}
	105 Move X0, X20
	106 Move X1, X31
	107 Call Monitor.Exit, X0
	108 Compare X22, 0
	109 JumpIfNotEqual {134}
	110 NotImplemented "Instruction CMP not yet implemented."
	111 Compare W23, 0
	112 JumpIfNotEqual {38}
	113 Move X8, 0x2297000
	114 Move X8, [X8+1432]
	115 Move X20, [X19+88]
	116 Move X0, [X8]
	117 Move W8, [X0+224]
	118 Compare W8, 0
	119 JumpIfNotEqual {121}
	120 Call 0x1C17DFC
	121 Move X0, X20
	122 Move X1, X31
	123 Move X2, X31
	124 Call Object.op_Inequality, X0, X1
	125 Move TEMP, X0
	126 And TEMP, TEMP, 1
	127 Compare TEMP, 1
	128 JumpIfNotEqual {38}
	129 Move X0, [X19+88]
	130 Compare X0, 0
	131 JumpIfEqual {139}
	132 Call MonoBehaviourEmpty.SelfDestroy, X0
	133 Call 0x1C17F20
	134 Move X0, X22
	135 Call 0x1C17F18
	136 Call 0x1C17F20
	137 Move X0, X21
	138 Call 0x1C17F18
	139 Call 0x1C17F20
	140 Move X22, X1
	141 Move X23, X0
	142 Move X22, X1
	143 Move X23, X0
	144 NotImplemented "Instruction CMP not yet implemented."
	145 Move X0, X23
	146 Call 0x3EB2AD0
	147 Move X21, [X0]
	148 Call 0x3EB2AE0
	149 Move W23, W31
	150 Move X21, X31
	151 Move X8, 0x22A0000
	152 Move X8, [X8+2128]
	153 Move X1, [X8]
	154 Add X0, X31, 32
	155 Call Enumerator<Object>.Dispose, X0
	156 Compare X21, 0
	157 JumpIfNotEqual {165}
	158 NotImplemented "Instruction CMP not yet implemented."
	159 Move X0, X23
	160 Call 0x3EB2AD0
	161 Move X22, [X0]
	162 Call 0x3EB2AE0
	163 Move W23, W31
	164 Move X22, X31
	165 Move X0, X21
	166 Call 0x1C17F18
	167 Move X22, X1
	168 Move X23, X0
	169 Move X23, X0
	170 Move W8, [X31+60]
	171 Compare W8, 0
	172 JumpIfEqual {176}
	173 Move X0, X20
	174 Move X1, X31
	175 Call Monitor.Exit, X0
	176 Compare X22, 0
	177 JumpIfNotEqual {180}
	178 Move X0, X23
	179 Call 0x1D2D690
	180 Move X0, X22
	181 Call 0x1C17F18
	182 Call 0x1991590

Method: System.Void OnPreferredRegionPinged(Fusion.Photon.Realtime.Region preferredRegion)

Disassembly:
	0x01E5E09C BL 0x364C2F4
	0x01E5E0A0 LDR X8, [X19 + 0x20]
	0x01E5E0A4 CBZ X8, 0x1E5E448
	0x01E5E0A8 LDR X8, [X8 + 0x20]
	0x01E5E0AC CBZ X8, 0x1E5E448
	0x01E5E0B0 LDRB W8, [X8 + 0x18]
	0x01E5E0B4 CBZ W8, 0x1E5E0D0
	0x01E5E0B8 LDR X0, [X19 + 0x30]
	0x01E5E0BC CBZ X0, 0x1E5E448
	0x01E5E0C0 MOV X1, X31
	0x01E5E0C4 BL 0x364C19C
	0x01E5E0C8 MOV X1, X0
	0x01E5E0CC B 0x1E5E0F4
	0x01E5E0D0 ADRP X20, 0x229E000
	0x01E5E0D4 LDR X20, [X20 + 0x840]
	0x01E5E0D8 LDR X0, [X20]
	0x01E5E0DC LDR W8, [X0 + 0xE0]
	0x01E5E0E0 CBNZ W8, 0x1E5E0EC
	0x01E5E0E4 BL 0x1C16DFC
	0x01E5E0E8 LDR X0, [X20]
	0x01E5E0EC LDR X8, [X0 + 0xB8]
	0x01E5E0F0 LDR W1, [X8 + 0x4]
	0x01E5E0F4 LDR X8, [X19 + 0x20]
	0x01E5E0F8 STR W1, [X19 + 0x38]
	0x01E5E0FC CBZ X8, 0x1E5E448
	0x01E5E100 LDR X0, [X8 + 0x28]
	0x01E5E104 CBZ X0, 0x1E5E448

ISIL:
	001 Move [X31-16], X30
	002 Compare X1, 0
	003 JumpIfEqual {28}
	004 Move W9, [X1+40]
	005 Move W10, [X0+80]
	006 Move X8, X0
	007 NotImplemented "Instruction CMP not yet implemented."
	008 Move V0, [X8+56]
	009 Move V1, [X8+72]
	010 NotImplemented "Instruction SCVTF not yet implemented."
	011 NotImplemented "Instruction SCVTF not yet implemented."
	012 Multiply S0, S1, S0
	013 NotImplemented "Instruction FCMP not yet implemented."
	014 Move X9, [X8+48]
	015 Move [X8+84], W31
	016 Compare X9, 0
	017 JumpIfEqual {28}
	018 Move X3, [X9+24]
	019 Move X0, [X9+64]
	020 Move X2, [X9+40]
	021 Move X1, X8
	022 Move X30, [X31+16]
	023 CallNoReturn X3
	024 Move X0, X8
	025 Move X30, [X31+16]
	026 Call RegionHandler.PingEnabledRegions, X0
	027 Return 
	028 Call 0x1C17F20

Method: System.Boolean PingEnabledRegions()

Disassembly:
	0x01E5D6DC ADRP X0, 0x229F000
	0x01E5D6E0 LDR X0, [X0 + 0x988]
	0x01E5D6E4 BL 0x1C16CF4
	0x01E5D6E8 MOVZ W8, 0x1
	0x01E5D6EC STRB W8, [X19 + 0x8B]
	0x01E5D6F0 CBZ X20, 0x1E5D870
	0x01E5D6F4 ADRP X8, 0x229E000
	0x01E5D6F8 LDR X8, [X8 + 0xFD8]
	0x01E5D6FC MOV X0, X20
	0x01E5D700 MOV X2, X31
	0x01E5D704 LDR X1, [X8]
	0x01E5D708 BL 0x3226F64
	0x01E5D70C TBZ X0, 0x0, 0x1E5D728
	0x01E5D710 MOVZ W1, 0x6
	0x01E5D714 MOV X0, X20
	0x01E5D718 MOV X2, X31
	0x01E5D71C BL 0x322B484
	0x01E5D720 MOV X20, X0
	0x01E5D724 CBZ X0, 0x1E5D870
	0x01E5D728 ADRP X8, 0x229E000
	0x01E5D72C LDR X8, [X8 + 0xFE0]
	0x01E5D730 ADRP X19, 0x2298000
	0x01E5D734 MOV X0, X20
	0x01E5D738 MOV X2, X31
	0x01E5D73C LDR X1, [X8]
	0x01E5D740 LDR X19, [X19 + 0x278]
	0x01E5D744 BL 0x3226F64
	0x01E5D748 TBZ X0, 0x0, 0x1E5D760
	0x01E5D74C MOVZ W1, 0x5
	0x01E5D750 MOV X0, X20
	0x01E5D754 MOV X2, X31
	0x01E5D758 BL 0x322B484
	0x01E5D75C MOV X20, X0
	0x01E5D760 LDR X8, [X19]
	0x01E5D764 LDR X8, [X8 + 0xB8]
	0x01E5D768 LDR X19, [X8]
	0x01E5D76C MOV X0, X31
	0x01E5D770 BL 0x1E37B3C
	0x01E5D774 TBZ X0, 0x0, 0x1E5D780
	0x01E5D778 MOV X19, X20
	0x01E5D77C B 0x1E5D83C
	0x01E5D780 MOV X0, X20
	0x01E5D784 MOV X1, X31
	0x01E5D788 BL 0x369B574
	0x01E5D78C MOV X20, X0
	0x01E5D790 CBZ X0, 0x1E5D874
	0x01E5D794 LDR X8, [X20 + 0x18]
	0x01E5D798 CMP W8, 0x1
	0x01E5D79C B.NE 0x1E5D7BC
	0x01E5D7A0 LDR X0, [X20 + 0x20]
	0x01E5D7A4 CBZ X0, 0x1E5D878
	0x01E5D7A8 LDR X8, [X0]
	0x01E5D7AC LDP X9, X1, [X8 + 0x168]
	0x01E5D7B0 BLR X9
	0x01E5D7B4 MOV X19, X0
	0x01E5D7B8 B 0x1E5D83C
	0x01E5D7BC B.LT 0x1E5D83C
	0x01E5D7C0 ADRP X24, 0x229F000
	0x01E5D7C4 LDR X24, [X24 + 0x988]
	0x01E5D7C8 MOV X22, X31
	0x01E5D7CC AND X8, X8, 0x0
	0x01E5D7D0 ADD X23, X20, 0x20
	0x01E5D7D4 CMP X22, W8, UXTW
	0x01E5D7D8 B.CS 0x1E5D868
	0x01E5D7DC LDR X21, [X23, X22, LSL #3]
	0x01E5D7E0 CBZ X21, 0x1E5D82C
	0x01E5D7E4 LDR X8, [X21]
	0x01E5D7E8 LDP X9, X1, [X8 + 0x168]
	0x01E5D7EC MOV X0, X21
	0x01E5D7F0 BLR X9
	0x01E5D7F4 CBZ X0, 0x1E5D86C
	0x01E5D7F8 LDR X1, [X24]
	0x01E5D7FC MOV X2, X31
	0x01E5D800 BL 0x322BD1C
	0x01E5D804 TBNZ X0, 0x0, 0x1E5D854
	0x01E5D808 MOV X0, X19
	0x01E5D80C MOV X1, X31
	0x01E5D810 BL 0x32277A8
	0x01E5D814 TBZ X0, 0x0, 0x1E5D82C
	0x01E5D818 LDR X8, [X20]
	0x01E5D81C LDP X9, X1, [X8 + 0x168]
	0x01E5D820 MOV X0, X20
	0x01E5D824 BLR X9
	0x01E5D828 MOV X19, X0
	0x01E5D82C LDR W8, [X20 + 0x18]
	0x01E5D830 ADD X22, X22, 0x1
	0x01E5D834 CMP X22, W8, SXTW
	0x01E5D838 B.LT 0x1E5D7D4
	0x01E5D83C MOV X0, X19
	0x01E5D840 LDP X20, X19, [X31 + 0x30]
	0x01E5D844 LDP X22, X21, [X31 + 0x20]
	0x01E5D848 LDP X24, X23, [X31 + 0x10]
	0x01E5D84C LDR X30, [X31], #0x40
	0x01E5D850 RET
	0x01E5D854 LDR X8, [X21]
	0x01E5D858 LDP X9, X1, [X8 + 0x168]
	0x01E5D85C MOV X0, X21
	0x01E5D860 BLR X9
	0x01E5D864 B 0x1E5D7B4
	0x01E5D868 BL 0x1C16F28
	0x01E5D86C BL 0x1C16F20
	0x01E5D870 BL 0x1C16F20
	0x01E5D874 BL 0x1C16F20
	0x01E5D878 BL 0x1C16F20
	0x01E5D87C B 0x1E5D8A8
	0x01E5D880 B 0x1E5D8A8
	0x01E5D884 B 0x1E5D8A8
	0x01E5D888 B 0x1E5D8A8
	0x01E5D88C B 0x1E5D8A8
	0x01E5D890 B 0x1E5D8A8
	0x01E5D894 B 0x1E5D8A8
	0x01E5D898 B 0x1E5D8A8
	0x01E5D89C B 0x1E5D8A8
	0x01E5D8A0 B 0x1E5D8A8
	0x01E5D8A4 B 0x1E5D8A8
	0x01E5D8A8 MOV X20, X0
	0x01E5D8AC CMP W1, 0x1
	0x01E5D8B0 B.NE 0x1E5D90C
	0x01E5D8B4 MOV X0, X20
	0x01E5D8B8 BL 0x3EB1AD0
	0x01E5D8BC MOV X20, X0
	0x01E5D8C0 ADRP X0, 0x2296000
	0x01E5D8C4 LDR X0, [X0 + 0x7D0]
	0x01E5D8C8 BL 0x1C16D08
	0x01E5D8CC LDR X8, [X20]
	0x01E5D8D0 LDR X1, [X8]
	0x01E5D8D4 BL 0x1C17270
	0x01E5D8D8 TBZ X0, 0x0, 0x1E5D8E4
	0x01E5D8DC BL 0x3EB1AE0
	0x01E5D8E0 B 0x1E5D83C
	0x01E5D8E4 MOVZ W0, 0x8
	0x01E5D8E8 BL 0x3EB1AF0
	0x01E5D8EC LDR X8, [X20]
	0x01E5D8F0 STR X8, [X0]
	0x01E5D8F4 ADRP X1, 0x2057000
	0x01E5D8F8 ADD X1, X1, 0xE58
	0x01E5D8FC MOV X2, X31
	0x01E5D900 BL 0x3EB1B00
	0x01E5D904 MOV X20, X0
	0x01E5D908 BL 0x3EB1AE0
	0x01E5D90C MOV X0, X20
	0x01E5D910 BL 0x1D2C690
	0x01E5D914 BL 0x1990590
	0x01E5D918 STP X30, X21, [X31 - 0x20]!
	0x01E5D91C STP X20, X19, [X31 + 0x10]
	0x01E5D920 ADRP X20, 0x257C000
	0x01E5D924 ADRP X21, 0x229F000
	0x01E5D928 LDRB W8, [X20 + 0x89]
	0x01E5D92C LDR X21, [X21 + 0x990]
	0x01E5D930 MOV X19, X0
	0x01E5D934 TBNZ X8, 0x0, 0x1E5D94C
	0x01E5D938 ADRP X0, 0x229F000
	0x01E5D93C LDR X0, [X0 + 0x990]
	0x01E5D940 BL 0x1C16CF4
	0x01E5D944 MOVZ W8, 0x1
	0x01E5D948 STRB W8, [X20 + 0x89]
	0x01E5D94C LDR X0, [X21]
	0x01E5D950 BL 0x1C16F10
	0x01E5D954 MOV X1, X31
	0x01E5D958 MOV X20, X0
	0x01E5D95C BL 0x33BDD8C
	0x01E5D960 STR W31, [X20 + 0x10]
	0x01E5D964 STR X19, [X20 + 0x20]
	0x01E5D968 MOV X0, X20
	0x01E5D96C LDP X20, X19, [X31 + 0x10]
	0x01E5D970 LDP X30, X21, [X31], #0x20
	0x01E5D974 RET
	0x01E5D978 STR X30, [X31 - 0x30]!
	0x01E5D97C STP X22, X21, [X31 + 0x10]
	0x01E5D980 STP X20, X19, [X31 + 0x20]
	0x01E5D984 ADRP X21, 0x257C000
	0x01E5D988 ADRP X22, 0x229F000
	0x01E5D98C LDRB W8, [X21 + 0x90]
	0x01E5D990 LDR X22, [X22 + 0x998]
	0x01E5D994 MOV X20, X1
	0x01E5D998 MOV X19, X0
	0x01E5D99C TBNZ X8, 0x0, 0x1E5D9B4
	0x01E5D9A0 ADRP X0, 0x229F000
	0x01E5D9A4 LDR X0, [X0 + 0x998]
	0x01E5D9A8 BL 0x1C16CF4
	0x01E5D9AC MOVZ W8, 0x1
	0x01E5D9B0 STRB W8, [X21 + 0x90]
	0x01E5D9B4 LDR X0, [X22]
	0x01E5D9B8 BL 0x1C16F10
	0x01E5D9BC MOV X1, X31
	0x01E5D9C0 MOV X21, X0
	0x01E5D9C4 BL 0x33BDD8C
	0x01E5D9C8 CBZ X21, 0x1E5D9F4
	0x01E5D9CC MOV X0, X21
	0x01E5D9D0 STP X20, X19, [X21 + 0x10]
	0x01E5D9D4 BL 0x1E5E530
	0x01E5D9D8 MOV X1, X0
	0x01E5D9DC MOV X0, X19
	0x01E5D9E0 LDP X20, X19, [X31 + 0x20]
	0x01E5D9E4 LDP X22, X21, [X31 + 0x10]
	0x01E5D9E8 MOV X2, X31
	0x01E5D9EC LDR X30, [X31], #0x30
	0x01E5D9F0 B 0x3C366FC
	0x01E5D9F4 BL 0x1C16F20
	0x01E5D9F8 STP X30, X25, [X31 - 0x40]!
	0x01E5D9FC STP X24, X23, [X31 + 0x10]
	0x01E5DA00 STP X22, X21, [X31 + 0x20]
	0x01E5DA04 STP X20, X19, [X31 + 0x30]
	0x01E5DA08 ADRP X20, 0x257C000
	0x01E5DA0C ADRP X24, 0x229F000
	0x01E5DA10 LDRB W8, [X20 + 0x88]
	0x01E5DA14 LDR X24, [X24 + 0x840]
	0x01E5DA18 MOV X19, X0
	0x01E5DA1C TBNZ X8, 0x0, 0x1E5DA58
	0x01E5DA20 ADRP X0, 0x2297000
	0x01E5DA24 LDR X0, [X0 + 0xE10]
	0x01E5DA28 BL 0x1C16CF4
	0x01E5DA2C ADRP X0, 0x2297000
	0x01E5DA30 LDR X0, [X0 + 0xE28]
	0x01E5DA34 BL 0x1C16CF4
	0x01E5DA38 ADRP X0, 0x229F000
	0x01E5DA3C LDR X0, [X0 + 0x840]
	0x01E5DA40 BL 0x1C16CF4
	0x01E5DA44 ADRP X0, 0x229E000
	0x01E5DA48 LDR X0, [X0 + 0x708]

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+64], X30
	003 Move [X31+80], X28
	004 Move [X31+88], X27
	005 Move [X31+96], X26
	006 Move [X31+104], X25
	007 Move [X31+112], X24
	008 Move [X31+120], X23
	009 Move [X31+128], X22
	010 Move [X31+136], X21
	011 Move [X31+144], X20
	012 Move [X31+152], X19
	013 Move X19, 0x257D000
	014 Move W8, [X19+130]
	015 Move X20, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {52}
	020 Move X0, 0x22A0000
	021 Move X0, [X0+2256]
	022 Call 0x1C17CF4
	023 Move X0, 0x229F000
	024 Move X0, [X0+2784]
	025 Call 0x1C17CF4
	026 Move X0, 0x229F000
	027 Move X0, [X0+2792]
	028 Call 0x1C17CF4
	029 Move X0, 0x229F000
	030 Move X0, [X0+2800]
	031 Call 0x1C17CF4
	032 Move X0, 0x22A0000
	033 Move X0, [X0+2272]
	034 Call 0x1C17CF4
	035 Move X0, 0x22A0000
	036 Move X0, [X0+2280]
	037 Call 0x1C17CF4
	038 Move X0, 0x229F000
	039 Move X0, [X0+2824]
	040 Call 0x1C17CF4
	041 Move X0, 0x22A0000
	042 Move X0, [X0+2296]
	043 Call 0x1C17CF4
	044 Move X0, 0x22A0000
	045 Move X0, [X0+2360]
	046 Call 0x1C17CF4
	047 Move X0, 0x22A0000
	048 Move X0, [X0+2112]
	049 Call 0x1C17CF4
	050 Move W8, 1
	051 Move [X19+130], W8
	052 Move [X31+32], X31
	053 Move [X31+40], X31
	054 Move [X31+48], X31
	055 Move X8, [X20+16]
	056 Compare X8, 0
	057 JumpIfEqual {149}
	058 Move W8, [X8+24]
	059 Compare W8, 0
	060 JumpIfEqual {149}
	061 Move X19, [X20+40]
	062 Move [X31+76], W31
	063 Add X1, X31, 76
	064 Move X0, X19
	065 Move X2, X31
	066 Call Monitor.Enter, X0, X1
	067 Move X8, [X20+40]
	068 Compare X8, 0
	069 JumpIfEqual {186}
	070 Move W2, [X8+24]
	071 Move W9, [X8+28]
	072 Add W9, W9, 1
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Move [X8+24], W31
	075 Move [X8+28], W9
	076 Move X0, [X8+16]
	077 Move W1, W31
	078 Move X3, X31
	079 Call Array.Clear, X0, X1, X2
	080 Move X0, [X20+16]
	081 Compare X0, 0
	082 JumpIfEqual {187}
	083 Move X8, 0x229F000
	084 Move X8, [X8+2824]
	085 Move X1, [X8]
	086 Add X8, X31, 8
	087 Call List`1<Object>.GetEnumerator, X0
	088 NotImplemented "Instruction LDUR not yet implemented."
	089 Move X8, [X31+24]
	090 Move X24, 0x229F000
	091 Move X25, 0x22A0000
	092 Move X26, 0x22A0000
	093 Move X27, 0x22A0000
	094 Move X24, [X24+2792]
	095 Move X25, [X25+2256]
	096 Move X26, [X26+2360]
	097 Move X27, [X27+2112]
	098 Move [X31+2], V0
	099 Move [X31+48], X8
	100 Move X28, 0x22A0000
	101 Move X28, [X28+2272]
	102 Move X1, [X24]
	103 Add X0, X31, 32
	104 Call Enumerator<Object>.MoveNext, X0
	105 Move TEMP, X0
	106 And TEMP, TEMP, 1
	107 Compare TEMP, 1
	108 JumpIfNotEqual {150}
	109 Move X22, [X31+48]
	110 Move X0, [X25]
	111 Call 0x1C17F10
	112 Move X2, [X26]
	113 Move X23, X0
	114 Move X1, X20
	115 Move X3, X31
	116 Call Action`1<Object>..ctor, X0, X1, X2
	117 Move X0, [X27]
	118 Call 0x1C17F10
	119 Move X21, X0
	120 Move X1, X22
	121 Move X2, X23
	122 Call RegionPinger..ctor, X0, X1, X2
	123 Move X0, [X20+40]
	124 Compare X0, 0
	125 JumpIfEqual {182}
	126 Move W10, [X0+28]
	127 Move X8, [X0+16]
	128 Move X9, [X28]
	129 Add W10, W10, 1
	130 Move [X0+28], W10
	131 Compare X8, 0
	132 JumpIfEqual {183}
	133 NotImplemented "Instruction LDRSW not yet implemented."
	134 Move W11, [X8+24]
	135 NotImplemented "Instruction CMP not yet implemented."
	136 Add W9, W10, 1
	137 Add X8, X8, X10
	138 Move [X0+24], W9
	139 Move [X8+32], X21
	140 Move X8, [X9+32]
	141 Move X8, [X8+192]
	142 Move X2, [X8+112]
	143 Move X1, X21
	144 Call List`1<Object>.AddWithResize, X0, X1
	145 Compare X21, 0
	146 JumpIfEqual {181}
	147 Move X0, X21
	148 Call RegionPinger.Start, X0
	149 Move W0, W31
	150 Move X21, X31
	151 Move X8, 0x229F000
	152 Move X8, [X8+2784]
	153 Move X1, [X8]
	154 Add X0, X31, 32
	155 Call Enumerator<Object>.Dispose, X0
	156 Compare X21, 0
	157 JumpIfNotEqual {188}
	158 Move X20, X31
	159 Move W8, [X31+76]
	160 Compare W8, 0
	161 JumpIfEqual {165}
	162 Move X0, X19
	163 Move X1, X31
	164 Call Monitor.Exit, X0
	165 Compare X20, 0
	166 JumpIfNotEqual {184}
	167 Move W0, 1
	168 Move X20, [X31+144]
	169 Move X19, [X31+152]
	170 Move X22, [X31+128]
	171 Move X21, [X31+136]
	172 Move X24, [X31+112]
	173 Move X23, [X31+120]
	174 Move X26, [X31+96]
	175 Move X25, [X31+104]
	176 Move X28, [X31+80]
	177 Move X27, [X31+88]
	178 Move X30, [X31+64]
	179 Add X31, X31, 160
	180 Return X0
	181 Call 0x1C17F20
	182 Call 0x1C17F20
	183 Call 0x1C17F20
	184 Move X0, X20
	185 Call 0x1C17F18
	186 Call 0x1C17F20
	187 Call 0x1C17F20
	188 Move X0, X21
	189 Call 0x1C17F18
	190 Move X20, X1
	191 Move X22, X0
	192 Move X22, X0
	193 NotImplemented "Instruction CMP not yet implemented."
	194 Move X0, X22
	195 Call 0x3EB2AD0
	196 Move X21, [X0]
	197 Call 0x3EB2AE0
	198 Move X20, X1
	199 Move X21, X31
	200 Move X8, 0x229F000
	201 Move X8, [X8+2784]
	202 Move X1, [X8]
	203 Add X0, X31, 32
	204 Call Enumerator<Object>.Dispose, X0
	205 Compare X21, 0
	206 JumpIfNotEqual {213}
	207 NotImplemented "Instruction CMP not yet implemented."
	208 Move X0, X22
	209 Call 0x3EB2AD0
	210 Move X20, [X0]
	211 Call 0x3EB2AE0
	212 Move X20, X31
	213 Move X0, X21
	214 Call 0x1C17F18
	215 Move X20, X1
	216 Move X22, X0
	217 Move X22, X0
	218 Move W8, [X31+76]
	219 Compare W8, 0
	220 JumpIfEqual {224}
	221 Move X0, X19
	222 Move X1, X31
	223 Call Monitor.Exit, X0
	224 Compare X20, 0
	225 JumpIfNotEqual {228}
	226 Move X0, X22
	227 Call 0x1D2D690
	228 Move X0, X20
	229 Call 0x1C17F18
	230 Call 0x1991590

Method: System.Void OnRegionDone(Fusion.Photon.Realtime.Region region)

Disassembly:
	0x01E5E108 ADRP X10, 0x2296000
	0x01E5E10C LDR X10, [X10 + 0xE10]
	0x01E5E110 LDR W11, [X0 + 0x1C]
	0x01E5E114 LDR X9, [X0 + 0x10]
	0x01E5E118 LDR X10, [X10]
	0x01E5E11C ADD W11, W11, 0x1
	0x01E5E120 STR W11, [X0 + 0x1C]
	0x01E5E124 CBZ X9, 0x1E5E448
	0x01E5E128 LDRSW X11, [X0 + 0x18]
	0x01E5E12C LDR W12, [X9 + 0x18]
	0x01E5E130 CMP W11, W12
	0x01E5E134 B.CS 0x1E5E14C
	0x01E5E138 ADD W10, W11, 0x1
	0x01E5E13C ADD X9, X9, X11, 0x2, LSL
	0x01E5E140 STR W10, [X0 + 0x18]
	0x01E5E144 STR W1, [X9 + 0x20]
	0x01E5E148 B 0x1E5E160
	0x01E5E14C LDR X8, [X10 + 0x20]
	0x01E5E150 LDR X8, [X8 + 0xC0]
	0x01E5E154 LDR X2, [X8 + 0x70]
	0x01E5E158 BL 0x2FDC70C
	0x01E5E15C LDR X8, [X19 + 0x20]
	0x01E5E160 LDR W9, [X19 + 0x38]
	0x01E5E164 LDP W10, W11, [X19 + 0x28]
	0x01E5E168 ADD W9, W9, W10
	0x01E5E16C ADD W10, W11, 0x1
	0x01E5E170 STP W9, W10, [X19 + 0x28]
	0x01E5E174 CBZ X8, 0x1E5E448
	0x01E5E178 LDR X11, [X8 + 0x30]
	0x01E5E17C CBZ X11, 0x1E5E448
	0x01E5E180 SDIV W9, W9, W10
	0x01E5E184 MOVZ W10, 0x4
	0x01E5E188 STR W9, [X11 + 0x28]
	0x01E5E18C STR W10, [X19 + 0x3C]
	0x01E5E190 LDR X0, [X8 + 0x20]
	0x01E5E194 CBZ X0, 0x1E5E448
	0x01E5E198 LDR X8, [X0]
	0x01E5E19C LDP X9, X1, [X8 + 0x198]
	0x01E5E1A0 BLR X9
	0x01E5E1A4 TBNZ X0, 0x0, 0x1E5E1E8
	0x01E5E1A8 LDR W8, [X19 + 0x3C]
	0x01E5E1AC CMP W8, 0x0
	0x01E5E1B0 B.LE 0x1E5E1E8
	0x01E5E1B4 SUB W8, W8, 0x1
	0x01E5E1B8 STR W8, [X19 + 0x3C]
	0x01E5E1BC ADRP X8, 0x2298000
	0x01E5E1C0 LDR X8, [X8 + 0xC30]
	0x01E5E1C4 LDR X0, [X8]
	0x01E5E1C8 BL 0x1C16F10
	0x01E5E1CC ADRP X8, 0xFFFFFFFFFEC8C000
	0x01E5E1D0 LDR V0, [X8 + 0xBC]
	0x01E5E1D4 MOV X1, X31
	0x01E5E1D8 MOV X20, X0
	0x01E5E1DC BL 0x3C3A634
	0x01E5E1E0 MOVZ W8, 0x3
	0x01E5E1E4 B 0x1E5E430
	0x01E5E1E8 ADRP X8, 0x2298000
	0x01E5E1EC LDR X8, [X8 + 0xC30]
	0x01E5E1F0 LDR X0, [X8]
	0x01E5E1F4 BL 0x1C16F10
	0x01E5E1F8 ADRP X8, 0xFFFFFFFFFEC8C000
	0x01E5E1FC LDR V0, [X8 + 0xBC]
	0x01E5E200 MOV X1, X31
	0x01E5E204 MOV X20, X0
	0x01E5E208 BL 0x3C3A634
	0x01E5E20C MOVZ W8, 0x4
	0x01E5E210 B 0x1E5E430
	0x01E5E214 BL 0x1C16F20
	0x01E5E218 BL 0x1C16F20
	0x01E5E21C B 0x1E5E224
	0x01E5E220 B 0x1E5E224
	0x01E5E224 MOV X20, X0
	0x01E5E228 CMP W1, 0x1
	0x01E5E22C B.NE 0x1E5E478
	0x01E5E230 MOV X0, X20
	0x01E5E234 BL 0x3EB1AD0
	0x01E5E238 MOV X20, X0
	0x01E5E23C ADRP X0, 0x2295000
	0x01E5E240 LDR X0, [X0 + 0x7D0]
	0x01E5E244 BL 0x1C16D08
	0x01E5E248 LDR X8, [X20]
	0x01E5E24C LDR X1, [X8]
	0x01E5E250 BL 0x1C17270
	0x01E5E254 TBZ X0, 0x0, 0x1E5E450
	0x01E5E258 LDR X20, [X20]
	0x01E5E25C BL 0x3EB1AE0
	0x01E5E260 STR X20, [X19 + 0x40]
	0x01E5E264 ADRP X0, 0x2295000
	0x01E5E268 LDR X0, [X0 + 0xAC8]
	0x01E5E26C BL 0x1C16D08
	0x01E5E270 MOVZ W1, 0x6
	0x01E5E274 BL 0x1C16D6C
	0x01E5E278 CBZ X0, 0x1E5E448
	0x01E5E27C MOV X20, X0
	0x01E5E280 ADRP X0, 0x229E000
	0x01E5E284 LDR X0, [X0 + 0x9A8]
	0x01E5E288 BL 0x1C16D08
	0x01E5E28C LDR W8, [X20 + 0x18]
	0x01E5E290 CBZ W8, 0x1E5E44C
	0x01E5E294 STR X0, [X20 + 0x20]
	0x01E5E298 LDR X0, [X19 + 0x40]
	0x01E5E29C CBZ X0, 0x1E5E2B0
	0x01E5E2A0 LDR X8, [X0]
	0x01E5E2A4 LDP X9, X1, [X8 + 0x168]
	0x01E5E2A8 BLR X9
	0x01E5E2AC LDR W8, [X20 + 0x18]
	0x01E5E2B0 CMP W8, 0x1
	0x01E5E2B4 B.LS 0x1E5E44C
	0x01E5E2B8 STR X0, [X20 + 0x28]
	0x01E5E2BC ADRP X0, 0x229E000
	0x01E5E2C0 LDR X0, [X0 + 0x9B0]
	0x01E5E2C4 BL 0x1C16D08
	0x01E5E2C8 LDR W8, [X20 + 0x18]
	0x01E5E2CC CMP W8, 0x2
	0x01E5E2D0 B.LS 0x1E5E44C
	0x01E5E2D4 STR X0, [X20 + 0x30]
	0x01E5E2D8 LDR X0, [X19 + 0x40]
	0x01E5E2DC CBZ X0, 0x1E5E448
	0x01E5E2E0 LDR X8, [X0]
	0x01E5E2E4 LDP X9, X1, [X8 + 0x1C8]
	0x01E5E2E8 BLR X9
	0x01E5E2EC LDR W8, [X20 + 0x18]
	0x01E5E2F0 CMP W8, 0x3
	0x01E5E2F4 B.LS 0x1E5E44C
	0x01E5E2F8 STR X0, [X20 + 0x38]
	0x01E5E2FC ADRP X0, 0x229E000
	0x01E5E300 LDR X0, [X0 + 0x9B8]
	0x01E5E304 BL 0x1C16D08
	0x01E5E308 LDR W8, [X20 + 0x18]
	0x01E5E30C CMP W8, 0x4
	0x01E5E310 B.LS 0x1E5E44C
	0x01E5E314 STR X0, [X20 + 0x40]
	0x01E5E318 LDR X0, [X19 + 0x40]
	0x01E5E31C CBZ X0, 0x1E5E448
	0x01E5E320 LDR X8, [X0]
	0x01E5E324 LDP X9, X1, [X8 + 0x188]
	0x01E5E328 BLR X9
	0x01E5E32C LDR W8, [X20 + 0x18]
	0x01E5E330 CMP W8, 0x5
	0x01E5E334 B.LS 0x1E5E44C
	0x01E5E338 STR X0, [X20 + 0x48]
	0x01E5E33C MOV X0, X20
	0x01E5E340 MOV X1, X31
	0x01E5E344 BL 0x32278CC
	0x01E5E348 MOV X20, X0
	0x01E5E34C ADRP X0, 0x2295000
	0x01E5E350 LDR X0, [X0 + 0xA28]
	0x01E5E354 BL 0x1C16D08
	0x01E5E358 LDR W8, [X0 + 0xE0]
	0x01E5E35C CBNZ W8, 0x1E5E364
	0x01E5E360 BL 0x1C16DFC
	0x01E5E364 MOV X0, X20
	0x01E5E368 MOV X1, X31
	0x01E5E36C BL 0x3C06048
	0x01E5E370 LDR X8, [X19 + 0x20]
	0x01E5E374 CBZ X8, 0x1E5E448
	0x01E5E378 LDR X0, [X8 + 0x20]

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+64], X30
	003 Move [X31+80], X24
	004 Move [X31+88], X23
	005 Move [X31+96], X22
	006 Move [X31+104], X21
	007 Move [X31+112], X20
	008 Move [X31+120], X19
	009 Move X20, 0x257C000
	010 Move W8, [X20+131]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {30}
	016 Move X0, 0x229F000
	017 Move X0, [X0+2128]
	018 Call 0x1C17CF4
	019 Move X0, 0x229F000
	020 Move X0, [X0+2136]
	021 Call 0x1C17CF4
	022 Move X0, 0x229F000
	023 Move X0, [X0+2144]
	024 Call 0x1C17CF4
	025 Move X0, 0x229F000
	026 Move X0, [X0+2152]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X20+131], W8
	030 Move [X31+32], X31
	031 Move [X31+40], X31
	032 Move [X31+48], X31
	033 Move X20, [X19+40]
	034 Move [X31+76], W31
	035 Add X1, X31, 76
	036 Move X0, X20
	037 Move X2, X31
	038 Call Monitor.Enter, X0, X1
	039 Move W8, [X19+84]
	040 Compare W8, 0
	041 JumpIfEqual {74}
	042 Move X0, [X19+40]
	043 Move [X19+32], X31
	044 Compare X0, 0
	045 JumpIfEqual {123}
	046 Move X8, 0x229F000
	047 Move X8, [X8+2152]
	048 Move X1, [X8]
	049 Add X8, X31, 8
	050 Call List`1<Object>.GetEnumerator, X0
	051 Move X21, 0x229F000
	052 Move X24, 0x229F000
	053 NotImplemented "Instruction LDUR not yet implemented."
	054 Move X8, [X31+24]
	055 Move X21, [X21+2136]
	056 Move X24, [X24+2128]
	057 Move [X31+2], V0
	058 Move [X31+48], X8
	059 Move X1, [X21]
	060 Add X0, X31, 32
	061 Call Enumerator<Object>.MoveNext, X0
	062 Move TEMP, X0
	063 And TEMP, TEMP, 1
	064 Compare TEMP, 1
	065 JumpIfNotEqual {76}
	066 Move X8, [X31+48]
	067 Compare X8, 0
	068 JumpIfEqual {120}
	069 Move W8, [X8+20]
	070 Compare W8, 0
	071 JumpIfNotEqual {59}
	072 Move X21, X31
	073 Move W23, 3
	074 Move X22, X31
	075 Move W23, 3
	076 Move X21, X31
	077 Move W23, 7
	078 Move X1, [X24]
	079 Add X0, X31, 32
	080 Call Enumerator<Object>.Dispose, X0
	081 Compare X21, 0
	082 JumpIfNotEqual {124}
	083 NotImplemented "Instruction CMP not yet implemented."
	084 Compare W23, 0
	085 JumpIfNotEqual {89}
	086 Move X22, X31
	087 Move [X19+84], W31
	088 Move W23, 8
	089 Move X22, X31
	090 Move W8, [X31+76]
	091 Compare W8, 0
	092 JumpIfEqual {96}
	093 Move X0, X20
	094 Move X1, X31
	095 Call Monitor.Exit, X0
	096 Compare X22, 0
	097 JumpIfNotEqual {121}
	098 Or W8, W23, 8
	099 NotImplemented "Instruction CMP not yet implemented."
	100 Move W8, [X19+85]
	101 Compare W8, 0
	102 JumpIfNotEqual {111}
	103 Move X8, [X19+48]
	104 Compare X8, 0
	105 JumpIfEqual {126}
	106 Move X9, [X8+24]
	107 Move X0, [X8+64]
	108 Move X2, [X8+40]
	109 Move X1, X19
	110 NotImplemented "Instruction BLR not yet implemented."
	111 Move X20, [X31+112]
	112 Move X19, [X31+120]
	113 Move X22, [X31+96]
	114 Move X21, [X31+104]
	115 Move X24, [X31+80]
	116 Move X23, [X31+88]
	117 Move X30, [X31+64]
	118 Add X31, X31, 128
	119 Return 
	120 Call 0x1C17F20
	121 Move X0, X22
	122 Call 0x1C17F18
	123 Call 0x1C17F20
	124 Move X0, X21
	125 Call 0x1C17F18
	126 Call 0x1C17F20
	127 Move X22, X1
	128 Move X23, X0
	129 Move X22, X1
	130 Move X23, X0
	131 NotImplemented "Instruction CMP not yet implemented."
	132 Move X0, X23
	133 Call 0x3EB2AD0
	134 Move X21, [X0]
	135 Call 0x3EB2AE0
	136 Move W23, W31
	137 Move X21, X31
	138 Move X1, [X24]
	139 Add X0, X31, 32
	140 Call Enumerator<Object>.Dispose, X0
	141 Compare X21, 0
	142 JumpIfNotEqual {150}
	143 NotImplemented "Instruction CMP not yet implemented."
	144 Move X0, X23
	145 Call 0x3EB2AD0
	146 Move X22, [X0]
	147 Call 0x3EB2AE0
	148 Move W23, W31
	149 Move X22, X31
	150 Move X0, X21
	151 Call 0x1C17F18
	152 Move X22, X1
	153 Move X23, X0
	154 Move X23, X0
	155 Move W8, [X31+76]
	156 Compare W8, 0
	157 JumpIfEqual {161}
	158 Move X0, X20
	159 Move X1, X31
	160 Call Monitor.Exit, X0
	161 Compare X22, 0
	162 JumpIfNotEqual {165}
	163 Move X0, X23
	164 Call 0x1D2D690
	165 Move X0, X22
	166 Call 0x1C17F18
	167 Call 0x1991590

