Type: Fusion.FusionRealtimeProxy/<GetEnabledRegions>d__3

Method: System.Void .ctor()

Disassembly:
	0x01E44A48 LDR X8, [X8]
	0x01E44A4C CMP X9, X8

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Void MoveNext()

Disassembly:
	0x01E44A50 B.NE 0x1E44A68
	0x01E44A54 BL 0x1C16E08
	0x01E44A58 LDRB W0, [X0]
	0x01E44A5C LDP X20, X19, [X31 + 0x10]
	0x01E44A60 LDR X30, [X31], #0x20
	0x01E44A64 RET
	0x01E44A68 ADRP X0, 0x22B7000
	0x01E44A6C LDR X0, [X0 + 0xC08]
	0x01E44A70 BL 0x1C16D08
	0x01E44A74 BL 0x1C16F10
	0x01E44A78 MOV X1, X31
	0x01E44A7C MOV X19, X0
	0x01E44A80 BL 0x337DE5C
	0x01E44A84 ADRP X0, 0x22B7000
	0x01E44A88 LDR X0, [X0 + 0xC28]
	0x01E44A8C BL 0x1C16D08
	0x01E44A90 MOV X1, X0
	0x01E44A94 MOV X0, X19
	0x01E44A98 BL 0x1C16DEC
	0x01E44A9C BL 0x1C16F20
	0x01E44AA0 STR X30, [X31 - 0x30]!
	0x01E44AA4 STP X22, X21, [X31 + 0x10]
	0x01E44AA8 STP X20, X19, [X31 + 0x20]
	0x01E44AAC ADRP X22, 0x2594000
	0x01E44AB0 ADRP X21, 0x22B7000
	0x01E44AB4 ADRP X20, 0x22AF000
	0x01E44AB8 LDRB W8, [X22 + 0xFB3]
	0x01E44ABC LDR X21, [X21 + 0xC18]
	0x01E44AC0 LDR X20, [X20 + 0xB58]
	0x01E44AC4 MOV W19, W0
	0x01E44AC8 TBNZ X8, 0x0, 0x1E44AEC
	0x01E44ACC ADRP X0, 0x22AF000
	0x01E44AD0 LDR X0, [X0 + 0xB58]
	0x01E44AD4 BL 0x1C16CF4
	0x01E44AD8 ADRP X0, 0x22B7000
	0x01E44ADC LDR X0, [X0 + 0xC18]
	0x01E44AE0 BL 0x1C16CF4
	0x01E44AE4 MOVZ W8, 0x1
	0x01E44AE8 STRB W8, [X22 + 0xFB3]
	0x01E44AEC LDR X0, [X21]
	0x01E44AF0 AND W21, W19, 0x1
	0x01E44AF4 BL 0x1C16F10
	0x01E44AF8 MOV X1, X31
	0x01E44AFC MOV X19, X0
	0x01E44B00 STR X31, [X0 + 0x10]
	0x01E44B04 BL 0x33BDD8C
	0x01E44B08 LDR X0, [X20]
	0x01E44B0C ADD X1, X31, 0xC
	0x01E44B10 STRB W21, [X31 + 0xC]
	0x01E44B14 BL 0x1C16E04
	0x01E44B18 STR X0, [X19 + 0x10]
	0x01E44B1C MOV X0, X19
	0x01E44B20 LDP X20, X19, [X31 + 0x20]
	0x01E44B24 LDP X22, X21, [X31 + 0x10]
	0x01E44B28 LDR X30, [X31], #0x30
	0x01E44B2C RET
	0x01E44B30 STR X30, [X31 - 0x20]!
	0x01E44B34 STP X20, X19, [X31 + 0x10]
	0x01E44B38 ADRP X20, 0x2594000
	0x01E44B3C LDRB W8, [X20 + 0xFB4]
	0x01E44B40 MOV X19, X0
	0x01E44B44 TBNZ X8, 0x0, 0x1E44B74
	0x01E44B48 ADRP X0, 0x22AF000
	0x01E44B4C LDR X0, [X0 + 0xB58]
	0x01E44B50 BL 0x1C16CF4
	0x01E44B54 ADRP X0, 0x22AF000
	0x01E44B58 LDR X0, [X0 + 0x758]
	0x01E44B5C BL 0x1C16CF4
	0x01E44B60 ADRP X0, 0x22B1000
	0x01E44B64 LDR X0, [X0 + 0x278]
	0x01E44B68 BL 0x1C16CF4
	0x01E44B6C MOVZ W8, 0x1
	0x01E44B70 STRB W8, [X20 + 0xFB4]
	0x01E44B74 CBZ X19, 0x1E44BC0
	0x01E44B78 ADRP X8, 0x22AF000
	0x01E44B7C LDR X8, [X8 + 0x758]
	0x01E44B80 MOVZ W0, 0x1
	0x01E44B84 LDR X9, [X8]
	0x01E44B88 LDR X8, [X19]
	0x01E44B8C CMP X8, X9
	0x01E44B90 B.EQ 0x1E44BC4
	0x01E44B94 ADRP X9, 0x22B1000
	0x01E44B98 LDR X9, [X9 + 0x278]
	0x01E44B9C LDR X9, [X9]
	0x01E44BA0 CMP X8, X9
	0x01E44BA4 B.EQ 0x1E44BC4
	0x01E44BA8 ADRP X9, 0x22AF000
	0x01E44BAC LDR X9, [X9 + 0xB58]
	0x01E44BB0 LDR X9, [X9]
	0x01E44BB4 CMP X8, X9
	0x01E44BB8 CSET W0, EQ
	0x01E44BBC B 0x1E44BC4
	0x01E44BC0 MOV W0, W31
	0x01E44BC4 LDP X20, X19, [X31 + 0x10]
	0x01E44BC8 LDR X30, [X31], #0x20
	0x01E44BCC RET
	0x01E44BD0 STR X30, [X31 - 0x20]!
	0x01E44BD4 STP X20, X19, [X31 + 0x10]
	0x01E44BD8 ADRP X20, 0x2594000
	0x01E44BDC LDRB W8, [X20 + 0xFB5]
	0x01E44BE0 MOV X19, X0
	0x01E44BE4 TBNZ X8, 0x0, 0x1E44C14
	0x01E44BE8 ADRP X0, 0x22AF000
	0x01E44BEC LDR X0, [X0 + 0xB58]
	0x01E44BF0 BL 0x1C16CF4
	0x01E44BF4 ADRP X0, 0x22AF000
	0x01E44BF8 LDR X0, [X0 + 0x758]
	0x01E44BFC BL 0x1C16CF4
	0x01E44C00 ADRP X0, 0x22B1000
	0x01E44C04 LDR X0, [X0 + 0x278]
	0x01E44C08 BL 0x1C16CF4
	0x01E44C0C MOVZ W8, 0x1
	0x01E44C10 STRB W8, [X20 + 0xFB5]
	0x01E44C14 CBZ X19, 0x1E44C98
	0x01E44C18 ADRP X8, 0x22AF000
	0x01E44C1C LDR X8, [X8 + 0x758]
	0x01E44C20 LDR X9, [X8]
	0x01E44C24 LDR X8, [X19]
	0x01E44C28 CMP X8, X9
	0x01E44C2C B.EQ 0x1E44C70
	0x01E44C30 ADRP X9, 0x22B1000
	0x01E44C34 LDR X9, [X9 + 0x278]
	0x01E44C38 LDR X9, [X9]
	0x01E44C3C CMP X8, X9
	0x01E44C40 B.EQ 0x1E44C88
	0x01E44C44 ADRP X9, 0x22AF000
	0x01E44C48 LDR X9, [X9 + 0xB58]
	0x01E44C4C LDR X9, [X9]
	0x01E44C50 CMP X8, X9
	0x01E44C54 B.NE 0x1E44C98
	0x01E44C58 MOV X0, X19
	0x01E44C5C BL 0x1C16E08
	0x01E44C60 LDRB W0, [X0]
	0x01E44C64 LDP X20, X19, [X31 + 0x10]
	0x01E44C68 LDR X30, [X31], #0x20
	0x01E44C6C B 0x1E44AA0
	0x01E44C70 MOV X0, X19
	0x01E44C74 BL 0x1C16E08
	0x01E44C78 LDR W0, [X0]
	0x01E44C7C LDP X20, X19, [X31 + 0x10]
	0x01E44C80 LDR X30, [X31], #0x20
	0x01E44C84 B 0x1E44884
	0x01E44C88 MOV X0, X19
	0x01E44C8C LDP X20, X19, [X31 + 0x10]
	0x01E44C90 LDR X30, [X31], #0x20
	0x01E44C94 B 0x1E449A4
	0x01E44C98 ADRP X0, 0x22B7000
	0x01E44C9C LDR X0, [X0 + 0x578]
	0x01E44CA0 BL 0x1C16D08
	0x01E44CA4 BL 0x1C16F10
	0x01E44CA8 MOV X19, X0
	0x01E44CAC ADRP X0, 0x22B7000
	0x01E44CB0 LDR X0, [X0 + 0xC30]
	0x01E44CB4 BL 0x1C16D08
	0x01E44CB8 MOV X1, X0
	0x01E44CBC MOV X0, X19
	0x01E44CC0 MOV X2, X31
	0x01E44CC4 BL 0x3314A68
	0x01E44CC8 ADRP X0, 0x22B7000
	0x01E44CCC LDR X0, [X0 + 0xC38]
	0x01E44CD0 BL 0x1C16D08
	0x01E44CD4 MOV X1, X0
	0x01E44CD8 MOV X0, X19
	0x01E44CDC BL 0x1C16DEC
	0x01E44CE0 STP X30, X21, [X31 - 0x20]!
	0x01E44CE4 STP X20, X19, [X31 + 0x10]
	0x01E44CE8 ADRP X20, 0x2594000
	0x01E44CEC LDRB W8, [X20 + 0xFB6]
	0x01E44CF0 MOV X19, X0
	0x01E44CF4 TBNZ X8, 0x0, 0x1E44D18
	0x01E44CF8 ADRP X0, 0x22B7000
	0x01E44CFC LDR X0, [X0 + 0xC40]
	0x01E44D00 BL 0x1C16CF4
	0x01E44D04 ADRP X0, 0x22B7000
	0x01E44D08 LDR X0, [X0 + 0xC48]
	0x01E44D0C BL 0x1C16CF4
	0x01E44D10 MOVZ W8, 0x1
	0x01E44D14 STRB W8, [X20 + 0xFB6]
	0x01E44D18 LDR X19, [X19 + 0x10]
	0x01E44D1C CBZ X19, 0x1E44D60
	0x01E44D20 ADRP X20, 0x22B7000
	0x01E44D24 ADRP X21, 0x22B7000
	0x01E44D28 LDR X20, [X20 + 0xC48]
	0x01E44D2C LDR X21, [X21 + 0xC40]
	0x01E44D30 MOV X0, X19
	0x01E44D34 MOV X1, X31
	0x01E44D38 BL 0x33BE520
	0x01E44D3C LDR X8, [X20]
	0x01E44D40 LDR X1, [X21]
	0x01E44D44 MOV X2, X19
	0x01E44D48 LDP X20, X19, [X31 + 0x10]
	0x01E44D4C MOV X3, X0
	0x01E44D50 MOV X0, X8
	0x01E44D54 MOV X4, X31
	0x01E44D58 LDP X30, X21, [X31], #0x20
	0x01E44D5C B 0x3227C18
	0x01E44D60 BL 0x1C16F20
	0x01E44D64 STR X30, [X31 - 0x30]!
	0x01E44D68 STP X22, X21, [X31 + 0x10]
	0x01E44D6C STP X20, X19, [X31 + 0x20]
	0x01E44D70 ADRP X20, 0x2594000
	0x01E44D74 ADRP X22, 0x22AF000
	0x01E44D78 LDRB W8, [X20 + 0xFB7]
	0x01E44D7C LDR X22, [X22 + 0x598]
	0x01E44D80 MOV X19, X0
	0x01E44D84 TBNZ X8, 0x0, 0x1E44DE4
	0x01E44D88 ADRP X0, 0x22B7000
	0x01E44D8C LDR X0, [X0 + 0xC50]
	0x01E44D90 BL 0x1C16CF4
	0x01E44D94 ADRP X0, 0x22B7000
	0x01E44D98 LDR X0, [X0 + 0xC58]
	0x01E44D9C BL 0x1C16CF4
	0x01E44DA0 ADRP X0, 0x22AF000
	0x01E44DA4 LDR X0, [X0 + 0xA58]
	0x01E44DA8 BL 0x1C16CF4
	0x01E44DAC ADRP X0, 0x22AF000
	0x01E44DB0 LDR X0, [X0 + 0x598]
	0x01E44DB4 BL 0x1C16CF4
	0x01E44DB8 ADRP X0, 0x22B7000
	0x01E44DBC LDR X0, [X0 + 0xC60]
	0x01E44DC0 BL 0x1C16CF4
	0x01E44DC4 ADRP X0, 0x22AF000
	0x01E44DC8 LDR X0, [X0 + 0x6C0]
	0x01E44DCC BL 0x1C16CF4
	0x01E44DD0 ADRP X0, 0x22B7000
	0x01E44DD4 LDR X0, [X0 + 0xC68]
	0x01E44DD8 BL 0x1C16CF4
	0x01E44DDC MOVZ W8, 0x1
	0x01E44DE0 STRB W8, [X20 + 0xFB7]
	0x01E44DE4 LDR X0, [X22]
	0x01E44DE8 LDR X20, [X19 + 0x188]
	0x01E44DEC LDR W8, [X0 + 0xE0]
	0x01E44DF0 CBNZ W8, 0x1E44DF8
	0x01E44DF4 BL 0x1C16DFC
	0x01E44DF8 MOV X0, X20
	0x01E44DFC MOV X1, X31
	0x01E44E00 MOV X2, X31
	0x01E44E04 BL 0x3C3883C
	0x01E44E08 TBZ X0, 0x0, 0x1E44F0C
	0x01E44E0C ADRP X8, 0x22B7000
	0x01E44E10 LDR X8, [X8 + 0xC60]
	0x01E44E14 MOVZ W1, 0x1
	0x01E44E18 LDR X0, [X8]
	0x01E44E1C BL 0x1C16D6C
	0x01E44E20 ADRP X8, 0x22AF000
	0x01E44E24 LDR X8, [X8 + 0x6C0]
	0x01E44E28 ADRP X9, 0x22B7000
	0x01E44E2C MOV X20, X0
	0x01E44E30 LDR X8, [X8]
	0x01E44E34 LDR X9, [X9 + 0xC50]
	0x01E44E38 LDR W10, [X8 + 0xE0]
	0x01E44E3C LDR X21, [X9]
	0x01E44E40 CBNZ W10, 0x1E44E4C
	0x01E44E44 MOV X0, X8
	0x01E44E48 BL 0x1C16DFC
	0x01E44E4C MOV X0, X21
	0x01E44E50 MOV X1, X31
	0x01E44E54 BL 0x338C698
	0x01E44E58 CBZ X20, 0x1E44F24
	0x01E44E5C MOV X21, X0
	0x01E44E60 CBZ X0, 0x1E44E78
	0x01E44E64 LDR X8, [X20]
	0x01E44E68 MOV X0, X21
	0x01E44E6C LDR X1, [X8 + 0x40]
	0x01E44E70 BL 0x1C16E00
	0x01E44E74 CBZ X0, 0x1E44F2C
	0x01E44E78 LDR W8, [X20 + 0x18]
	0x01E44E7C CBZ W8, 0x1E44F28
	0x01E44E80 STR X21, [X20 + 0x20]
	0x01E44E84 ADRP X8, 0x22AF000
	0x01E44E88 LDR X8, [X8 + 0xA58]
	0x01E44E8C LDR X0, [X8]
	0x01E44E90 BL 0x1C16F10
	0x01E44E94 ADRP X8, 0x22B7000
	0x01E44E98 LDR X8, [X8 + 0xC68]
	0x01E44E9C MOV X2, X20
	0x01E44EA0 MOV X3, X31
	0x01E44EA4 MOV X21, X0
	0x01E44EA8 LDR X1, [X8]
	0x01E44EAC BL 0x3C35A8C
	0x01E44EB0 CBZ X21, 0x1E44F24
	0x01E44EB4 MOVZ W1, 0x8
	0x01E44EB8 MOV X0, X21
	0x01E44EBC MOV X2, X31
	0x01E44EC0 BL 0x3C396EC
	0x01E44EC4 LDR X0, [X22]
	0x01E44EC8 LDR W8, [X0 + 0xE0]
	0x01E44ECC CBNZ W8, 0x1E44ED4
	0x01E44ED0 BL 0x1C16DFC
	0x01E44ED4 MOV X0, X21
	0x01E44ED8 MOV X1, X31
	0x01E44EDC BL 0x3C39674
	0x01E44EE0 ADRP X8, 0x22B7000
	0x01E44EE4 LDR X8, [X8 + 0xC58]
	0x01E44EE8 MOV X0, X21
	0x01E44EEC LDR X1, [X8]
	0x01E44EF0 BL 0x21E52E4
	0x01E44EF4 STR X0, [X19 + 0x188]
	0x01E44EF8 CBZ X0, 0x1E44F24
	0x01E44EFC MOVZ W8, 0xEA60
	0x01E44F00 STR X19, [X0 + 0x20]
	0x01E44F04 STR W8, [X0 + 0x2C]
	0x01E44F08 B 0x1E44F14
	0x01E44F0C LDR X0, [X19 + 0x188]
	0x01E44F10 CBZ X0, 0x1E44F24
	0x01E44F14 LDP X20, X19, [X31 + 0x20]
	0x01E44F18 LDP X22, X21, [X31 + 0x10]
	0x01E44F1C LDR X30, [X31], #0x30
	0x01E44F20 B 0x1E44F38
	0x01E44F24 BL 0x1C16F20
	0x01E44F28 BL 0x1C16F28
	0x01E44F2C BL 0x1C16F44
	0x01E44F30 MOV X1, X31
	0x01E44F34 BL 0x1C16DEC
	0x01E44F38 STP X30, X21, [X31 - 0x20]!
	0x01E44F3C STP X20, X19, [X31 + 0x10]
	0x01E44F40 ADRP X20, 0x2594000
	0x01E44F44 LDRB W8, [X20 + 0xFD1]
	0x01E44F48 MOV X19, X0
	0x01E44F4C TBNZ X8, 0x0, 0x1E44F88
	0x01E44F50 ADRP X0, 0x22B7000
	0x01E44F54 LDR X0, [X0 + 0xC70]
	0x01E44F58 BL 0x1C16CF4
	0x01E44F5C ADRP X0, 0x22B7000
	0x01E44F60 LDR X0, [X0 + 0xC78]
	0x01E44F64 BL 0x1C16CF4
	0x01E44F68 ADRP X0, 0x22B7000
	0x01E44F6C LDR X0, [X0 + 0xC80]
	0x01E44F70 BL 0x1C16CF4
	0x01E44F74 ADRP X0, 0x22B7000
	0x01E44F78 LDR X0, [X0 + 0xC88]
	0x01E44F7C BL 0x1C16CF4
	0x01E44F80 MOVZ W8, 0x1
	0x01E44F84 STRB W8, [X20 + 0xFD1]
	0x01E44F88 MOV X0, X31
	0x01E44F8C BL 0x1E37B3C
	0x01E44F90 TBZ X0, 0x0, 0x1E44FC4
	0x01E44F94 LDRB W8, [X19 + 0x34]
	0x01E44F98 CBNZ W8, 0x1E45028
	0x01E44F9C ADRP X8, 0x22B7000
	0x01E44FA0 LDR X8, [X8 + 0xC88]
	0x01E44FA4 MOV X0, X19
	0x01E44FA8 MOV X2, X31
	0x01E44FAC LDR X1, [X8]
	0x01E44FB0 ADRP X8, 0xFFFFFFFFFECA6000
	0x01E44FB4 LDR V0, [X8 + 0x200]
	0x01E44FB8 MOV V1.16B, V0.16B
	0x01E44FBC BL 0x3C36318
	0x01E44FC0 B 0x1E45028
	0x01E44FC4 LDR X8, [X19 + 0x40]
	0x01E44FC8 CBNZ X8, 0x1E45030
	0x01E44FCC ADRP X8, 0x22B7000
	0x01E44FD0 LDR X8, [X8 + 0xC78]
	0x01E44FD4 LDR X0, [X8]
	0x01E44FD8 BL 0x1C16F10
	0x01E44FDC ADRP X8, 0x22B7000
	0x01E44FE0 LDR X8, [X8 + 0xC70]
	0x01E44FE4 MOV X1, X19
	0x01E44FE8 MOV X3, X31
	0x01E44FEC MOV X20, X0
	0x01E44FF0 LDR X2, [X8]
	0x01E44FF4 BL 0x33ECC14
	0x01E44FF8 ADRP X8, 0x22B7000
	0x01E44FFC LDR X8, [X8 + 0xC80]
	0x01E45000 LDR X0, [X8]
	0x01E45004 BL 0x1C16F10
	0x01E45008 MOVZ W3, 0x32
	0x01E4500C MOVZ W4, 0x32
	0x01E45010 MOV X1, X20
	0x01E45014 MOV X2, X31
	0x01E45018 MOV X5, X31
	0x01E4501C MOV X21, X0
	0x01E45020 BL 0x33EBB48
	0x01E45024 STR X21, [X19 + 0x40]
	0x01E45028 MOVZ W8, 0x1
	0x01E4502C STRB W8, [X19 + 0x34]
	0x01E45030 LDP X20, X19, [X31 + 0x10]
	0x01E45034 LDP X30, X21, [X31], #0x20
	0x01E45038 RET
	0x01E4503C STP X30, X21, [X31 - 0x20]!
	0x01E45040 STP X20, X19, [X31 + 0x10]
	0x01E45044 ADRP X20, 0x2593000
	0x01E45048 ADRP X21, 0x22AE000
	0x01E4504C LDRB W8, [X20 + 0xFB8]
	0x01E45050 LDR X21, [X21 + 0x598]
	0x01E45054 MOV X19, X0
	0x01E45058 TBNZ X8, 0x0, 0x1E45070
	0x01E4505C ADRP X0, 0x22AE000
	0x01E45060 LDR X0, [X0 + 0x598]
	0x01E45064 BL 0x1C16CF4
	0x01E45068 MOVZ W8, 0x1
	0x01E4506C STRB W8, [X20 + 0xFB8]
	0x01E45070 LDR X0, [X21]
	0x01E45074 LDR X20, [X19 + 0x188]
	0x01E45078 LDR W8, [X0 + 0xE0]
	0x01E4507C CBNZ W8, 0x1E45084
	0x01E45080 BL 0x1C16DFC
	0x01E45084 MOV X0, X20
	0x01E45088 MOV X1, X31
	0x01E4508C MOV X2, X31
	0x01E45090 BL 0x3C354F8
	0x01E45094 TBZ X0, 0x0, 0x1E450DC
	0x01E45098 LDR X0, [X19 + 0x188]
	0x01E4509C CBZ X0, 0x1E450E8
	0x01E450A0 BL 0x1E450EC
	0x01E450A4 LDR X0, [X19 + 0x188]
	0x01E450A8 CBZ X0, 0x1E450E8
	0x01E450AC MOV X1, X31
	0x01E450B0 BL 0x3C32ECC
	0x01E450B4 LDR X8, [X21]
	0x01E450B8 MOV X20, X0
	0x01E450BC LDR W9, [X8 + 0xE0]
	0x01E450C0 CBNZ W9, 0x1E450CC
	0x01E450C4 MOV X0, X8
	0x01E450C8 BL 0x1C16DFC
	0x01E450CC MOV X0, X20
	0x01E450D0 MOV X1, X31
	0x01E450D4 BL 0x3C394A8
	0x01E450D8 STR X31, [X19 + 0x188]
	0x01E450DC LDP X20, X19, [X31 + 0x10]
	0x01E450E0 LDP X30, X21, [X31], #0x20
	0x01E450E4 RET
	0x01E450E8 BL 0x1C16F20
	0x01E450EC STR X30, [X31 - 0x20]!
	0x01E450F0 STP X20, X19, [X31 + 0x10]
	0x01E450F4 ADRP X20, 0x2593000
	0x01E450F8 LDRB W8, [X20 + 0xFD2]
	0x01E450FC MOV X19, X0
	0x01E45100 TBNZ X8, 0x0, 0x1E45118
	0x01E45104 ADRP X0, 0x22B6000
	0x01E45108 LDR X0, [X0 + 0xC88]
	0x01E4510C BL 0x1C16CF4
	0x01E45110 MOVZ W8, 0x1
	0x01E45114 STRB W8, [X20 + 0xFD2]
	0x01E45118 MOV X0, X31
	0x01E4511C BL 0x1E37B3C
	0x01E45120 TBZ X0, 0x0, 0x1E45148
	0x01E45124 LDRB W8, [X19 + 0x34]
	0x01E45128 CBZ W8, 0x1E4515C
	0x01E4512C ADRP X8, 0x22B6000
	0x01E45130 LDR X8, [X8 + 0xC88]
	0x01E45134 MOV X0, X19
	0x01E45138 MOV X2, X31
	0x01E4513C LDR X1, [X8]
	0x01E45140 BL 0x3C36448
	0x01E45144 B 0x1E4515C
	0x01E45148 LDR X0, [X19 + 0x40]
	0x01E4514C CBZ X0, 0x1E4515C
	0x01E45150 MOV X1, X31
	0x01E45154 BL 0x33EBF78
	0x01E45158 STR X31, [X19 + 0x40]
	0x01E4515C STRB W31, [X19 + 0x34]
	0x01E45160 LDP X20, X19, [X31 + 0x10]
	0x01E45164 LDR X30, [X31], #0x20
	0x01E45168 RET
	0x01E4516C STR X30, [X31 - 0x30]!
	0x01E45170 STP X22, X21, [X31 + 0x10]
	0x01E45174 STP X20, X19, [X31 + 0x20]
	0x01E45178 CBZ X1, 0x1E451E4
	0x01E4517C MOV X22, X1
	0x01E45180 MOV X21, X0
	0x01E45184 MOV X0, X1
	0x01E45188 MOV X1, X31
	0x01E4518C BL 0x3505B04
	0x01E45190 LDRB W19, [X22 + 0x10]
	0x01E45194 MOV W20, W0
	0x01E45198 MOV X0, X22
	0x01E4519C MOV X1, X31
	0x01E451A0 BL 0x3505B88
	0x01E451A4 LDR X8, [X21 + 0x1A0]
	0x01E451A8 CBZ X8, 0x1E451D4
	0x01E451AC MOV X3, X0
	0x01E451B0 LDR X5, [X8 + 0x18]
	0x01E451B4 LDR X0, [X8 + 0x40]
	0x01E451B8 LDR X4, [X8 + 0x28]
	0x01E451BC MOV W1, W20
	0x01E451C0 MOV W2, W19
	0x01E451C4 LDP X20, X19, [X31 + 0x20]
	0x01E451C8 LDP X22, X21, [X31 + 0x10]
	0x01E451CC LDR X30, [X31], #0x30
	0x01E451D0 BR X5
	0x01E451D4 LDP X20, X19, [X31 + 0x20]
	0x01E451D8 LDP X22, X21, [X31 + 0x10]
	0x01E451DC LDR X30, [X31], #0x30
	0x01E451E0 RET
	0x01E451E4 BL 0x1C16F20
	0x01E451E8 STP X30, X25, [X31 - 0x40]!
	0x01E451EC STP X24, X23, [X31 + 0x10]
	0x01E451F0 STP X22, X21, [X31 + 0x20]
	0x01E451F4 STP X20, X19, [X31 + 0x30]
	0x01E451F8 MOV W21, W5
	0x01E451FC MOV W23, W4
	0x01E45200 MOV X24, X3
	0x01E45204 MOV W20, W2
	0x01E45208 MOV W22, W1
	0x01E4520C MOV X19, X0
	0x01E45210 BL 0x1E4546C
	0x01E45214 TBZ X0, 0x0, 0x1E45274
	0x01E45218 LDR W8, [X19 + 0x90]
	0x01E4521C CMP W8, 0x9
	0x01E45220 B.NE 0x1E45274
	0x01E45224 LDR X8, [X19 + 0x110]
	0x01E45228 CBZ X8, 0x1E45274
	0x01E4522C LDR X0, [X19 + 0x10]
	0x01E45230 CBZ X0, 0x1E45330
	0x01E45234 MOV X1, X31

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+80], X30
	003 Move [X31+96], X26
	004 Move [X31+104], X25
	005 Move [X31+112], X24
	006 Move [X31+120], X23
	007 Move [X31+128], X22
	008 Move [X31+136], X21
	009 Move [X31+144], X20
	010 Move [X31+152], X19
	011 Move X20, 0x2595000
	012 Move W8, [X20+4010]
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {89}
	018 Move X0, 0x22B8000
	019 Move X0, [X0+2752]
	020 Call 0x1C17CF4
	021 Move X0, 0x22B8000
	022 Move X0, [X0+2760]
	023 Call 0x1C17CF4
	024 Move X0, 0x22B8000
	025 Move X0, [X0+2768]
	026 Call 0x1C17CF4
	027 Move X0, 0x22B8000
	028 Move X0, [X0+2776]
	029 Call 0x1C17CF4
	030 Move X0, 0x22B8000
	031 Move X0, [X0+2720]
	032 Call 0x1C17CF4
	033 Move X0, 0x22B8000
	034 Move X0, [X0+2784]
	035 Call 0x1C17CF4
	036 Move X0, 0x22B8000
	037 Move X0, [X0+2792]
	038 Call 0x1C17CF4
	039 Move X0, 0x22B8000
	040 Move X0, [X0+2800]
	041 Call 0x1C17CF4
	042 Move X0, 0x22B8000
	043 Move X0, [X0+2808]
	044 Call 0x1C17CF4
	045 Move X0, 0x22B8000
	046 Move X0, [X0+2816]
	047 Call 0x1C17CF4
	048 Move X0, 0x22B8000
	049 Move X0, [X0+2824]
	050 Call 0x1C17CF4
	051 Move X0, 0x22B8000
	052 Move X0, [X0+2832]
	053 Call 0x1C17CF4
	054 Move X0, 0x22B8000
	055 Move X0, [X0+2840]
	056 Call 0x1C17CF4
	057 Move X0, 0x22B8000
	058 Move X0, [X0+2848]
	059 Call 0x1C17CF4
	060 Move X0, 0x22B8000
	061 Move X0, [X0+2856]
	062 Call 0x1C17CF4
	063 Move X0, 0x22B8000
	064 Move X0, [X0+2864]
	065 Call 0x1C17CF4
	066 Move X0, 0x22B8000
	067 Move X0, [X0+2872]
	068 Call 0x1C17CF4
	069 Move X0, 0x22B8000
	070 Move X0, [X0+2880]
	071 Call 0x1C17CF4
	072 Move X0, 0x22B8000
	073 Move X0, [X0+2888]
	074 Call 0x1C17CF4
	075 Move X0, 0x22B8000
	076 Move X0, [X0+2896]
	077 Call 0x1C17CF4
	078 Move X0, 0x22B8000
	079 Move X0, [X0+2904]
	080 Call 0x1C17CF4
	081 Move X0, 0x22B8000
	082 Move X0, [X0+2912]
	083 Call 0x1C17CF4
	084 Move X0, 0x22B1000
	085 Move X0, [X0+1976]
	086 Call 0x1C17CF4
	087 Move W8, 1
	088 Move [X20+4010], W8
	089 Move [X31+88], X31
	090 Move [X31+64], X31
	091 Move [X31+72], X31
	092 Move [X31+56], X31
	093 Move X24, 0x22B8000
	094 Move W25, [X19+16]
	095 Move X24, [X24+2720]
	096 Compare W25, 0
	097 JumpIfEqual {114}
	098 NotImplemented "Instruction CMP not yet implemented."
	099 NotImplemented "Instruction CMP not yet implemented."
	100 Move X8, [X19+160]
	101 Move TEMP, 0
	102 Not TEMP
	103 Move W25, TEMP
	104 Move [X31+56], X8
	105 Move [X19+160], X31
	106 Move [X19+16], W25
	107 Move X8, [X19+152]
	108 Move TEMP, 0
	109 Not TEMP
	110 Move W25, TEMP
	111 Move [X31+64], X8
	112 Move [X19+152], X31
	113 Move [X19+16], W25
	114 Move X8, [X19+144]
	115 Move TEMP, 0
	116 Not TEMP
	117 Move W9, TEMP
	118 Move [X31+88], X8
	119 Move [X19+144], X31
	120 Move [X19+16], W9
	121 Move X8, 0x22B8000
	122 Move X8, [X8+2872]
	123 Add X0, X31, 88
	124 Move X1, [X8]
	125 Call TaskAwaiter`1<Object>.GetResult, X0
	126 Move X20, X0
	127 Move [X19+96], X0
	128 Add X20, X19, 64
	129 Move X0, X20
	130 Move X1, X31
	131 Call PhotonAppSettings.TryGetGlobal, X0
	132 Move X8, [X19+48]
	133 Move TEMP, X0
	134 And TEMP, TEMP, 1
	135 Compare TEMP, 1
	136 JumpIfNotEqual {147}
	137 Compare X8, 0
	138 JumpIfNotEqual {149}
	139 Move X8, [X20]
	140 Compare X8, 0
	141 JumpIfEqual {450}
	142 Move X8, [X8+32]
	143 Compare X8, 0
	144 JumpIfEqual {451}
	145 Move X8, [X8+24]
	146 Move [X19+48], X8
	147 Compare X8, 0
	148 JumpIfEqual {392}
	149 Move X0, X31
	150 Call Time.get_time
	151 Move X8, 0x22B8000
	152 Move X8, [X8+2808]
	153 Move S2, 10
	154 Move X8, [X8]
	155 Move X8, [X8+184]
	156 Move V1, [X8]
	157 Add S1, S1, S2
	158 NotImplemented "Instruction FCMP not yet implemented."
	159 Move X20, [X8+8]
	160 Compare X20, 0
	161 JumpIfEqual {206}
	162 Move X8, 0x22B1000
	163 Move X8, [X8+1976]
	164 Move X0, [X8]
	165 Move W8, [X0+224]
	166 Compare W8, 0
	167 JumpIfNotEqual {169}
	168 Call 0x1C17DFC
	169 Move X8, 0x22B8000
	170 Move X8, [X8+2912]
	171 Move X1, [X8]
	172 Move X0, X20
	173 Call Task.FromResult, X0
	174 Compare X0, 0
	175 JumpIfEqual {449}
	176 Move X8, 0x22B8000
	177 Move X8, [X8+2904]
	178 Move X1, [X8]
	179 Call Task`1<Object>.GetAwaiter, X0
	180 Move X8, 0x22B8000
	181 Move X8, [X8+2880]
	182 Move [X31+88], X0
	183 Move X1, [X8]
	184 Add X0, X31, 88
	185 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	186 Move TEMP, X0
	187 And TEMP, TEMP, 1
	188 Compare TEMP, 1
	189 JumpIfEqual {121}
	190 Move [X19+16], W31
	191 Move X8, [X31+88]
	192 Move [X19+144], X8
	193 Move X0, [X24]
	194 Move [X31+72], X19
	195 Move W8, [X0+224]
	196 Compare W8, 0
	197 JumpIfNotEqual {199}
	198 Call 0x1C17DFC
	199 Move X8, 0x22B8000
	200 Move X8, [X8+2760]
	201 Add X0, X19, 24
	202 Move X3, [X8]
	203 Add X1, X31, 88
	204 Add X2, X31, 72
	205 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	206 Move X8, 0x22B8000
	207 Move X8, [X8+2856]
	208 Move X0, [X8]
	209 Call 0x1C17F10
	210 Move X20, X0
	211 Move W1, W31
	212 Call LoadBalancingClient..ctor, X0, X1
	213 Compare X20, 0
	214 JumpIfEqual {447}
	215 Move X8, [X19+48]
	216 Move [X20+32], X8
	217 Move X3, [X19+56]
	218 Move [X19+72], X20
	219 Move W1, 1
	220 Move W2, 1
	221 Move X0, X20
	222 Move X4, X31
	223 Call LoadBalancingClientAsyncExtensions.GetRegionsAsync, X0, X1, X2, X3
	224 Compare X0, 0
	225 JumpIfEqual {448}
	226 Move X8, 0x22B8000
	227 Move X8, [X8+2896]
	228 Move X1, [X8]
	229 Call Task`1<Object>.GetAwaiter, X0
	230 Move X8, 0x22B8000
	231 Move X8, [X8+2888]
	232 Move [X31+64], X0
	233 Move X1, [X8]
	234 Add X0, X31, 64
	235 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	236 Move TEMP, X0
	237 And TEMP, TEMP, 1
	238 Compare TEMP, 1
	239 JumpIfNotEqual {423}
	240 Move X8, 0x22B8000
	241 Move X8, [X8+2864]
	242 Add X0, X31, 64
	243 Move X1, [X8]
	244 Call TaskAwaiter`1<Object>.GetResult, X0
	245 Move X8, [X19+72]
	246 Move [X19+80], X0
	247 Move [X19+104], X31
	248 Move W1, 1
	249 Move X0, X8
	250 Move X2, X31
	251 Move X3, X31
	252 Call LoadBalancingClientAsyncExtensions.DisconnectAsync, X0, X1, X2
	253 Compare X0, 0
	254 JumpIfEqual {443}
	255 Move X1, X31
	256 Call Task.GetAwaiter, X0
	257 Move [X31+56], X0
	258 Add X0, X31, 56
	259 Move X1, X31
	260 Call TaskAwaiter.get_IsCompleted, X0
	261 Move TEMP, X0
	262 And TEMP, TEMP, 1
	263 Compare TEMP, 1
	264 JumpIfNotEqual {375}
	265 Add X0, X31, 56
	266 Move X1, X31
	267 Call TaskAwaiter.GetResult, X0
	268 Move X26, 0x22B8000
	269 Move X26, [X26+2848]
	270 Move X0, [X26]
	271 Call 0x1C17F10
	272 Move X8, 0x22B8000
	273 Move X8, [X8+2832]
	274 Move X20, X0
	275 Move X1, [X8]
	276 Call List`1<RegionInfo>..ctor, X0
	277 Move X8, [X19+80]
	278 Move [X19+88], X20
	279 Compare X8, 0
	280 JumpIfEqual {393}
	281 Move X0, [X8+16]
	282 Compare X0, 0
	283 JumpIfEqual {444}
	284 Move X8, 0x22B8000
	285 Move X8, [X8+2824]
	286 Move X1, [X8]
	287 Add X8, X31, 8
	288 Call List`1<Object>.GetEnumerator, X0
	289 NotImplemented "Instruction LDUR not yet implemented."
	290 Move X8, [X31+24]
	291 Move X20, 0x22B8000
	292 Move X20, [X20+2792]
	293 Move [X31+2], V0
	294 Move [X31+48], X8
	295 Move [X19+128], X8
	296 Move [X19+7], V0
	297 Move X21, 0x22B8000
	298 Move X21, [X21+2816]
	299 Add X22, X19, 112
	300 Move X1, [X20]
	301 Move X0, X22
	302 Call Enumerator<Object>.MoveNext, X0
	303 Move TEMP, X0
	304 And TEMP, TEMP, 1
	305 Compare TEMP, 1
	306 JumpIfNotEqual {336}
	307 Move X8, [X19+128]
	308 Move [X19+136], X8
	309 Compare X8, 0
	310 JumpIfEqual {441}
	311 Move X0, [X19+88]
	312 Compare X0, 0
	313 JumpIfEqual {442}
	314 Move W10, [X0+28]
	315 Move X1, [X8+16]
	316 Move W2, [X8+40]
	317 Move X8, [X0+16]
	318 Move X9, [X21]
	319 Add W10, W10, 1
	320 Move [X0+28], W10
	321 Compare X8, 0
	322 JumpIfEqual {440}
	323 NotImplemented "Instruction LDRSW not yet implemented."
	324 Move W11, [X8+24]
	325 NotImplemented "Instruction CMP not yet implemented."
	326 Add W9, W10, 1
	327 Add X8, X8, X10
	328 Move [X0+24], W9
	329 Move [X8+32], X1
	330 Move [X8+40], X2
	331 Move X8, [X9+32]
	332 Move X8, [X8+192]
	333 Move X3, [X8+112]
	334 Call List`1<RegionInfo>.AddWithResize, X0, X1
	335 Move [X19+136], X31
	336 Move X21, X31
	337 Move W20, 25
	338 Move TEMP, X25
	339 And TEMP, TEMP, -2147483648
	340 Compare TEMP, -2147483648
	341 JumpIfNotEqual {347}
	342 Move X8, 0x22B8000
	343 Move X8, [X8+2784]
	344 Move X1, [X8]
	345 Move X0, X22
	346 Call Enumerator<Object>.Dispose, X0
	347 Compare X21, 0
	348 JumpIfNotEqual {445}
	349 NotImplemented "Instruction CMP not yet implemented."
	350 Compare W20, 0
	351 JumpIfNotEqual {412}
	352 Move [X22], X31
	353 Move [X22+8], X31
	354 Move [X22+16], X31
	355 Move X21, [X19+88]
	356 Move X0, [X26]
	357 Call 0x1C17F10
	358 Move X8, 0x22B8000
	359 Move X8, [X8+2840]
	360 Move X20, X0
	361 Move X2, [X8]
	362 Move X1, X21
	363 Call List`1<RegionInfo>..ctor, X0, X1
	364 Move X21, 0x22B8000
	365 Move X21, [X21+2808]
	366 Move X8, [X21]
	367 Move X8, [X8+184]
	368 Move [X8+8], X20
	369 Move X0, X31
	370 Call Time.get_unscaledTime
	371 Move X8, [X21]
	372 Move X8, [X8+184]
	373 Move [X8], S0
	374 Move X20, [X19+88]
	375 Move W8, 2
	376 Move [X19+16], W8
	377 Move X8, [X31+56]
	378 Move [X19+160], X8
	379 Move X0, [X24]
	380 Move [X31+72], X19
	381 Move W8, [X0+224]
	382 Compare W8, 0
	383 JumpIfNotEqual {385}
	384 Call 0x1C17DFC
	385 Move X8, 0x22B8000
	386 Move X8, [X8+2768]
	387 Add X0, X19, 24
	388 Move X3, [X8]
	389 Add X1, X31, 56
	390 Add X2, X31, 72
	391 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	392 Move X20, X31
	393 Move TEMP, 1
	394 Not TEMP
	395 Move W8, TEMP
	396 NotImplemented "Instruction MOVI not yet implemented."
	397 Move [X19+16], W8
	398 Move [X19+64], V0
	399 Move [X19+72], V0
	400 Move X0, [X24]
	401 Move X21, 0x22B8000
	402 Add X19, X19, 24
	403 Move W8, [X0+224]
	404 Move X21, [X21+2776]
	405 Compare W8, 0
	406 JumpIfNotEqual {408}
	407 Call 0x1C17DFC
	408 Move X2, [X21]
	409 Move X0, X19
	410 Move X1, X20
	411 Call AsyncTaskMethodBuilder`1<Object>.SetResult, X0, X1
	412 Move X20, [X31+144]
	413 Move X19, [X31+152]
	414 Move X22, [X31+128]
	415 Move X21, [X31+136]
	416 Move X24, [X31+112]
	417 Move X23, [X31+120]
	418 Move X26, [X31+96]
	419 Move X25, [X31+104]
	420 Move X30, [X31+80]
	421 Add X31, X31, 160
	422 Return 
	423 Move W8, 1
	424 Move [X19+16], W8
	425 Move X8, [X31+64]
	426 Move [X19+152], X8
	427 Move X0, [X24]
	428 Move [X31+72], X19
	429 Move W8, [X0+224]
	430 Compare W8, 0
	431 JumpIfNotEqual {433}
	432 Call 0x1C17DFC
	433 Move X8, 0x22B7000
	434 Move X8, [X8+2752]
	435 Add X0, X19, 24
	436 Move X3, [X8]
	437 Add X1, X31, 64
	438 Add X2, X31, 72
	439 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	440 Call 0x1C17F20
	441 Call 0x1C17F20
	442 Call 0x1C17F20
	443 Call 0x1C17F20
	444 Call 0x1C17F20
	445 Move X0, X21
	446 Call 0x1C17F18
	447 Call 0x1C17F20
	448 Call 0x1C17F20
	449 Call 0x1C17F20
	450 Call 0x1C17F20
	451 Call 0x1C17F20
	452 Move X20, X1
	453 Move X23, X0
	454 Move X20, X1
	455 Move X23, X0
	456 NotImplemented "Instruction CMP not yet implemented."
	457 Move X0, X23
	458 Call 0x3EB2AD0
	459 Move X21, [X0]
	460 Call 0x3EB2AE0
	461 Move W20, W31
	462 Move TEMP, X25
	463 And TEMP, TEMP, -2147483648
	464 Compare TEMP, -2147483648
	465 JumpIfNotEqual {347}
	466 Move X21, X31
	467 Move TEMP, X25
	468 And TEMP, TEMP, -2147483648
	469 Compare TEMP, -2147483648
	470 JumpIfNotEqual {476}
	471 Move X8, 0x22B7000
	472 Move X8, [X8+2784]
	473 Move X1, [X8]
	474 Move X0, X22
	475 Call Enumerator<Object>.Dispose, X0
	476 Compare X21, 0
	477 JumpIfNotEqual {524}
	478 NotImplemented "Instruction CMP not yet implemented."
	479 Move X0, X23
	480 Call 0x3EB2AD0
	481 Move X20, X0
	482 Move X0, 0x22AF000
	483 Move X0, [X0+2000]
	484 Call 0x1C17D08
	485 Move X8, [X20]
	486 Move X1, [X8]
	487 Call 0x1C18270
	488 Move TEMP, X0
	489 And TEMP, TEMP, 1
	490 Compare TEMP, 1
	491 JumpIfNotEqual {516}
	492 Move X20, [X20]
	493 Call 0x3EB2AE0
	494 Move TEMP, 1
	495 Not TEMP
	496 Move W8, TEMP
	497 NotImplemented "Instruction MOVI not yet implemented."
	498 Move [X19+16], W8
	499 Move [X19+64], V0
	500 Move [X19+72], V0
	501 Move X0, 0x22B7000
	502 Move X0, [X0+2720]
	503 Add X21, X19, 24
	504 Call 0x1C17D08
	505 Move W8, [X0+224]
	506 Compare W8, 0
	507 JumpIfNotEqual {509}
	508 Call 0x1C17DFC
	509 Move X0, 0x22B7000
	510 Move X0, [X0+2920]
	511 Call 0x1C17D08
	512 Move X2, X0
	513 Move X0, X21
	514 Move X1, X20
	515 Call AsyncTaskMethodBuilder`1<Object>.SetException, X0, X1
	516 Move W0, 8
	517 Call 0x3EB2AF0
	518 Move X8, [X20]
	519 Move [X0], X8
	520 Move X1, 0x2070000
	521 Add X1, X1, 3672
	522 Move X2, X31
	523 Call 0x3EB2B00
	524 Move X0, X21
	525 Call 0x1C17F18
	526 Move X20, X1
	527 Move X23, X0
	528 Move TEMP, X25
	529 And TEMP, TEMP, -2147483648
	530 Compare TEMP, -2147483648
	531 JumpIfNotEqual {476}
	532 Move X23, X0
	533 Call 0x3EB2AE0
	534 Move X0, X23
	535 Call 0x1D2D690
	536 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x01E45694 MOV X1, X0

ISIL:
	001 Return 

