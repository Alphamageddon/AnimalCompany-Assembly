Type: Photon.Voice.Unity.VoiceConnection/<>c__DisplayClass70_0

Method: System.Void .ctor()

Disassembly:
	0x0357F928 B.LT 0x357F7FC
	0x0357F92C B 0x357F934

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Void <InstantiateSpeakerPrefab>b__0(Photon.Voice.Unity.Speaker s)

Disassembly:
	0x03580298 CBZ X1, 0x35802B0
	0x0358029C MOV X0, X19
	0x035802A0 LDP X20, X19, [X31 + 0x20]
	0x035802A4 LDP X22, X21, [X31 + 0x10]
	0x035802A8 LDR X30, [X31], #0x30
	0x035802AC B 0x3580C94
	0x035802B0 LDP X20, X19, [X31 + 0x20]
	0x035802B4 LDP X22, X21, [X31 + 0x10]
	0x035802B8 LDR X30, [X31], #0x30
	0x035802BC RET
	0x035802C0 BL 0x1C16F20
	0x035802C4 LDRB W0, [X0 + 0x35]
	0x035802C8 RET
	0x035802CC LDRB W9, [X0 + 0x35]
	0x035802D0 AND W8, W1, 0x1
	0x035802D4 CMP W9, W8
	0x035802D8 B.NE 0x35802E0
	0x035802DC RET
	0x035802E0 STRB W8, [X0 + 0x35]
	0x035802E4 B 0x357FF78
	0x035802E8 LDRB W0, [X0 + 0x36]
	0x035802EC RET
	0x035802F0 LDRB W9, [X0 + 0x36]
	0x035802F4 AND W8, W1, 0x1
	0x035802F8 CMP W9, W8
	0x035802FC B.NE 0x3580304
	0x03580300 RET
	0x03580304 STRB W8, [X0 + 0x36]
	0x03580308 B 0x357FF78
	0x0358030C LDRB W0, [X0 + 0x2A]
	0x03580310 RET
	0x03580314 LDRB W9, [X0 + 0x2A]
	0x03580318 AND W8, W1, 0x1
	0x0358031C CMP W9, W8
	0x03580320 B.NE 0x3580328
	0x03580324 RET
	0x03580328 STRB W8, [X0 + 0x2A]
	0x0358032C B 0x357FF78
	0x03580330 LDR W0, [X0 + 0x2C]
	0x03580334 RET
	0x03580338 LDR W8, [X0 + 0x2C]
	0x0358033C CMP W8, W1
	0x03580340 B.NE 0x3580348
	0x03580344 RET
	0x03580348 STR W1, [X0 + 0x2C]
	0x0358034C B 0x357FF78
	0x03580350 LDR W0, [X0 + 0x30]
	0x03580354 RET
	0x03580358 LDR W8, [X0 + 0x30]
	0x0358035C CMP W8, W1
	0x03580360 B.NE 0x3580368
	0x03580364 RET
	0x03580368 STR W1, [X0 + 0x30]
	0x0358036C B 0x357FF78
	0x03580370 LDRB W0, [X0 + 0x34]
	0x03580374 RET
	0x03580378 STR X30, [X31 - 0x30]!
	0x0358037C STP X22, X21, [X31 + 0x10]
	0x03580380 STP X20, X19, [X31 + 0x20]
	0x03580384 ADRP X22, 0xE5F000
	0x03580388 ADRP X21, 0xB78000
	0x0358038C ADRP X20, 0xBB6000
	0x03580390 LDRB W8, [X22 + 0xED0]
	0x03580394 LDR X21, [X21 + 0x408]
	0x03580398 LDR X20, [X20 + 0x628]
	0x0358039C MOV X19, X0
	0x035803A0 TBNZ X8, 0x0, 0x3580400
	0x035803A4 ADRP X0, 0xB73000
	0x035803A8 LDR X0, [X0 + 0x970]
	0x035803AC BL 0x1C16CF4
	0x035803B0 ADRP X0, 0xB78000
	0x035803B4 LDR X0, [X0 + 0x408]
	0x035803B8 BL 0x1C16CF4
	0x035803BC ADRP X0, 0xB78000
	0x035803C0 LDR X0, [X0 + 0x348]
	0x035803C4 BL 0x1C16CF4
	0x035803C8 ADRP X0, 0xB73000
	0x035803CC LDR X0, [X0 + 0x9D0]
	0x035803D0 BL 0x1C16CF4
	0x035803D4 ADRP X0, 0xB7C000
	0x035803D8 LDR X0, [X0 + 0xA48]
	0x035803DC BL 0x1C16CF4
	0x035803E0 ADRP X0, 0xBB6000
	0x035803E4 LDR X0, [X0 + 0x628]
	0x035803E8 BL 0x1C16CF4
	0x035803EC ADRP X0, 0xBB6000
	0x035803F0 LDR X0, [X0 + 0x630]
	0x035803F4 BL 0x1C16CF4
	0x035803F8 MOVZ W8, 0x1
	0x035803FC STRB W8, [X22 + 0xED0]
	0x03580400 MOV X0, X19
	0x03580404 BL 0x35738F8
	0x03580408 LDR X0, [X21]
	0x0358040C BL 0x1C16F10
	0x03580410 LDR X2, [X20]
	0x03580414 MOV X1, X19
	0x03580418 MOV X3, X31
	0x0358041C MOV X20, X0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0xE60000
	008 Move W8, [X20+3779]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {28}
	014 Move X0, 0xB79000
	015 Move X0, [X0+840]
	016 Call 0x1C17CF4
	017 Move X0, 0xB74000
	018 Move X0, [X0+2512]
	019 Call 0x1C17CF4
	020 Move X0, 0xB74000
	021 Move X0, [X0+1432]
	022 Call 0x1C17CF4
	023 Move X0, 0xBB7000
	024 Move X0, [X0+1464]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X20+3779], W8
	028 Move X8, [X19+16]
	029 Compare X8, 0
	030 JumpIfEqual {112}
	031 Move X8, [X8+64]
	032 Compare X8, 0
	033 JumpIfEqual {112}
	034 Move X9, 0xB74000
	035 Move X9, [X9+2512]
	036 Move X20, [X8+24]
	037 Move W1, 1
	038 Move X0, [X9]
	039 Call 0x1C17D6C
	040 Move X8, [X19+24]
	041 Compare X8, 0
	042 JumpIfEqual {112}
	043 Move X21, X0
	044 Move X0, X8
	045 Move X1, X31
	046 Call Object.get_name, X0
	047 Compare X21, 0
	048 JumpIfEqual {112}
	049 Move X22, X0
	050 Compare X0, 0
	051 JumpIfEqual {58}
	052 Move X8, [X21]
	053 Move X0, X22
	054 Move X1, [X8+64]
	055 Call 0x1C17E00
	056 Compare X0, 0
	057 JumpIfEqual {114}
	058 Move W8, [X21+24]
	059 Compare W8, 0
	060 JumpIfEqual {113}
	061 Move [X21+32], X22
	062 Compare X20, 0
	063 JumpIfEqual {112}
	064 Move X9, 0xB79000
	065 Move X10, 0xBB7000
	066 Move X8, [X20]
	067 Move X9, [X9+840]
	068 Move X10, [X10+1464]
	069 Move X23, 0xB74000
	070 Move X1, [X9]
	071 NotImplemented "Instruction LDRH not yet implemented."
	072 Move X22, [X10]
	073 Move X23, [X23+1432]
	074 Compare X9, 0
	075 JumpIfEqual {82}
	076 Move X10, [X8+176]
	077 Add X10, X10, 8
	078 NotImplemented "Instruction LDUR not yet implemented."
	079 NotImplemented "Instruction CMP not yet implemented."
	080 Subtract X9, X9, 1
	081 Add X10, X10, 16
	082 Move W2, 1
	083 Move X0, X20
	084 Call 0x1C5D788
	085 Move W9, [X10]
	086 Add W9, W9, 1
	087 Add X8, X8, W9
	088 Add X0, X8, 312
	089 Move X8, [X0]
	090 Move X4, [X0+8]
	091 Move W1, 3
	092 Move X0, X20
	093 Move X2, X22
	094 Move X3, X21
	095 NotImplemented "Instruction BLR not yet implemented."
	096 Move X0, [X23]
	097 Move X19, [X19+24]
	098 Move W8, [X0+224]
	099 Compare W8, 0
	100 JumpIfNotEqual {102}
	101 Call 0x1C17DFC
	102 Move X0, X19
	103 Move X20, [X31+32]
	104 Move X19, [X31+40]
	105 Move X22, [X31+16]
	106 Move X21, [X31+24]
	107 Move X1, X31
	108 Move X30, [X31+48]
	109 Move X23, [X31+56]
	110 Call Object.Destroy, X0
	111 Return 
	112 Call 0x1C17F20
	113 Call 0x1C17F28
	114 Call 0x1C17F44
	115 Move X1, X31
	116 Call 0x1C17DEC

