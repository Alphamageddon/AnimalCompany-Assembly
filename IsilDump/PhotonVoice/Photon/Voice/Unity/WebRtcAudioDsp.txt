Type: Photon.Voice.Unity.WebRtcAudioDsp

Method: System.Boolean get_AEC()

Disassembly:
	0x03580F70 MOV X0, X19
	0x03580F74 MOV X1, X21

ISIL:
	001 Move W0, [X0+40]
	002 Return X0

Method: System.Void set_AEC(System.Boolean value)

Disassembly:
	0x0357BC80 SUBS X9, X9, 0x1
	0x0357BC84 ADD X10, X10, 0x10
	0x0357BC88 B.NE 0x357BC74
	0x0357BC8C MOVZ W2, 0x1
	0x0357BC90 MOV X0, X21
	0x0357BC94 BL 0x1C5C788
	0x0357BC98 B 0x357BD68

ISIL:
	001 Move W9, [X0+40]
	002 And W8, W1, 1
	003 NotImplemented "Instruction CMP not yet implemented."
	004 Return 
	005 Move [X0+40], W8
	006 Call WebRtcAudioDsp.applyToProc, X0
	007 Return 

Method: System.Boolean get_AecHighPass()

Disassembly:
	0x035810DC B.NE 0x35810C8
	0x035810E0 MOVZ W2, 0x1

ISIL:
	001 Move W0, [X0+41]
	002 Return X0

Method: System.Void set_AecHighPass(System.Boolean value)

Disassembly:
	0x035810E4 MOV X0, X21
	0x035810E8 BL 0x1C5C788
	0x035810EC B 0x3581100
	0x035810F0 LDR W9, [X10]
	0x035810F4 ADD W9, W9, 0x1
	0x035810F8 ADD X8, X8, W9, 0x4, SXTW
	0x035810FC ADD X0, X8, 0x138

ISIL:
	001 Move W9, [X0+41]
	002 And W8, W1, 1
	003 NotImplemented "Instruction CMP not yet implemented."
	004 Return 
	005 Move [X0+41], W8
	006 Call WebRtcAudioDsp.applyToProc, X0
	007 Return 

Method: System.Int32 get_ReverseStreamDelayMs()

Disassembly:
	0x03581100 LDP X8, X4, [X0]
	0x03581104 MOVZ W1, 0x3

ISIL:
	001 Move W0, [X0+56]
	002 Return X0

Method: System.Void set_ReverseStreamDelayMs(System.Int32 value)

Disassembly:
	0x03581108 MOV X0, X21
	0x0358110C MOV X2, X23
	0x03581110 MOV X3, X22
	0x03581114 BLR X8
	0x03581118 MOV X0, X20
	0x0358111C MOV W1, W31

ISIL:
	001 Move W8, [X0+56]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 Return 
	004 Move [X0+56], W1
	005 Call WebRtcAudioDsp.applyToProc, X0
	006 Return 

Method: System.Boolean get_NoiseSuppression()

Disassembly:
	0x03581120 BL 0x3581250
	0x03581124 LDR X0, [X20 + 0x40]

ISIL:
	001 Move W0, [X0+55]
	002 Return X0

Method: System.Void set_NoiseSuppression(System.Boolean value)

Disassembly:
	0x03581128 CBZ X0, 0x3581134
	0x0358112C MOV X1, X31
	0x03581130 BL 0x356A40C
	0x03581134 CBZ X19, 0x35811A0
	0x03581138 ADRP X8, 0xBB5000
	0x0358113C LDR X8, [X8 + 0x670]
	0x03581140 MOVZ W1, 0x1
	0x03581144 LDR X0, [X8]
	0x03581148 BL 0x1C16D6C
	0x0358114C CBZ X0, 0x35811B0
	0x03581150 LDR X20, [X20 + 0x40]
	0x03581154 MOV X21, X0
	0x03581158 CBZ X20, 0x3581170

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move W9, [X0+55]
	004 And W8, W1, 1
	005 NotImplemented "Instruction CMP not yet implemented."
	006 Move X30, [X31+16]
	007 Move X19, [X31+24]
	008 Return 
	009 Move X19, X0
	010 Move [X0+55], W8
	011 Call WebRtcAudioDsp.applyToProc, X0
	012 Move X0, X19
	013 Move X30, [X31+16]
	014 Move X19, [X31+24]

Method: System.Boolean get_HighPass()

Disassembly:
	0x035812C4 MOVZ W8, 0x1
	0x035812C8 STRB W8, [X21 + 0xED9]

ISIL:
	001 Move W0, [X0+53]
	002 Return X0

Method: System.Void set_HighPass(System.Boolean value)

Disassembly:
	0x035812CC LDR X0, [X24]
	0x035812D0 ADRP X21, 0xBB5000
	0x035812D4 LDR W8, [X0 + 0xE0]
	0x035812D8 LDR X21, [X21 + 0x698]
	0x035812DC CBNZ W8, 0x35812E4
	0x035812E0 BL 0x1C16DFC
	0x035812E4 LDR X0, [X21]

ISIL:
	001 Move W9, [X0+53]
	002 And W8, W1, 1
	003 NotImplemented "Instruction CMP not yet implemented."
	004 Return 
	005 Move [X0+53], W8
	006 Call WebRtcAudioDsp.applyToProc, X0
	007 Return 

Method: System.Boolean get_Bypass()

Disassembly:
	0x035812E8 BL 0x222D02C
	0x035812EC MOV X1, X31

ISIL:
	001 Move W0, [X0+54]
	002 Return X0

Method: System.Void set_Bypass(System.Boolean value)

Disassembly:
	0x035812F0 MOV X2, X31
	0x035812F4 MOV X21, X0
	0x035812F8 BL 0x3C354F8
	0x035812FC TBZ X0, 0x0, 0x358142C
	0x03581300 CBZ X21, 0x3581440
	0x03581304 MOV X0, X21
	0x03581308 MOV X1, X31

ISIL:
	001 Move W9, [X0+54]
	002 And W8, W1, 1
	003 NotImplemented "Instruction CMP not yet implemented."
	004 Return 
	005 Move [X0+54], W8
	006 Call WebRtcAudioDsp.applyToProc, X0
	007 Return 

Method: System.Boolean get_AGC()

Disassembly:
	0x0358130C BL 0x3C32ECC
	0x03581310 CBZ X0, 0x3581440

ISIL:
	001 Move W0, [X0+42]
	002 Return X0

Method: System.Void set_AGC(System.Boolean value)

Disassembly:
	0x03581314 ADRP X8, 0xBB5000
	0x03581318 LDR X8, [X8 + 0x690]
	0x0358131C LDR X1, [X8]
	0x03581320 BL 0x21E52E4
	0x03581324 LDR X8, [X24]
	0x03581328 MOV X22, X0
	0x0358132C LDR W9, [X8 + 0xE0]

ISIL:
	001 Move W9, [X0+42]
	002 And W8, W1, 1
	003 NotImplemented "Instruction CMP not yet implemented."
	004 Return 
	005 Move [X0+42], W8
	006 Call WebRtcAudioDsp.applyToProc, X0
	007 Return 

Method: System.Int32 get_AgcCompressionGain()

Disassembly:
	0x03581330 CBNZ W9, 0x358133C
	0x03581334 MOV X0, X8

ISIL:
	001 Move W0, [X0+44]
	002 Return X0

Method: System.Void set_AgcCompressionGain(System.Int32 value)

Disassembly:
	0x03581338 BL 0x1C16DFC
	0x0358133C MOV X0, X22
	0x03581340 MOV X1, X31
	0x03581344 MOV X2, X31
	0x03581348 BL 0x3C354F8
	0x0358134C TBZ X0, 0x0, 0x3581390

ISIL:
	001 Move W8, [X0+44]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 Return 
	004 Move [X0+44], W1
	005 Call WebRtcAudioDsp.applyToProc, X0
	006 Return 

Method: System.Int32 get_AgcTargetLevel()

Disassembly:
	0x03581350 ADRP X8, 0xBB4000
	0x03581354 LDR X8, [X8 + 0xEF8]

ISIL:
	001 Move W0, [X0+48]
	002 Return X0

Method: System.Void set_AgcTargetLevel(System.Int32 value)

Disassembly:
	0x03581358 LDR X0, [X8]
	0x0358135C BL 0x1C16F10
	0x03581360 ADRP X8, 0xBB5000
	0x03581364 LDR X8, [X8 + 0x6A0]
	0x03581368 MOV X1, X19
	0x0358136C MOV X3, X31

ISIL:
	001 Move W8, [X0+48]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 Return 
	004 Move [X0+48], W1
	005 Call WebRtcAudioDsp.applyToProc, X0
	006 Return 

Method: System.Boolean get_VAD()

Disassembly:
	0x03581370 MOV X23, X0
	0x03581374 LDR X2, [X8]

ISIL:
	001 Move W0, [X0+52]
	002 Return X0

Method: System.Void set_VAD(System.Boolean value)

Disassembly:
	0x0357BC9C LDR W9, [X10]
	0x0357BCA0 ADD W9, W9, 0x1
	0x0357BCA4 ADD X8, X8, W9, 0x4, SXTW
	0x0357BCA8 ADD X0, X8, 0x138
	0x0357BCAC LDP X8, X4, [X0]
	0x0357BCB0 MOVZ W1, 0x3
	0x0357BCB4 MOV X0, X21

ISIL:
	001 Move W9, [X0+52]
	002 And W8, W1, 1
	003 NotImplemented "Instruction CMP not yet implemented."
	004 Return 
	005 Move [X0+52], W8
	006 Call WebRtcAudioDsp.applyToProc, X0
	007 Return 

Method: System.Void Awake()

Disassembly:
	0x03581378 BL 0x2A7689C
	0x0358137C CBZ X22, 0x3581440
	0x03581380 MOV X0, X22
	0x03581384 MOV X1, X23
	0x03581388 MOV X2, X31
	0x0358138C BL 0x356E5CC
	0x03581390 TBZ X20, 0x0, 0x358142C
	0x03581394 LDR X0, [X24]
	0x03581398 LDR W8, [X0 + 0xE0]
	0x0358139C CBNZ W8, 0x35813A4
	0x035813A0 BL 0x1C16DFC
	0x035813A4 MOV X0, X22
	0x035813A8 MOV X1, X31
	0x035813AC MOV X2, X31
	0x035813B0 BL 0x3C3883C
	0x035813B4 TBZ X0, 0x0, 0x35813DC
	0x035813B8 MOV X0, X21
	0x035813BC MOV X1, X31
	0x035813C0 BL 0x3C32ECC
	0x035813C4 CBZ X0, 0x3581440
	0x035813C8 ADRP X8, 0xBB5000
	0x035813CC LDR X8, [X8 + 0x688]
	0x035813D0 LDR X1, [X8]
	0x035813D4 BL 0x21E51FC
	0x035813D8 MOV X22, X0
	0x035813DC ADRP X8, 0xBB4000
	0x035813E0 LDR X8, [X8 + 0xEF8]
	0x035813E4 LDR X0, [X8]
	0x035813E8 BL 0x1C16F10
	0x035813EC ADRP X8, 0xBB5000
	0x035813F0 LDR X8, [X8 + 0x6A0]
	0x035813F4 MOV X1, X19
	0x035813F8 MOV X3, X31
	0x035813FC MOV X20, X0
	0x03581400 LDR X2, [X8]
	0x03581404 BL 0x2A7689C
	0x03581408 CBZ X22, 0x3581440
	0x0358140C MOV X0, X22
	0x03581410 MOV X1, X20
	0x03581414 LDP X20, X19, [X31 + 0x30]
	0x03581418 LDP X22, X21, [X31 + 0x20]
	0x0358141C LDP X24, X23, [X31 + 0x10]
	0x03581420 MOV X2, X31
	0x03581424 LDR X30, [X31], #0x40
	0x03581428 B 0x356E51C
	0x0358142C LDP X20, X19, [X31 + 0x30]
	0x03581430 LDP X22, X21, [X31 + 0x20]
	0x03581434 LDP X24, X23, [X31 + 0x10]
	0x03581438 LDR X30, [X31], #0x40

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xE5F000
	007 Move X21, 0xB78000
	008 Move X20, 0xBB6000
	009 Move W8, [X22+3792]
	010 Move X21, [X21+1032]
	011 Move X20, [X20+1576]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {40}
	017 Move X0, 0xB73000
	018 Move X0, [X0+2416]
	019 Call 0x1C17CF4
	020 Move X0, 0xB78000
	021 Move X0, [X0+1032]
	022 Call 0x1C17CF4
	023 Move X0, 0xB78000
	024 Move X0, [X0+840]
	025 Call 0x1C17CF4
	026 Move X0, 0xB73000
	027 Move X0, [X0+2512]
	028 Call 0x1C17CF4
	029 Move X0, 0xB7C000
	030 Move X0, [X0+2632]
	031 Call 0x1C17CF4
	032 Move X0, 0xBB6000
	033 Move X0, [X0+1576]
	034 Call 0x1C17CF4
	035 Move X0, 0xBB6000
	036 Move X0, [X0+1584]
	037 Call 0x1C17CF4
	038 Move W8, 1
	039 Move [X22+3792], W8
	040 Move X0, X19
	041 Call VoiceComponent.Awake, X0
	042 Move X0, [X21]
	043 Call 0x1C17F10
	044 Move X2, [X20]
	045 Move X1, X19
	046 Move X3, X31
	047 Move X20, X0
	048 Call AudioConfigurationChangeHandler..ctor, X0, X1, X2
	049 Move X0, X20
	050 Move X20, [X31+32]
	051 Move X19, [X31+40]
	052 Move X22, [X31+16]
	053 Move X21, [X31+24]
	054 Move X1, X31
	055 Move X30, [X31+48]
	056 Call AudioSettings.add_OnAudioConfigurationChanged, X0
	057 Return 

Method: System.Void Start()

Disassembly:
	0x03581444 ADRP X9, 0xFFFFFFFFFD56C000

ISIL:
	001 Return 

Method: System.Boolean get_IsSupported()

Disassembly:
	0x0358143C RET
	0x03581440 BL 0x1C16F20

ISIL:
	001 Move W0, 1
	002 Return X0

Method: System.Void AdjustVoiceInfo(ref Photon.Voice.VoiceInfo voiceInfo, ref Photon.Voice.AudioSampleType st)

Disassembly:
	0x03579DE0 CBZ X20, 0x357A074
	0x03579DE4 ADRP X10, 0xBBD000
	0x03579DE8 LDR X9, [X0 + 0xB8]
	0x03579DEC LDR X8, [X20]
	0x03579DF0 LDR X1, [X24]
	0x03579DF4 LDR X10, [X10 + 0x3E0]
	0x03579DF8 LDR X21, [X9]
	0x03579DFC LDRH W9, [X8 + 0x12E]
	0x03579E00 LDR X22, [X10]
	0x03579E04 CBZ X9, 0x3579E28
	0x03579E08 LDR X10, [X8 + 0xB0]
	0x03579E0C ADD X10, X10, 0x8
	0x03579E10 LDUR X11, [X10 - 0x8]
	0x03579E14 CMP X11, X1
	0x03579E18 B.EQ 0x3579FBC
	0x03579E1C SUBS X9, X9, 0x1
	0x03579E20 ADD X10, X10, 0x10
	0x03579E24 B.NE 0x3579E10
	0x03579E28 MOVZ W2, 0x1
	0x03579E2C MOV X0, X20
	0x03579E30 BL 0x1C5C788
	0x03579E34 B 0x3579FCC
	0x03579E38 LDRB W8, [X19 + 0xAC]
	0x03579E3C CBZ W8, 0x3579EFC
	0x03579E40 LDRB W8, [X19 + 0x89]
	0x03579E44 CBZ W8, 0x357A054
	0x03579E48 LDR X9, [X19 + 0x20]
	0x03579E4C CBZ X9, 0x357A074
	0x03579E50 ADRP X8, 0xB7A000
	0x03579E54 LDR X8, [X8 + 0x9C8]
	0x03579E58 LDR X20, [X9 + 0x18]
	0x03579E5C LDR X21, [X8]
	0x03579E60 LDR X8, [X21 + 0x38]
	0x03579E64 CBNZ X8, 0x3579E74
	0x03579E68 MOV X0, X21
	0x03579E6C BL 0x1C5C6E0
	0x03579E70 LDR X8, [X21 + 0x38]
	0x03579E74 LDR X0, [X8 + 0x10]
	0x03579E78 LDRB W8, [X0 + 0x135]
	0x03579E7C TBNZ X8, 0x0, 0x3579E84
	0x03579E80 BL 0x1C5C684
	0x03579E84 LDR W8, [X0 + 0xE0]
	0x03579E88 CBNZ W8, 0x3579E90
	0x03579E8C BL 0x1C16DFC
	0x03579E90 LDR X8, [X21 + 0x38]
	0x03579E94 LDR X0, [X8 + 0x10]
	0x03579E98 LDRB W8, [X0 + 0x135]
	0x03579E9C TBNZ X8, 0x0, 0x3579EA4
	0x03579EA0 BL 0x1C5C684
	0x03579EA4 CBZ X20, 0x357A074
	0x03579EA8 ADRP X10, 0xBBD000
	0x03579EAC LDR X9, [X0 + 0xB8]
	0x03579EB0 LDR X8, [X20]
	0x03579EB4 LDR X1, [X24]
	0x03579EB8 LDR X10, [X10 + 0x3E8]
	0x03579EBC LDR X21, [X9]
	0x03579EC0 LDRH W9, [X8 + 0x12E]
	0x03579EC4 LDR X22, [X10]
	0x03579EC8 CBZ X9, 0x3579EEC
	0x03579ECC LDR X10, [X8 + 0xB0]
	0x03579ED0 ADD X10, X10, 0x8
	0x03579ED4 LDUR X11, [X10 - 0x8]
	0x03579ED8 CMP X11, X1
	0x03579EDC B.EQ 0x3579FF0
	0x03579EE0 SUBS X9, X9, 0x1
	0x03579EE4 ADD X10, X10, 0x10
	0x03579EE8 B.NE 0x3579ED4
	0x03579EEC MOVZ W2, 0x1
	0x03579EF0 MOV X0, X20
	0x03579EF4 BL 0x1C5C788
	0x03579EF8 B 0x357A000
	0x03579EFC MOV X0, X19
	0x03579F00 BL 0x3578B0C
	0x03579F04 TBZ X0, 0x0, 0x357A054
	0x03579F08 LDR X9, [X19 + 0x20]
	0x03579F0C CBZ X9, 0x357A074
	0x03579F10 ADRP X8, 0xB7A000
	0x03579F14 LDR X8, [X8 + 0x9C8]
	0x03579F18 LDR X20, [X9 + 0x18]
	0x03579F1C LDR X21, [X8]
	0x03579F20 LDR X8, [X21 + 0x38]
	0x03579F24 CBNZ X8, 0x3579F34
	0x03579F28 MOV X0, X21
	0x03579F2C BL 0x1C5C6E0
	0x03579F30 LDR X8, [X21 + 0x38]
	0x03579F34 LDR X0, [X8 + 0x10]
	0x03579F38 LDRB W8, [X0 + 0x135]
	0x03579F3C TBNZ X8, 0x0, 0x3579F44
	0x03579F40 BL 0x1C5C684
	0x03579F44 LDR W8, [X0 + 0xE0]
	0x03579F48 CBNZ W8, 0x3579F50
	0x03579F4C BL 0x1C16DFC
	0x03579F50 LDR X8, [X21 + 0x38]
	0x03579F54 LDR X0, [X8 + 0x10]
	0x03579F58 LDRB W8, [X0 + 0x135]
	0x03579F5C TBNZ X8, 0x0, 0x3579F64
	0x03579F60 BL 0x1C5C684
	0x03579F64 CBZ X20, 0x357A074
	0x03579F68 ADRP X10, 0xBBD000
	0x03579F6C LDR X9, [X0 + 0xB8]
	0x03579F70 LDR X8, [X20]
	0x03579F74 LDR X1, [X24]
	0x03579F78 LDR X10, [X10 + 0x3D8]
	0x03579F7C LDR X21, [X9]
	0x03579F80 LDRH W9, [X8 + 0x12E]
	0x03579F84 LDR X22, [X10]
	0x03579F88 CBZ X9, 0x3579FAC
	0x03579F8C LDR X10, [X8 + 0xB0]
	0x03579F90 ADD X10, X10, 0x8
	0x03579F94 LDUR X11, [X10 - 0x8]
	0x03579F98 CMP X11, X1
	0x03579F9C B.EQ 0x357A02C
	0x03579FA0 SUBS X9, X9, 0x1
	0x03579FA4 ADD X10, X10, 0x10
	0x03579FA8 B.NE 0x3579F94
	0x03579FAC MOVZ W2, 0x1
	0x03579FB0 MOV X0, X20
	0x03579FB4 BL 0x1C5C788
	0x03579FB8 B 0x357A03C
	0x03579FBC LDR W9, [X10]
	0x03579FC0 ADD W9, W9, 0x1
	0x03579FC4 ADD X8, X8, W9, 0x4, SXTW
	0x03579FC8 ADD X0, X8, 0x138
	0x03579FCC LDP X8, X4, [X0]
	0x03579FD0 MOVZ W1, 0x3
	0x03579FD4 MOV X0, X20
	0x03579FD8 MOV X2, X22
	0x03579FDC MOV X3, X21
	0x03579FE0 BLR X8
	0x03579FE4 MOV X0, X19
	0x03579FE8 BL 0x3575A78
	0x03579FEC B 0x357A058
	0x03579FF0 LDR W9, [X10]
	0x03579FF4 ADD W9, W9, 0x1
	0x03579FF8 ADD X8, X8, W9, 0x4, SXTW
	0x03579FFC ADD X0, X8, 0x138
	0x0357A000 LDP X8, X4, [X0]
	0x0357A004 MOVZ W1, 0x3
	0x0357A008 MOV X0, X20
	0x0357A00C MOV X2, X22
	0x0357A010 MOV X3, X21
	0x0357A014 BLR X8
	0x0357A018 LDRB W8, [X19 + 0x89]
	0x0357A01C CBZ W8, 0x357A054
	0x0357A020 MOVZ W8, 0x1
	0x0357A024 STR W8, [X19 + 0xDC]
	0x0357A028 B 0x357A054
	0x0357A02C LDR W9, [X10]
	0x0357A030 ADD W9, W9, 0x1
	0x0357A034 ADD X8, X8, W9, 0x4, SXTW
	0x0357A038 ADD X0, X8, 0x138
	0x0357A03C LDP X8, X4, [X0]
	0x0357A040 MOVZ W1, 0x3
	0x0357A044 MOV X0, X20
	0x0357A048 MOV X2, X22
	0x0357A04C MOV X3, X21
	0x0357A050 BLR X8
	0x0357A054 STRB W31, [X19 + 0xAB]
	0x0357A058 LDP X20, X19, [X31 + 0x40]
	0x0357A05C LDP X22, X21, [X31 + 0x30]
	0x0357A060 LDP X24, X23, [X31 + 0x20]
	0x0357A064 LDP X30, X25, [X31 + 0x10]
	0x0357A068 ADD X31, X31, 0x50
	0x0357A06C RET
	0x0357A070 BL 0x1C16F28
	0x0357A074 BL 0x1C16F20
	0x0357A078 BL 0x1C16F44
	0x0357A07C MOV X1, X31
	0x0357A080 BL 0x1C16DEC
	0x0357A084 SUB X31, X31, 0x40
	0x0357A088 STP X30, X23, [X31 + 0x10]
	0x0357A08C STP X22, X21, [X31 + 0x20]
	0x0357A090 STP X20, X19, [X31 + 0x30]
	0x0357A094 ADRP X22, 0xE65000
	0x0357A098 ADRP X21, 0xB79000
	0x0357A09C LDRB W8, [X22 + 0xE91]
	0x0357A0A0 LDR X21, [X21 + 0x598]
	0x0357A0A4 MOV W20, W1
	0x0357A0A8 MOV X19, X0
	0x0357A0AC TBNZ X8, 0x0, 0x357A0F4
	0x0357A0B0 ADRP X0, 0xB79000
	0x0357A0B4 LDR X0, [X0 + 0xB58]
	0x0357A0B8 BL 0x1C16CF4
	0x0357A0BC ADRP X0, 0xB7E000
	0x0357A0C0 LDR X0, [X0 + 0x348]
	0x0357A0C4 BL 0x1C16CF4
	0x0357A0C8 ADRP X0, 0xB79000
	0x0357A0CC LDR X0, [X0 + 0x9D0]
	0x0357A0D0 BL 0x1C16CF4
	0x0357A0D4 ADRP X0, 0xB79000
	0x0357A0D8 LDR X0, [X0 + 0x598]
	0x0357A0DC BL 0x1C16CF4
	0x0357A0E0 ADRP X0, 0xBBC000
	0x0357A0E4 LDR X0, [X0 + 0x3F8]
	0x0357A0E8 BL 0x1C16CF4
	0x0357A0EC MOVZ W8, 0x1
	0x0357A0F0 STRB W8, [X22 + 0xE91]
	0x0357A0F4 LDR X0, [X21]
	0x0357A0F8 LDR X21, [X19 + 0x50]
	0x0357A0FC LDR W8, [X0 + 0xE0]
	0x0357A100 CBNZ W8, 0x357A108
	0x0357A104 BL 0x1C16DFC
	0x0357A108 MOV X0, X21
	0x0357A10C MOV X1, X31
	0x0357A110 MOV X2, X31
	0x0357A114 BL 0x3C3883C
	0x0357A118 TBNZ X0, 0x0, 0x357A218
	0x0357A11C LDR X8, [X19 + 0x20]
	0x0357A120 CBZ X8, 0x357A22C
	0x0357A124 LDR X21, [X8 + 0x18]
	0x0357A128 ADRP X8, 0xB79000
	0x0357A12C LDR X8, [X8 + 0x9D0]
	0x0357A130 MOVZ W1, 0x1
	0x0357A134 AND W23, W20, 0x1
	0x0357A138 LDR X0, [X8]
	0x0357A13C BL 0x1C16D6C
	0x0357A140 ADRP X8, 0xB79000
	0x0357A144 LDR X8, [X8 + 0xB58]
	0x0357A148 MOV X22, X0
	0x0357A14C ADD X1, X31, 0xC
	0x0357A150 STRB W23, [X31 + 0xC]
	0x0357A154 LDR X0, [X8]
	0x0357A158 BL 0x1C16E04
	0x0357A15C CBZ X22, 0x357A22C
	0x0357A160 MOV X23, X0
	0x0357A164 CBZ X0, 0x357A17C
	0x0357A168 LDR X8, [X22]
	0x0357A16C MOV X0, X23
	0x0357A170 LDR X1, [X8 + 0x40]
	0x0357A174 BL 0x1C16E00
	0x0357A178 CBZ X0, 0x357A234
	0x0357A17C LDR W8, [X22 + 0x18]
	0x0357A180 CBZ W8, 0x357A230
	0x0357A184 STR X23, [X22 + 0x20]
	0x0357A188 CBZ X21, 0x357A22C
	0x0357A18C ADRP X9, 0xB7E000
	0x0357A190 LDR X8, [X21]
	0x0357A194 LDR X9, [X9 + 0x348]
	0x0357A198 ADRP X10, 0xBBC000
	0x0357A19C LDR X1, [X9]
	0x0357A1A0 LDR X10, [X10 + 0x3F8]
	0x0357A1A4 LDRH W9, [X8 + 0x12E]
	0x0357A1A8 LDR X23, [X10]
	0x0357A1AC CBZ X9, 0x357A1D0
	0x0357A1B0 LDR X10, [X8 + 0xB0]
	0x0357A1B4 ADD X10, X10, 0x8
	0x0357A1B8 LDUR X11, [X10 - 0x8]
	0x0357A1BC CMP X11, X1
	0x0357A1C0 B.EQ 0x357A1E0
	0x0357A1C4 SUBS X9, X9, 0x1
	0x0357A1C8 ADD X10, X10, 0x10
	0x0357A1CC B.NE 0x357A1B8
	0x0357A1D0 MOVZ W2, 0x1
	0x0357A1D4 MOV X0, X21
	0x0357A1D8 BL 0x1C5C788
	0x0357A1DC B 0x357A1F0
	0x0357A1E0 LDR W9, [X10]
	0x0357A1E4 ADD W9, W9, 0x1
	0x0357A1E8 ADD X8, X8, W9, 0x4, SXTW
	0x0357A1EC ADD X0, X8, 0x138
	0x0357A1F0 LDP X8, X4, [X0]
	0x0357A1F4 MOVZ W1, 0x4
	0x0357A1F8 MOV X0, X21
	0x0357A1FC MOV X2, X23
	0x0357A200 MOV X3, X22
	0x0357A204 BLR X8
	0x0357A208 ORN W8, W31, W20, 0x0
	0x0357A20C AND W1, W8, 0x1
	0x0357A210 MOV X0, X19
	0x0357A214 BL 0x3579B20
	0x0357A218 LDP X20, X19, [X31 + 0x30]
	0x0357A21C LDP X22, X21, [X31 + 0x20]
	0x0357A220 LDP X30, X23, [X31 + 0x10]
	0x0357A224 ADD X31, X31, 0x40
	0x0357A228 RET
	0x0357A22C BL 0x1C16F20
	0x0357A230 BL 0x1C16F28
	0x0357A234 BL 0x1C16F44
	0x0357A238 MOV X1, X31
	0x0357A23C BL 0x1C16DEC
	0x0357A240 STR X30, [X31 - 0x30]!
	0x0357A244 STP X22, X21, [X31 + 0x10]
	0x0357A248 STP X20, X19, [X31 + 0x20]
	0x0357A24C ADRP X21, 0xE65000
	0x0357A250 ADRP X20, 0xBBB000
	0x0357A254 LDRB W8, [X21 + 0xE93]
	0x0357A258 LDR X20, [X20 + 0x820]
	0x0357A25C MOV X19, X0
	0x0357A260 TBNZ X8, 0x0, 0x357A29C
	0x0357A264 ADRP X0, 0xBBB000
	0x0357A268 LDR X0, [X0 + 0x448]
	0x0357A26C BL 0x1C16CF4
	0x0357A270 ADRP X0, 0xBBB000
	0x0357A274 LDR X0, [X0 + 0xFF0]
	0x0357A278 BL 0x1C16CF4
	0x0357A27C ADRP X0, 0xBA1000
	0x0357A280 LDR X0, [X0 + 0x5F8]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X22, 0xE67000
	011 Move W8, [X22+3793]
	012 Move X21, X2
	013 Move X19, X1
	014 Move X20, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {45}
	019 Move X0, 0xB7B000
	020 Move X0, [X0+2504]
	021 Call 0x1C17CF4
	022 Move X0, 0xB80000
	023 Move X0, [X0+840]
	024 Call 0x1C17CF4
	025 Move X0, 0xB7B000
	026 Move X0, [X0+1880]
	027 Call 0x1C17CF4
	028 Move X0, 0xB7B000
	029 Move X0, [X0+2512]
	030 Call 0x1C17CF4
	031 Move X0, 0xBBE000
	032 Move X0, [X0+888]
	033 Call 0x1C17CF4
	034 Move X0, 0xBBE000
	035 Move X0, [X0+896]
	036 Call 0x1C17CF4
	037 Move X0, 0xBBE000
	038 Move X0, [X0+904]
	039 Call 0x1C17CF4
	040 Move X0, 0xBBE000
	041 Move X0, [X0+912]
	042 Call 0x1C17CF4
	043 Move W8, 1
	044 Move [X22+3793], W8
	045 Move X0, X20
	046 Move X1, X31
	047 Call Behaviour.get_enabled, X0
	048 Move TEMP, X0
	049 And TEMP, TEMP, 1
	050 Compare TEMP, 1
	051 JumpIfNotEqual {327}
	052 Move W8, 1
	053 Move [X21], W8
	054 Move X9, [X20+32]
	055 Compare X9, 0
	056 JumpIfEqual {337}
	057 Move X25, 0xB7B000
	058 Move X25, [X25+2504]
	059 Move X21, [X9+24]
	060 Move X22, [X25]
	061 Move X8, [X22+56]
	062 Compare X8, 0
	063 JumpIfNotEqual {67}
	064 Move X0, X22
	065 Call 0x1C5D6E0
	066 Move X8, [X22+56]
	067 Move X0, [X8+16]
	068 Move W8, [X0+309]
	069 Move TEMP, X8
	070 And TEMP, TEMP, 1
	071 Compare TEMP, 1
	072 JumpIfEqual {74}
	073 Call 0x1C5D684
	074 Move W8, [X0+224]
	075 Compare W8, 0
	076 JumpIfNotEqual {78}
	077 Call 0x1C17DFC
	078 Move X8, [X22+56]
	079 Move X0, [X8+16]
	080 Move W8, [X0+309]
	081 Move TEMP, X8
	082 And TEMP, TEMP, 1
	083 Compare TEMP, 1
	084 JumpIfEqual {86}
	085 Call 0x1C5D684
	086 Compare X21, 0
	087 JumpIfEqual {337}
	088 Move X24, 0xB80000
	089 Move X10, 0xBBE000
	090 Move X9, [X0+184]
	091 Move X24, [X24+840]
	092 Move X8, [X21]
	093 Move X10, [X10+888]
	094 Move X22, [X9]
	095 Move X1, [X24]
	096 NotImplemented "Instruction LDRH not yet implemented."
	097 Move X23, [X10]
	098 Compare X9, 0
	099 JumpIfEqual {106}
	100 Move X10, [X8+176]
	101 Add X10, X10, 8
	102 NotImplemented "Instruction LDUR not yet implemented."
	103 NotImplemented "Instruction CMP not yet implemented."
	104 Subtract X9, X9, 1
	105 Add X10, X10, 16
	106 Move W2, 1
	107 Move X0, X21
	108 Call 0x1C5D788
	109 Move W9, [X10]
	110 Add W9, W9, 1
	111 Add X8, X8, W9
	112 Add X0, X8, 312
	113 Move X8, [X0]
	114 Move X4, [X0+8]
	115 Move W1, 3
	116 Move X0, X21
	117 Move X2, X23
	118 Move X3, X22
	119 NotImplemented "Instruction BLR not yet implemented."
	120 Move W8, [X19+4]
	121 Move W9, 0x5DC0
	122 NotImplemented "Instruction CMP not yet implemented."
	123 Move W9, 0x2EE0
	124 NotImplemented "Instruction CMP not yet implemented."
	125 Move X9, [X20+32]
	126 Compare X9, 0
	127 JumpIfEqual {337}
	128 Move X22, [X25]
	129 Move X21, [X9+24]
	130 Move X8, [X22+56]
	131 Compare X8, 0
	132 JumpIfNotEqual {136}
	133 Move X0, X22
	134 Call 0x1C5D6E0
	135 Move X8, [X22+56]
	136 Move X0, [X8+16]
	137 Move W8, [X0+309]
	138 Move TEMP, X8
	139 And TEMP, TEMP, 1
	140 Compare TEMP, 1
	141 JumpIfEqual {143}
	142 Call 0x1C5D684
	143 Move W8, [X0+224]
	144 Compare W8, 0
	145 JumpIfNotEqual {147}
	146 Call 0x1C17DFC
	147 Move X8, [X22+56]
	148 Move X0, [X8+16]
	149 Move W8, [X0+309]
	150 Move TEMP, X8
	151 And TEMP, TEMP, 1
	152 Compare TEMP, 1
	153 JumpIfEqual {155}
	154 Call 0x1C5D684
	155 Compare X21, 0
	156 JumpIfEqual {337}
	157 Move X10, 0xBBE000
	158 Move X9, [X0+184]
	159 Move X8, [X21]
	160 Move X1, [X24]
	161 Move X10, [X10+896]
	162 Move X22, [X9]
	163 NotImplemented "Instruction LDRH not yet implemented."
	164 Move X23, [X10]
	165 Compare X9, 0
	166 JumpIfEqual {173}
	167 Move X10, [X8+176]
	168 Add X10, X10, 8
	169 NotImplemented "Instruction LDUR not yet implemented."
	170 NotImplemented "Instruction CMP not yet implemented."
	171 Subtract X9, X9, 1
	172 Add X10, X10, 16
	173 Move W2, 1
	174 Move X0, X21
	175 Call 0x1C5D788
	176 Move X9, [X20+32]
	177 Compare X9, 0
	178 JumpIfEqual {337}
	179 Move X22, [X25]
	180 Move X21, [X9+24]
	181 Move X8, [X22+56]
	182 Compare X8, 0
	183 JumpIfNotEqual {187}
	184 Move X0, X22
	185 Call 0x1C5D6E0
	186 Move X8, [X22+56]
	187 Move X0, [X8+16]
	188 Move W8, [X0+309]
	189 Move TEMP, X8
	190 And TEMP, TEMP, 1
	191 Compare TEMP, 1
	192 JumpIfEqual {194}
	193 Call 0x1C5D684
	194 Move W8, [X0+224]
	195 Compare W8, 0
	196 JumpIfNotEqual {198}
	197 Call 0x1C17DFC
	198 Move X8, [X22+56]
	199 Move X0, [X8+16]
	200 Move W8, [X0+309]
	201 Move TEMP, X8
	202 And TEMP, TEMP, 1
	203 Compare TEMP, 1
	204 JumpIfEqual {206}
	205 Call 0x1C5D684
	206 Compare X21, 0
	207 JumpIfEqual {337}
	208 Move X10, 0xBBD000
	209 Move X9, [X0+184]
	210 Move X8, [X21]
	211 Move X1, [X24]
	212 Move X10, [X10+904]
	213 Move X22, [X9]
	214 NotImplemented "Instruction LDRH not yet implemented."
	215 Move X23, [X10]
	216 Compare X9, 0
	217 JumpIfEqual {224}
	218 Move X10, [X8+176]
	219 Add X10, X10, 8
	220 NotImplemented "Instruction LDUR not yet implemented."
	221 NotImplemented "Instruction CMP not yet implemented."
	222 Subtract X9, X9, 1
	223 Add X10, X10, 16
	224 Move W2, 1
	225 Move X0, X21
	226 Call 0x1C5D788
	227 Move W9, [X10]
	228 Add W9, W9, 1
	229 Add X8, X8, W9
	230 Add X0, X8, 312
	231 Move X8, [X0]
	232 Move X4, [X0+8]
	233 Move W1, 2
	234 Move X0, X21
	235 Move X2, X23
	236 Move X3, X22
	237 NotImplemented "Instruction BLR not yet implemented."
	238 Move W8, 0x3E80
	239 Move W9, [X10]
	240 Add W9, W9, 1
	241 Add X8, X8, W9
	242 Add X0, X8, 312
	243 Move X8, [X0]
	244 Move X4, [X0+8]
	245 Move W1, 2
	246 Move X0, X21
	247 Move X2, X23
	248 Move X3, X22
	249 NotImplemented "Instruction BLR not yet implemented."
	250 Move W8, 0xBB80
	251 Move [X19+4], W8
	252 Move W8, [X19+12]
	253 Move W9, 0x270F
	254 NotImplemented "Instruction CMP not yet implemented."
	255 Move X8, [X20+32]
	256 Compare X8, 0
	257 JumpIfEqual {337}
	258 Move X20, [X8+24]
	259 Move X8, 0xB7A000
	260 Move X8, [X8+2512]
	261 Move W1, 1
	262 Move X0, [X8]
	263 Call 0x1C17D6C
	264 Move X10, 0xB7A000
	265 NotImplemented "Instruction LDRSW not yet implemented."
	266 Move X10, [X10+1880]
	267 Move W9, 0x4DD3
	268 Move X21, X0
	269 NotImplemented "Instruction MOVK not yet implemented."
	270 Move X0, [X10]
	271 Multiply X8, X8, X9
	272 Move X9, X8
	273 ShiftRight X9, 63
	274 And X9, X9, 0x7FFFFFFF
	275 NotImplemented "Instruction SBFM not yet implemented."
	276 Add W8, W8, W9
	277 Add X1, X31, 12
	278 Move [X31+12], W8
	279 Call 0x1C17E04
	280 Compare X21, 0
	281 JumpIfEqual {337}
	282 Move X22, X0
	283 Compare X0, 0
	284 JumpIfEqual {291}
	285 Move X8, [X21]
	286 Move X0, X22
	287 Move X1, [X8+64]
	288 Call 0x1C17E00
	289 Compare X0, 0
	290 JumpIfEqual {339}
	291 Move W8, [X21+24]
	292 Compare W8, 0
	293 JumpIfEqual {338}
	294 Move [X21+32], X22
	295 Compare X20, 0
	296 JumpIfEqual {337}
	297 Move X10, 0xBBD000
	298 Move X8, [X20]
	299 Move X1, [X24]
	300 Move X10, [X10+912]
	301 NotImplemented "Instruction LDRH not yet implemented."
	302 Move X22, [X10]
	303 Compare X9, 0
	304 JumpIfEqual {311}
	305 Move X10, [X8+176]
	306 Add X10, X10, 8
	307 NotImplemented "Instruction LDUR not yet implemented."
	308 NotImplemented "Instruction CMP not yet implemented."
	309 Subtract X9, X9, 1
	310 Add X10, X10, 16
	311 Move W2, 1
	312 Move X0, X20
	313 Call 0x1C5D788
	314 Move W9, [X10]
	315 Add W9, W9, 1
	316 Add X8, X8, W9
	317 Add X0, X8, 312
	318 Move X8, [X0]
	319 Move X4, [X0+8]
	320 Move W1, 2
	321 Move X0, X20
	322 Move X2, X22
	323 Move X3, X21
	324 NotImplemented "Instruction BLR not yet implemented."
	325 Move W8, 0x2710
	326 Move [X19+12], W8
	327 Move X20, [X31+64]
	328 Move X19, [X31+72]
	329 Move X22, [X31+48]
	330 Move X21, [X31+56]
	331 Move X24, [X31+32]
	332 Move X23, [X31+40]
	333 Move X30, [X31+16]
	334 Move X25, [X31+24]
	335 Add X31, X31, 80
	336 Return 
	337 Call 0x1C17F20
	338 Call 0x1C17F28
	339 Call 0x1C17F44
	340 Move X1, X31
	341 Call 0x1C17DEC

Method: System.Void OnAudioConfigurationChanged(System.Boolean deviceWasChanged)

Disassembly:
	0x03581448 LDR V0, [X9 + 0xB70]
	0x0358144C MOVZ W8, 0x1
	0x03581450 MOVZ W10, 0x78
	0x03581454 STRB W8, [X0 + 0x28]
	0x03581458 STRB W8, [X0 + 0x2A]
	0x0358145C STRB W8, [X0 + 0x34]
	0x03581460 STRB W8, [X0 + 0x37]
	0x03581464 STUR D0, [X0 + 0x2C]
	0x03581468 STR W10, [X0 + 0x38]
	0x0358146C B 0x357413C
	0x03581470 STP X30, X21, [X31 - 0x20]!
	0x03581474 STP X20, X19, [X31 + 0x10]
	0x03581478 ADRP X20, 0xE5E000
	0x0358147C ADRP X21, 0xBB5000
	0x03581480 ADRP X19, 0xBB5000
	0x03581484 LDRB W8, [X20 + 0xEDB]
	0x03581488 LDR X21, [X21 + 0x6A8]
	0x0358148C LDR X19, [X19 + 0x6B0]
	0x03581490 TBNZ X8, 0x0, 0x35814CC
	0x03581494 ADRP X0, 0xBB5000
	0x03581498 LDR X0, [X0 + 0x6B8]
	0x0358149C BL 0x1C16CF4
	0x035814A0 ADRP X0, 0xBB5000
	0x035814A4 LDR X0, [X0 + 0x6B0]
	0x035814A8 BL 0x1C16CF4
	0x035814AC ADRP X0, 0xBB5000
	0x035814B0 LDR X0, [X0 + 0x6A8]
	0x035814B4 BL 0x1C16CF4
	0x035814B8 ADRP X0, 0xBB5000
	0x035814BC LDR X0, [X0 + 0x640]
	0x035814C0 BL 0x1C16CF4
	0x035814C4 MOVZ W8, 0x1
	0x035814C8 STRB W8, [X20 + 0xEDB]
	0x035814CC LDR X0, [X21]
	0x035814D0 BL 0x1C16F10
	0x035814D4 LDR X1, [X19]
	0x035814D8 MOV X19, X0
	0x035814DC BL 0x2A3E710
	0x035814E0 CBZ X19, 0x3581598
	0x035814E4 ADRP X21, 0xBB5000
	0x035814E8 LDR X21, [X21 + 0x6B8]
	0x035814EC ADRP X20, 0xBB5000
	0x035814F0 MOVZ W1, 0x1
	0x035814F4 MOVZ W2, 0x1
	0x035814F8 LDR X3, [X21]
	0x035814FC LDR X20, [X20 + 0x640]
	0x03581500 MOV X0, X19
	0x03581504 BL 0x2A3EFB8
	0x03581508 LDR X3, [X21]
	0x0358150C MOVZ W1, 0x2
	0x03581510 MOVZ W2, 0x2
	0x03581514 MOV X0, X19
	0x03581518 BL 0x2A3EFB8
	0x0358151C LDR X3, [X21]
	0x03581520 MOVZ W1, 0x3
	0x03581524 MOVZ W2, 0x4
	0x03581528 MOV X0, X19
	0x0358152C BL 0x2A3EFB8
	0x03581530 LDR X3, [X21]
	0x03581534 MOVZ W1, 0x4
	0x03581538 MOVZ W2, 0x5
	0x0358153C MOV X0, X19
	0x03581540 BL 0x2A3EFB8
	0x03581544 LDR X3, [X21]
	0x03581548 MOVZ W1, 0x5
	0x0358154C MOVZ W2, 0x6
	0x03581550 MOV X0, X19
	0x03581554 BL 0x2A3EFB8
	0x03581558 LDR X3, [X21]
	0x0358155C MOVZ W1, 0x6
	0x03581560 MOVZ W2, 0x8
	0x03581564 MOV X0, X19
	0x03581568 BL 0x2A3EFB8
	0x0358156C LDR X3, [X21]
	0x03581570 MOVZ W1, 0x7
	0x03581574 MOVZ W2, 0x2
	0x03581578 MOV X0, X19
	0x0358157C BL 0x2A3EFB8
	0x03581580 LDR X8, [X20]
	0x03581584 LDR X8, [X8 + 0xB8]
	0x03581588 STR X19, [X8]
	0x0358158C LDP X20, X19, [X31 + 0x10]
	0x03581590 LDP X30, X21, [X31], #0x20
	0x03581594 RET
	0x03581598 BL 0x1C16F20
	0x0358159C STP X30, X21, [X31 - 0x20]!
	0x035815A0 STP X20, X19, [X31 + 0x10]
	0x035815A4 ADRP X21, 0xE5E000
	0x035815A8 ADRP X20, 0xB72000
	0x035815AC LDRB W8, [X21 + 0xEDC]
	0x035815B0 LDR X20, [X20 + 0x598]
	0x035815B4 MOV X19, X0
	0x035815B8 TBNZ X8, 0x0, 0x35815D0
	0x035815BC ADRP X0, 0xB72000
	0x035815C0 LDR X0, [X0 + 0x598]
	0x035815C4 BL 0x1C16CF4
	0x035815C8 MOVZ W8, 0x1
	0x035815CC STRB W8, [X21 + 0xEDC]
	0x035815D0 LDR X0, [X20]
	0x035815D4 LDR X20, [X19 + 0x20]
	0x035815D8 LDR W8, [X0 + 0xE0]
	0x035815DC CBNZ W8, 0x35815E4
	0x035815E0 BL 0x1C16DFC
	0x035815E4 MOV X0, X20
	0x035815E8 MOV X1, X31
	0x035815EC MOV X2, X31
	0x035815F0 BL 0x3C354F8
	0x035815F4 TBZ X0, 0x0, 0x3581618
	0x035815F8 LDR X8, [X19 + 0x20]
	0x035815FC CBZ X8, 0x3581628
	0x03581600 LDR X0, [X8 + 0x48]
	0x03581604 CBZ X0, 0x3581618
	0x03581608 LDP X20, X19, [X31 + 0x10]
	0x0358160C MOV X1, X31
	0x03581610 LDP X30, X21, [X31], #0x20
	0x03581614 B 0x3535374
	0x03581618 LDP X20, X19, [X31 + 0x10]
	0x0358161C MOV W0, W31
	0x03581620 LDP X30, X21, [X31], #0x20
	0x03581624 RET
	0x03581628 BL 0x1C16F20
	0x0358162C STP X30, X21, [X31 - 0x20]!
	0x03581630 STP X20, X19, [X31 + 0x10]
	0x03581634 ADRP X20, 0xE5E000
	0x03581638 ADRP X21, 0xBB5000
	0x0358163C LDRB W8, [X20 + 0xEDD]
	0x03581640 LDR X21, [X21 + 0x6C0]
	0x03581644 MOV X19, X0
	0x03581648 TBNZ X8, 0x0, 0x3581660
	0x0358164C ADRP X0, 0xBB5000
	0x03581650 LDR X0, [X0 + 0x6C0]
	0x03581654 BL 0x1C16CF4
	0x03581658 MOVZ W8, 0x1
	0x0358165C STRB W8, [X20 + 0xEDD]
	0x03581660 LDR X1, [X21]
	0x03581664 MOV X0, X19
	0x03581668 BL 0x21A3894
	0x0358166C STR X0, [X19 + 0x20]
	0x03581670 CBZ X0, 0x35816BC
	0x03581674 LDR X0, [X0 + 0x48]
	0x03581678 CBZ X0, 0x35816BC
	0x0358167C MOV X1, X19
	0x03581680 MOV X2, X31
	0x03581684 BL 0x3544B7C
	0x03581688 LDRB W8, [X19 + 0x29]
	0x0358168C CBZ W8, 0x35816B0
	0x03581690 LDR X0, [X19 + 0x20]
	0x03581694 CBZ X0, 0x35816BC
	0x03581698 LDR X8, [X0]
	0x0358169C LDP X20, X19, [X31 + 0x10]
	0x035816A0 MOV X1, X31
	0x035816A4 LDP X3, X2, [X8 + 0x1A8]
	0x035816A8 LDP X30, X21, [X31], #0x20
	0x035816AC BR X3
	0x035816B0 LDP X20, X19, [X31 + 0x10]
	0x035816B4 LDP X30, X21, [X31], #0x20
	0x035816B8 RET
	0x035816BC BL 0x1C16F20
	0x035816C0 STR X30, [X31 - 0x10]!
	0x035816C4 LDR X0, [X0 + 0x20]
	0x035816C8 CBZ X0, 0x35816E0
	0x035816CC LDR X8, [X0]
	0x035816D0 MOV X1, X31
	0x035816D4 LDP X3, X2, [X8 + 0x1A8]
	0x035816D8 LDR X30, [X31], #0x10
	0x035816DC BR X3
	0x035816E0 BL 0x1C16F20
	0x035816E4 STR X30, [X31 - 0x10]!
	0x035816E8 LDR X8, [X0 + 0x20]
	0x035816EC CBZ X8, 0x3581708
	0x035816F0 MOV X1, X0
	0x035816F4 LDR X0, [X8 + 0x48]
	0x035816F8 CBZ X0, 0x3581708
	0x035816FC MOV X2, X31
	0x03581700 LDR X30, [X31], #0x10
	0x03581704 B 0x3544C44
	0x03581708 BL 0x1C16F20
	0x0358170C RET
	0x03581710 SUB X31, X31, 0x40
	0x03581714 STP X30, X23, [X31 + 0x10]
	0x03581718 STP X22, X21, [X31 + 0x20]
	0x0358171C STP X20, X19, [X31 + 0x30]
	0x03581720 ADRP X20, 0xE5E000
	0x03581724 ADRP X23, 0xB72000
	0x03581728 ADRP X22, 0xB76000
	0x0358172C LDRB W8, [X20 + 0xEDE]
	0x03581730 LDR X23, [X23 + 0x9D0]
	0x03581734 LDR X22, [X22 + 0x628]
	0x03581738 MOV X19, X2
	0x0358173C MOV W21, W1
	0x03581740 TBNZ X8, 0x0, 0x358177C
	0x03581744 ADRP X0, 0xB72000
	0x03581748 LDR X0, [X0 + 0xA28]
	0x0358174C BL 0x1C16CF4
	0x03581750 ADRP X0, 0xB76000
	0x03581754 LDR X0, [X0 + 0x628]
	0x03581758 BL 0x1C16CF4
	0x0358175C ADRP X0, 0xB72000
	0x03581760 LDR X0, [X0 + 0x9D0]
	0x03581764 BL 0x1C16CF4
	0x03581768 ADRP X0, 0xBB5000
	0x0358176C LDR X0, [X0 + 0x6C8]
	0x03581770 BL 0x1C16CF4
	0x03581774 MOVZ W8, 0x1
	0x03581778 STRB W8, [X20 + 0xEDE]
	0x0358177C LDR X0, [X23]
	0x03581780 MOVZ W1, 0x2
	0x03581784 BL 0x1C16D6C
	0x03581788 MOV X20, X0
	0x0358178C LDR X0, [X22]
	0x03581790 ADD X1, X31, 0xC
	0x03581794 STRH W21, [X31 + 0xC]
	0x03581798 BL 0x1C16E04
	0x0358179C CBZ X20, 0x3581844
	0x035817A0 MOV X21, X0
	0x035817A4 CBZ X0, 0x35817BC
	0x035817A8 LDR X8, [X20]
	0x035817AC MOV X0, X21
	0x035817B0 LDR X1, [X8 + 0x40]
	0x035817B4 BL 0x1C16E00
	0x035817B8 CBZ X0, 0x3581838
	0x035817BC LDR W8, [X20 + 0x18]
	0x035817C0 CBZ W8, 0x3581834
	0x035817C4 STR X21, [X20 + 0x20]
	0x035817C8 CBZ X19, 0x35817E4
	0x035817CC LDR X8, [X20]
	0x035817D0 MOV X0, X19
	0x035817D4 LDR X1, [X8 + 0x40]
	0x035817D8 BL 0x1C16E00
	0x035817DC CBZ X0, 0x3581838
	0x035817E0 LDR W8, [X20 + 0x18]
	0x035817E4 CMP W8, 0x1
	0x035817E8 B.LS 0x3581834
	0x035817EC ADRP X8, 0xB72000
	0x035817F0 LDR X8, [X8 + 0xA28]
	0x035817F4 STR X19, [X20 + 0x28]
	0x035817F8 ADRP X19, 0xBB5000
	0x035817FC LDR X0, [X8]
	0x03581800 LDR W8, [X0 + 0xE0]
	0x03581804 LDR X19, [X19 + 0x6C8]
	0x03581808 CBNZ W8, 0x3581810
	0x0358180C BL 0x1C16DFC
	0x03581810 LDR X0, [X19]
	0x03581814 MOV X1, X20
	0x03581818 MOV X2, X31
	0x0358181C BL 0x3C066BC
	0x03581820 LDP X20, X19, [X31 + 0x30]
	0x03581824 LDP X22, X21, [X31 + 0x20]
	0x03581828 LDP X30, X23, [X31 + 0x10]
	0x0358182C ADD X31, X31, 0x40
	0x03581830 RET
	0x03581834 BL 0x1C16F28
	0x03581838 BL 0x1C16F44

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X20, 0xE5F000
	011 Move W8, [X20+3794]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {40}
	017 Move X0, 0xBB6000
	018 Move X0, [X0+1592]
	019 Call 0x1C17CF4
	020 Move X0, 0xB78000
	021 Move X0, [X0+840]
	022 Call 0x1C17CF4
	023 Move X0, 0xB73000
	024 Move X0, [X0+1880]
	025 Call 0x1C17CF4
	026 Move X0, 0xB73000
	027 Move X0, [X0+2512]
	028 Call 0x1C17CF4
	029 Move X0, 0xBB6000
	030 Move X0, [X0+1600]
	031 Call 0x1C17CF4
	032 Move X0, 0xBB6000
	033 Move X0, [X0+1608]
	034 Call 0x1C17CF4
	035 Move X0, 0xBB6000
	036 Move X0, [X0+1616]
	037 Call 0x1C17CF4
	038 Move W8, 1
	039 Move [X20+3794], W8
	040 Move W20, [X19+80]
	041 Move X0, X31
	042 Call AudioSettings.get_outputSampleRate
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Move X8, [X19+32]
	045 Compare X8, 0
	046 JumpIfEqual {275}
	047 Move X20, [X8+24]
	048 Move X8, 0xB73000
	049 Move X8, [X8+2512]
	050 Move W1, 2
	051 Move X0, [X8]
	052 Call 0x1C17D6C
	053 Move X23, 0xB73000
	054 Move W8, [X19+80]
	055 Move X23, [X23+1880]
	056 Move X21, X0
	057 Add X1, X31, 12
	058 Move [X31+12], W8
	059 Move X0, [X23]
	060 Call 0x1C17E04
	061 Compare X21, 0
	062 JumpIfEqual {275}
	063 Move X22, X0
	064 Compare X0, 0
	065 JumpIfEqual {72}
	066 Move X8, [X21]
	067 Move X0, X22
	068 Move X1, [X8+64]
	069 Call 0x1C17E00
	070 Compare X0, 0
	071 JumpIfEqual {277}
	072 Move W8, [X21+24]
	073 Compare W8, 0
	074 JumpIfEqual {276}
	075 Move X0, X31
	076 Move [X21+32], X22
	077 Call AudioSettings.get_outputSampleRate
	078 Move X8, [X23]
	079 Move [X31+8], W0
	080 Add X1, X31, 8
	081 Move X0, X8
	082 Call 0x1C17E04
	083 Move X22, X0
	084 Compare X0, 0
	085 JumpIfEqual {92}
	086 Move X8, [X21]
	087 Move X0, X22
	088 Move X1, [X8+64]
	089 Call 0x1C17E00
	090 Compare X0, 0
	091 JumpIfEqual {277}
	092 Move W8, [X21+24]
	093 NotImplemented "Instruction CMP not yet implemented."
	094 Move [X21+40], X22
	095 Compare X20, 0
	096 JumpIfEqual {275}
	097 Move X9, 0xB78000
	098 Move X8, [X20]
	099 Move X9, [X9+840]
	100 Move X10, 0xBB6000
	101 Move X1, [X9]
	102 Move X10, [X10+1616]
	103 NotImplemented "Instruction LDRH not yet implemented."
	104 Move X22, [X10]
	105 Compare X9, 0
	106 JumpIfEqual {113}
	107 Move X10, [X8+176]
	108 Add X10, X10, 8
	109 NotImplemented "Instruction LDUR not yet implemented."
	110 NotImplemented "Instruction CMP not yet implemented."
	111 Subtract X9, X9, 1
	112 Add X10, X10, 16
	113 Move W2, 1
	114 Move X0, X20
	115 Call 0x1C5D788
	116 Move W9, [X10]
	117 Add W9, W9, 1
	118 Add X8, X8, W9
	119 Add X0, X8, 312
	120 Move X8, [X0]
	121 Move X4, [X0+8]
	122 Move W1, 3
	123 Move X0, X20
	124 Move X2, X22
	125 Move X3, X21
	126 NotImplemented "Instruction BLR not yet implemented."
	127 Move X0, X31
	128 Call AudioSettings.get_outputSampleRate
	129 Move [X19+80], W0
	130 Move X0, X19
	131 Call WebRtcAudioDsp.Restart, X0
	132 Move X23, 0xBB6000
	133 Move X23, [X23+1600]
	134 Move W21, [X19+60]
	135 Move X0, [X23]
	136 Move W8, [X0+224]
	137 Compare W8, 0
	138 JumpIfNotEqual {141}
	139 Call 0x1C17DFC
	140 Move X0, [X23]
	141 Move X8, [X0+184]
	142 Move X0, X31
	143 Move X20, [X8]
	144 Call AudioSettings.get_speakerMode
	145 Compare X20, 0
	146 JumpIfEqual {275}
	147 Move X24, 0xBB6000
	148 Move X24, [X24+1592]
	149 Move W1, W0
	150 Move X0, X20
	151 Move X2, [X24]
	152 Call Dictionary`2<Int32Enum, Int32>.get_Item, X0, X1
	153 NotImplemented "Instruction CMP not yet implemented."
	154 Move X8, [X19+32]
	155 Compare X8, 0
	156 JumpIfEqual {275}
	157 Move X20, [X8+24]
	158 Move X8, 0xB73000
	159 Move X8, [X8+2512]
	160 Move W1, 2
	161 Move X0, [X8]
	162 Call 0x1C17D6C
	163 Move X25, 0xB73000
	164 Move W8, [X19+60]
	165 Move X25, [X25+1880]
	166 Move X21, X0
	167 Add X1, X31, 12
	168 Move [X31+12], W8
	169 Move X0, [X25]
	170 Call 0x1C17E04
	171 Compare X21, 0
	172 JumpIfEqual {275}
	173 Move X22, X0
	174 Compare X0, 0
	175 JumpIfEqual {182}
	176 Move X8, [X21]
	177 Move X0, X22
	178 Move X1, [X8+64]
	179 Call 0x1C17E00
	180 Compare X0, 0
	181 JumpIfEqual {277}
	182 Move W8, [X21+24]
	183 Compare W8, 0
	184 JumpIfEqual {276}
	185 Move [X21+32], X22
	186 Move X0, [X23]
	187 Move W8, [X0+224]
	188 Compare W8, 0
	189 JumpIfNotEqual {192}
	190 Call 0x1C17DFC
	191 Move X0, [X23]
	192 Move X8, [X0+184]
	193 Move X0, X31
	194 Move X22, [X8]
	195 Call AudioSettings.get_speakerMode
	196 Compare X22, 0
	197 JumpIfEqual {275}
	198 Move X2, [X24]
	199 Move W1, W0
	200 Move X0, X22
	201 Call Dictionary`2<Int32Enum, Int32>.get_Item, X0, X1
	202 Move X8, [X25]
	203 Move [X31+8], W0
	204 Add X1, X31, 8
	205 Move X0, X8
	206 Call 0x1C17E04
	207 Move X22, X0
	208 Compare X0, 0
	209 JumpIfEqual {216}
	210 Move X8, [X21]
	211 Move X0, X22
	212 Move X1, [X8+64]
	213 Call 0x1C17E00
	214 Compare X0, 0
	215 JumpIfEqual {277}
	216 Move W8, [X21+24]
	217 NotImplemented "Instruction CMP not yet implemented."
	218 Move [X21+40], X22
	219 Compare X20, 0
	220 JumpIfEqual {275}
	221 Move X9, 0xB78000
	222 Move X8, [X20]
	223 Move X9, [X9+840]
	224 Move X10, 0xBB6000
	225 Move X1, [X9]
	226 Move X10, [X10+1608]
	227 NotImplemented "Instruction LDRH not yet implemented."
	228 Move X22, [X10]
	229 Compare X9, 0
	230 JumpIfEqual {237}
	231 Move X10, [X8+176]
	232 Add X10, X10, 8
	233 NotImplemented "Instruction LDUR not yet implemented."
	234 NotImplemented "Instruction CMP not yet implemented."
	235 Subtract X9, X9, 1
	236 Add X10, X10, 16
	237 Move W2, 1
	238 Move X0, X20
	239 Call 0x1C5D788
	240 Move W9, [X10]
	241 Add W9, W9, 1
	242 Add X8, X8, W9
	243 Add X0, X8, 312
	244 Move X8, [X0]
	245 Move X4, [X0+8]
	246 Move W1, 3
	247 Move X0, X20
	248 Move X2, X22
	249 Move X3, X21
	250 NotImplemented "Instruction BLR not yet implemented."
	251 Move X8, [X23]
	252 Move X0, X31
	253 Move X8, [X8+184]
	254 Move X20, [X8]
	255 Call AudioSettings.get_speakerMode
	256 Compare X20, 0
	257 JumpIfEqual {275}
	258 Move X2, [X24]
	259 Move W1, W0
	260 Move X0, X20
	261 Call Dictionary`2<Int32Enum, Int32>.get_Item, X0, X1
	262 Move [X19+60], W0
	263 Move X0, X19
	264 Call WebRtcAudioDsp.Restart, X0
	265 Move X20, [X31+64]
	266 Move X19, [X31+72]
	267 Move X22, [X31+48]
	268 Move X21, [X31+56]
	269 Move X24, [X31+32]
	270 Move X23, [X31+40]
	271 Move X30, [X31+16]
	272 Move X25, [X31+24]
	273 Add X31, X31, 80
	274 Return 
	275 Call 0x1C17F20
	276 Call 0x1C17F28
	277 Call 0x1C17F44
	278 Move X1, X31
	279 Call 0x1C17DEC

Method: System.Void OnAudioOutFrameFloat(System.Single[] data, System.Int32 outChannels)

Disassembly:
	0x0358183C MOV X1, X31
	0x03581840 BL 0x1C16DEC
	0x03581844 BL 0x1C16F20
	0x03581848 RET
	0x0358184C RET
	0x03581850 SUB X31, X31, 0x40
	0x03581854 STP X30, X23, [X31 + 0x10]
	0x03581858 STP X22, X21, [X31 + 0x20]
	0x0358185C STP X20, X19, [X31 + 0x30]
	0x03581860 ADRP X20, 0xE5E000
	0x03581864 ADRP X23, 0xB72000
	0x03581868 ADRP X22, 0xB76000
	0x0358186C LDRB W8, [X20 + 0xEDF]
	0x03581870 LDR X23, [X23 + 0x9D0]
	0x03581874 LDR X22, [X22 + 0x628]
	0x03581878 MOV X19, X2
	0x0358187C MOV W21, W1
	0x03581880 TBNZ X8, 0x0, 0x35818BC
	0x03581884 ADRP X0, 0xB72000
	0x03581888 LDR X0, [X0 + 0xA28]
	0x0358188C BL 0x1C16CF4
	0x03581890 ADRP X0, 0xB76000
	0x03581894 LDR X0, [X0 + 0x628]
	0x03581898 BL 0x1C16CF4
	0x0358189C ADRP X0, 0xB72000
	0x035818A0 LDR X0, [X0 + 0x9D0]
	0x035818A4 BL 0x1C16CF4
	0x035818A8 ADRP X0, 0xBB5000
	0x035818AC LDR X0, [X0 + 0x6D0]
	0x035818B0 BL 0x1C16CF4
	0x035818B4 MOVZ W8, 0x1
	0x035818B8 STRB W8, [X20 + 0xEDF]
	0x035818BC LDR X0, [X23]
	0x035818C0 MOVZ W1, 0x2
	0x035818C4 BL 0x1C16D6C
	0x035818C8 MOV X20, X0
	0x035818CC LDR X0, [X22]
	0x035818D0 ADD X1, X31, 0xC
	0x035818D4 STRH W21, [X31 + 0xC]
	0x035818D8 BL 0x1C16E04
	0x035818DC CBZ X20, 0x3581984
	0x035818E0 MOV X21, X0
	0x035818E4 CBZ X0, 0x35818FC
	0x035818E8 LDR X8, [X20]
	0x035818EC MOV X0, X21
	0x035818F0 LDR X1, [X8 + 0x40]
	0x035818F4 BL 0x1C16E00
	0x035818F8 CBZ X0, 0x3581978
	0x035818FC LDR W8, [X20 + 0x18]
	0x03581900 CBZ W8, 0x3581974
	0x03581904 STR X21, [X20 + 0x20]
	0x03581908 CBZ X19, 0x3581924
	0x0358190C LDR X8, [X20]
	0x03581910 MOV X0, X19
	0x03581914 LDR X1, [X8 + 0x40]
	0x03581918 BL 0x1C16E00
	0x0358191C CBZ X0, 0x3581978
	0x03581920 LDR W8, [X20 + 0x18]
	0x03581924 CMP W8, 0x1
	0x03581928 B.LS 0x3581974
	0x0358192C ADRP X8, 0xB72000
	0x03581930 LDR X8, [X8 + 0xA28]
	0x03581934 STR X19, [X20 + 0x28]
	0x03581938 ADRP X19, 0xBB5000
	0x0358193C LDR X0, [X8]
	0x03581940 LDR W8, [X0 + 0xE0]
	0x03581944 LDR X19, [X19 + 0x6D0]
	0x03581948 CBNZ W8, 0x3581950
	0x0358194C BL 0x1C16DFC
	0x03581950 LDR X0, [X19]
	0x03581954 MOV X1, X20
	0x03581958 MOV X2, X31
	0x0358195C BL 0x3C066BC
	0x03581960 LDP X20, X19, [X31 + 0x30]
	0x03581964 LDP X22, X21, [X31 + 0x20]
	0x03581968 LDP X30, X23, [X31 + 0x10]
	0x0358196C ADD X31, X31, 0x40
	0x03581970 RET
	0x03581974 BL 0x1C16F28
	0x03581978 BL 0x1C16F44
	0x0358197C MOV X1, X31
	0x03581980 BL 0x1C16DEC
	0x03581984 BL 0x1C16F20
	0x03581988 SUB X31, X31, 0x40
	0x0358198C STP X30, X23, [X31 + 0x10]
	0x03581990 STP X22, X21, [X31 + 0x20]
	0x03581994 STP X20, X19, [X31 + 0x30]
	0x03581998 ADRP X20, 0xE5E000
	0x0358199C ADRP X23, 0xB72000
	0x035819A0 LDRB W8, [X20 + 0xEE0]
	0x035819A4 LDR X23, [X23 + 0x9D0]
	0x035819A8 MOV X19, X2
	0x035819AC MOV W21, W1
	0x035819B0 MOV X22, X0
	0x035819B4 TBNZ X8, 0x0, 0x35819F0
	0x035819B8 ADRP X0, 0xB72000
	0x035819BC LDR X0, [X0 + 0xA28]
	0x035819C0 BL 0x1C16CF4
	0x035819C4 ADRP X0, 0xB76000
	0x035819C8 LDR X0, [X0 + 0x628]
	0x035819CC BL 0x1C16CF4
	0x035819D0 ADRP X0, 0xB72000
	0x035819D4 LDR X0, [X0 + 0x9D0]
	0x035819D8 BL 0x1C16CF4
	0x035819DC ADRP X0, 0xBB5000
	0x035819E0 LDR X0, [X0 + 0x6D8]
	0x035819E4 BL 0x1C16CF4
	0x035819E8 MOVZ W8, 0x1
	0x035819EC STRB W8, [X20 + 0xEE0]
	0x035819F0 LDR X0, [X23]
	0x035819F4 MOVZ W1, 0x3
	0x035819F8 BL 0x1C16D6C
	0x035819FC CBZ X0, 0x3581AEC
	0x03581A00 LDR X22, [X22 + 0x30]
	0x03581A04 MOV X20, X0
	0x03581A08 CBZ X22, 0x3581A20
	0x03581A0C LDR X8, [X20]
	0x03581A10 MOV X0, X22
	0x03581A14 LDR X1, [X8 + 0x40]
	0x03581A18 BL 0x1C16E00

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0xE5F000
	009 Move W8, [X20+3795]
	010 Move W22, W2
	011 Move X19, X1
	012 Move X21, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {31}
	017 Move X0, 0xB78000
	018 Move X0, [X0+840]
	019 Call 0x1C17CF4
	020 Move X0, 0xB73000
	021 Move X0, [X0+1880]
	022 Call 0x1C17CF4
	023 Move X0, 0xB73000
	024 Move X0, [X0+2512]
	025 Call 0x1C17CF4
	026 Move X0, 0xBB6000
	027 Move X0, [X0+1624]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X20+3795], W8
	031 Move W8, [X21+60]
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move X0, [X21+64]
	034 Compare X0, 0
	035 JumpIfEqual {135}
	036 Move X1, X19
	037 Move X20, [X31+48]
	038 Move X19, [X31+56]
	039 Move X22, [X31+32]
	040 Move X21, [X31+40]
	041 Move X30, [X31+16]
	042 Move X23, [X31+24]
	043 Move X2, X31
	044 Add X31, X31, 64
	045 Call WebRTCAudioProcessor.OnAudioOutFrameFloat, X0, X1
	046 Return 
	047 Move X8, [X21+32]
	048 Compare X8, 0
	049 JumpIfEqual {135}
	050 Move X19, [X8+24]
	051 Move X8, 0xB73000
	052 Move X8, [X8+2512]
	053 Move W1, 2
	054 Move X0, [X8]
	055 Call 0x1C17D6C
	056 Move X23, 0xB73000
	057 Move X23, [X23+1880]
	058 Move X20, X0
	059 Add X1, X31, 12
	060 Move [X31+12], W22
	061 Move X0, [X23]
	062 Call 0x1C17E04
	063 Compare X20, 0
	064 JumpIfEqual {135}
	065 Move X22, X0
	066 Compare X0, 0
	067 JumpIfEqual {74}
	068 Move X8, [X20]
	069 Move X0, X22
	070 Move X1, [X8+64]
	071 Call 0x1C17E00
	072 Compare X0, 0
	073 JumpIfEqual {137}
	074 Move W8, [X20+24]
	075 Compare W8, 0
	076 JumpIfEqual {136}
	077 Move [X20+32], X22
	078 Move W8, [X21+60]
	079 Move X0, [X23]
	080 Add X1, X31, 8
	081 Move [X31+8], W8
	082 Call 0x1C17E04
	083 Move X21, X0
	084 Compare X0, 0
	085 JumpIfEqual {92}
	086 Move X8, [X20]
	087 Move X0, X21
	088 Move X1, [X8+64]
	089 Call 0x1C17E00
	090 Compare X0, 0
	091 JumpIfEqual {137}
	092 Move W8, [X20+24]
	093 NotImplemented "Instruction CMP not yet implemented."
	094 Move [X20+40], X21
	095 Compare X19, 0
	096 JumpIfEqual {135}
	097 Move X9, 0xB78000
	098 Move X8, [X19]
	099 Move X9, [X9+840]
	100 Move X10, 0xBB6000
	101 Move X1, [X9]
	102 Move X10, [X10+1624]
	103 NotImplemented "Instruction LDRH not yet implemented."
	104 Move X21, [X10]
	105 Compare X9, 0
	106 JumpIfEqual {113}
	107 Move X10, [X8+176]
	108 Add X10, X10, 8
	109 NotImplemented "Instruction LDUR not yet implemented."
	110 NotImplemented "Instruction CMP not yet implemented."
	111 Subtract X9, X9, 1
	112 Add X10, X10, 16
	113 Move W2, 1
	114 Move X0, X19
	115 Call 0x1C5D788
	116 Move W9, [X10]
	117 Add W9, W9, 1
	118 Add X8, X8, W9
	119 Add X0, X8, 312
	120 Move X8, [X0]
	121 Move X4, [X0+8]
	122 Move W1, 2
	123 Move X0, X19
	124 Move X2, X21
	125 Move X3, X20
	126 NotImplemented "Instruction BLR not yet implemented."
	127 Move X20, [X31+48]
	128 Move X19, [X31+56]
	129 Move X22, [X31+32]
	130 Move X21, [X31+40]
	131 Move X30, [X31+16]
	132 Move X23, [X31+24]
	133 Add X31, X31, 64
	134 Return 
	135 Call 0x1C17F20
	136 Call 0x1C17F28
	137 Call 0x1C17F44
	138 Move X1, X31
	139 Call 0x1C17DEC

Method: System.Void PhotonVoiceCreated(Photon.Voice.Unity.PhotonVoiceCreatedParams p)

Disassembly:
	0x03581A1C CBZ X0, 0x3581AE0
	0x03581A20 LDR W8, [X20 + 0x18]
	0x03581A24 CBZ W8, 0x3581ADC
	0x03581A28 ADRP X8, 0xB76000
	0x03581A2C LDR X8, [X8 + 0x628]
	0x03581A30 STR X22, [X20 + 0x20]
	0x03581A34 ADD X1, X31, 0xC
	0x03581A38 STRH W21, [X31 + 0xC]
	0x03581A3C LDR X0, [X8]
	0x03581A40 BL 0x1C16E04
	0x03581A44 MOV X21, X0
	0x03581A48 CBZ X0, 0x3581A60
	0x03581A4C LDR X8, [X20]
	0x03581A50 MOV X0, X21
	0x03581A54 LDR X1, [X8 + 0x40]
	0x03581A58 BL 0x1C16E00
	0x03581A5C CBZ X0, 0x3581AE0
	0x03581A60 LDR W8, [X20 + 0x18]
	0x03581A64 CMP W8, 0x1
	0x03581A68 B.LS 0x3581ADC
	0x03581A6C STR X21, [X20 + 0x28]
	0x03581A70 CBZ X19, 0x3581A8C
	0x03581A74 LDR X8, [X20]
	0x03581A78 MOV X0, X19
	0x03581A7C LDR X1, [X8 + 0x40]
	0x03581A80 BL 0x1C16E00
	0x03581A84 CBZ X0, 0x3581AE0
	0x03581A88 LDR W8, [X20 + 0x18]
	0x03581A8C CMP W8, 0x2
	0x03581A90 B.LS 0x3581ADC
	0x03581A94 ADRP X8, 0xB72000
	0x03581A98 LDR X8, [X8 + 0xA28]
	0x03581A9C STR X19, [X20 + 0x30]
	0x03581AA0 ADRP X19, 0xBB5000
	0x03581AA4 LDR X0, [X8]
	0x03581AA8 LDR W8, [X0 + 0xE0]
	0x03581AAC LDR X19, [X19 + 0x6D8]
	0x03581AB0 CBNZ W8, 0x3581AB8
	0x03581AB4 BL 0x1C16DFC
	0x03581AB8 LDR X0, [X19]
	0x03581ABC MOV X1, X20
	0x03581AC0 MOV X2, X31
	0x03581AC4 BL 0x3C066BC
	0x03581AC8 LDP X20, X19, [X31 + 0x30]
	0x03581ACC LDP X22, X21, [X31 + 0x20]
	0x03581AD0 LDP X30, X23, [X31 + 0x10]
	0x03581AD4 ADD X31, X31, 0x40
	0x03581AD8 RET
	0x03581ADC BL 0x1C16F28
	0x03581AE0 BL 0x1C16F44
	0x03581AE4 MOV X1, X31
	0x03581AE8 BL 0x1C16DEC
	0x03581AEC BL 0x1C16F20
	0x03581AF0 RET
	0x03581AF4 RET
	0x03581AF8 STP X30, X21, [X31 - 0x20]!
	0x03581AFC STP X20, X19, [X31 + 0x10]
	0x03581B00 ADRP X20, 0xE5E000
	0x03581B04 LDRB W8, [X20 + 0xEE1]
	0x03581B08 MOV X19, X0
	0x03581B0C TBNZ X8, 0x0, 0x3581B24
	0x03581B10 ADRP X0, 0xBB3000
	0x03581B14 LDR X0, [X0 + 0xCC8]
	0x03581B18 BL 0x1C16CF4
	0x03581B1C MOVZ W8, 0x1
	0x03581B20 STRB W8, [X20 + 0xEE1]
	0x03581B24 LDR X1, [X19 + 0x38]
	0x03581B28 CBZ X1, 0x3581BB8
	0x03581B2C LDR X8, [X1 + 0x18]
	0x03581B30 CBZ X8, 0x3581BB8
	0x03581B34 LDRB W9, [X19 + 0x2A]
	0x03581B38 STRB W9, [X8 + 0x42]
	0x03581B3C LDRB W8, [X19 + 0x28]
	0x03581B40 CBZ W8, 0x3581B90
	0x03581B44 STR X31, [X1 + 0x10]
	0x03581B48 LDR X8, [X19 + 0x20]
	0x03581B4C CBZ X8, 0x3581BB8
	0x03581B50 ADRP X9, 0xBB3000
	0x03581B54 LDR X9, [X9 + 0xCC8]
	0x03581B58 LDR X20, [X8 + 0x48]
	0x03581B5C LDR X0, [X9]
	0x03581B60 BL 0x1C16F10
	0x03581B64 MOV X1, X31
	0x03581B68 MOV X21, X0
	0x03581B6C BL 0x353B77C
	0x03581B70 CBZ X20, 0x3581BB8
	0x03581B74 LDR X2, [X19 + 0x38]
	0x03581B78 MOV X0, X20
	0x03581B7C LDP X20, X19, [X31 + 0x10]
	0x03581B80 MOV X1, X21
	0x03581B84 MOV X3, X31
	0x03581B88 LDP X30, X21, [X31], #0x20
	0x03581B8C B 0x353B794
	0x03581B90 LDR X8, [X19 + 0x30]
	0x03581B94 STR X8, [X1 + 0x10]
	0x03581B98 LDR X8, [X19 + 0x20]
	0x03581B9C CBZ X8, 0x3581BB8
	0x03581BA0 LDR X0, [X8 + 0x48]
	0x03581BA4 CBZ X0, 0x3581BB8
	0x03581BA8 LDP X20, X19, [X31 + 0x10]
	0x03581BAC MOV X2, X31
	0x03581BB0 LDP X30, X21, [X31], #0x20
	0x03581BB4 B 0x353B9D4
	0x03581BB8 BL 0x1C16F20
	0x03581BBC STR X30, [X31 - 0x20]!
	0x03581BC0 STP X20, X19, [X31 + 0x10]
	0x03581BC4 ADRP X19, 0xE5E000
	0x03581BC8 LDRB W8, [X19 + 0xEE2]
	0x03581BCC MOV W20, W1
	0x03581BD0 TBNZ X8, 0x0, 0x3581C0C
	0x03581BD4 ADRP X0, 0xB72000
	0x03581BD8 LDR X0, [X0 + 0xA28]
	0x03581BDC BL 0x1C16CF4
	0x03581BE0 ADRP X0, 0xBB3000
	0x03581BE4 LDR X0, [X0 + 0xB58]
	0x03581BE8 BL 0x1C16CF4
	0x03581BEC ADRP X0, 0xB72000
	0x03581BF0 LDR X0, [X0 + 0x9D0]
	0x03581BF4 BL 0x1C16CF4
	0x03581BF8 ADRP X0, 0xBB5000
	0x03581BFC LDR X0, [X0 + 0x6E0]
	0x03581C00 BL 0x1C16CF4
	0x03581C04 MOVZ W8, 0x1
	0x03581C08 STRB W8, [X19 + 0xEE2]
	0x03581C0C CMP W20, 0x14
	0x03581C10 B.HI 0x3581C2C
	0x03581C14 MOVZ W8, 0x1
	0x03581C18 MOVZ W9, 0x1
	0x03581C1C LSLV W8, W8, W20
	0x03581C20 MOVK W9, 0x120000
	0x03581C24 ANDS W31, W8, W9, 0x0
	0x03581C28 B.NE 0x3581CB8
	0x03581C2C ADRP X8, 0xB72000
	0x03581C30 LDR X8, [X8 + 0x9D0]
	0x03581C34 MOVZ W1, 0x1
	0x03581C38 LDR X0, [X8]
	0x03581C3C BL 0x1C16D6C
	0x03581C40 ADRP X8, 0xBB3000
	0x03581C44 LDR X8, [X8 + 0xB58]
	0x03581C48 MOV X19, X0
	0x03581C4C ADD X1, X31, 0xC
	0x03581C50 STR W20, [X31 + 0xC]
	0x03581C54 LDR X0, [X8]
	0x03581C58 BL 0x1C16E04
	0x03581C5C CBZ X19, 0x3581CC4
	0x03581C60 MOV X20, X0
	0x03581C64 CBZ X0, 0x3581C7C
	0x03581C68 LDR X8, [X19]
	0x03581C6C MOV X0, X20
	0x03581C70 LDR X1, [X8 + 0x40]
	0x03581C74 BL 0x1C16E00
	0x03581C78 CBZ X0, 0x3581CCC
	0x03581C7C LDR W8, [X19 + 0x18]
	0x03581C80 CBZ W8, 0x3581CC8
	0x03581C84 STR X20, [X19 + 0x20]
	0x03581C88 ADRP X8, 0xB72000
	0x03581C8C LDR X8, [X8 + 0xA28]
	0x03581C90 LDR X0, [X8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xE5F000
	006 Move W8, [X21+3796]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {30}
	013 Move X0, 0xB73000
	014 Move X0, [X0+2504]
	015 Call 0x1C17CF4
	016 Move X0, 0xB78000
	017 Move X0, [X0+840]
	018 Call 0x1C17CF4
	019 Move X0, 0xB9F000
	020 Move X0, [X0+360]
	021 Call 0x1C17CF4
	022 Move X0, 0xBB6000
	023 Move X0, [X0+1632]
	024 Call 0x1C17CF4
	025 Move X0, 0xBB6000
	026 Move X0, [X0+1640]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X21+3796], W8
	030 Move X0, X19
	031 Move X1, X31
	032 Call Behaviour.get_enabled, X0
	033 Move TEMP, X0
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfNotEqual {181}
	037 Compare X20, 0
	038 JumpIfEqual {186}
	039 Move X20, [X20+16]
	040 Compare X20, 0
	041 JumpIfEqual {186}
	042 Move W8, [X20+80]
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Move X8, 0xB9F000
	045 Move X8, [X8+360]
	046 Move X9, [X20]
	047 Move X8, [X8]
	048 Move W11, [X9+304]
	049 Move W10, [X8+304]
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Move X9, [X9+200]
	052 Add X9, X9, X10
	053 NotImplemented "Instruction LDUR not yet implemented."
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Move X9, [X19+32]
	056 Compare X9, 0
	057 JumpIfEqual {186}
	058 Move X8, 0xB73000
	059 Move X8, [X8+2504]
	060 Move X19, [X9+24]
	061 Move X20, [X8]
	062 Move X8, [X20+56]
	063 Compare X8, 0
	064 JumpIfNotEqual {68}
	065 Move X0, X20
	066 Call 0x1C5D6E0
	067 Move X8, [X20+56]
	068 Move X0, [X8+16]
	069 Move W8, [X0+309]
	070 Move TEMP, X8
	071 And TEMP, TEMP, 1
	072 Compare TEMP, 1
	073 JumpIfEqual {75}
	074 Call 0x1C5D684
	075 Move W8, [X0+224]
	076 Compare W8, 0
	077 JumpIfNotEqual {79}
	078 Call 0x1C17DFC
	079 Move X8, [X20+56]
	080 Move X0, [X8+16]
	081 Move W8, [X0+309]
	082 Move TEMP, X8
	083 And TEMP, TEMP, 1
	084 Compare TEMP, 1
	085 JumpIfEqual {87}
	086 Call 0x1C5D684
	087 Compare X19, 0
	088 JumpIfEqual {186}
	089 Move X10, 0xB78000
	090 Move X11, 0xBB6000
	091 Move X9, [X0+184]
	092 Move X10, [X10+840]
	093 Move X8, [X19]
	094 Move X11, [X11+1632]
	095 Move X20, [X9]
	096 Move X1, [X10]
	097 NotImplemented "Instruction LDRH not yet implemented."
	098 Move X21, [X11]
	099 Compare X9, 0
	100 JumpIfEqual {159}
	101 Move X10, [X8+176]
	102 Add X10, X10, 8
	103 NotImplemented "Instruction LDUR not yet implemented."
	104 NotImplemented "Instruction CMP not yet implemented."
	105 Subtract X9, X9, 1
	106 Add X10, X10, 16
	107 Move X9, [X19+32]
	108 Compare X9, 0
	109 JumpIfEqual {186}
	110 Move X8, 0xB73000
	111 Move X8, [X8+2504]
	112 Move X19, [X9+24]
	113 Move X20, [X8]
	114 Move X8, [X20+56]
	115 Compare X8, 0
	116 JumpIfNotEqual {120}
	117 Move X0, X20
	118 Call 0x1C5D6E0
	119 Move X8, [X20+56]
	120 Move X0, [X8+16]
	121 Move W8, [X0+309]
	122 Move TEMP, X8
	123 And TEMP, TEMP, 1
	124 Compare TEMP, 1
	125 JumpIfEqual {127}
	126 Call 0x1C5D684
	127 Move W8, [X0+224]
	128 Compare W8, 0
	129 JumpIfNotEqual {131}
	130 Call 0x1C17DFC
	131 Move X8, [X20+56]
	132 Move X0, [X8+16]
	133 Move W8, [X0+309]
	134 Move TEMP, X8
	135 And TEMP, TEMP, 1
	136 Compare TEMP, 1
	137 JumpIfEqual {139}
	138 Call 0x1C5D684
	139 Compare X19, 0
	140 JumpIfEqual {186}
	141 Move X10, 0xB78000
	142 Move X11, 0xBB6000
	143 Move X9, [X0+184]
	144 Move X10, [X10+840]
	145 Move X8, [X19]
	146 Move X11, [X11+1640]
	147 Move X20, [X9]
	148 Move X1, [X10]
	149 NotImplemented "Instruction LDRH not yet implemented."
	150 Move X21, [X11]
	151 Compare X9, 0
	152 JumpIfEqual {159}
	153 Move X10, [X8+176]
	154 Add X10, X10, 8
	155 NotImplemented "Instruction LDUR not yet implemented."
	156 NotImplemented "Instruction CMP not yet implemented."
	157 Subtract X9, X9, 1
	158 Add X10, X10, 16
	159 Move W2, 1
	160 Move X0, X19
	161 Call 0x1C5D788
	162 Move W9, [X10]
	163 Add W9, W9, 1
	164 Add X8, X8, W9
	165 Add X0, X8, 312
	166 Move X5, [X0]
	167 Move X4, [X0+8]
	168 Move X0, X19
	169 Move X3, X20
	170 Move X20, [X31+16]
	171 Move X19, [X31+24]
	172 Move W1, 1
	173 Move X2, X21
	174 Move X30, [X31+32]
	175 Move X21, [X31+40]
	176 CallNoReturn X5
	177 Move X0, X19
	178 Move X1, X20
	179 Call WebRtcAudioDsp.StartProc, X0, X1
	180 Move [X19+72], X20
	181 Move X20, [X31+16]
	182 Move X19, [X31+24]
	183 Move X30, [X31+32]
	184 Move X21, [X31+40]
	185 Return 
	186 Call 0x1C17F20

Method: System.Void PhotonVoiceRemoved()

Disassembly:
	0x03581FB4 LDR X8, [X20]
	0x03581FB8 MOV X0, X22
	0x03581FBC LDR X1, [X8 + 0x40]
	0x03581FC0 BL 0x1C16E00
	0x03581FC4 CBZ X0, 0x35821E0
	0x03581FC8 LDR W8, [X20 + 0x18]
	0x03581FCC CBZ W8, 0x35821DC

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X1, [X0+72]
	004 Move X19, X0
	005 Call WebRtcAudioDsp.StopProc, X0, X1
	006 Move [X19+72], X31
	007 Move X30, [X31+16]
	008 Move X19, [X31+24]
	009 Return 

Method: System.Void OnDestroy()

Disassembly:
	0x035821C4 LDR X2, [X8]
	0x035821C8 LDP X22, X21, [X31 + 0x10]
	0x035821CC LDR X30, [X31 + 0x8]
	0x035821D0 LDR V8, [X31], #0x30
	0x035821D4 B 0x31910B4
	0x035821D8 BL 0x1C16F20
	0x035821DC BL 0x1C16F28
	0x035821E0 BL 0x1C16F44
	0x035821E4 MOV X1, X31
	0x035821E8 BL 0x1C16DEC
	0x035821EC STR D8, [X31 - 0x20]!
	0x035821F0 STP X30, X19, [X31 + 0x10]
	0x035821F4 MOV X1, X31
	0x035821F8 MOV V8.16B, V0.16B
	0x035821FC MOV X19, X0
	0x03582200 BL 0x33BDD8C
	0x03582204 STR S8, [X19 + 0x10]
	0x03582208 LDP X30, X19, [X31 + 0x10]
	0x0358220C LDR V8, [X31], #0x20
	0x03582210 RET
	0x03582214 STR D8, [X31 - 0x20]!
	0x03582218 STP X30, X19, [X31 + 0x10]
	0x0358221C MOV X1, X31
	0x03582220 MOV V8.16B, V0.16B
	0x03582224 MOV X19, X0
	0x03582228 BL 0x33BDD8C
	0x0358222C STR S8, [X19 + 0x10]
	0x03582230 LDP X30, X19, [X31 + 0x10]
	0x03582234 LDR V8, [X31], #0x20
	0x03582238 RET
	0x0358223C MOVZ W8, 0x3F800000
	0x03582240 STR W8, [X0 + 0x28]
	0x03582244 B 0x357413C
	0x03582248 LDR V0, [X0 + 0x10]
	0x0358224C RET

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xE5E000
	007 Move X21, 0xB77000
	008 Move X20, 0xBB5000
	009 Move W8, [X22+3797]
	010 Move X21, [X21+1032]
	011 Move X20, [X20+1576]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0xB77000
	018 Move X0, [X0+1032]
	019 Call 0x1C17CF4
	020 Move X0, 0xBB5000
	021 Move X0, [X0+1576]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X22+3797], W8
	025 Move X1, [X19+72]
	026 Move X0, X19
	027 Call WebRtcAudioDsp.StopProc, X0, X1
	028 Move X0, [X21]
	029 Call 0x1C17F10
	030 Move X2, [X20]
	031 Move X1, X19
	032 Move X3, X31
	033 Move X20, X0
	034 Call AudioConfigurationChangeHandler..ctor, X0, X1, X2
	035 Move X0, X20
	036 Move X20, [X31+32]
	037 Move X19, [X31+40]
	038 Move X22, [X31+16]
	039 Move X21, [X31+24]
	040 Move X1, X31
	041 Move X30, [X31+48]
	042 Call AudioSettings.remove_OnAudioConfigurationChanged, X0
	043 Return 

Method: System.Void StartProc(Photon.Voice.LocalVoiceAudioShort v)

Disassembly:
	0x03581C94 LDR W8, [X0 + 0xE0]
	0x03581C98 CBNZ W8, 0x3581CA0
	0x03581C9C BL 0x1C16DFC
	0x03581CA0 ADRP X8, 0xBB5000
	0x03581CA4 LDR X8, [X8 + 0x6E0]
	0x03581CA8 MOV X1, X19
	0x03581CAC MOV X2, X31
	0x03581CB0 LDR X0, [X8]
	0x03581CB4 BL 0x3C066BC
	0x03581CB8 LDP X20, X19, [X31 + 0x10]
	0x03581CBC LDR X30, [X31], #0x20
	0x03581CC0 RET
	0x03581CC4 BL 0x1C16F20
	0x03581CC8 BL 0x1C16F28
	0x03581CCC BL 0x1C16F44
	0x03581CD0 MOV X1, X31
	0x03581CD4 BL 0x1C16DEC
	0x03581CD8 RET
	0x03581CDC RET
	0x03581CE0 RET
	0x03581CE4 STR X30, [X31 - 0x30]!
	0x03581CE8 STP X22, X21, [X31 + 0x10]
	0x03581CEC STP X20, X19, [X31 + 0x20]
	0x03581CF0 ADRP X22, 0xE5E000
	0x03581CF4 ADRP X20, 0xBB3000
	0x03581CF8 ADRP X21, 0xBB3000
	0x03581CFC LDRB W8, [X22 + 0xEE3]
	0x03581D00 LDR X20, [X20 + 0xCC0]
	0x03581D04 LDR X21, [X21 + 0xFA8]
	0x03581D08 MOV X19, X0
	0x03581D0C TBNZ X8, 0x0, 0x3581D30
	0x03581D10 ADRP X0, 0xBB3000
	0x03581D14 LDR X0, [X0 + 0xCC0]
	0x03581D18 BL 0x1C16CF4
	0x03581D1C ADRP X0, 0xBB3000
	0x03581D20 LDR X0, [X0 + 0xFA8]
	0x03581D24 BL 0x1C16CF4
	0x03581D28 MOVZ W8, 0x1
	0x03581D2C STRB W8, [X22 + 0xEE3]
	0x03581D30 MOVZ W8, 0x101
	0x03581D34 STRH W8, [X19 + 0x28]
	0x03581D38 LDR X0, [X20]
	0x03581D3C BL 0x1C16F10
	0x03581D40 MOV X1, X31
	0x03581D44 MOV X20, X0
	0x03581D48 BL 0x353B784
	0x03581D4C LDR X0, [X21]
	0x03581D50 BL 0x1C16F10
	0x03581D54 MOV X1, X31
	0x03581D58 MOV X21, X0
	0x03581D5C BL 0x3545AC4
	0x03581D60 CBZ X20, 0x3581D84
	0x03581D64 STR X21, [X20 + 0x18]
	0x03581D68 STR X20, [X19 + 0x38]
	0x03581D6C MOV X0, X19
	0x03581D70 LDP X20, X19, [X31 + 0x20]
	0x03581D74 LDP X22, X21, [X31 + 0x10]
	0x03581D78 MOV X1, X31
	0x03581D7C LDR X30, [X31], #0x30
	0x03581D80 B 0x3C36C30
	0x03581D84 BL 0x1C16F20
	0x03581D88 LDR V0, [X0 + 0x28]
	0x03581D8C RET
	0x03581D90 STR D8, [X31 - 0x20]!
	0x03581D94 STP X30, X19, [X31 + 0x10]
	0x03581D98 MOV X19, X0
	0x03581D9C ADD X0, X0, 0x28
	0x03581DA0 MOV X1, X31
	0x03581DA4 MOV V8.16B, V0.16B
	0x03581DA8 BL 0x338FDC0
	0x03581DAC TBNZ X0, 0x0, 0x3581DCC
	0x03581DB0 LDR X8, [X19 + 0x30]
	0x03581DB4 STR S8, [X19 + 0x28]
	0x03581DB8 CBZ X8, 0x3581DC0
	0x03581DBC STR S8, [X8 + 0x10]
	0x03581DC0 LDR X8, [X19 + 0x38]
	0x03581DC4 CBZ X8, 0x3581DCC
	0x03581DC8 STR S8, [X8 + 0x10]
	0x03581DCC LDP X30, X19, [X31 + 0x10]
	0x03581DD0 LDR V8, [X31], #0x20
	0x03581DD4 RET
	0x03581DD8 LDR X8, [X0 + 0x30]
	0x03581DDC CBZ X8, 0x3581DE4
	0x03581DE0 STRB W31, [X8 + 0x14]
	0x03581DE4 LDR X8, [X0 + 0x38]
	0x03581DE8 CBZ X8, 0x3581DF0
	0x03581DEC STRB W31, [X8 + 0x14]
	0x03581DF0 RET
	0x03581DF4 LDR X8, [X0 + 0x30]
	0x03581DF8 CBZ X8, 0x3581E04
	0x03581DFC MOVZ W9, 0x1
	0x03581E00 STRB W9, [X8 + 0x14]
	0x03581E04 LDR X8, [X0 + 0x38]
	0x03581E08 CBZ X8, 0x3581E14
	0x03581E0C MOVZ W9, 0x1
	0x03581E10 STRB W9, [X8 + 0x14]
	0x03581E14 RET
	0x03581E18 STR D8, [X31 - 0x30]!
	0x03581E1C STR X30, [X31 + 0x8]
	0x03581E20 STP X22, X21, [X31 + 0x10]
	0x03581E24 STP X20, X19, [X31 + 0x20]
	0x03581E28 ADRP X19, 0xE5E000
	0x03581E2C LDRB W8, [X19 + 0xEE4]
	0x03581E30 MOV X21, X1
	0x03581E34 MOV X20, X0
	0x03581E38 TBNZ X8, 0x0, 0x3581ED4
	0x03581E3C ADRP X0, 0xB77000
	0x03581E40 LDR X0, [X0 + 0x348]
	0x03581E44 BL 0x1C16CF4
	0x03581E48 ADRP X0, 0xBB5000
	0x03581E4C LDR X0, [X0 + 0x6E8]
	0x03581E50 BL 0x1C16CF4
	0x03581E54 ADRP X0, 0xBB5000
	0x03581E58 LDR X0, [X0 + 0x670]
	0x03581E5C BL 0x1C16CF4
	0x03581E60 ADRP X0, 0xB9E000
	0x03581E64 LDR X0, [X0 + 0x160]
	0x03581E68 BL 0x1C16CF4
	0x03581E6C ADRP X0, 0xB9E000
	0x03581E70 LDR X0, [X0 + 0x168]
	0x03581E74 BL 0x1C16CF4
	0x03581E78 ADRP X0, 0xBB5000
	0x03581E7C LDR X0, [X0 + 0x6F0]
	0x03581E80 BL 0x1C16CF4
	0x03581E84 ADRP X0, 0xBB5000
	0x03581E88 LDR X0, [X0 + 0x678]
	0x03581E8C BL 0x1C16CF4
	0x03581E90 ADRP X0, 0xBB5000
	0x03581E94 LDR X0, [X0 + 0x6F8]
	0x03581E98 BL 0x1C16CF4
	0x03581E9C ADRP X0, 0xBB5000
	0x03581EA0 LDR X0, [X0 + 0x700]
	0x03581EA4 BL 0x1C16CF4
	0x03581EA8 ADRP X0, 0xB72000
	0x03581EAC LDR X0, [X0 + 0x9D0]
	0x03581EB0 BL 0x1C16CF4
	0x03581EB4 ADRP X0, 0xB72000
	0x03581EB8 LDR X0, [X0 + 0x830]
	0x03581EBC BL 0x1C16CF4
	0x03581EC0 ADRP X0, 0xBB5000
	0x03581EC4 LDR X0, [X0 + 0x708]
	0x03581EC8 BL 0x1C16CF4
	0x03581ECC MOVZ W8, 0x1
	0x03581ED0 STRB W8, [X19 + 0xEE4]
	0x03581ED4 CBZ X21, 0x35821D8
	0x03581ED8 LDR X19, [X21 + 0x10]
	0x03581EDC CBZ X19, 0x3581F40
	0x03581EE0 ADRP X22, 0xB9E000
	0x03581EE4 LDR X22, [X22 + 0x160]
	0x03581EE8 LDR X8, [X19]
	0x03581EEC LDR X10, [X22]
	0x03581EF0 LDRB W9, [X8 + 0x130]
	0x03581EF4 LDRB W11, [X10 + 0x130]
	0x03581EF8 CMP W9, W11
	0x03581EFC B.CC 0x3581F14
	0x03581F00 LDR X12, [X8 + 0xC8]
	0x03581F04 ADD X11, X12, X11, 0x3, LSL
	0x03581F08 LDUR X11, [X11 - 0x8]
	0x03581F0C CMP X11, X10
	0x03581F10 B.EQ 0x3582058
	0x03581F14 ADRP X22, 0xB9E000
	0x03581F18 LDR X22, [X22 + 0x168]
	0x03581F1C LDR X10, [X22]
	0x03581F20 LDRB W11, [X10 + 0x130]
	0x03581F24 CMP W9, W11
	0x03581F28 B.CC 0x3581F40
	0x03581F2C LDR X8, [X8 + 0xC8]
	0x03581F30 ADD X8, X8, X11, 0x3, LSL
	0x03581F34 LDUR X8, [X8 - 0x8]
	0x03581F38 CMP X8, X10
	0x03581F3C B.EQ 0x3582118
	0x03581F40 LDR X8, [X20 + 0x20]
	0x03581F44 CBZ X8, 0x35821D8
	0x03581F48 ADRP X9, 0xB72000
	0x03581F4C LDR X9, [X9 + 0x9D0]
	0x03581F50 ADRP X20, 0xBB5000
	0x03581F54 LDR X19, [X8 + 0x18]
	0x03581F58 MOVZ W1, 0x1
	0x03581F5C LDR X0, [X9]
	0x03581F60 LDR X20, [X20 + 0x708]
	0x03581F64 BL 0x1C16D6C
	0x03581F68 LDR X8, [X21 + 0x10]
	0x03581F6C LDR X21, [X20]
	0x03581F70 MOV X20, X0
	0x03581F74 CBZ X8, 0x3581FA0
	0x03581F78 MOV X0, X8
	0x03581F7C MOV X1, X31
	0x03581F80 BL 0x33BE520
	0x03581F84 CBZ X0, 0x35821D8
	0x03581F88 LDR X8, [X0]
	0x03581F8C LDP X9, X1, [X8 + 0x168]
	0x03581F90 BLR X9
	0x03581F94 MOV X22, X0
	0x03581F98 CBNZ X20, 0x3581FB0
	0x03581F9C B 0x35821D8
	0x03581FA0 ADRP X8, 0xB72000
	0x03581FA4 LDR X8, [X8 + 0x830]
	0x03581FA8 LDR X22, [X8]
	0x03581FAC CBZ X20, 0x35821D8
	0x03581FB0 CBZ X22, 0x3581FC8

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+48], X30
	003 Move [X31+64], X28
	004 Move [X31+72], X27
	005 Move [X31+80], X26
	006 Move [X31+88], X25
	007 Move [X31+96], X24
	008 Move [X31+104], X23
	009 Move [X31+112], X22
	010 Move [X31+120], X21
	011 Move [X31+128], X20
	012 Move [X31+136], X19
	013 Move X21, 0xE5F000
	014 Move W8, [X21+3798]
	015 Move X19, X1
	016 Move X20, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {47}
	021 Move X0, 0xB73000
	022 Move X0, [X0+2504]
	023 Call 0x1C17CF4
	024 Move X0, 0xBB6000
	025 Move X0, [X0+1592]
	026 Call 0x1C17CF4
	027 Move X0, 0xB78000
	028 Move X0, [X0+840]
	029 Call 0x1C17CF4
	030 Move X0, 0xBB6000
	031 Move X0, [X0+1648]
	032 Call 0x1C17CF4
	033 Move X0, 0xBB6000
	034 Move X0, [X0+1656]
	035 Call 0x1C17CF4
	036 Move X0, 0xBB5000
	037 Move X0, [X0+3424]
	038 Call 0x1C17CF4
	039 Move X0, 0xBB6000
	040 Move X0, [X0+1600]
	041 Call 0x1C17CF4
	042 Move X0, 0xB78000
	043 Move X0, [X0+1920]
	044 Call 0x1C17CF4
	045 Move W8, 1
	046 Move [X21+3798], W8
	047 NotImplemented "Instruction MOVI not yet implemented."
	048 Move [X31+16], V0
	049 Move [X31+24], V0
	050 Move [X31], V0
	051 Move X9, [X20+32]
	052 Compare X9, 0
	053 JumpIfEqual {230}
	054 Move X8, 0xB73000
	055 Move X8, [X8+2504]
	056 Move X21, [X9+24]
	057 Move X22, [X8]
	058 Move X8, [X22+56]
	059 Compare X8, 0
	060 JumpIfNotEqual {64}
	061 Move X0, X22
	062 Call 0x1C5D6E0
	063 Move X8, [X22+56]
	064 Move X0, [X8+16]
	065 Move W8, [X0+309]
	066 Move TEMP, X8
	067 And TEMP, TEMP, 1
	068 Compare TEMP, 1
	069 JumpIfEqual {71}
	070 Call 0x1C5D684
	071 Move W8, [X0+224]
	072 Compare W8, 0
	073 JumpIfNotEqual {75}
	074 Call 0x1C17DFC
	075 Move X8, [X22+56]
	076 Move X0, [X8+16]
	077 Move W8, [X0+309]
	078 Move TEMP, X8
	079 And TEMP, TEMP, 1
	080 Compare TEMP, 1
	081 JumpIfEqual {83}
	082 Call 0x1C5D684
	083 Compare X21, 0
	084 JumpIfEqual {230}
	085 Move X9, 0xB78000
	086 Move X11, 0xB78000
	087 Move X9, [X9+840]
	088 Move X10, [X0+184]
	089 Move X8, [X21]
	090 Move X11, [X11+1920]
	091 Move X24, 0xBB6000
	092 Move X1, [X9]
	093 Move X22, [X10]
	094 NotImplemented "Instruction LDRH not yet implemented."
	095 Move X23, [X11]
	096 Move X24, [X24+1600]
	097 Compare X9, 0
	098 JumpIfEqual {105}
	099 Move X10, [X8+176]
	100 Add X10, X10, 8
	101 NotImplemented "Instruction LDUR not yet implemented."
	102 NotImplemented "Instruction CMP not yet implemented."
	103 Subtract X9, X9, 1
	104 Add X10, X10, 16
	105 Move W2, 1
	106 Move X0, X21
	107 Call 0x1C5D788
	108 Move W9, [X10]
	109 Add W9, W9, 1
	110 Add X8, X8, W9
	111 Add X0, X8, 312
	112 Move X8, [X0]
	113 Move X4, [X0+8]
	114 Move W1, 3
	115 Move X0, X21
	116 Move X2, X23
	117 Move X3, X22
	118 NotImplemented "Instruction BLR not yet implemented."
	119 Move X0, [X24]
	120 Move W8, [X0+224]
	121 Compare W8, 0
	122 JumpIfNotEqual {125}
	123 Call 0x1C17DFC
	124 Move X0, [X24]
	125 Move X8, [X0+184]
	126 Move X0, X31
	127 Move X21, [X8]
	128 Call AudioSettings.get_speakerMode
	129 Compare X21, 0
	130 JumpIfEqual {230}
	131 Move X8, 0xBB6000
	132 Move X8, [X8+1592]
	133 Move W1, W0
	134 Move X0, X21
	135 Move X2, [X8]
	136 Call Dictionary`2<Int32Enum, Int32>.get_Item, X0, X1
	137 Move [X20+60], W0
	138 Move X0, X31
	139 Call AudioSettings.get_outputSampleRate
	140 Move X8, [X20+32]
	141 Move [X20+80], W0
	142 Compare X8, 0
	143 JumpIfEqual {230}
	144 Compare X19, 0
	145 JumpIfEqual {230}
	146 Move X26, 0xBB5000
	147 Move X28, 0xBB6000
	148 Move X26, [X26+3424]
	149 Move X28, [X28+1648]
	150 NotImplemented "Instruction LDUR not yet implemented."
	151 NotImplemented "Instruction LDUR not yet implemented."
	152 NotImplemented "Instruction LDUR not yet implemented."
	153 Move X21, [X8+24]
	154 Add X0, X31, 0
	155 Move X1, X31
	156 Move [X31+16], V1
	157 Move [X31+24], V0
	158 Move [X31], V2
	159 Call VoiceInfo.get_FrameSize, X0
	160 NotImplemented "Instruction LDUR not yet implemented."
	161 NotImplemented "Instruction LDUR not yet implemented."
	162 NotImplemented "Instruction LDUR not yet implemented."
	163 Move X8, [X26]
	164 Move W26, W0
	165 Move [X31], V1
	166 Move [X31+16], V2
	167 Move [X31+24], V0
	168 NotImplemented "Instruction LDUR not yet implemented."
	169 NotImplemented "Instruction LDUR not yet implemented."
	170 NotImplemented "Instruction LDUR not yet implemented."
	171 Move W22, [X31+4]
	172 Move X0, X8
	173 Move [X31], V1
	174 Move [X31+16], V2
	175 Move [X31+24], V0
	176 Move W23, [X31+8]
	177 Move W24, [X20+80]
	178 Move W25, [X20+60]
	179 Call 0x1C17F10
	180 Move X1, X21
	181 Move W2, W26
	182 Move W3, W22
	183 Move W4, W23
	184 Move W5, W24
	185 Move W6, W25
	186 Move X7, X31
	187 Move X27, X0
	188 Call WebRTCAudioProcessor..ctor, X0, X1, X2, X3, X4, X5, X6
	189 Move X0, X20
	190 Move [X20+64], X27
	191 Call WebRtcAudioDsp.applyToProc, X0
	192 Move X0, [X28]
	193 Move W1, 1
	194 Call 0x1C17D6C
	195 Compare X0, 0
	196 JumpIfEqual {230}
	197 Move X20, [X20+64]
	198 Move X21, X0
	199 Compare X20, 0
	200 JumpIfEqual {207}
	201 Move X8, [X21]
	202 Move X0, X20
	203 Move X1, [X8+64]
	204 Call 0x1C17E00
	205 Compare X0, 0
	206 JumpIfEqual {232}
	207 Move W8, [X21+24]
	208 Compare W8, 0
	209 JumpIfEqual {231}
	210 Move X8, 0xBB6000
	211 Move X8, [X8+1656]
	212 Move [X21+32], X20
	213 Move X0, X19
	214 Move X1, X21
	215 Move X2, [X8]
	216 Call 0x31920B4, X0, X1
	217 Move X20, [X31+128]
	218 Move X19, [X31+136]
	219 Move X22, [X31+112]
	220 Move X21, [X31+120]
	221 Move X24, [X31+96]
	222 Move X23, [X31+104]
	223 Move X26, [X31+80]
	224 Move X25, [X31+88]
	225 Move X28, [X31+64]
	226 Move X27, [X31+72]
	227 Move X30, [X31+48]
	228 Add X31, X31, 144
	229 Return 
	230 Call 0x1C17F20
	231 Call 0x1C17F28
	232 Call 0x1C17F44
	233 Move X1, X31
	234 Call 0x1C17DEC

Method: System.Void StopProc(Photon.Voice.LocalVoiceAudioShort v)

Disassembly:
	0x03581FD0 STR X22, [X20 + 0x20]
	0x03581FD4 CBZ X19, 0x35821D8
	0x03581FD8 ADRP X10, 0xB77000
	0x03581FDC LDR X8, [X19]
	0x03581FE0 LDR X10, [X10 + 0x348]
	0x03581FE4 LDRH W9, [X8 + 0x12E]
	0x03581FE8 LDR X1, [X10]
	0x03581FEC CBZ X9, 0x3582010
	0x03581FF0 LDR X10, [X8 + 0xB0]
	0x03581FF4 ADD X10, X10, 0x8
	0x03581FF8 LDUR X11, [X10 - 0x8]
	0x03581FFC CMP X11, X1
	0x03582000 B.EQ 0x3582020
	0x03582004 SUBS X9, X9, 0x1
	0x03582008 ADD X10, X10, 0x10
	0x0358200C B.NE 0x3581FF8
	0x03582010 MOVZ W2, 0x1
	0x03582014 MOV X0, X19
	0x03582018 BL 0x1C5C788
	0x0358201C B 0x3582030
	0x03582020 LDR W9, [X10]
	0x03582024 ADD W9, W9, 0x1
	0x03582028 ADD X8, X8, W9, 0x4, SXTW
	0x0358202C ADD X0, X8, 0x138
	0x03582030 LDP X5, X4, [X0]
	0x03582034 MOV X0, X19
	0x03582038 MOV X2, X21
	0x0358203C MOV X3, X20
	0x03582040 LDP X20, X19, [X31 + 0x20]
	0x03582044 LDP X22, X21, [X31 + 0x10]
	0x03582048 LDR X30, [X31 + 0x8]
	0x0358204C MOVZ W1, 0x1
	0x03582050 LDR V8, [X31], #0x30
	0x03582054 BR X5
	0x03582058 ADRP X8, 0xBB4000
	0x0358205C LDR V8, [X20 + 0x28]
	0x03582060 LDR X8, [X8 + 0x6F8]
	0x03582064 LDR X0, [X8]
	0x03582068 BL 0x1C16F10
	0x0358206C MOV X1, X31
	0x03582070 MOV X21, X0
	0x03582074 BL 0x33BDD8C
	0x03582078 STR S8, [X21 + 0x10]
	0x0358207C STR X21, [X20 + 0x30]
	0x03582080 ADRP X8, 0xBB4000
	0x03582084 LDR X8, [X8 + 0x6E8]
	0x03582088 MOVZ W1, 0x1
	0x0358208C LDR X0, [X8]
	0x03582090 BL 0x1C16D6C
	0x03582094 CBZ X0, 0x35821D8
	0x03582098 LDR X20, [X20 + 0x30]
	0x0358209C MOV X21, X0
	0x035820A0 CBZ X20, 0x35820B8
	0x035820A4 LDR X8, [X21]
	0x035820A8 MOV X0, X20
	0x035820AC LDR X1, [X8 + 0x40]
	0x035820B0 BL 0x1C16E00
	0x035820B4 CBZ X0, 0x35821E0
	0x035820B8 LDR W8, [X21 + 0x18]
	0x035820BC CBZ W8, 0x35821DC
	0x035820C0 STR X20, [X21 + 0x20]
	0x035820C4 LDR X9, [X19]
	0x035820C8 LDR X8, [X22]
	0x035820CC LDRB W11, [X9 + 0x130]
	0x035820D0 LDRB W10, [X8 + 0x130]
	0x035820D4 CMP W11, W10
	0x035820D8 B.CC 0x35821D8
	0x035820DC LDR X9, [X9 + 0xC8]
	0x035820E0 ADD X9, X9, X10, 0x3, LSL
	0x035820E4 LDUR X9, [X9 - 0x8]
	0x035820E8 CMP X9, X8
	0x035820EC B.NE 0x35821D8
	0x035820F0 ADRP X8, 0xBB4000
	0x035820F4 LDR X8, [X8 + 0x6F0]
	0x035820F8 MOV X0, X19
	0x035820FC MOV X1, X21
	0x03582100 LDP X20, X19, [X31 + 0x20]
	0x03582104 LDR X2, [X8]
	0x03582108 LDP X22, X21, [X31 + 0x10]
	0x0358210C LDR X30, [X31 + 0x8]
	0x03582110 LDR V8, [X31], #0x30
	0x03582114 B 0x31932AC
	0x03582118 ADRP X8, 0xBB4000
	0x0358211C LDR V8, [X20 + 0x28]
	0x03582120 LDR X8, [X8 + 0x700]
	0x03582124 LDR X0, [X8]
	0x03582128 BL 0x1C16F10
	0x0358212C MOV X1, X31
	0x03582130 MOV X21, X0
	0x03582134 BL 0x33BDD8C
	0x03582138 STR S8, [X21 + 0x10]
	0x0358213C STR X21, [X20 + 0x38]
	0x03582140 ADRP X8, 0xBB4000
	0x03582144 LDR X8, [X8 + 0x670]
	0x03582148 MOVZ W1, 0x1
	0x0358214C LDR X0, [X8]
	0x03582150 BL 0x1C16D6C
	0x03582154 CBZ X0, 0x35821D8
	0x03582158 LDR X20, [X20 + 0x38]
	0x0358215C MOV X21, X0
	0x03582160 CBZ X20, 0x3582178
	0x03582164 LDR X8, [X21]
	0x03582168 MOV X0, X20
	0x0358216C LDR X1, [X8 + 0x40]
	0x03582170 BL 0x1C16E00
	0x03582174 CBZ X0, 0x35821E0
	0x03582178 LDR W8, [X21 + 0x18]
	0x0358217C CBZ W8, 0x35821DC
	0x03582180 STR X20, [X21 + 0x20]
	0x03582184 LDR X9, [X19]
	0x03582188 LDR X8, [X22]
	0x0358218C LDRB W11, [X9 + 0x130]
	0x03582190 LDRB W10, [X8 + 0x130]
	0x03582194 CMP W11, W10
	0x03582198 B.CC 0x35821D8
	0x0358219C LDR X9, [X9 + 0xC8]
	0x035821A0 ADD X9, X9, X10, 0x3, LSL
	0x035821A4 LDUR X9, [X9 - 0x8]
	0x035821A8 CMP X9, X8
	0x035821AC B.NE 0x35821D8
	0x035821B0 ADRP X8, 0xBB4000
	0x035821B4 LDR X8, [X8 + 0x678]
	0x035821B8 MOV X0, X19
	0x035821BC MOV X1, X21
	0x035821C0 LDP X20, X19, [X31 + 0x20]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0xE5F000
	008 Move W8, [X21+3799]
	009 Move X19, X1
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {32}
	015 Move X0, 0xB73000
	016 Move X0, [X0+2504]
	017 Call 0x1C17CF4
	018 Move X0, 0xB78000
	019 Move X0, [X0+840]
	020 Call 0x1C17CF4
	021 Move X0, 0xBB5000
	022 Move X0, [X0+1648]
	023 Call 0x1C17CF4
	024 Move X0, 0xBB5000
	025 Move X0, [X0+1664]
	026 Call 0x1C17CF4
	027 Move X0, 0xBB4000
	028 Move X0, [X0+3824]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X21+3799], W8
	032 Move X9, [X20+32]
	033 Compare X9, 0
	034 JumpIfEqual {149}
	035 Move X8, 0xB72000
	036 Move X8, [X8+2504]
	037 Move X21, [X9+24]
	038 Move X22, [X8]
	039 Move X8, [X22+56]
	040 Compare X8, 0
	041 JumpIfNotEqual {45}
	042 Move X0, X22
	043 Call 0x1C5D6E0
	044 Move X8, [X22+56]
	045 Move X0, [X8+16]
	046 Move W8, [X0+309]
	047 Move TEMP, X8
	048 And TEMP, TEMP, 1
	049 Compare TEMP, 1
	050 JumpIfEqual {52}
	051 Call 0x1C5D684
	052 Move W8, [X0+224]
	053 Compare W8, 0
	054 JumpIfNotEqual {56}
	055 Call 0x1C17DFC
	056 Move X8, [X22+56]
	057 Move X0, [X8+16]
	058 Move W8, [X0+309]
	059 Move TEMP, X8
	060 And TEMP, TEMP, 1
	061 Compare TEMP, 1
	062 JumpIfEqual {64}
	063 Call 0x1C5D684
	064 Compare X21, 0
	065 JumpIfEqual {149}
	066 Move X9, 0xB77000
	067 Move X11, 0xBB4000
	068 Move X9, [X9+840]
	069 Move X10, [X0+184]
	070 Move X8, [X21]
	071 Move X11, [X11+3824]
	072 Move X1, [X9]
	073 Move X22, [X10]
	074 NotImplemented "Instruction LDRH not yet implemented."
	075 Move X23, [X11]
	076 Compare X9, 0
	077 JumpIfEqual {84}
	078 Move X10, [X8+176]
	079 Add X10, X10, 8
	080 NotImplemented "Instruction LDUR not yet implemented."
	081 NotImplemented "Instruction CMP not yet implemented."
	082 Subtract X9, X9, 1
	083 Add X10, X10, 16
	084 Move W2, 1
	085 Move X0, X21
	086 Call 0x1C5D788
	087 Move W9, [X10]
	088 Add W9, W9, 1
	089 Add X8, X8, W9
	090 Add X0, X8, 312
	091 Move X8, [X0]
	092 Move X4, [X0+8]
	093 Move W1, 3
	094 Move X0, X21
	095 Move X2, X23
	096 Move X3, X22
	097 NotImplemented "Instruction BLR not yet implemented."
	098 Move X0, X20
	099 Move W1, W31
	100 Call WebRtcAudioDsp.setOutputListener, X0, X1
	101 Move X0, [X20+64]
	102 Compare X0, 0
	103 JumpIfEqual {106}
	104 Move X1, X31
	105 Call WebRTCAudioProcessor.Dispose, X0
	106 Compare X19, 0
	107 JumpIfEqual {142}
	108 Move X8, 0xBB5000
	109 Move X8, [X8+1648]
	110 Move W1, 1
	111 Move X0, [X8]
	112 Call 0x1C17D6C
	113 Compare X0, 0
	114 JumpIfEqual {149}
	115 Move X20, [X20+64]
	116 Move X21, X0
	117 Compare X20, 0
	118 JumpIfEqual {125}
	119 Move X8, [X21]
	120 Move X0, X20
	121 Move X1, [X8+64]
	122 Call 0x1C17E00
	123 Compare X0, 0
	124 JumpIfEqual {151}
	125 Move W8, [X21+24]
	126 Compare W8, 0
	127 JumpIfEqual {150}
	128 Move X8, 0xBB5000
	129 Move X8, [X8+1664]
	130 Move [X21+32], X20
	131 Move X0, X19
	132 Move X1, X21
	133 Move X2, [X8]
	134 Move X20, [X31+32]
	135 Move X19, [X31+40]
	136 Move X22, [X31+16]
	137 Move X21, [X31+24]
	138 Move X30, [X31+48]
	139 Move X23, [X31+56]
	140 Call 0x3192368, X0, X1
	141 Return 
	142 Move X20, [X31+32]
	143 Move X19, [X31+40]
	144 Move X22, [X31+16]
	145 Move X21, [X31+24]
	146 Move X30, [X31+48]
	147 Move X23, [X31+56]
	148 Return 
	149 Call 0x1C17F20
	150 Call 0x1C17F28
	151 Call 0x1C17F44
	152 Move X1, X31
	153 Call 0x1C17DEC

Method: System.Void Restart()

Disassembly:
	0x0358115C LDR X8, [X21]
	0x03581160 MOV X0, X20
	0x03581164 LDR X1, [X8 + 0x40]
	0x03581168 BL 0x1C16E00
	0x0358116C CBZ X0, 0x35811B8
	0x03581170 LDR W8, [X21 + 0x18]
	0x03581174 CBZ W8, 0x35811B4
	0x03581178 ADRP X8, 0xBB5000
	0x0358117C LDR X8, [X8 + 0x680]
	0x03581180 STR X20, [X21 + 0x20]
	0x03581184 MOV X0, X19
	0x03581188 MOV X1, X21
	0x0358118C LDR X2, [X8]
	0x03581190 LDP X20, X19, [X31 + 0x20]
	0x03581194 LDP X22, X21, [X31 + 0x10]
	0x03581198 LDP X30, X23, [X31], #0x30
	0x0358119C B 0x3191368
	0x035811A0 LDP X20, X19, [X31 + 0x20]
	0x035811A4 LDP X22, X21, [X31 + 0x10]
	0x035811A8 LDP X30, X23, [X31], #0x30
	0x035811AC RET
	0x035811B0 BL 0x1C16F20
	0x035811B4 BL 0x1C16F28
	0x035811B8 BL 0x1C16F44
	0x035811BC MOV X1, X31
	0x035811C0 BL 0x1C16DEC
	0x035811C4 STR X30, [X31 - 0x30]!
	0x035811C8 STP X22, X21, [X31 + 0x10]
	0x035811CC STP X20, X19, [X31 + 0x20]
	0x035811D0 ADRP X22, 0xE5E000
	0x035811D4 ADRP X21, 0xB77000
	0x035811D8 ADRP X20, 0xBB5000
	0x035811DC LDRB W8, [X22 + 0xED5]
	0x035811E0 LDR X21, [X21 + 0x408]
	0x035811E4 LDR X20, [X20 + 0x628]
	0x035811E8 MOV X19, X0
	0x035811EC TBNZ X8, 0x0, 0x3581210
	0x035811F0 ADRP X0, 0xB77000
	0x035811F4 LDR X0, [X0 + 0x408]
	0x035811F8 BL 0x1C16CF4
	0x035811FC ADRP X0, 0xBB5000
	0x03581200 LDR X0, [X0 + 0x628]
	0x03581204 BL 0x1C16CF4
	0x03581208 MOVZ W8, 0x1
	0x0358120C STRB W8, [X22 + 0xED5]
	0x03581210 LDR X1, [X19 + 0x48]
	0x03581214 MOV X0, X19
	0x03581218 BL 0x3580FD0
	0x0358121C LDR X0, [X21]
	0x03581220 BL 0x1C16F10
	0x03581224 LDR X2, [X20]
	0x03581228 MOV X1, X19
	0x0358122C MOV X3, X31
	0x03581230 MOV X20, X0
	0x03581234 BL 0x3BFB7A4
	0x03581238 MOV X0, X20
	0x0358123C LDP X20, X19, [X31 + 0x20]
	0x03581240 LDP X22, X21, [X31 + 0x10]
	0x03581244 MOV X1, X31
	0x03581248 LDR X30, [X31], #0x30
	0x0358124C B 0x3BFB568
	0x03581250 STR X30, [X31 - 0x40]!
	0x03581254 STP X24, X23, [X31 + 0x10]
	0x03581258 STP X22, X21, [X31 + 0x20]
	0x0358125C STP X20, X19, [X31 + 0x30]
	0x03581260 ADRP X21, 0xE5E000
	0x03581264 ADRP X24, 0xB72000
	0x03581268 LDRB W8, [X21 + 0xED9]
	0x0358126C LDR X24, [X24 + 0x598]
	0x03581270 MOV W20, W1
	0x03581274 MOV X19, X0
	0x03581278 TBNZ X8, 0x0, 0x35812CC
	0x0358127C ADRP X0, 0xBB4000
	0x03581280 LDR X0, [X0 + 0xEF8]
	0x03581284 BL 0x1C16CF4
	0x03581288 ADRP X0, 0xBB5000
	0x0358128C LDR X0, [X0 + 0x688]
	0x03581290 BL 0x1C16CF4
	0x03581294 ADRP X0, 0xBB5000
	0x03581298 LDR X0, [X0 + 0x690]
	0x0358129C BL 0x1C16CF4
	0x035812A0 ADRP X0, 0xBB5000
	0x035812A4 LDR X0, [X0 + 0x698]
	0x035812A8 BL 0x1C16CF4
	0x035812AC ADRP X0, 0xB72000
	0x035812B0 LDR X0, [X0 + 0x598]
	0x035812B4 BL 0x1C16CF4
	0x035812B8 ADRP X0, 0xBB5000
	0x035812BC LDR X0, [X0 + 0x6A0]
	0x035812C0 BL 0x1C16CF4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xE5F000
	007 Move W8, [X20+3800]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {24}
	013 Move X0, 0xB73000
	014 Move X0, [X0+2504]
	015 Call 0x1C17CF4
	016 Move X0, 0xB78000
	017 Move X0, [X0+840]
	018 Call 0x1C17CF4
	019 Move X0, 0xBB6000
	020 Move X0, [X0+1568]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X20+3800], W8
	024 Move X9, [X19+32]
	025 Compare X9, 0
	026 JumpIfEqual {110}
	027 Move X8, 0xB73000
	028 Move X8, [X8+2504]
	029 Move X20, [X9+24]
	030 Move X21, [X8]
	031 Move X8, [X21+56]
	032 Compare X8, 0
	033 JumpIfNotEqual {37}
	034 Move X0, X21
	035 Call 0x1C5D6E0
	036 Move X8, [X21+56]
	037 Move X0, [X8+16]
	038 Move W8, [X0+309]
	039 Move TEMP, X8
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfEqual {44}
	043 Call 0x1C5D684
	044 Move W8, [X0+224]
	045 Compare W8, 0
	046 JumpIfNotEqual {48}
	047 Call 0x1C17DFC
	048 Move X8, [X21+56]
	049 Move X0, [X8+16]
	050 Move W8, [X0+309]
	051 Move TEMP, X8
	052 And TEMP, TEMP, 1
	053 Compare TEMP, 1
	054 JumpIfEqual {56}
	055 Call 0x1C5D684
	056 Compare X20, 0
	057 JumpIfEqual {110}
	058 Move X9, 0xB78000
	059 Move X11, 0xBB6000
	060 Move X9, [X9+840]
	061 Move X10, [X0+184]
	062 Move X8, [X20]
	063 Move X11, [X11+1568]
	064 Move X1, [X9]
	065 Move X21, [X10]
	066 NotImplemented "Instruction LDRH not yet implemented."
	067 Move X22, [X11]
	068 Compare X9, 0
	069 JumpIfEqual {76}
	070 Move X10, [X8+176]
	071 Add X10, X10, 8
	072 NotImplemented "Instruction LDUR not yet implemented."
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Subtract X9, X9, 1
	075 Add X10, X10, 16
	076 Move W2, 1
	077 Move X0, X20
	078 Call 0x1C5D788
	079 Move W9, [X10]
	080 Add W9, W9, 1
	081 Add X8, X8, W9
	082 Add X0, X8, 312
	083 Move X8, [X0]
	084 Move X4, [X0+8]
	085 Move W1, 3
	086 Move X0, X20
	087 Move X2, X22
	088 Move X3, X21
	089 NotImplemented "Instruction BLR not yet implemented."
	090 Move X1, [X19+72]
	091 Move X0, X19
	092 Call WebRtcAudioDsp.StopProc, X0, X1
	093 Move X1, [X19+72]
	094 Compare X1, 0
	095 JumpIfEqual {104}
	096 Move X0, X19
	097 Move X20, [X31+32]
	098 Move X19, [X31+40]
	099 Move X22, [X31+16]
	100 Move X21, [X31+24]
	101 Move X30, [X31+48]
	102 Call WebRtcAudioDsp.StartProc, X0, X1
	103 Return 
	104 Move X20, [X31+32]
	105 Move X19, [X31+40]
	106 Move X22, [X31+16]
	107 Move X21, [X31+24]
	108 Move X30, [X31+48]
	109 Return 
	110 Call 0x1C17F20

Method: System.Void setOutputListener(System.Boolean set)

Disassembly:
	0x03582250 STR S0, [X0 + 0x10]
	0x03582254 RET
	0x03582258 LDRB W0, [X0 + 0x14]
	0x0358225C RET
	0x03582260 AND W8, W1, 0x1
	0x03582264 STRB W8, [X0 + 0x14]
	0x03582268 RET
	0x0358226C STR X30, [X31 - 0x10]!
	0x03582270 LDRB W8, [X0 + 0x14]
	0x03582274 CBNZ W8, 0x35822B4
	0x03582278 CBZ X1, 0x35822C4
	0x0358227C LDR W8, [X1 + 0x18]
	0x03582280 UBFM X9, X8, 0x20, 0x1F
	0x03582284 CMP X9, 0x1
	0x03582288 B.LT 0x35822B4
	0x0358228C SXTW X9, W8
	0x03582290 ADD X10, X1, 0x20
	0x03582294 CBZ X8, 0x35822C0
	0x03582298 LDR V0, [X10]
	0x0358229C LDR V1, [X0 + 0x10]
	0x035822A0 SUB X9, X9, 0x1
	0x035822A4 SUB X8, X8, 0x1
	0x035822A8 FMUL S0, S0, S1
	0x035822AC STR S0, [X10], #0x4
	0x035822B0 CBNZ X9, 0x3582294
	0x035822B4 MOV X0, X1
	0x035822B8 LDR X30, [X31], #0x10
	0x035822BC RET
	0x035822C0 BL 0x1C16F28
	0x035822C4 BL 0x1C16F20
	0x035822C8 RET
	0x035822CC LDR V0, [X0 + 0x10]
	0x035822D0 RET
	0x035822D4 STR S0, [X0 + 0x10]
	0x035822D8 RET
	0x035822DC LDRB W0, [X0 + 0x14]
	0x035822E0 RET
	0x035822E4 AND W8, W1, 0x1
	0x035822E8 STRB W8, [X0 + 0x14]
	0x035822EC RET
	0x035822F0 STR X30, [X31 - 0x10]!
	0x035822F4 LDRB W8, [X0 + 0x14]
	0x035822F8 CBNZ W8, 0x3582350
	0x035822FC CBZ X1, 0x3582360
	0x03582300 LDR W8, [X1 + 0x18]
	0x03582304 UBFM X9, X8, 0x20, 0x1F
	0x03582308 CMP X9, 0x1
	0x0358230C B.LT 0x3582350
	0x03582310 SXTW X9, W8
	0x03582314 ADD X10, X1, 0x20
	0x03582318 MOVZ W11, 0x7F800000
	0x0358231C CBZ X8, 0x358235C
	0x03582320 LDRSH W12, [X10]
	0x03582324 LDR V0, [X0 + 0x10]
	0x03582328 FMOV S1, W11
	0x0358232C SUB X9, X9, 0x1
	0x03582330 SCVTF S2, W12
	0x03582334 FMUL S0, S0, S2
	0x03582338 FCVTZS W12, S0
	0x0358233C FCMP S0, S1
	0x03582340 CSEL W12, W31, W12, EQ
	0x03582344 STRH W12, [X10], #0x2
	0x03582348 SUB X8, X8, 0x1
	0x0358234C CBNZ X9, 0x358231C
	0x03582350 MOV X0, X1
	0x03582354 LDR X30, [X31], #0x10
	0x03582358 RET
	0x0358235C BL 0x1C16F28
	0x03582360 BL 0x1C16F20
	0x03582364 RET
	0x03582368 STR X30, [X31 - 0x40]!
	0x0358236C STP X24, X23, [X31 + 0x10]
	0x03582370 STP X22, X21, [X31 + 0x20]
	0x03582374 STP X20, X19, [X31 + 0x30]
	0x03582378 ADRP X20, 0xE5D000
	0x0358237C ADRP X23, 0xBB4000
	0x03582380 LDRB W8, [X20 + 0xEE5]
	0x03582384 LDR X23, [X23 + 0x710]
	0x03582388 MOV X19, X0
	0x0358238C TBNZ X8, 0x0, 0x35823B0
	0x03582390 ADRP X0, 0xB71000
	0x03582394 LDR X0, [X0 + 0xD28]
	0x03582398 BL 0x1C16CF4
	0x0358239C ADRP X0, 0xBB4000
	0x035823A0 LDR X0, [X0 + 0x710]
	0x035823A4 BL 0x1C16CF4
	0x035823A8 MOVZ W8, 0x1
	0x035823AC STRB W8, [X20 + 0xEE5]
	0x035823B0 LDR X8, [X23]
	0x035823B4 ADRP X24, 0xB71000
	0x035823B8 LDR X8, [X8 + 0xB8]
	0x035823BC LDR X20, [X8]
	0x035823C0 LDR X24, [X24 + 0xD28]
	0x035823C4 MOV X0, X20
	0x035823C8 MOV X1, X19
	0x035823CC MOV X2, X31
	0x035823D0 BL 0x33C0DE4
	0x035823D4 CBZ X0, 0x35823F4
	0x035823D8 LDR X22, [X24]
	0x035823DC MOV X21, X0
	0x035823E0 MOV X1, X22
	0x035823E4 BL 0x1C16E00
	0x035823E8 MOV X1, X0
	0x035823EC CBNZ X0, 0x35823F8
	0x035823F0 B 0x3582428
	0x035823F4 MOV X1, X31
	0x035823F8 LDR X8, [X23]
	0x035823FC MOV X2, X20
	0x03582400 LDR X0, [X8 + 0xB8]
	0x03582404 BL 0x1C24138
	0x03582408 CMP X20, X0
	0x0358240C MOV X20, X0
	0x03582410 B.NE 0x35823C4
	0x03582414 LDP X20, X19, [X31 + 0x30]
	0x03582418 LDP X22, X21, [X31 + 0x20]
	0x0358241C LDP X24, X23, [X31 + 0x10]
	0x03582420 LDR X30, [X31], #0x40
	0x03582424 RET
	0x03582428 MOV X0, X21
	0x0358242C MOV X1, X22
	0x03582430 BL 0x1C171E0
	0x03582434 STR X30, [X31 - 0x40]!
	0x03582438 STP X24, X23, [X31 + 0x10]
	0x0358243C STP X22, X21, [X31 + 0x20]
	0x03582440 STP X20, X19, [X31 + 0x30]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0xE5E000
	009 Move X24, 0xB72000
	010 Move W8, [X21+3801]
	011 Move X24, [X24+1432]
	012 Move W20, W1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {38}
	018 Move X0, 0xBB4000
	019 Move X0, [X0+3832]
	020 Call 0x1C17CF4
	021 Move X0, 0xBB5000
	022 Move X0, [X0+1672]
	023 Call 0x1C17CF4
	024 Move X0, 0xBB5000
	025 Move X0, [X0+1680]
	026 Call 0x1C17CF4
	027 Move X0, 0xBB5000
	028 Move X0, [X0+1688]
	029 Call 0x1C17CF4
	030 Move X0, 0xB72000
	031 Move X0, [X0+1432]
	032 Call 0x1C17CF4
	033 Move X0, 0xBB5000
	034 Move X0, [X0+1696]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X21+3801], W8
	038 Move X0, [X24]
	039 Move X21, 0xBB5000
	040 Move W8, [X0+224]
	041 Move X21, [X21+1688]
	042 Compare W8, 0
	043 JumpIfNotEqual {45}
	044 Call 0x1C17DFC
	045 Move X0, [X21]
	046 Call 0x222E02C
	047 Move X1, X31
	048 Move X2, X31
	049 Move X21, X0
	050 Call Object.op_Inequality, X0, X1
	051 Move TEMP, X0
	052 And TEMP, TEMP, 1
	053 Compare TEMP, 1
	054 JumpIfNotEqual {150}
	055 Compare X21, 0
	056 JumpIfEqual {158}
	057 Move X0, X21
	058 Move X1, X31
	059 Call Component.get_gameObject, X0
	060 Compare X0, 0
	061 JumpIfEqual {158}
	062 Move X8, 0xBB5000
	063 Move X8, [X8+1680]
	064 Move X1, [X8]
	065 Call 0x21E62E4, X0
	066 Move X8, [X24]
	067 Move X22, X0
	068 Move W9, [X8+224]
	069 Compare W9, 0
	070 JumpIfNotEqual {73}
	071 Move X0, X8
	072 Call 0x1C17DFC
	073 Move X0, X22
	074 Move X1, X31
	075 Move X2, X31
	076 Call Object.op_Inequality, X0, X1
	077 Move TEMP, X0
	078 And TEMP, TEMP, 1
	079 Compare TEMP, 1
	080 JumpIfNotEqual {98}
	081 Move X8, 0xBB4000
	082 Move X8, [X8+3832]
	083 Move X0, [X8]
	084 Call 0x1C17F10
	085 Move X8, 0xBB5000
	086 Move X8, [X8+1696]
	087 Move X1, X19
	088 Move X3, X31
	089 Move X23, X0
	090 Move X2, [X8]
	091 Call Action`2<Object, Int32>..ctor, X0, X1, X2
	092 Compare X22, 0
	093 JumpIfEqual {158}
	094 Move X0, X22
	095 Move X1, X23
	096 Move X2, X31
	097 Call AudioOutCapture.remove_OnAudioFrame, X0, X1
	098 Move TEMP, X20
	099 And TEMP, TEMP, 1
	100 Compare TEMP, 1
	101 JumpIfNotEqual {150}
	102 Move X0, [X24]
	103 Move W8, [X0+224]
	104 Compare W8, 0
	105 JumpIfNotEqual {107}
	106 Call 0x1C17DFC
	107 Move X0, X22
	108 Move X1, X31
	109 Move X2, X31
	110 Call Object.op_Equality, X0, X1
	111 Move TEMP, X0
	112 And TEMP, TEMP, 1
	113 Compare TEMP, 1
	114 JumpIfNotEqual {125}
	115 Move X0, X21
	116 Move X1, X31
	117 Call Component.get_gameObject, X0
	118 Compare X0, 0
	119 JumpIfEqual {158}
	120 Move X8, 0xBB5000
	121 Move X8, [X8+1672]
	122 Move X1, [X8]
	123 Call 0x21E61FC, X0
	124 Move X22, X0
	125 Move X8, 0xBB4000
	126 Move X8, [X8+3832]
	127 Move X0, [X8]
	128 Call 0x1C17F10
	129 Move X8, 0xBB5000
	130 Move X8, [X8+1696]
	131 Move X1, X19
	132 Move X3, X31
	133 Move X20, X0
	134 Move X2, [X8]
	135 Call Action`2<Object, Int32>..ctor, X0, X1, X2
	136 Compare X22, 0
	137 JumpIfEqual {158}
	138 Move X0, X22
	139 Move X1, X20
	140 Move X20, [X31+48]
	141 Move X19, [X31+56]
	142 Move X22, [X31+32]
	143 Move X21, [X31+40]
	144 Move X24, [X31+16]
	145 Move X23, [X31+24]
	146 Move X2, X31
	147 Move X30, [X31+64]
	148 Call AudioOutCapture.add_OnAudioFrame, X0, X1
	149 Return 
	150 Move X20, [X31+48]
	151 Move X19, [X31+56]
	152 Move X22, [X31+32]
	153 Move X21, [X31+40]
	154 Move X24, [X31+16]
	155 Move X23, [X31+24]
	156 Move X30, [X31+64]
	157 Return 
	158 Call 0x1C17F20

Method: System.Void applyToProc()

Disassembly:
	0x03580F78 LDR X2, [X8]
	0x03580F7C BL 0x31910B4
	0x03580F80 LDP X20, X19, [X31 + 0x80]
	0x03580F84 LDP X22, X21, [X31 + 0x70]
	0x03580F88 LDP X24, X23, [X31 + 0x60]
	0x03580F8C LDP X26, X25, [X31 + 0x50]
	0x03580F90 LDP X28, X27, [X31 + 0x40]
	0x03580F94 LDR X30, [X31 + 0x30]
	0x03580F98 ADD X31, X31, 0x90
	0x03580F9C RET
	0x03580FA0 BL 0x1C16F20
	0x03580FA4 BL 0x1C16F28
	0x03580FA8 BL 0x1C16F44
	0x03580FAC MOV X1, X31
	0x03580FB0 BL 0x1C16DEC
	0x03580FB4 STP X30, X19, [X31 - 0x10]!
	0x03580FB8 LDR X1, [X0 + 0x48]
	0x03580FBC MOV X19, X0
	0x03580FC0 BL 0x3580FD0
	0x03580FC4 STR X31, [X19 + 0x48]
	0x03580FC8 LDP X30, X19, [X31], #0x10
	0x03580FCC RET
	0x03580FD0 STP X30, X23, [X31 - 0x30]!
	0x03580FD4 STP X22, X21, [X31 + 0x10]
	0x03580FD8 STP X20, X19, [X31 + 0x20]
	0x03580FDC ADRP X21, 0xE5F000
	0x03580FE0 LDRB W8, [X21 + 0xED7]
	0x03580FE4 MOV X19, X1
	0x03580FE8 MOV X20, X0
	0x03580FEC TBNZ X8, 0x0, 0x3581034
	0x03580FF0 ADRP X0, 0xB73000
	0x03580FF4 LDR X0, [X0 + 0x9C8]
	0x03580FF8 BL 0x1C16CF4
	0x03580FFC ADRP X0, 0xB78000
	0x03581000 LDR X0, [X0 + 0x348]
	0x03581004 BL 0x1C16CF4
	0x03581008 ADRP X0, 0xBB5000
	0x0358100C LDR X0, [X0 + 0x670]
	0x03581010 BL 0x1C16CF4
	0x03581014 ADRP X0, 0xBB5000
	0x03581018 LDR X0, [X0 + 0x680]
	0x0358101C BL 0x1C16CF4
	0x03581020 ADRP X0, 0xBB4000
	0x03581024 LDR X0, [X0 + 0xEF0]
	0x03581028 BL 0x1C16CF4
	0x0358102C MOVZ W8, 0x1
	0x03581030 STRB W8, [X21 + 0xED7]
	0x03581034 LDR X9, [X20 + 0x20]
	0x03581038 CBZ X9, 0x35811B0
	0x0358103C ADRP X8, 0xB72000
	0x03581040 LDR X8, [X8 + 0x9C8]
	0x03581044 LDR X21, [X9 + 0x18]
	0x03581048 LDR X22, [X8]
	0x0358104C LDR X8, [X22 + 0x38]
	0x03581050 CBNZ X8, 0x3581060
	0x03581054 MOV X0, X22
	0x03581058 BL 0x1C5C6E0
	0x0358105C LDR X8, [X22 + 0x38]
	0x03581060 LDR X0, [X8 + 0x10]
	0x03581064 LDRB W8, [X0 + 0x135]
	0x03581068 TBNZ X8, 0x0, 0x3581070
	0x0358106C BL 0x1C5C684
	0x03581070 LDR W8, [X0 + 0xE0]
	0x03581074 CBNZ W8, 0x358107C
	0x03581078 BL 0x1C16DFC
	0x0358107C LDR X8, [X22 + 0x38]
	0x03581080 LDR X0, [X8 + 0x10]
	0x03581084 LDRB W8, [X0 + 0x135]
	0x03581088 TBNZ X8, 0x0, 0x3581090
	0x0358108C BL 0x1C5C684
	0x03581090 CBZ X21, 0x35811B0
	0x03581094 ADRP X9, 0xB77000
	0x03581098 ADRP X11, 0xBB4000
	0x0358109C LDR X9, [X9 + 0x348]
	0x035810A0 LDR X10, [X0 + 0xB8]
	0x035810A4 LDR X8, [X21]
	0x035810A8 LDR X11, [X11 + 0xEF0]
	0x035810AC LDR X1, [X9]
	0x035810B0 LDR X22, [X10]
	0x035810B4 LDRH W9, [X8 + 0x12E]
	0x035810B8 LDR X23, [X11]
	0x035810BC CBZ X9, 0x35810E0
	0x035810C0 LDR X10, [X8 + 0xB0]
	0x035810C4 ADD X10, X10, 0x8
	0x035810C8 LDUR X11, [X10 - 0x8]
	0x035810CC CMP X11, X1
	0x035810D0 B.EQ 0x35810F0
	0x035810D4 SUBS X9, X9, 0x1
	0x035810D8 ADD X10, X10, 0x10

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xE60000
	005 Move W8, [X20+3802]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xB74000
	012 Move X0, [X0+2416]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3802], W8
	016 Move X0, [X19+64]
	017 Compare X0, 0
	018 JumpIfEqual {37}
	019 Move W1, [X19+40]
	020 Move X2, X31
	021 Call WebRTCAudioProcessor.set_AEC, X0, X1
	022 Move W8, [X19+40]
	023 Move X20, [X19+64]
	024 Compare W8, 0
	025 JumpIfEqual {41}
	026 Move X8, 0xB74000
	027 Move X8, [X8+2416]
	028 Move X0, [X8]
	029 Move W8, [X0+224]
	030 Compare W8, 0
	031 JumpIfNotEqual {33}
	032 Call 0x1C17DFC
	033 Move X0, X31
	034 Call Application.get_isMobilePlatform
	035 Compare X20, 0
	036 JumpIfNotEqual {44}
	037 Move X20, [X31+16]
	038 Move X19, [X31+24]
	039 Move X30, [X31+32]
	040 Return 
	041 Move W0, W31
	042 Compare X20, 0
	043 JumpIfEqual {109}
	044 And W1, W0, 1
	045 Move X0, X20
	046 Move X2, X31
	047 Call WebRTCAudioProcessor.set_AECMobile, X0, X1
	048 Move W1, [X19+40]
	049 Move X0, X19
	050 Call WebRtcAudioDsp.setOutputListener, X0, X1
	051 Move X0, [X19+64]
	052 Compare X0, 0
	053 JumpIfEqual {109}
	054 Move W1, [X19+56]
	055 Move X2, X31
	056 Call WebRTCAudioProcessor.set_AECStreamDelayMs, X0, X1
	057 Move X0, [X19+64]
	058 Compare X0, 0
	059 JumpIfEqual {109}
	060 Move W1, [X19+41]
	061 Move X2, X31
	062 Call WebRTCAudioProcessor.set_AECHighPass, X0, X1
	063 Move X0, [X19+64]
	064 Compare X0, 0
	065 JumpIfEqual {109}
	066 Move W1, [X19+53]
	067 Move X2, X31
	068 Call WebRTCAudioProcessor.set_HighPass, X0, X1
	069 Move X0, [X19+64]
	070 Compare X0, 0
	071 JumpIfEqual {109}
	072 Move W1, [X19+55]
	073 Move X2, X31
	074 Call WebRTCAudioProcessor.set_NoiseSuppression, X0, X1
	075 Move X0, [X19+64]
	076 Compare X0, 0
	077 JumpIfEqual {109}
	078 Move W1, [X19+42]
	079 Move X2, X31
	080 Call WebRTCAudioProcessor.set_AGC, X0, X1
	081 Move X0, [X19+64]
	082 Compare X0, 0
	083 JumpIfEqual {109}
	084 Move W1, [X19+44]
	085 Move X2, X31
	086 Call WebRTCAudioProcessor.set_AGCCompressionGain, X0, X1
	087 Move X0, [X19+64]
	088 Compare X0, 0
	089 JumpIfEqual {109}
	090 Move W1, [X19+48]
	091 Move X2, X31
	092 Call WebRTCAudioProcessor.set_AGCTargetLevel, X0, X1
	093 Move X0, [X19+64]
	094 Compare X0, 0
	095 JumpIfEqual {109}
	096 Move W1, [X19+52]
	097 Move X2, X31
	098 Call WebRTCAudioProcessor.set_VAD, X0, X1
	099 Move X0, [X19+64]
	100 Compare X0, 0
	101 JumpIfEqual {109}
	102 Move W1, [X19+54]
	103 Move X20, [X31+16]
	104 Move X19, [X31+24]
	105 Move X2, X31
	106 Move X30, [X31+32]
	107 Call WebRTCAudioProcessor.set_Bypass, X0, X1
	108 Return 
	109 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x03582444 ADRP X20, 0xE5D000
	0x03582448 ADRP X23, 0xBB4000
	0x0358244C LDRB W8, [X20 + 0xEE6]
	0x03582450 LDR X23, [X23 + 0x710]
	0x03582454 MOV X19, X0
	0x03582458 TBNZ X8, 0x0, 0x358247C
	0x0358245C ADRP X0, 0xB71000
	0x03582460 LDR X0, [X0 + 0xD28]
	0x03582464 BL 0x1C16CF4
	0x03582468 ADRP X0, 0xBB4000
	0x0358246C LDR X0, [X0 + 0x710]

ISIL:
	001 Move X9, -44646400
	002 Move V0, [X9+2928]
	003 Move W8, 1
	004 Move W10, 120
	005 Move [X0+40], W8
	006 Move [X0+42], W8
	007 Move [X0+52], W8
	008 Move [X0+55], W8
	009 Move [X0+44], D0
	010 Move [X0+56], W10
	011 Call VoiceComponent..ctor, X0
	012 Return 

Method: System.Void .cctor()

Disassembly:
	0x03582470 BL 0x1C16CF4
	0x03582474 MOVZ W8, 0x1
	0x03582478 STRB W8, [X20 + 0xEE6]
	0x0358247C LDR X8, [X23]
	0x03582480 ADRP X24, 0xB71000
	0x03582484 LDR X8, [X8 + 0xB8]
	0x03582488 LDR X20, [X8]
	0x0358248C LDR X24, [X24 + 0xD28]
	0x03582490 MOV X0, X20
	0x03582494 MOV X1, X19
	0x03582498 MOV X2, X31
	0x0358249C BL 0x33C0FDC
	0x035824A0 CBZ X0, 0x35824C0
	0x035824A4 LDR X22, [X24]
	0x035824A8 MOV X21, X0
	0x035824AC MOV X1, X22
	0x035824B0 BL 0x1C16E00
	0x035824B4 MOV X1, X0
	0x035824B8 CBNZ X0, 0x35824C4
	0x035824BC B 0x35824F4
	0x035824C0 MOV X1, X31
	0x035824C4 LDR X8, [X23]
	0x035824C8 MOV X2, X20
	0x035824CC LDR X0, [X8 + 0xB8]
	0x035824D0 BL 0x1C24138
	0x035824D4 CMP X20, X0
	0x035824D8 MOV X20, X0
	0x035824DC B.NE 0x3582490
	0x035824E0 LDP X20, X19, [X31 + 0x30]
	0x035824E4 LDP X22, X21, [X31 + 0x20]
	0x035824E8 LDP X24, X23, [X31 + 0x10]
	0x035824EC LDR X30, [X31], #0x40
	0x035824F0 RET
	0x035824F4 MOV X0, X21
	0x035824F8 MOV X1, X22
	0x035824FC BL 0x1C171E0
	0x03582500 LDRB W0, [X0 + 0x29]
	0x03582504 RET
	0x03582508 STR X30, [X31 - 0x50]!
	0x0358250C STP X26, X25, [X31 + 0x10]
	0x03582510 STP X24, X23, [X31 + 0x20]
	0x03582514 STP X22, X21, [X31 + 0x30]
	0x03582518 STP X20, X19, [X31 + 0x40]
	0x0358251C ADRP X21, 0xE5D000
	0x03582520 LDRB W8, [X21 + 0xEE7]
	0x03582524 MOV W20, W1
	0x03582528 MOV X19, X0
	0x0358252C TBNZ X8, 0x0, 0x35825B0
	0x03582530 ADRP X0, 0xB71000
	0x03582534 LDR X0, [X0 + 0x9C8]
	0x03582538 BL 0x1C16CF4
	0x0358253C ADRP X0, 0xB71000
	0x03582540 LDR X0, [X0 + 0xB58]
	0x03582544 BL 0x1C16CF4
	0x03582548 ADRP X0, 0xBB4000
	0x0358254C LDR X0, [X0 + 0x118]
	0x03582550 BL 0x1C16CF4
	0x03582554 ADRP X0, 0xB76000
	0x03582558 LDR X0, [X0 + 0x348]
	0x0358255C BL 0x1C16CF4
	0x03582560 ADRP X0, 0xBB4000
	0x03582564 LDR X0, [X0 + 0x710]
	0x03582568 BL 0x1C16CF4
	0x0358256C ADRP X0, 0xB71000
	0x03582570 LDR X0, [X0 + 0x9D0]
	0x03582574 BL 0x1C16CF4
	0x03582578 ADRP X0, 0xB71000
	0x0358257C LDR X0, [X0 + 0x598]
	0x03582580 BL 0x1C16CF4
	0x03582584 ADRP X0, 0xBB4000
	0x03582588 LDR X0, [X0 + 0x718]
	0x0358258C BL 0x1C16CF4
	0x03582590 ADRP X0, 0xBB4000
	0x03582594 LDR X0, [X0 + 0x720]
	0x03582598 BL 0x1C16CF4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xE5E000
	006 Move X21, 0xBB5000
	007 Move X19, 0xBB5000
	008 Move W8, [X20+3803]
	009 Move X21, [X21+1704]
	010 Move X19, [X19+1712]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {29}
	015 Move X0, 0xBB5000
	016 Move X0, [X0+1720]
	017 Call 0x1C17CF4
	018 Move X0, 0xBB5000
	019 Move X0, [X0+1712]
	020 Call 0x1C17CF4
	021 Move X0, 0xBB5000
	022 Move X0, [X0+1704]
	023 Call 0x1C17CF4
	024 Move X0, 0xBB5000
	025 Move X0, [X0+1600]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X20+3803], W8
	029 Move X0, [X21]
	030 Call 0x1C17F10
	031 Move X1, [X19]
	032 Move X19, X0
	033 Call Dictionary`2<Int32Enum, Int32>..ctor, X0
	034 Compare X19, 0
	035 JumpIfEqual {83}
	036 Move X21, 0xBB5000
	037 Move X21, [X21+1720]
	038 Move X20, 0xBB5000
	039 Move W1, 1
	040 Move W2, 1
	041 Move X3, [X21]
	042 Move X20, [X20+1600]
	043 Move X0, X19
	044 Call Dictionary`2<Int32Enum, Int32>.Add, X0, X1, X2
	045 Move X3, [X21]
	046 Move W1, 2
	047 Move W2, 2
	048 Move X0, X19
	049 Call Dictionary`2<Int32Enum, Int32>.Add, X0, X1, X2
	050 Move X3, [X21]
	051 Move W1, 3
	052 Move W2, 4
	053 Move X0, X19
	054 Call Dictionary`2<Int32Enum, Int32>.Add, X0, X1, X2
	055 Move X3, [X21]
	056 Move W1, 4
	057 Move W2, 5
	058 Move X0, X19
	059 Call Dictionary`2<Int32Enum, Int32>.Add, X0, X1, X2
	060 Move X3, [X21]
	061 Move W1, 5
	062 Move W2, 6
	063 Move X0, X19
	064 Call Dictionary`2<Int32Enum, Int32>.Add, X0, X1, X2
	065 Move X3, [X21]
	066 Move W1, 6
	067 Move W2, 8
	068 Move X0, X19
	069 Call Dictionary`2<Int32Enum, Int32>.Add, X0, X1, X2
	070 Move X3, [X21]
	071 Move W1, 7
	072 Move W2, 2
	073 Move X0, X19
	074 Call Dictionary`2<Int32Enum, Int32>.Add, X0, X1, X2
	075 Move X8, [X20]
	076 Move X8, [X8+184]
	077 Move [X8], X19
	078 Move X20, [X31+16]
	079 Move X19, [X31+24]
	080 Move X30, [X31+32]
	081 Move X21, [X31+40]
	082 Return 
	083 Call 0x1C17F20

