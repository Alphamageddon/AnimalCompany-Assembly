Type: Photon.Voice.Unity.RecorderPreset

Method: System.Void Awake()

Disassembly:
	0x0357B558 MOV X1, X31
	0x0357B55C BL 0x3BFB568
	0x0357B560 LDRB W8, [X19 + 0x40]
	0x0357B564 CBZ W8, 0x357B59C
	0x0357B568 LDR X0, [X22]
	0x0357B56C BL 0x1C16F10
	0x0357B570 LDR X2, [X21]
	0x0357B574 MOV X1, X19
	0x0357B578 MOV X3, X31
	0x0357B57C MOV X20, X0
	0x0357B580 BL 0x3BFB7A4
	0x0357B584 MOV X0, X20
	0x0357B588 LDP X20, X19, [X31 + 0x20]
	0x0357B58C LDP X22, X21, [X31 + 0x10]
	0x0357B590 MOV X1, X31
	0x0357B594 LDP X30, X23, [X31], #0x30
	0x0357B598 B 0x3BFB4B0
	0x0357B59C LDP X20, X19, [X31 + 0x20]
	0x0357B5A0 LDP X22, X21, [X31 + 0x10]
	0x0357B5A4 LDP X30, X23, [X31], #0x30
	0x0357B5A8 RET
	0x0357B5AC STR X30, [X31 - 0x30]!
	0x0357B5B0 STP X22, X21, [X31 + 0x10]
	0x0357B5B4 STP X20, X19, [X31 + 0x20]
	0x0357B5B8 ADRP X20, 0xE64000
	0x0357B5BC LDRB W8, [X20 + 0xEA0]
	0x0357B5C0 MOV X19, X0
	0x0357B5C4 TBNZ X8, 0x0, 0x357B5F4
	0x0357B5C8 ADRP X0, 0xB78000
	0x0357B5CC LDR X0, [X0 + 0x9C8]
	0x0357B5D0 BL 0x1C16CF4
	0x0357B5D4 ADRP X0, 0xB7D000
	0x0357B5D8 LDR X0, [X0 + 0x348]
	0x0357B5DC BL 0x1C16CF4
	0x0357B5E0 ADRP X0, 0xB7D000
	0x0357B5E4 LDR X0, [X0 + 0x418]
	0x0357B5E8 BL 0x1C16CF4
	0x0357B5EC MOVZ W8, 0x1
	0x0357B5F0 STRB W8, [X20 + 0xEA0]
	0x0357B5F4 LDR X9, [X19 + 0x20]
	0x0357B5F8 CBZ X9, 0x357B6F0
	0x0357B5FC ADRP X8, 0xB78000
	0x0357B600 LDR X8, [X8 + 0x9C8]
	0x0357B604 LDR X20, [X9 + 0x18]
	0x0357B608 LDR X21, [X8]
	0x0357B60C LDR X8, [X21 + 0x38]
	0x0357B610 CBNZ X8, 0x357B620
	0x0357B614 MOV X0, X21
	0x0357B618 BL 0x1C5C6E0
	0x0357B61C LDR X8, [X21 + 0x38]
	0x0357B620 LDR X0, [X8 + 0x10]
	0x0357B624 LDRB W8, [X0 + 0x135]
	0x0357B628 TBNZ X8, 0x0, 0x357B630
	0x0357B62C BL 0x1C5C684
	0x0357B630 LDR W8, [X0 + 0xE0]
	0x0357B634 CBNZ W8, 0x357B63C
	0x0357B638 BL 0x1C16DFC
	0x0357B63C LDR X8, [X21 + 0x38]
	0x0357B640 LDR X0, [X8 + 0x10]
	0x0357B644 LDRB W8, [X0 + 0x135]
	0x0357B648 TBNZ X8, 0x0, 0x357B650
	0x0357B64C BL 0x1C5C684
	0x0357B650 CBZ X20, 0x357B6F0
	0x0357B654 ADRP X9, 0xB7D000
	0x0357B658 ADRP X11, 0xB7D000
	0x0357B65C LDR X9, [X9 + 0x348]
	0x0357B660 LDR X10, [X0 + 0xB8]
	0x0357B664 LDR X8, [X20]
	0x0357B668 LDR X11, [X11 + 0x418]
	0x0357B66C LDR X1, [X9]
	0x0357B670 LDR X21, [X10]
	0x0357B674 LDRH W9, [X8 + 0x12E]
	0x0357B678 LDR X22, [X11]
	0x0357B67C CBZ X9, 0x357B6A0
	0x0357B680 LDR X10, [X8 + 0xB0]
	0x0357B684 ADD X10, X10, 0x8
	0x0357B688 LDUR X11, [X10 - 0x8]
	0x0357B68C CMP X11, X1
	0x0357B690 B.EQ 0x357B6B0
	0x0357B694 SUBS X9, X9, 0x1
	0x0357B698 ADD X10, X10, 0x10
	0x0357B69C B.NE 0x357B688
	0x0357B6A0 MOVZ W2, 0x1
	0x0357B6A4 MOV X0, X20
	0x0357B6A8 BL 0x1C5C788
	0x0357B6AC B 0x357B6C0
	0x0357B6B0 LDR W9, [X10]
	0x0357B6B4 ADD W9, W9, 0x1
	0x0357B6B8 ADD X8, X8, W9, 0x4, SXTW
	0x0357B6BC ADD X0, X8, 0x138
	0x0357B6C0 LDP X8, X4, [X0]
	0x0357B6C4 MOVZ W1, 0x3
	0x0357B6C8 MOV X0, X20
	0x0357B6CC MOV X2, X22
	0x0357B6D0 MOV X3, X21
	0x0357B6D4 BLR X8
	0x0357B6D8 MOVZ W8, 0x1
	0x0357B6DC STR W8, [X19 + 0x58]
	0x0357B6E0 LDP X20, X19, [X31 + 0x20]
	0x0357B6E4 LDP X22, X21, [X31 + 0x10]
	0x0357B6E8 LDR X30, [X31], #0x30
	0x0357B6EC RET
	0x0357B6F0 BL 0x1C16F20
	0x0357B6F4 STR X30, [X31 - 0x40]!
	0x0357B6F8 STP X24, X23, [X31 + 0x10]
	0x0357B6FC STP X22, X21, [X31 + 0x20]
	0x0357B700 STP X20, X19, [X31 + 0x30]
	0x0357B704 ADRP X20, 0xE64000
	0x0357B708 LDRB W8, [X20 + 0xEA1]
	0x0357B70C MOV X19, X0
	0x0357B710 TBNZ X8, 0x0, 0x357B74C
	0x0357B714 ADRP X0, 0xB78000
	0x0357B718 LDR X0, [X0 + 0x9C8]
	0x0357B71C BL 0x1C16CF4
	0x0357B720 ADRP X0, 0xB7D000
	0x0357B724 LDR X0, [X0 + 0x348]
	0x0357B728 BL 0x1C16CF4
	0x0357B72C ADRP X0, 0xB7D000
	0x0357B730 LDR X0, [X0 + 0x420]
	0x0357B734 BL 0x1C16CF4
	0x0357B738 ADRP X0, 0xB7D000
	0x0357B73C LDR X0, [X0 + 0x428]
	0x0357B740 BL 0x1C16CF4
	0x0357B744 MOVZ W8, 0x1
	0x0357B748 STRB W8, [X20 + 0xEA1]
	0x0357B74C LDR X9, [X19 + 0x20]
	0x0357B750 CBZ X9, 0x357B928
	0x0357B754 ADRP X24, 0xB78000
	0x0357B758 LDR X24, [X24 + 0x9C8]
	0x0357B75C LDR X20, [X9 + 0x18]
	0x0357B760 LDR X21, [X24]
	0x0357B764 LDR X8, [X21 + 0x38]
	0x0357B768 CBNZ X8, 0x357B778
	0x0357B76C MOV X0, X21
	0x0357B770 BL 0x1C5C6E0
	0x0357B774 LDR X8, [X21 + 0x38]
	0x0357B778 LDR X0, [X8 + 0x10]
	0x0357B77C LDRB W8, [X0 + 0x135]
	0x0357B780 TBNZ X8, 0x0, 0x357B788
	0x0357B784 BL 0x1C5C684
	0x0357B788 LDR W8, [X0 + 0xE0]
	0x0357B78C CBNZ W8, 0x357B794
	0x0357B790 BL 0x1C16DFC
	0x0357B794 LDR X8, [X21 + 0x38]
	0x0357B798 LDR X0, [X8 + 0x10]
	0x0357B79C LDRB W8, [X0 + 0x135]
	0x0357B7A0 TBNZ X8, 0x0, 0x357B7A8
	0x0357B7A4 BL 0x1C5C684
	0x0357B7A8 CBZ X20, 0x357B928
	0x0357B7AC ADRP X23, 0xB7D000
	0x0357B7B0 ADRP X10, 0xB7D000
	0x0357B7B4 LDR X23, [X23 + 0x348]
	0x0357B7B8 LDR X9, [X0 + 0xB8]
	0x0357B7BC LDR X8, [X20]
	0x0357B7C0 LDR X10, [X10 + 0x420]
	0x0357B7C4 LDR X1, [X23]
	0x0357B7C8 LDR X21, [X9]
	0x0357B7CC LDRH W9, [X8 + 0x12E]
	0x0357B7D0 LDR X22, [X10]
	0x0357B7D4 CBZ X9, 0x357B7F8
	0x0357B7D8 LDR X10, [X8 + 0xB0]
	0x0357B7DC ADD X10, X10, 0x8
	0x0357B7E0 LDUR X11, [X10 - 0x8]
	0x0357B7E4 CMP X11, X1
	0x0357B7E8 B.EQ 0x357B808
	0x0357B7EC SUBS X9, X9, 0x1
	0x0357B7F0 ADD X10, X10, 0x10
	0x0357B7F4 B.NE 0x357B7E0
	0x0357B7F8 MOVZ W2, 0x1
	0x0357B7FC MOV X0, X20
	0x0357B800 BL 0x1C5C788
	0x0357B804 B 0x357B818
	0x0357B808 LDR W9, [X10]
	0x0357B80C ADD W9, W9, 0x1
	0x0357B810 ADD X8, X8, W9, 0x4, SXTW
	0x0357B814 ADD X0, X8, 0x138
	0x0357B818 LDP X8, X4, [X0]
	0x0357B81C MOVZ W1, 0x3
	0x0357B820 MOV X0, X20
	0x0357B824 MOV X2, X22
	0x0357B828 MOV X3, X21
	0x0357B82C BLR X8
	0x0357B830 LDR X8, [X19]
	0x0357B834 MOV X0, X19
	0x0357B838 LDP X9, X1, [X8 + 0x188]
	0x0357B83C BLR X9
	0x0357B840 LDR X9, [X19 + 0x20]
	0x0357B844 STR X0, [X19 + 0x28]
	0x0357B848 CBZ X9, 0x357B928
	0x0357B84C LDR X20, [X24]
	0x0357B850 LDR X19, [X9 + 0x18]
	0x0357B854 LDR X8, [X20 + 0x38]
	0x0357B858 CBNZ X8, 0x357B868
	0x0357B85C MOV X0, X20
	0x0357B860 BL 0x1C5C6E0
	0x0357B864 LDR X8, [X20 + 0x38]
	0x0357B868 LDR X0, [X8 + 0x10]
	0x0357B86C LDRB W8, [X0 + 0x135]
	0x0357B870 TBNZ X8, 0x0, 0x357B878
	0x0357B874 BL 0x1C5C684
	0x0357B878 LDR W8, [X0 + 0xE0]
	0x0357B87C CBNZ W8, 0x357B884
	0x0357B880 BL 0x1C16DFC
	0x0357B884 LDR X8, [X20 + 0x38]
	0x0357B888 LDR X0, [X8 + 0x10]
	0x0357B88C LDRB W8, [X0 + 0x135]
	0x0357B890 TBNZ X8, 0x0, 0x357B898
	0x0357B894 BL 0x1C5C684
	0x0357B898 CBZ X19, 0x357B928
	0x0357B89C ADRP X10, 0xB7D000
	0x0357B8A0 LDR X9, [X0 + 0xB8]
	0x0357B8A4 LDR X8, [X19]
	0x0357B8A8 LDR X10, [X10 + 0x428]
	0x0357B8AC LDR X1, [X23]
	0x0357B8B0 LDR X20, [X9]
	0x0357B8B4 LDRH W9, [X8 + 0x12E]
	0x0357B8B8 LDR X21, [X10]
	0x0357B8BC CBZ X9, 0x357B8E0
	0x0357B8C0 LDR X10, [X8 + 0xB0]
	0x0357B8C4 ADD X10, X10, 0x8
	0x0357B8C8 LDUR X11, [X10 - 0x8]
	0x0357B8CC CMP X11, X1
	0x0357B8D0 B.EQ 0x357B8F0
	0x0357B8D4 SUBS X9, X9, 0x1
	0x0357B8D8 ADD X10, X10, 0x10
	0x0357B8DC B.NE 0x357B8C8
	0x0357B8E0 MOVZ W2, 0x1
	0x0357B8E4 MOV X0, X19
	0x0357B8E8 BL 0x1C5C788
	0x0357B8EC B 0x357B900
	0x0357B8F0 LDR W9, [X10]
	0x0357B8F4 ADD W9, W9, 0x1
	0x0357B8F8 ADD X8, X8, W9, 0x4, SXTW
	0x0357B8FC ADD X0, X8, 0x138
	0x0357B900 LDP X5, X4, [X0]
	0x0357B904 MOV X0, X19
	0x0357B908 MOV X2, X21
	0x0357B90C MOV X3, X20
	0x0357B910 LDP X20, X19, [X31 + 0x30]
	0x0357B914 LDP X22, X21, [X31 + 0x20]
	0x0357B918 LDP X24, X23, [X31 + 0x10]
	0x0357B91C MOVZ W1, 0x3
	0x0357B920 LDR X30, [X31], #0x40
	0x0357B924 BR X5
	0x0357B928 BL 0x1C16F20
	0x0357B92C STR X30, [X31 - 0x40]!
	0x0357B930 STP X24, X23, [X31 + 0x10]
	0x0357B934 STP X22, X21, [X31 + 0x20]
	0x0357B938 STP X20, X19, [X31 + 0x30]
	0x0357B93C ADRP X20, 0xE64000
	0x0357B940 ADRP X21, 0xB7C000
	0x0357B944 LDRB W8, [X20 + 0xEA2]
	0x0357B948 LDR X21, [X21 + 0xAB8]
	0x0357B94C MOV X19, X0
	0x0357B950 TBNZ X8, 0x0, 0x357B980
	0x0357B954 ADRP X0, 0xB7C000
	0x0357B958 LDR X0, [X0 + 0xAB8]
	0x0357B95C BL 0x1C16CF4
	0x0357B960 ADRP X0, 0xB7A000
	0x0357B964 LDR X0, [X0 + 0x278]
	0x0357B968 BL 0x1C16CF4
	0x0357B96C ADRP X0, 0xB7D000
	0x0357B970 LDR X0, [X0 + 0x430]
	0x0357B974 BL 0x1C16CF4
	0x0357B978 MOVZ W8, 0x1
	0x0357B97C STRB W8, [X20 + 0xEA2]
	0x0357B980 LDR X1, [X21]
	0x0357B984 MOV X0, X19
	0x0357B988 BL 0x21A3894
	0x0357B98C LDR X8, [X19 + 0x20]
	0x0357B990 CBZ X8, 0x357BA00
	0x0357B994 ADRP X9, 0xB7A000
	0x0357B998 LDR X9, [X9 + 0x278]
	0x0357B99C ADRP X10, 0xB7D000
	0x0357B9A0 MOV X20, X0
	0x0357B9A4 LDR X9, [X9]
	0x0357B9A8 LDR X10, [X10 + 0x430]
	0x0357B9AC LDP X19, X21, [X19 + 0x30]
	0x0357B9B0 LDR X22, [X8 + 0x18]
	0x0357B9B4 LDR X9, [X9 + 0xB8]
	0x0357B9B8 LDR X0, [X10]
	0x0357B9BC LDR X23, [X9]
	0x0357B9C0 BL 0x1C16F10
	0x0357B9C4 MOVZ W6, 0x1
	0x0357B9C8 MOV X1, X20
	0x0357B9CC MOV X2, X19
	0x0357B9D0 MOV X3, X21
	0x0357B9D4 MOV X4, X22
	0x0357B9D8 MOV X5, X23
	0x0357B9DC MOV X7, X31
	0x0357B9E0 MOV X24, X0
	0x0357B9E4 BL 0x3570724
	0x0357B9E8 MOV X0, X24
	0x0357B9EC LDP X20, X19, [X31 + 0x30]
	0x0357B9F0 LDP X22, X21, [X31 + 0x20]
	0x0357B9F4 LDP X24, X23, [X31 + 0x10]
	0x0357B9F8 LDR X30, [X31], #0x40
	0x0357B9FC RET
	0x0357BA00 BL 0x1C16F20
	0x0357BA04 STR X30, [X31 - 0x40]!
	0x0357BA08 STP X24, X23, [X31 + 0x10]
	0x0357BA0C STP X22, X21, [X31 + 0x20]
	0x0357BA10 STP X20, X19, [X31 + 0x30]
	0x0357BA14 ADRP X21, 0xE64000
	0x0357BA18 LDRB W8, [X21 + 0xEA3]
	0x0357BA1C MOV X19, X1
	0x0357BA20 MOV X20, X0
	0x0357BA24 TBNZ X8, 0x0, 0x357BA9C
	0x0357BA28 ADRP X0, 0xB7D000
	0x0357BA2C LDR X0, [X0 + 0x358]
	0x0357BA30 BL 0x1C16CF4
	0x0357BA34 ADRP X0, 0xB79000
	0x0357BA38 LDR X0, [X0 + 0xE70]
	0x0357BA3C BL 0x1C16CF4
	0x0357BA40 ADRP X0, 0xB7D000
	0x0357BA44 LDR X0, [X0 + 0x348]
	0x0357BA48 BL 0x1C16CF4
	0x0357BA4C ADRP X0, 0xB78000
	0x0357BA50 LDR X0, [X0 + 0x9D0]
	0x0357BA54 BL 0x1C16CF4
	0x0357BA58 ADRP X0, 0xBBB000
	0x0357BA5C LDR X0, [X0 + 0x450]
	0x0357BA60 BL 0x1C16CF4
	0x0357BA64 ADRP X0, 0xBBB000
	0x0357BA68 LDR X0, [X0 + 0x458]
	0x0357BA6C BL 0x1C16CF4
	0x0357BA70 ADRP X0, 0xB7D000
	0x0357BA74 LDR X0, [X0 + 0x370]
	0x0357BA78 BL 0x1C16CF4
	0x0357BA7C ADRP X0, 0xB7D000
	0x0357BA80 LDR X0, [X0 + 0x378]
	0x0357BA84 BL 0x1C16CF4
	0x0357BA88 ADRP X0, 0xB7D000
	0x0357BA8C LDR X0, [X0 + 0x380]
	0x0357BA90 BL 0x1C16CF4
	0x0357BA94 MOVZ W8, 0x1
	0x0357BA98 STRB W8, [X21 + 0xEA3]
	0x0357BA9C ADRP X8, 0xB78000
	0x0357BAA0 ADRP X23, 0xB7D000
	0x0357BAA4 LDR X9, [X20 + 0x50]
	0x0357BAA8 LDR X8, [X8 + 0x9D0]
	0x0357BAAC LDR X23, [X23 + 0x348]
	0x0357BAB0 CBZ X9, 0x357BB74
	0x0357BAB4 LDR X9, [X20 + 0x20]
	0x0357BAB8 CBZ X9, 0x357BD74
	0x0357BABC LDR X0, [X8]
	0x0357BAC0 LDR X21, [X9 + 0x18]
	0x0357BAC4 MOVZ W1, 0x2
	0x0357BAC8 BL 0x1C16D6C
	0x0357BACC CBZ X0, 0x357BD74
	0x0357BAD0 LDR X20, [X20 + 0x50]
	0x0357BAD4 MOV X22, X0
	0x0357BAD8 CBZ X20, 0x357BAF0
	0x0357BADC LDR X8, [X22]
	0x0357BAE0 MOV X0, X20
	0x0357BAE4 LDR X1, [X8 + 0x40]
	0x0357BAE8 BL 0x1C16E00
	0x0357BAEC CBZ X0, 0x357BD7C
	0x0357BAF0 LDR W8, [X22 + 0x18]
	0x0357BAF4 CBZ W8, 0x357BD78
	0x0357BAF8 STR X20, [X22 + 0x20]
	0x0357BAFC CBZ X19, 0x357BB18
	0x0357BB00 LDR X8, [X22]
	0x0357BB04 MOV X0, X19
	0x0357BB08 LDR X1, [X8 + 0x40]
	0x0357BB0C BL 0x1C16E00
	0x0357BB10 CBZ X0, 0x357BD7C
	0x0357BB14 LDR W8, [X22 + 0x18]
	0x0357BB18 CMP W8, 0x1
	0x0357BB1C B.LS 0x357BD78
	0x0357BB20 STR X19, [X22 + 0x28]
	0x0357BB24 CBZ X21, 0x357BD74
	0x0357BB28 ADRP X10, 0xB7D000
	0x0357BB2C LDR X8, [X21]
	0x0357BB30 LDR X10, [X10 + 0x370]
	0x0357BB34 LDR X1, [X23]
	0x0357BB38 LDRH W9, [X8 + 0x12E]
	0x0357BB3C LDR X19, [X10]
	0x0357BB40 CBZ X9, 0x357BB64
	0x0357BB44 LDR X10, [X8 + 0xB0]
	0x0357BB48 ADD X10, X10, 0x8
	0x0357BB4C LDUR X11, [X10 - 0x8]
	0x0357BB50 CMP X11, X1
	0x0357BB54 B.EQ 0x357BC14
	0x0357BB58 SUBS X9, X9, 0x1
	0x0357BB5C ADD X10, X10, 0x10
	0x0357BB60 B.NE 0x357BB4C
	0x0357BB64 MOVZ W2, 0x1
	0x0357BB68 MOV X0, X21
	0x0357BB6C BL 0x1C5C788
	0x0357BB70 B 0x357BC24
	0x0357BB74 CBZ X19, 0x357BD74
	0x0357BB78 LDR X9, [X20 + 0x20]
	0x0357BB7C CBZ X9, 0x357BD74
	0x0357BB80 LDR X0, [X8]
	0x0357BB84 LDR W24, [X19 + 0x18]
	0x0357BB88 LDR X21, [X9 + 0x18]
	0x0357BB8C MOVZ W1, 0x1
	0x0357BB90 BL 0x1C16D6C
	0x0357BB94 CBZ X0, 0x357BD74
	0x0357BB98 LDR X8, [X0]
	0x0357BB9C MOV X22, X0
	0x0357BBA0 MOV X0, X19
	0x0357BBA4 LDR X1, [X8 + 0x40]
	0x0357BBA8 BL 0x1C16E00
	0x0357BBAC CBZ X0, 0x357BD7C
	0x0357BBB0 LDR W8, [X22 + 0x18]
	0x0357BBB4 CBZ W8, 0x357BD78
	0x0357BBB8 STR X19, [X22 + 0x20]
	0x0357BBBC CBZ X21, 0x357BD74
	0x0357BBC0 LDR X1, [X23]
	0x0357BBC4 CMP W24, 0x0
	0x0357BBC8 B.LE 0x357BC54
	0x0357BBCC ADRP X10, 0xB7D000
	0x0357BBD0 LDR X8, [X21]
	0x0357BBD4 LDR X10, [X10 + 0x380]
	0x0357BBD8 LDRH W9, [X8 + 0x12E]
	0x0357BBDC LDR X23, [X10]
	0x0357BBE0 CBZ X9, 0x357BC04
	0x0357BBE4 LDR X10, [X8 + 0xB0]
	0x0357BBE8 ADD X10, X10, 0x8
	0x0357BBEC LDUR X11, [X10 - 0x8]
	0x0357BBF0 CMP X11, X1
	0x0357BBF4 B.EQ 0x357BC9C
	0x0357BBF8 SUBS X9, X9, 0x1
	0x0357BBFC ADD X10, X10, 0x10
	0x0357BC00 B.NE 0x357BBEC
	0x0357BC04 MOVZ W2, 0x1
	0x0357BC08 MOV X0, X21
	0x0357BC0C BL 0x1C5C788
	0x0357BC10 B 0x357BCAC
	0x0357BC14 LDR W9, [X10]
	0x0357BC18 ADD W9, W9, 0x1
	0x0357BC1C ADD X8, X8, W9, 0x4, SXTW
	0x0357BC20 ADD X0, X8, 0x138
	0x0357BC24 LDP X8, X4, [X0]
	0x0357BC28 MOVZ W1, 0x2
	0x0357BC2C MOV X0, X21
	0x0357BC30 MOV X2, X19
	0x0357BC34 MOV X3, X22
	0x0357BC38 BLR X8
	0x0357BC3C LDP X20, X19, [X31 + 0x30]
	0x0357BC40 LDP X22, X21, [X31 + 0x20]
	0x0357BC44 LDP X24, X23, [X31 + 0x10]
	0x0357BC48 MOV W0, W31
	0x0357BC4C LDR X30, [X31], #0x40
	0x0357BC50 RET
	0x0357BC54 ADRP X10, 0xB7D000
	0x0357BC58 LDR X8, [X21]
	0x0357BC5C LDR X10, [X10 + 0x378]
	0x0357BC60 LDRH W9, [X8 + 0x12E]
	0x0357BC64 LDR X19, [X10]
	0x0357BC68 CBZ X9, 0x357BC8C
	0x0357BC6C LDR X10, [X8 + 0xB0]
	0x0357BC70 ADD X10, X10, 0x8
	0x0357BC74 LDUR X11, [X10 - 0x8]
	0x0357BC78 CMP X11, X1
	0x0357BC7C B.EQ 0x357BD58

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+32], X29
	003 Move [X31+40], X30
	004 Move [X31+48], X28
	005 Move [X31+56], X27
	006 Move [X31+64], X26
	007 Move [X31+72], X25
	008 Move [X31+80], X24
	009 Move [X31+88], X23
	010 Move [X31+96], X22
	011 Move [X31+104], X21
	012 Move [X31+112], X20
	013 Move [X31+120], X19
	014 Move X20, 0xE65000
	015 Move W8, [X20+3735]
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {65}
	021 Move X0, 0xB79000
	022 Move X0, [X0+2416]
	023 Call 0x1C17CF4
	024 Move X0, 0xB79000
	025 Move X0, [X0+2504]
	026 Call 0x1C17CF4
	027 Move X0, 0xB79000
	028 Move X0, [X0+2904]
	029 Call 0x1C17CF4
	030 Move X0, 0xBBC000
	031 Move X0, [X0+280]
	032 Call 0x1C17CF4
	033 Move X0, 0xBBC000
	034 Move X0, [X0+624]
	035 Call 0x1C17CF4
	036 Move X0, 0xB7E000
	037 Move X0, [X0+840]
	038 Call 0x1C17CF4
	039 Move X0, 0xBBC000
	040 Move X0, [X0+648]
	041 Call 0x1C17CF4
	042 Move X0, 0xB79000
	043 Move X0, [X0+2512]
	044 Call 0x1C17CF4
	045 Move X0, 0xB79000
	046 Move X0, [X0+1432]
	047 Call 0x1C17CF4
	048 Move X0, 0xB82000
	049 Move X0, [X0+2632]
	050 Call 0x1C17CF4
	051 Move X0, 0xBBC000
	052 Move X0, [X0+1040]
	053 Call 0x1C17CF4
	054 Move X0, 0xBBC000
	055 Move X0, [X0+1048]
	056 Call 0x1C17CF4
	057 Move X0, 0xBBC000
	058 Move X0, [X0+1056]
	059 Call 0x1C17CF4
	060 Move X0, 0xBBC000
	061 Move X0, [X0+1064]
	062 Call 0x1C17CF4
	063 Move W8, 1
	064 Move [X20+3735], W8
	065 Move X0, X19
	066 Call VoiceComponent.Awake, X0
	067 Move X0, X19
	068 Move X1, X31
	069 Call Behaviour.get_enabled, X0
	070 Move TEMP, X0
	071 And TEMP, TEMP, 1
	072 Compare TEMP, 1
	073 JumpIfNotEqual {505}
	074 Move X8, 0xBBC000
	075 Move X8, [X8+280]
	076 Move X0, X19
	077 Move X1, [X8]
	078 Call 0x21A4894, X0
	079 Move X8, 0xBBC000
	080 Move X8, [X8+624]
	081 Move X22, X0
	082 Move X0, X19
	083 Move X1, [X8]
	084 Call 0x21A4894, X0
	085 Move X26, 0xB79000
	086 Move X26, [X26+2416]
	087 Move X20, X0
	088 Move X8, [X26]
	089 Move W9, [X8+224]
	090 Compare W9, 0
	091 JumpIfNotEqual {94}
	092 Move X0, X8
	093 Call 0x1C17DFC
	094 Move X0, X31
	095 Call Application.get_platform
	096 Move W8, [X19+40]
	097 NotImplemented "Instruction CMP not yet implemented."
	098 Move X25, 0xB79000
	099 Move X25, [X25+1432]
	100 Move X0, [X25]
	101 Move W8, [X0+224]
	102 Compare W8, 0
	103 JumpIfNotEqual {105}
	104 Call 0x1C17DFC
	105 Move X0, X22
	106 Move X1, X31
	107 Move X2, X31
	108 Call Object.op_Equality, X0, X1
	109 Move X8, [X19+32]
	110 Compare X8, 0
	111 JumpIfEqual {519}
	112 Move X21, [X8+24]
	113 Move TEMP, X0
	114 And TEMP, TEMP, 1
	115 Compare TEMP, 1
	116 JumpIfNotEqual {168}
	117 Move X8, 0xB79000
	118 Move X8, [X8+2504]
	119 Move X19, [X8]
	120 Move X8, [X19+56]
	121 Compare X8, 0
	122 JumpIfNotEqual {126}
	123 Move X0, X19
	124 Call 0x1C5D6E0
	125 Move X8, [X19+56]
	126 Move X0, [X8+16]
	127 Move W8, [X0+309]
	128 Move TEMP, X8
	129 And TEMP, TEMP, 1
	130 Compare TEMP, 1
	131 JumpIfEqual {133}
	132 Call 0x1C5D684
	133 Move W8, [X0+224]
	134 Compare W8, 0
	135 JumpIfNotEqual {137}
	136 Call 0x1C17DFC
	137 Move X8, [X19+56]
	138 Move X0, [X8+16]
	139 Move W8, [X0+309]
	140 Move TEMP, X8
	141 And TEMP, TEMP, 1
	142 Compare TEMP, 1
	143 JumpIfEqual {145}
	144 Call 0x1C5D684
	145 Compare X21, 0
	146 JumpIfEqual {519}
	147 Move X10, 0xB7E000
	148 Move X11, 0xBBC000
	149 Move X9, [X0+184]
	150 Move X10, [X10+840]
	151 Move X8, [X21]
	152 Move X11, [X11+1064]
	153 Move X19, [X9]
	154 Move X1, [X10]
	155 NotImplemented "Instruction LDRH not yet implemented."
	156 Move X20, [X11]
	157 Compare X9, 0
	158 JumpIfEqual {165}
	159 Move X10, [X8+176]
	160 Add X10, X10, 8
	161 NotImplemented "Instruction LDUR not yet implemented."
	162 NotImplemented "Instruction CMP not yet implemented."
	163 Subtract X9, X9, 1
	164 Add X10, X10, 16
	165 Move W2, 1
	166 Move X0, X21
	167 Call 0x1C5D788
	168 Move X27, 0xB79000
	169 Move X27, [X27+2512]
	170 Move W1, 3
	171 Move X0, [X27]
	172 Call 0x1C17D6C
	173 Move X8, [X26]
	174 Move X23, X0
	175 Move W9, [X8+224]
	176 Compare W9, 0
	177 JumpIfNotEqual {180}
	178 Move X0, X8
	179 Call 0x1C17DFC
	180 Move X0, X31
	181 Call Application.get_platform
	182 Move X28, 0xB82000
	183 Move X28, [X28+2632]
	184 Move [X31+28], W0
	185 Add X1, X31, 28
	186 Move X8, [X28]
	187 Move X0, X8
	188 Call 0x1C17E04
	189 Compare X23, 0
	190 JumpIfEqual {519}
	191 Move X24, X0
	192 Compare X0, 0
	193 JumpIfEqual {200}
	194 Move X8, [X23]
	195 Move X0, X24
	196 Move X1, [X8+64]
	197 Call 0x1C17E00
	198 Compare X0, 0
	199 JumpIfEqual {521}
	200 Move W8, [X23+24]
	201 Compare W8, 0
	202 JumpIfEqual {520}
	203 Move [X23+32], X24
	204 Move X9, 0xBBC000
	205 Move W8, [X19+44]
	206 Move X9, [X9+648]
	207 Add X1, X31, 24
	208 Move [X31+24], W8
	209 Move X0, [X9]
	210 Call 0x1C17E04
	211 Move X24, X0
	212 Compare X0, 0
	213 JumpIfEqual {220}
	214 Move X8, [X23]
	215 Move X0, X24
	216 Move X1, [X8+64]
	217 Call 0x1C17E00
	218 Compare X0, 0
	219 JumpIfEqual {521}
	220 Move W8, [X23+24]
	221 NotImplemented "Instruction CMP not yet implemented."
	222 Move [X23+40], X24
	223 Move X29, 0xB79000
	224 Move W8, [X19+48]
	225 Move X29, [X29+2904]
	226 Add X1, X31, 20
	227 Move [X31+20], W8
	228 Move X0, [X29]
	229 Call 0x1C17E04
	230 Move X24, X0
	231 Compare X0, 0
	232 JumpIfEqual {239}
	233 Move X8, [X23]
	234 Move X0, X24
	235 Move X1, [X8+64]
	236 Call 0x1C17E00
	237 Compare X0, 0
	238 JumpIfEqual {521}
	239 Move W8, [X23+24]
	240 NotImplemented "Instruction CMP not yet implemented."
	241 Move [X23+48], X24
	242 Compare X21, 0
	243 JumpIfEqual {519}
	244 Move X9, 0xB7E000
	245 Move X8, [X21]
	246 Move X9, [X9+840]
	247 Move X10, 0xBBC000
	248 Move X1, [X9]
	249 Move X10, [X10+1048]
	250 NotImplemented "Instruction LDRH not yet implemented."
	251 Move X24, [X10]
	252 Compare X9, 0
	253 JumpIfEqual {260}
	254 Move X10, [X8+176]
	255 Add X10, X10, 8
	256 NotImplemented "Instruction LDUR not yet implemented."
	257 NotImplemented "Instruction CMP not yet implemented."
	258 Subtract X9, X9, 1
	259 Add X10, X10, 16
	260 Move W2, 1
	261 Move X0, X21
	262 Call 0x1C5D788
	263 Move W9, [X10]
	264 Add W9, W9, 1
	265 Add X8, X8, W9
	266 Add X0, X8, 312
	267 Move X5, [X0]
	268 Move X4, [X0+8]
	269 Move X0, X21
	270 Move X2, X20
	271 Move X3, X19
	272 Move X20, [X31+112]
	273 Move X19, [X31+120]
	274 Move X22, [X31+96]
	275 Move X21, [X31+104]
	276 Move X24, [X31+80]
	277 Move X23, [X31+88]
	278 Move X26, [X31+64]
	279 Move X25, [X31+72]
	280 Move X28, [X31+48]
	281 Move X27, [X31+56]
	282 Move X29, [X31+32]
	283 Move X30, [X31+40]
	284 Move W1, 1
	285 Add X31, X31, 128
	286 CallNoReturn X5
	287 Move W9, [X10]
	288 Add W9, W9, 1
	289 Add X8, X8, W9
	290 Add X0, X8, 312
	291 Move X8, [X0]
	292 Move X4, [X0+8]
	293 Move W1, 3
	294 Move X0, X21
	295 Move X2, X24
	296 Move X3, X23
	297 NotImplemented "Instruction BLR not yet implemented."
	298 Compare X22, 0
	299 JumpIfEqual {519}
	300 Move W1, [X19+44]
	301 Move X0, X22
	302 Call Recorder.set_MicrophoneType, X0, X1
	303 Move X0, [X25]
	304 Move W8, [X0+224]
	305 Compare W8, 0
	306 JumpIfNotEqual {308}
	307 Call 0x1C17DFC
	308 Move X0, X20
	309 Move X1, X31
	310 Move X2, X31
	311 Call Object.op_Equality, X0, X1
	312 Move TEMP, X0
	313 And TEMP, TEMP, 1
	314 Compare TEMP, 1
	315 JumpIfNotEqual {371}
	316 Move X9, [X19+32]
	317 Compare X9, 0
	318 JumpIfEqual {519}
	319 Move X8, 0xB79000
	320 Move X8, [X8+2504]
	321 Move X19, [X9+24]
	322 Move X20, [X8]
	323 Move X8, [X20+56]
	324 Compare X8, 0
	325 JumpIfNotEqual {329}
	326 Move X0, X20
	327 Call 0x1C5D6E0
	328 Move X8, [X20+56]
	329 Move X0, [X8+16]
	330 Move W8, [X0+309]
	331 Move TEMP, X8
	332 And TEMP, TEMP, 1
	333 Compare TEMP, 1
	334 JumpIfEqual {336}
	335 Call 0x1C5D684
	336 Move W8, [X0+224]
	337 Compare W8, 0
	338 JumpIfNotEqual {340}
	339 Call 0x1C17DFC
	340 Move X8, [X20+56]
	341 Move X0, [X8+16]
	342 Move W8, [X0+309]
	343 Move TEMP, X8
	344 And TEMP, TEMP, 1
	345 Compare TEMP, 1
	346 JumpIfEqual {348}
	347 Call 0x1C5D684
	348 Compare X19, 0
	349 JumpIfEqual {519}
	350 Move X10, 0xB7E000
	351 Move X9, [X0+184]
	352 Move X8, [X19]
	353 Move X10, [X10+840]
	354 Move X1, [X10]
	355 Move X10, 0xBBC000
	356 Move X10, [X10+1040]
	357 Move X20, [X9]
	358 NotImplemented "Instruction LDRH not yet implemented."
	359 Move X21, [X10]
	360 Compare X9, 0
	361 JumpIfEqual {368}
	362 Move X10, [X8+176]
	363 Add X10, X10, 8
	364 NotImplemented "Instruction LDUR not yet implemented."
	365 NotImplemented "Instruction CMP not yet implemented."
	366 Subtract X9, X9, 1
	367 Add X10, X10, 16
	368 Move W2, 1
	369 Move X0, X19
	370 Call 0x1C5D788
	371 Compare X20, 0
	372 JumpIfEqual {519}
	373 Move W1, [X19+48]
	374 Move X0, X20
	375 Move X2, X31
	376 Call Behaviour.set_enabled, X0, X1
	377 Move W8, [X19+48]
	378 Compare W8, 0
	379 JumpIfEqual {505}
	380 Move X8, [X19+32]
	381 Compare X8, 0
	382 JumpIfEqual {519}
	383 Move X0, [X27]
	384 Move X21, [X8+24]
	385 Move W1, 3
	386 Call 0x1C17D6C
	387 Move X8, [X26]
	388 Move X22, X0
	389 Move W9, [X8+224]
	390 Compare W9, 0
	391 JumpIfNotEqual {394}
	392 Move X0, X8
	393 Call 0x1C17DFC
	394 Move X0, X31
	395 Call Application.get_platform
	396 Move X8, [X28]
	397 Move [X31+16], W0
	398 Add X1, X31, 16
	399 Move X0, X8
	400 Call 0x1C17E04
	401 Compare X22, 0
	402 JumpIfEqual {519}
	403 Move X23, X0
	404 Compare X0, 0
	405 JumpIfEqual {412}
	406 Move X8, [X22]
	407 Move X0, X23
	408 Move X1, [X8+64]
	409 Call 0x1C17E00
	410 Compare X0, 0
	411 JumpIfEqual {521}
	412 Move W8, [X22+24]
	413 Compare W8, 0
	414 JumpIfEqual {520}
	415 Move [X22+32], X23
	416 Move W8, [X19+49]
	417 Move X0, [X29]
	418 Add X1, X31, 12
	419 Move [X31+12], W8
	420 Call 0x1C17E04
	421 Move X23, X0
	422 Compare X0, 0
	423 JumpIfEqual {430}
	424 Move X8, [X22]
	425 Move X0, X23
	426 Move X1, [X8+64]
	427 Call 0x1C17E00
	428 Compare X0, 0
	429 JumpIfEqual {521}
	430 Move W8, [X22+24]
	431 NotImplemented "Instruction CMP not yet implemented."
	432 Move [X22+40], X23
	433 Move W8, [X19+50]
	434 Move X0, [X29]
	435 Add X1, X31, 8
	436 Move [X31+8], W8
	437 Call 0x1C17E04
	438 Move X23, X0
	439 Compare X0, 0
	440 JumpIfEqual {447}
	441 Move X8, [X22]
	442 Move X0, X23
	443 Move X1, [X8+64]
	444 Call 0x1C17E00
	445 Compare X0, 0
	446 JumpIfEqual {521}
	447 Move W8, [X22+24]
	448 NotImplemented "Instruction CMP not yet implemented."
	449 Move [X22+48], X23
	450 Compare X21, 0
	451 JumpIfEqual {519}
	452 Move X9, 0xB7E000
	453 Move X8, [X21]
	454 Move X9, [X9+840]
	455 Move X10, 0xBBC000
	456 Move X1, [X9]
	457 Move X10, [X10+1056]
	458 NotImplemented "Instruction LDRH not yet implemented."
	459 Move X23, [X10]
	460 Compare X9, 0
	461 JumpIfEqual {468}
	462 Move X10, [X8+176]
	463 Add X10, X10, 8
	464 NotImplemented "Instruction LDUR not yet implemented."
	465 NotImplemented "Instruction CMP not yet implemented."
	466 Subtract X9, X9, 1
	467 Add X10, X10, 16
	468 Move W2, 1
	469 Move X0, X21
	470 Call 0x1C5D788
	471 Move W9, [X10]
	472 Add W9, W9, 1
	473 Add X8, X8, W9
	474 Add X0, X8, 312
	475 Move X8, [X0]
	476 Move X4, [X0+8]
	477 Move W1, 1
	478 Move X0, X19
	479 Move X2, X21
	480 Move X3, X20
	481 NotImplemented "Instruction BLR not yet implemented."
	482 Move W9, [X10]
	483 Add W9, W9, 1
	484 Add X8, X8, W9
	485 Add X0, X8, 312
	486 Move X8, [X0]
	487 Move X4, [X0+8]
	488 Move W1, 3
	489 Move X0, X21
	490 Move X2, X23
	491 Move X3, X22
	492 NotImplemented "Instruction BLR not yet implemented."
	493 Move W8, [X19+49]
	494 Move W9, [X20+40]
	495 NotImplemented "Instruction CMP not yet implemented."
	496 Move X0, X20
	497 Move [X20+40], W8
	498 Call WebRtcAudioDsp.applyToProc, X0
	499 Move W8, [X19+50]
	500 Move W9, [X20+52]
	501 NotImplemented "Instruction CMP not yet implemented."
	502 Move X0, X20
	503 Move [X20+52], W8
	504 Call WebRtcAudioDsp.applyToProc, X0
	505 Move X20, [X31+112]
	506 Move X19, [X31+120]
	507 Move X22, [X31+96]
	508 Move X21, [X31+104]
	509 Move X24, [X31+80]
	510 Move X23, [X31+88]
	511 Move X26, [X31+64]
	512 Move X25, [X31+72]
	513 Move X28, [X31+48]
	514 Move X27, [X31+56]
	515 Move X29, [X31+32]
	516 Move X30, [X31+40]
	517 Add X31, X31, 128
	518 Return 
	519 Call 0x1C17F20
	520 Call 0x1C17F28
	521 Call 0x1C17F44
	522 Move X1, X31
	523 Call 0x1C17DEC

Method: System.Void .ctor()

Disassembly:
	0x0357BCB8 MOV X2, X23

ISIL:
	001 Call VoiceComponent..ctor, X0
	002 Return 

