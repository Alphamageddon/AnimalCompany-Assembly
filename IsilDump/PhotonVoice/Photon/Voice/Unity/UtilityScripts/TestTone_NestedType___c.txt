Type: Photon.Voice.Unity.UtilityScripts.TestTone/<>c

Method: System.Void .cctor()

Disassembly:
	0x03587994 LDP X20, X19, [X31 + 0x30]
	0x03587998 LDP X22, X21, [X31 + 0x20]
	0x0358799C LDP X24, X23, [X31 + 0x10]
	0x035879A0 MOV W1, W31
	0x035879A4 MOV X4, X31
	0x035879A8 LDR X30, [X31], #0x40
	0x035879AC B 0x35054AC
	0x035879B0 MOV X1, X31
	0x035879B4 B 0x3571910
	0x035879B8 SUB X31, X31, 0x50
	0x035879BC STP X30, X25, [X31 + 0x10]
	0x035879C0 STP X24, X23, [X31 + 0x20]
	0x035879C4 STP X22, X21, [X31 + 0x30]
	0x035879C8 STP X20, X19, [X31 + 0x40]
	0x035879CC ADRP X23, 0xE58000
	0x035879D0 LDRB W8, [X23 + 0xF08]
	0x035879D4 MOV X22, X3
	0x035879D8 MOV W19, W2
	0x035879DC MOV W20, W1
	0x035879E0 MOV X21, X0
	0x035879E4 TBNZ X8, 0x0, 0x3587A8C
	0x035879E8 ADRP X0, 0xB6D000
	0x035879EC LDR X0, [X0 + 0x9D8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0xE59000
	005 Move X20, 0xBB0000
	006 Move W8, [X19+3838]
	007 Move X20, [X20+2304]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xBB0000
	013 Move X0, [X0+2304]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+3838], W8
	017 Move X0, [X20]
	018 Call 0x1C17F10
	019 Move X1, X31
	020 Move X19, X0
	021 Call Object..ctor, X0
	022 Move X8, [X20]
	023 Move X8, [X8+184]
	024 Move [X8], X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Return 

Method: System.Void .ctor()

Disassembly:
	0x035879F0 BL 0x1C16CF4
	0x035879F4 ADRP X0, 0xB71000

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: Photon.Voice.IAudioDesc <Start>b__0_0()

Disassembly:
	0x035879F8 LDR X0, [X0 + 0x348]
	0x035879FC BL 0x1C16CF4
	0x03587A00 ADRP X0, 0xB6C000
	0x03587A04 LDR X0, [X0 + 0x758]
	0x03587A08 BL 0x1C16CF4
	0x03587A0C ADRP X0, 0xB6F000
	0x03587A10 LDR X0, [X0 + 0x398]
	0x03587A14 BL 0x1C16CF4
	0x03587A18 ADRP X0, 0xBAF000
	0x03587A1C LDR X0, [X0 + 0x988]
	0x03587A20 BL 0x1C16CF4
	0x03587A24 ADRP X0, 0xB6C000
	0x03587A28 LDR X0, [X0 + 0x9D0]
	0x03587A2C BL 0x1C16CF4
	0x03587A30 ADRP X0, 0xB6C000
	0x03587A34 LDR X0, [X0 + 0x598]
	0x03587A38 BL 0x1C16CF4
	0x03587A3C ADRP X0, 0xBAF000
	0x03587A40 LDR X0, [X0 + 0x990]
	0x03587A44 BL 0x1C16CF4
	0x03587A48 ADRP X0, 0xB6C000
	0x03587A4C LDR X0, [X0 + 0x830]
	0x03587A50 BL 0x1C16CF4
	0x03587A54 ADRP X0, 0xBAF000
	0x03587A58 LDR X0, [X0 + 0x998]
	0x03587A5C BL 0x1C16CF4
	0x03587A60 ADRP X0, 0xBAF000
	0x03587A64 LDR X0, [X0 + 0x9A0]
	0x03587A68 BL 0x1C16CF4
	0x03587A6C ADRP X0, 0xBAF000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xE59000
	006 Move X21, 0xBB0000
	007 Move X19, 0xBB0000
	008 Move W8, [X20+3839]
	009 Move X21, [X21+1024]
	010 Move X19, [X19+1032]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0xBB0000
	016 Move X0, [X0+1032]
	017 Call 0x1C17CF4
	018 Move X0, 0xBB0000
	019 Move X0, [X0+1024]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X20+3839], W8
	023 Move X0, [X21]
	024 Call 0x1C17F10
	025 Move X5, [X19]
	026 Move W1, 440
	027 Move W2, 100
	028 Move W3, 0x5DC0
	029 Move W4, 1
	030 Move X19, X0
	031 Call 0x26F5A9C, X0, X1, X2, X3, X4
	032 Move X0, X19
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move X30, [X31+32]
	036 Move X21, [X31+40]
	037 Return X0

