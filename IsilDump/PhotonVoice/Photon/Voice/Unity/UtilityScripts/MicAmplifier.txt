Type: Photon.Voice.Unity.UtilityScripts.MicAmplifier

Method: System.Single get_AmplificationFactor()

Disassembly:
	0x03582D88 MOV X0, X19
	0x03582D8C STRB W31, [X19 + 0x28]

ISIL:
	001 Move V0, [X0+40]
	002 Return V0

Method: System.Void set_AmplificationFactor(System.Single value)

Disassembly:
	0x03582D90 BL 0x3582508
	0x03582D94 LDR X8, [X19 + 0x20]
	0x03582D98 CBZ X8, 0x3582E90
	0x03582D9C ADRP X9, 0xBB4000
	0x03582DA0 LDR X9, [X9 + 0x760]
	0x03582DA4 ADRP X21, 0xB71000
	0x03582DA8 LDR X19, [X8 + 0x18]
	0x03582DAC MOV X0, X20
	0x03582DB0 LDR X1, [X9]
	0x03582DB4 LDR X21, [X21 + 0x9C8]
	0x03582DB8 MOV X2, X31
	0x03582DBC BL 0x321B938
	0x03582DC0 LDR X21, [X21]
	0x03582DC4 MOV X20, X0
	0x03582DC8 LDR X8, [X21 + 0x38]
	0x03582DCC CBNZ X8, 0x3582DDC
	0x03582DD0 MOV X0, X21
	0x03582DD4 BL 0x1C5C6E0

ISIL:
	001 Move [X31-32], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X19
	004 Move X19, X0
	005 Add X0, X0, 40
	006 Move X1, X31
	007 Move V8, V0
	008 Call Single.Equals, X0, V0
	009 Move TEMP, X0
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {22}
	013 Move X8, [X19+48]
	014 Move [X19+40], S8
	015 Compare X8, 0
	016 JumpIfEqual {18}
	017 Move [X8+16], S8
	018 Move X8, [X19+56]
	019 Compare X8, 0
	020 JumpIfEqual {22}
	021 Move [X8+16], S8
	022 Move X30, [X31+16]
	023 Move X19, [X31+24]
	024 Move V8, [X31+32]
	025 Return 

Method: System.Void OnEnable()

Disassembly:
	0x03582DD8 LDR X8, [X21 + 0x38]
	0x03582DDC LDR X0, [X8 + 0x10]
	0x03582DE0 LDRB W8, [X0 + 0x135]
	0x03582DE4 TBNZ X8, 0x0, 0x3582DEC
	0x03582DE8 BL 0x1C5C684
	0x03582DEC LDR W8, [X0 + 0xE0]
	0x03582DF0 CBNZ W8, 0x3582DF8

ISIL:
	001 Move X8, [X0+48]
	002 Compare X8, 0
	003 JumpIfEqual {5}
	004 Move [X8+20], W31
	005 Move X8, [X0+56]
	006 Compare X8, 0
	007 JumpIfEqual {9}
	008 Move [X8+20], W31
	009 Return 

Method: System.Void OnDisable()

Disassembly:
	0x03582DF4 BL 0x1C16DFC
	0x03582DF8 LDR X8, [X21 + 0x38]
	0x03582DFC LDR X0, [X8 + 0x10]
	0x03582E00 LDRB W8, [X0 + 0x135]
	0x03582E04 TBNZ X8, 0x0, 0x3582E0C
	0x03582E08 BL 0x1C5C684
	0x03582E0C CBZ X19, 0x3582E90
	0x03582E10 ADRP X10, 0xB76000
	0x03582E14 LDR X9, [X0 + 0xB8]

ISIL:
	001 Move X8, [X0+48]
	002 Compare X8, 0
	003 JumpIfEqual {6}
	004 Move W9, 1
	005 Move [X8+20], W9
	006 Move X8, [X0+56]
	007 Compare X8, 0
	008 JumpIfEqual {11}
	009 Move W9, 1
	010 Move [X8+20], W9
	011 Return 

Method: System.Void PhotonVoiceCreated(Photon.Voice.Unity.PhotonVoiceCreatedParams p)

Disassembly:
	0x03582E18 LDR X8, [X19]
	0x03582E1C LDR X10, [X10 + 0x348]
	0x03582E20 LDR X21, [X9]
	0x03582E24 LDRH W9, [X8 + 0x12E]
	0x03582E28 LDR X1, [X10]
	0x03582E2C CBZ X9, 0x3582E50
	0x03582E30 LDR X10, [X8 + 0xB0]
	0x03582E34 ADD X10, X10, 0x8
	0x03582E38 LDUR X11, [X10 - 0x8]
	0x03582E3C CMP X11, X1
	0x03582E40 B.EQ 0x3582E60
	0x03582E44 SUBS X9, X9, 0x1
	0x03582E48 ADD X10, X10, 0x10
	0x03582E4C B.NE 0x3582E38
	0x03582E50 MOVZ W2, 0x1
	0x03582E54 MOV X0, X19
	0x03582E58 BL 0x1C5C788
	0x03582E5C B 0x3582E70
	0x03582E60 LDR W9, [X10]
	0x03582E64 ADD W9, W9, 0x1
	0x03582E68 ADD X8, X8, W9, 0x4, SXTW
	0x03582E6C ADD X0, X8, 0x138
	0x03582E70 LDP X5, X4, [X0]
	0x03582E74 MOV X0, X19
	0x03582E78 MOV X2, X20
	0x03582E7C LDP X20, X19, [X31 + 0x10]
	0x03582E80 MOVZ W1, 0x3
	0x03582E84 MOV X3, X21
	0x03582E88 LDP X30, X21, [X31], #0x20
	0x03582E8C BR X5
	0x03582E90 BL 0x1C16F20
	0x03582E94 STP X30, X21, [X31 - 0x20]!
	0x03582E98 STP X20, X19, [X31 + 0x10]
	0x03582E9C ADRP X21, 0xE5D000
	0x03582EA0 LDRB W8, [X21 + 0xEEB]
	0x03582EA4 MOV X20, X1
	0x03582EA8 MOV X19, X0
	0x03582EAC TBNZ X8, 0x0, 0x3582EDC
	0x03582EB0 ADRP X0, 0xB71000
	0x03582EB4 LDR X0, [X0 + 0x9C8]
	0x03582EB8 BL 0x1C16CF4
	0x03582EBC ADRP X0, 0xB76000
	0x03582EC0 LDR X0, [X0 + 0x348]
	0x03582EC4 BL 0x1C16CF4
	0x03582EC8 ADRP X0, 0xBB4000
	0x03582ECC LDR X0, [X0 + 0x768]
	0x03582ED0 BL 0x1C16CF4
	0x03582ED4 MOVZ W8, 0x1
	0x03582ED8 STRB W8, [X21 + 0xEEB]
	0x03582EDC MOV X0, X19
	0x03582EE0 MOV W1, W31
	0x03582EE4 STRB W31, [X19 + 0x28]
	0x03582EE8 BL 0x3582508
	0x03582EEC LDR X8, [X19 + 0x20]
	0x03582EF0 CBZ X8, 0x3582FE8
	0x03582EF4 ADRP X9, 0xBB4000
	0x03582EF8 LDR X9, [X9 + 0x768]
	0x03582EFC ADRP X21, 0xB71000
	0x03582F00 LDR X19, [X8 + 0x18]
	0x03582F04 MOV X0, X20
	0x03582F08 LDR X1, [X9]
	0x03582F0C LDR X21, [X21 + 0x9C8]
	0x03582F10 MOV X2, X31
	0x03582F14 BL 0x321B938
	0x03582F18 LDR X21, [X21]
	0x03582F1C MOV X20, X0
	0x03582F20 LDR X8, [X21 + 0x38]
	0x03582F24 CBNZ X8, 0x3582F34
	0x03582F28 MOV X0, X21
	0x03582F2C BL 0x1C5C6E0
	0x03582F30 LDR X8, [X21 + 0x38]
	0x03582F34 LDR X0, [X8 + 0x10]
	0x03582F38 LDRB W8, [X0 + 0x135]
	0x03582F3C TBNZ X8, 0x0, 0x3582F44
	0x03582F40 BL 0x1C5C684
	0x03582F44 LDR W8, [X0 + 0xE0]
	0x03582F48 CBNZ W8, 0x3582F50
	0x03582F4C BL 0x1C16DFC
	0x03582F50 LDR X8, [X21 + 0x38]
	0x03582F54 LDR X0, [X8 + 0x10]
	0x03582F58 LDRB W8, [X0 + 0x135]
	0x03582F5C TBNZ X8, 0x0, 0x3582F64
	0x03582F60 BL 0x1C5C684
	0x03582F64 CBZ X19, 0x3582FE8
	0x03582F68 ADRP X10, 0xB76000
	0x03582F6C LDR X9, [X0 + 0xB8]
	0x03582F70 LDR X8, [X19]
	0x03582F74 LDR X10, [X10 + 0x348]
	0x03582F78 LDR X21, [X9]
	0x03582F7C LDRH W9, [X8 + 0x12E]
	0x03582F80 LDR X1, [X10]
	0x03582F84 CBZ X9, 0x3582FA8
	0x03582F88 LDR X10, [X8 + 0xB0]
	0x03582F8C ADD X10, X10, 0x8
	0x03582F90 LDUR X11, [X10 - 0x8]
	0x03582F94 CMP X11, X1
	0x03582F98 B.EQ 0x3582FB8
	0x03582F9C SUBS X9, X9, 0x1
	0x03582FA0 ADD X10, X10, 0x10
	0x03582FA4 B.NE 0x3582F90
	0x03582FA8 MOVZ W2, 0x1
	0x03582FAC MOV X0, X19
	0x03582FB0 BL 0x1C5C788
	0x03582FB4 B 0x3582FC8
	0x03582FB8 LDR W9, [X10]
	0x03582FBC ADD W9, W9, 0x1
	0x03582FC0 ADD X8, X8, W9, 0x4, SXTW
	0x03582FC4 ADD X0, X8, 0x138
	0x03582FC8 LDP X5, X4, [X0]
	0x03582FCC MOV X0, X19
	0x03582FD0 MOV X2, X20
	0x03582FD4 LDP X20, X19, [X31 + 0x10]
	0x03582FD8 MOVZ W1, 0x3
	0x03582FDC MOV X3, X21
	0x03582FE0 LDP X30, X21, [X31], #0x20
	0x03582FE4 BR X5
	0x03582FE8 BL 0x1C16F20
	0x03582FEC MOVZ W8, 0x1
	0x03582FF0 STRB W8, [X0 + 0x2A]
	0x03582FF4 B 0x357413C
	0x03582FF8 STP X30, X23, [X31 - 0x30]!
	0x03582FFC STP X22, X21, [X31 + 0x10]
	0x03583000 STP X20, X19, [X31 + 0x20]
	0x03583004 ADRP X21, 0xE5C000
	0x03583008 ADRP X20, 0xBB3000
	0x0358300C LDRB W8, [X21 + 0xEEC]
	0x03583010 LDR X20, [X20 + 0x770]
	0x03583014 MOV X19, X0
	0x03583018 TBNZ X8, 0x0, 0x3583060
	0x0358301C ADRP X0, 0xBB3000
	0x03583020 LDR X0, [X0 + 0x770]
	0x03583024 BL 0x1C16CF4
	0x03583028 ADRP X0, 0xB70000
	0x0358302C LDR X0, [X0 + 0xA28]
	0x03583030 BL 0x1C16CF4
	0x03583034 ADRP X0, 0xB70000
	0x03583038 LDR X0, [X0 + 0x9D0]
	0x0358303C BL 0x1C16CF4
	0x03583040 ADRP X0, 0xBB3000
	0x03583044 LDR X0, [X0 + 0x778]
	0x03583048 BL 0x1C16CF4
	0x0358304C ADRP X0, 0xBB3000
	0x03583050 LDR X0, [X0 + 0x780]
	0x03583054 BL 0x1C16CF4
	0x03583058 MOVZ W8, 0x1
	0x0358305C STRB W8, [X21 + 0xEEC]
	0x03583060 LDR X1, [X20]
	0x03583064 ADRP X23, 0xB70000
	0x03583068 LDR X23, [X23 + 0xA28]
	0x0358306C MOV X0, X19
	0x03583070 BL 0x21A43A8
	0x03583074 CBZ X0, 0x358315C
	0x03583078 LDR X8, [X0 + 0x18]
	0x0358307C MOV X20, X0
	0x03583080 CBZ X8, 0x358315C
	0x03583084 CMP W8, 0x2
	0x03583088 B.LT 0x3583118
	0x0358308C ADRP X8, 0xB70000
	0x03583090 LDR X8, [X8 + 0x9D0]
	0x03583094 MOVZ W1, 0x1
	0x03583098 LDR X0, [X8]
	0x0358309C BL 0x1C16D6C
	0x035830A0 LDR W8, [X20 + 0x18]
	0x035830A4 CBZ W8, 0x35831A4
	0x035830A8 MOV X21, X0
	0x035830AC LDR X0, [X20 + 0x20]
	0x035830B0 CBZ X0, 0x35831A0
	0x035830B4 MOV X1, X31
	0x035830B8 BL 0x3C389D4
	0x035830BC CBZ X21, 0x35831A0
	0x035830C0 MOV X22, X0
	0x035830C4 CBZ X0, 0x35830DC
	0x035830C8 LDR X8, [X21]
	0x035830CC MOV X0, X22
	0x035830D0 LDR X1, [X8 + 0x40]
	0x035830D4 BL 0x1C16E00
	0x035830D8 CBZ X0, 0x35831A8
	0x035830DC LDR W8, [X21 + 0x18]
	0x035830E0 CBZ W8, 0x35831A4
	0x035830E4 STR X22, [X21 + 0x20]
	0x035830E8 LDR X0, [X23]
	0x035830EC LDR W8, [X0 + 0xE0]
	0x035830F0 CBNZ W8, 0x35830F8
	0x035830F4 BL 0x1C16DFC
	0x035830F8 ADRP X8, 0xBB3000
	0x035830FC LDR X8, [X8 + 0x778]
	0x03583100 MOV X0, X19
	0x03583104 MOV X2, X21
	0x03583108 MOV X3, X31
	0x0358310C LDR X1, [X8]
	0x03583110 BL 0x3C06D3C
	0x03583114 LDR X8, [X20 + 0x18]
	0x03583118 CBZ W8, 0x35831A4
	0x0358311C LDR X8, [X20 + 0x20]
	0x03583120 STR X8, [X19 + 0x20]
	0x03583124 CBZ X8, 0x35831A0
	0x03583128 LDR X8, [X8 + 0x48]
	0x0358312C CBZ X8, 0x35831A0
	0x03583130 LDR X9, [X8 + 0x10]
	0x03583134 STR X9, [X19 + 0x40]
	0x03583138 LDR X8, [X8 + 0x188]
	0x0358313C CBZ X8, 0x35831A0
	0x03583140 LDR V0, [X8 + 0x60]
	0x03583144 LDP X22, X21, [X31 + 0x10]
	0x03583148 SCVTF S0, S0
	0x0358314C STR S0, [X19 + 0x48]
	0x03583150 LDP X20, X19, [X31 + 0x20]
	0x03583154 LDP X30, X23, [X31], #0x30
	0x03583158 RET
	0x0358315C LDR X0, [X23]
	0x03583160 ADRP X20, 0xBB3000
	0x03583164 LDR W8, [X0 + 0xE0]
	0x03583168 LDR X20, [X20 + 0x780]
	0x0358316C CBNZ W8, 0x3583174
	0x03583170 BL 0x1C16DFC
	0x03583174 LDR X0, [X20]
	0x03583178 MOV X1, X19
	0x0358317C MOV X2, X31
	0x03583180 BL 0x3C065A4
	0x03583184 MOV X0, X19
	0x03583188 LDP X20, X19, [X31 + 0x20]
	0x0358318C LDP X22, X21, [X31 + 0x10]
	0x03583190 MOV W1, W31
	0x03583194 MOV X2, X31
	0x03583198 LDP X30, X23, [X31], #0x30
	0x0358319C B 0x3C32410
	0x035831A0 BL 0x1C16F20
	0x035831A4 BL 0x1C16F28
	0x035831A8 BL 0x1C16F44
	0x035831AC MOV X1, X31
	0x035831B0 BL 0x1C16DEC
	0x035831B4 STP D11, D10, [X31 - 0x50]!
	0x035831B8 STP D9, D8, [X31 + 0x10]
	0x035831BC STP X30, X23, [X31 + 0x20]
	0x035831C0 STP X22, X21, [X31 + 0x30]
	0x035831C4 STP X20, X19, [X31 + 0x40]
	0x035831C8 ADRP X20, 0xE5C000
	0x035831CC LDRB W8, [X20 + 0xEED]
	0x035831D0 MOV X19, X0
	0x035831D4 TBNZ X8, 0x0, 0x358321C
	0x035831D8 ADRP X0, 0xB97000
	0x035831DC LDR X0, [X0 + 0x878]
	0x035831E0 BL 0x1C16CF4
	0x035831E4 ADRP X0, 0xBB3000
	0x035831E8 LDR X0, [X0 + 0x788]

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X19, 0xE5E000
	008 Move W8, [X19+3812]
	009 Move X21, X1
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {53}
	015 Move X0, 0xB77000
	016 Move X0, [X0+840]
	017 Call 0x1C17CF4
	018 Move X0, 0xBB5000
	019 Move X0, [X0+1768]
	020 Call 0x1C17CF4
	021 Move X0, 0xBB5000
	022 Move X0, [X0+1648]
	023 Call 0x1C17CF4
	024 Move X0, 0xB9E000
	025 Move X0, [X0+352]
	026 Call 0x1C17CF4
	027 Move X0, 0xB9E000
	028 Move X0, [X0+360]
	029 Call 0x1C17CF4
	030 Move X0, 0xBB5000
	031 Move X0, [X0+1776]
	032 Call 0x1C17CF4
	033 Move X0, 0xBB5000
	034 Move X0, [X0+1656]
	035 Call 0x1C17CF4
	036 Move X0, 0xBB5000
	037 Move X0, [X0+1784]
	038 Call 0x1C17CF4
	039 Move X0, 0xBB5000
	040 Move X0, [X0+1792]
	041 Call 0x1C17CF4
	042 Move X0, 0xB72000
	043 Move X0, [X0+2512]
	044 Call 0x1C17CF4
	045 Move X0, 0xB72000
	046 Move X0, [X0+2096]
	047 Call 0x1C17CF4
	048 Move X0, 0xBB5000
	049 Move X0, [X0+1800]
	050 Call 0x1C17CF4
	051 Move W8, 1
	052 Move [X19+3812], W8
	053 Compare X21, 0
	054 JumpIfEqual {264}
	055 Move X19, [X21+16]
	056 Compare X19, 0
	057 JumpIfEqual {78}
	058 Move X22, 0xB9E000
	059 Move X22, [X22+352]
	060 Move X8, [X19]
	061 Move X10, [X22]
	062 Move W9, [X8+304]
	063 Move W11, [X10+304]
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Move X12, [X8+200]
	066 Add X11, X12, X11
	067 NotImplemented "Instruction LDUR not yet implemented."
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Move X22, 0xB9E000
	070 Move X22, [X22+360]
	071 Move X10, [X22]
	072 Move W11, [X10+304]
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Move X8, [X8+200]
	075 Add X8, X8, X11
	076 NotImplemented "Instruction LDUR not yet implemented."
	077 NotImplemented "Instruction CMP not yet implemented."
	078 Move X8, [X20+32]
	079 Compare X8, 0
	080 JumpIfEqual {264}
	081 Move X9, 0xB72000
	082 Move X9, [X9+2512]
	083 Move X20, 0xBB5000
	084 Move X19, [X8+24]
	085 Move W1, 1
	086 Move X0, [X9]
	087 Move X20, [X20+1800]
	088 Call 0x1C17D6C
	089 Move X8, [X21+16]
	090 Move X21, [X20]
	091 Move X20, X0
	092 Compare X8, 0
	093 JumpIfEqual {106}
	094 Move X0, X8
	095 Move X1, X31
	096 Call "il2cpp_vm_object_is_inst", X0
	097 Compare X0, 0
	098 JumpIfEqual {264}
	099 Move X8, [X0]
	100 Move X9, [X8+360]
	101 Move X1, [X8+368]
	102 NotImplemented "Instruction BLR not yet implemented."
	103 Move X22, X0
	104 Compare X20, 0
	105 JumpIfNotEqual {111}
	106 Move X8, 0xB72000
	107 Move X8, [X8+2096]
	108 Move X22, [X8]
	109 Compare X20, 0
	110 JumpIfEqual {264}
	111 Compare X22, 0
	112 JumpIfEqual {119}
	113 Move X8, [X20]
	114 Move X0, X22
	115 Move X1, [X8+64]
	116 Call 0x1C17E00
	117 Compare X0, 0
	118 JumpIfEqual {266}
	119 Move W8, [X20+24]
	120 Compare W8, 0
	121 JumpIfEqual {265}
	122 Move [X20+32], X22
	123 Compare X19, 0
	124 JumpIfEqual {264}
	125 Move X10, 0xB77000
	126 Move X8, [X19]
	127 Move X10, [X10+840]
	128 NotImplemented "Instruction LDRH not yet implemented."
	129 Move X1, [X10]
	130 Compare X9, 0
	131 JumpIfEqual {138}
	132 Move X10, [X8+176]
	133 Add X10, X10, 8
	134 NotImplemented "Instruction LDUR not yet implemented."
	135 NotImplemented "Instruction CMP not yet implemented."
	136 Subtract X9, X9, 1
	137 Add X10, X10, 16
	138 Move W2, 1
	139 Move X0, X19
	140 Call 0x1C5D788
	141 Move W9, [X10]
	142 Add W9, W9, 1
	143 Add X8, X8, W9
	144 Add X0, X8, 312
	145 Move X5, [X0]
	146 Move X4, [X0+8]
	147 Move X0, X19
	148 Move X2, X21
	149 Move X3, X20
	150 Move X20, [X31+32]
	151 Move X19, [X31+40]
	152 Move X22, [X31+16]
	153 Move X21, [X31+24]
	154 Move X30, [X31+8]
	155 Move W1, 1
	156 Move V8, [X31+48]
	157 CallNoReturn X5
	158 Move X8, 0xBB4000
	159 Move V8, [X20+40]
	160 Move X8, [X8+1784]
	161 Move X0, [X8]
	162 Call 0x1C17F10
	163 Move X1, X31
	164 Move X21, X0
	165 Call Object..ctor, X0
	166 Move [X21+16], S8
	167 Move [X20+48], X21
	168 Move X8, 0xBB4000
	169 Move X8, [X8+1768]
	170 Move W1, 1
	171 Move X0, [X8]
	172 Call 0x1C17D6C
	173 Compare X0, 0
	174 JumpIfEqual {264}
	175 Move X20, [X20+48]
	176 Move X21, X0
	177 Compare X20, 0
	178 JumpIfEqual {185}
	179 Move X8, [X21]
	180 Move X0, X20
	181 Move X1, [X8+64]
	182 Call 0x1C17E00
	183 Compare X0, 0
	184 JumpIfEqual {266}
	185 Move W8, [X21+24]
	186 Compare W8, 0
	187 JumpIfEqual {265}
	188 Move [X21+32], X20
	189 Move X9, [X19]
	190 Move X8, [X22]
	191 Move W11, [X9+304]
	192 Move W10, [X8+304]
	193 NotImplemented "Instruction CMP not yet implemented."
	194 Move X9, [X9+200]
	195 Add X9, X9, X10
	196 NotImplemented "Instruction LDUR not yet implemented."
	197 NotImplemented "Instruction CMP not yet implemented."
	198 Move X8, 0xBB4000
	199 Move X8, [X8+1776]
	200 Move X0, X19
	201 Move X1, X21
	202 Move X20, [X31+32]
	203 Move X19, [X31+40]
	204 Move X2, [X8]
	205 Move X22, [X31+16]
	206 Move X21, [X31+24]
	207 Move X30, [X31+8]
	208 Move V8, [X31+48]
	209 Call LocalVoiceFramed`1<Single>.AddPostProcessor, X0, X1
	210 Return 
	211 Move X8, 0xBB4000
	212 Move V8, [X20+40]
	213 Move X8, [X8+1792]
	214 Move X0, [X8]
	215 Call 0x1C17F10
	216 Move X1, X31
	217 Move X21, X0
	218 Call Object..ctor, X0
	219 Move [X21+16], S8
	220 Move [X20+56], X21
	221 Move X8, 0xBB4000
	222 Move X8, [X8+1648]
	223 Move W1, 1
	224 Move X0, [X8]
	225 Call 0x1C17D6C
	226 Compare X0, 0
	227 JumpIfEqual {264}
	228 Move X20, [X20+56]
	229 Move X21, X0
	230 Compare X20, 0
	231 JumpIfEqual {238}
	232 Move X8, [X21]
	233 Move X0, X20
	234 Move X1, [X8+64]
	235 Call 0x1C17E00
	236 Compare X0, 0
	237 JumpIfEqual {266}
	238 Move W8, [X21+24]
	239 Compare W8, 0
	240 JumpIfEqual {265}
	241 Move [X21+32], X20
	242 Move X9, [X19]
	243 Move X8, [X22]
	244 Move W11, [X9+304]
	245 Move W10, [X8+304]
	246 NotImplemented "Instruction CMP not yet implemented."
	247 Move X9, [X9+200]
	248 Add X9, X9, X10
	249 NotImplemented "Instruction LDUR not yet implemented."
	250 NotImplemented "Instruction CMP not yet implemented."
	251 Move X8, 0xBB4000
	252 Move X8, [X8+1656]
	253 Move X0, X19
	254 Move X1, X21
	255 Move X20, [X31+32]
	256 Move X19, [X31+40]
	257 Move X2, [X8]
	258 Move X22, [X31+16]
	259 Move X21, [X31+24]
	260 Move X30, [X31+8]
	261 Move V8, [X31+48]
	262 Call 0x31920B4, X0, X1
	263 Return 
	264 Call 0x1C17F20
	265 Call 0x1C17F28
	266 Call 0x1C17F44
	267 Move X1, X31
	268 Call 0x1C17DEC

Method: System.Void .ctor()

Disassembly:
	0x0358323C LDP S8, S9, [X19 + 0x28]
	0x03583240 LDP S10, S11, [X19 + 0x30]
	0x03583244 LDR X23, [X23 + 0x7A0]

ISIL:
	001 Move W8, 0x3F800000
	002 Move [X0+40], W8
	003 Call VoiceComponent..ctor, X0
	004 Return 

