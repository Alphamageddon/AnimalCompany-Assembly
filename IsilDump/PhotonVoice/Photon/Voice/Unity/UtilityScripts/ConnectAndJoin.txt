Type: Photon.Voice.Unity.UtilityScripts.ConnectAndJoin

Method: System.Boolean get_IsConnected()

Disassembly:
	0x0358259C ADRP X0, 0xBB4000
	0x035825A0 LDR X0, [X0 + 0x728]
	0x035825A4 BL 0x1C16CF4
	0x035825A8 MOVZ W8, 0x1
	0x035825AC STRB W8, [X21 + 0xEE7]
	0x035825B0 LDR X8, [X19 + 0x20]
	0x035825B4 CBZ X8, 0x3582924
	0x035825B8 ADRP X9, 0xB71000
	0x035825BC LDR X9, [X9 + 0x9D0]
	0x035825C0 ADRP X23, 0xB71000
	0x035825C4 LDR X21, [X8 + 0x18]
	0x035825C8 MOVZ W1, 0x1
	0x035825CC LDR X0, [X9]
	0x035825D0 LDR X23, [X23 + 0xB58]
	0x035825D4 AND W25, W20, 0x1
	0x035825D8 BL 0x1C16D6C
	0x035825DC MOV X22, X0
	0x035825E0 LDR X0, [X23]
	0x035825E4 ADD X1, X31, 0xC
	0x035825E8 STRB W25, [X31 + 0xC]
	0x035825EC BL 0x1C16E04
	0x035825F0 CBZ X22, 0x3582924
	0x035825F4 MOV X23, X0
	0x035825F8 CBZ X0, 0x3582610
	0x035825FC LDR X8, [X22]
	0x03582600 MOV X0, X23
	0x03582604 LDR X1, [X8 + 0x40]
	0x03582608 BL 0x1C16E00
	0x0358260C CBZ X0, 0x358292C
	0x03582610 LDR W8, [X22 + 0x18]
	0x03582614 CBZ W8, 0x3582928
	0x03582618 STR X23, [X22 + 0x20]
	0x0358261C CBZ X21, 0x3582924
	0x03582620 ADRP X24, 0xB76000
	0x03582624 ADRP X10, 0xBB4000
	0x03582628 LDR X8, [X21]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xE5E000
	006 Move X20, 0xB72000
	007 Move W8, [X21+3804]
	008 Move X20, [X20+1432]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xB72000
	015 Move X0, [X0+1432]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+3804], W8
	019 Move X0, [X20]
	020 Move X20, [X19+32]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move X0, X20
	026 Move X1, X31
	027 Move X2, X31
	028 Call Object.op_Inequality, X0, X1
	029 Move TEMP, X0
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfNotEqual {46}
	033 Move X8, [X19+32]
	034 Compare X8, 0
	035 JumpIfEqual {52}
	036 Move X0, [X8+72]
	037 Compare X0, 0
	038 JumpIfEqual {46}
	039 Move X20, [X31+16]
	040 Move X19, [X31+24]
	041 Move X1, X31
	042 Move X30, [X31+32]
	043 Move X21, [X31+40]
	044 Call LoadBalancingClient.get_IsConnected, X0
	045 Return X0
	046 Move X20, [X31+16]
	047 Move X19, [X31+24]
	048 Move W0, W31
	049 Move X30, [X31+32]
	050 Move X21, [X31+40]
	051 Return X0
	052 Call 0x1C17F20

Method: System.Void Start()

Disassembly:
	0x0358262C LDR X24, [X24 + 0x348]
	0x03582630 LDR X10, [X10 + 0x728]
	0x03582634 ADRP X26, 0xBB4000
	0x03582638 LDRH W9, [X8 + 0x12E]
	0x0358263C LDR X1, [X24]
	0x03582640 LDR X23, [X10]
	0x03582644 LDR X26, [X26 + 0x710]
	0x03582648 CBZ X9, 0x358266C
	0x0358264C LDR X10, [X8 + 0xB0]
	0x03582650 ADD X10, X10, 0x8
	0x03582654 LDUR X11, [X10 - 0x8]
	0x03582658 CMP X11, X1
	0x0358265C B.EQ 0x358267C
	0x03582660 SUBS X9, X9, 0x1
	0x03582664 ADD X10, X10, 0x10
	0x03582668 B.NE 0x3582654
	0x0358266C MOVZ W2, 0x1
	0x03582670 MOV X0, X21
	0x03582674 BL 0x1C5C788
	0x03582678 B 0x358268C
	0x0358267C LDR W9, [X10]
	0x03582680 ADD W9, W9, 0x1
	0x03582684 ADD X8, X8, W9, 0x4, SXTW
	0x03582688 ADD X0, X8, 0x138
	0x0358268C LDP X8, X4, [X0]
	0x03582690 MOVZ W1, 0x3
	0x03582694 MOV X0, X21
	0x03582698 MOV X2, X23
	0x0358269C MOV X3, X22
	0x035826A0 BLR X8
	0x035826A4 LDR X8, [X26]
	0x035826A8 LDR X8, [X8 + 0xB8]
	0x035826AC LDR X8, [X8]
	0x035826B0 CBZ X8, 0x35826C8
	0x035826B4 LDR X9, [X8 + 0x18]
	0x035826B8 LDR X0, [X8 + 0x40]
	0x035826BC LDR X2, [X8 + 0x28]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xE5E000
	006 Move X21, 0xBB5000
	007 Move W8, [X20+3805]
	008 Move X21, [X21+1728]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xBB5000
	015 Move X0, [X0+1728]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3805], W8
	019 Move X1, [X21]
	020 Move X0, X19
	021 Call 0x21A4894, X0
	022 Move [X19+32], X0
	023 Compare X0, 0
	024 JumpIfEqual {51}
	025 Move X0, [X0+72]
	026 Compare X0, 0
	027 JumpIfEqual {51}
	028 Move X1, X19
	029 Move X2, X31
	030 Call LoadBalancingClient.AddCallbackTarget, X0, X1
	031 Move W8, [X19+41]
	032 Compare W8, 0
	033 JumpIfEqual {46}
	034 Move X0, [X19+32]
	035 Compare X0, 0
	036 JumpIfEqual {51}
	037 Move X8, [X0]
	038 Move X20, [X31+16]
	039 Move X19, [X31+24]
	040 Move X1, X31
	041 Move X3, [X8+424]
	042 Move X2, [X8+432]
	043 Move X30, [X31+32]
	044 Move X21, [X31+40]
	045 CallNoReturn X3
	046 Move X20, [X31+16]
	047 Move X19, [X31+24]
	048 Move X30, [X31+32]
	049 Move X21, [X31+40]
	050 Return 
	051 Call 0x1C17F20

Method: System.Void OnDestroy()

Disassembly:
	0x035826E4 ADRP X8, 0xBB4000
	0x035826E8 LDR X8, [X8 + 0x118]
	0x035826EC MOV X0, X19
	0x035826F0 LDR X1, [X8]
	0x035826F4 BL 0x21A3894
	0x035826F8 ADRP X8, 0xB71000
	0x035826FC LDR X8, [X8 + 0x598]
	0x03582700 MOV X20, X0
	0x03582704 LDR X8, [X8]
	0x03582708 LDR W9, [X8 + 0xE0]

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+32]
	003 Compare X8, 0
	004 JumpIfEqual {13}
	005 Move X1, X0
	006 Move X0, [X8+72]
	007 Compare X0, 0
	008 JumpIfEqual {13}
	009 Move X2, X31
	010 Move X30, [X31+16]
	011 Call LoadBalancingClient.RemoveCallbackTarget, X0, X1
	012 Return 
	013 Call 0x1C17F20

Method: System.Void ConnectNow()

Disassembly:
	0x035826C0 AND W1, W20, 0x1
	0x035826C4 BLR X9
	0x035826C8 LDRB W8, [X19 + 0x29]
	0x035826CC CMP W8, W25
	0x035826D0 B.EQ 0x35828C8
	0x035826D4 STRB W25, [X19 + 0x29]
	0x035826D8 TBZ X20, 0x0, 0x35828C8
	0x035826DC LDRB W8, [X19 + 0x2A]
	0x035826E0 CBZ W8, 0x35828C8

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+32]
	003 Compare X0, 0
	004 JumpIfEqual {11}
	005 Move X8, [X0]
	006 Move X1, X31
	007 Move X3, [X8+424]
	008 Move X2, [X8+432]
	009 Move X30, [X31+16]
	010 CallNoReturn X3
	011 Call 0x1C17F20

Method: System.Void OnCreatedRoom()

Disassembly:
	0x0358270C CBNZ W9, 0x3582718

ISIL:
	001 Return 

Method: System.Void OnCreateRoomFailed(System.Int16 returnCode, System.String message)

Disassembly:
	0x03582710 MOV X0, X8
	0x03582714 BL 0x1C16DFC
	0x03582718 MOV X0, X20
	0x0358271C MOV X1, X31
	0x03582720 MOV X2, X31
	0x03582724 BL 0x3C354F8
	0x03582728 TBZ X0, 0x0, 0x35827EC
	0x0358272C CBZ X20, 0x3582924
	0x03582730 LDRB W8, [X20 + 0x89]
	0x03582734 CBNZ W8, 0x35828C8
	0x03582738 LDR X9, [X19 + 0x20]
	0x0358273C CBZ X9, 0x3582924
	0x03582740 ADRP X8, 0xB71000
	0x03582744 LDR X8, [X8 + 0x9C8]
	0x03582748 LDR X19, [X9 + 0x18]
	0x0358274C LDR X21, [X8]
	0x03582750 LDR X8, [X21 + 0x38]
	0x03582754 CBNZ X8, 0x3582764
	0x03582758 MOV X0, X21
	0x0358275C BL 0x1C5C6E0
	0x03582760 LDR X8, [X21 + 0x38]
	0x03582764 LDR X0, [X8 + 0x10]
	0x03582768 LDRB W8, [X0 + 0x135]
	0x0358276C TBNZ X8, 0x0, 0x3582774
	0x03582770 BL 0x1C5C684
	0x03582774 LDR W8, [X0 + 0xE0]
	0x03582778 CBNZ W8, 0x3582780
	0x0358277C BL 0x1C16DFC
	0x03582780 LDR X8, [X21 + 0x38]
	0x03582784 LDR X0, [X8 + 0x10]
	0x03582788 LDRB W8, [X0 + 0x135]
	0x0358278C TBNZ X8, 0x0, 0x3582794
	0x03582790 BL 0x1C5C684
	0x03582794 CBZ X19, 0x3582924
	0x03582798 ADRP X10, 0xBB4000
	0x0358279C LDR X9, [X0 + 0xB8]
	0x035827A0 LDR X8, [X19]
	0x035827A4 LDR X1, [X24]
	0x035827A8 LDR X10, [X10 + 0x720]
	0x035827AC LDR X21, [X9]
	0x035827B0 LDRH W9, [X8 + 0x12E]
	0x035827B4 LDR X22, [X10]
	0x035827B8 CBZ X9, 0x35827DC
	0x035827BC LDR X10, [X8 + 0xB0]
	0x035827C0 ADD X10, X10, 0x8
	0x035827C4 LDUR X11, [X10 - 0x8]
	0x035827C8 CMP X11, X1
	0x035827CC B.EQ 0x35828E0
	0x035827D0 SUBS X9, X9, 0x1
	0x035827D4 ADD X10, X10, 0x10
	0x035827D8 B.NE 0x35827C4
	0x035827DC MOVZ W2, 0x1
	0x035827E0 MOV X0, X19
	0x035827E4 BL 0x1C5C788
	0x035827E8 B 0x35828F0
	0x035827EC LDR X9, [X19 + 0x20]
	0x035827F0 CBZ X9, 0x3582924
	0x035827F4 ADRP X8, 0xB71000
	0x035827F8 LDR X8, [X8 + 0x9C8]
	0x035827FC LDR X19, [X9 + 0x18]
	0x03582800 LDR X20, [X8]
	0x03582804 LDR X8, [X20 + 0x38]
	0x03582808 CBNZ X8, 0x3582818
	0x0358280C MOV X0, X20
	0x03582810 BL 0x1C5C6E0
	0x03582814 LDR X8, [X20 + 0x38]
	0x03582818 LDR X0, [X8 + 0x10]
	0x0358281C LDRB W8, [X0 + 0x135]
	0x03582820 TBNZ X8, 0x0, 0x3582828
	0x03582824 BL 0x1C5C684
	0x03582828 LDR W8, [X0 + 0xE0]
	0x0358282C CBNZ W8, 0x3582834
	0x03582830 BL 0x1C16DFC
	0x03582834 LDR X8, [X20 + 0x38]
	0x03582838 LDR X0, [X8 + 0x10]
	0x0358283C LDRB W8, [X0 + 0x135]
	0x03582840 TBNZ X8, 0x0, 0x3582848
	0x03582844 BL 0x1C5C684

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0xE5E000
	009 Move X23, 0xB72000
	010 Move X22, 0xB76000
	011 Move W8, [X20+3806]
	012 Move X23, [X23+2512]
	013 Move X22, [X22+1576]
	014 Move X19, X2
	015 Move W21, W1
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {34}
	020 Move X0, 0xB72000
	021 Move X0, [X0+2600]
	022 Call 0x1C17CF4
	023 Move X0, 0xB76000
	024 Move X0, [X0+1576]
	025 Call 0x1C17CF4
	026 Move X0, 0xB72000
	027 Move X0, [X0+2512]
	028 Call 0x1C17CF4
	029 Move X0, 0xBB5000
	030 Move X0, [X0+1736]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X20+3806], W8
	034 Move X0, [X23]
	035 Move W1, 2
	036 Call 0x1C17D6C
	037 Move X20, X0
	038 Move X0, [X22]
	039 Add X1, X31, 12
	040 NotImplemented "Instruction STRH not yet implemented."
	041 Call 0x1C17E04
	042 Compare X20, 0
	043 JumpIfEqual {93}
	044 Move X21, X0
	045 Compare X0, 0
	046 JumpIfEqual {53}
	047 Move X8, [X20]
	048 Move X0, X21
	049 Move X1, [X8+64]
	050 Call 0x1C17E00
	051 Compare X0, 0
	052 JumpIfEqual {90}
	053 Move W8, [X20+24]
	054 Compare W8, 0
	055 JumpIfEqual {89}
	056 Move [X20+32], X21
	057 Compare X19, 0
	058 JumpIfEqual {66}
	059 Move X8, [X20]
	060 Move X0, X19
	061 Move X1, [X8+64]
	062 Call 0x1C17E00
	063 Compare X0, 0
	064 JumpIfEqual {90}
	065 Move W8, [X20+24]
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Move X8, 0xB72000
	068 Move X8, [X8+2600]
	069 Move [X20+40], X19
	070 Move X19, 0xBB5000
	071 Move X0, [X8]
	072 Move W8, [X0+224]
	073 Move X19, [X19+1736]
	074 Compare W8, 0
	075 JumpIfNotEqual {77}
	076 Call 0x1C17DFC
	077 Move X0, [X19]
	078 Move X1, X20
	079 Move X2, X31
	080 Call Debug.LogErrorFormat, X0, X1
	081 Move X20, [X31+48]
	082 Move X19, [X31+56]
	083 Move X22, [X31+32]
	084 Move X21, [X31+40]
	085 Move X30, [X31+16]
	086 Move X23, [X31+24]
	087 Add X31, X31, 64
	088 Return 
	089 Call 0x1C17F28
	090 Call 0x1C17F44
	091 Move X1, X31
	092 Call 0x1C17DEC
	093 Call 0x1C17F20

Method: System.Void OnFriendListUpdate(System.Collections.Generic.List`1<Photon.Realtime.FriendInfo> friendList)

Disassembly:
	0x03582848 CBZ X19, 0x3582924

ISIL:
	001 Return 

Method: System.Void OnJoinedRoom()

Disassembly:
	0x0358284C ADRP X10, 0xBB4000

ISIL:
	001 Return 

Method: System.Void OnJoinRandomFailed(System.Int16 returnCode, System.String message)

Disassembly:
	0x03582850 LDR X9, [X0 + 0xB8]
	0x03582854 LDR X8, [X19]
	0x03582858 LDR X1, [X24]
	0x0358285C LDR X10, [X10 + 0x718]
	0x03582860 LDR X20, [X9]
	0x03582864 LDRH W9, [X8 + 0x12E]
	0x03582868 LDR X21, [X10]
	0x0358286C CBZ X9, 0x3582890
	0x03582870 LDR X10, [X8 + 0xB0]
	0x03582874 ADD X10, X10, 0x8
	0x03582878 LDUR X11, [X10 - 0x8]
	0x0358287C CMP X11, X1
	0x03582880 B.EQ 0x35828A0
	0x03582884 SUBS X9, X9, 0x1
	0x03582888 ADD X10, X10, 0x10
	0x0358288C B.NE 0x3582878
	0x03582890 MOVZ W2, 0x1
	0x03582894 MOV X0, X19
	0x03582898 BL 0x1C5C788
	0x0358289C B 0x35828B0
	0x035828A0 LDR W9, [X10]
	0x035828A4 ADD W9, W9, 0x1
	0x035828A8 ADD X8, X8, W9, 0x4, SXTW
	0x035828AC ADD X0, X8, 0x138
	0x035828B0 LDP X8, X4, [X0]
	0x035828B4 MOVZ W1, 0x3
	0x035828B8 MOV X0, X19
	0x035828BC MOV X2, X21
	0x035828C0 MOV X3, X20
	0x035828C4 BLR X8
	0x035828C8 LDP X20, X19, [X31 + 0x40]
	0x035828CC LDP X22, X21, [X31 + 0x30]
	0x035828D0 LDP X24, X23, [X31 + 0x20]
	0x035828D4 LDP X26, X25, [X31 + 0x10]
	0x035828D8 LDR X30, [X31], #0x50
	0x035828DC RET
	0x035828E0 LDR W9, [X10]
	0x035828E4 ADD W9, W9, 0x1
	0x035828E8 ADD X8, X8, W9, 0x4, SXTW
	0x035828EC ADD X0, X8, 0x138
	0x035828F0 LDP X8, X4, [X0]
	0x035828F4 MOVZ W1, 0x3
	0x035828F8 MOV X0, X19
	0x035828FC MOV X2, X22
	0x03582900 MOV X3, X21
	0x03582904 BLR X8
	0x03582908 LDRB W8, [X20 + 0x89]
	0x0358290C CMP W8, 0x1
	0x03582910 B.EQ 0x35828C8
	0x03582914 MOVZ W8, 0x1
	0x03582918 STRB W8, [X20 + 0x89]
	0x0358291C STR W8, [X20 + 0xDC]
	0x03582920 B 0x35828C8
	0x03582924 BL 0x1C16F20
	0x03582928 BL 0x1C16F28
	0x0358292C BL 0x1C16F44
	0x03582930 MOV X1, X31
	0x03582934 BL 0x1C16DEC
	0x03582938 STP X30, X19, [X31 - 0x10]!
	0x0358293C MOV X19, X0
	0x03582940 BL 0x35738F8
	0x03582944 MOV X0, X19
	0x03582948 LDP X30, X19, [X31], #0x10
	0x0358294C B 0x3582950
	0x03582950 STP X30, X23, [X31 - 0x30]!
	0x03582954 STP X22, X21, [X31 + 0x10]
	0x03582958 STP X20, X19, [X31 + 0x20]
	0x0358295C ADRP X20, 0xE5D000
	0x03582960 ADRP X23, 0xB71000
	0x03582964 LDRB W8, [X20 + 0xEE8]
	0x03582968 LDR X23, [X23 + 0xD50]
	0x0358296C MOV X19, X0
	0x03582970 TBNZ X8, 0x0, 0x35829E8
	0x03582974 ADRP X0, 0xB72000
	0x03582978 LDR X0, [X0 + 0xE68]
	0x0358297C BL 0x1C16CF4
	0x03582980 ADRP X0, 0xB71000
	0x03582984 LDR X0, [X0 + 0x9C8]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0xE5E000
	009 Move X23, 0xB72000
	010 Move X22, 0xB76000
	011 Move W8, [X20+3807]
	012 Move X23, [X23+2512]
	013 Move X22, [X22+1576]
	014 Move X19, X2
	015 Move W21, W1
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {34}
	020 Move X0, 0xB72000
	021 Move X0, [X0+2600]
	022 Call 0x1C17CF4
	023 Move X0, 0xB76000
	024 Move X0, [X0+1576]
	025 Call 0x1C17CF4
	026 Move X0, 0xB72000
	027 Move X0, [X0+2512]
	028 Call 0x1C17CF4
	029 Move X0, 0xBB5000
	030 Move X0, [X0+1744]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X20+3807], W8
	034 Move X0, [X23]
	035 Move W1, 2
	036 Call 0x1C17D6C
	037 Move X20, X0
	038 Move X0, [X22]
	039 Add X1, X31, 12
	040 NotImplemented "Instruction STRH not yet implemented."
	041 Call 0x1C17E04
	042 Compare X20, 0
	043 JumpIfEqual {93}
	044 Move X21, X0
	045 Compare X0, 0
	046 JumpIfEqual {53}
	047 Move X8, [X20]
	048 Move X0, X21
	049 Move X1, [X8+64]
	050 Call 0x1C17E00
	051 Compare X0, 0
	052 JumpIfEqual {90}
	053 Move W8, [X20+24]
	054 Compare W8, 0
	055 JumpIfEqual {89}
	056 Move [X20+32], X21
	057 Compare X19, 0
	058 JumpIfEqual {66}
	059 Move X8, [X20]
	060 Move X0, X19
	061 Move X1, [X8+64]
	062 Call 0x1C17E00
	063 Compare X0, 0
	064 JumpIfEqual {90}
	065 Move W8, [X20+24]
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Move X8, 0xB72000
	068 Move X8, [X8+2600]
	069 Move [X20+40], X19
	070 Move X19, 0xBB5000
	071 Move X0, [X8]
	072 Move W8, [X0+224]
	073 Move X19, [X19+1744]
	074 Compare W8, 0
	075 JumpIfNotEqual {77}
	076 Call 0x1C17DFC
	077 Move X0, [X19]
	078 Move X1, X20
	079 Move X2, X31
	080 Call Debug.LogErrorFormat, X0, X1
	081 Move X20, [X31+48]
	082 Move X19, [X31+56]
	083 Move X22, [X31+32]
	084 Move X21, [X31+40]
	085 Move X30, [X31+16]
	086 Move X23, [X31+24]
	087 Add X31, X31, 64
	088 Return 
	089 Call 0x1C17F28
	090 Call 0x1C17F44
	091 Move X1, X31
	092 Call 0x1C17DEC
	093 Call 0x1C17F20

Method: System.Void OnJoinRoomFailed(System.Int16 returnCode, System.String message)

Disassembly:
	0x03582988 BL 0x1C16CF4
	0x0358298C ADRP X0, 0xB76000
	0x03582990 LDR X0, [X0 + 0x348]
	0x03582994 BL 0x1C16CF4
	0x03582998 ADRP X0, 0xBB4000
	0x0358299C LDR X0, [X0 + 0x730]
	0x035829A0 BL 0x1C16CF4
	0x035829A4 ADRP X0, 0xBB4000
	0x035829A8 LDR X0, [X0 + 0x738]
	0x035829AC BL 0x1C16CF4
	0x035829B0 ADRP X0, 0xBB4000
	0x035829B4 LDR X0, [X0 + 0x740]
	0x035829B8 BL 0x1C16CF4
	0x035829BC ADRP X0, 0xBB4000
	0x035829C0 LDR X0, [X0 + 0x748]
	0x035829C4 BL 0x1C16CF4
	0x035829C8 ADRP X0, 0xB71000
	0x035829CC LDR X0, [X0 + 0xD50]
	0x035829D0 BL 0x1C16CF4
	0x035829D4 ADRP X0, 0xBB4000
	0x035829D8 LDR X0, [X0 + 0x750]
	0x035829DC BL 0x1C16CF4
	0x035829E0 MOVZ W8, 0x1
	0x035829E4 STRB W8, [X20 + 0xEE8]
	0x035829E8 LDR X0, [X23]
	0x035829EC MOV X1, X31
	0x035829F0 BL 0x3BF5904
	0x035829F4 TBZ X0, 0x0, 0x3582A10
	0x035829F8 MOV X0, X19
	0x035829FC LDP X20, X19, [X31 + 0x20]
	0x03582A00 LDP X22, X21, [X31 + 0x10]
	0x03582A04 MOVZ W1, 0x1
	0x03582A08 LDP X30, X23, [X31], #0x30
	0x03582A0C B 0x3582508
	0x03582A10 LDR X9, [X19 + 0x20]
	0x03582A14 CBZ X9, 0x3582BE0
	0x03582A18 ADRP X8, 0xB71000
	0x03582A1C LDR X8, [X8 + 0x9C8]
	0x03582A20 LDR X20, [X9 + 0x18]
	0x03582A24 LDR X21, [X8]
	0x03582A28 LDR X8, [X21 + 0x38]
	0x03582A2C CBNZ X8, 0x3582A3C
	0x03582A30 MOV X0, X21
	0x03582A34 BL 0x1C5C6E0
	0x03582A38 LDR X8, [X21 + 0x38]
	0x03582A3C LDR X0, [X8 + 0x10]
	0x03582A40 LDRB W8, [X0 + 0x135]
	0x03582A44 TBNZ X8, 0x0, 0x3582A4C
	0x03582A48 BL 0x1C5C684
	0x03582A4C LDR W8, [X0 + 0xE0]
	0x03582A50 CBNZ W8, 0x3582A58
	0x03582A54 BL 0x1C16DFC
	0x03582A58 LDR X8, [X21 + 0x38]
	0x03582A5C LDR X0, [X8 + 0x10]
	0x03582A60 LDRB W8, [X0 + 0x135]
	0x03582A64 TBNZ X8, 0x0, 0x3582A6C
	0x03582A68 BL 0x1C5C684
	0x03582A6C CBZ X20, 0x3582BE0
	0x03582A70 ADRP X10, 0xB76000
	0x03582A74 ADRP X11, 0xBB4000
	0x03582A78 LDR X9, [X0 + 0xB8]
	0x03582A7C LDR X10, [X10 + 0x348]
	0x03582A80 LDR X8, [X20]
	0x03582A84 LDR X11, [X11 + 0x750]
	0x03582A88 LDR X21, [X9]
	0x03582A8C LDR X1, [X10]
	0x03582A90 LDRH W9, [X8 + 0x12E]
	0x03582A94 LDR X22, [X11]
	0x03582A98 CBZ X9, 0x3582ABC
	0x03582A9C LDR X10, [X8 + 0xB0]
	0x03582AA0 ADD X10, X10, 0x8
	0x03582AA4 LDUR X11, [X10 - 0x8]
	0x03582AA8 CMP X11, X1
	0x03582AAC B.EQ 0x3582ACC
	0x03582AB0 SUBS X9, X9, 0x1
	0x03582AB4 ADD X10, X10, 0x10
	0x03582AB8 B.NE 0x3582AA4
	0x03582ABC MOVZ W2, 0x1
	0x03582AC0 MOV X0, X20
	0x03582AC4 BL 0x1C5C788
	0x03582AC8 B 0x3582ADC
	0x03582ACC LDR W9, [X10]
	0x03582AD0 ADD W9, W9, 0x1
	0x03582AD4 ADD X8, X8, W9, 0x4, SXTW
	0x03582AD8 ADD X0, X8, 0x138
	0x03582ADC LDP X8, X4, [X0]
	0x03582AE0 MOVZ W1, 0x3
	0x03582AE4 MOV X0, X20
	0x03582AE8 MOV X2, X22
	0x03582AEC MOV X3, X21

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0xE5E000
	009 Move X23, 0xB72000
	010 Move W8, [X20+3808]
	011 Move X23, [X23+2512]
	012 Move X19, X2
	013 Move W21, W1
	014 Move X22, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {33}
	019 Move X0, 0xB72000
	020 Move X0, [X0+2600]
	021 Call 0x1C17CF4
	022 Move X0, 0xB76000
	023 Move X0, [X0+1576]
	024 Call 0x1C17CF4
	025 Move X0, 0xB72000
	026 Move X0, [X0+2512]
	027 Call 0x1C17CF4
	028 Move X0, 0xBB5000
	029 Move X0, [X0+1752]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X20+3808], W8
	033 Move X0, [X23]
	034 Move W1, 3
	035 Call 0x1C17D6C
	036 Compare X0, 0
	037 JumpIfEqual {106}
	038 Move X22, [X22+48]
	039 Move X20, X0
	040 Compare X22, 0
	041 JumpIfEqual {48}
	042 Move X8, [X20]
	043 Move X0, X22
	044 Move X1, [X8+64]
	045 Call 0x1C17E00
	046 Compare X0, 0
	047 JumpIfEqual {103}
	048 Move W8, [X20+24]
	049 Compare W8, 0
	050 JumpIfEqual {102}
	051 Move X8, 0xB76000
	052 Move X8, [X8+1576]
	053 Move [X20+32], X22
	054 Add X1, X31, 12
	055 NotImplemented "Instruction STRH not yet implemented."
	056 Move X0, [X8]
	057 Call 0x1C17E04
	058 Move X21, X0
	059 Compare X0, 0
	060 JumpIfEqual {67}
	061 Move X8, [X20]
	062 Move X0, X21
	063 Move X1, [X8+64]
	064 Call 0x1C17E00
	065 Compare X0, 0
	066 JumpIfEqual {103}
	067 Move W8, [X20+24]
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Move [X20+40], X21
	070 Compare X19, 0
	071 JumpIfEqual {79}
	072 Move X8, [X20]
	073 Move X0, X19
	074 Move X1, [X8+64]
	075 Call 0x1C17E00
	076 Compare X0, 0
	077 JumpIfEqual {103}
	078 Move W8, [X20+24]
	079 NotImplemented "Instruction CMP not yet implemented."
	080 Move X8, 0xB72000
	081 Move X8, [X8+2600]
	082 Move [X20+48], X19
	083 Move X19, 0xBB5000
	084 Move X0, [X8]
	085 Move W8, [X0+224]
	086 Move X19, [X19+1752]
	087 Compare W8, 0
	088 JumpIfNotEqual {90}
	089 Call 0x1C17DFC
	090 Move X0, [X19]
	091 Move X1, X20
	092 Move X2, X31
	093 Call Debug.LogErrorFormat, X0, X1
	094 Move X20, [X31+48]
	095 Move X19, [X31+56]
	096 Move X22, [X31+32]
	097 Move X21, [X31+40]
	098 Move X30, [X31+16]
	099 Move X23, [X31+24]
	100 Add X31, X31, 64
	101 Return 
	102 Call 0x1C17F28
	103 Call 0x1C17F44
	104 Move X1, X31
	105 Call 0x1C17DEC
	106 Call 0x1C17F20

Method: System.Void OnLeftRoom()

Disassembly:
	0x03582AF0 BLR X8

ISIL:
	001 Return 

Method: System.Void OnConnected()

Disassembly:
	0x03582AF4 ADRP X8, 0xBB4000

ISIL:
	001 Return 

Method: System.Void OnConnectedToMaster()

Disassembly:
	0x03582AF8 LDR X8, [X8 + 0x748]
	0x03582AFC LDR X0, [X8]
	0x03582B00 BL 0x1C16F10
	0x03582B04 MOV X1, X31
	0x03582B08 MOV X20, X0
	0x03582B0C BL 0x3BF578C
	0x03582B10 ADRP X22, 0xB72000
	0x03582B14 LDR X22, [X22 + 0xE68]
	0x03582B18 LDR X0, [X22]
	0x03582B1C BL 0x1C16F10
	0x03582B20 ADRP X8, 0xBB4000
	0x03582B24 LDR X8, [X8 + 0x738]
	0x03582B28 MOV X1, X19
	0x03582B2C MOV X3, X31
	0x03582B30 MOV X21, X0
	0x03582B34 LDR X2, [X8]
	0x03582B38 BL 0x2A6B948
	0x03582B3C CBZ X20, 0x3582BE0
	0x03582B40 MOV X0, X20
	0x03582B44 MOV X1, X21
	0x03582B48 MOV X2, X31
	0x03582B4C BL 0x3BF54CC
	0x03582B50 LDR X0, [X22]
	0x03582B54 BL 0x1C16F10
	0x03582B58 ADRP X8, 0xBB4000
	0x03582B5C LDR X8, [X8 + 0x740]
	0x03582B60 MOV X1, X19
	0x03582B64 MOV X3, X31
	0x03582B68 MOV X21, X0
	0x03582B6C LDR X2, [X8]
	0x03582B70 BL 0x2A6B948
	0x03582B74 MOV X0, X20
	0x03582B78 MOV X1, X21
	0x03582B7C MOV X2, X31
	0x03582B80 BL 0x3BF536C
	0x03582B84 LDR X0, [X22]
	0x03582B88 BL 0x1C16F10
	0x03582B8C ADRP X8, 0xBB4000
	0x03582B90 LDR X8, [X8 + 0x730]
	0x03582B94 MOV X1, X19
	0x03582B98 MOV X3, X31
	0x03582B9C MOV X21, X0
	0x03582BA0 LDR X2, [X8]
	0x03582BA4 BL 0x2A6B948
	0x03582BA8 MOV X0, X20
	0x03582BAC MOV X1, X21
	0x03582BB0 MOV X2, X31
	0x03582BB4 BL 0x3BF562C
	0x03582BB8 LDR X0, [X23]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xE5E000
	006 Move W8, [X20+3809]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xBB3000
	013 Move X0, [X0+3272]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+3809], W8
	017 Move X1, [X19+56]
	018 Compare X1, 0
	019 JumpIfEqual {67}
	020 Move X8, [X1+24]
	021 Compare X8, 0
	022 JumpIfEqual {67}
	023 Move W9, [X19+42]
	024 Move [X8+66], W9
	025 Move W8, [X19+40]
	026 Compare W8, 0
	027 JumpIfEqual {52}
	028 Move [X1+16], X31
	029 Move X8, [X19+32]
	030 Compare X8, 0
	031 JumpIfEqual {67}
	032 Move X9, 0xBB3000
	033 Move X9, [X9+3272]
	034 Move X20, [X8+72]
	035 Move X0, [X9]
	036 Call 0x1C17F10
	037 Move X1, X31
	038 Move X21, X0
	039 Call OpJoinRandomRoomParams..ctor, X0
	040 Compare X20, 0
	041 JumpIfEqual {67}
	042 Move X2, [X19+56]
	043 Move X0, X20
	044 Move X20, [X31+16]
	045 Move X19, [X31+24]
	046 Move X1, X21
	047 Move X3, X31
	048 Move X30, [X31+32]
	049 Move X21, [X31+40]
	050 Call LoadBalancingClient.OpJoinRandomOrCreateRoom, X0, X1, X2
	051 Return 
	052 Move X8, [X19+48]
	053 Move [X1+16], X8
	054 Move X8, [X19+32]
	055 Compare X8, 0
	056 JumpIfEqual {67}
	057 Move X0, [X8+72]
	058 Compare X0, 0
	059 JumpIfEqual {67}
	060 Move X20, [X31+16]
	061 Move X19, [X31+24]
	062 Move X2, X31
	063 Move X30, [X31+32]
	064 Move X21, [X31+40]
	065 Call LoadBalancingClient.OpJoinOrCreateRoom, X0, X1
	066 Return 
	067 Call 0x1C17F20

Method: System.Void OnDisconnected(Photon.Realtime.DisconnectCause cause)

Disassembly:
	0x03582BBC MOV X1, X20
	0x03582BC0 MOV X2, X31
	0x03582BC4 BL 0x3BF5BD4
	0x03582BC8 MOVZ W8, 0x1
	0x03582BCC STRB W8, [X19 + 0x28]
	0x03582BD0 LDP X20, X19, [X31 + 0x20]
	0x03582BD4 LDP X22, X21, [X31 + 0x10]
	0x03582BD8 LDP X30, X23, [X31], #0x30
	0x03582BDC RET
	0x03582BE0 BL 0x1C16F20
	0x03582BE4 STP X30, X21, [X31 - 0x20]!
	0x03582BE8 STP X20, X19, [X31 + 0x10]
	0x03582BEC ADRP X21, 0xE5D000
	0x03582BF0 LDRB W8, [X21 + 0xEE9]
	0x03582BF4 MOV X20, X1
	0x03582BF8 MOV X19, X0
	0x03582BFC TBNZ X8, 0x0, 0x3582C2C
	0x03582C00 ADRP X0, 0xB71000
	0x03582C04 LDR X0, [X0 + 0x9C8]
	0x03582C08 BL 0x1C16CF4
	0x03582C0C ADRP X0, 0xB76000
	0x03582C10 LDR X0, [X0 + 0x348]
	0x03582C14 BL 0x1C16CF4
	0x03582C18 ADRP X0, 0xBB4000
	0x03582C1C LDR X0, [X0 + 0x758]
	0x03582C20 BL 0x1C16CF4
	0x03582C24 MOVZ W8, 0x1
	0x03582C28 STRB W8, [X21 + 0xEE9]
	0x03582C2C MOV X0, X19
	0x03582C30 MOV W1, W31
	0x03582C34 STRB W31, [X19 + 0x28]
	0x03582C38 BL 0x3582508
	0x03582C3C LDR X8, [X19 + 0x20]
	0x03582C40 CBZ X8, 0x3582D38
	0x03582C44 ADRP X9, 0xBB4000
	0x03582C48 LDR X9, [X9 + 0x758]
	0x03582C4C ADRP X21, 0xB71000
	0x03582C50 LDR X19, [X8 + 0x18]
	0x03582C54 MOV X0, X20
	0x03582C58 LDR X1, [X9]
	0x03582C5C LDR X21, [X21 + 0x9C8]
	0x03582C60 MOV X2, X31
	0x03582C64 BL 0x321B938
	0x03582C68 LDR X21, [X21]
	0x03582C6C MOV X20, X0
	0x03582C70 LDR X8, [X21 + 0x38]
	0x03582C74 CBNZ X8, 0x3582C84
	0x03582C78 MOV X0, X21
	0x03582C7C BL 0x1C5C6E0
	0x03582C80 LDR X8, [X21 + 0x38]
	0x03582C84 LDR X0, [X8 + 0x10]
	0x03582C88 LDRB W8, [X0 + 0x135]
	0x03582C8C TBNZ X8, 0x0, 0x3582C94
	0x03582C90 BL 0x1C5C684
	0x03582C94 LDR W8, [X0 + 0xE0]
	0x03582C98 CBNZ W8, 0x3582CA0
	0x03582C9C BL 0x1C16DFC
	0x03582CA0 LDR X8, [X21 + 0x38]
	0x03582CA4 LDR X0, [X8 + 0x10]
	0x03582CA8 LDRB W8, [X0 + 0x135]
	0x03582CAC TBNZ X8, 0x0, 0x3582CB4
	0x03582CB0 BL 0x1C5C684
	0x03582CB4 CBZ X19, 0x3582D38
	0x03582CB8 ADRP X10, 0xB76000
	0x03582CBC LDR X9, [X0 + 0xB8]
	0x03582CC0 LDR X8, [X19]
	0x03582CC4 LDR X10, [X10 + 0x348]
	0x03582CC8 LDR X21, [X9]
	0x03582CCC LDRH W9, [X8 + 0x12E]
	0x03582CD0 LDR X1, [X10]
	0x03582CD4 CBZ X9, 0x3582CF8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0xE5E000
	005 Move W8, [X19+3810]
	006 Move W20, W1
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {25}
	011 Move X0, 0xB72000
	012 Move X0, [X0+2600]
	013 Call 0x1C17CF4
	014 Move X0, 0xBB3000
	015 Move X0, [X0+2904]
	016 Call 0x1C17CF4
	017 Move X0, 0xB72000
	018 Move X0, [X0+2512]
	019 Call 0x1C17CF4
	020 Move X0, 0xBB5000
	021 Move X0, [X0+1760]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X19+3810], W8
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move W8, 1
	027 Move W9, 1
	028 NotImplemented "Instruction LSLV not yet implemented."
	029 NotImplemented "Instruction MOVK not yet implemented."
	030 And W31, W8, W9
	031 Move X8, 0xB72000
	032 Move X8, [X8+2512]
	033 Move W1, 1
	034 Move X0, [X8]
	035 Call 0x1C17D6C
	036 Move X8, 0xBB3000
	037 Move X8, [X8+2904]
	038 Move X19, X0
	039 Add X1, X31, 12
	040 Move [X31+12], W20
	041 Move X0, [X8]
	042 Call 0x1C17E04
	043 Compare X19, 0
	044 JumpIfEqual {75}
	045 Move X20, X0
	046 Compare X0, 0
	047 JumpIfEqual {54}
	048 Move X8, [X19]
	049 Move X0, X20
	050 Move X1, [X8+64]
	051 Call 0x1C17E00
	052 Compare X0, 0
	053 JumpIfEqual {77}
	054 Move W8, [X19+24]
	055 Compare W8, 0
	056 JumpIfEqual {76}
	057 Move [X19+32], X20
	058 Move X8, 0xB72000
	059 Move X8, [X8+2600]
	060 Move X0, [X8]
	061 Move W8, [X0+224]
	062 Compare W8, 0
	063 JumpIfNotEqual {65}
	064 Call 0x1C17DFC
	065 Move X8, 0xBB5000
	066 Move X8, [X8+1760]
	067 Move X1, X19
	068 Move X2, X31
	069 Move X0, [X8]
	070 Call Debug.LogErrorFormat, X0, X1
	071 Move X20, [X31+16]
	072 Move X19, [X31+24]
	073 Move X30, [X31+32]
	074 Return 
	075 Call 0x1C17F20
	076 Call 0x1C17F28
	077 Call 0x1C17F44
	078 Move X1, X31
	079 Call 0x1C17DEC

Method: System.Void OnRegionListReceived(Photon.Realtime.RegionHandler regionHandler)

Disassembly:
	0x03582CD8 LDR X10, [X8 + 0xB0]

ISIL:
	001 Return 

Method: System.Void OnCustomAuthenticationResponse(System.Collections.Generic.Dictionary`2<System.String, System.Object> data)

Disassembly:
	0x03582CDC ADD X10, X10, 0x8

ISIL:
	001 Return 

Method: System.Void OnCustomAuthenticationFailed(System.String debugMessage)

Disassembly:
	0x03582CE0 LDUR X11, [X10 - 0x8]

ISIL:
	001 Return 

Method: System.Void .ctor()

Disassembly:
	0x03582CE4 CMP X11, X1
	0x03582CE8 B.EQ 0x3582D08
	0x03582CEC SUBS X9, X9, 0x1
	0x03582CF0 ADD X10, X10, 0x10
	0x03582CF4 B.NE 0x3582CE0
	0x03582CF8 MOVZ W2, 0x1
	0x03582CFC MOV X0, X19
	0x03582D00 BL 0x1C5C788
	0x03582D04 B 0x3582D18
	0x03582D08 LDR W9, [X10]
	0x03582D0C ADD W9, W9, 0x1
	0x03582D10 ADD X8, X8, W9, 0x4, SXTW
	0x03582D14 ADD X0, X8, 0x138
	0x03582D18 LDP X5, X4, [X0]
	0x03582D1C MOV X0, X19
	0x03582D20 MOV X2, X20
	0x03582D24 LDP X20, X19, [X31 + 0x10]
	0x03582D28 MOVZ W1, 0x3
	0x03582D2C MOV X3, X21
	0x03582D30 LDP X30, X21, [X31], #0x20
	0x03582D34 BR X5
	0x03582D38 BL 0x1C16F20
	0x03582D3C STP X30, X21, [X31 - 0x20]!
	0x03582D40 STP X20, X19, [X31 + 0x10]
	0x03582D44 ADRP X21, 0xE5D000
	0x03582D48 LDRB W8, [X21 + 0xEEA]
	0x03582D4C MOV X20, X1
	0x03582D50 MOV X19, X0
	0x03582D54 TBNZ X8, 0x0, 0x3582D84
	0x03582D58 ADRP X0, 0xB71000
	0x03582D5C LDR X0, [X0 + 0x9C8]
	0x03582D60 BL 0x1C16CF4
	0x03582D64 ADRP X0, 0xB76000
	0x03582D68 LDR X0, [X0 + 0x348]
	0x03582D6C BL 0x1C16CF4
	0x03582D70 ADRP X0, 0xBB4000
	0x03582D74 LDR X0, [X0 + 0x760]
	0x03582D78 BL 0x1C16CF4
	0x03582D7C MOVZ W8, 0x1
	0x03582D80 STRB W8, [X21 + 0xEEA]
	0x03582D84 MOVZ W1, 0x1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xE5E000
	007 Move X20, 0xBB3000
	008 Move X21, 0xBB3000
	009 Move W8, [X22+3811]
	010 Move X20, [X20+3264]
	011 Move X21, [X21+4008]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0xBB3000
	018 Move X0, [X0+3264]
	019 Call 0x1C17CF4
	020 Move X0, 0xBB3000
	021 Move X0, [X0+4008]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X22+3811], W8
	025 Move W8, 257
	026 NotImplemented "Instruction STRH not yet implemented."
	027 Move X0, [X20]
	028 Call 0x1C17F10
	029 Move X1, X31
	030 Move X20, X0
	031 Call EnterRoomParams..ctor, X0
	032 Move X0, [X21]
	033 Call 0x1C17F10
	034 Move X1, X31
	035 Move X21, X0
	036 Call RoomOptions..ctor, X0
	037 Compare X20, 0
	038 JumpIfEqual {50}
	039 Move [X20+24], X21
	040 Move [X19+56], X20
	041 Move X0, X19
	042 Move X20, [X31+32]
	043 Move X19, [X31+40]
	044 Move X22, [X31+16]
	045 Move X21, [X31+24]
	046 Move X1, X31
	047 Move X30, [X31+48]
	048 Call MonoBehaviour..ctor, X0
	049 Return 
	050 Call 0x1C17F20

