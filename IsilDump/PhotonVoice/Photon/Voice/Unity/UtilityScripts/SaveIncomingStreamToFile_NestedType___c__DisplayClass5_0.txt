Type: Photon.Voice.Unity.UtilityScripts.SaveIncomingStreamToFile/<>c__DisplayClass5_0

Method: System.Void .ctor()

Disassembly:
	0x035868B0 BL 0x1C16CF4
	0x035868B4 ADRP X0, 0xBB0000

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Void <OnRemoteVoiceAdded>b__0(Photon.Voice.FrameOut`1<System.Single> f)

Disassembly:
	0x03586BDC BL 0x1C16D08
	0x03586BE0 BL 0x1C16F10
	0x03586BE4 MOV X19, X0
	0x03586BE8 ADRP X0, 0xBB0000
	0x03586BEC LDR X0, [X0 + 0x910]
	0x03586BF0 BL 0x1C16D08
	0x03586BF4 MOV X20, X0
	0x03586BF8 ADRP X0, 0xB9C000
	0x03586BFC LDR X0, [X0 + 0xD38]
	0x03586C00 BL 0x1C16D08
	0x03586C04 MOV X2, X0
	0x03586C08 MOV X0, X19
	0x03586C0C MOV X1, X20
	0x03586C10 MOV X3, X31
	0x03586C14 BL 0x330E16C
	0x03586C18 ADRP X0, 0xBB0000
	0x03586C1C LDR X0, [X0 + 0x918]
	0x03586C20 BL 0x1C16D08
	0x03586C24 MOV X1, X0
	0x03586C28 MOV X0, X19
	0x03586C2C BL 0x1C16DEC
	0x03586C30 STR X30, [X31 - 0x40]!
	0x03586C34 STP X24, X23, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xE5A000
	006 Move W8, [X21+3832]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xB73000
	014 Move X0, [X0+1088]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+3832], W8
	018 Compare X20, 0
	019 JumpIfEqual {32}
	020 Move X1, [X20+16]
	021 Compare X1, 0
	022 JumpIfEqual {32}
	023 Move X0, [X19+16]
	024 Compare X0, 0
	025 JumpIfEqual {32}
	026 Move W3, [X1+24]
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move W2, W31
	030 Move X30, [X31+32]
	031 Move X21, [X31+40]
	032 Call 0x1C17F20

Method: System.Void <OnRemoteVoiceAdded>b__1()

Disassembly:
	0x03586CAC BLR X9
	0x03586CB0 LDR X8, [X19 + 0x20]
	0x03586CB4 CBZ X8, 0x3586F54
	0x03586CB8 LDR X9, [X8]
	0x03586CBC LDR X1, [X19 + 0x10]
	0x03586CC0 MOV X20, X0
	0x03586CC4 MOV X0, X8
	0x03586CC8 LDR X10, [X9 + 0x208]
	0x03586CCC LDR X2, [X9 + 0x210]
	0x03586CD0 BLR X10
	0x03586CD4 LDP W8, W22, [X19 + 0x34]
	0x03586CD8 LDR W23, [X19 + 0x30]
	0x03586CDC LDR X21, [X19 + 0x28]
	0x03586CE0 MOV X0, X31
	0x03586CE4 ADD W9, W8, 0x7
	0x03586CE8 CMP W8, 0x0
	0x03586CEC CSEL W24, W9, W8, LT
	0x03586CF0 BL 0x3241948
	0x03586CF4 CBZ X0, 0x3586F54
	0x03586CF8 ADRP X9, 0xBB0000
	0x03586CFC LDR X8, [X0]
	0x03586D00 LDR X9, [X9 + 0x920]
	0x03586D04 LDR X2, [X8 + 0x270]
	0x03586D08 LDR X1, [X9]
	0x03586D0C LDR X9, [X8 + 0x268]
	0x03586D10 BLR X9
	0x03586D14 CBZ X21, 0x3586F54
	0x03586D18 LDR X8, [X21]
	0x03586D1C MOV X1, X0
	0x03586D20 MOV X0, X21
	0x03586D24 LDP X9, X2, [X8 + 0x1D8]
	0x03586D28 BLR X9
	0x03586D2C LDR X0, [X19 + 0x20]
	0x03586D30 CBZ X0, 0x3586F54
	0x03586D34 LDR X8, [X0]
	0x03586D38 LDR X21, [X19 + 0x28]
	0x03586D3C LDP X9, X1, [X8 + 0x1E8]
	0x03586D40 BLR X9
	0x03586D44 CBZ X21, 0x3586F54
	0x03586D48 LDR X8, [X21]
	0x03586D4C SUB W1, W0, 0x8
	0x03586D50 MOV X0, X21
	0x03586D54 LDR X9, [X8 + 0x248]
	0x03586D58 LDR X2, [X8 + 0x250]
	0x03586D5C BLR X9
	0x03586D60 LDR X21, [X19 + 0x28]
	0x03586D64 MOV X0, X31
	0x03586D68 BL 0x3241948
	0x03586D6C CBZ X0, 0x3586F54
	0x03586D70 ADRP X9, 0xBB0000
	0x03586D74 LDR X8, [X0]
	0x03586D78 LDR X9, [X9 + 0x928]
	0x03586D7C LDR X2, [X8 + 0x270]
	0x03586D80 LDR X1, [X9]
	0x03586D84 LDR X9, [X8 + 0x268]
	0x03586D88 BLR X9
	0x03586D8C CBZ X21, 0x3586F54
	0x03586D90 LDR X8, [X21]
	0x03586D94 MOV X1, X0
	0x03586D98 MOV X0, X21
	0x03586D9C LDP X9, X2, [X8 + 0x1D8]
	0x03586DA0 BLR X9
	0x03586DA4 LDR X21, [X19 + 0x28]
	0x03586DA8 MOV X0, X31
	0x03586DAC BL 0x3241948
	0x03586DB0 CBZ X0, 0x3586F54
	0x03586DB4 ADRP X9, 0xBB0000
	0x03586DB8 LDR X8, [X0]
	0x03586DBC LDR X9, [X9 + 0x930]
	0x03586DC0 LDR X2, [X8 + 0x270]
	0x03586DC4 LDR X1, [X9]
	0x03586DC8 LDR X9, [X8 + 0x268]
	0x03586DCC BLR X9
	0x03586DD0 CBZ X21, 0x3586F54
	0x03586DD4 LDR X8, [X21]
	0x03586DD8 MOV X1, X0
	0x03586DDC MOV X0, X21
	0x03586DE0 LDP X9, X2, [X8 + 0x1D8]
	0x03586DE4 BLR X9
	0x03586DE8 LDR X0, [X19 + 0x28]
	0x03586DEC CBZ X0, 0x3586F54
	0x03586DF0 LDR X8, [X0]
	0x03586DF4 MOVZ W1, 0x10
	0x03586DF8 LDR X9, [X8 + 0x248]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xE5A000
	007 Move W8, [X20+3833]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {24}
	013 Move X0, 0xB6E000
	014 Move X0, [X0+2504]
	015 Call 0x1C17CF4
	016 Move X0, 0xB73000
	017 Move X0, [X0+840]
	018 Call 0x1C17CF4
	019 Move X0, 0xBB1000
	020 Move X0, [X0+2232]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X20+3833], W8
	024 Move X8, [X19+24]
	025 Compare X8, 0
	026 JumpIfEqual {101}
	027 Move X9, [X8+32]
	028 Compare X9, 0
	029 JumpIfEqual {101}
	030 Move X8, 0xB6E000
	031 Move X8, [X8+2504]
	032 Move X20, [X9+24]
	033 Move X21, [X8]
	034 Move X8, [X21+56]
	035 Compare X8, 0
	036 JumpIfNotEqual {40}
	037 Move X0, X21
	038 Call 0x1C5D6E0
	039 Move X8, [X21+56]
	040 Move X0, [X8+16]
	041 Move W8, [X0+309]
	042 Move TEMP, X8
	043 And TEMP, TEMP, 1
	044 Compare TEMP, 1
	045 JumpIfEqual {47}
	046 Call 0x1C5D684
	047 Move W8, [X0+224]
	048 Compare W8, 0
	049 JumpIfNotEqual {51}
	050 Call 0x1C17DFC
	051 Move X8, [X21+56]
	052 Move X0, [X8+16]
	053 Move W8, [X0+309]
	054 Move TEMP, X8
	055 And TEMP, TEMP, 1
	056 Compare TEMP, 1
	057 JumpIfEqual {59}
	058 Call 0x1C5D684
	059 Compare X20, 0
	060 JumpIfEqual {101}
	061 Move X9, 0xB73000
	062 Move X11, 0xBB1000
	063 Move X9, [X9+840]
	064 Move X10, [X0+184]
	065 Move X8, [X20]
	066 Move X11, [X11+2232]
	067 Move X1, [X9]
	068 Move X21, [X10]
	069 NotImplemented "Instruction LDRH not yet implemented."
	070 Move X22, [X11]
	071 Compare X9, 0
	072 JumpIfEqual {79}
	073 Move X10, [X8+176]
	074 Add X10, X10, 8
	075 NotImplemented "Instruction LDUR not yet implemented."
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Subtract X9, X9, 1
	078 Add X10, X10, 16
	079 Move W2, 1
	080 Move X0, X20
	081 Call 0x1C5D788
	082 Move W9, [X10]
	083 Add W9, W9, 1
	084 Add X8, X8, W9
	085 Add X0, X8, 312
	086 Move X8, [X0]
	087 Move X4, [X0+8]
	088 Move W1, 3
	089 Move X0, X20
	090 Move X2, X22
	091 Move X3, X21
	092 NotImplemented "Instruction BLR not yet implemented."
	093 Move X0, [X19+16]
	094 Compare X0, 0
	095 JumpIfEqual {101}
	096 Move X20, [X31+32]
	097 Move X19, [X31+40]
	098 Move X22, [X31+16]
	099 Move X21, [X31+24]
	100 Move X30, [X31+48]
	101 Call 0x1C17F20

