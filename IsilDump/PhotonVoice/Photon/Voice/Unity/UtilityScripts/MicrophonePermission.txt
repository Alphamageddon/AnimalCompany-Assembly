Type: Photon.Voice.Unity.UtilityScripts.MicrophonePermission

Method: System.Void add_MicrophonePermissionCallback(System.Action`1<System.Boolean> value)

Disassembly:
	0x03583368 LDR X8, [X19 + 0x38]
	0x0358336C LDR X0, [X8 + 0x10]
	0x03583370 LDRB W8, [X0 + 0x135]
	0x03583374 TBNZ X8, 0x0, 0x358337C
	0x03583378 BL 0x1C5C684
	0x0358337C LDR W8, [X0 + 0xE0]
	0x03583380 CBNZ W8, 0x3583388
	0x03583384 BL 0x1C16DFC
	0x03583388 LDR X8, [X19 + 0x38]
	0x0358338C ADRP X19, 0xBB3000
	0x03583390 LDR X0, [X8 + 0x10]
	0x03583394 LDRB W8, [X0 + 0x135]
	0x03583398 LDR X19, [X19 + 0x7A8]
	0x0358339C TBNZ X8, 0x0, 0x35833A4
	0x035833A0 BL 0x1C5C684
	0x035833A4 LDR X8, [X0 + 0xB8]
	0x035833A8 LDR X0, [X19]
	0x035833AC LDP X20, X19, [X31 + 0x10]
	0x035833B0 MOV X2, X31
	0x035833B4 LDR X1, [X8]
	0x035833B8 LDR X30, [X31], #0x20
	0x035833BC B 0x3C6D158
	0x035833C0 SUB X31, X31, 0x60
	0x035833C4 STR D8, [X31 + 0x10]
	0x035833C8 STP X30, X25, [X31 + 0x20]
	0x035833CC STP X24, X23, [X31 + 0x30]
	0x035833D0 STP X22, X21, [X31 + 0x40]
	0x035833D4 STP X20, X19, [X31 + 0x50]
	0x035833D8 ADRP X20, 0xE5C000
	0x035833DC LDRB W8, [X20 + 0xEEF]
	0x035833E0 MOV X19, X0
	0x035833E4 TBNZ X8, 0x0, 0x3583468
	0x035833E8 ADRP X0, 0xB97000
	0x035833EC LDR X0, [X0 + 0x878]
	0x035833F0 BL 0x1C16CF4
	0x035833F4 ADRP X0, 0xB97000
	0x035833F8 LDR X0, [X0 + 0x4C0]
	0x035833FC BL 0x1C16CF4
	0x03583400 ADRP X0, 0xB70000
	0x03583404 LDR X0, [X0 + 0x758]
	0x03583408 BL 0x1C16CF4
	0x0358340C ADRP X0, 0xB70000
	0x03583410 LDR X0, [X0 + 0xA90]
	0x03583414 BL 0x1C16CF4
	0x03583418 ADRP X0, 0xBB3000
	0x0358341C LDR X0, [X0 + 0x7B0]
	0x03583420 BL 0x1C16CF4
	0x03583424 ADRP X0, 0xBB3000
	0x03583428 LDR X0, [X0 + 0x7B8]
	0x0358342C BL 0x1C16CF4
	0x03583430 ADRP X0, 0xBB3000

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0xE5D000
	009 Move X23, 0xBB4000
	010 Move W8, [X20+3813]
	011 Move X23, [X23+1808]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0xB71000
	018 Move X0, [X0+3368]
	019 Call 0x1C17CF4
	020 Move X0, 0xBB4000
	021 Move X0, [X0+1808]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X20+3813], W8
	025 Move X8, [X23]
	026 Move X24, 0xB71000
	027 Move X8, [X8+184]
	028 Move X20, [X8]
	029 Move X24, [X24+3368]
	030 Move X0, X20
	031 Move X1, X19
	032 Move X2, X31
	033 Call Delegate.Combine, X0, X1
	034 Compare X0, 0
	035 JumpIfEqual {43}
	036 Move X22, [X24]
	037 Move X21, X0
	038 Move X1, X22
	039 Call 0x1C17E00
	040 Move X1, X0
	041 Compare X0, 0
	042 JumpIfNotEqual {44}
	043 Move X1, X31
	044 Move X8, [X23]
	045 Move X2, X20
	046 Move X0, [X8+184]
	047 Call 0x1C25138
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move X20, X0
	050 Move X20, [X31+48]
	051 Move X19, [X31+56]
	052 Move X22, [X31+32]
	053 Move X21, [X31+40]
	054 Move X24, [X31+16]
	055 Move X23, [X31+24]
	056 Move X30, [X31+64]
	057 Return 
	058 Move X0, X21
	059 Move X1, X22
	060 Call 0x1C181E0

Method: System.Void remove_MicrophonePermissionCallback(System.Action`1<System.Boolean> value)

Disassembly:
	0x03583434 LDR X0, [X0 + 0x7C0]
	0x03583438 BL 0x1C16CF4
	0x0358343C ADRP X0, 0xBB3000
	0x03583440 LDR X0, [X0 + 0x7C8]
	0x03583444 BL 0x1C16CF4
	0x03583448 ADRP X0, 0xBB3000
	0x0358344C LDR X0, [X0 + 0x7D0]
	0x03583450 BL 0x1C16CF4
	0x03583454 ADRP X0, 0xBB3000
	0x03583458 LDR X0, [X0 + 0x7D8]
	0x0358345C BL 0x1C16CF4
	0x03583460 MOVZ W8, 0x1
	0x03583464 STRB W8, [X20 + 0xEEF]
	0x03583468 LDR X0, [X19 + 0x40]
	0x0358346C CBZ X0, 0x3583C10
	0x03583470 ADRP X24, 0xB70000
	0x03583474 LDR X24, [X24 + 0x758]
	0x03583478 MOV X1, X31
	0x0358347C BL 0x3502204
	0x03583480 LDR X8, [X24]
	0x03583484 STR W0, [X31 + 0x1C]
	0x03583488 ADD X1, X31, 0x1C
	0x0358348C MOV X0, X8
	0x03583490 BL 0x1C16E04
	0x03583494 LDR X8, [X19 + 0x40]
	0x03583498 CBZ X8, 0x3583C10
	0x0358349C ADRP X21, 0xBB3000
	0x035834A0 ADRP X23, 0xB97000
	0x035834A4 LDR X21, [X21 + 0x7D0]
	0x035834A8 LDR X23, [X23 + 0x878]
	0x035834AC MOV X20, X0
	0x035834B0 MOV X0, X8
	0x035834B4 MOV X1, X31
	0x035834B8 BL 0x3502220
	0x035834BC LDR X8, [X24]
	0x035834C0 STR W0, [X31 + 0x18]
	0x035834C4 ADD X1, X31, 0x18
	0x035834C8 MOV X0, X8
	0x035834CC BL 0x1C16E04
	0x035834D0 LDR X8, [X21]
	0x035834D4 MOV X2, X0
	0x035834D8 MOV X1, X20
	0x035834DC MOV X3, X31
	0x035834E0 MOV X0, X8
	0x035834E4 BL 0x3227BD4
	0x035834E8 LDR X21, [X23]
	0x035834EC MOV X20, X0
	0x035834F0 LDR X8, [X21 + 0x38]
	0x035834F4 CBNZ X8, 0x3583504
	0x035834F8 MOV X0, X21
	0x035834FC BL 0x1C5C6E0

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0xE5D000
	009 Move X23, 0xBB4000
	010 Move W8, [X20+3814]
	011 Move X23, [X23+1808]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0xB71000
	018 Move X0, [X0+3368]
	019 Call 0x1C17CF4
	020 Move X0, 0xBB4000
	021 Move X0, [X0+1808]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X20+3814], W8
	025 Move X8, [X23]
	026 Move X24, 0xB71000
	027 Move X8, [X8+184]
	028 Move X20, [X8]
	029 Move X24, [X24+3368]
	030 Move X0, X20
	031 Move X1, X19
	032 Move X2, X31
	033 Call Delegate.Remove, X0, X1
	034 Compare X0, 0
	035 JumpIfEqual {43}
	036 Move X22, [X24]
	037 Move X21, X0
	038 Move X1, X22
	039 Call 0x1C17E00
	040 Move X1, X0
	041 Compare X0, 0
	042 JumpIfNotEqual {44}
	043 Move X1, X31
	044 Move X8, [X23]
	045 Move X2, X20
	046 Move X0, [X8+184]
	047 Call 0x1C25138
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move X20, X0
	050 Move X20, [X31+48]
	051 Move X19, [X31+56]
	052 Move X22, [X31+32]
	053 Move X21, [X31+40]
	054 Move X24, [X31+16]
	055 Move X23, [X31+24]
	056 Move X30, [X31+64]
	057 Return 
	058 Move X0, X21
	059 Move X1, X22
	060 Call 0x1C181E0

Method: System.Boolean get_HasPermission()

Disassembly:
	0x03583500 LDR X8, [X21 + 0x38]
	0x03583504 LDR X0, [X8 + 0x10]

ISIL:
	001 Move W0, [X0+41]
	002 Return X0

Method: System.Void set_HasPermission(System.Boolean value)

Disassembly:
	0x03583508 LDRB W8, [X0 + 0x135]
	0x0358350C TBNZ X8, 0x0, 0x3583514
	0x03583510 BL 0x1C5C684
	0x03583514 LDR W8, [X0 + 0xE0]
	0x03583518 CBNZ W8, 0x3583520
	0x0358351C BL 0x1C16DFC
	0x03583520 LDR X8, [X21 + 0x38]
	0x03583524 LDR X0, [X8 + 0x10]
	0x03583528 LDRB W8, [X0 + 0x135]
	0x0358352C TBNZ X8, 0x0, 0x3583534
	0x03583530 BL 0x1C5C684
	0x03583534 LDR X8, [X0 + 0xB8]
	0x03583538 MOV X0, X20
	0x0358353C MOV X2, X31
	0x03583540 LDR X1, [X8]
	0x03583544 BL 0x3C6D158
	0x03583548 LDR X0, [X19 + 0x40]
	0x0358354C CBZ X0, 0x3583C10
	0x03583550 LDR X8, [X0]
	0x03583554 LDP X9, X1, [X8 + 0x178]
	0x03583558 BLR X9
	0x0358355C LDR X21, [X23]
	0x03583560 MOV W20, W0
	0x03583564 LDR X8, [X21 + 0x38]
	0x03583568 CBNZ X8, 0x3583578
	0x0358356C MOV X0, X21
	0x03583570 BL 0x1C5C6E0
	0x03583574 LDR X8, [X21 + 0x38]
	0x03583578 LDR X0, [X8 + 0x10]
	0x0358357C LDRB W8, [X0 + 0x135]
	0x03583580 TBNZ X8, 0x0, 0x3583588
	0x03583584 BL 0x1C5C684
	0x03583588 LDR W8, [X0 + 0xE0]
	0x0358358C CBNZ W8, 0x3583594
	0x03583590 BL 0x1C16DFC
	0x03583594 LDR X8, [X21 + 0x38]
	0x03583598 ADRP X21, 0xBB3000
	0x0358359C LDR X0, [X8 + 0x10]
	0x035835A0 LDRB W8, [X0 + 0x135]
	0x035835A4 LDR X21, [X21 + 0x7D8]
	0x035835A8 TBNZ X8, 0x0, 0x35835B0
	0x035835AC BL 0x1C5C684
	0x035835B0 LDR X8, [X0 + 0xB8]
	0x035835B4 LDR X1, [X21]
	0x035835B8 AND W21, W20, 0x1
	0x035835BC MOV W0, W21
	0x035835C0 LDR X2, [X8]
	0x035835C4 MOV X3, X31
	0x035835C8 BL 0x3C6D9AC
	0x035835CC AND W8, W0, 0x1
	0x035835D0 MOV W20, W0
	0x035835D4 CMP W21, W8
	0x035835D8 B.EQ 0x35835F4
	0x035835DC LDR X0, [X19 + 0x40]
	0x035835E0 CBZ X0, 0x3583C10
	0x035835E4 LDR X8, [X0]
	0x035835E8 AND W1, W20, 0x1
	0x035835EC LDP X9, X2, [X8 + 0x188]
	0x035835F0 BLR X9
	0x035835F4 LDR X0, [X19 + 0x40]
	0x035835F8 CBZ X0, 0x3583C10
	0x035835FC MOV X1, X31
	0x03583600 BL 0x3502308
	0x03583604 CBZ X0, 0x3583C10
	0x03583608 ADRP X25, 0xB70000
	0x0358360C ADRP X21, 0xBB3000
	0x03583610 LDR X25, [X25 + 0xA90]
	0x03583614 LDR X21, [X21 + 0x7B0]
	0x03583618 MOV X1, X31
	0x0358361C BL 0x34FB354
	0x03583620 LDR X8, [X25]
	0x03583624 SCVTF S8, W0
	0x03583628 ADD X1, X31, 0x1C
	0x0358362C STR S8, [X31 + 0x1C]
	0x03583630 MOV X0, X8
	0x03583634 BL 0x1C16E04
	0x03583638 LDR X8, [X21]
	0x0358363C MOV X1, X0
	0x03583640 MOV X2, X31
	0x03583644 MOV X0, X8
	0x03583648 BL 0x321EFD0
	0x0358364C LDR X22, [X23]
	0x03583650 MOV X21, X0
	0x03583654 LDR X8, [X22 + 0x38]
	0x03583658 CBNZ X8, 0x3583668
	0x0358365C MOV X0, X22
	0x03583660 BL 0x1C5C6E0
	0x03583664 LDR X8, [X22 + 0x38]
	0x03583668 LDR X0, [X8 + 0x10]
	0x0358366C LDRB W8, [X0 + 0x135]
	0x03583670 TBNZ X8, 0x0, 0x3583678
	0x03583674 BL 0x1C5C684
	0x03583678 LDR W8, [X0 + 0xE0]
	0x0358367C CBNZ W8, 0x3583684
	0x03583680 BL 0x1C16DFC
	0x03583684 LDR X8, [X22 + 0x38]
	0x03583688 LDR X0, [X8 + 0x10]
	0x0358368C LDRB W8, [X0 + 0x135]
	0x03583690 TBNZ X8, 0x0, 0x3583698
	0x03583694 BL 0x1C5C684
	0x03583698 LDR X8, [X0 + 0xB8]
	0x0358369C MOV X0, X21
	0x035836A0 MOV X2, X31
	0x035836A4 LDR X1, [X8]
	0x035836A8 BL 0x3C6D158
	0x035836AC LDR X21, [X23]
	0x035836B0 LDR X8, [X21 + 0x38]
	0x035836B4 CBNZ X8, 0x35836C4
	0x035836B8 MOV X0, X21
	0x035836BC BL 0x1C5C6E0
	0x035836C0 LDR X8, [X21 + 0x38]
	0x035836C4 LDR X0, [X8 + 0x10]
	0x035836C8 LDRB W8, [X0 + 0x135]
	0x035836CC TBNZ X8, 0x0, 0x35836D4
	0x035836D0 BL 0x1C5C684
	0x035836D4 LDR W8, [X0 + 0xE0]
	0x035836D8 CBNZ W8, 0x35836E0
	0x035836DC BL 0x1C16DFC
	0x035836E0 LDR X8, [X21 + 0x38]
	0x035836E4 LDR X0, [X8 + 0x10]
	0x035836E8 LDRB W8, [X0 + 0x135]
	0x035836EC TBNZ X8, 0x0, 0x35836F4
	0x035836F0 BL 0x1C5C684
	0x035836F4 LDR X8, [X0 + 0xB8]
	0x035836F8 FMOV S1, W31
	0x035836FC MOV V0.16B, V8.16B
	0x03583700 MOV X1, X31
	0x03583704 LDR X0, [X8]
	0x03583708 MOVZ W8, 0x43FA0000
	0x0358370C FMOV S2, W8
	0x03583710 BL 0x3C6DB40
	0x03583714 LDR X0, [X19 + 0x40]
	0x03583718 CBZ X0, 0x3583C10
	0x0358371C MOV X1, X31
	0x03583720 MOV V8.16B, V0.16B
	0x03583724 BL 0x3502308
	0x03583728 CBZ X0, 0x3583C10
	0x0358372C MOVZ W8, 0x7F800000
	0x03583730 FMOV S0, W8
	0x03583734 FCVTZS W9, S8
	0x03583738 FCMP S8, S0
	0x0358373C MOVZ W8, 0x80000000
	0x03583740 CSEL W21, W8, W9, EQ
	0x03583744 MOV W1, W21
	0x03583748 MOV X2, X31
	0x0358374C BL 0x34FB35C
	0x03583750 LDR X0, [X19 + 0x40]
	0x03583754 CBZ X0, 0x3583C10
	0x03583758 MOV X1, X31
	0x0358375C BL 0x3502308
	0x03583760 CBZ X0, 0x3583C10
	0x03583764 MOV W1, W21
	0x03583768 MOV X2, X31
	0x0358376C BL 0x34FB32C
	0x03583770 LDR X0, [X19 + 0x40]
	0x03583774 CBZ X0, 0x3583C10
	0x03583778 MOV X1, X31
	0x0358377C BL 0x3502308
	0x03583780 CBZ X0, 0x3583C10
	0x03583784 ADRP X21, 0xBB3000
	0x03583788 LDR X21, [X21 + 0x7B8]
	0x0358378C MOV X1, X31
	0x03583790 BL 0x34FB364
	0x03583794 LDR X8, [X25]
	0x03583798 SCVTF S8, W0
	0x0358379C ADD X1, X31, 0x18
	0x035837A0 STR S8, [X31 + 0x18]
	0x035837A4 MOV X0, X8
	0x035837A8 BL 0x1C16E04
	0x035837AC LDR X8, [X21]
	0x035837B0 MOV X1, X0
	0x035837B4 MOV X2, X31
	0x035837B8 MOV X0, X8
	0x035837BC BL 0x321EFD0
	0x035837C0 LDR X22, [X23]
	0x035837C4 MOV X21, X0
	0x035837C8 LDR X8, [X22 + 0x38]
	0x035837CC CBNZ X8, 0x35837DC
	0x035837D0 MOV X0, X22
	0x035837D4 BL 0x1C5C6E0
	0x035837D8 LDR X8, [X22 + 0x38]
	0x035837DC LDR X0, [X8 + 0x10]
	0x035837E0 LDRB W8, [X0 + 0x135]
	0x035837E4 TBNZ X8, 0x0, 0x35837EC
	0x035837E8 BL 0x1C5C684
	0x035837EC LDR W8, [X0 + 0xE0]
	0x035837F0 CBNZ W8, 0x35837F8
	0x035837F4 BL 0x1C16DFC
	0x035837F8 LDR X8, [X22 + 0x38]
	0x035837FC LDR X0, [X8 + 0x10]
	0x03583800 LDRB W8, [X0 + 0x135]
	0x03583804 TBNZ X8, 0x0, 0x358380C
	0x03583808 BL 0x1C5C684
	0x0358380C LDR X8, [X0 + 0xB8]
	0x03583810 MOV X0, X21
	0x03583814 MOV X2, X31
	0x03583818 LDR X1, [X8]
	0x0358381C BL 0x3C6D158
	0x03583820 LDR X21, [X23]
	0x03583824 LDR X8, [X21 + 0x38]
	0x03583828 CBNZ X8, 0x3583838
	0x0358382C MOV X0, X21
	0x03583830 BL 0x1C5C6E0
	0x03583834 LDR X8, [X21 + 0x38]
	0x03583838 LDR X0, [X8 + 0x10]
	0x0358383C LDRB W8, [X0 + 0x135]
	0x03583840 TBNZ X8, 0x0, 0x3583848
	0x03583844 BL 0x1C5C684
	0x03583848 LDR W8, [X0 + 0xE0]
	0x0358384C CBNZ W8, 0x3583854
	0x03583850 BL 0x1C16DFC
	0x03583854 LDR X8, [X21 + 0x38]
	0x03583858 LDR X0, [X8 + 0x10]
	0x0358385C LDRB W8, [X0 + 0x135]
	0x03583860 TBNZ X8, 0x0, 0x3583868
	0x03583864 BL 0x1C5C684
	0x03583868 LDR X8, [X0 + 0xB8]
	0x0358386C FMOV S1, W31
	0x03583870 MOV V0.16B, V8.16B
	0x03583874 MOV X1, X31
	0x03583878 LDR X0, [X8]
	0x0358387C MOVZ W8, 0x42C80000
	0x03583880 FMOV S2, W8
	0x03583884 BL 0x3C6DB40
	0x03583888 LDR X0, [X19 + 0x40]
	0x0358388C CBZ X0, 0x3583C10
	0x03583890 MOV X1, X31
	0x03583894 MOV V8.16B, V0.16B
	0x03583898 BL 0x3502308
	0x0358389C CBZ X0, 0x3583C10
	0x035838A0 MOVZ W8, 0x7F800000
	0x035838A4 FMOV S0, W8
	0x035838A8 FCVTZS W9, S8
	0x035838AC FCMP S8, S0
	0x035838B0 MOVZ W8, 0x80000000
	0x035838B4 CSEL W21, W8, W9, EQ
	0x035838B8 MOV W1, W21
	0x035838BC MOV X2, X31
	0x035838C0 BL 0x34FB36C
	0x035838C4 LDR X0, [X19 + 0x40]
	0x035838C8 CBZ X0, 0x3583C10
	0x035838CC MOV X1, X31
	0x035838D0 BL 0x3502308
	0x035838D4 CBZ X0, 0x3583C10
	0x035838D8 MOV W1, W21
	0x035838DC MOV X2, X31
	0x035838E0 BL 0x34FB33C
	0x035838E4 LDR X0, [X19 + 0x40]
	0x035838E8 CBZ X0, 0x3583C10
	0x035838EC MOV X1, X31
	0x035838F0 BL 0x3502308
	0x035838F4 CBZ X0, 0x3583C10
	0x035838F8 ADRP X21, 0xBB3000
	0x035838FC LDR X21, [X21 + 0x7C0]
	0x03583900 MOV X1, X31
	0x03583904 BL 0x34FB374
	0x03583908 LDR X8, [X25]
	0x0358390C SCVTF S8, W0
	0x03583910 ADD X1, X31, 0xC
	0x03583914 STR S8, [X31 + 0xC]
	0x03583918 MOV X0, X8
	0x0358391C BL 0x1C16E04
	0x03583920 LDR X8, [X21]
	0x03583924 MOV X1, X0
	0x03583928 MOV X2, X31
	0x0358392C MOV X0, X8
	0x03583930 BL 0x321EFD0
	0x03583934 LDR X22, [X23]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X21, 0xE5D000
	011 Move W8, [X21+3815]
	012 Move W20, W1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {50}
	018 Move X0, 0xB71000
	019 Move X0, [X0+2504]
	020 Call 0x1C17CF4
	021 Move X0, 0xB71000
	022 Move X0, [X0+2904]
	023 Call 0x1C17CF4
	024 Move X0, 0xBB4000
	025 Move X0, [X0+280]
	026 Call 0x1C17CF4
	027 Move X0, 0xB76000
	028 Move X0, [X0+840]
	029 Call 0x1C17CF4
	030 Move X0, 0xBB4000
	031 Move X0, [X0+1808]
	032 Call 0x1C17CF4
	033 Move X0, 0xB71000
	034 Move X0, [X0+2512]
	035 Call 0x1C17CF4
	036 Move X0, 0xB71000
	037 Move X0, [X0+1432]
	038 Call 0x1C17CF4
	039 Move X0, 0xBB4000
	040 Move X0, [X0+1816]
	041 Call 0x1C17CF4
	042 Move X0, 0xBB4000
	043 Move X0, [X0+1824]
	044 Call 0x1C17CF4
	045 Move X0, 0xBB4000
	046 Move X0, [X0+1832]
	047 Call 0x1C17CF4
	048 Move W8, 1
	049 Move [X21+3815], W8
	050 Move X8, [X19+32]
	051 Compare X8, 0
	052 JumpIfEqual {306}
	053 Move X9, 0xB71000
	054 Move X9, [X9+2512]
	055 Move X23, 0xB71000
	056 Move X21, [X8+24]
	057 Move W1, 1
	058 Move X0, [X9]
	059 Move X23, [X23+2904]
	060 And W25, W20, 1
	061 Call 0x1C17D6C
	062 Move X22, X0
	063 Move X0, [X23]
	064 Add X1, X31, 12
	065 Move [X31+12], W25
	066 Call 0x1C17E04
	067 Compare X22, 0
	068 JumpIfEqual {306}
	069 Move X23, X0
	070 Compare X0, 0
	071 JumpIfEqual {78}
	072 Move X8, [X22]
	073 Move X0, X23
	074 Move X1, [X8+64]
	075 Call 0x1C17E00
	076 Compare X0, 0
	077 JumpIfEqual {308}
	078 Move W8, [X22+24]
	079 Compare W8, 0
	080 JumpIfEqual {307}
	081 Move [X22+32], X23
	082 Compare X21, 0
	083 JumpIfEqual {306}
	084 Move X24, 0xB76000
	085 Move X10, 0xBB4000
	086 Move X8, [X21]
	087 Move X24, [X24+840]
	088 Move X10, [X10+1832]
	089 Move X26, 0xBB4000
	090 NotImplemented "Instruction LDRH not yet implemented."
	091 Move X1, [X24]
	092 Move X23, [X10]
	093 Move X26, [X26+1808]
	094 Compare X9, 0
	095 JumpIfEqual {102}
	096 Move X10, [X8+176]
	097 Add X10, X10, 8
	098 NotImplemented "Instruction LDUR not yet implemented."
	099 NotImplemented "Instruction CMP not yet implemented."
	100 Subtract X9, X9, 1
	101 Add X10, X10, 16
	102 Move W2, 1
	103 Move X0, X21
	104 Call 0x1C5D788
	105 Move W9, [X10]
	106 Add W9, W9, 1
	107 Add X8, X8, W9
	108 Add X0, X8, 312
	109 Move X8, [X0]
	110 Move X4, [X0+8]
	111 Move W1, 3
	112 Move X0, X21
	113 Move X2, X23
	114 Move X3, X22
	115 NotImplemented "Instruction BLR not yet implemented."
	116 Move X8, [X26]
	117 Move X8, [X8+184]
	118 Move X8, [X8]
	119 Compare X8, 0
	120 JumpIfEqual {126}
	121 Move X9, [X8+24]
	122 Move X0, [X8+64]
	123 Move X2, [X8+40]
	124 And W1, W20, 1
	125 NotImplemented "Instruction BLR not yet implemented."
	126 Move W8, [X19+41]
	127 NotImplemented "Instruction CMP not yet implemented."
	128 Move [X19+41], W25
	129 Move TEMP, X20
	130 And TEMP, TEMP, 1
	131 Compare TEMP, 1
	132 JumpIfNotEqual {280}
	133 Move W8, [X19+42]
	134 Compare W8, 0
	135 JumpIfEqual {280}
	136 Move X8, 0xBB4000
	137 Move X8, [X8+280]
	138 Move X0, X19
	139 Move X1, [X8]
	140 Call 0x21A4894, X0
	141 Move X8, 0xB71000
	142 Move X8, [X8+1432]
	143 Move X20, X0
	144 Move X8, [X8]
	145 Move W9, [X8+224]
	146 Compare W9, 0
	147 JumpIfNotEqual {150}
	148 Move X0, X8
	149 Call 0x1C17DFC
	150 Move X0, X20
	151 Move X1, X31
	152 Move X2, X31
	153 Call Object.op_Inequality, X0, X1
	154 Move TEMP, X0
	155 And TEMP, TEMP, 1
	156 Compare TEMP, 1
	157 JumpIfNotEqual {216}
	158 Compare X20, 0
	159 JumpIfEqual {306}
	160 Move W8, [X20+137]
	161 Compare W8, 0
	162 JumpIfNotEqual {280}
	163 Move X9, [X19+32]
	164 Compare X9, 0
	165 JumpIfEqual {306}
	166 Move X8, 0xB71000
	167 Move X8, [X8+2504]
	168 Move X19, [X9+24]
	169 Move X21, [X8]
	170 Move X8, [X21+56]
	171 Compare X8, 0
	172 JumpIfNotEqual {176}
	173 Move X0, X21
	174 Call 0x1C5D6E0
	175 Move X8, [X21+56]
	176 Move X0, [X8+16]
	177 Move W8, [X0+309]
	178 Move TEMP, X8
	179 And TEMP, TEMP, 1
	180 Compare TEMP, 1
	181 JumpIfEqual {183}
	182 Call 0x1C5D684
	183 Move W8, [X0+224]
	184 Compare W8, 0
	185 JumpIfNotEqual {187}
	186 Call 0x1C17DFC
	187 Move X8, [X21+56]
	188 Move X0, [X8+16]
	189 Move W8, [X0+309]
	190 Move TEMP, X8
	191 And TEMP, TEMP, 1
	192 Compare TEMP, 1
	193 JumpIfEqual {195}
	194 Call 0x1C5D684
	195 Compare X19, 0
	196 JumpIfEqual {306}
	197 Move X10, 0xBB4000
	198 Move X9, [X0+184]
	199 Move X8, [X19]
	200 Move X1, [X24]
	201 Move X10, [X10+1824]
	202 Move X21, [X9]
	203 NotImplemented "Instruction LDRH not yet implemented."
	204 Move X22, [X10]
	205 Compare X9, 0
	206 JumpIfEqual {213}
	207 Move X10, [X8+176]
	208 Add X10, X10, 8
	209 NotImplemented "Instruction LDUR not yet implemented."
	210 NotImplemented "Instruction CMP not yet implemented."
	211 Subtract X9, X9, 1
	212 Add X10, X10, 16
	213 Move W2, 1
	214 Move X0, X19
	215 Call 0x1C5D788
	216 Move X9, [X19+32]
	217 Compare X9, 0
	218 JumpIfEqual {306}
	219 Move X8, 0xB71000
	220 Move X8, [X8+2504]
	221 Move X19, [X9+24]
	222 Move X20, [X8]
	223 Move X8, [X20+56]
	224 Compare X8, 0
	225 JumpIfNotEqual {229}
	226 Move X0, X20
	227 Call 0x1C5D6E0
	228 Move X8, [X20+56]
	229 Move X0, [X8+16]
	230 Move W8, [X0+309]
	231 Move TEMP, X8
	232 And TEMP, TEMP, 1
	233 Compare TEMP, 1
	234 JumpIfEqual {236}
	235 Call 0x1C5D684
	236 Move W8, [X0+224]
	237 Compare W8, 0
	238 JumpIfNotEqual {240}
	239 Call 0x1C17DFC
	240 Move X8, [X20+56]
	241 Move X0, [X8+16]
	242 Move W8, [X0+309]
	243 Move TEMP, X8
	244 And TEMP, TEMP, 1
	245 Compare TEMP, 1
	246 JumpIfEqual {248}
	247 Call 0x1C5D684
	248 Compare X19, 0
	249 JumpIfEqual {306}
	250 Move X10, 0xBB4000
	251 Move X9, [X0+184]
	252 Move X8, [X19]
	253 Move X1, [X24]
	254 Move X10, [X10+1816]
	255 Move X20, [X9]
	256 NotImplemented "Instruction LDRH not yet implemented."
	257 Move X21, [X10]
	258 Compare X9, 0
	259 JumpIfEqual {266}
	260 Move X10, [X8+176]
	261 Add X10, X10, 8
	262 NotImplemented "Instruction LDUR not yet implemented."
	263 NotImplemented "Instruction CMP not yet implemented."
	264 Subtract X9, X9, 1
	265 Add X10, X10, 16
	266 Move W2, 1
	267 Move X0, X19
	268 Call 0x1C5D788
	269 Move W9, [X10]
	270 Add W9, W9, 1
	271 Add X8, X8, W9
	272 Add X0, X8, 312
	273 Move X8, [X0]
	274 Move X4, [X0+8]
	275 Move W1, 3
	276 Move X0, X19
	277 Move X2, X21
	278 Move X3, X20
	279 NotImplemented "Instruction BLR not yet implemented."
	280 Move X20, [X31+64]
	281 Move X19, [X31+72]
	282 Move X22, [X31+48]
	283 Move X21, [X31+56]
	284 Move X24, [X31+32]
	285 Move X23, [X31+40]
	286 Move X26, [X31+16]
	287 Move X25, [X31+24]
	288 Move X30, [X31+80]
	289 Return 
	290 Move W9, [X10]
	291 Add W9, W9, 1
	292 Add X8, X8, W9
	293 Add X0, X8, 312
	294 Move X8, [X0]
	295 Move X4, [X0+8]
	296 Move W1, 3
	297 Move X0, X19
	298 Move X2, X22
	299 Move X3, X21
	300 NotImplemented "Instruction BLR not yet implemented."
	301 Move W8, [X20+137]
	302 NotImplemented "Instruction CMP not yet implemented."
	303 Move W8, 1
	304 Move [X20+137], W8
	305 Move [X20+220], W8
	306 Call 0x1C17F20
	307 Call 0x1C17F28
	308 Call 0x1C17F44
	309 Move X1, X31
	310 Call 0x1C17DEC

Method: System.Void Awake()

Disassembly:
	0x03583938 MOV X21, X0
	0x0358393C LDR X8, [X22 + 0x38]
	0x03583940 CBNZ X8, 0x3583950
	0x03583944 MOV X0, X22
	0x03583948 BL 0x1C5C6E0
	0x0358394C LDR X8, [X22 + 0x38]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Call VoiceComponent.Awake, X0
	005 Move X0, X19
	006 Move X30, [X31+16]
	007 Move X19, [X31+24]

Method: System.Void InitVoice()

Disassembly:
	0x03583950 LDR X0, [X8 + 0x10]
	0x03583954 LDRB W8, [X0 + 0x135]
	0x03583958 TBNZ X8, 0x0, 0x3583960
	0x0358395C BL 0x1C5C684
	0x03583960 LDR W8, [X0 + 0xE0]
	0x03583964 CBNZ W8, 0x358396C
	0x03583968 BL 0x1C16DFC
	0x0358396C LDR X8, [X22 + 0x38]
	0x03583970 LDR X0, [X8 + 0x10]
	0x03583974 LDRB W8, [X0 + 0x135]
	0x03583978 TBNZ X8, 0x0, 0x3583980
	0x0358397C BL 0x1C5C684
	0x03583980 LDR X8, [X0 + 0xB8]
	0x03583984 MOV X0, X21
	0x03583988 MOV X2, X31
	0x0358398C LDR X1, [X8]
	0x03583990 BL 0x3C6D158
	0x03583994 LDR X21, [X23]
	0x03583998 LDR X8, [X21 + 0x38]
	0x0358399C CBNZ X8, 0x35839AC
	0x035839A0 MOV X0, X21
	0x035839A4 BL 0x1C5C6E0
	0x035839A8 LDR X8, [X21 + 0x38]
	0x035839AC LDR X0, [X8 + 0x10]
	0x035839B0 LDRB W8, [X0 + 0x135]
	0x035839B4 TBNZ X8, 0x0, 0x35839BC
	0x035839B8 BL 0x1C5C684
	0x035839BC LDR W8, [X0 + 0xE0]
	0x035839C0 CBNZ W8, 0x35839C8
	0x035839C4 BL 0x1C16DFC
	0x035839C8 LDR X8, [X21 + 0x38]
	0x035839CC LDR X0, [X8 + 0x10]
	0x035839D0 LDRB W8, [X0 + 0x135]
	0x035839D4 TBNZ X8, 0x0, 0x35839DC
	0x035839D8 BL 0x1C5C684
	0x035839DC LDR X8, [X0 + 0xB8]
	0x035839E0 FMOV S1, W31
	0x035839E4 FMOV S2, 10
	0x035839E8 MOV V0.16B, V8.16B
	0x035839EC LDR X0, [X8]
	0x035839F0 MOV X1, X31
	0x035839F4 BL 0x3C6DB40
	0x035839F8 LDR X0, [X19 + 0x40]
	0x035839FC CBZ X0, 0x3583C10
	0x03583A00 MOV X1, X31
	0x03583A04 MOV V8.16B, V0.16B
	0x03583A08 BL 0x3502308
	0x03583A0C CBZ X0, 0x3583C10
	0x03583A10 MOVZ W8, 0x7F800000
	0x03583A14 FMOV S0, W8
	0x03583A18 FCVTZS W9, S8
	0x03583A1C FCMP S8, S0
	0x03583A20 MOVZ W8, 0x80000000
	0x03583A24 CSEL W21, W8, W9, EQ
	0x03583A28 MOV W1, W21
	0x03583A2C MOV X2, X31
	0x03583A30 BL 0x34FB37C
	0x03583A34 LDR X0, [X19 + 0x40]
	0x03583A38 CBZ X0, 0x3583C10
	0x03583A3C MOV X1, X31
	0x03583A40 BL 0x3502308
	0x03583A44 CBZ X0, 0x3583C10
	0x03583A48 ADRP X22, 0xBB3000
	0x03583A4C LDR X22, [X22 + 0x7C8]
	0x03583A50 MOV W1, W21
	0x03583A54 MOV X2, X31
	0x03583A58 BL 0x34FB34C
	0x03583A5C LDR V0, [X19 + 0x48]
	0x03583A60 MOVZ W8, 0x7F800000
	0x03583A64 LDR X0, [X24]
	0x03583A68 FMOV S1, W8
	0x03583A6C FCVTZS W8, S0
	0x03583A70 FCMP S0, S1
	0x03583A74 MOVZ W9, 0x80000000
	0x03583A78 CSEL W8, W9, W8, EQ
	0x03583A7C ADD X1, X31, 0x8
	0x03583A80 STR W8, [X31 + 0x8]
	0x03583A84 BL 0x1C16E04
	0x03583A88 LDR X8, [X22]
	0x03583A8C MOV X1, X0
	0x03583A90 MOV X2, X31
	0x03583A94 MOV X0, X8
	0x03583A98 BL 0x321EFD0
	0x03583A9C LDR X22, [X23]
	0x03583AA0 MOV X21, X0
	0x03583AA4 LDR X8, [X22 + 0x38]
	0x03583AA8 CBNZ X8, 0x3583AB8
	0x03583AAC MOV X0, X22
	0x03583AB0 BL 0x1C5C6E0
	0x03583AB4 LDR X8, [X22 + 0x38]
	0x03583AB8 LDR X0, [X8 + 0x10]
	0x03583ABC LDRB W8, [X0 + 0x135]
	0x03583AC0 TBNZ X8, 0x0, 0x3583AC8
	0x03583AC4 BL 0x1C5C684
	0x03583AC8 LDR W8, [X0 + 0xE0]
	0x03583ACC CBNZ W8, 0x3583AD4
	0x03583AD0 BL 0x1C16DFC
	0x03583AD4 LDR X8, [X22 + 0x38]
	0x03583AD8 LDR X0, [X8 + 0x10]
	0x03583ADC LDRB W8, [X0 + 0x135]
	0x03583AE0 TBNZ X8, 0x0, 0x3583AE8
	0x03583AE4 BL 0x1C5C684
	0x03583AE8 LDR X8, [X0 + 0xB8]
	0x03583AEC MOV X0, X21
	0x03583AF0 MOV X2, X31
	0x03583AF4 LDR X1, [X8]
	0x03583AF8 BL 0x3C6D158
	0x03583AFC LDR X21, [X23]
	0x03583B00 LDR V8, [X19 + 0x48]
	0x03583B04 LDR X8, [X21 + 0x38]
	0x03583B08 CBNZ X8, 0x3583B18
	0x03583B0C MOV X0, X21
	0x03583B10 BL 0x1C5C6E0
	0x03583B14 LDR X8, [X21 + 0x38]
	0x03583B18 LDR X0, [X8 + 0x10]
	0x03583B1C LDRB W8, [X0 + 0x135]
	0x03583B20 TBNZ X8, 0x0, 0x3583B28
	0x03583B24 BL 0x1C5C684
	0x03583B28 LDR W8, [X0 + 0xE0]
	0x03583B2C CBNZ W8, 0x3583B34
	0x03583B30 BL 0x1C16DFC
	0x03583B34 LDR X8, [X21 + 0x38]
	0x03583B38 LDR X0, [X8 + 0x10]
	0x03583B3C LDRB W8, [X0 + 0x135]
	0x03583B40 TBNZ X8, 0x0, 0x3583B48
	0x03583B44 BL 0x1C5C684
	0x03583B48 LDR X8, [X0 + 0xB8]
	0x03583B4C FMOV S1, W31
	0x03583B50 MOV V0.16B, V8.16B
	0x03583B54 MOV X1, X31
	0x03583B58 LDR X0, [X8]
	0x03583B5C MOVZ W8, 0x42C80000
	0x03583B60 FMOV S2, W8
	0x03583B64 BL 0x3C6DB40
	0x03583B68 LDR X8, [X19 + 0x20]
	0x03583B6C STR S0, [X19 + 0x48]
	0x03583B70 CBZ X8, 0x3583C10
	0x03583B74 LDR X8, [X8 + 0x48]
	0x03583B78 CBZ X8, 0x3583C10
	0x03583B7C LDR X8, [X8 + 0x188]
	0x03583B80 TBZ X20, 0x0, 0x3583BA4
	0x03583B84 CBZ X8, 0x3583C10
	0x03583B88 MOVZ W9, 0x7F800000
	0x03583B8C FMOV S1, W9
	0x03583B90 FCVTZS W10, S0
	0x03583B94 FCMP S0, S1
	0x03583B98 MOVZ W9, 0x80000000
	0x03583B9C CSEL W9, W9, W10, EQ
	0x03583BA0 B 0x3583BAC
	0x03583BA4 CBZ X8, 0x3583C10
	0x03583BA8 MOV W9, W31
	0x03583BAC ADRP X20, 0xB97000
	0x03583BB0 LDR X20, [X20 + 0x4C0]
	0x03583BB4 STR W9, [X8 + 0x60]
	0x03583BB8 LDR X0, [X20]
	0x03583BBC LDR W8, [X0 + 0xE0]
	0x03583BC0 CBNZ W8, 0x3583BC8
	0x03583BC4 BL 0x1C16DFC
	0x03583BC8 MOV X0, X31
	0x03583BCC BL 0x3C669F4
	0x03583BD0 TBZ X0, 0x0, 0x3583BDC
	0x03583BD4 MOVZ W8, 0x42C80000
	0x03583BD8 STR W8, [X19 + 0x34]
	0x03583BDC LDR X0, [X20]
	0x03583BE0 LDR W8, [X0 + 0xE0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0xE5D000
	008 Move X23, 0xB71000
	009 Move W8, [X20+3816]
	010 Move X23, [X23+3408]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {45}
	016 Move X0, 0xB72000
	017 Move X0, [X0+3688]
	018 Call 0x1C17CF4
	019 Move X0, 0xB71000
	020 Move X0, [X0+2504]
	021 Call 0x1C17CF4
	022 Move X0, 0xB76000
	023 Move X0, [X0+840]
	024 Call 0x1C17CF4
	025 Move X0, 0xBB4000
	026 Move X0, [X0+1840]
	027 Call 0x1C17CF4
	028 Move X0, 0xBB4000
	029 Move X0, [X0+1848]
	030 Call 0x1C17CF4
	031 Move X0, 0xBB4000
	032 Move X0, [X0+1856]
	033 Call 0x1C17CF4
	034 Move X0, 0xBB4000
	035 Move X0, [X0+1864]
	036 Call 0x1C17CF4
	037 Move X0, 0xB71000
	038 Move X0, [X0+3408]
	039 Call 0x1C17CF4
	040 Move X0, 0xBB4000
	041 Move X0, [X0+1872]
	042 Call 0x1C17CF4
	043 Move W8, 1
	044 Move [X20+3816], W8
	045 Move X0, [X23]
	046 Move X1, X31
	047 Call Permission.HasUserAuthorizedPermission, X0
	048 Move TEMP, X0
	049 And TEMP, TEMP, 1
	050 Compare TEMP, 1
	051 JumpIfNotEqual {62}
	052 Move X0, X19
	053 Move X20, [X31+32]
	054 Move X19, [X31+40]
	055 Move X22, [X31+16]
	056 Move X21, [X31+24]
	057 Move W1, 1
	058 Move X30, [X31+48]
	059 Move X23, [X31+56]
	060 Call MicrophonePermission.set_HasPermission, X0, X1
	061 Return 
	062 Move X9, [X19+32]
	063 Compare X9, 0
	064 JumpIfEqual {191}
	065 Move X8, 0xB71000
	066 Move X8, [X8+2504]
	067 Move X20, [X9+24]
	068 Move X21, [X8]
	069 Move X8, [X21+56]
	070 Compare X8, 0
	071 JumpIfNotEqual {75}
	072 Move X0, X21
	073 Call 0x1C5D6E0
	074 Move X8, [X21+56]
	075 Move X0, [X8+16]
	076 Move W8, [X0+309]
	077 Move TEMP, X8
	078 And TEMP, TEMP, 1
	079 Compare TEMP, 1
	080 JumpIfEqual {82}
	081 Call 0x1C5D684
	082 Move W8, [X0+224]
	083 Compare W8, 0
	084 JumpIfNotEqual {86}
	085 Call 0x1C17DFC
	086 Move X8, [X21+56]
	087 Move X0, [X8+16]
	088 Move W8, [X0+309]
	089 Move TEMP, X8
	090 And TEMP, TEMP, 1
	091 Compare TEMP, 1
	092 JumpIfEqual {94}
	093 Call 0x1C5D684
	094 Compare X20, 0
	095 JumpIfEqual {191}
	096 Move X10, 0xB76000
	097 Move X11, 0xBB4000
	098 Move X9, [X0+184]
	099 Move X10, [X10+840]
	100 Move X8, [X20]
	101 Move X11, [X11+1872]
	102 Move X21, [X9]
	103 Move X1, [X10]
	104 NotImplemented "Instruction LDRH not yet implemented."
	105 Move X22, [X11]
	106 Compare X9, 0
	107 JumpIfEqual {114}
	108 Move X10, [X8+176]
	109 Add X10, X10, 8
	110 NotImplemented "Instruction LDUR not yet implemented."
	111 NotImplemented "Instruction CMP not yet implemented."
	112 Subtract X9, X9, 1
	113 Add X10, X10, 16
	114 Move W2, 1
	115 Move X0, X20
	116 Call 0x1C5D788
	117 Move W9, [X10]
	118 Add W9, W9, 1
	119 Add X8, X8, W9
	120 Add X0, X8, 312
	121 Move X8, [X0]
	122 Move X4, [X0+8]
	123 Move W1, 3
	124 Move X0, X20
	125 Move X2, X22
	126 Move X3, X21
	127 NotImplemented "Instruction BLR not yet implemented."
	128 Move X8, 0xBB4000
	129 Move X8, [X8+1864]
	130 Move X0, [X8]
	131 Call 0x1C17F10
	132 Move X1, X31
	133 Move X20, X0
	134 Call PermissionCallbacks..ctor, X0
	135 Move X22, 0xB72000
	136 Move X22, [X22+3688]
	137 Move X0, [X22]
	138 Call 0x1C17F10
	139 Move X8, 0xBB4000
	140 Move X8, [X8+1848]
	141 Move X1, X19
	142 Move X3, X31
	143 Move X21, X0
	144 Move X2, [X8]
	145 Call Action`1<Object>..ctor, X0, X1, X2
	146 Compare X20, 0
	147 JumpIfEqual {191}
	148 Move X0, X20
	149 Move X1, X21
	150 Move X2, X31
	151 Call PermissionCallbacks.add_PermissionDenied, X0, X1
	152 Move X0, [X22]
	153 Call 0x1C17F10
	154 Move X8, 0xBB4000
	155 Move X8, [X8+1856]
	156 Move X1, X19
	157 Move X3, X31
	158 Move X21, X0
	159 Move X2, [X8]
	160 Call Action`1<Object>..ctor, X0, X1, X2
	161 Move X0, X20
	162 Move X1, X21
	163 Move X2, X31
	164 Call PermissionCallbacks.add_PermissionGranted, X0, X1
	165 Move X0, [X22]
	166 Call 0x1C17F10
	167 Move X8, 0xBB4000
	168 Move X8, [X8+1840]
	169 Move X1, X19
	170 Move X3, X31
	171 Move X21, X0
	172 Move X2, [X8]
	173 Call Action`1<Object>..ctor, X0, X1, X2
	174 Move X0, X20
	175 Move X1, X21
	176 Move X2, X31
	177 Call PermissionCallbacks.add_PermissionDeniedAndDontAskAgain, X0, X1
	178 Move X0, [X23]
	179 Move X1, X20
	180 Move X2, X31
	181 Call Permission.RequestUserPermission, X0, X1
	182 Move W8, 1
	183 Move [X19+40], W8
	184 Move X20, [X31+32]
	185 Move X19, [X31+40]
	186 Move X22, [X31+16]
	187 Move X21, [X31+24]
	188 Move X30, [X31+48]
	189 Move X23, [X31+56]
	190 Return 
	191 Call 0x1C17F20

Method: System.Void PermissionCallbacks_PermissionDeniedAndDontAskAgain(System.String permissionName)

Disassembly:
	0x03583BE4 CBNZ W8, 0x3583BEC
	0x03583BE8 BL 0x1C16DFC
	0x03583BEC MOV X0, X31
	0x03583BF0 BL 0x3C6C880
	0x03583BF4 LDP X20, X19, [X31 + 0x50]
	0x03583BF8 LDP X22, X21, [X31 + 0x40]
	0x03583BFC LDP X24, X23, [X31 + 0x30]
	0x03583C00 LDP X30, X25, [X31 + 0x20]
	0x03583C04 LDR V8, [X31 + 0x10]
	0x03583C08 ADD X31, X31, 0x60
	0x03583C0C RET
	0x03583C10 BL 0x1C16F20
	0x03583C14 ADRP X8, 0xFFFFFFFFFD56A000
	0x03583C18 LDR V0, [X8 + 0xC]
	0x03583C1C MOVZ W8, 0xC9
	0x03583C20 MOVZ W9, 0x1
	0x03583C24 MOV X1, X31
	0x03583C28 STR W8, [X0 + 0x38]
	0x03583C2C STUR V0, [X0 + 0x28]
	0x03583C30 STRB W9, [X0 + 0x3C]
	0x03583C34 B 0x3C36C30
	0x03583C38 STP X30, X23, [X31 - 0x30]!
	0x03583C3C STP X22, X21, [X31 + 0x10]
	0x03583C40 STP X20, X19, [X31 + 0x20]
	0x03583C44 ADRP X21, 0xE5C000
	0x03583C48 ADRP X20, 0xBB3000
	0x03583C4C LDRB W8, [X21 + 0xEF0]
	0x03583C50 LDR X20, [X20 + 0x770]
	0x03583C54 MOV X19, X0
	0x03583C58 TBNZ X8, 0x0, 0x3583CA0
	0x03583C5C ADRP X0, 0xBB3000
	0x03583C60 LDR X0, [X0 + 0x770]
	0x03583C64 BL 0x1C16CF4
	0x03583C68 ADRP X0, 0xB70000
	0x03583C6C LDR X0, [X0 + 0xA28]
	0x03583C70 BL 0x1C16CF4
	0x03583C74 ADRP X0, 0xB70000
	0x03583C78 LDR X0, [X0 + 0x9D0]
	0x03583C7C BL 0x1C16CF4
	0x03583C80 ADRP X0, 0xBB3000
	0x03583C84 LDR X0, [X0 + 0x778]
	0x03583C88 BL 0x1C16CF4
	0x03583C8C ADRP X0, 0xBB3000
	0x03583C90 LDR X0, [X0 + 0x780]
	0x03583C94 BL 0x1C16CF4
	0x03583C98 MOVZ W8, 0x1
	0x03583C9C STRB W8, [X21 + 0xEF0]
	0x03583CA0 LDR X1, [X20]
	0x03583CA4 ADRP X23, 0xB70000
	0x03583CA8 LDR X23, [X23 + 0xA28]
	0x03583CAC MOV X0, X19
	0x03583CB0 BL 0x21A43A8
	0x03583CB4 CBZ X0, 0x3583DB4
	0x03583CB8 LDR X8, [X0 + 0x18]
	0x03583CBC MOV X20, X0
	0x03583CC0 CBZ X8, 0x3583DB4
	0x03583CC4 CMP W8, 0x2
	0x03583CC8 B.LT 0x3583D58
	0x03583CCC ADRP X8, 0xB70000
	0x03583CD0 LDR X8, [X8 + 0x9D0]
	0x03583CD4 MOVZ W1, 0x1
	0x03583CD8 LDR X0, [X8]
	0x03583CDC BL 0x1C16D6C
	0x03583CE0 LDR W8, [X20 + 0x18]
	0x03583CE4 CBZ W8, 0x3583DFC
	0x03583CE8 MOV X21, X0
	0x03583CEC LDR X0, [X20 + 0x20]
	0x03583CF0 CBZ X0, 0x3583DF8
	0x03583CF4 MOV X1, X31
	0x03583CF8 BL 0x3C389D4
	0x03583CFC CBZ X21, 0x3583DF8
	0x03583D00 MOV X22, X0
	0x03583D04 CBZ X0, 0x3583D1C
	0x03583D08 LDR X8, [X21]
	0x03583D0C MOV X0, X22
	0x03583D10 LDR X1, [X8 + 0x40]
	0x03583D14 BL 0x1C16E00
	0x03583D18 CBZ X0, 0x3583E00
	0x03583D1C LDR W8, [X21 + 0x18]
	0x03583D20 CBZ W8, 0x3583DFC
	0x03583D24 STR X22, [X21 + 0x20]
	0x03583D28 LDR X0, [X23]
	0x03583D2C LDR W8, [X0 + 0xE0]
	0x03583D30 CBNZ W8, 0x3583D38
	0x03583D34 BL 0x1C16DFC
	0x03583D38 ADRP X8, 0xBB3000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xE5D000
	006 Move W8, [X21+3817]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {24}
	013 Move X0, 0xB71000
	014 Move X0, [X0+2504]
	015 Call 0x1C17CF4
	016 Move X0, 0xB76000
	017 Move X0, [X0+840]
	018 Call 0x1C17CF4
	019 Move X0, 0xBB4000
	020 Move X0, [X0+1880]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X21+3817], W8
	024 Move X0, X19
	025 Move W1, W31
	026 Move [X19+40], W31
	027 Call MicrophonePermission.set_HasPermission, X0, X1
	028 Move X8, [X19+32]
	029 Compare X8, 0
	030 JumpIfEqual {102}
	031 Move X9, 0xBB4000
	032 Move X9, [X9+1880]
	033 Move X21, 0xB71000
	034 Move X19, [X8+24]
	035 Move X0, X20
	036 Move X1, [X9]
	037 Move X21, [X21+2504]
	038 Move X2, X31
	039 Call String.Concat, X0, X1
	040 Move X21, [X21]
	041 Move X20, X0
	042 Move X8, [X21+56]
	043 Compare X8, 0
	044 JumpIfNotEqual {48}
	045 Move X0, X21
	046 Call 0x1C5D6E0
	047 Move X8, [X21+56]
	048 Move X0, [X8+16]
	049 Move W8, [X0+309]
	050 Move TEMP, X8
	051 And TEMP, TEMP, 1
	052 Compare TEMP, 1
	053 JumpIfEqual {55}
	054 Call 0x1C5D684
	055 Move W8, [X0+224]
	056 Compare W8, 0
	057 JumpIfNotEqual {59}
	058 Call 0x1C17DFC
	059 Move X8, [X21+56]
	060 Move X0, [X8+16]
	061 Move W8, [X0+309]
	062 Move TEMP, X8
	063 And TEMP, TEMP, 1
	064 Compare TEMP, 1
	065 JumpIfEqual {67}
	066 Call 0x1C5D684
	067 Compare X19, 0
	068 JumpIfEqual {102}
	069 Move X10, 0xB76000
	070 Move X9, [X0+184]
	071 Move X8, [X19]
	072 Move X10, [X10+840]
	073 Move X21, [X9]
	074 NotImplemented "Instruction LDRH not yet implemented."
	075 Move X1, [X10]
	076 Compare X9, 0
	077 JumpIfEqual {84}
	078 Move X10, [X8+176]
	079 Add X10, X10, 8
	080 NotImplemented "Instruction LDUR not yet implemented."
	081 NotImplemented "Instruction CMP not yet implemented."
	082 Subtract X9, X9, 1
	083 Add X10, X10, 16
	084 Move W2, 1
	085 Move X0, X19
	086 Call 0x1C5D788
	087 Move W9, [X10]
	088 Add W9, W9, 1
	089 Add X8, X8, W9
	090 Add X0, X8, 312
	091 Move X5, [X0]
	092 Move X4, [X0+8]
	093 Move X0, X19
	094 Move X2, X20
	095 Move X20, [X31+16]
	096 Move X19, [X31+24]
	097 Move W1, 3
	098 Move X3, X21
	099 Move X30, [X31+32]
	100 Move X21, [X31+40]
	101 CallNoReturn X5
	102 Call 0x1C17F20

Method: System.Void PermissionCallbacks_PermissionGranted(System.String permissionName)

Disassembly:
	0x03583D3C LDR X8, [X8 + 0x778]
	0x03583D40 MOV X0, X19
	0x03583D44 MOV X2, X21
	0x03583D48 MOV X3, X31
	0x03583D4C LDR X1, [X8]
	0x03583D50 BL 0x3C06D3C
	0x03583D54 LDR X8, [X20 + 0x18]
	0x03583D58 CBZ W8, 0x3583DFC
	0x03583D5C LDR X8, [X20 + 0x20]
	0x03583D60 STR X8, [X19 + 0x48]
	0x03583D64 CBZ X8, 0x3583DF8
	0x03583D68 LDR X8, [X8 + 0x48]
	0x03583D6C CBZ X8, 0x3583DF8
	0x03583D70 LDR X9, [X8 + 0x188]
	0x03583D74 LDR V0, [X19 + 0x28]
	0x03583D78 STR X9, [X19 + 0x50]
	0x03583D7C LDR X8, [X8 + 0x10]
	0x03583D80 FCMP S0, 0x0
	0x03583D84 STR X8, [X19 + 0x40]
	0x03583D88 B.HI 0x3583DA4
	0x03583D8C MOV X0, X31
	0x03583D90 BL 0x3C0E0B0
	0x03583D94 LDR V0, [X19 + 0x30]
	0x03583D98 SCVTF S1, W0
	0x03583D9C FSUB S0, S1, S0
	0x03583DA0 STR S0, [X19 + 0x28]
	0x03583DA4 LDP X20, X19, [X31 + 0x20]
	0x03583DA8 LDP X22, X21, [X31 + 0x10]
	0x03583DAC LDP X30, X23, [X31], #0x30
	0x03583DB0 RET
	0x03583DB4 LDR X0, [X23]
	0x03583DB8 ADRP X20, 0xBB3000
	0x03583DBC LDR W8, [X0 + 0xE0]
	0x03583DC0 LDR X20, [X20 + 0x780]
	0x03583DC4 CBNZ W8, 0x3583DCC
	0x03583DC8 BL 0x1C16DFC
	0x03583DCC LDR X0, [X20]
	0x03583DD0 MOV X1, X19
	0x03583DD4 MOV X2, X31
	0x03583DD8 BL 0x3C065A4
	0x03583DDC MOV X0, X19
	0x03583DE0 LDP X20, X19, [X31 + 0x20]
	0x03583DE4 LDP X22, X21, [X31 + 0x10]
	0x03583DE8 MOV W1, W31
	0x03583DEC MOV X2, X31
	0x03583DF0 LDP X30, X23, [X31], #0x30
	0x03583DF4 B 0x3C32410
	0x03583DF8 BL 0x1C16F20
	0x03583DFC BL 0x1C16F28
	0x03583E00 BL 0x1C16F44
	0x03583E04 MOV X1, X31
	0x03583E08 BL 0x1C16DEC
	0x03583E0C STP X30, X19, [X31 - 0x10]!
	0x03583E10 MOV X19, X0
	0x03583E14 MOVZ W0, 0x9
	0x03583E18 MOV X1, X31
	0x03583E1C BL 0x3C84D24
	0x03583E20 TBZ X0, 0x0, 0x3583E48
	0x03583E24 MOVZ W0, 0x130
	0x03583E28 MOV X1, X31
	0x03583E2C BL 0x3C84CAC
	0x03583E30 TBZ X0, 0x0, 0x3583E48
	0x03583E34 LDRB W8, [X19 + 0x20]
	0x03583E38 MOVZ W9, 0x1
	0x03583E3C STRB W9, [X19 + 0x21]
	0x03583E40 EOR W8, W8, 0x1
	0x03583E44 STRB W8, [X19 + 0x20]
	0x03583E48 LDP X30, X19, [X31], #0x10
	0x03583E4C RET
	0x03583E50 STP D11, D10, [X31 - 0x50]!
	0x03583E54 STP D9, D8, [X31 + 0x10]
	0x03583E58 STR X30, [X31 + 0x20]
	0x03583E5C STP X22, X21, [X31 + 0x30]
	0x03583E60 STP X20, X19, [X31 + 0x40]
	0x03583E64 ADRP X20, 0xE5C000
	0x03583E68 LDRB W8, [X20 + 0xEF1]
	0x03583E6C MOV X19, X0
	0x03583E70 TBNZ X8, 0x0, 0x3583EAC
	0x03583E74 ADRP X0, 0xB97000
	0x03583E78 LDR X0, [X0 + 0x878]
	0x03583E7C BL 0x1C16CF4
	0x03583E80 ADRP X0, 0xBB3000
	0x03583E84 LDR X0, [X0 + 0x7E0]
	0x03583E88 BL 0x1C16CF4
	0x03583E8C ADRP X0, 0xBB3000
	0x03583E90 LDR X0, [X0 + 0x798]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xE5D000
	006 Move W8, [X21+3818]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {24}
	013 Move X0, 0xB71000
	014 Move X0, [X0+2504]
	015 Call 0x1C17CF4
	016 Move X0, 0xB76000
	017 Move X0, [X0+840]
	018 Call 0x1C17CF4
	019 Move X0, 0xBB4000
	020 Move X0, [X0+1888]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X21+3818], W8
	024 Move W1, 1
	025 Move X0, X19
	026 Move [X19+40], W31
	027 Call MicrophonePermission.set_HasPermission, X0, X1
	028 Move X8, [X19+32]
	029 Compare X8, 0
	030 JumpIfEqual {102}
	031 Move X9, 0xBB4000
	032 Move X9, [X9+1888]
	033 Move X21, 0xB71000
	034 Move X19, [X8+24]
	035 Move X0, X20
	036 Move X1, [X9]
	037 Move X21, [X21+2504]
	038 Move X2, X31
	039 Call String.Concat, X0, X1
	040 Move X21, [X21]
	041 Move X20, X0
	042 Move X8, [X21+56]
	043 Compare X8, 0
	044 JumpIfNotEqual {48}
	045 Move X0, X21
	046 Call 0x1C5D6E0
	047 Move X8, [X21+56]
	048 Move X0, [X8+16]
	049 Move W8, [X0+309]
	050 Move TEMP, X8
	051 And TEMP, TEMP, 1
	052 Compare TEMP, 1
	053 JumpIfEqual {55}
	054 Call 0x1C5D684
	055 Move W8, [X0+224]
	056 Compare W8, 0
	057 JumpIfNotEqual {59}
	058 Call 0x1C17DFC
	059 Move X8, [X21+56]
	060 Move X0, [X8+16]
	061 Move W8, [X0+309]
	062 Move TEMP, X8
	063 And TEMP, TEMP, 1
	064 Compare TEMP, 1
	065 JumpIfEqual {67}
	066 Call 0x1C5D684
	067 Compare X19, 0
	068 JumpIfEqual {102}
	069 Move X10, 0xB76000
	070 Move X9, [X0+184]
	071 Move X8, [X19]
	072 Move X10, [X10+840]
	073 Move X21, [X9]
	074 NotImplemented "Instruction LDRH not yet implemented."
	075 Move X1, [X10]
	076 Compare X9, 0
	077 JumpIfEqual {84}
	078 Move X10, [X8+176]
	079 Add X10, X10, 8
	080 NotImplemented "Instruction LDUR not yet implemented."
	081 NotImplemented "Instruction CMP not yet implemented."
	082 Subtract X9, X9, 1
	083 Add X10, X10, 16
	084 Move W2, 1
	085 Move X0, X19
	086 Call 0x1C5D788
	087 Move W9, [X10]
	088 Add W9, W9, 1
	089 Add X8, X8, W9
	090 Add X0, X8, 312
	091 Move X5, [X0]
	092 Move X4, [X0+8]
	093 Move X0, X19
	094 Move X2, X20
	095 Move X20, [X31+16]
	096 Move X19, [X31+24]
	097 Move W1, 3
	098 Move X3, X21
	099 Move X30, [X31+32]
	100 Move X21, [X31+40]
	101 CallNoReturn X5
	102 Call 0x1C17F20

Method: System.Void PermissionCallbacks_PermissionDenied(System.String permissionName)

Disassembly:
	0x03583E94 BL 0x1C16CF4
	0x03583E98 ADRP X0, 0xBB3000
	0x03583E9C LDR X0, [X0 + 0x7E8]
	0x03583EA0 BL 0x1C16CF4
	0x03583EA4 MOVZ W8, 0x1
	0x03583EA8 STRB W8, [X20 + 0xEF1]
	0x03583EAC LDR X0, [X19 + 0x40]
	0x03583EB0 CBZ X0, 0x3583FC8
	0x03583EB4 MOV X1, X31
	0x03583EB8 BL 0x350257C
	0x03583EBC LDRB W8, [X19 + 0x21]
	0x03583EC0 AND W9, W0, 0x1
	0x03583EC4 CMP W8, W9
	0x03583EC8 B.EQ 0x3583EE4
	0x03583ECC LDR X0, [X19 + 0x40]
	0x03583ED0 CBZ X0, 0x3583FC8
	0x03583ED4 CMP W8, 0x0
	0x03583ED8 CSET W1, NE
	0x03583EDC MOV X2, X31
	0x03583EE0 BL 0x3502584
	0x03583EE4 LDRB W8, [X19 + 0x20]
	0x03583EE8 CBZ W8, 0x3583FB0
	0x03583EEC ADRP X8, 0xBB3000
	0x03583EF0 LDR X8, [X8 + 0x798]
	0x03583EF4 ADRP X21, 0xBB3000
	0x03583EF8 ADRP X22, 0xB97000
	0x03583EFC LDR W20, [X19 + 0x38]
	0x03583F00 LDR X0, [X8]
	0x03583F04 LDP S8, S9, [X19 + 0x28]
	0x03583F08 LDP S10, S11, [X19 + 0x30]
	0x03583F0C LDR X21, [X21 + 0x7E0]
	0x03583F10 LDR X22, [X22 + 0x878]
	0x03583F14 BL 0x1C16F10
	0x03583F18 LDR X2, [X21]
	0x03583F1C MOV X1, X19
	0x03583F20 MOV X3, X31
	0x03583F24 MOV X21, X0
	0x03583F28 BL 0x3C6C8E0
	0x03583F2C LDR X22, [X22]
	0x03583F30 LDR X8, [X22 + 0x38]
	0x03583F34 CBNZ X8, 0x3583F44
	0x03583F38 MOV X0, X22
	0x03583F3C BL 0x1C5C6E0
	0x03583F40 LDR X8, [X22 + 0x38]
	0x03583F44 LDR X0, [X8 + 0x10]
	0x03583F48 LDRB W8, [X0 + 0x135]
	0x03583F4C TBNZ X8, 0x0, 0x3583F54
	0x03583F50 BL 0x1C5C684
	0x03583F54 LDR W8, [X0 + 0xE0]
	0x03583F58 CBNZ W8, 0x3583F60
	0x03583F5C BL 0x1C16DFC
	0x03583F60 LDR X8, [X22 + 0x38]
	0x03583F64 ADRP X22, 0xBB3000
	0x03583F68 LDR X0, [X8 + 0x10]
	0x03583F6C LDRB W8, [X0 + 0x135]
	0x03583F70 LDR X22, [X22 + 0x7E8]
	0x03583F74 TBNZ X8, 0x0, 0x3583F7C
	0x03583F78 BL 0x1C5C684
	0x03583F7C LDR X8, [X0 + 0xB8]
	0x03583F80 LDR X2, [X22]
	0x03583F84 MOV W0, W20
	0x03583F88 MOV V0.16B, V8.16B
	0x03583F8C LDR X3, [X8]
	0x03583F90 MOV V1.16B, V9.16B
	0x03583F94 MOV V2.16B, V10.16B
	0x03583F98 MOV V3.16B, V11.16B
	0x03583F9C MOV X1, X21
	0x03583FA0 MOV X4, X31
	0x03583FA4 BL 0x3C6F014
	0x03583FA8 STP S0, S1, [X19 + 0x28]
	0x03583FAC STP S2, S3, [X19 + 0x30]
	0x03583FB0 LDP X20, X19, [X31 + 0x40]
	0x03583FB4 LDP X22, X21, [X31 + 0x30]
	0x03583FB8 LDR X30, [X31 + 0x20]
	0x03583FBC LDP D9, D8, [X31 + 0x10]
	0x03583FC0 LDP D11, D10, [X31], #0x50
	0x03583FC4 RET
	0x03583FC8 BL 0x1C16F20
	0x03583FCC SUB X31, X31, 0xC0
	0x03583FD0 STP X29, X30, [X31 + 0x60]
	0x03583FD4 STP X28, X27, [X31 + 0x70]
	0x03583FD8 STP X26, X25, [X31 + 0x80]
	0x03583FDC STP X24, X23, [X31 + 0x90]
	0x03583FE0 STP X22, X21, [X31 + 0xA0]
	0x03583FE4 STP X20, X19, [X31 + 0xB0]
	0x03583FE8 ADRP X20, 0xE5C000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xE5D000
	006 Move W8, [X21+3819]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {24}
	013 Move X0, 0xB71000
	014 Move X0, [X0+2504]
	015 Call 0x1C17CF4
	016 Move X0, 0xB76000
	017 Move X0, [X0+840]
	018 Call 0x1C17CF4
	019 Move X0, 0xBB4000
	020 Move X0, [X0+1896]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X21+3819], W8
	024 Move X0, X19
	025 Move W1, W31
	026 Move [X19+40], W31
	027 Call MicrophonePermission.set_HasPermission, X0, X1
	028 Move X8, [X19+32]
	029 Compare X8, 0
	030 JumpIfEqual {102}
	031 Move X9, 0xBB4000
	032 Move X9, [X9+1896]
	033 Move X21, 0xB71000
	034 Move X19, [X8+24]
	035 Move X0, X20
	036 Move X1, [X9]
	037 Move X21, [X21+2504]
	038 Move X2, X31
	039 Call String.Concat, X0, X1
	040 Move X21, [X21]
	041 Move X20, X0
	042 Move X8, [X21+56]
	043 Compare X8, 0
	044 JumpIfNotEqual {48}
	045 Move X0, X21
	046 Call 0x1C5D6E0
	047 Move X8, [X21+56]
	048 Move X0, [X8+16]
	049 Move W8, [X0+309]
	050 Move TEMP, X8
	051 And TEMP, TEMP, 1
	052 Compare TEMP, 1
	053 JumpIfEqual {55}
	054 Call 0x1C5D684
	055 Move W8, [X0+224]
	056 Compare W8, 0
	057 JumpIfNotEqual {59}
	058 Call 0x1C17DFC
	059 Move X8, [X21+56]
	060 Move X0, [X8+16]
	061 Move W8, [X0+309]
	062 Move TEMP, X8
	063 And TEMP, TEMP, 1
	064 Compare TEMP, 1
	065 JumpIfEqual {67}
	066 Call 0x1C5D684
	067 Compare X19, 0
	068 JumpIfEqual {102}
	069 Move X10, 0xB76000
	070 Move X9, [X0+184]
	071 Move X8, [X19]
	072 Move X10, [X10+840]
	073 Move X21, [X9]
	074 NotImplemented "Instruction LDRH not yet implemented."
	075 Move X1, [X10]
	076 Compare X9, 0
	077 JumpIfEqual {84}
	078 Move X10, [X8+176]
	079 Add X10, X10, 8
	080 NotImplemented "Instruction LDUR not yet implemented."
	081 NotImplemented "Instruction CMP not yet implemented."
	082 Subtract X9, X9, 1
	083 Add X10, X10, 16
	084 Move W2, 1
	085 Move X0, X19
	086 Call 0x1C5D788
	087 Move W9, [X10]
	088 Add W9, W9, 1
	089 Add X8, X8, W9
	090 Add X0, X8, 312
	091 Move X5, [X0]
	092 Move X4, [X0+8]
	093 Move X0, X19
	094 Move X2, X20
	095 Move X20, [X31+16]
	096 Move X19, [X31+24]
	097 Move W1, 3
	098 Move X3, X21
	099 Move X30, [X31+32]
	100 Move X21, [X31+40]
	101 CallNoReturn X5
	102 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x03583FEC LDRB W8, [X20 + 0xEF2]
	0x03583FF0 MOV X19, X0
	0x03583FF4 TBNZ X8, 0x0, 0x3584138

ISIL:
	001 Move W8, 1
	002 Move [X0+42], W8
	003 Call VoiceComponent..ctor, X0
	004 Return 

