Type: Photon.Voice.Unity.UtilityScripts.PhotonVoiceStatsGui

Method: System.Void Start()

Disassembly:
	0x03584C38 BL 0x3502220
	0x03584C3C LDR X8, [X26]
	0x03584C40 STR W0, [X31 + 0x58]
	0x03584C44 ADD X1, X31, 0x58
	0x03584C48 MOV X0, X8
	0x03584C4C BL 0x1C16E04
	0x03584C50 MOV X23, X0
	0x03584C54 CBZ X0, 0x3584C6C
	0x03584C58 LDR X8, [X27]
	0x03584C5C MOV X0, X23
	0x03584C60 LDR X1, [X8 + 0x40]
	0x03584C64 BL 0x1C16E00
	0x03584C68 CBZ X0, 0x3585338
	0x03584C6C LDR W8, [X27 + 0x18]
	0x03584C70 CMP W8, 0x7
	0x03584C74 B.LS 0x3585330
	0x03584C78 STR X23, [X27 + 0x58]
	0x03584C7C LDR X0, [X19 + 0x40]
	0x03584C80 CBZ X0, 0x3585334
	0x03584C84 MOV X1, X31
	0x03584C88 BL 0x3501F80
	0x03584C8C LDR X8, [X26]
	0x03584C90 STR W0, [X31 + 0x54]
	0x03584C94 ADD X1, X31, 0x54
	0x03584C98 MOV X0, X8
	0x03584C9C BL 0x1C16E04
	0x03584CA0 MOV X23, X0
	0x03584CA4 CBZ X0, 0x3584CBC
	0x03584CA8 LDR X8, [X27]
	0x03584CAC MOV X0, X23
	0x03584CB0 LDR X1, [X8 + 0x40]
	0x03584CB4 BL 0x1C16E00
	0x03584CB8 CBZ X0, 0x3585338
	0x03584CBC LDR W8, [X27 + 0x18]
	0x03584CC0 CMP W8, 0x8
	0x03584CC4 B.LS 0x3585330
	0x03584CC8 STR X23, [X27 + 0x60]
	0x03584CCC LDR X8, [X19 + 0x50]
	0x03584CD0 CBZ X8, 0x3585334
	0x03584CD4 LDR W8, [X8 + 0x4C]
	0x03584CD8 LDR X0, [X26]
	0x03584CDC ADD X1, X31, 0x24
	0x03584CE0 STR W8, [X31 + 0x24]
	0x03584CE4 BL 0x1C16E04
	0x03584CE8 MOV X23, X0
	0x03584CEC CBZ X0, 0x3584D04
	0x03584CF0 LDR X8, [X27]
	0x03584CF4 MOV X0, X23
	0x03584CF8 LDR X1, [X8 + 0x40]
	0x03584CFC BL 0x1C16E00
	0x03584D00 CBZ X0, 0x3585338
	0x03584D04 LDR W8, [X27 + 0x18]
	0x03584D08 CMP W8, 0x9
	0x03584D0C B.LS 0x3585330
	0x03584D10 STR X23, [X27 + 0x68]
	0x03584D14 LDR X8, [X19 + 0x50]
	0x03584D18 CBZ X8, 0x3585334
	0x03584D1C LDR W8, [X8 + 0x50]
	0x03584D20 LDR X0, [X26]
	0x03584D24 ADD X1, X31, 0x20
	0x03584D28 STR W8, [X31 + 0x20]
	0x03584D2C BL 0x1C16E04
	0x03584D30 MOV X23, X0
	0x03584D34 CBZ X0, 0x3584D4C
	0x03584D38 LDR X8, [X27]
	0x03584D3C MOV X0, X23
	0x03584D40 LDR X1, [X8 + 0x40]
	0x03584D44 BL 0x1C16E00
	0x03584D48 CBZ X0, 0x3585338
	0x03584D4C LDR W8, [X27 + 0x18]
	0x03584D50 CMP W8, 0xA
	0x03584D54 B.LS 0x3585330
	0x03584D58 ADRP X8, 0xBB2000
	0x03584D5C LDR X8, [X8 + 0x848]
	0x03584D60 STR X23, [X27 + 0x70]
	0x03584D64 MOV X1, X27
	0x03584D68 MOV X2, X31
	0x03584D6C LDR X0, [X8]
	0x03584D70 BL 0x3227C5C
	0x03584D74 LDR X23, [X29]
	0x03584D78 MOV X27, X0
	0x03584D7C LDR X8, [X23 + 0x38]
	0x03584D80 CBNZ X8, 0x3584D90
	0x03584D84 MOV X0, X23
	0x03584D88 BL 0x1C5C6E0
	0x03584D8C LDR X8, [X23 + 0x38]
	0x03584D90 LDR X0, [X8 + 0x10]
	0x03584D94 LDRB W8, [X0 + 0x135]
	0x03584D98 TBNZ X8, 0x0, 0x3584DA0
	0x03584D9C BL 0x1C5C684
	0x03584DA0 LDR W8, [X0 + 0xE0]
	0x03584DA4 CBNZ W8, 0x3584DAC
	0x03584DA8 BL 0x1C16DFC
	0x03584DAC LDR X8, [X23 + 0x38]
	0x03584DB0 LDR X0, [X8 + 0x10]
	0x03584DB4 LDRB W8, [X0 + 0x135]
	0x03584DB8 TBNZ X8, 0x0, 0x3584DC0
	0x03584DBC BL 0x1C5C684
	0x03584DC0 LDR X8, [X0 + 0xB8]
	0x03584DC4 MOV X0, X27
	0x03584DC8 MOV X2, X31
	0x03584DCC LDR X1, [X8]
	0x03584DD0 BL 0x3C6D158
	0x03584DD4 LDRB W8, [X19 + 0x25]
	0x03584DD8 CBZ W8, 0x3585178
	0x03584DDC LDR X23, [X29]
	0x03584DE0 LDR X8, [X23 + 0x38]
	0x03584DE4 CBNZ X8, 0x3584DF4
	0x03584DE8 MOV X0, X23
	0x03584DEC BL 0x1C5C6E0
	0x03584DF0 LDR X8, [X23 + 0x38]
	0x03584DF4 LDR X0, [X8 + 0x10]
	0x03584DF8 LDRB W8, [X0 + 0x135]
	0x03584DFC TBNZ X8, 0x0, 0x3584E04
	0x03584E00 BL 0x1C5C684
	0x03584E04 LDR W8, [X0 + 0xE0]
	0x03584E08 CBNZ W8, 0x3584E10

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0xE5C000
	008 Move X20, 0xBB3000
	009 Move W8, [X21+3824]
	010 Move X20, [X20+1904]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {33}
	016 Move X0, 0xBB3000
	017 Move X0, [X0+1904]
	018 Call 0x1C17CF4
	019 Move X0, 0xB70000
	020 Move X0, [X0+2600]
	021 Call 0x1C17CF4
	022 Move X0, 0xB70000
	023 Move X0, [X0+2512]
	024 Call 0x1C17CF4
	025 Move X0, 0xBB3000
	026 Move X0, [X0+1912]
	027 Call 0x1C17CF4
	028 Move X0, 0xBB3000
	029 Move X0, [X0+1920]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X21+3824], W8
	033 Move X1, [X20]
	034 Move X23, 0xB70000
	035 Move X23, [X23+2600]
	036 Move X0, X19
	037 Call 0x21A53A8, X0
	038 Compare X0, 0
	039 JumpIfEqual {115}
	040 Move X8, [X0+24]
	041 Move X20, X0
	042 Compare X8, 0
	043 JumpIfEqual {115}
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Move X8, 0xB70000
	046 Move X8, [X8+2512]
	047 Move W1, 1
	048 Move X0, [X8]
	049 Call 0x1C17D6C
	050 Move W8, [X20+24]
	051 Compare W8, 0
	052 JumpIfEqual {138}
	053 Move X21, X0
	054 Move X0, [X20+32]
	055 Compare X0, 0
	056 JumpIfEqual {137}
	057 Move X1, X31
	058 Call Object.get_name, X0
	059 Compare X21, 0
	060 JumpIfEqual {137}
	061 Move X22, X0
	062 Compare X0, 0
	063 JumpIfEqual {70}
	064 Move X8, [X21]
	065 Move X0, X22
	066 Move X1, [X8+64]
	067 Call 0x1C17E00
	068 Compare X0, 0
	069 JumpIfEqual {139}
	070 Move W8, [X21+24]
	071 Compare W8, 0
	072 JumpIfEqual {138}
	073 Move [X21+32], X22
	074 Move X0, [X23]
	075 Move W8, [X0+224]
	076 Compare W8, 0
	077 JumpIfNotEqual {79}
	078 Call 0x1C17DFC
	079 Move X8, 0xBB3000
	080 Move X8, [X8+1912]
	081 Move X0, X19
	082 Move X2, X21
	083 Move X3, X31
	084 Move X1, [X8]
	085 Call Debug.LogWarningFormat, X0, X1, X2
	086 Move X8, [X20+24]
	087 Compare W8, 0
	088 JumpIfEqual {138}
	089 Move X8, [X20+32]
	090 Move [X19+72], X8
	091 Compare X8, 0
	092 JumpIfEqual {137}
	093 Move X8, [X8+72]
	094 Compare X8, 0
	095 JumpIfEqual {137}
	096 Move X9, [X8+392]
	097 Move V0, [X19+40]
	098 Move [X19+80], X9
	099 Move X8, [X8+16]
	100 NotImplemented "Instruction FCMP not yet implemented."
	101 Move [X19+64], X8
	102 Move X0, X31
	103 Call Screen.get_width
	104 Move V0, [X19+48]
	105 NotImplemented "Instruction SCVTF not yet implemented."
	106 Subtract S0, S1, S0
	107 Move [X19+40], S0
	108 Move X20, [X31+32]
	109 Move X19, [X31+40]
	110 Move X22, [X31+16]
	111 Move X21, [X31+24]
	112 Move X30, [X31+48]
	113 Move X23, [X31+56]
	114 Return 
	115 Move X0, [X23]
	116 Move X20, 0xBB3000
	117 Move W8, [X0+224]
	118 Move X20, [X20+1920]
	119 Compare W8, 0
	120 JumpIfNotEqual {122}
	121 Call 0x1C17DFC
	122 Move X0, [X20]
	123 Move X1, X19
	124 Move X2, X31
	125 Call Debug.LogError, X0, X1
	126 Move X0, X19
	127 Move X20, [X31+32]
	128 Move X19, [X31+40]
	129 Move X22, [X31+16]
	130 Move X21, [X31+24]
	131 Move W1, W31
	132 Move X2, X31
	133 Move X30, [X31+48]
	134 Move X23, [X31+56]
	135 Call Behaviour.set_enabled, X0, X1
	136 Return 
	137 Call 0x1C17F20
	138 Call 0x1C17F28
	139 Call 0x1C17F44
	140 Move X1, X31
	141 Call 0x1C17DEC

Method: System.Void Update()

Disassembly:
	0x03584E0C BL 0x1C16DFC
	0x03584E10 LDR X8, [X23 + 0x38]
	0x03584E14 ADRP X20, 0xBB2000
	0x03584E18 MOV X22, X21
	0x03584E1C LDR X0, [X8 + 0x10]
	0x03584E20 LDRB W8, [X0 + 0x135]
	0x03584E24 LDR X20, [X20 + 0x7F0]
	0x03584E28 TBNZ X8, 0x0, 0x3584E30
	0x03584E2C BL 0x1C5C684
	0x03584E30 LDR X8, [X0 + 0xB8]
	0x03584E34 LDR X0, [X20]
	0x03584E38 MOV X2, X31
	0x03584E3C LDR X1, [X8]
	0x03584E40 BL 0x3C6D3A8
	0x03584E44 LDR X0, [X28]
	0x03584E48 MOVZ W1, 0x9
	0x03584E4C MOV X21, X28

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move W0, 9
	005 Move X1, X31
	006 Call Input.GetKeyDown, X0
	007 Move TEMP, X0
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfNotEqual {23}
	011 Move W0, 304
	012 Move X1, X31
	013 Call Input.GetKey, X0
	014 Move TEMP, X0
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfNotEqual {23}
	018 Move W8, [X19+32]
	019 Move W9, 1
	020 Move [X19+33], W9
	021 Xor W8, W8, 1
	022 Move [X19+32], W8
	023 Move X30, [X31+16]
	024 Move X19, [X31+24]
	025 Return 

Method: System.Void OnGUI()

Disassembly:
	0x03584E50 BL 0x1C16D6C
	0x03584E54 LDR X8, [X19 + 0x50]
	0x03584E58 CBZ X8, 0x3585334
	0x03584E5C MOV X23, X0
	0x03584E60 LDR W8, [X8 + 0x38]
	0x03584E64 LDR X0, [X26]
	0x03584E68 ADD X1, X31, 0x48
	0x03584E6C STR W8, [X31 + 0x48]
	0x03584E70 BL 0x1C16E04
	0x03584E74 CBZ X23, 0x3585334
	0x03584E78 MOV X28, X0
	0x03584E7C CBZ X0, 0x3584E94
	0x03584E80 LDR X8, [X23]
	0x03584E84 MOV X0, X28
	0x03584E88 LDR X1, [X8 + 0x40]
	0x03584E8C BL 0x1C16E00
	0x03584E90 CBZ X0, 0x3585338
	0x03584E94 LDR W8, [X23 + 0x18]
	0x03584E98 CBZ W8, 0x3585330
	0x03584E9C STR X28, [X23 + 0x20]
	0x03584EA0 LDR X8, [X19 + 0x48]
	0x03584EA4 CBZ X8, 0x3585334
	0x03584EA8 ADRP X20, 0xB6F000
	0x03584EAC LDR X20, [X20 + 0xA90]
	0x03584EB0 LDR V0, [X8 + 0xB8]
	0x03584EB4 ADD X1, X31, 0x40
	0x03584EB8 LDR X0, [X20]
	0x03584EBC STR S0, [X31 + 0x40]
	0x03584EC0 BL 0x1C16E04
	0x03584EC4 MOV X28, X0
	0x03584EC8 CBZ X0, 0x3584EE0
	0x03584ECC LDR X8, [X23]
	0x03584ED0 MOV X0, X28
	0x03584ED4 LDR X1, [X8 + 0x40]
	0x03584ED8 BL 0x1C16E00
	0x03584EDC CBZ X0, 0x3585338
	0x03584EE0 LDR W8, [X23 + 0x18]
	0x03584EE4 CMP W8, 0x1
	0x03584EE8 B.LS 0x3585330
	0x03584EEC STR X28, [X23 + 0x28]
	0x03584EF0 LDR X8, [X19 + 0x50]
	0x03584EF4 CBZ X8, 0x3585334
	0x03584EF8 LDR W8, [X8 + 0x28]
	0x03584EFC LDR X0, [X26]
	0x03584F00 ADD X1, X31, 0x38
	0x03584F04 STR W8, [X31 + 0x38]
	0x03584F08 BL 0x1C16E04
	0x03584F0C MOV X28, X0
	0x03584F10 CBZ X0, 0x3584F28
	0x03584F14 LDR X8, [X23]
	0x03584F18 MOV X0, X28
	0x03584F1C LDR X1, [X8 + 0x40]
	0x03584F20 BL 0x1C16E00
	0x03584F24 CBZ X0, 0x3585338
	0x03584F28 LDR W8, [X23 + 0x18]
	0x03584F2C CMP W8, 0x2
	0x03584F30 B.LS 0x3585330
	0x03584F34 STR X28, [X23 + 0x30]
	0x03584F38 LDR X8, [X19 + 0x48]
	0x03584F3C CBZ X8, 0x3585334
	0x03584F40 LDR V0, [X8 + 0xBC]
	0x03584F44 LDR X0, [X20]
	0x03584F48 ADD X1, X31, 0x30
	0x03584F4C STR S0, [X31 + 0x30]
	0x03584F50 BL 0x1C16E04
	0x03584F54 MOV X28, X0
	0x03584F58 CBZ X0, 0x3584F70
	0x03584F5C LDR X8, [X23]
	0x03584F60 MOV X0, X28
	0x03584F64 LDR X1, [X8 + 0x40]
	0x03584F68 BL 0x1C16E00
	0x03584F6C CBZ X0, 0x3585338
	0x03584F70 LDR W8, [X23 + 0x18]
	0x03584F74 CMP W8, 0x3
	0x03584F78 B.LS 0x3585330
	0x03584F7C STR X28, [X23 + 0x38]
	0x03584F80 LDR X8, [X19 + 0x48]
	0x03584F84 CBZ X8, 0x3585334
	0x03584F88 LDR V0, [X8 + 0xC0]
	0x03584F8C LDR X0, [X20]
	0x03584F90 ADD X1, X31, 0x5C
	0x03584F94 STR S0, [X31 + 0x5C]
	0x03584F98 BL 0x1C16E04
	0x03584F9C MOV X28, X0
	0x03584FA0 CBZ X0, 0x3584FB8
	0x03584FA4 LDR X8, [X23]
	0x03584FA8 MOV X0, X28
	0x03584FAC LDR X1, [X8 + 0x40]
	0x03584FB0 BL 0x1C16E00
	0x03584FB4 CBZ X0, 0x3585338
	0x03584FB8 LDR W8, [X23 + 0x18]
	0x03584FBC CMP W8, 0x4
	0x03584FC0 B.LS 0x3585330
	0x03584FC4 STR X28, [X23 + 0x40]
	0x03584FC8 LDR X8, [X19 + 0x50]

ISIL:
	001 Move [X31-80], D11
	002 Move [X31-72], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X20, 0xE5C000
	011 Move W8, [X20+3825]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {31}
	017 Move X0, 0xB97000
	018 Move X0, [X0+2168]
	019 Call 0x1C17CF4
	020 Move X0, 0xBB3000
	021 Move X0, [X0+2016]
	022 Call 0x1C17CF4
	023 Move X0, 0xBB3000
	024 Move X0, [X0+1944]
	025 Call 0x1C17CF4
	026 Move X0, 0xBB3000
	027 Move X0, [X0+2024]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X20+3825], W8
	031 Move X0, [X19+64]
	032 Compare X0, 0
	033 JumpIfEqual {120}
	034 Move X1, X31
	035 Call PhotonPeer.get_TrafficStatsEnabled, X0
	036 Move W8, [X19+33]
	037 And W9, W0, 1
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Move X0, [X19+64]
	040 Compare X0, 0
	041 JumpIfEqual {120}
	042 NotImplemented "Instruction CMP not yet implemented."
	043 NotImplemented "Instruction CSET not yet implemented."
	044 Move X2, X31
	045 Call PhotonPeer.set_TrafficStatsEnabled, X0, X1
	046 Move W8, [X19+32]
	047 Compare W8, 0
	048 JumpIfEqual {110}
	049 Move X8, 0xBB3000
	050 Move X8, [X8+1944]
	051 Move X21, 0xBB3000
	052 Move X22, 0xB97000
	053 Move W20, [X19+56]
	054 Move X0, [X8]
	055 Move S8, [X19+40]
	056 Move S9, [X19+44]
	057 Move S10, [X19+48]
	058 Move S11, [X19+52]
	059 Move X21, [X21+2016]
	060 Move X22, [X22+2168]
	061 Call 0x1C17F10
	062 Move X2, [X21]
	063 Move X1, X19
	064 Move X3, X31
	065 Move X21, X0
	066 Call WindowFunction..ctor, X0, X1, X2
	067 Move X22, [X22]
	068 Move X8, [X22+56]
	069 Compare X8, 0
	070 JumpIfNotEqual {74}
	071 Move X0, X22
	072 Call 0x1C5D6E0
	073 Move X8, [X22+56]
	074 Move X0, [X8+16]
	075 Move W8, [X0+309]
	076 Move TEMP, X8
	077 And TEMP, TEMP, 1
	078 Compare TEMP, 1
	079 JumpIfEqual {81}
	080 Call 0x1C5D684
	081 Move W8, [X0+224]
	082 Compare W8, 0
	083 JumpIfNotEqual {85}
	084 Call 0x1C17DFC
	085 Move X8, [X22+56]
	086 Move X22, 0xBB3000
	087 Move X0, [X8+16]
	088 Move W8, [X0+309]
	089 Move X22, [X22+2024]
	090 Move TEMP, X8
	091 And TEMP, TEMP, 1
	092 Compare TEMP, 1
	093 JumpIfEqual {95}
	094 Call 0x1C5D684
	095 Move X8, [X0+184]
	096 Move X2, [X22]
	097 Move W0, W20
	098 Move V0, V8
	099 Move X3, [X8]
	100 Move V1, V9
	101 Move V2, V10
	102 Move V3, V11
	103 Move X1, X21
	104 Move X4, X31
	105 Call GUILayout.Window, X0, X1, X2, X3, X4
	106 Move [X19+40], S0
	107 Move [X19+48], S1
	108 Move [X19+48], S2
	109 Move [X19+56], S3
	110 Move X20, [X31+64]
	111 Move X19, [X31+72]
	112 Move X22, [X31+48]
	113 Move X21, [X31+56]
	114 Move X30, [X31+32]
	115 Move D9, [X31+16]
	116 Move D8, [X31+24]
	117 Move D11, [X31+80]
	118 Move D10, [X31+88]
	119 Return 
	120 Call 0x1C17F20

Method: System.Void TrafficStatsWindow(System.Int32 windowId)

Disassembly:
	0x03584FCC CBZ X8, 0x3585334
	0x03584FD0 LDR W8, [X8 + 0x30]
	0x03584FD4 LDR X0, [X26]
	0x03584FD8 ADD X1, X31, 0x58
	0x03584FDC STR W8, [X31 + 0x58]
	0x03584FE0 BL 0x1C16E04
	0x03584FE4 MOV X28, X0
	0x03584FE8 CBZ X0, 0x3585000
	0x03584FEC LDR X8, [X23]
	0x03584FF0 MOV X0, X28
	0x03584FF4 LDR X1, [X8 + 0x40]
	0x03584FF8 BL 0x1C16E00
	0x03584FFC CBZ X0, 0x3585338
	0x03585000 LDR W8, [X23 + 0x18]
	0x03585004 CMP W8, 0x5
	0x03585008 B.LS 0x3585330
	0x0358500C STR X28, [X23 + 0x48]
	0x03585010 LDR X8, [X19 + 0x50]
	0x03585014 CBZ X8, 0x3585334
	0x03585018 LDR W8, [X8 + 0x2C]
	0x0358501C LDR X0, [X26]
	0x03585020 ADD X1, X31, 0x54
	0x03585024 STR W8, [X31 + 0x54]
	0x03585028 BL 0x1C16E04
	0x0358502C MOV X28, X0
	0x03585030 CBZ X0, 0x3585048
	0x03585034 LDR X8, [X23]
	0x03585038 MOV X0, X28
	0x0358503C LDR X1, [X8 + 0x40]
	0x03585040 BL 0x1C16E00
	0x03585044 CBZ X0, 0x3585338
	0x03585048 LDR W8, [X23 + 0x18]
	0x0358504C CMP W8, 0x6
	0x03585050 B.LS 0x3585330
	0x03585054 STR X28, [X23 + 0x50]
	0x03585058 LDR X0, [X19 + 0x50]
	0x0358505C CBZ X0, 0x3585334
	0x03585060 MOV X1, X31
	0x03585064 BL 0x355FEB0
	0x03585068 LDR X8, [X26]
	0x0358506C STR W0, [X31 + 0x24]
	0x03585070 ADD X1, X31, 0x24
	0x03585074 MOV X0, X8
	0x03585078 BL 0x1C16E04
	0x0358507C MOV X28, X0
	0x03585080 CBZ X0, 0x3585098
	0x03585084 LDR X8, [X23]
	0x03585088 MOV X0, X28
	0x0358508C LDR X1, [X8 + 0x40]
	0x03585090 BL 0x1C16E00
	0x03585094 CBZ X0, 0x3585338
	0x03585098 LDR W8, [X23 + 0x18]
	0x0358509C CMP W8, 0x7
	0x035850A0 B.LS 0x3585330
	0x035850A4 STR X28, [X23 + 0x58]
	0x035850A8 LDR X0, [X19 + 0x50]
	0x035850AC CBZ X0, 0x3585334
	0x035850B0 MOV X1, X31
	0x035850B4 BL 0x3560010
	0x035850B8 LDR X8, [X26]
	0x035850BC STR W0, [X31 + 0x20]
	0x035850C0 ADD X1, X31, 0x20
	0x035850C4 MOV X0, X8
	0x035850C8 BL 0x1C16E04
	0x035850CC MOV X28, X0
	0x035850D0 CBZ X0, 0x35850E8
	0x035850D4 LDR X8, [X23]
	0x035850D8 MOV X0, X28
	0x035850DC LDR X1, [X8 + 0x40]
	0x035850E0 BL 0x1C16E00
	0x035850E4 CBZ X0, 0x3585338
	0x035850E8 LDR W8, [X23 + 0x18]
	0x035850EC CMP W8, 0x8
	0x035850F0 B.LS 0x3585330
	0x035850F4 ADRP X8, 0xBB1000
	0x035850F8 LDR X8, [X8 + 0x868]
	0x035850FC STR X28, [X23 + 0x60]
	0x03585100 MOV X1, X23
	0x03585104 MOV X2, X31
	0x03585108 LDR X0, [X8]
	0x0358510C BL 0x3227C5C
	0x03585110 LDR X28, [X29]
	0x03585114 MOV X23, X0
	0x03585118 LDR X8, [X28 + 0x38]
	0x0358511C CBNZ X8, 0x358512C
	0x03585120 MOV X0, X28
	0x03585124 BL 0x1C5C6E0
	0x03585128 LDR X8, [X28 + 0x38]
	0x0358512C LDR X0, [X8 + 0x10]
	0x03585130 LDRB W8, [X0 + 0x135]
	0x03585134 TBNZ X8, 0x0, 0x358513C
	0x03585138 BL 0x1C5C684
	0x0358513C LDR W8, [X0 + 0xE0]
	0x03585140 CBNZ W8, 0x3585148
	0x03585144 BL 0x1C16DFC
	0x03585148 LDR X8, [X28 + 0x38]
	0x0358514C LDR X0, [X8 + 0x10]
	0x03585150 LDRB W8, [X0 + 0x135]
	0x03585154 TBNZ X8, 0x0, 0x358515C
	0x03585158 BL 0x1C5C684
	0x0358515C LDR X8, [X0 + 0xB8]
	0x03585160 MOV X0, X23
	0x03585164 MOV X2, X31
	0x03585168 MOV X28, X21
	0x0358516C LDR X1, [X8]
	0x03585170 BL 0x3C6D158
	0x03585174 MOV X21, X22
	0x03585178 LDR W8, [X31 + 0x14]
	0x0358517C TBZ X8, 0x0, 0x35852CC
	0x03585180 LDR X0, [X28]
	0x03585184 MOVZ W1, 0x6
	0x03585188 BL 0x1C16D6C
	0x0358518C CBZ X0, 0x3585334
	0x03585190 LDR X22, [X31 + 0x8]
	0x03585194 MOV X23, X0
	0x03585198 CBZ X21, 0x35851B0
	0x0358519C LDR X8, [X23]
	0x035851A0 MOV X0, X21
	0x035851A4 LDR X1, [X8 + 0x40]
	0x035851A8 BL 0x1C16E00
	0x035851AC CBZ X0, 0x3585338
	0x035851B0 LDR W8, [X23 + 0x18]
	0x035851B4 CBZ W8, 0x3585330
	0x035851B8 LDR X20, [X31 + 0x18]
	0x035851BC STR X21, [X23 + 0x20]
	0x035851C0 CBZ X20, 0x35851DC
	0x035851C4 LDR X8, [X23]
	0x035851C8 MOV X0, X20
	0x035851CC LDR X1, [X8 + 0x40]
	0x035851D0 BL 0x1C16E00
	0x035851D4 CBZ X0, 0x3585338
	0x035851D8 LDR W8, [X23 + 0x18]
	0x035851DC CMP W8, 0x1
	0x035851E0 B.LS 0x3585330
	0x035851E4 STR X20, [X23 + 0x28]
	0x035851E8 CBZ X22, 0x3585204
	0x035851EC LDR X8, [X23]
	0x035851F0 MOV X0, X22
	0x035851F4 LDR X1, [X8 + 0x40]
	0x035851F8 BL 0x1C16E00
	0x035851FC CBZ X0, 0x3585338
	0x03585200 LDR W8, [X23 + 0x18]
	0x03585204 CMP W8, 0x2
	0x03585208 B.LS 0x3585330
	0x0358520C STR X22, [X23 + 0x30]
	0x03585210 CBZ X25, 0x358522C
	0x03585214 LDR X8, [X23]
	0x03585218 MOV X0, X25
	0x0358521C LDR X1, [X8 + 0x40]
	0x03585220 BL 0x1C16E00
	0x03585224 CBZ X0, 0x3585338
	0x03585228 LDR W8, [X23 + 0x18]
	0x0358522C CMP W8, 0x3
	0x03585230 B.LS 0x3585330
	0x03585234 STR X25, [X23 + 0x38]
	0x03585238 CBZ X24, 0x3585254
	0x0358523C LDR X8, [X23]
	0x03585240 MOV X0, X24
	0x03585244 LDR X1, [X8 + 0x40]
	0x03585248 BL 0x1C16E00
	0x0358524C CBZ X0, 0x3585338
	0x03585250 LDR W8, [X23 + 0x18]
	0x03585254 CMP W8, 0x4
	0x03585258 B.LS 0x3585330
	0x0358525C STR X24, [X23 + 0x40]
	0x03585260 CBZ X27, 0x358527C
	0x03585264 LDR X8, [X23]
	0x03585268 MOV X0, X27
	0x0358526C LDR X1, [X8 + 0x40]
	0x03585270 BL 0x1C16E00
	0x03585274 CBZ X0, 0x3585338
	0x03585278 LDR W8, [X23 + 0x18]
	0x0358527C CMP W8, 0x5
	0x03585280 B.LS 0x3585330
	0x03585284 STR X27, [X23 + 0x48]
	0x03585288 ADRP X8, 0xBB1000
	0x0358528C LDR X8, [X8 + 0x820]
	0x03585290 MOV X1, X23
	0x03585294 MOV X2, X31
	0x03585298 LDR X0, [X8]
	0x0358529C BL 0x3227C5C
	0x035852A0 ADRP X8, 0xB6E000
	0x035852A4 LDR X8, [X8 + 0xA28]
	0x035852A8 MOV X20, X0
	0x035852AC LDR X8, [X8]
	0x035852B0 LDR W9, [X8 + 0xE0]
	0x035852B4 CBNZ W9, 0x35852C0
	0x035852B8 MOV X0, X8
	0x035852BC BL 0x1C16DFC
	0x035852C0 MOV X0, X20
	0x035852C4 MOV X1, X31
	0x035852C8 BL 0x3C06048
	0x035852CC ADRP X20, 0xB95000
	0x035852D0 LDR X20, [X20 + 0x4C0]
	0x035852D4 LDR X0, [X20]
	0x035852D8 LDR W8, [X0 + 0xE0]
	0x035852DC CBNZ W8, 0x35852E4
	0x035852E0 BL 0x1C16DFC
	0x035852E4 MOV X0, X31
	0x035852E8 BL 0x3C669F4
	0x035852EC TBZ X0, 0x0, 0x35852F8
	0x035852F0 MOVZ W8, 0x42C80000
	0x035852F4 STR W8, [X19 + 0x34]
	0x035852F8 LDR X0, [X20]
	0x035852FC LDR W8, [X0 + 0xE0]
	0x03585300 CBNZ W8, 0x3585308
	0x03585304 BL 0x1C16DFC
	0x03585308 MOV X0, X31
	0x0358530C BL 0x3C6C880
	0x03585310 LDP X20, X19, [X31 + 0xB0]
	0x03585314 LDP X22, X21, [X31 + 0xA0]
	0x03585318 LDP X24, X23, [X31 + 0x90]
	0x0358531C LDP X26, X25, [X31 + 0x80]
	0x03585320 LDP X28, X27, [X31 + 0x70]
	0x03585324 LDP X29, X30, [X31 + 0x60]
	0x03585328 ADD X31, X31, 0xC0
	0x0358532C RET
	0x03585330 BL 0x1C16F28
	0x03585334 BL 0x1C16F20
	0x03585338 BL 0x1C16F44
	0x0358533C MOV X1, X31
	0x03585340 BL 0x1C16DEC
	0x03585344 ADRP X9, 0xFFFFFFFFFD567000
	0x03585348 LDR V0, [X9 + 0x20]
	0x0358534C ORR W8, W31, 0x1010101
	0x03585350 MOVZ W9, 0xC8
	0x03585354 MOV X1, X31
	0x03585358 STRH W8, [X0 + 0x24]
	0x0358535C STR W8, [X0 + 0x20]
	0x03585360 STUR V0, [X0 + 0x28]
	0x03585364 STR W9, [X0 + 0x38]
	0x03585368 B 0x3C36C30
	0x0358536C STP X30, X23, [X31 - 0x30]!
	0x03585370 STP X22, X21, [X31 + 0x10]
	0x03585374 STP X20, X19, [X31 + 0x20]
	0x03585378 ADRP X23, 0xE5A000
	0x0358537C ADRP X20, 0xBB1000
	0x03585380 ADRP X22, 0xBB1000
	0x03585384 ADRP X21, 0xBB1000
	0x03585388 LDRB W8, [X23 + 0xEF3]
	0x0358538C LDR X20, [X20 + 0x6C0]
	0x03585390 LDR X22, [X22 + 0x508]
	0x03585394 LDR X21, [X21 + 0x870]
	0x03585398 MOV X19, X0
	0x0358539C TBNZ X8, 0x0, 0x35853E4
	0x035853A0 ADRP X0, 0xBB1000
	0x035853A4 LDR X0, [X0 + 0x4B8]
	0x035853A8 BL 0x1C16CF4
	0x035853AC ADRP X0, 0xBB1000
	0x035853B0 LDR X0, [X0 + 0x508]
	0x035853B4 BL 0x1C16CF4
	0x035853B8 ADRP X0, 0xBB1000
	0x035853BC LDR X0, [X0 + 0x6C0]
	0x035853C0 BL 0x1C16CF4
	0x035853C4 ADRP X0, 0xBB1000
	0x035853C8 LDR X0, [X0 + 0x870]
	0x035853CC BL 0x1C16CF4
	0x035853D0 ADRP X0, 0xBB1000
	0x035853D4 LDR X0, [X0 + 0x878]
	0x035853D8 BL 0x1C16CF4
	0x035853DC MOVZ W8, 0x1
	0x035853E0 STRB W8, [X23 + 0xEF3]
	0x035853E4 MOV X0, X19
	0x035853E8 BL 0x35738F8
	0x035853EC LDR X1, [X20]
	0x035853F0 MOV X0, X19
	0x035853F4 BL 0x21A3894
	0x035853F8 STR X0, [X19 + 0x28]
	0x035853FC MOV X20, X0
	0x03585400 LDR X0, [X22]
	0x03585404 BL 0x1C16F10
	0x03585408 LDR X2, [X21]
	0x0358540C MOV X1, X19
	0x03585410 MOV X3, X31
	0x03585414 MOV X21, X0
	0x03585418 BL 0x2A6B948
	0x0358541C CBZ X20, 0x3585478
	0x03585420 ADRP X22, 0xBB1000
	0x03585424 ADRP X23, 0xBB1000
	0x03585428 LDR X22, [X22 + 0x4B8]
	0x0358542C LDR X23, [X23 + 0x878]
	0x03585430 MOV X0, X20
	0x03585434 MOV X1, X21
	0x03585438 BL 0x357DDA8
	0x0358543C LDR X0, [X22]
	0x03585440 LDR X20, [X19 + 0x28]
	0x03585444 BL 0x1C16F10
	0x03585448 LDR X2, [X23]
	0x0358544C MOV X1, X19
	0x03585450 MOV X3, X31
	0x03585454 MOV X21, X0
	0x03585458 BL 0x2A6B948
	0x0358545C CBZ X20, 0x3585478
	0x03585460 MOV X0, X20
	0x03585464 MOV X1, X21
	0x03585468 LDP X20, X19, [X31 + 0x20]
	0x0358546C LDP X22, X21, [X31 + 0x10]
	0x03585470 LDP X30, X23, [X31], #0x30
	0x03585474 B 0x357DC48
	0x03585478 BL 0x1C16F20
	0x0358547C STP X30, X21, [X31 - 0x20]!
	0x03585480 STP X20, X19, [X31 + 0x10]
	0x03585484 ADRP X21, 0xE5A000
	0x03585488 LDRB W8, [X21 + 0xEF4]
	0x0358548C MOV X19, X1
	0x03585490 MOV X20, X0
	0x03585494 TBNZ X8, 0x0, 0x35854AC
	0x03585498 ADRP X0, 0xB72000
	0x0358549C LDR X0, [X0 + 0xAB8]
	0x035854A0 BL 0x1C16CF4
	0x035854A4 MOVZ W8, 0x1
	0x035854A8 STRB W8, [X21 + 0xEF4]
	0x035854AC LDRB W8, [X20 + 0x30]
	0x035854B0 CBZ W8, 0x3585528
	0x035854B4 CBZ X19, 0x3585534
	0x035854B8 LDR X8, [X19 + 0x50]
	0x035854BC CBZ X8, 0x3585534
	0x035854C0 LDR X9, [X20 + 0x28]
	0x035854C4 CBZ X9, 0x3585534
	0x035854C8 LDR X9, [X9 + 0x48]
	0x035854CC CBZ X9, 0x3585534
	0x035854D0 LDR X9, [X9 + 0x108]
	0x035854D4 CBZ X9, 0x3585534
	0x035854D8 LDR W8, [X8 + 0x40]
	0x035854DC LDR W9, [X9 + 0x18]
	0x035854E0 CMP W8, W9
	0x035854E4 B.NE 0x3585528
	0x035854E8 ADRP X8, 0xB72000
	0x035854EC LDR X8, [X8 + 0xAB8]
	0x035854F0 MOV X0, X19
	0x035854F4 LDR X1, [X8]
	0x035854F8 BL 0x21A3894
	0x035854FC CBZ X0, 0x3585534
	0x03585500 MOVZ W1, 0x1
	0x03585504 MOV X2, X31
	0x03585508 MOV X19, X0
	0x0358550C BL 0x3BFD05C
	0x03585510 MOV X0, X19
	0x03585514 LDP X20, X19, [X31 + 0x10]
	0x03585518 FMOV S0, W31
	0x0358551C MOV X1, X31
	0x03585520 LDP X30, X21, [X31], #0x20
	0x03585524 B 0x3BFC8DC
	0x03585528 LDP X20, X19, [X31 + 0x10]
	0x0358552C LDP X30, X21, [X31], #0x20
	0x03585530 RET
	0x03585534 BL 0x1C16F20
	0x03585538 STR X30, [X31 - 0x30]!
	0x0358553C STP X22, X21, [X31 + 0x10]
	0x03585540 STP X20, X19, [X31 + 0x20]
	0x03585544 ADRP X20, 0xE5A000
	0x03585548 ADRP X22, 0xBB1000
	0x0358554C ADRP X21, 0xBB1000
	0x03585550 LDRB W8, [X20 + 0xEF5]
	0x03585554 LDR X22, [X22 + 0x508]
	0x03585558 LDR X21, [X21 + 0x870]
	0x0358555C MOV X19, X0
	0x03585560 TBNZ X8, 0x0, 0x3585584
	0x03585564 ADRP X0, 0xBB1000
	0x03585568 LDR X0, [X0 + 0x508]
	0x0358556C BL 0x1C16CF4
	0x03585570 ADRP X0, 0xBB1000
	0x03585574 LDR X0, [X0 + 0x870]
	0x03585578 BL 0x1C16CF4
	0x0358557C MOVZ W8, 0x1
	0x03585580 STRB W8, [X20 + 0xEF5]
	0x03585584 LDR X0, [X22]
	0x03585588 LDR X20, [X19 + 0x28]
	0x0358558C BL 0x1C16F10
	0x03585590 LDR X2, [X21]
	0x03585594 MOV X1, X19
	0x03585598 MOV X3, X31
	0x0358559C MOV X21, X0
	0x035855A0 BL 0x2A6B948
	0x035855A4 CBZ X20, 0x35855C0
	0x035855A8 MOV X0, X20
	0x035855AC MOV X1, X21
	0x035855B0 LDP X20, X19, [X31 + 0x20]
	0x035855B4 LDP X22, X21, [X31 + 0x10]
	0x035855B8 LDR X30, [X31], #0x30
	0x035855BC B 0x357DE58
	0x035855C0 BL 0x1C16F20
	0x035855C4 SUB X31, X31, 0x90
	0x035855C8 STP X29, X30, [X31 + 0x30]
	0x035855CC STP X28, X27, [X31 + 0x40]
	0x035855D0 STP X26, X25, [X31 + 0x50]
	0x035855D4 STP X24, X23, [X31 + 0x60]
	0x035855D8 STP X22, X21, [X31 + 0x70]
	0x035855DC STP X20, X19, [X31 + 0x80]
	0x035855E0 ADRP X20, 0xE5A000
	0x035855E4 ADRP X22, 0xBB1000
	0x035855E8 LDRB W8, [X20 + 0xEF6]
	0x035855EC LDR X22, [X22 + 0x880]
	0x035855F0 MOV X19, X1
	0x035855F4 MOV X21, X0
	0x035855F8 TBNZ X8, 0x0, 0x358567C
	0x035855FC ADRP X0, 0xB73000
	0x03585600 LDR X0, [X0 + 0x358]
	0x03585604 BL 0x1C16CF4
	0x03585608 ADRP X0, 0xB6F000
	0x0358560C LDR X0, [X0 + 0xE70]
	0x03585610 BL 0x1C16CF4
	0x03585614 ADRP X0, 0xB73000
	0x03585618 LDR X0, [X0 + 0x348]
	0x0358561C BL 0x1C16CF4
	0x03585620 ADRP X0, 0xB6E000
	0x03585624 LDR X0, [X0 + 0x9D0]
	0x03585628 BL 0x1C16CF4
	0x0358562C ADRP X0, 0xBB1000
	0x03585630 LDR X0, [X0 + 0x888]
	0x03585634 BL 0x1C16CF4
	0x03585638 ADRP X0, 0xBB1000
	0x0358563C LDR X0, [X0 + 0x890]
	0x03585640 BL 0x1C16CF4
	0x03585644 ADRP X0, 0xBB1000
	0x03585648 LDR X0, [X0 + 0x880]
	0x0358564C BL 0x1C16CF4
	0x03585650 ADRP X0, 0xB73000
	0x03585654 LDR X0, [X0 + 0x390]
	0x03585658 BL 0x1C16CF4
	0x0358565C ADRP X0, 0xBB1000
	0x03585660 LDR X0, [X0 + 0x898]
	0x03585664 BL 0x1C16CF4
	0x03585668 ADRP X0, 0xBB1000
	0x0358566C LDR X0, [X0 + 0x8A0]
	0x03585670 BL 0x1C16CF4
	0x03585674 MOVZ W8, 0x1
	0x03585678 STRB W8, [X20 + 0xEF6]
	0x0358567C LDR X0, [X22]
	0x03585680 BL 0x1C16F10
	0x03585684 MOV X1, X31
	0x03585688 MOV X20, X0
	0x0358568C BL 0x33BDD8C
	0x03585690 CBZ X20, 0x358589C
	0x03585694 MOV X1, X19
	0x03585698 STR X21, [X20 + 0x18]
	0x0358569C BL 0x35858B8
	0x035856A0 LDR X8, [X21 + 0x20]
	0x035856A4 CBZ X8, 0x358589C
	0x035856A8 ADRP X9, 0xB6E000
	0x035856AC LDR X9, [X9 + 0x9D0]
	0x035856B0 MOV X21, X0
	0x035856B4 LDR X22, [X8 + 0x18]
	0x035856B8 MOVZ W1, 0x2
	0x035856BC LDR X0, [X9]
	0x035856C0 BL 0x1C16D6C
	0x035856C4 CBZ X19, 0x358589C
	0x035856C8 ADRP X8, 0xB73000
	0x035856CC LDP V2, V0, [X19 + 0x20]
	0x035856D0 LDR V1, [X19 + 0x1]
	0x035856D4 LDR X8, [X8 + 0x390]
	0x035856D8 MOV X23, X0
	0x035856DC ADD X1, X31, 0x0
	0x035856E0 STP V2, V0, [X31 + 0x10]
	0x035856E4 LDR X0, [X8]
	0x035856E8 STR V1, [X31]
	0x035856EC BL 0x1C16E04
	0x035856F0 CBZ X23, 0x358589C
	0x035856F4 MOV X24, X0
	0x035856F8 CBZ X0, 0x3585710
	0x035856FC LDR X8, [X23]
	0x03585700 MOV X0, X24
	0x03585704 LDR X1, [X8 + 0x40]
	0x03585708 BL 0x1C16E00
	0x0358570C CBZ X0, 0x35858A4
	0x03585710 LDR W8, [X23 + 0x18]
	0x03585714 CBZ W8, 0x35858A0
	0x03585718 STR X24, [X23 + 0x20]
	0x0358571C CBZ X21, 0x3585738
	0x03585720 LDR X8, [X23]
	0x03585724 MOV X0, X21
	0x03585728 LDR X1, [X8 + 0x40]
	0x0358572C BL 0x1C16E00
	0x03585730 CBZ X0, 0x35858A4
	0x03585734 LDR W8, [X23 + 0x18]
	0x03585738 CMP W8, 0x1
	0x0358573C B.LS 0x35858A0
	0x03585740 STR X21, [X23 + 0x28]
	0x03585744 CBZ X22, 0x358589C
	0x03585748 ADRP X9, 0xB73000
	0x0358574C ADRP X10, 0xBB1000
	0x03585750 LDR X9, [X9 + 0x348]
	0x03585754 LDR X10, [X10 + 0x8A0]
	0x03585758 LDR X8, [X22]
	0x0358575C ADRP X29, 0xBB1000
	0x03585760 ADRP X28, 0xB73000
	0x03585764 ADRP X27, 0xBB1000
	0x03585768 ADRP X26, 0xB6F000
	0x0358576C ADRP X25, 0xBB1000
	0x03585770 LDR X29, [X29 + 0x898]
	0x03585774 LDR X28, [X28 + 0x358]
	0x03585778 LDR X1, [X9]
	0x0358577C LDRH W9, [X8 + 0x12E]
	0x03585780 LDR X24, [X10]
	0x03585784 LDR X27, [X27 + 0x888]
	0x03585788 LDR X26, [X26 + 0xE70]
	0x0358578C LDR X25, [X25 + 0x890]
	0x03585790 CBZ X9, 0x35857B4
	0x03585794 LDR X10, [X8 + 0xB0]
	0x03585798 ADD X10, X10, 0x8
	0x0358579C LDUR X11, [X10 - 0x8]
	0x035857A0 CMP X11, X1
	0x035857A4 B.EQ 0x35857C4
	0x035857A8 SUBS X9, X9, 0x1
	0x035857AC ADD X10, X10, 0x10
	0x035857B0 B.NE 0x358579C
	0x035857B4 MOVZ W2, 0x1
	0x035857B8 MOV X0, X22
	0x035857BC BL 0x1C5C788
	0x035857C0 B 0x35857D4
	0x035857C4 LDR W9, [X10]
	0x035857C8 ADD W9, W9, 0x1
	0x035857CC ADD X8, X8, W9, 0x4, SXTW
	0x035857D0 ADD X0, X8, 0x138
	0x035857D4 LDP X8, X4, [X0]
	0x035857D8 MOVZ W1, 0x3
	0x035857DC MOV X0, X22
	0x035857E0 MOV X2, X24
	0x035857E4 MOV X3, X23
	0x035857E8 BLR X8
	0x035857EC LDR X0, [X29]
	0x035857F0 LDP W22, W23, [X19 + 0x14]
	0x035857F4 BL 0x1C16F10
	0x035857F8 MOV X24, X0
	0x035857FC MOV X0, X21
	0x03585800 MOV X1, X31
	0x03585804 BL 0x32ED248
	0x03585808 MOV X1, X0
	0x0358580C MOVZ W3, 0x20
	0x03585810 MOV X0, X24
	0x03585814 MOV W2, W22
	0x03585818 MOV W4, W23
	0x0358581C BL 0x3586A70
	0x03585820 MOVZ W8, 0x1
	0x03585824 STRB W8, [X24 + 0x3C]
	0x03585828 STR X24, [X20 + 0x10]
	0x0358582C LDR X0, [X28]
	0x03585830 BL 0x1C16F10
	0x03585834 LDR X2, [X27]
	0x03585838 MOV X1, X20
	0x0358583C MOV X3, X31
	0x03585840 MOV X21, X0
	0x03585844 BL 0x2A6B948
	0x03585848 MOV X0, X19
	0x0358584C MOV X1, X21
	0x03585850 BL 0x357ACBC
	0x03585854 LDR X0, [X26]
	0x03585858 BL 0x1C16F10
	0x0358585C LDR X2, [X25]
	0x03585860 MOV X1, X20
	0x03585864 MOV X3, X31
	0x03585868 MOV X21, X0
	0x0358586C BL 0x3314368
	0x03585870 MOV X0, X19
	0x03585874 MOV X1, X21
	0x03585878 BL 0x357AE1C
	0x0358587C LDP X20, X19, [X31 + 0x80]
	0x03585880 LDP X22, X21, [X31 + 0x70]
	0x03585884 LDP X24, X23, [X31 + 0x60]
	0x03585888 LDP X26, X25, [X31 + 0x50]
	0x0358588C LDP X28, X27, [X31 + 0x40]
	0x03585890 LDP X29, X30, [X31 + 0x30]
	0x03585894 ADD X31, X31, 0x90
	0x03585898 RET
	0x0358589C BL 0x1C16F20
	0x035858A0 BL 0x1C16F28
	0x035858A4 BL 0x1C16F44
	0x035858A8 MOV X1, X31
	0x035858AC BL 0x1C16DEC
	0x035858B0 MOV X1, X31
	0x035858B4 B 0x33BDD8C
	0x035858B8 SUB X31, X31, 0x40
	0x035858BC STR X30, [X31 + 0x10]
	0x035858C0 STP X22, X21, [X31 + 0x20]
	0x035858C4 STP X20, X19, [X31 + 0x30]
	0x035858C8 ADRP X22, 0xE5A000
	0x035858CC ADRP X21, 0xB6E000
	0x035858D0 ADRP X20, 0xB6F000
	0x035858D4 LDRB W8, [X22 + 0xEF7]
	0x035858D8 LDR X21, [X21 + 0x9D0]
	0x035858DC LDR X20, [X20 + 0x9F0]
	0x035858E0 MOV X19, X1
	0x035858E4 TBNZ X8, 0x0, 0x3585950
	0x035858E8 ADRP X0, 0xB6E000
	0x035858EC LDR X0, [X0 + 0x970]
	0x035858F0 BL 0x1C16CF4
	0x035858F4 ADRP X0, 0xB6F000
	0x035858F8 LDR X0, [X0 + 0x9D8]
	0x035858FC BL 0x1C16CF4
	0x03585900 ADRP X0, 0xB6F000
	0x03585904 LDR X0, [X0 + 0x9F0]
	0x03585908 BL 0x1C16CF4
	0x0358590C ADRP X0, 0xB6E000
	0x03585910 LDR X0, [X0 + 0x758]
	0x03585914 BL 0x1C16CF4
	0x03585918 ADRP X0, 0xB6E000
	0x0358591C LDR X0, [X0 + 0x9D0]
	0x03585920 BL 0x1C16CF4
	0x03585924 ADRP X0, 0xB95000
	0x03585928 LDR X0, [X0 + 0x1D0]
	0x0358592C BL 0x1C16CF4
	0x03585930 ADRP X0, 0xBB1000
	0x03585934 LDR X0, [X0 + 0x8A8]
	0x03585938 BL 0x1C16CF4
	0x0358593C ADRP X0, 0xBB1000
	0x03585940 LDR X0, [X0 + 0x8B0]
	0x03585944 BL 0x1C16CF4
	0x03585948 MOVZ W8, 0x1
	0x0358594C STRB W8, [X22 + 0xEF7]
	0x03585950 LDR X0, [X21]
	0x03585954 ADRP X21, 0xBB1000
	0x03585958 LDR X21, [X21 + 0x8B0]
	0x0358595C MOVZ W1, 0x5
	0x03585960 BL 0x1C16D6C
	0x03585964 LDR X8, [X20]
	0x03585968 MOV X20, X0
	0x0358596C LDR W9, [X8 + 0xE0]
	0x03585970 CBNZ W9, 0x358597C
	0x03585974 MOV X0, X8
	0x03585978 BL 0x1C16DFC
	0x0358597C MOV X0, X31
	0x03585980 BL 0x33616A4
	0x03585984 LDR X1, [X21]
	0x03585988 STR X0, [X31 + 0x18]
	0x0358598C ADD X0, X31, 0x18
	0x03585990 MOV X2, X31
	0x03585994 BL 0x33622A8
	0x03585998 CBZ X20, 0x3585B7C
	0x0358599C MOV X21, X0
	0x035859A0 CBZ X0, 0x35859B8
	0x035859A4 LDR X8, [X20]
	0x035859A8 MOV X0, X21
	0x035859AC LDR X1, [X8 + 0x40]
	0x035859B0 BL 0x1C16E00
	0x035859B4 CBZ X0, 0x3585B70
	0x035859B8 LDR W8, [X20 + 0x18]
	0x035859BC CBZ W8, 0x3585B6C
	0x035859C0 ADRP X22, 0xB6E000
	0x035859C4 LDR X22, [X22 + 0x758]
	0x035859C8 MOVZ W1, 0x3E8
	0x035859CC MOV W0, W31
	0x035859D0 MOV X2, X31
	0x035859D4 STR X21, [X20 + 0x20]
	0x035859D8 BL 0x3C309A8
	0x035859DC LDR X8, [X22]
	0x035859E0 STR W0, [X31 + 0xC]
	0x035859E4 ADD X1, X31, 0xC
	0x035859E8 MOV X0, X8
	0x035859EC BL 0x1C16E04
	0x035859F0 MOV X21, X0
	0x035859F4 CBZ X0, 0x3585A0C
	0x035859F8 LDR X8, [X20]
	0x035859FC MOV X0, X21
	0x03585A00 LDR X1, [X8 + 0x40]
	0x03585A04 BL 0x1C16E00
	0x03585A08 CBZ X0, 0x3585B70
	0x03585A0C LDR W8, [X20 + 0x18]
	0x03585A10 CMP W8, 0x1
	0x03585A14 B.LS 0x3585B6C
	0x03585A18 STR X21, [X20 + 0x28]
	0x03585A1C CBZ X19, 0x3585B7C
	0x03585A20 LDR W8, [X19 + 0x48]
	0x03585A24 LDR X0, [X22]
	0x03585A28 ADD X1, X31, 0x8
	0x03585A2C STR W8, [X31 + 0x8]
	0x03585A30 BL 0x1C16E04
	0x03585A34 MOV X21, X0
	0x03585A38 CBZ X0, 0x3585A50
	0x03585A3C LDR X8, [X20]
	0x03585A40 MOV X0, X21
	0x03585A44 LDR X1, [X8 + 0x40]
	0x03585A48 BL 0x1C16E00
	0x03585A4C CBZ X0, 0x3585B70
	0x03585A50 LDR W8, [X20 + 0x18]
	0x03585A54 CMP W8, 0x2
	0x03585A58 B.LS 0x3585B6C
	0x03585A5C STR X21, [X20 + 0x30]
	0x03585A60 LDR W8, [X19 + 0x40]
	0x03585A64 LDR X0, [X22]
	0x03585A68 ADD X1, X31, 0x4
	0x03585A6C STR W8, [X31 + 0x4]
	0x03585A70 BL 0x1C16E04
	0x03585A74 MOV X21, X0
	0x03585A78 CBZ X0, 0x3585A90
	0x03585A7C LDR X8, [X20]
	0x03585A80 MOV X0, X21
	0x03585A84 LDR X1, [X8 + 0x40]
	0x03585A88 BL 0x1C16E00
	0x03585A8C CBZ X0, 0x3585B70
	0x03585A90 LDR W8, [X20 + 0x18]
	0x03585A94 CMP W8, 0x3
	0x03585A98 B.LS 0x3585B6C
	0x03585A9C ADRP X8, 0xB6F000
	0x03585AA0 LDR X8, [X8 + 0x9D8]
	0x03585AA4 STR X21, [X20 + 0x38]
	0x03585AA8 LDRB W9, [X19 + 0x44]
	0x03585AAC ADD X1, X31, 0x0
	0x03585AB0 LDR X0, [X8]
	0x03585AB4 STRB W9, [X31]
	0x03585AB8 BL 0x1C16E04
	0x03585ABC MOV X19, X0
	0x03585AC0 CBZ X0, 0x3585AD8
	0x03585AC4 LDR X8, [X20]
	0x03585AC8 MOV X0, X19
	0x03585ACC LDR X1, [X8 + 0x40]
	0x03585AD0 BL 0x1C16E00
	0x03585AD4 CBZ X0, 0x3585B70
	0x03585AD8 LDR W8, [X20 + 0x18]
	0x03585ADC CMP W8, 0x4
	0x03585AE0 B.LS 0x3585B6C
	0x03585AE4 ADRP X8, 0xBB1000
	0x03585AE8 LDR X8, [X8 + 0x8A8]
	0x03585AEC STR X19, [X20 + 0x40]
	0x03585AF0 ADRP X19, 0xB6E000
	0x03585AF4 ADRP X21, 0xB95000
	0x03585AF8 LDR X0, [X8]
	0x03585AFC LDR X19, [X19 + 0x970]
	0x03585B00 LDR X21, [X21 + 0x1D0]
	0x03585B04 MOV X1, X20
	0x03585B08 MOV X2, X31
	0x03585B0C BL 0x3227C5C
	0x03585B10 LDR X8, [X19]
	0x03585B14 MOV X19, X0
	0x03585B18 LDR W9, [X8 + 0xE0]
	0x03585B1C CBNZ W9, 0x3585B28
	0x03585B20 MOV X0, X8
	0x03585B24 BL 0x1C16DFC
	0x03585B28 MOV X0, X31
	0x03585B2C BL 0x3C019C0
	0x03585B30 LDR X8, [X21]
	0x03585B34 MOV X20, X0
	0x03585B38 LDR W9, [X8 + 0xE0]
	0x03585B3C CBNZ W9, 0x3585B48
	0x03585B40 MOV X0, X8
	0x03585B44 BL 0x1C16DFC
	0x03585B48 MOV X0, X20
	0x03585B4C MOV X1, X19
	0x03585B50 MOV X2, X31
	0x03585B54 BL 0x32FCE04
	0x03585B58 LDP X20, X19, [X31 + 0x30]
	0x03585B5C LDP X22, X21, [X31 + 0x20]
	0x03585B60 LDR X30, [X31 + 0x10]
	0x03585B64 ADD X31, X31, 0x40
	0x03585B68 RET
	0x03585B6C BL 0x1C16F28
	0x03585B70 BL 0x1C16F44
	0x03585B74 MOV X1, X31
	0x03585B78 BL 0x1C16DEC
	0x03585B7C BL 0x1C16F20
	0x03585B80 STR X30, [X31 - 0x30]!
	0x03585B84 STP X22, X21, [X31 + 0x10]
	0x03585B88 STP X20, X19, [X31 + 0x20]
	0x03585B8C MOV X22, X0
	0x03585B90 MOV X0, X1
	0x03585B94 MOV X1, X31
	0x03585B98 MOV W19, W4
	0x03585B9C MOV W20, W3
	0x03585BA0 MOV W21, W2
	0x03585BA4 BL 0x32ED248
	0x03585BA8 MOV X1, X0
	0x03585BAC MOV X0, X22
	0x03585BB0 MOV W2, W21
	0x03585BB4 MOV W3, W20
	0x03585BB8 MOV W4, W19
	0x03585BBC BL 0x3586A70
	0x03585BC0 MOVZ W8, 0x1
	0x03585BC4 STRB W8, [X22 + 0x3C]
	0x03585BC8 LDP X20, X19, [X31 + 0x20]
	0x03585BCC LDP X22, X21, [X31 + 0x10]
	0x03585BD0 LDR X30, [X31], #0x30
	0x03585BD4 RET
	0x03585BD8 B 0x357413C
	0x03585BDC STP X30, X21, [X31 - 0x20]!
	0x03585BE0 STP X20, X19, [X31 + 0x10]
	0x03585BE4 ADRP X21, 0xE5A000
	0x03585BE8 LDRB W8, [X21 + 0xEF8]
	0x03585BEC MOV X20, X1
	0x03585BF0 MOV X19, X0
	0x03585BF4 TBNZ X8, 0x0, 0x3585C0C
	0x03585BF8 ADRP X0, 0xB73000
	0x03585BFC LDR X0, [X0 + 0x440]
	0x03585C00 BL 0x1C16CF4
	0x03585C04 MOVZ W8, 0x1
	0x03585C08 STRB W8, [X21 + 0xEF8]
	0x03585C0C CBZ X20, 0x3585C34
	0x03585C10 LDR X1, [X20 + 0x10]
	0x03585C14 CBZ X1, 0x3585C34
	0x03585C18 LDR X0, [X19 + 0x10]
	0x03585C1C CBZ X0, 0x3585C34
	0x03585C20 LDR W3, [X1 + 0x18]
	0x03585C24 LDP X20, X19, [X31 + 0x10]
	0x03585C28 MOV W2, W31
	0x03585C2C LDP X30, X21, [X31], #0x20
	0x03585C30 B 0x3585C38
	0x03585C34 BL 0x1C16F20
	0x03585C38 STP X30, X23, [X31 - 0x30]!
	0x03585C3C STP X22, X21, [X31 + 0x10]
	0x03585C40 STP X20, X19, [X31 + 0x20]
	0x03585C44 ADD W8, W3, W2
	0x03585C48 CMP W8, W2
	0x03585C4C B.LE 0x3585C94
	0x03585C50 MOV X20, X1
	0x03585C54 CBZ X1, 0x3585CA8
	0x03585C58 SXTW X8, W8
	0x03585C5C ADD X9, X20, W2, 0x2, SXTW
	0x03585C60 MOV W19, W2
	0x03585C64 MOV X21, X0
	0x03585C68 ADD X22, X9, 0x20
	0x03585C6C SUB X23, X8, W2, SXTW
	0x03585C70 LDR W8, [X20 + 0x18]
	0x03585C74 CMP W19, W8
	0x03585C78 B.CS 0x3585CA4
	0x03585C7C LDR V0, [X22], #0x4
	0x03585C80 MOV X0, X21
	0x03585C84 BL 0x3586F58
	0x03585C88 SUBS X23, X23, 0x1
	0x03585C8C ADD W19, W19, 0x1
	0x03585C90 B.NE 0x3585C70
	0x03585C94 LDP X20, X19, [X31 + 0x20]
	0x03585C98 LDP X22, X21, [X31 + 0x10]
	0x03585C9C LDP X30, X23, [X31], #0x30
	0x03585CA0 RET
	0x03585CA4 BL 0x1C16F28
	0x03585CA8 BL 0x1C16F20
	0x03585CAC STR X30, [X31 - 0x30]!
	0x03585CB0 STP X22, X21, [X31 + 0x10]
	0x03585CB4 STP X20, X19, [X31 + 0x20]
	0x03585CB8 ADRP X20, 0xE5A000
	0x03585CBC LDRB W8, [X20 + 0xEF9]
	0x03585CC0 MOV X19, X0
	0x03585CC4 TBNZ X8, 0x0, 0x3585CF4
	0x03585CC8 ADRP X0, 0xB6E000
	0x03585CCC LDR X0, [X0 + 0x9C8]
	0x03585CD0 BL 0x1C16CF4
	0x03585CD4 ADRP X0, 0xB73000
	0x03585CD8 LDR X0, [X0 + 0x348]
	0x03585CDC BL 0x1C16CF4
	0x03585CE0 ADRP X0, 0xBB1000
	0x03585CE4 LDR X0, [X0 + 0x8B8]
	0x03585CE8 BL 0x1C16CF4
	0x03585CEC MOVZ W8, 0x1
	0x03585CF0 STRB W8, [X20 + 0xEF9]
	0x03585CF4 LDR X8, [X19 + 0x18]
	0x03585CF8 CBZ X8, 0x3585DF8
	0x03585CFC LDR X9, [X8 + 0x20]
	0x03585D00 CBZ X9, 0x3585DF8
	0x03585D04 ADRP X8, 0xB6E000
	0x03585D08 LDR X8, [X8 + 0x9C8]
	0x03585D0C LDR X20, [X9 + 0x18]
	0x03585D10 LDR X21, [X8]
	0x03585D14 LDR X8, [X21 + 0x38]
	0x03585D18 CBNZ X8, 0x3585D28
	0x03585D1C MOV X0, X21
	0x03585D20 BL 0x1C5C6E0
	0x03585D24 LDR X8, [X21 + 0x38]
	0x03585D28 LDR X0, [X8 + 0x10]
	0x03585D2C LDRB W8, [X0 + 0x135]
	0x03585D30 TBNZ X8, 0x0, 0x3585D38
	0x03585D34 BL 0x1C5C684
	0x03585D38 LDR W8, [X0 + 0xE0]
	0x03585D3C CBNZ W8, 0x3585D44
	0x03585D40 BL 0x1C16DFC
	0x03585D44 LDR X8, [X21 + 0x38]
	0x03585D48 LDR X0, [X8 + 0x10]
	0x03585D4C LDRB W8, [X0 + 0x135]
	0x03585D50 TBNZ X8, 0x0, 0x3585D58
	0x03585D54 BL 0x1C5C684
	0x03585D58 CBZ X20, 0x3585DF8
	0x03585D5C ADRP X9, 0xB73000
	0x03585D60 ADRP X11, 0xBB1000
	0x03585D64 LDR X9, [X9 + 0x348]
	0x03585D68 LDR X10, [X0 + 0xB8]
	0x03585D6C LDR X8, [X20]
	0x03585D70 LDR X11, [X11 + 0x8B8]
	0x03585D74 LDR X1, [X9]
	0x03585D78 LDR X21, [X10]
	0x03585D7C LDRH W9, [X8 + 0x12E]
	0x03585D80 LDR X22, [X11]
	0x03585D84 CBZ X9, 0x3585DA8
	0x03585D88 LDR X10, [X8 + 0xB0]
	0x03585D8C ADD X10, X10, 0x8
	0x03585D90 LDUR X11, [X10 - 0x8]
	0x03585D94 CMP X11, X1
	0x03585D98 B.EQ 0x3585DB8
	0x03585D9C SUBS X9, X9, 0x1
	0x03585DA0 ADD X10, X10, 0x10
	0x03585DA4 B.NE 0x3585D90
	0x03585DA8 MOVZ W2, 0x1
	0x03585DAC MOV X0, X20
	0x03585DB0 BL 0x1C5C788
	0x03585DB4 B 0x3585DC8
	0x03585DB8 LDR W9, [X10]
	0x03585DBC ADD W9, W9, 0x1
	0x03585DC0 ADD X8, X8, W9, 0x4, SXTW
	0x03585DC4 ADD X0, X8, 0x138
	0x03585DC8 LDP X8, X4, [X0]
	0x03585DCC MOVZ W1, 0x3
	0x03585DD0 MOV X0, X20
	0x03585DD4 MOV X2, X22
	0x03585DD8 MOV X3, X21
	0x03585DDC BLR X8
	0x03585DE0 LDR X0, [X19 + 0x10]
	0x03585DE4 CBZ X0, 0x3585DF8
	0x03585DE8 LDP X20, X19, [X31 + 0x20]
	0x03585DEC LDP X22, X21, [X31 + 0x10]
	0x03585DF0 LDR X30, [X31], #0x30
	0x03585DF4 B 0x3585DFC
	0x03585DF8 BL 0x1C16F20
	0x03585DFC STP X30, X21, [X31 - 0x20]!
	0x03585E00 STP X20, X19, [X31 + 0x10]
	0x03585E04 ADRP X21, 0xE5A000
	0x03585E08 ADRP X20, 0xB75000
	0x03585E0C LDRB W8, [X21 + 0xF01]
	0x03585E10 LDR X20, [X20 + 0xC10]
	0x03585E14 MOV X19, X0
	0x03585E18 TBNZ X8, 0x0, 0x3585E30
	0x03585E1C ADRP X0, 0xB75000
	0x03585E20 LDR X0, [X0 + 0xC10]
	0x03585E24 BL 0x1C16CF4
	0x03585E28 MOVZ W8, 0x1
	0x03585E2C STRB W8, [X21 + 0xF01]
	0x03585E30 LDR X8, [X19]
	0x03585E34 MOVZ W1, 0x1
	0x03585E38 MOV X0, X19
	0x03585E3C LDP X9, X2, [X8 + 0x188]
	0x03585E40 BLR X9
	0x03585E44 LDR X0, [X20]
	0x03585E48 LDR W8, [X0 + 0xE0]
	0x03585E4C CBNZ W8, 0x3585E54
	0x03585E50 BL 0x1C16DFC
	0x03585E54 MOV X0, X19
	0x03585E58 LDP X20, X19, [X31 + 0x10]
	0x03585E5C MOV X1, X31
	0x03585E60 LDP X30, X21, [X31], #0x20
	0x03585E64 B 0x33B3E9C
	0x03585E68 SUB X31, X31, 0xC0
	0x03585E6C STR X30, [X31 + 0x60]
	0x03585E70 STP X28, X27, [X31 + 0x70]
	0x03585E74 STP X26, X25, [X31 + 0x80]
	0x03585E78 STP X24, X23, [X31 + 0x90]
	0x03585E7C STP X22, X21, [X31 + 0xA0]
	0x03585E80 STP X20, X19, [X31 + 0xB0]
	0x03585E84 MRS X26, 0xC000
	0x03585E88 LDR X8, [X26 + 0x28]
	0x03585E8C ADRP X21, 0xE5A000
	0x03585E90 MOV X20, X1
	0x03585E94 MOV X19, X0
	0x03585E98 STR X8, [X31 + 0x58]
	0x03585E9C LDRB W8, [X21 + 0xEFA]
	0x03585EA0 TBNZ X8, 0x0, 0x3585F54
	0x03585EA4 ADRP X0, 0xB73000
	0x03585EA8 LDR X0, [X0 + 0x348]
	0x03585EAC BL 0x1C16CF4
	0x03585EB0 ADRP X0, 0xBB1000
	0x03585EB4 LDR X0, [X0 + 0x6E8]
	0x03585EB8 BL 0x1C16CF4
	0x03585EBC ADRP X0, 0xBB1000
	0x03585EC0 LDR X0, [X0 + 0x670]
	0x03585EC4 BL 0x1C16CF4
	0x03585EC8 ADRP X0, 0xB9A000
	0x03585ECC LDR X0, [X0 + 0x160]
	0x03585ED0 BL 0x1C16CF4
	0x03585ED4 ADRP X0, 0xB9A000
	0x03585ED8 LDR X0, [X0 + 0x168]
	0x03585EDC BL 0x1C16CF4
	0x03585EE0 ADRP X0, 0xBB1000
	0x03585EE4 LDR X0, [X0 + 0x6F0]
	0x03585EE8 BL 0x1C16CF4
	0x03585EEC ADRP X0, 0xBB1000
	0x03585EF0 LDR X0, [X0 + 0x678]
	0x03585EF4 BL 0x1C16CF4
	0x03585EF8 ADRP X0, 0xB6E000
	0x03585EFC LDR X0, [X0 + 0x9D0]
	0x03585F00 BL 0x1C16CF4
	0x03585F04 ADRP X0, 0xBB1000
	0x03585F08 LDR X0, [X0 + 0x8C0]
	0x03585F0C BL 0x1C16CF4
	0x03585F10 ADRP X0, 0xBB1000
	0x03585F14 LDR X0, [X0 + 0x8C8]
	0x03585F18 BL 0x1C16CF4
	0x03585F1C ADRP X0, 0xB73000
	0x03585F20 LDR X0, [X0 + 0x390]
	0x03585F24 BL 0x1C16CF4
	0x03585F28 ADRP X0, 0xBB1000
	0x03585F2C LDR X0, [X0 + 0x898]
	0x03585F30 BL 0x1C16CF4
	0x03585F34 ADRP X0, 0xBB1000
	0x03585F38 LDR X0, [X0 + 0x8D0]
	0x03585F3C BL 0x1C16CF4
	0x03585F40 ADRP X0, 0xBB1000
	0x03585F44 LDR X0, [X0 + 0x8D8]
	0x03585F48 BL 0x1C16CF4
	0x03585F4C MOVZ W8, 0x1
	0x03585F50 STRB W8, [X21 + 0xEFA]
	0x03585F54 CBZ X20, 0x3586458
	0x03585F58 LDR X8, [X20 + 0x10]
	0x03585F5C CBZ X8, 0x3586458
	0x03585F60 LDR W9, [X8 + 0x74]
	0x03585F64 LDUR V0, [X8 + 0x64]
	0x03585F68 LDUR V1, [X8 + 0x54]
	0x03585F6C LDP W28, W24, [X8 + 0x48]
	0x03585F70 LDR W25, [X8 + 0x50]
	0x03585F74 STR W9, [X31 + 0x50]
	0x03585F78 STP V1, V0, [X31 + 0x30]
	0x03585F7C BL 0x3586470
	0x03585F80 LDR X8, [X20 + 0x10]
	0x03585F84 CBZ X8, 0x3586428
	0x03585F88 ADRP X27, 0xB9A000
	0x03585F8C LDR X27, [X27 + 0x160]
	0x03585F90 LDR X8, [X8]
	0x03585F94 MOV X21, X0
	0x03585F98 LDR X10, [X27]
	0x03585F9C LDRB W9, [X8 + 0x130]
	0x03585FA0 LDRB W11, [X10 + 0x130]
	0x03585FA4 CMP W9, W11
	0x03585FA8 B.CC 0x3585FC0
	0x03585FAC LDR X12, [X8 + 0xC8]
	0x03585FB0 ADD X11, X12, X11, 0x3, LSL
	0x03585FB4 LDUR X11, [X11 - 0x8]
	0x03585FB8 CMP X11, X10
	0x03585FBC B.EQ 0x3586130
	0x03585FC0 ADRP X27, 0xB9A000
	0x03585FC4 LDR X27, [X27 + 0x168]
	0x03585FC8 LDR X10, [X27]
	0x03585FCC LDRB W11, [X10 + 0x130]
	0x03585FD0 CMP W9, W11
	0x03585FD4 B.CC 0x3586428
	0x03585FD8 LDR X8, [X8 + 0xC8]
	0x03585FDC ADD X8, X8, X11, 0x3, LSL
	0x03585FE0 LDUR X8, [X8 - 0x8]
	0x03585FE4 CMP X8, X10
	0x03585FE8 B.NE 0x3586428
	0x03585FEC ADRP X8, 0xBB1000
	0x03585FF0 LDR X8, [X8 + 0x898]
	0x03585FF4 LDR X0, [X8]
	0x03585FF8 BL 0x1C16F10
	0x03585FFC MOV X22, X0
	0x03586000 MOV X0, X21
	0x03586004 MOV X1, X31
	0x03586008 BL 0x32ED248
	0x0358600C MOV X1, X0
	0x03586010 MOVZ W3, 0x10
	0x03586014 MOV X0, X22
	0x03586018 MOV W2, W24
	0x0358601C MOV W4, W25
	0x03586020 BL 0x3586A70
	0x03586024 MOVZ W8, 0x1
	0x03586028 STRB W8, [X22 + 0x3C]
	0x0358602C LDR X8, [X19 + 0x20]
	0x03586030 STR X22, [X19 + 0x28]
	0x03586034 CBZ X8, 0x3586458
	0x03586038 LDR X22, [X8 + 0x18]
	0x0358603C ADRP X8, 0xB6D000
	0x03586040 LDR X8, [X8 + 0x9D0]
	0x03586044 MOVZ W1, 0x2
	0x03586048 LDR X0, [X8]
	0x0358604C BL 0x1C16D6C
	0x03586050 STP W28, W24, [X31]
	0x03586054 STR W25, [X31 + 0x8]
	0x03586058 ADRP X9, 0xB72000
	0x0358605C LDP V0, V1, [X31 + 0x30]
	0x03586060 LDR W8, [X31 + 0x50]
	0x03586064 LDR X9, [X9 + 0x390]
	0x03586068 MOV X23, X0
	0x0358606C ADD X1, X31, 0x0
	0x03586070 STUR V0, [X31 + 0xC]
	0x03586074 LDR X0, [X9]
	0x03586078 STUR V1, [X31 + 0x1C]
	0x0358607C STR W8, [X31 + 0x2C]
	0x03586080 BL 0x1C16E04
	0x03586084 CBZ X23, 0x3586458
	0x03586088 MOV X24, X0
	0x0358608C CBZ X0, 0x35860A4
	0x03586090 LDR X8, [X23]
	0x03586094 MOV X0, X24
	0x03586098 LDR X1, [X8 + 0x40]
	0x0358609C BL 0x1C16E00
	0x035860A0 CBZ X0, 0x3586460
	0x035860A4 LDR W8, [X23 + 0x18]
	0x035860A8 CBZ W8, 0x358645C
	0x035860AC STR X24, [X23 + 0x20]
	0x035860B0 CBZ X21, 0x35860CC
	0x035860B4 LDR X8, [X23]
	0x035860B8 MOV X0, X21
	0x035860BC LDR X1, [X8 + 0x40]
	0x035860C0 BL 0x1C16E00
	0x035860C4 CBZ X0, 0x3586460
	0x035860C8 LDR W8, [X23 + 0x18]
	0x035860CC CMP W8, 0x1
	0x035860D0 B.LS 0x358645C
	0x035860D4 STR X21, [X23 + 0x28]
	0x035860D8 CBZ X22, 0x3586458
	0x035860DC ADRP X9, 0xB72000
	0x035860E0 LDR X8, [X22]
	0x035860E4 LDR X9, [X9 + 0x348]
	0x035860E8 ADRP X10, 0xBB0000
	0x035860EC LDR X1, [X9]
	0x035860F0 LDR X10, [X10 + 0x8D8]
	0x035860F4 LDRH W9, [X8 + 0x12E]
	0x035860F8 LDR X21, [X10]
	0x035860FC CBZ X9, 0x3586120
	0x03586100 LDR X10, [X8 + 0xB0]
	0x03586104 ADD X10, X10, 0x8
	0x03586108 LDUR X11, [X10 - 0x8]
	0x0358610C CMP X11, X1
	0x03586110 B.EQ 0x3586350
	0x03586114 SUBS X9, X9, 0x1
	0x03586118 ADD X10, X10, 0x10
	0x0358611C B.NE 0x3586108
	0x03586120 MOVZ W2, 0x1
	0x03586124 MOV X0, X22
	0x03586128 BL 0x1C5C788
	0x0358612C B 0x3586360
	0x03586130 ADRP X8, 0xBB0000
	0x03586134 LDR X8, [X8 + 0x898]
	0x03586138 LDR X0, [X8]
	0x0358613C BL 0x1C16F10
	0x03586140 MOV X22, X0
	0x03586144 MOV X0, X21
	0x03586148 MOV X1, X31
	0x0358614C BL 0x32ED248
	0x03586150 MOV X1, X0
	0x03586154 MOVZ W3, 0x20
	0x03586158 MOV X0, X22
	0x0358615C MOV W2, W24
	0x03586160 MOV W4, W25
	0x03586164 BL 0x3586A70
	0x03586168 MOVZ W8, 0x1
	0x0358616C STRB W8, [X22 + 0x3C]
	0x03586170 LDR X8, [X19 + 0x20]
	0x03586174 STR X22, [X19 + 0x28]
	0x03586178 CBZ X8, 0x3586458
	0x0358617C LDR X22, [X8 + 0x18]
	0x03586180 ADRP X8, 0xB6D000
	0x03586184 LDR X8, [X8 + 0x9D0]
	0x03586188 MOVZ W1, 0x2
	0x0358618C LDR X0, [X8]
	0x03586190 BL 0x1C16D6C
	0x03586194 STP W28, W24, [X31]
	0x03586198 STR W25, [X31 + 0x8]
	0x0358619C ADRP X9, 0xB72000
	0x035861A0 LDP V0, V1, [X31 + 0x30]
	0x035861A4 LDR W8, [X31 + 0x50]
	0x035861A8 LDR X9, [X9 + 0x390]
	0x035861AC MOV X23, X0
	0x035861B0 ADD X1, X31, 0x0
	0x035861B4 STUR V0, [X31 + 0xC]
	0x035861B8 LDR X0, [X9]
	0x035861BC STUR V1, [X31 + 0x1C]
	0x035861C0 STR W8, [X31 + 0x2C]
	0x035861C4 BL 0x1C16E04
	0x035861C8 CBZ X23, 0x3586458
	0x035861CC MOV X24, X0
	0x035861D0 CBZ X0, 0x35861E8
	0x035861D4 LDR X8, [X23]
	0x035861D8 MOV X0, X24
	0x035861DC LDR X1, [X8 + 0x40]
	0x035861E0 BL 0x1C16E00
	0x035861E4 CBZ X0, 0x3586460
	0x035861E8 LDR W8, [X23 + 0x18]
	0x035861EC CBZ W8, 0x358645C
	0x035861F0 STR X24, [X23 + 0x20]
	0x035861F4 CBZ X21, 0x3586210
	0x035861F8 LDR X8, [X23]
	0x035861FC MOV X0, X21
	0x03586200 LDR X1, [X8 + 0x40]
	0x03586204 BL 0x1C16E00
	0x03586208 CBZ X0, 0x3586460
	0x0358620C LDR W8, [X23 + 0x18]
	0x03586210 CMP W8, 0x1
	0x03586214 B.LS 0x358645C
	0x03586218 STR X21, [X23 + 0x28]
	0x0358621C CBZ X22, 0x3586458
	0x03586220 ADRP X9, 0xB72000
	0x03586224 LDR X8, [X22]
	0x03586228 LDR X9, [X9 + 0x348]
	0x0358622C ADRP X10, 0xBB0000
	0x03586230 LDR X1, [X9]
	0x03586234 LDR X10, [X10 + 0x8D0]
	0x03586238 LDRH W9, [X8 + 0x12E]
	0x0358623C LDR X21, [X10]
	0x03586240 CBZ X9, 0x3586264
	0x03586244 LDR X10, [X8 + 0xB0]
	0x03586248 ADD X10, X10, 0x8
	0x0358624C LDUR X11, [X10 - 0x8]
	0x03586250 CMP X11, X1
	0x03586254 B.EQ 0x3586274
	0x03586258 SUBS X9, X9, 0x1
	0x0358625C ADD X10, X10, 0x10
	0x03586260 B.NE 0x358624C
	0x03586264 MOVZ W2, 0x1
	0x03586268 MOV X0, X22
	0x0358626C BL 0x1C5C788
	0x03586270 B 0x3586284
	0x03586274 LDR W9, [X10]
	0x03586278 ADD W9, W9, 0x1
	0x0358627C ADD X8, X8, W9, 0x4, SXTW
	0x03586280 ADD X0, X8, 0x138
	0x03586284 LDP X8, X4, [X0]
	0x03586288 MOVZ W1, 0x3
	0x0358628C MOV X0, X22
	0x03586290 MOV X2, X21
	0x03586294 MOV X3, X23
	0x03586298 BLR X8
	0x0358629C ADRP X8, 0xBB0000
	0x035862A0 LDR X20, [X20 + 0x10]
	0x035862A4 LDR X8, [X8 + 0x6E8]
	0x035862A8 MOVZ W1, 0x1
	0x035862AC LDR X0, [X8]
	0x035862B0 BL 0x1C16D6C
	0x035862B4 ADRP X8, 0xBB0000
	0x035862B8 LDR X22, [X19 + 0x28]
	0x035862BC LDR X8, [X8 + 0x8C0]
	0x035862C0 MOV X19, X0
	0x035862C4 LDR X8, [X8]
	0x035862C8 MOV X0, X8
	0x035862CC BL 0x1C16F10
	0x035862D0 MOV X1, X31
	0x035862D4 MOV X21, X0
	0x035862D8 BL 0x33BDD8C
	0x035862DC STR X22, [X21 + 0x10]
	0x035862E0 CBZ X19, 0x3586458
	0x035862E4 LDR X8, [X19]
	0x035862E8 MOV X0, X21
	0x035862EC LDR X1, [X8 + 0x40]
	0x035862F0 BL 0x1C16E00
	0x035862F4 CBZ X0, 0x3586460
	0x035862F8 LDR W8, [X19 + 0x18]
	0x035862FC CBZ W8, 0x358645C
	0x03586300 STR X21, [X19 + 0x20]
	0x03586304 CBZ X20, 0x3586458
	0x03586308 LDR X9, [X20]
	0x0358630C LDR X8, [X27]
	0x03586310 LDRB W11, [X9 + 0x130]
	0x03586314 LDRB W10, [X8 + 0x130]
	0x03586318 CMP W11, W10
	0x0358631C B.CC 0x3586458
	0x03586320 LDR X9, [X9 + 0xC8]
	0x03586324 ADD X9, X9, X10, 0x3, LSL
	0x03586328 LDUR X9, [X9 - 0x8]
	0x0358632C CMP X9, X8
	0x03586330 B.NE 0x3586458
	0x03586334 ADRP X8, 0xBB0000
	0x03586338 LDR X8, [X8 + 0x6F0]
	0x0358633C MOV X0, X20
	0x03586340 MOV X1, X19

ISIL:
	001 Subtract X31, X31, 192
	002 Move [X31+96], X29
	003 Move [X31+104], X30
	004 Move [X31+112], X28
	005 Move [X31+120], X27
	006 Move [X31+128], X26
	007 Move [X31+136], X25
	008 Move [X31+144], X24
	009 Move [X31+152], X23
	010 Move [X31+160], X22
	011 Move [X31+168], X21
	012 Move [X31+176], X20
	013 Move [X31+184], X19
	014 Move X20, 0xE5C000
	015 Move W8, [X20+3826]
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {101}
	021 Move X0, 0xB97000
	022 Move X0, [X0+2168]
	023 Call 0x1C17CF4
	024 Move X0, 0xB70000
	025 Move X0, [X0+2520]
	026 Call 0x1C17CF4
	027 Move X0, 0xB6F000
	028 Move X0, [X0+2600]
	029 Call 0x1C17CF4
	030 Move X0, 0xB96000
	031 Move X0, [X0+1216]
	032 Call 0x1C17CF4
	033 Move X0, 0xB6F000
	034 Move X0, [X0+1880]
	035 Call 0x1C17CF4
	036 Move X0, 0xB71000
	037 Move X0, [X0+2656]
	038 Call 0x1C17CF4
	039 Move X0, 0xB6F000
	040 Move X0, [X0+2512]
	041 Call 0x1C17CF4
	042 Move X0, 0xB6F000
	043 Move X0, [X0+2704]
	044 Call 0x1C17CF4
	045 Move X0, 0xB71000
	046 Move X0, [X0+632]
	047 Call 0x1C17CF4
	048 Move X0, 0xBB2000
	049 Move X0, [X0+2032]
	050 Call 0x1C17CF4
	051 Move X0, 0xBB2000
	052 Move X0, [X0+2040]
	053 Call 0x1C17CF4
	054 Move X0, 0xBB2000
	055 Move X0, [X0+2048]
	056 Call 0x1C17CF4
	057 Move X0, 0xBB2000
	058 Move X0, [X0+2056]
	059 Call 0x1C17CF4
	060 Move X0, 0xBB2000
	061 Move X0, [X0+2064]
	062 Call 0x1C17CF4
	063 Move X0, 0xBB2000
	064 Move X0, [X0+2072]
	065 Call 0x1C17CF4
	066 Move X0, 0xBB2000
	067 Move X0, [X0+2080]
	068 Call 0x1C17CF4
	069 Move X0, 0xBB2000
	070 Move X0, [X0+2088]
	071 Call 0x1C17CF4
	072 Move X0, 0xBB2000
	073 Move X0, [X0+2096]
	074 Call 0x1C17CF4
	075 Move X0, 0xBB2000
	076 Move X0, [X0+2104]
	077 Call 0x1C17CF4
	078 Move X0, 0xBB2000
	079 Move X0, [X0+2112]
	080 Call 0x1C17CF4
	081 Move X0, 0xBB2000
	082 Move X0, [X0+2120]
	083 Call 0x1C17CF4
	084 Move X0, 0xBB2000
	085 Move X0, [X0+2128]
	086 Call 0x1C17CF4
	087 Move X0, 0xB96000
	088 Move X0, [X0+4016]
	089 Call 0x1C17CF4
	090 Move X0, 0xBB2000
	091 Move X0, [X0+2136]
	092 Call 0x1C17CF4
	093 Move X0, 0xBB2000
	094 Move X0, [X0+2144]
	095 Call 0x1C17CF4
	096 Move X0, 0xBB2000
	097 Move X0, [X0+2152]
	098 Call 0x1C17CF4
	099 Move W8, 1
	100 Move [X20+3826], W8
	101 Move X0, [X19+64]
	102 Compare X0, 0
	103 JumpIfEqual {1479}
	104 Move X29, 0xB96000
	105 Move X23, [X0+176]
	106 Move X29, [X29+2168]
	107 Move X1, X31
	108 Call PhotonPeer.get_TrafficStatsElapsedMs, X0
	109 Move X8, 0xF7CF
	110 Move X20, [X29]
	111 NotImplemented "Instruction MOVK not yet implemented."
	112 NotImplemented "Instruction MOVK not yet implemented."
	113 NotImplemented "Instruction MOVK not yet implemented."
	114 NotImplemented "Instruction SMULH not yet implemented."
	115 NotImplemented "Instruction SBFM not yet implemented."
	116 Move X8, [X20+56]
	117 Add X9, X10, X9
	118 Add X10, X0, 999
	119 NotImplemented "Instruction CMP not yet implemented."
	120 NotImplemented "Instruction CSINC not yet implemented."
	121 Compare X8, 0
	122 JumpIfNotEqual {126}
	123 Move X0, X20
	124 Call 0x1C5D6E0
	125 Move X8, [X20+56]
	126 Move X0, [X8+16]
	127 Move W8, [X0+309]
	128 Move TEMP, X8
	129 And TEMP, TEMP, 1
	130 Compare TEMP, 1
	131 JumpIfEqual {133}
	132 Call 0x1C5D684
	133 Move W8, [X0+224]
	134 Compare W8, 0
	135 JumpIfNotEqual {137}
	136 Call 0x1C17DFC
	137 Move X8, [X20+56]
	138 Move X0, [X8+16]
	139 Move W8, [X0+309]
	140 Move TEMP, X8
	141 And TEMP, TEMP, 1
	142 Compare TEMP, 1
	143 JumpIfEqual {145}
	144 Call 0x1C5D684
	145 Move X8, [X0+184]
	146 Move X1, X31
	147 Move X0, [X8]
	148 Call GUILayout.BeginHorizontal, X0
	149 Move X20, [X29]
	150 Move W21, [X19+36]
	151 Move X8, [X20+56]
	152 Compare X8, 0
	153 JumpIfNotEqual {157}
	154 Move X0, X20
	155 Call 0x1C5D6E0
	156 Move X8, [X20+56]
	157 Move X0, [X8+16]
	158 Move W8, [X0+309]
	159 Move TEMP, X8
	160 And TEMP, TEMP, 1
	161 Compare TEMP, 1
	162 JumpIfEqual {164}
	163 Call 0x1C5D684
	164 Move W8, [X0+224]
	165 Compare W8, 0
	166 JumpIfNotEqual {168}
	167 Call 0x1C17DFC
	168 Move X8, [X20+56]
	169 Move X20, 0xBB2000
	170 Move X0, [X8+16]
	171 Move W8, [X0+309]
	172 Move X20, [X20+2056]
	173 Move TEMP, X8
	174 And TEMP, TEMP, 1
	175 Compare TEMP, 1
	176 JumpIfEqual {178}
	177 Call 0x1C5D684
	178 Move X8, [X0+184]
	179 Move X1, [X20]
	180 NotImplemented "Instruction CMP not yet implemented."
	181 NotImplemented "Instruction CSET not yet implemented."
	182 Move X2, [X8]
	183 Move X3, X31
	184 Call GUILayout.Toggle, X0, X1, X2
	185 And W8, W0, 1
	186 Move [X19+36], W8
	187 Move X20, [X29]
	188 Move W21, [X19+34]
	189 Move X8, [X20+56]
	190 Compare X8, 0
	191 JumpIfNotEqual {195}
	192 Move X0, X20
	193 Call 0x1C5D6E0
	194 Move X8, [X20+56]
	195 Move X0, [X8+16]
	196 Move W8, [X0+309]
	197 Move TEMP, X8
	198 And TEMP, TEMP, 1
	199 Compare TEMP, 1
	200 JumpIfEqual {202}
	201 Call 0x1C5D684
	202 Move W8, [X0+224]
	203 Compare W8, 0
	204 JumpIfNotEqual {206}
	205 Call 0x1C17DFC
	206 Move X8, [X20+56]
	207 Move X20, 0xBB2000
	208 Move X0, [X8+16]
	209 Move W8, [X0+309]
	210 Move X20, [X20+2128]
	211 Move TEMP, X8
	212 And TEMP, TEMP, 1
	213 Compare TEMP, 1
	214 JumpIfEqual {216}
	215 Call 0x1C5D684
	216 Move X8, [X0+184]
	217 Move X1, [X20]
	218 NotImplemented "Instruction CMP not yet implemented."
	219 NotImplemented "Instruction CSET not yet implemented."
	220 Move X2, [X8]
	221 Move X3, X31
	222 Call GUILayout.Toggle, X0, X1, X2
	223 And W8, W0, 1
	224 Move [X19+34], W8
	225 Move X20, [X29]
	226 Move W21, [X19+35]
	227 Move X8, [X20+56]
	228 Compare X8, 0
	229 JumpIfNotEqual {233}
	230 Move X0, X20
	231 Call 0x1C5D6E0
	232 Move X8, [X20+56]
	233 Move X0, [X8+16]
	234 Move W8, [X0+309]
	235 Move TEMP, X8
	236 And TEMP, TEMP, 1
	237 Compare TEMP, 1
	238 JumpIfEqual {240}
	239 Call 0x1C5D684
	240 Move W8, [X0+224]
	241 Compare W8, 0
	242 JumpIfNotEqual {244}
	243 Call 0x1C17DFC
	244 Move X8, [X20+56]
	245 Move X20, 0xBB2000
	246 Move X0, [X8+16]
	247 Move W8, [X0+309]
	248 Move X20, [X20+2136]
	249 Move TEMP, X8
	250 And TEMP, TEMP, 1
	251 Compare TEMP, 1
	252 JumpIfEqual {254}
	253 Call 0x1C5D684
	254 Move X8, [X0+184]
	255 Move X1, [X20]
	256 NotImplemented "Instruction CMP not yet implemented."
	257 NotImplemented "Instruction CSET not yet implemented."
	258 Move X2, [X8]
	259 Move X3, X31
	260 Call GUILayout.Toggle, X0, X1, X2
	261 And W8, W0, 1
	262 Move [X19+35], W8
	263 Move X20, [X29]
	264 Move W21, [X19+37]
	265 Move X8, [X20+56]
	266 Compare X8, 0
	267 JumpIfNotEqual {271}
	268 Move X0, X20
	269 Call 0x1C5D6E0
	270 Move X8, [X20+56]
	271 Move X0, [X8+16]
	272 Move W8, [X0+309]
	273 Move TEMP, X8
	274 And TEMP, TEMP, 1
	275 Compare TEMP, 1
	276 JumpIfEqual {278}
	277 Call 0x1C5D684
	278 Move W8, [X0+224]
	279 Compare W8, 0
	280 JumpIfNotEqual {282}
	281 Call 0x1C17DFC
	282 Move X8, [X20+56]
	283 Move X20, 0xBB2000
	284 Move X0, [X8+16]
	285 Move W8, [X0+309]
	286 Move X20, [X20+2096]
	287 Move TEMP, X8
	288 And TEMP, TEMP, 1
	289 Compare TEMP, 1
	290 JumpIfEqual {292}
	291 Call 0x1C5D684
	292 Move X8, [X0+184]
	293 Move X1, [X20]
	294 NotImplemented "Instruction CMP not yet implemented."
	295 NotImplemented "Instruction CSET not yet implemented."
	296 Move X2, [X8]
	297 Move X3, X31
	298 Call GUILayout.Toggle, X0, X1, X2
	299 And W8, W0, 1
	300 Move X0, X31
	301 Move [X19+37], W8
	302 Call GUILayout.EndHorizontal
	303 Compare X23, 0
	304 JumpIfEqual {1479}
	305 Move X26, 0xB6F000
	306 Move X27, 0xBB2000
	307 Move X28, 0xB71000
	308 Move X22, 0xBB2000
	309 Move X26, [X26+1880]
	310 Move X27, [X27+2072]
	311 Move X28, [X28+2656]
	312 Move X22, [X22+2040]
	313 Move X0, X23
	314 Move X1, X31
	315 Call TrafficStatsGameLevel.get_TotalOutgoingMessageCount, X0
	316 Move X8, [X26]
	317 Move [X31+92], W0
	318 Add X1, X31, 92
	319 Move X0, X8
	320 Call 0x1C17E04
	321 Move X20, X0
	322 Move X0, X23
	323 Move X1, X31
	324 Call TrafficStatsGameLevel.get_TotalIncomingMessageCount, X0
	325 Move X8, [X26]
	326 Move [X31+88], W0
	327 Add X1, X31, 88
	328 Move X0, X8
	329 Call 0x1C17E04
	330 Move X21, X0
	331 Move X0, X23
	332 Move X1, X31
	333 Call TrafficStatsGameLevel.get_TotalMessageCount, X0
	334 Move X8, [X26]
	335 Move [X31+84], W0
	336 Add X1, X31, 84
	337 Move X0, X8
	338 Call 0x1C17E04
	339 Move X8, [X27]
	340 Move X3, X0
	341 Move X1, X20
	342 Move X2, X21
	343 Move X0, X8
	344 Move X4, X31
	345 Call String.Format, X0, X1, X2, X3
	346 Move X21, X0
	347 Move X0, [X28]
	348 Add X1, X31, 72
	349 Move [X31+72], X25
	350 Call 0x1C17E04
	351 Move X8, [X22]
	352 Move X1, X0
	353 Move X2, X31
	354 Move X0, X8
	355 Call String.Format, X0, X1
	356 Move [X31+24], X0
	357 Move X0, X23
	358 Move X1, X31
	359 Call TrafficStatsGameLevel.get_TotalOutgoingMessageCount, X0
	360 Move X8, [X28]
	361 Move X9, W0
	362 NotImplemented "Instruction SDIV not yet implemented."
	363 Add X1, X31, 64
	364 Move X0, X8
	365 Move [X31+64], X9
	366 Call 0x1C17E04
	367 Move X22, X0
	368 Move X0, X23
	369 Move X1, X31
	370 Call TrafficStatsGameLevel.get_TotalIncomingMessageCount, X0
	371 Move X8, [X28]
	372 Move X9, W0
	373 NotImplemented "Instruction SDIV not yet implemented."
	374 Add X1, X31, 56
	375 Move X0, X8
	376 Move [X31+56], X9
	377 Call 0x1C17E04
	378 Move X24, X0
	379 Move X0, X23
	380 Move X1, X31
	381 Call TrafficStatsGameLevel.get_TotalMessageCount, X0
	382 Move X8, [X28]
	383 Move X9, W0
	384 NotImplemented "Instruction SDIV not yet implemented."
	385 Add X1, X31, 48
	386 Move X0, X8
	387 Move [X31+48], X9
	388 Call 0x1C17E04
	389 Move X8, [X27]
	390 Move X3, X0
	391 Move X1, X22
	392 Move X2, X24
	393 Move X0, X8
	394 Move X4, X31
	395 Call String.Format, X0, X1, X2, X3
	396 Move X24, [X29]
	397 Move X22, X0
	398 Move X8, [X24+56]
	399 Compare X8, 0
	400 JumpIfNotEqual {404}
	401 Move X0, X24
	402 Call 0x1C5D6E0
	403 Move X8, [X24+56]
	404 Move X0, [X8+16]
	405 Move W8, [X0+309]
	406 Move TEMP, X8
	407 And TEMP, TEMP, 1
	408 Compare TEMP, 1
	409 JumpIfEqual {411}
	410 Call 0x1C5D684
	411 Move W8, [X0+224]
	412 Compare W8, 0
	413 JumpIfNotEqual {415}
	414 Call 0x1C17DFC
	415 Move X8, [X24+56]
	416 Move X0, [X8+16]
	417 Move W8, [X0+309]
	418 Move TEMP, X8
	419 And TEMP, TEMP, 1
	420 Compare TEMP, 1
	421 JumpIfEqual {423}
	422 Call 0x1C5D684
	423 Move X8, [X0+184]
	424 Move X0, X21
	425 Move X2, X31
	426 Move X1, [X8]
	427 Call GUILayout.Label, X0, X1
	428 Move X24, [X29]
	429 Move X8, [X24+56]
	430 Compare X8, 0
	431 JumpIfNotEqual {435}
	432 Move X0, X24
	433 Call 0x1C5D6E0
	434 Move X8, [X24+56]
	435 Move X0, [X8+16]
	436 Move W8, [X0+309]
	437 Move TEMP, X8
	438 And TEMP, TEMP, 1
	439 Compare TEMP, 1
	440 JumpIfEqual {442}
	441 Call 0x1C5D684
	442 Move W8, [X0+224]
	443 Compare W8, 0
	444 JumpIfNotEqual {446}
	445 Call 0x1C17DFC
	446 Move X8, [X24+56]
	447 Move X0, [X8+16]
	448 Move W8, [X0+309]
	449 Move TEMP, X8
	450 And TEMP, TEMP, 1
	451 Compare TEMP, 1
	452 JumpIfEqual {454}
	453 Call 0x1C5D684
	454 Move X8, [X0+184]
	455 Move X0, [X31+24]
	456 Move X2, X31
	457 Move X1, [X8]
	458 Call GUILayout.Label, X0, X1
	459 Move X24, [X29]
	460 Move X8, [X24+56]
	461 Compare X8, 0
	462 JumpIfNotEqual {466}
	463 Move X0, X24
	464 Call 0x1C5D6E0
	465 Move X8, [X24+56]
	466 Move X0, [X8+16]
	467 Move W8, [X0+309]
	468 Move TEMP, X8
	469 And TEMP, TEMP, 1
	470 Compare TEMP, 1
	471 JumpIfEqual {473}
	472 Call 0x1C5D684
	473 Move W8, [X0+224]
	474 Compare W8, 0
	475 JumpIfNotEqual {477}
	476 Call 0x1C17DFC
	477 Move X8, [X24+56]
	478 Move X0, [X8+16]
	479 Move W8, [X0+309]
	480 Move TEMP, X8
	481 And TEMP, TEMP, 1
	482 Compare TEMP, 1
	483 JumpIfEqual {485}
	484 Call 0x1C5D684
	485 Move X8, [X0+184]
	486 Move X0, X22
	487 Move X2, X31
	488 Move X1, [X8]
	489 Call GUILayout.Label, X0, X1
	490 Move W8, [X19+36]
	491 Move [X31+8], X22
	492 Compare W8, 0
	493 JumpIfEqual {646}
	494 Move X24, [X29]
	495 Move X8, [X24+56]
	496 Compare X8, 0
	497 JumpIfNotEqual {501}
	498 Move X0, X24
	499 Call 0x1C5D6E0
	500 Move X8, [X24+56]
	501 Move X0, [X8+16]
	502 Move W8, [X0+309]
	503 Move TEMP, X8
	504 And TEMP, TEMP, 1
	505 Compare TEMP, 1
	506 JumpIfEqual {508}
	507 Call 0x1C5D684
	508 Move W8, [X0+224]
	509 Compare W8, 0
	510 JumpIfNotEqual {512}
	511 Call 0x1C17DFC
	512 Move X8, [X24+56]
	513 Move X0, [X8+16]
	514 Move W8, [X0+309]
	515 Move TEMP, X8
	516 And TEMP, TEMP, 1
	517 Compare TEMP, 1
	518 JumpIfEqual {520}
	519 Call 0x1C5D684
	520 Move X8, [X0+184]
	521 Move X1, X31
	522 Move X0, [X8]
	523 Call GUILayout.BeginHorizontal, X0
	524 Move X24, [X29]
	525 Move W20, [X19+33]
	526 Move X8, [X24+56]
	527 Compare X8, 0
	528 JumpIfNotEqual {532}
	529 Move X0, X24
	530 Call 0x1C5D6E0
	531 Move X8, [X24+56]
	532 Move X0, [X8+16]
	533 Move W8, [X0+309]
	534 Move TEMP, X8
	535 And TEMP, TEMP, 1
	536 Compare TEMP, 1
	537 JumpIfEqual {539}
	538 Call 0x1C5D684
	539 Move W8, [X0+224]
	540 Compare W8, 0
	541 JumpIfNotEqual {543}
	542 Call 0x1C17DFC
	543 Move X8, [X24+56]
	544 Move X24, 0xBB2000
	545 Move X0, [X8+16]
	546 Move W8, [X0+309]
	547 Move X24, [X24+2088]
	548 Move TEMP, X8
	549 And TEMP, TEMP, 1
	550 Compare TEMP, 1
	551 JumpIfEqual {553}
	552 Call 0x1C5D684
	553 Move X8, [X0+184]
	554 Move X1, [X24]
	555 NotImplemented "Instruction CMP not yet implemented."
	556 NotImplemented "Instruction CSET not yet implemented."
	557 Move X2, [X8]
	558 Move X3, X31
	559 Call GUILayout.Toggle, X0, X1, X2
	560 And W8, W0, 1
	561 Move [X19+33], W8
	562 Move X24, [X29]
	563 Move X8, [X24+56]
	564 Compare X8, 0
	565 JumpIfNotEqual {569}
	566 Move X0, X24
	567 Call 0x1C5D6E0
	568 Move X8, [X24+56]
	569 Move X0, [X8+16]
	570 Move W8, [X0+309]
	571 Move TEMP, X8
	572 And TEMP, TEMP, 1
	573 Compare TEMP, 1
	574 JumpIfEqual {576}
	575 Call 0x1C5D684
	576 Move W8, [X0+224]
	577 Compare W8, 0
	578 JumpIfNotEqual {580}
	579 Call 0x1C17DFC
	580 Move X8, [X24+56]
	581 Move X20, 0xB96000
	582 Move X0, [X8+16]
	583 Move W8, [X0+309]
	584 Move X20, [X20+4016]
	585 Move TEMP, X8
	586 And TEMP, TEMP, 1
	587 Compare TEMP, 1
	588 JumpIfEqual {590}
	589 Call 0x1C5D684
	590 Move X8, [X0+184]
	591 Move X0, [X20]
	592 Move X2, X31
	593 Move X1, [X8]
	594 Call GUILayout.Button, X0, X1
	595 Move TEMP, X0
	596 And TEMP, TEMP, 1
	597 Compare TEMP, 1
	598 JumpIfNotEqual {610}
	599 Move X0, [X19+64]
	600 Compare X0, 0
	601 JumpIfEqual {1479}
	602 Move X1, X31
	603 Call PhotonPeer.TrafficStatsReset, X0
	604 Move X0, [X19+64]
	605 Compare X0, 0
	606 JumpIfEqual {1479}
	607 Move W1, 1
	608 Move X2, X31
	609 Call PhotonPeer.set_TrafficStatsEnabled, X0, X1
	610 Move X24, [X29]
	611 Move X8, [X24+56]
	612 Compare X8, 0
	613 JumpIfNotEqual {617}
	614 Move X0, X24
	615 Call 0x1C5D6E0
	616 Move X8, [X24+56]
	617 Move X0, [X8+16]
	618 Move W8, [X0+309]
	619 Move TEMP, X8
	620 And TEMP, TEMP, 1
	621 Compare TEMP, 1
	622 JumpIfEqual {624}
	623 Call 0x1C5D684
	624 Move W8, [X0+224]
	625 Compare W8, 0
	626 JumpIfNotEqual {628}
	627 Call 0x1C17DFC
	628 Move X8, [X24+56]
	629 Move X20, 0xBB2000
	630 Move X0, [X8+16]
	631 Move W8, [X0+309]
	632 Move X20, [X20+2104]
	633 Move TEMP, X8
	634 And TEMP, TEMP, 1
	635 Compare TEMP, 1
	636 JumpIfEqual {638}
	637 Call 0x1C5D684
	638 Move X8, [X0+184]
	639 Move X0, [X20]
	640 Move X2, X31
	641 Move X1, [X8]
	642 Call GUILayout.Button, X0, X1
	643 Move W25, W0
	644 Move X0, X31
	645 Call GUILayout.EndHorizontal
	646 Move W25, W31
	647 Move X28, 0xB71000
	648 Move W8, [X19+35]
	649 Move X28, [X28+632]
	650 Move [X31+20], W25
	651 Compare W8, 0
	652 JumpIfEqual {771}
	653 Move X24, [X29]
	654 Move X8, [X24+56]
	655 Compare X8, 0
	656 JumpIfNotEqual {660}
	657 Move X0, X24
	658 Call 0x1C5D6E0
	659 Move X8, [X24+56]
	660 Move X0, [X8+16]
	661 Move W8, [X0+309]
	662 Move TEMP, X8
	663 And TEMP, TEMP, 1
	664 Compare TEMP, 1
	665 JumpIfEqual {667}
	666 Call 0x1C5D684
	667 Move W8, [X0+224]
	668 Compare W8, 0
	669 JumpIfNotEqual {671}
	670 Call 0x1C17DFC
	671 Move X8, [X24+56]
	672 Move X20, 0xBB2000
	673 Move X0, [X8+16]
	674 Move W8, [X0+309]
	675 Move X20, [X20+2064]
	676 Move TEMP, X8
	677 And TEMP, TEMP, 1
	678 Compare TEMP, 1
	679 JumpIfEqual {681}
	680 Call 0x1C5D684
	681 Move X8, [X0+184]
	682 Move X0, [X20]
	683 Move X2, X31
	684 Move X1, [X8]
	685 Call GUILayout.Box, X0, X1
	686 Move X8, [X19+64]
	687 Compare X8, 0
	688 JumpIfEqual {1479}
	689 Move X9, 0xBB2000
	690 Move X9, [X9+2048]
	691 Move X1, [X8+160]
	692 Move X2, X31
	693 Move X0, [X9]
	694 Call String.Concat, X0, X1
	695 Move X8, [X19+64]
	696 Compare X8, 0
	697 JumpIfEqual {1479}
	698 Move X9, 0xBB2000
	699 Move X9, [X9+2144]
	700 Move X25, X0
	701 Move X1, [X8+168]
	702 Move X2, X31
	703 Move X0, [X9]
	704 Call String.Concat, X0, X1
	705 Move X27, [X29]
	706 Move X24, X0
	707 Move X8, [X27+56]
	708 Compare X8, 0
	709 JumpIfNotEqual {713}
	710 Move X0, X27
	711 Call 0x1C5D6E0
	712 Move X8, [X27+56]
	713 Move X0, [X8+16]
	714 Move W8, [X0+309]
	715 Move TEMP, X8
	716 And TEMP, TEMP, 1
	717 Compare TEMP, 1
	718 JumpIfEqual {720}
	719 Call 0x1C5D684
	720 Move W8, [X0+224]
	721 Compare W8, 0
	722 JumpIfNotEqual {724}
	723 Call 0x1C17DFC
	724 Move X8, [X27+56]
	725 Move X0, [X8+16]
	726 Move W8, [X0+309]
	727 Move TEMP, X8
	728 And TEMP, TEMP, 1
	729 Compare TEMP, 1
	730 JumpIfEqual {732}
	731 Call 0x1C5D684
	732 Move X8, [X0+184]
	733 Move X0, X25
	734 Move X2, X31
	735 Move X1, [X8]
	736 Call GUILayout.Label, X0, X1
	737 Move X27, [X29]
	738 Move X8, [X27+56]
	739 Compare X8, 0
	740 JumpIfNotEqual {744}
	741 Move X0, X27
	742 Call 0x1C5D6E0
	743 Move X8, [X27+56]
	744 Move X0, [X8+16]
	745 Move W8, [X0+309]
	746 Move TEMP, X8
	747 And TEMP, TEMP, 1
	748 Compare TEMP, 1
	749 JumpIfEqual {751}
	750 Call 0x1C5D684
	751 Move W8, [X0+224]
	752 Compare W8, 0
	753 JumpIfNotEqual {755}
	754 Call 0x1C17DFC
	755 Move X8, [X27+56]
	756 Move X0, [X8+16]
	757 Move W8, [X0+309]
	758 Move TEMP, X8
	759 And TEMP, TEMP, 1
	760 Compare TEMP, 1
	761 JumpIfEqual {763}
	762 Call 0x1C5D684
	763 Move X8, [X0+184]
	764 Move X0, X24
	765 Move X2, X31
	766 Move X1, [X8]
	767 Call GUILayout.Label, X0, X1
	768 Move X8, [X28]
	769 Move X8, [X8+184]
	770 Move X27, [X8]
	771 Move X8, [X28]
	772 Move X8, [X8+184]
	773 Move X27, [X8]
	774 Move X24, X27
	775 Move X25, X27
	776 Move X28, 0xB6F000
	777 Move W8, [X19+34]
	778 Move X28, [X28+2512]
	779 Compare W8, 0
	780 JumpIfEqual {1073}
	781 Move X27, [X29]
	782 Move X8, [X27+56]
	783 Compare X8, 0
	784 JumpIfNotEqual {788}
	785 Move X0, X27
	786 Call 0x1C5D6E0
	787 Move X8, [X27+56]
	788 Move X0, [X8+16]
	789 Move W8, [X0+309]
	790 Move TEMP, X8
	791 And TEMP, TEMP, 1
	792 Compare TEMP, 1
	793 JumpIfEqual {795}
	794 Call 0x1C5D684
	795 Move W8, [X0+224]
	796 Compare W8, 0
	797 JumpIfNotEqual {799}
	798 Call 0x1C17DFC
	799 Move X8, [X27+56]
	800 Move X20, 0xBB2000
	801 Move X22, X21
	802 Move X0, [X8+16]
	803 Move W8, [X0+309]
	804 Move X20, [X20+2112]
	805 Move TEMP, X8
	806 And TEMP, TEMP, 1
	807 Compare TEMP, 1
	808 JumpIfEqual {810}
	809 Call 0x1C5D684
	810 Move X8, [X0+184]
	811 Move X0, [X20]
	812 Move X2, X31
	813 Move X1, [X8]
	814 Call GUILayout.Box, X0, X1
	815 Move X0, [X28]
	816 Move W1, 11
	817 Move X21, X28
	818 Call 0x1C17D6C
	819 Move X27, X0
	820 Move W8, [X23+84]
	821 Move X0, [X26]
	822 Add X1, X31, 72
	823 Move [X31+72], W8
	824 Call 0x1C17E04
	825 Compare X27, 0
	826 JumpIfEqual {1479}
	827 Move X28, X0
	828 Compare X0, 0
	829 JumpIfEqual {836}
	830 Move X8, [X27]
	831 Move X0, X28
	832 Move X1, [X8+64]
	833 Call 0x1C17E00
	834 Compare X0, 0
	835 JumpIfEqual {1480}
	836 Move W8, [X27+24]
	837 Compare W8, 0
	838 JumpIfEqual {1478}
	839 Move [X27+32], X28
	840 Move W8, [X23+80]
	841 Move X0, [X26]
	842 Add X1, X31, 64
	843 Move [X31+64], W8
	844 Call 0x1C17E04
	845 Move X28, X0
	846 Compare X0, 0
	847 JumpIfEqual {854}
	848 Move X8, [X27]
	849 Move X0, X28
	850 Move X1, [X8+64]
	851 Call 0x1C17E00
	852 Compare X0, 0
	853 JumpIfEqual {1480}
	854 Move W8, [X27+24]
	855 NotImplemented "Instruction CMP not yet implemented."
	856 Move [X27+40], X28
	857 Move W8, [X23+64]
	858 Move X0, [X26]
	859 Add X1, X31, 56
	860 Move [X31+56], W8
	861 Call 0x1C17E04
	862 Move X28, X0
	863 Compare X0, 0
	864 JumpIfEqual {871}
	865 Move X8, [X27]
	866 Move X0, X28
	867 Move X1, [X8+64]
	868 Call 0x1C17E00
	869 Compare X0, 0
	870 JumpIfEqual {1480}
	871 Move W8, [X27+24]
	872 NotImplemented "Instruction CMP not yet implemented."
	873 Move X20, 0xB70000
	874 Move X20, [X20+2520]
	875 Move [X27+48], X28
	876 Move W8, [X23+76]
	877 Add X1, X31, 44
	878 Move X0, [X20]
	879 Move [X31+44], W8
	880 Call 0x1C17E04
	881 Move X28, X0
	882 Compare X0, 0
	883 JumpIfEqual {890}
	884 Move X8, [X27]
	885 Move X0, X28
	886 Move X1, [X8+64]
	887 Call 0x1C17E00
	888 Compare X0, 0
	889 JumpIfEqual {1480}
	890 Move W8, [X27+24]
	891 NotImplemented "Instruction CMP not yet implemented."
	892 Move [X27+56], X28
	893 Move W8, [X23+56]
	894 Move X0, [X26]
	895 Add X1, X31, 48
	896 Move [X31+48], W8
	897 Call 0x1C17E04
	898 Move X28, X0
	899 Compare X0, 0
	900 JumpIfEqual {907}
	901 Move X8, [X27]
	902 Move X0, X28
	903 Move X1, [X8+64]
	904 Call 0x1C17E00
	905 Compare X0, 0
	906 JumpIfEqual {1480}
	907 Move W8, [X27+24]
	908 NotImplemented "Instruction CMP not yet implemented."
	909 Move [X27+64], X28
	910 Move W8, [X23+60]
	911 Move X0, [X20]
	912 Add X1, X31, 40
	913 Move [X31+40], W8
	914 Call 0x1C17E04
	915 Move X23, X0
	916 Compare X0, 0
	917 JumpIfEqual {924}
	918 Move X8, [X27]
	919 Move X0, X23
	920 Move X1, [X8+64]
	921 Call 0x1C17E00
	922 Compare X0, 0
	923 JumpIfEqual {1480}
	924 Move W8, [X27+24]
	925 NotImplemented "Instruction CMP not yet implemented."
	926 Move [X27+72], X23
	927 Move X0, [X19+64]
	928 Compare X0, 0
	929 JumpIfEqual {1479}
	930 Move X1, X31
	931 Move X28, X21
	932 Move X21, X22
	933 Call PhotonPeer.get_RoundTripTime, X0
	934 Move X8, [X26]
	935 Move [X31+92], W0
	936 Add X1, X31, 92
	937 Move X0, X8
	938 Call 0x1C17E04
	939 Move X23, X0
	940 Compare X0, 0
	941 JumpIfEqual {948}
	942 Move X8, [X27]
	943 Move X0, X23
	944 Move X1, [X8+64]
	945 Call 0x1C17E00
	946 Compare X0, 0
	947 JumpIfEqual {1480}
	948 Move W8, [X27+24]
	949 NotImplemented "Instruction CMP not yet implemented."
	950 Move [X27+80], X23
	951 Move X0, [X19+64]
	952 Compare X0, 0
	953 JumpIfEqual {1479}
	954 Move X1, X31
	955 Call PhotonPeer.get_RoundTripTimeVariance, X0
	956 Move X8, [X26]
	957 Move [X31+88], W0
	958 Add X1, X31, 88
	959 Move X0, X8
	960 Call 0x1C17E04
	961 Move X23, X0
	962 Compare X0, 0
	963 JumpIfEqual {970}
	964 Move X8, [X27]
	965 Move X0, X23
	966 Move X1, [X8+64]
	967 Call 0x1C17E00
	968 Compare X0, 0
	969 JumpIfEqual {1480}
	970 Move W8, [X27+24]
	971 NotImplemented "Instruction CMP not yet implemented."
	972 Move [X27+88], X23
	973 Move X0, [X19+64]
	974 Compare X0, 0
	975 JumpIfEqual {1479}
	976 Move X1, X31
	977 Call PhotonPeer.get_ResentReliableCommands, X0
	978 Move X8, [X26]
	979 Move [X31+84], W0
	980 Add X1, X31, 84
	981 Move X0, X8
	982 Call 0x1C17E04
	983 Move X23, X0
	984 Compare X0, 0
	985 JumpIfEqual {992}
	986 Move X8, [X27]
	987 Move X0, X23
	988 Move X1, [X8+64]
	989 Call 0x1C17E00
	990 Compare X0, 0
	991 JumpIfEqual {1480}
	992 Move W8, [X27+24]
	993 NotImplemented "Instruction CMP not yet implemented."
	994 Move [X27+96], X23
	995 Move X8, [X19+80]
	996 Compare X8, 0
	997 JumpIfEqual {1479}
	998 Move W8, [X8+76]
	999 Move X0, [X26]
	1000 Add X1, X31, 36
	1001 Move [X31+36], W8
	1002 Call 0x1C17E04
	1003 Move X23, X0
	1004 Compare X0, 0
	1005 JumpIfEqual {1012}
	1006 Move X8, [X27]
	1007 Move X0, X23
	1008 Move X1, [X8+64]
	1009 Call 0x1C17E00
	1010 Compare X0, 0
	1011 JumpIfEqual {1480}
	1012 Move W8, [X27+24]
	1013 NotImplemented "Instruction CMP not yet implemented."
	1014 Move [X27+104], X23
	1015 Move X8, [X19+80]
	1016 Compare X8, 0
	1017 JumpIfEqual {1479}
	1018 Move W8, [X8+80]
	1019 Move X0, [X26]
	1020 Add X1, X31, 32
	1021 Move [X31+32], W8
	1022 Call 0x1C17E04
	1023 Move X23, X0
	1024 Compare X0, 0
	1025 JumpIfEqual {1032}
	1026 Move X8, [X27]
	1027 Move X0, X23
	1028 Move X1, [X8+64]
	1029 Call 0x1C17E00
	1030 Compare X0, 0
	1031 JumpIfEqual {1480}
	1032 Move W8, [X27+24]
	1033 NotImplemented "Instruction CMP not yet implemented."
	1034 Move X8, 0xBB2000
	1035 Move X8, [X8+2120]
	1036 Move [X27+112], X23
	1037 Move X1, X27
	1038 Move X2, X31
	1039 Move X0, [X8]
	1040 Call String.Format, X0, X1
	1041 Move X23, [X29]
	1042 Move X27, X0
	1043 Move X8, [X23+56]
	1044 Compare X8, 0
	1045 JumpIfNotEqual {1049}
	1046 Move X0, X23
	1047 Call 0x1C5D6E0
	1048 Move X8, [X23+56]
	1049 Move X0, [X8+16]
	1050 Move W8, [X0+309]
	1051 Move TEMP, X8
	1052 And TEMP, TEMP, 1
	1053 Compare TEMP, 1
	1054 JumpIfEqual {1056}
	1055 Call 0x1C5D684
	1056 Move W8, [X0+224]
	1057 Compare W8, 0
	1058 JumpIfNotEqual {1060}
	1059 Call 0x1C17DFC
	1060 Move X8, [X23+56]
	1061 Move X0, [X8+16]
	1062 Move W8, [X0+309]
	1063 Move TEMP, X8
	1064 And TEMP, TEMP, 1
	1065 Compare TEMP, 1
	1066 JumpIfEqual {1068}
	1067 Call 0x1C5D684
	1068 Move X8, [X0+184]
	1069 Move X0, X27
	1070 Move X2, X31
	1071 Move X1, [X8]
	1072 Call GUILayout.Label, X0, X1
	1073 Move W8, [X19+37]
	1074 Compare W8, 0
	1075 JumpIfEqual {1344}
	1076 Move X23, [X29]
	1077 Move X8, [X23+56]
	1078 Compare X8, 0
	1079 JumpIfNotEqual {1083}
	1080 Move X0, X23
	1081 Call 0x1C5D6E0
	1082 Move X8, [X23+56]
	1083 Move X0, [X8+16]
	1084 Move W8, [X0+309]
	1085 Move TEMP, X8
	1086 And TEMP, TEMP, 1
	1087 Compare TEMP, 1
	1088 JumpIfEqual {1090}
	1089 Call 0x1C5D684
	1090 Move W8, [X0+224]
	1091 Compare W8, 0
	1092 JumpIfNotEqual {1094}
	1093 Call 0x1C17DFC
	1094 Move X8, [X23+56]
	1095 Move X20, 0xBB2000
	1096 Move X22, X21
	1097 Move X0, [X8+16]
	1098 Move W8, [X0+309]
	1099 Move X20, [X20+2032]
	1100 Move TEMP, X8
	1101 And TEMP, TEMP, 1
	1102 Compare TEMP, 1
	1103 JumpIfEqual {1105}
	1104 Call 0x1C5D684
	1105 Move X8, [X0+184]
	1106 Move X0, [X20]
	1107 Move X2, X31
	1108 Move X1, [X8]
	1109 Call GUILayout.Box, X0, X1
	1110 Move X0, [X28]
	1111 Move W1, 9
	1112 Move X21, X28
	1113 Call 0x1C17D6C
	1114 Move X8, [X19+80]
	1115 Compare X8, 0
	1116 JumpIfEqual {1479}
	1117 Move X23, X0
	1118 Move W8, [X8+56]
	1119 Move X0, [X26]
	1120 Add X1, X31, 72
	1121 Move [X31+72], W8
	1122 Call 0x1C17E04
	1123 Compare X23, 0
	1124 JumpIfEqual {1479}
	1125 Move X28, X0
	1126 Compare X0, 0
	1127 JumpIfEqual {1134}
	1128 Move X8, [X23]
	1129 Move X0, X28
	1130 Move X1, [X8+64]
	1131 Call 0x1C17E00
	1132 Compare X0, 0
	1133 JumpIfEqual {1480}
	1134 Move W8, [X23+24]
	1135 Compare W8, 0
	1136 JumpIfEqual {1478}
	1137 Move [X23+32], X28
	1138 Move X8, [X19+72]
	1139 Compare X8, 0
	1140 JumpIfEqual {1479}
	1141 Move X20, 0xB6F000
	1142 Move X20, [X20+2704]
	1143 Move V0, [X8+184]
	1144 Add X1, X31, 64
	1145 Move X0, [X20]
	1146 Move [X31+64], S0
	1147 Call 0x1C17E04
	1148 Move X28, X0
	1149 Compare X0, 0
	1150 JumpIfEqual {1157}
	1151 Move X8, [X23]
	1152 Move X0, X28
	1153 Move X1, [X8+64]
	1154 Call 0x1C17E00
	1155 Compare X0, 0
	1156 JumpIfEqual {1480}
	1157 Move W8, [X23+24]
	1158 NotImplemented "Instruction CMP not yet implemented."
	1159 Move [X23+40], X28
	1160 Move X8, [X19+80]
	1161 Compare X8, 0
	1162 JumpIfEqual {1479}
	1163 Move W8, [X8+40]
	1164 Move X0, [X26]
	1165 Add X1, X31, 56
	1166 Move [X31+56], W8
	1167 Call 0x1C17E04
	1168 Move X28, X0
	1169 Compare X0, 0
	1170 JumpIfEqual {1177}
	1171 Move X8, [X23]
	1172 Move X0, X28
	1173 Move X1, [X8+64]
	1174 Call 0x1C17E00
	1175 Compare X0, 0
	1176 JumpIfEqual {1480}
	1177 Move W8, [X23+24]
	1178 NotImplemented "Instruction CMP not yet implemented."
	1179 Move [X23+48], X28
	1180 Move X8, [X19+72]
	1181 Compare X8, 0
	1182 JumpIfEqual {1479}
	1183 Move V0, [X8+188]
	1184 Move X0, [X20]
	1185 Add X1, X31, 48
	1186 Move [X31+48], S0
	1187 Call 0x1C17E04
	1188 Move X28, X0
	1189 Compare X0, 0
	1190 JumpIfEqual {1197}
	1191 Move X8, [X23]
	1192 Move X0, X28
	1193 Move X1, [X8+64]
	1194 Call 0x1C17E00
	1195 Compare X0, 0
	1196 JumpIfEqual {1480}
	1197 Move W8, [X23+24]
	1198 NotImplemented "Instruction CMP not yet implemented."
	1199 Move [X23+56], X28
	1200 Move X8, [X19+72]
	1201 Compare X8, 0
	1202 JumpIfEqual {1479}
	1203 Move V0, [X8+192]
	1204 Move X0, [X20]
	1205 Add X1, X31, 92
	1206 Move [X31+92], S0
	1207 Call 0x1C17E04
	1208 Move X28, X0
	1209 Compare X0, 0
	1210 JumpIfEqual {1217}
	1211 Move X8, [X23]
	1212 Move X0, X28
	1213 Move X1, [X8+64]
	1214 Call 0x1C17E00
	1215 Compare X0, 0
	1216 JumpIfEqual {1480}
	1217 Move W8, [X23+24]
	1218 NotImplemented "Instruction CMP not yet implemented."
	1219 Move [X23+64], X28
	1220 Move X8, [X19+80]
	1221 Compare X8, 0
	1222 JumpIfEqual {1479}
	1223 Move W8, [X8+48]
	1224 Move X0, [X26]
	1225 Add X1, X31, 88
	1226 Move [X31+88], W8
	1227 Call 0x1C17E04
	1228 Move X28, X0
	1229 Compare X0, 0
	1230 JumpIfEqual {1237}
	1231 Move X8, [X23]
	1232 Move X0, X28
	1233 Move X1, [X8+64]
	1234 Call 0x1C17E00
	1235 Compare X0, 0
	1236 JumpIfEqual {1480}
	1237 Move W8, [X23+24]
	1238 NotImplemented "Instruction CMP not yet implemented."
	1239 Move [X23+72], X28
	1240 Move X8, [X19+80]
	1241 Compare X8, 0
	1242 JumpIfEqual {1479}
	1243 Move W8, [X8+44]
	1244 Move X0, [X26]
	1245 Add X1, X31, 84
	1246 Move [X31+84], W8
	1247 Call 0x1C17E04
	1248 Move X28, X0
	1249 Compare X0, 0
	1250 JumpIfEqual {1257}
	1251 Move X8, [X23]
	1252 Move X0, X28
	1253 Move X1, [X8+64]
	1254 Call 0x1C17E00
	1255 Compare X0, 0
	1256 JumpIfEqual {1480}
	1257 Move W8, [X23+24]
	1258 NotImplemented "Instruction CMP not yet implemented."
	1259 Move [X23+80], X28
	1260 Move X0, [X19+80]
	1261 Compare X0, 0
	1262 JumpIfEqual {1479}
	1263 Move X1, X31
	1264 Call VoiceClient.get_FramesSent, X0
	1265 Move X8, [X26]
	1266 Move [X31+36], W0
	1267 Add X1, X31, 36
	1268 Move X0, X8
	1269 Call 0x1C17E04
	1270 Move X28, X0
	1271 Compare X0, 0
	1272 JumpIfEqual {1279}
	1273 Move X8, [X23]
	1274 Move X0, X28
	1275 Move X1, [X8+64]
	1276 Call 0x1C17E00
	1277 Compare X0, 0
	1278 JumpIfEqual {1480}
	1279 Move W8, [X23+24]
	1280 NotImplemented "Instruction CMP not yet implemented."
	1281 Move [X23+88], X28
	1282 Move X0, [X19+80]
	1283 Compare X0, 0
	1284 JumpIfEqual {1479}
	1285 Move X1, X31
	1286 Call VoiceClient.get_FramesSentBytes, X0
	1287 Move X8, [X26]
	1288 Move [X31+32], W0
	1289 Add X1, X31, 32
	1290 Move X0, X8
	1291 Call 0x1C17E04
	1292 Move X28, X0
	1293 Compare X0, 0
	1294 JumpIfEqual {1301}
	1295 Move X8, [X23]
	1296 Move X0, X28
	1297 Move X1, [X8+64]
	1298 Call 0x1C17E00
	1299 Compare X0, 0
	1300 JumpIfEqual {1480}
	1301 Move W8, [X23+24]
	1302 NotImplemented "Instruction CMP not yet implemented."
	1303 Move X8, 0xBB1000
	1304 Move X8, [X8+2152]
	1305 Move [X23+96], X28
	1306 Move X1, X23
	1307 Move X2, X31
	1308 Move X0, [X8]
	1309 Call String.Format, X0, X1
	1310 Move X28, [X29]
	1311 Move X23, X0
	1312 Move X8, [X28+56]
	1313 Compare X8, 0
	1314 JumpIfNotEqual {1318}
	1315 Move X0, X28
	1316 Call 0x1C5D6E0
	1317 Move X8, [X28+56]
	1318 Move X0, [X8+16]
	1319 Move W8, [X0+309]
	1320 Move TEMP, X8
	1321 And TEMP, TEMP, 1
	1322 Compare TEMP, 1
	1323 JumpIfEqual {1325}
	1324 Call 0x1C5D684
	1325 Move W8, [X0+224]
	1326 Compare W8, 0
	1327 JumpIfNotEqual {1329}
	1328 Call 0x1C17DFC
	1329 Move X8, [X28+56]
	1330 Move X0, [X8+16]
	1331 Move W8, [X0+309]
	1332 Move TEMP, X8
	1333 And TEMP, TEMP, 1
	1334 Compare TEMP, 1
	1335 JumpIfEqual {1337}
	1336 Call 0x1C5D684
	1337 Move X8, [X0+184]
	1338 Move X0, X23
	1339 Move X2, X31
	1340 Move X28, X21
	1341 Move X1, [X8]
	1342 Call GUILayout.Label, X0, X1
	1343 Move X21, X22
	1344 Move W8, [X31+20]
	1345 Move TEMP, X8
	1346 And TEMP, TEMP, 1
	1347 Compare TEMP, 1
	1348 JumpIfNotEqual {1442}
	1349 Move X0, [X28]
	1350 Move W1, 6
	1351 Call 0x1C17D6C
	1352 Compare X0, 0
	1353 JumpIfEqual {1479}
	1354 Move X22, [X31+8]
	1355 Move X23, X0
	1356 Compare X21, 0
	1357 JumpIfEqual {1364}
	1358 Move X8, [X23]
	1359 Move X0, X21
	1360 Move X1, [X8+64]
	1361 Call 0x1C17E00
	1362 Compare X0, 0
	1363 JumpIfEqual {1480}
	1364 Move W8, [X23+24]
	1365 Compare W8, 0
	1366 JumpIfEqual {1478}
	1367 Move X20, [X31+24]
	1368 Move [X23+32], X21
	1369 Compare X20, 0
	1370 JumpIfEqual {1378}
	1371 Move X8, [X23]
	1372 Move X0, X20
	1373 Move X1, [X8+64]
	1374 Call 0x1C17E00
	1375 Compare X0, 0
	1376 JumpIfEqual {1480}
	1377 Move W8, [X23+24]
	1378 NotImplemented "Instruction CMP not yet implemented."
	1379 Move [X23+40], X20
	1380 Compare X22, 0
	1381 JumpIfEqual {1389}
	1382 Move X8, [X23]
	1383 Move X0, X22
	1384 Move X1, [X8+64]
	1385 Call 0x1C17E00
	1386 Compare X0, 0
	1387 JumpIfEqual {1480}
	1388 Move W8, [X23+24]
	1389 NotImplemented "Instruction CMP not yet implemented."
	1390 Move [X23+48], X22
	1391 Compare X25, 0
	1392 JumpIfEqual {1400}
	1393 Move X8, [X23]
	1394 Move X0, X25
	1395 Move X1, [X8+64]
	1396 Call 0x1C17E00
	1397 Compare X0, 0
	1398 JumpIfEqual {1480}
	1399 Move W8, [X23+24]
	1400 NotImplemented "Instruction CMP not yet implemented."
	1401 Move [X23+56], X25
	1402 Compare X24, 0
	1403 JumpIfEqual {1411}
	1404 Move X8, [X23]
	1405 Move X0, X24
	1406 Move X1, [X8+64]
	1407 Call 0x1C17E00
	1408 Compare X0, 0
	1409 JumpIfEqual {1480}
	1410 Move W8, [X23+24]
	1411 NotImplemented "Instruction CMP not yet implemented."
	1412 Move [X23+64], X24
	1413 Compare X27, 0
	1414 JumpIfEqual {1422}
	1415 Move X8, [X23]
	1416 Move X0, X27
	1417 Move X1, [X8+64]
	1418 Call 0x1C17E00
	1419 Compare X0, 0
	1420 JumpIfEqual {1480}
	1421 Move W8, [X23+24]
	1422 NotImplemented "Instruction CMP not yet implemented."
	1423 Move [X23+72], X27
	1424 Move X8, 0xBB1000
	1425 Move X8, [X8+2080]
	1426 Move X1, X23
	1427 Move X2, X31
	1428 Move X0, [X8]
	1429 Call String.Format, X0, X1
	1430 Move X8, 0xB6E000
	1431 Move X8, [X8+2600]
	1432 Move X20, X0
	1433 Move X8, [X8]
	1434 Move W9, [X8+224]
	1435 Compare W9, 0
	1436 JumpIfNotEqual {1439}
	1437 Move X0, X8
	1438 Call 0x1C17DFC
	1439 Move X0, X20
	1440 Move X1, X31
	1441 Call Debug.Log, X0
	1442 Move X20, 0xB95000
	1443 Move X20, [X20+1216]
	1444 Move X0, [X20]
	1445 Move W8, [X0+224]
	1446 Compare W8, 0
	1447 JumpIfNotEqual {1449}
	1448 Call 0x1C17DFC
	1449 Move X0, X31
	1450 Call GUI.get_changed
	1451 Move TEMP, X0
	1452 And TEMP, TEMP, 1
	1453 Compare TEMP, 1
	1454 JumpIfNotEqual {1457}
	1455 Move W8, 0x42C80000
	1456 Move [X19+52], W8
	1457 Move X0, [X20]
	1458 Move W8, [X0+224]
	1459 Compare W8, 0
	1460 JumpIfNotEqual {1462}
	1461 Call 0x1C17DFC
	1462 Move X0, X31
	1463 Call GUI.DragWindow
	1464 Move X20, [X31+176]
	1465 Move X19, [X31+184]
	1466 Move X22, [X31+160]
	1467 Move X21, [X31+168]
	1468 Move X24, [X31+144]
	1469 Move X23, [X31+152]
	1470 Move X26, [X31+128]
	1471 Move X25, [X31+136]
	1472 Move X28, [X31+112]
	1473 Move X27, [X31+120]
	1474 Move X29, [X31+96]
	1475 Move X30, [X31+104]
	1476 Add X31, X31, 192
	1477 Return 
	1478 Call 0x1C17F28
	1479 Call 0x1C17F20
	1480 Call 0x1C17F44
	1481 Move X1, X31
	1482 Call 0x1C17DEC

Method: System.Void .ctor()

Disassembly:
	0x03586344 LDR X2, [X8]
	0x03586348 BL 0x31932AC
	0x0358634C B 0x3586428
	0x03586350 LDR W9, [X10]
	0x03586354 ADD W9, W9, 0x1
	0x03586358 ADD X8, X8, W9, 0x4, SXTW
	0x0358635C ADD X0, X8, 0x138
	0x03586360 LDP X8, X4, [X0]
	0x03586364 MOVZ W1, 0x3
	0x03586368 MOV X0, X22

ISIL:
	001 Move X9, -44666880
	002 Move V0, [X9+32]
	003 Or W8, W31, 0x1010101
	004 Move W9, 200
	005 Move X1, X31
	006 NotImplemented "Instruction STRH not yet implemented."
	007 Move [X0+32], W8
	008 Move [X0+40], V0
	009 Move [X0+56], W9
	010 Call MonoBehaviour..ctor, X0
	011 Return 

