Type: Photon.Voice.Unity.UtilityScripts.WaveWriter

Method: System.Void .ctor(System.String fileName, System.Int32 sampleRate, System.Int32 bits, System.Int32 channels)

Disassembly:
	0x03586B80 ADRP X0, 0xB72000
	0x03586B84 LDR X0, [X0 + 0x528]
	0x03586B88 BL 0x1C16D08
	0x03586B8C BL 0x1C16F10
	0x03586B90 MOV X19, X0
	0x03586B94 ADRP X0, 0xB9C000
	0x03586B98 LDR X0, [X0 + 0xD38]
	0x03586B9C BL 0x1C16D08
	0x03586BA0 MOV X1, X0
	0x03586BA4 MOV X0, X19
	0x03586BA8 MOV X2, X31
	0x03586BAC BL 0x330E100
	0x03586BB0 B 0x3586C18
	0x03586BB4 ADRP X0, 0xB75000
	0x03586BB8 LDR X0, [X0 + 0x578]
	0x03586BBC BL 0x1C16D08
	0x03586BC0 BL 0x1C16F10
	0x03586BC4 MOV X19, X0
	0x03586BC8 ADRP X0, 0xBB0000
	0x03586BCC LDR X0, [X0 + 0x908]
	0x03586BD0 B 0x3586BF0
	0x03586BD4 ADRP X0, 0xB75000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, X0
	007 Move X0, X1
	008 Move X1, X31
	009 Move W19, W4
	010 Move W20, W3
	011 Move W21, W2
	012 Call File.OpenWrite, X0
	013 Move X1, X0
	014 Move X0, X22
	015 Move W2, W21
	016 Move W3, W20
	017 Move W4, W19
	018 Call WaveWriter..ctor, X0, X1, X2, X3, X4
	019 Move W8, 1
	020 Move [X22+60], W8
	021 Move X20, [X31+32]
	022 Move X19, [X31+40]
	023 Move X22, [X31+16]
	024 Move X21, [X31+24]
	025 Move X30, [X31+48]
	026 Return 

Method: System.Void .ctor(System.IO.Stream stream, System.Int32 sampleRate, System.Int32 bitsPerSample, System.Int32 channels)

Disassembly:
	0x03587A70 LDR X0, [X0 + 0x9A8]
	0x03587A74 BL 0x1C16CF4
	0x03587A78 ADRP X0, 0xBAF000
	0x03587A7C LDR X0, [X0 + 0x9B0]
	0x03587A80 BL 0x1C16CF4
	0x03587A84 MOVZ W8, 0x1
	0x03587A88 STRB W8, [X23 + 0xF08]
	0x03587A8C CBZ X22, 0x3587BF0
	0x03587A90 ADRP X25, 0xB6F000
	0x03587A94 LDR X25, [X25 + 0x398]
	0x03587A98 LDR X9, [X22]
	0x03587A9C LDR X8, [X25]
	0x03587AA0 CMP X9, X8
	0x03587AA4 B.EQ 0x3587CFC
	0x03587AA8 MOV X0, X21
	0x03587AAC MOV X1, X31
	0x03587AB0 BL 0x35713EC
	0x03587AB4 ADRP X8, 0xB6C000
	0x03587AB8 LDR X8, [X8 + 0x9D0]
	0x03587ABC MOV X21, X0
	0x03587AC0 MOVZ W1, 0x3
	0x03587AC4 LDR X8, [X8]
	0x03587AC8 MOV X0, X8
	0x03587ACC BL 0x1C16D6C
	0x03587AD0 ADRP X9, 0xBAF000
	0x03587AD4 LDR X8, [X22]
	0x03587AD8 LDR X9, [X9 + 0x990]
	0x03587ADC MOV X24, X0
	0x03587AE0 MOV X0, X22
	0x03587AE4 LDR X23, [X9]
	0x03587AE8 LDP X9, X1, [X8 + 0x168]
	0x03587AEC BLR X9
	0x03587AF0 CBZ X24, 0x3588210
	0x03587AF4 MOV X22, X0
	0x03587AF8 CBZ X0, 0x3587B10
	0x03587AFC LDR X8, [X24]
	0x03587B00 MOV X0, X22
	0x03587B04 LDR X1, [X8 + 0x40]
	0x03587B08 BL 0x1C16E00
	0x03587B0C CBZ X0, 0x3588214
	0x03587B10 LDR W8, [X24 + 0x18]
	0x03587B14 CBZ W8, 0x358820C
	0x03587B18 STR X22, [X24 + 0x20]
	0x03587B1C ADRP X8, 0xB6C000
	0x03587B20 LDR X8, [X8 + 0x758]
	0x03587B24 ADD X1, X31, 0x8
	0x03587B28 STR W20, [X31 + 0x8]
	0x03587B2C LDR X0, [X8]
	0x03587B30 BL 0x1C16E04
	0x03587B34 MOV X20, X0
	0x03587B38 CBZ X0, 0x3587B50
	0x03587B3C LDR X8, [X24]
	0x03587B40 MOV X0, X20
	0x03587B44 LDR X1, [X8 + 0x40]
	0x03587B48 BL 0x1C16E00
	0x03587B4C CBZ X0, 0x3588214
	0x03587B50 LDR W8, [X24 + 0x18]
	0x03587B54 CMP W8, 0x1
	0x03587B58 B.LS 0x358820C
	0x03587B5C STR X20, [X24 + 0x28]
	0x03587B60 ADRP X8, 0xB6D000
	0x03587B64 LDR X8, [X8 + 0x9D8]
	0x03587B68 ADD X1, X31, 0x4
	0x03587B6C STRB W19, [X31 + 0x4]
	0x03587B70 LDR X0, [X8]
	0x03587B74 BL 0x1C16E04
	0x03587B78 MOV X19, X0
	0x03587B7C CBZ X0, 0x3587B94
	0x03587B80 LDR X8, [X24]
	0x03587B84 MOV X0, X19
	0x03587B88 LDR X1, [X8 + 0x40]
	0x03587B8C BL 0x1C16E00
	0x03587B90 CBZ X0, 0x3588214
	0x03587B94 LDR W8, [X24 + 0x18]
	0x03587B98 CMP W8, 0x2
	0x03587B9C B.LS 0x358820C
	0x03587BA0 STR X19, [X24 + 0x30]
	0x03587BA4 CBZ X21, 0x3588210
	0x03587BA8 ADRP X10, 0xB71000
	0x03587BAC LDR X8, [X21]
	0x03587BB0 LDR X10, [X10 + 0x348]
	0x03587BB4 LDRH W9, [X8 + 0x12E]
	0x03587BB8 LDR X1, [X10]
	0x03587BBC CBZ X9, 0x3587BE0
	0x03587BC0 LDR X10, [X8 + 0xB0]
	0x03587BC4 ADD X10, X10, 0x8
	0x03587BC8 LDUR X11, [X10 - 0x8]
	0x03587BCC CMP X11, X1
	0x03587BD0 B.EQ 0x3587E98
	0x03587BD4 SUBS X9, X9, 0x1
	0x03587BD8 ADD X10, X10, 0x10
	0x03587BDC B.NE 0x3587BC8
	0x03587BE0 MOVZ W2, 0x1
	0x03587BE4 MOV X0, X21
	0x03587BE8 BL 0x1C5C788
	0x03587BEC B 0x3587EA8
	0x03587BF0 MOV X0, X21
	0x03587BF4 MOV X1, X31
	0x03587BF8 BL 0x35713EC
	0x03587BFC ADRP X8, 0xB6C000
	0x03587C00 LDR X8, [X8 + 0x9D0]
	0x03587C04 MOV X22, X0
	0x03587C08 MOVZ W1, 0x2
	0x03587C0C LDR X8, [X8]
	0x03587C10 MOV X0, X8
	0x03587C14 BL 0x1C16D6C
	0x03587C18 ADRP X8, 0xB6C000
	0x03587C1C LDR X8, [X8 + 0x758]
	0x03587C20 MOV X23, X0
	0x03587C24 ADD X1, X31, 0x8
	0x03587C28 STR W20, [X31 + 0x8]
	0x03587C2C LDR X0, [X8]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0xE59000
	009 Move W8, [X24+3840]
	010 Move W21, W4
	011 Move W22, W3
	012 Move W23, W2
	013 Move X20, X1
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {24}
	019 Move X0, 0xB9F000
	020 Move X0, [X0+608]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X24+3840], W8
	024 Move X0, X19
	025 Move X1, X31
	026 Call Object..ctor, X0
	027 Compare X20, 0
	028 JumpIfEqual {91}
	029 Move X8, [X20]
	030 Move X0, X20
	031 Move X9, [X8+472]
	032 Move X1, [X8+480]
	033 NotImplemented "Instruction BLR not yet implemented."
	034 Move TEMP, X0
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfNotEqual {103}
	038 Move X8, [X20]
	039 Move X0, X20
	040 Move X9, [X8+440]
	041 Move X1, [X8+448]
	042 NotImplemented "Instruction BLR not yet implemented."
	043 Move TEMP, X0
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfNotEqual {110}
	047 Move [X19+48], W23
	048 Move [X19+52], W22
	049 Move [X19+56], W21
	050 Move [X19+32], X20
	051 Move X8, [X20]
	052 Move X21, 0xB9F000
	053 Move X0, X20
	054 Move X9, [X8+504]
	055 Move X1, [X8+512]
	056 Move X21, [X21+608]
	057 NotImplemented "Instruction BLR not yet implemented."
	058 Move [X19+16], X0
	059 Move X0, [X21]
	060 Call 0x1C17F10
	061 Move X1, X20
	062 Move X2, X31
	063 Move X21, X0
	064 Call BinaryWriter..ctor, X0, X1
	065 Move [X19+40], X21
	066 Compare X21, 0
	067 JumpIfEqual {79}
	068 Move W20, 44
	069 Move X8, [X21]
	070 Move X0, X21
	071 Move W1, W31
	072 Move X9, [X8+456]
	073 Move X2, [X8+464]
	074 NotImplemented "Instruction BLR not yet implemented."
	075 Subtract W20, W20, 1
	076 Move X21, [X19+40]
	077 Compare X21, 0
	078 JumpIfNotEqual {69}
	079 Call 0x1C17F20
	080 Move X0, X19
	081 Call WaveWriter.WriteHeader, X0
	082 Move [X19+60], W31
	083 Move X20, [X31+48]
	084 Move X19, [X31+56]
	085 Move X22, [X31+32]
	086 Move X21, [X31+40]
	087 Move X24, [X31+16]
	088 Move X23, [X31+24]
	089 Move X30, [X31+64]
	090 Return 
	091 Move X0, 0xB72000
	092 Move X0, [X0+1320]
	093 Call 0x1C17D08
	094 Call 0x1C17F10
	095 Move X19, X0
	096 Move X0, 0xB9C000
	097 Move X0, [X0+3384]
	098 Call 0x1C17D08
	099 Move X1, X0
	100 Move X0, X19
	101 Move X2, X31
	102 Call ArgumentNullException..ctor, X0, X1
	103 Move X0, 0xB75000
	104 Move X0, [X0+1400]
	105 Call 0x1C17D08
	106 Call 0x1C17F10
	107 Move X19, X0
	108 Move X0, 0xBB0000
	109 Move X0, [X0+2312]
	110 Move X0, 0xB75000
	111 Move X0, [X0+1400]
	112 Call 0x1C17D08
	113 Call 0x1C17F10
	114 Move X19, X0
	115 Move X0, 0xBB0000
	116 Move X0, [X0+2320]
	117 Call 0x1C17D08
	118 Move X20, X0
	119 Move X0, 0xB9C000
	120 Move X0, [X0+3384]
	121 Call 0x1C17D08
	122 Move X2, X0
	123 Move X0, X19
	124 Move X1, X20
	125 Move X3, X31
	126 Call ArgumentException..ctor, X0, X1, X2
	127 Move X0, 0xBB0000
	128 Move X0, [X0+2328]
	129 Call 0x1C17D08
	130 Move X1, X0
	131 Move X0, X19
	132 Call 0x1C17DEC

Method: System.Void Dispose()

Disassembly:
	0x03586DFC LDR X2, [X8 + 0x250]
	0x03586E00 BLR X9
	0x03586E04 LDR X0, [X19 + 0x28]
	0x03586E08 CBZ X0, 0x3586F54
	0x03586E0C LDR X8, [X0]
	0x03586E10 MOVZ W1, 0x1
	0x03586E14 LDR X9, [X8 + 0x228]
	0x03586E18 LDR X2, [X8 + 0x230]
	0x03586E1C BLR X9
	0x03586E20 LDR X0, [X19 + 0x28]
	0x03586E24 CBZ X0, 0x3586F54
	0x03586E28 LDR X8, [X0]
	0x03586E2C LDR W1, [X19 + 0x38]
	0x03586E30 LDR X9, [X8 + 0x228]
	0x03586E34 LDR X2, [X8 + 0x230]
	0x03586E38 BLR X9
	0x03586E3C LDR X0, [X19 + 0x28]
	0x03586E40 CBZ X0, 0x3586F54
	0x03586E44 LDR X8, [X0]
	0x03586E48 LDR W1, [X19 + 0x30]
	0x03586E4C LDR X9, [X8 + 0x248]
	0x03586E50 LDR X2, [X8 + 0x250]
	0x03586E54 BLR X9
	0x03586E58 LDR X0, [X19 + 0x28]
	0x03586E5C CBZ X0, 0x3586F54
	0x03586E60 LDR X8, [X0]
	0x03586E64 LDR X9, [X8 + 0x248]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xE5A000
	006 Move X20, 0xB75000
	007 Move W8, [X21+3841]
	008 Move X20, [X20+3088]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xB75000
	015 Move X0, [X0+3088]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+3841], W8
	019 Move X8, [X19]
	020 Move W1, 1
	021 Move X0, X19
	022 Move X9, [X8+392]
	023 Move X2, [X8+400]
	024 NotImplemented "Instruction BLR not yet implemented."
	025 Move X0, [X20]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 Move X0, X19
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X1, X31
	034 Move X30, [X31+32]
	035 Move X21, [X31+40]
	036 Call GC.SuppressFinalize, X0
	037 Return 

Method: System.Void WriteSample(System.Single sample)

Disassembly:
	0x03587F58 MOV X0, X23
	0x03587F5C LDR X1, [X8 + 0x40]
	0x03587F60 BL 0x1C16E00
	0x03587F64 CBZ X0, 0x3588214
	0x03587F68 LDR W8, [X22 + 0x18]
	0x03587F6C CBZ W8, 0x358820C
	0x03587F70 STR X23, [X22 + 0x20]
	0x03587F74 ADRP X8, 0xB6C000
	0x03587F78 LDR X8, [X8 + 0x758]
	0x03587F7C ADD X1, X31, 0x4
	0x03587F80 STR W20, [X31 + 0x4]
	0x03587F84 LDR X0, [X8]
	0x03587F88 BL 0x1C16E04
	0x03587F8C MOV X20, X0
	0x03587F90 CBZ X0, 0x3587FA8
	0x03587F94 LDR X8, [X22]
	0x03587F98 MOV X0, X20
	0x03587F9C LDR X1, [X8 + 0x40]
	0x03587FA0 BL 0x1C16E00
	0x03587FA4 CBZ X0, 0x3588214
	0x03587FA8 LDR W8, [X22 + 0x18]
	0x03587FAC CMP W8, 0x1
	0x03587FB0 B.LS 0x358820C
	0x03587FB4 STR X20, [X22 + 0x28]
	0x03587FB8 ADRP X8, 0xB6D000
	0x03587FBC LDR X8, [X8 + 0x9D8]
	0x03587FC0 ADD X1, X31, 0x0
	0x03587FC4 STRB W19, [X31]
	0x03587FC8 LDR X0, [X8]
	0x03587FCC BL 0x1C16E04
	0x03587FD0 MOV X19, X0
	0x03587FD4 CBZ X0, 0x3587FEC
	0x03587FD8 LDR X8, [X22]
	0x03587FDC MOV X0, X19
	0x03587FE0 LDR X1, [X8 + 0x40]
	0x03587FE4 BL 0x1C16E00
	0x03587FE8 CBZ X0, 0x3588214
	0x03587FEC LDR W8, [X22 + 0x18]
	0x03587FF0 CMP W8, 0x2
	0x03587FF4 B.LS 0x358820C
	0x03587FF8 STR X19, [X22 + 0x30]
	0x03587FFC CBZ X21, 0x3588210
	0x03588000 ADRP X9, 0xB70000
	0x03588004 LDR X8, [X21]
	0x03588008 B 0x3EB1694
	0x0358800C ADRP X10, 0xBAE000
	0x03588010 LDR X1, [X9]
	0x03588014 LDR X10, [X10 + 0x9B0]
	0x03588018 LDRH W9, [X8 + 0x12E]
	0x0358801C LDR X19, [X10]
	0x03588020 CBZ X9, 0x3588188
	0x03588024 LDR X10, [X8 + 0xB0]
	0x03588028 ADD X10, X10, 0x8
	0x0358802C LDUR X11, [X10 - 0x8]
	0x03588030 CMP X11, X1
	0x03588034 B.EQ 0x3588198
	0x03588038 SUBS X9, X9, 0x1
	0x0358803C ADD X10, X10, 0x10
	0x03588040 B.NE 0x358802C
	0x03588044 B 0x3588188
	0x03588048 BL 0x1C16DFC
	0x0358804C CBNZ W24, 0x3587D1C
	0x03588050 MOV X0, X21
	0x03588054 MOV X1, X31
	0x03588058 BL 0x35713EC
	0x0358805C ADRP X8, 0xB6B000
	0x03588060 LDR X8, [X8 + 0x9D0]
	0x03588064 MOV X21, X0
	0x03588068 MOVZ W1, 0x3
	0x0358806C LDR X8, [X8]
	0x03588070 MOV X0, X8
	0x03588074 BL 0x1C16D6C
	0x03588078 MOV X22, X0
	0x0358807C LDR X0, [X25]
	0x03588080 ADD X1, X31, 0x8
	0x03588084 STR W31, [X31 + 0x8]
	0x03588088 BL 0x1C16E04
	0x0358808C CBZ X22, 0x3588210
	0x03588090 MOV X23, X0
	0x03588094 CBZ X0, 0x35880AC
	0x03588098 LDR X8, [X22]
	0x0358809C MOV X0, X23
	0x035880A0 LDR X1, [X8 + 0x40]
	0x035880A4 BL 0x1C16E00
	0x035880A8 CBZ X0, 0x3588214
	0x035880AC LDR W8, [X22 + 0x18]
	0x035880B0 CBZ W8, 0x358820C
	0x035880B4 STR X23, [X22 + 0x20]
	0x035880B8 ADRP X8, 0xB6B000
	0x035880BC LDR X8, [X8 + 0x758]
	0x035880C0 ADD X1, X31, 0x4
	0x035880C4 STR W20, [X31 + 0x4]
	0x035880C8 LDR X0, [X8]
	0x035880CC BL 0x1C16E04
	0x035880D0 MOV X20, X0
	0x035880D4 CBZ X0, 0x35880EC
	0x035880D8 LDR X8, [X22]
	0x035880DC MOV X0, X20
	0x035880E0 LDR X1, [X8 + 0x40]
	0x035880E4 BL 0x1C16E00
	0x035880E8 CBZ X0, 0x3588214
	0x035880EC LDR W8, [X22 + 0x18]
	0x035880F0 CMP W8, 0x1
	0x035880F4 B.LS 0x358820C
	0x035880F8 STR X20, [X22 + 0x28]
	0x035880FC ADRP X8, 0xB6C000
	0x03588100 LDR X8, [X8 + 0x9D8]
	0x03588104 ADD X1, X31, 0x0
	0x03588108 STRB W19, [X31]
	0x0358810C LDR X0, [X8]
	0x03588110 BL 0x1C16E04
	0x03588114 MOV X19, X0
	0x03588118 CBZ X0, 0x3588130
	0x0358811C LDR X8, [X22]
	0x03588120 MOV X0, X19
	0x03588124 LDR X1, [X8 + 0x40]
	0x03588128 BL 0x1C16E00
	0x0358812C CBZ X0, 0x3588214
	0x03588130 LDR W8, [X22 + 0x18]
	0x03588134 CMP W8, 0x2
	0x03588138 B.LS 0x358820C
	0x0358813C STR X19, [X22 + 0x30]
	0x03588140 CBZ X21, 0x3588210
	0x03588144 ADRP X9, 0xB70000
	0x03588148 LDR X8, [X21]
	0x0358814C LDR X9, [X9 + 0x348]
	0x03588150 ADRP X10, 0xBAE000
	0x03588154 LDR X1, [X9]
	0x03588158 LDR X10, [X10 + 0x9A8]
	0x0358815C LDRH W9, [X8 + 0x12E]
	0x03588160 LDR X19, [X10]
	0x03588164 CBZ X9, 0x3588188
	0x03588168 LDR X10, [X8 + 0xB0]
	0x0358816C ADD X10, X10, 0x8
	0x03588170 LDUR X11, [X10 - 0x8]
	0x03588174 CMP X11, X1
	0x03588178 B.EQ 0x3588198
	0x0358817C SUBS X9, X9, 0x1
	0x03588180 ADD X10, X10, 0x10
	0x03588184 B.NE 0x3588170
	0x03588188 MOVZ W2, 0x1
	0x0358818C MOV X0, X21
	0x03588190 BL 0x1C5C788
	0x03588194 B 0x35881A8
	0x03588198 LDR W9, [X10]
	0x0358819C ADD W9, W9, 0x1
	0x035881A0 ADD X8, X8, W9, 0x4, SXTW
	0x035881A4 ADD X0, X8, 0x138
	0x035881A8 LDP X8, X4, [X0]
	0x035881AC MOVZ W1, 0x2
	0x035881B0 MOV X0, X21
	0x035881B4 MOV X2, X19
	0x035881B8 MOV X3, X22
	0x035881BC BLR X8
	0x035881C0 MOV X0, X31
	0x035881C4 LDP X20, X19, [X31 + 0x40]
	0x035881C8 LDP X22, X21, [X31 + 0x30]
	0x035881CC LDP X24, X23, [X31 + 0x20]
	0x035881D0 LDP X30, X25, [X31 + 0x10]
	0x035881D4 ADD X31, X31, 0x50
	0x035881D8 RET
	0x035881DC LDR W9, [X10]
	0x035881E0 ADD W9, W9, 0x1
	0x035881E4 ADD X8, X8, W9, 0x4, SXTW
	0x035881E8 ADD X0, X8, 0x138
	0x035881EC LDP X8, X4, [X0]
	0x035881F0 MOVZ W1, 0x3

ISIL:
	001 Move [X31-32], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xE59000
	006 Move W8, [X20+3842]
	007 Move V8, V0
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0xB6D000
	014 Move X0, [X0+1560]
	015 Call 0x1C17CF4
	016 Move X0, 0xB6D000
	017 Move X0, [X0+1448]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X20+3842], W8
	021 Move S0, -1
	022 NotImplemented "Instruction FCMP not yet implemented."
	023 Move S0, 1
	024 NotImplemented "Instruction FCMP not yet implemented."
	025 Move X8, 0xB6D000
	026 Move X8, [X8+1448]
	027 Move X0, [X8]
	028 Move W8, [X0+224]
	029 Compare W8, 0
	030 JumpIfNotEqual {32}
	031 Call 0x1C17DFC
	032 Move S0, 1
	033 Move V1, V8
	034 Move X0, X31
	035 Call Math.Min, V0, V1
	036 Move V1, V0
	037 Move S0, -1
	038 Move X0, X31
	039 Call Math.Max, V0, V1
	040 Move V8, V0
	041 Move W8, [X19+52]
	042 NotImplemented "Instruction CMP not yet implemented."
	043 NotImplemented "Instruction CMP not yet implemented."
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Move W8, 0x4F000000
	046 Move W10, 0x7F800000
	047 Move S0, W8
	048 Move X0, X19
	049 Move X20, [X31+16]
	050 Move X19, [X31+24]
	051 Move X30, [X31+8]
	052 Multiply S0, S8, S0
	053 Move S1, W10
	054 NotImplemented "Instruction FCVTZS not yet implemented."
	055 NotImplemented "Instruction FCMP not yet implemented."
	056 Move W8, 0x80000000
	057 NotImplemented "Instruction CSEL not yet implemented."
	058 Move V8, [X31+32]
	059 Call WaveWriter.Write, X0, X1
	060 Return 
	061 NotImplemented "Instruction CMP not yet implemented."
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Move X8, -44683264
	064 Move V0, [X8+884]
	065 Move W8, 0x7F800000
	066 Move X0, X19
	067 Move X20, [X31+16]
	068 Move X19, [X31+24]
	069 Move X30, [X31+8]
	070 Move S1, W8
	071 Multiply S0, S8, S0
	072 NotImplemented "Instruction FCVTZS not yet implemented."
	073 NotImplemented "Instruction FCMP not yet implemented."
	074 NotImplemented "Instruction CSEL not yet implemented."
	075 Move V8, [X31+32]
	076 Call WaveWriter.Write, X0, X1
	077 Return 
	078 Move X8, -44683264
	079 Move V0, [X8+724]
	080 Move W8, 0x7F800000
	081 Move S1, W8
	082 Move W9, 0x80000000
	083 Multiply S0, S8, S0
	084 NotImplemented "Instruction FCVTZS not yet implemented."
	085 NotImplemented "Instruction FCMP not yet implemented."
	086 NotImplemented "Instruction CSEL not yet implemented."
	087 Move X1, X31
	088 Call BitConverter.GetBytes, X0
	089 Move X8, 0xB6C000
	090 Move X8, [X8+1560]
	091 Move X20, X0
	092 Move W1, 3
	093 Move X8, [X8]
	094 Move X0, X8
	095 Call 0x1C17D6C
	096 Compare X20, 0
	097 JumpIfEqual {171}
	098 Move W8, [X20+24]
	099 Compare W8, 0
	100 JumpIfEqual {139}
	101 Move X1, X0
	102 Compare X0, 0
	103 JumpIfEqual {171}
	104 Move W8, [X1+24]
	105 Compare W8, 0
	106 JumpIfEqual {139}
	107 Move W9, [X20+32]
	108 Move [X1+32], W9
	109 Move W9, [X20+24]
	110 NotImplemented "Instruction CMP not yet implemented."
	111 NotImplemented "Instruction CMP not yet implemented."
	112 Move W9, [X20+33]
	113 Move [X1+33], W9
	114 Move W9, [X20+24]
	115 NotImplemented "Instruction CMP not yet implemented."
	116 NotImplemented "Instruction CMP not yet implemented."
	117 Move W8, [X20+34]
	118 Move X0, X19
	119 Move X20, [X31+16]
	120 Move X19, [X31+24]
	121 Move X30, [X31+8]
	122 Move W3, 3
	123 Move [X1+34], W8
	124 Move W2, W31
	125 Move V8, [X31+32]
	126 Call WaveWriter.Write, X0, X1, X2, X3
	127 Return 
	128 Move W8, 0x437F0000
	129 Move S0, W8
	130 Move X0, X19
	131 Move X20, [X31+16]
	132 Move X19, [X31+24]
	133 Move X30, [X31+8]
	134 Multiply S0, S8, S0
	135 NotImplemented "Instruction FCVTZS not yet implemented."
	136 NotImplemented "Instruction FCMP not yet implemented."
	137 NotImplemented "Instruction CSEL not yet implemented."
	138 Move V8, [X31+32]
	139 Call 0x1C17F28
	140 Move X19, 0xB6C000
	141 Move X19, [X19+1456]
	142 Move X0, X19
	143 Call 0x1C17D08
	144 Call 0x1C17F10
	145 Move X20, X0
	146 Move X0, 0xBAF000
	147 Move X0, [X0+2360]
	148 Call 0x1C17D08
	149 Move X1, X0
	150 Move X0, X20
	151 Move X2, X31
	152 Call InvalidOperationException..ctor, X0, X1
	153 Move X0, X19
	154 Call 0x1C17D08
	155 Call 0x1C17F10
	156 Move X19, X0
	157 Move X0, 0xBAF000
	158 Move X0, [X0+2368]
	159 Call 0x1C17D08
	160 Move X1, X0
	161 Move X0, X19
	162 Move X2, X20
	163 Move X3, X31
	164 Call InvalidOperationException..ctor, X0, X1, X2
	165 Move X0, 0xBAF000
	166 Move X0, [X0+2376]
	167 Call 0x1C17D08
	168 Move X1, X0
	169 Move X0, X19
	170 Call 0x1C17DEC
	171 Call 0x1C17F20

Method: System.Void WriteSamples(System.Single[] samples, System.Int32 offset, System.Int32 count)

Disassembly:
	0x03586C38 STP X22, X21, [X31 + 0x20]
	0x03586C3C STP X20, X19, [X31 + 0x30]
	0x03586C40 ADRP X20, 0xE59000
	0x03586C44 LDRB W8, [X20 + 0xF03]
	0x03586C48 MOV X19, X0
	0x03586C4C TBNZ X8, 0x0, 0x3586C88
	0x03586C50 ADRP X0, 0xBB0000
	0x03586C54 LDR X0, [X0 + 0x920]
	0x03586C58 BL 0x1C16CF4
	0x03586C5C ADRP X0, 0xB79000
	0x03586C60 LDR X0, [X0 + 0x690]
	0x03586C64 BL 0x1C16CF4
	0x03586C68 ADRP X0, 0xBB0000
	0x03586C6C LDR X0, [X0 + 0x928]
	0x03586C70 BL 0x1C16CF4
	0x03586C74 ADRP X0, 0xBB0000
	0x03586C78 LDR X0, [X0 + 0x930]
	0x03586C7C BL 0x1C16CF4
	0x03586C80 MOVZ W8, 0x1
	0x03586C84 STRB W8, [X20 + 0xF03]
	0x03586C88 LDR X0, [X19 + 0x28]
	0x03586C8C CBZ X0, 0x3586F54
	0x03586C90 LDR X8, [X0]
	0x03586C94 LDP X9, X1, [X8 + 0x1A8]
	0x03586C98 BLR X9
	0x03586C9C LDR X0, [X19 + 0x20]
	0x03586CA0 CBZ X0, 0x3586F54
	0x03586CA4 LDR X8, [X0]
	0x03586CA8 LDP X9, X1, [X8 + 0x1F8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Add W8, W3, W2
	008 NotImplemented "Instruction CMP not yet implemented."
	009 Move X20, X1
	010 Compare X1, 0
	011 JumpIfEqual {33}
	012 Move X8, W8
	013 Add X9, X20, W2
	014 Move W19, W2
	015 Move X21, X0
	016 Add X22, X9, 32
	017 Subtract X23, X8, W2
	018 Move W8, [X20+24]
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Move V0, [X22+4]
	021 Move X0, X21
	022 Call WaveWriter.WriteSample, X0, V0
	023 Subtract X23, X23, 1
	024 Add W19, W19, 1
	025 Move X20, [X31+32]
	026 Move X19, [X31+40]
	027 Move X22, [X31+16]
	028 Move X21, [X31+24]
	029 Move X30, [X31+48]
	030 Move X23, [X31+56]
	031 Return 
	032 Call 0x1C17F28
	033 Call 0x1C17F20

Method: System.Void Write(System.Byte[] buffer, System.Int32 offset, System.Int32 count)

Disassembly:
	0x03588228 STP X20, X19, [X31 + 0x20]
	0x0358822C ADRP X20, 0xE57000
	0x03588230 LDRB W8, [X20 + 0xF09]
	0x03588234 MOV X19, X0
	0x03588238 TBNZ X8, 0x0, 0x358825C
	0x0358823C ADRP X0, 0xB78000
	0x03588240 LDR X0, [X0 + 0xB98]
	0x03588244 BL 0x1C16CF4
	0x03588248 ADRP X0, 0xBAE000
	0x0358824C LDR X0, [X0 + 0x9B8]
	0x03588250 BL 0x1C16CF4
	0x03588254 MOVZ W8, 0x1
	0x03588258 STRB W8, [X20 + 0xF09]
	0x0358825C LDR X0, [X19 + 0xE0]
	0x03588260 CBNZ X0, 0x35882A4
	0x03588264 BL 0x337684C
	0x03588268 ADRP X8, 0xB78000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, X0
	005 Move X0, [X0+32]
	006 Compare X0, 0
	007 JumpIfEqual {20}
	008 Move X8, [X0]
	009 Move W19, W3
	010 Move X9, [X8+904]
	011 Move X4, [X8+912]
	012 NotImplemented "Instruction BLR not yet implemented."
	013 Move W8, [X20+24]
	014 Add W8, W8, W19
	015 Move [X20+24], W8
	016 Move X20, [X31+16]
	017 Move X19, [X31+24]
	018 Move X30, [X31+32]
	019 Return 
	020 Call 0x1C17F20

Method: System.Void Write(System.Byte value)

Disassembly:
	0x035881F4 MOV X0, X21
	0x035881F8 MOV X2, X19
	0x035881FC MOV X3, X24
	0x03588200 BLR X8
	0x03588204 LDR X0, [X23 + 0x98]
	0x03588208 B 0x35881C4
	0x0358820C BL 0x1C16F28
	0x03588210 BL 0x1C16F20
	0x03588214 BL 0x1C16F44
	0x03588218 MOV X1, X31
	0x0358821C BL 0x1C16DEC
	0x03588220 SUB X31, X31, 0x30
	0x03588224 STR X30, [X31 + 0x10]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, [X0+40]
	005 Compare X0, 0
	006 JumpIfEqual {17}
	007 Move X8, [X0]
	008 Move X9, [X8+456]
	009 Move X2, [X8+464]
	010 NotImplemented "Instruction BLR not yet implemented."
	011 Move W8, [X19+24]
	012 Add W8, W8, 1
	013 Move [X19+24], W8
	014 Move X30, [X31+16]
	015 Move X19, [X31+24]
	016 Return 
	017 Call 0x1C17F20

Method: System.Void Write(System.Int16 value)

Disassembly:
	0x03587824 MOVZ W8, 0x1
	0x03587828 STRB W8, [X22 + 0xF07]
	0x0358782C MOV X0, X19
	0x03587830 MOV X1, X31
	0x03587834 BL 0x357E498
	0x03587838 LDR X1, [X21]
	0x0358783C MOV X0, X19
	0x03587840 BL 0x21A3894
	0x03587844 STR X0, [X19 + 0xC8]
	0x03587848 LDR X0, [X20]
	0x0358784C LDR W8, [X0 + 0xE0]
	0x03587850 CBNZ W8, 0x3587858
	0x03587854 BL 0x1C16DFC
	0x03587858 LDP X20, X19, [X31 + 0x20]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, [X0+40]
	005 Compare X0, 0
	006 JumpIfEqual {17}
	007 Move X8, [X0]
	008 Move X9, [X8+552]
	009 Move X2, [X8+560]
	010 NotImplemented "Instruction BLR not yet implemented."
	011 Move W8, [X19+24]
	012 Add W8, W8, 2
	013 Move [X19+24], W8
	014 Move X30, [X31+16]
	015 Move X19, [X31+24]
	016 Return 
	017 Call 0x1C17F20

Method: System.Void Write(System.Int32 value)

Disassembly:
	0x0358826C LDR X8, [X8 + 0xB98]
	0x03588270 STP X0, X1, [X31]
	0x03588274 ADD X1, X31, 0x0
	0x03588278 LDR X8, [X8]
	0x0358827C MOV X0, X8
	0x03588280 BL 0x1C16E04
	0x03588284 ADRP X8, 0xBAE000
	0x03588288 LDR X8, [X8 + 0x9B8]
	0x0358828C MOV X1, X0
	0x03588290 MOV X2, X31
	0x03588294 LDR X8, [X8]
	0x03588298 MOV X0, X8
	0x0358829C BL 0x321EFD0
	0x035882A0 STR X0, [X19 + 0xE0]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, [X0+40]
	005 Compare X0, 0
	006 JumpIfEqual {17}
	007 Move X8, [X0]
	008 Move X9, [X8+584]
	009 Move X2, [X8+592]
	010 NotImplemented "Instruction BLR not yet implemented."
	011 Move W8, [X19+24]
	012 Add W8, W8, 4
	013 Move [X19+24], W8
	014 Move X30, [X31+16]
	015 Move X19, [X31+24]
	016 Return 
	017 Call 0x1C17F20

Method: System.Void Write(System.Single value)

Disassembly:
	0x035882A4 LDP X20, X19, [X31 + 0x20]
	0x035882A8 LDR X30, [X31 + 0x10]
	0x035882AC ADD X31, X31, 0x30
	0x035882B0 RET
	0x035882B4 STR X30, [X31 - 0x20]!
	0x035882B8 STP X20, X19, [X31 + 0x10]
	0x035882BC ADRP X20, 0xE57000
	0x035882C0 LDRB W8, [X20 + 0xF0A]
	0x035882C4 MOV X19, X0
	0x035882C8 TBNZ X8, 0x0, 0x35882E0
	0x035882CC ADRP X0, 0xBAE000
	0x035882D0 LDR X0, [X0 + 0x9C0]
	0x035882D4 BL 0x1C16CF4
	0x035882D8 MOVZ W8, 0x1

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, [X0+40]
	005 Compare X0, 0
	006 JumpIfEqual {17}
	007 Move X8, [X0]
	008 Move X9, [X8+648]
	009 Move X1, [X8+656]
	010 NotImplemented "Instruction BLR not yet implemented."
	011 Move W8, [X19+24]
	012 Add W8, W8, 4
	013 Move [X19+24], W8
	014 Move X30, [X31+16]
	015 Move X19, [X31+24]
	016 Return 
	017 Call 0x1C17F20

Method: System.Void WriteHeader()

Disassembly:
	0x03587C30 BL 0x1C16E04
	0x03587C34 CBZ X23, 0x3588210
	0x03587C38 MOV X20, X0
	0x03587C3C CBZ X0, 0x3587C54
	0x03587C40 LDR X8, [X23]
	0x03587C44 MOV X0, X20
	0x03587C48 LDR X1, [X8 + 0x40]
	0x03587C4C BL 0x1C16E00
	0x03587C50 CBZ X0, 0x3588214
	0x03587C54 LDR W8, [X23 + 0x18]
	0x03587C58 CBZ W8, 0x358820C
	0x03587C5C STR X20, [X23 + 0x20]
	0x03587C60 ADRP X8, 0xB6D000
	0x03587C64 LDR X8, [X8 + 0x9D8]
	0x03587C68 ADD X1, X31, 0x4
	0x03587C6C STRB W19, [X31 + 0x4]
	0x03587C70 LDR X0, [X8]
	0x03587C74 BL 0x1C16E04
	0x03587C78 MOV X19, X0
	0x03587C7C CBZ X0, 0x3587C94
	0x03587C80 LDR X8, [X23]
	0x03587C84 MOV X0, X19
	0x03587C88 LDR X1, [X8 + 0x40]
	0x03587C8C BL 0x1C16E00
	0x03587C90 CBZ X0, 0x3588214
	0x03587C94 LDR W8, [X23 + 0x18]
	0x03587C98 CMP W8, 0x1
	0x03587C9C B.LS 0x358820C
	0x03587CA0 STR X19, [X23 + 0x28]
	0x03587CA4 CBZ X22, 0x3588210
	0x03587CA8 ADRP X9, 0xB71000
	0x03587CAC LDR X8, [X22]
	0x03587CB0 LDR X9, [X9 + 0x348]
	0x03587CB4 ADRP X10, 0xBAF000
	0x03587CB8 LDR X1, [X9]
	0x03587CBC LDR X10, [X10 + 0x9A0]
	0x03587CC0 LDRH W9, [X8 + 0x12E]
	0x03587CC4 LDR X19, [X10]
	0x03587CC8 CBZ X9, 0x3587CEC
	0x03587CCC LDR X10, [X8 + 0xB0]
	0x03587CD0 ADD X10, X10, 0x8
	0x03587CD4 LDUR X11, [X10 - 0x8]
	0x03587CD8 CMP X11, X1
	0x03587CDC B.EQ 0x3587EC0
	0x03587CE0 SUBS X9, X9, 0x1
	0x03587CE4 ADD X10, X10, 0x10
	0x03587CE8 B.NE 0x3587CD4
	0x03587CEC MOVZ W2, 0x1
	0x03587CF0 MOV X0, X22
	0x03587CF4 BL 0x1C5C788
	0x03587CF8 B 0x3587ED0
	0x03587CFC MOV X0, X22
	0x03587D00 BL 0x1C16E08
	0x03587D04 MOV X8, X0
	0x03587D08 LDR X0, [X25]
	0x03587D0C LDR W24, [X8]
	0x03587D10 LDR W9, [X0 + 0xE0]
	0x03587D14 CBZ W9, 0x3588048
	0x03587D18 CBZ W24, 0x3588050
	0x03587D1C LDR X0, [X21 + 0xC8]
	0x03587D20 CBZ X0, 0x3588210
	0x03587D24 ADRP X8, 0xBAF000
	0x03587D28 LDR X8, [X8 + 0x988]
	0x03587D2C MOV X1, X24
	0x03587D30 LDR X2, [X8]
	0x03587D34 BL 0x222C348
	0x03587D38 CBZ X0, 0x3587F0C
	0x03587D3C ADRP X8, 0xB6C000
	0x03587D40 LDR X8, [X8 + 0x598]
	0x03587D44 MOV X23, X0
	0x03587D48 LDR X0, [X8]
	0x03587D4C LDR W8, [X0 + 0xE0]
	0x03587D50 CBNZ W8, 0x3587D58
	0x03587D54 BL 0x1C16DFC
	0x03587D58 MOV X0, X23
	0x03587D5C MOV X1, X31
	0x03587D60 BL 0x3C38948
	0x03587D64 TBZ X0, 0x0, 0x3587F0C
	0x03587D68 MOV X0, X21
	0x03587D6C MOV X1, X31
	0x03587D70 BL 0x35713EC
	0x03587D74 ADRP X8, 0xB6C000
	0x03587D78 LDR X8, [X8 + 0x9D0]
	0x03587D7C MOV X21, X0
	0x03587D80 MOVZ W1, 0x3
	0x03587D84 LDR X8, [X8]
	0x03587D88 MOV X0, X8
	0x03587D8C BL 0x1C16D6C
	0x03587D90 CBZ X0, 0x3588210
	0x03587D94 LDR X8, [X0]
	0x03587D98 MOV X24, X0
	0x03587D9C MOV X0, X22
	0x03587DA0 LDR X1, [X8 + 0x40]
	0x03587DA4 BL 0x1C16E00
	0x03587DA8 CBZ X0, 0x3588214
	0x03587DAC LDR W8, [X24 + 0x18]
	0x03587DB0 CBZ W8, 0x358820C
	0x03587DB4 STR X22, [X24 + 0x20]
	0x03587DB8 ADRP X8, 0xB6C000
	0x03587DBC LDR X8, [X8 + 0x758]
	0x03587DC0 ADD X1, X31, 0x8
	0x03587DC4 STR W20, [X31 + 0x8]
	0x03587DC8 LDR X0, [X8]
	0x03587DCC BL 0x1C16E04
	0x03587DD0 MOV X20, X0
	0x03587DD4 CBZ X0, 0x3587DEC
	0x03587DD8 LDR X8, [X24]
	0x03587DDC MOV X0, X20
	0x03587DE0 LDR X1, [X8 + 0x40]
	0x03587DE4 BL 0x1C16E00
	0x03587DE8 CBZ X0, 0x3588214
	0x03587DEC LDR W8, [X24 + 0x18]
	0x03587DF0 CMP W8, 0x1
	0x03587DF4 B.LS 0x358820C
	0x03587DF8 STR X20, [X24 + 0x28]
	0x03587DFC ADRP X8, 0xB6D000
	0x03587E00 LDR X8, [X8 + 0x9D8]
	0x03587E04 ADD X1, X31, 0x4
	0x03587E08 STRB W19, [X31 + 0x4]
	0x03587E0C LDR X0, [X8]
	0x03587E10 BL 0x1C16E04
	0x03587E14 MOV X19, X0
	0x03587E18 CBZ X0, 0x3587E30
	0x03587E1C LDR X8, [X24]
	0x03587E20 MOV X0, X19
	0x03587E24 LDR X1, [X8 + 0x40]
	0x03587E28 BL 0x1C16E00
	0x03587E2C CBZ X0, 0x3588214
	0x03587E30 LDR W8, [X24 + 0x18]
	0x03587E34 CMP W8, 0x2
	0x03587E38 B.LS 0x358820C
	0x03587E3C STR X19, [X24 + 0x30]
	0x03587E40 CBZ X21, 0x3588210
	0x03587E44 ADRP X9, 0xB71000
	0x03587E48 LDR X8, [X21]
	0x03587E4C LDR X9, [X9 + 0x348]
	0x03587E50 ADRP X10, 0xBAF000
	0x03587E54 LDR X1, [X9]
	0x03587E58 LDR X10, [X10 + 0x998]
	0x03587E5C LDRH W9, [X8 + 0x12E]
	0x03587E60 LDR X19, [X10]
	0x03587E64 CBZ X9, 0x3587E88
	0x03587E68 LDR X10, [X8 + 0xB0]
	0x03587E6C ADD X10, X10, 0x8
	0x03587E70 LDUR X11, [X10 - 0x8]
	0x03587E74 CMP X11, X1
	0x03587E78 B.EQ 0x35881DC
	0x03587E7C SUBS X9, X9, 0x1
	0x03587E80 ADD X10, X10, 0x10
	0x03587E84 B.NE 0x3587E70
	0x03587E88 MOVZ W2, 0x1
	0x03587E8C MOV X0, X21
	0x03587E90 BL 0x1C5C788
	0x03587E94 B 0x35881EC
	0x03587E98 LDR W9, [X10]
	0x03587E9C ADD W9, W9, 0x1
	0x03587EA0 ADD X8, X8, W9, 0x4, SXTW
	0x03587EA4 ADD X0, X8, 0x138
	0x03587EA8 LDP X8, X4, [X0]
	0x03587EAC MOVZ W1, 0x2
	0x03587EB0 MOV X0, X21
	0x03587EB4 MOV X2, X23
	0x03587EB8 MOV X3, X24
	0x03587EBC B 0x35881BC
	0x03587EC0 LDR W9, [X10]
	0x03587EC4 ADD W9, W9, 0x1
	0x03587EC8 ADD X8, X8, W9, 0x4, SXTW
	0x03587ECC ADD X0, X8, 0x138
	0x03587ED0 LDP X8, X4, [X0]
	0x03587ED4 MOVZ W1, 0x3
	0x03587ED8 MOV X0, X22
	0x03587EDC MOV X2, X19
	0x03587EE0 MOV X3, X23
	0x03587EE4 BLR X8
	0x03587EE8 MOV X0, X21
	0x03587EEC MOV X1, X31
	0x03587EF0 BL 0x3C32ECC
	0x03587EF4 MOV X1, X0
	0x03587EF8 MOVZ W2, 0x1
	0x03587EFC MOV X0, X21
	0x03587F00 MOV X3, X31
	0x03587F04 BL 0x357D45C
	0x03587F08 B 0x35881C4
	0x03587F0C MOV X0, X21
	0x03587F10 MOV X1, X31
	0x03587F14 BL 0x35713EC
	0x03587F18 ADRP X8, 0xB6C000
	0x03587F1C LDR X8, [X8 + 0x9D0]
	0x03587F20 MOV X21, X0
	0x03587F24 MOVZ W1, 0x3
	0x03587F28 LDR X8, [X8]
	0x03587F2C MOV X0, X8
	0x03587F30 BL 0x1C16D6C
	0x03587F34 MOV X22, X0
	0x03587F38 LDR X0, [X25]
	0x03587F3C ADD X1, X31, 0x8
	0x03587F40 STR W24, [X31 + 0x8]
	0x03587F44 BL 0x1C16E04
	0x03587F48 CBZ X22, 0x3588210
	0x03587F4C MOV X23, X0
	0x03587F50 CBZ X0, 0x3587F68
	0x03587F54 LDR X8, [X22]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0xE59000
	009 Move W8, [X20+3843]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {29}
	015 Move X0, 0xBB0000
	016 Move X0, [X0+2336]
	017 Call 0x1C17CF4
	018 Move X0, 0xB79000
	019 Move X0, [X0+1680]
	020 Call 0x1C17CF4
	021 Move X0, 0xBB0000
	022 Move X0, [X0+2344]
	023 Call 0x1C17CF4
	024 Move X0, 0xBB0000
	025 Move X0, [X0+2352]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X20+3843], W8
	029 Move X0, [X19+40]
	030 Compare X0, 0
	031 JumpIfEqual {243}
	032 Move X8, [X0]
	033 Move X9, [X8+424]
	034 Move X1, [X8+432]
	035 NotImplemented "Instruction BLR not yet implemented."
	036 Move X0, [X19+32]
	037 Compare X0, 0
	038 JumpIfEqual {243}
	039 Move X8, [X0]
	040 Move X9, [X8+504]
	041 Move X1, [X8+512]
	042 NotImplemented "Instruction BLR not yet implemented."
	043 Move X8, [X19+32]
	044 Compare X8, 0
	045 JumpIfEqual {243}
	046 Move X9, [X8]
	047 Move X1, [X19+16]
	048 Move X20, X0
	049 Move X0, X8
	050 Move X10, [X9+520]
	051 Move X2, [X9+528]
	052 NotImplemented "Instruction BLR not yet implemented."
	053 Move W8, [X19+52]
	054 Move W22, [X19+56]
	055 Move W23, [X19+48]
	056 Move X21, [X19+40]
	057 Move X0, X31
	058 Add W9, W8, 7
	059 NotImplemented "Instruction CMP not yet implemented."
	060 NotImplemented "Instruction CSEL not yet implemented."
	061 Call Encoding.get_UTF8
	062 Compare X0, 0
	063 JumpIfEqual {243}
	064 Move X9, 0xBB0000
	065 Move X8, [X0]
	066 Move X9, [X9+2336]
	067 Move X2, [X8+624]
	068 Move X1, [X9]
	069 Move X9, [X8+616]
	070 NotImplemented "Instruction BLR not yet implemented."
	071 Compare X21, 0
	072 JumpIfEqual {243}
	073 Move X8, [X21]
	074 Move X1, X0
	075 Move X0, X21
	076 Move X9, [X8+472]
	077 Move X2, [X8+480]
	078 NotImplemented "Instruction BLR not yet implemented."
	079 Move X0, [X19+32]
	080 Compare X0, 0
	081 JumpIfEqual {243}
	082 Move X8, [X0]
	083 Move X21, [X19+40]
	084 Move X9, [X8+488]
	085 Move X1, [X8+496]
	086 NotImplemented "Instruction BLR not yet implemented."
	087 Compare X21, 0
	088 JumpIfEqual {243}
	089 Move X8, [X21]
	090 Subtract W1, W0, 8
	091 Move X0, X21
	092 Move X9, [X8+584]
	093 Move X2, [X8+592]
	094 NotImplemented "Instruction BLR not yet implemented."
	095 Move X21, [X19+40]
	096 Move X0, X31
	097 Call Encoding.get_UTF8
	098 Compare X0, 0
	099 JumpIfEqual {243}
	100 Move X9, 0xBB0000
	101 Move X8, [X0]
	102 Move X9, [X9+2344]
	103 Move X2, [X8+624]
	104 Move X1, [X9]
	105 Move X9, [X8+616]
	106 NotImplemented "Instruction BLR not yet implemented."
	107 Compare X21, 0
	108 JumpIfEqual {243}
	109 Move X8, [X21]
	110 Move X1, X0
	111 Move X0, X21
	112 Move X9, [X8+472]
	113 Move X2, [X8+480]
	114 NotImplemented "Instruction BLR not yet implemented."
	115 Move X21, [X19+40]
	116 Move X0, X31
	117 Call Encoding.get_UTF8
	118 Compare X0, 0
	119 JumpIfEqual {243}
	120 Move X9, 0xBB0000
	121 Move X8, [X0]
	122 Move X9, [X9+2352]
	123 Move X2, [X8+624]
	124 Move X1, [X9]
	125 Move X9, [X8+616]
	126 NotImplemented "Instruction BLR not yet implemented."
	127 Compare X21, 0
	128 JumpIfEqual {243}
	129 Move X8, [X21]
	130 Move X1, X0
	131 Move X0, X21
	132 Move X9, [X8+472]
	133 Move X2, [X8+480]
	134 NotImplemented "Instruction BLR not yet implemented."
	135 Move X0, [X19+40]
	136 Compare X0, 0
	137 JumpIfEqual {243}
	138 Move X8, [X0]
	139 Move W1, 16
	140 Move X9, [X8+584]
	141 Move X2, [X8+592]
	142 NotImplemented "Instruction BLR not yet implemented."
	143 Move X0, [X19+40]
	144 Compare X0, 0
	145 JumpIfEqual {243}
	146 Move X8, [X0]
	147 Move W1, 1
	148 Move X9, [X8+552]
	149 Move X2, [X8+560]
	150 NotImplemented "Instruction BLR not yet implemented."
	151 Move X0, [X19+40]
	152 Compare X0, 0
	153 JumpIfEqual {243}
	154 Move X8, [X0]
	155 Move W1, [X19+56]
	156 Move X9, [X8+552]
	157 Move X2, [X8+560]
	158 NotImplemented "Instruction BLR not yet implemented."
	159 Move X0, [X19+40]
	160 Compare X0, 0
	161 JumpIfEqual {243}
	162 Move X8, [X0]
	163 Move W1, [X19+48]
	164 Move X9, [X8+584]
	165 Move X2, [X8+592]
	166 NotImplemented "Instruction BLR not yet implemented."
	167 Move X0, [X19+40]
	168 Compare X0, 0
	169 JumpIfEqual {243}
	170 Move X8, [X0]
	171 Move X9, [X8+584]
	172 Move X2, [X8+592]
	173 NotImplemented "Instruction SBFM not yet implemented."
	174 Multiply W21, W22, W8
	175 Multiply W1, W23, W21
	176 NotImplemented "Instruction BLR not yet implemented."
	177 Move X0, [X19+40]
	178 Compare X0, 0
	179 JumpIfEqual {243}
	180 Move X8, [X0]
	181 Move W1, W21
	182 Move X9, [X8+552]
	183 Move X2, [X8+560]
	184 NotImplemented "Instruction BLR not yet implemented."
	185 Move X0, [X19+40]
	186 Compare X0, 0
	187 JumpIfEqual {243}
	188 Move X8, [X0]
	189 Move W1, [X19+52]
	190 Move X9, [X8+552]
	191 Move X2, [X8+560]
	192 NotImplemented "Instruction BLR not yet implemented."
	193 Move X21, [X19+40]
	194 Move X0, X31
	195 Call Encoding.get_UTF8
	196 Compare X0, 0
	197 JumpIfEqual {243}
	198 Move X9, 0xB79000
	199 Move X8, [X0]
	200 Move X9, [X9+1680]
	201 Move X2, [X8+624]
	202 Move X1, [X9]
	203 Move X9, [X8+616]
	204 NotImplemented "Instruction BLR not yet implemented."
	205 Compare X21, 0
	206 JumpIfEqual {243}
	207 Move X8, [X21]
	208 Move X1, X0
	209 Move X0, X21
	210 Move X9, [X8+472]
	211 Move X2, [X8+480]
	212 NotImplemented "Instruction BLR not yet implemented."
	213 Move X0, [X19+40]
	214 Compare X0, 0
	215 JumpIfEqual {243}
	216 Move X8, [X0]
	217 Move W1, [X19+24]
	218 Move X9, [X8+584]
	219 Move X2, [X8+592]
	220 NotImplemented "Instruction BLR not yet implemented."
	221 Move X0, [X19+40]
	222 Compare X0, 0
	223 JumpIfEqual {243}
	224 Move X8, [X0]
	225 Move X9, [X8+424]
	226 Move X1, [X8+432]
	227 NotImplemented "Instruction BLR not yet implemented."
	228 Move X0, [X19+32]
	229 Compare X0, 0
	230 JumpIfEqual {243}
	231 Move X8, [X0]
	232 Move X1, X20
	233 Move X20, [X31+48]
	234 Move X19, [X31+56]
	235 Move X22, [X31+32]
	236 Move X21, [X31+40]
	237 Move X3, [X8+520]
	238 Move X2, [X8+528]
	239 Move X24, [X31+16]
	240 Move X23, [X31+24]
	241 Move X30, [X31+64]
	242 CallNoReturn X3
	243 Call 0x1C17F20

Method: System.Void Dispose(System.Boolean disposing)

Disassembly:
	0x035882DC STRB W8, [X20 + 0xF0A]
	0x035882E0 LDR X8, [X19 + 0xC8]
	0x035882E4 CBZ X8, 0x3588334
	0x035882E8 LDR W9, [X8 + 0x188]
	0x035882EC CMP W9, 0x1
	0x035882F0 B.EQ 0x3588324
	0x035882F4 LDR X8, [X8 + 0x190]
	0x035882F8 CBZ X8, 0x3588334
	0x035882FC LDRB W9, [X8 + 0x30]
	0x03588300 CBZ W9, 0x3588324
	0x03588304 LDR X1, [X8 + 0x10]
	0x03588308 ADRP X8, 0xBAE000
	0x0358830C LDR X8, [X8 + 0x9C0]
	0x03588310 LDP X20, X19, [X31 + 0x10]
	0x03588314 MOV X2, X31
	0x03588318 LDR X0, [X8]
	0x0358831C LDR X30, [X31], #0x20
	0x03588320 B 0x321EFD0
	0x03588324 MOV X0, X19
	0x03588328 LDP X20, X19, [X31 + 0x10]
	0x0358832C LDR X30, [X31], #0x20
	0x03588330 B 0x3588220
	0x03588334 BL 0x1C16F20
	0x03588338 STR X30, [X31 - 0x40]!
	0x0358833C STP X24, X23, [X31 + 0x10]
	0x03588340 STP X22, X21, [X31 + 0x20]
	0x03588344 STP X20, X19, [X31 + 0x30]
	0x03588348 ADRP X20, 0xE57000
	0x0358834C ADRP X21, 0xBAE000
	0x03588350 LDRB W8, [X20 + 0xF0B]
	0x03588354 LDR X21, [X21 + 0x9C8]
	0x03588358 MOV X19, X0
	0x0358835C TBNZ X8, 0x0, 0x35883F8
	0x03588360 ADRP X0, 0xBAE000
	0x03588364 LDR X0, [X0 + 0x9C8]
	0x03588368 BL 0x1C16CF4
	0x0358836C ADRP X0, 0xB6B000
	0x03588370 LDR X0, [X0 + 0x9C8]
	0x03588374 BL 0x1C16CF4
	0x03588378 ADRP X0, 0xBAC000
	0x0358837C LDR X0, [X0 + 0xBE0]
	0x03588380 BL 0x1C16CF4
	0x03588384 ADRP X0, 0xB6B000
	0x03588388 LDR X0, [X0 + 0x618]
	0x0358838C BL 0x1C16CF4
	0x03588390 ADRP X0, 0xB6B000
	0x03588394 LDR X0, [X0 + 0x720]
	0x03588398 BL 0x1C16CF4
	0x0358839C ADRP X0, 0xB70000
	0x035883A0 LDR X0, [X0 + 0x348]
	0x035883A4 BL 0x1C16CF4
	0x035883A8 ADRP X0, 0xB6B000
	0x035883AC LDR X0, [X0 + 0x9D0]
	0x035883B0 BL 0x1C16CF4
	0x035883B4 ADRP X0, 0xB6D000
	0x035883B8 LDR X0, [X0 + 0x278]
	0x035883BC BL 0x1C16CF4
	0x035883C0 ADRP X0, 0xBAE000
	0x035883C4 LDR X0, [X0 + 0x9D0]
	0x035883C8 BL 0x1C16CF4
	0x035883CC ADRP X0, 0xBAE000
	0x035883D0 LDR X0, [X0 + 0x9D8]
	0x035883D4 BL 0x1C16CF4
	0x035883D8 ADRP X0, 0xBAE000
	0x035883DC LDR X0, [X0 + 0x9E0]
	0x035883E0 BL 0x1C16CF4
	0x035883E4 ADRP X0, 0xBAE000
	0x035883E8 LDR X0, [X0 + 0x9E8]
	0x035883EC BL 0x1C16CF4
	0x035883F0 MOVZ W8, 0x1
	0x035883F4 STRB W8, [X20 + 0xF0B]
	0x035883F8 LDR X0, [X21]
	0x035883FC BL 0x1C16F10
	0x03588400 MOV X1, X31
	0x03588404 MOV X20, X0
	0x03588408 BL 0x353511C
	0x0358840C LDRB W8, [X19 + 0xD9]
	0x03588410 CBZ W8, 0x3588570
	0x03588414 MOV X0, X31
	0x03588418 BL 0x1E62178
	0x0358841C CBZ X0, 0x3588B1C
	0x03588420 LDR X8, [X0 + 0x20]
	0x03588424 CBZ X8, 0x3588B1C
	0x03588428 CBZ X20, 0x3588B1C
	0x0358842C LDR X8, [X8 + 0x28]
	0x03588430 MOV X0, X31
	0x03588434 STR X8, [X20 + 0x28]
	0x03588438 BL 0x1E62178

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move W8, [X0+28]
	006 Compare W8, 0
	007 JumpIfNotEqual {36}
	008 Move TEMP, X1
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfNotEqual {36}
	012 Move X19, X0
	013 Call WaveWriter.WriteHeader, X0
	014 Move X20, X31
	015 Move W8, [X19+60]
	016 Compare W8, 0
	017 JumpIfEqual {32}
	018 Move X0, [X19+40]
	019 Compare X0, 0
	020 JumpIfEqual {26}
	021 Move X8, [X0]
	022 Move X9, [X8+392]
	023 Move X1, [X8+400]
	024 NotImplemented "Instruction BLR not yet implemented."
	025 Move [X19+40], X31
	026 Move X0, [X19+32]
	027 Compare X0, 0
	028 JumpIfEqual {32}
	029 Move X1, X31
	030 Call Stream.Dispose, X0
	031 Move [X19+32], X31
	032 Compare X20, 0
	033 JumpIfNotEqual {41}
	034 Move W8, 1
	035 Move [X19+28], W8
	036 Move X20, [X31+16]
	037 Move X19, [X31+24]
	038 Move X30, [X31+32]
	039 Move X21, [X31+40]
	040 Return 
	041 Move X0, X20
	042 Call 0x1C17F18
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Move X21, X0
	045 Move X0, X21
	046 Call 0x3EB2AD0
	047 Move X20, X0
	048 Move X0, 0xB6C000
	049 Move X0, [X0+2000]
	050 Call 0x1C17D08
	051 Move X8, [X20]
	052 Move X1, [X8]
	053 Call 0x1C18270
	054 Move TEMP, X0
	055 And TEMP, TEMP, 1
	056 Compare TEMP, 1
	057 JumpIfNotEqual {59}
	058 Call 0x3EB2AE0
	059 Move W0, 8
	060 Call 0x3EB2AF0
	061 Move X8, [X20]
	062 Move [X0], X8
	063 Move X1, 0x92D000
	064 Add X1, X1, 3672
	065 Move X2, X31
	066 Call 0x3EB2B00
	067 Move X21, X0
	068 Move X20, X1
	069 Move X21, X0
	070 Call 0x3EB2AE0
	071 Move W1, W20
	072 Move W8, 1
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Move X0, X21
	075 Call 0x3EB2AD0
	076 Move X20, [X0]
	077 Call 0x3EB2AE0
	078 Move X20, X31
	079 Move X21, X0
	080 Move W8, [X19+60]
	081 Compare W8, 0
	082 JumpIfEqual {97}
	083 Move X0, [X19+40]
	084 Compare X0, 0
	085 JumpIfEqual {91}
	086 Move X8, [X0]
	087 Move X9, [X8+392]
	088 Move X1, [X8+400]
	089 NotImplemented "Instruction BLR not yet implemented."
	090 Move [X19+40], X31
	091 Move X0, [X19+32]
	092 Compare X0, 0
	093 JumpIfEqual {97}
	094 Move X1, X31
	095 Call Stream.Dispose, X0
	096 Move [X19+32], X31
	097 Compare X20, 0
	098 JumpIfNotEqual {101}
	099 Move X0, X21
	100 Call 0x1D2D690
	101 Move X0, X20
	102 Call 0x1C17F18
	103 Call 0x1991590

Method: System.Void Finalize()

Disassembly:
	0x0358843C CBZ X0, 0x3588B1C
	0x03588440 LDR X8, [X0 + 0x20]
	0x03588444 CBZ X8, 0x3588B1C
	0x03588448 LDR X8, [X8 + 0x30]
	0x0358844C MOV X0, X31
	0x03588450 STR X8, [X20 + 0x30]
	0x03588454 BL 0x1E62178
	0x03588458 CBZ X0, 0x3588B1C
	0x0358845C LDR X8, [X0 + 0x20]
	0x03588460 CBZ X8, 0x3588B1C
	0x03588464 LDR X8, [X8 + 0x40]
	0x03588468 MOV X0, X31
	0x0358846C STR X8, [X20 + 0x40]
	0x03588470 BL 0x1E62178
	0x03588474 CBZ X0, 0x3588B1C
	0x03588478 LDR X8, [X0 + 0x20]
	0x0358847C CBZ X8, 0x3588B1C
	0x03588480 LDRB W8, [X8 + 0x38]
	0x03588484 MOV X0, X31
	0x03588488 STRB W8, [X20 + 0x38]
	0x0358848C BL 0x1E62178
	0x03588490 CBZ X0, 0x3588B1C
	0x03588494 LDR X8, [X0 + 0x20]
	0x03588498 CBZ X8, 0x3588B1C
	0x0358849C LDR X8, [X8 + 0x50]
	0x035884A0 MOV X0, X31
	0x035884A4 STR X8, [X20 + 0x50]
	0x035884A8 BL 0x1E62178
	0x035884AC CBZ X0, 0x3588B1C
	0x035884B0 LDR X8, [X0 + 0x20]
	0x035884B4 CBZ X8, 0x3588B1C
	0x035884B8 LDR W8, [X8 + 0x58]
	0x035884BC MOV X0, X31
	0x035884C0 STR W8, [X20 + 0x58]
	0x035884C4 BL 0x1E62178
	0x035884C8 CBZ X0, 0x3588B1C
	0x035884CC LDR X8, [X0 + 0x20]
	0x035884D0 CBZ X8, 0x3588B1C
	0x035884D4 LDR X8, [X8 + 0x60]
	0x035884D8 MOV X0, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X0]
	006 Move X19, X0
	007 Move X9, [X8+392]
	008 Move X2, [X8+400]
	009 Move W1, W31
	010 NotImplemented "Instruction BLR not yet implemented."
	011 Move X0, X19
	012 Move X20, [X31+16]
	013 Move X19, [X31+24]
	014 Move X1, X31
	015 Move X30, [X31+32]
	016 Move X21, [X31+40]
	017 Call Object.Finalize, X0
	018 Return 
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Move X21, X0
	021 Move X0, X21
	022 Call 0x3EB2AD0
	023 Move X20, [X0]
	024 Call 0x3EB2AE0
	025 Move X0, X19
	026 Move X1, X31
	027 Call Object.Finalize, X0
	028 Compare X20, 0
	029 JumpIfNotEqual {36}
	030 Move X20, [X31+16]
	031 Move X19, [X31+24]
	032 Move X30, [X31+32]
	033 Move X21, [X31+40]
	034 Return 
	035 Move X20, X31
	036 Move X0, X20
	037 Call 0x1C17F18
	038 Move X21, X0
	039 Move X0, X19
	040 Move X1, X31
	041 Call Object.Finalize, X0
	042 Compare X20, 0
	043 JumpIfNotEqual {46}
	044 Move X0, X21
	045 Call 0x1D2D690
	046 Move X0, X20
	047 Call 0x1C17F18
	048 Call 0x1991590

