Type: Photon.Voice.Unity.UtilityScripts.MicAmplifierShort

Method: System.Single get_AmplificationFactor()

Disassembly:
	0x035832CC LDR X8, [X0 + 0xB8]
	0x035832D0 LDR X2, [X23]

ISIL:
	001 Move V0, [X0+16]
	002 Return V0

Method: System.Void set_AmplificationFactor(System.Single value)

Disassembly:
	0x035832D4 MOV W0, W20
	0x035832D8 MOV V0.16B, V8.16B

ISIL:
	001 Move [X0+16], S0
	002 Return 

Method: System.Boolean get_Disabled()

Disassembly:
	0x035832DC LDR X3, [X8]
	0x035832E0 MOV V1.16B, V9.16B

ISIL:
	001 Move W0, [X0+20]
	002 Return X0

Method: System.Void set_Disabled(System.Boolean value)

Disassembly:
	0x035832E4 MOV V2.16B, V10.16B
	0x035832E8 MOV V3.16B, V11.16B
	0x035832EC MOV X1, X21

ISIL:
	001 And W8, W1, 1
	002 Move [X0+20], W8
	003 Return 

Method: System.Void .ctor(System.Single amplificationFactor)

Disassembly:
	0x03583214 MOVZ W8, 0x1
	0x03583218 STRB W8, [X20 + 0xEED]
	0x0358321C LDRB W8, [X19 + 0x3C]
	0x03583220 CBZ W8, 0x3583300
	0x03583224 ADRP X8, 0xBB3000
	0x03583228 LDR X8, [X8 + 0x798]
	0x0358322C ADRP X23, 0xBB3000
	0x03583230 LDR X22, [X19 + 0x40]
	0x03583234 LDR W20, [X19 + 0x38]
	0x03583238 LDR X0, [X8]

ISIL:
	001 Move [X31-32], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X19
	004 Move X1, X31
	005 Move V8, V0
	006 Move X19, X0
	007 Call Object..ctor, X0
	008 Move [X19+16], S8
	009 Move X30, [X31+16]
	010 Move X19, [X31+24]
	011 Move V8, [X31+32]
	012 Return 

Method: System.Int16[] Process(System.Int16[] buf)

Disassembly:
	0x035832F0 MOV X4, X31
	0x035832F4 BL 0x3C6F014
	0x035832F8 STP S0, S1, [X19 + 0x28]
	0x035832FC STP S2, S3, [X19 + 0x30]
	0x03583300 LDP X20, X19, [X31 + 0x40]
	0x03583304 LDP X22, X21, [X31 + 0x30]
	0x03583308 LDP X30, X23, [X31 + 0x20]
	0x0358330C LDP D9, D8, [X31 + 0x10]
	0x03583310 LDP D11, D10, [X31], #0x50
	0x03583314 RET
	0x03583318 STR X30, [X31 - 0x20]!
	0x0358331C STP X20, X19, [X31 + 0x10]
	0x03583320 ADRP X19, 0xE5C000
	0x03583324 ADRP X20, 0xB97000
	0x03583328 LDRB W8, [X19 + 0xEEE]
	0x0358332C LDR X20, [X20 + 0x878]
	0x03583330 TBNZ X8, 0x0, 0x3583354
	0x03583334 ADRP X0, 0xB97000
	0x03583338 LDR X0, [X0 + 0x878]
	0x0358333C BL 0x1C16CF4
	0x03583340 ADRP X0, 0xBB3000
	0x03583344 LDR X0, [X0 + 0x7A8]
	0x03583348 BL 0x1C16CF4
	0x0358334C MOVZ W8, 0x1
	0x03583350 STRB W8, [X19 + 0xEEE]
	0x03583354 LDR X19, [X20]
	0x03583358 LDR X8, [X19 + 0x38]
	0x0358335C CBNZ X8, 0x358336C
	0x03583360 MOV X0, X19

ISIL:
	001 Move [X31-16], X30
	002 Move W8, [X0+20]
	003 Compare W8, 0
	004 JumpIfNotEqual {30}
	005 Compare X1, 0
	006 JumpIfEqual {34}
	007 Move W8, [X1+24]
	008 Move X9, X8
	009 ShiftRight X9, 32
	010 And X9, X9, 0x7FFFFFFF
	011 NotImplemented "Instruction CMP not yet implemented."
	012 Move X9, W8
	013 Add X10, X1, 32
	014 Move W11, 0x7F800000
	015 Compare X8, 0
	016 JumpIfEqual {33}
	017 NotImplemented "Instruction LDRSH not yet implemented."
	018 Move V0, [X0+16]
	019 Move S1, W11
	020 Subtract X9, X9, 1
	021 NotImplemented "Instruction SCVTF not yet implemented."
	022 Multiply S0, S0, S2
	023 NotImplemented "Instruction FCVTZS not yet implemented."
	024 NotImplemented "Instruction FCMP not yet implemented."
	025 NotImplemented "Instruction CSEL not yet implemented."
	026 NotImplemented "Instruction STRH not yet implemented."
	027 Subtract X8, X8, 1
	028 Compare X9, 0
	029 JumpIfNotEqual {15}
	030 Move X0, X1
	031 Move X30, [X31+16]
	032 Return X0
	033 Call 0x1C17F28
	034 Call 0x1C17F20

Method: System.Void Dispose()

Disassembly:
	0x03583364 BL 0x1C5C6E0

ISIL:
	001 Return 

