Type: Photon.Voice.Unity.VoiceLogger

Method: System.Void Start()

Disassembly:
	0x03580CF4 ADRP X0, 0xBB6000

ISIL:
	001 Return 

Method: Photon.Voice.Unity.VoiceLogger FindLogger(UnityEngine.GameObject gameObject)

Disassembly:
	0x03580634 LDR W8, [X0 + 0xE0]
	0x03580638 CBNZ W8, 0x3580644
	0x0358063C BL 0x1C16DFC
	0x03580640 LDR X0, [X23]
	0x03580644 LDR X8, [X0 + 0xB8]
	0x03580648 MOV X0, X31
	0x0358064C LDR X20, [X8]
	0x03580650 BL 0x3BFB460
	0x03580654 CBZ X20, 0x3580828
	0x03580658 ADRP X24, 0xBB6000
	0x0358065C LDR X24, [X24 + 0x638]
	0x03580660 MOV W1, W0
	0x03580664 MOV X0, X20
	0x03580668 LDR X2, [X24]
	0x0358066C BL 0x2A3EF1C
	0x03580670 CMP W21, W0
	0x03580674 B.EQ 0x3580810
	0x03580678 LDR X8, [X19 + 0x20]
	0x0358067C CBZ X8, 0x3580828
	0x03580680 LDR X20, [X8 + 0x18]
	0x03580684 ADRP X8, 0xB73000
	0x03580688 LDR X8, [X8 + 0x9D0]
	0x0358068C MOVZ W1, 0x2
	0x03580690 LDR X0, [X8]
	0x03580694 BL 0x1C16D6C
	0x03580698 ADRP X25, 0xB73000
	0x0358069C LDR W8, [X19 + 0x3C]
	0x035806A0 LDR X25, [X25 + 0x758]
	0x035806A4 MOV X21, X0
	0x035806A8 ADD X1, X31, 0xC
	0x035806AC STR W8, [X31 + 0xC]
	0x035806B0 LDR X0, [X25]
	0x035806B4 BL 0x1C16E04
	0x035806B8 CBZ X21, 0x3580828
	0x035806BC MOV X22, X0
	0x035806C0 CBZ X0, 0x35806D8
	0x035806C4 LDR X8, [X21]
	0x035806C8 MOV X0, X22
	0x035806CC LDR X1, [X8 + 0x40]
	0x035806D0 BL 0x1C16E00
	0x035806D4 CBZ X0, 0x3580830
	0x035806D8 LDR W8, [X21 + 0x18]
	0x035806DC CBZ W8, 0x358082C
	0x035806E0 STR X22, [X21 + 0x20]
	0x035806E4 LDR X0, [X23]
	0x035806E8 LDR W8, [X0 + 0xE0]
	0x035806EC CBNZ W8, 0x35806F8
	0x035806F0 BL 0x1C16DFC
	0x035806F4 LDR X0, [X23]
	0x035806F8 LDR X8, [X0 + 0xB8]
	0x035806FC MOV X0, X31
	0x03580700 LDR X22, [X8]
	0x03580704 BL 0x3BFB460
	0x03580708 CBZ X22, 0x3580828
	0x0358070C LDR X2, [X24]
	0x03580710 MOV W1, W0
	0x03580714 MOV X0, X22
	0x03580718 BL 0x2A3EF1C
	0x0358071C LDR X8, [X25]
	0x03580720 STR W0, [X31 + 0x8]
	0x03580724 ADD X1, X31, 0x8
	0x03580728 MOV X0, X8
	0x0358072C BL 0x1C16E04
	0x03580730 MOV X22, X0
	0x03580734 CBZ X0, 0x358074C
	0x03580738 LDR X8, [X21]
	0x0358073C MOV X0, X22
	0x03580740 LDR X1, [X8 + 0x40]
	0x03580744 BL 0x1C16E00
	0x03580748 CBZ X0, 0x3580830
	0x0358074C LDR W8, [X21 + 0x18]
	0x03580750 CMP W8, 0x1
	0x03580754 B.LS 0x358082C
	0x03580758 STR X22, [X21 + 0x28]
	0x0358075C CBZ X20, 0x3580828
	0x03580760 ADRP X9, 0xB78000
	0x03580764 LDR X8, [X20]
	0x03580768 LDR X9, [X9 + 0x348]
	0x0358076C ADRP X10, 0xBB6000
	0x03580770 LDR X1, [X9]
	0x03580774 LDR X10, [X10 + 0x648]
	0x03580778 LDRH W9, [X8 + 0x12E]
	0x0358077C LDR X22, [X10]
	0x03580780 CBZ X9, 0x35807A4
	0x03580784 LDR X10, [X8 + 0xB0]
	0x03580788 ADD X10, X10, 0x8
	0x0358078C LDUR X11, [X10 - 0x8]
	0x03580790 CMP X11, X1
	0x03580794 B.EQ 0x35807B4
	0x03580798 SUBS X9, X9, 0x1
	0x0358079C ADD X10, X10, 0x10
	0x035807A0 B.NE 0x358078C
	0x035807A4 MOVZ W2, 0x1
	0x035807A8 MOV X0, X20
	0x035807AC BL 0x1C5C788
	0x035807B0 B 0x35807C4
	0x035807B4 LDR W9, [X10]
	0x035807B8 ADD W9, W9, 0x1
	0x035807BC ADD X8, X8, W9, 0x4, SXTW
	0x035807C0 ADD X0, X8, 0x138
	0x035807C4 LDP X8, X4, [X0]
	0x035807C8 MOVZ W1, 0x3
	0x035807CC MOV X0, X20
	0x035807D0 MOV X2, X22
	0x035807D4 MOV X3, X21
	0x035807D8 BLR X8
	0x035807DC LDR X8, [X23]
	0x035807E0 MOV X0, X31
	0x035807E4 LDR X8, [X8 + 0xB8]
	0x035807E8 LDR X20, [X8]
	0x035807EC BL 0x3BFB460
	0x035807F0 CBZ X20, 0x3580828
	0x035807F4 LDR X2, [X24]
	0x035807F8 MOV W1, W0
	0x035807FC MOV X0, X20
	0x03580800 BL 0x2A3EF1C
	0x03580804 STR W0, [X19 + 0x3C]
	0x03580808 MOV X0, X19
	0x0358080C BL 0x358015C
	0x03580810 LDP X20, X19, [X31 + 0x40]
	0x03580814 LDP X22, X21, [X31 + 0x30]
	0x03580818 LDP X24, X23, [X31 + 0x20]
	0x0358081C LDP X30, X25, [X31 + 0x10]
	0x03580820 ADD X31, X31, 0x50
	0x03580824 RET
	0x03580828 BL 0x1C16F20
	0x0358082C BL 0x1C16F28
	0x03580830 BL 0x1C16F44
	0x03580834 MOV X1, X31
	0x03580838 BL 0x1C16DEC
	0x0358083C SUB X31, X31, 0x40
	0x03580840 STP X30, X23, [X31 + 0x10]
	0x03580844 STP X22, X21, [X31 + 0x20]
	0x03580848 STP X20, X19, [X31 + 0x30]
	0x0358084C ADRP X20, 0xE5F000
	0x03580850 LDRB W8, [X20 + 0xED3]
	0x03580854 MOV W22, W2
	0x03580858 MOV X19, X1
	0x0358085C MOV X21, X0
	0x03580860 TBNZ X8, 0x0, 0x358089C
	0x03580864 ADRP X0, 0xB78000
	0x03580868 LDR X0, [X0 + 0x348]
	0x0358086C BL 0x1C16CF4
	0x03580870 ADRP X0, 0xB73000
	0x03580874 LDR X0, [X0 + 0x758]
	0x03580878 BL 0x1C16CF4
	0x0358087C ADRP X0, 0xB73000
	0x03580880 LDR X0, [X0 + 0x9D0]
	0x03580884 BL 0x1C16CF4
	0x03580888 ADRP X0, 0xBB6000
	0x0358088C LDR X0, [X0 + 0x658]
	0x03580890 BL 0x1C16CF4
	0x03580894 MOVZ W8, 0x1
	0x03580898 STRB W8, [X20 + 0xED3]
	0x0358089C LDR W8, [X21 + 0x3C]
	0x035808A0 CMP W8, W22
	0x035808A4 B.NE 0x35808CC
	0x035808A8 LDR X0, [X21 + 0x40]
	0x035808AC CBZ X0, 0x3580A08
	0x035808B0 MOV X1, X19
	0x035808B4 LDP X20, X19, [X31 + 0x30]
	0x035808B8 LDP X22, X21, [X31 + 0x20]
	0x035808BC LDP X30, X23, [X31 + 0x10]
	0x035808C0 MOV X2, X31
	0x035808C4 ADD X31, X31, 0x40
	0x035808C8 B 0x35697CC
	0x035808CC LDR X8, [X21 + 0x20]
	0x035808D0 CBZ X8, 0x3580A08
	0x035808D4 LDR X19, [X8 + 0x18]
	0x035808D8 ADRP X8, 0xB73000
	0x035808DC LDR X8, [X8 + 0x9D0]
	0x035808E0 MOVZ W1, 0x2
	0x035808E4 LDR X0, [X8]
	0x035808E8 BL 0x1C16D6C
	0x035808EC ADRP X23, 0xB73000
	0x035808F0 LDR X23, [X23 + 0x758]
	0x035808F4 MOV X20, X0
	0x035808F8 ADD X1, X31, 0xC
	0x035808FC STR W22, [X31 + 0xC]
	0x03580900 LDR X0, [X23]
	0x03580904 BL 0x1C16E04
	0x03580908 CBZ X20, 0x3580A08
	0x0358090C MOV X22, X0
	0x03580910 CBZ X0, 0x3580928
	0x03580914 LDR X8, [X20]
	0x03580918 MOV X0, X22
	0x0358091C LDR X1, [X8 + 0x40]
	0x03580920 BL 0x1C16E00
	0x03580924 CBZ X0, 0x3580A10
	0x03580928 LDR W8, [X20 + 0x18]
	0x0358092C CBZ W8, 0x3580A0C
	0x03580930 STR X22, [X20 + 0x20]
	0x03580934 LDR W8, [X21 + 0x3C]
	0x03580938 LDR X0, [X23]
	0x0358093C ADD X1, X31, 0x8
	0x03580940 STR W8, [X31 + 0x8]
	0x03580944 BL 0x1C16E04
	0x03580948 MOV X21, X0
	0x0358094C CBZ X0, 0x3580964
	0x03580950 LDR X8, [X20]
	0x03580954 MOV X0, X21
	0x03580958 LDR X1, [X8 + 0x40]

ISIL:
	001 Move [X31-96], X30
	002 Move [X31+16], X28
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X20, 0xE60000
	013 Move X24, 0xB74000
	014 Move X21, 0xBB7000
	015 Move X22, 0xBB7000
	016 Move W8, [X20+3787]
	017 Move X24, [X24+1432]
	018 Move X21, [X21+1496]
	019 Move X22, [X22+1504]
	020 Move X19, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {109}
	025 Move X0, 0xB74000
	026 Move X0, [X0+2504]
	027 Call 0x1C17CF4
	028 Move X0, 0xBB7000
	029 Move X0, [X0+1504]
	030 Call 0x1C17CF4
	031 Move X0, 0xBB7000
	032 Move X0, [X0+1496]
	033 Call 0x1C17CF4
	034 Move X0, 0xB74000
	035 Move X0, [X0+1432]
	036 Call 0x1C17CF4
	037 Move X0, 0xBB7000
	038 Move X0, [X0+1512]
	039 Call 0x1C17CF4
	040 Move X0, 0xBB7000
	041 Move X0, [X0+1520]
	042 Call 0x1C17CF4
	043 Move W8, 1
	044 Move [X20+3787], W8
	045 Compare X20, 0
	046 JumpIfEqual {252}
	047 Move X1, [X22]
	048 Move X0, X20
	049 Call 0x21E62E4, X0
	050 Move X8, [X24]
	051 Move X19, X0
	052 Move W9, [X8+224]
	053 Compare W9, 0
	054 JumpIfNotEqual {57}
	055 Move X0, X8
	056 Call 0x1C17DFC
	057 Move X0, X19
	058 Move X1, X31
	059 Move X2, X31
	060 Call Object.op_Inequality, X0, X1
	061 Move TEMP, X0
	062 And TEMP, TEMP, 1
	063 Compare TEMP, 1
	064 JumpIfNotEqual {74}
	065 Compare X19, 0
	066 JumpIfEqual {252}
	067 Move X0, X19
	068 Move X1, X31
	069 Call Behaviour.get_enabled, X0
	070 Move TEMP, X0
	071 And TEMP, TEMP, 1
	072 Compare TEMP, 1
	073 JumpIfEqual {239}
	074 Move X0, X20
	075 Move X1, X31
	076 Call GameObject.get_transform, X0
	077 Compare X0, 0
	078 JumpIfEqual {252}
	079 Move X1, X31
	080 Call Transform.get_parent, X0
	081 Move X8, [X24]
	082 Move X19, X0
	083 Move W9, [X8+224]
	084 Compare W9, 0
	085 JumpIfNotEqual {88}
	086 Move X0, X8
	087 Call 0x1C17DFC
	088 Move X0, X19
	089 Move X1, X31
	090 Move X2, X31
	091 Call Object.op_Equality, X0, X1
	092 Move X19, X31
	093 Move TEMP, X0
	094 And TEMP, TEMP, 1
	095 Compare TEMP, 1
	096 JumpIfEqual {109}
	097 Move X0, X20
	098 Move X1, X31
	099 Call GameObject.get_transform, X0
	100 Compare X0, 0
	101 JumpIfEqual {252}
	102 Move X1, X31
	103 Call Transform.get_parent, X0
	104 Compare X0, 0
	105 JumpIfEqual {252}
	106 Move X1, X31
	107 Call Component.get_gameObject, X0
	108 Move X19, X0
	109 Move X0, [X24]
	110 Move X20, X19
	111 Move W8, [X0+224]
	112 Compare W8, 0
	113 JumpIfNotEqual {115}
	114 Call 0x1C17DFC
	115 Move X0, X20
	116 Move X1, X31
	117 Move X2, X31
	118 Call Object.op_Inequality, X0, X1
	119 Move TEMP, X0
	120 And TEMP, TEMP, 1
	121 Compare TEMP, 1
	122 JumpIfEqual {45}
	123 Move X0, [X24]
	124 Move W8, [X0+224]
	125 Compare W8, 0
	126 JumpIfNotEqual {128}
	127 Call 0x1C17DFC
	128 Move X0, [X21]
	129 Call 0x222E200
	130 Compare X0, 0
	131 JumpIfEqual {252}
	132 Move W8, [X0+24]
	133 Move X20, X0
	134 NotImplemented "Instruction CMP not yet implemented."
	135 Move X26, 0xB74000
	136 Move X27, 0xBB7000
	137 Move X28, 0xBB7000
	138 Move X26, [X26+2504]
	139 Move X27, [X27+1512]
	140 Move X28, [X28+1520]
	141 Move W25, W31
	142 Move X19, X31
	143 NotImplemented "Instruction CMP not yet implemented."
	144 Add X8, X20, W25
	145 Move X21, [X8+32]
	146 Compare X21, 0
	147 JumpIfEqual {252}
	148 Move X0, X21
	149 Move X1, X31
	150 Call Component.get_transform, X0
	151 Compare X0, 0
	152 JumpIfEqual {252}
	153 Move X1, X31
	154 Call Transform.get_parent, X0
	155 Move X8, [X24]
	156 Move X22, X0
	157 Move W9, [X8+224]
	158 Compare W9, 0
	159 JumpIfNotEqual {162}
	160 Move X0, X8
	161 Call 0x1C17DFC
	162 Move X0, X22
	163 Move X1, X31
	164 Move X2, X31
	165 Call Object.op_Equality, X0, X1
	166 Move TEMP, X0
	167 And TEMP, TEMP, 1
	168 Compare TEMP, 1
	169 JumpIfNotEqual {235}
	170 Move X0, X21
	171 Move X1, X31
	172 Call Behaviour.get_enabled, X0
	173 Move TEMP, X0
	174 And TEMP, TEMP, 1
	175 Compare TEMP, 1
	176 JumpIfNotEqual {235}
	177 Move X0, [X24]
	178 Move W8, [X0+224]
	179 Compare W8, 0
	180 JumpIfNotEqual {182}
	181 Call 0x1C17DFC
	182 Move X0, X19
	183 Move X1, X31
	184 Move X2, X31
	185 Call Object.op_Inequality, X0, X1
	186 Move TEMP, X0
	187 And TEMP, TEMP, 1
	188 Compare TEMP, 1
	189 JumpIfNotEqual {234}
	190 Compare X19, 0
	191 JumpIfEqual {252}
	192 Move X0, X19
	193 Move X1, X31
	194 Call Object.get_name, X0
	195 Move X23, [X26]
	196 Move X22, X0
	197 Move X8, [X23+56]
	198 Compare X8, 0
	199 JumpIfNotEqual {203}
	200 Move X0, X23
	201 Call 0x1C5D6E0
	202 Move X8, [X23+56]
	203 Move X0, [X8+16]
	204 Move W8, [X0+309]
	205 Move TEMP, X8
	206 And TEMP, TEMP, 1
	207 Compare TEMP, 1
	208 JumpIfEqual {210}
	209 Call 0x1C5D684
	210 Move W8, [X0+224]
	211 Compare W8, 0
	212 JumpIfNotEqual {214}
	213 Call 0x1C17DFC
	214 Move X8, [X23+56]
	215 Move X0, [X8+16]
	216 Move W8, [X0+309]
	217 Move TEMP, X8
	218 And TEMP, TEMP, 1
	219 Compare TEMP, 1
	220 JumpIfEqual {222}
	221 Call 0x1C5D684
	222 Move X8, [X0+184]
	223 Move X2, [X27]
	224 Move X4, [X28]
	225 Move W0, 3
	226 Move X5, [X8]
	227 Move X1, X21
	228 Move X3, X22
	229 Call UnityLogger.Log, X0, X1, X2, X3, X4, X5
	230 Move X0, X21
	231 Move W1, W31
	232 Move X2, X31
	233 Call Behaviour.set_enabled, X0, X1
	234 Move X19, X21
	235 Move W8, [X20+24]
	236 Add W25, W25, 1
	237 NotImplemented "Instruction CMP not yet implemented."
	238 Move X19, X31
	239 Move X0, X19
	240 Move X20, [X31+80]
	241 Move X19, [X31+88]
	242 Move X22, [X31+64]
	243 Move X21, [X31+72]
	244 Move X24, [X31+48]
	245 Move X23, [X31+56]
	246 Move X26, [X31+32]
	247 Move X25, [X31+40]
	248 Move X28, [X31+16]
	249 Move X27, [X31+24]
	250 Move X30, [X31+96]
	251 Return X0
	252 Call 0x1C17F20
	253 Call 0x1C17F28

Method: Photon.Voice.Unity.VoiceLogger CreateRootLogger()

Disassembly:
	0x03580A20 STP X20, X19, [X31 + 0x10]
	0x03580A24 ADRP X21, 0xE5F000
	0x03580A28 LDRB W8, [X21 + 0xED4]
	0x03580A2C MOV X20, X1
	0x03580A30 MOV X19, X0
	0x03580A34 TBNZ X8, 0x0, 0x3580A7C
	0x03580A38 ADRP X0, 0xB73000
	0x03580A3C LDR X0, [X0 + 0x9C8]
	0x03580A40 BL 0x1C16CF4
	0x03580A44 ADRP X0, 0xB78000
	0x03580A48 LDR X0, [X0 + 0x348]
	0x03580A4C BL 0x1C16CF4
	0x03580A50 ADRP X0, 0xB9F000
	0x03580A54 LDR X0, [X0 + 0x168]
	0x03580A58 BL 0x1C16CF4
	0x03580A5C ADRP X0, 0xBB6000
	0x03580A60 LDR X0, [X0 + 0x660]
	0x03580A64 BL 0x1C16CF4
	0x03580A68 ADRP X0, 0xBB6000
	0x03580A6C LDR X0, [X0 + 0x668]
	0x03580A70 BL 0x1C16CF4
	0x03580A74 MOVZ W8, 0x1
	0x03580A78 STRB W8, [X21 + 0xED4]
	0x03580A7C MOV X0, X19
	0x03580A80 MOV X1, X31
	0x03580A84 BL 0x3C323D4
	0x03580A88 TBZ X0, 0x0, 0x3580C84
	0x03580A8C CBZ X20, 0x3580C90
	0x03580A90 LDR X20, [X20 + 0x10]
	0x03580A94 CBZ X20, 0x3580C90
	0x03580A98 LDR W8, [X20 + 0x50]
	0x03580A9C CMP W8, 0x1
	0x03580AA0 B.NE 0x3580B88
	0x03580AA4 ADRP X8, 0xB9F000
	0x03580AA8 LDR X8, [X8 + 0x168]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xE60000
	006 Move X21, 0xB74000
	007 Move X19, 0xBB7000
	008 Move W8, [X20+3788]
	009 Move X21, [X21+2648]
	010 Move X19, [X19+1528]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {26}
	015 Move X0, 0xBB7000
	016 Move X0, [X0+1536]
	017 Call 0x1C17CF4
	018 Move X0, 0xB74000
	019 Move X0, [X0+2648]
	020 Call 0x1C17CF4
	021 Move X0, 0xBB7000
	022 Move X0, [X0+1528]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X20+3788], W8
	026 Move X0, [X21]
	027 Call 0x1C17F10
	028 Move X1, [X19]
	029 Move X2, X31
	030 Move X19, X0
	031 Call GameObject..ctor, X0, X1
	032 Compare X19, 0
	033 JumpIfEqual {44}
	034 Move X8, 0xBB7000
	035 Move X8, [X8+1536]
	036 Move X0, X19
	037 Move X20, [X31+16]
	038 Move X19, [X31+24]
	039 Move X1, [X8]
	040 Move X30, [X31+32]
	041 Move X21, [X31+40]
	042 Call 0x21E61FC, X0
	043 Return X0
	044 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x03580CF8 LDR X0, [X0 + 0x678]
	0x03580CFC BL 0x1C16CF4
	0x03580D00 ADRP X0, 0xBB5000
	0x03580D04 LDR X0, [X0 + 0xD60]

ISIL:
	001 Move W8, 2
	002 Move X1, X31
	003 Move [X0+32], W8
	004 Call MonoBehaviour..ctor, X0
	005 Return 

