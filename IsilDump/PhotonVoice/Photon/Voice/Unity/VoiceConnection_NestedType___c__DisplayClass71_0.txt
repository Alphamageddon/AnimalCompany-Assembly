Type: Photon.Voice.Unity.VoiceConnection/<>c__DisplayClass71_0

Method: System.Void .ctor()

Disassembly:
	0x0357FFE4 CBNZ X20, 0x3580000
	0x0357FFE8 B 0x35800D8

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Void <OnRemoteVoiceInfo>b__0()

Disassembly:
	0x03580420 BL 0x3BFB7A4
	0x03580424 MOV X0, X20
	0x03580428 LDP X20, X19, [X31 + 0x20]
	0x0358042C LDP X22, X21, [X31 + 0x10]
	0x03580430 MOV X1, X31
	0x03580434 LDR X30, [X31], #0x30
	0x03580438 B 0x3BFB4B0
	0x0358043C MOVZ W0, 0x1
	0x03580440 RET
	0x03580444 RET
	0x03580448 SUB X31, X31, 0x50
	0x0358044C STP X30, X25, [X31 + 0x10]
	0x03580450 STP X24, X23, [X31 + 0x20]
	0x03580454 STP X22, X21, [X31 + 0x30]
	0x03580458 STP X20, X19, [X31 + 0x40]
	0x0358045C ADRP X20, 0xE5F000
	0x03580460 LDRB W8, [X20 + 0xED2]
	0x03580464 MOV X19, X0
	0x03580468 TBNZ X8, 0x0, 0x35804C8
	0x0358046C ADRP X0, 0xBB6000
	0x03580470 LDR X0, [X0 + 0x638]
	0x03580474 BL 0x1C16CF4
	0x03580478 ADRP X0, 0xB78000
	0x0358047C LDR X0, [X0 + 0x348]
	0x03580480 BL 0x1C16CF4
	0x03580484 ADRP X0, 0xB73000
	0x03580488 LDR X0, [X0 + 0x758]
	0x0358048C BL 0x1C16CF4
	0x03580490 ADRP X0, 0xB73000
	0x03580494 LDR X0, [X0 + 0x9D0]
	0x03580498 BL 0x1C16CF4
	0x0358049C ADRP X0, 0xBB6000
	0x035804A0 LDR X0, [X0 + 0x640]
	0x035804A4 BL 0x1C16CF4
	0x035804A8 ADRP X0, 0xBB6000
	0x035804AC LDR X0, [X0 + 0x648]
	0x035804B0 BL 0x1C16CF4
	0x035804B4 ADRP X0, 0xBB6000
	0x035804B8 LDR X0, [X0 + 0x650]
	0x035804BC BL 0x1C16CF4
	0x035804C0 MOVZ W8, 0x1
	0x035804C4 STRB W8, [X20 + 0xED2]
	0x035804C8 LDR W20, [X19 + 0x50]
	0x035804CC MOV X0, X31
	0x035804D0 BL 0x3BFB488
	0x035804D4 CMP W20, W0
	0x035804D8 B.EQ 0x3580624
	0x035804DC LDR X8, [X19 + 0x20]
	0x035804E0 CBZ X8, 0x3580828
	0x035804E4 LDR X20, [X8 + 0x18]
	0x035804E8 ADRP X8, 0xB73000
	0x035804EC LDR X8, [X8 + 0x9D0]
	0x035804F0 MOVZ W1, 0x2
	0x035804F4 LDR X0, [X8]
	0x035804F8 BL 0x1C16D6C
	0x035804FC ADRP X23, 0xB73000
	0x03580500 LDR W8, [X19 + 0x50]
	0x03580504 LDR X23, [X23 + 0x758]
	0x03580508 MOV X21, X0
	0x0358050C ADD X1, X31, 0xC
	0x03580510 STR W8, [X31 + 0xC]
	0x03580514 LDR X0, [X23]
	0x03580518 BL 0x1C16E04
	0x0358051C CBZ X21, 0x3580828
	0x03580520 MOV X22, X0
	0x03580524 CBZ X0, 0x358053C
	0x03580528 LDR X8, [X21]
	0x0358052C MOV X0, X22
	0x03580530 LDR X1, [X8 + 0x40]
	0x03580534 BL 0x1C16E00
	0x03580538 CBZ X0, 0x3580830
	0x0358053C LDR W8, [X21 + 0x18]
	0x03580540 CBZ W8, 0x358082C
	0x03580544 MOV X0, X31
	0x03580548 STR X22, [X21 + 0x20]
	0x0358054C BL 0x3BFB488
	0x03580550 LDR X8, [X23]
	0x03580554 STR W0, [X31 + 0x8]
	0x03580558 ADD X1, X31, 0x8
	0x0358055C MOV X0, X8
	0x03580560 BL 0x1C16E04
	0x03580564 MOV X22, X0
	0x03580568 CBZ X0, 0x3580580
	0x0358056C LDR X8, [X21]
	0x03580570 MOV X0, X22
	0x03580574 LDR X1, [X8 + 0x40]
	0x03580578 BL 0x1C16E00
	0x0358057C CBZ X0, 0x3580830
	0x03580580 LDR W8, [X21 + 0x18]
	0x03580584 CMP W8, 0x1
	0x03580588 B.LS 0x358082C
	0x0358058C STR X22, [X21 + 0x28]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xE60000
	007 Move W8, [X20+3780]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {27}
	013 Move X0, 0xB79000
	014 Move X0, [X0+840]
	015 Call 0x1C17CF4
	016 Move X0, 0xBB7000
	017 Move X0, [X0+1472]
	018 Call 0x1C17CF4
	019 Move X0, 0xB74000
	020 Move X0, [X0+2512]
	021 Call 0x1C17CF4
	022 Move X0, 0xBB7000
	023 Move X0, [X0+1480]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X20+3780], W8
	027 Move X8, [X19+16]
	028 Compare X8, 0
	029 JumpIfEqual {104}
	030 Move X8, [X8+64]
	031 Compare X8, 0
	032 JumpIfEqual {104}
	033 Move X9, 0xB74000
	034 Move X9, [X9+2512]
	035 Move X20, [X8+24]
	036 Move W1, 1
	037 Move X0, [X9]
	038 Call 0x1C17D6C
	039 Compare X0, 0
	040 JumpIfEqual {104}
	041 Move X22, [X19+24]
	042 Move X21, X0
	043 Compare X22, 0
	044 JumpIfEqual {51}
	045 Move X8, [X21]
	046 Move X0, X22
	047 Move X1, [X8+64]
	048 Call 0x1C17E00
	049 Compare X0, 0
	050 JumpIfEqual {106}
	051 Move W8, [X21+24]
	052 Compare W8, 0
	053 JumpIfEqual {105}
	054 Move [X21+32], X22
	055 Compare X20, 0
	056 JumpIfEqual {104}
	057 Move X9, 0xB79000
	058 Move X10, 0xBB7000
	059 Move X8, [X20]
	060 Move X9, [X9+840]
	061 Move X10, [X10+1480]
	062 Move X1, [X9]
	063 NotImplemented "Instruction LDRH not yet implemented."
	064 Move X22, [X10]
	065 Compare X9, 0
	066 JumpIfEqual {73}
	067 Move X10, [X8+176]
	068 Add X10, X10, 8
	069 NotImplemented "Instruction LDUR not yet implemented."
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Subtract X9, X9, 1
	072 Add X10, X10, 16
	073 Move W2, 1
	074 Move X0, X20
	075 Call 0x1C5D788
	076 Move W9, [X10]
	077 Add W9, W9, 1
	078 Add X8, X8, W9
	079 Add X0, X8, 312
	080 Move X8, [X0]
	081 Move X4, [X0+8]
	082 Move W1, 3
	083 Move X0, X20
	084 Move X2, X22
	085 Move X3, X21
	086 NotImplemented "Instruction BLR not yet implemented."
	087 Move X8, [X19+16]
	088 Compare X8, 0
	089 JumpIfEqual {104}
	090 Move X0, [X8+120]
	091 Compare X0, 0
	092 JumpIfEqual {104}
	093 Move X8, 0xBB7000
	094 Move X8, [X8+1472]
	095 Move X1, [X19+24]
	096 Move X20, [X31+32]
	097 Move X19, [X31+40]
	098 Move X22, [X31+16]
	099 Move X21, [X31+24]
	100 Move X2, [X8]
	101 Move X30, [X31+48]
	102 Call List`1<Object>.Remove, X0, X1
	103 Return 
	104 Call 0x1C17F20
	105 Call 0x1C17F28
	106 Call 0x1C17F44
	107 Move X1, X31
	108 Call 0x1C17DEC

