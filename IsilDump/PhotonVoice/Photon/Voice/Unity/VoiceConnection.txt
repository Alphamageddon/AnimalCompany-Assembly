Type: Photon.Voice.Unity.VoiceConnection

Method: System.Boolean get_AlwaysUsePrimaryRecorder()

Disassembly:
	0x0357EA98 MOV X5, X25
	0x0357EA9C MOV X26, X0

ISIL:
	001 Move W0, W31
	002 Return X0

Method: System.Void Init()

Disassembly:
	0x0357EAA0 BL 0x357AF54
	0x0357EAA4 STR X26, [X23 + 0x18]
	0x0357EAA8 ADRP X8, 0xB75000
	0x0357EAAC LDR X8, [X8 + 0x970]
	0x0357EAB0 LDR X0, [X8]
	0x0357EAB4 LDR W8, [X0 + 0xE0]
	0x0357EAB8 CBNZ W8, 0x357EAC0
	0x0357EABC BL 0x1C16DFC
	0x0357EAC0 MOV X0, X31
	0x0357EAC4 BL 0x3C01AB0
	0x0357EAC8 LDR X8, [X21 + 0x40]
	0x0357EACC CBZ X8, 0x357EFD0
	0x0357EAD0 ADRP X27, 0xB75000
	0x0357EAD4 LDR X24, [X8 + 0x18]
	0x0357EAD8 LDR X27, [X27 + 0x9D0]
	0x0357EADC MOVZ W1, 0x1
	0x0357EAE0 LDR X0, [X27]
	0x0357EAE4 BL 0x1C16D6C
	0x0357EAE8 CBZ X0, 0x357EFD0
	0x0357EAEC LDR X26, [X23 + 0x18]
	0x0357EAF0 MOV X25, X0
	0x0357EAF4 CBZ X26, 0x357EB0C
	0x0357EAF8 LDR X8, [X25]
	0x0357EAFC MOV X0, X26
	0x0357EB00 LDR X1, [X8 + 0x40]
	0x0357EB04 BL 0x1C16E00
	0x0357EB08 CBZ X0, 0x357EFD8
	0x0357EB0C LDR W8, [X25 + 0x18]
	0x0357EB10 CBZ W8, 0x357EFD4
	0x0357EB14 STR X26, [X25 + 0x20]
	0x0357EB18 CBZ X24, 0x357EFD0
	0x0357EB1C ADRP X28, 0xB7A000
	0x0357EB20 LDR X8, [X24]
	0x0357EB24 LDR X28, [X28 + 0x348]
	0x0357EB28 ADRP X10, 0xBB8000
	0x0357EB2C LDR X1, [X28]
	0x0357EB30 LDR X10, [X10 + 0x590]
	0x0357EB34 LDRH W9, [X8 + 0x12E]
	0x0357EB38 LDR X26, [X10]
	0x0357EB3C CBZ X9, 0x357EB60
	0x0357EB40 LDR X10, [X8 + 0xB0]
	0x0357EB44 ADD X10, X10, 0x8
	0x0357EB48 LDUR X11, [X10 - 0x8]
	0x0357EB4C CMP X11, X1
	0x0357EB50 B.EQ 0x357ED00
	0x0357EB54 SUBS X9, X9, 0x1
	0x0357EB58 ADD X10, X10, 0x10
	0x0357EB5C B.NE 0x357EB48
	0x0357EB60 MOVZ W2, 0x1
	0x0357EB64 MOV X0, X24
	0x0357EB68 BL 0x1C5C788
	0x0357EB6C B 0x357ED10
	0x0357EB70 LDR X8, [X21 + 0x40]
	0x0357EB74 CBZ X8, 0x357EFD0
	0x0357EB78 LDR X21, [X8 + 0x18]
	0x0357EB7C ADRP X8, 0xB75000
	0x0357EB80 LDR X8, [X8 + 0x9D0]
	0x0357EB84 MOVZ W1, 0x4
	0x0357EB88 LDR X0, [X8]
	0x0357EB8C BL 0x1C16D6C
	0x0357EB90 ADRP X25, 0xB75000
	0x0357EB94 LDR X25, [X25 + 0x758]
	0x0357EB98 MOV X23, X0
	0x0357EB9C ADD X1, X31, 0x7C
	0x0357EBA0 STR W22, [X31 + 0x7C]
	0x0357EBA4 LDR X0, [X25]
	0x0357EBA8 BL 0x1C16E04
	0x0357EBAC CBZ X23, 0x357EFD0
	0x0357EBB0 MOV X22, X0
	0x0357EBB4 CBZ X0, 0x357EBCC
	0x0357EBB8 LDR X8, [X23]
	0x0357EBBC MOV X0, X22
	0x0357EBC0 LDR X1, [X8 + 0x40]
	0x0357EBC4 BL 0x1C16E00
	0x0357EBC8 CBZ X0, 0x357EFD8
	0x0357EBCC LDR W8, [X23 + 0x18]
	0x0357EBD0 CBZ W8, 0x357EFD4
	0x0357EBD4 STR X22, [X23 + 0x20]
	0x0357EBD8 ADRP X8, 0xB76000
	0x0357EBDC LDR X8, [X8 + 0x9D8]
	0x0357EBE0 ADD X1, X31, 0x78
	0x0357EBE4 STRB W20, [X31 + 0x78]
	0x0357EBE8 LDR X0, [X8]
	0x0357EBEC BL 0x1C16E04
	0x0357EBF0 MOV X20, X0
	0x0357EBF4 CBZ X0, 0x357EC0C
	0x0357EBF8 LDR X8, [X23]
	0x0357EBFC MOV X0, X20
	0x0357EC00 LDR X1, [X8 + 0x40]
	0x0357EC04 BL 0x1C16E00
	0x0357EC08 CBZ X0, 0x357EFD8
	0x0357EC0C LDR W8, [X23 + 0x18]
	0x0357EC10 CMP W8, 0x1
	0x0357EC14 B.LS 0x357EFD4
	0x0357EC18 STR X20, [X23 + 0x28]
	0x0357EC1C LDR X0, [X25]
	0x0357EC20 ADD X1, X31, 0x6C
	0x0357EC24 STR W24, [X31 + 0x6C]
	0x0357EC28 BL 0x1C16E04
	0x0357EC2C MOV X20, X0
	0x0357EC30 CBZ X0, 0x357EC48
	0x0357EC34 LDR X8, [X23]
	0x0357EC38 MOV X0, X20
	0x0357EC3C LDR X1, [X8 + 0x40]
	0x0357EC40 BL 0x1C16E00
	0x0357EC44 CBZ X0, 0x357EFD8

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0xE62000
	008 Move W8, [X20+3760]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {31}
	014 Move X0, 0xB7E000
	015 Move X0, [X0+3952]
	016 Call 0x1C17CF4
	017 Move X0, 0xBB7000
	018 Move X0, [X0+3032]
	019 Call 0x1C17CF4
	020 Move X0, 0xBB9000
	021 Move X0, [X0+1264]
	022 Call 0x1C17CF4
	023 Move X0, 0xBB9000
	024 Move X0, [X0+1272]
	025 Call 0x1C17CF4
	026 Move X0, 0xBB9000
	027 Move X0, [X0+1280]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X20+3760], W8
	031 Move X8, [X19+64]
	032 Compare X8, 0
	033 JumpIfEqual {120}
	034 Move X9, 0xBB9000
	035 Move X9, [X9+1264]
	036 Move X21, [X8+24]
	037 Move W22, [X19+137]
	038 Move X0, [X9]
	039 Call 0x1C17F10
	040 Move X1, X21
	041 Move W2, W31
	042 Move W3, W22
	043 Move X4, X31
	044 Move X20, X0
	045 Call LoadBalancingTransport2..ctor, X0, X1, X2, X3
	046 Move [X19+72], X20
	047 Compare X20, 0
	048 JumpIfEqual {120}
	049 Move X22, [X20+392]
	050 Compare X22, 0
	051 JumpIfEqual {120}
	052 Move X23, 0xBB9000
	053 Move X23, [X23+1272]
	054 Move X21, 0xBB9000
	055 Move X20, [X22+88]
	056 Move X0, [X23]
	057 Move X21, [X21+1280]
	058 Call 0x1C17F10
	059 Move X2, [X21]
	060 Move X1, X19
	061 Move X3, X31
	062 Move X21, X0
	063 Call RemoteVoiceInfoDelegate..ctor, X0, X1, X2
	064 Move X0, X20
	065 Move X1, X21
	066 Move X2, X31
	067 Call Delegate.Combine, X0, X1
	068 Compare X0, 0
	069 JumpIfEqual {73}
	070 Move X1, [X23]
	071 Move X8, [X0]
	072 NotImplemented "Instruction CMP not yet implemented."
	073 Move X8, 0xBB7000
	074 Move X8, [X8+3032]
	075 Move [X22+88], X0
	076 Move X20, [X19+72]
	077 Move X0, [X8]
	078 Call 0x1C17F10
	079 Move X8, [X19]
	080 Move X1, X19
	081 Move X3, X31
	082 Move X21, X0
	083 Move X2, [X8+512]
	084 Call Action`2<Int32Enum, Int32Enum>..ctor, X0, X1, X2
	085 Compare X20, 0
	086 JumpIfEqual {120}
	087 Move X22, 0xB7E000
	088 Move X22, [X22+3952]
	089 Move X0, X20
	090 Move X1, X21
	091 Move X2, X31
	092 Call LoadBalancingClient.add_StateChanged, X0, X1
	093 Move X0, [X22]
	094 Move X20, [X19+72]
	095 Call 0x1C17F10
	096 Move X8, [X19]
	097 Move X1, X19
	098 Move X3, X31
	099 Move X21, X0
	100 Move X2, [X8+528]
	101 Call Action`1<Object>..ctor, X0, X1, X2
	102 Compare X20, 0
	103 JumpIfEqual {120}
	104 Move X0, X20
	105 Move X1, X21
	106 Move X2, X31
	107 Call LoadBalancingClient.add_OpResponseReceived, X0, X1
	108 Move X8, [X19+72]
	109 Move X0, X19
	110 Move X22, [X31+16]
	111 Move X21, [X31+24]
	112 Move X1, X31
	113 Move [X19+32], X8
	114 Move X20, [X31+32]
	115 Move X19, [X31+40]
	116 Move X30, [X31+48]
	117 Move X23, [X31+56]
	118 Call ConnectionHandler.StartFallbackSendAckThread, X0
	119 Return 
	120 Call 0x1C17F20
	121 Call 0x1C181E0

Method: System.Void add_SpeakerLinked(System.Action`1<Photon.Voice.Unity.Speaker> value)

Disassembly:
	0x0357EC48 LDR W8, [X23 + 0x18]
	0x0357EC4C CMP W8, 0x2
	0x0357EC50 B.LS 0x357EFD4
	0x0357EC54 STR X20, [X23 + 0x30]
	0x0357EC58 ADRP X8, 0xB7A000
	0x0357EC5C LDP V2, V0, [X19 + 0x10]
	0x0357EC60 LDR V1, [X19]
	0x0357EC64 LDR X8, [X8 + 0x390]
	0x0357EC68 ADD X1, X31, 0x30
	0x0357EC6C STP V2, V0, [X31 + 0x40]
	0x0357EC70 STR V1, [X31 + 0x3]
	0x0357EC74 LDR X0, [X8]
	0x0357EC78 BL 0x1C16E04
	0x0357EC7C MOV X19, X0
	0x0357EC80 CBZ X0, 0x357EC98
	0x0357EC84 LDR X8, [X23]
	0x0357EC88 MOV X0, X19
	0x0357EC8C LDR X1, [X8 + 0x40]
	0x0357EC90 BL 0x1C16E00
	0x0357EC94 CBZ X0, 0x357EFD8
	0x0357EC98 LDR W8, [X23 + 0x18]
	0x0357EC9C CMP W8, 0x3
	0x0357ECA0 B.LS 0x357EFD4
	0x0357ECA4 STR X19, [X23 + 0x38]
	0x0357ECA8 CBZ X21, 0x357EFD0
	0x0357ECAC ADRP X9, 0xB7A000
	0x0357ECB0 LDR X8, [X21]
	0x0357ECB4 LDR X9, [X9 + 0x348]
	0x0357ECB8 ADRP X10, 0xBB8000
	0x0357ECBC LDR X1, [X9]
	0x0357ECC0 LDR X10, [X10 + 0x5A0]
	0x0357ECC4 LDRH W9, [X8 + 0x12E]
	0x0357ECC8 LDR X19, [X10]
	0x0357ECCC CBZ X9, 0x357ECF0
	0x0357ECD0 LDR X10, [X8 + 0xB0]
	0x0357ECD4 ADD X10, X10, 0x8
	0x0357ECD8 LDUR X11, [X10 - 0x8]
	0x0357ECDC CMP X11, X1
	0x0357ECE0 B.EQ 0x357EF44
	0x0357ECE4 SUBS X9, X9, 0x1
	0x0357ECE8 ADD X10, X10, 0x10
	0x0357ECEC B.NE 0x357ECD8
	0x0357ECF0 MOVZ W2, 0x1
	0x0357ECF4 MOV X0, X21

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0xE62000
	009 Move W8, [X21+3761]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xBB9000
	017 Move X0, [X0+1208]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3761], W8
	021 Move X24, 0xBB9000
	022 Add X20, X20, 168
	023 Move X21, [X20]
	024 Move X24, [X24+1208]
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Combine, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Void remove_SpeakerLinked(System.Action`1<Photon.Voice.Unity.Speaker> value)

Disassembly:
	0x0357ECF8 BL 0x1C5C788
	0x0357ECFC B 0x357EF54
	0x0357ED00 LDR W9, [X10]
	0x0357ED04 ADD W9, W9, 0x1
	0x0357ED08 ADD X8, X8, W9, 0x4, SXTW
	0x0357ED0C ADD X0, X8, 0x138
	0x0357ED10 LDP X8, X4, [X0]
	0x0357ED14 MOVZ W1, 0x3
	0x0357ED18 MOV X0, X24
	0x0357ED1C MOV X2, X26
	0x0357ED20 MOV X3, X25
	0x0357ED24 BLR X8
	0x0357ED28 LDR X0, [X21 + 0x78]
	0x0357ED2C CBZ X0, 0x357EFD0
	0x0357ED30 ADRP X9, 0xBB8000
	0x0357ED34 LDR X1, [X23 + 0x18]
	0x0357ED38 LDR X9, [X9 + 0x578]
	0x0357ED3C LDR W10, [X0 + 0x1C]
	0x0357ED40 LDR X8, [X0 + 0x10]
	0x0357ED44 LDR X9, [X9]
	0x0357ED48 ADD W10, W10, 0x1
	0x0357ED4C STR W10, [X0 + 0x1C]
	0x0357ED50 CBZ X8, 0x357EFD0
	0x0357ED54 LDRSW X10, [X0 + 0x18]
	0x0357ED58 LDR W11, [X8 + 0x18]
	0x0357ED5C CMP W10, W11
	0x0357ED60 B.CS 0x357ED78
	0x0357ED64 ADD W9, W10, 0x1
	0x0357ED68 ADD X8, X8, X10, 0x3, LSL
	0x0357ED6C STR W9, [X0 + 0x18]
	0x0357ED70 STR X1, [X8 + 0x20]
	0x0357ED74 B 0x357ED88
	0x0357ED78 LDR X8, [X9 + 0x20]
	0x0357ED7C LDR X8, [X8 + 0xC0]
	0x0357ED80 LDR X2, [X8 + 0x70]
	0x0357ED84 BL 0x301BF90
	0x0357ED88 LDR X8, [X21 + 0xB0]
	0x0357ED8C CBZ X8, 0x357EDA4
	0x0357ED90 LDR X1, [X23 + 0x18]
	0x0357ED94 LDR X9, [X8 + 0x18]
	0x0357ED98 LDR X0, [X8 + 0x40]
	0x0357ED9C LDR X2, [X8 + 0x28]
	0x0357EDA0 BLR X9
	0x0357EDA4 ADRP X8, 0xB76000

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0xE62000
	009 Move W8, [X21+3762]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xBB9000
	017 Move X0, [X0+1208]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3762], W8
	021 Move X24, 0xBB9000
	022 Add X20, X20, 168
	023 Move X21, [X20]
	024 Move X24, [X24+1208]
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Remove, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Void add_RemoteVoiceAdded(System.Action`1<Photon.Voice.Unity.RemoteVoiceLink> value)

Disassembly:
	0x0357EDA8 LDR X24, [X23 + 0x18]
	0x0357EDAC LDR X8, [X8 + 0xE70]
	0x0357EDB0 LDR X0, [X8]
	0x0357EDB4 BL 0x1C16F10
	0x0357EDB8 ADRP X8, 0xBB8000
	0x0357EDBC LDR X8, [X8 + 0x588]
	0x0357EDC0 MOV X1, X23
	0x0357EDC4 MOV X3, X31
	0x0357EDC8 MOV X25, X0
	0x0357EDCC LDR X2, [X8]
	0x0357EDD0 BL 0x3314368
	0x0357EDD4 CBZ X24, 0x357EFD0
	0x0357EDD8 MOV X0, X24
	0x0357EDDC MOV X1, X25
	0x0357EDE0 BL 0x357AE1C
	0x0357EDE4 LDR X8, [X21]
	0x0357EDE8 LDR X3, [X19 + 0x28]
	0x0357EDEC MOV X0, X21
	0x0357EDF0 MOV W1, W22
	0x0357EDF4 LDP X9, X4, [X8 + 0x1E8]
	0x0357EDF8 MOV W2, W20
	0x0357EDFC BLR X9
	0x0357EE00 ADRP X8, 0xB75000
	0x0357EE04 LDR X8, [X8 + 0x598]
	0x0357EE08 MOV X19, X0
	0x0357EE0C LDR X8, [X8]
	0x0357EE10 LDR W9, [X8 + 0xE0]
	0x0357EE14 CBNZ W9, 0x357EE20
	0x0357EE18 MOV X0, X8
	0x0357EE1C BL 0x1C16DFC
	0x0357EE20 MOV X0, X19
	0x0357EE24 MOV X1, X31
	0x0357EE28 MOV X2, X31
	0x0357EE2C BL 0x3C3883C
	0x0357EE30 TBZ X0, 0x0, 0x357EECC
	0x0357EE34 LDR X8, [X21 + 0x40]
	0x0357EE38 CBZ X8, 0x357EFD0
	0x0357EE3C LDR X0, [X27]
	0x0357EE40 LDR X19, [X8 + 0x18]
	0x0357EE44 MOVZ W1, 0x1
	0x0357EE48 BL 0x1C16D6C
	0x0357EE4C CBZ X0, 0x357EFD0
	0x0357EE50 LDR X21, [X23 + 0x18]
	0x0357EE54 MOV X20, X0

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0xE62000
	009 Move W8, [X21+3763]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xBB9000
	017 Move X0, [X0+1288]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3763], W8
	021 Move X24, 0xBB9000
	022 Add X20, X20, 176
	023 Move X21, [X20]
	024 Move X24, [X24+1288]
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Combine, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Void remove_RemoteVoiceAdded(System.Action`1<Photon.Voice.Unity.RemoteVoiceLink> value)

Disassembly:
	0x0357EE58 CBZ X21, 0x357EE70
	0x0357EE5C LDR X8, [X20]
	0x0357EE60 MOV X0, X21
	0x0357EE64 LDR X1, [X8 + 0x40]
	0x0357EE68 BL 0x1C16E00
	0x0357EE6C CBZ X0, 0x357EFD8
	0x0357EE70 LDR W8, [X20 + 0x18]
	0x0357EE74 CBZ W8, 0x357EFD4
	0x0357EE78 STR X21, [X20 + 0x20]
	0x0357EE7C CBZ X19, 0x357EFD0
	0x0357EE80 ADRP X10, 0xBB8000
	0x0357EE84 LDR X8, [X19]
	0x0357EE88 LDR X1, [X28]
	0x0357EE8C LDR X10, [X10 + 0x5A8]
	0x0357EE90 LDRH W9, [X8 + 0x12E]
	0x0357EE94 LDR X21, [X10]
	0x0357EE98 CBZ X9, 0x357EEBC
	0x0357EE9C LDR X10, [X8 + 0xB0]
	0x0357EEA0 ADD X10, X10, 0x8
	0x0357EEA4 LDUR X11, [X10 - 0x8]
	0x0357EEA8 CMP X11, X1
	0x0357EEAC B.EQ 0x357EF8C
	0x0357EEB0 SUBS X9, X9, 0x1
	0x0357EEB4 ADD X10, X10, 0x10
	0x0357EEB8 B.NE 0x357EEA4
	0x0357EEBC MOVZ W2, 0x1
	0x0357EEC0 MOV X0, X19
	0x0357EEC4 BL 0x1C5C788
	0x0357EEC8 B 0x357EF9C
	0x0357EECC ADRP X8, 0xB75000
	0x0357EED0 LDR X8, [X8 + 0x758]
	0x0357EED4 ADD X1, X31, 0x30
	0x0357EED8 STR W22, [X31 + 0x30]
	0x0357EEDC LDR X0, [X8]
	0x0357EEE0 BL 0x1C16E04
	0x0357EEE4 ADRP X8, 0xB76000
	0x0357EEE8 LDR X8, [X8 + 0x9D8]
	0x0357EEEC MOV X22, X0
	0x0357EEF0 ADD X1, X31, 0x7C
	0x0357EEF4 STRB W20, [X31 + 0x7C]
	0x0357EEF8 LDR X0, [X8]
	0x0357EEFC BL 0x1C16E04
	0x0357EF00 ADRP X8, 0xBB8000
	0x0357EF04 LDR X8, [X8 + 0x598]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0xE62000
	009 Move W8, [X21+3764]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xBB9000
	017 Move X0, [X0+1288]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3764], W8
	021 Move X24, 0xBB9000
	022 Add X20, X20, 176
	023 Move X21, [X20]
	024 Move X24, [X24+1288]
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Remove, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: Photon.Voice.ILogger get_Logger()

Disassembly:
	0x035723EC CBZ W8, 0x35724D8
	0x035723F0 STR X23, [X22 + 0x20]
	0x035723F4 LDR X0, [X24]
	0x035723F8 ADD X1, X31, 0xC
	0x035723FC STR W19, [X31 + 0xC]
	0x03572400 BL 0x1C16E04
	0x03572404 MOV X23, X0

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+64]
	003 Compare X8, 0
	004 JumpIfEqual {8}
	005 Move X0, [X8+24]
	006 Move X30, [X31+16]
	007 Return X0
	008 Call 0x1C17F20

Method: Photon.Voice.Unity.VoiceLogger get_VoiceLogger()

Disassembly:
	0x0357EF08 MOV X2, X0
	0x0357EF0C MOV X1, X22
	0x0357EF10 MOV X3, X31
	0x0357EF14 LDR X8, [X8]
	0x0357EF18 MOV X0, X8
	0x0357EF1C BL 0x3227BD4
	0x0357EF20 CBZ X19, 0x357EFD0

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+64]
	003 Compare X8, 0
	004 JumpIfEqual {8}
	005 Move X0, [X8+16]
	006 Move X30, [X31+16]
	007 Return X0
	008 Call 0x1C17F20

Method: Photon.Voice.LoadBalancingTransport get_Client()

Disassembly:
	0x0357EF24 MOV X1, X0
	0x0357EF28 MOV X0, X19

ISIL:
	001 Move X0, [X0+72]
	002 Return X0

Method: Photon.Voice.VoiceClient get_VoiceClient()

Disassembly:
	0x0357A284 BL 0x1C16CF4
	0x0357A288 ADRP X0, 0xBBB000
	0x0357A28C LDR X0, [X0 + 0x820]
	0x0357A290 BL 0x1C16CF4
	0x0357A294 MOVZ W8, 0x1
	0x0357A298 STRB W8, [X21 + 0xE93]
	0x0357A29C MOVZ X8, 0xD70A

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+72]
	003 Compare X8, 0
	004 JumpIfEqual {8}
	005 Move X0, [X8+392]
	006 Move X30, [X31+16]
	007 Return X0
	008 Call 0x1C17F20

Method: Photon.Realtime.ClientState get_ClientState()

Disassembly:
	0x03573D60 STP X30, X21, [X31 - 0x20]!
	0x03573D64 STP X20, X19, [X31 + 0x10]
	0x03573D68 ADRP X20, 0xE6C000
	0x03573D6C ADRP X21, 0xB80000
	0x03573D70 LDRB W8, [X20 + 0xE6E]
	0x03573D74 LDR X21, [X21 + 0x970]
	0x03573D78 MOV X19, X0

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+72]
	003 Compare X8, 0
	004 JumpIfEqual {8}
	005 Move W0, [X8+144]
	006 Move X30, [X31+16]
	007 Return X0
	008 Call 0x1C17F20

Method: System.Single get_FramesReceivedPerSecond()

Disassembly:
	0x0357EF2C BL 0x357EFEC
	0x0357EF30 LDR X2, [X23 + 0x18]

ISIL:
	001 Move V0, [X0+184]
	002 Return V0

Method: System.Void set_FramesReceivedPerSecond(System.Single value)

Disassembly:
	0x0357EF34 MOV X0, X21
	0x0357EF38 MOV X1, X19

ISIL:
	001 Move [X0+184], S0
	002 Return 

Method: System.Single get_FramesLostPerSecond()

Disassembly:
	0x0357EF3C BL 0x357E220
	0x0357EF40 B 0x357EF6C

ISIL:
	001 Move V0, [X0+188]
	002 Return V0

Method: System.Void set_FramesLostPerSecond(System.Single value)

Disassembly:
	0x0357EF44 LDR W9, [X10]
	0x0357EF48 ADD W9, W9, 0x1

ISIL:
	001 Move [X0+188], S0
	002 Return 

Method: System.Single get_FramesLostPercent()

Disassembly:
	0x0357EF4C ADD X8, X8, W9, 0x4, SXTW
	0x0357EF50 ADD X0, X8, 0x138

ISIL:
	001 Move V0, [X0+192]
	002 Return V0

Method: System.Void set_FramesLostPercent(System.Single value)

Disassembly:
	0x0357EF54 LDP X8, X4, [X0]
	0x0357EF58 MOVZ W1, 0x3

ISIL:
	001 Move [X0+192], S0
	002 Return 

Method: UnityEngine.GameObject get_SpeakerPrefab()

Disassembly:
	0x0357EF5C MOV X0, X21
	0x0357EF60 MOV X2, X19

ISIL:
	001 Move X0, [X0+112]
	002 Return X0

Method: System.Void set_SpeakerPrefab(UnityEngine.GameObject value)

Disassembly:
	0x0357EF64 MOV X3, X23
	0x0357EF68 BLR X8

ISIL:
	001 Move [X0+112], X1
	002 Return 

Method: Photon.Voice.Unity.Recorder get_PrimaryRecorder()

Disassembly:
	0x0357EF6C LDP X20, X19, [X31 + 0xC0]
	0x0357EF70 LDP X22, X21, [X31 + 0xB0]

ISIL:
	001 Move X0, [X0+128]
	002 Return X0

Method: System.Void set_PrimaryRecorder(Photon.Voice.Unity.Recorder value)

Disassembly:
	0x0357EF74 LDP X24, X23, [X31 + 0xA0]
	0x0357EF78 LDP X26, X25, [X31 + 0x90]

ISIL:
	001 Move [X0+128], X1
	002 Return 

Method: System.Boolean get_UsePrimaryRecorder()

Disassembly:
	0x0357EF7C LDP X28, X27, [X31 + 0x80]
	0x0357EF80 LDR X30, [X31 + 0x70]

ISIL:
	001 Move W0, [X0+136]
	002 Return X0

Method: System.String get_BestRegionSummaryInPreferences()

Disassembly:
	0x0357EF84 ADD X31, X31, 0xD0
	0x0357EF88 RET
	0x0357EF8C LDR W9, [X10]
	0x0357EF90 ADD W9, W9, 0x1
	0x0357EF94 ADD X8, X8, W9, 0x4, SXTW
	0x0357EF98 ADD X0, X8, 0x138
	0x0357EF9C LDP X5, X4, [X0]
	0x0357EFA0 MOV X0, X19
	0x0357EFA4 MOV X2, X21
	0x0357EFA8 MOV X3, X20
	0x0357EFAC LDP X20, X19, [X31 + 0xC0]
	0x0357EFB0 LDP X22, X21, [X31 + 0xB0]
	0x0357EFB4 LDP X24, X23, [X31 + 0xA0]
	0x0357EFB8 LDP X26, X25, [X31 + 0x90]
	0x0357EFBC LDP X28, X27, [X31 + 0x80]
	0x0357EFC0 LDR X30, [X31 + 0x70]
	0x0357EFC4 MOVZ W1, 0x4
	0x0357EFC8 ADD X31, X31, 0xD0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0xE62000
	005 Move X20, 0xBB9000
	006 Move W8, [X19+3765]
	007 Move X20, [X20+1296]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xBB9000
	013 Move X0, [X0+1296]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+3765], W8
	017 Move X0, [X20]
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X1, X31
	021 Move X2, X31
	022 Move X30, [X31+32]
	023 Call PlayerPrefs.GetString, X0, X1
	024 Return X0

Method: System.Void set_BestRegionSummaryInPreferences(System.String value)

Disassembly:
	0x0357EFCC BR X5
	0x0357EFD0 BL 0x1C16F20
	0x0357EFD4 BL 0x1C16F28
	0x0357EFD8 BL 0x1C16F44
	0x0357EFDC MOV X1, X31
	0x0357EFE0 BL 0x1C16DEC
	0x0357EFE4 MOV X1, X31
	0x0357EFE8 B 0x33BDD8C
	0x0357EFEC STR X30, [X31 - 0x20]!
	0x0357EFF0 STP X20, X19, [X31 + 0x10]
	0x0357EFF4 MOV X2, X31
	0x0357EFF8 MOV X19, X1
	0x0357EFFC MOV X20, X0
	0x0357F000 BL 0x3C38A84
	0x0357F004 LDR X8, [X20 + 0x20]
	0x0357F008 CBZ X8, 0x357F024
	0x0357F00C LDR X8, [X8 + 0x18]
	0x0357F010 CBZ X8, 0x357F024
	0x0357F014 STR X19, [X8 + 0x20]
	0x0357F018 LDP X20, X19, [X31 + 0x10]
	0x0357F01C LDR X30, [X31], #0x20
	0x0357F020 RET
	0x0357F024 BL 0x1C16F20
	0x0357F028 MOV X1, X31
	0x0357F02C B 0x33BDD8C
	0x0357F030 STR X30, [X31 - 0x30]!
	0x0357F034 STP X22, X21, [X31 + 0x10]
	0x0357F038 STP X20, X19, [X31 + 0x20]
	0x0357F03C ADRP X20, 0xE60000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xE62000
	006 Move X20, 0xBB9000
	007 Move W8, [X21+3766]
	008 Move X20, [X20+1296]
	009 Move X19, X1
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xBB9000
	015 Move X0, [X0+1296]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+3766], W8
	019 Move X0, X19
	020 Move X1, X31
	021 Call String.IsNullOrEmpty, X0
	022 Move X8, [X20]
	023 Move TEMP, X0
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfNotEqual {35}
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X0, X8
	030 Move X1, X31
	031 Move X30, [X31+32]
	032 Move X21, [X31+40]
	033 Call PlayerPrefs.DeleteKey, X0
	034 Return 
	035 Move X1, X19
	036 Move X20, [X31+16]
	037 Move X19, [X31+24]
	038 Move X0, X8
	039 Move X2, X31
	040 Move X30, [X31+32]
	041 Move X21, [X31+40]
	042 Call PlayerPrefs.SetString, X0, X1
	043 Return 

Method: System.Boolean ConnectUsingSettings(Photon.Realtime.AppSettings overwriteSettings = null)

Disassembly:
	0x0357DFFC STRB W8, [X21 + 0xEB6]
	0x0357E000 MOV X0, X19
	0x0357E004 MOV X1, X31
	0x0357E008 BL 0x32277A8
	0x0357E00C LDR X8, [X20]
	0x0357E010 TBZ X0, 0x0, 0x357E028
	0x0357E014 LDP X20, X19, [X31 + 0x10]
	0x0357E018 MOV X0, X8
	0x0357E01C MOV X1, X31
	0x0357E020 LDP X30, X21, [X31], #0x20
	0x0357E024 B 0x3C30368
	0x0357E028 MOV X1, X19
	0x0357E02C LDP X20, X19, [X31 + 0x10]
	0x0357E030 MOV X0, X8
	0x0357E034 MOV X2, X31
	0x0357E038 LDP X30, X21, [X31], #0x20
	0x0357E03C B 0x3C301EC
	0x0357E040 STR X30, [X31 - 0x40]!
	0x0357E044 STP X24, X23, [X31 + 0x10]
	0x0357E048 STP X22, X21, [X31 + 0x20]
	0x0357E04C STP X20, X19, [X31 + 0x30]
	0x0357E050 ADRP X21, 0xE61000
	0x0357E054 LDRB W8, [X21 + 0xEB8]
	0x0357E058 MOV X22, X2
	0x0357E05C MOV X19, X1
	0x0357E060 MOV X20, X0
	0x0357E064 TBNZ X8, 0x0, 0x357E0AC
	0x0357E068 ADRP X0, 0xB7A000
	0x0357E06C LDR X0, [X0 + 0x348]
	0x0357E070 BL 0x1C16CF4
	0x0357E074 ADRP X0, 0xBB8000
	0x0357E078 LDR X0, [X0 + 0x518]
	0x0357E07C BL 0x1C16CF4
	0x0357E080 ADRP X0, 0xBB8000
	0x0357E084 LDR X0, [X0 + 0x520]
	0x0357E088 BL 0x1C16CF4
	0x0357E08C ADRP X0, 0xB75000
	0x0357E090 LDR X0, [X0 + 0x9D0]
	0x0357E094 BL 0x1C16CF4
	0x0357E098 ADRP X0, 0xBB8000
	0x0357E09C LDR X0, [X0 + 0x528]
	0x0357E0A0 BL 0x1C16CF4
	0x0357E0A4 MOVZ W8, 0x1
	0x0357E0A8 STRB W8, [X21 + 0xEB8]
	0x0357E0AC LDR X0, [X20 + 0x78]
	0x0357E0B0 CBZ X0, 0x357E108
	0x0357E0B4 ADRP X24, 0xBB8000
	0x0357E0B8 LDR X24, [X24 + 0x520]
	0x0357E0BC MOV W23, W31
	0x0357E0C0 LDR W8, [X0 + 0x18]
	0x0357E0C4 CMP W23, W8
	0x0357E0C8 B.GE 0x357E10C
	0x0357E0CC LDR X2, [X24]
	0x0357E0D0 MOV W1, W23
	0x0357E0D4 BL 0x301BCCC
	0x0357E0D8 CBZ X0, 0x357E108
	0x0357E0DC CBZ X22, 0x357E108
	0x0357E0E0 LDR X8, [X22]
	0x0357E0E4 LDR X1, [X0 + 0x38]
	0x0357E0E8 MOV X21, X0
	0x0357E0EC MOV X0, X22
	0x0357E0F0 LDP X9, X2, [X8 + 0x138]
	0x0357E0F4 BLR X9
	0x0357E0F8 TBNZ X0, 0x0, 0x357E114
	0x0357E0FC LDR X0, [X20 + 0x78]
	0x0357E100 ADD W23, W23, 0x1
	0x0357E104 CBNZ X0, 0x357E0C0
	0x0357E108 BL 0x1C16F20
	0x0357E10C MOV W0, W31
	0x0357E110 B 0x357E1FC
	0x0357E114 LDR X8, [X20 + 0x40]
	0x0357E118 CBZ X8, 0x357E108
	0x0357E11C LDR X22, [X8 + 0x18]
	0x0357E120 ADRP X8, 0xB75000
	0x0357E124 LDR X8, [X8 + 0x9D0]
	0x0357E128 MOVZ W1, 0x1
	0x0357E12C LDR X0, [X8]
	0x0357E130 BL 0x1C16D6C
	0x0357E134 CBZ X0, 0x357E108
	0x0357E138 LDR X8, [X0]
	0x0357E13C MOV X23, X0
	0x0357E140 MOV X0, X21
	0x0357E144 LDR X1, [X8 + 0x40]
	0x0357E148 BL 0x1C16E00
	0x0357E14C CBZ X0, 0x357E210
	0x0357E150 LDR W8, [X23 + 0x18]
	0x0357E154 CBZ W8, 0x357E21C
	0x0357E158 STR X21, [X23 + 0x20]
	0x0357E15C CBZ X22, 0x357E108
	0x0357E160 ADRP X9, 0xB7A000
	0x0357E164 LDR X8, [X22]
	0x0357E168 LDR X9, [X9 + 0x348]
	0x0357E16C ADRP X10, 0xBB8000
	0x0357E170 LDR X1, [X9]
	0x0357E174 LDR X10, [X10 + 0x528]
	0x0357E178 LDRH W9, [X8 + 0x12E]
	0x0357E17C LDR X24, [X10]
	0x0357E180 CBZ X9, 0x357E1A4
	0x0357E184 LDR X10, [X8 + 0xB0]
	0x0357E188 ADD X10, X10, 0x8
	0x0357E18C LDUR X11, [X10 - 0x8]
	0x0357E190 CMP X11, X1
	0x0357E194 B.EQ 0x357E1B4
	0x0357E198 SUBS X9, X9, 0x1
	0x0357E19C ADD X10, X10, 0x10
	0x0357E1A0 B.NE 0x357E18C
	0x0357E1A4 MOVZ W2, 0x1
	0x0357E1A8 MOV X0, X22
	0x0357E1AC BL 0x1C5C788
	0x0357E1B0 B 0x357E1C4
	0x0357E1B4 LDR W9, [X10]
	0x0357E1B8 ADD W9, W9, 0x1
	0x0357E1BC ADD X8, X8, W9, 0x4, SXTW
	0x0357E1C0 ADD X0, X8, 0x138
	0x0357E1C4 LDP X8, X4, [X0]
	0x0357E1C8 MOVZ W1, 0x4
	0x0357E1CC MOV X0, X22
	0x0357E1D0 MOV X2, X24
	0x0357E1D4 MOV X3, X23
	0x0357E1D8 BLR X8
	0x0357E1DC MOV X0, X20
	0x0357E1E0 MOV X1, X19
	0x0357E1E4 MOV X2, X21
	0x0357E1E8 BL 0x357E220
	0x0357E1EC CBZ X19, 0x357E108
	0x0357E1F0 LDR X8, [X19 + 0x50]
	0x0357E1F4 CMP X8, 0x0
	0x0357E1F8 CSET W0, NE
	0x0357E1FC LDP X20, X19, [X31 + 0x30]
	0x0357E200 LDP X22, X21, [X31 + 0x20]
	0x0357E204 LDP X24, X23, [X31 + 0x10]
	0x0357E208 LDR X30, [X31], #0x40
	0x0357E20C RET
	0x0357E210 BL 0x1C16F44
	0x0357E214 MOV X1, X31
	0x0357E218 BL 0x1C16DEC
	0x0357E21C BL 0x1C16F28
	0x0357E220 STR X30, [X31 - 0x40]!
	0x0357E224 STP X24, X23, [X31 + 0x10]
	0x0357E228 STP X22, X21, [X31 + 0x20]
	0x0357E22C STP X20, X19, [X31 + 0x30]
	0x0357E230 ADRP X21, 0xE61000
	0x0357E234 ADRP X23, 0xBB8000
	0x0357E238 LDRB W8, [X21 + 0xEBE]
	0x0357E23C LDR X23, [X23 + 0x530]
	0x0357E240 MOV X20, X2
	0x0357E244 MOV X22, X1
	0x0357E248 MOV X19, X0
	0x0357E24C TBNZ X8, 0x0, 0x357E2AC
	0x0357E250 ADRP X0, 0xB76000
	0x0357E254 LDR X0, [X0 + 0xE70]
	0x0357E258 BL 0x1C16CF4
	0x0357E25C ADRP X0, 0xB7A000
	0x0357E260 LDR X0, [X0 + 0x348]
	0x0357E264 BL 0x1C16CF4
	0x0357E268 ADRP X0, 0xBB8000
	0x0357E26C LDR X0, [X0 + 0x538]
	0x0357E270 BL 0x1C16CF4
	0x0357E274 ADRP X0, 0xB75000
	0x0357E278 LDR X0, [X0 + 0x9D0]
	0x0357E27C BL 0x1C16CF4
	0x0357E280 ADRP X0, 0xBB8000
	0x0357E284 LDR X0, [X0 + 0x540]
	0x0357E288 BL 0x1C16CF4
	0x0357E28C ADRP X0, 0xBB8000
	0x0357E290 LDR X0, [X0 + 0x530]
	0x0357E294 BL 0x1C16CF4
	0x0357E298 ADRP X0, 0xBB8000
	0x0357E29C LDR X0, [X0 + 0x548]
	0x0357E2A0 BL 0x1C16CF4
	0x0357E2A4 MOVZ W8, 0x1
	0x0357E2A8 STRB W8, [X21 + 0xEBE]
	0x0357E2AC LDR X0, [X23]
	0x0357E2B0 BL 0x1C16F10
	0x0357E2B4 MOV X1, X31
	0x0357E2B8 MOV X21, X0
	0x0357E2BC BL 0x33BDD8C
	0x0357E2C0 CBZ X21, 0x357E484
	0x0357E2C4 STP X19, X22, [X21 + 0x10]
	0x0357E2C8 CBZ X22, 0x357E484
	0x0357E2CC MOV X0, X22
	0x0357E2D0 MOV X1, X20
	0x0357E2D4 BL 0x357BA04
	0x0357E2D8 TBZ X0, 0x0, 0x357E470
	0x0357E2DC LDR X8, [X19 + 0x40]
	0x0357E2E0 CBZ X8, 0x357E484
	0x0357E2E4 LDR X22, [X8 + 0x18]
	0x0357E2E8 ADRP X8, 0xB75000
	0x0357E2EC LDR X8, [X8 + 0x9D0]
	0x0357E2F0 MOVZ W1, 0x1
	0x0357E2F4 LDR X0, [X8]
	0x0357E2F8 BL 0x1C16D6C
	0x0357E2FC CBZ X0, 0x357E484
	0x0357E300 MOV X23, X0
	0x0357E304 CBZ X20, 0x357E31C
	0x0357E308 LDR X8, [X23]
	0x0357E30C MOV X0, X20
	0x0357E310 LDR X1, [X8 + 0x40]
	0x0357E314 BL 0x1C16E00
	0x0357E318 CBZ X0, 0x357E48C
	0x0357E31C LDR W8, [X23 + 0x18]
	0x0357E320 CBZ W8, 0x357E488
	0x0357E324 STR X20, [X23 + 0x20]
	0x0357E328 CBZ X22, 0x357E484
	0x0357E32C ADRP X9, 0xB7A000
	0x0357E330 LDR X8, [X22]
	0x0357E334 LDR X9, [X9 + 0x348]
	0x0357E338 ADRP X10, 0xBB8000
	0x0357E33C LDR X1, [X9]
	0x0357E340 LDR X10, [X10 + 0x548]
	0x0357E344 LDRH W9, [X8 + 0x12E]
	0x0357E348 LDR X24, [X10]
	0x0357E34C CBZ X9, 0x357E370
	0x0357E350 LDR X10, [X8 + 0xB0]
	0x0357E354 ADD X10, X10, 0x8
	0x0357E358 LDUR X11, [X10 - 0x8]
	0x0357E35C CMP X11, X1
	0x0357E360 B.EQ 0x357E380
	0x0357E364 SUBS X9, X9, 0x1
	0x0357E368 ADD X10, X10, 0x10
	0x0357E36C B.NE 0x357E358
	0x0357E370 MOVZ W2, 0x1
	0x0357E374 MOV X0, X22
	0x0357E378 BL 0x1C5C788
	0x0357E37C B 0x357E390
	0x0357E380 LDR W9, [X10]
	0x0357E384 ADD W9, W9, 0x1
	0x0357E388 ADD X8, X8, W9, 0x4, SXTW
	0x0357E38C ADD X0, X8, 0x138
	0x0357E390 LDP X8, X4, [X0]
	0x0357E394 MOVZ W1, 0x3
	0x0357E398 MOV X0, X22
	0x0357E39C MOV X2, X24
	0x0357E3A0 MOV X3, X23
	0x0357E3A4 BLR X8
	0x0357E3A8 LDR X0, [X19 + 0x90]
	0x0357E3AC CBZ X0, 0x357E484
	0x0357E3B0 ADRP X9, 0xBB8000
	0x0357E3B4 LDR X1, [X21 + 0x18]
	0x0357E3B8 LDR X9, [X9 + 0x538]
	0x0357E3BC LDR W10, [X0 + 0x1C]
	0x0357E3C0 LDR X8, [X0 + 0x10]
	0x0357E3C4 LDR X9, [X9]
	0x0357E3C8 ADD W10, W10, 0x1
	0x0357E3CC STR W10, [X0 + 0x1C]
	0x0357E3D0 CBZ X8, 0x357E484
	0x0357E3D4 LDRSW X10, [X0 + 0x18]
	0x0357E3D8 LDR W11, [X8 + 0x18]
	0x0357E3DC CMP W10, W11
	0x0357E3E0 B.CS 0x357E3F8
	0x0357E3E4 ADD W9, W10, 0x1
	0x0357E3E8 ADD X8, X8, X10, 0x3, LSL
	0x0357E3EC STR W9, [X0 + 0x18]
	0x0357E3F0 STR X1, [X8 + 0x20]
	0x0357E3F4 B 0x357E408
	0x0357E3F8 LDR X8, [X9 + 0x20]
	0x0357E3FC LDR X8, [X8 + 0xC0]
	0x0357E400 LDR X2, [X8 + 0x70]
	0x0357E404 BL 0x301BF90
	0x0357E408 ADRP X8, 0xB76000
	0x0357E40C LDR X8, [X8 + 0xE70]
	0x0357E410 LDR X0, [X8]
	0x0357E414 BL 0x1C16F10
	0x0357E418 ADRP X8, 0xBB8000
	0x0357E41C LDR X8, [X8 + 0x540]
	0x0357E420 MOV X1, X21
	0x0357E424 MOV X3, X31
	0x0357E428 MOV X22, X0
	0x0357E42C LDR X2, [X8]
	0x0357E430 BL 0x3314368
	0x0357E434 CBZ X20, 0x357E484

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+32], X22
	004 Move [X31+40], X21
	005 Move [X31+48], X20
	006 Move [X31+56], X19
	007 Move X21, 0xE62000
	008 Move W8, [X21+3767]
	009 Move X20, X1
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {38}
	015 Move X0, 0xB76000
	016 Move X0, [X0+2504]
	017 Call 0x1C17CF4
	018 Move X0, 0xB7B000
	019 Move X0, [X0+840]
	020 Call 0x1C17CF4
	021 Move X0, 0xB76000
	022 Move X0, [X0+2512]
	023 Call 0x1C17CF4
	024 Move X0, 0xB7E000
	025 Move X0, [X0+3392]
	026 Call 0x1C17CF4
	027 Move X0, 0xBB9000
	028 Move X0, [X0+1176]
	029 Call 0x1C17CF4
	030 Move X0, 0xBB9000
	031 Move X0, [X0+1184]
	032 Call 0x1C17CF4
	033 Move X0, 0xBB9000
	034 Move X0, [X0+1192]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X21+3767], W8
	038 Move [X31], X31
	039 Move [X31+8], X31
	040 Move X8, [X19+72]
	041 Compare X8, 0
	042 JumpIfEqual {323}
	043 Move X0, [X8+16]
	044 Compare X0, 0
	045 JumpIfEqual {323}
	046 Move X22, 0xB7B000
	047 Move X22, [X22+840]
	048 Move X1, X31
	049 Call PhotonPeer.get_PeerState, X0
	050 And W31, W0, 255
	051 Move X8, [X19+64]
	052 Compare X8, 0
	053 JumpIfEqual {323}
	054 Move X9, 0xB76000
	055 Move X9, [X9+2512]
	056 Move X20, [X8+24]
	057 Move W1, 1
	058 Move X0, [X9]
	059 Call 0x1C17D6C
	060 Move X8, [X19+72]
	061 Compare X8, 0
	062 JumpIfEqual {323}
	063 Move X19, X0
	064 Move X0, [X8+16]
	065 Compare X0, 0
	066 JumpIfEqual {323}
	067 Move X21, 0xB7E000
	068 Move X21, [X21+3392]
	069 Move X1, X31
	070 Call PhotonPeer.get_PeerState, X0
	071 Move X8, [X21]
	072 Move [X31+28], W0
	073 Add X1, X31, 28
	074 Move X0, X8
	075 Call 0x1C17E04
	076 Compare X19, 0
	077 JumpIfEqual {323}
	078 Move X21, X0
	079 Compare X0, 0
	080 JumpIfEqual {87}
	081 Move X8, [X19]
	082 Move X0, X21
	083 Move X1, [X8+64]
	084 Call 0x1C17E00
	085 Compare X0, 0
	086 JumpIfEqual {325}
	087 Move W8, [X19+24]
	088 Compare W8, 0
	089 JumpIfEqual {324}
	090 Move [X19+32], X21
	091 Compare X20, 0
	092 JumpIfEqual {323}
	093 Move X10, 0xBB9000
	094 Move X8, [X20]
	095 Move X10, [X10+1184]
	096 Move X1, [X22]
	097 NotImplemented "Instruction LDRH not yet implemented."
	098 Move X21, [X10]
	099 Compare X9, 0
	100 JumpIfEqual {107}
	101 Move X10, [X8+176]
	102 Add X10, X10, 8
	103 NotImplemented "Instruction LDUR not yet implemented."
	104 NotImplemented "Instruction CMP not yet implemented."
	105 Subtract X9, X9, 1
	106 Add X10, X10, 16
	107 Move W2, 1
	108 Move X0, X20
	109 Call 0x1C5D788
	110 Compare X20, 0
	111 JumpIfEqual {125}
	112 Move [X19+160], X20
	113 Move W9, [X10]
	114 Add W9, W9, 1
	115 Add X8, X8, W9
	116 Add X0, X8, 312
	117 Move X8, [X0]
	118 Move X4, [X0+8]
	119 Move W1, 2
	120 Move X0, X20
	121 Move X2, X21
	122 Move X3, X19
	123 NotImplemented "Instruction BLR not yet implemented."
	124 Move W0, W31
	125 Move X20, [X19+160]
	126 Compare X20, 0
	127 JumpIfEqual {260}
	128 Move X0, [X20+40]
	129 Move X1, X31
	130 Call String.IsNullOrEmpty, X0
	131 Move TEMP, X0
	132 And TEMP, TEMP, 1
	133 Compare TEMP, 1
	134 JumpIfNotEqual {195}
	135 Move X8, [X19+160]
	136 Compare X8, 0
	137 JumpIfEqual {323}
	138 Move X0, [X8+80]
	139 Move X1, X31
	140 Call String.IsNullOrEmpty, X0
	141 Move TEMP, X0
	142 And TEMP, TEMP, 1
	143 Compare TEMP, 1
	144 JumpIfNotEqual {195}
	145 Move X9, [X19+64]
	146 Compare X9, 0
	147 JumpIfEqual {323}
	148 Move X8, 0xB76000
	149 Move X8, [X8+2504]
	150 Move X19, [X9+24]
	151 Move X20, [X8]
	152 Move X8, [X20+56]
	153 Compare X8, 0
	154 JumpIfNotEqual {158}
	155 Move X0, X20
	156 Call 0x1C5D6E0
	157 Move X8, [X20+56]
	158 Move X0, [X8+16]
	159 Move W8, [X0+309]
	160 Move TEMP, X8
	161 And TEMP, TEMP, 1
	162 Compare TEMP, 1
	163 JumpIfEqual {165}
	164 Call 0x1C5D684
	165 Move W8, [X0+224]
	166 Compare W8, 0
	167 JumpIfNotEqual {169}
	168 Call 0x1C17DFC
	169 Move X8, [X20+56]
	170 Move X0, [X8+16]
	171 Move W8, [X0+309]
	172 Move TEMP, X8
	173 And TEMP, TEMP, 1
	174 Compare TEMP, 1
	175 JumpIfEqual {177}
	176 Call 0x1C5D684
	177 Compare X19, 0
	178 JumpIfEqual {323}
	179 Move X10, 0xBB9000
	180 Move X9, [X0+184]
	181 Move X8, [X19]
	182 Move X1, [X22]
	183 Move X10, [X10+1192]
	184 Move X20, [X9]
	185 NotImplemented "Instruction LDRH not yet implemented."
	186 Move X21, [X10]
	187 Compare X9, 0
	188 JumpIfEqual {310}
	189 Move X10, [X8+176]
	190 Add X10, X10, 8
	191 NotImplemented "Instruction LDUR not yet implemented."
	192 NotImplemented "Instruction CMP not yet implemented."
	193 Subtract X9, X9, 1
	194 Add X10, X10, 16
	195 Move X0, [X19+160]
	196 Compare X0, 0
	197 JumpIfEqual {323}
	198 Move X1, X31
	199 Call AppSettings.get_IsMasterServerAddress, X0
	200 Move TEMP, X0
	201 And TEMP, TEMP, 1
	202 Compare TEMP, 1
	203 JumpIfNotEqual {229}
	204 Move X0, [X19+72]
	205 Compare X0, 0
	206 JumpIfEqual {323}
	207 Move X1, X31
	208 Call LoadBalancingClient.get_UserId, X0
	209 Move X1, X31
	210 Call String.IsNullOrEmpty, X0
	211 Move TEMP, X0
	212 And TEMP, TEMP, 1
	213 Compare TEMP, 1
	214 JumpIfNotEqual {229}
	215 Move X20, [X19+72]
	216 Move X0, X31
	217 Call Guid.NewGuid
	218 Move [X31], X0
	219 Move [X31+8], X1
	220 Add X0, X31, 0
	221 Move X1, X31
	222 Call Guid.ToString, X0
	223 Compare X20, 0
	224 JumpIfEqual {323}
	225 Move X1, X0
	226 Move X0, X20
	227 Move X2, X31
	228 Call LoadBalancingClient.set_UserId, X0, X1
	229 Move X8, [X19+160]
	230 Compare X8, 0
	231 JumpIfEqual {323}
	232 Move X0, [X8+72]
	233 Move X1, X31
	234 Call String.IsNullOrEmpty, X0
	235 Move TEMP, X0
	236 And TEMP, TEMP, 1
	237 Compare TEMP, 1
	238 JumpIfNotEqual {244}
	239 Move X20, [X19+160]
	240 Call VoiceConnection.get_BestRegionSummaryInPreferences, X0
	241 Compare X20, 0
	242 JumpIfEqual {323}
	243 Move [X20+72], X0
	244 Move X0, [X19+72]
	245 Compare X0, 0
	246 JumpIfEqual {323}
	247 Move X8, [X0]
	248 Move X1, [X19+160]
	249 Move X9, [X8+440]
	250 Move X2, [X8+448]
	251 NotImplemented "Instruction BLR not yet implemented."
	252 Move X20, [X31+48]
	253 Move X19, [X31+56]
	254 Move X22, [X31+32]
	255 Move X21, [X31+40]
	256 Move X30, [X31+16]
	257 And W0, W0, 1
	258 Add X31, X31, 64
	259 Return X0
	260 Move X9, [X19+64]
	261 Compare X9, 0
	262 JumpIfEqual {323}
	263 Move X8, 0xB76000
	264 Move X8, [X8+2504]
	265 Move X19, [X9+24]
	266 Move X20, [X8]
	267 Move X8, [X20+56]
	268 Compare X8, 0
	269 JumpIfNotEqual {273}
	270 Move X0, X20
	271 Call 0x1C5D6E0
	272 Move X8, [X20+56]
	273 Move X0, [X8+16]
	274 Move W8, [X0+309]
	275 Move TEMP, X8
	276 And TEMP, TEMP, 1
	277 Compare TEMP, 1
	278 JumpIfEqual {280}
	279 Call 0x1C5D684
	280 Move W8, [X0+224]
	281 Compare W8, 0
	282 JumpIfNotEqual {284}
	283 Call 0x1C17DFC
	284 Move X8, [X20+56]
	285 Move X0, [X8+16]
	286 Move W8, [X0+309]
	287 Move TEMP, X8
	288 And TEMP, TEMP, 1
	289 Compare TEMP, 1
	290 JumpIfEqual {292}
	291 Call 0x1C5D684
	292 Compare X19, 0
	293 JumpIfEqual {323}
	294 Move X10, 0xBB9000
	295 Move X9, [X0+184]
	296 Move X8, [X19]
	297 Move X1, [X22]
	298 Move X10, [X10+1176]
	299 Move X20, [X9]
	300 NotImplemented "Instruction LDRH not yet implemented."
	301 Move X21, [X10]
	302 Compare X9, 0
	303 JumpIfEqual {310}
	304 Move X10, [X8+176]
	305 Add X10, X10, 8
	306 NotImplemented "Instruction LDUR not yet implemented."
	307 NotImplemented "Instruction CMP not yet implemented."
	308 Subtract X9, X9, 1
	309 Add X10, X10, 16
	310 Move W2, 1
	311 Move X0, X19
	312 Call 0x1C5D788
	313 Move W9, [X10]
	314 Add W9, W9, 1
	315 Add X8, X8, W9
	316 Add X0, X8, 312
	317 Move X8, [X0]
	318 Move X4, [X0+8]
	319 Move W1, 1
	320 Move X0, X19
	321 Move X2, X21
	322 Move X3, X20
	323 Call 0x1C17F20
	324 Call 0x1C17F28
	325 Call 0x1C17F44
	326 Move X1, X31
	327 Call 0x1C17DEC

Method: System.Boolean AddSpeaker(Photon.Voice.Unity.Speaker speaker, System.Object userData)

Disassembly:
	0x0357F040 LDRB W8, [X20 + 0xEC1]
	0x0357F044 MOV X21, X1
	0x0357F048 MOV X19, X0
	0x0357F04C TBNZ X8, 0x0, 0x357F094
	0x0357F050 ADRP X0, 0xB75000
	0x0357F054 LDR X0, [X0 + 0x9D8]
	0x0357F058 BL 0x1C16CF4
	0x0357F05C ADRP X0, 0xB79000
	0x0357F060 LDR X0, [X0 + 0x348]
	0x0357F064 BL 0x1C16CF4
	0x0357F068 ADRP X0, 0xB78000
	0x0357F06C LDR X0, [X0 + 0x628]
	0x0357F070 BL 0x1C16CF4
	0x0357F074 ADRP X0, 0xB74000
	0x0357F078 LDR X0, [X0 + 0x9D0]
	0x0357F07C BL 0x1C16CF4
	0x0357F080 ADRP X0, 0xBB7000
	0x0357F084 LDR X0, [X0 + 0x50]
	0x0357F088 BL 0x1C16CF4
	0x0357F08C MOVZ W8, 0x1
	0x0357F090 STRB W8, [X20 + 0xEC1]
	0x0357F094 CBZ X21, 0x357F228
	0x0357F098 LDRH W8, [X21 + 0x12]
	0x0357F09C CBZ W8, 0x357F218
	0x0357F0A0 MOVZ W9, 0x7FF8
	0x0357F0A4 CMP W8, W9
	0x0357F0A8 B.EQ 0x357F0B8
	0x0357F0AC LDRB W8, [X21 + 0x10]
	0x0357F0B0 CMP W8, 0xE1
	0x0357F0B4 B.EQ 0x357F218
	0x0357F0B8 LDR X8, [X19 + 0x40]
	0x0357F0BC CBZ X8, 0x357F228
	0x0357F0C0 LDR X19, [X8 + 0x18]
	0x0357F0C4 ADRP X8, 0xB74000
	0x0357F0C8 LDR X8, [X8 + 0x9D0]
	0x0357F0CC MOVZ W1, 0x3
	0x0357F0D0 LDR X0, [X8]
	0x0357F0D4 BL 0x1C16D6C
	0x0357F0D8 ADRP X9, 0xB75000
	0x0357F0DC LDRB W8, [X21 + 0x10]
	0x0357F0E0 LDR X9, [X9 + 0x9D8]
	0x0357F0E4 MOV X20, X0
	0x0357F0E8 ADD X1, X31, 0xC
	0x0357F0EC STRB W8, [X31 + 0xC]
	0x0357F0F0 LDR X0, [X9]
	0x0357F0F4 BL 0x1C16E04
	0x0357F0F8 CBZ X20, 0x357F228
	0x0357F0FC MOV X22, X0
	0x0357F100 CBZ X0, 0x357F118
	0x0357F104 LDR X8, [X20]
	0x0357F108 MOV X0, X22
	0x0357F10C LDR X1, [X8 + 0x40]
	0x0357F110 BL 0x1C16E00
	0x0357F114 CBZ X0, 0x357F230
	0x0357F118 LDR W8, [X20 + 0x18]
	0x0357F11C CBZ W8, 0x357F22C
	0x0357F120 STR X22, [X20 + 0x20]
	0x0357F124 ADRP X9, 0xB78000
	0x0357F128 LDRH W8, [X21 + 0x12]
	0x0357F12C LDR X9, [X9 + 0x628]
	0x0357F130 ADD X1, X31, 0x8
	0x0357F134 STRH W8, [X31 + 0x8]
	0x0357F138 LDR X0, [X9]
	0x0357F13C BL 0x1C16E04
	0x0357F140 MOV X22, X0
	0x0357F144 CBZ X0, 0x357F15C
	0x0357F148 LDR X8, [X20]
	0x0357F14C MOV X0, X22
	0x0357F150 LDR X1, [X8 + 0x40]
	0x0357F154 BL 0x1C16E00
	0x0357F158 CBZ X0, 0x357F230
	0x0357F15C LDR W8, [X20 + 0x18]
	0x0357F160 CMP W8, 0x1
	0x0357F164 B.LS 0x357F22C
	0x0357F168 STR X22, [X20 + 0x28]
	0x0357F16C LDR X21, [X21 + 0x18]
	0x0357F170 CBZ X21, 0x357F18C
	0x0357F174 LDR X8, [X20]
	0x0357F178 MOV X0, X21
	0x0357F17C LDR X1, [X8 + 0x40]
	0x0357F180 BL 0x1C16E00
	0x0357F184 CBZ X0, 0x357F230
	0x0357F188 LDR W8, [X20 + 0x18]
	0x0357F18C CMP W8, 0x2
	0x0357F190 B.LS 0x357F22C
	0x0357F194 STR X21, [X20 + 0x30]
	0x0357F198 CBZ X19, 0x357F228
	0x0357F19C ADRP X9, 0xB79000
	0x0357F1A0 LDR X8, [X19]
	0x0357F1A4 LDR X9, [X9 + 0x348]
	0x0357F1A8 ADRP X10, 0xBB7000
	0x0357F1AC LDR X1, [X9]
	0x0357F1B0 LDR X10, [X10 + 0x50]
	0x0357F1B4 LDRH W9, [X8 + 0x12E]
	0x0357F1B8 LDR X21, [X10]
	0x0357F1BC CBZ X9, 0x357F1E0
	0x0357F1C0 LDR X10, [X8 + 0xB0]
	0x0357F1C4 ADD X10, X10, 0x8
	0x0357F1C8 LDUR X11, [X10 - 0x8]
	0x0357F1CC CMP X11, X1
	0x0357F1D0 B.EQ 0x357F1F0
	0x0357F1D4 SUBS X9, X9, 0x1
	0x0357F1D8 ADD X10, X10, 0x10
	0x0357F1DC B.NE 0x357F1C8
	0x0357F1E0 MOVZ W2, 0x1
	0x0357F1E4 MOV X0, X19
	0x0357F1E8 BL 0x1C5C788
	0x0357F1EC B 0x357F200
	0x0357F1F0 LDR W9, [X10]
	0x0357F1F4 ADD W9, W9, 0x1
	0x0357F1F8 ADD X8, X8, W9, 0x4, SXTW
	0x0357F1FC ADD X0, X8, 0x138
	0x0357F200 LDP X8, X4, [X0]
	0x0357F204 MOVZ W1, 0x1
	0x0357F208 MOV X0, X19
	0x0357F20C MOV X2, X21
	0x0357F210 MOV X3, X20
	0x0357F214 BLR X8
	0x0357F218 LDP X20, X19, [X31 + 0x20]
	0x0357F21C LDP X22, X21, [X31 + 0x10]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0xE61000
	009 Move W8, [X21+3768]
	010 Move X22, X2
	011 Move X19, X1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {34}
	017 Move X0, 0xB7A000
	018 Move X0, [X0+840]
	019 Call 0x1C17CF4
	020 Move X0, 0xBB8000
	021 Move X0, [X0+1304]
	022 Call 0x1C17CF4
	023 Move X0, 0xBB8000
	024 Move X0, [X0+1312]
	025 Call 0x1C17CF4
	026 Move X0, 0xB75000
	027 Move X0, [X0+2512]
	028 Call 0x1C17CF4
	029 Move X0, 0xBB8000
	030 Move X0, [X0+1320]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X21+3768], W8
	034 Move X0, [X20+120]
	035 Compare X0, 0
	036 JumpIfEqual {64}
	037 Move X24, 0xBB8000
	038 Move X24, [X24+1312]
	039 Move W23, W31
	040 Move W8, [X0+24]
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Move X2, [X24]
	043 Move W1, W23
	044 Call List`1<Object>.get_Item, X0, X1
	045 Compare X0, 0
	046 JumpIfEqual {64}
	047 Compare X22, 0
	048 JumpIfEqual {64}
	049 Move X8, [X22]
	050 Move X1, [X0+56]
	051 Move X21, X0
	052 Move X0, X22
	053 Move X9, [X8+312]
	054 Move X2, [X8+320]
	055 NotImplemented "Instruction BLR not yet implemented."
	056 Move TEMP, X0
	057 And TEMP, TEMP, 1
	058 Compare TEMP, 1
	059 JumpIfEqual {66}
	060 Move X0, [X20+120]
	061 Add W23, W23, 1
	062 Compare X0, 0
	063 JumpIfNotEqual {40}
	064 Call 0x1C17F20
	065 Move W0, W31
	066 Move X8, [X20+64]
	067 Compare X8, 0
	068 JumpIfEqual {64}
	069 Move X22, [X8+24]
	070 Move X8, 0xB75000
	071 Move X8, [X8+2512]
	072 Move W1, 1
	073 Move X0, [X8]
	074 Call 0x1C17D6C
	075 Compare X0, 0
	076 JumpIfEqual {64}
	077 Move X8, [X0]
	078 Move X23, X0
	079 Move X0, X21
	080 Move X1, [X8+64]
	081 Call 0x1C17E00
	082 Compare X0, 0
	083 JumpIfEqual {137}
	084 Move W8, [X23+24]
	085 Compare W8, 0
	086 JumpIfEqual {140}
	087 Move [X23+32], X21
	088 Compare X22, 0
	089 JumpIfEqual {64}
	090 Move X9, 0xB7A000
	091 Move X8, [X22]
	092 Move X9, [X9+840]
	093 Move X10, 0xBB8000
	094 Move X1, [X9]
	095 Move X10, [X10+1320]
	096 NotImplemented "Instruction LDRH not yet implemented."
	097 Move X24, [X10]
	098 Compare X9, 0
	099 JumpIfEqual {106}
	100 Move X10, [X8+176]
	101 Add X10, X10, 8
	102 NotImplemented "Instruction LDUR not yet implemented."
	103 NotImplemented "Instruction CMP not yet implemented."
	104 Subtract X9, X9, 1
	105 Add X10, X10, 16
	106 Move W2, 1
	107 Move X0, X22
	108 Call 0x1C5D788
	109 Move W9, [X10]
	110 Add W9, W9, 1
	111 Add X8, X8, W9
	112 Add X0, X8, 312
	113 Move X8, [X0]
	114 Move X4, [X0+8]
	115 Move W1, 4
	116 Move X0, X22
	117 Move X2, X24
	118 Move X3, X23
	119 NotImplemented "Instruction BLR not yet implemented."
	120 Move X0, X20
	121 Move X1, X19
	122 Move X2, X21
	123 Call VoiceConnection.LinkSpeaker, X0, X1, X2
	124 Compare X19, 0
	125 JumpIfEqual {64}
	126 Move X8, [X19+80]
	127 NotImplemented "Instruction CMP not yet implemented."
	128 NotImplemented "Instruction CSET not yet implemented."
	129 Move X20, [X31+48]
	130 Move X19, [X31+56]
	131 Move X22, [X31+32]
	132 Move X21, [X31+40]
	133 Move X24, [X31+16]
	134 Move X23, [X31+24]
	135 Move X30, [X31+64]
	136 Return X0
	137 Call 0x1C17F44
	138 Move X1, X31
	139 Call 0x1C17DEC
	140 Call 0x1C17F28

Method: System.Void Awake()

Disassembly:
	0x0357F498 BL 0x1C16D6C
	0x0357F49C CBZ X0, 0x357F57C
	0x0357F4A0 LDR X22, [X19 + 0x18]
	0x0357F4A4 MOV X21, X0
	0x0357F4A8 CBZ X22, 0x357F4C0
	0x0357F4AC LDR X8, [X21]
	0x0357F4B0 MOV X0, X22
	0x0357F4B4 LDR X1, [X8 + 0x40]
	0x0357F4B8 BL 0x1C16E00
	0x0357F4BC CBZ X0, 0x357F584
	0x0357F4C0 LDR W8, [X21 + 0x18]
	0x0357F4C4 CBZ W8, 0x357F580
	0x0357F4C8 STR X22, [X21 + 0x20]
	0x0357F4CC CBZ X20, 0x357F57C
	0x0357F4D0 ADRP X9, 0xB79000
	0x0357F4D4 ADRP X10, 0xBB7000
	0x0357F4D8 LDR X8, [X20]
	0x0357F4DC LDR X9, [X9 + 0x348]
	0x0357F4E0 LDR X10, [X10 + 0x5C8]
	0x0357F4E4 LDR X1, [X9]
	0x0357F4E8 LDRH W9, [X8 + 0x12E]
	0x0357F4EC LDR X22, [X10]
	0x0357F4F0 CBZ X9, 0x357F514
	0x0357F4F4 LDR X10, [X8 + 0xB0]
	0x0357F4F8 ADD X10, X10, 0x8
	0x0357F4FC LDUR X11, [X10 - 0x8]
	0x0357F500 CMP X11, X1
	0x0357F504 B.EQ 0x357F524
	0x0357F508 SUBS X9, X9, 0x1
	0x0357F50C ADD X10, X10, 0x10
	0x0357F510 B.NE 0x357F4FC
	0x0357F514 MOVZ W2, 0x1
	0x0357F518 MOV X0, X20
	0x0357F51C BL 0x1C5C788
	0x0357F520 B 0x357F534
	0x0357F524 LDR W9, [X10]
	0x0357F528 ADD W9, W9, 0x1
	0x0357F52C ADD X8, X8, W9, 0x4, SXTW
	0x0357F530 ADD X0, X8, 0x138
	0x0357F534 LDP X8, X4, [X0]
	0x0357F538 MOVZ W1, 0x3
	0x0357F53C MOV X0, X20
	0x0357F540 MOV X2, X22
	0x0357F544 MOV X3, X21
	0x0357F548 BLR X8
	0x0357F54C LDR X8, [X19 + 0x10]
	0x0357F550 CBZ X8, 0x357F57C
	0x0357F554 LDR X0, [X8 + 0x78]
	0x0357F558 CBZ X0, 0x357F57C
	0x0357F55C ADRP X8, 0xBB7000
	0x0357F560 LDR X8, [X8 + 0x5C0]
	0x0357F564 LDR X1, [X19 + 0x18]
	0x0357F568 LDP X20, X19, [X31 + 0x20]
	0x0357F56C LDP X22, X21, [X31 + 0x10]
	0x0357F570 LDR X2, [X8]
	0x0357F574 LDR X30, [X31], #0x30
	0x0357F578 B 0x301D7A8
	0x0357F57C BL 0x1C16F20
	0x0357F580 BL 0x1C16F28
	0x0357F584 BL 0x1C16F44
	0x0357F588 MOV X1, X31
	0x0357F58C BL 0x1C16DEC
	0x0357F590 STR X30, [X31 - 0x20]!
	0x0357F594 STP X20, X19, [X31 + 0x10]
	0x0357F598 ADRP X20, 0xE60000
	0x0357F59C LDRB W8, [X20 + 0xEC5]
	0x0357F5A0 MOV X19, X0
	0x0357F5A4 TBNZ X8, 0x0, 0x357F5BC
	0x0357F5A8 ADRP X0, 0xBB7000
	0x0357F5AC LDR X0, [X0 + 0x5D0]
	0x0357F5B0 BL 0x1C16CF4
	0x0357F5B4 MOVZ W8, 0x1
	0x0357F5B8 STRB W8, [X20 + 0xEC5]
	0x0357F5BC LDR X8, [X19 + 0x10]
	0x0357F5C0 CBZ X8, 0x357F5E8
	0x0357F5C4 LDR X0, [X8 + 0x90]
	0x0357F5C8 CBZ X0, 0x357F5E8
	0x0357F5CC ADRP X8, 0xBB7000
	0x0357F5D0 LDR X8, [X8 + 0x5D0]
	0x0357F5D4 LDR X1, [X19 + 0x18]
	0x0357F5D8 LDP X20, X19, [X31 + 0x10]
	0x0357F5DC LDR X2, [X8]
	0x0357F5E0 LDR X30, [X31], #0x20
	0x0357F5E4 B 0x301D7A8
	0x0357F5E8 BL 0x1C16F20
	0x0357F5EC STR X30, [X31 - 0x10]!
	0x0357F5F0 LDR X8, [X0 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xE61000
	006 Move W8, [X20+3769]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {23}
	012 Move X0, 0xB75000
	013 Move X0, [X0+2416]
	014 Call 0x1C17CF4
	015 Move X0, 0xBB8000
	016 Move X0, [X0+1360]
	017 Call 0x1C17CF4
	018 Move X0, 0xB75000
	019 Move X0, [X0+1432]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X20+3769], W8
	023 Move X0, X19
	024 Move X1, X31
	025 Call ConnectionHandler.Awake, X0
	026 Move X0, [X19+64]
	027 Compare X0, 0
	028 JumpIfEqual {110}
	029 Move X21, 0xB75000
	030 Move X21, [X21+1432]
	031 Move X1, X19
	032 Call VoiceComponentImpl.Awake, X0, X1
	033 Move X0, X19
	034 Call VoiceConnection.Init, X0
	035 Move W8, [X19+52]
	036 Compare W8, 0
	037 JumpIfEqual {56}
	038 Move X8, [X19+64]
	039 Compare X8, 0
	040 JumpIfEqual {110}
	041 Move X0, [X8+16]
	042 Compare X0, 0
	043 JumpIfEqual {110}
	044 Move X1, X31
	045 Call Component.get_gameObject, X0
	046 Move X8, [X21]
	047 Move X20, X0
	048 Move W9, [X8+224]
	049 Compare W9, 0
	050 JumpIfNotEqual {53}
	051 Move X0, X8
	052 Call 0x1C17DFC
	053 Move X0, X20
	054 Move X1, X31
	055 Call Object.DontDestroyOnLoad, X0
	056 Move X8, 0xBB8000
	057 Move X8, [X8+1360]
	058 Move X0, X19
	059 Move X1, [X8]
	060 Call 0x21A4894, X0
	061 Move [X19+80], X0
	062 Move X20, X0
	063 Move X0, [X21]
	064 Move W8, [X0+224]
	065 Compare W8, 0
	066 JumpIfNotEqual {68}
	067 Call 0x1C17DFC
	068 Move X0, X20
	069 Move X1, X31
	070 Move X2, X31
	071 Call Object.op_Inequality, X0, X1
	072 Move TEMP, X0
	073 And TEMP, TEMP, 1
	074 Compare TEMP, 1
	075 JumpIfNotEqual {87}
	076 Move X0, [X19+80]
	077 Compare X0, 0
	078 JumpIfEqual {110}
	079 Move X1, [X19+72]
	080 Move X2, X31
	081 Call SupportLogger.set_Client, X0, X1
	082 Move X8, [X19+80]
	083 Compare X8, 0
	084 JumpIfEqual {110}
	085 Move W9, 1
	086 Move [X8+32], W9
	087 Move W8, [X19+88]
	088 Compare W8, 0
	089 JumpIfEqual {105}
	090 Move X8, 0xB75000
	091 Move X8, [X8+2416]
	092 Move X0, [X8]
	093 Move W8, [X0+224]
	094 Compare W8, 0
	095 JumpIfNotEqual {97}
	096 Call 0x1C17DFC
	097 Move X20, [X31+16]
	098 Move X19, [X31+24]
	099 Move W0, 1
	100 Move X1, X31
	101 Move X30, [X31+32]
	102 Move X21, [X31+40]
	103 Call Application.set_runInBackground, X0
	104 Return 
	105 Move X20, [X31+16]
	106 Move X19, [X31+24]
	107 Move X30, [X31+32]
	108 Move X21, [X31+40]
	109 Return 
	110 Call 0x1C17F20

Method: System.Void Update()

Disassembly:
	0x0357F76C CBZ X0, 0x357F954
	0x0357F770 MOV X1, X31
	0x0357F774 BL 0x3C3F49C
	0x0357F778 CBZ X0, 0x357F954
	0x0357F77C MOV X1, X31
	0x0357F780 BL 0x3C32ECC
	0x0357F784 MOV X19, X0
	0x0357F788 LDR X0, [X24]
	0x0357F78C MOV X20, X19

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+72]
	003 Compare X8, 0
	004 JumpIfEqual {12}
	005 Move X0, [X8+392]
	006 Compare X0, 0
	007 JumpIfEqual {12}
	008 Move X1, X31
	009 Move X30, [X31+16]
	010 Call VoiceClient.Service, X0
	011 Return 
	012 Call 0x1C17F20

Method: System.Void FixedUpdate()

Disassembly:
	0x0357F790 LDR W8, [X0 + 0xE0]
	0x0357F794 CBNZ W8, 0x357F79C
	0x0357F798 BL 0x1C16DFC
	0x0357F79C MOV X0, X20
	0x0357F7A0 MOV X1, X31
	0x0357F7A4 MOV X2, X31
	0x0357F7A8 BL 0x3C354F8
	0x0357F7AC TBNZ X0, 0x0, 0x357F6C8
	0x0357F7B0 LDR X0, [X24]
	0x0357F7B4 LDR W8, [X0 + 0xE0]
	0x0357F7B8 CBNZ W8, 0x357F7C0
	0x0357F7BC BL 0x1C16DFC
	0x0357F7C0 LDR X0, [X21]
	0x0357F7C4 BL 0x222D200

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X8, [X19+72]
	005 Compare X8, 0
	006 JumpIfEqual {21}
	007 Move X0, [X8+16]
	008 Compare X0, 0
	009 JumpIfEqual {21}
	010 Move X8, [X0]
	011 Move X9, [X8+536]
	012 Move X1, [X8+544]
	013 NotImplemented "Instruction BLR not yet implemented."
	014 Move TEMP, X0
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {4}
	018 Move X30, [X31+16]
	019 Move X19, [X31+24]
	020 Return 
	021 Call 0x1C17F20

Method: System.Void LateUpdate()

Disassembly:
	0x0357F7C8 CBZ X0, 0x357F954
	0x0357F7CC LDR W8, [X0 + 0x18]
	0x0357F7D0 MOV X20, X0
	0x0357F7D4 CMP W8, 0x1
	0x0357F7D8 B.LT 0x357F930
	0x0357F7DC ADRP X26, 0xB74000
	0x0357F7E0 ADRP X27, 0xBB7000
	0x0357F7E4 ADRP X28, 0xBB7000
	0x0357F7E8 LDR X26, [X26 + 0x9C8]
	0x0357F7EC LDR X27, [X27 + 0x5E8]
	0x0357F7F0 LDR X28, [X28 + 0x5F0]
	0x0357F7F4 MOV W25, W31
	0x0357F7F8 MOV X19, X31
	0x0357F7FC CMP W25, W8
	0x0357F800 B.CS 0x357F958
	0x0357F804 ADD X8, X20, W25, 0x3, SXTW
	0x0357F808 LDR X21, [X8 + 0x20]
	0x0357F80C CBZ X21, 0x357F954
	0x0357F810 MOV X0, X21
	0x0357F814 MOV X1, X31
	0x0357F818 BL 0x3C32E90
	0x0357F81C CBZ X0, 0x357F954
	0x0357F820 MOV X1, X31
	0x0357F824 BL 0x3C3F49C
	0x0357F828 LDR X8, [X24]
	0x0357F82C MOV X22, X0
	0x0357F830 LDR W9, [X8 + 0xE0]
	0x0357F834 CBNZ W9, 0x357F840
	0x0357F838 MOV X0, X8
	0x0357F83C BL 0x1C16DFC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X0
	005 Move X8, [X19+72]
	006 Compare X8, 0
	007 JumpIfEqual {36}
	008 Move X0, [X8+16]
	009 Compare X0, 0
	010 JumpIfEqual {36}
	011 Move X8, [X0]
	012 Move X9, [X8+504]
	013 Move X1, [X8+512]
	014 NotImplemented "Instruction BLR not yet implemented."
	015 Move TEMP, X0
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {5}
	019 Move W8, [X19+92]
	020 NotImplemented "Instruction CMP not yet implemented."
	021 Move X0, X31
	022 Call Environment.get_TickCount
	023 Move W8, [X19+96]
	024 Subtract W8, W0, W8
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move W20, W0
	027 Move X0, X19
	028 Call VoiceConnection.CalcStatistics, X0
	029 Move W8, [X19+92]
	030 Add W8, W8, W20
	031 Move [X19+96], W8
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X30, [X31+32]
	035 Return 
	036 Call 0x1C17F20

Method: System.Void OnDestroy()

Disassembly:
	0x03572914 ADRP X10, 0xBC4000
	0x03572918 LDR X9, [X0 + 0xB8]
	0x0357291C LDR X23, [X23 + 0x348]
	0x03572920 LDR X8, [X20]
	0x03572924 LDR X10, [X10 + 0xB8]
	0x03572928 LDR X21, [X9]
	0x0357292C LDR X1, [X23]
	0x03572930 LDRH W9, [X8 + 0x12E]
	0x03572934 LDR X22, [X10]
	0x03572938 CBZ X9, 0x357295C
	0x0357293C LDR X10, [X8 + 0xB0]
	0x03572940 ADD X10, X10, 0x8
	0x03572944 LDUR X11, [X10 - 0x8]
	0x03572948 CMP X11, X1
	0x0357294C B.EQ 0x3572AF4
	0x03572950 SUBS X9, X9, 0x1
	0x03572954 ADD X10, X10, 0x10
	0x03572958 B.NE 0x3572944
	0x0357295C MOVZ W2, 0x1
	0x03572960 MOV X0, X20
	0x03572964 BL 0x1C5C788
	0x03572968 B 0x3572B04
	0x0357296C LDR X9, [X19 + 0x40]
	0x03572970 CBZ X9, 0x3572D4C
	0x03572974 ADRP X24, 0xB81000
	0x03572978 LDR X24, [X24 + 0x9C8]
	0x0357297C LDR X20, [X9 + 0x18]
	0x03572980 LDR X21, [X24]
	0x03572984 LDR X8, [X21 + 0x38]
	0x03572988 CBNZ X8, 0x3572998
	0x0357298C MOV X0, X21
	0x03572990 BL 0x1C5C6E0
	0x03572994 LDR X8, [X21 + 0x38]
	0x03572998 LDR X0, [X8 + 0x10]
	0x0357299C LDRB W8, [X0 + 0x135]
	0x035729A0 TBNZ X8, 0x0, 0x35729A8
	0x035729A4 BL 0x1C5C684
	0x035729A8 LDR W8, [X0 + 0xE0]
	0x035729AC CBNZ W8, 0x35729B4
	0x035729B0 BL 0x1C16DFC
	0x035729B4 LDR X8, [X21 + 0x38]
	0x035729B8 LDR X0, [X8 + 0x10]
	0x035729BC LDRB W8, [X0 + 0x135]
	0x035729C0 TBNZ X8, 0x0, 0x35729C8
	0x035729C4 BL 0x1C5C684
	0x035729C8 CBZ X20, 0x3572D4C
	0x035729CC ADRP X23, 0xB86000
	0x035729D0 ADRP X10, 0xBC4000
	0x035729D4 LDR X9, [X0 + 0xB8]
	0x035729D8 LDR X23, [X23 + 0x348]
	0x035729DC LDR X8, [X20]
	0x035729E0 LDR X10, [X10 + 0xA8]
	0x035729E4 LDR X21, [X9]
	0x035729E8 LDR X1, [X23]
	0x035729EC LDRH W9, [X8 + 0x12E]
	0x035729F0 LDR X22, [X10]
	0x035729F4 CBZ X9, 0x3572A18
	0x035729F8 LDR X10, [X8 + 0xB0]
	0x035729FC ADD X10, X10, 0x8
	0x03572A00 LDUR X11, [X10 - 0x8]
	0x03572A04 CMP X11, X1
	0x03572A08 B.EQ 0x3572BD4
	0x03572A0C SUBS X9, X9, 0x1
	0x03572A10 ADD X10, X10, 0x10
	0x03572A14 B.NE 0x3572A00
	0x03572A18 MOVZ W2, 0x1
	0x03572A1C MOV X0, X20
	0x03572A20 BL 0x1C5C788
	0x03572A24 B 0x3572BE4
	0x03572A28 LDR X8, [X19 + 0x40]
	0x03572A2C CBZ X8, 0x3572D4C
	0x03572A30 LDR X20, [X8 + 0x18]
	0x03572A34 ADRP X8, 0xB81000
	0x03572A38 LDR X8, [X8 + 0x9D0]
	0x03572A3C MOVZ W1, 0x1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xE6E000
	007 Move X21, 0xBC3000
	008 Move W8, [X20+3770]
	009 Move X21, [X21+3032]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0xB8A000
	016 Move X0, [X0+3952]
	017 Call 0x1C17CF4
	018 Move X0, 0xBC3000
	019 Move X0, [X0+3032]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X20+3770], W8
	023 Move X0, [X21]
	024 Move X20, [X19+72]
	025 Call 0x1C17F10
	026 Move X8, [X19]
	027 Move X1, X19
	028 Move X3, X31
	029 Move X21, X0
	030 Move X2, [X8+512]
	031 Call Action`2<Int32Enum, Int32Enum>..ctor, X0, X1, X2
	032 Compare X20, 0
	033 JumpIfEqual {93}
	034 Move X22, 0xB8A000
	035 Move X22, [X22+3952]
	036 Move X0, X20
	037 Move X1, X21
	038 Move X2, X31
	039 Call LoadBalancingClient.remove_StateChanged, X0, X1
	040 Move X0, [X22]
	041 Move X20, [X19+72]
	042 Call 0x1C17F10
	043 Move X8, [X19]
	044 Move X1, X19
	045 Move X3, X31
	046 Move X21, X0
	047 Move X2, [X8+528]
	048 Call Action`1<Object>..ctor, X0, X1, X2
	049 Compare X20, 0
	050 JumpIfEqual {93}
	051 Move X0, X20
	052 Move X1, X21
	053 Move X2, X31
	054 Call LoadBalancingClient.remove_OpResponseReceived, X0, X1
	055 Move X0, [X19+72]
	056 Compare X0, 0
	057 JumpIfEqual {93}
	058 Move W1, 17
	059 Move X2, X31
	060 Call LoadBalancingClient.Disconnect, X0, X1
	061 Move X0, [X19+72]
	062 Compare X0, 0
	063 JumpIfEqual {93}
	064 Move X8, [X0+16]
	065 Compare X8, 0
	066 JumpIfEqual {85}
	067 Move X9, [X8]
	068 Move X0, X8
	069 Move X10, [X9+440]
	070 Move X1, [X9+448]
	071 NotImplemented "Instruction BLR not yet implemented."
	072 Move X8, [X19+72]
	073 Compare X8, 0
	074 JumpIfEqual {93}
	075 Move X0, [X8+16]
	076 Compare X0, 0
	077 JumpIfEqual {93}
	078 Move X8, [X0]
	079 Move X9, [X8+456]
	080 Move X1, [X8+464]
	081 NotImplemented "Instruction BLR not yet implemented."
	082 Move X0, [X19+72]
	083 Compare X0, 0
	084 JumpIfEqual {93}
	085 Move X20, [X31+32]
	086 Move X19, [X31+40]
	087 Move X22, [X31+16]
	088 Move X21, [X31+24]
	089 Move X1, X31
	090 Move X30, [X31+48]
	091 Call LoadBalancingTransport.Dispose, X0
	092 Return 
	093 Call 0x1C17F20

Method: Photon.Voice.Unity.Speaker InstantiateSpeakerForRemoteVoice(System.Int32 playerId, System.Byte voiceId, System.Object userData)

Disassembly:
	0x0357F8DC TBNZ X8, 0x0, 0x357F8E4
	0x0357F8E0 BL 0x1C5C684
	0x0357F8E4 LDR X8, [X0 + 0xB8]
	0x0357F8E8 LDR X2, [X27]
	0x0357F8EC LDR X4, [X28]
	0x0357F8F0 MOVZ W0, 0x3
	0x0357F8F4 LDR X5, [X8]
	0x0357F8F8 MOV X1, X21
	0x0357F8FC MOV X3, X22
	0x0357F900 BL 0x357FB20
	0x0357F904 MOV X0, X21
	0x0357F908 MOV W1, W31
	0x0357F90C MOV X2, X31
	0x0357F910 BL 0x3C32410
	0x0357F914 B 0x357F91C
	0x0357F918 MOV X19, X21
	0x0357F91C LDR W8, [X20 + 0x18]
	0x0357F920 ADD W25, W25, 0x1
	0x0357F924 CMP W25, W8

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0xB75000
	004 Move X0, [X0+2000]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X19, X0
	008 Move X0, 0xBB8000
	009 Move X0, [X0+1376]
	010 Call 0x1C17D08
	011 Move X1, X0
	012 Move X0, X19
	013 Move X2, X31
	014 Call Exception..ctor, X0, X1
	015 Move X0, 0xBB8000
	016 Move X0, [X0+1384]
	017 Call 0x1C17D08
	018 Move X1, X0
	019 Move X0, X19
	020 Call 0x1C17DEC

Method: Photon.Voice.Unity.Speaker InstantiateSpeakerPrefab(UnityEngine.GameObject parent, System.Boolean destroyOnRemove)

Disassembly:
	0x0357E45C LDP X20, X19, [X31 + 0x30]
	0x0357E460 LDP X22, X21, [X31 + 0x20]
	0x0357E464 LDP X24, X23, [X31 + 0x10]
	0x0357E468 LDR X30, [X31], #0x40
	0x0357E46C BR X3
	0x0357E470 LDP X20, X19, [X31 + 0x30]
	0x0357E474 LDP X22, X21, [X31 + 0x20]
	0x0357E478 LDP X24, X23, [X31 + 0x10]
	0x0357E47C LDR X30, [X31], #0x40
	0x0357E480 RET
	0x0357E484 BL 0x1C16F20
	0x0357E488 BL 0x1C16F28
	0x0357E48C BL 0x1C16F44
	0x0357E490 MOV X1, X31
	0x0357E494 BL 0x1C16DEC
	0x0357E498 STP X30, X21, [X31 - 0x20]!
	0x0357E49C STP X20, X19, [X31 + 0x10]
	0x0357E4A0 ADRP X20, 0xE61000
	0x0357E4A4 LDRB W8, [X20 + 0xEB9]
	0x0357E4A8 MOV X19, X0
	0x0357E4AC TBNZ X8, 0x0, 0x357E4DC
	0x0357E4B0 ADRP X0, 0xB75000
	0x0357E4B4 LDR X0, [X0 + 0x970]
	0x0357E4B8 BL 0x1C16CF4
	0x0357E4BC ADRP X0, 0xBB8000
	0x0357E4C0 LDR X0, [X0 + 0x550]
	0x0357E4C4 BL 0x1C16CF4
	0x0357E4C8 ADRP X0, 0xB75000
	0x0357E4CC LDR X0, [X0 + 0x598]
	0x0357E4D0 BL 0x1C16CF4
	0x0357E4D4 MOVZ W8, 0x1
	0x0357E4D8 STRB W8, [X20 + 0xEB9]
	0x0357E4DC MOV X0, X19
	0x0357E4E0 MOV X1, X31
	0x0357E4E4 BL 0x35351B0
	0x0357E4E8 LDR X0, [X19 + 0x40]
	0x0357E4EC CBZ X0, 0x357E5F0
	0x0357E4F0 ADRP X21, 0xB75000
	0x0357E4F4 LDR X21, [X21 + 0x598]
	0x0357E4F8 MOV X1, X19
	0x0357E4FC BL 0x357E5F4
	0x0357E500 MOV X0, X19
	0x0357E504 BL 0x357DAA0
	0x0357E508 LDRB W8, [X19 + 0x34]
	0x0357E50C CBZ W8, 0x357E54C
	0x0357E510 LDR X8, [X19 + 0x40]
	0x0357E514 CBZ X8, 0x357E5F0
	0x0357E518 LDR X0, [X8 + 0x10]
	0x0357E51C CBZ X0, 0x357E5F0
	0x0357E520 MOV X1, X31
	0x0357E524 BL 0x3C32ECC
	0x0357E528 LDR X8, [X21]
	0x0357E52C MOV X20, X0
	0x0357E530 LDR W9, [X8 + 0xE0]
	0x0357E534 CBNZ W9, 0x357E540
	0x0357E538 MOV X0, X8
	0x0357E53C BL 0x1C16DFC
	0x0357E540 MOV X0, X20
	0x0357E544 MOV X1, X31
	0x0357E548 BL 0x3C39674
	0x0357E54C ADRP X8, 0xBB8000
	0x0357E550 LDR X8, [X8 + 0x550]
	0x0357E554 MOV X0, X19
	0x0357E558 LDR X1, [X8]
	0x0357E55C BL 0x21A3894
	0x0357E560 STR X0, [X19 + 0x50]
	0x0357E564 MOV X20, X0
	0x0357E568 LDR X0, [X21]
	0x0357E56C LDR W8, [X0 + 0xE0]
	0x0357E570 CBNZ W8, 0x357E578
	0x0357E574 BL 0x1C16DFC
	0x0357E578 MOV X0, X20
	0x0357E57C MOV X1, X31
	0x0357E580 MOV X2, X31
	0x0357E584 BL 0x3C354F8
	0x0357E588 TBZ X0, 0x0, 0x357E5B0
	0x0357E58C LDR X0, [X19 + 0x50]
	0x0357E590 CBZ X0, 0x357E5F0
	0x0357E594 LDR X1, [X19 + 0x48]
	0x0357E598 MOV X2, X31
	0x0357E59C BL 0x354DE18
	0x0357E5A0 LDR X8, [X19 + 0x50]
	0x0357E5A4 CBZ X8, 0x357E5F0
	0x0357E5A8 MOVZ W9, 0x1
	0x0357E5AC STRB W9, [X8 + 0x20]
	0x0357E5B0 LDRB W8, [X19 + 0x58]
	0x0357E5B4 CBZ W8, 0x357E5E4
	0x0357E5B8 ADRP X8, 0xB75000
	0x0357E5BC LDR X8, [X8 + 0x970]
	0x0357E5C0 LDR X0, [X8]
	0x0357E5C4 LDR W8, [X0 + 0xE0]
	0x0357E5C8 CBNZ W8, 0x357E5D0
	0x0357E5CC BL 0x1C16DFC
	0x0357E5D0 LDP X20, X19, [X31 + 0x10]
	0x0357E5D4 MOVZ W0, 0x1
	0x0357E5D8 MOV X1, X31
	0x0357E5DC LDP X30, X21, [X31], #0x20
	0x0357E5E0 B 0x3C0195C
	0x0357E5E4 LDP X20, X19, [X31 + 0x10]
	0x0357E5E8 LDP X30, X21, [X31], #0x20
	0x0357E5EC RET
	0x0357E5F0 BL 0x1C16F20
	0x0357E5F4 STR X30, [X31 - 0x30]!
	0x0357E5F8 STP X22, X21, [X31 + 0x10]
	0x0357E5FC STP X20, X19, [X31 + 0x20]
	0x0357E600 ADRP X21, 0xE61000
	0x0357E604 LDRB W8, [X21 + 0xEC7]
	0x0357E608 MOV X19, X1
	0x0357E60C MOV X20, X0
	0x0357E610 TBNZ X8, 0x0, 0x357E640
	0x0357E614 ADRP X0, 0xB75000
	0x0357E618 LDR X0, [X0 + 0x9C8]
	0x0357E61C BL 0x1C16CF4
	0x0357E620 ADRP X0, 0xB75000
	0x0357E624 LDR X0, [X0 + 0x598]
	0x0357E628 BL 0x1C16CF4
	0x0357E62C ADRP X0, 0xBB8000
	0x0357E630 LDR X0, [X0 + 0x558]
	0x0357E634 BL 0x1C16CF4
	0x0357E638 MOVZ W8, 0x1
	0x0357E63C STRB W8, [X21 + 0xEC7]
	0x0357E640 CBZ X19, 0x357E768
	0x0357E644 ADRP X22, 0xB75000
	0x0357E648 LDR X22, [X22 + 0x598]
	0x0357E64C MOV X0, X19
	0x0357E650 MOV X1, X31
	0x0357E654 BL 0x3C32ECC
	0x0357E658 BL 0x357F634
	0x0357E65C STR X0, [X20 + 0x10]
	0x0357E660 MOV X21, X0
	0x0357E664 LDR X0, [X22]
	0x0357E668 LDR W8, [X0 + 0xE0]
	0x0357E66C CBNZ W8, 0x357E674
	0x0357E670 BL 0x1C16DFC
	0x0357E674 MOV X0, X21
	0x0357E678 MOV X1, X31
	0x0357E67C MOV X2, X31
	0x0357E680 BL 0x3C3883C
	0x0357E684 TBZ X0, 0x0, 0x357E710
	0x0357E688 ADRP X8, 0xB75000
	0x0357E68C LDR X8, [X8 + 0x9C8]
	0x0357E690 LDR X21, [X20 + 0x18]
	0x0357E694 LDR X22, [X8]
	0x0357E698 LDR X8, [X22 + 0x38]
	0x0357E69C CBNZ X8, 0x357E6AC
	0x0357E6A0 MOV X0, X22
	0x0357E6A4 BL 0x1C5C6E0
	0x0357E6A8 LDR X8, [X22 + 0x38]
	0x0357E6AC LDR X0, [X8 + 0x10]
	0x0357E6B0 LDRB W8, [X0 + 0x135]
	0x0357E6B4 TBNZ X8, 0x0, 0x357E6BC
	0x0357E6B8 BL 0x1C5C684
	0x0357E6BC LDR W8, [X0 + 0xE0]
	0x0357E6C0 CBNZ W8, 0x357E6C8
	0x0357E6C4 BL 0x1C16DFC
	0x0357E6C8 LDR X8, [X22 + 0x38]
	0x0357E6CC LDR X0, [X8 + 0x10]
	0x0357E6D0 LDRB W8, [X0 + 0x135]
	0x0357E6D4 TBNZ X8, 0x0, 0x357E6DC
	0x0357E6D8 BL 0x1C5C684
	0x0357E6DC CBZ X21, 0x357E768
	0x0357E6E0 ADRP X9, 0xBB8000
	0x0357E6E4 LDR X8, [X0 + 0xB8]
	0x0357E6E8 LDR X9, [X9 + 0x558]
	0x0357E6EC MOVZ W1, 0x2
	0x0357E6F0 MOV X0, X21
	0x0357E6F4 LDR X3, [X8]
	0x0357E6F8 LDR X2, [X9]
	0x0357E6FC BL 0x357F95C
	0x0357E700 BL 0x357FA20
	0x0357E704 MOV X21, X0
	0x0357E708 STR X0, [X20 + 0x10]
	0x0357E70C B 0x357E714
	0x0357E710 LDR X21, [X20 + 0x10]
	0x0357E714 LDR X22, [X20 + 0x18]
	0x0357E718 MOV X0, X19
	0x0357E71C MOV X1, X31
	0x0357E720 BL 0x33BE520
	0x0357E724 CBZ X0, 0x357E768
	0x0357E728 LDR X8, [X0]
	0x0357E72C LDP X9, X1, [X8 + 0x1A8]
	0x0357E730 BLR X9
	0x0357E734 CBZ X22, 0x357E768
	0x0357E738 STP X21, X19, [X22 + 0x10]
	0x0357E73C STR X0, [X22 + 0x28]
	0x0357E740 LDR X20, [X20 + 0x18]
	0x0357E744 MOV X0, X19
	0x0357E748 MOV X1, X31
	0x0357E74C BL 0x3C389D4
	0x0357E750 CBZ X20, 0x357E768
	0x0357E754 STR X0, [X20 + 0x20]
	0x0357E758 LDP X20, X19, [X31 + 0x20]
	0x0357E75C LDP X22, X21, [X31 + 0x10]
	0x0357E760 LDR X30, [X31], #0x30
	0x0357E764 RET
	0x0357E768 BL 0x1C16F20
	0x0357E76C STR X30, [X31 - 0x10]!
	0x0357E770 LDR X8, [X0 + 0x48]
	0x0357E774 CBZ X8, 0x357E78C
	0x0357E778 LDR X0, [X8 + 0x188]
	0x0357E77C CBZ X0, 0x357E78C
	0x0357E780 MOV X1, X31
	0x0357E784 LDR X30, [X31], #0x10
	0x0357E788 B 0x356137C
	0x0357E78C BL 0x1C16F20
	0x0357E790 STP X30, X19, [X31 - 0x10]!
	0x0357E794 MOV X19, X0
	0x0357E798 LDR X8, [X19 + 0x48]
	0x0357E79C CBZ X8, 0x357E7C4
	0x0357E7A0 LDR X0, [X8 + 0x10]
	0x0357E7A4 CBZ X0, 0x357E7C4
	0x0357E7A8 LDR X8, [X0]
	0x0357E7AC LDR X9, [X8 + 0x218]
	0x0357E7B0 LDR X1, [X8 + 0x220]
	0x0357E7B4 BLR X9
	0x0357E7B8 TBNZ X0, 0x0, 0x357E798
	0x0357E7BC LDP X30, X19, [X31], #0x10
	0x0357E7C0 RET
	0x0357E7C4 BL 0x1C16F20
	0x0357E7C8 STR X30, [X31 - 0x20]!
	0x0357E7CC STP X20, X19, [X31 + 0x10]
	0x0357E7D0 MOV X19, X0
	0x0357E7D4 LDR X8, [X19 + 0x48]
	0x0357E7D8 CBZ X8, 0x357E83C
	0x0357E7DC LDR X0, [X8 + 0x10]
	0x0357E7E0 CBZ X0, 0x357E83C
	0x0357E7E4 LDR X8, [X0]
	0x0357E7E8 LDP X9, X1, [X8 + 0x1F8]
	0x0357E7EC BLR X9
	0x0357E7F0 TBNZ X0, 0x0, 0x357E7D4
	0x0357E7F4 LDR W8, [X19 + 0x5C]
	0x0357E7F8 CMP W8, 0x1
	0x0357E7FC B.LT 0x357E830
	0x0357E800 MOV X0, X31
	0x0357E804 BL 0x33C18F4
	0x0357E808 LDR W8, [X19 + 0x60]
	0x0357E80C SUB W8, W0, W8
	0x0357E810 CMP W8, 0x1
	0x0357E814 B.LT 0x357E830
	0x0357E818 MOV W20, W0
	0x0357E81C MOV X0, X19
	0x0357E820 BL 0x357E840
	0x0357E824 LDR W8, [X19 + 0x5C]
	0x0357E828 ADD W8, W8, W20
	0x0357E82C STR W8, [X19 + 0x60]
	0x0357E830 LDP X20, X19, [X31 + 0x10]
	0x0357E834 LDR X30, [X31], #0x20
	0x0357E838 RET
	0x0357E83C BL 0x1C16F20
	0x0357E840 STP X30, X19, [X31 - 0x10]!
	0x0357E844 MOV X19, X0
	0x0357E848 MOV X0, X31
	0x0357E84C BL 0x3C3C6C4
	0x0357E850 LDR X8, [X19 + 0x48]
	0x0357E854 CBZ X8, 0x357E8D8
	0x0357E858 LDR X8, [X8 + 0x188]
	0x0357E85C CBZ X8, 0x357E8D8
	0x0357E860 LDR V1, [X19 + 0x64]
	0x0357E864 LDR W9, [X8 + 0x38]
	0x0357E868 LDR W8, [X8 + 0x28]
	0x0357E86C FSUB S1, S0, S1
	0x0357E870 FCMP S1, 0x0
	0x0357E874 B.LE 0x357E8C8
	0x0357E878 LDP W11, W10, [X19 + 0x68]
	0x0357E87C SUB W12, W9, W10
	0x0357E880 SUB W11, W8, W11
	0x0357E884 ADD W10, W11, W12
	0x0357E888 CMP W10, 0x1
	0x0357E88C B.LT 0x357E8BC
	0x0357E890 SCVTF S3, W11
	0x0357E894 MOVZ W11, 0x42C80000
	0x0357E898 SCVTF S2, W12
	0x0357E89C FMOV S5, W11
	0x0357E8A0 SCVTF S4, W10
	0x0357E8A4 FDIV S2, S2, S1
	0x0357E8A8 FDIV S1, S3, S1
	0x0357E8AC FMUL S3, S3, S5
	0x0357E8B0 STP S2, S1, [X19 + 0xB8]
	0x0357E8B4 FDIV S1, S3, S4
	0x0357E8B8 B 0x357E8C4
	0x0357E8BC FMOV S1, W31
	0x0357E8C0 STR X31, [X19 + 0xB8]
	0x0357E8C4 STR S1, [X19 + 0xC0]
	0x0357E8C8 STP W8, W9, [X19 + 0x68]
	0x0357E8CC STR S0, [X19 + 0x64]
	0x0357E8D0 LDP X30, X19, [X31], #0x10
	0x0357E8D4 RET
	0x0357E8D8 BL 0x1C16F20
	0x0357E8DC STP X30, X19, [X31 - 0x10]!
	0x0357E8E0 ADRP X0, 0xB75000
	0x0357E8E4 LDR X0, [X0 + 0x7D0]
	0x0357E8E8 BL 0x1C16D08
	0x0357E8EC BL 0x1C16F10
	0x0357E8F0 MOV X19, X0
	0x0357E8F4 ADRP X0, 0xBB8000
	0x0357E8F8 LDR X0, [X0 + 0x560]
	0x0357E8FC BL 0x1C16D08
	0x0357E900 MOV X1, X0
	0x0357E904 MOV X0, X19
	0x0357E908 MOV X2, X31
	0x0357E90C BL 0x33B2C70
	0x0357E910 ADRP X0, 0xBB8000
	0x0357E914 LDR X0, [X0 + 0x568]
	0x0357E918 BL 0x1C16D08
	0x0357E91C MOV X1, X0
	0x0357E920 MOV X0, X19
	0x0357E924 BL 0x1C16DEC
	0x0357E928 MOV X1, X31
	0x0357E92C B 0x33BDD8C
	0x0357E930 SUB X31, X31, 0xD0
	0x0357E934 STR X30, [X31 + 0x70]
	0x0357E938 STP X28, X27, [X31 + 0x80]
	0x0357E93C STP X26, X25, [X31 + 0x90]
	0x0357E940 STP X24, X23, [X31 + 0xA0]
	0x0357E944 STP X22, X21, [X31 + 0xB0]
	0x0357E948 STP X20, X19, [X31 + 0xC0]
	0x0357E94C ADRP X23, 0xE61000
	0x0357E950 ADRP X26, 0xBB8000
	0x0357E954 LDRB W8, [X23 + 0xEBC]
	0x0357E958 LDR X26, [X26 + 0x570]
	0x0357E95C MOV X25, X5
	0x0357E960 MOV X19, X4
	0x0357E964 MOV W20, W3
	0x0357E968 MOV W22, W2
	0x0357E96C MOV W24, W1
	0x0357E970 MOV X21, X0
	0x0357E974 TBNZ X8, 0x0, 0x357EA40
	0x0357E978 ADRP X0, 0xB76000
	0x0357E97C LDR X0, [X0 + 0xE70]
	0x0357E980 BL 0x1C16CF4
	0x0357E984 ADRP X0, 0xB75000
	0x0357E988 LDR X0, [X0 + 0x970]
	0x0357E98C BL 0x1C16CF4
	0x0357E990 ADRP X0, 0xB76000
	0x0357E994 LDR X0, [X0 + 0x9D8]
	0x0357E998 BL 0x1C16CF4
	0x0357E99C ADRP X0, 0xB7A000
	0x0357E9A0 LDR X0, [X0 + 0x348]
	0x0357E9A4 BL 0x1C16CF4
	0x0357E9A8 ADRP X0, 0xB75000
	0x0357E9AC LDR X0, [X0 + 0x758]
	0x0357E9B0 BL 0x1C16CF4
	0x0357E9B4 ADRP X0, 0xBB8000
	0x0357E9B8 LDR X0, [X0 + 0x578]
	0x0357E9BC BL 0x1C16CF4
	0x0357E9C0 ADRP X0, 0xB75000
	0x0357E9C4 LDR X0, [X0 + 0x9D0]
	0x0357E9C8 BL 0x1C16CF4
	0x0357E9CC ADRP X0, 0xB75000
	0x0357E9D0 LDR X0, [X0 + 0x598]
	0x0357E9D4 BL 0x1C16CF4
	0x0357E9D8 ADRP X0, 0xBB8000
	0x0357E9DC LDR X0, [X0 + 0x580]
	0x0357E9E0 BL 0x1C16CF4
	0x0357E9E4 ADRP X0, 0xBB8000
	0x0357E9E8 LDR X0, [X0 + 0x588]
	0x0357E9EC BL 0x1C16CF4
	0x0357E9F0 ADRP X0, 0xBB8000
	0x0357E9F4 LDR X0, [X0 + 0x570]
	0x0357E9F8 BL 0x1C16CF4
	0x0357E9FC ADRP X0, 0xB7A000
	0x0357EA00 LDR X0, [X0 + 0x390]
	0x0357EA04 BL 0x1C16CF4
	0x0357EA08 ADRP X0, 0xBB8000
	0x0357EA0C LDR X0, [X0 + 0x590]
	0x0357EA10 BL 0x1C16CF4
	0x0357EA14 ADRP X0, 0xBB8000
	0x0357EA18 LDR X0, [X0 + 0x598]
	0x0357EA1C BL 0x1C16CF4
	0x0357EA20 ADRP X0, 0xBB8000
	0x0357EA24 LDR X0, [X0 + 0x5A0]
	0x0357EA28 BL 0x1C16CF4
	0x0357EA2C ADRP X0, 0xBB8000
	0x0357EA30 LDR X0, [X0 + 0x5A8]
	0x0357EA34 BL 0x1C16CF4
	0x0357EA38 MOVZ W8, 0x1
	0x0357EA3C STRB W8, [X23 + 0xEBC]
	0x0357EA40 LDR X0, [X26]
	0x0357EA44 BL 0x1C16F10
	0x0357EA48 MOV X1, X31
	0x0357EA4C MOV X23, X0
	0x0357EA50 BL 0x33BDD8C
	0x0357EA54 CBZ X23, 0x357EFD0
	0x0357EA58 STR X21, [X23 + 0x10]
	0x0357EA5C LDR W8, [X19]
	0x0357EA60 CMP W8, 0xB
	0x0357EA64 B.NE 0x357EB70
	0x0357EA68 ADRP X8, 0xBB8000
	0x0357EA6C LDP V2, V0, [X19 + 0x10]
	0x0357EA70 LDR V1, [X19]
	0x0357EA74 LDR X8, [X8 + 0x580]
	0x0357EA78 STP V2, V0, [X31 + 0x10]
	0x0357EA7C STR V1, [X31]
	0x0357EA80 LDR X0, [X8]
	0x0357EA84 BL 0x1C16F10
	0x0357EA88 ADD X1, X31, 0x0
	0x0357EA8C MOV W2, W22
	0x0357EA90 MOV W3, W20

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X19, 0xE62000
	012 Move X21, 0xBB9000
	013 Move W8, [X19+3771]
	014 Move X21, [X21+1200]
	015 Move W23, W2
	016 Move X22, X1
	017 Move X20, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {60}
	022 Move X0, 0xBB9000
	023 Move X0, [X0+1208]
	024 Call 0x1C17CF4
	025 Move X0, 0xB76000
	026 Move X0, [X0+2504]
	027 Call 0x1C17CF4
	028 Move X0, 0xBB9000
	029 Move X0, [X0+1216]
	030 Call 0x1C17CF4
	031 Move X0, 0xB7B000
	032 Move X0, [X0+840]
	033 Call 0x1C17CF4
	034 Move X0, 0xB76000
	035 Move X0, [X0+3448]
	036 Call 0x1C17CF4
	037 Move X0, 0xB76000
	038 Move X0, [X0+1432]
	039 Call 0x1C17CF4
	040 Move X0, 0xBB9000
	041 Move X0, [X0+1224]
	042 Call 0x1C17CF4
	043 Move X0, 0xBB9000
	044 Move X0, [X0+1200]
	045 Call 0x1C17CF4
	046 Move X0, 0xBB9000
	047 Move X0, [X0+1232]
	048 Call 0x1C17CF4
	049 Move X0, 0xBB9000
	050 Move X0, [X0+1240]
	051 Call 0x1C17CF4
	052 Move X0, 0xBB9000
	053 Move X0, [X0+1248]
	054 Call 0x1C17CF4
	055 Move X0, 0xBB9000
	056 Move X0, [X0+1256]
	057 Call 0x1C17CF4
	058 Move W8, 1
	059 Move [X19+3771], W8
	060 Move X0, [X21]
	061 Call 0x1C17F10
	062 Move X1, X31
	063 Move X19, X0
	064 Call Object..ctor, X0
	065 Compare X19, 0
	066 JumpIfEqual {465}
	067 Move X27, 0xB76000
	068 Move X27, [X27+1432]
	069 Move [X19+16], X20
	070 Move X21, [X20+112]
	071 Move X0, [X27]
	072 Move W8, [X0+224]
	073 Compare W8, 0
	074 JumpIfNotEqual {76}
	075 Call 0x1C17DFC
	076 Move X0, X21
	077 Move X1, X31
	078 Move X2, X31
	079 Call Object.op_Equality, X0, X1
	080 Move TEMP, X0
	081 And TEMP, TEMP, 1
	082 Compare TEMP, 1
	083 JumpIfNotEqual {139}
	084 Move X9, [X20+64]
	085 Compare X9, 0
	086 JumpIfEqual {465}
	087 Move X8, 0xB76000
	088 Move X8, [X8+2504]
	089 Move X19, [X9+24]
	090 Move X20, [X8]
	091 Move X8, [X20+56]
	092 Compare X8, 0
	093 JumpIfNotEqual {97}
	094 Move X0, X20
	095 Call 0x1C5D6E0
	096 Move X8, [X20+56]
	097 Move X0, [X8+16]
	098 Move W8, [X0+309]
	099 Move TEMP, X8
	100 And TEMP, TEMP, 1
	101 Compare TEMP, 1
	102 JumpIfEqual {104}
	103 Call 0x1C5D684
	104 Move W8, [X0+224]
	105 Compare W8, 0
	106 JumpIfNotEqual {108}
	107 Call 0x1C17DFC
	108 Move X8, [X20+56]
	109 Move X0, [X8+16]
	110 Move W8, [X0+309]
	111 Move TEMP, X8
	112 And TEMP, TEMP, 1
	113 Compare TEMP, 1
	114 JumpIfEqual {116}
	115 Call 0x1C5D684
	116 Compare X19, 0
	117 JumpIfEqual {465}
	118 Move X10, 0xB7B000
	119 Move X11, 0xBB9000
	120 Move X9, [X0+184]
	121 Move X10, [X10+840]
	122 Move X8, [X19]
	123 Move X11, [X11+1232]
	124 Move X20, [X9]
	125 Move X1, [X10]
	126 NotImplemented "Instruction LDRH not yet implemented."
	127 Move X21, [X11]
	128 Compare X9, 0
	129 JumpIfEqual {136}
	130 Move X10, [X8+176]
	131 Add X10, X10, 8
	132 NotImplemented "Instruction LDUR not yet implemented."
	133 NotImplemented "Instruction CMP not yet implemented."
	134 Subtract X9, X9, 1
	135 Add X10, X10, 16
	136 Move W2, 1
	137 Move X0, X19
	138 Call 0x1C5D788
	139 Move X0, [X27]
	140 Move X21, [X20+112]
	141 Move W8, [X0+224]
	142 Compare W8, 0
	143 JumpIfNotEqual {145}
	144 Call 0x1C17DFC
	145 Move X8, 0xB76000
	146 Move X8, [X8+3448]
	147 Move X0, X21
	148 Move X1, [X8]
	149 Call 0x222E35C, X0
	150 Move [X19+24], X0
	151 Compare X0, 0
	152 JumpIfEqual {465}
	153 Move X8, 0xBB9000
	154 Move X8, [X8+1216]
	155 Move W1, 1
	156 Move X2, [X8]
	157 Call 0x21E6F84, X0, X1
	158 Compare X0, 0
	159 JumpIfEqual {465}
	160 Move X8, [X0+24]
	161 Move X21, X0
	162 Compare X8, 0
	163 JumpIfEqual {220}
	164 NotImplemented "Instruction CMP not yet implemented."
	165 Move X9, [X20+64]
	166 Compare X9, 0
	167 JumpIfEqual {465}
	168 Move X8, 0xB76000
	169 Move X8, [X8+2504]
	170 Move X24, [X9+24]
	171 Move X25, [X8]
	172 Move X8, [X25+56]
	173 Compare X8, 0
	174 JumpIfNotEqual {178}
	175 Move X0, X25
	176 Call 0x1C5D6E0
	177 Move X8, [X25+56]
	178 Move X0, [X8+16]
	179 Move W8, [X0+309]
	180 Move TEMP, X8
	181 And TEMP, TEMP, 1
	182 Compare TEMP, 1
	183 JumpIfEqual {185}
	184 Call 0x1C5D684
	185 Move W8, [X0+224]
	186 Compare W8, 0
	187 JumpIfNotEqual {189}
	188 Call 0x1C17DFC
	189 Move X8, [X25+56]
	190 Move X0, [X8+16]
	191 Move W8, [X0+309]
	192 Move TEMP, X8
	193 And TEMP, TEMP, 1
	194 Compare TEMP, 1
	195 JumpIfEqual {197}
	196 Call 0x1C5D684
	197 Compare X24, 0
	198 JumpIfEqual {465}
	199 Move X10, 0xB7B000
	200 Move X11, 0xBB9000
	201 Move X9, [X0+184]
	202 Move X10, [X10+840]
	203 Move X8, [X24]
	204 Move X11, [X11+1240]
	205 Move X25, [X9]
	206 Move X1, [X10]
	207 NotImplemented "Instruction LDRH not yet implemented."
	208 Move X26, [X11]
	209 Compare X9, 0
	210 JumpIfEqual {217}
	211 Move X10, [X8+176]
	212 Add X10, X10, 8
	213 NotImplemented "Instruction LDUR not yet implemented."
	214 NotImplemented "Instruction CMP not yet implemented."
	215 Subtract X9, X9, 1
	216 Add X10, X10, 16
	217 Move W2, 1
	218 Move X0, X24
	219 Call 0x1C5D788
	220 Move X9, [X20+64]
	221 Compare X9, 0
	222 JumpIfEqual {465}
	223 Move X8, 0xB76000
	224 Move X8, [X8+2504]
	225 Move X20, [X9+24]
	226 Move X21, [X8]
	227 Move X8, [X21+56]
	228 Compare X8, 0
	229 JumpIfNotEqual {233}
	230 Move X0, X21
	231 Call 0x1C5D6E0
	232 Move X8, [X21+56]
	233 Move X0, [X8+16]
	234 Move W8, [X0+309]
	235 Move TEMP, X8
	236 And TEMP, TEMP, 1
	237 Compare TEMP, 1
	238 JumpIfEqual {240}
	239 Call 0x1C5D684
	240 Move W8, [X0+224]
	241 Compare W8, 0
	242 JumpIfNotEqual {244}
	243 Call 0x1C17DFC
	244 Move X8, [X21+56]
	245 Move X0, [X8+16]
	246 Move W8, [X0+309]
	247 Move TEMP, X8
	248 And TEMP, TEMP, 1
	249 Compare TEMP, 1
	250 JumpIfEqual {252}
	251 Call 0x1C5D684
	252 Compare X20, 0
	253 JumpIfEqual {465}
	254 Move X10, 0xB7B000
	255 Move X11, 0xBB9000
	256 Move X9, [X0+184]
	257 Move X10, [X10+840]
	258 Move X8, [X20]
	259 Move X11, [X11+1248]
	260 Move X21, [X9]
	261 Move X1, [X10]
	262 NotImplemented "Instruction LDRH not yet implemented."
	263 Move X22, [X11]
	264 Compare X9, 0
	265 JumpIfEqual {272}
	266 Move X10, [X8+176]
	267 Add X10, X10, 8
	268 NotImplemented "Instruction LDUR not yet implemented."
	269 NotImplemented "Instruction CMP not yet implemented."
	270 Subtract X9, X9, 1
	271 Add X10, X10, 16
	272 Move W2, 1
	273 Move X0, X20
	274 Call 0x1C5D788
	275 Move W9, [X10]
	276 Add W9, W9, 1
	277 Add X8, X8, W9
	278 Add X0, X8, 312
	279 Move X8, [X0]
	280 Move X4, [X0+8]
	281 Move W1, 1
	282 Move X0, X19
	283 Move X2, X21
	284 Move X3, X20
	285 NotImplemented "Instruction BLR not yet implemented."
	286 Move W9, [X10]
	287 Add W9, W9, 1
	288 Add X8, X8, W9
	289 Add X0, X8, 312
	290 Move X8, [X0]
	291 Move X4, [X0+8]
	292 Move W1, 1
	293 Move X0, X20
	294 Move X2, X22
	295 Move X3, X21
	296 NotImplemented "Instruction BLR not yet implemented."
	297 Move X0, [X27]
	298 Move X19, [X19+24]
	299 Move W8, [X0+224]
	300 Compare W8, 0
	301 JumpIfNotEqual {303}
	302 Call 0x1C17DFC
	303 Move X0, X19
	304 Move X1, X31
	305 Call Object.Destroy, X0
	306 Move X0, X31
	307 Move W9, [X10]
	308 Add W9, W9, 1
	309 Add X8, X8, W9
	310 Add X0, X8, 312
	311 Move X8, [X0]
	312 Move X4, [X0+8]
	313 Move W1, 2
	314 Move X0, X24
	315 Move X2, X26
	316 Move X3, X25
	317 NotImplemented "Instruction BLR not yet implemented."
	318 Move TEMP, X23
	319 And TEMP, TEMP, 1
	320 Compare TEMP, 1
	321 JumpIfNotEqual {353}
	322 Move W8, [X21+24]
	323 Compare W8, 0
	324 JumpIfEqual {466}
	325 Move X25, [X21+32]
	326 Compare X25, 0
	327 JumpIfEqual {465}
	328 Move X26, 0xBB9000
	329 Move X23, [X25+72]
	330 Move X26, [X26+1208]
	331 Move X0, [X26]
	332 Call 0x1C17F10
	333 Move X8, 0xBB9000
	334 Move X8, [X8+1224]
	335 Move X1, X19
	336 Move X3, X31
	337 Move X24, X0
	338 Move X2, [X8]
	339 Call Action`1<Object>..ctor, X0, X1, X2
	340 Move X0, X23
	341 Move X1, X24
	342 Move X2, X31
	343 Call Delegate.Combine, X0, X1
	344 Compare X0, 0
	345 JumpIfEqual {352}
	346 Move X24, [X26]
	347 Move X23, X0
	348 Move X1, X24
	349 Call 0x1C17E00
	350 Compare X0, 0
	351 JumpIfEqual {467}
	352 Move [X25+72], X0
	353 Move X0, [X27]
	354 Move W8, [X0+224]
	355 Compare W8, 0
	356 JumpIfNotEqual {358}
	357 Call 0x1C17DFC
	358 Move X0, X22
	359 Move X1, X31
	360 Move X2, X31
	361 Call Object.op_Inequality, X0, X1
	362 Move TEMP, X0
	363 And TEMP, TEMP, 1
	364 Compare TEMP, 1
	365 JumpIfNotEqual {384}
	366 Move X0, [X19+24]
	367 Compare X0, 0
	368 JumpIfEqual {465}
	369 Move X1, X31
	370 Call GameObject.get_transform, X0
	371 Compare X22, 0
	372 JumpIfEqual {465}
	373 Move X19, X0
	374 Move X0, X22
	375 Move X1, X31
	376 Call GameObject.get_transform, X0
	377 Compare X19, 0
	378 JumpIfEqual {465}
	379 Move X1, X0
	380 Move X0, X19
	381 Move W2, W31
	382 Move X3, X31
	383 Call Transform.SetParent, X0, X1, X2
	384 Move X9, [X20+64]
	385 Compare X9, 0
	386 JumpIfEqual {465}
	387 Move X8, 0xB76000
	388 Move X8, [X8+2504]
	389 Move X19, [X9+24]
	390 Move X20, [X8]
	391 Move X8, [X20+56]
	392 Compare X8, 0
	393 JumpIfNotEqual {397}
	394 Move X0, X20
	395 Call 0x1C5D6E0
	396 Move X8, [X20+56]
	397 Move X0, [X8+16]
	398 Move W8, [X0+309]
	399 Move TEMP, X8
	400 And TEMP, TEMP, 1
	401 Compare TEMP, 1
	402 JumpIfEqual {404}
	403 Call 0x1C5D684
	404 Move W8, [X0+224]
	405 Compare W8, 0
	406 JumpIfNotEqual {408}
	407 Call 0x1C17DFC
	408 Move X8, [X20+56]
	409 Move X0, [X8+16]
	410 Move W8, [X0+309]
	411 Move TEMP, X8
	412 And TEMP, TEMP, 1
	413 Compare TEMP, 1
	414 JumpIfEqual {416}
	415 Call 0x1C5D684
	416 Compare X19, 0
	417 JumpIfEqual {465}
	418 Move X10, 0xB7B000
	419 Move X11, 0xBB9000
	420 Move X9, [X0+184]
	421 Move X10, [X10+840]
	422 Move X8, [X19]
	423 Move X11, [X11+1256]
	424 Move X20, [X9]
	425 Move X1, [X10]
	426 NotImplemented "Instruction LDRH not yet implemented."
	427 Move X22, [X11]
	428 Compare X9, 0
	429 JumpIfEqual {436}
	430 Move X10, [X8+176]
	431 Add X10, X10, 8
	432 NotImplemented "Instruction LDUR not yet implemented."
	433 NotImplemented "Instruction CMP not yet implemented."
	434 Subtract X9, X9, 1
	435 Add X10, X10, 16
	436 Move W2, 1
	437 Move X0, X19
	438 Call 0x1C5D788
	439 Move W9, [X10]
	440 Add W9, W9, 1
	441 Add X8, X8, W9
	442 Add X0, X8, 312
	443 Move X8, [X0]
	444 Move X4, [X0+8]
	445 Move W1, 3
	446 Move X0, X19
	447 Move X2, X22
	448 Move X3, X20
	449 NotImplemented "Instruction BLR not yet implemented."
	450 Move W8, [X21+24]
	451 Compare W8, 0
	452 JumpIfEqual {466}
	453 Move X0, [X21+32]
	454 Move X20, [X31+64]
	455 Move X19, [X31+72]
	456 Move X22, [X31+48]
	457 Move X21, [X31+56]
	458 Move X24, [X31+32]
	459 Move X23, [X31+40]
	460 Move X26, [X31+16]
	461 Move X25, [X31+24]
	462 Move X30, [X31+80]
	463 Move X27, [X31+88]
	464 Return X0
	465 Call 0x1C17F20
	466 Call 0x1C17F28
	467 Move X0, X23
	468 Move X1, X24
	469 Call 0x1C181E0

Method: System.Void OnRemoteVoiceInfo(System.Int32 channelId, System.Int32 playerId, System.Byte voiceId, Photon.Voice.VoiceInfo voiceInfo, ref Photon.Voice.RemoteVoiceOptions options)

Disassembly:
	0x0357F930 MOV X19, X31
	0x0357F934 MOV X0, X19
	0x0357F938 LDP X20, X19, [X31 + 0x50]
	0x0357F93C LDP X22, X21, [X31 + 0x40]
	0x0357F940 LDP X24, X23, [X31 + 0x30]
	0x0357F944 LDP X26, X25, [X31 + 0x20]
	0x0357F948 LDP X28, X27, [X31 + 0x10]
	0x0357F94C LDR X30, [X31], #0x60
	0x0357F950 RET
	0x0357F954 BL 0x1C16F20
	0x0357F958 BL 0x1C16F28
	0x0357F95C STR X30, [X31 - 0x40]!
	0x0357F960 STP X24, X23, [X31 + 0x10]
	0x0357F964 STP X22, X21, [X31 + 0x20]
	0x0357F968 STP X20, X19, [X31 + 0x30]
	0x0357F96C ADRP X24, 0xE60000
	0x0357F970 ADRP X23, 0xB74000
	0x0357F974 LDRB W8, [X24 + 0xEC9]
	0x0357F978 LDR X23, [X23 + 0x598]
	0x0357F97C MOV X19, X3
	0x0357F980 MOV X20, X2
	0x0357F984 MOV W21, W1
	0x0357F988 MOV X22, X0
	0x0357F98C TBNZ X8, 0x0, 0x357F9A4
	0x0357F990 ADRP X0, 0xB74000
	0x0357F994 LDR X0, [X0 + 0x598]
	0x0357F998 BL 0x1C16CF4
	0x0357F99C MOVZ W8, 0x1
	0x0357F9A0 STRB W8, [X24 + 0xEC9]
	0x0357F9A4 LDR X0, [X23]
	0x0357F9A8 LDR X23, [X22 + 0x10]
	0x0357F9AC LDR W8, [X0 + 0xE0]
	0x0357F9B0 CBNZ W8, 0x357F9B8
	0x0357F9B4 BL 0x1C16DFC
	0x0357F9B8 MOV X0, X23
	0x0357F9BC MOV X1, X31
	0x0357F9C0 MOV X2, X31
	0x0357F9C4 BL 0x3C354F8
	0x0357F9C8 TBZ X0, 0x0, 0x357F9F4
	0x0357F9CC LDR X8, [X22 + 0x10]
	0x0357F9D0 CBZ X8, 0x357FA1C
	0x0357F9D4 LDR W8, [X8 + 0x20]
	0x0357F9D8 CMP W8, W21
	0x0357F9DC B.GE 0x357F9F4
	0x0357F9E0 LDP X20, X19, [X31 + 0x30]
	0x0357F9E4 LDP X22, X21, [X31 + 0x20]
	0x0357F9E8 LDP X24, X23, [X31 + 0x10]
	0x0357F9EC LDR X30, [X31], #0x40
	0x0357F9F0 RET
	0x0357F9F4 LDP X3, X2, [X22 + 0x20]
	0x0357F9F8 LDR X1, [X22 + 0x18]
	0x0357F9FC MOV W0, W21
	0x0357FA00 MOV X4, X20
	0x0357FA04 MOV X5, X19
	0x0357FA08 LDP X20, X19, [X31 + 0x30]
	0x0357FA0C LDP X22, X21, [X31 + 0x20]
	0x0357FA10 LDP X24, X23, [X31 + 0x10]
	0x0357FA14 LDR X30, [X31], #0x40
	0x0357FA18 B 0x357FB20
	0x0357FA1C BL 0x1C16F20
	0x0357FA20 STP X30, X21, [X31 - 0x20]!
	0x0357FA24 STP X20, X19, [X31 + 0x10]
	0x0357FA28 ADRP X20, 0xE60000
	0x0357FA2C ADRP X21, 0xB74000
	0x0357FA30 ADRP X19, 0xBB7000
	0x0357FA34 LDRB W8, [X20 + 0xECC]
	0x0357FA38 LDR X21, [X21 + 0xA58]
	0x0357FA3C LDR X19, [X19 + 0x5F8]
	0x0357FA40 TBNZ X8, 0x0, 0x357FA70
	0x0357FA44 ADRP X0, 0xBB7000
	0x0357FA48 LDR X0, [X0 + 0x600]
	0x0357FA4C BL 0x1C16CF4
	0x0357FA50 ADRP X0, 0xB74000
	0x0357FA54 LDR X0, [X0 + 0xA58]
	0x0357FA58 BL 0x1C16CF4
	0x0357FA5C ADRP X0, 0xBB7000
	0x0357FA60 LDR X0, [X0 + 0x5F8]
	0x0357FA64 BL 0x1C16CF4
	0x0357FA68 MOVZ W8, 0x1
	0x0357FA6C STRB W8, [X20 + 0xECC]
	0x0357FA70 LDR X0, [X21]
	0x0357FA74 BL 0x1C16F10
	0x0357FA78 LDR X1, [X19]
	0x0357FA7C MOV X2, X31
	0x0357FA80 MOV X19, X0
	0x0357FA84 BL 0x3C35934
	0x0357FA88 CBZ X19, 0x357FAA8
	0x0357FA8C ADRP X8, 0xBB7000
	0x0357FA90 LDR X8, [X8 + 0x600]
	0x0357FA94 MOV X0, X19
	0x0357FA98 LDP X20, X19, [X31 + 0x10]
	0x0357FA9C LDR X1, [X8]
	0x0357FAA0 LDP X30, X21, [X31], #0x20
	0x0357FAA4 B 0x21E51FC
	0x0357FAA8 BL 0x1C16F20
	0x0357FAAC STP X1, X2, [X0 + 0x10]
	0x0357FAB0 STR X3, [X0 + 0x28]
	0x0357FAB4 RET
	0x0357FAB8 STP X30, X21, [X31 - 0x20]!
	0x0357FABC STP X20, X19, [X31 + 0x10]
	0x0357FAC0 ADRP X20, 0xE60000
	0x0357FAC4 ADRP X21, 0xBB7000
	0x0357FAC8 LDRB W8, [X20 + 0xECA]
	0x0357FACC LDR X21, [X21 + 0x608]
	0x0357FAD0 MOV X19, X0
	0x0357FAD4 TBNZ X8, 0x0, 0x357FAEC
	0x0357FAD8 ADRP X0, 0xBB7000
	0x0357FADC LDR X0, [X0 + 0x608]
	0x0357FAE0 BL 0x1C16CF4
	0x0357FAE4 MOVZ W8, 0x1
	0x0357FAE8 STRB W8, [X20 + 0xECA]
	0x0357FAEC LDR X8, [X21]
	0x0357FAF0 MOV X0, X19
	0x0357FAF4 MOV X1, X31
	0x0357FAF8 STR X8, [X19 + 0x28]
	0x0357FAFC LDP X20, X19, [X31 + 0x10]
	0x0357FB00 LDP X30, X21, [X31], #0x20
	0x0357FB04 B 0x33BDD8C
	0x0357FB08 STR X1, [X0 + 0x20]
	0x0357FB0C RET
	0x0357FB10 LDR W0, [X0 + 0x30]
	0x0357FB14 RET
	0x0357FB18 STR W1, [X0 + 0x30]
	0x0357FB1C RET
	0x0357FB20 STR X30, [X31 - 0x50]!
	0x0357FB24 STP X26, X25, [X31 + 0x10]
	0x0357FB28 STP X24, X23, [X31 + 0x20]
	0x0357FB2C STP X22, X21, [X31 + 0x30]
	0x0357FB30 STP X20, X19, [X31 + 0x40]
	0x0357FB34 ADRP X26, 0xE60000
	0x0357FB38 ADRP X25, 0xB74000
	0x0357FB3C LDRB W8, [X26 + 0xECD]
	0x0357FB40 LDR X25, [X25 + 0x598]
	0x0357FB44 MOV X19, X5
	0x0357FB48 MOV X20, X4
	0x0357FB4C MOV X23, X3
	0x0357FB50 MOV X24, X2
	0x0357FB54 MOV X21, X1
	0x0357FB58 MOV W22, W0
	0x0357FB5C TBNZ X8, 0x0, 0x357FB80
	0x0357FB60 ADRP X0, 0xB74000
	0x0357FB64 LDR X0, [X0 + 0xA28]
	0x0357FB68 BL 0x1C16CF4
	0x0357FB6C ADRP X0, 0xB74000
	0x0357FB70 LDR X0, [X0 + 0x598]
	0x0357FB74 BL 0x1C16CF4
	0x0357FB78 MOVZ W8, 0x1
	0x0357FB7C STRB W8, [X26 + 0xECD]
	0x0357FB80 MOV W0, W22
	0x0357FB84 MOV X1, X24
	0x0357FB88 MOV X2, X23
	0x0357FB8C MOV X3, X20
	0x0357FB90 BL 0x357FD08
	0x0357FB94 LDR X8, [X25]
	0x0357FB98 MOV X20, X0
	0x0357FB9C LDR W9, [X8 + 0xE0]
	0x0357FBA0 CBNZ W9, 0x357FBAC
	0x0357FBA4 MOV X0, X8
	0x0357FBA8 BL 0x1C16DFC
	0x0357FBAC MOV X0, X21
	0x0357FBB0 MOV X1, X31
	0x0357FBB4 MOV X2, X31
	0x0357FBB8 BL 0x3C3883C
	0x0357FBBC ADRP X8, 0xB74000
	0x0357FBC0 LDR X8, [X8 + 0xA28]
	0x0357FBC4 CMP W22, 0x1
	0x0357FBC8 TBZ X0, 0x0, 0x357FC04
	0x0357FBCC B.NE 0x357FC40
	0x0357FBD0 LDR X0, [X8]
	0x0357FBD4 LDR W8, [X0 + 0xE0]
	0x0357FBD8 CBNZ W8, 0x357FBE0
	0x0357FBDC BL 0x1C16DFC
	0x0357FBE0 MOV X0, X20
	0x0357FBE4 MOV X1, X19
	0x0357FBE8 LDP X20, X19, [X31 + 0x40]
	0x0357FBEC LDP X22, X21, [X31 + 0x30]
	0x0357FBF0 LDP X24, X23, [X31 + 0x20]
	0x0357FBF4 LDP X26, X25, [X31 + 0x10]
	0x0357FBF8 MOV X2, X31
	0x0357FBFC LDR X30, [X31], #0x50
	0x0357FC00 B 0x3C066BC
	0x0357FC04 B.NE 0x357FC7C
	0x0357FC08 LDR X0, [X8]
	0x0357FC0C LDR W8, [X0 + 0xE0]
	0x0357FC10 CBNZ W8, 0x357FC18
	0x0357FC14 BL 0x1C16DFC
	0x0357FC18 MOV X0, X21
	0x0357FC1C MOV X1, X20
	0x0357FC20 MOV X2, X19
	0x0357FC24 LDP X20, X19, [X31 + 0x40]
	0x0357FC28 LDP X22, X21, [X31 + 0x30]
	0x0357FC2C LDP X24, X23, [X31 + 0x20]
	0x0357FC30 LDP X26, X25, [X31 + 0x10]
	0x0357FC34 MOV X3, X31
	0x0357FC38 LDR X30, [X31], #0x50
	0x0357FC3C B 0x3C067D4
	0x0357FC40 LDR X0, [X8]
	0x0357FC44 LDR W8, [X0 + 0xE0]
	0x0357FC48 CBNZ W8, 0x357FC50
	0x0357FC4C BL 0x1C16DFC
	0x0357FC50 MOV X0, X20
	0x0357FC54 MOV X1, X19
	0x0357FC58 CMP W22, 0x2
	0x0357FC5C B.NE 0x357FCBC
	0x0357FC60 LDP X20, X19, [X31 + 0x40]
	0x0357FC64 LDP X22, X21, [X31 + 0x30]
	0x0357FC68 LDP X24, X23, [X31 + 0x20]
	0x0357FC6C LDP X26, X25, [X31 + 0x10]
	0x0357FC70 MOV X2, X31
	0x0357FC74 LDR X30, [X31], #0x50
	0x0357FC78 B 0x3C06C24
	0x0357FC7C LDR X0, [X8]
	0x0357FC80 LDR W8, [X0 + 0xE0]
	0x0357FC84 CBNZ W8, 0x357FC8C
	0x0357FC88 BL 0x1C16DFC
	0x0357FC8C MOV X0, X21
	0x0357FC90 MOV X1, X20
	0x0357FC94 MOV X2, X19
	0x0357FC98 CMP W22, 0x2
	0x0357FC9C B.NE 0x357FCD8
	0x0357FCA0 LDP X20, X19, [X31 + 0x40]
	0x0357FCA4 LDP X22, X21, [X31 + 0x30]
	0x0357FCA8 LDP X24, X23, [X31 + 0x20]
	0x0357FCAC LDP X26, X25, [X31 + 0x10]
	0x0357FCB0 MOV X3, X31
	0x0357FCB4 LDR X30, [X31], #0x50
	0x0357FCB8 B 0x3C06D3C
	0x0357FCBC LDP X20, X19, [X31 + 0x40]
	0x0357FCC0 LDP X22, X21, [X31 + 0x30]
	0x0357FCC4 LDP X24, X23, [X31 + 0x20]
	0x0357FCC8 LDP X26, X25, [X31 + 0x10]
	0x0357FCCC MOV X2, X31
	0x0357FCD0 LDR X30, [X31], #0x50
	0x0357FCD4 B 0x3C06268
	0x0357FCD8 LDP X20, X19, [X31 + 0x40]
	0x0357FCDC LDP X22, X21, [X31 + 0x30]
	0x0357FCE0 LDP X24, X23, [X31 + 0x20]
	0x0357FCE4 LDP X26, X25, [X31 + 0x10]
	0x0357FCE8 MOV X3, X31
	0x0357FCEC LDR X30, [X31], #0x50
	0x0357FCF0 B 0x3C06380
	0x0357FCF4 RET
	0x0357FCF8 MOVZ W8, 0x2
	0x0357FCFC MOV X1, X31
	0x0357FD00 STR W8, [X0 + 0x20]
	0x0357FD04 B 0x3C36C30
	0x0357FD08 STR X30, [X31 - 0x40]!
	0x0357FD0C STP X24, X23, [X31 + 0x10]
	0x0357FD10 STP X22, X21, [X31 + 0x20]
	0x0357FD14 STP X20, X19, [X31 + 0x30]
	0x0357FD18 ADRP X21, 0xE60000
	0x0357FD1C ADRP X24, 0xB74000
	0x0357FD20 LDRB W8, [X21 + 0xECE]
	0x0357FD24 LDR X24, [X24 + 0x9D0]
	0x0357FD28 MOV X19, X3
	0x0357FD2C MOV X20, X2
	0x0357FD30 MOV X22, X1
	0x0357FD34 MOV W23, W0
	0x0357FD38 TBNZ X8, 0x0, 0x357FD68
	0x0357FD3C ADRP X0, 0xBB7000
	0x0357FD40 LDR X0, [X0 + 0x610]
	0x0357FD44 BL 0x1C16CF4
	0x0357FD48 ADRP X0, 0xB74000
	0x0357FD4C LDR X0, [X0 + 0x9D0]
	0x0357FD50 BL 0x1C16CF4
	0x0357FD54 ADRP X0, 0xBB7000
	0x0357FD58 LDR X0, [X0 + 0x618]
	0x0357FD5C BL 0x1C16CF4
	0x0357FD60 MOVZ W8, 0x1
	0x0357FD64 STRB W8, [X21 + 0xECE]
	0x0357FD68 LDR X0, [X24]
	0x0357FD6C MOVZ W1, 0x5
	0x0357FD70 BL 0x1C16D6C
	0x0357FD74 MOV X21, X0
	0x0357FD78 BL 0x357FEA4
	0x0357FD7C CBZ X21, 0x357FEA0
	0x0357FD80 MOV X24, X0
	0x0357FD84 CBZ X0, 0x357FD9C
	0x0357FD88 LDR X8, [X21]
	0x0357FD8C MOV X0, X24
	0x0357FD90 LDR X1, [X8 + 0x40]
	0x0357FD94 BL 0x1C16E00
	0x0357FD98 CBZ X0, 0x357FE94
	0x0357FD9C LDR W8, [X21 + 0x18]
	0x0357FDA0 CBZ W8, 0x357FE90
	0x0357FDA4 ADRP X8, 0xBB7000
	0x0357FDA8 LDR X8, [X8 + 0x610]
	0x0357FDAC STR X24, [X21 + 0x20]
	0x0357FDB0 ADD X1, X31, 0xC
	0x0357FDB4 STR W23, [X31 + 0xC]
	0x0357FDB8 LDR X0, [X8]
	0x0357FDBC BL 0x1C16E04
	0x0357FDC0 MOV X23, X0
	0x0357FDC4 CBZ X0, 0x357FDDC
	0x0357FDC8 LDR X8, [X21]
	0x0357FDCC MOV X0, X23
	0x0357FDD0 LDR X1, [X8 + 0x40]
	0x0357FDD4 BL 0x1C16E00
	0x0357FDD8 CBZ X0, 0x357FE94
	0x0357FDDC LDR W8, [X21 + 0x18]
	0x0357FDE0 CMP W8, 0x1
	0x0357FDE4 B.LS 0x357FE90
	0x0357FDE8 STR X23, [X21 + 0x28]
	0x0357FDEC CBZ X22, 0x357FE08
	0x0357FDF0 LDR X8, [X21]
	0x0357FDF4 MOV X0, X22
	0x0357FDF8 LDR X1, [X8 + 0x40]
	0x0357FDFC BL 0x1C16E00
	0x0357FE00 CBZ X0, 0x357FE94
	0x0357FE04 LDR W8, [X21 + 0x18]
	0x0357FE08 CMP W8, 0x2
	0x0357FE0C B.LS 0x357FE90
	0x0357FE10 STR X22, [X21 + 0x30]
	0x0357FE14 CBZ X20, 0x357FE30
	0x0357FE18 LDR X8, [X21]
	0x0357FE1C MOV X0, X20
	0x0357FE20 LDR X1, [X8 + 0x40]
	0x0357FE24 BL 0x1C16E00
	0x0357FE28 CBZ X0, 0x357FE94
	0x0357FE2C LDR W8, [X21 + 0x18]
	0x0357FE30 CMP W8, 0x3
	0x0357FE34 B.LS 0x357FE90
	0x0357FE38 STR X20, [X21 + 0x38]
	0x0357FE3C CBZ X19, 0x357FE58
	0x0357FE40 LDR X8, [X21]
	0x0357FE44 MOV X0, X19
	0x0357FE48 LDR X1, [X8 + 0x40]
	0x0357FE4C BL 0x1C16E00
	0x0357FE50 CBZ X0, 0x357FE94
	0x0357FE54 LDR W8, [X21 + 0x18]
	0x0357FE58 CMP W8, 0x4
	0x0357FE5C B.LS 0x357FE90
	0x0357FE60 ADRP X8, 0xBB7000
	0x0357FE64 LDR X8, [X8 + 0x618]
	0x0357FE68 STR X19, [X21 + 0x40]
	0x0357FE6C MOV X1, X21
	0x0357FE70 MOV X2, X31
	0x0357FE74 LDR X0, [X8]
	0x0357FE78 BL 0x3227C5C
	0x0357FE7C LDP X20, X19, [X31 + 0x30]
	0x0357FE80 LDP X22, X21, [X31 + 0x20]
	0x0357FE84 LDP X24, X23, [X31 + 0x10]
	0x0357FE88 LDR X30, [X31], #0x40
	0x0357FE8C RET
	0x0357FE90 BL 0x1C16F28
	0x0357FE94 BL 0x1C16F44
	0x0357FE98 MOV X1, X31
	0x0357FE9C BL 0x1C16DEC
	0x0357FEA0 BL 0x1C16F20
	0x0357FEA4 SUB X31, X31, 0x30
	0x0357FEA8 STP X30, X21, [X31 + 0x10]
	0x0357FEAC STP X20, X19, [X31 + 0x20]
	0x0357FEB0 ADRP X20, 0xE60000
	0x0357FEB4 ADRP X19, 0xB75000
	0x0357FEB8 LDRB W8, [X20 + 0xECF]
	0x0357FEBC LDR X19, [X19 + 0x9F0]
	0x0357FEC0 TBNZ X8, 0x0, 0x357FEFC
	0x0357FEC4 ADRP X0, 0xB76000
	0x0357FEC8 LDR X0, [X0 + 0xC48]
	0x0357FECC BL 0x1C16CF4
	0x0357FED0 ADRP X0, 0xB75000
	0x0357FED4 LDR X0, [X0 + 0x9F0]
	0x0357FED8 BL 0x1C16CF4
	0x0357FEDC ADRP X0, 0xB87000
	0x0357FEE0 LDR X0, [X0 + 0xA28]
	0x0357FEE4 BL 0x1C16CF4
	0x0357FEE8 ADRP X0, 0xBA9000
	0x0357FEEC LDR X0, [X0 + 0x368]
	0x0357FEF0 BL 0x1C16CF4
	0x0357FEF4 MOVZ W8, 0x1
	0x0357FEF8 STRB W8, [X20 + 0xECF]
	0x0357FEFC LDR X0, [X19]
	0x0357FF00 ADRP X21, 0xB76000
	0x0357FF04 ADRP X19, 0xB87000
	0x0357FF08 ADRP X20, 0xBA9000
	0x0357FF0C LDR W8, [X0 + 0xE0]
	0x0357FF10 LDR X21, [X21 + 0xC48]
	0x0357FF14 LDR X19, [X19 + 0xA28]
	0x0357FF18 LDR X20, [X20 + 0x368]
	0x0357FF1C CBNZ W8, 0x357FF24
	0x0357FF20 BL 0x1C16DFC
	0x0357FF24 MOV X0, X31
	0x0357FF28 BL 0x33616A4
	0x0357FF2C LDR X8, [X21]
	0x0357FF30 STR X0, [X31 + 0x8]
	0x0357FF34 MOV X0, X8
	0x0357FF38 BL 0x1C16F10
	0x0357FF3C LDR X1, [X19]
	0x0357FF40 MOV X2, X31
	0x0357FF44 MOV X19, X0
	0x0357FF48 BL 0x3339E6C
	0x0357FF4C LDR X1, [X20]
	0x0357FF50 ADD X0, X31, 0x8
	0x0357FF54 MOV X2, X19
	0x0357FF58 MOV X3, X31
	0x0357FF5C BL 0x3362380
	0x0357FF60 LDP X20, X19, [X31 + 0x20]
	0x0357FF64 LDP X30, X21, [X31 + 0x10]
	0x0357FF68 ADD X31, X31, 0x30
	0x0357FF6C RET
	0x0357FF70 LDRB W0, [X0 + 0x28]
	0x0357FF74 RET
	0x0357FF78 STR X30, [X31 - 0x20]!
	0x0357FF7C STP X20, X19, [X31 + 0x10]
	0x0357FF80 ADRP X20, 0xE60000
	0x0357FF84 LDRB W8, [X20 + 0xEDA]
	0x0357FF88 MOV X19, X0
	0x0357FF8C TBNZ X8, 0x0, 0x357FFA4
	0x0357FF90 ADRP X0, 0xB74000
	0x0357FF94 LDR X0, [X0 + 0x970]
	0x0357FF98 BL 0x1C16CF4
	0x0357FF9C MOVZ W8, 0x1
	0x0357FFA0 STRB W8, [X20 + 0xEDA]
	0x0357FFA4 LDR X0, [X19 + 0x40]
	0x0357FFA8 CBZ X0, 0x357FFEC
	0x0357FFAC LDRB W1, [X19 + 0x28]
	0x0357FFB0 MOV X2, X31
	0x0357FFB4 BL 0x35680B4
	0x0357FFB8 LDRB W8, [X19 + 0x28]
	0x0357FFBC LDR X20, [X19 + 0x40]
	0x0357FFC0 CBZ W8, 0x357FFF8
	0x0357FFC4 ADRP X8, 0xB74000
	0x0357FFC8 LDR X8, [X8 + 0x970]
	0x0357FFCC LDR X0, [X8]
	0x0357FFD0 LDR W8, [X0 + 0xE0]
	0x0357FFD4 CBNZ W8, 0x357FFDC
	0x0357FFD8 BL 0x1C16DFC
	0x0357FFDC MOV X0, X31
	0x0357FFE0 BL 0x3C01AD8

ISIL:
	001 Subtract X31, X31, 208
	002 Move [X31+112], X30
	003 Move [X31+128], X28
	004 Move [X31+136], X27
	005 Move [X31+144], X26
	006 Move [X31+152], X25
	007 Move [X31+160], X24
	008 Move [X31+168], X23
	009 Move [X31+176], X22
	010 Move [X31+184], X21
	011 Move [X31+192], X20
	012 Move [X31+200], X19
	013 Move X23, 0xE61000
	014 Move X26, 0xBB8000
	015 Move W8, [X23+3772]
	016 Move X26, [X26+1392]
	017 Move X25, X5
	018 Move X19, X4
	019 Move W20, W3
	020 Move W22, W2
	021 Move W24, W1
	022 Move X21, X0
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {77}
	027 Move X0, 0xB76000
	028 Move X0, [X0+3696]
	029 Call 0x1C17CF4
	030 Move X0, 0xB75000
	031 Move X0, [X0+2416]
	032 Call 0x1C17CF4
	033 Move X0, 0xB76000
	034 Move X0, [X0+2520]
	035 Call 0x1C17CF4
	036 Move X0, 0xB7A000
	037 Move X0, [X0+840]
	038 Call 0x1C17CF4
	039 Move X0, 0xB75000
	040 Move X0, [X0+1880]
	041 Call 0x1C17CF4
	042 Move X0, 0xBB8000
	043 Move X0, [X0+1400]
	044 Call 0x1C17CF4
	045 Move X0, 0xB75000
	046 Move X0, [X0+2512]
	047 Call 0x1C17CF4
	048 Move X0, 0xB75000
	049 Move X0, [X0+1432]
	050 Call 0x1C17CF4
	051 Move X0, 0xBB8000
	052 Move X0, [X0+1408]
	053 Call 0x1C17CF4
	054 Move X0, 0xBB8000
	055 Move X0, [X0+1416]
	056 Call 0x1C17CF4
	057 Move X0, 0xBB8000
	058 Move X0, [X0+1392]
	059 Call 0x1C17CF4
	060 Move X0, 0xB7A000
	061 Move X0, [X0+912]
	062 Call 0x1C17CF4
	063 Move X0, 0xBB8000
	064 Move X0, [X0+1424]
	065 Call 0x1C17CF4
	066 Move X0, 0xBB8000
	067 Move X0, [X0+1432]
	068 Call 0x1C17CF4
	069 Move X0, 0xBB8000
	070 Move X0, [X0+1440]
	071 Call 0x1C17CF4
	072 Move X0, 0xBB8000
	073 Move X0, [X0+1448]
	074 Call 0x1C17CF4
	075 Move W8, 1
	076 Move [X23+3772], W8
	077 Move X0, [X26]
	078 Call 0x1C17F10
	079 Move X1, X31
	080 Move X23, X0
	081 Call Object..ctor, X0
	082 Compare X23, 0
	083 JumpIfEqual {473}
	084 Move [X23+16], X21
	085 Move W8, [X19]
	086 NotImplemented "Instruction CMP not yet implemented."
	087 Move X8, 0xBB8000
	088 Move V2, [X19+16]
	089 Move V0, [X19+32]
	090 Move V1, [X19]
	091 Move X8, [X8+1408]
	092 Move [X31+16], V2
	093 Move [X31+24], V0
	094 Move [X31], V1
	095 Move X0, [X8]
	096 Call 0x1C17F10
	097 Add X1, X31, 0
	098 Move W2, W22
	099 Move W3, W20
	100 Move W4, W24
	101 Move X5, X25
	102 Move X26, X0
	103 Call RemoteVoiceLink..ctor, X0, X1, X2, X3, X4, X5
	104 Move [X23+24], X26
	105 Move X8, 0xB75000
	106 Move X8, [X8+2416]
	107 Move X0, [X8]
	108 Move W8, [X0+224]
	109 Compare W8, 0
	110 JumpIfNotEqual {112}
	111 Call 0x1C17DFC
	112 Move X0, X31
	113 Call Application.get_platform
	114 Move X8, [X21+64]
	115 Compare X8, 0
	116 JumpIfEqual {473}
	117 Move X27, 0xB75000
	118 Move X24, [X8+24]
	119 Move X27, [X27+2512]
	120 Move W1, 1
	121 Move X0, [X27]
	122 Call 0x1C17D6C
	123 Compare X0, 0
	124 JumpIfEqual {473}
	125 Move X26, [X23+24]
	126 Move X25, X0
	127 Compare X26, 0
	128 JumpIfEqual {135}
	129 Move X8, [X25]
	130 Move X0, X26
	131 Move X1, [X8+64]
	132 Call 0x1C17E00
	133 Compare X0, 0
	134 JumpIfEqual {475}
	135 Move W8, [X25+24]
	136 Compare W8, 0
	137 JumpIfEqual {474}
	138 Move [X25+32], X26
	139 Compare X24, 0
	140 JumpIfEqual {473}
	141 Move X28, 0xB7A000
	142 Move X8, [X24]
	143 Move X28, [X28+840]
	144 Move X10, 0xBB8000
	145 Move X1, [X28]
	146 Move X10, [X10+1424]
	147 NotImplemented "Instruction LDRH not yet implemented."
	148 Move X26, [X10]
	149 Compare X9, 0
	150 JumpIfEqual {157}
	151 Move X10, [X8+176]
	152 Add X10, X10, 8
	153 NotImplemented "Instruction LDUR not yet implemented."
	154 NotImplemented "Instruction CMP not yet implemented."
	155 Subtract X9, X9, 1
	156 Add X10, X10, 16
	157 Move W2, 1
	158 Move X0, X24
	159 Call 0x1C5D788
	160 Move X8, [X21+64]
	161 Compare X8, 0
	162 JumpIfEqual {473}
	163 Move X21, [X8+24]
	164 Move X8, 0xB75000
	165 Move X8, [X8+2512]
	166 Move W1, 4
	167 Move X0, [X8]
	168 Call 0x1C17D6C
	169 Move X25, 0xB75000
	170 Move X25, [X25+1880]
	171 Move X23, X0
	172 Add X1, X31, 124
	173 Move [X31+124], W22
	174 Move X0, [X25]
	175 Call 0x1C17E04
	176 Compare X23, 0
	177 JumpIfEqual {473}
	178 Move X22, X0
	179 Compare X0, 0
	180 JumpIfEqual {187}
	181 Move X8, [X23]
	182 Move X0, X22
	183 Move X1, [X8+64]
	184 Call 0x1C17E00
	185 Compare X0, 0
	186 JumpIfEqual {475}
	187 Move W8, [X23+24]
	188 Compare W8, 0
	189 JumpIfEqual {474}
	190 Move [X23+32], X22
	191 Move X8, 0xB76000
	192 Move X8, [X8+2520]
	193 Add X1, X31, 120
	194 Move [X31+120], W20
	195 Move X0, [X8]
	196 Call 0x1C17E04
	197 Move X20, X0
	198 Compare X0, 0
	199 JumpIfEqual {206}
	200 Move X8, [X23]
	201 Move X0, X20
	202 Move X1, [X8+64]
	203 Call 0x1C17E00
	204 Compare X0, 0
	205 JumpIfEqual {475}
	206 Move W8, [X23+24]
	207 NotImplemented "Instruction CMP not yet implemented."
	208 Move [X23+40], X20
	209 Move X0, [X25]
	210 Add X1, X31, 108
	211 Move [X31+108], W24
	212 Call 0x1C17E04
	213 Move X20, X0
	214 Compare X0, 0
	215 JumpIfEqual {222}
	216 Move X8, [X23]
	217 Move X0, X20
	218 Move X1, [X8+64]
	219 Call 0x1C17E00
	220 Compare X0, 0
	221 JumpIfEqual {475}
	222 Move W8, [X23+24]
	223 NotImplemented "Instruction CMP not yet implemented."
	224 Move [X23+48], X20
	225 Move X8, 0xB7A000
	226 Move V2, [X19+16]
	227 Move V0, [X19+32]
	228 Move V1, [X19]
	229 Move X8, [X8+912]
	230 Add X1, X31, 48
	231 Move [X31+64], V2
	232 Move [X31+72], V0
	233 Move [X31+3], V1
	234 Move X0, [X8]
	235 Call 0x1C17E04
	236 Move X19, X0
	237 Compare X0, 0
	238 JumpIfEqual {245}
	239 Move X8, [X23]
	240 Move X0, X19
	241 Move X1, [X8+64]
	242 Call 0x1C17E00
	243 Compare X0, 0
	244 JumpIfEqual {475}
	245 Move W8, [X23+24]
	246 NotImplemented "Instruction CMP not yet implemented."
	247 Move [X23+56], X19
	248 Compare X21, 0
	249 JumpIfEqual {473}
	250 Move X9, 0xB7A000
	251 Move X8, [X21]
	252 Move X9, [X9+840]
	253 Move X10, 0xBB8000
	254 Move X1, [X9]
	255 Move X10, [X10+1440]
	256 NotImplemented "Instruction LDRH not yet implemented."
	257 Move X19, [X10]
	258 Compare X9, 0
	259 JumpIfEqual {266}
	260 Move X10, [X8+176]
	261 Add X10, X10, 8
	262 NotImplemented "Instruction LDUR not yet implemented."
	263 NotImplemented "Instruction CMP not yet implemented."
	264 Subtract X9, X9, 1
	265 Add X10, X10, 16
	266 Move W2, 1
	267 Move X0, X21
	268 Call 0x1C5D788
	269 Move W9, [X10]
	270 Add W9, W9, 1
	271 Add X8, X8, W9
	272 Add X0, X8, 312
	273 Move X8, [X0]
	274 Move X4, [X0+8]
	275 Move W1, 3
	276 Move X0, X24
	277 Move X2, X26
	278 Move X3, X25
	279 NotImplemented "Instruction BLR not yet implemented."
	280 Move X0, [X21+120]
	281 Compare X0, 0
	282 JumpIfEqual {473}
	283 Move X9, 0xBB8000
	284 Move X1, [X23+24]
	285 Move X9, [X9+1400]
	286 Move W10, [X0+28]
	287 Move X8, [X0+16]
	288 Move X9, [X9]
	289 Add W10, W10, 1
	290 Move [X0+28], W10
	291 Compare X8, 0
	292 JumpIfEqual {473}
	293 NotImplemented "Instruction LDRSW not yet implemented."
	294 Move W11, [X8+24]
	295 NotImplemented "Instruction CMP not yet implemented."
	296 Add W9, W10, 1
	297 Add X8, X8, X10
	298 Move [X0+24], W9
	299 Move [X8+32], X1
	300 Move X8, [X9+32]
	301 Move X8, [X8+192]
	302 Move X2, [X8+112]
	303 Call List`1<Object>.AddWithResize, X0, X1
	304 Move X8, [X21+176]
	305 Compare X8, 0
	306 JumpIfEqual {312}
	307 Move X1, [X23+24]
	308 Move X9, [X8+24]
	309 Move X0, [X8+64]
	310 Move X2, [X8+40]
	311 NotImplemented "Instruction BLR not yet implemented."
	312 Move X8, 0xB76000
	313 Move X24, [X23+24]
	314 Move X8, [X8+3696]
	315 Move X0, [X8]
	316 Call 0x1C17F10
	317 Move X8, 0xBB8000
	318 Move X8, [X8+1416]
	319 Move X1, X23
	320 Move X3, X31
	321 Move X25, X0
	322 Move X2, [X8]
	323 Call Action..ctor, X0, X1, X2
	324 Compare X24, 0
	325 JumpIfEqual {473}
	326 Move X0, X24
	327 Move X1, X25
	328 Call RemoteVoiceLink.add_RemoteVoiceRemoved, X0, X1
	329 Move X8, [X21]
	330 Move X3, [X19+40]
	331 Move X0, X21
	332 Move W1, W22
	333 Move X9, [X8+488]
	334 Move X4, [X8+496]
	335 Move W2, W20
	336 NotImplemented "Instruction BLR not yet implemented."
	337 Move X8, 0xB75000
	338 Move X8, [X8+1432]
	339 Move X19, X0
	340 Move X8, [X8]
	341 Move W9, [X8+224]
	342 Compare W9, 0
	343 JumpIfNotEqual {346}
	344 Move X0, X8
	345 Call 0x1C17DFC
	346 Move X0, X19
	347 Move X1, X31
	348 Move X2, X31
	349 Call Object.op_Equality, X0, X1
	350 Move TEMP, X0
	351 And TEMP, TEMP, 1
	352 Compare TEMP, 1
	353 JumpIfNotEqual {396}
	354 Move X8, [X21+64]
	355 Compare X8, 0
	356 JumpIfEqual {473}
	357 Move X0, [X27]
	358 Move X19, [X8+24]
	359 Move W1, 1
	360 Call 0x1C17D6C
	361 Compare X0, 0
	362 JumpIfEqual {473}
	363 Move X21, [X23+24]
	364 Move X20, X0
	365 Compare X21, 0
	366 JumpIfEqual {373}
	367 Move X8, [X20]
	368 Move X0, X21
	369 Move X1, [X8+64]
	370 Call 0x1C17E00
	371 Compare X0, 0
	372 JumpIfEqual {475}
	373 Move W8, [X20+24]
	374 Compare W8, 0
	375 JumpIfEqual {474}
	376 Move [X20+32], X21
	377 Compare X19, 0
	378 JumpIfEqual {473}
	379 Move X10, 0xBB8000
	380 Move X8, [X19]
	381 Move X1, [X28]
	382 Move X10, [X10+1448]
	383 NotImplemented "Instruction LDRH not yet implemented."
	384 Move X21, [X10]
	385 Compare X9, 0
	386 JumpIfEqual {393}
	387 Move X10, [X8+176]
	388 Add X10, X10, 8
	389 NotImplemented "Instruction LDUR not yet implemented."
	390 NotImplemented "Instruction CMP not yet implemented."
	391 Subtract X9, X9, 1
	392 Add X10, X10, 16
	393 Move W2, 1
	394 Move X0, X19
	395 Call 0x1C5D788
	396 Move X8, 0xB75000
	397 Move X8, [X8+1880]
	398 Add X1, X31, 48
	399 Move [X31+48], W22
	400 Move X0, [X8]
	401 Call 0x1C17E04
	402 Move X8, 0xB76000
	403 Move X8, [X8+2520]
	404 Move X22, X0
	405 Add X1, X31, 124
	406 Move [X31+124], W20
	407 Move X0, [X8]
	408 Call 0x1C17E04
	409 Move X8, 0xBB8000
	410 Move X8, [X8+1432]
	411 Move X2, X0
	412 Move X1, X22
	413 Move X3, X31
	414 Move X8, [X8]
	415 Move X0, X8
	416 Call String.Format, X0, X1, X2
	417 Compare X19, 0
	418 JumpIfEqual {473}
	419 Move X1, X0
	420 Move X0, X19
	421 Call VoiceComponent.set_Name, X0, X1
	422 Move X2, [X23+24]
	423 Move X0, X21
	424 Move X1, X19
	425 Call VoiceConnection.LinkSpeaker, X0, X1, X2
	426 Move W9, [X10]
	427 Add W9, W9, 1
	428 Add X8, X8, W9
	429 Add X0, X8, 312
	430 Move X8, [X0]
	431 Move X4, [X0+8]
	432 Move W1, 3
	433 Move X0, X21
	434 Move X2, X19
	435 Move X3, X23
	436 NotImplemented "Instruction BLR not yet implemented."
	437 Move X20, [X31+192]
	438 Move X19, [X31+200]
	439 Move X22, [X31+176]
	440 Move X21, [X31+184]
	441 Move X24, [X31+160]
	442 Move X23, [X31+168]
	443 Move X26, [X31+144]
	444 Move X25, [X31+152]
	445 Move X28, [X31+128]
	446 Move X27, [X31+136]
	447 Move X30, [X31+112]
	448 Add X31, X31, 208
	449 Return 
	450 Move W9, [X10]
	451 Add W9, W9, 1
	452 Add X8, X8, W9
	453 Add X0, X8, 312
	454 Move X5, [X0]
	455 Move X4, [X0+8]
	456 Move X0, X19
	457 Move X2, X21
	458 Move X3, X20
	459 Move X20, [X31+192]
	460 Move X19, [X31+200]
	461 Move X22, [X31+176]
	462 Move X21, [X31+184]
	463 Move X24, [X31+160]
	464 Move X23, [X31+168]
	465 Move X26, [X31+144]
	466 Move X25, [X31+152]
	467 Move X28, [X31+128]
	468 Move X27, [X31+136]
	469 Move X30, [X31+112]
	470 Move W1, 4
	471 Add X31, X31, 208
	472 CallNoReturn X5
	473 Call 0x1C17F20
	474 Call 0x1C17F28
	475 Call 0x1C17F44
	476 Move X1, X31
	477 Call 0x1C17DEC

Method: System.Void OnVoiceStateChanged(Photon.Realtime.ClientState fromState, Photon.Realtime.ClientState toState)

Disassembly:
	0x035734E8 LDR X8, [X8 + 0xA48]
	0x035734EC STR W0, [X31 + 0xC]
	0x035734F0 ADD X1, X31, 0xC
	0x035734F4 LDR X8, [X8]
	0x035734F8 MOV X0, X8
	0x035734FC BL 0x1C16E04
	0x03573500 CBZ X21, 0x35738E4
	0x03573504 MOV X22, X0
	0x03573508 CBZ X0, 0x3573520
	0x0357350C LDR X8, [X21]
	0x03573510 MOV X0, X22
	0x03573514 LDR X1, [X8 + 0x40]
	0x03573518 BL 0x1C16E00
	0x0357351C CBZ X0, 0x35738EC
	0x03573520 LDR W8, [X21 + 0x18]
	0x03573524 CBZ W8, 0x35738E8
	0x03573528 STR X22, [X21 + 0x20]
	0x0357352C CBZ X20, 0x35738E4
	0x03573530 ADRP X10, 0xBC3000
	0x03573534 LDR X8, [X20]
	0x03573538 LDR X1, [X23]
	0x0357353C LDR X10, [X10 + 0x148]
	0x03573540 LDRH W9, [X8 + 0x12E]
	0x03573544 LDR X22, [X10]
	0x03573548 CBZ X9, 0x357356C
	0x0357354C LDR X10, [X8 + 0xB0]
	0x03573550 ADD X10, X10, 0x8
	0x03573554 LDUR X11, [X10 - 0x8]
	0x03573558 CMP X11, X1
	0x0357355C B.EQ 0x35736A8
	0x03573560 SUBS X9, X9, 0x1
	0x03573564 ADD X10, X10, 0x10
	0x03573568 B.NE 0x3573554
	0x0357356C MOVZ W2, 0x1
	0x03573570 MOV X0, X20
	0x03573574 BL 0x1C5C788
	0x03573578 B 0x35736B8
	0x0357357C LDR W9, [X10]
	0x03573580 ADD W9, W9, 0x1
	0x03573584 ADD X8, X8, W9, 0x4, SXTW
	0x03573588 ADD X0, X8, 0x138
	0x0357358C LDP X8, X1, [X0]
	0x03573590 MOV X0, X20
	0x03573594 BLR X8
	0x03573598 LDR X8, [X19 + 0x20]
	0x0357359C CBZ X8, 0x35738E4
	0x035735A0 LDR X20, [X8 + 0x18]
	0x035735A4 CBZ X0, 0x3573608
	0x035735A8 ADRP X8, 0xB80000
	0x035735AC LDR X8, [X8 + 0x9D0]
	0x035735B0 MOVZ W1, 0x1
	0x035735B4 LDR X0, [X8]
	0x035735B8 BL 0x1C16D6C
	0x035735BC LDR X21, [X19 + 0x28]
	0x035735C0 CBZ X21, 0x35738E4
	0x035735C4 LDR X8, [X21]
	0x035735C8 LDR X1, [X22]
	0x035735CC MOV X19, X0
	0x035735D0 LDRH W9, [X8 + 0x12E]
	0x035735D4 CBZ X9, 0x35735F8
	0x035735D8 LDR X10, [X8 + 0xB0]
	0x035735DC ADD X10, X10, 0x8
	0x035735E0 LDUR X11, [X10 - 0x8]
	0x035735E4 CMP X11, X1
	0x035735E8 B.EQ 0x35737F4
	0x035735EC SUBS X9, X9, 0x1
	0x035735F0 ADD X10, X10, 0x10
	0x035735F4 B.NE 0x35735E0
	0x035735F8 MOVZ W2, 0x1
	0x035735FC MOV X0, X21
	0x03573600 BL 0x1C5C788
	0x03573604 B 0x3573804
	0x03573608 LDR X19, [X24]
	0x0357360C LDR X8, [X19 + 0x38]
	0x03573610 CBNZ X8, 0x3573620
	0x03573614 MOV X0, X19
	0x03573618 BL 0x1C5C6E0
	0x0357361C LDR X8, [X19 + 0x38]
	0x03573620 LDR X0, [X8 + 0x10]
	0x03573624 LDRB W8, [X0 + 0x135]
	0x03573628 TBNZ X8, 0x0, 0x3573630
	0x0357362C BL 0x1C5C684
	0x03573630 LDR W8, [X0 + 0xE0]
	0x03573634 CBNZ W8, 0x357363C
	0x03573638 BL 0x1C16DFC
	0x0357363C LDR X8, [X19 + 0x38]
	0x03573640 LDR X0, [X8 + 0x10]
	0x03573644 LDRB W8, [X0 + 0x135]
	0x03573648 TBNZ X8, 0x0, 0x3573650
	0x0357364C BL 0x1C5C684
	0x03573650 CBZ X20, 0x35738E4
	0x03573654 ADRP X10, 0xBC3000
	0x03573658 LDR X9, [X0 + 0xB8]
	0x0357365C LDR X8, [X20]
	0x03573660 LDR X1, [X23]
	0x03573664 LDR X10, [X10 + 0x150]
	0x03573668 LDR X19, [X9]
	0x0357366C LDRH W9, [X8 + 0x12E]
	0x03573670 LDR X21, [X10]
	0x03573674 CBZ X9, 0x3573698
	0x03573678 LDR X10, [X8 + 0xB0]
	0x0357367C ADD X10, X10, 0x8
	0x03573680 LDUR X11, [X10 - 0x8]
	0x03573684 CMP X11, X1
	0x03573688 B.EQ 0x35738A8
	0x0357368C SUBS X9, X9, 0x1
	0x03573690 ADD X10, X10, 0x10
	0x03573694 B.NE 0x3573680
	0x03573698 MOVZ W2, 0x1
	0x0357369C MOV X0, X20
	0x035736A0 BL 0x1C5C788
	0x035736A4 B 0x35738B8
	0x035736A8 LDR W9, [X10]
	0x035736AC ADD W9, W9, 0x1
	0x035736B0 ADD X8, X8, W9, 0x4, SXTW
	0x035736B4 ADD X0, X8, 0x138
	0x035736B8 LDP X8, X4, [X0]
	0x035736BC MOVZ W1, 0x3
	0x035736C0 MOV X0, X20
	0x035736C4 MOV X2, X22
	0x035736C8 MOV X3, X21
	0x035736CC BLR X8
	0x035736D0 ADRP X8, 0xB85000
	0x035736D4 LDR X8, [X8 + 0x408]
	0x035736D8 LDR X0, [X8]
	0x035736DC BL 0x1C16F10
	0x035736E0 ADRP X8, 0xBC3000
	0x035736E4 LDR X8, [X8 + 0x120]
	0x035736E8 MOV X1, X19
	0x035736EC MOV X3, X31
	0x035736F0 MOV X20, X0
	0x035736F4 LDR X2, [X8]
	0x035736F8 BL 0x3BFB7A4
	0x035736FC MOV X0, X20
	0x03573700 MOV X1, X31
	0x03573704 BL 0x3BFB4B0
	0x03573708 LDR X9, [X19 + 0x20]
	0x0357370C CBZ X9, 0x35738E4
	0x03573710 LDR X20, [X24]
	0x03573714 LDR X19, [X9 + 0x18]
	0x03573718 LDR X8, [X20 + 0x38]
	0x0357371C CBNZ X8, 0x357372C
	0x03573720 MOV X0, X20
	0x03573724 BL 0x1C5C6E0
	0x03573728 LDR X8, [X20 + 0x38]
	0x0357372C LDR X0, [X8 + 0x10]
	0x03573730 LDRB W8, [X0 + 0x135]
	0x03573734 TBNZ X8, 0x0, 0x357373C
	0x03573738 BL 0x1C5C684
	0x0357373C LDR W8, [X0 + 0xE0]
	0x03573740 CBNZ W8, 0x3573748
	0x03573744 BL 0x1C16DFC
	0x03573748 LDR X8, [X20 + 0x38]
	0x0357374C LDR X0, [X8 + 0x10]
	0x03573750 LDRB W8, [X0 + 0x135]
	0x03573754 TBNZ X8, 0x0, 0x357375C
	0x03573758 BL 0x1C5C684
	0x0357375C CBZ X19, 0x35738E4
	0x03573760 ADRP X10, 0xBC3000
	0x03573764 LDR X9, [X0 + 0xB8]
	0x03573768 LDR X8, [X19]
	0x0357376C LDR X1, [X23]
	0x03573770 LDR X10, [X10 + 0x158]
	0x03573774 LDR X20, [X9]
	0x03573778 LDRH W9, [X8 + 0x12E]
	0x0357377C LDR X21, [X10]
	0x03573780 CBZ X9, 0x35737A4
	0x03573784 LDR X10, [X8 + 0xB0]
	0x03573788 ADD X10, X10, 0x8
	0x0357378C LDUR X11, [X10 - 0x8]
	0x03573790 CMP X11, X1
	0x03573794 B.EQ 0x35737B4
	0x03573798 SUBS X9, X9, 0x1
	0x0357379C ADD X10, X10, 0x10
	0x035737A0 B.NE 0x357378C
	0x035737A4 MOVZ W2, 0x1
	0x035737A8 MOV X0, X19
	0x035737AC BL 0x1C5C788
	0x035737B0 B 0x35737C4
	0x035737B4 LDR W9, [X10]
	0x035737B8 ADD W9, W9, 0x1
	0x035737BC ADD X8, X8, W9, 0x4, SXTW
	0x035737C0 ADD X0, X8, 0x138
	0x035737C4 LDP X8, X4, [X0]
	0x035737C8 MOVZ W1, 0x3
	0x035737CC MOV X0, X19
	0x035737D0 MOV X2, X21
	0x035737D4 MOV X3, X20
	0x035737D8 BLR X8
	0x035737DC LDP X20, X19, [X31 + 0x40]
	0x035737E0 LDP X22, X21, [X31 + 0x30]
	0x035737E4 LDP X24, X23, [X31 + 0x20]
	0x035737E8 LDP X26, X25, [X31 + 0x10]
	0x035737EC LDR X30, [X31], #0x50
	0x035737F0 RET
	0x035737F4 LDR W9, [X10]
	0x035737F8 ADD W9, W9, 0x1

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X22, 0xE6D000
	011 Move W8, [X22+3773]
	012 Move W20, W2
	013 Move W21, W1
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {42}
	019 Move X0, 0xBC2000
	020 Move X0, [X0+2896]
	021 Call 0x1C17CF4
	022 Move X0, 0xB86000
	023 Move X0, [X0+840]
	024 Call 0x1C17CF4
	025 Move X0, 0xBC4000
	026 Move X0, [X0+136]
	027 Call 0x1C17CF4
	028 Move X0, 0xBC4000
	029 Move X0, [X0+144]
	030 Call 0x1C17CF4
	031 Move X0, 0xBC4000
	032 Move X0, [X0+152]
	033 Call 0x1C17CF4
	034 Move X0, 0xB81000
	035 Move X0, [X0+2512]
	036 Call 0x1C17CF4
	037 Move X0, 0xBC4000
	038 Move X0, [X0+160]
	039 Call 0x1C17CF4
	040 Move W8, 1
	041 Move [X22+3773], W8
	042 Move X8, [X19+64]
	043 Compare X8, 0
	044 JumpIfEqual {187}
	045 Move X9, 0xB81000
	046 Move X9, [X9+2512]
	047 Move X25, 0xBC2000
	048 Move X22, [X8+24]
	049 Move W1, 2
	050 Move X0, [X9]
	051 Move X25, [X25+2896]
	052 Call 0x1C17D6C
	053 Move X23, X0
	054 Move X0, [X25]
	055 Add X1, X31, 12
	056 Move [X31+12], W21
	057 Call 0x1C17E04
	058 Compare X23, 0
	059 JumpIfEqual {187}
	060 Move X24, X0
	061 Compare X0, 0
	062 JumpIfEqual {69}
	063 Move X8, [X23]
	064 Move X0, X24
	065 Move X1, [X8+64]
	066 Call 0x1C17E00
	067 Compare X0, 0
	068 JumpIfEqual {221}
	069 Move W8, [X23+24]
	070 Compare W8, 0
	071 JumpIfEqual {220}
	072 Move [X23+32], X24
	073 Move X0, [X25]
	074 Add X1, X31, 8
	075 Move [X31+8], W20
	076 Call 0x1C17E04
	077 Move X24, X0
	078 Compare X0, 0
	079 JumpIfEqual {86}
	080 Move X8, [X23]
	081 Move X0, X24
	082 Move X1, [X8+64]
	083 Call 0x1C17E00
	084 Compare X0, 0
	085 JumpIfEqual {221}
	086 Move W8, [X23+24]
	087 NotImplemented "Instruction CMP not yet implemented."
	088 Move [X23+40], X24
	089 Compare X22, 0
	090 JumpIfEqual {187}
	091 Move X9, 0xB86000
	092 Move X10, 0xBC4000
	093 Move X8, [X22]
	094 Move X9, [X9+840]
	095 Move X10, [X10+160]
	096 Move X1, [X9]
	097 NotImplemented "Instruction LDRH not yet implemented."
	098 Move X24, [X10]
	099 Compare X9, 0
	100 JumpIfEqual {107}
	101 Move X10, [X8+176]
	102 Add X10, X10, 8
	103 NotImplemented "Instruction LDUR not yet implemented."
	104 NotImplemented "Instruction CMP not yet implemented."
	105 Subtract X9, X9, 1
	106 Add X10, X10, 16
	107 Move W2, 1
	108 Move X0, X22
	109 Call 0x1C5D788
	110 Move W9, [X10]
	111 Add W9, W9, 1
	112 Add X8, X8, W9
	113 Add X0, X8, 312
	114 Move X8, [X0]
	115 Move X4, [X0+8]
	116 Move W1, 3
	117 Move X0, X22
	118 Move X2, X24
	119 Move X3, X23
	120 NotImplemented "Instruction BLR not yet implemented."
	121 NotImplemented "Instruction CMP not yet implemented."
	122 Move X0, [X19+152]
	123 Compare X0, 0
	124 JumpIfEqual {187}
	125 Move X22, 0xBC4000
	126 Move X22, [X22+152]
	127 Move W21, W31
	128 Move W8, [X0+24]
	129 NotImplemented "Instruction CMP not yet implemented."
	130 Move X2, [X22]
	131 Move W1, W21
	132 Call List`1<Object>.get_Item, X0, X1
	133 Compare X0, 0
	134 JumpIfEqual {187}
	135 Move W8, [X0+175]
	136 Compare W8, 0
	137 JumpIfEqual {143}
	138 Move W8, [X0+137]
	139 Compare W8, 0
	140 JumpIfEqual {143}
	141 Move [X0+137], W31
	142 Call Recorder.StopRecording, X0
	143 Move X0, [X19+152]
	144 Add W21, W21, 1
	145 Compare X0, 0
	146 JumpIfNotEqual {128}
	147 Move X8, [X19+120]
	148 Compare X8, 0
	149 JumpIfEqual {187}
	150 Move W2, [X8+24]
	151 Move W9, [X8+28]
	152 Add W9, W9, 1
	153 NotImplemented "Instruction CMP not yet implemented."
	154 Move [X8+24], W31
	155 Move [X8+28], W9
	156 Move X0, [X8+16]
	157 Move W1, W31
	158 Move X3, X31
	159 Call Array.Clear, X0, X1, X2
	160 NotImplemented "Instruction CMP not yet implemented."
	161 NotImplemented "Instruction CMP not yet implemented."
	162 Move X0, [X19+152]
	163 Compare X0, 0
	164 JumpIfEqual {187}
	165 Move X21, 0xBC4000
	166 Move X21, [X21+152]
	167 Move W20, W31
	168 Move W22, 1
	169 Move W8, [X0+24]
	170 NotImplemented "Instruction CMP not yet implemented."
	171 Move X2, [X21]
	172 Move W1, W20
	173 Call List`1<Object>.get_Item, X0, X1
	174 Compare X0, 0
	175 JumpIfEqual {187}
	176 Move W8, [X0+175]
	177 Compare W8, 0
	178 JumpIfEqual {183}
	179 Move W8, [X0+137]
	180 NotImplemented "Instruction CMP not yet implemented."
	181 Move [X0+137], W22
	182 Move [X0+220], W22
	183 Move X0, [X19+152]
	184 Add W20, W20, 1
	185 Compare X0, 0
	186 JumpIfNotEqual {169}
	187 Call 0x1C17F20
	188 Move X8, [X19+72]
	189 Compare X8, 0
	190 JumpIfEqual {187}
	191 Move X0, [X8+336]
	192 Compare X0, 0
	193 JumpIfEqual {210}
	194 Move X20, [X19+160]
	195 Compare X20, 0
	196 JumpIfEqual {203}
	197 Move X1, X31
	198 Call RegionHandler.get_SummaryToCache, X0
	199 Move [X20+72], X0
	200 Move X8, [X19+72]
	201 Compare X8, 0
	202 JumpIfEqual {187}
	203 Move X0, [X8+336]
	204 Compare X0, 0
	205 JumpIfEqual {187}
	206 Move X1, X31
	207 Call RegionHandler.get_SummaryToCache, X0
	208 Move X1, X0
	209 Call VoiceConnection.set_BestRegionSummaryInPreferences, X0, X1
	210 Move X20, [X31+64]
	211 Move X19, [X31+72]
	212 Move X22, [X31+48]
	213 Move X21, [X31+56]
	214 Move X24, [X31+32]
	215 Move X23, [X31+40]
	216 Move X30, [X31+16]
	217 Move X25, [X31+24]
	218 Add X31, X31, 80
	219 Return 
	220 Call 0x1C17F28
	221 Call 0x1C17F44
	222 Move X1, X31
	223 Call 0x1C17DEC

Method: System.Void CalcStatistics()

Disassembly:
	0x0357F840 MOV X0, X22
	0x0357F844 MOV X1, X31
	0x0357F848 MOV X2, X31
	0x0357F84C BL 0x3C3883C
	0x0357F850 TBZ X0, 0x0, 0x357F91C
	0x0357F854 MOV X0, X21
	0x0357F858 MOV X1, X31
	0x0357F85C BL 0x3C323D4
	0x0357F860 TBZ X0, 0x0, 0x357F91C
	0x0357F864 LDR X0, [X24]
	0x0357F868 LDR W8, [X0 + 0xE0]
	0x0357F86C CBNZ W8, 0x357F874
	0x0357F870 BL 0x1C16DFC
	0x0357F874 MOV X0, X19
	0x0357F878 MOV X1, X31
	0x0357F87C MOV X2, X31
	0x0357F880 BL 0x3C354F8
	0x0357F884 TBZ X0, 0x0, 0x357F918
	0x0357F888 CBZ X19, 0x357F954
	0x0357F88C MOV X0, X19
	0x0357F890 MOV X1, X31
	0x0357F894 BL 0x3C389D4
	0x0357F898 LDR X23, [X26]
	0x0357F89C MOV X22, X0
	0x0357F8A0 LDR X8, [X23 + 0x38]
	0x0357F8A4 CBNZ X8, 0x357F8B4
	0x0357F8A8 MOV X0, X23
	0x0357F8AC BL 0x1C5C6E0
	0x0357F8B0 LDR X8, [X23 + 0x38]
	0x0357F8B4 LDR X0, [X8 + 0x10]
	0x0357F8B8 LDRB W8, [X0 + 0x135]
	0x0357F8BC TBNZ X8, 0x0, 0x357F8C4
	0x0357F8C0 BL 0x1C5C684
	0x0357F8C4 LDR W8, [X0 + 0xE0]
	0x0357F8C8 CBNZ W8, 0x357F8D0
	0x0357F8CC BL 0x1C16DFC
	0x0357F8D0 LDR X8, [X23 + 0x38]
	0x0357F8D4 LDR X0, [X8 + 0x10]
	0x0357F8D8 LDRB W8, [X0 + 0x135]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, X31
	005 Call Time.get_time
	006 Move X8, [X19+72]
	007 Compare X8, 0
	008 JumpIfEqual {43}
	009 Move X8, [X8+392]
	010 Compare X8, 0
	011 JumpIfEqual {43}
	012 Move V1, [X19+100]
	013 Move W9, [X8+56]
	014 Move W8, [X8+40]
	015 Subtract S1, S0, S1
	016 NotImplemented "Instruction FCMP not yet implemented."
	017 Move W11, [X19+104]
	018 Move W10, [X19+108]
	019 Subtract W12, W9, W10
	020 Subtract W11, W8, W11
	021 Add W10, W11, W12
	022 NotImplemented "Instruction CMP not yet implemented."
	023 NotImplemented "Instruction SCVTF not yet implemented."
	024 Move W11, 0x42C80000
	025 NotImplemented "Instruction SCVTF not yet implemented."
	026 Move S5, W11
	027 NotImplemented "Instruction SCVTF not yet implemented."
	028 NotImplemented "Instruction FDIV not yet implemented."
	029 NotImplemented "Instruction FDIV not yet implemented."
	030 Multiply S3, S3, S5
	031 Move [X19+184], S2
	032 Move [X19+192], S1
	033 NotImplemented "Instruction FDIV not yet implemented."
	034 Move S1, W31
	035 Move [X19+184], X31
	036 Move [X19+192], S1
	037 Move [X19+104], W8
	038 Move [X19+108], W9
	039 Move [X19+100], S0
	040 Move X30, [X31+16]
	041 Move X19, [X31+24]
	042 Return 
	043 Call 0x1C17F20

Method: System.Void LinkSpeaker(Photon.Voice.Unity.Speaker speaker, Photon.Voice.Unity.RemoteVoiceLink remoteVoice)

Disassembly:
	0x0357F220 LDR X30, [X31], #0x30
	0x0357F224 RET
	0x0357F228 BL 0x1C16F20
	0x0357F22C BL 0x1C16F28
	0x0357F230 BL 0x1C16F44
	0x0357F234 MOV X1, X31
	0x0357F238 BL 0x1C16DEC
	0x0357F23C STP X30, X21, [X31 - 0x20]!
	0x0357F240 STP X20, X19, [X31 + 0x10]
	0x0357F244 ADRP X20, 0xE60000
	0x0357F248 ADRP X21, 0xBB7000
	0x0357F24C LDRB W8, [X20 + 0xEC8]
	0x0357F250 LDR X21, [X21 + 0x5B0]
	0x0357F254 MOV X19, X0
	0x0357F258 TBNZ X8, 0x0, 0x357F270
	0x0357F25C ADRP X0, 0xBB7000
	0x0357F260 LDR X0, [X0 + 0x5B0]
	0x0357F264 BL 0x1C16CF4
	0x0357F268 MOVZ W8, 0x1
	0x0357F26C STRB W8, [X20 + 0xEC8]
	0x0357F270 LDR X0, [X21]
	0x0357F274 BL 0x1C16F10
	0x0357F278 MOV X20, X0
	0x0357F27C BL 0x357FAB8
	0x0357F280 STR X20, [X19 + 0x18]
	0x0357F284 MOV X0, X19
	0x0357F288 LDP X20, X19, [X31 + 0x10]
	0x0357F28C MOV X1, X31
	0x0357F290 LDP X30, X21, [X31], #0x20
	0x0357F294 B 0x33BDD8C
	0x0357F298 STP X30, X23, [X31 - 0x30]!
	0x0357F29C STP X22, X21, [X31 + 0x10]
	0x0357F2A0 STP X20, X19, [X31 + 0x20]
	0x0357F2A4 ADRP X20, 0xE60000
	0x0357F2A8 LDRB W8, [X20 + 0xEC3]
	0x0357F2AC MOV X19, X0
	0x0357F2B0 TBNZ X8, 0x0, 0x357F2EC
	0x0357F2B4 ADRP X0, 0xB79000
	0x0357F2B8 LDR X0, [X0 + 0x348]
	0x0357F2BC BL 0x1C16CF4
	0x0357F2C0 ADRP X0, 0xB74000
	0x0357F2C4 LDR X0, [X0 + 0x9D0]
	0x0357F2C8 BL 0x1C16CF4
	0x0357F2CC ADRP X0, 0xB74000
	0x0357F2D0 LDR X0, [X0 + 0x598]
	0x0357F2D4 BL 0x1C16CF4
	0x0357F2D8 ADRP X0, 0xBB7000
	0x0357F2DC LDR X0, [X0 + 0x5B8]
	0x0357F2E0 BL 0x1C16CF4
	0x0357F2E4 MOVZ W8, 0x1
	0x0357F2E8 STRB W8, [X20 + 0xEC3]
	0x0357F2EC LDR X8, [X19 + 0x10]
	0x0357F2F0 CBZ X8, 0x357F40C
	0x0357F2F4 LDR X8, [X8 + 0x40]
	0x0357F2F8 CBZ X8, 0x357F40C
	0x0357F2FC ADRP X9, 0xB74000
	0x0357F300 LDR X9, [X9 + 0x9D0]
	0x0357F304 LDR X20, [X8 + 0x18]
	0x0357F308 MOVZ W1, 0x1
	0x0357F30C LDR X0, [X9]
	0x0357F310 BL 0x1C16D6C
	0x0357F314 LDR X8, [X19 + 0x18]
	0x0357F318 CBZ X8, 0x357F40C
	0x0357F31C MOV X21, X0
	0x0357F320 MOV X0, X8
	0x0357F324 MOV X1, X31
	0x0357F328 BL 0x3C389D4
	0x0357F32C CBZ X21, 0x357F40C
	0x0357F330 MOV X22, X0
	0x0357F334 CBZ X0, 0x357F34C
	0x0357F338 LDR X8, [X21]
	0x0357F33C MOV X0, X22
	0x0357F340 LDR X1, [X8 + 0x40]
	0x0357F344 BL 0x1C16E00
	0x0357F348 CBZ X0, 0x357F414
	0x0357F34C LDR W8, [X21 + 0x18]
	0x0357F350 CBZ W8, 0x357F410
	0x0357F354 STR X22, [X21 + 0x20]
	0x0357F358 CBZ X20, 0x357F40C
	0x0357F35C ADRP X9, 0xB79000
	0x0357F360 ADRP X10, 0xBB7000
	0x0357F364 LDR X8, [X20]
	0x0357F368 LDR X9, [X9 + 0x348]
	0x0357F36C LDR X10, [X10 + 0x5B8]
	0x0357F370 ADRP X23, 0xB74000
	0x0357F374 LDR X1, [X9]
	0x0357F378 LDRH W9, [X8 + 0x12E]
	0x0357F37C LDR X22, [X10]
	0x0357F380 LDR X23, [X23 + 0x598]
	0x0357F384 CBZ X9, 0x357F3A8
	0x0357F388 LDR X10, [X8 + 0xB0]
	0x0357F38C ADD X10, X10, 0x8
	0x0357F390 LDUR X11, [X10 - 0x8]
	0x0357F394 CMP X11, X1
	0x0357F398 B.EQ 0x357F3B8
	0x0357F39C SUBS X9, X9, 0x1
	0x0357F3A0 ADD X10, X10, 0x10
	0x0357F3A4 B.NE 0x357F390
	0x0357F3A8 MOVZ W2, 0x1
	0x0357F3AC MOV X0, X20
	0x0357F3B0 BL 0x1C5C788
	0x0357F3B4 B 0x357F3C8
	0x0357F3B8 LDR W9, [X10]
	0x0357F3BC ADD W9, W9, 0x1
	0x0357F3C0 ADD X8, X8, W9, 0x4, SXTW
	0x0357F3C4 ADD X0, X8, 0x138
	0x0357F3C8 LDP X8, X4, [X0]
	0x0357F3CC MOVZ W1, 0x3
	0x0357F3D0 MOV X0, X20
	0x0357F3D4 MOV X2, X22
	0x0357F3D8 MOV X3, X21
	0x0357F3DC BLR X8
	0x0357F3E0 LDR X0, [X23]
	0x0357F3E4 LDR X19, [X19 + 0x18]
	0x0357F3E8 LDR W8, [X0 + 0xE0]
	0x0357F3EC CBNZ W8, 0x357F3F4
	0x0357F3F0 BL 0x1C16DFC
	0x0357F3F4 MOV X0, X19
	0x0357F3F8 LDP X20, X19, [X31 + 0x20]
	0x0357F3FC LDP X22, X21, [X31 + 0x10]
	0x0357F400 MOV X1, X31
	0x0357F404 LDP X30, X23, [X31], #0x30
	0x0357F408 B 0x3C394A8
	0x0357F40C BL 0x1C16F20
	0x0357F410 BL 0x1C16F28
	0x0357F414 BL 0x1C16F44
	0x0357F418 MOV X1, X31
	0x0357F41C BL 0x1C16DEC
	0x0357F420 STR X30, [X31 - 0x30]!
	0x0357F424 STP X22, X21, [X31 + 0x10]
	0x0357F428 STP X20, X19, [X31 + 0x20]
	0x0357F42C ADRP X20, 0xE60000
	0x0357F430 LDRB W8, [X20 + 0xEC4]
	0x0357F434 MOV X19, X0
	0x0357F438 TBNZ X8, 0x0, 0x357F474
	0x0357F43C ADRP X0, 0xB79000
	0x0357F440 LDR X0, [X0 + 0x348]
	0x0357F444 BL 0x1C16CF4
	0x0357F448 ADRP X0, 0xBB7000
	0x0357F44C LDR X0, [X0 + 0x5C0]
	0x0357F450 BL 0x1C16CF4
	0x0357F454 ADRP X0, 0xB74000
	0x0357F458 LDR X0, [X0 + 0x9D0]
	0x0357F45C BL 0x1C16CF4
	0x0357F460 ADRP X0, 0xBB7000
	0x0357F464 LDR X0, [X0 + 0x5C8]
	0x0357F468 BL 0x1C16CF4
	0x0357F46C MOVZ W8, 0x1
	0x0357F470 STRB W8, [X20 + 0xEC4]
	0x0357F474 LDR X8, [X19 + 0x10]
	0x0357F478 CBZ X8, 0x357F57C
	0x0357F47C LDR X8, [X8 + 0x40]
	0x0357F480 CBZ X8, 0x357F57C
	0x0357F484 ADRP X9, 0xB74000
	0x0357F488 LDR X9, [X9 + 0x9D0]
	0x0357F48C LDR X20, [X8 + 0x18]
	0x0357F490 MOVZ W1, 0x1
	0x0357F494 LDR X0, [X9]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0xE61000
	009 Move X23, 0xBB8000
	010 Move W8, [X21+3774]
	011 Move X23, [X23+1328]
	012 Move X20, X2
	013 Move X22, X1
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {42}
	019 Move X0, 0xB76000
	020 Move X0, [X0+3696]
	021 Call 0x1C17CF4
	022 Move X0, 0xB7A000
	023 Move X0, [X0+840]
	024 Call 0x1C17CF4
	025 Move X0, 0xBB8000
	026 Move X0, [X0+1336]
	027 Call 0x1C17CF4
	028 Move X0, 0xB75000
	029 Move X0, [X0+2512]
	030 Call 0x1C17CF4
	031 Move X0, 0xBB8000
	032 Move X0, [X0+1344]
	033 Call 0x1C17CF4
	034 Move X0, 0xBB8000
	035 Move X0, [X0+1328]
	036 Call 0x1C17CF4
	037 Move X0, 0xBB8000
	038 Move X0, [X0+1352]
	039 Call 0x1C17CF4
	040 Move W8, 1
	041 Move [X21+3774], W8
	042 Move X0, [X23]
	043 Call 0x1C17F10
	044 Move X1, X31
	045 Move X21, X0
	046 Call Object..ctor, X0
	047 Compare X21, 0
	048 JumpIfEqual {179}
	049 Move [X21+16], X19
	050 Move [X21+24], X22
	051 Compare X22, 0
	052 JumpIfEqual {179}
	053 Move X0, X22
	054 Move X1, X20
	055 Call Speaker.Link, X0, X1
	056 Move TEMP, X0
	057 And TEMP, TEMP, 1
	058 Compare TEMP, 1
	059 JumpIfNotEqual {171}
	060 Move X8, [X19+64]
	061 Compare X8, 0
	062 JumpIfEqual {179}
	063 Move X22, [X8+24]
	064 Move X8, 0xB75000
	065 Move X8, [X8+2512]
	066 Move W1, 1
	067 Move X0, [X8]
	068 Call 0x1C17D6C
	069 Compare X0, 0
	070 JumpIfEqual {179}
	071 Move X23, X0
	072 Compare X20, 0
	073 JumpIfEqual {80}
	074 Move X8, [X23]
	075 Move X0, X20
	076 Move X1, [X8+64]
	077 Call 0x1C17E00
	078 Compare X0, 0
	079 JumpIfEqual {181}
	080 Move W8, [X23+24]
	081 Compare W8, 0
	082 JumpIfEqual {180}
	083 Move [X23+32], X20
	084 Compare X22, 0
	085 JumpIfEqual {179}
	086 Move X9, 0xB7A000
	087 Move X8, [X22]
	088 Move X9, [X9+840]
	089 Move X10, 0xBB8000
	090 Move X1, [X9]
	091 Move X10, [X10+1352]
	092 NotImplemented "Instruction LDRH not yet implemented."
	093 Move X24, [X10]
	094 Compare X9, 0
	095 JumpIfEqual {102}
	096 Move X10, [X8+176]
	097 Add X10, X10, 8
	098 NotImplemented "Instruction LDUR not yet implemented."
	099 NotImplemented "Instruction CMP not yet implemented."
	100 Subtract X9, X9, 1
	101 Add X10, X10, 16
	102 Move W2, 1
	103 Move X0, X22
	104 Call 0x1C5D788
	105 Move W9, [X10]
	106 Add W9, W9, 1
	107 Add X8, X8, W9
	108 Add X0, X8, 312
	109 Move X8, [X0]
	110 Move X4, [X0+8]
	111 Move W1, 3
	112 Move X0, X22
	113 Move X2, X24
	114 Move X3, X23
	115 NotImplemented "Instruction BLR not yet implemented."
	116 Move X0, [X19+144]
	117 Compare X0, 0
	118 JumpIfEqual {179}
	119 Move X9, 0xBB8000
	120 Move X1, [X21+24]
	121 Move X9, [X9+1336]
	122 Move W10, [X0+28]
	123 Move X8, [X0+16]
	124 Move X9, [X9]
	125 Add W10, W10, 1
	126 Move [X0+28], W10
	127 Compare X8, 0
	128 JumpIfEqual {179}
	129 NotImplemented "Instruction LDRSW not yet implemented."
	130 Move W11, [X8+24]
	131 NotImplemented "Instruction CMP not yet implemented."
	132 Add W9, W10, 1
	133 Add X8, X8, X10
	134 Move [X0+24], W9
	135 Move [X8+32], X1
	136 Move X8, [X9+32]
	137 Move X8, [X8+192]
	138 Move X2, [X8+112]
	139 Call List`1<Object>.AddWithResize, X0, X1
	140 Move X8, 0xB76000
	141 Move X8, [X8+3696]
	142 Move X0, [X8]
	143 Call 0x1C17F10
	144 Move X8, 0xBB8000
	145 Move X8, [X8+1344]
	146 Move X1, X21
	147 Move X3, X31
	148 Move X22, X0
	149 Move X2, [X8]
	150 Call Action..ctor, X0, X1, X2
	151 Compare X20, 0
	152 JumpIfEqual {179}
	153 Move X0, X20
	154 Move X1, X22
	155 Call RemoteVoiceLink.add_RemoteVoiceRemoved, X0, X1
	156 Move X8, [X19+168]
	157 Compare X8, 0
	158 JumpIfEqual {171}
	159 Move X1, [X21+24]
	160 Move X3, [X8+24]
	161 Move X0, [X8+64]
	162 Move X2, [X8+40]
	163 Move X20, [X31+48]
	164 Move X19, [X31+56]
	165 Move X22, [X31+32]
	166 Move X21, [X31+40]
	167 Move X24, [X31+16]
	168 Move X23, [X31+24]
	169 Move X30, [X31+64]
	170 CallNoReturn X3
	171 Move X20, [X31+48]
	172 Move X19, [X31+56]
	173 Move X22, [X31+32]
	174 Move X21, [X31+40]
	175 Move X24, [X31+16]
	176 Move X23, [X31+24]
	177 Move X30, [X31+64]
	178 Return 
	179 Call 0x1C17F20
	180 Call 0x1C17F28
	181 Call 0x1C17F44
	182 Move X1, X31
	183 Call 0x1C17DEC

Method: System.Boolean AddRecorder(Photon.Voice.Unity.Recorder rec)

Disassembly:
	0x0357DD0C LDRB W8, [X21 + 0xEB2]
	0x0357DD10 MOV X19, X1
	0x0357DD14 MOV X20, X0
	0x0357DD18 TBNZ X8, 0x0, 0x357DD30
	0x0357DD1C ADRP X0, 0xBB9000
	0x0357DD20 LDR X0, [X0 + 0x4B8]
	0x0357DD24 BL 0x1C16CF4
	0x0357DD28 MOVZ W8, 0x1
	0x0357DD2C STRB W8, [X21 + 0xEB2]
	0x0357DD30 ADRP X24, 0xBB9000
	0x0357DD34 LDR X21, [X20 + 0xA8]!
	0x0357DD38 LDR X24, [X24 + 0x4B8]
	0x0357DD3C MOV X0, X21
	0x0357DD40 MOV X1, X19
	0x0357DD44 MOV X2, X31
	0x0357DD48 BL 0x33C0FDC
	0x0357DD4C CBZ X0, 0x357DD6C
	0x0357DD50 LDR X23, [X24]
	0x0357DD54 MOV X22, X0
	0x0357DD58 MOV X1, X23
	0x0357DD5C BL 0x1C16E00
	0x0357DD60 MOV X1, X0
	0x0357DD64 CBNZ X0, 0x357DD70
	0x0357DD68 B 0x357DD9C
	0x0357DD6C MOV X1, X31
	0x0357DD70 MOV X0, X20
	0x0357DD74 MOV X2, X21
	0x0357DD78 BL 0x1C24138
	0x0357DD7C CMP X21, X0
	0x0357DD80 MOV X21, X0
	0x0357DD84 B.NE 0x357DD3C
	0x0357DD88 LDP X20, X19, [X31 + 0x30]
	0x0357DD8C LDP X22, X21, [X31 + 0x20]
	0x0357DD90 LDP X24, X23, [X31 + 0x10]
	0x0357DD94 LDR X30, [X31], #0x40
	0x0357DD98 RET
	0x0357DD9C MOV X0, X22
	0x0357DDA0 MOV X1, X23
	0x0357DDA4 BL 0x1C171E0
	0x0357DDA8 STR X30, [X31 - 0x40]!
	0x0357DDAC STP X24, X23, [X31 + 0x10]
	0x0357DDB0 STP X22, X21, [X31 + 0x20]
	0x0357DDB4 STP X20, X19, [X31 + 0x30]
	0x0357DDB8 ADRP X21, 0xE62000
	0x0357DDBC LDRB W8, [X21 + 0xEB3]
	0x0357DDC0 MOV X19, X1
	0x0357DDC4 MOV X20, X0
	0x0357DDC8 TBNZ X8, 0x0, 0x357DDE0
	0x0357DDCC ADRP X0, 0xBB9000
	0x0357DDD0 LDR X0, [X0 + 0x508]
	0x0357DDD4 BL 0x1C16CF4
	0x0357DDD8 MOVZ W8, 0x1
	0x0357DDDC STRB W8, [X21 + 0xEB3]
	0x0357DDE0 ADRP X24, 0xBB9000
	0x0357DDE4 LDR X21, [X20 + 0xB0]!
	0x0357DDE8 LDR X24, [X24 + 0x508]
	0x0357DDEC MOV X0, X21
	0x0357DDF0 MOV X1, X19
	0x0357DDF4 MOV X2, X31
	0x0357DDF8 BL 0x33C0DE4
	0x0357DDFC CBZ X0, 0x357DE1C
	0x0357DE00 LDR X23, [X24]
	0x0357DE04 MOV X22, X0
	0x0357DE08 MOV X1, X23
	0x0357DE0C BL 0x1C16E00
	0x0357DE10 MOV X1, X0
	0x0357DE14 CBNZ X0, 0x357DE20
	0x0357DE18 B 0x357DE4C
	0x0357DE1C MOV X1, X31
	0x0357DE20 MOV X0, X20
	0x0357DE24 MOV X2, X21
	0x0357DE28 BL 0x1C24138
	0x0357DE2C CMP X21, X0
	0x0357DE30 MOV X21, X0
	0x0357DE34 B.NE 0x357DDEC
	0x0357DE38 LDP X20, X19, [X31 + 0x30]
	0x0357DE3C LDP X22, X21, [X31 + 0x20]
	0x0357DE40 LDP X24, X23, [X31 + 0x10]
	0x0357DE44 LDR X30, [X31], #0x40
	0x0357DE48 RET
	0x0357DE4C MOV X0, X22
	0x0357DE50 MOV X1, X23
	0x0357DE54 BL 0x1C171E0
	0x0357DE58 STR X30, [X31 - 0x40]!
	0x0357DE5C STP X24, X23, [X31 + 0x10]
	0x0357DE60 STP X22, X21, [X31 + 0x20]
	0x0357DE64 STP X20, X19, [X31 + 0x30]
	0x0357DE68 ADRP X21, 0xE62000
	0x0357DE6C LDRB W8, [X21 + 0xEB4]
	0x0357DE70 MOV X19, X1
	0x0357DE74 MOV X20, X0
	0x0357DE78 TBNZ X8, 0x0, 0x357DE90
	0x0357DE7C ADRP X0, 0xBB9000
	0x0357DE80 LDR X0, [X0 + 0x508]
	0x0357DE84 BL 0x1C16CF4
	0x0357DE88 MOVZ W8, 0x1
	0x0357DE8C STRB W8, [X21 + 0xEB4]
	0x0357DE90 ADRP X24, 0xBB9000
	0x0357DE94 LDR X21, [X20 + 0xB0]!
	0x0357DE98 LDR X24, [X24 + 0x508]
	0x0357DE9C MOV X0, X21
	0x0357DEA0 MOV X1, X19
	0x0357DEA4 MOV X2, X31
	0x0357DEA8 BL 0x33C0FDC
	0x0357DEAC CBZ X0, 0x357DECC
	0x0357DEB0 LDR X23, [X24]
	0x0357DEB4 MOV X22, X0
	0x0357DEB8 MOV X1, X23
	0x0357DEBC BL 0x1C16E00
	0x0357DEC0 MOV X1, X0
	0x0357DEC4 CBNZ X0, 0x357DED0
	0x0357DEC8 B 0x357DEFC
	0x0357DECC MOV X1, X31
	0x0357DED0 MOV X0, X20
	0x0357DED4 MOV X2, X21
	0x0357DED8 BL 0x1C24138
	0x0357DEDC CMP X21, X0
	0x0357DEE0 MOV X21, X0
	0x0357DEE4 B.NE 0x357DE9C
	0x0357DEE8 LDP X20, X19, [X31 + 0x30]
	0x0357DEEC LDP X22, X21, [X31 + 0x20]
	0x0357DEF0 LDP X24, X23, [X31 + 0x10]
	0x0357DEF4 LDR X30, [X31], #0x40
	0x0357DEF8 RET
	0x0357DEFC MOV X0, X22
	0x0357DF00 MOV X1, X23
	0x0357DF04 BL 0x1C171E0
	0x0357DF08 STR X30, [X31 - 0x10]!
	0x0357DF0C LDR X8, [X0 + 0x40]
	0x0357DF10 CBZ X8, 0x357DF20
	0x0357DF14 LDR X0, [X8 + 0x10]
	0x0357DF18 LDR X30, [X31], #0x10
	0x0357DF1C RET
	0x0357DF20 BL 0x1C16F20
	0x0357DF24 LDR X0, [X0 + 0x48]
	0x0357DF28 RET
	0x0357DF2C LDR V0, [X0 + 0xB8]
	0x0357DF30 RET
	0x0357DF34 STR S0, [X0 + 0xB8]
	0x0357DF38 RET
	0x0357DF3C LDR V0, [X0 + 0xBC]
	0x0357DF40 RET
	0x0357DF44 STR S0, [X0 + 0xBC]
	0x0357DF48 RET
	0x0357DF4C LDR V0, [X0 + 0xC0]
	0x0357DF50 RET
	0x0357DF54 STR S0, [X0 + 0xC0]
	0x0357DF58 RET
	0x0357DF5C LDR X0, [X0 + 0x70]
	0x0357DF60 RET
	0x0357DF64 STR X1, [X0 + 0x70]
	0x0357DF68 RET
	0x0357DF6C LDR X0, [X0 + 0x80]
	0x0357DF70 RET
	0x0357DF74 STR X1, [X0 + 0x80]
	0x0357DF78 RET
	0x0357DF7C LDRB W0, [X0 + 0x88]
	0x0357DF80 RET
	0x0357DF84 STR X30, [X31 - 0x20]!
	0x0357DF88 STP X20, X19, [X31 + 0x10]
	0x0357DF8C ADRP X19, 0xE62000
	0x0357DF90 ADRP X20, 0xBB9000
	0x0357DF94 LDRB W8, [X19 + 0xEB5]
	0x0357DF98 LDR X20, [X20 + 0x510]
	0x0357DF9C TBNZ X8, 0x0, 0x357DFB4
	0x0357DFA0 ADRP X0, 0xBB9000
	0x0357DFA4 LDR X0, [X0 + 0x510]
	0x0357DFA8 BL 0x1C16CF4
	0x0357DFAC MOVZ W8, 0x1
	0x0357DFB0 STRB W8, [X19 + 0xEB5]
	0x0357DFB4 LDR X0, [X20]
	0x0357DFB8 LDP X20, X19, [X31 + 0x10]
	0x0357DFBC MOV X1, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xE63000
	006 Move W8, [X21+3775]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {33}
	013 Move X0, 0xB7C000
	014 Move X0, [X0+840]
	015 Call 0x1C17CF4
	016 Move X0, 0xBBA000
	017 Move X0, [X0+1144]
	018 Call 0x1C17CF4
	019 Move X0, 0xBBA000
	020 Move X0, [X0+1152]
	021 Call 0x1C17CF4
	022 Move X0, 0xB77000
	023 Move X0, [X0+2512]
	024 Call 0x1C17CF4
	025 Move X0, 0xBBA000
	026 Move X0, [X0+1160]
	027 Call 0x1C17CF4
	028 Move X0, 0xBBA000
	029 Move X0, [X0+1168]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X21+3775], W8
	033 Move X0, [X20+152]
	034 Compare X0, 0
	035 JumpIfEqual {191}
	036 Move X8, 0xBBA000
	037 Move X8, [X8+1152]
	038 Move X1, X19
	039 Move X2, [X8]
	040 Call List`1<Object>.Contains, X0, X1
	041 Move TEMP, X0
	042 And TEMP, TEMP, 1
	043 Compare TEMP, 1
	044 JumpIfNotEqual {90}
	045 Move X8, [X20+64]
	046 Compare X8, 0
	047 JumpIfEqual {191}
	048 Move X20, [X8+24]
	049 Move X8, 0xB77000
	050 Move X8, [X8+2512]
	051 Move W1, 1
	052 Move X0, [X8]
	053 Call 0x1C17D6C
	054 Compare X0, 0
	055 JumpIfEqual {191}
	056 Move X21, X0
	057 Compare X19, 0
	058 JumpIfEqual {65}
	059 Move X8, [X21]
	060 Move X0, X19
	061 Move X1, [X8+64]
	062 Call 0x1C17E00
	063 Compare X0, 0
	064 JumpIfEqual {193}
	065 Move W8, [X21+24]
	066 Compare W8, 0
	067 JumpIfEqual {192}
	068 Move [X21+32], X19
	069 Compare X20, 0
	070 JumpIfEqual {191}
	071 Move X9, 0xB7C000
	072 Move X8, [X20]
	073 Move X9, [X9+840]
	074 Move X10, 0xBBA000
	075 Move X1, [X9]
	076 Move X10, [X10+1168]
	077 NotImplemented "Instruction LDRH not yet implemented."
	078 Move X19, [X10]
	079 Compare X9, 0
	080 JumpIfEqual {87}
	081 Move X10, [X8+176]
	082 Add X10, X10, 8
	083 NotImplemented "Instruction LDUR not yet implemented."
	084 NotImplemented "Instruction CMP not yet implemented."
	085 Subtract X9, X9, 1
	086 Add X10, X10, 16
	087 Move W2, 1
	088 Move X0, X20
	089 Call 0x1C5D788
	090 Compare X19, 0
	091 JumpIfEqual {191}
	092 Move X0, X19
	093 Move X1, X20
	094 Call Recorder.Init, X0, X1
	095 Move TEMP, X0
	096 And TEMP, TEMP, 1
	097 Compare TEMP, 1
	098 JumpIfNotEqual {118}
	099 Move X0, [X20+152]
	100 Compare X0, 0
	101 JumpIfEqual {191}
	102 Move X9, 0xBBA000
	103 Move X9, [X9+1144]
	104 Move W10, [X0+28]
	105 Move X8, [X0+16]
	106 Move X9, [X9]
	107 Add W10, W10, 1
	108 Move [X0+28], W10
	109 Compare X8, 0
	110 JumpIfEqual {191}
	111 NotImplemented "Instruction LDRSW not yet implemented."
	112 Move W11, [X8+24]
	113 NotImplemented "Instruction CMP not yet implemented."
	114 Add W9, W10, 1
	115 Add X8, X8, X10
	116 Move [X0+24], W9
	117 Move [X8+32], X19
	118 Move X8, [X20+64]
	119 Compare X8, 0
	120 JumpIfEqual {191}
	121 Move X20, [X8+24]
	122 Move X8, 0xB77000
	123 Move X8, [X8+2512]
	124 Move W1, 1
	125 Move X0, [X8]
	126 Call 0x1C17D6C
	127 Compare X0, 0
	128 JumpIfEqual {191}
	129 Move X8, [X0]
	130 Move X21, X0
	131 Move X0, X19
	132 Move X1, [X8+64]
	133 Call 0x1C17E00
	134 Compare X0, 0
	135 JumpIfEqual {193}
	136 Move W8, [X21+24]
	137 Compare W8, 0
	138 JumpIfEqual {192}
	139 Move [X21+32], X19
	140 Compare X20, 0
	141 JumpIfEqual {191}
	142 Move X9, 0xB7C000
	143 Move X8, [X20]
	144 Move X9, [X9+840]
	145 Move X10, 0xBBA000
	146 Move X1, [X9]
	147 Move X10, [X10+1160]
	148 NotImplemented "Instruction LDRH not yet implemented."
	149 Move X19, [X10]
	150 Compare X9, 0
	151 JumpIfEqual {158}
	152 Move X10, [X8+176]
	153 Add X10, X10, 8
	154 NotImplemented "Instruction LDUR not yet implemented."
	155 NotImplemented "Instruction CMP not yet implemented."
	156 Subtract X9, X9, 1
	157 Add X10, X10, 16
	158 Move W2, 1
	159 Move X0, X20
	160 Call 0x1C5D788
	161 Move W9, [X10]
	162 Add W9, W9, 1
	163 Add X8, X8, W9
	164 Add X0, X8, 312
	165 Move X8, [X0]
	166 Move X4, [X0+8]
	167 Move W1, 1
	168 Move X8, [X9+32]
	169 Move X1, X19
	170 Move X8, [X8+192]
	171 Move X2, [X8+112]
	172 Call List`1<Object>.AddWithResize, X0, X1
	173 Move W0, 1
	174 Move W9, [X10]
	175 Add W9, W9, 1
	176 Add X8, X8, W9
	177 Add X0, X8, 312
	178 Move X8, [X0]
	179 Move X4, [X0+8]
	180 Move W1, 2
	181 Move X0, X20
	182 Move X2, X19
	183 Move X3, X21
	184 NotImplemented "Instruction BLR not yet implemented."
	185 Move W0, W31
	186 Move X20, [X31+16]
	187 Move X19, [X31+24]
	188 Move X30, [X31+32]
	189 Move X21, [X31+40]
	190 Return X0
	191 Call 0x1C17F20
	192 Call 0x1C17F28
	193 Call 0x1C17F44
	194 Move X1, X31
	195 Call 0x1C17DEC

Method: System.Void RemoveRecorder(Photon.Voice.Unity.Recorder rec)

Disassembly:
	0x0357A8B0 ADRP X10, 0xBBC000
	0x0357A8B4 LDR X1, [X9]
	0x0357A8B8 LDR X10, [X10 + 0x418]
	0x0357A8BC LDRH W9, [X8 + 0x12E]
	0x0357A8C0 LDR X24, [X10]
	0x0357A8C4 CBZ X9, 0x357A8E8
	0x0357A8C8 LDR X10, [X8 + 0xB0]
	0x0357A8CC ADD X10, X10, 0x8
	0x0357A8D0 LDUR X11, [X10 - 0x8]
	0x0357A8D4 CMP X11, X1
	0x0357A8D8 B.EQ 0x357A93C
	0x0357A8DC SUBS X9, X9, 0x1
	0x0357A8E0 ADD X10, X10, 0x10
	0x0357A8E4 B.NE 0x357A8D0
	0x0357A8E8 MOVZ W2, 0x1
	0x0357A8EC MOV X0, X21
	0x0357A8F0 BL 0x1C5C788
	0x0357A8F4 B 0x357A94C
	0x0357A8F8 LDR W9, [X10]
	0x0357A8FC ADD W9, W9, 0x1
	0x0357A900 ADD X8, X8, W9, 0x4, SXTW
	0x0357A904 ADD X0, X8, 0x138
	0x0357A908 LDP X5, X4, [X0]
	0x0357A90C MOV X0, X21
	0x0357A910 MOV X2, X20
	0x0357A914 MOV X3, X19
	0x0357A918 LDP X20, X19, [X31 + 0x70]
	0x0357A91C LDP X22, X21, [X31 + 0x60]
	0x0357A920 LDP X24, X23, [X31 + 0x50]
	0x0357A924 LDP X26, X25, [X31 + 0x40]
	0x0357A928 LDP X28, X27, [X31 + 0x30]
	0x0357A92C LDP X29, X30, [X31 + 0x20]
	0x0357A930 MOVZ W1, 0x1
	0x0357A934 ADD X31, X31, 0x80
	0x0357A938 BR X5
	0x0357A93C LDR W9, [X10]
	0x0357A940 ADD W9, W9, 0x1
	0x0357A944 ADD X8, X8, W9, 0x4, SXTW
	0x0357A948 ADD X0, X8, 0x138
	0x0357A94C LDP X8, X4, [X0]
	0x0357A950 MOVZ W1, 0x3
	0x0357A954 MOV X0, X21
	0x0357A958 MOV X2, X24
	0x0357A95C MOV X3, X23
	0x0357A960 BLR X8
	0x0357A964 CBZ X22, 0x357AC6C

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xE66000
	007 Move X22, 0xB7A000
	008 Move W8, [X21+3776]
	009 Move X22, [X22+1432]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xBBD000
	017 Move X0, [X0+968]
	018 Call 0x1C17CF4
	019 Move X0, 0xB7A000
	020 Move X0, [X0+1432]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X21+3776], W8
	024 Move X0, [X22]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Move X0, X19
	030 Move X1, X31
	031 Move X2, X31
	032 Call Object.op_Inequality, X0, X1
	033 Move TEMP, X0
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfNotEqual {56}
	037 Compare X19, 0
	038 JumpIfEqual {62}
	039 Move X0, X19
	040 Call Recorder.StopRecording, X0
	041 Move [X19+80], X31
	042 Move X0, [X20+152]
	043 Compare X0, 0
	044 JumpIfEqual {62}
	045 Move X8, 0xBBD000
	046 Move X8, [X8+968]
	047 Move X1, X19
	048 Move X20, [X31+32]
	049 Move X19, [X31+40]
	050 Move X22, [X31+16]
	051 Move X21, [X31+24]
	052 Move X2, [X8]
	053 Move X30, [X31+48]
	054 Call List`1<Object>.Remove, X0, X1
	055 Return 
	056 Move X20, [X31+32]
	057 Move X19, [X31+40]
	058 Move X22, [X31+16]
	059 Move X21, [X31+24]
	060 Move X30, [X31+48]
	061 Return 
	062 Call 0x1C17F20

Method: System.Void OnOperationResponseReceived(ExitGames.Client.Photon.OperationResponse operationResponse)

Disassembly:
	0x03580030 LDR X0, [X19 + 0x40]
	0x03580034 CBZ X0, 0x35800D8
	0x03580038 LDRB W1, [X19 + 0x29]
	0x0358003C MOV X2, X31
	0x03580040 BL 0x3568718
	0x03580044 LDR X0, [X19 + 0x40]
	0x03580048 CBZ X0, 0x35800D8
	0x0358004C LDRB W1, [X19 + 0x35]
	0x03580050 MOV X2, X31
	0x03580054 BL 0x35687E0
	0x03580058 LDR X0, [X19 + 0x40]
	0x0358005C CBZ X0, 0x35800D8
	0x03580060 LDRB W1, [X19 + 0x37]
	0x03580064 MOV X2, X31
	0x03580068 BL 0x356883C
	0x0358006C LDR X0, [X19 + 0x40]
	0x03580070 CBZ X0, 0x35800D8
	0x03580074 LDRB W1, [X19 + 0x2A]
	0x03580078 MOV X2, X31
	0x0358007C BL 0x3568898
	0x03580080 LDR X0, [X19 + 0x40]
	0x03580084 CBZ X0, 0x35800D8
	0x03580088 LDR W1, [X19 + 0x2C]
	0x0358008C MOV X2, X31
	0x03580090 BL 0x35688F4
	0x03580094 LDR X0, [X19 + 0x40]
	0x03580098 CBZ X0, 0x35800D8
	0x0358009C LDR W1, [X19 + 0x30]
	0x035800A0 MOV X2, X31
	0x035800A4 BL 0x3568A98
	0x035800A8 LDR X0, [X19 + 0x40]
	0x035800AC CBZ X0, 0x35800D8
	0x035800B0 LDRB W1, [X19 + 0x34]
	0x035800B4 MOV X2, X31
	0x035800B8 BL 0x3568C98
	0x035800BC LDR X0, [X19 + 0x40]
	0x035800C0 CBZ X0, 0x35800D8
	0x035800C4 LDRB W1, [X19 + 0x36]
	0x035800C8 LDP X20, X19, [X31 + 0x10]
	0x035800CC MOV X2, X31
	0x035800D0 LDR X30, [X31], #0x20
	0x035800D4 B 0x3568CF4
	0x035800D8 BL 0x1C16F20
	0x035800DC LDRB W0, [X0 + 0x29]
	0x035800E0 RET
	0x035800E4 LDRB W9, [X0 + 0x29]
	0x035800E8 AND W8, W1, 0x1
	0x035800EC CMP W9, W8
	0x035800F0 B.NE 0x35800F8
	0x035800F4 RET
	0x035800F8 STRB W8, [X0 + 0x29]
	0x035800FC B 0x357FF78
	0x03580100 LDR W0, [X0 + 0x38]
	0x03580104 RET
	0x03580108 LDR W8, [X0 + 0x38]
	0x0358010C CMP W8, W1
	0x03580110 B.NE 0x3580118
	0x03580114 RET
	0x03580118 STR W1, [X0 + 0x38]
	0x0358011C B 0x357FF78
	0x03580120 LDRB W0, [X0 + 0x37]
	0x03580124 RET
	0x03580128 STP X30, X19, [X31 - 0x10]!
	0x0358012C LDRB W9, [X0 + 0x37]
	0x03580130 AND W8, W1, 0x1
	0x03580134 CMP W9, W8
	0x03580138 B.NE 0x3580144
	0x0358013C LDP X30, X19, [X31], #0x10
	0x03580140 RET
	0x03580144 MOV X19, X0
	0x03580148 STRB W8, [X0 + 0x37]
	0x0358014C BL 0x357FF78
	0x03580150 MOV X0, X19
	0x03580154 LDP X30, X19, [X31], #0x10
	0x03580158 B 0x358015C
	0x0358015C STR X30, [X31 - 0x30]!
	0x03580160 STP X22, X21, [X31 + 0x10]
	0x03580164 STP X20, X19, [X31 + 0x20]
	0x03580168 ADRP X20, 0xE5F000
	0x0358016C LDRB W8, [X20 + 0xED8]
	0x03580170 MOV X19, X0
	0x03580174 TBNZ X8, 0x0, 0x35801A4
	0x03580178 ADRP X0, 0xB73000
	0x0358017C LDR X0, [X0 + 0x9C8]
	0x03580180 BL 0x1C16CF4
	0x03580184 ADRP X0, 0xB78000
	0x03580188 LDR X0, [X0 + 0x348]
	0x0358018C BL 0x1C16CF4
	0x03580190 ADRP X0, 0xBB6000
	0x03580194 LDR X0, [X0 + 0x620]
	0x03580198 BL 0x1C16CF4
	0x0358019C MOVZ W8, 0x1
	0x035801A0 STRB W8, [X20 + 0xED8]
	0x035801A4 LDR X9, [X19 + 0x20]
	0x035801A8 CBZ X9, 0x35802C0
	0x035801AC ADRP X8, 0xB73000
	0x035801B0 LDR X8, [X8 + 0x9C8]
	0x035801B4 LDR X20, [X9 + 0x18]
	0x035801B8 LDR X21, [X8]
	0x035801BC LDR X8, [X21 + 0x38]
	0x035801C0 CBNZ X8, 0x35801D0
	0x035801C4 MOV X0, X21
	0x035801C8 BL 0x1C5C6E0
	0x035801CC LDR X8, [X21 + 0x38]
	0x035801D0 LDR X0, [X8 + 0x10]
	0x035801D4 LDRB W8, [X0 + 0x135]
	0x035801D8 TBNZ X8, 0x0, 0x35801E0
	0x035801DC BL 0x1C5C684
	0x035801E0 LDR W8, [X0 + 0xE0]
	0x035801E4 CBNZ W8, 0x35801EC
	0x035801E8 BL 0x1C16DFC
	0x035801EC LDR X8, [X21 + 0x38]
	0x035801F0 LDR X0, [X8 + 0x10]
	0x035801F4 LDRB W8, [X0 + 0x135]
	0x035801F8 TBNZ X8, 0x0, 0x3580200
	0x035801FC BL 0x1C5C684
	0x03580200 CBZ X20, 0x35802C0
	0x03580204 ADRP X9, 0xB78000
	0x03580208 ADRP X11, 0xBB6000
	0x0358020C LDR X9, [X9 + 0x348]
	0x03580210 LDR X10, [X0 + 0xB8]
	0x03580214 LDR X8, [X20]
	0x03580218 LDR X11, [X11 + 0x620]
	0x0358021C LDR X1, [X9]
	0x03580220 LDR X21, [X10]
	0x03580224 LDRH W9, [X8 + 0x12E]
	0x03580228 LDR X22, [X11]
	0x0358022C CBZ X9, 0x3580250
	0x03580230 LDR X10, [X8 + 0xB0]
	0x03580234 ADD X10, X10, 0x8
	0x03580238 LDUR X11, [X10 - 0x8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xE60000
	007 Move W8, [X20+3777]
	008 Move X21, X1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {31}
	014 Move X0, 0xB75000
	015 Move X0, [X0+2520]
	016 Call 0x1C17CF4
	017 Move X0, 0xB79000
	018 Move X0, [X0+840]
	019 Call 0x1C17CF4
	020 Move X0, 0xB78000
	021 Move X0, [X0+1576]
	022 Call 0x1C17CF4
	023 Move X0, 0xB74000
	024 Move X0, [X0+2512]
	025 Call 0x1C17CF4
	026 Move X0, 0xBB7000
	027 Move X0, [X0+80]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X20+3777], W8
	031 Compare X21, 0
	032 JumpIfEqual {141}
	033 NotImplemented "Instruction LDRH not yet implemented."
	034 Compare W8, 0
	035 JumpIfEqual {135}
	036 Move W9, 0x7FF8
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move W8, [X21+16]
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Move X8, [X19+64]
	041 Compare X8, 0
	042 JumpIfEqual {141}
	043 Move X19, [X8+24]
	044 Move X8, 0xB74000
	045 Move X8, [X8+2512]
	046 Move W1, 3
	047 Move X0, [X8]
	048 Call 0x1C17D6C
	049 Move X9, 0xB75000
	050 Move W8, [X21+16]
	051 Move X9, [X9+2520]
	052 Move X20, X0
	053 Add X1, X31, 12
	054 Move [X31+12], W8
	055 Move X0, [X9]
	056 Call 0x1C17E04
	057 Compare X20, 0
	058 JumpIfEqual {141}
	059 Move X22, X0
	060 Compare X0, 0
	061 JumpIfEqual {68}
	062 Move X8, [X20]
	063 Move X0, X22
	064 Move X1, [X8+64]
	065 Call 0x1C17E00
	066 Compare X0, 0
	067 JumpIfEqual {143}
	068 Move W8, [X20+24]
	069 Compare W8, 0
	070 JumpIfEqual {142}
	071 Move [X20+32], X22
	072 Move X9, 0xB78000
	073 NotImplemented "Instruction LDRH not yet implemented."
	074 Move X9, [X9+1576]
	075 Add X1, X31, 8
	076 NotImplemented "Instruction STRH not yet implemented."
	077 Move X0, [X9]
	078 Call 0x1C17E04
	079 Move X22, X0
	080 Compare X0, 0
	081 JumpIfEqual {88}
	082 Move X8, [X20]
	083 Move X0, X22
	084 Move X1, [X8+64]
	085 Call 0x1C17E00
	086 Compare X0, 0
	087 JumpIfEqual {143}
	088 Move W8, [X20+24]
	089 NotImplemented "Instruction CMP not yet implemented."
	090 Move [X20+40], X22
	091 Move X21, [X21+24]
	092 Compare X21, 0
	093 JumpIfEqual {101}
	094 Move X8, [X20]
	095 Move X0, X21
	096 Move X1, [X8+64]
	097 Call 0x1C17E00
	098 Compare X0, 0
	099 JumpIfEqual {143}
	100 Move W8, [X20+24]
	101 NotImplemented "Instruction CMP not yet implemented."
	102 Move [X20+48], X21
	103 Compare X19, 0
	104 JumpIfEqual {141}
	105 Move X9, 0xB79000
	106 Move X8, [X19]
	107 Move X9, [X9+840]
	108 Move X10, 0xBB7000
	109 Move X1, [X9]
	110 Move X10, [X10+80]
	111 NotImplemented "Instruction LDRH not yet implemented."
	112 Move X21, [X10]
	113 Compare X9, 0
	114 JumpIfEqual {121}
	115 Move X10, [X8+176]
	116 Add X10, X10, 8
	117 NotImplemented "Instruction LDUR not yet implemented."
	118 NotImplemented "Instruction CMP not yet implemented."
	119 Subtract X9, X9, 1
	120 Add X10, X10, 16
	121 Move W2, 1
	122 Move X0, X19
	123 Call 0x1C5D788
	124 Move W9, [X10]
	125 Add W9, W9, 1
	126 Add X8, X8, W9
	127 Add X0, X8, 312
	128 Move X8, [X0]
	129 Move X4, [X0+8]
	130 Move W1, 1
	131 Move X0, X19
	132 Move X2, X21
	133 Move X3, X20
	134 NotImplemented "Instruction BLR not yet implemented."
	135 Move X20, [X31+32]
	136 Move X19, [X31+40]
	137 Move X22, [X31+16]
	138 Move X21, [X31+24]
	139 Move X30, [X31+48]
	140 Return 
	141 Call 0x1C17F20
	142 Call 0x1C17F28
	143 Call 0x1C17F44
	144 Move X1, X31
	145 Call 0x1C17DEC

Method: System.Void .ctor()

Disassembly:
	0x03574060 LDR X23, [X8]
	0x03574064 MOV X21, X0
	0x03574068 LDR X22, [X9]
	0x0357406C CBZ X23, 0x3574084
	0x03574070 LDR X8, [X21]
	0x03574074 MOV X0, X23
	0x03574078 LDR X1, [X8 + 0x40]
	0x0357407C BL 0x1C16E00
	0x03574080 CBZ X0, 0x3574124
	0x03574084 LDR W8, [X21 + 0x18]
	0x03574088 CBZ W8, 0x3574120
	0x0357408C STR X23, [X21 + 0x20]
	0x03574090 CBZ X20, 0x357411C
	0x03574094 ADRP X10, 0xB84000
	0x03574098 LDR X8, [X20]
	0x0357409C LDR X10, [X10 + 0x348]
	0x035740A0 LDRH W9, [X8 + 0x12E]
	0x035740A4 LDR X1, [X10]
	0x035740A8 CBZ X9, 0x35740CC
	0x035740AC LDR X10, [X8 + 0xB0]
	0x035740B0 ADD X10, X10, 0x8
	0x035740B4 LDUR X11, [X10 - 0x8]
	0x035740B8 CMP X11, X1
	0x035740BC B.EQ 0x35740DC
	0x035740C0 SUBS X9, X9, 0x1
	0x035740C4 ADD X10, X10, 0x10
	0x035740C8 B.NE 0x35740B4
	0x035740CC MOVZ W2, 0x1
	0x035740D0 MOV X0, X20
	0x035740D4 BL 0x1C5C788
	0x035740D8 B 0x35740EC
	0x035740DC LDR W9, [X10]
	0x035740E0 ADD W9, W9, 0x1
	0x035740E4 ADD X8, X8, W9, 0x4, SXTW
	0x035740E8 ADD X0, X8, 0x138
	0x035740EC LDP X8, X4, [X0]
	0x035740F0 MOVZ W1, 0x3
	0x035740F4 MOV X0, X20
	0x035740F8 MOV X2, X22
	0x035740FC MOV X3, X21
	0x03574100 BLR X8
	0x03574104 MOV X0, X19
	0x03574108 LDP X20, X19, [X31 + 0x30]
	0x0357410C LDP X22, X21, [X31 + 0x20]
	0x03574110 LDP X24, X23, [X31 + 0x10]
	0x03574114 LDR X30, [X31], #0x40
	0x03574118 B 0x3573D60
	0x0357411C BL 0x1C16F20
	0x03574120 BL 0x1C16F28
	0x03574124 BL 0x1C16F44
	0x03574128 MOV X1, X31
	0x0357412C BL 0x1C16DEC
	0x03574130 MOVZ W8, 0x1
	0x03574134 STRB W8, [X0 + 0x38]
	0x03574138 B 0x357413C
	0x0357413C STP X30, X21, [X31 - 0x20]!
	0x03574140 STP X20, X19, [X31 + 0x10]
	0x03574144 ADRP X20, 0xE6B000
	0x03574148 ADRP X21, 0xBC2000
	0x0357414C LDRB W8, [X20 + 0xEC6]
	0x03574150 LDR X21, [X21 + 0xE0]
	0x03574154 MOV X19, X0
	0x03574158 TBNZ X8, 0x0, 0x3574170
	0x0357415C ADRP X0, 0xBC2000
	0x03574160 LDR X0, [X0 + 0xE0]
	0x03574164 BL 0x1C16CF4
	0x03574168 MOVZ W8, 0x1
	0x0357416C STRB W8, [X20 + 0xEC6]
	0x03574170 LDR X0, [X21]
	0x03574174 BL 0x1C16F10
	0x03574178 MOV X20, X0
	0x0357417C BL 0x357F23C
	0x03574180 STR X20, [X19 + 0x20]
	0x03574184 MOV X0, X19
	0x03574188 LDP X20, X19, [X31 + 0x10]
	0x0357418C MOV X1, X31
	0x03574190 LDP X30, X21, [X31], #0x20
	0x03574194 B 0x3C36C30
	0x03574198 LDRB W0, [X0 + 0x6B]
	0x0357419C RET
	0x035741A0 STR X30, [X31 - 0x30]!
	0x035741A4 STP X22, X21, [X31 + 0x10]
	0x035741A8 STP X20, X19, [X31 + 0x20]
	0x035741AC ADRP X22, 0xE6B000

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X20, 0xE6C000
	012 Move X27, 0xBC3000
	013 Move X26, 0xBC3000
	014 Move X25, 0xBC3000
	015 Move X24, 0xBC3000
	016 Move X23, 0xBC3000
	017 Move X22, 0xBC3000
	018 Move X21, 0xBC3000
	019 Move X27, [X27+224]
	020 Move X26, [X26+232]
	021 Move W8, [X20+3778]
	022 Move X25, [X25+240]
	023 Move X24, [X24+248]
	024 Move X23, [X23+256]
	025 Move X22, [X22+264]
	026 Move X21, [X21+272]
	027 Move X19, X0
	028 Move TEMP, X8
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfEqual {55}
	032 Move X0, 0xBC3000
	033 Move X0, [X0+256]
	034 Call 0x1C17CF4
	035 Move X0, 0xBC3000
	036 Move X0, [X0+240]
	037 Call 0x1C17CF4
	038 Move X0, 0xBC3000
	039 Move X0, [X0+272]
	040 Call 0x1C17CF4
	041 Move X0, 0xBC3000
	042 Move X0, [X0+248]
	043 Call 0x1C17CF4
	044 Move X0, 0xBC3000
	045 Move X0, [X0+232]
	046 Call 0x1C17CF4
	047 Move X0, 0xBC3000
	048 Move X0, [X0+264]
	049 Call 0x1C17CF4
	050 Move X0, 0xBC3000
	051 Move X0, [X0+224]
	052 Call 0x1C17CF4
	053 Move W8, 1
	054 Move [X20+3778], W8
	055 Move X0, [X27]
	056 Call 0x1C17F10
	057 Move X20, X0
	058 Call VoiceComponentImpl..ctor, X0
	059 Move W8, 1
	060 Move W9, 1000
	061 Move X0, X31
	062 Move [X19+64], X20
	063 Move [X19+88], W8
	064 Move [X19+92], W9
	065 Call Environment.get_TickCount
	066 Move [X19+96], W0
	067 Move X0, [X26]
	068 Call 0x1C17F10
	069 Move X1, [X25]
	070 Move X20, X0
	071 Call List`1<Object>..ctor, X0
	072 Move [X19+120], X20
	073 Move X0, [X24]
	074 Call 0x1C17F10
	075 Move X1, [X23]
	076 Move X20, X0
	077 Call List`1<Object>..ctor, X0
	078 Move [X19+144], X20
	079 Move X0, [X22]
	080 Call 0x1C17F10
	081 Move X1, [X21]
	082 Move X20, X0
	083 Call List`1<Object>..ctor, X0
	084 Move [X19+152], X20
	085 Move X0, X19
	086 Move X20, [X31+64]
	087 Move X19, [X31+72]
	088 Move X22, [X31+48]
	089 Move X21, [X31+56]
	090 Move X24, [X31+32]
	091 Move X23, [X31+40]
	092 Move X26, [X31+16]
	093 Move X25, [X31+24]
	094 Move X1, X31
	095 Move X30, [X31+80]
	096 Move X27, [X31+88]
	097 Call ConnectionHandler..ctor, X0
	098 Return 

