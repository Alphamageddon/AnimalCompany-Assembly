Type: Photon.Voice.Unity.Recorder

Method: System.Void MicrophoneDeviceChangeDetected()

Disassembly:
	0x03574FA8 ADRP X0, 0xBC2000
	0x03574FAC LDR X0, [X0 + 0x1C8]
	0x03574FB0 BL 0x1C16CF4

ISIL:
	001 Move W8, 1
	002 Move [X0+216], W8
	003 Return 

Method: System.Boolean get_TransmitEnabled()

Disassembly:
	0x03575198 LDR X8, [X21 + 0x38]
	0x0357519C LDR X0, [X8 + 0x10]

ISIL:
	001 Move W0, [X0+107]
	002 Return X0

Method: System.Void set_TransmitEnabled(System.Boolean value)

Disassembly:
	0x035751A0 LDRB W8, [X0 + 0x135]
	0x035751A4 TBNZ X8, 0x0, 0x35751AC
	0x035751A8 BL 0x1C5C684
	0x035751AC LDR W8, [X0 + 0xE0]
	0x035751B0 CBNZ W8, 0x35751B8
	0x035751B4 BL 0x1C16DFC
	0x035751B8 LDR X8, [X21 + 0x38]
	0x035751BC LDR X0, [X8 + 0x10]
	0x035751C0 LDRB W8, [X0 + 0x135]
	0x035751C4 TBNZ X8, 0x0, 0x35751CC
	0x035751C8 BL 0x1C5C684
	0x035751CC CBZ X20, 0x3575280
	0x035751D0 ADRP X10, 0xB83000
	0x035751D4 ADRP X11, 0xBC1000
	0x035751D8 LDR X9, [X0 + 0xB8]
	0x035751DC LDR X10, [X10 + 0x348]
	0x035751E0 LDR X8, [X20]
	0x035751E4 LDR X11, [X11 + 0x1D0]
	0x035751E8 LDR X21, [X9]
	0x035751EC LDR X1, [X10]
	0x035751F0 LDRH W9, [X8 + 0x12E]
	0x035751F4 LDR X22, [X11]
	0x035751F8 CBZ X9, 0x357521C
	0x035751FC LDR X10, [X8 + 0xB0]
	0x03575200 ADD X10, X10, 0x8
	0x03575204 LDUR X11, [X10 - 0x8]
	0x03575208 CMP X11, X1
	0x0357520C B.EQ 0x357522C
	0x03575210 SUBS X9, X9, 0x1
	0x03575214 ADD X10, X10, 0x10
	0x03575218 B.NE 0x3575204
	0x0357521C MOVZ W2, 0x1
	0x03575220 MOV X0, X20
	0x03575224 BL 0x1C5C788
	0x03575228 B 0x357523C
	0x0357522C LDR W9, [X10]
	0x03575230 ADD W9, W9, 0x1
	0x03575234 ADD X8, X8, W9, 0x4, SXTW
	0x03575238 ADD X0, X8, 0x138
	0x0357523C LDP X8, X4, [X0]
	0x03575240 MOVZ W1, 0x3
	0x03575244 MOV X0, X20
	0x03575248 MOV X2, X22

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xE6B000
	007 Move W8, [X22+3696]
	008 Move W19, W1
	009 Move X20, X0
	010 And W21, W1, 1
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0xBC1000
	016 Move X0, [X0+2080]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+3696], W8
	020 Move W8, [X20+107]
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Move [X20+107], W21
	023 Move X22, 0xBC1000
	024 Move X22, [X22+2080]
	025 Move X21, [X20+64]
	026 Move X0, [X22]
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {32}
	030 Call 0x1C17DFC
	031 Move X0, [X22]
	032 Move X8, [X0+184]
	033 Move X8, [X8]
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Move X0, [X20+64]
	036 Compare X0, 0
	037 JumpIfEqual {53}
	038 And W1, W19, 1
	039 Move X20, [X31+32]
	040 Move X19, [X31+40]
	041 Move X22, [X31+16]
	042 Move X21, [X31+24]
	043 Move X2, X31
	044 Move X30, [X31+48]
	045 Call LocalVoice.set_TransmitEnabled, X0, X1
	046 Return 
	047 Move X20, [X31+32]
	048 Move X19, [X31+40]
	049 Move X22, [X31+16]
	050 Move X21, [X31+24]
	051 Move X30, [X31+48]
	052 Return 
	053 Call 0x1C17F20

Method: System.Boolean get_Encrypt()

Disassembly:
	0x0357524C MOV X3, X21
	0x03575250 BLR X8
	0x03575254 LDR W8, [X19 + 0x78]
	0x03575258 CMP W8, 0x1
	0x0357525C B.NE 0x3575270
	0x03575260 LDRB W8, [X19 + 0x89]
	0x03575264 CBZ W8, 0x3575270

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+64]
	003 Compare X8, 0
	004 JumpIfEqual {8}
	005 Move W0, [X8+37]
	006 Move X30, [X31+16]
	007 Return X0
	008 Call 0x1C17F20

Method: System.Void set_Encrypt(System.Boolean value)

Disassembly:
	0x03575268 MOVZ W8, 0x1
	0x0357526C STR W8, [X19 + 0xDC]
	0x03575270 LDP X20, X19, [X31 + 0x20]
	0x03575274 LDP X22, X21, [X31 + 0x10]
	0x03575278 LDR X30, [X31], #0x30
	0x0357527C RET
	0x03575280 BL 0x1C16F20
	0x03575284 LDRB W0, [X0 + 0x88]
	0x03575288 RET

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+64]
	003 Compare X8, 0
	004 JumpIfEqual {10}
	005 And W9, W1, 1
	006 Move [X8+37], W9
	007 Move [X0+106], W9
	008 Move X30, [X31+16]
	009 Return 
	010 Call 0x1C17F20

Method: System.Boolean get_DebugEchoMode()

Disassembly:
	0x0357528C STP X30, X21, [X31 - 0x20]!
	0x03575290 STP X20, X19, [X31 + 0x10]
	0x03575294 ADRP X21, 0xE6A000
	0x03575298 LDRB W8, [X21 + 0xE7E]
	0x0357529C MOV X19, X0
	0x035752A0 AND W20, W1, 0x1
	0x035752A4 TBNZ X8, 0x0, 0x35752E0

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+64]
	003 Compare X8, 0
	004 JumpIfEqual {8}
	005 Move W0, [X8+57]
	006 Move X30, [X31+16]
	007 Return X0
	008 Call 0x1C17F20

Method: System.Void set_DebugEchoMode(System.Boolean value)

Disassembly:
	0x035752A8 ADRP X0, 0xB7E000
	0x035752AC LDR X0, [X0 + 0x9C8]
	0x035752B0 BL 0x1C16CF4
	0x035752B4 ADRP X0, 0xBC1000
	0x035752B8 LDR X0, [X0 + 0x1D8]
	0x035752BC BL 0x1C16CF4
	0x035752C0 ADRP X0, 0xB83000
	0x035752C4 LDR X0, [X0 + 0x348]
	0x035752C8 BL 0x1C16CF4
	0x035752CC ADRP X0, 0xBC1000
	0x035752D0 LDR X0, [X0 + 0x1E0]
	0x035752D4 BL 0x1C16CF4
	0x035752D8 MOVZ W8, 0x1
	0x035752DC STRB W8, [X21 + 0xE7E]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X0
	005 Move X0, [X0+64]
	006 Compare X0, 0
	007 JumpIfEqual {17}
	008 And W20, W1, 1
	009 Move W1, W20
	010 Move X2, X31
	011 Call LocalVoice.set_DebugEchoMode, X0, X1
	012 Move [X19+104], W20
	013 Move X20, [X31+16]
	014 Move X19, [X31+24]
	015 Move X30, [X31+32]
	016 Return 
	017 Call 0x1C17F20

Method: System.Boolean get_ReliableMode()

Disassembly:
	0x035752E0 LDRB W8, [X19 + 0x88]
	0x035752E4 CMP W8, W20
	0x035752E8 B.EQ 0x3575430
	0x035752EC LDRB W8, [X19 + 0x89]
	0x035752F0 STRB W20, [X19 + 0x88]
	0x035752F4 CBZ W8, 0x3575430
	0x035752F8 LDR W8, [X19 + 0x78]

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+64]
	003 Compare X8, 0
	004 JumpIfEqual {8}
	005 Move W0, [X8+36]
	006 Move X30, [X31+16]
	007 Return X0
	008 Call 0x1C17F20

Method: System.Void set_ReliableMode(System.Boolean value)

Disassembly:
	0x035752FC CMP W8, 0x1
	0x03575300 B.NE 0x3575430
	0x03575304 LDR X8, [X19 + 0x48]
	0x03575308 CBZ X8, 0x3575340
	0x0357530C ADRP X9, 0xBC1000
	0x03575310 LDR X9, [X9 + 0x1D8]
	0x03575314 LDR X10, [X8]
	0x03575318 LDR X9, [X9]
	0x0357531C LDRB W12, [X10 + 0x130]

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+64]
	003 Compare X8, 0
	004 JumpIfEqual {10}
	005 And W9, W1, 1
	006 Move [X8+36], W9
	007 Move [X0+105], W9
	008 Move X30, [X31+16]
	009 Return 
	010 Call 0x1C17F20

Method: System.Boolean get_VoiceDetection()

Disassembly:
	0x03575320 LDRB W11, [X9 + 0x130]
	0x03575324 CMP W12, W11

ISIL:
	001 Move W0, [X0+40]
	002 Return X0

Method: System.Void set_VoiceDetection(System.Boolean value)

Disassembly:
	0x03575328 B.CC 0x3575340
	0x0357532C LDR X10, [X10 + 0xC8]
	0x03575330 ADD X10, X10, X11, 0x3, LSL
	0x03575334 LDUR X10, [X10 - 0x8]
	0x03575338 CMP X10, X9
	0x0357533C B.EQ 0x357542C
	0x03575340 LDR X9, [X19 + 0x20]
	0x03575344 CBZ X9, 0x357543C
	0x03575348 ADRP X8, 0xB7E000
	0x0357534C LDR X8, [X8 + 0x9C8]
	0x03575350 LDR X19, [X9 + 0x18]
	0x03575354 LDR X20, [X8]
	0x03575358 LDR X8, [X20 + 0x38]
	0x0357535C CBNZ X8, 0x357536C
	0x03575360 MOV X0, X20
	0x03575364 BL 0x1C5C6E0
	0x03575368 LDR X8, [X20 + 0x38]
	0x0357536C LDR X0, [X8 + 0x10]
	0x03575370 LDRB W8, [X0 + 0x135]
	0x03575374 TBNZ X8, 0x0, 0x357537C
	0x03575378 BL 0x1C5C684
	0x0357537C LDR W8, [X0 + 0xE0]
	0x03575380 CBNZ W8, 0x3575388
	0x03575384 BL 0x1C16DFC
	0x03575388 LDR X8, [X20 + 0x38]
	0x0357538C LDR X0, [X8 + 0x10]
	0x03575390 LDRB W8, [X0 + 0x135]
	0x03575394 TBNZ X8, 0x0, 0x357539C
	0x03575398 BL 0x1C5C684
	0x0357539C CBZ X19, 0x357543C
	0x035753A0 ADRP X10, 0xB83000
	0x035753A4 ADRP X11, 0xBC1000
	0x035753A8 LDR X9, [X0 + 0xB8]
	0x035753AC LDR X10, [X10 + 0x348]
	0x035753B0 LDR X8, [X19]
	0x035753B4 LDR X11, [X11 + 0x1E0]
	0x035753B8 LDR X20, [X9]
	0x035753BC LDR X1, [X10]
	0x035753C0 LDRH W9, [X8 + 0x12E]
	0x035753C4 LDR X21, [X11]
	0x035753C8 CBZ X9, 0x35753EC
	0x035753CC LDR X10, [X8 + 0xB0]
	0x035753D0 ADD X10, X10, 0x8
	0x035753D4 LDUR X11, [X10 - 0x8]
	0x035753D8 CMP X11, X1
	0x035753DC B.EQ 0x35753FC
	0x035753E0 SUBS X9, X9, 0x1
	0x035753E4 ADD X10, X10, 0x10
	0x035753E8 B.NE 0x35753D4
	0x035753EC MOVZ W2, 0x1
	0x035753F0 MOV X0, X19
	0x035753F4 BL 0x1C5C788
	0x035753F8 B 0x357540C
	0x035753FC LDR W9, [X10]
	0x03575400 ADD W9, W9, 0x1
	0x03575404 ADD X8, X8, W9, 0x4, SXTW

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xE6B000
	007 Move W8, [X22+3697]
	008 Move W19, W1
	009 Move X20, X0
	010 And W21, W1, 1
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0xBA9000
	016 Move X0, [X0+3920]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+3697], W8
	020 Move X0, X20
	021 Move [X20+40], W21
	022 Call Recorder.get_VoiceDetector, X0
	023 Compare X0, 0
	024 JumpIfEqual {46}
	025 Move X0, X20
	026 Call Recorder.get_VoiceDetector, X0
	027 Compare X0, 0
	028 JumpIfEqual {66}
	029 Move X10, 0xBA9000
	030 Move X8, [X0]
	031 Move X10, [X10+3920]
	032 Move X20, X0
	033 NotImplemented "Instruction LDRH not yet implemented."
	034 Move X1, [X10]
	035 Compare X9, 0
	036 JumpIfEqual {43}
	037 Move X10, [X8+176]
	038 Add X10, X10, 8
	039 NotImplemented "Instruction LDUR not yet implemented."
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Subtract X9, X9, 1
	042 Add X10, X10, 16
	043 Move W2, 1
	044 Move X0, X20
	045 Call 0x1C5D788
	046 Move X20, [X31+32]
	047 Move X19, [X31+40]
	048 Move X22, [X31+16]
	049 Move X21, [X31+24]
	050 Move X30, [X31+48]
	051 Return 
	052 Move W9, [X10]
	053 Add W9, W9, 1
	054 Add X8, X8, W9
	055 Add X0, X8, 312
	056 Move X3, [X0]
	057 Move X2, [X0+8]
	058 And W1, W19, 1
	059 Move X0, X20
	060 Move X20, [X31+32]
	061 Move X19, [X31+40]
	062 Move X22, [X31+16]
	063 Move X21, [X31+24]
	064 Move X30, [X31+48]
	065 CallNoReturn X3
	066 Call 0x1C17F20

Method: System.Single get_VoiceDetectionThreshold()

Disassembly:
	0x035754C8 BL 0x1C5C6E0
	0x035754CC LDR X8, [X21 + 0x38]

ISIL:
	001 Move V0, [X0+44]
	002 Return V0

Method: System.Void set_VoiceDetectionThreshold(System.Single value)

Disassembly:
	0x035754D0 LDR X0, [X8 + 0x10]
	0x035754D4 LDRB W8, [X0 + 0x135]
	0x035754D8 TBNZ X8, 0x0, 0x35754E0
	0x035754DC BL 0x1C5C684
	0x035754E0 LDR W8, [X0 + 0xE0]
	0x035754E4 CBNZ W8, 0x35754EC
	0x035754E8 BL 0x1C16DFC
	0x035754EC LDR X8, [X21 + 0x38]
	0x035754F0 LDR X0, [X8 + 0x10]
	0x035754F4 LDRB W8, [X0 + 0x135]
	0x035754F8 TBNZ X8, 0x0, 0x3575500
	0x035754FC BL 0x1C5C684
	0x03575500 CBZ X20, 0x35755A8
	0x03575504 ADRP X10, 0xB83000
	0x03575508 ADRP X11, 0xBC1000
	0x0357550C LDR X9, [X0 + 0xB8]
	0x03575510 LDR X10, [X10 + 0x348]
	0x03575514 LDR X8, [X20]
	0x03575518 LDR X11, [X11 + 0x1E8]
	0x0357551C LDR X21, [X9]
	0x03575520 LDR X1, [X10]
	0x03575524 LDRH W9, [X8 + 0x12E]
	0x03575528 LDR X22, [X11]
	0x0357552C CBZ X9, 0x3575550
	0x03575530 LDR X10, [X8 + 0xB0]
	0x03575534 ADD X10, X10, 0x8
	0x03575538 LDUR X11, [X10 - 0x8]
	0x0357553C CMP X11, X1
	0x03575540 B.EQ 0x3575560
	0x03575544 SUBS X9, X9, 0x1
	0x03575548 ADD X10, X10, 0x10
	0x0357554C B.NE 0x3575538
	0x03575550 MOVZ W2, 0x1
	0x03575554 MOV X0, X20
	0x03575558 BL 0x1C5C788
	0x0357555C B 0x3575570
	0x03575560 LDR W9, [X10]
	0x03575564 ADD W9, W9, 0x1
	0x03575568 ADD X8, X8, W9, 0x4, SXTW
	0x0357556C ADD X0, X8, 0x138
	0x03575570 LDP X8, X4, [X0]
	0x03575574 MOVZ W1, 0x3
	0x03575578 MOV X0, X20
	0x0357557C MOV X2, X22
	0x03575580 MOV X3, X21
	0x03575584 BLR X8
	0x03575588 LDRB W8, [X19 + 0x89]
	0x0357558C CBZ W8, 0x3575598
	0x03575590 MOVZ W8, 0x1
	0x03575594 STR W8, [X19 + 0xDC]
	0x03575598 LDP X20, X19, [X31 + 0x20]
	0x0357559C LDP X22, X21, [X31 + 0x10]
	0x035755A0 LDR X30, [X31], #0x30
	0x035755A4 RET
	0x035755A8 BL 0x1C16F20
	0x035755AC LDR W0, [X0 + 0x70]
	0x035755B0 RET
	0x035755B4 STR X30, [X31 - 0x30]!
	0x035755B8 STP X22, X21, [X31 + 0x10]
	0x035755BC STP X20, X19, [X31 + 0x20]
	0x035755C0 ADRP X21, 0xE6A000
	0x035755C4 LDRB W8, [X21 + 0xE80]
	0x035755C8 MOV W20, W1
	0x035755CC MOV X19, X0
	0x035755D0 TBNZ X8, 0x0, 0x3575600
	0x035755D4 ADRP X0, 0xB7E000
	0x035755D8 LDR X0, [X0 + 0x9C8]
	0x035755DC BL 0x1C16CF4
	0x035755E0 ADRP X0, 0xB83000
	0x035755E4 LDR X0, [X0 + 0x348]
	0x035755E8 BL 0x1C16CF4
	0x035755EC ADRP X0, 0xBC1000
	0x035755F0 LDR X0, [X0 + 0x1F0]
	0x035755F4 BL 0x1C16CF4
	0x035755F8 MOVZ W8, 0x1
	0x035755FC STRB W8, [X21 + 0xE80]
	0x03575600 LDR W8, [X19 + 0x70]
	0x03575604 CMP W8, W20
	0x03575608 B.EQ 0x3575704
	0x0357560C LDR X9, [X19 + 0x20]
	0x03575610 STR W20, [X19 + 0x70]
	0x03575614 CBZ X9, 0x3575714
	0x03575618 ADRP X8, 0xB7E000
	0x0357561C LDR X8, [X8 + 0x9C8]
	0x03575620 LDR X20, [X9 + 0x18]
	0x03575624 LDR X21, [X8]
	0x03575628 LDR X8, [X21 + 0x38]
	0x0357562C CBNZ X8, 0x357563C
	0x03575630 MOV X0, X21
	0x03575634 BL 0x1C5C6E0
	0x03575638 LDR X8, [X21 + 0x38]
	0x0357563C LDR X0, [X8 + 0x10]
	0x03575640 LDRB W8, [X0 + 0x135]
	0x03575644 TBNZ X8, 0x0, 0x357564C
	0x03575648 BL 0x1C5C684
	0x0357564C LDR W8, [X0 + 0xE0]
	0x03575650 CBNZ W8, 0x3575658
	0x03575654 BL 0x1C16DFC
	0x03575658 LDR X8, [X21 + 0x38]
	0x0357565C LDR X0, [X8 + 0x10]
	0x03575660 LDRB W8, [X0 + 0x135]
	0x03575664 TBNZ X8, 0x0, 0x357566C
	0x03575668 BL 0x1C5C684
	0x0357566C CBZ X20, 0x3575714
	0x03575670 ADRP X10, 0xB83000
	0x03575674 ADRP X11, 0xBC1000
	0x03575678 LDR X9, [X0 + 0xB8]
	0x0357567C LDR X10, [X10 + 0x348]
	0x03575680 LDR X8, [X20]
	0x03575684 LDR X11, [X11 + 0x1F0]
	0x03575688 LDR X21, [X9]
	0x0357568C LDR X1, [X10]
	0x03575690 LDRH W9, [X8 + 0x12E]
	0x03575694 LDR X22, [X11]
	0x03575698 CBZ X9, 0x35756BC
	0x0357569C LDR X10, [X8 + 0xB0]
	0x035756A0 ADD X10, X10, 0x8
	0x035756A4 LDUR X11, [X10 - 0x8]
	0x035756A8 CMP X11, X1
	0x035756AC B.EQ 0x35756CC
	0x035756B0 SUBS X9, X9, 0x1
	0x035756B4 ADD X10, X10, 0x10
	0x035756B8 B.NE 0x35756A4
	0x035756BC MOVZ W2, 0x1
	0x035756C0 MOV X0, X20
	0x035756C4 BL 0x1C5C788
	0x035756C8 B 0x35756DC
	0x035756CC LDR W9, [X10]
	0x035756D0 ADD W9, W9, 0x1
	0x035756D4 ADD X8, X8, W9, 0x4, SXTW
	0x035756D8 ADD X0, X8, 0x138
	0x035756DC LDP X8, X4, [X0]
	0x035756E0 MOVZ W1, 0x3
	0x035756E4 MOV X0, X20
	0x035756E8 MOV X2, X22
	0x035756EC MOV X3, X21
	0x035756F0 BLR X8
	0x035756F4 LDRB W8, [X19 + 0x89]
	0x035756F8 CBZ W8, 0x3575704
	0x035756FC MOVZ W8, 0x1

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xE6B000
	007 Move W8, [X20+3698]
	008 Move V8, V0
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {31}
	014 Move X0, 0xB84000
	015 Move X0, [X0+840]
	016 Call 0x1C17CF4
	017 Move X0, 0xBA9000
	018 Move X0, [X0+3920]
	019 Call 0x1C17CF4
	020 Move X0, 0xB7F000
	021 Move X0, [X0+2512]
	022 Call 0x1C17CF4
	023 Move X0, 0xB7F000
	024 Move X0, [X0+2704]
	025 Call 0x1C17CF4
	026 Move X0, 0xBC2000
	027 Move X0, [X0+424]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X20+3698], W8
	031 Add X0, X19, 44
	032 Move V0, V8
	033 Move X1, X31
	034 Call Single.Equals, X0, V0
	035 Move TEMP, X0
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfEqual {132}
	039 NotImplemented "Instruction FCMP not yet implemented."
	040 Move S0, 1
	041 NotImplemented "Instruction FCMP not yet implemented."
	042 Move X0, X19
	043 Move [X19+44], S8
	044 Call Recorder.get_VoiceDetector, X0
	045 Compare X0, 0
	046 JumpIfEqual {132}
	047 Move X0, X19
	048 Call Recorder.get_VoiceDetector, X0
	049 Compare X0, 0
	050 JumpIfEqual {152}
	051 Move X10, 0xBA9000
	052 Move X8, [X0]
	053 Move V8, [X19+44]
	054 Move X10, [X10+3920]
	055 Move X20, X0
	056 NotImplemented "Instruction LDRH not yet implemented."
	057 Move X1, [X10]
	058 Compare X9, 0
	059 JumpIfEqual {66}
	060 Move X10, [X8+176]
	061 Add X10, X10, 8
	062 NotImplemented "Instruction LDUR not yet implemented."
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Subtract X9, X9, 1
	065 Add X10, X10, 16
	066 Move W2, 3
	067 Move X0, X20
	068 Call 0x1C5D788
	069 Move X8, [X19+32]
	070 Compare X8, 0
	071 JumpIfEqual {152}
	072 Move X19, [X8+24]
	073 Move X8, 0xB7F000
	074 Move X8, [X8+2512]
	075 Move W1, 1
	076 Move X0, [X8]
	077 Call 0x1C17D6C
	078 Move X8, 0xB7F000
	079 Move X8, [X8+2704]
	080 Move X20, X0
	081 Add X1, X31, 12
	082 Move [X31+12], S8
	083 Move X0, [X8]
	084 Call 0x1C17E04
	085 Compare X20, 0
	086 JumpIfEqual {152}
	087 Move X21, X0
	088 Compare X0, 0
	089 JumpIfEqual {96}
	090 Move X8, [X20]
	091 Move X0, X21
	092 Move X1, [X8+64]
	093 Call 0x1C17E00
	094 Compare X0, 0
	095 JumpIfEqual {154}
	096 Move W8, [X20+24]
	097 Compare W8, 0
	098 JumpIfEqual {153}
	099 Move [X20+32], X21
	100 Compare X19, 0
	101 JumpIfEqual {152}
	102 Move X9, 0xB84000
	103 Move X8, [X19]
	104 Move X9, [X9+840]
	105 Move X10, 0xBC2000
	106 Move X1, [X9]
	107 Move X10, [X10+424]
	108 NotImplemented "Instruction LDRH not yet implemented."
	109 Move X21, [X10]
	110 Compare X9, 0
	111 JumpIfEqual {118}
	112 Move X10, [X8+176]
	113 Add X10, X10, 8
	114 NotImplemented "Instruction LDUR not yet implemented."
	115 NotImplemented "Instruction CMP not yet implemented."
	116 Subtract X9, X9, 1
	117 Add X10, X10, 16
	118 Move W2, 1
	119 Move X0, X19
	120 Call 0x1C5D788
	121 Move W9, [X10]
	122 Add W9, W9, 1
	123 Add X8, X8, W9
	124 Add X0, X8, 312
	125 Move X8, [X0]
	126 Move X4, [X0+8]
	127 Move W1, 1
	128 Move X0, X19
	129 Move X2, X21
	130 Move X3, X20
	131 NotImplemented "Instruction BLR not yet implemented."
	132 Move X20, [X31+32]
	133 Move X19, [X31+40]
	134 Move X30, [X31+16]
	135 Move X21, [X31+24]
	136 Move V8, [X31+48]
	137 Return 
	138 Move W9, [X10]
	139 Add W9, W9, 3
	140 Add X8, X8, W9
	141 Add X0, X8, 312
	142 Move X2, [X0]
	143 Move X1, [X0+8]
	144 Move X0, X20
	145 Move X20, [X31+32]
	146 Move X19, [X31+40]
	147 Move X30, [X31+16]
	148 Move X21, [X31+24]
	149 Move V0, V8
	150 Move V8, [X31+48]
	151 CallNoReturn X2
	152 Call 0x1C17F20
	153 Call 0x1C17F28
	154 Call 0x1C17F44
	155 Move X1, X31
	156 Call 0x1C17DEC

Method: System.Int32 get_VoiceDetectionDelayMs()

Disassembly:
	0x03575700 STR W8, [X19 + 0xDC]
	0x03575704 LDP X20, X19, [X31 + 0x20]

ISIL:
	001 Move W0, [X0+48]
	002 Return X0

Method: System.Void set_VoiceDetectionDelayMs(System.Int32 value)

Disassembly:
	0x03575708 LDP X22, X21, [X31 + 0x10]
	0x0357570C LDR X30, [X31], #0x30
	0x03575710 RET
	0x03575714 BL 0x1C16F20
	0x03575718 LDR W0, [X0 + 0x74]
	0x0357571C RET
	0x03575720 SUB X31, X31, 0x40
	0x03575724 STR X30, [X31 + 0x10]
	0x03575728 STP X22, X21, [X31 + 0x20]
	0x0357572C STP X20, X19, [X31 + 0x30]
	0x03575730 ADRP X20, 0xE6A000
	0x03575734 LDRB W8, [X20 + 0xE81]
	0x03575738 MOV W21, W1
	0x0357573C MOV X19, X0
	0x03575740 TBNZ X8, 0x0, 0x3575794
	0x03575744 ADRP X0, 0xB7E000
	0x03575748 LDR X0, [X0 + 0x9C8]
	0x0357574C BL 0x1C16CF4
	0x03575750 ADRP X0, 0xB83000
	0x03575754 LDR X0, [X0 + 0x348]
	0x03575758 BL 0x1C16CF4
	0x0357575C ADRP X0, 0xB7E000
	0x03575760 LDR X0, [X0 + 0x758]
	0x03575764 BL 0x1C16CF4
	0x03575768 ADRP X0, 0xB7E000
	0x0357576C LDR X0, [X0 + 0x9D0]
	0x03575770 BL 0x1C16CF4
	0x03575774 ADRP X0, 0xBC1000
	0x03575778 LDR X0, [X0 + 0x1F8]
	0x0357577C BL 0x1C16CF4
	0x03575780 ADRP X0, 0xBC1000
	0x03575784 LDR X0, [X0 + 0x200]
	0x03575788 BL 0x1C16CF4
	0x0357578C MOVZ W8, 0x1
	0x03575790 STRB W8, [X20 + 0xE81]
	0x03575794 LDR W8, [X19 + 0x74]
	0x03575798 CMP W8, W21
	0x0357579C B.EQ 0x3575A20
	0x035757A0 MOVN W8, 0x176F
	0x035757A4 MOVZ W9, 0xB0C1
	0x035757A8 ADD W8, W21, W8
	0x035757AC MOVK W9, 0x70000
	0x035757B0 CMP W8, W9
	0x035757B4 B.CS 0x3575878
	0x035757B8 LDR X9, [X19 + 0x20]
	0x035757BC STR W21, [X19 + 0x74]
	0x035757C0 CBZ X9, 0x3575A34
	0x035757C4 ADRP X8, 0xB7E000
	0x035757C8 LDR X8, [X8 + 0x9C8]
	0x035757CC LDR X20, [X9 + 0x18]
	0x035757D0 LDR X21, [X8]
	0x035757D4 LDR X8, [X21 + 0x38]
	0x035757D8 CBNZ X8, 0x35757E8
	0x035757DC MOV X0, X21
	0x035757E0 BL 0x1C5C6E0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xE6B000
	006 Move W8, [X21+3699]
	007 Move W19, W1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xBA9000
	014 Move X0, [X0+3920]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+3699], W8
	018 Move W8, [X20+48]
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Move X0, X20
	021 Move [X20+48], W19
	022 Call Recorder.get_VoiceDetector, X0
	023 Compare X0, 0
	024 JumpIfEqual {46}
	025 Move X0, X20
	026 Call Recorder.get_VoiceDetector, X0
	027 Compare X0, 0
	028 JumpIfEqual {64}
	029 Move X10, 0xBA9000
	030 Move X8, [X0]
	031 Move X10, [X10+3920]
	032 Move X20, X0
	033 NotImplemented "Instruction LDRH not yet implemented."
	034 Move X1, [X10]
	035 Compare X9, 0
	036 JumpIfEqual {43}
	037 Move X10, [X8+176]
	038 Add X10, X10, 8
	039 NotImplemented "Instruction LDUR not yet implemented."
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Subtract X9, X9, 1
	042 Add X10, X10, 16
	043 Move W2, 9
	044 Move X0, X20
	045 Call 0x1C5D788
	046 Move X20, [X31+16]
	047 Move X19, [X31+24]
	048 Move X30, [X31+32]
	049 Move X21, [X31+40]
	050 Return 
	051 Move W9, [X10]
	052 Add W9, W9, 9
	053 Add X8, X8, W9
	054 Add X0, X8, 312
	055 Move X3, [X0]
	056 Move X2, [X0+8]
	057 Move X0, X20
	058 Move W1, W19
	059 Move X20, [X31+16]
	060 Move X19, [X31+24]
	061 Move X30, [X31+32]
	062 Move X21, [X31+40]
	063 CallNoReturn X3
	064 Call 0x1C17F20

Method: System.Object get_UserData()

Disassembly:
	0x035757E4 LDR X8, [X21 + 0x38]
	0x035757E8 LDR X0, [X8 + 0x10]

ISIL:
	001 Move X0, [X0+56]
	002 Return X0

Method: System.Void set_UserData(System.Object value)

Disassembly:
	0x035757EC LDRB W8, [X0 + 0x135]
	0x035757F0 TBNZ X8, 0x0, 0x35757F8
	0x035757F4 BL 0x1C5C684
	0x035757F8 LDR W8, [X0 + 0xE0]
	0x035757FC CBNZ W8, 0x3575804
	0x03575800 BL 0x1C16DFC
	0x03575804 LDR X8, [X21 + 0x38]
	0x03575808 LDR X0, [X8 + 0x10]
	0x0357580C LDRB W8, [X0 + 0x135]
	0x03575810 TBNZ X8, 0x0, 0x3575818
	0x03575814 BL 0x1C5C684
	0x03575818 CBZ X20, 0x3575A34
	0x0357581C ADRP X10, 0xB83000
	0x03575820 ADRP X11, 0xBC1000
	0x03575824 LDR X9, [X0 + 0xB8]
	0x03575828 LDR X10, [X10 + 0x348]
	0x0357582C LDR X8, [X20]
	0x03575830 LDR X11, [X11 + 0x1F8]
	0x03575834 LDR X21, [X9]
	0x03575838 LDR X1, [X10]
	0x0357583C LDRH W9, [X8 + 0x12E]
	0x03575840 LDR X22, [X11]
	0x03575844 CBZ X9, 0x3575868
	0x03575848 LDR X10, [X8 + 0xB0]
	0x0357584C ADD X10, X10, 0x8
	0x03575850 LDUR X11, [X10 - 0x8]
	0x03575854 CMP X11, X1
	0x03575858 B.EQ 0x35759BC
	0x0357585C SUBS X9, X9, 0x1
	0x03575860 ADD X10, X10, 0x10
	0x03575864 B.NE 0x3575850
	0x03575868 MOVZ W2, 0x1
	0x0357586C MOV X0, X20
	0x03575870 BL 0x1C5C788
	0x03575874 B 0x35759CC
	0x03575878 LDR X8, [X19 + 0x20]
	0x0357587C CBZ X8, 0x3575A34
	0x03575880 LDR X19, [X8 + 0x18]
	0x03575884 ADRP X8, 0xB7E000
	0x03575888 LDR X8, [X8 + 0x9D0]
	0x0357588C MOVZ W1, 0x3
	0x03575890 LDR X0, [X8]
	0x03575894 BL 0x1C16D6C
	0x03575898 ADRP X22, 0xB7E000
	0x0357589C LDR X22, [X22 + 0x758]
	0x035758A0 MOV X20, X0
	0x035758A4 ADD X1, X31, 0x1C
	0x035758A8 STR W21, [X31 + 0x1C]
	0x035758AC LDR X0, [X22]
	0x035758B0 BL 0x1C16E04
	0x035758B4 CBZ X20, 0x3575A34
	0x035758B8 MOV X21, X0
	0x035758BC CBZ X0, 0x35758D4
	0x035758C0 LDR X8, [X20]
	0x035758C4 MOV X0, X21
	0x035758C8 LDR X1, [X8 + 0x40]
	0x035758CC BL 0x1C16E00
	0x035758D0 CBZ X0, 0x3575A3C
	0x035758D4 LDR W8, [X20 + 0x18]
	0x035758D8 CBZ W8, 0x3575A38
	0x035758DC STR X21, [X20 + 0x20]
	0x035758E0 LDR X0, [X22]
	0x035758E4 MOVZ W8, 0x1770
	0x035758E8 ADD X1, X31, 0x18
	0x035758EC STR W8, [X31 + 0x18]
	0x035758F0 BL 0x1C16E04
	0x035758F4 MOV X21, X0
	0x035758F8 CBZ X0, 0x3575910
	0x035758FC LDR X8, [X20]
	0x03575900 MOV X0, X21
	0x03575904 LDR X1, [X8 + 0x40]
	0x03575908 BL 0x1C16E00
	0x0357590C CBZ X0, 0x3575A3C
	0x03575910 LDR W8, [X20 + 0x18]
	0x03575914 CMP W8, 0x1
	0x03575918 B.LS 0x3575A38
	0x0357591C STR X21, [X20 + 0x28]
	0x03575920 LDR X0, [X22]
	0x03575924 MOVZ W8, 0xC830
	0x03575928 MOVK W8, 0x70000
	0x0357592C ADD X1, X31, 0xC
	0x03575930 STR W8, [X31 + 0xC]
	0x03575934 BL 0x1C16E04
	0x03575938 MOV X21, X0
	0x0357593C CBZ X0, 0x3575954
	0x03575940 LDR X8, [X20]
	0x03575944 MOV X0, X21
	0x03575948 LDR X1, [X8 + 0x40]
	0x0357594C BL 0x1C16E00

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xE6B000
	007 Move W8, [X21+3700]
	008 Move X20, X1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {25}
	014 Move X0, 0xB7F000
	015 Move X0, [X0+2504]
	016 Call 0x1C17CF4
	017 Move X0, 0xB84000
	018 Move X0, [X0+840]
	019 Call 0x1C17CF4
	020 Move X0, 0xBC2000
	021 Move X0, [X0+432]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+3700], W8
	025 Move X8, [X19+56]
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move X9, [X19+32]
	028 Move [X19+56], X20
	029 Compare X9, 0
	030 JumpIfEqual {105}
	031 Move X8, 0xB7F000
	032 Move X8, [X8+2504]
	033 Move X20, [X9+24]
	034 Move X21, [X8]
	035 Move X8, [X21+56]
	036 Compare X8, 0
	037 JumpIfNotEqual {41}
	038 Move X0, X21
	039 Call 0x1C5D6E0
	040 Move X8, [X21+56]
	041 Move X0, [X8+16]
	042 Move W8, [X0+309]
	043 Move TEMP, X8
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfEqual {48}
	047 Call 0x1C5D684
	048 Move W8, [X0+224]
	049 Compare W8, 0
	050 JumpIfNotEqual {52}
	051 Call 0x1C17DFC
	052 Move X8, [X21+56]
	053 Move X0, [X8+16]
	054 Move W8, [X0+309]
	055 Move TEMP, X8
	056 And TEMP, TEMP, 1
	057 Compare TEMP, 1
	058 JumpIfEqual {60}
	059 Call 0x1C5D684
	060 Compare X20, 0
	061 JumpIfEqual {105}
	062 Move X9, 0xB84000
	063 Move X11, 0xBC2000
	064 Move X9, [X9+840]
	065 Move X10, [X0+184]
	066 Move X8, [X20]
	067 Move X11, [X11+432]
	068 Move X1, [X9]
	069 Move X21, [X10]
	070 NotImplemented "Instruction LDRH not yet implemented."
	071 Move X22, [X11]
	072 Compare X9, 0
	073 JumpIfEqual {80}
	074 Move X10, [X8+176]
	075 Add X10, X10, 8
	076 NotImplemented "Instruction LDUR not yet implemented."
	077 NotImplemented "Instruction CMP not yet implemented."
	078 Subtract X9, X9, 1
	079 Add X10, X10, 16
	080 Move W2, 1
	081 Move X0, X20
	082 Call 0x1C5D788
	083 Move W9, [X10]
	084 Add W9, W9, 1
	085 Add X8, X8, W9
	086 Add X0, X8, 312
	087 Move X8, [X0]
	088 Move X4, [X0+8]
	089 Move W1, 3
	090 Move X0, X20
	091 Move X2, X22
	092 Move X3, X21
	093 NotImplemented "Instruction BLR not yet implemented."
	094 Move W8, [X19+137]
	095 Compare W8, 0
	096 JumpIfEqual {99}
	097 Move W8, 1
	098 Move [X19+220], W8
	099 Move X20, [X31+32]
	100 Move X19, [X31+40]
	101 Move X22, [X31+16]
	102 Move X21, [X31+24]
	103 Move X30, [X31+48]
	104 Return 
	105 Call 0x1C17F20

Method: System.Func`1<Photon.Voice.IAudioDesc> get_InputFactory()

Disassembly:
	0x0357596C LDR X8, [X19]
	0x03575970 LDR X9, [X9 + 0x348]

ISIL:
	001 Move X0, [X0+144]
	002 Return X0

Method: System.Void set_InputFactory(System.Func`1<Photon.Voice.IAudioDesc> value)

Disassembly:
	0x03575974 ADRP X10, 0xBC1000
	0x03575978 LDR X1, [X9]
	0x0357597C LDR X10, [X10 + 0x200]
	0x03575980 LDRH W9, [X8 + 0x12E]
	0x03575984 LDR X21, [X10]
	0x03575988 CBZ X9, 0x35759AC
	0x0357598C LDR X10, [X8 + 0xB0]
	0x03575990 ADD X10, X10, 0x8
	0x03575994 LDUR X11, [X10 - 0x8]
	0x03575998 CMP X11, X1
	0x0357599C B.EQ 0x35759F8
	0x035759A0 SUBS X9, X9, 0x1
	0x035759A4 ADD X10, X10, 0x10
	0x035759A8 B.NE 0x3575994
	0x035759AC MOVZ W2, 0x1
	0x035759B0 MOV X0, X19
	0x035759B4 BL 0x1C5C788
	0x035759B8 B 0x3575A08
	0x035759BC LDR W9, [X10]
	0x035759C0 ADD W9, W9, 0x1
	0x035759C4 ADD X8, X8, W9, 0x4, SXTW
	0x035759C8 ADD X0, X8, 0x138
	0x035759CC LDP X8, X4, [X0]
	0x035759D0 MOVZ W1, 0x3
	0x035759D4 MOV X0, X20
	0x035759D8 MOV X2, X22
	0x035759DC MOV X3, X21
	0x035759E0 BLR X8
	0x035759E4 LDRB W8, [X19 + 0x89]
	0x035759E8 CBZ W8, 0x3575A20
	0x035759EC MOVZ W8, 0x1
	0x035759F0 STR W8, [X19 + 0xDC]
	0x035759F4 B 0x3575A20
	0x035759F8 LDR W9, [X10]
	0x035759FC ADD W9, W9, 0x1
	0x03575A00 ADD X8, X8, W9, 0x4, SXTW
	0x03575A04 ADD X0, X8, 0x138
	0x03575A08 LDP X8, X4, [X0]
	0x03575A0C MOVZ W1, 0x1
	0x03575A10 MOV X0, X19
	0x03575A14 MOV X2, X21
	0x03575A18 MOV X3, X20
	0x03575A1C BLR X8
	0x03575A20 LDP X20, X19, [X31 + 0x30]
	0x03575A24 LDP X22, X21, [X31 + 0x20]
	0x03575A28 LDR X30, [X31 + 0x10]
	0x03575A2C ADD X31, X31, 0x40
	0x03575A30 RET
	0x03575A34 BL 0x1C16F20
	0x03575A38 BL 0x1C16F28
	0x03575A3C BL 0x1C16F44
	0x03575A40 MOV X1, X31
	0x03575A44 BL 0x1C16DEC
	0x03575A48 LDRB W0, [X0 + 0x89]
	0x03575A4C RET
	0x03575A50 LDRB W9, [X0 + 0x89]
	0x03575A54 AND W8, W1, 0x1
	0x03575A58 CMP W9, W8
	0x03575A5C B.EQ 0x3575A70
	0x03575A60 STRB W8, [X0 + 0x89]
	0x03575A64 TBZ X1, 0x0, 0x3575A74
	0x03575A68 MOVZ W8, 0x1
	0x03575A6C STR W8, [X0 + 0xDC]
	0x03575A70 RET
	0x03575A74 B 0x3575A78
	0x03575A78 STP X30, X23, [X31 - 0x30]!
	0x03575A7C STP X22, X21, [X31 + 0x10]
	0x03575A80 STP X20, X19, [X31 + 0x20]
	0x03575A84 ADRP X20, 0xE6A000
	0x03575A88 LDRB W8, [X20 + 0xE87]
	0x03575A8C MOV X19, X0
	0x03575A90 TBNZ X8, 0x0, 0x3575AE4
	0x03575A94 ADRP X0, 0xB7E000
	0x03575A98 LDR X0, [X0 + 0x9C8]
	0x03575A9C BL 0x1C16CF4
	0x03575AA0 ADRP X0, 0xB7E000
	0x03575AA4 LDR X0, [X0 + 0xE00]
	0x03575AA8 BL 0x1C16CF4
	0x03575AAC ADRP X0, 0xB83000
	0x03575AB0 LDR X0, [X0 + 0x348]
	0x03575AB4 BL 0x1C16CF4
	0x03575AB8 ADRP X0, 0xBC0000
	0x03575ABC LDR X0, [X0 + 0x820]
	0x03575AC0 BL 0x1C16CF4
	0x03575AC4 ADRP X0, 0xBC1000
	0x03575AC8 LDR X0, [X0 + 0x208]
	0x03575ACC BL 0x1C16CF4
	0x03575AD0 ADRP X0, 0xBC1000
	0x03575AD4 LDR X0, [X0 + 0x210]
	0x03575AD8 BL 0x1C16CF4
	0x03575ADC MOVZ W8, 0x1
	0x03575AE0 STRB W8, [X20 + 0xE87]
	0x03575AE4 LDR X9, [X19 + 0x20]
	0x03575AE8 CBZ X9, 0x3575CCC

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xE6B000
	007 Move W8, [X21+3701]
	008 Move X20, X1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {25}
	014 Move X0, 0xB7F000
	015 Move X0, [X0+2504]
	016 Call 0x1C17CF4
	017 Move X0, 0xB84000
	018 Move X0, [X0+840]
	019 Call 0x1C17CF4
	020 Move X0, 0xBC2000
	021 Move X0, [X0+440]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+3701], W8
	025 Move X0, [X19+144]
	026 Move X1, X20
	027 Move X2, X31
	028 Call Delegate.op_Inequality, X0, X1
	029 Move TEMP, X0
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfNotEqual {107}
	033 Move X9, [X19+32]
	034 Move [X19+144], X20
	035 Compare X9, 0
	036 JumpIfEqual {113}
	037 Move X8, 0xB7F000
	038 Move X8, [X8+2504]
	039 Move X20, [X9+24]
	040 Move X21, [X8]
	041 Move X8, [X21+56]
	042 Compare X8, 0
	043 JumpIfNotEqual {47}
	044 Move X0, X21
	045 Call 0x1C5D6E0
	046 Move X8, [X21+56]
	047 Move X0, [X8+16]
	048 Move W8, [X0+309]
	049 Move TEMP, X8
	050 And TEMP, TEMP, 1
	051 Compare TEMP, 1
	052 JumpIfEqual {54}
	053 Call 0x1C5D684
	054 Move W8, [X0+224]
	055 Compare W8, 0
	056 JumpIfNotEqual {58}
	057 Call 0x1C17DFC
	058 Move X8, [X21+56]
	059 Move X0, [X8+16]
	060 Move W8, [X0+309]
	061 Move TEMP, X8
	062 And TEMP, TEMP, 1
	063 Compare TEMP, 1
	064 JumpIfEqual {66}
	065 Call 0x1C5D684
	066 Compare X20, 0
	067 JumpIfEqual {113}
	068 Move X10, 0xB84000
	069 Move X11, 0xBC2000
	070 Move X9, [X0+184]
	071 Move X10, [X10+840]
	072 Move X8, [X20]
	073 Move X11, [X11+440]
	074 Move X21, [X9]
	075 Move X1, [X10]
	076 NotImplemented "Instruction LDRH not yet implemented."
	077 Move X22, [X11]
	078 Compare X9, 0
	079 JumpIfEqual {86}
	080 Move X10, [X8+176]
	081 Add X10, X10, 8
	082 NotImplemented "Instruction LDUR not yet implemented."
	083 NotImplemented "Instruction CMP not yet implemented."
	084 Subtract X9, X9, 1
	085 Add X10, X10, 16
	086 Move W2, 1
	087 Move X0, X20
	088 Call 0x1C5D788
	089 Move W9, [X10]
	090 Add W9, W9, 1
	091 Add X8, X8, W9
	092 Add X0, X8, 312
	093 Move X8, [X0]
	094 Move X4, [X0+8]
	095 Move W1, 3
	096 Move X0, X20
	097 Move X2, X22
	098 Move X3, X21
	099 NotImplemented "Instruction BLR not yet implemented."
	100 Move W8, [X19+120]
	101 NotImplemented "Instruction CMP not yet implemented."
	102 Move W8, [X19+137]
	103 Compare W8, 0
	104 JumpIfEqual {107}
	105 Move W8, 1
	106 Move [X19+220], W8
	107 Move X20, [X31+32]
	108 Move X19, [X31+40]
	109 Move X22, [X31+16]
	110 Move X21, [X31+24]
	111 Move X30, [X31+48]
	112 Return 
	113 Call 0x1C17F20

Method: Photon.Voice.AudioUtil/IVoiceDetector get_VoiceDetector()

Disassembly:
	0x03575408 ADD X0, X8, 0x138
	0x0357540C LDP X5, X4, [X0]
	0x03575410 MOV X0, X19
	0x03575414 MOV X3, X20
	0x03575418 LDP X20, X19, [X31 + 0x10]
	0x0357541C MOVZ W1, 0x1
	0x03575420 MOV X2, X21
	0x03575424 LDP X30, X21, [X31], #0x20
	0x03575428 BR X5
	0x0357542C STRB W20, [X8 + 0x20]
	0x03575430 LDP X20, X19, [X31 + 0x10]
	0x03575434 LDP X30, X21, [X31], #0x20
	0x03575438 RET
	0x0357543C BL 0x1C16F20
	0x03575440 LDR W0, [X0 + 0x6C]
	0x03575444 RET
	0x03575448 STR X30, [X31 - 0x30]!
	0x0357544C STP X22, X21, [X31 + 0x10]
	0x03575450 STP X20, X19, [X31 + 0x20]
	0x03575454 ADRP X21, 0xE6A000
	0x03575458 LDRB W8, [X21 + 0xE7F]
	0x0357545C MOV W20, W1
	0x03575460 MOV X19, X0
	0x03575464 TBNZ X8, 0x0, 0x3575494
	0x03575468 ADRP X0, 0xB7E000
	0x0357546C LDR X0, [X0 + 0x9C8]
	0x03575470 BL 0x1C16CF4
	0x03575474 ADRP X0, 0xB83000
	0x03575478 LDR X0, [X0 + 0x348]
	0x0357547C BL 0x1C16CF4
	0x03575480 ADRP X0, 0xBC1000
	0x03575484 LDR X0, [X0 + 0x1E8]
	0x03575488 BL 0x1C16CF4
	0x0357548C MOVZ W8, 0x1
	0x03575490 STRB W8, [X21 + 0xE7F]
	0x03575494 LDR W8, [X19 + 0x6C]
	0x03575498 CMP W8, W20
	0x0357549C B.EQ 0x3575598
	0x035754A0 LDR X9, [X19 + 0x20]
	0x035754A4 STR W20, [X19 + 0x6C]
	0x035754A8 CBZ X9, 0x35755A8
	0x035754AC ADRP X8, 0xB7E000
	0x035754B0 LDR X8, [X8 + 0x9C8]
	0x035754B4 LDR X20, [X9 + 0x18]
	0x035754B8 LDR X21, [X8]
	0x035754BC LDR X8, [X21 + 0x38]
	0x035754C0 CBNZ X8, 0x35754D0
	0x035754C4 MOV X0, X21

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xE6B000
	005 Move W8, [X20+3702]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xBC2000
	012 Move X0, [X0+416]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3702], W8
	016 Move X0, X19
	017 Call Recorder.get_voiceAudio, X0
	018 Compare X0, 0
	019 JumpIfEqual {41}
	020 Move X0, X19
	021 Call Recorder.get_voiceAudio, X0
	022 Compare X0, 0
	023 JumpIfEqual {55}
	024 Move X10, 0xBC2000
	025 Move X8, [X0]
	026 Move X10, [X10+416]
	027 Move X19, X0
	028 NotImplemented "Instruction LDRH not yet implemented."
	029 Move X1, [X10]
	030 Compare X9, 0
	031 JumpIfEqual {38}
	032 Move X10, [X8+176]
	033 Add X10, X10, 8
	034 NotImplemented "Instruction LDUR not yet implemented."
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Subtract X9, X9, 1
	037 Add X10, X10, 16
	038 Move X0, X19
	039 Move W2, W31
	040 Call 0x1C5D788
	041 Move X20, [X31+16]
	042 Move X19, [X31+24]
	043 Move X30, [X31+32]
	044 Return X0
	045 NotImplemented "Instruction LDRSW not yet implemented."
	046 Add X8, X8, X9
	047 Add X0, X8, 312
	048 Move X2, [X0]
	049 Move X1, [X0+8]
	050 Move X0, X19
	051 Move X20, [X31+16]
	052 Move X19, [X31+24]
	053 Move X30, [X31+32]
	054 CallNoReturn X2
	055 Call 0x1C17F20

Method: System.Byte get_InterestGroup()

Disassembly:
	0x03575B34 LDRB W8, [X0 + 0x135]
	0x03575B38 TBNZ X8, 0x0, 0x3575B40
	0x03575B3C BL 0x1C5C684
	0x03575B40 CBZ X20, 0x3575CCC
	0x03575B44 ADRP X9, 0xB83000
	0x03575B48 ADRP X11, 0xBC1000
	0x03575B4C LDR X9, [X9 + 0x348]

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+64]
	003 Compare X8, 0
	004 JumpIfEqual {8}
	005 Move W0, [X8+56]
	006 Move X30, [X31+16]
	007 Return X0
	008 Call 0x1C17F20

Method: System.Void set_InterestGroup(System.Byte value)

Disassembly:
	0x03575B50 LDR X10, [X0 + 0xB8]
	0x03575B54 LDR X8, [X20]
	0x03575B58 LDR X11, [X11 + 0x208]
	0x03575B5C ADRP X23, 0xBC0000
	0x03575B60 LDR X1, [X9]
	0x03575B64 LDR X21, [X10]
	0x03575B68 LDRH W9, [X8 + 0x12E]
	0x03575B6C LDR X22, [X11]

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+64]
	003 Compare X8, 0
	004 JumpIfEqual {9}
	005 Move [X8+56], W1
	006 Move [X0+88], W1
	007 Move X30, [X31+16]
	008 Return 
	009 Call 0x1C17F20

Method: System.Int32[] get_TargetPlayers()

Disassembly:
	0x03575B70 LDR X23, [X23 + 0x820]
	0x03575B74 CBZ X9, 0x3575B98
	0x03575B78 LDR X10, [X8 + 0xB0]
	0x03575B7C ADD X10, X10, 0x8
	0x03575B80 LDUR X11, [X10 - 0x8]
	0x03575B84 CMP X11, X1
	0x03575B88 B.EQ 0x3575BA8

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+64]
	003 Compare X0, 0
	004 JumpIfEqual {9}
	005 Move X1, X31
	006 Move X30, [X31+16]
	007 Call LocalVoice.get_TargetPlayers, X0
	008 Return X0
	009 Call 0x1C17F20

Method: System.Void set_TargetPlayers(System.Int32[] value)

Disassembly:
	0x03575B8C SUBS X9, X9, 0x1
	0x03575B90 ADD X10, X10, 0x10
	0x03575B94 B.NE 0x3575B80
	0x03575B98 MOVZ W2, 0x1
	0x03575B9C MOV X0, X20
	0x03575BA0 BL 0x1C5C788
	0x03575BA4 B 0x3575BB8
	0x03575BA8 LDR W9, [X10]
	0x03575BAC ADD W9, W9, 0x1
	0x03575BB0 ADD X8, X8, W9, 0x4, SXTW
	0x03575BB4 ADD X0, X8, 0x138
	0x03575BB8 LDP X8, X4, [X0]
	0x03575BBC MOVZ W1, 0x3
	0x03575BC0 MOV X0, X20
	0x03575BC4 MOV X2, X22
	0x03575BC8 MOV X3, X21

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X0
	005 Move X0, [X0+64]
	006 Compare X0, 0
	007 JumpIfEqual {19}
	008 Move X2, X31
	009 Move X20, X1
	010 Call LocalVoice.set_TargetPlayers, X0, X1
	011 NotImplemented "Instruction CMP not yet implemented."
	012 NotImplemented "Instruction CSET not yet implemented."
	013 Move [X19+96], X20
	014 Move [X19+89], W8
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 Return 
	019 Call 0x1C17F20

Method: System.Boolean get_IsCurrentlyTransmitting()

Disassembly:
	0x03575BCC BLR X8
	0x03575BD0 LDR X0, [X23]
	0x03575BD4 LDR X20, [X19 + 0x40]
	0x03575BD8 LDR W8, [X0 + 0xE0]
	0x03575BDC CBNZ W8, 0x3575BE8
	0x03575BE0 BL 0x1C16DFC
	0x03575BE4 LDR X0, [X23]
	0x03575BE8 LDR X8, [X0 + 0xB8]
	0x03575BEC LDR X8, [X8]
	0x03575BF0 CMP X20, X8
	0x03575BF4 B.EQ 0x3575C50
	0x03575BF8 LDR X0, [X19 + 0x40]
	0x03575BFC CBZ X0, 0x3575CCC
	0x03575C00 MOV X1, X31

ISIL:
	001 Move [X31-16], X30
	002 Move W8, [X0+137]
	003 Compare W8, 0
	004 JumpIfEqual {15}
	005 Move W8, [X0+107]
	006 Compare W8, 0
	007 JumpIfEqual {15}
	008 Move X0, [X0+64]
	009 Compare X0, 0
	010 JumpIfEqual {18}
	011 Move X1, X31
	012 Move X30, [X31+16]
	013 Call LocalVoice.get_IsCurrentlyTransmitting, X0
	014 Return X0
	015 Move W0, W31
	016 Move X30, [X31+16]
	017 Return X0
	018 Call 0x1C17F20

Method: Photon.Voice.AudioUtil/ILevelMeter get_LevelMeter()

Disassembly:
	0x03575C04 BL 0x355A7B0
	0x03575C08 LDR X0, [X23]
	0x03575C0C LDR W8, [X0 + 0xE0]
	0x03575C10 CBNZ W8, 0x3575C1C
	0x03575C14 BL 0x1C16DFC
	0x03575C18 LDR X0, [X23]
	0x03575C1C LDR X8, [X0 + 0xB8]
	0x03575C20 MOV X0, X19
	0x03575C24 MOV X1, X31
	0x03575C28 LDR X8, [X8]
	0x03575C2C STR X8, [X19 + 0x40]
	0x03575C30 BL 0x3C32ECC
	0x03575C34 CBZ X0, 0x3575CCC
	0x03575C38 ADRP X8, 0xBC1000
	0x03575C3C LDR X8, [X8 + 0x210]
	0x03575C40 MOVZ W2, 0x1
	0x03575C44 MOV X3, X31
	0x03575C48 LDR X1, [X8]
	0x03575C4C BL 0x3C355BC
	0x03575C50 LDR X20, [X19 + 0x48]
	0x03575C54 CBZ X20, 0x3575CBC
	0x03575C58 ADRP X10, 0xB7E000
	0x03575C5C LDR X8, [X20]
	0x03575C60 LDR X10, [X10 + 0xE00]
	0x03575C64 LDRH W9, [X8 + 0x12E]
	0x03575C68 LDR X1, [X10]
	0x03575C6C CBZ X9, 0x3575C90
	0x03575C70 LDR X10, [X8 + 0xB0]
	0x03575C74 ADD X10, X10, 0x8
	0x03575C78 LDUR X11, [X10 - 0x8]
	0x03575C7C CMP X11, X1
	0x03575C80 B.EQ 0x3575CA0
	0x03575C84 SUBS X9, X9, 0x1
	0x03575C88 ADD X10, X10, 0x10
	0x03575C8C B.NE 0x3575C78
	0x03575C90 MOV X0, X20
	0x03575C94 MOV W2, W31
	0x03575C98 BL 0x1C5C788
	0x03575C9C B 0x3575CAC
	0x03575CA0 LDRSW X9, [X10]
	0x03575CA4 ADD X8, X8, X9, 0x4, LSL
	0x03575CA8 ADD X0, X8, 0x138
	0x03575CAC LDP X8, X1, [X0]
	0x03575CB0 MOV X0, X20
	0x03575CB4 BLR X8
	0x03575CB8 STR X31, [X19 + 0x48]
	0x03575CBC LDP X20, X19, [X31 + 0x20]
	0x03575CC0 LDP X22, X21, [X31 + 0x10]
	0x03575CC4 LDP X30, X23, [X31], #0x30

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xE6B000
	005 Move W8, [X20+3703]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xBC2000
	012 Move X0, [X0+416]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3703], W8
	016 Move X0, X19
	017 Call Recorder.get_voiceAudio, X0
	018 Compare X0, 0
	019 JumpIfEqual {41}
	020 Move X0, X19
	021 Call Recorder.get_voiceAudio, X0
	022 Compare X0, 0
	023 JumpIfEqual {56}
	024 Move X10, 0xBC2000
	025 Move X8, [X0]
	026 Move X10, [X10+416]
	027 Move X19, X0
	028 NotImplemented "Instruction LDRH not yet implemented."
	029 Move X1, [X10]
	030 Compare X9, 0
	031 JumpIfEqual {38}
	032 Move X10, [X8+176]
	033 Add X10, X10, 8
	034 NotImplemented "Instruction LDUR not yet implemented."
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Subtract X9, X9, 1
	037 Add X10, X10, 16
	038 Move W2, 1
	039 Move X0, X19
	040 Call 0x1C5D788
	041 Move X20, [X31+16]
	042 Move X19, [X31+24]
	043 Move X30, [X31+32]
	044 Return X0
	045 Move W9, [X10]
	046 Add W9, W9, 1
	047 Add X8, X8, W9
	048 Add X0, X8, 312
	049 Move X2, [X0]
	050 Move X1, [X0+8]
	051 Move X0, X19
	052 Move X20, [X31+16]
	053 Move X19, [X31+24]
	054 Move X30, [X31+32]
	055 CallNoReturn X2
	056 Call 0x1C17F20

Method: System.Boolean get_VoiceDetectorCalibrating()

Disassembly:
	0x03575CC8 RET
	0x03575CCC BL 0x1C16F20
	0x03575CD0 LDRB W0, [X0 + 0xAC]
	0x03575CD4 RET
	0x03575CD8 AND W8, W1, 0x1
	0x03575CDC STRB W8, [X0 + 0xAC]
	0x03575CE0 RET
	0x03575CE4 LDRB W0, [X0 + 0xAD]
	0x03575CE8 RET
	0x03575CEC STR X30, [X31 - 0x30]!
	0x03575CF0 STP X22, X21, [X31 + 0x10]
	0x03575CF4 STP X20, X19, [X31 + 0x20]
	0x03575CF8 ADRP X21, 0xE6A000
	0x03575CFC LDRB W8, [X21 + 0xE82]
	0x03575D00 MOV X19, X0
	0x03575D04 AND W20, W1, 0x1
	0x03575D08 TBNZ X8, 0x0, 0x3575D38
	0x03575D0C ADRP X0, 0xB7E000
	0x03575D10 LDR X0, [X0 + 0x9C8]
	0x03575D14 BL 0x1C16CF4
	0x03575D18 ADRP X0, 0xB83000
	0x03575D1C LDR X0, [X0 + 0x348]
	0x03575D20 BL 0x1C16CF4
	0x03575D24 ADRP X0, 0xBC1000
	0x03575D28 LDR X0, [X0 + 0x218]
	0x03575D2C BL 0x1C16CF4
	0x03575D30 MOVZ W8, 0x1
	0x03575D34 STRB W8, [X21 + 0xE82]
	0x03575D38 LDRB W8, [X19 + 0xAD]
	0x03575D3C CMP W8, W20
	0x03575D40 B.EQ 0x3575E50
	0x03575D44 LDR X9, [X19 + 0x20]
	0x03575D48 STRB W20, [X19 + 0xAD]
	0x03575D4C CBZ X9, 0x3575E60
	0x03575D50 ADRP X8, 0xB7E000
	0x03575D54 LDR X8, [X8 + 0x9C8]
	0x03575D58 LDR X20, [X9 + 0x18]
	0x03575D5C LDR X21, [X8]
	0x03575D60 LDR X8, [X21 + 0x38]
	0x03575D64 CBNZ X8, 0x3575D74
	0x03575D68 MOV X0, X21
	0x03575D6C BL 0x1C5C6E0
	0x03575D70 LDR X8, [X21 + 0x38]
	0x03575D74 LDR X0, [X8 + 0x10]
	0x03575D78 LDRB W8, [X0 + 0x135]
	0x03575D7C TBNZ X8, 0x0, 0x3575D84
	0x03575D80 BL 0x1C5C684
	0x03575D84 LDR W8, [X0 + 0xE0]
	0x03575D88 CBNZ W8, 0x3575D90
	0x03575D8C BL 0x1C16DFC
	0x03575D90 LDR X8, [X21 + 0x38]
	0x03575D94 LDR X0, [X8 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xE6B000
	005 Move W8, [X20+3704]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xBC2000
	012 Move X0, [X0+416]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3704], W8
	016 Move X0, X19
	017 Call Recorder.get_voiceAudio, X0
	018 Compare X0, 0
	019 JumpIfEqual {44}
	020 Move W8, [X19+107]
	021 Compare W8, 0
	022 JumpIfEqual {44}
	023 Move X0, X19
	024 Call Recorder.get_voiceAudio, X0
	025 Compare X0, 0
	026 JumpIfEqual {60}
	027 Move X10, 0xBC2000
	028 Move X8, [X0]
	029 Move X10, [X10+416]
	030 Move X19, X0
	031 NotImplemented "Instruction LDRH not yet implemented."
	032 Move X1, [X10]
	033 Compare X9, 0
	034 JumpIfEqual {41}
	035 Move X10, [X8+176]
	036 Add X10, X10, 8
	037 NotImplemented "Instruction LDUR not yet implemented."
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Subtract X9, X9, 1
	040 Add X10, X10, 16
	041 Move W2, 2
	042 Move X0, X19
	043 Call 0x1C5D788
	044 Move X20, [X31+16]
	045 Move X19, [X31+24]
	046 Move W0, W31
	047 Move X30, [X31+32]
	048 Return X0
	049 Move W9, [X10]
	050 Add W9, W9, 2
	051 Add X8, X8, W9
	052 Add X0, X8, 312
	053 Move X2, [X0]
	054 Move X1, [X0+8]
	055 Move X0, X19
	056 Move X20, [X31+16]
	057 Move X19, [X31+24]
	058 Move X30, [X31+32]
	059 CallNoReturn X2
	060 Call 0x1C17F20

Method: Photon.Voice.ILocalVoiceAudio get_voiceAudio()

Disassembly:
	0x03575AEC ADRP X8, 0xB7E000
	0x03575AF0 LDR X8, [X8 + 0x9C8]
	0x03575AF4 LDR X20, [X9 + 0x18]
	0x03575AF8 LDR X21, [X8]
	0x03575AFC LDR X8, [X21 + 0x38]
	0x03575B00 CBNZ X8, 0x3575B10
	0x03575B04 MOV X0, X21
	0x03575B08 BL 0x1C5C6E0
	0x03575B0C LDR X8, [X21 + 0x38]
	0x03575B10 LDR X0, [X8 + 0x10]
	0x03575B14 LDRB W8, [X0 + 0x135]
	0x03575B18 TBNZ X8, 0x0, 0x3575B20
	0x03575B1C BL 0x1C5C684
	0x03575B20 LDR W8, [X0 + 0xE0]
	0x03575B24 CBNZ W8, 0x3575B2C
	0x03575B28 BL 0x1C16DFC
	0x03575B2C LDR X8, [X21 + 0x38]
	0x03575B30 LDR X0, [X8 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xE6B000
	006 Move X20, 0xBC2000
	007 Move W8, [X21+3705]
	008 Move X20, [X20+416]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xBC2000
	015 Move X0, [X0+416]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+3705], W8
	019 Move X0, [X19+64]
	020 Move X1, [X20]
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move X30, [X31+32]
	024 Move X21, [X31+40]
	025 Call 0x1C17E00
	026 Return X0

Method: Photon.Voice.Unity.Recorder/InputSourceType get_SourceType()

Disassembly:
	0x03575D98 LDRB W8, [X0 + 0x135]
	0x03575D9C TBNZ X8, 0x0, 0x3575DA4

ISIL:
	001 Move W0, [X0+120]
	002 Return X0

Method: System.Void set_SourceType(Photon.Voice.Unity.Recorder/InputSourceType value)

Disassembly:
	0x03575DA0 BL 0x1C5C684
	0x03575DA4 CBZ X20, 0x3575E60
	0x03575DA8 ADRP X10, 0xB83000
	0x03575DAC ADRP X11, 0xBC1000
	0x03575DB0 LDR X9, [X0 + 0xB8]
	0x03575DB4 LDR X10, [X10 + 0x348]
	0x03575DB8 LDR X8, [X20]
	0x03575DBC LDR X11, [X11 + 0x218]
	0x03575DC0 LDR X21, [X9]
	0x03575DC4 LDR X1, [X10]
	0x03575DC8 LDRH W9, [X8 + 0x12E]
	0x03575DCC LDR X22, [X11]
	0x03575DD0 CBZ X9, 0x3575DF4
	0x03575DD4 LDR X10, [X8 + 0xB0]
	0x03575DD8 ADD X10, X10, 0x8
	0x03575DDC LDUR X11, [X10 - 0x8]
	0x03575DE0 CMP X11, X1
	0x03575DE4 B.EQ 0x3575E04
	0x03575DE8 SUBS X9, X9, 0x1
	0x03575DEC ADD X10, X10, 0x10
	0x03575DF0 B.NE 0x3575DDC
	0x03575DF4 MOVZ W2, 0x1
	0x03575DF8 MOV X0, X20
	0x03575DFC BL 0x1C5C788
	0x03575E00 B 0x3575E14
	0x03575E04 LDR W9, [X10]
	0x03575E08 ADD W9, W9, 0x1
	0x03575E0C ADD X8, X8, W9, 0x4, SXTW
	0x03575E10 ADD X0, X8, 0x138
	0x03575E14 LDP X8, X4, [X0]
	0x03575E18 MOVZ W1, 0x3
	0x03575E1C MOV X0, X20
	0x03575E20 MOV X2, X22
	0x03575E24 MOV X3, X21
	0x03575E28 BLR X8
	0x03575E2C LDR W8, [X19 + 0x78]
	0x03575E30 CBNZ W8, 0x3575E50
	0x03575E34 MOV X0, X19
	0x03575E38 BL 0x3574F04
	0x03575E3C CBNZ W0, 0x3575E50
	0x03575E40 LDRB W8, [X19 + 0x89]
	0x03575E44 CBZ W8, 0x3575E50
	0x03575E48 MOVZ W8, 0x1
	0x03575E4C STR W8, [X19 + 0xDC]
	0x03575E50 LDP X20, X19, [X31 + 0x20]
	0x03575E54 LDP X22, X21, [X31 + 0x10]
	0x03575E58 LDR X30, [X31], #0x30
	0x03575E5C RET
	0x03575E60 BL 0x1C16F20
	0x03575E64 LDRB W0, [X0 + 0xAE]
	0x03575E68 RET
	0x03575E6C AND W8, W1, 0x1
	0x03575E70 STRB W8, [X0 + 0xAE]
	0x03575E74 RET
	0x03575E78 LDRB W0, [X0 + 0xAF]
	0x03575E7C RET
	0x03575E80 AND W8, W1, 0x1
	0x03575E84 STRB W8, [X0 + 0xAF]
	0x03575E88 RET
	0x03575E8C LDR X9, [X0 + 0xD0]
	0x03575E90 LDP V1, V0, [X0 + 0xB0]
	0x03575E94 STR X9, [X8 + 0x20]
	0x03575E98 STP V1, V0, [X8]
	0x03575E9C RET
	0x03575EA0 SUB X31, X31, 0xF0
	0x03575EA4 STR X30, [X31 + 0xC0]
	0x03575EA8 STP X22, X21, [X31 + 0xD0]
	0x03575EAC STP X20, X19, [X31 + 0xE0]
	0x03575EB0 ADRP X22, 0xE6A000
	0x03575EB4 ADRP X21, 0xBA6000
	0x03575EB8 LDRB W8, [X22 + 0xE83]
	0x03575EBC LDR X21, [X21 + 0x5F8]
	0x03575EC0 MOV X20, X1
	0x03575EC4 MOV X19, X0
	0x03575EC8 TBNZ X8, 0x0, 0x3575F04
	0x03575ECC ADRP X0, 0xB7E000
	0x03575ED0 LDR X0, [X0 + 0x9C8]
	0x03575ED4 BL 0x1C16CF4
	0x03575ED8 ADRP X0, 0xBA6000
	0x03575EDC LDR X0, [X0 + 0x5F8]
	0x03575EE0 BL 0x1C16CF4
	0x03575EE4 ADRP X0, 0xB83000
	0x03575EE8 LDR X0, [X0 + 0x348]
	0x03575EEC BL 0x1C16CF4
	0x03575EF0 ADRP X0, 0xBC1000
	0x03575EF4 LDR X0, [X0 + 0x220]
	0x03575EF8 BL 0x1C16CF4
	0x03575EFC MOVZ W8, 0x1
	0x03575F00 STRB W8, [X22 + 0xE83]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xE6B000
	007 Move W8, [X21+3706]
	008 Move W20, W1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {25}
	014 Move X0, 0xB7F000
	015 Move X0, [X0+2504]
	016 Call 0x1C17CF4
	017 Move X0, 0xB84000
	018 Move X0, [X0+840]
	019 Call 0x1C17CF4
	020 Move X0, 0xBC2000
	021 Move X0, [X0+448]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+3706], W8
	025 Move W8, [X19+120]
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move X9, [X19+32]
	028 Move [X19+120], W20
	029 Compare X9, 0
	030 JumpIfEqual {105}
	031 Move X8, 0xB7F000
	032 Move X8, [X8+2504]
	033 Move X20, [X9+24]
	034 Move X21, [X8]
	035 Move X8, [X21+56]
	036 Compare X8, 0
	037 JumpIfNotEqual {41}
	038 Move X0, X21
	039 Call 0x1C5D6E0
	040 Move X8, [X21+56]
	041 Move X0, [X8+16]
	042 Move W8, [X0+309]
	043 Move TEMP, X8
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfEqual {48}
	047 Call 0x1C5D684
	048 Move W8, [X0+224]
	049 Compare W8, 0
	050 JumpIfNotEqual {52}
	051 Call 0x1C17DFC
	052 Move X8, [X21+56]
	053 Move X0, [X8+16]
	054 Move W8, [X0+309]
	055 Move TEMP, X8
	056 And TEMP, TEMP, 1
	057 Compare TEMP, 1
	058 JumpIfEqual {60}
	059 Call 0x1C5D684
	060 Compare X20, 0
	061 JumpIfEqual {105}
	062 Move X10, 0xB84000
	063 Move X11, 0xBC2000
	064 Move X9, [X0+184]
	065 Move X10, [X10+840]
	066 Move X8, [X20]
	067 Move X11, [X11+448]
	068 Move X21, [X9]
	069 Move X1, [X10]
	070 NotImplemented "Instruction LDRH not yet implemented."
	071 Move X22, [X11]
	072 Compare X9, 0
	073 JumpIfEqual {80}
	074 Move X10, [X8+176]
	075 Add X10, X10, 8
	076 NotImplemented "Instruction LDUR not yet implemented."
	077 NotImplemented "Instruction CMP not yet implemented."
	078 Subtract X9, X9, 1
	079 Add X10, X10, 16
	080 Move W2, 1
	081 Move X0, X20
	082 Call 0x1C5D788
	083 Move W9, [X10]
	084 Add W9, W9, 1
	085 Add X8, X8, W9
	086 Add X0, X8, 312
	087 Move X8, [X0]
	088 Move X4, [X0+8]
	089 Move W1, 3
	090 Move X0, X20
	091 Move X2, X22
	092 Move X3, X21
	093 NotImplemented "Instruction BLR not yet implemented."
	094 Move W8, [X19+137]
	095 Compare W8, 0
	096 JumpIfEqual {99}
	097 Move W8, 1
	098 Move [X19+220], W8
	099 Move X20, [X31+32]
	100 Move X19, [X31+40]
	101 Move X22, [X31+16]
	102 Move X21, [X31+24]
	103 Move X30, [X31+48]
	104 Return 
	105 Call 0x1C17F20

Method: Photon.Voice.Unity.Recorder/MicType get_MicrophoneType()

Disassembly:
	0x03575F04 LDR X8, [X19 + 0xD0]
	0x03575F08 LDP V1, V0, [X19 + 0xB0]
	0x03575F0C LDR X0, [X21]
	0x03575F10 STR X8, [X31 + 0xB0]
	0x03575F14 STP V1, V0, [X31 + 0x90]
	0x03575F18 LDR X8, [X20 + 0x20]
	0x03575F1C LDP V1, V0, [X20]
	0x03575F20 STR X8, [X31 + 0x80]
	0x03575F24 STP V1, V0, [X31 + 0x60]
	0x03575F28 LDR W8, [X0 + 0xE0]
	0x03575F2C CBNZ W8, 0x3575F34
	0x03575F30 BL 0x1C16DFC
	0x03575F34 LDP V0, V1, [X31 + 0x90]
	0x03575F38 LDR X8, [X31 + 0xB0]
	0x03575F3C LDP V2, V3, [X31 + 0x60]
	0x03575F40 LDR X9, [X31 + 0x80]
	0x03575F44 ADD X0, X31, 0x30
	0x03575F48 ADD X1, X31, 0x0
	0x03575F4C MOV X2, X31
	0x03575F50 STP V0, V1, [X31 + 0x30]
	0x03575F54 STR X8, [X31 + 0x50]
	0x03575F58 STP V2, V3, [X31]
	0x03575F5C STR X9, [X31 + 0x20]
	0x03575F60 BL 0x3555340
	0x03575F64 TBZ X0, 0x0, 0x3576078
	0x03575F68 LDR X8, [X20 + 0x20]
	0x03575F6C LDP V1, V0, [X20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xE6B000
	006 Move X21, 0xB7F000
	007 Move W8, [X20+3707]
	008 Move X21, [X21+2416]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xB7F000
	015 Move X0, [X0+2416]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3707], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X31
	025 Call Application.get_platform
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move W0, 1
	028 Move W0, [X19+124]
	029 Move X20, [X31+16]
	030 Move X19, [X31+24]
	031 Move X30, [X31+32]
	032 Move X21, [X31+40]
	033 Return X0

Method: System.Void set_MicrophoneType(Photon.Voice.Unity.Recorder/MicType value)

Disassembly:
	0x03575F70 ADD X9, X19, 0xB0
	0x03575F74 STR X8, [X9 + 0x20]
	0x03575F78 STP V1, V0, [X9]
	0x03575F7C LDR X9, [X19 + 0x20]
	0x03575F80 CBZ X9, 0x357608C
	0x03575F84 ADRP X8, 0xB7E000
	0x03575F88 LDR X8, [X8 + 0x9C8]
	0x03575F8C LDR X20, [X9 + 0x18]
	0x03575F90 LDR X21, [X8]
	0x03575F94 LDR X8, [X21 + 0x38]
	0x03575F98 CBNZ X8, 0x3575FA8
	0x03575F9C MOV X0, X21
	0x03575FA0 BL 0x1C5C6E0
	0x03575FA4 LDR X8, [X21 + 0x38]
	0x03575FA8 LDR X0, [X8 + 0x10]
	0x03575FAC LDRB W8, [X0 + 0x135]
	0x03575FB0 TBNZ X8, 0x0, 0x3575FB8
	0x03575FB4 BL 0x1C5C684
	0x03575FB8 LDR W8, [X0 + 0xE0]
	0x03575FBC CBNZ W8, 0x3575FC4
	0x03575FC0 BL 0x1C16DFC
	0x03575FC4 LDR X8, [X21 + 0x38]
	0x03575FC8 LDR X0, [X8 + 0x10]
	0x03575FCC LDRB W8, [X0 + 0x135]
	0x03575FD0 TBNZ X8, 0x0, 0x3575FD8
	0x03575FD4 BL 0x1C5C684
	0x03575FD8 CBZ X20, 0x357608C
	0x03575FDC ADRP X10, 0xB83000
	0x03575FE0 ADRP X11, 0xBC1000
	0x03575FE4 LDR X9, [X0 + 0xB8]
	0x03575FE8 LDR X10, [X10 + 0x348]
	0x03575FEC LDR X8, [X20]
	0x03575FF0 LDR X11, [X11 + 0x220]
	0x03575FF4 LDR X21, [X9]
	0x03575FF8 LDR X1, [X10]
	0x03575FFC LDRH W9, [X8 + 0x12E]
	0x03576000 LDR X22, [X11]
	0x03576004 CBZ X9, 0x3576028
	0x03576008 LDR X10, [X8 + 0xB0]
	0x0357600C ADD X10, X10, 0x8
	0x03576010 LDUR X11, [X10 - 0x8]
	0x03576014 CMP X11, X1
	0x03576018 B.EQ 0x3576038
	0x0357601C SUBS X9, X9, 0x1
	0x03576020 ADD X10, X10, 0x10
	0x03576024 B.NE 0x3576010
	0x03576028 MOVZ W2, 0x1
	0x0357602C MOV X0, X20
	0x03576030 BL 0x1C5C788
	0x03576034 B 0x3576048
	0x03576038 LDR W9, [X10]
	0x0357603C ADD W9, W9, 0x1
	0x03576040 ADD X8, X8, W9, 0x4, SXTW
	0x03576044 ADD X0, X8, 0x138
	0x03576048 LDP X8, X4, [X0]
	0x0357604C MOVZ W1, 0x3
	0x03576050 MOV X0, X20
	0x03576054 MOV X2, X22
	0x03576058 MOV X3, X21
	0x0357605C BLR X8
	0x03576060 LDR W8, [X19 + 0x78]
	0x03576064 CBNZ W8, 0x3576078
	0x03576068 LDRB W8, [X19 + 0x89]
	0x0357606C CBZ W8, 0x3576078
	0x03576070 MOVZ W8, 0x1
	0x03576074 STR W8, [X19 + 0xDC]
	0x03576078 LDP X20, X19, [X31 + 0xE0]
	0x0357607C LDP X22, X21, [X31 + 0xD0]
	0x03576080 LDR X30, [X31 + 0xC0]
	0x03576084 ADD X31, X31, 0xF0
	0x03576088 RET
	0x0357608C BL 0x1C16F20
	0x03576090 LDRB W0, [X0 + 0xA9]
	0x03576094 RET
	0x03576098 LDRB W0, [X0 + 0xA8]
	0x0357609C RET
	0x035760A0 LDRB W0, [X0 + 0xAA]
	0x035760A4 RET
	0x035760A8 STP X30, X21, [X31 - 0x20]!
	0x035760AC STP X20, X19, [X31 + 0x10]
	0x035760B0 ADRP X21, 0xE69000
	0x035760B4 LDRB W8, [X21 + 0xE84]
	0x035760B8 MOV X20, X1
	0x035760BC MOV X19, X0
	0x035760C0 TBNZ X8, 0x0, 0x3576108
	0x035760C4 ADRP X0, 0xB7D000
	0x035760C8 LDR X0, [X0 + 0x9C8]
	0x035760CC BL 0x1C16CF4
	0x035760D0 ADRP X0, 0xB82000
	0x035760D4 LDR X0, [X0 + 0x348]
	0x035760D8 BL 0x1C16CF4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xE6B000
	007 Move W8, [X21+3708]
	008 Move W20, W1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {25}
	014 Move X0, 0xB7F000
	015 Move X0, [X0+2504]
	016 Call 0x1C17CF4
	017 Move X0, 0xB84000
	018 Move X0, [X0+840]
	019 Call 0x1C17CF4
	020 Move X0, 0xBC2000
	021 Move X0, [X0+456]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+3708], W8
	025 Move W8, [X19+124]
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move X9, [X19+32]
	028 Move [X19+124], W20
	029 Compare X9, 0
	030 JumpIfEqual {108}
	031 Move X8, 0xB7F000
	032 Move X8, [X8+2504]
	033 Move X20, [X9+24]
	034 Move X21, [X8]
	035 Move X8, [X21+56]
	036 Compare X8, 0
	037 JumpIfNotEqual {41}
	038 Move X0, X21
	039 Call 0x1C5D6E0
	040 Move X8, [X21+56]
	041 Move X0, [X8+16]
	042 Move W8, [X0+309]
	043 Move TEMP, X8
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfEqual {48}
	047 Call 0x1C5D684
	048 Move W8, [X0+224]
	049 Compare W8, 0
	050 JumpIfNotEqual {52}
	051 Call 0x1C17DFC
	052 Move X8, [X21+56]
	053 Move X0, [X8+16]
	054 Move W8, [X0+309]
	055 Move TEMP, X8
	056 And TEMP, TEMP, 1
	057 Compare TEMP, 1
	058 JumpIfEqual {60}
	059 Call 0x1C5D684
	060 Compare X20, 0
	061 JumpIfEqual {108}
	062 Move X10, 0xB83000
	063 Move X11, 0xBC1000
	064 Move X9, [X0+184]
	065 Move X10, [X10+840]
	066 Move X8, [X20]
	067 Move X11, [X11+456]
	068 Move X21, [X9]
	069 Move X1, [X10]
	070 NotImplemented "Instruction LDRH not yet implemented."
	071 Move X22, [X11]
	072 Compare X9, 0
	073 JumpIfEqual {80}
	074 Move X10, [X8+176]
	075 Add X10, X10, 8
	076 NotImplemented "Instruction LDUR not yet implemented."
	077 NotImplemented "Instruction CMP not yet implemented."
	078 Subtract X9, X9, 1
	079 Add X10, X10, 16
	080 Move W2, 1
	081 Move X0, X20
	082 Call 0x1C5D788
	083 Move W9, [X10]
	084 Add W9, W9, 1
	085 Add X8, X8, W9
	086 Add X0, X8, 312
	087 Move X8, [X0]
	088 Move X4, [X0+8]
	089 Move W1, 3
	090 Move X0, X20
	091 Move X2, X22
	092 Move X3, X21
	093 NotImplemented "Instruction BLR not yet implemented."
	094 Move W8, [X19+120]
	095 Compare W8, 0
	096 JumpIfNotEqual {102}
	097 Move W8, [X19+137]
	098 Compare W8, 0
	099 JumpIfEqual {102}
	100 Move W8, 1
	101 Move [X19+220], W8
	102 Move X20, [X31+32]
	103 Move X19, [X31+40]
	104 Move X22, [X31+16]
	105 Move X21, [X31+24]
	106 Move X30, [X31+48]
	107 Return 
	108 Call 0x1C17F20

Method: UnityEngine.AudioClip get_AudioClip()

Disassembly:
	0x035760DC ADRP X0, 0xB7D000
	0x035760E0 LDR X0, [X0 + 0x598]

ISIL:
	001 Move X0, [X0+128]
	002 Return X0

Method: System.Void set_AudioClip(UnityEngine.AudioClip value)

Disassembly:
	0x035760E4 BL 0x1C16CF4
	0x035760E8 ADRP X0, 0xBC0000
	0x035760EC LDR X0, [X0 + 0x228]
	0x035760F0 BL 0x1C16CF4
	0x035760F4 ADRP X0, 0xBC0000
	0x035760F8 LDR X0, [X0 + 0x230]
	0x035760FC BL 0x1C16CF4
	0x03576100 MOVZ W8, 0x1
	0x03576104 STRB W8, [X21 + 0xE84]
	0x03576108 MOV X0, X19
	0x0357610C MOV X1, X31
	0x03576110 BL 0x3C32454
	0x03576114 TBZ X0, 0x0, 0x35761F8
	0x03576118 ADRP X8, 0xB7D000
	0x0357611C LDR X8, [X8 + 0x598]
	0x03576120 LDR X21, [X19 + 0x50]
	0x03576124 LDR X0, [X8]
	0x03576128 LDR W8, [X0 + 0xE0]
	0x0357612C CBNZ W8, 0x3576134
	0x03576130 BL 0x1C16DFC
	0x03576134 MOV X0, X21
	0x03576138 MOV X1, X31
	0x0357613C MOV X2, X31
	0x03576140 BL 0x3C354F8
	0x03576144 TBZ X0, 0x0, 0x35762B4
	0x03576148 LDR X9, [X19 + 0x20]
	0x0357614C CBZ X9, 0x3576304
	0x03576150 ADRP X8, 0xB7D000
	0x03576154 LDR X8, [X8 + 0x9C8]
	0x03576158 LDR X19, [X9 + 0x18]
	0x0357615C LDR X20, [X8]
	0x03576160 LDR X8, [X20 + 0x38]
	0x03576164 CBNZ X8, 0x3576174
	0x03576168 MOV X0, X20
	0x0357616C BL 0x1C5C6E0
	0x03576170 LDR X8, [X20 + 0x38]
	0x03576174 LDR X0, [X8 + 0x10]
	0x03576178 LDRB W8, [X0 + 0x135]
	0x0357617C TBNZ X8, 0x0, 0x3576184
	0x03576180 BL 0x1C5C684
	0x03576184 LDR W8, [X0 + 0xE0]
	0x03576188 CBNZ W8, 0x3576190
	0x0357618C BL 0x1C16DFC
	0x03576190 LDR X8, [X20 + 0x38]
	0x03576194 LDR X0, [X8 + 0x10]
	0x03576198 LDRB W8, [X0 + 0x135]
	0x0357619C TBNZ X8, 0x0, 0x35761A4
	0x035761A0 BL 0x1C5C684
	0x035761A4 CBZ X19, 0x3576304
	0x035761A8 ADRP X10, 0xB82000
	0x035761AC ADRP X11, 0xBC0000
	0x035761B0 LDR X9, [X0 + 0xB8]
	0x035761B4 LDR X10, [X10 + 0x348]
	0x035761B8 LDR X8, [X19]
	0x035761BC LDR X11, [X11 + 0x230]
	0x035761C0 LDR X20, [X9]
	0x035761C4 LDR X1, [X10]
	0x035761C8 LDRH W9, [X8 + 0x12E]
	0x035761CC LDR X21, [X11]
	0x035761D0 CBZ X9, 0x35762A4
	0x035761D4 LDR X10, [X8 + 0xB0]
	0x035761D8 ADD X10, X10, 0x8
	0x035761DC LDUR X11, [X10 - 0x8]
	0x035761E0 CMP X11, X1
	0x035761E4 B.EQ 0x35762CC
	0x035761E8 SUBS X9, X9, 0x1
	0x035761EC ADD X10, X10, 0x10
	0x035761F0 B.NE 0x35761DC
	0x035761F4 B 0x35762A4
	0x035761F8 LDR X9, [X19 + 0x20]
	0x035761FC CBZ X9, 0x3576304
	0x03576200 ADRP X8, 0xB7D000
	0x03576204 LDR X8, [X8 + 0x9C8]
	0x03576208 LDR X19, [X9 + 0x18]
	0x0357620C LDR X20, [X8]
	0x03576210 LDR X8, [X20 + 0x38]
	0x03576214 CBNZ X8, 0x3576224
	0x03576218 MOV X0, X20
	0x0357621C BL 0x1C5C6E0
	0x03576220 LDR X8, [X20 + 0x38]
	0x03576224 LDR X0, [X8 + 0x10]
	0x03576228 LDRB W8, [X0 + 0x135]
	0x0357622C TBNZ X8, 0x0, 0x3576234
	0x03576230 BL 0x1C5C684
	0x03576234 LDR W8, [X0 + 0xE0]
	0x03576238 CBNZ W8, 0x3576240
	0x0357623C BL 0x1C16DFC
	0x03576240 LDR X8, [X20 + 0x38]
	0x03576244 LDR X0, [X8 + 0x10]
	0x03576248 LDRB W8, [X0 + 0x135]
	0x0357624C TBNZ X8, 0x0, 0x3576254
	0x03576250 BL 0x1C5C684
	0x03576254 CBZ X19, 0x3576304
	0x03576258 ADRP X10, 0xB82000
	0x0357625C ADRP X11, 0xBC0000
	0x03576260 LDR X9, [X0 + 0xB8]
	0x03576264 LDR X10, [X10 + 0x348]
	0x03576268 LDR X8, [X19]
	0x0357626C LDR X11, [X11 + 0x228]
	0x03576270 LDR X20, [X9]
	0x03576274 LDR X1, [X10]
	0x03576278 LDRH W9, [X8 + 0x12E]
	0x0357627C LDR X21, [X11]
	0x03576280 CBZ X9, 0x35762A4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xE6A000
	007 Move X21, 0xB7E000
	008 Move W8, [X22+3709]
	009 Move X21, [X21+1432]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {30}
	016 Move X0, 0xB7E000
	017 Move X0, [X0+2504]
	018 Call 0x1C17CF4
	019 Move X0, 0xB83000
	020 Move X0, [X0+840]
	021 Call 0x1C17CF4
	022 Move X0, 0xB7E000
	023 Move X0, [X0+1432]
	024 Call 0x1C17CF4
	025 Move X0, 0xBC1000
	026 Move X0, [X0+464]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X22+3709], W8
	030 Move X0, [X21]
	031 Move X21, [X19+128]
	032 Move W8, [X0+224]
	033 Compare W8, 0
	034 JumpIfNotEqual {36}
	035 Call 0x1C17DFC
	036 Move X0, X21
	037 Move X1, X20
	038 Move X2, X31
	039 Call Object.op_Inequality, X0, X1
	040 Move TEMP, X0
	041 And TEMP, TEMP, 1
	042 Compare TEMP, 1
	043 JumpIfNotEqual {118}
	044 Move X9, [X19+32]
	045 Move [X19+128], X20
	046 Compare X9, 0
	047 JumpIfEqual {124}
	048 Move X8, 0xB7E000
	049 Move X8, [X8+2504]
	050 Move X20, [X9+24]
	051 Move X21, [X8]
	052 Move X8, [X21+56]
	053 Compare X8, 0
	054 JumpIfNotEqual {58}
	055 Move X0, X21
	056 Call 0x1C5D6E0
	057 Move X8, [X21+56]
	058 Move X0, [X8+16]
	059 Move W8, [X0+309]
	060 Move TEMP, X8
	061 And TEMP, TEMP, 1
	062 Compare TEMP, 1
	063 JumpIfEqual {65}
	064 Call 0x1C5D684
	065 Move W8, [X0+224]
	066 Compare W8, 0
	067 JumpIfNotEqual {69}
	068 Call 0x1C17DFC
	069 Move X8, [X21+56]
	070 Move X0, [X8+16]
	071 Move W8, [X0+309]
	072 Move TEMP, X8
	073 And TEMP, TEMP, 1
	074 Compare TEMP, 1
	075 JumpIfEqual {77}
	076 Call 0x1C5D684
	077 Compare X20, 0
	078 JumpIfEqual {124}
	079 Move X10, 0xB83000
	080 Move X11, 0xBC1000
	081 Move X9, [X0+184]
	082 Move X10, [X10+840]
	083 Move X8, [X20]
	084 Move X11, [X11+464]
	085 Move X21, [X9]
	086 Move X1, [X10]
	087 NotImplemented "Instruction LDRH not yet implemented."
	088 Move X22, [X11]
	089 Compare X9, 0
	090 JumpIfEqual {97}
	091 Move X10, [X8+176]
	092 Add X10, X10, 8
	093 NotImplemented "Instruction LDUR not yet implemented."
	094 NotImplemented "Instruction CMP not yet implemented."
	095 Subtract X9, X9, 1
	096 Add X10, X10, 16
	097 Move W2, 1
	098 Move X0, X20
	099 Call 0x1C5D788
	100 Move W9, [X10]
	101 Add W9, W9, 1
	102 Add X8, X8, W9
	103 Add X0, X8, 312
	104 Move X8, [X0]
	105 Move X4, [X0+8]
	106 Move W1, 3
	107 Move X0, X20
	108 Move X2, X22
	109 Move X3, X21
	110 NotImplemented "Instruction BLR not yet implemented."
	111 Move W8, [X19+120]
	112 NotImplemented "Instruction CMP not yet implemented."
	113 Move W8, [X19+137]
	114 Compare W8, 0
	115 JumpIfEqual {118}
	116 Move W8, 1
	117 Move [X19+220], W8
	118 Move X20, [X31+32]
	119 Move X19, [X31+40]
	120 Move X22, [X31+16]
	121 Move X21, [X31+24]
	122 Move X30, [X31+48]
	123 Return 
	124 Call 0x1C17F20

Method: System.Boolean get_LoopAudioClip()

Disassembly:
	0x03576284 LDR X10, [X8 + 0xB0]
	0x03576288 ADD X10, X10, 0x8

ISIL:
	001 Move W0, [X0+136]
	002 Return X0

Method: System.Void set_LoopAudioClip(System.Boolean value)

Disassembly:
	0x0357628C LDUR X11, [X10 - 0x8]
	0x03576290 CMP X11, X1
	0x03576294 B.EQ 0x35762CC
	0x03576298 SUBS X9, X9, 0x1
	0x0357629C ADD X10, X10, 0x10
	0x035762A0 B.NE 0x357628C
	0x035762A4 MOVZ W2, 0x1
	0x035762A8 MOV X0, X19
	0x035762AC BL 0x1C5C788
	0x035762B0 B 0x35762DC
	0x035762B4 LDRB W8, [X19 + 0x89]
	0x035762B8 MOVZ W0, 0x1
	0x035762BC STR X20, [X19 + 0x50]
	0x035762C0 CBZ W8, 0x35762F8
	0x035762C4 STR W0, [X19 + 0xDC]
	0x035762C8 B 0x35762F8
	0x035762CC LDR W9, [X10]
	0x035762D0 ADD W9, W9, 0x1
	0x035762D4 ADD X8, X8, W9, 0x4, SXTW
	0x035762D8 ADD X0, X8, 0x138
	0x035762DC LDP X8, X4, [X0]
	0x035762E0 MOVZ W1, 0x2
	0x035762E4 MOV X0, X19
	0x035762E8 MOV X2, X21
	0x035762EC MOV X3, X20
	0x035762F0 BLR X8
	0x035762F4 MOV W0, W31
	0x035762F8 LDP X20, X19, [X31 + 0x10]
	0x035762FC LDP X30, X21, [X31], #0x20
	0x03576300 RET
	0x03576304 BL 0x1C16F20
	0x03576308 STP X30, X19, [X31 - 0x10]!
	0x0357630C MOV X19, X0
	0x03576310 BL 0x3575A78
	0x03576314 MOVZ W0, 0x1
	0x03576318 STR X31, [X19 + 0x50]
	0x0357631C LDP X30, X19, [X31], #0x10
	0x03576320 RET
	0x03576324 STP X30, X23, [X31 - 0x30]!
	0x03576328 STP X22, X21, [X31 + 0x10]
	0x0357632C STP X20, X19, [X31 + 0x20]
	0x03576330 ADRP X22, 0xE69000
	0x03576334 ADRP X23, 0xBC0000
	0x03576338 LDRB W8, [X22 + 0xE85]
	0x0357633C LDR X23, [X23 + 0x238]
	0x03576340 MOV X21, X2
	0x03576344 MOV W19, W1
	0x03576348 MOV X20, X0
	0x0357634C TBNZ X8, 0x0, 0x35763AC
	0x03576350 ADRP X0, 0xB7F000
	0x03576354 LDR X0, [X0 + 0x5B0]
	0x03576358 BL 0x1C16CF4
	0x0357635C ADRP X0, 0xB7D000
	0x03576360 LDR X0, [X0 + 0x9C8]
	0x03576364 BL 0x1C16CF4
	0x03576368 ADRP X0, 0xBC0000
	0x0357636C LDR X0, [X0 + 0x1A0]
	0x03576370 BL 0x1C16CF4
	0x03576374 ADRP X0, 0xB82000
	0x03576378 LDR X0, [X0 + 0x348]
	0x0357637C BL 0x1C16CF4
	0x03576380 ADRP X0, 0xBC0000
	0x03576384 LDR X0, [X0 + 0x240]
	0x03576388 BL 0x1C16CF4
	0x0357638C ADRP X0, 0xBC0000
	0x03576390 LDR X0, [X0 + 0x238]
	0x03576394 BL 0x1C16CF4
	0x03576398 ADRP X0, 0xBC0000
	0x0357639C LDR X0, [X0 + 0x248]
	0x035763A0 BL 0x1C16CF4
	0x035763A4 MOVZ W8, 0x1
	0x035763A8 STRB W8, [X22 + 0xE85]
	0x035763AC LDR X0, [X23]
	0x035763B0 BL 0x1C16F10
	0x035763B4 MOV X1, X31
	0x035763B8 MOV X22, X0
	0x035763BC BL 0x33BDD8C
	0x035763C0 CBZ X22, 0x3576594
	0x035763C4 MOV X0, X20
	0x035763C8 STP X20, X21, [X22 + 0x10]
	0x035763CC BL 0x3574AEC
	0x035763D0 CBZ X0, 0x3576464
	0x035763D4 LDRB W8, [X20 + 0x6B]
	0x035763D8 CBZ W8, 0x3576474
	0x035763DC MOV X0, X20
	0x035763E0 BL 0x3574AEC
	0x035763E4 ADRP X8, 0xB7F000
	0x035763E8 LDR X8, [X8 + 0x5B0]
	0x035763EC MOV X20, X0
	0x035763F0 LDR X8, [X8]
	0x035763F4 MOV X0, X8
	0x035763F8 BL 0x1C16F10
	0x035763FC ADRP X8, 0xBC0000
	0x03576400 LDR X8, [X8 + 0x240]
	0x03576404 MOV X1, X22
	0x03576408 MOV X3, X31
	0x0357640C MOV X21, X0
	0x03576410 LDR X2, [X8]
	0x03576414 BL 0x2A6DA40
	0x03576418 CBZ X20, 0x3576594
	0x0357641C ADRP X10, 0xBC0000
	0x03576420 LDR X8, [X20]
	0x03576424 LDR X10, [X10 + 0x1A0]
	0x03576428 LDRH W9, [X8 + 0x12E]
	0x0357642C LDR X1, [X10]
	0x03576430 CBZ X9, 0x3576454
	0x03576434 LDR X10, [X8 + 0xB0]
	0x03576438 ADD X10, X10, 0x8
	0x0357643C LDUR X11, [X10 - 0x8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xE6A000
	006 Move W8, [X21+3710]
	007 Move X19, X0
	008 And W20, W1, 1
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {27}
	013 Move X0, 0xB7E000
	014 Move X0, [X0+2504]
	015 Call 0x1C17CF4
	016 Move X0, 0xBC1000
	017 Move X0, [X0+472]
	018 Call 0x1C17CF4
	019 Move X0, 0xB83000
	020 Move X0, [X0+840]
	021 Call 0x1C17CF4
	022 Move X0, 0xBC1000
	023 Move X0, [X0+480]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X21+3710], W8
	027 Move W8, [X19+136]
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Move W8, [X19+137]
	030 Move [X19+136], W20
	031 Compare W8, 0
	032 JumpIfEqual {120}
	033 Move W8, [X19+120]
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Move X8, [X19+72]
	036 Compare X8, 0
	037 JumpIfEqual {49}
	038 Move X9, 0xBC1000
	039 Move X9, [X9+472]
	040 Move X10, [X8]
	041 Move X9, [X9]
	042 Move W12, [X10+304]
	043 Move W11, [X9+304]
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Move X10, [X10+200]
	046 Add X10, X10, X11
	047 NotImplemented "Instruction LDUR not yet implemented."
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move X9, [X19+32]
	050 Compare X9, 0
	051 JumpIfEqual {125}
	052 Move X8, 0xB7E000
	053 Move X8, [X8+2504]
	054 Move X19, [X9+24]
	055 Move X20, [X8]
	056 Move X8, [X20+56]
	057 Compare X8, 0
	058 JumpIfNotEqual {62}
	059 Move X0, X20
	060 Call 0x1C5D6E0
	061 Move X8, [X20+56]
	062 Move X0, [X8+16]
	063 Move W8, [X0+309]
	064 Move TEMP, X8
	065 And TEMP, TEMP, 1
	066 Compare TEMP, 1
	067 JumpIfEqual {69}
	068 Call 0x1C5D684
	069 Move W8, [X0+224]
	070 Compare W8, 0
	071 JumpIfNotEqual {73}
	072 Call 0x1C17DFC
	073 Move X8, [X20+56]
	074 Move X0, [X8+16]
	075 Move W8, [X0+309]
	076 Move TEMP, X8
	077 And TEMP, TEMP, 1
	078 Compare TEMP, 1
	079 JumpIfEqual {81}
	080 Call 0x1C5D684
	081 Compare X19, 0
	082 JumpIfEqual {125}
	083 Move X10, 0xB83000
	084 Move X11, 0xBC1000
	085 Move X9, [X0+184]
	086 Move X10, [X10+840]
	087 Move X8, [X19]
	088 Move X11, [X11+480]
	089 Move X20, [X9]
	090 Move X1, [X10]
	091 NotImplemented "Instruction LDRH not yet implemented."
	092 Move X21, [X11]
	093 Compare X9, 0
	094 JumpIfEqual {101}
	095 Move X10, [X8+176]
	096 Add X10, X10, 8
	097 NotImplemented "Instruction LDUR not yet implemented."
	098 NotImplemented "Instruction CMP not yet implemented."
	099 Subtract X9, X9, 1
	100 Add X10, X10, 16
	101 Move W2, 1
	102 Move X0, X19
	103 Call 0x1C5D788
	104 Move W9, [X10]
	105 Add W9, W9, 1
	106 Add X8, X8, W9
	107 Add X0, X8, 312
	108 Move X5, [X0]
	109 Move X4, [X0+8]
	110 Move X0, X19
	111 Move X3, X20
	112 Move X20, [X31+16]
	113 Move X19, [X31+24]
	114 Move W1, 1
	115 Move X2, X21
	116 Move X30, [X31+32]
	117 Move X21, [X31+40]
	118 CallNoReturn X5
	119 Move [X8+32], W20
	120 Move X20, [X31+16]
	121 Move X19, [X31+24]
	122 Move X30, [X31+32]
	123 Move X21, [X31+40]
	124 Return 
	125 Call 0x1C17F20

Method: POpusCodec.Enums.SamplingRate get_SamplingRate()

Disassembly:
	0x03576440 CMP X11, X1
	0x03576444 B.EQ 0x3576530

ISIL:
	001 Move W0, [X0+108]
	002 Return X0

Method: System.Void set_SamplingRate(POpusCodec.Enums.SamplingRate value)

Disassembly:
	0x03576448 SUBS X9, X9, 0x1
	0x0357644C ADD X10, X10, 0x10
	0x03576450 B.NE 0x357643C
	0x03576454 MOVZ W2, 0x3
	0x03576458 MOV X0, X20
	0x0357645C BL 0x1C5C788
	0x03576460 B 0x3576540
	0x03576464 LDP X20, X19, [X31 + 0x20]
	0x03576468 LDP X22, X21, [X31 + 0x10]
	0x0357646C LDP X30, X23, [X31], #0x30
	0x03576470 RET
	0x03576474 LDR X9, [X20 + 0x20]
	0x03576478 CBZ X9, 0x3576594
	0x0357647C ADRP X8, 0xB7D000
	0x03576480 LDR X8, [X8 + 0x9C8]
	0x03576484 LDR X19, [X9 + 0x18]
	0x03576488 LDR X20, [X8]
	0x0357648C LDR X8, [X20 + 0x38]
	0x03576490 CBNZ X8, 0x35764A0
	0x03576494 MOV X0, X20
	0x03576498 BL 0x1C5C6E0
	0x0357649C LDR X8, [X20 + 0x38]
	0x035764A0 LDR X0, [X8 + 0x10]
	0x035764A4 LDRB W8, [X0 + 0x135]
	0x035764A8 TBNZ X8, 0x0, 0x35764B0
	0x035764AC BL 0x1C5C684
	0x035764B0 LDR W8, [X0 + 0xE0]
	0x035764B4 CBNZ W8, 0x35764BC
	0x035764B8 BL 0x1C16DFC
	0x035764BC LDR X8, [X20 + 0x38]
	0x035764C0 LDR X0, [X8 + 0x10]
	0x035764C4 LDRB W8, [X0 + 0x135]
	0x035764C8 TBNZ X8, 0x0, 0x35764D0
	0x035764CC BL 0x1C5C684
	0x035764D0 CBZ X19, 0x3576594
	0x035764D4 ADRP X10, 0xB82000
	0x035764D8 ADRP X11, 0xBC0000
	0x035764DC LDR X9, [X0 + 0xB8]
	0x035764E0 LDR X10, [X10 + 0x348]
	0x035764E4 LDR X8, [X19]
	0x035764E8 LDR X11, [X11 + 0x248]
	0x035764EC LDR X20, [X9]
	0x035764F0 LDR X1, [X10]
	0x035764F4 LDRH W9, [X8 + 0x12E]
	0x035764F8 LDR X21, [X11]
	0x035764FC CBZ X9, 0x3576520
	0x03576500 LDR X10, [X8 + 0xB0]
	0x03576504 ADD X10, X10, 0x8
	0x03576508 LDUR X11, [X10 - 0x8]
	0x0357650C CMP X11, X1
	0x03576510 B.EQ 0x3576560
	0x03576514 SUBS X9, X9, 0x1
	0x03576518 ADD X10, X10, 0x10
	0x0357651C B.NE 0x3576508
	0x03576520 MOVZ W2, 0x1
	0x03576524 MOV X0, X19
	0x03576528 BL 0x1C5C788
	0x0357652C B 0x3576570
	0x03576530 LDR W9, [X10]
	0x03576534 ADD W9, W9, 0x3
	0x03576538 ADD X8, X8, W9, 0x4, SXTW
	0x0357653C ADD X0, X8, 0x138
	0x03576540 LDP X4, X3, [X0]
	0x03576544 MOV X0, X20
	0x03576548 MOV W1, W19
	0x0357654C MOV X2, X21
	0x03576550 LDP X20, X19, [X31 + 0x20]
	0x03576554 LDP X22, X21, [X31 + 0x10]
	0x03576558 LDP X30, X23, [X31], #0x30
	0x0357655C BR X4
	0x03576560 LDR W9, [X10]
	0x03576564 ADD W9, W9, 0x1
	0x03576568 ADD X8, X8, W9, 0x4, SXTW
	0x0357656C ADD X0, X8, 0x138
	0x03576570 LDP X5, X4, [X0]
	0x03576574 MOV X0, X19
	0x03576578 MOV X2, X21
	0x0357657C MOV X3, X20
	0x03576580 LDP X20, X19, [X31 + 0x20]
	0x03576584 LDP X22, X21, [X31 + 0x10]
	0x03576588 MOVZ W1, 0x2
	0x0357658C LDP X30, X23, [X31], #0x30
	0x03576590 BR X5
	0x03576594 BL 0x1C16F20
	0x03576598 MOV X1, X31
	0x0357659C B 0x33BDD8C
	0x035765A0 STR D8, [X31 - 0x40]!
	0x035765A4 STR X30, [X31 + 0x8]
	0x035765A8 STP X24, X23, [X31 + 0x10]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xE6A000
	007 Move W8, [X21+3711]
	008 Move W20, W1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {25}
	014 Move X0, 0xB7E000
	015 Move X0, [X0+2504]
	016 Call 0x1C17CF4
	017 Move X0, 0xB83000
	018 Move X0, [X0+840]
	019 Call 0x1C17CF4
	020 Move X0, 0xBC1000
	021 Move X0, [X0+488]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+3711], W8
	025 Move W8, [X19+108]
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move X9, [X19+32]
	028 Move [X19+108], W20
	029 Compare X9, 0
	030 JumpIfEqual {105}
	031 Move X8, 0xB7E000
	032 Move X8, [X8+2504]
	033 Move X20, [X9+24]
	034 Move X21, [X8]
	035 Move X8, [X21+56]
	036 Compare X8, 0
	037 JumpIfNotEqual {41}
	038 Move X0, X21
	039 Call 0x1C5D6E0
	040 Move X8, [X21+56]
	041 Move X0, [X8+16]
	042 Move W8, [X0+309]
	043 Move TEMP, X8
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfEqual {48}
	047 Call 0x1C5D684
	048 Move W8, [X0+224]
	049 Compare W8, 0
	050 JumpIfNotEqual {52}
	051 Call 0x1C17DFC
	052 Move X8, [X21+56]
	053 Move X0, [X8+16]
	054 Move W8, [X0+309]
	055 Move TEMP, X8
	056 And TEMP, TEMP, 1
	057 Compare TEMP, 1
	058 JumpIfEqual {60}
	059 Call 0x1C5D684
	060 Compare X20, 0
	061 JumpIfEqual {105}
	062 Move X10, 0xB83000
	063 Move X11, 0xBC1000
	064 Move X9, [X0+184]
	065 Move X10, [X10+840]
	066 Move X8, [X20]
	067 Move X11, [X11+488]
	068 Move X21, [X9]
	069 Move X1, [X10]
	070 NotImplemented "Instruction LDRH not yet implemented."
	071 Move X22, [X11]
	072 Compare X9, 0
	073 JumpIfEqual {80}
	074 Move X10, [X8+176]
	075 Add X10, X10, 8
	076 NotImplemented "Instruction LDUR not yet implemented."
	077 NotImplemented "Instruction CMP not yet implemented."
	078 Subtract X9, X9, 1
	079 Add X10, X10, 16
	080 Move W2, 1
	081 Move X0, X20
	082 Call 0x1C5D788
	083 Move W9, [X10]
	084 Add W9, W9, 1
	085 Add X8, X8, W9
	086 Add X0, X8, 312
	087 Move X8, [X0]
	088 Move X4, [X0+8]
	089 Move W1, 3
	090 Move X0, X20
	091 Move X2, X22
	092 Move X3, X21
	093 NotImplemented "Instruction BLR not yet implemented."
	094 Move W8, [X19+137]
	095 Compare W8, 0
	096 JumpIfEqual {99}
	097 Move W8, 1
	098 Move [X19+220], W8
	099 Move X20, [X31+32]
	100 Move X19, [X31+40]
	101 Move X22, [X31+16]
	102 Move X21, [X31+24]
	103 Move X30, [X31+48]
	104 Return 
	105 Call 0x1C17F20

Method: Photon.Voice.OpusCodec/FrameDuration get_FrameDuration()

Disassembly:
	0x035765AC STP X22, X21, [X31 + 0x20]
	0x035765B0 STP X20, X19, [X31 + 0x30]

ISIL:
	001 Move W0, [X0+112]
	002 Return X0

Method: System.Void set_FrameDuration(Photon.Voice.OpusCodec/FrameDuration value)

Disassembly:
	0x035765B4 ADRP X21, 0xE69000
	0x035765B8 ADRP X20, 0xB7D000
	0x035765BC LDRB W8, [X21 + 0xE86]
	0x035765C0 LDR X20, [X20 + 0x598]
	0x035765C4 MOV X19, X0
	0x035765C8 TBNZ X8, 0x0, 0x3576640
	0x035765CC ADRP X0, 0xB7D000
	0x035765D0 LDR X0, [X0 + 0x9C8]
	0x035765D4 BL 0x1C16CF4
	0x035765D8 ADRP X0, 0xB7D000
	0x035765DC LDR X0, [X0 + 0xE00]
	0x035765E0 BL 0x1C16CF4
	0x035765E4 ADRP X0, 0xB82000
	0x035765E8 LDR X0, [X0 + 0x348]
	0x035765EC BL 0x1C16CF4
	0x035765F0 ADRP X0, 0xBA7000
	0x035765F4 LDR X0, [X0 + 0xF50]
	0x035765F8 BL 0x1C16CF4
	0x035765FC ADRP X0, 0xBBF000
	0x03576600 LDR X0, [X0 + 0x820]
	0x03576604 BL 0x1C16CF4
	0x03576608 ADRP X0, 0xB7D000
	0x0357660C LDR X0, [X0 + 0x598]
	0x03576610 BL 0x1C16CF4
	0x03576614 ADRP X0, 0xBC0000
	0x03576618 LDR X0, [X0 + 0x250]
	0x0357661C BL 0x1C16CF4
	0x03576620 ADRP X0, 0xBC0000
	0x03576624 LDR X0, [X0 + 0x258]
	0x03576628 BL 0x1C16CF4
	0x0357662C ADRP X0, 0xBC0000
	0x03576630 LDR X0, [X0 + 0x260]
	0x03576634 BL 0x1C16CF4
	0x03576638 MOVZ W8, 0x1
	0x0357663C STRB W8, [X21 + 0xE86]
	0x03576640 MOV X0, X19
	0x03576644 BL 0x3575A78
	0x03576648 LDR X0, [X20]
	0x0357664C LDR X20, [X19 + 0x50]
	0x03576650 LDR W8, [X0 + 0xE0]
	0x03576654 CBNZ W8, 0x357665C
	0x03576658 BL 0x1C16DFC
	0x0357665C MOV X0, X20
	0x03576660 MOV X1, X31
	0x03576664 MOV X2, X31
	0x03576668 BL 0x3C3883C
	0x0357666C LDR X9, [X19 + 0x20]
	0x03576670 CBZ X9, 0x3576B98
	0x03576674 ADRP X24, 0xB7D000
	0x03576678 LDR X24, [X24 + 0x9C8]
	0x0357667C LDR X20, [X9 + 0x18]
	0x03576680 MOV W22, W0
	0x03576684 LDR X21, [X24]
	0x03576688 LDR X8, [X21 + 0x38]
	0x0357668C CBNZ X8, 0x357669C
	0x03576690 MOV X0, X21
	0x03576694 BL 0x1C5C6E0
	0x03576698 LDR X8, [X21 + 0x38]
	0x0357669C LDR X0, [X8 + 0x10]
	0x035766A0 LDRB W8, [X0 + 0x135]
	0x035766A4 TBNZ X8, 0x0, 0x35766AC
	0x035766A8 BL 0x1C5C684
	0x035766AC LDR W8, [X0 + 0xE0]
	0x035766B0 CBNZ W8, 0x35766B8
	0x035766B4 BL 0x1C16DFC
	0x035766B8 LDR X8, [X21 + 0x38]
	0x035766BC LDR X0, [X8 + 0x10]
	0x035766C0 LDRB W8, [X0 + 0x135]
	0x035766C4 TBNZ X8, 0x0, 0x35766CC
	0x035766C8 BL 0x1C5C684
	0x035766CC CBZ X20, 0x3576B98
	0x035766D0 ADRP X23, 0xB82000
	0x035766D4 LDR X8, [X0 + 0xB8]
	0x035766D8 LDR X23, [X23 + 0x348]
	0x035766DC LDR X21, [X8]
	0x035766E0 LDR X1, [X23]
	0x035766E4 TBZ X22, 0x0, 0x3576730
	0x035766E8 ADRP X10, 0xBC0000
	0x035766EC LDR X8, [X20]
	0x035766F0 LDR X10, [X10 + 0x260]
	0x035766F4 LDRH W9, [X8 + 0x12E]
	0x035766F8 LDR X19, [X10]
	0x035766FC CBZ X9, 0x3576720
	0x03576700 LDR X10, [X8 + 0xB0]
	0x03576704 ADD X10, X10, 0x8
	0x03576708 LDUR X11, [X10 - 0x8]
	0x0357670C CMP X11, X1
	0x03576710 B.EQ 0x3576778
	0x03576714 SUBS X9, X9, 0x1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xE6A000
	007 Move W8, [X21+3712]
	008 Move W20, W1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {25}
	014 Move X0, 0xB7E000
	015 Move X0, [X0+2504]
	016 Call 0x1C17CF4
	017 Move X0, 0xB83000
	018 Move X0, [X0+840]
	019 Call 0x1C17CF4
	020 Move X0, 0xBC1000
	021 Move X0, [X0+496]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+3712], W8
	025 Move W8, [X19+112]
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move X9, [X19+32]
	028 Move [X19+112], W20
	029 Compare X9, 0
	030 JumpIfEqual {105}
	031 Move X8, 0xB7E000
	032 Move X8, [X8+2504]
	033 Move X20, [X9+24]
	034 Move X21, [X8]
	035 Move X8, [X21+56]
	036 Compare X8, 0
	037 JumpIfNotEqual {41}
	038 Move X0, X21
	039 Call 0x1C5D6E0
	040 Move X8, [X21+56]
	041 Move X0, [X8+16]
	042 Move W8, [X0+309]
	043 Move TEMP, X8
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfEqual {48}
	047 Call 0x1C5D684
	048 Move W8, [X0+224]
	049 Compare W8, 0
	050 JumpIfNotEqual {52}
	051 Call 0x1C17DFC
	052 Move X8, [X21+56]
	053 Move X0, [X8+16]
	054 Move W8, [X0+309]
	055 Move TEMP, X8
	056 And TEMP, TEMP, 1
	057 Compare TEMP, 1
	058 JumpIfEqual {60}
	059 Call 0x1C5D684
	060 Compare X20, 0
	061 JumpIfEqual {105}
	062 Move X10, 0xB83000
	063 Move X11, 0xBC1000
	064 Move X9, [X0+184]
	065 Move X10, [X10+840]
	066 Move X8, [X20]
	067 Move X11, [X11+496]
	068 Move X21, [X9]
	069 Move X1, [X10]
	070 NotImplemented "Instruction LDRH not yet implemented."
	071 Move X22, [X11]
	072 Compare X9, 0
	073 JumpIfEqual {80}
	074 Move X10, [X8+176]
	075 Add X10, X10, 8
	076 NotImplemented "Instruction LDUR not yet implemented."
	077 NotImplemented "Instruction CMP not yet implemented."
	078 Subtract X9, X9, 1
	079 Add X10, X10, 16
	080 Move W2, 1
	081 Move X0, X20
	082 Call 0x1C5D788
	083 Move W9, [X10]
	084 Add W9, W9, 1
	085 Add X8, X8, W9
	086 Add X0, X8, 312
	087 Move X8, [X0]
	088 Move X4, [X0+8]
	089 Move W1, 3
	090 Move X0, X20
	091 Move X2, X22
	092 Move X3, X21
	093 NotImplemented "Instruction BLR not yet implemented."
	094 Move W8, [X19+137]
	095 Compare W8, 0
	096 JumpIfEqual {99}
	097 Move W8, 1
	098 Move [X19+220], W8
	099 Move X20, [X31+32]
	100 Move X19, [X31+40]
	101 Move X22, [X31+16]
	102 Move X21, [X31+24]
	103 Move X30, [X31+48]
	104 Return 
	105 Call 0x1C17F20

Method: System.Int32 get_Bitrate()

Disassembly:
	0x03576718 ADD X10, X10, 0x10
	0x0357671C B.NE 0x3576708

ISIL:
	001 Move W0, [X0+116]
	002 Return X0

Method: System.Void set_Bitrate(System.Int32 value)

Disassembly:
	0x03576720 MOVZ W2, 0x1
	0x03576724 MOV X0, X20
	0x03576728 BL 0x1C5C788
	0x0357672C B 0x3576788
	0x03576730 ADRP X10, 0xBC0000
	0x03576734 LDR X8, [X20]
	0x03576738 LDR X10, [X10 + 0x250]
	0x0357673C LDRH W9, [X8 + 0x12E]
	0x03576740 LDR X22, [X10]
	0x03576744 CBZ X9, 0x3576768
	0x03576748 LDR X10, [X8 + 0xB0]
	0x0357674C ADD X10, X10, 0x8
	0x03576750 LDUR X11, [X10 - 0x8]
	0x03576754 CMP X11, X1
	0x03576758 B.EQ 0x35767B4
	0x0357675C SUBS X9, X9, 0x1
	0x03576760 ADD X10, X10, 0x10
	0x03576764 B.NE 0x3576750
	0x03576768 MOVZ W2, 0x1
	0x0357676C MOV X0, X20
	0x03576770 BL 0x1C5C788
	0x03576774 B 0x35767C4
	0x03576778 LDR W9, [X10]
	0x0357677C ADD W9, W9, 0x1
	0x03576780 ADD X8, X8, W9, 0x4, SXTW
	0x03576784 ADD X0, X8, 0x138
	0x03576788 LDP X5, X4, [X0]
	0x0357678C MOV X0, X20
	0x03576790 MOV X2, X19
	0x03576794 MOV X3, X21
	0x03576798 LDP X20, X19, [X31 + 0x30]
	0x0357679C LDP X22, X21, [X31 + 0x20]
	0x035767A0 LDP X24, X23, [X31 + 0x10]
	0x035767A4 LDR X30, [X31 + 0x8]
	0x035767A8 MOVZ W1, 0x3
	0x035767AC LDR V8, [X31], #0x40
	0x035767B0 BR X5
	0x035767B4 LDR W9, [X10]
	0x035767B8 ADD W9, W9, 0x1
	0x035767BC ADD X8, X8, W9, 0x4, SXTW
	0x035767C0 ADD X0, X8, 0x138
	0x035767C4 LDP X8, X4, [X0]
	0x035767C8 MOVZ W1, 0x3
	0x035767CC MOV X0, X20
	0x035767D0 MOV X2, X22
	0x035767D4 MOV X3, X21
	0x035767D8 BLR X8
	0x035767DC LDR X20, [X19 + 0x48]
	0x035767E0 CBZ X20, 0x3576848
	0x035767E4 ADRP X10, 0xB7D000
	0x035767E8 LDR X8, [X20]
	0x035767EC LDR X10, [X10 + 0xE00]
	0x035767F0 LDRH W9, [X8 + 0x12E]
	0x035767F4 LDR X1, [X10]
	0x035767F8 CBZ X9, 0x357681C
	0x035767FC LDR X10, [X8 + 0xB0]
	0x03576800 ADD X10, X10, 0x8
	0x03576804 LDUR X11, [X10 - 0x8]
	0x03576808 CMP X11, X1
	0x0357680C B.EQ 0x357682C
	0x03576810 SUBS X9, X9, 0x1
	0x03576814 ADD X10, X10, 0x10
	0x03576818 B.NE 0x3576804
	0x0357681C MOV X0, X20
	0x03576820 MOV W2, W31
	0x03576824 BL 0x1C5C788
	0x03576828 B 0x3576838
	0x0357682C LDRSW X9, [X10]
	0x03576830 ADD X8, X8, X9, 0x4, LSL
	0x03576834 ADD X0, X8, 0x138
	0x03576838 LDP X8, X1, [X0]
	0x0357683C MOV X0, X20
	0x03576840 BLR X8
	0x03576844 STR X31, [X19 + 0x48]
	0x03576848 LDR X0, [X19 + 0x40]
	0x0357684C CBZ X0, 0x3576B98
	0x03576850 MOV X1, X31
	0x03576854 BL 0x355A7B0
	0x03576858 MOV X0, X19
	0x0357685C BL 0x3576B9C
	0x03576860 STR X0, [X19 + 0x40]
	0x03576864 ADRP X21, 0xBBF000
	0x03576868 LDR X21, [X21 + 0x820]
	0x0357686C MOV X20, X0
	0x03576870 LDR X0, [X21]
	0x03576874 LDR W8, [X0 + 0xE0]
	0x03576878 CBNZ W8, 0x3576884
	0x0357687C BL 0x1C16DFC
	0x03576880 LDR X0, [X21]
	0x03576884 LDR X8, [X0 + 0xB8]
	0x03576888 LDR X8, [X8]
	0x0357688C CMP X20, X8
	0x03576890 B.EQ 0x35768FC
	0x03576894 MOV X0, X19
	0x03576898 BL 0x3574408
	0x0357689C CBZ X0, 0x3576AB4
	0x035768A0 MOV X0, X19
	0x035768A4 BL 0x3574408
	0x035768A8 CBZ X0, 0x3576B98
	0x035768AC ADRP X22, 0xBA7000
	0x035768B0 LDR X8, [X0]
	0x035768B4 LDR V8, [X19 + 0x2C]
	0x035768B8 LDR X22, [X22 + 0xF50]
	0x035768BC MOV X20, X0
	0x035768C0 LDRH W9, [X8 + 0x12E]
	0x035768C4 LDR X1, [X22]
	0x035768C8 CBZ X9, 0x35768EC
	0x035768CC LDR X10, [X8 + 0xB0]
	0x035768D0 ADD X10, X10, 0x8
	0x035768D4 LDUR X11, [X10 - 0x8]
	0x035768D8 CMP X11, X1
	0x035768DC B.EQ 0x35769A8
	0x035768E0 SUBS X9, X9, 0x1
	0x035768E4 ADD X10, X10, 0x10
	0x035768E8 B.NE 0x35768D4
	0x035768EC MOVZ W2, 0x3
	0x035768F0 MOV X0, X20
	0x035768F4 BL 0x1C5C788
	0x035768F8 B 0x35769B8
	0x035768FC LDR X9, [X19 + 0x20]
	0x03576900 CBZ X9, 0x3576B98
	0x03576904 LDR X21, [X24]
	0x03576908 LDR X20, [X9 + 0x18]
	0x0357690C LDR X8, [X21 + 0x38]
	0x03576910 CBNZ X8, 0x3576920
	0x03576914 MOV X0, X21
	0x03576918 BL 0x1C5C6E0
	0x0357691C LDR X8, [X21 + 0x38]
	0x03576920 LDR X0, [X8 + 0x10]
	0x03576924 LDRB W8, [X0 + 0x135]
	0x03576928 TBNZ X8, 0x0, 0x3576930
	0x0357692C BL 0x1C5C684
	0x03576930 LDR W8, [X0 + 0xE0]
	0x03576934 CBNZ W8, 0x357693C
	0x03576938 BL 0x1C16DFC
	0x0357693C LDR X8, [X21 + 0x38]
	0x03576940 LDR X0, [X8 + 0x10]
	0x03576944 LDRB W8, [X0 + 0x135]
	0x03576948 TBNZ X8, 0x0, 0x3576950
	0x0357694C BL 0x1C5C684
	0x03576950 CBZ X20, 0x3576B98
	0x03576954 ADRP X10, 0xBC0000
	0x03576958 LDR X9, [X0 + 0xB8]
	0x0357695C LDR X8, [X20]
	0x03576960 LDR X1, [X23]
	0x03576964 LDR X10, [X10 + 0x258]
	0x03576968 LDR X21, [X9]
	0x0357696C LDRH W9, [X8 + 0x12E]
	0x03576970 LDR X22, [X10]
	0x03576974 CBZ X9, 0x3576998
	0x03576978 LDR X10, [X8 + 0xB0]
	0x0357697C ADD X10, X10, 0x8
	0x03576980 LDUR X11, [X10 - 0x8]
	0x03576984 CMP X11, X1
	0x03576988 B.EQ 0x3576AEC
	0x0357698C SUBS X9, X9, 0x1
	0x03576990 ADD X10, X10, 0x10
	0x03576994 B.NE 0x3576980
	0x03576998 MOVZ W2, 0x1
	0x0357699C MOV X0, X20
	0x035769A0 BL 0x1C5C788
	0x035769A4 B 0x3576AFC
	0x035769A8 LDR W9, [X10]
	0x035769AC ADD W9, W9, 0x3
	0x035769B0 ADD X8, X8, W9, 0x4, SXTW
	0x035769B4 ADD X0, X8, 0x138
	0x035769B8 LDP X8, X1, [X0]
	0x035769BC MOV X0, X20
	0x035769C0 MOV V0.16B, V8.16B
	0x035769C4 BLR X8
	0x035769C8 MOV X0, X19
	0x035769CC BL 0x3574408
	0x035769D0 CBZ X0, 0x3576B98
	0x035769D4 LDR X8, [X0]
	0x035769D8 LDR W21, [X19 + 0x30]
	0x035769DC LDR X1, [X22]
	0x035769E0 MOV X20, X0
	0x035769E4 LDRH W9, [X8 + 0x12E]
	0x035769E8 CBZ X9, 0x3576A0C
	0x035769EC LDR X10, [X8 + 0xB0]
	0x035769F0 ADD X10, X10, 0x8
	0x035769F4 LDUR X11, [X10 - 0x8]
	0x035769F8 CMP X11, X1
	0x035769FC B.EQ 0x3576A1C
	0x03576A00 SUBS X9, X9, 0x1
	0x03576A04 ADD X10, X10, 0x10
	0x03576A08 B.NE 0x35769F4
	0x03576A0C MOVZ W2, 0x9
	0x03576A10 MOV X0, X20
	0x03576A14 BL 0x1C5C788
	0x03576A18 B 0x3576A2C
	0x03576A1C LDR W9, [X10]
	0x03576A20 ADD W9, W9, 0x9
	0x03576A24 ADD X8, X8, W9, 0x4, SXTW
	0x03576A28 ADD X0, X8, 0x138
	0x03576A2C LDP X8, X2, [X0]
	0x03576A30 MOV X0, X20
	0x03576A34 MOV W1, W21
	0x03576A38 BLR X8
	0x03576A3C MOV X0, X19
	0x03576A40 BL 0x3574408
	0x03576A44 CBZ X0, 0x3576B98

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+32], X22
	004 Move [X31+40], X21
	005 Move [X31+48], X20
	006 Move [X31+56], X19
	007 Move X20, 0xE6A000
	008 Move W8, [X20+3713]
	009 Move W21, W1
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {35}
	015 Move X0, 0xB7E000
	016 Move X0, [X0+2504]
	017 Call 0x1C17CF4
	018 Move X0, 0xB83000
	019 Move X0, [X0+840]
	020 Call 0x1C17CF4
	021 Move X0, 0xB7E000
	022 Move X0, [X0+1880]
	023 Call 0x1C17CF4
	024 Move X0, 0xB7E000
	025 Move X0, [X0+2512]
	026 Call 0x1C17CF4
	027 Move X0, 0xBC1000
	028 Move X0, [X0+504]
	029 Call 0x1C17CF4
	030 Move X0, 0xBC1000
	031 Move X0, [X0+512]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X20+3713], W8
	035 Move W8, [X19+116]
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move TEMP, 0x176F
	038 Not TEMP
	039 Move W8, TEMP
	040 Move W9, 0xB0C1
	041 Add W8, W21, W8
	042 NotImplemented "Instruction MOVK not yet implemented."
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Move X9, [X19+32]
	045 Move [X19+116], W21
	046 Compare X9, 0
	047 JumpIfEqual {221}
	048 Move X8, 0xB7E000
	049 Move X8, [X8+2504]
	050 Move X20, [X9+24]
	051 Move X21, [X8]
	052 Move X8, [X21+56]
	053 Compare X8, 0
	054 JumpIfNotEqual {58}
	055 Move X0, X21
	056 Call 0x1C5D6E0
	057 Move X8, [X21+56]
	058 Move X0, [X8+16]
	059 Move W8, [X0+309]
	060 Move TEMP, X8
	061 And TEMP, TEMP, 1
	062 Compare TEMP, 1
	063 JumpIfEqual {65}
	064 Call 0x1C5D684
	065 Move W8, [X0+224]
	066 Compare W8, 0
	067 JumpIfNotEqual {69}
	068 Call 0x1C17DFC
	069 Move X8, [X21+56]
	070 Move X0, [X8+16]
	071 Move W8, [X0+309]
	072 Move TEMP, X8
	073 And TEMP, TEMP, 1
	074 Compare TEMP, 1
	075 JumpIfEqual {77}
	076 Call 0x1C5D684
	077 Compare X20, 0
	078 JumpIfEqual {221}
	079 Move X10, 0xB83000
	080 Move X11, 0xBC1000
	081 Move X9, [X0+184]
	082 Move X10, [X10+840]
	083 Move X8, [X20]
	084 Move X11, [X11+504]
	085 Move X21, [X9]
	086 Move X1, [X10]
	087 NotImplemented "Instruction LDRH not yet implemented."
	088 Move X22, [X11]
	089 Compare X9, 0
	090 JumpIfEqual {97}
	091 Move X10, [X8+176]
	092 Add X10, X10, 8
	093 NotImplemented "Instruction LDUR not yet implemented."
	094 NotImplemented "Instruction CMP not yet implemented."
	095 Subtract X9, X9, 1
	096 Add X10, X10, 16
	097 Move W2, 1
	098 Move X0, X20
	099 Call 0x1C5D788
	100 Move X8, [X19+32]
	101 Compare X8, 0
	102 JumpIfEqual {221}
	103 Move X19, [X8+24]
	104 Move X8, 0xB7E000
	105 Move X8, [X8+2512]
	106 Move W1, 3
	107 Move X0, [X8]
	108 Call 0x1C17D6C
	109 Move X22, 0xB7E000
	110 Move X22, [X22+1880]
	111 Move X20, X0
	112 Add X1, X31, 28
	113 Move [X31+28], W21
	114 Move X0, [X22]
	115 Call 0x1C17E04
	116 Compare X20, 0
	117 JumpIfEqual {221}
	118 Move X21, X0
	119 Compare X0, 0
	120 JumpIfEqual {127}
	121 Move X8, [X20]
	122 Move X0, X21
	123 Move X1, [X8+64]
	124 Call 0x1C17E00
	125 Compare X0, 0
	126 JumpIfEqual {223}
	127 Move W8, [X20+24]
	128 Compare W8, 0
	129 JumpIfEqual {222}
	130 Move [X20+32], X21
	131 Move X0, [X22]
	132 Move W8, 0x1770
	133 Add X1, X31, 24
	134 Move [X31+24], W8
	135 Call 0x1C17E04
	136 Move X21, X0
	137 Compare X0, 0
	138 JumpIfEqual {145}
	139 Move X8, [X20]
	140 Move X0, X21
	141 Move X1, [X8+64]
	142 Call 0x1C17E00
	143 Compare X0, 0
	144 JumpIfEqual {223}
	145 Move W8, [X20+24]
	146 NotImplemented "Instruction CMP not yet implemented."
	147 Move [X20+40], X21
	148 Move X0, [X22]
	149 Move W8, 0xC830
	150 NotImplemented "Instruction MOVK not yet implemented."
	151 Add X1, X31, 12
	152 Move [X31+12], W8
	153 Call 0x1C17E04
	154 Move X21, X0
	155 Compare X0, 0
	156 JumpIfEqual {163}
	157 Move X8, [X20]
	158 Move X0, X21
	159 Move X1, [X8+64]
	160 Call 0x1C17E00
	161 Compare X0, 0
	162 JumpIfEqual {223}
	163 Move W8, [X20+24]
	164 NotImplemented "Instruction CMP not yet implemented."
	165 Move [X20+48], X21
	166 Compare X19, 0
	167 JumpIfEqual {221}
	168 Move X9, 0xB83000
	169 Move X8, [X19]
	170 Move X9, [X9+840]
	171 Move X10, 0xBC1000
	172 Move X1, [X9]
	173 Move X10, [X10+512]
	174 NotImplemented "Instruction LDRH not yet implemented."
	175 Move X21, [X10]
	176 Compare X9, 0
	177 JumpIfEqual {184}
	178 Move X10, [X8+176]
	179 Add X10, X10, 8
	180 NotImplemented "Instruction LDUR not yet implemented."
	181 NotImplemented "Instruction CMP not yet implemented."
	182 Subtract X9, X9, 1
	183 Add X10, X10, 16
	184 Move W2, 1
	185 Move X0, X19
	186 Call 0x1C5D788
	187 Move W9, [X10]
	188 Add W9, W9, 1
	189 Add X8, X8, W9
	190 Add X0, X8, 312
	191 Move X8, [X0]
	192 Move X4, [X0+8]
	193 Move W1, 3
	194 Move X0, X20
	195 Move X2, X22
	196 Move X3, X21
	197 NotImplemented "Instruction BLR not yet implemented."
	198 Move W8, [X19+137]
	199 Compare W8, 0
	200 JumpIfEqual {214}
	201 Move W8, 1
	202 Move [X19+220], W8
	203 Move W9, [X10]
	204 Add W9, W9, 1
	205 Add X8, X8, W9
	206 Add X0, X8, 312
	207 Move X8, [X0]
	208 Move X4, [X0+8]
	209 Move W1, 1
	210 Move X0, X19
	211 Move X2, X21
	212 Move X3, X20
	213 NotImplemented "Instruction BLR not yet implemented."
	214 Move X20, [X31+48]
	215 Move X19, [X31+56]
	216 Move X22, [X31+32]
	217 Move X21, [X31+40]
	218 Move X30, [X31+16]
	219 Add X31, X31, 64
	220 Return 
	221 Call 0x1C17F20
	222 Call 0x1C17F28
	223 Call 0x1C17F44
	224 Move X1, X31
	225 Call 0x1C17DEC

Method: System.Boolean get_RecordingEnabled()

Disassembly:
	0x03576A48 LDR X8, [X0]
	0x03576A4C LDRB W21, [X19 + 0x28]

ISIL:
	001 Move W0, [X0+137]
	002 Return X0

Method: System.Void set_RecordingEnabled(System.Boolean value)

Disassembly:
	0x03576A50 LDR X1, [X22]
	0x03576A54 MOV X20, X0
	0x03576A58 LDRH W9, [X8 + 0x12E]
	0x03576A5C CBZ X9, 0x3576A80
	0x03576A60 LDR X10, [X8 + 0xB0]
	0x03576A64 ADD X10, X10, 0x8
	0x03576A68 LDUR X11, [X10 - 0x8]
	0x03576A6C CMP X11, X1
	0x03576A70 B.EQ 0x3576A90
	0x03576A74 SUBS X9, X9, 0x1

ISIL:
	001 Move W9, [X0+137]
	002 And W8, W1, 1
	003 NotImplemented "Instruction CMP not yet implemented."
	004 Move [X0+137], W8
	005 Move TEMP, X1
	006 And TEMP, TEMP, 1
	007 Compare TEMP, 1
	008 Invalid "Jump target not found in method."
	009 Move W8, 1
	010 Move [X0+220], W8
	011 Return 

Method: System.Boolean get_StopRecordingWhenPaused()

Disassembly:
	0x03576CD0 LDR X0, [X0 + 0x2B8]
	0x03576CD4 BL 0x1C16CF4

ISIL:
	001 Move W0, [X0+172]
	002 Return X0

Method: System.Void set_StopRecordingWhenPaused(System.Boolean value)

Disassembly:
	0x03576CD8 ADRP X0, 0xBC0000
	0x03576CDC LDR X0, [X0 + 0x2C0]
	0x03576CE0 BL 0x1C16CF4

ISIL:
	001 And W8, W1, 1
	002 Move [X0+172], W8
	003 Return 

Method: System.Boolean get_UseOnAudioFilterRead()

Disassembly:
	0x03576CE4 ADRP X0, 0xBC0000
	0x03576CE8 LDR X0, [X0 + 0x2C8]

ISIL:
	001 Move W0, [X0+173]
	002 Return X0

Method: System.Void set_UseOnAudioFilterRead(System.Boolean value)

Disassembly:
	0x03576CEC BL 0x1C16CF4
	0x03576CF0 ADRP X0, 0xBC0000
	0x03576CF4 LDR X0, [X0 + 0x2D0]
	0x03576CF8 BL 0x1C16CF4
	0x03576CFC ADRP X0, 0xBC0000
	0x03576D00 LDR X0, [X0 + 0x2D8]
	0x03576D04 BL 0x1C16CF4
	0x03576D08 ADRP X0, 0xBC0000
	0x03576D0C LDR X0, [X0 + 0x2E0]
	0x03576D10 BL 0x1C16CF4
	0x03576D14 ADRP X0, 0xBC0000
	0x03576D18 LDR X0, [X0 + 0x2E8]
	0x03576D1C BL 0x1C16CF4
	0x03576D20 ADRP X0, 0xBC0000
	0x03576D24 LDR X0, [X0 + 0x2F0]
	0x03576D28 BL 0x1C16CF4
	0x03576D2C ADRP X0, 0xBC0000
	0x03576D30 LDR X0, [X0 + 0x2F8]
	0x03576D34 BL 0x1C16CF4
	0x03576D38 ADRP X0, 0xBC0000
	0x03576D3C LDR X0, [X0 + 0x300]
	0x03576D40 BL 0x1C16CF4
	0x03576D44 ADRP X0, 0xBC0000
	0x03576D48 LDR X0, [X0 + 0x308]
	0x03576D4C BL 0x1C16CF4
	0x03576D50 ADRP X0, 0xBC0000
	0x03576D54 LDR X0, [X0 + 0x310]
	0x03576D58 BL 0x1C16CF4
	0x03576D5C ADRP X0, 0xBC0000
	0x03576D60 LDR X0, [X0 + 0x318]
	0x03576D64 BL 0x1C16CF4
	0x03576D68 ADRP X0, 0xBC0000
	0x03576D6C LDR X0, [X0 + 0x320]
	0x03576D70 BL 0x1C16CF4
	0x03576D74 ADRP X0, 0xBC0000
	0x03576D78 LDR X0, [X0 + 0x328]
	0x03576D7C BL 0x1C16CF4
	0x03576D80 ADRP X0, 0xBC0000
	0x03576D84 LDR X0, [X0 + 0x330]
	0x03576D88 BL 0x1C16CF4
	0x03576D8C ADRP X0, 0xBC0000
	0x03576D90 LDR X0, [X0 + 0x338]
	0x03576D94 BL 0x1C16CF4
	0x03576D98 ADRP X0, 0xBC0000
	0x03576D9C LDR X0, [X0 + 0x340]
	0x03576DA0 BL 0x1C16CF4
	0x03576DA4 ADRP X0, 0xBC0000
	0x03576DA8 LDR X0, [X0 + 0x348]
	0x03576DAC BL 0x1C16CF4
	0x03576DB0 MOVZ W8, 0x1
	0x03576DB4 STRB W8, [X20 + 0xE8B]
	0x03576DB8 LDR X0, [X29]
	0x03576DBC MOVI V0.2D, 0x0
	0x03576DC0 STR W31, [X31 + 0x1CC]
	0x03576DC4 STP X31, X31, [X31 + 0x180]
	0x03576DC8 STR X31, [X31 + 0x190]
	0x03576DCC STR X31, [X31 + 0x170]
	0x03576DD0 STP X31, X31, [X31 + 0x110]
	0x03576DD4 STR X31, [X31 + 0x120]
	0x03576DD8 STP V0, V0, [X31 + 0x1E0]
	0x03576DDC STR V0, [X31 + 0x1D]
	0x03576DE0 STP V0, V0, [X31 + 0x1A0]
	0x03576DE4 STP V0, V0, [X31 + 0x150]
	0x03576DE8 STP V0, V0, [X31 + 0x130]
	0x03576DEC STR X31, [X31 + 0x100]
	0x03576DF0 STP V0, V0, [X31 + 0xE0]
	0x03576DF4 LDR W8, [X0 + 0xE0]
	0x03576DF8 CBNZ W8, 0x3576E00
	0x03576DFC BL 0x1C16DFC
	0x03576E00 ADRP X20, 0xB7D000
	0x03576E04 ADRP X25, 0xB82000
	0x03576E08 ADRP X28, 0xBA9000
	0x03576E0C ADRP X27, 0xB7D000
	0x03576E10 LDR X20, [X20 + 0x9D0]
	0x03576E14 LDR X25, [X25 + 0x348]
	0x03576E18 LDR X28, [X28 + 0x178]
	0x03576E1C LDR X27, [X27 + 0x9C8]
	0x03576E20 MOV X0, X31
	0x03576E24 BL 0x3C01AB0
	0x03576E28 LDR W8, [X19 + 0x78]
	0x03576E2C CMP W8, 0x2
	0x03576E30 B.EQ 0x3576E7C
	0x03576E34 CMP W8, 0x1
	0x03576E38 B.EQ 0x3576F34
	0x03576E3C CBNZ W8, 0x3576F70
	0x03576E40 LDR W8, [X19 + 0x6C]
	0x03576E44 ADRP X24, 0xBA5000
	0x03576E48 MOV X0, X19
	0x03576E4C STR W8, [X31 + 0xC]
	0x03576E50 LDR X24, [X24 + 0x5F8]
	0x03576E54 BL 0x3574F04
	0x03576E58 CMP W0, 0x1
	0x03576E5C B.EQ 0x35770BC
	0x03576E60 CBNZ W0, 0x35770D0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xE6A000
	007 Move W8, [X21+3714]
	008 Move X19, X0
	009 And W20, W1, 1
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {25}
	014 Move X0, 0xB7E000
	015 Move X0, [X0+2504]
	016 Call 0x1C17CF4
	017 Move X0, 0xB83000
	018 Move X0, [X0+840]
	019 Call 0x1C17CF4
	020 Move X0, 0xBC1000
	021 Move X0, [X0+536]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+3714], W8
	025 Move W8, [X19+173]
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move X9, [X19+32]
	028 Move [X19+173], W20
	029 Compare X9, 0
	030 JumpIfEqual {112}
	031 Move X8, 0xB7E000
	032 Move X8, [X8+2504]
	033 Move X20, [X9+24]
	034 Move X21, [X8]
	035 Move X8, [X21+56]
	036 Compare X8, 0
	037 JumpIfNotEqual {41}
	038 Move X0, X21
	039 Call 0x1C5D6E0
	040 Move X8, [X21+56]
	041 Move X0, [X8+16]
	042 Move W8, [X0+309]
	043 Move TEMP, X8
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfEqual {48}
	047 Call 0x1C5D684
	048 Move W8, [X0+224]
	049 Compare W8, 0
	050 JumpIfNotEqual {52}
	051 Call 0x1C17DFC
	052 Move X8, [X21+56]
	053 Move X0, [X8+16]
	054 Move W8, [X0+309]
	055 Move TEMP, X8
	056 And TEMP, TEMP, 1
	057 Compare TEMP, 1
	058 JumpIfEqual {60}
	059 Call 0x1C5D684
	060 Compare X20, 0
	061 JumpIfEqual {112}
	062 Move X10, 0xB83000
	063 Move X11, 0xBC1000
	064 Move X9, [X0+184]
	065 Move X10, [X10+840]
	066 Move X8, [X20]
	067 Move X11, [X11+536]
	068 Move X21, [X9]
	069 Move X1, [X10]
	070 NotImplemented "Instruction LDRH not yet implemented."
	071 Move X22, [X11]
	072 Compare X9, 0
	073 JumpIfEqual {80}
	074 Move X10, [X8+176]
	075 Add X10, X10, 8
	076 NotImplemented "Instruction LDUR not yet implemented."
	077 NotImplemented "Instruction CMP not yet implemented."
	078 Subtract X9, X9, 1
	079 Add X10, X10, 16
	080 Move W2, 1
	081 Move X0, X20
	082 Call 0x1C5D788
	083 Move W9, [X10]
	084 Add W9, W9, 1
	085 Add X8, X8, W9
	086 Add X0, X8, 312
	087 Move X8, [X0]
	088 Move X4, [X0+8]
	089 Move W1, 3
	090 Move X0, X20
	091 Move X2, X22
	092 Move X3, X21
	093 NotImplemented "Instruction BLR not yet implemented."
	094 Move W8, [X19+120]
	095 Compare W8, 0
	096 JumpIfNotEqual {106}
	097 Move X0, X19
	098 Call Recorder.get_MicrophoneType, X0
	099 Compare W0, 0
	100 JumpIfNotEqual {106}
	101 Move W8, [X19+137]
	102 Compare W8, 0
	103 JumpIfEqual {106}
	104 Move W8, 1
	105 Move [X19+220], W8
	106 Move X20, [X31+32]
	107 Move X19, [X31+40]
	108 Move X22, [X31+16]
	109 Move X21, [X31+24]
	110 Move X30, [X31+48]
	111 Return 
	112 Call 0x1C17F20

Method: System.Boolean get_UseMicrophoneTypeFallback()

Disassembly:
	0x03576E64 MOV W26, W31
	0x03576E68 TBNZ X26, 0x0, 0x357779C

ISIL:
	001 Move W0, [X0+174]
	002 Return X0

Method: System.Void set_UseMicrophoneTypeFallback(System.Boolean value)

Disassembly:
	0x03576E6C ADD X8, X19, 0xB0
	0x03576E70 ADD X9, X19, 0xB8
	0x03576E74 ADD X10, X19, 0xC0

ISIL:
	001 And W8, W1, 1
	002 Move [X0+174], W8
	003 Return 

Method: System.Boolean get_RecordWhenJoined()

Disassembly:
	0x03576E78 B 0x35777BC
	0x03576E7C LDR X8, [X19 + 0x90]

ISIL:
	001 Move W0, [X0+175]
	002 Return X0

Method: System.Void set_RecordWhenJoined(System.Boolean value)

Disassembly:
	0x03576E80 MOV X23, X20
	0x03576E84 CBNZ X8, 0x3577270
	0x03576E88 LDR X9, [X19 + 0x20]

ISIL:
	001 And W8, W1, 1
	002 Move [X0+175], W8
	003 Return 

Method: Photon.Voice.DeviceInfo get_MicrophoneDevice()

Disassembly:
	0x03576E8C CBZ X9, 0x3578658
	0x03576E90 LDR X21, [X27]
	0x03576E94 LDR X20, [X9 + 0x18]
	0x03576E98 LDR X8, [X21 + 0x38]
	0x03576E9C CBNZ X8, 0x3576EAC

ISIL:
	001 Move X9, [X0+208]
	002 Move V1, [X0+176]
	003 Move V0, [X0+192]
	004 Move [X8+32], X9
	005 Move [X8], V1
	006 Move [X8+8], V0
	007 Return X0

Method: System.Void set_MicrophoneDevice(Photon.Voice.DeviceInfo value)

Disassembly:
	0x03576EA0 MOV X0, X21
	0x03576EA4 BL 0x1C5C6E0
	0x03576EA8 LDR X8, [X21 + 0x38]
	0x03576EAC LDR X0, [X8 + 0x10]
	0x03576EB0 LDRB W8, [X0 + 0x135]
	0x03576EB4 TBNZ X8, 0x0, 0x3576EBC
	0x03576EB8 BL 0x1C5C684
	0x03576EBC LDR W8, [X0 + 0xE0]
	0x03576EC0 CBNZ W8, 0x3576EC8
	0x03576EC4 BL 0x1C16DFC
	0x03576EC8 LDR X8, [X21 + 0x38]
	0x03576ECC LDR X0, [X8 + 0x10]
	0x03576ED0 LDRB W8, [X0 + 0x135]
	0x03576ED4 TBNZ X8, 0x0, 0x3576EDC
	0x03576ED8 BL 0x1C5C684
	0x03576EDC CBZ X20, 0x3578658
	0x03576EE0 ADRP X10, 0xBC0000
	0x03576EE4 LDR X9, [X0 + 0xB8]
	0x03576EE8 LDR X8, [X20]
	0x03576EEC LDR X1, [X25]
	0x03576EF0 LDR X10, [X10 + 0x318]
	0x03576EF4 LDR X21, [X9]
	0x03576EF8 LDRH W9, [X8 + 0x12E]
	0x03576EFC LDR X22, [X10]
	0x03576F00 CBZ X9, 0x3576F24
	0x03576F04 LDR X10, [X8 + 0xB0]
	0x03576F08 ADD X10, X10, 0x8
	0x03576F0C LDUR X11, [X10 - 0x8]
	0x03576F10 CMP X11, X1
	0x03576F14 B.EQ 0x35771B8
	0x03576F18 SUBS X9, X9, 0x1
	0x03576F1C ADD X10, X10, 0x10
	0x03576F20 B.NE 0x3576F0C
	0x03576F24 MOVZ W2, 0x1
	0x03576F28 MOV X0, X20
	0x03576F2C BL 0x1C5C788
	0x03576F30 B 0x35771C8
	0x03576F34 LDR X20, [X19 + 0x80]
	0x03576F38 CBZ X20, 0x357701C
	0x03576F3C ADRP X8, 0xBC0000
	0x03576F40 LDR X8, [X8 + 0x1D8]
	0x03576F44 LDR X0, [X8]
	0x03576F48 BL 0x1C16F10
	0x03576F4C MOV X1, X20
	0x03576F50 MOV X2, X31
	0x03576F54 MOV X21, X0
	0x03576F58 BL 0x356E38C
	0x03576F5C CBZ X21, 0x3578658
	0x03576F60 LDRB W8, [X19 + 0x88]
	0x03576F64 STRB W8, [X21 + 0x20]
	0x03576F68 STR X21, [X19 + 0x48]
	0x03576F6C B 0x3577410
	0x03576F70 LDR X8, [X19 + 0x20]
	0x03576F74 CBZ X8, 0x3578658
	0x03576F78 MOV X9, X20
	0x03576F7C LDR X0, [X9]
	0x03576F80 LDR X20, [X8 + 0x18]
	0x03576F84 MOVZ W1, 0x1
	0x03576F88 BL 0x1C16D6C
	0x03576F8C ADRP X9, 0xBC0000
	0x03576F90 LDR W8, [X19 + 0x78]
	0x03576F94 LDR X9, [X9 + 0x280]
	0x03576F98 MOV X21, X0
	0x03576F9C ADD X1, X31, 0x80
	0x03576FA0 STR W8, [X31 + 0x80]
	0x03576FA4 LDR X0, [X9]
	0x03576FA8 BL 0x1C16E04
	0x03576FAC CBZ X21, 0x3578658
	0x03576FB0 MOV X19, X0
	0x03576FB4 CBZ X0, 0x3576FCC
	0x03576FB8 LDR X8, [X21]
	0x03576FBC MOV X0, X19
	0x03576FC0 LDR X1, [X8 + 0x40]
	0x03576FC4 BL 0x1C16E00
	0x03576FC8 CBZ X0, 0x3578660
	0x03576FCC LDR W8, [X21 + 0x18]
	0x03576FD0 CBZ W8, 0x357865C
	0x03576FD4 STR X19, [X21 + 0x20]
	0x03576FD8 CBZ X20, 0x3578658
	0x03576FDC ADRP X10, 0xBC0000
	0x03576FE0 LDR X8, [X20]
	0x03576FE4 LDR X1, [X25]
	0x03576FE8 LDR X10, [X10 + 0x328]
	0x03576FEC LDRH W9, [X8 + 0x12E]
	0x03576FF0 LDR X19, [X10]
	0x03576FF4 CBZ X9, 0x3577180
	0x03576FF8 LDR X10, [X8 + 0xB0]
	0x03576FFC ADD X10, X10, 0x8
	0x03577000 LDUR X11, [X10 - 0x8]
	0x03577004 CMP X11, X1
	0x03577008 B.EQ 0x3577190
	0x0357700C SUBS X9, X9, 0x1
	0x03577010 ADD X10, X10, 0x10
	0x03577014 B.NE 0x3577000
	0x03577018 B 0x3577180
	0x0357701C LDR X9, [X19 + 0x20]
	0x03577020 CBZ X9, 0x3578658
	0x03577024 LDR X20, [X27]
	0x03577028 LDR X19, [X9 + 0x18]
	0x0357702C LDR X8, [X20 + 0x38]
	0x03577030 CBNZ X8, 0x3577040
	0x03577034 MOV X0, X20
	0x03577038 BL 0x1C5C6E0
	0x0357703C LDR X8, [X20 + 0x38]
	0x03577040 LDR X0, [X8 + 0x10]
	0x03577044 LDRB W8, [X0 + 0x135]
	0x03577048 TBNZ X8, 0x0, 0x3577050
	0x0357704C BL 0x1C5C684
	0x03577050 LDR W8, [X0 + 0xE0]
	0x03577054 CBNZ W8, 0x357705C
	0x03577058 BL 0x1C16DFC
	0x0357705C LDR X8, [X20 + 0x38]
	0x03577060 LDR X0, [X8 + 0x10]
	0x03577064 LDRB W8, [X0 + 0x135]
	0x03577068 TBNZ X8, 0x0, 0x3577070
	0x0357706C BL 0x1C5C684
	0x03577070 CBZ X19, 0x3578658
	0x03577074 ADRP X10, 0xBBF000
	0x03577078 LDR X9, [X0 + 0xB8]
	0x0357707C LDR X8, [X19]
	0x03577080 LDR X1, [X25]
	0x03577084 LDR X10, [X10 + 0x2D0]
	0x03577088 LDR X20, [X9]
	0x0357708C LDRH W9, [X8 + 0x12E]

ISIL:
	001 Subtract X31, X31, 240
	002 Move [X31+192], X30
	003 Move [X31+208], X22
	004 Move [X31+216], X21
	005 Move [X31+224], X20
	006 Move [X31+232], X19
	007 Move X22, 0xE6A000
	008 Move X21, 0xBA6000
	009 Move W8, [X22+3715]
	010 Move X21, [X21+1528]
	011 Move X20, X1
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {31}
	017 Move X0, 0xB7E000
	018 Move X0, [X0+2504]
	019 Call 0x1C17CF4
	020 Move X0, 0xBA6000
	021 Move X0, [X0+1528]
	022 Call 0x1C17CF4
	023 Move X0, 0xB83000
	024 Move X0, [X0+840]
	025 Call 0x1C17CF4
	026 Move X0, 0xBC1000
	027 Move X0, [X0+544]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X22+3715], W8
	031 Move X8, [X19+208]
	032 Move V1, [X19+176]
	033 Move V0, [X19+192]
	034 Move X0, [X21]
	035 Move [X31+176], X8
	036 Move [X31+144], V1
	037 Move [X31+152], V0
	038 Move X8, [X20+32]
	039 Move V1, [X20]
	040 Move V0, [X20+16]
	041 Move [X31+128], X8
	042 Move [X31+96], V1
	043 Move [X31+104], V0
	044 Move W8, [X0+224]
	045 Compare W8, 0
	046 JumpIfNotEqual {48}
	047 Call 0x1C17DFC
	048 Move V0, [X31+144]
	049 Move V1, [X31+160]
	050 Move X8, [X31+176]
	051 Move V2, [X31+96]
	052 Move V3, [X31+112]
	053 Move X9, [X31+128]
	054 Add X0, X31, 48
	055 Add X1, X31, 0
	056 Move X2, X31
	057 Move [X31+48], V0
	058 Move [X31+56], V1
	059 Move [X31+80], X8
	060 Move [X31], V2
	061 Move [X31+8], V3
	062 Move [X31+32], X9
	063 Call DeviceInfo.op_Inequality, X0, X1
	064 Move TEMP, X0
	065 And TEMP, TEMP, 1
	066 Compare TEMP, 1
	067 JumpIfNotEqual {149}
	068 Move X8, [X20+32]
	069 Move V1, [X20]
	070 Move V0, [X20+16]
	071 Add X9, X19, 176
	072 Move [X9+32], X8
	073 Move [X9], V1
	074 Move [X9+8], V0
	075 Move X9, [X19+32]
	076 Compare X9, 0
	077 JumpIfEqual {156}
	078 Move X8, 0xB7E000
	079 Move X8, [X8+2504]
	080 Move X20, [X9+24]
	081 Move X21, [X8]
	082 Move X8, [X21+56]
	083 Compare X8, 0
	084 JumpIfNotEqual {88}
	085 Move X0, X21
	086 Call 0x1C5D6E0
	087 Move X8, [X21+56]
	088 Move X0, [X8+16]
	089 Move W8, [X0+309]
	090 Move TEMP, X8
	091 And TEMP, TEMP, 1
	092 Compare TEMP, 1
	093 JumpIfEqual {95}
	094 Call 0x1C5D684
	095 Move W8, [X0+224]
	096 Compare W8, 0
	097 JumpIfNotEqual {99}
	098 Call 0x1C17DFC
	099 Move X8, [X21+56]
	100 Move X0, [X8+16]
	101 Move W8, [X0+309]
	102 Move TEMP, X8
	103 And TEMP, TEMP, 1
	104 Compare TEMP, 1
	105 JumpIfEqual {107}
	106 Call 0x1C5D684
	107 Compare X20, 0
	108 JumpIfEqual {156}
	109 Move X10, 0xB83000
	110 Move X11, 0xBC1000
	111 Move X9, [X0+184]
	112 Move X10, [X10+840]
	113 Move X8, [X20]
	114 Move X11, [X11+544]
	115 Move X21, [X9]
	116 Move X1, [X10]
	117 NotImplemented "Instruction LDRH not yet implemented."
	118 Move X22, [X11]
	119 Compare X9, 0
	120 JumpIfEqual {127}
	121 Move X10, [X8+176]
	122 Add X10, X10, 8
	123 NotImplemented "Instruction LDUR not yet implemented."
	124 NotImplemented "Instruction CMP not yet implemented."
	125 Subtract X9, X9, 1
	126 Add X10, X10, 16
	127 Move W2, 1
	128 Move X0, X20
	129 Call 0x1C5D788
	130 Move W9, [X10]
	131 Add W9, W9, 1
	132 Add X8, X8, W9
	133 Add X0, X8, 312
	134 Move X8, [X0]
	135 Move X4, [X0+8]
	136 Move W1, 3
	137 Move X0, X20
	138 Move X2, X22
	139 Move X3, X21
	140 NotImplemented "Instruction BLR not yet implemented."
	141 Move W8, [X19+120]
	142 Compare W8, 0
	143 JumpIfNotEqual {149}
	144 Move W8, [X19+137]
	145 Compare W8, 0
	146 JumpIfEqual {149}
	147 Move W8, 1
	148 Move [X19+220], W8
	149 Move X20, [X31+224]
	150 Move X19, [X31+232]
	151 Move X22, [X31+208]
	152 Move X21, [X31+216]
	153 Move X30, [X31+192]
	154 Add X31, X31, 240
	155 Return 
	156 Call 0x1C17F20

Method: System.Boolean get_AndroidMicrophoneAGC()

Disassembly:
	0x03577090 LDR X21, [X10]
	0x03577094 CBZ X9, 0x35775C8

ISIL:
	001 Move W0, [X0+169]
	002 Return X0

Method: System.Boolean get_AndroidMicrophoneAEC()

Disassembly:
	0x03577098 LDR X10, [X8 + 0xB0]
	0x0357709C ADD X10, X10, 0x8

ISIL:
	001 Move W0, [X0+168]
	002 Return X0

Method: System.Boolean get_AndroidMicrophoneNS()

Disassembly:
	0x035770A0 LDUR X11, [X10 - 0x8]
	0x035770A4 CMP X11, X1

ISIL:
	001 Move W0, [X0+170]
	002 Return X0

Method: System.Boolean Init(Photon.Voice.Unity.VoiceConnection connection)

Disassembly:
	0x035770A8 B.EQ 0x35775D8
	0x035770AC SUBS X9, X9, 0x1
	0x035770B0 ADD X10, X10, 0x10
	0x035770B4 B.NE 0x35770A0
	0x035770B8 B 0x35775C8
	0x035770BC LDR X8, [X19 + 0xD0]
	0x035770C0 LDP V1, V0, [X19 + 0xB0]
	0x035770C4 MOV W26, W31
	0x035770C8 STR X8, [X31 + 0x100]
	0x035770CC B 0x3577C24
	0x035770D0 LDR X8, [X19 + 0x20]
	0x035770D4 CBZ X8, 0x3578658
	0x035770D8 MOV X9, X20
	0x035770DC LDR X0, [X9]
	0x035770E0 LDR X20, [X8 + 0x18]
	0x035770E4 MOVZ W1, 0x1
	0x035770E8 BL 0x1C16D6C
	0x035770EC MOV X21, X0
	0x035770F0 MOV X0, X19
	0x035770F4 BL 0x3574F04
	0x035770F8 ADRP X8, 0xBBF000
	0x035770FC LDR X8, [X8 + 0x288]
	0x03577100 STR W0, [X31 + 0x80]
	0x03577104 ADD X1, X31, 0x80
	0x03577108 LDR X8, [X8]
	0x0357710C MOV X0, X8
	0x03577110 BL 0x1C16E04
	0x03577114 CBZ X21, 0x3578658
	0x03577118 MOV X19, X0
	0x0357711C CBZ X0, 0x3577134
	0x03577120 LDR X8, [X21]
	0x03577124 MOV X0, X19
	0x03577128 LDR X1, [X8 + 0x40]
	0x0357712C BL 0x1C16E00
	0x03577130 CBZ X0, 0x3578660
	0x03577134 LDR W8, [X21 + 0x18]
	0x03577138 CBZ W8, 0x357865C
	0x0357713C STR X19, [X21 + 0x20]
	0x03577140 CBZ X20, 0x3578658
	0x03577144 ADRP X10, 0xBBF000
	0x03577148 LDR X8, [X20]
	0x0357714C LDR X1, [X25]
	0x03577150 LDR X10, [X10 + 0x308]
	0x03577154 LDRH W9, [X8 + 0x12E]
	0x03577158 LDR X19, [X10]
	0x0357715C CBZ X9, 0x3577180
	0x03577160 LDR X10, [X8 + 0xB0]
	0x03577164 ADD X10, X10, 0x8
	0x03577168 LDUR X11, [X10 - 0x8]
	0x0357716C CMP X11, X1
	0x03577170 B.EQ 0x3577190
	0x03577174 SUBS X9, X9, 0x1
	0x03577178 ADD X10, X10, 0x10
	0x0357717C B.NE 0x3577168
	0x03577180 MOVZ W2, 0x1
	0x03577184 MOV X0, X20
	0x03577188 BL 0x1C5C788
	0x0357718C B 0x35771A0
	0x03577190 LDR W9, [X10]
	0x03577194 ADD W9, W9, 0x1
	0x03577198 ADD X8, X8, W9, 0x4, SXTW
	0x0357719C ADD X0, X8, 0x138
	0x035771A0 LDP X8, X4, [X0]
	0x035771A4 MOVZ W1, 0x1
	0x035771A8 MOV X0, X20
	0x035771AC MOV X2, X19
	0x035771B0 MOV X3, X21
	0x035771B4 B 0x35775FC
	0x035771B8 LDR W9, [X10]
	0x035771BC ADD W9, W9, 0x1
	0x035771C0 ADD X8, X8, W9, 0x4, SXTW
	0x035771C4 ADD X0, X8, 0x138
	0x035771C8 LDP X8, X4, [X0]
	0x035771CC MOVZ W1, 0x2
	0x035771D0 MOV X0, X20
	0x035771D4 MOV X2, X22
	0x035771D8 MOV X3, X21
	0x035771DC BLR X8
	0x035771E0 ADRP X22, 0xBBF000
	0x035771E4 LDR X22, [X22 + 0x2A8]
	0x035771E8 LDR X0, [X22]
	0x035771EC LDR W8, [X0 + 0xE0]
	0x035771F0 CBNZ W8, 0x35771FC
	0x035771F4 BL 0x1C16DFC
	0x035771F8 LDR X0, [X22]
	0x035771FC LDR X8, [X0 + 0xB8]
	0x03577200 LDR X20, [X8 + 0x8]
	0x03577204 CBNZ X20, 0x3577258
	0x03577208 LDR W8, [X0 + 0xE0]
	0x0357720C CBNZ W8, 0x3577218
	0x03577210 BL 0x1C16DFC
	0x03577214 LDR X0, [X22]
	0x03577218 ADRP X9, 0xBBF000
	0x0357721C LDR X8, [X0 + 0xB8]
	0x03577220 LDR X9, [X9 + 0x278]
	0x03577224 LDR X21, [X8]
	0x03577228 LDR X0, [X9]
	0x0357722C BL 0x1C16F10
	0x03577230 ADRP X8, 0xBBF000
	0x03577234 LDR X8, [X8 + 0x2A0]
	0x03577238 MOV X1, X21
	0x0357723C MOV X3, X31
	0x03577240 MOV X20, X0
	0x03577244 LDR X2, [X8]
	0x03577248 BL 0x2D27AA8
	0x0357724C LDR X8, [X22]
	0x03577250 LDR X8, [X8 + 0xB8]
	0x03577254 STR X20, [X8 + 0x8]
	0x03577258 CBZ X19, 0x3578658
	0x0357725C MOV X0, X19
	0x03577260 MOV X1, X20
	0x03577264 BL 0x3574974
	0x03577268 LDR X8, [X19 + 0x90]
	0x0357726C CBZ X8, 0x3578658
	0x03577270 LDR X9, [X8 + 0x18]
	0x03577274 LDR X0, [X8 + 0x40]
	0x03577278 LDR X1, [X8 + 0x28]
	0x0357727C BLR X9
	0x03577280 STR X0, [X19 + 0x48]
	0x03577284 CBZ X0, 0x3578658
	0x03577288 LDR X8, [X0]
	0x0357728C LDR X1, [X28]
	0x03577290 MOV X20, X0
	0x03577294 LDRH W9, [X8 + 0x12E]
	0x03577298 CBZ X9, 0x35772BC
	0x0357729C LDR X10, [X8 + 0xB0]
	0x035772A0 ADD X10, X10, 0x8
	0x035772A4 LDUR X11, [X10 - 0x8]
	0x035772A8 CMP X11, X1
	0x035772AC B.EQ 0x35772CC
	0x035772B0 SUBS X9, X9, 0x1
	0x035772B4 ADD X10, X10, 0x10
	0x035772B8 B.NE 0x35772A4
	0x035772BC MOVZ W2, 0x2
	0x035772C0 MOV X0, X20
	0x035772C4 BL 0x1C5C788
	0x035772C8 B 0x35772DC
	0x035772CC LDR W9, [X10]
	0x035772D0 ADD W9, W9, 0x2
	0x035772D4 ADD X8, X8, W9, 0x4, SXTW
	0x035772D8 ADD X0, X8, 0x138
	0x035772DC LDP X8, X1, [X0]
	0x035772E0 MOV X0, X20
	0x035772E4 BLR X8
	0x035772E8 CBZ X0, 0x3577410
	0x035772EC LDR X8, [X19 + 0x20]
	0x035772F0 CBZ X8, 0x3578658
	0x035772F4 LDR X0, [X23]
	0x035772F8 LDR X20, [X8 + 0x18]
	0x035772FC MOVZ W1, 0x1
	0x03577300 BL 0x1C16D6C
	0x03577304 LDR X22, [X19 + 0x48]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xE69000
	006 Move W8, [X21+3716]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {30}
	013 Move X0, 0xB7D000
	014 Move X0, [X0+2504]
	015 Call 0x1C17CF4
	016 Move X0, 0xB82000
	017 Move X0, [X0+840]
	018 Call 0x1C17CF4
	019 Move X0, 0xB7D000
	020 Move X0, [X0+1432]
	021 Call 0x1C17CF4
	022 Move X0, 0xBC0000
	023 Move X0, [X0+552]
	024 Call 0x1C17CF4
	025 Move X0, 0xBC0000
	026 Move X0, [X0+560]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X21+3716], W8
	030 Move X0, X19
	031 Move X1, X31
	032 Call Behaviour.get_isActiveAndEnabled, X0
	033 Move TEMP, X0
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfNotEqual {105}
	037 Move X8, 0xB7D000
	038 Move X8, [X8+1432]
	039 Move X21, [X19+80]
	040 Move X0, [X8]
	041 Move W8, [X0+224]
	042 Compare W8, 0
	043 JumpIfNotEqual {45}
	044 Call 0x1C17DFC
	045 Move X0, X21
	046 Move X1, X31
	047 Move X2, X31
	048 Call Object.op_Inequality, X0, X1
	049 Move TEMP, X0
	050 And TEMP, TEMP, 1
	051 Compare TEMP, 1
	052 JumpIfNotEqual {160}
	053 Move X9, [X19+32]
	054 Compare X9, 0
	055 JumpIfEqual {183}
	056 Move X8, 0xB7D000
	057 Move X8, [X8+2504]
	058 Move X19, [X9+24]
	059 Move X20, [X8]
	060 Move X8, [X20+56]
	061 Compare X8, 0
	062 JumpIfNotEqual {66}
	063 Move X0, X20
	064 Call 0x1C5D6E0
	065 Move X8, [X20+56]
	066 Move X0, [X8+16]
	067 Move W8, [X0+309]
	068 Move TEMP, X8
	069 And TEMP, TEMP, 1
	070 Compare TEMP, 1
	071 JumpIfEqual {73}
	072 Call 0x1C5D684
	073 Move W8, [X0+224]
	074 Compare W8, 0
	075 JumpIfNotEqual {77}
	076 Call 0x1C17DFC
	077 Move X8, [X20+56]
	078 Move X0, [X8+16]
	079 Move W8, [X0+309]
	080 Move TEMP, X8
	081 And TEMP, TEMP, 1
	082 Compare TEMP, 1
	083 JumpIfEqual {85}
	084 Call 0x1C5D684
	085 Compare X19, 0
	086 JumpIfEqual {183}
	087 Move X10, 0xB82000
	088 Move X11, 0xBC0000
	089 Move X9, [X0+184]
	090 Move X10, [X10+840]
	091 Move X8, [X19]
	092 Move X11, [X11+560]
	093 Move X20, [X9]
	094 Move X1, [X10]
	095 NotImplemented "Instruction LDRH not yet implemented."
	096 Move X21, [X11]
	097 Compare X9, 0
	098 JumpIfEqual {157}
	099 Move X10, [X8+176]
	100 Add X10, X10, 8
	101 NotImplemented "Instruction LDUR not yet implemented."
	102 NotImplemented "Instruction CMP not yet implemented."
	103 Subtract X9, X9, 1
	104 Add X10, X10, 16
	105 Move X9, [X19+32]
	106 Compare X9, 0
	107 JumpIfEqual {183}
	108 Move X8, 0xB7D000
	109 Move X8, [X8+2504]
	110 Move X19, [X9+24]
	111 Move X20, [X8]
	112 Move X8, [X20+56]
	113 Compare X8, 0
	114 JumpIfNotEqual {118}
	115 Move X0, X20
	116 Call 0x1C5D6E0
	117 Move X8, [X20+56]
	118 Move X0, [X8+16]
	119 Move W8, [X0+309]
	120 Move TEMP, X8
	121 And TEMP, TEMP, 1
	122 Compare TEMP, 1
	123 JumpIfEqual {125}
	124 Call 0x1C5D684
	125 Move W8, [X0+224]
	126 Compare W8, 0
	127 JumpIfNotEqual {129}
	128 Call 0x1C17DFC
	129 Move X8, [X20+56]
	130 Move X0, [X8+16]
	131 Move W8, [X0+309]
	132 Move TEMP, X8
	133 And TEMP, TEMP, 1
	134 Compare TEMP, 1
	135 JumpIfEqual {137}
	136 Call 0x1C5D684
	137 Compare X19, 0
	138 JumpIfEqual {183}
	139 Move X10, 0xB82000
	140 Move X11, 0xBC0000
	141 Move X9, [X0+184]
	142 Move X10, [X10+840]
	143 Move X8, [X19]
	144 Move X11, [X11+552]
	145 Move X20, [X9]
	146 Move X1, [X10]
	147 NotImplemented "Instruction LDRH not yet implemented."
	148 Move X21, [X11]
	149 Compare X9, 0
	150 JumpIfEqual {157}
	151 Move X10, [X8+176]
	152 Add X10, X10, 8
	153 NotImplemented "Instruction LDUR not yet implemented."
	154 NotImplemented "Instruction CMP not yet implemented."
	155 Subtract X9, X9, 1
	156 Add X10, X10, 16
	157 Move W2, 1
	158 Move X0, X19
	159 Call 0x1C5D788
	160 Move W8, [X19+137]
	161 Move W0, 1
	162 Move [X19+80], X20
	163 Compare W8, 0
	164 JumpIfEqual {178}
	165 Move [X19+220], W0
	166 Move W9, [X10]
	167 Add W9, W9, 1
	168 Add X8, X8, W9
	169 Add X0, X8, 312
	170 Move X8, [X0]
	171 Move X4, [X0+8]
	172 Move W1, 2
	173 Move X0, X19
	174 Move X2, X21
	175 Move X3, X20
	176 NotImplemented "Instruction BLR not yet implemented."
	177 Move W0, W31
	178 Move X20, [X31+16]
	179 Move X19, [X31+24]
	180 Move X30, [X31+32]
	181 Move X21, [X31+40]
	182 Return X0
	183 Call 0x1C17F20

Method: System.Boolean Deinit(Photon.Voice.Unity.VoiceConnection connection)

Disassembly:
	0x03577308 CBZ X22, 0x3578658
	0x0357730C LDR X8, [X22]
	0x03577310 LDR X1, [X28]
	0x03577314 MOV X21, X0
	0x03577318 LDRH W9, [X8 + 0x12E]
	0x0357731C CBZ X9, 0x3577340
	0x03577320 LDR X10, [X8 + 0xB0]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Call Recorder.StopRecording, X0
	005 Move W0, 1
	006 Move [X19+80], X31
	007 Move X30, [X31+16]
	008 Move X19, [X31+24]
	009 Return X0

Method: System.Boolean RestartRecording()

Disassembly:
	0x03575950 CBZ X0, 0x3575A3C
	0x03575954 LDR W8, [X20 + 0x18]
	0x03575958 CMP W8, 0x2
	0x0357595C B.LS 0x3575A38
	0x03575960 STR X21, [X20 + 0x30]
	0x03575964 CBZ X19, 0x3575A34
	0x03575968 ADRP X9, 0xB83000

ISIL:
	001 Move W8, [X0+137]
	002 Compare W8, 0
	003 JumpIfEqual {6}
	004 Move W9, 1
	005 Move [X0+220], W9
	006 NotImplemented "Instruction CMP not yet implemented."
	007 NotImplemented "Instruction CSET not yet implemented."
	008 Return X0

Method: System.Void VoiceDetectorCalibrate(System.Int32 durationMs, System.Action`1<System.Single> detectionEndedCallback = null)

Disassembly:
	0x03577324 ADD X10, X10, 0x8
	0x03577328 LDUR X11, [X10 - 0x8]
	0x0357732C CMP X11, X1
	0x03577330 B.EQ 0x3577350
	0x03577334 SUBS X9, X9, 0x1
	0x03577338 ADD X10, X10, 0x10
	0x0357733C B.NE 0x3577328
	0x03577340 MOVZ W2, 0x2
	0x03577344 MOV X0, X22
	0x03577348 BL 0x1C5C788
	0x0357734C B 0x3577360
	0x03577350 LDR W9, [X10]
	0x03577354 ADD W9, W9, 0x2
	0x03577358 ADD X8, X8, W9, 0x4, SXTW
	0x0357735C ADD X0, X8, 0x138
	0x03577360 LDP X8, X1, [X0]
	0x03577364 MOV X0, X22
	0x03577368 BLR X8
	0x0357736C CBZ X21, 0x3578658
	0x03577370 MOV X22, X0
	0x03577374 CBZ X0, 0x357738C
	0x03577378 LDR X8, [X21]
	0x0357737C MOV X0, X22
	0x03577380 LDR X1, [X8 + 0x40]
	0x03577384 BL 0x1C16E00
	0x03577388 CBZ X0, 0x3578660
	0x0357738C LDR W8, [X21 + 0x18]
	0x03577390 CBZ W8, 0x357865C
	0x03577394 STR X22, [X21 + 0x20]
	0x03577398 CBZ X20, 0x3578658
	0x0357739C ADRP X10, 0xBBF000
	0x035773A0 LDR X8, [X20]
	0x035773A4 LDR X1, [X25]
	0x035773A8 LDR X10, [X10 + 0x2C8]
	0x035773AC LDRH W9, [X8 + 0x12E]
	0x035773B0 LDR X22, [X10]
	0x035773B4 CBZ X9, 0x35773D8
	0x035773B8 LDR X10, [X8 + 0xB0]
	0x035773BC ADD X10, X10, 0x8
	0x035773C0 LDUR X11, [X10 - 0x8]
	0x035773C4 CMP X11, X1
	0x035773C8 B.EQ 0x35773E8
	0x035773CC SUBS X9, X9, 0x1
	0x035773D0 ADD X10, X10, 0x10
	0x035773D4 B.NE 0x35773C0
	0x035773D8 MOVZ W2, 0x1
	0x035773DC MOV X0, X20
	0x035773E0 BL 0x1C5C788
	0x035773E4 B 0x35773F8
	0x035773E8 LDR W9, [X10]
	0x035773EC ADD W9, W9, 0x1
	0x035773F0 ADD X8, X8, W9, 0x4, SXTW
	0x035773F4 ADD X0, X8, 0x138
	0x035773F8 LDP X8, X4, [X0]
	0x035773FC MOVZ W1, 0x1
	0x03577400 MOV X0, X20
	0x03577404 MOV X2, X22
	0x03577408 MOV X3, X21
	0x0357740C BLR X8
	0x03577410 LDR X20, [X19 + 0x48]
	0x03577414 CBZ X20, 0x3577600
	0x03577418 LDR X8, [X20]
	0x0357741C LDR X1, [X28]
	0x03577420 LDRH W9, [X8 + 0x12E]
	0x03577424 CBZ X9, 0x3577448
	0x03577428 LDR X10, [X8 + 0xB0]
	0x0357742C ADD X10, X10, 0x8
	0x03577430 LDUR X11, [X10 - 0x8]
	0x03577434 CMP X11, X1
	0x03577438 B.EQ 0x3577458
	0x0357743C SUBS X9, X9, 0x1
	0x03577440 ADD X10, X10, 0x10
	0x03577444 B.NE 0x3577430
	0x03577448 MOVZ W2, 0x2
	0x0357744C MOV X0, X20
	0x03577450 BL 0x1C5C788
	0x03577454 B 0x3577468
	0x03577458 LDR W9, [X10]
	0x0357745C ADD W9, W9, 0x2
	0x03577460 ADD X8, X8, W9, 0x4, SXTW
	0x03577464 ADD X0, X8, 0x138
	0x03577468 LDP X8, X1, [X0]
	0x0357746C MOV X0, X20
	0x03577470 BLR X8
	0x03577474 CBNZ X0, 0x3577600
	0x03577478 LDR X20, [X19 + 0x48]
	0x0357747C CBZ X20, 0x3578658
	0x03577480 LDR X8, [X20]
	0x03577484 LDR X1, [X28]
	0x03577488 LDRH W9, [X8 + 0x12E]
	0x0357748C CBZ X9, 0x35774B0
	0x03577490 LDR X10, [X8 + 0xB0]
	0x03577494 ADD X10, X10, 0x8
	0x03577498 LDUR X11, [X10 - 0x8]
	0x0357749C CMP X11, X1
	0x035774A0 B.EQ 0x35774C0
	0x035774A4 SUBS X9, X9, 0x1
	0x035774A8 ADD X10, X10, 0x10
	0x035774AC B.NE 0x3577498
	0x035774B0 MOVZ W2, 0x1
	0x035774B4 MOV X0, X20
	0x035774B8 BL 0x1C5C788
	0x035774BC B 0x35774D0
	0x035774C0 LDR W9, [X10]
	0x035774C4 ADD W9, W9, 0x1
	0x035774C8 ADD X8, X8, W9, 0x4, SXTW
	0x035774CC ADD X0, X8, 0x138
	0x035774D0 LDP X8, X1, [X0]
	0x035774D4 MOV X0, X20
	0x035774D8 BLR X8
	0x035774DC CBZ W0, 0x357752C
	0x035774E0 LDR X21, [X19 + 0x48]
	0x035774E4 CBZ X21, 0x3578658
	0x035774E8 LDR X8, [X21]
	0x035774EC LDR W20, [X19 + 0x6C]
	0x035774F0 LDR X1, [X28]
	0x035774F4 LDRH W9, [X8 + 0x12E]
	0x035774F8 CBZ X9, 0x357751C
	0x035774FC LDR X10, [X8 + 0xB0]
	0x03577500 ADD X10, X10, 0x8
	0x03577504 LDUR X11, [X10 - 0x8]
	0x03577508 CMP X11, X1
	0x0357750C B.EQ 0x3577644
	0x03577510 SUBS X9, X9, 0x1
	0x03577514 ADD X10, X10, 0x10
	0x03577518 B.NE 0x3577504
	0x0357751C MOVZ W2, 0x1
	0x03577520 MOV X0, X21
	0x03577524 BL 0x1C5C788
	0x03577528 B 0x3577654
	0x0357752C LDR X9, [X19 + 0x20]
	0x03577530 CBZ X9, 0x3578658
	0x03577534 LDR X20, [X27]
	0x03577538 LDR X19, [X9 + 0x18]
	0x0357753C LDR X8, [X20 + 0x38]
	0x03577540 CBNZ X8, 0x3577550
	0x03577544 MOV X0, X20
	0x03577548 BL 0x1C5C6E0
	0x0357754C LDR X8, [X20 + 0x38]
	0x03577550 LDR X0, [X8 + 0x10]
	0x03577554 LDRB W8, [X0 + 0x135]
	0x03577558 TBNZ X8, 0x0, 0x3577560
	0x0357755C BL 0x1C5C684
	0x03577560 LDR W8, [X0 + 0xE0]
	0x03577564 CBNZ W8, 0x357756C
	0x03577568 BL 0x1C16DFC
	0x0357756C LDR X8, [X20 + 0x38]
	0x03577570 LDR X0, [X8 + 0x10]
	0x03577574 LDRB W8, [X0 + 0x135]
	0x03577578 TBNZ X8, 0x0, 0x3577580
	0x0357757C BL 0x1C5C684
	0x03577580 CBZ X19, 0x3578658
	0x03577584 ADRP X10, 0xBBF000
	0x03577588 LDR X9, [X0 + 0xB8]
	0x0357758C LDR X8, [X19]
	0x03577590 LDR X1, [X25]
	0x03577594 LDR X10, [X10 + 0x2C0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0xE69000
	008 Move X23, 0xBC0000
	009 Move W8, [X22+3717]
	010 Move X23, [X23+568]
	011 Move X21, X2
	012 Move W19, W1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {41}
	018 Move X0, 0xB7F000
	019 Move X0, [X0+1456]
	020 Call 0x1C17CF4
	021 Move X0, 0xB7D000
	022 Move X0, [X0+2504]
	023 Call 0x1C17CF4
	024 Move X0, 0xBC0000
	025 Move X0, [X0+416]
	026 Call 0x1C17CF4
	027 Move X0, 0xB82000
	028 Move X0, [X0+840]
	029 Call 0x1C17CF4
	030 Move X0, 0xBC0000
	031 Move X0, [X0+576]
	032 Call 0x1C17CF4
	033 Move X0, 0xBC0000
	034 Move X0, [X0+568]
	035 Call 0x1C17CF4
	036 Move X0, 0xBC0000
	037 Move X0, [X0+584]
	038 Call 0x1C17CF4
	039 Move W8, 1
	040 Move [X22+3717], W8
	041 Move X0, [X23]
	042 Call 0x1C17F10
	043 Move X1, X31
	044 Move X22, X0
	045 Call Object..ctor, X0
	046 Compare X22, 0
	047 JumpIfEqual {185}
	048 Move X0, X20
	049 Move [X22+16], X20
	050 Move [X22+24], X21
	051 Call Recorder.get_voiceAudio, X0
	052 Compare X0, 0
	053 JumpIfEqual {90}
	054 Move W8, [X20+107]
	055 Compare W8, 0
	056 JumpIfEqual {97}
	057 Move X0, X20
	058 Call Recorder.get_voiceAudio, X0
	059 Move X8, 0xB7F000
	060 Move X8, [X8+1456]
	061 Move X20, X0
	062 Move X8, [X8]
	063 Move X0, X8
	064 Call 0x1C17F10
	065 Move X8, 0xBC0000
	066 Move X8, [X8+576]
	067 Move X1, X22
	068 Move X3, X31
	069 Move X21, X0
	070 Move X2, [X8]
	071 Call Action`1<Single>..ctor, X0, X1, X2
	072 Compare X20, 0
	073 JumpIfEqual {185}
	074 Move X10, 0xBC0000
	075 Move X8, [X20]
	076 Move X10, [X10+416]
	077 NotImplemented "Instruction LDRH not yet implemented."
	078 Move X1, [X10]
	079 Compare X9, 0
	080 JumpIfEqual {87}
	081 Move X10, [X8+176]
	082 Add X10, X10, 8
	083 NotImplemented "Instruction LDUR not yet implemented."
	084 NotImplemented "Instruction CMP not yet implemented."
	085 Subtract X9, X9, 1
	086 Add X10, X10, 16
	087 Move W2, 3
	088 Move X0, X20
	089 Call 0x1C5D788
	090 Move X20, [X31+32]
	091 Move X19, [X31+40]
	092 Move X22, [X31+16]
	093 Move X21, [X31+24]
	094 Move X30, [X31+48]
	095 Move X23, [X31+56]
	096 Return 
	097 Move X9, [X20+32]
	098 Compare X9, 0
	099 JumpIfEqual {185}
	100 Move X8, 0xB7D000
	101 Move X8, [X8+2504]
	102 Move X19, [X9+24]
	103 Move X20, [X8]
	104 Move X8, [X20+56]
	105 Compare X8, 0
	106 JumpIfNotEqual {110}
	107 Move X0, X20
	108 Call 0x1C5D6E0
	109 Move X8, [X20+56]
	110 Move X0, [X8+16]
	111 Move W8, [X0+309]
	112 Move TEMP, X8
	113 And TEMP, TEMP, 1
	114 Compare TEMP, 1
	115 JumpIfEqual {117}
	116 Call 0x1C5D684
	117 Move W8, [X0+224]
	118 Compare W8, 0
	119 JumpIfNotEqual {121}
	120 Call 0x1C17DFC
	121 Move X8, [X20+56]
	122 Move X0, [X8+16]
	123 Move W8, [X0+309]
	124 Move TEMP, X8
	125 And TEMP, TEMP, 1
	126 Compare TEMP, 1
	127 JumpIfEqual {129}
	128 Call 0x1C5D684
	129 Compare X19, 0
	130 JumpIfEqual {185}
	131 Move X10, 0xB82000
	132 Move X11, 0xBC0000
	133 Move X9, [X0+184]
	134 Move X10, [X10+840]
	135 Move X8, [X19]
	136 Move X11, [X11+584]
	137 Move X20, [X9]
	138 Move X1, [X10]
	139 NotImplemented "Instruction LDRH not yet implemented."
	140 Move X21, [X11]
	141 Compare X9, 0
	142 JumpIfEqual {149}
	143 Move X10, [X8+176]
	144 Add X10, X10, 8
	145 NotImplemented "Instruction LDUR not yet implemented."
	146 NotImplemented "Instruction CMP not yet implemented."
	147 Subtract X9, X9, 1
	148 Add X10, X10, 16
	149 Move W2, 1
	150 Move X0, X19
	151 Call 0x1C5D788
	152 Move W9, [X10]
	153 Add W9, W9, 3
	154 Add X8, X8, W9
	155 Add X0, X8, 312
	156 Move X4, [X0]
	157 Move X3, [X0+8]
	158 Move X0, X20
	159 Move W1, W19
	160 Move X2, X21
	161 Move X20, [X31+32]
	162 Move X19, [X31+40]
	163 Move X22, [X31+16]
	164 Move X21, [X31+24]
	165 Move X30, [X31+48]
	166 Move X23, [X31+56]
	167 CallNoReturn X4
	168 Move W9, [X10]
	169 Add W9, W9, 1
	170 Add X8, X8, W9
	171 Add X0, X8, 312
	172 Move X5, [X0]
	173 Move X4, [X0+8]
	174 Move X0, X19
	175 Move X2, X21
	176 Move X3, X20
	177 Move X20, [X31+32]
	178 Move X19, [X31+40]
	179 Move X22, [X31+16]
	180 Move X21, [X31+24]
	181 Move W1, 2
	182 Move X30, [X31+48]
	183 Move X23, [X31+56]
	184 CallNoReturn X5
	185 Call 0x1C17F20

Method: System.Void StartRecording()

Disassembly:
	0x035775A0 LDR X21, [X10]
	0x035775A4 CBZ X9, 0x35775C8
	0x035775A8 LDR X10, [X8 + 0xB0]
	0x035775AC ADD X10, X10, 0x8
	0x035775B0 LDUR X11, [X10 - 0x8]
	0x035775B4 CMP X11, X1
	0x035775B8 B.EQ 0x35775D8
	0x035775BC SUBS X9, X9, 0x1
	0x035775C0 ADD X10, X10, 0x10
	0x035775C4 B.NE 0x35775B0
	0x035775C8 MOVZ W2, 0x1
	0x035775CC MOV X0, X19
	0x035775D0 BL 0x1C5C788
	0x035775D4 B 0x35775E8
	0x035775D8 LDR W9, [X10]
	0x035775DC ADD W9, W9, 0x1
	0x035775E0 ADD X8, X8, W9, 0x4, SXTW
	0x035775E4 ADD X0, X8, 0x138
	0x035775E8 LDP X8, X4, [X0]
	0x035775EC MOVZ W1, 0x1
	0x035775F0 MOV X0, X19
	0x035775F4 MOV X2, X21
	0x035775F8 MOV X3, X20
	0x035775FC BLR X8
	0x03577600 ADRP X19, 0xBBE000
	0x03577604 LDR X19, [X19 + 0x820]
	0x03577608 LDR X0, [X19]
	0x0357760C LDR W8, [X0 + 0xE0]
	0x03577610 CBNZ W8, 0x357761C
	0x03577614 BL 0x1C16DFC
	0x03577618 LDR X0, [X19]
	0x0357761C LDR X8, [X0 + 0xB8]
	0x03577620 LDR X0, [X8]
	0x03577624 ADD X31, X31, 0x200
	0x03577628 LDP X20, X19, [X31 + 0x50]
	0x0357762C LDP X22, X21, [X31 + 0x40]
	0x03577630 LDP X24, X23, [X31 + 0x30]
	0x03577634 LDP X26, X25, [X31 + 0x20]
	0x03577638 LDP X28, X27, [X31 + 0x10]
	0x0357763C LDP X29, X30, [X31], #0x60
	0x03577640 RET
	0x03577644 LDR W9, [X10]
	0x03577648 ADD W9, W9, 0x1
	0x0357764C ADD X8, X8, W9, 0x4, SXTW
	0x03577650 ADD X0, X8, 0x138
	0x03577654 LDP X8, X1, [X0]
	0x03577658 MOV X0, X21
	0x0357765C BLR X8
	0x03577660 LDP W2, W3, [X19 + 0x70]
	0x03577664 LDR X4, [X19 + 0x38]
	0x03577668 MOV W1, W0
	0x0357766C ADD X8, X31, 0x80
	0x03577670 MOV W0, W20
	0x03577674 MOV X5, X31
	0x03577678 BL 0x35678C8
	0x0357767C ADRP X8, 0xBBF000
	0x03577680 LDP V0, V1, [X31 + 0x80]
	0x03577684 LDR V2, [X31 + 0xA]
	0x03577688 LDR X8, [X8 + 0x270]
	0x0357768C MOV X0, X19
	0x03577690 STP V0, V1, [X31 + 0x1D0]
	0x03577694 STR V2, [X31 + 0x1F]
	0x03577698 LDR X1, [X8]
	0x0357769C STR W31, [X31 + 0x1CC]
	0x035776A0 BL 0x21A3894
	0x035776A4 ADRP X8, 0xB7C000
	0x035776A8 LDR X8, [X8 + 0x598]
	0x035776AC MOV X20, X0
	0x035776B0 LDR X8, [X8]
	0x035776B4 LDR W9, [X8 + 0xE0]
	0x035776B8 CBNZ W9, 0x35776C4
	0x035776BC MOV X0, X8
	0x035776C0 BL 0x1C16DFC
	0x035776C4 MOV X0, X31
	0x035776C8 MOV X1, X20
	0x035776CC MOV X2, X31
	0x035776D0 BL 0x3C354F8
	0x035776D4 TBZ X0, 0x0, 0x35776EC
	0x035776D8 CBZ X20, 0x3578658
	0x035776DC ADD X1, X31, 0x1D0
	0x035776E0 ADD X2, X31, 0x1CC
	0x035776E4 MOV X0, X20
	0x035776E8 BL 0x3578DE0
	0x035776EC MOVI V0.2D, 0x0
	0x035776F0 STP V0, V0, [X31 + 0x130]
	0x035776F4 LDRB W8, [X19 + 0x58]
	0x035776F8 STRB W8, [X31 + 0x138]
	0x035776FC LDRB W8, [X19 + 0x59]
	0x03577700 CBZ W8, 0x357770C
	0x03577704 LDR X8, [X19 + 0x60]
	0x03577708 B 0x3577710
	0x0357770C MOV X8, X31
	0x03577710 STR X8, [X31 + 0x140]
	0x03577714 LDRB W8, [X19 + 0x68]
	0x03577718 STRB W8, [X31 + 0x148]
	0x0357771C LDRB W8, [X19 + 0x6A]
	0x03577720 STRB W8, [X31 + 0x14A]
	0x03577724 LDRB W8, [X19 + 0x69]
	0x03577728 STRB W8, [X31 + 0x149]
	0x0357772C LDP V0, V1, [X31 + 0x130]
	0x03577730 STP V0, V1, [X31 + 0x1A0]
	0x03577734 LDR X8, [X19 + 0x50]
	0x03577738 CBZ X8, 0x3578658
	0x0357773C LDR X8, [X8 + 0x48]
	0x03577740 CBZ X8, 0x3578658
	0x03577744 LDP V0, V1, [X31 + 0x1D0]
	0x03577748 LDR V2, [X31 + 0x1F]
	0x0357774C LDR X0, [X8 + 0x188]
	0x03577750 LDP V3, V4, [X31 + 0x1A0]
	0x03577754 STP V0, V1, [X31 + 0x80]
	0x03577758 STR V2, [X31 + 0xA]
	0x0357775C LDR X2, [X19 + 0x48]
	0x03577760 LDR W3, [X31 + 0x1CC]
	0x03577764 STP V3, V4, [X31 + 0x60]
	0x03577768 CBZ X0, 0x3578658
	0x0357776C LDP V0, V1, [X31 + 0x80]
	0x03577770 LDR V2, [X31 + 0xA]
	0x03577774 LDP V3, V4, [X31 + 0x60]
	0x03577778 ADD X1, X31, 0x30
	0x0357777C ADD X5, X31, 0x10
	0x03577780 MOVZ W4, 0x1
	0x03577784 MOV X6, X31
	0x03577788 STP V0, V1, [X31 + 0x30]
	0x0357778C STR V2, [X31 + 0x5]
	0x03577790 STP V3, V4, [X31 + 0x10]
	0x03577794 BL 0x3561BE4
	0x03577798 B 0x3577624
	0x0357779C LDR X0, [X24]
	0x035777A0 LDR W8, [X0 + 0xE0]
	0x035777A4 CBNZ W8, 0x35777B0
	0x035777A8 BL 0x1C16DFC
	0x035777AC LDR X0, [X24]
	0x035777B0 LDR X8, [X0 + 0xB8]
	0x035777B4 ADD X9, X8, 0x8
	0x035777B8 ADD X10, X8, 0x10
	0x035777BC LDR X11, [X10 + 0x10]
	0x035777C0 LDR V0, [X10]
	0x035777C4 LDR X21, [X9]
	0x035777C8 LDR X24, [X8]
	0x035777CC STR X11, [X31 + 0x120]
	0x035777D0 STR V0, [X31 + 0x11]
	0x035777D4 STR V0, [X31 + 0x18]
	0x035777D8 STR X11, [X31 + 0x190]
	0x035777DC LDR X8, [X19 + 0x20]
	0x035777E0 CBZ X8, 0x3578658
	0x035777E4 LDR X0, [X20]
	0x035777E8 LDR X22, [X8 + 0x18]
	0x035777EC MOVZ W1, 0x1
	0x035777F0 BL 0x1C16D6C
	0x035777F4 ADRP X9, 0xBA4000
	0x035777F8 LDR V0, [X31 + 0x18]
	0x035777FC LDR X8, [X31 + 0x190]
	0x03577800 LDR X9, [X9 + 0x5F8]
	0x03577804 MOV X23, X0
	0x03577808 ADD X1, X31, 0x80
	0x0357780C STP X24, X21, [X31 + 0x80]
	0x03577810 LDR X0, [X9]
	0x03577814 STR V0, [X31 + 0x9]
	0x03577818 STR X8, [X31 + 0xA0]
	0x0357781C BL 0x1C16E04
	0x03577820 CBZ X23, 0x3578658
	0x03577824 MOV X24, X0
	0x03577828 CBZ X0, 0x3577840
	0x0357782C LDR X8, [X23]
	0x03577830 MOV X0, X24
	0x03577834 LDR X1, [X8 + 0x40]
	0x03577838 BL 0x1C16E00
	0x0357783C CBZ X0, 0x3578660
	0x03577840 LDR W8, [X23 + 0x18]
	0x03577844 CBZ W8, 0x357865C
	0x03577848 STR X24, [X23 + 0x20]
	0x0357784C CBZ X22, 0x3578658
	0x03577850 ADRP X10, 0xBBF000
	0x03577854 LDR X8, [X22]
	0x03577858 LDR X10, [X10 + 0x300]
	0x0357785C LDR X1, [X25]
	0x03577860 LDRH W9, [X8 + 0x12E]
	0x03577864 LDR X24, [X10]
	0x03577868 CBZ X9, 0x357788C
	0x0357786C LDR X10, [X8 + 0xB0]
	0x03577870 ADD X10, X10, 0x8
	0x03577874 LDUR X11, [X10 - 0x8]
	0x03577878 CMP X11, X1
	0x0357787C B.EQ 0x357789C
	0x03577880 SUBS X9, X9, 0x1
	0x03577884 ADD X10, X10, 0x10
	0x03577888 B.NE 0x3577874
	0x0357788C MOVZ W2, 0x1
	0x03577890 MOV X0, X22
	0x03577894 BL 0x1C5C788
	0x03577898 B 0x35778AC
	0x0357789C LDR W9, [X10]
	0x035778A0 ADD W9, W9, 0x1
	0x035778A4 ADD X8, X8, W9, 0x4, SXTW
	0x035778A8 ADD X0, X8, 0x138
	0x035778AC LDP X8, X4, [X0]
	0x035778B0 MOVZ W1, 0x3
	0x035778B4 MOV X0, X22
	0x035778B8 MOV X2, X24
	0x035778BC MOV X3, X23
	0x035778C0 BLR X8
	0x035778C4 LDRB W8, [X19 + 0xAD]
	0x035778C8 CBZ W8, 0x357793C
	0x035778CC MOV X0, X19
	0x035778D0 MOV X1, X31
	0x035778D4 BL 0x3C32ECC
	0x035778D8 ADRP X8, 0xBA4000
	0x035778DC LDR X8, [X8 + 0x5F8]
	0x035778E0 MOV X23, X0
	0x035778E4 LDR X8, [X8]
	0x035778E8 LDR W9, [X8 + 0xE0]
	0x035778EC CBNZ W9, 0x35778F8
	0x035778F0 MOV X0, X8
	0x035778F4 BL 0x1C16DFC
	0x035778F8 LDR X8, [X19 + 0x20]
	0x035778FC CBZ X8, 0x3578658
	0x03577900 ADRP X9, 0xBBF000
	0x03577904 LDR X9, [X9 + 0x290]
	0x03577908 LDR X24, [X8 + 0x18]
	0x0357790C LDR X0, [X9]
	0x03577910 BL 0x1C16F10
	0x03577914 LDR W3, [X31 + 0xC]
	0x03577918 MOV X1, X23
	0x0357791C MOV X2, X21
	0x03577920 MOV X4, X24
	0x03577924 MOV X5, X31
	0x03577928 MOV X22, X0
	0x0357792C BL 0x356F88C
	0x03577930 ADRP X24, 0xBA4000
	0x03577934 LDR X24, [X24 + 0x5F8]
	0x03577938 B 0x3577988
	0x0357793C ADRP X24, 0xBA4000
	0x03577940 LDR X24, [X24 + 0x5F8]
	0x03577944 LDR X0, [X24]
	0x03577948 LDR W8, [X0 + 0xE0]
	0x0357794C CBNZ W8, 0x3577954
	0x03577950 BL 0x1C16DFC
	0x03577954 LDR X8, [X19 + 0x20]
	0x03577958 CBZ X8, 0x3578658
	0x0357795C ADRP X9, 0xBBF000
	0x03577960 LDR X9, [X9 + 0x298]
	0x03577964 LDR X23, [X8 + 0x18]
	0x03577968 LDR X0, [X9]
	0x0357796C BL 0x1C16F10
	0x03577970 LDR W2, [X31 + 0xC]
	0x03577974 MOV X1, X21
	0x03577978 MOV X3, X23
	0x0357797C MOV X4, X31
	0x03577980 MOV X22, X0
	0x03577984 BL 0x356E9C4
	0x03577988 STR X22, [X19 + 0x48]
	0x0357798C CBZ X22, 0x3577B14
	0x03577990 LDR X8, [X22]
	0x03577994 LDR X1, [X28]
	0x03577998 LDRH W9, [X8 + 0x12E]
	0x0357799C CBZ X9, 0x35779C0
	0x035779A0 LDR X10, [X8 + 0xB0]
	0x035779A4 ADD X10, X10, 0x8
	0x035779A8 LDUR X11, [X10 - 0x8]
	0x035779AC CMP X11, X1
	0x035779B0 B.EQ 0x35779D0
	0x035779B4 SUBS X9, X9, 0x1
	0x035779B8 ADD X10, X10, 0x10
	0x035779BC B.NE 0x35779A8
	0x035779C0 MOVZ W2, 0x2
	0x035779C4 MOV X0, X22
	0x035779C8 BL 0x1C5C788
	0x035779CC B 0x35779E0
	0x035779D0 LDR W9, [X10]
	0x035779D4 ADD W9, W9, 0x2
	0x035779D8 ADD X8, X8, W9, 0x4, SXTW
	0x035779DC ADD X0, X8, 0x138
	0x035779E0 LDP X8, X1, [X0]
	0x035779E4 MOV X0, X22
	0x035779E8 BLR X8
	0x035779EC CBZ X0, 0x3577410
	0x035779F0 LDR X8, [X19 + 0x20]
	0x035779F4 CBZ X8, 0x3578658
	0x035779F8 LDR X0, [X20]
	0x035779FC LDR X21, [X8 + 0x18]
	0x03577A00 MOVZ W1, 0x1
	0x03577A04 BL 0x1C16D6C
	0x03577A08 LDR X23, [X19 + 0x48]
	0x03577A0C CBZ X23, 0x3578658
	0x03577A10 LDR X8, [X23]
	0x03577A14 LDR X1, [X28]
	0x03577A18 MOV X22, X0
	0x03577A1C LDRH W9, [X8 + 0x12E]
	0x03577A20 CBZ X9, 0x3577A44
	0x03577A24 LDR X10, [X8 + 0xB0]
	0x03577A28 ADD X10, X10, 0x8
	0x03577A2C LDUR X11, [X10 - 0x8]
	0x03577A30 CMP X11, X1
	0x03577A34 B.EQ 0x3577A54
	0x03577A38 SUBS X9, X9, 0x1
	0x03577A3C ADD X10, X10, 0x10
	0x03577A40 B.NE 0x3577A2C
	0x03577A44 MOVZ W2, 0x2
	0x03577A48 MOV X0, X23
	0x03577A4C BL 0x1C5C788
	0x03577A50 B 0x3577A64
	0x03577A54 LDR W9, [X10]
	0x03577A58 ADD W9, W9, 0x2
	0x03577A5C ADD X8, X8, W9, 0x4, SXTW
	0x03577A60 ADD X0, X8, 0x138
	0x03577A64 LDP X8, X1, [X0]
	0x03577A68 MOV X0, X23
	0x03577A6C BLR X8
	0x03577A70 CBZ X22, 0x3578658
	0x03577A74 MOV X23, X0
	0x03577A78 CBZ X0, 0x3577A90
	0x03577A7C LDR X8, [X22]
	0x03577A80 MOV X0, X23
	0x03577A84 LDR X1, [X8 + 0x40]
	0x03577A88 BL 0x1C16E00
	0x03577A8C CBZ X0, 0x3578660
	0x03577A90 LDR W8, [X22 + 0x18]
	0x03577A94 CBZ W8, 0x357865C
	0x03577A98 STR X23, [X22 + 0x20]
	0x03577A9C CBZ X21, 0x3578658
	0x03577AA0 ADRP X10, 0xBBF000
	0x03577AA4 LDR X8, [X21]
	0x03577AA8 LDR X10, [X10 + 0x2F8]
	0x03577AAC LDR X1, [X25]
	0x03577AB0 LDRH W9, [X8 + 0x12E]
	0x03577AB4 LDR X23, [X10]
	0x03577AB8 CBZ X9, 0x3577ADC
	0x03577ABC LDR X10, [X8 + 0xB0]
	0x03577AC0 ADD X10, X10, 0x8
	0x03577AC4 LDUR X11, [X10 - 0x8]
	0x03577AC8 CMP X11, X1
	0x03577ACC B.EQ 0x3577AEC
	0x03577AD0 SUBS X9, X9, 0x1
	0x03577AD4 ADD X10, X10, 0x10
	0x03577AD8 B.NE 0x3577AC4
	0x03577ADC MOVZ W2, 0x1
	0x03577AE0 MOV X0, X21
	0x03577AE4 BL 0x1C5C788
	0x03577AE8 B 0x3577AFC
	0x03577AEC LDR W9, [X10]
	0x03577AF0 ADD W9, W9, 0x1
	0x03577AF4 ADD X8, X8, W9, 0x4, SXTW
	0x03577AF8 ADD X0, X8, 0x138
	0x03577AFC LDP X8, X4, [X0]
	0x03577B00 MOVZ W1, 0x1
	0x03577B04 MOV X0, X21
	0x03577B08 MOV X2, X23
	0x03577B0C MOV X3, X22
	0x03577B10 BLR X8
	0x03577B14 LDRB W8, [X19 + 0xAE]
	0x03577B18 CMP W8, 0x0
	0x03577B1C CSET W8, EQ
	0x03577B20 ORR W8, W26, W8, 0x0
	0x03577B24 TBNZ X8, 0x0, 0x3577410
	0x03577B28 LDR X9, [X19 + 0x20]
	0x03577B2C CBZ X9, 0x3578658
	0x03577B30 LDR X22, [X27]
	0x03577B34 LDR X21, [X9 + 0x18]
	0x03577B38 LDR X8, [X22 + 0x38]
	0x03577B3C CBNZ X8, 0x3577B4C
	0x03577B40 MOV X0, X22
	0x03577B44 BL 0x1C5C6E0
	0x03577B48 LDR X8, [X22 + 0x38]
	0x03577B4C LDR X0, [X8 + 0x10]
	0x03577B50 LDRB W8, [X0 + 0x135]
	0x03577B54 TBNZ X8, 0x0, 0x3577B5C
	0x03577B58 BL 0x1C5C684
	0x03577B5C LDR W8, [X0 + 0xE0]
	0x03577B60 CBNZ W8, 0x3577B68
	0x03577B64 BL 0x1C16DFC
	0x03577B68 LDR X8, [X22 + 0x38]
	0x03577B6C LDR X0, [X8 + 0x10]
	0x03577B70 LDRB W8, [X0 + 0x135]
	0x03577B74 TBNZ X8, 0x0, 0x3577B7C
	0x03577B78 BL 0x1C5C684
	0x03577B7C CBZ X21, 0x3578658
	0x03577B80 ADRP X10, 0xBBF000
	0x03577B84 LDR X9, [X0 + 0xB8]
	0x03577B88 LDR X8, [X21]
	0x03577B8C LDR X10, [X10 + 0x2B8]
	0x03577B90 LDR X1, [X25]
	0x03577B94 LDR X22, [X9]
	0x03577B98 LDRH W9, [X8 + 0x12E]

ISIL:
	001 Move [X31-64], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X21, 0xE69000
	010 Move X20, 0xB7D000
	011 Move W8, [X21+3718]
	012 Move X20, [X20+1432]
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {47}
	018 Move X0, 0xB7D000
	019 Move X0, [X0+2504]
	020 Call 0x1C17CF4
	021 Move X0, 0xB7D000
	022 Move X0, [X0+3584]
	023 Call 0x1C17CF4
	024 Move X0, 0xB82000
	025 Move X0, [X0+840]
	026 Call 0x1C17CF4
	027 Move X0, 0xBA7000
	028 Move X0, [X0+3920]
	029 Call 0x1C17CF4
	030 Move X0, 0xBBF000
	031 Move X0, [X0+2080]
	032 Call 0x1C17CF4
	033 Move X0, 0xB7D000
	034 Move X0, [X0+1432]
	035 Call 0x1C17CF4
	036 Move X0, 0xBC0000
	037 Move X0, [X0+592]
	038 Call 0x1C17CF4
	039 Move X0, 0xBC0000
	040 Move X0, [X0+600]
	041 Call 0x1C17CF4
	042 Move X0, 0xBC0000
	043 Move X0, [X0+608]
	044 Call 0x1C17CF4
	045 Move W8, 1
	046 Move [X21+3718], W8
	047 Move X0, X19
	048 Call Recorder.StopRecording, X0
	049 Move X0, [X20]
	050 Move X20, [X19+80]
	051 Move W8, [X0+224]
	052 Compare W8, 0
	053 JumpIfNotEqual {55}
	054 Call 0x1C17DFC
	055 Move X0, X20
	056 Move X1, X31
	057 Move X2, X31
	058 Call Object.op_Equality, X0, X1
	059 Move X9, [X19+32]
	060 Compare X9, 0
	061 JumpIfEqual {424}
	062 Move X24, 0xB7D000
	063 Move X24, [X24+2504]
	064 Move X20, [X9+24]
	065 Move W22, W0
	066 Move X21, [X24]
	067 Move X8, [X21+56]
	068 Compare X8, 0
	069 JumpIfNotEqual {73}
	070 Move X0, X21
	071 Call 0x1C5D6E0
	072 Move X8, [X21+56]
	073 Move X0, [X8+16]
	074 Move W8, [X0+309]
	075 Move TEMP, X8
	076 And TEMP, TEMP, 1
	077 Compare TEMP, 1
	078 JumpIfEqual {80}
	079 Call 0x1C5D684
	080 Move W8, [X0+224]
	081 Compare W8, 0
	082 JumpIfNotEqual {84}
	083 Call 0x1C17DFC
	084 Move X8, [X21+56]
	085 Move X0, [X8+16]
	086 Move W8, [X0+309]
	087 Move TEMP, X8
	088 And TEMP, TEMP, 1
	089 Compare TEMP, 1
	090 JumpIfEqual {92}
	091 Call 0x1C5D684
	092 Compare X20, 0
	093 JumpIfEqual {424}
	094 Move X23, 0xB82000
	095 Move X8, [X0+184]
	096 Move X23, [X23+840]
	097 Move X21, [X8]
	098 Move X1, [X23]
	099 Move TEMP, X22
	100 And TEMP, TEMP, 1
	101 Compare TEMP, 1
	102 JumpIfNotEqual {119}
	103 Move X10, 0xBC0000
	104 Move X8, [X20]
	105 Move X10, [X10+608]
	106 NotImplemented "Instruction LDRH not yet implemented."
	107 Move X19, [X10]
	108 Compare X9, 0
	109 JumpIfEqual {116}
	110 Move X10, [X8+176]
	111 Add X10, X10, 8
	112 NotImplemented "Instruction LDUR not yet implemented."
	113 NotImplemented "Instruction CMP not yet implemented."
	114 Subtract X9, X9, 1
	115 Add X10, X10, 16
	116 Move W2, 1
	117 Move X0, X20
	118 Call 0x1C5D788
	119 Move X10, 0xBC0000
	120 Move X8, [X20]
	121 Move X10, [X10+592]
	122 NotImplemented "Instruction LDRH not yet implemented."
	123 Move X22, [X10]
	124 Compare X9, 0
	125 JumpIfEqual {132}
	126 Move X10, [X8+176]
	127 Add X10, X10, 8
	128 NotImplemented "Instruction LDUR not yet implemented."
	129 NotImplemented "Instruction CMP not yet implemented."
	130 Subtract X9, X9, 1
	131 Add X10, X10, 16
	132 Move W2, 1
	133 Move X0, X20
	134 Call 0x1C5D788
	135 Move W9, [X10]
	136 Add W9, W9, 1
	137 Add X8, X8, W9
	138 Add X0, X8, 312
	139 Move X5, [X0]
	140 Move X4, [X0+8]
	141 Move X0, X20
	142 Move X2, X19
	143 Move X3, X21
	144 Move X20, [X31+48]
	145 Move X19, [X31+56]
	146 Move X22, [X31+32]
	147 Move X21, [X31+40]
	148 Move X24, [X31+16]
	149 Move X23, [X31+24]
	150 Move X30, [X31+8]
	151 Move W1, 3
	152 Move V8, [X31+64]
	153 CallNoReturn X5
	154 Move W9, [X10]
	155 Add W9, W9, 1
	156 Add X8, X8, W9
	157 Add X0, X8, 312
	158 Move X8, [X0]
	159 Move X4, [X0+8]
	160 Move W1, 3
	161 Move X0, X20
	162 Move X2, X22
	163 Move X3, X21
	164 NotImplemented "Instruction BLR not yet implemented."
	165 Move X20, [X19+72]
	166 Compare X20, 0
	167 JumpIfEqual {192}
	168 Move X10, 0xB7D000
	169 Move X8, [X20]
	170 Move X10, [X10+3584]
	171 NotImplemented "Instruction LDRH not yet implemented."
	172 Move X1, [X10]
	173 Compare X9, 0
	174 JumpIfEqual {181}
	175 Move X10, [X8+176]
	176 Add X10, X10, 8
	177 NotImplemented "Instruction LDUR not yet implemented."
	178 NotImplemented "Instruction CMP not yet implemented."
	179 Subtract X9, X9, 1
	180 Add X10, X10, 16
	181 Move X0, X20
	182 Move W2, W31
	183 Call 0x1C5D788
	184 NotImplemented "Instruction LDRSW not yet implemented."
	185 Add X8, X8, X9
	186 Add X0, X8, 312
	187 Move X8, [X0]
	188 Move X1, [X0+8]
	189 Move X0, X20
	190 NotImplemented "Instruction BLR not yet implemented."
	191 Move [X19+72], X31
	192 Move X0, [X19+64]
	193 Compare X0, 0
	194 JumpIfEqual {424}
	195 Move X1, X31
	196 Call LocalVoice.RemoveSelf, X0
	197 Move X0, X19
	198 Call Recorder.CreateLocalVoiceAudioAndSource, X0
	199 Move [X19+64], X0
	200 Move X21, 0xBBF000
	201 Move X21, [X21+2080]
	202 Move X20, X0
	203 Move X0, [X21]
	204 Move W8, [X0+224]
	205 Compare W8, 0
	206 JumpIfNotEqual {209}
	207 Call 0x1C17DFC
	208 Move X0, [X21]
	209 Move X8, [X0+184]
	210 Move X8, [X8]
	211 NotImplemented "Instruction CMP not yet implemented."
	212 Move X0, X19
	213 Call Recorder.get_VoiceDetector, X0
	214 Compare X0, 0
	215 JumpIfEqual {357}
	216 Move X0, X19
	217 Call Recorder.get_VoiceDetector, X0
	218 Compare X0, 0
	219 JumpIfEqual {424}
	220 Move X22, 0xBA7000
	221 Move X8, [X0]
	222 Move V8, [X19+44]
	223 Move X22, [X22+3920]
	224 Move X20, X0
	225 NotImplemented "Instruction LDRH not yet implemented."
	226 Move X1, [X22]
	227 Compare X9, 0
	228 JumpIfEqual {235}
	229 Move X10, [X8+176]
	230 Add X10, X10, 8
	231 NotImplemented "Instruction LDUR not yet implemented."
	232 NotImplemented "Instruction CMP not yet implemented."
	233 Subtract X9, X9, 1
	234 Add X10, X10, 16
	235 Move W2, 3
	236 Move X0, X20
	237 Call 0x1C5D788
	238 Move X9, [X19+32]
	239 Compare X9, 0
	240 JumpIfEqual {424}
	241 Move X21, [X24]
	242 Move X20, [X9+24]
	243 Move X8, [X21+56]
	244 Compare X8, 0
	245 JumpIfNotEqual {249}
	246 Move X0, X21
	247 Call 0x1C5D6E0
	248 Move X8, [X21+56]
	249 Move X0, [X8+16]
	250 Move W8, [X0+309]
	251 Move TEMP, X8
	252 And TEMP, TEMP, 1
	253 Compare TEMP, 1
	254 JumpIfEqual {256}
	255 Call 0x1C5D684
	256 Move W8, [X0+224]
	257 Compare W8, 0
	258 JumpIfNotEqual {260}
	259 Call 0x1C17DFC
	260 Move X8, [X21+56]
	261 Move X0, [X8+16]
	262 Move W8, [X0+309]
	263 Move TEMP, X8
	264 And TEMP, TEMP, 1
	265 Compare TEMP, 1
	266 JumpIfEqual {268}
	267 Call 0x1C5D684
	268 Compare X20, 0
	269 JumpIfEqual {424}
	270 Move X10, 0xBC0000
	271 Move X9, [X0+184]
	272 Move X8, [X20]
	273 Move X1, [X23]
	274 Move X10, [X10+600]
	275 Move X21, [X9]
	276 NotImplemented "Instruction LDRH not yet implemented."
	277 Move X22, [X10]
	278 Compare X9, 0
	279 JumpIfEqual {286}
	280 Move X10, [X8+176]
	281 Add X10, X10, 8
	282 NotImplemented "Instruction LDUR not yet implemented."
	283 NotImplemented "Instruction CMP not yet implemented."
	284 Subtract X9, X9, 1
	285 Add X10, X10, 16
	286 Move W2, 1
	287 Move X0, X20
	288 Call 0x1C5D788
	289 Move W9, [X10]
	290 Add W9, W9, 3
	291 Add X8, X8, W9
	292 Add X0, X8, 312
	293 Move X8, [X0]
	294 Move X1, [X0+8]
	295 Move X0, X20
	296 Move V0, V8
	297 NotImplemented "Instruction BLR not yet implemented."
	298 Move X0, X19
	299 Call Recorder.get_VoiceDetector, X0
	300 Compare X0, 0
	301 JumpIfEqual {424}
	302 Move X8, [X0]
	303 Move W21, [X19+48]
	304 Move X1, [X22]
	305 Move X20, X0
	306 NotImplemented "Instruction LDRH not yet implemented."
	307 Compare X9, 0
	308 JumpIfEqual {315}
	309 Move X10, [X8+176]
	310 Add X10, X10, 8
	311 NotImplemented "Instruction LDUR not yet implemented."
	312 NotImplemented "Instruction CMP not yet implemented."
	313 Subtract X9, X9, 1
	314 Add X10, X10, 16
	315 Move W2, 9
	316 Move X0, X20
	317 Call 0x1C5D788
	318 Move W9, [X10]
	319 Add W9, W9, 9
	320 Add X8, X8, W9
	321 Add X0, X8, 312
	322 Move X8, [X0]
	323 Move X2, [X0+8]
	324 Move X0, X20
	325 Move W1, W21
	326 NotImplemented "Instruction BLR not yet implemented."
	327 Move X0, X19
	328 Call Recorder.get_VoiceDetector, X0
	329 Compare X0, 0
	330 JumpIfEqual {424}
	331 Move X8, [X0]
	332 Move W21, [X19+40]
	333 Move X1, [X22]
	334 Move X20, X0
	335 NotImplemented "Instruction LDRH not yet implemented."
	336 Compare X9, 0
	337 JumpIfEqual {344}
	338 Move X10, [X8+176]
	339 Add X10, X10, 8
	340 NotImplemented "Instruction LDUR not yet implemented."
	341 NotImplemented "Instruction CMP not yet implemented."
	342 Subtract X9, X9, 1
	343 Add X10, X10, 16
	344 Move W2, 1
	345 Move X0, X20
	346 Call 0x1C5D788
	347 Move W9, [X10]
	348 Add W9, W9, 1
	349 Add X8, X8, W9
	350 Add X0, X8, 312
	351 Move X8, [X0]
	352 Move X2, [X0+8]
	353 NotImplemented "Instruction CMP not yet implemented."
	354 NotImplemented "Instruction CSET not yet implemented."
	355 Move X0, X20
	356 NotImplemented "Instruction BLR not yet implemented."
	357 Move X8, [X19]
	358 Move X0, X19
	359 Move X9, [X8+392]
	360 Move X1, [X8+400]
	361 NotImplemented "Instruction BLR not yet implemented."
	362 Move X0, [X19+64]
	363 Compare X0, 0
	364 JumpIfEqual {424}
	365 Move W1, [X19+107]
	366 Move X20, [X31+48]
	367 Move X19, [X31+56]
	368 Move X22, [X31+32]
	369 Move X21, [X31+40]
	370 Move X24, [X31+16]
	371 Move X23, [X31+24]
	372 Move X30, [X31+8]
	373 Move X2, X31
	374 Move V8, [X31+64]
	375 Call LocalVoice.set_TransmitEnabled, X0, X1
	376 Return 
	377 Move W9, [X10]
	378 Add W9, W9, 1
	379 Add X8, X8, W9
	380 Add X0, X8, 312
	381 Move X8, [X0]
	382 Move X4, [X0+8]
	383 Move W1, 1
	384 Move X0, X20
	385 Move X2, X22
	386 Move X3, X21
	387 NotImplemented "Instruction BLR not yet implemented."
	388 Move X20, [X19+72]
	389 Compare X20, 0
	390 JumpIfEqual {415}
	391 Move X10, 0xB7D000
	392 Move X8, [X20]
	393 Move X10, [X10+3584]
	394 NotImplemented "Instruction LDRH not yet implemented."
	395 Move X1, [X10]
	396 Compare X9, 0
	397 JumpIfEqual {404}
	398 Move X10, [X8+176]
	399 Add X10, X10, 8
	400 NotImplemented "Instruction LDUR not yet implemented."
	401 NotImplemented "Instruction CMP not yet implemented."
	402 Subtract X9, X9, 1
	403 Add X10, X10, 16
	404 Move X0, X20
	405 Move W2, W31
	406 Call 0x1C5D788
	407 NotImplemented "Instruction LDRSW not yet implemented."
	408 Add X8, X8, X9
	409 Add X0, X8, 312
	410 Move X8, [X0]
	411 Move X1, [X0+8]
	412 Move X0, X20
	413 NotImplemented "Instruction BLR not yet implemented."
	414 Move [X19+72], X31
	415 Move X20, [X31+48]
	416 Move X19, [X31+56]
	417 Move X22, [X31+32]
	418 Move X21, [X31+40]
	419 Move X24, [X31+16]
	420 Move X23, [X31+24]
	421 Move X30, [X31+8]
	422 Move V8, [X31+64]
	423 Return 
	424 Call 0x1C17F20

Method: System.Void StopRecording()

Disassembly:
	0x03576A78 ADD X10, X10, 0x10
	0x03576A7C B.NE 0x3576A68
	0x03576A80 MOVZ W2, 0x1
	0x03576A84 MOV X0, X20
	0x03576A88 BL 0x1C5C788
	0x03576A8C B 0x3576AA0
	0x03576A90 LDR W9, [X10]
	0x03576A94 ADD W9, W9, 0x1
	0x03576A98 ADD X8, X8, W9, 0x4, SXTW
	0x03576A9C ADD X0, X8, 0x138
	0x03576AA0 LDP X8, X2, [X0]
	0x03576AA4 CMP W21, 0x0
	0x03576AA8 CSET W1, NE
	0x03576AAC MOV X0, X20
	0x03576AB0 BLR X8
	0x03576AB4 LDR X8, [X19]
	0x03576AB8 MOV X0, X19
	0x03576ABC LDP X9, X1, [X8 + 0x188]
	0x03576AC0 BLR X9
	0x03576AC4 LDR X0, [X19 + 0x40]
	0x03576AC8 CBZ X0, 0x3576B98
	0x03576ACC LDRB W1, [X19 + 0x6B]
	0x03576AD0 LDP X20, X19, [X31 + 0x30]
	0x03576AD4 LDP X22, X21, [X31 + 0x20]
	0x03576AD8 LDP X24, X23, [X31 + 0x10]
	0x03576ADC LDR X30, [X31 + 0x8]
	0x03576AE0 MOV X2, X31
	0x03576AE4 LDR V8, [X31], #0x40
	0x03576AE8 B 0x3557628
	0x03576AEC LDR W9, [X10]
	0x03576AF0 ADD W9, W9, 0x1
	0x03576AF4 ADD X8, X8, W9, 0x4, SXTW
	0x03576AF8 ADD X0, X8, 0x138
	0x03576AFC LDP X8, X4, [X0]
	0x03576B00 MOVZ W1, 0x1
	0x03576B04 MOV X0, X20
	0x03576B08 MOV X2, X22
	0x03576B0C MOV X3, X21
	0x03576B10 BLR X8
	0x03576B14 LDR X20, [X19 + 0x48]
	0x03576B18 CBZ X20, 0x3576B80
	0x03576B1C ADRP X10, 0xB7D000
	0x03576B20 LDR X8, [X20]
	0x03576B24 LDR X10, [X10 + 0xE00]
	0x03576B28 LDRH W9, [X8 + 0x12E]
	0x03576B2C LDR X1, [X10]
	0x03576B30 CBZ X9, 0x3576B54
	0x03576B34 LDR X10, [X8 + 0xB0]
	0x03576B38 ADD X10, X10, 0x8
	0x03576B3C LDUR X11, [X10 - 0x8]
	0x03576B40 CMP X11, X1
	0x03576B44 B.EQ 0x3576B64
	0x03576B48 SUBS X9, X9, 0x1
	0x03576B4C ADD X10, X10, 0x10
	0x03576B50 B.NE 0x3576B3C
	0x03576B54 MOV X0, X20
	0x03576B58 MOV W2, W31
	0x03576B5C BL 0x1C5C788
	0x03576B60 B 0x3576B70
	0x03576B64 LDRSW X9, [X10]
	0x03576B68 ADD X8, X8, X9, 0x4, LSL
	0x03576B6C ADD X0, X8, 0x138
	0x03576B70 LDP X8, X1, [X0]
	0x03576B74 MOV X0, X20
	0x03576B78 BLR X8
	0x03576B7C STR X31, [X19 + 0x48]
	0x03576B80 LDP X20, X19, [X31 + 0x30]
	0x03576B84 LDP X22, X21, [X31 + 0x20]
	0x03576B88 LDP X24, X23, [X31 + 0x10]
	0x03576B8C LDR X30, [X31 + 0x8]
	0x03576B90 LDR V8, [X31], #0x40
	0x03576B94 RET
	0x03576B98 BL 0x1C16F20
	0x03576B9C STP X29, X30, [X31 - 0x60]!
	0x03576BA0 STP X28, X27, [X31 + 0x10]
	0x03576BA4 STP X26, X25, [X31 + 0x20]
	0x03576BA8 STP X24, X23, [X31 + 0x30]
	0x03576BAC STP X22, X21, [X31 + 0x40]
	0x03576BB0 STP X20, X19, [X31 + 0x50]
	0x03576BB4 SUB X31, X31, 0x200
	0x03576BB8 ADRP X20, 0xE69000
	0x03576BBC ADRP X29, 0xB7D000
	0x03576BC0 LDRB W8, [X20 + 0xE8B]
	0x03576BC4 LDR X29, [X29 + 0x970]
	0x03576BC8 MOV X19, X0
	0x03576BCC TBNZ X8, 0x0, 0x3576DB8
	0x03576BD0 ADRP X0, 0xBBF000
	0x03576BD4 LDR X0, [X0 + 0x448]
	0x03576BD8 BL 0x1C16CF4
	0x03576BDC ADRP X0, 0xB7D000
	0x03576BE0 LDR X0, [X0 + 0x970]
	0x03576BE4 BL 0x1C16CF4
	0x03576BE8 ADRP X0, 0xB7D000
	0x03576BEC LDR X0, [X0 + 0x9C8]
	0x03576BF0 BL 0x1C16CF4
	0x03576BF4 ADRP X0, 0xBC0000
	0x03576BF8 LDR X0, [X0 + 0x1D8]
	0x03576BFC BL 0x1C16CF4
	0x03576C00 ADRP X0, 0xBC0000
	0x03576C04 LDR X0, [X0 + 0x268]
	0x03576C08 BL 0x1C16CF4
	0x03576C0C ADRP X0, 0xBC0000
	0x03576C10 LDR X0, [X0 + 0x270]
	0x03576C14 BL 0x1C16CF4
	0x03576C18 ADRP X0, 0xBA5000
	0x03576C1C LDR X0, [X0 + 0x5F8]
	0x03576C20 BL 0x1C16CF4
	0x03576C24 ADRP X0, 0xBC0000
	0x03576C28 LDR X0, [X0 + 0x278]
	0x03576C2C BL 0x1C16CF4
	0x03576C30 ADRP X0, 0xBA9000
	0x03576C34 LDR X0, [X0 + 0x178]
	0x03576C38 BL 0x1C16CF4
	0x03576C3C ADRP X0, 0xB82000
	0x03576C40 LDR X0, [X0 + 0x348]
	0x03576C44 BL 0x1C16CF4
	0x03576C48 ADRP X0, 0xBC0000
	0x03576C4C LDR X0, [X0 + 0x280]
	0x03576C50 BL 0x1C16CF4
	0x03576C54 ADRP X0, 0xBBF000
	0x03576C58 LDR X0, [X0 + 0x820]
	0x03576C5C BL 0x1C16CF4
	0x03576C60 ADRP X0, 0xBC0000
	0x03576C64 LDR X0, [X0 + 0x288]
	0x03576C68 BL 0x1C16CF4
	0x03576C6C ADRP X0, 0xBC0000
	0x03576C70 LDR X0, [X0 + 0x290]
	0x03576C74 BL 0x1C16CF4
	0x03576C78 ADRP X0, 0xBC0000
	0x03576C7C LDR X0, [X0 + 0x298]
	0x03576C80 BL 0x1C16CF4
	0x03576C84 ADRP X0, 0xB7D000
	0x03576C88 LDR X0, [X0 + 0x9D0]
	0x03576C8C BL 0x1C16CF4
	0x03576C90 ADRP X0, 0xB7D000
	0x03576C94 LDR X0, [X0 + 0x598]
	0x03576C98 BL 0x1C16CF4
	0x03576C9C ADRP X0, 0xB86000
	0x03576CA0 LDR X0, [X0 + 0xA48]
	0x03576CA4 BL 0x1C16CF4
	0x03576CA8 ADRP X0, 0xBC0000
	0x03576CAC LDR X0, [X0 + 0x2A0]
	0x03576CB0 BL 0x1C16CF4
	0x03576CB4 ADRP X0, 0xBC0000
	0x03576CB8 LDR X0, [X0 + 0x2A8]
	0x03576CBC BL 0x1C16CF4
	0x03576CC0 ADRP X0, 0xBC0000
	0x03576CC4 LDR X0, [X0 + 0x2B0]
	0x03576CC8 BL 0x1C16CF4
	0x03576CCC ADRP X0, 0xBC0000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0xE6A000
	008 Move W8, [X20+3719]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {34}
	014 Move X0, 0xB7E000
	015 Move X0, [X0+2504]
	016 Call 0x1C17CF4
	017 Move X0, 0xB7E000
	018 Move X0, [X0+3584]
	019 Call 0x1C17CF4
	020 Move X0, 0xB83000
	021 Move X0, [X0+840]
	022 Call 0x1C17CF4
	023 Move X0, 0xBC0000
	024 Move X0, [X0+2080]
	025 Call 0x1C17CF4
	026 Move X0, 0xBC1000
	027 Move X0, [X0+520]
	028 Call 0x1C17CF4
	029 Move X0, 0xBC1000
	030 Move X0, [X0+528]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X20+3719], W8
	034 Move X9, [X19+32]
	035 Compare X9, 0
	036 JumpIfEqual {171}
	037 Move X8, 0xB7E000
	038 Move X8, [X8+2504]
	039 Move X20, [X9+24]
	040 Move X21, [X8]
	041 Move X8, [X21+56]
	042 Compare X8, 0
	043 JumpIfNotEqual {47}
	044 Move X0, X21
	045 Call 0x1C5D6E0
	046 Move X8, [X21+56]
	047 Move X0, [X8+16]
	048 Move W8, [X0+309]
	049 Move TEMP, X8
	050 And TEMP, TEMP, 1
	051 Compare TEMP, 1
	052 JumpIfEqual {54}
	053 Call 0x1C5D684
	054 Move W8, [X0+224]
	055 Compare W8, 0
	056 JumpIfNotEqual {58}
	057 Call 0x1C17DFC
	058 Move X8, [X21+56]
	059 Move X0, [X8+16]
	060 Move W8, [X0+309]
	061 Move TEMP, X8
	062 And TEMP, TEMP, 1
	063 Compare TEMP, 1
	064 JumpIfEqual {66}
	065 Call 0x1C5D684
	066 Compare X20, 0
	067 JumpIfEqual {171}
	068 Move X9, 0xB83000
	069 Move X11, 0xBC1000
	070 Move X9, [X9+840]
	071 Move X10, [X0+184]
	072 Move X8, [X20]
	073 Move X11, [X11+520]
	074 Move X23, 0xBC0000
	075 Move X1, [X9]
	076 Move X21, [X10]
	077 NotImplemented "Instruction LDRH not yet implemented."
	078 Move X22, [X11]
	079 Move X23, [X23+2080]
	080 Compare X9, 0
	081 JumpIfEqual {88}
	082 Move X10, [X8+176]
	083 Add X10, X10, 8
	084 NotImplemented "Instruction LDUR not yet implemented."
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Subtract X9, X9, 1
	087 Add X10, X10, 16
	088 Move W2, 1
	089 Move X0, X20
	090 Call 0x1C5D788
	091 Move W9, [X10]
	092 Add W9, W9, 1
	093 Add X8, X8, W9
	094 Add X0, X8, 312
	095 Move X8, [X0]
	096 Move X4, [X0+8]
	097 Move W1, 3
	098 Move X0, X20
	099 Move X2, X22
	100 Move X3, X21
	101 NotImplemented "Instruction BLR not yet implemented."
	102 Move X0, [X23]
	103 Move X20, [X19+64]
	104 Move W8, [X0+224]
	105 Compare W8, 0
	106 JumpIfNotEqual {109}
	107 Call 0x1C17DFC
	108 Move X0, [X23]
	109 Move X8, [X0+184]
	110 Move X8, [X8]
	111 NotImplemented "Instruction CMP not yet implemented."
	112 Move X0, [X19+64]
	113 Compare X0, 0
	114 JumpIfEqual {171}
	115 Move X1, X31
	116 Call LocalVoice.RemoveSelf, X0
	117 Move X0, [X23]
	118 Move W8, [X0+224]
	119 Compare W8, 0
	120 JumpIfNotEqual {123}
	121 Call 0x1C17DFC
	122 Move X0, [X23]
	123 Move X8, [X0+184]
	124 Move X0, X19
	125 Move X1, X31
	126 Move X8, [X8]
	127 Move [X19+64], X8
	128 Call Component.get_gameObject, X0
	129 Compare X0, 0
	130 JumpIfEqual {171}
	131 Move X8, 0xBC1000
	132 Move X8, [X8+528]
	133 Move W2, 1
	134 Move X3, X31
	135 Move X1, [X8]
	136 Call GameObject.SendMessage, X0, X1, X2
	137 Move X20, [X19+72]
	138 Compare X20, 0
	139 JumpIfEqual {164}
	140 Move X10, 0xB7E000
	141 Move X8, [X20]
	142 Move X10, [X10+3584]
	143 NotImplemented "Instruction LDRH not yet implemented."
	144 Move X1, [X10]
	145 Compare X9, 0
	146 JumpIfEqual {153}
	147 Move X10, [X8+176]
	148 Add X10, X10, 8
	149 NotImplemented "Instruction LDUR not yet implemented."
	150 NotImplemented "Instruction CMP not yet implemented."
	151 Subtract X9, X9, 1
	152 Add X10, X10, 16
	153 Move X0, X20
	154 Move W2, W31
	155 Call 0x1C5D788
	156 NotImplemented "Instruction LDRSW not yet implemented."
	157 Add X8, X8, X9
	158 Add X0, X8, 312
	159 Move X8, [X0]
	160 Move X1, [X0+8]
	161 Move X0, X20
	162 NotImplemented "Instruction BLR not yet implemented."
	163 Move [X19+72], X31
	164 Move X20, [X31+32]
	165 Move X19, [X31+40]
	166 Move X22, [X31+16]
	167 Move X21, [X31+24]
	168 Move X30, [X31+48]
	169 Move X23, [X31+56]
	170 Return 
	171 Call 0x1C17F20

Method: System.Boolean SetIosAudioSessionParameters(Photon.Voice.IOS.AudioSessionParameters asp)

Disassembly:
	0x0357966C LDR X10, [X8 + 0xB0]
	0x03579670 ADD X10, X10, 0x8
	0x03579674 LDUR X11, [X10 - 0x8]

ISIL:
	001 Move X3, X2
	002 Move X2, X1
	003 ShiftRight X2, 32
	004 And X2, X2, 0x7FFFFFFF

Method: System.Boolean SetIosAudioSessionParameters(Photon.Voice.IOS.AudioSessionCategory category, Photon.Voice.IOS.AudioSessionMode mode, Photon.Voice.IOS.AudioSessionCategoryOption[] options)

Disassembly:
	0x03579678 CMP X11, X1
	0x0357967C B.EQ 0x35796D0
	0x03579680 SUBS X9, X9, 0x1
	0x03579684 ADD X10, X10, 0x10
	0x03579688 B.NE 0x3579674
	0x0357968C MOVZ W2, 0x1
	0x03579690 MOV X0, X20
	0x03579694 BL 0x1C5C788
	0x03579698 B 0x35796E0
	0x0357969C LDR W9, [X10]
	0x035796A0 ADD W9, W9, 0x1
	0x035796A4 ADD X8, X8, W9, 0x4, SXTW
	0x035796A8 ADD X0, X8, 0x138
	0x035796AC LDP X5, X4, [X0]
	0x035796B0 MOV X0, X20
	0x035796B4 MOV X2, X19
	0x035796B8 MOV X3, X21
	0x035796BC LDP X20, X19, [X31 + 0x20]
	0x035796C0 LDP X22, X21, [X31 + 0x10]
	0x035796C4 MOVZ W1, 0x3
	0x035796C8 LDR X30, [X31], #0x30
	0x035796CC BR X5
	0x035796D0 LDR W9, [X10]
	0x035796D4 ADD W9, W9, 0x1
	0x035796D8 ADD X8, X8, W9, 0x4, SXTW
	0x035796DC ADD X0, X8, 0x138
	0x035796E0 LDP X8, X4, [X0]
	0x035796E4 MOVZ W1, 0x3
	0x035796E8 MOV X0, X20
	0x035796EC MOV X2, X22
	0x035796F0 MOV X3, X21
	0x035796F4 BLR X8
	0x035796F8 LDRB W8, [X19 + 0x89]
	0x035796FC CBZ W8, 0x3579578
	0x03579700 MOVZ W8, 0x1
	0x03579704 STR W8, [X19 + 0xDC]
	0x03579708 B 0x3579578
	0x0357970C BL 0x1C16F20
	0x03579710 STR X30, [X31 - 0x30]!
	0x03579714 STP X22, X21, [X31 + 0x10]
	0x03579718 STP X20, X19, [X31 + 0x20]
	0x0357971C ADRP X21, 0xE66000
	0x03579720 ADRP X20, 0xB7A000
	0x03579724 LDRB W8, [X21 + 0xE8E]
	0x03579728 LDR X20, [X20 + 0x598]
	0x0357972C MOV X19, X0
	0x03579730 TBNZ X8, 0x0, 0x357976C
	0x03579734 ADRP X0, 0xB7A000
	0x03579738 LDR X0, [X0 + 0x9C8]
	0x0357973C BL 0x1C16CF4
	0x03579740 ADRP X0, 0xB7F000
	0x03579744 LDR X0, [X0 + 0x348]
	0x03579748 BL 0x1C16CF4
	0x0357974C ADRP X0, 0xB7A000
	0x03579750 LDR X0, [X0 + 0x598]
	0x03579754 BL 0x1C16CF4
	0x03579758 ADRP X0, 0xBBD000
	0x0357975C LDR X0, [X0 + 0x3C0]
	0x03579760 BL 0x1C16CF4
	0x03579764 MOVZ W8, 0x1
	0x03579768 STRB W8, [X21 + 0xE8E]
	0x0357976C LDR X0, [X20]
	0x03579770 LDR X20, [X19 + 0x50]
	0x03579774 LDR W8, [X0 + 0xE0]
	0x03579778 CBNZ W8, 0x3579780
	0x0357977C BL 0x1C16DFC
	0x03579780 MOV X0, X20
	0x03579784 MOV X1, X31
	0x03579788 MOV X2, X31
	0x0357978C BL 0x3C3883C
	0x03579790 TBZ X0, 0x0, 0x35797A4
	0x03579794 LDP X20, X19, [X31 + 0x20]
	0x03579798 LDP X22, X21, [X31 + 0x10]
	0x0357979C LDR X30, [X31], #0x30
	0x035797A0 RET
	0x035797A4 LDR X9, [X19 + 0x20]
	0x035797A8 CBZ X9, 0x35798AC
	0x035797AC ADRP X8, 0xB7A000
	0x035797B0 LDR X8, [X8 + 0x9C8]
	0x035797B4 LDR X20, [X9 + 0x18]
	0x035797B8 LDR X21, [X8]
	0x035797BC LDR X8, [X21 + 0x38]
	0x035797C0 CBNZ X8, 0x35797D0
	0x035797C4 MOV X0, X21
	0x035797C8 BL 0x1C5C6E0
	0x035797CC LDR X8, [X21 + 0x38]
	0x035797D0 LDR X0, [X8 + 0x10]
	0x035797D4 LDRB W8, [X0 + 0x135]
	0x035797D8 TBNZ X8, 0x0, 0x35797E0
	0x035797DC BL 0x1C5C684
	0x035797E0 LDR W8, [X0 + 0xE0]
	0x035797E4 CBNZ W8, 0x35797EC
	0x035797E8 BL 0x1C16DFC
	0x035797EC LDR X8, [X21 + 0x38]
	0x035797F0 LDR X0, [X8 + 0x10]
	0x035797F4 LDRB W8, [X0 + 0x135]
	0x035797F8 TBNZ X8, 0x0, 0x3579800
	0x035797FC BL 0x1C5C684
	0x03579800 CBZ X20, 0x35798AC
	0x03579804 ADRP X10, 0xB7F000
	0x03579808 ADRP X11, 0xBBD000
	0x0357980C LDR X9, [X0 + 0xB8]
	0x03579810 LDR X10, [X10 + 0x348]
	0x03579814 LDR X8, [X20]
	0x03579818 LDR X11, [X11 + 0x3C0]
	0x0357981C LDR X21, [X9]
	0x03579820 LDR X1, [X10]
	0x03579824 LDRH W9, [X8 + 0x12E]
	0x03579828 LDR X22, [X11]
	0x0357982C CBZ X9, 0x3579850
	0x03579830 LDR X10, [X8 + 0xB0]
	0x03579834 ADD X10, X10, 0x8
	0x03579838 LDUR X11, [X10 - 0x8]
	0x0357983C CMP X11, X1
	0x03579840 B.EQ 0x3579860
	0x03579844 SUBS X9, X9, 0x1
	0x03579848 ADD X10, X10, 0x10
	0x0357984C B.NE 0x3579838
	0x03579850 MOVZ W2, 0x1
	0x03579854 MOV X0, X20
	0x03579858 BL 0x1C5C788
	0x0357985C B 0x3579870
	0x03579860 LDR W9, [X10]
	0x03579864 ADD W9, W9, 0x1
	0x03579868 ADD X8, X8, W9, 0x4, SXTW
	0x0357986C ADD X0, X8, 0x138
	0x03579870 LDP X8, X4, [X0]
	0x03579874 MOVZ W1, 0x3
	0x03579878 MOV X0, X20
	0x0357987C MOV X2, X22
	0x03579880 MOV X3, X21
	0x03579884 BLR X8
	0x03579888 MOV X0, X19
	0x0357988C BL 0x3575A78
	0x03579890 LDR X0, [X19 + 0x50]
	0x03579894 CBZ X0, 0x35798AC
	0x03579898 MOV X1, X19
	0x0357989C LDP X20, X19, [X31 + 0x20]
	0x035798A0 LDP X22, X21, [X31 + 0x10]
	0x035798A4 LDR X30, [X31], #0x30
	0x035798A8 B 0x35798B0

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+32], X24
	004 Move [X31+40], X23
	005 Move [X31+48], X22
	006 Move [X31+56], X21
	007 Move [X31+64], X20
	008 Move [X31+72], X19
	009 Move X23, 0xE67000
	010 Move W8, [X23+3720]
	011 Move X20, X3
	012 Move W21, W2
	013 Move W22, W1
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {33}
	019 Move X0, 0xBBE000
	020 Move X0, [X0+616]
	021 Call 0x1C17CF4
	022 Move X0, 0xB80000
	023 Move X0, [X0+840]
	024 Call 0x1C17CF4
	025 Move X0, 0xB7B000
	026 Move X0, [X0+2512]
	027 Call 0x1C17CF4
	028 Move X0, 0xBBE000
	029 Move X0, [X0+848]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X23+3720], W8
	033 Compare X20, 0
	034 JumpIfEqual {47}
	035 Move X9, [X20+24]
	036 NotImplemented "Instruction CMP not yet implemented."
	037 And X9, X9, 0
	038 Move X8, X31
	039 Move W24, W31
	040 Move X10, W9
	041 Add X11, X20, 32
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move W12, [X11]
	044 Add X8, X8, 1
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Or W24, W12, W24
	047 Move W24, W31
	048 Move X23, X19
	049 Add X23, X23, 152
	050 Move W8, [X23]
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Move W8, [X19+156]
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Move X0, X23
	055 Move X1, X31
	056 Call AudioSessionParameters.CategoryOptionsToInt, X0
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Move W0, W31
	059 Move X8, [X19+32]
	060 Move [X19+152], W22
	061 Move [X19+156], W21
	062 Move [X19+160], X20
	063 Compare X8, 0
	064 JumpIfEqual {147}
	065 Move X9, 0xB7B000
	066 Move X9, [X9+2512]
	067 Move X22, 0xBBE000
	068 Move X20, [X8+24]
	069 Move W1, 1
	070 Move X0, [X9]
	071 Move X22, [X22+616]
	072 Call 0x1C17D6C
	073 Move X21, X0
	074 Move V0, [X23]
	075 Move X0, [X22]
	076 Add X1, X31, 0
	077 Move [X31], V0
	078 Call 0x1C17E04
	079 Compare X21, 0
	080 JumpIfEqual {147}
	081 Move X22, X0
	082 Compare X0, 0
	083 JumpIfEqual {90}
	084 Move X8, [X21]
	085 Move X0, X22
	086 Move X1, [X8+64]
	087 Call 0x1C17E00
	088 Compare X0, 0
	089 JumpIfEqual {148}
	090 Move W8, [X21+24]
	091 Compare W8, 0
	092 JumpIfEqual {146}
	093 Move [X21+32], X22
	094 Compare X20, 0
	095 JumpIfEqual {147}
	096 Move X9, 0xB80000
	097 Move X10, 0xBBE000
	098 Move X8, [X20]
	099 Move X9, [X9+840]
	100 Move X10, [X10+848]
	101 Move X1, [X9]
	102 NotImplemented "Instruction LDRH not yet implemented."
	103 Move X22, [X10]
	104 Compare X9, 0
	105 JumpIfEqual {112}
	106 Move X10, [X8+176]
	107 Add X10, X10, 8
	108 NotImplemented "Instruction LDUR not yet implemented."
	109 NotImplemented "Instruction CMP not yet implemented."
	110 Subtract X9, X9, 1
	111 Add X10, X10, 16
	112 Move W2, 1
	113 Move X0, X20
	114 Call 0x1C5D788
	115 Move W9, [X10]
	116 Add W9, W9, 1
	117 Add X8, X8, W9
	118 Add X0, X8, 312
	119 Move X8, [X0]
	120 Move X4, [X0+8]
	121 Move W1, 3
	122 Move X0, X20
	123 Move X2, X22
	124 Move X3, X21
	125 NotImplemented "Instruction BLR not yet implemented."
	126 Move W8, [X19+120]
	127 Compare W8, 0
	128 JumpIfNotEqual {136}
	129 Move X0, X19
	130 Call Recorder.get_MicrophoneType, X0
	131 NotImplemented "Instruction CMP not yet implemented."
	132 Move W8, [X19+137]
	133 Compare W8, 0
	134 JumpIfEqual {137}
	135 Move [X19+220], W0
	136 Move W0, 1
	137 Move X20, [X31+64]
	138 Move X19, [X31+72]
	139 Move X22, [X31+48]
	140 Move X21, [X31+56]
	141 Move X24, [X31+32]
	142 Move X23, [X31+40]
	143 Move X30, [X31+16]
	144 Add X31, X31, 80
	145 Return X0
	146 Call 0x1C17F28
	147 Call 0x1C17F20
	148 Call 0x1C17F44
	149 Move X1, X31
	150 Call 0x1C17DEC

Method: System.Boolean SetAndroidNativeMicrophoneSettings(System.Boolean aec = False, System.Boolean agc = False, System.Boolean ns = False)

Disassembly:
	0x035798AC BL 0x1C16F20
	0x035798B0 STR X30, [X31 - 0x30]!
	0x035798B4 STP X22, X21, [X31 + 0x10]
	0x035798B8 STP X20, X19, [X31 + 0x20]
	0x035798BC ADRP X21, 0xE66000
	0x035798C0 ADRP X22, 0xB7A000
	0x035798C4 LDRB W8, [X21 + 0xEC0]
	0x035798C8 LDR X22, [X22 + 0x598]
	0x035798CC MOV X19, X1
	0x035798D0 MOV X20, X0
	0x035798D4 TBNZ X8, 0x0, 0x35798F8
	0x035798D8 ADRP X0, 0xBBD000
	0x035798DC LDR X0, [X0 + 0x3C8]
	0x035798E0 BL 0x1C16CF4
	0x035798E4 ADRP X0, 0xB7A000
	0x035798E8 LDR X0, [X0 + 0x598]
	0x035798EC BL 0x1C16CF4
	0x035798F0 MOVZ W8, 0x1
	0x035798F4 STRB W8, [X21 + 0xEC0]
	0x035798F8 LDR X0, [X22]
	0x035798FC LDR W8, [X0 + 0xE0]
	0x03579900 CBNZ W8, 0x3579908
	0x03579904 BL 0x1C16DFC
	0x03579908 MOV X0, X19
	0x0357990C MOV X1, X31
	0x03579910 MOV X2, X31
	0x03579914 BL 0x3C354F8
	0x03579918 TBZ X0, 0x0, 0x3579954
	0x0357991C CBZ X19, 0x3579964
	0x03579920 MOV X0, X19
	0x03579924 BL 0x3575A78
	0x03579928 STR X31, [X19 + 0x50]
	0x0357992C LDR X0, [X20 + 0x98]
	0x03579930 CBZ X0, 0x3579964
	0x03579934 ADRP X8, 0xBBD000
	0x03579938 LDR X8, [X8 + 0x3C8]
	0x0357993C MOV X1, X19
	0x03579940 LDP X20, X19, [X31 + 0x20]
	0x03579944 LDP X22, X21, [X31 + 0x10]
	0x03579948 LDR X2, [X8]
	0x0357994C LDR X30, [X31], #0x30
	0x03579950 B 0x301D7A8
	0x03579954 LDP X20, X19, [X31 + 0x20]
	0x03579958 LDP X22, X21, [X31 + 0x10]
	0x0357995C LDR X30, [X31], #0x30
	0x03579960 RET
	0x03579964 BL 0x1C16F20
	0x03579968 SUB X31, X31, 0x40
	0x0357996C STP X30, X23, [X31 + 0x10]
	0x03579970 STP X22, X21, [X31 + 0x20]
	0x03579974 STP X20, X19, [X31 + 0x30]
	0x03579978 ADRP X22, 0xE66000
	0x0357997C ADRP X21, 0xB7A000
	0x03579980 LDRB W8, [X22 + 0xE90]
	0x03579984 LDR X21, [X21 + 0x598]
	0x03579988 MOV W20, W1
	0x0357998C MOV X19, X0
	0x03579990 TBNZ X8, 0x0, 0x35799D8
	0x03579994 ADRP X0, 0xB7A000
	0x03579998 LDR X0, [X0 + 0xB58]
	0x0357999C BL 0x1C16CF4
	0x035799A0 ADRP X0, 0xB7F000
	0x035799A4 LDR X0, [X0 + 0x348]
	0x035799A8 BL 0x1C16CF4
	0x035799AC ADRP X0, 0xB7A000
	0x035799B0 LDR X0, [X0 + 0x9D0]
	0x035799B4 BL 0x1C16CF4
	0x035799B8 ADRP X0, 0xB7A000
	0x035799BC LDR X0, [X0 + 0x598]
	0x035799C0 BL 0x1C16CF4
	0x035799C4 ADRP X0, 0xBBD000
	0x035799C8 LDR X0, [X0 + 0x3D0]
	0x035799CC BL 0x1C16CF4
	0x035799D0 MOVZ W8, 0x1
	0x035799D4 STRB W8, [X22 + 0xE90]
	0x035799D8 LDR X0, [X21]
	0x035799DC LDR X21, [X19 + 0x50]
	0x035799E0 LDR W8, [X0 + 0xE0]
	0x035799E4 CBNZ W8, 0x35799EC
	0x035799E8 BL 0x1C16DFC
	0x035799EC MOV X0, X21
	0x035799F0 MOV X1, X31
	0x035799F4 MOV X2, X31
	0x035799F8 BL 0x3C3883C
	0x035799FC TBNZ X0, 0x0, 0x3579AF8
	0x03579A00 LDR X8, [X19 + 0x20]
	0x03579A04 CBZ X8, 0x3579B0C
	0x03579A08 LDR X21, [X8 + 0x18]
	0x03579A0C ADRP X8, 0xB7A000
	0x03579A10 LDR X8, [X8 + 0x9D0]
	0x03579A14 MOVZ W1, 0x1
	0x03579A18 AND W23, W20, 0x1
	0x03579A1C LDR X0, [X8]
	0x03579A20 BL 0x1C16D6C
	0x03579A24 ADRP X8, 0xB7A000
	0x03579A28 LDR X8, [X8 + 0xB58]
	0x03579A2C MOV X22, X0
	0x03579A30 ADD X1, X31, 0xC
	0x03579A34 STRB W23, [X31 + 0xC]
	0x03579A38 LDR X0, [X8]
	0x03579A3C BL 0x1C16E04
	0x03579A40 CBZ X22, 0x3579B0C
	0x03579A44 MOV X23, X0
	0x03579A48 CBZ X0, 0x3579A60
	0x03579A4C LDR X8, [X22]
	0x03579A50 MOV X0, X23
	0x03579A54 LDR X1, [X8 + 0x40]
	0x03579A58 BL 0x1C16E00
	0x03579A5C CBZ X0, 0x3579B14
	0x03579A60 LDR W8, [X22 + 0x18]
	0x03579A64 CBZ W8, 0x3579B10
	0x03579A68 STR X23, [X22 + 0x20]
	0x03579A6C CBZ X21, 0x3579B0C
	0x03579A70 ADRP X9, 0xB7F000
	0x03579A74 LDR X8, [X21]
	0x03579A78 LDR X9, [X9 + 0x348]
	0x03579A7C ADRP X10, 0xBBD000
	0x03579A80 LDR X1, [X9]
	0x03579A84 LDR X10, [X10 + 0x3D0]
	0x03579A88 LDRH W9, [X8 + 0x12E]
	0x03579A8C LDR X23, [X10]
	0x03579A90 CBZ X9, 0x3579AB4
	0x03579A94 LDR X10, [X8 + 0xB0]
	0x03579A98 ADD X10, X10, 0x8
	0x03579A9C LDUR X11, [X10 - 0x8]
	0x03579AA0 CMP X11, X1
	0x03579AA4 B.EQ 0x3579AC4
	0x03579AA8 SUBS X9, X9, 0x1
	0x03579AAC ADD X10, X10, 0x10
	0x03579AB0 B.NE 0x3579A9C
	0x03579AB4 MOVZ W2, 0x1
	0x03579AB8 MOV X0, X21
	0x03579ABC BL 0x1C5C788
	0x03579AC0 B 0x3579AD4
	0x03579AC4 LDR W9, [X10]
	0x03579AC8 ADD W9, W9, 0x1
	0x03579ACC ADD X8, X8, W9, 0x4, SXTW
	0x03579AD0 ADD X0, X8, 0x138
	0x03579AD4 LDP X8, X4, [X0]
	0x03579AD8 MOVZ W1, 0x4
	0x03579ADC MOV X0, X21
	0x03579AE0 MOV X2, X23
	0x03579AE4 MOV X3, X22
	0x03579AE8 BLR X8
	0x03579AEC AND W1, W20, 0x1
	0x03579AF0 MOV X0, X19
	0x03579AF4 BL 0x3579B20
	0x03579AF8 LDP X20, X19, [X31 + 0x30]
	0x03579AFC LDP X22, X21, [X31 + 0x20]
	0x03579B00 LDP X30, X23, [X31 + 0x10]
	0x03579B04 ADD X31, X31, 0x40
	0x03579B08 RET

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X23, 0xE67000
	011 Move W8, [X23+3721]
	012 Move W20, W3
	013 Move W21, W2
	014 Move X19, X0
	015 And W22, W1, 1
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {34}
	020 Move X0, 0xB7B000
	021 Move X0, [X0+2904]
	022 Call 0x1C17CF4
	023 Move X0, 0xB80000
	024 Move X0, [X0+840]
	025 Call 0x1C17CF4
	026 Move X0, 0xB7B000
	027 Move X0, [X0+2512]
	028 Call 0x1C17CF4
	029 Move X0, 0xBBE000
	030 Move X0, [X0+856]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X23+3721], W8
	034 Move W8, [X19+168]
	035 And W25, W21, 1
	036 And W23, W20, 1
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move W8, [X19+169]
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Move W8, [X19+170]
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Move W0, W31
	043 Move X8, [X19+32]
	044 Move [X19+168], W22
	045 Move [X19+169], W25
	046 Move [X19+170], W23
	047 Compare X8, 0
	048 JumpIfEqual {163}
	049 Move X9, 0xB7B000
	050 Move X9, [X9+2512]
	051 Move X24, 0xB7B000
	052 Move X20, [X8+24]
	053 Move W1, 3
	054 Move X0, [X9]
	055 Move X24, [X24+2904]
	056 Call 0x1C17D6C
	057 Move X21, X0
	058 Move X0, [X24]
	059 Add X1, X31, 12
	060 Move [X31+12], W22
	061 Call 0x1C17E04
	062 Compare X21, 0
	063 JumpIfEqual {163}
	064 Move X22, X0
	065 Compare X0, 0
	066 JumpIfEqual {73}
	067 Move X8, [X21]
	068 Move X0, X22
	069 Move X1, [X8+64]
	070 Call 0x1C17E00
	071 Compare X0, 0
	072 JumpIfEqual {164}
	073 Move W8, [X21+24]
	074 Compare W8, 0
	075 JumpIfEqual {162}
	076 Move [X21+32], X22
	077 Move X0, [X24]
	078 Add X1, X31, 8
	079 Move [X31+8], W25
	080 Call 0x1C17E04
	081 Move X22, X0
	082 Compare X0, 0
	083 JumpIfEqual {90}
	084 Move X8, [X21]
	085 Move X0, X22
	086 Move X1, [X8+64]
	087 Call 0x1C17E00
	088 Compare X0, 0
	089 JumpIfEqual {164}
	090 Move W8, [X21+24]
	091 NotImplemented "Instruction CMP not yet implemented."
	092 Move [X21+40], X22
	093 Move X0, [X24]
	094 Add X1, X31, 4
	095 Move [X31+4], W23
	096 Call 0x1C17E04
	097 Move X22, X0
	098 Compare X0, 0
	099 JumpIfEqual {106}
	100 Move X8, [X21]
	101 Move X0, X22
	102 Move X1, [X8+64]
	103 Call 0x1C17E00
	104 Compare X0, 0
	105 JumpIfEqual {164}
	106 Move W8, [X21+24]
	107 NotImplemented "Instruction CMP not yet implemented."
	108 Move [X21+48], X22
	109 Compare X20, 0
	110 JumpIfEqual {163}
	111 Move X9, 0xB80000
	112 Move X10, 0xBBE000
	113 Move X8, [X20]
	114 Move X9, [X9+840]
	115 Move X10, [X10+856]
	116 Move X1, [X9]
	117 NotImplemented "Instruction LDRH not yet implemented."
	118 Move X22, [X10]
	119 Compare X9, 0
	120 JumpIfEqual {127}
	121 Move X10, [X8+176]
	122 Add X10, X10, 8
	123 NotImplemented "Instruction LDUR not yet implemented."
	124 NotImplemented "Instruction CMP not yet implemented."
	125 Subtract X9, X9, 1
	126 Add X10, X10, 16
	127 Move W2, 1
	128 Move X0, X20
	129 Call 0x1C5D788
	130 Move W9, [X10]
	131 Add W9, W9, 1
	132 Add X8, X8, W9
	133 Add X0, X8, 312
	134 Move X8, [X0]
	135 Move X4, [X0+8]
	136 Move W1, 3
	137 Move X0, X20
	138 Move X2, X22
	139 Move X3, X21
	140 NotImplemented "Instruction BLR not yet implemented."
	141 Move W8, [X19+120]
	142 Compare W8, 0
	143 JumpIfNotEqual {151}
	144 Move X0, X19
	145 Call Recorder.get_MicrophoneType, X0
	146 NotImplemented "Instruction CMP not yet implemented."
	147 Move W8, [X19+137]
	148 Compare W8, 0
	149 JumpIfEqual {152}
	150 Move [X19+220], W0
	151 Move W0, 1
	152 Move X20, [X31+64]
	153 Move X19, [X31+72]
	154 Move X22, [X31+48]
	155 Move X21, [X31+56]
	156 Move X24, [X31+32]
	157 Move X23, [X31+40]
	158 Move X30, [X31+16]
	159 Move X25, [X31+24]
	160 Add X31, X31, 80
	161 Return X0
	162 Call 0x1C17F28
	163 Call 0x1C17F20
	164 Call 0x1C17F44
	165 Move X1, X31
	166 Call 0x1C17DEC

Method: System.Boolean ResetLocalAudio()

Disassembly:
	0x03579B0C BL 0x1C16F20
	0x03579B10 BL 0x1C16F28
	0x03579B14 BL 0x1C16F44
	0x03579B18 MOV X1, X31
	0x03579B1C BL 0x1C16DEC
	0x03579B20 SUB X31, X31, 0x50
	0x03579B24 STP X30, X25, [X31 + 0x10]
	0x03579B28 STP X24, X23, [X31 + 0x20]
	0x03579B2C STP X22, X21, [X31 + 0x30]
	0x03579B30 STP X20, X19, [X31 + 0x40]
	0x03579B34 ADRP X21, 0xE66000
	0x03579B38 LDRB W8, [X21 + 0xE92]
	0x03579B3C MOV W20, W1
	0x03579B40 MOV X19, X0
	0x03579B44 TBNZ X8, 0x0, 0x3579BB0
	0x03579B48 ADRP X0, 0xB7A000
	0x03579B4C LDR X0, [X0 + 0x9C8]
	0x03579B50 BL 0x1C16CF4
	0x03579B54 ADRP X0, 0xB7A000
	0x03579B58 LDR X0, [X0 + 0xB58]
	0x03579B5C BL 0x1C16CF4
	0x03579B60 ADRP X0, 0xB7F000
	0x03579B64 LDR X0, [X0 + 0x348]
	0x03579B68 BL 0x1C16CF4
	0x03579B6C ADRP X0, 0xB7A000
	0x03579B70 LDR X0, [X0 + 0x9D0]
	0x03579B74 BL 0x1C16CF4
	0x03579B78 ADRP X0, 0xBBD000
	0x03579B7C LDR X0, [X0 + 0x3D8]
	0x03579B80 BL 0x1C16CF4
	0x03579B84 ADRP X0, 0xBBD000
	0x03579B88 LDR X0, [X0 + 0x3E0]
	0x03579B8C BL 0x1C16CF4
	0x03579B90 ADRP X0, 0xBBD000
	0x03579B94 LDR X0, [X0 + 0x3E8]
	0x03579B98 BL 0x1C16CF4
	0x03579B9C ADRP X0, 0xBBD000
	0x03579BA0 LDR X0, [X0 + 0x3F0]
	0x03579BA4 BL 0x1C16CF4
	0x03579BA8 MOVZ W8, 0x1
	0x03579BAC STRB W8, [X21 + 0xE92]
	0x03579BB0 LDR X8, [X19 + 0x20]
	0x03579BB4 CBZ X8, 0x357A074
	0x03579BB8 ADRP X9, 0xB7A000
	0x03579BBC LDR X9, [X9 + 0x9D0]
	0x03579BC0 ADRP X24, 0xB7A000
	0x03579BC4 LDR X21, [X8 + 0x18]
	0x03579BC8 MOVZ W1, 0x4
	0x03579BCC LDR X0, [X9]
	0x03579BD0 LDR X24, [X24 + 0xB58]
	0x03579BD4 AND W25, W20, 0x1
	0x03579BD8 BL 0x1C16D6C
	0x03579BDC MOV X22, X0
	0x03579BE0 LDR X0, [X24]
	0x03579BE4 ADD X1, X31, 0xC
	0x03579BE8 STRB W25, [X31 + 0xC]
	0x03579BEC BL 0x1C16E04
	0x03579BF0 CBZ X22, 0x357A074
	0x03579BF4 MOV X23, X0
	0x03579BF8 CBZ X0, 0x3579C10
	0x03579BFC LDR X8, [X22]
	0x03579C00 MOV X0, X23
	0x03579C04 LDR X1, [X8 + 0x40]
	0x03579C08 BL 0x1C16E00
	0x03579C0C CBZ X0, 0x357A078
	0x03579C10 LDR W8, [X22 + 0x18]
	0x03579C14 CBZ W8, 0x357A070
	0x03579C18 STR X23, [X22 + 0x20]
	0x03579C1C LDRB W8, [X19 + 0xAB]
	0x03579C20 LDR X0, [X24]
	0x03579C24 ADD X1, X31, 0x8
	0x03579C28 STRB W8, [X31 + 0x8]
	0x03579C2C BL 0x1C16E04
	0x03579C30 MOV X23, X0
	0x03579C34 CBZ X0, 0x3579C4C
	0x03579C38 LDR X8, [X22]
	0x03579C3C MOV X0, X23
	0x03579C40 LDR X1, [X8 + 0x40]
	0x03579C44 BL 0x1C16E00
	0x03579C48 CBZ X0, 0x357A078
	0x03579C4C LDR W8, [X22 + 0x18]
	0x03579C50 CMP W8, 0x1
	0x03579C54 B.LS 0x357A070
	0x03579C58 STR X23, [X22 + 0x28]
	0x03579C5C LDRB W8, [X19 + 0xAC]
	0x03579C60 LDR X0, [X24]
	0x03579C64 ADD X1, X31, 0x4
	0x03579C68 STRB W8, [X31 + 0x4]
	0x03579C6C BL 0x1C16E04
	0x03579C70 MOV X23, X0
	0x03579C74 CBZ X0, 0x3579C8C
	0x03579C78 LDR X8, [X22]
	0x03579C7C MOV X0, X23
	0x03579C80 LDR X1, [X8 + 0x40]
	0x03579C84 BL 0x1C16E00
	0x03579C88 CBZ X0, 0x357A078
	0x03579C8C LDR W8, [X22 + 0x18]
	0x03579C90 CMP W8, 0x2
	0x03579C94 B.LS 0x357A070
	0x03579C98 STR X23, [X22 + 0x30]
	0x03579C9C LDRB W8, [X19 + 0x89]
	0x03579CA0 LDR X0, [X24]
	0x03579CA4 ADD X1, X31, 0x0
	0x03579CA8 STRB W8, [X31]
	0x03579CAC BL 0x1C16E04
	0x03579CB0 MOV X23, X0
	0x03579CB4 CBZ X0, 0x3579CCC
	0x03579CB8 LDR X8, [X22]
	0x03579CBC MOV X0, X23
	0x03579CC0 LDR X1, [X8 + 0x40]
	0x03579CC4 BL 0x1C16E00
	0x03579CC8 CBZ X0, 0x357A078
	0x03579CCC LDR W8, [X22 + 0x18]
	0x03579CD0 CMP W8, 0x3
	0x03579CD4 B.LS 0x357A070
	0x03579CD8 STR X23, [X22 + 0x38]
	0x03579CDC CBZ X21, 0x357A074
	0x03579CE0 ADRP X24, 0xB7F000
	0x03579CE4 ADRP X10, 0xBBD000
	0x03579CE8 LDR X8, [X21]
	0x03579CEC LDR X24, [X24 + 0x348]
	0x03579CF0 LDR X10, [X10 + 0x3F0]
	0x03579CF4 LDRH W9, [X8 + 0x12E]
	0x03579CF8 LDR X1, [X24]
	0x03579CFC LDR X23, [X10]
	0x03579D00 CBZ X9, 0x3579D24
	0x03579D04 LDR X10, [X8 + 0xB0]
	0x03579D08 ADD X10, X10, 0x8
	0x03579D0C LDUR X11, [X10 - 0x8]
	0x03579D10 CMP X11, X1
	0x03579D14 B.EQ 0x3579D34
	0x03579D18 SUBS X9, X9, 0x1
	0x03579D1C ADD X10, X10, 0x10
	0x03579D20 B.NE 0x3579D0C
	0x03579D24 MOVZ W2, 0x1
	0x03579D28 MOV X0, X21
	0x03579D2C BL 0x1C5C788
	0x03579D30 B 0x3579D44
	0x03579D34 LDR W9, [X10]
	0x03579D38 ADD W9, W9, 0x1
	0x03579D3C ADD X8, X8, W9, 0x4, SXTW
	0x03579D40 ADD X0, X8, 0x138
	0x03579D44 LDP X8, X4, [X0]
	0x03579D48 MOVZ W1, 0x3
	0x03579D4C MOV X0, X21
	0x03579D50 MOV X2, X23
	0x03579D54 MOV X3, X22
	0x03579D58 BLR X8
	0x03579D5C LDRB W8, [X19 + 0xAB]
	0x03579D60 CMP W8, W25
	0x03579D64 B.EQ 0x357A058
	0x03579D68 TBZ X20, 0x0, 0x3579E38
	0x03579D6C LDRB W8, [X19 + 0xAC]
	0x03579D70 MOVZ W9, 0x1
	0x03579D74 STRB W9, [X19 + 0xAB]
	0x03579D78 CBZ W8, 0x357A058
	0x03579D7C LDRB W8, [X19 + 0x89]
	0x03579D80 CBZ W8, 0x357A058
	0x03579D84 LDR X9, [X19 + 0x20]
	0x03579D88 CBZ X9, 0x357A074
	0x03579D8C ADRP X8, 0xB7A000
	0x03579D90 LDR X8, [X8 + 0x9C8]
	0x03579D94 LDR X20, [X9 + 0x18]
	0x03579D98 LDR X21, [X8]
	0x03579D9C LDR X8, [X21 + 0x38]
	0x03579DA0 CBNZ X8, 0x3579DB0
	0x03579DA4 MOV X0, X21
	0x03579DA8 BL 0x1C5C6E0
	0x03579DAC LDR X8, [X21 + 0x38]
	0x03579DB0 LDR X0, [X8 + 0x10]
	0x03579DB4 LDRB W8, [X0 + 0x135]
	0x03579DB8 TBNZ X8, 0x0, 0x3579DC0
	0x03579DBC BL 0x1C5C684
	0x03579DC0 LDR W8, [X0 + 0xE0]
	0x03579DC4 CBNZ W8, 0x3579DCC
	0x03579DC8 BL 0x1C16DFC
	0x03579DCC LDR X8, [X21 + 0x38]
	0x03579DD0 LDR X0, [X8 + 0x10]
	0x03579DD4 LDRB W8, [X0 + 0x135]
	0x03579DD8 TBNZ X8, 0x0, 0x3579DE0
	0x03579DDC BL 0x1C5C684

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0xE67000
	008 Move W8, [X20+3722]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {31}
	014 Move X0, 0xB7B000
	015 Move X0, [X0+2504]
	016 Call 0x1C17CF4
	017 Move X0, 0xB80000
	018 Move X0, [X0+840]
	019 Call 0x1C17CF4
	020 Move X0, 0xBBE000
	021 Move X0, [X0+864]
	022 Call 0x1C17CF4
	023 Move X0, 0xBBE000
	024 Move X0, [X0+872]
	025 Call 0x1C17CF4
	026 Move X0, 0xBBE000
	027 Move X0, [X0+880]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X20+3722], W8
	031 Move X20, 0xB7B000
	032 Move X22, 0xB80000
	033 Move X0, [X19+72]
	034 Move X20, [X20+2504]
	035 Move X22, [X22+840]
	036 Compare X0, 0
	037 JumpIfEqual {95}
	038 Move X23, 0xBBE000
	039 Move X23, [X23+864]
	040 Move X1, [X23]
	041 Call 0x1C17E00
	042 Compare X0, 0
	043 JumpIfEqual {95}
	044 Move X9, [X19+32]
	045 Compare X9, 0
	046 JumpIfEqual {209}
	047 Move X21, [X20]
	048 Move X20, [X9+24]
	049 Move X8, [X21+56]
	050 Compare X8, 0
	051 JumpIfNotEqual {55}
	052 Move X0, X21
	053 Call 0x1C5D6E0
	054 Move X8, [X21+56]
	055 Move X0, [X8+16]
	056 Move W8, [X0+309]
	057 Move TEMP, X8
	058 And TEMP, TEMP, 1
	059 Compare TEMP, 1
	060 JumpIfEqual {62}
	061 Call 0x1C5D684
	062 Move W8, [X0+224]
	063 Compare W8, 0
	064 JumpIfNotEqual {66}
	065 Call 0x1C17DFC
	066 Move X8, [X21+56]
	067 Move X0, [X8+16]
	068 Move W8, [X0+309]
	069 Move TEMP, X8
	070 And TEMP, TEMP, 1
	071 Compare TEMP, 1
	072 JumpIfEqual {74}
	073 Call 0x1C5D684
	074 Compare X20, 0
	075 JumpIfEqual {209}
	076 Move X10, 0xBBE000
	077 Move X9, [X0+184]
	078 Move X8, [X20]
	079 Move X1, [X22]
	080 Move X10, [X10+880]
	081 Move X21, [X9]
	082 NotImplemented "Instruction LDRH not yet implemented."
	083 Move X22, [X10]
	084 Compare X9, 0
	085 JumpIfEqual {92}
	086 Move X10, [X8+176]
	087 Add X10, X10, 8
	088 NotImplemented "Instruction LDUR not yet implemented."
	089 NotImplemented "Instruction CMP not yet implemented."
	090 Subtract X9, X9, 1
	091 Add X10, X10, 16
	092 Move W2, 1
	093 Move X0, X20
	094 Call 0x1C5D788
	095 Move X9, [X19+32]
	096 Compare X9, 0
	097 JumpIfEqual {209}
	098 Move X20, [X20]
	099 Move X19, [X9+24]
	100 Move X8, [X20+56]
	101 Compare X8, 0
	102 JumpIfNotEqual {106}
	103 Move X0, X20
	104 Call 0x1C5D6E0
	105 Move X8, [X20+56]
	106 Move X0, [X8+16]
	107 Move W8, [X0+309]
	108 Move TEMP, X8
	109 And TEMP, TEMP, 1
	110 Compare TEMP, 1
	111 JumpIfEqual {113}
	112 Call 0x1C5D684
	113 Move W8, [X0+224]
	114 Compare W8, 0
	115 JumpIfNotEqual {117}
	116 Call 0x1C17DFC
	117 Move X8, [X20+56]
	118 Move X0, [X8+16]
	119 Move W8, [X0+309]
	120 Move TEMP, X8
	121 And TEMP, TEMP, 1
	122 Compare TEMP, 1
	123 JumpIfEqual {125}
	124 Call 0x1C5D684
	125 Compare X19, 0
	126 JumpIfEqual {209}
	127 Move X10, 0xBBE000
	128 Move X9, [X0+184]
	129 Move X8, [X19]
	130 Move X10, [X10+872]
	131 Move X1, [X22]
	132 Move X20, [X9]
	133 NotImplemented "Instruction LDRH not yet implemented."
	134 Move X21, [X10]
	135 Compare X9, 0
	136 JumpIfEqual {143}
	137 Move X10, [X8+176]
	138 Add X10, X10, 8
	139 NotImplemented "Instruction LDUR not yet implemented."
	140 NotImplemented "Instruction CMP not yet implemented."
	141 Subtract X9, X9, 1
	142 Add X10, X10, 16
	143 Move W2, 1
	144 Move X0, X19
	145 Call 0x1C5D788
	146 Move W9, [X10]
	147 Add W9, W9, 1
	148 Add X8, X8, W9
	149 Add X0, X8, 312
	150 Move X8, [X0]
	151 Move X4, [X0+8]
	152 Move W1, 4
	153 Move X0, X19
	154 Move X2, X21
	155 Move X3, X20
	156 NotImplemented "Instruction BLR not yet implemented."
	157 Move W0, W31
	158 Move W9, [X10]
	159 Add W9, W9, 1
	160 Add X8, X8, W9
	161 Add X0, X8, 312
	162 Move X8, [X0]
	163 Move X4, [X0+8]
	164 Move W1, 3
	165 Move X0, X20
	166 Move X2, X22
	167 Move X3, X21
	168 NotImplemented "Instruction BLR not yet implemented."
	169 Move X19, [X19+72]
	170 Move X1, [X23]
	171 Move X0, X19
	172 Call 0x1C17E00
	173 Compare X0, 0
	174 JumpIfEqual {209}
	175 Move X20, [X23]
	176 Move X0, X19
	177 Move X1, X20
	178 Call 0x1C17E00
	179 Move X8, [X0]
	180 Move X19, X0
	181 NotImplemented "Instruction LDRH not yet implemented."
	182 Compare X9, 0
	183 JumpIfEqual {190}
	184 Move X10, [X8+176]
	185 Add X10, X10, 8
	186 NotImplemented "Instruction LDUR not yet implemented."
	187 NotImplemented "Instruction CMP not yet implemented."
	188 Subtract X9, X9, 1
	189 Add X10, X10, 16
	190 Move X0, X19
	191 Move X1, X20
	192 Move W2, W31
	193 Call 0x1C5D788
	194 NotImplemented "Instruction LDRSW not yet implemented."
	195 Add X8, X8, X9
	196 Add X0, X8, 312
	197 Move X8, [X0]
	198 Move X1, [X0+8]
	199 Move X0, X19
	200 NotImplemented "Instruction BLR not yet implemented."
	201 Move W0, 1
	202 Move X20, [X31+32]
	203 Move X19, [X31+40]
	204 Move X22, [X31+16]
	205 Move X21, [X31+24]
	206 Move X30, [X31+48]
	207 Move X23, [X31+56]
	208 Return X0
	209 Call 0x1C17F20

Method: Photon.Voice.LocalVoice CreateLocalVoiceAudioAndSource()

Disassembly:
	0x03577B9C LDR X23, [X10]
	0x03577BA0 CBZ X9, 0x3577BC4
	0x03577BA4 LDR X10, [X8 + 0xB0]
	0x03577BA8 ADD X10, X10, 0x8
	0x03577BAC LDUR X11, [X10 - 0x8]
	0x03577BB0 CMP X11, X1
	0x03577BB4 B.EQ 0x3577BD4
	0x03577BB8 SUBS X9, X9, 0x1
	0x03577BBC ADD X10, X10, 0x10
	0x03577BC0 B.NE 0x3577BAC
	0x03577BC4 MOVZ W2, 0x1
	0x03577BC8 MOV X0, X21
	0x03577BCC BL 0x1C5C788
	0x03577BD0 B 0x3577BE4
	0x03577BD4 LDR W9, [X10]
	0x03577BD8 ADD W9, W9, 0x1
	0x03577BDC ADD X8, X8, W9, 0x4, SXTW
	0x03577BE0 ADD X0, X8, 0x138
	0x03577BE4 LDP X8, X4, [X0]
	0x03577BE8 MOVZ W1, 0x1
	0x03577BEC MOV X0, X21
	0x03577BF0 MOV X2, X23
	0x03577BF4 MOV X3, X22
	0x03577BF8 BLR X8
	0x03577BFC LDR X0, [X24]
	0x03577C00 LDR W8, [X0 + 0xE0]
	0x03577C04 CBNZ W8, 0x3577C10
	0x03577C08 BL 0x1C16DFC
	0x03577C0C LDR X0, [X24]
	0x03577C10 LDR X8, [X0 + 0xB8]
	0x03577C14 MOVZ W26, 0x1
	0x03577C18 LDR X9, [X8 + 0x20]
	0x03577C1C LDP V1, V0, [X8]
	0x03577C20 STR X9, [X31 + 0x100]
	0x03577C24 STP V1, V0, [X31 + 0xE0]
	0x03577C28 LDP V0, V1, [X31 + 0xE0]
	0x03577C2C LDR X8, [X31 + 0x100]
	0x03577C30 STP V0, V1, [X31 + 0x150]
	0x03577C34 STR X8, [X31 + 0x170]
	0x03577C38 LDR X8, [X19 + 0x20]
	0x03577C3C CBZ X8, 0x3578658
	0x03577C40 LDR X0, [X20]
	0x03577C44 LDR X21, [X8 + 0x18]
	0x03577C48 MOVZ W1, 0x1
	0x03577C4C BL 0x1C16D6C
	0x03577C50 MOV X22, X0
	0x03577C54 LDP V0, V1, [X31 + 0x150]
	0x03577C58 LDR X8, [X31 + 0x170]
	0x03577C5C LDR X0, [X24]
	0x03577C60 ADD X1, X31, 0x80
	0x03577C64 STP V0, V1, [X31 + 0x80]
	0x03577C68 STR X8, [X31 + 0xA0]
	0x03577C6C BL 0x1C16E04
	0x03577C70 CBZ X22, 0x3578658
	0x03577C74 MOV X23, X0
	0x03577C78 CBZ X0, 0x3577C90
	0x03577C7C LDR X8, [X22]
	0x03577C80 MOV X0, X23
	0x03577C84 LDR X1, [X8 + 0x40]
	0x03577C88 BL 0x1C16E00
	0x03577C8C CBZ X0, 0x3578660
	0x03577C90 LDR W8, [X22 + 0x18]
	0x03577C94 CBZ W8, 0x357865C
	0x03577C98 STR X23, [X22 + 0x20]
	0x03577C9C CBZ X21, 0x3578658
	0x03577CA0 ADRP X10, 0xBBF000
	0x03577CA4 LDR X8, [X21]
	0x03577CA8 LDR X10, [X10 + 0x320]
	0x03577CAC LDR X1, [X25]
	0x03577CB0 LDRH W9, [X8 + 0x12E]
	0x03577CB4 LDR X23, [X10]
	0x03577CB8 CBZ X9, 0x3577CDC
	0x03577CBC LDR X10, [X8 + 0xB0]
	0x03577CC0 ADD X10, X10, 0x8
	0x03577CC4 LDUR X11, [X10 - 0x8]
	0x03577CC8 CMP X11, X1
	0x03577CCC B.EQ 0x3577CEC
	0x03577CD0 SUBS X9, X9, 0x1
	0x03577CD4 ADD X10, X10, 0x10
	0x03577CD8 B.NE 0x3577CC4
	0x03577CDC MOVZ W2, 0x1
	0x03577CE0 MOV X0, X21
	0x03577CE4 BL 0x1C5C788
	0x03577CE8 B 0x3577CFC
	0x03577CEC LDR W9, [X10]
	0x03577CF0 ADD W9, W9, 0x1
	0x03577CF4 ADD X8, X8, W9, 0x4, SXTW
	0x03577CF8 ADD X0, X8, 0x138
	0x03577CFC LDP X8, X4, [X0]
	0x03577D00 MOVZ W1, 0x3
	0x03577D04 MOV X0, X21
	0x03577D08 MOV X2, X23
	0x03577D0C MOV X3, X22
	0x03577D10 BLR X8
	0x03577D14 LDR X0, [X29]
	0x03577D18 LDR W8, [X0 + 0xE0]
	0x03577D1C CBNZ W8, 0x3577D24
	0x03577D20 BL 0x1C16DFC
	0x03577D24 MOV X0, X31
	0x03577D28 BL 0x3C01AB0
	0x03577D2C CMP W0, 0xB
	0x03577D30 B.LE 0x3577DDC
	0x03577D34 CMP W0, 0x11
	0x03577D38 B.NE 0x3577E9C
	0x03577D3C LDR X9, [X19 + 0x20]
	0x03577D40 CBZ X9, 0x3578658
	0x03577D44 LDR X22, [X27]
	0x03577D48 LDR X21, [X9 + 0x18]
	0x03577D4C LDR X8, [X22 + 0x38]
	0x03577D50 CBNZ X8, 0x3577D60
	0x03577D54 MOV X0, X22
	0x03577D58 BL 0x1C5C6E0
	0x03577D5C LDR X8, [X22 + 0x38]
	0x03577D60 LDR X0, [X8 + 0x10]
	0x03577D64 LDRB W8, [X0 + 0x135]
	0x03577D68 TBNZ X8, 0x0, 0x3577D70
	0x03577D6C BL 0x1C5C684
	0x03577D70 LDR W8, [X0 + 0xE0]
	0x03577D74 CBNZ W8, 0x3577D7C
	0x03577D78 BL 0x1C16DFC
	0x03577D7C LDR X8, [X22 + 0x38]
	0x03577D80 LDR X0, [X8 + 0x10]
	0x03577D84 LDRB W8, [X0 + 0x135]
	0x03577D88 TBNZ X8, 0x0, 0x3577D90
	0x03577D8C BL 0x1C5C684
	0x03577D90 CBZ X21, 0x3578658
	0x03577D94 ADRP X10, 0xBBF000
	0x03577D98 LDR X9, [X0 + 0xB8]
	0x03577D9C LDR X8, [X21]
	0x03577DA0 LDR X1, [X25]
	0x03577DA4 LDR X10, [X10 + 0x348]
	0x03577DA8 LDR X22, [X9]
	0x03577DAC LDRH W9, [X8 + 0x12E]
	0x03577DB0 LDR X23, [X10]
	0x03577DB4 CBZ X9, 0x357815C
	0x03577DB8 LDR X10, [X8 + 0xB0]
	0x03577DBC ADD X10, X10, 0x8
	0x03577DC0 LDUR X11, [X10 - 0x8]
	0x03577DC4 CMP X11, X1
	0x03577DC8 B.EQ 0x357816C
	0x03577DCC SUBS X9, X9, 0x1
	0x03577DD0 ADD X10, X10, 0x10
	0x03577DD4 B.NE 0x3577DC0
	0x03577DD8 B 0x357815C
	0x03577DDC B.HI 0x3577FF0
	0x03577DE0 ADRP X9, 0xFFFFFFFFFD61F000
	0x03577DE4 MOV W8, W0
	0x03577DE8 ADD X9, X9, 0xDD6
	0x03577DEC ADR X10, 0x10
	0x03577DF0 LDRH W11, [X9, X8, LSL #1]
	0x03577DF4 ADD X10, X10, X11, 0x2, LSL
	0x03577DF8 BR X10
	0x03577DFC LDR X9, [X19 + 0x20]
	0x03577E00 CBZ X9, 0x3578658
	0x03577E04 LDR X22, [X27]
	0x03577E08 LDR X21, [X9 + 0x18]
	0x03577E0C LDR X8, [X22 + 0x38]
	0x03577E10 CBNZ X8, 0x3577E20
	0x03577E14 MOV X0, X22
	0x03577E18 BL 0x1C5C6E0
	0x03577E1C LDR X8, [X22 + 0x38]
	0x03577E20 LDR X0, [X8 + 0x10]
	0x03577E24 LDRB W8, [X0 + 0x135]
	0x03577E28 TBNZ X8, 0x0, 0x3577E30
	0x03577E2C BL 0x1C5C684
	0x03577E30 LDR W8, [X0 + 0xE0]
	0x03577E34 CBNZ W8, 0x3577E3C
	0x03577E38 BL 0x1C16DFC
	0x03577E3C LDR X8, [X22 + 0x38]
	0x03577E40 LDR X0, [X8 + 0x10]
	0x03577E44 LDRB W8, [X0 + 0x135]
	0x03577E48 TBNZ X8, 0x0, 0x3577E50
	0x03577E4C BL 0x1C5C684
	0x03577E50 CBZ X21, 0x3578658
	0x03577E54 ADRP X10, 0xBBF000
	0x03577E58 LDR X9, [X0 + 0xB8]
	0x03577E5C LDR X8, [X21]
	0x03577E60 LDR X1, [X25]
	0x03577E64 LDR X10, [X10 + 0x330]
	0x03577E68 LDR X22, [X9]
	0x03577E6C LDRH W9, [X8 + 0x12E]
	0x03577E70 LDR X23, [X10]
	0x03577E74 CBZ X9, 0x357815C
	0x03577E78 LDR X10, [X8 + 0xB0]
	0x03577E7C ADD X10, X10, 0x8
	0x03577E80 LDUR X11, [X10 - 0x8]
	0x03577E84 CMP X11, X1
	0x03577E88 B.EQ 0x357816C
	0x03577E8C SUBS X9, X9, 0x1
	0x03577E90 ADD X10, X10, 0x10
	0x03577E94 B.NE 0x3577E80
	0x03577E98 B 0x357815C
	0x03577E9C SUB W8, W0, 0x12
	0x03577EA0 CMP W8, 0x3
	0x03577EA4 B.CC 0x35780C0
	0x03577EA8 CMP W0, 0x20
	0x03577EAC B.NE 0x3577FF0
	0x03577EB0 LDR X9, [X19 + 0x20]
	0x03577EB4 CBZ X9, 0x3578658
	0x03577EB8 LDR X22, [X27]
	0x03577EBC LDR X21, [X9 + 0x18]
	0x03577EC0 LDR X8, [X22 + 0x38]
	0x03577EC4 CBNZ X8, 0x3577ED4
	0x03577EC8 MOV X0, X22
	0x03577ECC BL 0x1C5C6E0
	0x03577ED0 LDR X8, [X22 + 0x38]
	0x03577ED4 LDR X0, [X8 + 0x10]
	0x03577ED8 LDRB W8, [X0 + 0x135]
	0x03577EDC TBNZ X8, 0x0, 0x3577EE4
	0x03577EE0 BL 0x1C5C684
	0x03577EE4 LDR W8, [X0 + 0xE0]
	0x03577EE8 CBNZ W8, 0x3577EF0
	0x03577EEC BL 0x1C16DFC
	0x03577EF0 LDR X8, [X22 + 0x38]
	0x03577EF4 LDR X0, [X8 + 0x10]
	0x03577EF8 LDRB W8, [X0 + 0x135]
	0x03577EFC TBNZ X8, 0x0, 0x3577F04
	0x03577F00 BL 0x1C5C684
	0x03577F04 CBZ X21, 0x3578658
	0x03577F08 ADRP X10, 0xBBF000
	0x03577F0C LDR X9, [X0 + 0xB8]
	0x03577F10 LDR X8, [X21]
	0x03577F14 LDR X1, [X25]
	0x03577F18 LDR X10, [X10 + 0x338]
	0x03577F1C LDR X22, [X9]
	0x03577F20 LDRH W9, [X8 + 0x12E]
	0x03577F24 LDR X23, [X10]
	0x03577F28 CBZ X9, 0x357815C
	0x03577F2C LDR X10, [X8 + 0xB0]
	0x03577F30 ADD X10, X10, 0x8
	0x03577F34 LDUR X11, [X10 - 0x8]
	0x03577F38 CMP X11, X1
	0x03577F3C B.EQ 0x357816C
	0x03577F40 SUBS X9, X9, 0x1
	0x03577F44 ADD X10, X10, 0x10
	0x03577F48 B.NE 0x3577F34
	0x03577F4C B 0x357815C
	0x03577F50 LDR X9, [X19 + 0x20]
	0x03577F54 CBZ X9, 0x3578658
	0x03577F58 LDR X22, [X27]
	0x03577F5C LDR X21, [X9 + 0x18]
	0x03577F60 LDR X8, [X22 + 0x38]
	0x03577F64 CBNZ X8, 0x3577F74
	0x03577F68 MOV X0, X22
	0x03577F6C BL 0x1C5C6E0
	0x03577F70 LDR X8, [X22 + 0x38]
	0x03577F74 LDR X0, [X8 + 0x10]
	0x03577F78 LDRB W8, [X0 + 0x135]
	0x03577F7C TBNZ X8, 0x0, 0x3577F84
	0x03577F80 BL 0x1C5C684
	0x03577F84 LDR W8, [X0 + 0xE0]
	0x03577F88 CBNZ W8, 0x3577F90
	0x03577F8C BL 0x1C16DFC
	0x03577F90 LDR X8, [X22 + 0x38]
	0x03577F94 LDR X0, [X8 + 0x10]
	0x03577F98 LDRB W8, [X0 + 0x135]
	0x03577F9C TBNZ X8, 0x0, 0x3577FA4
	0x03577FA0 BL 0x1C5C684
	0x03577FA4 CBZ X21, 0x3578658
	0x03577FA8 ADRP X10, 0xBBF000
	0x03577FAC LDR X9, [X0 + 0xB8]
	0x03577FB0 LDR X8, [X21]
	0x03577FB4 LDR X1, [X25]
	0x03577FB8 LDR X10, [X10 + 0x2F0]
	0x03577FBC LDR X22, [X9]
	0x03577FC0 LDRH W9, [X8 + 0x12E]
	0x03577FC4 LDR X23, [X10]
	0x03577FC8 CBZ X9, 0x357815C
	0x03577FCC LDR X10, [X8 + 0xB0]
	0x03577FD0 ADD X10, X10, 0x8
	0x03577FD4 LDUR X11, [X10 - 0x8]
	0x03577FD8 CMP X11, X1
	0x03577FDC B.EQ 0x357816C
	0x03577FE0 SUBS X9, X9, 0x1
	0x03577FE4 ADD X10, X10, 0x10
	0x03577FE8 B.NE 0x3577FD4
	0x03577FEC B 0x357815C
	0x03577FF0 LDR X8, [X19 + 0x20]
	0x03577FF4 CBZ X8, 0x3578658
	0x03577FF8 LDR X0, [X20]
	0x03577FFC LDR X21, [X8 + 0x18]
	0x03578000 MOVZ W1, 0x1
	0x03578004 BL 0x1C16D6C
	0x03578008 LDR X8, [X29]
	0x0357800C MOV X22, X0
	0x03578010 LDR W9, [X8 + 0xE0]
	0x03578014 CBNZ W9, 0x3578020
	0x03578018 MOV X0, X8
	0x0357801C BL 0x1C16DFC
	0x03578020 MOV X0, X31
	0x03578024 BL 0x3C01AB0
	0x03578028 ADRP X8, 0xB84000
	0x0357802C LDR X8, [X8 + 0xA48]
	0x03578030 STR W0, [X31 + 0x80]
	0x03578034 ADD X1, X31, 0x80
	0x03578038 LDR X8, [X8]
	0x0357803C MOV X0, X8
	0x03578040 BL 0x1C16E04
	0x03578044 CBZ X22, 0x3578658
	0x03578048 MOV X23, X0
	0x0357804C CBZ X0, 0x3578064
	0x03578050 LDR X8, [X22]
	0x03578054 MOV X0, X23
	0x03578058 LDR X1, [X8 + 0x40]
	0x0357805C BL 0x1C16E00
	0x03578060 CBZ X0, 0x3578660
	0x03578064 LDR W8, [X22 + 0x18]
	0x03578068 CBZ W8, 0x357865C
	0x0357806C STR X23, [X22 + 0x20]
	0x03578070 CBZ X21, 0x3578658
	0x03578074 ADRP X10, 0xBBE000
	0x03578078 LDR X8, [X21]
	0x0357807C LDR X1, [X25]
	0x03578080 LDR X10, [X10 + 0x2E8]
	0x03578084 LDRH W9, [X8 + 0x12E]
	0x03578088 LDR X23, [X10]
	0x0357808C CBZ X9, 0x35780B0
	0x03578090 LDR X10, [X8 + 0xB0]
	0x03578094 ADD X10, X10, 0x8
	0x03578098 LDUR X11, [X10 - 0x8]
	0x0357809C CMP X11, X1
	0x035780A0 B.EQ 0x357863C
	0x035780A4 SUBS X9, X9, 0x1
	0x035780A8 ADD X10, X10, 0x10
	0x035780AC B.NE 0x3578098
	0x035780B0 MOVZ W2, 0x1
	0x035780B4 MOV X0, X21
	0x035780B8 BL 0x1C5C788
	0x035780BC B 0x357864C
	0x035780C0 LDR X9, [X19 + 0x20]
	0x035780C4 CBZ X9, 0x3578658
	0x035780C8 LDR X22, [X27]
	0x035780CC LDR X21, [X9 + 0x18]
	0x035780D0 LDR X8, [X22 + 0x38]
	0x035780D4 CBNZ X8, 0x35780E4
	0x035780D8 MOV X0, X22
	0x035780DC BL 0x1C5C6E0
	0x035780E0 LDR X8, [X22 + 0x38]
	0x035780E4 LDR X0, [X8 + 0x10]
	0x035780E8 LDRB W8, [X0 + 0x135]
	0x035780EC TBNZ X8, 0x0, 0x35780F4
	0x035780F0 BL 0x1C5C684
	0x035780F4 LDR W8, [X0 + 0xE0]
	0x035780F8 CBNZ W8, 0x3578100
	0x035780FC BL 0x1C16DFC
	0x03578100 LDR X8, [X22 + 0x38]
	0x03578104 LDR X0, [X8 + 0x10]
	0x03578108 LDRB W8, [X0 + 0x135]
	0x0357810C TBNZ X8, 0x0, 0x3578114
	0x03578110 BL 0x1C5C684
	0x03578114 CBZ X21, 0x3578658
	0x03578118 ADRP X10, 0xBBE000
	0x0357811C LDR X9, [X0 + 0xB8]
	0x03578120 LDR X8, [X21]
	0x03578124 LDR X1, [X25]
	0x03578128 LDR X10, [X10 + 0x2B0]
	0x0357812C LDR X22, [X9]
	0x03578130 LDRH W9, [X8 + 0x12E]
	0x03578134 LDR X23, [X10]
	0x03578138 CBZ X9, 0x357815C
	0x0357813C LDR X10, [X8 + 0xB0]
	0x03578140 ADD X10, X10, 0x8
	0x03578144 LDUR X11, [X10 - 0x8]
	0x03578148 CMP X11, X1
	0x0357814C B.EQ 0x357816C
	0x03578150 SUBS X9, X9, 0x1
	0x03578154 ADD X10, X10, 0x10
	0x03578158 B.NE 0x3578144
	0x0357815C MOVZ W2, 0x1
	0x03578160 MOV X0, X21
	0x03578164 BL 0x1C5C788
	0x03578168 B 0x357817C
	0x0357816C LDR W9, [X10]
	0x03578170 ADD W9, W9, 0x1
	0x03578174 ADD X8, X8, W9, 0x4, SXTW
	0x03578178 ADD X0, X8, 0x138
	0x0357817C LDP X8, X4, [X0]
	0x03578180 MOVZ W1, 0x3
	0x03578184 MOV X0, X21
	0x03578188 MOV X2, X23
	0x0357818C MOV X3, X22
	0x03578190 BLR X8
	0x03578194 MOV X21, X31
	0x03578198 LDR X8, [X19 + 0x20]
	0x0357819C CBZ X8, 0x3578658
	0x035781A0 LDP V0, V1, [X31 + 0x150]
	0x035781A4 LDR X9, [X31 + 0x170]
	0x035781A8 LDR X0, [X8 + 0x18]
	0x035781AC LDR W2, [X31 + 0xC]
	0x035781B0 ADD X1, X31, 0xB0
	0x035781B4 MOVZ W3, 0x1
	0x035781B8 MOV X4, X21
	0x035781BC MOV X5, X31
	0x035781C0 STP V0, V1, [X31 + 0xB0]
	0x035781C4 STR X9, [X31 + 0xD0]
	0x035781C8 BL 0x3556810
	0x035781CC STR X0, [X19 + 0x48]
	0x035781D0 CBZ X0, 0x357835C
	0x035781D4 LDR X8, [X0]
	0x035781D8 LDR X1, [X28]
	0x035781DC MOV X21, X0
	0x035781E0 LDRH W9, [X8 + 0x12E]
	0x035781E4 CBZ X9, 0x3578208
	0x035781E8 LDR X10, [X8 + 0xB0]
	0x035781EC ADD X10, X10, 0x8
	0x035781F0 LDUR X11, [X10 - 0x8]
	0x035781F4 CMP X11, X1
	0x035781F8 B.EQ 0x3578218
	0x035781FC SUBS X9, X9, 0x1
	0x03578200 ADD X10, X10, 0x10
	0x03578204 B.NE 0x35781F0
	0x03578208 MOVZ W2, 0x2
	0x0357820C MOV X0, X21
	0x03578210 BL 0x1C5C788
	0x03578214 B 0x3578228
	0x03578218 LDR W9, [X10]
	0x0357821C ADD W9, W9, 0x2
	0x03578220 ADD X8, X8, W9, 0x4, SXTW
	0x03578224 ADD X0, X8, 0x138
	0x03578228 LDP X8, X1, [X0]
	0x0357822C MOV X0, X21
	0x03578230 BLR X8
	0x03578234 CBZ X0, 0x3577410
	0x03578238 LDR X8, [X19 + 0x20]
	0x0357823C CBZ X8, 0x3578658
	0x03578240 LDR X0, [X20]
	0x03578244 LDR X21, [X8 + 0x18]
	0x03578248 MOVZ W1, 0x1
	0x0357824C BL 0x1C16D6C
	0x03578250 LDR X23, [X19 + 0x48]
	0x03578254 CBZ X23, 0x3578658
	0x03578258 LDR X8, [X23]
	0x0357825C LDR X1, [X28]
	0x03578260 MOV X22, X0
	0x03578264 LDRH W9, [X8 + 0x12E]
	0x03578268 CBZ X9, 0x357828C
	0x0357826C LDR X10, [X8 + 0xB0]
	0x03578270 ADD X10, X10, 0x8
	0x03578274 LDUR X11, [X10 - 0x8]
	0x03578278 CMP X11, X1
	0x0357827C B.EQ 0x357829C
	0x03578280 SUBS X9, X9, 0x1
	0x03578284 ADD X10, X10, 0x10
	0x03578288 B.NE 0x3578274
	0x0357828C MOVZ W2, 0x2
	0x03578290 MOV X0, X23
	0x03578294 BL 0x1C5C788
	0x03578298 B 0x35782AC
	0x0357829C LDR W9, [X10]
	0x035782A0 ADD W9, W9, 0x2
	0x035782A4 ADD X8, X8, W9, 0x4, SXTW
	0x035782A8 ADD X0, X8, 0x138
	0x035782AC LDP X8, X1, [X0]
	0x035782B0 MOV X0, X23
	0x035782B4 BLR X8
	0x035782B8 CBZ X22, 0x3578658
	0x035782BC MOV X23, X0
	0x035782C0 CBZ X0, 0x35782D8
	0x035782C4 LDR X8, [X22]
	0x035782C8 MOV X0, X23
	0x035782CC LDR X1, [X8 + 0x40]
	0x035782D0 BL 0x1C16E00
	0x035782D4 CBZ X0, 0x3578660
	0x035782D8 LDR W8, [X22 + 0x18]
	0x035782DC CBZ W8, 0x357865C
	0x035782E0 STR X23, [X22 + 0x20]
	0x035782E4 CBZ X21, 0x3578658
	0x035782E8 ADRP X10, 0xBBE000
	0x035782EC LDR X8, [X21]
	0x035782F0 LDR X10, [X10 + 0x2E0]
	0x035782F4 LDR X1, [X25]
	0x035782F8 LDRH W9, [X8 + 0x12E]
	0x035782FC LDR X23, [X10]
	0x03578300 CBZ X9, 0x3578324
	0x03578304 LDR X10, [X8 + 0xB0]
	0x03578308 ADD X10, X10, 0x8
	0x0357830C LDUR X11, [X10 - 0x8]
	0x03578310 CMP X11, X1
	0x03578314 B.EQ 0x3578334
	0x03578318 SUBS X9, X9, 0x1
	0x0357831C ADD X10, X10, 0x10
	0x03578320 B.NE 0x357830C
	0x03578324 MOVZ W2, 0x1
	0x03578328 MOV X0, X21
	0x0357832C BL 0x1C5C788
	0x03578330 B 0x3578344
	0x03578334 LDR W9, [X10]
	0x03578338 ADD W9, W9, 0x1
	0x0357833C ADD X8, X8, W9, 0x4, SXTW
	0x03578340 ADD X0, X8, 0x138
	0x03578344 LDP X8, X4, [X0]
	0x03578348 MOVZ W1, 0x1
	0x0357834C MOV X0, X21
	0x03578350 MOV X2, X23
	0x03578354 MOV X3, X22
	0x03578358 BLR X8
	0x0357835C LDRB W8, [X19 + 0xAE]
	0x03578360 CMP W8, 0x0
	0x03578364 CSET W8, EQ
	0x03578368 ORR W8, W26, W8, 0x0
	0x0357836C TBNZ X8, 0x0, 0x3577410
	0x03578370 LDR X9, [X19 + 0x20]
	0x03578374 CBZ X9, 0x3578658
	0x03578378 LDR X22, [X27]
	0x0357837C LDR X21, [X9 + 0x18]
	0x03578380 LDR X8, [X22 + 0x38]
	0x03578384 CBNZ X8, 0x3578394
	0x03578388 MOV X0, X22
	0x0357838C BL 0x1C5C6E0
	0x03578390 LDR X8, [X22 + 0x38]
	0x03578394 LDR X0, [X8 + 0x10]
	0x03578398 LDRB W8, [X0 + 0x135]
	0x0357839C TBNZ X8, 0x0, 0x35783A4
	0x035783A0 BL 0x1C5C684
	0x035783A4 LDR W8, [X0 + 0xE0]
	0x035783A8 CBNZ W8, 0x35783B0
	0x035783AC BL 0x1C16DFC
	0x035783B0 LDR X8, [X22 + 0x38]
	0x035783B4 LDR X0, [X8 + 0x10]
	0x035783B8 LDRB W8, [X0 + 0x135]
	0x035783BC TBNZ X8, 0x0, 0x35783C4
	0x035783C0 BL 0x1C5C684
	0x035783C4 CBZ X21, 0x3578658
	0x035783C8 ADRP X10, 0xBBE000
	0x035783CC LDR X9, [X0 + 0xB8]
	0x035783D0 LDR X8, [X21]
	0x035783D4 LDR X10, [X10 + 0x2D8]
	0x035783D8 LDR X1, [X25]
	0x035783DC LDR X22, [X9]
	0x035783E0 LDRH W9, [X8 + 0x12E]
	0x035783E4 LDR X23, [X10]
	0x035783E8 CBZ X9, 0x357840C
	0x035783EC LDR X10, [X8 + 0xB0]
	0x035783F0 ADD X10, X10, 0x8
	0x035783F4 LDUR X11, [X10 - 0x8]
	0x035783F8 CMP X11, X1
	0x035783FC B.EQ 0x357841C
	0x03578400 SUBS X9, X9, 0x1
	0x03578404 ADD X10, X10, 0x10
	0x03578408 B.NE 0x35783F4
	0x0357840C MOVZ W2, 0x1
	0x03578410 MOV X0, X21
	0x03578414 BL 0x1C5C788
	0x03578418 B 0x357842C
	0x0357841C LDR W9, [X10]
	0x03578420 ADD W9, W9, 0x1
	0x03578424 ADD X8, X8, W9, 0x4, SXTW
	0x03578428 ADD X0, X8, 0x138
	0x0357842C LDP X8, X4, [X0]
	0x03578430 MOVZ W1, 0x1
	0x03578434 MOV X0, X21
	0x03578438 MOV X2, X23
	0x0357843C MOV X3, X22
	0x03578440 MOVZ W26, 0x1
	0x03578444 BLR X8
	0x03578448 TBZ X26, 0x0, 0x3576E6C
	0x0357844C B 0x357779C
	0x03578450 STR W26, [X31 + 0x8]
	0x03578454 ADRP X24, 0xBBE000
	0x03578458 LDUR V0, [X19 + 0x98]
	0x0357845C LDR X24, [X24 + 0x268]
	0x03578460 ADD X1, X31, 0x80
	0x03578464 MOV X26, X29
	0x03578468 MOV X29, X28
	0x0357846C LDR X0, [X24]
	0x03578470 MOV X28, X27
	0x03578474 STR V0, [X31 + 0x8]
	0x03578478 BL 0x1C16E04
	0x0357847C LDR X8, [X19 + 0x20]
	0x03578480 CBZ X8, 0x3578658
	0x03578484 MOV X21, X0
	0x03578488 LDR X0, [X20]
	0x0357848C LDR X22, [X8 + 0x18]
	0x03578490 MOVZ W1, 0x1
	0x03578494 ADD X27, X19, 0x98
	0x03578498 BL 0x1C16D6C
	0x0357849C MOV X23, X0
	0x035784A0 LDR V0, [X27]
	0x035784A4 LDR X0, [X24]
	0x035784A8 ADD X1, X31, 0x60
	0x035784AC STR V0, [X31 + 0x6]
	0x035784B0 BL 0x1C16E04
	0x035784B4 CBZ X23, 0x3578658
	0x035784B8 MOV X24, X0
	0x035784BC CBZ X0, 0x35784D4
	0x035784C0 LDR X8, [X23]
	0x035784C4 MOV X0, X24
	0x035784C8 LDR X1, [X8 + 0x40]
	0x035784CC BL 0x1C16E00
	0x035784D0 CBZ X0, 0x3578660
	0x035784D4 LDR W8, [X23 + 0x18]
	0x035784D8 CBZ W8, 0x357865C
	0x035784DC STR X24, [X23 + 0x20]
	0x035784E0 CBZ X22, 0x3578658
	0x035784E4 ADRP X10, 0xBBE000
	0x035784E8 LDR X8, [X22]
	0x035784EC LDR X1, [X25]
	0x035784F0 LDR X10, [X10 + 0x310]
	0x035784F4 MOV X27, X28
	0x035784F8 MOV X28, X29
	0x035784FC LDRH W9, [X8 + 0x12E]
	0x03578500 LDR X24, [X10]
	0x03578504 MOV X29, X26
	0x03578508 LDR W26, [X31 + 0x8]
	0x0357850C CBZ X9, 0x35785F8
	0x03578510 LDR X10, [X8 + 0xB0]
	0x03578514 ADD X10, X10, 0x8
	0x03578518 LDUR X11, [X10 - 0x8]
	0x0357851C CMP X11, X1
	0x03578520 B.EQ 0x3578608
	0x03578524 SUBS X9, X9, 0x1
	0x03578528 ADD X10, X10, 0x10
	0x0357852C B.NE 0x3578518
	0x03578530 B 0x35785F8
	0x03578534 ADRP X10, 0xBBD000
	0x03578538 LDRH W8, [X19 + 0xA8]
	0x0357853C LDRB W9, [X19 + 0xAA]
	0x03578540 LDR X10, [X10 + 0x448]
	0x03578544 ADD X1, X31, 0x80
	0x03578548 STRH W8, [X31 + 0x80]
	0x0357854C STRB W9, [X31 + 0x82]
	0x03578550 LDR X0, [X10]
	0x03578554 BL 0x1C16E04
	0x03578558 LDR X9, [X19 + 0x20]
	0x0357855C CBZ X9, 0x3578658
	0x03578560 LDR X23, [X27]
	0x03578564 LDR X22, [X9 + 0x18]
	0x03578568 MOV X21, X0
	0x0357856C LDR X8, [X23 + 0x38]
	0x03578570 CBNZ X8, 0x3578580
	0x03578574 MOV X0, X23
	0x03578578 BL 0x1C5C6E0
	0x0357857C LDR X8, [X23 + 0x38]
	0x03578580 LDR X0, [X8 + 0x10]
	0x03578584 LDRB W8, [X0 + 0x135]
	0x03578588 TBNZ X8, 0x0, 0x3578590
	0x0357858C BL 0x1C5C684
	0x03578590 LDR W8, [X0 + 0xE0]
	0x03578594 CBNZ W8, 0x357859C
	0x03578598 BL 0x1C16DFC
	0x0357859C LDR X8, [X23 + 0x38]
	0x035785A0 LDR X0, [X8 + 0x10]
	0x035785A4 LDRB W8, [X0 + 0x135]
	0x035785A8 TBNZ X8, 0x0, 0x35785B0
	0x035785AC BL 0x1C5C684
	0x035785B0 CBZ X22, 0x3578658
	0x035785B4 ADRP X10, 0xBBE000
	0x035785B8 LDR X9, [X0 + 0xB8]
	0x035785BC LDR X8, [X22]
	0x035785C0 LDR X1, [X25]
	0x035785C4 LDR X10, [X10 + 0x340]
	0x035785C8 LDR X23, [X9]
	0x035785CC LDRH W9, [X8 + 0x12E]
	0x035785D0 LDR X24, [X10]
	0x035785D4 CBZ X9, 0x35785F8
	0x035785D8 LDR X10, [X8 + 0xB0]
	0x035785DC ADD X10, X10, 0x8
	0x035785E0 LDUR X11, [X10 - 0x8]
	0x035785E4 CMP X11, X1
	0x035785E8 B.EQ 0x3578608
	0x035785EC SUBS X9, X9, 0x1
	0x035785F0 ADD X10, X10, 0x10
	0x035785F4 B.NE 0x35785E0
	0x035785F8 MOVZ W2, 0x1
	0x035785FC MOV X0, X22
	0x03578600 BL 0x1C5C788
	0x03578604 B 0x3578618
	0x03578608 LDR W9, [X10]
	0x0357860C ADD W9, W9, 0x1
	0x03578610 ADD X8, X8, W9, 0x4, SXTW
	0x03578614 ADD X0, X8, 0x138
	0x03578618 LDP X8, X4, [X0]
	0x0357861C MOVZ W1, 0x3
	0x03578620 MOV X0, X22
	0x03578624 MOV X2, X24
	0x03578628 MOV X3, X23
	0x0357862C BLR X8
	0x03578630 ADRP X24, 0xBA3000
	0x03578634 LDR X24, [X24 + 0x5F8]
	0x03578638 B 0x3578198
	0x0357863C LDR W9, [X10]
	0x03578640 ADD W9, W9, 0x1
	0x03578644 ADD X8, X8, W9, 0x4, SXTW
	0x03578648 ADD X0, X8, 0x138
	0x0357864C LDP X8, X4, [X0]
	0x03578650 MOVZ W1, 0x1
	0x03578654 B 0x3578184
	0x03578658 BL 0x1C16F20
	0x0357865C BL 0x1C16F28
	0x03578660 BL 0x1C16F44
	0x03578664 MOV X1, X31
	0x03578668 BL 0x1C16DEC
	0x0357866C MOV X3, X2
	0x03578670 UBFM X2, X1, 0x20, 0x3F
	0x03578674 B 0x3578678
	0x03578678 SUB X31, X31, 0x50
	0x0357867C STR X30, [X31 + 0x10]
	0x03578680 STP X24, X23, [X31 + 0x20]
	0x03578684 STP X22, X21, [X31 + 0x30]
	0x03578688 STP X20, X19, [X31 + 0x40]
	0x0357868C ADRP X23, 0xE67000
	0x03578690 LDRB W8, [X23 + 0xE88]
	0x03578694 MOV X20, X3
	0x03578698 MOV W21, W2
	0x0357869C MOV W22, W1
	0x035786A0 MOV X19, X0
	0x035786A4 TBNZ X8, 0x0, 0x35786E0
	0x035786A8 ADRP X0, 0xBBE000
	0x035786AC LDR X0, [X0 + 0x268]
	0x035786B0 BL 0x1C16CF4
	0x035786B4 ADRP X0, 0xB80000
	0x035786B8 LDR X0, [X0 + 0x348]
	0x035786BC BL 0x1C16CF4
	0x035786C0 ADRP X0, 0xB7B000
	0x035786C4 LDR X0, [X0 + 0x9D0]
	0x035786C8 BL 0x1C16CF4
	0x035786CC ADRP X0, 0xBBE000
	0x035786D0 LDR X0, [X0 + 0x350]
	0x035786D4 BL 0x1C16CF4
	0x035786D8 MOVZ W8, 0x1
	0x035786DC STRB W8, [X23 + 0xE88]
	0x035786E0 CBZ X20, 0x3578724
	0x035786E4 LDR X9, [X20 + 0x18]
	0x035786E8 CMP W9, 0x1
	0x035786EC B.LT 0x3578724
	0x035786F0 AND X9, X9, 0x0
	0x035786F4 MOV X8, X31
	0x035786F8 MOV W24, W31
	0x035786FC SXTW X10, W9
	0x03578700 ADD X11, X20, 0x20
	0x03578704 CMP X8, X9
	0x03578708 B.CS 0x3578898
	0x0357870C LDR W12, [X11, X8, LSL #2]
	0x03578710 ADD X8, X8, 0x1
	0x03578714 CMP X8, X10
	0x03578718 ORR W24, W12, W24, 0x0
	0x0357871C B.LT 0x3578704
	0x03578720 B 0x3578728
	0x03578724 MOV W24, W31
	0x03578728 MOV X23, X19
	0x0357872C LDR W8, [X23 + 0x98]!
	0x03578730 CMP W8, W22
	0x03578734 B.NE 0x3578760
	0x03578738 LDR W8, [X19 + 0x9C]
	0x0357873C CMP W8, W21
	0x03578740 B.NE 0x3578760
	0x03578744 MOV X0, X23
	0x03578748 MOV X1, X31
	0x0357874C BL 0x3570A00
	0x03578750 CMP W0, W24
	0x03578754 B.NE 0x3578760
	0x03578758 MOV W0, W31
	0x0357875C B 0x3578880
	0x03578760 LDR X8, [X19 + 0x20]
	0x03578764 STP W22, W21, [X19 + 0x98]
	0x03578768 STR X20, [X19 + 0xA0]
	0x0357876C CBZ X8, 0x357889C
	0x03578770 ADRP X9, 0xB7B000
	0x03578774 LDR X9, [X9 + 0x9D0]
	0x03578778 ADRP X22, 0xBBE000
	0x0357877C LDR X20, [X8 + 0x18]
	0x03578780 MOVZ W1, 0x1
	0x03578784 LDR X0, [X9]
	0x03578788 LDR X22, [X22 + 0x268]
	0x0357878C BL 0x1C16D6C
	0x03578790 MOV X21, X0
	0x03578794 LDR V0, [X23]
	0x03578798 LDR X0, [X22]
	0x0357879C ADD X1, X31, 0x0
	0x035787A0 STR V0, [X31]
	0x035787A4 BL 0x1C16E04
	0x035787A8 CBZ X21, 0x357889C
	0x035787AC MOV X22, X0
	0x035787B0 CBZ X0, 0x35787C8
	0x035787B4 LDR X8, [X21]
	0x035787B8 MOV X0, X22
	0x035787BC LDR X1, [X8 + 0x40]
	0x035787C0 BL 0x1C16E00
	0x035787C4 CBZ X0, 0x35788A0
	0x035787C8 LDR W8, [X21 + 0x18]
	0x035787CC CBZ W8, 0x3578898
	0x035787D0 STR X22, [X21 + 0x20]
	0x035787D4 CBZ X20, 0x357889C
	0x035787D8 ADRP X9, 0xB80000
	0x035787DC ADRP X10, 0xBBE000
	0x035787E0 LDR X8, [X20]
	0x035787E4 LDR X9, [X9 + 0x348]
	0x035787E8 LDR X10, [X10 + 0x350]
	0x035787EC LDR X1, [X9]
	0x035787F0 LDRH W9, [X8 + 0x12E]
	0x035787F4 LDR X22, [X10]
	0x035787F8 CBZ X9, 0x357881C
	0x035787FC LDR X10, [X8 + 0xB0]
	0x03578800 ADD X10, X10, 0x8
	0x03578804 LDUR X11, [X10 - 0x8]
	0x03578808 CMP X11, X1
	0x0357880C B.EQ 0x357882C
	0x03578810 SUBS X9, X9, 0x1
	0x03578814 ADD X10, X10, 0x10
	0x03578818 B.NE 0x3578804
	0x0357881C MOVZ W2, 0x1
	0x03578820 MOV X0, X20
	0x03578824 BL 0x1C5C788
	0x03578828 B 0x357883C
	0x0357882C LDR W9, [X10]
	0x03578830 ADD W9, W9, 0x1
	0x03578834 ADD X8, X8, W9, 0x4, SXTW
	0x03578838 ADD X0, X8, 0x138
	0x0357883C LDP X8, X4, [X0]
	0x03578840 MOVZ W1, 0x3
	0x03578844 MOV X0, X20
	0x03578848 MOV X2, X22
	0x0357884C MOV X3, X21
	0x03578850 BLR X8
	0x03578854 LDR W8, [X19 + 0x78]
	0x03578858 CBNZ W8, 0x357887C
	0x0357885C MOV X0, X19
	0x03578860 BL 0x3574F04
	0x03578864 CMP W0, 0x1
	0x03578868 B.NE 0x357887C
	0x0357886C LDRB W8, [X19 + 0x89]
	0x03578870 CBZ W8, 0x3578880
	0x03578874 STR W0, [X19 + 0xDC]
	0x03578878 B 0x3578880
	0x0357887C MOVZ W0, 0x1
	0x03578880 LDP X20, X19, [X31 + 0x40]
	0x03578884 LDP X22, X21, [X31 + 0x30]
	0x03578888 LDP X24, X23, [X31 + 0x20]
	0x0357888C LDR X30, [X31 + 0x10]
	0x03578890 ADD X31, X31, 0x50
	0x03578894 RET
	0x03578898 BL 0x1C16F28
	0x0357889C BL 0x1C16F20
	0x035788A0 BL 0x1C16F44
	0x035788A4 MOV X1, X31
	0x035788A8 BL 0x1C16DEC
	0x035788AC SUB X31, X31, 0x50
	0x035788B0 STP X30, X25, [X31 + 0x10]
	0x035788B4 STP X24, X23, [X31 + 0x20]
	0x035788B8 STP X22, X21, [X31 + 0x30]
	0x035788BC STP X20, X19, [X31 + 0x40]
	0x035788C0 ADRP X23, 0xE67000
	0x035788C4 LDRB W8, [X23 + 0xE89]
	0x035788C8 MOV W20, W3
	0x035788CC MOV W21, W2
	0x035788D0 MOV X19, X0
	0x035788D4 AND W22, W1, 0x1
	0x035788D8 TBNZ X8, 0x0, 0x3578914
	0x035788DC ADRP X0, 0xB7B000
	0x035788E0 LDR X0, [X0 + 0xB58]
	0x035788E4 BL 0x1C16CF4
	0x035788E8 ADRP X0, 0xB80000
	0x035788EC LDR X0, [X0 + 0x348]
	0x035788F0 BL 0x1C16CF4
	0x035788F4 ADRP X0, 0xB7B000
	0x035788F8 LDR X0, [X0 + 0x9D0]
	0x035788FC BL 0x1C16CF4
	0x03578900 ADRP X0, 0xBBE000
	0x03578904 LDR X0, [X0 + 0x358]
	0x03578908 BL 0x1C16CF4
	0x0357890C MOVZ W8, 0x1
	0x03578910 STRB W8, [X23 + 0xE89]
	0x03578914 LDRB W8, [X19 + 0xA8]
	0x03578918 AND W25, W21, 0x1
	0x0357891C AND W23, W20, 0x1
	0x03578920 CMP W8, W22
	0x03578924 B.NE 0x3578948
	0x03578928 LDRB W8, [X19 + 0xA9]
	0x0357892C CMP W8, W25
	0x03578930 B.NE 0x3578948
	0x03578934 LDRB W8, [X19 + 0xAA]
	0x03578938 CMP W8, W23
	0x0357893C B.NE 0x3578948
	0x03578940 MOV W0, W31
	0x03578944 B 0x3578AE0
	0x03578948 LDR X8, [X19 + 0x20]
	0x0357894C STRB W22, [X19 + 0xA8]
	0x03578950 STRB W25, [X19 + 0xA9]
	0x03578954 STRB W23, [X19 + 0xAA]
	0x03578958 CBZ X8, 0x3578AFC
	0x0357895C ADRP X9, 0xB7B000
	0x03578960 LDR X9, [X9 + 0x9D0]
	0x03578964 ADRP X24, 0xB7B000
	0x03578968 LDR X20, [X8 + 0x18]
	0x0357896C MOVZ W1, 0x3
	0x03578970 LDR X0, [X9]
	0x03578974 LDR X24, [X24 + 0xB58]
	0x03578978 BL 0x1C16D6C
	0x0357897C MOV X21, X0
	0x03578980 LDR X0, [X24]
	0x03578984 ADD X1, X31, 0xC
	0x03578988 STRB W22, [X31 + 0xC]
	0x0357898C BL 0x1C16E04
	0x03578990 CBZ X21, 0x3578AFC
	0x03578994 MOV X22, X0
	0x03578998 CBZ X0, 0x35789B0
	0x0357899C LDR X8, [X21]
	0x035789A0 MOV X0, X22
	0x035789A4 LDR X1, [X8 + 0x40]
	0x035789A8 BL 0x1C16E00
	0x035789AC CBZ X0, 0x3578B00
	0x035789B0 LDR W8, [X21 + 0x18]
	0x035789B4 CBZ W8, 0x3578AF8
	0x035789B8 STR X22, [X21 + 0x20]
	0x035789BC LDR X0, [X24]
	0x035789C0 ADD X1, X31, 0x8
	0x035789C4 STRB W25, [X31 + 0x8]
	0x035789C8 BL 0x1C16E04
	0x035789CC MOV X22, X0
	0x035789D0 CBZ X0, 0x35789E8
	0x035789D4 LDR X8, [X21]
	0x035789D8 MOV X0, X22
	0x035789DC LDR X1, [X8 + 0x40]
	0x035789E0 BL 0x1C16E00
	0x035789E4 CBZ X0, 0x3578B00
	0x035789E8 LDR W8, [X21 + 0x18]
	0x035789EC CMP W8, 0x1
	0x035789F0 B.LS 0x3578AF8
	0x035789F4 STR X22, [X21 + 0x28]
	0x035789F8 LDR X0, [X24]
	0x035789FC ADD X1, X31, 0x4
	0x03578A00 STRB W23, [X31 + 0x4]
	0x03578A04 BL 0x1C16E04
	0x03578A08 MOV X22, X0
	0x03578A0C CBZ X0, 0x3578A24
	0x03578A10 LDR X8, [X21]
	0x03578A14 MOV X0, X22
	0x03578A18 LDR X1, [X8 + 0x40]
	0x03578A1C BL 0x1C16E00
	0x03578A20 CBZ X0, 0x3578B00
	0x03578A24 LDR W8, [X21 + 0x18]
	0x03578A28 CMP W8, 0x2
	0x03578A2C B.LS 0x3578AF8
	0x03578A30 STR X22, [X21 + 0x30]
	0x03578A34 CBZ X20, 0x3578AFC
	0x03578A38 ADRP X9, 0xB80000
	0x03578A3C ADRP X10, 0xBBE000
	0x03578A40 LDR X8, [X20]
	0x03578A44 LDR X9, [X9 + 0x348]
	0x03578A48 LDR X10, [X10 + 0x358]
	0x03578A4C LDR X1, [X9]
	0x03578A50 LDRH W9, [X8 + 0x12E]
	0x03578A54 LDR X22, [X10]
	0x03578A58 CBZ X9, 0x3578A7C
	0x03578A5C LDR X10, [X8 + 0xB0]
	0x03578A60 ADD X10, X10, 0x8
	0x03578A64 LDUR X11, [X10 - 0x8]
	0x03578A68 CMP X11, X1
	0x03578A6C B.EQ 0x3578A8C
	0x03578A70 SUBS X9, X9, 0x1
	0x03578A74 ADD X10, X10, 0x10
	0x03578A78 B.NE 0x3578A64
	0x03578A7C MOVZ W2, 0x1
	0x03578A80 MOV X0, X20
	0x03578A84 BL 0x1C5C788
	0x03578A88 B 0x3578A9C
	0x03578A8C LDR W9, [X10]
	0x03578A90 ADD W9, W9, 0x1
	0x03578A94 ADD X8, X8, W9, 0x4, SXTW
	0x03578A98 ADD X0, X8, 0x138
	0x03578A9C LDP X8, X4, [X0]
	0x03578AA0 MOVZ W1, 0x3
	0x03578AA4 MOV X0, X20
	0x03578AA8 MOV X2, X22
	0x03578AAC MOV X3, X21
	0x03578AB0 BLR X8
	0x03578AB4 LDR W8, [X19 + 0x78]
	0x03578AB8 CBNZ W8, 0x3578ADC
	0x03578ABC MOV X0, X19
	0x03578AC0 BL 0x3574F04
	0x03578AC4 CMP W0, 0x1
	0x03578AC8 B.NE 0x3578ADC
	0x03578ACC LDRB W8, [X19 + 0x89]
	0x03578AD0 CBZ W8, 0x3578AE0
	0x03578AD4 STR W0, [X19 + 0xDC]
	0x03578AD8 B 0x3578AE0
	0x03578ADC MOVZ W0, 0x1
	0x03578AE0 LDP X20, X19, [X31 + 0x40]
	0x03578AE4 LDP X22, X21, [X31 + 0x30]
	0x03578AE8 LDP X24, X23, [X31 + 0x20]
	0x03578AEC LDP X30, X25, [X31 + 0x10]
	0x03578AF0 ADD X31, X31, 0x50
	0x03578AF4 RET
	0x03578AF8 BL 0x1C16F28
	0x03578AFC BL 0x1C16F20
	0x03578B00 BL 0x1C16F44
	0x03578B04 MOV X1, X31
	0x03578B08 BL 0x1C16DEC
	0x03578B0C STP X30, X23, [X31 - 0x30]!
	0x03578B10 STP X22, X21, [X31 + 0x10]
	0x03578B14 STP X20, X19, [X31 + 0x20]
	0x03578B18 ADRP X20, 0xE67000
	0x03578B1C LDRB W8, [X20 + 0xE8A]
	0x03578B20 MOV X19, X0
	0x03578B24 TBNZ X8, 0x0, 0x3578B6C
	0x03578B28 ADRP X0, 0xB7B000
	0x03578B2C LDR X0, [X0 + 0x9C8]
	0x03578B30 BL 0x1C16CF4
	0x03578B34 ADRP X0, 0xB80000
	0x03578B38 LDR X0, [X0 + 0x348]
	0x03578B3C BL 0x1C16CF4
	0x03578B40 ADRP X0, 0xBBE000
	0x03578B44 LDR X0, [X0 + 0x360]
	0x03578B48 BL 0x1C16CF4
	0x03578B4C ADRP X0, 0xBBE000
	0x03578B50 LDR X0, [X0 + 0x368]
	0x03578B54 BL 0x1C16CF4
	0x03578B58 ADRP X0, 0xBBE000
	0x03578B5C LDR X0, [X0 + 0x370]
	0x03578B60 BL 0x1C16CF4
	0x03578B64 MOVZ W8, 0x1
	0x03578B68 STRB W8, [X20 + 0xE8A]
	0x03578B6C ADRP X20, 0xB7B000
	0x03578B70 ADRP X22, 0xB80000
	0x03578B74 LDR X0, [X19 + 0x48]
	0x03578B78 LDR X20, [X20 + 0x9C8]
	0x03578B7C LDR X22, [X22 + 0x348]
	0x03578B80 CBZ X0, 0x3578C44
	0x03578B84 ADRP X23, 0xBBE000
	0x03578B88 LDR X23, [X23 + 0x360]
	0x03578B8C LDR X1, [X23]
	0x03578B90 BL 0x1C16E00
	0x03578B94 CBZ X0, 0x3578C44
	0x03578B98 LDR X9, [X19 + 0x20]
	0x03578B9C CBZ X9, 0x3578DDC
	0x03578BA0 LDR X21, [X20]
	0x03578BA4 LDR X20, [X9 + 0x18]
	0x03578BA8 LDR X8, [X21 + 0x38]
	0x03578BAC CBNZ X8, 0x3578BBC
	0x03578BB0 MOV X0, X21
	0x03578BB4 BL 0x1C5C6E0
	0x03578BB8 LDR X8, [X21 + 0x38]
	0x03578BBC LDR X0, [X8 + 0x10]
	0x03578BC0 LDRB W8, [X0 + 0x135]
	0x03578BC4 TBNZ X8, 0x0, 0x3578BCC
	0x03578BC8 BL 0x1C5C684
	0x03578BCC LDR W8, [X0 + 0xE0]
	0x03578BD0 CBNZ W8, 0x3578BD8
	0x03578BD4 BL 0x1C16DFC
	0x03578BD8 LDR X8, [X21 + 0x38]
	0x03578BDC LDR X0, [X8 + 0x10]
	0x03578BE0 LDRB W8, [X0 + 0x135]
	0x03578BE4 TBNZ X8, 0x0, 0x3578BEC
	0x03578BE8 BL 0x1C5C684
	0x03578BEC CBZ X20, 0x3578DDC
	0x03578BF0 ADRP X10, 0xBBE000
	0x03578BF4 LDR X9, [X0 + 0xB8]
	0x03578BF8 LDR X8, [X20]
	0x03578BFC LDR X1, [X22]
	0x03578C00 LDR X10, [X10 + 0x370]
	0x03578C04 LDR X21, [X9]
	0x03578C08 LDRH W9, [X8 + 0x12E]
	0x03578C0C LDR X22, [X10]
	0x03578C10 CBZ X9, 0x3578C34
	0x03578C14 LDR X10, [X8 + 0xB0]
	0x03578C18 ADD X10, X10, 0x8
	0x03578C1C LDUR X11, [X10 - 0x8]
	0x03578C20 CMP X11, X1
	0x03578C24 B.EQ 0x3578D20
	0x03578C28 SUBS X9, X9, 0x1
	0x03578C2C ADD X10, X10, 0x10
	0x03578C30 B.NE 0x3578C1C
	0x03578C34 MOVZ W2, 0x1
	0x03578C38 MOV X0, X20
	0x03578C3C BL 0x1C5C788
	0x03578C40 B 0x3578D30
	0x03578C44 LDR X9, [X19 + 0x20]
	0x03578C48 CBZ X9, 0x3578DDC
	0x03578C4C LDR X20, [X20]
	0x03578C50 LDR X19, [X9 + 0x18]
	0x03578C54 LDR X8, [X20 + 0x38]
	0x03578C58 CBNZ X8, 0x3578C68
	0x03578C5C MOV X0, X20
	0x03578C60 BL 0x1C5C6E0
	0x03578C64 LDR X8, [X20 + 0x38]
	0x03578C68 LDR X0, [X8 + 0x10]
	0x03578C6C LDRB W8, [X0 + 0x135]
	0x03578C70 TBNZ X8, 0x0, 0x3578C78
	0x03578C74 BL 0x1C5C684
	0x03578C78 LDR W8, [X0 + 0xE0]
	0x03578C7C CBNZ W8, 0x3578C84
	0x03578C80 BL 0x1C16DFC
	0x03578C84 LDR X8, [X20 + 0x38]
	0x03578C88 LDR X0, [X8 + 0x10]
	0x03578C8C LDRB W8, [X0 + 0x135]
	0x03578C90 TBNZ X8, 0x0, 0x3578C98
	0x03578C94 BL 0x1C5C684
	0x03578C98 CBZ X19, 0x3578DDC
	0x03578C9C ADRP X10, 0xBBE000
	0x03578CA0 LDR X9, [X0 + 0xB8]
	0x03578CA4 LDR X8, [X19]
	0x03578CA8 LDR X10, [X10 + 0x368]
	0x03578CAC LDR X1, [X22]
	0x03578CB0 LDR X20, [X9]
	0x03578CB4 LDRH W9, [X8 + 0x12E]
	0x03578CB8 LDR X21, [X10]
	0x03578CBC CBZ X9, 0x3578CE0
	0x03578CC0 LDR X10, [X8 + 0xB0]
	0x03578CC4 ADD X10, X10, 0x8
	0x03578CC8 LDUR X11, [X10 - 0x8]
	0x03578CCC CMP X11, X1
	0x03578CD0 B.EQ 0x3578CF0
	0x03578CD4 SUBS X9, X9, 0x1
	0x03578CD8 ADD X10, X10, 0x10
	0x03578CDC B.NE 0x3578CC8
	0x03578CE0 MOVZ W2, 0x1
	0x03578CE4 MOV X0, X19
	0x03578CE8 BL 0x1C5C788
	0x03578CEC B 0x3578D00
	0x03578CF0 LDR W9, [X10]
	0x03578CF4 ADD W9, W9, 0x1
	0x03578CF8 ADD X8, X8, W9, 0x4, SXTW
	0x03578CFC ADD X0, X8, 0x138
	0x03578D00 LDP X8, X4, [X0]
	0x03578D04 MOVZ W1, 0x4
	0x03578D08 MOV X0, X19
	0x03578D0C MOV X2, X21
	0x03578D10 MOV X3, X20
	0x03578D14 BLR X8
	0x03578D18 MOV W0, W31
	0x03578D1C B 0x3578DCC
	0x03578D20 LDR W9, [X10]
	0x03578D24 ADD W9, W9, 0x1
	0x03578D28 ADD X8, X8, W9, 0x4, SXTW
	0x03578D2C ADD X0, X8, 0x138
	0x03578D30 LDP X8, X4, [X0]
	0x03578D34 MOVZ W1, 0x3
	0x03578D38 MOV X0, X20
	0x03578D3C MOV X2, X22
	0x03578D40 MOV X3, X21
	0x03578D44 BLR X8
	0x03578D48 LDR X19, [X19 + 0x48]
	0x03578D4C LDR X1, [X23]
	0x03578D50 MOV X0, X19
	0x03578D54 BL 0x1C16E00
	0x03578D58 CBZ X0, 0x3578DDC
	0x03578D5C LDR X20, [X23]
	0x03578D60 MOV X0, X19
	0x03578D64 MOV X1, X20
	0x03578D68 BL 0x1C16E00
	0x03578D6C LDR X8, [X0]
	0x03578D70 MOV X19, X0
	0x03578D74 LDRH W9, [X8 + 0x12E]
	0x03578D78 CBZ X9, 0x3578D9C
	0x03578D7C LDR X10, [X8 + 0xB0]
	0x03578D80 ADD X10, X10, 0x8
	0x03578D84 LDUR X11, [X10 - 0x8]
	0x03578D88 CMP X11, X20
	0x03578D8C B.EQ 0x3578DB0
	0x03578D90 SUBS X9, X9, 0x1
	0x03578D94 ADD X10, X10, 0x10
	0x03578D98 B.NE 0x3578D84
	0x03578D9C MOV X0, X19
	0x03578DA0 MOV X1, X20
	0x03578DA4 MOV W2, W31
	0x03578DA8 BL 0x1C5C788
	0x03578DAC B 0x3578DBC
	0x03578DB0 LDRSW X9, [X10]
	0x03578DB4 ADD X8, X8, X9, 0x4, LSL
	0x03578DB8 ADD X0, X8, 0x138
	0x03578DBC LDP X8, X1, [X0]
	0x03578DC0 MOV X0, X19
	0x03578DC4 BLR X8
	0x03578DC8 MOVZ W0, 0x1
	0x03578DCC LDP X20, X19, [X31 + 0x20]
	0x03578DD0 LDP X22, X21, [X31 + 0x10]
	0x03578DD4 LDP X30, X23, [X31], #0x30
	0x03578DD8 RET
	0x03578DDC BL 0x1C16F20
	0x03578DE0 SUB X31, X31, 0x50
	0x03578DE4 STP X30, X25, [X31 + 0x10]
	0x03578DE8 STP X24, X23, [X31 + 0x20]
	0x03578DEC STP X22, X21, [X31 + 0x30]
	0x03578DF0 STP X20, X19, [X31 + 0x40]
	0x03578DF4 ADRP X22, 0xE67000
	0x03578DF8 LDRB W8, [X22 + 0xED1]
	0x03578DFC MOV X21, X2
	0x03578E00 MOV X19, X1
	0x03578E04 MOV X20, X0
	0x03578E08 TBNZ X8, 0x0, 0x3578E74
	0x03578E0C ADRP X0, 0xB7B000
	0x03578E10 LDR X0, [X0 + 0x9C8]
	0x03578E14 BL 0x1C16CF4
	0x03578E18 ADRP X0, 0xB80000
	0x03578E1C LDR X0, [X0 + 0x348]
	0x03578E20 BL 0x1C16CF4
	0x03578E24 ADRP X0, 0xB7B000
	0x03578E28 LDR X0, [X0 + 0x758]
	0x03578E2C BL 0x1C16CF4
	0x03578E30 ADRP X0, 0xB7B000
	0x03578E34 LDR X0, [X0 + 0x9D0]
	0x03578E38 BL 0x1C16CF4
	0x03578E3C ADRP X0, 0xBBE000
	0x03578E40 LDR X0, [X0 + 0x378]
	0x03578E44 BL 0x1C16CF4
	0x03578E48 ADRP X0, 0xBBE000
	0x03578E4C LDR X0, [X0 + 0x380]
	0x03578E50 BL 0x1C16CF4
	0x03578E54 ADRP X0, 0xBBE000
	0x03578E58 LDR X0, [X0 + 0x388]
	0x03578E5C BL 0x1C16CF4
	0x03578E60 ADRP X0, 0xBBE000
	0x03578E64 LDR X0, [X0 + 0x390]
	0x03578E68 BL 0x1C16CF4
	0x03578E6C MOVZ W8, 0x1
	0x03578E70 STRB W8, [X22 + 0xED1]
	0x03578E74 MOV X0, X20
	0x03578E78 MOV X1, X31
	0x03578E7C BL 0x3C323D4
	0x03578E80 TBZ X0, 0x0, 0x3579258
	0x03578E84 MOVZ W8, 0x1
	0x03578E88 STR W8, [X21]
	0x03578E8C LDR X9, [X20 + 0x20]
	0x03578E90 CBZ X9, 0x3579270
	0x03578E94 ADRP X25, 0xB7B000
	0x03578E98 LDR X25, [X25 + 0x9C8]
	0x03578E9C LDR X21, [X9 + 0x18]
	0x03578EA0 LDR X22, [X25]
	0x03578EA4 LDR X8, [X22 + 0x38]
	0x03578EA8 CBNZ X8, 0x3578EB8
	0x03578EAC MOV X0, X22
	0x03578EB0 BL 0x1C5C6E0
	0x03578EB4 LDR X8, [X22 + 0x38]
	0x03578EB8 LDR X0, [X8 + 0x10]
	0x03578EBC LDRB W8, [X0 + 0x135]
	0x03578EC0 TBNZ X8, 0x0, 0x3578EC8
	0x03578EC4 BL 0x1C5C684
	0x03578EC8 LDR W8, [X0 + 0xE0]
	0x03578ECC CBNZ W8, 0x3578ED4
	0x03578ED0 BL 0x1C16DFC
	0x03578ED4 LDR X8, [X22 + 0x38]
	0x03578ED8 LDR X0, [X8 + 0x10]
	0x03578EDC LDRB W8, [X0 + 0x135]
	0x03578EE0 TBNZ X8, 0x0, 0x3578EE8
	0x03578EE4 BL 0x1C5C684
	0x03578EE8 CBZ X21, 0x3579270
	0x03578EEC ADRP X24, 0xB80000
	0x03578EF0 ADRP X10, 0xBBE000
	0x03578EF4 LDR X9, [X0 + 0xB8]
	0x03578EF8 LDR X24, [X24 + 0x348]
	0x03578EFC LDR X8, [X21]
	0x03578F00 LDR X10, [X10 + 0x378]
	0x03578F04 LDR X22, [X9]
	0x03578F08 LDR X1, [X24]
	0x03578F0C LDRH W9, [X8 + 0x12E]
	0x03578F10 LDR X23, [X10]
	0x03578F14 CBZ X9, 0x3578F38
	0x03578F18 LDR X10, [X8 + 0xB0]
	0x03578F1C ADD X10, X10, 0x8
	0x03578F20 LDUR X11, [X10 - 0x8]
	0x03578F24 CMP X11, X1
	0x03578F28 B.EQ 0x3578F48
	0x03578F2C SUBS X9, X9, 0x1
	0x03578F30 ADD X10, X10, 0x10
	0x03578F34 B.NE 0x3578F20
	0x03578F38 MOVZ W2, 0x1
	0x03578F3C MOV X0, X21
	0x03578F40 BL 0x1C5C788
	0x03578F44 B 0x3578F58
	0x03578F48 LDR W9, [X10]
	0x03578F4C ADD W9, W9, 0x1
	0x03578F50 ADD X8, X8, W9, 0x4, SXTW
	0x03578F54 ADD X0, X8, 0x138
	0x03578F58 LDP X8, X4, [X0]
	0x03578F5C MOVZ W1, 0x3
	0x03578F60 MOV X0, X21
	0x03578F64 MOV X2, X23
	0x03578F68 MOV X3, X22
	0x03578F6C BLR X8
	0x03578F70 LDR W8, [X19 + 0x4]
	0x03578F74 MOVZ W9, 0x5DC0
	0x03578F78 CMP W8, W9
	0x03578F7C B.EQ 0x3579038
	0x03578F80 MOVZ W9, 0x2EE0
	0x03578F84 CMP W8, W9
	0x03578F88 B.NE 0x3579144
	0x03578F8C LDR X9, [X20 + 0x20]
	0x03578F90 CBZ X9, 0x3579270
	0x03578F94 LDR X22, [X25]
	0x03578F98 LDR X21, [X9 + 0x18]
	0x03578F9C LDR X8, [X22 + 0x38]
	0x03578FA0 CBNZ X8, 0x3578FB0
	0x03578FA4 MOV X0, X22
	0x03578FA8 BL 0x1C5C6E0
	0x03578FAC LDR X8, [X22 + 0x38]
	0x03578FB0 LDR X0, [X8 + 0x10]
	0x03578FB4 LDRB W8, [X0 + 0x135]
	0x03578FB8 TBNZ X8, 0x0, 0x3578FC0
	0x03578FBC BL 0x1C5C684
	0x03578FC0 LDR W8, [X0 + 0xE0]
	0x03578FC4 CBNZ W8, 0x3578FCC
	0x03578FC8 BL 0x1C16DFC
	0x03578FCC LDR X8, [X22 + 0x38]
	0x03578FD0 LDR X0, [X8 + 0x10]
	0x03578FD4 LDRB W8, [X0 + 0x135]
	0x03578FD8 TBNZ X8, 0x0, 0x3578FE0
	0x03578FDC BL 0x1C5C684
	0x03578FE0 CBZ X21, 0x3579270
	0x03578FE4 ADRP X10, 0xBBE000
	0x03578FE8 LDR X9, [X0 + 0xB8]
	0x03578FEC LDR X8, [X21]
	0x03578FF0 LDR X1, [X24]
	0x03578FF4 LDR X10, [X10 + 0x380]
	0x03578FF8 LDR X22, [X9]
	0x03578FFC LDRH W9, [X8 + 0x12E]
	0x03579000 LDR X23, [X10]
	0x03579004 CBZ X9, 0x3579028
	0x03579008 LDR X10, [X8 + 0xB0]
	0x0357900C ADD X10, X10, 0x8
	0x03579010 LDUR X11, [X10 - 0x8]
	0x03579014 CMP X11, X1
	0x03579018 B.EQ 0x35790E4
	0x0357901C SUBS X9, X9, 0x1
	0x03579020 ADD X10, X10, 0x10
	0x03579024 B.NE 0x3579010
	0x03579028 MOVZ W2, 0x1
	0x0357902C MOV X0, X21
	0x03579030 BL 0x1C5C788
	0x03579034 B 0x35790F4
	0x03579038 LDR X9, [X20 + 0x20]
	0x0357903C CBZ X9, 0x3579270
	0x03579040 LDR X22, [X25]
	0x03579044 LDR X21, [X9 + 0x18]
	0x03579048 LDR X8, [X22 + 0x38]
	0x0357904C CBNZ X8, 0x357905C
	0x03579050 MOV X0, X22
	0x03579054 BL 0x1C5C6E0
	0x03579058 LDR X8, [X22 + 0x38]
	0x0357905C LDR X0, [X8 + 0x10]
	0x03579060 LDRB W8, [X0 + 0x135]
	0x03579064 TBNZ X8, 0x0, 0x357906C
	0x03579068 BL 0x1C5C684
	0x0357906C LDR W8, [X0 + 0xE0]
	0x03579070 CBNZ W8, 0x3579078
	0x03579074 BL 0x1C16DFC
	0x03579078 LDR X8, [X22 + 0x38]
	0x0357907C LDR X0, [X8 + 0x10]
	0x03579080 LDRB W8, [X0 + 0x135]
	0x03579084 TBNZ X8, 0x0, 0x357908C
	0x03579088 BL 0x1C5C684
	0x0357908C CBZ X21, 0x3579270
	0x03579090 ADRP X10, 0xBBD000
	0x03579094 LDR X9, [X0 + 0xB8]
	0x03579098 LDR X8, [X21]
	0x0357909C LDR X1, [X24]
	0x035790A0 LDR X10, [X10 + 0x388]
	0x035790A4 LDR X22, [X9]
	0x035790A8 LDRH W9, [X8 + 0x12E]
	0x035790AC LDR X23, [X10]
	0x035790B0 CBZ X9, 0x35790D4
	0x035790B4 LDR X10, [X8 + 0xB0]
	0x035790B8 ADD X10, X10, 0x8
	0x035790BC LDUR X11, [X10 - 0x8]
	0x035790C0 CMP X11, X1
	0x035790C4 B.EQ 0x3579114
	0x035790C8 SUBS X9, X9, 0x1
	0x035790CC ADD X10, X10, 0x10
	0x035790D0 B.NE 0x35790BC
	0x035790D4 MOVZ W2, 0x1
	0x035790D8 MOV X0, X21
	0x035790DC BL 0x1C5C788
	0x035790E0 B 0x3579124
	0x035790E4 LDR W9, [X10]
	0x035790E8 ADD W9, W9, 0x1
	0x035790EC ADD X8, X8, W9, 0x4, SXTW
	0x035790F0 ADD X0, X8, 0x138
	0x035790F4 LDP X8, X4, [X0]
	0x035790F8 MOVZ W1, 0x2
	0x035790FC MOV X0, X21
	0x03579100 MOV X2, X23
	0x03579104 MOV X3, X22
	0x03579108 BLR X8
	0x0357910C MOVZ W8, 0x3E80
	0x03579110 B 0x3579140
	0x03579114 LDR W9, [X10]
	0x03579118 ADD W9, W9, 0x1
	0x0357911C ADD X8, X8, W9, 0x4, SXTW
	0x03579120 ADD X0, X8, 0x138
	0x03579124 LDP X8, X4, [X0]
	0x03579128 MOVZ W1, 0x2
	0x0357912C MOV X0, X21
	0x03579130 MOV X2, X23
	0x03579134 MOV X3, X22
	0x03579138 BLR X8
	0x0357913C MOVZ W8, 0xBB80
	0x03579140 STR W8, [X19 + 0x4]
	0x03579144 LDR W8, [X19 + 0xC]
	0x03579148 MOVZ W9, 0x270F
	0x0357914C CMP W8, W9
	0x03579150 B.GT 0x3579258
	0x03579154 LDR X8, [X20 + 0x20]
	0x03579158 CBZ X8, 0x3579270
	0x0357915C LDR X20, [X8 + 0x18]
	0x03579160 ADRP X8, 0xB7A000
	0x03579164 LDR X8, [X8 + 0x9D0]
	0x03579168 MOVZ W1, 0x1
	0x0357916C LDR X0, [X8]
	0x03579170 BL 0x1C16D6C
	0x03579174 ADRP X10, 0xB7A000
	0x03579178 LDRSW X8, [X19 + 0xC]
	0x0357917C LDR X10, [X10 + 0x758]
	0x03579180 MOVZ W9, 0x4DD3
	0x03579184 MOV X21, X0
	0x03579188 MOVK W9, 0x10620000
	0x0357918C LDR X0, [X10]
	0x03579190 MUL X8, X8, X9
	0x03579194 UBFM X9, X8, 0x3F, 0x3F
	0x03579198 SBFM X8, X8, 0x26, 0x3F
	0x0357919C ADD W8, W8, W9
	0x035791A0 ADD X1, X31, 0xC
	0x035791A4 STR W8, [X31 + 0xC]
	0x035791A8 BL 0x1C16E04
	0x035791AC CBZ X21, 0x3579270
	0x035791B0 MOV X22, X0
	0x035791B4 CBZ X0, 0x35791CC
	0x035791B8 LDR X8, [X21]
	0x035791BC MOV X0, X22
	0x035791C0 LDR X1, [X8 + 0x40]
	0x035791C4 BL 0x1C16E00
	0x035791C8 CBZ X0, 0x3579278
	0x035791CC LDR W8, [X21 + 0x18]
	0x035791D0 CBZ W8, 0x3579274
	0x035791D4 STR X22, [X21 + 0x20]
	0x035791D8 CBZ X20, 0x3579270
	0x035791DC ADRP X10, 0xBBD000
	0x035791E0 LDR X8, [X20]
	0x035791E4 LDR X1, [X24]
	0x035791E8 LDR X10, [X10 + 0x390]
	0x035791EC LDRH W9, [X8 + 0x12E]
	0x035791F0 LDR X22, [X10]
	0x035791F4 CBZ X9, 0x3579218
	0x035791F8 LDR X10, [X8 + 0xB0]
	0x035791FC ADD X10, X10, 0x8
	0x03579200 LDUR X11, [X10 - 0x8]
	0x03579204 CMP X11, X1
	0x03579208 B.EQ 0x3579228
	0x0357920C SUBS X9, X9, 0x1
	0x03579210 ADD X10, X10, 0x10
	0x03579214 B.NE 0x3579200
	0x03579218 MOVZ W2, 0x1
	0x0357921C MOV X0, X20
	0x03579220 BL 0x1C5C788
	0x03579224 B 0x3579238
	0x03579228 LDR W9, [X10]
	0x0357922C ADD W9, W9, 0x1
	0x03579230 ADD X8, X8, W9, 0x4, SXTW
	0x03579234 ADD X0, X8, 0x138
	0x03579238 LDP X8, X4, [X0]
	0x0357923C MOVZ W1, 0x2
	0x03579240 MOV X0, X20
	0x03579244 MOV X2, X22
	0x03579248 MOV X3, X21
	0x0357924C BLR X8
	0x03579250 MOVZ W8, 0x2710
	0x03579254 STR W8, [X19 + 0xC]
	0x03579258 LDP X20, X19, [X31 + 0x40]
	0x0357925C LDP X22, X21, [X31 + 0x30]
	0x03579260 LDP X24, X23, [X31 + 0x20]
	0x03579264 LDP X30, X25, [X31 + 0x10]
	0x03579268 ADD X31, X31, 0x50
	0x0357926C RET
	0x03579270 BL 0x1C16F20
	0x03579274 BL 0x1C16F28
	0x03579278 BL 0x1C16F44
	0x0357927C MOV X1, X31
	0x03579280 BL 0x1C16DEC
	0x03579284 STR X30, [X31 - 0x10]!
	0x03579288 LDR X8, [X0 + 0x48]
	0x0357928C CBZ X8, 0x357929C
	0x03579290 LDR X0, [X8 + 0x188]
	0x03579294 LDR X30, [X31], #0x10
	0x03579298 RET
	0x0357929C BL 0x1C16F20
	0x035792A0 STP X30, X21, [X31 - 0x20]!
	0x035792A4 STP X20, X19, [X31 + 0x10]
	0x035792A8 ADRP X21, 0xE66000
	0x035792AC ADRP X20, 0xBBD000
	0x035792B0 LDRB W8, [X21 + 0xE8C]
	0x035792B4 LDR X20, [X20 + 0x398]
	0x035792B8 MOV X19, X0
	0x035792BC TBNZ X8, 0x0, 0x35792E0
	0x035792C0 ADRP X0, 0xBBD000
	0x035792C4 LDR X0, [X0 + 0x398]
	0x035792C8 BL 0x1C16CF4
	0x035792CC ADRP X0, 0xBBD000
	0x035792D0 LDR X0, [X0 + 0x3A0]
	0x035792D4 BL 0x1C16CF4
	0x035792D8 MOVZ W8, 0x1
	0x035792DC STRB W8, [X21 + 0xE8C]
	0x035792E0 MOV X0, X19
	0x035792E4 MOV X1, X31
	0x035792E8 BL 0x3C32ECC
	0x035792EC LDR X8, [X20]
	0x035792F0 MOV X20, X0
	0x035792F4 MOV X0, X8
	0x035792F8 BL 0x1C16F10
	0x035792FC MOV X1, X31
	0x03579300 MOV X21, X0
	0x03579304 BL 0x356E6C0
	0x03579308 CBZ X21, 0x3579348
	0x0357930C LDR X8, [X19 + 0x40]
	0x03579310 STR X8, [X21 + 0x10]
	0x03579314 LDR X8, [X19 + 0x48]
	0x03579318 STR X8, [X21 + 0x18]
	0x0357931C CBZ X20, 0x3579348
	0x03579320 ADRP X8, 0xBBD000
	0x03579324 LDR X8, [X8 + 0x3A0]
	0x03579328 MOV X0, X20
	0x0357932C LDP X20, X19, [X31 + 0x10]
	0x03579330 MOVZ W3, 0x1
	0x03579334 LDR X1, [X8]
	0x03579338 MOV X2, X21
	0x0357933C MOV X4, X31
	0x03579340 LDP X30, X21, [X31], #0x20
	0x03579344 B 0x3C35614
	0x03579348 BL 0x1C16F20
	0x0357934C STR X30, [X31 - 0x30]!
	0x03579350 STP X22, X21, [X31 + 0x10]
	0x03579354 STP X20, X19, [X31 + 0x20]
	0x03579358 ADRP X21, 0xE66000
	0x0357935C ADRP X20, 0xB7A000
	0x03579360 LDRB W8, [X21 + 0xE8D]
	0x03579364 LDR X20, [X20 + 0x598]
	0x03579368 MOV X19, X0
	0x0357936C TBNZ X8, 0x0, 0x35793A8
	0x03579370 ADRP X0, 0xB7A000
	0x03579374 LDR X0, [X0 + 0x9C8]
	0x03579378 BL 0x1C16CF4
	0x0357937C ADRP X0, 0xB7F000
	0x03579380 LDR X0, [X0 + 0x348]
	0x03579384 BL 0x1C16CF4
	0x03579388 ADRP X0, 0xB7A000
	0x0357938C LDR X0, [X0 + 0x598]
	0x03579390 BL 0x1C16CF4
	0x03579394 ADRP X0, 0xBBD000
	0x03579398 LDR X0, [X0 + 0x3A8]
	0x0357939C BL 0x1C16CF4
	0x035793A0 MOVZ W8, 0x1
	0x035793A4 STRB W8, [X21 + 0xE8D]
	0x035793A8 LDR X0, [X20]
	0x035793AC LDR X20, [X19 + 0x50]
	0x035793B0 LDR W8, [X0 + 0xE0]
	0x035793B4 CBNZ W8, 0x35793BC
	0x035793B8 BL 0x1C16DFC
	0x035793BC MOV X0, X20
	0x035793C0 MOV X1, X31
	0x035793C4 MOV X2, X31
	0x035793C8 BL 0x3C3883C
	0x035793CC TBNZ X0, 0x0, 0x35794C4
	0x035793D0 ADD X0, X19, 0xD8
	0x035793D4 MOV W1, W31
	0x035793D8 MOV X2, X31
	0x035793DC BL 0x33E9064
	0x035793E0 CBZ W0, 0x35793EC
	0x035793E4 MOV X0, X19
	0x035793E8 BL 0x3579514
	0x035793EC ADD X0, X19, 0xDC
	0x035793F0 MOV W1, W31
	0x035793F4 MOV X2, X31
	0x035793F8 BL 0x33E9064
	0x035793FC CBZ W0, 0x35794C4
	0x03579400 LDRB W8, [X19 + 0x89]
	0x03579404 CBZ W8, 0x35794C4
	0x03579408 LDR X9, [X19 + 0x20]
	0x0357940C CBZ X9, 0x3579510
	0x03579410 ADRP X8, 0xB7A000
	0x03579414 LDR X8, [X8 + 0x9C8]
	0x03579418 LDR X20, [X9 + 0x18]
	0x0357941C LDR X21, [X8]
	0x03579420 LDR X8, [X21 + 0x38]
	0x03579424 CBNZ X8, 0x3579434
	0x03579428 MOV X0, X21
	0x0357942C BL 0x1C5C6E0
	0x03579430 LDR X8, [X21 + 0x38]
	0x03579434 LDR X0, [X8 + 0x10]
	0x03579438 LDRB W8, [X0 + 0x135]
	0x0357943C TBNZ X8, 0x0, 0x3579444
	0x03579440 BL 0x1C5C684
	0x03579444 LDR W8, [X0 + 0xE0]
	0x03579448 CBNZ W8, 0x3579450
	0x0357944C BL 0x1C16DFC
	0x03579450 LDR X8, [X21 + 0x38]
	0x03579454 LDR X0, [X8 + 0x10]
	0x03579458 LDRB W8, [X0 + 0x135]
	0x0357945C TBNZ X8, 0x0, 0x3579464
	0x03579460 BL 0x1C5C684
	0x03579464 CBZ X20, 0x3579510
	0x03579468 ADRP X10, 0xB7F000
	0x0357946C ADRP X11, 0xBBD000
	0x03579470 LDR X9, [X0 + 0xB8]
	0x03579474 LDR X10, [X10 + 0x348]
	0x03579478 LDR X8, [X20]
	0x0357947C LDR X11, [X11 + 0x3A8]
	0x03579480 LDR X21, [X9]
	0x03579484 LDR X1, [X10]
	0x03579488 LDRH W9, [X8 + 0x12E]
	0x0357948C LDR X22, [X11]
	0x03579490 CBZ X9, 0x35794B4
	0x03579494 LDR X10, [X8 + 0xB0]
	0x03579498 ADD X10, X10, 0x8
	0x0357949C LDUR X11, [X10 - 0x8]
	0x035794A0 CMP X11, X1
	0x035794A4 B.EQ 0x35794D4
	0x035794A8 SUBS X9, X9, 0x1
	0x035794AC ADD X10, X10, 0x10
	0x035794B0 B.NE 0x357949C
	0x035794B4 MOVZ W2, 0x1
	0x035794B8 MOV X0, X20
	0x035794BC BL 0x1C5C788
	0x035794C0 B 0x35794E4
	0x035794C4 LDP X20, X19, [X31 + 0x20]
	0x035794C8 LDP X22, X21, [X31 + 0x10]
	0x035794CC LDR X30, [X31], #0x30
	0x035794D0 RET
	0x035794D4 LDR W9, [X10]
	0x035794D8 ADD W9, W9, 0x1
	0x035794DC ADD X8, X8, W9, 0x4, SXTW
	0x035794E0 ADD X0, X8, 0x138
	0x035794E4 LDP X8, X4, [X0]
	0x035794E8 MOVZ W1, 0x3
	0x035794EC MOV X0, X20
	0x035794F0 MOV X2, X22
	0x035794F4 MOV X3, X21
	0x035794F8 BLR X8
	0x035794FC MOV X0, X19
	0x03579500 LDP X20, X19, [X31 + 0x20]
	0x03579504 LDP X22, X21, [X31 + 0x10]
	0x03579508 LDR X30, [X31], #0x30
	0x0357950C B 0x35765A0
	0x03579510 BL 0x1C16F20
	0x03579514 STR X30, [X31 - 0x30]!
	0x03579518 STP X22, X21, [X31 + 0x10]
	0x0357951C STP X20, X19, [X31 + 0x20]
	0x03579520 ADRP X20, 0xE66000
	0x03579524 LDRB W8, [X20 + 0xE8F]
	0x03579528 MOV X19, X0
	0x0357952C TBNZ X8, 0x0, 0x3579568
	0x03579530 ADRP X0, 0xB7A000
	0x03579534 LDR X0, [X0 + 0x9C8]
	0x03579538 BL 0x1C16CF4
	0x0357953C ADRP X0, 0xB7F000
	0x03579540 LDR X0, [X0 + 0x348]
	0x03579544 BL 0x1C16CF4
	0x03579548 ADRP X0, 0xBBD000
	0x0357954C LDR X0, [X0 + 0x3B0]
	0x03579550 BL 0x1C16CF4
	0x03579554 ADRP X0, 0xBBD000
	0x03579558 LDR X0, [X0 + 0x3B8]
	0x0357955C BL 0x1C16CF4
	0x03579560 MOVZ W8, 0x1
	0x03579564 STRB W8, [X20 + 0xE8F]
	0x03579568 LDRB W8, [X19 + 0x89]
	0x0357956C CBZ W8, 0x3579578
	0x03579570 LDR W8, [X19 + 0x78]
	0x03579574 CBZ W8, 0x3579588
	0x03579578 LDP X20, X19, [X31 + 0x20]
	0x0357957C LDP X22, X21, [X31 + 0x10]
	0x03579580 LDR X30, [X31], #0x30
	0x03579584 RET
	0x03579588 MOV X0, X19
	0x0357958C BL 0x3578B0C
	0x03579590 LDR X9, [X19 + 0x20]
	0x03579594 CBZ X9, 0x357970C
	0x03579598 ADRP X8, 0xB7A000
	0x0357959C LDR X8, [X8 + 0x9C8]
	0x035795A0 LDR X20, [X9 + 0x18]
	0x035795A4 MOV W22, W0
	0x035795A8 LDR X21, [X8]
	0x035795AC LDR X8, [X21 + 0x38]
	0x035795B0 CBNZ X8, 0x35795C0
	0x035795B4 MOV X0, X21
	0x035795B8 BL 0x1C5C6E0
	0x035795BC LDR X8, [X21 + 0x38]
	0x035795C0 LDR X0, [X8 + 0x10]
	0x035795C4 LDRB W8, [X0 + 0x135]
	0x035795C8 TBNZ X8, 0x0, 0x35795D0
	0x035795CC BL 0x1C5C684
	0x035795D0 LDR W8, [X0 + 0xE0]
	0x035795D4 CBNZ W8, 0x35795DC
	0x035795D8 BL 0x1C16DFC
	0x035795DC LDR X8, [X21 + 0x38]
	0x035795E0 LDR X0, [X8 + 0x10]
	0x035795E4 LDRB W8, [X0 + 0x135]
	0x035795E8 TBNZ X8, 0x0, 0x35795F0
	0x035795EC BL 0x1C5C684
	0x035795F0 CBZ X20, 0x357970C
	0x035795F4 ADRP X9, 0xB7F000
	0x035795F8 LDR X8, [X0 + 0xB8]
	0x035795FC LDR X9, [X9 + 0x348]
	0x03579600 LDR X21, [X8]
	0x03579604 LDR X1, [X9]
	0x03579608 TBZ X22, 0x0, 0x3579654
	0x0357960C ADRP X10, 0xBBD000
	0x03579610 LDR X8, [X20]
	0x03579614 LDR X10, [X10 + 0x3B8]
	0x03579618 LDRH W9, [X8 + 0x12E]
	0x0357961C LDR X19, [X10]
	0x03579620 CBZ X9, 0x3579644
	0x03579624 LDR X10, [X8 + 0xB0]
	0x03579628 ADD X10, X10, 0x8
	0x0357962C LDUR X11, [X10 - 0x8]
	0x03579630 CMP X11, X1
	0x03579634 B.EQ 0x357969C
	0x03579638 SUBS X9, X9, 0x1
	0x0357963C ADD X10, X10, 0x10
	0x03579640 B.NE 0x357962C
	0x03579644 MOVZ W2, 0x1
	0x03579648 MOV X0, X20
	0x0357964C BL 0x1C5C788
	0x03579650 B 0x35796AC
	0x03579654 ADRP X10, 0xBBD000
	0x03579658 LDR X8, [X20]
	0x0357965C LDR X10, [X10 + 0x3B0]
	0x03579660 LDRH W9, [X8 + 0x12E]
	0x03579664 LDR X22, [X10]
	0x03579668 CBZ X9, 0x357968C

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Subtract X31, X31, 512
	014 Move X20, 0xE69000
	015 Move X29, 0xB7D000
	016 Move W8, [X20+3723]
	017 Move X29, [X29+2416]
	018 Move X19, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {145}
	023 Move X0, 0xBBF000
	024 Move X0, [X0+1096]
	025 Call 0x1C17CF4
	026 Move X0, 0xB7D000
	027 Move X0, [X0+2416]
	028 Call 0x1C17CF4
	029 Move X0, 0xB7D000
	030 Move X0, [X0+2504]
	031 Call 0x1C17CF4
	032 Move X0, 0xBC0000
	033 Move X0, [X0+472]
	034 Call 0x1C17CF4
	035 Move X0, 0xBC0000
	036 Move X0, [X0+616]
	037 Call 0x1C17CF4
	038 Move X0, 0xBC0000
	039 Move X0, [X0+624]
	040 Call 0x1C17CF4
	041 Move X0, 0xBA5000
	042 Move X0, [X0+1528]
	043 Call 0x1C17CF4
	044 Move X0, 0xBC0000
	045 Move X0, [X0+632]
	046 Call 0x1C17CF4
	047 Move X0, 0xBA9000
	048 Move X0, [X0+376]
	049 Call 0x1C17CF4
	050 Move X0, 0xB82000
	051 Move X0, [X0+840]
	052 Call 0x1C17CF4
	053 Move X0, 0xBC0000
	054 Move X0, [X0+640]
	055 Call 0x1C17CF4
	056 Move X0, 0xBBF000
	057 Move X0, [X0+2080]
	058 Call 0x1C17CF4
	059 Move X0, 0xBC0000
	060 Move X0, [X0+648]
	061 Call 0x1C17CF4
	062 Move X0, 0xBC0000
	063 Move X0, [X0+656]
	064 Call 0x1C17CF4
	065 Move X0, 0xBC0000
	066 Move X0, [X0+664]
	067 Call 0x1C17CF4
	068 Move X0, 0xB7D000
	069 Move X0, [X0+2512]
	070 Call 0x1C17CF4
	071 Move X0, 0xB7D000
	072 Move X0, [X0+1432]
	073 Call 0x1C17CF4
	074 Move X0, 0xB86000
	075 Move X0, [X0+2632]
	076 Call 0x1C17CF4
	077 Move X0, 0xBC0000
	078 Move X0, [X0+672]
	079 Call 0x1C17CF4
	080 Move X0, 0xBC0000
	081 Move X0, [X0+680]
	082 Call 0x1C17CF4
	083 Move X0, 0xBC0000
	084 Move X0, [X0+688]
	085 Call 0x1C17CF4
	086 Move X0, 0xBC0000
	087 Move X0, [X0+696]
	088 Call 0x1C17CF4
	089 Move X0, 0xBC0000
	090 Move X0, [X0+704]
	091 Call 0x1C17CF4
	092 Move X0, 0xBC0000
	093 Move X0, [X0+712]
	094 Call 0x1C17CF4
	095 Move X0, 0xBC0000
	096 Move X0, [X0+720]
	097 Call 0x1C17CF4
	098 Move X0, 0xBC0000
	099 Move X0, [X0+728]
	100 Call 0x1C17CF4
	101 Move X0, 0xBC0000
	102 Move X0, [X0+736]
	103 Call 0x1C17CF4
	104 Move X0, 0xBC0000
	105 Move X0, [X0+744]
	106 Call 0x1C17CF4
	107 Move X0, 0xBC0000
	108 Move X0, [X0+752]
	109 Call 0x1C17CF4
	110 Move X0, 0xBC0000
	111 Move X0, [X0+760]
	112 Call 0x1C17CF4
	113 Move X0, 0xBC0000
	114 Move X0, [X0+768]
	115 Call 0x1C17CF4
	116 Move X0, 0xBC0000
	117 Move X0, [X0+776]
	118 Call 0x1C17CF4
	119 Move X0, 0xBC0000
	120 Move X0, [X0+784]
	121 Call 0x1C17CF4
	122 Move X0, 0xBC0000
	123 Move X0, [X0+792]
	124 Call 0x1C17CF4
	125 Move X0, 0xBC0000
	126 Move X0, [X0+800]
	127 Call 0x1C17CF4
	128 Move X0, 0xBC0000
	129 Move X0, [X0+808]
	130 Call 0x1C17CF4
	131 Move X0, 0xBC0000
	132 Move X0, [X0+816]
	133 Call 0x1C17CF4
	134 Move X0, 0xBC0000
	135 Move X0, [X0+824]
	136 Call 0x1C17CF4
	137 Move X0, 0xBC0000
	138 Move X0, [X0+832]
	139 Call 0x1C17CF4
	140 Move X0, 0xBC0000
	141 Move X0, [X0+840]
	142 Call 0x1C17CF4
	143 Move W8, 1
	144 Move [X20+3723], W8
	145 Move X0, [X29]
	146 NotImplemented "Instruction MOVI not yet implemented."
	147 Move [X31+460], W31
	148 Move [X31+384], X31
	149 Move [X31+392], X31
	150 Move [X31+400], X31
	151 Move [X31+368], X31
	152 Move [X31+272], X31
	153 Move [X31+280], X31
	154 Move [X31+288], X31
	155 Move [X31+480], V0
	156 Move [X31+488], V0
	157 Move [X31+29], V0
	158 Move [X31+416], V0
	159 Move [X31+424], V0
	160 Move [X31+336], V0
	161 Move [X31+344], V0
	162 Move [X31+304], V0
	163 Move [X31+312], V0
	164 Move [X31+256], X31
	165 Move [X31+224], V0
	166 Move [X31+232], V0
	167 Move W8, [X0+224]
	168 Compare W8, 0
	169 JumpIfNotEqual {171}
	170 Call 0x1C17DFC
	171 Move X20, 0xB7D000
	172 Move X25, 0xB82000
	173 Move X28, 0xBA9000
	174 Move X27, 0xB7D000
	175 Move X20, [X20+2512]
	176 Move X25, [X25+840]
	177 Move X28, [X28+376]
	178 Move X27, [X27+2504]
	179 Move X0, X31
	180 Call Application.get_platform
	181 Move W8, [X19+120]
	182 NotImplemented "Instruction CMP not yet implemented."
	183 NotImplemented "Instruction CMP not yet implemented."
	184 Compare W8, 0
	185 JumpIfNotEqual {274}
	186 Move W8, [X19+108]
	187 Move X24, 0xBA5000
	188 Move X0, X19
	189 Move [X31+12], W8
	190 Move X24, [X24+1528]
	191 Call Recorder.get_MicrophoneType, X0
	192 NotImplemented "Instruction CMP not yet implemented."
	193 Compare W0, 0
	194 JumpIfNotEqual {374}
	195 Move W26, W31
	196 Move TEMP, X26
	197 And TEMP, TEMP, 1
	198 Compare TEMP, 1
	199 JumpIfEqual {864}
	200 Add X8, X19, 176
	201 Add X9, X19, 184
	202 Add X10, X19, 192
	203 Move X8, [X19+144]
	204 Move X23, X20
	205 Compare X8, 0
	206 JumpIfNotEqual {488}
	207 Move X9, [X19+32]
	208 Compare X9, 0
	209 JumpIfEqual {1925}
	210 Move X21, [X27]
	211 Move X20, [X9+24]
	212 Move X8, [X21+56]
	213 Compare X8, 0
	214 JumpIfNotEqual {218}
	215 Move X0, X21
	216 Call 0x1C5D6E0
	217 Move X8, [X21+56]
	218 Move X0, [X8+16]
	219 Move W8, [X0+309]
	220 Move TEMP, X8
	221 And TEMP, TEMP, 1
	222 Compare TEMP, 1
	223 JumpIfEqual {225}
	224 Call 0x1C5D684
	225 Move W8, [X0+224]
	226 Compare W8, 0
	227 JumpIfNotEqual {229}
	228 Call 0x1C17DFC
	229 Move X8, [X21+56]
	230 Move X0, [X8+16]
	231 Move W8, [X0+309]
	232 Move TEMP, X8
	233 And TEMP, TEMP, 1
	234 Compare TEMP, 1
	235 JumpIfEqual {237}
	236 Call 0x1C5D684
	237 Compare X20, 0
	238 JumpIfEqual {1925}
	239 Move X10, 0xBC0000
	240 Move X9, [X0+184]
	241 Move X8, [X20]
	242 Move X1, [X25]
	243 Move X10, [X10+792]
	244 Move X21, [X9]
	245 NotImplemented "Instruction LDRH not yet implemented."
	246 Move X22, [X10]
	247 Compare X9, 0
	248 JumpIfEqual {255}
	249 Move X10, [X8+176]
	250 Add X10, X10, 8
	251 NotImplemented "Instruction LDUR not yet implemented."
	252 NotImplemented "Instruction CMP not yet implemented."
	253 Subtract X9, X9, 1
	254 Add X10, X10, 16
	255 Move W2, 1
	256 Move X0, X20
	257 Call 0x1C5D788
	258 Move X20, [X19+128]
	259 Compare X20, 0
	260 JumpIfEqual {321}
	261 Move X8, 0xBC0000
	262 Move X8, [X8+472]
	263 Move X0, [X8]
	264 Call 0x1C17F10
	265 Move X1, X20
	266 Move X2, X31
	267 Move X21, X0
	268 Call AudioClipWrapper..ctor, X0, X1
	269 Compare X21, 0
	270 JumpIfEqual {1925}
	271 Move W8, [X19+136]
	272 Move [X21+32], W8
	273 Move [X19+72], X21
	274 Move X8, [X19+32]
	275 Compare X8, 0
	276 JumpIfEqual {1925}
	277 Move X9, X20
	278 Move X0, [X9]
	279 Move X20, [X8+24]
	280 Move W1, 1
	281 Call 0x1C17D6C
	282 Move X9, 0xBC0000
	283 Move W8, [X19+120]
	284 Move X9, [X9+640]
	285 Move X21, X0
	286 Add X1, X31, 128
	287 Move [X31+128], W8
	288 Move X0, [X9]
	289 Call 0x1C17E04
	290 Compare X21, 0
	291 JumpIfEqual {1925}
	292 Move X19, X0
	293 Compare X0, 0
	294 JumpIfEqual {301}
	295 Move X8, [X21]
	296 Move X0, X19
	297 Move X1, [X8+64]
	298 Call 0x1C17E00
	299 Compare X0, 0
	300 JumpIfEqual {1927}
	301 Move W8, [X21+24]
	302 Compare W8, 0
	303 JumpIfEqual {1926}
	304 Move [X21+32], X19
	305 Compare X20, 0
	306 JumpIfEqual {1925}
	307 Move X10, 0xBC0000
	308 Move X8, [X20]
	309 Move X1, [X25]
	310 Move X10, [X10+808]
	311 NotImplemented "Instruction LDRH not yet implemented."
	312 Move X19, [X10]
	313 Compare X9, 0
	314 JumpIfEqual {423}
	315 Move X10, [X8+176]
	316 Add X10, X10, 8
	317 NotImplemented "Instruction LDUR not yet implemented."
	318 NotImplemented "Instruction CMP not yet implemented."
	319 Subtract X9, X9, 1
	320 Add X10, X10, 16
	321 Move X9, [X19+32]
	322 Compare X9, 0
	323 JumpIfEqual {1925}
	324 Move X20, [X27]
	325 Move X19, [X9+24]
	326 Move X8, [X20+56]
	327 Compare X8, 0
	328 JumpIfNotEqual {332}
	329 Move X0, X20
	330 Call 0x1C5D6E0
	331 Move X8, [X20+56]
	332 Move X0, [X8+16]
	333 Move W8, [X0+309]
	334 Move TEMP, X8
	335 And TEMP, TEMP, 1
	336 Compare TEMP, 1
	337 JumpIfEqual {339}
	338 Call 0x1C5D684
	339 Move W8, [X0+224]
	340 Compare W8, 0
	341 JumpIfNotEqual {343}
	342 Call 0x1C17DFC
	343 Move X8, [X20+56]
	344 Move X0, [X8+16]
	345 Move W8, [X0+309]
	346 Move TEMP, X8
	347 And TEMP, TEMP, 1
	348 Compare TEMP, 1
	349 JumpIfEqual {351}
	350 Call 0x1C5D684
	351 Compare X19, 0
	352 JumpIfEqual {1925}
	353 Move X10, 0xBBF000
	354 Move X9, [X0+184]
	355 Move X8, [X19]
	356 Move X1, [X25]
	357 Move X10, [X10+720]
	358 Move X20, [X9]
	359 NotImplemented "Instruction LDRH not yet implemented."
	360 Move X21, [X10]
	361 Compare X9, 0
	362 JumpIfEqual {718}
	363 Move X10, [X8+176]
	364 Add X10, X10, 8
	365 NotImplemented "Instruction LDUR not yet implemented."
	366 NotImplemented "Instruction CMP not yet implemented."
	367 Subtract X9, X9, 1
	368 Add X10, X10, 16
	369 Move X8, [X19+208]
	370 Move V1, [X19+176]
	371 Move V0, [X19+192]
	372 Move W26, W31
	373 Move [X31+256], X8
	374 Move X8, [X19+32]
	375 Compare X8, 0
	376 JumpIfEqual {1925}
	377 Move X9, X20
	378 Move X0, [X9]
	379 Move X20, [X8+24]
	380 Move W1, 1
	381 Call 0x1C17D6C
	382 Move X21, X0
	383 Move X0, X19
	384 Call Recorder.get_MicrophoneType, X0
	385 Move X8, 0xBBF000
	386 Move X8, [X8+648]
	387 Move [X31+128], W0
	388 Add X1, X31, 128
	389 Move X8, [X8]
	390 Move X0, X8
	391 Call 0x1C17E04
	392 Compare X21, 0
	393 JumpIfEqual {1925}
	394 Move X19, X0
	395 Compare X0, 0
	396 JumpIfEqual {403}
	397 Move X8, [X21]
	398 Move X0, X19
	399 Move X1, [X8+64]
	400 Call 0x1C17E00
	401 Compare X0, 0
	402 JumpIfEqual {1927}
	403 Move W8, [X21+24]
	404 Compare W8, 0
	405 JumpIfEqual {1926}
	406 Move [X21+32], X19
	407 Compare X20, 0
	408 JumpIfEqual {1925}
	409 Move X10, 0xBBF000
	410 Move X8, [X20]
	411 Move X1, [X25]
	412 Move X10, [X10+776]
	413 NotImplemented "Instruction LDRH not yet implemented."
	414 Move X19, [X10]
	415 Compare X9, 0
	416 JumpIfEqual {423}
	417 Move X10, [X8+176]
	418 Add X10, X10, 8
	419 NotImplemented "Instruction LDUR not yet implemented."
	420 NotImplemented "Instruction CMP not yet implemented."
	421 Subtract X9, X9, 1
	422 Add X10, X10, 16
	423 Move W2, 1
	424 Move X0, X20
	425 Call 0x1C5D788
	426 Move W9, [X10]
	427 Add W9, W9, 1
	428 Add X8, X8, W9
	429 Add X0, X8, 312
	430 Move X8, [X0]
	431 Move X4, [X0+8]
	432 Move W1, 1
	433 Move X0, X20
	434 Move X2, X19
	435 Move X3, X21
	436 Move W9, [X10]
	437 Add W9, W9, 1
	438 Add X8, X8, W9
	439 Add X0, X8, 312
	440 Move X8, [X0]
	441 Move X4, [X0+8]
	442 Move W1, 2
	443 Move X0, X20
	444 Move X2, X22
	445 Move X3, X21
	446 NotImplemented "Instruction BLR not yet implemented."
	447 Move X22, 0xBBF000
	448 Move X22, [X22+680]
	449 Move X0, [X22]
	450 Move W8, [X0+224]
	451 Compare W8, 0
	452 JumpIfNotEqual {455}
	453 Call 0x1C17DFC
	454 Move X0, [X22]
	455 Move X8, [X0+184]
	456 Move X20, [X8+8]
	457 Compare X20, 0
	458 JumpIfNotEqual {480}
	459 Move W8, [X0+224]
	460 Compare W8, 0
	461 JumpIfNotEqual {464}
	462 Call 0x1C17DFC
	463 Move X0, [X22]
	464 Move X9, 0xBBF000
	465 Move X8, [X0+184]
	466 Move X9, [X9+632]
	467 Move X21, [X8]
	468 Move X0, [X9]
	469 Call 0x1C17F10
	470 Move X8, 0xBBF000
	471 Move X8, [X8+672]
	472 Move X1, X21
	473 Move X3, X31
	474 Move X20, X0
	475 Move X2, [X8]
	476 Call Func`1<Object>..ctor, X0, X1, X2
	477 Move X8, [X22]
	478 Move X8, [X8+184]
	479 Move [X8+8], X20
	480 Compare X19, 0
	481 JumpIfEqual {1925}
	482 Move X0, X19
	483 Move X1, X20
	484 Call Recorder.set_InputFactory, X0, X1
	485 Move X8, [X19+144]
	486 Compare X8, 0
	487 JumpIfEqual {1925}
	488 Move X9, [X8+24]
	489 Move X0, [X8+64]
	490 Move X1, [X8+40]
	491 NotImplemented "Instruction BLR not yet implemented."
	492 Move [X19+72], X0
	493 Compare X0, 0
	494 JumpIfEqual {1925}
	495 Move X8, [X0]
	496 Move X1, [X28]
	497 Move X20, X0
	498 NotImplemented "Instruction LDRH not yet implemented."
	499 Compare X9, 0
	500 JumpIfEqual {507}
	501 Move X10, [X8+176]
	502 Add X10, X10, 8
	503 NotImplemented "Instruction LDUR not yet implemented."
	504 NotImplemented "Instruction CMP not yet implemented."
	505 Subtract X9, X9, 1
	506 Add X10, X10, 16
	507 Move W2, 2
	508 Move X0, X20
	509 Call 0x1C5D788
	510 Move W9, [X10]
	511 Add W9, W9, 2
	512 Add X8, X8, W9
	513 Add X0, X8, 312
	514 Move X8, [X0]
	515 Move X1, [X0+8]
	516 Move X0, X20
	517 NotImplemented "Instruction BLR not yet implemented."
	518 Compare X0, 0
	519 JumpIfEqual {598}
	520 Move X8, [X19+32]
	521 Compare X8, 0
	522 JumpIfEqual {1925}
	523 Move X0, [X23]
	524 Move X20, [X8+24]
	525 Move W1, 1
	526 Call 0x1C17D6C
	527 Move X22, [X19+72]
	528 Compare X22, 0
	529 JumpIfEqual {1925}
	530 Move X8, [X22]
	531 Move X1, [X28]
	532 Move X21, X0
	533 NotImplemented "Instruction LDRH not yet implemented."
	534 Compare X9, 0
	535 JumpIfEqual {542}
	536 Move X10, [X8+176]
	537 Add X10, X10, 8
	538 NotImplemented "Instruction LDUR not yet implemented."
	539 NotImplemented "Instruction CMP not yet implemented."
	540 Subtract X9, X9, 1
	541 Add X10, X10, 16
	542 Move W2, 2
	543 Move X0, X22
	544 Call 0x1C5D788
	545 Move W9, [X10]
	546 Add W9, W9, 2
	547 Add X8, X8, W9
	548 Add X0, X8, 312
	549 Move X8, [X0]
	550 Move X1, [X0+8]
	551 Move X0, X22
	552 NotImplemented "Instruction BLR not yet implemented."
	553 Compare X21, 0
	554 JumpIfEqual {1925}
	555 Move X22, X0
	556 Compare X0, 0
	557 JumpIfEqual {564}
	558 Move X8, [X21]
	559 Move X0, X22
	560 Move X1, [X8+64]
	561 Call 0x1C17E00
	562 Compare X0, 0
	563 JumpIfEqual {1927}
	564 Move W8, [X21+24]
	565 Compare W8, 0
	566 JumpIfEqual {1926}
	567 Move [X21+32], X22
	568 Compare X20, 0
	569 JumpIfEqual {1925}
	570 Move X10, 0xBBF000
	571 Move X8, [X20]
	572 Move X1, [X25]
	573 Move X10, [X10+712]
	574 NotImplemented "Instruction LDRH not yet implemented."
	575 Move X22, [X10]
	576 Compare X9, 0
	577 JumpIfEqual {584}
	578 Move X10, [X8+176]
	579 Add X10, X10, 8
	580 NotImplemented "Instruction LDUR not yet implemented."
	581 NotImplemented "Instruction CMP not yet implemented."
	582 Subtract X9, X9, 1
	583 Add X10, X10, 16
	584 Move W2, 1
	585 Move X0, X20
	586 Call 0x1C5D788
	587 Move W9, [X10]
	588 Add W9, W9, 1
	589 Add X8, X8, W9
	590 Add X0, X8, 312
	591 Move X8, [X0]
	592 Move X4, [X0+8]
	593 Move W1, 1
	594 Move X0, X20
	595 Move X2, X22
	596 Move X3, X21
	597 NotImplemented "Instruction BLR not yet implemented."
	598 Move X20, [X19+72]
	599 Compare X20, 0
	600 JumpIfEqual {732}
	601 Move X8, [X20]
	602 Move X1, [X28]
	603 NotImplemented "Instruction LDRH not yet implemented."
	604 Compare X9, 0
	605 JumpIfEqual {612}
	606 Move X10, [X8+176]
	607 Add X10, X10, 8
	608 NotImplemented "Instruction LDUR not yet implemented."
	609 NotImplemented "Instruction CMP not yet implemented."
	610 Subtract X9, X9, 1
	611 Add X10, X10, 16
	612 Move W2, 2
	613 Move X0, X20
	614 Call 0x1C5D788
	615 Move W9, [X10]
	616 Add W9, W9, 2
	617 Add X8, X8, W9
	618 Add X0, X8, 312
	619 Move X8, [X0]
	620 Move X1, [X0+8]
	621 Move X0, X20
	622 NotImplemented "Instruction BLR not yet implemented."
	623 Compare X0, 0
	624 JumpIfNotEqual {732}
	625 Move X20, [X19+72]
	626 Compare X20, 0
	627 JumpIfEqual {1925}
	628 Move X8, [X20]
	629 Move X1, [X28]
	630 NotImplemented "Instruction LDRH not yet implemented."
	631 Compare X9, 0
	632 JumpIfEqual {639}
	633 Move X10, [X8+176]
	634 Add X10, X10, 8
	635 NotImplemented "Instruction LDUR not yet implemented."
	636 NotImplemented "Instruction CMP not yet implemented."
	637 Subtract X9, X9, 1
	638 Add X10, X10, 16
	639 Move W2, 1
	640 Move X0, X20
	641 Call 0x1C5D788
	642 Move W9, [X10]
	643 Add W9, W9, 1
	644 Add X8, X8, W9
	645 Add X0, X8, 312
	646 Move X8, [X0]
	647 Move X1, [X0+8]
	648 Move X0, X20
	649 NotImplemented "Instruction BLR not yet implemented."
	650 Compare W0, 0
	651 JumpIfEqual {670}
	652 Move X21, [X19+72]
	653 Compare X21, 0
	654 JumpIfEqual {1925}
	655 Move X8, [X21]
	656 Move W20, [X19+108]
	657 Move X1, [X28]
	658 NotImplemented "Instruction LDRH not yet implemented."
	659 Compare X9, 0
	660 JumpIfEqual {667}
	661 Move X10, [X8+176]
	662 Add X10, X10, 8
	663 NotImplemented "Instruction LDUR not yet implemented."
	664 NotImplemented "Instruction CMP not yet implemented."
	665 Subtract X9, X9, 1
	666 Add X10, X10, 16
	667 Move W2, 1
	668 Move X0, X21
	669 Call 0x1C5D788
	670 Move X9, [X19+32]
	671 Compare X9, 0
	672 JumpIfEqual {1925}
	673 Move X20, [X27]
	674 Move X19, [X9+24]
	675 Move X8, [X20+56]
	676 Compare X8, 0
	677 JumpIfNotEqual {681}
	678 Move X0, X20
	679 Call 0x1C5D6E0
	680 Move X8, [X20+56]
	681 Move X0, [X8+16]
	682 Move W8, [X0+309]
	683 Move TEMP, X8
	684 And TEMP, TEMP, 1
	685 Compare TEMP, 1
	686 JumpIfEqual {688}
	687 Call 0x1C5D684
	688 Move W8, [X0+224]
	689 Compare W8, 0
	690 JumpIfNotEqual {692}
	691 Call 0x1C17DFC
	692 Move X8, [X20+56]
	693 Move X0, [X8+16]
	694 Move W8, [X0+309]
	695 Move TEMP, X8
	696 And TEMP, TEMP, 1
	697 Compare TEMP, 1
	698 JumpIfEqual {700}
	699 Call 0x1C5D684
	700 Compare X19, 0
	701 JumpIfEqual {1925}
	702 Move X10, 0xBBF000
	703 Move X9, [X0+184]
	704 Move X8, [X19]
	705 Move X1, [X25]
	706 Move X10, [X10+704]
	707 Move X20, [X9]
	708 NotImplemented "Instruction LDRH not yet implemented."
	709 Move X21, [X10]
	710 Compare X9, 0
	711 JumpIfEqual {718}
	712 Move X10, [X8+176]
	713 Add X10, X10, 8
	714 NotImplemented "Instruction LDUR not yet implemented."
	715 NotImplemented "Instruction CMP not yet implemented."
	716 Subtract X9, X9, 1
	717 Add X10, X10, 16
	718 Move W2, 1
	719 Move X0, X19
	720 Call 0x1C5D788
	721 Move W9, [X10]
	722 Add W9, W9, 1
	723 Add X8, X8, W9
	724 Add X0, X8, 312
	725 Move X8, [X0]
	726 Move X4, [X0+8]
	727 Move W1, 1
	728 Move X0, X19
	729 Move X2, X21
	730 Move X3, X20
	731 NotImplemented "Instruction BLR not yet implemented."
	732 Move X19, 0xBBE000
	733 Move X19, [X19+2080]
	734 Move X0, [X19]
	735 Move W8, [X0+224]
	736 Compare W8, 0
	737 JumpIfNotEqual {740}
	738 Call 0x1C17DFC
	739 Move X0, [X19]
	740 Move X8, [X0+184]
	741 Move X0, [X8]
	742 Add X31, X31, 512
	743 Move X20, [X31+80]
	744 Move X19, [X31+88]
	745 Move X22, [X31+64]
	746 Move X21, [X31+72]
	747 Move X24, [X31+48]
	748 Move X23, [X31+56]
	749 Move X26, [X31+32]
	750 Move X25, [X31+40]
	751 Move X28, [X31+16]
	752 Move X27, [X31+24]
	753 Move X29, [X31+96]
	754 Move X30, [X31+104]
	755 Return X0
	756 Move W9, [X10]
	757 Add W9, W9, 1
	758 Add X8, X8, W9
	759 Add X0, X8, 312
	760 Move X8, [X0]
	761 Move X1, [X0+8]
	762 Move X0, X21
	763 NotImplemented "Instruction BLR not yet implemented."
	764 Move W2, [X19+112]
	765 Move W3, [X19+116]
	766 Move X4, [X19+56]
	767 Move W1, W0
	768 Add X8, X31, 128
	769 Move W0, W20
	770 Move X5, X31
	771 Call VoiceInfo.CreateAudioOpus, X0, X1, X2, X3, X4
	772 Move X8, 0xBBF000
	773 Move V0, [X31+128]
	774 Move V1, [X31+144]
	775 Move V2, [X31+10]
	776 Move X8, [X8+624]
	777 Move X0, X19
	778 Move [X31+464], V0
	779 Move [X31+472], V1
	780 Move [X31+31], V2
	781 Move X1, [X8]
	782 Move [X31+460], W31
	783 Call 0x21A4894, X0
	784 Move X8, 0xB7C000
	785 Move X8, [X8+1432]
	786 Move X20, X0
	787 Move X8, [X8]
	788 Move W9, [X8+224]
	789 Compare W9, 0
	790 JumpIfNotEqual {793}
	791 Move X0, X8
	792 Call 0x1C17DFC
	793 Move X0, X31
	794 Move X1, X20
	795 Move X2, X31
	796 Call Object.op_Inequality, X0, X1
	797 Move TEMP, X0
	798 And TEMP, TEMP, 1
	799 Compare TEMP, 1
	800 JumpIfNotEqual {807}
	801 Compare X20, 0
	802 JumpIfEqual {1925}
	803 Add X1, X31, 464
	804 Add X2, X31, 460
	805 Move X0, X20
	806 Call WebRtcAudioDsp.AdjustVoiceInfo, X0, X1, X2
	807 NotImplemented "Instruction MOVI not yet implemented."
	808 Move [X31+304], V0
	809 Move [X31+312], V0
	810 Move W8, [X19+88]
	811 Move [X31+312], W8
	812 Move W8, [X19+89]
	813 Compare W8, 0
	814 JumpIfEqual {816}
	815 Move X8, [X19+96]
	816 Move X8, X31
	817 Move [X31+320], X8
	818 Move W8, [X19+104]
	819 Move [X31+328], W8
	820 Move W8, [X19+106]
	821 Move [X31+330], W8
	822 Move W8, [X19+105]
	823 Move [X31+329], W8
	824 Move V0, [X31+304]
	825 Move V1, [X31+320]
	826 Move [X31+416], V0
	827 Move [X31+424], V1
	828 Move X8, [X19+80]
	829 Compare X8, 0
	830 JumpIfEqual {1925}
	831 Move X8, [X8+72]
	832 Compare X8, 0
	833 JumpIfEqual {1925}
	834 Move V0, [X31+464]
	835 Move V1, [X31+480]
	836 Move V2, [X31+31]
	837 Move X0, [X8+392]
	838 Move V3, [X31+416]
	839 Move V4, [X31+432]
	840 Move [X31+128], V0
	841 Move [X31+136], V1
	842 Move [X31+10], V2
	843 Move X2, [X19+72]
	844 Move W3, [X31+460]
	845 Move [X31+96], V3
	846 Move [X31+104], V4
	847 Compare X0, 0
	848 JumpIfEqual {1925}
	849 Move V0, [X31+128]
	850 Move V1, [X31+144]
	851 Move V2, [X31+10]
	852 Move V3, [X31+96]
	853 Move V4, [X31+112]
	854 Add X1, X31, 48
	855 Add X5, X31, 16
	856 Move W4, 1
	857 Move X6, X31
	858 Move [X31+48], V0
	859 Move [X31+56], V1
	860 Move [X31+5], V2
	861 Move [X31+16], V3
	862 Move [X31+24], V4
	863 Call VoiceClient.CreateLocalVoiceAudioFromSource, X0, X1, X2, X3, X4, X5
	864 Move X0, [X24]
	865 Move W8, [X0+224]
	866 Compare W8, 0
	867 JumpIfNotEqual {870}
	868 Call 0x1C17DFC
	869 Move X0, [X24]
	870 Move X8, [X0+184]
	871 Add X9, X8, 8
	872 Add X10, X8, 16
	873 Move X11, [X10+16]
	874 Move V0, [X10]
	875 Move X21, [X9]
	876 Move X24, [X8]
	877 Move [X31+288], X11
	878 Move [X31+17], V0
	879 Move [X31+24], V0
	880 Move [X31+400], X11
	881 Move X8, [X19+32]
	882 Compare X8, 0
	883 JumpIfEqual {1925}
	884 Move X0, [X20]
	885 Move X22, [X8+24]
	886 Move W1, 1
	887 Call 0x1C17D6C
	888 Move X9, 0xBA4000
	889 Move V0, [X31+24]
	890 Move X8, [X31+400]
	891 Move X9, [X9+1528]
	892 Move X23, X0
	893 Add X1, X31, 128
	894 Move [X31+128], X24
	895 Move [X31+136], X21
	896 Move X0, [X9]
	897 Move [X31+9], V0
	898 Move [X31+160], X8
	899 Call 0x1C17E04
	900 Compare X23, 0
	901 JumpIfEqual {1925}
	902 Move X24, X0
	903 Compare X0, 0
	904 JumpIfEqual {911}
	905 Move X8, [X23]
	906 Move X0, X24
	907 Move X1, [X8+64]
	908 Call 0x1C17E00
	909 Compare X0, 0
	910 JumpIfEqual {1927}
	911 Move W8, [X23+24]
	912 Compare W8, 0
	913 JumpIfEqual {1926}
	914 Move [X23+32], X24
	915 Compare X22, 0
	916 JumpIfEqual {1925}
	917 Move X10, 0xBBF000
	918 Move X8, [X22]
	919 Move X10, [X10+768]
	920 Move X1, [X25]
	921 NotImplemented "Instruction LDRH not yet implemented."
	922 Move X24, [X10]
	923 Compare X9, 0
	924 JumpIfEqual {931}
	925 Move X10, [X8+176]
	926 Add X10, X10, 8
	927 NotImplemented "Instruction LDUR not yet implemented."
	928 NotImplemented "Instruction CMP not yet implemented."
	929 Subtract X9, X9, 1
	930 Add X10, X10, 16
	931 Move W2, 1
	932 Move X0, X22
	933 Call 0x1C5D788
	934 Move W9, [X10]
	935 Add W9, W9, 1
	936 Add X8, X8, W9
	937 Add X0, X8, 312
	938 Move X8, [X0]
	939 Move X4, [X0+8]
	940 Move W1, 3
	941 Move X0, X22
	942 Move X2, X24
	943 Move X3, X23
	944 NotImplemented "Instruction BLR not yet implemented."
	945 Move W8, [X19+173]
	946 Compare W8, 0
	947 JumpIfEqual {977}
	948 Move X0, X19
	949 Move X1, X31
	950 Call Component.get_gameObject, X0
	951 Move X8, 0xBA4000
	952 Move X8, [X8+1528]
	953 Move X23, X0
	954 Move X8, [X8]
	955 Move W9, [X8+224]
	956 Compare W9, 0
	957 JumpIfNotEqual {960}
	958 Move X0, X8
	959 Call 0x1C17DFC
	960 Move X8, [X19+32]
	961 Compare X8, 0
	962 JumpIfEqual {1925}
	963 Move X9, 0xBBF000
	964 Move X9, [X9+656]
	965 Move X24, [X8+24]
	966 Move X0, [X9]
	967 Call 0x1C17F10
	968 Move W3, [X31+12]
	969 Move X1, X23
	970 Move X2, X21
	971 Move X4, X24
	972 Move X5, X31
	973 Move X22, X0
	974 Call MicWrapperPusher..ctor, X0, X1, X2, X3, X4
	975 Move X24, 0xBA4000
	976 Move X24, [X24+1528]
	977 Move X24, 0xBA4000
	978 Move X24, [X24+1528]
	979 Move X0, [X24]
	980 Move W8, [X0+224]
	981 Compare W8, 0
	982 JumpIfNotEqual {984}
	983 Call 0x1C17DFC
	984 Move X8, [X19+32]
	985 Compare X8, 0
	986 JumpIfEqual {1925}
	987 Move X9, 0xBBF000
	988 Move X9, [X9+664]
	989 Move X23, [X8+24]
	990 Move X0, [X9]
	991 Call 0x1C17F10
	992 Move W2, [X31+12]
	993 Move X1, X21
	994 Move X3, X23
	995 Move X4, X31
	996 Move X22, X0
	997 Call MicWrapper..ctor, X0, X1, X2, X3
	998 Move [X19+72], X22
	999 Compare X22, 0
	1000 JumpIfEqual {1103}
	1001 Move X8, [X22]
	1002 Move X1, [X28]
	1003 NotImplemented "Instruction LDRH not yet implemented."
	1004 Compare X9, 0
	1005 JumpIfEqual {1012}
	1006 Move X10, [X8+176]
	1007 Add X10, X10, 8
	1008 NotImplemented "Instruction LDUR not yet implemented."
	1009 NotImplemented "Instruction CMP not yet implemented."
	1010 Subtract X9, X9, 1
	1011 Add X10, X10, 16
	1012 Move W2, 2
	1013 Move X0, X22
	1014 Call 0x1C5D788
	1015 Move W9, [X10]
	1016 Add W9, W9, 2
	1017 Add X8, X8, W9
	1018 Add X0, X8, 312
	1019 Move X8, [X0]
	1020 Move X1, [X0+8]
	1021 Move X0, X22
	1022 NotImplemented "Instruction BLR not yet implemented."
	1023 Compare X0, 0
	1024 JumpIfEqual {598}
	1025 Move X8, [X19+32]
	1026 Compare X8, 0
	1027 JumpIfEqual {1925}
	1028 Move X0, [X20]
	1029 Move X21, [X8+24]
	1030 Move W1, 1
	1031 Call 0x1C17D6C
	1032 Move X23, [X19+72]
	1033 Compare X23, 0
	1034 JumpIfEqual {1925}
	1035 Move X8, [X23]
	1036 Move X1, [X28]
	1037 Move X22, X0
	1038 NotImplemented "Instruction LDRH not yet implemented."
	1039 Compare X9, 0
	1040 JumpIfEqual {1047}
	1041 Move X10, [X8+176]
	1042 Add X10, X10, 8
	1043 NotImplemented "Instruction LDUR not yet implemented."
	1044 NotImplemented "Instruction CMP not yet implemented."
	1045 Subtract X9, X9, 1
	1046 Add X10, X10, 16
	1047 Move W2, 2
	1048 Move X0, X23
	1049 Call 0x1C5D788
	1050 Move W9, [X10]
	1051 Add W9, W9, 2
	1052 Add X8, X8, W9
	1053 Add X0, X8, 312
	1054 Move X8, [X0]
	1055 Move X1, [X0+8]
	1056 Move X0, X23
	1057 NotImplemented "Instruction BLR not yet implemented."
	1058 Compare X22, 0
	1059 JumpIfEqual {1925}
	1060 Move X23, X0
	1061 Compare X0, 0
	1062 JumpIfEqual {1069}
	1063 Move X8, [X22]
	1064 Move X0, X23
	1065 Move X1, [X8+64]
	1066 Call 0x1C17E00
	1067 Compare X0, 0
	1068 JumpIfEqual {1927}
	1069 Move W8, [X22+24]
	1070 Compare W8, 0
	1071 JumpIfEqual {1926}
	1072 Move [X22+32], X23
	1073 Compare X21, 0
	1074 JumpIfEqual {1925}
	1075 Move X10, 0xBBF000
	1076 Move X8, [X21]
	1077 Move X10, [X10+760]
	1078 Move X1, [X25]
	1079 NotImplemented "Instruction LDRH not yet implemented."
	1080 Move X23, [X10]
	1081 Compare X9, 0
	1082 JumpIfEqual {1089}
	1083 Move X10, [X8+176]
	1084 Add X10, X10, 8
	1085 NotImplemented "Instruction LDUR not yet implemented."
	1086 NotImplemented "Instruction CMP not yet implemented."
	1087 Subtract X9, X9, 1
	1088 Add X10, X10, 16
	1089 Move W2, 1
	1090 Move X0, X21
	1091 Call 0x1C5D788
	1092 Move W9, [X10]
	1093 Add W9, W9, 1
	1094 Add X8, X8, W9
	1095 Add X0, X8, 312
	1096 Move X8, [X0]
	1097 Move X4, [X0+8]
	1098 Move W1, 1
	1099 Move X0, X21
	1100 Move X2, X23
	1101 Move X3, X22
	1102 NotImplemented "Instruction BLR not yet implemented."
	1103 Move W8, [X19+174]
	1104 NotImplemented "Instruction CMP not yet implemented."
	1105 NotImplemented "Instruction CSET not yet implemented."
	1106 Or W8, W26, W8
	1107 Move TEMP, X8
	1108 And TEMP, TEMP, 1
	1109 Compare TEMP, 1
	1110 JumpIfEqual {598}
	1111 Move X9, [X19+32]
	1112 Compare X9, 0
	1113 JumpIfEqual {1925}
	1114 Move X22, [X27]
	1115 Move X21, [X9+24]
	1116 Move X8, [X22+56]
	1117 Compare X8, 0
	1118 JumpIfNotEqual {1122}
	1119 Move X0, X22
	1120 Call 0x1C5D6E0
	1121 Move X8, [X22+56]
	1122 Move X0, [X8+16]
	1123 Move W8, [X0+309]
	1124 Move TEMP, X8
	1125 And TEMP, TEMP, 1
	1126 Compare TEMP, 1
	1127 JumpIfEqual {1129}
	1128 Call 0x1C5D684
	1129 Move W8, [X0+224]
	1130 Compare W8, 0
	1131 JumpIfNotEqual {1133}
	1132 Call 0x1C17DFC
	1133 Move X8, [X22+56]
	1134 Move X0, [X8+16]
	1135 Move W8, [X0+309]
	1136 Move TEMP, X8
	1137 And TEMP, TEMP, 1
	1138 Compare TEMP, 1
	1139 JumpIfEqual {1141}
	1140 Call 0x1C5D684
	1141 Compare X21, 0
	1142 JumpIfEqual {1925}
	1143 Move X10, 0xBBF000
	1144 Move X9, [X0+184]
	1145 Move X8, [X21]
	1146 Move X10, [X10+696]
	1147 Move X1, [X25]
	1148 Move X22, [X9]
	1149 NotImplemented "Instruction LDRH not yet implemented."
	1150 Move X23, [X10]
	1151 Compare X9, 0
	1152 JumpIfEqual {1159}
	1153 Move X10, [X8+176]
	1154 Add X10, X10, 8
	1155 NotImplemented "Instruction LDUR not yet implemented."
	1156 NotImplemented "Instruction CMP not yet implemented."
	1157 Subtract X9, X9, 1
	1158 Add X10, X10, 16
	1159 Move W2, 1
	1160 Move X0, X21
	1161 Call 0x1C5D788
	1162 Move W9, [X10]
	1163 Add W9, W9, 1
	1164 Add X8, X8, W9
	1165 Add X0, X8, 312
	1166 Move X8, [X0]
	1167 Move X4, [X0+8]
	1168 Move W1, 1
	1169 Move X0, X21
	1170 Move X2, X23
	1171 Move X3, X22
	1172 NotImplemented "Instruction BLR not yet implemented."
	1173 Move X0, [X24]
	1174 Move W8, [X0+224]
	1175 Compare W8, 0
	1176 JumpIfNotEqual {1179}
	1177 Call 0x1C17DFC
	1178 Move X0, [X24]
	1179 Move X8, [X0+184]
	1180 Move W26, 1
	1181 Move X9, [X8+32]
	1182 Move V1, [X8]
	1183 Move V0, [X8+16]
	1184 Move [X31+256], X9
	1185 Move [X31+224], V1
	1186 Move [X31+232], V0
	1187 Move V0, [X31+224]
	1188 Move V1, [X31+240]
	1189 Move X8, [X31+256]
	1190 Move [X31+336], V0
	1191 Move [X31+344], V1
	1192 Move [X31+368], X8
	1193 Move X8, [X19+32]
	1194 Compare X8, 0
	1195 JumpIfEqual {1925}
	1196 Move X0, [X20]
	1197 Move X21, [X8+24]
	1198 Move W1, 1
	1199 Call 0x1C17D6C
	1200 Move X22, X0
	1201 Move V0, [X31+336]
	1202 Move V1, [X31+352]
	1203 Move X8, [X31+368]
	1204 Move X0, [X24]
	1205 Add X1, X31, 128
	1206 Move [X31+128], V0
	1207 Move [X31+136], V1
	1208 Move [X31+160], X8
	1209 Call 0x1C17E04
	1210 Compare X22, 0
	1211 JumpIfEqual {1925}
	1212 Move X23, X0
	1213 Compare X0, 0
	1214 JumpIfEqual {1221}
	1215 Move X8, [X22]
	1216 Move X0, X23
	1217 Move X1, [X8+64]
	1218 Call 0x1C17E00
	1219 Compare X0, 0
	1220 JumpIfEqual {1927}
	1221 Move W8, [X22+24]
	1222 Compare W8, 0
	1223 JumpIfEqual {1926}
	1224 Move [X22+32], X23
	1225 Compare X21, 0
	1226 JumpIfEqual {1925}
	1227 Move X10, 0xBBF000
	1228 Move X8, [X21]
	1229 Move X10, [X10+800]
	1230 Move X1, [X25]
	1231 NotImplemented "Instruction LDRH not yet implemented."
	1232 Move X23, [X10]
	1233 Compare X9, 0
	1234 JumpIfEqual {1241}
	1235 Move X10, [X8+176]
	1236 Add X10, X10, 8
	1237 NotImplemented "Instruction LDUR not yet implemented."
	1238 NotImplemented "Instruction CMP not yet implemented."
	1239 Subtract X9, X9, 1
	1240 Add X10, X10, 16
	1241 Move W2, 1
	1242 Move X0, X21
	1243 Call 0x1C5D788
	1244 Move W9, [X10]
	1245 Add W9, W9, 1
	1246 Add X8, X8, W9
	1247 Add X0, X8, 312
	1248 Move X8, [X0]
	1249 Move X4, [X0+8]
	1250 Move W1, 3
	1251 Move X0, X21
	1252 Move X2, X23
	1253 Move X3, X22
	1254 NotImplemented "Instruction BLR not yet implemented."
	1255 Move X0, [X29]
	1256 Move W8, [X0+224]
	1257 Compare W8, 0
	1258 JumpIfNotEqual {1260}
	1259 Call 0x1C17DFC
	1260 Move X0, X31
	1261 Call Application.get_platform
	1262 NotImplemented "Instruction CMP not yet implemented."
	1263 NotImplemented "Instruction CMP not yet implemented."
	1264 Move X9, [X19+32]
	1265 Compare X9, 0
	1266 JumpIfEqual {1925}
	1267 Move X22, [X27]
	1268 Move X21, [X9+24]
	1269 Move X8, [X22+56]
	1270 Compare X8, 0
	1271 JumpIfNotEqual {1275}
	1272 Move X0, X22
	1273 Call 0x1C5D6E0
	1274 Move X8, [X22+56]
	1275 Move X0, [X8+16]
	1276 Move W8, [X0+309]
	1277 Move TEMP, X8
	1278 And TEMP, TEMP, 1
	1279 Compare TEMP, 1
	1280 JumpIfEqual {1282}
	1281 Call 0x1C5D684
	1282 Move W8, [X0+224]
	1283 Compare W8, 0
	1284 JumpIfNotEqual {1286}
	1285 Call 0x1C17DFC
	1286 Move X8, [X22+56]
	1287 Move X0, [X8+16]
	1288 Move W8, [X0+309]
	1289 Move TEMP, X8
	1290 And TEMP, TEMP, 1
	1291 Compare TEMP, 1
	1292 JumpIfEqual {1294}
	1293 Call 0x1C5D684
	1294 Compare X21, 0
	1295 JumpIfEqual {1925}
	1296 Move X10, 0xBBF000
	1297 Move X9, [X0+184]
	1298 Move X8, [X21]
	1299 Move X1, [X25]
	1300 Move X10, [X10+840]
	1301 Move X22, [X9]
	1302 NotImplemented "Instruction LDRH not yet implemented."
	1303 Move X23, [X10]
	1304 Compare X9, 0
	1305 JumpIfEqual {1571}
	1306 Move X10, [X8+176]
	1307 Add X10, X10, 8
	1308 NotImplemented "Instruction LDUR not yet implemented."
	1309 NotImplemented "Instruction CMP not yet implemented."
	1310 Subtract X9, X9, 1
	1311 Add X10, X10, 16
	1312 Move X9, -43913216
	1313 Move W8, W0
	1314 Add X9, X9, 3542
	1315 NotImplemented "Instruction ADR not yet implemented."
	1316 NotImplemented "Instruction LDRH not yet implemented."
	1317 Add X10, X10, X11
	1318 CallNoReturn X10
	1319 Move X9, [X19+32]
	1320 Compare X9, 0
	1321 JumpIfEqual {1925}
	1322 Move X22, [X27]
	1323 Move X21, [X9+24]
	1324 Move X8, [X22+56]
	1325 Compare X8, 0
	1326 JumpIfNotEqual {1330}
	1327 Move X0, X22
	1328 Call 0x1C5D6E0
	1329 Move X8, [X22+56]
	1330 Move X0, [X8+16]
	1331 Move W8, [X0+309]
	1332 Move TEMP, X8
	1333 And TEMP, TEMP, 1
	1334 Compare TEMP, 1
	1335 JumpIfEqual {1337}
	1336 Call 0x1C5D684
	1337 Move W8, [X0+224]
	1338 Compare W8, 0
	1339 JumpIfNotEqual {1341}
	1340 Call 0x1C17DFC
	1341 Move X8, [X22+56]
	1342 Move X0, [X8+16]
	1343 Move W8, [X0+309]
	1344 Move TEMP, X8
	1345 And TEMP, TEMP, 1
	1346 Compare TEMP, 1
	1347 JumpIfEqual {1349}
	1348 Call 0x1C5D684
	1349 Compare X21, 0
	1350 JumpIfEqual {1925}
	1351 Move X10, 0xBBF000
	1352 Move X9, [X0+184]
	1353 Move X8, [X21]
	1354 Move X1, [X25]
	1355 Move X10, [X10+816]
	1356 Move X22, [X9]
	1357 NotImplemented "Instruction LDRH not yet implemented."
	1358 Move X23, [X10]
	1359 Compare X9, 0
	1360 JumpIfEqual {1571}
	1361 Move X10, [X8+176]
	1362 Add X10, X10, 8
	1363 NotImplemented "Instruction LDUR not yet implemented."
	1364 NotImplemented "Instruction CMP not yet implemented."
	1365 Subtract X9, X9, 1
	1366 Add X10, X10, 16
	1367 Subtract W8, W0, 18
	1368 NotImplemented "Instruction CMP not yet implemented."
	1369 NotImplemented "Instruction CMP not yet implemented."
	1370 Move X9, [X19+32]
	1371 Compare X9, 0
	1372 JumpIfEqual {1925}
	1373 Move X22, [X27]
	1374 Move X21, [X9+24]
	1375 Move X8, [X22+56]
	1376 Compare X8, 0
	1377 JumpIfNotEqual {1381}
	1378 Move X0, X22
	1379 Call 0x1C5D6E0
	1380 Move X8, [X22+56]
	1381 Move X0, [X8+16]
	1382 Move W8, [X0+309]
	1383 Move TEMP, X8
	1384 And TEMP, TEMP, 1
	1385 Compare TEMP, 1
	1386 JumpIfEqual {1388}
	1387 Call 0x1C5D684
	1388 Move W8, [X0+224]
	1389 Compare W8, 0
	1390 JumpIfNotEqual {1392}
	1391 Call 0x1C17DFC
	1392 Move X8, [X22+56]
	1393 Move X0, [X8+16]
	1394 Move W8, [X0+309]
	1395 Move TEMP, X8
	1396 And TEMP, TEMP, 1
	1397 Compare TEMP, 1
	1398 JumpIfEqual {1400}
	1399 Call 0x1C5D684
	1400 Compare X21, 0
	1401 JumpIfEqual {1925}
	1402 Move X10, 0xBBF000
	1403 Move X9, [X0+184]
	1404 Move X8, [X21]
	1405 Move X1, [X25]
	1406 Move X10, [X10+824]
	1407 Move X22, [X9]
	1408 NotImplemented "Instruction LDRH not yet implemented."
	1409 Move X23, [X10]
	1410 Compare X9, 0
	1411 JumpIfEqual {1571}
	1412 Move X10, [X8+176]
	1413 Add X10, X10, 8
	1414 NotImplemented "Instruction LDUR not yet implemented."
	1415 NotImplemented "Instruction CMP not yet implemented."
	1416 Subtract X9, X9, 1
	1417 Add X10, X10, 16
	1418 Move X9, [X19+32]
	1419 Compare X9, 0
	1420 JumpIfEqual {1925}
	1421 Move X22, [X27]
	1422 Move X21, [X9+24]
	1423 Move X8, [X22+56]
	1424 Compare X8, 0
	1425 JumpIfNotEqual {1429}
	1426 Move X0, X22
	1427 Call 0x1C5D6E0
	1428 Move X8, [X22+56]
	1429 Move X0, [X8+16]
	1430 Move W8, [X0+309]
	1431 Move TEMP, X8
	1432 And TEMP, TEMP, 1
	1433 Compare TEMP, 1
	1434 JumpIfEqual {1436}
	1435 Call 0x1C5D684
	1436 Move W8, [X0+224]
	1437 Compare W8, 0
	1438 JumpIfNotEqual {1440}
	1439 Call 0x1C17DFC
	1440 Move X8, [X22+56]
	1441 Move X0, [X8+16]
	1442 Move W8, [X0+309]
	1443 Move TEMP, X8
	1444 And TEMP, TEMP, 1
	1445 Compare TEMP, 1
	1446 JumpIfEqual {1448}
	1447 Call 0x1C5D684
	1448 Compare X21, 0
	1449 JumpIfEqual {1925}
	1450 Move X10, 0xBBF000
	1451 Move X9, [X0+184]
	1452 Move X8, [X21]
	1453 Move X1, [X25]
	1454 Move X10, [X10+752]
	1455 Move X22, [X9]
	1456 NotImplemented "Instruction LDRH not yet implemented."
	1457 Move X23, [X10]
	1458 Compare X9, 0
	1459 JumpIfEqual {1571}
	1460 Move X10, [X8+176]
	1461 Add X10, X10, 8
	1462 NotImplemented "Instruction LDUR not yet implemented."
	1463 NotImplemented "Instruction CMP not yet implemented."
	1464 Subtract X9, X9, 1
	1465 Add X10, X10, 16
	1466 Move X8, [X19+32]
	1467 Compare X8, 0
	1468 JumpIfEqual {1925}
	1469 Move X0, [X20]
	1470 Move X21, [X8+24]
	1471 Move W1, 1
	1472 Call 0x1C17D6C
	1473 Move X8, [X29]
	1474 Move X22, X0
	1475 Move W9, [X8+224]
	1476 Compare W9, 0
	1477 JumpIfNotEqual {1480}
	1478 Move X0, X8
	1479 Call 0x1C17DFC
	1480 Move X0, X31
	1481 Call Application.get_platform
	1482 Move X8, 0xB84000
	1483 Move X8, [X8+2632]
	1484 Move [X31+128], W0
	1485 Add X1, X31, 128
	1486 Move X8, [X8]
	1487 Move X0, X8
	1488 Call 0x1C17E04
	1489 Compare X22, 0
	1490 JumpIfEqual {1925}
	1491 Move X23, X0
	1492 Compare X0, 0
	1493 JumpIfEqual {1500}
	1494 Move X8, [X22]
	1495 Move X0, X23
	1496 Move X1, [X8+64]
	1497 Call 0x1C17E00
	1498 Compare X0, 0
	1499 JumpIfEqual {1927}
	1500 Move W8, [X22+24]
	1501 Compare W8, 0
	1502 JumpIfEqual {1926}
	1503 Move [X22+32], X23
	1504 Compare X21, 0
	1505 JumpIfEqual {1925}
	1506 Move X10, 0xBBE000
	1507 Move X8, [X21]
	1508 Move X1, [X25]
	1509 Move X10, [X10+744]
	1510 NotImplemented "Instruction LDRH not yet implemented."
	1511 Move X23, [X10]
	1512 Compare X9, 0
	1513 JumpIfEqual {1520}
	1514 Move X10, [X8+176]
	1515 Add X10, X10, 8
	1516 NotImplemented "Instruction LDUR not yet implemented."
	1517 NotImplemented "Instruction CMP not yet implemented."
	1518 Subtract X9, X9, 1
	1519 Add X10, X10, 16
	1520 Move W2, 1
	1521 Move X0, X21
	1522 Call 0x1C5D788
	1523 Move X9, [X19+32]
	1524 Compare X9, 0
	1525 JumpIfEqual {1925}
	1526 Move X22, [X27]
	1527 Move X21, [X9+24]
	1528 Move X8, [X22+56]
	1529 Compare X8, 0
	1530 JumpIfNotEqual {1534}
	1531 Move X0, X22
	1532 Call 0x1C5D6E0
	1533 Move X8, [X22+56]
	1534 Move X0, [X8+16]
	1535 Move W8, [X0+309]
	1536 Move TEMP, X8
	1537 And TEMP, TEMP, 1
	1538 Compare TEMP, 1
	1539 JumpIfEqual {1541}
	1540 Call 0x1C5D684
	1541 Move W8, [X0+224]
	1542 Compare W8, 0
	1543 JumpIfNotEqual {1545}
	1544 Call 0x1C17DFC
	1545 Move X8, [X22+56]
	1546 Move X0, [X8+16]
	1547 Move W8, [X0+309]
	1548 Move TEMP, X8
	1549 And TEMP, TEMP, 1
	1550 Compare TEMP, 1
	1551 JumpIfEqual {1553}
	1552 Call 0x1C5D684
	1553 Compare X21, 0
	1554 JumpIfEqual {1925}
	1555 Move X10, 0xBBE000
	1556 Move X9, [X0+184]
	1557 Move X8, [X21]
	1558 Move X1, [X25]
	1559 Move X10, [X10+688]
	1560 Move X22, [X9]
	1561 NotImplemented "Instruction LDRH not yet implemented."
	1562 Move X23, [X10]
	1563 Compare X9, 0
	1564 JumpIfEqual {1571}
	1565 Move X10, [X8+176]
	1566 Add X10, X10, 8
	1567 NotImplemented "Instruction LDUR not yet implemented."
	1568 NotImplemented "Instruction CMP not yet implemented."
	1569 Subtract X9, X9, 1
	1570 Add X10, X10, 16
	1571 Move W2, 1
	1572 Move X0, X21
	1573 Call 0x1C5D788
	1574 Move W9, [X10]
	1575 Add W9, W9, 1
	1576 Add X8, X8, W9
	1577 Add X0, X8, 312
	1578 Move X8, [X0]
	1579 Move X4, [X0+8]
	1580 Move W1, 3
	1581 Move X0, X21
	1582 Move X2, X23
	1583 Move X3, X22
	1584 NotImplemented "Instruction BLR not yet implemented."
	1585 Move X21, X31
	1586 Move X8, [X19+32]
	1587 Compare X8, 0
	1588 JumpIfEqual {1925}
	1589 Move V0, [X31+336]
	1590 Move V1, [X31+352]
	1591 Move X9, [X31+368]
	1592 Move X0, [X8+24]
	1593 Move W2, [X31+12]
	1594 Add X1, X31, 176
	1595 Move W3, 1
	1596 Move X4, X21
	1597 Move X5, X31
	1598 Move [X31+176], V0
	1599 Move [X31+184], V1
	1600 Move [X31+208], X9
	1601 Call Platform.CreateDefaultAudioSource, X0, X1, X2, X3, X4
	1602 Move [X19+72], X0
	1603 Compare X0, 0
	1604 JumpIfEqual {1708}
	1605 Move X8, [X0]
	1606 Move X1, [X28]
	1607 Move X21, X0
	1608 NotImplemented "Instruction LDRH not yet implemented."
	1609 Compare X9, 0
	1610 JumpIfEqual {1617}
	1611 Move X10, [X8+176]
	1612 Add X10, X10, 8
	1613 NotImplemented "Instruction LDUR not yet implemented."
	1614 NotImplemented "Instruction CMP not yet implemented."
	1615 Subtract X9, X9, 1
	1616 Add X10, X10, 16
	1617 Move W2, 2
	1618 Move X0, X21
	1619 Call 0x1C5D788
	1620 Move W9, [X10]
	1621 Add W9, W9, 2
	1622 Add X8, X8, W9
	1623 Add X0, X8, 312
	1624 Move X8, [X0]
	1625 Move X1, [X0+8]
	1626 Move X0, X21
	1627 NotImplemented "Instruction BLR not yet implemented."
	1628 Compare X0, 0
	1629 JumpIfEqual {598}
	1630 Move X8, [X19+32]
	1631 Compare X8, 0
	1632 JumpIfEqual {1925}
	1633 Move X0, [X20]
	1634 Move X21, [X8+24]
	1635 Move W1, 1
	1636 Call 0x1C17D6C
	1637 Move X23, [X19+72]
	1638 Compare X23, 0
	1639 JumpIfEqual {1925}
	1640 Move X8, [X23]
	1641 Move X1, [X28]
	1642 Move X22, X0
	1643 NotImplemented "Instruction LDRH not yet implemented."
	1644 Compare X9, 0
	1645 JumpIfEqual {1652}
	1646 Move X10, [X8+176]
	1647 Add X10, X10, 8
	1648 NotImplemented "Instruction LDUR not yet implemented."
	1649 NotImplemented "Instruction CMP not yet implemented."
	1650 Subtract X9, X9, 1
	1651 Add X10, X10, 16
	1652 Move W2, 2
	1653 Move X0, X23
	1654 Call 0x1C5D788
	1655 Move W9, [X10]
	1656 Add W9, W9, 2
	1657 Add X8, X8, W9
	1658 Add X0, X8, 312
	1659 Move X8, [X0]
	1660 Move X1, [X0+8]
	1661 Move X0, X23
	1662 NotImplemented "Instruction BLR not yet implemented."
	1663 Compare X22, 0
	1664 JumpIfEqual {1925}
	1665 Move X23, X0
	1666 Compare X0, 0
	1667 JumpIfEqual {1674}
	1668 Move X8, [X22]
	1669 Move X0, X23
	1670 Move X1, [X8+64]
	1671 Call 0x1C17E00
	1672 Compare X0, 0
	1673 JumpIfEqual {1927}
	1674 Move W8, [X22+24]
	1675 Compare W8, 0
	1676 JumpIfEqual {1926}
	1677 Move [X22+32], X23
	1678 Compare X21, 0
	1679 JumpIfEqual {1925}
	1680 Move X10, 0xBBE000
	1681 Move X8, [X21]
	1682 Move X10, [X10+736]
	1683 Move X1, [X25]
	1684 NotImplemented "Instruction LDRH not yet implemented."
	1685 Move X23, [X10]
	1686 Compare X9, 0
	1687 JumpIfEqual {1694}
	1688 Move X10, [X8+176]
	1689 Add X10, X10, 8
	1690 NotImplemented "Instruction LDUR not yet implemented."
	1691 NotImplemented "Instruction CMP not yet implemented."
	1692 Subtract X9, X9, 1
	1693 Add X10, X10, 16
	1694 Move W2, 1
	1695 Move X0, X21
	1696 Call 0x1C5D788
	1697 Move W9, [X10]
	1698 Add W9, W9, 1
	1699 Add X8, X8, W9
	1700 Add X0, X8, 312
	1701 Move X8, [X0]
	1702 Move X4, [X0+8]
	1703 Move W1, 1
	1704 Move X0, X21
	1705 Move X2, X23
	1706 Move X3, X22
	1707 NotImplemented "Instruction BLR not yet implemented."
	1708 Move W8, [X19+174]
	1709 NotImplemented "Instruction CMP not yet implemented."
	1710 NotImplemented "Instruction CSET not yet implemented."
	1711 Or W8, W26, W8
	1712 Move TEMP, X8
	1713 And TEMP, TEMP, 1
	1714 Compare TEMP, 1
	1715 JumpIfEqual {598}
	1716 Move X9, [X19+32]
	1717 Compare X9, 0
	1718 JumpIfEqual {1925}
	1719 Move X22, [X27]
	1720 Move X21, [X9+24]
	1721 Move X8, [X22+56]
	1722 Compare X8, 0
	1723 JumpIfNotEqual {1727}
	1724 Move X0, X22
	1725 Call 0x1C5D6E0
	1726 Move X8, [X22+56]
	1727 Move X0, [X8+16]
	1728 Move W8, [X0+309]
	1729 Move TEMP, X8
	1730 And TEMP, TEMP, 1
	1731 Compare TEMP, 1
	1732 JumpIfEqual {1734}
	1733 Call 0x1C5D684
	1734 Move W8, [X0+224]
	1735 Compare W8, 0
	1736 JumpIfNotEqual {1738}
	1737 Call 0x1C17DFC
	1738 Move X8, [X22+56]
	1739 Move X0, [X8+16]
	1740 Move W8, [X0+309]
	1741 Move TEMP, X8
	1742 And TEMP, TEMP, 1
	1743 Compare TEMP, 1
	1744 JumpIfEqual {1746}
	1745 Call 0x1C5D684
	1746 Compare X21, 0
	1747 JumpIfEqual {1925}
	1748 Move X10, 0xBBE000
	1749 Move X9, [X0+184]
	1750 Move X8, [X21]
	1751 Move X10, [X10+728]
	1752 Move X1, [X25]
	1753 Move X22, [X9]
	1754 NotImplemented "Instruction LDRH not yet implemented."
	1755 Move X23, [X10]
	1756 Compare X9, 0
	1757 JumpIfEqual {1764}
	1758 Move X10, [X8+176]
	1759 Add X10, X10, 8
	1760 NotImplemented "Instruction LDUR not yet implemented."
	1761 NotImplemented "Instruction CMP not yet implemented."
	1762 Subtract X9, X9, 1
	1763 Add X10, X10, 16
	1764 Move W2, 1
	1765 Move X0, X21
	1766 Call 0x1C5D788
	1767 Move W9, [X10]
	1768 Add W9, W9, 1
	1769 Add X8, X8, W9
	1770 Add X0, X8, 312
	1771 Move X8, [X0]
	1772 Move X4, [X0+8]
	1773 Move W1, 1
	1774 Move X0, X21
	1775 Move X2, X23
	1776 Move X3, X22
	1777 Move W26, 1
	1778 NotImplemented "Instruction BLR not yet implemented."
	1779 Move TEMP, X26
	1780 And TEMP, TEMP, 1
	1781 Compare TEMP, 1
	1782 JumpIfNotEqual {200}
	1783 Move [X31+8], W26
	1784 Move X24, 0xBBE000
	1785 NotImplemented "Instruction LDUR not yet implemented."
	1786 Move X24, [X24+616]
	1787 Add X1, X31, 128
	1788 Move X26, X29
	1789 Move X29, X28
	1790 Move X0, [X24]
	1791 Move X28, X27
	1792 Move [X31+8], V0
	1793 Call 0x1C17E04
	1794 Move X8, [X19+32]
	1795 Compare X8, 0
	1796 JumpIfEqual {1925}
	1797 Move X21, X0
	1798 Move X0, [X20]
	1799 Move X22, [X8+24]
	1800 Move W1, 1
	1801 Add X27, X19, 152
	1802 Call 0x1C17D6C
	1803 Move X23, X0
	1804 Move V0, [X27]
	1805 Move X0, [X24]
	1806 Add X1, X31, 96
	1807 Move [X31+6], V0
	1808 Call 0x1C17E04
	1809 Compare X23, 0
	1810 JumpIfEqual {1925}
	1811 Move X24, X0
	1812 Compare X0, 0
	1813 JumpIfEqual {1820}
	1814 Move X8, [X23]
	1815 Move X0, X24
	1816 Move X1, [X8+64]
	1817 Call 0x1C17E00
	1818 Compare X0, 0
	1819 JumpIfEqual {1927}
	1820 Move W8, [X23+24]
	1821 Compare W8, 0
	1822 JumpIfEqual {1926}
	1823 Move [X23+32], X24
	1824 Compare X22, 0
	1825 JumpIfEqual {1925}
	1826 Move X10, 0xBBE000
	1827 Move X8, [X22]
	1828 Move X1, [X25]
	1829 Move X10, [X10+784]
	1830 Move X27, X28
	1831 Move X28, X29
	1832 NotImplemented "Instruction LDRH not yet implemented."
	1833 Move X24, [X10]
	1834 Move X29, X26
	1835 Move W26, [X31+8]
	1836 Compare X9, 0
	1837 JumpIfEqual {1902}
	1838 Move X10, [X8+176]
	1839 Add X10, X10, 8
	1840 NotImplemented "Instruction LDUR not yet implemented."
	1841 NotImplemented "Instruction CMP not yet implemented."
	1842 Subtract X9, X9, 1
	1843 Add X10, X10, 16
	1844 Move X10, 0xBBD000
	1845 NotImplemented "Instruction LDRH not yet implemented."
	1846 Move W9, [X19+170]
	1847 Move X10, [X10+1096]
	1848 Add X1, X31, 128
	1849 NotImplemented "Instruction STRH not yet implemented."
	1850 Move [X31+130], W9
	1851 Move X0, [X10]
	1852 Call 0x1C17E04
	1853 Move X9, [X19+32]
	1854 Compare X9, 0
	1855 JumpIfEqual {1925}
	1856 Move X23, [X27]
	1857 Move X22, [X9+24]
	1858 Move X21, X0
	1859 Move X8, [X23+56]
	1860 Compare X8, 0
	1861 JumpIfNotEqual {1865}
	1862 Move X0, X23
	1863 Call 0x1C5D6E0
	1864 Move X8, [X23+56]
	1865 Move X0, [X8+16]
	1866 Move W8, [X0+309]
	1867 Move TEMP, X8
	1868 And TEMP, TEMP, 1
	1869 Compare TEMP, 1
	1870 JumpIfEqual {1872}
	1871 Call 0x1C5D684
	1872 Move W8, [X0+224]
	1873 Compare W8, 0
	1874 JumpIfNotEqual {1876}
	1875 Call 0x1C17DFC
	1876 Move X8, [X23+56]
	1877 Move X0, [X8+16]
	1878 Move W8, [X0+309]
	1879 Move TEMP, X8
	1880 And TEMP, TEMP, 1
	1881 Compare TEMP, 1
	1882 JumpIfEqual {1884}
	1883 Call 0x1C5D684
	1884 Compare X22, 0
	1885 JumpIfEqual {1925}
	1886 Move X10, 0xBBE000
	1887 Move X9, [X0+184]
	1888 Move X8, [X22]
	1889 Move X1, [X25]
	1890 Move X10, [X10+832]
	1891 Move X23, [X9]
	1892 NotImplemented "Instruction LDRH not yet implemented."
	1893 Move X24, [X10]
	1894 Compare X9, 0
	1895 JumpIfEqual {1902}
	1896 Move X10, [X8+176]
	1897 Add X10, X10, 8
	1898 NotImplemented "Instruction LDUR not yet implemented."
	1899 NotImplemented "Instruction CMP not yet implemented."
	1900 Subtract X9, X9, 1
	1901 Add X10, X10, 16
	1902 Move W2, 1
	1903 Move X0, X22
	1904 Call 0x1C5D788
	1905 Move W9, [X10]
	1906 Add W9, W9, 1
	1907 Add X8, X8, W9
	1908 Add X0, X8, 312
	1909 Move X8, [X0]
	1910 Move X4, [X0+8]
	1911 Move W1, 3
	1912 Move X0, X22
	1913 Move X2, X24
	1914 Move X3, X23
	1915 NotImplemented "Instruction BLR not yet implemented."
	1916 Move X24, 0xBA3000
	1917 Move X24, [X24+1528]
	1918 Move W9, [X10]
	1919 Add W9, W9, 1
	1920 Add X8, X8, W9
	1921 Add X0, X8, 312
	1922 Move X8, [X0]
	1923 Move X4, [X0+8]
	1924 Move W1, 1
	1925 Call 0x1C17F20
	1926 Call 0x1C17F28
	1927 Call 0x1C17F44
	1928 Move X1, X31
	1929 Call 0x1C17DEC

Method: System.Void SendPhotonVoiceCreatedMessage()

Disassembly:
	0x0357A2A0 MOVK X8, 0x3C230000
	0x0357A2A4 MOVK X8, 0x1F4
	0x0357A2A8 STUR X8, [X19 + 0x2C]
	0x0357A2AC LDR X0, [X20]
	0x0357A2B0 ADRP X21, 0xBBB000
	0x0357A2B4 LDR W8, [X0 + 0xE0]
	0x0357A2B8 LDR X21, [X21 + 0xFF0]
	0x0357A2BC CBNZ W8, 0x357A2C8
	0x0357A2C0 BL 0x1C16DFC
	0x0357A2C4 LDR X0, [X20]
	0x0357A2C8 LDR X8, [X0 + 0xB8]
	0x0357A2CC ADRP X10, 0xFFFFFFFFFD573000
	0x0357A2D0 LDR V0, [X10 + 0x710]
	0x0357A2D4 MOVZ W9, 0x1
	0x0357A2D8 LDR X8, [X8]
	0x0357A2DC MOVZ W11, 0x7530
	0x0357A2E0 MOVZ W12, 0x101
	0x0357A2E4 STRB W9, [X19 + 0x6B]
	0x0357A2E8 STR W11, [X19 + 0x74]
	0x0357A2EC STUR D0, [X19 + 0x6C]
	0x0357A2F0 STR X8, [X19 + 0x40]
	0x0357A2F4 STRH W12, [X19 + 0x88]
	0x0357A2F8 LDR X0, [X21]
	0x0357A2FC ADRP X22, 0xBBB000
	0x0357A300 LDR W8, [X0 + 0xE0]
	0x0357A304 LDR X22, [X22 + 0x448]
	0x0357A308 CBNZ W8, 0x357A314
	0x0357A30C BL 0x1C16DFC
	0x0357A310 LDR X0, [X21]
	0x0357A314 LDR X8, [X0 + 0xB8]
	0x0357A318 ADRP X20, 0xBA1000
	0x0357A31C LDR V0, [X8]
	0x0357A320 STUR V0, [X19 + 0x98]
	0x0357A324 LDR X0, [X22]
	0x0357A328 LDR W8, [X0 + 0xE0]
	0x0357A32C LDR X20, [X20 + 0x5F8]
	0x0357A330 CBNZ W8, 0x357A33C
	0x0357A334 BL 0x1C16DFC
	0x0357A338 LDR X0, [X22]
	0x0357A33C LDR X8, [X0 + 0xB8]
	0x0357A340 MOVZ W10, 0x101
	0x0357A344 LDRB W9, [X8 + 0x2]
	0x0357A348 LDRH W8, [X8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xE66000
	006 Move X20, 0xBBD000
	007 Move W8, [X21+3724]
	008 Move X20, [X20+920]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0xBBD000
	015 Move X0, [X0+920]
	016 Call 0x1C17CF4
	017 Move X0, 0xBBD000
	018 Move X0, [X0+928]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+3724], W8
	022 Move X0, X19
	023 Move X1, X31
	024 Call Component.get_gameObject, X0
	025 Move X8, [X20]
	026 Move X20, X0
	027 Move X0, X8
	028 Call 0x1C17F10
	029 Move X1, X31
	030 Move X21, X0
	031 Call PhotonVoiceCreatedParams..ctor, X0
	032 Compare X21, 0
	033 JumpIfEqual {53}
	034 Move X8, [X19+64]
	035 Move [X21+16], X8
	036 Move X8, [X19+72]
	037 Move [X21+24], X8
	038 Compare X20, 0
	039 JumpIfEqual {53}
	040 Move X8, 0xBBD000
	041 Move X8, [X8+928]
	042 Move X0, X20
	043 Move X20, [X31+16]
	044 Move X19, [X31+24]
	045 Move W3, 1
	046 Move X1, [X8]
	047 Move X2, X21
	048 Move X4, X31
	049 Move X30, [X31+32]
	050 Move X21, [X31+40]
	051 Call GameObject.SendMessage, X0, X1, X2, X3
	052 Return 
	053 Call 0x1C17F20

Method: System.Void Update()

Disassembly:
	0x0357A34C STRH W10, [X19 + 0xAE]
	0x0357A350 STRB W9, [X19 + 0xAA]
	0x0357A354 STRH W8, [X19 + 0xA8]
	0x0357A358 LDR X0, [X20]
	0x0357A35C LDR W8, [X0 + 0xE0]
	0x0357A360 CBNZ W8, 0x357A36C
	0x0357A364 BL 0x1C16DFC
	0x0357A368 LDR X0, [X20]
	0x0357A36C LDR X8, [X0 + 0xB8]
	0x0357A370 MOV X0, X19
	0x0357A374 LDP X22, X21, [X31 + 0x10]
	0x0357A378 LDR X9, [X8 + 0x20]
	0x0357A37C LDP V1, V0, [X8]
	0x0357A380 STR X9, [X19 + 0xD0]
	0x0357A384 STP V1, V0, [X19 + 0xB0]
	0x0357A388 LDP X20, X19, [X31 + 0x20]
	0x0357A38C LDR X30, [X31], #0x30
	0x0357A390 B 0x357413C
	0x0357A394 STR X30, [X31 - 0x20]!
	0x0357A398 STP X20, X19, [X31 + 0x10]
	0x0357A39C ADRP X19, 0xE65000
	0x0357A3A0 ADRP X20, 0xBBC000
	0x0357A3A4 LDRB W8, [X19 + 0xE94]
	0x0357A3A8 LDR X20, [X20 + 0x2A8]
	0x0357A3AC TBNZ X8, 0x0, 0x357A3C4
	0x0357A3B0 ADRP X0, 0xBBC000
	0x0357A3B4 LDR X0, [X0 + 0x2A8]
	0x0357A3B8 BL 0x1C16CF4
	0x0357A3BC MOVZ W8, 0x1
	0x0357A3C0 STRB W8, [X19 + 0xE94]
	0x0357A3C4 LDR X0, [X20]
	0x0357A3C8 BL 0x1C16F10
	0x0357A3CC MOV X1, X31
	0x0357A3D0 MOV X19, X0
	0x0357A3D4 BL 0x33BDD8C
	0x0357A3D8 LDR X8, [X20]
	0x0357A3DC LDR X8, [X8 + 0xB8]
	0x0357A3E0 STR X19, [X8]
	0x0357A3E4 LDP X20, X19, [X31 + 0x10]
	0x0357A3E8 LDR X30, [X31], #0x20
	0x0357A3EC RET
	0x0357A3F0 MOV X1, X31
	0x0357A3F4 B 0x33BDD8C
	0x0357A3F8 STP X30, X21, [X31 - 0x20]!
	0x0357A3FC STP X20, X19, [X31 + 0x10]
	0x0357A400 ADRP X20, 0xE65000
	0x0357A404 ADRP X21, 0xBBC000
	0x0357A408 ADRP X19, 0xBBC000
	0x0357A40C LDRB W8, [X20 + 0xE95]
	0x0357A410 LDR X21, [X21 + 0x400]
	0x0357A414 LDR X19, [X19 + 0x408]
	0x0357A418 TBNZ X8, 0x0, 0x357A43C
	0x0357A41C ADRP X0, 0xBBC000
	0x0357A420 LDR X0, [X0 + 0x408]
	0x0357A424 BL 0x1C16CF4
	0x0357A428 ADRP X0, 0xBBC000
	0x0357A42C LDR X0, [X0 + 0x400]
	0x0357A430 BL 0x1C16CF4
	0x0357A434 MOVZ W8, 0x1
	0x0357A438 STRB W8, [X20 + 0xE95]
	0x0357A43C LDR X0, [X21]
	0x0357A440 BL 0x1C16F10
	0x0357A444 LDR X5, [X19]
	0x0357A448 MOVZ W1, 0x1B8
	0x0357A44C MOVZ W2, 0x64
	0x0357A450 MOVZ W3, 0xBB80
	0x0357A454 MOVZ W4, 0x1
	0x0357A458 MOV X19, X0
	0x0357A45C BL 0x26F4A9C
	0x0357A460 MOV X0, X19
	0x0357A464 LDP X20, X19, [X31 + 0x10]
	0x0357A468 LDP X30, X21, [X31], #0x20
	0x0357A46C RET
	0x0357A470 STP X30, X21, [X31 - 0x20]!
	0x0357A474 STP X20, X19, [X31 + 0x10]
	0x0357A478 ADRP X20, 0xE65000
	0x0357A47C LDRB W8, [X20 + 0xE96]
	0x0357A480 MOV X19, X0
	0x0357A484 TBNZ X8, 0x0, 0x357A49C
	0x0357A488 ADRP X0, 0xBA3000
	0x0357A48C LDR X0, [X0 + 0xF50]
	0x0357A490 BL 0x1C16CF4
	0x0357A494 MOVZ W8, 0x1
	0x0357A498 STRB W8, [X20 + 0xE96]
	0x0357A49C LDR X20, [X19 + 0x10]
	0x0357A4A0 CBZ X20, 0x357A554
	0x0357A4A4 MOV X0, X20
	0x0357A4A8 BL 0x3574408
	0x0357A4AC CBZ X0, 0x357A554
	0x0357A4B0 ADRP X10, 0xBA3000
	0x0357A4B4 LDR X8, [X0]
	0x0357A4B8 LDR X10, [X10 + 0xF50]
	0x0357A4BC MOV X21, X0
	0x0357A4C0 LDRH W9, [X8 + 0x12E]
	0x0357A4C4 LDR X1, [X10]
	0x0357A4C8 CBZ X9, 0x357A4EC
	0x0357A4CC LDR X10, [X8 + 0xB0]
	0x0357A4D0 ADD X10, X10, 0x8
	0x0357A4D4 LDUR X11, [X10 - 0x8]
	0x0357A4D8 CMP X11, X1
	0x0357A4DC B.EQ 0x357A4FC
	0x0357A4E0 SUBS X9, X9, 0x1
	0x0357A4E4 ADD X10, X10, 0x10
	0x0357A4E8 B.NE 0x357A4D4
	0x0357A4EC MOVZ W2, 0x2
	0x0357A4F0 MOV X0, X21
	0x0357A4F4 BL 0x1C5C788
	0x0357A4F8 B 0x357A50C
	0x0357A4FC LDR W9, [X10]
	0x0357A500 ADD W9, W9, 0x2
	0x0357A504 ADD X8, X8, W9, 0x4, SXTW
	0x0357A508 ADD X0, X8, 0x138
	0x0357A50C LDP X8, X1, [X0]
	0x0357A510 MOV X0, X21

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xE66000
	007 Move X20, 0xB7A000
	008 Move W8, [X21+3725]
	009 Move X20, [X20+1432]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {29}
	015 Move X0, 0xB7A000
	016 Move X0, [X0+2504]
	017 Call 0x1C17CF4
	018 Move X0, 0xB7F000
	019 Move X0, [X0+840]
	020 Call 0x1C17CF4
	021 Move X0, 0xB7A000
	022 Move X0, [X0+1432]
	023 Call 0x1C17CF4
	024 Move X0, 0xBBD000
	025 Move X0, [X0+936]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X21+3725], W8
	029 Move X0, [X20]
	030 Move X20, [X19+80]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {35}
	034 Call 0x1C17DFC
	035 Move X0, X20
	036 Move X1, X31
	037 Move X2, X31
	038 Call Object.op_Equality, X0, X1
	039 Move TEMP, X0
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfEqual {115}
	043 Add X0, X19, 216
	044 Move W1, W31
	045 Move X2, X31
	046 Call Interlocked.Exchange, X0, X1
	047 Compare W0, 0
	048 JumpIfEqual {51}
	049 Move X0, X19
	050 Call Recorder.HandleDeviceChange, X0
	051 Add X0, X19, 220
	052 Move W1, W31
	053 Move X2, X31
	054 Call Interlocked.Exchange, X0, X1
	055 Compare W0, 0
	056 JumpIfEqual {115}
	057 Move W8, [X19+137]
	058 Compare W8, 0
	059 JumpIfEqual {115}
	060 Move X9, [X19+32]
	061 Compare X9, 0
	062 JumpIfEqual {140}
	063 Move X8, 0xB7A000
	064 Move X8, [X8+2504]
	065 Move X20, [X9+24]
	066 Move X21, [X8]
	067 Move X8, [X21+56]
	068 Compare X8, 0
	069 JumpIfNotEqual {73}
	070 Move X0, X21
	071 Call 0x1C5D6E0
	072 Move X8, [X21+56]
	073 Move X0, [X8+16]
	074 Move W8, [X0+309]
	075 Move TEMP, X8
	076 And TEMP, TEMP, 1
	077 Compare TEMP, 1
	078 JumpIfEqual {80}
	079 Call 0x1C5D684
	080 Move W8, [X0+224]
	081 Compare W8, 0
	082 JumpIfNotEqual {84}
	083 Call 0x1C17DFC
	084 Move X8, [X21+56]
	085 Move X0, [X8+16]
	086 Move W8, [X0+309]
	087 Move TEMP, X8
	088 And TEMP, TEMP, 1
	089 Compare TEMP, 1
	090 JumpIfEqual {92}
	091 Call 0x1C5D684
	092 Compare X20, 0
	093 JumpIfEqual {140}
	094 Move X10, 0xB7F000
	095 Move X11, 0xBBD000
	096 Move X9, [X0+184]
	097 Move X10, [X10+840]
	098 Move X8, [X20]
	099 Move X11, [X11+936]
	100 Move X21, [X9]
	101 Move X1, [X10]
	102 NotImplemented "Instruction LDRH not yet implemented."
	103 Move X22, [X11]
	104 Compare X9, 0
	105 JumpIfEqual {112}
	106 Move X10, [X8+176]
	107 Add X10, X10, 8
	108 NotImplemented "Instruction LDUR not yet implemented."
	109 NotImplemented "Instruction CMP not yet implemented."
	110 Subtract X9, X9, 1
	111 Add X10, X10, 16
	112 Move W2, 1
	113 Move X0, X20
	114 Call 0x1C5D788
	115 Move X20, [X31+32]
	116 Move X19, [X31+40]
	117 Move X22, [X31+16]
	118 Move X21, [X31+24]
	119 Move X30, [X31+48]
	120 Return 
	121 Move W9, [X10]
	122 Add W9, W9, 1
	123 Add X8, X8, W9
	124 Add X0, X8, 312
	125 Move X8, [X0]
	126 Move X4, [X0+8]
	127 Move W1, 3
	128 Move X0, X20
	129 Move X2, X22
	130 Move X3, X21
	131 NotImplemented "Instruction BLR not yet implemented."
	132 Move X0, X19
	133 Move X20, [X31+32]
	134 Move X19, [X31+40]
	135 Move X22, [X31+16]
	136 Move X21, [X31+24]
	137 Move X30, [X31+48]
	138 Call Recorder.StartRecording, X0
	139 Return 
	140 Call 0x1C17F20

Method: System.Void OnDestroy()

Disassembly:
	0x0357A710 BL 0x1C5C684
	0x0357A714 LDR W8, [X0 + 0xE0]
	0x0357A718 CBNZ W8, 0x357A720
	0x0357A71C BL 0x1C16DFC
	0x0357A720 LDR X8, [X19 + 0x38]
	0x0357A724 LDR X0, [X8 + 0x10]
	0x0357A728 LDRB W8, [X0 + 0x135]
	0x0357A72C TBNZ X8, 0x0, 0x357A734
	0x0357A730 BL 0x1C5C684
	0x0357A734 CBZ X21, 0x357AC6C
	0x0357A738 ADRP X10, 0xB7E000
	0x0357A73C ADRP X11, 0xBBC000
	0x0357A740 LDR X9, [X0 + 0xB8]
	0x0357A744 LDR X10, [X10 + 0x348]
	0x0357A748 LDR X8, [X21]
	0x0357A74C LDR X11, [X11 + 0x428]
	0x0357A750 LDR X19, [X9]
	0x0357A754 LDR X1, [X10]
	0x0357A758 LDRH W9, [X8 + 0x12E]
	0x0357A75C LDR X20, [X11]
	0x0357A760 CBZ X9, 0x357A784
	0x0357A764 LDR X10, [X8 + 0xB0]
	0x0357A768 ADD X10, X10, 0x8
	0x0357A76C LDUR X11, [X10 - 0x8]
	0x0357A770 CMP X11, X1
	0x0357A774 B.EQ 0x357A8F8
	0x0357A778 SUBS X9, X9, 0x1
	0x0357A77C ADD X10, X10, 0x10
	0x0357A780 B.NE 0x357A76C
	0x0357A784 MOVZ W2, 0x1
	0x0357A788 MOV X0, X21
	0x0357A78C BL 0x1C5C788
	0x0357A790 B 0x357A908
	0x0357A794 ADRP X27, 0xB79000
	0x0357A798 LDR X27, [X27 + 0x9D0]
	0x0357A79C MOVZ W1, 0x3
	0x0357A7A0 LDR X0, [X27]
	0x0357A7A4 BL 0x1C16D6C
	0x0357A7A8 LDR X8, [X26]
	0x0357A7AC MOV X23, X0
	0x0357A7B0 LDR W9, [X8 + 0xE0]
	0x0357A7B4 CBNZ W9, 0x357A7C0
	0x0357A7B8 MOV X0, X8
	0x0357A7BC BL 0x1C16DFC
	0x0357A7C0 MOV X0, X31
	0x0357A7C4 BL 0x3C01AB0
	0x0357A7C8 ADRP X28, 0xB82000
	0x0357A7CC LDR X28, [X28 + 0xA48]
	0x0357A7D0 STR W0, [X31 + 0x1C]
	0x0357A7D4 ADD X1, X31, 0x1C
	0x0357A7D8 LDR X8, [X28]
	0x0357A7DC MOV X0, X8
	0x0357A7E0 BL 0x1C16E04
	0x0357A7E4 CBZ X23, 0x357AC6C
	0x0357A7E8 MOV X24, X0
	0x0357A7EC CBZ X0, 0x357A804
	0x0357A7F0 LDR X8, [X23]
	0x0357A7F4 MOV X0, X24
	0x0357A7F8 LDR X1, [X8 + 0x40]
	0x0357A7FC BL 0x1C16E00
	0x0357A800 CBZ X0, 0x357AC74
	0x0357A804 LDR W8, [X23 + 0x18]
	0x0357A808 CBZ W8, 0x357AC70
	0x0357A80C STR X24, [X23 + 0x20]
	0x0357A810 ADRP X9, 0xBBC000
	0x0357A814 LDR W8, [X19 + 0x2C]
	0x0357A818 LDR X9, [X9 + 0x288]
	0x0357A81C ADD X1, X31, 0x18
	0x0357A820 STR W8, [X31 + 0x18]
	0x0357A824 LDR X0, [X9]
	0x0357A828 BL 0x1C16E04
	0x0357A82C MOV X24, X0
	0x0357A830 CBZ X0, 0x357A848
	0x0357A834 LDR X8, [X23]
	0x0357A838 MOV X0, X24
	0x0357A83C LDR X1, [X8 + 0x40]
	0x0357A840 BL 0x1C16E00
	0x0357A844 CBZ X0, 0x357AC74
	0x0357A848 LDR W8, [X23 + 0x18]
	0x0357A84C CMP W8, 0x1
	0x0357A850 B.LS 0x357AC70
	0x0357A854 STR X24, [X23 + 0x28]
	0x0357A858 ADRP X29, 0xB79000
	0x0357A85C LDRB W8, [X19 + 0x30]
	0x0357A860 LDR X29, [X29 + 0xB58]
	0x0357A864 ADD X1, X31, 0x14
	0x0357A868 STRB W8, [X31 + 0x14]
	0x0357A86C LDR X0, [X29]
	0x0357A870 BL 0x1C16E04
	0x0357A874 MOV X24, X0
	0x0357A878 CBZ X0, 0x357A890
	0x0357A87C LDR X8, [X23]
	0x0357A880 MOV X0, X24
	0x0357A884 LDR X1, [X8 + 0x40]
	0x0357A888 BL 0x1C16E00
	0x0357A88C CBZ X0, 0x357AC74
	0x0357A890 LDR W8, [X23 + 0x18]
	0x0357A894 CMP W8, 0x2
	0x0357A898 B.LS 0x357AC70
	0x0357A89C STR X24, [X23 + 0x30]
	0x0357A8A0 CBZ X21, 0x357AC6C
	0x0357A8A4 ADRP X9, 0xB7E000
	0x0357A8A8 LDR X8, [X21]
	0x0357A8AC LDR X9, [X9 + 0x348]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xE66000
	007 Move X20, 0xB7A000
	008 Move W8, [X21+3726]
	009 Move X20, [X20+1432]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {29}
	015 Move X0, 0xB7A000
	016 Move X0, [X0+2504]
	017 Call 0x1C17CF4
	018 Move X0, 0xB7F000
	019 Move X0, [X0+840]
	020 Call 0x1C17CF4
	021 Move X0, 0xB7A000
	022 Move X0, [X0+1432]
	023 Call 0x1C17CF4
	024 Move X0, 0xBBD000
	025 Move X0, [X0+960]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X21+3726], W8
	029 Move X0, [X20]
	030 Move X20, [X19+80]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {35}
	034 Call 0x1C17DFC
	035 Move X0, X20
	036 Move X1, X31
	037 Move X2, X31
	038 Call Object.op_Equality, X0, X1
	039 Move TEMP, X0
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfNotEqual {49}
	043 Move X20, [X31+32]
	044 Move X19, [X31+40]
	045 Move X22, [X31+16]
	046 Move X21, [X31+24]
	047 Move X30, [X31+48]
	048 Return 
	049 Move X9, [X19+32]
	050 Compare X9, 0
	051 JumpIfEqual {126}
	052 Move X8, 0xB7A000
	053 Move X8, [X8+2504]
	054 Move X20, [X9+24]
	055 Move X21, [X8]
	056 Move X8, [X21+56]
	057 Compare X8, 0
	058 JumpIfNotEqual {62}
	059 Move X0, X21
	060 Call 0x1C5D6E0
	061 Move X8, [X21+56]
	062 Move X0, [X8+16]
	063 Move W8, [X0+309]
	064 Move TEMP, X8
	065 And TEMP, TEMP, 1
	066 Compare TEMP, 1
	067 JumpIfEqual {69}
	068 Call 0x1C5D684
	069 Move W8, [X0+224]
	070 Compare W8, 0
	071 JumpIfNotEqual {73}
	072 Call 0x1C17DFC
	073 Move X8, [X21+56]
	074 Move X0, [X8+16]
	075 Move W8, [X0+309]
	076 Move TEMP, X8
	077 And TEMP, TEMP, 1
	078 Compare TEMP, 1
	079 JumpIfEqual {81}
	080 Call 0x1C5D684
	081 Compare X20, 0
	082 JumpIfEqual {126}
	083 Move X10, 0xB7F000
	084 Move X11, 0xBBD000
	085 Move X9, [X0+184]
	086 Move X10, [X10+840]
	087 Move X8, [X20]
	088 Move X11, [X11+960]
	089 Move X21, [X9]
	090 Move X1, [X10]
	091 NotImplemented "Instruction LDRH not yet implemented."
	092 Move X22, [X11]
	093 Compare X9, 0
	094 JumpIfEqual {101}
	095 Move X10, [X8+176]
	096 Add X10, X10, 8
	097 NotImplemented "Instruction LDUR not yet implemented."
	098 NotImplemented "Instruction CMP not yet implemented."
	099 Subtract X9, X9, 1
	100 Add X10, X10, 16
	101 Move W2, 1
	102 Move X0, X20
	103 Call 0x1C5D788
	104 Move W9, [X10]
	105 Add W9, W9, 1
	106 Add X8, X8, W9
	107 Add X0, X8, 312
	108 Move X8, [X0]
	109 Move X4, [X0+8]
	110 Move W1, 3
	111 Move X0, X20
	112 Move X2, X22
	113 Move X3, X21
	114 NotImplemented "Instruction BLR not yet implemented."
	115 Move X0, X19
	116 Call Recorder.StopRecording, X0
	117 Move X0, [X19+80]
	118 Compare X0, 0
	119 JumpIfEqual {126}
	120 Move X1, X19
	121 Move X20, [X31+32]
	122 Move X19, [X31+40]
	123 Move X22, [X31+16]
	124 Move X21, [X31+24]
	125 Move X30, [X31+48]
	126 Call 0x1C17F20

Method: System.Void HandleDeviceChange()

Disassembly:
	0x0357A514 BLR X8
	0x0357A518 STR S0, [X20 + 0x2C]
	0x0357A51C LDR X8, [X19 + 0x18]
	0x0357A520 CBZ X8, 0x357A548
	0x0357A524 LDR X9, [X19 + 0x10]
	0x0357A528 CBZ X9, 0x357A554
	0x0357A52C LDR V0, [X9 + 0x2C]
	0x0357A530 LDR X2, [X8 + 0x18]
	0x0357A534 LDR X0, [X8 + 0x40]
	0x0357A538 LDR X1, [X8 + 0x28]
	0x0357A53C LDP X20, X19, [X31 + 0x10]
	0x0357A540 LDP X30, X21, [X31], #0x20
	0x0357A544 BR X2
	0x0357A548 LDP X20, X19, [X31 + 0x10]
	0x0357A54C LDP X30, X21, [X31], #0x20
	0x0357A550 RET
	0x0357A554 BL 0x1C16F20
	0x0357A558 SUB X31, X31, 0x80
	0x0357A55C STP X29, X30, [X31 + 0x20]
	0x0357A560 STP X28, X27, [X31 + 0x30]
	0x0357A564 STP X26, X25, [X31 + 0x40]
	0x0357A568 STP X24, X23, [X31 + 0x50]
	0x0357A56C STP X22, X21, [X31 + 0x60]
	0x0357A570 STP X20, X19, [X31 + 0x70]
	0x0357A574 ADRP X20, 0xE65000
	0x0357A578 LDRB W8, [X20 + 0xE97]
	0x0357A57C MOV X19, X0
	0x0357A580 TBNZ X8, 0x0, 0x357A634
	0x0357A584 ADRP X0, 0xB79000
	0x0357A588 LDR X0, [X0 + 0x970]
	0x0357A58C BL 0x1C16CF4
	0x0357A590 ADRP X0, 0xB79000
	0x0357A594 LDR X0, [X0 + 0x9C8]
	0x0357A598 BL 0x1C16CF4
	0x0357A59C ADRP X0, 0xB79000
	0x0357A5A0 LDR X0, [X0 + 0xB58]
	0x0357A5A4 BL 0x1C16CF4
	0x0357A5A8 ADRP X0, 0xBBC000
	0x0357A5AC LDR X0, [X0 + 0x118]
	0x0357A5B0 BL 0x1C16CF4
	0x0357A5B4 ADRP X0, 0xBBC000
	0x0357A5B8 LDR X0, [X0 + 0x270]
	0x0357A5BC BL 0x1C16CF4
	0x0357A5C0 ADRP X0, 0xB7E000
	0x0357A5C4 LDR X0, [X0 + 0x348]
	0x0357A5C8 BL 0x1C16CF4
	0x0357A5CC ADRP X0, 0xBBC000
	0x0357A5D0 LDR X0, [X0 + 0x288]
	0x0357A5D4 BL 0x1C16CF4
	0x0357A5D8 ADRP X0, 0xB79000
	0x0357A5DC LDR X0, [X0 + 0x9D0]
	0x0357A5E0 BL 0x1C16CF4
	0x0357A5E4 ADRP X0, 0xB79000
	0x0357A5E8 LDR X0, [X0 + 0x598]
	0x0357A5EC BL 0x1C16CF4
	0x0357A5F0 ADRP X0, 0xB82000
	0x0357A5F4 LDR X0, [X0 + 0xA48]
	0x0357A5F8 BL 0x1C16CF4
	0x0357A5FC ADRP X0, 0xBBC000
	0x0357A600 LDR X0, [X0 + 0x410]
	0x0357A604 BL 0x1C16CF4
	0x0357A608 ADRP X0, 0xBBC000
	0x0357A60C LDR X0, [X0 + 0x418]
	0x0357A610 BL 0x1C16CF4
	0x0357A614 ADRP X0, 0xBBC000
	0x0357A618 LDR X0, [X0 + 0x420]
	0x0357A61C BL 0x1C16CF4
	0x0357A620 ADRP X0, 0xBBC000
	0x0357A624 LDR X0, [X0 + 0x428]
	0x0357A628 BL 0x1C16CF4
	0x0357A62C MOVZ W8, 0x1
	0x0357A630 STRB W8, [X20 + 0xE97]
	0x0357A634 MOV X0, X19
	0x0357A638 BL 0x35738F8
	0x0357A63C MOV X0, X19
	0x0357A640 MOV X1, X31
	0x0357A644 BL 0x3C323D4
	0x0357A648 TBZ X0, 0x0, 0x357AC4C
	0x0357A64C ADRP X8, 0xBBC000
	0x0357A650 LDR X8, [X8 + 0x118]
	0x0357A654 MOV X0, X19
	0x0357A658 LDR X1, [X8]
	0x0357A65C BL 0x21A3894
	0x0357A660 ADRP X8, 0xBBC000
	0x0357A664 LDR X8, [X8 + 0x270]
	0x0357A668 MOV X22, X0
	0x0357A66C MOV X0, X19
	0x0357A670 LDR X1, [X8]
	0x0357A674 BL 0x21A3894
	0x0357A678 ADRP X26, 0xB79000
	0x0357A67C LDR X26, [X26 + 0x970]
	0x0357A680 MOV X20, X0
	0x0357A684 LDR X8, [X26]
	0x0357A688 LDR W9, [X8 + 0xE0]
	0x0357A68C CBNZ W9, 0x357A698
	0x0357A690 MOV X0, X8
	0x0357A694 BL 0x1C16DFC
	0x0357A698 MOV X0, X31
	0x0357A69C BL 0x3C01AB0
	0x0357A6A0 LDR W8, [X19 + 0x28]
	0x0357A6A4 CMP W0, W8
	0x0357A6A8 B.NE 0x357AC4C
	0x0357A6AC ADRP X25, 0xB79000
	0x0357A6B0 LDR X25, [X25 + 0x598]
	0x0357A6B4 LDR X0, [X25]
	0x0357A6B8 LDR W8, [X0 + 0xE0]
	0x0357A6BC CBNZ W8, 0x357A6C4
	0x0357A6C0 BL 0x1C16DFC
	0x0357A6C4 MOV X0, X22
	0x0357A6C8 MOV X1, X31
	0x0357A6CC MOV X2, X31
	0x0357A6D0 BL 0x3C3883C
	0x0357A6D4 LDR X8, [X19 + 0x20]
	0x0357A6D8 CBZ X8, 0x357AC6C
	0x0357A6DC LDR X21, [X8 + 0x18]
	0x0357A6E0 TBZ X0, 0x0, 0x357A794
	0x0357A6E4 ADRP X8, 0xB79000
	0x0357A6E8 LDR X8, [X8 + 0x9C8]
	0x0357A6EC LDR X19, [X8]
	0x0357A6F0 LDR X8, [X19 + 0x38]
	0x0357A6F4 CBNZ X8, 0x357A704
	0x0357A6F8 MOV X0, X19
	0x0357A6FC BL 0x1C5C6E0
	0x0357A700 LDR X8, [X19 + 0x38]
	0x0357A704 LDR X0, [X8 + 0x10]
	0x0357A708 LDRB W8, [X0 + 0x135]
	0x0357A70C TBNZ X8, 0x0, 0x357A714

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xE66000
	007 Move W8, [X20+3727]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {27}
	013 Move X0, 0xB7A000
	014 Move X0, [X0+2504]
	015 Call 0x1C17CF4
	016 Move X0, 0xB7F000
	017 Move X0, [X0+840]
	018 Call 0x1C17CF4
	019 Move X0, 0xBBD000
	020 Move X0, [X0+944]
	021 Call 0x1C17CF4
	022 Move X0, 0xBBD000
	023 Move X0, [X0+952]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X20+3727], W8
	027 Move W8, [X19+137]
	028 Compare W8, 0
	029 JumpIfEqual {33}
	030 Move W8, [X19+120]
	031 Compare W8, 0
	032 JumpIfEqual {39}
	033 Move X20, [X31+32]
	034 Move X19, [X31+40]
	035 Move X22, [X31+16]
	036 Move X21, [X31+24]
	037 Move X30, [X31+48]
	038 Return 
	039 Move X0, X19
	040 Call Recorder.ResetLocalAudio, X0
	041 Move X9, [X19+32]
	042 Compare X9, 0
	043 JumpIfEqual {149}
	044 Move X8, 0xB7A000
	045 Move X8, [X8+2504]
	046 Move X20, [X9+24]
	047 Move W22, W0
	048 Move X21, [X8]
	049 Move X8, [X21+56]
	050 Compare X8, 0
	051 JumpIfNotEqual {55}
	052 Move X0, X21
	053 Call 0x1C5D6E0
	054 Move X8, [X21+56]
	055 Move X0, [X8+16]
	056 Move W8, [X0+309]
	057 Move TEMP, X8
	058 And TEMP, TEMP, 1
	059 Compare TEMP, 1
	060 JumpIfEqual {62}
	061 Call 0x1C5D684
	062 Move W8, [X0+224]
	063 Compare W8, 0
	064 JumpIfNotEqual {66}
	065 Call 0x1C17DFC
	066 Move X8, [X21+56]
	067 Move X0, [X8+16]
	068 Move W8, [X0+309]
	069 Move TEMP, X8
	070 And TEMP, TEMP, 1
	071 Compare TEMP, 1
	072 JumpIfEqual {74}
	073 Call 0x1C5D684
	074 Compare X20, 0
	075 JumpIfEqual {149}
	076 Move X9, 0xB7F000
	077 Move X8, [X0+184]
	078 Move X9, [X9+840]
	079 Move X21, [X8]
	080 Move X1, [X9]
	081 Move TEMP, X22
	082 And TEMP, TEMP, 1
	083 Compare TEMP, 1
	084 JumpIfNotEqual {101}
	085 Move X10, 0xBBD000
	086 Move X8, [X20]
	087 Move X10, [X10+952]
	088 NotImplemented "Instruction LDRH not yet implemented."
	089 Move X19, [X10]
	090 Compare X9, 0
	091 JumpIfEqual {98}
	092 Move X10, [X8+176]
	093 Add X10, X10, 8
	094 NotImplemented "Instruction LDUR not yet implemented."
	095 NotImplemented "Instruction CMP not yet implemented."
	096 Subtract X9, X9, 1
	097 Add X10, X10, 16
	098 Move W2, 1
	099 Move X0, X20
	100 Call 0x1C5D788
	101 Move X10, 0xBBD000
	102 Move X8, [X20]
	103 Move X10, [X10+944]
	104 NotImplemented "Instruction LDRH not yet implemented."
	105 Move X22, [X10]
	106 Compare X9, 0
	107 JumpIfEqual {114}
	108 Move X10, [X8+176]
	109 Add X10, X10, 8
	110 NotImplemented "Instruction LDUR not yet implemented."
	111 NotImplemented "Instruction CMP not yet implemented."
	112 Subtract X9, X9, 1
	113 Add X10, X10, 16
	114 Move W2, 1
	115 Move X0, X20
	116 Call 0x1C5D788
	117 Move W9, [X10]
	118 Add W9, W9, 1
	119 Add X8, X8, W9
	120 Add X0, X8, 312
	121 Move X5, [X0]
	122 Move X4, [X0+8]
	123 Move X0, X20
	124 Move X2, X19
	125 Move X3, X21
	126 Move X20, [X31+32]
	127 Move X19, [X31+40]
	128 Move X22, [X31+16]
	129 Move X21, [X31+24]
	130 Move W1, 3
	131 Move X30, [X31+48]
	132 CallNoReturn X5
	133 Move W9, [X10]
	134 Add W9, W9, 1
	135 Add X8, X8, W9
	136 Add X0, X8, 312
	137 Move X8, [X0]
	138 Move X4, [X0+8]
	139 Move W1, 3
	140 Move X0, X20
	141 Move X2, X22
	142 Move X3, X21
	143 NotImplemented "Instruction BLR not yet implemented."
	144 Move W8, [X19+137]
	145 Compare W8, 0
	146 JumpIfEqual {33}
	147 Move W8, 1
	148 Move [X19+220], W8
	149 Call 0x1C17F20

Method: System.Void OnApplicationPause(System.Boolean paused)

Disassembly:
	0x0357A968 LDR W1, [X19 + 0x2C]
	0x0357A96C MOV X0, X22
	0x0357A970 BL 0x3574F70
	0x0357A974 LDR X0, [X25]
	0x0357A978 LDR W8, [X0 + 0xE0]
	0x0357A97C CBNZ W8, 0x357A984
	0x0357A980 BL 0x1C16DFC
	0x0357A984 MOV X0, X20
	0x0357A988 MOV X1, X31
	0x0357A98C MOV X2, X31
	0x0357A990 BL 0x3C3883C
	0x0357A994 TBZ X0, 0x0, 0x357AA54
	0x0357A998 LDR X9, [X19 + 0x20]
	0x0357A99C CBZ X9, 0x357AC6C
	0x0357A9A0 ADRP X8, 0xB79000
	0x0357A9A4 LDR X8, [X8 + 0x9C8]
	0x0357A9A8 LDR X19, [X9 + 0x18]
	0x0357A9AC LDR X20, [X8]
	0x0357A9B0 LDR X8, [X20 + 0x38]
	0x0357A9B4 CBNZ X8, 0x357A9C4
	0x0357A9B8 MOV X0, X20
	0x0357A9BC BL 0x1C5C6E0
	0x0357A9C0 LDR X8, [X20 + 0x38]
	0x0357A9C4 LDR X0, [X8 + 0x10]
	0x0357A9C8 LDRB W8, [X0 + 0x135]
	0x0357A9CC TBNZ X8, 0x0, 0x357A9D4
	0x0357A9D0 BL 0x1C5C684
	0x0357A9D4 LDR W8, [X0 + 0xE0]
	0x0357A9D8 CBNZ W8, 0x357A9E0
	0x0357A9DC BL 0x1C16DFC
	0x0357A9E0 LDR X8, [X20 + 0x38]
	0x0357A9E4 LDR X0, [X8 + 0x10]
	0x0357A9E8 LDRB W8, [X0 + 0x135]
	0x0357A9EC TBNZ X8, 0x0, 0x357A9F4
	0x0357A9F0 BL 0x1C5C684
	0x0357A9F4 CBZ X19, 0x357AC6C
	0x0357A9F8 ADRP X10, 0xB7E000
	0x0357A9FC LDR X9, [X0 + 0xB8]
	0x0357AA00 LDR X8, [X19]
	0x0357AA04 LDR X10, [X10 + 0x348]
	0x0357AA08 LDR X1, [X10]
	0x0357AA0C ADRP X10, 0xBBC000
	0x0357AA10 LDR X10, [X10 + 0x410]
	0x0357AA14 LDR X20, [X9]
	0x0357AA18 LDRH W9, [X8 + 0x12E]
	0x0357AA1C LDR X21, [X10]
	0x0357AA20 CBZ X9, 0x357AA44
	0x0357AA24 LDR X10, [X8 + 0xB0]
	0x0357AA28 ADD X10, X10, 0x8
	0x0357AA2C LDUR X11, [X10 - 0x8]
	0x0357AA30 CMP X11, X1
	0x0357AA34 B.EQ 0x357ABC0
	0x0357AA38 SUBS X9, X9, 0x1
	0x0357AA3C ADD X10, X10, 0x10
	0x0357AA40 B.NE 0x357AA2C
	0x0357AA44 MOVZ W2, 0x1
	0x0357AA48 MOV X0, X19
	0x0357AA4C BL 0x1C5C788
	0x0357AA50 B 0x357ABD0
	0x0357AA54 CBZ X20, 0x357AC6C
	0x0357AA58 LDRB W1, [X19 + 0x30]
	0x0357AA5C MOV X0, X20
	0x0357AA60 MOV X2, X31
	0x0357AA64 BL 0x3C32410
	0x0357AA68 LDRB W8, [X19 + 0x30]
	0x0357AA6C CBZ W8, 0x357AC4C
	0x0357AA70 LDR X8, [X19 + 0x20]
	0x0357AA74 CBZ X8, 0x357AC6C
	0x0357AA78 LDR X0, [X27]
	0x0357AA7C LDR X21, [X8 + 0x18]
	0x0357AA80 MOVZ W1, 0x3
	0x0357AA84 BL 0x1C16D6C
	0x0357AA88 LDR X8, [X26]
	0x0357AA8C MOV X22, X0
	0x0357AA90 LDR W9, [X8 + 0xE0]
	0x0357AA94 CBNZ W9, 0x357AAA0
	0x0357AA98 MOV X0, X8
	0x0357AA9C BL 0x1C16DFC
	0x0357AAA0 MOV X0, X31
	0x0357AAA4 BL 0x3C01AB0
	0x0357AAA8 LDR X8, [X28]
	0x0357AAAC STR W0, [X31 + 0x10]
	0x0357AAB0 ADD X1, X31, 0x10
	0x0357AAB4 MOV X0, X8
	0x0357AAB8 BL 0x1C16E04
	0x0357AABC CBZ X22, 0x357AC6C
	0x0357AAC0 MOV X23, X0
	0x0357AAC4 CBZ X0, 0x357AADC
	0x0357AAC8 LDR X8, [X22]
	0x0357AACC MOV X0, X23
	0x0357AAD0 LDR X1, [X8 + 0x40]
	0x0357AAD4 BL 0x1C16E00
	0x0357AAD8 CBZ X0, 0x357AC74
	0x0357AADC LDR W8, [X22 + 0x18]
	0x0357AAE0 CBZ W8, 0x357AC70
	0x0357AAE4 STR X23, [X22 + 0x20]
	0x0357AAE8 LDRB W8, [X19 + 0x31]
	0x0357AAEC LDR X0, [X29]
	0x0357AAF0 ADD X1, X31, 0xC
	0x0357AAF4 STRB W8, [X31 + 0xC]
	0x0357AAF8 BL 0x1C16E04
	0x0357AAFC MOV X23, X0
	0x0357AB00 CBZ X0, 0x357AB18
	0x0357AB04 LDR X8, [X22]
	0x0357AB08 MOV X0, X23
	0x0357AB0C LDR X1, [X8 + 0x40]
	0x0357AB10 BL 0x1C16E00
	0x0357AB14 CBZ X0, 0x357AC74
	0x0357AB18 LDR W8, [X22 + 0x18]
	0x0357AB1C CMP W8, 0x1

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0xE66000
	009 Move X21, 0xB7A000
	010 Move W8, [X22+3728]
	011 Move X21, [X21+1432]
	012 Move W20, W1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {35}
	018 Move X0, 0xB7A000
	019 Move X0, [X0+2904]
	020 Call 0x1C17CF4
	021 Move X0, 0xB7F000
	022 Move X0, [X0+840]
	023 Call 0x1C17CF4
	024 Move X0, 0xB7A000
	025 Move X0, [X0+2512]
	026 Call 0x1C17CF4
	027 Move X0, 0xB7A000
	028 Move X0, [X0+1432]
	029 Call 0x1C17CF4
	030 Move X0, 0xBBD000
	031 Move X0, [X0+976]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X22+3728], W8
	035 Move X0, [X21]
	036 Move X21, [X19+80]
	037 Move W8, [X0+224]
	038 Compare W8, 0
	039 JumpIfNotEqual {41}
	040 Call 0x1C17DFC
	041 Move X0, X21
	042 Move X1, X31
	043 Move X2, X31
	044 Call Object.op_Equality, X0, X1
	045 Move TEMP, X0
	046 And TEMP, TEMP, 1
	047 Compare TEMP, 1
	048 JumpIfEqual {116}
	049 Move X8, [X19+32]
	050 Compare X8, 0
	051 JumpIfEqual {124}
	052 Move X21, [X8+24]
	053 Move X8, 0xB7A000
	054 Move X8, [X8+2512]
	055 Move W1, 1
	056 And W23, W20, 1
	057 Move X0, [X8]
	058 Call 0x1C17D6C
	059 Move X8, 0xB7A000
	060 Move X8, [X8+2904]
	061 Move X22, X0
	062 Add X1, X31, 12
	063 Move [X31+12], W23
	064 Move X0, [X8]
	065 Call 0x1C17E04
	066 Compare X22, 0
	067 JumpIfEqual {124}
	068 Move X23, X0
	069 Compare X0, 0
	070 JumpIfEqual {77}
	071 Move X8, [X22]
	072 Move X0, X23
	073 Move X1, [X8+64]
	074 Call 0x1C17E00
	075 Compare X0, 0
	076 JumpIfEqual {126}
	077 Move W8, [X22+24]
	078 Compare W8, 0
	079 JumpIfEqual {125}
	080 Move [X22+32], X23
	081 Compare X21, 0
	082 JumpIfEqual {124}
	083 Move X9, 0xB7F000
	084 Move X8, [X21]
	085 Move X9, [X9+840]
	086 Move X10, 0xBBD000
	087 Move X1, [X9]
	088 Move X10, [X10+976]
	089 NotImplemented "Instruction LDRH not yet implemented."
	090 Move X23, [X10]
	091 Compare X9, 0
	092 JumpIfEqual {99}
	093 Move X10, [X8+176]
	094 Add X10, X10, 8
	095 NotImplemented "Instruction LDUR not yet implemented."
	096 NotImplemented "Instruction CMP not yet implemented."
	097 Subtract X9, X9, 1
	098 Add X10, X10, 16
	099 Move W2, 1
	100 Move X0, X21
	101 Call 0x1C5D788
	102 Move W9, [X10]
	103 Add W9, W9, 1
	104 Add X8, X8, W9
	105 Add X0, X8, 312
	106 Move X8, [X0]
	107 Move X4, [X0+8]
	108 Move W1, 4
	109 Move X0, X21
	110 Move X2, X23
	111 Move X3, X22
	112 NotImplemented "Instruction BLR not yet implemented."
	113 And W1, W20, 1
	114 Move X0, X19
	115 Call Recorder.HandleApplicationPause, X0, X1
	116 Move X20, [X31+48]
	117 Move X19, [X31+56]
	118 Move X22, [X31+32]
	119 Move X21, [X31+40]
	120 Move X30, [X31+16]
	121 Move X23, [X31+24]
	122 Add X31, X31, 64
	123 Return 
	124 Call 0x1C17F20
	125 Call 0x1C17F28
	126 Call 0x1C17F44
	127 Move X1, X31
	128 Call 0x1C17DEC

Method: System.Void OnApplicationFocus(System.Boolean focused)

Disassembly:
	0x0357B084 LDR X0, [X8 + 0x40]
	0x0357B088 LDR X1, [X8 + 0x28]
	0x0357B08C BR X2
	0x0357B090 RET
	0x0357B094 LDR X8, [X0 + 0x50]
	0x0357B098 CBZ X8, 0x357B0AC
	0x0357B09C LDR X3, [X8 + 0x18]
	0x0357B0A0 LDR X0, [X8 + 0x40]
	0x0357B0A4 LDR X2, [X8 + 0x28]
	0x0357B0A8 BR X3
	0x0357B0AC RET
	0x0357B0B0 SUB X31, X31, 0x70
	0x0357B0B4 STR X30, [X31 + 0x40]
	0x0357B0B8 STP X22, X21, [X31 + 0x50]
	0x0357B0BC STP X20, X19, [X31 + 0x60]
	0x0357B0C0 ADRP X20, 0xE64000
	0x0357B0C4 LDRB W8, [X20 + 0xE9D]
	0x0357B0C8 MOV X19, X0
	0x0357B0CC TBNZ X8, 0x0, 0x357B114
	0x0357B0D0 ADRP X0, 0xB79000
	0x0357B0D4 LDR X0, [X0 + 0x9D8]
	0x0357B0D8 BL 0x1C16CF4
	0x0357B0DC ADRP X0, 0xB78000
	0x0357B0E0 LDR X0, [X0 + 0x758]
	0x0357B0E4 BL 0x1C16CF4
	0x0357B0E8 ADRP X0, 0xB78000
	0x0357B0EC LDR X0, [X0 + 0x9D0]
	0x0357B0F0 BL 0x1C16CF4
	0x0357B0F4 ADRP X0, 0xB7D000
	0x0357B0F8 LDR X0, [X0 + 0x390]
	0x0357B0FC BL 0x1C16CF4
	0x0357B100 ADRP X0, 0xBBB000
	0x0357B104 LDR X0, [X0 + 0x440]
	0x0357B108 BL 0x1C16CF4
	0x0357B10C MOVZ W8, 0x1
	0x0357B110 STRB W8, [X20 + 0xE9D]
	0x0357B114 LDR X0, [X19 + 0x60]
	0x0357B118 MOV X1, X31
	0x0357B11C BL 0x32277A8
	0x0357B120 TBZ X0, 0x0, 0x357B27C
	0x0357B124 ADRP X8, 0xB78000
	0x0357B128 LDR X8, [X8 + 0x9D0]
	0x0357B12C ADRP X22, 0xB78000
	0x0357B130 MOVZ W1, 0x4
	0x0357B134 LDR X0, [X8]
	0x0357B138 LDR X22, [X22 + 0x758]
	0x0357B13C BL 0x1C16D6C
	0x0357B140 MOV X20, X0
	0x0357B144 LDR W8, [X19 + 0x40]
	0x0357B148 LDR X0, [X22]
	0x0357B14C ADD X1, X31, 0x4C
	0x0357B150 STR W8, [X31 + 0x4C]
	0x0357B154 BL 0x1C16E04
	0x0357B158 CBZ X20, 0x357B2A4
	0x0357B15C MOV X21, X0
	0x0357B160 CBZ X0, 0x357B178
	0x0357B164 LDR X8, [X20]
	0x0357B168 MOV X0, X21
	0x0357B16C LDR X1, [X8 + 0x40]
	0x0357B170 BL 0x1C16E00
	0x0357B174 CBZ X0, 0x357B298
	0x0357B178 LDR W8, [X20 + 0x18]
	0x0357B17C CBZ W8, 0x357B294
	0x0357B180 STR X21, [X20 + 0x20]
	0x0357B184 ADRP X9, 0xB79000
	0x0357B188 LDRB W8, [X19 + 0x44]
	0x0357B18C LDR X9, [X9 + 0x9D8]
	0x0357B190 ADD X1, X31, 0x48
	0x0357B194 STRB W8, [X31 + 0x48]
	0x0357B198 LDR X0, [X9]
	0x0357B19C BL 0x1C16E04
	0x0357B1A0 MOV X21, X0
	0x0357B1A4 CBZ X0, 0x357B1BC
	0x0357B1A8 LDR X8, [X20]
	0x0357B1AC MOV X0, X21
	0x0357B1B0 LDR X1, [X8 + 0x40]
	0x0357B1B4 BL 0x1C16E00
	0x0357B1B8 CBZ X0, 0x357B298
	0x0357B1BC LDR W8, [X20 + 0x18]
	0x0357B1C0 CMP W8, 0x1
	0x0357B1C4 B.LS 0x357B294
	0x0357B1C8 STR X21, [X20 + 0x28]
	0x0357B1CC LDR W8, [X19 + 0x48]
	0x0357B1D0 LDR X0, [X22]
	0x0357B1D4 ADD X1, X31, 0x3C
	0x0357B1D8 STR W8, [X31 + 0x3C]
	0x0357B1DC BL 0x1C16E04
	0x0357B1E0 MOV X21, X0
	0x0357B1E4 CBZ X0, 0x357B1FC
	0x0357B1E8 LDR X8, [X20]
	0x0357B1EC MOV X0, X21
	0x0357B1F0 LDR X1, [X8 + 0x40]
	0x0357B1F4 BL 0x1C16E00
	0x0357B1F8 CBZ X0, 0x357B298
	0x0357B1FC LDR W8, [X20 + 0x18]
	0x0357B200 CMP W8, 0x2
	0x0357B204 B.LS 0x357B294
	0x0357B208 STR X21, [X20 + 0x30]
	0x0357B20C ADRP X8, 0xB7D000
	0x0357B210 LDP V2, V0, [X19 + 0x20]
	0x0357B214 LDR V1, [X19 + 0x1]
	0x0357B218 LDR X8, [X8 + 0x390]
	0x0357B21C ADD X1, X31, 0x0
	0x0357B220 STP V2, V0, [X31 + 0x10]
	0x0357B224 STR V1, [X31]
	0x0357B228 LDR X0, [X8]
	0x0357B22C BL 0x1C16E04
	0x0357B230 MOV X21, X0
	0x0357B234 CBZ X0, 0x357B24C
	0x0357B238 LDR X8, [X20]
	0x0357B23C MOV X0, X21

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0xE65000
	009 Move X21, 0xB79000
	010 Move W8, [X22+3729]
	011 Move X21, [X21+1432]
	012 Move W20, W1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {35}
	018 Move X0, 0xB79000
	019 Move X0, [X0+2904]
	020 Call 0x1C17CF4
	021 Move X0, 0xB7E000
	022 Move X0, [X0+840]
	023 Call 0x1C17CF4
	024 Move X0, 0xB79000
	025 Move X0, [X0+2512]
	026 Call 0x1C17CF4
	027 Move X0, 0xB79000
	028 Move X0, [X0+1432]
	029 Call 0x1C17CF4
	030 Move X0, 0xBBC000
	031 Move X0, [X0+1016]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X22+3729], W8
	035 Move X0, [X21]
	036 Move X21, [X19+80]
	037 Move W8, [X0+224]
	038 Compare W8, 0
	039 JumpIfNotEqual {41}
	040 Call 0x1C17DFC
	041 Move X0, X21
	042 Move X1, X31
	043 Move X2, X31
	044 Call Object.op_Equality, X0, X1
	045 Move TEMP, X0
	046 And TEMP, TEMP, 1
	047 Compare TEMP, 1
	048 JumpIfEqual {117}
	049 Move X8, [X19+32]
	050 Compare X8, 0
	051 JumpIfEqual {125}
	052 Move X21, [X8+24]
	053 Move X8, 0xB79000
	054 Move X8, [X8+2512]
	055 Move W1, 1
	056 And W23, W20, 1
	057 Move X0, [X8]
	058 Call 0x1C17D6C
	059 Move X8, 0xB79000
	060 Move X8, [X8+2904]
	061 Move X22, X0
	062 Add X1, X31, 12
	063 Move [X31+12], W23
	064 Move X0, [X8]
	065 Call 0x1C17E04
	066 Compare X22, 0
	067 JumpIfEqual {125}
	068 Move X23, X0
	069 Compare X0, 0
	070 JumpIfEqual {77}
	071 Move X8, [X22]
	072 Move X0, X23
	073 Move X1, [X8+64]
	074 Call 0x1C17E00
	075 Compare X0, 0
	076 JumpIfEqual {127}
	077 Move W8, [X22+24]
	078 Compare W8, 0
	079 JumpIfEqual {126}
	080 Move [X22+32], X23
	081 Compare X21, 0
	082 JumpIfEqual {125}
	083 Move X9, 0xB7E000
	084 Move X8, [X21]
	085 Move X9, [X9+840]
	086 Move X10, 0xBBC000
	087 Move X1, [X9]
	088 Move X10, [X10+1016]
	089 NotImplemented "Instruction LDRH not yet implemented."
	090 Move X23, [X10]
	091 Compare X9, 0
	092 JumpIfEqual {99}
	093 Move X10, [X8+176]
	094 Add X10, X10, 8
	095 NotImplemented "Instruction LDUR not yet implemented."
	096 NotImplemented "Instruction CMP not yet implemented."
	097 Subtract X9, X9, 1
	098 Add X10, X10, 16
	099 Move W2, 1
	100 Move X0, X21
	101 Call 0x1C5D788
	102 Move W9, [X10]
	103 Add W9, W9, 1
	104 Add X8, X8, W9
	105 Add X0, X8, 312
	106 Move X8, [X0]
	107 Move X4, [X0+8]
	108 Move W1, 4
	109 Move X0, X21
	110 Move X2, X23
	111 Move X3, X22
	112 NotImplemented "Instruction BLR not yet implemented."
	113 NotImplemented "Instruction ORN not yet implemented."
	114 And W1, W8, 1
	115 Move X0, X19
	116 Call Recorder.HandleApplicationPause, X0, X1
	117 Move X20, [X31+48]
	118 Move X19, [X31+56]
	119 Move X22, [X31+32]
	120 Move X21, [X31+40]
	121 Move X30, [X31+16]
	122 Move X23, [X31+24]
	123 Add X31, X31, 64
	124 Return 
	125 Call 0x1C17F20
	126 Call 0x1C17F28
	127 Call 0x1C17F44
	128 Move X1, X31
	129 Call 0x1C17DEC

Method: System.Void HandleApplicationPause(System.Boolean paused)

Disassembly:
	0x0357AB20 B.LS 0x357AC70
	0x0357AB24 STR X23, [X22 + 0x28]
	0x0357AB28 LDRB W8, [X19 + 0x32]
	0x0357AB2C LDR X0, [X29]
	0x0357AB30 ADD X1, X31, 0x8
	0x0357AB34 STRB W8, [X31 + 0x8]
	0x0357AB38 BL 0x1C16E04
	0x0357AB3C MOV X23, X0
	0x0357AB40 CBZ X0, 0x357AB58
	0x0357AB44 LDR X8, [X22]
	0x0357AB48 MOV X0, X23
	0x0357AB4C LDR X1, [X8 + 0x40]
	0x0357AB50 BL 0x1C16E00
	0x0357AB54 CBZ X0, 0x357AC74
	0x0357AB58 LDR W8, [X22 + 0x18]
	0x0357AB5C CMP W8, 0x2
	0x0357AB60 B.LS 0x357AC70
	0x0357AB64 STR X23, [X22 + 0x30]
	0x0357AB68 CBZ X21, 0x357AC6C
	0x0357AB6C ADRP X9, 0xB7E000
	0x0357AB70 LDR X8, [X21]
	0x0357AB74 LDR X9, [X9 + 0x348]
	0x0357AB78 ADRP X10, 0xBBC000
	0x0357AB7C LDR X1, [X9]
	0x0357AB80 LDR X10, [X10 + 0x420]
	0x0357AB84 LDRH W9, [X8 + 0x12E]
	0x0357AB88 LDR X23, [X10]
	0x0357AB8C CBZ X9, 0x357ABB0
	0x0357AB90 LDR X10, [X8 + 0xB0]
	0x0357AB94 ADD X10, X10, 0x8
	0x0357AB98 LDUR X11, [X10 - 0x8]
	0x0357AB9C CMP X11, X1
	0x0357ABA0 B.EQ 0x357ABEC
	0x0357ABA4 SUBS X9, X9, 0x1
	0x0357ABA8 ADD X10, X10, 0x10
	0x0357ABAC B.NE 0x357AB98
	0x0357ABB0 MOVZ W2, 0x1
	0x0357ABB4 MOV X0, X21
	0x0357ABB8 BL 0x1C5C788
	0x0357ABBC B 0x357ABFC
	0x0357ABC0 LDR W9, [X10]
	0x0357ABC4 ADD W9, W9, 0x1
	0x0357ABC8 ADD X8, X8, W9, 0x4, SXTW
	0x0357ABCC ADD X0, X8, 0x138
	0x0357ABD0 LDP X8, X4, [X0]
	0x0357ABD4 MOVZ W1, 0x1
	0x0357ABD8 MOV X0, X19
	0x0357ABDC MOV X2, X21
	0x0357ABE0 MOV X3, X20
	0x0357ABE4 BLR X8
	0x0357ABE8 B 0x357AC4C
	0x0357ABEC LDR W9, [X10]
	0x0357ABF0 ADD W9, W9, 0x1
	0x0357ABF4 ADD X8, X8, W9, 0x4, SXTW
	0x0357ABF8 ADD X0, X8, 0x138
	0x0357ABFC LDP X8, X4, [X0]
	0x0357AC00 MOVZ W1, 0x3
	0x0357AC04 MOV X0, X21
	0x0357AC08 MOV X2, X23
	0x0357AC0C MOV X3, X22
	0x0357AC10 BLR X8
	0x0357AC14 LDRB W8, [X19 + 0x31]
	0x0357AC18 LDRB W9, [X20 + 0x28]
	0x0357AC1C CMP W9, W8
	0x0357AC20 B.EQ 0x357AC30
	0x0357AC24 MOV X0, X20
	0x0357AC28 STRB W8, [X20 + 0x28]
	0x0357AC2C BL 0x357FF78
	0x0357AC30 LDRB W8, [X19 + 0x32]
	0x0357AC34 LDRB W9, [X20 + 0x34]
	0x0357AC38 CMP W9, W8
	0x0357AC3C B.EQ 0x357AC4C
	0x0357AC40 MOV X0, X20
	0x0357AC44 STRB W8, [X20 + 0x34]
	0x0357AC48 BL 0x357FF78
	0x0357AC4C LDP X20, X19, [X31 + 0x70]
	0x0357AC50 LDP X22, X21, [X31 + 0x60]
	0x0357AC54 LDP X24, X23, [X31 + 0x50]
	0x0357AC58 LDP X26, X25, [X31 + 0x40]
	0x0357AC5C LDP X28, X27, [X31 + 0x30]
	0x0357AC60 LDP X29, X30, [X31 + 0x20]
	0x0357AC64 ADD X31, X31, 0x80
	0x0357AC68 RET
	0x0357AC6C BL 0x1C16F20
	0x0357AC70 BL 0x1C16F28
	0x0357AC74 BL 0x1C16F44
	0x0357AC78 MOV X1, X31
	0x0357AC7C BL 0x1C16DEC
	0x0357AC80 LDRB W9, [X0 + 0x28]
	0x0357AC84 AND W8, W1, 0x1
	0x0357AC88 CMP W9, W8
	0x0357AC8C B.NE 0x357AC94
	0x0357AC90 RET
	0x0357AC94 STRB W8, [X0 + 0x28]
	0x0357AC98 B 0x357FF78
	0x0357AC9C LDRB W9, [X0 + 0x34]
	0x0357ACA0 AND W8, W1, 0x1
	0x0357ACA4 CMP W9, W8
	0x0357ACA8 B.NE 0x357ACB0
	0x0357ACAC RET
	0x0357ACB0 STRB W8, [X0 + 0x34]
	0x0357ACB4 B 0x357FF78
	0x0357ACB8 B 0x357413C
	0x0357ACBC STR X30, [X31 - 0x40]!
	0x0357ACC0 STP X24, X23, [X31 + 0x10]
	0x0357ACC4 STP X22, X21, [X31 + 0x20]
	0x0357ACC8 STP X20, X19, [X31 + 0x30]
	0x0357ACCC ADRP X21, 0xE65000
	0x0357ACD0 LDRB W8, [X21 + 0xE98]
	0x0357ACD4 MOV X19, X1
	0x0357ACD8 MOV X20, X0
	0x0357ACDC TBNZ X8, 0x0, 0x357ACF4
	0x0357ACE0 ADRP X0, 0xB7E000
	0x0357ACE4 LDR X0, [X0 + 0x358]
	0x0357ACE8 BL 0x1C16CF4
	0x0357ACEC MOVZ W8, 0x1
	0x0357ACF0 STRB W8, [X21 + 0xE98]
	0x0357ACF4 ADRP X24, 0xB7E000
	0x0357ACF8 LDR X21, [X20 + 0x50]!
	0x0357ACFC LDR X24, [X24 + 0x358]
	0x0357AD00 MOV X0, X21
	0x0357AD04 MOV X1, X19
	0x0357AD08 MOV X2, X31
	0x0357AD0C BL 0x33C0DE4
	0x0357AD10 CBZ X0, 0x357AD30
	0x0357AD14 LDR X23, [X24]
	0x0357AD18 MOV X22, X0
	0x0357AD1C MOV X1, X23
	0x0357AD20 BL 0x1C16E00
	0x0357AD24 MOV X1, X0
	0x0357AD28 CBNZ X0, 0x357AD34
	0x0357AD2C B 0x357AD60
	0x0357AD30 MOV X1, X31
	0x0357AD34 MOV X0, X20
	0x0357AD38 MOV X2, X21
	0x0357AD3C BL 0x1C24138
	0x0357AD40 CMP X21, X0
	0x0357AD44 MOV X21, X0
	0x0357AD48 B.NE 0x357AD00
	0x0357AD4C LDP X20, X19, [X31 + 0x30]
	0x0357AD50 LDP X22, X21, [X31 + 0x20]
	0x0357AD54 LDP X24, X23, [X31 + 0x10]
	0x0357AD58 LDR X30, [X31], #0x40
	0x0357AD5C RET
	0x0357AD60 MOV X0, X22
	0x0357AD64 MOV X1, X23
	0x0357AD68 BL 0x1C171E0
	0x0357AD6C STR X30, [X31 - 0x40]!
	0x0357AD70 STP X24, X23, [X31 + 0x10]
	0x0357AD74 STP X22, X21, [X31 + 0x20]
	0x0357AD78 STP X20, X19, [X31 + 0x30]
	0x0357AD7C ADRP X21, 0xE65000
	0x0357AD80 LDRB W8, [X21 + 0xE99]
	0x0357AD84 MOV X19, X1
	0x0357AD88 MOV X20, X0
	0x0357AD8C TBNZ X8, 0x0, 0x357ADA4
	0x0357AD90 ADRP X0, 0xB7E000
	0x0357AD94 LDR X0, [X0 + 0x358]
	0x0357AD98 BL 0x1C16CF4
	0x0357AD9C MOVZ W8, 0x1
	0x0357ADA0 STRB W8, [X21 + 0xE99]
	0x0357ADA4 ADRP X24, 0xB7E000
	0x0357ADA8 LDR X21, [X20 + 0x50]!
	0x0357ADAC LDR X24, [X24 + 0x358]
	0x0357ADB0 MOV X0, X21
	0x0357ADB4 MOV X1, X19
	0x0357ADB8 MOV X2, X31
	0x0357ADBC BL 0x33C0FDC
	0x0357ADC0 CBZ X0, 0x357ADE0
	0x0357ADC4 LDR X23, [X24]
	0x0357ADC8 MOV X22, X0
	0x0357ADCC MOV X1, X23
	0x0357ADD0 BL 0x1C16E00
	0x0357ADD4 MOV X1, X0
	0x0357ADD8 CBNZ X0, 0x357ADE4
	0x0357ADDC B 0x357AE10
	0x0357ADE0 MOV X1, X31
	0x0357ADE4 MOV X0, X20
	0x0357ADE8 MOV X2, X21
	0x0357ADEC BL 0x1C24138
	0x0357ADF0 CMP X21, X0
	0x0357ADF4 MOV X21, X0
	0x0357ADF8 B.NE 0x357ADB0
	0x0357ADFC LDP X20, X19, [X31 + 0x30]
	0x0357AE00 LDP X22, X21, [X31 + 0x20]
	0x0357AE04 LDP X24, X23, [X31 + 0x10]
	0x0357AE08 LDR X30, [X31], #0x40
	0x0357AE0C RET
	0x0357AE10 MOV X0, X22
	0x0357AE14 MOV X1, X23
	0x0357AE18 BL 0x1C171E0
	0x0357AE1C STR X30, [X31 - 0x30]!
	0x0357AE20 STP X22, X21, [X31 + 0x10]
	0x0357AE24 STP X20, X19, [X31 + 0x20]
	0x0357AE28 ADRP X21, 0xE65000
	0x0357AE2C LDRB W8, [X21 + 0xE9A]
	0x0357AE30 MOV X19, X1
	0x0357AE34 MOV X20, X0
	0x0357AE38 TBNZ X8, 0x0, 0x357AE50
	0x0357AE3C ADRP X0, 0xB7A000
	0x0357AE40 LDR X0, [X0 + 0xE70]
	0x0357AE44 BL 0x1C16CF4
	0x0357AE48 MOVZ W8, 0x1
	0x0357AE4C STRB W8, [X21 + 0xE9A]
	0x0357AE50 ADRP X22, 0xB7A000
	0x0357AE54 LDR X21, [X20 + 0x58]!
	0x0357AE58 LDR X22, [X22 + 0xE70]
	0x0357AE5C MOV X0, X21
	0x0357AE60 MOV X1, X19
	0x0357AE64 MOV X2, X31
	0x0357AE68 BL 0x33C0DE4
	0x0357AE6C MOV X8, X0
	0x0357AE70 CBZ X0, 0x357AE84
	0x0357AE74 LDR X1, [X22]
	0x0357AE78 LDR X9, [X8]
	0x0357AE7C CMP X9, X1
	0x0357AE80 B.NE 0x357AEB0
	0x0357AE84 MOV X0, X20
	0x0357AE88 MOV X1, X8
	0x0357AE8C MOV X2, X21
	0x0357AE90 BL 0x1C24138
	0x0357AE94 CMP X21, X0
	0x0357AE98 MOV X21, X0
	0x0357AE9C B.NE 0x357AE5C
	0x0357AEA0 LDP X20, X19, [X31 + 0x20]
	0x0357AEA4 LDP X22, X21, [X31 + 0x10]
	0x0357AEA8 LDR X30, [X31], #0x30
	0x0357AEAC RET
	0x0357AEB0 MOV X0, X8
	0x0357AEB4 BL 0x1C171E0
	0x0357AEB8 STR X30, [X31 - 0x30]!
	0x0357AEBC STP X22, X21, [X31 + 0x10]
	0x0357AEC0 STP X20, X19, [X31 + 0x20]
	0x0357AEC4 ADRP X21, 0xE65000
	0x0357AEC8 LDRB W8, [X21 + 0xE9B]
	0x0357AECC MOV X19, X1
	0x0357AED0 MOV X20, X0
	0x0357AED4 TBNZ X8, 0x0, 0x357AEEC
	0x0357AED8 ADRP X0, 0xB7A000
	0x0357AEDC LDR X0, [X0 + 0xE70]
	0x0357AEE0 BL 0x1C16CF4
	0x0357AEE4 MOVZ W8, 0x1
	0x0357AEE8 STRB W8, [X21 + 0xE9B]
	0x0357AEEC ADRP X22, 0xB7A000
	0x0357AEF0 LDR X21, [X20 + 0x58]!
	0x0357AEF4 LDR X22, [X22 + 0xE70]
	0x0357AEF8 MOV X0, X21
	0x0357AEFC MOV X1, X19
	0x0357AF00 MOV X2, X31
	0x0357AF04 BL 0x33C0FDC
	0x0357AF08 MOV X8, X0
	0x0357AF0C CBZ X0, 0x357AF20
	0x0357AF10 LDR X1, [X22]
	0x0357AF14 LDR X9, [X8]
	0x0357AF18 CMP X9, X1
	0x0357AF1C B.NE 0x357AF4C
	0x0357AF20 MOV X0, X20
	0x0357AF24 MOV X1, X8
	0x0357AF28 MOV X2, X21
	0x0357AF2C BL 0x1C24138
	0x0357AF30 CMP X21, X0
	0x0357AF34 MOV X21, X0
	0x0357AF38 B.NE 0x357AEF8
	0x0357AF3C LDP X20, X19, [X31 + 0x20]
	0x0357AF40 LDP X22, X21, [X31 + 0x10]
	0x0357AF44 LDR X30, [X31], #0x30
	0x0357AF48 RET
	0x0357AF4C MOV X0, X8
	0x0357AF50 BL 0x1C171E0
	0x0357AF54 STP X29, X30, [X31 - 0x60]!
	0x0357AF58 STP X28, X27, [X31 + 0x10]
	0x0357AF5C STP X26, X25, [X31 + 0x20]
	0x0357AF60 STP X24, X23, [X31 + 0x30]
	0x0357AF64 STP X22, X21, [X31 + 0x40]
	0x0357AF68 STP X20, X19, [X31 + 0x50]
	0x0357AF6C ADRP X29, 0xE65000
	0x0357AF70 ADRP X28, 0xB7E000
	0x0357AF74 ADRP X27, 0xBBC000
	0x0357AF78 ADRP X26, 0xB7A000
	0x0357AF7C ADRP X25, 0xBBC000
	0x0357AF80 LDRB W8, [X29 + 0xE9C]
	0x0357AF84 LDR X28, [X28 + 0x358]
	0x0357AF88 LDR X27, [X27 + 0x430]
	0x0357AF8C LDR X26, [X26 + 0xE70]
	0x0357AF90 LDR X25, [X25 + 0x438]
	0x0357AF94 MOV X19, X5
	0x0357AF98 MOV W21, W4
	0x0357AF9C MOV W22, W3
	0x0357AFA0 MOV W23, W2
	0x0357AFA4 MOV X24, X1
	0x0357AFA8 MOV X20, X0
	0x0357AFAC TBNZ X8, 0x0, 0x357AFE8
	0x0357AFB0 ADRP X0, 0xB7E000
	0x0357AFB4 LDR X0, [X0 + 0x358]
	0x0357AFB8 BL 0x1C16CF4
	0x0357AFBC ADRP X0, 0xB7A000
	0x0357AFC0 LDR X0, [X0 + 0xE70]
	0x0357AFC4 BL 0x1C16CF4
	0x0357AFC8 ADRP X0, 0xBBC000
	0x0357AFCC LDR X0, [X0 + 0x430]
	0x0357AFD0 BL 0x1C16CF4
	0x0357AFD4 ADRP X0, 0xBBC000
	0x0357AFD8 LDR X0, [X0 + 0x438]
	0x0357AFDC BL 0x1C16CF4
	0x0357AFE0 MOVZ W8, 0x1
	0x0357AFE4 STRB W8, [X29 + 0xE9C]
	0x0357AFE8 MOV X0, X20
	0x0357AFEC MOV X1, X31
	0x0357AFF0 BL 0x33BDD8C
	0x0357AFF4 LDP V2, V0, [X24 + 0x10]
	0x0357AFF8 LDR V1, [X24]
	0x0357AFFC STR W23, [X20 + 0x40]
	0x0357B000 STRB W22, [X20 + 0x44]
	0x0357B004 STP V2, V0, [X20 + 0x20]
	0x0357B008 STR V1, [X20 + 0x1]
	0x0357B00C STR W21, [X20 + 0x48]
	0x0357B010 LDR X0, [X28]
	0x0357B014 BL 0x1C16F10
	0x0357B018 LDR X2, [X27]
	0x0357B01C MOV X1, X20
	0x0357B020 MOV X3, X31
	0x0357B024 MOV X21, X0
	0x0357B028 BL 0x2A6B948
	0x0357B02C MOV X0, X19
	0x0357B030 MOV X1, X21
	0x0357B034 MOV X2, X31
	0x0357B038 BL 0x355AB08
	0x0357B03C LDR X0, [X26]
	0x0357B040 BL 0x1C16F10
	0x0357B044 LDR X2, [X25]
	0x0357B048 MOV X1, X20
	0x0357B04C MOV X3, X31
	0x0357B050 MOV X21, X0
	0x0357B054 BL 0x3314368
	0x0357B058 STR X21, [X19]
	0x0357B05C LDP X20, X19, [X31 + 0x50]
	0x0357B060 LDP X22, X21, [X31 + 0x40]
	0x0357B064 LDP X24, X23, [X31 + 0x30]
	0x0357B068 LDP X26, X25, [X31 + 0x20]
	0x0357B06C LDP X28, X27, [X31 + 0x10]
	0x0357B070 LDP X29, X30, [X31], #0x60
	0x0357B074 RET
	0x0357B078 LDR X8, [X0 + 0x58]
	0x0357B07C CBZ X8, 0x357B090
	0x0357B080 LDR X2, [X8 + 0x18]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X21, 0xE66000
	011 Move W8, [X21+3730]
	012 Move W20, W1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {44}
	018 Move X0, 0xB7A000
	019 Move X0, [X0+2504]
	020 Call 0x1C17CF4
	021 Move X0, 0xB7A000
	022 Move X0, [X0+2904]
	023 Call 0x1C17CF4
	024 Move X0, 0xB7F000
	025 Move X0, [X0+840]
	026 Call 0x1C17CF4
	027 Move X0, 0xB7A000
	028 Move X0, [X0+2512]
	029 Call 0x1C17CF4
	030 Move X0, 0xBBD000
	031 Move X0, [X0+984]
	032 Call 0x1C17CF4
	033 Move X0, 0xBBD000
	034 Move X0, [X0+992]
	035 Call 0x1C17CF4
	036 Move X0, 0xBBD000
	037 Move X0, [X0+1000]
	038 Call 0x1C17CF4
	039 Move X0, 0xBBD000
	040 Move X0, [X0+1008]
	041 Call 0x1C17CF4
	042 Move W8, 1
	043 Move [X21+3730], W8
	044 Move X8, [X19+32]
	045 Compare X8, 0
	046 JumpIfEqual {396}
	047 Move X9, 0xB7A000
	048 Move X9, [X9+2512]
	049 Move X24, 0xB7A000
	050 Move X21, [X8+24]
	051 Move W1, 4
	052 Move X0, [X9]
	053 Move X24, [X24+2904]
	054 And W25, W20, 1
	055 Call 0x1C17D6C
	056 Move X22, X0
	057 Move X0, [X24]
	058 Add X1, X31, 12
	059 Move [X31+12], W25
	060 Call 0x1C17E04
	061 Compare X22, 0
	062 JumpIfEqual {396}
	063 Move X23, X0
	064 Compare X0, 0
	065 JumpIfEqual {72}
	066 Move X8, [X22]
	067 Move X0, X23
	068 Move X1, [X8+64]
	069 Call 0x1C17E00
	070 Compare X0, 0
	071 JumpIfEqual {397}
	072 Move W8, [X22+24]
	073 Compare W8, 0
	074 JumpIfEqual {395}
	075 Move [X22+32], X23
	076 Move W8, [X19+171]
	077 Move X0, [X24]
	078 Add X1, X31, 8
	079 Move [X31+8], W8
	080 Call 0x1C17E04
	081 Move X23, X0
	082 Compare X0, 0
	083 JumpIfEqual {90}
	084 Move X8, [X22]
	085 Move X0, X23
	086 Move X1, [X8+64]
	087 Call 0x1C17E00
	088 Compare X0, 0
	089 JumpIfEqual {397}
	090 Move W8, [X22+24]
	091 NotImplemented "Instruction CMP not yet implemented."
	092 Move [X22+40], X23
	093 Move W8, [X19+172]
	094 Move X0, [X24]
	095 Add X1, X31, 4
	096 Move [X31+4], W8
	097 Call 0x1C17E04
	098 Move X23, X0
	099 Compare X0, 0
	100 JumpIfEqual {107}
	101 Move X8, [X22]
	102 Move X0, X23
	103 Move X1, [X8+64]
	104 Call 0x1C17E00
	105 Compare X0, 0
	106 JumpIfEqual {397}
	107 Move W8, [X22+24]
	108 NotImplemented "Instruction CMP not yet implemented."
	109 Move [X22+48], X23
	110 Move W8, [X19+137]
	111 Move X0, [X24]
	112 Add X1, X31, 0
	113 Move [X31], W8
	114 Call 0x1C17E04
	115 Move X23, X0
	116 Compare X0, 0
	117 JumpIfEqual {124}
	118 Move X8, [X22]
	119 Move X0, X23
	120 Move X1, [X8+64]
	121 Call 0x1C17E00
	122 Compare X0, 0
	123 JumpIfEqual {397}
	124 Move W8, [X22+24]
	125 NotImplemented "Instruction CMP not yet implemented."
	126 Move [X22+56], X23
	127 Compare X21, 0
	128 JumpIfEqual {396}
	129 Move X24, 0xB7F000
	130 Move X10, 0xBBD000
	131 Move X8, [X21]
	132 Move X24, [X24+840]
	133 Move X10, [X10+1008]
	134 NotImplemented "Instruction LDRH not yet implemented."
	135 Move X1, [X24]
	136 Move X23, [X10]
	137 Compare X9, 0
	138 JumpIfEqual {145}
	139 Move X10, [X8+176]
	140 Add X10, X10, 8
	141 NotImplemented "Instruction LDUR not yet implemented."
	142 NotImplemented "Instruction CMP not yet implemented."
	143 Subtract X9, X9, 1
	144 Add X10, X10, 16
	145 Move W2, 1
	146 Move X0, X21
	147 Call 0x1C5D788
	148 Move W9, [X10]
	149 Add W9, W9, 1
	150 Add X8, X8, W9
	151 Add X0, X8, 312
	152 Move X8, [X0]
	153 Move X4, [X0+8]
	154 Move W1, 3
	155 Move X0, X21
	156 Move X2, X23
	157 Move X3, X22
	158 NotImplemented "Instruction BLR not yet implemented."
	159 Move W8, [X19+171]
	160 NotImplemented "Instruction CMP not yet implemented."
	161 Move TEMP, X20
	162 And TEMP, TEMP, 1
	163 Compare TEMP, 1
	164 JumpIfNotEqual {226}
	165 Move W8, [X19+172]
	166 Move W9, 1
	167 Move [X19+171], W9
	168 Compare W8, 0
	169 JumpIfEqual {385}
	170 Move W8, [X19+137]
	171 Compare W8, 0
	172 JumpIfEqual {385}
	173 Move X9, [X19+32]
	174 Compare X9, 0
	175 JumpIfEqual {396}
	176 Move X8, 0xB7A000
	177 Move X8, [X8+2504]
	178 Move X20, [X9+24]
	179 Move X21, [X8]
	180 Move X8, [X21+56]
	181 Compare X8, 0
	182 JumpIfNotEqual {186}
	183 Move X0, X21
	184 Call 0x1C5D6E0
	185 Move X8, [X21+56]
	186 Move X0, [X8+16]
	187 Move W8, [X0+309]
	188 Move TEMP, X8
	189 And TEMP, TEMP, 1
	190 Compare TEMP, 1
	191 JumpIfEqual {193}
	192 Call 0x1C5D684
	193 Move W8, [X0+224]
	194 Compare W8, 0
	195 JumpIfNotEqual {197}
	196 Call 0x1C17DFC
	197 Move X8, [X21+56]
	198 Move X0, [X8+16]
	199 Move W8, [X0+309]
	200 Move TEMP, X8
	201 And TEMP, TEMP, 1
	202 Compare TEMP, 1
	203 JumpIfEqual {205}
	204 Call 0x1C5D684
	205 Compare X20, 0
	206 JumpIfEqual {396}
	207 Move X10, 0xBBD000
	208 Move X9, [X0+184]
	209 Move X8, [X20]
	210 Move X1, [X24]
	211 Move X10, [X10+992]
	212 Move X21, [X9]
	213 NotImplemented "Instruction LDRH not yet implemented."
	214 Move X22, [X10]
	215 Compare X9, 0
	216 JumpIfEqual {223}
	217 Move X10, [X8+176]
	218 Add X10, X10, 8
	219 NotImplemented "Instruction LDUR not yet implemented."
	220 NotImplemented "Instruction CMP not yet implemented."
	221 Subtract X9, X9, 1
	222 Add X10, X10, 16
	223 Move W2, 1
	224 Move X0, X20
	225 Call 0x1C5D788
	226 Move W8, [X19+172]
	227 Compare W8, 0
	228 JumpIfEqual {285}
	229 Move W8, [X19+137]
	230 Compare W8, 0
	231 JumpIfEqual {384}
	232 Move X9, [X19+32]
	233 Compare X9, 0
	234 JumpIfEqual {396}
	235 Move X8, 0xB7A000
	236 Move X8, [X8+2504]
	237 Move X20, [X9+24]
	238 Move X21, [X8]
	239 Move X8, [X21+56]
	240 Compare X8, 0
	241 JumpIfNotEqual {245}
	242 Move X0, X21
	243 Call 0x1C5D6E0
	244 Move X8, [X21+56]
	245 Move X0, [X8+16]
	246 Move W8, [X0+309]
	247 Move TEMP, X8
	248 And TEMP, TEMP, 1
	249 Compare TEMP, 1
	250 JumpIfEqual {252}
	251 Call 0x1C5D684
	252 Move W8, [X0+224]
	253 Compare W8, 0
	254 JumpIfNotEqual {256}
	255 Call 0x1C17DFC
	256 Move X8, [X21+56]
	257 Move X0, [X8+16]
	258 Move W8, [X0+309]
	259 Move TEMP, X8
	260 And TEMP, TEMP, 1
	261 Compare TEMP, 1
	262 JumpIfEqual {264}
	263 Call 0x1C5D684
	264 Compare X20, 0
	265 JumpIfEqual {396}
	266 Move X10, 0xBBD000
	267 Move X9, [X0+184]
	268 Move X8, [X20]
	269 Move X1, [X24]
	270 Move X10, [X10+1000]
	271 Move X21, [X9]
	272 NotImplemented "Instruction LDRH not yet implemented."
	273 Move X22, [X10]
	274 Compare X9, 0
	275 JumpIfEqual {282}
	276 Move X10, [X8+176]
	277 Add X10, X10, 8
	278 NotImplemented "Instruction LDUR not yet implemented."
	279 NotImplemented "Instruction CMP not yet implemented."
	280 Subtract X9, X9, 1
	281 Add X10, X10, 16
	282 Move W2, 1
	283 Move X0, X20
	284 Call 0x1C5D788
	285 Move X0, X19
	286 Call Recorder.ResetLocalAudio, X0
	287 Move TEMP, X0
	288 And TEMP, TEMP, 1
	289 Compare TEMP, 1
	290 JumpIfNotEqual {384}
	291 Move X9, [X19+32]
	292 Compare X9, 0
	293 JumpIfEqual {396}
	294 Move X8, 0xB7A000
	295 Move X8, [X8+2504]
	296 Move X20, [X9+24]
	297 Move X21, [X8]
	298 Move X8, [X21+56]
	299 Compare X8, 0
	300 JumpIfNotEqual {304}
	301 Move X0, X21
	302 Call 0x1C5D6E0
	303 Move X8, [X21+56]
	304 Move X0, [X8+16]
	305 Move W8, [X0+309]
	306 Move TEMP, X8
	307 And TEMP, TEMP, 1
	308 Compare TEMP, 1
	309 JumpIfEqual {311}
	310 Call 0x1C5D684
	311 Move W8, [X0+224]
	312 Compare W8, 0
	313 JumpIfNotEqual {315}
	314 Call 0x1C17DFC
	315 Move X8, [X21+56]
	316 Move X0, [X8+16]
	317 Move W8, [X0+309]
	318 Move TEMP, X8
	319 And TEMP, TEMP, 1
	320 Compare TEMP, 1
	321 JumpIfEqual {323}
	322 Call 0x1C5D684
	323 Compare X20, 0
	324 JumpIfEqual {396}
	325 Move X10, 0xBBD000
	326 Move X9, [X0+184]
	327 Move X8, [X20]
	328 Move X1, [X24]
	329 Move X10, [X10+984]
	330 Move X21, [X9]
	331 NotImplemented "Instruction LDRH not yet implemented."
	332 Move X22, [X10]
	333 Compare X9, 0
	334 JumpIfEqual {341}
	335 Move X10, [X8+176]
	336 Add X10, X10, 8
	337 NotImplemented "Instruction LDUR not yet implemented."
	338 NotImplemented "Instruction CMP not yet implemented."
	339 Subtract X9, X9, 1
	340 Add X10, X10, 16
	341 Move W2, 1
	342 Move X0, X20
	343 Call 0x1C5D788
	344 Move W9, [X10]
	345 Add W9, W9, 1
	346 Add X8, X8, W9
	347 Add X0, X8, 312
	348 Move X8, [X0]
	349 Move X4, [X0+8]
	350 Move W1, 3
	351 Move X0, X20
	352 Move X2, X22
	353 Move X3, X21
	354 NotImplemented "Instruction BLR not yet implemented."
	355 Move X0, X19
	356 Call Recorder.StopRecording, X0
	357 Move W9, [X10]
	358 Add W9, W9, 1
	359 Add X8, X8, W9
	360 Add X0, X8, 312
	361 Move X8, [X0]
	362 Move X4, [X0+8]
	363 Move W1, 3
	364 Move X0, X20
	365 Move X2, X22
	366 Move X3, X21
	367 NotImplemented "Instruction BLR not yet implemented."
	368 Move W8, [X19+137]
	369 Compare W8, 0
	370 JumpIfEqual {384}
	371 Move W8, 1
	372 Move [X19+220], W8
	373 Move W9, [X10]
	374 Add W9, W9, 1
	375 Add X8, X8, W9
	376 Add X0, X8, 312
	377 Move X8, [X0]
	378 Move X4, [X0+8]
	379 Move W1, 3
	380 Move X0, X20
	381 Move X2, X22
	382 Move X3, X21
	383 NotImplemented "Instruction BLR not yet implemented."
	384 Move [X19+171], W31
	385 Move X20, [X31+64]
	386 Move X19, [X31+72]
	387 Move X22, [X31+48]
	388 Move X21, [X31+56]
	389 Move X24, [X31+32]
	390 Move X23, [X31+40]
	391 Move X30, [X31+16]
	392 Move X25, [X31+24]
	393 Add X31, X31, 80
	394 Return 
	395 Call 0x1C17F28
	396 Call 0x1C17F20
	397 Call 0x1C17F44
	398 Move X1, X31
	399 Call 0x1C17DEC

Method: System.Void .ctor()

Disassembly:
	0x0357B240 LDR X1, [X8 + 0x40]
	0x0357B244 BL 0x1C16E00
	0x0357B248 CBZ X0, 0x357B298
	0x0357B24C LDR W8, [X20 + 0x18]
	0x0357B250 CMP W8, 0x3
	0x0357B254 B.LS 0x357B294
	0x0357B258 STR X21, [X20 + 0x38]
	0x0357B25C ADRP X8, 0xBBB000
	0x0357B260 LDR X8, [X8 + 0x440]
	0x0357B264 MOV X1, X20
	0x0357B268 MOV X2, X31
	0x0357B26C LDR X0, [X8]
	0x0357B270 BL 0x3227C5C
	0x0357B274 STR X0, [X19 + 0x60]
	0x0357B278 B 0x357B280
	0x0357B27C LDR X0, [X19 + 0x60]
	0x0357B280 LDP X20, X19, [X31 + 0x60]
	0x0357B284 LDP X22, X21, [X31 + 0x50]
	0x0357B288 LDR X30, [X31 + 0x40]
	0x0357B28C ADD X31, X31, 0x70
	0x0357B290 RET
	0x0357B294 BL 0x1C16F28
	0x0357B298 BL 0x1C16F44
	0x0357B29C MOV X1, X31
	0x0357B2A0 BL 0x1C16DEC
	0x0357B2A4 BL 0x1C16F20
	0x0357B2A8 STR X30, [X31 - 0x20]!
	0x0357B2AC STP X20, X19, [X31 + 0x10]
	0x0357B2B0 ADRP X20, 0xE64000
	0x0357B2B4 LDRB W8, [X20 + 0xE9E]
	0x0357B2B8 MOV X19, X0
	0x0357B2BC TBNZ X8, 0x0, 0x357B2D4
	0x0357B2C0 ADRP X0, 0xB7D000
	0x0357B2C4 LDR X0, [X0 + 0x340]
	0x0357B2C8 BL 0x1C16CF4
	0x0357B2CC MOVZ W8, 0x1
	0x0357B2D0 STRB W8, [X20 + 0xE9E]
	0x0357B2D4 LDR X19, [X19 + 0x28]
	0x0357B2D8 CBZ X19, 0x357B324
	0x0357B2DC ADRP X10, 0xB7D000
	0x0357B2E0 LDR X8, [X19]
	0x0357B2E4 LDR X10, [X10 + 0x340]
	0x0357B2E8 LDRH W9, [X8 + 0x12E]
	0x0357B2EC LDR X1, [X10]
	0x0357B2F0 CBZ X9, 0x357B314
	0x0357B2F4 LDR X10, [X8 + 0xB0]
	0x0357B2F8 ADD X10, X10, 0x8
	0x0357B2FC LDUR X11, [X10 - 0x8]
	0x0357B300 CMP X11, X1
	0x0357B304 B.EQ 0x357B334
	0x0357B308 SUBS X9, X9, 0x1
	0x0357B30C ADD X10, X10, 0x10
	0x0357B310 B.NE 0x357B2FC
	0x0357B314 MOV X0, X19
	0x0357B318 MOV W2, W31
	0x0357B31C BL 0x1C5C788
	0x0357B320 B 0x357B340
	0x0357B324 LDP X20, X19, [X31 + 0x10]
	0x0357B328 MOV W0, W31
	0x0357B32C LDR X30, [X31], #0x20
	0x0357B330 RET
	0x0357B334 LDRSW X9, [X10]
	0x0357B338 ADD X8, X8, X9, 0x4, LSL
	0x0357B33C ADD X0, X8, 0x138
	0x0357B340 LDP X2, X1, [X0]
	0x0357B344 MOV X0, X19
	0x0357B348 LDP X20, X19, [X31 + 0x10]
	0x0357B34C LDR X30, [X31], #0x20
	0x0357B350 BR X2
	0x0357B354 STR X30, [X31 - 0x20]!
	0x0357B358 STP X20, X19, [X31 + 0x10]
	0x0357B35C ADRP X20, 0xE64000
	0x0357B360 LDRB W8, [X20 + 0xE9F]
	0x0357B364 MOV X19, X0
	0x0357B368 TBNZ X8, 0x0, 0x357B380
	0x0357B36C ADRP X0, 0xB7D000
	0x0357B370 LDR X0, [X0 + 0x340]
	0x0357B374 BL 0x1C16CF4
	0x0357B378 MOVZ W8, 0x1
	0x0357B37C STRB W8, [X20 + 0xE9F]
	0x0357B380 LDR X19, [X19 + 0x28]
	0x0357B384 CBZ X19, 0x357B3D0
	0x0357B388 ADRP X10, 0xB7D000
	0x0357B38C LDR X8, [X19]
	0x0357B390 LDR X10, [X10 + 0x340]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xE65000
	007 Move X20, 0xBBB000
	008 Move W8, [X21+3731]
	009 Move X20, [X20+2080]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {29}
	015 Move X0, 0xBBB000
	016 Move X0, [X0+1096]
	017 Call 0x1C17CF4
	018 Move X0, 0xBBB000
	019 Move X0, [X0+4080]
	020 Call 0x1C17CF4
	021 Move X0, 0xBA1000
	022 Move X0, [X0+1528]
	023 Call 0x1C17CF4
	024 Move X0, 0xBBB000
	025 Move X0, [X0+2080]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X21+3731], W8
	029 Move X8, 0xD70A
	030 NotImplemented "Instruction MOVK not yet implemented."
	031 NotImplemented "Instruction MOVK not yet implemented."
	032 Move [X19+44], X8
	033 Move X0, [X20]
	034 Move X21, 0xBBB000
	035 Move W8, [X0+224]
	036 Move X21, [X21+4080]
	037 Compare W8, 0
	038 JumpIfNotEqual {41}
	039 Call 0x1C17DFC
	040 Move X0, [X20]
	041 Move X8, [X0+184]
	042 Move X10, -44617728
	043 Move V0, [X10+1808]
	044 Move W9, 1
	045 Move X8, [X8]
	046 Move W11, 0x7530
	047 Move W12, 257
	048 Move [X19+107], W9
	049 Move [X19+116], W11
	050 Move [X19+108], D0
	051 Move [X19+64], X8
	052 NotImplemented "Instruction STRH not yet implemented."
	053 Move X0, [X21]
	054 Move X22, 0xBBB000
	055 Move W8, [X0+224]
	056 Move X22, [X22+1096]
	057 Compare W8, 0
	058 JumpIfNotEqual {61}
	059 Call 0x1C17DFC
	060 Move X0, [X21]
	061 Move X8, [X0+184]
	062 Move X20, 0xBA1000
	063 Move V0, [X8]
	064 Move [X19+152], V0
	065 Move X0, [X22]
	066 Move W8, [X0+224]
	067 Move X20, [X20+1528]
	068 Compare W8, 0
	069 JumpIfNotEqual {72}
	070 Call 0x1C17DFC
	071 Move X0, [X22]
	072 Move X8, [X0+184]
	073 Move W10, 257
	074 Move W9, [X8+2]
	075 NotImplemented "Instruction LDRH not yet implemented."
	076 NotImplemented "Instruction STRH not yet implemented."
	077 Move [X19+170], W9
	078 NotImplemented "Instruction STRH not yet implemented."
	079 Move X0, [X20]
	080 Move W8, [X0+224]
	081 Compare W8, 0
	082 JumpIfNotEqual {85}
	083 Call 0x1C17DFC
	084 Move X0, [X20]
	085 Move X8, [X0+184]
	086 Move X0, X19
	087 Move X22, [X31+16]
	088 Move X21, [X31+24]
	089 Move X9, [X8+32]
	090 Move V1, [X8]
	091 Move V0, [X8+16]
	092 Move [X19+208], X9
	093 Move [X19+176], V1
	094 Move [X19+184], V0
	095 Move X20, [X31+32]
	096 Move X19, [X31+40]
	097 Move X30, [X31+48]
	098 Call VoiceComponent..ctor, X0
	099 Return 

