Type: Photon.Voice.Unity.Recorder/<>c

Method: System.Void .cctor()

Disassembly:
	0x0357B394 LDRH W9, [X8 + 0x12E]
	0x0357B398 LDR X1, [X10]
	0x0357B39C CBZ X9, 0x357B3C0
	0x0357B3A0 LDR X10, [X8 + 0xB0]
	0x0357B3A4 ADD X10, X10, 0x8
	0x0357B3A8 LDUR X11, [X10 - 0x8]
	0x0357B3AC CMP X11, X1
	0x0357B3B0 B.EQ 0x357B3E0
	0x0357B3B4 SUBS X9, X9, 0x1
	0x0357B3B8 ADD X10, X10, 0x10
	0x0357B3BC B.NE 0x357B3A8
	0x0357B3C0 MOVZ W2, 0x6
	0x0357B3C4 MOV X0, X19
	0x0357B3C8 BL 0x1C5C788
	0x0357B3CC B 0x357B3F0
	0x0357B3D0 LDP X20, X19, [X31 + 0x10]
	0x0357B3D4 MOV W0, W31
	0x0357B3D8 LDR X30, [X31], #0x20
	0x0357B3DC RET
	0x0357B3E0 LDR W9, [X10]
	0x0357B3E4 ADD W9, W9, 0x6
	0x0357B3E8 ADD X8, X8, W9, 0x4, SXTW
	0x0357B3EC ADD X0, X8, 0x138

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0xE65000
	005 Move X20, 0xBBC000
	006 Move W8, [X19+3732]
	007 Move X20, [X20+680]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xBBC000
	013 Move X0, [X0+680]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+3732], W8
	017 Move X0, [X20]
	018 Call 0x1C17F10
	019 Move X1, X31
	020 Move X19, X0
	021 Call Object..ctor, X0
	022 Move X8, [X20]
	023 Move X8, [X8+184]
	024 Move [X8], X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Return 

Method: System.Void .ctor()

Disassembly:
	0x0357B3F0 LDP X2, X1, [X0]
	0x0357B3F4 MOV X0, X19

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: Photon.Voice.IAudioDesc <CreateLocalVoiceAudioAndSource>b__134_0()

Disassembly:
	0x0357B3F8 LDP X20, X19, [X31 + 0x10]
	0x0357B3FC LDR X30, [X31], #0x20
	0x0357B400 BR X2
	0x0357B404 LDR X0, [X0 + 0x48]
	0x0357B408 RET
	0x0357B40C STR X1, [X0 + 0x48]
	0x0357B410 RET
	0x0357B414 LDR X0, [X0 + 0x50]
	0x0357B418 RET
	0x0357B41C STR X1, [X0 + 0x50]
	0x0357B420 RET
	0x0357B424 LDR X8, [X0 + 0x50]
	0x0357B428 CMP X8, 0x0
	0x0357B42C CSET W0, NE
	0x0357B430 RET
	0x0357B434 LDP X8, X1, [X0 + 0x30]
	0x0357B438 MOV X0, X8
	0x0357B43C RET
	0x0357B440 LDR W8, [X0 + 0x30]
	0x0357B444 CMP W8, W1
	0x0357B448 B.NE 0x357B468
	0x0357B44C LDR W8, [X0 + 0x34]
	0x0357B450 UBFM X9, X1, 0x20, 0x3F
	0x0357B454 CMP W8, W9
	0x0357B458 B.NE 0x357B468
	0x0357B45C LDR W8, [X0 + 0x38]
	0x0357B460 CMP W8, W2
	0x0357B464 B.EQ 0x357B474
	0x0357B468 MOVZ W8, 0x1
	0x0357B46C STP X1, X2, [X0 + 0x30]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xE65000
	006 Move X21, 0xBBC000
	007 Move X19, 0xBBC000
	008 Move W8, [X20+3733]
	009 Move X21, [X21+1024]
	010 Move X19, [X19+1032]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0xBBC000
	016 Move X0, [X0+1032]
	017 Call 0x1C17CF4
	018 Move X0, 0xBBC000
	019 Move X0, [X0+1024]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X20+3733], W8
	023 Move X0, [X21]
	024 Call 0x1C17F10
	025 Move X5, [X19]
	026 Move W1, 440
	027 Move W2, 100
	028 Move W3, 0xBB80
	029 Move W4, 1
	030 Move X19, X0
	031 Call 0x26F5A9C, X0, X1, X2, X3, X4
	032 Move X0, X19
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move X30, [X31+32]
	036 Move X21, [X31+40]
	037 Return X0

