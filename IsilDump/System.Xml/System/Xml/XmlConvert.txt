Type: System.Xml.XmlConvert

Method: System.String ToString(System.DateTime value, System.Xml.XmlDateTimeSerializationMode dateTimeOption)

Disassembly:
	0x036175BC B.CS 0x361775C
	0x036175C0 ADD X9, X21, X9, 0x1, LSL
	0x036175C4 MOVZ W25, 0x3A
	0x036175C8 STRH W25, [X9 + 0x20]
	0x036175CC LDR W22, [X8 + 0x1C]
	0x036175D0 MOV X0, X20
	0x036175D4 BL 0x36171F4
	0x036175D8 MOV X1, X21
	0x036175DC MOV W2, W22
	0x036175E0 MOV W3, W0
	0x036175E4 BL 0x36177CC
	0x036175E8 LDR X8, [X23]
	0x036175EC LDR W10, [X21 + 0x18]
	0x036175F0 LDR X8, [X8 + 0xB8]
	0x036175F4 LDRSW X9, [X8 + 0x20]
	0x036175F8 CMP W9, W10
	0x036175FC B.CS 0x361775C
	0x03617600 ADD X9, X21, X9, 0x1, LSL
	0x03617604 STRH W25, [X9 + 0x20]
	0x03617608 LDR W22, [X8 + 0x24]
	0x0361760C MOV X0, X20
	0x03617610 BL 0x361724C
	0x03617614 MOV X1, X21
	0x03617618 MOV W2, W22
	0x0361761C MOV W3, W0
	0x03617620 BL 0x36177CC
	0x03617624 CBZ X19, 0x3617760
	0x03617628 MOV X0, X19
	0x0361762C MOV X1, X21
	0x03617630 MOV X2, X31
	0x03617634 BL 0x3233FC8
	0x03617638 MOV X0, X20
	0x0361763C BL 0x36172A4
	0x03617640 CBZ W0, 0x36176D8
	0x03617644 MOVZ W8, 0xCCCD
	0x03617648 MOVZ W9, 0x9998
	0x0361764C MOVK W8, 0xCCCC0000
	0x03617650 MOVK W9, 0x19990000
	0x03617654 MADD W10, W0, W8, W9
	0x03617658 EXTR W10, W10, W10, 0x1
	0x0361765C MOV W20, W0
	0x03617660 MOVZ W22, 0x7
	0x03617664 CMP W10, W9
	0x03617668 B.HI 0x36176A0
	0x0361766C MOVZ W10, 0x6667
	0x03617670 MOVZ W11, 0x9999
	0x03617674 MOVK W10, 0x66660000
	0x03617678 MOVK W11, 0x19990000
	0x0361767C SMADDL X12, X20, X10, X31
	0x03617680 UBFM X13, X12, 0x3F, 0x3F
	0x03617684 SBFM X12, X12, 0x22, 0x3F
	0x03617688 ADD W20, W12, W13
	0x0361768C MADD W12, W20, W8, W9
	0x03617690 EXTR W12, W12, W12, 0x1
	0x03617694 CMP W12, W11
	0x03617698 SUB W22, W22, 0x1
	0x0361769C B.CC 0x361767C
	0x036176A0 LDR X0, [X24]
	0x036176A4 ADD W1, W22, 0x1
	0x036176A8 BL 0x1C16D6C
	0x036176AC CBZ X0, 0x3617760
	0x036176B0 LDR W8, [X0 + 0x18]
	0x036176B4 MOV X21, X0
	0x036176B8 CBZ W8, 0x361775C
	0x036176BC MOVZ W8, 0x2E
	0x036176C0 STRH W8, [X21 + 0x20]
	0x036176C4 LDR X0, [X23]
	0x036176C8 LDR W8, [X0 + 0xE0]
	0x036176CC CBZ W8, 0x36176EC
	0x036176D0 CBNZ W22, 0x36176F4
	0x036176D4 B 0x361773C
	0x036176D8 LDP X20, X19, [X31 + 0x30]
	0x036176DC LDP X22, X21, [X31 + 0x20]
	0x036176E0 LDP X24, X23, [X31 + 0x10]
	0x036176E4 LDP X30, X25, [X31], #0x40
	0x036176E8 RET
	0x036176EC BL 0x1C16DFC
	0x036176F0 CBZ W22, 0x361773C
	0x036176F4 LDR W8, [X21 + 0x18]
	0x036176F8 MOVZ W9, 0x6667
	0x036176FC MOVK W9, 0x66660000
	0x03617700 MOVZ W10, 0xA
	0x03617704 CMP W22, W8
	0x03617708 B.CS 0x361775C
	0x0361770C SMADDL X12, X20, X9, X31
	0x03617710 UBFM X13, X12, 0x20, 0x3F
	0x03617714 UBFM X12, X12, 0x3F, 0x3F
	0x03617718 ADD W12, W12, W13, 0x2, ASR
	0x0361771C SUB W11, W22, 0x1
	0x03617720 MSUB W13, W12, W10, W20
	0x03617724 ADD W13, W13, 0x30
	0x03617728 ADD X14, X21, W22, 0x1, SXTW
	0x0361772C MOV W22, W11
	0x03617730 MOV W20, W12
	0x03617734 STRH W13, [X14 + 0x20]
	0x03617738 CBNZ W11, 0x3617704
	0x0361773C MOV X0, X19
	0x03617740 MOV X1, X21
	0x03617744 LDP X20, X19, [X31 + 0x30]
	0x03617748 LDP X22, X21, [X31 + 0x20]
	0x0361774C LDP X24, X23, [X31 + 0x10]
	0x03617750 MOV X2, X31
	0x03617754 LDP X30, X25, [X31], #0x40
	0x03617758 B 0x3233FC8
	0x0361775C BL 0x1C16F28
	0x03617760 BL 0x1C16F20
	0x03617764 STR X30, [X31 - 0x10]!
	0x03617768 CBZ W4, 0x36177BC
	0x0361776C CBZ X1, 0x36177C8
	0x03617770 LDR W8, [X1 + 0x18]
	0x03617774 MOVZ W10, 0x6667
	0x03617778 SUB W9, W2, 0x1
	0x0361777C MOVK W10, 0x66660000
	0x03617780 MOVZ W11, 0xA
	0x03617784 ADD W12, W9, W4
	0x03617788 CMP W12, W8
	0x0361778C B.CS 0x36177C4
	0x03617790 SMADDL X13, X3, X10, X31
	0x03617794 UBFM X14, X13, 0x20, 0x3F
	0x03617798 UBFM X13, X13, 0x3F, 0x3F
	0x0361779C ADD W13, W13, W14, 0x2, ASR
	0x036177A0 MSUB W14, W13, W11, W3
	0x036177A4 SUB W4, W4, 0x1
	0x036177A8 ADD W14, W14, 0x30
	0x036177AC ADD X12, X1, W12, 0x1, SXTW
	0x036177B0 MOV W3, W13
	0x036177B4 STRH W14, [X12 + 0x20]
	0x036177B8 CBNZ W4, 0x3617784
	0x036177BC LDR X30, [X31], #0x10
	0x036177C0 RET
	0x036177C4 BL 0x1C16F28
	0x036177C8 BL 0x1C16F20
	0x036177CC STR X30, [X31 - 0x10]!
	0x036177D0 CBZ X1, 0x3617830
	0x036177D4 LDR W8, [X1 + 0x18]
	0x036177D8 CMP W8, W2
	0x036177DC B.LS 0x361782C
	0x036177E0 MOVZ W10, 0x6667

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+32], X30
	003 Move [X31+40], X21
	004 Move [X31+48], X20
	005 Move [X31+56], X19
	006 Move X21, 0xDCA000
	007 Move W8, [X21+1120]
	008 Move W20, W1
	009 Move X19, X0
	010 Move [X31+24], X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {26}
	015 Move X0, 0xADE000
	016 Move X0, [X0+2544]
	017 Call 0x1C17CF4
	018 Move X0, 0xB21000
	019 Move X0, [X0+1024]
	020 Call 0x1C17CF4
	021 Move X0, 0xB24000
	022 Move X0, [X0+3952]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X21+1120], W8
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move [X31+8], X31
	028 Move [X31+16], X31
	029 Move X9, -44560384
	030 Move W8, W20
	031 Add X9, X9, 814
	032 Move X20, 0xB24000
	033 NotImplemented "Instruction ADR not yet implemented."
	034 Move W11, [X9]
	035 Add X10, X10, X11
	036 Move X20, [X20+3952]
	037 CallNoReturn X10
	038 Move X8, 0xB21000
	039 Move X8, [X8+1024]
	040 Move X0, [X8]
	041 Move W8, [X0+224]
	042 Compare W8, 0
	043 JumpIfNotEqual {45}
	044 Call 0x1C17DFC
	045 Move X0, X19
	046 Call XmlConvert.SwitchToLocalTime, X0
	047 Move X8, 0xB21000
	048 Move X8, [X8+1024]
	049 Move X0, [X8]
	050 Move W8, [X0+224]
	051 Compare W8, 0
	052 JumpIfNotEqual {54}
	053 Call 0x1C17DFC
	054 Move X0, X19
	055 Call XmlConvert.SwitchToUtcTime, X0
	056 Move X19, X0
	057 Move [X31+24], X0
	058 Move X8, 0xADE000
	059 Move X8, [X8+2544]
	060 Move X0, [X8]
	061 Move W8, [X0+224]
	062 Compare W8, 0
	063 JumpIfNotEqual {65}
	064 Call 0x1C17DFC
	065 Add X0, X31, 24
	066 Move X1, X31
	067 Call DateTime.get_Ticks, X0
	068 Move X1, X0
	069 Add X0, X31, 24
	070 Move W2, W31
	071 Move X3, X31
	072 Call DateTime..ctor, X0, X1, X2
	073 Move X19, [X31+24]
	074 Move X0, [X20]
	075 Move W8, [X0+224]
	076 Compare W8, 0
	077 JumpIfNotEqual {79}
	078 Call 0x1C17DFC
	079 Add X0, X31, 8
	080 Move W2, 1
	081 Move X1, X19
	082 Call XsdDateTime..ctor, X0, X1, X2
	083 Add X0, X31, 8
	084 Call XsdDateTime.ToString, X0
	085 Move X20, [X31+48]
	086 Move X19, [X31+56]
	087 Move X30, [X31+32]
	088 Move X21, [X31+40]
	089 Add X31, X31, 64
	090 Return X0
	091 Move X0, 0xADD000
	092 Move X0, [X0+2512]
	093 Call 0x1C17D08
	094 Move W1, 2
	095 Call 0x1C17D6C
	096 Move X19, X0
	097 Move [X31+4], W20
	098 Move X0, 0xB24000
	099 Move X0, [X0+3960]
	100 Call 0x1C17D08
	101 Add X1, X31, 4
	102 Call 0x1C17E04
	103 Move X20, X0
	104 Move X0, X19
	105 Call 0x19913C0
	106 Move X0, X19
	107 Move X1, X20
	108 Call 0x19990B4
	109 Move X0, X19
	110 Move X1, X31
	111 Move X2, X20
	112 Call 0x1994444
	113 Move X0, X19
	114 Call 0x19913C0
	115 Move X20, 0xB24000
	116 Move X20, [X20+3968]
	117 Move X0, X20
	118 Call 0x1C17D08
	119 Move X1, X0
	120 Move X0, X19
	121 Call 0x19990B4
	122 Move X0, X20
	123 Call 0x1C17D08
	124 Move X2, X0
	125 Move W1, 1
	126 Move X0, X19
	127 Call 0x1994444
	128 Move X0, 0xB24000
	129 Move X0, [X0+3976]
	130 Call 0x1C17D08
	131 Move X1, X19
	132 Call Res.GetString, X0, X1
	133 Move X19, X0
	134 Move X0, 0xAE5000
	135 Move X0, [X0+1400]
	136 Call 0x1C17D08
	137 Call 0x1C17F10
	138 Move X1, X19
	139 Move X2, X31
	140 Move X20, X0
	141 Call ArgumentException..ctor, X0, X1
	142 Move X0, 0xB24000
	143 Move X0, [X0+3984]
	144 Call 0x1C17D08
	145 Move X1, X0
	146 Move X0, X20
	147 Call 0x1C17DEC

Method: System.DateTime SwitchToLocalTime(System.DateTime value)

Disassembly:
	0x036177E4 MOVK W10, 0x66660000
	0x036177E8 SMADDL X10, X3, X10, X31
	0x036177EC UBFM X12, X10, 0x20, 0x3F
	0x036177F0 UBFM X10, X10, 0x3F, 0x3F
	0x036177F4 ADD W9, W2, 0x1
	0x036177F8 ADD W10, W10, W12, 0x2, ASR
	0x036177FC ADD X11, X1, W2, 0x1, SXTW
	0x03617800 ADD W12, W10, 0x30
	0x03617804 CMP W9, W8
	0x03617808 STRH W12, [X11 + 0x20]
	0x0361780C B.CS 0x361782C
	0x03617810 MOVZ W8, 0xA
	0x03617814 MSUB W8, W10, W8, W3
	0x03617818 ADD W8, W8, 0x30
	0x0361781C ADD X9, X1, W9, 0x1, SXTW
	0x03617820 STRH W8, [X9 + 0x20]
	0x03617824 LDR X30, [X31], #0x10
	0x03617828 RET
	0x0361782C BL 0x1C16F28
	0x03617830 BL 0x1C16F20
	0x03617834 STR X30, [X31 - 0x30]!
	0x03617838 STP X22, X21, [X31 + 0x10]
	0x0361783C STP X20, X19, [X31 + 0x20]
	0x03617840 ADRP X21, 0xDC9000
	0x03617844 ADRP X22, 0xB23000
	0x03617848 LDRB W8, [X21 + 0x46F]
	0x0361784C LDR X22, [X22 + 0xF70]
	0x03617850 MOV X19, X1
	0x03617854 MOV X20, X0
	0x03617858 TBNZ X8, 0x0, 0x361787C
	0x0361785C ADRP X0, 0xAE5000
	0x03617860 LDR X0, [X0 + 0x8D8]
	0x03617864 BL 0x1C16CF4
	0x03617868 ADRP X0, 0xB23000
	0x0361786C LDR X0, [X0 + 0xF70]
	0x03617870 BL 0x1C16CF4
	0x03617874 MOVZ W8, 0x1
	0x03617878 STRB W8, [X21 + 0x46F]
	0x0361787C LDR X0, [X22]
	0x03617880 LDR W8, [X0 + 0xE0]
	0x03617884 CBNZ W8, 0x361788C
	0x03617888 BL 0x1C16DFC
	0x0361788C LDRB W8, [X20 + 0xA]
	0x03617890 CMP W8, 0x3
	0x03617894 B.EQ 0x361790C
	0x03617898 CMP W8, 0x2
	0x0361789C B.EQ 0x36178C8
	0x036178A0 CMP W8, 0x1
	0x036178A4 B.NE 0x36179BC
	0x036178A8 CBZ X19, 0x36179CC
	0x036178AC MOV X0, X19
	0x036178B0 LDP X20, X19, [X31 + 0x20]
	0x036178B4 LDP X22, X21, [X31 + 0x10]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+8], X0
	003 Move [X31+16], X30
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xDCA000
	007 Move X19, 0xADE000
	008 Move W8, [X20+1121]
	009 Move X19, [X19+2544]
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xADE000
	015 Move X0, [X0+2544]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1121], W8
	019 Move X0, [X19]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Add X0, X31, 8
	025 Move X1, X31
	026 Call DateTime.get_Kind, X0
	027 Compare W0, 0
	028 JumpIfEqual {32}
	029 NotImplemented "Instruction CMP not yet implemented."
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move X0, [X31+8]
	032 Move X0, [X19]
	033 Move W8, [X0+224]
	034 Compare W8, 0
	035 JumpIfNotEqual {37}
	036 Call 0x1C17DFC
	037 Add X0, X31, 8
	038 Move X1, X31
	039 Call DateTime.get_Ticks, X0
	040 Move X1, X0
	041 Add X0, X31, 24
	042 Move W2, 2
	043 Move X3, X31
	044 Move [X31+24], X31
	045 Call DateTime..ctor, X0, X1, X2
	046 Move X0, [X31+24]
	047 Move X0, [X19]
	048 Move W8, [X0+224]
	049 Compare W8, 0
	050 JumpIfNotEqual {52}
	051 Call 0x1C17DFC
	052 Add X0, X31, 8
	053 Move X1, X31
	054 Call DateTime.ToLocalTime, X0
	055 Move [X31+24], X0
	056 Move X20, [X31+32]
	057 Move X19, [X31+40]
	058 Move X30, [X31+16]
	059 Add X31, X31, 48
	060 Return X0

Method: System.DateTime SwitchToUtcTime(System.DateTime value)

Disassembly:
	0x036178B8 MOVZ W1, 0x5A
	0x036178BC MOV X2, X31
	0x036178C0 LDR X30, [X31], #0x30
	0x036178C4 B 0x3233D30
	0x036178C8 LDR X0, [X22]
	0x036178CC LDR W8, [X0 + 0xE0]
	0x036178D0 CBNZ W8, 0x36178DC
	0x036178D4 BL 0x1C16DFC
	0x036178D8 LDR X0, [X22]
	0x036178DC ADRP X9, 0xAE5000
	0x036178E0 LDR X8, [X0 + 0xB8]
	0x036178E4 LDR X9, [X9 + 0x8D8]
	0x036178E8 LDR W1, [X8 + 0x38]
	0x036178EC LDR X0, [X9]
	0x036178F0 BL 0x1C16D6C
	0x036178F4 CBZ X0, 0x36179CC
	0x036178F8 LDR W8, [X0 + 0x18]
	0x036178FC MOV X21, X0
	0x03617900 CBZ W8, 0x36179D0
	0x03617904 MOVZ W8, 0x2D
	0x03617908 B 0x361794C
	0x0361790C LDR X0, [X22]
	0x03617910 LDR W8, [X0 + 0xE0]
	0x03617914 CBNZ W8, 0x3617920
	0x03617918 BL 0x1C16DFC
	0x0361791C LDR X0, [X22]
	0x03617920 ADRP X9, 0xAE5000
	0x03617924 LDR X8, [X0 + 0xB8]
	0x03617928 LDR X9, [X9 + 0x8D8]
	0x0361792C LDR W1, [X8 + 0x38]
	0x03617930 LDR X0, [X9]
	0x03617934 BL 0x1C16D6C
	0x03617938 CBZ X0, 0x36179CC
	0x0361793C LDR W8, [X0 + 0x18]
	0x03617940 MOV X21, X0
	0x03617944 CBZ W8, 0x36179D0
	0x03617948 MOVZ W8, 0x2B
	0x0361794C STRH W8, [X21 + 0x20]
	0x03617950 LDR X8, [X22]
	0x03617954 LDRB W3, [X20 + 0x9]
	0x03617958 MOV X1, X21
	0x0361795C LDR X8, [X8 + 0xB8]
	0x03617960 LDR W2, [X8 + 0x2C]
	0x03617964 BL 0x36177CC
	0x03617968 LDR X8, [X22]
	0x0361796C LDR W10, [X21 + 0x18]
	0x03617970 LDR X8, [X8 + 0xB8]
	0x03617974 LDRSW X9, [X8 + 0x30]
	0x03617978 CMP W9, W10
	0x0361797C B.CS 0x36179D0
	0x03617980 ADD X9, X21, X9, 0x1, LSL
	0x03617984 MOVZ W10, 0x3A
	0x03617988 STRH W10, [X9 + 0x20]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+8], X0
	003 Move [X31+16], X30
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xDCA000
	007 Move X19, 0xADE000
	008 Move W8, [X20+1122]
	009 Move X19, [X19+2544]
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xADE000
	015 Move X0, [X0+2544]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1122], W8
	019 Move X0, [X19]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Add X0, X31, 8
	025 Move X1, X31
	026 Call DateTime.get_Kind, X0
	027 Compare W0, 0
	028 JumpIfEqual {32}
	029 NotImplemented "Instruction CMP not yet implemented."
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move X0, [X31+8]
	032 Move X0, [X19]
	033 Move W8, [X0+224]
	034 Compare W8, 0
	035 JumpIfNotEqual {37}
	036 Call 0x1C17DFC
	037 Add X0, X31, 8
	038 Move X1, X31
	039 Call DateTime.get_Ticks, X0
	040 Move X1, X0
	041 Add X0, X31, 24
	042 Move W2, 1
	043 Move X3, X31
	044 Move [X31+24], X31
	045 Call DateTime..ctor, X0, X1, X2
	046 Move X0, [X31+24]
	047 Move X0, [X19]
	048 Move W8, [X0+224]
	049 Compare W8, 0
	050 JumpIfNotEqual {52}
	051 Call 0x1C17DFC
	052 Add X0, X31, 8
	053 Move X1, X31
	054 Call DateTime.ToUniversalTime, X0
	055 Move [X31+24], X0
	056 Move X20, [X31+32]
	057 Move X19, [X31+40]
	058 Move X30, [X31+16]
	059 Add X31, X31, 48
	060 Return X0

Method: System.Void .cctor()

Disassembly:
	0x03617F9C LDR X8, [X0 + 0xB8]
	0x03617FA0 LDR W21, [X8 + 0x6C]
	0x03617FA4 BL 0x1C16D44
	0x03617FA8 CMP W21, 0x2
	0x03617FAC B.NE 0x3617FB8
	0x03617FB0 MOVZ W0, 0x1
	0x03617FB4 B 0x3617F74
	0x03617FB8 LDR X0, [X20]
	0x03617FBC LDR W8, [X0 + 0xE0]
	0x03617FC0 CBNZ W8, 0x3617FCC
	0x03617FC4 BL 0x1C16DFC
	0x03617FC8 LDR X0, [X20]
	0x03617FCC LDR X8, [X0 + 0xB8]
	0x03617FD0 LDR W21, [X8 + 0x6C]
	0x03617FD4 BL 0x1C16D44
	0x03617FD8 CMP W21, 0x1
	0x03617FDC B.NE 0x3617F70
	0x03617FE0 LDR X0, [X20]
	0x03617FE4 LDR W8, [X0 + 0xE0]
	0x03617FE8 CBNZ W8, 0x3617FF0
	0x03617FEC BL 0x1C16DFC
	0x03617FF0 ANDS X31, X19, 0x3FFFFFFFFF
	0x03617FF4 CSET W0, EQ
	0x03617FF8 B 0x3617F74
	0x03617FFC ANDS X31, X1, X0, 0x0
	0x03618000 CSET W0, EQ
	0x03618004 RET
	0x03618008 MOV W0, W31
	0x0361800C RET
	0x03618010 LDRB W8, [X0 + 0x33]
	0x03618014 AND W0, W8, 0x1
	0x03618018 RET
	0x0361801C LDR X8, [X0 + 0x30]
	0x03618020 AND X8, X8, 0xFFFFF
	0x03618024 ORR X8, X8, 0x1FFFFFF
	0x03618028 STR X8, [X0 + 0x30]
	0x0361802C RET
	0x03618030 STR X30, [X31 - 0x10]!
	0x03618034 LDRB W8, [X0 + 0x33]
	0x03618038 TBNZ X8, 0x3, 0x3618044
	0x0361803C MOV W0, W31
	0x03618040 B 0x3618080
	0x03618044 LDR X8, [X0 + 0x38]
	0x03618048 CBZ X8, 0x3618088
	0x0361804C LDR X0, [X0 + 0x10]
	0x03618050 CBZ X0, 0x3618088
	0x03618054 LDRH W1, [X8 + 0x30]
	0x03618058 MOV X2, X31
	0x0361805C BL 0x3222A1C
	0x03618060 AND W8, W0, 0xFFFF
	0x03618064 CMP W8, 0x5C
	0x03618068 B.EQ 0x3618074
	0x0361806C CMP W8, 0x2F
	0x03618070 B.NE 0x361807C
	0x03618074 MOVZ W0, 0x3
	0x03618078 B 0x3618080
	0x0361807C MOVZ W0, 0x2
	0x03618080 LDR X30, [X31], #0x10

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0xDCA000
	008 Move X20, 0xB21000
	009 Move X22, 0xAE6000
	010 Move X19, 0xB24000
	011 Move X21, 0xB24000
	012 Move W8, [X23+1123]
	013 Move X20, [X20+1024]
	014 Move X22, [X22+2264]
	015 Move X19, [X19+3992]
	016 Move X21, [X21+4000]
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {35}
	021 Move X0, 0xAE6000
	022 Move X0, [X0+2264]
	023 Call 0x1C17CF4
	024 Move X0, 0xB24000
	025 Move X0, [X0+4000]
	026 Call 0x1C17CF4
	027 Move X0, 0xB24000
	028 Move X0, [X0+3992]
	029 Call 0x1C17CF4
	030 Move X0, 0xB21000
	031 Move X0, [X0+1024]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X23+1123], W8
	035 Call XmlCharType.get_Instance
	036 Move X8, [X20]
	037 Move W1, 3
	038 Move X8, [X8+184]
	039 Move [X8], X0
	040 Move X0, [X22]
	041 Call 0x1C17D6C
	042 Move X1, [X19]
	043 Move X2, X31
	044 Move X19, X0
	045 Call RuntimeHelpers.InitializeArray, X0, X1
	046 Move X8, [X20]
	047 Move W9, 7
	048 Move W1, 4
	049 Move X8, [X8+184]
	050 Move [X8+8], X19
	051 Move [X8+16], W9
	052 Move X0, [X22]
	053 Call 0x1C17D6C
	054 Move X1, [X21]
	055 Move X2, X31
	056 Move X19, X0
	057 Call RuntimeHelpers.InitializeArray, X0, X1
	058 Move X8, [X20]
	059 Move X22, [X31+16]
	060 Move X21, [X31+24]
	061 Move X8, [X8+184]
	062 Move [X8+24], X19
	063 Move X20, [X31+32]
	064 Move X19, [X31+40]
	065 Move X30, [X31+48]
	066 Move X23, [X31+56]
	067 Return 

