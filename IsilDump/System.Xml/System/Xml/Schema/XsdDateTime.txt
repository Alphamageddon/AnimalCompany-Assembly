Type: System.Xml.Schema.XsdDateTime

Method: System.Void .ctor(System.DateTime dateTime, System.Xml.Schema.XsdDateTimeFlags kinds)

Disassembly:
	0x03617998 BL 0x36177CC
	0x0361799C CBZ X19, 0x36179CC
	0x036179A0 MOV X0, X19
	0x036179A4 MOV X1, X21
	0x036179A8 LDP X20, X19, [X31 + 0x20]
	0x036179AC LDP X22, X21, [X31 + 0x10]
	0x036179B0 MOV X2, X31
	0x036179B4 LDR X30, [X31], #0x30
	0x036179B8 B 0x3233FC8
	0x036179BC LDP X20, X19, [X31 + 0x20]
	0x036179C0 LDP X22, X21, [X31 + 0x10]
	0x036179C4 LDR X30, [X31], #0x30
	0x036179C8 RET
	0x036179CC BL 0x1C16F20
	0x036179D0 BL 0x1C16F28
	0x036179D4 STR X30, [X31 - 0x20]!
	0x036179D8 STP X20, X19, [X31 + 0x10]
	0x036179DC ADRP X19, 0xDC9000
	0x036179E0 ADRP X20, 0xB23000
	0x036179E4 LDRB W8, [X19 + 0x470]
	0x036179E8 LDR X20, [X20 + 0xFA8]
	0x036179EC TBNZ X8, 0x0, 0x3617B24
	0x036179F0 ADRP X0, 0xB23000
	0x036179F4 LDR X0, [X0 + 0xFB0]
	0x036179F8 BL 0x1C16CF4
	0x036179FC ADRP X0, 0xB23000
	0x03617A00 LDR X0, [X0 + 0xFB8]
	0x03617A04 BL 0x1C16CF4
	0x03617A08 ADRP X0, 0xB23000
	0x03617A0C LDR X0, [X0 + 0xF70]
	0x03617A10 BL 0x1C16CF4
	0x03617A14 ADRP X0, 0xB23000
	0x03617A18 LDR X0, [X0 + 0xFC0]
	0x03617A1C BL 0x1C16CF4
	0x03617A20 ADRP X0, 0xB23000
	0x03617A24 LDR X0, [X0 + 0xFC8]
	0x03617A28 BL 0x1C16CF4
	0x03617A2C ADRP X0, 0xB11000
	0x03617A30 LDR X0, [X0 + 0xB18]
	0x03617A34 BL 0x1C16CF4
	0x03617A38 ADRP X0, 0xB23000
	0x03617A3C LDR X0, [X0 + 0xFD0]
	0x03617A40 BL 0x1C16CF4
	0x03617A44 ADRP X0, 0xB23000
	0x03617A48 LDR X0, [X0 + 0xFD8]
	0x03617A4C BL 0x1C16CF4
	0x03617A50 ADRP X0, 0xADD000
	0x03617A54 LDR X0, [X0 + 0x2A8]
	0x03617A58 BL 0x1C16CF4
	0x03617A5C ADRP X0, 0xB23000
	0x03617A60 LDR X0, [X0 + 0xFE0]
	0x03617A64 BL 0x1C16CF4
	0x03617A68 ADRP X0, 0xB23000
	0x03617A6C LDR X0, [X0 + 0xFE8]
	0x03617A70 BL 0x1C16CF4
	0x03617A74 ADRP X0, 0xB07000
	0x03617A78 LDR X0, [X0 + 0x578]
	0x03617A7C BL 0x1C16CF4
	0x03617A80 ADRP X0, 0xB11000
	0x03617A84 LDR X0, [X0 + 0x6B0]
	0x03617A88 BL 0x1C16CF4
	0x03617A8C ADRP X0, 0xB23000
	0x03617A90 LDR X0, [X0 + 0xFF0]
	0x03617A94 BL 0x1C16CF4
	0x03617A98 ADRP X0, 0xB11000
	0x03617A9C LDR X0, [X0 + 0xB20]
	0x03617AA0 BL 0x1C16CF4
	0x03617AA4 ADRP X0, 0xB23000
	0x03617AA8 LDR X0, [X0 + 0xFF8]
	0x03617AAC BL 0x1C16CF4
	0x03617AB0 ADRP X0, 0xB24000
	0x03617AB4 LDR X0, [X0]
	0x03617AB8 BL 0x1C16CF4
	0x03617ABC ADRP X0, 0xB24000
	0x03617AC0 LDR X0, [X0 + 0x8]
	0x03617AC4 BL 0x1C16CF4
	0x03617AC8 ADRP X0, 0xB24000
	0x03617ACC LDR X0, [X0 + 0x10]
	0x03617AD0 BL 0x1C16CF4
	0x03617AD4 ADRP X0, 0xB24000
	0x03617AD8 LDR X0, [X0 + 0x18]
	0x03617ADC BL 0x1C16CF4
	0x03617AE0 ADRP X0, 0xB24000
	0x03617AE4 LDR X0, [X0 + 0x20]
	0x03617AE8 BL 0x1C16CF4
	0x03617AEC ADRP X0, 0xB24000
	0x03617AF0 LDR X0, [X0 + 0x28]
	0x03617AF4 BL 0x1C16CF4
	0x03617AF8 ADRP X0, 0xB23000
	0x03617AFC LDR X0, [X0 + 0xFA8]
	0x03617B00 BL 0x1C16CF4
	0x03617B04 ADRP X0, 0xB24000
	0x03617B08 LDR X0, [X0 + 0x30]
	0x03617B0C BL 0x1C16CF4
	0x03617B10 ADRP X0, 0xB24000
	0x03617B14 LDR X0, [X0 + 0x38]
	0x03617B18 BL 0x1C16CF4
	0x03617B1C MOVZ W8, 0x1
	0x03617B20 STRB W8, [X19 + 0x470]
	0x03617B24 LDR X8, [X20]
	0x03617B28 CBZ X8, 0x3617D80
	0x03617B2C ADRP X20, 0xB23000
	0x03617B30 LDR X20, [X20 + 0xF70]
	0x03617B34 LDR W10, [X8 + 0x10]
	0x03617B38 LDR X9, [X20]
	0x03617B3C LDR X8, [X9 + 0xB8]
	0x03617B40 ADRP X9, 0xB24000
	0x03617B44 LDR X9, [X9 + 0x8]
	0x03617B48 STR W10, [X8]
	0x03617B4C LDR X9, [X9]
	0x03617B50 CBZ X9, 0x3617D80
	0x03617B54 LDR W9, [X9 + 0x10]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0xDCA000
	009 Move [X31+8], X1
	010 Move X22, 0xB24000
	011 Move W8, [X23+1124]
	012 Move X22, [X22+3872]
	013 Move W20, W2
	014 Move X21, X1
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {34}
	020 Move X0, 0xB24000
	021 Move X0, [X0+3872]
	022 Call 0x1C17CF4
	023 Move X0, 0xADE000
	024 Move X0, [X0+2544]
	025 Call 0x1C17CF4
	026 Move X0, 0xADF000
	027 Move X0, [X0+1392]
	028 Call 0x1C17CF4
	029 Move X0, 0xB11000
	030 Move X0, [X0+2616]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X23+1124], W8
	034 Move [X31], X31
	035 Move [X19], X21
	036 Move X0, [X22]
	037 Move X21, 0xADE000
	038 Move W8, [X0+224]
	039 Move X21, [X21+2544]
	040 Compare W8, 0
	041 JumpIfNotEqual {43}
	042 Call 0x1C17DFC
	043 Move W0, W20
	044 Call Bits.LeastPosition, X0
	045 Move X8, [X21]
	046 Move W20, W0
	047 Move W9, [X8+224]
	048 Compare W9, 0
	049 JumpIfNotEqual {52}
	050 Move X0, X8
	051 Call 0x1C17DFC
	052 Add X0, X31, 8
	053 Move X1, X31
	054 Call DateTime.get_Kind, X0
	055 Compare W0, 0
	056 JumpIfEqual {61}
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Move W8, W31
	059 Move W21, W31
	060 Move W0, 0x10000
	061 Move W8, W0
	062 Move W21, W0
	063 Move X8, 0xB11000
	064 Move X8, [X8+2616]
	065 Move X0, [X8]
	066 Move W8, [X0+224]
	067 Compare W8, 0
	068 JumpIfNotEqual {70}
	069 Call 0x1C17DFC
	070 Move X0, X31
	071 Call TimeZoneInfo.get_Local
	072 Compare X0, 0
	073 JumpIfEqual {126}
	074 Move X1, [X31+8]
	075 Move X2, X31
	076 Call TimeZoneInfo.GetUtcOffset, X0, X1
	077 Move X21, 0xADF000
	078 Move X21, [X21+1392]
	079 Move [X31], X0
	080 Move X8, [X21]
	081 Move W9, [X8+224]
	082 Compare W9, 0
	083 JumpIfEqual {85}
	084 Move X22, X0
	085 Move X0, X8
	086 Call 0x1C17DFC
	087 Move X0, [X21]
	088 Move X22, [X31]
	089 Move W8, [X0+224]
	090 Compare W8, 0
	091 JumpIfNotEqual {93}
	092 Call 0x1C17DFC
	093 Add X0, X31, 0
	094 Move X1, X31
	095 Call TimeSpan.get_Hours, X0
	096 Move W21, W0
	097 Move TEMP, X22
	098 And TEMP, TEMP, 1
	099 Compare TEMP, 1
	100 JumpIfEqual {106}
	101 Add X0, X31, 0
	102 Move X1, X31
	103 Call TimeSpan.get_Minutes, X0
	104 Move W8, W0
	105 Move W0, 0x30000
	106 Add X0, X31, 0
	107 Move X1, X31
	108 Subtract W21, W31, W21
	109 Call TimeSpan.get_Minutes, X0
	110 Subtract W8, W31, W0
	111 Move W0, 0x20000
	112 Move W9, 0xFF000000
	113 Add W9, W9, W20
	114 Or W9, W0, W9
	115 Or W8, W8, W9
	116 Or W8, W8, W21
	117 Move [X19+8], W8
	118 Move X20, [X31+48]
	119 Move X19, [X31+56]
	120 Move X22, [X31+32]
	121 Move X21, [X31+40]
	122 Move X30, [X31+16]
	123 Move X23, [X31+24]
	124 Add X31, X31, 64
	125 Return 
	126 Call 0x1C17F20

Method: System.Xml.Schema.XsdDateTime/DateTimeTypeCode get_InternalTypeCode()

Disassembly:
	0x03618084 RET
	0x03618088 BL 0x1C16F20

ISIL:
	001 Move W0, [X0+11]
	002 Return X0

Method: System.Xml.Schema.XsdDateTime/XsdDateTimeKind get_InternalKind()

Disassembly:
	0x0361808C LDR X8, [X0 + 0x30]
	0x03618090 ANDS X31, X8, X1, 0x0

ISIL:
	001 Move W0, [X0+10]
	002 Return X0

Method: System.Int32 get_Year()

Disassembly:
	0x03618094 CSET W0, NE
	0x03618098 RET
	0x0361809C ANDS X31, X1, X0, 0x0
	0x036180A0 CSET W0, NE
	0x036180A4 RET
	0x036180A8 STP X30, X19, [X31 - 0x10]!
	0x036180AC LDR X1, [X0 + 0x30]
	0x036180B0 MOV X19, X0
	0x036180B4 TBNZ X1, 0x1E, 0x36180C0
	0x036180B8 MOV X0, X19
	0x036180BC BL 0x36180CC
	0x036180C0 LDR X0, [X19 + 0x38]
	0x036180C4 LDP X30, X19, [X31], #0x10
	0x036180C8 RET
	0x036180CC STR X30, [X31 - 0x50]!
	0x036180D0 STP X26, X25, [X31 + 0x10]
	0x036180D4 STP X24, X23, [X31 + 0x20]
	0x036180D8 STP X22, X21, [X31 + 0x30]
	0x036180DC STP X20, X19, [X31 + 0x40]
	0x036180E0 ADRP X20, 0xDC8000
	0x036180E4 ADRP X22, 0xB23000
	0x036180E8 LDRB W8, [X20 + 0x48D]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xDC9000
	006 Move X21, 0xADD000
	007 Move W8, [X20+1125]
	008 Move X21, [X21+2544]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xADD000
	015 Move X0, [X0+2544]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1125], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X1, X31
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call DateTime.get_Year, X0
	031 Return X0

Method: System.Int32 get_Month()

Disassembly:
	0x036180EC LDR X22, [X22 + 0x40]
	0x036180F0 MOV X21, X1
	0x036180F4 MOV X19, X0
	0x036180F8 TBNZ X8, 0x0, 0x361811C
	0x036180FC ADRP X0, 0xB23000
	0x03618100 LDR X0, [X0 + 0x40]
	0x03618104 BL 0x1C16CF4
	0x03618108 ADRP X0, 0xADD000
	0x0361810C LDR X0, [X0 + 0xA28]
	0x03618110 BL 0x1C16CF4
	0x03618114 MOVZ W8, 0x1
	0x03618118 STRB W8, [X20 + 0x48D]
	0x0361811C LDR X0, [X22]
	0x03618120 BL 0x1C16F10
	0x03618124 MOV X1, X31
	0x03618128 MOV X20, X0
	0x0361812C BL 0x362A7BC
	0x03618130 CBZ X20, 0x3618228
	0x03618134 LDR X0, [X19 + 0x10]
	0x03618138 CBZ X0, 0x3618228
	0x0361813C LDR W8, [X0 + 0x10]
	0x03618140 STRH W8, [X20 + 0x36]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xDC9000
	006 Move X21, 0xADD000
	007 Move W8, [X20+1126]
	008 Move X21, [X21+2544]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xADD000
	015 Move X0, [X0+2544]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1126], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X1, X31
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call DateTime.get_Month, X0
	031 Return X0

Method: System.Int32 get_Day()

Disassembly:
	0x03618144 LDRB W9, [X19 + 0x33]
	0x03618148 TBNZ X9, 0x0, 0x3618388
	0x0361814C TBNZ X21, 0x1D, 0x361819C
	0x03618150 LDR X8, [X19 + 0x20]
	0x03618154 CBZ X8, 0x3618228
	0x03618158 LDR X8, [X8 + 0x20]
	0x0361815C CBZ X8, 0x3618228
	0x03618160 LDRH W23, [X8 + 0x10]
	0x03618164 AND W1, W23, 0xFFFF
	0x03618168 MOV X2, X31
	0x0361816C ADD W22, W1, 0x1
	0x03618170 BL 0x3222A1C
	0x03618174 AND W8, W0, 0xFFFF
	0x03618178 CMP W8, 0x3A
	0x0361817C B.EQ 0x361822C
	0x03618180 LDRH W8, [X20 + 0x28]
	0x03618184 MOV W23, W22
	0x03618188 ADD W8, W8, 0x1
	0x0361818C STRH W8, [X20 + 0x28]
	0x03618190 LDR X0, [X19 + 0x10]
	0x03618194 CBNZ X0, 0x3618164
	0x03618198 B 0x3618228

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xDC9000
	006 Move X21, 0xADD000
	007 Move W8, [X20+1127]
	008 Move X21, [X21+2544]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xADD000
	015 Move X0, [X0+2544]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1127], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X1, X31
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call DateTime.get_Day, X0
	031 Return X0

Method: System.Int32 get_Hour()

Disassembly:
	0x0361819C ANDS W31, W8, 0xFFFF
	0x036181A0 B.EQ 0x361827C
	0x036181A4 ADRP X24, 0xADD000
	0x036181A8 LDR X24, [X24 + 0xA28]
	0x036181AC MOVZ X26, 0x2600
	0x036181B0 MOV W22, W31
	0x036181B4 MOVZ W25, 0x1
	0x036181B8 MOVK X26, 0x1
	0x036181BC MOV W1, W22
	0x036181C0 MOV X2, X31
	0x036181C4 BL 0x3222A1C
	0x036181C8 LDR X8, [X24]
	0x036181CC MOV W23, W0
	0x036181D0 LDR W9, [X8 + 0xE0]
	0x036181D4 CBNZ W9, 0x36181E0
	0x036181D8 MOV X0, X8
	0x036181DC BL 0x1C16DFC
	0x036181E0 AND W8, W23, 0xFFFF
	0x036181E4 CMP W8, 0x20
	0x036181E8 B.HI 0x3618280
	0x036181EC CMP W8, 0x20
	0x036181F0 B.HI 0x3618280

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xDC9000
	006 Move X21, 0xADD000
	007 Move W8, [X20+1128]
	008 Move X21, [X21+2544]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xADD000
	015 Move X0, [X0+2544]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1128], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X1, X31
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call DateTime.get_Hour, X0
	031 Return X0

Method: System.Int32 get_Minute()

Disassembly:
	0x036181F4 AND X8, X23, 0xFFFF
	0x036181F8 LSLV X8, X25, X8
	0x036181FC ANDS X31, X8, X26, 0x0
	0x03618200 B.EQ 0x3618280
	0x03618204 LDRH W8, [X20 + 0x28]
	0x03618208 LDRH W9, [X20 + 0x36]
	0x0361820C ADD W22, W22, 0x1
	0x03618210 ADD W8, W8, 0x1
	0x03618214 CMP W22, W9
	0x03618218 STRH W8, [X20 + 0x28]
	0x0361821C B.CS 0x3618280
	0x03618220 LDR X0, [X19 + 0x10]
	0x03618224 CBNZ X0, 0x36181BC
	0x03618228 BL 0x1C16F20
	0x0361822C TBZ X21, 0x14, 0x3618308
	0x03618230 LDR X0, [X19 + 0x10]
	0x03618234 CBZ X0, 0x3618228
	0x03618238 AND W22, W22, 0xFFFF
	0x0361823C MOV W1, W22
	0x03618240 MOV X2, X31
	0x03618244 BL 0x3222A1C
	0x03618248 AND W8, W0, 0xFFFF

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xDC9000
	006 Move X21, 0xADD000
	007 Move W8, [X20+1129]
	008 Move X21, [X21+2544]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xADD000
	015 Move X0, [X0+2544]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1129], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X1, X31
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call DateTime.get_Minute, X0
	031 Return X0

Method: System.Int32 get_Second()

Disassembly:
	0x0361824C CMP W8, 0x5C
	0x03618250 B.EQ 0x3618274
	0x03618254 LDR X0, [X19 + 0x10]
	0x03618258 CBZ X0, 0x3618228
	0x0361825C ADD W1, W22, 0x1
	0x03618260 MOV X2, X31
	0x03618264 BL 0x3222A1C
	0x03618268 AND W8, W0, 0xFFFF
	0x0361826C CMP W8, 0x5C
	0x03618270 B.NE 0x3618438
	0x03618274 MOVZ W24, 0x1
	0x03618278 B 0x361843C
	0x0361827C MOV W22, W31
	0x03618280 ADRP X8, 0xADD000
	0x03618284 LDR X8, [X8 + 0xA28]
	0x03618288 LDR X0, [X8]
	0x0361828C LDR W8, [X0 + 0xE0]
	0x03618290 CBZ W8, 0x361829C
	0x03618294 TBNZ X21, 0x1C, 0x36182A4
	0x03618298 B 0x3618308
	0x0361829C BL 0x1C16DFC
	0x036182A0 TBZ X21, 0x1C, 0x3618308

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xDC9000
	006 Move X21, 0xADD000
	007 Move W8, [X20+1130]
	008 Move X21, [X21+2544]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xADD000
	015 Move X0, [X0+2544]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1130], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X1, X31
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call DateTime.get_Second, X0
	031 Return X0

Method: System.Int32 get_Fraction()

Disassembly:
	0x036182A4 ADD W22, W22, 0x2
	0x036182A8 AND W23, W22, 0xFFFF
	0x036182AC CMP W23, W21, UXTH
	0x036182B0 B.CS 0x3618308
	0x036182B4 AND W24, W21, 0xFFFF
	0x036182B8 LDR X0, [X19 + 0x10]
	0x036182BC CBZ X0, 0x3618228
	0x036182C0 MOV W1, W23
	0x036182C4 MOV X2, X31
	0x036182C8 BL 0x3222A1C
	0x036182CC AND W8, W0, 0xFFFF
	0x036182D0 CMP W8, 0x2F
	0x036182D4 B.EQ 0x36182F8
	0x036182D8 LDR X0, [X19 + 0x10]
	0x036182DC CBZ X0, 0x3618228
	0x036182E0 MOV W1, W23
	0x036182E4 MOV X2, X31
	0x036182E8 BL 0x3222A1C
	0x036182EC AND W8, W0, 0xFFFF
	0x036182F0 CMP W8, 0x5C
	0x036182F4 B.NE 0x3618308
	0x036182F8 ADD W22, W23, 0x1
	0x036182FC AND W23, W22, 0xFFFF
	0x03618300 CMP W23, W24
	0x03618304 B.CC 0x36182B8
	0x03618308 MOV W24, W31
	0x0361830C LDR X8, [X19 + 0x20]
	0x03618310 CBZ X8, 0x3618228
	0x03618314 LDR W8, [X8 + 0x1C]
	0x03618318 ADDS W31, W8, 0x1
	0x0361831C B.EQ 0x3618324
	0x03618320 STRH W8, [X20 + 0x2E]
	0x03618324 ORN W8, W31, W21, 0x0
	0x03618328 ANDS X31, X8, 0x7FFFF
	0x0361832C B.EQ 0x3618374
	0x03618330 ADRP X8, 0xADD000
	0x03618334 LDR X8, [X8 + 0xA28]
	0x03618338 LDR X0, [X8]
	0x0361833C LDR W8, [X0 + 0xE0]
	0x03618340 CBZ W8, 0x361836C
	0x03618344 TBNZ X21, 0x1B, 0x3618374
	0x03618348 STRH W22, [X20 + 0x2A]
	0x0361834C LDR X8, [X19 + 0x30]
	0x03618350 AND X8, X8, 0x7FFFF
	0x03618354 CMP X8, 0x50000
	0x03618358 B.NE 0x36183FC
	0x0361835C STRH W22, [X20 + 0x2C]
	0x03618360 STRH W21, [X20 + 0x30]
	0x03618364 AND X21, X21, 0xFFFFFFFF
	0x03618368 B 0x3618388
	0x0361836C BL 0x1C16DFC
	0x03618370 TBZ X21, 0x1B, 0x3618348
	0x03618374 STRH W21, [X20 + 0x2A]
	0x03618378 STRH W21, [X20 + 0x2C]
	0x0361837C STRH W21, [X20 + 0x30]
	0x03618380 AND X21, X21, 0xFFFFFFFF
	0x03618384 BFM X21, X24, 0x0, 0x0
	0x03618388 LDR X8, [X19 + 0x28]
	0x0361838C STR X8, [X20 + 0x38]
	0x03618390 LDR X22, [X19 + 0x10]
	0x03618394 STRB W31, [X31 + 0xC]
	0x03618398 ADD X1, X31, 0xC
	0x0361839C MOV X0, X22
	0x036183A0 MOV X2, X31
	0x036183A4 BL 0x33DE64C
	0x036183A8 LDR X8, [X19 + 0x30]
	0x036183AC TBNZ X8, 0x1E, 0x36183C8
	0x036183B0 AND X8, X8, 0xFFFFFFFF
	0x036183B4 ORR X8, X21, X8, 0x0
	0x036183B8 ORR X8, X8, 0x7FFFFFFF

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X21, 0xDC9000
	011 Move X20, 0xADD000
	012 Move W8, [X21+1131]
	013 Move X20, [X20+2544]
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {24}
	019 Move X0, 0xADD000
	020 Move X0, [X0+2544]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X21+1131], W8
	024 Move X0, [X20]
	025 Move [X31+8], X31
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 Move X0, X19
	031 Move X1, X31
	032 Call DateTime.get_Ticks, X0
	033 Move X20, X0
	034 Move X0, X19
	035 Move X1, X31
	036 Call DateTime.get_Year, X0
	037 Move W21, W0
	038 Move X0, X19
	039 Move X1, X31
	040 Call DateTime.get_Month, X0
	041 Move W22, W0
	042 Move X0, X19
	043 Move X1, X31
	044 Call DateTime.get_Day, X0
	045 Move W23, W0
	046 Move X0, X19
	047 Move X1, X31
	048 Call DateTime.get_Hour, X0
	049 Move W24, W0
	050 Move X0, X19
	051 Move X1, X31
	052 Call DateTime.get_Minute, X0
	053 Move W25, W0
	054 Move X0, X19
	055 Move X1, X31
	056 Call DateTime.get_Second, X0
	057 Move W6, W0
	058 Add X0, X31, 0
	059 Move W1, W21
	060 Move W2, W22
	061 Move W3, W23
	062 Move W4, W24
	063 Move W5, W25
	064 Move X7, X31
	065 Move [X31], X31
	066 Call DateTime..ctor, X0, X1, X2, X3, X4, X5, X6
	067 Move X8, [X31]
	068 Add X0, X31, 8
	069 Move X1, X31
	070 Move [X31+8], X8
	071 Call DateTime.get_Ticks, X0
	072 Subtract W0, W20, W0
	073 Move X20, [X31+64]
	074 Move X19, [X31+72]
	075 Move X22, [X31+48]
	076 Move X21, [X31+56]
	077 Move X24, [X31+32]
	078 Move X23, [X31+40]
	079 Move X30, [X31+16]
	080 Move X25, [X31+24]
	081 Add X31, X31, 80
	082 Return X0

Method: System.Int32 get_ZoneHour()

Disassembly:
	0x036183BC MOV X23, X31
	0x036183C0 STP X8, X20, [X19 + 0x30]

ISIL:
	001 Move W0, [X0+9]
	002 Return X0

Method: System.Int32 get_ZoneMinute()

Disassembly:
	0x036183C4 B 0x36183CC
	0x036183C8 MOV X23, X31

ISIL:
	001 Move W0, [X0+8]
	002 Return X0

Method: System.String ToString()

Disassembly:
	0x03617B58 ADRP X10, 0xB24000
	0x03617B5C LDR X10, [X10 + 0x30]
	0x03617B60 STR W9, [X8 + 0x4]
	0x03617B64 LDR X9, [X10]
	0x03617B68 CBZ X9, 0x3617D80
	0x03617B6C LDR W9, [X9 + 0x10]
	0x03617B70 ADRP X10, 0xB24000
	0x03617B74 LDR X10, [X10 + 0x20]
	0x03617B78 STR W9, [X8 + 0x8]
	0x03617B7C LDR X9, [X10]
	0x03617B80 CBZ X9, 0x3617D80
	0x03617B84 LDR W9, [X9 + 0x10]
	0x03617B88 ADRP X10, 0xB11000
	0x03617B8C LDR X10, [X10 + 0x6B0]
	0x03617B90 STR W9, [X8 + 0xC]
	0x03617B94 LDR X9, [X10]
	0x03617B98 CBZ X9, 0x3617D80
	0x03617B9C LDR W9, [X9 + 0x10]
	0x03617BA0 ADRP X10, 0xB23000
	0x03617BA4 LDR X10, [X10 + 0xFF0]
	0x03617BA8 STR W9, [X8 + 0x10]
	0x03617BAC LDR X9, [X10]
	0x03617BB0 CBZ X9, 0x3617D80
	0x03617BB4 LDR W9, [X9 + 0x10]
	0x03617BB8 ADRP X10, 0xB23000
	0x03617BBC LDR X10, [X10 + 0xFE8]
	0x03617BC0 STR W9, [X8 + 0x14]
	0x03617BC4 LDR X9, [X10]
	0x03617BC8 CBZ X9, 0x3617D80
	0x03617BCC LDR W9, [X9 + 0x10]
	0x03617BD0 ADRP X10, 0xB23000
	0x03617BD4 LDR X10, [X10 + 0xFE0]
	0x03617BD8 STR W9, [X8 + 0x18]
	0x03617BDC LDR X9, [X10]
	0x03617BE0 CBZ X9, 0x3617D80
	0x03617BE4 LDR W9, [X9 + 0x10]
	0x03617BE8 ADRP X10, 0xB11000
	0x03617BEC LDR X10, [X10 + 0xB18]
	0x03617BF0 STR W9, [X8 + 0x1C]
	0x03617BF4 LDR X9, [X10]
	0x03617BF8 CBZ X9, 0x3617D80
	0x03617BFC LDR W9, [X9 + 0x10]
	0x03617C00 ADRP X10, 0xB23000
	0x03617C04 LDR X10, [X10 + 0xFC0]
	0x03617C08 STR W9, [X8 + 0x20]
	0x03617C0C LDR X9, [X10]
	0x03617C10 CBZ X9, 0x3617D80
	0x03617C14 LDR W9, [X9 + 0x10]
	0x03617C18 ADRP X10, 0xB11000
	0x03617C1C LDR X10, [X10 + 0xB20]
	0x03617C20 STR W9, [X8 + 0x24]
	0x03617C24 LDR X9, [X10]
	0x03617C28 CBZ X9, 0x3617D80
	0x03617C2C LDR W9, [X9 + 0x10]
	0x03617C30 ADRP X10, 0xADD000
	0x03617C34 LDR X10, [X10 + 0x2A8]
	0x03617C38 STR W9, [X8 + 0x28]
	0x03617C3C LDR X9, [X10]
	0x03617C40 CBZ X9, 0x3617D80
	0x03617C44 LDR W9, [X9 + 0x10]
	0x03617C48 ADRP X10, 0xB24000
	0x03617C4C LDR X10, [X10 + 0x18]
	0x03617C50 STR W9, [X8 + 0x2C]
	0x03617C54 LDR X9, [X10]
	0x03617C58 CBZ X9, 0x3617D80
	0x03617C5C LDR W9, [X9 + 0x10]
	0x03617C60 ADRP X10, 0xB24000
	0x03617C64 LDR X10, [X10 + 0x28]
	0x03617C68 STR W9, [X8 + 0x30]
	0x03617C6C LDR X9, [X10]
	0x03617C70 CBZ X9, 0x3617D80
	0x03617C74 LDR W9, [X9 + 0x10]
	0x03617C78 ADRP X10, 0xB23000
	0x03617C7C LDR X10, [X10 + 0xFD0]
	0x03617C80 STR W9, [X8 + 0x34]
	0x03617C84 LDR X9, [X10]
	0x03617C88 CBZ X9, 0x3617D80
	0x03617C8C LDR W9, [X9 + 0x10]
	0x03617C90 ADRP X10, 0xB07000
	0x03617C94 LDR X10, [X10 + 0x578]
	0x03617C98 STR W9, [X8 + 0x38]
	0x03617C9C LDR X9, [X10]
	0x03617CA0 CBZ X9, 0x3617D80
	0x03617CA4 LDR W9, [X9 + 0x10]
	0x03617CA8 ADRP X10, 0xB24000
	0x03617CAC LDR X10, [X10 + 0x38]
	0x03617CB0 STR W9, [X8 + 0x3C]
	0x03617CB4 LDR X9, [X10]
	0x03617CB8 CBZ X9, 0x3617D80
	0x03617CBC LDR W9, [X9 + 0x10]
	0x03617CC0 ADRP X10, 0xB24000
	0x03617CC4 LDR X10, [X10 + 0x10]
	0x03617CC8 STR W9, [X8 + 0x40]
	0x03617CCC LDR X9, [X10]
	0x03617CD0 CBZ X9, 0x3617D80
	0x03617CD4 LDR W9, [X9 + 0x10]
	0x03617CD8 ADRP X10, 0xB23000
	0x03617CDC LDR X10, [X10 + 0xFF8]
	0x03617CE0 STR W9, [X8 + 0x44]
	0x03617CE4 LDR X9, [X10]
	0x03617CE8 CBZ X9, 0x3617D80
	0x03617CEC LDR W9, [X9 + 0x10]
	0x03617CF0 ADRP X10, 0xB23000
	0x03617CF4 LDR X10, [X10 + 0xFD8]
	0x03617CF8 STR W9, [X8 + 0x48]
	0x03617CFC LDR X9, [X10]
	0x03617D00 CBZ X9, 0x3617D80
	0x03617D04 LDR W9, [X9 + 0x10]
	0x03617D08 ADRP X10, 0xB23000
	0x03617D0C LDR X10, [X10 + 0xFC8]
	0x03617D10 STR W9, [X8 + 0x4C]
	0x03617D14 LDR X9, [X10]
	0x03617D18 CBZ X9, 0x3617D80
	0x03617D1C LDR W9, [X9 + 0x10]
	0x03617D20 ADRP X10, 0xB24000
	0x03617D24 LDR X10, [X10]
	0x03617D28 STR W9, [X8 + 0x50]
	0x03617D2C LDR X9, [X10]
	0x03617D30 CBZ X9, 0x3617D80
	0x03617D34 LDR W9, [X9 + 0x10]
	0x03617D38 ADRP X10, 0xB23000
	0x03617D3C LDR X10, [X10 + 0xFB8]
	0x03617D40 ADRP X19, 0xB23000
	0x03617D44 STR W9, [X8 + 0x54]
	0x03617D48 MOVZ W1, 0x8
	0x03617D4C LDR X0, [X10]
	0x03617D50 LDR X19, [X19 + 0xFB0]
	0x03617D54 BL 0x1C16D6C
	0x03617D58 LDR X1, [X19]
	0x03617D5C MOV X2, X31
	0x03617D60 MOV X19, X0
	0x03617D64 BL 0x32C5BD8
	0x03617D68 LDR X8, [X20]
	0x03617D6C LDR X8, [X8 + 0xB8]
	0x03617D70 STR X19, [X8 + 0x58]
	0x03617D74 LDP X20, X19, [X31 + 0x10]
	0x03617D78 LDR X30, [X31], #0x20
	0x03617D7C RET
	0x03617D80 BL 0x1C16F20
	0x03617D84 LDRB W8, [X0 + 0x33]
	0x03617D88 UBFM W0, W8, 0x5, 0x5
	0x03617D8C RET
	0x03617D90 LDRB W8, [X0 + 0x33]
	0x03617D94 ANDS W31, W8, 0x18
	0x03617D98 CSET W0, NE
	0x03617D9C RET
	0x03617DA0 LDRB W8, [X0 + 0x33]
	0x03617DA4 UBFM W0, W8, 0x3, 0x3
	0x03617DA8 RET
	0x03617DAC LDRB W8, [X0 + 0x33]
	0x03617DB0 UBFM W0, W8, 0x4, 0x4
	0x03617DB4 RET
	0x03617DB8 LDR X8, [X0 + 0x30]
	0x03617DBC AND X0, X8, 0x7FFFF
	0x03617DC0 RET
	0x03617DC4 LDR X0, [X0 + 0x20]
	0x03617DC8 RET
	0x03617DCC LDR X8, [X0 + 0x20]
	0x03617DD0 CMP X8, 0x0
	0x03617DD4 CSET W0, EQ
	0x03617DD8 RET
	0x03617DDC STP X30, X21, [X31 - 0x20]!
	0x03617DE0 STP X20, X19, [X31 + 0x10]
	0x03617DE4 ADRP X21, 0xDC9000
	0x03617DE8 ADRP X20, 0xADE000
	0x03617DEC LDRB W8, [X21 + 0x471]
	0x03617DF0 LDR X20, [X20 + 0xA28]
	0x03617DF4 MOV X19, X0
	0x03617DF8 TBNZ X8, 0x0, 0x3617E10
	0x03617DFC ADRP X0, 0xADE000
	0x03617E00 LDR X0, [X0 + 0xA28]
	0x03617E04 BL 0x1C16CF4
	0x03617E08 MOVZ W8, 0x1
	0x03617E0C STRB W8, [X21 + 0x471]
	0x03617E10 LDR X0, [X20]
	0x03617E14 LDR W8, [X0 + 0xE0]
	0x03617E18 CBNZ W8, 0x3617E24
	0x03617E1C BL 0x1C16DFC
	0x03617E20 LDR X0, [X20]
	0x03617E24 LDR X8, [X0 + 0xB8]
	0x03617E28 LDRB W20, [X8 + 0x70]
	0x03617E2C BL 0x1C16D44
	0x03617E30 CBZ W20, 0x3617E58
	0x03617E34 CMP X19, 0x0
	0x03617E38 CSET W20, EQ
	0x03617E3C CBZ X19, 0x3617E58
	0x03617E40 MOVZ W1, 0x10000000
	0x03617E44 MOV X0, X19
	0x03617E48 MOV X2, X31
	0x03617E4C BL 0x3629044
	0x03617E50 TBZ X0, 0x0, 0x3617E58
	0x03617E54 MOVZ W20, 0x1
	0x03617E58 MOV W0, W20
	0x03617E5C LDP X20, X19, [X31 + 0x10]
	0x03617E60 LDP X30, X21, [X31], #0x20
	0x03617E64 RET
	0x03617E68 STP X30, X21, [X31 - 0x20]!
	0x03617E6C STP X20, X19, [X31 + 0x10]
	0x03617E70 ADRP X20, 0xDC9000
	0x03617E74 LDRB W8, [X20 + 0x472]
	0x03617E78 MOV X19, X0
	0x03617E7C TBNZ X8, 0x0, 0x3617E94
	0x03617E80 ADRP X0, 0xADE000
	0x03617E84 LDR X0, [X0 + 0xA28]
	0x03617E88 BL 0x1C16CF4
	0x03617E8C MOVZ W8, 0x1
	0x03617E90 STRB W8, [X20 + 0x472]
	0x03617E94 LDR X8, [X19 + 0x20]
	0x03617E98 CBZ X8, 0x3617EA4
	0x03617E9C LDRB W8, [X8 + 0x13]
	0x03617EA0 TBNZ X8, 0x2, 0x3617EB4
	0x03617EA4 MOV W0, W31
	0x03617EA8 LDP X20, X19, [X31 + 0x10]
	0x03617EAC LDP X30, X21, [X31], #0x20
	0x03617EB0 RET
	0x03617EB4 ADRP X20, 0xADE000
	0x03617EB8 LDR X20, [X20 + 0xA28]
	0x03617EBC LDR X0, [X20]
	0x03617EC0 LDR W8, [X0 + 0xE0]
	0x03617EC4 CBNZ W8, 0x3617ED0
	0x03617EC8 BL 0x1C16DFC
	0x03617ECC LDR X0, [X20]
	0x03617ED0 LDR X8, [X0 + 0xB8]
	0x03617ED4 LDR W21, [X8 + 0x6C]
	0x03617ED8 BL 0x1C16D44
	0x03617EDC CMP W21, 0x2
	0x03617EE0 B.NE 0x3617EEC
	0x03617EE4 MOVZ W0, 0x1
	0x03617EE8 B 0x3617EA8
	0x03617EEC LDR X0, [X20]
	0x03617EF0 LDR W8, [X0 + 0xE0]
	0x03617EF4 CBNZ W8, 0x3617F00
	0x03617EF8 BL 0x1C16DFC
	0x03617EFC LDR X0, [X20]
	0x03617F00 LDR X8, [X0 + 0xB8]
	0x03617F04 LDR W20, [X8 + 0x6C]
	0x03617F08 BL 0x1C16D44
	0x03617F0C CMP W20, 0x1
	0x03617F10 B.NE 0x3617EA4
	0x03617F14 LDRB W8, [X19 + 0x34]
	0x03617F18 ANDS W31, W8, 0x20
	0x03617F1C CSET W0, EQ
	0x03617F20 B 0x3617EA8
	0x03617F24 LDR X8, [X0 + 0x30]
	0x03617F28 ANDS X31, X8, X1, 0x0
	0x03617F2C CSET W0, EQ
	0x03617F30 RET
	0x03617F34 STP X30, X21, [X31 - 0x20]!
	0x03617F38 STP X20, X19, [X31 + 0x10]
	0x03617F3C ADRP X21, 0xDC9000
	0x03617F40 LDRB W8, [X21 + 0x473]
	0x03617F44 MOV X19, X2
	0x03617F48 MOV X20, X1
	0x03617F4C TBNZ X8, 0x0, 0x3617F64
	0x03617F50 ADRP X0, 0xADE000
	0x03617F54 LDR X0, [X0 + 0xA28]
	0x03617F58 BL 0x1C16CF4
	0x03617F5C MOVZ W8, 0x1
	0x03617F60 STRB W8, [X21 + 0x473]
	0x03617F64 CBZ X20, 0x3617F70
	0x03617F68 LDRB W8, [X20 + 0x13]
	0x03617F6C TBNZ X8, 0x2, 0x3617F80
	0x03617F70 MOV W0, W31
	0x03617F74 LDP X20, X19, [X31 + 0x10]
	0x03617F78 LDP X30, X21, [X31], #0x20
	0x03617F7C RET
	0x03617F80 ADRP X20, 0xADE000
	0x03617F84 LDR X20, [X20 + 0xA28]
	0x03617F88 LDR X0, [X20]
	0x03617F8C LDR W8, [X0 + 0xE0]
	0x03617F90 CBNZ W8, 0x3617F9C
	0x03617F94 BL 0x1C16DFC
	0x03617F98 LDR X0, [X20]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0xDCA000
	008 Move X21, 0xADD000
	009 Move X23, 0xB24000
	010 Move W8, [X20+1132]
	011 Move X21, [X21+2288]
	012 Move X23, [X23+3952]
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0xAE6000
	019 Move X0, [X0+2264]
	020 Call 0x1C17CF4
	021 Move X0, 0xADD000
	022 Move X0, [X0+2288]
	023 Call 0x1C17CF4
	024 Move X0, 0xB24000
	025 Move X0, [X0+3952]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X20+1132], W8
	029 Move X0, [X21]
	030 Call 0x1C17F10
	031 Move W1, 64
	032 Move X2, X31
	033 Move X20, X0
	034 Call StringBuilder..ctor, X0, X1
	035 Move X0, [X23]
	036 Move W8, [X0+224]
	037 Compare W8, 0
	038 JumpIfNotEqual {40}
	039 Call 0x1C17DFC
	040 Move W8, [X19+8]
	041 Move W8, W8
	042 ShiftRight W8, 24
	043 And W8, W8, 0x7FFFFFFF
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Move X9, -44560384
	046 Add X9, X9, 818
	047 NotImplemented "Instruction ADR not yet implemented."
	048 Move W11, [X9]
	049 Add X10, X10, X11
	050 CallNoReturn X10
	051 Move X0, [X23]
	052 Move W8, [X0+224]
	053 Compare W8, 0
	054 JumpIfNotEqual {56}
	055 Call 0x1C17DFC
	056 Move X0, X19
	057 Move X1, X20
	058 Call XsdDateTime.PrintDate, X0, X1
	059 Compare X20, 0
	060 JumpIfEqual {290}
	061 Move W1, 84
	062 Move X0, X20
	063 Move X2, X31
	064 Call StringBuilder.Append, X0, X1
	065 Move X0, [X23]
	066 Move W8, [X0+224]
	067 Compare W8, 0
	068 JumpIfNotEqual {70}
	069 Call 0x1C17DFC
	070 Move X0, X19
	071 Move X1, X20
	072 Call XsdDateTime.PrintTime, X0, X1
	073 Move X0, [X23]
	074 Move W8, [X0+224]
	075 Compare W8, 0
	076 JumpIfNotEqual {78}
	077 Call 0x1C17DFC
	078 Move X0, X19
	079 Move X1, X20
	080 Call XsdDateTime.PrintDate, X0, X1
	081 Move X0, [X23]
	082 Move W8, [X0+224]
	083 Compare W8, 0
	084 JumpIfNotEqual {87}
	085 Call 0x1C17DFC
	086 Move X0, [X23]
	087 Move X9, 0xAE6000
	088 Move X8, [X0+184]
	089 Move X9, [X9+2264]
	090 Move W1, [X8+8]
	091 Move X0, [X9]
	092 Call 0x1C17D6C
	093 Move X21, X0
	094 Move X0, X19
	095 Call XsdDateTime.get_Year, X0
	096 Move W4, 4
	097 Move X1, X21
	098 Move W2, W31
	099 Move W3, W0
	100 Call XsdDateTime.IntToCharArray, X0, X1, X2, X3, X4
	101 Compare X21, 0
	102 JumpIfEqual {290}
	103 Move X8, [X23]
	104 Move W10, [X21+24]
	105 Move X8, [X8+184]
	106 NotImplemented "Instruction LDRSW not yet implemented."
	107 NotImplemented "Instruction CMP not yet implemented."
	108 Add X9, X21, X9
	109 Move W10, 45
	110 NotImplemented "Instruction STRH not yet implemented."
	111 Move W22, [X8+4]
	112 Move X0, X19
	113 Call XsdDateTime.get_Month, X0
	114 Move X0, [X23]
	115 Move W8, [X0+224]
	116 Compare W8, 0
	117 JumpIfNotEqual {120}
	118 Call 0x1C17DFC
	119 Move X0, [X23]
	120 Move X9, 0xAE6000
	121 Move X8, [X0+184]
	122 Move X9, [X9+2264]
	123 Move W1, [X8]
	124 Move X0, [X9]
	125 Call 0x1C17D6C
	126 Move X21, X0
	127 Move X0, X19
	128 Call XsdDateTime.get_Year, X0
	129 Move W4, 4
	130 Move X1, X21
	131 Move W2, W31
	132 Move W3, W0
	133 Call XsdDateTime.IntToCharArray, X0, X1, X2, X3, X4
	134 Compare X20, 0
	135 JumpIfNotEqual {265}
	136 Move X0, [X23]
	137 Move W8, [X0+224]
	138 Compare W8, 0
	139 JumpIfNotEqual {142}
	140 Call 0x1C17DFC
	141 Move X0, [X23]
	142 Move X9, 0xAE6000
	143 Move X8, [X0+184]
	144 Move X9, [X9+2264]
	145 Move W1, [X8+76]
	146 Move X0, [X9]
	147 Call 0x1C17D6C
	148 Compare X0, 0
	149 JumpIfEqual {290}
	150 Move W9, [X0+24]
	151 Move X21, X0
	152 Compare W9, 0
	153 JumpIfEqual {291}
	154 Move W8, 45
	155 NotImplemented "Instruction STRH not yet implemented."
	156 Move X10, [X23]
	157 Move X10, [X10+184]
	158 NotImplemented "Instruction LDRSW not yet implemented."
	159 NotImplemented "Instruction CMP not yet implemented."
	160 Add X9, X21, X11
	161 NotImplemented "Instruction STRH not yet implemented."
	162 Move W22, [X10+60]
	163 Move X0, X19
	164 Call XsdDateTime.get_Month, X0
	165 Move X1, X21
	166 Move W2, W22
	167 Move W3, W0
	168 Call XsdDateTime.ShortToCharArray, X0, X1, X2, X3
	169 Move X8, [X23]
	170 Move W10, [X21+24]
	171 Move X8, [X8+184]
	172 NotImplemented "Instruction LDRSW not yet implemented."
	173 NotImplemented "Instruction CMP not yet implemented."
	174 Add X9, X21, X9
	175 Move W10, 45
	176 NotImplemented "Instruction STRH not yet implemented."
	177 Move W22, [X8+68]
	178 Move X0, [X23]
	179 Move W8, [X0+224]
	180 Compare W8, 0
	181 JumpIfNotEqual {184}
	182 Call 0x1C17DFC
	183 Move X0, [X23]
	184 Move X9, 0xAE6000
	185 Move X8, [X0+184]
	186 Move X9, [X9+2264]
	187 Move W1, [X8+84]
	188 Move X0, [X9]
	189 Call 0x1C17D6C
	190 Compare X0, 0
	191 JumpIfEqual {290}
	192 Move W9, [X0+24]
	193 Move X21, X0
	194 Compare W9, 0
	195 JumpIfEqual {291}
	196 Move W10, 45
	197 NotImplemented "Instruction STRH not yet implemented."
	198 Move X8, [X23]
	199 Move X8, [X8+184]
	200 NotImplemented "Instruction LDRSW not yet implemented."
	201 NotImplemented "Instruction CMP not yet implemented."
	202 Add X11, X21, X11
	203 NotImplemented "Instruction STRH not yet implemented."
	204 NotImplemented "Instruction LDRSW not yet implemented."
	205 NotImplemented "Instruction CMP not yet implemented."
	206 Add X9, X21, X10
	207 Move W10, 45
	208 NotImplemented "Instruction STRH not yet implemented."
	209 Move W22, [X8+80]
	210 Move X0, X19
	211 Call XsdDateTime.get_Day, X0
	212 Move X1, X21
	213 Move W2, W22
	214 Move W3, W0
	215 Call XsdDateTime.ShortToCharArray, X0, X1, X2, X3
	216 Compare X20, 0
	217 JumpIfNotEqual {265}
	218 Move X0, [X23]
	219 Move W8, [X0+224]
	220 Compare W8, 0
	221 JumpIfNotEqual {224}
	222 Call 0x1C17DFC
	223 Move X0, [X23]
	224 Move X9, 0xAE6000
	225 Move X8, [X0+184]
	226 Move X9, [X9+2264]
	227 Move W1, [X8+72]
	228 Move X0, [X9]
	229 Call 0x1C17D6C
	230 Compare X0, 0
	231 JumpIfEqual {290}
	232 Move W9, [X0+24]
	233 Move X21, X0
	234 Compare W9, 0
	235 JumpIfEqual {291}
	236 Move W8, 45
	237 NotImplemented "Instruction STRH not yet implemented."
	238 Move X10, [X23]
	239 Move X10, [X10+184]
	240 NotImplemented "Instruction LDRSW not yet implemented."
	241 NotImplemented "Instruction CMP not yet implemented."
	242 Add X9, X21, X11
	243 NotImplemented "Instruction STRH not yet implemented."
	244 Move W22, [X10+60]
	245 Move X0, X19
	246 Call XsdDateTime.get_Month, X0
	247 Move X1, X21
	248 Move W2, W22
	249 Move W3, W0
	250 Call XsdDateTime.ShortToCharArray, X0, X1, X2, X3
	251 Move X8, [X23]
	252 Move W9, [X21+24]
	253 Move X8, [X8+184]
	254 NotImplemented "Instruction LDRSW not yet implemented."
	255 NotImplemented "Instruction CMP not yet implemented."
	256 Add X11, X21, X10
	257 Move W10, 45
	258 NotImplemented "Instruction STRH not yet implemented."
	259 NotImplemented "Instruction LDRSW not yet implemented."
	260 NotImplemented "Instruction CMP not yet implemented."
	261 Add X8, X21, X8
	262 NotImplemented "Instruction STRH not yet implemented."
	263 Compare X20, 0
	264 JumpIfEqual {290}
	265 Move X0, X20
	266 Move X1, X21
	267 Move X2, X31
	268 Call StringBuilder.Append, X0, X1
	269 Move X0, [X23]
	270 Move W8, [X0+224]
	271 Compare W8, 0
	272 JumpIfNotEqual {274}
	273 Call 0x1C17DFC
	274 Move X0, X19
	275 Move X1, X20
	276 Call XsdDateTime.PrintZone, X0, X1
	277 Compare X20, 0
	278 JumpIfEqual {290}
	279 Move X8, [X20]
	280 Move X0, X20
	281 Move X20, [X31+32]
	282 Move X19, [X31+40]
	283 Move X22, [X31+16]
	284 Move X21, [X31+24]
	285 Move X2, [X8+360]
	286 Move X1, [X8+368]
	287 Move X30, [X31+48]
	288 Move X23, [X31+56]
	289 CallNoReturn X2
	290 Call 0x1C17F20
	291 Call 0x1C17F28

Method: System.Void PrintDate(System.Text.StringBuilder sb)

Disassembly:
	0x036183CC LDRB W8, [X31 + 0xC]
	0x036183D0 CBZ W8, 0x36183E0
	0x036183D4 MOV X0, X22
	0x036183D8 MOV X1, X31
	0x036183DC BL 0x33E14E4
	0x036183E0 CBNZ X23, 0x36185F4
	0x036183E4 LDP X20, X19, [X31 + 0x40]
	0x036183E8 LDP X22, X21, [X31 + 0x30]
	0x036183EC LDP X24, X23, [X31 + 0x20]
	0x036183F0 LDP X26, X25, [X31 + 0x10]
	0x036183F4 LDR X30, [X31], #0x50
	0x036183F8 RET
	0x036183FC TBZ X21, 0x15, 0x3618424
	0x03618400 LDR X0, [X19 + 0x10]
	0x03618404 CBZ X0, 0x3618228
	0x03618408 AND W1, W22, 0xFFFF
	0x0361840C MOV X2, X31
	0x03618410 BL 0x3222A1C
	0x03618414 AND W8, W0, 0xFFFF
	0x03618418 CMP W8, 0x40
	0x0361841C ADD W22, W22, 0x1
	0x03618420 B.NE 0x3618400
	0x03618424 STRH W22, [X20 + 0x2C]
	0x03618428 STRH W21, [X20 + 0x30]
	0x0361842C TBNZ X21, 0x0, 0x36184B8
	0x03618430 LDRH W8, [X20 + 0x36]
	0x03618434 B 0x36184C8
	0x03618438 MOV W24, W31
	0x0361843C MOVZ X8, 0x18000000
	0x03618440 MOVK X8, 0x1000
	0x03618444 ANDS X31, X21, X8, 0x0
	0x03618448 ADD W22, W23, 0x3
	0x0361844C B.EQ 0x361830C
	0x03618450 AND W25, W21, 0xFFFF
	0x03618454 CMP W25, W22, UXTH
	0x03618458 B.LS 0x361830C
	0x0361845C AND W23, W22, 0xFFFF
	0x03618460 LDR X0, [X19 + 0x10]
	0x03618464 CBZ X0, 0x3618228
	0x03618468 MOV W1, W23
	0x0361846C MOV X2, X31
	0x03618470 BL 0x3222A1C
	0x03618474 AND W8, W0, 0xFFFF
	0x03618478 CMP W8, 0x2F
	0x0361847C B.EQ 0x36184A0
	0x03618480 LDR X0, [X19 + 0x10]
	0x03618484 CBZ X0, 0x3618228
	0x03618488 MOV W1, W23
	0x0361848C MOV X2, X31
	0x03618490 BL 0x3222A1C
	0x03618494 AND W8, W0, 0xFFFF
	0x03618498 CMP W8, 0x5C
	0x0361849C B.NE 0x361830C
	0x036184A0 ADD W22, W22, 0x1
	0x036184A4 AND W23, W22, 0xFFFF
	0x036184A8 CMP W25, W22, UXTH
	0x036184AC MOVZ W24, 0x1
	0x036184B0 B.HI 0x3618460
	0x036184B4 B 0x361830C
	0x036184B8 LDR X8, [X19 + 0x18]
	0x036184BC CBZ X8, 0x3618228
	0x036184C0 LDR W8, [X8 + 0x10]
	0x036184C4 STRH W8, [X20 + 0x36]
	0x036184C8 MOVN X9, 0xFFFF
	0x036184CC MOVK X9, 0xFFBF
	0x036184D0 AND W25, W21, 0xFFFF
	0x036184D4 AND X22, X21, X9, 0x0
	0x036184D8 CMP W25, W8, UXTH
	0x036184DC BFM X22, X24, 0x0, 0x0
	0x036184E0 B.CS 0x3618550
	0x036184E4 ANDS X31, X21, 0x7FFFFFFFFF
	0x036184E8 MOVZ W8, 0x18
	0x036184EC MOVZ W9, 0x10
	0x036184F0 CSEL X8, X9, X8, EQ
	0x036184F4 LDR X23, [X19, X8, LSL]
	0x036184F8 CBZ X23, 0x3618508
	0x036184FC MOV X0, X31
	0x03618500 BL 0x32C1424
	0x03618504 ADD X23, X23, W0, SXTW
	0x03618508 UBFM W8, W21, 0x1F, 0x1E
	0x0361850C AND X8, X8, 0x1FFFF

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0xDC9000
	009 Move X23, 0xB23000
	010 Move W8, [X21+1133]
	011 Move X23, [X23+3952]
	012 Move X19, X1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0xAE5000
	019 Move X0, [X0+2264]
	020 Call 0x1C17CF4
	021 Move X0, 0xB23000
	022 Move X0, [X0+3952]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X21+1133], W8
	026 Move X0, [X23]
	027 Move X21, 0xAE5000
	028 Move W8, [X0+224]
	029 Move X21, [X21+2264]
	030 Compare W8, 0
	031 JumpIfNotEqual {34}
	032 Call 0x1C17DFC
	033 Move X0, [X23]
	034 Move X8, [X0+184]
	035 Move X0, [X21]
	036 Move W1, [X8+16]
	037 Call 0x1C17D6C
	038 Move X21, X0
	039 Move X0, X20
	040 Call XsdDateTime.get_Year, X0
	041 Move W4, 4
	042 Move X1, X21
	043 Move W2, W31
	044 Move W3, W0
	045 Call XsdDateTime.IntToCharArray, X0, X1, X2, X3, X4
	046 Compare X21, 0
	047 JumpIfEqual {92}
	048 Move X8, [X23]
	049 Move W10, [X21+24]
	050 Move X8, [X8+184]
	051 NotImplemented "Instruction LDRSW not yet implemented."
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Add X9, X21, X9
	054 Move W24, 45
	055 NotImplemented "Instruction STRH not yet implemented."
	056 Move W22, [X8+4]
	057 Move X0, X20
	058 Call XsdDateTime.get_Month, X0
	059 Move X1, X21
	060 Move W2, W22
	061 Move W3, W0
	062 Call XsdDateTime.ShortToCharArray, X0, X1, X2, X3
	063 Move X8, [X23]
	064 Move W10, [X21+24]
	065 Move X8, [X8+184]
	066 NotImplemented "Instruction LDRSW not yet implemented."
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Add X9, X21, X9
	069 NotImplemented "Instruction STRH not yet implemented."
	070 Move W22, [X8+12]
	071 Move X0, X20
	072 Call XsdDateTime.get_Day, X0
	073 Move X1, X21
	074 Move W2, W22
	075 Move W3, W0
	076 Call XsdDateTime.ShortToCharArray, X0, X1, X2, X3
	077 Compare X19, 0
	078 JumpIfEqual {92}
	079 Move X0, X19
	080 Move X1, X21
	081 Move X20, [X31+48]
	082 Move X19, [X31+56]
	083 Move X22, [X31+32]
	084 Move X21, [X31+40]
	085 Move X24, [X31+16]
	086 Move X23, [X31+24]
	087 Move X2, X31
	088 Move X30, [X31+64]
	089 Call StringBuilder.Append, X0, X1
	090 Return 
	091 Call 0x1C17F28
	092 Call 0x1C17F20

Method: System.Void PrintTime(System.Text.StringBuilder sb)

Disassembly:
	0x03618510 LDRH W8, [X8, X23, LSL]
	0x03618514 CMP W8, 0x3A
	0x03618518 B.NE 0x3618550
	0x0361851C LDRH W9, [X20 + 0x36]
	0x03618520 ADD W8, W25, 0x1
	0x03618524 AND W10, W8, 0xFFFF
	0x03618528 CMP W10, W9
	0x0361852C B.CS 0x36185D8
	0x03618530 LDRH W11, [X23, W10, UXTW]
	0x03618534 CMP W11, 0x2F
	0x03618538 B.GT 0x3618558
	0x0361853C CMP W11, 0x23
	0x03618540 B.EQ 0x36185D8
	0x03618544 CMP W11, 0x2F
	0x03618548 B.EQ 0x36185D8
	0x0361854C B 0x3618570
	0x03618550 MOV X21, X22
	0x03618554 B 0x3618388
	0x03618558 CMP W11, 0x3F
	0x0361855C B.EQ 0x36185D8
	0x03618560 CMP W11, 0x30
	0x03618564 B.NE 0x3618570
	0x03618568 MOVZ W8, 0x208
	0x0361856C ORR X22, X22, X8, 0x0
	0x03618570 ADD W8, W10, 0x1
	0x03618574 SUB W12, W11, 0x30
	0x03618578 AND W11, W8, 0xFFFF
	0x0361857C CMP W11, W9
	0x03618580 AND W10, W12, 0xFFFF
	0x03618584 B.CS 0x36185CC
	0x03618588 MOVZ X14, 0x8008
	0x0361858C MOVZ W12, 0xA
	0x03618590 MOVZ W13, 0x1
	0x03618594 MOVK X14, 0x80000000
	0x03618598 LDRH W15, [X23, W11, UXTW]
	0x0361859C CMP W15, 0x3F
	0x036185A0 B.HI 0x36185B0
	0x036185A4 LSLV X16, X13, X15
	0x036185A8 ANDS X31, X16, X14, 0x0
	0x036185AC B.NE 0x36185CC
	0x036185B0 ADD W8, W11, 0x1
	0x036185B4 SUB W15, W15, 0x30
	0x036185B8 MUL W10, W10, W12
	0x036185BC AND W11, W8, 0xFFFF
	0x036185C0 CMP W11, W9
	0x036185C4 ADD W10, W10, W15, UXTH
	0x036185C8 B.CC 0x3618598
	0x036185CC LDRH W9, [X20 + 0x2E]
	0x036185D0 CMP W9, W10, UXTH
	0x036185D4 B.NE 0x36185E8
	0x036185D8 MOVZ W9, 0x208
	0x036185DC ORR X21, X22, X9, 0x0
	0x036185E0 STRH W8, [X20 + 0x30]
	0x036185E4 B 0x3618388
	0x036185E8 ORR X21, X22, 0xFFFFFF
	0x036185EC STRH W10, [X20 + 0x2E]
	0x036185F0 B 0x36185E0
	0x036185F4 MOV X0, X23
	0x036185F8 BL 0x1C16F18
	0x036185FC CMP W1, 0x1
	0x03618600 MOV X19, X0
	0x03618604 B.NE 0x361861C
	0x03618608 MOV X0, X19
	0x0361860C BL 0x3EB1AD0
	0x03618610 LDR X23, [X0]
	0x03618614 BL 0x3EB1AE0
	0x03618618 B 0x36183CC
	0x0361861C MOV X23, X31
	0x03618620 B 0x3618628
	0x03618624 MOV X19, X0
	0x03618628 LDRB W8, [X31 + 0xC]
	0x0361862C CBZ W8, 0x361863C
	0x03618630 MOV X0, X22
	0x03618634 MOV X1, X31
	0x03618638 BL 0x33E14E4
	0x0361863C CBNZ X23, 0x3618648
	0x03618640 MOV X0, X19
	0x03618644 BL 0x1D2C690
	0x03618648 MOV X0, X23
	0x0361864C BL 0x1C16F18
	0x03618650 BL 0x1990590
	0x03618654 LDR W8, [X0 + 0x30]
	0x03618658 TBNZ X8, 0x1F, 0x3618660
	0x0361865C B 0x3618664
	0x03618660 RET
	0x03618664 SUB X31, X31, 0x70
	0x03618668 STP X29, X30, [X31 + 0x10]
	0x0361866C STP X28, X27, [X31 + 0x20]
	0x03618670 STP X26, X25, [X31 + 0x30]
	0x03618674 STP X24, X23, [X31 + 0x40]
	0x03618678 STP X22, X21, [X31 + 0x50]
	0x0361867C STP X20, X19, [X31 + 0x60]
	0x03618680 ADRP X20, 0xDC8000
	0x03618684 LDRB W8, [X20 + 0x493]
	0x03618688 MOV X19, X0
	0x0361868C TBNZ X8, 0x0, 0x36186BC
	0x03618690 ADRP X0, 0xADD000
	0x03618694 LDR X0, [X0 + 0x278]
	0x03618698 BL 0x1C16CF4
	0x0361869C ADRP X0, 0xB23000
	0x036186A0 LDR X0, [X0 + 0x48]
	0x036186A4 BL 0x1C16CF4
	0x036186A8 ADRP X0, 0xADD000
	0x036186AC LDR X0, [X0 + 0xA28]
	0x036186B0 BL 0x1C16CF4
	0x036186B4 MOVZ W8, 0x1
	0x036186B8 STRB W8, [X20 + 0x493]
	0x036186BC STRH W31, [X31 + 0xC]
	0x036186C0 STRB W31, [X31 + 0x4]
	0x036186C4 LDR X1, [X19 + 0x30]
	0x036186C8 TBNZ X1, 0x1E, 0x36186D8
	0x036186CC MOV X0, X19
	0x036186D0 BL 0x36180CC
	0x036186D4 LDR X1, [X19 + 0x30]
	0x036186D8 TBNZ X1, 0x18, 0x3618850
	0x036186DC LDRB W9, [X19 + 0x40]
	0x036186E0 MOVZ X10, 0xA
	0x036186E4 LDR X8, [X19 + 0x38]
	0x036186E8 MOVZ X11, 0x2
	0x036186EC AND X10, X1, X10, 0x0
	0x036186F0 CMP W9, 0x0
	0x036186F4 CSET W23, EQ
	0x036186F8 CMP X10, X11
	0x036186FC CSET W25, NE
	0x03618700 CBZ X8, 0x361884C
	0x03618704 LDRH W27, [X8 + 0x28]
	0x03618708 STRH W27, [X31 + 0x8]
	0x0361870C LDR X21, [X19 + 0x10]
	0x03618710 CBZ X21, 0x361884C
	0x03618714 LDR X8, [X19 + 0x20]
	0x03618718 CBZ X8, 0x361884C
	0x0361871C LDRH W20, [X21 + 0x10]
	0x03618720 LDR W24, [X8 + 0x10]
	0x03618724 MOV X0, X31
	0x03618728 BL 0x32C1424
	0x0361872C CMP W20, W27
	0x03618730 ADD X21, X21, W0, SXTW
	0x03618734 B.LS 0x36187E4
	0x03618738 ADRP X26, 0xADD000
	0x0361873C LDR X26, [X26 + 0xA28]
	0x03618740 SUB X22, X20, 0x1
	0x03618744 LDRH W28, [X21, X22, LSL #1]
	0x03618748 LDR X0, [X26]
	0x0361874C LDR W8, [X0 + 0xE0]
	0x03618750 CBNZ W8, 0x3618758
	0x03618754 BL 0x1C16DFC
	0x03618758 CMP W28, 0x20
	0x0361875C B.HI 0x36187E4
	0x03618760 B.HI 0x36187E4

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X21, 0xDC9000
	010 Move X23, 0xB23000
	011 Move W8, [X21+1134]
	012 Move X23, [X23+3952]
	013 Move X19, X1
	014 Move X20, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0xAE5000
	020 Move X0, [X0+2264]
	021 Call 0x1C17CF4
	022 Move X0, 0xB23000
	023 Move X0, [X0+3952]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X21+1134], W8
	027 Move X0, [X23]
	028 Move X24, 0xAE5000
	029 Move W8, [X0+224]
	030 Move X24, [X24+2264]
	031 Compare W8, 0
	032 JumpIfNotEqual {35}
	033 Call 0x1C17DFC
	034 Move X0, [X23]
	035 Move X8, [X0+184]
	036 Move X0, [X24]
	037 Move W1, [X8+40]
	038 Call 0x1C17D6C
	039 Move X21, X0
	040 Move X0, X20
	041 Call XsdDateTime.get_Hour, X0
	042 Move X1, X21
	043 Move W2, W31
	044 Move W3, W0
	045 Call XsdDateTime.ShortToCharArray, X0, X1, X2, X3
	046 Compare X21, 0
	047 JumpIfEqual {175}
	048 Move X8, [X23]
	049 Move W10, [X21+24]
	050 Move X8, [X8+184]
	051 NotImplemented "Instruction LDRSW not yet implemented."
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Add X9, X21, X9
	054 Move W25, 58
	055 NotImplemented "Instruction STRH not yet implemented."
	056 Move W22, [X8+28]
	057 Move X0, X20
	058 Call XsdDateTime.get_Minute, X0
	059 Move X1, X21
	060 Move W2, W22
	061 Move W3, W0
	062 Call XsdDateTime.ShortToCharArray, X0, X1, X2, X3
	063 Move X8, [X23]
	064 Move W10, [X21+24]
	065 Move X8, [X8+184]
	066 NotImplemented "Instruction LDRSW not yet implemented."
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Add X9, X21, X9
	069 NotImplemented "Instruction STRH not yet implemented."
	070 Move W22, [X8+36]
	071 Move X0, X20
	072 Call XsdDateTime.get_Second, X0
	073 Move X1, X21
	074 Move W2, W22
	075 Move W3, W0
	076 Call XsdDateTime.ShortToCharArray, X0, X1, X2, X3
	077 Compare X19, 0
	078 JumpIfEqual {175}
	079 Move X0, X19
	080 Move X1, X21
	081 Move X2, X31
	082 Call StringBuilder.Append, X0, X1
	083 Move X0, X20
	084 Call XsdDateTime.get_Fraction, X0
	085 Compare W0, 0
	086 JumpIfEqual {127}
	087 Move W8, 0xCCCD
	088 Move W9, 0x9998
	089 NotImplemented "Instruction MOVK not yet implemented."
	090 NotImplemented "Instruction MOVK not yet implemented."
	091 NotImplemented "Instruction MADD not yet implemented."
	092 NotImplemented "Instruction EXTR not yet implemented."
	093 Move W20, W0
	094 Move W22, 7
	095 NotImplemented "Instruction CMP not yet implemented."
	096 Move W10, 0x6667
	097 Move W11, 0x9999
	098 NotImplemented "Instruction MOVK not yet implemented."
	099 NotImplemented "Instruction MOVK not yet implemented."
	100 NotImplemented "Instruction SMADDL not yet implemented."
	101 Move X13, X12
	102 ShiftRight X13, 63
	103 And X13, X13, 0x7FFFFFFF
	104 NotImplemented "Instruction SBFM not yet implemented."
	105 Add W20, W12, W13
	106 NotImplemented "Instruction MADD not yet implemented."
	107 NotImplemented "Instruction EXTR not yet implemented."
	108 NotImplemented "Instruction CMP not yet implemented."
	109 Subtract W22, W22, 1
	110 Move X0, [X24]
	111 Add W1, W22, 1
	112 Call 0x1C17D6C
	113 Compare X0, 0
	114 JumpIfEqual {175}
	115 Move W8, [X0+24]
	116 Move X21, X0
	117 Compare W8, 0
	118 JumpIfEqual {174}
	119 Move W8, 46
	120 NotImplemented "Instruction STRH not yet implemented."
	121 Move X0, [X23]
	122 Move W8, [X0+224]
	123 Compare W8, 0
	124 JumpIfEqual {136}
	125 Compare W22, 0
	126 JumpIfNotEqual {139}
	127 Move X20, [X31+48]
	128 Move X19, [X31+56]
	129 Move X22, [X31+32]
	130 Move X21, [X31+40]
	131 Move X24, [X31+16]
	132 Move X23, [X31+24]
	133 Move X30, [X31+64]
	134 Move X25, [X31+72]
	135 Return 
	136 Call 0x1C17DFC
	137 Compare W22, 0
	138 JumpIfEqual {161}
	139 Move W8, [X21+24]
	140 Move W9, 0x6667
	141 NotImplemented "Instruction MOVK not yet implemented."
	142 Move W10, 10
	143 NotImplemented "Instruction CMP not yet implemented."
	144 NotImplemented "Instruction SMADDL not yet implemented."
	145 Move X13, X12
	146 ShiftRight X13, 32
	147 And X13, X13, 0x7FFFFFFF
	148 Move X12, X12
	149 ShiftRight X12, 63
	150 And X12, X12, 0x7FFFFFFF
	151 Add W12, W12, W13
	152 Subtract W11, W22, 1
	153 NotImplemented "Instruction MSUB not yet implemented."
	154 Add W13, W13, 48
	155 Add X14, X21, W22
	156 Move W22, W11
	157 Move W20, W12
	158 NotImplemented "Instruction STRH not yet implemented."
	159 Compare W11, 0
	160 JumpIfNotEqual {143}
	161 Move X0, X19
	162 Move X1, X21
	163 Move X20, [X31+48]
	164 Move X19, [X31+56]
	165 Move X22, [X31+32]
	166 Move X21, [X31+40]
	167 Move X24, [X31+16]
	168 Move X23, [X31+24]
	169 Move X2, X31
	170 Move X30, [X31+64]
	171 Move X25, [X31+72]
	172 Call StringBuilder.Append, X0, X1
	173 Return 
	174 Call 0x1C17F28
	175 Call 0x1C17F20

Method: System.Void PrintZone(System.Text.StringBuilder sb)

Disassembly:
	0x03618834 CSET W8, NE
	0x03618838 CMP W22, W28
	0x0361883C ORR X26, X26, X8, 0x0
	0x03618840 B.CS 0x3618864
	0x03618844 LDR X9, [X19 + 0x20]
	0x03618848 CBNZ X9, 0x361880C
	0x0361884C BL 0x1C16F20
	0x03618850 LDR X21, [X19 + 0x38]
	0x03618854 MOV X23, X31
	0x03618858 B 0x3618FD0
	0x0361885C MOVZ W26, 0x1
	0x03618860 B 0x36188B4
	0x03618864 LDR X8, [X19 + 0x30]
	0x03618868 TBNZ X8, 0x14, 0x361887C
	0x0361886C B 0x36188B4
	0x03618870 MOV X26, X31
	0x03618874 MOV W22, W31
	0x03618878 TBZ X8, 0x14, 0x36188B4
	0x0361887C ADD X9, X27, W22, UXTW
	0x03618880 ADD W10, W9, 0x3
	0x03618884 CMP W10, W20, UXTH
	0x03618888 B.CS 0x36188B0
	0x0361888C ADD X10, X21, X9, 0x1, LSL
	0x03618890 LDRH W10, [X10 + 0x2]
	0x03618894 CMP W10, 0x2F
	0x03618898 B.NE 0x36188B0
	0x0361889C UBFM X9, X9, 0x3F, 0x3E
	0x036188A0 ADD X9, X21, W9, UXTW
	0x036188A4 LDRH W9, [X9 + 0x4]
	0x036188A8 CMP W9, 0x2F
	0x036188AC B.EQ 0x36188B4
	0x036188B0 ORR X26, X26, 0x1
	0x036188B4 TBZ X8, 0x15, 0x361891C
	0x036188B8 LDR X8, [X19 + 0x38]
	0x036188BC CBZ X8, 0x361884C
	0x036188C0 LDRH W9, [X8 + 0x2A]
	0x036188C4 ADD X2, X31, 0x8
	0x036188C8 MOVZ W4, 0x40
	0x036188CC MOV X0, X19
	0x036188D0 STRH W9, [X31 + 0x8]
	0x036188D4 LDRH W3, [X8 + 0x2C]
	0x036188D8 MOV X1, X21
	0x036188DC BL 0x3620708
	0x036188E0 ORN W10, W31, W0, 0x0
	0x036188E4 MOVZ W8, 0x11
	0x036188E8 AND W10, W10, 0x2
	0x036188EC LDRB W11, [X19 + 0x40]
	0x036188F0 MOVZ W9, 0x5B
	0x036188F4 AND W8, W0, W8, 0x0
	0x036188F8 ORR X10, X26, X10, 0x0
	0x036188FC AND W9, W0, W9, 0x0
	0x03618900 CMP W8, 0x1
	0x03618904 ORR X8, X10, 0xFF
	0x03618908 CSEL X8, X10, X8, EQ
	0x0361890C CMP W9, 0xA
	0x03618910 CCMP W11, 0x0, 0x4, EQ
	0x03618914 ORR X9, X8, 0xFFFFFFFFFF
	0x03618918 CSEL X26, X9, X8, NE
	0x0361891C LDR X8, [X19 + 0x38]
	0x03618920 CBZ X8, 0x361884C
	0x03618924 LDRH W21, [X8 + 0x30]
	0x03618928 ORR W25, W25, W23, 0x0
	0x0361892C STRH W21, [X31 + 0x8]
	0x03618930 STRH W21, [X31 + 0xC]
	0x03618934 TBZ X25, 0x0, 0x3618944
	0x03618938 LDR X23, [X19 + 0x10]
	0x0361893C CBNZ X23, 0x3618AE8
	0x03618940 B 0x3618AF4
	0x03618944 LDR X9, [X19 + 0x30]
	0x03618948 TBZ X9, 0x1B, 0x36189B4
	0x0361894C TBNZ X9, 0x1D, 0x361899C
	0x03618950 LDR X8, [X19 + 0x20]
	0x03618954 CBZ X8, 0x361884C
	0x03618958 ADRP X22, 0xADD000
	0x0361895C LDR X22, [X22 + 0xA28]
	0x03618960 LDR X20, [X8 + 0x20]
	0x03618964 LDR X0, [X22]
	0x03618968 LDR W9, [X0 + 0xE0]
	0x0361896C CBNZ W9, 0x3618978
	0x03618970 BL 0x1C16DFC
	0x03618974 LDR X0, [X22]
	0x03618978 LDR X8, [X0 + 0xB8]
	0x0361897C MOV X0, X20
	0x03618980 MOV X2, X31
	0x03618984 LDR X1, [X8 + 0x60]
	0x03618988 BL 0x321B938
	0x0361898C LDR X8, [X19 + 0x38]
	0x03618990 STR X0, [X19 + 0x10]
	0x03618994 CBNZ X8, 0x36189B8
	0x03618998 B 0x361884C
	0x0361899C ADRP X9, 0xADD000
	0x036189A0 LDR X9, [X9 + 0x278]
	0x036189A4 LDR X9, [X9]
	0x036189A8 LDR X9, [X9 + 0xB8]
	0x036189AC LDR X9, [X9]
	0x036189B0 STR X9, [X19 + 0x10]
	0x036189B4 LDR X0, [X19 + 0x10]
	0x036189B8 CBZ X0, 0x361884C
	0x036189BC LDRH W9, [X0 + 0x10]
	0x036189C0 STRH W9, [X8 + 0x30]
	0x036189C4 STRH W9, [X31 + 0x8]
	0x036189C8 LDR X20, [X19 + 0x18]
	0x036189CC CBZ X20, 0x361884C
	0x036189D0 LDR W22, [X20 + 0x10]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xDC9000
	007 Move X22, 0xB23000
	008 Move W8, [X21+1135]
	009 Move X22, [X22+3952]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xAE5000
	017 Move X0, [X0+2264]
	018 Call 0x1C17CF4
	019 Move X0, 0xB23000
	020 Move X0, [X0+3952]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X21+1135], W8
	024 Move X0, [X22]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Move W8, [X20+10]
	030 NotImplemented "Instruction CMP not yet implemented."
	031 NotImplemented "Instruction CMP not yet implemented."
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Compare X19, 0
	034 JumpIfEqual {120}
	035 Move X0, X19
	036 Move X20, [X31+32]
	037 Move X19, [X31+40]
	038 Move X22, [X31+16]
	039 Move X21, [X31+24]
	040 Move W1, 90
	041 Move X2, X31
	042 Move X30, [X31+48]
	043 Call StringBuilder.Append, X0, X1
	044 Return 
	045 Move X0, [X22]
	046 Move W8, [X0+224]
	047 Compare W8, 0
	048 JumpIfNotEqual {51}
	049 Call 0x1C17DFC
	050 Move X0, [X22]
	051 Move X9, 0xAE5000
	052 Move X8, [X0+184]
	053 Move X9, [X9+2264]
	054 Move W1, [X8+56]
	055 Move X0, [X9]
	056 Call 0x1C17D6C
	057 Compare X0, 0
	058 JumpIfEqual {120}
	059 Move W8, [X0+24]
	060 Move X21, X0
	061 Compare W8, 0
	062 JumpIfEqual {121}
	063 Move W8, 45
	064 Move X0, [X22]
	065 Move W8, [X0+224]
	066 Compare W8, 0
	067 JumpIfNotEqual {70}
	068 Call 0x1C17DFC
	069 Move X0, [X22]
	070 Move X9, 0xAE5000
	071 Move X8, [X0+184]
	072 Move X9, [X9+2264]
	073 Move W1, [X8+56]
	074 Move X0, [X9]
	075 Call 0x1C17D6C
	076 Compare X0, 0
	077 JumpIfEqual {120}
	078 Move W8, [X0+24]
	079 Move X21, X0
	080 Compare W8, 0
	081 JumpIfEqual {121}
	082 Move W8, 43
	083 NotImplemented "Instruction STRH not yet implemented."
	084 Move X8, [X22]
	085 Move W3, [X20+9]
	086 Move X1, X21
	087 Move X8, [X8+184]
	088 Move W2, [X8+44]
	089 Call XsdDateTime.ShortToCharArray, X0, X1, X2, X3
	090 Move X8, [X22]
	091 Move W10, [X21+24]
	092 Move X8, [X8+184]
	093 NotImplemented "Instruction LDRSW not yet implemented."
	094 NotImplemented "Instruction CMP not yet implemented."
	095 Add X9, X21, X9
	096 Move W10, 58
	097 NotImplemented "Instruction STRH not yet implemented."
	098 Move W2, [X8+52]
	099 Move W3, [X20+8]
	100 Move X1, X21
	101 Call XsdDateTime.ShortToCharArray, X0, X1, X2, X3
	102 Compare X19, 0
	103 JumpIfEqual {120}
	104 Move X0, X19
	105 Move X1, X21
	106 Move X20, [X31+32]
	107 Move X19, [X31+40]
	108 Move X22, [X31+16]
	109 Move X21, [X31+24]
	110 Move X2, X31
	111 Move X30, [X31+48]
	112 Call StringBuilder.Append, X0, X1
	113 Return 
	114 Move X20, [X31+32]
	115 Move X19, [X31+40]
	116 Move X22, [X31+16]
	117 Move X21, [X31+24]
	118 Move X30, [X31+48]
	119 Return 
	120 Call 0x1C17F20
	121 Call 0x1C17F28

Method: System.Void IntToCharArray(System.Char[] text, System.Int32 start, System.Int32 value, System.Int32 digits)

Disassembly:
	0x03618764 MOV W8, W28
	0x03618768 MOVZ W9, 0x1
	0x0361876C LSLV X8, X9, X8
	0x03618770 MOVZ X9, 0x2600
	0x03618774 MOVK X9, 0x1
	0x03618778 ANDS X31, X8, X9, 0x0
	0x0361877C B.EQ 0x36187E4
	0x03618780 CMP W27, W22, UXTH
	0x03618784 B.EQ 0x36187DC
	0x03618788 MOVZ X28, 0x2600
	0x0361878C MOVZ W20, 0x1
	0x03618790 MOVK X28, 0x1
	0x03618794 AND W8, W22, 0xFFFF
	0x03618798 LDR X0, [X26]
	0x0361879C SUB W22, W8, 0x1
	0x036187A0 UBFM W8, W22, 0x1F, 0x1E
	0x036187A4 AND X8, X8, 0x1FFFF
	0x036187A8 LDR W9, [X0 + 0xE0]
	0x036187AC LDRH W29, [X21, X8, LSL]
	0x036187B0 CBNZ W9, 0x36187B8
	0x036187B4 BL 0x1C16DFC
	0x036187B8 CMP W29, 0x20
	0x036187BC B.HI 0x36187DC
	0x036187C0 B.HI 0x36187DC
	0x036187C4 MOV W8, W29
	0x036187C8 LSLV X8, X20, X8

ISIL:
	001 Move [X31-16], X30
	002 Compare W4, 0
	003 JumpIfEqual {29}
	004 Compare X1, 0
	005 JumpIfEqual {32}
	006 Move W8, [X1+24]
	007 Move W10, 0x6667
	008 Subtract W9, W2, 1
	009 NotImplemented "Instruction MOVK not yet implemented."
	010 Move W11, 10
	011 Add W12, W9, W4
	012 NotImplemented "Instruction CMP not yet implemented."
	013 NotImplemented "Instruction SMADDL not yet implemented."
	014 Move X14, X13
	015 ShiftRight X14, 32
	016 And X14, X14, 0x7FFFFFFF
	017 Move X13, X13
	018 ShiftRight X13, 63
	019 And X13, X13, 0x7FFFFFFF
	020 Add W13, W13, W14
	021 NotImplemented "Instruction MSUB not yet implemented."
	022 Subtract W4, W4, 1
	023 Add W14, W14, 48
	024 Add X12, X1, W12
	025 Move W3, W13
	026 NotImplemented "Instruction STRH not yet implemented."
	027 Compare W4, 0
	028 JumpIfNotEqual {11}
	029 Move X30, [X31+16]
	030 Return 
	031 Call 0x1C17F28
	032 Call 0x1C17F20

Method: System.Void ShortToCharArray(System.Char[] text, System.Int32 start, System.Int32 value)

Disassembly:
	0x036187CC ANDS X31, X8, X28, 0x0
	0x036187D0 B.EQ 0x36187DC
	0x036187D4 CMP W27, W22, UXTH
	0x036187D8 B.NE 0x3618794
	0x036187DC AND W8, W22, 0xFFFF
	0x036187E0 ADD W20, W8, 0x1
	0x036187E4 LDR X8, [X19 + 0x30]
	0x036187E8 TBNZ X8, 0x1D, 0x361885C
	0x036187EC LDR X9, [X19 + 0x20]
	0x036187F0 CBZ X9, 0x361884C
	0x036187F4 LDR X10, [X9 + 0x20]
	0x036187F8 CBZ X10, 0x361884C
	0x036187FC LDRH W28, [X10 + 0x10]
	0x03618800 CBZ W28, 0x3618870
	0x03618804 MOV X26, X31
	0x03618808 MOV W22, W31
	0x0361880C LDR X0, [X9 + 0x20]
	0x03618810 CBZ X0, 0x361884C
	0x03618814 MOV W1, W22
	0x03618818 MOV X2, X31
	0x0361881C BL 0x3222A1C
	0x03618820 ADD X8, X27, W22, UXTW
	0x03618824 LDRH W8, [X21, X8, LSL #1]
	0x03618828 ADD W9, W22, 0x1
	0x0361882C AND W22, W9, 0xFFFF
	0x03618830 CMP W8, W0, UXTH

ISIL:
	001 Move [X31-16], X30
	002 Compare X1, 0
	003 JumpIfEqual {29}
	004 Move W8, [X1+24]
	005 NotImplemented "Instruction CMP not yet implemented."
	006 Move W10, 0x6667
	007 NotImplemented "Instruction MOVK not yet implemented."
	008 NotImplemented "Instruction SMADDL not yet implemented."
	009 Move X12, X10
	010 ShiftRight X12, 32
	011 And X12, X12, 0x7FFFFFFF
	012 Move X10, X10
	013 ShiftRight X10, 63
	014 And X10, X10, 0x7FFFFFFF
	015 Add W9, W2, 1
	016 Add W10, W10, W12
	017 Add X11, X1, W2
	018 Add W12, W10, 48
	019 NotImplemented "Instruction CMP not yet implemented."
	020 NotImplemented "Instruction STRH not yet implemented."
	021 Move W8, 10
	022 NotImplemented "Instruction MSUB not yet implemented."
	023 Add W8, W8, 48
	024 Add X9, X1, W9
	025 NotImplemented "Instruction STRH not yet implemented."
	026 Move X30, [X31+16]
	027 Return 
	028 Call 0x1C17F28
	029 Call 0x1C17F20

Method: System.Void .cctor()

Disassembly:
	0x036189D4 ANDS W31, W24, 0x60
	0x036189D8 MOVZ W4, 0xFFFF
	0x036189DC B.EQ 0x3618A40
	0x036189E0 LDR X8, [X19 + 0x30]
	0x036189E4 TBNZ X8, 0x1D, 0x3618A40
	0x036189E8 LDR X0, [X19 + 0x20]
	0x036189EC CBZ X0, 0x361884C
	0x036189F0 MOVZ W1, 0x20
	0x036189F4 MOV X2, X31
	0x036189F8 BL 0x3629044
	0x036189FC TBZ X0, 0x0, 0x3618A08
	0x03618A00 MOVZ W4, 0x3F
	0x03618A04 B 0x3618A40
	0x03618A08 MOV W23, W0
	0x03618A0C LDR X0, [X19 + 0x20]
	0x03618A10 CBZ X0, 0x361884C
	0x03618A14 MOVZ W1, 0x40
	0x03618A18 MOV X2, X31
	0x03618A1C BL 0x3629044
	0x03618A20 ANDS W31, W0, 0x1
	0x03618A24 MOVN W8, 0x1
	0x03618A28 MOVZ W9, 0x23
	0x03618A2C CSEL W4, W9, W8, NE
	0x03618A30 CMP X19, 0x0
	0x03618A34 CSET W8, NE
	0x03618A38 BIC W8, W8, W23, 0x0
	0x03618A3C TBZ X8, 0x0, 0x361884C
	0x03618A40 ADD X2, X31, 0xC
	0x03618A44 MOV X0, X19
	0x03618A48 MOV X1, X20
	0x03618A4C MOV W3, W22
	0x03618A50 BL 0x3622650
	0x03618A54 LDRH W22, [X31 + 0xC]
	0x03618A58 LDR X1, [X19 + 0x18]
	0x03618A5C MOVZ W4, 0x10
	0x03618A60 MOV W2, W21
	0x03618A64 MOV W3, W22
	0x03618A68 BL 0x36226A4
	0x03618A6C ADRP X8, 0xB23000
	0x03618A70 LDR X8, [X8 + 0x48]
	0x03618A74 MOV X20, X0
	0x03618A78 LDR X8, [X8]
	0x03618A7C LDR W9, [X8 + 0xE0]
	0x03618A80 CBNZ W9, 0x3618A8C
	0x03618A84 MOV X0, X8
	0x03618A88 BL 0x1C16DFC
	0x03618A8C MOV X0, X31
	0x03618A90 BL 0x362BC9C
	0x03618A94 LDR X21, [X19 + 0x10]
	0x03618A98 TBZ X0, 0x0, 0x3618AC4
	0x03618A9C CBZ X20, 0x3619054
	0x03618AA0 MOVZ W1, 0x1
	0x03618AA4 MOV X0, X20
	0x03618AA8 MOV X2, X31
	0x03618AAC BL 0x322E3D0
	0x03618AB0 MOV X1, X0
	0x03618AB4 MOV X0, X21
	0x03618AB8 MOV X2, X31
	0x03618ABC BL 0x321B938
	0x03618AC0 B 0x3618AD4
	0x03618AC4 MOV X0, X21
	0x03618AC8 MOV X1, X20
	0x03618ACC MOV X2, X31
	0x03618AD0 BL 0x321B938
	0x03618AD4 MOV X23, X0
	0x03618AD8 STR X0, [X19 + 0x10]
	0x03618ADC CBZ X0, 0x361884C
	0x03618AE0 LDR W20, [X23 + 0x10]
	0x03618AE4 MOV W21, W22
	0x03618AE8 MOV X0, X31
	0x03618AEC BL 0x32C1424
	0x03618AF0 ADD X23, X23, W0, SXTW
	0x03618AF4 ANDS W31, W24, 0x60
	0x03618AF8 MOVZ W4, 0xFFFF
	0x03618AFC B.EQ 0x3618B40
	0x03618B00 LDR X8, [X19 + 0x30]
	0x03618B04 TBNZ X8, 0x1D, 0x3618B40
	0x03618B08 TBNZ X24, 0x5, 0x3618B3C
	0x03618B0C LDR X0, [X19 + 0x20]
	0x03618B10 CBZ X0, 0x361884C
	0x03618B14 MOVZ W1, 0x40
	0x03618B18 MOV X2, X31
	0x03618B1C BL 0x3629044
	0x03618B20 ANDS W31, W0, 0x1
	0x03618B24 MOVN W8, 0x1
	0x03618B28 MOVZ W9, 0x23
	0x03618B2C CSEL W4, W9, W8, NE
	0x03618B30 CBZ X19, 0x361884C
	0x03618B34 TBZ X24, 0x5, 0x3618B40
	0x03618B38 B 0x361884C
	0x03618B3C MOVZ W4, 0x3F
	0x03618B40 ADD X2, X31, 0x8
	0x03618B44 MOV X0, X19
	0x03618B48 MOV X1, X23
	0x03618B4C MOV W3, W20
	0x03618B50 BL 0x3620708
	0x03618B54 LDR X8, [X19 + 0x30]
	0x03618B58 MOV W22, W0
	0x03618B5C TBZ X24, 0x15, 0x3618B90
	0x03618B60 TBZ X8, 0x14, 0x3618B90
	0x03618B64 LDR X9, [X19 + 0x38]
	0x03618B68 CBZ X9, 0x361884C
	0x03618B6C LDRH W9, [X9 + 0x30]
	0x03618B70 CMP W9, W20, UXTH
	0x03618B74 B.EQ 0x3618B8C
	0x03618B78 LDRH W9, [X23, X9, LSL #1]
	0x03618B7C CMP W9, 0x2F
	0x03618B80 B.EQ 0x3618B90
	0x03618B84 CMP W9, 0x5C
	0x03618B88 B.EQ 0x3618B90
	0x03618B8C ORR X26, X26, 0x7FFF
	0x03618B90 TBNZ X8, 0x1B, 0x3618BCC
	0x03618B94 TBNZ X8, 0x14, 0x3618BAC
	0x03618B98 ANDS W8, W22, 0x10
	0x03618B9C ORR X9, X26, 0x7FF
	0x03618BA0 UBFM W8, W8, 0x4, 0x1F
	0x03618BA4 CSEL X9, X26, X9, EQ
	0x03618BA8 B 0x3618C4C
	0x03618BAC ANDS W31, W24, 0xC00000
	0x03618BB0 B.NE 0x3618BCC
	0x03618BB4 LDR X0, [X19 + 0x20]
	0x03618BB8 CBZ X0, 0x361884C
	0x03618BBC MOVZ W1, 0x2000000
	0x03618BC0 MOV X2, X31
	0x03618BC4 BL 0x3629044
	0x03618BC8 TBZ X0, 0x0, 0x3618B98
	0x03618BCC TBNZ X22, 0x7, 0x3618BD8
	0x03618BD0 MOV W0, W31
	0x03618BD4 B 0x3618BFC
	0x03618BD8 LDR X0, [X19 + 0x20]
	0x03618BDC CBZ X0, 0x361884C
	0x03618BE0 MOVZ W1, 0x2000000
	0x03618BE4 MOV X2, X31
	0x03618BE8 BL 0x3629044
	0x03618BEC MOVZ W8, 0x410
	0x03618BF0 ORR X8, X26, X8, 0x0
	0x03618BF4 ANDS W31, W0, 0x1
	0x03618BF8 CSEL X26, X8, X26, NE
	0x03618BFC ANDS W31, W24, 0x400000
	0x03618C00 MOVZ W8, 0x410
	0x03618C04 CSET W9, EQ
	0x03618C08 ANDS W31, W22, 0x10
	0x03618C0C ORR X10, X26, X8, 0x0
	0x03618C10 CSET W8, EQ
	0x03618C14 ORR W8, W9, W8, 0x0
	0x03618C18 EOR W9, W8, 0x1
	0x03618C1C CMP W8, 0x0
	0x03618C20 ORR W8, W0, W9, 0x0
	0x03618C24 CSEL X9, X26, X10, NE
	0x03618C28 TBZ X24, 0x17, 0x3618C40
	0x03618C2C ANDS X31, X9, 0x7FF
	0x03618C30 AND W10, W22, 0x4
	0x03618C34 CCMP W10, 0x0, 0x0, EQ
	0x03618C38 ORR X10, X9, 0x3FFF
	0x03618C3C CSEL X9, X9, X10, EQ
	0x03618C40 ORR X10, X9, 0xFFFF
	0x03618C44 ANDS W31, W22, 0x10
	0x03618C48 CSEL X9, X9, X10, EQ
	0x03618C4C LDR X11, [X19 + 0x30]
	0x03618C50 AND X10, X11, 0x3FFFFFFF
	0x03618C54 TBNZ X22, 0x1, 0x3618C74
	0x03618C58 CBNZ X10, 0x3618C68
	0x03618C5C ORR X9, X9, 0x1F
	0x03618C60 MOVZ W8, 0x1
	0x03618C64 B 0x3618C74
	0x03618C68 TBNZ X22, 0x5, 0x3618C5C
	0x03618C6C TBNZ X11, 0x13, 0x3618C5C
	0x03618C70 MOVZ W10, 0x1
	0x03618C74 CMP X10, 0x0
	0x03618C78 MOVZ W10, 0x21
	0x03618C7C AND W10, W22, W10, 0x0
	0x03618C80 AND W11, W22, 0xFFFFFFFE
	0x03618C84 LDRB W12, [X19 + 0x40]
	0x03618C88 CCMP W10, 0x0, 0x4, NE
	0x03618C8C CSEL W10, W22, W11, EQ
	0x03618C90 ORR X11, X9, 0x7FF
	0x03618C94 ANDS W31, W10, 0x1
	0x03618C98 CSEL X23, X11, X9, EQ
	0x03618C9C CBZ W12, 0x3618CC0
	0x03618CA0 MOVZ W9, 0x4B
	0x03618CA4 AND W9, W10, W9, 0x0
	0x03618CA8 CMP W9, 0xA
	0x03618CAC EOR W8, W8, 0x1
	0x03618CB0 CSET W9, EQ
	0x03618CB4 ORR X10, X23, 0x1FFFFFFFFFF
	0x03618CB8 ANDS W31, W9, W8, 0x0
	0x03618CBC CSEL X23, X10, X23, NE
	0x03618CC0 TBNZ X25, 0x0, 0x3618DB0
	0x03618CC4 LDR X0, [X19 + 0x18]
	0x03618CC8 CBZ X0, 0x361884C
	0x03618CCC LDR W8, [X0 + 0x10]
	0x03618CD0 CMP W8, W21
	0x03618CD4 B.LE 0x3618DB0
	0x03618CD8 MOV W1, W21
	0x03618CDC MOV X2, X31
	0x03618CE0 BL 0x3222A1C
	0x03618CE4 AND W8, W0, 0xFFFF
	0x03618CE8 CMP W8, 0x3F
	0x03618CEC B.NE 0x3618DB0
	0x03618CF0 ADD W8, W21, 0x1
	0x03618CF4 STRH W8, [X31 + 0xC]
	0x03618CF8 LDR X1, [X19 + 0x18]
	0x03618CFC CBZ X1, 0x361884C
	0x03618D00 LDR W3, [X1 + 0x10]
	0x03618D04 ANDS W31, W24, 0x40
	0x03618D08 MOVZ W8, 0x23
	0x03618D0C MOVN W9, 0x1
	0x03618D10 CSEL W4, W9, W8, EQ
	0x03618D14 ADD X2, X31, 0xC
	0x03618D18 MOV X0, X19
	0x03618D1C BL 0x3622650
	0x03618D20 LDRH W22, [X31 + 0xC]
	0x03618D24 LDR X1, [X19 + 0x18]
	0x03618D28 MOVZ W4, 0x20
	0x03618D2C MOV W2, W21
	0x03618D30 MOV W3, W22
	0x03618D34 BL 0x36226A4
	0x03618D38 ADRP X8, 0xB23000
	0x03618D3C LDR X8, [X8 + 0x48]
	0x03618D40 MOV X20, X0
	0x03618D44 LDR X8, [X8]
	0x03618D48 LDR W9, [X8 + 0xE0]
	0x03618D4C CBNZ W9, 0x3618D58
	0x03618D50 MOV X0, X8
	0x03618D54 BL 0x1C16DFC
	0x03618D58 MOV X0, X31
	0x03618D5C BL 0x362BC9C
	0x03618D60 LDR X21, [X19 + 0x10]
	0x03618D64 TBZ X0, 0x0, 0x3618D90
	0x03618D68 CBZ X20, 0x3619058
	0x03618D6C MOVZ W1, 0x1
	0x03618D70 MOV X0, X20
	0x03618D74 MOV X2, X31
	0x03618D78 BL 0x322E3D0
	0x03618D7C MOV X1, X0
	0x03618D80 MOV X0, X21

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0xDC9000
	005 Move X20, 0xB23000
	006 Move W8, [X19+1136]
	007 Move X20, [X20+4008]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {89}
	012 Move X0, 0xB23000
	013 Move X0, [X0+4016]
	014 Call 0x1C17CF4
	015 Move X0, 0xB23000
	016 Move X0, [X0+4024]
	017 Call 0x1C17CF4
	018 Move X0, 0xB23000
	019 Move X0, [X0+3952]
	020 Call 0x1C17CF4
	021 Move X0, 0xB23000
	022 Move X0, [X0+4032]
	023 Call 0x1C17CF4
	024 Move X0, 0xB23000
	025 Move X0, [X0+4040]
	026 Call 0x1C17CF4
	027 Move X0, 0xB11000
	028 Move X0, [X0+2840]
	029 Call 0x1C17CF4
	030 Move X0, 0xB23000
	031 Move X0, [X0+4048]
	032 Call 0x1C17CF4
	033 Move X0, 0xB23000
	034 Move X0, [X0+4056]
	035 Call 0x1C17CF4
	036 Move X0, 0xADD000
	037 Move X0, [X0+680]
	038 Call 0x1C17CF4
	039 Move X0, 0xB23000
	040 Move X0, [X0+4064]
	041 Call 0x1C17CF4
	042 Move X0, 0xB23000
	043 Move X0, [X0+4072]
	044 Call 0x1C17CF4
	045 Move X0, 0xB07000
	046 Move X0, [X0+1400]
	047 Call 0x1C17CF4
	048 Move X0, 0xB11000
	049 Move X0, [X0+1712]
	050 Call 0x1C17CF4
	051 Move X0, 0xB23000
	052 Move X0, [X0+4080]
	053 Call 0x1C17CF4
	054 Move X0, 0xB11000
	055 Move X0, [X0+2848]
	056 Call 0x1C17CF4
	057 Move X0, 0xB23000
	058 Move X0, [X0+4088]
	059 Call 0x1C17CF4
	060 Move X0, 0xB24000
	061 Move X0, [X0]
	062 Call 0x1C17CF4
	063 Move X0, 0xB24000
	064 Move X0, [X0+8]
	065 Call 0x1C17CF4
	066 Move X0, 0xB24000
	067 Move X0, [X0+16]
	068 Call 0x1C17CF4
	069 Move X0, 0xB24000
	070 Move X0, [X0+24]
	071 Call 0x1C17CF4
	072 Move X0, 0xB24000
	073 Move X0, [X0+32]
	074 Call 0x1C17CF4
	075 Move X0, 0xB24000
	076 Move X0, [X0+40]
	077 Call 0x1C17CF4
	078 Move X0, 0xB23000
	079 Move X0, [X0+4008]
	080 Call 0x1C17CF4
	081 Move X0, 0xB24000
	082 Move X0, [X0+48]
	083 Call 0x1C17CF4
	084 Move X0, 0xB24000
	085 Move X0, [X0+56]
	086 Call 0x1C17CF4
	087 Move W8, 1
	088 Move [X19+1136], W8
	089 Move X8, [X20]
	090 Compare X8, 0
	091 JumpIfEqual {263}
	092 Move X20, 0xB23000
	093 Move X20, [X20+3952]
	094 Move W10, [X8+16]
	095 Move X9, [X20]
	096 Move X8, [X9+184]
	097 Move X9, 0xB24000
	098 Move X9, [X9+8]
	099 Move [X8], W10
	100 Move X9, [X9]
	101 Compare X9, 0
	102 JumpIfEqual {263}
	103 Move W9, [X9+16]
	104 Move X10, 0xB24000
	105 Move X10, [X10+48]
	106 Move [X8+4], W9
	107 Move X9, [X10]
	108 Compare X9, 0
	109 JumpIfEqual {263}
	110 Move W9, [X9+16]
	111 Move X10, 0xB24000
	112 Move X10, [X10+32]
	113 Move [X8+8], W9
	114 Move X9, [X10]
	115 Compare X9, 0
	116 JumpIfEqual {263}
	117 Move W9, [X9+16]
	118 Move X10, 0xB11000
	119 Move X10, [X10+1712]
	120 Move [X8+12], W9
	121 Move X9, [X10]
	122 Compare X9, 0
	123 JumpIfEqual {263}
	124 Move W9, [X9+16]
	125 Move X10, 0xB23000
	126 Move X10, [X10+4080]
	127 Move [X8+16], W9
	128 Move X9, [X10]
	129 Compare X9, 0
	130 JumpIfEqual {263}
	131 Move W9, [X9+16]
	132 Move X10, 0xB23000
	133 Move X10, [X10+4072]
	134 Move [X8+20], W9
	135 Move X9, [X10]
	136 Compare X9, 0
	137 JumpIfEqual {263}
	138 Move W9, [X9+16]
	139 Move X10, 0xB23000
	140 Move X10, [X10+4064]
	141 Move [X8+24], W9
	142 Move X9, [X10]
	143 Compare X9, 0
	144 JumpIfEqual {263}
	145 Move W9, [X9+16]
	146 Move X10, 0xB11000
	147 Move X10, [X10+2840]
	148 Move [X8+28], W9
	149 Move X9, [X10]
	150 Compare X9, 0
	151 JumpIfEqual {263}
	152 Move W9, [X9+16]
	153 Move X10, 0xB23000
	154 Move X10, [X10+4032]
	155 Move [X8+32], W9
	156 Move X9, [X10]
	157 Compare X9, 0
	158 JumpIfEqual {263}
	159 Move W9, [X9+16]
	160 Move X10, 0xB11000
	161 Move X10, [X10+2848]
	162 Move [X8+36], W9
	163 Move X9, [X10]
	164 Compare X9, 0
	165 JumpIfEqual {263}
	166 Move W9, [X9+16]
	167 Move X10, 0xADD000
	168 Move X10, [X10+680]
	169 Move [X8+40], W9
	170 Move X9, [X10]
	171 Compare X9, 0
	172 JumpIfEqual {263}
	173 Move W9, [X9+16]
	174 Move X10, 0xB24000
	175 Move X10, [X10+24]
	176 Move [X8+44], W9
	177 Move X9, [X10]
	178 Compare X9, 0
	179 JumpIfEqual {263}
	180 Move W9, [X9+16]
	181 Move X10, 0xB24000
	182 Move X10, [X10+40]
	183 Move [X8+48], W9
	184 Move X9, [X10]
	185 Compare X9, 0
	186 JumpIfEqual {263}
	187 Move W9, [X9+16]
	188 Move X10, 0xB23000
	189 Move X10, [X10+4048]
	190 Move [X8+52], W9
	191 Move X9, [X10]
	192 Compare X9, 0
	193 JumpIfEqual {263}
	194 Move W9, [X9+16]
	195 Move X10, 0xB07000
	196 Move X10, [X10+1400]
	197 Move [X8+56], W9
	198 Move X9, [X10]
	199 Compare X9, 0
	200 JumpIfEqual {263}
	201 Move W9, [X9+16]
	202 Move X10, 0xB24000
	203 Move X10, [X10+56]
	204 Move [X8+60], W9
	205 Move X9, [X10]
	206 Compare X9, 0
	207 JumpIfEqual {263}
	208 Move W9, [X9+16]
	209 Move X10, 0xB24000
	210 Move X10, [X10+16]
	211 Move [X8+64], W9
	212 Move X9, [X10]
	213 Compare X9, 0
	214 JumpIfEqual {263}
	215 Move W9, [X9+16]
	216 Move X10, 0xB23000
	217 Move X10, [X10+4088]
	218 Move [X8+68], W9
	219 Move X9, [X10]
	220 Compare X9, 0
	221 JumpIfEqual {263}
	222 Move W9, [X9+16]
	223 Move X10, 0xB23000
	224 Move X10, [X10+4056]
	225 Move [X8+72], W9
	226 Move X9, [X10]
	227 Compare X9, 0
	228 JumpIfEqual {263}
	229 Move W9, [X9+16]
	230 Move X10, 0xB23000
	231 Move X10, [X10+4040]
	232 Move [X8+76], W9
	233 Move X9, [X10]
	234 Compare X9, 0
	235 JumpIfEqual {263}
	236 Move W9, [X9+16]
	237 Move X10, 0xB24000
	238 Move X10, [X10]
	239 Move [X8+80], W9
	240 Move X9, [X10]
	241 Compare X9, 0
	242 JumpIfEqual {263}
	243 Move W9, [X9+16]
	244 Move X10, 0xB23000
	245 Move X10, [X10+4024]
	246 Move X19, 0xB23000
	247 Move [X8+84], W9
	248 Move W1, 8
	249 Move X0, [X10]
	250 Move X19, [X19+4016]
	251 Call 0x1C17D6C
	252 Move X1, [X19]
	253 Move X2, X31
	254 Move X19, X0
	255 Call RuntimeHelpers.InitializeArray, X0, X1
	256 Move X8, [X20]
	257 Move X8, [X8+184]
	258 Move [X8+88], X19
	259 Move X20, [X31+16]
	260 Move X19, [X31+24]
	261 Move X30, [X31+32]
	262 Return 
	263 Call 0x1C17F20

