Type: Satori.RpcStatus

Method: System.Int32 get_Code()

Disassembly:
	0x035973D0 BL 0x32C4770
	0x035973D4 LDUR V0, [X31 + 0x8]

ISIL:
	001 Move W0, [X0+16]
	002 Return X0

Method: System.Void set_Code(System.Int32 value)

Disassembly:
	0x035973D8 LDR X9, [X31 + 0x18]
	0x035973DC LDR X2, [X24]

ISIL:
	001 Move [X0+16], W1
	002 Return 

Method: System.Collections.Generic.IEnumerable`1<Satori.IProtobufAny> get_Details()

Disassembly:
	0x035973E0 ADD X8, X31, 0x20
	0x035973E4 STP X21, X20, [X31 + 0x58]
	0x035973E8 ORR X20, X8, 0xF
	0x035973EC MOVN W10, 0x0
	0x035973F0 ADD X1, X31, 0x20
	0x035973F4 MOV X0, X20
	0x035973F8 STP X23, X22, [X31 + 0x48]
	0x035973FC STUR V0, [X31 + 0x28]
	0x03597400 STP X9, X19, [X31 + 0x38]
	0x03597404 STR W10, [X31 + 0x20]
	0x03597408 BL 0x2190AB8
	0x0359740C MOV X0, X20
	0x03597410 MOV X1, X31
	0x03597414 BL 0x32C47F8
	0x03597418 LDP X20, X19, [X31 + 0xA0]
	0x0359741C LDP X22, X21, [X31 + 0x90]
	0x03597420 LDP X24, X23, [X31 + 0x80]
	0x03597424 LDP X30, X25, [X31 + 0x70]
	0x03597428 ADD X31, X31, 0xB0
	0x0359742C RET
	0x03597430 SUB X31, X31, 0xD0
	0x03597434 STR X30, [X31 + 0x80]
	0x03597438 STP X26, X25, [X31 + 0x90]
	0x0359743C STP X24, X23, [X31 + 0xA0]
	0x03597440 STP X22, X21, [X31 + 0xB0]
	0x03597444 STP X20, X19, [X31 + 0xC0]
	0x03597448 ADRP X26, 0xE48000
	0x0359744C ADRP X25, 0xB5F000
	0x03597450 LDRB W8, [X26 + 0xFC0]
	0x03597454 LDR X25, [X25 + 0x280]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xE49000
	005 Move W8, [X20+4017]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0xBA0000
	012 Move X0, [X0+3872]
	013 Call 0x1C17CF4
	014 Move X0, 0xBA0000
	015 Move X0, [X0+3880]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+4017], W8
	019 Move X19, [X19+24]
	020 Compare X19, 0
	021 JumpIfNotEqual {32}
	022 Move X8, 0xBA0000
	023 Move X8, [X8+3880]
	024 Move X0, [X8]
	025 Call 0x1C17F10
	026 Move X8, 0xBA0000
	027 Move X8, [X8+3872]
	028 Move W1, W31
	029 Move X19, X0
	030 Move X2, [X8]
	031 Call List`1<Object>..ctor, X0, X1
	032 Move X0, X19
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move X30, [X31+32]
	036 Return X0

Method: System.Collections.Generic.List`1<Satori.ProtobufAny> get__details()

Disassembly:
	0x03597458 MOV X20, X5
	0x0359745C MOV X21, X4

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void set__details(System.Collections.Generic.List`1<Satori.ProtobufAny> value)

Disassembly:
	0x03597460 MOV X22, X3
	0x03597464 MOV X19, X2

ISIL:
	001 Move [X0+24], X1
	002 Return 

Method: System.String get_Message()

Disassembly:
	0x03597468 MOV X23, X1
	0x0359746C MOV X24, X0

ISIL:
	001 Move X0, [X0+32]
	002 Return X0

Method: System.Void set_Message(System.String value)

Disassembly:
	0x03597470 TBNZ X8, 0x0, 0x3597494
	0x03597474 ADRP X0, 0xBA0000

ISIL:
	001 Move [X0+32], X1
	002 Return 

Method: System.String ToString()

Disassembly:
	0x03597478 LDR X0, [X0 + 0x18]
	0x0359747C BL 0x1C16CF4
	0x03597480 ADRP X0, 0xB5F000
	0x03597484 LDR X0, [X0 + 0x280]
	0x03597488 BL 0x1C16CF4
	0x0359748C MOVZ W8, 0x1
	0x03597490 STRB W8, [X26 + 0xFC0]
	0x03597494 LDR X0, [X25]
	0x03597498 MOVI V0.2D, 0x0
	0x0359749C STR X31, [X31 + 0x70]
	0x035974A0 STP V0, V0, [X31 + 0x50]
	0x035974A4 STP V0, V0, [X31 + 0x30]
	0x035974A8 STR V0, [X31 + 0x2]
	0x035974AC ADRP X25, 0xBA0000
	0x035974B0 LDR W8, [X0 + 0xE0]
	0x035974B4 LDR X25, [X25 + 0x18]
	0x035974B8 CBNZ W8, 0x35974C0
	0x035974BC BL 0x1C16DFC
	0x035974C0 ADD X8, X31, 0x8
	0x035974C4 MOV X0, X31
	0x035974C8 BL 0x32C4770
	0x035974CC LDUR V0, [X31 + 0x8]
	0x035974D0 LDR X9, [X31 + 0x18]
	0x035974D4 LDR X2, [X25]
	0x035974D8 ADD X8, X31, 0x20
	0x035974DC STR X20, [X31 + 0x68]
	0x035974E0 ORR X20, X8, 0xF
	0x035974E4 MOVN W10, 0x0
	0x035974E8 ADD X1, X31, 0x20
	0x035974EC MOV X0, X20
	0x035974F0 STP X22, X24, [X31 + 0x48]
	0x035974F4 STP X23, X21, [X31 + 0x58]
	0x035974F8 STUR V0, [X31 + 0x28]
	0x035974FC STP X9, X19, [X31 + 0x38]
	0x03597500 STR W10, [X31 + 0x20]
	0x03597504 BL 0x2190EB8
	0x03597508 MOV X0, X20
	0x0359750C MOV X1, X31
	0x03597510 BL 0x32C47F8
	0x03597514 LDP X20, X19, [X31 + 0xC0]
	0x03597518 LDP X22, X21, [X31 + 0xB0]
	0x0359751C LDP X24, X23, [X31 + 0xA0]
	0x03597520 LDP X26, X25, [X31 + 0x90]
	0x03597524 LDR X30, [X31 + 0x80]
	0x03597528 ADD X31, X31, 0xD0
	0x0359752C RET
	0x03597530 SUB X31, X31, 0x90
	0x03597534 STP X30, X25, [X31 + 0x50]
	0x03597538 STP X24, X23, [X31 + 0x60]
	0x0359753C STP X22, X21, [X31 + 0x70]
	0x03597540 STP X20, X19, [X31 + 0x80]
	0x03597544 ADRP X24, 0xE48000
	0x03597548 ADRP X23, 0xBA0000
	0x0359754C LDRB W8, [X24 + 0xFC1]
	0x03597550 LDR X23, [X23 + 0x20]
	0x03597554 MOV X19, X3
	0x03597558 MOV X20, X2
	0x0359755C MOV X21, X1
	0x03597560 MOV X22, X0
	0x03597564 TBNZ X8, 0x0, 0x35975A0
	0x03597568 ADRP X0, 0xBA0000
	0x0359756C LDR X0, [X0 + 0x28]
	0x03597570 BL 0x1C16CF4
	0x03597574 ADRP X0, 0xBA0000
	0x03597578 LDR X0, [X0 + 0x30]
	0x0359757C BL 0x1C16CF4
	0x03597580 ADRP X0, 0xBA0000
	0x03597584 LDR X0, [X0 + 0x38]
	0x03597588 BL 0x1C16CF4
	0x0359758C ADRP X0, 0xBA0000
	0x03597590 LDR X0, [X0 + 0x20]
	0x03597594 BL 0x1C16CF4
	0x03597598 MOVZ W8, 0x1
	0x0359759C STRB W8, [X24 + 0xFC1]
	0x035975A0 LDR X0, [X23]
	0x035975A4 MOVI V0.2D, 0x0
	0x035975A8 STR X31, [X31 + 0x40]
	0x035975AC STP V0, V0, [X31 + 0x20]
	0x035975B0 STP V0, V0, [X31]
	0x035975B4 ADRP X23, 0xBA0000
	0x035975B8 ADRP X25, 0xBA0000
	0x035975BC ADRP X24, 0xBA0000
	0x035975C0 LDR W8, [X0 + 0xE0]
	0x035975C4 LDR X23, [X23 + 0x28]
	0x035975C8 LDR X25, [X25 + 0x30]
	0x035975CC LDR X24, [X24 + 0x38]
	0x035975D0 CBNZ W8, 0x35975D8
	0x035975D4 BL 0x1C16DFC
	0x035975D8 LDR X0, [X23]
	0x035975DC ADD X8, X31, 0x0
	0x035975E0 ORR X23, X8, 0xF
	0x035975E4 MOV X8, X23
	0x035975E8 BL 0x263221C
	0x035975EC LDR X2, [X25]
	0x035975F0 MOVN W8, 0x0
	0x035975F4 ADD X1, X31, 0x0
	0x035975F8 MOV X0, X23
	0x035975FC STP X22, X21, [X31 + 0x20]
	0x03597600 STP X20, X19, [X31 + 0x30]
	0x03597604 STR W8, [X31]
	0x03597608 BL 0x1FCC214
	0x0359760C LDR X1, [X24]
	0x03597610 MOV X0, X23
	0x03597614 BL 0x2632230
	0x03597618 LDP X20, X19, [X31 + 0x80]
	0x0359761C LDP X22, X21, [X31 + 0x70]
	0x03597620 LDP X24, X23, [X31 + 0x60]
	0x03597624 LDP X30, X25, [X31 + 0x50]
	0x03597628 ADD X31, X31, 0x90
	0x0359762C RET
	0x03597630 SUB X31, X31, 0xB0
	0x03597634 STP X30, X25, [X31 + 0x70]
	0x03597638 STP X24, X23, [X31 + 0x80]
	0x0359763C STP X22, X21, [X31 + 0x90]
	0x03597640 STP X20, X19, [X31 + 0xA0]
	0x03597644 ADRP X25, 0xE48000
	0x03597648 ADRP X24, 0xB5F000
	0x0359764C LDRB W8, [X25 + 0xFC2]
	0x03597650 LDR X24, [X24 + 0x280]
	0x03597654 MOV X20, X4
	0x03597658 MOV X21, X3
	0x0359765C MOV X19, X2
	0x03597660 MOV X22, X1
	0x03597664 MOV X23, X0
	0x03597668 TBNZ X8, 0x0, 0x359768C
	0x0359766C ADRP X0, 0xBA0000
	0x03597670 LDR X0, [X0 + 0x40]
	0x03597674 BL 0x1C16CF4
	0x03597678 ADRP X0, 0xB5F000
	0x0359767C LDR X0, [X0 + 0x280]
	0x03597680 BL 0x1C16CF4
	0x03597684 MOVZ W8, 0x1
	0x03597688 STRB W8, [X25 + 0xFC2]
	0x0359768C LDR X0, [X24]
	0x03597690 MOVI V0.2D, 0x0
	0x03597694 STP V0, V0, [X31 + 0x50]
	0x03597698 STP V0, V0, [X31 + 0x30]
	0x0359769C STR V0, [X31 + 0x2]
	0x035976A0 ADRP X24, 0xBA0000
	0x035976A4 LDR W8, [X0 + 0xE0]
	0x035976A8 LDR X24, [X24 + 0x40]
	0x035976AC CBNZ W8, 0x35976B4

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X20, 0xE49000
	011 Move X21, 0xB5D000
	012 Move X22, 0xB5D000
	013 Move W8, [X20+4018]
	014 Move X21, [X21+2440]
	015 Move X22, [X22+2512]
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {50}
	021 Move X0, 0xB5D000
	022 Move X0, [X0+1880]
	023 Call 0x1C17CF4
	024 Move X0, 0xB5D000
	025 Move X0, [X0+2512]
	026 Call 0x1C17CF4
	027 Move X0, 0xBA0000
	028 Move X0, [X0+3888]
	029 Call 0x1C17CF4
	030 Move X0, 0xB5D000
	031 Move X0, [X0+2104]
	032 Call 0x1C17CF4
	033 Move X0, 0xB98000
	034 Move X0, [X0+728]
	035 Call 0x1C17CF4
	036 Move X0, 0xB97000
	037 Move X0, [X0+3408]
	038 Call 0x1C17CF4
	039 Move X0, 0xB98000
	040 Move X0, [X0+736]
	041 Call 0x1C17CF4
	042 Move X0, 0xB5D000
	043 Move X0, [X0+2440]
	044 Call 0x1C17CF4
	045 Move X0, 0xB97000
	046 Move X0, [X0+3616]
	047 Call 0x1C17CF4
	048 Move W8, 1
	049 Move [X20+4018], W8
	050 Move X0, [X22]
	051 Move X21, [X21]
	052 Move W1, 4
	053 Call 0x1C17D6C
	054 Compare X0, 0
	055 JumpIfEqual {160}
	056 Move X20, X0
	057 Compare X21, 0
	058 JumpIfEqual {65}
	059 Move X8, [X20]
	060 Move X0, X21
	061 Move X1, [X8+64]
	062 Call 0x1C17E00
	063 Compare X0, 0
	064 JumpIfEqual {157}
	065 Move W8, [X20+24]
	066 Compare W8, 0
	067 JumpIfEqual {156}
	068 Move X22, 0xB97000
	069 Move X22, [X22+3616]
	070 Move [X20+32], X21
	071 Move X0, [X22]
	072 Compare X0, 0
	073 JumpIfEqual {80}
	074 Move X8, [X20]
	075 Move X1, [X8+64]
	076 Call 0x1C17E00
	077 Compare X0, 0
	078 JumpIfEqual {157}
	079 Move W8, [X20+24]
	080 NotImplemented "Instruction CMP not yet implemented."
	081 Move X8, [X22]
	082 Move X9, 0xB5D000
	083 Move X9, [X9+1880]
	084 Add X1, X31, 12
	085 Move [X20+40], X8
	086 Move W8, [X19+16]
	087 Move X0, [X9]
	088 Move [X31+12], W8
	089 Call 0x1C17E04
	090 Move X21, X0
	091 Compare X0, 0
	092 JumpIfEqual {99}
	093 Move X8, [X20]
	094 Move X0, X21
	095 Move X1, [X8+64]
	096 Call 0x1C17E00
	097 Compare X0, 0
	098 JumpIfEqual {157}
	099 Move W8, [X20+24]
	100 NotImplemented "Instruction CMP not yet implemented."
	101 Move X22, 0xB5D000
	102 Move X22, [X22+2104]
	103 Move [X20+48], X21
	104 Move X0, [X22]
	105 Compare X0, 0
	106 JumpIfEqual {113}
	107 Move X8, [X20]
	108 Move X1, [X8+64]
	109 Call 0x1C17E00
	110 Compare X0, 0
	111 JumpIfEqual {157}
	112 Move W8, [X20+24]
	113 NotImplemented "Instruction CMP not yet implemented."
	114 Move X21, 0xBA0000
	115 Move X21, [X21+3888]
	116 Move X8, [X22]
	117 Move X23, 0xB98000
	118 Move X24, 0xB97000
	119 Move X25, 0xB98000
	120 Move X23, [X23+728]
	121 Move X24, [X24+3408]
	122 Move X25, [X25+736]
	123 Move X0, X20
	124 Move X1, X31
	125 Move [X20+56], X8
	126 Call String.Concat, X0
	127 Move X20, X0
	128 Move X0, X19
	129 Call RpcStatus.get_Details, X0
	130 Move X8, [X22]
	131 Move X2, [X21]
	132 Move X1, X0
	133 Move X0, X8
	134 Call String.Join, X0, X1
	135 Move X1, [X23]
	136 Move X3, [X24]
	137 Move X2, X0
	138 Move X0, X20
	139 Move X4, X31
	140 Call String.Concat, X0, X1, X2, X3
	141 Move X2, [X19+32]
	142 Move X1, [X25]
	143 Move X3, [X22]
	144 Move X4, X31
	145 Call String.Concat, X0, X1, X2, X3
	146 Move X20, [X31+64]
	147 Move X19, [X31+72]
	148 Move X22, [X31+48]
	149 Move X21, [X31+56]
	150 Move X24, [X31+32]
	151 Move X23, [X31+40]
	152 Move X30, [X31+16]
	153 Move X25, [X31+24]
	154 Add X31, X31, 80
	155 Return X0
	156 Call 0x1C17F28
	157 Call 0x1C17F44
	158 Move X1, X31
	159 Call 0x1C17DEC
	160 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x035976B0 BL 0x1C16DFC
	0x035976B4 ADD X8, X31, 0x8

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

