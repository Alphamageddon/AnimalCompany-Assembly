Type: Satori.ApiClient/<SatoriGetMessageListAsync>d__18

Method: System.Void MoveNext()

Disassembly:
	0x0359C888 BLR X9
	0x0359C88C LDR X24, [X25 + 0x10]
	0x0359C890 CBZ X24, 0x359CA88
	0x0359C894 ADRP X10, 0xB9B000
	0x0359C898 LDR X10, [X10 + 0x58]
	0x0359C89C LDR X8, [X24]
	0x0359C8A0 LDR W26, [X25 + 0x18]
	0x0359C8A4 LDP X27, X25, [X19 + 0x38]
	0x0359C8A8 LDR X1, [X10]
	0x0359C8AC LDRH W9, [X8 + 0x12E]
	0x0359C8B0 MOV X23, X0
	0x0359C8B4 CBZ X9, 0x359C8D8
	0x0359C8B8 LDR X10, [X8 + 0xB0]
	0x0359C8BC ADD X10, X10, 0x8
	0x0359C8C0 LDUR X11, [X10 - 0x8]
	0x0359C8C4 CMP X11, X1
	0x0359C8C8 B.EQ 0x359C900
	0x0359C8CC SUBS X9, X9, 0x1
	0x0359C8D0 ADD X10, X10, 0x10
	0x0359C8D4 B.NE 0x359C8C0
	0x0359C8D8 MOVZ W2, 0x3
	0x0359C8DC MOV X0, X24
	0x0359C8E0 BL 0x1C5C788
	0x0359C8E4 B 0x359C910
	0x0359C8E8 LDR X8, [X19 + 0x48]
	0x0359C8EC MOVN W9, 0x0
	0x0359C8F0 STR X8, [X31 + 0x18]
	0x0359C8F4 STR X31, [X19 + 0x48]
	0x0359C8F8 STR W9, [X19]
	0x0359C8FC B 0x359C96C
	0x0359C900 LDR W9, [X10]
	0x0359C904 ADD W9, W9, 0x3
	0x0359C908 ADD X8, X8, W9, 0x4, SXTW
	0x0359C90C ADD X0, X8, 0x138
	0x0359C910 LDP X8, X9, [X0]
	0x0359C914 MOV X0, X24
	0x0359C918 MOV X1, X21
	0x0359C91C MOV X2, X20
	0x0359C920 MOV X3, X22
	0x0359C924 MOV X4, X23
	0x0359C928 MOV W5, W26
	0x0359C92C MOV X6, X27
	0x0359C930 MOV X7, X25
	0x0359C934 STR X9, [X31]
	0x0359C938 BLR X8
	0x0359C93C CBZ X0, 0x359CA8C
	0x0359C940 ADRP X8, 0xB5A000
	0x0359C944 LDR X8, [X8 + 0x1F8]
	0x0359C948 LDR X1, [X8]
	0x0359C94C BL 0x269F5D0
	0x0359C950 ADRP X8, 0xB5A000
	0x0359C954 LDR X8, [X8 + 0x1F0]
	0x0359C958 STR X0, [X31 + 0x18]
	0x0359C95C LDR X1, [X8]
	0x0359C960 ADD X0, X31, 0x18
	0x0359C964 BL 0x2677430
	0x0359C968 TBZ X0, 0x0, 0x359C9C8
	0x0359C96C ADRP X8, 0xB5A000
	0x0359C970 LDR X8, [X8 + 0x1E0]
	0x0359C974 ADD X0, X31, 0x18
	0x0359C978 LDR X1, [X8]
	0x0359C97C BL 0x2677474
	0x0359C980 ADRP X8, 0xB9B000
	0x0359C984 LDR X8, [X8 + 0x60]
	0x0359C988 LDR X1, [X8]
	0x0359C98C BL 0x22109A8
	0x0359C990 MOVN W8, 0x1
	0x0359C994 STR W8, [X19], #0x8
	0x0359C998 MOV X20, X0
	0x0359C99C LDR X0, [X28]
	0x0359C9A0 ADRP X21, 0xB9B000
	0x0359C9A4 LDR W8, [X0 + 0xE0]
	0x0359C9A8 LDR X21, [X21 + 0x50]
	0x0359C9AC CBNZ W8, 0x359C9B4
	0x0359C9B0 BL 0x1C16DFC
	0x0359C9B4 LDR X2, [X21]
	0x0359C9B8 MOV X0, X19
	0x0359C9BC MOV X1, X20
	0x0359C9C0 BL 0x26322B0
	0x0359C9C4 B 0x359CA00
	0x0359C9C8 STR W31, [X19]
	0x0359C9CC LDR X8, [X31 + 0x18]
	0x0359C9D0 STR X8, [X19 + 0x48]
	0x0359C9D4 LDR X0, [X28]
	0x0359C9D8 LDR W8, [X0 + 0xE0]
	0x0359C9DC CBNZ W8, 0x359C9E4
	0x0359C9E0 BL 0x1C16DFC
	0x0359C9E4 ADRP X8, 0xB9B000
	0x0359C9E8 LDR X8, [X8 + 0x1C8]
	0x0359C9EC ADD X0, X19, 0x8
	0x0359C9F0 LDR X3, [X8]
	0x0359C9F4 ADD X1, X31, 0x18
	0x0359C9F8 MOV X2, X19
	0x0359C9FC BL 0x1FB9520
	0x0359CA00 LDP X20, X19, [X31 + 0x60]
	0x0359CA04 LDP X22, X21, [X31 + 0x50]
	0x0359CA08 LDP X24, X23, [X31 + 0x40]
	0x0359CA0C LDP X26, X25, [X31 + 0x30]
	0x0359CA10 LDP X28, X27, [X31 + 0x20]
	0x0359CA14 LDR X30, [X31 + 0x10]
	0x0359CA18 ADD X31, X31, 0x70
	0x0359CA1C RET
	0x0359CA20 ADRP X0, 0xB5F000
	0x0359CA24 LDR X0, [X0 + 0x578]
	0x0359CA28 BL 0x1C16D08
	0x0359CA2C BL 0x1C16F10
	0x0359CA30 MOV X20, X0
	0x0359CA34 ADRP X0, 0xB92000
	0x0359CA38 LDR X0, [X0 + 0xBC8]
	0x0359CA3C BL 0x1C16D08
	0x0359CA40 MOV X1, X0
	0x0359CA44 MOV X0, X20
	0x0359CA48 MOV X2, X31
	0x0359CA4C BL 0x3314A68
	0x0359CA50 ADRP X0, 0xB9B000
	0x0359CA54 LDR X0, [X0 + 0x1D8]
	0x0359CA58 BL 0x1C16D08
	0x0359CA5C MOV X1, X0
	0x0359CA60 MOV X0, X20
	0x0359CA64 BL 0x1C16DEC
	0x0359CA68 BL 0x1C16F20
	0x0359CA6C BL 0x1C16F20
	0x0359CA70 BL 0x1C16F20
	0x0359CA74 BL 0x1C16F28
	0x0359CA78 BL 0x1C16F20
	0x0359CA7C BL 0x1C16F20
	0x0359CA80 BL 0x1C16F20
	0x0359CA84 BL 0x1C16F20
	0x0359CA88 BL 0x1C16F20
	0x0359CA8C BL 0x1C16F20
	0x0359CA90 B 0x359CAF4
	0x0359CA94 B 0x359CAF4
	0x0359CA98 B 0x359CAF4
	0x0359CA9C B 0x359CAF4
	0x0359CAA0 B 0x359CAF4
	0x0359CAA4 B 0x359CAF4
	0x0359CAA8 B 0x359CAF4
	0x0359CAAC B 0x359CAF4
	0x0359CAB0 B 0x359CAF4
	0x0359CAB4 B 0x359CAF4
	0x0359CAB8 B 0x359CAF4
	0x0359CABC B 0x359CAF4
	0x0359CAC0 B 0x359CAF4
	0x0359CAC4 B 0x359CAF4
	0x0359CAC8 B 0x359CAF4
	0x0359CACC B 0x359CAF4
	0x0359CAD0 B 0x359CAF4
	0x0359CAD4 B 0x359CAF4
	0x0359CAD8 B 0x359CAF4
	0x0359CADC B 0x359CAF4
	0x0359CAE0 B 0x359CAF4
	0x0359CAE4 B 0x359CAF4
	0x0359CAE8 B 0x359CAF4
	0x0359CAEC B 0x359CAF4
	0x0359CAF0 B 0x359CAF4
	0x0359CAF4 MOV X20, X0
	0x0359CAF8 CMP W1, 0x1
	0x0359CAFC B.NE 0x359CB98
	0x0359CB00 MOV X0, X20
	0x0359CB04 BL 0x3EB1AD0
	0x0359CB08 MOV X20, X0
	0x0359CB0C ADRP X0, 0xB57000
	0x0359CB10 LDR X0, [X0 + 0x7D0]
	0x0359CB14 BL 0x1C16D08
	0x0359CB18 LDR X8, [X20]
	0x0359CB1C LDR X1, [X8]
	0x0359CB20 BL 0x1C17270
	0x0359CB24 TBZ X0, 0x0, 0x359CB70
	0x0359CB28 LDR X20, [X20]
	0x0359CB2C BL 0x3EB1AE0
	0x0359CB30 MOVN W8, 0x1
	0x0359CB34 STR W8, [X19], #0x8
	0x0359CB38 ADRP X0, 0xB9A000
	0x0359CB3C LDR X0, [X0 + 0xF48]
	0x0359CB40 BL 0x1C16D08
	0x0359CB44 LDR W8, [X0 + 0xE0]
	0x0359CB48 CBNZ W8, 0x359CB50
	0x0359CB4C BL 0x1C16DFC
	0x0359CB50 ADRP X0, 0xB9B000
	0x0359CB54 LDR X0, [X0 + 0x78]
	0x0359CB58 BL 0x1C16D08
	0x0359CB5C MOV X2, X0
	0x0359CB60 MOV X0, X19
	0x0359CB64 MOV X1, X20
	0x0359CB68 BL 0x26324C8
	0x0359CB6C B 0x359CA00
	0x0359CB70 MOVZ W0, 0x8
	0x0359CB74 BL 0x3EB1AF0
	0x0359CB78 LDR X8, [X20]
	0x0359CB7C STR X8, [X0]
	0x0359CB80 ADRP X1, 0x918000
	0x0359CB84 ADD X1, X1, 0xE58
	0x0359CB88 MOV X2, X31
	0x0359CB8C BL 0x3EB1B00
	0x0359CB90 MOV X20, X0
	0x0359CB94 BL 0x3EB1AE0
	0x0359CB98 MOV X0, X20
	0x0359CB9C BL 0x1D2C690
	0x0359CBA0 BL 0x1990590
	0x0359CBA4 STR X30, [X31 - 0x30]!
	0x0359CBA8 STP X22, X21, [X31 + 0x10]
	0x0359CBAC STP X20, X19, [X31 + 0x20]
	0x0359CBB0 ADRP X22, 0xE43000
	0x0359CBB4 ADRP X21, 0xB9A000
	0x0359CBB8 LDRB W8, [X22 + 0xFDA]
	0x0359CBBC LDR X21, [X21 + 0xF48]
	0x0359CBC0 MOV X19, X1
	0x0359CBC4 MOV X20, X0
	0x0359CBC8 TBNZ X8, 0x0, 0x359CBEC
	0x0359CBCC ADRP X0, 0xB9B000
	0x0359CBD0 LDR X0, [X0 + 0x80]
	0x0359CBD4 BL 0x1C16CF4
	0x0359CBD8 ADRP X0, 0xB9A000
	0x0359CBDC LDR X0, [X0 + 0xF48]
	0x0359CBE0 BL 0x1C16CF4
	0x0359CBE4 MOVZ W8, 0x1
	0x0359CBE8 STRB W8, [X22 + 0xFDA]
	0x0359CBEC LDR X0, [X21]
	0x0359CBF0 ADRP X21, 0xB9B000
	0x0359CBF4 LDR W8, [X0 + 0xE0]
	0x0359CBF8 LDR X21, [X21 + 0x80]
	0x0359CBFC CBNZ W8, 0x359CC04
	0x0359CC00 BL 0x1C16DFC
	0x0359CC04 LDR X2, [X21]
	0x0359CC08 ADD X0, X20, 0x8
	0x0359CC0C MOV X1, X19
	0x0359CC10 LDP X20, X19, [X31 + 0x20]
	0x0359CC14 LDP X22, X21, [X31 + 0x10]
	0x0359CC18 LDR X30, [X31], #0x30
	0x0359CC1C B 0x2632228
	0x0359CC20 SUB X31, X31, 0x60
	0x0359CC24 STP X30, X27, [X31 + 0x10]
	0x0359CC28 STP X26, X25, [X31 + 0x20]
	0x0359CC2C STP X24, X23, [X31 + 0x30]
	0x0359CC30 STP X22, X21, [X31 + 0x40]
	0x0359CC34 STP X20, X19, [X31 + 0x50]
	0x0359CC38 ADRP X20, 0xE43000
	0x0359CC3C LDRB W8, [X20 + 0xFDB]
	0x0359CC40 MOV X19, X0
	0x0359CC44 TBNZ X8, 0x0, 0x359CD28
	0x0359CC48 ADRP X0, 0xB9B000
	0x0359CC4C LDR X0, [X0 + 0x1E0]
	0x0359CC50 BL 0x1C16CF4
	0x0359CC54 ADRP X0, 0xB9B000
	0x0359CC58 LDR X0, [X0 + 0x1E8]
	0x0359CC5C BL 0x1C16CF4
	0x0359CC60 ADRP X0, 0xB9B000
	0x0359CC64 LDR X0, [X0 + 0x20]
	0x0359CC68 BL 0x1C16CF4
	0x0359CC6C ADRP X0, 0xB60000
	0x0359CC70 LDR X0, [X0 + 0x8D8]
	0x0359CC74 BL 0x1C16CF4
	0x0359CC78 ADRP X0, 0xB58000
	0x0359CC7C LDR X0, [X0 + 0x810]
	0x0359CC80 BL 0x1C16CF4
	0x0359CC84 ADRP X0, 0xB58000
	0x0359CC88 LDR X0, [X0 + 0x6C0]
	0x0359CC8C BL 0x1C16CF4
	0x0359CC90 ADRP X0, 0xB58000
	0x0359CC94 LDR X0, [X0 + 0x6D0]
	0x0359CC98 BL 0x1C16CF4
	0x0359CC9C ADRP X0, 0xB9B000
	0x0359CCA0 LDR X0, [X0 + 0x58]
	0x0359CCA4 BL 0x1C16CF4
	0x0359CCA8 ADRP X0, 0xB9B000
	0x0359CCAC LDR X0, [X0 + 0x1F0]
	0x0359CCB0 BL 0x1C16CF4
	0x0359CCB4 ADRP X0, 0xB5A000
	0x0359CCB8 LDR X0, [X0 + 0x1E0]
	0x0359CCBC BL 0x1C16CF4
	0x0359CCC0 ADRP X0, 0xB5A000
	0x0359CCC4 LDR X0, [X0 + 0x1F0]
	0x0359CCC8 BL 0x1C16CF4
	0x0359CCCC ADRP X0, 0xB5A000
	0x0359CCD0 LDR X0, [X0 + 0x1F8]
	0x0359CCD4 BL 0x1C16CF4
	0x0359CCD8 ADRP X0, 0xB60000
	0x0359CCDC LDR X0, [X0 + 0x3A0]
	0x0359CCE0 BL 0x1C16CF4
	0x0359CCE4 ADRP X0, 0xB80000
	0x0359CCE8 LDR X0, [X0 + 0x4D0]
	0x0359CCEC BL 0x1C16CF4
	0x0359CCF0 ADRP X0, 0xB92000
	0x0359CCF4 LDR X0, [X0 + 0x7D0]
	0x0359CCF8 BL 0x1C16CF4
	0x0359CCFC ADRP X0, 0xB92000
	0x0359CD00 LDR X0, [X0 + 0x7D8]
	0x0359CD04 BL 0x1C16CF4
	0x0359CD08 ADRP X0, 0xB57000
	0x0359CD0C LDR X0, [X0 + 0x988]
	0x0359CD10 BL 0x1C16CF4
	0x0359CD14 ADRP X0, 0xB9B000
	0x0359CD18 LDR X0, [X0 + 0x1F8]
	0x0359CD1C BL 0x1C16CF4
	0x0359CD20 MOVZ W8, 0x1
	0x0359CD24 STRB W8, [X20 + 0xFDB]
	0x0359CD28 STR X31, [X31 + 0x8]
	0x0359CD2C ADRP X27, 0xB9B000
	0x0359CD30 LDR W8, [X19]
	0x0359CD34 LDR X27, [X27 + 0x20]
	0x0359CD38 CBZ W8, 0x359CEDC
	0x0359CD3C LDR X24, [X19 + 0x20]
	0x0359CD40 CBZ X24, 0x359D010
	0x0359CD44 LDR X0, [X24 + 0x20]
	0x0359CD48 CBZ X0, 0x359D014
	0x0359CD4C ADRP X8, 0xB9B000
	0x0359CD50 ADRP X9, 0xB57000
	0x0359CD54 LDR X8, [X8 + 0x1F8]
	0x0359CD58 LDR X9, [X9 + 0x988]
	0x0359CD5C LDR X21, [X8]
	0x0359CD60 LDR X20, [X9]
	0x0359CD64 MOV X1, X31
	0x0359CD68 BL 0x361B448
	0x0359CD6C ADRP X8, 0xB60000
	0x0359CD70 LDR X8, [X8 + 0x8D8]
	0x0359CD74 MOV X22, X0
	0x0359CD78 LDR X0, [X8]
	0x0359CD7C MOVZ W1, 0x1
	0x0359CD80 BL 0x1C16D6C
	0x0359CD84 MOV X1, X0
	0x0359CD88 CBZ X1, 0x359D018
	0x0359CD8C LDR W8, [X1 + 0x18]
	0x0359CD90 CBZ W8, 0x359D01C
	0x0359CD94 MOVZ W8, 0x2F
	0x0359CD98 STRH W8, [X1 + 0x20]
	0x0359CD9C CBZ X22, 0x359D020
	0x0359CDA0 MOV X0, X22
	0x0359CDA4 MOV X2, X31
	0x0359CDA8 BL 0x322BC58
	0x0359CDAC MOV X1, X21
	0x0359CDB0 MOV X2, X31
	0x0359CDB4 BL 0x321B938
	0x0359CDB8 ADRP X8, 0xB60000
	0x0359CDBC LDR X8, [X8 + 0x3A0]
	0x0359CDC0 MOV X22, X0
	0x0359CDC4 LDR X23, [X24 + 0x20]
	0x0359CDC8 LDR X0, [X8]
	0x0359CDCC BL 0x1C16F10
	0x0359CDD0 MOV X21, X0
	0x0359CDD4 MOV X1, X23
	0x0359CDD8 MOV X2, X31
	0x0359CDDC BL 0x36281F8
	0x0359CDE0 CBZ X21, 0x359D024
	0x0359CDE4 MOV X0, X21
	0x0359CDE8 MOV X1, X22
	0x0359CDEC MOV X2, X31
	0x0359CDF0 BL 0x36288CC
	0x0359CDF4 MOV X0, X21
	0x0359CDF8 MOV X1, X20
	0x0359CDFC MOV X2, X31
	0x0359CE00 BL 0x3628980
	0x0359CE04 MOV X0, X21
	0x0359CE08 MOV X1, X31
	0x0359CE0C BL 0x3628A38
	0x0359CE10 ADRP X8, 0xB80000
	0x0359CE14 ADRP X9, 0xB58000
	0x0359CE18 LDR X8, [X8 + 0x4D0]
	0x0359CE1C LDR X9, [X9 + 0x6D0]
	0x0359CE20 MOV X20, X0
	0x0359CE24 LDR X21, [X8]
	0x0359CE28 LDR X0, [X9]
	0x0359CE2C BL 0x1C16F10
	0x0359CE30 ADRP X8, 0xB58000
	0x0359CE34 LDR X8, [X8 + 0x6C0]
	0x0359CE38 MOV X22, X0
	0x0359CE3C LDR X1, [X8]
	0x0359CE40 BL 0x2AA4804
	0x0359CE44 ADRP X8, 0xB92000
	0x0359CE48 LDR X8, [X8 + 0x7D8]
	0x0359CE4C LDR X1, [X19 + 0x28]
	0x0359CE50 LDR X0, [X8]
	0x0359CE54 MOV X2, X31
	0x0359CE58 BL 0x321B938
	0x0359CE5C CBZ X22, 0x359D028
	0x0359CE60 ADRP X8, 0xB92000
	0x0359CE64 LDR X8, [X8 + 0x7D0]
	0x0359CE68 ADRP X9, 0xB58000
	0x0359CE6C LDR X9, [X9 + 0x810]
	0x0359CE70 MOV X2, X0
	0x0359CE74 LDR X1, [X8]
	0x0359CE78 LDR X3, [X9]
	0x0359CE7C MOV X0, X22
	0x0359CE80 BL 0x2AA5098
	0x0359CE84 LDR X23, [X24 + 0x10]
	0x0359CE88 CBZ X23, 0x359D02C
	0x0359CE8C ADRP X10, 0xB9B000
	0x0359CE90 LDR X10, [X10 + 0x58]
	0x0359CE94 LDR X8, [X23]
	0x0359CE98 LDR W25, [X24 + 0x18]
	0x0359CE9C LDP X26, X24, [X19 + 0x30]
	0x0359CEA0 LDR X1, [X10]
	0x0359CEA4 LDRH W9, [X8 + 0x12E]
	0x0359CEA8 CBZ X9, 0x359CECC
	0x0359CEAC LDR X10, [X8 + 0xB0]
	0x0359CEB0 ADD X10, X10, 0x8
	0x0359CEB4 LDUR X11, [X10 - 0x8]
	0x0359CEB8 CMP X11, X1
	0x0359CEBC B.EQ 0x359CEF4
	0x0359CEC0 SUBS X9, X9, 0x1
	0x0359CEC4 ADD X10, X10, 0x10
	0x0359CEC8 B.NE 0x359CEB4
	0x0359CECC MOVZ W2, 0x3
	0x0359CED0 MOV X0, X23
	0x0359CED4 BL 0x1C5C788
	0x0359CED8 B 0x359CF04
	0x0359CEDC LDR X8, [X19 + 0x40]
	0x0359CEE0 MOVN W9, 0x0
	0x0359CEE4 STR X8, [X31 + 0x8]
	0x0359CEE8 STR X31, [X19 + 0x40]
	0x0359CEEC STR W9, [X19]
	0x0359CEF0 B 0x359CF60
	0x0359CEF4 LDR W9, [X10]
	0x0359CEF8 ADD W9, W9, 0x3
	0x0359CEFC ADD X8, X8, W9, 0x4, SXTW
	0x0359CF00 ADD X0, X8, 0x138
	0x0359CF04 LDP X8, X9, [X0]
	0x0359CF08 MOV X0, X23
	0x0359CF0C MOV X1, X21
	0x0359CF10 MOV X2, X20
	0x0359CF14 MOV X3, X22
	0x0359CF18 MOV X4, X31
	0x0359CF1C MOV W5, W25
	0x0359CF20 MOV X6, X26
	0x0359CF24 MOV X7, X24
	0x0359CF28 STR X9, [X31]
	0x0359CF2C BLR X8
	0x0359CF30 CBZ X0, 0x359D030
	0x0359CF34 ADRP X8, 0xB5A000
	0x0359CF38 LDR X8, [X8 + 0x1F8]
	0x0359CF3C LDR X1, [X8]
	0x0359CF40 BL 0x269F5D0
	0x0359CF44 ADRP X8, 0xB5A000
	0x0359CF48 LDR X8, [X8 + 0x1F0]
	0x0359CF4C STR X0, [X31 + 0x8]
	0x0359CF50 LDR X1, [X8]
	0x0359CF54 ADD X0, X31, 0x8
	0x0359CF58 BL 0x2677430
	0x0359CF5C TBZ X0, 0x0, 0x359CFBC
	0x0359CF60 ADRP X8, 0xB5A000
	0x0359CF64 LDR X8, [X8 + 0x1E0]
	0x0359CF68 ADD X0, X31, 0x8
	0x0359CF6C LDR X1, [X8]
	0x0359CF70 BL 0x2677474
	0x0359CF74 ADRP X8, 0xB9B000
	0x0359CF78 LDR X8, [X8 + 0x1F0]
	0x0359CF7C LDR X1, [X8]
	0x0359CF80 BL 0x22109A8
	0x0359CF84 MOVN W8, 0x1
	0x0359CF88 STR W8, [X19], #0x8
	0x0359CF8C MOV X20, X0
	0x0359CF90 LDR X0, [X27]
	0x0359CF94 ADRP X21, 0xB9B000
	0x0359CF98 LDR W8, [X0 + 0xE0]
	0x0359CF9C LDR X21, [X21 + 0x1E8]
	0x0359CFA0 CBNZ W8, 0x359CFA8
	0x0359CFA4 BL 0x1C16DFC
	0x0359CFA8 LDR X2, [X21]
	0x0359CFAC MOV X0, X19
	0x0359CFB0 MOV X1, X20
	0x0359CFB4 BL 0x26322B0
	0x0359CFB8 B 0x359CFF4
	0x0359CFBC STR W31, [X19]
	0x0359CFC0 LDR X8, [X31 + 0x8]
	0x0359CFC4 STR X8, [X19 + 0x40]
	0x0359CFC8 LDR X0, [X27]
	0x0359CFCC LDR W8, [X0 + 0xE0]
	0x0359CFD0 CBNZ W8, 0x359CFD8
	0x0359CFD4 BL 0x1C16DFC
	0x0359CFD8 ADRP X8, 0xB9B000
	0x0359CFDC LDR X8, [X8 + 0x1E0]
	0x0359CFE0 ADD X0, X19, 0x8
	0x0359CFE4 LDR X3, [X8]
	0x0359CFE8 ADD X1, X31, 0x8
	0x0359CFEC MOV X2, X19
	0x0359CFF0 BL 0x1FB9734
	0x0359CFF4 LDP X20, X19, [X31 + 0x50]
	0x0359CFF8 LDP X22, X21, [X31 + 0x40]
	0x0359CFFC LDP X24, X23, [X31 + 0x30]
	0x0359D000 LDP X26, X25, [X31 + 0x20]
	0x0359D004 LDP X30, X27, [X31 + 0x10]
	0x0359D008 ADD X31, X31, 0x60
	0x0359D00C RET
	0x0359D010 BL 0x1C16F20
	0x0359D014 BL 0x1C16F20
	0x0359D018 BL 0x1C16F20
	0x0359D01C BL 0x1C16F28
	0x0359D020 BL 0x1C16F20
	0x0359D024 BL 0x1C16F20
	0x0359D028 BL 0x1C16F20
	0x0359D02C BL 0x1C16F20
	0x0359D030 BL 0x1C16F20
	0x0359D034 B 0x359D084
	0x0359D038 B 0x359D084
	0x0359D03C B 0x359D084

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+32], X30
	003 Move [X31+40], X27
	004 Move [X31+48], X26
	005 Move [X31+56], X25
	006 Move [X31+64], X24
	007 Move [X31+72], X23
	008 Move [X31+80], X22
	009 Move [X31+88], X21
	010 Move [X31+96], X20
	011 Move [X31+104], X19
	012 Move X20, 0xE44000
	013 Move W8, [X20+4053]
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {105}
	019 Move X0, 0xB9C000
	020 Move X0, [X0+400]
	021 Call 0x1C17CF4
	022 Move X0, 0xB9C000
	023 Move X0, [X0+408]
	024 Call 0x1C17CF4
	025 Move X0, 0xB9B000
	026 Move X0, [X0+4080]
	027 Call 0x1C17CF4
	028 Move X0, 0xB61000
	029 Move X0, [X0+2264]
	030 Call 0x1C17CF4
	031 Move X0, 0xB59000
	032 Move X0, [X0+2064]
	033 Call 0x1C17CF4
	034 Move X0, 0xB59000
	035 Move X0, [X0+1728]
	036 Call 0x1C17CF4
	037 Move X0, 0xB59000
	038 Move X0, [X0+1744]
	039 Call 0x1C17CF4
	040 Move X0, 0xB9C000
	041 Move X0, [X0+88]
	042 Call 0x1C17CF4
	043 Move X0, 0xB9C000
	044 Move X0, [X0+416]
	045 Call 0x1C17CF4
	046 Move X0, 0xB93000
	047 Move X0, [X0+2096]
	048 Call 0x1C17CF4
	049 Move X0, 0xB5C000
	050 Move X0, [X0+3056]
	051 Call 0x1C17CF4
	052 Move X0, 0xB5B000
	053 Move X0, [X0+3832]
	054 Call 0x1C17CF4
	055 Move X0, 0xB59000
	056 Move X0, [X0+1144]
	057 Call 0x1C17CF4
	058 Move X0, 0xB58000
	059 Move X0, [X0+2512]
	060 Call 0x1C17CF4
	061 Move X0, 0xB5B000
	062 Move X0, [X0+480]
	063 Call 0x1C17CF4
	064 Move X0, 0xB5B000
	065 Move X0, [X0+496]
	066 Call 0x1C17CF4
	067 Move X0, 0xB5B000
	068 Move X0, [X0+504]
	069 Call 0x1C17CF4
	070 Move X0, 0xB61000
	071 Move X0, [X0+928]
	072 Call 0x1C17CF4
	073 Move X0, 0xB5A000
	074 Move X0, [X0+2600]
	075 Call 0x1C17CF4
	076 Move X0, 0xB9C000
	077 Move X0, [X0+424]
	078 Call 0x1C17CF4
	079 Move X0, 0xB81000
	080 Move X0, [X0+1232]
	081 Call 0x1C17CF4
	082 Move X0, 0xB93000
	083 Move X0, [X0+3848]
	084 Call 0x1C17CF4
	085 Move X0, 0xB61000
	086 Move X0, [X0+1824]
	087 Call 0x1C17CF4
	088 Move X0, 0xB93000
	089 Move X0, [X0+2000]
	090 Call 0x1C17CF4
	091 Move X0, 0xB93000
	092 Move X0, [X0+3864]
	093 Call 0x1C17CF4
	094 Move X0, 0xB93000
	095 Move X0, [X0+2008]
	096 Call 0x1C17CF4
	097 Move X0, 0xB58000
	098 Move X0, [X0+2440]
	099 Call 0x1C17CF4
	100 Move X0, 0xB93000
	101 Move X0, [X0+3872]
	102 Call 0x1C17CF4
	103 Move W8, 1
	104 Move [X20+4053], W8
	105 Move [X31+24], X31
	106 Move X27, 0xB9B000
	107 Move W8, [X19]
	108 Move X27, [X27+4080]
	109 Compare W8, 0
	110 JumpIfEqual {344}
	111 Move X8, 0xB9C000
	112 Move X9, 0xB58000
	113 Move X8, [X8+424]
	114 Move X9, [X9+2440]
	115 Move X24, [X19+56]
	116 Move W10, [X19+32]
	117 Move X20, [X8]
	118 Move X21, [X9]
	119 Compare W10, 0
	120 JumpIfEqual {192}
	121 Move X8, 0xB58000
	122 Move X8, [X8+2512]
	123 Move X0, [X8]
	124 Move W1, 4
	125 Call 0x1C17D6C
	126 Move X22, X0
	127 Compare X0, 0
	128 JumpIfEqual {444}
	129 Compare X21, 0
	130 JumpIfEqual {137}
	131 Move X8, [X22]
	132 Move X1, [X8+64]
	133 Move X0, X21
	134 Call 0x1C17E00
	135 Compare X0, 0
	136 JumpIfEqual {450}
	137 Move W8, [X22+24]
	138 Compare W8, 0
	139 JumpIfEqual {445}
	140 Move [X22+32], X21
	141 Move X21, 0xB93000
	142 Move X21, [X21+3864]
	143 Move X0, [X21]
	144 Compare X0, 0
	145 JumpIfEqual {152}
	146 Move X8, [X22]
	147 Move X1, [X8+64]
	148 Call 0x1C17E00
	149 Compare X0, 0
	150 JumpIfEqual {453}
	151 Move W8, [X22+24]
	152 NotImplemented "Instruction CMP not yet implemented."
	153 Move X8, [X21]
	154 Move X9, 0xB59000
	155 Move [X22+40], X8
	156 Move X8, [X19+32]
	157 Move X9, [X9+1144]
	158 Move [X31+16], X8
	159 Move X0, [X9]
	160 Add X1, X31, 16
	161 Call 0x1C17E04
	162 Move X21, X0
	163 Compare X0, 0
	164 JumpIfEqual {171}
	165 Move X8, [X22]
	166 Move X1, [X8+64]
	167 Move X0, X21
	168 Call 0x1C17E00
	169 Compare X0, 0
	170 JumpIfEqual {456}
	171 Move W8, [X22+24]
	172 NotImplemented "Instruction CMP not yet implemented."
	173 Move [X22+48], X21
	174 Move X21, 0xB61000
	175 Move X21, [X21+1824]
	176 Move X0, [X21]
	177 Compare X0, 0
	178 JumpIfEqual {185}
	179 Move X8, [X22]
	180 Move X1, [X8+64]
	181 Call 0x1C17E00
	182 Compare X0, 0
	183 JumpIfEqual {459}
	184 Move W8, [X22+24]
	185 NotImplemented "Instruction CMP not yet implemented."
	186 Move X8, [X21]
	187 Move [X22+56], X8
	188 Move X0, X22
	189 Move X1, X31
	190 Call String.Concat, X0
	191 Move X21, X0
	192 Move X0, X19
	193 Add X0, X0, 40
	194 Move W8, [X0]
	195 Compare W8, 0
	196 JumpIfEqual {216}
	197 Move X8, 0xB93000
	198 Move X8, [X8+2096]
	199 Move X1, [X8]
	200 Call Nullable`1<Boolean>.ToString, X0
	201 Compare X0, 0
	202 JumpIfEqual {448}
	203 Move X1, X31
	204 Call String.ToLower, X0
	205 Move X8, 0xB93000
	206 Move X8, [X8+3848]
	207 Move X9, 0xB61000
	208 Move X9, [X9+1824]
	209 Move X2, X0
	210 Move X1, [X8]
	211 Move X3, [X9]
	212 Move X0, X21
	213 Move X4, X31
	214 Call String.Concat, X0, X1, X2, X3
	215 Move X21, X0
	216 Move X22, [X19+48]
	217 Compare X22, 0
	218 JumpIfEqual {240}
	219 Move X8, 0xB5A000
	220 Move X8, [X8+2600]
	221 Move X0, [X8]
	222 Move W8, [X0+224]
	223 Compare W8, 0
	224 JumpIfNotEqual {226}
	225 Call 0x1C17DFC
	226 Move X0, X22
	227 Move X1, X31
	228 Call Uri.EscapeDataString, X0
	229 Move X8, 0xB93000
	230 Move X8, [X8+3872]
	231 Move X9, 0xB61000
	232 Move X9, [X9+1824]
	233 Move X2, X0
	234 Move X1, [X8]
	235 Move X3, [X9]
	236 Move X0, X21
	237 Move X4, X31
	238 Call String.Concat, X0, X1, X2, X3
	239 Move X21, X0
	240 Compare X24, 0
	241 JumpIfEqual {435}
	242 Move X0, [X24+32]
	243 Compare X0, 0
	244 JumpIfEqual {436}
	245 Move X1, X31
	246 Call Uri.get_AbsolutePath, X0
	247 Move X8, 0xB61000
	248 Move X8, [X8+2264]
	249 Move X22, X0
	250 Move X0, [X8]
	251 Move W1, 1
	252 Call 0x1C17D6C
	253 Move X1, X0
	254 Compare X1, 0
	255 JumpIfEqual {437}
	256 Move W8, [X1+24]
	257 Compare W8, 0
	258 JumpIfEqual {438}
	259 Move W8, 47
	260 NotImplemented "Instruction STRH not yet implemented."
	261 Compare X22, 0
	262 JumpIfEqual {439}
	263 Move X0, X22
	264 Move X2, X31
	265 Call String.TrimEnd, X0, X1
	266 Move X1, X20
	267 Move X2, X31
	268 Call String.Concat, X0, X1
	269 Move X8, 0xB61000
	270 Move X8, [X8+928]
	271 Move X22, X0
	272 Move X23, [X24+32]
	273 Move X0, [X8]
	274 Call 0x1C17F10
	275 Move X20, X0
	276 Move X1, X23
	277 Move X2, X31
	278 Call UriBuilder..ctor, X0, X1
	279 Compare X20, 0
	280 JumpIfEqual {440}
	281 Move X0, X20
	282 Move X1, X22
	283 Move X2, X31
	284 Call UriBuilder.set_Path, X0, X1
	285 Move X0, X20
	286 Move X1, X21
	287 Move X2, X31
	288 Call UriBuilder.set_Query, X0, X1
	289 Move X0, X20
	290 Move X1, X31
	291 Call UriBuilder.get_Uri, X0
	292 Move X8, 0xB81000
	293 Move X9, 0xB59000
	294 Move X8, [X8+1232]
	295 Move X9, [X9+1744]
	296 Move X20, X0
	297 Move X21, [X8]
	298 Move X0, [X9]
	299 Call 0x1C17F10
	300 Move X8, 0xB59000
	301 Move X8, [X8+1728]
	302 Move X22, X0
	303 Move X1, [X8]
	304 Call Dictionary`2<Object, Object>..ctor, X0
	305 Move X8, 0xB93000
	306 Move X8, [X8+2008]
	307 Move X1, [X19+64]
	308 Move X0, [X8]
	309 Move X2, X31
	310 Call String.Concat, X0, X1
	311 Compare X22, 0
	312 JumpIfEqual {441}
	313 Move X8, 0xB93000
	314 Move X8, [X8+2000]
	315 Move X9, 0xB59000
	316 Move X9, [X9+2064]
	317 Move X2, X0
	318 Move X1, [X8]
	319 Move X3, [X9]
	320 Move X0, X22
	321 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	322 Move X23, [X24+16]
	323 Compare X23, 0
	324 JumpIfEqual {442}
	325 Move X10, 0xB9C000
	326 Move X10, [X10+88]
	327 Move X8, [X23]
	328 Move W25, [X24+24]
	329 Move X26, [X19+72]
	330 Move X24, [X19+80]
	331 Move X1, [X10]
	332 NotImplemented "Instruction LDRH not yet implemented."
	333 Compare X9, 0
	334 JumpIfEqual {341}
	335 Move X10, [X8+176]
	336 Add X10, X10, 8
	337 NotImplemented "Instruction LDUR not yet implemented."
	338 NotImplemented "Instruction CMP not yet implemented."
	339 Subtract X9, X9, 1
	340 Add X10, X10, 16
	341 Move W2, 3
	342 Move X0, X23
	343 Call 0x1C5D788
	344 Move X8, [X19+88]
	345 Move TEMP, 0
	346 Not TEMP
	347 Move W9, TEMP
	348 Move [X31+24], X8
	349 Move [X19+88], X31
	350 Move [X19], W9
	351 Move W9, [X10]
	352 Add W9, W9, 3
	353 Add X8, X8, W9
	354 Add X0, X8, 312
	355 Move X8, [X0]
	356 Move X9, [X0+8]
	357 Move X0, X23
	358 Move X1, X21
	359 Move X2, X20
	360 Move X3, X22
	361 Move X4, X31
	362 Move W5, W25
	363 Move X6, X26
	364 Move X7, X24
	365 Move [X31], X9
	366 NotImplemented "Instruction BLR not yet implemented."
	367 Compare X0, 0
	368 JumpIfEqual {443}
	369 Move X8, 0xB5B000
	370 Move X8, [X8+504]
	371 Move X1, [X8]
	372 Call Task`1<Object>.GetAwaiter, X0
	373 Move X8, 0xB5B000
	374 Move X8, [X8+496]
	375 Move [X31+24], X0
	376 Move X1, [X8]
	377 Add X0, X31, 24
	378 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	379 Move TEMP, X0
	380 And TEMP, TEMP, 1
	381 Compare TEMP, 1
	382 JumpIfNotEqual {408}
	383 Move X8, 0xB5B000
	384 Move X8, [X8+480]
	385 Add X0, X31, 24
	386 Move X1, [X8]
	387 Call TaskAwaiter`1<Object>.GetResult, X0
	388 Move X8, 0xB9C000
	389 Move X8, [X8+416]
	390 Move X1, [X8]
	391 Call 0x22119A8, X0
	392 Move TEMP, 1
	393 Not TEMP
	394 Move W8, TEMP
	395 Move [X19+8], W8
	396 Move X20, X0
	397 Move X0, [X27]
	398 Move X21, 0xB9C000
	399 Move W8, [X0+224]
	400 Move X21, [X21+408]
	401 Compare W8, 0
	402 JumpIfNotEqual {404}
	403 Call 0x1C17DFC
	404 Move X2, [X21]
	405 Move X0, X19
	406 Move X1, X20
	407 Call AsyncTaskMethodBuilder`1<Object>.SetResult, X0, X1
	408 Move [X19], W31
	409 Move X8, [X31+24]
	410 Move [X19+88], X8
	411 Move X0, [X27]
	412 Move W8, [X0+224]
	413 Compare W8, 0
	414 JumpIfNotEqual {416}
	415 Call 0x1C17DFC
	416 Move X8, 0xB9C000
	417 Move X8, [X8+400]
	418 Add X0, X19, 8
	419 Move X3, [X8]
	420 Add X1, X31, 24
	421 Move X2, X19
	422 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	423 Move X20, [X31+96]
	424 Move X19, [X31+104]
	425 Move X22, [X31+80]
	426 Move X21, [X31+88]
	427 Move X24, [X31+64]
	428 Move X23, [X31+72]
	429 Move X26, [X31+48]
	430 Move X25, [X31+56]
	431 Move X30, [X31+32]
	432 Move X27, [X31+40]
	433 Add X31, X31, 112
	434 Return 
	435 Call 0x1C17F20
	436 Call 0x1C17F20
	437 Call 0x1C17F20
	438 Call 0x1C17F28
	439 Call 0x1C17F20
	440 Call 0x1C17F20
	441 Call 0x1C17F20
	442 Call 0x1C17F20
	443 Call 0x1C17F20
	444 Call 0x1C17F20
	445 Call 0x1C17F28
	446 Call 0x1C17F28
	447 Call 0x1C17F28
	448 Call 0x1C17F20
	449 Call 0x1C17F28
	450 Call 0x1C17F44
	451 Move X1, X31
	452 Call 0x1C17DEC
	453 Call 0x1C17F44
	454 Move X1, X31
	455 Call 0x1C17DEC
	456 Call 0x1C17F44
	457 Move X1, X31
	458 Call 0x1C17DEC
	459 Call 0x1C17F44
	460 Move X1, X31
	461 Call 0x1C17DEC
	462 Move X20, X0
	463 NotImplemented "Instruction CMP not yet implemented."
	464 Move X0, X20
	465 Call 0x3EB2AD0
	466 Move X20, X0
	467 Move X0, 0xB58000
	468 Move X0, [X0+2000]
	469 Call 0x1C17D08
	470 Move X8, [X20]
	471 Move X1, [X8]
	472 Call 0x1C18270
	473 Move TEMP, X0
	474 And TEMP, TEMP, 1
	475 Compare TEMP, 1
	476 JumpIfNotEqual {497}
	477 Move X20, [X20]
	478 Call 0x3EB2AE0
	479 Move TEMP, 1
	480 Not TEMP
	481 Move W8, TEMP
	482 Move [X19+8], W8
	483 Move X0, 0xB9B000
	484 Move X0, [X0+4080]
	485 Call 0x1C17D08
	486 Move W8, [X0+224]
	487 Compare W8, 0
	488 JumpIfNotEqual {490}
	489 Call 0x1C17DFC
	490 Move X0, 0xB9C000
	491 Move X0, [X0+432]
	492 Call 0x1C17D08
	493 Move X2, X0
	494 Move X0, X19
	495 Move X1, X20
	496 Call AsyncTaskMethodBuilder`1<Object>.SetException, X0, X1
	497 Move W0, 8
	498 Call 0x3EB2AF0
	499 Move X8, [X20]
	500 Move [X0], X8
	501 Move X1, 0x918000
	502 Add X1, X1, 3672
	503 Move X2, X31
	504 Call 0x3EB2B00
	505 Move X20, X0
	506 Call 0x3EB2AE0
	507 Move X0, X20
	508 Call 0x1D2D690
	509 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x0359D040 B 0x359D084
	0x0359D044 B 0x359D084
	0x0359D048 B 0x359D084
	0x0359D04C B 0x359D084
	0x0359D050 B 0x359D084
	0x0359D054 B 0x359D084
	0x0359D058 B 0x359D084
	0x0359D05C B 0x359D084
	0x0359D060 B 0x359D084
	0x0359D064 B 0x359D084
	0x0359D068 B 0x359D084
	0x0359D06C B 0x359D084
	0x0359D070 B 0x359D084
	0x0359D074 B 0x359D084
	0x0359D078 B 0x359D084
	0x0359D07C B 0x359D084
	0x0359D080 B 0x359D084
	0x0359D084 MOV X20, X0
	0x0359D088 CMP W1, 0x1
	0x0359D08C B.NE 0x359D128
	0x0359D090 MOV X0, X20
	0x0359D094 BL 0x3EB1AD0
	0x0359D098 MOV X20, X0
	0x0359D09C ADRP X0, 0xB56000
	0x0359D0A0 LDR X0, [X0 + 0x7D0]
	0x0359D0A4 BL 0x1C16D08
	0x0359D0A8 LDR X8, [X20]
	0x0359D0AC LDR X1, [X8]
	0x0359D0B0 BL 0x1C17270
	0x0359D0B4 TBZ X0, 0x0, 0x359D100
	0x0359D0B8 LDR X20, [X20]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xE43000
	007 Move X21, 0xB9A000
	008 Move W8, [X22+4054]
	009 Move X21, [X21+4080]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xB9B000
	017 Move X0, [X0+440]
	018 Call 0x1C17CF4
	019 Move X0, 0xB9A000
	020 Move X0, [X0+4080]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+4054], W8
	024 Move X0, [X21]
	025 Move X21, 0xB9B000
	026 Move W8, [X0+224]
	027 Move X21, [X21+440]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X2, [X21]
	032 Add X0, X20, 8
	033 Move X1, X19
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Call AsyncTaskMethodBuilder`1<Object>.SetStateMachine, X0, X1
	040 Return 

