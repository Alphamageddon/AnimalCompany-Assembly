Type: Satori.TinyJson.JsonParser

Method: T FromJson(System.String json)

Disassembly:
	0x022119A8 MOV X20, X0
	0x022119AC LDR X1, [X8 + 0x8]
	0x022119B0 LDRB W8, [X1 + 0x135]
	0x022119B4 TBNZ X8, 0x0, 0x22119C4
	0x022119B8 MOV X0, X1
	0x022119BC BL 0x1C5C684
	0x022119C0 MOV X1, X0
	0x022119C4 CBZ X20, 0x2211A04
	0x022119C8 LDR X8, [X20]
	0x022119CC LDR X9, [X1 + 0x40]
	0x022119D0 MOV X0, X20
	0x022119D4 LDR X8, [X8 + 0x40]
	0x022119D8 CMP X8, X9
	0x022119DC B.NE 0x2211A08
	0x022119E0 BL 0x1C16E08
	0x022119E4 MOV X1, X0
	0x022119E8 MOVZ W2, 0x68
	0x022119EC MOV X0, X19
	0x022119F0 BL 0x3EB1AC0
	0x022119F4 LDP X20, X19, [X31 + 0x20]
	0x022119F8 LDP X22, X21, [X31 + 0x10]
	0x022119FC LDR X30, [X31], #0x30
	0x02211A00 RET
	0x02211A04 BL 0x1C16F20
	0x02211A08 BL 0x1C171E0
	0x02211A0C STR X30, [X31 - 0x30]!
	0x02211A10 STP X22, X21, [X31 + 0x10]
	0x02211A14 STP X20, X19, [X31 + 0x20]
	0x02211A18 LDR X9, [X1 + 0x38]
	0x02211A1C MOV X20, X1
	0x02211A20 MOV X21, X0
	0x02211A24 MOV X19, X8
	0x02211A28 CBNZ X9, 0x2211A4C
	0x02211A2C ADRP X0, 0x1EE2000
	0x02211A30 LDR X0, [X0 + 0x6C0]
	0x02211A34 BL 0x1C16CF4
	0x02211A38 LDR X9, [X20 + 0x38]
	0x02211A3C CBNZ X9, 0x2211A4C
	0x02211A40 MOV X0, X20
	0x02211A44 BL 0x1C5C6E0
	0x02211A48 LDR X9, [X20 + 0x38]
	0x02211A4C ADRP X8, 0x1EE2000
	0x02211A50 LDR X8, [X8 + 0x6C0]
	0x02211A54 LDR X22, [X9]
	0x02211A58 LDR X0, [X8]
	0x02211A5C LDR W8, [X0 + 0xE0]
	0x02211A60 CBNZ W8, 0x2211A68
	0x02211A64 BL 0x1C16DFC
	0x02211A68 MOV X0, X22
	0x02211A6C MOV X1, X31
	0x02211A70 BL 0x338C698
	0x02211A74 MOV X1, X0
	0x02211A78 MOV X0, X21
	0x02211A7C MOV X2, X31
	0x02211A80 BL 0x3C86D98
	0x02211A84 LDR X8, [X20 + 0x38]
	0x02211A88 MOV X20, X0
	0x02211A8C LDR X1, [X8 + 0x8]
	0x02211A90 LDRB W8, [X1 + 0x135]
	0x02211A94 TBNZ X8, 0x0, 0x2211AA4
	0x02211A98 MOV X0, X1
	0x02211A9C BL 0x1C5C684
	0x02211AA0 MOV X1, X0
	0x02211AA4 CBZ X20, 0x2211AE4
	0x02211AA8 LDR X8, [X20]
	0x02211AAC LDR X9, [X1 + 0x40]
	0x02211AB0 MOV X0, X20
	0x02211AB4 LDR X8, [X8 + 0x40]
	0x02211AB8 CMP X8, X9
	0x02211ABC B.NE 0x2211AE8
	0x02211AC0 BL 0x1C16E08
	0x02211AC4 MOV X1, X0
	0x02211AC8 MOVZ W2, 0x70
	0x02211ACC MOV X0, X19
	0x02211AD0 BL 0x3EB1AC0
	0x02211AD4 LDP X20, X19, [X31 + 0x20]
	0x02211AD8 LDP X22, X21, [X31 + 0x10]
	0x02211ADC LDR X30, [X31], #0x30
	0x02211AE0 RET
	0x02211AE4 BL 0x1C16F20
	0x02211AE8 BL 0x1C171E0
	0x02211AEC STR X30, [X31 - 0x30]!
	0x02211AF0 STP X22, X21, [X31 + 0x10]
	0x02211AF4 STP X20, X19, [X31 + 0x20]
	0x02211AF8 LDR X9, [X1 + 0x38]
	0x02211AFC MOV X20, X1
	0x02211B00 MOV X21, X0
	0x02211B04 MOV X19, X8
	0x02211B08 CBNZ X9, 0x2211B2C
	0x02211B0C ADRP X0, 0x1EE2000
	0x02211B10 LDR X0, [X0 + 0x6C0]
	0x02211B14 BL 0x1C16CF4
	0x02211B18 LDR X9, [X20 + 0x38]
	0x02211B1C CBNZ X9, 0x2211B2C
	0x02211B20 MOV X0, X20
	0x02211B24 BL 0x1C5C6E0
	0x02211B28 LDR X9, [X20 + 0x38]
	0x02211B2C ADRP X8, 0x1EE2000
	0x02211B30 LDR X8, [X8 + 0x6C0]
	0x02211B34 LDR X22, [X9]
	0x02211B38 LDR X0, [X8]
	0x02211B3C LDR W8, [X0 + 0xE0]
	0x02211B40 CBNZ W8, 0x2211B48
	0x02211B44 BL 0x1C16DFC
	0x02211B48 MOV X0, X22
	0x02211B4C MOV X1, X31
	0x02211B50 BL 0x338C698
	0x02211B54 MOV X1, X0
	0x02211B58 MOV X0, X21
	0x02211B5C MOV X2, X31
	0x02211B60 BL 0x3C86D98
	0x02211B64 LDR X8, [X20 + 0x38]
	0x02211B68 MOV X20, X0
	0x02211B6C LDR X1, [X8 + 0x8]
	0x02211B70 LDRB W8, [X1 + 0x135]
	0x02211B74 TBNZ X8, 0x0, 0x2211B84
	0x02211B78 MOV X0, X1
	0x02211B7C BL 0x1C5C684
	0x02211B80 MOV X1, X0
	0x02211B84 CBZ X20, 0x2211BCC
	0x02211B88 LDR X8, [X20]
	0x02211B8C LDR X9, [X1 + 0x40]
	0x02211B90 MOV X0, X20
	0x02211B94 LDR X8, [X8 + 0x40]
	0x02211B98 CMP X8, X9
	0x02211B9C B.NE 0x2211BD0
	0x02211BA0 BL 0x1C16E08
	0x02211BA4 LDR X8, [X0 + 0x30]
	0x02211BA8 LDP V2, V0, [X0 + 0x10]
	0x02211BAC LDR V1, [X0]
	0x02211BB0 LDP X22, X21, [X31 + 0x10]
	0x02211BB4 STR X8, [X19 + 0x30]
	0x02211BB8 STP V2, V0, [X19 + 0x10]
	0x02211BBC STR V1, [X19]
	0x02211BC0 LDP X20, X19, [X31 + 0x20]
	0x02211BC4 LDR X30, [X31], #0x30
	0x02211BC8 RET
	0x02211BCC BL 0x1C16F20
	0x02211BD0 BL 0x1C171E0
	0x02211BD4 STP X30, X21, [X31 - 0x20]!
	0x02211BD8 STP X20, X19, [X31 + 0x10]
	0x02211BDC LDR X8, [X1 + 0x38]
	0x02211BE0 MOV X19, X1
	0x02211BE4 MOV X20, X0
	0x02211BE8 CBNZ X8, 0x2211C0C
	0x02211BEC ADRP X0, 0x1EE2000
	0x02211BF0 LDR X0, [X0 + 0x6C0]
	0x02211BF4 BL 0x1C16CF4
	0x02211BF8 LDR X8, [X19 + 0x38]
	0x02211BFC CBNZ X8, 0x2211C0C
	0x02211C00 MOV X0, X19
	0x02211C04 BL 0x1C5C6E0
	0x02211C08 LDR X8, [X19 + 0x38]
	0x02211C0C ADRP X9, 0x1EE2000
	0x02211C10 LDR X9, [X9 + 0x6C0]
	0x02211C14 LDR X21, [X8]
	0x02211C18 LDR X0, [X9]
	0x02211C1C LDR W9, [X0 + 0xE0]
	0x02211C20 CBNZ W9, 0x2211C28
	0x02211C24 BL 0x1C16DFC
	0x02211C28 MOV X0, X21
	0x02211C2C MOV X1, X31
	0x02211C30 BL 0x338C698
	0x02211C34 MOV X1, X0
	0x02211C38 MOV X0, X20
	0x02211C3C MOV X2, X31
	0x02211C40 BL 0x3C86D98
	0x02211C44 LDR X8, [X19 + 0x38]
	0x02211C48 MOV X19, X0
	0x02211C4C LDR X1, [X8 + 0x8]
	0x02211C50 LDRB W8, [X1 + 0x135]
	0x02211C54 TBNZ X8, 0x0, 0x2211C64
	0x02211C58 MOV X0, X1
	0x02211C5C BL 0x1C5C684
	0x02211C60 MOV X1, X0
	0x02211C64 CBZ X19, 0x2211C9C
	0x02211C68 LDR X8, [X19]
	0x02211C6C LDR X9, [X1 + 0x40]
	0x02211C70 MOV X0, X19
	0x02211C74 LDR X8, [X8 + 0x40]
	0x02211C78 CMP X8, X9
	0x02211C7C B.NE 0x2211CA0
	0x02211C80 BL 0x1C16E08
	0x02211C84 LDR X8, [X0]
	0x02211C88 LDR W1, [X0 + 0x8]
	0x02211C8C LDP X20, X19, [X31 + 0x10]
	0x02211C90 MOV X0, X8
	0x02211C94 LDP X30, X21, [X31], #0x20
	0x02211C98 RET
	0x02211C9C BL 0x1C16F20
	0x02211CA0 BL 0x1C171E0
	0x02211CA4 STP X30, X21, [X31 - 0x20]!
	0x02211CA8 STP X20, X19, [X31 + 0x10]
	0x02211CAC LDR X8, [X1 + 0x38]
	0x02211CB0 MOV X19, X1
	0x02211CB4 MOV X20, X0
	0x02211CB8 CBNZ X8, 0x2211CDC
	0x02211CBC ADRP X0, 0x1EE2000
	0x02211CC0 LDR X0, [X0 + 0x6C0]
	0x02211CC4 BL 0x1C16CF4
	0x02211CC8 LDR X8, [X19 + 0x38]
	0x02211CCC CBNZ X8, 0x2211CDC
	0x02211CD0 MOV X0, X19
	0x02211CD4 BL 0x1C5C6E0
	0x02211CD8 LDR X8, [X19 + 0x38]
	0x02211CDC ADRP X9, 0x1EE2000
	0x02211CE0 LDR X9, [X9 + 0x6C0]
	0x02211CE4 LDR X21, [X8]
	0x02211CE8 LDR X0, [X9]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X8, [X1+56]
	009 Move X19, X1
	010 Move X20, X0
	011 Compare X8, 0
	012 JumpIfNotEqual {48}
	013 Move X0, 0x1EE5000
	014 Move X0, [X0+368]
	015 Call 0x1C17CF4
	016 Move X0, 0x1F0B000
	017 Move X0, [X0+4056]
	018 Call 0x1C17CF4
	019 Move X0, 0x1F0B000
	020 Move X0, [X0+4064]
	021 Call 0x1C17CF4
	022 Move X0, 0x1F0B000
	023 Move X0, [X0+4072]
	024 Call 0x1C17CF4
	025 Move X0, 0x1F0B000
	026 Move X0, [X0+4080]
	027 Call 0x1C17CF4
	028 Move X0, 0x1F0C000
	029 Move X0, [X0+16]
	030 Call 0x1C17CF4
	031 Move X0, 0x1F0C000
	032 Move X0, [X0]
	033 Call 0x1C17CF4
	034 Move X0, 0x1F0C000
	035 Move X0, [X0+8]
	036 Call 0x1C17CF4
	037 Move X0, 0x1EE3000
	038 Move X0, [X0+2288]
	039 Call 0x1C17CF4
	040 Move X0, 0x1EE3000
	041 Move X0, [X0+1728]
	042 Call 0x1C17CF4
	043 Move X8, [X19+56]
	044 Compare X8, 0
	045 JumpIfNotEqual {48}
	046 Move X0, X19
	047 Call 0x1C5D6E0
	048 Move X23, 0x1F0C000
	049 Move X23, [X23+16]
	050 Move X0, [X23]
	051 Call 0x1C17D0C
	052 Move X8, [X0+24]
	053 Compare X8, 0
	054 JumpIfNotEqual {69}
	055 Move X8, 0x1F0B000
	056 Move X8, [X8+4080]
	057 Move X0, [X8]
	058 Call 0x1C17F10
	059 Move X8, 0x1F0B000
	060 Move X8, [X8+4056]
	061 Move X21, X0
	062 Move X1, [X8]
	063 Call Dictionary`2<Object, Object>..ctor, X0
	064 Move X0, [X23]
	065 Call 0x1C17D0C
	066 Move [X0+24], X21
	067 Move X0, [X23]
	068 Call 0x1C17D0C
	069 Move X0, [X23]
	070 Call 0x1C17D0C
	071 Move X8, [X0+16]
	072 Compare X8, 0
	073 JumpIfNotEqual {88}
	074 Move X8, 0x1F0B000
	075 Move X8, [X8+4072]
	076 Move X0, [X8]
	077 Call 0x1C17F10
	078 Move X8, 0x1F0B000
	079 Move X8, [X8+4064]
	080 Move X21, X0
	081 Move X1, [X8]
	082 Call Dictionary`2<Object, Object>..ctor, X0
	083 Move X0, [X23]
	084 Call 0x1C17D0C
	085 Move [X0+16], X21
	086 Move X0, [X23]
	087 Call 0x1C17D0C
	088 Move X0, [X23]
	089 Call 0x1C17D0C
	090 Move X8, [X0+8]
	091 Compare X8, 0
	092 JumpIfNotEqual {105}
	093 Move X8, 0x1EE3000
	094 Move X8, [X8+2288]
	095 Move X0, [X8]
	096 Call 0x1C17F10
	097 Move X1, X31
	098 Move X21, X0
	099 Call StringBuilder..ctor, X0
	100 Move X0, [X23]
	101 Call 0x1C17D0C
	102 Move [X0+8], X21
	103 Move X0, [X23]
	104 Call 0x1C17D0C
	105 Move X0, [X23]
	106 Call 0x1C17D0C
	107 Move X8, [X0]
	108 Compare X8, 0
	109 JumpIfNotEqual {124}
	110 Move X8, 0x1F0C000
	111 Move X8, [X8+8]
	112 Move X0, [X8]
	113 Call 0x1C17F10
	114 Move X8, 0x1F0C000
	115 Move X8, [X8]
	116 Move X21, X0
	117 Move X1, [X8]
	118 Call Stack`1<Object>..ctor, X0
	119 Move X0, [X23]
	120 Call 0x1C17D0C
	121 Move [X0], X21
	122 Move X0, [X23]
	123 Call 0x1C17D0C
	124 Move X0, [X23]
	125 Call 0x1C17D0C
	126 Move X0, [X0+8]
	127 Compare X0, 0
	128 JumpIfEqual {232}
	129 Move W1, W31
	130 Move X2, X31
	131 Call StringBuilder.set_Length, X0, X1
	132 Compare X20, 0
	133 JumpIfEqual {232}
	134 Move W8, [X20+16]
	135 NotImplemented "Instruction CMP not yet implemented."
	136 Move X24, 0x1EE5000
	137 Move X24, [X24+368]
	138 Move W21, W31
	139 Move X0, X20
	140 Move W1, W21
	141 Move X2, X31
	142 Call String.get_Chars, X0, X1
	143 And W8, W0, 0xFFFF
	144 NotImplemented "Instruction CMP not yet implemented."
	145 Move W0, 1
	146 Move W1, W21
	147 Move X2, X20
	148 Move X3, X31
	149 Call JsonParser.AppendUntilStringEnd, X0, X1, X2
	150 Move W21, W0
	151 Move W22, W0
	152 Move X0, [X24]
	153 Move W8, [X0+224]
	154 Compare W8, 0
	155 JumpIfNotEqual {157}
	156 Call 0x1C17DFC
	157 Move W0, W22
	158 Move X1, X31
	159 Call Char.IsWhiteSpace, X0
	160 Move TEMP, X0
	161 And TEMP, TEMP, 1
	162 Compare TEMP, 1
	163 JumpIfEqual {172}
	164 Move X0, [X23]
	165 Call 0x1C17D0C
	166 Move X0, [X0+8]
	167 Compare X0, 0
	168 JumpIfEqual {232}
	169 Move W1, W22
	170 Move X2, X31
	171 Call StringBuilder.Append, X0, X1
	172 Move W8, [X20+16]
	173 Add W21, W21, 1
	174 NotImplemented "Instruction CMP not yet implemented."
	175 Move X8, 0x1EE3000
	176 Move X8, [X8+1728]
	177 Move X0, [X8]
	178 Move X8, [X19+56]
	179 Move W9, [X0+224]
	180 Move X20, [X8]
	181 Compare W9, 0
	182 JumpIfNotEqual {184}
	183 Call 0x1C17DFC
	184 Move X0, X20
	185 Move X1, X31
	186 Call Type.GetTypeFromHandle, X0
	187 Move X8, [X23]
	188 Move X20, X0
	189 Move X0, X8
	190 Call 0x1C17D0C
	191 Move X0, [X0+8]
	192 Compare X0, 0
	193 JumpIfEqual {232}
	194 Move X8, [X0]
	195 Move X9, [X8+360]
	196 Move X1, [X8+368]
	197 NotImplemented "Instruction BLR not yet implemented."
	198 Move X1, X0
	199 Move X0, X20
	200 Move X2, X31
	201 Call JsonParser.ParseValue, X0, X1
	202 Move X8, [X19+56]
	203 Move X20, X0
	204 Move X19, [X8+8]
	205 Move W8, [X19+309]
	206 Move TEMP, X8
	207 And TEMP, TEMP, 1
	208 Compare TEMP, 1
	209 JumpIfEqual {213}
	210 Move X0, X19
	211 Call 0x1C5D684
	212 Move X19, X0
	213 Compare X20, 0
	214 JumpIfEqual {223}
	215 Move X0, X20
	216 Move X1, X19
	217 Call 0x1C17E00
	218 Compare X0, 0
	219 JumpIfNotEqual {224}
	220 Move X0, X20
	221 Move X1, X19
	222 Call 0x1C181E0
	223 Move X0, X31
	224 Move X20, [X31+48]
	225 Move X19, [X31+56]
	226 Move X22, [X31+32]
	227 Move X21, [X31+40]
	228 Move X24, [X31+16]
	229 Move X23, [X31+24]
	230 Move X30, [X31+64]
	231 Return X0
	232 Call 0x1C17F20

Method: System.Int32 AppendUntilStringEnd(System.Boolean appendEscapeCharacter, System.Int32 startIdx, System.String json)

Disassembly:
	0x035AA0E0 MOV X21, X0
	0x035AA0E4 LDR W10, [X8 + 0xE0]
	0x035AA0E8 LDR X23, [X9]
	0x035AA0EC CBNZ W10, 0x35AA0F8
	0x035AA0F0 MOV X0, X8
	0x035AA0F4 BL 0x1C16DFC
	0x035AA0F8 MOV X0, X23
	0x035AA0FC MOV X1, X31
	0x035AA100 BL 0x338C698
	0x035AA104 CBZ X21, 0x35AA4B8
	0x035AA108 MOV X23, X0
	0x035AA10C CBZ X0, 0x35AA124
	0x035AA110 LDR X8, [X21]
	0x035AA114 MOV X0, X23
	0x035AA118 LDR X1, [X8 + 0x40]
	0x035AA11C BL 0x1C16E00
	0x035AA120 CBZ X0, 0x35AA4C4
	0x035AA124 LDR W8, [X21 + 0x18]
	0x035AA128 CBZ W8, 0x35AA4BC
	0x035AA12C MOV X0, X20
	0x035AA130 MOV X1, X21
	0x035AA134 MOV X2, X31
	0x035AA138 STR X23, [X21 + 0x20]
	0x035AA13C BL 0x3397418
	0x035AA140 ADRP X8, 0xB49000
	0x035AA144 LDR X8, [X8 + 0x9D0]
	0x035AA148 MOV X20, X0
	0x035AA14C MOVZ W1, 0x1
	0x035AA150 LDR X8, [X8]
	0x035AA154 MOV X0, X8
	0x035AA158 BL 0x1C16D6C
	0x035AA15C ADRP X9, 0xB49000
	0x035AA160 LDR W8, [X19 + 0x18]
	0x035AA164 LDR X9, [X9 + 0x758]
	0x035AA168 MOV X21, X0
	0x035AA16C ADD X1, X31, 0x30
	0x035AA170 CMP W8, 0x0
	0x035AA174 LDR X0, [X9]
	0x035AA178 CINC W8, W8, LT
	0x035AA17C SBFM W8, W8, 0x1, 0x1F
	0x035AA180 STR W8, [X31 + 0x30]
	0x035AA184 BL 0x1C16E04
	0x035AA188 CBZ X21, 0x35AA4B8
	0x035AA18C MOV X23, X0
	0x035AA190 CBZ X0, 0x35AA1A8
	0x035AA194 LDR X8, [X21]
	0x035AA198 MOV X0, X23
	0x035AA19C LDR X1, [X8 + 0x40]
	0x035AA1A0 BL 0x1C16E00
	0x035AA1A4 CBZ X0, 0x35AA4C4
	0x035AA1A8 LDR W8, [X21 + 0x18]
	0x035AA1AC CBZ W8, 0x35AA4BC
	0x035AA1B0 STR X23, [X21 + 0x20]
	0x035AA1B4 CBZ X20, 0x35AA4B8
	0x035AA1B8 MOV X0, X20
	0x035AA1BC MOV X1, X21
	0x035AA1C0 MOV X2, X31
	0x035AA1C4 BL 0x32CC7E8
	0x035AA1C8 ADRP X26, 0xB49000
	0x035AA1CC LDR X26, [X26 + 0x818]
	0x035AA1D0 CBZ X0, 0x35AA398
	0x035AA1D4 LDR X23, [X26]
	0x035AA1D8 MOV X20, X0
	0x035AA1DC MOV X1, X23
	0x035AA1E0 BL 0x1C16E00
	0x035AA1E4 MOV X21, X0
	0x035AA1E8 CBNZ X0, 0x35AA39C
	0x035AA1EC B 0x35A9F7C
	0x035AA1F0 ADRP X8, 0xB53000
	0x035AA1F4 LDR X0, [X24]
	0x035AA1F8 LDR X8, [X8 + 0x968]
	0x035AA1FC LDR W9, [X0 + 0xE0]
	0x035AA200 LDR X21, [X8]
	0x035AA204 CBNZ W9, 0x35AA20C
	0x035AA208 BL 0x1C16DFC
	0x035AA20C MOV X0, X21
	0x035AA210 MOV X1, X31
	0x035AA214 BL 0x338C698
	0x035AA218 MOV X1, X0
	0x035AA21C MOV X0, X20
	0x035AA220 MOV X2, X31
	0x035AA224 BL 0x3395194
	0x035AA228 TBZ X0, 0x0, 0x35AA238
	0x035AA22C MOV X0, X19
	0x035AA230 BL 0x35AA5D0
	0x035AA234 B 0x35A9C48
	0x035AA238 CBZ X19, 0x35AA4B8
	0x035AA23C MOV X0, X19
	0x035AA240 MOV W1, W31
	0x035AA244 MOV X2, X31
	0x035AA248 BL 0x3222A1C
	0x035AA24C AND W8, W0, 0xFFFF
	0x035AA250 CMP W8, 0x7B
	0x035AA254 MOV X21, X31
	0x035AA258 B.NE 0x35A9C4C
	0x035AA25C LDR W8, [X19 + 0x10]
	0x035AA260 MOV X0, X19
	0x035AA264 MOV X2, X31
	0x035AA268 SUB W1, W8, 0x1
	0x035AA26C BL 0x3222A1C
	0x035AA270 AND W8, W0, 0xFFFF

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0xE37000
	009 Move X24, 0xB73000
	010 Move W8, [X21+49]
	011 Move X24, [X24+16]
	012 Move X19, X2
	013 Move W22, W1
	014 Move W20, W0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {24}
	019 Move X0, 0xB73000
	020 Move X0, [X0+16]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X21+49], W8
	024 Move X0, [X24]
	025 Call 0x1C17D0C
	026 Compare X19, 0
	027 JumpIfEqual {113}
	028 Move X21, [X0+8]
	029 Move X0, X19
	030 Move W1, W22
	031 Move X2, X31
	032 Call String.get_Chars, X0, X1
	033 Compare X21, 0
	034 JumpIfEqual {113}
	035 Move W1, W0
	036 Move X0, X21
	037 Move X2, X31
	038 Call StringBuilder.Append, X0, X1
	039 Move W8, [X19+16]
	040 Add W21, W22, 1
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Move X0, X19
	043 Move W1, W21
	044 Move X2, X31
	045 Call String.get_Chars, X0, X1
	046 And W8, W0, 0xFFFF
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Move TEMP, X20
	049 And TEMP, TEMP, 1
	050 Compare TEMP, 1
	051 JumpIfNotEqual {65}
	052 Move X0, [X24]
	053 Call 0x1C17D0C
	054 Move X23, [X0+8]
	055 Move X0, X19
	056 Move W1, W21
	057 Move X2, X31
	058 Call String.get_Chars, X0, X1
	059 Compare X23, 0
	060 JumpIfEqual {113}
	061 Move W1, W0
	062 Move X0, X23
	063 Move X2, X31
	064 Call StringBuilder.Append, X0, X1
	065 Move X0, [X24]
	066 Call 0x1C17D0C
	067 Move X23, [X0+8]
	068 Add W21, W22, 2
	069 Move X0, X19
	070 Move W1, W21
	071 Move X2, X31
	072 Call String.get_Chars, X0, X1
	073 Compare X23, 0
	074 JumpIfEqual {113}
	075 Move W1, W0
	076 Move X0, X23
	077 Move X2, X31
	078 Call StringBuilder.Append, X0, X1
	079 Move X0, X19
	080 Move W1, W21
	081 Move X2, X31
	082 Call String.get_Chars, X0, X1
	083 Move X8, [X24]
	084 Move W22, W0
	085 Move X0, X8
	086 Call 0x1C17D0C
	087 Move X23, [X0+8]
	088 Move X0, X19
	089 Move W1, W21
	090 Move X2, X31
	091 Call String.get_Chars, X0, X1
	092 Compare X23, 0
	093 JumpIfEqual {113}
	094 Move W1, W0
	095 Move X0, X23
	096 Move X2, X31
	097 And W22, W22, 0xFFFF
	098 Call StringBuilder.Append, X0, X1
	099 NotImplemented "Instruction CMP not yet implemented."
	100 Move W8, [X19+16]
	101 Move W22, W21
	102 Add W21, W21, 1
	103 Subtract W21, W8, 1
	104 Move W0, W21
	105 Move X20, [X31+48]
	106 Move X19, [X31+56]
	107 Move X22, [X31+32]
	108 Move X21, [X31+40]
	109 Move X24, [X31+16]
	110 Move X23, [X31+24]
	111 Move X30, [X31+64]
	112 Return X0
	113 Call 0x1C17F20

Method: System.Collections.Generic.List`1<System.String> Split(System.String json)

Disassembly:
	0x035AA274 CMP W8, 0x7D
	0x035AA278 MOV X21, X31
	0x035AA27C B.NE 0x35A9C4C
	0x035AA280 MOV X0, X20
	0x035AA284 MOV X1, X19
	0x035AA288 BL 0x35AAC08
	0x035AA28C B 0x35A9C48
	0x035AA290 MOV X21, X31
	0x035AA294 ADRP X8, 0xB70000
	0x035AA298 LDR X8, [X8 + 0xFE0]
	0x035AA29C MOV X0, X19
	0x035AA2A0 LDR X1, [X8]
	0x035AA2A4 ADD X8, X31, 0x30
	0x035AA2A8 BL 0x301CB58
	0x035AA2AC LDR V0, [X31 + 0x3]
	0x035AA2B0 LDR X8, [X31 + 0x40]
	0x035AA2B4 ADRP X23, 0xB70000
	0x035AA2B8 STR V0, [X31 + 0x1]
	0x035AA2BC STR X8, [X31 + 0x20]
	0x035AA2C0 LDR X23, [X23 + 0xFD0]
	0x035AA2C4 LDR X1, [X23]
	0x035AA2C8 ADD X0, X31, 0x10
	0x035AA2CC BL 0x2BC4350
	0x035AA2D0 TBZ X0, 0x0, 0x35AA34C
	0x035AA2D4 LDR X1, [X31 + 0x20]
	0x035AA2D8 MOV X0, X22
	0x035AA2DC BL 0x35A963C
	0x035AA2E0 CBZ X21, 0x35AA4C0
	0x035AA2E4 LDR X8, [X21]
	0x035AA2E8 LDR X1, [X24]
	0x035AA2EC MOV X20, X0
	0x035AA2F0 LDRH W9, [X8 + 0x12E]
	0x035AA2F4 CBZ X9, 0x35AA318
	0x035AA2F8 LDR X10, [X8 + 0xB0]
	0x035AA2FC ADD X10, X10, 0x8
	0x035AA300 LDUR X11, [X10 - 0x8]
	0x035AA304 CMP X11, X1
	0x035AA308 B.EQ 0x35AA328
	0x035AA30C SUBS X9, X9, 0x1
	0x035AA310 ADD X10, X10, 0x10
	0x035AA314 B.NE 0x35AA300
	0x035AA318 MOVZ W2, 0x2
	0x035AA31C MOV X0, X21
	0x035AA320 BL 0x1C5C788
	0x035AA324 B 0x35AA338
	0x035AA328 LDR W9, [X10]
	0x035AA32C ADD W9, W9, 0x2
	0x035AA330 ADD X8, X8, W9, 0x4, SXTW
	0x035AA334 ADD X0, X8, 0x138
	0x035AA338 LDP X8, X2, [X0]
	0x035AA33C MOV X0, X21
	0x035AA340 MOV X1, X20
	0x035AA344 BLR X8
	0x035AA348 B 0x35AA2C4
	0x035AA34C ADRP X8, 0xB70000
	0x035AA350 LDR X8, [X8 + 0xFC8]
	0x035AA354 ADD X0, X31, 0x10
	0x035AA358 LDR X1, [X8]
	0x035AA35C BL 0x2BC434C
	0x035AA360 ADRP X8, 0xB72000
	0x035AA364 LDR X8, [X8 + 0x10]
	0x035AA368 LDR X0, [X8]
	0x035AA36C BL 0x1C16D0C
	0x035AA370 LDR X0, [X0]
	0x035AA374 CBZ X0, 0x35AA4B8
	0x035AA378 ADRP X8, 0xB87000
	0x035AA37C LDR X8, [X8 + 0x220]
	0x035AA380 MOV X1, X19
	0x035AA384 LDR X2, [X8]
	0x035AA388 BL 0x2602314
	0x035AA38C B 0x35A9C4C
	0x035AA390 MOV X21, X31
	0x035AA394 B 0x35A9C4C
	0x035AA398 MOV X21, X31
	0x035AA39C LDR W8, [X19 + 0x18]
	0x035AA3A0 CMP W8, 0x1
	0x035AA3A4 B.LT 0x35A9C4C
	0x035AA3A8 ADRP X27, 0xB71000
	0x035AA3AC LDR X27, [X27 + 0xB58]
	0x035AA3B0 MOV W20, W31
	0x035AA3B4 LDR X2, [X27]
	0x035AA3B8 MOV X0, X19
	0x035AA3BC MOV W1, W20
	0x035AA3C0 BL 0x301BCCC
	0x035AA3C4 CBZ X0, 0x35AA4B8
	0x035AA3C8 LDR W8, [X0 + 0x10]
	0x035AA3CC CMP W8, 0x3
	0x035AA3D0 B.LT 0x35AA4A4
	0x035AA3D4 LDR X2, [X27]
	0x035AA3D8 MOV X0, X19
	0x035AA3DC MOV W1, W20
	0x035AA3E0 BL 0x301BCCC
	0x035AA3E4 LDR X2, [X27]
	0x035AA3E8 MOV X23, X0
	0x035AA3EC MOV X0, X19
	0x035AA3F0 MOV W1, W20
	0x035AA3F4 BL 0x301BCCC
	0x035AA3F8 CBZ X0, 0x35AA4B8
	0x035AA3FC CBZ X23, 0x35AA4B8
	0x035AA400 LDR W8, [X0 + 0x10]
	0x035AA404 MOVZ W1, 0x1
	0x035AA408 MOV X0, X23
	0x035AA40C MOV X3, X31
	0x035AA410 SUB W2, W8, 0x2
	0x035AA414 BL 0x3228DE4
	0x035AA418 LDR X2, [X27]
	0x035AA41C MOV X23, X0
	0x035AA420 ORR W1, W20, 0x1
	0x035AA424 MOV X0, X19
	0x035AA428 BL 0x301BCCC
	0x035AA42C MOV X1, X0
	0x035AA430 MOV X0, X22
	0x035AA434 BL 0x35A963C
	0x035AA438 CBZ X21, 0x35AA4B8
	0x035AA43C LDR X8, [X21]
	0x035AA440 LDR X1, [X26]
	0x035AA444 MOV X24, X0
	0x035AA448 LDRH W9, [X8 + 0x12E]
	0x035AA44C CBZ X9, 0x35AA470
	0x035AA450 LDR X10, [X8 + 0xB0]
	0x035AA454 ADD X10, X10, 0x8
	0x035AA458 LDUR X11, [X10 - 0x8]
	0x035AA45C CMP X11, X1
	0x035AA460 B.EQ 0x35AA480
	0x035AA464 SUBS X9, X9, 0x1
	0x035AA468 ADD X10, X10, 0x10
	0x035AA46C B.NE 0x35AA458
	0x035AA470 MOVZ W2, 0x5
	0x035AA474 MOV X0, X21
	0x035AA478 BL 0x1C5C788
	0x035AA47C B 0x35AA490
	0x035AA480 LDR W9, [X10]
	0x035AA484 ADD W9, W9, 0x5
	0x035AA488 ADD X8, X8, W9, 0x4, SXTW
	0x035AA48C ADD X0, X8, 0x138
	0x035AA490 LDP X8, X3, [X0]
	0x035AA494 MOV X0, X21
	0x035AA498 MOV X1, X23
	0x035AA49C MOV X2, X24
	0x035AA4A0 BLR X8
	0x035AA4A4 LDR W8, [X19 + 0x18]
	0x035AA4A8 ADD W20, W20, 0x2
	0x035AA4AC CMP W20, W8
	0x035AA4B0 B.LT 0x35AA3B4
	0x035AA4B4 B 0x35A9C4C
	0x035AA4B8 BL 0x1C16F20
	0x035AA4BC BL 0x1C16F28
	0x035AA4C0 BL 0x1C16F20
	0x035AA4C4 BL 0x1C16F44
	0x035AA4C8 MOV X1, X31
	0x035AA4CC BL 0x1C16DEC
	0x035AA4D0 BL 0x3EB1B20
	0x035AA4D4 B 0x35AA4E4
	0x035AA4D8 B 0x35AA55C
	0x035AA4DC B 0x35AA55C
	0x035AA4E0 B 0x35AA55C
	0x035AA4E4 MOV X20, X0
	0x035AA4E8 CMP W1, 0x1
	0x035AA4EC B.NE 0x35AA5BC
	0x035AA4F0 MOV X0, X20
	0x035AA4F4 BL 0x3EB1AD0
	0x035AA4F8 MOV X19, X0
	0x035AA4FC ADRP X0, 0xB4F000
	0x035AA500 LDR X0, [X0 + 0xCC0]
	0x035AA504 BL 0x1C16D08
	0x035AA508 LDR X8, [X19]
	0x035AA50C LDR X1, [X8]
	0x035AA510 BL 0x1C17270
	0x035AA514 TBZ X0, 0x0, 0x35AA530
	0x035AA518 BL 0x3EB1AE0
	0x035AA51C STR W31, [X31 + 0x30]
	0x035AA520 ADRP X0, 0xB49000
	0x035AA524 LDR X0, [X0 + 0x758]
	0x035AA528 BL 0x1C16D08
	0x035AA52C B 0x35A9B7C
	0x035AA530 MOVZ W0, 0x8
	0x035AA534 BL 0x3EB1AF0
	0x035AA538 LDR X8, [X19]
	0x035AA53C STR X8, [X0]
	0x035AA540 ADRP X1, 0x90A000
	0x035AA544 ADD X1, X1, 0xE58
	0x035AA548 MOV X2, X31
	0x035AA54C BL 0x3EB1B00
	0x035AA550 MOV X20, X0
	0x035AA554 BL 0x3EB1AE0
	0x035AA558 B 0x35AA5BC
	0x035AA55C MOV X20, X0
	0x035AA560 CMP W1, 0x1
	0x035AA564 B.NE 0x35AA598
	0x035AA568 MOV X0, X20
	0x035AA56C BL 0x3EB1AD0
	0x035AA570 LDR X22, [X0]
	0x035AA574 BL 0x3EB1AE0
	0x035AA578 ADRP X8, 0xB70000
	0x035AA57C LDR X8, [X8 + 0xFC8]
	0x035AA580 ADD X0, X31, 0x10
	0x035AA584 LDR X1, [X8]
	0x035AA588 BL 0x2BC434C
	0x035AA58C CBZ X22, 0x35AA360
	0x035AA590 MOV X0, X22
	0x035AA594 BL 0x1C16F18
	0x035AA598 MOV X22, X31
	0x035AA59C B 0x35AA5A4
	0x035AA5A0 MOV X20, X0
	0x035AA5A4 ADRP X8, 0xB70000
	0x035AA5A8 LDR X8, [X8 + 0xFC8]
	0x035AA5AC LDR X1, [X8]
	0x035AA5B0 ADD X0, X31, 0x10
	0x035AA5B4 BL 0x2BC434C
	0x035AA5B8 CBNZ X22, 0x35AA5C4
	0x035AA5BC MOV X0, X20
	0x035AA5C0 BL 0x1D2C690
	0x035AA5C4 MOV X0, X22
	0x035AA5C8 BL 0x1C16F18
	0x035AA5CC BL 0x1990590
	0x035AA5D0 SUB X31, X31, 0x70
	0x035AA5D4 STR X30, [X31 + 0x30]
	0x035AA5D8 STP X24, X23, [X31 + 0x40]
	0x035AA5DC STP X22, X21, [X31 + 0x50]
	0x035AA5E0 STP X20, X19, [X31 + 0x60]
	0x035AA5E4 ADRP X20, 0xE36000
	0x035AA5E8 LDRB W8, [X20 + 0x34]
	0x035AA5EC MOV X19, X0
	0x035AA5F0 TBNZ X8, 0x0, 0x35AA704
	0x035AA5F4 ADRP X0, 0xB49000
	0x035AA5F8 LDR X0, [X0 + 0xB58]
	0x035AA5FC BL 0x1C16CF4
	0x035AA600 ADRP X0, 0xB4B000
	0x035AA604 LDR X0, [X0 + 0x170]
	0x035AA608 BL 0x1C16CF4
	0x035AA60C ADRP X0, 0xB4B000
	0x035AA610 LDR X0, [X0 + 0xC48]
	0x035AA614 BL 0x1C16CF4
	0x035AA618 ADRP X0, 0xB49000
	0x035AA61C LDR X0, [X0 + 0x710]
	0x035AA620 BL 0x1C16CF4
	0x035AA624 ADRP X0, 0xB87000
	0x035AA628 LDR X0, [X0 + 0x238]
	0x035AA62C BL 0x1C16CF4
	0x035AA630 ADRP X0, 0xB49000
	0x035AA634 LDR X0, [X0 + 0x720]
	0x035AA638 BL 0x1C16CF4

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X20, 0xE37000
	010 Move X23, 0xB73000
	011 Move W8, [X20+50]
	012 Move X23, [X23+16]
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {41}
	018 Move X0, 0xB73000
	019 Move X0, [X0+16]
	020 Call 0x1C17CF4
	021 Move X0, 0xB4B000
	022 Move X0, [X0+440]
	023 Call 0x1C17CF4
	024 Move X0, 0xB72000
	025 Move X0, [X0+2936]
	026 Call 0x1C17CF4
	027 Move X0, 0xB4B000
	028 Move X0, [X0+448]
	029 Call 0x1C17CF4
	030 Move X0, 0xB4B000
	031 Move X0, [X0+464]
	032 Call 0x1C17CF4
	033 Move X0, 0xB88000
	034 Move X0, [X0+520]
	035 Call 0x1C17CF4
	036 Move X0, 0xB88000
	037 Move X0, [X0+528]
	038 Call 0x1C17CF4
	039 Move W8, 1
	040 Move [X20+50], W8
	041 Move X0, [X23]
	042 Call 0x1C17D0C
	043 Move X8, [X0]
	044 Compare X8, 0
	045 JumpIfEqual {249}
	046 Move W8, [X8+24]
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Move X0, [X23]
	049 Call 0x1C17D0C
	050 Move X0, [X0]
	051 Compare X0, 0
	052 JumpIfEqual {249}
	053 Move X8, 0xB88000
	054 Move X8, [X8+520]
	055 Move X1, [X8]
	056 Call Stack`1<Object>.Pop, X0
	057 Move X20, X0
	058 Compare X20, 0
	059 JumpIfNotEqual {71}
	060 Move X8, 0xB4B000
	061 Move X8, [X8+464]
	062 Move X0, [X8]
	063 Call 0x1C17F10
	064 Move X8, 0xB4B000
	065 Move X8, [X8+448]
	066 Move X20, X0
	067 Move X1, [X8]
	068 Call List`1<Object>..ctor, X0
	069 Compare X20, 0
	070 JumpIfEqual {249}
	071 Move W2, [X20+24]
	072 Move W8, [X20+28]
	073 Add W8, W8, 1
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Move [X20+24], W31
	076 Move [X20+28], W8
	077 Move X0, [X20+16]
	078 Move W1, W31
	079 Move X3, X31
	080 Call Array.Clear, X0, X1, X2
	081 Compare X19, 0
	082 JumpIfEqual {249}
	083 Move W8, [X19+16]
	084 NotImplemented "Instruction CMP not yet implemented."
	085 Move X0, [X23]
	086 Call 0x1C17D0C
	087 Move X0, [X0+8]
	088 Compare X0, 0
	089 JumpIfEqual {249}
	090 Move W1, W31
	091 Move X2, X31
	092 Call StringBuilder.set_Length, X0, X1
	093 Move W8, [X19+16]
	094 Subtract W8, W8, 1
	095 NotImplemented "Instruction CMP not yet implemented."
	096 Move X24, 0xB4B000
	097 Move X24, [X24+440]
	098 Move W25, W31
	099 Move W21, 1
	100 Move X0, X19
	101 Move W1, W21
	102 Move X2, X31
	103 Call String.get_Chars, X0, X1
	104 And W8, W0, 0xFFFF
	105 NotImplemented "Instruction CMP not yet implemented."
	106 Move X0, X19
	107 Move W1, W21
	108 Move X2, X31
	109 Call String.get_Chars, X0, X1
	110 And W8, W0, 0xFFFF
	111 NotImplemented "Instruction CMP not yet implemented."
	112 Add W25, W25, 1
	113 Move X0, X19
	114 Move W1, W21
	115 Move X2, X31
	116 Call String.get_Chars, X0, X1
	117 And W8, W0, 0xFFFF
	118 NotImplemented "Instruction CMP not yet implemented."
	119 Move X0, X19
	120 Move W1, W21
	121 Move X2, X31
	122 Call String.get_Chars, X0, X1
	123 And W8, W0, 0xFFFF
	124 NotImplemented "Instruction CMP not yet implemented."
	125 Subtract W25, W25, 1
	126 Move X0, [X23]
	127 Call 0x1C17D0C
	128 Move X22, [X0+8]
	129 Move X0, X19
	130 Move W1, W21
	131 Move X2, X31
	132 Call String.get_Chars, X0, X1
	133 Compare X22, 0
	134 JumpIfEqual {249}
	135 Move W1, W0
	136 Move X0, X22
	137 Move X2, X31
	138 Call StringBuilder.Append, X0, X1
	139 Move W8, [X19+16]
	140 Add W21, W21, 1
	141 Subtract W8, W8, 1
	142 NotImplemented "Instruction CMP not yet implemented."
	143 Move X0, X19
	144 Move W1, W21
	145 Move X2, X31
	146 Call String.get_Chars, X0, X1
	147 And W8, W0, 0xFFFF
	148 NotImplemented "Instruction CMP not yet implemented."
	149 Move W0, 1
	150 Move W1, W21
	151 Move X2, X19
	152 Call JsonParser.AppendUntilStringEnd, X0, X1, X2
	153 Move W21, W0
	154 Move X0, X19
	155 Move W1, W21
	156 Move X2, X31
	157 Call String.get_Chars, X0, X1
	158 And W8, W0, 0xFFFF
	159 NotImplemented "Instruction CMP not yet implemented."
	160 Compare W25, 0
	161 JumpIfNotEqual {126}
	162 Move X0, X19
	163 Move W1, W21
	164 Move X2, X31
	165 Call String.get_Chars, X0, X1
	166 Compare W25, 0
	167 JumpIfNotEqual {126}
	168 And W8, W0, 0xFFFF
	169 NotImplemented "Instruction CMP not yet implemented."
	170 Move X0, [X23]
	171 Call 0x1C17D0C
	172 Move X0, [X0+8]
	173 Compare X0, 0
	174 JumpIfEqual {249}
	175 Move X8, [X0]
	176 Move X9, [X8+360]
	177 Move X1, [X8+368]
	178 NotImplemented "Instruction BLR not yet implemented."
	179 Move W10, [X20+28]
	180 Move X8, [X20+16]
	181 Move X9, [X24]
	182 Add W10, W10, 1
	183 Move [X20+28], W10
	184 Compare X8, 0
	185 JumpIfEqual {249}
	186 NotImplemented "Instruction LDRSW not yet implemented."
	187 Move W11, [X8+24]
	188 Move X1, X0
	189 NotImplemented "Instruction CMP not yet implemented."
	190 Add W9, W10, 1
	191 Add X8, X8, X10
	192 Move [X20+24], W9
	193 Move [X8+32], X1
	194 Move X8, [X9+32]
	195 Move X0, X20
	196 Move X8, [X8+192]
	197 Move X2, [X8+112]
	198 Call List`1<Object>.AddWithResize, X0, X1
	199 Move X0, [X23]
	200 Call 0x1C17D0C
	201 Move X0, [X0+8]
	202 Compare X0, 0
	203 JumpIfEqual {249}
	204 Move W1, W31
	205 Move X2, X31
	206 Call StringBuilder.set_Length, X0, X1
	207 Move W25, W31
	208 Move X0, [X23]
	209 Call 0x1C17D0C
	210 Move X0, [X0+8]
	211 Compare X0, 0
	212 JumpIfEqual {249}
	213 Move X8, [X0]
	214 Move X9, [X8+360]
	215 Move X1, [X8+368]
	216 NotImplemented "Instruction BLR not yet implemented."
	217 Move X9, 0xB4B000
	218 Move X9, [X9+440]
	219 Move W10, [X20+28]
	220 Move X8, [X20+16]
	221 Move X9, [X9]
	222 Add W10, W10, 1
	223 Move [X20+28], W10
	224 Compare X8, 0
	225 JumpIfEqual {249}
	226 NotImplemented "Instruction LDRSW not yet implemented."
	227 Move W11, [X8+24]
	228 Move X1, X0
	229 NotImplemented "Instruction CMP not yet implemented."
	230 Add W9, W10, 1
	231 Add X8, X8, X10
	232 Move [X20+24], W9
	233 Move [X8+32], X1
	234 Move X8, [X9+32]
	235 Move X0, X20
	236 Move X8, [X8+192]
	237 Move X2, [X8+112]
	238 Call List`1<Object>.AddWithResize, X0, X1
	239 Move X0, X20
	240 Move X20, [X31+48]
	241 Move X19, [X31+56]
	242 Move X22, [X31+32]
	243 Move X21, [X31+40]
	244 Move X24, [X31+16]
	245 Move X23, [X31+24]
	246 Move X30, [X31+64]
	247 Move X25, [X31+72]
	248 Return X0
	249 Call 0x1C17F20

Method: System.Object ParseValue(System.Type type, System.String json)

Disassembly:
	0x035AA63C ADRP X0, 0xB4C000
	0x035AA640 LDR X0, [X0 + 0x978]
	0x035AA644 BL 0x1C16CF4
	0x035AA648 ADRP X0, 0xB70000
	0x035AA64C LDR X0, [X0 + 0xFC8]
	0x035AA650 BL 0x1C16CF4
	0x035AA654 ADRP X0, 0xB70000
	0x035AA658 LDR X0, [X0 + 0xFD0]
	0x035AA65C BL 0x1C16CF4
	0x035AA660 ADRP X0, 0xB70000
	0x035AA664 LDR X0, [X0 + 0xFD8]
	0x035AA668 BL 0x1C16CF4
	0x035AA66C ADRP X0, 0xB49000
	0x035AA670 LDR X0, [X0 + 0x758]
	0x035AA674 BL 0x1C16CF4
	0x035AA678 ADRP X0, 0xB51000
	0x035AA67C LDR X0, [X0 + 0xF18]
	0x035AA680 BL 0x1C16CF4
	0x035AA684 ADRP X0, 0xB70000
	0x035AA688 LDR X0, [X0 + 0xFE0]
	0x035AA68C BL 0x1C16CF4
	0x035AA690 ADRP X0, 0xB82000
	0x035AA694 LDR X0, [X0 + 0x908]
	0x035AA698 BL 0x1C16CF4
	0x035AA69C ADRP X0, 0xB4A000
	0x035AA6A0 LDR X0, [X0 + 0x1C8]
	0x035AA6A4 BL 0x1C16CF4
	0x035AA6A8 ADRP X0, 0xB71000
	0x035AA6AC LDR X0, [X0 + 0xB58]
	0x035AA6B0 BL 0x1C16CF4
	0x035AA6B4 ADRP X0, 0xB4E000
	0x035AA6B8 LDR X0, [X0 + 0x740]
	0x035AA6BC BL 0x1C16CF4
	0x035AA6C0 ADRP X0, 0xB4B000
	0x035AA6C4 LDR X0, [X0 + 0x278]
	0x035AA6C8 BL 0x1C16CF4
	0x035AA6CC ADRP X0, 0xB7D000
	0x035AA6D0 LDR X0, [X0 + 0x7F8]
	0x035AA6D4 BL 0x1C16CF4
	0x035AA6D8 ADRP X0, 0xB53000
	0x035AA6DC LDR X0, [X0 + 0xFF8]
	0x035AA6E0 BL 0x1C16CF4
	0x035AA6E4 ADRP X0, 0xB54000
	0x035AA6E8 LDR X0, [X0]
	0x035AA6EC BL 0x1C16CF4
	0x035AA6F0 ADRP X0, 0xB52000
	0x035AA6F4 LDR X0, [X0 + 0x790]
	0x035AA6F8 BL 0x1C16CF4
	0x035AA6FC MOVZ W8, 0x1
	0x035AA700 STRB W8, [X20 + 0x34]
	0x035AA704 STP X31, X31, [X31 + 0x18]
	0x035AA708 STR X31, [X31 + 0x28]
	0x035AA70C STR X31, [X31 + 0x38]
	0x035AA710 STR W31, [X31 + 0x14]
	0x035AA714 CBZ X19, 0x35AAB80
	0x035AA718 LDR W8, [X19 + 0x10]
	0x035AA71C CBZ W8, 0x35AA964
	0x035AA720 MOV X0, X19
	0x035AA724 MOV W1, W31
	0x035AA728 MOV X2, X31
	0x035AA72C BL 0x3222A1C
	0x035AA730 AND W8, W0, 0xFFFF
	0x035AA734 CMP W8, 0x7B
	0x035AA738 B.NE 0x35AA850
	0x035AA73C LDR W8, [X19 + 0x10]
	0x035AA740 MOV X0, X19
	0x035AA744 MOV X2, X31
	0x035AA748 SUB W1, W8, 0x1
	0x035AA74C BL 0x3222A1C
	0x035AA750 AND W8, W0, 0xFFFF
	0x035AA754 CMP W8, 0x7D
	0x035AA758 B.NE 0x35AA850
	0x035AA75C MOV X0, X19
	0x035AA760 BL 0x35A9274
	0x035AA764 CBZ X0, 0x35AAB80
	0x035AA768 LDR W21, [X0 + 0x18]
	0x035AA76C MOV X20, X0
	0x035AA770 TBNZ X21, 0x0, 0x35AA964
	0x035AA774 ADRP X8, 0xB49000
	0x035AA778 LDR X8, [X8 + 0x720]
	0x035AA77C LDR X0, [X8]
	0x035AA780 BL 0x1C16F10
	0x035AA784 ADRP X8, 0xB87000
	0x035AA788 LDR X8, [X8 + 0x238]
	0x035AA78C CMP W21, 0x0
	0x035AA790 MOV X19, X0
	0x035AA794 LDR X2, [X8]
	0x035AA798 CINC W8, W21, LT
	0x035AA79C SBFM W1, W8, 0x1, 0x1F
	0x035AA7A0 BL 0x2AA481C
	0x035AA7A4 LDR W8, [X20 + 0x18]
	0x035AA7A8 CMP W8, 0x1
	0x035AA7AC B.LT 0x35AAB34
	0x035AA7B0 ADRP X23, 0xB71000
	0x035AA7B4 ADRP X24, 0xB49000
	0x035AA7B8 LDR X23, [X23 + 0xB58]
	0x035AA7BC LDR X24, [X24 + 0x710]
	0x035AA7C0 MOV W21, W31
	0x035AA7C4 LDR X2, [X23]
	0x035AA7C8 MOV X0, X20
	0x035AA7CC MOV W1, W21
	0x035AA7D0 BL 0x301BCCC
	0x035AA7D4 LDR X2, [X23]
	0x035AA7D8 MOV X22, X0
	0x035AA7DC MOV X0, X20
	0x035AA7E0 MOV W1, W21
	0x035AA7E4 BL 0x301BCCC
	0x035AA7E8 CBZ X0, 0x35AAB80
	0x035AA7EC CBZ X22, 0x35AAB80
	0x035AA7F0 LDR W8, [X0 + 0x10]
	0x035AA7F4 MOVZ W1, 0x1
	0x035AA7F8 MOV X0, X22
	0x035AA7FC MOV X3, X31
	0x035AA800 SUB W2, W8, 0x2
	0x035AA804 BL 0x3228DE4
	0x035AA808 LDR X2, [X23]
	0x035AA80C ADD W21, W21, 0x1
	0x035AA810 MOV X22, X0
	0x035AA814 MOV X0, X20
	0x035AA818 MOV W1, W21
	0x035AA81C BL 0x301BCCC
	0x035AA820 BL 0x35AA5D0
	0x035AA824 CBZ X19, 0x35AAB80
	0x035AA828 LDR X3, [X24]
	0x035AA82C MOV X2, X0
	0x035AA830 MOV X0, X19
	0x035AA834 MOV X1, X22
	0x035AA838 BL 0x2AA5098
	0x035AA83C LDR W8, [X20 + 0x18]
	0x035AA840 ADD W21, W21, 0x1
	0x035AA844 CMP W21, W8
	0x035AA848 B.LT 0x35AA7C4
	0x035AA84C B 0x35AAB34
	0x035AA850 MOV X0, X19
	0x035AA854 MOV W1, W31
	0x035AA858 MOV X2, X31
	0x035AA85C BL 0x3222A1C
	0x035AA860 AND W8, W0, 0xFFFF
	0x035AA864 CMP W8, 0x5B
	0x035AA868 B.NE 0x35AA96C
	0x035AA86C LDR W8, [X19 + 0x10]
	0x035AA870 MOV X0, X19
	0x035AA874 MOV X2, X31
	0x035AA878 SUB W1, W8, 0x1
	0x035AA87C BL 0x3222A1C
	0x035AA880 AND W8, W0, 0xFFFF
	0x035AA884 CMP W8, 0x5D
	0x035AA888 B.NE 0x35AA96C
	0x035AA88C MOV X0, X19
	0x035AA890 BL 0x35A9274
	0x035AA894 CBZ X0, 0x35AAB80
	0x035AA898 ADRP X8, 0xB4E000
	0x035AA89C LDR W21, [X0 + 0x18]
	0x035AA8A0 LDR X8, [X8 + 0x740]
	0x035AA8A4 MOV X20, X0
	0x035AA8A8 LDR X0, [X8]
	0x035AA8AC BL 0x1C16F10
	0x035AA8B0 ADRP X8, 0xB82000
	0x035AA8B4 LDR X8, [X8 + 0x908]
	0x035AA8B8 MOV W1, W21
	0x035AA8BC MOV X19, X0
	0x035AA8C0 LDR X2, [X8]
	0x035AA8C4 BL 0x301B830
	0x035AA8C8 ADRP X8, 0xB70000
	0x035AA8CC LDR X8, [X8 + 0xFE0]
	0x035AA8D0 MOV X0, X20
	0x035AA8D4 LDR X1, [X8]
	0x035AA8D8 ADD X8, X31, 0x18
	0x035AA8DC BL 0x301CB58
	0x035AA8E0 ADRP X20, 0xB70000
	0x035AA8E4 ADRP X21, 0xB51000
	0x035AA8E8 LDR X20, [X20 + 0xFD0]
	0x035AA8EC LDR X21, [X21 + 0xF18]
	0x035AA8F0 LDR X1, [X20]
	0x035AA8F4 ADD X0, X31, 0x18
	0x035AA8F8 BL 0x2BC4350
	0x035AA8FC TBZ X0, 0x0, 0x35AAAB8
	0x035AA900 LDR X0, [X31 + 0x28]
	0x035AA904 BL 0x35AA5D0
	0x035AA908 MOV X1, X0
	0x035AA90C CBZ X19, 0x35AAB84
	0x035AA910 LDR W10, [X19 + 0x1C]
	0x035AA914 LDR X8, [X19 + 0x10]
	0x035AA918 LDR X9, [X21]
	0x035AA91C ADD W10, W10, 0x1
	0x035AA920 STR W10, [X19 + 0x1C]
	0x035AA924 CBZ X8, 0x35AAB88
	0x035AA928 LDRSW X10, [X19 + 0x18]
	0x035AA92C LDR W11, [X8 + 0x18]
	0x035AA930 CMP W10, W11
	0x035AA934 B.CS 0x35AA94C
	0x035AA938 ADD W9, W10, 0x1
	0x035AA93C ADD X8, X8, X10, 0x3, LSL
	0x035AA940 STR W9, [X19 + 0x18]
	0x035AA944 STR X1, [X8 + 0x20]
	0x035AA948 B 0x35AA8F0
	0x035AA94C LDR X8, [X9 + 0x20]
	0x035AA950 LDR X8, [X8 + 0xC0]
	0x035AA954 LDR X2, [X8 + 0x70]
	0x035AA958 MOV X0, X19
	0x035AA95C BL 0x301BF90
	0x035AA960 B 0x35AA8F0
	0x035AA964 MOV X19, X31
	0x035AA968 B 0x35AAB34
	0x035AA96C MOV X0, X19
	0x035AA970 MOV W1, W31
	0x035AA974 MOV X2, X31
	0x035AA978 BL 0x3222A1C
	0x035AA97C AND W8, W0, 0xFFFF
	0x035AA980 CMP W8, 0x22
	0x035AA984 B.NE 0x35AA9F0
	0x035AA988 LDR W8, [X19 + 0x10]
	0x035AA98C MOV X0, X19
	0x035AA990 MOV X2, X31
	0x035AA994 SUB W1, W8, 0x1
	0x035AA998 BL 0x3222A1C
	0x035AA99C AND W8, W0, 0xFFFF
	0x035AA9A0 CMP W8, 0x22
	0x035AA9A4 B.NE 0x35AA9F0
	0x035AA9A8 LDR W8, [X19 + 0x10]
	0x035AA9AC MOVZ W1, 0x1
	0x035AA9B0 MOV X0, X19
	0x035AA9B4 MOV X3, X31
	0x035AA9B8 SUB W2, W8, 0x2
	0x035AA9BC BL 0x3228DE4
	0x035AA9C0 CBZ X0, 0x35AAB80
	0x035AA9C4 ADRP X8, 0xB4B000
	0x035AA9C8 LDR X8, [X8 + 0x278]
	0x035AA9CC ADRP X9, 0xB7D000
	0x035AA9D0 MOV X3, X31
	0x035AA9D4 LDR X8, [X8]
	0x035AA9D8 LDR X8, [X8 + 0xB8]
	0x035AA9DC LDR X9, [X9 + 0x7F8]
	0x035AA9E0 LDR X2, [X8]
	0x035AA9E4 LDR X1, [X9]
	0x035AA9E8 BL 0x32293BC
	0x035AA9EC B 0x35AAB30
	0x035AA9F0 MOV X0, X19
	0x035AA9F4 MOV W1, W31
	0x035AA9F8 MOV X2, X31
	0x035AA9FC BL 0x3222A1C
	0x035AAA00 ADRP X8, 0xB4B000
	0x035AAA04 LDR X8, [X8 + 0x170]
	0x035AAA08 MOV W20, W0
	0x035AAA0C LDR X8, [X8]
	0x035AAA10 LDR W9, [X8 + 0xE0]
	0x035AAA14 CBNZ W9, 0x35AAA20
	0x035AAA18 MOV X0, X8
	0x035AAA1C BL 0x1C16DFC
	0x035AAA20 MOV W0, W20
	0x035AAA24 MOV X1, X31
	0x035AAA28 BL 0x33141B4
	0x035AAA2C TBNZ X0, 0x0, 0x35AAA4C
	0x035AAA30 MOV X0, X19
	0x035AAA34 MOV W1, W31
	0x035AAA38 MOV X2, X31
	0x035AAA3C BL 0x3222A1C
	0x035AAA40 AND W8, W0, 0xFFFF
	0x035AAA44 CMP W8, 0x2D
	0x035AAA48 B.NE 0x35AAAF8
	0x035AAA4C ADRP X8, 0xB52000
	0x035AAA50 LDR X8, [X8 + 0x790]
	0x035AAA54 MOV X0, X19
	0x035AAA58 MOV X2, X31
	0x035AAA5C LDR X1, [X8]
	0x035AAA60 BL 0x322BD1C
	0x035AAA64 TBZ X0, 0x0, 0x35AAAD0
	0x035AAA68 ADRP X8, 0xB4B000
	0x035AAA6C LDR X8, [X8 + 0xC48]
	0x035AAA70 LDR X0, [X8]
	0x035AAA74 LDR W8, [X0 + 0xE0]
	0x035AAA78 CBNZ W8, 0x35AAA80
	0x035AAA7C BL 0x1C16DFC
	0x035AAA80 MOV X0, X31
	0x035AAA84 BL 0x3338524
	0x035AAA88 MOV X2, X0
	0x035AAA8C ADD X3, X31, 0x38
	0x035AAA90 MOVZ W1, 0xA7
	0x035AAA94 MOV X0, X19
	0x035AAA98 MOV X4, X31
	0x035AAA9C BL 0x3366A70
	0x035AAAA0 ADRP X8, 0xB4C000
	0x035AAAA4 LDR V0, [X31 + 0x38]
	0x035AAAA8 LDR X8, [X8 + 0x978]
	0x035AAAAC STR D0, [X31 + 0x8]
	0x035AAAB0 LDR X0, [X8]
	0x035AAAB4 B 0x35AAB28
	0x035AAAB8 ADRP X8, 0xB70000
	0x035AAABC LDR X8, [X8 + 0xFC8]
	0x035AAAC0 ADD X0, X31, 0x18
	0x035AAAC4 LDR X1, [X8]
	0x035AAAC8 BL 0x2BC434C
	0x035AAACC B 0x35AAB34
	0x035AAAD0 ADD X1, X31, 0x14
	0x035AAAD4 MOV X0, X19
	0x035AAAD8 MOV X2, X31
	0x035AAADC BL 0x337BDF4
	0x035AAAE0 ADRP X9, 0xB49000
	0x035AAAE4 LDR W8, [X31 + 0x14]
	0x035AAAE8 LDR X9, [X9 + 0x758]
	0x035AAAEC STR W8, [X31 + 0x8]
	0x035AAAF0 LDR X0, [X9]
	0x035AAAF4 B 0x35AAB28
	0x035AAAF8 ADRP X8, 0xB54000
	0x035AAAFC LDR X8, [X8]
	0x035AAB00 MOV X0, X19
	0x035AAB04 MOV X2, X31
	0x035AAB08 LDR X1, [X8]
	0x035AAB0C BL 0x321BA08
	0x035AAB10 TBZ X0, 0x0, 0x35AAB50
	0x035AAB14 ADRP X8, 0xB49000
	0x035AAB18 LDR X8, [X8 + 0xB58]
	0x035AAB1C LDR X0, [X8]
	0x035AAB20 MOVZ W8, 0x1
	0x035AAB24 STRB W8, [X31 + 0x8]
	0x035AAB28 ADD X1, X31, 0x8
	0x035AAB2C BL 0x1C16E04
	0x035AAB30 MOV X19, X0
	0x035AAB34 MOV X0, X19
	0x035AAB38 LDP X20, X19, [X31 + 0x60]
	0x035AAB3C LDP X22, X21, [X31 + 0x50]
	0x035AAB40 LDP X24, X23, [X31 + 0x40]
	0x035AAB44 LDR X30, [X31 + 0x30]
	0x035AAB48 ADD X31, X31, 0x70
	0x035AAB4C RET
	0x035AAB50 ADRP X8, 0xB53000
	0x035AAB54 LDR X8, [X8 + 0xFF8]
	0x035AAB58 MOV X0, X19
	0x035AAB5C MOV X2, X31
	0x035AAB60 LDR X1, [X8]
	0x035AAB64 BL 0x321BA08
	0x035AAB68 MOV X19, X31
	0x035AAB6C TBZ X0, 0x0, 0x35AAB34
	0x035AAB70 ADRP X8, 0xB49000
	0x035AAB74 LDR X8, [X8 + 0xB58]
	0x035AAB78 STRB W31, [X31 + 0x8]
	0x035AAB7C B 0x35AAAB0
	0x035AAB80 BL 0x1C16F20
	0x035AAB84 BL 0x1C16F20
	0x035AAB88 BL 0x1C16F20
	0x035AAB8C B 0x35AAB94
	0x035AAB90 B 0x35AAB94
	0x035AAB94 MOV X20, X0
	0x035AAB98 CMP W1, 0x1
	0x035AAB9C B.NE 0x35AABD0
	0x035AABA0 MOV X0, X20
	0x035AABA4 BL 0x3EB1AD0
	0x035AABA8 LDR X21, [X0]
	0x035AABAC BL 0x3EB1AE0
	0x035AABB0 ADRP X8, 0xB70000
	0x035AABB4 LDR X8, [X8 + 0xFC8]
	0x035AABB8 ADD X0, X31, 0x18
	0x035AABBC LDR X1, [X8]
	0x035AABC0 BL 0x2BC434C
	0x035AABC4 CBZ X21, 0x35AAB34
	0x035AABC8 MOV X0, X21
	0x035AABCC BL 0x1C16F18
	0x035AABD0 MOV X21, X31
	0x035AABD4 B 0x35AABDC
	0x035AABD8 MOV X20, X0
	0x035AABDC ADRP X8, 0xB70000
	0x035AABE0 LDR X8, [X8 + 0xFC8]
	0x035AABE4 LDR X1, [X8]
	0x035AABE8 ADD X0, X31, 0x18
	0x035AABEC BL 0x2BC434C
	0x035AABF0 CBNZ X21, 0x35AABFC
	0x035AABF4 MOV X0, X20
	0x035AABF8 BL 0x1D2C690
	0x035AABFC MOV X0, X21
	0x035AAC00 BL 0x1C16F18
	0x035AAC04 BL 0x1990590
	0x035AAC08 SUB X31, X31, 0x70
	0x035AAC0C STR X30, [X31 + 0x20]
	0x035AAC10 STP X26, X25, [X31 + 0x30]
	0x035AAC14 STP X24, X23, [X31 + 0x40]
	0x035AAC18 STP X22, X21, [X31 + 0x50]
	0x035AAC1C STP X20, X19, [X31 + 0x60]
	0x035AAC20 ADRP X22, 0xE36000
	0x035AAC24 ADRP X19, 0xB7A000
	0x035AAC28 LDRB W8, [X22 + 0x35]
	0x035AAC2C LDR X19, [X19 + 0xB70]
	0x035AAC30 MOV X20, X1
	0x035AAC34 MOV X21, X0
	0x035AAC38 TBNZ X8, 0x0, 0x35AACD4
	0x035AAC3C ADRP X0, 0xB87000
	0x035AAC40 LDR X0, [X0 + 0x240]
	0x035AAC44 BL 0x1C16CF4
	0x035AAC48 ADRP X0, 0xB87000
	0x035AAC4C LDR X0, [X0 + 0x248]
	0x035AAC50 BL 0x1C16CF4
	0x035AAC54 ADRP X0, 0xB87000
	0x035AAC58 LDR X0, [X0 + 0x250]
	0x035AAC5C BL 0x1C16CF4
	0x035AAC60 ADRP X0, 0xB87000
	0x035AAC64 LDR X0, [X0 + 0x258]
	0x035AAC68 BL 0x1C16CF4
	0x035AAC6C ADRP X0, 0xB87000
	0x035AAC70 LDR X0, [X0 + 0x260]
	0x035AAC74 BL 0x1C16CF4
	0x035AAC78 ADRP X0, 0xB87000
	0x035AAC7C LDR X0, [X0 + 0x268]
	0x035AAC80 BL 0x1C16CF4
	0x035AAC84 ADRP X0, 0xB7A000
	0x035AAC88 LDR X0, [X0 + 0xB70]
	0x035AAC8C BL 0x1C16CF4
	0x035AAC90 ADRP X0, 0xB8D000
	0x035AAC94 LDR X0, [X0 + 0x610]
	0x035AAC98 BL 0x1C16CF4
	0x035AAC9C ADRP X0, 0xB8D000
	0x035AACA0 LDR X0, [X0 + 0x618]
	0x035AACA4 BL 0x1C16CF4
	0x035AACA8 ADRP X0, 0xB72000
	0x035AACAC LDR X0, [X0 + 0x10]
	0x035AACB0 BL 0x1C16CF4
	0x035AACB4 ADRP X0, 0xB4A000
	0x035AACB8 LDR X0, [X0 + 0x1C8]
	0x035AACBC BL 0x1C16CF4
	0x035AACC0 ADRP X0, 0xB71000
	0x035AACC4 LDR X0, [X0 + 0xB58]
	0x035AACC8 BL 0x1C16CF4
	0x035AACCC MOVZ W8, 0x1
	0x035AACD0 STRB W8, [X22 + 0x35]
	0x035AACD4 LDR X0, [X19]
	0x035AACD8 STR X31, [X31 + 0x28]
	0x035AACDC STP X31, X31, [X31 + 0x10]
	0x035AACE0 STR X31, [X31 + 0x8]
	0x035AACE4 LDR W8, [X0 + 0xE0]
	0x035AACE8 CBNZ W8, 0x35AACF0
	0x035AACEC BL 0x1C16DFC
	0x035AACF0 MOV X0, X21
	0x035AACF4 MOV X1, X31
	0x035AACF8 BL 0x32A1868
	0x035AACFC MOV X19, X0
	0x035AAD00 MOV X0, X20
	0x035AAD04 BL 0x35A9274
	0x035AAD08 CBZ X0, 0x35AAFC0
	0x035AAD0C LDRB W8, [X0 + 0x18]
	0x035AAD10 MOV X20, X0
	0x035AAD14 TBNZ X8, 0x0, 0x35AAFA0
	0x035AAD18 ADRP X22, 0xB72000
	0x035AAD1C LDR X22, [X22 + 0x10]
	0x035AAD20 LDR X0, [X22]
	0x035AAD24 BL 0x1C16D0C
	0x035AAD28 LDR X0, [X0 + 0x10]
	0x035AAD2C CBZ X0, 0x35AAFC0
	0x035AAD30 ADRP X8, 0xB87000
	0x035AAD34 LDR X8, [X8 + 0x258]
	0x035AAD38 ADD X2, X31, 0x28
	0x035AAD3C MOV X1, X21
	0x035AAD40 LDR X3, [X8]
	0x035AAD44 BL 0x2AA6B2C
	0x035AAD48 TBNZ X0, 0x0, 0x35AADA8
	0x035AAD4C CBZ X21, 0x35AAFC0
	0x035AAD50 LDR X8, [X21]
	0x035AAD54 MOVZ W1, 0x54
	0x035AAD58 MOV X0, X21
	0x035AAD5C LDR X9, [X8 + 0x688]
	0x035AAD60 LDR X2, [X8 + 0x690]
	0x035AAD64 BLR X9
	0x035AAD68 ADRP X8, 0xB8D000
	0x035AAD6C LDR X8, [X8 + 0x610]
	0x035AAD70 LDR X1, [X8]
	0x035AAD74 BL 0x22104DC
	0x035AAD78 LDR X8, [X22]
	0x035AAD7C STR X0, [X31 + 0x28]
	0x035AAD80 MOV X0, X8
	0x035AAD84 BL 0x1C16D0C
	0x035AAD88 LDR X0, [X0 + 0x10]
	0x035AAD8C CBZ X0, 0x35AAFC0
	0x035AAD90 ADRP X8, 0xB87000
	0x035AAD94 LDR X2, [X31 + 0x28]
	0x035AAD98 LDR X8, [X8 + 0x240]
	0x035AAD9C MOV X1, X21
	0x035AADA0 LDR X3, [X8]
	0x035AADA4 BL 0x2AA5098
	0x035AADA8 LDR X0, [X22]
	0x035AADAC BL 0x1C16D0C
	0x035AADB0 LDR X0, [X0 + 0x18]
	0x035AADB4 CBZ X0, 0x35AAFC0
	0x035AADB8 ADRP X8, 0xB87000
	0x035AADBC LDR X8, [X8 + 0x260]
	0x035AADC0 ADD X2, X31, 0x18
	0x035AADC4 MOV X1, X21
	0x035AADC8 LDR X3, [X8]
	0x035AADCC BL 0x2AA6B2C
	0x035AADD0 TBNZ X0, 0x0, 0x35AAE30
	0x035AADD4 CBZ X21, 0x35AAFC0
	0x035AADD8 LDR X8, [X21]
	0x035AADDC MOVZ W1, 0x54
	0x035AADE0 MOV X0, X21
	0x035AADE4 LDR X9, [X8 + 0x7E8]
	0x035AADE8 LDR X2, [X8 + 0x7F0]
	0x035AADEC BLR X9
	0x035AADF0 ADRP X8, 0xB8D000
	0x035AADF4 LDR X8, [X8 + 0x618]
	0x035AADF8 LDR X1, [X8]
	0x035AADFC BL 0x22104DC
	0x035AAE00 LDR X8, [X22]
	0x035AAE04 STR X0, [X31 + 0x18]
	0x035AAE08 MOV X0, X8
	0x035AAE0C BL 0x1C16D0C
	0x035AAE10 LDR X0, [X0 + 0x18]
	0x035AAE14 CBZ X0, 0x35AAFC0
	0x035AAE18 ADRP X8, 0xB87000
	0x035AAE1C LDR X2, [X31 + 0x18]
	0x035AAE20 LDR X8, [X8 + 0x248]
	0x035AAE24 MOV X1, X21
	0x035AAE28 LDR X3, [X8]
	0x035AAE2C BL 0x2AA5098
	0x035AAE30 LDR W8, [X20 + 0x18]
	0x035AAE34 CMP W8, 0x1
	0x035AAE38 B.LT 0x35AAFA0
	0x035AAE3C ADRP X24, 0xB71000
	0x035AAE40 ADRP X25, 0xB87000
	0x035AAE44 ADRP X26, 0xB87000
	0x035AAE48 LDR X24, [X24 + 0xB58]
	0x035AAE4C LDR X25, [X25 + 0x268]
	0x035AAE50 LDR X26, [X26 + 0x250]
	0x035AAE54 MOV W21, W31
	0x035AAE58 LDR X2, [X24]
	0x035AAE5C MOV X0, X20
	0x035AAE60 MOV W1, W21
	0x035AAE64 BL 0x301BCCC
	0x035AAE68 CBZ X0, 0x35AAFC0
	0x035AAE6C LDR W8, [X0 + 0x10]
	0x035AAE70 CMP W8, 0x3
	0x035AAE74 B.LT 0x35AAF90
	0x035AAE78 LDR X2, [X24]
	0x035AAE7C MOV X0, X20
	0x035AAE80 MOV W1, W21
	0x035AAE84 BL 0x301BCCC
	0x035AAE88 LDR X2, [X24]
	0x035AAE8C MOV X22, X0
	0x035AAE90 MOV X0, X20
	0x035AAE94 MOV W1, W21
	0x035AAE98 BL 0x301BCCC
	0x035AAE9C CBZ X0, 0x35AAFC0
	0x035AAEA0 CBZ X22, 0x35AAFC0
	0x035AAEA4 LDR W8, [X0 + 0x10]
	0x035AAEA8 MOVZ W1, 0x1
	0x035AAEAC MOV X0, X22
	0x035AAEB0 MOV X3, X31
	0x035AAEB4 SUB W2, W8, 0x2
	0x035AAEB8 BL 0x3228DE4
	0x035AAEBC LDR X2, [X24]
	0x035AAEC0 MOV X23, X0
	0x035AAEC4 ADD W1, W21, 0x1
	0x035AAEC8 MOV X0, X20
	0x035AAECC BL 0x301BCCC
	0x035AAED0 LDR X8, [X31 + 0x28]
	0x035AAED4 CBZ X8, 0x35AAFC0
	0x035AAED8 LDR X3, [X25]
	0x035AAEDC MOV X22, X0
	0x035AAEE0 ADD X2, X31, 0x10
	0x035AAEE4 MOV X0, X8
	0x035AAEE8 MOV X1, X23
	0x035AAEEC BL 0x2AA6B2C
	0x035AAEF0 TBZ X0, 0x0, 0x35AAF30
	0x035AAEF4 LDR X23, [X31 + 0x10]
	0x035AAEF8 CBZ X23, 0x35AAFC0
	0x035AAEFC LDR X8, [X23]
	0x035AAF00 MOV X0, X23
	0x035AAF04 LDR X9, [X8 + 0x258]
	0x035AAF08 LDR X1, [X8 + 0x260]
	0x035AAF0C BLR X9
	0x035AAF10 MOV X1, X22
	0x035AAF14 BL 0x35A963C
	0x035AAF18 MOV X2, X0
	0x035AAF1C MOV X0, X23
	0x035AAF20 MOV X1, X19
	0x035AAF24 MOV X3, X31
	0x035AAF28 BL 0x32CCF10
	0x035AAF2C B 0x35AAF90
	0x035AAF30 LDR X0, [X31 + 0x18]
	0x035AAF34 CBZ X0, 0x35AAFC0
	0x035AAF38 LDR X3, [X26]
	0x035AAF3C ADD X2, X31, 0x8
	0x035AAF40 MOV X1, X23
	0x035AAF44 BL 0x2AA6B2C
	0x035AAF48 TBZ X0, 0x0, 0x35AAF90
	0x035AAF4C LDR X23, [X31 + 0x8]
	0x035AAF50 CBZ X23, 0x35AAFC0
	0x035AAF54 LDR X8, [X23]
	0x035AAF58 MOV X0, X23
	0x035AAF5C LDR X9, [X8 + 0x248]
	0x035AAF60 LDR X1, [X8 + 0x250]
	0x035AAF64 BLR X9
	0x035AAF68 MOV X1, X22
	0x035AAF6C BL 0x35A963C
	0x035AAF70 LDR X8, [X23]
	0x035AAF74 MOV X2, X0
	0x035AAF78 MOV X0, X23
	0x035AAF7C MOV X1, X19
	0x035AAF80 LDR X9, [X8 + 0x2E8]
	0x035AAF84 LDR X4, [X8 + 0x2F0]
	0x035AAF88 MOV X3, X31
	0x035AAF8C BLR X9
	0x035AAF90 LDR W8, [X20 + 0x18]
	0x035AAF94 ADD W21, W21, 0x2
	0x035AAF98 CMP W21, W8
	0x035AAF9C B.LT 0x35AAE58
	0x035AAFA0 MOV X0, X19
	0x035AAFA4 LDP X20, X19, [X31 + 0x60]
	0x035AAFA8 LDP X22, X21, [X31 + 0x50]
	0x035AAFAC LDP X24, X23, [X31 + 0x40]
	0x035AAFB0 LDP X26, X25, [X31 + 0x30]
	0x035AAFB4 LDR X30, [X31 + 0x20]
	0x035AAFB8 ADD X31, X31, 0x70
	0x035AAFBC RET
	0x035AAFC0 BL 0x1C16F20
	0x035AAFC4 SUB X31, X31, 0xA0
	0x035AAFC8 STP X29, X30, [X31 + 0x40]
	0x035AAFCC STP X28, X27, [X31 + 0x50]
	0x035AAFD0 STP X26, X25, [X31 + 0x60]
	0x035AAFD4 STP X24, X23, [X31 + 0x70]
	0x035AAFD8 STP X22, X21, [X31 + 0x80]
	0x035AAFDC STP X20, X19, [X31 + 0x90]
	0x035AAFE0 MRS X23, 0xC000
	0x035AAFE4 LDR X8, [X23 + 0x28]
	0x035AAFE8 ADRP X21, 0xE36000
	0x035AAFEC MOV X20, X1
	0x035AAFF0 MOV X19, X0
	0x035AAFF4 STR X8, [X31 + 0x38]
	0x035AAFF8 LDRB W8, [X21 + 0x37]
	0x035AAFFC TBNZ X8, 0x0, 0x35AB1C4
	0x035AB000 ADRP X0, 0xB71000
	0x035AB004 LDR X0, [X0 + 0x248]
	0x035AB008 BL 0x1C16CF4
	0x035AB00C ADRP X0, 0xB48000
	0x035AB010 LDR X0, [X0 + 0xB58]
	0x035AB014 BL 0x1C16CF4
	0x035AB018 ADRP X0, 0xB6F000
	0x035AB01C LDR X0, [X0 + 0xD68]
	0x035AB020 BL 0x1C16CF4
	0x035AB024 ADRP X0, 0xB6F000
	0x035AB028 LDR X0, [X0 + 0xD70]
	0x035AB02C BL 0x1C16CF4
	0x035AB030 ADRP X0, 0xB4A000
	0x035AB034 LDR X0, [X0 + 0xC48]
	0x035AB038 BL 0x1C16CF4
	0x035AB03C ADRP X0, 0xB7A000
	0x035AB040 LDR X0, [X0 + 0x140]
	0x035AB044 BL 0x1C16CF4
	0x035AB048 ADRP X0, 0xB70000
	0x035AB04C LDR X0, [X0 + 0x5F0]
	0x035AB050 BL 0x1C16CF4
	0x035AB054 ADRP X0, 0xB71000
	0x035AB058 LDR X0, [X0 + 0x388]
	0x035AB05C BL 0x1C16CF4
	0x035AB060 ADRP X0, 0xB70000
	0x035AB064 LDR X0, [X0 + 0xA78]
	0x035AB068 BL 0x1C16CF4
	0x035AB06C ADRP X0, 0xB4B000
	0x035AB070 LDR X0, [X0 + 0x978]
	0x035AB074 BL 0x1C16CF4
	0x035AB078 ADRP X0, 0xB48000
	0x035AB07C LDR X0, [X0 + 0x818]
	0x035AB080 BL 0x1C16CF4
	0x035AB084 ADRP X0, 0xB48000
	0x035AB088 LDR X0, [X0 + 0xE00]
	0x035AB08C BL 0x1C16CF4
	0x035AB090 ADRP X0, 0xB50000
	0x035AB094 LDR X0, [X0 + 0xDB8]
	0x035AB098 BL 0x1C16CF4
	0x035AB09C ADRP X0, 0xB48000
	0x035AB0A0 LDR X0, [X0 + 0xE18]
	0x035AB0A4 BL 0x1C16CF4
	0x035AB0A8 ADRP X0, 0xB4F000
	0x035AB0AC LDR X0, [X0 + 0x2F8]
	0x035AB0B0 BL 0x1C16CF4
	0x035AB0B4 ADRP X0, 0xB70000
	0x035AB0B8 LDR X0, [X0 + 0xFD0]
	0x035AB0BC BL 0x1C16CF4
	0x035AB0C0 ADRP X0, 0xB6F000
	0x035AB0C4 LDR X0, [X0 + 0xD78]
	0x035AB0C8 BL 0x1C16CF4
	0x035AB0CC ADRP X0, 0xB6F000
	0x035AB0D0 LDR X0, [X0 + 0xD80]
	0x035AB0D4 BL 0x1C16CF4
	0x035AB0D8 ADRP X0, 0xB6F000
	0x035AB0DC LDR X0, [X0 + 0xD88]
	0x035AB0E0 BL 0x1C16CF4
	0x035AB0E4 ADRP X0, 0xB6F000
	0x035AB0E8 LDR X0, [X0 + 0xD90]
	0x035AB0EC BL 0x1C16CF4
	0x035AB0F0 ADRP X0, 0xB70000
	0x035AB0F4 LDR X0, [X0 + 0xA80]
	0x035AB0F8 BL 0x1C16CF4
	0x035AB0FC ADRP X0, 0xB48000
	0x035AB100 LDR X0, [X0 + 0xA90]
	0x035AB104 BL 0x1C16CF4
	0x035AB108 ADRP X0, 0xB70000
	0x035AB10C LDR X0, [X0 + 0xB60]
	0x035AB110 BL 0x1C16CF4
	0x035AB114 ADRP X0, 0xB4A000
	0x035AB118 LDR X0, [X0 + 0x278]
	0x035AB11C BL 0x1C16CF4
	0x035AB120 ADRP X0, 0xB48000
	0x035AB124 LDR X0, [X0 + 0x6C0]
	0x035AB128 BL 0x1C16CF4
	0x035AB12C ADRP X0, 0xB6F000
	0x035AB130 LDR X0, [X0 + 0xD98]
	0x035AB134 BL 0x1C16CF4
	0x035AB138 ADRP X0, 0xB6F000
	0x035AB13C LDR X0, [X0 + 0xDA0]
	0x035AB140 BL 0x1C16CF4
	0x035AB144 ADRP X0, 0xB50000
	0x035AB148 LDR X0, [X0 + 0x720]
	0x035AB14C BL 0x1C16CF4
	0x035AB150 ADRP X0, 0xB6F000
	0x035AB154 LDR X0, [X0 + 0xDA8]
	0x035AB158 BL 0x1C16CF4
	0x035AB15C ADRP X0, 0xB86000
	0x035AB160 LDR X0, [X0 + 0x280]
	0x035AB164 BL 0x1C16CF4
	0x035AB168 ADRP X0, 0xB86000
	0x035AB16C LDR X0, [X0 + 0x288]
	0x035AB170 BL 0x1C16CF4
	0x035AB174 ADRP X0, 0xB48000
	0x035AB178 LDR X0, [X0 + 0x830]
	0x035AB17C BL 0x1C16CF4
	0x035AB180 ADRP X0, 0xB86000
	0x035AB184 LDR X0, [X0 + 0x290]
	0x035AB188 BL 0x1C16CF4
	0x035AB18C ADRP X0, 0xB52000
	0x035AB190 LDR X0, [X0 + 0xFF8]
	0x035AB194 BL 0x1C16CF4
	0x035AB198 ADRP X0, 0xB6F000
	0x035AB19C LDR X0, [X0 + 0x278]
	0x035AB1A0 BL 0x1C16CF4
	0x035AB1A4 ADRP X0, 0xB86000
	0x035AB1A8 LDR X0, [X0 + 0x298]
	0x035AB1AC BL 0x1C16CF4
	0x035AB1B0 ADRP X0, 0xB53000
	0x035AB1B4 LDR X0, [X0]
	0x035AB1B8 BL 0x1C16CF4
	0x035AB1BC MOVZ W8, 0x1
	0x035AB1C0 STRB W8, [X21 + 0x37]
	0x035AB1C4 STR W31, [X31 + 0x1C]
	0x035AB1C8 STR X31, [X31 + 0x10]
	0x035AB1CC STP X31, X31, [X31 + 0x20]
	0x035AB1D0 CBZ X20, 0x35AB394
	0x035AB1D4 ADRP X24, 0xB70000
	0x035AB1D8 ADRP X25, 0xB48000
	0x035AB1DC LDR X24, [X24 + 0xB60]
	0x035AB1E0 LDR X25, [X25 + 0x6C0]
	0x035AB1E4 MOV X0, X20
	0x035AB1E8 MOV X1, X31
	0x035AB1EC BL 0x33BE520
	0x035AB1F0 LDR X8, [X25]
	0x035AB1F4 LDR X22, [X24]
	0x035AB1F8 MOV X21, X0
	0x035AB1FC LDR W9, [X8 + 0xE0]
	0x035AB200 CBNZ W9, 0x35AB20C
	0x035AB204 MOV X0, X8
	0x035AB208 BL 0x1C16DFC
	0x035AB20C MOV X0, X22
	0x035AB210 MOV X1, X31
	0x035AB214 BL 0x338C698
	0x035AB218 MOV X1, X0
	0x035AB21C MOV X0, X21
	0x035AB220 MOV X2, X31
	0x035AB224 BL 0x3395194
	0x035AB228 TBNZ X0, 0x0, 0x35AB268
	0x035AB22C ADRP X8, 0xB6F000
	0x035AB230 LDR X0, [X25]
	0x035AB234 LDR X8, [X8 + 0xD70]
	0x035AB238 LDR W9, [X0 + 0xE0]
	0x035AB23C LDR X22, [X8]
	0x035AB240 CBNZ W9, 0x35AB248
	0x035AB244 BL 0x1C16DFC
	0x035AB248 MOV X0, X22
	0x035AB24C MOV X1, X31
	0x035AB250 BL 0x338C698
	0x035AB254 MOV X1, X0
	0x035AB258 MOV X0, X21
	0x035AB25C MOV X2, X31
	0x035AB260 BL 0x3395194
	0x035AB264 TBZ X0, 0x0, 0x35AB3B4
	0x035AB268 CBZ X19, 0x35ABF58
	0x035AB26C MOVZ W1, 0x22
	0x035AB270 MOV X0, X19
	0x035AB274 MOV X2, X31
	0x035AB278 BL 0x3233D30
	0x035AB27C ADRP X8, 0xB4A000
	0x035AB280 LDR X8, [X8 + 0x278]
	0x035AB284 LDR X1, [X8]
	0x035AB288 LDR X8, [X20]
	0x035AB28C CMP X8, X1
	0x035AB290 B.NE 0x35ABEE4
	0x035AB294 LDR W8, [X20 + 0x10]
	0x035AB298 CMP W8, 0x1
	0x035AB29C B.LT 0x35AB380
	0x035AB2A0 ADRP X24, 0xB86000
	0x035AB2A4 ADRP X25, 0xB50000
	0x035AB2A8 ADRP X26, 0xB86000
	0x035AB2AC ADRP X27, 0xB86000
	0x035AB2B0 LDR X24, [X24 + 0x280]
	0x035AB2B4 LDR X25, [X25 + 0x720]
	0x035AB2B8 LDR X26, [X26 + 0x290]
	0x035AB2BC LDR X27, [X27 + 0x288]
	0x035AB2C0 MOV W21, W31
	0x035AB2C4 MOV X0, X20
	0x035AB2C8 MOV W1, W21
	0x035AB2CC MOV X2, X31
	0x035AB2D0 BL 0x3222A1C
	0x035AB2D4 AND W22, W0, 0xFFFF
	0x035AB2D8 CMP W22, 0x20
	0x035AB2DC B.CC 0x35AB2F0
	0x035AB2E0 CMP W22, 0x5C
	0x035AB2E4 B.EQ 0x35AB2F0
	0x035AB2E8 CMP W22, 0x22
	0x035AB2EC B.NE 0x35AB360
	0x035AB2F0 MOVZ W1, 0x5C
	0x035AB2F4 MOV X0, X19
	0x035AB2F8 MOV X2, X31
	0x035AB2FC BL 0x3233D30
	0x035AB300 LDR X0, [X24]
	0x035AB304 CBZ X0, 0x35ABF58
	0x035AB308 MOV W1, W22
	0x035AB30C MOV X2, X31
	0x035AB310 BL 0x322BD98
	0x035AB314 TBNZ X0, 0x1F, 0x35AB338
	0x035AB318 MOV W1, W0
	0x035AB31C LDR X0, [X27]
	0x035AB320 CBZ X0, 0x35ABF58
	0x035AB324 MOV X2, X31
	0x035AB328 BL 0x3222A1C
	0x035AB32C MOV W1, W0
	0x035AB330 MOV X0, X19
	0x035AB334 B 0x35AB368
	0x035AB338 LDR X0, [X25]
	0x035AB33C ADD X1, X31, 0xC
	0x035AB340 STR W22, [X31 + 0xC]
	0x035AB344 BL 0x1C16E04
	0x035AB348 LDR X1, [X26]
	0x035AB34C MOV X2, X0
	0x035AB350 MOV X0, X19
	0x035AB354 MOV X3, X31
	0x035AB358 BL 0x3234224
	0x035AB35C B 0x35AB370
	0x035AB360 MOV X0, X19
	0x035AB364 MOV W1, W22
	0x035AB368 MOV X2, X31
	0x035AB36C BL 0x3233D30
	0x035AB370 LDR W8, [X20 + 0x10]
	0x035AB374 ADD W21, W21, 0x1
	0x035AB378 CMP W21, W8
	0x035AB37C B.LT 0x35AB2C4
	0x035AB380 MOVZ W1, 0x22
	0x035AB384 MOV X0, X19
	0x035AB388 MOV X2, X31
	0x035AB38C BL 0x3233D30
	0x035AB390 B 0x35AB5A8
	0x035AB394 CBZ X19, 0x35ABF58
	0x035AB398 ADRP X8, 0xB48000
	0x035AB39C LDR X8, [X8 + 0x830]
	0x035AB3A0 LDR X1, [X8]
	0x035AB3A4 MOV X0, X19
	0x035AB3A8 MOV X2, X31
	0x035AB3AC BL 0x32333E0
	0x035AB3B0 B 0x35AB5A8
	0x035AB3B4 ADRP X8, 0xB6F000
	0x035AB3B8 LDR X0, [X25]
	0x035AB3BC LDR X8, [X8 + 0xD68]
	0x035AB3C0 LDR W9, [X0 + 0xE0]
	0x035AB3C4 LDR X22, [X8]
	0x035AB3C8 CBNZ W9, 0x35AB3D0
	0x035AB3CC BL 0x1C16DFC
	0x035AB3D0 MOV X0, X22
	0x035AB3D4 MOV X1, X31
	0x035AB3D8 BL 0x338C698
	0x035AB3DC MOV X1, X0
	0x035AB3E0 MOV X0, X21
	0x035AB3E4 MOV X2, X31
	0x035AB3E8 BL 0x3395194
	0x035AB3EC TBNZ X0, 0x0, 0x35AB594
	0x035AB3F0 ADRP X8, 0xB6F000
	0x035AB3F4 LDR X0, [X25]
	0x035AB3F8 LDR X8, [X8 + 0xD90]
	0x035AB3FC LDR W9, [X0 + 0xE0]
	0x035AB400 LDR X22, [X8]
	0x035AB404 CBNZ W9, 0x35AB40C
	0x035AB408 BL 0x1C16DFC
	0x035AB40C MOV X0, X22
	0x035AB410 MOV X1, X31
	0x035AB414 BL 0x338C698
	0x035AB418 MOV X1, X0
	0x035AB41C MOV X0, X21
	0x035AB420 MOV X2, X31
	0x035AB424 BL 0x3395194
	0x035AB428 TBNZ X0, 0x0, 0x35AB594
	0x035AB42C ADRP X8, 0xB6F000
	0x035AB430 LDR X0, [X25]
	0x035AB434 LDR X8, [X8 + 0xD78]
	0x035AB438 LDR W9, [X0 + 0xE0]
	0x035AB43C LDR X22, [X8]
	0x035AB440 CBNZ W9, 0x35AB448
	0x035AB444 BL 0x1C16DFC
	0x035AB448 MOV X0, X22
	0x035AB44C MOV X1, X31
	0x035AB450 BL 0x338C698
	0x035AB454 MOV X1, X0
	0x035AB458 MOV X0, X21
	0x035AB45C MOV X2, X31
	0x035AB460 BL 0x3395194
	0x035AB464 TBNZ X0, 0x0, 0x35AB594
	0x035AB468 ADRP X8, 0xB6F000
	0x035AB46C LDR X0, [X25]
	0x035AB470 LDR X8, [X8 + 0xD98]
	0x035AB474 LDR W9, [X0 + 0xE0]
	0x035AB478 LDR X22, [X8]
	0x035AB47C CBNZ W9, 0x35AB484
	0x035AB480 BL 0x1C16DFC
	0x035AB484 MOV X0, X22
	0x035AB488 MOV X1, X31
	0x035AB48C BL 0x338C698
	0x035AB490 MOV X1, X0
	0x035AB494 MOV X0, X21
	0x035AB498 MOV X2, X31
	0x035AB49C BL 0x3395194
	0x035AB4A0 TBNZ X0, 0x0, 0x35AB594
	0x035AB4A4 ADRP X8, 0xB6F000
	0x035AB4A8 LDR X0, [X25]
	0x035AB4AC LDR X8, [X8 + 0xD80]
	0x035AB4B0 LDR W9, [X0 + 0xE0]
	0x035AB4B4 LDR X22, [X8]
	0x035AB4B8 CBNZ W9, 0x35AB4C0
	0x035AB4BC BL 0x1C16DFC
	0x035AB4C0 MOV X0, X22
	0x035AB4C4 MOV X1, X31
	0x035AB4C8 BL 0x338C698
	0x035AB4CC MOV X1, X0
	0x035AB4D0 MOV X0, X21
	0x035AB4D4 MOV X2, X31
	0x035AB4D8 BL 0x3395194
	0x035AB4DC TBNZ X0, 0x0, 0x35AB594
	0x035AB4E0 ADRP X8, 0xB6F000
	0x035AB4E4 LDR X0, [X25]
	0x035AB4E8 LDR X8, [X8 + 0xDA0]
	0x035AB4EC LDR W9, [X0 + 0xE0]
	0x035AB4F0 LDR X22, [X8]
	0x035AB4F4 CBNZ W9, 0x35AB4FC
	0x035AB4F8 BL 0x1C16DFC
	0x035AB4FC MOV X0, X22
	0x035AB500 MOV X1, X31
	0x035AB504 BL 0x338C698
	0x035AB508 MOV X1, X0
	0x035AB50C MOV X0, X21
	0x035AB510 MOV X2, X31
	0x035AB514 BL 0x3395194
	0x035AB518 TBNZ X0, 0x0, 0x35AB594
	0x035AB51C ADRP X8, 0xB6F000
	0x035AB520 LDR X0, [X25]
	0x035AB524 LDR X8, [X8 + 0xD88]
	0x035AB528 LDR W9, [X0 + 0xE0]
	0x035AB52C LDR X22, [X8]
	0x035AB530 CBNZ W9, 0x35AB538
	0x035AB534 BL 0x1C16DFC
	0x035AB538 MOV X0, X22
	0x035AB53C MOV X1, X31
	0x035AB540 BL 0x338C698
	0x035AB544 MOV X1, X0
	0x035AB548 MOV X0, X21
	0x035AB54C MOV X2, X31
	0x035AB550 BL 0x3395194
	0x035AB554 TBNZ X0, 0x0, 0x35AB594
	0x035AB558 ADRP X8, 0xB6F000
	0x035AB55C LDR X0, [X25]
	0x035AB560 LDR X8, [X8 + 0xDA8]
	0x035AB564 LDR W9, [X0 + 0xE0]
	0x035AB568 LDR X22, [X8]
	0x035AB56C CBNZ W9, 0x35AB574
	0x035AB570 BL 0x1C16DFC
	0x035AB574 MOV X0, X22
	0x035AB578 MOV X1, X31
	0x035AB57C BL 0x338C698
	0x035AB580 MOV X1, X0
	0x035AB584 MOV X0, X21
	0x035AB588 MOV X2, X31
	0x035AB58C BL 0x3395194
	0x035AB590 TBZ X0, 0x0, 0x35AB5D8
	0x035AB594 CBZ X19, 0x35ABF58
	0x035AB598 MOV X0, X19
	0x035AB59C MOV X1, X20
	0x035AB5A0 MOV X2, X31
	0x035AB5A4 BL 0x3233F90
	0x035AB5A8 LDR X8, [X23 + 0x28]
	0x035AB5AC LDR X9, [X31 + 0x38]
	0x035AB5B0 CMP X8, X9
	0x035AB5B4 B.NE 0x35AC1B4
	0x035AB5B8 LDP X20, X19, [X31 + 0x90]
	0x035AB5BC LDP X22, X21, [X31 + 0x80]
	0x035AB5C0 LDP X24, X23, [X31 + 0x70]
	0x035AB5C4 LDP X26, X25, [X31 + 0x60]
	0x035AB5C8 LDP X28, X27, [X31 + 0x50]
	0x035AB5CC LDP X29, X30, [X31 + 0x40]

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+96], X30
	003 Move [X31+104], X27
	004 Move [X31+112], X26
	005 Move [X31+120], X25
	006 Move [X31+128], X24
	007 Move [X31+136], X23
	008 Move [X31+144], X22
	009 Move [X31+152], X21
	010 Move [X31+160], X20
	011 Move [X31+168], X19
	012 NotImplemented "Instruction MRS not yet implemented."
	013 Move X8, [X25+40]
	014 Move X21, 0xE37000
	015 Move X23, 0xB72000
	016 Move X24, 0xB4A000
	017 Move [X31+88], X8
	018 Move W8, [X21+51]
	019 Move X23, [X23+2912]
	020 Move X24, [X24+1728]
	021 Move X19, X1
	022 Move X20, X0
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {122}
	027 Move X0, 0xB53000
	028 Move X0, [X0+2264]
	029 Call 0x1C17CF4
	030 Move X0, 0xB53000
	031 Move X0, [X0+2536]
	032 Call 0x1C17CF4
	033 Move X0, 0xB4C000
	034 Move X0, [X0+3144]
	035 Call 0x1C17CF4
	036 Move X0, 0xB7C000
	037 Move X0, [X0+320]
	038 Call 0x1C17CF4
	039 Move X0, 0xB72000
	040 Move X0, [X0+1520]
	041 Call 0x1C17CF4
	042 Move X0, 0xB73000
	043 Move X0, [X0+904]
	044 Call 0x1C17CF4
	045 Move X0, 0xB4A000
	046 Move X0, [X0+3576]
	047 Call 0x1C17CF4
	048 Move X0, 0xB88000
	049 Move X0, [X0+536]
	050 Call 0x1C17CF4
	051 Move X0, 0xB71000
	052 Move X0, [X0+4040]
	053 Call 0x1C17CF4
	054 Move X0, 0xB71000
	055 Move X0, [X0+4048]
	056 Call 0x1C17CF4
	057 Move X0, 0xB71000
	058 Move X0, [X0+4056]
	059 Call 0x1C17CF4
	060 Move X0, 0xB4A000
	061 Move X0, [X0+2072]
	062 Call 0x1C17CF4
	063 Move X0, 0xB51000
	064 Move X0, [X0+760]
	065 Call 0x1C17CF4
	066 Move X0, 0xB71000
	067 Move X0, [X0+3456]
	068 Call 0x1C17CF4
	069 Move X0, 0xB4A000
	070 Move X0, [X0+1880]
	071 Call 0x1C17CF4
	072 Move X0, 0xB73000
	073 Move X0, [X0+16]
	074 Call 0x1C17CF4
	075 Move X0, 0xB71000
	076 Move X0, [X0+4064]
	077 Call 0x1C17CF4
	078 Move X0, 0xB4B000
	079 Move X0, [X0+456]
	080 Call 0x1C17CF4
	081 Move X0, 0xB72000
	082 Move X0, [X0+2904]
	083 Call 0x1C17CF4
	084 Move X0, 0xB73000
	085 Move X0, [X0+32]
	086 Call 0x1C17CF4
	087 Move X0, 0xB4A000
	088 Move X0, [X0+2512]
	089 Call 0x1C17CF4
	090 Move X0, 0xB54000
	091 Move X0, [X0+2408]
	092 Call 0x1C17CF4
	093 Move X0, 0xB88000
	094 Move X0, [X0+544]
	095 Call 0x1C17CF4
	096 Move X0, 0xB4A000
	097 Move X0, [X0+2288]
	098 Call 0x1C17CF4
	099 Move X0, 0xB72000
	100 Move X0, [X0+2912]
	101 Call 0x1C17CF4
	102 Move X0, 0xB4C000
	103 Move X0, [X0+632]
	104 Call 0x1C17CF4
	105 Move X0, 0xB52000
	106 Move X0, [X0+3168]
	107 Call 0x1C17CF4
	108 Move X0, 0xB4A000
	109 Move X0, [X0+1728]
	110 Call 0x1C17CF4
	111 Move X0, 0xB88000
	112 Move X0, [X0+552]
	113 Call 0x1C17CF4
	114 Move X0, 0xB4A000
	115 Move X0, [X0+2096]
	116 Call 0x1C17CF4
	117 Move X0, 0xB88000
	118 Move X0, [X0+560]
	119 Call 0x1C17CF4
	120 Move W8, 1
	121 Move [X21+51], W8
	122 Move X0, [X24]
	123 Move [X31+44], W31
	124 Move [X31+72], X31
	125 Move [X31+80], X31
	126 Move [X31+16], X31
	127 Move [X31+24], X31
	128 Move [X31+32], X31
	129 Move W8, [X0+224]
	130 Move X21, [X23]
	131 Compare W8, 0
	132 JumpIfNotEqual {134}
	133 Call 0x1C17DFC
	134 Move X0, X21
	135 Move X1, X31
	136 Call Type.GetTypeFromHandle, X0
	137 Move X1, X0
	138 Move X0, X20
	139 Move X2, X31
	140 Call Type.op_Equality, X0, X1
	141 Move TEMP, X0
	142 And TEMP, TEMP, 1
	143 Compare TEMP, 1
	144 JumpIfNotEqual {286}
	145 Move X8, 0xB53000
	146 Move X8, [X8+2264]
	147 Move W1, 2
	148 Move X0, [X8]
	149 Call 0x1C17D6C
	150 Compare X0, 0
	151 JumpIfEqual {1020}
	152 Move W8, [X0+24]
	153 Move X20, X0
	154 Compare W8, 0
	155 JumpIfEqual {1021}
	156 Move W9, 34
	157 NotImplemented "Instruction CMP not yet implemented."
	158 NotImplemented "Instruction STRH not yet implemented."
	159 Move W8, 39
	160 NotImplemented "Instruction STRH not yet implemented."
	161 Compare X19, 0
	162 JumpIfEqual {1020}
	163 Move W8, [X19+16]
	164 NotImplemented "Instruction CMP not yet implemented."
	165 Move X0, X19
	166 Move W1, W31
	167 Move X2, X31
	168 Call String.get_Chars, X0, X1
	169 Move X21, 0xB88000
	170 Move X21, [X21+536]
	171 Move W1, W0
	172 Move X0, X20
	173 Move X2, [X21]
	174 Call 0x21BB2BC, X0, X1
	175 Move TEMP, X0
	176 And TEMP, TEMP, 1
	177 Compare TEMP, 1
	178 JumpIfEqual {192}
	179 Move W8, [X19+16]
	180 Move X0, X19
	181 Move X2, X31
	182 Subtract W1, W8, 1
	183 Call String.get_Chars, X0, X1
	184 Move X2, [X21]
	185 Move W1, W0
	186 Move X0, X20
	187 Call 0x21BB2BC, X0, X1
	188 Move TEMP, X0
	189 And TEMP, TEMP, 1
	190 Compare TEMP, 1
	191 JumpIfNotEqual {418}
	192 Move W21, [X19+16]
	193 NotImplemented "Instruction CMP not yet implemented."
	194 Move X8, 0xB4A000
	195 Move X8, [X8+2288]
	196 Move X0, [X8]
	197 Call 0x1C17F10
	198 Move W1, W21
	199 Move X2, X31
	200 Move X20, X0
	201 Call StringBuilder..ctor, X0, X1
	202 Move W8, [X19+16]
	203 Subtract W8, W8, 1
	204 NotImplemented "Instruction CMP not yet implemented."
	205 Move X23, 0xB88000
	206 Move X24, 0xB88000
	207 Move X23, [X23+552]
	208 Move X24, [X24+560]
	209 Move W21, 1
	210 Move X0, X19
	211 Move W1, W21
	212 Move X2, X31
	213 Call String.get_Chars, X0, X1
	214 And W8, W0, 0xFFFF
	215 NotImplemented "Instruction CMP not yet implemented."
	216 Move W8, [X19+16]
	217 Add W22, W21, 1
	218 Subtract W8, W8, 1
	219 NotImplemented "Instruction CMP not yet implemented."
	220 Move X0, X19
	221 Move W1, W22
	222 Move X2, X31
	223 Call String.get_Chars, X0, X1
	224 Move X8, [X23]
	225 Compare X8, 0
	226 JumpIfEqual {1020}
	227 Move W1, W0
	228 Move X0, X8
	229 Move X2, X31
	230 Call String.IndexOf, X0, X1
	231 Move TEMP, X0
	232 And TEMP, TEMP, -2147483648
	233 Compare TEMP, -2147483648
	234 JumpIfEqual {244}
	235 Move W1, W0
	236 Move X0, [X24]
	237 Compare X0, 0
	238 JumpIfEqual {1020}
	239 Move X2, X31
	240 Call String.get_Chars, X0, X1
	241 Compare X20, 0
	242 JumpIfEqual {1020}
	243 Move W1, W0
	244 Move X0, X19
	245 Move W1, W22
	246 Move X2, X31
	247 Call String.get_Chars, X0, X1
	248 And W8, W0, 0xFFFF
	249 NotImplemented "Instruction CMP not yet implemented."
	250 Move W8, [X19+16]
	251 Add W22, W21, 5
	252 Subtract W8, W8, 1
	253 NotImplemented "Instruction CMP not yet implemented."
	254 Add W1, W21, 2
	255 Move W2, 4
	256 Move X0, X19
	257 Move X3, X31
	258 Call String.Substring, X0, X1, X2
	259 Add X3, X31, 44
	260 Move W1, 512
	261 Move X2, X31
	262 Move X4, X31
	263 Call UInt32.TryParse, X0, X1, X2, X3
	264 Move TEMP, X0
	265 And TEMP, TEMP, 1
	266 Compare TEMP, 1
	267 JumpIfNotEqual {271}
	268 Compare X20, 0
	269 JumpIfEqual {1020}
	270 Move W1, [X31+44]
	271 Move X0, X19
	272 Move W1, W21
	273 Move X2, X31
	274 Call String.get_Chars, X0, X1
	275 Compare X20, 0
	276 JumpIfEqual {1020}
	277 Move W1, W0
	278 Move W22, W21
	279 Move X0, X20
	280 Move X2, X31
	281 Call StringBuilder.Append, X0, X1
	282 Move W8, [X19+16]
	283 Add W21, W22, 1
	284 Subtract W8, W8, 1
	285 NotImplemented "Instruction CMP not yet implemented."
	286 Compare X20, 0
	287 JumpIfEqual {1020}
	288 Move X0, X20
	289 Move X1, X31
	290 Call Type.get_IsPrimitive, X0
	291 Move TEMP, X0
	292 And TEMP, TEMP, 1
	293 Compare TEMP, 1
	294 JumpIfNotEqual {323}
	295 Move X8, 0xB4C000
	296 Move X8, [X8+3144]
	297 Move X0, [X8]
	298 Move W8, [X0+224]
	299 Compare W8, 0
	300 JumpIfNotEqual {302}
	301 Call 0x1C17DFC
	302 Move X0, X31
	303 Call CultureInfo.get_InvariantCulture
	304 Move X8, 0xB53000
	305 Move X8, [X8+2536]
	306 Move X21, X0
	307 Move X8, [X8]
	308 Move W9, [X8+224]
	309 Compare W9, 0
	310 JumpIfNotEqual {313}
	311 Move X0, X8
	312 Call 0x1C17DFC
	313 Move X0, X19
	314 Move X1, X20
	315 Move X2, X21
	316 Move X3, X31
	317 Call Convert.ChangeType, X0, X1, X2
	318 Move X8, 0xB4C000
	319 Move X8, [X8+632]
	320 Move X8, [X8]
	321 Move X8, [X8+184]
	322 Move X21, [X8]
	323 Move X8, 0xB7C000
	324 Move X0, [X24]
	325 Move X8, [X8+320]
	326 Move W9, [X0+224]
	327 Move X21, [X8]
	328 Compare W9, 0
	329 JumpIfNotEqual {331}
	330 Call 0x1C17DFC
	331 Move X0, X21
	332 Move X1, X31
	333 Call Type.GetTypeFromHandle, X0
	334 Move X1, X0
	335 Move X0, X20
	336 Move X2, X31
	337 Call Type.op_Equality, X0, X1
	338 Move TEMP, X0
	339 And TEMP, TEMP, 1
	340 Compare TEMP, 1
	341 JumpIfNotEqual {371}
	342 Move X8, 0xB4C000
	343 Move X8, [X8+3144]
	344 Move X0, [X8]
	345 Move W8, [X0+224]
	346 Compare W8, 0
	347 JumpIfNotEqual {349}
	348 Call 0x1C17DFC
	349 Move X0, X31
	350 Call CultureInfo.get_InvariantCulture
	351 Move X21, 0xB72000
	352 Move X21, [X21+1520]
	353 Move X20, X0
	354 Move X8, [X21]
	355 Move W9, [X8+224]
	356 Compare W9, 0
	357 JumpIfNotEqual {360}
	358 Move X0, X8
	359 Call 0x1C17DFC
	360 Add X3, X31, 72
	361 Move W1, 167
	362 Move X0, X19
	363 Move X2, X20
	364 Move X4, X31
	365 Call Decimal.TryParse, X0, X1, X2, X3
	366 NotImplemented "Instruction LDUR not yet implemented."
	367 Move X0, [X21]
	368 Move [X31+3], V0
	369 Add X1, X31, 48
	370 Call 0x1C17E04
	371 Move X8, 0xB4A000
	372 Move X8, [X8+2096]
	373 Move X0, X19
	374 Move X2, X31
	375 Move X1, [X8]
	376 Call String.op_Equality, X0, X1
	377 Move X21, X31
	378 Move TEMP, X0
	379 And TEMP, TEMP, 1
	380 Compare TEMP, 1
	381 JumpIfEqual {427}
	382 Move X8, [X20]
	383 Move X0, X20
	384 Move X9, [X8+1416]
	385 Move X1, [X8+1424]
	386 NotImplemented "Instruction BLR not yet implemented."
	387 Move TEMP, X0
	388 And TEMP, TEMP, 1
	389 Compare TEMP, 1
	390 JumpIfNotEqual {443}
	391 Compare X19, 0
	392 JumpIfEqual {1020}
	393 Move X0, X19
	394 Move W1, W31
	395 Move X2, X31
	396 Call String.get_Chars, X0, X1
	397 And W8, W0, 0xFFFF
	398 NotImplemented "Instruction CMP not yet implemented."
	399 Move W8, [X19+16]
	400 Move W1, 1
	401 Move X0, X19
	402 Move X3, X31
	403 Subtract W2, W8, 2
	404 Call String.Substring, X0, X1, X2
	405 Move X19, X0
	406 Move X8, 0xB4A000
	407 Move X8, [X8+3576]
	408 Move X0, [X8]
	409 Move W8, [X0+224]
	410 Compare W8, 0
	411 JumpIfNotEqual {413}
	412 Call 0x1C17DFC
	413 Move X0, X20
	414 Move X1, X19
	415 Move W2, W31
	416 Move X3, X31
	417 Call Enum.Parse, X0, X1, X2
	418 Move X21, X19
	419 Compare X20, 0
	420 JumpIfEqual {1020}
	421 Move X8, [X20]
	422 Move X0, X20
	423 Move X9, [X8+360]
	424 Move X1, [X8+368]
	425 NotImplemented "Instruction BLR not yet implemented."
	426 Move X21, X0
	427 Move X8, [X25+40]
	428 Move X9, [X31+88]
	429 NotImplemented "Instruction CMP not yet implemented."
	430 Move X0, X21
	431 Move X20, [X31+160]
	432 Move X19, [X31+168]
	433 Move X22, [X31+144]
	434 Move X21, [X31+152]
	435 Move X24, [X31+128]
	436 Move X23, [X31+136]
	437 Move X26, [X31+112]
	438 Move X25, [X31+120]
	439 Move X30, [X31+96]
	440 Move X27, [X31+104]
	441 Add X31, X31, 176
	442 Return X0
	443 Move X0, X20
	444 Move X1, X31
	445 Call Type.get_IsArray, X0
	446 Move X8, [X20]
	447 Move TEMP, X0
	448 And TEMP, TEMP, 1
	449 Compare TEMP, 1
	450 JumpIfNotEqual {505}
	451 Move X9, [X8+1064]
	452 Move X1, [X8+1072]
	453 Move X0, X20
	454 NotImplemented "Instruction BLR not yet implemented."
	455 Compare X19, 0
	456 JumpIfEqual {1020}
	457 Move X20, X0
	458 Move X0, X19
	459 Move W1, W31
	460 Move X2, X31
	461 Call String.get_Chars, X0, X1
	462 And W8, W0, 0xFFFF
	463 NotImplemented "Instruction CMP not yet implemented."
	464 Move X21, X31
	465 Move W8, [X19+16]
	466 Move X0, X19
	467 Move X2, X31
	468 Subtract W1, W8, 1
	469 Call String.get_Chars, X0, X1
	470 And W8, W0, 0xFFFF
	471 NotImplemented "Instruction CMP not yet implemented."
	472 Move X21, X31
	473 Move X0, X19
	474 Call JsonParser.Split, X0
	475 Compare X0, 0
	476 JumpIfEqual {1020}
	477 Move W1, [X0+24]
	478 Move X19, X0
	479 Move X0, X20
	480 Move X2, X31
	481 Call Array.CreateInstance, X0, X1
	482 Move W8, [X19+24]
	483 Move X21, X0
	484 NotImplemented "Instruction CMP not yet implemented."
	485 Move X23, 0xB72000
	486 Move X23, [X23+2904]
	487 Move W22, W31
	488 Move X2, [X23]
	489 Move X0, X19
	490 Move W1, W22
	491 Call List`1<Object>.get_Item, X0, X1
	492 Move X1, X0
	493 Move X0, X20
	494 Call JsonParser.ParseValue, X0, X1
	495 Compare X21, 0
	496 JumpIfEqual {1020}
	497 Move X1, X0
	498 Move X0, X21
	499 Move W2, W22
	500 Move X3, X31
	501 Call Array.SetValue, X0, X1, X2
	502 Move W8, [X19+24]
	503 Add W22, W22, 1
	504 NotImplemented "Instruction CMP not yet implemented."
	505 Move X9, [X8+968]
	506 Move X1, [X8+976]
	507 Move X0, X20
	508 NotImplemented "Instruction BLR not yet implemented."
	509 Move TEMP, X0
	510 And TEMP, TEMP, 1
	511 Compare TEMP, 1
	512 JumpIfNotEqual {660}
	513 Move X8, [X20]
	514 Move X0, X20
	515 Move X9, [X8+1096]
	516 Move X1, [X8+1104]
	517 NotImplemented "Instruction BLR not yet implemented."
	518 Move X9, 0xB73000
	519 Move X8, [X24]
	520 Move X9, [X9+32]
	521 Move X21, X0
	522 Move W10, [X8+224]
	523 Move X22, [X9]
	524 Compare W10, 0
	525 JumpIfNotEqual {528}
	526 Move X0, X8
	527 Call 0x1C17DFC
	528 Move X0, X22
	529 Move X1, X31
	530 Call Type.GetTypeFromHandle, X0
	531 Move X1, X0
	532 Move X0, X21
	533 Move X2, X31
	534 Call Type.op_Equality, X0, X1
	535 Move TEMP, X0
	536 And TEMP, TEMP, 1
	537 Compare TEMP, 1
	538 JumpIfNotEqual {660}
	539 Move X8, [X20]
	540 Move X0, X20
	541 Move X9, [X8+1128]
	542 Move X1, [X8+1136]
	543 NotImplemented "Instruction BLR not yet implemented."
	544 Compare X0, 0
	545 JumpIfEqual {1020}
	546 Move W8, [X0+24]
	547 Compare W8, 0
	548 JumpIfEqual {1021}
	549 Compare X19, 0
	550 JumpIfEqual {1020}
	551 Move X22, [X0+32]
	552 Move X0, X19
	553 Move W1, W31
	554 Move X2, X31
	555 Call String.get_Chars, X0, X1
	556 And W8, W0, 0xFFFF
	557 NotImplemented "Instruction CMP not yet implemented."
	558 Move X21, X31
	559 Move W8, [X19+16]
	560 Move X0, X19
	561 Move X2, X31
	562 Subtract W1, W8, 1
	563 Call String.get_Chars, X0, X1
	564 And W8, W0, 0xFFFF
	565 NotImplemented "Instruction CMP not yet implemented."
	566 Move X21, X31
	567 Move X0, X19
	568 Call JsonParser.Split, X0
	569 Move X8, 0xB52000
	570 Move X8, [X8+3168]
	571 Move X19, X0
	572 Move W1, 1
	573 Move X8, [X8]
	574 Move X0, X8
	575 Call 0x1C17D6C
	576 Move X9, 0xB71000
	577 Move X8, [X24]
	578 Move X9, [X9+3456]
	579 Move X21, X0
	580 Move W10, [X8+224]
	581 Move X23, [X9]
	582 Compare W10, 0
	583 JumpIfNotEqual {586}
	584 Move X0, X8
	585 Call 0x1C17DFC
	586 Move X0, X23
	587 Move X1, X31
	588 Call Type.GetTypeFromHandle, X0
	589 Compare X21, 0
	590 JumpIfEqual {1020}
	591 Move X23, X0
	592 Compare X0, 0
	593 JumpIfEqual {600}
	594 Move X8, [X21]
	595 Move X0, X23
	596 Move X1, [X8+64]
	597 Call 0x1C17E00
	598 Compare X0, 0
	599 JumpIfEqual {1023}
	600 Move W8, [X21+24]
	601 Compare W8, 0
	602 JumpIfEqual {1021}
	603 Move X0, X20
	604 Move X1, X21
	605 Move X2, X31
	606 Move [X21+32], X23
	607 Call Type.GetConstructor, X0, X1
	608 Move X8, 0xB4A000
	609 Move X8, [X8+2512]
	610 Move X20, X0
	611 Move W1, 1
	612 Move X8, [X8]
	613 Move X0, X8
	614 Call 0x1C17D6C
	615 Compare X19, 0
	616 JumpIfEqual {1020}
	617 Move X9, 0xB4A000
	618 Move W8, [X19+24]
	619 Move X9, [X9+1880]
	620 Move X21, X0
	621 Add X1, X31, 12
	622 Move [X31+12], W8
	623 Move X0, [X9]
	624 Call 0x1C17E04
	625 Compare X21, 0
	626 JumpIfEqual {1020}
	627 Move X23, X0
	628 Compare X0, 0
	629 JumpIfEqual {636}
	630 Move X8, [X21]
	631 Move X0, X23
	632 Move X1, [X8+64]
	633 Call 0x1C17E00
	634 Compare X0, 0
	635 JumpIfEqual {1023}
	636 Move W8, [X21+24]
	637 Compare W8, 0
	638 JumpIfEqual {1021}
	639 Move [X21+32], X23
	640 Compare X20, 0
	641 JumpIfEqual {1020}
	642 Move X0, X20
	643 Move X1, X21
	644 Move X2, X31
	645 Call ConstructorInfo.Invoke, X0, X1
	646 Move X24, 0xB51000
	647 Move X24, [X24+760]
	648 Compare X0, 0
	649 JumpIfEqual {882}
	650 Move X23, [X24]
	651 Move X20, X0
	652 Move X1, X23
	653 Call 0x1C17E00
	654 Move X21, X0
	655 Compare X0, 0
	656 JumpIfNotEqual {883}
	657 Move X0, X20
	658 Move X1, X23
	659 Call 0x1C181E0
	660 Move X8, [X20]
	661 Move X0, X20
	662 Move X9, [X8+968]
	663 Move X1, [X8+976]
	664 NotImplemented "Instruction BLR not yet implemented."
	665 Move TEMP, X0
	666 And TEMP, TEMP, 1
	667 Compare TEMP, 1
	668 JumpIfNotEqual {841}
	669 Move X8, [X20]
	670 Move X0, X20
	671 Move X9, [X8+1096]
	672 Move X1, [X8+1104]
	673 NotImplemented "Instruction BLR not yet implemented."
	674 Move X9, 0xB73000
	675 Move X8, [X24]
	676 Move X9, [X9+904]
	677 Move X21, X0
	678 Move W10, [X8+224]
	679 Move X22, [X9]
	680 Compare W10, 0
	681 JumpIfNotEqual {684}
	682 Move X0, X8
	683 Call 0x1C17DFC
	684 Move X0, X22
	685 Move X1, X31
	686 Call Type.GetTypeFromHandle, X0
	687 Move X1, X0
	688 Move X0, X21
	689 Move X2, X31
	690 Call Type.op_Equality, X0, X1
	691 Move TEMP, X0
	692 And TEMP, TEMP, 1
	693 Compare TEMP, 1
	694 JumpIfNotEqual {841}
	695 Move X8, [X20]
	696 Move X0, X20
	697 Move X9, [X8+1128]
	698 Move X1, [X8+1136]
	699 NotImplemented "Instruction BLR not yet implemented."
	700 Compare X0, 0
	701 JumpIfEqual {1020}
	702 Move W8, [X0+24]
	703 Compare W8, 0
	704 JumpIfEqual {1021}
	705 NotImplemented "Instruction CMP not yet implemented."
	706 Move X8, [X24]
	707 Move X21, [X0+32]
	708 Move X22, [X0+40]
	709 Move X23, [X23]
	710 Move W9, [X8+224]
	711 Compare W9, 0
	712 JumpIfNotEqual {715}
	713 Move X0, X8
	714 Call 0x1C17DFC
	715 Move X0, X23
	716 Move X1, X31
	717 Call Type.GetTypeFromHandle, X0
	718 Move X1, X0
	719 Move X0, X21
	720 Move X2, X31
	721 Call Type.op_Inequality, X0, X1
	722 Move X21, X31
	723 Move TEMP, X0
	724 And TEMP, TEMP, 1
	725 Compare TEMP, 1
	726 JumpIfEqual {427}
	727 Compare X19, 0
	728 JumpIfEqual {1020}
	729 Move X0, X19
	730 Move W1, W31
	731 Move X2, X31
	732 Call String.get_Chars, X0, X1
	733 And W8, W0, 0xFFFF
	734 NotImplemented "Instruction CMP not yet implemented."
	735 Move X21, X31
	736 Move W8, [X19+16]
	737 Move X0, X19
	738 Move X2, X31
	739 Subtract W1, W8, 1
	740 Call String.get_Chars, X0, X1
	741 And W8, W0, 0xFFFF
	742 NotImplemented "Instruction CMP not yet implemented."
	743 Move X21, X31
	744 Move X0, X19
	745 Call JsonParser.Split, X0
	746 Compare X0, 0
	747 JumpIfEqual {1020}
	748 Move W8, [X0+24]
	749 Move X19, X0
	750 Move TEMP, X8
	751 And TEMP, TEMP, 1
	752 Compare TEMP, 1
	753 JumpIfEqual {948}
	754 Move X8, 0xB51000
	755 Move X8, [X8+3168]
	756 Move W1, 1
	757 Move X0, [X8]
	758 Call 0x1C17D6C
	759 Move X9, 0xB70000
	760 Move X8, [X24]
	761 Move X9, [X9+3456]
	762 Move X21, X0
	763 Move W10, [X8+224]
	764 Move X23, [X9]
	765 Compare W10, 0
	766 JumpIfNotEqual {769}
	767 Move X0, X8
	768 Call 0x1C17DFC
	769 Move X0, X23
	770 Move X1, X31
	771 Call Type.GetTypeFromHandle, X0
	772 Compare X21, 0
	773 JumpIfEqual {1020}
	774 Move X23, X0
	775 Compare X0, 0
	776 JumpIfEqual {783}
	777 Move X8, [X21]
	778 Move X0, X23
	779 Move X1, [X8+64]
	780 Call 0x1C17E00
	781 Compare X0, 0
	782 JumpIfEqual {1023}
	783 Move W8, [X21+24]
	784 Compare W8, 0
	785 JumpIfEqual {1021}
	786 Move X0, X20
	787 Move X1, X21
	788 Move X2, X31
	789 Move [X21+32], X23
	790 Call Type.GetConstructor, X0, X1
	791 Move X8, 0xB49000
	792 Move X8, [X8+2512]
	793 Move X20, X0
	794 Move W1, 1
	795 Move X8, [X8]
	796 Move X0, X8
	797 Call 0x1C17D6C
	798 Move X9, 0xB49000
	799 Move W8, [X19+24]
	800 Move X9, [X9+1880]
	801 Move X21, X0
	802 Add X1, X31, 48
	803 NotImplemented "Instruction CMP not yet implemented."
	804 Move X0, [X9]
	805 NotImplemented "Instruction CINC not yet implemented."
	806 NotImplemented "Instruction SBFM not yet implemented."
	807 Move [X31+48], W8
	808 Call 0x1C17E04
	809 Compare X21, 0
	810 JumpIfEqual {1020}
	811 Move X23, X0
	812 Compare X0, 0
	813 JumpIfEqual {820}
	814 Move X8, [X21]
	815 Move X0, X23
	816 Move X1, [X8+64]
	817 Call 0x1C17E00
	818 Compare X0, 0
	819 JumpIfEqual {1023}
	820 Move W8, [X21+24]
	821 Compare W8, 0
	822 JumpIfEqual {1021}
	823 Move [X21+32], X23
	824 Compare X20, 0
	825 JumpIfEqual {1020}
	826 Move X0, X20
	827 Move X1, X21
	828 Move X2, X31
	829 Call ConstructorInfo.Invoke, X0, X1
	830 Move X26, 0xB49000
	831 Move X26, [X26+2072]
	832 Compare X0, 0
	833 JumpIfEqual {949}
	834 Move X23, [X26]
	835 Move X20, X0
	836 Move X1, X23
	837 Call 0x1C17E00
	838 Move X21, X0
	839 Compare X0, 0
	840 JumpIfNotEqual {950}
	841 Move X8, 0xB53000
	842 Move X0, [X24]
	843 Move X8, [X8+2408]
	844 Move W9, [X0+224]
	845 Move X21, [X8]
	846 Compare W9, 0
	847 JumpIfNotEqual {849}
	848 Call 0x1C17DFC
	849 Move X0, X21
	850 Move X1, X31
	851 Call Type.GetTypeFromHandle, X0
	852 Move X1, X0
	853 Move X0, X20
	854 Move X2, X31
	855 Call Type.op_Equality, X0, X1
	856 Move TEMP, X0
	857 And TEMP, TEMP, 1
	858 Compare TEMP, 1
	859 JumpIfNotEqual {862}
	860 Move X0, X19
	861 Call JsonParser.ParseAnonymousValue, X0
	862 Compare X19, 0
	863 JumpIfEqual {1020}
	864 Move X0, X19
	865 Move W1, W31
	866 Move X2, X31
	867 Call String.get_Chars, X0, X1
	868 And W8, W0, 0xFFFF
	869 NotImplemented "Instruction CMP not yet implemented."
	870 Move X21, X31
	871 Move W8, [X19+16]
	872 Move X0, X19
	873 Move X2, X31
	874 Subtract W1, W8, 1
	875 Call String.get_Chars, X0, X1
	876 And W8, W0, 0xFFFF
	877 NotImplemented "Instruction CMP not yet implemented."
	878 Move X21, X31
	879 Move X0, X20
	880 Move X1, X19
	881 Call JsonParser.ParseObject, X0, X1
	882 Move X21, X31
	883 Move X8, 0xB70000
	884 Move X8, [X8+4064]
	885 Move X0, X19
	886 Move X1, [X8]
	887 Add X8, X31, 48
	888 Call List`1<Object>.GetEnumerator, X0
	889 Move V0, [X31+3]
	890 Move X8, [X31+64]
	891 Move X23, 0xB70000
	892 Move [X31+1], V0
	893 Move [X31+32], X8
	894 Move X23, [X23+4048]
	895 Move X1, [X23]
	896 Add X0, X31, 16
	897 Call Enumerator<Object>.MoveNext, X0
	898 Move TEMP, X0
	899 And TEMP, TEMP, 1
	900 Compare TEMP, 1
	901 JumpIfNotEqual {931}
	902 Move X1, [X31+32]
	903 Move X0, X22
	904 Call JsonParser.ParseValue, X0, X1
	905 Compare X21, 0
	906 JumpIfEqual {1022}
	907 Move X8, [X21]
	908 Move X1, [X24]
	909 Move X20, X0
	910 NotImplemented "Instruction LDRH not yet implemented."
	911 Compare X9, 0
	912 JumpIfEqual {919}
	913 Move X10, [X8+176]
	914 Add X10, X10, 8
	915 NotImplemented "Instruction LDUR not yet implemented."
	916 NotImplemented "Instruction CMP not yet implemented."
	917 Subtract X9, X9, 1
	918 Add X10, X10, 16
	919 Move W2, 2
	920 Move X0, X21
	921 Call 0x1C5D788
	922 Move W9, [X10]
	923 Add W9, W9, 2
	924 Add X8, X8, W9
	925 Add X0, X8, 312
	926 Move X8, [X0]
	927 Move X2, [X0+8]
	928 Move X0, X21
	929 Move X1, X20
	930 NotImplemented "Instruction BLR not yet implemented."
	931 Move X8, 0xB70000
	932 Move X8, [X8+4040]
	933 Add X0, X31, 16
	934 Move X1, [X8]
	935 Call Enumerator<Object>.Dispose, X0
	936 Move X8, 0xB72000
	937 Move X8, [X8+16]
	938 Move X0, [X8]
	939 Call 0x1C17D0C
	940 Move X0, [X0]
	941 Compare X0, 0
	942 JumpIfEqual {1020}
	943 Move X8, 0xB87000
	944 Move X8, [X8+544]
	945 Move X1, X19
	946 Move X2, [X8]
	947 Call Stack`1<Object>.Push, X0, X1
	948 Move X21, X31
	949 Move X21, X31
	950 Move W8, [X19+24]
	951 NotImplemented "Instruction CMP not yet implemented."
	952 Move X27, 0xB71000
	953 Move X27, [X27+2904]
	954 Move W20, W31
	955 Move X2, [X27]
	956 Move X0, X19
	957 Move W1, W20
	958 Call List`1<Object>.get_Item, X0, X1
	959 Compare X0, 0
	960 JumpIfEqual {1020}
	961 Move W8, [X0+16]
	962 NotImplemented "Instruction CMP not yet implemented."
	963 Move X2, [X27]
	964 Move X0, X19
	965 Move W1, W20
	966 Call List`1<Object>.get_Item, X0, X1
	967 Move X2, [X27]
	968 Move X23, X0
	969 Move X0, X19
	970 Move W1, W20
	971 Call List`1<Object>.get_Item, X0, X1
	972 Compare X0, 0
	973 JumpIfEqual {1020}
	974 Compare X23, 0
	975 JumpIfEqual {1020}
	976 Move W8, [X0+16]
	977 Move W1, 1
	978 Move X0, X23
	979 Move X3, X31
	980 Subtract W2, W8, 2
	981 Call String.Substring, X0, X1, X2
	982 Move X2, [X27]
	983 Move X23, X0
	984 Or W1, W20, 1
	985 Move X0, X19
	986 Call List`1<Object>.get_Item, X0, X1
	987 Move X1, X0
	988 Move X0, X22
	989 Call JsonParser.ParseValue, X0, X1
	990 Compare X21, 0
	991 JumpIfEqual {1020}
	992 Move X8, [X21]
	993 Move X1, [X26]
	994 Move X24, X0
	995 NotImplemented "Instruction LDRH not yet implemented."
	996 Compare X9, 0
	997 JumpIfEqual {1004}
	998 Move X10, [X8+176]
	999 Add X10, X10, 8
	1000 NotImplemented "Instruction LDUR not yet implemented."
	1001 NotImplemented "Instruction CMP not yet implemented."
	1002 Subtract X9, X9, 1
	1003 Add X10, X10, 16
	1004 Move W2, 5
	1005 Move X0, X21
	1006 Call 0x1C5D788
	1007 Move W9, [X10]
	1008 Add W9, W9, 5
	1009 Add X8, X8, W9
	1010 Add X0, X8, 312
	1011 Move X8, [X0]
	1012 Move X3, [X0+8]
	1013 Move X0, X21
	1014 Move X1, X23
	1015 Move X2, X24
	1016 NotImplemented "Instruction BLR not yet implemented."
	1017 Move W8, [X19+24]
	1018 Add W20, W20, 2
	1019 NotImplemented "Instruction CMP not yet implemented."
	1020 Call 0x1C17F20
	1021 Call 0x1C17F28
	1022 Call 0x1C17F20
	1023 Call 0x1C17F44
	1024 Move X1, X31
	1025 Call 0x1C17DEC
	1026 Call 0x3EB2B20
	1027 Move X20, X0
	1028 NotImplemented "Instruction CMP not yet implemented."
	1029 Move X0, X20
	1030 Call 0x3EB2AD0
	1031 Move X19, X0
	1032 Move X0, 0xB4F000
	1033 Move X0, [X0+3264]
	1034 Call 0x1C17D08
	1035 Move X8, [X19]
	1036 Move X1, [X8]
	1037 Call 0x1C18270
	1038 Move TEMP, X0
	1039 And TEMP, TEMP, 1
	1040 Compare TEMP, 1
	1041 JumpIfNotEqual {1047}
	1042 Call 0x3EB2AE0
	1043 Move [X31+48], W31
	1044 Move X0, 0xB49000
	1045 Move X0, [X0+1880]
	1046 Call 0x1C17D08
	1047 Move W0, 8
	1048 Call 0x3EB2AF0
	1049 Move X8, [X19]
	1050 Move [X0], X8
	1051 Move X1, 0x90A000
	1052 Add X1, X1, 3672
	1053 Move X2, X31
	1054 Call 0x3EB2B00
	1055 Move X20, X0
	1056 Call 0x3EB2AE0
	1057 Move X20, X0
	1058 NotImplemented "Instruction CMP not yet implemented."
	1059 Move X0, X20
	1060 Call 0x3EB2AD0
	1061 Move X22, [X0]
	1062 Call 0x3EB2AE0
	1063 Move X8, 0xB70000
	1064 Move X8, [X8+4040]
	1065 Add X0, X31, 16
	1066 Move X1, [X8]
	1067 Call Enumerator<Object>.Dispose, X0
	1068 Compare X22, 0
	1069 JumpIfEqual {936}
	1070 Move X0, X22
	1071 Call 0x1C17F18
	1072 Move X22, X31
	1073 Move X20, X0
	1074 Move X8, 0xB70000
	1075 Move X8, [X8+4040]
	1076 Move X1, [X8]
	1077 Add X0, X31, 16
	1078 Call Enumerator<Object>.Dispose, X0
	1079 Compare X22, 0
	1080 JumpIfNotEqual {1083}
	1081 Move X0, X20
	1082 Call 0x1D2D690
	1083 Move X0, X22
	1084 Call 0x1C17F18
	1085 Call 0x1991590

Method: System.Object ParseAnonymousValue(System.String json)

Disassembly:
	0x035AB5D0 ADD X31, X31, 0xA0
	0x035AB5D4 RET
	0x035AB5D8 ADRP X8, 0xB70000
	0x035AB5DC LDR X0, [X25]
	0x035AB5E0 LDR X8, [X8 + 0xA80]
	0x035AB5E4 LDR W9, [X0 + 0xE0]
	0x035AB5E8 LDR X22, [X8]
	0x035AB5EC CBNZ W9, 0x35AB5F4
	0x035AB5F0 BL 0x1C16DFC
	0x035AB5F4 MOV X0, X22
	0x035AB5F8 MOV X1, X31
	0x035AB5FC BL 0x338C698
	0x035AB600 MOV X1, X0
	0x035AB604 MOV X0, X21
	0x035AB608 MOV X2, X31
	0x035AB60C BL 0x3395194
	0x035AB610 TBZ X0, 0x0, 0x35AB67C
	0x035AB614 ADRP X8, 0xB48000
	0x035AB618 LDR X8, [X8 + 0xA90]
	0x035AB61C LDR X9, [X20]
	0x035AB620 LDR X1, [X8]
	0x035AB624 LDR X8, [X9 + 0x40]
	0x035AB628 LDR X9, [X1 + 0x40]
	0x035AB62C CMP X8, X9
	0x035AB630 B.NE 0x35ABEE4
	0x035AB634 MOV X0, X20
	0x035AB638 BL 0x1C16E08
	0x035AB63C ADRP X8, 0xB4A000
	0x035AB640 LDR V0, [X0]
	0x035AB644 LDR X8, [X8 + 0xC48]
	0x035AB648 STR S0, [X31 + 0x1C]
	0x035AB64C LDR X0, [X8]
	0x035AB650 LDR W8, [X0 + 0xE0]
	0x035AB654 CBNZ W8, 0x35AB65C
	0x035AB658 BL 0x1C16DFC
	0x035AB65C MOV X0, X31
	0x035AB660 BL 0x3338524
	0x035AB664 MOV X1, X0
	0x035AB668 ADD X0, X31, 0x1C
	0x035AB66C MOV X2, X31
	0x035AB670 BL 0x338FEA0
	0x035AB674 CBNZ X19, 0x35AB7D8
	0x035AB678 B 0x35ABF58
	0x035AB67C ADRP X8, 0xB70000
	0x035AB680 LDR X0, [X25]
	0x035AB684 LDR X8, [X8 + 0xA78]
	0x035AB688 LDR W9, [X0 + 0xE0]
	0x035AB68C LDR X22, [X8]
	0x035AB690 CBNZ W9, 0x35AB698
	0x035AB694 BL 0x1C16DFC
	0x035AB698 MOV X0, X22
	0x035AB69C MOV X1, X31
	0x035AB6A0 BL 0x338C698
	0x035AB6A4 MOV X1, X0
	0x035AB6A8 MOV X0, X21
	0x035AB6AC MOV X2, X31
	0x035AB6B0 BL 0x3395194
	0x035AB6B4 TBZ X0, 0x0, 0x35AB720
	0x035AB6B8 ADRP X8, 0xB4B000
	0x035AB6BC LDR X8, [X8 + 0x978]
	0x035AB6C0 LDR X9, [X20]
	0x035AB6C4 LDR X1, [X8]
	0x035AB6C8 LDR X8, [X9 + 0x40]
	0x035AB6CC LDR X9, [X1 + 0x40]
	0x035AB6D0 CMP X8, X9
	0x035AB6D4 B.NE 0x35ABEE4
	0x035AB6D8 MOV X0, X20
	0x035AB6DC BL 0x1C16E08
	0x035AB6E0 ADRP X8, 0xB4A000
	0x035AB6E4 LDR V0, [X0]
	0x035AB6E8 LDR X8, [X8 + 0xC48]
	0x035AB6EC STR D0, [X31 + 0x10]
	0x035AB6F0 LDR X0, [X8]
	0x035AB6F4 LDR W8, [X0 + 0xE0]
	0x035AB6F8 CBNZ W8, 0x35AB700
	0x035AB6FC BL 0x1C16DFC
	0x035AB700 MOV X0, X31
	0x035AB704 BL 0x3338524
	0x035AB708 MOV X1, X0
	0x035AB70C ADD X0, X31, 0x10
	0x035AB710 MOV X2, X31
	0x035AB714 BL 0x33662E0
	0x035AB718 CBNZ X19, 0x35AB7D8
	0x035AB71C B 0x35ABF58
	0x035AB720 ADRP X8, 0xB7A000
	0x035AB724 LDR X0, [X25]
	0x035AB728 LDR X8, [X8 + 0x140]
	0x035AB72C LDR W9, [X0 + 0xE0]
	0x035AB730 LDR X22, [X8]
	0x035AB734 CBNZ W9, 0x35AB73C
	0x035AB738 BL 0x1C16DFC
	0x035AB73C MOV X0, X22
	0x035AB740 MOV X1, X31
	0x035AB744 BL 0x338C698
	0x035AB748 MOV X1, X0
	0x035AB74C MOV X0, X21
	0x035AB750 MOV X2, X31
	0x035AB754 BL 0x3395194
	0x035AB758 TBZ X0, 0x0, 0x35AB7E0
	0x035AB75C ADRP X21, 0xB70000
	0x035AB760 LDR X21, [X21 + 0x5F0]
	0x035AB764 LDR X8, [X20]
	0x035AB768 LDR X1, [X21]
	0x035AB76C LDR X8, [X8 + 0x40]
	0x035AB770 LDR X9, [X1 + 0x40]
	0x035AB774 CMP X8, X9
	0x035AB778 B.NE 0x35ABEE4
	0x035AB77C MOV X0, X20
	0x035AB780 BL 0x1C16E08
	0x035AB784 ADRP X8, 0xB4A000
	0x035AB788 LDR V0, [X0]
	0x035AB78C LDR X8, [X8 + 0xC48]
	0x035AB790 STR V0, [X31 + 0x2]
	0x035AB794 LDR X0, [X8]
	0x035AB798 LDR W8, [X0 + 0xE0]
	0x035AB79C CBNZ W8, 0x35AB7A4
	0x035AB7A0 BL 0x1C16DFC
	0x035AB7A4 MOV X0, X31
	0x035AB7A8 BL 0x3338524
	0x035AB7AC LDR X8, [X21]
	0x035AB7B0 MOV X20, X0
	0x035AB7B4 LDR W9, [X8 + 0xE0]
	0x035AB7B8 CBNZ W9, 0x35AB7C4
	0x035AB7BC MOV X0, X8
	0x035AB7C0 BL 0x1C16DFC
	0x035AB7C4 ADD X0, X31, 0x20
	0x035AB7C8 MOV X1, X20
	0x035AB7CC MOV X2, X31
	0x035AB7D0 BL 0x33D74AC
	0x035AB7D4 CBZ X19, 0x35ABF58
	0x035AB7D8 MOV X1, X0
	0x035AB7DC B 0x35AB3A4
	0x035AB7E0 STR X23, [X31]
	0x035AB7E4 ADRP X8, 0xB71000
	0x035AB7E8 LDR X0, [X25]
	0x035AB7EC LDR X8, [X8 + 0x248]
	0x035AB7F0 LDR W9, [X0 + 0xE0]
	0x035AB7F4 LDR X22, [X8]
	0x035AB7F8 CBNZ W9, 0x35AB800
	0x035AB7FC BL 0x1C16DFC
	0x035AB800 MOV X0, X22
	0x035AB804 MOV X1, X31
	0x035AB808 BL 0x338C698
	0x035AB80C MOV X1, X0
	0x035AB810 MOV X0, X21
	0x035AB814 MOV X2, X31
	0x035AB818 BL 0x3395194
	0x035AB81C TBZ X0, 0x0, 0x35AB87C
	0x035AB820 ADRP X8, 0xB48000
	0x035AB824 LDR X8, [X8 + 0xB58]
	0x035AB828 LDR X9, [X20]
	0x035AB82C LDR X1, [X8]
	0x035AB830 LDR X8, [X9 + 0x40]
	0x035AB834 LDR X9, [X1 + 0x40]
	0x035AB838 CMP X8, X9
	0x035AB83C B.NE 0x35ABEE4
	0x035AB840 MOV X0, X20
	0x035AB844 BL 0x1C16E08
	0x035AB848 CBZ X19, 0x35ABF58
	0x035AB84C LDRB W8, [X0]
	0x035AB850 ADRP X9, 0xB52000
	0x035AB854 ADRP X10, 0xB53000
	0x035AB858 LDR X9, [X9 + 0xFF8]
	0x035AB85C LDR X10, [X10]
	0x035AB860 CMP W8, 0x0
	0x035AB864 CSEL X8, X9, X10, EQ
	0x035AB868 LDR X1, [X8]
	0x035AB86C MOV X0, X19
	0x035AB870 MOV X2, X31
	0x035AB874 BL 0x32333E0
	0x035AB878 B 0x35ABE70
	0x035AB87C CBZ X21, 0x35ABF58
	0x035AB880 LDR X8, [X21]
	0x035AB884 MOV X0, X21
	0x035AB888 LDR X9, [X8 + 0x588]
	0x035AB88C LDR X1, [X8 + 0x590]
	0x035AB890 BLR X9
	0x035AB894 TBZ X0, 0x0, 0x35AB8C4
	0x035AB898 CBZ X19, 0x35ABF58
	0x035AB89C MOVZ W1, 0x22
	0x035AB8A0 MOV X0, X19
	0x035AB8A4 MOV X2, X31
	0x035AB8A8 BL 0x3233D30
	0x035AB8AC MOV X0, X19
	0x035AB8B0 MOV X1, X20
	0x035AB8B4 MOV X2, X31
	0x035AB8B8 BL 0x3233F90
	0x035AB8BC MOVZ W1, 0x22
	0x035AB8C0 B 0x35ABE64
	0x035AB8C4 ADRP X23, 0xB4F000
	0x035AB8C8 LDR X23, [X23 + 0x2F8]
	0x035AB8CC MOV X0, X20
	0x035AB8D0 LDR X1, [X23]
	0x035AB8D4 BL 0x1C16E00
	0x035AB8D8 CBZ X0, 0x35AB968
	0x035AB8DC CBZ X19, 0x35ABF58
	0x035AB8E0 MOVZ W1, 0x5B
	0x035AB8E4 MOV X0, X19
	0x035AB8E8 MOV X2, X31
	0x035AB8EC BL 0x3233D30
	0x035AB8F0 LDR X21, [X23]
	0x035AB8F4 MOV X0, X20
	0x035AB8F8 MOV X1, X21
	0x035AB8FC BL 0x1C16E00
	0x035AB900 CBZ X0, 0x35AC1CC
	0x035AB904 ADRP X8, 0xB50000
	0x035AB908 LDR X8, [X8 + 0xDB8]
	0x035AB90C LDR X23, [X23]
	0x035AB910 MOV X0, X20
	0x035AB914 LDR X22, [X8]
	0x035AB918 MOV X1, X23
	0x035AB91C BL 0x1C16E00
	0x035AB920 CBZ X0, 0x35AC1D8
	0x035AB924 LDR X8, [X0]
	0x035AB928 MOV X21, X0
	0x035AB92C LDRH W9, [X8 + 0x12E]
	0x035AB930 CBZ X9, 0x35AB954
	0x035AB934 LDR X10, [X8 + 0xB0]
	0x035AB938 ADD X10, X10, 0x8
	0x035AB93C LDUR X11, [X10 - 0x8]
	0x035AB940 CMP X11, X22
	0x035AB944 B.EQ 0x35ABB7C
	0x035AB948 SUBS X9, X9, 0x1
	0x035AB94C ADD X10, X10, 0x10
	0x035AB950 B.NE 0x35AB93C
	0x035AB954 MOV X0, X21
	0x035AB958 MOV X1, X22
	0x035AB95C MOV W2, W31
	0x035AB960 BL 0x1C5C788
	0x035AB964 B 0x35ABB88
	0x035AB968 LDR X8, [X21]
	0x035AB96C MOV X0, X21
	0x035AB970 LDR X9, [X8 + 0x3C8]
	0x035AB974 LDR X1, [X8 + 0x3D0]
	0x035AB978 BLR X9
	0x035AB97C TBZ X0, 0x0, 0x35ABA44
	0x035AB980 LDR X8, [X21]
	0x035AB984 MOV X0, X21
	0x035AB988 LDR X9, [X8 + 0x448]
	0x035AB98C LDR X1, [X8 + 0x450]
	0x035AB990 BLR X9
	0x035AB994 ADRP X9, 0xB71000
	0x035AB998 LDR X8, [X25]
	0x035AB99C LDR X9, [X9 + 0x388]
	0x035AB9A0 MOV X22, X0
	0x035AB9A4 LDR W10, [X8 + 0xE0]
	0x035AB9A8 LDR X23, [X9]
	0x035AB9AC CBNZ W10, 0x35AB9B8
	0x035AB9B0 MOV X0, X8
	0x035AB9B4 BL 0x1C16DFC
	0x035AB9B8 MOV X0, X23
	0x035AB9BC MOV X1, X31
	0x035AB9C0 BL 0x338C698
	0x035AB9C4 MOV X1, X0
	0x035AB9C8 MOV X0, X22
	0x035AB9CC MOV X2, X31
	0x035AB9D0 BL 0x3395194
	0x035AB9D4 TBZ X0, 0x0, 0x35ABA44
	0x035AB9D8 LDR X8, [X21]
	0x035AB9DC MOV X0, X21
	0x035AB9E0 LDR X9, [X8 + 0x468]
	0x035AB9E4 LDR X1, [X8 + 0x470]
	0x035AB9E8 BLR X9
	0x035AB9EC CBZ X0, 0x35ABF58
	0x035AB9F0 LDR W8, [X0 + 0x18]
	0x035AB9F4 CBZ W8, 0x35AC1B8
	0x035AB9F8 LDR X8, [X25]
	0x035AB9FC LDR X21, [X0 + 0x20]
	0x035ABA00 LDR X22, [X24]
	0x035ABA04 LDR W9, [X8 + 0xE0]
	0x035ABA08 CBNZ W9, 0x35ABA14
	0x035ABA0C MOV X0, X8
	0x035ABA10 BL 0x1C16DFC
	0x035ABA14 MOV X0, X22
	0x035ABA18 MOV X1, X31
	0x035ABA1C BL 0x338C698
	0x035ABA20 MOV X1, X0
	0x035ABA24 MOV X0, X21
	0x035ABA28 MOV X2, X31
	0x035ABA2C BL 0x3395F0C
	0x035ABA30 CBZ X19, 0x35ABF58
	0x035ABA34 TBZ X0, 0x0, 0x35ABE78
	0x035ABA38 ADRP X8, 0xB6F000
	0x035ABA3C LDR X8, [X8 + 0x278]
	0x035ABA40 B 0x35AB868
	0x035ABA44 CBZ X19, 0x35ABF58
	0x035ABA48 MOVZ W1, 0x7B
	0x035ABA4C MOV X0, X19
	0x035ABA50 MOV X2, X31
	0x035ABA54 BL 0x3233D30
	0x035ABA58 LDR X8, [X21]
	0x035ABA5C MOVZ W1, 0x54
	0x035ABA60 MOV X0, X21
	0x035ABA64 LDR X9, [X8 + 0x688]
	0x035ABA68 LDR X2, [X8 + 0x690]
	0x035ABA6C BLR X9
	0x035ABA70 CBZ X0, 0x35ABF58
	0x035ABA74 LDR W8, [X0 + 0x18]
	0x035ABA78 MOV X22, X0
	0x035ABA7C CMP W8, 0x1
	0x035ABA80 B.LT 0x35ABD24
	0x035ABA84 ADRP X28, 0xB70000
	0x035ABA88 ADRP X29, 0xB86000
	0x035ABA8C LDR X28, [X28 + 0xFD0]
	0x035ABA90 LDR X29, [X29 + 0x298]
	0x035ABA94 MOV W27, W31
	0x035ABA98 MOVZ W26, 0x1
	0x035ABA9C CMP W27, W8
	0x035ABAA0 B.CS 0x35AC1B8
	0x035ABAA4 LDR X0, [X25]
	0x035ABAA8 ADD X8, X22, W27, 0x3, SXTW
	0x035ABAAC LDR X23, [X8 + 0x20]
	0x035ABAB0 LDR X24, [X28]
	0x035ABAB4 LDR W8, [X0 + 0xE0]
	0x035ABAB8 CBNZ W8, 0x35ABAC0
	0x035ABABC BL 0x1C16DFC
	0x035ABAC0 MOV X0, X24
	0x035ABAC4 MOV X1, X31
	0x035ABAC8 BL 0x338C698
	0x035ABACC CBZ X23, 0x35ABF58
	0x035ABAD0 LDR X8, [X23]
	0x035ABAD4 MOV X1, X0
	0x035ABAD8 MOVZ W2, 0x1
	0x035ABADC MOV X0, X23
	0x035ABAE0 LDP X9, X3, [X8 + 0x1E8]
	0x035ABAE4 BLR X9
	0x035ABAE8 TBNZ X0, 0x0, 0x35ABB68
	0x035ABAEC LDR X8, [X23]
	0x035ABAF0 MOV X0, X23
	0x035ABAF4 MOV X1, X20
	0x035ABAF8 LDR X9, [X8 + 0x2C8]
	0x035ABAFC LDR X2, [X8 + 0x2D0]
	0x035ABB00 BLR X9
	0x035ABB04 CBZ X0, 0x35ABB68
	0x035ABB08 MOV X24, X0
	0x035ABB0C TBNZ X26, 0x0, 0x35ABB20
	0x035ABB10 MOVZ W1, 0x2C
	0x035ABB14 MOV X0, X19
	0x035ABB18 MOV X2, X31
	0x035ABB1C BL 0x3233D30
	0x035ABB20 MOVZ W1, 0x22
	0x035ABB24 MOV X0, X19
	0x035ABB28 MOV X2, X31
	0x035ABB2C BL 0x3233D30
	0x035ABB30 MOV X0, X23
	0x035ABB34 BL 0x35AC388
	0x035ABB38 MOV X1, X0
	0x035ABB3C MOV X0, X19
	0x035ABB40 MOV X2, X31
	0x035ABB44 BL 0x32333E0
	0x035ABB48 LDR X1, [X29]
	0x035ABB4C MOV X0, X19
	0x035ABB50 MOV X2, X31
	0x035ABB54 BL 0x32333E0
	0x035ABB58 MOV X0, X19
	0x035ABB5C MOV X1, X24
	0x035ABB60 BL 0x35AAFC4
	0x035ABB64 MOV W26, W31
	0x035ABB68 LDR W8, [X22 + 0x18]
	0x035ABB6C ADD W27, W27, 0x1
	0x035ABB70 CMP W27, W8
	0x035ABB74 B.LT 0x35ABA9C
	0x035ABB78 B 0x35ABD28
	0x035ABB7C LDRSW X9, [X10]
	0x035ABB80 ADD X8, X8, X9, 0x4, LSL
	0x035ABB84 ADD X0, X8, 0x138
	0x035ABB88 LDP X8, X1, [X0]
	0x035ABB8C MOV X0, X21
	0x035ABB90 BLR X8
	0x035ABB94 MOV X20, X0
	0x035ABB98 CBZ X0, 0x35AC1E4
	0x035ABB9C ADRP X22, 0xB48000
	0x035ABBA0 LDR X22, [X22 + 0xE18]
	0x035ABBA4 MOVZ W23, 0x1
	0x035ABBA8 LDR X8, [X20]
	0x035ABBAC LDR X1, [X22]
	0x035ABBB0 LDRH W9, [X8 + 0x12E]
	0x035ABBB4 CBZ X9, 0x35ABBD8
	0x035ABBB8 LDR X10, [X8 + 0xB0]
	0x035ABBBC ADD X10, X10, 0x8
	0x035ABBC0 LDUR X11, [X10 - 0x8]
	0x035ABBC4 CMP X11, X1
	0x035ABBC8 B.EQ 0x35ABBE8
	0x035ABBCC SUBS X9, X9, 0x1
	0x035ABBD0 ADD X10, X10, 0x10
	0x035ABBD4 B.NE 0x35ABBC0
	0x035ABBD8 MOV X0, X20
	0x035ABBDC MOV W2, W31
	0x035ABBE0 BL 0x1C5C788
	0x035ABBE4 B 0x35ABBF4
	0x035ABBE8 LDRSW X9, [X10]
	0x035ABBEC ADD X8, X8, X9, 0x4, LSL
	0x035ABBF0 ADD X0, X8, 0x138
	0x035ABBF4 LDP X8, X1, [X0]
	0x035ABBF8 MOV X0, X20
	0x035ABBFC BLR X8
	0x035ABC00 TBZ X0, 0x0, 0x35ABC8C
	0x035ABC04 LDR X8, [X20]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+48], X30
	003 Move [X31+64], X24
	004 Move [X31+72], X23
	005 Move [X31+80], X22
	006 Move [X31+88], X21
	007 Move [X31+96], X20
	008 Move [X31+104], X19
	009 Move X20, 0xE36000
	010 Move W8, [X20+52]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {84}
	016 Move X0, 0xB49000
	017 Move X0, [X0+2904]
	018 Call 0x1C17CF4
	019 Move X0, 0xB4B000
	020 Move X0, [X0+368]
	021 Call 0x1C17CF4
	022 Move X0, 0xB4B000
	023 Move X0, [X0+3144]
	024 Call 0x1C17CF4
	025 Move X0, 0xB49000
	026 Move X0, [X0+1808]
	027 Call 0x1C17CF4
	028 Move X0, 0xB87000
	029 Move X0, [X0+568]
	030 Call 0x1C17CF4
	031 Move X0, 0xB49000
	032 Move X0, [X0+1824]
	033 Call 0x1C17CF4
	034 Move X0, 0xB4C000
	035 Move X0, [X0+2424]
	036 Call 0x1C17CF4
	037 Move X0, 0xB70000
	038 Move X0, [X0+4040]
	039 Call 0x1C17CF4
	040 Move X0, 0xB70000
	041 Move X0, [X0+4048]
	042 Call 0x1C17CF4
	043 Move X0, 0xB70000
	044 Move X0, [X0+4056]
	045 Call 0x1C17CF4
	046 Move X0, 0xB49000
	047 Move X0, [X0+1880]
	048 Call 0x1C17CF4
	049 Move X0, 0xB51000
	050 Move X0, [X0+3864]
	051 Call 0x1C17CF4
	052 Move X0, 0xB70000
	053 Move X0, [X0+4064]
	054 Call 0x1C17CF4
	055 Move X0, 0xB82000
	056 Move X0, [X0+2312]
	057 Call 0x1C17CF4
	058 Move X0, 0xB4A000
	059 Move X0, [X0+456]
	060 Call 0x1C17CF4
	061 Move X0, 0xB71000
	062 Move X0, [X0+2904]
	063 Call 0x1C17CF4
	064 Move X0, 0xB4E000
	065 Move X0, [X0+1856]
	066 Call 0x1C17CF4
	067 Move X0, 0xB4B000
	068 Move X0, [X0+632]
	069 Call 0x1C17CF4
	070 Move X0, 0xB7D000
	071 Move X0, [X0+2040]
	072 Call 0x1C17CF4
	073 Move X0, 0xB53000
	074 Move X0, [X0+4088]
	075 Call 0x1C17CF4
	076 Move X0, 0xB54000
	077 Move X0, [X0]
	078 Call 0x1C17CF4
	079 Move X0, 0xB52000
	080 Move X0, [X0+1936]
	081 Call 0x1C17CF4
	082 Move W8, 1
	083 Move [X20+52], W8
	084 Move [X31+24], X31
	085 Move [X31+32], X31
	086 Move [X31+40], X31
	087 Move [X31+56], X31
	088 Move [X31+20], W31
	089 Compare X19, 0
	090 JumpIfEqual {386}
	091 Move W8, [X19+16]
	092 Compare W8, 0
	093 JumpIfEqual {242}
	094 Move X0, X19
	095 Move W1, W31
	096 Move X2, X31
	097 Call String.get_Chars, X0, X1
	098 And W8, W0, 0xFFFF
	099 NotImplemented "Instruction CMP not yet implemented."
	100 Move W8, [X19+16]
	101 Move X0, X19
	102 Move X2, X31
	103 Subtract W1, W8, 1
	104 Call String.get_Chars, X0, X1
	105 And W8, W0, 0xFFFF
	106 NotImplemented "Instruction CMP not yet implemented."
	107 Move X0, X19
	108 Call JsonParser.Split, X0
	109 Compare X0, 0
	110 JumpIfEqual {386}
	111 Move W21, [X0+24]
	112 Move X20, X0
	113 Move TEMP, X21
	114 And TEMP, TEMP, 1
	115 Compare TEMP, 1
	116 JumpIfEqual {242}
	117 Move X8, 0xB49000
	118 Move X8, [X8+1824]
	119 Move X0, [X8]
	120 Call 0x1C17F10
	121 Move X8, 0xB87000
	122 Move X8, [X8+568]
	123 NotImplemented "Instruction CMP not yet implemented."
	124 Move X19, X0
	125 Move X2, [X8]
	126 NotImplemented "Instruction CINC not yet implemented."
	127 NotImplemented "Instruction SBFM not yet implemented."
	128 Call Dictionary`2<Object, Object>..ctor, X0, X1
	129 Move W8, [X20+24]
	130 NotImplemented "Instruction CMP not yet implemented."
	131 Move X23, 0xB71000
	132 Move X24, 0xB49000
	133 Move X23, [X23+2904]
	134 Move X24, [X24+1808]
	135 Move W21, W31
	136 Move X2, [X23]
	137 Move X0, X20
	138 Move W1, W21
	139 Call List`1<Object>.get_Item, X0, X1
	140 Move X2, [X23]
	141 Move X22, X0
	142 Move X0, X20
	143 Move W1, W21
	144 Call List`1<Object>.get_Item, X0, X1
	145 Compare X0, 0
	146 JumpIfEqual {386}
	147 Compare X22, 0
	148 JumpIfEqual {386}
	149 Move W8, [X0+16]
	150 Move W1, 1
	151 Move X0, X22
	152 Move X3, X31
	153 Subtract W2, W8, 2
	154 Call String.Substring, X0, X1, X2
	155 Move X2, [X23]
	156 Add W21, W21, 1
	157 Move X22, X0
	158 Move X0, X20
	159 Move W1, W21
	160 Call List`1<Object>.get_Item, X0, X1
	161 Call JsonParser.ParseAnonymousValue, X0
	162 Compare X19, 0
	163 JumpIfEqual {386}
	164 Move X3, [X24]
	165 Move X2, X0
	166 Move X0, X19
	167 Move X1, X22
	168 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	169 Move W8, [X20+24]
	170 Add W21, W21, 1
	171 NotImplemented "Instruction CMP not yet implemented."
	172 Move X0, X19
	173 Move W1, W31
	174 Move X2, X31
	175 Call String.get_Chars, X0, X1
	176 And W8, W0, 0xFFFF
	177 NotImplemented "Instruction CMP not yet implemented."
	178 Move W8, [X19+16]
	179 Move X0, X19
	180 Move X2, X31
	181 Subtract W1, W8, 1
	182 Call String.get_Chars, X0, X1
	183 And W8, W0, 0xFFFF
	184 NotImplemented "Instruction CMP not yet implemented."
	185 Move X0, X19
	186 Call JsonParser.Split, X0
	187 Compare X0, 0
	188 JumpIfEqual {386}
	189 Move X8, 0xB4E000
	190 Move W21, [X0+24]
	191 Move X8, [X8+1856]
	192 Move X20, X0
	193 Move X0, [X8]
	194 Call 0x1C17F10
	195 Move X8, 0xB82000
	196 Move X8, [X8+2312]
	197 Move W1, W21
	198 Move X19, X0
	199 Move X2, [X8]
	200 Call List`1<Object>..ctor, X0, X1
	201 Move X8, 0xB70000
	202 Move X8, [X8+4064]
	203 Move X0, X20
	204 Move X1, [X8]
	205 Add X8, X31, 24
	206 Call List`1<Object>.GetEnumerator, X0
	207 Move X20, 0xB70000
	208 Move X21, 0xB51000
	209 Move X20, [X20+4048]
	210 Move X21, [X21+3864]
	211 Move X1, [X20]
	212 Add X0, X31, 24
	213 Call Enumerator<Object>.MoveNext, X0
	214 Move TEMP, X0
	215 And TEMP, TEMP, 1
	216 Compare TEMP, 1
	217 JumpIfNotEqual {330}
	218 Move X0, [X31+40]
	219 Call JsonParser.ParseAnonymousValue, X0
	220 Move X1, X0
	221 Compare X19, 0
	222 JumpIfEqual {387}
	223 Move W10, [X19+28]
	224 Move X8, [X19+16]
	225 Move X9, [X21]
	226 Add W10, W10, 1
	227 Move [X19+28], W10
	228 Compare X8, 0
	229 JumpIfEqual {388}
	230 NotImplemented "Instruction LDRSW not yet implemented."
	231 Move W11, [X8+24]
	232 NotImplemented "Instruction CMP not yet implemented."
	233 Add W9, W10, 1
	234 Add X8, X8, X10
	235 Move [X19+24], W9
	236 Move [X8+32], X1
	237 Move X8, [X9+32]
	238 Move X8, [X8+192]
	239 Move X2, [X8+112]
	240 Move X0, X19
	241 Call List`1<Object>.AddWithResize, X0, X1
	242 Move X19, X31
	243 Move X0, X19
	244 Move W1, W31
	245 Move X2, X31
	246 Call String.get_Chars, X0, X1
	247 And W8, W0, 0xFFFF
	248 NotImplemented "Instruction CMP not yet implemented."
	249 Move W8, [X19+16]
	250 Move X0, X19
	251 Move X2, X31
	252 Subtract W1, W8, 1
	253 Call String.get_Chars, X0, X1
	254 And W8, W0, 0xFFFF
	255 NotImplemented "Instruction CMP not yet implemented."
	256 Move W8, [X19+16]
	257 Move W1, 1
	258 Move X0, X19
	259 Move X3, X31
	260 Subtract W2, W8, 2
	261 Call String.Substring, X0, X1, X2
	262 Compare X0, 0
	263 JumpIfEqual {386}
	264 Move X8, 0xB4B000
	265 Move X8, [X8+632]
	266 Move X9, 0xB7D000
	267 Move X3, X31
	268 Move X8, [X8]
	269 Move X8, [X8+184]
	270 Move X9, [X9+2040]
	271 Move X2, [X8]
	272 Move X1, [X9]
	273 Call String.Replace, X0, X1, X2
	274 Move X0, X19
	275 Move W1, W31
	276 Move X2, X31
	277 Call String.get_Chars, X0, X1
	278 Move X8, 0xB4B000
	279 Move X8, [X8+368]
	280 Move W20, W0
	281 Move X8, [X8]
	282 Move W9, [X8+224]
	283 Compare W9, 0
	284 JumpIfNotEqual {287}
	285 Move X0, X8
	286 Call 0x1C17DFC
	287 Move W0, W20
	288 Move X1, X31
	289 Call Char.IsDigit, X0
	290 Move TEMP, X0
	291 And TEMP, TEMP, 1
	292 Compare TEMP, 1
	293 JumpIfEqual {300}
	294 Move X0, X19
	295 Move W1, W31
	296 Move X2, X31
	297 Call String.get_Chars, X0, X1
	298 And W8, W0, 0xFFFF
	299 NotImplemented "Instruction CMP not yet implemented."
	300 Move X8, 0xB52000
	301 Move X8, [X8+1936]
	302 Move X0, X19
	303 Move X2, X31
	304 Move X1, [X8]
	305 Call String.Contains, X0, X1
	306 Move TEMP, X0
	307 And TEMP, TEMP, 1
	308 Compare TEMP, 1
	309 JumpIfNotEqual {335}
	310 Move X8, 0xB4B000
	311 Move X8, [X8+3144]
	312 Move X0, [X8]
	313 Move W8, [X0+224]
	314 Compare W8, 0
	315 JumpIfNotEqual {317}
	316 Call 0x1C17DFC
	317 Move X0, X31
	318 Call CultureInfo.get_InvariantCulture
	319 Move X2, X0
	320 Add X3, X31, 56
	321 Move W1, 167
	322 Move X0, X19
	323 Move X4, X31
	324 Call Double.TryParse, X0, X1, X2, X3
	325 Move X8, 0xB4C000
	326 Move V0, [X31+56]
	327 Move X8, [X8+2424]
	328 Move [X31+8], D0
	329 Move X0, [X8]
	330 Move X8, 0xB70000
	331 Move X8, [X8+4040]
	332 Add X0, X31, 24
	333 Move X1, [X8]
	334 Call Enumerator<Object>.Dispose, X0
	335 Add X1, X31, 20
	336 Move X0, X19
	337 Move X2, X31
	338 Call Int32.TryParse, X0, X1
	339 Move X9, 0xB49000
	340 Move W8, [X31+20]
	341 Move X9, [X9+1880]
	342 Move [X31+8], W8
	343 Move X0, [X9]
	344 Move X8, 0xB54000
	345 Move X8, [X8]
	346 Move X0, X19
	347 Move X2, X31
	348 Move X1, [X8]
	349 Call String.op_Equality, X0, X1
	350 Move TEMP, X0
	351 And TEMP, TEMP, 1
	352 Compare TEMP, 1
	353 JumpIfNotEqual {372}
	354 Move X8, 0xB49000
	355 Move X8, [X8+2904]
	356 Move X0, [X8]
	357 Move W8, 1
	358 Move [X31+8], W8
	359 Add X1, X31, 8
	360 Call 0x1C17E04
	361 Move X19, X0
	362 Move X0, X19
	363 Move X20, [X31+96]
	364 Move X19, [X31+104]
	365 Move X22, [X31+80]
	366 Move X21, [X31+88]
	367 Move X24, [X31+64]
	368 Move X23, [X31+72]
	369 Move X30, [X31+48]
	370 Add X31, X31, 112
	371 Return X0
	372 Move X8, 0xB53000
	373 Move X8, [X8+4088]
	374 Move X0, X19
	375 Move X2, X31
	376 Move X1, [X8]
	377 Call String.op_Equality, X0, X1
	378 Move X19, X31
	379 Move TEMP, X0
	380 And TEMP, TEMP, 1
	381 Compare TEMP, 1
	382 JumpIfNotEqual {362}
	383 Move X8, 0xB49000
	384 Move X8, [X8+2904]
	385 Move [X31+8], W31
	386 Call 0x1C17F20
	387 Call 0x1C17F20
	388 Call 0x1C17F20
	389 Move X20, X0
	390 NotImplemented "Instruction CMP not yet implemented."
	391 Move X0, X20
	392 Call 0x3EB2AD0
	393 Move X21, [X0]
	394 Call 0x3EB2AE0
	395 Move X8, 0xB70000
	396 Move X8, [X8+4040]
	397 Add X0, X31, 24
	398 Move X1, [X8]
	399 Call Enumerator<Object>.Dispose, X0
	400 Compare X21, 0
	401 JumpIfEqual {362}
	402 Move X0, X21
	403 Call 0x1C17F18
	404 Move X21, X31
	405 Move X20, X0
	406 Move X8, 0xB70000
	407 Move X8, [X8+4040]
	408 Move X1, [X8]
	409 Add X0, X31, 24
	410 Call Enumerator<Object>.Dispose, X0
	411 Compare X21, 0
	412 JumpIfNotEqual {415}
	413 Move X0, X20
	414 Call 0x1D2D690
	415 Move X0, X21
	416 Call 0x1C17F18
	417 Call 0x1991590

Method: System.Collections.Generic.Dictionary`2<System.String, T> CreateMemberNameDictionary(System.Collections.Generic.IEnumerable`1<T> members)

Disassembly:
	0x022114DC LDR X8, [X25 + 0x8]
	0x022114E0 LDR W20, [X8 + 0xFC]
	0x022114E4 ADD X8, X31, 0x0
	0x022114E8 ADD X9, X20, 0xF
	0x022114EC AND X9, X9, 0x1FFFFFFFF
	0x022114F0 SUB X21, X8, X9
	0x022114F4 ADD X31, X21, 0x0
	0x022114F8 ADD X8, X31, 0x0
	0x022114FC SUB X23, X8, X9
	0x02211500 ADD X31, X23, 0x0
	0x02211504 MOV X0, X23
	0x02211508 MOV W1, W31
	0x0221150C MOV X2, X20
	0x02211510 BL 0x3EB1B10
	0x02211514 ADRP X8, 0x1EE2000
	0x02211518 LDR X8, [X8 + 0x6C0]
	0x0221151C LDR X25, [X25]
	0x02211520 LDR X0, [X8]
	0x02211524 LDR W8, [X0 + 0xE0]
	0x02211528 CBNZ W8, 0x2211530
	0x0221152C BL 0x1C16DFC
	0x02211530 MOV X0, X25
	0x02211534 MOV X1, X31
	0x02211538 BL 0x338C698
	0x0221153C MOV X1, X0
	0x02211540 MOV X0, X24
	0x02211544 MOV X2, X31
	0x02211548 BL 0x3C86D98
	0x0221154C LDR X8, [X22 + 0x38]
	0x02211550 MOV X22, X0
	0x02211554 LDR X1, [X8 + 0x8]
	0x02211558 LDRB W8, [X1 + 0x135]
	0x0221155C TBNZ X8, 0x0, 0x221156C
	0x02211560 MOV X0, X1
	0x02211564 BL 0x1C5C684
	0x02211568 MOV X1, X0
	0x0221156C MOV X0, X22
	0x02211570 MOV X2, X21
	0x02211574 BL 0x1C16E10
	0x02211578 MOV X1, X0
	0x0221157C MOV X0, X23
	0x02211580 MOV X2, X20
	0x02211584 BL 0x3EB1AC0
	0x02211588 MOV X0, X21
	0x0221158C MOV X1, X23
	0x02211590 MOV X2, X20
	0x02211594 BL 0x3EB1AC0
	0x02211598 MOV X0, X19
	0x0221159C MOV X1, X21
	0x022115A0 MOV X2, X20
	0x022115A4 BL 0x3EB1AC0
	0x022115A8 LDR X8, [X26 + 0x28]
	0x022115AC LDUR X9, [X29 - 0x8]
	0x022115B0 CMP X8, X9
	0x022115B4 B.NE 0x22115D4
	0x022115B8 ADD X31, X29, 0x0
	0x022115BC LDP X20, X19, [X31 + 0x40]
	0x022115C0 LDP X22, X21, [X31 + 0x30]
	0x022115C4 LDP X24, X23, [X31 + 0x20]
	0x022115C8 LDP X26, X25, [X31 + 0x10]
	0x022115CC LDP X29, X30, [X31], #0x50
	0x022115D0 RET
	0x022115D4 BL 0x3EB1B20
	0x022115D8 STR X30, [X31 - 0x30]!
	0x022115DC STP X22, X21, [X31 + 0x10]
	0x022115E0 STP X20, X19, [X31 + 0x20]
	0x022115E4 LDR X9, [X1 + 0x38]
	0x022115E8 MOV X20, X1
	0x022115EC MOV X21, X0
	0x022115F0 MOV X19, X8
	0x022115F4 CBNZ X9, 0x2211618
	0x022115F8 ADRP X0, 0x1EE2000
	0x022115FC LDR X0, [X0 + 0x6C0]
	0x02211600 BL 0x1C16CF4
	0x02211604 LDR X9, [X20 + 0x38]
	0x02211608 CBNZ X9, 0x2211618
	0x0221160C MOV X0, X20
	0x02211610 BL 0x1C5C6E0
	0x02211614 LDR X9, [X20 + 0x38]
	0x02211618 ADRP X8, 0x1EE2000
	0x0221161C LDR X8, [X8 + 0x6C0]
	0x02211620 LDR X22, [X9]
	0x02211624 LDR X0, [X8]
	0x02211628 LDR W8, [X0 + 0xE0]
	0x0221162C CBNZ W8, 0x2211634
	0x02211630 BL 0x1C16DFC
	0x02211634 MOV X0, X22
	0x02211638 MOV X1, X31
	0x0221163C BL 0x338C698
	0x02211640 MOV X1, X0
	0x02211644 MOV X0, X21
	0x02211648 MOV X2, X31
	0x0221164C BL 0x3C86D98
	0x02211650 LDR X8, [X20 + 0x38]
	0x02211654 MOV X20, X0
	0x02211658 LDR X1, [X8 + 0x8]
	0x0221165C LDRB W8, [X1 + 0x135]
	0x02211660 TBNZ X8, 0x0, 0x2211670
	0x02211664 MOV X0, X1
	0x02211668 BL 0x1C5C684
	0x0221166C MOV X1, X0
	0x02211670 CBZ X20, 0x22116B0
	0x02211674 LDR X8, [X20]
	0x02211678 LDR X9, [X1 + 0x40]
	0x0221167C MOV X0, X20
	0x02211680 LDR X8, [X8 + 0x40]
	0x02211684 CMP X8, X9
	0x02211688 B.NE 0x22116B4
	0x0221168C BL 0x1C16E08
	0x02211690 LDP V0, V1, [X0]
	0x02211694 LDR V2, [X0 + 0x2]
	0x02211698 LDP X22, X21, [X31 + 0x10]
	0x0221169C STP V0, V1, [X19]
	0x022116A0 STR V2, [X19 + 0x2]
	0x022116A4 LDP X20, X19, [X31 + 0x20]
	0x022116A8 LDR X30, [X31], #0x30
	0x022116AC RET
	0x022116B0 BL 0x1C16F20
	0x022116B4 BL 0x1C171E0
	0x022116B8 STR X30, [X31 - 0x30]!
	0x022116BC STP X22, X21, [X31 + 0x10]
	0x022116C0 STP X20, X19, [X31 + 0x20]
	0x022116C4 LDR X9, [X1 + 0x38]
	0x022116C8 MOV X20, X1
	0x022116CC MOV X21, X0
	0x022116D0 MOV X19, X8
	0x022116D4 CBNZ X9, 0x22116F8
	0x022116D8 ADRP X0, 0x1EE2000
	0x022116DC LDR X0, [X0 + 0x6C0]
	0x022116E0 BL 0x1C16CF4
	0x022116E4 LDR X9, [X20 + 0x38]
	0x022116E8 CBNZ X9, 0x22116F8
	0x022116EC MOV X0, X20
	0x022116F0 BL 0x1C5C6E0
	0x022116F4 LDR X9, [X20 + 0x38]
	0x022116F8 ADRP X8, 0x1EE2000
	0x022116FC LDR X8, [X8 + 0x6C0]
	0x02211700 LDR X22, [X9]
	0x02211704 LDR X0, [X8]
	0x02211708 LDR W8, [X0 + 0xE0]
	0x0221170C CBNZ W8, 0x2211714
	0x02211710 BL 0x1C16DFC
	0x02211714 MOV X0, X22
	0x02211718 MOV X1, X31
	0x0221171C BL 0x338C698
	0x02211720 MOV X1, X0
	0x02211724 MOV X0, X21
	0x02211728 MOV X2, X31
	0x0221172C BL 0x3C86D98
	0x02211730 LDR X8, [X20 + 0x38]
	0x02211734 MOV X20, X0
	0x02211738 LDR X1, [X8 + 0x8]
	0x0221173C LDRB W8, [X1 + 0x135]
	0x02211740 TBNZ X8, 0x0, 0x2211750
	0x02211744 MOV X0, X1
	0x02211748 BL 0x1C5C684
	0x0221174C MOV X1, X0
	0x02211750 CBZ X20, 0x2211790
	0x02211754 LDR X8, [X20]
	0x02211758 LDR X9, [X1 + 0x40]
	0x0221175C MOV X0, X20
	0x02211760 LDR X8, [X8 + 0x40]
	0x02211764 CMP X8, X9
	0x02211768 B.NE 0x2211794
	0x0221176C BL 0x1C16E08
	0x02211770 LDR V0, [X0]
	0x02211774 LDR X8, [X0 + 0x10]
	0x02211778 LDP X22, X21, [X31 + 0x10]
	0x0221177C STR V0, [X19]
	0x02211780 STR X8, [X19 + 0x10]
	0x02211784 LDP X20, X19, [X31 + 0x20]
	0x02211788 LDR X30, [X31], #0x30
	0x0221178C RET
	0x02211790 BL 0x1C16F20
	0x02211794 BL 0x1C171E0
	0x02211798 STP X30, X21, [X31 - 0x20]!
	0x0221179C STP X20, X19, [X31 + 0x10]
	0x022117A0 LDR X8, [X1 + 0x38]
	0x022117A4 MOV X19, X1
	0x022117A8 MOV X20, X0
	0x022117AC CBNZ X8, 0x22117D0
	0x022117B0 ADRP X0, 0x1EE2000
	0x022117B4 LDR X0, [X0 + 0x6C0]
	0x022117B8 BL 0x1C16CF4
	0x022117BC LDR X8, [X19 + 0x38]
	0x022117C0 CBNZ X8, 0x22117D0
	0x022117C4 MOV X0, X19
	0x022117C8 BL 0x1C5C6E0
	0x022117CC LDR X8, [X19 + 0x38]
	0x022117D0 ADRP X9, 0x1EE2000
	0x022117D4 LDR X9, [X9 + 0x6C0]
	0x022117D8 LDR X21, [X8]
	0x022117DC LDR X0, [X9]
	0x022117E0 LDR W9, [X0 + 0xE0]
	0x022117E4 CBNZ W9, 0x22117EC
	0x022117E8 BL 0x1C16DFC
	0x022117EC MOV X0, X21
	0x022117F0 MOV X1, X31
	0x022117F4 BL 0x338C698
	0x022117F8 MOV X1, X0
	0x022117FC MOV X0, X20
	0x02211800 MOV X2, X31
	0x02211804 BL 0x3C86D98
	0x02211808 LDR X8, [X19 + 0x38]
	0x0221180C MOV X19, X0
	0x02211810 LDR X1, [X8 + 0x8]
	0x02211814 LDRB W8, [X1 + 0x135]
	0x02211818 TBNZ X8, 0x0, 0x2211828
	0x0221181C MOV X0, X1
	0x02211820 BL 0x1C5C684
	0x02211824 MOV X1, X0
	0x02211828 CBZ X19, 0x2211858
	0x0221182C LDR X8, [X19]
	0x02211830 LDR X9, [X1 + 0x40]
	0x02211834 MOV X0, X19
	0x02211838 LDR X8, [X8 + 0x40]
	0x0221183C CMP X8, X9
	0x02211840 B.NE 0x221185C
	0x02211844 BL 0x1C16E08
	0x02211848 LDR X0, [X0]
	0x0221184C LDP X20, X19, [X31 + 0x10]
	0x02211850 LDP X30, X21, [X31], #0x20
	0x02211854 RET
	0x02211858 BL 0x1C16F20
	0x0221185C BL 0x1C171E0
	0x02211860 STP X30, X21, [X31 - 0x20]!
	0x02211864 STP X20, X19, [X31 + 0x10]
	0x02211868 LDR X8, [X1 + 0x38]
	0x0221186C MOV X19, X1
	0x02211870 MOV X20, X0
	0x02211874 CBNZ X8, 0x2211898
	0x02211878 ADRP X0, 0x1EE2000
	0x0221187C LDR X0, [X0 + 0x6C0]
	0x02211880 BL 0x1C16CF4
	0x02211884 LDR X8, [X19 + 0x38]
	0x02211888 CBNZ X8, 0x2211898
	0x0221188C MOV X0, X19
	0x02211890 BL 0x1C5C6E0
	0x02211894 LDR X8, [X19 + 0x38]
	0x02211898 ADRP X9, 0x1EE2000
	0x0221189C LDR X9, [X9 + 0x6C0]
	0x022118A0 LDR X21, [X8]
	0x022118A4 LDR X0, [X9]
	0x022118A8 LDR W9, [X0 + 0xE0]
	0x022118AC CBNZ W9, 0x22118B4
	0x022118B0 BL 0x1C16DFC
	0x022118B4 MOV X0, X21
	0x022118B8 MOV X1, X31
	0x022118BC BL 0x338C698
	0x022118C0 MOV X1, X0
	0x022118C4 MOV X0, X20
	0x022118C8 MOV X2, X31
	0x022118CC BL 0x3C86D98
	0x022118D0 LDR X8, [X19 + 0x38]
	0x022118D4 MOV X19, X0
	0x022118D8 LDR X1, [X8 + 0x8]
	0x022118DC LDRB W8, [X1 + 0x135]
	0x022118E0 TBNZ X8, 0x0, 0x22118F0
	0x022118E4 MOV X0, X1
	0x022118E8 BL 0x1C5C684
	0x022118EC MOV X1, X0
	0x022118F0 CBZ X19, 0x2211924
	0x022118F4 LDR X8, [X19]
	0x022118F8 LDR X9, [X1 + 0x40]
	0x022118FC MOV X0, X19
	0x02211900 LDR X8, [X8 + 0x40]
	0x02211904 CMP X8, X9
	0x02211908 B.NE 0x2211928
	0x0221190C BL 0x1C16E08
	0x02211910 LDP X8, X1, [X0]
	0x02211914 LDP X20, X19, [X31 + 0x10]
	0x02211918 MOV X0, X8
	0x0221191C LDP X30, X21, [X31], #0x20
	0x02211920 RET
	0x02211924 BL 0x1C16F20
	0x02211928 BL 0x1C171E0
	0x0221192C STR X30, [X31 - 0x30]!
	0x02211930 STP X22, X21, [X31 + 0x10]
	0x02211934 STP X20, X19, [X31 + 0x20]
	0x02211938 LDR X9, [X1 + 0x38]
	0x0221193C MOV X20, X1
	0x02211940 MOV X21, X0
	0x02211944 MOV X19, X8
	0x02211948 CBNZ X9, 0x221196C
	0x0221194C ADRP X0, 0x1EE2000
	0x02211950 LDR X0, [X0 + 0x6C0]
	0x02211954 BL 0x1C16CF4
	0x02211958 LDR X9, [X20 + 0x38]
	0x0221195C CBNZ X9, 0x221196C
	0x02211960 MOV X0, X20
	0x02211964 BL 0x1C5C6E0
	0x02211968 LDR X9, [X20 + 0x38]
	0x0221196C ADRP X8, 0x1EE2000
	0x02211970 LDR X8, [X8 + 0x6C0]
	0x02211974 LDR X22, [X9]
	0x02211978 LDR X0, [X8]
	0x0221197C LDR W8, [X0 + 0xE0]
	0x02211980 CBNZ W8, 0x2211988
	0x02211984 BL 0x1C16DFC
	0x02211988 MOV X0, X22
	0x0221198C MOV X1, X31
	0x02211990 BL 0x338C698
	0x02211994 MOV X1, X0
	0x02211998 MOV X0, X21
	0x0221199C MOV X2, X31
	0x022119A0 BL 0x3C86D98
	0x022119A4 LDR X8, [X20 + 0x38]

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X8, [X1+56]
	014 Move X21, X1
	015 Move X20, X0
	016 Compare X8, 0
	017 JumpIfNotEqual {42}
	018 Move X0, 0x1F0B000
	019 Move X0, [X0+4032]
	020 Call 0x1C17CF4
	021 Move X0, 0x1F0B000
	022 Move X0, [X0+4040]
	023 Call 0x1C17CF4
	024 Move X0, 0x1EE3000
	025 Move X0, [X0+3584]
	026 Call 0x1C17CF4
	027 Move X0, 0x1EE3000
	028 Move X0, [X0+3608]
	029 Call 0x1C17CF4
	030 Move X0, 0x1F0B000
	031 Move X0, [X0+4048]
	032 Call 0x1C17CF4
	033 Move X0, 0x1EE3000
	034 Move X0, [X0+1728]
	035 Call 0x1C17CF4
	036 Move X8, [X21+56]
	037 Compare X8, 0
	038 JumpIfNotEqual {42}
	039 Move X0, X21
	040 Call 0x1C5D6E0
	041 Move X8, [X21+56]
	042 Move X0, [X8]
	043 Move W8, [X0+309]
	044 Move TEMP, X8
	045 And TEMP, TEMP, 1
	046 Compare TEMP, 1
	047 JumpIfEqual {49}
	048 Call 0x1C5D684
	049 Call 0x1C17F10
	050 Move X8, [X21+56]
	051 Move X19, X0
	052 Move X1, [X8+8]
	053 Call Dictionary`2<Object, Object>..ctor, X0
	054 Compare X20, 0
	055 JumpIfEqual {286}
	056 Move X8, [X21+56]
	057 Move X1, [X8+16]
	058 Move W8, [X1+309]
	059 Move TEMP, X8
	060 And TEMP, TEMP, 1
	061 Compare TEMP, 1
	062 JumpIfEqual {66}
	063 Move X0, X1
	064 Call 0x1C5D684
	065 Move X1, X0
	066 Move X8, [X20]
	067 NotImplemented "Instruction LDRH not yet implemented."
	068 Compare X9, 0
	069 JumpIfEqual {76}
	070 Move X10, [X8+176]
	071 Add X10, X10, 8
	072 NotImplemented "Instruction LDUR not yet implemented."
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Subtract X9, X9, 1
	075 Add X10, X10, 16
	076 Move X0, X20
	077 Move W2, W31
	078 Call 0x1C5D788
	079 NotImplemented "Instruction LDRSW not yet implemented."
	080 Add X8, X8, X9
	081 Add X0, X8, 312
	082 Move X8, [X0]
	083 Move X1, [X0+8]
	084 Move X0, X20
	085 NotImplemented "Instruction BLR not yet implemented."
	086 Move X20, X0
	087 Compare X0, 0
	088 JumpIfEqual {287}
	089 Move X25, 0x1EE3000
	090 Move X26, 0x1F0B000
	091 Move X27, 0x1EE3000
	092 Move X28, 0x1F0B000
	093 Move X29, 0x1F0B000
	094 Move X25, [X25+3608]
	095 Move X26, [X26+4048]
	096 Move X27, [X27+1728]
	097 Move X28, [X28+4032]
	098 Move X29, [X29+4040]
	099 Move X8, [X20]
	100 Move X1, [X25]
	101 NotImplemented "Instruction LDRH not yet implemented."
	102 Compare X9, 0
	103 JumpIfEqual {110}
	104 Move X10, [X8+176]
	105 Add X10, X10, 8
	106 NotImplemented "Instruction LDUR not yet implemented."
	107 NotImplemented "Instruction CMP not yet implemented."
	108 Subtract X9, X9, 1
	109 Add X10, X10, 16
	110 Move X0, X20
	111 Move W2, W31
	112 Call 0x1C5D788
	113 NotImplemented "Instruction LDRSW not yet implemented."
	114 Add X8, X8, X9
	115 Add X0, X8, 312
	116 Move X8, [X0]
	117 Move X1, [X0+8]
	118 Move X0, X20
	119 NotImplemented "Instruction BLR not yet implemented."
	120 Move TEMP, X0
	121 And TEMP, TEMP, 1
	122 Compare TEMP, 1
	123 JumpIfNotEqual {239}
	124 Move X8, [X21+56]
	125 Move X1, [X8+32]
	126 Move W8, [X1+309]
	127 Move TEMP, X8
	128 And TEMP, TEMP, 1
	129 Compare TEMP, 1
	130 JumpIfEqual {134}
	131 Move X0, X1
	132 Call 0x1C5D684
	133 Move X1, X0
	134 Move X8, [X20]
	135 NotImplemented "Instruction LDRH not yet implemented."
	136 Compare X9, 0
	137 JumpIfEqual {144}
	138 Move X10, [X8+176]
	139 Add X10, X10, 8
	140 NotImplemented "Instruction LDUR not yet implemented."
	141 NotImplemented "Instruction CMP not yet implemented."
	142 Subtract X9, X9, 1
	143 Add X10, X10, 16
	144 Move X0, X20
	145 Move W2, W31
	146 Call 0x1C5D788
	147 NotImplemented "Instruction LDRSW not yet implemented."
	148 Add X8, X8, X9
	149 Add X0, X8, 312
	150 Move X8, [X0]
	151 Move X1, [X0+8]
	152 Move X0, X20
	153 NotImplemented "Instruction BLR not yet implemented."
	154 Move X22, X0
	155 Move X0, [X27]
	156 Move X23, [X26]
	157 Move W8, [X0+224]
	158 Compare W8, 0
	159 JumpIfNotEqual {161}
	160 Call 0x1C17DFC
	161 Move X0, X23
	162 Move X1, X31
	163 Call Type.GetTypeFromHandle, X0
	164 Move X1, X0
	165 Compare X22, 0
	166 JumpIfEqual {281}
	167 Move X8, [X22]
	168 Move X9, [X8+488]
	169 Move X3, [X8+496]
	170 Move W2, 1
	171 Move X0, X22
	172 NotImplemented "Instruction BLR not yet implemented."
	173 Move TEMP, X0
	174 And TEMP, TEMP, 1
	175 Compare TEMP, 1
	176 JumpIfEqual {99}
	177 Move X8, [X22]
	178 Move X9, [X8+424]
	179 Move X1, [X8+432]
	180 Move X0, X22
	181 NotImplemented "Instruction BLR not yet implemented."
	182 Move X23, X0
	183 Move X0, [X27]
	184 Move X24, [X28]
	185 Move W8, [X0+224]
	186 Compare W8, 0
	187 JumpIfNotEqual {189}
	188 Call 0x1C17DFC
	189 Move X0, X24
	190 Move X1, X31
	191 Call Type.GetTypeFromHandle, X0
	192 Move X1, X0
	193 Move X8, [X22]
	194 Move X9, [X8+488]
	195 Move X3, [X8+496]
	196 Move W2, 1
	197 Move X0, X22
	198 NotImplemented "Instruction BLR not yet implemented."
	199 Move TEMP, X0
	200 And TEMP, TEMP, 1
	201 Compare TEMP, 1
	202 JumpIfNotEqual {231}
	203 Move X0, [X27]
	204 Move X24, [X28]
	205 Move W8, [X0+224]
	206 Compare W8, 0
	207 JumpIfNotEqual {209}
	208 Call 0x1C17DFC
	209 Move X0, X24
	210 Move X1, X31
	211 Call Type.GetTypeFromHandle, X0
	212 Move X1, X0
	213 Move W2, 1
	214 Move X0, X22
	215 Move X3, X31
	216 Call Attribute.GetCustomAttribute, X0, X1, X2
	217 Move X24, X0
	218 Compare X0, 0
	219 JumpIfEqual {283}
	220 Move X1, [X29]
	221 Move X8, [X24]
	222 NotImplemented "Instruction CMP not yet implemented."
	223 Move X0, [X24+16]
	224 Move X1, X31
	225 Call String.IsNullOrEmpty, X0
	226 Move TEMP, X0
	227 And TEMP, TEMP, 1
	228 Compare TEMP, 1
	229 JumpIfEqual {231}
	230 Move X23, [X24+16]
	231 Compare X19, 0
	232 JumpIfEqual {282}
	233 Move X8, [X21+56]
	234 Move X3, [X8+56]
	235 Move X0, X19
	236 Move X1, X23
	237 Move X2, X22
	238 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	239 Move X22, X31
	240 Compare X20, 0
	241 JumpIfEqual {265}
	242 Move X10, 0x1EE3000
	243 Move X8, [X20]
	244 Move X10, [X10+3584]
	245 NotImplemented "Instruction LDRH not yet implemented."
	246 Move X1, [X10]
	247 Compare X9, 0
	248 JumpIfEqual {255}
	249 Move X10, [X8+176]
	250 Add X10, X10, 8
	251 NotImplemented "Instruction LDUR not yet implemented."
	252 NotImplemented "Instruction CMP not yet implemented."
	253 Subtract X9, X9, 1
	254 Add X10, X10, 16
	255 Move X0, X20
	256 Move W2, W31
	257 Call 0x1C5D788
	258 NotImplemented "Instruction LDRSW not yet implemented."
	259 Add X8, X8, X9
	260 Add X0, X8, 312
	261 Move X8, [X0]
	262 Move X1, [X0+8]
	263 Move X0, X20
	264 NotImplemented "Instruction BLR not yet implemented."
	265 Compare X22, 0
	266 JumpIfNotEqual {288}
	267 Move X0, X19
	268 Move X20, [X31+80]
	269 Move X19, [X31+88]
	270 Move X22, [X31+64]
	271 Move X21, [X31+72]
	272 Move X24, [X31+48]
	273 Move X23, [X31+56]
	274 Move X26, [X31+32]
	275 Move X25, [X31+40]
	276 Move X28, [X31+16]
	277 Move X27, [X31+24]
	278 Move X29, [X31+96]
	279 Move X30, [X31+104]
	280 Return X0
	281 Call 0x1C17F20
	282 Call 0x1C17F20
	283 Call 0x1C17F20
	284 Move X0, X24
	285 Call 0x1C181E0
	286 Call 0x1C17F20
	287 Call 0x1C17F20
	288 Move X0, X22
	289 Call 0x1C17F18
	290 Move X21, X0
	291 NotImplemented "Instruction CMP not yet implemented."
	292 Move X0, X21
	293 Call 0x3EB2AD0
	294 Move X22, [X0]
	295 Call 0x3EB2AE0
	296 Move X22, X31
	297 Move X21, X0
	298 Compare X20, 0
	299 JumpIfEqual {323}
	300 Move X10, 0x1EE3000
	301 Move X8, [X20]
	302 Move X10, [X10+3584]
	303 NotImplemented "Instruction LDRH not yet implemented."
	304 Move X1, [X10]
	305 Compare X9, 0
	306 JumpIfEqual {313}
	307 Move X10, [X8+176]
	308 Add X10, X10, 8
	309 NotImplemented "Instruction LDUR not yet implemented."
	310 NotImplemented "Instruction CMP not yet implemented."
	311 Subtract X9, X9, 1
	312 Add X10, X10, 16
	313 Move X0, X20
	314 Move W2, W31
	315 Call 0x1C5D788
	316 NotImplemented "Instruction LDRSW not yet implemented."
	317 Add X8, X8, X9
	318 Add X0, X8, 312
	319 Move X8, [X0]
	320 Move X1, [X0+8]
	321 Move X0, X20
	322 NotImplemented "Instruction BLR not yet implemented."
	323 Compare X22, 0
	324 JumpIfNotEqual {327}
	325 Move X0, X21
	326 Call 0x1D2D690
	327 Move X0, X22
	328 Call 0x1C17F18
	329 Call 0x1991590

Method: System.Object ParseObject(System.Type type, System.String json)

Disassembly:
	0x035ABC08 LDR X1, [X22]
	0x035ABC0C LDRH W9, [X8 + 0x12E]
	0x035ABC10 CBZ X9, 0x35ABC34
	0x035ABC14 LDR X10, [X8 + 0xB0]
	0x035ABC18 ADD X10, X10, 0x8
	0x035ABC1C LDUR X11, [X10 - 0x8]
	0x035ABC20 CMP X11, X1
	0x035ABC24 B.EQ 0x35ABC44
	0x035ABC28 SUBS X9, X9, 0x1
	0x035ABC2C ADD X10, X10, 0x10
	0x035ABC30 B.NE 0x35ABC1C
	0x035ABC34 MOVZ W2, 0x1
	0x035ABC38 MOV X0, X20
	0x035ABC3C BL 0x1C5C788
	0x035ABC40 B 0x35ABC54
	0x035ABC44 LDR W9, [X10]
	0x035ABC48 ADD W9, W9, 0x1
	0x035ABC4C ADD X8, X8, W9, 0x4, SXTW
	0x035ABC50 ADD X0, X8, 0x138
	0x035ABC54 LDP X8, X1, [X0]
	0x035ABC58 MOV X0, X20
	0x035ABC5C BLR X8
	0x035ABC60 MOV X21, X0
	0x035ABC64 TBNZ X23, 0x0, 0x35ABC78
	0x035ABC68 MOVZ W1, 0x2C
	0x035ABC6C MOV X0, X19
	0x035ABC70 MOV X2, X31
	0x035ABC74 BL 0x3233D30
	0x035ABC78 MOV X0, X19
	0x035ABC7C MOV X1, X21
	0x035ABC80 BL 0x35AAFC4
	0x035ABC84 MOV W23, W31
	0x035ABC88 B 0x35ABBA8
	0x035ABC8C MOV X22, X31
	0x035ABC90 MOVZ W21, 0x1F
	0x035ABC94 ADRP X23, 0xB48000
	0x035ABC98 LDR X23, [X23 + 0xE00]
	0x035ABC9C MOV X0, X20
	0x035ABCA0 LDR X1, [X23]
	0x035ABCA4 BL 0x1C16E00
	0x035ABCA8 CBZ X0, 0x35ABD08
	0x035ABCAC LDR X8, [X0]
	0x035ABCB0 LDR X1, [X23]
	0x035ABCB4 MOV X20, X0
	0x035ABCB8 LDRH W9, [X8 + 0x12E]
	0x035ABCBC CBZ X9, 0x35ABCE0
	0x035ABCC0 LDR X10, [X8 + 0xB0]
	0x035ABCC4 ADD X10, X10, 0x8
	0x035ABCC8 LDUR X11, [X10 - 0x8]
	0x035ABCCC CMP X11, X1
	0x035ABCD0 B.EQ 0x35ABCF0
	0x035ABCD4 SUBS X9, X9, 0x1
	0x035ABCD8 ADD X10, X10, 0x10
	0x035ABCDC B.NE 0x35ABCC8
	0x035ABCE0 MOV X0, X20
	0x035ABCE4 MOV W2, W31
	0x035ABCE8 BL 0x1C5C788
	0x035ABCEC B 0x35ABCFC
	0x035ABCF0 LDRSW X9, [X10]
	0x035ABCF4 ADD X8, X8, X9, 0x4, LSL
	0x035ABCF8 ADD X0, X8, 0x138
	0x035ABCFC LDP X8, X1, [X0]
	0x035ABD00 MOV X0, X20
	0x035ABD04 BLR X8
	0x035ABD08 CBNZ X22, 0x35AC1C4
	0x035ABD0C LDR X23, [X31]
	0x035ABD10 CMP W21, 0x1F
	0x035ABD14 B.EQ 0x35ABD1C
	0x035ABD18 CBNZ W21, 0x35AB5A8
	0x035ABD1C MOVZ W1, 0x5D
	0x035ABD20 B 0x35AB384
	0x035ABD24 MOVZ W26, 0x1
	0x035ABD28 LDR X8, [X21]
	0x035ABD2C MOVZ W1, 0x54
	0x035ABD30 MOV X0, X21
	0x035ABD34 LDR X9, [X8 + 0x7E8]
	0x035ABD38 LDR X2, [X8 + 0x7F0]
	0x035ABD3C BLR X9
	0x035ABD40 CBZ X0, 0x35ABF58
	0x035ABD44 LDR W8, [X0 + 0x18]
	0x035ABD48 MOV X21, X0
	0x035ABD4C CMP W8, 0x1
	0x035ABD50 B.LT 0x35ABE60
	0x035ABD54 ADRP X27, 0xB70000
	0x035ABD58 ADRP X28, 0xB86000
	0x035ABD5C LDR X27, [X27 + 0xFD0]
	0x035ABD60 LDR X28, [X28 + 0x298]
	0x035ABD64 MOV W24, W31
	0x035ABD68 CMP W24, W8
	0x035ABD6C B.CS 0x35AC1B8
	0x035ABD70 ADD X8, X21, W24, 0x3, SXTW
	0x035ABD74 LDR X22, [X8 + 0x20]
	0x035ABD78 CBZ X22, 0x35ABF58
	0x035ABD7C LDR X8, [X22]
	0x035ABD80 MOV X0, X22
	0x035ABD84 LDR X9, [X8 + 0x268]
	0x035ABD88 LDR X1, [X8 + 0x270]
	0x035ABD8C BLR X9
	0x035ABD90 TBZ X0, 0x0, 0x35ABE50
	0x035ABD94 LDR X0, [X25]
	0x035ABD98 LDR X23, [X27]
	0x035ABD9C LDR W8, [X0 + 0xE0]
	0x035ABDA0 CBNZ W8, 0x35ABDA8
	0x035ABDA4 BL 0x1C16DFC
	0x035ABDA8 MOV X0, X23
	0x035ABDAC MOV X1, X31
	0x035ABDB0 BL 0x338C698
	0x035ABDB4 LDR X8, [X22]
	0x035ABDB8 MOV X1, X0
	0x035ABDBC MOVZ W2, 0x1
	0x035ABDC0 MOV X0, X22
	0x035ABDC4 LDP X9, X3, [X8 + 0x1E8]
	0x035ABDC8 BLR X9
	0x035ABDCC TBNZ X0, 0x0, 0x35ABE50
	0x035ABDD0 LDR X8, [X22]
	0x035ABDD4 MOV X0, X22
	0x035ABDD8 MOV X1, X20
	0x035ABDDC MOV X2, X31
	0x035ABDE0 LDR X9, [X8 + 0x2C8]
	0x035ABDE4 LDR X3, [X8 + 0x2D0]
	0x035ABDE8 BLR X9
	0x035ABDEC CBZ X0, 0x35ABE50
	0x035ABDF0 MOV X23, X0
	0x035ABDF4 TBNZ X26, 0x0, 0x35ABE08
	0x035ABDF8 MOVZ W1, 0x2C
	0x035ABDFC MOV X0, X19
	0x035ABE00 MOV X2, X31
	0x035ABE04 BL 0x3233D30
	0x035ABE08 MOVZ W1, 0x22
	0x035ABE0C MOV X0, X19
	0x035ABE10 MOV X2, X31
	0x035ABE14 BL 0x3233D30
	0x035ABE18 MOV X0, X22
	0x035ABE1C BL 0x35AC388
	0x035ABE20 MOV X1, X0
	0x035ABE24 MOV X0, X19
	0x035ABE28 MOV X2, X31
	0x035ABE2C BL 0x32333E0
	0x035ABE30 LDR X1, [X28]
	0x035ABE34 MOV X0, X19
	0x035ABE38 MOV X2, X31
	0x035ABE3C BL 0x32333E0
	0x035ABE40 MOV X0, X19
	0x035ABE44 MOV X1, X23
	0x035ABE48 BL 0x35AAFC4
	0x035ABE4C MOV W26, W31
	0x035ABE50 LDR W8, [X21 + 0x18]
	0x035ABE54 ADD W24, W24, 0x1
	0x035ABE58 CMP W24, W8
	0x035ABE5C B.LT 0x35ABD68
	0x035ABE60 MOVZ W1, 0x7D
	0x035ABE64 MOV X0, X19
	0x035ABE68 MOV X2, X31
	0x035ABE6C BL 0x3233D30
	0x035ABE70 LDR X23, [X31]
	0x035ABE74 B 0x35AB5A8
	0x035ABE78 MOVZ W1, 0x7B
	0x035ABE7C MOV X0, X19
	0x035ABE80 MOV X2, X31
	0x035ABE84 BL 0x3233D30
	0x035ABE88 ADRP X23, 0xB48000
	0x035ABE8C LDR X23, [X23 + 0x818]
	0x035ABE90 MOV X0, X20
	0x035ABE94 LDR X1, [X23]
	0x035ABE98 BL 0x1C16E00
	0x035ABE9C CBZ X0, 0x35ABF58
	0x035ABEA0 LDR X8, [X0]
	0x035ABEA4 LDR X1, [X23]
	0x035ABEA8 MOV X21, X0
	0x035ABEAC LDRH W9, [X8 + 0x12E]
	0x035ABEB0 CBZ X9, 0x35ABED4
	0x035ABEB4 LDR X10, [X8 + 0xB0]
	0x035ABEB8 ADD X10, X10, 0x8
	0x035ABEBC LDUR X11, [X10 - 0x8]
	0x035ABEC0 CMP X11, X1
	0x035ABEC4 B.EQ 0x35ABEEC
	0x035ABEC8 SUBS X9, X9, 0x1
	0x035ABECC ADD X10, X10, 0x10
	0x035ABED0 B.NE 0x35ABEBC
	0x035ABED4 MOVZ W2, 0x2
	0x035ABED8 MOV X0, X21
	0x035ABEDC BL 0x1C5C788
	0x035ABEE0 B 0x35ABEFC
	0x035ABEE4 MOV X0, X20
	0x035ABEE8 BL 0x1C171E0
	0x035ABEEC LDR W9, [X10]
	0x035ABEF0 ADD W9, W9, 0x2
	0x035ABEF4 ADD X8, X8, W9, 0x4, SXTW
	0x035ABEF8 ADD X0, X8, 0x138
	0x035ABEFC LDP X8, X1, [X0]
	0x035ABF00 MOV X0, X21
	0x035ABF04 BLR X8
	0x035ABF08 CBZ X0, 0x35ABF58
	0x035ABF0C ADRP X10, 0xB50000
	0x035ABF10 LDR X8, [X0]
	0x035ABF14 LDR X10, [X10 + 0xDB8]
	0x035ABF18 MOV X20, X0
	0x035ABF1C LDRH W9, [X8 + 0x12E]
	0x035ABF20 LDR X1, [X10]
	0x035ABF24 CBZ X9, 0x35ABF48
	0x035ABF28 LDR X10, [X8 + 0xB0]
	0x035ABF2C ADD X10, X10, 0x8
	0x035ABF30 LDUR X11, [X10 - 0x8]
	0x035ABF34 CMP X11, X1
	0x035ABF38 B.EQ 0x35ABF5C
	0x035ABF3C SUBS X9, X9, 0x1
	0x035ABF40 ADD X10, X10, 0x10
	0x035ABF44 B.NE 0x35ABF30
	0x035ABF48 MOV X0, X20
	0x035ABF4C MOV W2, W31
	0x035ABF50 BL 0x1C5C788
	0x035ABF54 B 0x35ABF68
	0x035ABF58 BL 0x1C16F20
	0x035ABF5C LDRSW X9, [X10]
	0x035ABF60 ADD X8, X8, X9, 0x4, LSL
	0x035ABF64 ADD X0, X8, 0x138
	0x035ABF68 LDP X8, X1, [X0]
	0x035ABF6C MOV X0, X20
	0x035ABF70 BLR X8
	0x035ABF74 MOV X20, X0
	0x035ABF78 CBZ X0, 0x35AC1E8
	0x035ABF7C ADRP X24, 0xB48000
	0x035ABF80 ADRP X25, 0xB4A000
	0x035ABF84 ADRP X26, 0xB86000
	0x035ABF88 LDR X24, [X24 + 0xE18]
	0x035ABF8C LDR X25, [X25 + 0x278]
	0x035ABF90 LDR X26, [X26 + 0x298]
	0x035ABF94 MOVZ W27, 0x1
	0x035ABF98 LDR X8, [X20]
	0x035ABF9C LDR X1, [X24]
	0x035ABFA0 LDRH W9, [X8 + 0x12E]
	0x035ABFA4 CBZ X9, 0x35ABFC8
	0x035ABFA8 LDR X10, [X8 + 0xB0]
	0x035ABFAC ADD X10, X10, 0x8
	0x035ABFB0 LDUR X11, [X10 - 0x8]
	0x035ABFB4 CMP X11, X1
	0x035ABFB8 B.EQ 0x35ABFD8
	0x035ABFBC SUBS X9, X9, 0x1
	0x035ABFC0 ADD X10, X10, 0x10

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+32], X30
	003 Move [X31+48], X26
	004 Move [X31+56], X25
	005 Move [X31+64], X24
	006 Move [X31+72], X23
	007 Move [X31+80], X22
	008 Move [X31+88], X21
	009 Move [X31+96], X20
	010 Move [X31+104], X19
	011 Move X22, 0xE36000
	012 Move X19, 0xB7A000
	013 Move W8, [X22+53]
	014 Move X19, [X19+2928]
	015 Move X20, X1
	016 Move X21, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {59}
	021 Move X0, 0xB87000
	022 Move X0, [X0+576]
	023 Call 0x1C17CF4
	024 Move X0, 0xB87000
	025 Move X0, [X0+584]
	026 Call 0x1C17CF4
	027 Move X0, 0xB87000
	028 Move X0, [X0+592]
	029 Call 0x1C17CF4
	030 Move X0, 0xB87000
	031 Move X0, [X0+600]
	032 Call 0x1C17CF4
	033 Move X0, 0xB87000
	034 Move X0, [X0+608]
	035 Call 0x1C17CF4
	036 Move X0, 0xB87000
	037 Move X0, [X0+616]
	038 Call 0x1C17CF4
	039 Move X0, 0xB7A000
	040 Move X0, [X0+2928]
	041 Call 0x1C17CF4
	042 Move X0, 0xB8D000
	043 Move X0, [X0+1552]
	044 Call 0x1C17CF4
	045 Move X0, 0xB8D000
	046 Move X0, [X0+1560]
	047 Call 0x1C17CF4
	048 Move X0, 0xB72000
	049 Move X0, [X0+16]
	050 Call 0x1C17CF4
	051 Move X0, 0xB4A000
	052 Move X0, [X0+456]
	053 Call 0x1C17CF4
	054 Move X0, 0xB71000
	055 Move X0, [X0+2904]
	056 Call 0x1C17CF4
	057 Move W8, 1
	058 Move [X22+53], W8
	059 Move X0, [X19]
	060 Move [X31+40], X31
	061 Move [X31+16], X31
	062 Move [X31+24], X31
	063 Move [X31+8], X31
	064 Move W8, [X0+224]
	065 Compare W8, 0
	066 JumpIfNotEqual {68}
	067 Call 0x1C17DFC
	068 Move X0, X21
	069 Move X1, X31
	070 Call FormatterServices.GetUninitializedObject, X0
	071 Move X19, X0
	072 Move X0, X20
	073 Call JsonParser.Split, X0
	074 Compare X0, 0
	075 JumpIfEqual {277}
	076 Move W8, [X0+24]
	077 Move X20, X0
	078 Move TEMP, X8
	079 And TEMP, TEMP, 1
	080 Compare TEMP, 1
	081 JumpIfEqual {265}
	082 Move X22, 0xB72000
	083 Move X22, [X22+16]
	084 Move X0, [X22]
	085 Call 0x1C17D0C
	086 Move X0, [X0+16]
	087 Compare X0, 0
	088 JumpIfEqual {277}
	089 Move X8, 0xB87000
	090 Move X8, [X8+600]
	091 Add X2, X31, 40
	092 Move X1, X21
	093 Move X3, [X8]
	094 Call Dictionary`2<Object, Object>.TryGetValue, X0, X1, X2
	095 Move TEMP, X0
	096 And TEMP, TEMP, 1
	097 Compare TEMP, 1
	098 JumpIfEqual {124}
	099 Compare X21, 0
	100 JumpIfEqual {277}
	101 Move X8, [X21]
	102 Move W1, 84
	103 Move X0, X21
	104 Move X9, [X8+1672]
	105 Move X2, [X8+1680]
	106 NotImplemented "Instruction BLR not yet implemented."
	107 Move X8, 0xB8D000
	108 Move X8, [X8+1552]
	109 Move X1, [X8]
	110 Call 0x22114DC, X0
	111 Move X8, [X22]
	112 Move [X31+40], X0
	113 Move X0, X8
	114 Call 0x1C17D0C
	115 Move X0, [X0+16]
	116 Compare X0, 0
	117 JumpIfEqual {277}
	118 Move X8, 0xB87000
	119 Move X2, [X31+40]
	120 Move X8, [X8+576]
	121 Move X1, X21
	122 Move X3, [X8]
	123 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	124 Move X0, [X22]
	125 Call 0x1C17D0C
	126 Move X0, [X0+24]
	127 Compare X0, 0
	128 JumpIfEqual {277}
	129 Move X8, 0xB87000
	130 Move X8, [X8+608]
	131 Add X2, X31, 24
	132 Move X1, X21
	133 Move X3, [X8]
	134 Call Dictionary`2<Object, Object>.TryGetValue, X0, X1, X2
	135 Move TEMP, X0
	136 And TEMP, TEMP, 1
	137 Compare TEMP, 1
	138 JumpIfEqual {164}
	139 Compare X21, 0
	140 JumpIfEqual {277}
	141 Move X8, [X21]
	142 Move W1, 84
	143 Move X0, X21
	144 Move X9, [X8+2024]
	145 Move X2, [X8+2032]
	146 NotImplemented "Instruction BLR not yet implemented."
	147 Move X8, 0xB8D000
	148 Move X8, [X8+1560]
	149 Move X1, [X8]
	150 Call 0x22114DC, X0
	151 Move X8, [X22]
	152 Move [X31+24], X0
	153 Move X0, X8
	154 Call 0x1C17D0C
	155 Move X0, [X0+24]
	156 Compare X0, 0
	157 JumpIfEqual {277}
	158 Move X8, 0xB87000
	159 Move X2, [X31+24]
	160 Move X8, [X8+584]
	161 Move X1, X21
	162 Move X3, [X8]
	163 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	164 Move W8, [X20+24]
	165 NotImplemented "Instruction CMP not yet implemented."
	166 Move X24, 0xB71000
	167 Move X25, 0xB87000
	168 Move X26, 0xB87000
	169 Move X24, [X24+2904]
	170 Move X25, [X25+616]
	171 Move X26, [X26+592]
	172 Move W21, W31
	173 Move X2, [X24]
	174 Move X0, X20
	175 Move W1, W21
	176 Call List`1<Object>.get_Item, X0, X1
	177 Compare X0, 0
	178 JumpIfEqual {277}
	179 Move W8, [X0+16]
	180 NotImplemented "Instruction CMP not yet implemented."
	181 Move X2, [X24]
	182 Move X0, X20
	183 Move W1, W21
	184 Call List`1<Object>.get_Item, X0, X1
	185 Move X2, [X24]
	186 Move X22, X0
	187 Move X0, X20
	188 Move W1, W21
	189 Call List`1<Object>.get_Item, X0, X1
	190 Compare X0, 0
	191 JumpIfEqual {277}
	192 Compare X22, 0
	193 JumpIfEqual {277}
	194 Move W8, [X0+16]
	195 Move W1, 1
	196 Move X0, X22
	197 Move X3, X31
	198 Subtract W2, W8, 2
	199 Call String.Substring, X0, X1, X2
	200 Move X2, [X24]
	201 Move X23, X0
	202 Add W1, W21, 1
	203 Move X0, X20
	204 Call List`1<Object>.get_Item, X0, X1
	205 Move X8, [X31+40]
	206 Compare X8, 0
	207 JumpIfEqual {277}
	208 Move X3, [X25]
	209 Move X22, X0
	210 Add X2, X31, 16
	211 Move X0, X8
	212 Move X1, X23
	213 Call Dictionary`2<Object, Object>.TryGetValue, X0, X1, X2
	214 Move TEMP, X0
	215 And TEMP, TEMP, 1
	216 Compare TEMP, 1
	217 JumpIfNotEqual {233}
	218 Move X23, [X31+16]
	219 Compare X23, 0
	220 JumpIfEqual {277}
	221 Move X8, [X23]
	222 Move X0, X23
	223 Move X9, [X8+600]
	224 Move X1, [X8+608]
	225 NotImplemented "Instruction BLR not yet implemented."
	226 Move X1, X22
	227 Call JsonParser.ParseValue, X0, X1
	228 Move X2, X0
	229 Move X0, X23
	230 Move X1, X19
	231 Move X3, X31
	232 Call FieldInfo.SetValue, X0, X1, X2
	233 Move X0, [X31+24]
	234 Compare X0, 0
	235 JumpIfEqual {277}
	236 Move X3, [X26]
	237 Add X2, X31, 8
	238 Move X1, X23
	239 Call Dictionary`2<Object, Object>.TryGetValue, X0, X1, X2
	240 Move TEMP, X0
	241 And TEMP, TEMP, 1
	242 Compare TEMP, 1
	243 JumpIfNotEqual {262}
	244 Move X23, [X31+8]
	245 Compare X23, 0
	246 JumpIfEqual {277}
	247 Move X8, [X23]
	248 Move X0, X23
	249 Move X9, [X8+584]
	250 Move X1, [X8+592]
	251 NotImplemented "Instruction BLR not yet implemented."
	252 Move X1, X22
	253 Call JsonParser.ParseValue, X0, X1
	254 Move X8, [X23]
	255 Move X2, X0
	256 Move X0, X23
	257 Move X1, X19
	258 Move X9, [X8+744]
	259 Move X4, [X8+752]
	260 Move X3, X31
	261 NotImplemented "Instruction BLR not yet implemented."
	262 Move W8, [X20+24]
	263 Add W21, W21, 2
	264 NotImplemented "Instruction CMP not yet implemented."
	265 Move X0, X19
	266 Move X20, [X31+96]
	267 Move X19, [X31+104]
	268 Move X22, [X31+80]
	269 Move X21, [X31+88]
	270 Move X24, [X31+64]
	271 Move X23, [X31+72]
	272 Move X26, [X31+48]
	273 Move X25, [X31+56]
	274 Move X30, [X31+32]
	275 Add X31, X31, 112
	276 Return X0
	277 Call 0x1C17F20

