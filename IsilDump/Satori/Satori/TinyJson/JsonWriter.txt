Type: Satori.TinyJson.JsonWriter

Method: System.String ToJson(System.Object item)

Disassembly:
	0x03598D7C LDR W25, [X24 + 0x18]
	0x03598D80 LDP X26, X24, [X19 + 0x30]
	0x03598D84 LDR X1, [X10]
	0x03598D88 LDRH W9, [X8 + 0x12E]
	0x03598D8C CBZ X9, 0x3598DB0
	0x03598D90 LDR X10, [X8 + 0xB0]
	0x03598D94 ADD X10, X10, 0x8
	0x03598D98 LDUR X11, [X10 - 0x8]
	0x03598D9C CMP X11, X1
	0x03598DA0 B.EQ 0x3598DD8
	0x03598DA4 SUBS X9, X9, 0x1
	0x03598DA8 ADD X10, X10, 0x10
	0x03598DAC B.NE 0x3598D98
	0x03598DB0 MOVZ W2, 0x3
	0x03598DB4 MOV X0, X23
	0x03598DB8 BL 0x1C5C788
	0x03598DBC B 0x3598DE8
	0x03598DC0 LDR X8, [X19 + 0x40]
	0x03598DC4 MOVN W9, 0x0
	0x03598DC8 STR X8, [X31 + 0x8]
	0x03598DCC STR X31, [X19 + 0x40]
	0x03598DD0 STR W9, [X19]
	0x03598DD4 B 0x3598E44
	0x03598DD8 LDR W9, [X10]
	0x03598DDC ADD W9, W9, 0x3
	0x03598DE0 ADD X8, X8, W9, 0x4, SXTW
	0x03598DE4 ADD X0, X8, 0x138
	0x03598DE8 LDP X8, X9, [X0]
	0x03598DEC MOV X0, X23

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xE49000
	006 Move X21, 0xB5C000
	007 Move W8, [X20+54]
	008 Move X21, [X21+2288]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xB5C000
	015 Move X0, [X0+2288]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+54], W8
	019 Move X0, [X21]
	020 Call 0x1C17F10
	021 Move X1, X31
	022 Move X20, X0
	023 Call StringBuilder..ctor, X0
	024 Move X0, X20
	025 Move X1, X19
	026 Call JsonWriter.AppendValue, X0, X1
	027 Compare X20, 0
	028 JumpIfEqual {38}
	029 Move X8, [X20]
	030 Move X0, X20
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X2, [X8+360]
	034 Move X1, [X8+368]
	035 Move X30, [X31+32]
	036 Move X21, [X31+40]
	037 CallNoReturn X2
	038 Call 0x1C17F20

Method: System.Void AppendValue(System.Text.StringBuilder stringBuilder, System.Object item)

Disassembly:
	0x035ABFC4 B.NE 0x35ABFB0
	0x035ABFC8 MOV X0, X20
	0x035ABFCC MOV W2, W31
	0x035ABFD0 BL 0x1C5C788
	0x035ABFD4 B 0x35ABFE4
	0x035ABFD8 LDRSW X9, [X10]
	0x035ABFDC ADD X8, X8, X9, 0x4, LSL
	0x035ABFE0 ADD X0, X8, 0x138
	0x035ABFE4 LDP X8, X1, [X0]
	0x035ABFE8 MOV X0, X20
	0x035ABFEC BLR X8
	0x035ABFF0 TBZ X0, 0x0, 0x35AC11C
	0x035ABFF4 LDR X8, [X20]
	0x035ABFF8 LDR X1, [X24]
	0x035ABFFC LDRH W9, [X8 + 0x12E]
	0x035AC000 CBZ X9, 0x35AC024
	0x035AC004 LDR X10, [X8 + 0xB0]
	0x035AC008 ADD X10, X10, 0x8
	0x035AC00C LDUR X11, [X10 - 0x8]
	0x035AC010 CMP X11, X1
	0x035AC014 B.EQ 0x35AC034
	0x035AC018 SUBS X9, X9, 0x1
	0x035AC01C ADD X10, X10, 0x10
	0x035AC020 B.NE 0x35AC00C
	0x035AC024 MOVZ W2, 0x1
	0x035AC028 MOV X0, X20
	0x035AC02C BL 0x1C5C788
	0x035AC030 B 0x35AC044
	0x035AC034 LDR W9, [X10]
	0x035AC038 ADD W9, W9, 0x1
	0x035AC03C ADD X8, X8, W9, 0x4, SXTW
	0x035AC040 ADD X0, X8, 0x138
	0x035AC044 LDP X8, X1, [X0]
	0x035AC048 MOV X0, X20
	0x035AC04C BLR X8
	0x035AC050 MOV X22, X0
	0x035AC054 TBNZ X27, 0x0, 0x35AC068
	0x035AC058 MOVZ W1, 0x2C
	0x035AC05C MOV X0, X19
	0x035AC060 MOV X2, X31
	0x035AC064 BL 0x3233D30
	0x035AC068 MOVZ W1, 0x22
	0x035AC06C MOV X0, X19
	0x035AC070 MOV X2, X31
	0x035AC074 BL 0x3233D30
	0x035AC078 CBZ X22, 0x35AC08C
	0x035AC07C LDR X1, [X25]
	0x035AC080 LDR X8, [X22]
	0x035AC084 CMP X8, X1
	0x035AC088 B.NE 0x35AC1BC
	0x035AC08C MOV X0, X19
	0x035AC090 MOV X1, X22
	0x035AC094 MOV X2, X31
	0x035AC098 BL 0x32333E0
	0x035AC09C LDR X1, [X26]
	0x035AC0A0 MOV X0, X19
	0x035AC0A4 MOV X2, X31
	0x035AC0A8 BL 0x32333E0
	0x035AC0AC LDR X8, [X21]
	0x035AC0B0 LDR X1, [X23]
	0x035AC0B4 LDRH W9, [X8 + 0x12E]
	0x035AC0B8 CBZ X9, 0x35AC0DC
	0x035AC0BC LDR X10, [X8 + 0xB0]
	0x035AC0C0 ADD X10, X10, 0x8
	0x035AC0C4 LDUR X11, [X10 - 0x8]
	0x035AC0C8 CMP X11, X1
	0x035AC0CC B.EQ 0x35AC0EC
	0x035AC0D0 SUBS X9, X9, 0x1
	0x035AC0D4 ADD X10, X10, 0x10
	0x035AC0D8 B.NE 0x35AC0C4
	0x035AC0DC MOV X0, X21
	0x035AC0E0 MOV W2, W31
	0x035AC0E4 BL 0x1C5C788
	0x035AC0E8 B 0x35AC0F8
	0x035AC0EC LDRSW X9, [X10]
	0x035AC0F0 ADD X8, X8, X9, 0x4, LSL
	0x035AC0F4 ADD X0, X8, 0x138
	0x035AC0F8 LDP X8, X2, [X0]
	0x035AC0FC MOV X0, X21
	0x035AC100 MOV X1, X22
	0x035AC104 BLR X8
	0x035AC108 MOV X1, X0
	0x035AC10C MOV X0, X19
	0x035AC110 BL 0x35AAFC4
	0x035AC114 MOV W27, W31
	0x035AC118 B 0x35ABF98
	0x035AC11C MOV X22, X31
	0x035AC120 MOVZ W21, 0x26
	0x035AC124 ADRP X23, 0xB47000
	0x035AC128 LDR X23, [X23 + 0xE00]
	0x035AC12C MOV X0, X20
	0x035AC130 LDR X1, [X23]
	0x035AC134 BL 0x1C16E00
	0x035AC138 CBZ X0, 0x35AC198
	0x035AC13C LDR X8, [X0]
	0x035AC140 LDR X1, [X23]
	0x035AC144 MOV X20, X0
	0x035AC148 LDRH W9, [X8 + 0x12E]
	0x035AC14C CBZ X9, 0x35AC170
	0x035AC150 LDR X10, [X8 + 0xB0]
	0x035AC154 ADD X10, X10, 0x8
	0x035AC158 LDUR X11, [X10 - 0x8]
	0x035AC15C CMP X11, X1
	0x035AC160 B.EQ 0x35AC180
	0x035AC164 SUBS X9, X9, 0x1
	0x035AC168 ADD X10, X10, 0x10
	0x035AC16C B.NE 0x35AC158
	0x035AC170 MOV X0, X20
	0x035AC174 MOV W2, W31
	0x035AC178 BL 0x1C5C788
	0x035AC17C B 0x35AC18C
	0x035AC180 LDRSW X9, [X10]
	0x035AC184 ADD X8, X8, X9, 0x4, LSL
	0x035AC188 ADD X0, X8, 0x138
	0x035AC18C LDP X8, X1, [X0]
	0x035AC190 MOV X0, X20
	0x035AC194 BLR X8
	0x035AC198 CBNZ X22, 0x35AC1C4
	0x035AC19C LDR X23, [X31]
	0x035AC1A0 CMP W21, 0x26
	0x035AC1A4 B.EQ 0x35AC1AC
	0x035AC1A8 CBNZ W21, 0x35AB5A8
	0x035AC1AC MOVZ W1, 0x7D
	0x035AC1B0 B 0x35AB384
	0x035AC1B4 BL 0x3EB1B20
	0x035AC1B8 BL 0x1C16F28
	0x035AC1BC MOV X0, X22
	0x035AC1C0 BL 0x1C171E0
	0x035AC1C4 MOV X0, X22
	0x035AC1C8 BL 0x1C16F18
	0x035AC1CC MOV X0, X20
	0x035AC1D0 MOV X1, X21
	0x035AC1D4 BL 0x1C171E0
	0x035AC1D8 MOV X0, X20
	0x035AC1DC MOV X1, X23
	0x035AC1E0 BL 0x1C171E0
	0x035AC1E4 BL 0x1C16F20
	0x035AC1E8 BL 0x1C16F20
	0x035AC1EC B 0x35AC210
	0x035AC1F0 B 0x35AC2CC
	0x035AC1F4 B 0x35AC210
	0x035AC1F8 B 0x35AC210
	0x035AC1FC B 0x35AC210
	0x035AC200 B 0x35AC210
	0x035AC204 B 0x35AC210
	0x035AC208 B 0x35AC210
	0x035AC20C B 0x35AC210
	0x035AC210 MOV X21, X0
	0x035AC214 CMP W1, 0x1
	0x035AC218 B.NE 0x35AC234
	0x035AC21C MOV X0, X21
	0x035AC220 BL 0x3EB1AD0
	0x035AC224 LDR X22, [X0]
	0x035AC228 BL 0x3EB1AE0
	0x035AC22C MOV W21, W31
	0x035AC230 B 0x35AC124
	0x035AC234 MOV X22, X31
	0x035AC238 B 0x35AC240
	0x035AC23C MOV X21, X0
	0x035AC240 ADRP X23, 0xB47000
	0x035AC244 LDR X23, [X23 + 0xE00]
	0x035AC248 LDR X1, [X23]
	0x035AC24C MOV X0, X20
	0x035AC250 BL 0x1C16E00
	0x035AC254 MOV X19, X0
	0x035AC258 CBZ X0, 0x35AC2B4
	0x035AC25C LDR X8, [X19]
	0x035AC260 LDR X1, [X23]
	0x035AC264 LDRH W9, [X8 + 0x12E]
	0x035AC268 CBZ X9, 0x35AC28C
	0x035AC26C LDR X10, [X8 + 0xB0]
	0x035AC270 ADD X10, X10, 0x8
	0x035AC274 LDUR X11, [X10 - 0x8]
	0x035AC278 CMP X11, X1
	0x035AC27C B.EQ 0x35AC29C
	0x035AC280 SUBS X9, X9, 0x1
	0x035AC284 ADD X10, X10, 0x10
	0x035AC288 B.NE 0x35AC274
	0x035AC28C MOV X0, X19
	0x035AC290 MOV W2, W31
	0x035AC294 BL 0x1C5C788
	0x035AC298 B 0x35AC2A8
	0x035AC29C LDRSW X9, [X10]
	0x035AC2A0 ADD X8, X8, X9, 0x4, LSL
	0x035AC2A4 ADD X0, X8, 0x138
	0x035AC2A8 LDP X8, X1, [X0]
	0x035AC2AC MOV X0, X19
	0x035AC2B0 BLR X8
	0x035AC2B4 CBZ X22, 0x35AC374
	0x035AC2B8 MOV X0, X22
	0x035AC2BC BL 0x1C16F18
	0x035AC2C0 B 0x35AC2CC
	0x035AC2C4 B 0x35AC2CC
	0x035AC2C8 B 0x35AC2CC
	0x035AC2CC MOV X21, X0
	0x035AC2D0 CMP W1, 0x1
	0x035AC2D4 B.NE 0x35AC2F0
	0x035AC2D8 MOV X0, X21
	0x035AC2DC BL 0x3EB1AD0
	0x035AC2E0 LDR X22, [X0]
	0x035AC2E4 BL 0x3EB1AE0
	0x035AC2E8 MOV W21, W31
	0x035AC2EC B 0x35ABC94
	0x035AC2F0 MOV X22, X31
	0x035AC2F4 B 0x35AC2FC
	0x035AC2F8 MOV X21, X0
	0x035AC2FC ADRP X23, 0xB47000
	0x035AC300 LDR X23, [X23 + 0xE00]
	0x035AC304 LDR X1, [X23]
	0x035AC308 MOV X0, X20
	0x035AC30C BL 0x1C16E00
	0x035AC310 MOV X19, X0
	0x035AC314 CBZ X0, 0x35AC370
	0x035AC318 LDR X8, [X19]
	0x035AC31C LDR X1, [X23]
	0x035AC320 LDRH W9, [X8 + 0x12E]
	0x035AC324 CBZ X9, 0x35AC348
	0x035AC328 LDR X10, [X8 + 0xB0]
	0x035AC32C ADD X10, X10, 0x8
	0x035AC330 LDUR X11, [X10 - 0x8]
	0x035AC334 CMP X11, X1
	0x035AC338 B.EQ 0x35AC358
	0x035AC33C SUBS X9, X9, 0x1
	0x035AC340 ADD X10, X10, 0x10
	0x035AC344 B.NE 0x35AC330
	0x035AC348 MOV X0, X19
	0x035AC34C MOV W2, W31
	0x035AC350 BL 0x1C5C788
	0x035AC354 B 0x35AC364
	0x035AC358 LDRSW X9, [X10]
	0x035AC35C ADD X8, X8, X9, 0x4, LSL
	0x035AC360 ADD X0, X8, 0x138
	0x035AC364 LDP X8, X1, [X0]
	0x035AC368 MOV X0, X19
	0x035AC36C BLR X8
	0x035AC370 CBNZ X22, 0x35AC37C
	0x035AC374 MOV X0, X21
	0x035AC378 BL 0x1D2C690
	0x035AC37C MOV X0, X22
	0x035AC380 BL 0x1C16F18
	0x035AC384 BL 0x1990590
	0x035AC388 STR X30, [X31 - 0x30]!
	0x035AC38C STP X22, X21, [X31 + 0x10]
	0x035AC390 STP X20, X19, [X31 + 0x20]
	0x035AC394 ADRP X20, 0xE34000
	0x035AC398 ADRP X21, 0xB6F000
	0x035AC39C ADRP X22, 0xB47000
	0x035AC3A0 LDRB W8, [X20 + 0x38]
	0x035AC3A4 LDR X21, [X21 + 0xFC0]
	0x035AC3A8 LDR X22, [X22 + 0x6C0]
	0x035AC3AC MOV X19, X0
	0x035AC3B0 TBNZ X8, 0x0, 0x35AC3E0
	0x035AC3B4 ADRP X0, 0xB6F000
	0x035AC3B8 LDR X0, [X0 + 0xFC0]
	0x035AC3BC BL 0x1C16CF4
	0x035AC3C0 ADRP X0, 0xB6F000
	0x035AC3C4 LDR X0, [X0 + 0xFC8]
	0x035AC3C8 BL 0x1C16CF4
	0x035AC3CC ADRP X0, 0xB47000
	0x035AC3D0 LDR X0, [X0 + 0x6C0]
	0x035AC3D4 BL 0x1C16CF4
	0x035AC3D8 MOVZ W8, 0x1
	0x035AC3DC STRB W8, [X20 + 0x38]
	0x035AC3E0 LDR X0, [X22]
	0x035AC3E4 LDR X20, [X21]
	0x035AC3E8 LDR W8, [X0 + 0xE0]
	0x035AC3EC CBNZ W8, 0x35AC3F4
	0x035AC3F0 BL 0x1C16DFC
	0x035AC3F4 MOV X0, X20
	0x035AC3F8 MOV X1, X31
	0x035AC3FC BL 0x338C698
	0x035AC400 CBZ X19, 0x35AC4B4
	0x035AC404 LDR X8, [X19]
	0x035AC408 MOV X1, X0
	0x035AC40C MOVZ W2, 0x1
	0x035AC410 MOV X0, X19
	0x035AC414 LDP X9, X3, [X8 + 0x1E8]
	0x035AC418 BLR X9
	0x035AC41C TBZ X0, 0x0, 0x35AC484
	0x035AC420 LDR X0, [X22]
	0x035AC424 LDR X20, [X21]
	0x035AC428 LDR W8, [X0 + 0xE0]
	0x035AC42C CBNZ W8, 0x35AC434
	0x035AC430 BL 0x1C16DFC
	0x035AC434 MOV X0, X20
	0x035AC438 MOV X1, X31
	0x035AC43C BL 0x338C698
	0x035AC440 MOV X1, X0
	0x035AC444 MOVZ W2, 0x1
	0x035AC448 MOV X0, X19
	0x035AC44C MOV X3, X31
	0x035AC450 BL 0x33A7D50
	0x035AC454 CBZ X0, 0x35AC4B4
	0x035AC458 ADRP X8, 0xB6F000
	0x035AC45C LDR X8, [X8 + 0xFC8]
	0x035AC460 MOV X20, X0
	0x035AC464 LDR X1, [X8]
	0x035AC468 LDR X8, [X0]
	0x035AC46C CMP X8, X1
	0x035AC470 B.NE 0x35AC4B8
	0x035AC474 LDR X0, [X20 + 0x10]
	0x035AC478 MOV X1, X31
	0x035AC47C BL 0x32277A8
	0x035AC480 TBZ X0, 0x0, 0x35AC4A0
	0x035AC484 LDR X8, [X19]
	0x035AC488 MOV X0, X19
	0x035AC48C LDP X20, X19, [X31 + 0x20]
	0x035AC490 LDP X22, X21, [X31 + 0x10]
	0x035AC494 LDP X2, X1, [X8 + 0x1A8]
	0x035AC498 LDR X30, [X31], #0x30
	0x035AC49C BR X2
	0x035AC4A0 LDR X0, [X20 + 0x10]
	0x035AC4A4 LDP X20, X19, [X31 + 0x20]
	0x035AC4A8 LDP X22, X21, [X31 + 0x10]
	0x035AC4AC LDR X30, [X31], #0x30
	0x035AC4B0 RET
	0x035AC4B4 BL 0x1C16F20
	0x035AC4B8 MOV X0, X20
	0x035AC4BC BL 0x1C171E0
	0x035AC4C0 STP X30, X23, [X31 - 0x30]!
	0x035AC4C4 STP X22, X21, [X31 + 0x10]
	0x035AC4C8 STP X20, X19, [X31 + 0x20]
	0x035AC4CC ADRP X23, 0xE34000
	0x035AC4D0 ADRP X22, 0xB47000
	0x035AC4D4 ADRP X20, 0xB8B000
	0x035AC4D8 ADRP X21, 0xB8B000
	0x035AC4DC MOV X19, X8
	0x035AC4E0 LDRB W8, [X23 + 0x39]
	0x035AC4E4 LDR X22, [X22 + 0x618]
	0x035AC4E8 LDR X20, [X20 + 0x620]
	0x035AC4EC LDR X21, [X21 + 0x628]
	0x035AC4F0 TBNZ X8, 0x0, 0x35AC520
	0x035AC4F4 ADRP X0, 0xB47000
	0x035AC4F8 LDR X0, [X0 + 0x618]
	0x035AC4FC BL 0x1C16CF4
	0x035AC500 ADRP X0, 0xB8B000
	0x035AC504 LDR X0, [X0 + 0x628]
	0x035AC508 BL 0x1C16CF4
	0x035AC50C ADRP X0, 0xB8B000
	0x035AC510 LDR X0, [X0 + 0x620]
	0x035AC514 BL 0x1C16CF4
	0x035AC518 MOVZ W8, 0x1
	0x035AC51C STRB W8, [X23 + 0x39]
	0x035AC520 LDR X0, [X22]
	0x035AC524 MOVZ W1, 0xB6
	0x035AC528 BL 0x1C16D6C
	0x035AC52C LDR X1, [X20]
	0x035AC530 MOV X2, X31
	0x035AC534 MOV X20, X0
	0x035AC538 BL 0x32C5BD8
	0x035AC53C LDR X0, [X22]
	0x035AC540 MOVZ W1, 0x278
	0x035AC544 BL 0x1C16D6C
	0x035AC548 LDR X1, [X21]
	0x035AC54C MOV X2, X31
	0x035AC550 MOV X21, X0
	0x035AC554 BL 0x32C5BD8
	0x035AC558 ADRP X8, 0xFFFFFFFFFD541000
	0x035AC55C LDR V0, [X8 + 0x3E0]
	0x035AC560 STP X20, X21, [X19]
	0x035AC564 STRB W31, [X19 + 0x18]
	0x035AC568 STUR W31, [X19 + 0x19]
	0x035AC56C STR D0, [X19 + 0x10]
	0x035AC570 STR W31, [X19 + 0x1C]
	0x035AC574 LDP X20, X19, [X31 + 0x20]
	0x035AC578 LDP X22, X21, [X31 + 0x10]
	0x035AC57C LDP X30, X23, [X31], #0x30
	0x035AC580 RET
	0x035AC584 MOV X1, X31
	0x035AC588 B 0x33BDD8C
	0x035AC58C MOV X0, X31
	0x035AC590 RET
	0x035AC594 RET
	0x035AC598 MOV X0, X31
	0x035AC59C RET
	0x035AC5A0 RET
	0x035AC5A4 STR X30, [X31 - 0x20]!
	0x035AC5A8 STP X20, X19, [X31 + 0x10]
	0x035AC5AC ADRP X19, 0xE34000
	0x035AC5B0 ADRP X20, 0xB47000
	0x035AC5B4 LDRB W8, [X19 + 0x3B]
	0x035AC5B8 LDR X20, [X20 + 0x988]
	0x035AC5BC TBNZ X8, 0x0, 0x35AC5D4
	0x035AC5C0 ADRP X0, 0xB47000
	0x035AC5C4 LDR X0, [X0 + 0x988]
	0x035AC5C8 BL 0x1C16CF4
	0x035AC5CC MOVZ W8, 0x1
	0x035AC5D0 STRB W8, [X19 + 0x3B]
	0x035AC5D4 LDR X0, [X20]
	0x035AC5D8 LDP X20, X19, [X31 + 0x10]
	0x035AC5DC LDR X30, [X31], #0x20
	0x035AC5E0 RET
	0x035AC5E4 RET
	0x035AC5E8 MOV W0, W31
	0x035AC5EC RET
	0x035AC5F0 MOV W0, W31
	0x035AC5F4 RET
	0x035AC5F8 MOV W0, W31
	0x035AC5FC RET
	0x035AC600 MOV W0, W31
	0x035AC604 RET
	0x035AC608 MOV W0, W31
	0x035AC60C RET
	0x035AC610 MOV W0, W31
	0x035AC614 RET
	0x035AC618 MOV W0, W31
	0x035AC61C RET
	0x035AC620 MOV W0, W31
	0x035AC624 RET
	0x035AC628 RET
	0x035AC62C RET
	0x035AC630 STR X30, [X31 - 0x30]!
	0x035AC634 STP X22, X21, [X31 + 0x10]
	0x035AC638 STP X20, X19, [X31 + 0x20]
	0x035AC63C ADRP X22, 0xE34000
	0x035AC640 ADRP X21, 0xB47000
	0x035AC644 LDRB W8, [X22 + 0x3C]
	0x035AC648 LDR X21, [X21 + 0x988]
	0x035AC64C MOV X19, X1
	0x035AC650 MOV X20, X0
	0x035AC654 TBNZ X8, 0x0, 0x35AC66C
	0x035AC658 ADRP X0, 0xB47000
	0x035AC65C LDR X0, [X0 + 0x988]
	0x035AC660 BL 0x1C16CF4
	0x035AC664 MOVZ W8, 0x1
	0x035AC668 STRB W8, [X22 + 0x3C]
	0x035AC66C LDR X8, [X20]
	0x035AC670 LDR X1, [X21]
	0x035AC674 MOV X0, X20
	0x035AC678 MOV X2, X19
	0x035AC67C LDR X4, [X8 + 0x278]
	0x035AC680 LDR X3, [X8 + 0x280]
	0x035AC684 LDP X20, X19, [X31 + 0x20]
	0x035AC688 LDP X22, X21, [X31 + 0x10]
	0x035AC68C LDR X30, [X31], #0x30
	0x035AC690 BR X4
	0x035AC694 MOV X0, X31
	0x035AC698 RET
	0x035AC69C MOV X0, X31
	0x035AC6A0 RET
	0x035AC6A4 MOV X0, X1
	0x035AC6A8 RET
	0x035AC6AC RET
	0x035AC6B0 MOV X0, X31
	0x035AC6B4 RET
	0x035AC6B8 STR X30, [X31 - 0x20]!
	0x035AC6BC STP X20, X19, [X31 + 0x10]
	0x035AC6C0 ADRP X19, 0xE34000
	0x035AC6C4 ADRP X20, 0xB8B000
	0x035AC6C8 LDRB W8, [X19 + 0x3D]
	0x035AC6CC LDR X20, [X20 + 0x630]
	0x035AC6D0 TBNZ X8, 0x0, 0x35AC6E8
	0x035AC6D4 ADRP X0, 0xB8B000
	0x035AC6D8 LDR X0, [X0 + 0x630]
	0x035AC6DC BL 0x1C16CF4
	0x035AC6E0 MOVZ W8, 0x1
	0x035AC6E4 STRB W8, [X19 + 0x3D]
	0x035AC6E8 LDR X0, [X20]
	0x035AC6EC BL 0x1C16F10
	0x035AC6F0 MOV X1, X31
	0x035AC6F4 MOV X19, X0
	0x035AC6F8 BL 0x33BDD8C
	0x035AC6FC MOVN W8, 0x1
	0x035AC700 MOV X0, X31
	0x035AC704 STR W8, [X19 + 0x10]
	0x035AC708 BL 0x33C151C
	0x035AC70C STR W0, [X19 + 0x20]
	0x035AC710 MOV X0, X19
	0x035AC714 LDP X20, X19, [X31 + 0x10]
	0x035AC718 LDR X30, [X31], #0x20
	0x035AC71C RET
	0x035AC720 STR X30, [X31 - 0x20]!
	0x035AC724 STP X20, X19, [X31 + 0x10]
	0x035AC728 MOV W19, W1
	0x035AC72C MOV X1, X31
	0x035AC730 MOV X20, X0
	0x035AC734 BL 0x33BDD8C
	0x035AC738 MOV X0, X31
	0x035AC73C STR W19, [X20 + 0x10]
	0x035AC740 BL 0x33C151C
	0x035AC744 STR W0, [X20 + 0x20]
	0x035AC748 LDP X20, X19, [X31 + 0x10]
	0x035AC74C LDR X30, [X31], #0x20
	0x035AC750 RET
	0x035AC754 STP X30, X21, [X31 - 0x20]!
	0x035AC758 STP X20, X19, [X31 + 0x10]
	0x035AC75C ADRP X20, 0xE34000
	0x035AC760 ADRP X21, 0xB8B000
	0x035AC764 LDRB W8, [X20 + 0x3E]
	0x035AC768 LDR X21, [X21 + 0x638]
	0x035AC76C MOV X19, X0
	0x035AC770 TBNZ X8, 0x0, 0x35AC788
	0x035AC774 ADRP X0, 0xB8B000
	0x035AC778 LDR X0, [X0 + 0x638]
	0x035AC77C BL 0x1C16CF4
	0x035AC780 MOVZ W8, 0x1
	0x035AC784 STRB W8, [X20 + 0x3E]
	0x035AC788 LDR X0, [X21]
	0x035AC78C BL 0x1C16F10
	0x035AC790 MOV X1, X31
	0x035AC794 MOV X20, X0
	0x035AC798 BL 0x33BDD8C
	0x035AC79C MOVN W8, 0x1
	0x035AC7A0 MOV X0, X31
	0x035AC7A4 STR W8, [X20 + 0x10]
	0x035AC7A8 BL 0x33C151C
	0x035AC7AC STR W0, [X20 + 0x20]
	0x035AC7B0 STR X19, [X20 + 0x28]
	0x035AC7B4 MOV X0, X20
	0x035AC7B8 LDP X20, X19, [X31 + 0x10]
	0x035AC7BC LDP X30, X21, [X31], #0x20
	0x035AC7C0 RET
	0x035AC7C4 STR X30, [X31 - 0x20]!
	0x035AC7C8 STP X20, X19, [X31 + 0x10]
	0x035AC7CC MOV W19, W1
	0x035AC7D0 MOV X1, X31
	0x035AC7D4 MOV X20, X0
	0x035AC7D8 BL 0x33BDD8C
	0x035AC7DC MOV X0, X31
	0x035AC7E0 STR W19, [X20 + 0x10]
	0x035AC7E4 BL 0x33C151C
	0x035AC7E8 STR W0, [X20 + 0x20]
	0x035AC7EC LDP X20, X19, [X31 + 0x10]
	0x035AC7F0 LDR X30, [X31], #0x20
	0x035AC7F4 RET
	0x035AC7F8 MOV W0, W31
	0x035AC7FC RET
	0x035AC800 MOV X0, X2
	0x035AC804 RET
	0x035AC808 STP X30, X21, [X31 - 0x20]!
	0x035AC80C STP X20, X19, [X31 + 0x10]
	0x035AC810 ADRP X20, 0xE34000
	0x035AC814 ADRP X21, 0xB47000
	0x035AC818 LDRB W8, [X20 + 0x3F]
	0x035AC81C LDR X21, [X21 + 0x8F0]
	0x035AC820 MOV X19, X0
	0x035AC824 TBNZ X8, 0x0, 0x35AC83C
	0x035AC828 ADRP X0, 0xB47000
	0x035AC82C LDR X0, [X0 + 0x8F0]
	0x035AC830 BL 0x1C16CF4
	0x035AC834 MOVZ W8, 0x1
	0x035AC838 STRB W8, [X20 + 0x3F]
	0x035AC83C LDR X0, [X21]
	0x035AC840 BL 0x1C16F10
	0x035AC844 MOV X1, X31
	0x035AC848 MOV X20, X0
	0x035AC84C BL 0x3231AC4
	0x035AC850 LDR X8, [X19]
	0x035AC854 MOV X0, X19
	0x035AC858 MOV X1, X20
	0x035AC85C MOV W2, W31
	0x035AC860 LDR X9, [X8 + 0x328]
	0x035AC864 LDR X5, [X8 + 0x330]
	0x035AC868 MOV W3, W31
	0x035AC86C MOV W4, W31
	0x035AC870 BLR X9
	0x035AC874 CBZ X20, 0x35AC890
	0x035AC878 LDR X8, [X20]
	0x035AC87C MOV X0, X20
	0x035AC880 LDP X20, X19, [X31 + 0x10]
	0x035AC884 LDP X2, X1, [X8 + 0x168]
	0x035AC888 LDP X30, X21, [X31], #0x20
	0x035AC88C BR X2
	0x035AC890 BL 0x1C16F20
	0x035AC894 STR X30, [X31 - 0x30]!
	0x035AC898 STP X22, X21, [X31 + 0x10]
	0x035AC89C STP X20, X19, [X31 + 0x20]
	0x035AC8A0 ADRP X21, 0xE34000
	0x035AC8A4 ADRP X22, 0xB47000
	0x035AC8A8 LDRB W8, [X21 + 0x40]
	0x035AC8AC LDR X22, [X22 + 0x8F0]
	0x035AC8B0 MOV W19, W1
	0x035AC8B4 MOV X20, X0
	0x035AC8B8 TBNZ X8, 0x0, 0x35AC8D0
	0x035AC8BC ADRP X0, 0xB47000
	0x035AC8C0 LDR X0, [X0 + 0x8F0]
	0x035AC8C4 BL 0x1C16CF4
	0x035AC8C8 MOVZ W8, 0x1
	0x035AC8CC STRB W8, [X21 + 0x40]
	0x035AC8D0 LDR X0, [X22]
	0x035AC8D4 BL 0x1C16F10
	0x035AC8D8 MOV X1, X31
	0x035AC8DC MOV X21, X0
	0x035AC8E0 BL 0x3231AC4
	0x035AC8E4 LDR X8, [X20]
	0x035AC8E8 MOVZ W4, 0x1
	0x035AC8EC MOV X0, X20
	0x035AC8F0 MOV X1, X21
	0x035AC8F4 LDR X9, [X8 + 0x328]
	0x035AC8F8 LDR X5, [X8 + 0x330]
	0x035AC8FC MOV W2, W31
	0x035AC900 MOV W3, W19
	0x035AC904 BLR X9
	0x035AC908 CBZ X21, 0x35AC928
	0x035AC90C LDR X8, [X21]
	0x035AC910 MOV X0, X21
	0x035AC914 LDP X20, X19, [X31 + 0x20]
	0x035AC918 LDP X22, X21, [X31 + 0x10]
	0x035AC91C LDP X2, X1, [X8 + 0x168]
	0x035AC920 LDR X30, [X31], #0x30
	0x035AC924 BR X2
	0x035AC928 BL 0x1C16F20
	0x035AC92C STP X30, X21, [X31 - 0x20]!
	0x035AC930 STP X20, X19, [X31 + 0x10]
	0x035AC934 ADRP X20, 0xE34000
	0x035AC938 ADRP X21, 0xB8B000
	0x035AC93C LDRB W8, [X20 + 0x41]
	0x035AC940 LDR X21, [X21 + 0x640]
	0x035AC944 MOV X19, X0
	0x035AC948 TBNZ X8, 0x0, 0x35AC960
	0x035AC94C ADRP X0, 0xB8B000
	0x035AC950 LDR X0, [X0 + 0x640]
	0x035AC954 BL 0x1C16CF4
	0x035AC958 MOVZ W8, 0x1
	0x035AC95C STRB W8, [X20 + 0x41]
	0x035AC960 LDR X0, [X21]
	0x035AC964 BL 0x1C16F10
	0x035AC968 MOV X1, X19
	0x035AC96C MOV X20, X0
	0x035AC970 BL 0x35AC984
	0x035AC974 MOV X0, X20
	0x035AC978 LDP X20, X19, [X31 + 0x10]
	0x035AC97C LDP X30, X21, [X31], #0x20
	0x035AC980 RET
	0x035AC984 SUB X31, X31, 0xC0
	0x035AC988 STR X30, [X31 + 0x90]
	0x035AC98C STP X22, X21, [X31 + 0xA0]
	0x035AC990 STP X20, X19, [X31 + 0xB0]
	0x035AC994 ADRP X22, 0xE34000
	0x035AC998 ADRP X21, 0xB48000
	0x035AC99C LDRB W8, [X22 + 0xAA]
	0x035AC9A0 LDR X21, [X21 + 0x460]
	0x035AC9A4 MOV X20, X1
	0x035AC9A8 MOV X19, X0
	0x035AC9AC TBNZ X8, 0x0, 0x35AC9C4
	0x035AC9B0 ADRP X0, 0xB48000
	0x035AC9B4 LDR X0, [X0 + 0x460]
	0x035AC9B8 BL 0x1C16CF4
	0x035AC9BC MOVZ W8, 0x1
	0x035AC9C0 STRB W8, [X22 + 0xAA]
	0x035AC9C4 MOV X0, X19
	0x035AC9C8 MOV X1, X31
	0x035AC9CC BL 0x33BDD8C
	0x035AC9D0 STR X20, [X19 + 0x10]
	0x035AC9D4 LDR X0, [X21]
	0x035AC9D8 LDR W8, [X0 + 0xE0]
	0x035AC9DC CBNZ W8, 0x35AC9E4
	0x035AC9E0 BL 0x1C16DFC
	0x035AC9E4 MOV X0, X20
	0x035AC9E8 MOV X1, X31
	0x035AC9EC BL 0x35ADA5C
	0x035AC9F0 TBZ X0, 0x0, 0x35ACA30
	0x035AC9F4 LDR X0, [X19 + 0x10]
	0x035AC9F8 CBZ X0, 0x35ACA44
	0x035AC9FC LDR X8, [X0]
	0x035ACA00 LDR X9, [X8 + 0x338]
	0x035ACA04 LDR X1, [X8 + 0x340]
	0x035ACA08 ADD X8, X31, 0x0
	0x035ACA0C BLR X9
	0x035ACA10 ADD X0, X31, 0x48
	0x035ACA14 ADD X1, X31, 0x0
	0x035ACA18 MOVZ W2, 0x48
	0x035ACA1C BL 0x3EB1AC0
	0x035ACA20 ADD X0, X19, 0x18
	0x035ACA24 ADD X1, X31, 0x48
	0x035ACA28 MOVZ W2, 0x48
	0x035ACA2C BL 0x3EB1AC0
	0x035ACA30 LDP X20, X19, [X31 + 0xB0]
	0x035ACA34 LDP X22, X21, [X31 + 0xA0]
	0x035ACA38 LDR X30, [X31 + 0x90]
	0x035ACA3C ADD X31, X31, 0xC0
	0x035ACA40 RET
	0x035ACA44 BL 0x1C16F20
	0x035ACA48 SUB X31, X31, 0x60
	0x035ACA4C STP X30, X19, [X31 + 0x50]
	0x035ACA50 LDR X9, [X0]
	0x035ACA54 MOV X19, X8
	0x035ACA58 ADD X8, X31, 0x8
	0x035ACA5C LDR X10, [X9 + 0x338]
	0x035ACA60 LDR X1, [X9 + 0x340]
	0x035ACA64 BLR X10
	0x035ACA68 ADD X1, X31, 0x8
	0x035ACA6C MOVZ W2, 0x48
	0x035ACA70 MOV X0, X19
	0x035ACA74 BL 0x3EB1AC0
	0x035ACA78 LDP X30, X19, [X31 + 0x50]
	0x035ACA7C ADD X31, X31, 0x60
	0x035ACA80 RET
	0x035ACA84 SUB X31, X31, 0x60
	0x035ACA88 STP X30, X19, [X31 + 0x50]
	0x035ACA8C LDR X9, [X0]
	0x035ACA90 MOV X19, X8
	0x035ACA94 ADD X8, X31, 0x8
	0x035ACA98 LDR X10, [X9 + 0x338]
	0x035ACA9C LDR X1, [X9 + 0x340]
	0x035ACAA0 BLR X10
	0x035ACAA4 ADD X1, X31, 0x8
	0x035ACAA8 MOVZ W2, 0x48
	0x035ACAAC MOV X0, X19
	0x035ACAB0 BL 0x3EB1AC0
	0x035ACAB4 LDP X30, X19, [X31 + 0x50]
	0x035ACAB8 ADD X31, X31, 0x60
	0x035ACABC RET
	0x035ACAC0 SUB X31, X31, 0x30
	0x035ACAC4 STP X30, X21, [X31 + 0x10]
	0x035ACAC8 STP X20, X19, [X31 + 0x20]
	0x035ACACC ADRP X21, 0xE34000
	0x035ACAD0 ADRP X20, 0xB49000
	0x035ACAD4 LDRB W8, [X21 + 0x42]
	0x035ACAD8 LDR X20, [X20 + 0xC48]
	0x035ACADC MOV X19, X0
	0x035ACAE0 TBNZ X8, 0x0, 0x35ACAF8
	0x035ACAE4 ADRP X0, 0xB49000
	0x035ACAE8 LDR X0, [X0 + 0xC48]
	0x035ACAEC BL 0x1C16CF4
	0x035ACAF0 MOVZ W8, 0x1
	0x035ACAF4 STRB W8, [X21 + 0x42]
	0x035ACAF8 STR X31, [X31 + 0x8]
	0x035ACAFC LDR X8, [X19]
	0x035ACB00 MOV X0, X19
	0x035ACB04 LDP X9, X1, [X8 + 0x1C8]
	0x035ACB08 BLR X9
	0x035ACB0C LDR X8, [X20]
	0x035ACB10 MOV X19, X0
	0x035ACB14 LDR W9, [X8 + 0xE0]
	0x035ACB18 CBNZ W9, 0x35ACB24
	0x035ACB1C MOV X0, X8
	0x035ACB20 BL 0x1C16DFC
	0x035ACB24 MOV X0, X31
	0x035ACB28 BL 0x3338524
	0x035ACB2C MOV X2, X0
	0x035ACB30 ADD X3, X31, 0x8
	0x035ACB34 MOVZ W1, 0xA7
	0x035ACB38 MOV X0, X19
	0x035ACB3C MOV X4, X31
	0x035ACB40 BL 0x3366A70
	0x035ACB44 LDR V0, [X31 + 0x8]
	0x035ACB48 LDP X20, X19, [X31 + 0x20]
	0x035ACB4C LDP X30, X21, [X31 + 0x10]
	0x035ACB50 ANDS W31, W0, 0x1
	0x035ACB54 FMOV D1, X31
	0x035ACB58 FCSEL D0, D0, D1, NE
	0x035ACB5C ADD X31, X31, 0x30
	0x035ACB60 RET
	0x035ACB64 SUB X31, X31, 0x30
	0x035ACB68 STP X30, X21, [X31 + 0x10]
	0x035ACB6C STP X20, X19, [X31 + 0x20]
	0x035ACB70 ADRP X20, 0xE34000
	0x035ACB74 STR D0, [X31 + 0x8]
	0x035ACB78 ADRP X21, 0xB49000
	0x035ACB7C LDRB W8, [X20 + 0x43]
	0x035ACB80 LDR X21, [X21 + 0xC48]
	0x035ACB84 MOV X19, X0
	0x035ACB88 TBNZ X8, 0x0, 0x35ACBA0
	0x035ACB8C ADRP X0, 0xB49000
	0x035ACB90 LDR X0, [X0 + 0xC48]
	0x035ACB94 BL 0x1C16CF4
	0x035ACB98 MOVZ W8, 0x1
	0x035ACB9C STRB W8, [X20 + 0x43]
	0x035ACBA0 LDR X0, [X21]
	0x035ACBA4 LDR W8, [X0 + 0xE0]
	0x035ACBA8 CBNZ W8, 0x35ACBB0
	0x035ACBAC BL 0x1C16DFC
	0x035ACBB0 MOV X0, X31
	0x035ACBB4 BL 0x3338524
	0x035ACBB8 MOV X1, X0
	0x035ACBBC ADD X0, X31, 0x8
	0x035ACBC0 MOV X2, X31
	0x035ACBC4 BL 0x33662E0
	0x035ACBC8 LDR X8, [X19]
	0x035ACBCC MOV X1, X0
	0x035ACBD0 MOV X0, X19
	0x035ACBD4 LDP X9, X2, [X8 + 0x1D8]
	0x035ACBD8 BLR X9
	0x035ACBDC LDP X20, X19, [X31 + 0x20]
	0x035ACBE0 LDP X30, X21, [X31 + 0x10]
	0x035ACBE4 ADD X31, X31, 0x30
	0x035ACBE8 RET
	0x035ACBEC STR X30, [X31 - 0x10]!
	0x035ACBF0 LDR X8, [X0]
	0x035ACBF4 LDR X9, [X8 + 0x348]
	0x035ACBF8 LDR X1, [X8 + 0x350]
	0x035ACBFC BLR X9
	0x035ACC00 MOVZ X8, 0x7FF00000
	0x035ACC04 FMOV D1, X8
	0x035ACC08 FCVTZS W9, D0
	0x035ACC0C FCMP D0, D1
	0x035ACC10 MOVZ W8, 0x80000000
	0x035ACC14 CSEL W0, W8, W9, EQ
	0x035ACC18 LDR X30, [X31], #0x10
	0x035ACC1C RET
	0x035ACC20 LDR X8, [X0]
	0x035ACC24 SCVTF D0, W1
	0x035ACC28 LDR X2, [X8 + 0x358]
	0x035ACC2C LDR X8, [X8 + 0x360]
	0x035ACC30 MOV X1, X8
	0x035ACC34 BR X2
	0x035ACC38 STR X30, [X31 - 0x10]!
	0x035ACC3C LDR X8, [X0]
	0x035ACC40 LDR X9, [X8 + 0x348]
	0x035ACC44 LDR X1, [X8 + 0x350]
	0x035ACC48 BLR X9
	0x00000000 INVALID
	0x035ACC50 LDR X30, [X31], #0x10
	0x035ACC54 RET
	0x035ACC58 LDR X8, [X0]
	0x035ACC5C FCVT S0, S0
	0x035ACC60 LDR X2, [X8 + 0x358]
	0x035ACC64 LDR X1, [X8 + 0x360]
	0x035ACC68 BR X2
	0x035ACC6C SUB X31, X31, 0x30
	0x035ACC70 STP X30, X21, [X31 + 0x10]
	0x035ACC74 STP X20, X19, [X31 + 0x20]
	0x035ACC78 ADRP X21, 0xE34000
	0x035ACC7C ADRP X20, 0xB47000
	0x035ACC80 LDRB W8, [X21 + 0x44]
	0x035ACC84 LDR X20, [X20 + 0xB58]
	0x035ACC88 MOV X19, X0
	0x035ACC8C TBNZ X8, 0x0, 0x35ACCA4
	0x035ACC90 ADRP X0, 0xB47000
	0x035ACC94 LDR X0, [X0 + 0xB58]
	0x035ACC98 BL 0x1C16CF4
	0x035ACC9C MOVZ W8, 0x1
	0x035ACCA0 STRB W8, [X21 + 0x44]
	0x035ACCA4 STRB W31, [X31 + 0xC]
	0x035ACCA8 LDR X8, [X19]
	0x035ACCAC MOV X0, X19
	0x035ACCB0 LDP X9, X1, [X8 + 0x1C8]
	0x035ACCB4 BLR X9
	0x035ACCB8 LDR X8, [X20]
	0x035ACCBC MOV X20, X0
	0x035ACCC0 LDR W9, [X8 + 0xE0]
	0x035ACCC4 CBNZ W9, 0x35ACCD0
	0x035ACCC8 MOV X0, X8
	0x035ACCCC BL 0x1C16DFC
	0x035ACCD0 ADD X1, X31, 0xC
	0x035ACCD4 MOV X0, X20
	0x035ACCD8 MOV X2, X31
	0x035ACCDC BL 0x3317DAC
	0x035ACCE0 TBZ X0, 0x0, 0x35ACCF4
	0x035ACCE4 LDRB W8, [X31 + 0xC]
	0x035ACCE8 CMP W8, 0x0
	0x035ACCEC CSET W8, NE
	0x035ACCF0 B 0x35ACD10
	0x035ACCF4 LDR X8, [X19]
	0x035ACCF8 MOV X0, X19
	0x035ACCFC LDP X9, X1, [X8 + 0x1C8]
	0x035ACD00 BLR X9
	0x035ACD04 MOV X1, X31
	0x035ACD08 BL 0x32277A8
	0x035ACD0C EOR W8, W0, 0x1
	0x035ACD10 LDP X20, X19, [X31 + 0x20]
	0x035ACD14 LDP X30, X21, [X31 + 0x10]
	0x035ACD18 AND W0, W8, 0x1
	0x035ACD1C ADD X31, X31, 0x30
	0x035ACD20 RET
	0x035ACD24 STP X30, X21, [X31 - 0x20]!
	0x035ACD28 STP X20, X19, [X31 + 0x10]
	0x035ACD2C ADRP X21, 0xE34000
	0x035ACD30 LDRB W8, [X21 + 0x45]
	0x035ACD34 MOV W19, W1
	0x035ACD38 MOV X20, X0
	0x035ACD3C TBNZ X8, 0x0, 0x35ACD60
	0x035ACD40 ADRP X0, 0xB51000
	0x035ACD44 LDR X0, [X0 + 0xFF8]
	0x035ACD48 BL 0x1C16CF4
	0x035ACD4C ADRP X0, 0xB52000
	0x035ACD50 LDR X0, [X0]
	0x035ACD54 BL 0x1C16CF4
	0x035ACD58 MOVZ W8, 0x1
	0x035ACD5C STRB W8, [X21 + 0x45]
	0x035ACD60 CBZ X20, 0x35ACD98
	0x035ACD64 ADRP X8, 0xB52000
	0x035ACD68 ADRP X9, 0xB51000
	0x035ACD6C LDR X8, [X8]
	0x035ACD70 LDR X9, [X9 + 0xFF8]
	0x035ACD74 LDR X10, [X20]
	0x035ACD78 ANDS W31, W19, 0x1
	0x035ACD7C MOV X0, X20
	0x035ACD80 CSEL X8, X8, X9, NE
	0x035ACD84 LDR X1, [X8]
	0x035ACD88 LDP X3, X2, [X10 + 0x1D8]
	0x035ACD8C LDP X20, X19, [X31 + 0x10]
	0x035ACD90 LDP X30, X21, [X31], #0x20
	0x035ACD94 BR X3
	0x035ACD98 BL 0x1C16F20
	0x035ACD9C STR X30, [X31 - 0x10]!
	0x035ACDA0 STR X31, [X31 + 0x8]
	0x035ACDA4 LDR X8, [X0]
	0x035ACDA8 LDP X9, X1, [X8 + 0x1C8]
	0x035ACDAC BLR X9
	0x035ACDB0 ADD X1, X31, 0x8
	0x035ACDB4 MOV X2, X31
	0x035ACDB8 BL 0x337D588
	0x035ACDBC LDR X8, [X31 + 0x8]
	0x035ACDC0 ANDS W31, W0, 0x1
	0x035ACDC4 CSEL X0, X8, X31, NE
	0x035ACDC8 LDR X30, [X31], #0x10
	0x035ACDCC RET
	0x035ACDD0 SUB X31, X31, 0x20
	0x035ACDD4 STP X30, X19, [X31 + 0x10]
	0x035ACDD8 MOV X19, X0
	0x035ACDDC STR X1, [X31 + 0x8]
	0x035ACDE0 ADD X0, X31, 0x8
	0x035ACDE4 MOV X1, X31
	0x035ACDE8 BL 0x337C96C
	0x035ACDEC LDR X8, [X19]
	0x035ACDF0 MOV X1, X0
	0x035ACDF4 MOV X0, X19
	0x035ACDF8 LDP X9, X2, [X8 + 0x1D8]
	0x035ACDFC BLR X9
	0x035ACE00 LDP X30, X19, [X31 + 0x10]
	0x035ACE04 ADD X31, X31, 0x20
	0x035ACE08 RET
	0x035ACE0C STR X30, [X31 - 0x10]!
	0x035ACE10 STR X31, [X31 + 0x8]
	0x035ACE14 LDR X8, [X0]
	0x035ACE18 LDP X9, X1, [X8 + 0x1C8]
	0x035ACE1C BLR X9
	0x035ACE20 ADD X1, X31, 0x8
	0x035ACE24 MOV X2, X31
	0x035ACE28 BL 0x339AEF8
	0x035ACE2C LDR X8, [X31 + 0x8]
	0x035ACE30 ANDS W31, W0, 0x1
	0x035ACE34 CSEL X0, X8, X31, NE
	0x035ACE38 LDR X30, [X31], #0x10
	0x035ACE3C RET
	0x035ACE40 SUB X31, X31, 0x20
	0x035ACE44 STP X30, X19, [X31 + 0x10]
	0x035ACE48 MOV X19, X0
	0x035ACE4C STR X1, [X31 + 0x8]
	0x035ACE50 ADD X0, X31, 0x8
	0x035ACE54 MOV X1, X31
	0x035ACE58 BL 0x339A968
	0x035ACE5C LDR X8, [X19]
	0x035ACE60 MOV X1, X0
	0x035ACE64 MOV X0, X19
	0x035ACE68 LDP X9, X2, [X8 + 0x1D8]
	0x035ACE6C BLR X9
	0x035ACE70 LDP X30, X19, [X31 + 0x10]
	0x035ACE74 ADD X31, X31, 0x20
	0x035ACE78 RET
	0x035ACE7C STR X30, [X31 - 0x20]!
	0x035ACE80 STP X20, X19, [X31 + 0x10]
	0x035ACE84 ADRP X20, 0xE34000
	0x035ACE88 LDRB W8, [X20 + 0x46]
	0x035ACE8C MOV X19, X0
	0x035ACE90 TBNZ X8, 0x0, 0x35ACEA8
	0x035ACE94 ADRP X0, 0xB71000
	0x035ACE98 LDR X0, [X0 + 0x370]
	0x035ACE9C BL 0x1C16CF4
	0x035ACEA0 MOVZ W8, 0x1
	0x035ACEA4 STRB W8, [X20 + 0x46]
	0x035ACEA8 CBZ X19, 0x35ACECC
	0x035ACEAC ADRP X8, 0xB71000
	0x035ACEB0 LDR X8, [X8 + 0x370]
	0x035ACEB4 LDR X9, [X19]
	0x035ACEB8 LDR X8, [X8]
	0x035ACEBC LDRB W11, [X9 + 0x130]
	0x035ACEC0 LDRB W10, [X8 + 0x130]
	0x035ACEC4 CMP W11, W10
	0x035ACEC8 B.CS 0x35ACED4
	0x035ACECC MOV X0, X31
	0x035ACED0 B 0x35ACEE8
	0x035ACED4 LDR X9, [X9 + 0xC8]
	0x035ACED8 ADD X9, X9, X10, 0x3, LSL
	0x035ACEDC LDUR X9, [X9 - 0x8]
	0x035ACEE0 CMP X9, X8
	0x035ACEE4 CSEL X0, X19, X31, EQ
	0x035ACEE8 LDP X20, X19, [X31 + 0x10]
	0x035ACEEC LDR X30, [X31], #0x20
	0x035ACEF0 RET
	0x035ACEF4 STR X30, [X31 - 0x20]!
	0x035ACEF8 STP X20, X19, [X31 + 0x10]
	0x035ACEFC ADRP X20, 0xE34000
	0x035ACF00 LDRB W8, [X20 + 0x47]
	0x035ACF04 MOV X19, X0
	0x035ACF08 TBNZ X8, 0x0, 0x35ACF20
	0x035ACF0C ADRP X0, 0xB6F000
	0x035ACF10 LDR X0, [X0 + 0xBC0]
	0x035ACF14 BL 0x1C16CF4
	0x035ACF18 MOVZ W8, 0x1
	0x035ACF1C STRB W8, [X20 + 0x47]
	0x035ACF20 CBZ X19, 0x35ACF44
	0x035ACF24 ADRP X8, 0xB6F000
	0x035ACF28 LDR X8, [X8 + 0xBC0]
	0x035ACF2C LDR X9, [X19]
	0x035ACF30 LDR X8, [X8]
	0x035ACF34 LDRB W11, [X9 + 0x130]
	0x035ACF38 LDRB W10, [X8 + 0x130]
	0x035ACF3C CMP W11, W10
	0x035ACF40 B.CS 0x35ACF4C
	0x035ACF44 MOV X0, X31
	0x035ACF48 B 0x35ACF60
	0x035ACF4C LDR X9, [X9 + 0xC8]
	0x035ACF50 ADD X9, X9, X10, 0x3, LSL
	0x035ACF54 LDUR X9, [X9 - 0x8]
	0x035ACF58 CMP X9, X8
	0x035ACF5C CSEL X0, X19, X31, EQ
	0x035ACF60 LDP X20, X19, [X31 + 0x10]
	0x035ACF64 LDR X30, [X31], #0x20
	0x035ACF68 RET
	0x035ACF6C STR X30, [X31 - 0x20]!
	0x035ACF70 STP X20, X19, [X31 + 0x10]
	0x035ACF74 ADRP X20, 0xE34000
	0x035ACF78 LDRB W8, [X20 + 0x48]
	0x035ACF7C MOV X19, X0
	0x035ACF80 TBNZ X8, 0x0, 0x35ACFA4
	0x035ACF84 ADRP X0, 0xB8B000
	0x035ACF88 LDR X0, [X0 + 0x648]
	0x035ACF8C BL 0x1C16CF4
	0x035ACF90 ADRP X0, 0xB8B000
	0x035ACF94 LDR X0, [X0 + 0x650]
	0x035ACF98 BL 0x1C16CF4
	0x035ACF9C MOVZ W8, 0x1
	0x035ACFA0 STRB W8, [X20 + 0x48]
	0x035ACFA4 CBZ X19, 0x35ACFD4
	0x035ACFA8 ADRP X8, 0xB8B000
	0x035ACFAC LDR X8, [X8 + 0x650]
	0x035ACFB0 LDR X0, [X8]
	0x035ACFB4 BL 0x1C16F10
	0x035ACFB8 MOV X1, X19
	0x035ACFBC MOV X20, X0
	0x035ACFC0 BL 0x35ACFF8
	0x035ACFC4 MOV X0, X20
	0x035ACFC8 LDP X20, X19, [X31 + 0x10]
	0x035ACFCC LDR X30, [X31], #0x20
	0x035ACFD0 RET
	0x035ACFD4 ADRP X8, 0xB8B000
	0x035ACFD8 LDR X8, [X8 + 0x648]
	0x035ACFDC LDR X0, [X8]
	0x035ACFE0 LDR W8, [X0 + 0xE0]
	0x035ACFE4 CBNZ W8, 0x35ACFEC
	0x035ACFE8 BL 0x1C16DFC
	0x035ACFEC LDP X20, X19, [X31 + 0x10]
	0x035ACFF0 LDR X30, [X31], #0x20
	0x035ACFF4 B 0x35AD064
	0x035ACFF8 STR X30, [X31 - 0x30]!
	0x035ACFFC STP X22, X21, [X31 + 0x10]
	0x035AD000 STP X20, X19, [X31 + 0x20]
	0x035AD004 ADRP X21, 0xE33000
	0x035AD008 ADRP X22, 0xB47000
	0x035AD00C LDRB W8, [X21 + 0xDC]
	0x035AD010 LDR X22, [X22 + 0x460]
	0x035AD014 MOV X19, X1
	0x035AD018 MOV X20, X0
	0x035AD01C TBNZ X8, 0x0, 0x35AD034
	0x035AD020 ADRP X0, 0xB47000
	0x035AD024 LDR X0, [X0 + 0x460]
	0x035AD028 BL 0x1C16CF4
	0x035AD02C MOVZ W8, 0x1
	0x035AD030 STRB W8, [X21 + 0xDC]
	0x035AD034 LDR X0, [X22]
	0x035AD038 LDR W8, [X0 + 0xE0]
	0x035AD03C CBNZ W8, 0x35AD044
	0x035AD040 BL 0x1C16DFC
	0x035AD044 MOV X0, X20
	0x035AD048 MOV X1, X31
	0x035AD04C BL 0x33BDD8C
	0x035AD050 STR X19, [X20 + 0x10]
	0x035AD054 LDP X20, X19, [X31 + 0x20]
	0x035AD058 LDP X22, X21, [X31 + 0x10]
	0x035AD05C LDR X30, [X31], #0x30
	0x035AD060 RET
	0x035AD064 STR X30, [X31 - 0x20]!
	0x035AD068 STP X20, X19, [X31 + 0x10]
	0x035AD06C ADRP X20, 0xE33000
	0x035AD070 ADRP X19, 0xB8A000
	0x035AD074 LDRB W8, [X20 + 0xF0]
	0x035AD078 LDR X19, [X19 + 0x648]
	0x035AD07C TBNZ X8, 0x0, 0x35AD094
	0x035AD080 ADRP X0, 0xB8A000
	0x035AD084 LDR X0, [X0 + 0x648]
	0x035AD088 BL 0x1C16CF4
	0x035AD08C MOVZ W8, 0x1
	0x035AD090 STRB W8, [X20 + 0xF0]
	0x035AD094 LDR X0, [X19]
	0x035AD098 LDR W8, [X0 + 0xE0]
	0x035AD09C CBNZ W8, 0x35AD0A8
	0x035AD0A0 BL 0x1C16DFC
	0x035AD0A4 LDR X0, [X19]
	0x035AD0A8 LDR X8, [X0 + 0xB8]
	0x035AD0AC LDRB W8, [X8 + 0x8]
	0x035AD0B0 CBZ W8, 0x35AD0D0
	0x035AD0B4 LDR W8, [X0 + 0xE0]
	0x035AD0B8 CBNZ W8, 0x35AD0C4
	0x035AD0BC BL 0x1C16DFC
	0x035AD0C0 LDR X0, [X19]
	0x035AD0C4 LDR X8, [X0 + 0xB8]
	0x035AD0C8 LDR X0, [X8]
	0x035AD0CC B 0x35AD0E0
	0x035AD0D0 BL 0x1C16F10
	0x035AD0D4 MOV X19, X0
	0x035AD0D8 BL 0x35B880C
	0x035AD0DC MOV X0, X19
	0x035AD0E0 LDP X20, X19, [X31 + 0x10]
	0x035AD0E4 LDR X30, [X31], #0x20
	0x035AD0E8 RET
	0x035AD0EC STP X30, X21, [X31 - 0x20]!
	0x035AD0F0 STP X20, X19, [X31 + 0x10]
	0x035AD0F4 ADRP X20, 0xE33000
	0x035AD0F8 ADRP X21, 0xB47000
	0x035AD0FC LDRB W8, [X20 + 0x49]
	0x035AD100 LDR X21, [X21 + 0x460]
	0x035AD104 MOV X19, X0
	0x035AD108 TBNZ X8, 0x0, 0x35AD120
	0x035AD10C ADRP X0, 0xB47000
	0x035AD110 LDR X0, [X0 + 0x460]
	0x035AD114 BL 0x1C16CF4
	0x035AD118 MOVZ W8, 0x1
	0x035AD11C STRB W8, [X20 + 0x49]
	0x035AD120 LDR X0, [X21]
	0x035AD124 LDR W8, [X0 + 0xE0]
	0x035AD128 CBNZ W8, 0x35AD130
	0x035AD12C BL 0x1C16DFC
	0x035AD130 MOV X0, X19
	0x035AD134 MOV X1, X31
	0x035AD138 BL 0x35AD170
	0x035AD13C TBZ X0, 0x0, 0x35AD150
	0x035AD140 LDP X20, X19, [X31 + 0x10]
	0x035AD144 MOV X0, X31
	0x035AD148 LDP X30, X21, [X31], #0x20
	0x035AD14C RET
	0x035AD150 CBZ X19, 0x35AD16C
	0x035AD154 LDR X8, [X19]
	0x035AD158 MOV X0, X19
	0x035AD15C LDP X20, X19, [X31 + 0x10]
	0x035AD160 LDP X2, X1, [X8 + 0x1C8]
	0x035AD164 LDP X30, X21, [X31], #0x20
	0x035AD168 BR X2
	0x035AD16C BL 0x1C16F20
	0x035AD170 STP X30, X21, [X31 - 0x20]!
	0x035AD174 STP X20, X19, [X31 + 0x10]
	0x035AD178 ADRP X21, 0xE33000
	0x035AD17C LDRB W8, [X21 + 0x57]
	0x035AD180 MOV X19, X1
	0x035AD184 MOV X20, X0
	0x035AD188 TBNZ X8, 0x0, 0x35AD1AC
	0x035AD18C ADRP X0, 0xB8A000
	0x035AD190 LDR X0, [X0 + 0x658]
	0x035AD194 BL 0x1C16CF4
	0x035AD198 ADRP X0, 0xB8A000
	0x035AD19C LDR X0, [X0 + 0x648]
	0x035AD1A0 BL 0x1C16CF4
	0x035AD1A4 MOVZ W8, 0x1
	0x035AD1A8 STRB W8, [X21 + 0x57]
	0x035AD1AC CMP X20, X19
	0x035AD1B0 B.EQ 0x35AD210
	0x035AD1B4 ADRP X8, 0xB8A000
	0x035AD1B8 LDR X8, [X8 + 0x648]
	0x035AD1BC LDR X9, [X8]
	0x035AD1C0 CBZ X20, 0x35AD218
	0x035AD1C4 LDR X8, [X20]
	0x035AD1C8 LDRB W11, [X9 + 0x130]
	0x035AD1CC LDRB W10, [X8 + 0x130]
	0x035AD1D0 CMP W10, W11
	0x035AD1D4 B.CC 0x35AD1EC
	0x035AD1D8 LDR X12, [X8 + 0xC8]
	0x035AD1DC ADD X11, X12, X11, 0x3, LSL
	0x035AD1E0 LDUR X11, [X11 - 0x8]
	0x035AD1E4 CMP X11, X9
	0x035AD1E8 B.EQ 0x35AD218
	0x035AD1EC ADRP X11, 0xB8A000
	0x035AD1F0 LDR X11, [X11 + 0x658]
	0x035AD1F4 LDR X11, [X11]
	0x035AD1F8 LDRB W12, [X11 + 0x130]
	0x035AD1FC CMP W10, W12
	0x035AD200 B.CS 0x35AD224
	0x035AD204 MOV W8, W31
	0x035AD208 CBNZ X19, 0x35AD23C
	0x035AD20C B 0x35AD284
	0x035AD210 MOVZ W0, 0x1
	0x035AD214 B 0x35AD2B0
	0x035AD218 MOVZ W8, 0x1
	0x035AD21C CBNZ X19, 0x35AD23C
	0x035AD220 B 0x35AD284
	0x035AD224 LDR X8, [X8 + 0xC8]
	0x035AD228 ADD X8, X8, X12, 0x3, LSL
	0x035AD22C LDUR X8, [X8 - 0x8]
	0x035AD230 CMP X8, X11
	0x035AD234 CSET W8, EQ
	0x035AD238 CBZ X19, 0x35AD284
	0x035AD23C LDR X10, [X19]
	0x035AD240 LDRB W12, [X9 + 0x130]
	0x035AD244 LDRB W11, [X10 + 0x130]
	0x035AD248 CMP W11, W12
	0x035AD24C B.CC 0x35AD264
	0x035AD250 LDR X13, [X10 + 0xC8]
	0x035AD254 ADD X12, X13, X12, 0x3, LSL
	0x035AD258 LDUR X12, [X12 - 0x8]
	0x035AD25C CMP X12, X9
	0x035AD260 B.EQ 0x35AD284
	0x035AD264 ADRP X9, 0xB8A000
	0x035AD268 LDR X9, [X9 + 0x658]
	0x035AD26C LDR X9, [X9]
	0x035AD270 LDRB W12, [X9 + 0x130]
	0x035AD274 CMP W11, W12
	0x035AD278 B.CS 0x35AD28C
	0x035AD27C MOV W9, W31
	0x035AD280 B 0x35AD2A0
	0x035AD284 MOVZ W9, 0x1
	0x035AD288 B 0x35AD2A0
	0x035AD28C LDR X10, [X10 + 0xC8]
	0x035AD290 ADD X10, X10, X12, 0x3, LSL
	0x035AD294 LDUR X10, [X10 - 0x8]
	0x035AD298 CMP X10, X9
	0x035AD29C CSET W9, EQ
	0x035AD2A0 ANDS W31, W9, W8, 0x0
	0x035AD2A4 CSET W0, NE
	0x035AD2A8 ORR W8, W8, W0, 0x0
	0x035AD2AC TBZ X8, 0x0, 0x35AD2BC
	0x035AD2B0 LDP X20, X19, [X31 + 0x10]
	0x035AD2B4 LDP X30, X21, [X31], #0x20
	0x035AD2B8 RET
	0x035AD2BC CBZ X20, 0x35AD2DC
	0x035AD2C0 LDR X8, [X20]
	0x035AD2C4 MOV X0, X20
	0x035AD2C8 MOV X1, X19
	0x035AD2CC LDP X20, X19, [X31 + 0x10]
	0x035AD2D0 LDP X3, X2, [X8 + 0x138]
	0x035AD2D4 LDP X30, X21, [X31], #0x20
	0x035AD2D8 BR X3
	0x035AD2DC BL 0x1C16F20
	0x035AD2E0 STR D8, [X31 - 0x20]!
	0x035AD2E4 STR X30, [X31 + 0x8]
	0x035AD2E8 STP X20, X19, [X31 + 0x10]
	0x035AD2EC ADRP X19, 0xE33000
	0x035AD2F0 ADRP X20, 0xB70000
	0x035AD2F4 LDRB W8, [X19 + 0x4A]
	0x035AD2F8 LDR X20, [X20 + 0x400]
	0x035AD2FC MOV V8.16B, V0.16B
	0x035AD300 TBNZ X8, 0x0, 0x35AD318
	0x035AD304 ADRP X0, 0xB70000
	0x035AD308 LDR X0, [X0 + 0x400]
	0x035AD30C BL 0x1C16CF4
	0x035AD310 MOVZ W8, 0x1
	0x035AD314 STRB W8, [X19 + 0x4A]
	0x035AD318 LDR X0, [X20]
	0x035AD31C BL 0x1C16F10
	0x035AD320 MOV V0.16B, V8.16B
	0x035AD324 MOV X19, X0
	0x035AD328 BL 0x35AD340
	0x035AD32C MOV X0, X19
	0x035AD330 LDP X20, X19, [X31 + 0x10]
	0x035AD334 LDR X30, [X31 + 0x8]
	0x035AD338 LDR V8, [X31], #0x20
	0x035AD33C RET
	0x035AD340 STR D8, [X31 - 0x30]!
	0x035AD344 STP X30, X21, [X31 + 0x10]
	0x035AD348 STP X20, X19, [X31 + 0x20]
	0x035AD34C ADRP X20, 0xE33000
	0x035AD350 ADRP X21, 0xB47000
	0x035AD354 LDRB W8, [X20 + 0xE3]
	0x035AD358 LDR X21, [X21 + 0x460]
	0x035AD35C MOV V8.16B, V0.16B
	0x035AD360 MOV X19, X0
	0x035AD364 TBNZ X8, 0x0, 0x35AD37C
	0x035AD368 ADRP X0, 0xB47000
	0x035AD36C LDR X0, [X0 + 0x460]
	0x035AD370 BL 0x1C16CF4
	0x035AD374 MOVZ W8, 0x1
	0x035AD378 STRB W8, [X20 + 0xE3]
	0x035AD37C LDR X0, [X21]
	0x035AD380 LDR W8, [X0 + 0xE0]
	0x035AD384 CBNZ W8, 0x35AD38C

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+64], X29
	003 Move [X31+72], X30
	004 Move [X31+80], X28
	005 Move [X31+88], X27
	006 Move [X31+96], X26
	007 Move [X31+104], X25
	008 Move [X31+112], X24
	009 Move [X31+120], X23
	010 Move [X31+128], X22
	011 Move [X31+136], X21
	012 Move [X31+144], X20
	013 Move [X31+152], X19
	014 NotImplemented "Instruction MRS not yet implemented."
	015 Move X8, [X23+40]
	016 Move X21, 0xE36000
	017 Move X20, X1
	018 Move X19, X0
	019 Move [X31+56], X8
	020 Move W8, [X21+55]
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {138}
	025 Move X0, 0xB71000
	026 Move X0, [X0+584]
	027 Call 0x1C17CF4
	028 Move X0, 0xB48000
	029 Move X0, [X0+2904]
	030 Call 0x1C17CF4
	031 Move X0, 0xB6F000
	032 Move X0, [X0+3432]
	033 Call 0x1C17CF4
	034 Move X0, 0xB6F000
	035 Move X0, [X0+3440]
	036 Call 0x1C17CF4
	037 Move X0, 0xB4A000
	038 Move X0, [X0+3144]
	039 Call 0x1C17CF4
	040 Move X0, 0xB7A000
	041 Move X0, [X0+320]
	042 Call 0x1C17CF4
	043 Move X0, 0xB70000
	044 Move X0, [X0+1520]
	045 Call 0x1C17CF4
	046 Move X0, 0xB71000
	047 Move X0, [X0+904]
	048 Call 0x1C17CF4
	049 Move X0, 0xB70000
	050 Move X0, [X0+2680]
	051 Call 0x1C17CF4
	052 Move X0, 0xB4B000
	053 Move X0, [X0+2424]
	054 Call 0x1C17CF4
	055 Move X0, 0xB48000
	056 Move X0, [X0+2072]
	057 Call 0x1C17CF4
	058 Move X0, 0xB48000
	059 Move X0, [X0+3584]
	060 Call 0x1C17CF4
	061 Move X0, 0xB50000
	062 Move X0, [X0+3512]
	063 Call 0x1C17CF4
	064 Move X0, 0xB48000
	065 Move X0, [X0+3608]
	066 Call 0x1C17CF4
	067 Move X0, 0xB4F000
	068 Move X0, [X0+760]
	069 Call 0x1C17CF4
	070 Move X0, 0xB70000
	071 Move X0, [X0+4048]
	072 Call 0x1C17CF4
	073 Move X0, 0xB6F000
	074 Move X0, [X0+3448]
	075 Call 0x1C17CF4
	076 Move X0, 0xB6F000
	077 Move X0, [X0+3456]
	078 Call 0x1C17CF4
	079 Move X0, 0xB6F000
	080 Move X0, [X0+3464]
	081 Call 0x1C17CF4
	082 Move X0, 0xB6F000
	083 Move X0, [X0+3472]
	084 Call 0x1C17CF4
	085 Move X0, 0xB70000
	086 Move X0, [X0+2688]
	087 Call 0x1C17CF4
	088 Move X0, 0xB48000
	089 Move X0, [X0+2704]
	090 Call 0x1C17CF4
	091 Move X0, 0xB70000
	092 Move X0, [X0+2912]
	093 Call 0x1C17CF4
	094 Move X0, 0xB4A000
	095 Move X0, [X0+632]
	096 Call 0x1C17CF4
	097 Move X0, 0xB48000
	098 Move X0, [X0+1728]
	099 Call 0x1C17CF4
	100 Move X0, 0xB6F000
	101 Move X0, [X0+3480]
	102 Call 0x1C17CF4
	103 Move X0, 0xB6F000
	104 Move X0, [X0+3488]
	105 Call 0x1C17CF4
	106 Move X0, 0xB50000
	107 Move X0, [X0+1824]
	108 Call 0x1C17CF4
	109 Move X0, 0xB6F000
	110 Move X0, [X0+3496]
	111 Call 0x1C17CF4
	112 Move X0, 0xB86000
	113 Move X0, [X0+640]
	114 Call 0x1C17CF4
	115 Move X0, 0xB86000
	116 Move X0, [X0+648]
	117 Call 0x1C17CF4
	118 Move X0, 0xB48000
	119 Move X0, [X0+2096]
	120 Call 0x1C17CF4
	121 Move X0, 0xB86000
	122 Move X0, [X0+656]
	123 Call 0x1C17CF4
	124 Move X0, 0xB52000
	125 Move X0, [X0+4088]
	126 Call 0x1C17CF4
	127 Move X0, 0xB6F000
	128 Move X0, [X0+632]
	129 Call 0x1C17CF4
	130 Move X0, 0xB86000
	131 Move X0, [X0+664]
	132 Call 0x1C17CF4
	133 Move X0, 0xB53000
	134 Move X0, [X0]
	135 Call 0x1C17CF4
	136 Move W8, 1
	137 Move [X21+55], W8
	138 Move [X31+28], W31
	139 Move [X31+16], X31
	140 Move [X31+32], X31
	141 Move [X31+40], X31
	142 Compare X20, 0
	143 JumpIfEqual {261}
	144 Move X24, 0xB70000
	145 Move X25, 0xB48000
	146 Move X24, [X24+2912]
	147 Move X25, [X25+1728]
	148 Move X0, X20
	149 Move X1, X31
	150 Call "il2cpp_vm_object_is_inst", X0
	151 Move X8, [X25]
	152 Move X22, [X24]
	153 Move X21, X0
	154 Move W9, [X8+224]
	155 Compare W9, 0
	156 JumpIfNotEqual {159}
	157 Move X0, X8
	158 Call 0x1C17DFC
	159 Move X0, X22
	160 Move X1, X31
	161 Call Type.GetTypeFromHandle, X0
	162 Move X1, X0
	163 Move X0, X21
	164 Move X2, X31
	165 Call Type.op_Equality, X0, X1
	166 Move TEMP, X0
	167 And TEMP, TEMP, 1
	168 Compare TEMP, 1
	169 JumpIfEqual {189}
	170 Move X8, 0xB6F000
	171 Move X0, [X25]
	172 Move X8, [X8+3440]
	173 Move W9, [X0+224]
	174 Move X22, [X8]
	175 Compare W9, 0
	176 JumpIfNotEqual {178}
	177 Call 0x1C17DFC
	178 Move X0, X22
	179 Move X1, X31
	180 Call Type.GetTypeFromHandle, X0
	181 Move X1, X0
	182 Move X0, X21
	183 Move X2, X31
	184 Call Type.op_Equality, X0, X1
	185 Move TEMP, X0
	186 And TEMP, TEMP, 1
	187 Compare TEMP, 1
	188 JumpIfNotEqual {269}
	189 Compare X19, 0
	190 JumpIfEqual {1109}
	191 Move W1, 34
	192 Move X0, X19
	193 Move X2, X31
	194 Call StringBuilder.Append, X0, X1
	195 Move X8, 0xB4A000
	196 Move X8, [X8+632]
	197 Move X1, [X8]
	198 Move X8, [X20]
	199 NotImplemented "Instruction CMP not yet implemented."
	200 Move W8, [X20+16]
	201 NotImplemented "Instruction CMP not yet implemented."
	202 Move X24, 0xB86000
	203 Move X25, 0xB50000
	204 Move X26, 0xB86000
	205 Move X27, 0xB86000
	206 Move X24, [X24+640]
	207 Move X25, [X25+1824]
	208 Move X26, [X26+656]
	209 Move X27, [X27+648]
	210 Move W21, W31
	211 Move X0, X20
	212 Move W1, W21
	213 Move X2, X31
	214 Call String.get_Chars, X0, X1
	215 And W22, W0, 0xFFFF
	216 NotImplemented "Instruction CMP not yet implemented."
	217 NotImplemented "Instruction CMP not yet implemented."
	218 NotImplemented "Instruction CMP not yet implemented."
	219 Move W1, 92
	220 Move X0, X19
	221 Move X2, X31
	222 Call StringBuilder.Append, X0, X1
	223 Move X0, [X24]
	224 Compare X0, 0
	225 JumpIfEqual {1109}
	226 Move W1, W22
	227 Move X2, X31
	228 Call String.IndexOf, X0, X1
	229 Move TEMP, X0
	230 And TEMP, TEMP, -2147483648
	231 Compare TEMP, -2147483648
	232 JumpIfEqual {241}
	233 Move W1, W0
	234 Move X0, [X27]
	235 Compare X0, 0
	236 JumpIfEqual {1109}
	237 Move X2, X31
	238 Call String.get_Chars, X0, X1
	239 Move W1, W0
	240 Move X0, X19
	241 Move X0, [X25]
	242 Add X1, X31, 12
	243 Move [X31+12], W22
	244 Call 0x1C17E04
	245 Move X1, [X26]
	246 Move X2, X0
	247 Move X0, X19
	248 Move X3, X31
	249 Call StringBuilder.AppendFormat, X0, X1, X2
	250 Move X0, X19
	251 Move W1, W22
	252 Move X2, X31
	253 Call StringBuilder.Append, X0, X1
	254 Move W8, [X20+16]
	255 Add W21, W21, 1
	256 NotImplemented "Instruction CMP not yet implemented."
	257 Move W1, 34
	258 Move X0, X19
	259 Move X2, X31
	260 Call StringBuilder.Append, X0, X1
	261 Compare X19, 0
	262 JumpIfEqual {1109}
	263 Move X8, 0xB48000
	264 Move X8, [X8+2096]
	265 Move X1, [X8]
	266 Move X0, X19
	267 Move X2, X31
	268 Call StringBuilder.Append, X0, X1
	269 Move X8, 0xB6F000
	270 Move X0, [X25]
	271 Move X8, [X8+3432]
	272 Move W9, [X0+224]
	273 Move X22, [X8]
	274 Compare W9, 0
	275 JumpIfNotEqual {277}
	276 Call 0x1C17DFC
	277 Move X0, X22
	278 Move X1, X31
	279 Call Type.GetTypeFromHandle, X0
	280 Move X1, X0
	281 Move X0, X21
	282 Move X2, X31
	283 Call Type.op_Equality, X0, X1
	284 Move TEMP, X0
	285 And TEMP, TEMP, 1
	286 Compare TEMP, 1
	287 JumpIfEqual {421}
	288 Move X8, 0xB6F000
	289 Move X0, [X25]
	290 Move X8, [X8+3472]
	291 Move W9, [X0+224]
	292 Move X22, [X8]
	293 Compare W9, 0
	294 JumpIfNotEqual {296}
	295 Call 0x1C17DFC
	296 Move X0, X22
	297 Move X1, X31
	298 Call Type.GetTypeFromHandle, X0
	299 Move X1, X0
	300 Move X0, X21
	301 Move X2, X31
	302 Call Type.op_Equality, X0, X1
	303 Move TEMP, X0
	304 And TEMP, TEMP, 1
	305 Compare TEMP, 1
	306 JumpIfEqual {421}
	307 Move X8, 0xB6F000
	308 Move X0, [X25]
	309 Move X8, [X8+3448]
	310 Move W9, [X0+224]
	311 Move X22, [X8]
	312 Compare W9, 0
	313 JumpIfNotEqual {315}
	314 Call 0x1C17DFC
	315 Move X0, X22
	316 Move X1, X31
	317 Call Type.GetTypeFromHandle, X0
	318 Move X1, X0
	319 Move X0, X21
	320 Move X2, X31
	321 Call Type.op_Equality, X0, X1
	322 Move TEMP, X0
	323 And TEMP, TEMP, 1
	324 Compare TEMP, 1
	325 JumpIfEqual {421}
	326 Move X8, 0xB6F000
	327 Move X0, [X25]
	328 Move X8, [X8+3480]
	329 Move W9, [X0+224]
	330 Move X22, [X8]
	331 Compare W9, 0
	332 JumpIfNotEqual {334}
	333 Call 0x1C17DFC
	334 Move X0, X22
	335 Move X1, X31
	336 Call Type.GetTypeFromHandle, X0
	337 Move X1, X0
	338 Move X0, X21
	339 Move X2, X31
	340 Call Type.op_Equality, X0, X1
	341 Move TEMP, X0
	342 And TEMP, TEMP, 1
	343 Compare TEMP, 1
	344 JumpIfEqual {421}
	345 Move X8, 0xB6F000
	346 Move X0, [X25]
	347 Move X8, [X8+3456]
	348 Move W9, [X0+224]
	349 Move X22, [X8]
	350 Compare W9, 0
	351 JumpIfNotEqual {353}
	352 Call 0x1C17DFC
	353 Move X0, X22
	354 Move X1, X31
	355 Call Type.GetTypeFromHandle, X0
	356 Move X1, X0
	357 Move X0, X21
	358 Move X2, X31
	359 Call Type.op_Equality, X0, X1
	360 Move TEMP, X0
	361 And TEMP, TEMP, 1
	362 Compare TEMP, 1
	363 JumpIfEqual {421}
	364 Move X8, 0xB6F000
	365 Move X0, [X25]
	366 Move X8, [X8+3488]
	367 Move W9, [X0+224]
	368 Move X22, [X8]
	369 Compare W9, 0
	370 JumpIfNotEqual {372}
	371 Call 0x1C17DFC
	372 Move X0, X22
	373 Move X1, X31
	374 Call Type.GetTypeFromHandle, X0
	375 Move X1, X0
	376 Move X0, X21
	377 Move X2, X31
	378 Call Type.op_Equality, X0, X1
	379 Move TEMP, X0
	380 And TEMP, TEMP, 1
	381 Compare TEMP, 1
	382 JumpIfEqual {421}
	383 Move X8, 0xB6F000
	384 Move X0, [X25]
	385 Move X8, [X8+3464]
	386 Move W9, [X0+224]
	387 Move X22, [X8]
	388 Compare W9, 0
	389 JumpIfNotEqual {391}
	390 Call 0x1C17DFC
	391 Move X0, X22
	392 Move X1, X31
	393 Call Type.GetTypeFromHandle, X0
	394 Move X1, X0
	395 Move X0, X21
	396 Move X2, X31
	397 Call Type.op_Equality, X0, X1
	398 Move TEMP, X0
	399 And TEMP, TEMP, 1
	400 Compare TEMP, 1
	401 JumpIfEqual {421}
	402 Move X8, 0xB6F000
	403 Move X0, [X25]
	404 Move X8, [X8+3496]
	405 Move W9, [X0+224]
	406 Move X22, [X8]
	407 Compare W9, 0
	408 JumpIfNotEqual {410}
	409 Call 0x1C17DFC
	410 Move X0, X22
	411 Move X1, X31
	412 Call Type.GetTypeFromHandle, X0
	413 Move X1, X0
	414 Move X0, X21
	415 Move X2, X31
	416 Call Type.op_Equality, X0, X1
	417 Move TEMP, X0
	418 And TEMP, TEMP, 1
	419 Compare TEMP, 1
	420 JumpIfNotEqual {444}
	421 Compare X19, 0
	422 JumpIfEqual {1109}
	423 Move X0, X19
	424 Move X1, X20
	425 Move X2, X31
	426 Call StringBuilder.Append, X0, X1
	427 Move X8, [X23+40]
	428 Move X9, [X31+56]
	429 NotImplemented "Instruction CMP not yet implemented."
	430 Move X20, [X31+144]
	431 Move X19, [X31+152]
	432 Move X22, [X31+128]
	433 Move X21, [X31+136]
	434 Move X24, [X31+112]
	435 Move X23, [X31+120]
	436 Move X26, [X31+96]
	437 Move X25, [X31+104]
	438 Move X28, [X31+80]
	439 Move X27, [X31+88]
	440 Move X29, [X31+64]
	441 Move X30, [X31+72]
	442 Add X31, X31, 160
	443 Return 
	444 Move X8, 0xB70000
	445 Move X0, [X25]
	446 Move X8, [X8+2688]
	447 Move W9, [X0+224]
	448 Move X22, [X8]
	449 Compare W9, 0
	450 JumpIfNotEqual {452}
	451 Call 0x1C17DFC
	452 Move X0, X22
	453 Move X1, X31
	454 Call Type.GetTypeFromHandle, X0
	455 Move X1, X0
	456 Move X0, X21
	457 Move X2, X31
	458 Call Type.op_Equality, X0, X1
	459 Move TEMP, X0
	460 And TEMP, TEMP, 1
	461 Compare TEMP, 1
	462 JumpIfNotEqual {489}
	463 Move X8, 0xB48000
	464 Move X8, [X8+2704]
	465 Move X9, [X20]
	466 Move X1, [X8]
	467 Move X8, [X9+64]
	468 Move X9, [X1+64]
	469 NotImplemented "Instruction CMP not yet implemented."
	470 Move X0, X20
	471 Call 0x1C17E08
	472 Move X8, 0xB4A000
	473 Move V0, [X0]
	474 Move X8, [X8+3144]
	475 Move [X31+28], S0
	476 Move X0, [X8]
	477 Move W8, [X0+224]
	478 Compare W8, 0
	479 JumpIfNotEqual {481}
	480 Call 0x1C17DFC
	481 Move X0, X31
	482 Call CultureInfo.get_InvariantCulture
	483 Move X1, X0
	484 Add X0, X31, 28
	485 Move X2, X31
	486 Call Single.ToString, X0, X1
	487 Compare X19, 0
	488 JumpIfNotEqual {586}
	489 Move X8, 0xB70000
	490 Move X0, [X25]
	491 Move X8, [X8+2680]
	492 Move W9, [X0+224]
	493 Move X22, [X8]
	494 Compare W9, 0
	495 JumpIfNotEqual {497}
	496 Call 0x1C17DFC
	497 Move X0, X22
	498 Move X1, X31
	499 Call Type.GetTypeFromHandle, X0
	500 Move X1, X0
	501 Move X0, X21
	502 Move X2, X31
	503 Call Type.op_Equality, X0, X1
	504 Move TEMP, X0
	505 And TEMP, TEMP, 1
	506 Compare TEMP, 1
	507 JumpIfNotEqual {534}
	508 Move X8, 0xB4B000
	509 Move X8, [X8+2424]
	510 Move X9, [X20]
	511 Move X1, [X8]
	512 Move X8, [X9+64]
	513 Move X9, [X1+64]
	514 NotImplemented "Instruction CMP not yet implemented."
	515 Move X0, X20
	516 Call 0x1C17E08
	517 Move X8, 0xB4A000
	518 Move V0, [X0]
	519 Move X8, [X8+3144]
	520 Move [X31+16], D0
	521 Move X0, [X8]
	522 Move W8, [X0+224]
	523 Compare W8, 0
	524 JumpIfNotEqual {526}
	525 Call 0x1C17DFC
	526 Move X0, X31
	527 Call CultureInfo.get_InvariantCulture
	528 Move X1, X0
	529 Add X0, X31, 16
	530 Move X2, X31
	531 Call Double.ToString, X0, X1
	532 Compare X19, 0
	533 JumpIfNotEqual {586}
	534 Move X8, 0xB7A000
	535 Move X0, [X25]
	536 Move X8, [X8+320]
	537 Move W9, [X0+224]
	538 Move X22, [X8]
	539 Compare W9, 0
	540 JumpIfNotEqual {542}
	541 Call 0x1C17DFC
	542 Move X0, X22
	543 Move X1, X31
	544 Call Type.GetTypeFromHandle, X0
	545 Move X1, X0
	546 Move X0, X21
	547 Move X2, X31
	548 Call Type.op_Equality, X0, X1
	549 Move TEMP, X0
	550 And TEMP, TEMP, 1
	551 Compare TEMP, 1
	552 JumpIfNotEqual {587}
	553 Move X21, 0xB70000
	554 Move X21, [X21+1520]
	555 Move X8, [X20]
	556 Move X1, [X21]
	557 Move X8, [X8+64]
	558 Move X9, [X1+64]
	559 NotImplemented "Instruction CMP not yet implemented."
	560 Move X0, X20
	561 Call 0x1C17E08
	562 Move X8, 0xB4A000
	563 Move V0, [X0]
	564 Move X8, [X8+3144]
	565 Move [X31+2], V0
	566 Move X0, [X8]
	567 Move W8, [X0+224]
	568 Compare W8, 0
	569 JumpIfNotEqual {571}
	570 Call 0x1C17DFC
	571 Move X0, X31
	572 Call CultureInfo.get_InvariantCulture
	573 Move X8, [X21]
	574 Move X20, X0
	575 Move W9, [X8+224]
	576 Compare W9, 0
	577 JumpIfNotEqual {580}
	578 Move X0, X8
	579 Call 0x1C17DFC
	580 Add X0, X31, 32
	581 Move X1, X20
	582 Move X2, X31
	583 Call Decimal.ToString, X0, X1
	584 Compare X19, 0
	585 JumpIfEqual {1109}
	586 Move X1, X0
	587 Move [X31], X23
	588 Move X8, 0xB71000
	589 Move X0, [X25]
	590 Move X8, [X8+584]
	591 Move W9, [X0+224]
	592 Move X22, [X8]
	593 Compare W9, 0
	594 JumpIfNotEqual {596}
	595 Call 0x1C17DFC
	596 Move X0, X22
	597 Move X1, X31
	598 Call Type.GetTypeFromHandle, X0
	599 Move X1, X0
	600 Move X0, X21
	601 Move X2, X31
	602 Call Type.op_Equality, X0, X1
	603 Move TEMP, X0
	604 And TEMP, TEMP, 1
	605 Compare TEMP, 1
	606 JumpIfNotEqual {629}
	607 Move X8, 0xB48000
	608 Move X8, [X8+2904]
	609 Move X9, [X20]
	610 Move X1, [X8]
	611 Move X8, [X9+64]
	612 Move X9, [X1+64]
	613 NotImplemented "Instruction CMP not yet implemented."
	614 Move X0, X20
	615 Call 0x1C17E08
	616 Compare X19, 0
	617 JumpIfEqual {1109}
	618 Move W8, [X0]
	619 Move X9, 0xB52000
	620 Move X10, 0xB53000
	621 Move X9, [X9+4088]
	622 Move X10, [X10]
	623 NotImplemented "Instruction CMP not yet implemented."
	624 NotImplemented "Instruction CSEL not yet implemented."
	625 Move X1, [X8]
	626 Move X0, X19
	627 Move X2, X31
	628 Call StringBuilder.Append, X0, X1
	629 Compare X21, 0
	630 JumpIfEqual {1109}
	631 Move X8, [X21]
	632 Move X0, X21
	633 Move X9, [X8+1416]
	634 Move X1, [X8+1424]
	635 NotImplemented "Instruction BLR not yet implemented."
	636 Move TEMP, X0
	637 And TEMP, TEMP, 1
	638 Compare TEMP, 1
	639 JumpIfNotEqual {651}
	640 Compare X19, 0
	641 JumpIfEqual {1109}
	642 Move W1, 34
	643 Move X0, X19
	644 Move X2, X31
	645 Call StringBuilder.Append, X0, X1
	646 Move X0, X19
	647 Move X1, X20
	648 Move X2, X31
	649 Call StringBuilder.Append, X0, X1
	650 Move W1, 34
	651 Move X23, 0xB4F000
	652 Move X23, [X23+760]
	653 Move X0, X20
	654 Move X1, [X23]
	655 Call 0x1C17E00
	656 Compare X0, 0
	657 JumpIfEqual {694}
	658 Compare X19, 0
	659 JumpIfEqual {1109}
	660 Move W1, 91
	661 Move X0, X19
	662 Move X2, X31
	663 Call StringBuilder.Append, X0, X1
	664 Move X21, [X23]
	665 Move X0, X20
	666 Move X1, X21
	667 Call 0x1C17E00
	668 Compare X0, 0
	669 JumpIfEqual {1270}
	670 Move X8, 0xB50000
	671 Move X8, [X8+3512]
	672 Move X23, [X23]
	673 Move X0, X20
	674 Move X22, [X8]
	675 Move X1, X23
	676 Call 0x1C17E00
	677 Compare X0, 0
	678 JumpIfEqual {1273}
	679 Move X8, [X0]
	680 Move X21, X0
	681 NotImplemented "Instruction LDRH not yet implemented."
	682 Compare X9, 0
	683 JumpIfEqual {690}
	684 Move X10, [X8+176]
	685 Add X10, X10, 8
	686 NotImplemented "Instruction LDUR not yet implemented."
	687 NotImplemented "Instruction CMP not yet implemented."
	688 Subtract X9, X9, 1
	689 Add X10, X10, 16
	690 Move X0, X21
	691 Move X1, X22
	692 Move W2, W31
	693 Call 0x1C5D788
	694 Move X8, [X21]
	695 Move X0, X21
	696 Move X9, [X8+968]
	697 Move X1, [X8+976]
	698 NotImplemented "Instruction BLR not yet implemented."
	699 Move TEMP, X0
	700 And TEMP, TEMP, 1
	701 Compare TEMP, 1
	702 JumpIfNotEqual {762}
	703 Move X8, [X21]
	704 Move X0, X21
	705 Move X9, [X8+1096]
	706 Move X1, [X8+1104]
	707 NotImplemented "Instruction BLR not yet implemented."
	708 Move X9, 0xB71000
	709 Move X8, [X25]
	710 Move X9, [X9+904]
	711 Move X22, X0
	712 Move W10, [X8+224]
	713 Move X23, [X9]
	714 Compare W10, 0
	715 JumpIfNotEqual {718}
	716 Move X0, X8
	717 Call 0x1C17DFC
	718 Move X0, X23
	719 Move X1, X31
	720 Call Type.GetTypeFromHandle, X0
	721 Move X1, X0
	722 Move X0, X22
	723 Move X2, X31
	724 Call Type.op_Equality, X0, X1
	725 Move TEMP, X0
	726 And TEMP, TEMP, 1
	727 Compare TEMP, 1
	728 JumpIfNotEqual {762}
	729 Move X8, [X21]
	730 Move X0, X21
	731 Move X9, [X8+1128]
	732 Move X1, [X8+1136]
	733 NotImplemented "Instruction BLR not yet implemented."
	734 Compare X0, 0
	735 JumpIfEqual {1109}
	736 Move W8, [X0+24]
	737 Compare W8, 0
	738 JumpIfEqual {1265}
	739 Move X8, [X25]
	740 Move X21, [X0+32]
	741 Move X22, [X24]
	742 Move W9, [X8+224]
	743 Compare W9, 0
	744 JumpIfNotEqual {747}
	745 Move X0, X8
	746 Call 0x1C17DFC
	747 Move X0, X22
	748 Move X1, X31
	749 Call Type.GetTypeFromHandle, X0
	750 Move X1, X0
	751 Move X0, X21
	752 Move X2, X31
	753 Call Type.op_Inequality, X0, X1
	754 Compare X19, 0
	755 JumpIfEqual {1109}
	756 Move TEMP, X0
	757 And TEMP, TEMP, 1
	758 Compare TEMP, 1
	759 JumpIfNotEqual {1054}
	760 Move X8, 0xB6F000
	761 Move X8, [X8+632]
	762 Compare X19, 0
	763 JumpIfEqual {1109}
	764 Move W1, 123
	765 Move X0, X19
	766 Move X2, X31
	767 Call StringBuilder.Append, X0, X1
	768 Move X8, [X21]
	769 Move W1, 84
	770 Move X0, X21
	771 Move X9, [X8+1672]
	772 Move X2, [X8+1680]
	773 NotImplemented "Instruction BLR not yet implemented."
	774 Compare X0, 0
	775 JumpIfEqual {1109}
	776 Move W8, [X0+24]
	777 Move X22, X0
	778 NotImplemented "Instruction CMP not yet implemented."
	779 Move X28, 0xB70000
	780 Move X29, 0xB86000
	781 Move X28, [X28+4048]
	782 Move X29, [X29+664]
	783 Move W27, W31
	784 Move W26, 1
	785 NotImplemented "Instruction CMP not yet implemented."
	786 Move X0, [X25]
	787 Add X8, X22, W27
	788 Move X23, [X8+32]
	789 Move X24, [X28]
	790 Move W8, [X0+224]
	791 Compare W8, 0
	792 JumpIfNotEqual {794}
	793 Call 0x1C17DFC
	794 Move X0, X24
	795 Move X1, X31
	796 Call Type.GetTypeFromHandle, X0
	797 Compare X23, 0
	798 JumpIfEqual {1109}
	799 Move X8, [X23]
	800 Move X1, X0
	801 Move W2, 1
	802 Move X0, X23
	803 Move X9, [X8+488]
	804 Move X3, [X8+496]
	805 NotImplemented "Instruction BLR not yet implemented."
	806 Move TEMP, X0
	807 And TEMP, TEMP, 1
	808 Compare TEMP, 1
	809 JumpIfEqual {845}
	810 Move X8, [X23]
	811 Move X0, X23
	812 Move X1, X20
	813 Move X9, [X8+712]
	814 Move X2, [X8+720]
	815 NotImplemented "Instruction BLR not yet implemented."
	816 Compare X0, 0
	817 JumpIfEqual {845}
	818 Move X24, X0
	819 Move TEMP, X26
	820 And TEMP, TEMP, 1
	821 Compare TEMP, 1
	822 JumpIfEqual {827}
	823 Move W1, 44
	824 Move X0, X19
	825 Move X2, X31
	826 Call StringBuilder.Append, X0, X1
	827 Move W1, 34
	828 Move X0, X19
	829 Move X2, X31
	830 Call StringBuilder.Append, X0, X1
	831 Move X0, X23
	832 Call JsonWriter.GetMemberName, X0
	833 Move X1, X0
	834 Move X0, X19
	835 Move X2, X31
	836 Call StringBuilder.Append, X0, X1
	837 Move X1, [X29]
	838 Move X0, X19
	839 Move X2, X31
	840 Call StringBuilder.Append, X0, X1
	841 Move X0, X19
	842 Move X1, X24
	843 Call JsonWriter.AppendValue, X0, X1
	844 Move W26, W31
	845 Move W8, [X22+24]
	846 Add W27, W27, 1
	847 NotImplemented "Instruction CMP not yet implemented."
	848 NotImplemented "Instruction LDRSW not yet implemented."
	849 Add X8, X8, X9
	850 Add X0, X8, 312
	851 Move X8, [X0]
	852 Move X1, [X0+8]
	853 Move X0, X21
	854 NotImplemented "Instruction BLR not yet implemented."
	855 Move X20, X0
	856 Compare X0, 0
	857 JumpIfEqual {1276}
	858 Move X22, 0xB48000
	859 Move X22, [X22+3608]
	860 Move W23, 1
	861 Move X8, [X20]
	862 Move X1, [X22]
	863 NotImplemented "Instruction LDRH not yet implemented."
	864 Compare X9, 0
	865 JumpIfEqual {872}
	866 Move X10, [X8+176]
	867 Add X10, X10, 8
	868 NotImplemented "Instruction LDUR not yet implemented."
	869 NotImplemented "Instruction CMP not yet implemented."
	870 Subtract X9, X9, 1
	871 Add X10, X10, 16
	872 Move X0, X20
	873 Move W2, W31
	874 Call 0x1C5D788
	875 NotImplemented "Instruction LDRSW not yet implemented."
	876 Add X8, X8, X9
	877 Add X0, X8, 312
	878 Move X8, [X0]
	879 Move X1, [X0+8]
	880 Move X0, X20
	881 NotImplemented "Instruction BLR not yet implemented."
	882 Move TEMP, X0
	883 And TEMP, TEMP, 1
	884 Compare TEMP, 1
	885 JumpIfNotEqual {921}
	886 Move X8, [X20]
	887 Move X1, [X22]
	888 NotImplemented "Instruction LDRH not yet implemented."
	889 Compare X9, 0
	890 JumpIfEqual {897}
	891 Move X10, [X8+176]
	892 Add X10, X10, 8
	893 NotImplemented "Instruction LDUR not yet implemented."
	894 NotImplemented "Instruction CMP not yet implemented."
	895 Subtract X9, X9, 1
	896 Add X10, X10, 16
	897 Move W2, 1
	898 Move X0, X20
	899 Call 0x1C5D788
	900 Move W9, [X10]
	901 Add W9, W9, 1
	902 Add X8, X8, W9
	903 Add X0, X8, 312
	904 Move X8, [X0]
	905 Move X1, [X0+8]
	906 Move X0, X20
	907 NotImplemented "Instruction BLR not yet implemented."
	908 Move X21, X0
	909 Move TEMP, X23
	910 And TEMP, TEMP, 1
	911 Compare TEMP, 1
	912 JumpIfEqual {917}
	913 Move W1, 44
	914 Move X0, X19
	915 Move X2, X31
	916 Call StringBuilder.Append, X0, X1
	917 Move X0, X19
	918 Move X1, X21
	919 Call JsonWriter.AppendValue, X0, X1
	920 Move W23, W31
	921 Move X22, X31
	922 Move W21, 31
	923 Move X23, 0xB48000
	924 Move X23, [X23+3584]
	925 Move X0, X20
	926 Move X1, [X23]
	927 Call 0x1C17E00
	928 Compare X0, 0
	929 JumpIfEqual {952}
	930 Move X8, [X0]
	931 Move X1, [X23]
	932 Move X20, X0
	933 NotImplemented "Instruction LDRH not yet implemented."
	934 Compare X9, 0
	935 JumpIfEqual {942}
	936 Move X10, [X8+176]
	937 Add X10, X10, 8
	938 NotImplemented "Instruction LDUR not yet implemented."
	939 NotImplemented "Instruction CMP not yet implemented."
	940 Subtract X9, X9, 1
	941 Add X10, X10, 16
	942 Move X0, X20
	943 Move W2, W31
	944 Call 0x1C5D788
	945 NotImplemented "Instruction LDRSW not yet implemented."
	946 Add X8, X8, X9
	947 Add X0, X8, 312
	948 Move X8, [X0]
	949 Move X1, [X0+8]
	950 Move X0, X20
	951 NotImplemented "Instruction BLR not yet implemented."
	952 Compare X22, 0
	953 JumpIfNotEqual {1268}
	954 Move X23, [X31]
	955 NotImplemented "Instruction CMP not yet implemented."
	956 Compare W21, 0
	957 JumpIfNotEqual {427}
	958 Move W1, 93
	959 Move W26, 1
	960 Move X8, [X21]
	961 Move W1, 84
	962 Move X0, X21
	963 Move X9, [X8+2024]
	964 Move X2, [X8+2032]
	965 NotImplemented "Instruction BLR not yet implemented."
	966 Compare X0, 0
	967 JumpIfEqual {1109}
	968 Move W8, [X0+24]
	969 Move X21, X0
	970 NotImplemented "Instruction CMP not yet implemented."
	971 Move X27, 0xB70000
	972 Move X28, 0xB86000
	973 Move X27, [X27+4048]
	974 Move X28, [X28+664]
	975 Move W24, W31
	976 NotImplemented "Instruction CMP not yet implemented."
	977 Add X8, X21, W24
	978 Move X22, [X8+32]
	979 Compare X22, 0
	980 JumpIfEqual {1109}
	981 Move X8, [X22]
	982 Move X0, X22
	983 Move X9, [X8+616]
	984 Move X1, [X8+624]
	985 NotImplemented "Instruction BLR not yet implemented."
	986 Move TEMP, X0
	987 And TEMP, TEMP, 1
	988 Compare TEMP, 1
	989 JumpIfNotEqual {1046}
	990 Move X0, [X25]
	991 Move X23, [X27]
	992 Move W8, [X0+224]
	993 Compare W8, 0
	994 JumpIfNotEqual {996}
	995 Call 0x1C17DFC
	996 Move X0, X23
	997 Move X1, X31
	998 Call Type.GetTypeFromHandle, X0
	999 Move X8, [X22]
	1000 Move X1, X0
	1001 Move W2, 1
	1002 Move X0, X22
	1003 Move X9, [X8+488]
	1004 Move X3, [X8+496]
	1005 NotImplemented "Instruction BLR not yet implemented."
	1006 Move TEMP, X0
	1007 And TEMP, TEMP, 1
	1008 Compare TEMP, 1
	1009 JumpIfEqual {1046}
	1010 Move X8, [X22]
	1011 Move X0, X22
	1012 Move X1, X20
	1013 Move X2, X31
	1014 Move X9, [X8+712]
	1015 Move X3, [X8+720]
	1016 NotImplemented "Instruction BLR not yet implemented."
	1017 Compare X0, 0
	1018 JumpIfEqual {1046}
	1019 Move X23, X0
	1020 Move TEMP, X26
	1021 And TEMP, TEMP, 1
	1022 Compare TEMP, 1
	1023 JumpIfEqual {1028}
	1024 Move W1, 44
	1025 Move X0, X19
	1026 Move X2, X31
	1027 Call StringBuilder.Append, X0, X1
	1028 Move W1, 34
	1029 Move X0, X19
	1030 Move X2, X31
	1031 Call StringBuilder.Append, X0, X1
	1032 Move X0, X22
	1033 Call JsonWriter.GetMemberName, X0
	1034 Move X1, X0
	1035 Move X0, X19
	1036 Move X2, X31
	1037 Call StringBuilder.Append, X0, X1
	1038 Move X1, [X28]
	1039 Move X0, X19
	1040 Move X2, X31
	1041 Call StringBuilder.Append, X0, X1
	1042 Move X0, X19
	1043 Move X1, X23
	1044 Call JsonWriter.AppendValue, X0, X1
	1045 Move W26, W31
	1046 Move W8, [X21+24]
	1047 Add W24, W24, 1
	1048 NotImplemented "Instruction CMP not yet implemented."
	1049 Move W1, 125
	1050 Move X0, X19
	1051 Move X2, X31
	1052 Call StringBuilder.Append, X0, X1
	1053 Move X23, [X31]
	1054 Move W1, 123
	1055 Move X0, X19
	1056 Move X2, X31
	1057 Call StringBuilder.Append, X0, X1
	1058 Move X23, 0xB48000
	1059 Move X23, [X23+2072]
	1060 Move X0, X20
	1061 Move X1, [X23]
	1062 Call 0x1C17E00
	1063 Compare X0, 0
	1064 JumpIfEqual {1109}
	1065 Move X8, [X0]
	1066 Move X1, [X23]
	1067 Move X21, X0
	1068 NotImplemented "Instruction LDRH not yet implemented."
	1069 Compare X9, 0
	1070 JumpIfEqual {1077}
	1071 Move X10, [X8+176]
	1072 Add X10, X10, 8
	1073 NotImplemented "Instruction LDUR not yet implemented."
	1074 NotImplemented "Instruction CMP not yet implemented."
	1075 Subtract X9, X9, 1
	1076 Add X10, X10, 16
	1077 Move W2, 2
	1078 Move X0, X21
	1079 Call 0x1C5D788
	1080 Move X0, X20
	1081 Call 0x1C181E0
	1082 Move W9, [X10]
	1083 Add W9, W9, 2
	1084 Add X8, X8, W9
	1085 Add X0, X8, 312
	1086 Move X8, [X0]
	1087 Move X1, [X0+8]
	1088 Move X0, X21
	1089 NotImplemented "Instruction BLR not yet implemented."
	1090 Compare X0, 0
	1091 JumpIfEqual {1109}
	1092 Move X10, 0xB50000
	1093 Move X8, [X0]
	1094 Move X10, [X10+3512]
	1095 Move X20, X0
	1096 NotImplemented "Instruction LDRH not yet implemented."
	1097 Move X1, [X10]
	1098 Compare X9, 0
	1099 JumpIfEqual {1106}
	1100 Move X10, [X8+176]
	1101 Add X10, X10, 8
	1102 NotImplemented "Instruction LDUR not yet implemented."
	1103 NotImplemented "Instruction CMP not yet implemented."
	1104 Subtract X9, X9, 1
	1105 Add X10, X10, 16
	1106 Move X0, X20
	1107 Move W2, W31
	1108 Call 0x1C5D788
	1109 Call 0x1C17F20
	1110 NotImplemented "Instruction LDRSW not yet implemented."
	1111 Add X8, X8, X9
	1112 Add X0, X8, 312
	1113 Move X8, [X0]
	1114 Move X1, [X0+8]
	1115 Move X0, X20
	1116 NotImplemented "Instruction BLR not yet implemented."
	1117 Move X20, X0
	1118 Compare X0, 0
	1119 JumpIfEqual {1277}
	1120 Move X24, 0xB48000
	1121 Move X25, 0xB4A000
	1122 Move X26, 0xB86000
	1123 Move X24, [X24+3608]
	1124 Move X25, [X25+632]
	1125 Move X26, [X26+664]
	1126 Move W27, 1
	1127 Move X8, [X20]
	1128 Move X1, [X24]
	1129 NotImplemented "Instruction LDRH not yet implemented."
	1130 Compare X9, 0
	1131 JumpIfEqual {1138}
	1132 Move X10, [X8+176]
	1133 Add X10, X10, 8
	1134 NotImplemented "Instruction LDUR not yet implemented."
	1135 NotImplemented "Instruction CMP not yet implemented."
	1136 Subtract X9, X9, 1
	1137 Add X10, X10, 16
	1138 Move X0, X20
	1139 Move W2, W31
	1140 Call 0x1C5D788
	1141 NotImplemented "Instruction LDRSW not yet implemented."
	1142 Add X8, X8, X9
	1143 Add X0, X8, 312
	1144 Move X8, [X0]
	1145 Move X1, [X0+8]
	1146 Move X0, X20
	1147 NotImplemented "Instruction BLR not yet implemented."
	1148 Move TEMP, X0
	1149 And TEMP, TEMP, 1
	1150 Compare TEMP, 1
	1151 JumpIfNotEqual {1226}
	1152 Move X8, [X20]
	1153 Move X1, [X24]
	1154 NotImplemented "Instruction LDRH not yet implemented."
	1155 Compare X9, 0
	1156 JumpIfEqual {1163}
	1157 Move X10, [X8+176]
	1158 Add X10, X10, 8
	1159 NotImplemented "Instruction LDUR not yet implemented."
	1160 NotImplemented "Instruction CMP not yet implemented."
	1161 Subtract X9, X9, 1
	1162 Add X10, X10, 16
	1163 Move W2, 1
	1164 Move X0, X20
	1165 Call 0x1C5D788
	1166 Move W9, [X10]
	1167 Add W9, W9, 1
	1168 Add X8, X8, W9
	1169 Add X0, X8, 312
	1170 Move X8, [X0]
	1171 Move X1, [X0+8]
	1172 Move X0, X20
	1173 NotImplemented "Instruction BLR not yet implemented."
	1174 Move X22, X0
	1175 Move TEMP, X27
	1176 And TEMP, TEMP, 1
	1177 Compare TEMP, 1
	1178 JumpIfEqual {1183}
	1179 Move W1, 44
	1180 Move X0, X19
	1181 Move X2, X31
	1182 Call StringBuilder.Append, X0, X1
	1183 Move W1, 34
	1184 Move X0, X19
	1185 Move X2, X31
	1186 Call StringBuilder.Append, X0, X1
	1187 Compare X22, 0
	1188 JumpIfEqual {1192}
	1189 Move X1, [X25]
	1190 Move X8, [X22]
	1191 NotImplemented "Instruction CMP not yet implemented."
	1192 Move X0, X19
	1193 Move X1, X22
	1194 Move X2, X31
	1195 Call StringBuilder.Append, X0, X1
	1196 Move X1, [X26]
	1197 Move X0, X19
	1198 Move X2, X31
	1199 Call StringBuilder.Append, X0, X1
	1200 Move X8, [X21]
	1201 Move X1, [X23]
	1202 NotImplemented "Instruction LDRH not yet implemented."
	1203 Compare X9, 0
	1204 JumpIfEqual {1211}
	1205 Move X10, [X8+176]
	1206 Add X10, X10, 8
	1207 NotImplemented "Instruction LDUR not yet implemented."
	1208 NotImplemented "Instruction CMP not yet implemented."
	1209 Subtract X9, X9, 1
	1210 Add X10, X10, 16
	1211 Move X0, X21
	1212 Move W2, W31
	1213 Call 0x1C5D788
	1214 NotImplemented "Instruction LDRSW not yet implemented."
	1215 Add X8, X8, X9
	1216 Add X0, X8, 312
	1217 Move X8, [X0]
	1218 Move X2, [X0+8]
	1219 Move X0, X21
	1220 Move X1, X22
	1221 NotImplemented "Instruction BLR not yet implemented."
	1222 Move X1, X0
	1223 Move X0, X19
	1224 Call JsonWriter.AppendValue, X0, X1
	1225 Move W27, W31
	1226 Move X22, X31
	1227 Move W21, 38
	1228 Move X23, 0xB47000
	1229 Move X23, [X23+3584]
	1230 Move X0, X20
	1231 Move X1, [X23]
	1232 Call 0x1C17E00
	1233 Compare X0, 0
	1234 JumpIfEqual {1257}
	1235 Move X8, [X0]
	1236 Move X1, [X23]
	1237 Move X20, X0
	1238 NotImplemented "Instruction LDRH not yet implemented."
	1239 Compare X9, 0
	1240 JumpIfEqual {1247}
	1241 Move X10, [X8+176]
	1242 Add X10, X10, 8
	1243 NotImplemented "Instruction LDUR not yet implemented."
	1244 NotImplemented "Instruction CMP not yet implemented."
	1245 Subtract X9, X9, 1
	1246 Add X10, X10, 16
	1247 Move X0, X20
	1248 Move W2, W31
	1249 Call 0x1C5D788
	1250 NotImplemented "Instruction LDRSW not yet implemented."
	1251 Add X8, X8, X9
	1252 Add X0, X8, 312
	1253 Move X8, [X0]
	1254 Move X1, [X0+8]
	1255 Move X0, X20
	1256 NotImplemented "Instruction BLR not yet implemented."
	1257 Compare X22, 0
	1258 JumpIfNotEqual {1268}
	1259 Move X23, [X31]
	1260 NotImplemented "Instruction CMP not yet implemented."
	1261 Compare W21, 0
	1262 JumpIfNotEqual {427}
	1263 Move W1, 125
	1264 Call 0x3EB2B20
	1265 Call 0x1C17F28
	1266 Move X0, X22
	1267 Call 0x1C181E0
	1268 Move X0, X22
	1269 Call 0x1C17F18
	1270 Move X0, X20
	1271 Move X1, X21
	1272 Call 0x1C181E0
	1273 Move X0, X20
	1274 Move X1, X23
	1275 Call 0x1C181E0
	1276 Call 0x1C17F20
	1277 Call 0x1C17F20
	1278 Move X21, X0
	1279 NotImplemented "Instruction CMP not yet implemented."
	1280 Move X0, X21
	1281 Call 0x3EB2AD0
	1282 Move X22, [X0]
	1283 Call 0x3EB2AE0
	1284 Move W21, W31
	1285 Move X22, X31
	1286 Move X21, X0
	1287 Move X23, 0xB47000
	1288 Move X23, [X23+3584]
	1289 Move X1, [X23]
	1290 Move X0, X20
	1291 Call 0x1C17E00
	1292 Move X19, X0
	1293 Compare X0, 0
	1294 JumpIfEqual {1316}
	1295 Move X8, [X19]
	1296 Move X1, [X23]
	1297 NotImplemented "Instruction LDRH not yet implemented."
	1298 Compare X9, 0
	1299 JumpIfEqual {1306}
	1300 Move X10, [X8+176]
	1301 Add X10, X10, 8
	1302 NotImplemented "Instruction LDUR not yet implemented."
	1303 NotImplemented "Instruction CMP not yet implemented."
	1304 Subtract X9, X9, 1
	1305 Add X10, X10, 16
	1306 Move X0, X19
	1307 Move W2, W31
	1308 Call 0x1C5D788
	1309 NotImplemented "Instruction LDRSW not yet implemented."
	1310 Add X8, X8, X9
	1311 Add X0, X8, 312
	1312 Move X8, [X0]
	1313 Move X1, [X0+8]
	1314 Move X0, X19
	1315 NotImplemented "Instruction BLR not yet implemented."
	1316 Compare X22, 0
	1317 JumpIfEqual {1360}
	1318 Move X0, X22
	1319 Call 0x1C17F18
	1320 Move X21, X0
	1321 NotImplemented "Instruction CMP not yet implemented."
	1322 Move X0, X21
	1323 Call 0x3EB2AD0
	1324 Move X22, [X0]
	1325 Call 0x3EB2AE0
	1326 Move W21, W31
	1327 Move X22, X31
	1328 Move X21, X0
	1329 Move X23, 0xB47000
	1330 Move X23, [X23+3584]
	1331 Move X1, [X23]
	1332 Move X0, X20
	1333 Call 0x1C17E00
	1334 Move X19, X0
	1335 Compare X0, 0
	1336 JumpIfEqual {1358}
	1337 Move X8, [X19]
	1338 Move X1, [X23]
	1339 NotImplemented "Instruction LDRH not yet implemented."
	1340 Compare X9, 0
	1341 JumpIfEqual {1348}
	1342 Move X10, [X8+176]
	1343 Add X10, X10, 8
	1344 NotImplemented "Instruction LDUR not yet implemented."
	1345 NotImplemented "Instruction CMP not yet implemented."
	1346 Subtract X9, X9, 1
	1347 Add X10, X10, 16
	1348 Move X0, X19
	1349 Move W2, W31
	1350 Call 0x1C5D788
	1351 NotImplemented "Instruction LDRSW not yet implemented."
	1352 Add X8, X8, X9
	1353 Add X0, X8, 312
	1354 Move X8, [X0]
	1355 Move X1, [X0+8]
	1356 Move X0, X19
	1357 NotImplemented "Instruction BLR not yet implemented."
	1358 Compare X22, 0
	1359 JumpIfNotEqual {1362}
	1360 Move X0, X21
	1361 Call 0x1D2D690
	1362 Move X0, X22
	1363 Call 0x1C17F18
	1364 Call 0x1991590

Method: System.String GetMemberName(System.Reflection.MemberInfo member)

Disassembly:
	0x035AD388 BL 0x1C16DFC
	0x035AD38C MOV X0, X19
	0x035AD390 MOV X1, X31
	0x035AD394 BL 0x33BDD8C
	0x035AD398 FMOV X8, D8
	0x035AD39C MOVZ X9, 0x7FF00000
	0x035AD3A0 BICS X31, X9, X8, 0x0
	0x035AD3A4 FMOV D0, X31
	0x035AD3A8 FCSEL D0, D0, D8, EQ
	0x035AD3AC STR D0, [X19 + 0x10]
	0x035AD3B0 LDP X20, X19, [X31 + 0x20]
	0x035AD3B4 LDP X30, X21, [X31 + 0x10]
	0x035AD3B8 LDR V8, [X31], #0x30
	0x035AD3BC RET
	0x035AD3C0 STP X30, X21, [X31 - 0x20]!
	0x035AD3C4 STP X20, X19, [X31 + 0x10]
	0x035AD3C8 ADRP X20, 0xE33000
	0x035AD3CC ADRP X21, 0xB47000
	0x035AD3D0 LDRB W8, [X20 + 0x4B]
	0x035AD3D4 LDR X21, [X21 + 0x460]
	0x035AD3D8 MOV X19, X0
	0x035AD3DC TBNZ X8, 0x0, 0x35AD3F4
	0x035AD3E0 ADRP X0, 0xB47000
	0x035AD3E4 LDR X0, [X0 + 0x460]
	0x035AD3E8 BL 0x1C16CF4
	0x035AD3EC MOVZ W8, 0x1
	0x035AD3F0 STRB W8, [X20 + 0x4B]
	0x035AD3F4 LDR X0, [X21]
	0x035AD3F8 LDR W8, [X0 + 0xE0]
	0x035AD3FC CBNZ W8, 0x35AD404
	0x035AD400 BL 0x1C16DFC
	0x035AD404 MOV X0, X19
	0x035AD408 MOV X1, X31
	0x035AD40C BL 0x35AD170
	0x035AD410 TBZ X0, 0x0, 0x35AD424
	0x035AD414 LDP X20, X19, [X31 + 0x10]
	0x035AD418 FMOV D0, X31
	0x035AD41C LDP X30, X21, [X31], #0x20
	0x035AD420 RET
	0x035AD424 CBZ X19, 0x35AD444
	0x035AD428 LDR X8, [X19]
	0x035AD42C MOV X0, X19
	0x035AD430 LDP X20, X19, [X31 + 0x10]
	0x035AD434 LDR X2, [X8 + 0x348]
	0x035AD438 LDR X1, [X8 + 0x350]
	0x035AD43C LDP X30, X21, [X31], #0x20
	0x035AD440 BR X2
	0x035AD444 BL 0x1C16F20
	0x035AD448 STR D8, [X31 - 0x20]!
	0x035AD44C STR X30, [X31 + 0x8]
	0x035AD450 STP X20, X19, [X31 + 0x10]
	0x035AD454 ADRP X19, 0xE33000
	0x035AD458 ADRP X20, 0xB70000
	0x035AD45C LDRB W8, [X19 + 0x4C]
	0x035AD460 LDR X20, [X20 + 0x400]
	0x035AD464 MOV V8.16B, V0.16B
	0x035AD468 TBNZ X8, 0x0, 0x35AD480
	0x035AD46C ADRP X0, 0xB70000
	0x035AD470 LDR X0, [X0 + 0x400]
	0x035AD474 BL 0x1C16CF4
	0x035AD478 MOVZ W8, 0x1
	0x035AD47C STRB W8, [X19 + 0x4C]
	0x035AD480 LDR X0, [X20]
	0x035AD484 BL 0x1C16F10
	0x035AD488 FCVT S0, S8
	0x035AD48C MOV X19, X0
	0x035AD490 BL 0x35AD340
	0x035AD494 MOV X0, X19
	0x035AD498 LDP X20, X19, [X31 + 0x10]
	0x035AD49C LDR X30, [X31 + 0x8]
	0x035AD4A0 LDR V8, [X31], #0x20
	0x035AD4A4 RET
	0x035AD4A8 STP X30, X21, [X31 - 0x20]!
	0x035AD4AC STP X20, X19, [X31 + 0x10]
	0x035AD4B0 ADRP X20, 0xE33000
	0x035AD4B4 ADRP X21, 0xB47000
	0x035AD4B8 LDRB W8, [X20 + 0x4D]
	0x035AD4BC LDR X21, [X21 + 0x460]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xE34000
	007 Move X21, 0xB6F000
	008 Move X22, 0xB47000
	009 Move W8, [X20+56]
	010 Move X21, [X21+4032]
	011 Move X22, [X22+1728]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {28}
	017 Move X0, 0xB6F000
	018 Move X0, [X0+4032]
	019 Call 0x1C17CF4
	020 Move X0, 0xB6F000
	021 Move X0, [X0+4040]
	022 Call 0x1C17CF4
	023 Move X0, 0xB47000
	024 Move X0, [X0+1728]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X20+56], W8
	028 Move X0, [X22]
	029 Move X20, [X21]
	030 Move W8, [X0+224]
	031 Compare W8, 0
	032 JumpIfNotEqual {34}
	033 Call 0x1C17DFC
	034 Move X0, X20
	035 Move X1, X31
	036 Call Type.GetTypeFromHandle, X0
	037 Compare X19, 0
	038 JumpIfEqual {96}
	039 Move X8, [X19]
	040 Move X1, X0
	041 Move W2, 1
	042 Move X0, X19
	043 Move X9, [X8+488]
	044 Move X3, [X8+496]
	045 NotImplemented "Instruction BLR not yet implemented."
	046 Move TEMP, X0
	047 And TEMP, TEMP, 1
	048 Compare TEMP, 1
	049 JumpIfNotEqual {79}
	050 Move X0, [X22]
	051 Move X20, [X21]
	052 Move W8, [X0+224]
	053 Compare W8, 0
	054 JumpIfNotEqual {56}
	055 Call 0x1C17DFC
	056 Move X0, X20
	057 Move X1, X31
	058 Call Type.GetTypeFromHandle, X0
	059 Move X1, X0
	060 Move W2, 1
	061 Move X0, X19
	062 Move X3, X31
	063 Call Attribute.GetCustomAttribute, X0, X1, X2
	064 Compare X0, 0
	065 JumpIfEqual {96}
	066 Move X8, 0xB6F000
	067 Move X8, [X8+4040]
	068 Move X20, X0
	069 Move X1, [X8]
	070 Move X8, [X0]
	071 NotImplemented "Instruction CMP not yet implemented."
	072 Move X0, [X20+16]
	073 Move X1, X31
	074 Call String.IsNullOrEmpty, X0
	075 Move TEMP, X0
	076 And TEMP, TEMP, 1
	077 Compare TEMP, 1
	078 JumpIfNotEqual {89}
	079 Move X8, [X19]
	080 Move X0, X19
	081 Move X20, [X31+32]
	082 Move X19, [X31+40]
	083 Move X22, [X31+16]
	084 Move X21, [X31+24]
	085 Move X2, [X8+424]
	086 Move X1, [X8+432]
	087 Move X30, [X31+48]
	088 CallNoReturn X2
	089 Move X0, [X20+16]
	090 Move X20, [X31+32]
	091 Move X19, [X31+40]
	092 Move X22, [X31+16]
	093 Move X21, [X31+24]
	094 Move X30, [X31+48]
	095 Return X0
	096 Call 0x1C17F20
	097 Move X0, X20
	098 Call 0x1C181E0

