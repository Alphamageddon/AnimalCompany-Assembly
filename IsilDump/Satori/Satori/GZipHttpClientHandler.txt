Type: Satori.GZipHttpClientHandler

Method: System.Void .ctor(System.Net.Http.HttpMessageHandler innerHandler)

Disassembly:
	0x035A791C LDR X8, [X8 + 0x180]
	0x035A7920 LDR X0, [X8]
	0x035A7924 BL 0x1C16F10
	0x035A7928 MOV X20, X0
	0x035A792C MOV X1, X31
	0x035A7930 BL 0x35FBED4
	0x035A7934 CBZ X20, 0x35A80F8
	0x035A7938 LDR X1, [X19 + 0x20]
	0x035A793C MOV X0, X20
	0x035A7940 MOV X2, X31
	0x035A7944 BL 0x35F6FE8
	0x035A7948 ADRP X8, 0xB4F000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X1
	005 Move X1, X31
	006 Move X20, X0
	007 Call DelegatingHandler..ctor, X0
	008 Move X0, X20
	009 Move X1, X19
	010 Move X20, [X31+16]
	011 Move X19, [X31+24]
	012 Move X2, X31
	013 Move X30, [X31+32]
	014 Call DelegatingHandler.set_InnerHandler, X0, X1
	015 Return 

Method: System.Threading.Tasks.Task`1<System.Net.Http.HttpResponseMessage> SendAsync(System.Net.Http.HttpRequestMessage request, System.Threading.CancellationToken ct)

Disassembly:
	0x035A794C LDR X22, [X19 + 0x28]
	0x035A7950 LDR X8, [X8 + 0x178]
	0x035A7954 LDR X0, [X8]
	0x035A7958 BL 0x1C16F10
	0x035A795C MOV X21, X0
	0x035A7960 MOV X1, X22
	0x035A7964 MOV X2, X31
	0x035A7968 BL 0x35FB944
	0x035A796C MOV X0, X20
	0x035A7970 MOV X1, X21
	0x035A7974 MOV X2, X31
	0x035A7978 BL 0x35FBFE8
	0x035A797C MOV X0, X20
	0x035A7980 MOV X1, X31
	0x035A7984 BL 0x35F6748
	0x035A7988 CBZ X0, 0x35A80FC
	0x035A798C MOV X1, X31
	0x035A7990 BL 0x3604634
	0x035A7994 ADRP X8, 0xB4F000
	0x035A7998 LDR X8, [X8 + 0x1C0]
	0x035A799C MOV X21, X0
	0x035A79A0 LDR X0, [X8]
	0x035A79A4 BL 0x1C16F10
	0x035A79A8 ADRP X8, 0xB4F000
	0x035A79AC LDR X8, [X8 + 0x208]
	0x035A79B0 MOV X22, X0
	0x035A79B4 LDR X1, [X8]
	0x035A79B8 MOV X2, X31
	0x035A79BC BL 0x3605BA4
	0x035A79C0 CBZ X21, 0x35A8100
	0x035A79C4 ADRP X8, 0xB4F000
	0x035A79C8 LDR X8, [X8 + 0x170]
	0x035A79CC LDR X2, [X8]
	0x035A79D0 MOV X0, X21
	0x035A79D4 MOV X1, X22
	0x035A79D8 BL 0x2DE064C
	0x035A79DC LDR X21, [X19 + 0x30]
	0x035A79E0 CBZ X21, 0x35A8104
	0x035A79E4 ADRP X10, 0xB4F000
	0x035A79E8 LDR X8, [X21]
	0x035A79EC LDR X10, [X10 + 0x190]
	0x035A79F0 LDRH W9, [X8 + 0x12E]
	0x035A79F4 LDR X1, [X10]
	0x035A79F8 CBZ X9, 0x35A7A1C
	0x035A79FC LDR X10, [X8 + 0xB0]
	0x035A7A00 ADD X10, X10, 0x8
	0x035A7A04 LDUR X11, [X10 - 0x8]
	0x035A7A08 CMP X11, X1
	0x035A7A0C B.EQ 0x35A7A2C
	0x035A7A10 SUBS X9, X9, 0x1
	0x035A7A14 ADD X10, X10, 0x10
	0x035A7A18 B.NE 0x35A7A04
	0x035A7A1C MOV X0, X21
	0x035A7A20 MOV W2, W31
	0x035A7A24 BL 0x1C5C788
	0x035A7A28 B 0x35A7A38
	0x035A7A2C LDRSW X9, [X10]
	0x035A7A30 ADD X8, X8, X9, 0x4, LSL
	0x035A7A34 ADD X0, X8, 0x138
	0x035A7A38 LDP X8, X1, [X0]
	0x035A7A3C MOV X0, X21
	0x035A7A40 BLR X8
	0x035A7A44 MOV X22, X0
	0x035A7A48 CBZ X0, 0x35A8108
	0x035A7A4C ADRP X25, 0xB4C000
	0x035A7A50 ADRP X28, 0xB4F000
	0x035A7A54 LDR X25, [X25 + 0xE18]
	0x035A7A58 LDR X28, [X28 + 0x198]
	0x035A7A5C LDR X8, [X22]
	0x035A7A60 LDR X1, [X25]
	0x035A7A64 LDRH W9, [X8 + 0x12E]
	0x035A7A68 CBZ X9, 0x35A7A8C
	0x035A7A6C LDR X10, [X8 + 0xB0]
	0x035A7A70 ADD X10, X10, 0x8
	0x035A7A74 LDUR X11, [X10 - 0x8]
	0x035A7A78 CMP X11, X1
	0x035A7A7C B.EQ 0x35A7A9C
	0x035A7A80 SUBS X9, X9, 0x1
	0x035A7A84 ADD X10, X10, 0x10
	0x035A7A88 B.NE 0x35A7A74
	0x035A7A8C MOV X0, X22
	0x035A7A90 MOV W2, W31
	0x035A7A94 BL 0x1C5C788
	0x035A7A98 B 0x35A7AA8
	0x035A7A9C LDRSW X9, [X10]
	0x035A7AA0 ADD X8, X8, X9, 0x4, LSL
	0x035A7AA4 ADD X0, X8, 0x138
	0x035A7AA8 LDP X8, X1, [X0]
	0x035A7AAC MOV X0, X22

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0xE3A000
	009 Move W8, [X22+27]
	010 Move X19, X2
	011 Move X20, X1
	012 Move X21, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0xB91000
	018 Move X0, [X0+1472]
	019 Call 0x1C17CF4
	020 Move X0, 0xB50000
	021 Move X0, [X0+376]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X22+27], W8
	025 Compare X20, 0
	026 JumpIfEqual {113}
	027 Move X23, 0xB50000
	028 Move X23, [X23+376]
	029 Move X22, [X20+24]
	030 Move X0, [X23]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {35}
	034 Call 0x1C17DFC
	035 Move X24, 0xE32000
	036 Move W8, [X24+2361]
	037 Compare W8, 0
	038 JumpIfNotEqual {44}
	039 Move X0, 0xB50000
	040 Move X0, [X0+376]
	041 Call 0x1C17CF4
	042 Move W8, 1
	043 Move [X24+2361], W8
	044 Move X0, [X23]
	045 Move W8, [X0+224]
	046 Compare W8, 0
	047 JumpIfNotEqual {50}
	048 Call 0x1C17DFC
	049 Move X0, [X23]
	050 Move X8, [X0+184]
	051 Move X0, X22
	052 Move X2, X31
	053 Move X1, [X8+32]
	054 Call HttpMethod.op_Equality, X0, X1
	055 Move TEMP, X0
	056 And TEMP, TEMP, 1
	057 Compare TEMP, 1
	058 JumpIfEqual {89}
	059 Move X0, [X23]
	060 Move X22, [X20+24]
	061 Move W8, [X0+224]
	062 Compare W8, 0
	063 JumpIfNotEqual {65}
	064 Call 0x1C17DFC
	065 Move X24, 0xE32000
	066 Move W8, [X24+2362]
	067 Compare W8, 0
	068 JumpIfNotEqual {74}
	069 Move X0, 0xB50000
	070 Move X0, [X0+376]
	071 Call 0x1C17CF4
	072 Move W8, 1
	073 Move [X24+2362], W8
	074 Move X0, [X23]
	075 Move W8, [X0+224]
	076 Compare W8, 0
	077 JumpIfNotEqual {80}
	078 Call 0x1C17DFC
	079 Move X0, [X23]
	080 Move X8, [X0+184]
	081 Move X0, X22
	082 Move X2, X31
	083 Move X1, [X8+40]
	084 Call HttpMethod.op_Equality, X0, X1
	085 Move TEMP, X0
	086 And TEMP, TEMP, 1
	087 Compare TEMP, 1
	088 JumpIfNotEqual {100}
	089 Move X22, [X20+56]
	090 Compare X22, 0
	091 JumpIfEqual {100}
	092 Move X8, 0xB91000
	093 Move X8, [X8+1472]
	094 Move X0, [X8]
	095 Call 0x1C17F10
	096 Move X1, X22
	097 Move X23, X0
	098 Call GZipContent..ctor, X0, X1
	099 Move [X20+56], X23
	100 Move X0, X21
	101 Move X1, X20
	102 Move X2, X19
	103 Move X20, [X31+48]
	104 Move X19, [X31+56]
	105 Move X22, [X31+32]
	106 Move X21, [X31+40]
	107 Move X24, [X31+16]
	108 Move X23, [X31+24]
	109 Move X3, X31
	110 Move X30, [X31+64]
	111 Call DelegatingHandler.SendAsync, X0, X1, X2
	112 Return X0
	113 Call 0x1C17F20

