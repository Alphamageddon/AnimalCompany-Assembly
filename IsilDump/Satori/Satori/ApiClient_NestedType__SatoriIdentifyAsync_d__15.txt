Type: Satori.ApiClient/<SatoriIdentifyAsync>d__15

Method: System.Void MoveNext()

Disassembly:
	0x0359D5F0 ADRP X0, 0xB56000
	0x0359D5F4 LDR X0, [X0 + 0x7D0]
	0x0359D5F8 BL 0x1C16D08
	0x0359D5FC LDR X8, [X20]
	0x0359D600 LDR X1, [X8]
	0x0359D604 BL 0x1C17270
	0x0359D608 TBZ X0, 0x0, 0x359D648
	0x0359D60C LDR X20, [X20]
	0x0359D610 BL 0x3EB1AE0
	0x0359D614 MOVN W8, 0x1
	0x0359D618 STR W8, [X19], #0x8
	0x0359D61C ADRP X0, 0xB59000
	0x0359D620 LDR X0, [X0 + 0x280]
	0x0359D624 BL 0x1C16D08
	0x0359D628 LDR W8, [X0 + 0xE0]
	0x0359D62C CBNZ W8, 0x359D634
	0x0359D630 BL 0x1C16DFC
	0x0359D634 MOV X0, X19
	0x0359D638 MOV X1, X20
	0x0359D63C MOV X2, X31
	0x0359D640 BL 0x32C4908
	0x0359D644 B 0x359D54C
	0x0359D648 MOVZ W0, 0x8
	0x0359D64C BL 0x3EB1AF0
	0x0359D650 LDR X8, [X20]
	0x0359D654 STR X8, [X0]
	0x0359D658 ADRP X1, 0x917000
	0x0359D65C ADD X1, X1, 0xE58
	0x0359D660 MOV X2, X31
	0x0359D664 BL 0x3EB1B00
	0x0359D668 MOV X20, X0
	0x0359D66C BL 0x3EB1AE0
	0x0359D670 MOV X0, X20
	0x0359D674 BL 0x1D2C690
	0x0359D678 BL 0x1990590
	0x0359D67C STR X30, [X31 - 0x30]!
	0x0359D680 STP X22, X21, [X31 + 0x10]
	0x0359D684 STP X20, X19, [X31 + 0x20]
	0x0359D688 ADRP X21, 0xE42000
	0x0359D68C ADRP X22, 0xB59000
	0x0359D690 LDRB W8, [X21 + 0xFDE]
	0x0359D694 LDR X22, [X22 + 0x280]
	0x0359D698 MOV X19, X1
	0x0359D69C MOV X20, X0
	0x0359D6A0 TBNZ X8, 0x0, 0x359D6B8
	0x0359D6A4 ADRP X0, 0xB59000
	0x0359D6A8 LDR X0, [X0 + 0x280]
	0x0359D6AC BL 0x1C16CF4
	0x0359D6B0 MOVZ W8, 0x1
	0x0359D6B4 STRB W8, [X21 + 0xFDE]
	0x0359D6B8 LDR X0, [X22]
	0x0359D6BC LDR W8, [X0 + 0xE0]
	0x0359D6C0 CBNZ W8, 0x359D6C8
	0x0359D6C4 BL 0x1C16DFC
	0x0359D6C8 ADD X0, X20, 0x8
	0x0359D6CC MOV X1, X19
	0x0359D6D0 LDP X20, X19, [X31 + 0x20]
	0x0359D6D4 LDP X22, X21, [X31 + 0x10]
	0x0359D6D8 MOV X2, X31
	0x0359D6DC LDR X30, [X31], #0x30
	0x0359D6E0 B 0x32C477C
	0x0359D6E4 SUB X31, X31, 0x70
	0x0359D6E8 STR X30, [X31 + 0x10]
	0x0359D6EC STP X28, X27, [X31 + 0x20]
	0x0359D6F0 STP X26, X25, [X31 + 0x30]
	0x0359D6F4 STP X24, X23, [X31 + 0x40]
	0x0359D6F8 STP X22, X21, [X31 + 0x50]
	0x0359D6FC STP X20, X19, [X31 + 0x60]
	0x0359D700 ADRP X20, 0xE42000
	0x0359D704 LDRB W8, [X20 + 0xFDF]
	0x0359D708 MOV X19, X0
	0x0359D70C TBNZ X8, 0x0, 0x359D7F0
	0x0359D710 ADRP X0, 0xB9A000
	0x0359D714 LDR X0, [X0 + 0x220]
	0x0359D718 BL 0x1C16CF4
	0x0359D71C ADRP X0, 0xB59000
	0x0359D720 LDR X0, [X0 + 0x280]
	0x0359D724 BL 0x1C16CF4
	0x0359D728 ADRP X0, 0xB5F000
	0x0359D72C LDR X0, [X0 + 0x8D8]
	0x0359D730 BL 0x1C16CF4
	0x0359D734 ADRP X0, 0xB57000
	0x0359D738 LDR X0, [X0 + 0x810]
	0x0359D73C BL 0x1C16CF4
	0x0359D740 ADRP X0, 0xB57000
	0x0359D744 LDR X0, [X0 + 0x6C0]
	0x0359D748 BL 0x1C16CF4
	0x0359D74C ADRP X0, 0xB57000
	0x0359D750 LDR X0, [X0 + 0x6D0]
	0x0359D754 BL 0x1C16CF4
	0x0359D758 ADRP X0, 0xB9A000
	0x0359D75C LDR X0, [X0 + 0x58]
	0x0359D760 BL 0x1C16CF4
	0x0359D764 ADRP X0, 0xB59000
	0x0359D768 LDR X0, [X0 + 0x1E0]
	0x0359D76C BL 0x1C16CF4
	0x0359D770 ADRP X0, 0xB59000
	0x0359D774 LDR X0, [X0 + 0x1F0]
	0x0359D778 BL 0x1C16CF4
	0x0359D77C ADRP X0, 0xB59000
	0x0359D780 LDR X0, [X0 + 0x1F8]
	0x0359D784 BL 0x1C16CF4
	0x0359D788 ADRP X0, 0xB5F000
	0x0359D78C LDR X0, [X0 + 0x3A0]
	0x0359D790 BL 0x1C16CF4
	0x0359D794 ADRP X0, 0xB58000
	0x0359D798 LDR X0, [X0 + 0xA28]
	0x0359D79C BL 0x1C16CF4
	0x0359D7A0 ADRP X0, 0xB7F000
	0x0359D7A4 LDR X0, [X0 + 0x4E0]
	0x0359D7A8 BL 0x1C16CF4
	0x0359D7AC ADRP X0, 0xB9A000
	0x0359D7B0 LDR X0, [X0 + 0xD0]
	0x0359D7B4 BL 0x1C16CF4
	0x0359D7B8 ADRP X0, 0xB91000
	0x0359D7BC LDR X0, [X0 + 0x7D0]
	0x0359D7C0 BL 0x1C16CF4
	0x0359D7C4 ADRP X0, 0xB92000
	0x0359D7C8 LDR X0, [X0 + 0x2E8]
	0x0359D7CC BL 0x1C16CF4
	0x0359D7D0 ADRP X0, 0xB91000
	0x0359D7D4 LDR X0, [X0 + 0x7D8]
	0x0359D7D8 BL 0x1C16CF4
	0x0359D7DC ADRP X0, 0xB56000
	0x0359D7E0 LDR X0, [X0 + 0x988]
	0x0359D7E4 BL 0x1C16CF4
	0x0359D7E8 MOVZ W8, 0x1
	0x0359D7EC STRB W8, [X20 + 0xFDF]
	0x0359D7F0 STR X31, [X31 + 0x18]
	0x0359D7F4 ADRP X28, 0xB59000
	0x0359D7F8 LDR W8, [X19]
	0x0359D7FC LDR X28, [X28 + 0x280]
	0x0359D800 CBZ W8, 0x359DA2C
	0x0359D804 LDR X21, [X19 + 0x20]
	0x0359D808 CBZ X21, 0x359DB44
	0x0359D80C LDR X8, [X19 + 0x28]
	0x0359D810 CBZ X8, 0x359DB8C
	0x0359D814 ADRP X8, 0xB58000
	0x0359D818 LDR X8, [X8 + 0xA28]
	0x0359D81C LDR X0, [X8]
	0x0359D820 ADRP X8, 0xB9A000
	0x0359D824 LDR X8, [X8 + 0xD0]
	0x0359D828 LDR X25, [X19 + 0x30]
	0x0359D82C LDR W9, [X0 + 0xE0]
	0x0359D830 LDR X20, [X8]
	0x0359D834 CBNZ W9, 0x359D83C
	0x0359D838 BL 0x1C16DFC
	0x0359D83C MOV X0, X21
	0x0359D840 MOV X1, X31
	0x0359D844 BL 0x3624D20
	0x0359D848 CBZ X20, 0x359DBD4
	0x0359D84C ADRP X8, 0xB92000
	0x0359D850 LDR X8, [X8 + 0x2E8]
	0x0359D854 MOV X2, X0
	0x0359D858 LDR X1, [X8]
	0x0359D85C MOV X0, X20
	0x0359D860 MOV X3, X31
	0x0359D864 BL 0x32293BC
	0x0359D868 CBZ X25, 0x359DBD8
	0x0359D86C MOV X21, X0
	0x0359D870 LDR X0, [X25 + 0x20]
	0x0359D874 CBZ X0, 0x359DBDC
	0x0359D878 ADRP X8, 0xB56000
	0x0359D87C LDR X8, [X8 + 0x988]
	0x0359D880 LDR X20, [X8]
	0x0359D884 MOV X1, X31
	0x0359D888 BL 0x361B448
	0x0359D88C ADRP X8, 0xB5F000
	0x0359D890 LDR X8, [X8 + 0x8D8]
	0x0359D894 MOV X22, X0
	0x0359D898 LDR X0, [X8]
	0x0359D89C MOVZ W1, 0x1
	0x0359D8A0 BL 0x1C16D6C
	0x0359D8A4 MOV X1, X0
	0x0359D8A8 CBZ X1, 0x359DBE0
	0x0359D8AC LDR W8, [X1 + 0x18]
	0x0359D8B0 CBZ W8, 0x359DBE4
	0x0359D8B4 MOVZ W8, 0x2F
	0x0359D8B8 STRH W8, [X1 + 0x20]
	0x0359D8BC CBZ X22, 0x359DBE8
	0x0359D8C0 MOV X0, X22
	0x0359D8C4 MOV X2, X31
	0x0359D8C8 BL 0x322BC58
	0x0359D8CC MOV X1, X21
	0x0359D8D0 MOV X2, X31
	0x0359D8D4 BL 0x321B938
	0x0359D8D8 ADRP X8, 0xB5F000
	0x0359D8DC LDR X8, [X8 + 0x3A0]
	0x0359D8E0 MOV X22, X0
	0x0359D8E4 LDR X23, [X25 + 0x20]
	0x0359D8E8 LDR X0, [X8]
	0x0359D8EC BL 0x1C16F10
	0x0359D8F0 MOV X21, X0
	0x0359D8F4 MOV X1, X23
	0x0359D8F8 MOV X2, X31
	0x0359D8FC BL 0x36281F8
	0x0359D900 CBZ X21, 0x359DBEC
	0x0359D904 MOV X0, X21
	0x0359D908 MOV X1, X22
	0x0359D90C MOV X2, X31
	0x0359D910 BL 0x36288CC
	0x0359D914 MOV X0, X21
	0x0359D918 MOV X1, X20
	0x0359D91C MOV X2, X31
	0x0359D920 BL 0x3628980
	0x0359D924 MOV X0, X21
	0x0359D928 MOV X1, X31
	0x0359D92C BL 0x3628A38
	0x0359D930 ADRP X8, 0xB7F000
	0x0359D934 ADRP X9, 0xB57000
	0x0359D938 LDR X8, [X8 + 0x4E0]
	0x0359D93C LDR X9, [X9 + 0x6D0]
	0x0359D940 MOV X20, X0
	0x0359D944 LDR X21, [X8]
	0x0359D948 LDR X0, [X9]
	0x0359D94C BL 0x1C16F10
	0x0359D950 ADRP X8, 0xB57000
	0x0359D954 LDR X8, [X8 + 0x6C0]
	0x0359D958 MOV X22, X0
	0x0359D95C LDR X1, [X8]
	0x0359D960 BL 0x2AA4804
	0x0359D964 ADRP X8, 0xB91000
	0x0359D968 LDR X8, [X8 + 0x7D8]
	0x0359D96C LDR X1, [X19 + 0x38]
	0x0359D970 LDR X0, [X8]
	0x0359D974 MOV X2, X31
	0x0359D978 BL 0x321B938
	0x0359D97C CBZ X22, 0x359DBF0
	0x0359D980 ADRP X8, 0xB91000
	0x0359D984 LDR X8, [X8 + 0x7D0]
	0x0359D988 ADRP X9, 0xB57000
	0x0359D98C LDR X9, [X9 + 0x810]
	0x0359D990 MOV X2, X0
	0x0359D994 LDR X1, [X8]
	0x0359D998 LDR X3, [X9]
	0x0359D99C MOV X0, X22
	0x0359D9A0 BL 0x2AA5098
	0x0359D9A4 LDR X0, [X19 + 0x28]
	0x0359D9A8 BL 0x3597D7C
	0x0359D9AC MOV X23, X0
	0x0359D9B0 MOV X0, X31
	0x0359D9B4 BL 0x3241948
	0x0359D9B8 CBZ X0, 0x359DBF4
	0x0359D9BC LDR X8, [X0]
	0x0359D9C0 LDR X9, [X8 + 0x268]
	0x0359D9C4 LDR X2, [X8 + 0x270]
	0x0359D9C8 MOV X1, X23
	0x0359D9CC BLR X9
	0x0359D9D0 LDR X24, [X25 + 0x10]
	0x0359D9D4 CBZ X24, 0x359DBF8
	0x0359D9D8 ADRP X10, 0xB9A000
	0x0359D9DC LDR X10, [X10 + 0x58]
	0x0359D9E0 LDR X8, [X24]
	0x0359D9E4 LDR W26, [X25 + 0x18]
	0x0359D9E8 LDP X27, X25, [X19 + 0x40]
	0x0359D9EC LDR X1, [X10]
	0x0359D9F0 LDRH W9, [X8 + 0x12E]
	0x0359D9F4 MOV X23, X0
	0x0359D9F8 CBZ X9, 0x359DA1C
	0x0359D9FC LDR X10, [X8 + 0xB0]
	0x0359DA00 ADD X10, X10, 0x8
	0x0359DA04 LDUR X11, [X10 - 0x8]
	0x0359DA08 CMP X11, X1
	0x0359DA0C B.EQ 0x359DA44
	0x0359DA10 SUBS X9, X9, 0x1
	0x0359DA14 ADD X10, X10, 0x10
	0x0359DA18 B.NE 0x359DA04
	0x0359DA1C MOVZ W2, 0x3
	0x0359DA20 MOV X0, X24
	0x0359DA24 BL 0x1C5C788
	0x0359DA28 B 0x359DA54
	0x0359DA2C LDR X8, [X19 + 0x50]
	0x0359DA30 MOVN W9, 0x0
	0x0359DA34 STR X8, [X31 + 0x18]
	0x0359DA38 STR X31, [X19 + 0x50]
	0x0359DA3C STR W9, [X19]
	0x0359DA40 B 0x359DAB0
	0x0359DA44 LDR W9, [X10]
	0x0359DA48 ADD W9, W9, 0x3
	0x0359DA4C ADD X8, X8, W9, 0x4, SXTW
	0x0359DA50 ADD X0, X8, 0x138
	0x0359DA54 LDP X8, X9, [X0]
	0x0359DA58 MOV X0, X24
	0x0359DA5C MOV X1, X21
	0x0359DA60 MOV X2, X20
	0x0359DA64 MOV X3, X22
	0x0359DA68 MOV X4, X23
	0x0359DA6C MOV W5, W26
	0x0359DA70 MOV X6, X27
	0x0359DA74 MOV X7, X25
	0x0359DA78 STR X9, [X31]
	0x0359DA7C BLR X8
	0x0359DA80 CBZ X0, 0x359DBFC
	0x0359DA84 ADRP X8, 0xB59000
	0x0359DA88 LDR X8, [X8 + 0x1F8]
	0x0359DA8C LDR X1, [X8]
	0x0359DA90 BL 0x269F5D0
	0x0359DA94 ADRP X8, 0xB59000
	0x0359DA98 LDR X8, [X8 + 0x1F0]
	0x0359DA9C STR X0, [X31 + 0x18]
	0x0359DAA0 LDR X1, [X8]
	0x0359DAA4 ADD X0, X31, 0x18
	0x0359DAA8 BL 0x2677430
	0x0359DAAC TBZ X0, 0x0, 0x359DAEC
	0x0359DAB0 ADRP X8, 0xB59000
	0x0359DAB4 LDR X8, [X8 + 0x1E0]
	0x0359DAB8 ADD X0, X31, 0x18
	0x0359DABC LDR X1, [X8]
	0x0359DAC0 BL 0x2677474
	0x0359DAC4 MOVN W8, 0x1
	0x0359DAC8 STR W8, [X19], #0x8
	0x0359DACC LDR X0, [X28]
	0x0359DAD0 LDR W8, [X0 + 0xE0]
	0x0359DAD4 CBNZ W8, 0x359DADC
	0x0359DAD8 BL 0x1C16DFC
	0x0359DADC MOV X0, X19
	0x0359DAE0 MOV X1, X31
	0x0359DAE4 BL 0x32C4864
	0x0359DAE8 B 0x359DB24
	0x0359DAEC STR W31, [X19]
	0x0359DAF0 LDR X8, [X31 + 0x18]
	0x0359DAF4 STR X8, [X19 + 0x50]
	0x0359DAF8 LDR X0, [X28]
	0x0359DAFC LDR W8, [X0 + 0xE0]
	0x0359DB00 CBNZ W8, 0x359DB08
	0x0359DB04 BL 0x1C16DFC
	0x0359DB08 ADRP X8, 0xB9A000
	0x0359DB0C LDR X8, [X8 + 0x220]
	0x0359DB10 ADD X0, X19, 0x8
	0x0359DB14 LDR X3, [X8]
	0x0359DB18 ADD X1, X31, 0x18
	0x0359DB1C MOV X2, X19
	0x0359DB20 BL 0x2187E14
	0x0359DB24 LDP X20, X19, [X31 + 0x60]
	0x0359DB28 LDP X22, X21, [X31 + 0x50]
	0x0359DB2C LDP X24, X23, [X31 + 0x40]
	0x0359DB30 LDP X26, X25, [X31 + 0x30]
	0x0359DB34 LDP X28, X27, [X31 + 0x20]
	0x0359DB38 LDR X30, [X31 + 0x10]
	0x0359DB3C ADD X31, X31, 0x70
	0x0359DB40 RET
	0x0359DB44 ADRP X0, 0xB5E000
	0x0359DB48 LDR X0, [X0 + 0x578]
	0x0359DB4C BL 0x1C16D08
	0x0359DB50 BL 0x1C16F10
	0x0359DB54 MOV X20, X0
	0x0359DB58 ADRP X0, 0xB92000
	0x0359DB5C LDR X0, [X0 + 0x2F0]
	0x0359DB60 BL 0x1C16D08
	0x0359DB64 MOV X1, X0
	0x0359DB68 MOV X0, X20
	0x0359DB6C MOV X2, X31
	0x0359DB70 BL 0x3314A68
	0x0359DB74 ADRP X0, 0xB9A000
	0x0359DB78 LDR X0, [X0 + 0x228]
	0x0359DB7C BL 0x1C16D08
	0x0359DB80 MOV X1, X0
	0x0359DB84 MOV X0, X20
	0x0359DB88 BL 0x1C16DEC
	0x0359DB8C ADRP X0, 0xB5E000
	0x0359DB90 LDR X0, [X0 + 0x578]
	0x0359DB94 BL 0x1C16D08
	0x0359DB98 BL 0x1C16F10
	0x0359DB9C MOV X20, X0
	0x0359DBA0 ADRP X0, 0xB91000

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X30
	003 Move [X31+32], X28
	004 Move [X31+40], X27
	005 Move [X31+48], X26
	006 Move [X31+56], X25
	007 Move [X31+64], X24
	008 Move [X31+72], X23
	009 Move [X31+80], X22
	010 Move [X31+88], X21
	011 Move [X31+96], X20
	012 Move [X31+104], X19
	013 Move X20, 0xE43000
	014 Move W8, [X20+4057]
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {76}
	020 Move X0, 0xB9B000
	021 Move X0, [X0+456]
	022 Call 0x1C17CF4
	023 Move X0, 0xB9B000
	024 Move X0, [X0+80]
	025 Call 0x1C17CF4
	026 Move X0, 0xB9A000
	027 Move X0, [X0+3912]
	028 Call 0x1C17CF4
	029 Move X0, 0xB60000
	030 Move X0, [X0+2264]
	031 Call 0x1C17CF4
	032 Move X0, 0xB58000
	033 Move X0, [X0+2064]
	034 Call 0x1C17CF4
	035 Move X0, 0xB58000
	036 Move X0, [X0+1728]
	037 Call 0x1C17CF4
	038 Move X0, 0xB58000
	039 Move X0, [X0+1744]
	040 Call 0x1C17CF4
	041 Move X0, 0xB9B000
	042 Move X0, [X0+88]
	043 Call 0x1C17CF4
	044 Move X0, 0xB9B000
	045 Move X0, [X0+96]
	046 Call 0x1C17CF4
	047 Move X0, 0xB5A000
	048 Move X0, [X0+480]
	049 Call 0x1C17CF4
	050 Move X0, 0xB5A000
	051 Move X0, [X0+496]
	052 Call 0x1C17CF4
	053 Move X0, 0xB5A000
	054 Move X0, [X0+504]
	055 Call 0x1C17CF4
	056 Move X0, 0xB60000
	057 Move X0, [X0+928]
	058 Call 0x1C17CF4
	059 Move X0, 0xB80000
	060 Move X0, [X0+1248]
	061 Call 0x1C17CF4
	062 Move X0, 0xB9B000
	063 Move X0, [X0+464]
	064 Call 0x1C17CF4
	065 Move X0, 0xB92000
	066 Move X0, [X0+2000]
	067 Call 0x1C17CF4
	068 Move X0, 0xB92000
	069 Move X0, [X0+2008]
	070 Call 0x1C17CF4
	071 Move X0, 0xB57000
	072 Move X0, [X0+2440]
	073 Call 0x1C17CF4
	074 Move W8, 1
	075 Move [X20+4057], W8
	076 Move [X31+24], X31
	077 Move X28, 0xB9A000
	078 Move W8, [X19]
	079 Move X28, [X28+3912]
	080 Compare W8, 0
	081 JumpIfEqual {209}
	082 Move X8, [X19+32]
	083 Compare X8, 0
	084 JumpIfEqual {301}
	085 Move X25, [X19+40]
	086 Compare X25, 0
	087 JumpIfEqual {319}
	088 Move X0, [X25+32]
	089 Compare X0, 0
	090 JumpIfEqual {320}
	091 Move X8, 0xB9B000
	092 Move X9, 0xB57000
	093 Move X8, [X8+464]
	094 Move X9, [X9+2440]
	095 Move X21, [X8]
	096 Move X20, [X9]
	097 Move X1, X31
	098 Call Uri.get_AbsolutePath, X0
	099 Move X8, 0xB60000
	100 Move X8, [X8+2264]
	101 Move X22, X0
	102 Move X0, [X8]
	103 Move W1, 1
	104 Call 0x1C17D6C
	105 Move X1, X0
	106 Compare X1, 0
	107 JumpIfEqual {321}
	108 Move W8, [X1+24]
	109 Compare W8, 0
	110 JumpIfEqual {322}
	111 Move W8, 47
	112 NotImplemented "Instruction STRH not yet implemented."
	113 Compare X22, 0
	114 JumpIfEqual {323}
	115 Move X0, X22
	116 Move X2, X31
	117 Call String.TrimEnd, X0, X1
	118 Move X1, X21
	119 Move X2, X31
	120 Call String.Concat, X0, X1
	121 Move X8, 0xB60000
	122 Move X8, [X8+928]
	123 Move X22, X0
	124 Move X23, [X25+32]
	125 Move X0, [X8]
	126 Call 0x1C17F10
	127 Move X21, X0
	128 Move X1, X23
	129 Move X2, X31
	130 Call UriBuilder..ctor, X0, X1
	131 Compare X21, 0
	132 JumpIfEqual {324}
	133 Move X0, X21
	134 Move X1, X22
	135 Move X2, X31
	136 Call UriBuilder.set_Path, X0, X1
	137 Move X0, X21
	138 Move X1, X20
	139 Move X2, X31
	140 Call UriBuilder.set_Query, X0, X1
	141 Move X0, X21
	142 Move X1, X31
	143 Call UriBuilder.get_Uri, X0
	144 Move X8, 0xB80000
	145 Move X9, 0xB58000
	146 Move X8, [X8+1248]
	147 Move X9, [X9+1744]
	148 Move X20, X0
	149 Move X21, [X8]
	150 Move X0, [X9]
	151 Call 0x1C17F10
	152 Move X8, 0xB58000
	153 Move X8, [X8+1728]
	154 Move X22, X0
	155 Move X1, [X8]
	156 Call Dictionary`2<Object, Object>..ctor, X0
	157 Move X8, 0xB92000
	158 Move X8, [X8+2008]
	159 Move X1, [X19+48]
	160 Move X0, [X8]
	161 Move X2, X31
	162 Call String.Concat, X0, X1
	163 Compare X22, 0
	164 JumpIfEqual {325}
	165 Move X8, 0xB92000
	166 Move X8, [X8+2000]
	167 Move X9, 0xB58000
	168 Move X9, [X9+2064]
	169 Move X2, X0
	170 Move X1, [X8]
	171 Move X3, [X9]
	172 Move X0, X22
	173 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	174 Move X0, [X19+32]
	175 Call JsonWriter.ToJson, X0
	176 Move X23, X0
	177 Move X0, X31
	178 Call Encoding.get_UTF8
	179 Compare X0, 0
	180 JumpIfEqual {326}
	181 Move X8, [X0]
	182 Move X9, [X8+616]
	183 Move X2, [X8+624]
	184 Move X1, X23
	185 NotImplemented "Instruction BLR not yet implemented."
	186 Move X24, [X25+16]
	187 Compare X24, 0
	188 JumpIfEqual {327}
	189 Move X10, 0xB9B000
	190 Move X10, [X10+88]
	191 Move X8, [X24]
	192 Move W26, [X25+24]
	193 Move X27, [X19+56]
	194 Move X25, [X19+64]
	195 Move X1, [X10]
	196 NotImplemented "Instruction LDRH not yet implemented."
	197 Move X23, X0
	198 Compare X9, 0
	199 JumpIfEqual {206}
	200 Move X10, [X8+176]
	201 Add X10, X10, 8
	202 NotImplemented "Instruction LDUR not yet implemented."
	203 NotImplemented "Instruction CMP not yet implemented."
	204 Subtract X9, X9, 1
	205 Add X10, X10, 16
	206 Move W2, 3
	207 Move X0, X24
	208 Call 0x1C5D788
	209 Move X8, [X19+72]
	210 Move TEMP, 0
	211 Not TEMP
	212 Move W9, TEMP
	213 Move [X31+24], X8
	214 Move [X19+72], X31
	215 Move [X19], W9
	216 Move W9, [X10]
	217 Add W9, W9, 3
	218 Add X8, X8, W9
	219 Add X0, X8, 312
	220 Move X8, [X0]
	221 Move X9, [X0+8]
	222 Move X0, X24
	223 Move X1, X21
	224 Move X2, X20
	225 Move X3, X22
	226 Move X4, X23
	227 Move W5, W26
	228 Move X6, X27
	229 Move X7, X25
	230 Move [X31], X9
	231 NotImplemented "Instruction BLR not yet implemented."
	232 Compare X0, 0
	233 JumpIfEqual {328}
	234 Move X8, 0xB5A000
	235 Move X8, [X8+504]
	236 Move X1, [X8]
	237 Call Task`1<Object>.GetAwaiter, X0
	238 Move X8, 0xB5A000
	239 Move X8, [X8+496]
	240 Move [X31+24], X0
	241 Move X1, [X8]
	242 Add X0, X31, 24
	243 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	244 Move TEMP, X0
	245 And TEMP, TEMP, 1
	246 Compare TEMP, 1
	247 JumpIfNotEqual {273}
	248 Move X8, 0xB5A000
	249 Move X8, [X8+480]
	250 Add X0, X31, 24
	251 Move X1, [X8]
	252 Call TaskAwaiter`1<Object>.GetResult, X0
	253 Move X8, 0xB9B000
	254 Move X8, [X8+96]
	255 Move X1, [X8]
	256 Call 0x22119A8, X0
	257 Move TEMP, 1
	258 Not TEMP
	259 Move W8, TEMP
	260 Move [X19+8], W8
	261 Move X20, X0
	262 Move X0, [X28]
	263 Move X21, 0xB9B000
	264 Move W8, [X0+224]
	265 Move X21, [X21+80]
	266 Compare W8, 0
	267 JumpIfNotEqual {269}
	268 Call 0x1C17DFC
	269 Move X2, [X21]
	270 Move X0, X19
	271 Move X1, X20
	272 Call AsyncTaskMethodBuilder`1<Object>.SetResult, X0, X1
	273 Move [X19], W31
	274 Move X8, [X31+24]
	275 Move [X19+72], X8
	276 Move X0, [X28]
	277 Move W8, [X0+224]
	278 Compare W8, 0
	279 JumpIfNotEqual {281}
	280 Call 0x1C17DFC
	281 Move X8, 0xB9B000
	282 Move X8, [X8+456]
	283 Add X0, X19, 8
	284 Move X3, [X8]
	285 Add X1, X31, 24
	286 Move X2, X19
	287 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	288 Move X20, [X31+96]
	289 Move X19, [X31+104]
	290 Move X22, [X31+80]
	291 Move X21, [X31+88]
	292 Move X24, [X31+64]
	293 Move X23, [X31+72]
	294 Move X26, [X31+48]
	295 Move X25, [X31+56]
	296 Move X28, [X31+32]
	297 Move X27, [X31+40]
	298 Move X30, [X31+16]
	299 Add X31, X31, 112
	300 Return 
	301 Move X0, 0xB5F000
	302 Move X0, [X0+1400]
	303 Call 0x1C17D08
	304 Call 0x1C17F10
	305 Move X20, X0
	306 Move X0, 0xB92000
	307 Move X0, [X0+3016]
	308 Call 0x1C17D08
	309 Move X1, X0
	310 Move X0, X20
	311 Move X2, X31
	312 Call ArgumentException..ctor, X0, X1
	313 Move X0, 0xB9B000
	314 Move X0, [X0+472]
	315 Call 0x1C17D08
	316 Move X1, X0
	317 Move X0, X20
	318 Call 0x1C17DEC
	319 Call 0x1C17F20
	320 Call 0x1C17F20
	321 Call 0x1C17F20
	322 Call 0x1C17F28
	323 Call 0x1C17F20
	324 Call 0x1C17F20
	325 Call 0x1C17F20
	326 Call 0x1C17F20
	327 Call 0x1C17F20
	328 Call 0x1C17F20
	329 Move X20, X0
	330 NotImplemented "Instruction CMP not yet implemented."
	331 Move X0, X20
	332 Call 0x3EB2AD0
	333 Move X20, X0
	334 Move X0, 0xB57000
	335 Move X0, [X0+2000]
	336 Call 0x1C17D08
	337 Move X8, [X20]
	338 Move X1, [X8]
	339 Call 0x1C18270
	340 Move TEMP, X0
	341 And TEMP, TEMP, 1
	342 Compare TEMP, 1
	343 JumpIfNotEqual {364}
	344 Move X20, [X20]
	345 Call 0x3EB2AE0
	346 Move TEMP, 1
	347 Not TEMP
	348 Move W8, TEMP
	349 Move [X19+8], W8
	350 Move X0, 0xB9A000
	351 Move X0, [X0+3912]
	352 Call 0x1C17D08
	353 Move W8, [X0+224]
	354 Compare W8, 0
	355 JumpIfNotEqual {357}
	356 Call 0x1C17DFC
	357 Move X0, 0xB9B000
	358 Move X0, [X0+120]
	359 Call 0x1C17D08
	360 Move X2, X0
	361 Move X0, X19
	362 Move X1, X20
	363 Call AsyncTaskMethodBuilder`1<Object>.SetException, X0, X1
	364 Move W0, 8
	365 Call 0x3EB2AF0
	366 Move X8, [X20]
	367 Move [X0], X8
	368 Move X1, 0x918000
	369 Add X1, X1, 3672
	370 Move X2, X31
	371 Call 0x3EB2B00
	372 Move X20, X0
	373 Call 0x3EB2AE0
	374 Move X0, X20
	375 Call 0x1D2D690
	376 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x0359DBA4 LDR X0, [X0 + 0xBC8]
	0x0359DBA8 BL 0x1C16D08
	0x0359DBAC MOV X1, X0
	0x0359DBB0 MOV X0, X20
	0x0359DBB4 MOV X2, X31
	0x0359DBB8 BL 0x3314A68
	0x0359DBBC ADRP X0, 0xB9A000
	0x0359DBC0 LDR X0, [X0 + 0x228]
	0x0359DBC4 BL 0x1C16D08
	0x0359DBC8 MOV X1, X0
	0x0359DBCC MOV X0, X20
	0x0359DBD0 BL 0x1C16DEC
	0x0359DBD4 BL 0x1C16F20
	0x0359DBD8 BL 0x1C16F20
	0x0359DBDC BL 0x1C16F20
	0x0359DBE0 BL 0x1C16F20
	0x0359DBE4 BL 0x1C16F28
	0x0359DBE8 BL 0x1C16F20
	0x0359DBEC BL 0x1C16F20
	0x0359DBF0 BL 0x1C16F20
	0x0359DBF4 BL 0x1C16F20
	0x0359DBF8 BL 0x1C16F20
	0x0359DBFC BL 0x1C16F20
	0x0359DC00 B 0x359DC70
	0x0359DC04 B 0x359DC70
	0x0359DC08 B 0x359DC70
	0x0359DC0C B 0x359DC70
	0x0359DC10 B 0x359DC70
	0x0359DC14 B 0x359DC70
	0x0359DC18 B 0x359DC70
	0x0359DC1C B 0x359DC70

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xE43000
	007 Move X21, 0xB9A000
	008 Move W8, [X22+4058]
	009 Move X21, [X21+3912]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xB9B000
	017 Move X0, [X0+128]
	018 Call 0x1C17CF4
	019 Move X0, 0xB9A000
	020 Move X0, [X0+3912]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+4058], W8
	024 Move X0, [X21]
	025 Move X21, 0xB9B000
	026 Move W8, [X0+224]
	027 Move X21, [X21+128]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X2, [X21]
	032 Add X0, X20, 8
	033 Move X1, X19
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Call AsyncTaskMethodBuilder`1<Object>.SetStateMachine, X0, X1
	040 Return 

