Type: Satori.ApiClient/<SatoriReadycheckAsync>d__8

Method: System.Void MoveNext()

Disassembly:
	0x0359E1B0 MOV X1, X0
	0x0359E1B4 MOV X0, X20
	0x0359E1B8 BL 0x1C16DEC
	0x0359E1BC BL 0x1C16F20
	0x0359E1C0 BL 0x1C16F20
	0x0359E1C4 BL 0x1C16F20
	0x0359E1C8 BL 0x1C16F28
	0x0359E1CC BL 0x1C16F20
	0x0359E1D0 BL 0x1C16F20
	0x0359E1D4 BL 0x1C16F20
	0x0359E1D8 BL 0x1C16F20
	0x0359E1DC BL 0x1C16F20
	0x0359E1E0 BL 0x1C16F20
	0x0359E1E4 B 0x359E244
	0x0359E1E8 B 0x359E244
	0x0359E1EC B 0x359E244
	0x0359E1F0 B 0x359E244
	0x0359E1F4 B 0x359E244
	0x0359E1F8 B 0x359E244
	0x0359E1FC B 0x359E244
	0x0359E200 B 0x359E244
	0x0359E204 B 0x359E244
	0x0359E208 B 0x359E244
	0x0359E20C B 0x359E244
	0x0359E210 B 0x359E244
	0x0359E214 B 0x359E244
	0x0359E218 B 0x359E244
	0x0359E21C B 0x359E244
	0x0359E220 B 0x359E244
	0x0359E224 B 0x359E244
	0x0359E228 B 0x359E244
	0x0359E22C B 0x359E244
	0x0359E230 B 0x359E244
	0x0359E234 B 0x359E244
	0x0359E238 B 0x359E244
	0x0359E23C B 0x359E244
	0x0359E240 B 0x359E244
	0x0359E244 MOV X20, X0
	0x0359E248 CMP W1, 0x1
	0x0359E24C B.NE 0x359E2DC
	0x0359E250 MOV X0, X20
	0x0359E254 BL 0x3EB1AD0
	0x0359E258 MOV X20, X0
	0x0359E25C ADRP X0, 0xB55000
	0x0359E260 LDR X0, [X0 + 0x7D0]
	0x0359E264 BL 0x1C16D08
	0x0359E268 LDR X8, [X20]
	0x0359E26C LDR X1, [X8]
	0x0359E270 BL 0x1C17270
	0x0359E274 TBZ X0, 0x0, 0x359E2B4
	0x0359E278 LDR X20, [X20]
	0x0359E27C BL 0x3EB1AE0
	0x0359E280 MOVN W8, 0x1
	0x0359E284 STR W8, [X19], #0x8
	0x0359E288 ADRP X0, 0xB58000
	0x0359E28C LDR X0, [X0 + 0x280]
	0x0359E290 BL 0x1C16D08
	0x0359E294 LDR W8, [X0 + 0xE0]
	0x0359E298 CBNZ W8, 0x359E2A0
	0x0359E29C BL 0x1C16DFC
	0x0359E2A0 MOV X0, X19
	0x0359E2A4 MOV X1, X20
	0x0359E2A8 MOV X2, X31
	0x0359E2AC BL 0x32C4908
	0x0359E2B0 B 0x359E154
	0x0359E2B4 MOVZ W0, 0x8
	0x0359E2B8 BL 0x3EB1AF0
	0x0359E2BC LDR X8, [X20]
	0x0359E2C0 STR X8, [X0]
	0x0359E2C4 ADRP X1, 0x916000
	0x0359E2C8 ADD X1, X1, 0xE58
	0x0359E2CC MOV X2, X31
	0x0359E2D0 BL 0x3EB1B00
	0x0359E2D4 MOV X20, X0
	0x0359E2D8 BL 0x3EB1AE0
	0x0359E2DC MOV X0, X20
	0x0359E2E0 BL 0x1D2C690
	0x0359E2E4 BL 0x1990590
	0x0359E2E8 STR X30, [X31 - 0x30]!
	0x0359E2EC STP X22, X21, [X31 + 0x10]
	0x0359E2F0 STP X20, X19, [X31 + 0x20]
	0x0359E2F4 ADRP X21, 0xE41000
	0x0359E2F8 ADRP X22, 0xB58000
	0x0359E2FC LDRB W8, [X21 + 0xFE2]
	0x0359E300 LDR X22, [X22 + 0x280]
	0x0359E304 MOV X19, X1
	0x0359E308 MOV X20, X0
	0x0359E30C TBNZ X8, 0x0, 0x359E324
	0x0359E310 ADRP X0, 0xB58000
	0x0359E314 LDR X0, [X0 + 0x280]
	0x0359E318 BL 0x1C16CF4
	0x0359E31C MOVZ W8, 0x1
	0x0359E320 STRB W8, [X21 + 0xFE2]
	0x0359E324 LDR X0, [X22]
	0x0359E328 LDR W8, [X0 + 0xE0]
	0x0359E32C CBNZ W8, 0x359E334
	0x0359E330 BL 0x1C16DFC
	0x0359E334 ADD X0, X20, 0x8
	0x0359E338 MOV X1, X19
	0x0359E33C LDP X20, X19, [X31 + 0x20]
	0x0359E340 LDP X22, X21, [X31 + 0x10]
	0x0359E344 MOV X2, X31
	0x0359E348 LDR X30, [X31], #0x30
	0x0359E34C B 0x32C477C
	0x0359E350 LDRB W0, [X0 + 0x10]
	0x0359E354 RET
	0x0359E358 LDR X0, [X0 + 0x18]
	0x0359E35C RET
	0x0359E360 LDR W0, [X0 + 0x20]
	0x0359E364 RET
	0x0359E368 LDR X0, [X0 + 0x28]
	0x0359E36C RET
	0x0359E370 LDR X0, [X0 + 0x30]
	0x0359E374 RET
	0x0359E378 LDR W0, [X0 + 0x38]
	0x0359E37C RET
	0x0359E380 STR W1, [X0 + 0x38]
	0x0359E384 RET
	0x0359E388 STP X30, X23, [X31 - 0x30]!
	0x0359E38C STP X22, X21, [X31 + 0x10]
	0x0359E390 STP X20, X19, [X31 + 0x20]
	0x0359E394 MOV X22, X1
	0x0359E398 MOV X23, X0
	0x0359E39C MOV W0, W31
	0x0359E3A0 MOV W1, W31
	0x0359E3A4 MOV X19, X4
	0x0359E3A8 MOV W20, W3
	0x0359E3AC MOV X21, X2
	0x0359E3B0 BL 0x359E3E0
	0x0359E3B4 MOV X1, X22
	0x0359E3B8 MOV X2, X21
	0x0359E3BC MOV W3, W20
	0x0359E3C0 MOV X4, X19
	0x0359E3C4 LDP X20, X19, [X31 + 0x20]
	0x0359E3C8 LDP X22, X21, [X31 + 0x10]
	0x0359E3CC MOVZ W6, 0x1
	0x0359E3D0 MOV X5, X0
	0x0359E3D4 MOV X0, X23
	0x0359E3D8 LDP X30, X23, [X31], #0x30
	0x0359E3DC B 0x359E508
	0x0359E3E0 STR X30, [X31 - 0x30]!
	0x0359E3E4 STP X22, X21, [X31 + 0x10]
	0x0359E3E8 STP X20, X19, [X31 + 0x20]
	0x0359E3EC ADRP X20, 0xE42000
	0x0359E3F0 ADRP X22, 0xB57000
	0x0359E3F4 LDRB W8, [X20 + 0x23]
	0x0359E3F8 LDR X22, [X22 + 0xA30]
	0x0359E3FC MOV W19, W1
	0x0359E400 MOV W21, W0
	0x0359E404 TBNZ X8, 0x0, 0x359E440
	0x0359E408 ADRP X0, 0xB99000
	0x0359E40C LDR X0, [X0 + 0x240]
	0x0359E410 BL 0x1C16CF4
	0x0359E414 ADRP X0, 0xB57000
	0x0359E418 LDR X0, [X0 + 0xA30]
	0x0359E41C BL 0x1C16CF4
	0x0359E420 ADRP X0, 0xB57000
	0x0359E424 LDR X0, [X0 + 0xA40]
	0x0359E428 BL 0x1C16CF4
	0x0359E42C ADRP X0, 0xB99000
	0x0359E430 LDR X0, [X0 + 0x248]
	0x0359E434 BL 0x1C16CF4
	0x0359E438 MOVZ W8, 0x1
	0x0359E43C STRB W8, [X20 + 0x23]
	0x0359E440 LDR X0, [X22]
	0x0359E444 BL 0x1C16F10
	0x0359E448 MOV X1, X31
	0x0359E44C MOV X20, X0
	0x0359E450 BL 0x35F50D4
	0x0359E454 CBZ X20, 0x359E504
	0x0359E458 LDR X8, [X20]
	0x0359E45C MOV X0, X20
	0x0359E460 LDP X9, X1, [X8 + 0x1A8]
	0x0359E464 BLR X9
	0x0359E468 TBZ X0, 0x0, 0x359E480
	0x0359E46C TBZ X21, 0x0, 0x359E480
	0x0359E470 MOVZ W1, 0x3
	0x0359E474 MOV X0, X20
	0x0359E478 MOV X2, X31
	0x0359E47C BL 0x35F5810
	0x0359E480 ADRP X22, 0xB57000
	0x0359E484 ADRP X21, 0xB99000
	0x0359E488 LDR X22, [X22 + 0xA40]
	0x0359E48C LDR X21, [X21 + 0x248]
	0x0359E490 TBZ X19, 0x0, 0x359E4C4
	0x0359E494 ADRP X8, 0xB99000
	0x0359E498 LDR X8, [X8 + 0x240]
	0x0359E49C LDR X0, [X8]
	0x0359E4A0 BL 0x1C16F10
	0x0359E4A4 MOV X1, X31
	0x0359E4A8 MOV X19, X0
	0x0359E4AC BL 0x35F97CC
	0x0359E4B0 MOV X0, X19
	0x0359E4B4 MOV X1, X20
	0x0359E4B8 MOV X2, X31
	0x0359E4BC BL 0x35F97DC
	0x0359E4C0 MOV X20, X19
	0x0359E4C4 LDR X0, [X22]
	0x0359E4C8 BL 0x1C16F10
	0x0359E4CC MOV X1, X20
	0x0359E4D0 MOV X2, X31
	0x0359E4D4 MOV X19, X0
	0x0359E4D8 BL 0x35F98E0
	0x0359E4DC LDR X0, [X21]
	0x0359E4E0 BL 0x1C16F10
	0x0359E4E4 MOV X1, X19
	0x0359E4E8 MOV X20, X0
	0x0359E4EC BL 0x35A748C
	0x0359E4F0 MOV X0, X20
	0x0359E4F4 LDP X20, X19, [X31 + 0x20]
	0x0359E4F8 LDP X22, X21, [X31 + 0x10]
	0x0359E4FC LDR X30, [X31], #0x30
	0x0359E500 RET
	0x0359E504 BL 0x1C16F20
	0x0359E508 STP X30, X27, [X31 - 0x50]!
	0x0359E50C STP X26, X25, [X31 + 0x10]
	0x0359E510 STP X24, X23, [X31 + 0x20]
	0x0359E514 STP X22, X21, [X31 + 0x30]
	0x0359E518 STP X20, X19, [X31 + 0x40]
	0x0359E51C ADRP X27, 0xE41000
	0x0359E520 ADRP X25, 0xB5E000
	0x0359E524 LDRB W8, [X27 + 0xFE3]
	0x0359E528 LDR X25, [X25 + 0x3A0]
	0x0359E52C MOV X20, X5
	0x0359E530 MOV X24, X4
	0x0359E534 MOV W21, W3
	0x0359E538 MOV X22, X2
	0x0359E53C MOV X23, X1
	0x0359E540 MOV X19, X0
	0x0359E544 AND W26, W6, 0x1
	0x0359E548 TBNZ X8, 0x0, 0x359E578
	0x0359E54C ADRP X0, 0xB99000
	0x0359E550 LDR X0, [X0 + 0x250]
	0x0359E554 BL 0x1C16CF4
	0x0359E558 ADRP X0, 0xB99000
	0x0359E55C LDR X0, [X0 + 0x58]
	0x0359E560 BL 0x1C16CF4
	0x0359E564 ADRP X0, 0xB5E000
	0x0359E568 LDR X0, [X0 + 0x3A0]
	0x0359E56C BL 0x1C16CF4
	0x0359E570 MOVZ W8, 0x1
	0x0359E574 STRB W8, [X27 + 0xFE3]
	0x0359E578 MOV X0, X19
	0x0359E57C MOV X1, X31
	0x0359E580 BL 0x33BDD8C
	0x0359E584 STR X22, [X19 + 0x18]
	0x0359E588 STR W21, [X19 + 0x20]
	0x0359E58C STP X23, X24, [X19 + 0x28]
	0x0359E590 STRB W26, [X19 + 0x10]
	0x0359E594 LDR X0, [X25]
	0x0359E598 BL 0x1C16F10
	0x0359E59C MOV X1, X23
	0x0359E5A0 MOV X2, X22
	0x0359E5A4 MOV W3, W21
	0x0359E5A8 MOV X4, X31
	0x0359E5AC MOV X24, X0
	0x0359E5B0 BL 0x3628830
	0x0359E5B4 CBZ X24, 0x359E68C
	0x0359E5B8 ADRP X21, 0xB99000
	0x0359E5BC LDR X21, [X21 + 0x250]
	0x0359E5C0 MOV X0, X24
	0x0359E5C4 MOV X1, X31
	0x0359E5C8 BL 0x3628A38
	0x0359E5CC LDR X8, [X21]
	0x0359E5D0 MOV X21, X0
	0x0359E5D4 MOV X0, X8
	0x0359E5D8 BL 0x1C16F10
	0x0359E5DC MOV X1, X31
	0x0359E5E0 MOV X22, X0
	0x0359E5E4 BL 0x33BDD8C
	0x0359E5E8 MOVZ W8, 0xF
	0x0359E5EC STR X21, [X22 + 0x20]
	0x0359E5F0 STR X20, [X22 + 0x10]
	0x0359E5F4 STR W8, [X22 + 0x18]
	0x0359E5F8 STR X22, [X19 + 0x40]
	0x0359E5FC CBZ X20, 0x359E68C
	0x0359E600 ADRP X10, 0xB99000
	0x0359E604 LDR X8, [X20]
	0x0359E608 LDR X10, [X10 + 0x58]
	0x0359E60C LDRH W9, [X8 + 0x12E]
	0x0359E610 LDR X1, [X10]
	0x0359E614 CBZ X9, 0x359E638
	0x0359E618 LDR X10, [X8 + 0xB0]
	0x0359E61C ADD X10, X10, 0x8
	0x0359E620 LDUR X11, [X10 - 0x8]
	0x0359E624 CMP X11, X1
	0x0359E628 B.EQ 0x359E648
	0x0359E62C SUBS X9, X9, 0x1
	0x0359E630 ADD X10, X10, 0x10
	0x0359E634 B.NE 0x359E620
	0x0359E638 MOV X0, X20
	0x0359E63C MOV W2, W31
	0x0359E640 BL 0x1C5C788
	0x0359E644 B 0x359E654
	0x0359E648 LDRSW X9, [X10]
	0x0359E64C ADD X8, X8, X9, 0x4, LSL
	0x0359E650 ADD X0, X8, 0x138
	0x0359E654 LDP X8, X1, [X0]
	0x0359E658 MOV X0, X20
	0x0359E65C BLR X8
	0x0359E660 CMP X0, 0x0
	0x0359E664 CSEL X8, X31, X19, EQ
	0x0359E668 CBZ X0, 0x359E690
	0x0359E66C CBZ X8, 0x359E68C
	0x0359E670 LDP X20, X19, [X31 + 0x40]
	0x0359E674 LDP X22, X21, [X31 + 0x30]
	0x0359E678 LDP X24, X23, [X31 + 0x20]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+16], X30
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X20, 0xE42000
	013 Move W8, [X20+4061]
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {69}
	019 Move X0, 0xB9A000
	020 Move X0, [X0+528]
	021 Call 0x1C17CF4
	022 Move X0, 0xB59000
	023 Move X0, [X0+640]
	024 Call 0x1C17CF4
	025 Move X0, 0xB5F000
	026 Move X0, [X0+2264]
	027 Call 0x1C17CF4
	028 Move X0, 0xB57000
	029 Move X0, [X0+2064]
	030 Call 0x1C17CF4
	031 Move X0, 0xB57000
	032 Move X0, [X0+1728]
	033 Call 0x1C17CF4
	034 Move X0, 0xB57000
	035 Move X0, [X0+1744]
	036 Call 0x1C17CF4
	037 Move X0, 0xB9A000
	038 Move X0, [X0+88]
	039 Call 0x1C17CF4
	040 Move X0, 0xB59000
	041 Move X0, [X0+480]
	042 Call 0x1C17CF4
	043 Move X0, 0xB59000
	044 Move X0, [X0+496]
	045 Call 0x1C17CF4
	046 Move X0, 0xB59000
	047 Move X0, [X0+504]
	048 Call 0x1C17CF4
	049 Move X0, 0xB5F000
	050 Move X0, [X0+928]
	051 Call 0x1C17CF4
	052 Move X0, 0xB7F000
	053 Move X0, [X0+1232]
	054 Call 0x1C17CF4
	055 Move X0, 0xB9A000
	056 Move X0, [X0+536]
	057 Call 0x1C17CF4
	058 Move X0, 0xB91000
	059 Move X0, [X0+2000]
	060 Call 0x1C17CF4
	061 Move X0, 0xB91000
	062 Move X0, [X0+2008]
	063 Call 0x1C17CF4
	064 Move X0, 0xB56000
	065 Move X0, [X0+2440]
	066 Call 0x1C17CF4
	067 Move W8, 1
	068 Move [X20+4061], W8
	069 Move [X31+8], X31
	070 Move X27, 0xB59000
	071 Move W8, [X19]
	072 Move X27, [X27+640]
	073 Compare W8, 0
	074 JumpIfEqual {186}
	075 Move X24, [X19+32]
	076 Compare X24, 0
	077 JumpIfEqual {269}
	078 Move X0, [X24+32]
	079 Compare X0, 0
	080 JumpIfEqual {270}
	081 Move X8, 0xB9A000
	082 Move X9, 0xB56000
	083 Move X8, [X8+536]
	084 Move X9, [X9+2440]
	085 Move X21, [X8]
	086 Move X20, [X9]
	087 Move X1, X31
	088 Call Uri.get_AbsolutePath, X0
	089 Move X8, 0xB5F000
	090 Move X8, [X8+2264]
	091 Move X22, X0
	092 Move X0, [X8]
	093 Move W1, 1
	094 Call 0x1C17D6C
	095 Move X1, X0
	096 Compare X1, 0
	097 JumpIfEqual {271}
	098 Move W8, [X1+24]
	099 Compare W8, 0
	100 JumpIfEqual {272}
	101 Move W8, 47
	102 NotImplemented "Instruction STRH not yet implemented."
	103 Compare X22, 0
	104 JumpIfEqual {273}
	105 Move X0, X22
	106 Move X2, X31
	107 Call String.TrimEnd, X0, X1
	108 Move X1, X21
	109 Move X2, X31
	110 Call String.Concat, X0, X1
	111 Move X8, 0xB5F000
	112 Move X8, [X8+928]
	113 Move X22, X0
	114 Move X23, [X24+32]
	115 Move X0, [X8]
	116 Call 0x1C17F10
	117 Move X21, X0
	118 Move X1, X23
	119 Move X2, X31
	120 Call UriBuilder..ctor, X0, X1
	121 Compare X21, 0
	122 JumpIfEqual {274}
	123 Move X0, X21
	124 Move X1, X22
	125 Move X2, X31
	126 Call UriBuilder.set_Path, X0, X1
	127 Move X0, X21
	128 Move X1, X20
	129 Move X2, X31
	130 Call UriBuilder.set_Query, X0, X1
	131 Move X0, X21
	132 Move X1, X31
	133 Call UriBuilder.get_Uri, X0
	134 Move X8, 0xB7F000
	135 Move X9, 0xB57000
	136 Move X8, [X8+1232]
	137 Move X9, [X9+1744]
	138 Move X20, X0
	139 Move X21, [X8]
	140 Move X0, [X9]
	141 Call 0x1C17F10
	142 Move X8, 0xB57000
	143 Move X8, [X8+1728]
	144 Move X22, X0
	145 Move X1, [X8]
	146 Call Dictionary`2<Object, Object>..ctor, X0
	147 Move X8, 0xB91000
	148 Move X8, [X8+2008]
	149 Move X1, [X19+40]
	150 Move X0, [X8]
	151 Move X2, X31
	152 Call String.Concat, X0, X1
	153 Compare X22, 0
	154 JumpIfEqual {275}
	155 Move X8, 0xB91000
	156 Move X8, [X8+2000]
	157 Move X9, 0xB57000
	158 Move X9, [X9+2064]
	159 Move X2, X0
	160 Move X1, [X8]
	161 Move X3, [X9]
	162 Move X0, X22
	163 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	164 Move X23, [X24+16]
	165 Compare X23, 0
	166 JumpIfEqual {276}
	167 Move X10, 0xB9A000
	168 Move X10, [X10+88]
	169 Move X8, [X23]
	170 Move W25, [X24+24]
	171 Move X26, [X19+48]
	172 Move X24, [X19+56]
	173 Move X1, [X10]
	174 NotImplemented "Instruction LDRH not yet implemented."
	175 Compare X9, 0
	176 JumpIfEqual {183}
	177 Move X10, [X8+176]
	178 Add X10, X10, 8
	179 NotImplemented "Instruction LDUR not yet implemented."
	180 NotImplemented "Instruction CMP not yet implemented."
	181 Subtract X9, X9, 1
	182 Add X10, X10, 16
	183 Move W2, 3
	184 Move X0, X23
	185 Call 0x1C5D788
	186 Move X8, [X19+64]
	187 Move TEMP, 0
	188 Not TEMP
	189 Move W9, TEMP
	190 Move [X31+8], X8
	191 Move [X19+64], X31
	192 Move [X19], W9
	193 Move W9, [X10]
	194 Add W9, W9, 3
	195 Add X8, X8, W9
	196 Add X0, X8, 312
	197 Move X8, [X0]
	198 Move X9, [X0+8]
	199 Move X0, X23
	200 Move X1, X21
	201 Move X2, X20
	202 Move X3, X22
	203 Move X4, X31
	204 Move W5, W25
	205 Move X6, X26
	206 Move X7, X24
	207 Move [X31], X9
	208 NotImplemented "Instruction BLR not yet implemented."
	209 Compare X0, 0
	210 JumpIfEqual {277}
	211 Move X8, 0xB59000
	212 Move X8, [X8+504]
	213 Move X1, [X8]
	214 Call Task`1<Object>.GetAwaiter, X0
	215 Move X8, 0xB59000
	216 Move X8, [X8+496]
	217 Move [X31+8], X0
	218 Move X1, [X8]
	219 Add X0, X31, 8
	220 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	221 Move TEMP, X0
	222 And TEMP, TEMP, 1
	223 Compare TEMP, 1
	224 JumpIfNotEqual {242}
	225 Move X8, 0xB59000
	226 Move X8, [X8+480]
	227 Add X0, X31, 8
	228 Move X1, [X8]
	229 Call TaskAwaiter`1<Object>.GetResult, X0
	230 Move TEMP, 1
	231 Not TEMP
	232 Move W8, TEMP
	233 Move [X19+8], W8
	234 Move X0, [X27]
	235 Move W8, [X0+224]
	236 Compare W8, 0
	237 JumpIfNotEqual {239}
	238 Call 0x1C17DFC
	239 Move X0, X19
	240 Move X1, X31
	241 Call AsyncTaskMethodBuilder.SetResult, X0
	242 Move [X19], W31
	243 Move X8, [X31+8]
	244 Move [X19+64], X8
	245 Move X0, [X27]
	246 Move W8, [X0+224]
	247 Compare W8, 0
	248 JumpIfNotEqual {250}
	249 Call 0x1C17DFC
	250 Move X8, 0xB9A000
	251 Move X8, [X8+528]
	252 Add X0, X19, 8
	253 Move X3, [X8]
	254 Add X1, X31, 8
	255 Move X2, X19
	256 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	257 Move X20, [X31+80]
	258 Move X19, [X31+88]
	259 Move X22, [X31+64]
	260 Move X21, [X31+72]
	261 Move X24, [X31+48]
	262 Move X23, [X31+56]
	263 Move X26, [X31+32]
	264 Move X25, [X31+40]
	265 Move X30, [X31+16]
	266 Move X27, [X31+24]
	267 Add X31, X31, 96
	268 Return 
	269 Call 0x1C17F20
	270 Call 0x1C17F20
	271 Call 0x1C17F20
	272 Call 0x1C17F28
	273 Call 0x1C17F20
	274 Call 0x1C17F20
	275 Call 0x1C17F20
	276 Call 0x1C17F20
	277 Call 0x1C17F20
	278 Move X20, X0
	279 NotImplemented "Instruction CMP not yet implemented."
	280 Move X0, X20
	281 Call 0x3EB2AD0
	282 Move X20, X0
	283 Move X0, 0xB56000
	284 Move X0, [X0+2000]
	285 Call 0x1C17D08
	286 Move X8, [X20]
	287 Move X1, [X8]
	288 Call 0x1C18270
	289 Move TEMP, X0
	290 And TEMP, TEMP, 1
	291 Compare TEMP, 1
	292 JumpIfNotEqual {310}
	293 Move X20, [X20]
	294 Call 0x3EB2AE0
	295 Move TEMP, 1
	296 Not TEMP
	297 Move W8, TEMP
	298 Move [X19+8], W8
	299 Move X0, 0xB59000
	300 Move X0, [X0+640]
	301 Call 0x1C17D08
	302 Move W8, [X0+224]
	303 Compare W8, 0
	304 JumpIfNotEqual {306}
	305 Call 0x1C17DFC
	306 Move X0, X19
	307 Move X1, X20
	308 Move X2, X31
	309 Call AsyncTaskMethodBuilder.SetException, X0, X1
	310 Move W0, 8
	311 Call 0x3EB2AF0
	312 Move X8, [X20]
	313 Move [X0], X8
	314 Move X1, 0x917000
	315 Add X1, X1, 3672
	316 Move X2, X31
	317 Call 0x3EB2B00
	318 Move X20, X0
	319 Call 0x3EB2AE0
	320 Move X0, X20
	321 Call 0x1D2D690
	322 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x0359E67C LDP X26, X25, [X31 + 0x10]
	0x0359E680 STR X0, [X8 + 0x48]
	0x0359E684 LDP X30, X27, [X31], #0x50
	0x0359E688 RET
	0x0359E68C BL 0x1C16F20
	0x0359E690 ADRP X0, 0xB5D000
	0x0359E694 LDR X0, [X0 + 0x578]
	0x0359E698 BL 0x1C16D08
	0x0359E69C BL 0x1C16F10
	0x0359E6A0 MOV X19, X0
	0x0359E6A4 ADRP X0, 0xB99000
	0x0359E6A8 LDR X0, [X0 + 0x258]
	0x0359E6AC BL 0x1C16D08
	0x0359E6B0 MOV X1, X0
	0x0359E6B4 MOV X0, X19
	0x0359E6B8 MOV X2, X31
	0x0359E6BC BL 0x3314A68
	0x0359E6C0 ADRP X0, 0xB99000
	0x0359E6C4 LDR X0, [X0 + 0x260]
	0x0359E6C8 BL 0x1C16D08
	0x0359E6CC MOV X1, X0
	0x0359E6D0 MOV X0, X19
	0x0359E6D4 BL 0x1C16DEC
	0x0359E6D8 SUB X31, X31, 0xB0
	0x0359E6DC STP X30, X27, [X31 + 0x60]
	0x0359E6E0 STP X26, X25, [X31 + 0x70]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xE42000
	007 Move X22, 0xB59000
	008 Move W8, [X21+4062]
	009 Move X22, [X22+640]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xB59000
	017 Move X0, [X0+640]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+4062], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Add X0, X20, 8
	027 Move X1, X19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X2, X31
	033 Move X30, [X31+48]
	034 Call AsyncTaskMethodBuilder.SetStateMachine, X0, X1
	035 Return 

