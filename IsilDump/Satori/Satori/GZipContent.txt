Type: Satori.GZipContent

Method: System.Void .ctor(System.Net.Http.HttpContent content)

Disassembly:
	0x035A7AB0 BLR X8
	0x035A7AB4 TBZ X0, 0x0, 0x35A7B3C
	0x035A7AB8 LDR X8, [X22]
	0x035A7ABC LDR X1, [X28]
	0x035A7AC0 LDRH W9, [X8 + 0x12E]
	0x035A7AC4 CBZ X9, 0x35A7AE8
	0x035A7AC8 LDR X10, [X8 + 0xB0]
	0x035A7ACC ADD X10, X10, 0x8
	0x035A7AD0 LDUR X11, [X10 - 0x8]
	0x035A7AD4 CMP X11, X1
	0x035A7AD8 B.EQ 0x35A7AF8
	0x035A7ADC SUBS X9, X9, 0x1
	0x035A7AE0 ADD X10, X10, 0x10
	0x035A7AE4 B.NE 0x35A7AD0
	0x035A7AE8 MOV X0, X22
	0x035A7AEC MOV W2, W31
	0x035A7AF0 BL 0x1C5C788
	0x035A7AF4 B 0x35A7B04
	0x035A7AF8 LDRSW X9, [X10]
	0x035A7AFC ADD X8, X8, X9, 0x4, LSL
	0x035A7B00 ADD X0, X8, 0x138
	0x035A7B04 LDP X8, X1, [X0]
	0x035A7B08 MOV X0, X22
	0x035A7B0C BLR X8
	0x035A7B10 MOV X21, X0
	0x035A7B14 MOV X23, X1
	0x035A7B18 MOV X0, X20
	0x035A7B1C MOV X1, X31
	0x035A7B20 BL 0x35F6748
	0x035A7B24 CBZ X0, 0x35A80AC
	0x035A7B28 MOV X1, X21
	0x035A7B2C MOV X2, X23
	0x035A7B30 MOV X3, X31
	0x035A7B34 BL 0x36031D0
	0x035A7B38 B 0x35A7A5C
	0x035A7B3C MOV X23, X31
	0x035A7B40 MOVZ W21, 0x6
	0x035A7B44 TBZ X24, 0x1F, 0x35A7BAC
	0x035A7B48 CBZ X22, 0x35A7BAC
	0x035A7B4C ADRP X10, 0xB4C000
	0x035A7B50 LDR X8, [X22]
	0x035A7B54 LDR X10, [X10 + 0xE00]
	0x035A7B58 LDRH W9, [X8 + 0x12E]
	0x035A7B5C LDR X1, [X10]
	0x035A7B60 CBZ X9, 0x35A7B84
	0x035A7B64 LDR X10, [X8 + 0xB0]
	0x035A7B68 ADD X10, X10, 0x8
	0x035A7B6C LDUR X11, [X10 - 0x8]
	0x035A7B70 CMP X11, X1
	0x035A7B74 B.EQ 0x35A7B94
	0x035A7B78 SUBS X9, X9, 0x1
	0x035A7B7C ADD X10, X10, 0x10
	0x035A7B80 B.NE 0x35A7B6C
	0x035A7B84 MOV X0, X22
	0x035A7B88 MOV W2, W31
	0x035A7B8C BL 0x1C5C788
	0x035A7B90 B 0x35A7BA0
	0x035A7B94 LDRSW X9, [X10]
	0x035A7B98 ADD X8, X8, X9, 0x4, LSL
	0x035A7B9C ADD X0, X8, 0x138
	0x035A7BA0 LDP X8, X1, [X0]
	0x035A7BA4 MOV X0, X22
	0x035A7BA8 BLR X8
	0x035A7BAC CBNZ X23, 0x35A810C
	0x035A7BB0 CMP W21, 0x6
	0x035A7BB4 B.EQ 0x35A7BBC
	0x035A7BB8 CBNZ W21, 0x35A808C
	0x035A7BBC LDR X21, [X19 + 0x38]
	0x035A7BC0 CBZ X21, 0x35A7BE8
	0x035A7BC4 ADRP X8, 0xB4F000
	0x035A7BC8 LDR X8, [X8 + 0x168]
	0x035A7BCC LDR X0, [X8]
	0x035A7BD0 BL 0x1C16F10
	0x035A7BD4 MOV X22, X0
	0x035A7BD8 MOV X1, X21
	0x035A7BDC MOV X2, X31
	0x035A7BE0 BL 0x35F9710
	0x035A7BE4 STR X22, [X20 + 0x38]
	0x035A7BE8 ADRP X23, 0xB4E000
	0x035A7BEC LDR X23, [X23 + 0xA50]
	0x035A7BF0 LDR X0, [X23]
	0x035A7BF4 BL 0x1C16F10
	0x035A7BF8 MOV X22, X0
	0x035A7BFC MOV X1, X31
	0x035A7C00 BL 0x33DFA8C
	0x035A7C04 CBZ X22, 0x35A8114
	0x035A7C08 MOV X0, X22
	0x035A7C0C MOV X1, X31
	0x035A7C10 BL 0x33DFA08
	0x035A7C14 ADRP X8, 0xB4E000
	0x035A7C18 LDR X8, [X8 + 0x570]
	0x035A7C1C MOV X21, X0
	0x035A7C20 LDR W24, [X19 + 0x40]
	0x035A7C24 LDR X0, [X8]
	0x035A7C28 LDR W8, [X0 + 0xE0]
	0x035A7C2C CBNZ W8, 0x35A7C34
	0x035A7C30 BL 0x1C16DFC
	0x035A7C34 SCVTF D0, W24
	0x035A7C38 MOV X0, X31
	0x035A7C3C BL 0x3394754
	0x035A7C40 MOV X1, X0
	0x035A7C44 MOV X0, X22
	0x035A7C48 MOV X2, X31
	0x035A7C4C BL 0x33DFDEC
	0x035A7C50 MOV X0, X19
	0x035A7C54 LDRB W8, [X0 + 0x48]!
	0x035A7C58 CBZ W8, 0x35A7D90
	0x035A7C5C ADRP X8, 0xB4F000
	0x035A7C60 LDR X8, [X8 + 0x1D0]
	0x035A7C64 LDR X1, [X8]
	0x035A7C68 BL 0x242E380
	0x035A7C6C MOV X22, X0
	0x035A7C70 LDR X0, [X23]
	0x035A7C74 LDR W8, [X0 + 0xE0]
	0x035A7C78 CBNZ W8, 0x35A7C80
	0x035A7C7C BL 0x1C16DFC
	0x035A7C80 MOV X0, X21
	0x035A7C84 MOV X1, X22
	0x035A7C88 MOV X2, X31
	0x035A7C8C BL 0x33E0A98
	0x035A7C90 MOV X22, X0
	0x035A7C94 CBZ X27, 0x35A7D98
	0x035A7C98 LDR X23, [X27 + 0x10]
	0x035A7C9C CBZ X23, 0x35A7DC0
	0x035A7CA0 ADRP X8, 0xB4C000
	0x035A7CA4 LDR X8, [X8 + 0x9D0]
	0x035A7CA8 LDR X0, [X8]
	0x035A7CAC MOVZ W1, 0x3
	0x035A7CB0 BL 0x1C16D6C
	0x035A7CB4 MOV X24, X0
	0x035A7CB8 CBZ X0, 0x35A8190
	0x035A7CBC LDR X25, [X19 + 0x28]
	0x035A7CC0 CBZ X25, 0x35A7CD8
	0x035A7CC4 LDR X8, [X24]
	0x035A7CC8 LDR X1, [X8 + 0x40]
	0x035A7CCC MOV X0, X25
	0x035A7CD0 BL 0x1C16E00
	0x035A7CD4 CBZ X0, 0x35A81A0
	0x035A7CD8 LDR W8, [X24 + 0x18]
	0x035A7CDC CBZ W8, 0x35A8194
	0x035A7CE0 STR X25, [X24 + 0x20]
	0x035A7CE4 LDR X25, [X19 + 0x20]
	0x035A7CE8 CBZ X25, 0x35A7D04
	0x035A7CEC LDR X8, [X24]
	0x035A7CF0 LDR X1, [X8 + 0x40]
	0x035A7CF4 MOV X0, X25
	0x035A7CF8 BL 0x1C16E00
	0x035A7CFC CBZ X0, 0x35A81AC
	0x035A7D00 LDR W8, [X24 + 0x18]
	0x035A7D04 CMP W8, 0x1
	0x035A7D08 B.LS 0x35A8198
	0x035A7D0C STR X25, [X24 + 0x28]
	0x035A7D10 LDR X25, [X19 + 0x38]
	0x035A7D14 CBZ X25, 0x35A7D30
	0x035A7D18 LDR X8, [X24]
	0x035A7D1C LDR X1, [X8 + 0x40]
	0x035A7D20 MOV X0, X25
	0x035A7D24 BL 0x1C16E00
	0x035A7D28 CBZ X0, 0x35A81B8
	0x035A7D2C LDR W8, [X24 + 0x18]
	0x035A7D30 CMP W8, 0x2
	0x035A7D34 B.LS 0x35A819C
	0x035A7D38 STR X25, [X24 + 0x30]
	0x035A7D3C ADRP X9, 0xB90000
	0x035A7D40 LDR X8, [X23]
	0x035A7D44 LDR X9, [X9 + 0x5F8]
	0x035A7D48 ADRP X10, 0xB4F000
	0x035A7D4C LDR X1, [X9]
	0x035A7D50 LDR X10, [X10 + 0x210]
	0x035A7D54 LDRH W9, [X8 + 0x12E]
	0x035A7D58 LDR X25, [X10]
	0x035A7D5C CBZ X9, 0x35A7D80
	0x035A7D60 LDR X10, [X8 + 0xB0]
	0x035A7D64 ADD X10, X10, 0x8
	0x035A7D68 LDUR X11, [X10 - 0x8]
	0x035A7D6C CMP X11, X1
	0x035A7D70 B.EQ 0x35A7D9C
	0x035A7D74 SUBS X9, X9, 0x1
	0x035A7D78 ADD X10, X10, 0x10
	0x035A7D7C B.NE 0x35A7D68
	0x035A7D80 MOVZ W2, 0x2
	0x035A7D84 MOV X0, X23
	0x035A7D88 BL 0x1C5C788
	0x035A7D8C B 0x35A7DAC
	0x035A7D90 MOV X22, X31
	0x035A7D94 CBNZ X27, 0x35A7C98
	0x035A7D98 BL 0x1C16F20
	0x035A7D9C LDR W9, [X10]
	0x035A7DA0 ADD W9, W9, 0x2
	0x035A7DA4 ADD X8, X8, W9, 0x4, SXTW
	0x035A7DA8 ADD X0, X8, 0x138
	0x035A7DAC LDP X8, X3, [X0]
	0x035A7DB0 MOV X0, X23
	0x035A7DB4 MOV X1, X25
	0x035A7DB8 MOV X2, X24
	0x035A7DBC BLR X8
	0x035A7DC0 LDR X23, [X27 + 0x18]
	0x035A7DC4 CBZ X22, 0x35A7DD8
	0x035A7DC8 MOV X0, X22
	0x035A7DCC MOV X1, X31
	0x035A7DD0 BL 0x33DFA08
	0x035A7DD4 MOV X21, X0
	0x035A7DD8 CBZ X23, 0x35A8118
	0x035A7DDC LDR X8, [X23]
	0x035A7DE0 LDP X9, X3, [X8 + 0x198]
	0x035A7DE4 MOV X0, X23
	0x035A7DE8 MOV X1, X20
	0x035A7DEC MOV X2, X21
	0x035A7DF0 BLR X9
	0x035A7DF4 CBZ X0, 0x35A811C
	0x035A7DF8 ADRP X8, 0xB4F000
	0x035A7DFC LDR X8, [X8 + 0x200]
	0x035A7E00 LDR X1, [X8]
	0x035A7E04 BL 0x269F5D0
	0x035A7E08 ADRP X8, 0xB4F000
	0x035A7E0C LDR X8, [X8 + 0x1E8]
	0x035A7E10 STR X0, [X31 + 0x28]
	0x035A7E14 LDR X1, [X8]
	0x035A7E18 ADD X0, X31, 0x28
	0x035A7E1C BL 0x2677430
	0x035A7E20 TBZ X0, 0x0, 0x35A7FE0
	0x035A7E24 ADRP X8, 0xB4F000

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X21, 0xE3A000
	010 Move W8, [X21+28]
	011 Move X20, X1
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {40}
	017 Move X0, 0xB50000
	018 Move X0, [X0+600]
	019 Call 0x1C17CF4
	020 Move X0, 0xB4D000
	021 Move X0, [X0+3584]
	022 Call 0x1C17CF4
	023 Move X0, 0xB50000
	024 Move X0, [X0+608]
	025 Call 0x1C17CF4
	026 Move X0, 0xB4D000
	027 Move X0, [X0+3608]
	028 Call 0x1C17CF4
	029 Move X0, 0xB50000
	030 Move X0, [X0+616]
	031 Call 0x1C17CF4
	032 Move X0, 0xB50000
	033 Move X0, [X0+624]
	034 Call 0x1C17CF4
	035 Move X0, 0xB50000
	036 Move X0, [X0+632]
	037 Call 0x1C17CF4
	038 Move W8, 1
	039 Move [X21+28], W8
	040 Move X0, X19
	041 Move X1, X31
	042 Call HttpContent..ctor, X0
	043 Move [X19+40], X20
	044 Compare X20, 0
	045 JumpIfEqual {192}
	046 Move X0, X20
	047 Move X1, X31
	048 Call HttpContent.get_Headers, X0
	049 Compare X0, 0
	050 JumpIfEqual {192}
	051 Move X23, 0xB4D000
	052 Move X23, [X23+3584]
	053 Move X1, X31
	054 Call HttpHeaders.GetEnumerator, X0
	055 Move X20, X0
	056 Compare X0, 0
	057 JumpIfEqual {193}
	058 Move X24, 0xB4D000
	059 Move X25, 0xB50000
	060 Move X24, [X24+3608]
	061 Move X25, [X25+608]
	062 Move X8, [X20]
	063 Move X1, [X24]
	064 NotImplemented "Instruction LDRH not yet implemented."
	065 Compare X9, 0
	066 JumpIfEqual {73}
	067 Move X10, [X8+176]
	068 Add X10, X10, 8
	069 NotImplemented "Instruction LDUR not yet implemented."
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Subtract X9, X9, 1
	072 Add X10, X10, 16
	073 Move X0, X20
	074 Move W2, W31
	075 Call 0x1C5D788
	076 NotImplemented "Instruction LDRSW not yet implemented."
	077 Add X8, X8, X9
	078 Add X0, X8, 312
	079 Move X8, [X0]
	080 Move X1, [X0+8]
	081 Move X0, X20
	082 NotImplemented "Instruction BLR not yet implemented."
	083 Move TEMP, X0
	084 And TEMP, TEMP, 1
	085 Compare TEMP, 1
	086 JumpIfNotEqual {119}
	087 Move X8, [X20]
	088 Move X1, [X25]
	089 NotImplemented "Instruction LDRH not yet implemented."
	090 Compare X9, 0
	091 JumpIfEqual {98}
	092 Move X10, [X8+176]
	093 Add X10, X10, 8
	094 NotImplemented "Instruction LDUR not yet implemented."
	095 NotImplemented "Instruction CMP not yet implemented."
	096 Subtract X9, X9, 1
	097 Add X10, X10, 16
	098 Move X0, X20
	099 Move W2, W31
	100 Call 0x1C5D788
	101 NotImplemented "Instruction LDRSW not yet implemented."
	102 Add X8, X8, X9
	103 Add X0, X8, 312
	104 Move X8, [X0]
	105 Move X1, [X0+8]
	106 Move X0, X20
	107 NotImplemented "Instruction BLR not yet implemented."
	108 Move X21, X0
	109 Move X22, X1
	110 Move X0, X19
	111 Move X1, X31
	112 Call HttpContent.get_Headers, X0
	113 Compare X0, 0
	114 JumpIfEqual {191}
	115 Move X1, X21
	116 Move X2, X22
	117 Move X3, X31
	118 Call HttpHeaders.TryAddWithoutValidation, X0, X1, X2
	119 Move X21, X31
	120 Compare X20, 0
	121 JumpIfEqual {143}
	122 Move X8, [X20]
	123 Move X1, [X23]
	124 NotImplemented "Instruction LDRH not yet implemented."
	125 Compare X9, 0
	126 JumpIfEqual {133}
	127 Move X10, [X8+176]
	128 Add X10, X10, 8
	129 NotImplemented "Instruction LDUR not yet implemented."
	130 NotImplemented "Instruction CMP not yet implemented."
	131 Subtract X9, X9, 1
	132 Add X10, X10, 16
	133 Move X0, X20
	134 Move W2, W31
	135 Call 0x1C5D788
	136 NotImplemented "Instruction LDRSW not yet implemented."
	137 Add X8, X8, X9
	138 Add X0, X8, 312
	139 Move X8, [X0]
	140 Move X1, [X0+8]
	141 Move X0, X20
	142 NotImplemented "Instruction BLR not yet implemented."
	143 Compare X21, 0
	144 JumpIfNotEqual {194}
	145 Move X0, X19
	146 Move X1, X31
	147 Call HttpContent.get_Headers, X0
	148 Compare X0, 0
	149 JumpIfEqual {192}
	150 Move X1, X31
	151 Call HttpContentHeaders.get_ContentEncoding, X0
	152 Compare X0, 0
	153 JumpIfEqual {192}
	154 Move X9, 0xB50000
	155 Move X10, 0xB50000
	156 Move X8, [X0]
	157 Move X9, [X9+600]
	158 Move X10, [X10+632]
	159 Move X19, X0
	160 Move X1, [X9]
	161 NotImplemented "Instruction LDRH not yet implemented."
	162 Move X20, [X10]
	163 Compare X9, 0
	164 JumpIfEqual {171}
	165 Move X10, [X8+176]
	166 Add X10, X10, 8
	167 NotImplemented "Instruction LDUR not yet implemented."
	168 NotImplemented "Instruction CMP not yet implemented."
	169 Subtract X9, X9, 1
	170 Add X10, X10, 16
	171 Move W2, 2
	172 Move X0, X19
	173 Call 0x1C5D788
	174 Move W9, [X10]
	175 Add W9, W9, 2
	176 Add X8, X8, W9
	177 Add X0, X8, 312
	178 Move X3, [X0]
	179 Move X2, [X0+8]
	180 Move X0, X19
	181 Move X1, X20
	182 Move X20, [X31+48]
	183 Move X19, [X31+56]
	184 Move X22, [X31+32]
	185 Move X21, [X31+40]
	186 Move X24, [X31+16]
	187 Move X23, [X31+24]
	188 Move X30, [X31+64]
	189 Move X25, [X31+72]
	190 CallNoReturn X3
	191 Call 0x1C17F20
	192 Call 0x1C17F20
	193 Call 0x1C17F20
	194 Move X0, X21
	195 Call 0x1C17F18
	196 NotImplemented "Instruction CMP not yet implemented."
	197 Call 0x3EB2AD0
	198 Move X21, [X0]
	199 Call 0x3EB2AE0
	200 Move X19, X0
	201 Move X21, X31
	202 Move X19, X0
	203 Compare X20, 0
	204 JumpIfEqual {226}
	205 Move X8, [X20]
	206 Move X1, [X23]
	207 NotImplemented "Instruction LDRH not yet implemented."
	208 Compare X9, 0
	209 JumpIfEqual {216}
	210 Move X10, [X8+176]
	211 Add X10, X10, 8
	212 NotImplemented "Instruction LDUR not yet implemented."
	213 NotImplemented "Instruction CMP not yet implemented."
	214 Subtract X9, X9, 1
	215 Add X10, X10, 16
	216 Move X0, X20
	217 Move W2, W31
	218 Call 0x1C5D788
	219 NotImplemented "Instruction LDRSW not yet implemented."
	220 Add X8, X8, X9
	221 Add X0, X8, 312
	222 Move X8, [X0]
	223 Move X1, [X0+8]
	224 Move X0, X20
	225 NotImplemented "Instruction BLR not yet implemented."
	226 Compare X21, 0
	227 JumpIfNotEqual {230}
	228 Move X0, X19
	229 Call 0x1D2D690
	230 Move X0, X21
	231 Call 0x1C17F18
	232 Call 0x1991590

Method: System.Threading.Tasks.Task SerializeToStreamAsync(System.IO.Stream stream, System.Net.TransportContext context)

Disassembly:
	0x035A7E28 LDR X8, [X8 + 0x1D8]
	0x035A7E2C ADD X0, X31, 0x28
	0x035A7E30 LDR X1, [X8]
	0x035A7E34 BL 0x2677474
	0x035A7E38 STR X0, [X19 + 0x60]
	0x035A7E3C CBZ X0, 0x35A80DC
	0x035A7E40 LDR X0, [X0 + 0x38]
	0x035A7E44 CBZ X0, 0x35A80E0
	0x035A7E48 MOV X1, X31
	0x035A7E4C BL 0x35FAC28
	0x035A7E50 CBZ X0, 0x35A80E4
	0x035A7E54 ADRP X8, 0xB4F000
	0x035A7E58 LDR X8, [X8 + 0x1F8]
	0x035A7E5C LDR X1, [X8]
	0x035A7E60 BL 0x269F5D0
	0x035A7E64 ADRP X8, 0xB4F000
	0x035A7E68 LDR X8, [X8 + 0x1F0]
	0x035A7E6C STR X0, [X31 + 0x18]
	0x035A7E70 LDR X1, [X8]
	0x035A7E74 ADD X0, X31, 0x18
	0x035A7E78 BL 0x2677430
	0x035A7E7C TBZ X0, 0x0, 0x35A7FA0
	0x035A7E80 ADRP X8, 0xB4F000
	0x035A7E84 LDR X8, [X8 + 0x1E0]
	0x035A7E88 ADD X0, X31, 0x18
	0x035A7E8C LDR X1, [X8]
	0x035A7E90 BL 0x2677474
	0x035A7E94 LDR X8, [X19 + 0x60]
	0x035A7E98 CBZ X8, 0x35A80B0
	0x035A7E9C MOV X20, X0
	0x035A7EA0 LDR X0, [X8 + 0x38]
	0x035A7EA4 CBZ X0, 0x35A7EB0
	0x035A7EA8 MOV X1, X31
	0x035A7EAC BL 0x35FABE4
	0x035A7EB0 CBZ X27, 0x35A80B4
	0x035A7EB4 LDR X21, [X27 + 0x10]
	0x035A7EB8 CBZ X21, 0x35A8040
	0x035A7EBC ADRP X8, 0xB4C000
	0x035A7EC0 LDR X8, [X8 + 0x9D0]
	0x035A7EC4 LDR X0, [X8]
	0x035A7EC8 MOVZ W1, 0x2
	0x035A7ECC BL 0x1C16D6C
	0x035A7ED0 LDR X8, [X19 + 0x60]
	0x035A7ED4 CBZ X8, 0x35A80E8
	0x035A7ED8 ADRP X9, 0xB4F000
	0x035A7EDC LDR W8, [X8 + 0x20]
	0x035A7EE0 LDR X9, [X9 + 0x188]
	0x035A7EE4 MOV X22, X0
	0x035A7EE8 STR W8, [X31 + 0x14]
	0x035A7EEC LDR X0, [X9]
	0x035A7EF0 ADD X1, X31, 0x14
	0x035A7EF4 BL 0x1C16E04

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+96], X30
	003 Move [X31+112], X22
	004 Move [X31+120], X21
	005 Move [X31+128], X20
	006 Move [X31+136], X19
	007 Move X22, 0xE3A000
	008 Move X21, 0xB50000
	009 Move W8, [X22+29]
	010 Move X21, [X21+640]
	011 Move X19, X1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0xB91000
	018 Move X0, [X0+1480]
	019 Call 0x1C17CF4
	020 Move X0, 0xB50000
	021 Move X0, [X0+640]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X22+29], W8
	025 Move X0, [X21]
	026 NotImplemented "Instruction MOVI not yet implemented."
	027 Move [X31+64], V0
	028 Move [X31+72], V0
	029 Move [X31+32], V0
	030 Move [X31+40], V0
	031 Move X21, 0xB91000
	032 Move W8, [X0+224]
	033 Move X21, [X21+1480]
	034 Compare W8, 0
	035 JumpIfNotEqual {37}
	036 Call 0x1C17DFC
	037 Add X8, X31, 8
	038 Move X0, X31
	039 Call AsyncTaskMethodBuilder.Create
	040 NotImplemented "Instruction LDUR not yet implemented."
	041 Move X9, [X31+24]
	042 Move X2, [X21]
	043 Add X8, X31, 32
	044 Move [X31+64], X19
	045 Move [X31+72], X20
	046 Or X20, X8, 15
	047 Move TEMP, 0
	048 Not TEMP
	049 Move W10, TEMP
	050 Add X1, X31, 32
	051 Move X0, X20
	052 Move [X31+40], V0
	053 Move [X31+56], X9
	054 Move [X31+32], W10
	055 Call AsyncTaskMethodBuilder.Start, X0, X1
	056 Move X0, X20
	057 Move X1, X31
	058 Call AsyncTaskMethodBuilder.get_Task, X0
	059 Move X20, [X31+128]
	060 Move X19, [X31+136]
	061 Move X22, [X31+112]
	062 Move X21, [X31+120]
	063 Move X30, [X31+96]
	064 Add X31, X31, 144
	065 Return X0

Method: System.Boolean TryComputeLength(out System.Int64 length)

Disassembly:
	0x035A7EF8 CBZ X22, 0x35A80EC
	0x035A7EFC MOV X23, X0
	0x035A7F00 CBZ X0, 0x35A7F18
	0x035A7F04 LDR X8, [X22]

ISIL:
	001 Move TEMP, 0
	002 Not TEMP
	003 Move X8, TEMP
	004 Move W0, W31
	005 Move [X1], X8
	006 Return X0

