Type: Satori.ApiResponseException

Method: System.Int64 get_StatusCode()

Disassembly:
	0x0359291C MOV W2, W31
	0x03592920 BL 0x1C5C788

ISIL:
	001 Move X0, [X0+144]
	002 Return X0

Method: System.Int32 get_GrpcStatusCode()

Disassembly:
	0x03592924 B 0x3592934
	0x03592928 LDRSW X9, [X10]

ISIL:
	001 Move W0, [X0+152]
	002 Return X0

Method: System.Void .ctor(System.Int64 statusCode, System.String content, System.Int32 grpcCode)

Disassembly:
	0x0359292C ADD X8, X8, X9, 0x4, LSL
	0x03592930 ADD X0, X8, 0x138
	0x03592934 ADRP X28, 0xB61000
	0x03592938 ADRP X26, 0xB64000
	0x0359293C ADRP X29, 0xB61000
	0x03592940 ADRP X25, 0xB8E000
	0x03592944 ADRP X20, 0xB8E000
	0x03592948 ADRP X27, 0xB6C000
	0x0359294C LDR X28, [X28 + 0xE18]
	0x03592950 LDR X26, [X26 + 0x198]
	0x03592954 LDR X29, [X29 + 0xAC8]
	0x03592958 LDR X25, [X25 + 0x360]
	0x0359295C LDR X20, [X20 + 0xFB8]
	0x03592960 LDR X27, [X27 + 0x6D8]
	0x03592964 LDP X8, X1, [X0]
	0x03592968 MOV X0, X21
	0x0359296C BLR X8
	0x03592970 MOV X21, X0
	0x03592974 LDR X0, [X31 + 0x8]
	0x03592978 CBZ X21, 0x3592BC8
	0x0359297C LDR X8, [X21]
	0x03592980 LDR X1, [X28]
	0x03592984 MOV X22, X0
	0x03592988 LDRH W9, [X8 + 0x12E]
	0x0359298C CBZ X9, 0x35929B0
	0x03592990 LDR X10, [X8 + 0xB0]
	0x03592994 ADD X10, X10, 0x8
	0x03592998 LDUR X11, [X10 - 0x8]
	0x0359299C CMP X11, X1
	0x035929A0 B.EQ 0x35929C0
	0x035929A4 SUBS X9, X9, 0x1
	0x035929A8 ADD X10, X10, 0x10
	0x035929AC B.NE 0x3592998

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0xE4E000
	009 Move X24, 0xB62000
	010 Move W8, [X23+3979]
	011 Move X24, [X24+2000]
	012 Move W19, W3
	013 Move X22, X2
	014 Move X21, X1
	015 Move X20, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0xB62000
	021 Move X0, [X0+2000]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X23+3979], W8
	025 Move X0, [X24]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 Move X0, X20
	031 Move X1, X22
	032 Move X2, X31
	033 Call Exception..ctor, X0, X1
	034 Move [X20+144], X21
	035 Move [X20+152], W19
	036 Move X20, [X31+48]
	037 Move X19, [X31+56]
	038 Move X22, [X31+32]
	039 Move X21, [X31+40]
	040 Move X24, [X31+16]
	041 Move X23, [X31+24]
	042 Move X30, [X31+64]
	043 Return 

Method: System.Void .ctor(System.String message, System.Exception e)

Disassembly:
	0x035929B0 MOV X0, X21
	0x035929B4 MOV W2, W31
	0x035929B8 BL 0x1C5C788
	0x035929BC B 0x35929CC
	0x035929C0 LDRSW X9, [X10]
	0x035929C4 ADD X8, X8, X9, 0x4, LSL
	0x035929C8 ADD X0, X8, 0x138
	0x035929CC LDP X8, X1, [X0]
	0x035929D0 MOV X0, X21
	0x035929D4 BLR X8
	0x035929D8 TBZ X0, 0x0, 0x3592AB0
	0x035929DC LDR X8, [X21]
	0x035929E0 LDR X1, [X26]
	0x035929E4 LDRH W9, [X8 + 0x12E]
	0x035929E8 CBZ X9, 0x3592A0C
	0x035929EC LDR X10, [X8 + 0xB0]
	0x035929F0 ADD X10, X10, 0x8
	0x035929F4 LDUR X11, [X10 - 0x8]
	0x035929F8 CMP X11, X1
	0x035929FC B.EQ 0x3592A1C
	0x03592A00 SUBS X9, X9, 0x1
	0x03592A04 ADD X10, X10, 0x10
	0x03592A08 B.NE 0x35929F4
	0x03592A0C MOV X0, X21
	0x03592A10 MOV W2, W31
	0x03592A14 BL 0x1C5C788
	0x03592A18 B 0x3592A28
	0x03592A1C LDRSW X9, [X10]
	0x03592A20 ADD X8, X8, X9, 0x4, LSL
	0x03592A24 ADD X0, X8, 0x138
	0x03592A28 LDP X8, X1, [X0]
	0x03592A2C MOV X0, X21
	0x03592A30 BLR X8

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0xE4E000
	008 Move X23, 0xB62000
	009 Move W8, [X22+3980]
	010 Move X23, [X23+2000]
	011 Move X20, X2
	012 Move X21, X1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0xB62000
	019 Move X0, [X0+2000]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+3980], W8
	023 Move X0, [X23]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Move X0, X19
	029 Move X1, X21
	030 Move X2, X20
	031 Move X3, X31
	032 Call Exception..ctor, X0, X1, X2
	033 Move TEMP, 0
	034 Not TEMP
	035 Move X8, TEMP
	036 Move TEMP, 0
	037 Not TEMP
	038 Move W9, TEMP
	039 Move [X19+144], X8
	040 Move [X19+152], W9
	041 Move X20, [X31+32]
	042 Move X19, [X31+40]
	043 Move X22, [X31+16]
	044 Move X21, [X31+24]
	045 Move X30, [X31+48]
	046 Move X23, [X31+56]
	047 Return 

Method: System.Void .ctor(System.String content)

Disassembly:
	0x03592A34 MOV X24, X0
	0x03592A38 LDR X0, [X29]
	0x03592A3C MOV X23, X1
	0x03592A40 MOVZ W1, 0x5

ISIL:
	001 Move X2, X1
	002 Move TEMP, 0
	003 Not TEMP
	004 Move X1, TEMP
	005 Move TEMP, 0
	006 Not TEMP
	007 Move W3, TEMP
	008 Call ApiResponseException..ctor, X0, X1, X2, X3
	009 Return 

Method: System.String ToString()

Disassembly:
	0x03592A44 BL 0x1C16D6C
	0x03592A48 CBZ X0, 0x3592BD0
	0x03592A4C LDR W8, [X0 + 0x18]
	0x03592A50 CBZ W8, 0x3592BD8
	0x03592A54 LDR X9, [X25]
	0x03592A58 CMP W8, 0x1
	0x03592A5C STR X9, [X0 + 0x20]
	0x03592A60 B.EQ 0x3592BCC
	0x03592A64 CMP W8, 0x2
	0x03592A68 STR X24, [X0 + 0x28]
	0x03592A6C B.LS 0x3592BDC
	0x03592A70 LDR X9, [X20]
	0x03592A74 CMP W8, 0x3
	0x03592A78 STR X9, [X0 + 0x30]
	0x03592A7C B.EQ 0x3592BE0
	0x03592A80 CMP W8, 0x4
	0x03592A84 STR X23, [X0 + 0x38]
	0x03592A88 B.LS 0x3592BD4
	0x03592A8C LDR X8, [X27]
	0x03592A90 STR X8, [X0 + 0x40]
	0x03592A94 MOV X1, X31
	0x03592A98 BL 0x32278CC
	0x03592A9C MOV X1, X0
	0x03592AA0 MOV X0, X22
	0x03592AA4 MOV X2, X31
	0x03592AA8 BL 0x321B938
	0x03592AAC B 0x3592978
	0x03592AB0 ADRP X20, 0xB61000
	0x03592AB4 LDR X20, [X20 + 0x838]
	0x03592AB8 MOV X23, X31
	0x03592ABC CBZ X21, 0x3592B20
	0x03592AC0 LDR X8, [X21]
	0x03592AC4 ADRP X10, 0xB61000
	0x03592AC8 LDRH W9, [X8 + 0x12E]
	0x03592ACC LDR X10, [X10 + 0xE00]
	0x03592AD0 LDR X1, [X10]
	0x03592AD4 CBZ X9, 0x3592AF8
	0x03592AD8 LDR X10, [X8 + 0xB0]
	0x03592ADC ADD X10, X10, 0x8
	0x03592AE0 LDUR X11, [X10 - 0x8]
	0x03592AE4 CMP X11, X1
	0x03592AE8 B.EQ 0x3592B08
	0x03592AEC SUBS X9, X9, 0x1
	0x03592AF0 ADD X10, X10, 0x10
	0x03592AF4 B.NE 0x3592AE0
	0x03592AF8 MOV X0, X21
	0x03592AFC MOV W2, W31
	0x03592B00 BL 0x1C5C788
	0x03592B04 B 0x3592B14
	0x03592B08 LDRSW X9, [X10]
	0x03592B0C ADD X8, X8, X9, 0x4, LSL
	0x03592B10 ADD X0, X8, 0x138
	0x03592B14 LDP X8, X1, [X0]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0xE4E000
	009 Move X20, 0xB64000
	010 Move X23, 0xB62000
	011 Move X22, 0xB9C000
	012 Move W8, [X21+3981]
	013 Move X20, [X20+2656]
	014 Move X23, [X23+1880]
	015 Move X22, [X22+3264]
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {32}
	021 Move X0, 0xB62000
	022 Move X0, [X0+1880]
	023 Call 0x1C17CF4
	024 Move X0, 0xB64000
	025 Move X0, [X0+2656]
	026 Call 0x1C17CF4
	027 Move X0, 0xB9C000
	028 Move X0, [X0+3264]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X21+3981], W8
	032 Move X8, [X19+144]
	033 Move X0, [X20]
	034 Add X1, X31, 8
	035 Move [X31+8], X8
	036 Call 0x1C17E04
	037 Move X8, [X19]
	038 Move X20, X0
	039 Move X0, X19
	040 Move X9, [X8+392]
	041 Move X1, [X8+400]
	042 NotImplemented "Instruction BLR not yet implemented."
	043 Move X21, X0
	044 Move W8, [X19+152]
	045 Move X0, [X23]
	046 Add X1, X31, 4
	047 Move [X31+4], W8
	048 Call 0x1C17E04
	049 Move X8, [X22]
	050 Move X3, X0
	051 Move X1, X20
	052 Move X2, X21
	053 Move X0, X8
	054 Move X4, X31
	055 Call String.Format, X0, X1, X2, X3
	056 Move X20, [X31+48]
	057 Move X19, [X31+56]
	058 Move X22, [X31+32]
	059 Move X21, [X31+40]
	060 Move X30, [X31+16]
	061 Move X23, [X31+24]
	062 Add X31, X31, 64
	063 Return X0

