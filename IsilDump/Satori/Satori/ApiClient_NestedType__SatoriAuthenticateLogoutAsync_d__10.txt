Type: Satori.ApiClient/<SatoriAuthenticateLogoutAsync>d__10

Method: System.Void MoveNext()

Disassembly:
	0x03598E6C BL 0x1C16DFC
	0x03598E70 MOV X0, X19
	0x03598E74 MOV X1, X31
	0x03598E78 BL 0x32C4864
	0x03598E7C B 0x3598EB8
	0x03598E80 STR W31, [X19]
	0x03598E84 LDR X8, [X31 + 0x8]
	0x03598E88 STR X8, [X19 + 0x40]
	0x03598E8C LDR X0, [X27]
	0x03598E90 LDR W8, [X0 + 0xE0]
	0x03598E94 CBNZ W8, 0x3598E9C
	0x03598E98 BL 0x1C16DFC
	0x03598E9C ADRP X8, 0xB9F000
	0x03598EA0 LDR X8, [X8 + 0xB8]
	0x03598EA4 ADD X0, X19, 0x8
	0x03598EA8 LDR X3, [X8]
	0x03598EAC ADD X1, X31, 0x8
	0x03598EB0 MOV X2, X19
	0x03598EB4 BL 0x2187BA8
	0x03598EB8 LDP X20, X19, [X31 + 0x50]
	0x03598EBC LDP X22, X21, [X31 + 0x40]
	0x03598EC0 LDP X24, X23, [X31 + 0x30]
	0x03598EC4 LDP X26, X25, [X31 + 0x20]
	0x03598EC8 LDP X30, X27, [X31 + 0x10]
	0x03598ECC ADD X31, X31, 0x60
	0x03598ED0 RET
	0x03598ED4 BL 0x1C16F20
	0x03598ED8 BL 0x1C16F20
	0x03598EDC BL 0x1C16F20
	0x03598EE0 BL 0x1C16F28
	0x03598EE4 BL 0x1C16F20
	0x03598EE8 BL 0x1C16F20
	0x03598EEC BL 0x1C16F20
	0x03598EF0 BL 0x1C16F20
	0x03598EF4 BL 0x1C16F20
	0x03598EF8 B 0x3598F44
	0x03598EFC B 0x3598F44
	0x03598F00 B 0x3598F44
	0x03598F04 B 0x3598F44
	0x03598F08 B 0x3598F44
	0x03598F0C B 0x3598F44
	0x03598F10 B 0x3598F44
	0x03598F14 B 0x3598F44
	0x03598F18 B 0x3598F44
	0x03598F1C B 0x3598F44
	0x03598F20 B 0x3598F44
	0x03598F24 B 0x3598F44
	0x03598F28 B 0x3598F44
	0x03598F2C B 0x3598F44
	0x03598F30 B 0x3598F44
	0x03598F34 B 0x3598F44
	0x03598F38 B 0x3598F44
	0x03598F3C B 0x3598F44
	0x03598F40 B 0x3598F44
	0x03598F44 MOV X20, X0
	0x03598F48 CMP W1, 0x1
	0x03598F4C B.NE 0x3598FDC
	0x03598F50 MOV X0, X20
	0x03598F54 BL 0x3EB1AD0
	0x03598F58 MOV X20, X0
	0x03598F5C ADRP X0, 0xB5B000
	0x03598F60 LDR X0, [X0 + 0x7D0]
	0x03598F64 BL 0x1C16D08
	0x03598F68 LDR X8, [X20]
	0x03598F6C LDR X1, [X8]
	0x03598F70 BL 0x1C17270
	0x03598F74 TBZ X0, 0x0, 0x3598FB4
	0x03598F78 LDR X20, [X20]
	0x03598F7C BL 0x3EB1AE0
	0x03598F80 MOVN W8, 0x1
	0x03598F84 STR W8, [X19], #0x8
	0x03598F88 ADRP X0, 0xB5E000
	0x03598F8C LDR X0, [X0 + 0x280]
	0x03598F90 BL 0x1C16D08
	0x03598F94 LDR W8, [X0 + 0xE0]
	0x03598F98 CBNZ W8, 0x3598FA0
	0x03598F9C BL 0x1C16DFC
	0x03598FA0 MOV X0, X19
	0x03598FA4 MOV X1, X20
	0x03598FA8 MOV X2, X31
	0x03598FAC BL 0x32C4908
	0x03598FB0 B 0x3598EB8
	0x03598FB4 MOVZ W0, 0x8
	0x03598FB8 BL 0x3EB1AF0
	0x03598FBC LDR X8, [X20]
	0x03598FC0 STR X8, [X0]
	0x03598FC4 ADRP X1, 0x91C000
	0x03598FC8 ADD X1, X1, 0xE58
	0x03598FCC MOV X2, X31
	0x03598FD0 BL 0x3EB1B00
	0x03598FD4 MOV X20, X0
	0x03598FD8 BL 0x3EB1AE0
	0x03598FDC MOV X0, X20
	0x03598FE0 BL 0x1D2C690
	0x03598FE4 BL 0x1990590
	0x03598FE8 STR X30, [X31 - 0x30]!
	0x03598FEC STP X22, X21, [X31 + 0x10]
	0x03598FF0 STP X20, X19, [X31 + 0x20]
	0x03598FF4 ADRP X21, 0xE47000
	0x03598FF8 ADRP X22, 0xB5E000
	0x03598FFC LDRB W8, [X21 + 0xFCA]
	0x03599000 B 0x3EB18F4
	0x03599004 MOV X19, X1
	0x03599008 MOV X20, X0
	0x0359900C TBNZ X8, 0x0, 0x3599024
	0x03599010 ADRP X0, 0xB5D000
	0x03599014 LDR X0, [X0 + 0x280]
	0x03599018 BL 0x1C16CF4
	0x0359901C MOVZ W8, 0x1
	0x03599020 STRB W8, [X21 + 0xFCA]
	0x03599024 LDR X0, [X22]
	0x03599028 LDR W8, [X0 + 0xE0]
	0x0359902C CBNZ W8, 0x3599034
	0x03599030 BL 0x1C16DFC
	0x03599034 ADD X0, X20, 0x8
	0x03599038 MOV X1, X19
	0x0359903C LDP X20, X19, [X31 + 0x20]
	0x03599040 LDP X22, X21, [X31 + 0x10]
	0x03599044 MOV X2, X31
	0x03599048 LDR X30, [X31], #0x30
	0x0359904C B 0x32C477C
	0x03599050 SUB X31, X31, 0x60
	0x03599054 STP X30, X27, [X31 + 0x10]
	0x03599058 STP X26, X25, [X31 + 0x20]
	0x0359905C STP X24, X23, [X31 + 0x30]
	0x03599060 STP X22, X21, [X31 + 0x40]
	0x03599064 STP X20, X19, [X31 + 0x50]
	0x03599068 ADRP X20, 0xE46000
	0x0359906C LDRB W8, [X20 + 0xFCB]
	0x03599070 MOV X19, X0
	0x03599074 TBNZ X8, 0x0, 0x3599158
	0x03599078 ADRP X0, 0xB9E000
	0x0359907C LDR X0, [X0 + 0xC8]
	0x03599080 BL 0x1C16CF4
	0x03599084 ADRP X0, 0xB5D000
	0x03599088 LDR X0, [X0 + 0x280]
	0x0359908C BL 0x1C16CF4
	0x03599090 ADRP X0, 0xB63000
	0x03599094 LDR X0, [X0 + 0x8D8]
	0x03599098 BL 0x1C16CF4
	0x0359909C ADRP X0, 0xB5B000
	0x035990A0 LDR X0, [X0 + 0x810]
	0x035990A4 BL 0x1C16CF4
	0x035990A8 ADRP X0, 0xB5B000
	0x035990AC LDR X0, [X0 + 0x6C0]
	0x035990B0 BL 0x1C16CF4
	0x035990B4 ADRP X0, 0xB5B000
	0x035990B8 LDR X0, [X0 + 0x6D0]
	0x035990BC BL 0x1C16CF4
	0x035990C0 ADRP X0, 0xB9E000
	0x035990C4 LDR X0, [X0 + 0x58]
	0x035990C8 BL 0x1C16CF4
	0x035990CC ADRP X0, 0xB5D000
	0x035990D0 LDR X0, [X0 + 0x1E0]
	0x035990D4 BL 0x1C16CF4
	0x035990D8 ADRP X0, 0xB5D000
	0x035990DC LDR X0, [X0 + 0x1F0]
	0x035990E0 BL 0x1C16CF4
	0x035990E4 ADRP X0, 0xB5D000
	0x035990E8 LDR X0, [X0 + 0x1F8]
	0x035990EC BL 0x1C16CF4
	0x035990F0 ADRP X0, 0xB63000
	0x035990F4 LDR X0, [X0 + 0x3A0]
	0x035990F8 BL 0x1C16CF4
	0x035990FC ADRP X0, 0xB5C000
	0x03599100 LDR X0, [X0 + 0xA28]
	0x03599104 BL 0x1C16CF4
	0x03599108 ADRP X0, 0xB9E000
	0x0359910C LDR X0, [X0 + 0xD0]
	0x03599110 BL 0x1C16CF4
	0x03599114 ADRP X0, 0xB95000
	0x03599118 LDR X0, [X0 + 0x7D0]
	0x0359911C BL 0x1C16CF4
	0x03599120 ADRP X0, 0xB96000
	0x03599124 LDR X0, [X0 + 0x2E8]
	0x03599128 BL 0x1C16CF4
	0x0359912C ADRP X0, 0xB95000
	0x03599130 LDR X0, [X0 + 0x7D8]
	0x03599134 BL 0x1C16CF4
	0x03599138 ADRP X0, 0xB5A000
	0x0359913C LDR X0, [X0 + 0x988]
	0x03599140 BL 0x1C16CF4
	0x03599144 ADRP X0, 0xB83000
	0x03599148 LDR X0, [X0 + 0x4C8]
	0x0359914C BL 0x1C16CF4
	0x03599150 MOVZ W8, 0x1
	0x03599154 STRB W8, [X20 + 0xFCB]
	0x03599158 STR X31, [X31 + 0x8]
	0x0359915C ADRP X27, 0xB5D000
	0x03599160 LDR W8, [X19]
	0x03599164 LDR X27, [X27 + 0x280]
	0x03599168 CBZ W8, 0x359935C
	0x0359916C LDR X21, [X19 + 0x20]
	0x03599170 CBZ X21, 0x3599470
	0x03599174 ADRP X8, 0xB5C000
	0x03599178 LDR X8, [X8 + 0xA28]
	0x0359917C LDR X0, [X8]
	0x03599180 ADRP X8, 0xB9E000
	0x03599184 LDR X8, [X8 + 0xD0]
	0x03599188 LDR X24, [X19 + 0x28]
	0x0359918C LDR W9, [X0 + 0xE0]
	0x03599190 LDR X20, [X8]
	0x03599194 CBNZ W9, 0x359919C
	0x03599198 BL 0x1C16DFC
	0x0359919C MOV X0, X21
	0x035991A0 MOV X1, X31
	0x035991A4 BL 0x3624D20
	0x035991A8 CBZ X20, 0x35994B8
	0x035991AC ADRP X8, 0xB96000
	0x035991B0 LDR X8, [X8 + 0x2E8]
	0x035991B4 MOV X2, X0
	0x035991B8 LDR X1, [X8]
	0x035991BC MOV X0, X20
	0x035991C0 MOV X3, X31
	0x035991C4 BL 0x32293BC
	0x035991C8 CBZ X24, 0x35994BC
	0x035991CC MOV X21, X0
	0x035991D0 LDR X0, [X24 + 0x20]
	0x035991D4 CBZ X0, 0x35994C0
	0x035991D8 ADRP X8, 0xB5A000
	0x035991DC LDR X8, [X8 + 0x988]
	0x035991E0 LDR X20, [X8]
	0x035991E4 MOV X1, X31
	0x035991E8 BL 0x361B448
	0x035991EC ADRP X8, 0xB63000
	0x035991F0 LDR X8, [X8 + 0x8D8]
	0x035991F4 MOV X22, X0
	0x035991F8 LDR X0, [X8]
	0x035991FC MOVZ W1, 0x1
	0x03599200 BL 0x1C16D6C
	0x03599204 MOV X1, X0
	0x03599208 CBZ X1, 0x35994C4
	0x0359920C LDR W8, [X1 + 0x18]
	0x03599210 CBZ W8, 0x35994C8
	0x03599214 MOVZ W8, 0x2F
	0x03599218 STRH W8, [X1 + 0x20]
	0x0359921C CBZ X22, 0x35994CC
	0x03599220 MOV X0, X22
	0x03599224 MOV X2, X31
	0x03599228 BL 0x322BC58
	0x0359922C MOV X1, X21
	0x03599230 MOV X2, X31
	0x03599234 BL 0x321B938
	0x03599238 ADRP X8, 0xB63000
	0x0359923C LDR X8, [X8 + 0x3A0]
	0x03599240 MOV X22, X0
	0x03599244 LDR X23, [X24 + 0x20]
	0x03599248 LDR X0, [X8]
	0x0359924C BL 0x1C16F10
	0x03599250 MOV X21, X0
	0x03599254 MOV X1, X23
	0x03599258 MOV X2, X31
	0x0359925C BL 0x36281F8
	0x03599260 CBZ X21, 0x35994D0
	0x03599264 MOV X0, X21
	0x03599268 MOV X1, X22
	0x0359926C MOV X2, X31
	0x03599270 BL 0x36288CC
	0x03599274 MOV X0, X21
	0x03599278 MOV X1, X20
	0x0359927C MOV X2, X31
	0x03599280 BL 0x3628980
	0x03599284 MOV X0, X21
	0x03599288 MOV X1, X31
	0x0359928C BL 0x3628A38
	0x03599290 ADRP X8, 0xB83000
	0x03599294 ADRP X9, 0xB5B000
	0x03599298 LDR X8, [X8 + 0x4C8]
	0x0359929C LDR X9, [X9 + 0x6D0]
	0x035992A0 MOV X20, X0
	0x035992A4 LDR X21, [X8]
	0x035992A8 LDR X0, [X9]
	0x035992AC BL 0x1C16F10
	0x035992B0 ADRP X8, 0xB5B000
	0x035992B4 LDR X8, [X8 + 0x6C0]
	0x035992B8 MOV X22, X0
	0x035992BC LDR X1, [X8]
	0x035992C0 BL 0x2AA4804
	0x035992C4 ADRP X8, 0xB95000
	0x035992C8 LDR X8, [X8 + 0x7D8]
	0x035992CC LDR X1, [X19 + 0x30]
	0x035992D0 LDR X0, [X8]
	0x035992D4 MOV X2, X31
	0x035992D8 BL 0x321B938
	0x035992DC CBZ X22, 0x35994D4
	0x035992E0 ADRP X8, 0xB95000
	0x035992E4 LDR X8, [X8 + 0x7D0]
	0x035992E8 ADRP X9, 0xB5B000
	0x035992EC LDR X9, [X9 + 0x810]
	0x035992F0 MOV X2, X0
	0x035992F4 LDR X1, [X8]
	0x035992F8 LDR X3, [X9]
	0x035992FC MOV X0, X22
	0x03599300 BL 0x2AA5098
	0x03599304 LDR X23, [X24 + 0x10]
	0x03599308 CBZ X23, 0x35994D8
	0x0359930C ADRP X10, 0xB9E000
	0x03599310 LDR X10, [X10 + 0x58]
	0x03599314 LDR X8, [X23]
	0x03599318 LDR W25, [X24 + 0x18]
	0x0359931C LDP X26, X24, [X19 + 0x38]
	0x03599320 LDR X1, [X10]
	0x03599324 LDRH W9, [X8 + 0x12E]
	0x03599328 CBZ X9, 0x359934C
	0x0359932C LDR X10, [X8 + 0xB0]
	0x03599330 ADD X10, X10, 0x8
	0x03599334 LDUR X11, [X10 - 0x8]
	0x03599338 CMP X11, X1
	0x0359933C B.EQ 0x3599374
	0x03599340 SUBS X9, X9, 0x1
	0x03599344 ADD X10, X10, 0x10
	0x03599348 B.NE 0x3599334
	0x0359934C MOVZ W2, 0x3
	0x03599350 MOV X0, X23
	0x03599354 BL 0x1C5C788
	0x03599358 B 0x3599384
	0x0359935C LDR X8, [X19 + 0x48]
	0x03599360 MOVN W9, 0x0
	0x03599364 STR X8, [X31 + 0x8]
	0x03599368 STR X31, [X19 + 0x48]
	0x0359936C STR W9, [X19]
	0x03599370 B 0x35993E0
	0x03599374 LDR W9, [X10]
	0x03599378 ADD W9, W9, 0x3
	0x0359937C ADD X8, X8, W9, 0x4, SXTW
	0x03599380 ADD X0, X8, 0x138
	0x03599384 LDP X8, X9, [X0]
	0x03599388 MOV X0, X23
	0x0359938C MOV X1, X21
	0x03599390 MOV X2, X20
	0x03599394 MOV X3, X22
	0x03599398 MOV X4, X31
	0x0359939C MOV W5, W25
	0x035993A0 MOV X6, X26
	0x035993A4 MOV X7, X24
	0x035993A8 STR X9, [X31]
	0x035993AC BLR X8
	0x035993B0 CBZ X0, 0x35994DC
	0x035993B4 ADRP X8, 0xB5D000
	0x035993B8 LDR X8, [X8 + 0x1F8]
	0x035993BC LDR X1, [X8]
	0x035993C0 BL 0x269F5D0
	0x035993C4 ADRP X8, 0xB5D000
	0x035993C8 LDR X8, [X8 + 0x1F0]
	0x035993CC STR X0, [X31 + 0x8]
	0x035993D0 LDR X1, [X8]
	0x035993D4 ADD X0, X31, 0x8

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X30
	003 Move [X31+32], X28
	004 Move [X31+40], X27
	005 Move [X31+48], X26
	006 Move [X31+56], X25
	007 Move [X31+64], X24
	008 Move [X31+72], X23
	009 Move [X31+80], X22
	010 Move [X31+88], X21
	011 Move [X31+96], X20
	012 Move [X31+104], X19
	013 Move X20, 0xE48000
	014 Move W8, [X20+4037]
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {70}
	020 Move X0, 0xBA0000
	021 Move X0, [X0+136]
	022 Call 0x1C17CF4
	023 Move X0, 0xB5F000
	024 Move X0, [X0+640]
	025 Call 0x1C17CF4
	026 Move X0, 0xB65000
	027 Move X0, [X0+2264]
	028 Call 0x1C17CF4
	029 Move X0, 0xB5D000
	030 Move X0, [X0+2064]
	031 Call 0x1C17CF4
	032 Move X0, 0xB5D000
	033 Move X0, [X0+1728]
	034 Call 0x1C17CF4
	035 Move X0, 0xB5D000
	036 Move X0, [X0+1744]
	037 Call 0x1C17CF4
	038 Move X0, 0xBA0000
	039 Move X0, [X0+88]
	040 Call 0x1C17CF4
	041 Move X0, 0xB5F000
	042 Move X0, [X0+480]
	043 Call 0x1C17CF4
	044 Move X0, 0xB5F000
	045 Move X0, [X0+496]
	046 Call 0x1C17CF4
	047 Move X0, 0xB5F000
	048 Move X0, [X0+504]
	049 Call 0x1C17CF4
	050 Move X0, 0xB65000
	051 Move X0, [X0+928]
	052 Call 0x1C17CF4
	053 Move X0, 0xB85000
	054 Move X0, [X0+1240]
	055 Call 0x1C17CF4
	056 Move X0, 0xBA0000
	057 Move X0, [X0+144]
	058 Call 0x1C17CF4
	059 Move X0, 0xB97000
	060 Move X0, [X0+2000]
	061 Call 0x1C17CF4
	062 Move X0, 0xB97000
	063 Move X0, [X0+2008]
	064 Call 0x1C17CF4
	065 Move X0, 0xB5C000
	066 Move X0, [X0+2440]
	067 Call 0x1C17CF4
	068 Move W8, 1
	069 Move [X20+4037], W8
	070 Move [X31+24], X31
	071 Move X28, 0xB5F000
	072 Move W8, [X19]
	073 Move X28, [X28+640]
	074 Compare W8, 0
	075 JumpIfEqual {203}
	076 Move X8, [X19+32]
	077 Compare X8, 0
	078 JumpIfEqual {287}
	079 Move X25, [X19+40]
	080 Compare X25, 0
	081 JumpIfEqual {305}
	082 Move X0, [X25+32]
	083 Compare X0, 0
	084 JumpIfEqual {306}
	085 Move X8, 0xBA0000
	086 Move X9, 0xB5C000
	087 Move X8, [X8+144]
	088 Move X9, [X9+2440]
	089 Move X21, [X8]
	090 Move X20, [X9]
	091 Move X1, X31
	092 Call Uri.get_AbsolutePath, X0
	093 Move X8, 0xB65000
	094 Move X8, [X8+2264]
	095 Move X22, X0
	096 Move X0, [X8]
	097 Move W1, 1
	098 Call 0x1C17D6C
	099 Move X1, X0
	100 Compare X1, 0
	101 JumpIfEqual {307}
	102 Move W8, [X1+24]
	103 Compare W8, 0
	104 JumpIfEqual {308}
	105 Move W8, 47
	106 NotImplemented "Instruction STRH not yet implemented."
	107 Compare X22, 0
	108 JumpIfEqual {309}
	109 Move X0, X22
	110 Move X2, X31
	111 Call String.TrimEnd, X0, X1
	112 Move X1, X21
	113 Move X2, X31
	114 Call String.Concat, X0, X1
	115 Move X8, 0xB65000
	116 Move X8, [X8+928]
	117 Move X22, X0
	118 Move X23, [X25+32]
	119 Move X0, [X8]
	120 Call 0x1C17F10
	121 Move X21, X0
	122 Move X1, X23
	123 Move X2, X31
	124 Call UriBuilder..ctor, X0, X1
	125 Compare X21, 0
	126 JumpIfEqual {310}
	127 Move X0, X21
	128 Move X1, X22
	129 Move X2, X31
	130 Call UriBuilder.set_Path, X0, X1
	131 Move X0, X21
	132 Move X1, X20
	133 Move X2, X31
	134 Call UriBuilder.set_Query, X0, X1
	135 Move X0, X21
	136 Move X1, X31
	137 Call UriBuilder.get_Uri, X0
	138 Move X8, 0xB84000
	139 Move X9, 0xB5C000
	140 Move X8, [X8+1240]
	141 Move X9, [X9+1744]
	142 Move X20, X0
	143 Move X21, [X8]
	144 Move X0, [X9]
	145 Call 0x1C17F10
	146 Move X8, 0xB5C000
	147 Move X8, [X8+1728]
	148 Move X22, X0
	149 Move X1, [X8]
	150 Call Dictionary`2<Object, Object>..ctor, X0
	151 Move X8, 0xB96000
	152 Move X8, [X8+2008]
	153 Move X1, [X19+48]
	154 Move X0, [X8]
	155 Move X2, X31
	156 Call String.Concat, X0, X1
	157 Compare X22, 0
	158 JumpIfEqual {311}
	159 Move X8, 0xB96000
	160 Move X8, [X8+2000]
	161 Move X9, 0xB5C000
	162 Move X9, [X9+2064]
	163 Move X2, X0
	164 Move X1, [X8]
	165 Move X3, [X9]
	166 Move X0, X22
	167 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	168 Move X0, [X19+32]
	169 Call JsonWriter.ToJson, X0
	170 Move X23, X0
	171 Move X0, X31
	172 Call Encoding.get_UTF8
	173 Compare X0, 0
	174 JumpIfEqual {312}
	175 Move X8, [X0]
	176 Move X9, [X8+616]
	177 Move X2, [X8+624]
	178 Move X1, X23
	179 NotImplemented "Instruction BLR not yet implemented."
	180 Move X24, [X25+16]
	181 Compare X24, 0
	182 JumpIfEqual {313}
	183 Move X10, 0xB9F000
	184 Move X10, [X10+88]
	185 Move X8, [X24]
	186 Move W26, [X25+24]
	187 Move X27, [X19+56]
	188 Move X25, [X19+64]
	189 Move X1, [X10]
	190 NotImplemented "Instruction LDRH not yet implemented."
	191 Move X23, X0
	192 Compare X9, 0
	193 JumpIfEqual {200}
	194 Move X10, [X8+176]
	195 Add X10, X10, 8
	196 NotImplemented "Instruction LDUR not yet implemented."
	197 NotImplemented "Instruction CMP not yet implemented."
	198 Subtract X9, X9, 1
	199 Add X10, X10, 16
	200 Move W2, 3
	201 Move X0, X24
	202 Call 0x1C5D788
	203 Move X8, [X19+72]
	204 Move TEMP, 0
	205 Not TEMP
	206 Move W9, TEMP
	207 Move [X31+24], X8
	208 Move [X19+72], X31
	209 Move [X19], W9
	210 Move W9, [X10]
	211 Add W9, W9, 3
	212 Add X8, X8, W9
	213 Add X0, X8, 312
	214 Move X8, [X0]
	215 Move X9, [X0+8]
	216 Move X0, X24
	217 Move X1, X21
	218 Move X2, X20
	219 Move X3, X22
	220 Move X4, X23
	221 Move W5, W26
	222 Move X6, X27
	223 Move X7, X25
	224 Move [X31], X9
	225 NotImplemented "Instruction BLR not yet implemented."
	226 Compare X0, 0
	227 JumpIfEqual {314}
	228 Move X8, 0xB5E000
	229 Move X8, [X8+504]
	230 Move X1, [X8]
	231 Call Task`1<Object>.GetAwaiter, X0
	232 Move X8, 0xB5E000
	233 Move X8, [X8+496]
	234 Move [X31+24], X0
	235 Move X1, [X8]
	236 Add X0, X31, 24
	237 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	238 Move TEMP, X0
	239 And TEMP, TEMP, 1
	240 Compare TEMP, 1
	241 JumpIfNotEqual {259}
	242 Move X8, 0xB5E000
	243 Move X8, [X8+480]
	244 Add X0, X31, 24
	245 Move X1, [X8]
	246 Call TaskAwaiter`1<Object>.GetResult, X0
	247 Move TEMP, 1
	248 Not TEMP
	249 Move W8, TEMP
	250 Move [X19+8], W8
	251 Move X0, [X28]
	252 Move W8, [X0+224]
	253 Compare W8, 0
	254 JumpIfNotEqual {256}
	255 Call 0x1C17DFC
	256 Move X0, X19
	257 Move X1, X31
	258 Call AsyncTaskMethodBuilder.SetResult, X0
	259 Move [X19], W31
	260 Move X8, [X31+24]
	261 Move [X19+72], X8
	262 Move X0, [X28]
	263 Move W8, [X0+224]
	264 Compare W8, 0
	265 JumpIfNotEqual {267}
	266 Call 0x1C17DFC
	267 Move X8, 0xB9F000
	268 Move X8, [X8+136]
	269 Add X0, X19, 8
	270 Move X3, [X8]
	271 Add X1, X31, 24
	272 Move X2, X19
	273 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	274 Move X20, [X31+96]
	275 Move X19, [X31+104]
	276 Move X22, [X31+80]
	277 Move X21, [X31+88]
	278 Move X24, [X31+64]
	279 Move X23, [X31+72]
	280 Move X26, [X31+48]
	281 Move X25, [X31+56]
	282 Move X28, [X31+32]
	283 Move X27, [X31+40]
	284 Move X30, [X31+16]
	285 Add X31, X31, 112
	286 Return 
	287 Move X0, 0xB63000
	288 Move X0, [X0+1400]
	289 Call 0x1C17D08
	290 Call 0x1C17F10
	291 Move X20, X0
	292 Move X0, 0xB96000
	293 Move X0, [X0+3016]
	294 Call 0x1C17D08
	295 Move X1, X0
	296 Move X0, X20
	297 Move X2, X31
	298 Call ArgumentException..ctor, X0, X1
	299 Move X0, 0xB9F000
	300 Move X0, [X0+152]
	301 Call 0x1C17D08
	302 Move X1, X0
	303 Move X0, X20
	304 Call 0x1C17DEC
	305 Call 0x1C17F20
	306 Call 0x1C17F20
	307 Call 0x1C17F20
	308 Call 0x1C17F28
	309 Call 0x1C17F20
	310 Call 0x1C17F20
	311 Call 0x1C17F20
	312 Call 0x1C17F20
	313 Call 0x1C17F20
	314 Call 0x1C17F20
	315 Move X20, X0
	316 NotImplemented "Instruction CMP not yet implemented."
	317 Move X0, X20
	318 Call 0x3EB2AD0
	319 Move X20, X0
	320 Move X0, 0xB5B000
	321 Move X0, [X0+2000]
	322 Call 0x1C17D08
	323 Move X8, [X20]
	324 Move X1, [X8]
	325 Call 0x1C18270
	326 Move TEMP, X0
	327 And TEMP, TEMP, 1
	328 Compare TEMP, 1
	329 JumpIfNotEqual {347}
	330 Move X20, [X20]
	331 Call 0x3EB2AE0
	332 Move TEMP, 1
	333 Not TEMP
	334 Move W8, TEMP
	335 Move [X19+8], W8
	336 Move X0, 0xB5E000
	337 Move X0, [X0+640]
	338 Call 0x1C17D08
	339 Move W8, [X0+224]
	340 Compare W8, 0
	341 JumpIfNotEqual {343}
	342 Call 0x1C17DFC
	343 Move X0, X19
	344 Move X1, X20
	345 Move X2, X31
	346 Call AsyncTaskMethodBuilder.SetException, X0, X1
	347 Move W0, 8
	348 Call 0x3EB2AF0
	349 Move X8, [X20]
	350 Move [X0], X8
	351 Move X1, 0x91C000
	352 Add X1, X1, 3672
	353 Move X2, X31
	354 Call 0x3EB2B00
	355 Move X20, X0
	356 Call 0x3EB2AE0
	357 Move X0, X20
	358 Call 0x1D2D690
	359 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x035993D8 BL 0x2677430
	0x035993DC TBZ X0, 0x0, 0x359941C
	0x035993E0 ADRP X8, 0xB5D000
	0x035993E4 LDR X8, [X8 + 0x1E0]
	0x035993E8 ADD X0, X31, 0x8
	0x035993EC LDR X1, [X8]
	0x035993F0 BL 0x2677474
	0x035993F4 MOVN W8, 0x1
	0x035993F8 STR W8, [X19], #0x8
	0x035993FC LDR X0, [X27]
	0x03599400 LDR W8, [X0 + 0xE0]
	0x03599404 CBNZ W8, 0x359940C
	0x03599408 BL 0x1C16DFC
	0x0359940C MOV X0, X19
	0x03599410 MOV X1, X31
	0x03599414 BL 0x32C4864
	0x03599418 B 0x3599454
	0x0359941C STR W31, [X19]
	0x03599420 LDR X8, [X31 + 0x8]
	0x03599424 STR X8, [X19 + 0x48]
	0x03599428 LDR X0, [X27]
	0x0359942C LDR W8, [X0 + 0xE0]
	0x03599430 CBNZ W8, 0x3599438
	0x03599434 BL 0x1C16DFC
	0x03599438 ADRP X8, 0xB9E000
	0x0359943C LDR X8, [X8 + 0xC8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xE47000
	007 Move X22, 0xB5E000
	008 Move W8, [X21+4038]
	009 Move X22, [X22+640]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xB5E000
	017 Move X0, [X0+640]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+4038], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Add X0, X20, 8
	027 Move X1, X19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X2, X31
	033 Move X30, [X31+48]
	034 Call AsyncTaskMethodBuilder.SetStateMachine, X0, X1
	035 Return 

