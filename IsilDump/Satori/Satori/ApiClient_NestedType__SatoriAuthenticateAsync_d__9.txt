Type: Satori.ApiClient/<SatoriAuthenticateAsync>d__9

Method: System.Void MoveNext()

Disassembly:
	0x0359871C ADRP X8, 0xB96000
	0x03598720 LDR X8, [X8 + 0x7D0]
	0x03598724 ADRP X9, 0xB5C000
	0x03598728 LDR X9, [X9 + 0x810]
	0x0359872C MOV X2, X0
	0x03598730 LDR X1, [X8]
	0x03598734 LDR X3, [X9]
	0x03598738 MOV X0, X22
	0x0359873C BL 0x2AA5098
	0x03598740 LDR X0, [X19 + 0x20]
	0x03598744 BL 0x3597D7C
	0x03598748 MOV X23, X0
	0x0359874C MOV X0, X31
	0x03598750 BL 0x3241948
	0x03598754 CBZ X0, 0x3598960
	0x03598758 LDR X8, [X0]
	0x0359875C LDR X9, [X8 + 0x268]
	0x03598760 LDR X2, [X8 + 0x270]
	0x03598764 MOV X1, X23
	0x03598768 BLR X9
	0x0359876C LDR X24, [X25 + 0x10]
	0x03598770 CBZ X24, 0x3598964
	0x03598774 ADRP X10, 0xB9F000
	0x03598778 LDR X10, [X10 + 0x58]
	0x0359877C LDR X8, [X24]
	0x03598780 LDR W26, [X25 + 0x18]
	0x03598784 LDP X27, X25, [X19 + 0x40]
	0x03598788 LDR X1, [X10]
	0x0359878C LDRH W9, [X8 + 0x12E]
	0x03598790 MOV X23, X0
	0x03598794 CBZ X9, 0x35987B8
	0x03598798 LDR X10, [X8 + 0xB0]
	0x0359879C ADD X10, X10, 0x8
	0x035987A0 LDUR X11, [X10 - 0x8]
	0x035987A4 CMP X11, X1
	0x035987A8 B.EQ 0x35987E0
	0x035987AC SUBS X9, X9, 0x1
	0x035987B0 ADD X10, X10, 0x10
	0x035987B4 B.NE 0x35987A0
	0x035987B8 MOVZ W2, 0x3
	0x035987BC MOV X0, X24
	0x035987C0 BL 0x1C5C788
	0x035987C4 B 0x35987F0
	0x035987C8 LDR X8, [X19 + 0x50]
	0x035987CC MOVN W9, 0x0
	0x035987D0 STR X8, [X31 + 0x18]
	0x035987D4 STR X31, [X19 + 0x50]
	0x035987D8 STR W9, [X19]
	0x035987DC B 0x359884C
	0x035987E0 LDR W9, [X10]
	0x035987E4 ADD W9, W9, 0x3
	0x035987E8 ADD X8, X8, W9, 0x4, SXTW
	0x035987EC ADD X0, X8, 0x138
	0x035987F0 LDP X8, X9, [X0]
	0x035987F4 MOV X0, X24
	0x035987F8 MOV X1, X21
	0x035987FC MOV X2, X20
	0x03598800 MOV X3, X22
	0x03598804 MOV X4, X23
	0x03598808 MOV W5, W26
	0x0359880C MOV X6, X27
	0x03598810 MOV X7, X25
	0x03598814 STR X9, [X31]
	0x03598818 BLR X8
	0x0359881C CBZ X0, 0x3598968
	0x03598820 ADRP X8, 0xB5E000
	0x03598824 LDR X8, [X8 + 0x1F8]
	0x03598828 LDR X1, [X8]
	0x0359882C BL 0x269F5D0
	0x03598830 ADRP X8, 0xB5E000
	0x03598834 LDR X8, [X8 + 0x1F0]
	0x03598838 STR X0, [X31 + 0x18]
	0x0359883C LDR X1, [X8]
	0x03598840 ADD X0, X31, 0x18
	0x03598844 BL 0x2677430
	0x03598848 TBZ X0, 0x0, 0x35988A8
	0x0359884C ADRP X8, 0xB5E000
	0x03598850 LDR X8, [X8 + 0x1E0]
	0x03598854 ADD X0, X31, 0x18
	0x03598858 LDR X1, [X8]
	0x0359885C BL 0x2677474
	0x03598860 ADRP X8, 0xB9F000
	0x03598864 LDR X8, [X8 + 0x60]
	0x03598868 LDR X1, [X8]
	0x0359886C BL 0x22109A8
	0x03598870 MOVN W8, 0x1
	0x03598874 STR W8, [X19], #0x8
	0x03598878 MOV X20, X0
	0x0359887C LDR X0, [X28]
	0x03598880 ADRP X21, 0xB9F000
	0x03598884 LDR W8, [X0 + 0xE0]
	0x03598888 LDR X21, [X21 + 0x50]
	0x0359888C CBNZ W8, 0x3598894
	0x03598890 BL 0x1C16DFC
	0x03598894 LDR X2, [X21]
	0x03598898 MOV X0, X19
	0x0359889C MOV X1, X20
	0x035988A0 BL 0x26322B0
	0x035988A4 B 0x35988E0
	0x035988A8 STR W31, [X19]
	0x035988AC LDR X8, [X31 + 0x18]
	0x035988B0 STR X8, [X19 + 0x50]
	0x035988B4 LDR X0, [X28]
	0x035988B8 LDR W8, [X0 + 0xE0]
	0x035988BC CBNZ W8, 0x35988C4
	0x035988C0 BL 0x1C16DFC
	0x035988C4 ADRP X8, 0xB9F000
	0x035988C8 LDR X8, [X8 + 0xA0]
	0x035988CC ADD X0, X19, 0x8
	0x035988D0 LDR X3, [X8]
	0x035988D4 ADD X1, X31, 0x18
	0x035988D8 MOV X2, X19
	0x035988DC BL 0x1FB8ABC
	0x035988E0 LDP X20, X19, [X31 + 0x60]
	0x035988E4 LDP X22, X21, [X31 + 0x50]
	0x035988E8 LDP X24, X23, [X31 + 0x40]
	0x035988EC LDP X26, X25, [X31 + 0x30]
	0x035988F0 LDP X28, X27, [X31 + 0x20]
	0x035988F4 LDR X30, [X31 + 0x10]
	0x035988F8 ADD X31, X31, 0x70
	0x035988FC RET
	0x03598900 ADRP X0, 0xB63000
	0x03598904 LDR X0, [X0 + 0x578]
	0x03598908 BL 0x1C16D08
	0x0359890C BL 0x1C16F10
	0x03598910 MOV X20, X0
	0x03598914 ADRP X0, 0xB96000
	0x03598918 LDR X0, [X0 + 0xBC8]
	0x0359891C BL 0x1C16D08
	0x03598920 MOV X1, X0
	0x03598924 MOV X0, X20
	0x03598928 MOV X2, X31
	0x0359892C BL 0x3314A68
	0x03598930 ADRP X0, 0xB9F000
	0x03598934 LDR X0, [X0 + 0xB0]
	0x03598938 BL 0x1C16D08
	0x0359893C MOV X1, X0
	0x03598940 MOV X0, X20
	0x03598944 BL 0x1C16DEC
	0x03598948 BL 0x1C16F20
	0x0359894C BL 0x1C16F20
	0x03598950 BL 0x1C16F20
	0x03598954 BL 0x1C16F28
	0x03598958 BL 0x1C16F20
	0x0359895C BL 0x1C16F20
	0x03598960 BL 0x1C16F20
	0x03598964 BL 0x1C16F20
	0x03598968 BL 0x1C16F20
	0x0359896C BL 0x1C16F20
	0x03598970 BL 0x1C16F20
	0x03598974 B 0x35989F0
	0x03598978 B 0x35989F0
	0x0359897C B 0x35989F0
	0x03598980 B 0x35989F0
	0x03598984 B 0x35989F0
	0x03598988 B 0x35989F0
	0x0359898C B 0x35989F0
	0x03598990 B 0x35989F0
	0x03598994 B 0x35989F0
	0x03598998 B 0x35989F0
	0x0359899C B 0x35989F0
	0x035989A0 B 0x35989F0
	0x035989A4 B 0x35989F0
	0x035989A8 B 0x35989F0
	0x035989AC B 0x35989F0
	0x035989B0 B 0x35989F0
	0x035989B4 B 0x35989F0
	0x035989B8 B 0x35989F0
	0x035989BC B 0x35989F0
	0x035989C0 B 0x35989F0
	0x035989C4 B 0x35989F0
	0x035989C8 B 0x35989F0
	0x035989CC B 0x35989F0
	0x035989D0 B 0x35989F0
	0x035989D4 B 0x35989F0
	0x035989D8 B 0x35989F0
	0x035989DC B 0x35989F0
	0x035989E0 B 0x35989F0
	0x035989E4 B 0x35989F0
	0x035989E8 B 0x35989F0
	0x035989EC B 0x35989F0
	0x035989F0 MOV X20, X0
	0x035989F4 CMP W1, 0x1
	0x035989F8 B.NE 0x3598A94
	0x035989FC MOV X0, X20
	0x03598A00 BL 0x3EB1AD0
	0x03598A04 MOV X20, X0
	0x03598A08 ADRP X0, 0xB5B000
	0x03598A0C LDR X0, [X0 + 0x7D0]
	0x03598A10 BL 0x1C16D08
	0x03598A14 LDR X8, [X20]
	0x03598A18 LDR X1, [X8]
	0x03598A1C BL 0x1C17270
	0x03598A20 TBZ X0, 0x0, 0x3598A6C
	0x03598A24 LDR X20, [X20]
	0x03598A28 BL 0x3EB1AE0
	0x03598A2C MOVN W8, 0x1
	0x03598A30 STR W8, [X19], #0x8
	0x03598A34 ADRP X0, 0xB9E000
	0x03598A38 LDR X0, [X0 + 0xF48]
	0x03598A3C BL 0x1C16D08
	0x03598A40 LDR W8, [X0 + 0xE0]
	0x03598A44 CBNZ W8, 0x3598A4C
	0x03598A48 BL 0x1C16DFC
	0x03598A4C ADRP X0, 0xB9F000
	0x03598A50 LDR X0, [X0 + 0x78]
	0x03598A54 BL 0x1C16D08
	0x03598A58 MOV X2, X0
	0x03598A5C MOV X0, X19
	0x03598A60 MOV X1, X20
	0x03598A64 BL 0x26324C8
	0x03598A68 B 0x35988E0
	0x03598A6C MOVZ W0, 0x8
	0x03598A70 BL 0x3EB1AF0
	0x03598A74 LDR X8, [X20]
	0x03598A78 STR X8, [X0]
	0x03598A7C ADRP X1, 0x91C000
	0x03598A80 ADD X1, X1, 0xE58
	0x03598A84 MOV X2, X31
	0x03598A88 BL 0x3EB1B00
	0x03598A8C MOV X20, X0
	0x03598A90 BL 0x3EB1AE0
	0x03598A94 MOV X0, X20
	0x03598A98 BL 0x1D2C690
	0x03598A9C BL 0x1990590
	0x03598AA0 STR X30, [X31 - 0x30]!
	0x03598AA4 STP X22, X21, [X31 + 0x10]
	0x03598AA8 STP X20, X19, [X31 + 0x20]
	0x03598AAC ADRP X22, 0xE47000
	0x03598AB0 ADRP X21, 0xB9E000
	0x03598AB4 LDRB W8, [X22 + 0xFC8]
	0x03598AB8 LDR X21, [X21 + 0xF48]
	0x03598ABC MOV X19, X1
	0x03598AC0 MOV X20, X0
	0x03598AC4 TBNZ X8, 0x0, 0x3598AE8
	0x03598AC8 ADRP X0, 0xB9F000
	0x03598ACC LDR X0, [X0 + 0x80]
	0x03598AD0 BL 0x1C16CF4
	0x03598AD4 ADRP X0, 0xB9E000
	0x03598AD8 LDR X0, [X0 + 0xF48]
	0x03598ADC BL 0x1C16CF4
	0x03598AE0 MOVZ W8, 0x1
	0x03598AE4 STRB W8, [X22 + 0xFC8]
	0x03598AE8 LDR X0, [X21]
	0x03598AEC ADRP X21, 0xB9F000
	0x03598AF0 LDR W8, [X0 + 0xE0]
	0x03598AF4 LDR X21, [X21 + 0x80]
	0x03598AF8 CBNZ W8, 0x3598B00
	0x03598AFC BL 0x1C16DFC
	0x03598B00 LDR X2, [X21]
	0x03598B04 ADD X0, X20, 0x8
	0x03598B08 MOV X1, X19
	0x03598B0C LDP X20, X19, [X31 + 0x20]
	0x03598B10 LDP X22, X21, [X31 + 0x10]
	0x03598B14 LDR X30, [X31], #0x30
	0x03598B18 B 0x2632228
	0x03598B1C SUB X31, X31, 0x60
	0x03598B20 STP X30, X27, [X31 + 0x10]
	0x03598B24 STP X26, X25, [X31 + 0x20]
	0x03598B28 STP X24, X23, [X31 + 0x30]
	0x03598B2C STP X22, X21, [X31 + 0x40]
	0x03598B30 STP X20, X19, [X31 + 0x50]
	0x03598B34 ADRP X20, 0xE47000
	0x03598B38 LDRB W8, [X20 + 0xFC9]
	0x03598B3C MOV X19, X0
	0x03598B40 TBNZ X8, 0x0, 0x3598C0C
	0x03598B44 ADRP X0, 0xB9F000
	0x03598B48 LDR X0, [X0 + 0xB8]
	0x03598B4C BL 0x1C16CF4
	0x03598B50 ADRP X0, 0xB5E000
	0x03598B54 LDR X0, [X0 + 0x280]
	0x03598B58 BL 0x1C16CF4
	0x03598B5C ADRP X0, 0xB64000
	0x03598B60 LDR X0, [X0 + 0x8D8]
	0x03598B64 BL 0x1C16CF4
	0x03598B68 ADRP X0, 0xB5C000
	0x03598B6C LDR X0, [X0 + 0x810]
	0x03598B70 BL 0x1C16CF4
	0x03598B74 ADRP X0, 0xB5C000
	0x03598B78 LDR X0, [X0 + 0x6C0]
	0x03598B7C BL 0x1C16CF4
	0x03598B80 ADRP X0, 0xB5C000
	0x03598B84 LDR X0, [X0 + 0x6D0]
	0x03598B88 BL 0x1C16CF4
	0x03598B8C ADRP X0, 0xB9F000
	0x03598B90 LDR X0, [X0 + 0x58]
	0x03598B94 BL 0x1C16CF4
	0x03598B98 ADRP X0, 0xB5E000
	0x03598B9C LDR X0, [X0 + 0x1E0]
	0x03598BA0 BL 0x1C16CF4
	0x03598BA4 ADRP X0, 0xB5E000
	0x03598BA8 LDR X0, [X0 + 0x1F0]
	0x03598BAC BL 0x1C16CF4
	0x03598BB0 ADRP X0, 0xB5E000
	0x03598BB4 LDR X0, [X0 + 0x1F8]
	0x03598BB8 BL 0x1C16CF4
	0x03598BBC ADRP X0, 0xB64000
	0x03598BC0 LDR X0, [X0 + 0x3A0]
	0x03598BC4 BL 0x1C16CF4
	0x03598BC8 ADRP X0, 0xB9F000
	0x03598BCC LDR X0, [X0 + 0xC0]
	0x03598BD0 BL 0x1C16CF4
	0x03598BD4 ADRP X0, 0xB96000
	0x03598BD8 LDR X0, [X0 + 0x7D0]
	0x03598BDC BL 0x1C16CF4
	0x03598BE0 ADRP X0, 0xB96000
	0x03598BE4 LDR X0, [X0 + 0x7D8]
	0x03598BE8 BL 0x1C16CF4
	0x03598BEC ADRP X0, 0xB5B000
	0x03598BF0 LDR X0, [X0 + 0x988]
	0x03598BF4 BL 0x1C16CF4
	0x03598BF8 ADRP X0, 0xB84000
	0x03598BFC LDR X0, [X0 + 0x4C8]
	0x03598C00 BL 0x1C16CF4
	0x03598C04 MOVZ W8, 0x1
	0x03598C08 STRB W8, [X20 + 0xFC9]
	0x03598C0C STR X31, [X31 + 0x8]
	0x03598C10 ADRP X27, 0xB5E000
	0x03598C14 LDR W8, [X19]
	0x03598C18 LDR X27, [X27 + 0x280]
	0x03598C1C CBZ W8, 0x3598DC0
	0x03598C20 LDR X24, [X19 + 0x20]
	0x03598C24 CBZ X24, 0x3598ED4
	0x03598C28 LDR X0, [X24 + 0x20]
	0x03598C2C CBZ X0, 0x3598ED8
	0x03598C30 ADRP X8, 0xB9F000
	0x03598C34 ADRP X9, 0xB5B000
	0x03598C38 LDR X8, [X8 + 0xC0]
	0x03598C3C LDR X9, [X9 + 0x988]
	0x03598C40 LDR X21, [X8]
	0x03598C44 LDR X20, [X9]
	0x03598C48 MOV X1, X31
	0x03598C4C BL 0x361B448
	0x03598C50 ADRP X8, 0xB64000
	0x03598C54 LDR X8, [X8 + 0x8D8]
	0x03598C58 MOV X22, X0
	0x03598C5C LDR X0, [X8]
	0x03598C60 MOVZ W1, 0x1
	0x03598C64 BL 0x1C16D6C
	0x03598C68 MOV X1, X0
	0x03598C6C CBZ X1, 0x3598EDC
	0x03598C70 LDR W8, [X1 + 0x18]
	0x03598C74 CBZ W8, 0x3598EE0
	0x03598C78 MOVZ W8, 0x2F
	0x03598C7C STRH W8, [X1 + 0x20]
	0x03598C80 CBZ X22, 0x3598EE4
	0x03598C84 MOV X0, X22
	0x03598C88 MOV X2, X31
	0x03598C8C BL 0x322BC58
	0x03598C90 MOV X1, X21
	0x03598C94 MOV X2, X31
	0x03598C98 BL 0x321B938
	0x03598C9C ADRP X8, 0xB64000
	0x03598CA0 LDR X8, [X8 + 0x3A0]
	0x03598CA4 MOV X22, X0
	0x03598CA8 LDR X23, [X24 + 0x20]
	0x03598CAC LDR X0, [X8]
	0x03598CB0 BL 0x1C16F10
	0x03598CB4 MOV X21, X0
	0x03598CB8 MOV X1, X23
	0x03598CBC MOV X2, X31
	0x03598CC0 BL 0x36281F8
	0x03598CC4 CBZ X21, 0x3598EE8
	0x03598CC8 MOV X0, X21
	0x03598CCC MOV X1, X22
	0x03598CD0 MOV X2, X31
	0x03598CD4 BL 0x36288CC
	0x03598CD8 MOV X0, X21
	0x03598CDC MOV X1, X20
	0x03598CE0 MOV X2, X31
	0x03598CE4 BL 0x3628980
	0x03598CE8 MOV X0, X21
	0x03598CEC MOV X1, X31
	0x03598CF0 BL 0x3628A38
	0x03598CF4 ADRP X8, 0xB84000
	0x03598CF8 ADRP X9, 0xB5C000
	0x03598CFC LDR X8, [X8 + 0x4C8]
	0x03598D00 LDR X9, [X9 + 0x6D0]
	0x03598D04 MOV X20, X0
	0x03598D08 LDR X21, [X8]
	0x03598D0C LDR X0, [X9]
	0x03598D10 BL 0x1C16F10
	0x03598D14 ADRP X8, 0xB5C000
	0x03598D18 LDR X8, [X8 + 0x6C0]
	0x03598D1C MOV X22, X0
	0x03598D20 LDR X1, [X8]
	0x03598D24 BL 0x2AA4804
	0x03598D28 ADRP X8, 0xB96000
	0x03598D2C LDR X8, [X8 + 0x7D8]
	0x03598D30 LDR X1, [X19 + 0x28]
	0x03598D34 LDR X0, [X8]
	0x03598D38 MOV X2, X31
	0x03598D3C BL 0x321B938
	0x03598D40 CBZ X22, 0x3598EEC
	0x03598D44 ADRP X8, 0xB96000
	0x03598D48 LDR X8, [X8 + 0x7D0]
	0x03598D4C ADRP X9, 0xB5C000
	0x03598D50 LDR X9, [X9 + 0x810]
	0x03598D54 MOV X2, X0
	0x03598D58 LDR X1, [X8]
	0x03598D5C LDR X3, [X9]
	0x03598D60 MOV X0, X22
	0x03598D64 BL 0x2AA5098
	0x03598D68 LDR X23, [X24 + 0x10]
	0x03598D6C CBZ X23, 0x3598EF0
	0x03598D70 ADRP X10, 0xB9F000
	0x03598D74 LDR X10, [X10 + 0x58]
	0x03598D78 LDR X8, [X23]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X30
	003 Move [X31+32], X28
	004 Move [X31+40], X27
	005 Move [X31+48], X26
	006 Move [X31+56], X25
	007 Move [X31+64], X24
	008 Move [X31+72], X23
	009 Move [X31+80], X22
	010 Move [X31+88], X21
	011 Move [X31+96], X20
	012 Move [X31+104], X19
	013 Move X20, 0xE48000
	014 Move W8, [X20+4035]
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {82}
	020 Move X0, 0xBA0000
	021 Move X0, [X0+72]
	022 Call 0x1C17CF4
	023 Move X0, 0xBA0000
	024 Move X0, [X0+80]
	025 Call 0x1C17CF4
	026 Move X0, 0xB9F000
	027 Move X0, [X0+3912]
	028 Call 0x1C17CF4
	029 Move X0, 0xB65000
	030 Move X0, [X0+2264]
	031 Call 0x1C17CF4
	032 Move X0, 0xB65000
	033 Move X0, [X0+2536]
	034 Call 0x1C17CF4
	035 Move X0, 0xB5D000
	036 Move X0, [X0+2064]
	037 Call 0x1C17CF4
	038 Move X0, 0xB5D000
	039 Move X0, [X0+1728]
	040 Call 0x1C17CF4
	041 Move X0, 0xB5D000
	042 Move X0, [X0+1744]
	043 Call 0x1C17CF4
	044 Move X0, 0xBA0000
	045 Move X0, [X0+88]
	046 Call 0x1C17CF4
	047 Move X0, 0xBA0000
	048 Move X0, [X0+96]
	049 Call 0x1C17CF4
	050 Move X0, 0xB5F000
	051 Move X0, [X0+480]
	052 Call 0x1C17CF4
	053 Move X0, 0xB5F000
	054 Move X0, [X0+496]
	055 Call 0x1C17CF4
	056 Move X0, 0xB5F000
	057 Move X0, [X0+504]
	058 Call 0x1C17CF4
	059 Move X0, 0xB65000
	060 Move X0, [X0+928]
	061 Call 0x1C17CF4
	062 Move X0, 0xB85000
	063 Move X0, [X0+1240]
	064 Call 0x1C17CF4
	065 Move X0, 0xB65000
	066 Move X0, [X0+2440]
	067 Call 0x1C17CF4
	068 Move X0, 0xB97000
	069 Move X0, [X0+2000]
	070 Call 0x1C17CF4
	071 Move X0, 0xB97000
	072 Move X0, [X0+2128]
	073 Call 0x1C17CF4
	074 Move X0, 0xBA0000
	075 Move X0, [X0+104]
	076 Call 0x1C17CF4
	077 Move X0, 0xB5C000
	078 Move X0, [X0+2440]
	079 Call 0x1C17CF4
	080 Move W8, 1
	081 Move [X20+4035], W8
	082 Move [X31+24], X31
	083 Move X28, 0xB9F000
	084 Move W8, [X19]
	085 Move X28, [X28+3912]
	086 Compare W8, 0
	087 JumpIfEqual {251}
	088 Move X8, [X19+32]
	089 Compare X8, 0
	090 JumpIfEqual {343}
	091 Move X25, [X19+40]
	092 Compare X25, 0
	093 JumpIfEqual {361}
	094 Move X0, [X25+32]
	095 Compare X0, 0
	096 JumpIfEqual {362}
	097 Move X8, 0xBA0000
	098 Move X9, 0xB5C000
	099 Move X8, [X8+104]
	100 Move X9, [X9+2440]
	101 Move X21, [X8]
	102 Move X20, [X9]
	103 Move X1, X31
	104 Call Uri.get_AbsolutePath, X0
	105 Move X8, 0xB65000
	106 Move X8, [X8+2264]
	107 Move X22, X0
	108 Move X0, [X8]
	109 Move W1, 1
	110 Call 0x1C17D6C
	111 Move X1, X0
	112 Compare X1, 0
	113 JumpIfEqual {363}
	114 Move W8, [X1+24]
	115 Compare W8, 0
	116 JumpIfEqual {364}
	117 Move W8, 47
	118 NotImplemented "Instruction STRH not yet implemented."
	119 Compare X22, 0
	120 JumpIfEqual {365}
	121 Move X0, X22
	122 Move X2, X31
	123 Call String.TrimEnd, X0, X1
	124 Move X1, X21
	125 Move X2, X31
	126 Call String.Concat, X0, X1
	127 Move X8, 0xB65000
	128 Move X8, [X8+928]
	129 Move X22, X0
	130 Move X23, [X25+32]
	131 Move X0, [X8]
	132 Call 0x1C17F10
	133 Move X21, X0
	134 Move X1, X23
	135 Move X2, X31
	136 Call UriBuilder..ctor, X0, X1
	137 Compare X21, 0
	138 JumpIfEqual {366}
	139 Move X0, X21
	140 Move X1, X22
	141 Move X2, X31
	142 Call UriBuilder.set_Path, X0, X1
	143 Move X0, X21
	144 Move X1, X20
	145 Move X2, X31
	146 Call UriBuilder.set_Query, X0, X1
	147 Move X0, X21
	148 Move X1, X31
	149 Call UriBuilder.get_Uri, X0
	150 Move X8, 0xB85000
	151 Move X9, 0xB5D000
	152 Move X8, [X8+1240]
	153 Move X9, [X9+1744]
	154 Move X20, X0
	155 Move X21, [X8]
	156 Move X0, [X9]
	157 Call 0x1C17F10
	158 Move X8, 0xB5D000
	159 Move X8, [X8+1728]
	160 Move X22, X0
	161 Move X1, [X8]
	162 Call Dictionary`2<Object, Object>..ctor, X0
	163 Move X0, [X19+48]
	164 Move X1, X31
	165 Call String.IsNullOrEmpty, X0
	166 Move TEMP, X0
	167 And TEMP, TEMP, 1
	168 Compare TEMP, 1
	169 JumpIfEqual {216}
	170 Move X0, X31
	171 Call Encoding.get_UTF8
	172 Move X8, 0xB65000
	173 Move X23, X0
	174 Move X0, [X19+48]
	175 Move X2, [X19+56]
	176 Move X8, [X8+2440]
	177 Move X1, [X8]
	178 Move X3, X31
	179 Call String.Concat, X0, X1, X2
	180 Move X1, X0
	181 Compare X23, 0
	182 JumpIfEqual {370}
	183 Move X8, [X23]
	184 Move X9, [X8+616]
	185 Move X2, [X8+624]
	186 Move X0, X23
	187 NotImplemented "Instruction BLR not yet implemented."
	188 Move X8, 0xB65000
	189 Move X8, [X8+2536]
	190 Move X23, X0
	191 Move X0, [X8]
	192 Move W8, [X0+224]
	193 Compare W8, 0
	194 JumpIfNotEqual {196}
	195 Call 0x1C17DFC
	196 Move X0, X23
	197 Move X1, X31
	198 Call Convert.ToBase64String, X0
	199 Move X1, X0
	200 Move X8, 0xB97000
	201 Move X8, [X8+2128]
	202 Move X0, [X8]
	203 Move X2, X31
	204 Call String.Concat, X0, X1
	205 Compare X22, 0
	206 JumpIfEqual {371}
	207 Move X8, 0xB97000
	208 Move X8, [X8+2000]
	209 Move X9, 0xB5D000
	210 Move X9, [X9+2064]
	211 Move X2, X0
	212 Move X1, [X8]
	213 Move X3, [X9]
	214 Move X0, X22
	215 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	216 Move X0, [X19+32]
	217 Call JsonWriter.ToJson, X0
	218 Move X23, X0
	219 Move X0, X31
	220 Call Encoding.get_UTF8
	221 Compare X0, 0
	222 JumpIfEqual {367}
	223 Move X8, [X0]
	224 Move X9, [X8+616]
	225 Move X2, [X8+624]
	226 Move X1, X23
	227 NotImplemented "Instruction BLR not yet implemented."
	228 Move X24, [X25+16]
	229 Compare X24, 0
	230 JumpIfEqual {368}
	231 Move X10, 0xBA0000
	232 Move X10, [X10+88]
	233 Move X8, [X24]
	234 Move W26, [X25+24]
	235 Move X27, [X19+64]
	236 Move X25, [X19+72]
	237 Move X1, [X10]
	238 NotImplemented "Instruction LDRH not yet implemented."
	239 Move X23, X0
	240 Compare X9, 0
	241 JumpIfEqual {248}
	242 Move X10, [X8+176]
	243 Add X10, X10, 8
	244 NotImplemented "Instruction LDUR not yet implemented."
	245 NotImplemented "Instruction CMP not yet implemented."
	246 Subtract X9, X9, 1
	247 Add X10, X10, 16
	248 Move W2, 3
	249 Move X0, X24
	250 Call 0x1C5D788
	251 Move X8, [X19+80]
	252 Move TEMP, 0
	253 Not TEMP
	254 Move W9, TEMP
	255 Move [X31+24], X8
	256 Move [X19+80], X31
	257 Move [X19], W9
	258 Move W9, [X10]
	259 Add W9, W9, 3
	260 Add X8, X8, W9
	261 Add X0, X8, 312
	262 Move X8, [X0]
	263 Move X9, [X0+8]
	264 Move X0, X24
	265 Move X1, X21
	266 Move X2, X20
	267 Move X3, X22
	268 Move X4, X23
	269 Move W5, W26
	270 Move X6, X27
	271 Move X7, X25
	272 Move [X31], X9
	273 NotImplemented "Instruction BLR not yet implemented."
	274 Compare X0, 0
	275 JumpIfEqual {369}
	276 Move X8, 0xB5F000
	277 Move X8, [X8+504]
	278 Move X1, [X8]
	279 Call Task`1<Object>.GetAwaiter, X0
	280 Move X8, 0xB5F000
	281 Move X8, [X8+496]
	282 Move [X31+24], X0
	283 Move X1, [X8]
	284 Add X0, X31, 24
	285 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	286 Move TEMP, X0
	287 And TEMP, TEMP, 1
	288 Compare TEMP, 1
	289 JumpIfNotEqual {315}
	290 Move X8, 0xB5F000
	291 Move X8, [X8+480]
	292 Add X0, X31, 24
	293 Move X1, [X8]
	294 Call TaskAwaiter`1<Object>.GetResult, X0
	295 Move X8, 0xBA0000
	296 Move X8, [X8+96]
	297 Move X1, [X8]
	298 Call 0x22119A8, X0
	299 Move TEMP, 1
	300 Not TEMP
	301 Move W8, TEMP
	302 Move [X19+8], W8
	303 Move X20, X0
	304 Move X0, [X28]
	305 Move X21, 0xBA0000
	306 Move W8, [X0+224]
	307 Move X21, [X21+80]
	308 Compare W8, 0
	309 JumpIfNotEqual {311}
	310 Call 0x1C17DFC
	311 Move X2, [X21]
	312 Move X0, X19
	313 Move X1, X20
	314 Call AsyncTaskMethodBuilder`1<Object>.SetResult, X0, X1
	315 Move [X19], W31
	316 Move X8, [X31+24]
	317 Move [X19+80], X8
	318 Move X0, [X28]
	319 Move W8, [X0+224]
	320 Compare W8, 0
	321 JumpIfNotEqual {323}
	322 Call 0x1C17DFC
	323 Move X8, 0xBA0000
	324 Move X8, [X8+72]
	325 Add X0, X19, 8
	326 Move X3, [X8]
	327 Add X1, X31, 24
	328 Move X2, X19
	329 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	330 Move X20, [X31+96]
	331 Move X19, [X31+104]
	332 Move X22, [X31+80]
	333 Move X21, [X31+88]
	334 Move X24, [X31+64]
	335 Move X23, [X31+72]
	336 Move X26, [X31+48]
	337 Move X25, [X31+56]
	338 Move X28, [X31+32]
	339 Move X27, [X31+40]
	340 Move X30, [X31+16]
	341 Add X31, X31, 112
	342 Return 
	343 Move X0, 0xB64000
	344 Move X0, [X0+1400]
	345 Call 0x1C17D08
	346 Call 0x1C17F10
	347 Move X20, X0
	348 Move X0, 0xB97000
	349 Move X0, [X0+3016]
	350 Call 0x1C17D08
	351 Move X1, X0
	352 Move X0, X20
	353 Move X2, X31
	354 Call ArgumentException..ctor, X0, X1
	355 Move X0, 0xBA0000
	356 Move X0, [X0+112]
	357 Call 0x1C17D08
	358 Move X1, X0
	359 Move X0, X20
	360 Call 0x1C17DEC
	361 Call 0x1C17F20
	362 Call 0x1C17F20
	363 Call 0x1C17F20
	364 Call 0x1C17F28
	365 Call 0x1C17F20
	366 Call 0x1C17F20
	367 Call 0x1C17F20
	368 Call 0x1C17F20
	369 Call 0x1C17F20
	370 Call 0x1C17F20
	371 Call 0x1C17F20
	372 Move X20, X0
	373 NotImplemented "Instruction CMP not yet implemented."
	374 Move X0, X20
	375 Call 0x3EB2AD0
	376 Move X20, X0
	377 Move X0, 0xB5C000
	378 Move X0, [X0+2000]
	379 Call 0x1C17D08
	380 Move X8, [X20]
	381 Move X1, [X8]
	382 Call 0x1C18270
	383 Move TEMP, X0
	384 And TEMP, TEMP, 1
	385 Compare TEMP, 1
	386 JumpIfNotEqual {407}
	387 Move X20, [X20]
	388 Call 0x3EB2AE0
	389 Move TEMP, 1
	390 Not TEMP
	391 Move W8, TEMP
	392 Move [X19+8], W8
	393 Move X0, 0xB9F000
	394 Move X0, [X0+3912]
	395 Call 0x1C17D08
	396 Move W8, [X0+224]
	397 Compare W8, 0
	398 JumpIfNotEqual {400}
	399 Call 0x1C17DFC
	400 Move X0, 0xBA0000
	401 Move X0, [X0+120]
	402 Call 0x1C17D08
	403 Move X2, X0
	404 Move X0, X19
	405 Move X1, X20
	406 Call AsyncTaskMethodBuilder`1<Object>.SetException, X0, X1
	407 Move W0, 8
	408 Call 0x3EB2AF0
	409 Move X8, [X20]
	410 Move [X0], X8
	411 Move X1, 0x91D000
	412 Add X1, X1, 3672
	413 Move X2, X31
	414 Call 0x3EB2B00
	415 Move X20, X0
	416 Call 0x3EB2AE0
	417 Move X0, X20
	418 Call 0x1D2D690
	419 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x03598DF0 MOV X1, X21
	0x03598DF4 MOV X2, X20
	0x03598DF8 MOV X3, X22
	0x03598DFC MOV X4, X31
	0x03598E00 MOV W5, W25
	0x03598E04 MOV X6, X26
	0x03598E08 MOV X7, X24
	0x03598E0C STR X9, [X31]
	0x03598E10 BLR X8
	0x03598E14 CBZ X0, 0x3598EF4
	0x03598E18 ADRP X8, 0xB5E000
	0x03598E1C LDR X8, [X8 + 0x1F8]
	0x03598E20 LDR X1, [X8]
	0x03598E24 BL 0x269F5D0
	0x03598E28 ADRP X8, 0xB5E000
	0x03598E2C LDR X8, [X8 + 0x1F0]
	0x03598E30 STR X0, [X31 + 0x8]
	0x03598E34 LDR X1, [X8]
	0x03598E38 ADD X0, X31, 0x8
	0x03598E3C BL 0x2677430
	0x03598E40 TBZ X0, 0x0, 0x3598E80
	0x03598E44 ADRP X8, 0xB5E000
	0x03598E48 LDR X8, [X8 + 0x1E0]
	0x03598E4C ADD X0, X31, 0x8
	0x03598E50 LDR X1, [X8]
	0x03598E54 BL 0x2677474
	0x03598E58 MOVN W8, 0x1
	0x03598E5C STR W8, [X19], #0x8
	0x03598E60 LDR X0, [X27]
	0x03598E64 LDR W8, [X0 + 0xE0]
	0x03598E68 CBNZ W8, 0x3598E70

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xE48000
	007 Move X21, 0xB9F000
	008 Move W8, [X22+4036]
	009 Move X21, [X21+3912]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xBA0000
	017 Move X0, [X0+128]
	018 Call 0x1C17CF4
	019 Move X0, 0xB9F000
	020 Move X0, [X0+3912]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+4036], W8
	024 Move X0, [X21]
	025 Move X21, 0xBA0000
	026 Move W8, [X0+224]
	027 Move X21, [X21+128]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X2, [X21]
	032 Add X0, X20, 8
	033 Move X1, X19
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Call AsyncTaskMethodBuilder`1<Object>.SetStateMachine, X0, X1
	040 Return 

