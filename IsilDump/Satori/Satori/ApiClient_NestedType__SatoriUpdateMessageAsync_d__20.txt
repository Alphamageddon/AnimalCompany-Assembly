Type: Satori.ApiClient/<SatoriUpdateMessageAsync>d__20

Method: System.Void MoveNext()

Disassembly:
	0x0359E6E4 STP X24, X23, [X31 + 0x80]
	0x0359E6E8 STP X22, X21, [X31 + 0x90]
	0x0359E6EC STP X20, X19, [X31 + 0xA0]
	0x0359E6F0 ADRP X26, 0xE41000
	0x0359E6F4 ADRP X25, 0xB99000
	0x0359E6F8 LDRB W8, [X26 + 0xFE4]
	0x0359E6FC LDR X25, [X25 + 0x268]
	0x0359E700 MOV X19, X5
	0x0359E704 MOV X20, X4
	0x0359E708 MOV X21, X3
	0x0359E70C MOV X22, X2
	0x0359E710 MOV X23, X1
	0x0359E714 MOV X24, X0
	0x0359E718 TBNZ X8, 0x0, 0x359E754
	0x0359E71C ADRP X0, 0xB99000
	0x0359E720 LDR X0, [X0 + 0x270]
	0x0359E724 BL 0x1C16CF4
	0x0359E728 ADRP X0, 0xB99000
	0x0359E72C LDR X0, [X0 + 0x278]
	0x0359E730 BL 0x1C16CF4
	0x0359E734 ADRP X0, 0xB99000
	0x0359E738 LDR X0, [X0 + 0x280]
	0x0359E73C BL 0x1C16CF4
	0x0359E740 ADRP X0, 0xB99000
	0x0359E744 LDR X0, [X0 + 0x268]
	0x0359E748 BL 0x1C16CF4
	0x0359E74C MOVZ W8, 0x1
	0x0359E750 STRB W8, [X26 + 0xFE4]
	0x0359E754 LDR X0, [X25]
	0x0359E758 MOVI V0.2D, 0x0
	0x0359E75C STR X31, [X31 + 0x50]
	0x0359E760 STP V0, V0, [X31 + 0x30]
	0x0359E764 STP V0, V0, [X31 + 0x10]
	0x0359E768 STR V0, [X31]
	0x0359E76C ADRP X25, 0xB99000
	0x0359E770 ADRP X27, 0xB99000
	0x0359E774 ADRP X26, 0xB99000
	0x0359E778 LDR W8, [X0 + 0xE0]
	0x0359E77C LDR X25, [X25 + 0x270]
	0x0359E780 LDR X27, [X27 + 0x278]
	0x0359E784 LDR X26, [X26 + 0x280]
	0x0359E788 CBNZ W8, 0x359E790
	0x0359E78C BL 0x1C16DFC
	0x0359E790 LDR X0, [X25]
	0x0359E794 ADD X8, X31, 0x0
	0x0359E798 ORR X25, X8, 0xF
	0x0359E79C MOV X8, X25
	0x0359E7A0 BL 0x263221C
	0x0359E7A4 LDR X2, [X27]
	0x0359E7A8 MOVN W8, 0x0
	0x0359E7AC ADD X1, X31, 0x0
	0x0359E7B0 MOV X0, X25
	0x0359E7B4 STP X24, X23, [X31 + 0x20]
	0x0359E7B8 STP X22, X21, [X31 + 0x30]
	0x0359E7BC STP X20, X19, [X31 + 0x40]
	0x0359E7C0 STR W8, [X31]
	0x0359E7C4 BL 0x1FCEC14
	0x0359E7C8 LDR X1, [X26]
	0x0359E7CC MOV X0, X25
	0x0359E7D0 BL 0x2632230
	0x0359E7D4 LDP X20, X19, [X31 + 0xA0]
	0x0359E7D8 LDP X22, X21, [X31 + 0x90]
	0x0359E7DC LDP X24, X23, [X31 + 0x80]
	0x0359E7E0 LDP X26, X25, [X31 + 0x70]
	0x0359E7E4 LDP X30, X27, [X31 + 0x60]
	0x0359E7E8 ADD X31, X31, 0xB0
	0x0359E7EC RET
	0x0359E7F0 STP X30, X25, [X31 - 0x40]!
	0x0359E7F4 STP X24, X23, [X31 + 0x10]
	0x0359E7F8 STP X22, X21, [X31 + 0x20]
	0x0359E7FC STP X20, X19, [X31 + 0x30]
	0x0359E800 ADRP X23, 0xE41000
	0x0359E804 LDRB W8, [X23 + 0xFE5]
	0x0359E808 MOV X19, X3
	0x0359E80C MOV X20, X2
	0x0359E810 MOV X21, X1
	0x0359E814 MOV X22, X0
	0x0359E818 TBNZ X8, 0x0, 0x359E83C
	0x0359E81C ADRP X0, 0xB99000
	0x0359E820 LDR X0, [X0 + 0x288]
	0x0359E824 BL 0x1C16CF4
	0x0359E828 ADRP X0, 0xB99000
	0x0359E82C LDR X0, [X0 + 0x290]
	0x0359E830 BL 0x1C16CF4
	0x0359E834 MOVZ W8, 0x1
	0x0359E838 STRB W8, [X23 + 0xFE5]
	0x0359E83C CBZ X21, 0x359E9B4
	0x0359E840 ADRP X25, 0xB99000
	0x0359E844 LDR X8, [X21]
	0x0359E848 LDR X25, [X25 + 0x290]
	0x0359E84C ADRP X23, 0xB99000
	0x0359E850 LDR X22, [X22 + 0x40]
	0x0359E854 LDRH W9, [X8 + 0x12E]
	0x0359E858 LDR X1, [X25]
	0x0359E85C LDR X23, [X23 + 0x288]
	0x0359E860 CBZ X9, 0x359E884
	0x0359E864 LDR X10, [X8 + 0xB0]
	0x0359E868 ADD X10, X10, 0x8
	0x0359E86C LDUR X11, [X10 - 0x8]
	0x0359E870 CMP X11, X1
	0x0359E874 B.EQ 0x359E894
	0x0359E878 SUBS X9, X9, 0x1
	0x0359E87C ADD X10, X10, 0x10
	0x0359E880 B.NE 0x359E86C
	0x0359E884 MOV X0, X21
	0x0359E888 MOV W2, W31
	0x0359E88C BL 0x1C5C788
	0x0359E890 B 0x359E8A0
	0x0359E894 LDRSW X9, [X10]
	0x0359E898 ADD X8, X8, X9, 0x4, LSL
	0x0359E89C ADD X0, X8, 0x138
	0x0359E8A0 LDP X8, X1, [X0]
	0x0359E8A4 MOV X0, X21
	0x0359E8A8 BLR X8
	0x0359E8AC LDR X8, [X23]
	0x0359E8B0 MOV X23, X0
	0x0359E8B4 MOV X0, X8
	0x0359E8B8 BL 0x1C16F10
	0x0359E8BC MOV X1, X31
	0x0359E8C0 MOV X24, X0
	0x0359E8C4 BL 0x33BDD8C
	0x0359E8C8 LDR X8, [X21]
	0x0359E8CC LDR X1, [X25]
	0x0359E8D0 LDRH W9, [X8 + 0x12E]
	0x0359E8D4 CBZ X9, 0x359E8F8
	0x0359E8D8 LDR X10, [X8 + 0xB0]
	0x0359E8DC ADD X10, X10, 0x8
	0x0359E8E0 LDUR X11, [X10 - 0x8]
	0x0359E8E4 CMP X11, X1
	0x0359E8E8 B.EQ 0x359E908
	0x0359E8EC SUBS X9, X9, 0x1
	0x0359E8F0 ADD X10, X10, 0x10
	0x0359E8F4 B.NE 0x359E8E0
	0x0359E8F8 MOVZ W2, 0x5
	0x0359E8FC MOV X0, X21
	0x0359E900 BL 0x1C5C788
	0x0359E904 B 0x359E918
	0x0359E908 LDR W9, [X10]
	0x0359E90C ADD W9, W9, 0x5
	0x0359E910 ADD X8, X8, W9, 0x4, SXTW
	0x0359E914 ADD X0, X8, 0x138
	0x0359E918 LDP X8, X1, [X0]
	0x0359E91C MOV X0, X21
	0x0359E920 BLR X8
	0x0359E924 CBZ X24, 0x359E9B4
	0x0359E928 STR X0, [X24 + 0x10]
	0x0359E92C LDR X8, [X21]
	0x0359E930 LDR X1, [X25]
	0x0359E934 LDRH W9, [X8 + 0x12E]
	0x0359E938 CBZ X9, 0x359E95C
	0x0359E93C LDR X10, [X8 + 0xB0]
	0x0359E940 ADD X10, X10, 0x8
	0x0359E944 LDUR X11, [X10 - 0x8]
	0x0359E948 CMP X11, X1
	0x0359E94C B.EQ 0x359E96C
	0x0359E950 SUBS X9, X9, 0x1
	0x0359E954 ADD X10, X10, 0x10
	0x0359E958 B.NE 0x359E944
	0x0359E95C MOV X0, X21
	0x0359E960 MOV W2, W31
	0x0359E964 BL 0x1C5C788
	0x0359E968 B 0x359E978
	0x0359E96C LDRSW X9, [X10]
	0x0359E970 ADD X8, X8, X9, 0x4, LSL
	0x0359E974 ADD X0, X8, 0x138
	0x0359E978 LDP X8, X1, [X0]
	0x0359E97C MOV X0, X21
	0x0359E980 BLR X8
	0x0359E984 STR X0, [X24 + 0x18]
	0x0359E988 CBZ X22, 0x359E9B4
	0x0359E98C MOV X0, X22
	0x0359E990 MOV X1, X23
	0x0359E994 MOV X2, X24
	0x0359E998 MOV X3, X20
	0x0359E99C MOV X4, X19
	0x0359E9A0 LDP X20, X19, [X31 + 0x30]
	0x0359E9A4 LDP X22, X21, [X31 + 0x20]
	0x0359E9A8 LDP X24, X23, [X31 + 0x10]
	0x0359E9AC LDP X30, X25, [X31], #0x40
	0x0359E9B0 B 0x35969F0
	0x0359E9B4 BL 0x1C16F20
	0x0359E9B8 SUB X31, X31, 0xC0
	0x0359E9BC STP X30, X25, [X31 + 0x80]
	0x0359E9C0 STP X24, X23, [X31 + 0x90]
	0x0359E9C4 STP X22, X21, [X31 + 0xA0]
	0x0359E9C8 STP X20, X19, [X31 + 0xB0]
	0x0359E9CC ADRP X25, 0xE41000
	0x0359E9D0 ADRP X24, 0xB58000
	0x0359E9D4 LDRB W8, [X25 + 0xFE6]
	0x0359E9D8 LDR X24, [X24 + 0x280]
	0x0359E9DC MOV X20, X4
	0x0359E9E0 MOV X21, X3
	0x0359E9E4 MOV X22, X2
	0x0359E9E8 MOV X23, X1
	0x0359E9EC MOV X19, X0
	0x0359E9F0 TBNZ X8, 0x0, 0x359EA14
	0x0359E9F4 ADRP X0, 0xB99000
	0x0359E9F8 LDR X0, [X0 + 0x298]
	0x0359E9FC BL 0x1C16CF4
	0x0359EA00 ADRP X0, 0xB58000
	0x0359EA04 LDR X0, [X0 + 0x280]
	0x0359EA08 BL 0x1C16CF4
	0x0359EA0C MOVZ W8, 0x1
	0x0359EA10 STRB W8, [X25 + 0xFE6]
	0x0359EA14 LDR X0, [X24]
	0x0359EA18 MOVI V0.2D, 0x0
	0x0359EA1C STR X31, [X31 + 0x70]
	0x0359EA20 STP V0, V0, [X31 + 0x50]
	0x0359EA24 STP V0, V0, [X31 + 0x30]
	0x0359EA28 STR V0, [X31 + 0x2]
	0x0359EA2C ADRP X24, 0xB99000
	0x0359EA30 LDR W8, [X0 + 0xE0]
	0x0359EA34 LDR X24, [X24 + 0x298]
	0x0359EA38 CBNZ W8, 0x359EA40
	0x0359EA3C BL 0x1C16DFC
	0x0359EA40 ADD X8, X31, 0x8
	0x0359EA44 MOV X0, X31
	0x0359EA48 BL 0x32C4770
	0x0359EA4C LDUR V0, [X31 + 0x8]
	0x0359EA50 LDR X9, [X31 + 0x18]
	0x0359EA54 LDR X2, [X24]
	0x0359EA58 ADD X8, X31, 0x20
	0x0359EA5C STP X20, X22, [X31 + 0x58]
	0x0359EA60 ORR X20, X8, 0xF
	0x0359EA64 MOVN W10, 0x0
	0x0359EA68 ADD X1, X31, 0x20
	0x0359EA6C MOV X0, X20
	0x0359EA70 STP X23, X21, [X31 + 0x48]
	0x0359EA74 STUR V0, [X31 + 0x28]
	0x0359EA78 STP X9, X19, [X31 + 0x38]
	0x0359EA7C STR W10, [X31 + 0x20]
	0x0359EA80 BL 0x2193AB8
	0x0359EA84 MOV X0, X20
	0x0359EA88 MOV X1, X31
	0x0359EA8C BL 0x32C47F8
	0x0359EA90 LDP X20, X19, [X31 + 0xB0]
	0x0359EA94 LDP X22, X21, [X31 + 0xA0]
	0x0359EA98 LDP X24, X23, [X31 + 0x90]
	0x0359EA9C LDP X30, X25, [X31 + 0x80]
	0x0359EAA0 ADD X31, X31, 0xC0
	0x0359EAA4 RET
	0x0359EAA8 SUB X31, X31, 0xC0
	0x0359EAAC STP X30, X25, [X31 + 0x80]
	0x0359EAB0 STP X24, X23, [X31 + 0x90]
	0x0359EAB4 STP X22, X21, [X31 + 0xA0]
	0x0359EAB8 STP X20, X19, [X31 + 0xB0]
	0x0359EABC ADRP X25, 0xE41000
	0x0359EAC0 ADRP X24, 0xB58000
	0x0359EAC4 LDRB W8, [X25 + 0xFE7]
	0x0359EAC8 LDR X24, [X24 + 0x280]
	0x0359EACC MOV X20, X4
	0x0359EAD0 MOV X21, X3
	0x0359EAD4 MOV X22, X2
	0x0359EAD8 MOV X23, X1
	0x0359EADC MOV X19, X0
	0x0359EAE0 TBNZ X8, 0x0, 0x359EB04
	0x0359EAE4 ADRP X0, 0xB99000
	0x0359EAE8 LDR X0, [X0 + 0x2A0]
	0x0359EAEC BL 0x1C16CF4
	0x0359EAF0 ADRP X0, 0xB58000
	0x0359EAF4 LDR X0, [X0 + 0x280]
	0x0359EAF8 BL 0x1C16CF4
	0x0359EAFC MOVZ W8, 0x1
	0x0359EB00 STRB W8, [X25 + 0xFE7]
	0x0359EB04 LDR X0, [X24]
	0x0359EB08 MOVI V0.2D, 0x0
	0x0359EB0C STR X31, [X31 + 0x70]
	0x0359EB10 STP V0, V0, [X31 + 0x50]
	0x0359EB14 STP V0, V0, [X31 + 0x30]
	0x0359EB18 STR V0, [X31 + 0x2]
	0x0359EB1C ADRP X24, 0xB99000
	0x0359EB20 LDR W8, [X0 + 0xE0]
	0x0359EB24 LDR X24, [X24 + 0x2A0]
	0x0359EB28 CBNZ W8, 0x359EB30
	0x0359EB2C BL 0x1C16DFC
	0x0359EB30 ADD X8, X31, 0x8
	0x0359EB34 MOV X0, X31
	0x0359EB38 BL 0x32C4770
	0x0359EB3C LDUR V0, [X31 + 0x8]
	0x0359EB40 LDR X9, [X31 + 0x18]
	0x0359EB44 LDR X2, [X24]
	0x0359EB48 ADD X8, X31, 0x20
	0x0359EB4C STP X20, X22, [X31 + 0x58]
	0x0359EB50 ORR X20, X8, 0xF
	0x0359EB54 MOVN W10, 0x0
	0x0359EB58 ADD X1, X31, 0x20
	0x0359EB5C MOV X0, X20
	0x0359EB60 STP X23, X21, [X31 + 0x48]
	0x0359EB64 STUR V0, [X31 + 0x28]
	0x0359EB68 STP X9, X19, [X31 + 0x38]
	0x0359EB6C STR W10, [X31 + 0x20]
	0x0359EB70 BL 0x2193BB8
	0x0359EB74 MOV X0, X20
	0x0359EB78 MOV X1, X31
	0x0359EB7C BL 0x32C47F8
	0x0359EB80 LDP X20, X19, [X31 + 0xB0]
	0x0359EB84 LDP X22, X21, [X31 + 0xA0]
	0x0359EB88 LDP X24, X23, [X31 + 0x90]
	0x0359EB8C LDP X30, X25, [X31 + 0x80]
	0x0359EB90 ADD X31, X31, 0xC0
	0x0359EB94 RET
	0x0359EB98 SUB X31, X31, 0x90
	0x0359EB9C STP X30, X25, [X31 + 0x50]
	0x0359EBA0 STP X24, X23, [X31 + 0x60]
	0x0359EBA4 STP X22, X21, [X31 + 0x70]
	0x0359EBA8 STP X20, X19, [X31 + 0x80]
	0x0359EBAC ADRP X24, 0xE41000
	0x0359EBB0 ADRP X23, 0xB98000
	0x0359EBB4 LDRB W8, [X24 + 0xFE8]
	0x0359EBB8 LDR X23, [X23 + 0xF80]
	0x0359EBBC MOV X19, X3
	0x0359EBC0 MOV X20, X2
	0x0359EBC4 MOV X21, X1
	0x0359EBC8 MOV X22, X0
	0x0359EBCC TBNZ X8, 0x0, 0x359EC08
	0x0359EBD0 ADRP X0, 0xB98000
	0x0359EBD4 LDR X0, [X0 + 0xF88]
	0x0359EBD8 BL 0x1C16CF4
	0x0359EBDC ADRP X0, 0xB99000
	0x0359EBE0 LDR X0, [X0 + 0x2A8]
	0x0359EBE4 BL 0x1C16CF4
	0x0359EBE8 ADRP X0, 0xB98000
	0x0359EBEC LDR X0, [X0 + 0xF98]
	0x0359EBF0 BL 0x1C16CF4
	0x0359EBF4 ADRP X0, 0xB98000
	0x0359EBF8 LDR X0, [X0 + 0xF80]
	0x0359EBFC BL 0x1C16CF4
	0x0359EC00 MOVZ W8, 0x1
	0x0359EC04 STRB W8, [X24 + 0xFE8]
	0x0359EC08 LDR X0, [X23]
	0x0359EC0C MOVI V0.2D, 0x0
	0x0359EC10 STR X31, [X31 + 0x40]
	0x0359EC14 STP V0, V0, [X31 + 0x20]
	0x0359EC18 STP V0, V0, [X31]
	0x0359EC1C ADRP X23, 0xB98000
	0x0359EC20 ADRP X25, 0xB99000
	0x0359EC24 ADRP X24, 0xB98000
	0x0359EC28 LDR W8, [X0 + 0xE0]
	0x0359EC2C LDR X23, [X23 + 0xF88]
	0x0359EC30 LDR X25, [X25 + 0x2A8]
	0x0359EC34 LDR X24, [X24 + 0xF98]
	0x0359EC38 CBNZ W8, 0x359EC40
	0x0359EC3C BL 0x1C16DFC
	0x0359EC40 LDR X0, [X23]
	0x0359EC44 ADD X8, X31, 0x0
	0x0359EC48 ORR X23, X8, 0xF
	0x0359EC4C MOV X8, X23
	0x0359EC50 BL 0x263221C
	0x0359EC54 LDR X2, [X25]
	0x0359EC58 MOVN W8, 0x0
	0x0359EC5C ADD X1, X31, 0x0
	0x0359EC60 MOV X0, X23
	0x0359EC64 STP X22, X21, [X31 + 0x20]
	0x0359EC68 STP X20, X19, [X31 + 0x30]
	0x0359EC6C STR W8, [X31]
	0x0359EC70 BL 0x1FCED14
	0x0359EC74 LDR X1, [X24]
	0x0359EC78 MOV X0, X23
	0x0359EC7C BL 0x2632230
	0x0359EC80 LDP X20, X19, [X31 + 0x80]
	0x0359EC84 LDP X22, X21, [X31 + 0x70]
	0x0359EC88 LDP X24, X23, [X31 + 0x60]
	0x0359EC8C LDP X30, X25, [X31 + 0x50]
	0x0359EC90 ADD X31, X31, 0x90
	0x0359EC94 RET
	0x0359EC98 SUB X31, X31, 0xB0
	0x0359EC9C STR X30, [X31 + 0x60]
	0x0359ECA0 STP X26, X25, [X31 + 0x70]
	0x0359ECA4 STP X24, X23, [X31 + 0x80]
	0x0359ECA8 STP X22, X21, [X31 + 0x90]
	0x0359ECAC STP X20, X19, [X31 + 0xA0]
	0x0359ECB0 ADRP X25, 0xE41000
	0x0359ECB4 ADRP X24, 0xB98000
	0x0359ECB8 LDRB W8, [X25 + 0xFE9]
	0x0359ECBC LDR X24, [X24 + 0xF80]
	0x0359ECC0 MOV X19, X4
	0x0359ECC4 MOV X20, X3
	0x0359ECC8 MOV X21, X2
	0x0359ECCC MOV X22, X1
	0x0359ECD0 MOV X23, X0
	0x0359ECD4 TBNZ X8, 0x0, 0x359ED10
	0x0359ECD8 ADRP X0, 0xB98000
	0x0359ECDC LDR X0, [X0 + 0xF88]
	0x0359ECE0 BL 0x1C16CF4
	0x0359ECE4 ADRP X0, 0xB99000
	0x0359ECE8 LDR X0, [X0 + 0x2B0]
	0x0359ECEC BL 0x1C16CF4
	0x0359ECF0 ADRP X0, 0xB98000
	0x0359ECF4 LDR X0, [X0 + 0xF98]
	0x0359ECF8 BL 0x1C16CF4
	0x0359ECFC ADRP X0, 0xB98000
	0x0359ED00 LDR X0, [X0 + 0xF80]
	0x0359ED04 BL 0x1C16CF4
	0x0359ED08 MOVZ W8, 0x1
	0x0359ED0C STRB W8, [X25 + 0xFE9]
	0x0359ED10 LDR X0, [X24]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X30
	003 Move [X31+32], X28
	004 Move [X31+40], X27
	005 Move [X31+48], X26
	006 Move [X31+56], X25
	007 Move [X31+64], X24
	008 Move [X31+72], X23
	009 Move [X31+80], X22
	010 Move [X31+88], X21
	011 Move [X31+96], X20
	012 Move [X31+104], X19
	013 Move X20, 0xE42000
	014 Move W8, [X20+4063]
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {76}
	020 Move X0, 0xB9A000
	021 Move X0, [X0+544]
	022 Call 0x1C17CF4
	023 Move X0, 0xB59000
	024 Move X0, [X0+640]
	025 Call 0x1C17CF4
	026 Move X0, 0xB5F000
	027 Move X0, [X0+2264]
	028 Call 0x1C17CF4
	029 Move X0, 0xB57000
	030 Move X0, [X0+2064]
	031 Call 0x1C17CF4
	032 Move X0, 0xB57000
	033 Move X0, [X0+1728]
	034 Call 0x1C17CF4
	035 Move X0, 0xB57000
	036 Move X0, [X0+1744]
	037 Call 0x1C17CF4
	038 Move X0, 0xB9A000
	039 Move X0, [X0+88]
	040 Call 0x1C17CF4
	041 Move X0, 0xB59000
	042 Move X0, [X0+480]
	043 Call 0x1C17CF4
	044 Move X0, 0xB59000
	045 Move X0, [X0+496]
	046 Call 0x1C17CF4
	047 Move X0, 0xB59000
	048 Move X0, [X0+504]
	049 Call 0x1C17CF4
	050 Move X0, 0xB5F000
	051 Move X0, [X0+928]
	052 Call 0x1C17CF4
	053 Move X0, 0xB58000
	054 Move X0, [X0+2600]
	055 Call 0x1C17CF4
	056 Move X0, 0xB7F000
	057 Move X0, [X0+1248]
	058 Call 0x1C17CF4
	059 Move X0, 0xB9A000
	060 Move X0, [X0+208]
	061 Call 0x1C17CF4
	062 Move X0, 0xB91000
	063 Move X0, [X0+2000]
	064 Call 0x1C17CF4
	065 Move X0, 0xB92000
	066 Move X0, [X0+744]
	067 Call 0x1C17CF4
	068 Move X0, 0xB91000
	069 Move X0, [X0+2008]
	070 Call 0x1C17CF4
	071 Move X0, 0xB56000
	072 Move X0, [X0+2440]
	073 Call 0x1C17CF4
	074 Move W8, 1
	075 Move [X20+4063], W8
	076 Move [X31+24], X31
	077 Move X28, 0xB59000
	078 Move W8, [X19]
	079 Move X28, [X28+640]
	080 Compare W8, 0
	081 JumpIfEqual {232}
	082 Move X21, [X19+32]
	083 Compare X21, 0
	084 JumpIfEqual {316}
	085 Move X8, [X19+40]
	086 Compare X8, 0
	087 JumpIfEqual {334}
	088 Move X8, 0xB58000
	089 Move X8, [X8+2600]
	090 Move X0, [X8]
	091 Move X8, 0xB9A000
	092 Move X8, [X8+208]
	093 Move X25, [X19+48]
	094 Move W9, [X0+224]
	095 Move X20, [X8]
	096 Compare W9, 0
	097 JumpIfNotEqual {99}
	098 Call 0x1C17DFC
	099 Move X0, X21
	100 Move X1, X31
	101 Call Uri.EscapeDataString, X0
	102 Compare X20, 0
	103 JumpIfEqual {352}
	104 Move X8, 0xB92000
	105 Move X8, [X8+744]
	106 Move X2, X0
	107 Move X1, [X8]
	108 Move X0, X20
	109 Move X3, X31
	110 Call String.Replace, X0, X1, X2
	111 Compare X25, 0
	112 JumpIfEqual {353}
	113 Move X21, X0
	114 Move X0, [X25+32]
	115 Compare X0, 0
	116 JumpIfEqual {354}
	117 Move X8, 0xB56000
	118 Move X8, [X8+2440]
	119 Move X20, [X8]
	120 Move X1, X31
	121 Call Uri.get_AbsolutePath, X0
	122 Move X8, 0xB5F000
	123 Move X8, [X8+2264]
	124 Move X22, X0
	125 Move X0, [X8]
	126 Move W1, 1
	127 Call 0x1C17D6C
	128 Move X1, X0
	129 Compare X1, 0
	130 JumpIfEqual {355}
	131 Move W8, [X1+24]
	132 Compare W8, 0
	133 JumpIfEqual {356}
	134 Move W8, 47
	135 NotImplemented "Instruction STRH not yet implemented."
	136 Compare X22, 0
	137 JumpIfEqual {357}
	138 Move X0, X22
	139 Move X2, X31
	140 Call String.TrimEnd, X0, X1
	141 Move X1, X21
	142 Move X2, X31
	143 Call String.Concat, X0, X1
	144 Move X8, 0xB5F000
	145 Move X8, [X8+928]
	146 Move X22, X0
	147 Move X23, [X25+32]
	148 Move X0, [X8]
	149 Call 0x1C17F10
	150 Move X21, X0
	151 Move X1, X23
	152 Move X2, X31
	153 Call UriBuilder..ctor, X0, X1
	154 Compare X21, 0
	155 JumpIfEqual {358}
	156 Move X0, X21
	157 Move X1, X22
	158 Move X2, X31
	159 Call UriBuilder.set_Path, X0, X1
	160 Move X0, X21
	161 Move X1, X20
	162 Move X2, X31
	163 Call UriBuilder.set_Query, X0, X1
	164 Move X0, X21
	165 Move X1, X31
	166 Call UriBuilder.get_Uri, X0
	167 Move X8, 0xB7F000
	168 Move X9, 0xB57000
	169 Move X8, [X8+1248]
	170 Move X9, [X9+1744]
	171 Move X20, X0
	172 Move X21, [X8]
	173 Move X0, [X9]
	174 Call 0x1C17F10
	175 Move X8, 0xB57000
	176 Move X8, [X8+1728]
	177 Move X22, X0
	178 Move X1, [X8]
	179 Call Dictionary`2<Object, Object>..ctor, X0
	180 Move X8, 0xB91000
	181 Move X8, [X8+2008]
	182 Move X1, [X19+56]
	183 Move X0, [X8]
	184 Move X2, X31
	185 Call String.Concat, X0, X1
	186 Compare X22, 0
	187 JumpIfEqual {359}
	188 Move X8, 0xB91000
	189 Move X8, [X8+2000]
	190 Move X9, 0xB57000
	191 Move X9, [X9+2064]
	192 Move X2, X0
	193 Move X1, [X8]
	194 Move X3, [X9]
	195 Move X0, X22
	196 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	197 Move X0, [X19+40]
	198 Call JsonWriter.ToJson, X0
	199 Move X23, X0
	200 Move X0, X31
	201 Call Encoding.get_UTF8
	202 Compare X0, 0
	203 JumpIfEqual {360}
	204 Move X8, [X0]
	205 Move X9, [X8+616]
	206 Move X2, [X8+624]
	207 Move X1, X23
	208 NotImplemented "Instruction BLR not yet implemented."
	209 Move X24, [X25+16]
	210 Compare X24, 0
	211 JumpIfEqual {361}
	212 Move X10, 0xB9A000
	213 Move X10, [X10+88]
	214 Move X8, [X24]
	215 Move W26, [X25+24]
	216 Move X27, [X19+64]
	217 Move X25, [X19+72]
	218 Move X1, [X10]
	219 NotImplemented "Instruction LDRH not yet implemented."
	220 Move X23, X0
	221 Compare X9, 0
	222 JumpIfEqual {229}
	223 Move X10, [X8+176]
	224 Add X10, X10, 8
	225 NotImplemented "Instruction LDUR not yet implemented."
	226 NotImplemented "Instruction CMP not yet implemented."
	227 Subtract X9, X9, 1
	228 Add X10, X10, 16
	229 Move W2, 3
	230 Move X0, X24
	231 Call 0x1C5D788
	232 Move X8, [X19+80]
	233 Move TEMP, 0
	234 Not TEMP
	235 Move W9, TEMP
	236 Move [X31+24], X8
	237 Move [X19+80], X31
	238 Move [X19], W9
	239 Move W9, [X10]
	240 Add W9, W9, 3
	241 Add X8, X8, W9
	242 Add X0, X8, 312
	243 Move X8, [X0]
	244 Move X9, [X0+8]
	245 Move X0, X24
	246 Move X1, X21
	247 Move X2, X20
	248 Move X3, X22
	249 Move X4, X23
	250 Move W5, W26
	251 Move X6, X27
	252 Move X7, X25
	253 Move [X31], X9
	254 NotImplemented "Instruction BLR not yet implemented."
	255 Compare X0, 0
	256 JumpIfEqual {362}
	257 Move X8, 0xB59000
	258 Move X8, [X8+504]
	259 Move X1, [X8]
	260 Call Task`1<Object>.GetAwaiter, X0
	261 Move X8, 0xB59000
	262 Move X8, [X8+496]
	263 Move [X31+24], X0
	264 Move X1, [X8]
	265 Add X0, X31, 24
	266 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	267 Move TEMP, X0
	268 And TEMP, TEMP, 1
	269 Compare TEMP, 1
	270 JumpIfNotEqual {288}
	271 Move X8, 0xB59000
	272 Move X8, [X8+480]
	273 Add X0, X31, 24
	274 Move X1, [X8]
	275 Call TaskAwaiter`1<Object>.GetResult, X0
	276 Move TEMP, 1
	277 Not TEMP
	278 Move W8, TEMP
	279 Move [X19+8], W8
	280 Move X0, [X28]
	281 Move W8, [X0+224]
	282 Compare W8, 0
	283 JumpIfNotEqual {285}
	284 Call 0x1C17DFC
	285 Move X0, X19
	286 Move X1, X31
	287 Call AsyncTaskMethodBuilder.SetResult, X0
	288 Move [X19], W31
	289 Move X8, [X31+24]
	290 Move [X19+80], X8
	291 Move X0, [X28]
	292 Move W8, [X0+224]
	293 Compare W8, 0
	294 JumpIfNotEqual {296}
	295 Call 0x1C17DFC
	296 Move X8, 0xB9A000
	297 Move X8, [X8+544]
	298 Add X0, X19, 8
	299 Move X3, [X8]
	300 Add X1, X31, 24
	301 Move X2, X19
	302 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	303 Move X20, [X31+96]
	304 Move X19, [X31+104]
	305 Move X22, [X31+80]
	306 Move X21, [X31+88]
	307 Move X24, [X31+64]
	308 Move X23, [X31+72]
	309 Move X26, [X31+48]
	310 Move X25, [X31+56]
	311 Move X28, [X31+32]
	312 Move X27, [X31+40]
	313 Move X30, [X31+16]
	314 Add X31, X31, 112
	315 Return 
	316 Move X0, 0xB5E000
	317 Move X0, [X0+1400]
	318 Call 0x1C17D08
	319 Call 0x1C17F10
	320 Move X20, X0
	321 Move X0, 0xB92000
	322 Move X0, [X0+752]
	323 Call 0x1C17D08
	324 Move X1, X0
	325 Move X0, X20
	326 Move X2, X31
	327 Call ArgumentException..ctor, X0, X1
	328 Move X0, 0xB9A000
	329 Move X0, [X0+552]
	330 Call 0x1C17D08
	331 Move X1, X0
	332 Move X0, X20
	333 Call 0x1C17DEC
	334 Move X0, 0xB5E000
	335 Move X0, [X0+1400]
	336 Call 0x1C17D08
	337 Call 0x1C17F10
	338 Move X20, X0
	339 Move X0, 0xB91000
	340 Move X0, [X0+3016]
	341 Call 0x1C17D08
	342 Move X1, X0
	343 Move X0, X20
	344 Move X2, X31
	345 Call ArgumentException..ctor, X0, X1
	346 Move X0, 0xB9A000
	347 Move X0, [X0+552]
	348 Call 0x1C17D08
	349 Move X1, X0
	350 Move X0, X20
	351 Call 0x1C17DEC
	352 Call 0x1C17F20
	353 Call 0x1C17F20
	354 Call 0x1C17F20
	355 Call 0x1C17F20
	356 Call 0x1C17F28
	357 Call 0x1C17F20
	358 Call 0x1C17F20
	359 Call 0x1C17F20
	360 Call 0x1C17F20
	361 Call 0x1C17F20
	362 Call 0x1C17F20
	363 Move X20, X0
	364 NotImplemented "Instruction CMP not yet implemented."
	365 Move X0, X20
	366 Call 0x3EB2AD0
	367 Move X20, X0
	368 Move X0, 0xB56000
	369 Move X0, [X0+2000]
	370 Call 0x1C17D08
	371 Move X8, [X20]
	372 Move X1, [X8]
	373 Call 0x1C18270
	374 Move TEMP, X0
	375 And TEMP, TEMP, 1
	376 Compare TEMP, 1
	377 JumpIfNotEqual {395}
	378 Move X20, [X20]
	379 Call 0x3EB2AE0
	380 Move TEMP, 1
	381 Not TEMP
	382 Move W8, TEMP
	383 Move [X19+8], W8
	384 Move X0, 0xB59000
	385 Move X0, [X0+640]
	386 Call 0x1C17D08
	387 Move W8, [X0+224]
	388 Compare W8, 0
	389 JumpIfNotEqual {391}
	390 Call 0x1C17DFC
	391 Move X0, X19
	392 Move X1, X20
	393 Move X2, X31
	394 Call AsyncTaskMethodBuilder.SetException, X0, X1
	395 Move W0, 8
	396 Call 0x3EB2AF0
	397 Move X8, [X20]
	398 Move [X0], X8
	399 Move X1, 0x917000
	400 Add X1, X1, 3672
	401 Move X2, X31
	402 Call 0x3EB2B00
	403 Move X20, X0
	404 Call 0x3EB2AE0
	405 Move X0, X20
	406 Call 0x1D2D690
	407 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x0359ED14 MOVI V0.2D, 0x0
	0x0359ED18 STR X31, [X31 + 0x50]
	0x0359ED1C STP V0, V0, [X31 + 0x30]
	0x0359ED20 STP V0, V0, [X31 + 0x10]
	0x0359ED24 STR V0, [X31]
	0x0359ED28 ADRP X24, 0xB98000
	0x0359ED2C ADRP X26, 0xB99000
	0x0359ED30 ADRP X25, 0xB98000
	0x0359ED34 LDR W8, [X0 + 0xE0]
	0x0359ED38 LDR X24, [X24 + 0xF88]
	0x0359ED3C LDR X26, [X26 + 0x2B0]
	0x0359ED40 LDR X25, [X25 + 0xF98]
	0x0359ED44 CBNZ W8, 0x359ED4C
	0x0359ED48 BL 0x1C16DFC
	0x0359ED4C LDR X0, [X24]
	0x0359ED50 ADD X8, X31, 0x0
	0x0359ED54 ORR X24, X8, 0xF
	0x0359ED58 MOV X8, X24
	0x0359ED5C BL 0x263221C
	0x0359ED60 LDR X2, [X26]
	0x0359ED64 MOVN W8, 0x0
	0x0359ED68 ADD X1, X31, 0x0
	0x0359ED6C MOV X0, X24
	0x0359ED70 STP X23, X22, [X31 + 0x20]
	0x0359ED74 STP X19, X21, [X31 + 0x38]
	0x0359ED78 STR X20, [X31 + 0x30]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xE42000
	007 Move X22, 0xB59000
	008 Move W8, [X21+4064]
	009 Move X22, [X22+640]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xB59000
	017 Move X0, [X0+640]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+4064], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Add X0, X20, 8
	027 Move X1, X19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X2, X31
	033 Move X30, [X31+48]
	034 Call AsyncTaskMethodBuilder.SetStateMachine, X0, X1
	035 Return 

