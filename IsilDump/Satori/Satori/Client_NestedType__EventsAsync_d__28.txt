Type: Satori.Client/<EventsAsync>d__28

Method: System.Void MoveNext()

Disassembly:
	0x035A2498 MOVZ W8, 0x1
	0x035A249C STR W8, [X19]
	0x035A24A0 LDR X8, [X31]
	0x035A24A4 STR X8, [X19 + 0x50]
	0x035A24A8 LDR X0, [X23]
	0x035A24AC LDR W8, [X0 + 0xE0]
	0x035A24B0 CBNZ W8, 0x35A24B8
	0x035A24B4 BL 0x1C16DFC
	0x035A24B8 ADRP X8, 0xB95000
	0x035A24BC LDR X8, [X8 + 0x450]
	0x035A24C0 ADD X0, X19, 0x8
	0x035A24C4 LDR X3, [X8]
	0x035A24C8 ADD X1, X31, 0x0
	0x035A24CC MOV X2, X19
	0x035A24D0 BL 0x1FBF090
	0x035A24D4 LDP X20, X19, [X31 + 0x40]
	0x035A24D8 LDP X22, X21, [X31 + 0x30]
	0x035A24DC LDP X24, X23, [X31 + 0x20]
	0x035A24E0 LDR X30, [X31 + 0x10]
	0x035A24E4 ADD X31, X31, 0x50
	0x035A24E8 RET
	0x035A24EC BL 0x1C16F20
	0x035A24F0 BL 0x1C16F20
	0x035A24F4 BL 0x1C16F20
	0x035A24F8 BL 0x1C16F20
	0x035A24FC BL 0x1C16F20
	0x035A2500 BL 0x1C16F20
	0x035A2504 BL 0x1C16F20
	0x035A2508 BL 0x1C16F20
	0x035A250C B 0x35A2568
	0x035A2510 B 0x35A2568
	0x035A2514 B 0x35A2568
	0x035A2518 B 0x35A2568
	0x035A251C B 0x35A2568
	0x035A2520 B 0x35A2568
	0x035A2524 B 0x35A2568
	0x035A2528 B 0x35A2568
	0x035A252C B 0x35A2568
	0x035A2530 B 0x35A2568
	0x035A2534 B 0x35A2568
	0x035A2538 B 0x35A2568
	0x035A253C B 0x35A2568
	0x035A2540 B 0x35A2568
	0x035A2544 B 0x35A2568
	0x035A2548 B 0x35A2568
	0x035A254C B 0x35A2568
	0x035A2550 B 0x35A2568
	0x035A2554 B 0x35A2568
	0x035A2558 B 0x35A2568
	0x035A255C B 0x35A2568
	0x035A2560 B 0x35A2568
	0x035A2564 B 0x35A2568
	0x035A2568 MOV X20, X0
	0x035A256C CMP W1, 0x1
	0x035A2570 B.NE 0x35A260C
	0x035A2574 MOV X0, X20
	0x035A2578 BL 0x3EB1AD0
	0x035A257C MOV X20, X0
	0x035A2580 ADRP X0, 0xB51000
	0x035A2584 LDR X0, [X0 + 0x7D0]
	0x035A2588 BL 0x1C16D08
	0x035A258C LDR X8, [X20]
	0x035A2590 LDR X1, [X8]
	0x035A2594 BL 0x1C17270
	0x035A2598 TBZ X0, 0x0, 0x35A25E4
	0x035A259C LDR X20, [X20]
	0x035A25A0 BL 0x3EB1AE0
	0x035A25A4 MOVN W8, 0x1
	0x035A25A8 STR W8, [X19], #0x8
	0x035A25AC ADRP X0, 0xB94000
	0x035A25B0 LDR X0, [X0 + 0xF80]
	0x035A25B4 BL 0x1C16D08
	0x035A25B8 LDR W8, [X0 + 0xE0]
	0x035A25BC CBNZ W8, 0x35A25C4
	0x035A25C0 BL 0x1C16DFC
	0x035A25C4 ADRP X0, 0xB95000
	0x035A25C8 LDR X0, [X0 + 0x120]
	0x035A25CC BL 0x1C16D08
	0x035A25D0 MOV X2, X0
	0x035A25D4 MOV X0, X19
	0x035A25D8 MOV X1, X20
	0x035A25DC BL 0x26324C8
	0x035A25E0 B 0x35A24D4
	0x035A25E4 MOVZ W0, 0x8
	0x035A25E8 BL 0x3EB1AF0
	0x035A25EC LDR X8, [X20]
	0x035A25F0 STR X8, [X0]
	0x035A25F4 ADRP X1, 0x912000
	0x035A25F8 ADD X1, X1, 0xE58
	0x035A25FC MOV X2, X31
	0x035A2600 BL 0x3EB1B00
	0x035A2604 MOV X20, X0
	0x035A2608 BL 0x3EB1AE0
	0x035A260C MOV X0, X20
	0x035A2610 BL 0x1D2C690
	0x035A2614 BL 0x1990590
	0x035A2618 STR X30, [X31 - 0x30]!
	0x035A261C STP X22, X21, [X31 + 0x10]
	0x035A2620 STP X20, X19, [X31 + 0x20]
	0x035A2624 ADRP X22, 0xE3E000
	0x035A2628 ADRP X21, 0xB94000
	0x035A262C LDRB W8, [X22 + 0x5]
	0x035A2630 LDR X21, [X21 + 0xF80]
	0x035A2634 MOV X19, X1
	0x035A2638 MOV X20, X0
	0x035A263C TBNZ X8, 0x0, 0x35A2660
	0x035A2640 ADRP X0, 0xB95000
	0x035A2644 LDR X0, [X0 + 0x128]
	0x035A2648 BL 0x1C16CF4
	0x035A264C ADRP X0, 0xB94000
	0x035A2650 LDR X0, [X0 + 0xF80]
	0x035A2654 BL 0x1C16CF4
	0x035A2658 MOVZ W8, 0x1
	0x035A265C STRB W8, [X22 + 0x5]
	0x035A2660 LDR X0, [X21]
	0x035A2664 ADRP X21, 0xB95000
	0x035A2668 LDR W8, [X0 + 0xE0]
	0x035A266C LDR X21, [X21 + 0x128]
	0x035A2670 CBNZ W8, 0x35A2678
	0x035A2674 BL 0x1C16DFC
	0x035A2678 LDR X2, [X21]
	0x035A267C ADD X0, X20, 0x8
	0x035A2680 MOV X1, X19
	0x035A2684 LDP X20, X19, [X31 + 0x20]
	0x035A2688 LDP X22, X21, [X31 + 0x10]
	0x035A268C LDR X30, [X31], #0x30
	0x035A2690 B 0x2632228
	0x035A2694 SUB X31, X31, 0x50
	0x035A2698 STP X30, X25, [X31 + 0x10]
	0x035A269C STP X24, X23, [X31 + 0x20]
	0x035A26A0 STP X22, X21, [X31 + 0x30]
	0x035A26A4 STP X20, X19, [X31 + 0x40]
	0x035A26A8 ADRP X20, 0xE3E000
	0x035A26AC LDRB W8, [X20 + 0x6]
	0x035A26B0 MOV X19, X0
	0x035A26B4 TBNZ X8, 0x0, 0x35A275C
	0x035A26B8 ADRP X0, 0xB95000
	0x035A26BC LDR X0, [X0 + 0x458]
	0x035A26C0 BL 0x1C16CF4
	0x035A26C4 ADRP X0, 0xB95000
	0x035A26C8 LDR X0, [X0 + 0x460]
	0x035A26CC BL 0x1C16CF4
	0x035A26D0 ADRP X0, 0xB95000
	0x035A26D4 LDR X0, [X0 + 0x2B8]
	0x035A26D8 BL 0x1C16CF4
	0x035A26DC ADRP X0, 0xB95000
	0x035A26E0 LDR X0, [X0 + 0x468]
	0x035A26E4 BL 0x1C16CF4
	0x035A26E8 ADRP X0, 0xB95000
	0x035A26EC LDR X0, [X0 + 0x470]
	0x035A26F0 BL 0x1C16CF4
	0x035A26F4 ADRP X0, 0xB51000
	0x035A26F8 LDR X0, [X0 + 0xE00]
	0x035A26FC BL 0x1C16CF4
	0x035A2700 ADRP X0, 0xB95000
	0x035A2704 LDR X0, [X0 + 0x478]
	0x035A2708 BL 0x1C16CF4
	0x035A270C ADRP X0, 0xB95000
	0x035A2710 LDR X0, [X0 + 0x480]
	0x035A2714 BL 0x1C16CF4
	0x035A2718 ADRP X0, 0xB51000
	0x035A271C LDR X0, [X0 + 0xE18]
	0x035A2720 BL 0x1C16CF4
	0x035A2724 ADRP X0, 0xB51000
	0x035A2728 LDR X0, [X0 + 0xAC8]
	0x035A272C BL 0x1C16CF4
	0x035A2730 ADRP X0, 0xB95000
	0x035A2734 LDR X0, [X0 + 0x488]
	0x035A2738 BL 0x1C16CF4
	0x035A273C ADRP X0, 0xB95000
	0x035A2740 LDR X0, [X0 + 0x490]
	0x035A2744 BL 0x1C16CF4
	0x035A2748 ADRP X0, 0xB95000
	0x035A274C LDR X0, [X0 + 0x498]
	0x035A2750 BL 0x1C16CF4
	0x035A2754 MOVZ W8, 0x1
	0x035A2758 STRB W8, [X20 + 0x6]
	0x035A275C STR X31, [X31 + 0x8]
	0x035A2760 LDR W23, [X19]
	0x035A2764 CBZ W23, 0x35A2820
	0x035A2768 ADRP X8, 0xB51000
	0x035A276C LDR X8, [X8 + 0xAC8]
	0x035A2770 LDP X20, X21, [X19 + 0x20]
	0x035A2774 LDR X0, [X8]
	0x035A2778 MOVZ W1, 0x1
	0x035A277C BL 0x1C16D6C
	0x035A2780 MOV X2, X0
	0x035A2784 CBZ X0, 0x35A2BDC
	0x035A2788 LDR W8, [X2 + 0x18]
	0x035A278C CBZ W8, 0x35A2BE0
	0x035A2790 LDR X8, [X19 + 0x30]
	0x035A2794 STR X8, [X2 + 0x20]
	0x035A2798 CBZ X20, 0x35A2BE4
	0x035A279C LDP X3, X4, [X19 + 0x38]
	0x035A27A0 MOV X0, X20
	0x035A27A4 MOV X1, X21
	0x035A27A8 BL 0x359F270
	0x035A27AC CBZ X0, 0x35A2BE8
	0x035A27B0 ADRP X8, 0xB95000
	0x035A27B4 LDR X8, [X8 + 0x498]
	0x035A27B8 LDR X1, [X8]
	0x035A27BC BL 0x269F5D0
	0x035A27C0 ADRP X8, 0xB95000
	0x035A27C4 LDR X8, [X8 + 0x490]
	0x035A27C8 STR X0, [X31 + 0x8]
	0x035A27CC LDR X1, [X8]
	0x035A27D0 ADD X0, X31, 0x8
	0x035A27D4 BL 0x2677430
	0x035A27D8 TBNZ X0, 0x0, 0x35A2834
	0x035A27DC STR W31, [X19]
	0x035A27E0 LDR X8, [X31 + 0x8]
	0x035A27E4 STR X8, [X19 + 0x48]
	0x035A27E8 ADRP X8, 0xB95000
	0x035A27EC LDR X8, [X8 + 0x2B8]
	0x035A27F0 LDR X0, [X8]
	0x035A27F4 LDR W8, [X0 + 0xE0]
	0x035A27F8 CBNZ W8, 0x35A2800
	0x035A27FC BL 0x1C16DFC
	0x035A2800 ADRP X8, 0xB95000
	0x035A2804 LDR X8, [X8 + 0x458]
	0x035A2808 ADD X0, X19, 0x8
	0x035A280C LDR X3, [X8]
	0x035A2810 ADD X1, X31, 0x8
	0x035A2814 MOV X2, X19
	0x035A2818 BL 0x1FBF2A4
	0x035A281C B 0x35A2BA8
	0x035A2820 LDR X8, [X19 + 0x48]
	0x035A2824 MOVN W23, 0x0
	0x035A2828 STR X8, [X31 + 0x8]
	0x035A282C STR X31, [X19 + 0x48]
	0x035A2830 STR W23, [X19]
	0x035A2834 ADRP X8, 0xB95000
	0x035A2838 LDR X8, [X8 + 0x488]
	0x035A283C ADD X0, X31, 0x8
	0x035A2840 LDR X1, [X8]
	0x035A2844 BL 0x2677474
	0x035A2848 MOV X20, X0
	0x035A284C CBZ X0, 0x35A2BC8
	0x035A2850 ADRP X10, 0xB95000
	0x035A2854 LDR X8, [X20]
	0x035A2858 LDR X10, [X10 + 0x468]
	0x035A285C LDRH W9, [X8 + 0x12E]
	0x035A2860 LDR X1, [X10]
	0x035A2864 CBZ X9, 0x35A2888
	0x035A2868 LDR X10, [X8 + 0xB0]
	0x035A286C ADD X10, X10, 0x8
	0x035A2870 LDUR X11, [X10 - 0x8]
	0x035A2874 CMP X11, X1
	0x035A2878 B.EQ 0x35A2898
	0x035A287C SUBS X9, X9, 0x1
	0x035A2880 ADD X10, X10, 0x10
	0x035A2884 B.NE 0x35A2870
	0x035A2888 MOV X0, X20
	0x035A288C MOV W2, W31
	0x035A2890 BL 0x1C5C788
	0x035A2894 B 0x35A28A4
	0x035A2898 LDRSW X9, [X10]
	0x035A289C ADD X8, X8, X9, 0x4, LSL
	0x035A28A0 ADD X0, X8, 0x138
	0x035A28A4 LDP X8, X1, [X0]
	0x035A28A8 MOV X0, X20
	0x035A28AC BLR X8
	0x035A28B0 MOV X20, X0
	0x035A28B4 CBZ X0, 0x35A2BCC
	0x035A28B8 ADRP X10, 0xB95000
	0x035A28BC LDR X8, [X20]
	0x035A28C0 LDR X10, [X10 + 0x478]
	0x035A28C4 LDRH W9, [X8 + 0x12E]
	0x035A28C8 LDR X1, [X10]
	0x035A28CC CBZ X9, 0x35A28F0
	0x035A28D0 LDR X10, [X8 + 0xB0]
	0x035A28D4 ADD X10, X10, 0x8
	0x035A28D8 LDUR X11, [X10 - 0x8]
	0x035A28DC CMP X11, X1
	0x035A28E0 B.EQ 0x35A2900
	0x035A28E4 SUBS X9, X9, 0x1
	0x035A28E8 ADD X10, X10, 0x10
	0x035A28EC B.NE 0x35A28D8
	0x035A28F0 MOV X0, X20
	0x035A28F4 MOV W2, W31
	0x035A28F8 BL 0x1C5C788
	0x035A28FC B 0x35A290C
	0x035A2900 LDRSW X9, [X10]
	0x035A2904 ADD X8, X8, X9, 0x4, LSL
	0x035A2908 ADD X0, X8, 0x138
	0x035A290C LDP X8, X1, [X0]
	0x035A2910 MOV X0, X20
	0x035A2914 BLR X8
	0x035A2918 MOV X20, X0
	0x035A291C CBZ X0, 0x35A2BD0
	0x035A2920 ADRP X22, 0xB51000
	0x035A2924 ADRP X24, 0xB95000
	0x035A2928 ADRP X25, 0xB95000
	0x035A292C LDR X22, [X22 + 0xE18]
	0x035A2930 LDR X24, [X24 + 0x480]
	0x035A2934 LDR X25, [X25 + 0x470]
	0x035A2938 LDR X8, [X20]
	0x035A293C LDR X1, [X22]
	0x035A2940 LDRH W9, [X8 + 0x12E]
	0x035A2944 CBZ X9, 0x35A2968
	0x035A2948 LDR X10, [X8 + 0xB0]
	0x035A294C ADD X10, X10, 0x8
	0x035A2950 LDUR X11, [X10 - 0x8]
	0x035A2954 CMP X11, X1
	0x035A2958 B.EQ 0x35A2978
	0x035A295C SUBS X9, X9, 0x1
	0x035A2960 ADD X10, X10, 0x10
	0x035A2964 B.NE 0x35A2950
	0x035A2968 MOV X0, X20
	0x035A296C MOV W2, W31
	0x035A2970 BL 0x1C5C788
	0x035A2974 B 0x35A2984
	0x035A2978 LDRSW X9, [X10]
	0x035A297C ADD X8, X8, X9, 0x4, LSL
	0x035A2980 ADD X0, X8, 0x138
	0x035A2984 LDP X8, X1, [X0]
	0x035A2988 MOV X0, X20
	0x035A298C BLR X8
	0x035A2990 TBZ X0, 0x0, 0x35A2A74
	0x035A2994 LDR X8, [X20]
	0x035A2998 LDR X1, [X24]
	0x035A299C LDRH W9, [X8 + 0x12E]
	0x035A29A0 CBZ X9, 0x35A29C4
	0x035A29A4 LDR X10, [X8 + 0xB0]
	0x035A29A8 ADD X10, X10, 0x8
	0x035A29AC LDUR X11, [X10 - 0x8]
	0x035A29B0 CMP X11, X1
	0x035A29B4 B.EQ 0x35A29D4
	0x035A29B8 SUBS X9, X9, 0x1
	0x035A29BC ADD X10, X10, 0x10
	0x035A29C0 B.NE 0x35A29AC
	0x035A29C4 MOV X0, X20
	0x035A29C8 MOV W2, W31
	0x035A29CC BL 0x1C5C788
	0x035A29D0 B 0x35A29E0
	0x035A29D4 LDRSW X9, [X10]
	0x035A29D8 ADD X8, X8, X9, 0x4, LSL
	0x035A29DC ADD X0, X8, 0x138
	0x035A29E0 LDP X8, X1, [X0]
	0x035A29E4 MOV X0, X20
	0x035A29E8 BLR X8
	0x035A29EC MOV X21, X0
	0x035A29F0 CBZ X0, 0x35A2BC0
	0x035A29F4 LDR X8, [X21]
	0x035A29F8 LDR X1, [X25]
	0x035A29FC LDRH W9, [X8 + 0x12E]
	0x035A2A00 CBZ X9, 0x35A2A24
	0x035A2A04 LDR X10, [X8 + 0xB0]
	0x035A2A08 ADD X10, X10, 0x8
	0x035A2A0C LDUR X11, [X10 - 0x8]
	0x035A2A10 CMP X11, X1
	0x035A2A14 B.EQ 0x35A2A34
	0x035A2A18 SUBS X9, X9, 0x1
	0x035A2A1C ADD X10, X10, 0x10
	0x035A2A20 B.NE 0x35A2A0C
	0x035A2A24 MOVZ W2, 0x1
	0x035A2A28 MOV X0, X21
	0x035A2A2C BL 0x1C5C788
	0x035A2A30 B 0x35A2A44
	0x035A2A34 LDR W9, [X10]
	0x035A2A38 ADD W9, W9, 0x1
	0x035A2A3C ADD X8, X8, W9, 0x4, SXTW
	0x035A2A40 ADD X0, X8, 0x138
	0x035A2A44 LDP X8, X1, [X0]
	0x035A2A48 MOV X0, X21
	0x035A2A4C BLR X8
	0x035A2A50 CBZ X0, 0x35A2BC4
	0x035A2A54 LDR X1, [X19 + 0x30]
	0x035A2A58 MOV X2, X31
	0x035A2A5C BL 0x322693C
	0x035A2A60 TBZ X0, 0x0, 0x35A2938
	0x035A2A64 MOV X22, X31
	0x035A2A68 MOVZ W24, 0x7
	0x035A2A6C TBNZ X23, 0x1F, 0x35A2A84
	0x035A2A70 B 0x35A2AE8
	0x035A2A74 MOV X22, X31
	0x035A2A78 MOV X21, X31
	0x035A2A7C MOVZ W24, 0x8
	0x035A2A80 TBZ X23, 0x1F, 0x35A2AE8
	0x035A2A84 CBZ X20, 0x35A2AE8
	0x035A2A88 ADRP X10, 0xB51000
	0x035A2A8C LDR X8, [X20]
	0x035A2A90 LDR X10, [X10 + 0xE00]
	0x035A2A94 LDRH W9, [X8 + 0x12E]
	0x035A2A98 LDR X1, [X10]
	0x035A2A9C CBZ X9, 0x35A2AC0
	0x035A2AA0 LDR X10, [X8 + 0xB0]
	0x035A2AA4 ADD X10, X10, 0x8
	0x035A2AA8 LDUR X11, [X10 - 0x8]
	0x035A2AAC CMP X11, X1
	0x035A2AB0 B.EQ 0x35A2AD0
	0x035A2AB4 SUBS X9, X9, 0x1
	0x035A2AB8 ADD X10, X10, 0x10
	0x035A2ABC B.NE 0x35A2AA8
	0x035A2AC0 MOV X0, X20
	0x035A2AC4 MOV W2, W31
	0x035A2AC8 BL 0x1C5C788
	0x035A2ACC B 0x35A2ADC
	0x035A2AD0 LDRSW X9, [X10]
	0x035A2AD4 ADD X8, X8, X9, 0x4, LSL
	0x035A2AD8 ADD X0, X8, 0x138
	0x035A2ADC LDP X8, X1, [X0]
	0x035A2AE0 MOV X0, X20
	0x035A2AE4 BLR X8
	0x035A2AE8 CBNZ X22, 0x35A2BD4
	0x035A2AEC CMP W24, 0x7
	0x035A2AF0 B.EQ 0x35A2B70
	0x035A2AF4 CMP W24, 0x8
	0x035A2AF8 B.EQ 0x35A2B00
	0x035A2AFC CBNZ W24, 0x35A2BA8
	0x035A2B00 LDR X20, [X19 + 0x30]
	0x035A2B04 ADRP X0, 0xB95000
	0x035A2B08 LDR X0, [X0 + 0x4A0]
	0x035A2B0C BL 0x1C16D08
	0x035A2B10 MOV X21, X0
	0x035A2B14 ADRP X0, 0xB82000
	0x035A2B18 LDR X0, [X0 + 0x318]
	0x035A2B1C BL 0x1C16D08
	0x035A2B20 MOV X2, X0
	0x035A2B24 MOV X0, X21
	0x035A2B28 MOV X1, X20
	0x035A2B2C MOV X3, X31
	0x035A2B30 BL 0x32274B8
	0x035A2B34 MOV X20, X0
	0x035A2B38 ADRP X0, 0xB59000
	0x035A2B3C LDR X0, [X0 + 0x578]
	0x035A2B40 BL 0x1C16D08
	0x035A2B44 BL 0x1C16F10
	0x035A2B48 MOV X21, X0
	0x035A2B4C MOV X1, X20
	0x035A2B50 MOV X2, X31
	0x035A2B54 BL 0x3314A68
	0x035A2B58 ADRP X0, 0xB95000
	0x035A2B5C LDR X0, [X0 + 0x4A8]
	0x035A2B60 BL 0x1C16D08
	0x035A2B64 MOV X1, X0
	0x035A2B68 MOV X0, X21
	0x035A2B6C BL 0x1C16DEC
	0x035A2B70 MOVN W8, 0x1
	0x035A2B74 STR W8, [X19], #0x8
	0x035A2B78 ADRP X8, 0xB95000
	0x035A2B7C LDR X8, [X8 + 0x2B8]
	0x035A2B80 LDR X0, [X8]
	0x035A2B84 LDR W8, [X0 + 0xE0]
	0x035A2B88 CBNZ W8, 0x35A2B90
	0x035A2B8C BL 0x1C16DFC
	0x035A2B90 ADRP X8, 0xB95000
	0x035A2B94 LDR X8, [X8 + 0x460]
	0x035A2B98 MOV X0, X19
	0x035A2B9C MOV X1, X21
	0x035A2BA0 LDR X2, [X8]
	0x035A2BA4 BL 0x26322B0
	0x035A2BA8 LDP X20, X19, [X31 + 0x40]
	0x035A2BAC LDP X22, X21, [X31 + 0x30]
	0x035A2BB0 LDP X24, X23, [X31 + 0x20]
	0x035A2BB4 LDP X30, X25, [X31 + 0x10]
	0x035A2BB8 ADD X31, X31, 0x50
	0x035A2BBC RET
	0x035A2BC0 BL 0x1C16F20
	0x035A2BC4 BL 0x1C16F20
	0x035A2BC8 BL 0x1C16F20
	0x035A2BCC BL 0x1C16F20
	0x035A2BD0 BL 0x1C16F20
	0x035A2BD4 MOV X0, X22
	0x035A2BD8 BL 0x1C16F18
	0x035A2BDC BL 0x1C16F20
	0x035A2BE0 BL 0x1C16F28
	0x035A2BE4 BL 0x1C16F20
	0x035A2BE8 BL 0x1C16F20
	0x035A2BEC B 0x35A2C20
	0x035A2BF0 B 0x35A2C20
	0x035A2BF4 B 0x35A2C20
	0x035A2BF8 B 0x35A2C20
	0x035A2BFC B 0x35A2C20
	0x035A2C00 B 0x35A2C20
	0x035A2C04 B 0x35A2C20
	0x035A2C08 B 0x35A2C40
	0x035A2C0C B 0x35A2C20
	0x035A2C10 B 0x35A2C20
	0x035A2C14 B 0x35A2C20
	0x035A2C18 B 0x35A2C20
	0x035A2C1C B 0x35A2C20
	0x035A2C20 MOV X21, X0
	0x035A2C24 STR X1, [X31]
	0x035A2C28 B 0x35A2CE0
	0x035A2C2C B 0x35A2C40
	0x035A2C30 B 0x35A2C40
	0x035A2C34 B 0x35A2C40
	0x035A2C38 B 0x35A2C40
	0x035A2C3C B 0x35A2C40
	0x035A2C40 MOV X21, X0
	0x035A2C44 CMP W1, 0x1
	0x035A2C48 STR X1, [X31]
	0x035A2C4C B.NE 0x35A2C70
	0x035A2C50 MOV X0, X21
	0x035A2C54 BL 0x3EB1AD0
	0x035A2C58 LDR X22, [X0]
	0x035A2C5C BL 0x3EB1AE0
	0x035A2C60 MOV W24, W31
	0x035A2C64 MOV X21, X31
	0x035A2C68 TBNZ X23, 0x1F, 0x35A2A84
	0x035A2C6C B 0x35A2AE8
	0x035A2C70 MOV X22, X31
	0x035A2C74 TBZ X23, 0x1F, 0x35A2CDC
	0x035A2C78 CBZ X20, 0x35A2CDC
	0x035A2C7C ADRP X10, 0xB51000
	0x035A2C80 LDR X8, [X20]
	0x035A2C84 LDR X10, [X10 + 0xE00]
	0x035A2C88 LDRH W9, [X8 + 0x12E]
	0x035A2C8C LDR X1, [X10]
	0x035A2C90 CBZ X9, 0x35A2CB4
	0x035A2C94 LDR X10, [X8 + 0xB0]
	0x035A2C98 ADD X10, X10, 0x8
	0x035A2C9C LDUR X11, [X10 - 0x8]
	0x035A2CA0 CMP X11, X1
	0x035A2CA4 B.EQ 0x35A2CC4
	0x035A2CA8 SUBS X9, X9, 0x1
	0x035A2CAC ADD X10, X10, 0x10
	0x035A2CB0 B.NE 0x35A2C9C
	0x035A2CB4 MOV X0, X20
	0x035A2CB8 MOV W2, W31
	0x035A2CBC BL 0x1C5C788
	0x035A2CC0 B 0x35A2CD0
	0x035A2CC4 LDRSW X9, [X10]
	0x035A2CC8 ADD X8, X8, X9, 0x4, LSL
	0x035A2CCC ADD X0, X8, 0x138
	0x035A2CD0 LDP X8, X1, [X0]
	0x035A2CD4 MOV X0, X20
	0x035A2CD8 BLR X8
	0x035A2CDC CBNZ X22, 0x35A2D7C
	0x035A2CE0 LDR X8, [X31]
	0x035A2CE4 CMP W8, 0x1
	0x035A2CE8 B.NE 0x35A2D9C
	0x035A2CEC MOV X0, X21
	0x035A2CF0 BL 0x3EB1AD0
	0x035A2CF4 MOV X20, X0
	0x035A2CF8 ADRP X0, 0xB51000
	0x035A2CFC LDR X0, [X0 + 0x7D0]
	0x035A2D00 BL 0x1C16D08
	0x035A2D04 LDR X8, [X20]
	0x035A2D08 LDR X1, [X8]
	0x035A2D0C BL 0x1C17270
	0x035A2D10 TBZ X0, 0x0, 0x35A2D5C
	0x035A2D14 LDR X20, [X20]
	0x035A2D18 BL 0x3EB1AE0
	0x035A2D1C MOVN W8, 0x1
	0x035A2D20 STR W8, [X19], #0x8
	0x035A2D24 ADRP X0, 0xB95000
	0x035A2D28 LDR X0, [X0 + 0x2B8]
	0x035A2D2C BL 0x1C16D08
	0x035A2D30 LDR W8, [X0 + 0xE0]
	0x035A2D34 CBNZ W8, 0x35A2D3C
	0x035A2D38 BL 0x1C16DFC
	0x035A2D3C ADRP X0, 0xB95000
	0x035A2D40 LDR X0, [X0 + 0x4B0]
	0x035A2D44 BL 0x1C16D08
	0x035A2D48 MOV X2, X0
	0x035A2D4C MOV X0, X19
	0x035A2D50 MOV X1, X20
	0x035A2D54 BL 0x26324C8
	0x035A2D58 B 0x35A2BA8
	0x035A2D5C MOVZ W0, 0x8
	0x035A2D60 BL 0x3EB1AF0
	0x035A2D64 LDR X8, [X20]
	0x035A2D68 STR X8, [X0]
	0x035A2D6C ADRP X1, 0x912000
	0x035A2D70 ADD X1, X1, 0xE58
	0x035A2D74 MOV X2, X31
	0x035A2D78 BL 0x3EB1B00
	0x035A2D7C MOV X0, X22
	0x035A2D80 BL 0x1C16F18

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+32], X30
	003 Move [X31+40], X27
	004 Move [X31+48], X26
	005 Move [X31+56], X25
	006 Move [X31+64], X24
	007 Move [X31+72], X23
	008 Move [X31+80], X22
	009 Move [X31+88], X21
	010 Move [X31+96], X20
	011 Move [X31+104], X19
	012 Move X20, 0xE3F000
	013 Move W8, [X20]
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {72}
	019 Move X0, 0xB96000
	020 Move X0, [X0+976]
	021 Call 0x1C17CF4
	022 Move X0, 0xB96000
	023 Move X0, [X0+1032]
	024 Call 0x1C17CF4
	025 Move X0, 0xB96000
	026 Move X0, [X0+1040]
	027 Call 0x1C17CF4
	028 Move X0, 0xB55000
	029 Move X0, [X0+640]
	030 Call 0x1C17CF4
	031 Move X0, 0xB96000
	032 Move X0, [X0+832]
	033 Call 0x1C17CF4
	034 Move X0, 0xB53000
	035 Move X0, [X0+2544]
	036 Call 0x1C17CF4
	037 Move X0, 0xB52000
	038 Move X0, [X0+3584]
	039 Call 0x1C17CF4
	040 Move X0, 0xB96000
	041 Move X0, [X0+1048]
	042 Call 0x1C17CF4
	043 Move X0, 0xB96000
	044 Move X0, [X0+1056]
	045 Call 0x1C17CF4
	046 Move X0, 0xB52000
	047 Move X0, [X0+3608]
	048 Call 0x1C17CF4
	049 Move X0, 0xB96000
	050 Move X0, [X0+656]
	051 Call 0x1C17CF4
	052 Move X0, 0xB96000
	053 Move X0, [X0+1000]
	054 Call 0x1C17CF4
	055 Move X0, 0xB96000
	056 Move X0, [X0+1008]
	057 Call 0x1C17CF4
	058 Move X0, 0xB95000
	059 Move X0, [X0+3648]
	060 Call 0x1C17CF4
	061 Move X0, 0xB96000
	062 Move X0, [X0+936]
	063 Call 0x1C17CF4
	064 Move X0, 0xB96000
	065 Move X0, [X0+944]
	066 Call 0x1C17CF4
	067 Move X0, 0xB96000
	068 Move X0, [X0+952]
	069 Call 0x1C17CF4
	070 Move W8, 1
	071 Move [X20], W8
	072 Move [X31+16], X31
	073 Move [X31+24], X31
	074 Move [X31+8], X31
	075 Move X24, 0xB55000
	076 Move W25, [X19]
	077 Move X20, [X19+32]
	078 Move X24, [X24+640]
	079 Compare W25, 0
	080 JumpIfEqual {89}
	081 NotImplemented "Instruction CMP not yet implemented."
	082 Move X8, [X19+80]
	083 Move TEMP, 0
	084 Not TEMP
	085 Move W9, TEMP
	086 Move [X31+8], X8
	087 Move [X19+80], X31
	088 Move [X19], W9
	089 Move X8, [X19+72]
	090 Move TEMP, 0
	091 Not TEMP
	092 Move W25, TEMP
	093 Move [X31+16], X8
	094 Move [X19+72], X31
	095 Move [X19], W25
	096 Move X8, 0xB96000
	097 Move X8, [X8+936]
	098 Add X0, X31, 16
	099 Move X1, [X8]
	100 Call TaskAwaiter`1<Object>.GetResult, X0
	101 Compare X20, 0
	102 JumpIfEqual {495}
	103 Move W8, [X20+16]
	104 Compare W8, 0
	105 JumpIfEqual {230}
	106 Move X21, [X19+40]
	107 Compare X21, 0
	108 JumpIfEqual {496}
	109 Move X23, 0xB96000
	110 Move X8, [X21]
	111 Move X23, [X23+656]
	112 NotImplemented "Instruction LDRH not yet implemented."
	113 Move X1, [X23]
	114 Compare X9, 0
	115 JumpIfEqual {122}
	116 Move X10, [X8+176]
	117 Add X10, X10, 8
	118 NotImplemented "Instruction LDUR not yet implemented."
	119 NotImplemented "Instruction CMP not yet implemented."
	120 Subtract X9, X9, 1
	121 Add X10, X10, 16
	122 Move W2, 5
	123 Move X0, X21
	124 Call 0x1C5D788
	125 Move W9, [X10]
	126 Add W9, W9, 5
	127 Add X8, X8, W9
	128 Add X0, X8, 312
	129 Move X8, [X0]
	130 Move X1, [X0+8]
	131 Move X0, X21
	132 NotImplemented "Instruction BLR not yet implemented."
	133 Move X1, X31
	134 Call String.IsNullOrEmpty, X0
	135 Move TEMP, X0
	136 And TEMP, TEMP, 1
	137 Compare TEMP, 1
	138 JumpIfEqual {230}
	139 Move X8, 0xB53000
	140 Move X8, [X8+2544]
	141 Move X21, [X19+40]
	142 Move X0, [X8]
	143 Move W8, [X0+224]
	144 Compare W8, 0
	145 JumpIfNotEqual {147}
	146 Call 0x1C17DFC
	147 Move X0, X31
	148 Call DateTime.get_UtcNow
	149 Move X22, 0xB96000
	150 Move X22, [X22+832]
	151 Move X8, X0
	152 Move [X31+24], X8
	153 Move X0, [X22]
	154 Move W8, [X0+224]
	155 Compare W8, 0
	156 JumpIfNotEqual {159}
	157 Call 0x1C17DFC
	158 Move X0, [X22]
	159 Move X8, [X0+184]
	160 Move X1, [X8]
	161 Add X0, X31, 24
	162 Move X2, X31
	163 Call DateTime.Add, X0, X1
	164 Compare X21, 0
	165 JumpIfEqual {497}
	166 Move X8, [X21]
	167 Move X1, [X23]
	168 Move X22, X0
	169 NotImplemented "Instruction LDRH not yet implemented."
	170 Compare X9, 0
	171 JumpIfEqual {178}
	172 Move X10, [X8+176]
	173 Add X10, X10, 8
	174 NotImplemented "Instruction LDUR not yet implemented."
	175 NotImplemented "Instruction CMP not yet implemented."
	176 Subtract X9, X9, 1
	177 Add X10, X10, 16
	178 Move W2, 7
	179 Move X0, X21
	180 Call 0x1C5D788
	181 Move W9, [X10]
	182 Add W9, W9, 7
	183 Add X8, X8, W9
	184 Add X0, X8, 312
	185 Move X8, [X0]
	186 Move X2, [X0+8]
	187 Move X0, X21
	188 Move X1, X22
	189 NotImplemented "Instruction BLR not yet implemented."
	190 Move TEMP, X0
	191 And TEMP, TEMP, 1
	192 Compare TEMP, 1
	193 JumpIfNotEqual {230}
	194 Move X1, [X19+40]
	195 Move X2, [X19+48]
	196 Move X3, [X19+56]
	197 Move X0, X20
	198 Call Client.SessionRefreshAsync, X0, X1, X2
	199 Compare X0, 0
	200 JumpIfEqual {498}
	201 Move X8, 0xB96000
	202 Move X8, [X8+952]
	203 Move X1, [X8]
	204 Call Task`1<Object>.GetAwaiter, X0
	205 Move X8, 0xB96000
	206 Move X8, [X8+944]
	207 Move [X31+16], X0
	208 Move X1, [X8]
	209 Add X0, X31, 16
	210 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	211 Move TEMP, X0
	212 And TEMP, TEMP, 1
	213 Compare TEMP, 1
	214 JumpIfEqual {96}
	215 Move [X19], W31
	216 Move X8, [X31+16]
	217 Move [X19+72], X8
	218 Move X0, [X24]
	219 Move W8, [X0+224]
	220 Compare W8, 0
	221 JumpIfNotEqual {223}
	222 Call 0x1C17DFC
	223 Move X8, 0xB96000
	224 Move X8, [X8+1032]
	225 Add X0, X19, 8
	226 Move X3, [X8]
	227 Add X1, X31, 16
	228 Move X2, X19
	229 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	230 Move X8, 0xB95000
	231 Move X8, [X8+3648]
	232 Move X0, [X8]
	233 Call 0x1C17F10
	234 Move X8, 0xB96000
	235 Move X8, [X8+1008]
	236 Move X21, X0
	237 Move X1, [X8]
	238 Call List`1<Object>..ctor, X0
	239 Move X22, [X19+64]
	240 Compare X22, 0
	241 JumpIfEqual {486}
	242 Move X10, 0xB96000
	243 Move X8, [X22]
	244 Move X10, [X10+1048]
	245 NotImplemented "Instruction LDRH not yet implemented."
	246 Move X1, [X10]
	247 Compare X9, 0
	248 JumpIfEqual {255}
	249 Move X10, [X8+176]
	250 Add X10, X10, 8
	251 NotImplemented "Instruction LDUR not yet implemented."
	252 NotImplemented "Instruction CMP not yet implemented."
	253 Subtract X9, X9, 1
	254 Add X10, X10, 16
	255 Move X0, X22
	256 Move W2, W31
	257 Call 0x1C5D788
	258 NotImplemented "Instruction LDRSW not yet implemented."
	259 Add X8, X8, X9
	260 Add X0, X8, 312
	261 Move X8, [X0]
	262 Move X1, [X0+8]
	263 Move X0, X22
	264 NotImplemented "Instruction BLR not yet implemented."
	265 Move X22, X0
	266 Compare X0, 0
	267 JumpIfEqual {487}
	268 Move X23, 0xB52000
	269 Move X26, 0xB96000
	270 Move X27, 0xB96000
	271 Move X23, [X23+3608]
	272 Move X26, [X26+1056]
	273 Move X27, [X27+1000]
	274 Move X8, [X22]
	275 Move X1, [X23]
	276 NotImplemented "Instruction LDRH not yet implemented."
	277 Compare X9, 0
	278 JumpIfEqual {285}
	279 Move X10, [X8+176]
	280 Add X10, X10, 8
	281 NotImplemented "Instruction LDUR not yet implemented."
	282 NotImplemented "Instruction CMP not yet implemented."
	283 Subtract X9, X9, 1
	284 Add X10, X10, 16
	285 Move X0, X22
	286 Move W2, W31
	287 Call 0x1C5D788
	288 NotImplemented "Instruction LDRSW not yet implemented."
	289 Add X8, X8, X9
	290 Add X0, X8, 312
	291 Move X8, [X0]
	292 Move X1, [X0+8]
	293 Move X0, X22
	294 NotImplemented "Instruction BLR not yet implemented."
	295 Move TEMP, X0
	296 And TEMP, TEMP, 1
	297 Compare TEMP, 1
	298 JumpIfNotEqual {345}
	299 Move X8, [X22]
	300 Move X1, [X26]
	301 NotImplemented "Instruction LDRH not yet implemented."
	302 Compare X9, 0
	303 JumpIfEqual {310}
	304 Move X10, [X8+176]
	305 Add X10, X10, 8
	306 NotImplemented "Instruction LDUR not yet implemented."
	307 NotImplemented "Instruction CMP not yet implemented."
	308 Subtract X9, X9, 1
	309 Add X10, X10, 16
	310 Move X0, X22
	311 Move W2, W31
	312 Call 0x1C5D788
	313 NotImplemented "Instruction LDRSW not yet implemented."
	314 Add X8, X8, X9
	315 Add X0, X8, 312
	316 Move X8, [X0]
	317 Move X1, [X0+8]
	318 Move X0, X22
	319 NotImplemented "Instruction BLR not yet implemented."
	320 Compare X0, 0
	321 JumpIfEqual {484}
	322 Call Event.ToApiEvent, X0
	323 Move X1, X0
	324 Compare X21, 0
	325 JumpIfEqual {485}
	326 Move W10, [X21+28]
	327 Move X8, [X21+16]
	328 Move X9, [X27]
	329 Add W10, W10, 1
	330 Move [X21+28], W10
	331 Compare X8, 0
	332 JumpIfEqual {483}
	333 NotImplemented "Instruction LDRSW not yet implemented."
	334 Move W11, [X8+24]
	335 NotImplemented "Instruction CMP not yet implemented."
	336 Add W9, W10, 1
	337 Add X8, X8, X10
	338 Move [X21+24], W9
	339 Move [X8+32], X1
	340 Move X8, [X9+32]
	341 Move X8, [X8+192]
	342 Move X2, [X8+112]
	343 Move X0, X21
	344 Call List`1<Object>.AddWithResize, X0, X1
	345 Move X23, X31
	346 Move W26, 9
	347 Move TEMP, X25
	348 And TEMP, TEMP, -2147483648
	349 Compare TEMP, -2147483648
	350 JumpIfNotEqual {376}
	351 Compare X22, 0
	352 JumpIfEqual {376}
	353 Move X10, 0xB52000
	354 Move X8, [X22]
	355 Move X10, [X10+3584]
	356 NotImplemented "Instruction LDRH not yet implemented."
	357 Move X1, [X10]
	358 Compare X9, 0
	359 JumpIfEqual {366}
	360 Move X10, [X8+176]
	361 Add X10, X10, 8
	362 NotImplemented "Instruction LDUR not yet implemented."
	363 NotImplemented "Instruction CMP not yet implemented."
	364 Subtract X9, X9, 1
	365 Add X10, X10, 16
	366 Move X0, X22
	367 Move W2, W31
	368 Call 0x1C5D788
	369 NotImplemented "Instruction LDRSW not yet implemented."
	370 Add X8, X8, X9
	371 Add X0, X8, 312
	372 Move X8, [X0]
	373 Move X1, [X0+8]
	374 Move X0, X22
	375 NotImplemented "Instruction BLR not yet implemented."
	376 Compare X23, 0
	377 JumpIfNotEqual {488}
	378 NotImplemented "Instruction CMP not yet implemented."
	379 Compare W26, 0
	380 JumpIfNotEqual {471}
	381 Move X8, 0xB96000
	382 Move X8, [X8+976]
	383 Move X0, [X8]
	384 Call 0x1C17F10
	385 Move X22, X0
	386 Move X1, X31
	387 Call Object..ctor, X0
	388 Compare X22, 0
	389 JumpIfEqual {490}
	390 Move [X22+16], X21
	391 Compare X20, 0
	392 JumpIfEqual {491}
	393 Move X21, [X19+40]
	394 Compare X21, 0
	395 JumpIfEqual {492}
	396 Move X10, 0xB96000
	397 Move X8, [X21]
	398 Move X20, [X20+64]
	399 Move X10, [X10+656]
	400 NotImplemented "Instruction LDRH not yet implemented."
	401 Move X1, [X10]
	402 Compare X9, 0
	403 JumpIfEqual {410}
	404 Move X10, [X8+176]
	405 Add X10, X10, 8
	406 NotImplemented "Instruction LDUR not yet implemented."
	407 NotImplemented "Instruction CMP not yet implemented."
	408 Subtract X9, X9, 1
	409 Add X10, X10, 16
	410 Move X0, X21
	411 Move W2, W31
	412 Call 0x1C5D788
	413 NotImplemented "Instruction LDRSW not yet implemented."
	414 Add X8, X8, X9
	415 Add X0, X8, 312
	416 Move X8, [X0]
	417 Move X1, [X0+8]
	418 Move X0, X21
	419 NotImplemented "Instruction BLR not yet implemented."
	420 Move X1, X0
	421 Compare X20, 0
	422 JumpIfEqual {493}
	423 Move X3, [X19+48]
	424 Move X4, [X19+56]
	425 Move X0, X20
	426 Move X2, X22
	427 Call ApiClient.SatoriEventAsync, X0, X1, X2, X3
	428 Compare X0, 0
	429 JumpIfEqual {494}
	430 Move X1, X31
	431 Call Task.GetAwaiter, X0
	432 Move [X31+8], X0
	433 Add X0, X31, 8
	434 Move X1, X31
	435 Call TaskAwaiter.get_IsCompleted, X0
	436 Move TEMP, X0
	437 And TEMP, TEMP, 1
	438 Compare TEMP, 1
	439 JumpIfNotEqual {455}
	440 Add X0, X31, 8
	441 Move X1, X31
	442 Call TaskAwaiter.GetResult, X0
	443 Move TEMP, 1
	444 Not TEMP
	445 Move W8, TEMP
	446 Move [X19+8], W8
	447 Move X0, [X24]
	448 Move W8, [X0+224]
	449 Compare W8, 0
	450 JumpIfNotEqual {452}
	451 Call 0x1C17DFC
	452 Move X0, X19
	453 Move X1, X31
	454 Call AsyncTaskMethodBuilder.SetResult, X0
	455 Move W8, 1
	456 Move [X19], W8
	457 Move X8, [X31+8]
	458 Move [X19+80], X8
	459 Move X0, [X24]
	460 Move W8, [X0+224]
	461 Compare W8, 0
	462 JumpIfNotEqual {464}
	463 Call 0x1C17DFC
	464 Move X8, 0xB96000
	465 Move X8, [X8+1040]
	466 Add X0, X19, 8
	467 Move X3, [X8]
	468 Add X1, X31, 8
	469 Move X2, X19
	470 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	471 Move X20, [X31+96]
	472 Move X19, [X31+104]
	473 Move X22, [X31+80]
	474 Move X21, [X31+88]
	475 Move X24, [X31+64]
	476 Move X23, [X31+72]
	477 Move X26, [X31+48]
	478 Move X25, [X31+56]
	479 Move X30, [X31+32]
	480 Move X27, [X31+40]
	481 Add X31, X31, 112
	482 Return 
	483 Call 0x1C17F20
	484 Call 0x1C17F20
	485 Call 0x1C17F20
	486 Call 0x1C17F20
	487 Call 0x1C17F20
	488 Move X0, X23
	489 Call 0x1C17F18
	490 Call 0x1C17F20
	491 Call 0x1C17F20
	492 Call 0x1C17F20
	493 Call 0x1C17F20
	494 Call 0x1C17F20
	495 Call 0x1C17F20
	496 Call 0x1C17F20
	497 Call 0x1C17F20
	498 Call 0x1C17F20
	499 Move X20, X1
	500 Move X21, X0
	501 NotImplemented "Instruction CMP not yet implemented."
	502 Call 0x3EB2AD0
	503 Move X23, [X0]
	504 Call 0x3EB2AE0
	505 Move W26, W31
	506 Move TEMP, X25
	507 And TEMP, TEMP, -2147483648
	508 Compare TEMP, -2147483648
	509 JumpIfEqual {351}
	510 Move X21, X0
	511 Move X20, X1
	512 Move X23, X31
	513 Move TEMP, X25
	514 And TEMP, TEMP, -2147483648
	515 Compare TEMP, -2147483648
	516 JumpIfNotEqual {542}
	517 Compare X22, 0
	518 JumpIfEqual {542}
	519 Move X10, 0xB52000
	520 Move X8, [X22]
	521 Move X10, [X10+3584]
	522 NotImplemented "Instruction LDRH not yet implemented."
	523 Move X1, [X10]
	524 Compare X9, 0
	525 JumpIfEqual {532}
	526 Move X10, [X8+176]
	527 Add X10, X10, 8
	528 NotImplemented "Instruction LDUR not yet implemented."
	529 NotImplemented "Instruction CMP not yet implemented."
	530 Subtract X9, X9, 1
	531 Add X10, X10, 16
	532 Move X0, X22
	533 Move W2, W31
	534 Call 0x1C5D788
	535 NotImplemented "Instruction LDRSW not yet implemented."
	536 Add X8, X8, X9
	537 Add X0, X8, 312
	538 Move X8, [X0]
	539 Move X1, [X0+8]
	540 Move X0, X22
	541 NotImplemented "Instruction BLR not yet implemented."
	542 Compare X23, 0
	543 JumpIfNotEqual {583}
	544 NotImplemented "Instruction CMP not yet implemented."
	545 Move X0, X21
	546 Call 0x3EB2AD0
	547 Move X20, X0
	548 Move X0, 0xB52000
	549 Move X0, [X0+2000]
	550 Call 0x1C17D08
	551 Move X8, [X20]
	552 Move X1, [X8]
	553 Call 0x1C18270
	554 Move TEMP, X0
	555 And TEMP, TEMP, 1
	556 Compare TEMP, 1
	557 JumpIfNotEqual {575}
	558 Move X20, [X20]
	559 Call 0x3EB2AE0
	560 Move TEMP, 1
	561 Not TEMP
	562 Move W8, TEMP
	563 Move [X19+8], W8
	564 Move X0, 0xB55000
	565 Move X0, [X0+640]
	566 Call 0x1C17D08
	567 Move W8, [X0+224]
	568 Compare W8, 0
	569 JumpIfNotEqual {571}
	570 Call 0x1C17DFC
	571 Move X0, X19
	572 Move X1, X20
	573 Move X2, X31
	574 Call AsyncTaskMethodBuilder.SetException, X0, X1
	575 Move W0, 8
	576 Call 0x3EB2AF0
	577 Move X8, [X20]
	578 Move [X0], X8
	579 Move X1, 0x913000
	580 Add X1, X1, 3672
	581 Move X2, X31
	582 Call 0x3EB2B00
	583 Move X0, X23
	584 Call 0x1C17F18
	585 Move X20, X1
	586 Move X21, X0
	587 Move TEMP, X25
	588 And TEMP, TEMP, -2147483648
	589 Compare TEMP, -2147483648
	590 JumpIfEqual {517}
	591 Move X21, X0
	592 Call 0x3EB2AE0
	593 Move X0, X21
	594 Call 0x1D2D690
	595 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x035A2D84 MOV X21, X0
	0x035A2D88 STR X1, [X31]
	0x035A2D8C TBNZ X23, 0x1F, 0x35A2C78
	0x035A2D90 B 0x35A2CDC
	0x035A2D94 MOV X21, X0
	0x035A2D98 BL 0x3EB1AE0
	0x035A2D9C MOV X0, X21
	0x035A2DA0 BL 0x1D2C690
	0x035A2DA4 BL 0x1990590
	0x035A2DA8 STR X30, [X31 - 0x30]!
	0x035A2DAC STP X22, X21, [X31 + 0x10]
	0x035A2DB0 STP X20, X19, [X31 + 0x20]
	0x035A2DB4 ADRP X22, 0xE3E000
	0x035A2DB8 ADRP X21, 0xB95000
	0x035A2DBC LDRB W8, [X22 + 0x7]
	0x035A2DC0 LDR X21, [X21 + 0x2B8]
	0x035A2DC4 MOV X19, X1
	0x035A2DC8 MOV X20, X0
	0x035A2DCC TBNZ X8, 0x0, 0x35A2DF0
	0x035A2DD0 ADRP X0, 0xB95000
	0x035A2DD4 LDR X0, [X0 + 0x4B8]
	0x035A2DD8 BL 0x1C16CF4
	0x035A2DDC ADRP X0, 0xB95000
	0x035A2DE0 LDR X0, [X0 + 0x2B8]
	0x035A2DE4 BL 0x1C16CF4
	0x035A2DE8 MOVZ W8, 0x1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xE3F000
	007 Move X22, 0xB55000
	008 Move W8, [X21+1]
	009 Move X22, [X22+640]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xB55000
	017 Move X0, [X0+640]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+1], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Add X0, X20, 8
	027 Move X1, X19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X2, X31
	033 Move X30, [X31+48]
	034 Call AsyncTaskMethodBuilder.SetStateMachine, X0, X1
	035 Return 

