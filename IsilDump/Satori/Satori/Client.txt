Type: Satori.Client

Method: System.Boolean get_AutoRefreshSession()

Disassembly:
	0x0359F350 STR X20, [X31 + 0x30]
	0x0359F354 STR W8, [X31]

ISIL:
	001 Move W0, [X0+16]
	002 Return X0

Method: System.String get_Host()

Disassembly:
	0x0359F358 BL 0x1FCF114
	0x0359F35C LDR X1, [X25]

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Int32 get_Port()

Disassembly:
	0x0359F360 MOV X0, X24
	0x0359F364 BL 0x2632230

ISIL:
	001 Move W0, [X0+32]
	002 Return X0

Method: System.String get_Scheme()

Disassembly:
	0x0359F368 LDP X20, X19, [X31 + 0xA0]
	0x0359F36C LDP X22, X21, [X31 + 0x90]

ISIL:
	001 Move X0, [X0+40]
	002 Return X0

Method: System.String get_ApiKey()

Disassembly:
	0x0359F370 LDP X24, X23, [X31 + 0x80]
	0x0359F374 LDP X26, X25, [X31 + 0x70]

ISIL:
	001 Move X0, [X0+48]
	002 Return X0

Method: System.Int32 get_Timeout()

Disassembly:
	0x0359F378 LDR X30, [X31 + 0x60]
	0x0359F37C ADD X31, X31, 0xB0

ISIL:
	001 Move W0, [X0+56]
	002 Return X0

Method: System.Void set_Timeout(System.Int32 value)

Disassembly:
	0x0359F380 RET
	0x0359F384 STP X30, X23, [X31 - 0x30]!

ISIL:
	001 Move [X0+56], W1
	002 Return 

Method: System.Void .ctor(System.String scheme, System.String host, System.Int32 port, System.String apiKey)

Disassembly:
	0x0359F388 STP X22, X21, [X31 + 0x10]
	0x0359F38C STP X20, X19, [X31 + 0x20]
	0x0359F390 ADRP X23, 0xE40000
	0x0359F394 LDRB W8, [X23 + 0xFED]
	0x0359F398 MOV X19, X3
	0x0359F39C MOV X20, X2
	0x0359F3A0 MOV X21, X1
	0x0359F3A4 MOV X22, X0
	0x0359F3A8 TBNZ X8, 0x0, 0x359F3C0
	0x0359F3AC ADRP X0, 0xB56000
	0x0359F3B0 LDR X0, [X0 + 0x278]
	0x0359F3B4 BL 0x1C16CF4
	0x0359F3B8 MOVZ W8, 0x1
	0x0359F3BC STRB W8, [X23 + 0xFED]
	0x0359F3C0 LDR X0, [X22 + 0x40]
	0x0359F3C4 CBZ X0, 0x359F400
	0x0359F3C8 ADRP X8, 0xB56000
	0x0359F3CC LDR X8, [X8 + 0x278]
	0x0359F3D0 LDR X2, [X22 + 0x30]
	0x0359F3D4 MOV X4, X21
	0x0359F3D8 MOV X5, X20
	0x0359F3DC LDR X8, [X8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, X1
	008 Move X23, X0
	009 Move W0, W31
	010 Move W1, W31
	011 Move X19, X4
	012 Move W20, W3
	013 Move X21, X2
	014 Call HttpRequestAdapter.WithGzip, X0, X1
	015 Move X1, X22
	016 Move X2, X21
	017 Move W3, W20
	018 Move X4, X19
	019 Move X20, [X31+32]
	020 Move X19, [X31+40]
	021 Move X22, [X31+16]
	022 Move X21, [X31+24]
	023 Move W6, 1
	024 Move X5, X0
	025 Move X0, X23
	026 Move X30, [X31+48]
	027 Move X23, [X31+56]
	028 Call Client..ctor, X0, X1, X2, X3, X4, X5, X6
	029 Return 

Method: System.Void .ctor(System.String scheme, System.String host, System.Int32 port, System.String apiKey, Satori.IHttpAdapter adapter, System.Boolean autoRefreshSession = True)

Disassembly:
	0x0359F508 BL 0x2632230
	0x0359F50C LDP X20, X19, [X31 + 0xC0]
	0x0359F510 LDP X22, X21, [X31 + 0xB0]
	0x0359F514 LDP X24, X23, [X31 + 0xA0]
	0x0359F518 LDP X26, X25, [X31 + 0x90]
	0x0359F51C LDP X28, X27, [X31 + 0x80]
	0x0359F520 LDR X30, [X31 + 0x70]
	0x0359F524 ADD X31, X31, 0xD0
	0x0359F528 RET
	0x0359F52C SUB X31, X31, 0xB0
	0x0359F530 STR X30, [X31 + 0x60]
	0x0359F534 STP X26, X25, [X31 + 0x70]
	0x0359F538 STP X24, X23, [X31 + 0x80]
	0x0359F53C STP X22, X21, [X31 + 0x90]
	0x0359F540 STP X20, X19, [X31 + 0xA0]
	0x0359F544 ADRP X25, 0xE40000
	0x0359F548 ADRP X24, 0xB97000
	0x0359F54C LDRB W8, [X25 + 0xFEF]
	0x0359F550 LDR X24, [X24 + 0xFD0]
	0x0359F554 MOV X19, X4
	0x0359F558 MOV X20, X3
	0x0359F55C MOV X21, X2
	0x0359F560 MOV X22, X1
	0x0359F564 MOV X23, X0
	0x0359F568 TBNZ X8, 0x0, 0x359F5A4
	0x0359F56C ADRP X0, 0xB97000
	0x0359F570 LDR X0, [X0 + 0xFD8]
	0x0359F574 BL 0x1C16CF4
	0x0359F578 ADRP X0, 0xB98000
	0x0359F57C LDR X0, [X0 + 0x300]
	0x0359F580 BL 0x1C16CF4
	0x0359F584 ADRP X0, 0xB97000
	0x0359F588 LDR X0, [X0 + 0xFE8]
	0x0359F58C BL 0x1C16CF4
	0x0359F590 ADRP X0, 0xB97000
	0x0359F594 LDR X0, [X0 + 0xFD0]
	0x0359F598 BL 0x1C16CF4
	0x0359F59C MOVZ W8, 0x1
	0x0359F5A0 STRB W8, [X25 + 0xFEF]
	0x0359F5A4 LDR X0, [X24]
	0x0359F5A8 MOVI V0.2D, 0x0
	0x0359F5AC STR X31, [X31 + 0x50]
	0x0359F5B0 STP V0, V0, [X31 + 0x30]
	0x0359F5B4 STP V0, V0, [X31 + 0x10]
	0x0359F5B8 STR V0, [X31]
	0x0359F5BC ADRP X24, 0xB97000
	0x0359F5C0 ADRP X26, 0xB98000
	0x0359F5C4 ADRP X25, 0xB97000
	0x0359F5C8 LDR W8, [X0 + 0xE0]
	0x0359F5CC LDR X24, [X24 + 0xFD8]
	0x0359F5D0 LDR X26, [X26 + 0x300]
	0x0359F5D4 LDR X25, [X25 + 0xFE8]
	0x0359F5D8 CBNZ W8, 0x359F5E0
	0x0359F5DC BL 0x1C16DFC
	0x0359F5E0 LDR X0, [X24]
	0x0359F5E4 ADD X8, X31, 0x0
	0x0359F5E8 ORR X24, X8, 0xF
	0x0359F5EC MOV X8, X24
	0x0359F5F0 BL 0x263221C
	0x0359F5F4 LDR X2, [X26]
	0x0359F5F8 MOVN W8, 0x0
	0x0359F5FC ADD X1, X31, 0x0
	0x0359F600 MOV X0, X24
	0x0359F604 STP X23, X22, [X31 + 0x20]
	0x0359F608 STP X19, X21, [X31 + 0x38]
	0x0359F60C STR X20, [X31 + 0x30]
	0x0359F610 STR W8, [X31]
	0x0359F614 BL 0x1FCF214
	0x0359F618 LDR X1, [X25]
	0x0359F61C MOV X0, X24
	0x0359F620 BL 0x2632230
	0x0359F624 LDP X20, X19, [X31 + 0xA0]
	0x0359F628 LDP X22, X21, [X31 + 0x90]
	0x0359F62C LDP X24, X23, [X31 + 0x80]
	0x0359F630 LDP X26, X25, [X31 + 0x70]
	0x0359F634 LDR X30, [X31 + 0x60]
	0x0359F638 ADD X31, X31, 0xB0
	0x0359F63C RET
	0x0359F640 SUB X31, X31, 0x90
	0x0359F644 STP X30, X25, [X31 + 0x50]
	0x0359F648 STP X24, X23, [X31 + 0x60]
	0x0359F64C STP X22, X21, [X31 + 0x70]
	0x0359F650 STP X20, X19, [X31 + 0x80]
	0x0359F654 ADRP X24, 0xE40000
	0x0359F658 ADRP X23, 0xB98000
	0x0359F65C LDRB W8, [X24 + 0xFF0]
	0x0359F660 LDR X23, [X23 + 0x20]
	0x0359F664 MOV X19, X3
	0x0359F668 MOV X20, X2
	0x0359F66C MOV X21, X1
	0x0359F670 MOV X22, X0
	0x0359F674 TBNZ X8, 0x0, 0x359F6B0
	0x0359F678 ADRP X0, 0xB98000
	0x0359F67C LDR X0, [X0 + 0x28]
	0x0359F680 BL 0x1C16CF4
	0x0359F684 ADRP X0, 0xB98000
	0x0359F688 LDR X0, [X0 + 0x308]
	0x0359F68C BL 0x1C16CF4
	0x0359F690 ADRP X0, 0xB98000
	0x0359F694 LDR X0, [X0 + 0x38]
	0x0359F698 BL 0x1C16CF4
	0x0359F69C ADRP X0, 0xB98000
	0x0359F6A0 LDR X0, [X0 + 0x20]
	0x0359F6A4 BL 0x1C16CF4
	0x0359F6A8 MOVZ W8, 0x1
	0x0359F6AC STRB W8, [X24 + 0xFF0]
	0x0359F6B0 LDR X0, [X23]
	0x0359F6B4 MOVI V0.2D, 0x0
	0x0359F6B8 STP V0, V0, [X31 + 0x30]
	0x0359F6BC STP V0, V0, [X31 + 0x10]
	0x0359F6C0 STR V0, [X31]
	0x0359F6C4 ADRP X23, 0xB98000
	0x0359F6C8 ADRP X25, 0xB98000
	0x0359F6CC ADRP X24, 0xB98000
	0x0359F6D0 LDR W8, [X0 + 0xE0]
	0x0359F6D4 LDR X23, [X23 + 0x28]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X27, 0xE41000
	012 Move X25, 0xB5E000
	013 Move W8, [X27+4067]
	014 Move X25, [X25+928]
	015 Move X20, X5
	016 Move X24, X4
	017 Move W21, W3
	018 Move X22, X2
	019 Move X23, X1
	020 Move X19, X0
	021 And W26, W6, 1
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {37}
	026 Move X0, 0xB99000
	027 Move X0, [X0+592]
	028 Call 0x1C17CF4
	029 Move X0, 0xB99000
	030 Move X0, [X0+88]
	031 Call 0x1C17CF4
	032 Move X0, 0xB5E000
	033 Move X0, [X0+928]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X27+4067], W8
	037 Move X0, X19
	038 Move X1, X31
	039 Call Object..ctor, X0
	040 Move [X19+24], X22
	041 Move [X19+32], W21
	042 Move [X19+40], X23
	043 Move [X19+48], X24
	044 Move [X19+16], W26
	045 Move X0, [X25]
	046 Call 0x1C17F10
	047 Move X1, X23
	048 Move X2, X22
	049 Move W3, W21
	050 Move X4, X31
	051 Move X24, X0
	052 Call UriBuilder..ctor, X0, X1, X2, X3
	053 Compare X24, 0
	054 JumpIfEqual {115}
	055 Move X21, 0xB99000
	056 Move X21, [X21+592]
	057 Move X0, X24
	058 Move X1, X31
	059 Call UriBuilder.get_Uri, X0
	060 Move X8, [X21]
	061 Move X21, X0
	062 Move X0, X8
	063 Call 0x1C17F10
	064 Move X1, X31
	065 Move X22, X0
	066 Call Object..ctor, X0
	067 Move W8, 15
	068 Move [X22+32], X21
	069 Move [X22+16], X20
	070 Move [X22+24], W8
	071 Move [X19+64], X22
	072 Compare X20, 0
	073 JumpIfEqual {115}
	074 Move X10, 0xB99000
	075 Move X8, [X20]
	076 Move X10, [X10+88]
	077 NotImplemented "Instruction LDRH not yet implemented."
	078 Move X1, [X10]
	079 Compare X9, 0
	080 JumpIfEqual {87}
	081 Move X10, [X8+176]
	082 Add X10, X10, 8
	083 NotImplemented "Instruction LDUR not yet implemented."
	084 NotImplemented "Instruction CMP not yet implemented."
	085 Subtract X9, X9, 1
	086 Add X10, X10, 16
	087 Move X0, X20
	088 Move W2, W31
	089 Call 0x1C5D788
	090 NotImplemented "Instruction LDRSW not yet implemented."
	091 Add X8, X8, X9
	092 Add X0, X8, 312
	093 Move X8, [X0]
	094 Move X1, [X0+8]
	095 Move X0, X20
	096 NotImplemented "Instruction BLR not yet implemented."
	097 NotImplemented "Instruction CMP not yet implemented."
	098 NotImplemented "Instruction CSEL not yet implemented."
	099 Compare X0, 0
	100 JumpIfEqual {116}
	101 Compare X8, 0
	102 JumpIfEqual {115}
	103 Move X20, [X31+64]
	104 Move X19, [X31+72]
	105 Move X22, [X31+48]
	106 Move X21, [X31+56]
	107 Move X24, [X31+32]
	108 Move X23, [X31+40]
	109 Move X26, [X31+16]
	110 Move X25, [X31+24]
	111 Move [X8+72], X0
	112 Move X30, [X31+80]
	113 Move X27, [X31+88]
	114 Return 
	115 Call 0x1C17F20
	116 Move X0, 0xB5D000
	117 Move X0, [X0+1400]
	118 Call 0x1C17D08
	119 Call 0x1C17F10
	120 Move X19, X0
	121 Move X0, 0xB99000
	122 Move X0, [X0+600]
	123 Call 0x1C17D08
	124 Move X1, X0
	125 Move X0, X19
	126 Move X2, X31
	127 Call ArgumentException..ctor, X0, X1
	128 Move X0, 0xB99000
	129 Move X0, [X0+608]
	130 Call 0x1C17D08
	131 Move X1, X0
	132 Move X0, X19
	133 Call 0x1C17DEC

Method: System.Threading.Tasks.Task`1<Satori.ISession> AuthenticateAsync(System.String id, System.Collections.Generic.Dictionary`2<System.String, System.String> defaultProperties = null, System.Collections.Generic.Dictionary`2<System.String, System.String> customProperties = null, System.Nullable`1<System.Threading.CancellationToken> cancellationToken = null)

Disassembly:
	0x0359F6D8 LDR X25, [X25 + 0x308]
	0x0359F6DC LDR X24, [X24 + 0x38]
	0x0359F6E0 CBNZ W8, 0x359F6E8
	0x0359F6E4 BL 0x1C16DFC
	0x0359F6E8 LDR X0, [X23]
	0x0359F6EC ADD X8, X31, 0x0
	0x0359F6F0 ORR X23, X8, 0xF
	0x0359F6F4 MOV X8, X23
	0x0359F6F8 BL 0x263221C
	0x0359F6FC LDR X2, [X25]
	0x0359F700 MOVN W8, 0x0
	0x0359F704 ADD X1, X31, 0x0
	0x0359F708 MOV X0, X23
	0x0359F70C STP X22, X21, [X31 + 0x20]
	0x0359F710 STP X20, X19, [X31 + 0x30]
	0x0359F714 STR W8, [X31]
	0x0359F718 BL 0x1FCF514
	0x0359F71C LDR X1, [X24]
	0x0359F720 MOV X0, X23
	0x0359F724 BL 0x2632230
	0x0359F728 LDP X20, X19, [X31 + 0x80]
	0x0359F72C LDP X22, X21, [X31 + 0x70]
	0x0359F730 LDP X24, X23, [X31 + 0x60]
	0x0359F734 LDP X30, X25, [X31 + 0x50]
	0x0359F738 ADD X31, X31, 0x90
	0x0359F73C RET
	0x0359F740 SUB X31, X31, 0x90
	0x0359F744 STP X30, X25, [X31 + 0x50]
	0x0359F748 STP X24, X23, [X31 + 0x60]
	0x0359F74C STP X22, X21, [X31 + 0x70]
	0x0359F750 STP X20, X19, [X31 + 0x80]
	0x0359F754 ADRP X24, 0xE40000
	0x0359F758 ADRP X23, 0xB98000
	0x0359F75C LDRB W8, [X24 + 0xFF1]
	0x0359F760 LDR X23, [X23 + 0x268]
	0x0359F764 MOV X19, X3
	0x0359F768 MOV X20, X2
	0x0359F76C MOV X21, X1
	0x0359F770 MOV X22, X0
	0x0359F774 TBNZ X8, 0x0, 0x359F7B0
	0x0359F778 ADRP X0, 0xB98000
	0x0359F77C LDR X0, [X0 + 0x270]
	0x0359F780 BL 0x1C16CF4
	0x0359F784 ADRP X0, 0xB98000
	0x0359F788 LDR X0, [X0 + 0x310]
	0x0359F78C BL 0x1C16CF4
	0x0359F790 ADRP X0, 0xB98000
	0x0359F794 LDR X0, [X0 + 0x280]
	0x0359F798 BL 0x1C16CF4
	0x0359F79C ADRP X0, 0xB98000
	0x0359F7A0 LDR X0, [X0 + 0x268]
	0x0359F7A4 BL 0x1C16CF4
	0x0359F7A8 MOVZ W8, 0x1
	0x0359F7AC STRB W8, [X24 + 0xFF1]
	0x0359F7B0 LDR X0, [X23]
	0x0359F7B4 MOVI V0.2D, 0x0
	0x0359F7B8 STR X31, [X31 + 0x40]
	0x0359F7BC STP V0, V0, [X31 + 0x20]
	0x0359F7C0 STP V0, V0, [X31]
	0x0359F7C4 ADRP X23, 0xB98000
	0x0359F7C8 ADRP X25, 0xB98000
	0x0359F7CC ADRP X24, 0xB98000
	0x0359F7D0 LDR W8, [X0 + 0xE0]
	0x0359F7D4 LDR X23, [X23 + 0x270]
	0x0359F7D8 LDR X25, [X25 + 0x310]
	0x0359F7DC LDR X24, [X24 + 0x280]
	0x0359F7E0 CBNZ W8, 0x359F7E8
	0x0359F7E4 BL 0x1C16DFC
	0x0359F7E8 LDR X0, [X23]
	0x0359F7EC ADD X8, X31, 0x0

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+96], X30
	003 Move [X31+104], X27
	004 Move [X31+112], X26
	005 Move [X31+120], X25
	006 Move [X31+128], X24
	007 Move [X31+136], X23
	008 Move [X31+144], X22
	009 Move [X31+152], X21
	010 Move [X31+160], X20
	011 Move [X31+168], X19
	012 Move X26, 0xE41000
	013 Move X25, 0xB99000
	014 Move W8, [X26+4068]
	015 Move X25, [X25+616]
	016 Move X19, X5
	017 Move X20, X4
	018 Move X21, X3
	019 Move X22, X2
	020 Move X23, X1
	021 Move X24, X0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {40}
	026 Move X0, 0xB99000
	027 Move X0, [X0+624]
	028 Call 0x1C17CF4
	029 Move X0, 0xB99000
	030 Move X0, [X0+632]
	031 Call 0x1C17CF4
	032 Move X0, 0xB99000
	033 Move X0, [X0+640]
	034 Call 0x1C17CF4
	035 Move X0, 0xB99000
	036 Move X0, [X0+616]
	037 Call 0x1C17CF4
	038 Move W8, 1
	039 Move [X26+4068], W8
	040 Move X0, [X25]
	041 NotImplemented "Instruction MOVI not yet implemented."
	042 Move [X31+80], X31
	043 Move [X31+48], V0
	044 Move [X31+56], V0
	045 Move [X31+16], V0
	046 Move [X31+24], V0
	047 Move [X31], V0
	048 Move X25, 0xB99000
	049 Move X27, 0xB99000
	050 Move X26, 0xB99000
	051 Move W8, [X0+224]
	052 Move X25, [X25+624]
	053 Move X27, [X27+632]
	054 Move X26, [X26+640]
	055 Compare W8, 0
	056 JumpIfNotEqual {58}
	057 Call 0x1C17DFC
	058 Move X0, [X25]
	059 Add X8, X31, 0
	060 Or X25, X8, 15
	061 Move X8, X25
	062 Call AsyncTaskMethodBuilder`1<Object>.Create
	063 Move X2, [X27]
	064 Move TEMP, 0
	065 Not TEMP
	066 Move W8, TEMP
	067 Add X1, X31, 0
	068 Move X0, X25
	069 Move [X31+32], X24
	070 Move [X31+40], X23
	071 Move [X31+48], X22
	072 Move [X31+56], X21
	073 Move [X31+64], X20
	074 Move [X31+72], X19
	075 Move [X31], W8
	076 Call AsyncTaskMethodBuilder`1<Object>.Start, X0, X1
	077 Move X1, [X26]
	078 Move X0, X25
	079 Call AsyncTaskMethodBuilder`1<Object>.get_Task, X0
	080 Move X20, [X31+160]
	081 Move X19, [X31+168]
	082 Move X22, [X31+144]
	083 Move X21, [X31+152]
	084 Move X24, [X31+128]
	085 Move X23, [X31+136]
	086 Move X26, [X31+112]
	087 Move X25, [X31+120]
	088 Move X30, [X31+96]
	089 Move X27, [X31+104]
	090 Add X31, X31, 176
	091 Return X0

Method: System.Threading.Tasks.Task AuthenticateLogoutAsync(Satori.ISession session, System.Nullable`1<System.Threading.CancellationToken> cancellationToken = null)

Disassembly:
	0x0359F7F0 ORR X23, X8, 0xF
	0x0359F7F4 MOV X8, X23
	0x0359F7F8 BL 0x263221C
	0x0359F7FC LDR X2, [X25]
	0x0359F800 MOVN W8, 0x0
	0x0359F804 ADD X1, X31, 0x0
	0x0359F808 MOV X0, X23
	0x0359F80C STP X22, X21, [X31 + 0x20]
	0x0359F810 STP X20, X19, [X31 + 0x30]
	0x0359F814 STR W8, [X31]
	0x0359F818 BL 0x1FCF614
	0x0359F81C LDR X1, [X24]
	0x0359F820 MOV X0, X23
	0x0359F824 BL 0x2632230
	0x0359F828 LDP X20, X19, [X31 + 0x80]
	0x0359F82C LDP X22, X21, [X31 + 0x70]
	0x0359F830 LDP X24, X23, [X31 + 0x60]
	0x0359F834 LDP X30, X25, [X31 + 0x50]
	0x0359F838 ADD X31, X31, 0x90
	0x0359F83C RET
	0x0359F840 SUB X31, X31, 0xE0
	0x0359F844 STP X30, X27, [X31 + 0x90]
	0x0359F848 STP X26, X25, [X31 + 0xA0]
	0x0359F84C STP X24, X23, [X31 + 0xB0]
	0x0359F850 STP X22, X21, [X31 + 0xC0]
	0x0359F854 STP X20, X19, [X31 + 0xD0]
	0x0359F858 ADRP X27, 0xE40000
	0x0359F85C ADRP X26, 0xB57000
	0x0359F860 LDRB W8, [X27 + 0xFF2]
	0x0359F864 LDR X26, [X26 + 0x280]
	0x0359F868 MOV X19, X6
	0x0359F86C MOV X21, X5
	0x0359F870 MOV W25, W4
	0x0359F874 MOV X23, X3
	0x0359F878 MOV X22, X2
	0x0359F87C MOV X24, X1
	0x0359F880 MOV X20, X0
	0x0359F884 TBNZ X8, 0x0, 0x359F8A8
	0x0359F888 ADRP X0, 0xB98000
	0x0359F88C LDR X0, [X0 + 0x318]
	0x0359F890 BL 0x1C16CF4
	0x0359F894 ADRP X0, 0xB57000
	0x0359F898 LDR X0, [X0 + 0x280]
	0x0359F89C BL 0x1C16CF4
	0x0359F8A0 MOVZ W8, 0x1
	0x0359F8A4 STRB W8, [X27 + 0xFF2]
	0x0359F8A8 LDR X0, [X26]
	0x0359F8AC MOVI V0.2D, 0x0
	0x0359F8B0 STR X31, [X31 + 0x80]
	0x0359F8B4 STP V0, V0, [X31 + 0x60]
	0x0359F8B8 STP V0, V0, [X31 + 0x40]
	0x0359F8BC STP V0, V0, [X31 + 0x20]
	0x0359F8C0 ADRP X26, 0xB98000
	0x0359F8C4 LDR W8, [X0 + 0xE0]
	0x0359F8C8 LDR X26, [X26 + 0x318]
	0x0359F8CC CBNZ W8, 0x359F8D4
	0x0359F8D0 BL 0x1C16DFC
	0x0359F8D4 ADD X8, X31, 0x8
	0x0359F8D8 MOV X0, X31
	0x0359F8DC AND W25, W25, 0x1
	0x0359F8E0 BL 0x32C4770
	0x0359F8E4 LDUR V0, [X31 + 0x8]
	0x0359F8E8 LDR X9, [X31 + 0x18]
	0x0359F8EC LDR X2, [X26]
	0x0359F8F0 ADD X8, X31, 0x20
	0x0359F8F4 STR X19, [X31 + 0x58]
	0x0359F8F8 ORR X19, X8, 0xF
	0x0359F8FC MOVN W10, 0x0
	0x0359F900 ADD X1, X31, 0x20
	0x0359F904 MOV X0, X19
	0x0359F908 STP X22, X23, [X31 + 0x60]
	0x0359F90C STRB W25, [X31 + 0x70]
	0x0359F910 STP X24, X21, [X31 + 0x48]
	0x0359F914 STUR V0, [X31 + 0x28]
	0x0359F918 STP X9, X20, [X31 + 0x38]
	0x0359F91C STR W10, [X31 + 0x20]
	0x0359F920 BL 0x2193DB8
	0x0359F924 MOV X0, X19
	0x0359F928 MOV X1, X31
	0x0359F92C BL 0x32C47F8
	0x0359F930 LDP X20, X19, [X31 + 0xD0]
	0x0359F934 LDP X22, X21, [X31 + 0xC0]
	0x0359F938 LDP X24, X23, [X31 + 0xB0]
	0x0359F93C LDP X26, X25, [X31 + 0xA0]
	0x0359F940 LDP X30, X27, [X31 + 0x90]
	0x0359F944 ADD X31, X31, 0xE0
	0x0359F948 RET
	0x0359F94C SUB X31, X31, 0xB0
	0x0359F950 STR X30, [X31 + 0x70]
	0x0359F954 STP X24, X23, [X31 + 0x80]
	0x0359F958 STP X22, X21, [X31 + 0x90]
	0x0359F95C STP X20, X19, [X31 + 0xA0]
	0x0359F960 ADRP X24, 0xE40000
	0x0359F964 ADRP X23, 0xB57000
	0x0359F968 LDRB W8, [X24 + 0xFF3]
	0x0359F96C LDR X23, [X23 + 0x280]
	0x0359F970 MOV X20, X3
	0x0359F974 MOV X21, X2
	0x0359F978 MOV X22, X1
	0x0359F97C MOV X19, X0
	0x0359F980 TBNZ X8, 0x0, 0x359F9A4
	0x0359F984 ADRP X0, 0xB98000
	0x0359F988 LDR X0, [X0 + 0x320]
	0x0359F98C BL 0x1C16CF4
	0x0359F990 ADRP X0, 0xB57000
	0x0359F994 LDR X0, [X0 + 0x280]
	0x0359F998 BL 0x1C16CF4
	0x0359F99C MOVZ W8, 0x1
	0x0359F9A0 STRB W8, [X24 + 0xFF3]
	0x0359F9A4 LDR X0, [X23]
	0x0359F9A8 MOVI V0.2D, 0x0
	0x0359F9AC STP V0, V0, [X31 + 0x50]
	0x0359F9B0 STP V0, V0, [X31 + 0x30]
	0x0359F9B4 STR V0, [X31 + 0x2]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X23, 0xE41000
	010 Move W8, [X23+4069]
	011 Move X19, X3
	012 Move X20, X2
	013 Move X21, X1
	014 Move X22, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0xB99000
	020 Move X0, [X0+648]
	021 Call 0x1C17CF4
	022 Move X0, 0xB99000
	023 Move X0, [X0+656]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X23+4069], W8
	027 Compare X21, 0
	028 JumpIfEqual {126}
	029 Move X25, 0xB99000
	030 Move X8, [X21]
	031 Move X25, [X25+656]
	032 Move X23, 0xB99000
	033 Move X22, [X22+64]
	034 NotImplemented "Instruction LDRH not yet implemented."
	035 Move X1, [X25]
	036 Move X23, [X23+648]
	037 Compare X9, 0
	038 JumpIfEqual {45}
	039 Move X10, [X8+176]
	040 Add X10, X10, 8
	041 NotImplemented "Instruction LDUR not yet implemented."
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Subtract X9, X9, 1
	044 Add X10, X10, 16
	045 Move X0, X21
	046 Move W2, W31
	047 Call 0x1C5D788
	048 NotImplemented "Instruction LDRSW not yet implemented."
	049 Add X8, X8, X9
	050 Add X0, X8, 312
	051 Move X8, [X0]
	052 Move X1, [X0+8]
	053 Move X0, X21
	054 NotImplemented "Instruction BLR not yet implemented."
	055 Move X8, [X23]
	056 Move X23, X0
	057 Move X0, X8
	058 Call 0x1C17F10
	059 Move X1, X31
	060 Move X24, X0
	061 Call Object..ctor, X0
	062 Move X8, [X21]
	063 Move X1, [X25]
	064 NotImplemented "Instruction LDRH not yet implemented."
	065 Compare X9, 0
	066 JumpIfEqual {73}
	067 Move X10, [X8+176]
	068 Add X10, X10, 8
	069 NotImplemented "Instruction LDUR not yet implemented."
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Subtract X9, X9, 1
	072 Add X10, X10, 16
	073 Move W2, 5
	074 Move X0, X21
	075 Call 0x1C5D788
	076 Move W9, [X10]
	077 Add W9, W9, 5
	078 Add X8, X8, W9
	079 Add X0, X8, 312
	080 Move X8, [X0]
	081 Move X1, [X0+8]
	082 Move X0, X21
	083 NotImplemented "Instruction BLR not yet implemented."
	084 Compare X24, 0
	085 JumpIfEqual {126}
	086 Move [X24+16], X0
	087 Move X8, [X21]
	088 Move X1, [X25]
	089 NotImplemented "Instruction LDRH not yet implemented."
	090 Compare X9, 0
	091 JumpIfEqual {98}
	092 Move X10, [X8+176]
	093 Add X10, X10, 8
	094 NotImplemented "Instruction LDUR not yet implemented."
	095 NotImplemented "Instruction CMP not yet implemented."
	096 Subtract X9, X9, 1
	097 Add X10, X10, 16
	098 Move X0, X21
	099 Move W2, W31
	100 Call 0x1C5D788
	101 NotImplemented "Instruction LDRSW not yet implemented."
	102 Add X8, X8, X9
	103 Add X0, X8, 312
	104 Move X8, [X0]
	105 Move X1, [X0+8]
	106 Move X0, X21
	107 NotImplemented "Instruction BLR not yet implemented."
	108 Move [X24+24], X0
	109 Compare X22, 0
	110 JumpIfEqual {126}
	111 Move X0, X22
	112 Move X1, X23
	113 Move X2, X24
	114 Move X3, X20
	115 Move X4, X19
	116 Move X20, [X31+48]
	117 Move X19, [X31+56]
	118 Move X22, [X31+32]
	119 Move X21, [X31+40]
	120 Move X24, [X31+16]
	121 Move X23, [X31+24]
	122 Move X30, [X31+64]
	123 Move X25, [X31+72]
	124 Call ApiClient.SatoriAuthenticateLogoutAsync, X0, X1, X2, X3
	125 Return X0
	126 Call 0x1C17F20

Method: System.Threading.Tasks.Task EventAsync(Satori.ISession session, Satori.Event event, System.Nullable`1<System.Threading.CancellationToken> cancellationToken = null)

Disassembly:
	0x0359F9B8 ADRP X23, 0xB98000
	0x0359F9BC LDR W8, [X0 + 0xE0]
	0x0359F9C0 LDR X23, [X23 + 0x320]
	0x0359F9C4 CBNZ W8, 0x359F9CC
	0x0359F9C8 BL 0x1C16DFC
	0x0359F9CC ADD X8, X31, 0x8
	0x0359F9D0 MOV X0, X31
	0x0359F9D4 BL 0x32C4770
	0x0359F9D8 LDUR V0, [X31 + 0x8]
	0x0359F9DC LDR X9, [X31 + 0x18]
	0x0359F9E0 LDR X2, [X23]
	0x0359F9E4 ADD X8, X31, 0x20
	0x0359F9E8 STR X20, [X31 + 0x58]
	0x0359F9EC ORR X20, X8, 0xF
	0x0359F9F0 MOVN W10, 0x0
	0x0359F9F4 ADD X1, X31, 0x20
	0x0359F9F8 MOV X0, X20
	0x0359F9FC STP X22, X21, [X31 + 0x48]
	0x0359FA00 STUR V0, [X31 + 0x28]
	0x0359FA04 STP X9, X19, [X31 + 0x38]
	0x0359FA08 STR W10, [X31 + 0x20]
	0x0359FA0C BL 0x21938B8
	0x0359FA10 MOV X0, X20
	0x0359FA14 MOV X1, X31
	0x0359FA18 BL 0x32C47F8
	0x0359FA1C LDP X20, X19, [X31 + 0xA0]
	0x0359FA20 LDP X22, X21, [X31 + 0x90]
	0x0359FA24 LDP X24, X23, [X31 + 0x80]
	0x0359FA28 LDR X30, [X31 + 0x70]
	0x0359FA2C ADD X31, X31, 0xB0
	0x0359FA30 RET
	0x0359FA34 SUB X31, X31, 0xC0
	0x0359FA38 STR X30, [X31 + 0x60]
	0x0359FA3C STP X28, X27, [X31 + 0x70]
	0x0359FA40 STP X26, X25, [X31 + 0x80]
	0x0359FA44 STP X24, X23, [X31 + 0x90]
	0x0359FA48 STP X22, X21, [X31 + 0xA0]
	0x0359FA4C STP X20, X19, [X31 + 0xB0]
	0x0359FA50 ADRP X27, 0xE40000
	0x0359FA54 ADRP X26, 0xB97000
	0x0359FA58 LDRB W8, [X27 + 0xFF4]
	0x0359FA5C LDR X26, [X26 + 0xFF0]
	0x0359FA60 MOV X19, X6
	0x0359FA64 MOV X20, X5
	0x0359FA68 MOV X21, X4
	0x0359FA6C MOV W25, W3
	0x0359FA70 MOV W22, W2
	0x0359FA74 MOV X23, X1
	0x0359FA78 MOV X24, X0
	0x0359FA7C TBNZ X8, 0x0, 0x359FAB8
	0x0359FA80 ADRP X0, 0xB97000
	0x0359FA84 LDR X0, [X0 + 0xFF8]
	0x0359FA88 BL 0x1C16CF4
	0x0359FA8C ADRP X0, 0xB98000
	0x0359FA90 LDR X0, [X0 + 0x328]
	0x0359FA94 BL 0x1C16CF4
	0x0359FA98 ADRP X0, 0xB98000
	0x0359FA9C LDR X0, [X0 + 0x8]
	0x0359FAA0 BL 0x1C16CF4
	0x0359FAA4 ADRP X0, 0xB97000

ISIL:
	001 Subtract X31, X31, 192
	002 Move [X31+128], X30
	003 Move [X31+136], X25
	004 Move [X31+144], X24
	005 Move [X31+152], X23
	006 Move [X31+160], X22
	007 Move [X31+168], X21
	008 Move [X31+176], X20
	009 Move [X31+184], X19
	010 Move X25, 0xE41000
	011 Move X24, 0xB58000
	012 Move W8, [X25+4070]
	013 Move X24, [X24+640]
	014 Move X20, X4
	015 Move X21, X3
	016 Move X22, X2
	017 Move X23, X1
	018 Move X19, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {31}
	023 Move X0, 0xB99000
	024 Move X0, [X0+664]
	025 Call 0x1C17CF4
	026 Move X0, 0xB58000
	027 Move X0, [X0+640]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X25+4070], W8
	031 Move X0, [X24]
	032 NotImplemented "Instruction MOVI not yet implemented."
	033 Move [X31+112], X31
	034 Move [X31+80], V0
	035 Move [X31+88], V0
	036 Move [X31+48], V0
	037 Move [X31+56], V0
	038 Move [X31+2], V0
	039 Move X24, 0xB99000
	040 Move W8, [X0+224]
	041 Move X24, [X24+664]
	042 Compare W8, 0
	043 JumpIfNotEqual {45}
	044 Call 0x1C17DFC
	045 Add X8, X31, 8
	046 Move X0, X31
	047 Call AsyncTaskMethodBuilder.Create
	048 NotImplemented "Instruction LDUR not yet implemented."
	049 Move X9, [X31+24]
	050 Move X2, [X24]
	051 Add X8, X31, 32
	052 Move [X31+88], X20
	053 Move [X31+96], X22
	054 Or X20, X8, 15
	055 Move TEMP, 0
	056 Not TEMP
	057 Move W10, TEMP
	058 Add X1, X31, 32
	059 Move X0, X20
	060 Move [X31+72], X23
	061 Move [X31+80], X21
	062 Move [X31+40], V0
	063 Move [X31+56], X9
	064 Move [X31+64], X19
	065 Move [X31+32], W10
	066 Call AsyncTaskMethodBuilder.Start, X0, X1
	067 Move X0, X20
	068 Move X1, X31
	069 Call AsyncTaskMethodBuilder.get_Task, X0
	070 Move X20, [X31+176]
	071 Move X19, [X31+184]
	072 Move X22, [X31+160]
	073 Move X21, [X31+168]
	074 Move X24, [X31+144]
	075 Move X23, [X31+152]
	076 Move X30, [X31+128]
	077 Move X25, [X31+136]
	078 Add X31, X31, 192
	079 Return X0

Method: System.Threading.Tasks.Task EventsAsync(Satori.ISession session, System.Collections.Generic.IEnumerable`1<Satori.Event> events, System.Nullable`1<System.Threading.CancellationToken> cancellationToken = null)

Disassembly:
	0x0359FAA8 LDR X0, [X0 + 0xFF0]
	0x0359FAAC BL 0x1C16CF4
	0x0359FAB0 MOVZ W8, 0x1
	0x0359FAB4 STRB W8, [X27 + 0xFF4]
	0x0359FAB8 LDR X0, [X26]
	0x0359FABC MOVI V0.2D, 0x0
	0x0359FAC0 STP V0, V0, [X31 + 0x40]
	0x0359FAC4 STP V0, V0, [X31 + 0x20]
	0x0359FAC8 STP V0, V0, [X31]
	0x0359FACC ADRP X28, 0xB97000
	0x0359FAD0 ADRP X27, 0xB98000
	0x0359FAD4 ADRP X26, 0xB98000
	0x0359FAD8 LDR W8, [X0 + 0xE0]
	0x0359FADC LDR X28, [X28 + 0xFF8]
	0x0359FAE0 LDR X27, [X27 + 0x328]
	0x0359FAE4 LDR X26, [X26 + 0x8]
	0x0359FAE8 CBNZ W8, 0x359FAF0
	0x0359FAEC BL 0x1C16DFC
	0x0359FAF0 LDR X0, [X28]
	0x0359FAF4 ADD X8, X31, 0x0
	0x0359FAF8 AND W28, W25, 0x1
	0x0359FAFC ORR X25, X8, 0xF
	0x0359FB00 MOV X8, X25
	0x0359FB04 BL 0x263221C
	0x0359FB08 LDR X2, [X27]
	0x0359FB0C MOVN W8, 0x0
	0x0359FB10 ADD X1, X31, 0x0
	0x0359FB14 MOV X0, X25
	0x0359FB18 STP X24, X23, [X31 + 0x20]
	0x0359FB1C STR W22, [X31 + 0x40]
	0x0359FB20 STRB W28, [X31 + 0x44]
	0x0359FB24 STR X21, [X31 + 0x48]
	0x0359FB28 STP X20, X19, [X31 + 0x30]
	0x0359FB2C STR W8, [X31]
	0x0359FB30 BL 0x1FCF314
	0x0359FB34 LDR X1, [X26]
	0x0359FB38 MOV X0, X25
	0x0359FB3C BL 0x2632230
	0x0359FB40 LDP X20, X19, [X31 + 0xB0]
	0x0359FB44 LDP X22, X21, [X31 + 0xA0]
	0x0359FB48 LDP X24, X23, [X31 + 0x90]
	0x0359FB4C LDP X26, X25, [X31 + 0x80]
	0x0359FB50 LDP X28, X27, [X31 + 0x70]
	0x0359FB54 LDR X30, [X31 + 0x60]
	0x0359FB58 ADD X31, X31, 0xC0
	0x0359FB5C RET
	0x0359FB60 SUB X31, X31, 0xE0
	0x0359FB64 STP X30, X27, [X31 + 0x90]
	0x0359FB68 STP X26, X25, [X31 + 0xA0]
	0x0359FB6C STP X24, X23, [X31 + 0xB0]
	0x0359FB70 STP X22, X21, [X31 + 0xC0]
	0x0359FB74 STP X20, X19, [X31 + 0xD0]
	0x0359FB78 ADRP X27, 0xE40000
	0x0359FB7C ADRP X26, 0xB57000
	0x0359FB80 LDRB W8, [X27 + 0xFF5]
	0x0359FB84 LDR X26, [X26 + 0x280]
	0x0359FB88 MOV X19, X6
	0x0359FB8C MOV X21, X5
	0x0359FB90 MOV X22, X4
	0x0359FB94 MOV X24, X3

ISIL:
	001 Subtract X31, X31, 192
	002 Move [X31+128], X30
	003 Move [X31+136], X25
	004 Move [X31+144], X24
	005 Move [X31+152], X23
	006 Move [X31+160], X22
	007 Move [X31+168], X21
	008 Move [X31+176], X20
	009 Move [X31+184], X19
	010 Move X25, 0xE41000
	011 Move X24, 0xB58000
	012 Move W8, [X25+4071]
	013 Move X24, [X24+640]
	014 Move X20, X4
	015 Move X21, X3
	016 Move X22, X2
	017 Move X23, X1
	018 Move X19, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {31}
	023 Move X0, 0xB99000
	024 Move X0, [X0+672]
	025 Call 0x1C17CF4
	026 Move X0, 0xB58000
	027 Move X0, [X0+640]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X25+4071], W8
	031 Move X0, [X24]
	032 NotImplemented "Instruction MOVI not yet implemented."
	033 Move [X31+112], X31
	034 Move [X31+80], V0
	035 Move [X31+88], V0
	036 Move [X31+48], V0
	037 Move [X31+56], V0
	038 Move [X31+2], V0
	039 Move X24, 0xB99000
	040 Move W8, [X0+224]
	041 Move X24, [X24+672]
	042 Compare W8, 0
	043 JumpIfNotEqual {45}
	044 Call 0x1C17DFC
	045 Add X8, X31, 8
	046 Move X0, X31
	047 Call AsyncTaskMethodBuilder.Create
	048 NotImplemented "Instruction LDUR not yet implemented."
	049 Move X9, [X31+24]
	050 Move X2, [X24]
	051 Add X8, X31, 32
	052 Move [X31+88], X20
	053 Move [X31+96], X22
	054 Or X20, X8, 15
	055 Move TEMP, 0
	056 Not TEMP
	057 Move W10, TEMP
	058 Add X1, X31, 32
	059 Move X0, X20
	060 Move [X31+72], X23
	061 Move [X31+80], X21
	062 Move [X31+40], V0
	063 Move [X31+56], X9
	064 Move [X31+64], X19
	065 Move [X31+32], W10
	066 Call AsyncTaskMethodBuilder.Start, X0, X1
	067 Move X0, X20
	068 Move X1, X31
	069 Call AsyncTaskMethodBuilder.get_Task, X0
	070 Move X20, [X31+176]
	071 Move X19, [X31+184]
	072 Move X22, [X31+160]
	073 Move X21, [X31+168]
	074 Move X24, [X31+144]
	075 Move X23, [X31+152]
	076 Move X30, [X31+128]
	077 Move X25, [X31+136]
	078 Add X31, X31, 192
	079 Return X0

Method: System.Threading.Tasks.Task`1<Satori.IApiExperimentList> GetAllExperimentsAsync(Satori.ISession session, System.Nullable`1<System.Threading.CancellationToken> cancellationToken = null)

Disassembly:
	0x0359FB98 MOV X23, X2
	0x0359FB9C MOV X25, X1
	0x0359FBA0 MOV X20, X0
	0x0359FBA4 TBNZ X8, 0x0, 0x359FBC8
	0x0359FBA8 ADRP X0, 0xB98000
	0x0359FBAC LDR X0, [X0 + 0x330]
	0x0359FBB0 BL 0x1C16CF4
	0x0359FBB4 ADRP X0, 0xB57000
	0x0359FBB8 LDR X0, [X0 + 0x280]
	0x0359FBBC BL 0x1C16CF4
	0x0359FBC0 MOVZ W8, 0x1
	0x0359FBC4 STRB W8, [X27 + 0xFF5]
	0x0359FBC8 LDR X0, [X26]
	0x0359FBCC MOVI V0.2D, 0x0
	0x0359FBD0 STR X31, [X31 + 0x80]
	0x0359FBD4 STP V0, V0, [X31 + 0x60]
	0x0359FBD8 STP V0, V0, [X31 + 0x40]
	0x0359FBDC STP V0, V0, [X31 + 0x20]
	0x0359FBE0 ADRP X26, 0xB98000
	0x0359FBE4 LDR W8, [X0 + 0xE0]
	0x0359FBE8 LDR X26, [X26 + 0x330]
	0x0359FBEC CBNZ W8, 0x359FBF4
	0x0359FBF0 BL 0x1C16DFC
	0x0359FBF4 ADD X8, X31, 0x8
	0x0359FBF8 MOV X0, X31
	0x0359FBFC BL 0x32C4770
	0x0359FC00 LDUR V0, [X31 + 0x8]
	0x0359FC04 LDR X9, [X31 + 0x18]
	0x0359FC08 LDR X2, [X26]
	0x0359FC0C ADD X8, X31, 0x20
	0x0359FC10 STP X19, X23, [X31 + 0x58]
	0x0359FC14 ORR X19, X8, 0xF
	0x0359FC18 MOVN W10, 0x0
	0x0359FC1C ADD X1, X31, 0x20
	0x0359FC20 MOV X0, X19
	0x0359FC24 STP X24, X22, [X31 + 0x68]
	0x0359FC28 STP X25, X21, [X31 + 0x48]
	0x0359FC2C STUR V0, [X31 + 0x28]
	0x0359FC30 STP X9, X20, [X31 + 0x38]
	0x0359FC34 STR W10, [X31 + 0x20]
	0x0359FC38 BL 0x2193CB8
	0x0359FC3C MOV X0, X19
	0x0359FC40 MOV X1, X31
	0x0359FC44 BL 0x32C47F8
	0x0359FC48 LDP X20, X19, [X31 + 0xD0]
	0x0359FC4C LDP X22, X21, [X31 + 0xC0]
	0x0359FC50 LDP X24, X23, [X31 + 0xB0]
	0x0359FC54 LDP X26, X25, [X31 + 0xA0]
	0x0359FC58 LDP X30, X27, [X31 + 0x90]
	0x0359FC5C ADD X31, X31, 0xE0
	0x0359FC60 RET
	0x0359FC64 SUB X31, X31, 0xC0
	0x0359FC68 STP X30, X25, [X31 + 0x80]
	0x0359FC6C STP X24, X23, [X31 + 0x90]
	0x0359FC70 STP X22, X21, [X31 + 0xA0]
	0x0359FC74 STP X20, X19, [X31 + 0xB0]
	0x0359FC78 ADRP X25, 0xE40000
	0x0359FC7C ADRP X24, 0xB57000
	0x0359FC80 LDRB W8, [X25 + 0xFF6]
	0x0359FC84 LDR X24, [X24 + 0x280]
	0x0359FC88 MOV X20, X4
	0x0359FC8C MOV X21, X3
	0x0359FC90 MOV X22, X2
	0x0359FC94 MOV X23, X1

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+80], X30
	003 Move [X31+88], X25
	004 Move [X31+96], X24
	005 Move [X31+104], X23
	006 Move [X31+112], X22
	007 Move [X31+120], X21
	008 Move [X31+128], X20
	009 Move [X31+136], X19
	010 Move X24, 0xE41000
	011 Move X23, 0xB98000
	012 Move W8, [X24+4072]
	013 Move X23, [X23+3968]
	014 Move X19, X3
	015 Move X20, X2
	016 Move X21, X1
	017 Move X22, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {36}
	022 Move X0, 0xB98000
	023 Move X0, [X0+3976]
	024 Call 0x1C17CF4
	025 Move X0, 0xB99000
	026 Move X0, [X0+680]
	027 Call 0x1C17CF4
	028 Move X0, 0xB98000
	029 Move X0, [X0+3992]
	030 Call 0x1C17CF4
	031 Move X0, 0xB98000
	032 Move X0, [X0+3968]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X24+4072], W8
	036 Move X0, [X23]
	037 NotImplemented "Instruction MOVI not yet implemented."
	038 Move [X31+64], X31
	039 Move [X31+32], V0
	040 Move [X31+40], V0
	041 Move [X31], V0
	042 Move [X31+8], V0
	043 Move X23, 0xB98000
	044 Move X25, 0xB99000
	045 Move X24, 0xB98000
	046 Move W8, [X0+224]
	047 Move X23, [X23+3976]
	048 Move X25, [X25+680]
	049 Move X24, [X24+3992]
	050 Compare W8, 0
	051 JumpIfNotEqual {53}
	052 Call 0x1C17DFC
	053 Move X0, [X23]
	054 Add X8, X31, 0
	055 Or X23, X8, 15
	056 Move X8, X23
	057 Call AsyncTaskMethodBuilder`1<Object>.Create
	058 Move X2, [X25]
	059 Move TEMP, 0
	060 Not TEMP
	061 Move W8, TEMP
	062 Add X1, X31, 0
	063 Move X0, X23
	064 Move [X31+32], X22
	065 Move [X31+40], X21
	066 Move [X31+48], X20
	067 Move [X31+56], X19
	068 Move [X31], W8
	069 Call AsyncTaskMethodBuilder`1<Object>.Start, X0, X1
	070 Move X1, [X24]
	071 Move X0, X23
	072 Call AsyncTaskMethodBuilder`1<Object>.get_Task, X0
	073 Move X20, [X31+128]
	074 Move X19, [X31+136]
	075 Move X22, [X31+112]
	076 Move X21, [X31+120]
	077 Move X24, [X31+96]
	078 Move X23, [X31+104]
	079 Move X30, [X31+80]
	080 Move X25, [X31+88]
	081 Add X31, X31, 144
	082 Return X0

Method: System.Threading.Tasks.Task`1<Satori.IApiExperimentList> GetExperimentsAsync(Satori.ISession session, System.Collections.Generic.IEnumerable`1<System.String> names, System.Nullable`1<System.Threading.CancellationToken> cancellationToken = null)

Disassembly:
	0x0359FC98 MOV X19, X0
	0x0359FC9C TBNZ X8, 0x0, 0x359FCC0
	0x0359FCA0 ADRP X0, 0xB98000
	0x0359FCA4 LDR X0, [X0 + 0x338]
	0x0359FCA8 BL 0x1C16CF4
	0x0359FCAC ADRP X0, 0xB57000
	0x0359FCB0 LDR X0, [X0 + 0x280]
	0x0359FCB4 BL 0x1C16CF4
	0x0359FCB8 MOVZ W8, 0x1
	0x0359FCBC STRB W8, [X25 + 0xFF6]
	0x0359FCC0 LDR X0, [X24]
	0x0359FCC4 MOVI V0.2D, 0x0
	0x0359FCC8 STR X31, [X31 + 0x70]
	0x0359FCCC STP V0, V0, [X31 + 0x50]
	0x0359FCD0 STP V0, V0, [X31 + 0x30]
	0x0359FCD4 STR V0, [X31 + 0x2]
	0x0359FCD8 ADRP X24, 0xB98000
	0x0359FCDC LDR W8, [X0 + 0xE0]
	0x0359FCE0 LDR X24, [X24 + 0x338]
	0x0359FCE4 CBNZ W8, 0x359FCEC
	0x0359FCE8 BL 0x1C16DFC
	0x0359FCEC ADD X8, X31, 0x8
	0x0359FCF0 MOV X0, X31
	0x0359FCF4 BL 0x32C4770
	0x0359FCF8 LDUR V0, [X31 + 0x8]
	0x0359FCFC LDR X9, [X31 + 0x18]
	0x0359FD00 LDR X2, [X24]
	0x0359FD04 ADD X8, X31, 0x20
	0x0359FD08 STP X20, X22, [X31 + 0x58]
	0x0359FD0C ORR X20, X8, 0xF
	0x0359FD10 MOVN W10, 0x0
	0x0359FD14 ADD X1, X31, 0x20
	0x0359FD18 MOV X0, X20
	0x0359FD1C STP X23, X21, [X31 + 0x48]
	0x0359FD20 STUR V0, [X31 + 0x28]
	0x0359FD24 STP X9, X19, [X31 + 0x38]
	0x0359FD28 STR W10, [X31 + 0x20]
	0x0359FD2C BL 0x21939B8
	0x0359FD30 MOV X0, X20
	0x0359FD34 MOV X1, X31
	0x0359FD38 BL 0x32C47F8
	0x0359FD3C LDP X20, X19, [X31 + 0xB0]
	0x0359FD40 LDP X22, X21, [X31 + 0xA0]
	0x0359FD44 LDP X24, X23, [X31 + 0x90]
	0x0359FD48 LDP X30, X25, [X31 + 0x80]
	0x0359FD4C ADD X31, X31, 0xC0
	0x0359FD50 RET
	0x0359FD54 STR X30, [X31 - 0x20]!
	0x0359FD58 STP X20, X19, [X31 + 0x10]
	0x0359FD5C ADRP X20, 0xE40000
	0x0359FD60 ADRP X19, 0xB56000
	0x0359FD64 LDRB W8, [X20 + 0xFF7]
	0x0359FD68 LDR X19, [X19 + 0x570]
	0x0359FD6C TBNZ X8, 0x0, 0x359FD90
	0x0359FD70 ADRP X0, 0xB98000
	0x0359FD74 LDR X0, [X0 + 0x340]
	0x0359FD78 BL 0x1C16CF4
	0x0359FD7C ADRP X0, 0xB56000
	0x0359FD80 LDR X0, [X0 + 0x570]
	0x0359FD84 BL 0x1C16CF4
	0x0359FD88 MOVZ W8, 0x1
	0x0359FD8C STRB W8, [X20 + 0xFF7]
	0x0359FD90 LDR X0, [X19]
	0x0359FD94 ADRP X19, 0xB98000
	0x0359FD98 LDR W8, [X0 + 0xE0]
	0x0359FD9C LDR X19, [X19 + 0x340]
	0x0359FDA0 CBNZ W8, 0x359FDA8
	0x0359FDA4 BL 0x1C16DFC
	0x0359FDA8 FMOV D0, 4.000000000232831

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+96], X30
	003 Move [X31+112], X26
	004 Move [X31+120], X25
	005 Move [X31+128], X24
	006 Move [X31+136], X23
	007 Move [X31+144], X22
	008 Move [X31+152], X21
	009 Move [X31+160], X20
	010 Move [X31+168], X19
	011 Move X25, 0xE41000
	012 Move X24, 0xB98000
	013 Move W8, [X25+4073]
	014 Move X24, [X24+3968]
	015 Move X19, X4
	016 Move X20, X3
	017 Move X21, X2
	018 Move X22, X1
	019 Move X23, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {38}
	024 Move X0, 0xB98000
	025 Move X0, [X0+3976]
	026 Call 0x1C17CF4
	027 Move X0, 0xB99000
	028 Move X0, [X0+688]
	029 Call 0x1C17CF4
	030 Move X0, 0xB98000
	031 Move X0, [X0+3992]
	032 Call 0x1C17CF4
	033 Move X0, 0xB98000
	034 Move X0, [X0+3968]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X25+4073], W8
	038 Move X0, [X24]
	039 NotImplemented "Instruction MOVI not yet implemented."
	040 Move [X31+80], X31
	041 Move [X31+48], V0
	042 Move [X31+56], V0
	043 Move [X31+16], V0
	044 Move [X31+24], V0
	045 Move [X31], V0
	046 Move X24, 0xB98000
	047 Move X26, 0xB99000
	048 Move X25, 0xB98000
	049 Move W8, [X0+224]
	050 Move X24, [X24+3976]
	051 Move X26, [X26+688]
	052 Move X25, [X25+3992]
	053 Compare W8, 0
	054 JumpIfNotEqual {56}
	055 Call 0x1C17DFC
	056 Move X0, [X24]
	057 Add X8, X31, 0
	058 Or X24, X8, 15
	059 Move X8, X24
	060 Call AsyncTaskMethodBuilder`1<Object>.Create
	061 Move X2, [X26]
	062 Move TEMP, 0
	063 Not TEMP
	064 Move W8, TEMP
	065 Add X1, X31, 0
	066 Move X0, X24
	067 Move [X31+32], X23
	068 Move [X31+40], X22
	069 Move [X31+56], X19
	070 Move [X31+64], X21
	071 Move [X31+48], X20
	072 Move [X31], W8
	073 Call AsyncTaskMethodBuilder`1<Object>.Start, X0, X1
	074 Move X1, [X25]
	075 Move X0, X24
	076 Call AsyncTaskMethodBuilder`1<Object>.get_Task, X0
	077 Move X20, [X31+160]
	078 Move X19, [X31+168]
	079 Move X22, [X31+144]
	080 Move X21, [X31+152]
	081 Move X24, [X31+128]
	082 Move X23, [X31+136]
	083 Move X26, [X31+112]
	084 Move X25, [X31+120]
	085 Move X30, [X31+96]
	086 Add X31, X31, 176
	087 Return X0

Method: System.Threading.Tasks.Task`1<Satori.IApiFlag> GetFlagAsync(Satori.ISession session, System.String name, System.Nullable`1<System.Threading.CancellationToken> cancellationToken = null)

Disassembly:
	0x0359FDAC MOV X0, X31
	0x0359FDB0 BL 0x3394644
	0x0359FDB4 LDR X8, [X19]
	0x0359FDB8 LDP X20, X19, [X31 + 0x10]
	0x0359FDBC LDR X8, [X8 + 0xB8]
	0x0359FDC0 STR X0, [X8]
	0x0359FDC4 LDR X30, [X31], #0x20
	0x0359FDC8 RET
	0x0359FDCC STR X30, [X31 - 0x40]!
	0x0359FDD0 STP X24, X23, [X31 + 0x10]
	0x0359FDD4 STP X22, X21, [X31 + 0x20]
	0x0359FDD8 STP X20, X19, [X31 + 0x30]
	0x0359FDDC ADRP X20, 0xE40000
	0x0359FDE0 LDRB W8, [X20 + 0xFF8]
	0x0359FDE4 MOV X19, X0
	0x0359FDE8 TBNZ X8, 0x0, 0x359FE6C
	0x0359FDEC ADRP X0, 0xB98000
	0x0359FDF0 LDR X0, [X0 + 0x348]
	0x0359FDF4 BL 0x1C16CF4
	0x0359FDF8 ADRP X0, 0xB98000
	0x0359FDFC LDR X0, [X0 + 0x350]
	0x0359FE00 BL 0x1C16CF4
	0x0359FE04 ADRP X0, 0xB98000
	0x0359FE08 LDR X0, [X0 + 0x358]
	0x0359FE0C BL 0x1C16CF4
	0x0359FE10 ADRP X0, 0xB98000
	0x0359FE14 LDR X0, [X0 + 0x268]
	0x0359FE18 BL 0x1C16CF4
	0x0359FE1C ADRP X0, 0xB98000
	0x0359FE20 LDR X0, [X0 + 0x360]
	0x0359FE24 BL 0x1C16CF4
	0x0359FE28 ADRP X0, 0xB98000
	0x0359FE2C LDR X0, [X0 + 0x368]
	0x0359FE30 BL 0x1C16CF4
	0x0359FE34 ADRP X0, 0xB56000
	0x0359FE38 LDR X0, [X0 + 0x278]
	0x0359FE3C BL 0x1C16CF4
	0x0359FE40 ADRP X0, 0xB98000
	0x0359FE44 LDR X0, [X0 + 0x370]
	0x0359FE48 BL 0x1C16CF4
	0x0359FE4C ADRP X0, 0xB98000
	0x0359FE50 LDR X0, [X0 + 0x378]
	0x0359FE54 BL 0x1C16CF4
	0x0359FE58 ADRP X0, 0xB98000
	0x0359FE5C LDR X0, [X0 + 0x380]
	0x0359FE60 BL 0x1C16CF4
	0x0359FE64 MOVZ W8, 0x1
	0x0359FE68 STRB W8, [X20 + 0xFF8]
	0x0359FE6C STR X31, [X31 + 0x8]
	0x0359FE70 ADRP X24, 0xB98000
	0x0359FE74 LDR W8, [X19]
	0x0359FE78 LDR X24, [X24 + 0x268]
	0x0359FE7C CBZ W8, 0x359FF60
	0x0359FE80 LDR X8, [X19 + 0x20]
	0x0359FE84 CBZ X8, 0x35A00D0
	0x0359FE88 ADRP X9, 0xB56000
	0x0359FE8C LDR X9, [X9 + 0x278]
	0x0359FE90 ADRP X10, 0xB98000
	0x0359FE94 LDR X9, [X9]
	0x0359FE98 LDR X9, [X9 + 0xB8]
	0x0359FE9C LDR X10, [X10 + 0x348]
	0x0359FEA0 LDR X22, [X8 + 0x40]
	0x0359FEA4 LDR X21, [X8 + 0x30]
	0x0359FEA8 LDR X20, [X9]
	0x0359FEAC LDR X0, [X10]
	0x0359FEB0 BL 0x1C16F10
	0x0359FEB4 MOV X23, X0
	0x0359FEB8 MOV X1, X31

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+80], X30
	003 Move [X31+96], X26
	004 Move [X31+104], X25
	005 Move [X31+112], X24
	006 Move [X31+120], X23
	007 Move [X31+128], X22
	008 Move [X31+136], X21
	009 Move [X31+144], X20
	010 Move [X31+152], X19
	011 Move X25, 0xE41000
	012 Move X24, 0xB99000
	013 Move W8, [X25+4074]
	014 Move X24, [X24+696]
	015 Move X19, X4
	016 Move X20, X3
	017 Move X21, X2
	018 Move X22, X1
	019 Move X23, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {38}
	024 Move X0, 0xB99000
	025 Move X0, [X0+704]
	026 Call 0x1C17CF4
	027 Move X0, 0xB99000
	028 Move X0, [X0+712]
	029 Call 0x1C17CF4
	030 Move X0, 0xB99000
	031 Move X0, [X0+720]
	032 Call 0x1C17CF4
	033 Move X0, 0xB99000
	034 Move X0, [X0+696]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X25+4074], W8
	038 Move X0, [X24]
	039 NotImplemented "Instruction MOVI not yet implemented."
	040 Move [X31+48], V0
	041 Move [X31+56], V0
	042 Move [X31+16], V0
	043 Move [X31+24], V0
	044 Move [X31], V0
	045 Move X24, 0xB99000
	046 Move X26, 0xB99000
	047 Move X25, 0xB99000
	048 Move W8, [X0+224]
	049 Move X24, [X24+704]
	050 Move X26, [X26+712]
	051 Move X25, [X25+720]
	052 Compare W8, 0
	053 JumpIfNotEqual {55}
	054 Call 0x1C17DFC
	055 Move X0, [X24]
	056 Add X8, X31, 0
	057 Or X24, X8, 15
	058 Move X8, X24
	059 Call AsyncTaskMethodBuilder`1<Object>.Create
	060 Move X2, [X26]
	061 Move TEMP, 0
	062 Not TEMP
	063 Move W8, TEMP
	064 Add X1, X31, 0
	065 Move X0, X24
	066 Move [X31+32], X23
	067 Move [X31+40], X22
	068 Move [X31+48], X21
	069 Move [X31+56], X20
	070 Move [X31+64], X19
	071 Move [X31], W8
	072 Call AsyncTaskMethodBuilder`1<Object>.Start, X0, X1
	073 Move X1, [X25]
	074 Move X0, X24
	075 Call AsyncTaskMethodBuilder`1<Object>.get_Task, X0
	076 Move X20, [X31+144]
	077 Move X19, [X31+152]
	078 Move X22, [X31+128]
	079 Move X21, [X31+136]
	080 Move X24, [X31+112]
	081 Move X23, [X31+120]
	082 Move X26, [X31+96]
	083 Move X25, [X31+104]
	084 Move X30, [X31+80]
	085 Add X31, X31, 160
	086 Return X0

Method: System.Threading.Tasks.Task`1<Satori.IApiFlag> GetFlagAsync(Satori.ISession session, System.String name, System.String defaultValue, System.Nullable`1<System.Threading.CancellationToken> cancellationToken = null)

Disassembly:
	0x0359FEBC BL 0x33BDD8C
	0x0359FEC0 CBZ X23, 0x35A00D4
	0x0359FEC4 LDR X8, [X19 + 0x28]
	0x0359FEC8 STR X8, [X23 + 0x20]
	0x0359FECC LDR V0, [X19 + 0x3]
	0x0359FED0 UNIMPLEMENTED
	0x0359FED4 STR V0, [X23 + 0x1]
	0x0359FED8 CBZ X22, 0x35A00D8
	0x0359FEDC LDP X4, X5, [X19 + 0x40]
	0x0359FEE0 MOV X0, X22
	0x0359FEE4 MOV X1, X21
	0x0359FEE8 MOV X2, X20
	0x0359FEEC MOV X3, X23
	0x0359FEF0 BL 0x35968D8
	0x0359FEF4 CBZ X0, 0x35A00DC
	0x0359FEF8 ADRP X8, 0xB98000
	0x0359FEFC LDR X8, [X8 + 0x380]
	0x0359FF00 LDR X1, [X8]
	0x0359FF04 BL 0x269F5D0
	0x0359FF08 ADRP X8, 0xB98000
	0x0359FF0C LDR X8, [X8 + 0x378]
	0x0359FF10 STR X0, [X31 + 0x8]
	0x0359FF14 LDR X1, [X8]
	0x0359FF18 ADD X0, X31, 0x8
	0x0359FF1C BL 0x2677430
	0x0359FF20 TBNZ X0, 0x0, 0x359FF74
	0x0359FF24 STR W31, [X19]
	0x0359FF28 LDR X8, [X31 + 0x8]
	0x0359FF2C STR X8, [X19 + 0x50]
	0x0359FF30 LDR X0, [X24]
	0x0359FF34 LDR W8, [X0 + 0xE0]
	0x0359FF38 CBNZ W8, 0x359FF40
	0x0359FF3C BL 0x1C16DFC
	0x0359FF40 ADRP X8, 0xB98000
	0x0359FF44 LDR X8, [X8 + 0x350]
	0x0359FF48 ADD X0, X19, 0x8
	0x0359FF4C LDR X3, [X8]
	0x0359FF50 ADD X1, X31, 0x8
	0x0359FF54 MOV X2, X19
	0x0359FF58 BL 0x1FBEC68
	0x0359FF5C B 0x35A00B8
	0x0359FF60 LDR X8, [X19 + 0x50]
	0x0359FF64 MOVN W9, 0x0
	0x0359FF68 STR X8, [X31 + 0x8]
	0x0359FF6C STR X31, [X19 + 0x50]
	0x0359FF70 STR W9, [X19]
	0x0359FF74 ADRP X8, 0xB98000
	0x0359FF78 LDR X8, [X8 + 0x370]
	0x0359FF7C ADD X0, X31, 0x8
	0x0359FF80 LDR X1, [X8]
	0x0359FF84 BL 0x2677474
	0x0359FF88 MOV X20, X0
	0x0359FF8C CBZ X0, 0x35A00CC
	0x0359FF90 ADRP X22, 0xB98000
	0x0359FF94 LDR X8, [X20]
	0x0359FF98 LDR X22, [X22 + 0x360]
	0x0359FF9C LDRH W9, [X8 + 0x12E]
	0x0359FFA0 LDR X1, [X22]
	0x0359FFA4 CBZ X9, 0x359FFC8
	0x0359FFA8 LDR X10, [X8 + 0xB0]
	0x0359FFAC ADD X10, X10, 0x8
	0x0359FFB0 LDUR X11, [X10 - 0x8]
	0x0359FFB4 CMP X11, X1
	0x0359FFB8 B.EQ 0x359FFD8
	0x0359FFBC SUBS X9, X9, 0x1
	0x0359FFC0 ADD X10, X10, 0x10
	0x0359FFC4 B.NE 0x359FFB0
	0x0359FFC8 MOVZ W2, 0x2
	0x0359FFCC MOV X0, X20
	0x0359FFD0 BL 0x1C5C788
	0x0359FFD4 B 0x359FFE8
	0x0359FFD8 LDR W9, [X10]
	0x0359FFDC ADD W9, W9, 0x2
	0x0359FFE0 ADD X8, X8, W9, 0x4, SXTW
	0x0359FFE4 ADD X0, X8, 0x138
	0x0359FFE8 LDP X8, X1, [X0]
	0x0359FFEC MOV X0, X20
	0x0359FFF0 BLR X8
	0x0359FFF4 LDR X8, [X20]
	0x0359FFF8 LDR X1, [X22]
	0x0359FFFC MOV X21, X0
	0x035A0000 LDRH W9, [X8 + 0x12E]
	0x035A0004 CBZ X9, 0x35A0028
	0x035A0008 LDR X10, [X8 + 0xB0]
	0x035A000C ADD X10, X10, 0x8
	0x035A0010 LDUR X11, [X10 - 0x8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, X3
	007 Move X20, X2
	008 Move X21, X0
	009 Move X3, X4
	010 Move X4, X5
	011 Call Client.GetFlagAsync, X0, X1, X2, X3
	012 Move X20, [X31+32]
	013 Move X19, [X31+40]
	014 Move X22, [X31+16]
	015 Move X21, [X31+24]
	016 Move X30, [X31+48]
	017 Return X0
	018 NotImplemented "Instruction CMP not yet implemented."
	019 Move X22, X0
	020 Move X0, X22
	021 Call 0x3EB2AD0
	022 Move X22, X0
	023 Move X0, 0xB5D000
	024 Move X0, [X0+1400]
	025 Call 0x1C17D08
	026 Move X8, [X22]
	027 Move X1, [X8]
	028 Call 0x1C18270
	029 Move TEMP, X0
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfNotEqual {34}
	033 Call 0x3EB2AE0
	034 Move X0, 0xB90000
	035 Move X0, [X0+2456]
	036 Call 0x1C17D08
	037 Move X8, [X22]
	038 Move X1, [X8]
	039 Call 0x1C18270
	040 Move TEMP, X0
	041 And TEMP, TEMP, 1
	042 Compare TEMP, 1
	043 JumpIfNotEqual {90}
	044 Move X22, [X22]
	045 Call 0x3EB2AE0
	046 Move X8, [X21+72]
	047 Compare X8, 0
	048 JumpIfEqual {89}
	049 Move X9, [X8+24]
	050 Move X0, [X8+64]
	051 Move X2, [X8+40]
	052 Move X1, X22
	053 NotImplemented "Instruction BLR not yet implemented."
	054 Move TEMP, X0
	055 And TEMP, TEMP, 1
	056 Compare TEMP, 1
	057 JumpIfNotEqual {98}
	058 Move X0, 0xB99000
	059 Move X0, [X0+728]
	060 Call 0x1C17D08
	061 Call 0x1C17F10
	062 Move X1, X31
	063 Move X21, X0
	064 Call Object..ctor, X0
	065 Compare X21, 0
	066 JumpIfEqual {89}
	067 Move [X21+24], X20
	068 Move [X21+32], X19
	069 Move [X21+16], W31
	070 Move X0, 0xB56000
	071 Move X0, [X0+1976]
	072 Call 0x1C17D08
	073 Move W8, [X0+224]
	074 Compare W8, 0
	075 JumpIfNotEqual {77}
	076 Call 0x1C17DFC
	077 Move X0, 0xB99000
	078 Move X0, [X0+736]
	079 Call 0x1C17D08
	080 Move X1, X0
	081 Move X0, X21
	082 Move X20, [X31+32]
	083 Move X19, [X31+40]
	084 Move X22, [X31+16]
	085 Move X21, [X31+24]
	086 Move X30, [X31+48]
	087 Call Task.FromResult, X0
	088 Return X0
	089 Call 0x1C17F20
	090 Move W0, 8
	091 Call 0x3EB2AF0
	092 Move X8, [X22]
	093 Move [X0], X8
	094 Move X1, 0x916000
	095 Add X1, X1, 3672
	096 Move X2, X31
	097 Call 0x3EB2B00
	098 Move X0, X22
	099 Call 0x1C17F18
	100 Move X22, X0
	101 Call 0x3EB2AE0
	102 Move X0, X22
	103 Call 0x1D2D690
	104 Call 0x1991590

Method: System.Threading.Tasks.Task`1<Satori.IApiFlag> GetFlagDefaultAsync(System.String name, System.Nullable`1<System.Threading.CancellationToken> cancellationToken = null)

Disassembly:
	0x035A0014 CMP X11, X1
	0x035A0018 B.EQ 0x35A0038
	0x035A001C SUBS X9, X9, 0x1
	0x035A0020 ADD X10, X10, 0x10
	0x035A0024 B.NE 0x35A0010
	0x035A0028 MOVZ W2, 0x1
	0x035A002C MOV X0, X20
	0x035A0030 BL 0x1C5C788
	0x035A0034 B 0x35A0048
	0x035A0038 LDR W9, [X10]
	0x035A003C ADD W9, W9, 0x1
	0x035A0040 ADD X8, X8, W9, 0x4, SXTW
	0x035A0044 ADD X0, X8, 0x138
	0x035A0048 LDP X8, X1, [X0]
	0x035A004C MOV X0, X20
	0x035A0050 BLR X8
	0x035A0054 ADRP X8, 0xB97000
	0x035A0058 LDR X8, [X8 + 0x368]
	0x035A005C MOV X22, X0
	0x035A0060 LDR X0, [X8]
	0x035A0064 BL 0x1C16F10
	0x035A0068 MOV X20, X0
	0x035A006C MOV X1, X31
	0x035A0070 BL 0x33BDD8C
	0x035A0074 STR X31, [X20 + 0x20]
	0x035A0078 MOV X0, X20
	0x035A007C MOV X1, X21
	0x035A0080 MOV X2, X22
	0x035A0084 BL 0x35A5AE0
	0x035A0088 MOVN W8, 0x1
	0x035A008C STR W8, [X19], #0x8
	0x035A0090 LDR X0, [X24]
	0x035A0094 ADRP X21, 0xB97000
	0x035A0098 LDR W8, [X0 + 0xE0]
	0x035A009C LDR X21, [X21 + 0x358]
	0x035A00A0 CBNZ W8, 0x35A00A8
	0x035A00A4 BL 0x1C16DFC
	0x035A00A8 LDR X2, [X21]
	0x035A00AC MOV X0, X19
	0x035A00B0 MOV X1, X20
	0x035A00B4 BL 0x26322B0
	0x035A00B8 LDP X20, X19, [X31 + 0x30]
	0x035A00BC LDP X22, X21, [X31 + 0x20]
	0x035A00C0 LDP X24, X23, [X31 + 0x10]
	0x035A00C4 LDR X30, [X31], #0x40
	0x035A00C8 RET
	0x035A00CC BL 0x1C16F20
	0x035A00D0 BL 0x1C16F20
	0x035A00D4 BL 0x1C16F20
	0x035A00D8 BL 0x1C16F20
	0x035A00DC BL 0x1C16F20
	0x035A00E0 B 0x35A0110
	0x035A00E4 B 0x35A0110
	0x035A00E8 B 0x35A0110
	0x035A00EC B 0x35A0110
	0x035A00F0 B 0x35A0110
	0x035A00F4 B 0x35A0110
	0x035A00F8 B 0x35A0110
	0x035A00FC B 0x35A0110
	0x035A0100 B 0x35A0110
	0x035A0104 B 0x35A0110
	0x035A0108 B 0x35A0110
	0x035A010C B 0x35A0110
	0x035A0110 MOV X20, X0

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+80], X30
	003 Move [X31+88], X25
	004 Move [X31+96], X24
	005 Move [X31+104], X23
	006 Move [X31+112], X22
	007 Move [X31+120], X21
	008 Move [X31+128], X20
	009 Move [X31+136], X19
	010 Move X24, 0xE40000
	011 Move X23, 0xB98000
	012 Move W8, [X24+4075]
	013 Move X23, [X23+696]
	014 Move X19, X3
	015 Move X20, X2
	016 Move X21, X1
	017 Move X22, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {36}
	022 Move X0, 0xB98000
	023 Move X0, [X0+704]
	024 Call 0x1C17CF4
	025 Move X0, 0xB98000
	026 Move X0, [X0+744]
	027 Call 0x1C17CF4
	028 Move X0, 0xB98000
	029 Move X0, [X0+720]
	030 Call 0x1C17CF4
	031 Move X0, 0xB98000
	032 Move X0, [X0+696]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X24+4075], W8
	036 Move X0, [X23]
	037 NotImplemented "Instruction MOVI not yet implemented."
	038 Move [X31+64], X31
	039 Move [X31+32], V0
	040 Move [X31+40], V0
	041 Move [X31], V0
	042 Move [X31+8], V0
	043 Move X23, 0xB98000
	044 Move X25, 0xB98000
	045 Move X24, 0xB98000
	046 Move W8, [X0+224]
	047 Move X23, [X23+704]
	048 Move X25, [X25+744]
	049 Move X24, [X24+720]
	050 Compare W8, 0
	051 JumpIfNotEqual {53}
	052 Call 0x1C17DFC
	053 Move X0, [X23]
	054 Add X8, X31, 0
	055 Or X23, X8, 15
	056 Move X8, X23
	057 Call AsyncTaskMethodBuilder`1<Object>.Create
	058 Move X2, [X25]
	059 Move TEMP, 0
	060 Not TEMP
	061 Move W8, TEMP
	062 Add X1, X31, 0
	063 Move X0, X23
	064 Move [X31+32], X22
	065 Move [X31+40], X21
	066 Move [X31+48], X20
	067 Move [X31+56], X19
	068 Move [X31], W8
	069 Call AsyncTaskMethodBuilder`1<Object>.Start, X0, X1
	070 Move X1, [X24]
	071 Move X0, X23
	072 Call AsyncTaskMethodBuilder`1<Object>.get_Task, X0
	073 Move X20, [X31+128]
	074 Move X19, [X31+136]
	075 Move X22, [X31+112]
	076 Move X21, [X31+120]
	077 Move X24, [X31+96]
	078 Move X23, [X31+104]
	079 Move X30, [X31+80]
	080 Move X25, [X31+88]
	081 Add X31, X31, 144
	082 Return X0

Method: System.Threading.Tasks.Task`1<Satori.IApiFlag> GetFlagDefaultAsync(System.String name, System.String defaultValue, System.Nullable`1<System.Threading.CancellationToken> cancellationToken = null)

Disassembly:
	0x035A0114 CMP W1, 0x1
	0x035A0118 B.NE 0x35A01B4
	0x035A011C MOV X0, X20
	0x035A0120 BL 0x3EB1AD0
	0x035A0124 MOV X20, X0
	0x035A0128 ADRP X0, 0xB53000
	0x035A012C LDR X0, [X0 + 0x7D0]
	0x035A0130 BL 0x1C16D08
	0x035A0134 LDR X8, [X20]
	0x035A0138 LDR X1, [X8]
	0x035A013C BL 0x1C17270
	0x035A0140 TBZ X0, 0x0, 0x35A018C
	0x035A0144 LDR X20, [X20]
	0x035A0148 BL 0x3EB1AE0
	0x035A014C MOVN W8, 0x1
	0x035A0150 STR W8, [X19], #0x8
	0x035A0154 ADRP X0, 0xB97000
	0x035A0158 LDR X0, [X0 + 0x268]
	0x035A015C BL 0x1C16D08
	0x035A0160 LDR W8, [X0 + 0xE0]
	0x035A0164 CBNZ W8, 0x35A016C
	0x035A0168 BL 0x1C16DFC
	0x035A016C ADRP X0, 0xB97000
	0x035A0170 LDR X0, [X0 + 0x388]
	0x035A0174 BL 0x1C16D08
	0x035A0178 MOV X2, X0
	0x035A017C MOV X0, X19
	0x035A0180 MOV X1, X20
	0x035A0184 BL 0x26324C8
	0x035A0188 B 0x35A00B8
	0x035A018C MOVZ W0, 0x8
	0x035A0190 BL 0x3EB1AF0
	0x035A0194 LDR X8, [X20]
	0x035A0198 STR X8, [X0]
	0x035A019C ADRP X1, 0x914000
	0x035A01A0 ADD X1, X1, 0xE58
	0x035A01A4 MOV X2, X31
	0x035A01A8 BL 0x3EB1B00
	0x035A01AC MOV X20, X0
	0x035A01B0 BL 0x3EB1AE0
	0x035A01B4 MOV X0, X20
	0x035A01B8 BL 0x1D2C690
	0x035A01BC BL 0x1990590
	0x035A01C0 STP X30, X21, [X31 - 0x20]!
	0x035A01C4 STP X20, X19, [X31 + 0x10]
	0x035A01C8 MOV X20, X1
	0x035A01CC MOV X1, X31
	0x035A01D0 MOV X19, X2
	0x035A01D4 MOV X21, X0
	0x035A01D8 BL 0x33BDD8C
	0x035A01DC MOV X1, X20
	0x035A01E0 MOV X2, X19
	0x035A01E4 LDP X20, X19, [X31 + 0x10]
	0x035A01E8 STR X31, [X21 + 0x20]
	0x035A01EC MOV X0, X21
	0x035A01F0 LDP X30, X21, [X31], #0x20
	0x035A01F4 B 0x35A5AE0
	0x035A01F8 STR X30, [X31 - 0x30]!
	0x035A01FC STP X22, X21, [X31 + 0x10]
	0x035A0200 STP X20, X19, [X31 + 0x20]
	0x035A0204 ADRP X22, 0xE3F000
	0x035A0208 ADRP X21, 0xB97000
	0x035A020C LDRB W8, [X22 + 0xFF9]
	0x035A0210 LDR X21, [X21 + 0x268]
	0x035A0214 MOV X19, X1
	0x035A0218 MOV X20, X0
	0x035A021C TBNZ X8, 0x0, 0x35A0240
	0x035A0220 ADRP X0, 0xB97000
	0x035A0224 LDR X0, [X0 + 0x390]
	0x035A0228 BL 0x1C16CF4
	0x035A022C ADRP X0, 0xB97000
	0x035A0230 LDR X0, [X0 + 0x268]
	0x035A0234 BL 0x1C16CF4
	0x035A0238 MOVZ W8, 0x1
	0x035A023C STRB W8, [X22 + 0xFF9]
	0x035A0240 LDR X0, [X21]
	0x035A0244 ADRP X21, 0xB97000
	0x035A0248 LDR W8, [X0 + 0xE0]
	0x035A024C LDR X21, [X21 + 0x390]
	0x035A0250 CBNZ W8, 0x35A0258
	0x035A0254 BL 0x1C16DFC
	0x035A0258 LDR X2, [X21]
	0x035A025C ADD X0, X20, 0x8
	0x035A0260 MOV X1, X19
	0x035A0264 LDP X20, X19, [X31 + 0x20]
	0x035A0268 LDP X22, X21, [X31 + 0x10]
	0x035A026C LDR X30, [X31], #0x30

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X0+48]
	007 Move X19, X2
	008 Move X21, X0
	009 Move X20, X1
	010 Move X1, X8
	011 Move X2, X20
	012 Call Client.GetFlagDefaultAsync, X0, X1, X2, X3
	013 Move X20, [X31+32]
	014 Move X19, [X31+40]
	015 Move X22, [X31+16]
	016 Move X21, [X31+24]
	017 Move X30, [X31+48]
	018 Return X0
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Move X22, X0
	021 Move X0, X22
	022 Call 0x3EB2AD0
	023 Move X22, X0
	024 Move X0, 0xB5C000
	025 Move X0, [X0+1400]
	026 Call 0x1C17D08
	027 Move X8, [X22]
	028 Move X1, [X8]
	029 Call 0x1C18270
	030 Move TEMP, X0
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfNotEqual {35}
	034 Call 0x3EB2AE0
	035 Move X0, 0xB8F000
	036 Move X0, [X0+2456]
	037 Call 0x1C17D08
	038 Move X8, [X22]
	039 Move X1, [X8]
	040 Call 0x1C18270
	041 Move TEMP, X0
	042 And TEMP, TEMP, 1
	043 Compare TEMP, 1
	044 JumpIfNotEqual {91}
	045 Move X22, [X22]
	046 Call 0x3EB2AE0
	047 Move X8, [X21+72]
	048 Compare X8, 0
	049 JumpIfEqual {90}
	050 Move X9, [X8+24]
	051 Move X0, [X8+64]
	052 Move X2, [X8+40]
	053 Move X1, X22
	054 NotImplemented "Instruction BLR not yet implemented."
	055 Move TEMP, X0
	056 And TEMP, TEMP, 1
	057 Compare TEMP, 1
	058 JumpIfNotEqual {99}
	059 Move X0, 0xB98000
	060 Move X0, [X0+728]
	061 Call 0x1C17D08
	062 Call 0x1C17F10
	063 Move X1, X31
	064 Move X21, X0
	065 Call Object..ctor, X0
	066 Compare X21, 0
	067 JumpIfEqual {90}
	068 Move [X21+24], X20
	069 Move [X21+32], X19
	070 Move [X21+16], W31
	071 Move X0, 0xB55000
	072 Move X0, [X0+1976]
	073 Call 0x1C17D08
	074 Move W8, [X0+224]
	075 Compare W8, 0
	076 JumpIfNotEqual {78}
	077 Call 0x1C17DFC
	078 Move X0, 0xB98000
	079 Move X0, [X0+736]
	080 Call 0x1C17D08
	081 Move X1, X0
	082 Move X0, X21
	083 Move X20, [X31+32]
	084 Move X19, [X31+40]
	085 Move X22, [X31+16]
	086 Move X21, [X31+24]
	087 Move X30, [X31+48]
	088 Call Task.FromResult, X0
	089 Return X0
	090 Call 0x1C17F20
	091 Move W0, 8
	092 Call 0x3EB2AF0
	093 Move X8, [X22]
	094 Move [X0], X8
	095 Move X1, 0x915000
	096 Add X1, X1, 3672
	097 Move X2, X31
	098 Call 0x3EB2B00
	099 Move X0, X22
	100 Call 0x1C17F18
	101 Move X22, X0
	102 Call 0x3EB2AE0
	103 Move X0, X22
	104 Call 0x1D2D690
	105 Call 0x1991590

Method: System.Threading.Tasks.Task`1<Satori.IApiFlagList> GetFlagsAsync(Satori.ISession session, System.Collections.Generic.IEnumerable`1<System.String> names, System.Nullable`1<System.Threading.CancellationToken> cancellationToken = null)

Disassembly:
	0x035A0270 B 0x2632228
	0x035A0274 SUB X31, X31, 0x50
	0x035A0278 STR X30, [X31 + 0x10]
	0x035A027C STP X24, X23, [X31 + 0x20]
	0x035A0280 STP X22, X21, [X31 + 0x30]
	0x035A0284 STP X20, X19, [X31 + 0x40]
	0x035A0288 ADRP X20, 0xE3F000
	0x035A028C LDRB W8, [X20 + 0xFFA]
	0x035A0290 MOV X19, X0
	0x035A0294 TBNZ X8, 0x0, 0x35A030C
	0x035A0298 ADRP X0, 0xB97000
	0x035A029C LDR X0, [X0 + 0x398]
	0x035A02A0 BL 0x1C16CF4
	0x035A02A4 ADRP X0, 0xB97000
	0x035A02A8 LDR X0, [X0 + 0x3A0]
	0x035A02AC BL 0x1C16CF4
	0x035A02B0 ADRP X0, 0xB56000
	0x035A02B4 LDR X0, [X0 + 0x280]
	0x035A02B8 BL 0x1C16CF4
	0x035A02BC ADRP X0, 0xB97000
	0x035A02C0 LDR X0, [X0 + 0x340]
	0x035A02C4 BL 0x1C16CF4
	0x035A02C8 ADRP X0, 0xB54000
	0x035A02CC LDR X0, [X0 + 0x9F0]
	0x035A02D0 BL 0x1C16CF4
	0x035A02D4 ADRP X0, 0xB97000
	0x035A02D8 LDR X0, [X0 + 0x290]
	0x035A02DC BL 0x1C16CF4
	0x035A02E0 ADRP X0, 0xB97000
	0x035A02E4 LDR X0, [X0 + 0x3A8]
	0x035A02E8 BL 0x1C16CF4
	0x035A02EC ADRP X0, 0xB97000
	0x035A02F0 LDR X0, [X0 + 0x3B0]
	0x035A02F4 BL 0x1C16CF4
	0x035A02F8 ADRP X0, 0xB97000
	0x035A02FC LDR X0, [X0 + 0x3B8]
	0x035A0300 BL 0x1C16CF4
	0x035A0304 MOVZ W8, 0x1
	0x035A0308 STRB W8, [X20 + 0xFFA]
	0x035A030C STR X31, [X31 + 0x18]
	0x035A0310 STP X31, X31, [X31]
	0x035A0314 ADRP X23, 0xB56000
	0x035A0318 ADRP X24, 0xB97000
	0x035A031C LDR W8, [X19]
	0x035A0320 LDR X20, [X19 + 0x20]
	0x035A0324 LDR X23, [X23 + 0x280]
	0x035A0328 LDR X24, [X24 + 0x290]
	0x035A032C CBZ W8, 0x35A0350
	0x035A0330 CMP W8, 0x1
	0x035A0334 B.NE 0x35A037C
	0x035A0338 LDR X8, [X19 + 0x48]
	0x035A033C MOVN W9, 0x0
	0x035A0340 STR X8, [X31]
	0x035A0344 STR X31, [X19 + 0x48]
	0x035A0348 STR W9, [X19]
	0x035A034C B 0x35A05D8
	0x035A0350 LDR X8, [X19 + 0x40]
	0x035A0354 MOVN W9, 0x0
	0x035A0358 STR X8, [X31 + 0x8]
	0x035A035C STR X31, [X19 + 0x40]
	0x035A0360 STR W9, [X19]
	0x035A0364 ADRP X8, 0xB97000
	0x035A0368 LDR X8, [X8 + 0x3A8]
	0x035A036C ADD X0, X31, 0x8
	0x035A0370 LDR X1, [X8]
	0x035A0374 BL 0x2677474
	0x035A0378 B 0x35A053C
	0x035A037C CBZ X20, 0x35A0670
	0x035A0380 LDRB W8, [X20 + 0x10]

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+96], X30
	003 Move [X31+112], X26
	004 Move [X31+120], X25
	005 Move [X31+128], X24
	006 Move [X31+136], X23
	007 Move [X31+144], X22
	008 Move [X31+152], X21
	009 Move [X31+160], X20
	010 Move [X31+168], X19
	011 Move X25, 0xE40000
	012 Move X24, 0xB97000
	013 Move W8, [X25+4076]
	014 Move X24, [X24+4000]
	015 Move X19, X4
	016 Move X20, X3
	017 Move X21, X2
	018 Move X22, X1
	019 Move X23, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {38}
	024 Move X0, 0xB97000
	025 Move X0, [X0+4008]
	026 Call 0x1C17CF4
	027 Move X0, 0xB98000
	028 Move X0, [X0+752]
	029 Call 0x1C17CF4
	030 Move X0, 0xB97000
	031 Move X0, [X0+4024]
	032 Call 0x1C17CF4
	033 Move X0, 0xB97000
	034 Move X0, [X0+4000]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X25+4076], W8
	038 Move X0, [X24]
	039 NotImplemented "Instruction MOVI not yet implemented."
	040 Move [X31+80], X31
	041 Move [X31+48], V0
	042 Move [X31+56], V0
	043 Move [X31+16], V0
	044 Move [X31+24], V0
	045 Move [X31], V0
	046 Move X24, 0xB97000
	047 Move X26, 0xB98000
	048 Move X25, 0xB97000
	049 Move W8, [X0+224]
	050 Move X24, [X24+4008]
	051 Move X26, [X26+752]
	052 Move X25, [X25+4024]
	053 Compare W8, 0
	054 JumpIfNotEqual {56}
	055 Call 0x1C17DFC
	056 Move X0, [X24]
	057 Add X8, X31, 0
	058 Or X24, X8, 15
	059 Move X8, X24
	060 Call AsyncTaskMethodBuilder`1<Object>.Create
	061 Move X2, [X26]
	062 Move TEMP, 0
	063 Not TEMP
	064 Move W8, TEMP
	065 Add X1, X31, 0
	066 Move X0, X24
	067 Move [X31+32], X23
	068 Move [X31+40], X22
	069 Move [X31+56], X19
	070 Move [X31+64], X21
	071 Move [X31+48], X20
	072 Move [X31], W8
	073 Call AsyncTaskMethodBuilder`1<Object>.Start, X0, X1
	074 Move X1, [X25]
	075 Move X0, X24
	076 Call AsyncTaskMethodBuilder`1<Object>.get_Task, X0
	077 Move X20, [X31+160]
	078 Move X19, [X31+168]
	079 Move X22, [X31+144]
	080 Move X21, [X31+152]
	081 Move X24, [X31+128]
	082 Move X23, [X31+136]
	083 Move X26, [X31+112]
	084 Move X25, [X31+120]
	085 Move X30, [X31+96]
	086 Add X31, X31, 176
	087 Return X0

Method: System.Threading.Tasks.Task`1<Satori.IApiFlagList> GetFlagsDefaultAsync(System.Collections.Generic.IEnumerable`1<System.String> names, System.Nullable`1<System.Threading.CancellationToken> cancellationToken = null)

Disassembly:
	0x035A0384 CBZ W8, 0x35A0540
	0x035A0388 LDR X21, [X19 + 0x28]
	0x035A038C CBZ X21, 0x35A0674
	0x035A0390 LDR X8, [X21]
	0x035A0394 LDR X1, [X24]
	0x035A0398 LDRH W9, [X8 + 0x12E]
	0x035A039C CBZ X9, 0x35A03C0
	0x035A03A0 LDR X10, [X8 + 0xB0]
	0x035A03A4 ADD X10, X10, 0x8
	0x035A03A8 LDUR X11, [X10 - 0x8]
	0x035A03AC CMP X11, X1
	0x035A03B0 B.EQ 0x35A03D0
	0x035A03B4 SUBS X9, X9, 0x1
	0x035A03B8 ADD X10, X10, 0x10
	0x035A03BC B.NE 0x35A03A8
	0x035A03C0 MOVZ W2, 0x5
	0x035A03C4 MOV X0, X21
	0x035A03C8 BL 0x1C5C788
	0x035A03CC B 0x35A03E0
	0x035A03D0 LDR W9, [X10]
	0x035A03D4 ADD W9, W9, 0x5
	0x035A03D8 ADD X8, X8, W9, 0x4, SXTW
	0x035A03DC ADD X0, X8, 0x138
	0x035A03E0 LDP X8, X1, [X0]
	0x035A03E4 MOV X0, X21
	0x035A03E8 BLR X8
	0x035A03EC MOV X1, X31
	0x035A03F0 BL 0x32277A8
	0x035A03F4 TBNZ X0, 0x0, 0x35A053C
	0x035A03F8 ADRP X8, 0xB54000
	0x035A03FC LDR X8, [X8 + 0x9F0]
	0x035A0400 LDR X21, [X19 + 0x28]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0xE40000
	008 Move W8, [X23+4077]
	009 Move X19, X3
	010 Move X20, X2
	011 Move X21, X1
	012 Move X22, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0xB56000
	018 Move X0, [X0+632]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X23+4077], W8
	022 Move X0, [X22+64]
	023 Compare X0, 0
	024 JumpIfEqual {43}
	025 Move X8, 0xB56000
	026 Move X8, [X8+632]
	027 Move X2, [X22+48]
	028 Move X4, X21
	029 Move X5, X20
	030 Move X8, [X8]
	031 Move X6, X19
	032 Move X20, [X31+32]
	033 Move X19, [X31+40]
	034 Move X22, [X31+16]
	035 Move X21, [X31+24]
	036 Move X8, [X8+184]
	037 Move X1, [X8]
	038 Move X3, X1
	039 Move X30, [X31+48]
	040 Move X23, [X31+56]
	041 Call ApiClient.SatoriGetFlagsAsync, X0, X1, X2, X3, X4, X5
	042 Return X0
	043 Call 0x1C17F20

Method: System.Threading.Tasks.Task`1<Satori.ISession> IdentifyAsync(Satori.ISession session, System.String id, System.Collections.Generic.Dictionary`2<System.String, System.String> defaultProperties, System.Collections.Generic.Dictionary`2<System.String, System.String> customProperties, System.Nullable`1<System.Threading.CancellationToken> cancellationToken = null)

Disassembly:
	0x035A0404 LDR X0, [X8]
	0x035A0408 LDR W8, [X0 + 0xE0]
	0x035A040C CBNZ W8, 0x35A0414
	0x035A0410 BL 0x1C16DFC
	0x035A0414 MOV X0, X31
	0x035A0418 BL 0x33616A4
	0x035A041C ADRP X22, 0xB97000
	0x035A0420 LDR X22, [X22 + 0x340]
	0x035A0424 MOV X8, X0
	0x035A0428 STR X8, [X31 + 0x18]
	0x035A042C LDR X0, [X22]
	0x035A0430 LDR W8, [X0 + 0xE0]
	0x035A0434 CBNZ W8, 0x35A0440
	0x035A0438 BL 0x1C16DFC
	0x035A043C LDR X0, [X22]
	0x035A0440 LDR X8, [X0 + 0xB8]
	0x035A0444 LDR X1, [X8]
	0x035A0448 ADD X0, X31, 0x18
	0x035A044C MOV X2, X31
	0x035A0450 BL 0x335FC68
	0x035A0454 CBZ X21, 0x35A0678
	0x035A0458 LDR X8, [X21]
	0x035A045C LDR X1, [X24]
	0x035A0460 MOV X22, X0
	0x035A0464 LDRH W9, [X8 + 0x12E]
	0x035A0468 CBZ X9, 0x35A048C
	0x035A046C LDR X10, [X8 + 0xB0]
	0x035A0470 ADD X10, X10, 0x8
	0x035A0474 LDUR X11, [X10 - 0x8]
	0x035A0478 CMP X11, X1
	0x035A047C B.EQ 0x35A049C
	0x035A0480 SUBS X9, X9, 0x1
	0x035A0484 ADD X10, X10, 0x10
	0x035A0488 B.NE 0x35A0474
	0x035A048C MOVZ W2, 0x7
	0x035A0490 MOV X0, X21
	0x035A0494 BL 0x1C5C788
	0x035A0498 B 0x35A04AC
	0x035A049C LDR W9, [X10]
	0x035A04A0 ADD W9, W9, 0x7
	0x035A04A4 ADD X8, X8, W9, 0x4, SXTW
	0x035A04A8 ADD X0, X8, 0x138
	0x035A04AC LDP X8, X2, [X0]
	0x035A04B0 MOV X0, X21
	0x035A04B4 MOV X1, X22
	0x035A04B8 BLR X8
	0x035A04BC TBZ X0, 0x0, 0x35A053C
	0x035A04C0 LDP X1, X2, [X19 + 0x28]
	0x035A04C4 LDR X3, [X19 + 0x38]
	0x035A04C8 MOV X0, X20
	0x035A04CC BL 0x359F740
	0x035A04D0 CBZ X0, 0x35A067C
	0x035A04D4 ADRP X8, 0xB97000
	0x035A04D8 LDR X8, [X8 + 0x3B8]
	0x035A04DC LDR X1, [X8]
	0x035A04E0 BL 0x269F5D0
	0x035A04E4 ADRP X8, 0xB97000
	0x035A04E8 LDR X8, [X8 + 0x3B0]
	0x035A04EC STR X0, [X31 + 0x8]
	0x035A04F0 LDR X1, [X8]
	0x035A04F4 ADD X0, X31, 0x8
	0x035A04F8 BL 0x2677430
	0x035A04FC TBNZ X0, 0x0, 0x35A0364
	0x035A0500 STR W31, [X19]
	0x035A0504 LDR X8, [X31 + 0x8]
	0x035A0508 STR X8, [X19 + 0x40]
	0x035A050C LDR X0, [X23]
	0x035A0510 LDR W8, [X0 + 0xE0]
	0x035A0514 CBNZ W8, 0x35A051C
	0x035A0518 BL 0x1C16DFC
	0x035A051C ADRP X8, 0xB97000
	0x035A0520 LDR X8, [X8 + 0x398]
	0x035A0524 ADD X0, X19, 0x8
	0x035A0528 LDR X3, [X8]

ISIL:
	001 Subtract X31, X31, 208
	002 Move [X31+112], X30
	003 Move [X31+128], X28
	004 Move [X31+136], X27
	005 Move [X31+144], X26
	006 Move [X31+152], X25
	007 Move [X31+160], X24
	008 Move [X31+168], X23
	009 Move [X31+176], X22
	010 Move [X31+184], X21
	011 Move [X31+192], X20
	012 Move [X31+200], X19
	013 Move X27, 0xE40000
	014 Move X26, 0xB98000
	015 Move W8, [X27+4078]
	016 Move X26, [X26+616]
	017 Move X19, X6
	018 Move X20, X5
	019 Move X21, X4
	020 Move X22, X3
	021 Move X23, X2
	022 Move X24, X1
	023 Move X25, X0
	024 Move TEMP, X8
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {42}
	028 Move X0, 0xB98000
	029 Move X0, [X0+624]
	030 Call 0x1C17CF4
	031 Move X0, 0xB98000
	032 Move X0, [X0+760]
	033 Call 0x1C17CF4
	034 Move X0, 0xB98000
	035 Move X0, [X0+640]
	036 Call 0x1C17CF4
	037 Move X0, 0xB98000
	038 Move X0, [X0+616]
	039 Call 0x1C17CF4
	040 Move W8, 1
	041 Move [X27+4078], W8
	042 Move X0, [X26]
	043 NotImplemented "Instruction MOVI not yet implemented."
	044 Move [X31+96], X31
	045 Move [X31+64], V0
	046 Move [X31+72], V0
	047 Move [X31+32], V0
	048 Move [X31+40], V0
	049 Move [X31], V0
	050 Move [X31+8], V0
	051 Move X26, 0xB98000
	052 Move X28, 0xB98000
	053 Move X27, 0xB98000
	054 Move W8, [X0+224]
	055 Move X26, [X26+624]
	056 Move X28, [X28+760]
	057 Move X27, [X27+640]
	058 Compare W8, 0
	059 JumpIfNotEqual {61}
	060 Call 0x1C17DFC
	061 Move X0, [X26]
	062 Add X8, X31, 0
	063 Or X26, X8, 15
	064 Move X8, X26
	065 Call AsyncTaskMethodBuilder`1<Object>.Create
	066 Move X2, [X28]
	067 Move TEMP, 0
	068 Not TEMP
	069 Move W8, TEMP
	070 Add X1, X31, 0
	071 Move X0, X26
	072 Move [X31+32], X25
	073 Move [X31+40], X24
	074 Move [X31+64], X23
	075 Move [X31+72], X22
	076 Move [X31+80], X21
	077 Move [X31+48], X20
	078 Move [X31+56], X19
	079 Move [X31], W8
	080 Call AsyncTaskMethodBuilder`1<Object>.Start, X0, X1
	081 Move X1, [X27]
	082 Move X0, X26
	083 Call AsyncTaskMethodBuilder`1<Object>.get_Task, X0
	084 Move X20, [X31+192]
	085 Move X19, [X31+200]
	086 Move X22, [X31+176]
	087 Move X21, [X31+184]
	088 Move X24, [X31+160]
	089 Move X23, [X31+168]
	090 Move X26, [X31+144]
	091 Move X25, [X31+152]
	092 Move X28, [X31+128]
	093 Move X27, [X31+136]
	094 Move X30, [X31+112]
	095 Add X31, X31, 208
	096 Return X0

Method: System.Threading.Tasks.Task`1<Satori.IApiLiveEventList> GetLiveEventsAsync(Satori.ISession session, System.Collections.Generic.IEnumerable`1<System.String> names = null, System.Nullable`1<System.Threading.CancellationToken> cancellationToken = null)

Disassembly:
	0x035A052C ADD X1, X31, 0x8
	0x035A0530 MOV X2, X19
	0x035A0534 BL 0x2189174
	0x035A0538 B 0x35A0648
	0x035A053C CBZ X20, 0x35A066C
	0x035A0540 LDR X21, [X19 + 0x28]
	0x035A0544 CBZ X21, 0x35A0660
	0x035A0548 LDR X8, [X21]
	0x035A054C LDR X20, [X20 + 0x40]
	0x035A0550 LDR X1, [X24]
	0x035A0554 LDRH W9, [X8 + 0x12E]
	0x035A0558 CBZ X9, 0x35A057C
	0x035A055C LDR X10, [X8 + 0xB0]
	0x035A0560 ADD X10, X10, 0x8
	0x035A0564 LDUR X11, [X10 - 0x8]
	0x035A0568 CMP X11, X1
	0x035A056C B.EQ 0x35A058C
	0x035A0570 SUBS X9, X9, 0x1
	0x035A0574 ADD X10, X10, 0x10
	0x035A0578 B.NE 0x35A0564
	0x035A057C MOV X0, X21
	0x035A0580 MOV W2, W31
	0x035A0584 BL 0x1C5C788
	0x035A0588 B 0x35A0598
	0x035A058C LDRSW X9, [X10]
	0x035A0590 ADD X8, X8, X9, 0x4, LSL
	0x035A0594 ADD X0, X8, 0x138
	0x035A0598 LDP X8, X1, [X0]
	0x035A059C MOV X0, X21
	0x035A05A0 BLR X8
	0x035A05A4 MOV X1, X0
	0x035A05A8 CBZ X20, 0x35A0664
	0x035A05AC LDP X2, X3, [X19 + 0x30]
	0x035A05B0 MOV X0, X20
	0x035A05B4 BL 0x3597024
	0x035A05B8 CBZ X0, 0x35A0668
	0x035A05BC MOV X1, X31
	0x035A05C0 BL 0x33ED394
	0x035A05C4 STR X0, [X31]
	0x035A05C8 ADD X0, X31, 0x0
	0x035A05CC MOV X1, X31
	0x035A05D0 BL 0x32C3A80
	0x035A05D4 TBZ X0, 0x0, 0x35A060C
	0x035A05D8 ADD X0, X31, 0x0
	0x035A05DC MOV X1, X31
	0x035A05E0 BL 0x32C3B4C
	0x035A05E4 MOVN W8, 0x1
	0x035A05E8 STR W8, [X19], #0x8
	0x035A05EC LDR X0, [X23]
	0x035A05F0 LDR W8, [X0 + 0xE0]
	0x035A05F4 CBNZ W8, 0x35A05FC
	0x035A05F8 BL 0x1C16DFC
	0x035A05FC MOV X0, X19
	0x035A0600 MOV X1, X31
	0x035A0604 BL 0x32C4864
	0x035A0608 B 0x35A0648
	0x035A060C MOVZ W8, 0x1
	0x035A0610 STR W8, [X19]
	0x035A0614 LDR X8, [X31]
	0x035A0618 STR X8, [X19 + 0x48]
	0x035A061C LDR X0, [X23]
	0x035A0620 LDR W8, [X0 + 0xE0]
	0x035A0624 CBNZ W8, 0x35A062C
	0x035A0628 BL 0x1C16DFC
	0x035A062C ADRP X8, 0xB97000
	0x035A0630 LDR X8, [X8 + 0x3A0]
	0x035A0634 ADD X0, X19, 0x8
	0x035A0638 LDR X3, [X8]
	0x035A063C ADD X1, X31, 0x0

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+96], X30
	003 Move [X31+112], X26
	004 Move [X31+120], X25
	005 Move [X31+128], X24
	006 Move [X31+136], X23
	007 Move [X31+144], X22
	008 Move [X31+152], X21
	009 Move [X31+160], X20
	010 Move [X31+168], X19
	011 Move X25, 0xE40000
	012 Move X24, 0xB97000
	013 Move W8, [X25+4079]
	014 Move X24, [X24+4048]
	015 Move X19, X4
	016 Move X20, X3
	017 Move X21, X2
	018 Move X22, X1
	019 Move X23, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {38}
	024 Move X0, 0xB97000
	025 Move X0, [X0+4056]
	026 Call 0x1C17CF4
	027 Move X0, 0xB98000
	028 Move X0, [X0+768]
	029 Call 0x1C17CF4
	030 Move X0, 0xB97000
	031 Move X0, [X0+4072]
	032 Call 0x1C17CF4
	033 Move X0, 0xB97000
	034 Move X0, [X0+4048]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X25+4079], W8
	038 Move X0, [X24]
	039 NotImplemented "Instruction MOVI not yet implemented."
	040 Move [X31+80], X31
	041 Move [X31+48], V0
	042 Move [X31+56], V0
	043 Move [X31+16], V0
	044 Move [X31+24], V0
	045 Move [X31], V0
	046 Move X24, 0xB97000
	047 Move X26, 0xB98000
	048 Move X25, 0xB97000
	049 Move W8, [X0+224]
	050 Move X24, [X24+4056]
	051 Move X26, [X26+768]
	052 Move X25, [X25+4072]
	053 Compare W8, 0
	054 JumpIfNotEqual {56}
	055 Call 0x1C17DFC
	056 Move X0, [X24]
	057 Add X8, X31, 0
	058 Or X24, X8, 15
	059 Move X8, X24
	060 Call AsyncTaskMethodBuilder`1<Object>.Create
	061 Move X2, [X26]
	062 Move TEMP, 0
	063 Not TEMP
	064 Move W8, TEMP
	065 Add X1, X31, 0
	066 Move X0, X24
	067 Move [X31+32], X23
	068 Move [X31+40], X22
	069 Move [X31+56], X19
	070 Move [X31+64], X21
	071 Move [X31+48], X20
	072 Move [X31], W8
	073 Call AsyncTaskMethodBuilder`1<Object>.Start, X0, X1
	074 Move X1, [X25]
	075 Move X0, X24
	076 Call AsyncTaskMethodBuilder`1<Object>.get_Task, X0
	077 Move X20, [X31+160]
	078 Move X19, [X31+168]
	079 Move X22, [X31+144]
	080 Move X21, [X31+152]
	081 Move X24, [X31+128]
	082 Move X23, [X31+136]
	083 Move X26, [X31+112]
	084 Move X25, [X31+120]
	085 Move X30, [X31+96]
	086 Add X31, X31, 176
	087 Return X0

Method: System.Threading.Tasks.Task`1<Satori.IApiProperties> ListPropertiesAsync(Satori.ISession session, System.Nullable`1<System.Threading.CancellationToken> cancellationToken = null)

Disassembly:
	0x035A0640 MOV X2, X19
	0x035A0644 BL 0x218A838
	0x035A0648 LDP X20, X19, [X31 + 0x40]
	0x035A064C LDP X22, X21, [X31 + 0x30]
	0x035A0650 LDP X24, X23, [X31 + 0x20]
	0x035A0654 LDR X30, [X31 + 0x10]
	0x035A0658 ADD X31, X31, 0x50
	0x035A065C RET
	0x035A0660 BL 0x1C16F20
	0x035A0664 BL 0x1C16F20
	0x035A0668 BL 0x1C16F20
	0x035A066C BL 0x1C16F20
	0x035A0670 BL 0x1C16F20
	0x035A0674 BL 0x1C16F20
	0x035A0678 BL 0x1C16F20
	0x035A067C BL 0x1C16F20
	0x035A0680 B 0x35A06DC
	0x035A0684 B 0x35A06DC
	0x035A0688 B 0x35A06DC
	0x035A068C B 0x35A06DC
	0x035A0690 B 0x35A06DC
	0x035A0694 B 0x35A06DC
	0x035A0698 B 0x35A06DC
	0x035A069C B 0x35A06DC
	0x035A06A0 B 0x35A06DC
	0x035A06A4 B 0x35A06DC
	0x035A06A8 B 0x35A06DC
	0x035A06AC B 0x35A06DC
	0x035A06B0 B 0x35A06DC
	0x035A06B4 B 0x35A06DC
	0x035A06B8 B 0x35A06DC
	0x035A06BC B 0x35A06DC
	0x035A06C0 B 0x35A06DC
	0x035A06C4 B 0x35A06DC
	0x035A06C8 B 0x35A06DC
	0x035A06CC B 0x35A06DC
	0x035A06D0 B 0x35A06DC
	0x035A06D4 B 0x35A06DC
	0x035A06D8 B 0x35A06DC
	0x035A06DC MOV X20, X0
	0x035A06E0 CMP W1, 0x1
	0x035A06E4 B.NE 0x35A0774
	0x035A06E8 MOV X0, X20
	0x035A06EC BL 0x3EB1AD0
	0x035A06F0 MOV X20, X0
	0x035A06F4 ADRP X0, 0xB53000
	0x035A06F8 LDR X0, [X0 + 0x7D0]
	0x035A06FC BL 0x1C16D08
	0x035A0700 LDR X8, [X20]
	0x035A0704 LDR X1, [X8]
	0x035A0708 BL 0x1C17270
	0x035A070C TBZ X0, 0x0, 0x35A074C
	0x035A0710 LDR X20, [X20]
	0x035A0714 BL 0x3EB1AE0
	0x035A0718 MOVN W8, 0x1
	0x035A071C STR W8, [X19], #0x8
	0x035A0720 ADRP X0, 0xB56000
	0x035A0724 LDR X0, [X0 + 0x280]
	0x035A0728 BL 0x1C16D08
	0x035A072C LDR W8, [X0 + 0xE0]
	0x035A0730 CBNZ W8, 0x35A0738
	0x035A0734 BL 0x1C16DFC
	0x035A0738 MOV X0, X19
	0x035A073C MOV X1, X20

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+80], X30
	003 Move [X31+88], X25
	004 Move [X31+96], X24
	005 Move [X31+104], X23
	006 Move [X31+112], X22
	007 Move [X31+120], X21
	008 Move [X31+128], X20
	009 Move [X31+136], X19
	010 Move X24, 0xE40000
	011 Move X23, 0xB98000
	012 Move W8, [X24+4080]
	013 Move X23, [X23+32]
	014 Move X19, X3
	015 Move X20, X2
	016 Move X21, X1
	017 Move X22, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {36}
	022 Move X0, 0xB98000
	023 Move X0, [X0+40]
	024 Call 0x1C17CF4
	025 Move X0, 0xB98000
	026 Move X0, [X0+776]
	027 Call 0x1C17CF4
	028 Move X0, 0xB98000
	029 Move X0, [X0+56]
	030 Call 0x1C17CF4
	031 Move X0, 0xB98000
	032 Move X0, [X0+32]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X24+4080], W8
	036 Move X0, [X23]
	037 NotImplemented "Instruction MOVI not yet implemented."
	038 Move [X31+48], V0
	039 Move [X31+56], V0
	040 Move [X31+16], V0
	041 Move [X31+24], V0
	042 Move [X31], V0
	043 Move X23, 0xB98000
	044 Move X25, 0xB98000
	045 Move X24, 0xB98000
	046 Move W8, [X0+224]
	047 Move X23, [X23+40]
	048 Move X25, [X25+776]
	049 Move X24, [X24+56]
	050 Compare W8, 0
	051 JumpIfNotEqual {53}
	052 Call 0x1C17DFC
	053 Move X0, [X23]
	054 Add X8, X31, 0
	055 Or X23, X8, 15
	056 Move X8, X23
	057 Call AsyncTaskMethodBuilder`1<Object>.Create
	058 Move X2, [X25]
	059 Move TEMP, 0
	060 Not TEMP
	061 Move W8, TEMP
	062 Add X1, X31, 0
	063 Move X0, X23
	064 Move [X31+32], X22
	065 Move [X31+40], X21
	066 Move [X31+48], X20
	067 Move [X31+56], X19
	068 Move [X31], W8
	069 Call AsyncTaskMethodBuilder`1<Object>.Start, X0, X1
	070 Move X1, [X24]
	071 Move X0, X23
	072 Call AsyncTaskMethodBuilder`1<Object>.get_Task, X0
	073 Move X20, [X31+128]
	074 Move X19, [X31+136]
	075 Move X22, [X31+112]
	076 Move X21, [X31+120]
	077 Move X24, [X31+96]
	078 Move X23, [X31+104]
	079 Move X30, [X31+80]
	080 Move X25, [X31+88]
	081 Add X31, X31, 144
	082 Return X0

Method: System.Threading.Tasks.Task`1<Satori.ISession> SessionRefreshAsync(Satori.ISession session, System.Nullable`1<System.Threading.CancellationToken> cancellationToken = null)

Disassembly:
	0x035A0740 MOV X2, X31
	0x035A0744 BL 0x32C4908
	0x035A0748 B 0x35A0648
	0x035A074C MOVZ W0, 0x8
	0x035A0750 BL 0x3EB1AF0
	0x035A0754 LDR X8, [X20]
	0x035A0758 STR X8, [X0]
	0x035A075C ADRP X1, 0x914000
	0x035A0760 ADD X1, X1, 0xE58
	0x035A0764 MOV X2, X31
	0x035A0768 BL 0x3EB1B00
	0x035A076C MOV X20, X0
	0x035A0770 BL 0x3EB1AE0
	0x035A0774 MOV X0, X20
	0x035A0778 BL 0x1D2C690
	0x035A077C BL 0x1990590
	0x035A0780 STR X30, [X31 - 0x30]!
	0x035A0784 STP X22, X21, [X31 + 0x10]
	0x035A0788 STP X20, X19, [X31 + 0x20]
	0x035A078C ADRP X21, 0xE3F000
	0x035A0790 ADRP X22, 0xB56000
	0x035A0794 LDRB W8, [X21 + 0xFFB]
	0x035A0798 LDR X22, [X22 + 0x280]
	0x035A079C MOV X19, X1
	0x035A07A0 MOV X20, X0
	0x035A07A4 TBNZ X8, 0x0, 0x35A07BC
	0x035A07A8 ADRP X0, 0xB56000
	0x035A07AC LDR X0, [X0 + 0x280]
	0x035A07B0 BL 0x1C16CF4
	0x035A07B4 MOVZ W8, 0x1
	0x035A07B8 STRB W8, [X21 + 0xFFB]
	0x035A07BC LDR X0, [X22]
	0x035A07C0 LDR W8, [X0 + 0xE0]
	0x035A07C4 CBNZ W8, 0x35A07CC
	0x035A07C8 BL 0x1C16DFC
	0x035A07CC ADD X0, X20, 0x8
	0x035A07D0 MOV X1, X19
	0x035A07D4 LDP X20, X19, [X31 + 0x20]
	0x035A07D8 LDP X22, X21, [X31 + 0x10]
	0x035A07DC MOV X2, X31
	0x035A07E0 LDR X30, [X31], #0x30
	0x035A07E4 B 0x32C477C
	0x035A07E8 SUB X31, X31, 0x50
	0x035A07EC STR X30, [X31 + 0x10]
	0x035A07F0 STP X24, X23, [X31 + 0x20]
	0x035A07F4 STP X22, X21, [X31 + 0x30]
	0x035A07F8 STP X20, X19, [X31 + 0x40]
	0x035A07FC ADRP X20, 0xE3F000
	0x035A0800 LDRB W8, [X20 + 0xFFC]
	0x035A0804 MOV X19, X0
	0x035A0808 TBNZ X8, 0x0, 0x35A0880
	0x035A080C ADRP X0, 0xB97000
	0x035A0810 LDR X0, [X0 + 0x3C0]
	0x035A0814 BL 0x1C16CF4
	0x035A0818 ADRP X0, 0xB97000
	0x035A081C LDR X0, [X0 + 0x3C8]
	0x035A0820 BL 0x1C16CF4
	0x035A0824 ADRP X0, 0xB56000
	0x035A0828 LDR X0, [X0 + 0x280]
	0x035A082C BL 0x1C16CF4
	0x035A0830 ADRP X0, 0xB97000
	0x035A0834 LDR X0, [X0 + 0x340]
	0x035A0838 BL 0x1C16CF4
	0x035A083C ADRP X0, 0xB54000

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+80], X30
	003 Move [X31+88], X25
	004 Move [X31+96], X24
	005 Move [X31+104], X23
	006 Move [X31+112], X22
	007 Move [X31+120], X21
	008 Move [X31+128], X20
	009 Move [X31+136], X19
	010 Move X24, 0xE40000
	011 Move X23, 0xB98000
	012 Move W8, [X24+4081]
	013 Move X23, [X23+616]
	014 Move X19, X3
	015 Move X20, X2
	016 Move X21, X1
	017 Move X22, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {36}
	022 Move X0, 0xB98000
	023 Move X0, [X0+624]
	024 Call 0x1C17CF4
	025 Move X0, 0xB98000
	026 Move X0, [X0+784]
	027 Call 0x1C17CF4
	028 Move X0, 0xB98000
	029 Move X0, [X0+640]
	030 Call 0x1C17CF4
	031 Move X0, 0xB98000
	032 Move X0, [X0+616]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X24+4081], W8
	036 Move X0, [X23]
	037 NotImplemented "Instruction MOVI not yet implemented."
	038 Move [X31+64], X31
	039 Move [X31+32], V0
	040 Move [X31+40], V0
	041 Move [X31], V0
	042 Move [X31+8], V0
	043 Move X23, 0xB98000
	044 Move X25, 0xB98000
	045 Move X24, 0xB98000
	046 Move W8, [X0+224]
	047 Move X23, [X23+624]
	048 Move X25, [X25+784]
	049 Move X24, [X24+640]
	050 Compare W8, 0
	051 JumpIfNotEqual {53}
	052 Call 0x1C17DFC
	053 Move X0, [X23]
	054 Add X8, X31, 0
	055 Or X23, X8, 15
	056 Move X8, X23
	057 Call AsyncTaskMethodBuilder`1<Object>.Create
	058 Move X2, [X25]
	059 Move TEMP, 0
	060 Not TEMP
	061 Move W8, TEMP
	062 Add X1, X31, 0
	063 Move X0, X23
	064 Move [X31+32], X22
	065 Move [X31+40], X21
	066 Move [X31+48], X20
	067 Move [X31+56], X19
	068 Move [X31], W8
	069 Call AsyncTaskMethodBuilder`1<Object>.Start, X0, X1
	070 Move X1, [X24]
	071 Move X0, X23
	072 Call AsyncTaskMethodBuilder`1<Object>.get_Task, X0
	073 Move X20, [X31+128]
	074 Move X19, [X31+136]
	075 Move X22, [X31+112]
	076 Move X21, [X31+120]
	077 Move X24, [X31+96]
	078 Move X23, [X31+104]
	079 Move X30, [X31+80]
	080 Move X25, [X31+88]
	081 Add X31, X31, 144
	082 Return X0

Method: System.Threading.Tasks.Task UpdatePropertiesAsync(Satori.ISession session, System.Collections.Generic.Dictionary`2<System.String, System.String> defaultProperties, System.Collections.Generic.Dictionary`2<System.String, System.String> customProperties, System.Boolean recompute = False, System.Nullable`1<System.Threading.CancellationToken> cancellationToken = null)

Disassembly:
	0x035A0840 LDR X0, [X0 + 0x9F0]
	0x035A0844 BL 0x1C16CF4
	0x035A0848 ADRP X0, 0xB97000
	0x035A084C LDR X0, [X0 + 0x290]
	0x035A0850 BL 0x1C16CF4
	0x035A0854 ADRP X0, 0xB97000
	0x035A0858 LDR X0, [X0 + 0x3A8]
	0x035A085C BL 0x1C16CF4
	0x035A0860 ADRP X0, 0xB97000
	0x035A0864 LDR X0, [X0 + 0x3B0]
	0x035A0868 BL 0x1C16CF4
	0x035A086C ADRP X0, 0xB97000
	0x035A0870 LDR X0, [X0 + 0x3B8]
	0x035A0874 BL 0x1C16CF4
	0x035A0878 MOVZ W8, 0x1
	0x035A087C STRB W8, [X20 + 0xFFC]
	0x035A0880 STR X31, [X31 + 0x18]
	0x035A0884 STP X31, X31, [X31]
	0x035A0888 ADRP X23, 0xB56000
	0x035A088C ADRP X24, 0xB97000
	0x035A0890 LDR W8, [X19]
	0x035A0894 LDR X20, [X19 + 0x20]
	0x035A0898 LDR X23, [X23 + 0x280]
	0x035A089C LDR X24, [X24 + 0x290]
	0x035A08A0 CBZ W8, 0x35A08C4
	0x035A08A4 CMP W8, 0x1
	0x035A08A8 B.NE 0x35A08F0
	0x035A08AC LDR X8, [X19 + 0x50]
	0x035A08B0 MOVN W9, 0x0
	0x035A08B4 STR X8, [X31]
	0x035A08B8 STR X31, [X19 + 0x50]
	0x035A08BC STR W9, [X19]
	0x035A08C0 B 0x35A0B50
	0x035A08C4 LDR X8, [X19 + 0x48]
	0x035A08C8 MOVN W9, 0x0
	0x035A08CC STR X8, [X31 + 0x8]
	0x035A08D0 STR X31, [X19 + 0x48]
	0x035A08D4 STR W9, [X19]
	0x035A08D8 ADRP X8, 0xB97000
	0x035A08DC LDR X8, [X8 + 0x3A8]
	0x035A08E0 ADD X0, X31, 0x8
	0x035A08E4 LDR X1, [X8]
	0x035A08E8 BL 0x2677474
	0x035A08EC B 0x35A0AB0
	0x035A08F0 CBZ X20, 0x35A0BE8
	0x035A08F4 LDRB W8, [X20 + 0x10]
	0x035A08F8 CBZ W8, 0x35A0AB4
	0x035A08FC LDR X21, [X19 + 0x28]
	0x035A0900 CBZ X21, 0x35A0BEC
	0x035A0904 LDR X8, [X21]
	0x035A0908 LDR X1, [X24]
	0x035A090C LDRH W9, [X8 + 0x12E]
	0x035A0910 CBZ X9, 0x35A0934
	0x035A0914 LDR X10, [X8 + 0xB0]
	0x035A0918 ADD X10, X10, 0x8
	0x035A091C LDUR X11, [X10 - 0x8]
	0x035A0920 CMP X11, X1
	0x035A0924 B.EQ 0x35A0944
	0x035A0928 SUBS X9, X9, 0x1
	0x035A092C ADD X10, X10, 0x10
	0x035A0930 B.NE 0x35A091C
	0x035A0934 MOVZ W2, 0x5
	0x035A0938 MOV X0, X21
	0x035A093C BL 0x1C5C788
	0x035A0940 B 0x35A0954
	0x035A0944 LDR W9, [X10]
	0x035A0948 ADD W9, W9, 0x5

ISIL:
	001 Subtract X31, X31, 224
	002 Move [X31+144], X30
	003 Move [X31+152], X27
	004 Move [X31+160], X26
	005 Move [X31+168], X25
	006 Move [X31+176], X24
	007 Move [X31+184], X23
	008 Move [X31+192], X22
	009 Move [X31+200], X21
	010 Move [X31+208], X20
	011 Move [X31+216], X19
	012 Move X27, 0xE40000
	013 Move X26, 0xB57000
	014 Move W8, [X27+4082]
	015 Move X26, [X26+640]
	016 Move X19, X6
	017 Move X21, X5
	018 Move W25, W4
	019 Move X23, X3
	020 Move X22, X2
	021 Move X24, X1
	022 Move X20, X0
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {35}
	027 Move X0, 0xB98000
	028 Move X0, [X0+792]
	029 Call 0x1C17CF4
	030 Move X0, 0xB57000
	031 Move X0, [X0+640]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X27+4082], W8
	035 Move X0, [X26]
	036 NotImplemented "Instruction MOVI not yet implemented."
	037 Move [X31+128], X31
	038 Move [X31+96], V0
	039 Move [X31+104], V0
	040 Move [X31+64], V0
	041 Move [X31+72], V0
	042 Move [X31+32], V0
	043 Move [X31+40], V0
	044 Move X26, 0xB98000
	045 Move W8, [X0+224]
	046 Move X26, [X26+792]
	047 Compare W8, 0
	048 JumpIfNotEqual {50}
	049 Call 0x1C17DFC
	050 Add X8, X31, 8
	051 Move X0, X31
	052 And W25, W25, 1
	053 Call AsyncTaskMethodBuilder.Create
	054 NotImplemented "Instruction LDUR not yet implemented."
	055 Move X9, [X31+24]
	056 Move X2, [X26]
	057 Add X8, X31, 32
	058 Move [X31+88], X19
	059 Or X19, X8, 15
	060 Move TEMP, 0
	061 Not TEMP
	062 Move W10, TEMP
	063 Add X1, X31, 32
	064 Move X0, X19
	065 Move [X31+96], X22
	066 Move [X31+104], X23
	067 Move [X31+112], W25
	068 Move [X31+72], X24
	069 Move [X31+80], X21
	070 Move [X31+40], V0
	071 Move [X31+56], X9
	072 Move [X31+64], X20
	073 Move [X31+32], W10
	074 Call AsyncTaskMethodBuilder.Start, X0, X1
	075 Move X0, X19
	076 Move X1, X31
	077 Call AsyncTaskMethodBuilder.get_Task, X0
	078 Move X20, [X31+208]
	079 Move X19, [X31+216]
	080 Move X22, [X31+192]
	081 Move X21, [X31+200]
	082 Move X24, [X31+176]
	083 Move X23, [X31+184]
	084 Move X26, [X31+160]
	085 Move X25, [X31+168]
	086 Move X30, [X31+144]
	087 Move X27, [X31+152]
	088 Add X31, X31, 224
	089 Return X0

Method: System.Threading.Tasks.Task DeleteIdentityAsync(Satori.ISession session, System.Nullable`1<System.Threading.CancellationToken> cancellationToken = null)

Disassembly:
	0x035A094C ADD X8, X8, W9, 0x4, SXTW
	0x035A0950 ADD X0, X8, 0x138
	0x035A0954 LDP X8, X1, [X0]
	0x035A0958 MOV X0, X21
	0x035A095C BLR X8
	0x035A0960 MOV X1, X31
	0x035A0964 BL 0x32277A8
	0x035A0968 TBNZ X0, 0x0, 0x35A0AB0
	0x035A096C ADRP X8, 0xB54000
	0x035A0970 LDR X8, [X8 + 0x9F0]
	0x035A0974 LDR X21, [X19 + 0x28]
	0x035A0978 LDR X0, [X8]
	0x035A097C LDR W8, [X0 + 0xE0]
	0x035A0980 CBNZ W8, 0x35A0988
	0x035A0984 BL 0x1C16DFC
	0x035A0988 MOV X0, X31
	0x035A098C BL 0x33616A4
	0x035A0990 ADRP X22, 0xB97000
	0x035A0994 LDR X22, [X22 + 0x340]
	0x035A0998 MOV X8, X0
	0x035A099C STR X8, [X31 + 0x18]
	0x035A09A0 LDR X0, [X22]
	0x035A09A4 LDR W8, [X0 + 0xE0]
	0x035A09A8 CBNZ W8, 0x35A09B4
	0x035A09AC BL 0x1C16DFC
	0x035A09B0 LDR X0, [X22]
	0x035A09B4 LDR X8, [X0 + 0xB8]
	0x035A09B8 LDR X1, [X8]
	0x035A09BC ADD X0, X31, 0x18
	0x035A09C0 MOV X2, X31
	0x035A09C4 BL 0x335FC68
	0x035A09C8 CBZ X21, 0x35A0BF0
	0x035A09CC LDR X8, [X21]
	0x035A09D0 LDR X1, [X24]
	0x035A09D4 MOV X22, X0
	0x035A09D8 LDRH W9, [X8 + 0x12E]
	0x035A09DC CBZ X9, 0x35A0A00
	0x035A09E0 LDR X10, [X8 + 0xB0]
	0x035A09E4 ADD X10, X10, 0x8
	0x035A09E8 LDUR X11, [X10 - 0x8]
	0x035A09EC CMP X11, X1
	0x035A09F0 B.EQ 0x35A0A10
	0x035A09F4 SUBS X9, X9, 0x1
	0x035A09F8 ADD X10, X10, 0x10
	0x035A09FC B.NE 0x35A09E8
	0x035A0A00 MOVZ W2, 0x7
	0x035A0A04 MOV X0, X21
	0x035A0A08 BL 0x1C5C788
	0x035A0A0C B 0x35A0A20
	0x035A0A10 LDR W9, [X10]
	0x035A0A14 ADD W9, W9, 0x7
	0x035A0A18 ADD X8, X8, W9, 0x4, SXTW
	0x035A0A1C ADD X0, X8, 0x138
	0x035A0A20 LDP X8, X2, [X0]
	0x035A0A24 MOV X0, X21
	0x035A0A28 MOV X1, X22
	0x035A0A2C BLR X8
	0x035A0A30 TBZ X0, 0x0, 0x35A0AB0

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+112], X30
	003 Move [X31+128], X24
	004 Move [X31+136], X23
	005 Move [X31+144], X22
	006 Move [X31+152], X21
	007 Move [X31+160], X20
	008 Move [X31+168], X19
	009 Move X24, 0xE40000
	010 Move X23, 0xB57000
	011 Move W8, [X24+4083]
	012 Move X23, [X23+640]
	013 Move X20, X3
	014 Move X21, X2
	015 Move X22, X1
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {29}
	021 Move X0, 0xB98000
	022 Move X0, [X0+800]
	023 Call 0x1C17CF4
	024 Move X0, 0xB57000
	025 Move X0, [X0+640]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X24+4083], W8
	029 Move X0, [X23]
	030 NotImplemented "Instruction MOVI not yet implemented."
	031 Move [X31+80], V0
	032 Move [X31+88], V0
	033 Move [X31+48], V0
	034 Move [X31+56], V0
	035 Move [X31+2], V0
	036 Move X23, 0xB98000
	037 Move W8, [X0+224]
	038 Move X23, [X23+800]
	039 Compare W8, 0
	040 JumpIfNotEqual {42}
	041 Call 0x1C17DFC
	042 Add X8, X31, 8
	043 Move X0, X31
	044 Call AsyncTaskMethodBuilder.Create
	045 NotImplemented "Instruction LDUR not yet implemented."
	046 Move X9, [X31+24]
	047 Move X2, [X23]
	048 Add X8, X31, 32
	049 Move [X31+88], X20
	050 Or X20, X8, 15
	051 Move TEMP, 0
	052 Not TEMP
	053 Move W10, TEMP
	054 Add X1, X31, 32
	055 Move X0, X20
	056 Move [X31+72], X22
	057 Move [X31+80], X21
	058 Move [X31+40], V0
	059 Move [X31+56], X9
	060 Move [X31+64], X19
	061 Move [X31+32], W10
	062 Call AsyncTaskMethodBuilder.Start, X0, X1
	063 Move X0, X20
	064 Move X1, X31
	065 Call AsyncTaskMethodBuilder.get_Task, X0
	066 Move X20, [X31+160]
	067 Move X19, [X31+168]
	068 Move X22, [X31+144]
	069 Move X21, [X31+152]
	070 Move X24, [X31+128]
	071 Move X23, [X31+136]
	072 Move X30, [X31+112]
	073 Add X31, X31, 176
	074 Return X0

Method: System.Threading.Tasks.Task`1<Satori.IApiGetMessageListResponse> GetMessageListAsync(Satori.ISession session, System.Int32 limit = 1, System.Boolean forward = True, System.String cursor = null, System.Nullable`1<System.Threading.CancellationToken> cancellationToken = null)

Disassembly:
	0x035A0A34 LDP X1, X2, [X19 + 0x28]
	0x035A0A38 LDR X3, [X19 + 0x38]
	0x035A0A3C MOV X0, X20
	0x035A0A40 BL 0x359F740
	0x035A0A44 CBZ X0, 0x35A0BF4
	0x035A0A48 ADRP X8, 0xB97000
	0x035A0A4C LDR X8, [X8 + 0x3B8]
	0x035A0A50 LDR X1, [X8]
	0x035A0A54 BL 0x269F5D0
	0x035A0A58 ADRP X8, 0xB97000
	0x035A0A5C LDR X8, [X8 + 0x3B0]
	0x035A0A60 STR X0, [X31 + 0x8]
	0x035A0A64 LDR X1, [X8]
	0x035A0A68 ADD X0, X31, 0x8
	0x035A0A6C BL 0x2677430
	0x035A0A70 TBNZ X0, 0x0, 0x35A08D8
	0x035A0A74 STR W31, [X19]
	0x035A0A78 LDR X8, [X31 + 0x8]
	0x035A0A7C STR X8, [X19 + 0x48]
	0x035A0A80 LDR X0, [X23]
	0x035A0A84 LDR W8, [X0 + 0xE0]
	0x035A0A88 CBNZ W8, 0x35A0A90
	0x035A0A8C BL 0x1C16DFC
	0x035A0A90 ADRP X8, 0xB97000
	0x035A0A94 LDR X8, [X8 + 0x3C0]
	0x035A0A98 ADD X0, X19, 0x8
	0x035A0A9C LDR X3, [X8]
	0x035A0AA0 ADD X1, X31, 0x8
	0x035A0AA4 MOV X2, X19
	0x035A0AA8 BL 0x21891F0
	0x035A0AAC B 0x35A0BC0
	0x035A0AB0 CBZ X20, 0x35A0BE4
	0x035A0AB4 LDR X21, [X19 + 0x28]
	0x035A0AB8 CBZ X21, 0x35A0BD8
	0x035A0ABC LDR X8, [X21]
	0x035A0AC0 LDR X20, [X20 + 0x40]
	0x035A0AC4 LDR X1, [X24]
	0x035A0AC8 LDRH W9, [X8 + 0x12E]
	0x035A0ACC CBZ X9, 0x35A0AF0
	0x035A0AD0 LDR X10, [X8 + 0xB0]
	0x035A0AD4 ADD X10, X10, 0x8
	0x035A0AD8 LDUR X11, [X10 - 0x8]
	0x035A0ADC CMP X11, X1
	0x035A0AE0 B.EQ 0x35A0B00
	0x035A0AE4 SUBS X9, X9, 0x1
	0x035A0AE8 ADD X10, X10, 0x10
	0x035A0AEC B.NE 0x35A0AD8
	0x035A0AF0 MOV X0, X21
	0x035A0AF4 MOV W2, W31
	0x035A0AF8 BL 0x1C5C788
	0x035A0AFC B 0x35A0B0C
	0x035A0B00 LDRSW X9, [X10]
	0x035A0B04 ADD X8, X8, X9, 0x4, LSL
	0x035A0B08 ADD X0, X8, 0x138
	0x035A0B0C LDP X8, X1, [X0]
	0x035A0B10 MOV X0, X21
	0x035A0B14 BLR X8
	0x035A0B18 MOV X1, X0
	0x035A0B1C CBZ X20, 0x35A0BDC
	0x035A0B20 LDP X3, X4, [X19 + 0x30]
	0x035A0B24 LDR X2, [X19 + 0x40]
	0x035A0B28 MOV X0, X20
	0x035A0B2C BL 0x3597344
	0x035A0B30 CBZ X0, 0x35A0BE0
	0x035A0B34 MOV X1, X31
	0x035A0B38 BL 0x33ED394
	0x035A0B3C STR X0, [X31]
	0x035A0B40 ADD X0, X31, 0x0
	0x035A0B44 MOV X1, X31
	0x035A0B48 BL 0x32C3A80
	0x035A0B4C TBZ X0, 0x0, 0x35A0B84
	0x035A0B50 ADD X0, X31, 0x0
	0x035A0B54 MOV X1, X31
	0x035A0B58 BL 0x32C3B4C
	0x035A0B5C MOVN W8, 0x1

ISIL:
	001 Subtract X31, X31, 192
	002 Move [X31+96], X30
	003 Move [X31+112], X28
	004 Move [X31+120], X27
	005 Move [X31+128], X26
	006 Move [X31+136], X25
	007 Move [X31+144], X24
	008 Move [X31+152], X23
	009 Move [X31+160], X22
	010 Move [X31+168], X21
	011 Move [X31+176], X20
	012 Move [X31+184], X19
	013 Move X27, 0xE40000
	014 Move X26, 0xB97000
	015 Move W8, [X27+4084]
	016 Move X26, [X26+4080]
	017 Move X19, X6
	018 Move X20, X5
	019 Move X21, X4
	020 Move W25, W3
	021 Move W22, W2
	022 Move X23, X1
	023 Move X24, X0
	024 Move TEMP, X8
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {42}
	028 Move X0, 0xB97000
	029 Move X0, [X0+4088]
	030 Call 0x1C17CF4
	031 Move X0, 0xB98000
	032 Move X0, [X0+808]
	033 Call 0x1C17CF4
	034 Move X0, 0xB98000
	035 Move X0, [X0+8]
	036 Call 0x1C17CF4
	037 Move X0, 0xB97000
	038 Move X0, [X0+4080]
	039 Call 0x1C17CF4
	040 Move W8, 1
	041 Move [X27+4084], W8
	042 Move X0, [X26]
	043 NotImplemented "Instruction MOVI not yet implemented."
	044 Move [X31+64], V0
	045 Move [X31+72], V0
	046 Move [X31+32], V0
	047 Move [X31+40], V0
	048 Move [X31], V0
	049 Move [X31+8], V0
	050 Move X28, 0xB97000
	051 Move X27, 0xB98000
	052 Move X26, 0xB98000
	053 Move W8, [X0+224]
	054 Move X28, [X28+4088]
	055 Move X27, [X27+808]
	056 Move X26, [X26+8]
	057 Compare W8, 0
	058 JumpIfNotEqual {60}
	059 Call 0x1C17DFC
	060 Move X0, [X28]
	061 Add X8, X31, 0
	062 And W28, W25, 1
	063 Or X25, X8, 15
	064 Move X8, X25
	065 Call AsyncTaskMethodBuilder`1<Object>.Create
	066 Move X2, [X27]
	067 Move TEMP, 0
	068 Not TEMP
	069 Move W8, TEMP
	070 Add X1, X31, 0
	071 Move X0, X25
	072 Move [X31+32], X24
	073 Move [X31+40], X23
	074 Move [X31+64], W22
	075 Move [X31+68], W28
	076 Move [X31+72], X21
	077 Move [X31+48], X20
	078 Move [X31+56], X19
	079 Move [X31], W8
	080 Call AsyncTaskMethodBuilder`1<Object>.Start, X0, X1
	081 Move X1, [X26]
	082 Move X0, X25
	083 Call AsyncTaskMethodBuilder`1<Object>.get_Task, X0
	084 Move X20, [X31+176]
	085 Move X19, [X31+184]
	086 Move X22, [X31+160]
	087 Move X21, [X31+168]
	088 Move X24, [X31+144]
	089 Move X23, [X31+152]
	090 Move X26, [X31+128]
	091 Move X25, [X31+136]
	092 Move X28, [X31+112]
	093 Move X27, [X31+120]
	094 Move X30, [X31+96]
	095 Add X31, X31, 192
	096 Return X0

Method: System.Threading.Tasks.Task UpdateMessageAsync(Satori.ISession session, System.String id, System.String consumeTime, System.String readTime, System.Nullable`1<System.Threading.CancellationToken> cancellationToken = null)

Disassembly:
	0x035A0B60 STR W8, [X19], #0x8
	0x035A0B64 LDR X0, [X23]
	0x035A0B68 LDR W8, [X0 + 0xE0]
	0x035A0B6C CBNZ W8, 0x35A0B74
	0x035A0B70 BL 0x1C16DFC
	0x035A0B74 MOV X0, X19
	0x035A0B78 MOV X1, X31
	0x035A0B7C BL 0x32C4864
	0x035A0B80 B 0x35A0BC0
	0x035A0B84 MOVZ W8, 0x1
	0x035A0B88 STR W8, [X19]
	0x035A0B8C LDR X8, [X31]
	0x035A0B90 STR X8, [X19 + 0x50]
	0x035A0B94 LDR X0, [X23]
	0x035A0B98 LDR W8, [X0 + 0xE0]
	0x035A0B9C CBNZ W8, 0x35A0BA4
	0x035A0BA0 BL 0x1C16DFC
	0x035A0BA4 ADRP X8, 0xB97000
	0x035A0BA8 LDR X8, [X8 + 0x3C8]
	0x035A0BAC ADD X0, X19, 0x8
	0x035A0BB0 LDR X3, [X8]
	0x035A0BB4 ADD X1, X31, 0x0
	0x035A0BB8 MOV X2, X19
	0x035A0BBC BL 0x218A8B4
	0x035A0BC0 LDP X20, X19, [X31 + 0x40]
	0x035A0BC4 LDP X22, X21, [X31 + 0x30]
	0x035A0BC8 LDP X24, X23, [X31 + 0x20]
	0x035A0BCC LDR X30, [X31 + 0x10]
	0x035A0BD0 ADD X31, X31, 0x50
	0x035A0BD4 RET
	0x035A0BD8 BL 0x1C16F20
	0x035A0BDC BL 0x1C16F20
	0x035A0BE0 BL 0x1C16F20
	0x035A0BE4 BL 0x1C16F20
	0x035A0BE8 BL 0x1C16F20
	0x035A0BEC BL 0x1C16F20
	0x035A0BF0 BL 0x1C16F20
	0x035A0BF4 BL 0x1C16F20
	0x035A0BF8 B 0x35A0C54
	0x035A0BFC B 0x35A0C54
	0x035A0C00 B 0x35A0C54
	0x035A0C04 B 0x35A0C54
	0x035A0C08 B 0x35A0C54
	0x035A0C0C B 0x35A0C54
	0x035A0C10 B 0x35A0C54
	0x035A0C14 B 0x35A0C54
	0x035A0C18 B 0x35A0C54
	0x035A0C1C B 0x35A0C54
	0x035A0C20 B 0x35A0C54
	0x035A0C24 B 0x35A0C54
	0x035A0C28 B 0x35A0C54
	0x035A0C2C B 0x35A0C54
	0x035A0C30 B 0x35A0C54
	0x035A0C34 B 0x35A0C54
	0x035A0C38 B 0x35A0C54
	0x035A0C3C B 0x35A0C54
	0x035A0C40 B 0x35A0C54
	0x035A0C44 B 0x35A0C54
	0x035A0C48 B 0x35A0C54
	0x035A0C4C B 0x35A0C54
	0x035A0C50 B 0x35A0C54
	0x035A0C54 MOV X20, X0
	0x035A0C58 CMP W1, 0x1
	0x035A0C5C B.NE 0x35A0CEC
	0x035A0C60 MOV X0, X20

ISIL:
	001 Subtract X31, X31, 224
	002 Move [X31+144], X30
	003 Move [X31+152], X27
	004 Move [X31+160], X26
	005 Move [X31+168], X25
	006 Move [X31+176], X24
	007 Move [X31+184], X23
	008 Move [X31+192], X22
	009 Move [X31+200], X21
	010 Move [X31+208], X20
	011 Move [X31+216], X19
	012 Move X27, 0xE40000
	013 Move X26, 0xB57000
	014 Move W8, [X27+4085]
	015 Move X26, [X26+640]
	016 Move X19, X6
	017 Move X21, X5
	018 Move X22, X4
	019 Move X24, X3
	020 Move X23, X2
	021 Move X25, X1
	022 Move X20, X0
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {35}
	027 Move X0, 0xB98000
	028 Move X0, [X0+816]
	029 Call 0x1C17CF4
	030 Move X0, 0xB57000
	031 Move X0, [X0+640]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X27+4085], W8
	035 Move X0, [X26]
	036 NotImplemented "Instruction MOVI not yet implemented."
	037 Move [X31+128], X31
	038 Move [X31+96], V0
	039 Move [X31+104], V0
	040 Move [X31+64], V0
	041 Move [X31+72], V0
	042 Move [X31+32], V0
	043 Move [X31+40], V0
	044 Move X26, 0xB98000
	045 Move W8, [X0+224]
	046 Move X26, [X26+816]
	047 Compare W8, 0
	048 JumpIfNotEqual {50}
	049 Call 0x1C17DFC
	050 Add X8, X31, 8
	051 Move X0, X31
	052 Call AsyncTaskMethodBuilder.Create
	053 NotImplemented "Instruction LDUR not yet implemented."
	054 Move X9, [X31+24]
	055 Move X2, [X26]
	056 Add X8, X31, 32
	057 Move [X31+88], X19
	058 Move [X31+96], X23
	059 Or X19, X8, 15
	060 Move TEMP, 0
	061 Not TEMP
	062 Move W10, TEMP
	063 Add X1, X31, 32
	064 Move X0, X19
	065 Move [X31+104], X24
	066 Move [X31+112], X22
	067 Move [X31+72], X25
	068 Move [X31+80], X21
	069 Move [X31+40], V0
	070 Move [X31+56], X9
	071 Move [X31+64], X20
	072 Move [X31+32], W10
	073 Call AsyncTaskMethodBuilder.Start, X0, X1
	074 Move X0, X19
	075 Move X1, X31
	076 Call AsyncTaskMethodBuilder.get_Task, X0
	077 Move X20, [X31+208]
	078 Move X19, [X31+216]
	079 Move X22, [X31+192]
	080 Move X21, [X31+200]
	081 Move X24, [X31+176]
	082 Move X23, [X31+184]
	083 Move X26, [X31+160]
	084 Move X25, [X31+168]
	085 Move X30, [X31+144]
	086 Move X27, [X31+152]
	087 Add X31, X31, 224
	088 Return X0

Method: System.Threading.Tasks.Task DeleteMessageAsync(Satori.ISession session, System.String id, System.Nullable`1<System.Threading.CancellationToken> cancellationToken = null)

Disassembly:
	0x035A0C64 BL 0x3EB1AD0
	0x035A0C68 MOV X20, X0
	0x035A0C6C ADRP X0, 0xB53000
	0x035A0C70 LDR X0, [X0 + 0x7D0]
	0x035A0C74 BL 0x1C16D08
	0x035A0C78 LDR X8, [X20]
	0x035A0C7C LDR X1, [X8]
	0x035A0C80 BL 0x1C17270
	0x035A0C84 TBZ X0, 0x0, 0x35A0CC4
	0x035A0C88 LDR X20, [X20]
	0x035A0C8C BL 0x3EB1AE0
	0x035A0C90 MOVN W8, 0x1
	0x035A0C94 STR W8, [X19], #0x8
	0x035A0C98 ADRP X0, 0xB56000
	0x035A0C9C LDR X0, [X0 + 0x280]
	0x035A0CA0 BL 0x1C16D08
	0x035A0CA4 LDR W8, [X0 + 0xE0]
	0x035A0CA8 CBNZ W8, 0x35A0CB0
	0x035A0CAC BL 0x1C16DFC
	0x035A0CB0 MOV X0, X19
	0x035A0CB4 MOV X1, X20
	0x035A0CB8 MOV X2, X31
	0x035A0CBC BL 0x32C4908
	0x035A0CC0 B 0x35A0BC0
	0x035A0CC4 MOVZ W0, 0x8
	0x035A0CC8 BL 0x3EB1AF0
	0x035A0CCC LDR X8, [X20]
	0x035A0CD0 STR X8, [X0]
	0x035A0CD4 ADRP X1, 0x914000
	0x035A0CD8 ADD X1, X1, 0xE58
	0x035A0CDC MOV X2, X31
	0x035A0CE0 BL 0x3EB1B00
	0x035A0CE4 MOV X20, X0
	0x035A0CE8 BL 0x3EB1AE0
	0x035A0CEC MOV X0, X20
	0x035A0CF0 BL 0x1D2C690
	0x035A0CF4 BL 0x1990590
	0x035A0CF8 STR X30, [X31 - 0x30]!
	0x035A0CFC STP X22, X21, [X31 + 0x10]
	0x035A0D00 STP X20, X19, [X31 + 0x20]
	0x035A0D04 ADRP X21, 0xE3F000
	0x035A0D08 ADRP X22, 0xB56000
	0x035A0D0C LDRB W8, [X21 + 0xFFD]
	0x035A0D10 LDR X22, [X22 + 0x280]
	0x035A0D14 MOV X19, X1
	0x035A0D18 MOV X20, X0
	0x035A0D1C TBNZ X8, 0x0, 0x35A0D34
	0x035A0D20 ADRP X0, 0xB56000
	0x035A0D24 LDR X0, [X0 + 0x280]
	0x035A0D28 BL 0x1C16CF4
	0x035A0D2C MOVZ W8, 0x1
	0x035A0D30 STRB W8, [X21 + 0xFFD]
	0x035A0D34 LDR X0, [X22]
	0x035A0D38 LDR W8, [X0 + 0xE0]
	0x035A0D3C CBNZ W8, 0x35A0D44
	0x035A0D40 BL 0x1C16DFC
	0x035A0D44 ADD X0, X20, 0x8
	0x035A0D48 MOV X1, X19
	0x035A0D4C LDP X20, X19, [X31 + 0x20]
	0x035A0D50 LDP X22, X21, [X31 + 0x10]

ISIL:
	001 Subtract X31, X31, 192
	002 Move [X31+128], X30
	003 Move [X31+136], X25
	004 Move [X31+144], X24
	005 Move [X31+152], X23
	006 Move [X31+160], X22
	007 Move [X31+168], X21
	008 Move [X31+176], X20
	009 Move [X31+184], X19
	010 Move X25, 0xE40000
	011 Move X24, 0xB57000
	012 Move W8, [X25+4086]
	013 Move X24, [X24+640]
	014 Move X20, X4
	015 Move X21, X3
	016 Move X22, X2
	017 Move X23, X1
	018 Move X19, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {31}
	023 Move X0, 0xB98000
	024 Move X0, [X0+824]
	025 Call 0x1C17CF4
	026 Move X0, 0xB57000
	027 Move X0, [X0+640]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X25+4086], W8
	031 Move X0, [X24]
	032 NotImplemented "Instruction MOVI not yet implemented."
	033 Move [X31+112], X31
	034 Move [X31+80], V0
	035 Move [X31+88], V0
	036 Move [X31+48], V0
	037 Move [X31+56], V0
	038 Move [X31+2], V0
	039 Move X24, 0xB98000
	040 Move W8, [X0+224]
	041 Move X24, [X24+824]
	042 Compare W8, 0
	043 JumpIfNotEqual {45}
	044 Call 0x1C17DFC
	045 Add X8, X31, 8
	046 Move X0, X31
	047 Call AsyncTaskMethodBuilder.Create
	048 NotImplemented "Instruction LDUR not yet implemented."
	049 Move X9, [X31+24]
	050 Move X2, [X24]
	051 Add X8, X31, 32
	052 Move [X31+88], X20
	053 Move [X31+96], X22
	054 Or X20, X8, 15
	055 Move TEMP, 0
	056 Not TEMP
	057 Move W10, TEMP
	058 Add X1, X31, 32
	059 Move X0, X20
	060 Move [X31+72], X23
	061 Move [X31+80], X21
	062 Move [X31+40], V0
	063 Move [X31+56], X9
	064 Move [X31+64], X19
	065 Move [X31+32], W10
	066 Call AsyncTaskMethodBuilder.Start, X0, X1
	067 Move X0, X20
	068 Move X1, X31
	069 Call AsyncTaskMethodBuilder.get_Task, X0
	070 Move X20, [X31+176]
	071 Move X19, [X31+184]
	072 Move X22, [X31+160]
	073 Move X21, [X31+168]
	074 Move X24, [X31+144]
	075 Move X23, [X31+152]
	076 Move X30, [X31+128]
	077 Move X25, [X31+136]
	078 Add X31, X31, 192
	079 Return X0

Method: System.Void .cctor()

Disassembly:
	0x035A0D54 MOV X2, X31
	0x035A0D58 LDR X30, [X31], #0x30
	0x035A0D5C B 0x32C477C
	0x035A0D60 SUB X31, X31, 0x50
	0x035A0D64 STR X30, [X31 + 0x10]
	0x035A0D68 STP X24, X23, [X31 + 0x20]
	0x035A0D6C STP X22, X21, [X31 + 0x30]
	0x035A0D70 STP X20, X19, [X31 + 0x40]
	0x035A0D74 ADRP X20, 0xE3F000
	0x035A0D78 LDRB W8, [X20 + 0xFFE]
	0x035A0D7C MOV X19, X0
	0x035A0D80 TBNZ X8, 0x0, 0x35A0E28
	0x035A0D84 ADRP X0, 0xB97000
	0x035A0D88 LDR X0, [X0 + 0x3D0]
	0x035A0D8C BL 0x1C16CF4
	0x035A0D90 ADRP X0, 0xB97000
	0x035A0D94 LDR X0, [X0 + 0x3D8]
	0x035A0D98 BL 0x1C16CF4
	0x035A0D9C ADRP X0, 0xB97000
	0x035A0DA0 LDR X0, [X0 + 0x3E0]
	0x035A0DA4 BL 0x1C16CF4
	0x035A0DA8 ADRP X0, 0xB56000
	0x035A0DAC LDR X0, [X0 + 0x280]
	0x035A0DB0 BL 0x1C16CF4
	0x035A0DB4 ADRP X0, 0xB97000
	0x035A0DB8 LDR X0, [X0 + 0x340]
	0x035A0DBC BL 0x1C16CF4
	0x035A0DC0 ADRP X0, 0xB54000
	0x035A0DC4 LDR X0, [X0 + 0x9F0]
	0x035A0DC8 BL 0x1C16CF4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xE40000
	005 Move X19, 0xB56000
	006 Move W8, [X20+4087]
	007 Move X19, [X19+1392]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0xB98000
	013 Move X0, [X0+832]
	014 Call 0x1C17CF4
	015 Move X0, 0xB56000
	016 Move X0, [X0+1392]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+4087], W8
	020 Move X0, [X19]
	021 Move X19, 0xB98000
	022 Move W8, [X0+224]
	023 Move X19, [X19+832]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Move D0, 4.000000000232831
	028 Move X0, X31
	029 Call TimeSpan.FromMinutes, V0
	030 Move X8, [X19]
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X8, [X8+184]
	034 Move [X8], X0
	035 Move X30, [X31+32]
	036 Return 

