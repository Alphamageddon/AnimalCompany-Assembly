Type: Satori.ApiClient

Method: System.Int32 get_Timeout()

Disassembly:
	0x035976B8 MOV X0, X31
	0x035976BC BL 0x32C4770

ISIL:
	001 Move W0, [X0+24]
	002 Return X0

Method: System.Void set_Timeout(System.Int32 value)

Disassembly:
	0x035976C0 LDUR V0, [X31 + 0x8]
	0x035976C4 LDR X9, [X31 + 0x18]

ISIL:
	001 Move [X0+24], W1
	002 Return 

Method: System.Void .ctor(System.Uri baseUri, Satori.IHttpAdapter httpAdapter, System.Int32 timeout = 10)

Disassembly:
	0x035976C8 LDR X2, [X24]
	0x035976CC ADD X8, X31, 0x20
	0x035976D0 STP X21, X20, [X31 + 0x58]
	0x035976D4 ORR X20, X8, 0xF
	0x035976D8 MOVN W10, 0x0
	0x035976DC ADD X1, X31, 0x20
	0x035976E0 MOV X0, X20
	0x035976E4 STP X23, X22, [X31 + 0x48]
	0x035976E8 STUR V0, [X31 + 0x28]
	0x035976EC STP X9, X19, [X31 + 0x38]
	0x035976F0 STR W10, [X31 + 0x20]
	0x035976F4 BL 0x2190FB8
	0x035976F8 MOV X0, X20
	0x035976FC MOV X1, X31
	0x03597700 BL 0x32C47F8
	0x03597704 LDP X20, X19, [X31 + 0xA0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, X1
	007 Move X1, X31
	008 Move W19, W3
	009 Move X20, X2
	010 Move X22, X0
	011 Call Object..ctor, X0
	012 Move [X22+32], X21
	013 Move [X22+16], X20
	014 Move [X22+24], W19
	015 Move X20, [X31+32]
	016 Move X19, [X31+40]
	017 Move X22, [X31+16]
	018 Move X21, [X31+24]
	019 Move X30, [X31+48]
	020 Return 

Method: System.Threading.Tasks.Task SatoriHealthcheckAsync(System.String bearerToken, System.Nullable`1<System.Threading.CancellationToken> cancellationToken)

Disassembly:
	0x03597708 LDP X22, X21, [X31 + 0x90]
	0x0359770C LDP X24, X23, [X31 + 0x80]
	0x03597710 LDP X30, X25, [X31 + 0x70]
	0x03597714 ADD X31, X31, 0xB0
	0x03597718 RET
	0x0359771C SUB X31, X31, 0x70
	0x03597720 STR X30, [X31 + 0x10]
	0x03597724 STP X28, X27, [X31 + 0x20]
	0x03597728 STP X26, X25, [X31 + 0x30]
	0x0359772C STP X24, X23, [X31 + 0x40]
	0x03597730 STP X22, X21, [X31 + 0x50]
	0x03597734 STP X20, X19, [X31 + 0x60]
	0x03597738 ADRP X20, 0xE48000
	0x0359773C LDRB W8, [X20 + 0xFC3]
	0x03597740 MOV X19, X0
	0x03597744 TBNZ X8, 0x0, 0x3597840
	0x03597748 ADRP X0, 0xBA0000
	0x0359774C LDR X0, [X0 + 0x48]
	0x03597750 BL 0x1C16CF4
	0x03597754 ADRP X0, 0xBA0000
	0x03597758 LDR X0, [X0 + 0x50]
	0x0359775C BL 0x1C16CF4
	0x03597760 ADRP X0, 0xB9F000
	0x03597764 LDR X0, [X0 + 0xF48]
	0x03597768 BL 0x1C16CF4
	0x0359776C ADRP X0, 0xB65000
	0x03597770 LDR X0, [X0 + 0x8D8]
	0x03597774 BL 0x1C16CF4
	0x03597778 ADRP X0, 0xB65000
	0x0359777C LDR X0, [X0 + 0x9E8]
	0x03597780 BL 0x1C16CF4
	0x03597784 ADRP X0, 0xB5D000
	0x03597788 LDR X0, [X0 + 0x810]
	0x0359778C BL 0x1C16CF4
	0x03597790 ADRP X0, 0xB5D000
	0x03597794 LDR X0, [X0 + 0x6C0]
	0x03597798 BL 0x1C16CF4
	0x0359779C ADRP X0, 0xB5D000
	0x035977A0 LDR X0, [X0 + 0x6D0]
	0x035977A4 BL 0x1C16CF4
	0x035977A8 ADRP X0, 0xBA0000
	0x035977AC LDR X0, [X0 + 0x58]
	0x035977B0 BL 0x1C16CF4
	0x035977B4 ADRP X0, 0xBA0000
	0x035977B8 LDR X0, [X0 + 0x60]
	0x035977BC BL 0x1C16CF4
	0x035977C0 ADRP X0, 0xB5F000
	0x035977C4 LDR X0, [X0 + 0x1E0]
	0x035977C8 BL 0x1C16CF4
	0x035977CC ADRP X0, 0xB5F000
	0x035977D0 LDR X0, [X0 + 0x1F0]
	0x035977D4 BL 0x1C16CF4
	0x035977D8 ADRP X0, 0xB5F000
	0x035977DC LDR X0, [X0 + 0x1F8]
	0x035977E0 BL 0x1C16CF4
	0x035977E4 ADRP X0, 0xB65000
	0x035977E8 LDR X0, [X0 + 0x3A0]
	0x035977EC BL 0x1C16CF4

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+112], X30
	003 Move [X31+128], X24
	004 Move [X31+136], X23
	005 Move [X31+144], X22
	006 Move [X31+152], X21
	007 Move [X31+160], X20
	008 Move [X31+168], X19
	009 Move X24, 0xE49000
	010 Move X23, 0xB60000
	011 Move W8, [X24+4019]
	012 Move X23, [X23+640]
	013 Move X20, X3
	014 Move X21, X2
	015 Move X22, X1
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {29}
	021 Move X0, 0xBA0000
	022 Move X0, [X0+3896]
	023 Call 0x1C17CF4
	024 Move X0, 0xB60000
	025 Move X0, [X0+640]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X24+4019], W8
	029 Move X0, [X23]
	030 NotImplemented "Instruction MOVI not yet implemented."
	031 Move [X31+96], X31
	032 Move [X31+64], V0
	033 Move [X31+72], V0
	034 Move [X31+32], V0
	035 Move [X31+40], V0
	036 Move X23, 0xBA0000
	037 Move W8, [X0+224]
	038 Move X23, [X23+3896]
	039 Compare W8, 0
	040 JumpIfNotEqual {42}
	041 Call 0x1C17DFC
	042 Add X8, X31, 8
	043 Move X0, X31
	044 Call AsyncTaskMethodBuilder.Create
	045 NotImplemented "Instruction LDUR not yet implemented."
	046 Move X9, [X31+24]
	047 Move X2, [X23]
	048 Add X8, X31, 32
	049 Move [X31+88], X20
	050 Or X20, X8, 15
	051 Move TEMP, 0
	052 Not TEMP
	053 Move W10, TEMP
	054 Add X1, X31, 32
	055 Move X0, X20
	056 Move [X31+72], X22
	057 Move [X31+80], X21
	058 Move [X31+40], V0
	059 Move [X31+56], X9
	060 Move [X31+64], X19
	061 Move [X31+32], W10
	062 Call AsyncTaskMethodBuilder.Start, X0, X1
	063 Move X0, X20
	064 Move X1, X31
	065 Call AsyncTaskMethodBuilder.get_Task, X0
	066 Move X20, [X31+160]
	067 Move X19, [X31+168]
	068 Move X22, [X31+144]
	069 Move X21, [X31+152]
	070 Move X24, [X31+128]
	071 Move X23, [X31+136]
	072 Move X30, [X31+112]
	073 Add X31, X31, 176
	074 Return X0

Method: System.Threading.Tasks.Task SatoriReadycheckAsync(System.String bearerToken, System.Nullable`1<System.Threading.CancellationToken> cancellationToken)

Disassembly:
	0x035977F0 ADRP X0, 0xB85000
	0x035977F4 LDR X0, [X0 + 0x4D8]
	0x035977F8 BL 0x1C16CF4
	0x035977FC ADRP X0, 0xB65000
	0x03597800 LDR X0, [X0 + 0x988]
	0x03597804 BL 0x1C16CF4
	0x03597808 ADRP X0, 0xB97000
	0x0359780C LDR X0, [X0 + 0x7D0]
	0x03597810 BL 0x1C16CF4
	0x03597814 ADRP X0, 0xB97000
	0x03597818 LDR X0, [X0 + 0x850]
	0x0359781C BL 0x1C16CF4
	0x03597820 ADRP X0, 0xBA0000
	0x03597824 LDR X0, [X0 + 0x68]
	0x03597828 BL 0x1C16CF4
	0x0359782C ADRP X0, 0xB5C000
	0x03597830 LDR X0, [X0 + 0x988]
	0x03597834 BL 0x1C16CF4
	0x03597838 MOVZ W8, 0x1
	0x0359783C STRB W8, [X20 + 0xFC3]
	0x03597840 STR X31, [X31 + 0x18]
	0x03597844 ADRP X28, 0xB9F000
	0x03597848 LDR W8, [X19]
	0x0359784C LDR X28, [X28 + 0xF48]
	0x03597850 CBZ W8, 0x3597AA4
	0x03597854 LDR X8, [X19 + 0x20]
	0x03597858 CBZ X8, 0x3597BDC
	0x0359785C LDR X25, [X19 + 0x28]
	0x03597860 CBZ X25, 0x3597C24
	0x03597864 LDR X0, [X25 + 0x20]
	0x03597868 CBZ X0, 0x3597C28
	0x0359786C ADRP X8, 0xBA0000
	0x03597870 ADRP X9, 0xB5C000
	0x03597874 LDR X8, [X8 + 0x68]
	0x03597878 LDR X9, [X9 + 0x988]
	0x0359787C LDR X21, [X8]
	0x03597880 LDR X20, [X9]
	0x03597884 MOV X1, X31
	0x03597888 BL 0x361B448
	0x0359788C ADRP X8, 0xB65000
	0x03597890 LDR X8, [X8 + 0x8D8]
	0x03597894 MOV X22, X0
	0x03597898 LDR X0, [X8]
	0x0359789C MOVZ W1, 0x1
	0x035978A0 BL 0x1C16D6C
	0x035978A4 MOV X1, X0
	0x035978A8 CBZ X1, 0x3597C2C
	0x035978AC LDR W8, [X1 + 0x18]
	0x035978B0 CBZ W8, 0x3597C30
	0x035978B4 MOVZ W8, 0x2F
	0x035978B8 STRH W8, [X1 + 0x20]
	0x035978BC CBZ X22, 0x3597C34
	0x035978C0 MOV X0, X22
	0x035978C4 MOV X2, X31
	0x035978C8 BL 0x322BC58
	0x035978CC MOV X1, X21
	0x035978D0 MOV X2, X31
	0x035978D4 BL 0x321B938

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+112], X30
	003 Move [X31+128], X24
	004 Move [X31+136], X23
	005 Move [X31+144], X22
	006 Move [X31+152], X21
	007 Move [X31+160], X20
	008 Move [X31+168], X19
	009 Move X24, 0xE49000
	010 Move X23, 0xB60000
	011 Move W8, [X24+4020]
	012 Move X23, [X23+640]
	013 Move X20, X3
	014 Move X21, X2
	015 Move X22, X1
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {29}
	021 Move X0, 0xBA0000
	022 Move X0, [X0+3904]
	023 Call 0x1C17CF4
	024 Move X0, 0xB60000
	025 Move X0, [X0+640]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X24+4020], W8
	029 Move X0, [X23]
	030 NotImplemented "Instruction MOVI not yet implemented."
	031 Move [X31+96], X31
	032 Move [X31+64], V0
	033 Move [X31+72], V0
	034 Move [X31+32], V0
	035 Move [X31+40], V0
	036 Move X23, 0xBA0000
	037 Move W8, [X0+224]
	038 Move X23, [X23+3904]
	039 Compare W8, 0
	040 JumpIfNotEqual {42}
	041 Call 0x1C17DFC
	042 Add X8, X31, 8
	043 Move X0, X31
	044 Call AsyncTaskMethodBuilder.Create
	045 NotImplemented "Instruction LDUR not yet implemented."
	046 Move X9, [X31+24]
	047 Move X2, [X23]
	048 Add X8, X31, 32
	049 Move [X31+88], X20
	050 Or X20, X8, 15
	051 Move TEMP, 0
	052 Not TEMP
	053 Move W10, TEMP
	054 Add X1, X31, 32
	055 Move X0, X20
	056 Move [X31+72], X22
	057 Move [X31+80], X21
	058 Move [X31+40], V0
	059 Move [X31+56], X9
	060 Move [X31+64], X19
	061 Move [X31+32], W10
	062 Call AsyncTaskMethodBuilder.Start, X0, X1
	063 Move X0, X20
	064 Move X1, X31
	065 Call AsyncTaskMethodBuilder.get_Task, X0
	066 Move X20, [X31+160]
	067 Move X19, [X31+168]
	068 Move X22, [X31+144]
	069 Move X21, [X31+152]
	070 Move X24, [X31+128]
	071 Move X23, [X31+136]
	072 Move X30, [X31+112]
	073 Add X31, X31, 176
	074 Return X0

Method: System.Threading.Tasks.Task`1<Satori.IApiSession> SatoriAuthenticateAsync(System.String basicAuthUsername, System.String basicAuthPassword, Satori.ApiAuthenticateRequest body, System.Nullable`1<System.Threading.CancellationToken> cancellationToken)

Disassembly:
	0x035978D8 ADRP X8, 0xB65000
	0x035978DC LDR X8, [X8 + 0x3A0]
	0x035978E0 MOV X22, X0
	0x035978E4 LDR X23, [X25 + 0x20]
	0x035978E8 LDR X0, [X8]
	0x035978EC BL 0x1C16F10
	0x035978F0 MOV X21, X0
	0x035978F4 MOV X1, X23
	0x035978F8 MOV X2, X31
	0x035978FC BL 0x36281F8
	0x03597900 CBZ X21, 0x3597C38
	0x03597904 MOV X0, X21
	0x03597908 MOV X1, X22
	0x0359790C MOV X2, X31
	0x03597910 BL 0x36288CC
	0x03597914 MOV X0, X21
	0x03597918 MOV X1, X20
	0x0359791C MOV X2, X31
	0x03597920 BL 0x3628980
	0x03597924 MOV X0, X21
	0x03597928 MOV X1, X31
	0x0359792C BL 0x3628A38
	0x03597930 ADRP X8, 0xB85000
	0x03597934 ADRP X9, 0xB5D000
	0x03597938 LDR X8, [X8 + 0x4D8]
	0x0359793C LDR X9, [X9 + 0x6D0]
	0x03597940 MOV X20, X0
	0x03597944 LDR X21, [X8]
	0x03597948 LDR X0, [X9]
	0x0359794C BL 0x1C16F10
	0x03597950 ADRP X8, 0xB5D000
	0x03597954 LDR X8, [X8 + 0x6C0]
	0x03597958 MOV X22, X0
	0x0359795C LDR X1, [X8]
	0x03597960 BL 0x2AA4804
	0x03597964 LDR X0, [X19 + 0x30]
	0x03597968 MOV X1, X31
	0x0359796C BL 0x32277A8
	0x03597970 TBNZ X0, 0x0, 0x3597A1C
	0x03597974 MOV X0, X31
	0x03597978 BL 0x3241948
	0x0359797C ADRP X8, 0xB65000
	0x03597980 MOV X23, X0
	0x03597984 LDP X0, X2, [X19 + 0x30]
	0x03597988 LDR X8, [X8 + 0x988]
	0x0359798C LDR X1, [X8]
	0x03597990 MOV X3, X31
	0x03597994 BL 0x32274B8
	0x03597998 MOV X1, X0
	0x0359799C CBZ X23, 0x3597C48
	0x035979A0 LDR X8, [X23]
	0x035979A4 LDR X9, [X8 + 0x268]
	0x035979A8 LDR X2, [X8 + 0x270]
	0x035979AC MOV X0, X23
	0x035979B0 BLR X9
	0x035979B4 ADRP X8, 0xB65000
	0x035979B8 LDR X8, [X8 + 0x9E8]
	0x035979BC MOV X23, X0
	0x035979C0 LDR X0, [X8]
	0x035979C4 LDR W8, [X0 + 0xE0]
	0x035979C8 CBNZ W8, 0x35979D0
	0x035979CC BL 0x1C16DFC
	0x035979D0 MOV X0, X23
	0x035979D4 MOV X1, X31
	0x035979D8 BL 0x33225A0
	0x035979DC MOV X1, X0
	0x035979E0 ADRP X8, 0xB97000
	0x035979E4 LDR X8, [X8 + 0x850]
	0x035979E8 LDR X0, [X8]
	0x035979EC MOV X2, X31

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+96], X30
	003 Move [X31+104], X27
	004 Move [X31+112], X26
	005 Move [X31+120], X25
	006 Move [X31+128], X24
	007 Move [X31+136], X23
	008 Move [X31+144], X22
	009 Move [X31+152], X21
	010 Move [X31+160], X20
	011 Move [X31+168], X19
	012 Move X26, 0xE49000
	013 Move X25, 0xBA0000
	014 Move W8, [X26+4021]
	015 Move X25, [X25+3912]
	016 Move X19, X5
	017 Move X20, X4
	018 Move X21, X3
	019 Move X22, X2
	020 Move X24, X1
	021 Move X23, X0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {40}
	026 Move X0, 0xBA0000
	027 Move X0, [X0+3920]
	028 Call 0x1C17CF4
	029 Move X0, 0xBA0000
	030 Move X0, [X0+3928]
	031 Call 0x1C17CF4
	032 Move X0, 0xBA0000
	033 Move X0, [X0+3936]
	034 Call 0x1C17CF4
	035 Move X0, 0xBA0000
	036 Move X0, [X0+3912]
	037 Call 0x1C17CF4
	038 Move W8, 1
	039 Move [X26+4021], W8
	040 Move X0, [X25]
	041 NotImplemented "Instruction MOVI not yet implemented."
	042 Move [X31+80], X31
	043 Move [X31+48], V0
	044 Move [X31+56], V0
	045 Move [X31+16], V0
	046 Move [X31+24], V0
	047 Move [X31], V0
	048 Move X25, 0xBA0000
	049 Move X27, 0xBA0000
	050 Move X26, 0xBA0000
	051 Move W8, [X0+224]
	052 Move X25, [X25+3920]
	053 Move X27, [X27+3928]
	054 Move X26, [X26+3936]
	055 Compare W8, 0
	056 JumpIfNotEqual {58}
	057 Call 0x1C17DFC
	058 Move X0, [X25]
	059 Add X8, X31, 0
	060 Or X25, X8, 15
	061 Move X8, X25
	062 Call AsyncTaskMethodBuilder`1<Object>.Create
	063 Move X2, [X27]
	064 Move TEMP, 0
	065 Not TEMP
	066 Move W8, TEMP
	067 Add X1, X31, 0
	068 Move X0, X25
	069 Move [X31+48], X24
	070 Move [X31+56], X22
	071 Move [X31+32], X21
	072 Move [X31+40], X23
	073 Move [X31+64], X20
	074 Move [X31+72], X19
	075 Move [X31], W8
	076 Call AsyncTaskMethodBuilder`1<Object>.Start, X0, X1
	077 Move X1, [X26]
	078 Move X0, X25
	079 Call AsyncTaskMethodBuilder`1<Object>.get_Task, X0
	080 Move X20, [X31+160]
	081 Move X19, [X31+168]
	082 Move X22, [X31+144]
	083 Move X21, [X31+152]
	084 Move X24, [X31+128]
	085 Move X23, [X31+136]
	086 Move X26, [X31+112]
	087 Move X25, [X31+120]
	088 Move X30, [X31+96]
	089 Move X27, [X31+104]
	090 Add X31, X31, 176
	091 Return X0

Method: System.Threading.Tasks.Task SatoriAuthenticateLogoutAsync(System.String bearerToken, Satori.ApiAuthenticateLogoutRequest body, System.Nullable`1<System.Threading.CancellationToken> cancellationToken)

Disassembly:
	0x035979F0 BL 0x321B938
	0x035979F4 CBZ X22, 0x3597C4C
	0x035979F8 ADRP X8, 0xB97000
	0x035979FC LDR X8, [X8 + 0x7D0]
	0x03597A00 ADRP X9, 0xB5D000
	0x03597A04 LDR X9, [X9 + 0x810]
	0x03597A08 MOV X2, X0
	0x03597A0C LDR X1, [X8]
	0x03597A10 LDR X3, [X9]
	0x03597A14 MOV X0, X22
	0x03597A18 BL 0x2AA5098
	0x03597A1C LDR X0, [X19 + 0x20]
	0x03597A20 BL 0x3597D7C
	0x03597A24 MOV X23, X0
	0x03597A28 MOV X0, X31
	0x03597A2C BL 0x3241948
	0x03597A30 CBZ X0, 0x3597C3C
	0x03597A34 LDR X8, [X0]
	0x03597A38 LDR X9, [X8 + 0x268]
	0x03597A3C LDR X2, [X8 + 0x270]
	0x03597A40 MOV X1, X23
	0x03597A44 BLR X9
	0x03597A48 LDR X24, [X25 + 0x10]
	0x03597A4C CBZ X24, 0x3597C40
	0x03597A50 ADRP X10, 0xBA0000
	0x03597A54 LDR X10, [X10 + 0x58]
	0x03597A58 LDR X8, [X24]
	0x03597A5C LDR W26, [X25 + 0x18]
	0x03597A60 LDP X27, X25, [X19 + 0x40]
	0x03597A64 LDR X1, [X10]
	0x03597A68 LDRH W9, [X8 + 0x12E]
	0x03597A6C MOV X23, X0
	0x03597A70 CBZ X9, 0x3597A94
	0x03597A74 LDR X10, [X8 + 0xB0]
	0x03597A78 ADD X10, X10, 0x8
	0x03597A7C LDUR X11, [X10 - 0x8]
	0x03597A80 CMP X11, X1
	0x03597A84 B.EQ 0x3597ABC
	0x03597A88 SUBS X9, X9, 0x1
	0x03597A8C ADD X10, X10, 0x10
	0x03597A90 B.NE 0x3597A7C
	0x03597A94 MOVZ W2, 0x3
	0x03597A98 MOV X0, X24
	0x03597A9C BL 0x1C5C788
	0x03597AA0 B 0x3597ACC
	0x03597AA4 LDR X8, [X19 + 0x50]
	0x03597AA8 MOVN W9, 0x0
	0x03597AAC STR X8, [X31 + 0x18]
	0x03597AB0 STR X31, [X19 + 0x50]
	0x03597AB4 STR W9, [X19]
	0x03597AB8 B 0x3597B28
	0x03597ABC LDR W9, [X10]
	0x03597AC0 ADD W9, W9, 0x3
	0x03597AC4 ADD X8, X8, W9, 0x4, SXTW
	0x03597AC8 ADD X0, X8, 0x138
	0x03597ACC LDP X8, X9, [X0]
	0x03597AD0 MOV X0, X24
	0x03597AD4 MOV X1, X21
	0x03597AD8 MOV X2, X20

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+112], X30
	003 Move [X31+120], X25
	004 Move [X31+128], X24
	005 Move [X31+136], X23
	006 Move [X31+144], X22
	007 Move [X31+152], X21
	008 Move [X31+160], X20
	009 Move [X31+168], X19
	010 Move X25, 0xE49000
	011 Move X24, 0xB60000
	012 Move W8, [X25+4022]
	013 Move X24, [X24+640]
	014 Move X20, X4
	015 Move X21, X3
	016 Move X19, X2
	017 Move X22, X1
	018 Move X23, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {31}
	023 Move X0, 0xBA0000
	024 Move X0, [X0+3944]
	025 Call 0x1C17CF4
	026 Move X0, 0xB60000
	027 Move X0, [X0+640]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X25+4022], W8
	031 Move X0, [X24]
	032 NotImplemented "Instruction MOVI not yet implemented."
	033 Move [X31+80], V0
	034 Move [X31+88], V0
	035 Move [X31+48], V0
	036 Move [X31+56], V0
	037 Move [X31+2], V0
	038 Move X24, 0xBA0000
	039 Move W8, [X0+224]
	040 Move X24, [X24+3944]
	041 Compare W8, 0
	042 JumpIfNotEqual {44}
	043 Call 0x1C17DFC
	044 Add X8, X31, 8
	045 Move X0, X31
	046 Call AsyncTaskMethodBuilder.Create
	047 NotImplemented "Instruction LDUR not yet implemented."
	048 Move X9, [X31+24]
	049 Move X2, [X24]
	050 Add X8, X31, 32
	051 Move [X31+88], X21
	052 Move [X31+96], X20
	053 Or X20, X8, 15
	054 Move TEMP, 0
	055 Not TEMP
	056 Move W10, TEMP
	057 Add X1, X31, 32
	058 Move X0, X20
	059 Move [X31+72], X23
	060 Move [X31+80], X22
	061 Move [X31+40], V0
	062 Move [X31+56], X9
	063 Move [X31+64], X19
	064 Move [X31+32], W10
	065 Call AsyncTaskMethodBuilder.Start, X0, X1
	066 Move X0, X20
	067 Move X1, X31
	068 Call AsyncTaskMethodBuilder.get_Task, X0
	069 Move X20, [X31+160]
	070 Move X19, [X31+168]
	071 Move X22, [X31+144]
	072 Move X21, [X31+152]
	073 Move X24, [X31+128]
	074 Move X23, [X31+136]
	075 Move X30, [X31+112]
	076 Move X25, [X31+120]
	077 Add X31, X31, 176
	078 Return X0

Method: System.Threading.Tasks.Task`1<Satori.IApiSession> SatoriAuthenticateRefreshAsync(System.String basicAuthUsername, System.String basicAuthPassword, Satori.ApiAuthenticateRefreshRequest body, System.Nullable`1<System.Threading.CancellationToken> cancellationToken)

Disassembly:
	0x03597ADC MOV X3, X22
	0x03597AE0 MOV X4, X23
	0x03597AE4 MOV W5, W26
	0x03597AE8 MOV X6, X27
	0x03597AEC MOV X7, X25
	0x03597AF0 STR X9, [X31]
	0x03597AF4 BLR X8
	0x03597AF8 CBZ X0, 0x3597C44
	0x03597AFC ADRP X8, 0xB5F000
	0x03597B00 LDR X8, [X8 + 0x1F8]
	0x03597B04 LDR X1, [X8]
	0x03597B08 BL 0x269F5D0
	0x03597B0C ADRP X8, 0xB5F000
	0x03597B10 LDR X8, [X8 + 0x1F0]
	0x03597B14 STR X0, [X31 + 0x18]
	0x03597B18 LDR X1, [X8]
	0x03597B1C ADD X0, X31, 0x18
	0x03597B20 BL 0x2677430
	0x03597B24 TBZ X0, 0x0, 0x3597B84
	0x03597B28 ADRP X8, 0xB5F000
	0x03597B2C LDR X8, [X8 + 0x1E0]
	0x03597B30 ADD X0, X31, 0x18
	0x03597B34 LDR X1, [X8]
	0x03597B38 BL 0x2677474
	0x03597B3C ADRP X8, 0xBA0000
	0x03597B40 LDR X8, [X8 + 0x60]
	0x03597B44 LDR X1, [X8]
	0x03597B48 BL 0x22109A8
	0x03597B4C MOVN W8, 0x1
	0x03597B50 STR W8, [X19], #0x8
	0x03597B54 MOV X20, X0
	0x03597B58 LDR X0, [X28]
	0x03597B5C ADRP X21, 0xBA0000
	0x03597B60 LDR W8, [X0 + 0xE0]
	0x03597B64 LDR X21, [X21 + 0x50]
	0x03597B68 CBNZ W8, 0x3597B70
	0x03597B6C BL 0x1C16DFC
	0x03597B70 LDR X2, [X21]
	0x03597B74 MOV X0, X19
	0x03597B78 MOV X1, X20
	0x03597B7C BL 0x26322B0
	0x03597B80 B 0x3597BBC
	0x03597B84 STR W31, [X19]
	0x03597B88 LDR X8, [X31 + 0x18]
	0x03597B8C STR X8, [X19 + 0x50]
	0x03597B90 LDR X0, [X28]
	0x03597B94 LDR W8, [X0 + 0xE0]
	0x03597B98 CBNZ W8, 0x3597BA0
	0x03597B9C BL 0x1C16DFC
	0x03597BA0 ADRP X8, 0xBA0000
	0x03597BA4 LDR X8, [X8 + 0x48]
	0x03597BA8 ADD X0, X19, 0x8
	0x03597BAC LDR X3, [X8]
	0x03597BB0 ADD X1, X31, 0x18
	0x03597BB4 MOV X2, X19
	0x03597BB8 BL 0x1FB88A8
	0x03597BBC LDP X20, X19, [X31 + 0x60]
	0x03597BC0 LDP X22, X21, [X31 + 0x50]
	0x03597BC4 LDP X24, X23, [X31 + 0x40]
	0x03597BC8 LDP X26, X25, [X31 + 0x30]
	0x03597BCC LDP X28, X27, [X31 + 0x20]
	0x03597BD0 LDR X30, [X31 + 0x10]
	0x03597BD4 ADD X31, X31, 0x70
	0x03597BD8 RET
	0x03597BDC ADRP X0, 0xB64000
	0x03597BE0 LDR X0, [X0 + 0x578]
	0x03597BE4 BL 0x1C16D08
	0x03597BE8 BL 0x1C16F10
	0x03597BEC MOV X20, X0
	0x03597BF0 ADRP X0, 0xB97000

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+96], X30
	003 Move [X31+104], X27
	004 Move [X31+112], X26
	005 Move [X31+120], X25
	006 Move [X31+128], X24
	007 Move [X31+136], X23
	008 Move [X31+144], X22
	009 Move [X31+152], X21
	010 Move [X31+160], X20
	011 Move [X31+168], X19
	012 Move X26, 0xE49000
	013 Move X25, 0xBA0000
	014 Move W8, [X26+4023]
	015 Move X25, [X25+3912]
	016 Move X19, X5
	017 Move X20, X4
	018 Move X21, X3
	019 Move X22, X2
	020 Move X24, X1
	021 Move X23, X0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {40}
	026 Move X0, 0xBA0000
	027 Move X0, [X0+3920]
	028 Call 0x1C17CF4
	029 Move X0, 0xBA0000
	030 Move X0, [X0+3952]
	031 Call 0x1C17CF4
	032 Move X0, 0xBA0000
	033 Move X0, [X0+3936]
	034 Call 0x1C17CF4
	035 Move X0, 0xBA0000
	036 Move X0, [X0+3912]
	037 Call 0x1C17CF4
	038 Move W8, 1
	039 Move [X26+4023], W8
	040 Move X0, [X25]
	041 NotImplemented "Instruction MOVI not yet implemented."
	042 Move [X31+80], X31
	043 Move [X31+48], V0
	044 Move [X31+56], V0
	045 Move [X31+16], V0
	046 Move [X31+24], V0
	047 Move [X31], V0
	048 Move X25, 0xBA0000
	049 Move X27, 0xBA0000
	050 Move X26, 0xBA0000
	051 Move W8, [X0+224]
	052 Move X25, [X25+3920]
	053 Move X27, [X27+3952]
	054 Move X26, [X26+3936]
	055 Compare W8, 0
	056 JumpIfNotEqual {58}
	057 Call 0x1C17DFC
	058 Move X0, [X25]
	059 Add X8, X31, 0
	060 Or X25, X8, 15
	061 Move X8, X25
	062 Call AsyncTaskMethodBuilder`1<Object>.Create
	063 Move X2, [X27]
	064 Move TEMP, 0
	065 Not TEMP
	066 Move W8, TEMP
	067 Add X1, X31, 0
	068 Move X0, X25
	069 Move [X31+48], X24
	070 Move [X31+56], X22
	071 Move [X31+32], X21
	072 Move [X31+40], X23
	073 Move [X31+64], X20
	074 Move [X31+72], X19
	075 Move [X31], W8
	076 Call AsyncTaskMethodBuilder`1<Object>.Start, X0, X1
	077 Move X1, [X26]
	078 Move X0, X25
	079 Call AsyncTaskMethodBuilder`1<Object>.get_Task, X0
	080 Move X20, [X31+160]
	081 Move X19, [X31+168]
	082 Move X22, [X31+144]
	083 Move X21, [X31+152]
	084 Move X24, [X31+128]
	085 Move X23, [X31+136]
	086 Move X26, [X31+112]
	087 Move X25, [X31+120]
	088 Move X30, [X31+96]
	089 Move X27, [X31+104]
	090 Add X31, X31, 176
	091 Return X0

Method: System.Threading.Tasks.Task SatoriEventAsync(System.String bearerToken, Satori.ApiEventRequest body, System.Nullable`1<System.Threading.CancellationToken> cancellationToken)

Disassembly:
	0x03597BF4 LDR X0, [X0 + 0xBC8]
	0x03597BF8 BL 0x1C16D08
	0x03597BFC MOV X1, X0
	0x03597C00 MOV X0, X20
	0x03597C04 MOV X2, X31
	0x03597C08 BL 0x3314A68
	0x03597C0C ADRP X0, 0xBA0000
	0x03597C10 LDR X0, [X0 + 0x70]
	0x03597C14 BL 0x1C16D08
	0x03597C18 MOV X1, X0
	0x03597C1C MOV X0, X20
	0x03597C20 BL 0x1C16DEC
	0x03597C24 BL 0x1C16F20
	0x03597C28 BL 0x1C16F20
	0x03597C2C BL 0x1C16F20
	0x03597C30 BL 0x1C16F28
	0x03597C34 BL 0x1C16F20
	0x03597C38 BL 0x1C16F20
	0x03597C3C BL 0x1C16F20
	0x03597C40 BL 0x1C16F20
	0x03597C44 BL 0x1C16F20
	0x03597C48 BL 0x1C16F20
	0x03597C4C BL 0x1C16F20
	0x03597C50 B 0x3597CCC
	0x03597C54 B 0x3597CCC
	0x03597C58 B 0x3597CCC
	0x03597C5C B 0x3597CCC
	0x03597C60 B 0x3597CCC
	0x03597C64 B 0x3597CCC
	0x03597C68 B 0x3597CCC
	0x03597C6C B 0x3597CCC
	0x03597C70 B 0x3597CCC
	0x03597C74 B 0x3597CCC
	0x03597C78 B 0x3597CCC
	0x03597C7C B 0x3597CCC
	0x03597C80 B 0x3597CCC
	0x03597C84 B 0x3597CCC
	0x03597C88 B 0x3597CCC
	0x03597C8C B 0x3597CCC
	0x03597C90 B 0x3597CCC
	0x03597C94 B 0x3597CCC
	0x03597C98 B 0x3597CCC
	0x03597C9C B 0x3597CCC
	0x03597CA0 B 0x3597CCC
	0x03597CA4 B 0x3597CCC
	0x03597CA8 B 0x3597CCC
	0x03597CAC B 0x3597CCC
	0x03597CB0 B 0x3597CCC
	0x03597CB4 B 0x3597CCC
	0x03597CB8 B 0x3597CCC
	0x03597CBC B 0x3597CCC
	0x03597CC0 B 0x3597CCC
	0x03597CC4 B 0x3597CCC
	0x03597CC8 B 0x3597CCC
	0x03597CCC MOV X20, X0
	0x03597CD0 CMP W1, 0x1
	0x03597CD4 B.NE 0x3597D70
	0x03597CD8 MOV X0, X20
	0x03597CDC BL 0x3EB1AD0

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+112], X30
	003 Move [X31+120], X25
	004 Move [X31+128], X24
	005 Move [X31+136], X23
	006 Move [X31+144], X22
	007 Move [X31+152], X21
	008 Move [X31+160], X20
	009 Move [X31+168], X19
	010 Move X25, 0xE49000
	011 Move X24, 0xB60000
	012 Move W8, [X25+4024]
	013 Move X24, [X24+640]
	014 Move X20, X4
	015 Move X21, X3
	016 Move X19, X2
	017 Move X22, X1
	018 Move X23, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {31}
	023 Move X0, 0xBA0000
	024 Move X0, [X0+3960]
	025 Call 0x1C17CF4
	026 Move X0, 0xB60000
	027 Move X0, [X0+640]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X25+4024], W8
	031 Move X0, [X24]
	032 NotImplemented "Instruction MOVI not yet implemented."
	033 Move [X31+80], V0
	034 Move [X31+88], V0
	035 Move [X31+48], V0
	036 Move [X31+56], V0
	037 Move [X31+2], V0
	038 Move X24, 0xBA0000
	039 Move W8, [X0+224]
	040 Move X24, [X24+3960]
	041 Compare W8, 0
	042 JumpIfNotEqual {44}
	043 Call 0x1C17DFC
	044 Add X8, X31, 8
	045 Move X0, X31
	046 Call AsyncTaskMethodBuilder.Create
	047 NotImplemented "Instruction LDUR not yet implemented."
	048 Move X9, [X31+24]
	049 Move X2, [X24]
	050 Add X8, X31, 32
	051 Move [X31+88], X21
	052 Move [X31+96], X20
	053 Or X20, X8, 15
	054 Move TEMP, 0
	055 Not TEMP
	056 Move W10, TEMP
	057 Add X1, X31, 32
	058 Move X0, X20
	059 Move [X31+72], X23
	060 Move [X31+80], X22
	061 Move [X31+40], V0
	062 Move [X31+56], X9
	063 Move [X31+64], X19
	064 Move [X31+32], W10
	065 Call AsyncTaskMethodBuilder.Start, X0, X1
	066 Move X0, X20
	067 Move X1, X31
	068 Call AsyncTaskMethodBuilder.get_Task, X0
	069 Move X20, [X31+160]
	070 Move X19, [X31+168]
	071 Move X22, [X31+144]
	072 Move X21, [X31+152]
	073 Move X24, [X31+128]
	074 Move X23, [X31+136]
	075 Move X30, [X31+112]
	076 Move X25, [X31+120]
	077 Add X31, X31, 176
	078 Return X0

Method: System.Threading.Tasks.Task`1<Satori.IApiExperimentList> SatoriGetExperimentsAsync(System.String bearerToken, System.Collections.Generic.IEnumerable`1<System.String> names, System.Nullable`1<System.Threading.CancellationToken> cancellationToken)

Disassembly:
	0x03597CE0 MOV X20, X0
	0x03597CE4 ADRP X0, 0xB5C000
	0x03597CE8 LDR X0, [X0 + 0x7D0]
	0x03597CEC BL 0x1C16D08
	0x03597CF0 LDR X8, [X20]
	0x03597CF4 LDR X1, [X8]
	0x03597CF8 BL 0x1C17270
	0x03597CFC TBZ X0, 0x0, 0x3597D48
	0x03597D00 LDR X20, [X20]
	0x03597D04 BL 0x3EB1AE0
	0x03597D08 MOVN W8, 0x1
	0x03597D0C STR W8, [X19], #0x8
	0x03597D10 ADRP X0, 0xB9F000
	0x03597D14 LDR X0, [X0 + 0xF48]
	0x03597D18 BL 0x1C16D08
	0x03597D1C LDR W8, [X0 + 0xE0]
	0x03597D20 CBNZ W8, 0x3597D28
	0x03597D24 BL 0x1C16DFC
	0x03597D28 ADRP X0, 0xBA0000
	0x03597D2C LDR X0, [X0 + 0x78]
	0x03597D30 BL 0x1C16D08
	0x03597D34 MOV X2, X0
	0x03597D38 MOV X0, X19
	0x03597D3C MOV X1, X20
	0x03597D40 BL 0x26324C8
	0x03597D44 B 0x3597BBC
	0x03597D48 MOVZ W0, 0x8
	0x03597D4C BL 0x3EB1AF0
	0x03597D50 LDR X8, [X20]
	0x03597D54 STR X8, [X0]
	0x03597D58 ADRP X1, 0x91D000
	0x03597D5C ADD X1, X1, 0xE58
	0x03597D60 MOV X2, X31
	0x03597D64 BL 0x3EB1B00
	0x03597D68 MOV X20, X0
	0x03597D6C BL 0x3EB1AE0
	0x03597D70 MOV X0, X20
	0x03597D74 BL 0x1D2C690
	0x03597D78 BL 0x1990590
	0x03597D7C STP X30, X21, [X31 - 0x20]!
	0x03597D80 STP X20, X19, [X31 + 0x10]
	0x03597D84 ADRP X20, 0xE49000
	0x03597D88 ADRP X21, 0xB5C000
	0x03597D8C LDRB W8, [X20 + 0x36]
	0x03597D90 LDR X21, [X21 + 0x8F0]
	0x03597D94 MOV X19, X0
	0x03597D98 TBNZ X8, 0x0, 0x3597DB0
	0x03597D9C ADRP X0, 0xB5C000
	0x03597DA0 LDR X0, [X0 + 0x8F0]
	0x03597DA4 BL 0x1C16CF4
	0x03597DA8 MOVZ W8, 0x1
	0x03597DAC STRB W8, [X20 + 0x36]
	0x03597DB0 LDR X0, [X21]
	0x03597DB4 BL 0x1C16F10
	0x03597DB8 MOV X1, X31
	0x03597DBC MOV X20, X0
	0x03597DC0 BL 0x3231AC4
	0x03597DC4 MOV X0, X20
	0x03597DC8 MOV X1, X19
	0x03597DCC BL 0x35AAFC4
	0x03597DD0 CBZ X20, 0x3597DEC
	0x03597DD4 LDR X8, [X20]
	0x03597DD8 MOV X0, X20
	0x03597DDC LDP X20, X19, [X31 + 0x10]
	0x03597DE0 LDP X2, X1, [X8 + 0x168]
	0x03597DE4 LDP X30, X21, [X31], #0x20
	0x03597DE8 BR X2
	0x03597DEC BL 0x1C16F20

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+80], X30
	003 Move [X31+96], X26
	004 Move [X31+104], X25
	005 Move [X31+112], X24
	006 Move [X31+120], X23
	007 Move [X31+128], X22
	008 Move [X31+136], X21
	009 Move [X31+144], X20
	010 Move [X31+152], X19
	011 Move X25, 0xE49000
	012 Move X24, 0xBA0000
	013 Move W8, [X25+4025]
	014 Move X24, [X24+3968]
	015 Move X19, X4
	016 Move X20, X3
	017 Move X21, X2
	018 Move X22, X1
	019 Move X23, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {38}
	024 Move X0, 0xBA0000
	025 Move X0, [X0+3976]
	026 Call 0x1C17CF4
	027 Move X0, 0xBA0000
	028 Move X0, [X0+3984]
	029 Call 0x1C17CF4
	030 Move X0, 0xBA0000
	031 Move X0, [X0+3992]
	032 Call 0x1C17CF4
	033 Move X0, 0xBA0000
	034 Move X0, [X0+3968]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X25+4025], W8
	038 Move X0, [X24]
	039 NotImplemented "Instruction MOVI not yet implemented."
	040 Move [X31+48], V0
	041 Move [X31+56], V0
	042 Move [X31+16], V0
	043 Move [X31+24], V0
	044 Move [X31], V0
	045 Move X24, 0xBA0000
	046 Move X26, 0xBA0000
	047 Move X25, 0xBA0000
	048 Move W8, [X0+224]
	049 Move X24, [X24+3976]
	050 Move X26, [X26+3984]
	051 Move X25, [X25+3992]
	052 Compare W8, 0
	053 JumpIfNotEqual {55}
	054 Call 0x1C17DFC
	055 Move X0, [X24]
	056 Add X8, X31, 0
	057 Or X24, X8, 15
	058 Move X8, X24
	059 Call AsyncTaskMethodBuilder`1<Object>.Create
	060 Move X2, [X26]
	061 Move TEMP, 0
	062 Not TEMP
	063 Move W8, TEMP
	064 Add X1, X31, 0
	065 Move X0, X24
	066 Move [X31+32], X21
	067 Move [X31+40], X23
	068 Move [X31+48], X22
	069 Move [X31+56], X20
	070 Move [X31+64], X19
	071 Move [X31], W8
	072 Call AsyncTaskMethodBuilder`1<Object>.Start, X0, X1
	073 Move X1, [X25]
	074 Move X0, X24
	075 Call AsyncTaskMethodBuilder`1<Object>.get_Task, X0
	076 Move X20, [X31+144]
	077 Move X19, [X31+152]
	078 Move X22, [X31+128]
	079 Move X21, [X31+136]
	080 Move X24, [X31+112]
	081 Move X23, [X31+120]
	082 Move X26, [X31+96]
	083 Move X25, [X31+104]
	084 Move X30, [X31+80]
	085 Add X31, X31, 160
	086 Return X0

Method: System.Threading.Tasks.Task`1<Satori.IApiFlagList> SatoriGetFlagsAsync(System.String bearerToken, System.String basicAuthUsername, System.String basicAuthPassword, System.Collections.Generic.IEnumerable`1<System.String> names, System.Nullable`1<System.Threading.CancellationToken> cancellationToken)

Disassembly:
	0x03597DF0 STR X30, [X31 - 0x30]!
	0x03597DF4 STP X22, X21, [X31 + 0x10]
	0x03597DF8 STP X20, X19, [X31 + 0x20]
	0x03597DFC ADRP X22, 0xE48000
	0x03597E00 ADRP X21, 0xB9F000
	0x03597E04 LDRB W8, [X22 + 0xFC4]
	0x03597E08 LDR X21, [X21 + 0xF48]
	0x03597E0C MOV X19, X1
	0x03597E10 MOV X20, X0
	0x03597E14 TBNZ X8, 0x0, 0x3597E38
	0x03597E18 ADRP X0, 0xBA0000
	0x03597E1C LDR X0, [X0 + 0x80]
	0x03597E20 BL 0x1C16CF4
	0x03597E24 ADRP X0, 0xB9F000
	0x03597E28 LDR X0, [X0 + 0xF48]
	0x03597E2C BL 0x1C16CF4
	0x03597E30 MOVZ W8, 0x1
	0x03597E34 STRB W8, [X22 + 0xFC4]
	0x03597E38 LDR X0, [X21]
	0x03597E3C ADRP X21, 0xBA0000
	0x03597E40 LDR W8, [X0 + 0xE0]
	0x03597E44 LDR X21, [X21 + 0x80]
	0x03597E48 CBNZ W8, 0x3597E50
	0x03597E4C BL 0x1C16DFC
	0x03597E50 LDR X2, [X21]
	0x03597E54 ADD X0, X20, 0x8
	0x03597E58 MOV X1, X19
	0x03597E5C LDP X20, X19, [X31 + 0x20]
	0x03597E60 LDP X22, X21, [X31 + 0x10]
	0x03597E64 LDR X30, [X31], #0x30
	0x03597E68 B 0x2632228
	0x03597E6C SUB X31, X31, 0x70
	0x03597E70 STR X30, [X31 + 0x10]
	0x03597E74 STP X28, X27, [X31 + 0x20]
	0x03597E78 STP X26, X25, [X31 + 0x30]
	0x03597E7C STP X24, X23, [X31 + 0x40]
	0x03597E80 STP X22, X21, [X31 + 0x50]
	0x03597E84 STP X20, X19, [X31 + 0x60]
	0x03597E88 ADRP X20, 0xE48000
	0x03597E8C LDRB W8, [X20 + 0xFC5]
	0x03597E90 MOV X19, X0
	0x03597E94 TBNZ X8, 0x0, 0x3597F60
	0x03597E98 ADRP X0, 0xBA0000
	0x03597E9C LDR X0, [X0 + 0x88]
	0x03597EA0 BL 0x1C16CF4
	0x03597EA4 ADRP X0, 0xB5F000
	0x03597EA8 LDR X0, [X0 + 0x280]
	0x03597EAC BL 0x1C16CF4
	0x03597EB0 ADRP X0, 0xB65000
	0x03597EB4 LDR X0, [X0 + 0x8D8]
	0x03597EB8 BL 0x1C16CF4
	0x03597EBC ADRP X0, 0xB5D000
	0x03597EC0 LDR X0, [X0 + 0x810]
	0x03597EC4 BL 0x1C16CF4
	0x03597EC8 ADRP X0, 0xB5D000
	0x03597ECC LDR X0, [X0 + 0x6C0]
	0x03597ED0 BL 0x1C16CF4
	0x03597ED4 ADRP X0, 0xB5D000
	0x03597ED8 LDR X0, [X0 + 0x6D0]
	0x03597EDC BL 0x1C16CF4
	0x03597EE0 ADRP X0, 0xBA0000
	0x03597EE4 LDR X0, [X0 + 0x58]
	0x03597EE8 BL 0x1C16CF4
	0x03597EEC ADRP X0, 0xB5F000
	0x03597EF0 LDR X0, [X0 + 0x1E0]
	0x03597EF4 BL 0x1C16CF4
	0x03597EF8 ADRP X0, 0xB5F000
	0x03597EFC LDR X0, [X0 + 0x1F0]
	0x03597F00 BL 0x1C16CF4
	0x03597F04 ADRP X0, 0xB5F000
	0x03597F08 LDR X0, [X0 + 0x1F8]
	0x03597F0C BL 0x1C16CF4
	0x03597F10 ADRP X0, 0xB65000

ISIL:
	001 Subtract X31, X31, 192
	002 Move [X31+96], X30
	003 Move [X31+112], X28
	004 Move [X31+120], X27
	005 Move [X31+128], X26
	006 Move [X31+136], X25
	007 Move [X31+144], X24
	008 Move [X31+152], X23
	009 Move [X31+160], X22
	010 Move [X31+168], X21
	011 Move [X31+176], X20
	012 Move [X31+184], X19
	013 Move X27, 0xE49000
	014 Move X26, 0xBA0000
	015 Move W8, [X27+4026]
	016 Move X26, [X26+4000]
	017 Move X19, X6
	018 Move X20, X5
	019 Move X21, X4
	020 Move X22, X3
	021 Move X23, X2
	022 Move X25, X1
	023 Move X24, X0
	024 Move TEMP, X8
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {42}
	028 Move X0, 0xBA0000
	029 Move X0, [X0+4008]
	030 Call 0x1C17CF4
	031 Move X0, 0xBA0000
	032 Move X0, [X0+4016]
	033 Call 0x1C17CF4
	034 Move X0, 0xBA0000
	035 Move X0, [X0+4024]
	036 Call 0x1C17CF4
	037 Move X0, 0xBA0000
	038 Move X0, [X0+4000]
	039 Call 0x1C17CF4
	040 Move W8, 1
	041 Move [X27+4026], W8
	042 Move X0, [X26]
	043 NotImplemented "Instruction MOVI not yet implemented."
	044 Move [X31+64], V0
	045 Move [X31+72], V0
	046 Move [X31+32], V0
	047 Move [X31+40], V0
	048 Move [X31], V0
	049 Move [X31+8], V0
	050 Move X26, 0xBA0000
	051 Move X28, 0xBA0000
	052 Move X27, 0xBA0000
	053 Move W8, [X0+224]
	054 Move X26, [X26+4008]
	055 Move X28, [X28+4016]
	056 Move X27, [X27+4024]
	057 Compare W8, 0
	058 JumpIfNotEqual {60}
	059 Call 0x1C17DFC
	060 Move X0, [X26]
	061 Add X8, X31, 0
	062 Or X26, X8, 15
	063 Move X8, X26
	064 Call AsyncTaskMethodBuilder`1<Object>.Create
	065 Move X2, [X28]
	066 Move TEMP, 0
	067 Not TEMP
	068 Move W8, TEMP
	069 Add X1, X31, 0
	070 Move X0, X26
	071 Move [X31+48], X25
	072 Move [X31+56], X23
	073 Move [X31+32], X21
	074 Move [X31+40], X24
	075 Move [X31+64], X22
	076 Move [X31+72], X20
	077 Move [X31+80], X19
	078 Move [X31], W8
	079 Call AsyncTaskMethodBuilder`1<Object>.Start, X0, X1
	080 Move X1, [X27]
	081 Move X0, X26
	082 Call AsyncTaskMethodBuilder`1<Object>.get_Task, X0
	083 Move X20, [X31+176]
	084 Move X19, [X31+184]
	085 Move X22, [X31+160]
	086 Move X21, [X31+168]
	087 Move X24, [X31+144]
	088 Move X23, [X31+152]
	089 Move X26, [X31+128]
	090 Move X25, [X31+136]
	091 Move X28, [X31+112]
	092 Move X27, [X31+120]
	093 Move X30, [X31+96]
	094 Add X31, X31, 192
	095 Return X0

Method: System.Threading.Tasks.Task`1<Satori.IApiSession> SatoriIdentifyAsync(System.String bearerToken, Satori.ApiIdentifyRequest body, System.Nullable`1<System.Threading.CancellationToken> cancellationToken)

Disassembly:
	0x03597F14 LDR X0, [X0 + 0x3A0]
	0x03597F18 BL 0x1C16CF4
	0x03597F1C ADRP X0, 0xB85000
	0x03597F20 LDR X0, [X0 + 0x4D8]
	0x03597F24 BL 0x1C16CF4
	0x03597F28 ADRP X0, 0xBA0000
	0x03597F2C LDR X0, [X0 + 0x90]
	0x03597F30 BL 0x1C16CF4
	0x03597F34 ADRP X0, 0xB97000
	0x03597F38 LDR X0, [X0 + 0x7D0]
	0x03597F3C BL 0x1C16CF4
	0x03597F40 ADRP X0, 0xB97000
	0x03597F44 LDR X0, [X0 + 0x7D8]
	0x03597F48 BL 0x1C16CF4
	0x03597F4C ADRP X0, 0xB5C000
	0x03597F50 LDR X0, [X0 + 0x988]
	0x03597F54 BL 0x1C16CF4
	0x03597F58 MOVZ W8, 0x1
	0x03597F5C STRB W8, [X20 + 0xFC5]
	0x03597F60 STR X31, [X31 + 0x18]
	0x03597F64 ADRP X28, 0xB5F000
	0x03597F68 LDR W8, [X19]
	0x03597F6C LDR X28, [X28 + 0x280]
	0x03597F70 CBZ W8, 0x359814C
	0x03597F74 LDR X8, [X19 + 0x20]
	0x03597F78 CBZ X8, 0x3598264
	0x03597F7C LDR X25, [X19 + 0x28]
	0x03597F80 CBZ X25, 0x35982AC
	0x03597F84 LDR X0, [X25 + 0x20]
	0x03597F88 CBZ X0, 0x35982B0
	0x03597F8C ADRP X8, 0xBA0000
	0x03597F90 ADRP X9, 0xB5C000
	0x03597F94 LDR X8, [X8 + 0x90]
	0x03597F98 LDR X9, [X9 + 0x988]
	0x03597F9C LDR X21, [X8]
	0x03597FA0 LDR X20, [X9]
	0x03597FA4 MOV X1, X31
	0x03597FA8 BL 0x361B448
	0x03597FAC ADRP X8, 0xB65000
	0x03597FB0 LDR X8, [X8 + 0x8D8]
	0x03597FB4 MOV X22, X0
	0x03597FB8 LDR X0, [X8]
	0x03597FBC MOVZ W1, 0x1
	0x03597FC0 BL 0x1C16D6C
	0x03597FC4 MOV X1, X0
	0x03597FC8 CBZ X1, 0x35982B4
	0x03597FCC LDR W8, [X1 + 0x18]
	0x03597FD0 CBZ W8, 0x35982B8
	0x03597FD4 MOVZ W8, 0x2F
	0x03597FD8 STRH W8, [X1 + 0x20]
	0x03597FDC CBZ X22, 0x35982BC
	0x03597FE0 MOV X0, X22
	0x03597FE4 MOV X2, X31
	0x03597FE8 BL 0x322BC58
	0x03597FEC MOV X1, X21
	0x03597FF0 MOV X2, X31
	0x03597FF4 BL 0x321B938
	0x03597FF8 ADRP X8, 0xB65000
	0x03597FFC LDR X8, [X8 + 0x3A0]
	0x03598000 MOV X22, X0
	0x03598004 LDR X23, [X25 + 0x20]
	0x03598008 LDR X0, [X8]
	0x0359800C BL 0x1C16F10
	0x03598010 MOV X21, X0
	0x03598014 MOV X1, X23
	0x03598018 MOV X2, X31
	0x0359801C BL 0x36281F8
	0x03598020 CBZ X21, 0x35982C0

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+80], X30
	003 Move [X31+96], X26
	004 Move [X31+104], X25
	005 Move [X31+112], X24
	006 Move [X31+120], X23
	007 Move [X31+128], X22
	008 Move [X31+136], X21
	009 Move [X31+144], X20
	010 Move [X31+152], X19
	011 Move X25, 0xE49000
	012 Move X24, 0xBA0000
	013 Move W8, [X25+4027]
	014 Move X24, [X24+3912]
	015 Move X19, X4
	016 Move X20, X3
	017 Move X21, X2
	018 Move X22, X1
	019 Move X23, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {38}
	024 Move X0, 0xBA0000
	025 Move X0, [X0+3920]
	026 Call 0x1C17CF4
	027 Move X0, 0xBA0000
	028 Move X0, [X0+4032]
	029 Call 0x1C17CF4
	030 Move X0, 0xBA0000
	031 Move X0, [X0+3936]
	032 Call 0x1C17CF4
	033 Move X0, 0xBA0000
	034 Move X0, [X0+3912]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X25+4027], W8
	038 Move X0, [X24]
	039 NotImplemented "Instruction MOVI not yet implemented."
	040 Move [X31+48], V0
	041 Move [X31+56], V0
	042 Move [X31+16], V0
	043 Move [X31+24], V0
	044 Move [X31], V0
	045 Move X24, 0xBA0000
	046 Move X26, 0xBA0000
	047 Move X25, 0xBA0000
	048 Move W8, [X0+224]
	049 Move X24, [X24+3920]
	050 Move X26, [X26+4032]
	051 Move X25, [X25+3936]
	052 Compare W8, 0
	053 JumpIfNotEqual {55}
	054 Call 0x1C17DFC
	055 Move X0, [X24]
	056 Add X8, X31, 0
	057 Or X24, X8, 15
	058 Move X8, X24
	059 Call AsyncTaskMethodBuilder`1<Object>.Create
	060 Move X2, [X26]
	061 Move TEMP, 0
	062 Not TEMP
	063 Move W8, TEMP
	064 Add X1, X31, 0
	065 Move X0, X24
	066 Move [X31+32], X21
	067 Move [X31+40], X23
	068 Move [X31+48], X22
	069 Move [X31+56], X20
	070 Move [X31+64], X19
	071 Move [X31], W8
	072 Call AsyncTaskMethodBuilder`1<Object>.Start, X0, X1
	073 Move X1, [X25]
	074 Move X0, X24
	075 Call AsyncTaskMethodBuilder`1<Object>.get_Task, X0
	076 Move X20, [X31+144]
	077 Move X19, [X31+152]
	078 Move X22, [X31+128]
	079 Move X21, [X31+136]
	080 Move X24, [X31+112]
	081 Move X23, [X31+120]
	082 Move X26, [X31+96]
	083 Move X25, [X31+104]
	084 Move X30, [X31+80]
	085 Add X31, X31, 160
	086 Return X0

Method: System.Threading.Tasks.Task SatoriDeleteIdentityAsync(System.String bearerToken, System.Nullable`1<System.Threading.CancellationToken> cancellationToken)

Disassembly:
	0x03598024 MOV X0, X21
	0x03598028 MOV X1, X22
	0x0359802C MOV X2, X31
	0x03598030 BL 0x36288CC
	0x03598034 MOV X0, X21
	0x03598038 MOV X1, X20
	0x0359803C MOV X2, X31
	0x03598040 BL 0x3628980
	0x03598044 MOV X0, X21
	0x03598048 MOV X1, X31
	0x0359804C BL 0x3628A38
	0x03598050 ADRP X8, 0xB84000
	0x03598054 ADRP X9, 0xB5C000
	0x03598058 LDR X8, [X8 + 0x4D8]
	0x0359805C LDR X9, [X9 + 0x6D0]
	0x03598060 MOV X20, X0
	0x03598064 LDR X21, [X8]
	0x03598068 LDR X0, [X9]
	0x0359806C BL 0x1C16F10
	0x03598070 ADRP X8, 0xB5C000
	0x03598074 LDR X8, [X8 + 0x6C0]
	0x03598078 MOV X22, X0
	0x0359807C LDR X1, [X8]
	0x03598080 BL 0x2AA4804
	0x03598084 ADRP X8, 0xB96000
	0x03598088 LDR X8, [X8 + 0x7D8]
	0x0359808C LDR X1, [X19 + 0x30]
	0x03598090 LDR X0, [X8]
	0x03598094 MOV X2, X31
	0x03598098 BL 0x321B938
	0x0359809C CBZ X22, 0x35982C4
	0x035980A0 ADRP X8, 0xB96000
	0x035980A4 LDR X8, [X8 + 0x7D0]
	0x035980A8 ADRP X9, 0xB5C000
	0x035980AC LDR X9, [X9 + 0x810]
	0x035980B0 MOV X2, X0
	0x035980B4 LDR X1, [X8]
	0x035980B8 LDR X3, [X9]
	0x035980BC MOV X0, X22
	0x035980C0 BL 0x2AA5098
	0x035980C4 LDR X0, [X19 + 0x20]
	0x035980C8 BL 0x3597D7C
	0x035980CC MOV X23, X0
	0x035980D0 MOV X0, X31
	0x035980D4 BL 0x3241948
	0x035980D8 CBZ X0, 0x35982C8
	0x035980DC LDR X8, [X0]
	0x035980E0 LDR X9, [X8 + 0x268]
	0x035980E4 LDR X2, [X8 + 0x270]
	0x035980E8 MOV X1, X23
	0x035980EC BLR X9
	0x035980F0 LDR X24, [X25 + 0x10]
	0x035980F4 CBZ X24, 0x35982CC
	0x035980F8 ADRP X10, 0xB9F000
	0x035980FC LDR X10, [X10 + 0x58]
	0x03598100 LDR X8, [X24]
	0x03598104 LDR W26, [X25 + 0x18]
	0x03598108 LDP X27, X25, [X19 + 0x38]

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+112], X30
	003 Move [X31+128], X24
	004 Move [X31+136], X23
	005 Move [X31+144], X22
	006 Move [X31+152], X21
	007 Move [X31+160], X20
	008 Move [X31+168], X19
	009 Move X24, 0xE48000
	010 Move X23, 0xB5F000
	011 Move W8, [X24+4028]
	012 Move X23, [X23+640]
	013 Move X20, X3
	014 Move X21, X2
	015 Move X22, X1
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {29}
	021 Move X0, 0xB9F000
	022 Move X0, [X0+4040]
	023 Call 0x1C17CF4
	024 Move X0, 0xB5F000
	025 Move X0, [X0+640]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X24+4028], W8
	029 Move X0, [X23]
	030 NotImplemented "Instruction MOVI not yet implemented."
	031 Move [X31+96], X31
	032 Move [X31+64], V0
	033 Move [X31+72], V0
	034 Move [X31+32], V0
	035 Move [X31+40], V0
	036 Move X23, 0xB9F000
	037 Move W8, [X0+224]
	038 Move X23, [X23+4040]
	039 Compare W8, 0
	040 JumpIfNotEqual {42}
	041 Call 0x1C17DFC
	042 Add X8, X31, 8
	043 Move X0, X31
	044 Call AsyncTaskMethodBuilder.Create
	045 NotImplemented "Instruction LDUR not yet implemented."
	046 Move X9, [X31+24]
	047 Move X2, [X23]
	048 Add X8, X31, 32
	049 Move [X31+88], X20
	050 Or X20, X8, 15
	051 Move TEMP, 0
	052 Not TEMP
	053 Move W10, TEMP
	054 Add X1, X31, 32
	055 Move X0, X20
	056 Move [X31+72], X22
	057 Move [X31+80], X21
	058 Move [X31+40], V0
	059 Move [X31+56], X9
	060 Move [X31+64], X19
	061 Move [X31+32], W10
	062 Call AsyncTaskMethodBuilder.Start, X0, X1
	063 Move X0, X20
	064 Move X1, X31
	065 Call AsyncTaskMethodBuilder.get_Task, X0
	066 Move X20, [X31+160]
	067 Move X19, [X31+168]
	068 Move X22, [X31+144]
	069 Move X21, [X31+152]
	070 Move X24, [X31+128]
	071 Move X23, [X31+136]
	072 Move X30, [X31+112]
	073 Add X31, X31, 176
	074 Return X0

Method: System.Threading.Tasks.Task`1<Satori.IApiLiveEventList> SatoriGetLiveEventsAsync(System.String bearerToken, System.Collections.Generic.IEnumerable`1<System.String> names, System.Nullable`1<System.Threading.CancellationToken> cancellationToken)

Disassembly:
	0x0359810C LDR X1, [X10]
	0x03598110 LDRH W9, [X8 + 0x12E]
	0x03598114 MOV X23, X0
	0x03598118 CBZ X9, 0x359813C
	0x0359811C LDR X10, [X8 + 0xB0]
	0x03598120 ADD X10, X10, 0x8
	0x03598124 LDUR X11, [X10 - 0x8]
	0x03598128 CMP X11, X1
	0x0359812C B.EQ 0x3598164
	0x03598130 SUBS X9, X9, 0x1
	0x03598134 ADD X10, X10, 0x10
	0x03598138 B.NE 0x3598124
	0x0359813C MOVZ W2, 0x3
	0x03598140 MOV X0, X24
	0x03598144 BL 0x1C5C788
	0x03598148 B 0x3598174
	0x0359814C LDR X8, [X19 + 0x48]
	0x03598150 MOVN W9, 0x0
	0x03598154 STR X8, [X31 + 0x18]
	0x03598158 STR X31, [X19 + 0x48]
	0x0359815C STR W9, [X19]
	0x03598160 B 0x35981D0
	0x03598164 LDR W9, [X10]
	0x03598168 ADD W9, W9, 0x3
	0x0359816C ADD X8, X8, W9, 0x4, SXTW
	0x03598170 ADD X0, X8, 0x138
	0x03598174 LDP X8, X9, [X0]
	0x03598178 MOV X0, X24
	0x0359817C MOV X1, X21
	0x03598180 MOV X2, X20
	0x03598184 MOV X3, X22
	0x03598188 MOV X4, X23
	0x0359818C MOV W5, W26
	0x03598190 MOV X6, X27
	0x03598194 MOV X7, X25
	0x03598198 STR X9, [X31]
	0x0359819C BLR X8
	0x035981A0 CBZ X0, 0x35982D0
	0x035981A4 ADRP X8, 0xB5E000
	0x035981A8 LDR X8, [X8 + 0x1F8]
	0x035981AC LDR X1, [X8]
	0x035981B0 BL 0x269F5D0
	0x035981B4 ADRP X8, 0xB5E000
	0x035981B8 LDR X8, [X8 + 0x1F0]
	0x035981BC STR X0, [X31 + 0x18]
	0x035981C0 LDR X1, [X8]
	0x035981C4 ADD X0, X31, 0x18
	0x035981C8 BL 0x2677430
	0x035981CC TBZ X0, 0x0, 0x359820C
	0x035981D0 ADRP X8, 0xB5E000
	0x035981D4 LDR X8, [X8 + 0x1E0]
	0x035981D8 ADD X0, X31, 0x18
	0x035981DC LDR X1, [X8]
	0x035981E0 BL 0x2677474
	0x035981E4 MOVN W8, 0x1
	0x035981E8 STR W8, [X19], #0x8
	0x035981EC LDR X0, [X28]
	0x035981F0 LDR W8, [X0 + 0xE0]
	0x035981F4 CBNZ W8, 0x35981FC
	0x035981F8 BL 0x1C16DFC
	0x035981FC MOV X0, X19
	0x03598200 MOV X1, X31
	0x03598204 BL 0x32C4864
	0x03598208 B 0x3598244
	0x0359820C STR W31, [X19]
	0x03598210 LDR X8, [X31 + 0x18]
	0x03598214 STR X8, [X19 + 0x48]
	0x03598218 LDR X0, [X28]

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+80], X30
	003 Move [X31+96], X26
	004 Move [X31+104], X25
	005 Move [X31+112], X24
	006 Move [X31+120], X23
	007 Move [X31+128], X22
	008 Move [X31+136], X21
	009 Move [X31+144], X20
	010 Move [X31+152], X19
	011 Move X25, 0xE48000
	012 Move X24, 0xB9F000
	013 Move W8, [X25+4029]
	014 Move X24, [X24+4048]
	015 Move X19, X4
	016 Move X20, X3
	017 Move X21, X2
	018 Move X22, X1
	019 Move X23, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {38}
	024 Move X0, 0xB9F000
	025 Move X0, [X0+4056]
	026 Call 0x1C17CF4
	027 Move X0, 0xB9F000
	028 Move X0, [X0+4064]
	029 Call 0x1C17CF4
	030 Move X0, 0xB9F000
	031 Move X0, [X0+4072]
	032 Call 0x1C17CF4
	033 Move X0, 0xB9F000
	034 Move X0, [X0+4048]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X25+4029], W8
	038 Move X0, [X24]
	039 NotImplemented "Instruction MOVI not yet implemented."
	040 Move [X31+48], V0
	041 Move [X31+56], V0
	042 Move [X31+16], V0
	043 Move [X31+24], V0
	044 Move [X31], V0
	045 Move X24, 0xB9F000
	046 Move X26, 0xB9F000
	047 Move X25, 0xB9F000
	048 Move W8, [X0+224]
	049 Move X24, [X24+4056]
	050 Move X26, [X26+4064]
	051 Move X25, [X25+4072]
	052 Compare W8, 0
	053 JumpIfNotEqual {55}
	054 Call 0x1C17DFC
	055 Move X0, [X24]
	056 Add X8, X31, 0
	057 Or X24, X8, 15
	058 Move X8, X24
	059 Call AsyncTaskMethodBuilder`1<Object>.Create
	060 Move X2, [X26]
	061 Move TEMP, 0
	062 Not TEMP
	063 Move W8, TEMP
	064 Add X1, X31, 0
	065 Move X0, X24
	066 Move [X31+32], X21
	067 Move [X31+40], X23
	068 Move [X31+48], X22
	069 Move [X31+56], X20
	070 Move [X31+64], X19
	071 Move [X31], W8
	072 Call AsyncTaskMethodBuilder`1<Object>.Start, X0, X1
	073 Move X1, [X25]
	074 Move X0, X24
	075 Call AsyncTaskMethodBuilder`1<Object>.get_Task, X0
	076 Move X20, [X31+144]
	077 Move X19, [X31+152]
	078 Move X22, [X31+128]
	079 Move X21, [X31+136]
	080 Move X24, [X31+112]
	081 Move X23, [X31+120]
	082 Move X26, [X31+96]
	083 Move X25, [X31+104]
	084 Move X30, [X31+80]
	085 Add X31, X31, 160
	086 Return X0

Method: System.Threading.Tasks.Task`1<Satori.IApiGetMessageListResponse> SatoriGetMessageListAsync(System.String bearerToken, System.Nullable`1<System.Int32> limit, System.Nullable`1<System.Boolean> forward, System.String cursor, System.Nullable`1<System.Threading.CancellationToken> cancellationToken)

Disassembly:
	0x0359821C LDR W8, [X0 + 0xE0]
	0x03598220 CBNZ W8, 0x3598228
	0x03598224 BL 0x1C16DFC
	0x03598228 ADRP X8, 0xB9F000
	0x0359822C LDR X8, [X8 + 0x88]
	0x03598230 ADD X0, X19, 0x8
	0x03598234 LDR X3, [X8]
	0x03598238 ADD X1, X31, 0x18
	0x0359823C MOV X2, X19
	0x03598240 BL 0x2187B2C
	0x03598244 LDP X20, X19, [X31 + 0x60]
	0x03598248 LDP X22, X21, [X31 + 0x50]
	0x0359824C LDP X24, X23, [X31 + 0x40]
	0x03598250 LDP X26, X25, [X31 + 0x30]
	0x03598254 LDP X28, X27, [X31 + 0x20]
	0x03598258 LDR X30, [X31 + 0x10]
	0x0359825C ADD X31, X31, 0x70
	0x03598260 RET
	0x03598264 ADRP X0, 0xB63000
	0x03598268 LDR X0, [X0 + 0x578]
	0x0359826C BL 0x1C16D08
	0x03598270 BL 0x1C16F10
	0x03598274 MOV X20, X0
	0x03598278 ADRP X0, 0xB96000
	0x0359827C LDR X0, [X0 + 0xBC8]
	0x03598280 BL 0x1C16D08
	0x03598284 MOV X1, X0
	0x03598288 MOV X0, X20
	0x0359828C MOV X2, X31
	0x03598290 BL 0x3314A68
	0x03598294 ADRP X0, 0xB9F000
	0x03598298 LDR X0, [X0 + 0x98]
	0x0359829C BL 0x1C16D08
	0x035982A0 MOV X1, X0
	0x035982A4 MOV X0, X20
	0x035982A8 BL 0x1C16DEC
	0x035982AC BL 0x1C16F20
	0x035982B0 BL 0x1C16F20
	0x035982B4 BL 0x1C16F20
	0x035982B8 BL 0x1C16F28
	0x035982BC BL 0x1C16F20
	0x035982C0 BL 0x1C16F20
	0x035982C4 BL 0x1C16F20
	0x035982C8 BL 0x1C16F20
	0x035982CC BL 0x1C16F20
	0x035982D0 BL 0x1C16F20
	0x035982D4 B 0x3598334
	0x035982D8 B 0x3598334
	0x035982DC B 0x3598334
	0x035982E0 B 0x3598334
	0x035982E4 B 0x3598334
	0x035982E8 B 0x3598334
	0x035982EC B 0x3598334
	0x035982F0 B 0x3598334
	0x035982F4 B 0x3598334
	0x035982F8 B 0x3598334
	0x035982FC B 0x3598334
	0x03598300 B 0x3598334
	0x03598304 B 0x3598334
	0x03598308 B 0x3598334
	0x0359830C B 0x3598334
	0x03598310 B 0x3598334
	0x03598314 B 0x3598334
	0x03598318 B 0x3598334
	0x0359831C B 0x3598334
	0x03598320 B 0x3598334
	0x03598324 B 0x3598334
	0x03598328 B 0x3598334
	0x0359832C B 0x3598334
	0x03598330 B 0x3598334
	0x03598334 MOV X20, X0
	0x03598338 CMP W1, 0x1
	0x0359833C B.NE 0x35983CC
	0x03598340 MOV X0, X20

ISIL:
	001 Subtract X31, X31, 192
	002 Move [X31+96], X30
	003 Move [X31+112], X28
	004 Move [X31+120], X27
	005 Move [X31+128], X26
	006 Move [X31+136], X25
	007 Move [X31+144], X24
	008 Move [X31+152], X23
	009 Move [X31+160], X22
	010 Move [X31+168], X21
	011 Move [X31+176], X20
	012 Move [X31+184], X19
	013 Move X27, 0xE48000
	014 Move X26, 0xB9F000
	015 Move W8, [X27+4030]
	016 Move X26, [X26+4080]
	017 Move X19, X6
	018 Move X20, X5
	019 Move X21, X4
	020 Move X22, X3
	021 Move X25, X2
	022 Move X23, X1
	023 Move X24, X0
	024 Move TEMP, X8
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {42}
	028 Move X0, 0xB9F000
	029 Move X0, [X0+4088]
	030 Call 0x1C17CF4
	031 Move X0, 0xBA0000
	032 Move X0, [X0]
	033 Call 0x1C17CF4
	034 Move X0, 0xBA0000
	035 Move X0, [X0+8]
	036 Call 0x1C17CF4
	037 Move X0, 0xB9F000
	038 Move X0, [X0+4080]
	039 Call 0x1C17CF4
	040 Move W8, 1
	041 Move [X27+4030], W8
	042 Move X0, [X26]
	043 NotImplemented "Instruction MOVI not yet implemented."
	044 Move [X31+64], V0
	045 Move [X31+72], V0
	046 Move [X31+32], V0
	047 Move [X31+40], V0
	048 Move [X31], V0
	049 Move [X31+8], V0
	050 Move X26, 0xB9F000
	051 Move X28, 0xBA0000
	052 Move X27, 0xBA0000
	053 Move W8, [X0+224]
	054 Move X26, [X26+4088]
	055 Move X28, [X28]
	056 Move X27, [X27+8]
	057 Compare W8, 0
	058 JumpIfNotEqual {60}
	059 Call 0x1C17DFC
	060 Move X0, [X26]
	061 Add X8, X31, 0
	062 Or X26, X8, 15
	063 Move X8, X26
	064 Call AsyncTaskMethodBuilder`1<Object>.Create
	065 Move X2, [X28]
	066 Move TEMP, 0
	067 Not TEMP
	068 Move W8, TEMP
	069 Add X1, X31, 0
	070 Move X0, X26
	071 Move [X31+32], X25
	072 NotImplemented "Instruction STRH not yet implemented."
	073 Move [X31+48], X21
	074 Move [X31+56], X24
	075 Move [X31+64], X23
	076 Move [X31+72], X20
	077 Move [X31+80], X19
	078 Move [X31], W8
	079 Call AsyncTaskMethodBuilder`1<Object>.Start, X0, X1
	080 Move X1, [X27]
	081 Move X0, X26
	082 Call AsyncTaskMethodBuilder`1<Object>.get_Task, X0
	083 Move X20, [X31+176]
	084 Move X19, [X31+184]
	085 Move X22, [X31+160]
	086 Move X21, [X31+168]
	087 Move X24, [X31+144]
	088 Move X23, [X31+152]
	089 Move X26, [X31+128]
	090 Move X25, [X31+136]
	091 Move X28, [X31+112]
	092 Move X27, [X31+120]
	093 Move X30, [X31+96]
	094 Add X31, X31, 192
	095 Return X0

Method: System.Threading.Tasks.Task SatoriDeleteMessageAsync(System.String bearerToken, System.String id, System.Nullable`1<System.Threading.CancellationToken> cancellationToken)

Disassembly:
	0x03598344 BL 0x3EB1AD0
	0x03598348 MOV X20, X0
	0x0359834C ADRP X0, 0xB5B000
	0x03598350 LDR X0, [X0 + 0x7D0]
	0x03598354 BL 0x1C16D08
	0x03598358 LDR X8, [X20]
	0x0359835C LDR X1, [X8]
	0x03598360 BL 0x1C17270
	0x03598364 TBZ X0, 0x0, 0x35983A4
	0x03598368 LDR X20, [X20]
	0x0359836C BL 0x3EB1AE0
	0x03598370 MOVN W8, 0x1
	0x03598374 STR W8, [X19], #0x8
	0x03598378 ADRP X0, 0xB5E000
	0x0359837C LDR X0, [X0 + 0x280]
	0x03598380 BL 0x1C16D08
	0x03598384 LDR W8, [X0 + 0xE0]
	0x03598388 CBNZ W8, 0x3598390
	0x0359838C BL 0x1C16DFC
	0x03598390 MOV X0, X19
	0x03598394 MOV X1, X20
	0x03598398 MOV X2, X31
	0x0359839C BL 0x32C4908
	0x035983A0 B 0x3598244
	0x035983A4 MOVZ W0, 0x8
	0x035983A8 BL 0x3EB1AF0
	0x035983AC LDR X8, [X20]
	0x035983B0 STR X8, [X0]
	0x035983B4 ADRP X1, 0x91C000
	0x035983B8 ADD X1, X1, 0xE58
	0x035983BC MOV X2, X31
	0x035983C0 BL 0x3EB1B00
	0x035983C4 MOV X20, X0
	0x035983C8 BL 0x3EB1AE0
	0x035983CC MOV X0, X20
	0x035983D0 BL 0x1D2C690
	0x035983D4 BL 0x1990590
	0x035983D8 STR X30, [X31 - 0x30]!
	0x035983DC STP X22, X21, [X31 + 0x10]
	0x035983E0 STP X20, X19, [X31 + 0x20]
	0x035983E4 ADRP X21, 0xE47000
	0x035983E8 ADRP X22, 0xB5E000
	0x035983EC LDRB W8, [X21 + 0xFC6]
	0x035983F0 LDR X22, [X22 + 0x280]
	0x035983F4 MOV X19, X1
	0x035983F8 MOV X20, X0
	0x035983FC TBNZ X8, 0x0, 0x3598414
	0x03598400 ADRP X0, 0xB5E000
	0x03598404 LDR X0, [X0 + 0x280]
	0x03598408 BL 0x1C16CF4
	0x0359840C MOVZ W8, 0x1
	0x03598410 STRB W8, [X21 + 0xFC6]
	0x03598414 LDR X0, [X22]
	0x03598418 LDR W8, [X0 + 0xE0]
	0x0359841C CBNZ W8, 0x3598424
	0x03598420 BL 0x1C16DFC
	0x03598424 ADD X0, X20, 0x8
	0x03598428 MOV X1, X19
	0x0359842C LDP X20, X19, [X31 + 0x20]

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+112], X30
	003 Move [X31+120], X25
	004 Move [X31+128], X24
	005 Move [X31+136], X23
	006 Move [X31+144], X22
	007 Move [X31+152], X21
	008 Move [X31+160], X20
	009 Move [X31+168], X19
	010 Move X25, 0xE48000
	011 Move X24, 0xB5F000
	012 Move W8, [X25+4031]
	013 Move X24, [X24+640]
	014 Move X20, X4
	015 Move X21, X3
	016 Move X19, X2
	017 Move X22, X1
	018 Move X23, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {31}
	023 Move X0, 0xBA0000
	024 Move X0, [X0+16]
	025 Call 0x1C17CF4
	026 Move X0, 0xB5F000
	027 Move X0, [X0+640]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X25+4031], W8
	031 Move X0, [X24]
	032 NotImplemented "Instruction MOVI not yet implemented."
	033 Move [X31+80], V0
	034 Move [X31+88], V0
	035 Move [X31+48], V0
	036 Move [X31+56], V0
	037 Move [X31+2], V0
	038 Move X24, 0xBA0000
	039 Move W8, [X0+224]
	040 Move X24, [X24+16]
	041 Compare W8, 0
	042 JumpIfNotEqual {44}
	043 Call 0x1C17DFC
	044 Add X8, X31, 8
	045 Move X0, X31
	046 Call AsyncTaskMethodBuilder.Create
	047 NotImplemented "Instruction LDUR not yet implemented."
	048 Move X9, [X31+24]
	049 Move X2, [X24]
	050 Add X8, X31, 32
	051 Move [X31+88], X21
	052 Move [X31+96], X20
	053 Or X20, X8, 15
	054 Move TEMP, 0
	055 Not TEMP
	056 Move W10, TEMP
	057 Add X1, X31, 32
	058 Move X0, X20
	059 Move [X31+72], X23
	060 Move [X31+80], X22
	061 Move [X31+40], V0
	062 Move [X31+56], X9
	063 Move [X31+64], X19
	064 Move [X31+32], W10
	065 Call AsyncTaskMethodBuilder.Start, X0, X1
	066 Move X0, X20
	067 Move X1, X31
	068 Call AsyncTaskMethodBuilder.get_Task, X0
	069 Move X20, [X31+160]
	070 Move X19, [X31+168]
	071 Move X22, [X31+144]
	072 Move X21, [X31+152]
	073 Move X24, [X31+128]
	074 Move X23, [X31+136]
	075 Move X30, [X31+112]
	076 Move X25, [X31+120]
	077 Add X31, X31, 176
	078 Return X0

Method: System.Threading.Tasks.Task SatoriUpdateMessageAsync(System.String bearerToken, System.String id, Satori.ApiUpdateMessageRequest body, System.Nullable`1<System.Threading.CancellationToken> cancellationToken)

Disassembly:
	0x03598430 LDP X22, X21, [X31 + 0x10]
	0x03598434 MOV X2, X31
	0x03598438 LDR X30, [X31], #0x30
	0x0359843C B 0x32C477C
	0x03598440 SUB X31, X31, 0x70
	0x03598444 STR X30, [X31 + 0x10]
	0x03598448 STP X28, X27, [X31 + 0x20]
	0x0359844C STP X26, X25, [X31 + 0x30]
	0x03598450 STP X24, X23, [X31 + 0x40]
	0x03598454 STP X22, X21, [X31 + 0x50]
	0x03598458 STP X20, X19, [X31 + 0x60]
	0x0359845C ADRP X20, 0xE47000
	0x03598460 LDRB W8, [X20 + 0xFC7]
	0x03598464 MOV X19, X0
	0x03598468 TBNZ X8, 0x0, 0x3598564
	0x0359846C ADRP X0, 0xB9F000
	0x03598470 LDR X0, [X0 + 0xA0]
	0x03598474 BL 0x1C16CF4
	0x03598478 ADRP X0, 0xB9F000
	0x0359847C LDR X0, [X0 + 0x50]
	0x03598480 BL 0x1C16CF4
	0x03598484 ADRP X0, 0xB9E000
	0x03598488 LDR X0, [X0 + 0xF48]
	0x0359848C BL 0x1C16CF4
	0x03598490 ADRP X0, 0xB64000
	0x03598494 LDR X0, [X0 + 0x8D8]
	0x03598498 BL 0x1C16CF4
	0x0359849C ADRP X0, 0xB64000
	0x035984A0 LDR X0, [X0 + 0x9E8]
	0x035984A4 BL 0x1C16CF4
	0x035984A8 ADRP X0, 0xB5C000
	0x035984AC LDR X0, [X0 + 0x810]
	0x035984B0 BL 0x1C16CF4
	0x035984B4 ADRP X0, 0xB5C000
	0x035984B8 LDR X0, [X0 + 0x6C0]
	0x035984BC BL 0x1C16CF4
	0x035984C0 ADRP X0, 0xB5C000
	0x035984C4 LDR X0, [X0 + 0x6D0]
	0x035984C8 BL 0x1C16CF4
	0x035984CC ADRP X0, 0xB9F000
	0x035984D0 LDR X0, [X0 + 0x58]
	0x035984D4 BL 0x1C16CF4
	0x035984D8 ADRP X0, 0xB9F000
	0x035984DC LDR X0, [X0 + 0x60]
	0x035984E0 BL 0x1C16CF4
	0x035984E4 ADRP X0, 0xB5E000
	0x035984E8 LDR X0, [X0 + 0x1E0]
	0x035984EC BL 0x1C16CF4
	0x035984F0 ADRP X0, 0xB5E000
	0x035984F4 LDR X0, [X0 + 0x1F0]
	0x035984F8 BL 0x1C16CF4
	0x035984FC ADRP X0, 0xB5E000
	0x03598500 LDR X0, [X0 + 0x1F8]
	0x03598504 BL 0x1C16CF4
	0x03598508 ADRP X0, 0xB64000
	0x0359850C LDR X0, [X0 + 0x3A0]
	0x03598510 BL 0x1C16CF4
	0x03598514 ADRP X0, 0xB84000
	0x03598518 LDR X0, [X0 + 0x4D8]
	0x0359851C BL 0x1C16CF4
	0x03598520 ADRP X0, 0xB9F000
	0x03598524 LDR X0, [X0 + 0xA8]
	0x03598528 BL 0x1C16CF4
	0x0359852C ADRP X0, 0xB64000

ISIL:
	001 Subtract X31, X31, 208
	002 Move [X31+128], X30
	003 Move [X31+144], X26
	004 Move [X31+152], X25
	005 Move [X31+160], X24
	006 Move [X31+168], X23
	007 Move [X31+176], X22
	008 Move [X31+184], X21
	009 Move [X31+192], X20
	010 Move [X31+200], X19
	011 Move X26, 0xE48000
	012 Move X25, 0xB5F000
	013 Move W8, [X26+4032]
	014 Move X25, [X25+640]
	015 Move X20, X5
	016 Move X21, X4
	017 Move X22, X3
	018 Move X19, X2
	019 Move X23, X1
	020 Move X24, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {33}
	025 Move X0, 0xBA0000
	026 Move X0, [X0+24]
	027 Call 0x1C17CF4
	028 Move X0, 0xB5F000
	029 Move X0, [X0+640]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X26+4032], W8
	033 Move X0, [X25]
	034 NotImplemented "Instruction MOVI not yet implemented."
	035 Move [X31+112], X31
	036 Move [X31+80], V0
	037 Move [X31+88], V0
	038 Move [X31+48], V0
	039 Move [X31+56], V0
	040 Move [X31+2], V0
	041 Move X25, 0xBA0000
	042 Move W8, [X0+224]
	043 Move X25, [X25+24]
	044 Compare W8, 0
	045 JumpIfNotEqual {47}
	046 Call 0x1C17DFC
	047 Add X8, X31, 8
	048 Move X0, X31
	049 Call AsyncTaskMethodBuilder.Create
	050 NotImplemented "Instruction LDUR not yet implemented."
	051 Move X9, [X31+24]
	052 Move X2, [X25]
	053 Add X8, X31, 32
	054 Move [X31+104], X20
	055 Or X20, X8, 15
	056 Move TEMP, 0
	057 Not TEMP
	058 Move W10, TEMP
	059 Add X1, X31, 32
	060 Move X0, X20
	061 Move [X31+72], X22
	062 Move [X31+80], X24
	063 Move [X31+88], X23
	064 Move [X31+96], X21
	065 Move [X31+40], V0
	066 Move [X31+56], X9
	067 Move [X31+64], X19
	068 Move [X31+32], W10
	069 Call AsyncTaskMethodBuilder.Start, X0, X1
	070 Move X0, X20
	071 Move X1, X31
	072 Call AsyncTaskMethodBuilder.get_Task, X0
	073 Move X20, [X31+192]
	074 Move X19, [X31+200]
	075 Move X22, [X31+176]
	076 Move X21, [X31+184]
	077 Move X24, [X31+160]
	078 Move X23, [X31+168]
	079 Move X26, [X31+144]
	080 Move X25, [X31+152]
	081 Move X30, [X31+128]
	082 Add X31, X31, 208
	083 Return X0

Method: System.Threading.Tasks.Task`1<Satori.IApiProperties> SatoriListPropertiesAsync(System.String bearerToken, System.Nullable`1<System.Threading.CancellationToken> cancellationToken)

Disassembly:
	0x03598530 LDR X0, [X0 + 0x988]
	0x03598534 BL 0x1C16CF4
	0x03598538 ADRP X0, 0xB96000
	0x0359853C LDR X0, [X0 + 0x7D0]
	0x03598540 BL 0x1C16CF4
	0x03598544 ADRP X0, 0xB96000
	0x03598548 LDR X0, [X0 + 0x850]
	0x0359854C BL 0x1C16CF4
	0x03598550 ADRP X0, 0xB5B000
	0x03598554 LDR X0, [X0 + 0x988]
	0x03598558 BL 0x1C16CF4
	0x0359855C MOVZ W8, 0x1
	0x03598560 STRB W8, [X20 + 0xFC7]
	0x03598564 STR X31, [X31 + 0x18]
	0x03598568 ADRP X28, 0xB9E000
	0x0359856C LDR W8, [X19]
	0x03598570 LDR X28, [X28 + 0xF48]
	0x03598574 CBZ W8, 0x35987C8
	0x03598578 LDR X8, [X19 + 0x20]
	0x0359857C CBZ X8, 0x3598900
	0x03598580 LDR X25, [X19 + 0x28]
	0x03598584 CBZ X25, 0x3598948
	0x03598588 LDR X0, [X25 + 0x20]
	0x0359858C CBZ X0, 0x359894C
	0x03598590 ADRP X8, 0xB9F000
	0x03598594 ADRP X9, 0xB5B000
	0x03598598 LDR X8, [X8 + 0xA8]
	0x0359859C LDR X9, [X9 + 0x988]
	0x035985A0 LDR X21, [X8]
	0x035985A4 LDR X20, [X9]
	0x035985A8 MOV X1, X31
	0x035985AC BL 0x361B448
	0x035985B0 ADRP X8, 0xB64000
	0x035985B4 LDR X8, [X8 + 0x8D8]
	0x035985B8 MOV X22, X0
	0x035985BC LDR X0, [X8]
	0x035985C0 MOVZ W1, 0x1
	0x035985C4 BL 0x1C16D6C
	0x035985C8 MOV X1, X0
	0x035985CC CBZ X1, 0x3598950
	0x035985D0 LDR W8, [X1 + 0x18]
	0x035985D4 CBZ W8, 0x3598954
	0x035985D8 MOVZ W8, 0x2F
	0x035985DC STRH W8, [X1 + 0x20]
	0x035985E0 CBZ X22, 0x3598958
	0x035985E4 MOV X0, X22
	0x035985E8 MOV X2, X31
	0x035985EC BL 0x322BC58
	0x035985F0 MOV X1, X21
	0x035985F4 MOV X2, X31
	0x035985F8 BL 0x321B938
	0x035985FC ADRP X8, 0xB64000
	0x03598600 LDR X8, [X8 + 0x3A0]
	0x03598604 MOV X22, X0
	0x03598608 LDR X23, [X25 + 0x20]
	0x0359860C LDR X0, [X8]
	0x03598610 BL 0x1C16F10
	0x03598614 MOV X21, X0
	0x03598618 MOV X1, X23
	0x0359861C MOV X2, X31
	0x03598620 BL 0x36281F8
	0x03598624 CBZ X21, 0x359895C
	0x03598628 MOV X0, X21
	0x0359862C MOV X1, X22

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+80], X30
	003 Move [X31+88], X25
	004 Move [X31+96], X24
	005 Move [X31+104], X23
	006 Move [X31+112], X22
	007 Move [X31+120], X21
	008 Move [X31+128], X20
	009 Move [X31+136], X19
	010 Move X24, 0xE48000
	011 Move X23, 0xBA0000
	012 Move W8, [X24+4033]
	013 Move X23, [X23+32]
	014 Move X19, X3
	015 Move X20, X2
	016 Move X21, X1
	017 Move X22, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {36}
	022 Move X0, 0xBA0000
	023 Move X0, [X0+40]
	024 Call 0x1C17CF4
	025 Move X0, 0xBA0000
	026 Move X0, [X0+48]
	027 Call 0x1C17CF4
	028 Move X0, 0xBA0000
	029 Move X0, [X0+56]
	030 Call 0x1C17CF4
	031 Move X0, 0xBA0000
	032 Move X0, [X0+32]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X24+4033], W8
	036 Move X0, [X23]
	037 NotImplemented "Instruction MOVI not yet implemented."
	038 Move [X31+64], X31
	039 Move [X31+32], V0
	040 Move [X31+40], V0
	041 Move [X31], V0
	042 Move [X31+8], V0
	043 Move X23, 0xBA0000
	044 Move X25, 0xBA0000
	045 Move X24, 0xBA0000
	046 Move W8, [X0+224]
	047 Move X23, [X23+40]
	048 Move X25, [X25+48]
	049 Move X24, [X24+56]
	050 Compare W8, 0
	051 JumpIfNotEqual {53}
	052 Call 0x1C17DFC
	053 Move X0, [X23]
	054 Add X8, X31, 0
	055 Or X23, X8, 15
	056 Move X8, X23
	057 Call AsyncTaskMethodBuilder`1<Object>.Create
	058 Move X2, [X25]
	059 Move TEMP, 0
	060 Not TEMP
	061 Move W8, TEMP
	062 Add X1, X31, 0
	063 Move X0, X23
	064 Move [X31+32], X22
	065 Move [X31+40], X21
	066 Move [X31+48], X20
	067 Move [X31+56], X19
	068 Move [X31], W8
	069 Call AsyncTaskMethodBuilder`1<Object>.Start, X0, X1
	070 Move X1, [X24]
	071 Move X0, X23
	072 Call AsyncTaskMethodBuilder`1<Object>.get_Task, X0
	073 Move X20, [X31+128]
	074 Move X19, [X31+136]
	075 Move X22, [X31+112]
	076 Move X21, [X31+120]
	077 Move X24, [X31+96]
	078 Move X23, [X31+104]
	079 Move X30, [X31+80]
	080 Move X25, [X31+88]
	081 Add X31, X31, 144
	082 Return X0

Method: System.Threading.Tasks.Task SatoriUpdatePropertiesAsync(System.String bearerToken, Satori.ApiUpdatePropertiesRequest body, System.Nullable`1<System.Threading.CancellationToken> cancellationToken)

Disassembly:
	0x03598630 MOV X2, X31
	0x03598634 BL 0x36288CC
	0x03598638 MOV X0, X21
	0x0359863C MOV X1, X20
	0x03598640 MOV X2, X31
	0x03598644 BL 0x3628980
	0x03598648 MOV X0, X21
	0x0359864C MOV X1, X31
	0x03598650 BL 0x3628A38
	0x03598654 ADRP X8, 0xB84000
	0x03598658 ADRP X9, 0xB5C000
	0x0359865C LDR X8, [X8 + 0x4D8]
	0x03598660 LDR X9, [X9 + 0x6D0]
	0x03598664 MOV X20, X0
	0x03598668 LDR X21, [X8]
	0x0359866C LDR X0, [X9]
	0x03598670 BL 0x1C16F10
	0x03598674 ADRP X8, 0xB5C000
	0x03598678 LDR X8, [X8 + 0x6C0]
	0x0359867C MOV X22, X0
	0x03598680 LDR X1, [X8]
	0x03598684 BL 0x2AA4804
	0x03598688 LDR X0, [X19 + 0x30]
	0x0359868C MOV X1, X31
	0x03598690 BL 0x32277A8
	0x03598694 TBNZ X0, 0x0, 0x3598740
	0x03598698 MOV X0, X31
	0x0359869C BL 0x3241948
	0x035986A0 ADRP X8, 0xB64000
	0x035986A4 MOV X23, X0
	0x035986A8 LDP X0, X2, [X19 + 0x30]
	0x035986AC LDR X8, [X8 + 0x988]
	0x035986B0 LDR X1, [X8]
	0x035986B4 MOV X3, X31
	0x035986B8 BL 0x32274B8
	0x035986BC MOV X1, X0
	0x035986C0 CBZ X23, 0x359896C
	0x035986C4 LDR X8, [X23]
	0x035986C8 LDR X9, [X8 + 0x268]
	0x035986CC LDR X2, [X8 + 0x270]
	0x035986D0 MOV X0, X23
	0x035986D4 BLR X9
	0x035986D8 ADRP X8, 0xB64000
	0x035986DC LDR X8, [X8 + 0x9E8]
	0x035986E0 MOV X23, X0
	0x035986E4 LDR X0, [X8]
	0x035986E8 LDR W8, [X0 + 0xE0]
	0x035986EC CBNZ W8, 0x35986F4
	0x035986F0 BL 0x1C16DFC
	0x035986F4 MOV X0, X23
	0x035986F8 MOV X1, X31
	0x035986FC BL 0x33225A0
	0x03598700 MOV X1, X0
	0x03598704 ADRP X8, 0xB96000
	0x03598708 LDR X8, [X8 + 0x850]
	0x0359870C LDR X0, [X8]
	0x03598710 MOV X2, X31
	0x03598714 BL 0x321B938
	0x03598718 CBZ X22, 0x3598970

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+112], X30
	003 Move [X31+120], X25
	004 Move [X31+128], X24
	005 Move [X31+136], X23
	006 Move [X31+144], X22
	007 Move [X31+152], X21
	008 Move [X31+160], X20
	009 Move [X31+168], X19
	010 Move X25, 0xE48000
	011 Move X24, 0xB5F000
	012 Move W8, [X25+4034]
	013 Move X24, [X24+640]
	014 Move X20, X4
	015 Move X21, X3
	016 Move X19, X2
	017 Move X22, X1
	018 Move X23, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {31}
	023 Move X0, 0xBA0000
	024 Move X0, [X0+64]
	025 Call 0x1C17CF4
	026 Move X0, 0xB5F000
	027 Move X0, [X0+640]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X25+4034], W8
	031 Move X0, [X24]
	032 NotImplemented "Instruction MOVI not yet implemented."
	033 Move [X31+80], V0
	034 Move [X31+88], V0
	035 Move [X31+48], V0
	036 Move [X31+56], V0
	037 Move [X31+2], V0
	038 Move X24, 0xBA0000
	039 Move W8, [X0+224]
	040 Move X24, [X24+64]
	041 Compare W8, 0
	042 JumpIfNotEqual {44}
	043 Call 0x1C17DFC
	044 Add X8, X31, 8
	045 Move X0, X31
	046 Call AsyncTaskMethodBuilder.Create
	047 NotImplemented "Instruction LDUR not yet implemented."
	048 Move X9, [X31+24]
	049 Move X2, [X24]
	050 Add X8, X31, 32
	051 Move [X31+88], X21
	052 Move [X31+96], X20
	053 Or X20, X8, 15
	054 Move TEMP, 0
	055 Not TEMP
	056 Move W10, TEMP
	057 Add X1, X31, 32
	058 Move X0, X20
	059 Move [X31+72], X23
	060 Move [X31+80], X22
	061 Move [X31+40], V0
	062 Move [X31+56], X9
	063 Move [X31+64], X19
	064 Move [X31+32], W10
	065 Call AsyncTaskMethodBuilder.Start, X0, X1
	066 Move X0, X20
	067 Move X1, X31
	068 Call AsyncTaskMethodBuilder.get_Task, X0
	069 Move X20, [X31+160]
	070 Move X19, [X31+168]
	071 Move X22, [X31+144]
	072 Move X21, [X31+152]
	073 Move X24, [X31+128]
	074 Move X23, [X31+136]
	075 Move X30, [X31+112]
	076 Move X25, [X31+120]
	077 Add X31, X31, 176
	078 Return X0

