Type: Satori.ApiClient/<SatoriListPropertiesAsync>d__21

Method: System.Void MoveNext()

Disassembly:
	0x0359DC20 B 0x359DC70
	0x0359DC24 B 0x359DC70
	0x0359DC28 B 0x359DC70
	0x0359DC2C B 0x359DC70
	0x0359DC30 B 0x359DC70
	0x0359DC34 B 0x359DC70
	0x0359DC38 B 0x359DC70
	0x0359DC3C B 0x359DC70
	0x0359DC40 B 0x359DC70
	0x0359DC44 B 0x359DC70
	0x0359DC48 B 0x359DC70
	0x0359DC4C B 0x359DC70
	0x0359DC50 B 0x359DC70
	0x0359DC54 B 0x359DC70
	0x0359DC58 B 0x359DC70
	0x0359DC5C B 0x359DC70
	0x0359DC60 B 0x359DC70
	0x0359DC64 B 0x359DC70
	0x0359DC68 B 0x359DC70
	0x0359DC6C B 0x359DC70
	0x0359DC70 MOV X20, X0
	0x0359DC74 CMP W1, 0x1
	0x0359DC78 B.NE 0x359DD08
	0x0359DC7C MOV X0, X20
	0x0359DC80 BL 0x3EB1AD0
	0x0359DC84 MOV X20, X0
	0x0359DC88 ADRP X0, 0xB56000
	0x0359DC8C LDR X0, [X0 + 0x7D0]
	0x0359DC90 BL 0x1C16D08
	0x0359DC94 LDR X8, [X20]
	0x0359DC98 LDR X1, [X8]
	0x0359DC9C BL 0x1C17270
	0x0359DCA0 TBZ X0, 0x0, 0x359DCE0
	0x0359DCA4 LDR X20, [X20]
	0x0359DCA8 BL 0x3EB1AE0
	0x0359DCAC MOVN W8, 0x1
	0x0359DCB0 STR W8, [X19], #0x8
	0x0359DCB4 ADRP X0, 0xB59000
	0x0359DCB8 LDR X0, [X0 + 0x280]
	0x0359DCBC BL 0x1C16D08
	0x0359DCC0 LDR W8, [X0 + 0xE0]
	0x0359DCC4 CBNZ W8, 0x359DCCC
	0x0359DCC8 BL 0x1C16DFC
	0x0359DCCC MOV X0, X19
	0x0359DCD0 MOV X1, X20
	0x0359DCD4 MOV X2, X31
	0x0359DCD8 BL 0x32C4908
	0x0359DCDC B 0x359DB24
	0x0359DCE0 MOVZ W0, 0x8
	0x0359DCE4 BL 0x3EB1AF0
	0x0359DCE8 LDR X8, [X20]
	0x0359DCEC STR X8, [X0]
	0x0359DCF0 ADRP X1, 0x917000
	0x0359DCF4 ADD X1, X1, 0xE58
	0x0359DCF8 MOV X2, X31
	0x0359DCFC BL 0x3EB1B00
	0x0359DD00 MOV X20, X0
	0x0359DD04 BL 0x3EB1AE0
	0x0359DD08 MOV X0, X20
	0x0359DD0C BL 0x1D2C690
	0x0359DD10 BL 0x1990590
	0x0359DD14 STR X30, [X31 - 0x30]!
	0x0359DD18 STP X22, X21, [X31 + 0x10]
	0x0359DD1C STP X20, X19, [X31 + 0x20]
	0x0359DD20 ADRP X21, 0xE42000
	0x0359DD24 ADRP X22, 0xB59000
	0x0359DD28 LDRB W8, [X21 + 0xFE0]
	0x0359DD2C LDR X22, [X22 + 0x280]
	0x0359DD30 MOV X19, X1
	0x0359DD34 MOV X20, X0
	0x0359DD38 TBNZ X8, 0x0, 0x359DD50
	0x0359DD3C ADRP X0, 0xB59000
	0x0359DD40 LDR X0, [X0 + 0x280]
	0x0359DD44 BL 0x1C16CF4
	0x0359DD48 MOVZ W8, 0x1
	0x0359DD4C STRB W8, [X21 + 0xFE0]
	0x0359DD50 LDR X0, [X22]
	0x0359DD54 LDR W8, [X0 + 0xE0]
	0x0359DD58 CBNZ W8, 0x359DD60
	0x0359DD5C BL 0x1C16DFC
	0x0359DD60 ADD X0, X20, 0x8
	0x0359DD64 MOV X1, X19
	0x0359DD68 LDP X20, X19, [X31 + 0x20]
	0x0359DD6C LDP X22, X21, [X31 + 0x10]
	0x0359DD70 MOV X2, X31
	0x0359DD74 LDR X30, [X31], #0x30
	0x0359DD78 B 0x32C477C
	0x0359DD7C SUB X31, X31, 0x70
	0x0359DD80 STR X30, [X31 + 0x10]
	0x0359DD84 STP X28, X27, [X31 + 0x20]
	0x0359DD88 STP X26, X25, [X31 + 0x30]
	0x0359DD8C STP X24, X23, [X31 + 0x40]
	0x0359DD90 STP X22, X21, [X31 + 0x50]
	0x0359DD94 STP X20, X19, [X31 + 0x60]
	0x0359DD98 ADRP X20, 0xE42000
	0x0359DD9C LDRB W8, [X20 + 0xFE1]
	0x0359DDA0 MOV X19, X0
	0x0359DDA4 TBNZ X8, 0x0, 0x359DE70
	0x0359DDA8 ADRP X0, 0xB9A000
	0x0359DDAC LDR X0, [X0 + 0x230]
	0x0359DDB0 BL 0x1C16CF4
	0x0359DDB4 ADRP X0, 0xB59000
	0x0359DDB8 LDR X0, [X0 + 0x280]
	0x0359DDBC BL 0x1C16CF4
	0x0359DDC0 ADRP X0, 0xB5F000
	0x0359DDC4 LDR X0, [X0 + 0x8D8]
	0x0359DDC8 BL 0x1C16CF4
	0x0359DDCC ADRP X0, 0xB57000
	0x0359DDD0 LDR X0, [X0 + 0x810]
	0x0359DDD4 BL 0x1C16CF4
	0x0359DDD8 ADRP X0, 0xB57000
	0x0359DDDC LDR X0, [X0 + 0x6C0]
	0x0359DDE0 BL 0x1C16CF4
	0x0359DDE4 ADRP X0, 0xB57000
	0x0359DDE8 LDR X0, [X0 + 0x6D0]
	0x0359DDEC BL 0x1C16CF4
	0x0359DDF0 ADRP X0, 0xB9A000
	0x0359DDF4 LDR X0, [X0 + 0x58]
	0x0359DDF8 BL 0x1C16CF4
	0x0359DDFC ADRP X0, 0xB59000
	0x0359DE00 LDR X0, [X0 + 0x1E0]
	0x0359DE04 BL 0x1C16CF4
	0x0359DE08 ADRP X0, 0xB59000
	0x0359DE0C LDR X0, [X0 + 0x1F0]
	0x0359DE10 BL 0x1C16CF4
	0x0359DE14 ADRP X0, 0xB59000
	0x0359DE18 LDR X0, [X0 + 0x1F8]
	0x0359DE1C BL 0x1C16CF4
	0x0359DE20 ADRP X0, 0xB5F000
	0x0359DE24 LDR X0, [X0 + 0x3A0]
	0x0359DE28 BL 0x1C16CF4
	0x0359DE2C ADRP X0, 0xB7F000
	0x0359DE30 LDR X0, [X0 + 0x4E0]
	0x0359DE34 BL 0x1C16CF4
	0x0359DE38 ADRP X0, 0xB91000
	0x0359DE3C LDR X0, [X0 + 0x7D0]
	0x0359DE40 BL 0x1C16CF4
	0x0359DE44 ADRP X0, 0xB91000
	0x0359DE48 LDR X0, [X0 + 0x7D8]
	0x0359DE4C BL 0x1C16CF4
	0x0359DE50 ADRP X0, 0xB56000
	0x0359DE54 LDR X0, [X0 + 0x988]
	0x0359DE58 BL 0x1C16CF4
	0x0359DE5C ADRP X0, 0xB9A000
	0x0359DE60 LDR X0, [X0 + 0x1F8]
	0x0359DE64 BL 0x1C16CF4
	0x0359DE68 MOVZ W8, 0x1
	0x0359DE6C STRB W8, [X20 + 0xFE1]
	0x0359DE70 STR X31, [X31 + 0x18]
	0x0359DE74 ADRP X28, 0xB59000
	0x0359DE78 LDR W8, [X19]
	0x0359DE7C LDR X28, [X28 + 0x280]
	0x0359DE80 CBZ W8, 0x359E05C
	0x0359DE84 LDR X8, [X19 + 0x20]
	0x0359DE88 CBZ X8, 0x359E174
	0x0359DE8C LDR X25, [X19 + 0x28]
	0x0359DE90 CBZ X25, 0x359E1BC
	0x0359DE94 LDR X0, [X25 + 0x20]
	0x0359DE98 CBZ X0, 0x359E1C0
	0x0359DE9C ADRP X8, 0xB9A000
	0x0359DEA0 ADRP X9, 0xB56000
	0x0359DEA4 LDR X8, [X8 + 0x1F8]
	0x0359DEA8 LDR X9, [X9 + 0x988]
	0x0359DEAC LDR X21, [X8]
	0x0359DEB0 LDR X20, [X9]
	0x0359DEB4 MOV X1, X31
	0x0359DEB8 BL 0x361B448
	0x0359DEBC ADRP X8, 0xB5F000
	0x0359DEC0 LDR X8, [X8 + 0x8D8]
	0x0359DEC4 MOV X22, X0
	0x0359DEC8 LDR X0, [X8]
	0x0359DECC MOVZ W1, 0x1
	0x0359DED0 BL 0x1C16D6C
	0x0359DED4 MOV X1, X0
	0x0359DED8 CBZ X1, 0x359E1C4
	0x0359DEDC LDR W8, [X1 + 0x18]
	0x0359DEE0 CBZ W8, 0x359E1C8
	0x0359DEE4 MOVZ W8, 0x2F
	0x0359DEE8 STRH W8, [X1 + 0x20]
	0x0359DEEC CBZ X22, 0x359E1CC
	0x0359DEF0 MOV X0, X22
	0x0359DEF4 MOV X2, X31
	0x0359DEF8 BL 0x322BC58
	0x0359DEFC MOV X1, X21
	0x0359DF00 MOV X2, X31
	0x0359DF04 BL 0x321B938
	0x0359DF08 ADRP X8, 0xB5F000
	0x0359DF0C LDR X8, [X8 + 0x3A0]
	0x0359DF10 MOV X22, X0
	0x0359DF14 LDR X23, [X25 + 0x20]
	0x0359DF18 LDR X0, [X8]
	0x0359DF1C BL 0x1C16F10
	0x0359DF20 MOV X21, X0
	0x0359DF24 MOV X1, X23
	0x0359DF28 MOV X2, X31
	0x0359DF2C BL 0x36281F8
	0x0359DF30 CBZ X21, 0x359E1D0
	0x0359DF34 MOV X0, X21
	0x0359DF38 MOV X1, X22
	0x0359DF3C MOV X2, X31
	0x0359DF40 BL 0x36288CC
	0x0359DF44 MOV X0, X21
	0x0359DF48 MOV X1, X20
	0x0359DF4C MOV X2, X31
	0x0359DF50 BL 0x3628980
	0x0359DF54 MOV X0, X21
	0x0359DF58 MOV X1, X31
	0x0359DF5C BL 0x3628A38
	0x0359DF60 ADRP X8, 0xB7F000
	0x0359DF64 ADRP X9, 0xB57000
	0x0359DF68 LDR X8, [X8 + 0x4E0]
	0x0359DF6C LDR X9, [X9 + 0x6D0]
	0x0359DF70 MOV X20, X0
	0x0359DF74 LDR X21, [X8]
	0x0359DF78 LDR X0, [X9]
	0x0359DF7C BL 0x1C16F10
	0x0359DF80 ADRP X8, 0xB57000
	0x0359DF84 LDR X8, [X8 + 0x6C0]
	0x0359DF88 MOV X22, X0
	0x0359DF8C LDR X1, [X8]
	0x0359DF90 BL 0x2AA4804
	0x0359DF94 ADRP X8, 0xB91000
	0x0359DF98 LDR X8, [X8 + 0x7D8]
	0x0359DF9C LDR X1, [X19 + 0x30]
	0x0359DFA0 LDR X0, [X8]
	0x0359DFA4 MOV X2, X31
	0x0359DFA8 BL 0x321B938
	0x0359DFAC CBZ X22, 0x359E1D4
	0x0359DFB0 ADRP X8, 0xB91000
	0x0359DFB4 LDR X8, [X8 + 0x7D0]
	0x0359DFB8 ADRP X9, 0xB57000
	0x0359DFBC LDR X9, [X9 + 0x810]
	0x0359DFC0 MOV X2, X0
	0x0359DFC4 LDR X1, [X8]
	0x0359DFC8 LDR X3, [X9]
	0x0359DFCC MOV X0, X22
	0x0359DFD0 BL 0x2AA5098
	0x0359DFD4 LDR X0, [X19 + 0x20]
	0x0359DFD8 BL 0x3597D7C
	0x0359DFDC MOV X23, X0
	0x0359DFE0 MOV X0, X31
	0x0359DFE4 BL 0x3241948
	0x0359DFE8 CBZ X0, 0x359E1D8
	0x0359DFEC LDR X8, [X0]
	0x0359DFF0 LDR X9, [X8 + 0x268]
	0x0359DFF4 LDR X2, [X8 + 0x270]
	0x0359DFF8 MOV X1, X23
	0x0359DFFC BLR X9
	0x0359E000 LDR X24, [X25 + 0x10]
	0x0359E004 CBZ X24, 0x359E1DC
	0x0359E008 ADRP X10, 0xB99000
	0x0359E00C LDR X10, [X10 + 0x58]
	0x0359E010 LDR X8, [X24]
	0x0359E014 LDR W26, [X25 + 0x18]
	0x0359E018 LDP X27, X25, [X19 + 0x38]
	0x0359E01C LDR X1, [X10]
	0x0359E020 LDRH W9, [X8 + 0x12E]
	0x0359E024 MOV X23, X0
	0x0359E028 CBZ X9, 0x359E04C
	0x0359E02C LDR X10, [X8 + 0xB0]
	0x0359E030 ADD X10, X10, 0x8
	0x0359E034 LDUR X11, [X10 - 0x8]
	0x0359E038 CMP X11, X1
	0x0359E03C B.EQ 0x359E074
	0x0359E040 SUBS X9, X9, 0x1
	0x0359E044 ADD X10, X10, 0x10
	0x0359E048 B.NE 0x359E034
	0x0359E04C MOVZ W2, 0x3
	0x0359E050 MOV X0, X24
	0x0359E054 BL 0x1C5C788
	0x0359E058 B 0x359E084
	0x0359E05C LDR X8, [X19 + 0x48]
	0x0359E060 MOVN W9, 0x0
	0x0359E064 STR X8, [X31 + 0x18]
	0x0359E068 STR X31, [X19 + 0x48]
	0x0359E06C STR W9, [X19]
	0x0359E070 B 0x359E0E0
	0x0359E074 LDR W9, [X10]
	0x0359E078 ADD W9, W9, 0x3
	0x0359E07C ADD X8, X8, W9, 0x4, SXTW
	0x0359E080 ADD X0, X8, 0x138
	0x0359E084 LDP X8, X9, [X0]
	0x0359E088 MOV X0, X24
	0x0359E08C MOV X1, X21
	0x0359E090 MOV X2, X20
	0x0359E094 MOV X3, X22
	0x0359E098 MOV X4, X23
	0x0359E09C MOV W5, W26
	0x0359E0A0 MOV X6, X27
	0x0359E0A4 MOV X7, X25
	0x0359E0A8 STR X9, [X31]
	0x0359E0AC BLR X8
	0x0359E0B0 CBZ X0, 0x359E1E0
	0x0359E0B4 ADRP X8, 0xB58000
	0x0359E0B8 LDR X8, [X8 + 0x1F8]
	0x0359E0BC LDR X1, [X8]
	0x0359E0C0 BL 0x269F5D0
	0x0359E0C4 ADRP X8, 0xB58000
	0x0359E0C8 LDR X8, [X8 + 0x1F0]
	0x0359E0CC STR X0, [X31 + 0x18]
	0x0359E0D0 LDR X1, [X8]
	0x0359E0D4 ADD X0, X31, 0x18
	0x0359E0D8 BL 0x2677430
	0x0359E0DC TBZ X0, 0x0, 0x359E11C
	0x0359E0E0 ADRP X8, 0xB58000
	0x0359E0E4 LDR X8, [X8 + 0x1E0]
	0x0359E0E8 ADD X0, X31, 0x18
	0x0359E0EC LDR X1, [X8]
	0x0359E0F0 BL 0x2677474
	0x0359E0F4 MOVN W8, 0x1
	0x0359E0F8 STR W8, [X19], #0x8
	0x0359E0FC LDR X0, [X28]
	0x0359E100 LDR W8, [X0 + 0xE0]
	0x0359E104 CBNZ W8, 0x359E10C
	0x0359E108 BL 0x1C16DFC
	0x0359E10C MOV X0, X19
	0x0359E110 MOV X1, X31
	0x0359E114 BL 0x32C4864
	0x0359E118 B 0x359E154
	0x0359E11C STR W31, [X19]
	0x0359E120 LDR X8, [X31 + 0x18]
	0x0359E124 STR X8, [X19 + 0x48]
	0x0359E128 LDR X0, [X28]
	0x0359E12C LDR W8, [X0 + 0xE0]
	0x0359E130 CBNZ W8, 0x359E138

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+16], X30
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X20, 0xE43000
	013 Move W8, [X20+4059]
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {75}
	019 Move X0, 0xB9B000
	020 Move X0, [X0+480]
	021 Call 0x1C17CF4
	022 Move X0, 0xB9B000
	023 Move X0, [X0+488]
	024 Call 0x1C17CF4
	025 Move X0, 0xB9B000
	026 Move X0, [X0+32]
	027 Call 0x1C17CF4
	028 Move X0, 0xB60000
	029 Move X0, [X0+2264]
	030 Call 0x1C17CF4
	031 Move X0, 0xB58000
	032 Move X0, [X0+2064]
	033 Call 0x1C17CF4
	034 Move X0, 0xB58000
	035 Move X0, [X0+1728]
	036 Call 0x1C17CF4
	037 Move X0, 0xB58000
	038 Move X0, [X0+1744]
	039 Call 0x1C17CF4
	040 Move X0, 0xB9B000
	041 Move X0, [X0+88]
	042 Call 0x1C17CF4
	043 Move X0, 0xB9B000
	044 Move X0, [X0+496]
	045 Call 0x1C17CF4
	046 Move X0, 0xB5A000
	047 Move X0, [X0+480]
	048 Call 0x1C17CF4
	049 Move X0, 0xB5A000
	050 Move X0, [X0+496]
	051 Call 0x1C17CF4
	052 Move X0, 0xB5A000
	053 Move X0, [X0+504]
	054 Call 0x1C17CF4
	055 Move X0, 0xB60000
	056 Move X0, [X0+928]
	057 Call 0x1C17CF4
	058 Move X0, 0xB80000
	059 Move X0, [X0+1232]
	060 Call 0x1C17CF4
	061 Move X0, 0xB92000
	062 Move X0, [X0+2000]
	063 Call 0x1C17CF4
	064 Move X0, 0xB92000
	065 Move X0, [X0+2008]
	066 Call 0x1C17CF4
	067 Move X0, 0xB57000
	068 Move X0, [X0+2440]
	069 Call 0x1C17CF4
	070 Move X0, 0xB9B000
	071 Move X0, [X0+504]
	072 Call 0x1C17CF4
	073 Move W8, 1
	074 Move [X20+4059], W8
	075 Move [X31+8], X31
	076 Move X27, 0xB9B000
	077 Move W8, [X19]
	078 Move X27, [X27+32]
	079 Compare W8, 0
	080 JumpIfEqual {192}
	081 Move X24, [X19+32]
	082 Compare X24, 0
	083 JumpIfEqual {283}
	084 Move X0, [X24+32]
	085 Compare X0, 0
	086 JumpIfEqual {284}
	087 Move X8, 0xB9B000
	088 Move X9, 0xB57000
	089 Move X8, [X8+504]
	090 Move X9, [X9+2440]
	091 Move X21, [X8]
	092 Move X20, [X9]
	093 Move X1, X31
	094 Call Uri.get_AbsolutePath, X0
	095 Move X8, 0xB60000
	096 Move X8, [X8+2264]
	097 Move X22, X0
	098 Move X0, [X8]
	099 Move W1, 1
	100 Call 0x1C17D6C
	101 Move X1, X0
	102 Compare X1, 0
	103 JumpIfEqual {285}
	104 Move W8, [X1+24]
	105 Compare W8, 0
	106 JumpIfEqual {286}
	107 Move W8, 47
	108 NotImplemented "Instruction STRH not yet implemented."
	109 Compare X22, 0
	110 JumpIfEqual {287}
	111 Move X0, X22
	112 Move X2, X31
	113 Call String.TrimEnd, X0, X1
	114 Move X1, X21
	115 Move X2, X31
	116 Call String.Concat, X0, X1
	117 Move X8, 0xB60000
	118 Move X8, [X8+928]
	119 Move X22, X0
	120 Move X23, [X24+32]
	121 Move X0, [X8]
	122 Call 0x1C17F10
	123 Move X21, X0
	124 Move X1, X23
	125 Move X2, X31
	126 Call UriBuilder..ctor, X0, X1
	127 Compare X21, 0
	128 JumpIfEqual {288}
	129 Move X0, X21
	130 Move X1, X22
	131 Move X2, X31
	132 Call UriBuilder.set_Path, X0, X1
	133 Move X0, X21
	134 Move X1, X20
	135 Move X2, X31
	136 Call UriBuilder.set_Query, X0, X1
	137 Move X0, X21
	138 Move X1, X31
	139 Call UriBuilder.get_Uri, X0
	140 Move X8, 0xB80000
	141 Move X9, 0xB58000
	142 Move X8, [X8+1232]
	143 Move X9, [X9+1744]
	144 Move X20, X0
	145 Move X21, [X8]
	146 Move X0, [X9]
	147 Call 0x1C17F10
	148 Move X8, 0xB58000
	149 Move X8, [X8+1728]
	150 Move X22, X0
	151 Move X1, [X8]
	152 Call Dictionary`2<Object, Object>..ctor, X0
	153 Move X8, 0xB92000
	154 Move X8, [X8+2008]
	155 Move X1, [X19+40]
	156 Move X0, [X8]
	157 Move X2, X31
	158 Call String.Concat, X0, X1
	159 Compare X22, 0
	160 JumpIfEqual {289}
	161 Move X8, 0xB92000
	162 Move X8, [X8+2000]
	163 Move X9, 0xB58000
	164 Move X9, [X9+2064]
	165 Move X2, X0
	166 Move X1, [X8]
	167 Move X3, [X9]
	168 Move X0, X22
	169 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	170 Move X23, [X24+16]
	171 Compare X23, 0
	172 JumpIfEqual {290}
	173 Move X10, 0xB9B000
	174 Move X10, [X10+88]
	175 Move X8, [X23]
	176 Move W25, [X24+24]
	177 Move X26, [X19+48]
	178 Move X24, [X19+56]
	179 Move X1, [X10]
	180 NotImplemented "Instruction LDRH not yet implemented."
	181 Compare X9, 0
	182 JumpIfEqual {189}
	183 Move X10, [X8+176]
	184 Add X10, X10, 8
	185 NotImplemented "Instruction LDUR not yet implemented."
	186 NotImplemented "Instruction CMP not yet implemented."
	187 Subtract X9, X9, 1
	188 Add X10, X10, 16
	189 Move W2, 3
	190 Move X0, X23
	191 Call 0x1C5D788
	192 Move X8, [X19+64]
	193 Move TEMP, 0
	194 Not TEMP
	195 Move W9, TEMP
	196 Move [X31+8], X8
	197 Move [X19+64], X31
	198 Move [X19], W9
	199 Move W9, [X10]
	200 Add W9, W9, 3
	201 Add X8, X8, W9
	202 Add X0, X8, 312
	203 Move X8, [X0]
	204 Move X9, [X0+8]
	205 Move X0, X23
	206 Move X1, X21
	207 Move X2, X20
	208 Move X3, X22
	209 Move X4, X31
	210 Move W5, W25
	211 Move X6, X26
	212 Move X7, X24
	213 Move [X31], X9
	214 NotImplemented "Instruction BLR not yet implemented."
	215 Compare X0, 0
	216 JumpIfEqual {291}
	217 Move X8, 0xB5A000
	218 Move X8, [X8+504]
	219 Move X1, [X8]
	220 Call Task`1<Object>.GetAwaiter, X0
	221 Move X8, 0xB5A000
	222 Move X8, [X8+496]
	223 Move [X31+8], X0
	224 Move X1, [X8]
	225 Add X0, X31, 8
	226 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	227 Move TEMP, X0
	228 And TEMP, TEMP, 1
	229 Compare TEMP, 1
	230 JumpIfNotEqual {256}
	231 Move X8, 0xB5A000
	232 Move X8, [X8+480]
	233 Add X0, X31, 8
	234 Move X1, [X8]
	235 Call TaskAwaiter`1<Object>.GetResult, X0
	236 Move X8, 0xB9B000
	237 Move X8, [X8+496]
	238 Move X1, [X8]
	239 Call 0x22119A8, X0
	240 Move TEMP, 1
	241 Not TEMP
	242 Move W8, TEMP
	243 Move [X19+8], W8
	244 Move X20, X0
	245 Move X0, [X27]
	246 Move X21, 0xB9B000
	247 Move W8, [X0+224]
	248 Move X21, [X21+488]
	249 Compare W8, 0
	250 JumpIfNotEqual {252}
	251 Call 0x1C17DFC
	252 Move X2, [X21]
	253 Move X0, X19
	254 Move X1, X20
	255 Call AsyncTaskMethodBuilder`1<Object>.SetResult, X0, X1
	256 Move [X19], W31
	257 Move X8, [X31+8]
	258 Move [X19+64], X8
	259 Move X0, [X27]
	260 Move W8, [X0+224]
	261 Compare W8, 0
	262 JumpIfNotEqual {264}
	263 Call 0x1C17DFC
	264 Move X8, 0xB9B000
	265 Move X8, [X8+480]
	266 Add X0, X19, 8
	267 Move X3, [X8]
	268 Add X1, X31, 8
	269 Move X2, X19
	270 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	271 Move X20, [X31+80]
	272 Move X19, [X31+88]
	273 Move X22, [X31+64]
	274 Move X21, [X31+72]
	275 Move X24, [X31+48]
	276 Move X23, [X31+56]
	277 Move X26, [X31+32]
	278 Move X25, [X31+40]
	279 Move X30, [X31+16]
	280 Move X27, [X31+24]
	281 Add X31, X31, 96
	282 Return 
	283 Call 0x1C17F20
	284 Call 0x1C17F20
	285 Call 0x1C17F20
	286 Call 0x1C17F28
	287 Call 0x1C17F20
	288 Call 0x1C17F20
	289 Call 0x1C17F20
	290 Call 0x1C17F20
	291 Call 0x1C17F20
	292 Move X20, X0
	293 NotImplemented "Instruction CMP not yet implemented."
	294 Move X0, X20
	295 Call 0x3EB2AD0
	296 Move X20, X0
	297 Move X0, 0xB56000
	298 Move X0, [X0+2000]
	299 Call 0x1C17D08
	300 Move X8, [X20]
	301 Move X1, [X8]
	302 Call 0x1C18270
	303 Move TEMP, X0
	304 And TEMP, TEMP, 1
	305 Compare TEMP, 1
	306 JumpIfNotEqual {327}
	307 Move X20, [X20]
	308 Call 0x3EB2AE0
	309 Move TEMP, 1
	310 Not TEMP
	311 Move W8, TEMP
	312 Move [X19+8], W8
	313 Move X0, 0xB9A000
	314 Move X0, [X0+32]
	315 Call 0x1C17D08
	316 Move W8, [X0+224]
	317 Compare W8, 0
	318 JumpIfNotEqual {320}
	319 Call 0x1C17DFC
	320 Move X0, 0xB9A000
	321 Move X0, [X0+512]
	322 Call 0x1C17D08
	323 Move X2, X0
	324 Move X0, X19
	325 Move X1, X20
	326 Call AsyncTaskMethodBuilder`1<Object>.SetException, X0, X1
	327 Move W0, 8
	328 Call 0x3EB2AF0
	329 Move X8, [X20]
	330 Move [X0], X8
	331 Move X1, 0x917000
	332 Add X1, X1, 3672
	333 Move X2, X31
	334 Call 0x3EB2B00
	335 Move X20, X0
	336 Call 0x3EB2AE0
	337 Move X0, X20
	338 Call 0x1D2D690
	339 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x0359E134 BL 0x1C16DFC
	0x0359E138 ADRP X8, 0xB99000
	0x0359E13C LDR X8, [X8 + 0x230]
	0x0359E140 ADD X0, X19, 0x8
	0x0359E144 LDR X3, [X8]
	0x0359E148 ADD X1, X31, 0x18
	0x0359E14C MOV X2, X19
	0x0359E150 BL 0x2187E90
	0x0359E154 LDP X20, X19, [X31 + 0x60]
	0x0359E158 LDP X22, X21, [X31 + 0x50]
	0x0359E15C LDP X24, X23, [X31 + 0x40]
	0x0359E160 LDP X26, X25, [X31 + 0x30]
	0x0359E164 LDP X28, X27, [X31 + 0x20]
	0x0359E168 LDR X30, [X31 + 0x10]
	0x0359E16C ADD X31, X31, 0x70
	0x0359E170 RET
	0x0359E174 ADRP X0, 0xB5D000
	0x0359E178 LDR X0, [X0 + 0x578]
	0x0359E17C BL 0x1C16D08
	0x0359E180 BL 0x1C16F10
	0x0359E184 MOV X20, X0
	0x0359E188 ADRP X0, 0xB90000
	0x0359E18C LDR X0, [X0 + 0xBC8]
	0x0359E190 BL 0x1C16D08
	0x0359E194 MOV X1, X0
	0x0359E198 MOV X0, X20
	0x0359E19C MOV X2, X31
	0x0359E1A0 BL 0x3314A68
	0x0359E1A4 ADRP X0, 0xB99000
	0x0359E1A8 LDR X0, [X0 + 0x238]
	0x0359E1AC BL 0x1C16D08

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xE42000
	007 Move X21, 0xB9A000
	008 Move W8, [X22+4060]
	009 Move X21, [X21+32]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xB9A000
	017 Move X0, [X0+520]
	018 Call 0x1C17CF4
	019 Move X0, 0xB9A000
	020 Move X0, [X0+32]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+4060], W8
	024 Move X0, [X21]
	025 Move X21, 0xB9A000
	026 Move W8, [X0+224]
	027 Move X21, [X21+520]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X2, [X21]
	032 Add X0, X20, 8
	033 Move X1, X19
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Call AsyncTaskMethodBuilder`1<Object>.SetStateMachine, X0, X1
	040 Return 

