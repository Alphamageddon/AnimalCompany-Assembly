Type: Satori.GZipContent/<SerializeToStreamAsync>d__2

Method: System.Void MoveNext()

Disassembly:
	0x035A7F08 LDR X1, [X8 + 0x40]
	0x035A7F0C MOV X0, X23
	0x035A7F10 BL 0x1C16E00
	0x035A7F14 CBZ X0, 0x35A8120
	0x035A7F18 LDR W8, [X22 + 0x18]
	0x035A7F1C CBZ W8, 0x35A80F0
	0x035A7F20 STR X23, [X22 + 0x20]
	0x035A7F24 CBZ X20, 0x35A7F40
	0x035A7F28 LDR X8, [X22]
	0x035A7F2C LDR X1, [X8 + 0x40]
	0x035A7F30 MOV X0, X20
	0x035A7F34 BL 0x1C16E00
	0x035A7F38 CBZ X0, 0x35A812C
	0x035A7F3C LDR W8, [X22 + 0x18]
	0x035A7F40 CMP W8, 0x1
	0x035A7F44 B.LS 0x35A80F4
	0x035A7F48 STR X20, [X22 + 0x28]
	0x035A7F4C ADRP X9, 0xB90000
	0x035A7F50 LDR X8, [X21]
	0x035A7F54 LDR X9, [X9 + 0x5F8]
	0x035A7F58 ADRP X10, 0xB4F000
	0x035A7F5C LDR X1, [X9]
	0x035A7F60 LDR X10, [X10 + 0x218]
	0x035A7F64 LDRH W9, [X8 + 0x12E]
	0x035A7F68 LDR X23, [X10]
	0x035A7F6C CBZ X9, 0x35A7F90
	0x035A7F70 LDR X10, [X8 + 0xB0]
	0x035A7F74 ADD X10, X10, 0x8
	0x035A7F78 LDUR X11, [X10 - 0x8]
	0x035A7F7C CMP X11, X1
	0x035A7F80 B.EQ 0x35A801C
	0x035A7F84 SUBS X9, X9, 0x1
	0x035A7F88 ADD X10, X10, 0x10
	0x035A7F8C B.NE 0x35A7F78
	0x035A7F90 MOVZ W2, 0x2
	0x035A7F94 MOV X0, X21
	0x035A7F98 BL 0x1C5C788
	0x035A7F9C B 0x35A802C
	0x035A7FA0 MOVZ W8, 0x1
	0x035A7FA4 STR W8, [X19]
	0x035A7FA8 LDR X8, [X31 + 0x18]
	0x035A7FAC STR X8, [X19 + 0x70]
	0x035A7FB0 LDR X0, [X26]
	0x035A7FB4 LDR W8, [X0 + 0xE0]
	0x035A7FB8 CBNZ W8, 0x35A7FC0
	0x035A7FBC BL 0x1C16DFC
	0x035A7FC0 ADRP X8, 0xB90000
	0x035A7FC4 LDR X8, [X8 + 0x5E8]
	0x035A7FC8 ADD X0, X19, 0x8
	0x035A7FCC LDR X3, [X8]
	0x035A7FD0 ADD X1, X31, 0x18
	0x035A7FD4 MOV X2, X19
	0x035A7FD8 BL 0x1FC0980
	0x035A7FDC B 0x35A808C
	0x035A7FE0 STR W31, [X19]
	0x035A7FE4 LDR X8, [X31 + 0x28]
	0x035A7FE8 STR X8, [X19 + 0x68]
	0x035A7FEC LDR X0, [X26]
	0x035A7FF0 LDR W8, [X0 + 0xE0]
	0x035A7FF4 CBNZ W8, 0x35A7FFC
	0x035A7FF8 BL 0x1C16DFC
	0x035A7FFC ADRP X8, 0xB90000
	0x035A8000 LDR X8, [X8 + 0x5F0]
	0x035A8004 ADD X0, X19, 0x8
	0x035A8008 LDR X3, [X8]
	0x035A800C ADD X1, X31, 0x28
	0x035A8010 MOV X2, X19
	0x035A8014 BL 0x1FC0980
	0x035A8018 B 0x35A808C
	0x035A801C LDR W9, [X10]
	0x035A8020 ADD W9, W9, 0x2
	0x035A8024 ADD X8, X8, W9, 0x4, SXTW
	0x035A8028 ADD X0, X8, 0x138
	0x035A802C LDP X8, X3, [X0]
	0x035A8030 MOV X0, X21
	0x035A8034 MOV X1, X23
	0x035A8038 MOV X2, X22
	0x035A803C BLR X8
	0x035A8040 LDR X0, [X19 + 0x60]
	0x035A8044 CBZ X0, 0x35A80B8
	0x035A8048 MOV X1, X31
	0x035A804C BL 0x35FC564
	0x035A8050 TBZ X0, 0x0, 0x35A80BC
	0x035A8054 MOVN W8, 0x1
	0x035A8058 STR W8, [X19]
	0x035A805C STR X31, [X19 + 0x60]
	0x035A8060 LDR X0, [X26]
	0x035A8064 ADRP X21, 0xB4E000
	0x035A8068 ADD X19, X19, 0x8
	0x035A806C LDR W8, [X0 + 0xE0]
	0x035A8070 LDR X21, [X21 + 0x160]
	0x035A8074 CBNZ W8, 0x35A807C
	0x035A8078 BL 0x1C16DFC
	0x035A807C LDR X2, [X21]
	0x035A8080 MOV X0, X19
	0x035A8084 MOV X1, X20
	0x035A8088 BL 0x26322B0
	0x035A808C LDP X20, X19, [X31 + 0x70]
	0x035A8090 LDP X22, X21, [X31 + 0x60]
	0x035A8094 LDP X24, X23, [X31 + 0x50]
	0x035A8098 LDP X26, X25, [X31 + 0x40]
	0x035A809C LDP X28, X27, [X31 + 0x30]
	0x035A80A0 LDR X30, [X31 + 0x20]
	0x035A80A4 ADD X31, X31, 0x80
	0x035A80A8 RET
	0x035A80AC BL 0x1C16F20
	0x035A80B0 BL 0x1C16F20
	0x035A80B4 BL 0x1C16F20
	0x035A80B8 BL 0x1C16F20
	0x035A80BC ADRP X8, 0xB8F000
	0x035A80C0 LDR X8, [X8 + 0x580]
	0x035A80C4 LDR X1, [X8]
	0x035A80C8 MOV X0, X20
	0x035A80CC BL 0x22109A8
	0x035A80D0 MOV X20, X0
	0x035A80D4 CBNZ X0, 0x35A8138
	0x035A80D8 BL 0x1C16F20
	0x035A80DC BL 0x1C16F20
	0x035A80E0 BL 0x1C16F20
	0x035A80E4 BL 0x1C16F20
	0x035A80E8 BL 0x1C16F20
	0x035A80EC BL 0x1C16F20
	0x035A80F0 BL 0x1C16F28
	0x035A80F4 BL 0x1C16F28
	0x035A80F8 BL 0x1C16F20
	0x035A80FC BL 0x1C16F20
	0x035A8100 BL 0x1C16F20
	0x035A8104 BL 0x1C16F20
	0x035A8108 BL 0x1C16F20
	0x035A810C MOV X0, X23
	0x035A8110 BL 0x1C16F18
	0x035A8114 BL 0x1C16F20
	0x035A8118 BL 0x1C16F20
	0x035A811C BL 0x1C16F20
	0x035A8120 BL 0x1C16F44
	0x035A8124 MOV X1, X31
	0x035A8128 BL 0x1C16DEC
	0x035A812C BL 0x1C16F44
	0x035A8130 MOV X1, X31
	0x035A8134 BL 0x1C16DEC
	0x035A8138 ADRP X8, 0xB4E000
	0x035A813C LDR X8, [X8 + 0x220]
	0x035A8140 ADRP X9, 0xB4D000
	0x035A8144 LDR X9, [X9 + 0x220]
	0x035A8148 LDR X1, [X8]
	0x035A814C LDR X2, [X9]
	0x035A8150 MOV X0, X20
	0x035A8154 BL 0x2AA528C
	0x035A8158 TBZ X0, 0x0, 0x35A81C4
	0x035A815C ADRP X0, 0xB4E000
	0x035A8160 LDR X0, [X0 + 0x220]
	0x035A8164 BL 0x1C16D08
	0x035A8168 MOV X21, X0
	0x035A816C ADRP X0, 0xB4D000
	0x035A8170 LDR X0, [X0 + 0x268]
	0x035A8174 BL 0x1C16D08
	0x035A8178 MOV X2, X0
	0x035A817C MOV X0, X20
	0x035A8180 MOV X1, X21
	0x035A8184 BL 0x2AA5018
	0x035A8188 CBNZ X0, 0x35A8250
	0x035A818C BL 0x1C16F20
	0x035A8190 BL 0x1C16F20
	0x035A8194 BL 0x1C16F28
	0x035A8198 BL 0x1C16F28
	0x035A819C BL 0x1C16F28
	0x035A81A0 BL 0x1C16F44
	0x035A81A4 MOV X1, X31
	0x035A81A8 BL 0x1C16DEC
	0x035A81AC BL 0x1C16F44
	0x035A81B0 MOV X1, X31
	0x035A81B4 BL 0x1C16DEC
	0x035A81B8 BL 0x1C16F44
	0x035A81BC MOV X1, X31
	0x035A81C0 BL 0x1C16DEC
	0x035A81C4 ADRP X0, 0xB4D000
	0x035A81C8 LDR X0, [X0 + 0x278]
	0x035A81CC BL 0x1C16D08
	0x035A81D0 LDR X8, [X0 + 0xB8]
	0x035A81D4 LDR X21, [X8]
	0x035A81D8 ADRP X0, 0xB4C000
	0x035A81DC LDR X0, [X0 + 0x738]
	0x035A81E0 BL 0x1C16D08
	0x035A81E4 MOV X22, X0
	0x035A81E8 ADRP X0, 0xB4D000
	0x035A81EC LDR X0, [X0 + 0x220]
	0x035A81F0 BL 0x1C16D08
	0x035A81F4 MOV X2, X0
	0x035A81F8 MOV X0, X20
	0x035A81FC MOV X1, X22
	0x035A8200 BL 0x2AA528C
	0x035A8204 TBZ X0, 0x0, 0x35A8264
	0x035A8208 ADRP X0, 0xB4C000
	0x035A820C LDR X0, [X0 + 0x738]
	0x035A8210 BL 0x1C16D08
	0x035A8214 MOV X22, X0
	0x035A8218 ADRP X0, 0xB4D000
	0x035A821C LDR X0, [X0 + 0x268]
	0x035A8220 BL 0x1C16D08
	0x035A8224 MOV X2, X0
	0x035A8228 MOV X0, X20
	0x035A822C MOV X1, X22
	0x035A8230 BL 0x2AA5018
	0x035A8234 MOV X22, X0
	0x035A8238 ADRP X0, 0xB4B000
	0x035A823C LDR X0, [X0 + 0x758]
	0x035A8240 BL 0x1C16D08
	0x035A8244 MOV X1, X0
	0x035A8248 CBNZ X22, 0x35A831C
	0x035A824C BL 0x1C16F20
	0x035A8250 LDR X8, [X0]
	0x035A8254 LDP X9, X1, [X8 + 0x168]
	0x035A8258 BLR X9
	0x035A825C MOV X21, X0
	0x035A8260 B 0x35A81D8
	0x035A8264 MOVN W23, 0x0
	0x035A8268 LDR X8, [X19 + 0x60]
	0x035A826C CBNZ X8, 0x35A8274
	0x035A8270 BL 0x1C16F20
	0x035A8274 LDRSW X24, [X8 + 0x20]
	0x035A8278 ADRP X0, 0xB86000
	0x035A827C LDR X0, [X0 + 0x998]
	0x035A8280 BL 0x1C16D08
	0x035A8284 BL 0x1C16F10
	0x035A8288 MOV X22, X0
	0x035A828C MOV X1, X24
	0x035A8290 MOV X2, X21
	0x035A8294 MOV W3, W23
	0x035A8298 BL 0x359192C

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0xE3A000
	009 Move W8, [X20+30]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {29}
	015 Move X0, 0xB91000
	016 Move X0, [X0+1488]
	017 Call 0x1C17CF4
	018 Move X0, 0xB50000
	019 Move X0, [X0+640]
	020 Call 0x1C17CF4
	021 Move X0, 0xB50000
	022 Move X0, [X0+664]
	023 Call 0x1C17CF4
	024 Move X0, 0xB4D000
	025 Move X0, [X0+3584]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X20+30], W8
	029 Move [X31+8], X31
	030 Move W23, [X19]
	031 Compare W23, 0
	032 JumpIfEqual {83}
	033 Move X8, 0xB50000
	034 Move X8, [X8+664]
	035 Move X21, [X19+32]
	036 Move X22, [X19+40]
	037 Move X0, [X8]
	038 Call 0x1C17F10
	039 Move X20, X0
	040 Move W2, 1
	041 Move W3, 1
	042 Move X1, X21
	043 Move X4, X31
	044 Call GZipStream..ctor, X0, X1, X2, X3
	045 Move [X19+48], X20
	046 Compare X22, 0
	047 JumpIfEqual {155}
	048 Move X0, [X22+40]
	049 Compare X0, 0
	050 JumpIfEqual {156}
	051 Move X1, X20
	052 Move X2, X31
	053 Call HttpContent.CopyToAsync, X0, X1
	054 Compare X0, 0
	055 JumpIfEqual {157}
	056 Move X1, X31
	057 Call Task.GetAwaiter, X0
	058 Move [X31+8], X0
	059 Add X0, X31, 8
	060 Move X1, X31
	061 Call TaskAwaiter.get_IsCompleted, X0
	062 Move TEMP, X0
	063 And TEMP, TEMP, 1
	064 Compare TEMP, 1
	065 JumpIfEqual {90}
	066 Move [X19], W31
	067 Move X8, [X31+8]
	068 Move [X19+56], X8
	069 Move X8, 0xB50000
	070 Move X8, [X8+640]
	071 Move X0, [X8]
	072 Move W8, [X0+224]
	073 Compare W8, 0
	074 JumpIfNotEqual {76}
	075 Call 0x1C17DFC
	076 Move X8, 0xB91000
	077 Move X8, [X8+1488]
	078 Add X0, X19, 8
	079 Move X3, [X8]
	080 Add X1, X31, 8
	081 Move X2, X19
	082 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	083 Move X8, [X19+56]
	084 Move TEMP, 0
	085 Not TEMP
	086 Move W23, TEMP
	087 Move [X31+8], X8
	088 Move [X19+56], X31
	089 Move [X19], W23
	090 Add X0, X31, 8
	091 Move X1, X31
	092 Call TaskAwaiter.GetResult, X0
	093 Move X20, X31
	094 Move W22, 6
	095 Move TEMP, X23
	096 And TEMP, TEMP, -2147483648
	097 Compare TEMP, -2147483648
	098 JumpIfNotEqual {125}
	099 Move X21, [X19+48]
	100 Compare X21, 0
	101 JumpIfEqual {125}
	102 Move X10, 0xB4C000
	103 Move X8, [X21]
	104 Move X10, [X10+3584]
	105 NotImplemented "Instruction LDRH not yet implemented."
	106 Move X1, [X10]
	107 Compare X9, 0
	108 JumpIfEqual {115}
	109 Move X10, [X8+176]
	110 Add X10, X10, 8
	111 NotImplemented "Instruction LDUR not yet implemented."
	112 NotImplemented "Instruction CMP not yet implemented."
	113 Subtract X9, X9, 1
	114 Add X10, X10, 16
	115 Move X0, X21
	116 Move W2, W31
	117 Call 0x1C5D788
	118 NotImplemented "Instruction LDRSW not yet implemented."
	119 Add X8, X8, X9
	120 Add X0, X8, 312
	121 Move X8, [X0]
	122 Move X1, [X0+8]
	123 Move X0, X21
	124 NotImplemented "Instruction BLR not yet implemented."
	125 Compare X20, 0
	126 JumpIfNotEqual {153}
	127 NotImplemented "Instruction CMP not yet implemented."
	128 Compare W22, 0
	129 JumpIfNotEqual {145}
	130 Move TEMP, 1
	131 Not TEMP
	132 Move W8, TEMP
	133 Move [X19+48], X31
	134 Move [X19+8], W8
	135 Move X8, 0xB4F000
	136 Move X8, [X8+640]
	137 Move X0, [X8]
	138 Move W8, [X0+224]
	139 Compare W8, 0
	140 JumpIfNotEqual {142}
	141 Call 0x1C17DFC
	142 Move X0, X19
	143 Move X1, X31
	144 Call AsyncTaskMethodBuilder.SetResult, X0
	145 Move X20, [X31+48]
	146 Move X19, [X31+56]
	147 Move X22, [X31+32]
	148 Move X21, [X31+40]
	149 Move X30, [X31+16]
	150 Move X23, [X31+24]
	151 Add X31, X31, 64
	152 Return 
	153 Move X0, X20
	154 Call 0x1C17F18
	155 Call 0x1C17F20
	156 Call 0x1C17F20
	157 Call 0x1C17F20
	158 Move X22, X1
	159 Move X21, X0
	160 Move W23, W31
	161 Move X22, X1
	162 Move X21, X0
	163 NotImplemented "Instruction CMP not yet implemented."
	164 Move X0, X21
	165 Call 0x3EB2AD0
	166 Move X20, [X0]
	167 Call 0x3EB2AE0
	168 Move W22, W31
	169 Move TEMP, X23
	170 And TEMP, TEMP, -2147483648
	171 Compare TEMP, -2147483648
	172 JumpIfNotEqual {125}
	173 Move X20, X31
	174 Move TEMP, X23
	175 And TEMP, TEMP, -2147483648
	176 Compare TEMP, -2147483648
	177 JumpIfNotEqual {204}
	178 Move X23, [X19+48]
	179 Compare X23, 0
	180 JumpIfEqual {204}
	181 Move X10, 0xB4C000
	182 Move X8, [X23]
	183 Move X10, [X10+3584]
	184 NotImplemented "Instruction LDRH not yet implemented."
	185 Move X1, [X10]
	186 Compare X9, 0
	187 JumpIfEqual {194}
	188 Move X10, [X8+176]
	189 Add X10, X10, 8
	190 NotImplemented "Instruction LDUR not yet implemented."
	191 NotImplemented "Instruction CMP not yet implemented."
	192 Subtract X9, X9, 1
	193 Add X10, X10, 16
	194 Move X0, X23
	195 Move W2, W31
	196 Call 0x1C5D788
	197 NotImplemented "Instruction LDRSW not yet implemented."
	198 Add X8, X8, X9
	199 Add X0, X8, 312
	200 Move X8, [X0]
	201 Move X1, [X0+8]
	202 Move X0, X23
	203 NotImplemented "Instruction BLR not yet implemented."
	204 Compare X20, 0
	205 JumpIfEqual {216}
	206 Move X0, X20
	207 Call 0x1C17F18
	208 Move X22, X1
	209 Move X21, X0
	210 Move TEMP, X23
	211 And TEMP, TEMP, -2147483648
	212 Compare TEMP, -2147483648
	213 JumpIfNotEqual {204}
	214 Move X22, X1
	215 Move X21, X0
	216 NotImplemented "Instruction CMP not yet implemented."
	217 Move X0, X21
	218 Call 0x3EB2AD0
	219 Move X20, X0
	220 Move X0, 0xB4C000
	221 Move X0, [X0+2000]
	222 Call 0x1C17D08
	223 Move X8, [X20]
	224 Move X1, [X8]
	225 Call 0x1C18270
	226 Move TEMP, X0
	227 And TEMP, TEMP, 1
	228 Compare TEMP, 1
	229 JumpIfNotEqual {247}
	230 Move X20, [X20]
	231 Call 0x3EB2AE0
	232 Move TEMP, 1
	233 Not TEMP
	234 Move W8, TEMP
	235 Move [X19+8], W8
	236 Move X0, 0xB4F000
	237 Move X0, [X0+640]
	238 Call 0x1C17D08
	239 Move W8, [X0+224]
	240 Compare W8, 0
	241 JumpIfNotEqual {243}
	242 Call 0x1C17DFC
	243 Move X0, X19
	244 Move X1, X20
	245 Move X2, X31
	246 Call AsyncTaskMethodBuilder.SetException, X0, X1
	247 Move W0, 8
	248 Call 0x3EB2AF0
	249 Move X8, [X20]
	250 Move [X0], X8
	251 Move X1, 0x90D000
	252 Add X1, X1, 3672
	253 Move X2, X31
	254 Call 0x3EB2B00
	255 Move X21, X0
	256 Call 0x3EB2AE0
	257 Move X0, X21
	258 Call 0x1D2D690
	259 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x035A829C ADRP X0, 0xB4E000
	0x035A82A0 LDR X0, [X0 + 0x238]
	0x035A82A4 BL 0x1C16D08
	0x035A82A8 MOV X21, X0
	0x035A82AC ADRP X0, 0xB4D000
	0x035A82B0 LDR X0, [X0 + 0x220]
	0x035A82B4 BL 0x1C16D08
	0x035A82B8 MOV X2, X0
	0x035A82BC MOV X0, X20
	0x035A82C0 MOV X1, X21
	0x035A82C4 BL 0x2AA528C
	0x035A82C8 TBZ X0, 0x0, 0x35A8304
	0x035A82CC ADRP X0, 0xB4E000
	0x035A82D0 LDR X0, [X0 + 0x238]
	0x035A82D4 BL 0x1C16D08
	0x035A82D8 MOV X21, X0
	0x035A82DC ADRP X0, 0xB4D000
	0x035A82E0 LDR X0, [X0 + 0x268]
	0x035A82E4 BL 0x1C16D08
	0x035A82E8 MOV X2, X0
	0x035A82EC MOV X0, X20
	0x035A82F0 MOV X1, X21
	0x035A82F4 BL 0x2AA5018
	0x035A82F8 MOV X1, X0
	0x035A82FC MOV X2, X22
	0x035A8300 BL 0x35A85BC

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xE39000
	007 Move X22, 0xB4F000
	008 Move W8, [X21+31]
	009 Move X22, [X22+640]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xB4F000
	017 Move X0, [X0+640]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+31], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Add X0, X20, 8
	027 Move X1, X19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X2, X31
	033 Move X30, [X31+48]
	034 Call AsyncTaskMethodBuilder.SetStateMachine, X0, X1
	035 Return 

