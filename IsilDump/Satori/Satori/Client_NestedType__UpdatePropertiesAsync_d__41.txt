Type: Satori.Client/<UpdatePropertiesAsync>d__41

Method: System.Void MoveNext()

Disassembly:
	0x035A72E0 CBNZ W8, 0x35A72E8
	0x035A72E4 BL 0x1C16DFC
	0x035A72E8 ADD X0, X20, 0x8
	0x035A72EC MOV X1, X19
	0x035A72F0 LDP X20, X19, [X31 + 0x20]
	0x035A72F4 LDP X22, X21, [X31 + 0x10]
	0x035A72F8 MOV X2, X31
	0x035A72FC LDR X30, [X31], #0x30
	0x035A7300 B 0x32C477C
	0x035A7304 LDR X0, [X0 + 0x10]
	0x035A7308 RET
	0x035A730C STR X1, [X0 + 0x10]
	0x035A7310 RET
	0x035A7314 STR X30, [X31 - 0x30]!
	0x035A7318 STP X22, X21, [X31 + 0x10]
	0x035A731C STP X20, X19, [X31 + 0x20]
	0x035A7320 ADRP X21, 0xE39000
	0x035A7324 ADRP X22, 0xB87000
	0x035A7328 ADRP X20, 0xB90000
	0x035A732C LDRB W8, [X21 + 0x20]
	0x035A7330 LDR X22, [X22 + 0x8F0]
	0x035A7334 LDR X20, [X20 + 0x5D8]
	0x035A7338 MOV X19, X0
	0x035A733C TBNZ X8, 0x0, 0x35A7360
	0x035A7340 ADRP X0, 0xB90000
	0x035A7344 LDR X0, [X0 + 0x5D8]
	0x035A7348 BL 0x1C16CF4
	0x035A734C ADRP X0, 0xB87000
	0x035A7350 LDR X0, [X0 + 0x8F0]
	0x035A7354 BL 0x1C16CF4
	0x035A7358 MOVZ W8, 0x1
	0x035A735C STRB W8, [X21 + 0x20]
	0x035A7360 LDR X0, [X22]
	0x035A7364 BL 0x1C16F10
	0x035A7368 LDR X2, [X20]
	0x035A736C MOV X1, X19
	0x035A7370 MOV X20, X0
	0x035A7374 BL 0x35A738C
	0x035A7378 MOV X0, X20
	0x035A737C LDP X20, X19, [X31 + 0x20]
	0x035A7380 LDP X22, X21, [X31 + 0x10]
	0x035A7384 LDR X30, [X31], #0x30
	0x035A7388 RET
	0x035A738C STR X30, [X31 - 0x30]!
	0x035A7390 STP X22, X21, [X31 + 0x10]
	0x035A7394 STP X20, X19, [X31 + 0x20]
	0x035A7398 LDR X8, [X2 + 0x8]
	0x035A739C STP X1, X2, [X0 + 0x20]
	0x035A73A0 MOV X19, X0
	0x035A73A4 MOV X20, X2
	0x035A73A8 STR X8, [X0 + 0x10]
	0x035A73AC LDRB W22, [X2 + 0x52]
	0x035A73B0 STR X0, [X0 + 0x40]
	0x035A73B4 MOV X0, X2
	0x035A73B8 MOV X21, X1
	0x035A73BC BL 0x1C16D84
	0x035A73C0 TBZ X0, 0x0, 0x35A73D8
	0x035A73C4 CMP W22, 0x1
	0x035A73C8 B.NE 0x35A73E0
	0x035A73CC ADRP X8, 0xFFFFFFFFFE61A000
	0x035A73D0 ADD X8, X8, 0x35C
	0x035A73D4 B 0x35A7454
	0x035A73D8 CBZ W22, 0x35A73F4
	0x035A73DC CBZ X21, 0x35A7474
	0x035A73E0 LDR X8, [X19 + 0x10]
	0x035A73E4 LDR X9, [X19 + 0x20]
	0x035A73E8 STR X8, [X19 + 0x18]
	0x035A73EC STR X9, [X19 + 0x40]
	0x035A73F0 B 0x35A7458
	0x035A73F4 LDRB W8, [X19 + 0x70]
	0x035A73F8 CBZ W8, 0x35A7424
	0x035A73FC MOV X0, X20
	0x035A7400 BL 0x1C16D7C
	0x035A7404 MOV W21, W0
	0x035A7408 MOV X0, X20
	0x035A740C BL 0x1C17238
	0x035A7410 TBZ X21, 0x0, 0x35A7430
	0x035A7414 TBZ X0, 0x0, 0x35A7440
	0x035A7418 ADRP X8, 0xFFFFFFFFFE61A000
	0x035A741C ADD X8, X8, 0x458
	0x035A7420 B 0x35A7454
	0x035A7424 ADRP X8, 0xFFFFFFFFFE61A000
	0x035A7428 ADD X8, X8, 0x33C
	0x035A742C B 0x35A7454
	0x035A7430 TBZ X0, 0x0, 0x35A744C
	0x035A7434 ADRP X8, 0xFFFFFFFFFE61A000
	0x035A7438 ADD X8, X8, 0x398
	0x035A743C B 0x35A7454
	0x035A7440 ADRP X8, 0xFFFFFFFFFE61A000
	0x035A7444 ADD X8, X8, 0x41C
	0x035A7448 B 0x35A7454
	0x035A744C ADRP X8, 0xFFFFFFFFFE61A000
	0x035A7450 ADD X8, X8, 0x36C
	0x035A7454 STR X8, [X19 + 0x18]
	0x035A7458 ADRP X8, 0xFFFFFFFFFE61A000
	0x035A745C ADD X8, X8, 0x2E8
	0x035A7460 STR X8, [X19 + 0x38]
	0x035A7464 LDP X20, X19, [X31 + 0x20]
	0x035A7468 LDP X22, X21, [X31 + 0x10]
	0x035A746C LDR X30, [X31], #0x30
	0x035A7470 RET
	0x035A7474 ADRP X1, 0xFFFFFFFFFD574000
	0x035A7478 ADD X1, X1, 0xEE3
	0x035A747C MOV X0, X31
	0x035A7480 BL 0x1C16F3C
	0x035A7484 MOV X1, X31
	0x035A7488 BL 0x1C16DEC
	0x035A748C STR X30, [X31 - 0x30]!
	0x035A7490 STP X22, X21, [X31 + 0x10]
	0x035A7494 STP X20, X19, [X31 + 0x20]
	0x035A7498 ADRP X22, 0xE39000
	0x035A749C ADRP X21, 0xB4F000
	0x035A74A0 LDRB W8, [X22 + 0x21]
	0x035A74A4 LDR X21, [X21 + 0x128]
	0x035A74A8 MOV X19, X1
	0x035A74AC MOV X20, X0
	0x035A74B0 TBNZ X8, 0x0, 0x35A74C8
	0x035A74B4 ADRP X0, 0xB4F000
	0x035A74B8 LDR X0, [X0 + 0x128]
	0x035A74BC BL 0x1C16CF4
	0x035A74C0 MOVZ W8, 0x1
	0x035A74C4 STRB W8, [X22 + 0x21]
	0x035A74C8 MOV X0, X20
	0x035A74CC MOV X1, X31
	0x035A74D0 BL 0x33BDD8C
	0x035A74D4 STR X19, [X20 + 0x18]
	0x035A74D8 LDR X0, [X21]
	0x035A74DC LDR W8, [X0 + 0xE0]
	0x035A74E0 CBNZ W8, 0x35A74E8
	0x035A74E4 BL 0x1C16DFC
	0x035A74E8 CBZ X19, 0x35A7510
	0x035A74EC LDR X8, [X21]
	0x035A74F0 MOV X0, X19
	0x035A74F4 LDP X20, X19, [X31 + 0x20]
	0x035A74F8 LDP X22, X21, [X31 + 0x10]
	0x035A74FC LDR X8, [X8 + 0xB8]
	0x035A7500 MOV X2, X31
	0x035A7504 LDR X1, [X8]
	0x035A7508 LDR X30, [X31], #0x30
	0x035A750C B 0x35F9A24
	0x035A7510 BL 0x1C16F20
	0x035A7514 SUB X31, X31, 0xE0
	0x035A7518 STP X29, X30, [X31 + 0x80]
	0x035A751C STP X28, X27, [X31 + 0x90]
	0x035A7520 STP X26, X25, [X31 + 0xA0]
	0x035A7524 STP X24, X23, [X31 + 0xB0]
	0x035A7528 STP X22, X21, [X31 + 0xC0]
	0x035A752C STP X20, X19, [X31 + 0xD0]
	0x035A7530 ADRP X28, 0xE39000
	0x035A7534 ADRP X27, 0xB4F000
	0x035A7538 LDRB W8, [X28 + 0x22]
	0x035A753C LDR X27, [X27 + 0x130]
	0x035A7540 MOV X19, X7
	0x035A7544 MOV X20, X6
	0x035A7548 MOV W21, W5
	0x035A754C MOV X22, X4
	0x035A7550 MOV X23, X3
	0x035A7554 MOV X24, X2
	0x035A7558 MOV X25, X1
	0x035A755C MOV X26, X0
	0x035A7560 TBNZ X8, 0x0, 0x35A759C
	0x035A7564 ADRP X0, 0xB4F000
	0x035A7568 LDR X0, [X0 + 0x138]
	0x035A756C BL 0x1C16CF4
	0x035A7570 ADRP X0, 0xB90000
	0x035A7574 LDR X0, [X0 + 0x5E0]
	0x035A7578 BL 0x1C16CF4
	0x035A757C ADRP X0, 0xB4F000
	0x035A7580 LDR X0, [X0 + 0x148]
	0x035A7584 BL 0x1C16CF4
	0x035A7588 ADRP X0, 0xB4F000
	0x035A758C LDR X0, [X0 + 0x130]
	0x035A7590 BL 0x1C16CF4
	0x035A7594 MOVZ W8, 0x1
	0x035A7598 STRB W8, [X28 + 0x22]
	0x035A759C LDR X0, [X27]
	0x035A75A0 MOVI V0.2D, 0x0
	0x035A75A4 STR X31, [X31 + 0x70]
	0x035A75A8 STP V0, V0, [X31 + 0x50]
	0x035A75AC STP V0, V0, [X31 + 0x30]
	0x035A75B0 STP V0, V0, [X31 + 0x10]
	0x035A75B4 STR V0, [X31]
	0x035A75B8 ADRP X27, 0xB4F000
	0x035A75BC ADRP X29, 0xB90000
	0x035A75C0 ADRP X28, 0xB4F000
	0x035A75C4 LDR W8, [X0 + 0xE0]
	0x035A75C8 LDR X27, [X27 + 0x138]
	0x035A75CC LDR X29, [X29 + 0x5E0]
	0x035A75D0 LDR X28, [X28 + 0x148]
	0x035A75D4 CBNZ W8, 0x35A75DC
	0x035A75D8 BL 0x1C16DFC
	0x035A75DC LDR X0, [X27]
	0x035A75E0 ADD X8, X31, 0x0
	0x035A75E4 ORR X27, X8, 0xF
	0x035A75E8 MOV X8, X27
	0x035A75EC BL 0x263221C
	0x035A75F0 LDR X2, [X29]
	0x035A75F4 MOVN W8, 0x0
	0x035A75F8 ADD X1, X31, 0x0
	0x035A75FC MOV X0, X27
	0x035A7600 STP X19, X26, [X31 + 0x50]
	0x035A7604 STP X24, X25, [X31 + 0x20]
	0x035A7608 STP X23, X22, [X31 + 0x30]
	0x035A760C STR W21, [X31 + 0x40]
	0x035A7610 STR X20, [X31 + 0x48]
	0x035A7614 STR W8, [X31]
	0x035A7618 BL 0x1FCFE14
	0x035A761C LDR X1, [X28]
	0x035A7620 MOV X0, X27
	0x035A7624 BL 0x2632230
	0x035A7628 LDP X20, X19, [X31 + 0xD0]
	0x035A762C LDP X22, X21, [X31 + 0xC0]
	0x035A7630 LDP X24, X23, [X31 + 0xB0]
	0x035A7634 LDP X26, X25, [X31 + 0xA0]
	0x035A7638 LDP X28, X27, [X31 + 0x90]
	0x035A763C LDP X29, X30, [X31 + 0x80]
	0x035A7640 ADD X31, X31, 0xE0
	0x035A7644 RET
	0x035A7648 STR X30, [X31 - 0x20]!
	0x035A764C STP X20, X19, [X31 + 0x10]
	0x035A7650 ADRP X20, 0xE39000
	0x035A7654 LDRB W8, [X20 + 0x24]
	0x035A7658 MOV X19, X1
	0x035A765C TBNZ X8, 0x0, 0x35A7680
	0x035A7660 ADRP X0, 0xB87000
	0x035A7664 LDR X0, [X0 + 0x998]
	0x035A7668 BL 0x1C16CF4
	0x035A766C ADRP X0, 0xB4D000
	0x035A7670 LDR X0, [X0 + 0x6F8]
	0x035A7674 BL 0x1C16CF4
	0x035A7678 MOVZ W8, 0x1
	0x035A767C STRB W8, [X20 + 0x24]
	0x035A7680 CBZ X19, 0x35A76D0
	0x035A7684 ADRP X8, 0xB87000
	0x035A7688 LDR X8, [X8 + 0x998]
	0x035A768C LDR X9, [X8]
	0x035A7690 LDR X8, [X19]
	0x035A7694 CMP X8, X9
	0x035A7698 B.NE 0x35A76B4
	0x035A769C LDR X9, [X19 + 0x90]
	0x035A76A0 MOVZ W0, 0x1
	0x035A76A4 CMP X9, 0x1F3
	0x035A76A8 B.GT 0x35A76EC
	0x035A76AC ADDS X31, X9, 0x1
	0x035A76B0 B.EQ 0x35A76EC
	0x035A76B4 ADRP X9, 0xB4D000
	0x035A76B8 LDR X9, [X9 + 0x6F8]
	0x035A76BC LDRB W11, [X8 + 0x130]
	0x035A76C0 LDR X9, [X9]
	0x035A76C4 LDRB W10, [X9 + 0x130]
	0x035A76C8 CMP W11, W10
	0x035A76CC B.CS 0x35A76D8
	0x035A76D0 MOV W0, W31
	0x035A76D4 B 0x35A76EC
	0x035A76D8 LDR X8, [X8 + 0xC8]
	0x035A76DC ADD X8, X8, X10, 0x3, LSL
	0x035A76E0 LDUR X8, [X8 - 0x8]
	0x035A76E4 CMP X8, X9
	0x035A76E8 CSET W0, EQ
	0x035A76EC LDP X20, X19, [X31 + 0x10]
	0x035A76F0 LDR X30, [X31], #0x20
	0x035A76F4 RET
	0x035A76F8 SUB X31, X31, 0x80
	0x035A76FC STR X30, [X31 + 0x20]
	0x035A7700 STP X28, X27, [X31 + 0x30]
	0x035A7704 STP X26, X25, [X31 + 0x40]
	0x035A7708 STP X24, X23, [X31 + 0x50]
	0x035A770C STP X22, X21, [X31 + 0x60]
	0x035A7710 STP X20, X19, [X31 + 0x70]
	0x035A7714 ADRP X20, 0xE39000
	0x035A7718 LDRB W8, [X20 + 0x25]
	0x035A771C MOV X19, X0
	0x035A7720 TBNZ X8, 0x0, 0x35A78C4
	0x035A7724 ADRP X0, 0xB90000
	0x035A7728 LDR X0, [X0 + 0x5E8]
	0x035A772C BL 0x1C16CF4
	0x035A7730 ADRP X0, 0xB90000
	0x035A7734 LDR X0, [X0 + 0x5F0]
	0x035A7738 BL 0x1C16CF4
	0x035A773C ADRP X0, 0xB4F000
	0x035A7740 LDR X0, [X0 + 0x160]
	0x035A7744 BL 0x1C16CF4
	0x035A7748 ADRP X0, 0xB4F000
	0x035A774C LDR X0, [X0 + 0x130]
	0x035A7750 BL 0x1C16CF4
	0x035A7754 ADRP X0, 0xB4F000
	0x035A7758 LDR X0, [X0 + 0x168]
	0x035A775C BL 0x1C16CF4
	0x035A7760 ADRP X0, 0xB4E000
	0x035A7764 LDR X0, [X0 + 0xA50]
	0x035A7768 BL 0x1C16CF4
	0x035A776C ADRP X0, 0xB4E000
	0x035A7770 LDR X0, [X0 + 0x220]
	0x035A7774 BL 0x1C16CF4
	0x035A7778 ADRP X0, 0xB4F000
	0x035A777C LDR X0, [X0 + 0x170]
	0x035A7780 BL 0x1C16CF4
	0x035A7784 ADRP X0, 0xB4F000
	0x035A7788 LDR X0, [X0 + 0x178]
	0x035A778C BL 0x1C16CF4
	0x035A7790 ADRP X0, 0xB4F000
	0x035A7794 LDR X0, [X0 + 0x180]
	0x035A7798 BL 0x1C16CF4
	0x035A779C ADRP X0, 0xB4F000
	0x035A77A0 LDR X0, [X0 + 0x188]
	0x035A77A4 BL 0x1C16CF4
	0x035A77A8 ADRP X0, 0xB4C000
	0x035A77AC LDR X0, [X0 + 0xE00]
	0x035A77B0 BL 0x1C16CF4
	0x035A77B4 ADRP X0, 0xB4F000
	0x035A77B8 LDR X0, [X0 + 0x190]
	0x035A77BC BL 0x1C16CF4
	0x035A77C0 ADRP X0, 0xB4F000
	0x035A77C4 LDR X0, [X0 + 0x198]
	0x035A77C8 BL 0x1C16CF4
	0x035A77CC ADRP X0, 0xB4C000
	0x035A77D0 LDR X0, [X0 + 0xE18]
	0x035A77D4 BL 0x1C16CF4
	0x035A77D8 ADRP X0, 0xB90000
	0x035A77DC LDR X0, [X0 + 0x5F8]
	0x035A77E0 BL 0x1C16CF4
	0x035A77E4 ADRP X0, 0xB90000
	0x035A77E8 LDR X0, [X0 + 0x580]
	0x035A77EC BL 0x1C16CF4
	0x035A77F0 ADRP X0, 0xB4F000
	0x035A77F4 LDR X0, [X0 + 0x1B0]
	0x035A77F8 BL 0x1C16CF4
	0x035A77FC ADRP X0, 0xB4F000
	0x035A7800 LDR X0, [X0 + 0x1B8]
	0x035A7804 BL 0x1C16CF4
	0x035A7808 ADRP X0, 0xB4F000
	0x035A780C LDR X0, [X0 + 0x1C0]
	0x035A7810 BL 0x1C16CF4
	0x035A7814 ADRP X0, 0xB4F000
	0x035A7818 LDR X0, [X0 + 0x1C8]
	0x035A781C BL 0x1C16CF4
	0x035A7820 ADRP X0, 0xB4F000
	0x035A7824 LDR X0, [X0 + 0x1D0]
	0x035A7828 BL 0x1C16CF4
	0x035A782C ADRP X0, 0xB4C000
	0x035A7830 LDR X0, [X0 + 0x9D0]
	0x035A7834 BL 0x1C16CF4
	0x035A7838 ADRP X0, 0xB4F000

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+32], X24
	004 Move [X31+40], X23
	005 Move [X31+48], X22
	006 Move [X31+56], X21
	007 Move [X31+64], X20
	008 Move [X31+72], X19
	009 Move X20, 0xE3A000
	010 Move W8, [X20+24]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {48}
	016 Move X0, 0xB91000
	017 Move X0, [X0+1448]
	018 Call 0x1C17CF4
	019 Move X0, 0xB91000
	020 Move X0, [X0+1456]
	021 Call 0x1C17CF4
	022 Move X0, 0xB91000
	023 Move X0, [X0+1464]
	024 Call 0x1C17CF4
	025 Move X0, 0xB50000
	026 Move X0, [X0+640]
	027 Call 0x1C17CF4
	028 Move X0, 0xB91000
	029 Move X0, [X0+832]
	030 Call 0x1C17CF4
	031 Move X0, 0xB4E000
	032 Move X0, [X0+2544]
	033 Call 0x1C17CF4
	034 Move X0, 0xB91000
	035 Move X0, [X0+656]
	036 Call 0x1C17CF4
	037 Move X0, 0xB91000
	038 Move X0, [X0+936]
	039 Call 0x1C17CF4
	040 Move X0, 0xB91000
	041 Move X0, [X0+944]
	042 Call 0x1C17CF4
	043 Move X0, 0xB91000
	044 Move X0, [X0+952]
	045 Call 0x1C17CF4
	046 Move W8, 1
	047 Move [X20+24], W8
	048 Move [X31+24], X31
	049 Move [X31], X31
	050 Move [X31+8], X31
	051 Move X23, 0xB50000
	052 Move X24, 0xB91000
	053 Move W8, [X19]
	054 Move X20, [X19+32]
	055 Move X23, [X23+640]
	056 Move X24, [X24+656]
	057 Compare W8, 0
	058 JumpIfEqual {67}
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Move X8, [X19+96]
	061 Move TEMP, 0
	062 Not TEMP
	063 Move W9, TEMP
	064 Move [X31], X8
	065 Move [X19+96], X31
	066 Move [X19], W9
	067 Move X8, [X19+88]
	068 Move TEMP, 0
	069 Not TEMP
	070 Move W9, TEMP
	071 Move [X31+8], X8
	072 Move [X19+88], X31
	073 Move [X19], W9
	074 Move X8, 0xB91000
	075 Move X8, [X8+936]
	076 Add X0, X31, 8
	077 Move X1, [X8]
	078 Call TaskAwaiter`1<Object>.GetResult, X0
	079 Compare X20, 0
	080 JumpIfEqual {312}
	081 Move W8, [X20+16]
	082 Compare W8, 0
	083 JumpIfEqual {206}
	084 Move X21, [X19+40]
	085 Compare X21, 0
	086 JumpIfEqual {313}
	087 Move X8, [X21]
	088 Move X1, [X24]
	089 NotImplemented "Instruction LDRH not yet implemented."
	090 Compare X9, 0
	091 JumpIfEqual {98}
	092 Move X10, [X8+176]
	093 Add X10, X10, 8
	094 NotImplemented "Instruction LDUR not yet implemented."
	095 NotImplemented "Instruction CMP not yet implemented."
	096 Subtract X9, X9, 1
	097 Add X10, X10, 16
	098 Move W2, 5
	099 Move X0, X21
	100 Call 0x1C5D788
	101 Move W9, [X10]
	102 Add W9, W9, 5
	103 Add X8, X8, W9
	104 Add X0, X8, 312
	105 Move X8, [X0]
	106 Move X1, [X0+8]
	107 Move X0, X21
	108 NotImplemented "Instruction BLR not yet implemented."
	109 Move X1, X31
	110 Call String.IsNullOrEmpty, X0
	111 Move TEMP, X0
	112 And TEMP, TEMP, 1
	113 Compare TEMP, 1
	114 JumpIfEqual {206}
	115 Move X8, 0xB4E000
	116 Move X8, [X8+2544]
	117 Move X21, [X19+40]
	118 Move X0, [X8]
	119 Move W8, [X0+224]
	120 Compare W8, 0
	121 JumpIfNotEqual {123}
	122 Call 0x1C17DFC
	123 Move X0, X31
	124 Call DateTime.get_UtcNow
	125 Move X22, 0xB91000
	126 Move X22, [X22+832]
	127 Move X8, X0
	128 Move [X31+24], X8
	129 Move X0, [X22]
	130 Move W8, [X0+224]
	131 Compare W8, 0
	132 JumpIfNotEqual {135}
	133 Call 0x1C17DFC
	134 Move X0, [X22]
	135 Move X8, [X0+184]
	136 Move X1, [X8]
	137 Add X0, X31, 24
	138 Move X2, X31
	139 Call DateTime.Add, X0, X1
	140 Compare X21, 0
	141 JumpIfEqual {314}
	142 Move X8, [X21]
	143 Move X1, [X24]
	144 Move X22, X0
	145 NotImplemented "Instruction LDRH not yet implemented."
	146 Compare X9, 0
	147 JumpIfEqual {154}
	148 Move X10, [X8+176]
	149 Add X10, X10, 8
	150 NotImplemented "Instruction LDUR not yet implemented."
	151 NotImplemented "Instruction CMP not yet implemented."
	152 Subtract X9, X9, 1
	153 Add X10, X10, 16
	154 Move W2, 7
	155 Move X0, X21
	156 Call 0x1C5D788
	157 Move W9, [X10]
	158 Add W9, W9, 7
	159 Add X8, X8, W9
	160 Add X0, X8, 312
	161 Move X8, [X0]
	162 Move X2, [X0+8]
	163 Move X0, X21
	164 Move X1, X22
	165 NotImplemented "Instruction BLR not yet implemented."
	166 Move TEMP, X0
	167 And TEMP, TEMP, 1
	168 Compare TEMP, 1
	169 JumpIfNotEqual {206}
	170 Move X1, [X19+40]
	171 Move X2, [X19+48]
	172 Move X3, [X19+56]
	173 Move X0, X20
	174 Call Client.SessionRefreshAsync, X0, X1, X2
	175 Compare X0, 0
	176 JumpIfEqual {315}
	177 Move X8, 0xB91000
	178 Move X8, [X8+952]
	179 Move X1, [X8]
	180 Call Task`1<Object>.GetAwaiter, X0
	181 Move X8, 0xB91000
	182 Move X8, [X8+944]
	183 Move [X31+8], X0
	184 Move X1, [X8]
	185 Add X0, X31, 8
	186 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	187 Move TEMP, X0
	188 And TEMP, TEMP, 1
	189 Compare TEMP, 1
	190 JumpIfEqual {74}
	191 Move [X19], W31
	192 Move X8, [X31+8]
	193 Move [X19+88], X8
	194 Move X0, [X23]
	195 Move W8, [X0+224]
	196 Compare W8, 0
	197 JumpIfNotEqual {199}
	198 Call 0x1C17DFC
	199 Move X8, 0xB91000
	200 Move X8, [X8+1456]
	201 Add X0, X19, 8
	202 Move X3, [X8]
	203 Add X1, X31, 8
	204 Move X2, X19
	205 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	206 Move X8, 0xB91000
	207 Move X8, [X8+1448]
	208 Move X0, [X8]
	209 Call 0x1C17F10
	210 Move X21, X0
	211 Move X1, X31
	212 Call Object..ctor, X0
	213 Compare X21, 0
	214 JumpIfEqual {307}
	215 Move V0, [X19+4]
	216 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	217 Move [X21+1], V0
	218 Move W8, [X19+80]
	219 Move [X21+32], W8
	220 Compare X20, 0
	221 JumpIfEqual {308}
	222 Move X22, [X19+40]
	223 Compare X22, 0
	224 JumpIfEqual {309}
	225 Move X8, [X22]
	226 Move X20, [X20+64]
	227 Move X1, [X24]
	228 NotImplemented "Instruction LDRH not yet implemented."
	229 Compare X9, 0
	230 JumpIfEqual {237}
	231 Move X10, [X8+176]
	232 Add X10, X10, 8
	233 NotImplemented "Instruction LDUR not yet implemented."
	234 NotImplemented "Instruction CMP not yet implemented."
	235 Subtract X9, X9, 1
	236 Add X10, X10, 16
	237 Move X0, X22
	238 Move W2, W31
	239 Call 0x1C5D788
	240 NotImplemented "Instruction LDRSW not yet implemented."
	241 Add X8, X8, X9
	242 Add X0, X8, 312
	243 Move X8, [X0]
	244 Move X1, [X0+8]
	245 Move X0, X22
	246 NotImplemented "Instruction BLR not yet implemented."
	247 Move X1, X0
	248 Compare X20, 0
	249 JumpIfEqual {310}
	250 Move X3, [X19+48]
	251 Move X4, [X19+56]
	252 Move X0, X20
	253 Move X2, X21
	254 Call ApiClient.SatoriUpdatePropertiesAsync, X0, X1, X2, X3
	255 Compare X0, 0
	256 JumpIfEqual {311}
	257 Move X1, X31
	258 Call Task.GetAwaiter, X0
	259 Move [X31], X0
	260 Add X0, X31, 0
	261 Move X1, X31
	262 Call TaskAwaiter.get_IsCompleted, X0
	263 Move TEMP, X0
	264 And TEMP, TEMP, 1
	265 Compare TEMP, 1
	266 JumpIfNotEqual {282}
	267 Add X0, X31, 0
	268 Move X1, X31
	269 Call TaskAwaiter.GetResult, X0
	270 Move TEMP, 1
	271 Not TEMP
	272 Move W8, TEMP
	273 Move [X19+8], W8
	274 Move X0, [X23]
	275 Move W8, [X0+224]
	276 Compare W8, 0
	277 JumpIfNotEqual {279}
	278 Call 0x1C17DFC
	279 Move X0, X19
	280 Move X1, X31
	281 Call AsyncTaskMethodBuilder.SetResult, X0
	282 Move W8, 1
	283 Move [X19], W8
	284 Move X8, [X31]
	285 Move [X19+96], X8
	286 Move X0, [X23]
	287 Move W8, [X0+224]
	288 Compare W8, 0
	289 JumpIfNotEqual {291}
	290 Call 0x1C17DFC
	291 Move X8, 0xB91000
	292 Move X8, [X8+1464]
	293 Add X0, X19, 8
	294 Move X3, [X8]
	295 Add X1, X31, 0
	296 Move X2, X19
	297 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	298 Move X20, [X31+64]
	299 Move X19, [X31+72]
	300 Move X22, [X31+48]
	301 Move X21, [X31+56]
	302 Move X24, [X31+32]
	303 Move X23, [X31+40]
	304 Move X30, [X31+16]
	305 Add X31, X31, 80
	306 Return 
	307 Call 0x1C17F20
	308 Call 0x1C17F20
	309 Call 0x1C17F20
	310 Call 0x1C17F20
	311 Call 0x1C17F20
	312 Call 0x1C17F20
	313 Call 0x1C17F20
	314 Call 0x1C17F20
	315 Call 0x1C17F20
	316 Move X20, X0
	317 NotImplemented "Instruction CMP not yet implemented."
	318 Move X0, X20
	319 Call 0x3EB2AD0
	320 Move X20, X0
	321 Move X0, 0xB4D000
	322 Move X0, [X0+2000]
	323 Call 0x1C17D08
	324 Move X8, [X20]
	325 Move X1, [X8]
	326 Call 0x1C18270
	327 Move TEMP, X0
	328 And TEMP, TEMP, 1
	329 Compare TEMP, 1
	330 JumpIfNotEqual {348}
	331 Move X20, [X20]
	332 Call 0x3EB2AE0
	333 Move TEMP, 1
	334 Not TEMP
	335 Move W8, TEMP
	336 Move [X19+8], W8
	337 Move X0, 0xB50000
	338 Move X0, [X0+640]
	339 Call 0x1C17D08
	340 Move W8, [X0+224]
	341 Compare W8, 0
	342 JumpIfNotEqual {344}
	343 Call 0x1C17DFC
	344 Move X0, X19
	345 Move X1, X20
	346 Move X2, X31
	347 Call AsyncTaskMethodBuilder.SetException, X0, X1
	348 Move W0, 8
	349 Call 0x3EB2AF0
	350 Move X8, [X20]
	351 Move [X0], X8
	352 Move X1, 0x90E000
	353 Add X1, X1, 3672
	354 Move X2, X31
	355 Call 0x3EB2B00
	356 Move X20, X0
	357 Call 0x3EB2AE0
	358 Move X0, X20
	359 Call 0x1D2D690
	360 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x035A783C LDR X0, [X0 + 0x1D8]
	0x035A7840 BL 0x1C16CF4
	0x035A7844 ADRP X0, 0xB4F000
	0x035A7848 LDR X0, [X0 + 0x1E0]
	0x035A784C BL 0x1C16CF4
	0x035A7850 ADRP X0, 0xB4F000
	0x035A7854 LDR X0, [X0 + 0x1E8]
	0x035A7858 BL 0x1C16CF4
	0x035A785C ADRP X0, 0xB4F000
	0x035A7860 LDR X0, [X0 + 0x1F0]
	0x035A7864 BL 0x1C16CF4
	0x035A7868 ADRP X0, 0xB4F000
	0x035A786C LDR X0, [X0 + 0x1F8]
	0x035A7870 BL 0x1C16CF4
	0x035A7874 ADRP X0, 0xB4F000
	0x035A7878 LDR X0, [X0 + 0x200]
	0x035A787C BL 0x1C16CF4
	0x035A7880 ADRP X0, 0xB4E000
	0x035A7884 LDR X0, [X0 + 0x570]
	0x035A7888 BL 0x1C16CF4
	0x035A788C ADRP X0, 0xB4F000
	0x035A7890 LDR X0, [X0 + 0x208]
	0x035A7894 BL 0x1C16CF4
	0x035A7898 ADRP X0, 0xB4F000
	0x035A789C LDR X0, [X0 + 0x210]
	0x035A78A0 BL 0x1C16CF4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xE3A000
	007 Move X22, 0xB50000
	008 Move W8, [X21+25]
	009 Move X22, [X22+640]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xB50000
	017 Move X0, [X0+640]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+25], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Add X0, X20, 8
	027 Move X1, X19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X2, X31
	033 Move X30, [X31+48]
	034 Call AsyncTaskMethodBuilder.SetStateMachine, X0, X1
	035 Return 

