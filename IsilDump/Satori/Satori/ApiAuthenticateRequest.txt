Type: Satori.ApiAuthenticateRequest

Method: System.Collections.Generic.IDictionary`2<System.String, System.String> get_Custom()

Disassembly:
	0x03592D6C ADRP X23, 0xB61000
	0x03592D70 ADRP X24, 0xBA4000
	0x03592D74 ADRP X20, 0xB61000
	0x03592D78 ADRP X21, 0xBA4000
	0x03592D7C ADRP X22, 0xB9B000
	0x03592D80 LDRB W8, [X25 + 0xF97]
	0x03592D84 LDR X23, [X23 + 0x838]
	0x03592D88 LDR X24, [X24 + 0xE48]
	0x03592D8C LDR X20, [X20 + 0x988]
	0x03592D90 LDR X21, [X21 + 0xE50]
	0x03592D94 LDR X22, [X22 + 0xD50]
	0x03592D98 MOV X19, X0
	0x03592D9C TBNZ X8, 0x0, 0x3592DE4
	0x03592DA0 ADRP X0, 0xBA4000
	0x03592DA4 LDR X0, [X0 + 0xE48]
	0x03592DA8 BL 0x1C16CF4
	0x03592DAC ADRP X0, 0xB61000
	0x03592DB0 LDR X0, [X0 + 0x838]
	0x03592DB4 BL 0x1C16CF4
	0x03592DB8 ADRP X0, 0xB9B000
	0x03592DBC LDR X0, [X0 + 0xD50]
	0x03592DC0 BL 0x1C16CF4
	0x03592DC4 ADRP X0, 0xBA4000
	0x03592DC8 LDR X0, [X0 + 0xE50]
	0x03592DCC BL 0x1C16CF4
	0x03592DD0 ADRP X0, 0xB61000
	0x03592DD4 LDR X0, [X0 + 0x988]
	0x03592DD8 BL 0x1C16CF4
	0x03592DDC MOVZ W8, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xE4E000
	005 Move W8, [X20+3985]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0xB63000
	012 Move X0, [X0+1728]
	013 Call 0x1C17CF4
	014 Move X0, 0xB63000
	015 Move X0, [X0+1744]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3985], W8
	019 Move X19, [X19+16]
	020 Compare X19, 0
	021 JumpIfNotEqual {31}
	022 Move X8, 0xB63000
	023 Move X8, [X8+1744]
	024 Move X0, [X8]
	025 Call 0x1C17F10
	026 Move X8, 0xB63000
	027 Move X8, [X8+1728]
	028 Move X19, X0
	029 Move X1, [X8]
	030 Call Dictionary`2<Object, Object>..ctor, X0
	031 Move X0, X19
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X30, [X31+32]
	035 Return X0

Method: System.Collections.Generic.Dictionary`2<System.String, System.String> get__custom()

Disassembly:
	0x03592DE0 STRB W8, [X25 + 0xF97]
	0x03592DE4 MOV X0, X19

ISIL:
	001 Move X0, [X0+16]
	002 Return X0

Method: System.Void set__custom(System.Collections.Generic.Dictionary`2<System.String, System.String> value)

Disassembly:
	0x03592DE8 BL 0x3592CD0
	0x03592DEC LDR X8, [X23]

ISIL:
	001 Move [X0+16], X1
	002 Return 

Method: System.Collections.Generic.IDictionary`2<System.String, System.String> get_Default()

Disassembly:
	0x03592DF0 LDR X2, [X24]
	0x03592DF4 MOV X1, X0
	0x03592DF8 MOV X0, X8
	0x03592DFC BL 0x226B7E8
	0x03592E00 LDR X8, [X20]
	0x03592E04 LDR X1, [X21]
	0x03592E08 LDR X3, [X22]
	0x03592E0C LDP X20, X19, [X31 + 0x30]
	0x03592E10 LDP X22, X21, [X31 + 0x20]
	0x03592E14 LDP X24, X23, [X31 + 0x10]
	0x03592E18 MOV X2, X0
	0x03592E1C MOV X0, X8
	0x03592E20 MOV X4, X31
	0x03592E24 LDP X30, X25, [X31], #0x40
	0x03592E28 B 0x32277C4
	0x03592E2C MOV X1, X31
	0x03592E30 B 0x33BDD8C
	0x03592E34 LDR X0, [X0 + 0x10]
	0x03592E38 RET
	0x03592E3C STR X1, [X0 + 0x10]
	0x03592E40 RET
	0x03592E44 LDR X0, [X0 + 0x18]
	0x03592E48 RET
	0x03592E4C STR X1, [X0 + 0x18]
	0x03592E50 RET
	0x03592E54 STR X30, [X31 - 0x40]!
	0x03592E58 STP X24, X23, [X31 + 0x10]
	0x03592E5C STP X22, X21, [X31 + 0x20]
	0x03592E60 STP X20, X19, [X31 + 0x30]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xE4E000
	005 Move W8, [X20+3986]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0xB63000
	012 Move X0, [X0+1728]
	013 Call 0x1C17CF4
	014 Move X0, 0xB63000
	015 Move X0, [X0+1744]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3986], W8
	019 Move X19, [X19+24]
	020 Compare X19, 0
	021 JumpIfNotEqual {31}
	022 Move X8, 0xB63000
	023 Move X8, [X8+1744]
	024 Move X0, [X8]
	025 Call 0x1C17F10
	026 Move X8, 0xB63000
	027 Move X8, [X8+1728]
	028 Move X19, X0
	029 Move X1, [X8]
	030 Call Dictionary`2<Object, Object>..ctor, X0
	031 Move X0, X19
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X30, [X31+32]
	035 Return X0

Method: System.Collections.Generic.Dictionary`2<System.String, System.String> get__default()

Disassembly:
	0x03592E64 ADRP X24, 0xE4D000
	0x03592E68 ADRP X22, 0xB61000

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void set__default(System.Collections.Generic.Dictionary`2<System.String, System.String> value)

Disassembly:
	0x03592E6C ADRP X23, 0xB62000
	0x03592E70 ADRP X20, 0xB61000

ISIL:
	001 Move [X0+24], X1
	002 Return 

Method: System.String get_Id()

Disassembly:
	0x03592E74 ADRP X21, 0xB8E000
	0x03592E78 LDRB W8, [X24 + 0xF98]

ISIL:
	001 Move X0, [X0+32]
	002 Return X0

Method: System.Void set_Id(System.String value)

Disassembly:
	0x03592E7C LDR X22, [X22 + 0x988]
	0x03592E80 LDR X23, [X23 + 0xEE0]

ISIL:
	001 Move [X0+32], X1
	002 Return 

Method: System.String ToString()

Disassembly:
	0x03592E84 LDR X20, [X20 + 0x838]
	0x03592E88 LDR X21, [X21 + 0xBB8]
	0x03592E8C MOV X19, X0
	0x03592E90 TBNZ X8, 0x0, 0x3592ECC
	0x03592E94 ADRP X0, 0xB8E000
	0x03592E98 LDR X0, [X0 + 0xBB8]
	0x03592E9C BL 0x1C16CF4
	0x03592EA0 ADRP X0, 0xB62000
	0x03592EA4 LDR X0, [X0 + 0xEE0]
	0x03592EA8 BL 0x1C16CF4
	0x03592EAC ADRP X0, 0xB61000
	0x03592EB0 LDR X0, [X0 + 0x838]
	0x03592EB4 BL 0x1C16CF4
	0x03592EB8 ADRP X0, 0xB61000
	0x03592EBC LDR X0, [X0 + 0x988]
	0x03592EC0 BL 0x1C16CF4
	0x03592EC4 MOVZ W8, 0x1
	0x03592EC8 STRB W8, [X24 + 0xF98]
	0x03592ECC LDR X2, [X19 + 0x10]
	0x03592ED0 LDR X0, [X22]
	0x03592ED4 LDR X1, [X23]
	0x03592ED8 LDR X3, [X20]
	0x03592EDC MOV X4, X31
	0x03592EE0 BL 0x32277C4
	0x03592EE4 LDR X2, [X19 + 0x18]
	0x03592EE8 LDR X1, [X21]
	0x03592EEC LDR X3, [X20]
	0x03592EF0 LDP X20, X19, [X31 + 0x30]
	0x03592EF4 LDP X22, X21, [X31 + 0x20]
	0x03592EF8 LDP X24, X23, [X31 + 0x10]
	0x03592EFC MOV X4, X31
	0x03592F00 LDR X30, [X31], #0x40
	0x03592F04 B 0x32277C4
	0x03592F08 MOV X1, X31
	0x03592F0C B 0x33BDD8C
	0x03592F10 STR X30, [X31 - 0x20]!
	0x03592F14 STP X20, X19, [X31 + 0x10]
	0x03592F18 ADRP X20, 0xE4D000
	0x03592F1C LDRB W8, [X20 + 0xF99]
	0x03592F20 MOV X19, X0
	0x03592F24 TBNZ X8, 0x0, 0x3592F48
	0x03592F28 ADRP X0, 0xBA4000
	0x03592F2C LDR X0, [X0 + 0xE58]
	0x03592F30 BL 0x1C16CF4
	0x03592F34 ADRP X0, 0xBA4000
	0x03592F38 LDR X0, [X0 + 0xE60]
	0x03592F3C BL 0x1C16CF4
	0x03592F40 MOVZ W8, 0x1
	0x03592F44 STRB W8, [X20 + 0xF99]
	0x03592F48 LDR X19, [X19 + 0x10]
	0x03592F4C CBNZ X19, 0x3592F78
	0x03592F50 ADRP X8, 0xBA4000
	0x03592F54 LDR X8, [X8 + 0xE60]
	0x03592F58 LDR X0, [X8]
	0x03592F5C BL 0x1C16F10
	0x03592F60 ADRP X8, 0xBA4000
	0x03592F64 LDR X8, [X8 + 0xE58]
	0x03592F68 MOV W1, W31
	0x03592F6C MOV X19, X0
	0x03592F70 LDR X2, [X8]
	0x03592F74 BL 0x301B830
	0x03592F78 MOV X0, X19
	0x03592F7C LDP X20, X19, [X31 + 0x10]
	0x03592F80 LDR X30, [X31], #0x20
	0x03592F84 RET
	0x03592F88 LDR X0, [X0 + 0x10]
	0x03592F8C RET
	0x03592F90 STR X1, [X0 + 0x10]
	0x03592F94 RET
	0x03592F98 STP X30, X25, [X31 - 0x40]!
	0x03592F9C STP X24, X23, [X31 + 0x10]
	0x03592FA0 STP X22, X21, [X31 + 0x20]
	0x03592FA4 STP X20, X19, [X31 + 0x30]
	0x03592FA8 ADRP X25, 0xE4D000
	0x03592FAC ADRP X23, 0xB61000
	0x03592FB0 ADRP X24, 0xBA4000
	0x03592FB4 ADRP X20, 0xB61000
	0x03592FB8 ADRP X21, 0xBA4000
	0x03592FBC ADRP X22, 0xB9B000
	0x03592FC0 LDRB W8, [X25 + 0xF9A]
	0x03592FC4 LDR X23, [X23 + 0x838]
	0x03592FC8 LDR X24, [X24 + 0xE68]
	0x03592FCC LDR X20, [X20 + 0x988]
	0x03592FD0 LDR X21, [X21 + 0xE70]
	0x03592FD4 LDR X22, [X22 + 0xD50]
	0x03592FD8 MOV X19, X0
	0x03592FDC TBNZ X8, 0x0, 0x3593024
	0x03592FE0 ADRP X0, 0xBA4000
	0x03592FE4 LDR X0, [X0 + 0xE68]
	0x03592FE8 BL 0x1C16CF4
	0x03592FEC ADRP X0, 0xB61000
	0x03592FF0 LDR X0, [X0 + 0x838]
	0x03592FF4 BL 0x1C16CF4
	0x03592FF8 ADRP X0, 0xBA4000
	0x03592FFC LDR X0, [X0 + 0xE70]
	0x03593000 BL 0x1C16CF4
	0x03593004 ADRP X0, 0xB9A000
	0x03593008 LDR X0, [X0 + 0xD50]
	0x0359300C BL 0x1C16CF4
	0x03593010 ADRP X0, 0xB60000
	0x03593014 LDR X0, [X0 + 0x988]
	0x03593018 BL 0x1C16CF4
	0x0359301C MOVZ W8, 0x1
	0x03593020 STRB W8, [X25 + 0xF9A]
	0x03593024 MOV X0, X19
	0x03593028 BL 0x3592F10
	0x0359302C LDR X8, [X23]
	0x03593030 LDR X2, [X24]
	0x03593034 MOV X1, X0
	0x03593038 MOV X0, X8
	0x0359303C BL 0x226B7E8
	0x03593040 LDR X8, [X20]
	0x03593044 LDR X1, [X21]
	0x03593048 LDR X3, [X22]
	0x0359304C LDP X20, X19, [X31 + 0x30]
	0x03593050 LDP X22, X21, [X31 + 0x20]
	0x03593054 LDP X24, X23, [X31 + 0x10]
	0x03593058 MOV X2, X0
	0x0359305C MOV X0, X8
	0x03593060 MOV X4, X31
	0x03593064 LDP X30, X25, [X31], #0x40
	0x03593068 B 0x32277C4
	0x0359306C MOV X1, X31
	0x03593070 B 0x33BDD8C
	0x03593074 LDRB W0, [X0 + 0x10]
	0x03593078 RET
	0x0359307C AND W8, W1, 0x1
	0x03593080 STRB W8, [X0 + 0x10]
	0x03593084 RET
	0x03593088 LDR X0, [X0 + 0x18]
	0x0359308C RET
	0x03593090 STR X1, [X0 + 0x18]
	0x03593094 RET
	0x03593098 LDR X0, [X0 + 0x20]
	0x0359309C RET
	0x035930A0 STR X1, [X0 + 0x20]
	0x035930A4 RET
	0x035930A8 SUB X31, X31, 0x40
	0x035930AC STP X30, X23, [X31 + 0x10]
	0x035930B0 STP X22, X21, [X31 + 0x20]
	0x035930B4 STP X20, X19, [X31 + 0x30]
	0x035930B8 ADRP X20, 0xE4C000
	0x035930BC ADRP X21, 0xB60000
	0x035930C0 ADRP X22, 0xB60000
	0x035930C4 LDRB W8, [X20 + 0xF9B]
	0x035930C8 LDR X21, [X21 + 0x988]
	0x035930CC LDR X22, [X22 + 0x9D0]
	0x035930D0 MOV X19, X0
	0x035930D4 TBNZ X8, 0x0, 0x3593134
	0x035930D8 ADRP X0, 0xB60000
	0x035930DC LDR X0, [X0 + 0xB58]
	0x035930E0 BL 0x1C16CF4
	0x035930E4 ADRP X0, 0xB60000
	0x035930E8 LDR X0, [X0 + 0x9D0]
	0x035930EC BL 0x1C16CF4
	0x035930F0 ADRP X0, 0xBA3000
	0x035930F4 LDR X0, [X0 + 0xE78]
	0x035930F8 BL 0x1C16CF4
	0x035930FC ADRP X0, 0xB8D000
	0x03593100 LDR X0, [X0 + 0xBB8]
	0x03593104 BL 0x1C16CF4
	0x03593108 ADRP X0, 0xB61000
	0x0359310C LDR X0, [X0 + 0xEE0]
	0x03593110 BL 0x1C16CF4
	0x03593114 ADRP X0, 0xB60000
	0x03593118 LDR X0, [X0 + 0x838]
	0x0359311C BL 0x1C16CF4
	0x03593120 ADRP X0, 0xB60000
	0x03593124 LDR X0, [X0 + 0x988]
	0x03593128 BL 0x1C16CF4
	0x0359312C MOVZ W8, 0x1
	0x03593130 STRB W8, [X20 + 0xF9B]
	0x03593134 LDR X0, [X22]
	0x03593138 LDR X21, [X21]
	0x0359313C MOVZ W1, 0x4
	0x03593140 BL 0x1C16D6C
	0x03593144 CBZ X0, 0x3593288
	0x03593148 MOV X20, X0
	0x0359314C CBZ X21, 0x3593164
	0x03593150 LDR X8, [X20]
	0x03593154 MOV X0, X21
	0x03593158 LDR X1, [X8 + 0x40]
	0x0359315C BL 0x1C16E00
	0x03593160 CBZ X0, 0x359327C
	0x03593164 LDR W8, [X20 + 0x18]
	0x03593168 CBZ W8, 0x3593278
	0x0359316C ADRP X22, 0xBA3000
	0x03593170 LDR X22, [X22 + 0xE78]
	0x03593174 STR X21, [X20 + 0x20]
	0x03593178 LDR X0, [X22]
	0x0359317C CBZ X0, 0x3593194
	0x03593180 LDR X8, [X20]
	0x03593184 LDR X1, [X8 + 0x40]
	0x03593188 BL 0x1C16E00
	0x0359318C CBZ X0, 0x359327C
	0x03593190 LDR W8, [X20 + 0x18]
	0x03593194 CMP W8, 0x1
	0x03593198 B.LS 0x3593278
	0x0359319C LDR X8, [X22]
	0x035931A0 ADRP X9, 0xB60000
	0x035931A4 LDR X9, [X9 + 0xB58]
	0x035931A8 ADD X1, X31, 0xC
	0x035931AC STR X8, [X20 + 0x28]
	0x035931B0 LDRB W8, [X19 + 0x10]
	0x035931B4 LDR X0, [X9]
	0x035931B8 STRB W8, [X31 + 0xC]
	0x035931BC BL 0x1C16E04
	0x035931C0 MOV X21, X0
	0x035931C4 CBZ X0, 0x35931DC
	0x035931C8 LDR X8, [X20]
	0x035931CC MOV X0, X21
	0x035931D0 LDR X1, [X8 + 0x40]
	0x035931D4 BL 0x1C16E00
	0x035931D8 CBZ X0, 0x359327C
	0x035931DC LDR W8, [X20 + 0x18]
	0x035931E0 CMP W8, 0x2
	0x035931E4 B.LS 0x3593278
	0x035931E8 ADRP X22, 0xB60000
	0x035931EC LDR X22, [X22 + 0x838]
	0x035931F0 STR X21, [X20 + 0x30]
	0x035931F4 LDR X0, [X22]
	0x035931F8 CBZ X0, 0x3593210
	0x035931FC LDR X8, [X20]
	0x03593200 LDR X1, [X8 + 0x40]
	0x03593204 BL 0x1C16E00
	0x03593208 CBZ X0, 0x359327C
	0x0359320C LDR W8, [X20 + 0x18]
	0x03593210 CMP W8, 0x3
	0x03593214 B.LS 0x3593278
	0x03593218 LDR X8, [X22]
	0x0359321C ADRP X21, 0xB61000
	0x03593220 ADRP X23, 0xB8D000
	0x03593224 LDR X21, [X21 + 0xEE0]
	0x03593228 LDR X23, [X23 + 0xBB8]
	0x0359322C MOV X0, X20
	0x03593230 MOV X1, X31
	0x03593234 STR X8, [X20 + 0x38]
	0x03593238 BL 0x3227578
	0x0359323C LDR X2, [X19 + 0x18]
	0x03593240 LDR X1, [X21]
	0x03593244 LDR X3, [X22]
	0x03593248 MOV X4, X31
	0x0359324C BL 0x32277C4
	0x03593250 LDR X2, [X19 + 0x20]
	0x03593254 LDR X1, [X23]
	0x03593258 LDR X3, [X22]
	0x0359325C MOV X4, X31
	0x03593260 BL 0x32277C4
	0x03593264 LDP X20, X19, [X31 + 0x30]
	0x03593268 LDP X22, X21, [X31 + 0x20]
	0x0359326C LDP X30, X23, [X31 + 0x10]
	0x03593270 ADD X31, X31, 0x40
	0x03593274 RET
	0x03593278 BL 0x1C16F28
	0x0359327C BL 0x1C16F44
	0x03593280 MOV X1, X31
	0x03593284 BL 0x1C16DEC
	0x03593288 BL 0x1C16F20
	0x0359328C MOV X1, X31
	0x03593290 B 0x33BDD8C
	0x03593294 STR X30, [X31 - 0x20]!
	0x03593298 STP X20, X19, [X31 + 0x10]
	0x0359329C ADRP X20, 0xE4C000
	0x035932A0 LDRB W8, [X20 + 0xF9C]
	0x035932A4 MOV X19, X0
	0x035932A8 TBNZ X8, 0x0, 0x35932CC
	0x035932AC ADRP X0, 0xBA3000
	0x035932B0 LDR X0, [X0 + 0xE80]
	0x035932B4 BL 0x1C16CF4
	0x035932B8 ADRP X0, 0xBA3000
	0x035932BC LDR X0, [X0 + 0xE88]
	0x035932C0 BL 0x1C16CF4
	0x035932C4 MOVZ W8, 0x1
	0x035932C8 STRB W8, [X20 + 0xF9C]
	0x035932CC LDR X19, [X19 + 0x10]
	0x035932D0 CBNZ X19, 0x35932FC
	0x035932D4 ADRP X8, 0xBA3000
	0x035932D8 LDR X8, [X8 + 0xE88]
	0x035932DC LDR X0, [X8]
	0x035932E0 BL 0x1C16F10
	0x035932E4 ADRP X8, 0xBA3000
	0x035932E8 LDR X8, [X8 + 0xE80]
	0x035932EC MOV W1, W31
	0x035932F0 MOV X19, X0
	0x035932F4 LDR X2, [X8]
	0x035932F8 BL 0x301B830
	0x035932FC MOV X0, X19
	0x03593300 LDP X20, X19, [X31 + 0x10]
	0x03593304 LDR X30, [X31], #0x20
	0x03593308 RET
	0x0359330C LDR X0, [X0 + 0x10]
	0x03593310 RET
	0x03593314 STR X1, [X0 + 0x10]
	0x03593318 RET
	0x0359331C STP X30, X25, [X31 - 0x40]!
	0x03593320 STP X24, X23, [X31 + 0x10]
	0x03593324 STP X22, X21, [X31 + 0x20]
	0x03593328 STP X20, X19, [X31 + 0x30]
	0x0359332C ADRP X25, 0xE4C000
	0x03593330 ADRP X23, 0xB60000
	0x03593334 ADRP X24, 0xBA3000
	0x03593338 ADRP X20, 0xB60000
	0x0359333C ADRP X21, 0xBA3000
	0x03593340 ADRP X22, 0xB9A000
	0x03593344 LDRB W8, [X25 + 0xF9D]
	0x03593348 LDR X23, [X23 + 0x838]
	0x0359334C LDR X24, [X24 + 0xE90]
	0x03593350 LDR X20, [X20 + 0x988]
	0x03593354 LDR X21, [X21 + 0xE98]
	0x03593358 LDR X22, [X22 + 0xD50]
	0x0359335C MOV X19, X0
	0x03593360 TBNZ X8, 0x0, 0x35933A8
	0x03593364 ADRP X0, 0xBA3000
	0x03593368 LDR X0, [X0 + 0xE90]
	0x0359336C BL 0x1C16CF4
	0x03593370 ADRP X0, 0xBA3000
	0x03593374 LDR X0, [X0 + 0xE98]
	0x03593378 BL 0x1C16CF4
	0x0359337C ADRP X0, 0xB60000
	0x03593380 LDR X0, [X0 + 0x838]
	0x03593384 BL 0x1C16CF4
	0x03593388 ADRP X0, 0xB9A000
	0x0359338C LDR X0, [X0 + 0xD50]
	0x03593390 BL 0x1C16CF4
	0x03593394 ADRP X0, 0xB60000
	0x03593398 LDR X0, [X0 + 0x988]
	0x0359339C BL 0x1C16CF4
	0x035933A0 MOVZ W8, 0x1
	0x035933A4 STRB W8, [X25 + 0xF9D]
	0x035933A8 MOV X0, X19
	0x035933AC BL 0x3593294
	0x035933B0 LDR X8, [X23]
	0x035933B4 LDR X2, [X24]
	0x035933B8 MOV X1, X0
	0x035933BC MOV X0, X8
	0x035933C0 BL 0x226B7E8
	0x035933C4 LDR X8, [X20]
	0x035933C8 LDR X1, [X21]
	0x035933CC LDR X3, [X22]
	0x035933D0 LDP X20, X19, [X31 + 0x30]
	0x035933D4 LDP X22, X21, [X31 + 0x20]
	0x035933D8 LDP X24, X23, [X31 + 0x10]
	0x035933DC MOV X2, X0
	0x035933E0 MOV X0, X8
	0x035933E4 MOV X4, X31
	0x035933E8 LDP X30, X25, [X31], #0x40
	0x035933EC B 0x32277C4
	0x035933F0 MOV X1, X31
	0x035933F4 B 0x33BDD8C
	0x035933F8 LDR X0, [X0 + 0x10]
	0x035933FC RET
	0x03593400 STR X1, [X0 + 0x10]
	0x03593404 RET
	0x03593408 STR X30, [X31 - 0x20]!
	0x0359340C STP X20, X19, [X31 + 0x10]
	0x03593410 ADRP X20, 0xE4C000
	0x03593414 LDRB W8, [X20 + 0xF9E]
	0x03593418 MOV X19, X0
	0x0359341C TBNZ X8, 0x0, 0x3593440
	0x03593420 ADRP X0, 0xBA3000
	0x03593424 LDR X0, [X0 + 0xEA0]
	0x03593428 BL 0x1C16CF4
	0x0359342C ADRP X0, 0xBA3000
	0x03593430 LDR X0, [X0 + 0xEA8]
	0x03593434 BL 0x1C16CF4
	0x03593438 MOVZ W8, 0x1
	0x0359343C STRB W8, [X20 + 0xF9E]
	0x03593440 LDR X19, [X19 + 0x18]
	0x03593444 CBNZ X19, 0x3593470
	0x03593448 ADRP X8, 0xBA3000
	0x0359344C LDR X8, [X8 + 0xEA8]
	0x03593450 LDR X0, [X8]
	0x03593454 BL 0x1C16F10
	0x03593458 ADRP X8, 0xBA3000
	0x0359345C LDR X8, [X8 + 0xEA0]
	0x03593460 MOV W1, W31
	0x03593464 MOV X19, X0
	0x03593468 LDR X2, [X8]
	0x0359346C BL 0x301B830
	0x03593470 MOV X0, X19
	0x03593474 LDP X20, X19, [X31 + 0x10]
	0x03593478 LDR X30, [X31], #0x20
	0x0359347C RET
	0x03593480 LDR X0, [X0 + 0x18]
	0x03593484 RET
	0x03593488 STR X1, [X0 + 0x18]
	0x0359348C RET
	0x03593490 LDR X0, [X0 + 0x20]
	0x03593494 RET
	0x03593498 STR X1, [X0 + 0x20]
	0x0359349C RET
	0x035934A0 LDR X0, [X0 + 0x28]
	0x035934A4 RET
	0x035934A8 STR X1, [X0 + 0x28]
	0x035934AC RET
	0x035934B0 STR X30, [X31 - 0x60]!
	0x035934B4 STP X28, X27, [X31 + 0x10]
	0x035934B8 STP X26, X25, [X31 + 0x20]
	0x035934BC STP X24, X23, [X31 + 0x30]
	0x035934C0 STP X22, X21, [X31 + 0x40]
	0x035934C4 STP X20, X19, [X31 + 0x50]
	0x035934C8 ADRP X28, 0xE4C000
	0x035934CC ADRP X20, 0xB60000
	0x035934D0 ADRP X27, 0xB9A000
	0x035934D4 ADRP X21, 0xB60000
	0x035934D8 ADRP X26, 0xBA3000
	0x035934DC ADRP X24, 0xB9A000
	0x035934E0 ADRP X25, 0xB9A000
	0x035934E4 ADRP X23, 0xB9A000
	0x035934E8 ADRP X22, 0xB9A000
	0x035934EC LDR X20, [X20 + 0x988]
	0x035934F0 LDR X27, [X27 + 0xE48]
	0x035934F4 LDR X21, [X21 + 0x838]
	0x035934F8 LDRB W8, [X28 + 0xF9F]
	0x035934FC LDR X26, [X26 + 0xEB0]
	0x03593500 LDR X24, [X24 + 0xE58]
	0x03593504 LDR X25, [X25 + 0xD50]
	0x03593508 LDR X23, [X23 + 0xE60]
	0x0359350C LDR X22, [X22 + 0xE68]
	0x03593510 MOV X19, X0
	0x03593514 TBNZ X8, 0x0, 0x3593580
	0x03593518 ADRP X0, 0xBA3000
	0x0359351C LDR X0, [X0 + 0xEB0]
	0x03593520 BL 0x1C16CF4
	0x03593524 ADRP X0, 0xB9A000
	0x03593528 LDR X0, [X0 + 0xE58]
	0x0359352C BL 0x1C16CF4
	0x03593530 ADRP X0, 0xB9A000
	0x03593534 LDR X0, [X0 + 0xE48]
	0x03593538 BL 0x1C16CF4
	0x0359353C ADRP X0, 0xB60000
	0x03593540 LDR X0, [X0 + 0x838]
	0x03593544 BL 0x1C16CF4
	0x03593548 ADRP X0, 0xB9A000
	0x0359354C LDR X0, [X0 + 0xE68]
	0x03593550 BL 0x1C16CF4
	0x03593554 ADRP X0, 0xB9A000
	0x03593558 LDR X0, [X0 + 0xE60]
	0x0359355C BL 0x1C16CF4
	0x03593560 ADRP X0, 0xB9A000
	0x03593564 LDR X0, [X0 + 0xD50]
	0x03593568 BL 0x1C16CF4
	0x0359356C ADRP X0, 0xB60000
	0x03593570 LDR X0, [X0 + 0x988]
	0x03593574 BL 0x1C16CF4
	0x03593578 MOVZ W8, 0x1
	0x0359357C STRB W8, [X28 + 0xF9F]
	0x03593580 LDR X2, [X19 + 0x10]
	0x03593584 LDR X0, [X20]
	0x03593588 LDR X1, [X27]
	0x0359358C LDR X3, [X21]
	0x03593590 MOV X4, X31
	0x03593594 BL 0x32277C4
	0x03593598 MOV X20, X0
	0x0359359C MOV X0, X19
	0x035935A0 BL 0x3593408
	0x035935A4 LDR X8, [X21]
	0x035935A8 LDR X2, [X26]
	0x035935AC MOV X1, X0
	0x035935B0 MOV X0, X8
	0x035935B4 BL 0x226B7E8
	0x035935B8 LDR X1, [X24]
	0x035935BC LDR X3, [X25]
	0x035935C0 MOV X2, X0
	0x035935C4 MOV X0, X20
	0x035935C8 MOV X4, X31
	0x035935CC BL 0x32277C4
	0x035935D0 LDR X2, [X19 + 0x20]
	0x035935D4 LDR X1, [X23]
	0x035935D8 LDR X3, [X21]
	0x035935DC MOV X4, X31
	0x035935E0 BL 0x32277C4
	0x035935E4 LDR X2, [X19 + 0x28]
	0x035935E8 LDR X1, [X22]
	0x035935EC LDR X3, [X21]
	0x035935F0 LDP X20, X19, [X31 + 0x50]
	0x035935F4 LDP X22, X21, [X31 + 0x40]
	0x035935F8 LDP X24, X23, [X31 + 0x30]
	0x035935FC LDP X26, X25, [X31 + 0x20]
	0x03593600 LDP X28, X27, [X31 + 0x10]
	0x03593604 MOV X4, X31
	0x03593608 LDR X30, [X31], #0x60
	0x0359360C B 0x32277C4
	0x03593610 MOV X1, X31
	0x03593614 B 0x33BDD8C
	0x03593618 STR X30, [X31 - 0x20]!
	0x0359361C STP X20, X19, [X31 + 0x10]
	0x03593620 ADRP X20, 0xE4C000
	0x03593624 LDRB W8, [X20 + 0xFA0]
	0x03593628 MOV X19, X0
	0x0359362C TBNZ X8, 0x0, 0x3593650
	0x03593630 ADRP X0, 0xB61000
	0x03593634 LDR X0, [X0 + 0x6C0]
	0x03593638 BL 0x1C16CF4
	0x0359363C ADRP X0, 0xB61000
	0x03593640 LDR X0, [X0 + 0x6D0]
	0x03593644 BL 0x1C16CF4
	0x03593648 MOVZ W8, 0x1
	0x0359364C STRB W8, [X20 + 0xFA0]
	0x03593650 LDR X19, [X19 + 0x10]
	0x03593654 CBNZ X19, 0x359367C
	0x03593658 ADRP X8, 0xB61000
	0x0359365C LDR X8, [X8 + 0x6D0]
	0x03593660 LDR X0, [X8]
	0x03593664 BL 0x1C16F10
	0x03593668 ADRP X8, 0xB61000
	0x0359366C LDR X8, [X8 + 0x6C0]
	0x03593670 MOV X19, X0
	0x03593674 LDR X1, [X8]
	0x03593678 BL 0x2AA4804
	0x0359367C MOV X0, X19
	0x03593680 LDP X20, X19, [X31 + 0x10]
	0x03593684 LDR X30, [X31], #0x20
	0x03593688 RET
	0x0359368C LDR X0, [X0 + 0x10]
	0x03593690 RET
	0x03593694 STR X1, [X0 + 0x10]
	0x03593698 RET
	0x0359369C STR X30, [X31 - 0x20]!
	0x035936A0 STP X20, X19, [X31 + 0x10]
	0x035936A4 ADRP X20, 0xE4C000
	0x035936A8 LDRB W8, [X20 + 0xFA1]
	0x035936AC MOV X19, X0
	0x035936B0 TBNZ X8, 0x0, 0x35936D4
	0x035936B4 ADRP X0, 0xB61000

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move [X31+8], X0
	015 Move X19, 0xE4E000
	016 Move X20, 0xB62000
	017 Move W8, [X19+3987]
	018 Move X20, [X20+2440]
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {73}
	023 Move X0, 0xB62000
	024 Move X0, [X0+3584]
	025 Call 0x1C17CF4
	026 Move X0, 0xB65000
	027 Move X0, [X0+400]
	028 Call 0x1C17CF4
	029 Move X0, 0xB65000
	030 Move X0, [X0+408]
	031 Call 0x1C17CF4
	032 Move X0, 0xB62000
	033 Move X0, [X0+3608]
	034 Call 0x1C17CF4
	035 Move X0, 0xB65000
	036 Move X0, [X0+432]
	037 Call 0x1C17CF4
	038 Move X0, 0xB65000
	039 Move X0, [X0+440]
	040 Call 0x1C17CF4
	041 Move X0, 0xB62000
	042 Move X0, [X0+2760]
	043 Call 0x1C17CF4
	044 Move X0, 0xB8F000
	045 Move X0, [X0+864]
	046 Call 0x1C17CF4
	047 Move X0, 0xB8F000
	048 Move X0, [X0+4024]
	049 Call 0x1C17CF4
	050 Move X0, 0xB9C000
	051 Move X0, [X0+3464]
	052 Call 0x1C17CF4
	053 Move X0, 0xB6D000
	054 Move X0, [X0+1752]
	055 Call 0x1C17CF4
	056 Move X0, 0xB62000
	057 Move X0, [X0+2104]
	058 Call 0x1C17CF4
	059 Move X0, 0xBA5000
	060 Move X0, [X0+3616]
	061 Call 0x1C17CF4
	062 Move X0, 0xBA5000
	063 Move X0, [X0+3624]
	064 Call 0x1C17CF4
	065 Move X0, 0xB62000
	066 Move X0, [X0+2440]
	067 Call 0x1C17CF4
	068 Move X0, 0xB62000
	069 Move X0, [X0+2120]
	070 Call 0x1C17CF4
	071 Move W8, 1
	072 Move [X19+3987], W8
	073 Move X0, [X31+8]
	074 Move X20, [X20]
	075 Call ApiAuthenticateRequest.get_Custom, X0
	076 Compare X0, 0
	077 JumpIfEqual {442}
	078 Move X10, 0xB65000
	079 Move X8, [X0]
	080 Move X10, [X10+400]
	081 Move X21, X0
	082 NotImplemented "Instruction LDRH not yet implemented."
	083 Move X1, [X10]
	084 Compare X9, 0
	085 JumpIfEqual {92}
	086 Move X10, [X8+176]
	087 Add X10, X10, 8
	088 NotImplemented "Instruction LDUR not yet implemented."
	089 NotImplemented "Instruction CMP not yet implemented."
	090 Subtract X9, X9, 1
	091 Add X10, X10, 16
	092 Move X0, X21
	093 Move W2, W31
	094 Call 0x1C5D788
	095 NotImplemented "Instruction LDRSW not yet implemented."
	096 Add X8, X8, X9
	097 Add X0, X8, 312
	098 Move X25, 0xB62000
	099 Move X26, 0xB65000
	100 Move X28, 0xB62000
	101 Move X29, 0xB8F000
	102 Move X27, 0xB8F000
	103 Move X19, 0xB6D000
	104 Move X25, [X25+3608]
	105 Move X26, [X26+408]
	106 Move X28, [X28+2760]
	107 Move X29, [X29+864]
	108 Move X27, [X27+4024]
	109 Move X19, [X19+1752]
	110 Move X8, [X0]
	111 Move X1, [X0+8]
	112 Move X0, X21
	113 NotImplemented "Instruction BLR not yet implemented."
	114 Move X21, X0
	115 Move X0, X20
	116 Compare X21, 0
	117 JumpIfEqual {428}
	118 Move X8, [X21]
	119 Move X1, [X25]
	120 Move X22, X0
	121 NotImplemented "Instruction LDRH not yet implemented."
	122 Compare X9, 0
	123 JumpIfEqual {130}
	124 Move X10, [X8+176]
	125 Add X10, X10, 8
	126 NotImplemented "Instruction LDUR not yet implemented."
	127 NotImplemented "Instruction CMP not yet implemented."
	128 Subtract X9, X9, 1
	129 Add X10, X10, 16
	130 Move X0, X21
	131 Move W2, W31
	132 Call 0x1C5D788
	133 NotImplemented "Instruction LDRSW not yet implemented."
	134 Add X8, X8, X9
	135 Add X0, X8, 312
	136 Move X8, [X0]
	137 Move X1, [X0+8]
	138 Move X0, X21
	139 NotImplemented "Instruction BLR not yet implemented."
	140 Move TEMP, X0
	141 And TEMP, TEMP, 1
	142 Compare TEMP, 1
	143 JumpIfNotEqual {193}
	144 Move X8, [X21]
	145 Move X1, [X26]
	146 NotImplemented "Instruction LDRH not yet implemented."
	147 Compare X9, 0
	148 JumpIfEqual {155}
	149 Move X10, [X8+176]
	150 Add X10, X10, 8
	151 NotImplemented "Instruction LDUR not yet implemented."
	152 NotImplemented "Instruction CMP not yet implemented."
	153 Subtract X9, X9, 1
	154 Add X10, X10, 16
	155 Move X0, X21
	156 Move W2, W31
	157 Call 0x1C5D788
	158 NotImplemented "Instruction LDRSW not yet implemented."
	159 Add X8, X8, X9
	160 Add X0, X8, 312
	161 Move X8, [X0]
	162 Move X1, [X0+8]
	163 Move X0, X21
	164 NotImplemented "Instruction BLR not yet implemented."
	165 Move X24, X0
	166 Move X0, [X28]
	167 Move X23, X1
	168 Move W1, 5
	169 Call 0x1C17D6C
	170 Compare X0, 0
	171 JumpIfEqual {431}
	172 Move W8, [X0+24]
	173 Compare W8, 0
	174 JumpIfEqual {433}
	175 Move X9, [X29]
	176 NotImplemented "Instruction CMP not yet implemented."
	177 Move [X0+32], X9
	178 NotImplemented "Instruction CMP not yet implemented."
	179 Move [X0+40], X24
	180 Move X9, [X27]
	181 NotImplemented "Instruction CMP not yet implemented."
	182 Move [X0+48], X9
	183 NotImplemented "Instruction CMP not yet implemented."
	184 Move [X0+56], X23
	185 Move X8, [X19]
	186 Move [X0+64], X8
	187 Move X1, X31
	188 Call String.Concat, X0
	189 Move X1, X0
	190 Move X0, X22
	191 Move X2, X31
	192 Call String.Concat, X0, X1
	193 Move X23, X31
	194 Compare X21, 0
	195 JumpIfEqual {219}
	196 Move X8, [X21]
	197 Move X10, 0xB61000
	198 NotImplemented "Instruction LDRH not yet implemented."
	199 Move X10, [X10+3584]
	200 Move X1, [X10]
	201 Compare X9, 0
	202 JumpIfEqual {209}
	203 Move X10, [X8+176]
	204 Add X10, X10, 8
	205 NotImplemented "Instruction LDUR not yet implemented."
	206 NotImplemented "Instruction CMP not yet implemented."
	207 Subtract X9, X9, 1
	208 Add X10, X10, 16
	209 Move X0, X21
	210 Move W2, W31
	211 Call 0x1C5D788
	212 NotImplemented "Instruction LDRSW not yet implemented."
	213 Add X8, X8, X9
	214 Add X0, X8, 312
	215 Move X8, [X0]
	216 Move X1, [X0+8]
	217 Move X0, X21
	218 NotImplemented "Instruction BLR not yet implemented."
	219 Compare X23, 0
	220 JumpIfNotEqual {443}
	221 Move X8, 0xBA4000
	222 Move X8, [X8+3616]
	223 Move X1, X22
	224 Move X3, X31
	225 Move X0, [X8]
	226 Move X8, 0xB61000
	227 Move X8, [X8+2120]
	228 Move X2, [X8]
	229 Call String.Concat, X0, X1, X2
	230 Move X1, X0
	231 Move X0, X20
	232 Move X2, X31
	233 Call String.Concat, X0, X1
	234 Move X8, 0xB61000
	235 Move X8, [X8+2440]
	236 Move [X31], X0
	237 Move X0, [X31+8]
	238 Move X20, [X8]
	239 Call ApiAuthenticateRequest.get_Default, X0
	240 Compare X0, 0
	241 JumpIfEqual {442}
	242 Move X8, [X0]
	243 Move X10, 0xB64000
	244 Move X21, X0
	245 NotImplemented "Instruction LDRH not yet implemented."
	246 Move X10, [X10+400]
	247 Move X1, [X10]
	248 Compare X9, 0
	249 JumpIfEqual {256}
	250 Move X10, [X8+176]
	251 Add X10, X10, 8
	252 NotImplemented "Instruction LDUR not yet implemented."
	253 NotImplemented "Instruction CMP not yet implemented."
	254 Subtract X9, X9, 1
	255 Add X10, X10, 16
	256 Move X0, X21
	257 Move W2, W31
	258 Call 0x1C5D788
	259 NotImplemented "Instruction LDRSW not yet implemented."
	260 Add X8, X8, X9
	261 Add X0, X8, 312
	262 Move X8, [X0]
	263 Move X1, [X0+8]
	264 Move X0, X21
	265 NotImplemented "Instruction BLR not yet implemented."
	266 Move X21, X0
	267 Move X0, X20
	268 Compare X21, 0
	269 JumpIfEqual {429}
	270 Move X8, [X21]
	271 Move X1, [X25]
	272 Move X22, X0
	273 NotImplemented "Instruction LDRH not yet implemented."
	274 Compare X9, 0
	275 JumpIfEqual {282}
	276 Move X10, [X8+176]
	277 Add X10, X10, 8
	278 NotImplemented "Instruction LDUR not yet implemented."
	279 NotImplemented "Instruction CMP not yet implemented."
	280 Subtract X9, X9, 1
	281 Add X10, X10, 16
	282 Move X0, X21
	283 Move W2, W31
	284 Call 0x1C5D788
	285 NotImplemented "Instruction LDRSW not yet implemented."
	286 Add X8, X8, X9
	287 Add X0, X8, 312
	288 Move X8, [X0]
	289 Move X1, [X0+8]
	290 Move X0, X21
	291 NotImplemented "Instruction BLR not yet implemented."
	292 Move TEMP, X0
	293 And TEMP, TEMP, 1
	294 Compare TEMP, 1
	295 JumpIfNotEqual {345}
	296 Move X8, [X21]
	297 Move X1, [X26]
	298 NotImplemented "Instruction LDRH not yet implemented."
	299 Compare X9, 0
	300 JumpIfEqual {307}
	301 Move X10, [X8+176]
	302 Add X10, X10, 8
	303 NotImplemented "Instruction LDUR not yet implemented."
	304 NotImplemented "Instruction CMP not yet implemented."
	305 Subtract X9, X9, 1
	306 Add X10, X10, 16
	307 Move X0, X21
	308 Move W2, W31
	309 Call 0x1C5D788
	310 NotImplemented "Instruction LDRSW not yet implemented."
	311 Add X8, X8, X9
	312 Add X0, X8, 312
	313 Move X8, [X0]
	314 Move X1, [X0+8]
	315 Move X0, X21
	316 NotImplemented "Instruction BLR not yet implemented."
	317 Move X24, X0
	318 Move X0, [X28]
	319 Move X23, X1
	320 Move W1, 5
	321 Call 0x1C17D6C
	322 Compare X0, 0
	323 JumpIfEqual {437}
	324 Move W8, [X0+24]
	325 Compare W8, 0
	326 JumpIfEqual {439}
	327 Move X9, [X29]
	328 NotImplemented "Instruction CMP not yet implemented."
	329 Move [X0+32], X9
	330 NotImplemented "Instruction CMP not yet implemented."
	331 Move [X0+40], X24
	332 Move X9, [X27]
	333 NotImplemented "Instruction CMP not yet implemented."
	334 Move [X0+48], X9
	335 NotImplemented "Instruction CMP not yet implemented."
	336 Move [X0+56], X23
	337 Move X8, [X19]
	338 Move [X0+64], X8
	339 Move X1, X31
	340 Call String.Concat, X0
	341 Move X1, X0
	342 Move X0, X22
	343 Move X2, X31
	344 Call String.Concat, X0, X1
	345 Move X23, X31
	346 Move W19, 7
	347 Compare X21, 0
	348 JumpIfEqual {372}
	349 Move X8, [X21]
	350 Move X10, 0xB61000
	351 NotImplemented "Instruction LDRH not yet implemented."
	352 Move X10, [X10+3584]
	353 Move X1, [X10]
	354 Compare X9, 0
	355 JumpIfEqual {362}
	356 Move X10, [X8+176]
	357 Add X10, X10, 8
	358 NotImplemented "Instruction LDUR not yet implemented."
	359 NotImplemented "Instruction CMP not yet implemented."
	360 Subtract X9, X9, 1
	361 Add X10, X10, 16
	362 Move X0, X21
	363 Move W2, W31
	364 Call 0x1C5D788
	365 NotImplemented "Instruction LDRSW not yet implemented."
	366 Add X8, X8, X9
	367 Add X0, X8, 312
	368 Move X8, [X0]
	369 Move X1, [X0+8]
	370 Move X0, X21
	371 NotImplemented "Instruction BLR not yet implemented."
	372 Compare X23, 0
	373 JumpIfNotEqual {443}
	374 NotImplemented "Instruction CMP not yet implemented."
	375 Compare W19, 0
	376 JumpIfNotEqual {414}
	377 Move X8, 0xBA4000
	378 Move X8, [X8+3624]
	379 Move X1, X22
	380 Move X3, X31
	381 Move X0, [X8]
	382 Move X8, 0xB61000
	383 Move X8, [X8+2120]
	384 Move X2, [X8]
	385 Call String.Concat, X0, X1, X2
	386 Move X1, X0
	387 Move X0, [X31]
	388 Move X2, X31
	389 Call String.Concat, X0, X1
	390 Move X8, [X31+8]
	391 Move X4, X31
	392 Move X2, [X8+32]
	393 Move X8, 0xB9B000
	394 Move X8, [X8+3464]
	395 Move X1, [X8]
	396 Move X8, 0xB61000
	397 Move X8, [X8+2104]
	398 Move X20, [X31+96]
	399 Move X19, [X31+104]
	400 Move X22, [X31+80]
	401 Move X21, [X31+88]
	402 Move X24, [X31+64]
	403 Move X23, [X31+72]
	404 Move X3, [X8]
	405 Move X26, [X31+48]
	406 Move X25, [X31+56]
	407 Move X28, [X31+32]
	408 Move X27, [X31+40]
	409 Move X29, [X31+16]
	410 Move X30, [X31+24]
	411 Add X31, X31, 112
	412 Call String.Concat, X0, X1, X2, X3
	413 Return X0
	414 Move X20, [X31+96]
	415 Move X19, [X31+104]
	416 Move X22, [X31+80]
	417 Move X21, [X31+88]
	418 Move X24, [X31+64]
	419 Move X23, [X31+72]
	420 Move X26, [X31+48]
	421 Move X25, [X31+56]
	422 Move X28, [X31+32]
	423 Move X27, [X31+40]
	424 Move X29, [X31+16]
	425 Move X30, [X31+24]
	426 Add X31, X31, 112
	427 Return X0
	428 Call 0x1C17F20
	429 Call 0x1C17F20
	430 Call 0x1C17F28
	431 Call 0x1C17F20
	432 Call 0x1C17F28
	433 Call 0x1C17F28
	434 Call 0x1C17F28
	435 Call 0x1C17F28
	436 Call 0x1C17F28
	437 Call 0x1C17F20
	438 Call 0x1C17F28
	439 Call 0x1C17F28
	440 Call 0x1C17F28
	441 Call 0x1C17F28
	442 Call 0x1C17F20
	443 Move X0, X23
	444 Call 0x1C17F18
	445 Move X22, X20
	446 Move X22, X20
	447 NotImplemented "Instruction CMP not yet implemented."
	448 Call 0x3EB2AD0
	449 Move X23, [X0]
	450 Call 0x3EB2AE0
	451 Move W19, W31
	452 Compare X21, 0
	453 JumpIfNotEqual {349}
	454 Move X19, X0
	455 Move X23, X31
	456 Move X19, X0
	457 Compare X21, 0
	458 JumpIfEqual {482}
	459 Move X8, [X21]
	460 Move X10, 0xB61000
	461 NotImplemented "Instruction LDRH not yet implemented."
	462 Move X10, [X10+3584]
	463 Move X1, [X10]
	464 Compare X9, 0
	465 JumpIfEqual {472}
	466 Move X10, [X8+176]
	467 Add X10, X10, 8
	468 NotImplemented "Instruction LDUR not yet implemented."
	469 NotImplemented "Instruction CMP not yet implemented."
	470 Subtract X9, X9, 1
	471 Add X10, X10, 16
	472 Move X0, X21
	473 Move W2, W31
	474 Call 0x1C5D788
	475 NotImplemented "Instruction LDRSW not yet implemented."
	476 Add X8, X8, X9
	477 Add X0, X8, 312
	478 Move X8, [X0]
	479 Move X1, [X0+8]
	480 Move X0, X21
	481 NotImplemented "Instruction BLR not yet implemented."
	482 Compare X23, 0
	483 JumpIfEqual {520}
	484 Move X0, X23
	485 Call 0x1C17F18
	486 NotImplemented "Instruction CMP not yet implemented."
	487 Call 0x3EB2AD0
	488 Move X23, [X0]
	489 Call 0x3EB2AE0
	490 Move X19, X0
	491 Move X23, X31
	492 Move X19, X0
	493 Compare X21, 0
	494 JumpIfEqual {518}
	495 Move X8, [X21]
	496 Move X10, 0xB61000
	497 NotImplemented "Instruction LDRH not yet implemented."
	498 Move X10, [X10+3584]
	499 Move X1, [X10]
	500 Compare X9, 0
	501 JumpIfEqual {508}
	502 Move X10, [X8+176]
	503 Add X10, X10, 8
	504 NotImplemented "Instruction LDUR not yet implemented."
	505 NotImplemented "Instruction CMP not yet implemented."
	506 Subtract X9, X9, 1
	507 Add X10, X10, 16
	508 Move X0, X21
	509 Move W2, W31
	510 Call 0x1C5D788
	511 NotImplemented "Instruction LDRSW not yet implemented."
	512 Add X8, X8, X9
	513 Add X0, X8, 312
	514 Move X8, [X0]
	515 Move X1, [X0+8]
	516 Move X0, X21
	517 NotImplemented "Instruction BLR not yet implemented."
	518 Compare X23, 0
	519 JumpIfNotEqual {522}
	520 Move X0, X19
	521 Call 0x1D2D690
	522 Move X0, X23
	523 Call 0x1C17F18
	524 Call 0x1991590

Method: System.Void .ctor()

Disassembly:
	0x035936B8 LDR X0, [X0 + 0x6C0]
	0x035936BC BL 0x1C16CF4

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

