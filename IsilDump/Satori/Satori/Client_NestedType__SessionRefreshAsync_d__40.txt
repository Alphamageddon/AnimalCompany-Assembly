Type: Satori.Client/<SessionRefreshAsync>d__40

Method: System.Void MoveNext()

Disassembly:
	0x035A6558 BL 0x269F5D0
	0x035A655C ADRP X8, 0xB91000
	0x035A6560 LDR X8, [X8 + 0x3B0]
	0x035A6564 STR X0, [X31 + 0x8]
	0x035A6568 LDR X1, [X8]
	0x035A656C ADD X0, X31, 0x8
	0x035A6570 BL 0x2677430
	0x035A6574 TBNZ X0, 0x0, 0x35A63DC
	0x035A6578 STR W31, [X19]
	0x035A657C LDR X8, [X31 + 0x8]
	0x035A6580 STR X8, [X19 + 0x58]
	0x035A6584 LDR X0, [X23]
	0x035A6588 LDR W8, [X0 + 0xE0]
	0x035A658C CBNZ W8, 0x35A6594
	0x035A6590 BL 0x1C16DFC
	0x035A6594 ADRP X8, 0xB91000
	0x035A6598 LDR X8, [X8 + 0x5B0]
	0x035A659C ADD X0, X19, 0x8
	0x035A65A0 LDR X3, [X8]
	0x035A65A4 ADD X1, X31, 0x8
	0x035A65A8 MOV X2, X19
	0x035A65AC BL 0x21893E0
	0x035A65B0 B 0x35A66F8
	0x035A65B4 ADRP X8, 0xB91000
	0x035A65B8 LDR X8, [X8 + 0x5A8]
	0x035A65BC LDR X0, [X8]
	0x035A65C0 BL 0x1C16F10
	0x035A65C4 MOV X21, X0
	0x035A65C8 MOV X1, X31
	0x035A65CC BL 0x33BDD8C
	0x035A65D0 CBZ X21, 0x35A6710
	0x035A65D4 LDR V0, [X19 + 0x4]
	0x035A65D8 UNIMPLEMENTED
	0x035A65DC STR V0, [X21 + 0x1]
	0x035A65E0 LDRB W8, [X19 + 0x50]
	0x035A65E4 STRB W8, [X21 + 0x20]
	0x035A65E8 CBZ X20, 0x35A6714
	0x035A65EC LDR X22, [X19 + 0x28]
	0x035A65F0 CBZ X22, 0x35A6718
	0x035A65F4 LDR X8, [X22]
	0x035A65F8 LDR X20, [X20 + 0x40]
	0x035A65FC LDR X1, [X24]
	0x035A6600 LDRH W9, [X8 + 0x12E]
	0x035A6604 CBZ X9, 0x35A6628
	0x035A6608 LDR X10, [X8 + 0xB0]
	0x035A660C ADD X10, X10, 0x8
	0x035A6610 LDUR X11, [X10 - 0x8]
	0x035A6614 CMP X11, X1
	0x035A6618 B.EQ 0x35A6638
	0x035A661C SUBS X9, X9, 0x1
	0x035A6620 ADD X10, X10, 0x10
	0x035A6624 B.NE 0x35A6610
	0x035A6628 MOV X0, X22
	0x035A662C MOV W2, W31
	0x035A6630 BL 0x1C5C788
	0x035A6634 B 0x35A6644
	0x035A6638 LDRSW X9, [X10]
	0x035A663C ADD X8, X8, X9, 0x4, LSL
	0x035A6640 ADD X0, X8, 0x138
	0x035A6644 LDP X8, X1, [X0]
	0x035A6648 MOV X0, X22
	0x035A664C BLR X8
	0x035A6650 MOV X1, X0
	0x035A6654 CBZ X20, 0x35A671C
	0x035A6658 LDP X3, X4, [X19 + 0x30]
	0x035A665C MOV X0, X20
	0x035A6660 MOV X2, X21
	0x035A6664 BL 0x3597630
	0x035A6668 CBZ X0, 0x35A6720
	0x035A666C MOV X1, X31
	0x035A6670 BL 0x33ED394
	0x035A6674 STR X0, [X31]
	0x035A6678 ADD X0, X31, 0x0
	0x035A667C MOV X1, X31
	0x035A6680 BL 0x32C3A80
	0x035A6684 TBZ X0, 0x0, 0x35A66BC
	0x035A6688 ADD X0, X31, 0x0
	0x035A668C MOV X1, X31
	0x035A6690 BL 0x32C3B4C
	0x035A6694 MOVN W8, 0x1
	0x035A6698 STR W8, [X19], #0x8
	0x035A669C LDR X0, [X23]
	0x035A66A0 LDR W8, [X0 + 0xE0]
	0x035A66A4 CBNZ W8, 0x35A66AC
	0x035A66A8 BL 0x1C16DFC
	0x035A66AC MOV X0, X19
	0x035A66B0 MOV X1, X31
	0x035A66B4 BL 0x32C4864
	0x035A66B8 B 0x35A66F8
	0x035A66BC MOVZ W8, 0x1
	0x035A66C0 STR W8, [X19]
	0x035A66C4 LDR X8, [X31]
	0x035A66C8 STR X8, [X19 + 0x60]
	0x035A66CC LDR X0, [X23]
	0x035A66D0 LDR W8, [X0 + 0xE0]
	0x035A66D4 CBNZ W8, 0x35A66DC
	0x035A66D8 BL 0x1C16DFC
	0x035A66DC ADRP X8, 0xB91000
	0x035A66E0 LDR X8, [X8 + 0x5B8]
	0x035A66E4 ADD X0, X19, 0x8
	0x035A66E8 LDR X3, [X8]
	0x035A66EC ADD X1, X31, 0x0
	0x035A66F0 MOV X2, X19
	0x035A66F4 BL 0x218AAA4
	0x035A66F8 LDP X20, X19, [X31 + 0x40]
	0x035A66FC LDP X22, X21, [X31 + 0x30]
	0x035A6700 LDP X24, X23, [X31 + 0x20]
	0x035A6704 LDR X30, [X31 + 0x10]
	0x035A6708 ADD X31, X31, 0x50
	0x035A670C RET
	0x035A6710 BL 0x1C16F20
	0x035A6714 BL 0x1C16F20
	0x035A6718 BL 0x1C16F20
	0x035A671C BL 0x1C16F20
	0x035A6720 BL 0x1C16F20
	0x035A6724 BL 0x1C16F20
	0x035A6728 BL 0x1C16F20
	0x035A672C BL 0x1C16F20
	0x035A6730 BL 0x1C16F20
	0x035A6734 B 0x35A6798
	0x035A6738 B 0x35A6798
	0x035A673C B 0x35A6798
	0x035A6740 B 0x35A6798
	0x035A6744 B 0x35A6798
	0x035A6748 B 0x35A6798
	0x035A674C B 0x35A6798
	0x035A6750 B 0x35A6798
	0x035A6754 B 0x35A6798
	0x035A6758 B 0x35A6798
	0x035A675C B 0x35A6798
	0x035A6760 B 0x35A6798
	0x035A6764 B 0x35A6798
	0x035A6768 B 0x35A6798
	0x035A676C B 0x35A6798
	0x035A6770 B 0x35A6798
	0x035A6774 B 0x35A6798
	0x035A6778 B 0x35A6798
	0x035A677C B 0x35A6798
	0x035A6780 B 0x35A6798
	0x035A6784 B 0x35A6798
	0x035A6788 B 0x35A6798
	0x035A678C B 0x35A6798
	0x035A6790 B 0x35A6798
	0x035A6794 B 0x35A6798
	0x035A6798 MOV X20, X0
	0x035A679C CMP W1, 0x1
	0x035A67A0 B.NE 0x35A6830
	0x035A67A4 MOV X0, X20
	0x035A67A8 BL 0x3EB1AD0
	0x035A67AC MOV X20, X0
	0x035A67B0 ADRP X0, 0xB4D000
	0x035A67B4 LDR X0, [X0 + 0x7D0]
	0x035A67B8 BL 0x1C16D08
	0x035A67BC LDR X8, [X20]
	0x035A67C0 LDR X1, [X8]
	0x035A67C4 BL 0x1C17270
	0x035A67C8 TBZ X0, 0x0, 0x35A6808
	0x035A67CC LDR X20, [X20]
	0x035A67D0 BL 0x3EB1AE0
	0x035A67D4 MOVN W8, 0x1
	0x035A67D8 STR W8, [X19], #0x8
	0x035A67DC ADRP X0, 0xB50000
	0x035A67E0 LDR X0, [X0 + 0x280]
	0x035A67E4 BL 0x1C16D08
	0x035A67E8 LDR W8, [X0 + 0xE0]
	0x035A67EC CBNZ W8, 0x35A67F4
	0x035A67F0 BL 0x1C16DFC
	0x035A67F4 MOV X0, X19
	0x035A67F8 MOV X1, X20
	0x035A67FC MOV X2, X31
	0x035A6800 BL 0x32C4908
	0x035A6804 B 0x35A66F8
	0x035A6808 MOVZ W0, 0x8
	0x035A680C BL 0x3EB1AF0
	0x035A6810 LDR X8, [X20]
	0x035A6814 STR X8, [X0]
	0x035A6818 ADRP X1, 0x90E000
	0x035A681C ADD X1, X1, 0xE58
	0x035A6820 MOV X2, X31
	0x035A6824 BL 0x3EB1B00
	0x035A6828 MOV X20, X0
	0x035A682C BL 0x3EB1AE0
	0x035A6830 MOV X0, X20
	0x035A6834 BL 0x1D2C690
	0x035A6838 BL 0x1990590
	0x035A683C STR X30, [X31 - 0x30]!
	0x035A6840 STP X22, X21, [X31 + 0x10]
	0x035A6844 STP X20, X19, [X31 + 0x20]
	0x035A6848 ADRP X21, 0xE3A000
	0x035A684C ADRP X22, 0xB50000
	0x035A6850 LDRB W8, [X21 + 0x19]
	0x035A6854 LDR X22, [X22 + 0x280]
	0x035A6858 MOV X19, X1
	0x035A685C MOV X20, X0
	0x035A6860 TBNZ X8, 0x0, 0x35A6878
	0x035A6864 ADRP X0, 0xB50000
	0x035A6868 LDR X0, [X0 + 0x280]
	0x035A686C BL 0x1C16CF4
	0x035A6870 MOVZ W8, 0x1
	0x035A6874 STRB W8, [X21 + 0x19]
	0x035A6878 LDR X0, [X22]
	0x035A687C LDR W8, [X0 + 0xE0]
	0x035A6880 CBNZ W8, 0x35A6888
	0x035A6884 BL 0x1C16DFC
	0x035A6888 ADD X0, X20, 0x8
	0x035A688C MOV X1, X19
	0x035A6890 LDP X20, X19, [X31 + 0x20]
	0x035A6894 LDP X22, X21, [X31 + 0x10]
	0x035A6898 MOV X2, X31
	0x035A689C LDR X30, [X31], #0x30
	0x035A68A0 B 0x32C477C
	0x035A68A4 LDR X0, [X0 + 0x10]
	0x035A68A8 RET
	0x035A68AC LDR X0, [X0 + 0x18]
	0x035A68B0 RET
	0x035A68B4 LDR X0, [X0 + 0x20]
	0x035A68B8 RET
	0x035A68BC LDR X0, [X0 + 0x28]
	0x035A68C0 RET
	0x035A68C4 LDR X0, [X0 + 0x30]
	0x035A68C8 RET
	0x035A68CC STR X30, [X31 - 0x40]!
	0x035A68D0 STP X24, X23, [X31 + 0x10]
	0x035A68D4 STP X22, X21, [X31 + 0x20]
	0x035A68D8 STP X20, X19, [X31 + 0x30]
	0x035A68DC MOV X23, X1
	0x035A68E0 MOV X1, X31
	0x035A68E4 MOV X19, X5
	0x035A68E8 MOV X20, X4
	0x035A68EC MOV X21, X3
	0x035A68F0 MOV X22, X2
	0x035A68F4 MOV X24, X0
	0x035A68F8 BL 0x33BDD8C
	0x035A68FC STP X23, X22, [X24 + 0x10]
	0x035A6900 STP X21, X20, [X24 + 0x20]
	0x035A6904 STR X19, [X24 + 0x30]
	0x035A6908 LDP X20, X19, [X31 + 0x30]
	0x035A690C LDP X22, X21, [X31 + 0x20]
	0x035A6910 LDP X24, X23, [X31 + 0x10]
	0x035A6914 LDR X30, [X31], #0x40
	0x035A6918 RET
	0x035A691C STR X30, [X31 - 0x20]!
	0x035A6920 STP X20, X19, [X31 + 0x10]
	0x035A6924 MOV X19, X1
	0x035A6928 MOV X1, X31
	0x035A692C MOV X20, X0
	0x035A6930 BL 0x35F97CC
	0x035A6934 MOV X0, X20
	0x035A6938 MOV X1, X19
	0x035A693C LDP X20, X19, [X31 + 0x10]
	0x035A6940 MOV X2, X31
	0x035A6944 LDR X30, [X31], #0x20
	0x035A6948 B 0x35F97DC
	0x035A694C STR X30, [X31 - 0x40]!
	0x035A6950 STP X24, X23, [X31 + 0x10]
	0x035A6954 STP X22, X21, [X31 + 0x20]
	0x035A6958 STP X20, X19, [X31 + 0x30]
	0x035A695C ADRP X22, 0xE3A000
	0x035A6960 LDRB W8, [X22 + 0x1B]
	0x035A6964 MOV X19, X2
	0x035A6968 MOV X20, X1
	0x035A696C MOV X21, X0
	0x035A6970 TBNZ X8, 0x0, 0x35A6994
	0x035A6974 ADRP X0, 0xB91000
	0x035A6978 LDR X0, [X0 + 0x5C0]
	0x035A697C BL 0x1C16CF4
	0x035A6980 ADRP X0, 0xB50000
	0x035A6984 LDR X0, [X0 + 0x178]
	0x035A6988 BL 0x1C16CF4
	0x035A698C MOVZ W8, 0x1
	0x035A6990 STRB W8, [X22 + 0x1B]
	0x035A6994 CBZ X20, 0x35A6AAC
	0x035A6998 ADRP X23, 0xB50000
	0x035A699C LDR X23, [X23 + 0x178]
	0x035A69A0 LDR X22, [X20 + 0x18]
	0x035A69A4 LDR X0, [X23]
	0x035A69A8 LDR W8, [X0 + 0xE0]
	0x035A69AC CBNZ W8, 0x35A69B4
	0x035A69B0 BL 0x1C16DFC
	0x035A69B4 ADRP X24, 0xE32000
	0x035A69B8 LDRB W8, [X24 + 0x939]
	0x035A69BC CBNZ W8, 0x35A69D4
	0x035A69C0 ADRP X0, 0xB50000
	0x035A69C4 LDR X0, [X0 + 0x178]
	0x035A69C8 BL 0x1C16CF4
	0x035A69CC MOVZ W8, 0x1
	0x035A69D0 STRB W8, [X24 + 0x939]
	0x035A69D4 LDR X0, [X23]
	0x035A69D8 LDR W8, [X0 + 0xE0]
	0x035A69DC CBNZ W8, 0x35A69E8
	0x035A69E0 BL 0x1C16DFC
	0x035A69E4 LDR X0, [X23]
	0x035A69E8 LDR X8, [X0 + 0xB8]
	0x035A69EC MOV X0, X22
	0x035A69F0 MOV X2, X31
	0x035A69F4 LDR X1, [X8 + 0x20]
	0x035A69F8 BL 0x35FBBD0
	0x035A69FC TBNZ X0, 0x0, 0x35A6A60
	0x035A6A00 LDR X0, [X23]
	0x035A6A04 LDR X22, [X20 + 0x18]
	0x035A6A08 LDR W8, [X0 + 0xE0]
	0x035A6A0C CBNZ W8, 0x35A6A14
	0x035A6A10 BL 0x1C16DFC
	0x035A6A14 ADRP X24, 0xE32000
	0x035A6A18 LDRB W8, [X24 + 0x93A]
	0x035A6A1C CBNZ W8, 0x35A6A34
	0x035A6A20 ADRP X0, 0xB50000
	0x035A6A24 LDR X0, [X0 + 0x178]
	0x035A6A28 BL 0x1C16CF4
	0x035A6A2C MOVZ W8, 0x1
	0x035A6A30 STRB W8, [X24 + 0x93A]
	0x035A6A34 LDR X0, [X23]
	0x035A6A38 LDR W8, [X0 + 0xE0]
	0x035A6A3C CBNZ W8, 0x35A6A48
	0x035A6A40 BL 0x1C16DFC
	0x035A6A44 LDR X0, [X23]
	0x035A6A48 LDR X8, [X0 + 0xB8]
	0x035A6A4C MOV X0, X22
	0x035A6A50 MOV X2, X31
	0x035A6A54 LDR X1, [X8 + 0x28]
	0x035A6A58 BL 0x35FBBD0
	0x035A6A5C TBZ X0, 0x0, 0x35A6A88
	0x035A6A60 LDR X22, [X20 + 0x38]
	0x035A6A64 CBZ X22, 0x35A6A88
	0x035A6A68 ADRP X8, 0xB91000
	0x035A6A6C LDR X8, [X8 + 0x5C0]
	0x035A6A70 LDR X0, [X8]
	0x035A6A74 BL 0x1C16F10
	0x035A6A78 MOV X1, X22
	0x035A6A7C MOV X23, X0
	0x035A6A80 BL 0x35A6AB0
	0x035A6A84 STR X23, [X20 + 0x38]
	0x035A6A88 MOV X0, X21
	0x035A6A8C MOV X1, X20
	0x035A6A90 MOV X2, X19
	0x035A6A94 LDP X20, X19, [X31 + 0x30]
	0x035A6A98 LDP X22, X21, [X31 + 0x20]
	0x035A6A9C LDP X24, X23, [X31 + 0x10]
	0x035A6AA0 MOV X3, X31
	0x035A6AA4 LDR X30, [X31], #0x40
	0x035A6AA8 B 0x35F987C
	0x035A6AAC BL 0x1C16F20
	0x035A6AB0 STP X30, X25, [X31 - 0x40]!
	0x035A6AB4 STP X24, X23, [X31 + 0x10]
	0x035A6AB8 STP X22, X21, [X31 + 0x20]
	0x035A6ABC STP X20, X19, [X31 + 0x30]
	0x035A6AC0 ADRP X21, 0xE3A000
	0x035A6AC4 LDRB W8, [X21 + 0x1C]
	0x035A6AC8 MOV X20, X1
	0x035A6ACC MOV X19, X0
	0x035A6AD0 TBNZ X8, 0x0, 0x35A6B30
	0x035A6AD4 ADRP X0, 0xB50000
	0x035A6AD8 LDR X0, [X0 + 0x258]
	0x035A6ADC BL 0x1C16CF4

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X20, 0xE3B000
	011 Move W8, [X20+20]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {52}
	017 Move X0, 0xB92000
	018 Move X0, [X0+1392]
	019 Call 0x1C17CF4
	020 Move X0, 0xB92000
	021 Move X0, [X0+1400]
	022 Call 0x1C17CF4
	023 Move X0, 0xB92000
	024 Move X0, [X0+856]
	025 Call 0x1C17CF4
	026 Move X0, 0xB92000
	027 Move X0, [X0+616]
	028 Call 0x1C17CF4
	029 Move X0, 0xB92000
	030 Move X0, [X0+864]
	031 Call 0x1C17CF4
	032 Move X0, 0xB92000
	033 Move X0, [X0+656]
	034 Call 0x1C17CF4
	035 Move X0, 0xB92000
	036 Move X0, [X0+872]
	037 Call 0x1C17CF4
	038 Move X0, 0xB50000
	039 Move X0, [X0+632]
	040 Call 0x1C17CF4
	041 Move X0, 0xB92000
	042 Move X0, [X0+880]
	043 Call 0x1C17CF4
	044 Move X0, 0xB92000
	045 Move X0, [X0+888]
	046 Call 0x1C17CF4
	047 Move X0, 0xB92000
	048 Move X0, [X0+896]
	049 Call 0x1C17CF4
	050 Move W8, 1
	051 Move [X20+20], W8
	052 Move [X31+8], X31
	053 Move X25, 0xB92000
	054 Move W8, [X19]
	055 Move X25, [X25+616]
	056 Compare W8, 0
	057 JumpIfEqual {94}
	058 Move X8, [X19+32]
	059 Compare X8, 0
	060 JumpIfEqual {308}
	061 Move X9, 0xB50000
	062 Move X9, [X9+632]
	063 Move X10, 0xB92000
	064 Move X9, [X9]
	065 Move X9, [X9+184]
	066 Move X10, [X10+1392]
	067 Move X22, [X8+64]
	068 Move X21, [X8+48]
	069 Move X20, [X9]
	070 Move X0, [X10]
	071 Call 0x1C17F10
	072 Move X23, X0
	073 Move X1, X31
	074 Call Object..ctor, X0
	075 Move X24, [X19+40]
	076 Compare X24, 0
	077 JumpIfEqual {309}
	078 Move X10, 0xB92000
	079 Move X8, [X24]
	080 Move X10, [X10+656]
	081 NotImplemented "Instruction LDRH not yet implemented."
	082 Move X1, [X10]
	083 Compare X9, 0
	084 JumpIfEqual {91}
	085 Move X10, [X8+176]
	086 Add X10, X10, 8
	087 NotImplemented "Instruction LDUR not yet implemented."
	088 NotImplemented "Instruction CMP not yet implemented."
	089 Subtract X9, X9, 1
	090 Add X10, X10, 16
	091 Move W2, 5
	092 Move X0, X24
	093 Call 0x1C5D788
	094 Move X8, [X19+64]
	095 Move TEMP, 0
	096 Not TEMP
	097 Move W9, TEMP
	098 Move [X31+8], X8
	099 Move [X19+64], X31
	100 Move [X19], W9
	101 Move W9, [X10]
	102 Add W9, W9, 5
	103 Add X8, X8, W9
	104 Add X0, X8, 312
	105 Move X8, [X0]
	106 Move X1, [X0+8]
	107 Move X0, X24
	108 NotImplemented "Instruction BLR not yet implemented."
	109 Compare X23, 0
	110 JumpIfEqual {310}
	111 Move [X23+16], X0
	112 Compare X22, 0
	113 JumpIfEqual {311}
	114 Move X4, [X19+48]
	115 Move X5, [X19+56]
	116 Move X0, X22
	117 Move X1, X21
	118 Move X2, X20
	119 Move X3, X23
	120 Call ApiClient.SatoriAuthenticateRefreshAsync, X0, X1, X2, X3, X4
	121 Compare X0, 0
	122 JumpIfEqual {312}
	123 Move X8, 0xB92000
	124 Move X8, [X8+896]
	125 Move X1, [X8]
	126 Call Task`1<Object>.GetAwaiter, X0
	127 Move X8, 0xB92000
	128 Move X8, [X8+888]
	129 Move [X31+8], X0
	130 Move X1, [X8]
	131 Add X0, X31, 8
	132 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	133 Move TEMP, X0
	134 And TEMP, TEMP, 1
	135 Compare TEMP, 1
	136 JumpIfNotEqual {175}
	137 Move X8, 0xB92000
	138 Move X8, [X8+880]
	139 Add X0, X31, 8
	140 Move X1, [X8]
	141 Call TaskAwaiter`1<Object>.GetResult, X0
	142 Move X24, 0xB92000
	143 Move X23, 0xB92000
	144 Move X21, [X19+40]
	145 Move X24, [X24+872]
	146 Move X23, [X23+864]
	147 Move X20, X0
	148 Compare X21, 0
	149 JumpIfEqual {159}
	150 Move X9, [X21]
	151 Move X8, [X24]
	152 Move W11, [X9+304]
	153 Move W10, [X8+304]
	154 NotImplemented "Instruction CMP not yet implemented."
	155 Move X9, [X9+200]
	156 Add X9, X9, X10
	157 NotImplemented "Instruction LDUR not yet implemented."
	158 NotImplemented "Instruction CMP not yet implemented."
	159 Compare X20, 0
	160 JumpIfEqual {313}
	161 Move X8, [X20]
	162 Move X1, [X23]
	163 NotImplemented "Instruction LDRH not yet implemented."
	164 Compare X9, 0
	165 JumpIfEqual {172}
	166 Move X10, [X8+176]
	167 Add X10, X10, 8
	168 NotImplemented "Instruction LDUR not yet implemented."
	169 NotImplemented "Instruction CMP not yet implemented."
	170 Subtract X9, X9, 1
	171 Add X10, X10, 16
	172 Move W2, 2
	173 Move X0, X20
	174 Call 0x1C5D788
	175 Move [X19], W31
	176 Move X8, [X31+8]
	177 Move [X19+64], X8
	178 Move X0, [X25]
	179 Move W8, [X0+224]
	180 Compare W8, 0
	181 JumpIfNotEqual {183}
	182 Call 0x1C17DFC
	183 Move X8, 0xB92000
	184 Move X8, [X8+1400]
	185 Add X0, X19, 8
	186 Move X3, [X8]
	187 Add X1, X31, 8
	188 Move X2, X19
	189 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	190 Move W9, [X10]
	191 Add W9, W9, 2
	192 Add X8, X8, W9
	193 Add X0, X8, 312
	194 Move X8, [X0]
	195 Move X1, [X0+8]
	196 Move X0, X20
	197 NotImplemented "Instruction BLR not yet implemented."
	198 Move X8, [X20]
	199 Move X1, [X23]
	200 Move X22, X0
	201 NotImplemented "Instruction LDRH not yet implemented."
	202 Compare X9, 0
	203 JumpIfEqual {210}
	204 Move X10, [X8+176]
	205 Add X10, X10, 8
	206 NotImplemented "Instruction LDUR not yet implemented."
	207 NotImplemented "Instruction CMP not yet implemented."
	208 Subtract X9, X9, 1
	209 Add X10, X10, 16
	210 Move W2, 1
	211 Move X0, X20
	212 Call 0x1C5D788
	213 Move W9, [X10]
	214 Add W9, W9, 1
	215 Add X8, X8, W9
	216 Add X0, X8, 312
	217 Move X8, [X0]
	218 Move X1, [X0+8]
	219 Move X0, X20
	220 NotImplemented "Instruction BLR not yet implemented."
	221 Move X20, X0
	222 Move X0, [X24]
	223 Call 0x1C17F10
	224 Move X21, X0
	225 Move X1, X31
	226 Call Object..ctor, X0
	227 Move [X21+32], X31
	228 Move X0, X21
	229 Move X1, X22
	230 Move X2, X20
	231 Call Session.Update, X0, X1, X2
	232 Move TEMP, 1
	233 Not TEMP
	234 Move W8, TEMP
	235 Move [X19+8], W8
	236 Move X0, [X25]
	237 Move X20, 0xB92000
	238 Move W8, [X0+224]
	239 Move X20, [X20+856]
	240 Compare W8, 0
	241 JumpIfNotEqual {243}
	242 Call 0x1C17DFC
	243 Move X2, [X20]
	244 Move X0, X19
	245 Move X1, X21
	246 Call AsyncTaskMethodBuilder`1<Object>.SetResult, X0, X1
	247 Move X20, [X31+64]
	248 Move X19, [X31+72]
	249 Move X22, [X31+48]
	250 Move X21, [X31+56]
	251 Move X24, [X31+32]
	252 Move X23, [X31+40]
	253 Move X30, [X31+16]
	254 Move X25, [X31+24]
	255 Add X31, X31, 80
	256 Return 
	257 Compare X20, 0
	258 JumpIfEqual {314}
	259 Move X8, [X20]
	260 Move X1, [X23]
	261 NotImplemented "Instruction LDRH not yet implemented."
	262 Compare X9, 0
	263 JumpIfEqual {270}
	264 Move X10, [X8+176]
	265 Add X10, X10, 8
	266 NotImplemented "Instruction LDUR not yet implemented."
	267 NotImplemented "Instruction CMP not yet implemented."
	268 Subtract X9, X9, 1
	269 Add X10, X10, 16
	270 Move W2, 2
	271 Move X0, X20
	272 Call 0x1C5D788
	273 Move W9, [X10]
	274 Add W9, W9, 2
	275 Add X8, X8, W9
	276 Add X0, X8, 312
	277 Move X8, [X0]
	278 Move X1, [X0+8]
	279 Move X0, X20
	280 NotImplemented "Instruction BLR not yet implemented."
	281 Move X8, [X20]
	282 Move X1, [X23]
	283 Move X22, X0
	284 NotImplemented "Instruction LDRH not yet implemented."
	285 Compare X9, 0
	286 JumpIfEqual {293}
	287 Move X10, [X8+176]
	288 Add X10, X10, 8
	289 NotImplemented "Instruction LDUR not yet implemented."
	290 NotImplemented "Instruction CMP not yet implemented."
	291 Subtract X9, X9, 1
	292 Add X10, X10, 16
	293 Move W2, 1
	294 Move X0, X20
	295 Call 0x1C5D788
	296 Move W9, [X10]
	297 Add W9, W9, 1
	298 Add X8, X8, W9
	299 Add X0, X8, 312
	300 Move X8, [X0]
	301 Move X1, [X0+8]
	302 Move X0, X20
	303 NotImplemented "Instruction BLR not yet implemented."
	304 Move X2, X0
	305 Move X0, X21
	306 Move X1, X22
	307 Call Session.Update, X0, X1, X2
	308 Call 0x1C17F20
	309 Call 0x1C17F20
	310 Call 0x1C17F20
	311 Call 0x1C17F20
	312 Call 0x1C17F20
	313 Call 0x1C17F20
	314 Call 0x1C17F20
	315 Move X20, X0
	316 NotImplemented "Instruction CMP not yet implemented."
	317 Move X0, X20
	318 Call 0x3EB2AD0
	319 Move X20, X0
	320 Move X0, 0xB4E000
	321 Move X0, [X0+2000]
	322 Call 0x1C17D08
	323 Move X8, [X20]
	324 Move X1, [X8]
	325 Call 0x1C18270
	326 Move TEMP, X0
	327 And TEMP, TEMP, 1
	328 Compare TEMP, 1
	329 JumpIfNotEqual {350}
	330 Move X20, [X20]
	331 Call 0x3EB2AE0
	332 Move TEMP, 1
	333 Not TEMP
	334 Move W8, TEMP
	335 Move [X19+8], W8
	336 Move X0, 0xB92000
	337 Move X0, [X0+616]
	338 Call 0x1C17D08
	339 Move W8, [X0+224]
	340 Compare W8, 0
	341 JumpIfNotEqual {343}
	342 Call 0x1C17DFC
	343 Move X0, 0xB92000
	344 Move X0, [X0+904]
	345 Call 0x1C17D08
	346 Move X2, X0
	347 Move X0, X19
	348 Move X1, X20
	349 Call AsyncTaskMethodBuilder`1<Object>.SetException, X0, X1
	350 Move W0, 8
	351 Call 0x3EB2AF0
	352 Move X8, [X20]
	353 Move [X0], X8
	354 Move X1, 0x90F000
	355 Add X1, X1, 3672
	356 Move X2, X31
	357 Call 0x3EB2B00
	358 Move X20, X0
	359 Call 0x3EB2AE0
	360 Move X0, X20
	361 Call 0x1D2D690
	362 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x035A6CA0 B 0x35A6CB0
	0x035A6CA4 LDRSW X9, [X10]
	0x035A6CA8 ADD X8, X8, X9, 0x4, LSL
	0x035A6CAC ADD X0, X8, 0x138
	0x035A6CB0 LDP X8, X1, [X0]
	0x035A6CB4 MOV X0, X20
	0x035A6CB8 BLR X8
	0x035A6CBC CBNZ X21, 0x35A6D70
	0x035A6CC0 MOV X0, X19
	0x035A6CC4 MOV X1, X31
	0x035A6CC8 BL 0x35F6E80
	0x035A6CCC CBZ X0, 0x35A6D68
	0x035A6CD0 MOV X1, X31
	0x035A6CD4 BL 0x36010B4
	0x035A6CD8 CBZ X0, 0x35A6D68
	0x035A6CDC ADRP X9, 0xB50000
	0x035A6CE0 ADRP X10, 0xB50000
	0x035A6CE4 LDR X8, [X0]
	0x035A6CE8 LDR X9, [X9 + 0x258]
	0x035A6CEC LDR X10, [X10 + 0x278]
	0x035A6CF0 MOV X19, X0
	0x035A6CF4 LDR X1, [X9]
	0x035A6CF8 LDRH W9, [X8 + 0x12E]
	0x035A6CFC LDR X20, [X10]
	0x035A6D00 CBZ X9, 0x35A6D24
	0x035A6D04 LDR X10, [X8 + 0xB0]
	0x035A6D08 ADD X10, X10, 0x8
	0x035A6D0C LDUR X11, [X10 - 0x8]
	0x035A6D10 CMP X11, X1
	0x035A6D14 B.EQ 0x35A6D34
	0x035A6D18 SUBS X9, X9, 0x1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xE3B000
	007 Move X21, 0xB92000
	008 Move W8, [X22+21]
	009 Move X21, [X21+616]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xB92000
	017 Move X0, [X0+912]
	018 Call 0x1C17CF4
	019 Move X0, 0xB92000
	020 Move X0, [X0+616]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+21], W8
	024 Move X0, [X21]
	025 Move X21, 0xB92000
	026 Move W8, [X0+224]
	027 Move X21, [X21+912]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X2, [X21]
	032 Add X0, X20, 8
	033 Move X1, X19
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Call AsyncTaskMethodBuilder`1<Object>.SetStateMachine, X0, X1
	040 Return 

