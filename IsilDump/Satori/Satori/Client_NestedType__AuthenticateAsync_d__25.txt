Type: Satori.Client/<AuthenticateAsync>d__25

Method: System.Void MoveNext()

Disassembly:
	0x035A0DCC ADRP X0, 0xB97000
	0x035A0DD0 LDR X0, [X0 + 0x290]
	0x035A0DD4 BL 0x1C16CF4
	0x035A0DD8 ADRP X0, 0xB97000
	0x035A0DDC LDR X0, [X0 + 0x3E8]
	0x035A0DE0 BL 0x1C16CF4
	0x035A0DE4 ADRP X0, 0xB97000
	0x035A0DE8 LDR X0, [X0 + 0x3F0]
	0x035A0DEC BL 0x1C16CF4
	0x035A0DF0 ADRP X0, 0xB96000
	0x035A0DF4 LDR X0, [X0 + 0xE40]
	0x035A0DF8 BL 0x1C16CF4
	0x035A0DFC ADRP X0, 0xB97000
	0x035A0E00 LDR X0, [X0 + 0x3A8]
	0x035A0E04 BL 0x1C16CF4
	0x035A0E08 ADRP X0, 0xB97000
	0x035A0E0C LDR X0, [X0 + 0x3B0]
	0x035A0E10 BL 0x1C16CF4
	0x035A0E14 ADRP X0, 0xB97000
	0x035A0E18 LDR X0, [X0 + 0x3B8]
	0x035A0E1C BL 0x1C16CF4
	0x035A0E20 MOVZ W8, 0x1
	0x035A0E24 STRB W8, [X20 + 0xFFE]
	0x035A0E28 STR X31, [X31 + 0x18]
	0x035A0E2C STP X31, X31, [X31]
	0x035A0E30 ADRP X23, 0xB56000
	0x035A0E34 ADRP X24, 0xB97000
	0x035A0E38 LDR W8, [X19]
	0x035A0E3C LDR X20, [X19 + 0x20]
	0x035A0E40 LDR X23, [X23 + 0x280]
	0x035A0E44 LDR X24, [X24 + 0x290]
	0x035A0E48 CBZ W8, 0x35A0E6C
	0x035A0E4C CMP W8, 0x1
	0x035A0E50 B.NE 0x35A0E98
	0x035A0E54 LDR X8, [X19 + 0x50]
	0x035A0E58 MOVN W9, 0x0
	0x035A0E5C STR X8, [X31]
	0x035A0E60 STR X31, [X19 + 0x50]
	0x035A0E64 STR W9, [X19]
	0x035A0E68 B 0x35A11AC
	0x035A0E6C LDR X8, [X19 + 0x48]
	0x035A0E70 MOVN W9, 0x0
	0x035A0E74 STR X8, [X31 + 0x8]
	0x035A0E78 STR X31, [X19 + 0x48]
	0x035A0E7C STR W9, [X19]
	0x035A0E80 ADRP X8, 0xB97000
	0x035A0E84 LDR X8, [X8 + 0x3A8]
	0x035A0E88 ADD X0, X31, 0x8
	0x035A0E8C LDR X1, [X8]
	0x035A0E90 BL 0x2677474
	0x035A0E94 B 0x35A1058
	0x035A0E98 CBZ X20, 0x35A1254
	0x035A0E9C LDRB W8, [X20 + 0x10]
	0x035A0EA0 CBZ W8, 0x35A1058
	0x035A0EA4 LDR X21, [X19 + 0x28]
	0x035A0EA8 CBZ X21, 0x35A1258
	0x035A0EAC LDR X8, [X21]
	0x035A0EB0 LDR X1, [X24]
	0x035A0EB4 LDRH W9, [X8 + 0x12E]
	0x035A0EB8 CBZ X9, 0x35A0EDC
	0x035A0EBC LDR X10, [X8 + 0xB0]
	0x035A0EC0 ADD X10, X10, 0x8
	0x035A0EC4 LDUR X11, [X10 - 0x8]
	0x035A0EC8 CMP X11, X1
	0x035A0ECC B.EQ 0x35A0EEC
	0x035A0ED0 SUBS X9, X9, 0x1
	0x035A0ED4 ADD X10, X10, 0x10
	0x035A0ED8 B.NE 0x35A0EC4
	0x035A0EDC MOVZ W2, 0x5
	0x035A0EE0 MOV X0, X21
	0x035A0EE4 BL 0x1C5C788
	0x035A0EE8 B 0x35A0EFC
	0x035A0EEC LDR W9, [X10]
	0x035A0EF0 ADD W9, W9, 0x5
	0x035A0EF4 ADD X8, X8, W9, 0x4, SXTW
	0x035A0EF8 ADD X0, X8, 0x138
	0x035A0EFC LDP X8, X1, [X0]
	0x035A0F00 MOV X0, X21
	0x035A0F04 BLR X8
	0x035A0F08 MOV X1, X31
	0x035A0F0C BL 0x32277A8
	0x035A0F10 TBNZ X0, 0x0, 0x35A1058
	0x035A0F14 ADRP X8, 0xB54000
	0x035A0F18 LDR X8, [X8 + 0x9F0]
	0x035A0F1C LDR X21, [X19 + 0x28]
	0x035A0F20 LDR X0, [X8]
	0x035A0F24 LDR W8, [X0 + 0xE0]
	0x035A0F28 CBNZ W8, 0x35A0F30
	0x035A0F2C BL 0x1C16DFC
	0x035A0F30 MOV X0, X31
	0x035A0F34 BL 0x33616A4
	0x035A0F38 ADRP X22, 0xB97000
	0x035A0F3C LDR X22, [X22 + 0x340]
	0x035A0F40 MOV X8, X0
	0x035A0F44 STR X8, [X31 + 0x18]
	0x035A0F48 LDR X0, [X22]
	0x035A0F4C LDR W8, [X0 + 0xE0]
	0x035A0F50 CBNZ W8, 0x35A0F5C
	0x035A0F54 BL 0x1C16DFC
	0x035A0F58 LDR X0, [X22]
	0x035A0F5C LDR X8, [X0 + 0xB8]
	0x035A0F60 LDR X1, [X8]
	0x035A0F64 ADD X0, X31, 0x18
	0x035A0F68 MOV X2, X31
	0x035A0F6C BL 0x335FC68
	0x035A0F70 CBZ X21, 0x35A125C
	0x035A0F74 LDR X8, [X21]
	0x035A0F78 LDR X1, [X24]
	0x035A0F7C MOV X22, X0
	0x035A0F80 LDRH W9, [X8 + 0x12E]
	0x035A0F84 CBZ X9, 0x35A0FA8
	0x035A0F88 LDR X10, [X8 + 0xB0]
	0x035A0F8C ADD X10, X10, 0x8
	0x035A0F90 LDUR X11, [X10 - 0x8]
	0x035A0F94 CMP X11, X1
	0x035A0F98 B.EQ 0x35A0FB8
	0x035A0F9C SUBS X9, X9, 0x1
	0x035A0FA0 ADD X10, X10, 0x10
	0x035A0FA4 B.NE 0x35A0F90
	0x035A0FA8 MOVZ W2, 0x7
	0x035A0FAC MOV X0, X21
	0x035A0FB0 BL 0x1C5C788
	0x035A0FB4 B 0x35A0FC8
	0x035A0FB8 LDR W9, [X10]
	0x035A0FBC ADD W9, W9, 0x7
	0x035A0FC0 ADD X8, X8, W9, 0x4, SXTW
	0x035A0FC4 ADD X0, X8, 0x138
	0x035A0FC8 LDP X8, X2, [X0]
	0x035A0FCC MOV X0, X21
	0x035A0FD0 MOV X1, X22
	0x035A0FD4 BLR X8
	0x035A0FD8 TBZ X0, 0x0, 0x35A1058
	0x035A0FDC LDP X1, X2, [X19 + 0x28]
	0x035A0FE0 LDR X3, [X19 + 0x38]
	0x035A0FE4 MOV X0, X20
	0x035A0FE8 BL 0x359F740
	0x035A0FEC CBZ X0, 0x35A1260
	0x035A0FF0 ADRP X8, 0xB97000
	0x035A0FF4 LDR X8, [X8 + 0x3B8]
	0x035A0FF8 LDR X1, [X8]
	0x035A0FFC BL 0x269F5D0
	0x035A1000 ADRP X8, 0xB96000
	0x035A1004 LDR X8, [X8 + 0x3B0]
	0x035A1008 STR X0, [X31 + 0x8]
	0x035A100C LDR X1, [X8]
	0x035A1010 ADD X0, X31, 0x8
	0x035A1014 BL 0x2677430
	0x035A1018 TBNZ X0, 0x0, 0x35A0E80
	0x035A101C STR W31, [X19]
	0x035A1020 LDR X8, [X31 + 0x8]
	0x035A1024 STR X8, [X19 + 0x48]
	0x035A1028 LDR X0, [X23]
	0x035A102C LDR W8, [X0 + 0xE0]
	0x035A1030 CBNZ W8, 0x35A1038
	0x035A1034 BL 0x1C16DFC
	0x035A1038 ADRP X8, 0xB96000
	0x035A103C LDR X8, [X8 + 0x3D8]
	0x035A1040 ADD X0, X19, 0x8
	0x035A1044 LDR X3, [X8]
	0x035A1048 ADD X1, X31, 0x8
	0x035A104C MOV X2, X19
	0x035A1050 BL 0x218926C
	0x035A1054 B 0x35A121C
	0x035A1058 ADRP X8, 0xB96000
	0x035A105C LDR X8, [X8 + 0x3D0]
	0x035A1060 LDR X0, [X8]
	0x035A1064 BL 0x1C16F10
	0x035A1068 MOV X21, X0
	0x035A106C MOV X1, X31
	0x035A1070 BL 0x33BDD8C
	0x035A1074 ADRP X8, 0xB95000
	0x035A1078 LDR X8, [X8 + 0xE40]
	0x035A107C LDR X0, [X8]
	0x035A1080 BL 0x1C16F10
	0x035A1084 ADRP X8, 0xB96000
	0x035A1088 LDR X8, [X8 + 0x3F0]
	0x035A108C MOV X22, X0
	0x035A1090 LDR X1, [X8]
	0x035A1094 BL 0x301B7C4
	0x035A1098 LDR X0, [X19 + 0x40]
	0x035A109C CBZ X0, 0x35A1234
	0x035A10A0 BL 0x35A1374
	0x035A10A4 MOV X1, X0
	0x035A10A8 CBZ X22, 0x35A1238
	0x035A10AC ADRP X9, 0xB96000
	0x035A10B0 LDR X9, [X9 + 0x3E8]
	0x035A10B4 LDR W10, [X22 + 0x1C]
	0x035A10B8 LDR X8, [X22 + 0x10]
	0x035A10BC LDR X9, [X9]
	0x035A10C0 ADD W10, W10, 0x1
	0x035A10C4 STR W10, [X22 + 0x1C]
	0x035A10C8 CBZ X8, 0x35A123C
	0x035A10CC LDRSW X10, [X22 + 0x18]
	0x035A10D0 LDR W11, [X8 + 0x18]
	0x035A10D4 CMP W10, W11
	0x035A10D8 B.CS 0x35A10F0
	0x035A10DC ADD W9, W10, 0x1
	0x035A10E0 ADD X8, X8, X10, 0x3, LSL
	0x035A10E4 STR W9, [X22 + 0x18]
	0x035A10E8 STR X1, [X8 + 0x20]
	0x035A10EC B 0x35A1104
	0x035A10F0 LDR X8, [X9 + 0x20]
	0x035A10F4 LDR X8, [X8 + 0xC0]
	0x035A10F8 LDR X2, [X8 + 0x70]
	0x035A10FC MOV X0, X22
	0x035A1100 BL 0x301BF90
	0x035A1104 CBZ X21, 0x35A1240
	0x035A1108 STR X22, [X21 + 0x10]
	0x035A110C CBZ X20, 0x35A1244
	0x035A1110 LDR X22, [X19 + 0x28]
	0x035A1114 CBZ X22, 0x35A1248
	0x035A1118 LDR X8, [X22]
	0x035A111C LDR X20, [X20 + 0x40]
	0x035A1120 LDR X1, [X24]
	0x035A1124 LDRH W9, [X8 + 0x12E]
	0x035A1128 CBZ X9, 0x35A114C
	0x035A112C LDR X10, [X8 + 0xB0]
	0x035A1130 ADD X10, X10, 0x8
	0x035A1134 LDUR X11, [X10 - 0x8]
	0x035A1138 CMP X11, X1
	0x035A113C B.EQ 0x35A115C
	0x035A1140 SUBS X9, X9, 0x1
	0x035A1144 ADD X10, X10, 0x10
	0x035A1148 B.NE 0x35A1134
	0x035A114C MOV X0, X22
	0x035A1150 MOV W2, W31
	0x035A1154 BL 0x1C5C788
	0x035A1158 B 0x35A1168
	0x035A115C LDRSW X9, [X10]
	0x035A1160 ADD X8, X8, X9, 0x4, LSL
	0x035A1164 ADD X0, X8, 0x138
	0x035A1168 LDP X8, X1, [X0]
	0x035A116C MOV X0, X22
	0x035A1170 BLR X8
	0x035A1174 MOV X1, X0
	0x035A1178 CBZ X20, 0x35A124C
	0x035A117C LDP X3, X4, [X19 + 0x30]
	0x035A1180 MOV X0, X20
	0x035A1184 MOV X2, X21
	0x035A1188 BL 0x3596BF4
	0x035A118C CBZ X0, 0x35A1250
	0x035A1190 MOV X1, X31
	0x035A1194 BL 0x33ED394
	0x035A1198 STR X0, [X31]
	0x035A119C ADD X0, X31, 0x0
	0x035A11A0 MOV X1, X31
	0x035A11A4 BL 0x32C3A80
	0x035A11A8 TBZ X0, 0x0, 0x35A11E0
	0x035A11AC ADD X0, X31, 0x0
	0x035A11B0 MOV X1, X31
	0x035A11B4 BL 0x32C3B4C
	0x035A11B8 MOVN W8, 0x1
	0x035A11BC STR W8, [X19], #0x8

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0xE40000
	009 Move W8, [X20+4088]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {47}
	015 Move X0, 0xB98000
	016 Move X0, [X0+840]
	017 Call 0x1C17CF4
	018 Move X0, 0xB98000
	019 Move X0, [X0+848]
	020 Call 0x1C17CF4
	021 Move X0, 0xB98000
	022 Move X0, [X0+856]
	023 Call 0x1C17CF4
	024 Move X0, 0xB98000
	025 Move X0, [X0+616]
	026 Call 0x1C17CF4
	027 Move X0, 0xB98000
	028 Move X0, [X0+864]
	029 Call 0x1C17CF4
	030 Move X0, 0xB98000
	031 Move X0, [X0+872]
	032 Call 0x1C17CF4
	033 Move X0, 0xB56000
	034 Move X0, [X0+632]
	035 Call 0x1C17CF4
	036 Move X0, 0xB98000
	037 Move X0, [X0+880]
	038 Call 0x1C17CF4
	039 Move X0, 0xB98000
	040 Move X0, [X0+888]
	041 Call 0x1C17CF4
	042 Move X0, 0xB98000
	043 Move X0, [X0+896]
	044 Call 0x1C17CF4
	045 Move W8, 1
	046 Move [X20+4088], W8
	047 Move [X31+8], X31
	048 Move X24, 0xB98000
	049 Move W8, [X19]
	050 Move X24, [X24+616]
	051 Compare W8, 0
	052 JumpIfEqual {117}
	053 Move X8, [X19+32]
	054 Compare X8, 0
	055 JumpIfEqual {216}
	056 Move X9, 0xB56000
	057 Move X9, [X9+632]
	058 Move X10, 0xB98000
	059 Move X9, [X9]
	060 Move X9, [X9+184]
	061 Move X10, [X10+840]
	062 Move X22, [X8+64]
	063 Move X21, [X8+48]
	064 Move X20, [X9]
	065 Move X0, [X10]
	066 Call 0x1C17F10
	067 Move X23, X0
	068 Move X1, X31
	069 Call Object..ctor, X0
	070 Compare X23, 0
	071 JumpIfEqual {217}
	072 Move X8, [X19+40]
	073 Move [X23+32], X8
	074 Move V0, [X19+3]
	075 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	076 Move [X23+1], V0
	077 Compare X22, 0
	078 JumpIfEqual {218}
	079 Move X4, [X19+64]
	080 Move X5, [X19+72]
	081 Move X0, X22
	082 Move X1, X21
	083 Move X2, X20
	084 Move X3, X23
	085 Call ApiClient.SatoriAuthenticateAsync, X0, X1, X2, X3, X4
	086 Compare X0, 0
	087 JumpIfEqual {219}
	088 Move X8, 0xB98000
	089 Move X8, [X8+896]
	090 Move X1, [X8]
	091 Call Task`1<Object>.GetAwaiter, X0
	092 Move X8, 0xB98000
	093 Move X8, [X8+888]
	094 Move [X31+8], X0
	095 Move X1, [X8]
	096 Add X0, X31, 8
	097 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	098 Move TEMP, X0
	099 And TEMP, TEMP, 1
	100 Compare TEMP, 1
	101 JumpIfEqual {124}
	102 Move [X19], W31
	103 Move X8, [X31+8]
	104 Move [X19+80], X8
	105 Move X0, [X24]
	106 Move W8, [X0+224]
	107 Compare W8, 0
	108 JumpIfNotEqual {110}
	109 Call 0x1C17DFC
	110 Move X8, 0xB98000
	111 Move X8, [X8+848]
	112 Add X0, X19, 8
	113 Move X3, [X8]
	114 Add X1, X31, 8
	115 Move X2, X19
	116 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	117 Move X8, [X19+80]
	118 Move TEMP, 0
	119 Not TEMP
	120 Move W9, TEMP
	121 Move [X31+8], X8
	122 Move [X19+80], X31
	123 Move [X19], W9
	124 Move X8, 0xB98000
	125 Move X8, [X8+880]
	126 Add X0, X31, 8
	127 Move X1, [X8]
	128 Call TaskAwaiter`1<Object>.GetResult, X0
	129 Move X20, X0
	130 Compare X0, 0
	131 JumpIfEqual {215}
	132 Move X22, 0xB98000
	133 Move X8, [X20]
	134 Move X22, [X22+864]
	135 NotImplemented "Instruction LDRH not yet implemented."
	136 Move X1, [X22]
	137 Compare X9, 0
	138 JumpIfEqual {145}
	139 Move X10, [X8+176]
	140 Add X10, X10, 8
	141 NotImplemented "Instruction LDUR not yet implemented."
	142 NotImplemented "Instruction CMP not yet implemented."
	143 Subtract X9, X9, 1
	144 Add X10, X10, 16
	145 Move W2, 2
	146 Move X0, X20
	147 Call 0x1C5D788
	148 Move W9, [X10]
	149 Add W9, W9, 2
	150 Add X8, X8, W9
	151 Add X0, X8, 312
	152 Move X8, [X0]
	153 Move X1, [X0+8]
	154 Move X0, X20
	155 NotImplemented "Instruction BLR not yet implemented."
	156 Move X8, [X20]
	157 Move X1, [X22]
	158 Move X21, X0
	159 NotImplemented "Instruction LDRH not yet implemented."
	160 Compare X9, 0
	161 JumpIfEqual {168}
	162 Move X10, [X8+176]
	163 Add X10, X10, 8
	164 NotImplemented "Instruction LDUR not yet implemented."
	165 NotImplemented "Instruction CMP not yet implemented."
	166 Subtract X9, X9, 1
	167 Add X10, X10, 16
	168 Move W2, 1
	169 Move X0, X20
	170 Call 0x1C5D788
	171 Move W9, [X10]
	172 Add W9, W9, 1
	173 Add X8, X8, W9
	174 Add X0, X8, 312
	175 Move X8, [X0]
	176 Move X1, [X0+8]
	177 Move X0, X20
	178 NotImplemented "Instruction BLR not yet implemented."
	179 Move X8, 0xB97000
	180 Move X8, [X8+872]
	181 Move X22, X0
	182 Move X0, [X8]
	183 Call 0x1C17F10
	184 Move X20, X0
	185 Move X1, X31
	186 Call Object..ctor, X0
	187 Move [X20+32], X31
	188 Move X0, X20
	189 Move X1, X21
	190 Move X2, X22
	191 Call Session.Update, X0, X1, X2
	192 Move TEMP, 1
	193 Not TEMP
	194 Move W8, TEMP
	195 Move [X19+8], W8
	196 Move X0, [X24]
	197 Move X21, 0xB97000
	198 Move W8, [X0+224]
	199 Move X21, [X21+856]
	200 Compare W8, 0
	201 JumpIfNotEqual {203}
	202 Call 0x1C17DFC
	203 Move X2, [X21]
	204 Move X0, X19
	205 Move X1, X20
	206 Call AsyncTaskMethodBuilder`1<Object>.SetResult, X0, X1
	207 Move X20, [X31+48]
	208 Move X19, [X31+56]
	209 Move X22, [X31+32]
	210 Move X21, [X31+40]
	211 Move X24, [X31+16]
	212 Move X23, [X31+24]
	213 Move X30, [X31+64]
	214 Return 
	215 Call 0x1C17F20
	216 Call 0x1C17F20
	217 Call 0x1C17F20
	218 Call 0x1C17F20
	219 Call 0x1C17F20
	220 Move X20, X0
	221 NotImplemented "Instruction CMP not yet implemented."
	222 Move X0, X20
	223 Call 0x3EB2AD0
	224 Move X20, X0
	225 Move X0, 0xB53000
	226 Move X0, [X0+2000]
	227 Call 0x1C17D08
	228 Move X8, [X20]
	229 Move X1, [X8]
	230 Call 0x1C18270
	231 Move TEMP, X0
	232 And TEMP, TEMP, 1
	233 Compare TEMP, 1
	234 JumpIfNotEqual {255}
	235 Move X20, [X20]
	236 Call 0x3EB2AE0
	237 Move TEMP, 1
	238 Not TEMP
	239 Move W8, TEMP
	240 Move [X19+8], W8
	241 Move X0, 0xB97000
	242 Move X0, [X0+616]
	243 Call 0x1C17D08
	244 Move W8, [X0+224]
	245 Compare W8, 0
	246 JumpIfNotEqual {248}
	247 Call 0x1C17DFC
	248 Move X0, 0xB97000
	249 Move X0, [X0+904]
	250 Call 0x1C17D08
	251 Move X2, X0
	252 Move X0, X19
	253 Move X1, X20
	254 Call AsyncTaskMethodBuilder`1<Object>.SetException, X0, X1
	255 Move W0, 8
	256 Call 0x3EB2AF0
	257 Move X8, [X20]
	258 Move [X0], X8
	259 Move X1, 0x914000
	260 Add X1, X1, 3672
	261 Move X2, X31
	262 Call 0x3EB2B00
	263 Move X20, X0
	264 Call 0x3EB2AE0
	265 Move X0, X20
	266 Call 0x1D2D690
	267 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x035A11F8 CBNZ W8, 0x35A1200
	0x035A11FC BL 0x1C16DFC
	0x035A1200 ADRP X8, 0xB96000
	0x035A1204 LDR X8, [X8 + 0x3E0]
	0x035A1208 ADD X0, X19, 0x8
	0x035A120C LDR X3, [X8]
	0x035A1210 ADD X1, X31, 0x0
	0x035A1214 MOV X2, X19
	0x035A1218 BL 0x218A930
	0x035A121C LDP X20, X19, [X31 + 0x40]
	0x035A1220 LDP X22, X21, [X31 + 0x30]
	0x035A1224 LDP X24, X23, [X31 + 0x20]
	0x035A1228 LDR X30, [X31 + 0x10]
	0x035A122C ADD X31, X31, 0x50
	0x035A1230 RET
	0x035A1234 BL 0x1C16F20
	0x035A1238 BL 0x1C16F20
	0x035A123C BL 0x1C16F20
	0x035A1240 BL 0x1C16F20
	0x035A1244 BL 0x1C16F20
	0x035A1248 BL 0x1C16F20
	0x035A124C BL 0x1C16F20
	0x035A1250 BL 0x1C16F20
	0x035A1254 BL 0x1C16F20
	0x035A1258 BL 0x1C16F20
	0x035A125C BL 0x1C16F20
	0x035A1260 BL 0x1C16F20
	0x035A1264 B 0x35A12D0
	0x035A1268 B 0x35A12D0
	0x035A126C B 0x35A12D0
	0x035A1270 B 0x35A12D0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xE3F000
	007 Move X21, 0xB97000
	008 Move W8, [X22+4089]
	009 Move X21, [X21+616]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xB97000
	017 Move X0, [X0+912]
	018 Call 0x1C17CF4
	019 Move X0, 0xB97000
	020 Move X0, [X0+616]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+4089], W8
	024 Move X0, [X21]
	025 Move X21, 0xB97000
	026 Move W8, [X0+224]
	027 Move X21, [X21+912]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X2, [X21]
	032 Add X0, X20, 8
	033 Move X1, X19
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Call AsyncTaskMethodBuilder`1<Object>.SetStateMachine, X0, X1
	040 Return 

