Type: Satori.Client/<GetFlagDefaultAsync>d__33

Method: System.Void MoveNext()

Disassembly:
	0x035A3E24 ADD X8, X8, W9, 0x4, SXTW
	0x035A3E28 ADD X0, X8, 0x138
	0x035A3E2C LDP X8, X2, [X0]
	0x035A3E30 MOV X0, X21
	0x035A3E34 MOV X1, X22
	0x035A3E38 BLR X8
	0x035A3E3C TBZ X0, 0x0, 0x35A3EBC
	0x035A3E40 LDP X1, X2, [X19 + 0x28]
	0x035A3E44 LDR X3, [X19 + 0x38]
	0x035A3E48 MOV X0, X20
	0x035A3E4C BL 0x359F740
	0x035A3E50 CBZ X0, 0x35A4028
	0x035A3E54 ADRP X8, 0xB94000
	0x035A3E58 LDR X8, [X8 + 0x3B8]
	0x035A3E5C LDR X1, [X8]
	0x035A3E60 BL 0x269F5D0
	0x035A3E64 ADRP X8, 0xB94000
	0x035A3E68 LDR X8, [X8 + 0x3B0]
	0x035A3E6C STR X0, [X31 + 0x8]
	0x035A3E70 LDR X1, [X8]
	0x035A3E74 ADD X0, X31, 0x8
	0x035A3E78 BL 0x2677430
	0x035A3E7C TBNZ X0, 0x0, 0x35A3CE4
	0x035A3E80 STR W31, [X19]
	0x035A3E84 LDR X8, [X31 + 0x8]
	0x035A3E88 STR X8, [X19 + 0x48]
	0x035A3E8C LDR X0, [X23]
	0x035A3E90 LDR W8, [X0 + 0xE0]
	0x035A3E94 CBNZ W8, 0x35A3E9C
	0x035A3E98 BL 0x1C16DFC
	0x035A3E9C ADRP X8, 0xB94000
	0x035A3EA0 LDR X8, [X8 + 0x4E0]
	0x035A3EA4 ADD X0, X19, 0x8
	0x035A3EA8 LDR X3, [X8]
	0x035A3EAC ADD X1, X31, 0x8
	0x035A3EB0 MOV X2, X19
	0x035A3EB4 BL 0x1FBF8E0
	0x035A3EB8 B 0x35A3FF4
	0x035A3EBC CBZ X20, 0x35A4018
	0x035A3EC0 LDR X21, [X19 + 0x28]
	0x035A3EC4 CBZ X21, 0x35A400C
	0x035A3EC8 LDR X8, [X21]
	0x035A3ECC LDR X20, [X20 + 0x40]
	0x035A3ED0 LDR X1, [X24]
	0x035A3ED4 LDRH W9, [X8 + 0x12E]
	0x035A3ED8 CBZ X9, 0x35A3EFC
	0x035A3EDC LDR X10, [X8 + 0xB0]
	0x035A3EE0 ADD X10, X10, 0x8
	0x035A3EE4 LDUR X11, [X10 - 0x8]
	0x035A3EE8 CMP X11, X1
	0x035A3EEC B.EQ 0x35A3F0C
	0x035A3EF0 SUBS X9, X9, 0x1
	0x035A3EF4 ADD X10, X10, 0x10
	0x035A3EF8 B.NE 0x35A3EE4
	0x035A3EFC MOV X0, X21
	0x035A3F00 MOV W2, W31
	0x035A3F04 BL 0x1C5C788
	0x035A3F08 B 0x35A3F18
	0x035A3F0C LDRSW X9, [X10]
	0x035A3F10 ADD X8, X8, X9, 0x4, LSL
	0x035A3F14 ADD X0, X8, 0x138
	0x035A3F18 LDP X8, X1, [X0]
	0x035A3F1C MOV X0, X21
	0x035A3F20 BLR X8
	0x035A3F24 MOV X1, X0
	0x035A3F28 CBZ X20, 0x35A4010
	0x035A3F2C LDP X3, X4, [X19 + 0x30]
	0x035A3F30 LDR X2, [X19 + 0x40]
	0x035A3F34 MOV X0, X20
	0x035A3F38 BL 0x359710C
	0x035A3F3C CBZ X0, 0x35A4014
	0x035A3F40 ADRP X8, 0xB94000
	0x035A3F44 LDR X8, [X8 + 0x500]
	0x035A3F48 LDR X1, [X8]
	0x035A3F4C BL 0x269F5D0
	0x035A3F50 ADRP X8, 0xB94000
	0x035A3F54 LDR X8, [X8 + 0x4F8]
	0x035A3F58 STR X0, [X31]
	0x035A3F5C LDR X1, [X8]
	0x035A3F60 ADD X0, X31, 0x0
	0x035A3F64 BL 0x2677430
	0x035A3F68 TBZ X0, 0x0, 0x35A3FB8
	0x035A3F6C ADRP X8, 0xB94000
	0x035A3F70 LDR X8, [X8 + 0x4F0]
	0x035A3F74 ADD X0, X31, 0x0
	0x035A3F78 LDR X1, [X8]
	0x035A3F7C BL 0x2677474
	0x035A3F80 MOVN W8, 0x1
	0x035A3F84 STR W8, [X19], #0x8
	0x035A3F88 MOV X20, X0
	0x035A3F8C LDR X0, [X23]
	0x035A3F90 ADRP X21, 0xB94000
	0x035A3F94 LDR W8, [X0 + 0xE0]
	0x035A3F98 LDR X21, [X21 + 0x168]
	0x035A3F9C CBNZ W8, 0x35A3FA4
	0x035A3FA0 BL 0x1C16DFC
	0x035A3FA4 LDR X2, [X21]
	0x035A3FA8 MOV X0, X19
	0x035A3FAC MOV X1, X20
	0x035A3FB0 BL 0x26322B0
	0x035A3FB4 B 0x35A3FF4
	0x035A3FB8 MOVZ W8, 0x1
	0x035A3FBC STR W8, [X19]
	0x035A3FC0 LDR X8, [X31]
	0x035A3FC4 STR X8, [X19 + 0x50]
	0x035A3FC8 LDR X0, [X23]
	0x035A3FCC LDR W8, [X0 + 0xE0]
	0x035A3FD0 CBNZ W8, 0x35A3FD8
	0x035A3FD4 BL 0x1C16DFC
	0x035A3FD8 ADRP X8, 0xB94000
	0x035A3FDC LDR X8, [X8 + 0x4E8]
	0x035A3FE0 ADD X0, X19, 0x8
	0x035A3FE4 LDR X3, [X8]
	0x035A3FE8 ADD X1, X31, 0x0
	0x035A3FEC MOV X2, X19
	0x035A3FF0 BL 0x1FBF8E0
	0x035A3FF4 LDP X20, X19, [X31 + 0x40]
	0x035A3FF8 LDP X22, X21, [X31 + 0x30]
	0x035A3FFC LDP X24, X23, [X31 + 0x20]
	0x035A4000 LDR X30, [X31 + 0x10]
	0x035A4004 ADD X31, X31, 0x50
	0x035A4008 RET
	0x035A400C BL 0x1C16F20
	0x035A4010 BL 0x1C16F20
	0x035A4014 BL 0x1C16F20
	0x035A4018 BL 0x1C16F20
	0x035A401C BL 0x1C16F20
	0x035A4020 BL 0x1C16F20
	0x035A4024 BL 0x1C16F20
	0x035A4028 BL 0x1C16F20
	0x035A402C B 0x35A4088
	0x035A4030 B 0x35A4088
	0x035A4034 B 0x35A4088
	0x035A4038 B 0x35A4088
	0x035A403C B 0x35A4088
	0x035A4040 B 0x35A4088
	0x035A4044 B 0x35A4088
	0x035A4048 B 0x35A4088
	0x035A404C B 0x35A4088
	0x035A4050 B 0x35A4088
	0x035A4054 B 0x35A4088
	0x035A4058 B 0x35A4088
	0x035A405C B 0x35A4088
	0x035A4060 B 0x35A4088
	0x035A4064 B 0x35A4088
	0x035A4068 B 0x35A4088
	0x035A406C B 0x35A4088
	0x035A4070 B 0x35A4088
	0x035A4074 B 0x35A4088
	0x035A4078 B 0x35A4088
	0x035A407C B 0x35A4088
	0x035A4080 B 0x35A4088
	0x035A4084 B 0x35A4088
	0x035A4088 MOV X20, X0
	0x035A408C CMP W1, 0x1
	0x035A4090 B.NE 0x35A412C
	0x035A4094 MOV X0, X20
	0x035A4098 BL 0x3EB1AD0
	0x035A409C MOV X20, X0
	0x035A40A0 ADRP X0, 0xB4F000
	0x035A40A4 LDR X0, [X0 + 0x7D0]
	0x035A40A8 BL 0x1C16D08
	0x035A40AC LDR X8, [X20]
	0x035A40B0 LDR X1, [X8]
	0x035A40B4 BL 0x1C17270
	0x035A40B8 TBZ X0, 0x0, 0x35A4104
	0x035A40BC LDR X20, [X20]
	0x035A40C0 BL 0x3EB1AE0
	0x035A40C4 MOVN W8, 0x1
	0x035A40C8 STR W8, [X19], #0x8
	0x035A40CC ADRP X0, 0xB92000
	0x035A40D0 LDR X0, [X0 + 0xFD0]
	0x035A40D4 BL 0x1C16D08
	0x035A40D8 LDR W8, [X0 + 0xE0]
	0x035A40DC CBNZ W8, 0x35A40E4
	0x035A40E0 BL 0x1C16DFC
	0x035A40E4 ADRP X0, 0xB93000
	0x035A40E8 LDR X0, [X0 + 0x180]
	0x035A40EC BL 0x1C16D08
	0x035A40F0 MOV X2, X0
	0x035A40F4 MOV X0, X19
	0x035A40F8 MOV X1, X20
	0x035A40FC BL 0x26324C8
	0x035A4100 B 0x35A3FF4
	0x035A4104 MOVZ W0, 0x8
	0x035A4108 BL 0x3EB1AF0
	0x035A410C LDR X8, [X20]
	0x035A4110 STR X8, [X0]
	0x035A4114 ADRP X1, 0x910000
	0x035A4118 ADD X1, X1, 0xE58
	0x035A411C MOV X2, X31
	0x035A4120 BL 0x3EB1B00
	0x035A4124 MOV X20, X0
	0x035A4128 BL 0x3EB1AE0
	0x035A412C MOV X0, X20
	0x035A4130 BL 0x1D2C690
	0x035A4134 BL 0x1990590
	0x035A4138 STR X30, [X31 - 0x30]!
	0x035A413C STP X22, X21, [X31 + 0x10]
	0x035A4140 STP X20, X19, [X31 + 0x20]
	0x035A4144 ADRP X22, 0xE3C000
	0x035A4148 ADRP X21, 0xB92000
	0x035A414C LDRB W8, [X22 + 0xD]
	0x035A4150 LDR X21, [X21 + 0xFD0]
	0x035A4154 MOV X19, X1
	0x035A4158 MOV X20, X0
	0x035A415C TBNZ X8, 0x0, 0x35A4180
	0x035A4160 ADRP X0, 0xB93000
	0x035A4164 LDR X0, [X0 + 0x188]
	0x035A4168 BL 0x1C16CF4
	0x035A416C ADRP X0, 0xB92000
	0x035A4170 LDR X0, [X0 + 0xFD0]
	0x035A4174 BL 0x1C16CF4
	0x035A4178 MOVZ W8, 0x1
	0x035A417C STRB W8, [X22 + 0xD]
	0x035A4180 LDR X0, [X21]
	0x035A4184 ADRP X21, 0xB93000
	0x035A4188 LDR W8, [X0 + 0xE0]
	0x035A418C LDR X21, [X21 + 0x188]
	0x035A4190 CBNZ W8, 0x35A4198
	0x035A4194 BL 0x1C16DFC
	0x035A4198 LDR X2, [X21]
	0x035A419C ADD X0, X20, 0x8
	0x035A41A0 MOV X1, X19
	0x035A41A4 LDP X20, X19, [X31 + 0x20]
	0x035A41A8 LDP X22, X21, [X31 + 0x10]
	0x035A41AC LDR X30, [X31], #0x30
	0x035A41B0 B 0x2632228
	0x035A41B4 SUB X31, X31, 0x60
	0x035A41B8 STR X30, [X31 + 0x20]
	0x035A41BC STP X24, X23, [X31 + 0x30]
	0x035A41C0 STP X22, X21, [X31 + 0x40]
	0x035A41C4 STP X20, X19, [X31 + 0x50]
	0x035A41C8 ADRP X20, 0xE3C000
	0x035A41CC LDRB W8, [X20 + 0xE]
	0x035A41D0 MOV X19, X0
	0x035A41D4 TBNZ X8, 0x0, 0x35A4294
	0x035A41D8 ADRP X0, 0xB93000
	0x035A41DC LDR X0, [X0 + 0x508]
	0x035A41E0 BL 0x1C16CF4
	0x035A41E4 ADRP X0, 0xB93000
	0x035A41E8 LDR X0, [X0 + 0x510]
	0x035A41EC BL 0x1C16CF4
	0x035A41F0 ADRP X0, 0xB93000
	0x035A41F4 LDR X0, [X0 + 0x198]
	0x035A41F8 BL 0x1C16CF4
	0x035A41FC ADRP X0, 0xB92000
	0x035A4200 LDR X0, [X0 + 0xFF0]
	0x035A4204 BL 0x1C16CF4
	0x035A4208 ADRP X0, 0xB93000
	0x035A420C LDR X0, [X0 + 0x340]
	0x035A4210 BL 0x1C16CF4
	0x035A4214 ADRP X0, 0xB50000
	0x035A4218 LDR X0, [X0 + 0x9F0]
	0x035A421C BL 0x1C16CF4
	0x035A4220 ADRP X0, 0xB93000
	0x035A4224 LDR X0, [X0 + 0x290]
	0x035A4228 BL 0x1C16CF4
	0x035A422C ADRP X0, 0xB50000
	0x035A4230 LDR X0, [X0 + 0x470]
	0x035A4234 BL 0x1C16CF4
	0x035A4238 ADRP X0, 0xB53000
	0x035A423C LDR X0, [X0 + 0xFD8]
	0x035A4240 BL 0x1C16CF4
	0x035A4244 ADRP X0, 0xB93000
	0x035A4248 LDR X0, [X0 + 0x518]
	0x035A424C BL 0x1C16CF4
	0x035A4250 ADRP X0, 0xB93000
	0x035A4254 LDR X0, [X0 + 0x3A8]
	0x035A4258 BL 0x1C16CF4
	0x035A425C ADRP X0, 0xB93000
	0x035A4260 LDR X0, [X0 + 0x3B0]
	0x035A4264 BL 0x1C16CF4
	0x035A4268 ADRP X0, 0xB93000
	0x035A426C LDR X0, [X0 + 0x520]
	0x035A4270 BL 0x1C16CF4
	0x035A4274 ADRP X0, 0xB93000
	0x035A4278 LDR X0, [X0 + 0x528]
	0x035A427C BL 0x1C16CF4
	0x035A4280 ADRP X0, 0xB93000
	0x035A4284 LDR X0, [X0 + 0x3B8]
	0x035A4288 BL 0x1C16CF4
	0x035A428C MOVZ W8, 0x1
	0x035A4290 STRB W8, [X20 + 0xE]
	0x035A4294 STR X31, [X31 + 0x28]
	0x035A4298 STP X31, X31, [X31 + 0x10]
	0x035A429C ADRP X23, 0xB92000
	0x035A42A0 ADRP X24, 0xB93000
	0x035A42A4 LDR W8, [X19]
	0x035A42A8 LDR X20, [X19 + 0x20]
	0x035A42AC LDR X23, [X23 + 0xFF0]
	0x035A42B0 LDR X24, [X24 + 0x290]
	0x035A42B4 CBZ W8, 0x35A42D8
	0x035A42B8 CMP W8, 0x1
	0x035A42BC B.NE 0x35A4304
	0x035A42C0 LDR X8, [X19 + 0x58]
	0x035A42C4 MOVN W9, 0x0
	0x035A42C8 STR X8, [X31 + 0x10]
	0x035A42CC STR X31, [X19 + 0x58]
	0x035A42D0 STR W9, [X19]
	0x035A42D4 B 0x35A45B8
	0x035A42D8 LDR X8, [X19 + 0x50]
	0x035A42DC MOVN W9, 0x0
	0x035A42E0 STR X8, [X31 + 0x18]
	0x035A42E4 STR X31, [X19 + 0x50]
	0x035A42E8 STR W9, [X19]
	0x035A42EC ADRP X8, 0xB93000
	0x035A42F0 LDR X8, [X8 + 0x3A8]
	0x035A42F4 ADD X0, X31, 0x18
	0x035A42F8 LDR X1, [X8]
	0x035A42FC BL 0x2677474
	0x035A4300 B 0x35A44C4
	0x035A4304 CBZ X20, 0x35A4668
	0x035A4308 LDRB W8, [X20 + 0x10]
	0x035A430C CBZ W8, 0x35A44C8
	0x035A4310 LDR X21, [X19 + 0x28]
	0x035A4314 CBZ X21, 0x35A466C
	0x035A4318 LDR X8, [X21]
	0x035A431C LDR X1, [X24]
	0x035A4320 LDRH W9, [X8 + 0x12E]
	0x035A4324 CBZ X9, 0x35A4348
	0x035A4328 LDR X10, [X8 + 0xB0]
	0x035A432C ADD X10, X10, 0x8
	0x035A4330 LDUR X11, [X10 - 0x8]
	0x035A4334 CMP X11, X1
	0x035A4338 B.EQ 0x35A4358
	0x035A433C SUBS X9, X9, 0x1
	0x035A4340 ADD X10, X10, 0x10
	0x035A4344 B.NE 0x35A4330
	0x035A4348 MOVZ W2, 0x5
	0x035A434C MOV X0, X21
	0x035A4350 BL 0x1C5C788
	0x035A4354 B 0x35A4368
	0x035A4358 LDR W9, [X10]
	0x035A435C ADD W9, W9, 0x5
	0x035A4360 ADD X8, X8, W9, 0x4, SXTW
	0x035A4364 ADD X0, X8, 0x138
	0x035A4368 LDP X8, X1, [X0]
	0x035A436C MOV X0, X21
	0x035A4370 BLR X8
	0x035A4374 MOV X1, X31
	0x035A4378 BL 0x32277A8
	0x035A437C TBNZ X0, 0x0, 0x35A44C4
	0x035A4380 ADRP X8, 0xB50000
	0x035A4384 LDR X8, [X8 + 0x9F0]
	0x035A4388 LDR X21, [X19 + 0x28]
	0x035A438C LDR X0, [X8]
	0x035A4390 LDR W8, [X0 + 0xE0]
	0x035A4394 CBNZ W8, 0x35A439C
	0x035A4398 BL 0x1C16DFC
	0x035A439C MOV X0, X31
	0x035A43A0 BL 0x33616A4
	0x035A43A4 ADRP X22, 0xB93000
	0x035A43A8 LDR X22, [X22 + 0x340]
	0x035A43AC MOV X8, X0
	0x035A43B0 STR X8, [X31 + 0x28]
	0x035A43B4 LDR X0, [X22]
	0x035A43B8 LDR W8, [X0 + 0xE0]
	0x035A43BC CBNZ W8, 0x35A43C8
	0x035A43C0 BL 0x1C16DFC
	0x035A43C4 LDR X0, [X22]
	0x035A43C8 LDR X8, [X0 + 0xB8]
	0x035A43CC LDR X1, [X8]
	0x035A43D0 ADD X0, X31, 0x28
	0x035A43D4 MOV X2, X31
	0x035A43D8 BL 0x335FC68
	0x035A43DC CBZ X21, 0x35A4670
	0x035A43E0 LDR X8, [X21]
	0x035A43E4 LDR X1, [X24]
	0x035A43E8 MOV X22, X0
	0x035A43EC LDRH W9, [X8 + 0x12E]
	0x035A43F0 CBZ X9, 0x35A4414
	0x035A43F4 LDR X10, [X8 + 0xB0]
	0x035A43F8 ADD X10, X10, 0x8
	0x035A43FC LDUR X11, [X10 - 0x8]
	0x035A4400 CMP X11, X1
	0x035A4404 B.EQ 0x35A4424
	0x035A4408 SUBS X9, X9, 0x1
	0x035A440C ADD X10, X10, 0x10
	0x035A4410 B.NE 0x35A43FC
	0x035A4414 MOVZ W2, 0x7
	0x035A4418 MOV X0, X21
	0x035A441C BL 0x1C5C788
	0x035A4420 B 0x35A4434
	0x035A4424 LDR W9, [X10]
	0x035A4428 ADD W9, W9, 0x7
	0x035A442C ADD X8, X8, W9, 0x4, SXTW
	0x035A4430 ADD X0, X8, 0x138
	0x035A4434 LDP X8, X2, [X0]
	0x035A4438 MOV X0, X21
	0x035A443C MOV X1, X22
	0x035A4440 BLR X8
	0x035A4444 TBZ X0, 0x0, 0x35A44C4
	0x035A4448 LDP X1, X2, [X19 + 0x28]
	0x035A444C LDR X3, [X19 + 0x38]
	0x035A4450 MOV X0, X20
	0x035A4454 BL 0x359F740
	0x035A4458 CBZ X0, 0x35A4674
	0x035A445C ADRP X8, 0xB93000
	0x035A4460 LDR X8, [X8 + 0x3B8]
	0x035A4464 LDR X1, [X8]
	0x035A4468 BL 0x269F5D0
	0x035A446C ADRP X8, 0xB93000
	0x035A4470 LDR X8, [X8 + 0x3B0]
	0x035A4474 STR X0, [X31 + 0x18]
	0x035A4478 LDR X1, [X8]
	0x035A447C ADD X0, X31, 0x18
	0x035A4480 BL 0x2677430
	0x035A4484 TBNZ X0, 0x0, 0x35A42EC
	0x035A4488 STR W31, [X19]
	0x035A448C LDR X8, [X31 + 0x18]
	0x035A4490 STR X8, [X19 + 0x50]
	0x035A4494 LDR X0, [X23]
	0x035A4498 LDR W8, [X0 + 0xE0]
	0x035A449C CBNZ W8, 0x35A44A4
	0x035A44A0 BL 0x1C16DFC
	0x035A44A4 ADRP X8, 0xB93000
	0x035A44A8 LDR X8, [X8 + 0x510]
	0x035A44AC ADD X0, X19, 0x8
	0x035A44B0 LDR X3, [X8]
	0x035A44B4 ADD X1, X31, 0x18
	0x035A44B8 MOV X2, X19
	0x035A44BC BL 0x1FBFAF4
	0x035A44C0 B 0x35A4640
	0x035A44C4 CBZ X20, 0x35A4664
	0x035A44C8 LDR X21, [X19 + 0x28]
	0x035A44CC CBZ X21, 0x35A4658
	0x035A44D0 LDR X8, [X21]
	0x035A44D4 LDR X20, [X20 + 0x40]
	0x035A44D8 LDR X1, [X24]
	0x035A44DC LDRH W9, [X8 + 0x12E]
	0x035A44E0 CBZ X9, 0x35A4504
	0x035A44E4 LDR X10, [X8 + 0xB0]
	0x035A44E8 ADD X10, X10, 0x8
	0x035A44EC LDUR X11, [X10 - 0x8]
	0x035A44F0 CMP X11, X1
	0x035A44F4 B.EQ 0x35A4514
	0x035A44F8 SUBS X9, X9, 0x1
	0x035A44FC ADD X10, X10, 0x10
	0x035A4500 B.NE 0x35A44EC
	0x035A4504 MOV X0, X21
	0x035A4508 MOV W2, W31
	0x035A450C BL 0x1C5C788
	0x035A4510 B 0x35A4520
	0x035A4514 LDRSW X9, [X10]
	0x035A4518 ADD X8, X8, X9, 0x4, LSL
	0x035A451C ADD X0, X8, 0x138
	0x035A4520 LDP X8, X1, [X0]
	0x035A4524 MOV X0, X21
	0x035A4528 BLR X8
	0x035A452C ADRP X8, 0xB50000
	0x035A4530 LDR X8, [X8 + 0x470]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X20, 0xE3E000
	011 Move W8, [X20+8]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {58}
	017 Move X0, 0xB95000
	018 Move X0, [X0+1216]
	019 Call 0x1C17CF4
	020 Move X0, 0xB95000
	021 Move X0, [X0+1120]
	022 Call 0x1C17CF4
	023 Move X0, 0xB95000
	024 Move X0, [X0+696]
	025 Call 0x1C17CF4
	026 Move X0, 0xB95000
	027 Move X0, [X0+1128]
	028 Call 0x1C17CF4
	029 Move X0, 0xB95000
	030 Move X0, [X0+1136]
	031 Call 0x1C17CF4
	032 Move X0, 0xB51000
	033 Move X0, [X0+3584]
	034 Call 0x1C17CF4
	035 Move X0, 0xB95000
	036 Move X0, [X0+1144]
	037 Call 0x1C17CF4
	038 Move X0, 0xB95000
	039 Move X0, [X0+1152]
	040 Call 0x1C17CF4
	041 Move X0, 0xB51000
	042 Move X0, [X0+3608]
	043 Call 0x1C17CF4
	044 Move X0, 0xB51000
	045 Move X0, [X0+2760]
	046 Call 0x1C17CF4
	047 Move X0, 0xB95000
	048 Move X0, [X0+1160]
	049 Call 0x1C17CF4
	050 Move X0, 0xB95000
	051 Move X0, [X0+1168]
	052 Call 0x1C17CF4
	053 Move X0, 0xB95000
	054 Move X0, [X0+1176]
	055 Call 0x1C17CF4
	056 Move W8, 1
	057 Move [X20+8], W8
	058 Move [X31+8], X31
	059 Move W23, [X19]
	060 Compare W23, 0
	061 JumpIfEqual {115}
	062 Move X8, 0xB51000
	063 Move X8, [X8+2760]
	064 Move X20, [X19+32]
	065 Move X0, [X8]
	066 Move W1, 1
	067 Call 0x1C17D6C
	068 Move X1, X0
	069 Compare X1, 0
	070 JumpIfEqual {374}
	071 Move W8, [X1+24]
	072 Compare W8, 0
	073 JumpIfEqual {375}
	074 Move X8, [X19+40]
	075 Move [X1+32], X8
	076 Compare X20, 0
	077 JumpIfEqual {376}
	078 Move X2, [X19+48]
	079 Move X3, [X19+56]
	080 Move X0, X20
	081 Call Client.GetFlagsDefaultAsync, X0, X1, X2
	082 Compare X0, 0
	083 JumpIfEqual {377}
	084 Move X8, 0xB95000
	085 Move X8, [X8+1176]
	086 Move X1, [X8]
	087 Call Task`1<Object>.GetAwaiter, X0
	088 Move X8, 0xB95000
	089 Move X8, [X8+1168]
	090 Move [X31+8], X0
	091 Move X1, [X8]
	092 Add X0, X31, 8
	093 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	094 Move TEMP, X0
	095 And TEMP, TEMP, 1
	096 Compare TEMP, 1
	097 JumpIfEqual {122}
	098 Move [X19], W31
	099 Move X8, [X31+8]
	100 Move [X19+64], X8
	101 Move X8, 0xB95000
	102 Move X8, [X8+696]
	103 Move X0, [X8]
	104 Move W8, [X0+224]
	105 Compare W8, 0
	106 JumpIfNotEqual {108}
	107 Call 0x1C17DFC
	108 Move X8, 0xB95000
	109 Move X8, [X8+1216]
	110 Add X0, X19, 8
	111 Move X3, [X8]
	112 Add X1, X31, 8
	113 Move X2, X19
	114 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	115 Move X8, [X19+64]
	116 Move TEMP, 0
	117 Not TEMP
	118 Move W23, TEMP
	119 Move [X31+8], X8
	120 Move [X19+64], X31
	121 Move [X19], W23
	122 Move X8, 0xB95000
	123 Move X8, [X8+1160]
	124 Add X0, X31, 8
	125 Move X1, [X8]
	126 Call TaskAwaiter`1<Object>.GetResult, X0
	127 Move X20, X0
	128 Compare X0, 0
	129 JumpIfEqual {369}
	130 Move X10, 0xB95000
	131 Move X8, [X20]
	132 Move X10, [X10+1128]
	133 NotImplemented "Instruction LDRH not yet implemented."
	134 Move X1, [X10]
	135 Compare X9, 0
	136 JumpIfEqual {143}
	137 Move X10, [X8+176]
	138 Add X10, X10, 8
	139 NotImplemented "Instruction LDUR not yet implemented."
	140 NotImplemented "Instruction CMP not yet implemented."
	141 Subtract X9, X9, 1
	142 Add X10, X10, 16
	143 Move X0, X20
	144 Move W2, W31
	145 Call 0x1C5D788
	146 NotImplemented "Instruction LDRSW not yet implemented."
	147 Add X8, X8, X9
	148 Add X0, X8, 312
	149 Move X8, [X0]
	150 Move X1, [X0+8]
	151 Move X0, X20
	152 NotImplemented "Instruction BLR not yet implemented."
	153 Move X20, X0
	154 Compare X0, 0
	155 JumpIfEqual {370}
	156 Move X10, 0xB94000
	157 Move X8, [X20]
	158 Move X10, [X10+1144]
	159 NotImplemented "Instruction LDRH not yet implemented."
	160 Move X1, [X10]
	161 Compare X9, 0
	162 JumpIfEqual {169}
	163 Move X10, [X8+176]
	164 Add X10, X10, 8
	165 NotImplemented "Instruction LDUR not yet implemented."
	166 NotImplemented "Instruction CMP not yet implemented."
	167 Subtract X9, X9, 1
	168 Add X10, X10, 16
	169 Move X0, X20
	170 Move W2, W31
	171 Call 0x1C5D788
	172 NotImplemented "Instruction LDRSW not yet implemented."
	173 Add X8, X8, X9
	174 Add X0, X8, 312
	175 Move X8, [X0]
	176 Move X1, [X0+8]
	177 Move X0, X20
	178 NotImplemented "Instruction BLR not yet implemented."
	179 Move X20, X0
	180 Compare X0, 0
	181 JumpIfEqual {371}
	182 Move X22, 0xB50000
	183 Move X24, 0xB94000
	184 Move X25, 0xB94000
	185 Move X22, [X22+3608]
	186 Move X24, [X24+1152]
	187 Move X25, [X25+1136]
	188 Move X8, [X20]
	189 Move X1, [X22]
	190 NotImplemented "Instruction LDRH not yet implemented."
	191 Compare X9, 0
	192 JumpIfEqual {199}
	193 Move X10, [X8+176]
	194 Add X10, X10, 8
	195 NotImplemented "Instruction LDUR not yet implemented."
	196 NotImplemented "Instruction CMP not yet implemented."
	197 Subtract X9, X9, 1
	198 Add X10, X10, 16
	199 Move X0, X20
	200 Move W2, W31
	201 Call 0x1C5D788
	202 NotImplemented "Instruction LDRSW not yet implemented."
	203 Add X8, X8, X9
	204 Add X0, X8, 312
	205 Move X8, [X0]
	206 Move X1, [X0+8]
	207 Move X0, X20
	208 NotImplemented "Instruction BLR not yet implemented."
	209 Move TEMP, X0
	210 And TEMP, TEMP, 1
	211 Compare TEMP, 1
	212 JumpIfNotEqual {274}
	213 Move X8, [X20]
	214 Move X1, [X24]
	215 NotImplemented "Instruction LDRH not yet implemented."
	216 Compare X9, 0
	217 JumpIfEqual {224}
	218 Move X10, [X8+176]
	219 Add X10, X10, 8
	220 NotImplemented "Instruction LDUR not yet implemented."
	221 NotImplemented "Instruction CMP not yet implemented."
	222 Subtract X9, X9, 1
	223 Add X10, X10, 16
	224 Move X0, X20
	225 Move W2, W31
	226 Call 0x1C5D788
	227 NotImplemented "Instruction LDRSW not yet implemented."
	228 Add X8, X8, X9
	229 Add X0, X8, 312
	230 Move X8, [X0]
	231 Move X1, [X0+8]
	232 Move X0, X20
	233 NotImplemented "Instruction BLR not yet implemented."
	234 Move X21, X0
	235 Compare X0, 0
	236 JumpIfEqual {367}
	237 Move X8, [X21]
	238 Move X1, [X25]
	239 NotImplemented "Instruction LDRH not yet implemented."
	240 Compare X9, 0
	241 JumpIfEqual {248}
	242 Move X10, [X8+176]
	243 Add X10, X10, 8
	244 NotImplemented "Instruction LDUR not yet implemented."
	245 NotImplemented "Instruction CMP not yet implemented."
	246 Subtract X9, X9, 1
	247 Add X10, X10, 16
	248 Move W2, 1
	249 Move X0, X21
	250 Call 0x1C5D788
	251 Move W9, [X10]
	252 Add W9, W9, 1
	253 Add X8, X8, W9
	254 Add X0, X8, 312
	255 Move X8, [X0]
	256 Move X1, [X0+8]
	257 Move X0, X21
	258 NotImplemented "Instruction BLR not yet implemented."
	259 Compare X0, 0
	260 JumpIfEqual {368}
	261 Move X1, [X19+40]
	262 Move X2, X31
	263 Call String.Equals, X0, X1
	264 Move TEMP, X0
	265 And TEMP, TEMP, 1
	266 Compare TEMP, 1
	267 JumpIfNotEqual {188}
	268 Move X22, X31
	269 Move W24, 7
	270 Move TEMP, X23
	271 And TEMP, TEMP, -2147483648
	272 Compare TEMP, -2147483648
	273 JumpIfEqual {281}
	274 Move X22, X31
	275 Move X21, X31
	276 Move W24, 8
	277 Move TEMP, X23
	278 And TEMP, TEMP, -2147483648
	279 Compare TEMP, -2147483648
	280 JumpIfNotEqual {306}
	281 Compare X20, 0
	282 JumpIfEqual {306}
	283 Move X10, 0xB50000
	284 Move X8, [X20]
	285 Move X10, [X10+3584]
	286 NotImplemented "Instruction LDRH not yet implemented."
	287 Move X1, [X10]
	288 Compare X9, 0
	289 JumpIfEqual {296}
	290 Move X10, [X8+176]
	291 Add X10, X10, 8
	292 NotImplemented "Instruction LDUR not yet implemented."
	293 NotImplemented "Instruction CMP not yet implemented."
	294 Subtract X9, X9, 1
	295 Add X10, X10, 16
	296 Move X0, X20
	297 Move W2, W31
	298 Call 0x1C5D788
	299 NotImplemented "Instruction LDRSW not yet implemented."
	300 Add X8, X8, X9
	301 Add X0, X8, 312
	302 Move X8, [X0]
	303 Move X1, [X0+8]
	304 Move X0, X20
	305 NotImplemented "Instruction BLR not yet implemented."
	306 Compare X22, 0
	307 JumpIfNotEqual {372}
	308 NotImplemented "Instruction CMP not yet implemented."
	309 NotImplemented "Instruction CMP not yet implemented."
	310 Compare W24, 0
	311 JumpIfNotEqual {357}
	312 Move X20, [X19+40]
	313 Move X0, 0xB94000
	314 Move X0, [X0+1184]
	315 Call 0x1C17D08
	316 Move X21, X0
	317 Move X0, 0xB81000
	318 Move X0, [X0+792]
	319 Call 0x1C17D08
	320 Move X2, X0
	321 Move X0, X21
	322 Move X1, X20
	323 Move X3, X31
	324 Call String.Concat, X0, X1, X2
	325 Move X20, X0
	326 Move X0, 0xB58000
	327 Move X0, [X0+1400]
	328 Call 0x1C17D08
	329 Call 0x1C17F10
	330 Move X21, X0
	331 Move X1, X20
	332 Move X2, X31
	333 Call ArgumentException..ctor, X0, X1
	334 Move X0, 0xB94000
	335 Move X0, [X0+1224]
	336 Call 0x1C17D08
	337 Move X1, X0
	338 Move X0, X21
	339 Call 0x1C17DEC
	340 Move TEMP, 1
	341 Not TEMP
	342 Move W8, TEMP
	343 Move [X19+8], W8
	344 Move X8, 0xB94000
	345 Move X8, [X8+696]
	346 Move X0, [X8]
	347 Move W8, [X0+224]
	348 Compare W8, 0
	349 JumpIfNotEqual {351}
	350 Call 0x1C17DFC
	351 Move X8, 0xB94000
	352 Move X8, [X8+1120]
	353 Move X0, X19
	354 Move X1, X21
	355 Move X2, [X8]
	356 Call AsyncTaskMethodBuilder`1<Object>.SetResult, X0, X1
	357 Move X20, [X31+64]
	358 Move X19, [X31+72]
	359 Move X22, [X31+48]
	360 Move X21, [X31+56]
	361 Move X24, [X31+32]
	362 Move X23, [X31+40]
	363 Move X30, [X31+16]
	364 Move X25, [X31+24]
	365 Add X31, X31, 80
	366 Return 
	367 Call 0x1C17F20
	368 Call 0x1C17F20
	369 Call 0x1C17F20
	370 Call 0x1C17F20
	371 Call 0x1C17F20
	372 Move X0, X22
	373 Call 0x1C17F18
	374 Call 0x1C17F20
	375 Call 0x1C17F28
	376 Call 0x1C17F20
	377 Call 0x1C17F20
	378 Move X21, X0
	379 Move [X31], X1
	380 Move X21, X0
	381 NotImplemented "Instruction CMP not yet implemented."
	382 Move [X31], X1
	383 Move X0, X21
	384 Call 0x3EB2AD0
	385 Move X22, [X0]
	386 Call 0x3EB2AE0
	387 Move W24, W31
	388 Move X21, X31
	389 Move TEMP, X23
	390 And TEMP, TEMP, -2147483648
	391 Compare TEMP, -2147483648
	392 JumpIfEqual {281}
	393 Move X22, X31
	394 Move TEMP, X23
	395 And TEMP, TEMP, -2147483648
	396 Compare TEMP, -2147483648
	397 JumpIfNotEqual {423}
	398 Compare X20, 0
	399 JumpIfEqual {423}
	400 Move X10, 0xB50000
	401 Move X8, [X20]
	402 Move X10, [X10+3584]
	403 NotImplemented "Instruction LDRH not yet implemented."
	404 Move X1, [X10]
	405 Compare X9, 0
	406 JumpIfEqual {413}
	407 Move X10, [X8+176]
	408 Add X10, X10, 8
	409 NotImplemented "Instruction LDUR not yet implemented."
	410 NotImplemented "Instruction CMP not yet implemented."
	411 Subtract X9, X9, 1
	412 Add X10, X10, 16
	413 Move X0, X20
	414 Move W2, W31
	415 Call 0x1C5D788
	416 NotImplemented "Instruction LDRSW not yet implemented."
	417 Add X8, X8, X9
	418 Add X0, X8, 312
	419 Move X8, [X0]
	420 Move X1, [X0+8]
	421 Move X0, X20
	422 NotImplemented "Instruction BLR not yet implemented."
	423 Compare X22, 0
	424 JumpIfNotEqual {468}
	425 Move X8, [X31]
	426 NotImplemented "Instruction CMP not yet implemented."
	427 Move X0, X21
	428 Call 0x3EB2AD0
	429 Move X20, X0
	430 Move X0, 0xB50000
	431 Move X0, [X0+2000]
	432 Call 0x1C17D08
	433 Move X8, [X20]
	434 Move X1, [X8]
	435 Call 0x1C18270
	436 Move TEMP, X0
	437 And TEMP, TEMP, 1
	438 Compare TEMP, 1
	439 JumpIfNotEqual {460}
	440 Move X20, [X20]
	441 Call 0x3EB2AE0
	442 Move TEMP, 1
	443 Not TEMP
	444 Move W8, TEMP
	445 Move [X19+8], W8
	446 Move X0, 0xB94000
	447 Move X0, [X0+696]
	448 Call 0x1C17D08
	449 Move W8, [X0+224]
	450 Compare W8, 0
	451 JumpIfNotEqual {453}
	452 Call 0x1C17DFC
	453 Move X0, 0xB94000
	454 Move X0, [X0+1200]
	455 Call 0x1C17D08
	456 Move X2, X0
	457 Move X0, X19
	458 Move X1, X20
	459 Call AsyncTaskMethodBuilder`1<Object>.SetException, X0, X1
	460 Move W0, 8
	461 Call 0x3EB2AF0
	462 Move X8, [X20]
	463 Move [X0], X8
	464 Move X1, 0x911000
	465 Add X1, X1, 3672
	466 Move X2, X31
	467 Call 0x3EB2B00
	468 Move X0, X22
	469 Call 0x1C17F18
	470 Move X21, X0
	471 Move [X31], X1
	472 Move TEMP, X23
	473 And TEMP, TEMP, -2147483648
	474 Compare TEMP, -2147483648
	475 JumpIfEqual {398}
	476 Move X21, X0
	477 Call 0x3EB2AE0
	478 Move X0, X21
	479 Call 0x1D2D690
	480 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x035A4534 LDR W1, [X19 + 0x40]
	0x035A4538 MOV X21, X0
	0x035A453C STR X31, [X31 + 0x8]
	0x035A4540 LDR X2, [X8]
	0x035A4544 ADD X0, X31, 0x8
	0x035A4548 BL 0x24341FC
	0x035A454C ADRP X8, 0xB53000
	0x035A4550 LDR X8, [X8 + 0xFD8]
	0x035A4554 LDRB W1, [X19 + 0x44]
	0x035A4558 STRH W31, [X31 + 0x4]
	0x035A455C LDR X2, [X8]
	0x035A4560 ADD X0, X31, 0x4
	0x035A4564 BL 0x242D570
	0x035A4568 CBZ X20, 0x35A465C
	0x035A456C LDP X5, X6, [X19 + 0x30]
	0x035A4570 LDR X4, [X19 + 0x48]
	0x035A4574 LDR X2, [X31 + 0x8]
	0x035A4578 LDRH W3, [X31 + 0x4]
	0x035A457C MOV X0, X20
	0x035A4580 MOV X1, X21
	0x035A4584 BL 0x359721C
	0x035A4588 CBZ X0, 0x35A4660
	0x035A458C ADRP X8, 0xB93000
	0x035A4590 LDR X8, [X8 + 0x528]
	0x035A4594 LDR X1, [X8]
	0x035A4598 BL 0x269F5D0
	0x035A459C ADRP X8, 0xB93000
	0x035A45A0 LDR X8, [X8 + 0x520]
	0x035A45A4 STR X0, [X31 + 0x10]
	0x035A45A8 LDR X1, [X8]
	0x035A45AC ADD X0, X31, 0x10

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xE3D000
	007 Move X21, 0xB94000
	008 Move W8, [X22+9]
	009 Move X21, [X21+696]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xB94000
	017 Move X0, [X0+1208]
	018 Call 0x1C17CF4
	019 Move X0, 0xB94000
	020 Move X0, [X0+696]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+9], W8
	024 Move X0, [X21]
	025 Move X21, 0xB94000
	026 Move W8, [X0+224]
	027 Move X21, [X21+1208]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X2, [X21]
	032 Add X0, X20, 8
	033 Move X1, X19
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Call AsyncTaskMethodBuilder`1<Object>.SetStateMachine, X0, X1
	040 Return 

