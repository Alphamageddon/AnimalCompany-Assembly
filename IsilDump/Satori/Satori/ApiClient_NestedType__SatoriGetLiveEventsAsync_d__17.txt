Type: Satori.ApiClient/<SatoriGetLiveEventsAsync>d__17

Method: System.Void MoveNext()

Disassembly:
	0x0359BF6C B 0x359BF90
	0x0359BF70 B 0x359BF90
	0x0359BF74 B 0x359BF90
	0x0359BF78 B 0x359BF90
	0x0359BF7C B 0x359BF90
	0x0359BF80 B 0x359BF90
	0x0359BF84 B 0x359BF90
	0x0359BF88 B 0x359BF90
	0x0359BF8C B 0x359BF90
	0x0359BF90 MOV X20, X0
	0x0359BF94 CMP W1, 0x1
	0x0359BF98 B.NE 0x359C034
	0x0359BF9C MOV X0, X20
	0x0359BFA0 BL 0x3EB1AD0
	0x0359BFA4 MOV X20, X0
	0x0359BFA8 ADRP X0, 0xB58000
	0x0359BFAC LDR X0, [X0 + 0x7D0]
	0x0359BFB0 BL 0x1C16D08
	0x0359BFB4 LDR X8, [X20]
	0x0359BFB8 LDR X1, [X8]
	0x0359BFBC BL 0x1C17270
	0x0359BFC0 TBZ X0, 0x0, 0x359C00C
	0x0359BFC4 LDR X20, [X20]
	0x0359BFC8 BL 0x3EB1AE0
	0x0359BFCC MOVN W8, 0x1
	0x0359BFD0 STR W8, [X19], #0x8
	0x0359BFD4 ADRP X0, 0xB9B000
	0x0359BFD8 LDR X0, [X0 + 0xFF0]
	0x0359BFDC BL 0x1C16D08
	0x0359BFE0 LDR W8, [X0 + 0xE0]
	0x0359BFE4 CBNZ W8, 0x359BFEC
	0x0359BFE8 BL 0x1C16DFC
	0x0359BFEC ADRP X0, 0xB9C000
	0x0359BFF0 LDR X0, [X0 + 0x1B0]
	0x0359BFF4 BL 0x1C16D08
	0x0359BFF8 MOV X2, X0
	0x0359BFFC MOV X0, X19
	0x0359C000 MOV X1, X20
	0x0359C004 BL 0x26324C8
	0x0359C008 B 0x359BE88
	0x0359C00C MOVZ W0, 0x8
	0x0359C010 BL 0x3EB1AF0
	0x0359C014 LDR X8, [X20]
	0x0359C018 STR X8, [X0]
	0x0359C01C ADRP X1, 0x918000
	0x0359C020 ADD X1, X1, 0xE58
	0x0359C024 MOV X2, X31
	0x0359C028 BL 0x3EB1B00
	0x0359C02C MOV X20, X0
	0x0359C030 BL 0x3EB1AE0
	0x0359C034 MOV X0, X20
	0x0359C038 BL 0x1D2C690
	0x0359C03C BL 0x1990590
	0x0359C040 STR X30, [X31 - 0x30]!
	0x0359C044 STP X22, X21, [X31 + 0x10]
	0x0359C048 STP X20, X19, [X31 + 0x20]
	0x0359C04C ADRP X22, 0xE43000
	0x0359C050 ADRP X21, 0xB9A000
	0x0359C054 LDRB W8, [X22 + 0xFD6]
	0x0359C058 LDR X21, [X21 + 0xFF0]
	0x0359C05C MOV X19, X1
	0x0359C060 MOV X20, X0
	0x0359C064 TBNZ X8, 0x0, 0x359C088
	0x0359C068 ADRP X0, 0xB9B000
	0x0359C06C LDR X0, [X0 + 0x1B8]
	0x0359C070 BL 0x1C16CF4
	0x0359C074 ADRP X0, 0xB9A000
	0x0359C078 LDR X0, [X0 + 0xFF0]
	0x0359C07C BL 0x1C16CF4
	0x0359C080 MOVZ W8, 0x1
	0x0359C084 STRB W8, [X22 + 0xFD6]
	0x0359C088 LDR X0, [X21]
	0x0359C08C ADRP X21, 0xB9B000
	0x0359C090 LDR W8, [X0 + 0xE0]
	0x0359C094 LDR X21, [X21 + 0x1B8]
	0x0359C098 CBNZ W8, 0x359C0A0
	0x0359C09C BL 0x1C16DFC
	0x0359C0A0 LDR X2, [X21]
	0x0359C0A4 ADD X0, X20, 0x8
	0x0359C0A8 MOV X1, X19
	0x0359C0AC LDP X20, X19, [X31 + 0x20]
	0x0359C0B0 LDP X22, X21, [X31 + 0x10]
	0x0359C0B4 LDR X30, [X31], #0x30
	0x0359C0B8 B 0x2632228
	0x0359C0BC SUB X31, X31, 0x60
	0x0359C0C0 STP X30, X27, [X31 + 0x10]
	0x0359C0C4 STP X26, X25, [X31 + 0x20]
	0x0359C0C8 STP X24, X23, [X31 + 0x30]
	0x0359C0CC STP X22, X21, [X31 + 0x40]
	0x0359C0D0 STP X20, X19, [X31 + 0x50]
	0x0359C0D4 ADRP X20, 0xE43000
	0x0359C0D8 LDRB W8, [X20 + 0xFD7]
	0x0359C0DC MOV X19, X0
	0x0359C0E0 TBNZ X8, 0x0, 0x359C1AC
	0x0359C0E4 ADRP X0, 0xB9B000
	0x0359C0E8 LDR X0, [X0 + 0x1C0]
	0x0359C0EC BL 0x1C16CF4
	0x0359C0F0 ADRP X0, 0xB5A000
	0x0359C0F4 LDR X0, [X0 + 0x280]
	0x0359C0F8 BL 0x1C16CF4
	0x0359C0FC ADRP X0, 0xB60000
	0x0359C100 LDR X0, [X0 + 0x8D8]
	0x0359C104 BL 0x1C16CF4
	0x0359C108 ADRP X0, 0xB58000
	0x0359C10C LDR X0, [X0 + 0x810]
	0x0359C110 BL 0x1C16CF4
	0x0359C114 ADRP X0, 0xB58000
	0x0359C118 LDR X0, [X0 + 0x6C0]
	0x0359C11C BL 0x1C16CF4
	0x0359C120 ADRP X0, 0xB58000
	0x0359C124 LDR X0, [X0 + 0x6D0]
	0x0359C128 BL 0x1C16CF4
	0x0359C12C ADRP X0, 0xB9B000
	0x0359C130 LDR X0, [X0 + 0x58]
	0x0359C134 BL 0x1C16CF4
	0x0359C138 ADRP X0, 0xB5A000
	0x0359C13C LDR X0, [X0 + 0x1E0]
	0x0359C140 BL 0x1C16CF4
	0x0359C144 ADRP X0, 0xB5A000
	0x0359C148 LDR X0, [X0 + 0x1F0]
	0x0359C14C BL 0x1C16CF4
	0x0359C150 ADRP X0, 0xB5A000
	0x0359C154 LDR X0, [X0 + 0x1F8]
	0x0359C158 BL 0x1C16CF4
	0x0359C15C ADRP X0, 0xB60000
	0x0359C160 LDR X0, [X0 + 0x3A0]
	0x0359C164 BL 0x1C16CF4
	0x0359C168 ADRP X0, 0xB92000
	0x0359C16C LDR X0, [X0 + 0xD70]
	0x0359C170 BL 0x1C16CF4
	0x0359C174 ADRP X0, 0xB80000
	0x0359C178 LDR X0, [X0 + 0x4D0]
	0x0359C17C BL 0x1C16CF4
	0x0359C180 ADRP X0, 0xB92000
	0x0359C184 LDR X0, [X0 + 0x7D0]
	0x0359C188 BL 0x1C16CF4
	0x0359C18C ADRP X0, 0xB92000
	0x0359C190 LDR X0, [X0 + 0x7D8]
	0x0359C194 BL 0x1C16CF4
	0x0359C198 ADRP X0, 0xB57000
	0x0359C19C LDR X0, [X0 + 0x988]
	0x0359C1A0 BL 0x1C16CF4
	0x0359C1A4 MOVZ W8, 0x1
	0x0359C1A8 STRB W8, [X20 + 0xFD7]
	0x0359C1AC STR X31, [X31 + 0x8]
	0x0359C1B0 ADRP X27, 0xB5A000
	0x0359C1B4 LDR W8, [X19]
	0x0359C1B8 LDR X27, [X27 + 0x280]
	0x0359C1BC CBZ W8, 0x359C360
	0x0359C1C0 LDR X24, [X19 + 0x20]
	0x0359C1C4 CBZ X24, 0x359C474
	0x0359C1C8 LDR X0, [X24 + 0x20]
	0x0359C1CC CBZ X0, 0x359C478
	0x0359C1D0 ADRP X8, 0xB92000
	0x0359C1D4 ADRP X9, 0xB57000
	0x0359C1D8 LDR X8, [X8 + 0xD70]
	0x0359C1DC LDR X9, [X9 + 0x988]
	0x0359C1E0 LDR X21, [X8]
	0x0359C1E4 LDR X20, [X9]
	0x0359C1E8 MOV X1, X31
	0x0359C1EC BL 0x361B448
	0x0359C1F0 ADRP X8, 0xB60000
	0x0359C1F4 LDR X8, [X8 + 0x8D8]
	0x0359C1F8 MOV X22, X0
	0x0359C1FC LDR X0, [X8]
	0x0359C200 MOVZ W1, 0x1
	0x0359C204 BL 0x1C16D6C
	0x0359C208 MOV X1, X0
	0x0359C20C CBZ X1, 0x359C47C
	0x0359C210 LDR W8, [X1 + 0x18]
	0x0359C214 CBZ W8, 0x359C480
	0x0359C218 MOVZ W8, 0x2F
	0x0359C21C STRH W8, [X1 + 0x20]
	0x0359C220 CBZ X22, 0x359C484
	0x0359C224 MOV X0, X22
	0x0359C228 MOV X2, X31
	0x0359C22C BL 0x322BC58
	0x0359C230 MOV X1, X21
	0x0359C234 MOV X2, X31
	0x0359C238 BL 0x321B938
	0x0359C23C ADRP X8, 0xB60000
	0x0359C240 LDR X8, [X8 + 0x3A0]
	0x0359C244 MOV X22, X0
	0x0359C248 LDR X23, [X24 + 0x20]
	0x0359C24C LDR X0, [X8]
	0x0359C250 BL 0x1C16F10
	0x0359C254 MOV X21, X0
	0x0359C258 MOV X1, X23
	0x0359C25C MOV X2, X31
	0x0359C260 BL 0x36281F8
	0x0359C264 CBZ X21, 0x359C488
	0x0359C268 MOV X0, X21
	0x0359C26C MOV X1, X22
	0x0359C270 MOV X2, X31
	0x0359C274 BL 0x36288CC
	0x0359C278 MOV X0, X21
	0x0359C27C MOV X1, X20
	0x0359C280 MOV X2, X31
	0x0359C284 BL 0x3628980
	0x0359C288 MOV X0, X21
	0x0359C28C MOV X1, X31
	0x0359C290 BL 0x3628A38
	0x0359C294 ADRP X8, 0xB80000
	0x0359C298 ADRP X9, 0xB58000
	0x0359C29C LDR X8, [X8 + 0x4D0]
	0x0359C2A0 LDR X9, [X9 + 0x6D0]
	0x0359C2A4 MOV X20, X0
	0x0359C2A8 LDR X21, [X8]
	0x0359C2AC LDR X0, [X9]
	0x0359C2B0 BL 0x1C16F10
	0x0359C2B4 ADRP X8, 0xB58000
	0x0359C2B8 LDR X8, [X8 + 0x6C0]
	0x0359C2BC MOV X22, X0
	0x0359C2C0 LDR X1, [X8]
	0x0359C2C4 BL 0x2AA4804
	0x0359C2C8 ADRP X8, 0xB92000
	0x0359C2CC LDR X8, [X8 + 0x7D8]
	0x0359C2D0 LDR X1, [X19 + 0x28]
	0x0359C2D4 LDR X0, [X8]
	0x0359C2D8 MOV X2, X31
	0x0359C2DC BL 0x321B938
	0x0359C2E0 CBZ X22, 0x359C48C
	0x0359C2E4 ADRP X8, 0xB92000
	0x0359C2E8 LDR X8, [X8 + 0x7D0]
	0x0359C2EC ADRP X9, 0xB58000
	0x0359C2F0 LDR X9, [X9 + 0x810]
	0x0359C2F4 MOV X2, X0
	0x0359C2F8 LDR X1, [X8]
	0x0359C2FC LDR X3, [X9]
	0x0359C300 MOV X0, X22
	0x0359C304 BL 0x2AA5098
	0x0359C308 LDR X23, [X24 + 0x10]
	0x0359C30C CBZ X23, 0x359C490
	0x0359C310 ADRP X10, 0xB9B000
	0x0359C314 LDR X10, [X10 + 0x58]
	0x0359C318 LDR X8, [X23]
	0x0359C31C LDR W25, [X24 + 0x18]
	0x0359C320 LDP X26, X24, [X19 + 0x30]
	0x0359C324 LDR X1, [X10]
	0x0359C328 LDRH W9, [X8 + 0x12E]
	0x0359C32C CBZ X9, 0x359C350
	0x0359C330 LDR X10, [X8 + 0xB0]
	0x0359C334 ADD X10, X10, 0x8
	0x0359C338 LDUR X11, [X10 - 0x8]
	0x0359C33C CMP X11, X1
	0x0359C340 B.EQ 0x359C378
	0x0359C344 SUBS X9, X9, 0x1
	0x0359C348 ADD X10, X10, 0x10
	0x0359C34C B.NE 0x359C338
	0x0359C350 MOVZ W2, 0x3
	0x0359C354 MOV X0, X23
	0x0359C358 BL 0x1C5C788
	0x0359C35C B 0x359C388
	0x0359C360 LDR X8, [X19 + 0x40]
	0x0359C364 MOVN W9, 0x0
	0x0359C368 STR X8, [X31 + 0x8]
	0x0359C36C STR X31, [X19 + 0x40]
	0x0359C370 STR W9, [X19]
	0x0359C374 B 0x359C3E4
	0x0359C378 LDR W9, [X10]
	0x0359C37C ADD W9, W9, 0x3
	0x0359C380 ADD X8, X8, W9, 0x4, SXTW
	0x0359C384 ADD X0, X8, 0x138
	0x0359C388 LDP X8, X9, [X0]
	0x0359C38C MOV X0, X23
	0x0359C390 MOV X1, X21
	0x0359C394 MOV X2, X20
	0x0359C398 MOV X3, X22
	0x0359C39C MOV X4, X31
	0x0359C3A0 MOV W5, W25
	0x0359C3A4 MOV X6, X26
	0x0359C3A8 MOV X7, X24
	0x0359C3AC STR X9, [X31]
	0x0359C3B0 BLR X8
	0x0359C3B4 CBZ X0, 0x359C494
	0x0359C3B8 ADRP X8, 0xB5A000
	0x0359C3BC LDR X8, [X8 + 0x1F8]
	0x0359C3C0 LDR X1, [X8]
	0x0359C3C4 BL 0x269F5D0
	0x0359C3C8 ADRP X8, 0xB5A000
	0x0359C3CC LDR X8, [X8 + 0x1F0]
	0x0359C3D0 STR X0, [X31 + 0x8]
	0x0359C3D4 LDR X1, [X8]
	0x0359C3D8 ADD X0, X31, 0x8
	0x0359C3DC BL 0x2677430
	0x0359C3E0 TBZ X0, 0x0, 0x359C420
	0x0359C3E4 ADRP X8, 0xB5A000
	0x0359C3E8 LDR X8, [X8 + 0x1E0]
	0x0359C3EC ADD X0, X31, 0x8
	0x0359C3F0 LDR X1, [X8]
	0x0359C3F4 BL 0x2677474
	0x0359C3F8 MOVN W8, 0x1
	0x0359C3FC STR W8, [X19], #0x8
	0x0359C400 LDR X0, [X27]
	0x0359C404 LDR W8, [X0 + 0xE0]
	0x0359C408 CBNZ W8, 0x359C410
	0x0359C40C BL 0x1C16DFC
	0x0359C410 MOV X0, X19
	0x0359C414 MOV X1, X31
	0x0359C418 BL 0x32C4864
	0x0359C41C B 0x359C458
	0x0359C420 STR W31, [X19]
	0x0359C424 LDR X8, [X31 + 0x8]
	0x0359C428 STR X8, [X19 + 0x40]
	0x0359C42C LDR X0, [X27]
	0x0359C430 LDR W8, [X0 + 0xE0]
	0x0359C434 CBNZ W8, 0x359C43C
	0x0359C438 BL 0x1C16DFC
	0x0359C43C ADRP X8, 0xB9B000
	0x0359C440 LDR X8, [X8 + 0x1C0]
	0x0359C444 ADD X0, X19, 0x8
	0x0359C448 LDR X3, [X8]
	0x0359C44C ADD X1, X31, 0x8
	0x0359C450 MOV X2, X19
	0x0359C454 BL 0x2187D1C
	0x0359C458 LDP X20, X19, [X31 + 0x50]
	0x0359C45C LDP X22, X21, [X31 + 0x40]
	0x0359C460 LDP X24, X23, [X31 + 0x30]
	0x0359C464 LDP X26, X25, [X31 + 0x20]
	0x0359C468 LDP X30, X27, [X31 + 0x10]
	0x0359C46C ADD X31, X31, 0x60
	0x0359C470 RET
	0x0359C474 BL 0x1C16F20
	0x0359C478 BL 0x1C16F20
	0x0359C47C BL 0x1C16F20
	0x0359C480 BL 0x1C16F28
	0x0359C484 BL 0x1C16F20
	0x0359C488 BL 0x1C16F20
	0x0359C48C BL 0x1C16F20
	0x0359C490 BL 0x1C16F20
	0x0359C494 BL 0x1C16F20
	0x0359C498 B 0x359C4E4
	0x0359C49C B 0x359C4E4
	0x0359C4A0 B 0x359C4E4
	0x0359C4A4 B 0x359C4E4
	0x0359C4A8 B 0x359C4E4
	0x0359C4AC B 0x359C4E4
	0x0359C4B0 B 0x359C4E4
	0x0359C4B4 B 0x359C4E4
	0x0359C4B8 B 0x359C4E4
	0x0359C4BC B 0x359C4E4
	0x0359C4C0 B 0x359C4E4
	0x0359C4C4 B 0x359C4E4
	0x0359C4C8 B 0x359C4E4
	0x0359C4CC B 0x359C4E4
	0x0359C4D0 B 0x359C4E4
	0x0359C4D4 B 0x359C4E4
	0x0359C4D8 B 0x359C4E4
	0x0359C4DC B 0x359C4E4
	0x0359C4E0 B 0x359C4E4
	0x0359C4E4 MOV X20, X0
	0x0359C4E8 CMP W1, 0x1
	0x0359C4EC B.NE 0x359C57C
	0x0359C4F0 MOV X0, X20
	0x0359C4F4 BL 0x3EB1AD0
	0x0359C4F8 MOV X20, X0
	0x0359C4FC ADRP X0, 0xB57000
	0x0359C500 LDR X0, [X0 + 0x7D0]
	0x0359C504 BL 0x1C16D08
	0x0359C508 LDR X8, [X20]
	0x0359C50C LDR X1, [X8]
	0x0359C510 BL 0x1C17270
	0x0359C514 TBZ X0, 0x0, 0x359C554
	0x0359C518 LDR X20, [X20]
	0x0359C51C BL 0x3EB1AE0
	0x0359C520 MOVN W8, 0x1
	0x0359C524 STR W8, [X19], #0x8
	0x0359C528 ADRP X0, 0xB5A000
	0x0359C52C LDR X0, [X0 + 0x280]
	0x0359C530 BL 0x1C16D08
	0x0359C534 LDR W8, [X0 + 0xE0]
	0x0359C538 CBNZ W8, 0x359C540
	0x0359C53C BL 0x1C16DFC
	0x0359C540 MOV X0, X19
	0x0359C544 MOV X1, X20
	0x0359C548 MOV X2, X31
	0x0359C54C BL 0x32C4908
	0x0359C550 B 0x359C458
	0x0359C554 MOVZ W0, 0x8
	0x0359C558 BL 0x3EB1AF0
	0x0359C55C LDR X8, [X20]
	0x0359C560 STR X8, [X0]
	0x0359C564 ADRP X1, 0x918000
	0x0359C568 ADD X1, X1, 0xE58
	0x0359C56C MOV X2, X31
	0x0359C570 BL 0x3EB1B00
	0x0359C574 MOV X20, X0
	0x0359C578 BL 0x3EB1AE0
	0x0359C57C MOV X0, X20
	0x0359C580 BL 0x1D2C690
	0x0359C584 BL 0x1990590
	0x0359C588 STR X30, [X31 - 0x30]!
	0x0359C58C STP X22, X21, [X31 + 0x10]
	0x0359C590 STP X20, X19, [X31 + 0x20]
	0x0359C594 ADRP X21, 0xE43000
	0x0359C598 ADRP X22, 0xB5A000
	0x0359C59C LDRB W8, [X21 + 0xFD8]
	0x0359C5A0 LDR X22, [X22 + 0x280]
	0x0359C5A4 MOV X19, X1
	0x0359C5A8 MOV X20, X0
	0x0359C5AC TBNZ X8, 0x0, 0x359C5C4
	0x0359C5B0 ADRP X0, 0xB5A000
	0x0359C5B4 LDR X0, [X0 + 0x280]
	0x0359C5B8 BL 0x1C16CF4
	0x0359C5BC MOVZ W8, 0x1
	0x0359C5C0 STRB W8, [X21 + 0xFD8]
	0x0359C5C4 LDR X0, [X22]
	0x0359C5C8 LDR W8, [X0 + 0xE0]
	0x0359C5CC CBNZ W8, 0x359C5D4
	0x0359C5D0 BL 0x1C16DFC
	0x0359C5D4 ADD X0, X20, 0x8
	0x0359C5D8 MOV X1, X19
	0x0359C5DC LDP X20, X19, [X31 + 0x20]
	0x0359C5E0 LDP X22, X21, [X31 + 0x10]
	0x0359C5E4 MOV X2, X31
	0x0359C5E8 LDR X30, [X31], #0x30
	0x0359C5EC B 0x32C477C
	0x0359C5F0 SUB X31, X31, 0x70
	0x0359C5F4 STR X30, [X31 + 0x10]
	0x0359C5F8 STP X28, X27, [X31 + 0x20]
	0x0359C5FC STP X26, X25, [X31 + 0x30]
	0x0359C600 STP X24, X23, [X31 + 0x40]
	0x0359C604 STP X22, X21, [X31 + 0x50]
	0x0359C608 STP X20, X19, [X31 + 0x60]
	0x0359C60C ADRP X20, 0xE43000
	0x0359C610 LDRB W8, [X20 + 0xFD9]
	0x0359C614 MOV X19, X0
	0x0359C618 TBNZ X8, 0x0, 0x359C6FC
	0x0359C61C ADRP X0, 0xB9B000
	0x0359C620 LDR X0, [X0 + 0x1C8]
	0x0359C624 BL 0x1C16CF4
	0x0359C628 ADRP X0, 0xB9B000
	0x0359C62C LDR X0, [X0 + 0x50]
	0x0359C630 BL 0x1C16CF4
	0x0359C634 ADRP X0, 0xB9A000
	0x0359C638 LDR X0, [X0 + 0xF48]
	0x0359C63C BL 0x1C16CF4
	0x0359C640 ADRP X0, 0xB60000
	0x0359C644 LDR X0, [X0 + 0x8D8]
	0x0359C648 BL 0x1C16CF4
	0x0359C64C ADRP X0, 0xB58000
	0x0359C650 LDR X0, [X0 + 0x810]
	0x0359C654 BL 0x1C16CF4
	0x0359C658 ADRP X0, 0xB58000
	0x0359C65C LDR X0, [X0 + 0x6C0]
	0x0359C660 BL 0x1C16CF4
	0x0359C664 ADRP X0, 0xB58000
	0x0359C668 LDR X0, [X0 + 0x6D0]
	0x0359C66C BL 0x1C16CF4
	0x0359C670 ADRP X0, 0xB9B000
	0x0359C674 LDR X0, [X0 + 0x58]
	0x0359C678 BL 0x1C16CF4
	0x0359C67C ADRP X0, 0xB9B000
	0x0359C680 LDR X0, [X0 + 0x60]
	0x0359C684 BL 0x1C16CF4
	0x0359C688 ADRP X0, 0xB5A000
	0x0359C68C LDR X0, [X0 + 0x1E0]
	0x0359C690 BL 0x1C16CF4
	0x0359C694 ADRP X0, 0xB5A000
	0x0359C698 LDR X0, [X0 + 0x1F0]
	0x0359C69C BL 0x1C16CF4
	0x0359C6A0 ADRP X0, 0xB5A000
	0x0359C6A4 LDR X0, [X0 + 0x1F8]
	0x0359C6A8 BL 0x1C16CF4
	0x0359C6AC ADRP X0, 0xB60000
	0x0359C6B0 LDR X0, [X0 + 0x3A0]
	0x0359C6B4 BL 0x1C16CF4
	0x0359C6B8 ADRP X0, 0xB80000
	0x0359C6BC LDR X0, [X0 + 0x4E0]
	0x0359C6C0 BL 0x1C16CF4
	0x0359C6C4 ADRP X0, 0xB9B000
	0x0359C6C8 LDR X0, [X0 + 0x1D0]
	0x0359C6CC BL 0x1C16CF4
	0x0359C6D0 ADRP X0, 0xB92000
	0x0359C6D4 LDR X0, [X0 + 0x7D0]
	0x0359C6D8 BL 0x1C16CF4
	0x0359C6DC ADRP X0, 0xB92000
	0x0359C6E0 LDR X0, [X0 + 0x7D8]
	0x0359C6E4 BL 0x1C16CF4
	0x0359C6E8 ADRP X0, 0xB57000
	0x0359C6EC LDR X0, [X0 + 0x988]
	0x0359C6F0 BL 0x1C16CF4
	0x0359C6F4 MOVZ W8, 0x1
	0x0359C6F8 STRB W8, [X20 + 0xFD9]
	0x0359C6FC STR X31, [X31 + 0x18]
	0x0359C700 ADRP X28, 0xB9A000
	0x0359C704 LDR W8, [X19]
	0x0359C708 LDR X28, [X28 + 0xF48]
	0x0359C70C CBZ W8, 0x359C8E8
	0x0359C710 LDR X8, [X19 + 0x20]
	0x0359C714 CBZ X8, 0x359CA20
	0x0359C718 LDR X25, [X19 + 0x28]
	0x0359C71C CBZ X25, 0x359CA68
	0x0359C720 LDR X0, [X25 + 0x20]
	0x0359C724 CBZ X0, 0x359CA6C
	0x0359C728 ADRP X8, 0xB9B000
	0x0359C72C ADRP X9, 0xB57000
	0x0359C730 LDR X8, [X8 + 0x1D0]
	0x0359C734 LDR X9, [X9 + 0x988]
	0x0359C738 LDR X21, [X8]
	0x0359C73C LDR X20, [X9]
	0x0359C740 MOV X1, X31
	0x0359C744 BL 0x361B448
	0x0359C748 ADRP X8, 0xB60000
	0x0359C74C LDR X8, [X8 + 0x8D8]
	0x0359C750 MOV X22, X0
	0x0359C754 LDR X0, [X8]
	0x0359C758 MOVZ W1, 0x1
	0x0359C75C BL 0x1C16D6C
	0x0359C760 MOV X1, X0
	0x0359C764 CBZ X1, 0x359CA70
	0x0359C768 LDR W8, [X1 + 0x18]
	0x0359C76C CBZ W8, 0x359CA74
	0x0359C770 MOVZ W8, 0x2F
	0x0359C774 STRH W8, [X1 + 0x20]
	0x0359C778 CBZ X22, 0x359CA78
	0x0359C77C MOV X0, X22
	0x0359C780 MOV X2, X31
	0x0359C784 BL 0x322BC58
	0x0359C788 MOV X1, X21
	0x0359C78C MOV X2, X31
	0x0359C790 BL 0x321B938
	0x0359C794 ADRP X8, 0xB60000
	0x0359C798 LDR X8, [X8 + 0x3A0]
	0x0359C79C MOV X22, X0
	0x0359C7A0 LDR X23, [X25 + 0x20]
	0x0359C7A4 LDR X0, [X8]
	0x0359C7A8 BL 0x1C16F10
	0x0359C7AC MOV X21, X0
	0x0359C7B0 MOV X1, X23
	0x0359C7B4 MOV X2, X31
	0x0359C7B8 BL 0x36281F8
	0x0359C7BC CBZ X21, 0x359CA7C
	0x0359C7C0 MOV X0, X21
	0x0359C7C4 MOV X1, X22
	0x0359C7C8 MOV X2, X31
	0x0359C7CC BL 0x36288CC
	0x0359C7D0 MOV X0, X21
	0x0359C7D4 MOV X1, X20
	0x0359C7D8 MOV X2, X31
	0x0359C7DC BL 0x3628980
	0x0359C7E0 MOV X0, X21
	0x0359C7E4 MOV X1, X31
	0x0359C7E8 BL 0x3628A38
	0x0359C7EC ADRP X8, 0xB80000
	0x0359C7F0 ADRP X9, 0xB58000
	0x0359C7F4 LDR X8, [X8 + 0x4E0]
	0x0359C7F8 LDR X9, [X9 + 0x6D0]
	0x0359C7FC MOV X20, X0
	0x0359C800 LDR X21, [X8]
	0x0359C804 LDR X0, [X9]
	0x0359C808 BL 0x1C16F10

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+32], X29
	003 Move [X31+40], X30
	004 Move [X31+48], X28
	005 Move [X31+56], X27
	006 Move [X31+64], X26
	007 Move [X31+72], X25
	008 Move [X31+80], X24
	009 Move [X31+88], X23
	010 Move [X31+96], X22
	011 Move [X31+104], X21
	012 Move [X31+112], X20
	013 Move [X31+120], X19
	014 Move X20, 0xE45000
	015 Move W8, [X20+4051]
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {101}
	021 Move X0, 0xB9D000
	022 Move X0, [X0+352]
	023 Call 0x1C17CF4
	024 Move X0, 0xB9D000
	025 Move X0, [X0+360]
	026 Call 0x1C17CF4
	027 Move X0, 0xB9C000
	028 Move X0, [X0+4048]
	029 Call 0x1C17CF4
	030 Move X0, 0xB62000
	031 Move X0, [X0+2264]
	032 Call 0x1C17CF4
	033 Move X0, 0xB5A000
	034 Move X0, [X0+2064]
	035 Call 0x1C17CF4
	036 Move X0, 0xB5A000
	037 Move X0, [X0+1728]
	038 Call 0x1C17CF4
	039 Move X0, 0xB5A000
	040 Move X0, [X0+1744]
	041 Call 0x1C17CF4
	042 Move X0, 0xB59000
	043 Move X0, [X0+3584]
	044 Call 0x1C17CF4
	045 Move X0, 0xB59000
	046 Move X0, [X0+3952]
	047 Call 0x1C17CF4
	048 Move X0, 0xB58000
	049 Move X0, [X0+3960]
	050 Call 0x1C17CF4
	051 Move X0, 0xB58000
	052 Move X0, [X0+3608]
	053 Call 0x1C17CF4
	054 Move X0, 0xB9C000
	055 Move X0, [X0+88]
	056 Call 0x1C17CF4
	057 Move X0, 0xB9C000
	058 Move X0, [X0+368]
	059 Call 0x1C17CF4
	060 Move X0, 0xB58000
	061 Move X0, [X0+2760]
	062 Call 0x1C17CF4
	063 Move X0, 0xB5B000
	064 Move X0, [X0+480]
	065 Call 0x1C17CF4
	066 Move X0, 0xB5B000
	067 Move X0, [X0+496]
	068 Call 0x1C17CF4
	069 Move X0, 0xB5B000
	070 Move X0, [X0+504]
	071 Call 0x1C17CF4
	072 Move X0, 0xB61000
	073 Move X0, [X0+928]
	074 Call 0x1C17CF4
	075 Move X0, 0xB5A000
	076 Move X0, [X0+2600]
	077 Call 0x1C17CF4
	078 Move X0, 0xB81000
	079 Move X0, [X0+1232]
	080 Call 0x1C17CF4
	081 Move X0, 0xB61000
	082 Move X0, [X0+1824]
	083 Call 0x1C17CF4
	084 Move X0, 0xB9C000
	085 Move X0, [X0+376]
	086 Call 0x1C17CF4
	087 Move X0, 0xB9C000
	088 Move X0, [X0+280]
	089 Call 0x1C17CF4
	090 Move X0, 0xB93000
	091 Move X0, [X0+2000]
	092 Call 0x1C17CF4
	093 Move X0, 0xB93000
	094 Move X0, [X0+2008]
	095 Call 0x1C17CF4
	096 Move X0, 0xB58000
	097 Move X0, [X0+2440]
	098 Call 0x1C17CF4
	099 Move W8, 1
	100 Move [X20+4051], W8
	101 Move [X31+24], X31
	102 Move X27, 0xB9B000
	103 Move W24, [X19]
	104 Move X27, [X27+4048]
	105 Compare W24, 0
	106 JumpIfEqual {141}
	107 Move X8, 0xB9C000
	108 Move X9, 0xB58000
	109 Move X8, [X8+376]
	110 Move X9, [X9+2440]
	111 Move X21, [X19+32]
	112 Move X20, [X19+40]
	113 Move X23, [X8]
	114 Move X26, [X9]
	115 Compare X21, 0
	116 JumpIfNotEqual {125}
	117 Move X8, 0xB58000
	118 Move X8, [X8+2760]
	119 Move X0, [X8]
	120 Move W1, W31
	121 Call 0x1C17D6C
	122 Move X21, X0
	123 Compare X0, 0
	124 JumpIfEqual {474}
	125 Move X10, 0xB58000
	126 Move X8, [X21]
	127 Move X10, [X10+3952]
	128 NotImplemented "Instruction LDRH not yet implemented."
	129 Move X1, [X10]
	130 Compare X9, 0
	131 JumpIfEqual {138}
	132 Move X10, [X8+176]
	133 Add X10, X10, 8
	134 NotImplemented "Instruction LDUR not yet implemented."
	135 NotImplemented "Instruction CMP not yet implemented."
	136 Subtract X9, X9, 1
	137 Add X10, X10, 16
	138 Move X0, X21
	139 Move W2, W31
	140 Call 0x1C5D788
	141 Move X8, [X19+72]
	142 Move TEMP, 0
	143 Not TEMP
	144 Move W9, TEMP
	145 Move [X31+24], X8
	146 Move [X19+72], X31
	147 Move [X19], W9
	148 NotImplemented "Instruction LDRSW not yet implemented."
	149 Add X8, X8, X9
	150 Add X0, X8, 312
	151 Move X8, [X0]
	152 Move X1, [X0+8]
	153 Move X0, X21
	154 NotImplemented "Instruction BLR not yet implemented."
	155 Move [X31+8], X23
	156 Move [X31+16], X20
	157 Move X28, 0xB58000
	158 Move X29, 0xB58000
	159 Move X27, 0xB5A000
	160 Move X20, 0xB9C000
	161 Move X25, 0xB61000
	162 Move X28, [X28+3608]
	163 Move X29, [X29+3960]
	164 Move X27, [X27+2600]
	165 Move X20, [X20+280]
	166 Move X25, [X25+1824]
	167 Move X22, X0
	168 Move X0, X26
	169 Compare X22, 0
	170 JumpIfEqual {462}
	171 Move X8, [X22]
	172 Move X1, [X28]
	173 Move X21, X0
	174 NotImplemented "Instruction LDRH not yet implemented."
	175 Compare X9, 0
	176 JumpIfEqual {183}
	177 Move X10, [X8+176]
	178 Add X10, X10, 8
	179 NotImplemented "Instruction LDUR not yet implemented."
	180 NotImplemented "Instruction CMP not yet implemented."
	181 Subtract X9, X9, 1
	182 Add X10, X10, 16
	183 Move X0, X22
	184 Move W2, W31
	185 Call 0x1C5D788
	186 NotImplemented "Instruction LDRSW not yet implemented."
	187 Add X8, X8, X9
	188 Add X0, X8, 312
	189 Move X8, [X0]
	190 Move X1, [X0+8]
	191 Move X0, X22
	192 NotImplemented "Instruction BLR not yet implemented."
	193 Move TEMP, X0
	194 And TEMP, TEMP, 1
	195 Compare TEMP, 1
	196 JumpIfNotEqual {233}
	197 Move X8, [X22]
	198 Move X1, [X29]
	199 NotImplemented "Instruction LDRH not yet implemented."
	200 Compare X9, 0
	201 JumpIfEqual {208}
	202 Move X10, [X8+176]
	203 Add X10, X10, 8
	204 NotImplemented "Instruction LDUR not yet implemented."
	205 NotImplemented "Instruction CMP not yet implemented."
	206 Subtract X9, X9, 1
	207 Add X10, X10, 16
	208 Move X0, X22
	209 Move W2, W31
	210 Call 0x1C5D788
	211 NotImplemented "Instruction LDRSW not yet implemented."
	212 Add X8, X8, X9
	213 Add X0, X8, 312
	214 Move X8, [X0]
	215 Move X1, [X0+8]
	216 Move X0, X22
	217 NotImplemented "Instruction BLR not yet implemented."
	218 Move X23, X0
	219 Move X0, [X27]
	220 Move W8, [X0+224]
	221 Compare W8, 0
	222 JumpIfNotEqual {224}
	223 Call 0x1C17DFC
	224 Move X0, X23
	225 Move X1, X31
	226 Call Uri.EscapeDataString, X0
	227 Move X1, [X20]
	228 Move X3, [X25]
	229 Move X2, X0
	230 Move X0, X21
	231 Move X4, X31
	232 Call String.Concat, X0, X1, X2, X3
	233 Move X23, X31
	234 Move W20, 6
	235 Move X27, 0xB9B000
	236 Move X27, [X27+4048]
	237 Move X25, [X31+16]
	238 Move TEMP, X24
	239 And TEMP, TEMP, -2147483648
	240 Compare TEMP, -2147483648
	241 JumpIfNotEqual {267}
	242 Compare X22, 0
	243 JumpIfEqual {267}
	244 Move X10, 0xB58000
	245 Move X8, [X22]
	246 Move X10, [X10+3584]
	247 NotImplemented "Instruction LDRH not yet implemented."
	248 Move X1, [X10]
	249 Compare X9, 0
	250 JumpIfEqual {257}
	251 Move X10, [X8+176]
	252 Add X10, X10, 8
	253 NotImplemented "Instruction LDUR not yet implemented."
	254 NotImplemented "Instruction CMP not yet implemented."
	255 Subtract X9, X9, 1
	256 Add X10, X10, 16
	257 Move X0, X22
	258 Move W2, W31
	259 Call 0x1C5D788
	260 NotImplemented "Instruction LDRSW not yet implemented."
	261 Add X8, X8, X9
	262 Add X0, X8, 312
	263 Move X8, [X0]
	264 Move X1, [X0+8]
	265 Move X0, X22
	266 NotImplemented "Instruction BLR not yet implemented."
	267 Compare X23, 0
	268 JumpIfNotEqual {463}
	269 NotImplemented "Instruction CMP not yet implemented."
	270 Compare W20, 0
	271 JumpIfNotEqual {448}
	272 Compare X25, 0
	273 JumpIfEqual {465}
	274 Move X0, [X25+32]
	275 Compare X0, 0
	276 JumpIfEqual {466}
	277 Move X1, X31
	278 Call Uri.get_AbsolutePath, X0
	279 Move X8, 0xB61000
	280 Move X8, [X8+2264]
	281 Move X22, X0
	282 Move X0, [X8]
	283 Move W1, 1
	284 Call 0x1C17D6C
	285 Move X1, X0
	286 Compare X1, 0
	287 JumpIfEqual {467}
	288 Move W8, [X1+24]
	289 Compare W8, 0
	290 JumpIfEqual {468}
	291 Move W8, 47
	292 NotImplemented "Instruction STRH not yet implemented."
	293 Compare X22, 0
	294 JumpIfEqual {469}
	295 Move X0, X22
	296 Move X2, X31
	297 Call String.TrimEnd, X0, X1
	298 Move X1, [X31+8]
	299 Move X2, X31
	300 Call String.Concat, X0, X1
	301 Move X8, 0xB61000
	302 Move X23, [X25+32]
	303 Move X8, [X8+928]
	304 Move X22, X0
	305 Move X0, [X8]
	306 Call 0x1C17F10
	307 Move X20, X0
	308 Move X1, X23
	309 Move X2, X31
	310 Call UriBuilder..ctor, X0, X1
	311 Compare X20, 0
	312 JumpIfEqual {470}
	313 Move X0, X20
	314 Move X1, X22
	315 Move X2, X31
	316 Call UriBuilder.set_Path, X0, X1
	317 Move X0, X20
	318 Move X1, X21
	319 Move X2, X31
	320 Call UriBuilder.set_Query, X0, X1
	321 Move X0, X20
	322 Move X1, X31
	323 Call UriBuilder.get_Uri, X0
	324 Move X8, 0xB81000
	325 Move X9, 0xB59000
	326 Move X8, [X8+1232]
	327 Move X9, [X9+1744]
	328 Move X20, X0
	329 Move X21, [X8]
	330 Move X0, [X9]
	331 Call 0x1C17F10
	332 Move X8, 0xB59000
	333 Move X8, [X8+1728]
	334 Move X22, X0
	335 Move X1, [X8]
	336 Call Dictionary`2<Object, Object>..ctor, X0
	337 Move X8, 0xB93000
	338 Move X1, [X19+48]
	339 Move X8, [X8+2008]
	340 Move X0, [X8]
	341 Move X2, X31
	342 Call String.Concat, X0, X1
	343 Compare X22, 0
	344 JumpIfEqual {471}
	345 Move X8, 0xB93000
	346 Move X8, [X8+2000]
	347 Move X9, 0xB59000
	348 Move X9, [X9+2064]
	349 Move X2, X0
	350 Move X1, [X8]
	351 Move X3, [X9]
	352 Move X0, X22
	353 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	354 Move X24, [X25+16]
	355 Compare X24, 0
	356 JumpIfEqual {472}
	357 Move X10, 0xB9C000
	358 Move W23, [X25+24]
	359 Move X8, [X24]
	360 Move X26, [X19+56]
	361 Move X25, [X19+64]
	362 Move X10, [X10+88]
	363 NotImplemented "Instruction LDRH not yet implemented."
	364 Move X1, [X10]
	365 Compare X9, 0
	366 JumpIfEqual {373}
	367 Move X10, [X8+176]
	368 Add X10, X10, 8
	369 NotImplemented "Instruction LDUR not yet implemented."
	370 NotImplemented "Instruction CMP not yet implemented."
	371 Subtract X9, X9, 1
	372 Add X10, X10, 16
	373 Move W2, 3
	374 Move X0, X24
	375 Call 0x1C5D788
	376 Move W9, [X10]
	377 Add W9, W9, 3
	378 Add X8, X8, W9
	379 Add X0, X8, 312
	380 Move X8, [X0]
	381 Move X9, [X0+8]
	382 Move X0, X24
	383 Move X1, X21
	384 Move X2, X20
	385 Move X3, X22
	386 Move X4, X31
	387 Move W5, W23
	388 Move X6, X26
	389 Move X7, X25
	390 Move [X31], X9
	391 NotImplemented "Instruction BLR not yet implemented."
	392 Compare X0, 0
	393 JumpIfEqual {473}
	394 Move X8, 0xB5B000
	395 Move X8, [X8+504]
	396 Move X1, [X8]
	397 Call Task`1<Object>.GetAwaiter, X0
	398 Move X8, 0xB5B000
	399 Move X8, [X8+496]
	400 Move [X31+24], X0
	401 Move X1, [X8]
	402 Add X0, X31, 24
	403 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	404 Move TEMP, X0
	405 And TEMP, TEMP, 1
	406 Compare TEMP, 1
	407 JumpIfNotEqual {433}
	408 Move X8, 0xB5B000
	409 Move X8, [X8+480]
	410 Add X0, X31, 24
	411 Move X1, [X8]
	412 Call TaskAwaiter`1<Object>.GetResult, X0
	413 Move X8, 0xB9C000
	414 Move X8, [X8+368]
	415 Move X1, [X8]
	416 Call 0x22119A8, X0
	417 Move TEMP, 1
	418 Not TEMP
	419 Move W8, TEMP
	420 Move [X19+8], W8
	421 Move X20, X0
	422 Move X0, [X27]
	423 Move X21, 0xB9C000
	424 Move W8, [X0+224]
	425 Move X21, [X21+360]
	426 Compare W8, 0
	427 JumpIfNotEqual {429}
	428 Call 0x1C17DFC
	429 Move X2, [X21]
	430 Move X0, X19
	431 Move X1, X20
	432 Call AsyncTaskMethodBuilder`1<Object>.SetResult, X0, X1
	433 Move [X19], W31
	434 Move X8, [X31+24]
	435 Move [X19+72], X8
	436 Move X0, [X27]
	437 Move W8, [X0+224]
	438 Compare W8, 0
	439 JumpIfNotEqual {441}
	440 Call 0x1C17DFC
	441 Move X8, 0xB9C000
	442 Move X8, [X8+352]
	443 Add X0, X19, 8
	444 Move X3, [X8]
	445 Add X1, X31, 24
	446 Move X2, X19
	447 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	448 Move X20, [X31+112]
	449 Move X19, [X31+120]
	450 Move X22, [X31+96]
	451 Move X21, [X31+104]
	452 Move X24, [X31+80]
	453 Move X23, [X31+88]
	454 Move X26, [X31+64]
	455 Move X25, [X31+72]
	456 Move X28, [X31+48]
	457 Move X27, [X31+56]
	458 Move X29, [X31+32]
	459 Move X30, [X31+40]
	460 Add X31, X31, 128
	461 Return 
	462 Call 0x1C17F20
	463 Move X0, X23
	464 Call 0x1C17F18
	465 Call 0x1C17F20
	466 Call 0x1C17F20
	467 Call 0x1C17F20
	468 Call 0x1C17F28
	469 Call 0x1C17F20
	470 Call 0x1C17F20
	471 Call 0x1C17F20
	472 Call 0x1C17F20
	473 Call 0x1C17F20
	474 Call 0x1C17F20
	475 Move X20, X1
	476 Move X21, X0
	477 Move X21, X26
	478 NotImplemented "Instruction CMP not yet implemented."
	479 Call 0x3EB2AD0
	480 Move X23, [X0]
	481 Call 0x3EB2AE0
	482 Move W20, W31
	483 Move X21, X0
	484 Move X20, X1
	485 Move X23, X31
	486 Move TEMP, X24
	487 And TEMP, TEMP, -2147483648
	488 Compare TEMP, -2147483648
	489 JumpIfNotEqual {515}
	490 Compare X22, 0
	491 JumpIfEqual {515}
	492 Move X10, 0xB58000
	493 Move X8, [X22]
	494 Move X10, [X10+3584]
	495 NotImplemented "Instruction LDRH not yet implemented."
	496 Move X1, [X10]
	497 Compare X9, 0
	498 JumpIfEqual {505}
	499 Move X10, [X8+176]
	500 Add X10, X10, 8
	501 NotImplemented "Instruction LDUR not yet implemented."
	502 NotImplemented "Instruction CMP not yet implemented."
	503 Subtract X9, X9, 1
	504 Add X10, X10, 16
	505 Move X0, X22
	506 Move W2, W31
	507 Call 0x1C5D788
	508 NotImplemented "Instruction LDRSW not yet implemented."
	509 Add X8, X8, X9
	510 Add X0, X8, 312
	511 Move X8, [X0]
	512 Move X1, [X0+8]
	513 Move X0, X22
	514 NotImplemented "Instruction BLR not yet implemented."
	515 Compare X23, 0
	516 JumpIfNotEqual {559}
	517 NotImplemented "Instruction CMP not yet implemented."
	518 Move X0, X21
	519 Call 0x3EB2AD0
	520 Move X20, X0
	521 Move X0, 0xB58000
	522 Move X0, [X0+2000]
	523 Call 0x1C17D08
	524 Move X8, [X20]
	525 Move X1, [X8]
	526 Call 0x1C18270
	527 Move TEMP, X0
	528 And TEMP, TEMP, 1
	529 Compare TEMP, 1
	530 JumpIfNotEqual {551}
	531 Move X20, [X20]
	532 Call 0x3EB2AE0
	533 Move TEMP, 1
	534 Not TEMP
	535 Move W8, TEMP
	536 Move [X19+8], W8
	537 Move X0, 0xB9B000
	538 Move X0, [X0+4048]
	539 Call 0x1C17D08
	540 Move W8, [X0+224]
	541 Compare W8, 0
	542 JumpIfNotEqual {544}
	543 Call 0x1C17DFC
	544 Move X0, 0xB9C000
	545 Move X0, [X0+384]
	546 Call 0x1C17D08
	547 Move X2, X0
	548 Move X0, X19
	549 Move X1, X20
	550 Call AsyncTaskMethodBuilder`1<Object>.SetException, X0, X1
	551 Move W0, 8
	552 Call 0x3EB2AF0
	553 Move X8, [X20]
	554 Move [X0], X8
	555 Move X1, 0x919000
	556 Add X1, X1, 3672
	557 Move X2, X31
	558 Call 0x3EB2B00
	559 Move X0, X23
	560 Call 0x1C17F18
	561 Move X20, X1
	562 Move X21, X0
	563 Move TEMP, X24
	564 And TEMP, TEMP, -2147483648
	565 Compare TEMP, -2147483648
	566 JumpIfEqual {490}
	567 Move X21, X0
	568 Call 0x3EB2AE0
	569 Move X0, X21
	570 Call 0x1D2D690
	571 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x0359C80C ADRP X8, 0xB58000
	0x0359C810 LDR X8, [X8 + 0x6C0]
	0x0359C814 MOV X22, X0
	0x0359C818 LDR X1, [X8]
	0x0359C81C BL 0x2AA4804
	0x0359C820 ADRP X8, 0xB92000
	0x0359C824 LDR X8, [X8 + 0x7D8]
	0x0359C828 LDR X1, [X19 + 0x30]
	0x0359C82C LDR X0, [X8]
	0x0359C830 MOV X2, X31
	0x0359C834 BL 0x321B938
	0x0359C838 CBZ X22, 0x359CA80
	0x0359C83C ADRP X8, 0xB92000
	0x0359C840 LDR X8, [X8 + 0x7D0]
	0x0359C844 ADRP X9, 0xB58000
	0x0359C848 LDR X9, [X9 + 0x810]
	0x0359C84C MOV X2, X0
	0x0359C850 LDR X1, [X8]
	0x0359C854 LDR X3, [X9]
	0x0359C858 MOV X0, X22
	0x0359C85C BL 0x2AA5098
	0x0359C860 LDR X0, [X19 + 0x20]
	0x0359C864 BL 0x3597D7C
	0x0359C868 MOV X23, X0
	0x0359C86C MOV X0, X31
	0x0359C870 BL 0x3241948
	0x0359C874 CBZ X0, 0x359CA84
	0x0359C878 LDR X8, [X0]
	0x0359C87C LDR X9, [X8 + 0x268]
	0x0359C880 LDR X2, [X8 + 0x270]
	0x0359C884 MOV X1, X23

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xE44000
	007 Move X21, 0xB9B000
	008 Move W8, [X22+4052]
	009 Move X21, [X21+4048]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xB9C000
	017 Move X0, [X0+392]
	018 Call 0x1C17CF4
	019 Move X0, 0xB9B000
	020 Move X0, [X0+4048]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+4052], W8
	024 Move X0, [X21]
	025 Move X21, 0xB9C000
	026 Move W8, [X0+224]
	027 Move X21, [X21+392]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X2, [X21]
	032 Add X0, X20, 8
	033 Move X1, X19
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Call AsyncTaskMethodBuilder`1<Object>.SetStateMachine, X0, X1
	040 Return 

