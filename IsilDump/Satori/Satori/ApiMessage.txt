Type: Satori.ApiMessage

Method: System.String get_ConsumeTime()

Disassembly:
	0x0359529C LDRSW X9, [X10]
	0x035952A0 ADD X8, X8, X9, 0x4, LSL

ISIL:
	001 Move X0, [X0+16]
	002 Return X0

Method: System.Void set_ConsumeTime(System.String value)

Disassembly:
	0x035952A4 ADD X0, X8, 0x138
	0x035952A8 LDP X8, X1, [X0]

ISIL:
	001 Move [X0+16], X1
	002 Return 

Method: System.String get_CreateTime()

Disassembly:
	0x035952AC MOV X0, X19
	0x035952B0 BLR X8

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void set_CreateTime(System.String value)

Disassembly:
	0x035952B4 MOV X23, X0
	0x035952B8 LDR X0, [X29]

ISIL:
	001 Move [X0+24], X1
	002 Return 

Method: System.String get_Id()

Disassembly:
	0x035952BC MOV X22, X1
	0x035952C0 MOVZ W1, 0x5

ISIL:
	001 Move X0, [X0+32]
	002 Return X0

Method: System.Void set_Id(System.String value)

Disassembly:
	0x035952C4 BL 0x1C16D6C
	0x035952C8 CBZ X0, 0x359545C

ISIL:
	001 Move [X0+32], X1
	002 Return 

Method: System.String get_ImageUrl()

Disassembly:
	0x035952CC LDR W8, [X0 + 0x18]
	0x035952D0 CBZ W8, 0x3595464

ISIL:
	001 Move X0, [X0+40]
	002 Return X0

Method: System.Void set_ImageUrl(System.String value)

Disassembly:
	0x035952D4 LDR X9, [X25]
	0x035952D8 CMP W8, 0x1

ISIL:
	001 Move [X0+40], X1
	002 Return 

Method: System.Collections.Generic.IDictionary`2<System.String, System.String> get_Metadata()

Disassembly:
	0x035952DC STR X9, [X0 + 0x20]
	0x035952E0 B.EQ 0x3595458
	0x035952E4 CMP W8, 0x2
	0x035952E8 STR X23, [X0 + 0x28]
	0x035952EC B.LS 0x3595468
	0x035952F0 LDR X9, [X26]
	0x035952F4 CMP W8, 0x3
	0x035952F8 STR X9, [X0 + 0x30]
	0x035952FC B.EQ 0x359546C
	0x03595300 CMP W8, 0x4
	0x03595304 STR X22, [X0 + 0x38]
	0x03595308 B.LS 0x3595460
	0x0359530C LDR X8, [X20]
	0x03595310 STR X8, [X0 + 0x40]
	0x03595314 MOV X1, X31
	0x03595318 BL 0x32278CC
	0x0359531C MOV X1, X0
	0x03595320 MOV X0, X21
	0x03595324 MOV X2, X31
	0x03595328 BL 0x321B938
	0x0359532C B 0x35951F8
	0x03595330 MOV X22, X31
	0x03595334 MOVZ W20, 0xA
	0x03595338 CBZ X19, 0x359539C
	0x0359533C LDR X8, [X19]
	0x03595340 ADRP X10, 0xB5E000
	0x03595344 LDRH W9, [X8 + 0x12E]
	0x03595348 LDR X10, [X10 + 0xE00]
	0x0359534C LDR X1, [X10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xE4B000
	005 Move W8, [X20+4006]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0xB60000
	012 Move X0, [X0+1728]
	013 Call 0x1C17CF4
	014 Move X0, 0xB60000
	015 Move X0, [X0+1744]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+4006], W8
	019 Move X19, [X19+48]
	020 Compare X19, 0
	021 JumpIfNotEqual {31}
	022 Move X8, 0xB60000
	023 Move X8, [X8+1744]
	024 Move X0, [X8]
	025 Call 0x1C17F10
	026 Move X8, 0xB60000
	027 Move X8, [X8+1728]
	028 Move X19, X0
	029 Move X1, [X8]
	030 Call Dictionary`2<Object, Object>..ctor, X0
	031 Move X0, X19
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X30, [X31+32]
	035 Return X0

Method: System.Collections.Generic.Dictionary`2<System.String, System.String> get__metadata()

Disassembly:
	0x03595350 CBZ X9, 0x3595374
	0x03595354 LDR X10, [X8 + 0xB0]

ISIL:
	001 Move X0, [X0+48]
	002 Return X0

Method: System.Void set__metadata(System.Collections.Generic.Dictionary`2<System.String, System.String> value)

Disassembly:
	0x03595358 ADD X10, X10, 0x8
	0x0359535C LDUR X11, [X10 - 0x8]

ISIL:
	001 Move [X0+48], X1
	002 Return 

Method: System.String get_ReadTime()

Disassembly:
	0x03595360 CMP X11, X1
	0x03595364 B.EQ 0x3595384

ISIL:
	001 Move X0, [X0+56]
	002 Return X0

Method: System.Void set_ReadTime(System.String value)

Disassembly:
	0x03595368 SUBS X9, X9, 0x1
	0x0359536C ADD X10, X10, 0x10

ISIL:
	001 Move [X0+56], X1
	002 Return 

Method: System.String get_ScheduleId()

Disassembly:
	0x03595370 B.NE 0x359535C
	0x03595374 MOV X0, X19

ISIL:
	001 Move X0, [X0+64]
	002 Return X0

Method: System.Void set_ScheduleId(System.String value)

Disassembly:
	0x03595378 MOV W2, W31
	0x0359537C BL 0x1C5C788

ISIL:
	001 Move [X0+64], X1
	002 Return 

Method: System.String get_SendTime()

Disassembly:
	0x03595380 B 0x3595390
	0x03595384 LDRSW X9, [X10]

ISIL:
	001 Move X0, [X0+72]
	002 Return X0

Method: System.Void set_SendTime(System.String value)

Disassembly:
	0x03595388 ADD X8, X8, X9, 0x4, LSL
	0x0359538C ADD X0, X8, 0x138

ISIL:
	001 Move [X0+72], X1
	002 Return 

Method: System.String get_Text()

Disassembly:
	0x03595390 LDP X8, X1, [X0]
	0x03595394 MOV X0, X19

ISIL:
	001 Move X0, [X0+80]
	002 Return X0

Method: System.Void set_Text(System.String value)

Disassembly:
	0x03595398 BLR X8
	0x0359539C CBNZ X22, 0x359547C

ISIL:
	001 Move [X0+80], X1
	002 Return 

Method: System.String get_Title()

Disassembly:
	0x035953A0 CMP W20, 0xA
	0x035953A4 B.EQ 0x35953AC

ISIL:
	001 Move X0, [X0+88]
	002 Return X0

Method: System.Void set_Title(System.String value)

Disassembly:
	0x035953A8 CBNZ W20, 0x35953FC
	0x035953AC ADRP X8, 0xBA1000

ISIL:
	001 Move [X0+88], X1
	002 Return 

Method: System.String get_UpdateTime()

Disassembly:
	0x035953B0 LDR X8, [X8 + 0xE28]
	0x035953B4 MOV X1, X21

ISIL:
	001 Move X0, [X0+96]
	002 Return X0

Method: System.Void set_UpdateTime(System.String value)

Disassembly:
	0x035953B8 MOV X3, X31
	0x035953BC LDR X0, [X8]

ISIL:
	001 Move [X0+96], X1
	002 Return 

Method: System.String ToString()

Disassembly:
	0x035953C0 ADRP X8, 0xB5E000
	0x035953C4 LDR X8, [X8 + 0x848]
	0x035953C8 LDR X2, [X8]
	0x035953CC BL 0x32274B8
	0x035953D0 MOV X1, X0
	0x035953D4 LDR X0, [X31]
	0x035953D8 LDP X20, X19, [X31 + 0x60]
	0x035953DC LDP X22, X21, [X31 + 0x50]
	0x035953E0 LDP X24, X23, [X31 + 0x40]
	0x035953E4 LDP X26, X25, [X31 + 0x30]
	0x035953E8 LDP X28, X27, [X31 + 0x20]
	0x035953EC LDP X29, X30, [X31 + 0x10]
	0x035953F0 MOV X2, X31
	0x035953F4 ADD X31, X31, 0x70
	0x035953F8 B 0x321B938
	0x035953FC LDP X20, X19, [X31 + 0x60]
	0x03595400 LDP X22, X21, [X31 + 0x50]
	0x03595404 LDP X24, X23, [X31 + 0x40]
	0x03595408 LDP X26, X25, [X31 + 0x30]
	0x0359540C LDP X28, X27, [X31 + 0x20]
	0x03595410 LDP X29, X30, [X31 + 0x10]
	0x03595414 ADD X31, X31, 0x70
	0x03595418 RET
	0x0359541C BL 0x1C16F20
	0x03595420 BL 0x1C16F20
	0x03595424 BL 0x1C16F28
	0x03595428 BL 0x1C16F20
	0x0359542C BL 0x1C16F28
	0x03595430 BL 0x1C16F28
	0x03595434 BL 0x1C16F28
	0x03595438 BL 0x1C16F28
	0x0359543C BL 0x1C16F28
	0x03595440 BL 0x1C16F20
	0x03595444 BL 0x1C16F28
	0x03595448 BL 0x1C16F28
	0x0359544C BL 0x1C16F28
	0x03595450 BL 0x1C16F28
	0x03595454 BL 0x1C16F20
	0x03595458 BL 0x1C16F28
	0x0359545C BL 0x1C16F20
	0x03595460 BL 0x1C16F28
	0x03595464 BL 0x1C16F28
	0x03595468 BL 0x1C16F28
	0x0359546C BL 0x1C16F28
	0x03595470 BL 0x1C16F20
	0x03595474 MOV X0, X23
	0x03595478 BL 0x1C16F18
	0x0359547C MOV X0, X22
	0x03595480 BL 0x1C16F18
	0x03595484 B 0x35954F8
	0x03595488 B 0x35954F8
	0x0359548C B 0x35954F8
	0x03595490 B 0x35954F8
	0x03595494 B 0x35954F8
	0x03595498 B 0x35954F8
	0x0359549C B 0x35954F8
	0x035954A0 MOV X21, X24
	0x035954A4 B 0x35954F8
	0x035954A8 B 0x35955A8
	0x035954AC B 0x35955A8
	0x035954B0 B 0x35955A8
	0x035954B4 B 0x35955A8
	0x035954B8 B 0x35955A8
	0x035954BC B 0x35955A8
	0x035954C0 B 0x35955A8
	0x035954C4 B 0x3595648
	0x035954C8 B 0x3595648
	0x035954CC B 0x3595648
	0x035954D0 B 0x3595648
	0x035954D4 B 0x3595648
	0x035954D8 B 0x3595648
	0x035954DC B 0x3595648
	0x035954E0 MOV X22, X19
	0x035954E4 B 0x35955A8
	0x035954E8 MOV X22, X19
	0x035954EC B 0x3595648
	0x035954F0 B 0x35954F8
	0x035954F4 B 0x35954F8
	0x035954F8 CMP W1, 0x1
	0x035954FC B.NE 0x3595518
	0x03595500 BL 0x3EB1AD0
	0x03595504 LDR X22, [X0]
	0x03595508 BL 0x3EB1AE0
	0x0359550C MOV W20, W31
	0x03595510 CBNZ X19, 0x359533C
	0x03595514 B 0x359539C
	0x03595518 MOV X20, X0
	0x0359551C MOV X22, X31
	0x03595520 B 0x3595528
	0x03595524 MOV X20, X0
	0x03595528 CBZ X19, 0x359558C
	0x0359552C LDR X8, [X19]
	0x03595530 ADRP X10, 0xB5E000
	0x03595534 LDRH W9, [X8 + 0x12E]
	0x03595538 LDR X10, [X10 + 0xE00]
	0x0359553C LDR X1, [X10]
	0x03595540 CBZ X9, 0x3595564
	0x03595544 LDR X10, [X8 + 0xB0]
	0x03595548 ADD X10, X10, 0x8
	0x0359554C LDUR X11, [X10 - 0x8]
	0x03595550 CMP X11, X1
	0x03595554 B.EQ 0x3595574
	0x03595558 SUBS X9, X9, 0x1
	0x0359555C ADD X10, X10, 0x10
	0x03595560 B.NE 0x359554C
	0x03595564 MOV X0, X19
	0x03595568 MOV W2, W31
	0x0359556C BL 0x1C5C788
	0x03595570 B 0x3595580
	0x03595574 LDRSW X9, [X10]
	0x03595578 ADD X8, X8, X9, 0x4, LSL
	0x0359557C ADD X0, X8, 0x138
	0x03595580 LDP X8, X1, [X0]
	0x03595584 MOV X0, X19
	0x03595588 BLR X8
	0x0359558C CBZ X22, 0x35956D8
	0x03595590 MOV X0, X22
	0x03595594 BL 0x1C16F18
	0x03595598 B 0x35955A8
	0x0359559C B 0x3595648
	0x035955A0 B 0x35955A8
	0x035955A4 B 0x3595648
	0x035955A8 CMP W1, 0x1
	0x035955AC B.NE 0x35955C8
	0x035955B0 BL 0x3EB1AD0
	0x035955B4 LDR X23, [X0]
	0x035955B8 BL 0x3EB1AE0
	0x035955BC MOV W19, W31
	0x035955C0 CBNZ X21, 0x35950CC
	0x035955C4 B 0x359512C
	0x035955C8 MOV X20, X0
	0x035955CC MOV X23, X31
	0x035955D0 B 0x35955D8
	0x035955D4 MOV X20, X0
	0x035955D8 CBZ X21, 0x359563C
	0x035955DC LDR X8, [X21]
	0x035955E0 ADRP X10, 0xB5E000
	0x035955E4 LDRH W9, [X8 + 0x12E]
	0x035955E8 LDR X10, [X10 + 0xE00]
	0x035955EC LDR X1, [X10]
	0x035955F0 CBZ X9, 0x3595614
	0x035955F4 LDR X10, [X8 + 0xB0]
	0x035955F8 ADD X10, X10, 0x8
	0x035955FC LDUR X11, [X10 - 0x8]
	0x03595600 CMP X11, X1
	0x03595604 B.EQ 0x3595624
	0x03595608 SUBS X9, X9, 0x1
	0x0359560C ADD X10, X10, 0x10
	0x03595610 B.NE 0x35955FC
	0x03595614 MOV X0, X21
	0x03595618 MOV W2, W31
	0x0359561C BL 0x1C5C788
	0x03595620 B 0x3595630
	0x03595624 LDRSW X9, [X10]
	0x03595628 ADD X8, X8, X9, 0x4, LSL
	0x0359562C ADD X0, X8, 0x138
	0x03595630 LDP X8, X1, [X0]
	0x03595634 MOV X0, X21
	0x03595638 BLR X8
	0x0359563C CBZ X23, 0x35956D8
	0x03595640 MOV X0, X23
	0x03595644 BL 0x1C16F18
	0x03595648 CMP W1, 0x1
	0x0359564C B.NE 0x3595660
	0x03595650 BL 0x3EB1AD0
	0x03595654 LDR X23, [X0]
	0x03595658 BL 0x3EB1AE0
	0x0359565C B 0x3594E64
	0x03595660 MOV X20, X0
	0x03595664 MOV X23, X31
	0x03595668 B 0x3595670
	0x0359566C MOV X20, X0
	0x03595670 CBZ X21, 0x35956D4
	0x03595674 LDR X8, [X21]
	0x03595678 ADRP X10, 0xB5E000
	0x0359567C LDRH W9, [X8 + 0x12E]
	0x03595680 LDR X10, [X10 + 0xE00]
	0x03595684 LDR X1, [X10]
	0x03595688 CBZ X9, 0x35956AC
	0x0359568C LDR X10, [X8 + 0xB0]
	0x03595690 ADD X10, X10, 0x8
	0x03595694 LDUR X11, [X10 - 0x8]
	0x03595698 CMP X11, X1
	0x0359569C B.EQ 0x35956BC
	0x035956A0 SUBS X9, X9, 0x1
	0x035956A4 ADD X10, X10, 0x10
	0x035956A8 B.NE 0x3595694
	0x035956AC MOV X0, X21
	0x035956B0 MOV W2, W31
	0x035956B4 BL 0x1C5C788
	0x035956B8 B 0x35956C8
	0x035956BC LDRSW X9, [X10]
	0x035956C0 ADD X8, X8, X9, 0x4, LSL
	0x035956C4 ADD X0, X8, 0x138
	0x035956C8 LDP X8, X1, [X0]
	0x035956CC MOV X0, X21
	0x035956D0 BLR X8
	0x035956D4 CBNZ X23, 0x35956E0
	0x035956D8 MOV X0, X20
	0x035956DC BL 0x1D2C690
	0x035956E0 MOV X0, X23
	0x035956E4 BL 0x1C16F18
	0x035956E8 BL 0x1990590
	0x035956EC MOV X1, X31
	0x035956F0 B 0x33BDD8C
	0x035956F4 LDR X0, [X0 + 0x10]
	0x035956F8 RET
	0x035956FC LDR X0, [X0 + 0x10]
	0x03595700 RET
	0x03595704 STR X1, [X0 + 0x10]
	0x03595708 RET
	0x0359570C LDR X0, [X0 + 0x18]
	0x03595710 RET
	0x03595714 STR X1, [X0 + 0x18]
	0x03595718 RET
	0x0359571C LDR X0, [X0 + 0x20]
	0x03595720 RET
	0x03595724 STR X1, [X0 + 0x20]
	0x03595728 RET
	0x0359572C STP X30, X23, [X31 - 0x30]!
	0x03595730 STP X22, X21, [X31 + 0x10]
	0x03595734 STP X20, X19, [X31 + 0x20]
	0x03595738 ADRP X20, 0xE4A000
	0x0359573C ADRP X21, 0xB5E000
	0x03595740 ADRP X22, 0xB5E000
	0x03595744 LDRB W8, [X20 + 0xFAC]
	0x03595748 LDR X21, [X21 + 0x988]
	0x0359574C LDR X22, [X22 + 0x9D0]
	0x03595750 MOV X19, X0
	0x03595754 TBNZ X8, 0x0, 0x35957A8
	0x03595758 ADRP X0, 0xB5E000
	0x0359575C LDR X0, [X0 + 0x9D0]
	0x03595760 BL 0x1C16CF4
	0x03595764 ADRP X0, 0xB5E000
	0x03595768 LDR X0, [X0 + 0x838]
	0x0359576C BL 0x1C16CF4
	0x03595770 ADRP X0, 0xB99000
	0x03595774 LDR X0, [X0 + 0x60]
	0x03595778 BL 0x1C16CF4
	0x0359577C ADRP X0, 0xBA1000
	0x03595780 LDR X0, [X0 + 0xF10]
	0x03595784 BL 0x1C16CF4
	0x03595788 ADRP X0, 0xB98000
	0x0359578C LDR X0, [X0 + 0xD78]
	0x03595790 BL 0x1C16CF4
	0x03595794 ADRP X0, 0xB5E000
	0x03595798 LDR X0, [X0 + 0x988]
	0x0359579C BL 0x1C16CF4
	0x035957A0 MOVZ W8, 0x1
	0x035957A4 STRB W8, [X20 + 0xFAC]
	0x035957A8 LDR X0, [X22]
	0x035957AC LDR X21, [X21]
	0x035957B0 MOVZ W1, 0x4
	0x035957B4 BL 0x1C16D6C
	0x035957B8 CBZ X0, 0x35958D8
	0x035957BC MOV X20, X0
	0x035957C0 CBZ X21, 0x35957D8
	0x035957C4 LDR X8, [X20]
	0x035957C8 MOV X0, X21
	0x035957CC LDR X1, [X8 + 0x40]
	0x035957D0 BL 0x1C16E00
	0x035957D4 CBZ X0, 0x35958CC
	0x035957D8 LDR W8, [X20 + 0x18]
	0x035957DC CBZ W8, 0x35958C8
	0x035957E0 ADRP X22, 0xBA1000
	0x035957E4 LDR X22, [X22 + 0xF10]
	0x035957E8 STR X21, [X20 + 0x20]
	0x035957EC LDR X0, [X22]
	0x035957F0 CBZ X0, 0x3595808
	0x035957F4 LDR X8, [X20]
	0x035957F8 LDR X1, [X8 + 0x40]
	0x035957FC BL 0x1C16E00
	0x03595800 CBZ X0, 0x35958CC
	0x03595804 LDR W8, [X20 + 0x18]
	0x03595808 CMP W8, 0x1
	0x0359580C B.LS 0x35958C8
	0x03595810 LDR X9, [X22]
	0x03595814 STR X9, [X20 + 0x28]
	0x03595818 LDR X21, [X19 + 0x10]
	0x0359581C CBZ X21, 0x3595838
	0x03595820 LDR X8, [X20]
	0x03595824 MOV X0, X21
	0x03595828 LDR X1, [X8 + 0x40]
	0x0359582C BL 0x1C16E00
	0x03595830 CBZ X0, 0x35958CC
	0x03595834 LDR W8, [X20 + 0x18]
	0x03595838 CMP W8, 0x2
	0x0359583C B.LS 0x35958C8
	0x03595840 ADRP X22, 0xB5E000
	0x03595844 LDR X22, [X22 + 0x838]
	0x03595848 STR X21, [X20 + 0x30]
	0x0359584C LDR X0, [X22]
	0x03595850 CBZ X0, 0x3595868
	0x03595854 LDR X8, [X20]
	0x03595858 LDR X1, [X8 + 0x40]
	0x0359585C BL 0x1C16E00
	0x03595860 CBZ X0, 0x35958CC
	0x03595864 LDR W8, [X20 + 0x18]
	0x03595868 CMP W8, 0x3
	0x0359586C B.LS 0x35958C8
	0x03595870 LDR X8, [X22]
	0x03595874 ADRP X21, 0xB99000
	0x03595878 ADRP X23, 0xB98000
	0x0359587C LDR X21, [X21 + 0x60]
	0x03595880 LDR X23, [X23 + 0xD78]
	0x03595884 MOV X0, X20
	0x03595888 MOV X1, X31
	0x0359588C STR X8, [X20 + 0x38]
	0x03595890 BL 0x3227578
	0x03595894 LDR X2, [X19 + 0x18]
	0x03595898 LDR X1, [X21]
	0x0359589C LDR X3, [X22]
	0x035958A0 MOV X4, X31
	0x035958A4 BL 0x32277C4
	0x035958A8 LDR X2, [X19 + 0x20]
	0x035958AC LDR X1, [X23]
	0x035958B0 LDR X3, [X22]
	0x035958B4 LDP X20, X19, [X31 + 0x20]
	0x035958B8 LDP X22, X21, [X31 + 0x10]
	0x035958BC MOV X4, X31
	0x035958C0 LDP X30, X23, [X31], #0x30
	0x035958C4 B 0x32277C4
	0x035958C8 BL 0x1C16F28
	0x035958CC BL 0x1C16F44
	0x035958D0 MOV X1, X31
	0x035958D4 BL 0x1C16DEC
	0x035958D8 BL 0x1C16F20
	0x035958DC MOV X1, X31
	0x035958E0 B 0x33BDD8C
	0x035958E4 STR X30, [X31 - 0x20]!
	0x035958E8 STP X20, X19, [X31 + 0x10]
	0x035958EC ADRP X20, 0xE4A000
	0x035958F0 LDRB W8, [X20 + 0xFAD]
	0x035958F4 MOV X19, X0
	0x035958F8 TBNZ X8, 0x0, 0x359591C
	0x035958FC ADRP X0, 0xB5F000
	0x03595900 LDR X0, [X0 + 0x6C0]
	0x03595904 BL 0x1C16CF4
	0x03595908 ADRP X0, 0xB5F000
	0x0359590C LDR X0, [X0 + 0x6D0]
	0x03595910 BL 0x1C16CF4
	0x03595914 MOVZ W8, 0x1
	0x03595918 STRB W8, [X20 + 0xFAD]
	0x0359591C LDR X19, [X19 + 0x10]
	0x03595920 CBNZ X19, 0x3595948
	0x03595924 ADRP X8, 0xB5F000
	0x03595928 LDR X8, [X8 + 0x6D0]
	0x0359592C LDR X0, [X8]
	0x03595930 BL 0x1C16F10
	0x03595934 ADRP X8, 0xB5F000
	0x03595938 LDR X8, [X8 + 0x6C0]
	0x0359593C MOV X19, X0
	0x03595940 LDR X1, [X8]
	0x03595944 BL 0x2AA4804
	0x03595948 MOV X0, X19
	0x0359594C LDP X20, X19, [X31 + 0x10]
	0x03595950 LDR X30, [X31], #0x20
	0x03595954 RET
	0x03595958 LDR X0, [X0 + 0x10]
	0x0359595C RET
	0x03595960 STR X1, [X0 + 0x10]
	0x03595964 RET
	0x03595968 STR X30, [X31 - 0x20]!
	0x0359596C STP X20, X19, [X31 + 0x10]
	0x03595970 ADRP X20, 0xE4A000
	0x03595974 LDRB W8, [X20 + 0xFAE]
	0x03595978 MOV X19, X0
	0x0359597C TBNZ X8, 0x0, 0x35959A0
	0x03595980 ADRP X0, 0xB5F000
	0x03595984 LDR X0, [X0 + 0x6C0]
	0x03595988 BL 0x1C16CF4
	0x0359598C ADRP X0, 0xB5F000
	0x03595990 LDR X0, [X0 + 0x6D0]
	0x03595994 BL 0x1C16CF4
	0x03595998 MOVZ W8, 0x1
	0x0359599C STRB W8, [X20 + 0xFAE]
	0x035959A0 LDR X19, [X19 + 0x18]
	0x035959A4 CBNZ X19, 0x35959CC
	0x035959A8 ADRP X8, 0xB5F000
	0x035959AC LDR X8, [X8 + 0x6D0]
	0x035959B0 LDR X0, [X8]
	0x035959B4 BL 0x1C16F10
	0x035959B8 ADRP X8, 0xB5F000
	0x035959BC LDR X8, [X8 + 0x6C0]
	0x035959C0 MOV X19, X0
	0x035959C4 LDR X1, [X8]
	0x035959C8 BL 0x2AA4804
	0x035959CC MOV X0, X19
	0x035959D0 LDP X20, X19, [X31 + 0x10]
	0x035959D4 LDR X30, [X31], #0x20
	0x035959D8 RET
	0x035959DC LDR X0, [X0 + 0x18]
	0x035959E0 RET
	0x035959E4 STR X1, [X0 + 0x18]
	0x035959E8 RET
	0x035959EC LDRB W0, [X0 + 0x20]
	0x035959F0 RET

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X25, 0xE4B000
	015 Move X20, 0xB5F000
	016 Move X24, 0xBA2000
	017 Move X26, 0xB5F000
	018 Move X23, 0xB99000
	019 Move X22, 0xB99000
	020 Move X21, 0xBA2000
	021 Move X20, [X20+2440]
	022 Move W8, [X25+4007]
	023 Move X24, [X24+3600]
	024 Move X26, [X26+2104]
	025 Move X23, [X23+3552]
	026 Move X22, [X22+3464]
	027 Move X21, [X21+3816]
	028 Move X19, X0
	029 Move TEMP, X8
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfEqual {107}
	033 Move X0, 0xB5F000
	034 Move X0, [X0+3584]
	035 Call 0x1C17CF4
	036 Move X0, 0xB62000
	037 Move X0, [X0+400]
	038 Call 0x1C17CF4
	039 Move X0, 0xB62000
	040 Move X0, [X0+408]
	041 Call 0x1C17CF4
	042 Move X0, 0xB5F000
	043 Move X0, [X0+3608]
	044 Call 0x1C17CF4
	045 Move X0, 0xB62000
	046 Move X0, [X0+432]
	047 Call 0x1C17CF4
	048 Move X0, 0xB62000
	049 Move X0, [X0+440]
	050 Call 0x1C17CF4
	051 Move X0, 0xB5F000
	052 Move X0, [X0+2760]
	053 Call 0x1C17CF4
	054 Move X0, 0xBA2000
	055 Move X0, [X0+3608]
	056 Call 0x1C17CF4
	057 Move X0, 0xB8C000
	058 Move X0, [X0+864]
	059 Call 0x1C17CF4
	060 Move X0, 0xBA2000
	061 Move X0, [X0+3816]
	062 Call 0x1C17CF4
	063 Move X0, 0xB8C000
	064 Move X0, [X0+4024]
	065 Call 0x1C17CF4
	066 Move X0, 0xB99000
	067 Move X0, [X0+3464]
	068 Call 0x1C17CF4
	069 Move X0, 0xBA2000
	070 Move X0, [X0+3824]
	071 Call 0x1C17CF4
	072 Move X0, 0xB6A000
	073 Move X0, [X0+1752]
	074 Call 0x1C17CF4
	075 Move X0, 0xB9A000
	076 Move X0, [X0+256]
	077 Call 0x1C17CF4
	078 Move X0, 0xB99000
	079 Move X0, [X0+3552]
	080 Call 0x1C17CF4
	081 Move X0, 0xB5F000
	082 Move X0, [X0+2104]
	083 Call 0x1C17CF4
	084 Move X0, 0xB99000
	085 Move X0, [X0+3560]
	086 Call 0x1C17CF4
	087 Move X0, 0xBA2000
	088 Move X0, [X0+3832]
	089 Call 0x1C17CF4
	090 Move X0, 0xBA2000
	091 Move X0, [X0+3840]
	092 Call 0x1C17CF4
	093 Move X0, 0xBA2000
	094 Move X0, [X0+3632]
	095 Call 0x1C17CF4
	096 Move X0, 0xB5F000
	097 Move X0, [X0+2440]
	098 Call 0x1C17CF4
	099 Move X0, 0xB5F000
	100 Move X0, [X0+2120]
	101 Call 0x1C17CF4
	102 Move X0, 0xBA2000
	103 Move X0, [X0+3600]
	104 Call 0x1C17CF4
	105 Move W8, 1
	106 Move [X25+4007], W8
	107 Move X0, [X20]
	108 Move X2, [X19+16]
	109 Move X1, [X24]
	110 Move X3, [X26]
	111 Move X4, X31
	112 Call String.Concat, X0, X1, X2, X3
	113 Move X2, [X19+24]
	114 Move X1, [X23]
	115 Move X3, [X26]
	116 Move X4, X31
	117 Call String.Concat, X0, X1, X2, X3
	118 Move X2, [X19+32]
	119 Move X1, [X22]
	120 Move X3, [X26]
	121 Move X4, X31
	122 Call String.Concat, X0, X1, X2, X3
	123 Move X2, [X19+40]
	124 Move X1, [X21]
	125 Move X3, [X26]
	126 Move X4, X31
	127 Call String.Concat, X0, X1, X2, X3
	128 Move X8, [X20]
	129 Move X20, X0
	130 Move X0, X19
	131 Move [X31+8], X8
	132 Call ApiMessage.get_Metadata, X0
	133 Compare X0, 0
	134 JumpIfEqual {357}
	135 Move X10, 0xB62000
	136 Move X8, [X0]
	137 Move X10, [X10+400]
	138 Move X21, X0
	139 Move [X31], X20
	140 NotImplemented "Instruction LDRH not yet implemented."
	141 Move X1, [X10]
	142 Compare X9, 0
	143 JumpIfEqual {150}
	144 Move X10, [X8+176]
	145 Add X10, X10, 8
	146 NotImplemented "Instruction LDUR not yet implemented."
	147 NotImplemented "Instruction CMP not yet implemented."
	148 Subtract X9, X9, 1
	149 Add X10, X10, 16
	150 Move X0, X21
	151 Move W2, W31
	152 Call 0x1C5D788
	153 NotImplemented "Instruction LDRSW not yet implemented."
	154 Add X8, X8, X9
	155 Add X0, X8, 312
	156 Move X27, 0xB5F000
	157 Move X28, 0xB62000
	158 Move X29, 0xB5F000
	159 Move X20, 0xB8C000
	160 Move X26, 0xB8C000
	161 Move X25, 0xB6A000
	162 Move X27, [X27+3608]
	163 Move X28, [X28+408]
	164 Move X29, [X29+2760]
	165 Move X20, [X20+864]
	166 Move X26, [X26+4024]
	167 Move X25, [X25+1752]
	168 Move X8, [X0]
	169 Move X1, [X0+8]
	170 Move X0, X21
	171 NotImplemented "Instruction BLR not yet implemented."
	172 Move X21, X0
	173 Move X0, [X31+8]
	174 Compare X21, 0
	175 JumpIfEqual {350}
	176 Move X8, [X21]
	177 Move X1, [X27]
	178 Move X22, X0
	179 NotImplemented "Instruction LDRH not yet implemented."
	180 Compare X9, 0
	181 JumpIfEqual {188}
	182 Move X10, [X8+176]
	183 Add X10, X10, 8
	184 NotImplemented "Instruction LDUR not yet implemented."
	185 NotImplemented "Instruction CMP not yet implemented."
	186 Subtract X9, X9, 1
	187 Add X10, X10, 16
	188 Move X0, X21
	189 Move W2, W31
	190 Call 0x1C5D788
	191 NotImplemented "Instruction LDRSW not yet implemented."
	192 Add X8, X8, X9
	193 Add X0, X8, 312
	194 Move X8, [X0]
	195 Move X1, [X0+8]
	196 Move X0, X21
	197 NotImplemented "Instruction BLR not yet implemented."
	198 Move TEMP, X0
	199 And TEMP, TEMP, 1
	200 Compare TEMP, 1
	201 JumpIfNotEqual {251}
	202 Move X8, [X21]
	203 Move X1, [X28]
	204 NotImplemented "Instruction LDRH not yet implemented."
	205 Compare X9, 0
	206 JumpIfEqual {213}
	207 Move X10, [X8+176]
	208 Add X10, X10, 8
	209 NotImplemented "Instruction LDUR not yet implemented."
	210 NotImplemented "Instruction CMP not yet implemented."
	211 Subtract X9, X9, 1
	212 Add X10, X10, 16
	213 Move X0, X21
	214 Move W2, W31
	215 Call 0x1C5D788
	216 NotImplemented "Instruction LDRSW not yet implemented."
	217 Add X8, X8, X9
	218 Add X0, X8, 312
	219 Move X8, [X0]
	220 Move X1, [X0+8]
	221 Move X0, X21
	222 NotImplemented "Instruction BLR not yet implemented."
	223 Move X24, X0
	224 Move X0, [X29]
	225 Move X23, X1
	226 Move W1, 5
	227 Call 0x1C17D6C
	228 Compare X0, 0
	229 JumpIfEqual {352}
	230 Move W8, [X0+24]
	231 Compare W8, 0
	232 JumpIfEqual {354}
	233 Move X9, [X20]
	234 NotImplemented "Instruction CMP not yet implemented."
	235 Move [X0+32], X9
	236 NotImplemented "Instruction CMP not yet implemented."
	237 Move [X0+40], X24
	238 Move X9, [X26]
	239 NotImplemented "Instruction CMP not yet implemented."
	240 Move [X0+48], X9
	241 NotImplemented "Instruction CMP not yet implemented."
	242 Move [X0+56], X23
	243 Move X8, [X25]
	244 Move [X0+64], X8
	245 Move X1, X31
	246 Call String.Concat, X0
	247 Move X1, X0
	248 Move X0, X22
	249 Move X2, X31
	250 Call String.Concat, X0, X1
	251 Move X20, 0xB5F000
	252 Move X20, [X20+2104]
	253 Move X23, X31
	254 Compare X21, 0
	255 JumpIfEqual {279}
	256 Move X8, [X21]
	257 Move X10, 0xB5F000
	258 NotImplemented "Instruction LDRH not yet implemented."
	259 Move X10, [X10+3584]
	260 Move X1, [X10]
	261 Compare X9, 0
	262 JumpIfEqual {269}
	263 Move X10, [X8+176]
	264 Add X10, X10, 8
	265 NotImplemented "Instruction LDUR not yet implemented."
	266 NotImplemented "Instruction CMP not yet implemented."
	267 Subtract X9, X9, 1
	268 Add X10, X10, 16
	269 Move X0, X21
	270 Move W2, W31
	271 Call 0x1C5D788
	272 NotImplemented "Instruction LDRSW not yet implemented."
	273 Add X8, X8, X9
	274 Add X0, X8, 312
	275 Move X8, [X0]
	276 Move X1, [X0+8]
	277 Move X0, X21
	278 NotImplemented "Instruction BLR not yet implemented."
	279 Compare X23, 0
	280 JumpIfNotEqual {358}
	281 Move X8, 0xBA2000
	282 Move X8, [X8+3632]
	283 Move X1, X22
	284 Move X3, X31
	285 Move X0, [X8]
	286 Move X8, 0xB5F000
	287 Move X8, [X8+2120]
	288 Move X2, [X8]
	289 Call String.Concat, X0, X1, X2
	290 Move X1, X0
	291 Move X0, [X31]
	292 Move X2, X31
	293 Call String.Concat, X0, X1
	294 Move X8, 0xBA2000
	295 Move X2, [X19+56]
	296 Move X8, [X8+3608]
	297 Move X3, [X20]
	298 Move X4, X31
	299 Move X1, [X8]
	300 Call String.Concat, X0, X1, X2, X3
	301 Move X8, 0xBA2000
	302 Move X2, [X19+64]
	303 Move X8, [X8+3832]
	304 Move X3, [X20]
	305 Move X4, X31
	306 Move X1, [X8]
	307 Call String.Concat, X0, X1, X2, X3
	308 Move X8, 0xBA2000
	309 Move X2, [X19+72]
	310 Move X8, [X8+3824]
	311 Move X3, [X20]
	312 Move X4, X31
	313 Move X1, [X8]
	314 Call String.Concat, X0, X1, X2, X3
	315 Move X8, 0xBA2000
	316 Move X2, [X19+80]
	317 Move X8, [X8+3840]
	318 Move X3, [X20]
	319 Move X4, X31
	320 Move X1, [X8]
	321 Call String.Concat, X0, X1, X2, X3
	322 Move X8, 0xB9A000
	323 Move X2, [X19+88]
	324 Move X8, [X8+256]
	325 Move X3, [X20]
	326 Move X4, X31
	327 Move X1, [X8]
	328 Call String.Concat, X0, X1, X2, X3
	329 Move X8, 0xB99000
	330 Move X2, [X19+96]
	331 Move X8, [X8+3560]
	332 Move X3, [X20]
	333 Move X20, [X31+96]
	334 Move X19, [X31+104]
	335 Move X22, [X31+80]
	336 Move X21, [X31+88]
	337 Move X1, [X8]
	338 Move X24, [X31+64]
	339 Move X23, [X31+72]
	340 Move X26, [X31+48]
	341 Move X25, [X31+56]
	342 Move X28, [X31+32]
	343 Move X27, [X31+40]
	344 Move X29, [X31+16]
	345 Move X30, [X31+24]
	346 Move X4, X31
	347 Add X31, X31, 112
	348 Call String.Concat, X0, X1, X2, X3
	349 Return X0
	350 Call 0x1C17F20
	351 Call 0x1C17F28
	352 Call 0x1C17F20
	353 Call 0x1C17F28
	354 Call 0x1C17F28
	355 Call 0x1C17F28
	356 Call 0x1C17F28
	357 Call 0x1C17F20
	358 Move X0, X23
	359 Call 0x1C17F18
	360 Move X22, [X31+8]
	361 Move X20, 0xB5F000
	362 Move X20, [X20+2104]
	363 NotImplemented "Instruction CMP not yet implemented."
	364 Call 0x3EB2AD0
	365 Move X23, [X0]
	366 Call 0x3EB2AE0
	367 Move X19, X0
	368 Move X23, X31
	369 Move X19, X0
	370 Compare X21, 0
	371 JumpIfEqual {395}
	372 Move X8, [X21]
	373 Move X10, 0xB5F000
	374 NotImplemented "Instruction LDRH not yet implemented."
	375 Move X10, [X10+3584]
	376 Move X1, [X10]
	377 Compare X9, 0
	378 JumpIfEqual {385}
	379 Move X10, [X8+176]
	380 Add X10, X10, 8
	381 NotImplemented "Instruction LDUR not yet implemented."
	382 NotImplemented "Instruction CMP not yet implemented."
	383 Subtract X9, X9, 1
	384 Add X10, X10, 16
	385 Move X0, X21
	386 Move W2, W31
	387 Call 0x1C5D788
	388 NotImplemented "Instruction LDRSW not yet implemented."
	389 Add X8, X8, X9
	390 Add X0, X8, 312
	391 Move X8, [X0]
	392 Move X1, [X0+8]
	393 Move X0, X21
	394 NotImplemented "Instruction BLR not yet implemented."
	395 Compare X23, 0
	396 JumpIfNotEqual {399}
	397 Move X0, X19
	398 Call 0x1D2D690
	399 Move X0, X23
	400 Call 0x1C17F18
	401 Call 0x1991590

Method: System.Void .ctor()

Disassembly:
	0x035959F4 AND W8, W1, 0x1
	0x035959F8 STRB W8, [X0 + 0x20]

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

