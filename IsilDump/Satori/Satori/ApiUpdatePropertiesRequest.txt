Type: Satori.ApiUpdatePropertiesRequest

Method: System.Collections.Generic.IDictionary`2<System.String, System.String> get_Custom()

Disassembly:
	0x035968E4 STP X24, X23, [X31 + 0x80]
	0x035968E8 STP X22, X21, [X31 + 0x90]
	0x035968EC STP X20, X19, [X31 + 0xA0]
	0x035968F0 ADRP X26, 0xE49000
	0x035968F4 ADRP X25, 0xBA0000
	0x035968F8 LDRB W8, [X26 + 0xFB5]
	0x035968FC LDR X25, [X25 + 0xF48]
	0x03596900 MOV X19, X5
	0x03596904 MOV X20, X4
	0x03596908 MOV X21, X3
	0x0359690C MOV X22, X2
	0x03596910 MOV X24, X1
	0x03596914 MOV X23, X0
	0x03596918 TBNZ X8, 0x0, 0x3596954
	0x0359691C ADRP X0, 0xBA0000
	0x03596920 LDR X0, [X0 + 0xF50]
	0x03596924 BL 0x1C16CF4
	0x03596928 ADRP X0, 0xBA0000
	0x0359692C LDR X0, [X0 + 0xF58]
	0x03596930 BL 0x1C16CF4
	0x03596934 ADRP X0, 0xBA0000
	0x03596938 LDR X0, [X0 + 0xF60]
	0x0359693C BL 0x1C16CF4
	0x03596940 ADRP X0, 0xBA0000
	0x03596944 LDR X0, [X0 + 0xF48]
	0x03596948 BL 0x1C16CF4
	0x0359694C MOVZ W8, 0x1
	0x03596950 STRB W8, [X26 + 0xFB5]
	0x03596954 LDR X0, [X25]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xE4A000
	005 Move W8, [X20+4013]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0xB5F000
	012 Move X0, [X0+1728]
	013 Call 0x1C17CF4
	014 Move X0, 0xB5F000
	015 Move X0, [X0+1744]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+4013], W8
	019 Move X19, [X19+16]
	020 Compare X19, 0
	021 JumpIfNotEqual {31}
	022 Move X8, 0xB5F000
	023 Move X8, [X8+1744]
	024 Move X0, [X8]
	025 Call 0x1C17F10
	026 Move X8, 0xB5F000
	027 Move X8, [X8+1728]
	028 Move X19, X0
	029 Move X1, [X8]
	030 Call Dictionary`2<Object, Object>..ctor, X0
	031 Move X0, X19
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X30, [X31+32]
	035 Return X0

Method: System.Collections.Generic.Dictionary`2<System.String, System.String> get__custom()

Disassembly:
	0x03596958 MOVI V0.2D, 0x0
	0x0359695C STR X31, [X31 + 0x50]

ISIL:
	001 Move X0, [X0+16]
	002 Return X0

Method: System.Void set__custom(System.Collections.Generic.Dictionary`2<System.String, System.String> value)

Disassembly:
	0x03596960 STP V0, V0, [X31 + 0x30]
	0x03596964 STP V0, V0, [X31 + 0x10]

ISIL:
	001 Move [X0+16], X1
	002 Return 

Method: System.Collections.Generic.IDictionary`2<System.String, System.String> get_Default()

Disassembly:
	0x03596968 STR V0, [X31]
	0x0359696C ADRP X25, 0xBA0000
	0x03596970 ADRP X27, 0xBA0000
	0x03596974 ADRP X26, 0xBA0000
	0x03596978 LDR W8, [X0 + 0xE0]
	0x0359697C LDR X25, [X25 + 0xF50]
	0x03596980 LDR X27, [X27 + 0xF58]
	0x03596984 LDR X26, [X26 + 0xF60]
	0x03596988 CBNZ W8, 0x3596990
	0x0359698C BL 0x1C16DFC
	0x03596990 LDR X0, [X25]
	0x03596994 ADD X8, X31, 0x0
	0x03596998 ORR X25, X8, 0xF
	0x0359699C MOV X8, X25
	0x035969A0 BL 0x263221C
	0x035969A4 LDR X2, [X27]
	0x035969A8 MOVN W8, 0x0
	0x035969AC ADD X1, X31, 0x0
	0x035969B0 MOV X0, X25
	0x035969B4 STP X24, X22, [X31 + 0x30]
	0x035969B8 STP X21, X23, [X31 + 0x20]
	0x035969BC STP X20, X19, [X31 + 0x40]
	0x035969C0 STR W8, [X31]
	0x035969C4 BL 0x1FCBB14
	0x035969C8 LDR X1, [X26]
	0x035969CC MOV X0, X25
	0x035969D0 BL 0x2632230
	0x035969D4 LDP X20, X19, [X31 + 0xA0]
	0x035969D8 LDP X22, X21, [X31 + 0x90]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xE4A000
	005 Move W8, [X20+4014]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0xB5F000
	012 Move X0, [X0+1728]
	013 Call 0x1C17CF4
	014 Move X0, 0xB5F000
	015 Move X0, [X0+1744]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+4014], W8
	019 Move X19, [X19+24]
	020 Compare X19, 0
	021 JumpIfNotEqual {31}
	022 Move X8, 0xB5F000
	023 Move X8, [X8+1744]
	024 Move X0, [X8]
	025 Call 0x1C17F10
	026 Move X8, 0xB5F000
	027 Move X8, [X8+1728]
	028 Move X19, X0
	029 Move X1, [X8]
	030 Call Dictionary`2<Object, Object>..ctor, X0
	031 Move X0, X19
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X30, [X31+32]
	035 Return X0

Method: System.Collections.Generic.Dictionary`2<System.String, System.String> get__default()

Disassembly:
	0x035969DC LDP X24, X23, [X31 + 0x80]
	0x035969E0 LDP X26, X25, [X31 + 0x70]

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void set__default(System.Collections.Generic.Dictionary`2<System.String, System.String> value)

Disassembly:
	0x035969E4 LDP X30, X27, [X31 + 0x60]
	0x035969E8 ADD X31, X31, 0xB0

ISIL:
	001 Move [X0+24], X1
	002 Return 

Method: System.Boolean get_Recompute()

Disassembly:
	0x035969EC RET
	0x035969F0 SUB X31, X31, 0xB0

ISIL:
	001 Move W0, [X0+32]
	002 Return X0

Method: System.Void set_Recompute(System.Boolean value)

Disassembly:
	0x035969F4 STP X30, X25, [X31 + 0x70]
	0x035969F8 STP X24, X23, [X31 + 0x80]
	0x035969FC STP X22, X21, [X31 + 0x90]

ISIL:
	001 And W8, W1, 1
	002 Move [X0+32], W8
	003 Return 

Method: System.String ToString()

Disassembly:
	0x03596A00 STP X20, X19, [X31 + 0xA0]
	0x03596A04 ADRP X25, 0xE49000
	0x03596A08 ADRP X24, 0xB60000
	0x03596A0C LDRB W8, [X25 + 0xFB6]
	0x03596A10 LDR X24, [X24 + 0x280]
	0x03596A14 MOV X20, X4
	0x03596A18 MOV X21, X3
	0x03596A1C MOV X19, X2
	0x03596A20 MOV X22, X1
	0x03596A24 MOV X23, X0
	0x03596A28 TBNZ X8, 0x0, 0x3596A4C
	0x03596A2C ADRP X0, 0xBA0000
	0x03596A30 LDR X0, [X0 + 0xF68]
	0x03596A34 BL 0x1C16CF4
	0x03596A38 ADRP X0, 0xB60000
	0x03596A3C LDR X0, [X0 + 0x280]
	0x03596A40 BL 0x1C16CF4
	0x03596A44 MOVZ W8, 0x1
	0x03596A48 STRB W8, [X25 + 0xFB6]
	0x03596A4C LDR X0, [X24]
	0x03596A50 MOVI V0.2D, 0x0
	0x03596A54 STP V0, V0, [X31 + 0x50]
	0x03596A58 STP V0, V0, [X31 + 0x30]
	0x03596A5C STR V0, [X31 + 0x2]
	0x03596A60 ADRP X24, 0xBA0000
	0x03596A64 LDR W8, [X0 + 0xE0]
	0x03596A68 LDR X24, [X24 + 0xF68]
	0x03596A6C CBNZ W8, 0x3596A74
	0x03596A70 BL 0x1C16DFC
	0x03596A74 ADD X8, X31, 0x8
	0x03596A78 MOV X0, X31
	0x03596A7C BL 0x32C4770
	0x03596A80 LDUR V0, [X31 + 0x8]
	0x03596A84 LDR X9, [X31 + 0x18]
	0x03596A88 LDR X2, [X24]
	0x03596A8C ADD X8, X31, 0x20
	0x03596A90 STP X21, X20, [X31 + 0x58]
	0x03596A94 ORR X20, X8, 0xF
	0x03596A98 MOVN W10, 0x0
	0x03596A9C ADD X1, X31, 0x20
	0x03596AA0 MOV X0, X20
	0x03596AA4 STP X23, X22, [X31 + 0x48]
	0x03596AA8 STUR V0, [X31 + 0x28]
	0x03596AAC STP X9, X19, [X31 + 0x38]
	0x03596AB0 STR W10, [X31 + 0x20]
	0x03596AB4 BL 0x21908B8
	0x03596AB8 MOV X0, X20
	0x03596ABC MOV X1, X31
	0x03596AC0 BL 0x32C47F8
	0x03596AC4 LDP X20, X19, [X31 + 0xA0]
	0x03596AC8 LDP X22, X21, [X31 + 0x90]
	0x03596ACC LDP X24, X23, [X31 + 0x80]
	0x03596AD0 LDP X30, X25, [X31 + 0x70]
	0x03596AD4 ADD X31, X31, 0xB0
	0x03596AD8 RET
	0x03596ADC SUB X31, X31, 0xB0
	0x03596AE0 STP X30, X27, [X31 + 0x60]
	0x03596AE4 STP X26, X25, [X31 + 0x70]
	0x03596AE8 STP X24, X23, [X31 + 0x80]
	0x03596AEC STP X22, X21, [X31 + 0x90]
	0x03596AF0 STP X20, X19, [X31 + 0xA0]
	0x03596AF4 ADRP X26, 0xE49000
	0x03596AF8 ADRP X25, 0xBA0000
	0x03596AFC LDRB W8, [X26 + 0xFB7]
	0x03596B00 LDR X25, [X25 + 0xF48]
	0x03596B04 MOV X19, X5
	0x03596B08 MOV X20, X4
	0x03596B0C MOV X21, X3
	0x03596B10 MOV X22, X2
	0x03596B14 MOV X24, X1
	0x03596B18 MOV X23, X0
	0x03596B1C TBNZ X8, 0x0, 0x3596B58
	0x03596B20 ADRP X0, 0xBA0000
	0x03596B24 LDR X0, [X0 + 0xF50]
	0x03596B28 BL 0x1C16CF4
	0x03596B2C ADRP X0, 0xBA0000
	0x03596B30 LDR X0, [X0 + 0xF70]
	0x03596B34 BL 0x1C16CF4
	0x03596B38 ADRP X0, 0xBA0000
	0x03596B3C LDR X0, [X0 + 0xF60]
	0x03596B40 BL 0x1C16CF4
	0x03596B44 ADRP X0, 0xBA0000
	0x03596B48 LDR X0, [X0 + 0xF48]
	0x03596B4C BL 0x1C16CF4
	0x03596B50 MOVZ W8, 0x1
	0x03596B54 STRB W8, [X26 + 0xFB7]
	0x03596B58 LDR X0, [X25]
	0x03596B5C MOVI V0.2D, 0x0
	0x03596B60 STR X31, [X31 + 0x50]
	0x03596B64 STP V0, V0, [X31 + 0x30]
	0x03596B68 STP V0, V0, [X31 + 0x10]
	0x03596B6C STR V0, [X31]
	0x03596B70 ADRP X25, 0xBA0000
	0x03596B74 ADRP X27, 0xBA0000
	0x03596B78 ADRP X26, 0xBA0000
	0x03596B7C LDR W8, [X0 + 0xE0]
	0x03596B80 LDR X25, [X25 + 0xF50]
	0x03596B84 LDR X27, [X27 + 0xF70]
	0x03596B88 LDR X26, [X26 + 0xF60]
	0x03596B8C CBNZ W8, 0x3596B94
	0x03596B90 BL 0x1C16DFC
	0x03596B94 LDR X0, [X25]
	0x03596B98 ADD X8, X31, 0x0
	0x03596B9C ORR X25, X8, 0xF
	0x03596BA0 MOV X8, X25
	0x03596BA4 BL 0x263221C
	0x03596BA8 LDR X2, [X27]
	0x03596BAC MOVN W8, 0x0
	0x03596BB0 ADD X1, X31, 0x0
	0x03596BB4 MOV X0, X25
	0x03596BB8 STP X24, X22, [X31 + 0x30]
	0x03596BBC STP X21, X23, [X31 + 0x20]
	0x03596BC0 STP X20, X19, [X31 + 0x40]
	0x03596BC4 STR W8, [X31]
	0x03596BC8 BL 0x1FCBC14
	0x03596BCC LDR X1, [X26]
	0x03596BD0 MOV X0, X25
	0x03596BD4 BL 0x2632230
	0x03596BD8 LDP X20, X19, [X31 + 0xA0]
	0x03596BDC LDP X22, X21, [X31 + 0x90]
	0x03596BE0 LDP X24, X23, [X31 + 0x80]
	0x03596BE4 LDP X26, X25, [X31 + 0x70]
	0x03596BE8 LDP X30, X27, [X31 + 0x60]
	0x03596BEC ADD X31, X31, 0xB0
	0x03596BF0 RET
	0x03596BF4 SUB X31, X31, 0xB0
	0x03596BF8 STP X30, X25, [X31 + 0x70]
	0x03596BFC STP X24, X23, [X31 + 0x80]
	0x03596C00 STP X22, X21, [X31 + 0x90]
	0x03596C04 STP X20, X19, [X31 + 0xA0]
	0x03596C08 ADRP X25, 0xE49000
	0x03596C0C ADRP X24, 0xB60000
	0x03596C10 LDRB W8, [X25 + 0xFB8]
	0x03596C14 LDR X24, [X24 + 0x280]
	0x03596C18 MOV X20, X4
	0x03596C1C MOV X21, X3
	0x03596C20 MOV X19, X2
	0x03596C24 MOV X22, X1
	0x03596C28 MOV X23, X0
	0x03596C2C TBNZ X8, 0x0, 0x3596C50
	0x03596C30 ADRP X0, 0xBA0000
	0x03596C34 LDR X0, [X0 + 0xF78]
	0x03596C38 BL 0x1C16CF4
	0x03596C3C ADRP X0, 0xB60000
	0x03596C40 LDR X0, [X0 + 0x280]
	0x03596C44 BL 0x1C16CF4
	0x03596C48 MOVZ W8, 0x1
	0x03596C4C STRB W8, [X25 + 0xFB8]
	0x03596C50 LDR X0, [X24]
	0x03596C54 MOVI V0.2D, 0x0
	0x03596C58 STP V0, V0, [X31 + 0x50]
	0x03596C5C STP V0, V0, [X31 + 0x30]
	0x03596C60 STR V0, [X31 + 0x2]
	0x03596C64 ADRP X24, 0xBA0000
	0x03596C68 LDR W8, [X0 + 0xE0]
	0x03596C6C LDR X24, [X24 + 0xF78]
	0x03596C70 CBNZ W8, 0x3596C78
	0x03596C74 BL 0x1C16DFC
	0x03596C78 ADD X8, X31, 0x8
	0x03596C7C MOV X0, X31
	0x03596C80 BL 0x32C4770
	0x03596C84 LDUR V0, [X31 + 0x8]
	0x03596C88 LDR X9, [X31 + 0x18]
	0x03596C8C LDR X2, [X24]
	0x03596C90 ADD X8, X31, 0x20
	0x03596C94 STP X21, X20, [X31 + 0x58]
	0x03596C98 ORR X20, X8, 0xF
	0x03596C9C MOVN W10, 0x0
	0x03596CA0 ADD X1, X31, 0x20
	0x03596CA4 MOV X0, X20
	0x03596CA8 STP X23, X22, [X31 + 0x48]
	0x03596CAC STUR V0, [X31 + 0x28]
	0x03596CB0 STP X9, X19, [X31 + 0x38]
	0x03596CB4 STR W10, [X31 + 0x20]
	0x03596CB8 BL 0x2190BB8
	0x03596CBC MOV X0, X20
	0x03596CC0 MOV X1, X31
	0x03596CC4 BL 0x32C47F8
	0x03596CC8 LDP X20, X19, [X31 + 0xA0]
	0x03596CCC LDP X22, X21, [X31 + 0x90]
	0x03596CD0 LDP X24, X23, [X31 + 0x80]
	0x03596CD4 LDP X30, X25, [X31 + 0x70]
	0x03596CD8 ADD X31, X31, 0xB0
	0x03596CDC RET
	0x03596CE0 SUB X31, X31, 0xA0
	0x03596CE4 STR X30, [X31 + 0x50]
	0x03596CE8 STP X26, X25, [X31 + 0x60]
	0x03596CEC STP X24, X23, [X31 + 0x70]
	0x03596CF0 STP X22, X21, [X31 + 0x80]
	0x03596CF4 STP X20, X19, [X31 + 0x90]
	0x03596CF8 ADRP X25, 0xE49000
	0x03596CFC ADRP X24, 0xBA0000
	0x03596D00 LDRB W8, [X25 + 0xFB9]
	0x03596D04 LDR X24, [X24 + 0xF80]
	0x03596D08 MOV X19, X4
	0x03596D0C MOV X20, X3
	0x03596D10 MOV X21, X2
	0x03596D14 MOV X22, X1
	0x03596D18 MOV X23, X0
	0x03596D1C TBNZ X8, 0x0, 0x3596D58
	0x03596D20 ADRP X0, 0xBA0000
	0x03596D24 LDR X0, [X0 + 0xF88]
	0x03596D28 BL 0x1C16CF4
	0x03596D2C ADRP X0, 0xBA0000
	0x03596D30 LDR X0, [X0 + 0xF90]
	0x03596D34 BL 0x1C16CF4
	0x03596D38 ADRP X0, 0xBA0000
	0x03596D3C LDR X0, [X0 + 0xF98]
	0x03596D40 BL 0x1C16CF4
	0x03596D44 ADRP X0, 0xBA0000
	0x03596D48 LDR X0, [X0 + 0xF80]
	0x03596D4C BL 0x1C16CF4
	0x03596D50 MOVZ W8, 0x1
	0x03596D54 STRB W8, [X25 + 0xFB9]
	0x03596D58 LDR X0, [X24]
	0x03596D5C MOVI V0.2D, 0x0
	0x03596D60 STP V0, V0, [X31 + 0x30]
	0x03596D64 STP V0, V0, [X31 + 0x10]
	0x03596D68 STR V0, [X31]
	0x03596D6C ADRP X24, 0xBA0000
	0x03596D70 ADRP X26, 0xBA0000
	0x03596D74 ADRP X25, 0xBA0000
	0x03596D78 LDR W8, [X0 + 0xE0]
	0x03596D7C LDR X24, [X24 + 0xF88]
	0x03596D80 LDR X26, [X26 + 0xF90]
	0x03596D84 LDR X25, [X25 + 0xF98]
	0x03596D88 CBNZ W8, 0x3596D90
	0x03596D8C BL 0x1C16DFC
	0x03596D90 LDR X0, [X24]
	0x03596D94 ADD X8, X31, 0x0
	0x03596D98 ORR X24, X8, 0xF
	0x03596D9C MOV X8, X24
	0x03596DA0 BL 0x263221C
	0x03596DA4 LDR X2, [X26]
	0x03596DA8 MOVN W8, 0x0
	0x03596DAC ADD X1, X31, 0x0
	0x03596DB0 MOV X0, X24
	0x03596DB4 STP X21, X23, [X31 + 0x20]
	0x03596DB8 STP X22, X20, [X31 + 0x30]
	0x03596DBC STR X19, [X31 + 0x40]
	0x03596DC0 STR W8, [X31]
	0x03596DC4 BL 0x1FCBD14
	0x03596DC8 LDR X1, [X25]
	0x03596DCC MOV X0, X24
	0x03596DD0 BL 0x2632230
	0x03596DD4 LDP X20, X19, [X31 + 0x90]
	0x03596DD8 LDP X22, X21, [X31 + 0x80]
	0x03596DDC LDP X24, X23, [X31 + 0x70]
	0x03596DE0 LDP X26, X25, [X31 + 0x60]
	0x03596DE4 LDR X30, [X31 + 0x50]
	0x03596DE8 ADD X31, X31, 0xA0
	0x03596DEC RET
	0x03596DF0 SUB X31, X31, 0xC0
	0x03596DF4 STR X30, [X31 + 0x60]
	0x03596DF8 STP X28, X27, [X31 + 0x70]
	0x03596DFC STP X26, X25, [X31 + 0x80]
	0x03596E00 STP X24, X23, [X31 + 0x90]
	0x03596E04 STP X22, X21, [X31 + 0xA0]
	0x03596E08 STP X20, X19, [X31 + 0xB0]
	0x03596E0C ADRP X27, 0xE49000
	0x03596E10 ADRP X26, 0xBA0000
	0x03596E14 LDRB W8, [X27 + 0xFBA]
	0x03596E18 LDR X26, [X26 + 0xFA0]
	0x03596E1C MOV X19, X6
	0x03596E20 MOV X20, X5
	0x03596E24 MOV X21, X4
	0x03596E28 MOV X22, X3
	0x03596E2C MOV X23, X2
	0x03596E30 MOV X25, X1
	0x03596E34 MOV X24, X0
	0x03596E38 TBNZ X8, 0x0, 0x3596E74
	0x03596E3C ADRP X0, 0xBA0000
	0x03596E40 LDR X0, [X0 + 0xFA8]
	0x03596E44 BL 0x1C16CF4
	0x03596E48 ADRP X0, 0xBA0000
	0x03596E4C LDR X0, [X0 + 0xFB0]
	0x03596E50 BL 0x1C16CF4
	0x03596E54 ADRP X0, 0xBA0000
	0x03596E58 LDR X0, [X0 + 0xFB8]
	0x03596E5C BL 0x1C16CF4
	0x03596E60 ADRP X0, 0xBA0000
	0x03596E64 LDR X0, [X0 + 0xFA0]
	0x03596E68 BL 0x1C16CF4
	0x03596E6C MOVZ W8, 0x1
	0x03596E70 STRB W8, [X27 + 0xFBA]
	0x03596E74 LDR X0, [X26]
	0x03596E78 MOVI V0.2D, 0x0
	0x03596E7C STP V0, V0, [X31 + 0x40]
	0x03596E80 STP V0, V0, [X31 + 0x20]
	0x03596E84 STP V0, V0, [X31]
	0x03596E88 ADRP X26, 0xBA0000
	0x03596E8C ADRP X28, 0xBA0000
	0x03596E90 ADRP X27, 0xBA0000
	0x03596E94 LDR W8, [X0 + 0xE0]
	0x03596E98 LDR X26, [X26 + 0xFA8]
	0x03596E9C LDR X28, [X28 + 0xFB0]
	0x03596EA0 LDR X27, [X27 + 0xFB8]
	0x03596EA4 CBNZ W8, 0x3596EAC
	0x03596EA8 BL 0x1C16DFC
	0x03596EAC LDR X0, [X26]
	0x03596EB0 ADD X8, X31, 0x0
	0x03596EB4 ORR X26, X8, 0xF
	0x03596EB8 MOV X8, X26
	0x03596EBC BL 0x263221C
	0x03596EC0 LDR X2, [X28]
	0x03596EC4 MOVN W8, 0x0
	0x03596EC8 ADD X1, X31, 0x0
	0x03596ECC MOV X0, X26
	0x03596ED0 STP X25, X23, [X31 + 0x30]
	0x03596ED4 STP X21, X24, [X31 + 0x20]
	0x03596ED8 STP X22, X20, [X31 + 0x40]
	0x03596EDC STR X19, [X31 + 0x50]
	0x03596EE0 STR W8, [X31]
	0x03596EE4 BL 0x1FCBE14
	0x03596EE8 LDR X1, [X27]
	0x03596EEC MOV X0, X26
	0x03596EF0 BL 0x2632230
	0x03596EF4 LDP X20, X19, [X31 + 0xB0]
	0x03596EF8 LDP X22, X21, [X31 + 0xA0]
	0x03596EFC LDP X24, X23, [X31 + 0x90]
	0x03596F00 LDP X26, X25, [X31 + 0x80]
	0x03596F04 LDP X28, X27, [X31 + 0x70]
	0x03596F08 LDR X30, [X31 + 0x60]
	0x03596F0C ADD X31, X31, 0xC0
	0x03596F10 RET
	0x03596F14 SUB X31, X31, 0xA0
	0x03596F18 STR X30, [X31 + 0x50]
	0x03596F1C STP X26, X25, [X31 + 0x60]
	0x03596F20 STP X24, X23, [X31 + 0x70]
	0x03596F24 STP X22, X21, [X31 + 0x80]
	0x03596F28 STP X20, X19, [X31 + 0x90]
	0x03596F2C ADRP X25, 0xE49000
	0x03596F30 ADRP X24, 0xBA0000
	0x03596F34 LDRB W8, [X25 + 0xFBB]
	0x03596F38 LDR X24, [X24 + 0xF48]
	0x03596F3C MOV X19, X4
	0x03596F40 MOV X20, X3
	0x03596F44 MOV X21, X2
	0x03596F48 MOV X22, X1
	0x03596F4C MOV X23, X0
	0x03596F50 TBNZ X8, 0x0, 0x3596F8C
	0x03596F54 ADRP X0, 0xBA0000
	0x03596F58 LDR X0, [X0 + 0xF50]
	0x03596F5C BL 0x1C16CF4
	0x03596F60 ADRP X0, 0xBA0000
	0x03596F64 LDR X0, [X0 + 0xFC0]
	0x03596F68 BL 0x1C16CF4
	0x03596F6C ADRP X0, 0xBA0000
	0x03596F70 LDR X0, [X0 + 0xF60]
	0x03596F74 BL 0x1C16CF4
	0x03596F78 ADRP X0, 0xBA0000
	0x03596F7C LDR X0, [X0 + 0xF48]
	0x03596F80 BL 0x1C16CF4
	0x03596F84 MOVZ W8, 0x1
	0x03596F88 STRB W8, [X25 + 0xFBB]
	0x03596F8C LDR X0, [X24]
	0x03596F90 MOVI V0.2D, 0x0
	0x03596F94 STP V0, V0, [X31 + 0x30]
	0x03596F98 STP V0, V0, [X31 + 0x10]
	0x03596F9C STR V0, [X31]
	0x03596FA0 ADRP X24, 0xBA0000
	0x03596FA4 ADRP X26, 0xBA0000
	0x03596FA8 ADRP X25, 0xBA0000
	0x03596FAC LDR W8, [X0 + 0xE0]
	0x03596FB0 LDR X24, [X24 + 0xF50]
	0x03596FB4 LDR X26, [X26 + 0xFC0]
	0x03596FB8 LDR X25, [X25 + 0xF60]
	0x03596FBC CBNZ W8, 0x3596FC4
	0x03596FC0 BL 0x1C16DFC
	0x03596FC4 LDR X0, [X24]
	0x03596FC8 ADD X8, X31, 0x0
	0x03596FCC ORR X24, X8, 0xF
	0x03596FD0 MOV X8, X24
	0x03596FD4 BL 0x263221C
	0x03596FD8 LDR X2, [X26]
	0x03596FDC MOVN W8, 0x0
	0x03596FE0 ADD X1, X31, 0x0
	0x03596FE4 MOV X0, X24
	0x03596FE8 STP X21, X23, [X31 + 0x20]
	0x03596FEC STP X22, X20, [X31 + 0x30]
	0x03596FF0 STR X19, [X31 + 0x40]
	0x03596FF4 STR W8, [X31]
	0x03596FF8 BL 0x1FCC114
	0x03596FFC LDR X1, [X25]
	0x03597000 MOV X0, X24
	0x03597004 BL 0x2632230
	0x03597008 LDP X20, X19, [X31 + 0x90]
	0x0359700C LDP X22, X21, [X31 + 0x80]
	0x03597010 LDP X24, X23, [X31 + 0x70]
	0x03597014 LDP X26, X25, [X31 + 0x60]
	0x03597018 LDR X30, [X31 + 0x50]
	0x0359701C ADD X31, X31, 0xA0
	0x03597020 RET
	0x03597024 SUB X31, X31, 0xB0
	0x03597028 STR X30, [X31 + 0x70]
	0x0359702C STP X24, X23, [X31 + 0x80]
	0x03597030 STP X22, X21, [X31 + 0x90]
	0x03597034 STP X20, X19, [X31 + 0xA0]
	0x03597038 ADRP X24, 0xE48000
	0x0359703C ADRP X23, 0xB5F000
	0x03597040 LDRB W8, [X24 + 0xFBC]
	0x03597044 LDR X23, [X23 + 0x280]
	0x03597048 MOV X20, X3
	0x0359704C MOV X21, X2
	0x03597050 MOV X22, X1
	0x03597054 MOV X19, X0
	0x03597058 TBNZ X8, 0x0, 0x359707C
	0x0359705C ADRP X0, 0xB9F000
	0x03597060 LDR X0, [X0 + 0xFC8]
	0x03597064 BL 0x1C16CF4
	0x03597068 ADRP X0, 0xB5F000
	0x0359706C LDR X0, [X0 + 0x280]
	0x03597070 BL 0x1C16CF4
	0x03597074 MOVZ W8, 0x1
	0x03597078 STRB W8, [X24 + 0xFBC]
	0x0359707C LDR X0, [X23]
	0x03597080 MOVI V0.2D, 0x0
	0x03597084 STR X31, [X31 + 0x60]
	0x03597088 STP V0, V0, [X31 + 0x40]
	0x0359708C STP V0, V0, [X31 + 0x20]
	0x03597090 ADRP X23, 0xB9F000
	0x03597094 LDR W8, [X0 + 0xE0]
	0x03597098 LDR X23, [X23 + 0xFC8]
	0x0359709C CBNZ W8, 0x35970A4
	0x035970A0 BL 0x1C16DFC
	0x035970A4 ADD X8, X31, 0x8
	0x035970A8 MOV X0, X31
	0x035970AC BL 0x32C4770
	0x035970B0 LDUR V0, [X31 + 0x8]
	0x035970B4 LDR X9, [X31 + 0x18]
	0x035970B8 LDR X2, [X23]
	0x035970BC ADD X8, X31, 0x20
	0x035970C0 STR X20, [X31 + 0x58]
	0x035970C4 ORR X20, X8, 0xF
	0x035970C8 MOVN W10, 0x0
	0x035970CC ADD X1, X31, 0x20
	0x035970D0 MOV X0, X20
	0x035970D4 STP X22, X21, [X31 + 0x48]
	0x035970D8 STUR V0, [X31 + 0x28]
	0x035970DC STP X9, X19, [X31 + 0x38]
	0x035970E0 STR W10, [X31 + 0x20]
	0x035970E4 BL 0x21909B8
	0x035970E8 MOV X0, X20
	0x035970EC MOV X1, X31
	0x035970F0 BL 0x32C47F8
	0x035970F4 LDP X20, X19, [X31 + 0xA0]
	0x035970F8 LDP X22, X21, [X31 + 0x90]
	0x035970FC LDP X24, X23, [X31 + 0x80]
	0x03597100 LDR X30, [X31 + 0x70]
	0x03597104 ADD X31, X31, 0xB0
	0x03597108 RET
	0x0359710C SUB X31, X31, 0xA0
	0x03597110 STR X30, [X31 + 0x50]
	0x03597114 STP X26, X25, [X31 + 0x60]
	0x03597118 STP X24, X23, [X31 + 0x70]
	0x0359711C STP X22, X21, [X31 + 0x80]
	0x03597120 STP X20, X19, [X31 + 0x90]
	0x03597124 ADRP X25, 0xE48000
	0x03597128 ADRP X24, 0xB9F000
	0x0359712C LDRB W8, [X25 + 0xFBD]
	0x03597130 LDR X24, [X24 + 0xFD0]
	0x03597134 MOV X19, X4
	0x03597138 MOV X20, X3
	0x0359713C MOV X21, X2
	0x03597140 MOV X22, X1
	0x03597144 MOV X23, X0
	0x03597148 TBNZ X8, 0x0, 0x3597184
	0x0359714C ADRP X0, 0xB9F000
	0x03597150 LDR X0, [X0 + 0xFD8]
	0x03597154 BL 0x1C16CF4
	0x03597158 ADRP X0, 0xB9F000
	0x0359715C LDR X0, [X0 + 0xFE0]
	0x03597160 BL 0x1C16CF4
	0x03597164 ADRP X0, 0xB9F000
	0x03597168 LDR X0, [X0 + 0xFE8]
	0x0359716C BL 0x1C16CF4
	0x03597170 ADRP X0, 0xB9F000
	0x03597174 LDR X0, [X0 + 0xFD0]
	0x03597178 BL 0x1C16CF4
	0x0359717C MOVZ W8, 0x1
	0x03597180 STRB W8, [X25 + 0xFBD]
	0x03597184 LDR X0, [X24]
	0x03597188 MOVI V0.2D, 0x0
	0x0359718C STP V0, V0, [X31 + 0x30]
	0x03597190 STP V0, V0, [X31 + 0x10]
	0x03597194 STR V0, [X31]
	0x03597198 ADRP X24, 0xB9F000
	0x0359719C ADRP X26, 0xB9F000
	0x035971A0 ADRP X25, 0xB9F000
	0x035971A4 LDR W8, [X0 + 0xE0]
	0x035971A8 LDR X24, [X24 + 0xFD8]
	0x035971AC LDR X26, [X26 + 0xFE0]
	0x035971B0 LDR X25, [X25 + 0xFE8]
	0x035971B4 CBNZ W8, 0x35971BC
	0x035971B8 BL 0x1C16DFC
	0x035971BC LDR X0, [X24]
	0x035971C0 ADD X8, X31, 0x0
	0x035971C4 ORR X24, X8, 0xF
	0x035971C8 MOV X8, X24
	0x035971CC BL 0x263221C
	0x035971D0 LDR X2, [X26]
	0x035971D4 MOVN W8, 0x0
	0x035971D8 ADD X1, X31, 0x0
	0x035971DC MOV X0, X24
	0x035971E0 STP X21, X23, [X31 + 0x20]
	0x035971E4 STP X22, X20, [X31 + 0x30]
	0x035971E8 STR X19, [X31 + 0x40]
	0x035971EC STR W8, [X31]
	0x035971F0 BL 0x1FCBF14
	0x035971F4 LDR X1, [X25]
	0x035971F8 MOV X0, X24
	0x035971FC BL 0x2632230
	0x03597200 LDP X20, X19, [X31 + 0x90]
	0x03597204 LDP X22, X21, [X31 + 0x80]
	0x03597208 LDP X24, X23, [X31 + 0x70]
	0x0359720C LDP X26, X25, [X31 + 0x60]
	0x03597210 LDR X30, [X31 + 0x50]
	0x03597214 ADD X31, X31, 0xA0
	0x03597218 RET
	0x0359721C SUB X31, X31, 0xC0
	0x03597220 STR X30, [X31 + 0x60]
	0x03597224 STP X28, X27, [X31 + 0x70]
	0x03597228 STP X26, X25, [X31 + 0x80]
	0x0359722C STP X24, X23, [X31 + 0x90]
	0x03597230 STP X22, X21, [X31 + 0xA0]
	0x03597234 STP X20, X19, [X31 + 0xB0]
	0x03597238 ADRP X27, 0xE48000
	0x0359723C ADRP X26, 0xB9F000
	0x03597240 LDRB W8, [X27 + 0xFBE]
	0x03597244 LDR X26, [X26 + 0xFF0]
	0x03597248 MOV X19, X6
	0x0359724C MOV X20, X5
	0x03597250 MOV X21, X4
	0x03597254 MOV X22, X3
	0x03597258 MOV X25, X2
	0x0359725C MOV X23, X1
	0x03597260 MOV X24, X0
	0x03597264 TBNZ X8, 0x0, 0x35972A0
	0x03597268 ADRP X0, 0xB9F000
	0x0359726C LDR X0, [X0 + 0xFF8]
	0x03597270 BL 0x1C16CF4
	0x03597274 ADRP X0, 0xBA0000
	0x03597278 LDR X0, [X0]
	0x0359727C BL 0x1C16CF4
	0x03597280 ADRP X0, 0xBA0000
	0x03597284 LDR X0, [X0 + 0x8]
	0x03597288 BL 0x1C16CF4
	0x0359728C ADRP X0, 0xB9F000
	0x03597290 LDR X0, [X0 + 0xFF0]
	0x03597294 BL 0x1C16CF4
	0x03597298 MOVZ W8, 0x1
	0x0359729C STRB W8, [X27 + 0xFBE]
	0x035972A0 LDR X0, [X26]
	0x035972A4 MOVI V0.2D, 0x0
	0x035972A8 STP V0, V0, [X31 + 0x40]
	0x035972AC STP V0, V0, [X31 + 0x20]
	0x035972B0 STP V0, V0, [X31]
	0x035972B4 ADRP X26, 0xB9F000
	0x035972B8 ADRP X28, 0xBA0000
	0x035972BC ADRP X27, 0xBA0000
	0x035972C0 LDR W8, [X0 + 0xE0]
	0x035972C4 LDR X26, [X26 + 0xFF8]
	0x035972C8 LDR X28, [X28]
	0x035972CC LDR X27, [X27 + 0x8]
	0x035972D0 CBNZ W8, 0x35972D8
	0x035972D4 BL 0x1C16DFC
	0x035972D8 LDR X0, [X26]
	0x035972DC ADD X8, X31, 0x0
	0x035972E0 ORR X26, X8, 0xF
	0x035972E4 MOV X8, X26
	0x035972E8 BL 0x263221C
	0x035972EC LDR X2, [X28]
	0x035972F0 MOVN W8, 0x0
	0x035972F4 ADD X1, X31, 0x0
	0x035972F8 MOV X0, X26
	0x035972FC STR X25, [X31 + 0x20]
	0x03597300 STRH W22, [X31 + 0x28]
	0x03597304 STP X21, X24, [X31 + 0x30]
	0x03597308 STP X23, X20, [X31 + 0x40]
	0x0359730C STR X19, [X31 + 0x50]
	0x03597310 STR W8, [X31]
	0x03597314 BL 0x1FCC014
	0x03597318 LDR X1, [X27]
	0x0359731C MOV X0, X26
	0x03597320 BL 0x2632230
	0x03597324 LDP X20, X19, [X31 + 0xB0]
	0x03597328 LDP X22, X21, [X31 + 0xA0]

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+32], X29
	003 Move [X31+40], X30
	004 Move [X31+48], X28
	005 Move [X31+56], X27
	006 Move [X31+64], X26
	007 Move [X31+72], X25
	008 Move [X31+80], X24
	009 Move [X31+88], X23
	010 Move [X31+96], X22
	011 Move [X31+104], X21
	012 Move [X31+112], X20
	013 Move [X31+120], X19
	014 Move X19, 0xE4A000
	015 Move X20, 0xB5E000
	016 Move W8, [X19+4015]
	017 Move X20, [X20+2440]
	018 Move X21, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {79}
	023 Move X0, 0xB5E000
	024 Move X0, [X0+2904]
	025 Call 0x1C17CF4
	026 Move X0, 0xB5E000
	027 Move X0, [X0+3584]
	028 Call 0x1C17CF4
	029 Move X0, 0xB61000
	030 Move X0, [X0+400]
	031 Call 0x1C17CF4
	032 Move X0, 0xB61000
	033 Move X0, [X0+408]
	034 Call 0x1C17CF4
	035 Move X0, 0xB5E000
	036 Move X0, [X0+3608]
	037 Call 0x1C17CF4
	038 Move X0, 0xB61000
	039 Move X0, [X0+432]
	040 Call 0x1C17CF4
	041 Move X0, 0xB61000
	042 Move X0, [X0+440]
	043 Call 0x1C17CF4
	044 Move X0, 0xB5E000
	045 Move X0, [X0+2512]
	046 Call 0x1C17CF4
	047 Move X0, 0xB5E000
	048 Move X0, [X0+2760]
	049 Call 0x1C17CF4
	050 Move X0, 0xB8B000
	051 Move X0, [X0+864]
	052 Call 0x1C17CF4
	053 Move X0, 0xB8B000
	054 Move X0, [X0+4024]
	055 Call 0x1C17CF4
	056 Move X0, 0xB69000
	057 Move X0, [X0+1752]
	058 Call 0x1C17CF4
	059 Move X0, 0xB5E000
	060 Move X0, [X0+2104]
	061 Call 0x1C17CF4
	062 Move X0, 0xBA1000
	063 Move X0, [X0+3864]
	064 Call 0x1C17CF4
	065 Move X0, 0xBA1000
	066 Move X0, [X0+3616]
	067 Call 0x1C17CF4
	068 Move X0, 0xBA1000
	069 Move X0, [X0+3624]
	070 Call 0x1C17CF4
	071 Move X0, 0xB5E000
	072 Move X0, [X0+2440]
	073 Call 0x1C17CF4
	074 Move X0, 0xB5E000
	075 Move X0, [X0+2120]
	076 Call 0x1C17CF4
	077 Move W8, 1
	078 Move [X19+4015], W8
	079 Move X20, [X20]
	080 Move X0, X21
	081 Move [X31+16], X21
	082 Call ApiUpdatePropertiesRequest.get_Custom, X0
	083 Compare X0, 0
	084 JumpIfEqual {499}
	085 Move X10, 0xB61000
	086 Move X8, [X0]
	087 Move X10, [X10+400]
	088 Move X21, X0
	089 NotImplemented "Instruction LDRH not yet implemented."
	090 Move X1, [X10]
	091 Compare X9, 0
	092 JumpIfEqual {99}
	093 Move X10, [X8+176]
	094 Add X10, X10, 8
	095 NotImplemented "Instruction LDUR not yet implemented."
	096 NotImplemented "Instruction CMP not yet implemented."
	097 Subtract X9, X9, 1
	098 Add X10, X10, 16
	099 Move X0, X21
	100 Move W2, W31
	101 Call 0x1C5D788
	102 NotImplemented "Instruction LDRSW not yet implemented."
	103 Add X8, X8, X9
	104 Add X0, X8, 312
	105 Move X26, 0xB5E000
	106 Move X25, 0xB61000
	107 Move X27, 0xB5E000
	108 Move X28, 0xB8B000
	109 Move X29, 0xB8B000
	110 Move X19, 0xB69000
	111 Move X26, [X26+3608]
	112 Move X25, [X25+408]
	113 Move X27, [X27+2760]
	114 Move X28, [X28+864]
	115 Move X29, [X29+4024]
	116 Move X19, [X19+1752]
	117 Move X8, [X0]
	118 Move X1, [X0+8]
	119 Move X0, X21
	120 NotImplemented "Instruction BLR not yet implemented."
	121 Move X21, X0
	122 Move X0, X20
	123 Compare X21, 0
	124 JumpIfEqual {485}
	125 Move X8, [X21]
	126 Move X1, [X26]
	127 Move X22, X0
	128 NotImplemented "Instruction LDRH not yet implemented."
	129 Compare X9, 0
	130 JumpIfEqual {137}
	131 Move X10, [X8+176]
	132 Add X10, X10, 8
	133 NotImplemented "Instruction LDUR not yet implemented."
	134 NotImplemented "Instruction CMP not yet implemented."
	135 Subtract X9, X9, 1
	136 Add X10, X10, 16
	137 Move X0, X21
	138 Move W2, W31
	139 Call 0x1C5D788
	140 NotImplemented "Instruction LDRSW not yet implemented."
	141 Add X8, X8, X9
	142 Add X0, X8, 312
	143 Move X8, [X0]
	144 Move X1, [X0+8]
	145 Move X0, X21
	146 NotImplemented "Instruction BLR not yet implemented."
	147 Move TEMP, X0
	148 And TEMP, TEMP, 1
	149 Compare TEMP, 1
	150 JumpIfNotEqual {200}
	151 Move X8, [X21]
	152 Move X1, [X25]
	153 NotImplemented "Instruction LDRH not yet implemented."
	154 Compare X9, 0
	155 JumpIfEqual {162}
	156 Move X10, [X8+176]
	157 Add X10, X10, 8
	158 NotImplemented "Instruction LDUR not yet implemented."
	159 NotImplemented "Instruction CMP not yet implemented."
	160 Subtract X9, X9, 1
	161 Add X10, X10, 16
	162 Move X0, X21
	163 Move W2, W31
	164 Call 0x1C5D788
	165 NotImplemented "Instruction LDRSW not yet implemented."
	166 Add X8, X8, X9
	167 Add X0, X8, 312
	168 Move X8, [X0]
	169 Move X1, [X0+8]
	170 Move X0, X21
	171 NotImplemented "Instruction BLR not yet implemented."
	172 Move X24, X0
	173 Move X0, [X27]
	174 Move X23, X1
	175 Move W1, 5
	176 Call 0x1C17D6C
	177 Compare X0, 0
	178 JumpIfEqual {488}
	179 Move W8, [X0+24]
	180 Compare W8, 0
	181 JumpIfEqual {490}
	182 Move X9, [X28]
	183 NotImplemented "Instruction CMP not yet implemented."
	184 Move [X0+32], X9
	185 NotImplemented "Instruction CMP not yet implemented."
	186 Move [X0+40], X24
	187 Move X9, [X29]
	188 NotImplemented "Instruction CMP not yet implemented."
	189 Move [X0+48], X9
	190 NotImplemented "Instruction CMP not yet implemented."
	191 Move [X0+56], X23
	192 Move X8, [X19]
	193 Move [X0+64], X8
	194 Move X1, X31
	195 Call String.Concat, X0
	196 Move X1, X0
	197 Move X0, X22
	198 Move X2, X31
	199 Call String.Concat, X0, X1
	200 Move X23, X31
	201 Compare X21, 0
	202 JumpIfEqual {226}
	203 Move X8, [X21]
	204 Move X10, 0xB5E000
	205 NotImplemented "Instruction LDRH not yet implemented."
	206 Move X10, [X10+3584]
	207 Move X1, [X10]
	208 Compare X9, 0
	209 JumpIfEqual {216}
	210 Move X10, [X8+176]
	211 Add X10, X10, 8
	212 NotImplemented "Instruction LDUR not yet implemented."
	213 NotImplemented "Instruction CMP not yet implemented."
	214 Subtract X9, X9, 1
	215 Add X10, X10, 16
	216 Move X0, X21
	217 Move W2, W31
	218 Call 0x1C5D788
	219 NotImplemented "Instruction LDRSW not yet implemented."
	220 Add X8, X8, X9
	221 Add X0, X8, 312
	222 Move X8, [X0]
	223 Move X1, [X0+8]
	224 Move X0, X21
	225 NotImplemented "Instruction BLR not yet implemented."
	226 Compare X23, 0
	227 JumpIfNotEqual {501}
	228 Move X8, 0xBA1000
	229 Move X8, [X8+3616]
	230 Move X1, X22
	231 Move X3, X31
	232 Move X0, [X8]
	233 Move X8, 0xB5E000
	234 Move X8, [X8+2120]
	235 Move X2, [X8]
	236 Call String.Concat, X0, X1, X2
	237 Move X1, X0
	238 Move X0, X20
	239 Move X2, X31
	240 Call String.Concat, X0, X1
	241 Move X8, 0xB5E000
	242 Move X8, [X8+2440]
	243 Move [X31+8], X0
	244 Move X0, [X31+16]
	245 Move X20, [X8]
	246 Call ApiUpdatePropertiesRequest.get_Default, X0
	247 Compare X0, 0
	248 JumpIfEqual {499}
	249 Move X8, [X0]
	250 Move X10, 0xB61000
	251 Move X21, X0
	252 NotImplemented "Instruction LDRH not yet implemented."
	253 Move X10, [X10+400]
	254 Move X1, [X10]
	255 Compare X9, 0
	256 JumpIfEqual {263}
	257 Move X10, [X8+176]
	258 Add X10, X10, 8
	259 NotImplemented "Instruction LDUR not yet implemented."
	260 NotImplemented "Instruction CMP not yet implemented."
	261 Subtract X9, X9, 1
	262 Add X10, X10, 16
	263 Move X0, X21
	264 Move W2, W31
	265 Call 0x1C5D788
	266 NotImplemented "Instruction LDRSW not yet implemented."
	267 Add X8, X8, X9
	268 Add X0, X8, 312
	269 Move X8, [X0]
	270 Move X1, [X0+8]
	271 Move X0, X21
	272 NotImplemented "Instruction BLR not yet implemented."
	273 Move X21, X0
	274 Move X0, X20
	275 Compare X21, 0
	276 JumpIfEqual {486}
	277 Move X8, [X21]
	278 Move X1, [X26]
	279 Move X22, X0
	280 NotImplemented "Instruction LDRH not yet implemented."
	281 Compare X9, 0
	282 JumpIfEqual {289}
	283 Move X10, [X8+176]
	284 Add X10, X10, 8
	285 NotImplemented "Instruction LDUR not yet implemented."
	286 NotImplemented "Instruction CMP not yet implemented."
	287 Subtract X9, X9, 1
	288 Add X10, X10, 16
	289 Move X0, X21
	290 Move W2, W31
	291 Call 0x1C5D788
	292 NotImplemented "Instruction LDRSW not yet implemented."
	293 Add X8, X8, X9
	294 Add X0, X8, 312
	295 Move X8, [X0]
	296 Move X1, [X0+8]
	297 Move X0, X21
	298 NotImplemented "Instruction BLR not yet implemented."
	299 Move TEMP, X0
	300 And TEMP, TEMP, 1
	301 Compare TEMP, 1
	302 JumpIfNotEqual {352}
	303 Move X8, [X21]
	304 Move X1, [X25]
	305 NotImplemented "Instruction LDRH not yet implemented."
	306 Compare X9, 0
	307 JumpIfEqual {314}
	308 Move X10, [X8+176]
	309 Add X10, X10, 8
	310 NotImplemented "Instruction LDUR not yet implemented."
	311 NotImplemented "Instruction CMP not yet implemented."
	312 Subtract X9, X9, 1
	313 Add X10, X10, 16
	314 Move X0, X21
	315 Move W2, W31
	316 Call 0x1C5D788
	317 NotImplemented "Instruction LDRSW not yet implemented."
	318 Add X8, X8, X9
	319 Add X0, X8, 312
	320 Move X8, [X0]
	321 Move X1, [X0+8]
	322 Move X0, X21
	323 NotImplemented "Instruction BLR not yet implemented."
	324 Move X24, X0
	325 Move X0, [X27]
	326 Move X23, X1
	327 Move W1, 5
	328 Call 0x1C17D6C
	329 Compare X0, 0
	330 JumpIfEqual {494}
	331 Move W8, [X0+24]
	332 Compare W8, 0
	333 JumpIfEqual {496}
	334 Move X9, [X28]
	335 NotImplemented "Instruction CMP not yet implemented."
	336 Move [X0+32], X9
	337 NotImplemented "Instruction CMP not yet implemented."
	338 Move [X0+40], X24
	339 Move X9, [X29]
	340 NotImplemented "Instruction CMP not yet implemented."
	341 Move [X0+48], X9
	342 NotImplemented "Instruction CMP not yet implemented."
	343 Move [X0+56], X23
	344 Move X8, [X19]
	345 Move [X0+64], X8
	346 Move X1, X31
	347 Call String.Concat, X0
	348 Move X1, X0
	349 Move X0, X22
	350 Move X2, X31
	351 Call String.Concat, X0, X1
	352 Move X23, X31
	353 Move W19, 7
	354 Compare X21, 0
	355 JumpIfEqual {379}
	356 Move X8, [X21]
	357 Move X10, 0xB5E000
	358 NotImplemented "Instruction LDRH not yet implemented."
	359 Move X10, [X10+3584]
	360 Move X1, [X10]
	361 Compare X9, 0
	362 JumpIfEqual {369}
	363 Move X10, [X8+176]
	364 Add X10, X10, 8
	365 NotImplemented "Instruction LDUR not yet implemented."
	366 NotImplemented "Instruction CMP not yet implemented."
	367 Subtract X9, X9, 1
	368 Add X10, X10, 16
	369 Move X0, X21
	370 Move W2, W31
	371 Call 0x1C5D788
	372 NotImplemented "Instruction LDRSW not yet implemented."
	373 Add X8, X8, X9
	374 Add X0, X8, 312
	375 Move X8, [X0]
	376 Move X1, [X0+8]
	377 Move X0, X21
	378 NotImplemented "Instruction BLR not yet implemented."
	379 Compare X23, 0
	380 JumpIfNotEqual {501}
	381 NotImplemented "Instruction CMP not yet implemented."
	382 Compare W19, 0
	383 JumpIfNotEqual {471}
	384 Move X8, 0xBA1000
	385 Move X8, [X8+3624]
	386 Move X1, X22
	387 Move X3, X31
	388 Move X0, [X8]
	389 Move X8, 0xB5E000
	390 Move X8, [X8+2120]
	391 Move X2, [X8]
	392 Call String.Concat, X0, X1, X2
	393 Move X1, X0
	394 Move X0, [X31+8]
	395 Move X2, X31
	396 Call String.Concat, X0, X1
	397 Move X8, 0xB5D000
	398 Move X8, [X8+2512]
	399 Move X21, X0
	400 Move W1, 4
	401 Move X8, [X8]
	402 Move X0, X8
	403 Call 0x1C17D6C
	404 Compare X0, 0
	405 JumpIfEqual {499}
	406 Move X20, X0
	407 Compare X21, 0
	408 JumpIfEqual {415}
	409 Move X8, [X20]
	410 Move X0, X21
	411 Move X1, [X8+64]
	412 Call 0x1C17E00
	413 Compare X0, 0
	414 JumpIfEqual {503}
	415 Move W8, [X20+24]
	416 Compare W8, 0
	417 JumpIfEqual {500}
	418 Move [X20+32], X21
	419 Move X19, 0xBA0000
	420 Move X19, [X19+3864]
	421 Move X0, [X19]
	422 Compare X0, 0
	423 JumpIfEqual {431}
	424 Move X8, [X20]
	425 Move X1, [X8+64]
	426 Call 0x1C17E00
	427 Move X9, [X31+16]
	428 Compare X0, 0
	429 JumpIfEqual {503}
	430 Move W8, [X20+24]
	431 Move X9, [X31+16]
	432 NotImplemented "Instruction CMP not yet implemented."
	433 Move X8, [X19]
	434 Add X1, X31, 28
	435 Move [X20+40], X8
	436 Move W8, [X9+32]
	437 Move X9, 0xB5D000
	438 Move X9, [X9+2904]
	439 Move [X31+28], W8
	440 Move X0, [X9]
	441 Call 0x1C17E04
	442 Move X19, X0
	443 Compare X0, 0
	444 JumpIfEqual {451}
	445 Move X8, [X20]
	446 Move X0, X19
	447 Move X1, [X8+64]
	448 Call 0x1C17E00
	449 Compare X0, 0
	450 JumpIfEqual {503}
	451 Move W8, [X20+24]
	452 NotImplemented "Instruction CMP not yet implemented."
	453 Move [X20+48], X19
	454 Move X19, 0xB5D000
	455 Move X19, [X19+2104]
	456 Move X0, [X19]
	457 Compare X0, 0
	458 JumpIfEqual {465}
	459 Move X8, [X20]
	460 Move X1, [X8+64]
	461 Call 0x1C17E00
	462 Compare X0, 0
	463 JumpIfEqual {503}
	464 Move W8, [X20+24]
	465 NotImplemented "Instruction CMP not yet implemented."
	466 Move X8, [X19]
	467 Move X0, X20
	468 Move X1, X31
	469 Move [X20+56], X8
	470 Call String.Concat, X0
	471 Move X20, [X31+112]
	472 Move X19, [X31+120]
	473 Move X22, [X31+96]
	474 Move X21, [X31+104]
	475 Move X24, [X31+80]
	476 Move X23, [X31+88]
	477 Move X26, [X31+64]
	478 Move X25, [X31+72]
	479 Move X28, [X31+48]
	480 Move X27, [X31+56]
	481 Move X29, [X31+32]
	482 Move X30, [X31+40]
	483 Add X31, X31, 128
	484 Return X0
	485 Call 0x1C17F20
	486 Call 0x1C17F20
	487 Call 0x1C17F28
	488 Call 0x1C17F20
	489 Call 0x1C17F28
	490 Call 0x1C17F28
	491 Call 0x1C17F28
	492 Call 0x1C17F28
	493 Call 0x1C17F28
	494 Call 0x1C17F20
	495 Call 0x1C17F28
	496 Call 0x1C17F28
	497 Call 0x1C17F28
	498 Call 0x1C17F28
	499 Call 0x1C17F20
	500 Call 0x1C17F28
	501 Move X0, X23
	502 Call 0x1C17F18
	503 Call 0x1C17F44
	504 Move X1, X31
	505 Call 0x1C17DEC
	506 Move X22, X20
	507 Move X22, X20
	508 NotImplemented "Instruction CMP not yet implemented."
	509 Call 0x3EB2AD0
	510 Move X23, [X0]
	511 Call 0x3EB2AE0
	512 Move W19, W31
	513 Compare X21, 0
	514 JumpIfNotEqual {356}
	515 Move X19, X0
	516 Move X23, X31
	517 Move X19, X0
	518 Compare X21, 0
	519 JumpIfEqual {543}
	520 Move X8, [X21]
	521 Move X10, 0xB5D000
	522 NotImplemented "Instruction LDRH not yet implemented."
	523 Move X10, [X10+3584]
	524 Move X1, [X10]
	525 Compare X9, 0
	526 JumpIfEqual {533}
	527 Move X10, [X8+176]
	528 Add X10, X10, 8
	529 NotImplemented "Instruction LDUR not yet implemented."
	530 NotImplemented "Instruction CMP not yet implemented."
	531 Subtract X9, X9, 1
	532 Add X10, X10, 16
	533 Move X0, X21
	534 Move W2, W31
	535 Call 0x1C5D788
	536 NotImplemented "Instruction LDRSW not yet implemented."
	537 Add X8, X8, X9
	538 Add X0, X8, 312
	539 Move X8, [X0]
	540 Move X1, [X0+8]
	541 Move X0, X21
	542 NotImplemented "Instruction BLR not yet implemented."
	543 Compare X23, 0
	544 JumpIfEqual {581}
	545 Move X0, X23
	546 Call 0x1C17F18
	547 NotImplemented "Instruction CMP not yet implemented."
	548 Call 0x3EB2AD0
	549 Move X23, [X0]
	550 Call 0x3EB2AE0
	551 Move X19, X0
	552 Move X23, X31
	553 Move X19, X0
	554 Compare X21, 0
	555 JumpIfEqual {579}
	556 Move X8, [X21]
	557 Move X10, 0xB5D000
	558 NotImplemented "Instruction LDRH not yet implemented."
	559 Move X10, [X10+3584]
	560 Move X1, [X10]
	561 Compare X9, 0
	562 JumpIfEqual {569}
	563 Move X10, [X8+176]
	564 Add X10, X10, 8
	565 NotImplemented "Instruction LDUR not yet implemented."
	566 NotImplemented "Instruction CMP not yet implemented."
	567 Subtract X9, X9, 1
	568 Add X10, X10, 16
	569 Move X0, X21
	570 Move W2, W31
	571 Call 0x1C5D788
	572 NotImplemented "Instruction LDRSW not yet implemented."
	573 Add X8, X8, X9
	574 Add X0, X8, 312
	575 Move X8, [X0]
	576 Move X1, [X0+8]
	577 Move X0, X21
	578 NotImplemented "Instruction BLR not yet implemented."
	579 Compare X23, 0
	580 JumpIfNotEqual {583}
	581 Move X0, X19
	582 Call 0x1D2D690
	583 Move X0, X23
	584 Call 0x1C17F18
	585 Call 0x1991590

Method: System.Void .ctor()

Disassembly:
	0x0359732C LDP X24, X23, [X31 + 0x90]
	0x03597330 LDP X26, X25, [X31 + 0x80]

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

