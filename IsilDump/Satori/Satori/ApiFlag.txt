Type: Satori.ApiFlag

Method: System.Boolean get_ConditionChanged()

Disassembly:
	0x03594074 LDR X0, [X0 + 0xEC0]
	0x03594078 BL 0x1C16CF4

ISIL:
	001 Move W0, [X0+16]
	002 Return X0

Method: System.Void set_ConditionChanged(System.Boolean value)

Disassembly:
	0x0359407C ADRP X0, 0xB5F000
	0x03594080 LDR X0, [X0 + 0x988]
	0x03594084 BL 0x1C16CF4

ISIL:
	001 And W8, W1, 1
	002 Move [X0+16], W8
	003 Return 

Method: System.String get_Name()

Disassembly:
	0x03594088 ADRP X0, 0xB99000
	0x0359408C LDR X0, [X0 + 0xCD0]

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void set_Name(System.String value)

Disassembly:
	0x03594090 BL 0x1C16CF4
	0x03594094 MOVZ W8, 0x1

ISIL:
	001 Move [X0+24], X1
	002 Return 

Method: System.String get_Value()

Disassembly:
	0x03594098 STRB W8, [X28 + 0xFA3]
	0x0359409C LDR X2, [X19 + 0x10]

ISIL:
	001 Move X0, [X0+32]
	002 Return X0

Method: System.Void set_Value(System.String value)

Disassembly:
	0x035940A0 LDR X0, [X26]
	0x035940A4 LDR X1, [X27]

ISIL:
	001 Move [X0+32], X1
	002 Return 

Method: System.String ToString()

Disassembly:
	0x035940A8 LDR X3, [X20]
	0x035940AC MOV X4, X31
	0x035940B0 BL 0x32277C4
	0x035940B4 LDR X2, [X19 + 0x18]
	0x035940B8 LDR X1, [X25]
	0x035940BC LDR X3, [X20]
	0x035940C0 MOV X4, X31
	0x035940C4 BL 0x32277C4
	0x035940C8 LDR X2, [X19 + 0x20]
	0x035940CC LDR X1, [X24]
	0x035940D0 LDR X3, [X20]
	0x035940D4 MOV X4, X31
	0x035940D8 BL 0x32277C4
	0x035940DC LDR X2, [X19 + 0x28]
	0x035940E0 LDR X1, [X23]
	0x035940E4 LDR X3, [X20]
	0x035940E8 MOV X4, X31
	0x035940EC BL 0x32277C4
	0x035940F0 LDR X2, [X19 + 0x30]
	0x035940F4 LDR X1, [X22]
	0x035940F8 LDR X3, [X20]
	0x035940FC MOV X4, X31
	0x03594100 BL 0x32277C4
	0x03594104 LDR X2, [X19 + 0x38]
	0x03594108 LDR X1, [X21]
	0x0359410C LDR X3, [X20]
	0x03594110 LDP X20, X19, [X31 + 0x50]
	0x03594114 LDP X22, X21, [X31 + 0x40]
	0x03594118 LDP X24, X23, [X31 + 0x30]
	0x0359411C LDP X26, X25, [X31 + 0x20]
	0x03594120 LDP X28, X27, [X31 + 0x10]
	0x03594124 MOV X4, X31
	0x03594128 LDR X30, [X31], #0x60
	0x0359412C B 0x32277C4
	0x03594130 MOV X1, X31
	0x03594134 B 0x33BDD8C
	0x03594138 STR X30, [X31 - 0x20]!
	0x0359413C STP X20, X19, [X31 + 0x10]
	0x03594140 ADRP X20, 0xE4B000
	0x03594144 LDRB W8, [X20 + 0xFA4]
	0x03594148 MOV X19, X0
	0x0359414C TBNZ X8, 0x0, 0x3594170
	0x03594150 ADRP X0, 0xBA2000
	0x03594154 LDR X0, [X0 + 0xEC8]
	0x03594158 BL 0x1C16CF4
	0x0359415C ADRP X0, 0xBA2000
	0x03594160 LDR X0, [X0 + 0xED0]
	0x03594164 BL 0x1C16CF4
	0x03594168 MOVZ W8, 0x1
	0x0359416C STRB W8, [X20 + 0xFA4]
	0x03594170 LDR X19, [X19 + 0x10]
	0x03594174 CBNZ X19, 0x35941A0
	0x03594178 ADRP X8, 0xBA2000
	0x0359417C LDR X8, [X8 + 0xED0]
	0x03594180 LDR X0, [X8]
	0x03594184 BL 0x1C16F10
	0x03594188 ADRP X8, 0xBA2000
	0x0359418C LDR X8, [X8 + 0xEC8]
	0x03594190 MOV W1, W31
	0x03594194 MOV X19, X0
	0x03594198 LDR X2, [X8]
	0x0359419C BL 0x301B830
	0x035941A0 MOV X0, X19
	0x035941A4 LDP X20, X19, [X31 + 0x10]
	0x035941A8 LDR X30, [X31], #0x20
	0x035941AC RET
	0x035941B0 LDR X0, [X0 + 0x10]
	0x035941B4 RET
	0x035941B8 STR X1, [X0 + 0x10]
	0x035941BC RET
	0x035941C0 STP X30, X25, [X31 - 0x40]!
	0x035941C4 STP X24, X23, [X31 + 0x10]
	0x035941C8 STP X22, X21, [X31 + 0x20]
	0x035941CC STP X20, X19, [X31 + 0x30]
	0x035941D0 ADRP X25, 0xE4B000
	0x035941D4 ADRP X23, 0xB5F000
	0x035941D8 ADRP X24, 0xBA2000
	0x035941DC ADRP X20, 0xB5F000
	0x035941E0 ADRP X21, 0xBA2000
	0x035941E4 ADRP X22, 0xB99000
	0x035941E8 LDRB W8, [X25 + 0xFA5]
	0x035941EC LDR X23, [X23 + 0x838]
	0x035941F0 LDR X24, [X24 + 0xED8]
	0x035941F4 LDR X20, [X20 + 0x988]
	0x035941F8 LDR X21, [X21 + 0xEE0]
	0x035941FC LDR X22, [X22 + 0xD50]
	0x03594200 MOV X19, X0
	0x03594204 TBNZ X8, 0x0, 0x359424C
	0x03594208 ADRP X0, 0xBA2000
	0x0359420C LDR X0, [X0 + 0xED8]
	0x03594210 BL 0x1C16CF4
	0x03594214 ADRP X0, 0xBA2000
	0x03594218 LDR X0, [X0 + 0xEE0]
	0x0359421C BL 0x1C16CF4
	0x03594220 ADRP X0, 0xB5F000
	0x03594224 LDR X0, [X0 + 0x838]
	0x03594228 BL 0x1C16CF4
	0x0359422C ADRP X0, 0xB99000
	0x03594230 LDR X0, [X0 + 0xD50]
	0x03594234 BL 0x1C16CF4
	0x03594238 ADRP X0, 0xB5F000
	0x0359423C LDR X0, [X0 + 0x988]
	0x03594240 BL 0x1C16CF4
	0x03594244 MOVZ W8, 0x1
	0x03594248 STRB W8, [X25 + 0xFA5]
	0x0359424C MOV X0, X19
	0x03594250 BL 0x3594138
	0x03594254 LDR X8, [X23]
	0x03594258 LDR X2, [X24]
	0x0359425C MOV X1, X0
	0x03594260 MOV X0, X8
	0x03594264 BL 0x226B7E8
	0x03594268 LDR X8, [X20]
	0x0359426C LDR X1, [X21]
	0x03594270 LDR X3, [X22]
	0x03594274 LDP X20, X19, [X31 + 0x30]
	0x03594278 LDP X22, X21, [X31 + 0x20]
	0x0359427C LDP X24, X23, [X31 + 0x10]
	0x03594280 MOV X2, X0
	0x03594284 MOV X0, X8
	0x03594288 MOV X4, X31

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0xE4C000
	009 Move X21, 0xB60000
	010 Move X22, 0xB60000
	011 Move W8, [X20+3995]
	012 Move X21, [X21+2440]
	013 Move X22, [X22+2512]
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {42}
	019 Move X0, 0xB60000
	020 Move X0, [X0+2904]
	021 Call 0x1C17CF4
	022 Move X0, 0xB60000
	023 Move X0, [X0+2512]
	024 Call 0x1C17CF4
	025 Move X0, 0xBA3000
	026 Move X0, [X0+3704]
	027 Call 0x1C17CF4
	028 Move X0, 0xB8D000
	029 Move X0, [X0+3000]
	030 Call 0x1C17CF4
	031 Move X0, 0xB61000
	032 Move X0, [X0+3808]
	033 Call 0x1C17CF4
	034 Move X0, 0xB60000
	035 Move X0, [X0+2104]
	036 Call 0x1C17CF4
	037 Move X0, 0xB60000
	038 Move X0, [X0+2440]
	039 Call 0x1C17CF4
	040 Move W8, 1
	041 Move [X20+3995], W8
	042 Move X0, [X22]
	043 Move X21, [X21]
	044 Move W1, 4
	045 Call 0x1C17D6C
	046 Compare X0, 0
	047 JumpIfEqual {137}
	048 Move X20, X0
	049 Compare X21, 0
	050 JumpIfEqual {57}
	051 Move X8, [X20]
	052 Move X0, X21
	053 Move X1, [X8+64]
	054 Call 0x1C17E00
	055 Compare X0, 0
	056 JumpIfEqual {134}
	057 Move W8, [X20+24]
	058 Compare W8, 0
	059 JumpIfEqual {133}
	060 Move X22, 0xBA3000
	061 Move X22, [X22+3704]
	062 Move [X20+32], X21
	063 Move X0, [X22]
	064 Compare X0, 0
	065 JumpIfEqual {72}
	066 Move X8, [X20]
	067 Move X1, [X8+64]
	068 Call 0x1C17E00
	069 Compare X0, 0
	070 JumpIfEqual {134}
	071 Move W8, [X20+24]
	072 NotImplemented "Instruction CMP not yet implemented."
	073 Move X8, [X22]
	074 Move X9, 0xB60000
	075 Move X9, [X9+2904]
	076 Add X1, X31, 12
	077 Move [X20+40], X8
	078 Move W8, [X19+16]
	079 Move X0, [X9]
	080 Move [X31+12], W8
	081 Call 0x1C17E04
	082 Move X21, X0
	083 Compare X0, 0
	084 JumpIfEqual {91}
	085 Move X8, [X20]
	086 Move X0, X21
	087 Move X1, [X8+64]
	088 Call 0x1C17E00
	089 Compare X0, 0
	090 JumpIfEqual {134}
	091 Move W8, [X20+24]
	092 NotImplemented "Instruction CMP not yet implemented."
	093 Move X22, 0xB60000
	094 Move X22, [X22+2104]
	095 Move [X20+48], X21
	096 Move X0, [X22]
	097 Compare X0, 0
	098 JumpIfEqual {105}
	099 Move X8, [X20]
	100 Move X1, [X8+64]
	101 Call 0x1C17E00
	102 Compare X0, 0
	103 JumpIfEqual {134}
	104 Move W8, [X20+24]
	105 NotImplemented "Instruction CMP not yet implemented."
	106 Move X8, [X22]
	107 Move X21, 0xB61000
	108 Move X23, 0xB8D000
	109 Move X21, [X21+3808]
	110 Move X23, [X23+3000]
	111 Move X0, X20
	112 Move X1, X31
	113 Move [X20+56], X8
	114 Call String.Concat, X0
	115 Move X2, [X19+24]
	116 Move X1, [X21]
	117 Move X3, [X22]
	118 Move X4, X31
	119 Call String.Concat, X0, X1, X2, X3
	120 Move X2, [X19+32]
	121 Move X1, [X23]
	122 Move X3, [X22]
	123 Move X4, X31
	124 Call String.Concat, X0, X1, X2, X3
	125 Move X20, [X31+48]
	126 Move X19, [X31+56]
	127 Move X22, [X31+32]
	128 Move X21, [X31+40]
	129 Move X30, [X31+16]
	130 Move X23, [X31+24]
	131 Add X31, X31, 64
	132 Return X0
	133 Call 0x1C17F28
	134 Call 0x1C17F44
	135 Move X1, X31
	136 Call 0x1C17DEC
	137 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x0359428C LDP X30, X25, [X31], #0x40
	0x03594290 B 0x32277C4

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

