Type: Satori.Client/<GetFlagAsync>d__31

Method: System.Void MoveNext()

Disassembly:
	0x035A3694 LDR W8, [X19]
	0x035A3698 LDR X20, [X19 + 0x20]
	0x035A369C LDR X23, [X23 + 0xFA0]
	0x035A36A0 LDR X24, [X24 + 0x290]
	0x035A36A4 CBZ W8, 0x35A36C8
	0x035A36A8 CMP W8, 0x1
	0x035A36AC B.NE 0x35A36F4
	0x035A36B0 LDR X8, [X19 + 0x50]
	0x035A36B4 MOVN W9, 0x0
	0x035A36B8 STR X8, [X31]
	0x035A36BC STR X31, [X19 + 0x50]
	0x035A36C0 STR W9, [X19]
	0x035A36C4 B 0x35A397C
	0x035A36C8 LDR X8, [X19 + 0x48]
	0x035A36CC MOVN W9, 0x0
	0x035A36D0 STR X8, [X31 + 0x8]
	0x035A36D4 STR X31, [X19 + 0x48]
	0x035A36D8 STR W9, [X19]
	0x035A36DC ADRP X8, 0xB94000
	0x035A36E0 LDR X8, [X8 + 0x3A8]
	0x035A36E4 ADD X0, X31, 0x8
	0x035A36E8 LDR X1, [X8]
	0x035A36EC BL 0x2677474
	0x035A36F0 B 0x35A38B4
	0x035A36F4 CBZ X20, 0x35A3A2C
	0x035A36F8 LDRB W8, [X20 + 0x10]
	0x035A36FC CBZ W8, 0x35A38B8
	0x035A3700 LDR X21, [X19 + 0x28]
	0x035A3704 CBZ X21, 0x35A3A30
	0x035A3708 LDR X8, [X21]
	0x035A370C LDR X1, [X24]
	0x035A3710 LDRH W9, [X8 + 0x12E]
	0x035A3714 CBZ X9, 0x35A3738
	0x035A3718 LDR X10, [X8 + 0xB0]
	0x035A371C ADD X10, X10, 0x8
	0x035A3720 LDUR X11, [X10 - 0x8]
	0x035A3724 CMP X11, X1
	0x035A3728 B.EQ 0x35A3748
	0x035A372C SUBS X9, X9, 0x1
	0x035A3730 ADD X10, X10, 0x10
	0x035A3734 B.NE 0x35A3720
	0x035A3738 MOVZ W2, 0x5
	0x035A373C MOV X0, X21
	0x035A3740 BL 0x1C5C788
	0x035A3744 B 0x35A3758
	0x035A3748 LDR W9, [X10]
	0x035A374C ADD W9, W9, 0x5
	0x035A3750 ADD X8, X8, W9, 0x4, SXTW
	0x035A3754 ADD X0, X8, 0x138
	0x035A3758 LDP X8, X1, [X0]
	0x035A375C MOV X0, X21
	0x035A3760 BLR X8
	0x035A3764 MOV X1, X31
	0x035A3768 BL 0x32277A8
	0x035A376C TBNZ X0, 0x0, 0x35A38B4
	0x035A3770 ADRP X8, 0xB51000
	0x035A3774 LDR X8, [X8 + 0x9F0]
	0x035A3778 LDR X21, [X19 + 0x28]
	0x035A377C LDR X0, [X8]
	0x035A3780 LDR W8, [X0 + 0xE0]
	0x035A3784 CBNZ W8, 0x35A378C
	0x035A3788 BL 0x1C16DFC
	0x035A378C MOV X0, X31
	0x035A3790 BL 0x33616A4
	0x035A3794 ADRP X22, 0xB94000
	0x035A3798 LDR X22, [X22 + 0x340]
	0x035A379C MOV X8, X0
	0x035A37A0 STR X8, [X31 + 0x18]
	0x035A37A4 LDR X0, [X22]
	0x035A37A8 LDR W8, [X0 + 0xE0]
	0x035A37AC CBNZ W8, 0x35A37B8
	0x035A37B0 BL 0x1C16DFC
	0x035A37B4 LDR X0, [X22]
	0x035A37B8 LDR X8, [X0 + 0xB8]
	0x035A37BC LDR X1, [X8]
	0x035A37C0 ADD X0, X31, 0x18
	0x035A37C4 MOV X2, X31
	0x035A37C8 BL 0x335FC68
	0x035A37CC CBZ X21, 0x35A3A34
	0x035A37D0 LDR X8, [X21]
	0x035A37D4 LDR X1, [X24]
	0x035A37D8 MOV X22, X0
	0x035A37DC LDRH W9, [X8 + 0x12E]
	0x035A37E0 CBZ X9, 0x35A3804
	0x035A37E4 LDR X10, [X8 + 0xB0]
	0x035A37E8 ADD X10, X10, 0x8
	0x035A37EC LDUR X11, [X10 - 0x8]
	0x035A37F0 CMP X11, X1
	0x035A37F4 B.EQ 0x35A3814
	0x035A37F8 SUBS X9, X9, 0x1
	0x035A37FC ADD X10, X10, 0x10
	0x035A3800 B.NE 0x35A37EC
	0x035A3804 MOVZ W2, 0x7
	0x035A3808 MOV X0, X21
	0x035A380C BL 0x1C5C788
	0x035A3810 B 0x35A3824
	0x035A3814 LDR W9, [X10]
	0x035A3818 ADD W9, W9, 0x7
	0x035A381C ADD X8, X8, W9, 0x4, SXTW
	0x035A3820 ADD X0, X8, 0x138
	0x035A3824 LDP X8, X2, [X0]
	0x035A3828 MOV X0, X21
	0x035A382C MOV X1, X22
	0x035A3830 BLR X8
	0x035A3834 TBZ X0, 0x0, 0x35A38B4
	0x035A3838 LDP X1, X2, [X19 + 0x28]
	0x035A383C LDR X3, [X19 + 0x38]
	0x035A3840 MOV X0, X20
	0x035A3844 BL 0x359F740
	0x035A3848 CBZ X0, 0x35A3A38
	0x035A384C ADRP X8, 0xB94000
	0x035A3850 LDR X8, [X8 + 0x3B8]
	0x035A3854 LDR X1, [X8]
	0x035A3858 BL 0x269F5D0
	0x035A385C ADRP X8, 0xB94000
	0x035A3860 LDR X8, [X8 + 0x3B0]
	0x035A3864 STR X0, [X31 + 0x8]
	0x035A3868 LDR X1, [X8]
	0x035A386C ADD X0, X31, 0x8
	0x035A3870 BL 0x2677430
	0x035A3874 TBNZ X0, 0x0, 0x35A36DC
	0x035A3878 STR W31, [X19]
	0x035A387C LDR X8, [X31 + 0x8]
	0x035A3880 STR X8, [X19 + 0x48]
	0x035A3884 LDR X0, [X23]
	0x035A3888 LDR W8, [X0 + 0xE0]
	0x035A388C CBNZ W8, 0x35A3894
	0x035A3890 BL 0x1C16DFC
	0x035A3894 ADRP X8, 0xB94000
	0x035A3898 LDR X8, [X8 + 0x4D8]
	0x035A389C ADD X0, X19, 0x8
	0x035A38A0 LDR X3, [X8]
	0x035A38A4 ADD X1, X31, 0x8
	0x035A38A8 MOV X2, X19
	0x035A38AC BL 0x1FBF6CC
	0x035A38B0 B 0x35A3A04
	0x035A38B4 CBZ X20, 0x35A3A28
	0x035A38B8 LDR X21, [X19 + 0x28]
	0x035A38BC CBZ X21, 0x35A3A1C
	0x035A38C0 LDR X8, [X21]
	0x035A38C4 LDR X20, [X20 + 0x40]
	0x035A38C8 LDR X1, [X24]
	0x035A38CC LDRH W9, [X8 + 0x12E]
	0x035A38D0 CBZ X9, 0x35A38F4
	0x035A38D4 LDR X10, [X8 + 0xB0]
	0x035A38D8 ADD X10, X10, 0x8
	0x035A38DC LDUR X11, [X10 - 0x8]
	0x035A38E0 CMP X11, X1
	0x035A38E4 B.EQ 0x35A3904
	0x035A38E8 SUBS X9, X9, 0x1
	0x035A38EC ADD X10, X10, 0x10
	0x035A38F0 B.NE 0x35A38DC
	0x035A38F4 MOV X0, X21
	0x035A38F8 MOV W2, W31
	0x035A38FC BL 0x1C5C788
	0x035A3900 B 0x35A3910
	0x035A3904 LDRSW X9, [X10]
	0x035A3908 ADD X8, X8, X9, 0x4, LSL
	0x035A390C ADD X0, X8, 0x138
	0x035A3910 LDP X8, X1, [X0]
	0x035A3914 MOV X0, X21
	0x035A3918 BLR X8
	0x035A391C MOV X1, X0
	0x035A3920 CBZ X20, 0x35A3A20
	0x035A3924 ADRP X8, 0xB52000
	0x035A3928 LDR X8, [X8 + 0x278]
	0x035A392C LDP X5, X6, [X19 + 0x30]
	0x035A3930 LDR X4, [X19 + 0x40]
	0x035A3934 LDR X8, [X8]
	0x035A3938 LDR X8, [X8 + 0xB8]
	0x035A393C LDR X2, [X8]
	0x035A3940 MOV X0, X20
	0x035A3944 MOV X3, X2
	0x035A3948 BL 0x3596DF0
	0x035A394C CBZ X0, 0x35A3A24
	0x035A3950 ADRP X8, 0xB94000
	0x035A3954 LDR X8, [X8 + 0x498]
	0x035A3958 LDR X1, [X8]
	0x035A395C BL 0x269F5D0
	0x035A3960 ADRP X8, 0xB94000
	0x035A3964 LDR X8, [X8 + 0x490]
	0x035A3968 STR X0, [X31]
	0x035A396C LDR X1, [X8]
	0x035A3970 ADD X0, X31, 0x0
	0x035A3974 BL 0x2677430
	0x035A3978 TBZ X0, 0x0, 0x35A39C8
	0x035A397C ADRP X8, 0xB94000
	0x035A3980 LDR X8, [X8 + 0x488]
	0x035A3984 ADD X0, X31, 0x0
	0x035A3988 LDR X1, [X8]
	0x035A398C BL 0x2677474
	0x035A3990 MOVN W8, 0x1
	0x035A3994 STR W8, [X19], #0x8
	0x035A3998 MOV X20, X0
	0x035A399C LDR X0, [X23]
	0x035A39A0 ADRP X21, 0xB94000
	0x035A39A4 LDR W8, [X0 + 0xE0]
	0x035A39A8 LDR X21, [X21 + 0x138]
	0x035A39AC CBNZ W8, 0x35A39B4
	0x035A39B0 BL 0x1C16DFC
	0x035A39B4 LDR X2, [X21]
	0x035A39B8 MOV X0, X19
	0x035A39BC MOV X1, X20
	0x035A39C0 BL 0x26322B0
	0x035A39C4 B 0x35A3A04
	0x035A39C8 MOVZ W8, 0x1
	0x035A39CC STR W8, [X19]
	0x035A39D0 LDR X8, [X31]
	0x035A39D4 STR X8, [X19 + 0x50]
	0x035A39D8 LDR X0, [X23]
	0x035A39DC LDR W8, [X0 + 0xE0]
	0x035A39E0 CBNZ W8, 0x35A39E8
	0x035A39E4 BL 0x1C16DFC
	0x035A39E8 ADRP X8, 0xB94000
	0x035A39EC LDR X8, [X8 + 0x4D0]
	0x035A39F0 ADD X0, X19, 0x8
	0x035A39F4 LDR X3, [X8]
	0x035A39F8 ADD X1, X31, 0x0
	0x035A39FC MOV X2, X19
	0x035A3A00 BL 0x1FBF6CC
	0x035A3A04 LDP X20, X19, [X31 + 0x40]
	0x035A3A08 LDP X22, X21, [X31 + 0x30]
	0x035A3A0C LDP X24, X23, [X31 + 0x20]
	0x035A3A10 LDR X30, [X31 + 0x10]
	0x035A3A14 ADD X31, X31, 0x50
	0x035A3A18 RET
	0x035A3A1C BL 0x1C16F20
	0x035A3A20 BL 0x1C16F20
	0x035A3A24 BL 0x1C16F20
	0x035A3A28 BL 0x1C16F20
	0x035A3A2C BL 0x1C16F20
	0x035A3A30 BL 0x1C16F20
	0x035A3A34 BL 0x1C16F20
	0x035A3A38 BL 0x1C16F20
	0x035A3A3C B 0x35A3A98
	0x035A3A40 B 0x35A3A98
	0x035A3A44 B 0x35A3A98
	0x035A3A48 B 0x35A3A98
	0x035A3A4C B 0x35A3A98
	0x035A3A50 B 0x35A3A98
	0x035A3A54 B 0x35A3A98
	0x035A3A58 B 0x35A3A98
	0x035A3A5C B 0x35A3A98
	0x035A3A60 B 0x35A3A98
	0x035A3A64 B 0x35A3A98
	0x035A3A68 B 0x35A3A98
	0x035A3A6C B 0x35A3A98
	0x035A3A70 B 0x35A3A98
	0x035A3A74 B 0x35A3A98
	0x035A3A78 B 0x35A3A98
	0x035A3A7C B 0x35A3A98
	0x035A3A80 B 0x35A3A98
	0x035A3A84 B 0x35A3A98
	0x035A3A88 B 0x35A3A98
	0x035A3A8C B 0x35A3A98
	0x035A3A90 B 0x35A3A98
	0x035A3A94 B 0x35A3A98
	0x035A3A98 MOV X20, X0
	0x035A3A9C CMP W1, 0x1
	0x035A3AA0 B.NE 0x35A3B3C
	0x035A3AA4 MOV X0, X20
	0x035A3AA8 BL 0x3EB1AD0
	0x035A3AAC MOV X20, X0
	0x035A3AB0 ADRP X0, 0xB50000
	0x035A3AB4 LDR X0, [X0 + 0x7D0]
	0x035A3AB8 BL 0x1C16D08
	0x035A3ABC LDR X8, [X20]
	0x035A3AC0 LDR X1, [X8]
	0x035A3AC4 BL 0x1C17270
	0x035A3AC8 TBZ X0, 0x0, 0x35A3B14
	0x035A3ACC LDR X20, [X20]
	0x035A3AD0 BL 0x3EB1AE0
	0x035A3AD4 MOVN W8, 0x1
	0x035A3AD8 STR W8, [X19], #0x8
	0x035A3ADC ADRP X0, 0xB93000
	0x035A3AE0 LDR X0, [X0 + 0xFA0]
	0x035A3AE4 BL 0x1C16D08
	0x035A3AE8 LDR W8, [X0 + 0xE0]
	0x035A3AEC CBNZ W8, 0x35A3AF4
	0x035A3AF0 BL 0x1C16DFC
	0x035A3AF4 ADRP X0, 0xB94000
	0x035A3AF8 LDR X0, [X0 + 0x150]
	0x035A3AFC BL 0x1C16D08
	0x035A3B00 MOV X2, X0
	0x035A3B04 MOV X0, X19
	0x035A3B08 MOV X1, X20
	0x035A3B0C BL 0x26324C8
	0x035A3B10 B 0x35A3A04
	0x035A3B14 MOVZ W0, 0x8
	0x035A3B18 BL 0x3EB1AF0
	0x035A3B1C LDR X8, [X20]
	0x035A3B20 STR X8, [X0]
	0x035A3B24 ADRP X1, 0x911000
	0x035A3B28 ADD X1, X1, 0xE58
	0x035A3B2C MOV X2, X31
	0x035A3B30 BL 0x3EB1B00
	0x035A3B34 MOV X20, X0
	0x035A3B38 BL 0x3EB1AE0
	0x035A3B3C MOV X0, X20
	0x035A3B40 BL 0x1D2C690
	0x035A3B44 BL 0x1990590
	0x035A3B48 STR X30, [X31 - 0x30]!
	0x035A3B4C STP X22, X21, [X31 + 0x10]
	0x035A3B50 STP X20, X19, [X31 + 0x20]
	0x035A3B54 ADRP X22, 0xE3D000
	0x035A3B58 ADRP X21, 0xB93000
	0x035A3B5C LDRB W8, [X22 + 0xB]
	0x035A3B60 LDR X21, [X21 + 0xFA0]
	0x035A3B64 MOV X19, X1
	0x035A3B68 MOV X20, X0
	0x035A3B6C TBNZ X8, 0x0, 0x35A3B90
	0x035A3B70 ADRP X0, 0xB94000
	0x035A3B74 LDR X0, [X0 + 0x158]
	0x035A3B78 BL 0x1C16CF4
	0x035A3B7C ADRP X0, 0xB93000
	0x035A3B80 LDR X0, [X0 + 0xFA0]
	0x035A3B84 BL 0x1C16CF4
	0x035A3B88 MOVZ W8, 0x1
	0x035A3B8C STRB W8, [X22 + 0xB]
	0x035A3B90 LDR X0, [X21]
	0x035A3B94 ADRP X21, 0xB94000
	0x035A3B98 LDR W8, [X0 + 0xE0]
	0x035A3B9C LDR X21, [X21 + 0x158]
	0x035A3BA0 CBNZ W8, 0x35A3BA8
	0x035A3BA4 BL 0x1C16DFC
	0x035A3BA8 LDR X2, [X21]
	0x035A3BAC ADD X0, X20, 0x8
	0x035A3BB0 MOV X1, X19
	0x035A3BB4 LDP X20, X19, [X31 + 0x20]
	0x035A3BB8 LDP X22, X21, [X31 + 0x10]
	0x035A3BBC LDR X30, [X31], #0x30
	0x035A3BC0 B 0x2632228
	0x035A3BC4 SUB X31, X31, 0x50
	0x035A3BC8 STR X30, [X31 + 0x10]
	0x035A3BCC STP X24, X23, [X31 + 0x20]
	0x035A3BD0 STP X22, X21, [X31 + 0x30]
	0x035A3BD4 STP X20, X19, [X31 + 0x40]
	0x035A3BD8 ADRP X20, 0xE3D000
	0x035A3BDC LDRB W8, [X20 + 0xC]
	0x035A3BE0 MOV X19, X0
	0x035A3BE4 TBNZ X8, 0x0, 0x35A3C8C
	0x035A3BE8 ADRP X0, 0xB94000
	0x035A3BEC LDR X0, [X0 + 0x4E0]
	0x035A3BF0 BL 0x1C16CF4
	0x035A3BF4 ADRP X0, 0xB94000
	0x035A3BF8 LDR X0, [X0 + 0x4E8]
	0x035A3BFC BL 0x1C16CF4
	0x035A3C00 ADRP X0, 0xB94000
	0x035A3C04 LDR X0, [X0 + 0x168]
	0x035A3C08 BL 0x1C16CF4
	0x035A3C0C ADRP X0, 0xB93000
	0x035A3C10 LDR X0, [X0 + 0xFD0]
	0x035A3C14 BL 0x1C16CF4
	0x035A3C18 ADRP X0, 0xB94000
	0x035A3C1C LDR X0, [X0 + 0x340]
	0x035A3C20 BL 0x1C16CF4
	0x035A3C24 ADRP X0, 0xB51000
	0x035A3C28 LDR X0, [X0 + 0x9F0]
	0x035A3C2C BL 0x1C16CF4
	0x035A3C30 ADRP X0, 0xB94000
	0x035A3C34 LDR X0, [X0 + 0x290]
	0x035A3C38 BL 0x1C16CF4
	0x035A3C3C ADRP X0, 0xB94000
	0x035A3C40 LDR X0, [X0 + 0x3A8]
	0x035A3C44 BL 0x1C16CF4
	0x035A3C48 ADRP X0, 0xB94000
	0x035A3C4C LDR X0, [X0 + 0x4F0]
	0x035A3C50 BL 0x1C16CF4
	0x035A3C54 ADRP X0, 0xB94000
	0x035A3C58 LDR X0, [X0 + 0x3B0]
	0x035A3C5C BL 0x1C16CF4
	0x035A3C60 ADRP X0, 0xB94000
	0x035A3C64 LDR X0, [X0 + 0x4F8]
	0x035A3C68 BL 0x1C16CF4
	0x035A3C6C ADRP X0, 0xB94000
	0x035A3C70 LDR X0, [X0 + 0x500]
	0x035A3C74 BL 0x1C16CF4
	0x035A3C78 ADRP X0, 0xB94000
	0x035A3C7C LDR X0, [X0 + 0x3B8]
	0x035A3C80 BL 0x1C16CF4
	0x035A3C84 MOVZ W8, 0x1
	0x035A3C88 STRB W8, [X20 + 0xC]
	0x035A3C8C STR X31, [X31 + 0x18]
	0x035A3C90 STP X31, X31, [X31]
	0x035A3C94 ADRP X23, 0xB93000
	0x035A3C98 ADRP X24, 0xB94000
	0x035A3C9C LDR W8, [X19]
	0x035A3CA0 LDR X20, [X19 + 0x20]
	0x035A3CA4 LDR X23, [X23 + 0xFD0]
	0x035A3CA8 LDR X24, [X24 + 0x290]
	0x035A3CAC CBZ W8, 0x35A3CD0
	0x035A3CB0 CMP W8, 0x1
	0x035A3CB4 B.NE 0x35A3CFC
	0x035A3CB8 LDR X8, [X19 + 0x50]
	0x035A3CBC MOVN W9, 0x0
	0x035A3CC0 STR X8, [X31]
	0x035A3CC4 STR X31, [X19 + 0x50]
	0x035A3CC8 STR W9, [X19]
	0x035A3CCC B 0x35A3F6C
	0x035A3CD0 LDR X8, [X19 + 0x48]
	0x035A3CD4 MOVN W9, 0x0
	0x035A3CD8 STR X8, [X31 + 0x8]
	0x035A3CDC STR X31, [X19 + 0x48]
	0x035A3CE0 STR W9, [X19]
	0x035A3CE4 ADRP X8, 0xB94000
	0x035A3CE8 LDR X8, [X8 + 0x3A8]
	0x035A3CEC ADD X0, X31, 0x8
	0x035A3CF0 LDR X1, [X8]
	0x035A3CF4 BL 0x2677474
	0x035A3CF8 B 0x35A3EBC
	0x035A3CFC CBZ X20, 0x35A401C
	0x035A3D00 LDRB W8, [X20 + 0x10]
	0x035A3D04 CBZ W8, 0x35A3EC0
	0x035A3D08 LDR X21, [X19 + 0x28]
	0x035A3D0C CBZ X21, 0x35A4020
	0x035A3D10 LDR X8, [X21]
	0x035A3D14 LDR X1, [X24]
	0x035A3D18 LDRH W9, [X8 + 0x12E]
	0x035A3D1C CBZ X9, 0x35A3D40
	0x035A3D20 LDR X10, [X8 + 0xB0]
	0x035A3D24 ADD X10, X10, 0x8
	0x035A3D28 LDUR X11, [X10 - 0x8]
	0x035A3D2C CMP X11, X1
	0x035A3D30 B.EQ 0x35A3D50
	0x035A3D34 SUBS X9, X9, 0x1
	0x035A3D38 ADD X10, X10, 0x10
	0x035A3D3C B.NE 0x35A3D28
	0x035A3D40 MOVZ W2, 0x5
	0x035A3D44 MOV X0, X21
	0x035A3D48 BL 0x1C5C788
	0x035A3D4C B 0x35A3D60
	0x035A3D50 LDR W9, [X10]
	0x035A3D54 ADD W9, W9, 0x5
	0x035A3D58 ADD X8, X8, W9, 0x4, SXTW
	0x035A3D5C ADD X0, X8, 0x138
	0x035A3D60 LDP X8, X1, [X0]
	0x035A3D64 MOV X0, X21
	0x035A3D68 BLR X8
	0x035A3D6C MOV X1, X31
	0x035A3D70 BL 0x32277A8
	0x035A3D74 TBNZ X0, 0x0, 0x35A3EBC
	0x035A3D78 ADRP X8, 0xB51000
	0x035A3D7C LDR X8, [X8 + 0x9F0]
	0x035A3D80 LDR X21, [X19 + 0x28]
	0x035A3D84 LDR X0, [X8]
	0x035A3D88 LDR W8, [X0 + 0xE0]
	0x035A3D8C CBNZ W8, 0x35A3D94
	0x035A3D90 BL 0x1C16DFC
	0x035A3D94 MOV X0, X31
	0x035A3D98 BL 0x33616A4
	0x035A3D9C ADRP X22, 0xB94000
	0x035A3DA0 LDR X22, [X22 + 0x340]
	0x035A3DA4 MOV X8, X0

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X20, 0xE3E000
	011 Move W8, [X20+6]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {58}
	017 Move X0, 0xB95000
	018 Move X0, [X0+1112]
	019 Call 0x1C17CF4
	020 Move X0, 0xB95000
	021 Move X0, [X0+1120]
	022 Call 0x1C17CF4
	023 Move X0, 0xB95000
	024 Move X0, [X0+696]
	025 Call 0x1C17CF4
	026 Move X0, 0xB95000
	027 Move X0, [X0+1128]
	028 Call 0x1C17CF4
	029 Move X0, 0xB95000
	030 Move X0, [X0+1136]
	031 Call 0x1C17CF4
	032 Move X0, 0xB51000
	033 Move X0, [X0+3584]
	034 Call 0x1C17CF4
	035 Move X0, 0xB95000
	036 Move X0, [X0+1144]
	037 Call 0x1C17CF4
	038 Move X0, 0xB95000
	039 Move X0, [X0+1152]
	040 Call 0x1C17CF4
	041 Move X0, 0xB51000
	042 Move X0, [X0+3608]
	043 Call 0x1C17CF4
	044 Move X0, 0xB51000
	045 Move X0, [X0+2760]
	046 Call 0x1C17CF4
	047 Move X0, 0xB95000
	048 Move X0, [X0+1160]
	049 Call 0x1C17CF4
	050 Move X0, 0xB95000
	051 Move X0, [X0+1168]
	052 Call 0x1C17CF4
	053 Move X0, 0xB95000
	054 Move X0, [X0+1176]
	055 Call 0x1C17CF4
	056 Move W8, 1
	057 Move [X20+6], W8
	058 Move [X31+8], X31
	059 Move W23, [X19]
	060 Compare W23, 0
	061 JumpIfEqual {117}
	062 Move X8, 0xB51000
	063 Move X8, [X8+2760]
	064 Move X20, [X19+32]
	065 Move X21, [X19+40]
	066 Move X0, [X8]
	067 Move W1, 1
	068 Call 0x1C17D6C
	069 Move X2, X0
	070 Compare X0, 0
	071 JumpIfEqual {376}
	072 Move W8, [X2+24]
	073 Compare W8, 0
	074 JumpIfEqual {377}
	075 Move X8, [X19+48]
	076 Move [X2+32], X8
	077 Compare X20, 0
	078 JumpIfEqual {378}
	079 Move X3, [X19+56]
	080 Move X4, [X19+64]
	081 Move X0, X20
	082 Move X1, X21
	083 Call Client.GetFlagsAsync, X0, X1, X2, X3
	084 Compare X0, 0
	085 JumpIfEqual {379}
	086 Move X8, 0xB95000
	087 Move X8, [X8+1176]
	088 Move X1, [X8]
	089 Call Task`1<Object>.GetAwaiter, X0
	090 Move X8, 0xB95000
	091 Move X8, [X8+1168]
	092 Move [X31+8], X0
	093 Move X1, [X8]
	094 Add X0, X31, 8
	095 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	096 Move TEMP, X0
	097 And TEMP, TEMP, 1
	098 Compare TEMP, 1
	099 JumpIfEqual {124}
	100 Move [X19], W31
	101 Move X8, [X31+8]
	102 Move [X19+72], X8
	103 Move X8, 0xB95000
	104 Move X8, [X8+696]
	105 Move X0, [X8]
	106 Move W8, [X0+224]
	107 Compare W8, 0
	108 JumpIfNotEqual {110}
	109 Call 0x1C17DFC
	110 Move X8, 0xB95000
	111 Move X8, [X8+1112]
	112 Add X0, X19, 8
	113 Move X3, [X8]
	114 Add X1, X31, 8
	115 Move X2, X19
	116 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	117 Move X8, [X19+72]
	118 Move TEMP, 0
	119 Not TEMP
	120 Move W23, TEMP
	121 Move [X31+8], X8
	122 Move [X19+72], X31
	123 Move [X19], W23
	124 Move X8, 0xB95000
	125 Move X8, [X8+1160]
	126 Add X0, X31, 8
	127 Move X1, [X8]
	128 Call TaskAwaiter`1<Object>.GetResult, X0
	129 Move X20, X0
	130 Compare X0, 0
	131 JumpIfEqual {371}
	132 Move X10, 0xB95000
	133 Move X8, [X20]
	134 Move X10, [X10+1128]
	135 NotImplemented "Instruction LDRH not yet implemented."
	136 Move X1, [X10]
	137 Compare X9, 0
	138 JumpIfEqual {145}
	139 Move X10, [X8+176]
	140 Add X10, X10, 8
	141 NotImplemented "Instruction LDUR not yet implemented."
	142 NotImplemented "Instruction CMP not yet implemented."
	143 Subtract X9, X9, 1
	144 Add X10, X10, 16
	145 Move X0, X20
	146 Move W2, W31
	147 Call 0x1C5D788
	148 NotImplemented "Instruction LDRSW not yet implemented."
	149 Add X8, X8, X9
	150 Add X0, X8, 312
	151 Move X8, [X0]
	152 Move X1, [X0+8]
	153 Move X0, X20
	154 NotImplemented "Instruction BLR not yet implemented."
	155 Move X20, X0
	156 Compare X0, 0
	157 JumpIfEqual {372}
	158 Move X10, 0xB95000
	159 Move X8, [X20]
	160 Move X10, [X10+1144]
	161 NotImplemented "Instruction LDRH not yet implemented."
	162 Move X1, [X10]
	163 Compare X9, 0
	164 JumpIfEqual {171}
	165 Move X10, [X8+176]
	166 Add X10, X10, 8
	167 NotImplemented "Instruction LDUR not yet implemented."
	168 NotImplemented "Instruction CMP not yet implemented."
	169 Subtract X9, X9, 1
	170 Add X10, X10, 16
	171 Move X0, X20
	172 Move W2, W31
	173 Call 0x1C5D788
	174 NotImplemented "Instruction LDRSW not yet implemented."
	175 Add X8, X8, X9
	176 Add X0, X8, 312
	177 Move X8, [X0]
	178 Move X1, [X0+8]
	179 Move X0, X20
	180 NotImplemented "Instruction BLR not yet implemented."
	181 Move X20, X0
	182 Compare X0, 0
	183 JumpIfEqual {373}
	184 Move X22, 0xB51000
	185 Move X24, 0xB95000
	186 Move X25, 0xB95000
	187 Move X22, [X22+3608]
	188 Move X24, [X24+1152]
	189 Move X25, [X25+1136]
	190 Move X8, [X20]
	191 Move X1, [X22]
	192 NotImplemented "Instruction LDRH not yet implemented."
	193 Compare X9, 0
	194 JumpIfEqual {201}
	195 Move X10, [X8+176]
	196 Add X10, X10, 8
	197 NotImplemented "Instruction LDUR not yet implemented."
	198 NotImplemented "Instruction CMP not yet implemented."
	199 Subtract X9, X9, 1
	200 Add X10, X10, 16
	201 Move X0, X20
	202 Move W2, W31
	203 Call 0x1C5D788
	204 NotImplemented "Instruction LDRSW not yet implemented."
	205 Add X8, X8, X9
	206 Add X0, X8, 312
	207 Move X8, [X0]
	208 Move X1, [X0+8]
	209 Move X0, X20
	210 NotImplemented "Instruction BLR not yet implemented."
	211 Move TEMP, X0
	212 And TEMP, TEMP, 1
	213 Compare TEMP, 1
	214 JumpIfNotEqual {276}
	215 Move X8, [X20]
	216 Move X1, [X24]
	217 NotImplemented "Instruction LDRH not yet implemented."
	218 Compare X9, 0
	219 JumpIfEqual {226}
	220 Move X10, [X8+176]
	221 Add X10, X10, 8
	222 NotImplemented "Instruction LDUR not yet implemented."
	223 NotImplemented "Instruction CMP not yet implemented."
	224 Subtract X9, X9, 1
	225 Add X10, X10, 16
	226 Move X0, X20
	227 Move W2, W31
	228 Call 0x1C5D788
	229 NotImplemented "Instruction LDRSW not yet implemented."
	230 Add X8, X8, X9
	231 Add X0, X8, 312
	232 Move X8, [X0]
	233 Move X1, [X0+8]
	234 Move X0, X20
	235 NotImplemented "Instruction BLR not yet implemented."
	236 Move X21, X0
	237 Compare X0, 0
	238 JumpIfEqual {369}
	239 Move X8, [X21]
	240 Move X1, [X25]
	241 NotImplemented "Instruction LDRH not yet implemented."
	242 Compare X9, 0
	243 JumpIfEqual {250}
	244 Move X10, [X8+176]
	245 Add X10, X10, 8
	246 NotImplemented "Instruction LDUR not yet implemented."
	247 NotImplemented "Instruction CMP not yet implemented."
	248 Subtract X9, X9, 1
	249 Add X10, X10, 16
	250 Move W2, 1
	251 Move X0, X21
	252 Call 0x1C5D788
	253 Move W9, [X10]
	254 Add W9, W9, 1
	255 Add X8, X8, W9
	256 Add X0, X8, 312
	257 Move X8, [X0]
	258 Move X1, [X0+8]
	259 Move X0, X21
	260 NotImplemented "Instruction BLR not yet implemented."
	261 Compare X0, 0
	262 JumpIfEqual {370}
	263 Move X1, [X19+48]
	264 Move X2, X31
	265 Call String.Equals, X0, X1
	266 Move TEMP, X0
	267 And TEMP, TEMP, 1
	268 Compare TEMP, 1
	269 JumpIfNotEqual {190}
	270 Move X22, X31
	271 Move W24, 7
	272 Move TEMP, X23
	273 And TEMP, TEMP, -2147483648
	274 Compare TEMP, -2147483648
	275 JumpIfEqual {283}
	276 Move X22, X31
	277 Move X21, X31
	278 Move W24, 8
	279 Move TEMP, X23
	280 And TEMP, TEMP, -2147483648
	281 Compare TEMP, -2147483648
	282 JumpIfNotEqual {308}
	283 Compare X20, 0
	284 JumpIfEqual {308}
	285 Move X10, 0xB51000
	286 Move X8, [X20]
	287 Move X10, [X10+3584]
	288 NotImplemented "Instruction LDRH not yet implemented."
	289 Move X1, [X10]
	290 Compare X9, 0
	291 JumpIfEqual {298}
	292 Move X10, [X8+176]
	293 Add X10, X10, 8
	294 NotImplemented "Instruction LDUR not yet implemented."
	295 NotImplemented "Instruction CMP not yet implemented."
	296 Subtract X9, X9, 1
	297 Add X10, X10, 16
	298 Move X0, X20
	299 Move W2, W31
	300 Call 0x1C5D788
	301 NotImplemented "Instruction LDRSW not yet implemented."
	302 Add X8, X8, X9
	303 Add X0, X8, 312
	304 Move X8, [X0]
	305 Move X1, [X0+8]
	306 Move X0, X20
	307 NotImplemented "Instruction BLR not yet implemented."
	308 Compare X22, 0
	309 JumpIfNotEqual {374}
	310 NotImplemented "Instruction CMP not yet implemented."
	311 NotImplemented "Instruction CMP not yet implemented."
	312 Compare W24, 0
	313 JumpIfNotEqual {359}
	314 Move X20, [X19+48]
	315 Move X0, 0xB95000
	316 Move X0, [X0+1184]
	317 Call 0x1C17D08
	318 Move X21, X0
	319 Move X0, 0xB82000
	320 Move X0, [X0+792]
	321 Call 0x1C17D08
	322 Move X2, X0
	323 Move X0, X21
	324 Move X1, X20
	325 Move X3, X31
	326 Call String.Concat, X0, X1, X2
	327 Move X20, X0
	328 Move X0, 0xB59000
	329 Move X0, [X0+1400]
	330 Call 0x1C17D08
	331 Call 0x1C17F10
	332 Move X21, X0
	333 Move X1, X20
	334 Move X2, X31
	335 Call ArgumentException..ctor, X0, X1
	336 Move X0, 0xB95000
	337 Move X0, [X0+1192]
	338 Call 0x1C17D08
	339 Move X1, X0
	340 Move X0, X21
	341 Call 0x1C17DEC
	342 Move TEMP, 1
	343 Not TEMP
	344 Move W8, TEMP
	345 Move [X19+8], W8
	346 Move X8, 0xB95000
	347 Move X8, [X8+696]
	348 Move X0, [X8]
	349 Move W8, [X0+224]
	350 Compare W8, 0
	351 JumpIfNotEqual {353}
	352 Call 0x1C17DFC
	353 Move X8, 0xB95000
	354 Move X8, [X8+1120]
	355 Move X0, X19
	356 Move X1, X21
	357 Move X2, [X8]
	358 Call AsyncTaskMethodBuilder`1<Object>.SetResult, X0, X1
	359 Move X20, [X31+64]
	360 Move X19, [X31+72]
	361 Move X22, [X31+48]
	362 Move X21, [X31+56]
	363 Move X24, [X31+32]
	364 Move X23, [X31+40]
	365 Move X30, [X31+16]
	366 Move X25, [X31+24]
	367 Add X31, X31, 80
	368 Return 
	369 Call 0x1C17F20
	370 Call 0x1C17F20
	371 Call 0x1C17F20
	372 Call 0x1C17F20
	373 Call 0x1C17F20
	374 Move X0, X22
	375 Call 0x1C17F18
	376 Call 0x1C17F20
	377 Call 0x1C17F28
	378 Call 0x1C17F20
	379 Call 0x1C17F20
	380 Move X21, X0
	381 Move [X31], X1
	382 Move X21, X0
	383 NotImplemented "Instruction CMP not yet implemented."
	384 Move [X31], X1
	385 Move X0, X21
	386 Call 0x3EB2AD0
	387 Move X22, [X0]
	388 Call 0x3EB2AE0
	389 Move W24, W31
	390 Move X21, X31
	391 Move TEMP, X23
	392 And TEMP, TEMP, -2147483648
	393 Compare TEMP, -2147483648
	394 JumpIfEqual {283}
	395 Move X22, X31
	396 Move TEMP, X23
	397 And TEMP, TEMP, -2147483648
	398 Compare TEMP, -2147483648
	399 JumpIfNotEqual {425}
	400 Compare X20, 0
	401 JumpIfEqual {425}
	402 Move X10, 0xB51000
	403 Move X8, [X20]
	404 Move X10, [X10+3584]
	405 NotImplemented "Instruction LDRH not yet implemented."
	406 Move X1, [X10]
	407 Compare X9, 0
	408 JumpIfEqual {415}
	409 Move X10, [X8+176]
	410 Add X10, X10, 8
	411 NotImplemented "Instruction LDUR not yet implemented."
	412 NotImplemented "Instruction CMP not yet implemented."
	413 Subtract X9, X9, 1
	414 Add X10, X10, 16
	415 Move X0, X20
	416 Move W2, W31
	417 Call 0x1C5D788
	418 NotImplemented "Instruction LDRSW not yet implemented."
	419 Add X8, X8, X9
	420 Add X0, X8, 312
	421 Move X8, [X0]
	422 Move X1, [X0+8]
	423 Move X0, X20
	424 NotImplemented "Instruction BLR not yet implemented."
	425 Compare X22, 0
	426 JumpIfNotEqual {470}
	427 Move X8, [X31]
	428 NotImplemented "Instruction CMP not yet implemented."
	429 Move X0, X21
	430 Call 0x3EB2AD0
	431 Move X20, X0
	432 Move X0, 0xB51000
	433 Move X0, [X0+2000]
	434 Call 0x1C17D08
	435 Move X8, [X20]
	436 Move X1, [X8]
	437 Call 0x1C18270
	438 Move TEMP, X0
	439 And TEMP, TEMP, 1
	440 Compare TEMP, 1
	441 JumpIfNotEqual {462}
	442 Move X20, [X20]
	443 Call 0x3EB2AE0
	444 Move TEMP, 1
	445 Not TEMP
	446 Move W8, TEMP
	447 Move [X19+8], W8
	448 Move X0, 0xB95000
	449 Move X0, [X0+696]
	450 Call 0x1C17D08
	451 Move W8, [X0+224]
	452 Compare W8, 0
	453 JumpIfNotEqual {455}
	454 Call 0x1C17DFC
	455 Move X0, 0xB95000
	456 Move X0, [X0+1200]
	457 Call 0x1C17D08
	458 Move X2, X0
	459 Move X0, X19
	460 Move X1, X20
	461 Call AsyncTaskMethodBuilder`1<Object>.SetException, X0, X1
	462 Move W0, 8
	463 Call 0x3EB2AF0
	464 Move X8, [X20]
	465 Move [X0], X8
	466 Move X1, 0x912000
	467 Add X1, X1, 3672
	468 Move X2, X31
	469 Call 0x3EB2B00
	470 Move X0, X22
	471 Call 0x1C17F18
	472 Move X21, X0
	473 Move [X31], X1
	474 Move TEMP, X23
	475 And TEMP, TEMP, -2147483648
	476 Compare TEMP, -2147483648
	477 JumpIfEqual {400}
	478 Move X21, X0
	479 Call 0x3EB2AE0
	480 Move X0, X21
	481 Call 0x1D2D690
	482 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x035A3DA8 STR X8, [X31 + 0x18]
	0x035A3DAC LDR X0, [X22]
	0x035A3DB0 LDR W8, [X0 + 0xE0]
	0x035A3DB4 CBNZ W8, 0x35A3DC0
	0x035A3DB8 BL 0x1C16DFC
	0x035A3DBC LDR X0, [X22]
	0x035A3DC0 LDR X8, [X0 + 0xB8]
	0x035A3DC4 LDR X1, [X8]
	0x035A3DC8 ADD X0, X31, 0x18
	0x035A3DCC MOV X2, X31
	0x035A3DD0 BL 0x335FC68
	0x035A3DD4 CBZ X21, 0x35A4024
	0x035A3DD8 LDR X8, [X21]
	0x035A3DDC LDR X1, [X24]
	0x035A3DE0 MOV X22, X0
	0x035A3DE4 LDRH W9, [X8 + 0x12E]
	0x035A3DE8 CBZ X9, 0x35A3E0C
	0x035A3DEC LDR X10, [X8 + 0xB0]
	0x035A3DF0 ADD X10, X10, 0x8
	0x035A3DF4 LDUR X11, [X10 - 0x8]
	0x035A3DF8 CMP X11, X1
	0x035A3DFC B.EQ 0x35A3E1C
	0x035A3E00 SUBS X9, X9, 0x1
	0x035A3E04 ADD X10, X10, 0x10
	0x035A3E08 B.NE 0x35A3DF4
	0x035A3E0C MOVZ W2, 0x7
	0x035A3E10 MOV X0, X21
	0x035A3E14 BL 0x1C5C788
	0x035A3E18 B 0x35A3E2C
	0x035A3E1C LDR W9, [X10]
	0x035A3E20 ADD W9, W9, 0x7

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xE3E000
	007 Move X21, 0xB95000
	008 Move W8, [X22+7]
	009 Move X21, [X21+696]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xB95000
	017 Move X0, [X0+1208]
	018 Call 0x1C17CF4
	019 Move X0, 0xB95000
	020 Move X0, [X0+696]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+7], W8
	024 Move X0, [X21]
	025 Move X21, 0xB95000
	026 Move W8, [X0+224]
	027 Move X21, [X21+1208]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X2, [X21]
	032 Add X0, X20, 8
	033 Move X1, X19
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Call AsyncTaskMethodBuilder`1<Object>.SetStateMachine, X0, X1
	040 Return 

