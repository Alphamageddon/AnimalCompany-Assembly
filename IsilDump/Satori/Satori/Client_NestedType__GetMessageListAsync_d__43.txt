Type: Satori.Client/<GetMessageListAsync>d__43

Method: System.Void MoveNext()

Disassembly:
	0x035A51B4 MOVZ W2, 0x7
	0x035A51B8 MOV X0, X21
	0x035A51BC BL 0x1C5C788
	0x035A51C0 B 0x35A51D4
	0x035A51C4 LDR W9, [X10]
	0x035A51C8 ADD W9, W9, 0x7
	0x035A51CC ADD X8, X8, W9, 0x4, SXTW
	0x035A51D0 ADD X0, X8, 0x138
	0x035A51D4 LDP X8, X2, [X0]
	0x035A51D8 MOV X0, X21
	0x035A51DC MOV X1, X22
	0x035A51E0 BLR X8
	0x035A51E4 TBZ X0, 0x0, 0x35A5264
	0x035A51E8 LDP X1, X2, [X19 + 0x28]
	0x035A51EC LDR X3, [X19 + 0x38]
	0x035A51F0 MOV X0, X20
	0x035A51F4 BL 0x359F740
	0x035A51F8 CBZ X0, 0x35A53CC
	0x035A51FC ADRP X8, 0xB92000
	0x035A5200 LDR X8, [X8 + 0x3B8]
	0x035A5204 LDR X1, [X8]
	0x035A5208 BL 0x269F5D0
	0x035A520C ADRP X8, 0xB92000
	0x035A5210 LDR X8, [X8 + 0x3B0]
	0x035A5214 STR X0, [X31 + 0x8]
	0x035A5218 LDR X1, [X8]
	0x035A521C ADD X0, X31, 0x8
	0x035A5220 BL 0x2677430
	0x035A5224 TBNZ X0, 0x0, 0x35A508C
	0x035A5228 STR W31, [X19]
	0x035A522C LDR X8, [X31 + 0x8]
	0x035A5230 STR X8, [X19 + 0x40]
	0x035A5234 LDR X0, [X23]
	0x035A5238 LDR W8, [X0 + 0xE0]
	0x035A523C CBNZ W8, 0x35A5244
	0x035A5240 BL 0x1C16DFC
	0x035A5244 ADRP X8, 0xB92000
	0x035A5248 LDR X8, [X8 + 0x550]
	0x035A524C ADD X0, X19, 0x8
	0x035A5250 LDR X3, [X8]
	0x035A5254 ADD X1, X31, 0x8
	0x035A5258 MOV X2, X19
	0x035A525C BL 0x1FBFF1C
	0x035A5260 B 0x35A5398
	0x035A5264 CBZ X20, 0x35A53BC
	0x035A5268 LDR X21, [X19 + 0x28]
	0x035A526C CBZ X21, 0x35A53B0
	0x035A5270 LDR X8, [X21]
	0x035A5274 LDR X20, [X20 + 0x40]
	0x035A5278 LDR X1, [X24]
	0x035A527C LDRH W9, [X8 + 0x12E]
	0x035A5280 CBZ X9, 0x35A52A4
	0x035A5284 LDR X10, [X8 + 0xB0]
	0x035A5288 ADD X10, X10, 0x8
	0x035A528C LDUR X11, [X10 - 0x8]
	0x035A5290 CMP X11, X1
	0x035A5294 B.EQ 0x35A52B4
	0x035A5298 SUBS X9, X9, 0x1
	0x035A529C ADD X10, X10, 0x10
	0x035A52A0 B.NE 0x35A528C
	0x035A52A4 MOV X0, X21
	0x035A52A8 MOV W2, W31
	0x035A52AC BL 0x1C5C788
	0x035A52B0 B 0x35A52C0
	0x035A52B4 LDRSW X9, [X10]
	0x035A52B8 ADD X8, X8, X9, 0x4, LSL
	0x035A52BC ADD X0, X8, 0x138
	0x035A52C0 LDP X8, X1, [X0]
	0x035A52C4 MOV X0, X21
	0x035A52C8 BLR X8
	0x035A52CC MOV X1, X0
	0x035A52D0 CBZ X20, 0x35A53B4
	0x035A52D4 LDP X2, X3, [X19 + 0x30]
	0x035A52D8 MOV X0, X20
	0x035A52DC BL 0x3597530
	0x035A52E0 CBZ X0, 0x35A53B8
	0x035A52E4 ADRP X8, 0xB92000
	0x035A52E8 LDR X8, [X8 + 0x568]
	0x035A52EC LDR X1, [X8]
	0x035A52F0 BL 0x269F5D0
	0x035A52F4 ADRP X8, 0xB92000
	0x035A52F8 LDR X8, [X8 + 0x560]
	0x035A52FC STR X0, [X31]
	0x035A5300 LDR X1, [X8]
	0x035A5304 ADD X0, X31, 0x0
	0x035A5308 BL 0x2677430
	0x035A530C TBZ X0, 0x0, 0x35A535C
	0x035A5310 ADRP X8, 0xB92000
	0x035A5314 LDR X8, [X8 + 0x558]
	0x035A5318 ADD X0, X31, 0x0
	0x035A531C LDR X1, [X8]
	0x035A5320 BL 0x2677474
	0x035A5324 MOVN W8, 0x1
	0x035A5328 STR W8, [X19], #0x8
	0x035A532C MOV X20, X0
	0x035A5330 LDR X0, [X23]
	0x035A5334 ADRP X21, 0xB92000
	0x035A5338 LDR W8, [X0 + 0xE0]
	0x035A533C LDR X21, [X21 + 0x1E8]
	0x035A5340 CBNZ W8, 0x35A5348
	0x035A5344 BL 0x1C16DFC
	0x035A5348 LDR X2, [X21]
	0x035A534C MOV X0, X19
	0x035A5350 MOV X1, X20
	0x035A5354 BL 0x26322B0
	0x035A5358 B 0x35A5398
	0x035A535C MOVZ W8, 0x1
	0x035A5360 STR W8, [X19]
	0x035A5364 LDR X8, [X31]
	0x035A5368 STR X8, [X19 + 0x48]
	0x035A536C LDR X0, [X23]
	0x035A5370 LDR W8, [X0 + 0xE0]
	0x035A5374 CBNZ W8, 0x35A537C
	0x035A5378 BL 0x1C16DFC
	0x035A537C ADRP X8, 0xB92000
	0x035A5380 LDR X8, [X8 + 0x548]
	0x035A5384 ADD X0, X19, 0x8
	0x035A5388 LDR X3, [X8]
	0x035A538C ADD X1, X31, 0x0
	0x035A5390 MOV X2, X19
	0x035A5394 BL 0x1FBFF1C
	0x035A5398 LDP X20, X19, [X31 + 0x40]
	0x035A539C LDP X22, X21, [X31 + 0x30]
	0x035A53A0 LDP X24, X23, [X31 + 0x20]
	0x035A53A4 LDR X30, [X31 + 0x10]
	0x035A53A8 ADD X31, X31, 0x50
	0x035A53AC RET
	0x035A53B0 BL 0x1C16F20
	0x035A53B4 BL 0x1C16F20
	0x035A53B8 BL 0x1C16F20
	0x035A53BC BL 0x1C16F20
	0x035A53C0 BL 0x1C16F20
	0x035A53C4 BL 0x1C16F20
	0x035A53C8 BL 0x1C16F20
	0x035A53CC BL 0x1C16F20
	0x035A53D0 B 0x35A542C
	0x035A53D4 B 0x35A542C
	0x035A53D8 B 0x35A542C
	0x035A53DC B 0x35A542C
	0x035A53E0 B 0x35A542C
	0x035A53E4 B 0x35A542C
	0x035A53E8 B 0x35A542C
	0x035A53EC B 0x35A542C
	0x035A53F0 B 0x35A542C
	0x035A53F4 B 0x35A542C
	0x035A53F8 B 0x35A542C
	0x035A53FC B 0x35A542C
	0x035A5400 B 0x35A542C
	0x035A5404 B 0x35A542C
	0x035A5408 B 0x35A542C
	0x035A540C B 0x35A542C
	0x035A5410 B 0x35A542C
	0x035A5414 B 0x35A542C
	0x035A5418 B 0x35A542C
	0x035A541C B 0x35A542C
	0x035A5420 B 0x35A542C
	0x035A5424 B 0x35A542C
	0x035A5428 B 0x35A542C
	0x035A542C MOV X20, X0
	0x035A5430 CMP W1, 0x1
	0x035A5434 B.NE 0x35A54D0
	0x035A5438 MOV X0, X20
	0x035A543C BL 0x3EB1AD0
	0x035A5440 MOV X20, X0
	0x035A5444 ADRP X0, 0xB4E000
	0x035A5448 LDR X0, [X0 + 0x7D0]
	0x035A544C BL 0x1C16D08
	0x035A5450 LDR X8, [X20]
	0x035A5454 LDR X1, [X8]
	0x035A5458 BL 0x1C17270
	0x035A545C TBZ X0, 0x0, 0x35A54A8
	0x035A5460 LDR X20, [X20]
	0x035A5464 BL 0x3EB1AE0
	0x035A5468 MOVN W8, 0x1
	0x035A546C STR W8, [X19], #0x8
	0x035A5470 ADRP X0, 0xB92000
	0x035A5474 LDR X0, [X0 + 0x20]
	0x035A5478 BL 0x1C16D08
	0x035A547C LDR W8, [X0 + 0xE0]
	0x035A5480 CBNZ W8, 0x35A5488
	0x035A5484 BL 0x1C16DFC
	0x035A5488 ADRP X0, 0xB92000
	0x035A548C LDR X0, [X0 + 0x200]
	0x035A5490 BL 0x1C16D08
	0x035A5494 MOV X2, X0
	0x035A5498 MOV X0, X19
	0x035A549C MOV X1, X20
	0x035A54A0 BL 0x26324C8
	0x035A54A4 B 0x35A5398
	0x035A54A8 MOVZ W0, 0x8
	0x035A54AC BL 0x3EB1AF0
	0x035A54B0 LDR X8, [X20]
	0x035A54B4 STR X8, [X0]
	0x035A54B8 ADRP X1, 0x90F000
	0x035A54BC ADD X1, X1, 0xE58
	0x035A54C0 MOV X2, X31
	0x035A54C4 BL 0x3EB1B00
	0x035A54C8 MOV X20, X0
	0x035A54CC BL 0x3EB1AE0
	0x035A54D0 MOV X0, X20
	0x035A54D4 BL 0x1D2C690
	0x035A54D8 BL 0x1990590
	0x035A54DC STR X30, [X31 - 0x30]!
	0x035A54E0 STP X22, X21, [X31 + 0x10]
	0x035A54E4 STP X20, X19, [X31 + 0x20]
	0x035A54E8 ADRP X22, 0xE3B000
	0x035A54EC ADRP X21, 0xB92000
	0x035A54F0 LDRB W8, [X22 + 0x13]
	0x035A54F4 LDR X21, [X21 + 0x20]
	0x035A54F8 MOV X19, X1
	0x035A54FC MOV X20, X0
	0x035A5500 TBNZ X8, 0x0, 0x35A5524
	0x035A5504 ADRP X0, 0xB92000
	0x035A5508 LDR X0, [X0 + 0x208]
	0x035A550C BL 0x1C16CF4
	0x035A5510 ADRP X0, 0xB92000
	0x035A5514 LDR X0, [X0 + 0x20]
	0x035A5518 BL 0x1C16CF4
	0x035A551C MOVZ W8, 0x1
	0x035A5520 STRB W8, [X22 + 0x13]
	0x035A5524 LDR X0, [X21]
	0x035A5528 ADRP X21, 0xB92000
	0x035A552C LDR W8, [X0 + 0xE0]
	0x035A5530 LDR X21, [X21 + 0x208]
	0x035A5534 CBNZ W8, 0x35A553C
	0x035A5538 BL 0x1C16DFC
	0x035A553C LDR X2, [X21]
	0x035A5540 ADD X0, X20, 0x8
	0x035A5544 MOV X1, X19
	0x035A5548 LDP X20, X19, [X31 + 0x20]
	0x035A554C LDP X22, X21, [X31 + 0x10]
	0x035A5550 LDR X30, [X31], #0x30
	0x035A5554 B 0x2632228
	0x035A5558 SUB X31, X31, 0x50
	0x035A555C STP X30, X25, [X31 + 0x10]
	0x035A5560 STP X24, X23, [X31 + 0x20]
	0x035A5564 STP X22, X21, [X31 + 0x30]
	0x035A5568 STP X20, X19, [X31 + 0x40]
	0x035A556C ADRP X20, 0xE3B000
	0x035A5570 LDRB W8, [X20 + 0x14]
	0x035A5574 MOV X19, X0
	0x035A5578 TBNZ X8, 0x0, 0x35A5608
	0x035A557C ADRP X0, 0xB92000
	0x035A5580 LDR X0, [X0 + 0x570]
	0x035A5584 BL 0x1C16CF4
	0x035A5588 ADRP X0, 0xB92000
	0x035A558C LDR X0, [X0 + 0x578]
	0x035A5590 BL 0x1C16CF4
	0x035A5594 ADRP X0, 0xB92000
	0x035A5598 LDR X0, [X0 + 0x358]
	0x035A559C BL 0x1C16CF4
	0x035A55A0 ADRP X0, 0xB92000
	0x035A55A4 LDR X0, [X0 + 0x268]
	0x035A55A8 BL 0x1C16CF4
	0x035A55AC ADRP X0, 0xB92000
	0x035A55B0 LDR X0, [X0 + 0x360]
	0x035A55B4 BL 0x1C16CF4
	0x035A55B8 ADRP X0, 0xB92000
	0x035A55BC LDR X0, [X0 + 0x290]
	0x035A55C0 BL 0x1C16CF4
	0x035A55C4 ADRP X0, 0xB92000
	0x035A55C8 LDR X0, [X0 + 0x368]
	0x035A55CC BL 0x1C16CF4
	0x035A55D0 ADRP X0, 0xB50000
	0x035A55D4 LDR X0, [X0 + 0x278]
	0x035A55D8 BL 0x1C16CF4
	0x035A55DC ADRP X0, 0xB92000
	0x035A55E0 LDR X0, [X0 + 0x370]
	0x035A55E4 BL 0x1C16CF4
	0x035A55E8 ADRP X0, 0xB92000
	0x035A55EC LDR X0, [X0 + 0x378]
	0x035A55F0 BL 0x1C16CF4
	0x035A55F4 ADRP X0, 0xB92000
	0x035A55F8 LDR X0, [X0 + 0x380]
	0x035A55FC BL 0x1C16CF4
	0x035A5600 MOVZ W8, 0x1
	0x035A5604 STRB W8, [X20 + 0x14]
	0x035A5608 STR X31, [X31 + 0x8]
	0x035A560C ADRP X25, 0xB92000
	0x035A5610 LDR W8, [X19]
	0x035A5614 LDR X25, [X25 + 0x268]
	0x035A5618 CBZ W8, 0x35A56AC
	0x035A561C LDR X8, [X19 + 0x20]
	0x035A5620 CBZ X8, 0x35A59D4
	0x035A5624 ADRP X9, 0xB50000
	0x035A5628 LDR X9, [X9 + 0x278]
	0x035A562C ADRP X10, 0xB92000
	0x035A5630 LDR X9, [X9]
	0x035A5634 LDR X9, [X9 + 0xB8]
	0x035A5638 LDR X10, [X10 + 0x570]
	0x035A563C LDR X22, [X8 + 0x40]
	0x035A5640 LDR X21, [X8 + 0x30]
	0x035A5644 LDR X20, [X9]
	0x035A5648 LDR X0, [X10]
	0x035A564C BL 0x1C16F10
	0x035A5650 MOV X23, X0
	0x035A5654 MOV X1, X31
	0x035A5658 BL 0x33BDD8C
	0x035A565C LDR X24, [X19 + 0x28]
	0x035A5660 CBZ X24, 0x35A59D8
	0x035A5664 ADRP X10, 0xB92000
	0x035A5668 LDR X8, [X24]
	0x035A566C LDR X10, [X10 + 0x290]
	0x035A5670 LDRH W9, [X8 + 0x12E]
	0x035A5674 LDR X1, [X10]
	0x035A5678 CBZ X9, 0x35A569C
	0x035A567C LDR X10, [X8 + 0xB0]
	0x035A5680 ADD X10, X10, 0x8
	0x035A5684 LDUR X11, [X10 - 0x8]
	0x035A5688 CMP X11, X1
	0x035A568C B.EQ 0x35A56C4
	0x035A5690 SUBS X9, X9, 0x1
	0x035A5694 ADD X10, X10, 0x10
	0x035A5698 B.NE 0x35A5684
	0x035A569C MOVZ W2, 0x5
	0x035A56A0 MOV X0, X24
	0x035A56A4 BL 0x1C5C788
	0x035A56A8 B 0x35A56D4
	0x035A56AC LDR X8, [X19 + 0x40]
	0x035A56B0 MOVN W9, 0x0
	0x035A56B4 STR X8, [X31 + 0x8]
	0x035A56B8 STR X31, [X19 + 0x40]
	0x035A56BC STR W9, [X19]
	0x035A56C0 B 0x35A5734
	0x035A56C4 LDR W9, [X10]
	0x035A56C8 ADD W9, W9, 0x5
	0x035A56CC ADD X8, X8, W9, 0x4, SXTW
	0x035A56D0 ADD X0, X8, 0x138
	0x035A56D4 LDP X8, X1, [X0]
	0x035A56D8 MOV X0, X24
	0x035A56DC BLR X8
	0x035A56E0 CBZ X23, 0x35A59DC
	0x035A56E4 STR X0, [X23 + 0x10]
	0x035A56E8 CBZ X22, 0x35A59E0
	0x035A56EC LDP X4, X5, [X19 + 0x30]
	0x035A56F0 MOV X0, X22
	0x035A56F4 MOV X1, X21
	0x035A56F8 MOV X2, X20
	0x035A56FC MOV X3, X23
	0x035A5700 BL 0x3596ADC
	0x035A5704 CBZ X0, 0x35A59E4
	0x035A5708 ADRP X8, 0xB92000
	0x035A570C LDR X8, [X8 + 0x380]
	0x035A5710 LDR X1, [X8]
	0x035A5714 BL 0x269F5D0
	0x035A5718 ADRP X8, 0xB92000
	0x035A571C LDR X8, [X8 + 0x378]
	0x035A5720 STR X0, [X31 + 0x8]
	0x035A5724 LDR X1, [X8]
	0x035A5728 ADD X0, X31, 0x8
	0x035A572C BL 0x2677430
	0x035A5730 TBZ X0, 0x0, 0x35A57D4
	0x035A5734 ADRP X8, 0xB92000
	0x035A5738 LDR X8, [X8 + 0x370]
	0x035A573C ADD X0, X31, 0x8
	0x035A5740 LDR X1, [X8]
	0x035A5744 BL 0x2677474
	0x035A5748 ADRP X24, 0xB92000
	0x035A574C ADRP X23, 0xB92000
	0x035A5750 LDR X21, [X19 + 0x28]
	0x035A5754 LDR X24, [X24 + 0x368]
	0x035A5758 LDR X23, [X23 + 0x360]
	0x035A575C MOV X20, X0
	0x035A5760 CBZ X21, 0x35A5790
	0x035A5764 LDR X9, [X21]
	0x035A5768 LDR X8, [X24]
	0x035A576C LDRB W11, [X9 + 0x130]
	0x035A5770 LDRB W10, [X8 + 0x130]
	0x035A5774 CMP W11, W10
	0x035A5778 B.CC 0x35A5790
	0x035A577C LDR X9, [X9 + 0xC8]
	0x035A5780 ADD X9, X9, X10, 0x3, LSL
	0x035A5784 LDUR X9, [X9 - 0x8]
	0x035A5788 CMP X9, X8

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+32], X30
	003 Move [X31+48], X24
	004 Move [X31+56], X23
	005 Move [X31+64], X22
	006 Move [X31+72], X21
	007 Move [X31+80], X20
	008 Move [X31+88], X19
	009 Move X20, 0xE3C000
	010 Move W8, [X20+14]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {63}
	016 Move X0, 0xB93000
	017 Move X0, [X0+1288]
	018 Call 0x1C17CF4
	019 Move X0, 0xB93000
	020 Move X0, [X0+1296]
	021 Call 0x1C17CF4
	022 Move X0, 0xB93000
	023 Move X0, [X0+408]
	024 Call 0x1C17CF4
	025 Move X0, 0xB92000
	026 Move X0, [X0+4080]
	027 Call 0x1C17CF4
	028 Move X0, 0xB93000
	029 Move X0, [X0+832]
	030 Call 0x1C17CF4
	031 Move X0, 0xB50000
	032 Move X0, [X0+2544]
	033 Call 0x1C17CF4
	034 Move X0, 0xB93000
	035 Move X0, [X0+656]
	036 Call 0x1C17CF4
	037 Move X0, 0xB50000
	038 Move X0, [X0+1136]
	039 Call 0x1C17CF4
	040 Move X0, 0xB53000
	041 Move X0, [X0+4056]
	042 Call 0x1C17CF4
	043 Move X0, 0xB93000
	044 Move X0, [X0+1304]
	045 Call 0x1C17CF4
	046 Move X0, 0xB93000
	047 Move X0, [X0+936]
	048 Call 0x1C17CF4
	049 Move X0, 0xB93000
	050 Move X0, [X0+944]
	051 Call 0x1C17CF4
	052 Move X0, 0xB93000
	053 Move X0, [X0+1312]
	054 Call 0x1C17CF4
	055 Move X0, 0xB93000
	056 Move X0, [X0+1320]
	057 Call 0x1C17CF4
	058 Move X0, 0xB93000
	059 Move X0, [X0+952]
	060 Call 0x1C17CF4
	061 Move W8, 1
	062 Move [X20+14], W8
	063 Move [X31+40], X31
	064 Move [X31+16], X31
	065 Move [X31+24], X31
	066 Move X23, 0xB92000
	067 Move X24, 0xB93000
	068 Move W8, [X19]
	069 Move X20, [X19+32]
	070 Move X23, [X23+4080]
	071 Move X24, [X24+656]
	072 Compare W8, 0
	073 JumpIfEqual {82}
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Move X8, [X19+88]
	076 Move TEMP, 0
	077 Not TEMP
	078 Move W9, TEMP
	079 Move [X31+16], X8
	080 Move [X19+88], X31
	081 Move [X19], W9
	082 Move X8, [X19+80]
	083 Move TEMP, 0
	084 Not TEMP
	085 Move W9, TEMP
	086 Move [X31+24], X8
	087 Move [X19+80], X31
	088 Move [X19], W9
	089 Move X8, 0xB93000
	090 Move X8, [X8+936]
	091 Add X0, X31, 24
	092 Move X1, [X8]
	093 Call TaskAwaiter`1<Object>.GetResult, X0
	094 Compare X20, 0
	095 JumpIfEqual {339}
	096 Move W8, [X20+16]
	097 Compare W8, 0
	098 JumpIfEqual {223}
	099 Move X21, [X19+40]
	100 Compare X21, 0
	101 JumpIfEqual {340}
	102 Move X8, [X21]
	103 Move X1, [X24]
	104 NotImplemented "Instruction LDRH not yet implemented."
	105 Compare X9, 0
	106 JumpIfEqual {113}
	107 Move X10, [X8+176]
	108 Add X10, X10, 8
	109 NotImplemented "Instruction LDUR not yet implemented."
	110 NotImplemented "Instruction CMP not yet implemented."
	111 Subtract X9, X9, 1
	112 Add X10, X10, 16
	113 Move W2, 5
	114 Move X0, X21
	115 Call 0x1C5D788
	116 Move W9, [X10]
	117 Add W9, W9, 5
	118 Add X8, X8, W9
	119 Add X0, X8, 312
	120 Move X8, [X0]
	121 Move X1, [X0+8]
	122 Move X0, X21
	123 NotImplemented "Instruction BLR not yet implemented."
	124 Move X1, X31
	125 Call String.IsNullOrEmpty, X0
	126 Move TEMP, X0
	127 And TEMP, TEMP, 1
	128 Compare TEMP, 1
	129 JumpIfEqual {221}
	130 Move X8, 0xB50000
	131 Move X8, [X8+2544]
	132 Move X21, [X19+40]
	133 Move X0, [X8]
	134 Move W8, [X0+224]
	135 Compare W8, 0
	136 JumpIfNotEqual {138}
	137 Call 0x1C17DFC
	138 Move X0, X31
	139 Call DateTime.get_UtcNow
	140 Move X22, 0xB93000
	141 Move X22, [X22+832]
	142 Move X8, X0
	143 Move [X31+40], X8
	144 Move X0, [X22]
	145 Move W8, [X0+224]
	146 Compare W8, 0
	147 JumpIfNotEqual {150}
	148 Call 0x1C17DFC
	149 Move X0, [X22]
	150 Move X8, [X0+184]
	151 Move X1, [X8]
	152 Add X0, X31, 40
	153 Move X2, X31
	154 Call DateTime.Add, X0, X1
	155 Compare X21, 0
	156 JumpIfEqual {341}
	157 Move X8, [X21]
	158 Move X1, [X24]
	159 Move X22, X0
	160 NotImplemented "Instruction LDRH not yet implemented."
	161 Compare X9, 0
	162 JumpIfEqual {169}
	163 Move X10, [X8+176]
	164 Add X10, X10, 8
	165 NotImplemented "Instruction LDUR not yet implemented."
	166 NotImplemented "Instruction CMP not yet implemented."
	167 Subtract X9, X9, 1
	168 Add X10, X10, 16
	169 Move W2, 7
	170 Move X0, X21
	171 Call 0x1C5D788
	172 Move W9, [X10]
	173 Add W9, W9, 7
	174 Add X8, X8, W9
	175 Add X0, X8, 312
	176 Move X8, [X0]
	177 Move X2, [X0+8]
	178 Move X0, X21
	179 Move X1, X22
	180 NotImplemented "Instruction BLR not yet implemented."
	181 Move TEMP, X0
	182 And TEMP, TEMP, 1
	183 Compare TEMP, 1
	184 JumpIfNotEqual {221}
	185 Move X1, [X19+40]
	186 Move X2, [X19+48]
	187 Move X3, [X19+56]
	188 Move X0, X20
	189 Call Client.SessionRefreshAsync, X0, X1, X2
	190 Compare X0, 0
	191 JumpIfEqual {342}
	192 Move X8, 0xB93000
	193 Move X8, [X8+952]
	194 Move X1, [X8]
	195 Call Task`1<Object>.GetAwaiter, X0
	196 Move X8, 0xB93000
	197 Move X8, [X8+944]
	198 Move [X31+24], X0
	199 Move X1, [X8]
	200 Add X0, X31, 24
	201 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	202 Move TEMP, X0
	203 And TEMP, TEMP, 1
	204 Compare TEMP, 1
	205 JumpIfEqual {89}
	206 Move [X19], W31
	207 Move X8, [X31+24]
	208 Move [X19+80], X8
	209 Move X0, [X23]
	210 Move W8, [X0+224]
	211 Compare W8, 0
	212 JumpIfNotEqual {214}
	213 Call 0x1C17DFC
	214 Move X8, 0xB93000
	215 Move X8, [X8+1296]
	216 Add X0, X19, 8
	217 Move X3, [X8]
	218 Add X1, X31, 24
	219 Move X2, X19
	220 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	221 Compare X20, 0
	222 JumpIfEqual {338}
	223 Move X21, [X19+40]
	224 Compare X21, 0
	225 JumpIfEqual {335}
	226 Move X8, [X21]
	227 Move X20, [X20+64]
	228 Move X1, [X24]
	229 NotImplemented "Instruction LDRH not yet implemented."
	230 Compare X9, 0
	231 JumpIfEqual {238}
	232 Move X10, [X8+176]
	233 Add X10, X10, 8
	234 NotImplemented "Instruction LDUR not yet implemented."
	235 NotImplemented "Instruction CMP not yet implemented."
	236 Subtract X9, X9, 1
	237 Add X10, X10, 16
	238 Move X0, X21
	239 Move W2, W31
	240 Call 0x1C5D788
	241 NotImplemented "Instruction LDRSW not yet implemented."
	242 Add X8, X8, X9
	243 Add X0, X8, 312
	244 Move X8, [X0]
	245 Move X1, [X0+8]
	246 Move X0, X21
	247 NotImplemented "Instruction BLR not yet implemented."
	248 Move X8, 0xB50000
	249 Move X8, [X8+1136]
	250 Move W1, [X19+64]
	251 Move X21, X0
	252 Move [X31+8], X31
	253 Move X2, [X8]
	254 Add X0, X31, 8
	255 Call Nullable`1<Int32>..ctor, X0, X1
	256 Move X8, 0xB53000
	257 Move X8, [X8+4056]
	258 Move W1, [X19+68]
	259 NotImplemented "Instruction STRH not yet implemented."
	260 Move X2, [X8]
	261 Add X0, X31, 4
	262 Call Nullable`1<Boolean>..ctor, X0, X1
	263 Compare X20, 0
	264 JumpIfEqual {336}
	265 Move X5, [X19+48]
	266 Move X6, [X19+56]
	267 Move X4, [X19+72]
	268 Move X2, [X31+8]
	269 NotImplemented "Instruction LDRH not yet implemented."
	270 Move X0, X20
	271 Move X1, X21
	272 Call ApiClient.SatoriGetMessageListAsync, X0, X1, X2, X3, X4, X5
	273 Compare X0, 0
	274 JumpIfEqual {337}
	275 Move X8, 0xB93000
	276 Move X8, [X8+1320]
	277 Move X1, [X8]
	278 Call Task`1<Object>.GetAwaiter, X0
	279 Move X8, 0xB93000
	280 Move X8, [X8+1312]
	281 Move [X31+16], X0
	282 Move X1, [X8]
	283 Add X0, X31, 16
	284 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	285 Move TEMP, X0
	286 And TEMP, TEMP, 1
	287 Compare TEMP, 1
	288 JumpIfNotEqual {310}
	289 Move X8, 0xB93000
	290 Move X8, [X8+1304]
	291 Add X0, X31, 16
	292 Move X1, [X8]
	293 Call TaskAwaiter`1<Object>.GetResult, X0
	294 Move TEMP, 1
	295 Not TEMP
	296 Move W8, TEMP
	297 Move [X19+8], W8
	298 Move X20, X0
	299 Move X0, [X23]
	300 Move X21, 0xB93000
	301 Move W8, [X0+224]
	302 Move X21, [X21+408]
	303 Compare W8, 0
	304 JumpIfNotEqual {306}
	305 Call 0x1C17DFC
	306 Move X2, [X21]
	307 Move X0, X19
	308 Move X1, X20
	309 Call AsyncTaskMethodBuilder`1<Object>.SetResult, X0, X1
	310 Move W8, 1
	311 Move [X19], W8
	312 Move X8, [X31+16]
	313 Move [X19+88], X8
	314 Move X0, [X23]
	315 Move W8, [X0+224]
	316 Compare W8, 0
	317 JumpIfNotEqual {319}
	318 Call 0x1C17DFC
	319 Move X8, 0xB93000
	320 Move X8, [X8+1288]
	321 Add X0, X19, 8
	322 Move X3, [X8]
	323 Add X1, X31, 16
	324 Move X2, X19
	325 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	326 Move X20, [X31+80]
	327 Move X19, [X31+88]
	328 Move X22, [X31+64]
	329 Move X21, [X31+72]
	330 Move X24, [X31+48]
	331 Move X23, [X31+56]
	332 Move X30, [X31+32]
	333 Add X31, X31, 96
	334 Return 
	335 Call 0x1C17F20
	336 Call 0x1C17F20
	337 Call 0x1C17F20
	338 Call 0x1C17F20
	339 Call 0x1C17F20
	340 Call 0x1C17F20
	341 Call 0x1C17F20
	342 Call 0x1C17F20
	343 Move X20, X0
	344 NotImplemented "Instruction CMP not yet implemented."
	345 Move X0, X20
	346 Call 0x3EB2AD0
	347 Move X20, X0
	348 Move X0, 0xB4F000
	349 Move X0, [X0+2000]
	350 Call 0x1C17D08
	351 Move X8, [X20]
	352 Move X1, [X8]
	353 Call 0x1C18270
	354 Move TEMP, X0
	355 And TEMP, TEMP, 1
	356 Compare TEMP, 1
	357 JumpIfNotEqual {378}
	358 Move X20, [X20]
	359 Call 0x3EB2AE0
	360 Move TEMP, 1
	361 Not TEMP
	362 Move W8, TEMP
	363 Move [X19+8], W8
	364 Move X0, 0xB92000
	365 Move X0, [X0+4080]
	366 Call 0x1C17D08
	367 Move W8, [X0+224]
	368 Compare W8, 0
	369 JumpIfNotEqual {371}
	370 Call 0x1C17DFC
	371 Move X0, 0xB93000
	372 Move X0, [X0+432]
	373 Call 0x1C17D08
	374 Move X2, X0
	375 Move X0, X19
	376 Move X1, X20
	377 Call AsyncTaskMethodBuilder`1<Object>.SetException, X0, X1
	378 Move W0, 8
	379 Call 0x3EB2AF0
	380 Move X8, [X20]
	381 Move [X0], X8
	382 Move X1, 0x910000
	383 Add X1, X1, 3672
	384 Move X2, X31
	385 Call 0x3EB2B00
	386 Move X20, X0
	387 Call 0x3EB2AE0
	388 Move X0, X20
	389 Call 0x1D2D690
	390 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x035A578C B.EQ 0x35A5900
	0x035A5790 CBZ X20, 0x35A59E8
	0x035A5794 LDR X8, [X20]
	0x035A5798 LDR X1, [X23]
	0x035A579C LDRH W9, [X8 + 0x12E]
	0x035A57A0 CBZ X9, 0x35A57C4
	0x035A57A4 LDR X10, [X8 + 0xB0]
	0x035A57A8 ADD X10, X10, 0x8
	0x035A57AC LDUR X11, [X10 - 0x8]
	0x035A57B0 CMP X11, X1
	0x035A57B4 B.EQ 0x35A5810
	0x035A57B8 SUBS X9, X9, 0x1
	0x035A57BC ADD X10, X10, 0x10
	0x035A57C0 B.NE 0x35A57AC
	0x035A57C4 MOVZ W2, 0x2
	0x035A57C8 MOV X0, X20
	0x035A57CC BL 0x1C5C788
	0x035A57D0 B 0x35A5820
	0x035A57D4 STR W31, [X19]
	0x035A57D8 LDR X8, [X31 + 0x8]
	0x035A57DC STR X8, [X19 + 0x40]
	0x035A57E0 LDR X0, [X25]
	0x035A57E4 LDR W8, [X0 + 0xE0]
	0x035A57E8 CBNZ W8, 0x35A57F0
	0x035A57EC BL 0x1C16DFC
	0x035A57F0 ADRP X8, 0xB92000
	0x035A57F4 LDR X8, [X8 + 0x578]
	0x035A57F8 ADD X0, X19, 0x8
	0x035A57FC LDR X3, [X8]
	0x035A5800 ADD X1, X31, 0x8
	0x035A5804 MOV X2, X19

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xE3C000
	007 Move X21, 0xB92000
	008 Move W8, [X22+15]
	009 Move X21, [X21+4080]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xB93000
	017 Move X0, [X0+440]
	018 Call 0x1C17CF4
	019 Move X0, 0xB92000
	020 Move X0, [X0+4080]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+15], W8
	024 Move X0, [X21]
	025 Move X21, 0xB93000
	026 Move W8, [X0+224]
	027 Move X21, [X21+440]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X2, [X21]
	032 Add X0, X20, 8
	033 Move X1, X19
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Call AsyncTaskMethodBuilder`1<Object>.SetStateMachine, X0, X1
	040 Return 

