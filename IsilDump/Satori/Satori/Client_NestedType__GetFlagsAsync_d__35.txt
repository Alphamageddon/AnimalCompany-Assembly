Type: Satori.Client/<GetFlagsAsync>d__35

Method: System.Void MoveNext()

Disassembly:
	0x035A45B0 BL 0x2677430
	0x035A45B4 TBZ X0, 0x0, 0x35A4604
	0x035A45B8 ADRP X8, 0xB93000
	0x035A45BC LDR X8, [X8 + 0x518]
	0x035A45C0 ADD X0, X31, 0x10
	0x035A45C4 LDR X1, [X8]
	0x035A45C8 BL 0x2677474
	0x035A45CC MOVN W8, 0x1
	0x035A45D0 STR W8, [X19], #0x8
	0x035A45D4 MOV X20, X0
	0x035A45D8 LDR X0, [X23]
	0x035A45DC ADRP X21, 0xB93000
	0x035A45E0 LDR W8, [X0 + 0xE0]
	0x035A45E4 LDR X21, [X21 + 0x198]
	0x035A45E8 CBNZ W8, 0x35A45F0
	0x035A45EC BL 0x1C16DFC
	0x035A45F0 LDR X2, [X21]
	0x035A45F4 MOV X0, X19
	0x035A45F8 MOV X1, X20
	0x035A45FC BL 0x26322B0
	0x035A4600 B 0x35A4640
	0x035A4604 MOVZ W8, 0x1
	0x035A4608 STR W8, [X19]
	0x035A460C LDR X8, [X31 + 0x10]
	0x035A4610 STR X8, [X19 + 0x58]
	0x035A4614 LDR X0, [X23]
	0x035A4618 LDR W8, [X0 + 0xE0]
	0x035A461C CBNZ W8, 0x35A4624
	0x035A4620 BL 0x1C16DFC
	0x035A4624 ADRP X8, 0xB93000
	0x035A4628 LDR X8, [X8 + 0x508]
	0x035A462C ADD X0, X19, 0x8
	0x035A4630 LDR X3, [X8]
	0x035A4634 ADD X1, X31, 0x10
	0x035A4638 MOV X2, X19
	0x035A463C BL 0x1FBFAF4
	0x035A4640 LDP X20, X19, [X31 + 0x50]
	0x035A4644 LDP X22, X21, [X31 + 0x40]
	0x035A4648 LDP X24, X23, [X31 + 0x30]
	0x035A464C LDR X30, [X31 + 0x20]
	0x035A4650 ADD X31, X31, 0x60
	0x035A4654 RET
	0x035A4658 BL 0x1C16F20
	0x035A465C BL 0x1C16F20
	0x035A4660 BL 0x1C16F20
	0x035A4664 BL 0x1C16F20
	0x035A4668 BL 0x1C16F20
	0x035A466C BL 0x1C16F20
	0x035A4670 BL 0x1C16F20
	0x035A4674 BL 0x1C16F20
	0x035A4678 B 0x35A46DC
	0x035A467C B 0x35A46DC
	0x035A4680 B 0x35A46DC
	0x035A4684 B 0x35A46DC
	0x035A4688 B 0x35A46DC
	0x035A468C B 0x35A46DC
	0x035A4690 B 0x35A46DC
	0x035A4694 B 0x35A46DC
	0x035A4698 B 0x35A46DC
	0x035A469C B 0x35A46DC
	0x035A46A0 B 0x35A46DC
	0x035A46A4 B 0x35A46DC
	0x035A46A8 B 0x35A46DC
	0x035A46AC B 0x35A46DC
	0x035A46B0 B 0x35A46DC
	0x035A46B4 B 0x35A46DC
	0x035A46B8 B 0x35A46DC
	0x035A46BC B 0x35A46DC
	0x035A46C0 B 0x35A46DC
	0x035A46C4 B 0x35A46DC
	0x035A46C8 B 0x35A46DC
	0x035A46CC B 0x35A46DC
	0x035A46D0 B 0x35A46DC
	0x035A46D4 B 0x35A46DC
	0x035A46D8 B 0x35A46DC
	0x035A46DC MOV X20, X0
	0x035A46E0 CMP W1, 0x1
	0x035A46E4 B.NE 0x35A4780
	0x035A46E8 MOV X0, X20
	0x035A46EC BL 0x3EB1AD0
	0x035A46F0 MOV X20, X0
	0x035A46F4 ADRP X0, 0xB4F000
	0x035A46F8 LDR X0, [X0 + 0x7D0]
	0x035A46FC BL 0x1C16D08
	0x035A4700 LDR X8, [X20]
	0x035A4704 LDR X1, [X8]
	0x035A4708 BL 0x1C17270
	0x035A470C TBZ X0, 0x0, 0x35A4758
	0x035A4710 LDR X20, [X20]
	0x035A4714 BL 0x3EB1AE0
	0x035A4718 MOVN W8, 0x1
	0x035A471C STR W8, [X19], #0x8
	0x035A4720 ADRP X0, 0xB92000
	0x035A4724 LDR X0, [X0 + 0xFF0]
	0x035A4728 BL 0x1C16D08
	0x035A472C LDR W8, [X0 + 0xE0]
	0x035A4730 CBNZ W8, 0x35A4738
	0x035A4734 BL 0x1C16DFC
	0x035A4738 ADRP X0, 0xB93000
	0x035A473C LDR X0, [X0 + 0x1B0]
	0x035A4740 BL 0x1C16D08
	0x035A4744 MOV X2, X0
	0x035A4748 MOV X0, X19
	0x035A474C MOV X1, X20
	0x035A4750 BL 0x26324C8
	0x035A4754 B 0x35A4640
	0x035A4758 MOVZ W0, 0x8
	0x035A475C BL 0x3EB1AF0
	0x035A4760 LDR X8, [X20]
	0x035A4764 STR X8, [X0]
	0x035A4768 ADRP X1, 0x910000
	0x035A476C ADD X1, X1, 0xE58
	0x035A4770 MOV X2, X31
	0x035A4774 BL 0x3EB1B00
	0x035A4778 MOV X20, X0
	0x035A477C BL 0x3EB1AE0
	0x035A4780 MOV X0, X20
	0x035A4784 BL 0x1D2C690
	0x035A4788 BL 0x1990590
	0x035A478C STR X30, [X31 - 0x30]!
	0x035A4790 STP X22, X21, [X31 + 0x10]
	0x035A4794 STP X20, X19, [X31 + 0x20]
	0x035A4798 ADRP X22, 0xE3C000
	0x035A479C ADRP X21, 0xB92000
	0x035A47A0 LDRB W8, [X22 + 0xF]
	0x035A47A4 LDR X21, [X21 + 0xFF0]
	0x035A47A8 MOV X19, X1
	0x035A47AC MOV X20, X0
	0x035A47B0 TBNZ X8, 0x0, 0x35A47D4
	0x035A47B4 ADRP X0, 0xB93000
	0x035A47B8 LDR X0, [X0 + 0x1B8]
	0x035A47BC BL 0x1C16CF4
	0x035A47C0 ADRP X0, 0xB92000
	0x035A47C4 LDR X0, [X0 + 0xFF0]
	0x035A47C8 BL 0x1C16CF4
	0x035A47CC MOVZ W8, 0x1
	0x035A47D0 STRB W8, [X22 + 0xF]
	0x035A47D4 LDR X0, [X21]
	0x035A47D8 ADRP X21, 0xB93000
	0x035A47DC LDR W8, [X0 + 0xE0]
	0x035A47E0 LDR X21, [X21 + 0x1B8]
	0x035A47E4 CBNZ W8, 0x35A47EC
	0x035A47E8 BL 0x1C16DFC
	0x035A47EC LDR X2, [X21]
	0x035A47F0 ADD X0, X20, 0x8
	0x035A47F4 MOV X1, X19
	0x035A47F8 LDP X20, X19, [X31 + 0x20]
	0x035A47FC LDP X22, X21, [X31 + 0x10]
	0x035A4800 LDR X30, [X31], #0x30
	0x035A4804 B 0x2632228
	0x035A4808 SUB X31, X31, 0x50
	0x035A480C STR X30, [X31 + 0x10]
	0x035A4810 STP X24, X23, [X31 + 0x20]
	0x035A4814 STP X22, X21, [X31 + 0x30]
	0x035A4818 STP X20, X19, [X31 + 0x40]
	0x035A481C ADRP X20, 0xE3C000
	0x035A4820 LDRB W8, [X20 + 0x10]
	0x035A4824 MOV X19, X0
	0x035A4828 TBNZ X8, 0x0, 0x35A48F4
	0x035A482C ADRP X0, 0xB93000
	0x035A4830 LDR X0, [X0 + 0x530]
	0x035A4834 BL 0x1C16CF4
	0x035A4838 ADRP X0, 0xB93000
	0x035A483C LDR X0, [X0 + 0x538]
	0x035A4840 BL 0x1C16CF4
	0x035A4844 ADRP X0, 0xB93000
	0x035A4848 LDR X0, [X0 + 0x540]
	0x035A484C BL 0x1C16CF4
	0x035A4850 ADRP X0, 0xB93000
	0x035A4854 LDR X0, [X0 + 0x358]
	0x035A4858 BL 0x1C16CF4
	0x035A485C ADRP X0, 0xB93000
	0x035A4860 LDR X0, [X0 + 0x268]
	0x035A4864 BL 0x1C16CF4
	0x035A4868 ADRP X0, 0xB93000
	0x035A486C LDR X0, [X0 + 0x340]
	0x035A4870 BL 0x1C16CF4
	0x035A4874 ADRP X0, 0xB50000
	0x035A4878 LDR X0, [X0 + 0x9F0]
	0x035A487C BL 0x1C16CF4
	0x035A4880 ADRP X0, 0xB93000
	0x035A4884 LDR X0, [X0 + 0x360]
	0x035A4888 BL 0x1C16CF4
	0x035A488C ADRP X0, 0xB93000
	0x035A4890 LDR X0, [X0 + 0x290]
	0x035A4894 BL 0x1C16CF4
	0x035A4898 ADRP X0, 0xB93000
	0x035A489C LDR X0, [X0 + 0x368]
	0x035A48A0 BL 0x1C16CF4
	0x035A48A4 ADRP X0, 0xB93000
	0x035A48A8 LDR X0, [X0 + 0x3A8]
	0x035A48AC BL 0x1C16CF4
	0x035A48B0 ADRP X0, 0xB93000
	0x035A48B4 LDR X0, [X0 + 0x370]
	0x035A48B8 BL 0x1C16CF4
	0x035A48BC ADRP X0, 0xB93000
	0x035A48C0 LDR X0, [X0 + 0x3B0]
	0x035A48C4 BL 0x1C16CF4
	0x035A48C8 ADRP X0, 0xB93000
	0x035A48CC LDR X0, [X0 + 0x378]
	0x035A48D0 BL 0x1C16CF4
	0x035A48D4 ADRP X0, 0xB93000
	0x035A48D8 LDR X0, [X0 + 0x380]
	0x035A48DC BL 0x1C16CF4
	0x035A48E0 ADRP X0, 0xB93000
	0x035A48E4 LDR X0, [X0 + 0x3B8]
	0x035A48E8 BL 0x1C16CF4
	0x035A48EC MOVZ W8, 0x1
	0x035A48F0 STRB W8, [X20 + 0x10]
	0x035A48F4 STR X31, [X31 + 0x18]
	0x035A48F8 STP X31, X31, [X31]
	0x035A48FC ADRP X23, 0xB93000
	0x035A4900 ADRP X24, 0xB93000
	0x035A4904 LDR W8, [X19]
	0x035A4908 LDR X20, [X19 + 0x20]
	0x035A490C LDR X23, [X23 + 0x268]
	0x035A4910 LDR X24, [X24 + 0x290]
	0x035A4914 CBZ W8, 0x35A4938
	0x035A4918 CMP W8, 0x1
	0x035A491C B.NE 0x35A4964
	0x035A4920 LDR X8, [X19 + 0x60]
	0x035A4924 MOVN W9, 0x0
	0x035A4928 STR X8, [X31]
	0x035A492C STR X31, [X19 + 0x60]
	0x035A4930 STR W9, [X19]
	0x035A4934 B 0x35A4C08
	0x035A4938 LDR X8, [X19 + 0x58]
	0x035A493C MOVN W9, 0x0
	0x035A4940 STR X8, [X31 + 0x8]
	0x035A4944 STR X31, [X19 + 0x58]
	0x035A4948 STR W9, [X19]
	0x035A494C ADRP X8, 0xB93000
	0x035A4950 LDR X8, [X8 + 0x3A8]
	0x035A4954 ADD X0, X31, 0x8
	0x035A4958 LDR X1, [X8]
	0x035A495C BL 0x2677474
	0x035A4960 B 0x35A4B24
	0x035A4964 CBZ X20, 0x35A4DBC
	0x035A4968 LDRB W8, [X20 + 0x10]
	0x035A496C CBZ W8, 0x35A4B24
	0x035A4970 LDR X21, [X19 + 0x28]
	0x035A4974 CBZ X21, 0x35A4DC0
	0x035A4978 LDR X8, [X21]
	0x035A497C LDR X1, [X24]
	0x035A4980 LDRH W9, [X8 + 0x12E]
	0x035A4984 CBZ X9, 0x35A49A8
	0x035A4988 LDR X10, [X8 + 0xB0]
	0x035A498C ADD X10, X10, 0x8
	0x035A4990 LDUR X11, [X10 - 0x8]
	0x035A4994 CMP X11, X1
	0x035A4998 B.EQ 0x35A49B8
	0x035A499C SUBS X9, X9, 0x1
	0x035A49A0 ADD X10, X10, 0x10
	0x035A49A4 B.NE 0x35A4990
	0x035A49A8 MOVZ W2, 0x5
	0x035A49AC MOV X0, X21
	0x035A49B0 BL 0x1C5C788
	0x035A49B4 B 0x35A49C8
	0x035A49B8 LDR W9, [X10]
	0x035A49BC ADD W9, W9, 0x5
	0x035A49C0 ADD X8, X8, W9, 0x4, SXTW
	0x035A49C4 ADD X0, X8, 0x138
	0x035A49C8 LDP X8, X1, [X0]
	0x035A49CC MOV X0, X21
	0x035A49D0 BLR X8
	0x035A49D4 MOV X1, X31
	0x035A49D8 BL 0x32277A8
	0x035A49DC TBNZ X0, 0x0, 0x35A4B24
	0x035A49E0 ADRP X8, 0xB50000
	0x035A49E4 LDR X8, [X8 + 0x9F0]
	0x035A49E8 LDR X21, [X19 + 0x28]
	0x035A49EC LDR X0, [X8]
	0x035A49F0 LDR W8, [X0 + 0xE0]
	0x035A49F4 CBNZ W8, 0x35A49FC
	0x035A49F8 BL 0x1C16DFC
	0x035A49FC MOV X0, X31
	0x035A4A00 BL 0x33616A4
	0x035A4A04 ADRP X22, 0xB93000
	0x035A4A08 LDR X22, [X22 + 0x340]
	0x035A4A0C MOV X8, X0
	0x035A4A10 STR X8, [X31 + 0x18]
	0x035A4A14 LDR X0, [X22]
	0x035A4A18 LDR W8, [X0 + 0xE0]
	0x035A4A1C CBNZ W8, 0x35A4A28
	0x035A4A20 BL 0x1C16DFC
	0x035A4A24 LDR X0, [X22]
	0x035A4A28 LDR X8, [X0 + 0xB8]
	0x035A4A2C LDR X1, [X8]
	0x035A4A30 ADD X0, X31, 0x18
	0x035A4A34 MOV X2, X31
	0x035A4A38 BL 0x335FC68
	0x035A4A3C CBZ X21, 0x35A4DC4
	0x035A4A40 LDR X8, [X21]
	0x035A4A44 LDR X1, [X24]
	0x035A4A48 MOV X22, X0
	0x035A4A4C LDRH W9, [X8 + 0x12E]
	0x035A4A50 CBZ X9, 0x35A4A74
	0x035A4A54 LDR X10, [X8 + 0xB0]
	0x035A4A58 ADD X10, X10, 0x8
	0x035A4A5C LDUR X11, [X10 - 0x8]
	0x035A4A60 CMP X11, X1
	0x035A4A64 B.EQ 0x35A4A84
	0x035A4A68 SUBS X9, X9, 0x1
	0x035A4A6C ADD X10, X10, 0x10
	0x035A4A70 B.NE 0x35A4A5C
	0x035A4A74 MOVZ W2, 0x7
	0x035A4A78 MOV X0, X21
	0x035A4A7C BL 0x1C5C788
	0x035A4A80 B 0x35A4A94
	0x035A4A84 LDR W9, [X10]
	0x035A4A88 ADD W9, W9, 0x7
	0x035A4A8C ADD X8, X8, W9, 0x4, SXTW
	0x035A4A90 ADD X0, X8, 0x138
	0x035A4A94 LDP X8, X2, [X0]
	0x035A4A98 MOV X0, X21
	0x035A4A9C MOV X1, X22
	0x035A4AA0 BLR X8
	0x035A4AA4 TBZ X0, 0x0, 0x35A4B24
	0x035A4AA8 LDP X1, X2, [X19 + 0x28]
	0x035A4AAC LDR X3, [X19 + 0x38]
	0x035A4AB0 MOV X0, X20
	0x035A4AB4 BL 0x359F740
	0x035A4AB8 CBZ X0, 0x35A4DC8
	0x035A4ABC ADRP X8, 0xB93000
	0x035A4AC0 LDR X8, [X8 + 0x3B8]
	0x035A4AC4 LDR X1, [X8]
	0x035A4AC8 BL 0x269F5D0
	0x035A4ACC ADRP X8, 0xB93000
	0x035A4AD0 LDR X8, [X8 + 0x3B0]
	0x035A4AD4 STR X0, [X31 + 0x8]
	0x035A4AD8 LDR X1, [X8]
	0x035A4ADC ADD X0, X31, 0x8
	0x035A4AE0 BL 0x2677430
	0x035A4AE4 TBNZ X0, 0x0, 0x35A494C
	0x035A4AE8 STR W31, [X19]
	0x035A4AEC LDR X8, [X31 + 0x8]
	0x035A4AF0 STR X8, [X19 + 0x58]
	0x035A4AF4 LDR X0, [X23]
	0x035A4AF8 LDR W8, [X0 + 0xE0]
	0x035A4AFC CBNZ W8, 0x35A4B04
	0x035A4B00 BL 0x1C16DFC
	0x035A4B04 ADRP X8, 0xB93000
	0x035A4B08 LDR X8, [X8 + 0x538]
	0x035A4B0C ADD X0, X19, 0x8
	0x035A4B10 LDR X3, [X8]
	0x035A4B14 ADD X1, X31, 0x8
	0x035A4B18 MOV X2, X19
	0x035A4B1C BL 0x1FBFD08
	0x035A4B20 B 0x35A4D8C
	0x035A4B24 ADRP X8, 0xB93000
	0x035A4B28 LDR X8, [X8 + 0x530]
	0x035A4B2C LDR X0, [X8]
	0x035A4B30 BL 0x1C16F10
	0x035A4B34 MOV X21, X0
	0x035A4B38 MOV X1, X31
	0x035A4B3C BL 0x33BDD8C
	0x035A4B40 CBZ X21, 0x35A4DA8
	0x035A4B44 LDR X8, [X19 + 0x40]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+32], X24
	004 Move [X31+40], X23
	005 Move [X31+48], X22
	006 Move [X31+56], X21
	007 Move [X31+64], X20
	008 Move [X31+72], X19
	009 Move X20, 0xE3D000
	010 Move W8, [X20+10]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {60}
	016 Move X0, 0xB94000
	017 Move X0, [X0+1232]
	018 Call 0x1C17CF4
	019 Move X0, 0xB94000
	020 Move X0, [X0+1240]
	021 Call 0x1C17CF4
	022 Move X0, 0xB94000
	023 Move X0, [X0+312]
	024 Call 0x1C17CF4
	025 Move X0, 0xB93000
	026 Move X0, [X0+4000]
	027 Call 0x1C17CF4
	028 Move X0, 0xB94000
	029 Move X0, [X0+832]
	030 Call 0x1C17CF4
	031 Move X0, 0xB51000
	032 Move X0, [X0+2544]
	033 Call 0x1C17CF4
	034 Move X0, 0xB94000
	035 Move X0, [X0+656]
	036 Call 0x1C17CF4
	037 Move X0, 0xB52000
	038 Move X0, [X0+632]
	039 Call 0x1C17CF4
	040 Move X0, 0xB94000
	041 Move X0, [X0+936]
	042 Call 0x1C17CF4
	043 Move X0, 0xB94000
	044 Move X0, [X0+1160]
	045 Call 0x1C17CF4
	046 Move X0, 0xB94000
	047 Move X0, [X0+1168]
	048 Call 0x1C17CF4
	049 Move X0, 0xB94000
	050 Move X0, [X0+944]
	051 Call 0x1C17CF4
	052 Move X0, 0xB94000
	053 Move X0, [X0+952]
	054 Call 0x1C17CF4
	055 Move X0, 0xB94000
	056 Move X0, [X0+1176]
	057 Call 0x1C17CF4
	058 Move W8, 1
	059 Move [X20+10], W8
	060 Move [X31+24], X31
	061 Move [X31], X31
	062 Move [X31+8], X31
	063 Move X23, 0xB93000
	064 Move X24, 0xB94000
	065 Move W8, [X19]
	066 Move X20, [X19+32]
	067 Move X23, [X23+4000]
	068 Move X24, [X24+656]
	069 Compare W8, 0
	070 JumpIfEqual {79}
	071 NotImplemented "Instruction CMP not yet implemented."
	072 Move X8, [X19+80]
	073 Move TEMP, 0
	074 Not TEMP
	075 Move W9, TEMP
	076 Move [X31], X8
	077 Move [X19+80], X31
	078 Move [X19], W9
	079 Move X8, [X19+72]
	080 Move TEMP, 0
	081 Not TEMP
	082 Move W9, TEMP
	083 Move [X31+8], X8
	084 Move [X19+72], X31
	085 Move [X19], W9
	086 Move X8, 0xB94000
	087 Move X8, [X8+936]
	088 Add X0, X31, 8
	089 Move X1, [X8]
	090 Call TaskAwaiter`1<Object>.GetResult, X0
	091 Compare X20, 0
	092 JumpIfEqual {325}
	093 Move W8, [X20+16]
	094 Compare W8, 0
	095 JumpIfEqual {220}
	096 Move X21, [X19+40]
	097 Compare X21, 0
	098 JumpIfEqual {326}
	099 Move X8, [X21]
	100 Move X1, [X24]
	101 NotImplemented "Instruction LDRH not yet implemented."
	102 Compare X9, 0
	103 JumpIfEqual {110}
	104 Move X10, [X8+176]
	105 Add X10, X10, 8
	106 NotImplemented "Instruction LDUR not yet implemented."
	107 NotImplemented "Instruction CMP not yet implemented."
	108 Subtract X9, X9, 1
	109 Add X10, X10, 16
	110 Move W2, 5
	111 Move X0, X21
	112 Call 0x1C5D788
	113 Move W9, [X10]
	114 Add W9, W9, 5
	115 Add X8, X8, W9
	116 Add X0, X8, 312
	117 Move X8, [X0]
	118 Move X1, [X0+8]
	119 Move X0, X21
	120 NotImplemented "Instruction BLR not yet implemented."
	121 Move X1, X31
	122 Call String.IsNullOrEmpty, X0
	123 Move TEMP, X0
	124 And TEMP, TEMP, 1
	125 Compare TEMP, 1
	126 JumpIfEqual {218}
	127 Move X8, 0xB51000
	128 Move X8, [X8+2544]
	129 Move X21, [X19+40]
	130 Move X0, [X8]
	131 Move W8, [X0+224]
	132 Compare W8, 0
	133 JumpIfNotEqual {135}
	134 Call 0x1C17DFC
	135 Move X0, X31
	136 Call DateTime.get_UtcNow
	137 Move X22, 0xB94000
	138 Move X22, [X22+832]
	139 Move X8, X0
	140 Move [X31+24], X8
	141 Move X0, [X22]
	142 Move W8, [X0+224]
	143 Compare W8, 0
	144 JumpIfNotEqual {147}
	145 Call 0x1C17DFC
	146 Move X0, [X22]
	147 Move X8, [X0+184]
	148 Move X1, [X8]
	149 Add X0, X31, 24
	150 Move X2, X31
	151 Call DateTime.Add, X0, X1
	152 Compare X21, 0
	153 JumpIfEqual {327}
	154 Move X8, [X21]
	155 Move X1, [X24]
	156 Move X22, X0
	157 NotImplemented "Instruction LDRH not yet implemented."
	158 Compare X9, 0
	159 JumpIfEqual {166}
	160 Move X10, [X8+176]
	161 Add X10, X10, 8
	162 NotImplemented "Instruction LDUR not yet implemented."
	163 NotImplemented "Instruction CMP not yet implemented."
	164 Subtract X9, X9, 1
	165 Add X10, X10, 16
	166 Move W2, 7
	167 Move X0, X21
	168 Call 0x1C5D788
	169 Move W9, [X10]
	170 Add W9, W9, 7
	171 Add X8, X8, W9
	172 Add X0, X8, 312
	173 Move X8, [X0]
	174 Move X2, [X0+8]
	175 Move X0, X21
	176 Move X1, X22
	177 NotImplemented "Instruction BLR not yet implemented."
	178 Move TEMP, X0
	179 And TEMP, TEMP, 1
	180 Compare TEMP, 1
	181 JumpIfNotEqual {218}
	182 Move X1, [X19+40]
	183 Move X2, [X19+48]
	184 Move X3, [X19+56]
	185 Move X0, X20
	186 Call Client.SessionRefreshAsync, X0, X1, X2
	187 Compare X0, 0
	188 JumpIfEqual {328}
	189 Move X8, 0xB94000
	190 Move X8, [X8+952]
	191 Move X1, [X8]
	192 Call Task`1<Object>.GetAwaiter, X0
	193 Move X8, 0xB94000
	194 Move X8, [X8+944]
	195 Move [X31+8], X0
	196 Move X1, [X8]
	197 Add X0, X31, 8
	198 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	199 Move TEMP, X0
	200 And TEMP, TEMP, 1
	201 Compare TEMP, 1
	202 JumpIfEqual {86}
	203 Move [X19], W31
	204 Move X8, [X31+8]
	205 Move [X19+72], X8
	206 Move X0, [X23]
	207 Move W8, [X0+224]
	208 Compare W8, 0
	209 JumpIfNotEqual {211}
	210 Call 0x1C17DFC
	211 Move X8, 0xB94000
	212 Move X8, [X8+1240]
	213 Add X0, X19, 8
	214 Move X3, [X8]
	215 Add X1, X31, 8
	216 Move X2, X19
	217 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	218 Compare X20, 0
	219 JumpIfEqual {324}
	220 Move X21, [X19+40]
	221 Compare X21, 0
	222 JumpIfEqual {321}
	223 Move X8, [X21]
	224 Move X20, [X20+64]
	225 Move X1, [X24]
	226 NotImplemented "Instruction LDRH not yet implemented."
	227 Compare X9, 0
	228 JumpIfEqual {235}
	229 Move X10, [X8+176]
	230 Add X10, X10, 8
	231 NotImplemented "Instruction LDUR not yet implemented."
	232 NotImplemented "Instruction CMP not yet implemented."
	233 Subtract X9, X9, 1
	234 Add X10, X10, 16
	235 Move X0, X21
	236 Move W2, W31
	237 Call 0x1C5D788
	238 NotImplemented "Instruction LDRSW not yet implemented."
	239 Add X8, X8, X9
	240 Add X0, X8, 312
	241 Move X8, [X0]
	242 Move X1, [X0+8]
	243 Move X0, X21
	244 NotImplemented "Instruction BLR not yet implemented."
	245 Move X1, X0
	246 Compare X20, 0
	247 JumpIfEqual {322}
	248 Move X8, 0xB52000
	249 Move X8, [X8+632]
	250 Move X5, [X19+48]
	251 Move X6, [X19+56]
	252 Move X4, [X19+64]
	253 Move X8, [X8]
	254 Move X8, [X8+184]
	255 Move X2, [X8]
	256 Move X0, X20
	257 Move X3, X2
	258 Call ApiClient.SatoriGetFlagsAsync, X0, X1, X2, X3, X4, X5
	259 Compare X0, 0
	260 JumpIfEqual {323}
	261 Move X8, 0xB94000
	262 Move X8, [X8+1176]
	263 Move X1, [X8]
	264 Call Task`1<Object>.GetAwaiter, X0
	265 Move X8, 0xB94000
	266 Move X8, [X8+1168]
	267 Move [X31], X0
	268 Move X1, [X8]
	269 Add X0, X31, 0
	270 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	271 Move TEMP, X0
	272 And TEMP, TEMP, 1
	273 Compare TEMP, 1
	274 JumpIfNotEqual {296}
	275 Move X8, 0xB94000
	276 Move X8, [X8+1160]
	277 Add X0, X31, 0
	278 Move X1, [X8]
	279 Call TaskAwaiter`1<Object>.GetResult, X0
	280 Move TEMP, 1
	281 Not TEMP
	282 Move W8, TEMP
	283 Move [X19+8], W8
	284 Move X20, X0
	285 Move X0, [X23]
	286 Move X21, 0xB94000
	287 Move W8, [X0+224]
	288 Move X21, [X21+312]
	289 Compare W8, 0
	290 JumpIfNotEqual {292}
	291 Call 0x1C17DFC
	292 Move X2, [X21]
	293 Move X0, X19
	294 Move X1, X20
	295 Call AsyncTaskMethodBuilder`1<Object>.SetResult, X0, X1
	296 Move W8, 1
	297 Move [X19], W8
	298 Move X8, [X31]
	299 Move [X19+80], X8
	300 Move X0, [X23]
	301 Move W8, [X0+224]
	302 Compare W8, 0
	303 JumpIfNotEqual {305}
	304 Call 0x1C17DFC
	305 Move X8, 0xB94000
	306 Move X8, [X8+1232]
	307 Add X0, X19, 8
	308 Move X3, [X8]
	309 Add X1, X31, 0
	310 Move X2, X19
	311 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	312 Move X20, [X31+64]
	313 Move X19, [X31+72]
	314 Move X22, [X31+48]
	315 Move X21, [X31+56]
	316 Move X24, [X31+32]
	317 Move X23, [X31+40]
	318 Move X30, [X31+16]
	319 Add X31, X31, 80
	320 Return 
	321 Call 0x1C17F20
	322 Call 0x1C17F20
	323 Call 0x1C17F20
	324 Call 0x1C17F20
	325 Call 0x1C17F20
	326 Call 0x1C17F20
	327 Call 0x1C17F20
	328 Call 0x1C17F20
	329 Move X20, X0
	330 NotImplemented "Instruction CMP not yet implemented."
	331 Move X0, X20
	332 Call 0x3EB2AD0
	333 Move X20, X0
	334 Move X0, 0xB50000
	335 Move X0, [X0+2000]
	336 Call 0x1C17D08
	337 Move X8, [X20]
	338 Move X1, [X8]
	339 Call 0x1C18270
	340 Move TEMP, X0
	341 And TEMP, TEMP, 1
	342 Compare TEMP, 1
	343 JumpIfNotEqual {364}
	344 Move X20, [X20]
	345 Call 0x3EB2AE0
	346 Move TEMP, 1
	347 Not TEMP
	348 Move W8, TEMP
	349 Move [X19+8], W8
	350 Move X0, 0xB93000
	351 Move X0, [X0+4000]
	352 Call 0x1C17D08
	353 Move W8, [X0+224]
	354 Compare W8, 0
	355 JumpIfNotEqual {357}
	356 Call 0x1C17DFC
	357 Move X0, 0xB94000
	358 Move X0, [X0+336]
	359 Call 0x1C17D08
	360 Move X2, X0
	361 Move X0, X19
	362 Move X1, X20
	363 Call AsyncTaskMethodBuilder`1<Object>.SetException, X0, X1
	364 Move W0, 8
	365 Call 0x3EB2AF0
	366 Move X8, [X20]
	367 Move [X0], X8
	368 Move X1, 0x911000
	369 Add X1, X1, 3672
	370 Move X2, X31
	371 Call 0x3EB2B00
	372 Move X20, X0
	373 Call 0x3EB2AE0
	374 Move X0, X20
	375 Call 0x1D2D690
	376 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x035A4B48 STR X8, [X21 + 0x20]
	0x035A4B4C LDUR V0, [X19 + 0x48]
	0x035A4B50 UNIMPLEMENTED
	0x035A4B54 STR V0, [X21 + 0x1]
	0x035A4B58 CBZ X20, 0x35A4DAC
	0x035A4B5C LDR X22, [X19 + 0x28]
	0x035A4B60 CBZ X22, 0x35A4DB0
	0x035A4B64 LDR X8, [X22]
	0x035A4B68 LDR X20, [X20 + 0x40]
	0x035A4B6C LDR X1, [X24]
	0x035A4B70 LDRH W9, [X8 + 0x12E]
	0x035A4B74 CBZ X9, 0x35A4B98
	0x035A4B78 LDR X10, [X8 + 0xB0]
	0x035A4B7C ADD X10, X10, 0x8
	0x035A4B80 LDUR X11, [X10 - 0x8]
	0x035A4B84 CMP X11, X1
	0x035A4B88 B.EQ 0x35A4BA8
	0x035A4B8C SUBS X9, X9, 0x1
	0x035A4B90 ADD X10, X10, 0x10
	0x035A4B94 B.NE 0x35A4B80
	0x035A4B98 MOV X0, X22
	0x035A4B9C MOV W2, W31
	0x035A4BA0 BL 0x1C5C788
	0x035A4BA4 B 0x35A4BB4
	0x035A4BA8 LDRSW X9, [X10]
	0x035A4BAC ADD X8, X8, X9, 0x4, LSL
	0x035A4BB0 ADD X0, X8, 0x138
	0x035A4BB4 LDP X8, X1, [X0]
	0x035A4BB8 MOV X0, X22
	0x035A4BBC BLR X8
	0x035A4BC0 MOV X1, X0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xE3D000
	007 Move X21, 0xB93000
	008 Move W8, [X22+11]
	009 Move X21, [X21+4000]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xB94000
	017 Move X0, [X0+344]
	018 Call 0x1C17CF4
	019 Move X0, 0xB93000
	020 Move X0, [X0+4000]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+11], W8
	024 Move X0, [X21]
	025 Move X21, 0xB94000
	026 Move W8, [X0+224]
	027 Move X21, [X21+344]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X2, [X21]
	032 Add X0, X20, 8
	033 Move X1, X19
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Call AsyncTaskMethodBuilder`1<Object>.SetStateMachine, X0, X1
	040 Return 

