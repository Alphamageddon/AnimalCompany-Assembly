Type: Satori.ApiClient/<SatoriGetExperimentsAsync>d__13

Method: System.Void MoveNext()

Disassembly:
	0x0359AC1C LDR X1, [X8]
	0x0359AC20 BL 0x22109A8
	0x0359AC24 MOVN W8, 0x1
	0x0359AC28 STR W8, [X19], #0x8
	0x0359AC2C MOV X20, X0
	0x0359AC30 LDR X0, [X27]
	0x0359AC34 ADRP X21, 0xB9D000
	0x0359AC38 LDR W8, [X0 + 0xE0]
	0x0359AC3C LDR X21, [X21 + 0x138]
	0x0359AC40 CBNZ W8, 0x359AC48
	0x0359AC44 BL 0x1C16DFC
	0x0359AC48 LDR X2, [X21]
	0x0359AC4C MOV X0, X19
	0x0359AC50 MOV X1, X20
	0x0359AC54 BL 0x26322B0
	0x0359AC58 B 0x359AC94
	0x0359AC5C STR W31, [X19]
	0x0359AC60 LDR X8, [X31 + 0x18]
	0x0359AC64 STR X8, [X19 + 0x58]
	0x0359AC68 LDR X0, [X27]
	0x0359AC6C LDR W8, [X0 + 0xE0]
	0x0359AC70 CBNZ W8, 0x359AC78
	0x0359AC74 BL 0x1C16DFC
	0x0359AC78 ADRP X8, 0xB9D000
	0x0359AC7C LDR X8, [X8 + 0x130]
	0x0359AC80 ADD X0, X19, 0x8
	0x0359AC84 LDR X3, [X8]
	0x0359AC88 ADD X1, X31, 0x18
	0x0359AC8C MOV X2, X19
	0x0359AC90 BL 0x1FB8EE4
	0x0359AC94 LDP X20, X19, [X31 + 0x70]
	0x0359AC98 LDP X22, X21, [X31 + 0x60]
	0x0359AC9C LDP X24, X23, [X31 + 0x50]
	0x0359ACA0 LDP X26, X25, [X31 + 0x40]
	0x0359ACA4 LDP X28, X27, [X31 + 0x30]
	0x0359ACA8 LDP X29, X30, [X31 + 0x20]
	0x0359ACAC ADD X31, X31, 0x80
	0x0359ACB0 RET
	0x0359ACB4 BL 0x1C16F20
	0x0359ACB8 MOV X0, X23
	0x0359ACBC BL 0x1C16F18
	0x0359ACC0 BL 0x1C16F20
	0x0359ACC4 BL 0x1C16F20
	0x0359ACC8 BL 0x1C16F20
	0x0359ACCC BL 0x1C16F28
	0x0359ACD0 BL 0x1C16F20
	0x0359ACD4 BL 0x1C16F20
	0x0359ACD8 BL 0x1C16F20
	0x0359ACDC BL 0x1C16F20
	0x0359ACE0 BL 0x1C16F20
	0x0359ACE4 BL 0x1C16F20
	0x0359ACE8 BL 0x1C16F20
	0x0359ACEC BL 0x1C16F20
	0x0359ACF0 B 0x359AD74
	0x0359ACF4 B 0x359AD74
	0x0359ACF8 B 0x359AD74
	0x0359ACFC B 0x359AD74
	0x0359AD00 B 0x359AD74
	0x0359AD04 B 0x359AD74
	0x0359AD08 B 0x359AD74
	0x0359AD0C B 0x359AD74
	0x0359AD10 B 0x359AD74
	0x0359AD14 B 0x359AD74
	0x0359AD18 B 0x359AD74
	0x0359AD1C B 0x359AD74
	0x0359AD20 B 0x359AD74
	0x0359AD24 B 0x359AD74
	0x0359AD28 B 0x359AD74
	0x0359AD2C B 0x359AD74
	0x0359AD30 B 0x359AD74
	0x0359AD34 B 0x359AD74
	0x0359AD38 B 0x359AD74
	0x0359AD3C B 0x359AD74
	0x0359AD40 B 0x359AD74
	0x0359AD44 B 0x359AD74
	0x0359AD48 B 0x359AD74
	0x0359AD4C B 0x359AD74
	0x0359AD50 B 0x359AD74
	0x0359AD54 B 0x359AD74
	0x0359AD58 B 0x359AD74
	0x0359AD5C B 0x359AD74
	0x0359AD60 B 0x359AD74
	0x0359AD64 B 0x359AD74
	0x0359AD68 B 0x359AD74
	0x0359AD6C B 0x359AD74
	0x0359AD70 B 0x359AD74
	0x0359AD74 MOV X20, X1
	0x0359AD78 MOV X21, X0
	0x0359AD7C B 0x359AE2C
	0x0359AD80 B 0x359AD98
	0x0359AD84 B 0x359AD98
	0x0359AD88 B 0x359AD98
	0x0359AD8C MOV X21, X26
	0x0359AD90 B 0x359AD98
	0x0359AD94 B 0x359AD98
	0x0359AD98 CMP W1, 0x1
	0x0359AD9C B.NE 0x359ADB4
	0x0359ADA0 BL 0x3EB1AD0
	0x0359ADA4 LDR X23, [X0]
	0x0359ADA8 BL 0x3EB1AE0
	0x0359ADAC MOV W20, W31
	0x0359ADB0 B 0x359A8C4
	0x0359ADB4 MOV X21, X0
	0x0359ADB8 MOV X20, X1
	0x0359ADBC MOV X23, X31
	0x0359ADC0 TBZ X24, 0x1F, 0x359AE28
	0x0359ADC4 CBZ X22, 0x359AE28
	0x0359ADC8 ADRP X10, 0xB59000
	0x0359ADCC LDR X8, [X22]
	0x0359ADD0 LDR X10, [X10 + 0xE00]
	0x0359ADD4 LDRH W9, [X8 + 0x12E]
	0x0359ADD8 LDR X1, [X10]
	0x0359ADDC CBZ X9, 0x359AE00
	0x0359ADE0 LDR X10, [X8 + 0xB0]
	0x0359ADE4 ADD X10, X10, 0x8
	0x0359ADE8 LDUR X11, [X10 - 0x8]
	0x0359ADEC CMP X11, X1
	0x0359ADF0 B.EQ 0x359AE10
	0x0359ADF4 SUBS X9, X9, 0x1
	0x0359ADF8 ADD X10, X10, 0x10
	0x0359ADFC B.NE 0x359ADE8
	0x0359AE00 MOV X0, X22
	0x0359AE04 MOV W2, W31
	0x0359AE08 BL 0x1C5C788
	0x0359AE0C B 0x359AE1C
	0x0359AE10 LDRSW X9, [X10]
	0x0359AE14 ADD X8, X8, X9, 0x4, LSL
	0x0359AE18 ADD X0, X8, 0x138
	0x0359AE1C LDP X8, X1, [X0]
	0x0359AE20 MOV X0, X22
	0x0359AE24 BLR X8
	0x0359AE28 CBNZ X23, 0x359AEC4
	0x0359AE2C CMP W20, 0x1
	0x0359AE30 B.NE 0x359AEE4
	0x0359AE34 MOV X0, X21
	0x0359AE38 BL 0x3EB1AD0
	0x0359AE3C MOV X20, X0
	0x0359AE40 ADRP X0, 0xB59000
	0x0359AE44 LDR X0, [X0 + 0x7D0]
	0x0359AE48 BL 0x1C16D08
	0x0359AE4C LDR X8, [X20]
	0x0359AE50 LDR X1, [X8]
	0x0359AE54 BL 0x1C17270
	0x0359AE58 TBZ X0, 0x0, 0x359AEA4
	0x0359AE5C LDR X20, [X20]
	0x0359AE60 BL 0x3EB1AE0
	0x0359AE64 MOVN W8, 0x1
	0x0359AE68 STR W8, [X19], #0x8
	0x0359AE6C ADRP X0, 0xB9C000
	0x0359AE70 LDR X0, [X0 + 0xFA0]
	0x0359AE74 BL 0x1C16D08
	0x0359AE78 LDR W8, [X0 + 0xE0]
	0x0359AE7C CBNZ W8, 0x359AE84
	0x0359AE80 BL 0x1C16DFC
	0x0359AE84 ADRP X0, 0xB9D000
	0x0359AE88 LDR X0, [X0 + 0x150]
	0x0359AE8C BL 0x1C16D08
	0x0359AE90 MOV X2, X0
	0x0359AE94 MOV X0, X19
	0x0359AE98 MOV X1, X20
	0x0359AE9C BL 0x26324C8
	0x0359AEA0 B 0x359AC94
	0x0359AEA4 MOVZ W0, 0x8
	0x0359AEA8 BL 0x3EB1AF0
	0x0359AEAC LDR X8, [X20]
	0x0359AEB0 STR X8, [X0]
	0x0359AEB4 ADRP X1, 0x91A000
	0x0359AEB8 ADD X1, X1, 0xE58
	0x0359AEBC MOV X2, X31
	0x0359AEC0 BL 0x3EB1B00
	0x0359AEC4 MOV X0, X23
	0x0359AEC8 BL 0x1C16F18
	0x0359AECC MOV X20, X1
	0x0359AED0 MOV X21, X0
	0x0359AED4 TBNZ X24, 0x1F, 0x359ADC4
	0x0359AED8 B 0x359AE28
	0x0359AEDC MOV X21, X0
	0x0359AEE0 BL 0x3EB1AE0
	0x0359AEE4 MOV X0, X21
	0x0359AEE8 BL 0x1D2C690
	0x0359AEEC BL 0x1990590
	0x0359AEF0 STR X30, [X31 - 0x30]!
	0x0359AEF4 STP X22, X21, [X31 + 0x10]
	0x0359AEF8 STP X20, X19, [X31 + 0x20]
	0x0359AEFC ADRP X22, 0xE45000
	0x0359AF00 ADRP X21, 0xB9C000
	0x0359AF04 LDRB W8, [X22 + 0xFD2]
	0x0359AF08 LDR X21, [X21 + 0xFA0]
	0x0359AF0C MOV X19, X1
	0x0359AF10 MOV X20, X0
	0x0359AF14 TBNZ X8, 0x0, 0x359AF38
	0x0359AF18 ADRP X0, 0xB9D000
	0x0359AF1C LDR X0, [X0 + 0x158]
	0x0359AF20 BL 0x1C16CF4
	0x0359AF24 ADRP X0, 0xB9C000
	0x0359AF28 LDR X0, [X0 + 0xFA0]
	0x0359AF2C BL 0x1C16CF4
	0x0359AF30 MOVZ W8, 0x1
	0x0359AF34 STRB W8, [X22 + 0xFD2]
	0x0359AF38 LDR X0, [X21]
	0x0359AF3C ADRP X21, 0xB9D000
	0x0359AF40 LDR W8, [X0 + 0xE0]
	0x0359AF44 LDR X21, [X21 + 0x158]
	0x0359AF48 CBNZ W8, 0x359AF50
	0x0359AF4C BL 0x1C16DFC
	0x0359AF50 LDR X2, [X21]
	0x0359AF54 ADD X0, X20, 0x8
	0x0359AF58 MOV X1, X19
	0x0359AF5C LDP X20, X19, [X31 + 0x20]
	0x0359AF60 LDP X22, X21, [X31 + 0x10]
	0x0359AF64 LDR X30, [X31], #0x30
	0x0359AF68 B 0x2632228
	0x0359AF6C SUB X31, X31, 0x80
	0x0359AF70 STP X29, X30, [X31 + 0x20]
	0x0359AF74 STP X28, X27, [X31 + 0x30]
	0x0359AF78 STP X26, X25, [X31 + 0x40]
	0x0359AF7C STP X24, X23, [X31 + 0x50]
	0x0359AF80 STP X22, X21, [X31 + 0x60]
	0x0359AF84 STP X20, X19, [X31 + 0x70]
	0x0359AF88 ADRP X20, 0xE45000
	0x0359AF8C LDRB W8, [X20 + 0xFD3]
	0x0359AF90 MOV X19, X0
	0x0359AF94 TBNZ X8, 0x0, 0x359B0D8
	0x0359AF98 ADRP X0, 0xB9D000
	0x0359AF9C LDR X0, [X0 + 0x160]
	0x0359AFA0 BL 0x1C16CF4
	0x0359AFA4 ADRP X0, 0xB9D000
	0x0359AFA8 LDR X0, [X0 + 0x168]
	0x0359AFAC BL 0x1C16CF4
	0x0359AFB0 ADRP X0, 0xB9C000
	0x0359AFB4 LDR X0, [X0 + 0xFD0]
	0x0359AFB8 BL 0x1C16CF4
	0x0359AFBC ADRP X0, 0xB62000
	0x0359AFC0 LDR X0, [X0 + 0x8D8]
	0x0359AFC4 BL 0x1C16CF4
	0x0359AFC8 ADRP X0, 0xB5A000
	0x0359AFCC LDR X0, [X0 + 0x810]
	0x0359AFD0 BL 0x1C16CF4
	0x0359AFD4 ADRP X0, 0xB5A000
	0x0359AFD8 LDR X0, [X0 + 0x6C0]
	0x0359AFDC BL 0x1C16CF4
	0x0359AFE0 ADRP X0, 0xB5A000
	0x0359AFE4 LDR X0, [X0 + 0x6D0]
	0x0359AFE8 BL 0x1C16CF4
	0x0359AFEC ADRP X0, 0xB59000
	0x0359AFF0 LDR X0, [X0 + 0xE00]
	0x0359AFF4 BL 0x1C16CF4
	0x0359AFF8 ADRP X0, 0xB59000
	0x0359AFFC LDR X0, [X0 + 0xF70]
	0x0359B000 BL 0x1C16CF4
	0x0359B004 ADRP X0, 0xB58000
	0x0359B008 LDR X0, [X0 + 0xF78]
	0x0359B00C BL 0x1C16CF4
	0x0359B010 ADRP X0, 0xB58000
	0x0359B014 LDR X0, [X0 + 0xE18]
	0x0359B018 BL 0x1C16CF4
	0x0359B01C ADRP X0, 0xB9C000
	0x0359B020 LDR X0, [X0 + 0x58]
	0x0359B024 BL 0x1C16CF4
	0x0359B028 ADRP X0, 0xB9C000
	0x0359B02C LDR X0, [X0 + 0x170]
	0x0359B030 BL 0x1C16CF4
	0x0359B034 ADRP X0, 0xB58000
	0x0359B038 LDR X0, [X0 + 0xAC8]
	0x0359B03C BL 0x1C16CF4
	0x0359B040 ADRP X0, 0xB5B000
	0x0359B044 LDR X0, [X0 + 0x1E0]
	0x0359B048 BL 0x1C16CF4
	0x0359B04C ADRP X0, 0xB5B000
	0x0359B050 LDR X0, [X0 + 0x1F0]
	0x0359B054 BL 0x1C16CF4
	0x0359B058 ADRP X0, 0xB5B000
	0x0359B05C LDR X0, [X0 + 0x1F8]
	0x0359B060 BL 0x1C16CF4
	0x0359B064 ADRP X0, 0xB61000
	0x0359B068 LDR X0, [X0 + 0x3A0]
	0x0359B06C BL 0x1C16CF4
	0x0359B070 ADRP X0, 0xB5A000
	0x0359B074 LDR X0, [X0 + 0xA28]
	0x0359B078 BL 0x1C16CF4
	0x0359B07C ADRP X0, 0xB81000
	0x0359B080 LDR X0, [X0 + 0x4D0]
	0x0359B084 BL 0x1C16CF4
	0x0359B088 ADRP X0, 0xB61000
	0x0359B08C LDR X0, [X0 + 0x720]
	0x0359B090 BL 0x1C16CF4
	0x0359B094 ADRP X0, 0xB9C000
	0x0359B098 LDR X0, [X0 + 0x178]
	0x0359B09C BL 0x1C16CF4
	0x0359B0A0 ADRP X0, 0xB9C000
	0x0359B0A4 LDR X0, [X0 + 0x118]
	0x0359B0A8 BL 0x1C16CF4
	0x0359B0AC ADRP X0, 0xB93000
	0x0359B0B0 LDR X0, [X0 + 0x7D0]
	0x0359B0B4 BL 0x1C16CF4
	0x0359B0B8 ADRP X0, 0xB93000
	0x0359B0BC LDR X0, [X0 + 0x7D8]
	0x0359B0C0 BL 0x1C16CF4
	0x0359B0C4 ADRP X0, 0xB58000
	0x0359B0C8 LDR X0, [X0 + 0x988]
	0x0359B0CC BL 0x1C16CF4
	0x0359B0D0 MOVZ W8, 0x1
	0x0359B0D4 STRB W8, [X20 + 0xFD3]
	0x0359B0D8 STR X31, [X31 + 0x18]
	0x0359B0DC ADRP X27, 0xB9B000
	0x0359B0E0 LDR W24, [X19]
	0x0359B0E4 LDR X27, [X27 + 0xFD0]
	0x0359B0E8 CBZ W24, 0x359B170
	0x0359B0EC ADRP X8, 0xB9C000
	0x0359B0F0 ADRP X9, 0xB58000
	0x0359B0F4 LDR X8, [X8 + 0x178]
	0x0359B0F8 LDR X9, [X9 + 0x988]
	0x0359B0FC LDP X21, X20, [X19 + 0x20]
	0x0359B100 LDR X23, [X8]
	0x0359B104 LDR X26, [X9]
	0x0359B108 CBNZ X21, 0x359B128
	0x0359B10C ADRP X8, 0xB58000
	0x0359B110 LDR X8, [X8 + 0xAC8]
	0x0359B114 LDR X0, [X8]
	0x0359B118 MOV W1, W31
	0x0359B11C BL 0x1C16D6C
	0x0359B120 MOV X21, X0
	0x0359B124 CBZ X0, 0x359B62C
	0x0359B128 ADRP X10, 0xB58000
	0x0359B12C LDR X8, [X21]
	0x0359B130 LDR X10, [X10 + 0xF70]
	0x0359B134 LDRH W9, [X8 + 0x12E]
	0x0359B138 LDR X1, [X10]
	0x0359B13C CBZ X9, 0x359B160
	0x0359B140 LDR X10, [X8 + 0xB0]
	0x0359B144 ADD X10, X10, 0x8
	0x0359B148 LDUR X11, [X10 - 0x8]
	0x0359B14C CMP X11, X1
	0x0359B150 B.EQ 0x359B188
	0x0359B154 SUBS X9, X9, 0x1
	0x0359B158 ADD X10, X10, 0x10
	0x0359B15C B.NE 0x359B148
	0x0359B160 MOV X0, X21
	0x0359B164 MOV W2, W31
	0x0359B168 BL 0x1C5C788
	0x0359B16C B 0x359B194
	0x0359B170 LDR X8, [X19 + 0x48]
	0x0359B174 MOVN W9, 0x0
	0x0359B178 STR X8, [X31 + 0x18]
	0x0359B17C STR X31, [X19 + 0x48]
	0x0359B180 STR W9, [X19]
	0x0359B184 B 0x359B548
	0x0359B188 LDRSW X9, [X10]
	0x0359B18C ADD X8, X8, X9, 0x4, LSL
	0x0359B190 ADD X0, X8, 0x138
	0x0359B194 LDP X8, X1, [X0]
	0x0359B198 MOV X0, X21
	0x0359B19C BLR X8
	0x0359B1A0 STP X23, X20, [X31 + 0x8]
	0x0359B1A4 ADRP X28, 0xB58000
	0x0359B1A8 ADRP X29, 0xB58000
	0x0359B1AC ADRP X27, 0xB5A000
	0x0359B1B0 ADRP X20, 0xB9C000
	0x0359B1B4 ADRP X25, 0xB61000
	0x0359B1B8 LDR X28, [X28 + 0xE18]
	0x0359B1BC LDR X29, [X29 + 0xF78]
	0x0359B1C0 LDR X27, [X27 + 0xA28]
	0x0359B1C4 LDR X20, [X20 + 0x118]
	0x0359B1C8 LDR X25, [X25 + 0x720]
	0x0359B1CC MOV X22, X0
	0x0359B1D0 MOV X0, X26
	0x0359B1D4 CBZ X22, 0x359B5FC
	0x0359B1D8 LDR X8, [X22]
	0x0359B1DC LDR X1, [X28]
	0x0359B1E0 MOV X21, X0
	0x0359B1E4 LDRH W9, [X8 + 0x12E]
	0x0359B1E8 CBZ X9, 0x359B20C
	0x0359B1EC LDR X10, [X8 + 0xB0]
	0x0359B1F0 ADD X10, X10, 0x8
	0x0359B1F4 LDUR X11, [X10 - 0x8]
	0x0359B1F8 CMP X11, X1
	0x0359B1FC B.EQ 0x359B21C
	0x0359B200 SUBS X9, X9, 0x1
	0x0359B204 ADD X10, X10, 0x10
	0x0359B208 B.NE 0x359B1F4
	0x0359B20C MOV X0, X22
	0x0359B210 MOV W2, W31
	0x0359B214 BL 0x1C5C788
	0x0359B218 B 0x359B228
	0x0359B21C LDRSW X9, [X10]
	0x0359B220 ADD X8, X8, X9, 0x4, LSL
	0x0359B224 ADD X0, X8, 0x138
	0x0359B228 LDP X8, X1, [X0]
	0x0359B22C MOV X0, X22
	0x0359B230 BLR X8
	0x0359B234 TBZ X0, 0x0, 0x359B2CC
	0x0359B238 LDR X8, [X22]
	0x0359B23C LDR X1, [X29]
	0x0359B240 LDRH W9, [X8 + 0x12E]
	0x0359B244 CBZ X9, 0x359B268
	0x0359B248 LDR X10, [X8 + 0xB0]
	0x0359B24C ADD X10, X10, 0x8
	0x0359B250 LDUR X11, [X10 - 0x8]
	0x0359B254 CMP X11, X1
	0x0359B258 B.EQ 0x359B278
	0x0359B25C SUBS X9, X9, 0x1
	0x0359B260 ADD X10, X10, 0x10
	0x0359B264 B.NE 0x359B250
	0x0359B268 MOV X0, X22
	0x0359B26C MOV W2, W31
	0x0359B270 BL 0x1C5C788
	0x0359B274 B 0x359B284
	0x0359B278 LDRSW X9, [X10]
	0x0359B27C ADD X8, X8, X9, 0x4, LSL
	0x0359B280 ADD X0, X8, 0x138
	0x0359B284 LDP X8, X1, [X0]
	0x0359B288 MOV X0, X22
	0x0359B28C BLR X8
	0x0359B290 MOV X23, X0
	0x0359B294 LDR X0, [X27]
	0x0359B298 LDR W8, [X0 + 0xE0]
	0x0359B29C CBNZ W8, 0x359B2A4
	0x0359B2A0 BL 0x1C16DFC
	0x0359B2A4 MOV X0, X23
	0x0359B2A8 MOV X1, X31
	0x0359B2AC BL 0x3624D20
	0x0359B2B0 LDR X1, [X20]
	0x0359B2B4 LDR X3, [X25]
	0x0359B2B8 MOV X2, X0
	0x0359B2BC MOV X0, X21
	0x0359B2C0 MOV X4, X31
	0x0359B2C4 BL 0x32277C4
	0x0359B2C8 B 0x359B1D4
	0x0359B2CC MOV X23, X31
	0x0359B2D0 MOVZ W20, 0x6
	0x0359B2D4 ADRP X27, 0xB9B000
	0x0359B2D8 LDR X27, [X27 + 0xFD0]
	0x0359B2DC LDR X25, [X31 + 0x10]
	0x0359B2E0 TBZ X24, 0x1F, 0x359B348
	0x0359B2E4 CBZ X22, 0x359B348
	0x0359B2E8 ADRP X10, 0xB58000
	0x0359B2EC LDR X8, [X22]
	0x0359B2F0 LDR X10, [X10 + 0xE00]
	0x0359B2F4 LDRH W9, [X8 + 0x12E]
	0x0359B2F8 LDR X1, [X10]
	0x0359B2FC CBZ X9, 0x359B320
	0x0359B300 LDR X10, [X8 + 0xB0]
	0x0359B304 ADD X10, X10, 0x8
	0x0359B308 LDUR X11, [X10 - 0x8]
	0x0359B30C CMP X11, X1
	0x0359B310 B.EQ 0x359B330
	0x0359B314 SUBS X9, X9, 0x1
	0x0359B318 ADD X10, X10, 0x10
	0x0359B31C B.NE 0x359B308
	0x0359B320 MOV X0, X22
	0x0359B324 MOV W2, W31
	0x0359B328 BL 0x1C5C788
	0x0359B32C B 0x359B33C
	0x0359B330 LDRSW X9, [X10]
	0x0359B334 ADD X8, X8, X9, 0x4, LSL
	0x0359B338 ADD X0, X8, 0x138
	0x0359B33C LDP X8, X1, [X0]
	0x0359B340 MOV X0, X22
	0x0359B344 BLR X8
	0x0359B348 CBNZ X23, 0x359B600
	0x0359B34C CMP W20, 0x6
	0x0359B350 B.EQ 0x359B358
	0x0359B354 CBNZ W20, 0x359B5DC
	0x0359B358 CBZ X25, 0x359B608
	0x0359B35C LDR X0, [X25 + 0x20]
	0x0359B360 CBZ X0, 0x359B60C
	0x0359B364 MOV X1, X31
	0x0359B368 BL 0x361B448
	0x0359B36C ADRP X8, 0xB61000
	0x0359B370 LDR X8, [X8 + 0x8D8]
	0x0359B374 MOV X22, X0
	0x0359B378 LDR X0, [X8]
	0x0359B37C MOVZ W1, 0x1
	0x0359B380 BL 0x1C16D6C
	0x0359B384 MOV X1, X0
	0x0359B388 CBZ X1, 0x359B610
	0x0359B38C LDR W8, [X1 + 0x18]
	0x0359B390 CBZ W8, 0x359B614
	0x0359B394 MOVZ W8, 0x2F
	0x0359B398 STRH W8, [X1 + 0x20]
	0x0359B39C CBZ X22, 0x359B618
	0x0359B3A0 MOV X0, X22
	0x0359B3A4 MOV X2, X31
	0x0359B3A8 BL 0x322BC58
	0x0359B3AC LDR X1, [X31 + 0x8]
	0x0359B3B0 MOV X2, X31
	0x0359B3B4 BL 0x321B938
	0x0359B3B8 ADRP X8, 0xB61000
	0x0359B3BC LDR X23, [X25 + 0x20]
	0x0359B3C0 LDR X8, [X8 + 0x3A0]
	0x0359B3C4 MOV X22, X0
	0x0359B3C8 LDR X0, [X8]
	0x0359B3CC BL 0x1C16F10
	0x0359B3D0 MOV X20, X0
	0x0359B3D4 MOV X1, X23
	0x0359B3D8 MOV X2, X31
	0x0359B3DC BL 0x36281F8
	0x0359B3E0 CBZ X20, 0x359B61C
	0x0359B3E4 MOV X0, X20
	0x0359B3E8 MOV X1, X22
	0x0359B3EC MOV X2, X31
	0x0359B3F0 BL 0x36288CC
	0x0359B3F4 MOV X0, X20
	0x0359B3F8 MOV X1, X21
	0x0359B3FC MOV X2, X31
	0x0359B400 BL 0x3628980
	0x0359B404 MOV X0, X20
	0x0359B408 MOV X1, X31
	0x0359B40C BL 0x3628A38
	0x0359B410 ADRP X8, 0xB81000
	0x0359B414 ADRP X9, 0xB59000
	0x0359B418 LDR X8, [X8 + 0x4D0]
	0x0359B41C LDR X9, [X9 + 0x6D0]
	0x0359B420 MOV X20, X0
	0x0359B424 LDR X21, [X8]
	0x0359B428 LDR X0, [X9]
	0x0359B42C BL 0x1C16F10
	0x0359B430 ADRP X8, 0xB59000
	0x0359B434 LDR X8, [X8 + 0x6C0]
	0x0359B438 MOV X22, X0
	0x0359B43C LDR X1, [X8]
	0x0359B440 BL 0x2AA4804
	0x0359B444 ADRP X8, 0xB93000
	0x0359B448 LDR X1, [X19 + 0x30]
	0x0359B44C LDR X8, [X8 + 0x7D8]
	0x0359B450 LDR X0, [X8]
	0x0359B454 MOV X2, X31
	0x0359B458 BL 0x321B938
	0x0359B45C CBZ X22, 0x359B620
	0x0359B460 ADRP X8, 0xB93000
	0x0359B464 LDR X8, [X8 + 0x7D0]
	0x0359B468 ADRP X9, 0xB59000
	0x0359B46C LDR X9, [X9 + 0x810]
	0x0359B470 MOV X2, X0
	0x0359B474 LDR X1, [X8]
	0x0359B478 LDR X3, [X9]
	0x0359B47C MOV X0, X22
	0x0359B480 BL 0x2AA5098
	0x0359B484 LDR X24, [X25 + 0x10]
	0x0359B488 CBZ X24, 0x359B624
	0x0359B48C ADRP X10, 0xB9C000
	0x0359B490 LDR W23, [X25 + 0x18]
	0x0359B494 LDR X8, [X24]
	0x0359B498 LDP X26, X25, [X19 + 0x38]
	0x0359B49C LDR X10, [X10 + 0x58]
	0x0359B4A0 LDRH W9, [X8 + 0x12E]
	0x0359B4A4 LDR X1, [X10]
	0x0359B4A8 CBZ X9, 0x359B4CC
	0x0359B4AC LDR X10, [X8 + 0xB0]
	0x0359B4B0 ADD X10, X10, 0x8
	0x0359B4B4 LDUR X11, [X10 - 0x8]
	0x0359B4B8 CMP X11, X1

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+32], X29
	003 Move [X31+40], X30
	004 Move [X31+48], X28
	005 Move [X31+56], X27
	006 Move [X31+64], X26
	007 Move [X31+72], X25
	008 Move [X31+80], X24
	009 Move [X31+88], X23
	010 Move [X31+96], X22
	011 Move [X31+104], X21
	012 Move [X31+112], X20
	013 Move [X31+120], X19
	014 Move X20, 0xE46000
	015 Move W8, [X20+4047]
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {101}
	021 Move X0, 0xB9E000
	022 Move X0, [X0+248]
	023 Call 0x1C17CF4
	024 Move X0, 0xB9E000
	025 Move X0, [X0+256]
	026 Call 0x1C17CF4
	027 Move X0, 0xB9D000
	028 Move X0, [X0+3968]
	029 Call 0x1C17CF4
	030 Move X0, 0xB63000
	031 Move X0, [X0+2264]
	032 Call 0x1C17CF4
	033 Move X0, 0xB5B000
	034 Move X0, [X0+2064]
	035 Call 0x1C17CF4
	036 Move X0, 0xB5B000
	037 Move X0, [X0+1728]
	038 Call 0x1C17CF4
	039 Move X0, 0xB5B000
	040 Move X0, [X0+1744]
	041 Call 0x1C17CF4
	042 Move X0, 0xB5A000
	043 Move X0, [X0+3584]
	044 Call 0x1C17CF4
	045 Move X0, 0xB5A000
	046 Move X0, [X0+3952]
	047 Call 0x1C17CF4
	048 Move X0, 0xB5A000
	049 Move X0, [X0+3960]
	050 Call 0x1C17CF4
	051 Move X0, 0xB5A000
	052 Move X0, [X0+3608]
	053 Call 0x1C17CF4
	054 Move X0, 0xB9E000
	055 Move X0, [X0+88]
	056 Call 0x1C17CF4
	057 Move X0, 0xB9E000
	058 Move X0, [X0+264]
	059 Call 0x1C17CF4
	060 Move X0, 0xB5A000
	061 Move X0, [X0+2760]
	062 Call 0x1C17CF4
	063 Move X0, 0xB5D000
	064 Move X0, [X0+480]
	065 Call 0x1C17CF4
	066 Move X0, 0xB5D000
	067 Move X0, [X0+496]
	068 Call 0x1C17CF4
	069 Move X0, 0xB5D000
	070 Move X0, [X0+504]
	071 Call 0x1C17CF4
	072 Move X0, 0xB63000
	073 Move X0, [X0+928]
	074 Call 0x1C17CF4
	075 Move X0, 0xB5C000
	076 Move X0, [X0+2600]
	077 Call 0x1C17CF4
	078 Move X0, 0xB9E000
	079 Move X0, [X0+272]
	080 Call 0x1C17CF4
	081 Move X0, 0xB83000
	082 Move X0, [X0+1232]
	083 Call 0x1C17CF4
	084 Move X0, 0xB63000
	085 Move X0, [X0+1824]
	086 Call 0x1C17CF4
	087 Move X0, 0xB9E000
	088 Move X0, [X0+280]
	089 Call 0x1C17CF4
	090 Move X0, 0xB95000
	091 Move X0, [X0+2000]
	092 Call 0x1C17CF4
	093 Move X0, 0xB95000
	094 Move X0, [X0+2008]
	095 Call 0x1C17CF4
	096 Move X0, 0xB5A000
	097 Move X0, [X0+2440]
	098 Call 0x1C17CF4
	099 Move W8, 1
	100 Move [X20+4047], W8
	101 Move [X31+24], X31
	102 Move X27, 0xB9D000
	103 Move W24, [X19]
	104 Move X27, [X27+3968]
	105 Compare W24, 0
	106 JumpIfEqual {141}
	107 Move X8, 0xB9E000
	108 Move X9, 0xB5A000
	109 Move X8, [X8+272]
	110 Move X9, [X9+2440]
	111 Move X21, [X19+32]
	112 Move X20, [X19+40]
	113 Move X23, [X8]
	114 Move X26, [X9]
	115 Compare X21, 0
	116 JumpIfNotEqual {125}
	117 Move X8, 0xB5A000
	118 Move X8, [X8+2760]
	119 Move X0, [X8]
	120 Move W1, W31
	121 Call 0x1C17D6C
	122 Move X21, X0
	123 Compare X0, 0
	124 JumpIfEqual {474}
	125 Move X10, 0xB5A000
	126 Move X8, [X21]
	127 Move X10, [X10+3952]
	128 NotImplemented "Instruction LDRH not yet implemented."
	129 Move X1, [X10]
	130 Compare X9, 0
	131 JumpIfEqual {138}
	132 Move X10, [X8+176]
	133 Add X10, X10, 8
	134 NotImplemented "Instruction LDUR not yet implemented."
	135 NotImplemented "Instruction CMP not yet implemented."
	136 Subtract X9, X9, 1
	137 Add X10, X10, 16
	138 Move X0, X21
	139 Move W2, W31
	140 Call 0x1C5D788
	141 Move X8, [X19+72]
	142 Move TEMP, 0
	143 Not TEMP
	144 Move W9, TEMP
	145 Move [X31+24], X8
	146 Move [X19+72], X31
	147 Move [X19], W9
	148 NotImplemented "Instruction LDRSW not yet implemented."
	149 Add X8, X8, X9
	150 Add X0, X8, 312
	151 Move X8, [X0]
	152 Move X1, [X0+8]
	153 Move X0, X21
	154 NotImplemented "Instruction BLR not yet implemented."
	155 Move [X31+8], X23
	156 Move [X31+16], X20
	157 Move X28, 0xB5A000
	158 Move X29, 0xB5A000
	159 Move X27, 0xB5C000
	160 Move X20, 0xB9E000
	161 Move X25, 0xB63000
	162 Move X28, [X28+3608]
	163 Move X29, [X29+3960]
	164 Move X27, [X27+2600]
	165 Move X20, [X20+280]
	166 Move X25, [X25+1824]
	167 Move X22, X0
	168 Move X0, X26
	169 Compare X22, 0
	170 JumpIfEqual {462}
	171 Move X8, [X22]
	172 Move X1, [X28]
	173 Move X21, X0
	174 NotImplemented "Instruction LDRH not yet implemented."
	175 Compare X9, 0
	176 JumpIfEqual {183}
	177 Move X10, [X8+176]
	178 Add X10, X10, 8
	179 NotImplemented "Instruction LDUR not yet implemented."
	180 NotImplemented "Instruction CMP not yet implemented."
	181 Subtract X9, X9, 1
	182 Add X10, X10, 16
	183 Move X0, X22
	184 Move W2, W31
	185 Call 0x1C5D788
	186 NotImplemented "Instruction LDRSW not yet implemented."
	187 Add X8, X8, X9
	188 Add X0, X8, 312
	189 Move X8, [X0]
	190 Move X1, [X0+8]
	191 Move X0, X22
	192 NotImplemented "Instruction BLR not yet implemented."
	193 Move TEMP, X0
	194 And TEMP, TEMP, 1
	195 Compare TEMP, 1
	196 JumpIfNotEqual {233}
	197 Move X8, [X22]
	198 Move X1, [X29]
	199 NotImplemented "Instruction LDRH not yet implemented."
	200 Compare X9, 0
	201 JumpIfEqual {208}
	202 Move X10, [X8+176]
	203 Add X10, X10, 8
	204 NotImplemented "Instruction LDUR not yet implemented."
	205 NotImplemented "Instruction CMP not yet implemented."
	206 Subtract X9, X9, 1
	207 Add X10, X10, 16
	208 Move X0, X22
	209 Move W2, W31
	210 Call 0x1C5D788
	211 NotImplemented "Instruction LDRSW not yet implemented."
	212 Add X8, X8, X9
	213 Add X0, X8, 312
	214 Move X8, [X0]
	215 Move X1, [X0+8]
	216 Move X0, X22
	217 NotImplemented "Instruction BLR not yet implemented."
	218 Move X23, X0
	219 Move X0, [X27]
	220 Move W8, [X0+224]
	221 Compare W8, 0
	222 JumpIfNotEqual {224}
	223 Call 0x1C17DFC
	224 Move X0, X23
	225 Move X1, X31
	226 Call Uri.EscapeDataString, X0
	227 Move X1, [X20]
	228 Move X3, [X25]
	229 Move X2, X0
	230 Move X0, X21
	231 Move X4, X31
	232 Call String.Concat, X0, X1, X2, X3
	233 Move X23, X31
	234 Move W20, 6
	235 Move X27, 0xB9D000
	236 Move X27, [X27+3968]
	237 Move X25, [X31+16]
	238 Move TEMP, X24
	239 And TEMP, TEMP, -2147483648
	240 Compare TEMP, -2147483648
	241 JumpIfNotEqual {267}
	242 Compare X22, 0
	243 JumpIfEqual {267}
	244 Move X10, 0xB5A000
	245 Move X8, [X22]
	246 Move X10, [X10+3584]
	247 NotImplemented "Instruction LDRH not yet implemented."
	248 Move X1, [X10]
	249 Compare X9, 0
	250 JumpIfEqual {257}
	251 Move X10, [X8+176]
	252 Add X10, X10, 8
	253 NotImplemented "Instruction LDUR not yet implemented."
	254 NotImplemented "Instruction CMP not yet implemented."
	255 Subtract X9, X9, 1
	256 Add X10, X10, 16
	257 Move X0, X22
	258 Move W2, W31
	259 Call 0x1C5D788
	260 NotImplemented "Instruction LDRSW not yet implemented."
	261 Add X8, X8, X9
	262 Add X0, X8, 312
	263 Move X8, [X0]
	264 Move X1, [X0+8]
	265 Move X0, X22
	266 NotImplemented "Instruction BLR not yet implemented."
	267 Compare X23, 0
	268 JumpIfNotEqual {463}
	269 NotImplemented "Instruction CMP not yet implemented."
	270 Compare W20, 0
	271 JumpIfNotEqual {448}
	272 Compare X25, 0
	273 JumpIfEqual {465}
	274 Move X0, [X25+32]
	275 Compare X0, 0
	276 JumpIfEqual {466}
	277 Move X1, X31
	278 Call Uri.get_AbsolutePath, X0
	279 Move X8, 0xB62000
	280 Move X8, [X8+2264]
	281 Move X22, X0
	282 Move X0, [X8]
	283 Move W1, 1
	284 Call 0x1C17D6C
	285 Move X1, X0
	286 Compare X1, 0
	287 JumpIfEqual {467}
	288 Move W8, [X1+24]
	289 Compare W8, 0
	290 JumpIfEqual {468}
	291 Move W8, 47
	292 NotImplemented "Instruction STRH not yet implemented."
	293 Compare X22, 0
	294 JumpIfEqual {469}
	295 Move X0, X22
	296 Move X2, X31
	297 Call String.TrimEnd, X0, X1
	298 Move X1, [X31+8]
	299 Move X2, X31
	300 Call String.Concat, X0, X1
	301 Move X8, 0xB62000
	302 Move X23, [X25+32]
	303 Move X8, [X8+928]
	304 Move X22, X0
	305 Move X0, [X8]
	306 Call 0x1C17F10
	307 Move X20, X0
	308 Move X1, X23
	309 Move X2, X31
	310 Call UriBuilder..ctor, X0, X1
	311 Compare X20, 0
	312 JumpIfEqual {470}
	313 Move X0, X20
	314 Move X1, X22
	315 Move X2, X31
	316 Call UriBuilder.set_Path, X0, X1
	317 Move X0, X20
	318 Move X1, X21
	319 Move X2, X31
	320 Call UriBuilder.set_Query, X0, X1
	321 Move X0, X20
	322 Move X1, X31
	323 Call UriBuilder.get_Uri, X0
	324 Move X8, 0xB82000
	325 Move X9, 0xB5A000
	326 Move X8, [X8+1232]
	327 Move X9, [X9+1744]
	328 Move X20, X0
	329 Move X21, [X8]
	330 Move X0, [X9]
	331 Call 0x1C17F10
	332 Move X8, 0xB5A000
	333 Move X8, [X8+1728]
	334 Move X22, X0
	335 Move X1, [X8]
	336 Call Dictionary`2<Object, Object>..ctor, X0
	337 Move X8, 0xB94000
	338 Move X1, [X19+48]
	339 Move X8, [X8+2008]
	340 Move X0, [X8]
	341 Move X2, X31
	342 Call String.Concat, X0, X1
	343 Compare X22, 0
	344 JumpIfEqual {471}
	345 Move X8, 0xB94000
	346 Move X8, [X8+2000]
	347 Move X9, 0xB5A000
	348 Move X9, [X9+2064]
	349 Move X2, X0
	350 Move X1, [X8]
	351 Move X3, [X9]
	352 Move X0, X22
	353 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	354 Move X24, [X25+16]
	355 Compare X24, 0
	356 JumpIfEqual {472}
	357 Move X10, 0xB9D000
	358 Move W23, [X25+24]
	359 Move X8, [X24]
	360 Move X26, [X19+56]
	361 Move X25, [X19+64]
	362 Move X10, [X10+88]
	363 NotImplemented "Instruction LDRH not yet implemented."
	364 Move X1, [X10]
	365 Compare X9, 0
	366 JumpIfEqual {373}
	367 Move X10, [X8+176]
	368 Add X10, X10, 8
	369 NotImplemented "Instruction LDUR not yet implemented."
	370 NotImplemented "Instruction CMP not yet implemented."
	371 Subtract X9, X9, 1
	372 Add X10, X10, 16
	373 Move W2, 3
	374 Move X0, X24
	375 Call 0x1C5D788
	376 Move W9, [X10]
	377 Add W9, W9, 3
	378 Add X8, X8, W9
	379 Add X0, X8, 312
	380 Move X8, [X0]
	381 Move X9, [X0+8]
	382 Move X0, X24
	383 Move X1, X21
	384 Move X2, X20
	385 Move X3, X22
	386 Move X4, X31
	387 Move W5, W23
	388 Move X6, X26
	389 Move X7, X25
	390 Move [X31], X9
	391 NotImplemented "Instruction BLR not yet implemented."
	392 Compare X0, 0
	393 JumpIfEqual {473}
	394 Move X8, 0xB5C000
	395 Move X8, [X8+504]
	396 Move X1, [X8]
	397 Call Task`1<Object>.GetAwaiter, X0
	398 Move X8, 0xB5C000
	399 Move X8, [X8+496]
	400 Move [X31+24], X0
	401 Move X1, [X8]
	402 Add X0, X31, 24
	403 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	404 Move TEMP, X0
	405 And TEMP, TEMP, 1
	406 Compare TEMP, 1
	407 JumpIfNotEqual {433}
	408 Move X8, 0xB5C000
	409 Move X8, [X8+480]
	410 Add X0, X31, 24
	411 Move X1, [X8]
	412 Call TaskAwaiter`1<Object>.GetResult, X0
	413 Move X8, 0xB9D000
	414 Move X8, [X8+264]
	415 Move X1, [X8]
	416 Call 0x22119A8, X0
	417 Move TEMP, 1
	418 Not TEMP
	419 Move W8, TEMP
	420 Move [X19+8], W8
	421 Move X20, X0
	422 Move X0, [X27]
	423 Move X21, 0xB9D000
	424 Move W8, [X0+224]
	425 Move X21, [X21+256]
	426 Compare W8, 0
	427 JumpIfNotEqual {429}
	428 Call 0x1C17DFC
	429 Move X2, [X21]
	430 Move X0, X19
	431 Move X1, X20
	432 Call AsyncTaskMethodBuilder`1<Object>.SetResult, X0, X1
	433 Move [X19], W31
	434 Move X8, [X31+24]
	435 Move [X19+72], X8
	436 Move X0, [X27]
	437 Move W8, [X0+224]
	438 Compare W8, 0
	439 JumpIfNotEqual {441}
	440 Call 0x1C17DFC
	441 Move X8, 0xB9D000
	442 Move X8, [X8+248]
	443 Add X0, X19, 8
	444 Move X3, [X8]
	445 Add X1, X31, 24
	446 Move X2, X19
	447 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	448 Move X20, [X31+112]
	449 Move X19, [X31+120]
	450 Move X22, [X31+96]
	451 Move X21, [X31+104]
	452 Move X24, [X31+80]
	453 Move X23, [X31+88]
	454 Move X26, [X31+64]
	455 Move X25, [X31+72]
	456 Move X28, [X31+48]
	457 Move X27, [X31+56]
	458 Move X29, [X31+32]
	459 Move X30, [X31+40]
	460 Add X31, X31, 128
	461 Return 
	462 Call 0x1C17F20
	463 Move X0, X23
	464 Call 0x1C17F18
	465 Call 0x1C17F20
	466 Call 0x1C17F20
	467 Call 0x1C17F20
	468 Call 0x1C17F28
	469 Call 0x1C17F20
	470 Call 0x1C17F20
	471 Call 0x1C17F20
	472 Call 0x1C17F20
	473 Call 0x1C17F20
	474 Call 0x1C17F20
	475 Move X20, X1
	476 Move X21, X0
	477 Move X21, X26
	478 NotImplemented "Instruction CMP not yet implemented."
	479 Call 0x3EB2AD0
	480 Move X23, [X0]
	481 Call 0x3EB2AE0
	482 Move W20, W31
	483 Move X21, X0
	484 Move X20, X1
	485 Move X23, X31
	486 Move TEMP, X24
	487 And TEMP, TEMP, -2147483648
	488 Compare TEMP, -2147483648
	489 JumpIfNotEqual {515}
	490 Compare X22, 0
	491 JumpIfEqual {515}
	492 Move X10, 0xB59000
	493 Move X8, [X22]
	494 Move X10, [X10+3584]
	495 NotImplemented "Instruction LDRH not yet implemented."
	496 Move X1, [X10]
	497 Compare X9, 0
	498 JumpIfEqual {505}
	499 Move X10, [X8+176]
	500 Add X10, X10, 8
	501 NotImplemented "Instruction LDUR not yet implemented."
	502 NotImplemented "Instruction CMP not yet implemented."
	503 Subtract X9, X9, 1
	504 Add X10, X10, 16
	505 Move X0, X22
	506 Move W2, W31
	507 Call 0x1C5D788
	508 NotImplemented "Instruction LDRSW not yet implemented."
	509 Add X8, X8, X9
	510 Add X0, X8, 312
	511 Move X8, [X0]
	512 Move X1, [X0+8]
	513 Move X0, X22
	514 NotImplemented "Instruction BLR not yet implemented."
	515 Compare X23, 0
	516 JumpIfNotEqual {559}
	517 NotImplemented "Instruction CMP not yet implemented."
	518 Move X0, X21
	519 Call 0x3EB2AD0
	520 Move X20, X0
	521 Move X0, 0xB59000
	522 Move X0, [X0+2000]
	523 Call 0x1C17D08
	524 Move X8, [X20]
	525 Move X1, [X8]
	526 Call 0x1C18270
	527 Move TEMP, X0
	528 And TEMP, TEMP, 1
	529 Compare TEMP, 1
	530 JumpIfNotEqual {551}
	531 Move X20, [X20]
	532 Call 0x3EB2AE0
	533 Move TEMP, 1
	534 Not TEMP
	535 Move W8, TEMP
	536 Move [X19+8], W8
	537 Move X0, 0xB9C000
	538 Move X0, [X0+3968]
	539 Call 0x1C17D08
	540 Move W8, [X0+224]
	541 Compare W8, 0
	542 JumpIfNotEqual {544}
	543 Call 0x1C17DFC
	544 Move X0, 0xB9D000
	545 Move X0, [X0+288]
	546 Call 0x1C17D08
	547 Move X2, X0
	548 Move X0, X19
	549 Move X1, X20
	550 Call AsyncTaskMethodBuilder`1<Object>.SetException, X0, X1
	551 Move W0, 8
	552 Call 0x3EB2AF0
	553 Move X8, [X20]
	554 Move [X0], X8
	555 Move X1, 0x91A000
	556 Add X1, X1, 3672
	557 Move X2, X31
	558 Call 0x3EB2B00
	559 Move X0, X23
	560 Call 0x1C17F18
	561 Move X20, X1
	562 Move X21, X0
	563 Move TEMP, X24
	564 And TEMP, TEMP, -2147483648
	565 Compare TEMP, -2147483648
	566 JumpIfEqual {490}
	567 Move X21, X0
	568 Call 0x3EB2AE0
	569 Move X0, X21
	570 Call 0x1D2D690
	571 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x0359B4BC B.EQ 0x359B4DC
	0x0359B4C0 SUBS X9, X9, 0x1
	0x0359B4C4 ADD X10, X10, 0x10
	0x0359B4C8 B.NE 0x359B4B4
	0x0359B4CC MOVZ W2, 0x3
	0x0359B4D0 MOV X0, X24
	0x0359B4D4 BL 0x1C5C788
	0x0359B4D8 B 0x359B4EC
	0x0359B4DC LDR W9, [X10]
	0x0359B4E0 ADD W9, W9, 0x3
	0x0359B4E4 ADD X8, X8, W9, 0x4, SXTW
	0x0359B4E8 ADD X0, X8, 0x138
	0x0359B4EC LDP X8, X9, [X0]
	0x0359B4F0 MOV X0, X24
	0x0359B4F4 MOV X1, X21
	0x0359B4F8 MOV X2, X20
	0x0359B4FC MOV X3, X22
	0x0359B500 MOV X4, X31
	0x0359B504 MOV W5, W23
	0x0359B508 MOV X6, X26
	0x0359B50C MOV X7, X25
	0x0359B510 STR X9, [X31]
	0x0359B514 BLR X8
	0x0359B518 CBZ X0, 0x359B628
	0x0359B51C ADRP X8, 0xB5B000
	0x0359B520 LDR X8, [X8 + 0x1F8]
	0x0359B524 LDR X1, [X8]
	0x0359B528 BL 0x269F5D0
	0x0359B52C ADRP X8, 0xB5B000
	0x0359B530 LDR X8, [X8 + 0x1F0]
	0x0359B534 STR X0, [X31 + 0x18]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xE45000
	007 Move X21, 0xB9C000
	008 Move W8, [X22+4048]
	009 Move X21, [X21+3968]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xB9D000
	017 Move X0, [X0+296]
	018 Call 0x1C17CF4
	019 Move X0, 0xB9C000
	020 Move X0, [X0+3968]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+4048], W8
	024 Move X0, [X21]
	025 Move X21, 0xB9D000
	026 Move W8, [X0+224]
	027 Move X21, [X21+296]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X2, [X21]
	032 Add X0, X20, 8
	033 Move X1, X19
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Call AsyncTaskMethodBuilder`1<Object>.SetStateMachine, X0, X1
	040 Return 

