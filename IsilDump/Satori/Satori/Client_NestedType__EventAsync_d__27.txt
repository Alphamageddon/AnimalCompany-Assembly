Type: Satori.Client/<EventAsync>d__27

Method: System.Void MoveNext()

Disassembly:
	0x035A1D60 MOV X20, X1
	0x035A1D64 MOV X21, X0
	0x035A1D68 TBNZ X25, 0x1F, 0x35A1C64
	0x035A1D6C B 0x35A1CC8
	0x035A1D70 MOV X21, X0
	0x035A1D74 BL 0x3EB1AE0
	0x035A1D78 MOV X0, X21
	0x035A1D7C BL 0x1D2C690
	0x035A1D80 BL 0x1990590
	0x035A1D84 STR X30, [X31 - 0x30]!
	0x035A1D88 STP X22, X21, [X31 + 0x10]
	0x035A1D8C STP X20, X19, [X31 + 0x20]
	0x035A1D90 ADRP X21, 0xE3F000
	0x035A1D94 ADRP X22, 0xB55000
	0x035A1D98 LDRB W8, [X21 + 0x1]
	0x035A1D9C LDR X22, [X22 + 0x280]
	0x035A1DA0 MOV X19, X1
	0x035A1DA4 MOV X20, X0
	0x035A1DA8 TBNZ X8, 0x0, 0x35A1DC0
	0x035A1DAC ADRP X0, 0xB55000
	0x035A1DB0 LDR X0, [X0 + 0x280]
	0x035A1DB4 BL 0x1C16CF4
	0x035A1DB8 MOVZ W8, 0x1
	0x035A1DBC STRB W8, [X21 + 0x1]
	0x035A1DC0 LDR X0, [X22]
	0x035A1DC4 LDR W8, [X0 + 0xE0]
	0x035A1DC8 CBNZ W8, 0x35A1DD0
	0x035A1DCC BL 0x1C16DFC
	0x035A1DD0 ADD X0, X20, 0x8
	0x035A1DD4 MOV X1, X19
	0x035A1DD8 LDP X20, X19, [X31 + 0x20]
	0x035A1DDC LDP X22, X21, [X31 + 0x10]
	0x035A1DE0 MOV X2, X31
	0x035A1DE4 LDR X30, [X31], #0x30
	0x035A1DE8 B 0x32C477C
	0x035A1DEC SUB X31, X31, 0x30
	0x035A1DF0 STP X30, X21, [X31 + 0x10]
	0x035A1DF4 STP X20, X19, [X31 + 0x20]
	0x035A1DF8 ADRP X20, 0xE3F000
	0x035A1DFC LDRB W8, [X20 + 0x2]
	0x035A1E00 MOV X19, X0
	0x035A1E04 TBNZ X8, 0x0, 0x35A1E58
	0x035A1E08 ADRP X0, 0xB96000
	0x035A1E0C LDR X0, [X0 + 0x428]
	0x035A1E10 BL 0x1C16CF4
	0x035A1E14 ADRP X0, 0xB96000
	0x035A1E18 LDR X0, [X0 + 0x100]
	0x035A1E1C BL 0x1C16CF4
	0x035A1E20 ADRP X0, 0xB95000
	0x035A1E24 LDR X0, [X0 + 0xF80]
	0x035A1E28 BL 0x1C16CF4
	0x035A1E2C ADRP X0, 0xB96000
	0x035A1E30 LDR X0, [X0 + 0x430]
	0x035A1E34 BL 0x1C16CF4
	0x035A1E38 ADRP X0, 0xB96000
	0x035A1E3C LDR X0, [X0 + 0x438]
	0x035A1E40 BL 0x1C16CF4
	0x035A1E44 ADRP X0, 0xB96000
	0x035A1E48 LDR X0, [X0 + 0x440]
	0x035A1E4C BL 0x1C16CF4
	0x035A1E50 MOVZ W8, 0x1
	0x035A1E54 STRB W8, [X20 + 0x2]
	0x035A1E58 STR X31, [X31 + 0x8]
	0x035A1E5C ADRP X21, 0xB95000
	0x035A1E60 LDR W8, [X19]
	0x035A1E64 LDR X21, [X21 + 0xF80]
	0x035A1E68 CBZ W8, 0x35A1EF0
	0x035A1E6C LDR X0, [X19 + 0x20]
	0x035A1E70 CBZ X0, 0x35A1F5C
	0x035A1E74 LDR X1, [X19 + 0x28]
	0x035A1E78 LDP X3, X4, [X19 + 0x30]
	0x035A1E7C MOV X2, X31
	0x035A1E80 BL 0x359EC98
	0x035A1E84 CBZ X0, 0x35A1F60
	0x035A1E88 ADRP X8, 0xB96000
	0x035A1E8C LDR X8, [X8 + 0x440]
	0x035A1E90 LDR X1, [X8]
	0x035A1E94 BL 0x269F5D0
	0x035A1E98 ADRP X8, 0xB96000
	0x035A1E9C LDR X8, [X8 + 0x438]
	0x035A1EA0 STR X0, [X31 + 0x8]
	0x035A1EA4 LDR X1, [X8]
	0x035A1EA8 ADD X0, X31, 0x8
	0x035A1EAC BL 0x2677430
	0x035A1EB0 TBNZ X0, 0x0, 0x35A1F04
	0x035A1EB4 STR W31, [X19]
	0x035A1EB8 LDR X8, [X31 + 0x8]
	0x035A1EBC STR X8, [X19 + 0x40]
	0x035A1EC0 LDR X0, [X21]
	0x035A1EC4 LDR W8, [X0 + 0xE0]
	0x035A1EC8 CBNZ W8, 0x35A1ED0
	0x035A1ECC BL 0x1C16DFC
	0x035A1ED0 ADRP X8, 0xB96000
	0x035A1ED4 LDR X8, [X8 + 0x428]
	0x035A1ED8 ADD X0, X19, 0x8
	0x035A1EDC LDR X3, [X8]
	0x035A1EE0 ADD X1, X31, 0x8
	0x035A1EE4 MOV X2, X19
	0x035A1EE8 BL 0x1FBEE7C
	0x035A1EEC B 0x35A1F4C
	0x035A1EF0 LDR X8, [X19 + 0x40]
	0x035A1EF4 MOVN W9, 0x0
	0x035A1EF8 STR X8, [X31 + 0x8]
	0x035A1EFC STR X31, [X19 + 0x40]
	0x035A1F00 STR W9, [X19]
	0x035A1F04 ADRP X8, 0xB96000
	0x035A1F08 LDR X8, [X8 + 0x430]
	0x035A1F0C ADD X0, X31, 0x8
	0x035A1F10 LDR X1, [X8]
	0x035A1F14 BL 0x2677474
	0x035A1F18 MOVN W8, 0x1
	0x035A1F1C STR W8, [X19], #0x8
	0x035A1F20 MOV X20, X0
	0x035A1F24 LDR X0, [X21]
	0x035A1F28 ADRP X21, 0xB96000
	0x035A1F2C LDR W8, [X0 + 0xE0]
	0x035A1F30 LDR X21, [X21 + 0x100]
	0x035A1F34 CBNZ W8, 0x35A1F3C
	0x035A1F38 BL 0x1C16DFC
	0x035A1F3C LDR X2, [X21]
	0x035A1F40 MOV X0, X19
	0x035A1F44 MOV X1, X20
	0x035A1F48 BL 0x26322B0
	0x035A1F4C LDP X20, X19, [X31 + 0x20]
	0x035A1F50 LDP X30, X21, [X31 + 0x10]
	0x035A1F54 ADD X31, X31, 0x30
	0x035A1F58 RET
	0x035A1F5C BL 0x1C16F20
	0x035A1F60 BL 0x1C16F20
	0x035A1F64 B 0x35A1F78
	0x035A1F68 B 0x35A1F78
	0x035A1F6C B 0x35A1F78
	0x035A1F70 B 0x35A1F78
	0x035A1F74 B 0x35A1F78
	0x035A1F78 MOV X20, X0
	0x035A1F7C CMP W1, 0x1
	0x035A1F80 B.NE 0x35A201C
	0x035A1F84 MOV X0, X20
	0x035A1F88 BL 0x3EB1AD0
	0x035A1F8C MOV X20, X0
	0x035A1F90 ADRP X0, 0xB52000
	0x035A1F94 LDR X0, [X0 + 0x7D0]
	0x035A1F98 BL 0x1C16D08
	0x035A1F9C LDR X8, [X20]
	0x035A1FA0 LDR X1, [X8]
	0x035A1FA4 BL 0x1C17270
	0x035A1FA8 TBZ X0, 0x0, 0x35A1FF4
	0x035A1FAC LDR X20, [X20]
	0x035A1FB0 BL 0x3EB1AE0
	0x035A1FB4 MOVN W8, 0x1
	0x035A1FB8 STR W8, [X19], #0x8
	0x035A1FBC ADRP X0, 0xB95000
	0x035A1FC0 LDR X0, [X0 + 0xF80]
	0x035A1FC4 BL 0x1C16D08
	0x035A1FC8 LDR W8, [X0 + 0xE0]
	0x035A1FCC CBNZ W8, 0x35A1FD4
	0x035A1FD0 BL 0x1C16DFC
	0x035A1FD4 ADRP X0, 0xB96000
	0x035A1FD8 LDR X0, [X0 + 0x120]
	0x035A1FDC BL 0x1C16D08
	0x035A1FE0 MOV X2, X0
	0x035A1FE4 MOV X0, X19
	0x035A1FE8 MOV X1, X20
	0x035A1FEC BL 0x26324C8
	0x035A1FF0 B 0x35A1F4C
	0x035A1FF4 MOVZ W0, 0x8
	0x035A1FF8 BL 0x3EB1AF0
	0x035A1FFC LDR X8, [X20]
	0x035A2000 STR X8, [X0]
	0x035A2004 ADRP X1, 0x912000
	0x035A2008 ADD X1, X1, 0xE58
	0x035A200C MOV X2, X31
	0x035A2010 BL 0x3EB1B00
	0x035A2014 MOV X20, X0
	0x035A2018 BL 0x3EB1AE0
	0x035A201C MOV X0, X20
	0x035A2020 BL 0x1D2C690
	0x035A2024 BL 0x1990590
	0x035A2028 STR X30, [X31 - 0x30]!
	0x035A202C STP X22, X21, [X31 + 0x10]
	0x035A2030 STP X20, X19, [X31 + 0x20]
	0x035A2034 ADRP X22, 0xE3E000
	0x035A2038 ADRP X21, 0xB94000
	0x035A203C LDRB W8, [X22 + 0x3]
	0x035A2040 LDR X21, [X21 + 0xF80]
	0x035A2044 MOV X19, X1
	0x035A2048 MOV X20, X0
	0x035A204C TBNZ X8, 0x0, 0x35A2070
	0x035A2050 ADRP X0, 0xB95000
	0x035A2054 LDR X0, [X0 + 0x128]
	0x035A2058 BL 0x1C16CF4
	0x035A205C ADRP X0, 0xB94000
	0x035A2060 LDR X0, [X0 + 0xF80]
	0x035A2064 BL 0x1C16CF4
	0x035A2068 MOVZ W8, 0x1
	0x035A206C STRB W8, [X22 + 0x3]
	0x035A2070 LDR X0, [X21]
	0x035A2074 ADRP X21, 0xB95000
	0x035A2078 LDR W8, [X0 + 0xE0]
	0x035A207C LDR X21, [X21 + 0x128]
	0x035A2080 CBNZ W8, 0x35A2088
	0x035A2084 BL 0x1C16DFC
	0x035A2088 LDR X2, [X21]
	0x035A208C ADD X0, X20, 0x8
	0x035A2090 MOV X1, X19
	0x035A2094 LDP X20, X19, [X31 + 0x20]
	0x035A2098 LDP X22, X21, [X31 + 0x10]
	0x035A209C LDR X30, [X31], #0x30
	0x035A20A0 B 0x2632228
	0x035A20A4 SUB X31, X31, 0x50
	0x035A20A8 STR X30, [X31 + 0x10]
	0x035A20AC STP X24, X23, [X31 + 0x20]
	0x035A20B0 STP X22, X21, [X31 + 0x30]
	0x035A20B4 STP X20, X19, [X31 + 0x40]
	0x035A20B8 ADRP X20, 0xE3E000
	0x035A20BC LDRB W8, [X20 + 0x4]
	0x035A20C0 MOV X19, X0
	0x035A20C4 TBNZ X8, 0x0, 0x35A216C
	0x035A20C8 ADRP X0, 0xB95000
	0x035A20CC LDR X0, [X0 + 0x448]
	0x035A20D0 BL 0x1C16CF4
	0x035A20D4 ADRP X0, 0xB95000
	0x035A20D8 LDR X0, [X0 + 0x450]
	0x035A20DC BL 0x1C16CF4
	0x035A20E0 ADRP X0, 0xB95000
	0x035A20E4 LDR X0, [X0 + 0x100]
	0x035A20E8 BL 0x1C16CF4
	0x035A20EC ADRP X0, 0xB94000
	0x035A20F0 LDR X0, [X0 + 0xF80]
	0x035A20F4 BL 0x1C16CF4
	0x035A20F8 ADRP X0, 0xB95000
	0x035A20FC LDR X0, [X0 + 0x340]
	0x035A2100 BL 0x1C16CF4
	0x035A2104 ADRP X0, 0xB52000
	0x035A2108 LDR X0, [X0 + 0x9F0]
	0x035A210C BL 0x1C16CF4
	0x035A2110 ADRP X0, 0xB95000
	0x035A2114 LDR X0, [X0 + 0x290]
	0x035A2118 BL 0x1C16CF4
	0x035A211C ADRP X0, 0xB95000
	0x035A2120 LDR X0, [X0 + 0x430]
	0x035A2124 BL 0x1C16CF4
	0x035A2128 ADRP X0, 0xB95000
	0x035A212C LDR X0, [X0 + 0x3A8]
	0x035A2130 BL 0x1C16CF4
	0x035A2134 ADRP X0, 0xB95000
	0x035A2138 LDR X0, [X0 + 0x438]
	0x035A213C BL 0x1C16CF4
	0x035A2140 ADRP X0, 0xB95000
	0x035A2144 LDR X0, [X0 + 0x3B0]
	0x035A2148 BL 0x1C16CF4
	0x035A214C ADRP X0, 0xB95000
	0x035A2150 LDR X0, [X0 + 0x440]
	0x035A2154 BL 0x1C16CF4
	0x035A2158 ADRP X0, 0xB95000
	0x035A215C LDR X0, [X0 + 0x3B8]
	0x035A2160 BL 0x1C16CF4
	0x035A2164 MOVZ W8, 0x1
	0x035A2168 STRB W8, [X20 + 0x4]
	0x035A216C STR X31, [X31 + 0x18]
	0x035A2170 STP X31, X31, [X31]
	0x035A2174 ADRP X23, 0xB94000
	0x035A2178 ADRP X24, 0xB95000
	0x035A217C LDR W8, [X19]
	0x035A2180 LDR X20, [X19 + 0x20]
	0x035A2184 LDR X23, [X23 + 0xF80]
	0x035A2188 LDR X24, [X24 + 0x290]
	0x035A218C CBZ W8, 0x35A21B0
	0x035A2190 CMP W8, 0x1
	0x035A2194 B.NE 0x35A21DC
	0x035A2198 LDR X8, [X19 + 0x50]
	0x035A219C MOVN W9, 0x0
	0x035A21A0 STR X8, [X31]
	0x035A21A4 STR X31, [X19 + 0x50]
	0x035A21A8 STR W9, [X19]
	0x035A21AC B 0x35A244C
	0x035A21B0 LDR X8, [X19 + 0x48]
	0x035A21B4 MOVN W9, 0x0
	0x035A21B8 STR X8, [X31 + 0x8]
	0x035A21BC STR X31, [X19 + 0x48]
	0x035A21C0 STR W9, [X19]
	0x035A21C4 ADRP X8, 0xB95000
	0x035A21C8 LDR X8, [X8 + 0x3A8]
	0x035A21CC ADD X0, X31, 0x8
	0x035A21D0 LDR X1, [X8]
	0x035A21D4 BL 0x2677474
	0x035A21D8 B 0x35A239C
	0x035A21DC CBZ X20, 0x35A24FC
	0x035A21E0 LDRB W8, [X20 + 0x10]
	0x035A21E4 CBZ W8, 0x35A23A0
	0x035A21E8 LDR X21, [X19 + 0x28]
	0x035A21EC CBZ X21, 0x35A2500
	0x035A21F0 LDR X8, [X21]
	0x035A21F4 LDR X1, [X24]
	0x035A21F8 LDRH W9, [X8 + 0x12E]
	0x035A21FC CBZ X9, 0x35A2220
	0x035A2200 LDR X10, [X8 + 0xB0]
	0x035A2204 ADD X10, X10, 0x8
	0x035A2208 LDUR X11, [X10 - 0x8]
	0x035A220C CMP X11, X1
	0x035A2210 B.EQ 0x35A2230
	0x035A2214 SUBS X9, X9, 0x1
	0x035A2218 ADD X10, X10, 0x10
	0x035A221C B.NE 0x35A2208
	0x035A2220 MOVZ W2, 0x5
	0x035A2224 MOV X0, X21
	0x035A2228 BL 0x1C5C788
	0x035A222C B 0x35A2240
	0x035A2230 LDR W9, [X10]
	0x035A2234 ADD W9, W9, 0x5
	0x035A2238 ADD X8, X8, W9, 0x4, SXTW
	0x035A223C ADD X0, X8, 0x138
	0x035A2240 LDP X8, X1, [X0]
	0x035A2244 MOV X0, X21
	0x035A2248 BLR X8
	0x035A224C MOV X1, X31
	0x035A2250 BL 0x32277A8
	0x035A2254 TBNZ X0, 0x0, 0x35A239C
	0x035A2258 ADRP X8, 0xB52000
	0x035A225C LDR X8, [X8 + 0x9F0]
	0x035A2260 LDR X21, [X19 + 0x28]
	0x035A2264 LDR X0, [X8]
	0x035A2268 LDR W8, [X0 + 0xE0]
	0x035A226C CBNZ W8, 0x35A2274
	0x035A2270 BL 0x1C16DFC
	0x035A2274 MOV X0, X31
	0x035A2278 BL 0x33616A4
	0x035A227C ADRP X22, 0xB95000
	0x035A2280 LDR X22, [X22 + 0x340]
	0x035A2284 MOV X8, X0
	0x035A2288 STR X8, [X31 + 0x18]
	0x035A228C LDR X0, [X22]
	0x035A2290 LDR W8, [X0 + 0xE0]
	0x035A2294 CBNZ W8, 0x35A22A0
	0x035A2298 BL 0x1C16DFC
	0x035A229C LDR X0, [X22]
	0x035A22A0 LDR X8, [X0 + 0xB8]
	0x035A22A4 LDR X1, [X8]
	0x035A22A8 ADD X0, X31, 0x18
	0x035A22AC MOV X2, X31
	0x035A22B0 BL 0x335FC68
	0x035A22B4 CBZ X21, 0x35A2504
	0x035A22B8 LDR X8, [X21]
	0x035A22BC LDR X1, [X24]
	0x035A22C0 MOV X22, X0
	0x035A22C4 LDRH W9, [X8 + 0x12E]
	0x035A22C8 CBZ X9, 0x35A22EC
	0x035A22CC LDR X10, [X8 + 0xB0]
	0x035A22D0 ADD X10, X10, 0x8
	0x035A22D4 LDUR X11, [X10 - 0x8]
	0x035A22D8 CMP X11, X1
	0x035A22DC B.EQ 0x35A22FC
	0x035A22E0 SUBS X9, X9, 0x1
	0x035A22E4 ADD X10, X10, 0x10
	0x035A22E8 B.NE 0x35A22D4
	0x035A22EC MOVZ W2, 0x7
	0x035A22F0 MOV X0, X21
	0x035A22F4 BL 0x1C5C788
	0x035A22F8 B 0x35A230C
	0x035A22FC LDR W9, [X10]
	0x035A2300 ADD W9, W9, 0x7
	0x035A2304 ADD X8, X8, W9, 0x4, SXTW
	0x035A2308 ADD X0, X8, 0x138
	0x035A230C LDP X8, X2, [X0]
	0x035A2310 MOV X0, X21
	0x035A2314 MOV X1, X22
	0x035A2318 BLR X8
	0x035A231C TBZ X0, 0x0, 0x35A239C
	0x035A2320 LDP X1, X2, [X19 + 0x28]
	0x035A2324 LDR X3, [X19 + 0x38]
	0x035A2328 MOV X0, X20
	0x035A232C BL 0x359F740
	0x035A2330 CBZ X0, 0x35A2508
	0x035A2334 ADRP X8, 0xB95000
	0x035A2338 LDR X8, [X8 + 0x3B8]
	0x035A233C LDR X1, [X8]
	0x035A2340 BL 0x269F5D0
	0x035A2344 ADRP X8, 0xB95000
	0x035A2348 LDR X8, [X8 + 0x3B0]
	0x035A234C STR X0, [X31 + 0x8]
	0x035A2350 LDR X1, [X8]
	0x035A2354 ADD X0, X31, 0x8
	0x035A2358 BL 0x2677430
	0x035A235C TBNZ X0, 0x0, 0x35A21C4
	0x035A2360 STR W31, [X19]
	0x035A2364 LDR X8, [X31 + 0x8]
	0x035A2368 STR X8, [X19 + 0x48]
	0x035A236C LDR X0, [X23]
	0x035A2370 LDR W8, [X0 + 0xE0]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+32], X24
	004 Move [X31+40], X23
	005 Move [X31+48], X22
	006 Move [X31+56], X21
	007 Move [X31+64], X20
	008 Move [X31+72], X19
	009 Move X20, 0xE3F000
	010 Move W8, [X20+4094]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {57}
	016 Move X0, 0xB97000
	017 Move X0, [X0+976]
	018 Call 0x1C17CF4
	019 Move X0, 0xB97000
	020 Move X0, [X0+984]
	021 Call 0x1C17CF4
	022 Move X0, 0xB97000
	023 Move X0, [X0+992]
	024 Call 0x1C17CF4
	025 Move X0, 0xB56000
	026 Move X0, [X0+640]
	027 Call 0x1C17CF4
	028 Move X0, 0xB97000
	029 Move X0, [X0+832]
	030 Call 0x1C17CF4
	031 Move X0, 0xB54000
	032 Move X0, [X0+2544]
	033 Call 0x1C17CF4
	034 Move X0, 0xB97000
	035 Move X0, [X0+656]
	036 Call 0x1C17CF4
	037 Move X0, 0xB97000
	038 Move X0, [X0+1000]
	039 Call 0x1C17CF4
	040 Move X0, 0xB97000
	041 Move X0, [X0+1008]
	042 Call 0x1C17CF4
	043 Move X0, 0xB96000
	044 Move X0, [X0+3648]
	045 Call 0x1C17CF4
	046 Move X0, 0xB97000
	047 Move X0, [X0+936]
	048 Call 0x1C17CF4
	049 Move X0, 0xB97000
	050 Move X0, [X0+944]
	051 Call 0x1C17CF4
	052 Move X0, 0xB97000
	053 Move X0, [X0+952]
	054 Call 0x1C17CF4
	055 Move W8, 1
	056 Move [X20+4094], W8
	057 Move [X31+24], X31
	058 Move [X31], X31
	059 Move [X31+8], X31
	060 Move X23, 0xB56000
	061 Move X24, 0xB97000
	062 Move W8, [X19]
	063 Move X20, [X19+32]
	064 Move X23, [X23+640]
	065 Move X24, [X24+656]
	066 Compare W8, 0
	067 JumpIfEqual {76}
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Move X8, [X19+80]
	070 Move TEMP, 0
	071 Not TEMP
	072 Move W9, TEMP
	073 Move [X31], X8
	074 Move [X19+80], X31
	075 Move [X19], W9
	076 Move X8, [X19+72]
	077 Move TEMP, 0
	078 Not TEMP
	079 Move W9, TEMP
	080 Move [X31+8], X8
	081 Move [X19+72], X31
	082 Move [X19], W9
	083 Move X8, 0xB97000
	084 Move X8, [X8+936]
	085 Add X0, X31, 8
	086 Move X1, [X8]
	087 Call TaskAwaiter`1<Object>.GetResult, X0
	088 Compare X20, 0
	089 JumpIfEqual {357}
	090 Move W8, [X20+16]
	091 Compare W8, 0
	092 JumpIfEqual {215}
	093 Move X21, [X19+40]
	094 Compare X21, 0
	095 JumpIfEqual {358}
	096 Move X8, [X21]
	097 Move X1, [X24]
	098 NotImplemented "Instruction LDRH not yet implemented."
	099 Compare X9, 0
	100 JumpIfEqual {107}
	101 Move X10, [X8+176]
	102 Add X10, X10, 8
	103 NotImplemented "Instruction LDUR not yet implemented."
	104 NotImplemented "Instruction CMP not yet implemented."
	105 Subtract X9, X9, 1
	106 Add X10, X10, 16
	107 Move W2, 5
	108 Move X0, X21
	109 Call 0x1C5D788
	110 Move W9, [X10]
	111 Add W9, W9, 5
	112 Add X8, X8, W9
	113 Add X0, X8, 312
	114 Move X8, [X0]
	115 Move X1, [X0+8]
	116 Move X0, X21
	117 NotImplemented "Instruction BLR not yet implemented."
	118 Move X1, X31
	119 Call String.IsNullOrEmpty, X0
	120 Move TEMP, X0
	121 And TEMP, TEMP, 1
	122 Compare TEMP, 1
	123 JumpIfEqual {215}
	124 Move X8, 0xB54000
	125 Move X8, [X8+2544]
	126 Move X21, [X19+40]
	127 Move X0, [X8]
	128 Move W8, [X0+224]
	129 Compare W8, 0
	130 JumpIfNotEqual {132}
	131 Call 0x1C17DFC
	132 Move X0, X31
	133 Call DateTime.get_UtcNow
	134 Move X22, 0xB97000
	135 Move X22, [X22+832]
	136 Move X8, X0
	137 Move [X31+24], X8
	138 Move X0, [X22]
	139 Move W8, [X0+224]
	140 Compare W8, 0
	141 JumpIfNotEqual {144}
	142 Call 0x1C17DFC
	143 Move X0, [X22]
	144 Move X8, [X0+184]
	145 Move X1, [X8]
	146 Add X0, X31, 24
	147 Move X2, X31
	148 Call DateTime.Add, X0, X1
	149 Compare X21, 0
	150 JumpIfEqual {359}
	151 Move X8, [X21]
	152 Move X1, [X24]
	153 Move X22, X0
	154 NotImplemented "Instruction LDRH not yet implemented."
	155 Compare X9, 0
	156 JumpIfEqual {163}
	157 Move X10, [X8+176]
	158 Add X10, X10, 8
	159 NotImplemented "Instruction LDUR not yet implemented."
	160 NotImplemented "Instruction CMP not yet implemented."
	161 Subtract X9, X9, 1
	162 Add X10, X10, 16
	163 Move W2, 7
	164 Move X0, X21
	165 Call 0x1C5D788
	166 Move W9, [X10]
	167 Add W9, W9, 7
	168 Add X8, X8, W9
	169 Add X0, X8, 312
	170 Move X8, [X0]
	171 Move X2, [X0+8]
	172 Move X0, X21
	173 Move X1, X22
	174 NotImplemented "Instruction BLR not yet implemented."
	175 Move TEMP, X0
	176 And TEMP, TEMP, 1
	177 Compare TEMP, 1
	178 JumpIfNotEqual {215}
	179 Move X1, [X19+40]
	180 Move X2, [X19+48]
	181 Move X3, [X19+56]
	182 Move X0, X20
	183 Call Client.SessionRefreshAsync, X0, X1, X2
	184 Compare X0, 0
	185 JumpIfEqual {360}
	186 Move X8, 0xB97000
	187 Move X8, [X8+952]
	188 Move X1, [X8]
	189 Call Task`1<Object>.GetAwaiter, X0
	190 Move X8, 0xB96000
	191 Move X8, [X8+944]
	192 Move [X31+8], X0
	193 Move X1, [X8]
	194 Add X0, X31, 8
	195 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	196 Move TEMP, X0
	197 And TEMP, TEMP, 1
	198 Compare TEMP, 1
	199 JumpIfEqual {83}
	200 Move [X19], W31
	201 Move X8, [X31+8]
	202 Move [X19+72], X8
	203 Move X0, [X23]
	204 Move W8, [X0+224]
	205 Compare W8, 0
	206 JumpIfNotEqual {208}
	207 Call 0x1C17DFC
	208 Move X8, 0xB96000
	209 Move X8, [X8+984]
	210 Add X0, X19, 8
	211 Move X3, [X8]
	212 Add X1, X31, 8
	213 Move X2, X19
	214 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	215 Move X8, 0xB96000
	216 Move X8, [X8+976]
	217 Move X0, [X8]
	218 Call 0x1C17F10
	219 Move X21, X0
	220 Move X1, X31
	221 Call Object..ctor, X0
	222 Move X8, 0xB95000
	223 Move X8, [X8+3648]
	224 Move X0, [X8]
	225 Call 0x1C17F10
	226 Move X8, 0xB96000
	227 Move X8, [X8+1008]
	228 Move X22, X0
	229 Move X1, [X8]
	230 Call List`1<Object>..ctor, X0
	231 Move X0, [X19+64]
	232 Compare X0, 0
	233 JumpIfEqual {349}
	234 Call Event.ToApiEvent, X0
	235 Move X1, X0
	236 Compare X22, 0
	237 JumpIfEqual {350}
	238 Move X9, 0xB96000
	239 Move X9, [X9+1000]
	240 Move W10, [X22+28]
	241 Move X8, [X22+16]
	242 Move X9, [X9]
	243 Add W10, W10, 1
	244 Move [X22+28], W10
	245 Compare X8, 0
	246 JumpIfEqual {351}
	247 NotImplemented "Instruction LDRSW not yet implemented."
	248 Move W11, [X8+24]
	249 NotImplemented "Instruction CMP not yet implemented."
	250 Add W9, W10, 1
	251 Add X8, X8, X10
	252 Move [X22+24], W9
	253 Move [X8+32], X1
	254 Move X8, [X9+32]
	255 Move X8, [X8+192]
	256 Move X2, [X8+112]
	257 Move X0, X22
	258 Call List`1<Object>.AddWithResize, X0, X1
	259 Compare X21, 0
	260 JumpIfEqual {352}
	261 Move [X21+16], X22
	262 Compare X20, 0
	263 JumpIfEqual {353}
	264 Move X22, [X19+40]
	265 Compare X22, 0
	266 JumpIfEqual {354}
	267 Move X8, [X22]
	268 Move X20, [X20+64]
	269 Move X1, [X24]
	270 NotImplemented "Instruction LDRH not yet implemented."
	271 Compare X9, 0
	272 JumpIfEqual {279}
	273 Move X10, [X8+176]
	274 Add X10, X10, 8
	275 NotImplemented "Instruction LDUR not yet implemented."
	276 NotImplemented "Instruction CMP not yet implemented."
	277 Subtract X9, X9, 1
	278 Add X10, X10, 16
	279 Move X0, X22
	280 Move W2, W31
	281 Call 0x1C5D788
	282 NotImplemented "Instruction LDRSW not yet implemented."
	283 Add X8, X8, X9
	284 Add X0, X8, 312
	285 Move X8, [X0]
	286 Move X1, [X0+8]
	287 Move X0, X22
	288 NotImplemented "Instruction BLR not yet implemented."
	289 Move X1, X0
	290 Compare X20, 0
	291 JumpIfEqual {355}
	292 Move X3, [X19+48]
	293 Move X4, [X19+56]
	294 Move X0, X20
	295 Move X2, X21
	296 Call ApiClient.SatoriEventAsync, X0, X1, X2, X3
	297 Compare X0, 0
	298 JumpIfEqual {356}
	299 Move X1, X31
	300 Call Task.GetAwaiter, X0
	301 Move [X31], X0
	302 Add X0, X31, 0
	303 Move X1, X31
	304 Call TaskAwaiter.get_IsCompleted, X0
	305 Move TEMP, X0
	306 And TEMP, TEMP, 1
	307 Compare TEMP, 1
	308 JumpIfNotEqual {324}
	309 Add X0, X31, 0
	310 Move X1, X31
	311 Call TaskAwaiter.GetResult, X0
	312 Move TEMP, 1
	313 Not TEMP
	314 Move W8, TEMP
	315 Move [X19+8], W8
	316 Move X0, [X23]
	317 Move W8, [X0+224]
	318 Compare W8, 0
	319 JumpIfNotEqual {321}
	320 Call 0x1C17DFC
	321 Move X0, X19
	322 Move X1, X31
	323 Call AsyncTaskMethodBuilder.SetResult, X0
	324 Move W8, 1
	325 Move [X19], W8
	326 Move X8, [X31]
	327 Move [X19+80], X8
	328 Move X0, [X23]
	329 Move W8, [X0+224]
	330 Compare W8, 0
	331 JumpIfNotEqual {333}
	332 Call 0x1C17DFC
	333 Move X8, 0xB96000
	334 Move X8, [X8+992]
	335 Add X0, X19, 8
	336 Move X3, [X8]
	337 Add X1, X31, 0
	338 Move X2, X19
	339 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	340 Move X20, [X31+64]
	341 Move X19, [X31+72]
	342 Move X22, [X31+48]
	343 Move X21, [X31+56]
	344 Move X24, [X31+32]
	345 Move X23, [X31+40]
	346 Move X30, [X31+16]
	347 Add X31, X31, 80
	348 Return 
	349 Call 0x1C17F20
	350 Call 0x1C17F20
	351 Call 0x1C17F20
	352 Call 0x1C17F20
	353 Call 0x1C17F20
	354 Call 0x1C17F20
	355 Call 0x1C17F20
	356 Call 0x1C17F20
	357 Call 0x1C17F20
	358 Call 0x1C17F20
	359 Call 0x1C17F20
	360 Call 0x1C17F20
	361 Move X20, X0
	362 NotImplemented "Instruction CMP not yet implemented."
	363 Move X0, X20
	364 Call 0x3EB2AD0
	365 Move X20, X0
	366 Move X0, 0xB52000
	367 Move X0, [X0+2000]
	368 Call 0x1C17D08
	369 Move X8, [X20]
	370 Move X1, [X8]
	371 Call 0x1C18270
	372 Move TEMP, X0
	373 And TEMP, TEMP, 1
	374 Compare TEMP, 1
	375 JumpIfNotEqual {393}
	376 Move X20, [X20]
	377 Call 0x3EB2AE0
	378 Move TEMP, 1
	379 Not TEMP
	380 Move W8, TEMP
	381 Move [X19+8], W8
	382 Move X0, 0xB55000
	383 Move X0, [X0+640]
	384 Call 0x1C17D08
	385 Move W8, [X0+224]
	386 Compare W8, 0
	387 JumpIfNotEqual {389}
	388 Call 0x1C17DFC
	389 Move X0, X19
	390 Move X1, X20
	391 Move X2, X31
	392 Call AsyncTaskMethodBuilder.SetException, X0, X1
	393 Move W0, 8
	394 Call 0x3EB2AF0
	395 Move X8, [X20]
	396 Move [X0], X8
	397 Move X1, 0x913000
	398 Add X1, X1, 3672
	399 Move X2, X31
	400 Call 0x3EB2B00
	401 Move X20, X0
	402 Call 0x3EB2AE0
	403 Move X0, X20
	404 Call 0x1D2D690
	405 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x035A2430 ADRP X8, 0xB95000
	0x035A2434 LDR X8, [X8 + 0x438]
	0x035A2438 STR X0, [X31]
	0x035A243C LDR X1, [X8]
	0x035A2440 ADD X0, X31, 0x0
	0x035A2444 BL 0x2677430
	0x035A2448 TBZ X0, 0x0, 0x35A2498
	0x035A244C ADRP X8, 0xB95000
	0x035A2450 LDR X8, [X8 + 0x430]
	0x035A2454 ADD X0, X31, 0x0
	0x035A2458 LDR X1, [X8]
	0x035A245C BL 0x2677474
	0x035A2460 MOVN W8, 0x1
	0x035A2464 STR W8, [X19], #0x8
	0x035A2468 MOV X20, X0
	0x035A246C LDR X0, [X23]
	0x035A2470 ADRP X21, 0xB95000
	0x035A2474 LDR W8, [X0 + 0xE0]
	0x035A2478 LDR X21, [X21 + 0x100]
	0x035A247C CBNZ W8, 0x35A2484
	0x035A2480 BL 0x1C16DFC
	0x035A2484 LDR X2, [X21]
	0x035A2488 MOV X0, X19
	0x035A248C MOV X1, X20
	0x035A2490 BL 0x26322B0
	0x035A2494 B 0x35A24D4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xE3E000
	007 Move X22, 0xB55000
	008 Move W8, [X21+4095]
	009 Move X22, [X22+640]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xB55000
	017 Move X0, [X0+640]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+4095], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Add X0, X20, 8
	027 Move X1, X19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X2, X31
	033 Move X30, [X31+48]
	034 Call AsyncTaskMethodBuilder.SetStateMachine, X0, X1
	035 Return 

