Type: Satori.ApiGetMessageListResponse

Method: System.String get_CacheableCursor()

Disassembly:
	0x035943F8 LDR X20, [X20 + 0x988]
	0x035943FC LDRB W8, [X25 + 0xFA7]

ISIL:
	001 Move X0, [X0+16]
	002 Return X0

Method: System.Void set_CacheableCursor(System.String value)

Disassembly:
	0x03594400 LDR X24, [X24 + 0xE10]
	0x03594404 LDR X26, [X26 + 0x838]

ISIL:
	001 Move [X0+16], X1
	002 Return 

Method: System.Collections.Generic.IEnumerable`1<Satori.IApiMessage> get_Messages()

Disassembly:
	0x03594408 LDR X23, [X23 + 0xDE0]
	0x0359440C LDR X22, [X22 + 0xD88]
	0x03594410 LDR X21, [X21 + 0xEE8]
	0x03594414 MOV X19, X0
	0x03594418 TBNZ X8, 0x0, 0x3594544
	0x0359441C ADRP X0, 0xB5F000
	0x03594420 LDR X0, [X0 + 0xE00]
	0x03594424 BL 0x1C16CF4
	0x03594428 ADRP X0, 0xB62000
	0x0359442C LDR X0, [X0 + 0x190]
	0x03594430 BL 0x1C16CF4
	0x03594434 ADRP X0, 0xB62000
	0x03594438 LDR X0, [X0 + 0x198]
	0x0359443C BL 0x1C16CF4
	0x03594440 ADRP X0, 0xB5F000
	0x03594444 LDR X0, [X0 + 0xE18]
	0x03594448 BL 0x1C16CF4
	0x0359444C ADRP X0, 0xB62000
	0x03594450 LDR X0, [X0 + 0x1B0]
	0x03594454 BL 0x1C16CF4
	0x03594458 ADRP X0, 0xB62000
	0x0359445C LDR X0, [X0 + 0x1B8]
	0x03594460 BL 0x1C16CF4
	0x03594464 ADRP X0, 0xB5F000
	0x03594468 LDR X0, [X0 + 0xAC8]
	0x0359446C BL 0x1C16CF4
	0x03594470 ADRP X0, 0xBA2000
	0x03594474 LDR X0, [X0 + 0xE18]
	0x03594478 BL 0x1C16CF4
	0x0359447C ADRP X0, 0xB8C000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xE4C000
	005 Move W8, [X20+3998]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0xBA3000
	012 Move X0, [X0+3744]
	013 Call 0x1C17CF4
	014 Move X0, 0xBA3000
	015 Move X0, [X0+3752]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3998], W8
	019 Move X19, [X19+24]
	020 Compare X19, 0
	021 JumpIfNotEqual {32}
	022 Move X8, 0xBA3000
	023 Move X8, [X8+3752]
	024 Move X0, [X8]
	025 Call 0x1C17F10
	026 Move X8, 0xBA3000
	027 Move X8, [X8+3744]
	028 Move W1, W31
	029 Move X19, X0
	030 Move X2, [X8]
	031 Call List`1<Object>..ctor, X0, X1
	032 Move X0, X19
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move X30, [X31+32]
	036 Return X0

Method: System.Collections.Generic.List`1<Satori.ApiMessage> get__messages()

Disassembly:
	0x03594480 LDR X0, [X0 + 0x360]
	0x03594484 BL 0x1C16CF4

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void set__messages(System.Collections.Generic.List`1<Satori.ApiMessage> value)

Disassembly:
	0x03594488 ADRP X0, 0xBA2000
	0x0359448C LDR X0, [X0 + 0xEE8]

ISIL:
	001 Move [X0+24], X1
	002 Return 

Method: System.String get_NextCursor()

Disassembly:
	0x03594490 BL 0x1C16CF4
	0x03594494 ADRP X0, 0xB8C000

ISIL:
	001 Move X0, [X0+32]
	002 Return X0

Method: System.Void set_NextCursor(System.String value)

Disassembly:
	0x03594498 LDR X0, [X0 + 0xFB8]
	0x0359449C BL 0x1C16CF4

ISIL:
	001 Move [X0+32], X1
	002 Return 

Method: System.String get_PrevCursor()

Disassembly:
	0x035944A0 ADRP X0, 0xB99000
	0x035944A4 LDR X0, [X0 + 0xD88]

ISIL:
	001 Move X0, [X0+40]
	002 Return X0

Method: System.Void set_PrevCursor(System.String value)

Disassembly:
	0x035944A8 BL 0x1C16CF4
	0x035944AC ADRP X0, 0xBA2000

ISIL:
	001 Move [X0+40], X1
	002 Return 

Method: System.String ToString()

Disassembly:
	0x035944B0 LDR X0, [X0 + 0xEF0]
	0x035944B4 BL 0x1C16CF4
	0x035944B8 ADRP X0, 0xB6A000
	0x035944BC LDR X0, [X0 + 0x6D8]
	0x035944C0 BL 0x1C16CF4
	0x035944C4 ADRP X0, 0xB9A000
	0x035944C8 LDR X0, [X0 + 0x100]
	0x035944CC BL 0x1C16CF4
	0x035944D0 ADRP X0, 0xB99000
	0x035944D4 LDR X0, [X0 + 0xDE0]
	0x035944D8 BL 0x1C16CF4
	0x035944DC ADRP X0, 0xB5F000
	0x035944E0 LDR X0, [X0 + 0x838]
	0x035944E4 BL 0x1C16CF4
	0x035944E8 ADRP X0, 0xB99000
	0x035944EC LDR X0, [X0 + 0xDE8]
	0x035944F0 BL 0x1C16CF4
	0x035944F4 ADRP X0, 0xBA2000
	0x035944F8 LDR X0, [X0 + 0xEF8]
	0x035944FC BL 0x1C16CF4
	0x03594500 ADRP X0, 0xBA2000
	0x03594504 LDR X0, [X0 + 0xF00]
	0x03594508 BL 0x1C16CF4
	0x0359450C ADRP X0, 0xBA2000
	0x03594510 LDR X0, [X0 + 0xE30]
	0x03594514 BL 0x1C16CF4
	0x03594518 ADRP X0, 0xB5F000
	0x0359451C LDR X0, [X0 + 0x988]
	0x03594520 BL 0x1C16CF4
	0x03594524 ADRP X0, 0xB5F000
	0x03594528 LDR X0, [X0 + 0x848]
	0x0359452C BL 0x1C16CF4
	0x03594530 ADRP X0, 0xBA2000
	0x03594534 LDR X0, [X0 + 0xE10]
	0x03594538 BL 0x1C16CF4
	0x0359453C MOVZ W8, 0x1
	0x03594540 STRB W8, [X25 + 0xFA7]
	0x03594544 LDR X0, [X20]
	0x03594548 LDR X2, [X19 + 0x10]
	0x0359454C LDR X1, [X24]
	0x03594550 LDR X3, [X26]
	0x03594554 MOV X4, X31
	0x03594558 BL 0x32277C4
	0x0359455C LDR X2, [X19 + 0x18]
	0x03594560 LDR X1, [X23]
	0x03594564 LDR X3, [X26]
	0x03594568 MOV X4, X31
	0x0359456C BL 0x32277C4
	0x03594570 LDR X2, [X19 + 0x20]
	0x03594574 LDR X1, [X22]
	0x03594578 LDR X3, [X26]
	0x0359457C MOV X4, X31
	0x03594580 BL 0x32277C4
	0x03594584 LDR X2, [X19 + 0x28]
	0x03594588 LDR X1, [X21]
	0x0359458C LDR X3, [X26]
	0x03594590 MOV X4, X31
	0x03594594 BL 0x32277C4
	0x03594598 LDR X8, [X20]
	0x0359459C MOV X20, X0
	0x035945A0 MOV X0, X19
	0x035945A4 STR X8, [X31 + 0x8]
	0x035945A8 BL 0x35942DC
	0x035945AC CBZ X0, 0x3594910
	0x035945B0 ADRP X10, 0xB62000
	0x035945B4 LDR X8, [X0]
	0x035945B8 LDR X10, [X10 + 0x190]
	0x035945BC MOV X21, X0
	0x035945C0 STR X20, [X31]
	0x035945C4 LDRH W9, [X8 + 0x12E]
	0x035945C8 LDR X1, [X10]
	0x035945CC CBZ X9, 0x35945F0
	0x035945D0 LDR X10, [X8 + 0xB0]
	0x035945D4 ADD X10, X10, 0x8
	0x035945D8 LDUR X11, [X10 - 0x8]
	0x035945DC CMP X11, X1
	0x035945E0 B.EQ 0x3594600
	0x035945E4 SUBS X9, X9, 0x1
	0x035945E8 ADD X10, X10, 0x10
	0x035945EC B.NE 0x35945D8
	0x035945F0 MOV X0, X21
	0x035945F4 MOV W2, W31
	0x035945F8 BL 0x1C5C788
	0x035945FC B 0x359460C
	0x03594600 LDRSW X9, [X10]
	0x03594604 ADD X8, X8, X9, 0x4, LSL
	0x03594608 ADD X0, X8, 0x138
	0x0359460C ADRP X27, 0xB5F000

ISIL:
	001 Move [X31-96], X30
	002 Move [X31+16], X28
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X28, 0xE4C000
	013 Move X20, 0xB60000
	014 Move X27, 0xB9A000
	015 Move X21, 0xB60000
	016 Move X26, 0xBA3000
	017 Move X24, 0xB9A000
	018 Move X25, 0xB9A000
	019 Move X23, 0xB9A000
	020 Move X22, 0xB9A000
	021 Move X20, [X20+2440]
	022 Move X27, [X27+3656]
	023 Move X21, [X21+2104]
	024 Move W8, [X28+3999]
	025 Move X26, [X26+3760]
	026 Move X24, [X24+3672]
	027 Move X25, [X25+3408]
	028 Move X23, [X23+3680]
	029 Move X22, [X22+3688]
	030 Move X19, X0
	031 Move TEMP, X8
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfEqual {61}
	035 Move X0, 0xBA3000
	036 Move X0, [X0+3760]
	037 Call 0x1C17CF4
	038 Move X0, 0xB9A000
	039 Move X0, [X0+3672]
	040 Call 0x1C17CF4
	041 Move X0, 0xB9A000
	042 Move X0, [X0+3656]
	043 Call 0x1C17CF4
	044 Move X0, 0xB60000
	045 Move X0, [X0+2104]
	046 Call 0x1C17CF4
	047 Move X0, 0xB9A000
	048 Move X0, [X0+3688]
	049 Call 0x1C17CF4
	050 Move X0, 0xB9A000
	051 Move X0, [X0+3680]
	052 Call 0x1C17CF4
	053 Move X0, 0xB9A000
	054 Move X0, [X0+3408]
	055 Call 0x1C17CF4
	056 Move X0, 0xB60000
	057 Move X0, [X0+2440]
	058 Call 0x1C17CF4
	059 Move W8, 1
	060 Move [X28+3999], W8
	061 Move X2, [X19+16]
	062 Move X0, [X20]
	063 Move X1, [X27]
	064 Move X3, [X21]
	065 Move X4, X31
	066 Call String.Concat, X0, X1, X2, X3
	067 Move X20, X0
	068 Move X0, X19
	069 Call ApiGetMessageListResponse.get_Messages, X0
	070 Move X8, [X21]
	071 Move X2, [X26]
	072 Move X1, X0
	073 Move X0, X8
	074 Call String.Join, X0, X1
	075 Move X1, [X24]
	076 Move X3, [X25]
	077 Move X2, X0
	078 Move X0, X20
	079 Move X4, X31
	080 Call String.Concat, X0, X1, X2, X3
	081 Move X2, [X19+32]
	082 Move X1, [X23]
	083 Move X3, [X21]
	084 Move X4, X31
	085 Call String.Concat, X0, X1, X2, X3
	086 Move X2, [X19+40]
	087 Move X1, [X22]
	088 Move X3, [X21]
	089 Move X20, [X31+80]
	090 Move X19, [X31+88]
	091 Move X22, [X31+64]
	092 Move X21, [X31+72]
	093 Move X24, [X31+48]
	094 Move X23, [X31+56]
	095 Move X26, [X31+32]
	096 Move X25, [X31+40]
	097 Move X28, [X31+16]
	098 Move X27, [X31+24]
	099 Move X4, X31
	100 Move X30, [X31+96]
	101 Call String.Concat, X0, X1, X2, X3
	102 Return X0

Method: System.Void .ctor()

Disassembly:
	0x03594610 ADRP X28, 0xB62000
	0x03594614 ADRP X29, 0xB5F000

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

