Type: Satori.ApiClient/<SatoriGetFlagsAsync>d__14

Method: System.Void MoveNext()

Disassembly:
	0x0359B538 LDR X1, [X8]
	0x0359B53C ADD X0, X31, 0x18
	0x0359B540 BL 0x2677430
	0x0359B544 TBZ X0, 0x0, 0x359B5A4
	0x0359B548 ADRP X8, 0xB5B000
	0x0359B54C LDR X8, [X8 + 0x1E0]
	0x0359B550 ADD X0, X31, 0x18
	0x0359B554 LDR X1, [X8]
	0x0359B558 BL 0x2677474
	0x0359B55C ADRP X8, 0xB9C000
	0x0359B560 LDR X8, [X8 + 0x170]
	0x0359B564 LDR X1, [X8]
	0x0359B568 BL 0x22109A8
	0x0359B56C MOVN W8, 0x1
	0x0359B570 STR W8, [X19], #0x8
	0x0359B574 MOV X20, X0
	0x0359B578 LDR X0, [X27]
	0x0359B57C ADRP X21, 0xB9C000
	0x0359B580 LDR W8, [X0 + 0xE0]
	0x0359B584 LDR X21, [X21 + 0x168]
	0x0359B588 CBNZ W8, 0x359B590
	0x0359B58C BL 0x1C16DFC
	0x0359B590 LDR X2, [X21]
	0x0359B594 MOV X0, X19
	0x0359B598 MOV X1, X20
	0x0359B59C BL 0x26322B0
	0x0359B5A0 B 0x359B5DC
	0x0359B5A4 STR W31, [X19]
	0x0359B5A8 LDR X8, [X31 + 0x18]
	0x0359B5AC STR X8, [X19 + 0x48]
	0x0359B5B0 LDR X0, [X27]
	0x0359B5B4 LDR W8, [X0 + 0xE0]
	0x0359B5B8 CBNZ W8, 0x359B5C0
	0x0359B5BC BL 0x1C16DFC
	0x0359B5C0 ADRP X8, 0xB9C000
	0x0359B5C4 LDR X8, [X8 + 0x160]
	0x0359B5C8 ADD X0, X19, 0x8
	0x0359B5CC LDR X3, [X8]
	0x0359B5D0 ADD X1, X31, 0x18
	0x0359B5D4 MOV X2, X19
	0x0359B5D8 BL 0x1FB90F8
	0x0359B5DC LDP X20, X19, [X31 + 0x70]
	0x0359B5E0 LDP X22, X21, [X31 + 0x60]
	0x0359B5E4 LDP X24, X23, [X31 + 0x50]
	0x0359B5E8 LDP X26, X25, [X31 + 0x40]
	0x0359B5EC LDP X28, X27, [X31 + 0x30]
	0x0359B5F0 LDP X29, X30, [X31 + 0x20]
	0x0359B5F4 ADD X31, X31, 0x80
	0x0359B5F8 RET
	0x0359B5FC BL 0x1C16F20
	0x0359B600 MOV X0, X23
	0x0359B604 BL 0x1C16F18
	0x0359B608 BL 0x1C16F20
	0x0359B60C BL 0x1C16F20
	0x0359B610 BL 0x1C16F20
	0x0359B614 BL 0x1C16F28
	0x0359B618 BL 0x1C16F20
	0x0359B61C BL 0x1C16F20
	0x0359B620 BL 0x1C16F20
	0x0359B624 BL 0x1C16F20
	0x0359B628 BL 0x1C16F20
	0x0359B62C BL 0x1C16F20
	0x0359B630 B 0x359B690
	0x0359B634 B 0x359B690
	0x0359B638 B 0x359B690
	0x0359B63C B 0x359B690
	0x0359B640 B 0x359B690
	0x0359B644 B 0x359B690
	0x0359B648 B 0x359B690
	0x0359B64C B 0x359B690
	0x0359B650 B 0x359B690
	0x0359B654 B 0x359B690
	0x0359B658 B 0x359B690
	0x0359B65C B 0x359B690
	0x0359B660 B 0x359B690
	0x0359B664 B 0x359B690
	0x0359B668 B 0x359B690
	0x0359B66C B 0x359B690
	0x0359B670 B 0x359B690
	0x0359B674 B 0x359B690
	0x0359B678 B 0x359B690
	0x0359B67C B 0x359B690
	0x0359B680 B 0x359B690
	0x0359B684 B 0x359B690
	0x0359B688 B 0x359B690
	0x0359B68C B 0x359B690
	0x0359B690 MOV X20, X1
	0x0359B694 MOV X21, X0
	0x0359B698 B 0x359B748
	0x0359B69C B 0x359B6B4
	0x0359B6A0 B 0x359B6B4
	0x0359B6A4 B 0x359B6B4
	0x0359B6A8 MOV X21, X26
	0x0359B6AC B 0x359B6B4
	0x0359B6B0 B 0x359B6B4
	0x0359B6B4 CMP W1, 0x1
	0x0359B6B8 B.NE 0x359B6D0
	0x0359B6BC BL 0x3EB1AD0
	0x0359B6C0 LDR X23, [X0]
	0x0359B6C4 BL 0x3EB1AE0
	0x0359B6C8 MOV W20, W31
	0x0359B6CC B 0x359B2D4
	0x0359B6D0 MOV X21, X0
	0x0359B6D4 MOV X20, X1
	0x0359B6D8 MOV X23, X31
	0x0359B6DC TBZ X24, 0x1F, 0x359B744
	0x0359B6E0 CBZ X22, 0x359B744
	0x0359B6E4 ADRP X10, 0xB58000
	0x0359B6E8 LDR X8, [X22]
	0x0359B6EC LDR X10, [X10 + 0xE00]
	0x0359B6F0 LDRH W9, [X8 + 0x12E]
	0x0359B6F4 LDR X1, [X10]
	0x0359B6F8 CBZ X9, 0x359B71C
	0x0359B6FC LDR X10, [X8 + 0xB0]
	0x0359B700 ADD X10, X10, 0x8
	0x0359B704 LDUR X11, [X10 - 0x8]
	0x0359B708 CMP X11, X1
	0x0359B70C B.EQ 0x359B72C
	0x0359B710 SUBS X9, X9, 0x1
	0x0359B714 ADD X10, X10, 0x10
	0x0359B718 B.NE 0x359B704
	0x0359B71C MOV X0, X22
	0x0359B720 MOV W2, W31
	0x0359B724 BL 0x1C5C788
	0x0359B728 B 0x359B738
	0x0359B72C LDRSW X9, [X10]
	0x0359B730 ADD X8, X8, X9, 0x4, LSL
	0x0359B734 ADD X0, X8, 0x138
	0x0359B738 LDP X8, X1, [X0]
	0x0359B73C MOV X0, X22
	0x0359B740 BLR X8
	0x0359B744 CBNZ X23, 0x359B7E0
	0x0359B748 CMP W20, 0x1
	0x0359B74C B.NE 0x359B800
	0x0359B750 MOV X0, X21
	0x0359B754 BL 0x3EB1AD0
	0x0359B758 MOV X20, X0
	0x0359B75C ADRP X0, 0xB58000
	0x0359B760 LDR X0, [X0 + 0x7D0]
	0x0359B764 BL 0x1C16D08
	0x0359B768 LDR X8, [X20]
	0x0359B76C LDR X1, [X8]
	0x0359B770 BL 0x1C17270
	0x0359B774 TBZ X0, 0x0, 0x359B7C0
	0x0359B778 LDR X20, [X20]
	0x0359B77C BL 0x3EB1AE0
	0x0359B780 MOVN W8, 0x1
	0x0359B784 STR W8, [X19], #0x8
	0x0359B788 ADRP X0, 0xB9B000
	0x0359B78C LDR X0, [X0 + 0xFD0]
	0x0359B790 BL 0x1C16D08
	0x0359B794 LDR W8, [X0 + 0xE0]
	0x0359B798 CBNZ W8, 0x359B7A0
	0x0359B79C BL 0x1C16DFC
	0x0359B7A0 ADRP X0, 0xB9C000
	0x0359B7A4 LDR X0, [X0 + 0x180]
	0x0359B7A8 BL 0x1C16D08
	0x0359B7AC MOV X2, X0
	0x0359B7B0 MOV X0, X19
	0x0359B7B4 MOV X1, X20
	0x0359B7B8 BL 0x26324C8
	0x0359B7BC B 0x359B5DC
	0x0359B7C0 MOVZ W0, 0x8
	0x0359B7C4 BL 0x3EB1AF0
	0x0359B7C8 LDR X8, [X20]
	0x0359B7CC STR X8, [X0]
	0x0359B7D0 ADRP X1, 0x919000
	0x0359B7D4 ADD X1, X1, 0xE58
	0x0359B7D8 MOV X2, X31
	0x0359B7DC BL 0x3EB1B00
	0x0359B7E0 MOV X0, X23
	0x0359B7E4 BL 0x1C16F18
	0x0359B7E8 MOV X20, X1
	0x0359B7EC MOV X21, X0
	0x0359B7F0 TBNZ X24, 0x1F, 0x359B6E0
	0x0359B7F4 B 0x359B744
	0x0359B7F8 MOV X21, X0
	0x0359B7FC BL 0x3EB1AE0
	0x0359B800 MOV X0, X21
	0x0359B804 BL 0x1D2C690
	0x0359B808 BL 0x1990590
	0x0359B80C STR X30, [X31 - 0x30]!
	0x0359B810 STP X22, X21, [X31 + 0x10]
	0x0359B814 STP X20, X19, [X31 + 0x20]
	0x0359B818 ADRP X22, 0xE44000
	0x0359B81C ADRP X21, 0xB9B000
	0x0359B820 LDRB W8, [X22 + 0xFD4]
	0x0359B824 LDR X21, [X21 + 0xFD0]
	0x0359B828 MOV X19, X1
	0x0359B82C MOV X20, X0
	0x0359B830 TBNZ X8, 0x0, 0x359B854
	0x0359B834 ADRP X0, 0xB9C000
	0x0359B838 LDR X0, [X0 + 0x188]
	0x0359B83C BL 0x1C16CF4
	0x0359B840 ADRP X0, 0xB9B000
	0x0359B844 LDR X0, [X0 + 0xFD0]
	0x0359B848 BL 0x1C16CF4
	0x0359B84C MOVZ W8, 0x1
	0x0359B850 STRB W8, [X22 + 0xFD4]
	0x0359B854 LDR X0, [X21]
	0x0359B858 ADRP X21, 0xB9C000
	0x0359B85C LDR W8, [X0 + 0xE0]
	0x0359B860 LDR X21, [X21 + 0x188]
	0x0359B864 CBNZ W8, 0x359B86C
	0x0359B868 BL 0x1C16DFC
	0x0359B86C LDR X2, [X21]
	0x0359B870 ADD X0, X20, 0x8
	0x0359B874 MOV X1, X19
	0x0359B878 LDP X20, X19, [X31 + 0x20]
	0x0359B87C LDP X22, X21, [X31 + 0x10]
	0x0359B880 LDR X30, [X31], #0x30
	0x0359B884 B 0x2632228
	0x0359B888 SUB X31, X31, 0x70
	0x0359B88C STP X30, X27, [X31 + 0x20]
	0x0359B890 STP X26, X25, [X31 + 0x30]
	0x0359B894 STP X24, X23, [X31 + 0x40]
	0x0359B898 STP X22, X21, [X31 + 0x50]
	0x0359B89C STP X20, X19, [X31 + 0x60]
	0x0359B8A0 ADRP X20, 0xE44000
	0x0359B8A4 LDRB W8, [X20 + 0xFD5]
	0x0359B8A8 MOV X19, X0
	0x0359B8AC TBNZ X8, 0x0, 0x359BA08
	0x0359B8B0 ADRP X0, 0xB9C000
	0x0359B8B4 LDR X0, [X0 + 0x190]
	0x0359B8B8 BL 0x1C16CF4
	0x0359B8BC ADRP X0, 0xB9C000
	0x0359B8C0 LDR X0, [X0 + 0x198]
	0x0359B8C4 BL 0x1C16CF4
	0x0359B8C8 ADRP X0, 0xB9B000
	0x0359B8CC LDR X0, [X0 + 0xFF0]
	0x0359B8D0 BL 0x1C16CF4
	0x0359B8D4 ADRP X0, 0xB61000
	0x0359B8D8 LDR X0, [X0 + 0x8D8]
	0x0359B8DC BL 0x1C16CF4
	0x0359B8E0 ADRP X0, 0xB59000
	0x0359B8E4 LDR X0, [X0 + 0x810]
	0x0359B8E8 BL 0x1C16CF4
	0x0359B8EC ADRP X0, 0xB59000
	0x0359B8F0 LDR X0, [X0 + 0x6C0]
	0x0359B8F4 BL 0x1C16CF4
	0x0359B8F8 ADRP X0, 0xB59000
	0x0359B8FC LDR X0, [X0 + 0x6D0]
	0x0359B900 BL 0x1C16CF4
	0x0359B904 ADRP X0, 0xB9C000
	0x0359B908 LDR X0, [X0 + 0x58]
	0x0359B90C BL 0x1C16CF4
	0x0359B910 ADRP X0, 0xB9C000
	0x0359B914 LDR X0, [X0 + 0x1A0]
	0x0359B918 BL 0x1C16CF4
	0x0359B91C ADRP X0, 0xB93000
	0x0359B920 LDR X0, [X0 + 0x830]
	0x0359B924 BL 0x1C16CF4
	0x0359B928 ADRP X0, 0xB5C000
	0x0359B92C LDR X0, [X0 + 0xBF0]
	0x0359B930 BL 0x1C16CF4
	0x0359B934 ADRP X0, 0xB5B000
	0x0359B938 LDR X0, [X0 + 0xEF8]
	0x0359B93C BL 0x1C16CF4
	0x0359B940 ADRP X0, 0xB59000
	0x0359B944 LDR X0, [X0 + 0x478]
	0x0359B948 BL 0x1C16CF4
	0x0359B94C ADRP X0, 0xB58000
	0x0359B950 LDR X0, [X0 + 0x9D0]
	0x0359B954 BL 0x1C16CF4
	0x0359B958 ADRP X0, 0xB5B000
	0x0359B95C LDR X0, [X0 + 0x1E0]
	0x0359B960 BL 0x1C16CF4
	0x0359B964 ADRP X0, 0xB5B000
	0x0359B968 LDR X0, [X0 + 0x1F0]
	0x0359B96C BL 0x1C16CF4
	0x0359B970 ADRP X0, 0xB5B000
	0x0359B974 LDR X0, [X0 + 0x1F8]
	0x0359B978 BL 0x1C16CF4
	0x0359B97C ADRP X0, 0xB61000
	0x0359B980 LDR X0, [X0 + 0x3A0]
	0x0359B984 BL 0x1C16CF4
	0x0359B988 ADRP X0, 0xB5A000
	0x0359B98C LDR X0, [X0 + 0xA28]
	0x0359B990 BL 0x1C16CF4
	0x0359B994 ADRP X0, 0xB9C000
	0x0359B998 LDR X0, [X0 + 0x1A8]
	0x0359B99C BL 0x1C16CF4
	0x0359B9A0 ADRP X0, 0xB81000
	0x0359B9A4 LDR X0, [X0 + 0x4D0]
	0x0359B9A8 BL 0x1C16CF4
	0x0359B9AC ADRP X0, 0xB93000
	0x0359B9B0 LDR X0, [X0 + 0xF08]
	0x0359B9B4 BL 0x1C16CF4
	0x0359B9B8 ADRP X0, 0xB61000
	0x0359B9BC LDR X0, [X0 + 0x720]
	0x0359B9C0 BL 0x1C16CF4
	0x0359B9C4 ADRP X0, 0xB93000
	0x0359B9C8 LDR X0, [X0 + 0x7D0]
	0x0359B9CC BL 0x1C16CF4
	0x0359B9D0 ADRP X0, 0xB93000
	0x0359B9D4 LDR X0, [X0 + 0xF18]
	0x0359B9D8 BL 0x1C16CF4
	0x0359B9DC ADRP X0, 0xB93000
	0x0359B9E0 LDR X0, [X0 + 0x7D8]
	0x0359B9E4 BL 0x1C16CF4
	0x0359B9E8 ADRP X0, 0xB58000
	0x0359B9EC LDR X0, [X0 + 0x988]
	0x0359B9F0 BL 0x1C16CF4
	0x0359B9F4 ADRP X0, 0xB93000
	0x0359B9F8 LDR X0, [X0 + 0xF20]
	0x0359B9FC BL 0x1C16CF4
	0x0359BA00 MOVZ W8, 0x1
	0x0359BA04 STRB W8, [X20 + 0xFD5]
	0x0359BA08 STR X31, [X31 + 0x18]
	0x0359BA0C ADRP X27, 0xB9B000
	0x0359BA10 LDR W8, [X19]
	0x0359BA14 LDR X27, [X27 + 0xFF0]
	0x0359BA18 CBZ W8, 0x359BD70
	0x0359BA1C ADRP X8, 0xB9C000
	0x0359BA20 ADRP X9, 0xB58000
	0x0359BA24 LDR X8, [X8 + 0x1A8]
	0x0359BA28 LDR X9, [X9 + 0x988]
	0x0359BA2C LDR X24, [X19 + 0x38]
	0x0359BA30 LDRB W10, [X19 + 0x20]
	0x0359BA34 LDR X20, [X8]
	0x0359BA38 LDR X21, [X9]
	0x0359BA3C CBZ W10, 0x359BB40
	0x0359BA40 ADRP X8, 0xB58000
	0x0359BA44 LDR X8, [X8 + 0x9D0]
	0x0359BA48 LDR X0, [X8]
	0x0359BA4C MOVZ W1, 0x4
	0x0359BA50 BL 0x1C16D6C
	0x0359BA54 MOV X22, X0
	0x0359BA58 CBZ X0, 0x359BEC8
	0x0359BA5C CBZ X21, 0x359BA74
	0x0359BA60 LDR X8, [X22]
	0x0359BA64 LDR X1, [X8 + 0x40]
	0x0359BA68 MOV X0, X21
	0x0359BA6C BL 0x1C16E00
	0x0359BA70 CBZ X0, 0x359BEE0
	0x0359BA74 LDR W8, [X22 + 0x18]
	0x0359BA78 CBZ W8, 0x359BECC
	0x0359BA7C STR X21, [X22 + 0x20]
	0x0359BA80 ADRP X21, 0xB93000
	0x0359BA84 LDR X21, [X21 + 0xF18]
	0x0359BA88 LDR X0, [X21]
	0x0359BA8C CBZ X0, 0x359BAA4
	0x0359BA90 LDR X8, [X22]
	0x0359BA94 LDR X1, [X8 + 0x40]
	0x0359BA98 BL 0x1C16E00
	0x0359BA9C CBZ X0, 0x359BEEC
	0x0359BAA0 LDR W8, [X22 + 0x18]
	0x0359BAA4 CMP W8, 0x1
	0x0359BAA8 B.LS 0x359BED0
	0x0359BAAC LDR X8, [X21]
	0x0359BAB0 ADRP X9, 0xB59000
	0x0359BAB4 STR X8, [X22 + 0x28]
	0x0359BAB8 LDR X8, [X19 + 0x20]
	0x0359BABC LDR X9, [X9 + 0x478]
	0x0359BAC0 STR X8, [X31 + 0x10]
	0x0359BAC4 LDR X0, [X9]
	0x0359BAC8 ADD X1, X31, 0x10
	0x0359BACC BL 0x1C16E04
	0x0359BAD0 MOV X21, X0
	0x0359BAD4 CBZ X0, 0x359BAEC
	0x0359BAD8 LDR X8, [X22]
	0x0359BADC LDR X1, [X8 + 0x40]
	0x0359BAE0 MOV X0, X21
	0x0359BAE4 BL 0x1C16E00
	0x0359BAE8 CBZ X0, 0x359BEF8
	0x0359BAEC LDR W8, [X22 + 0x18]
	0x0359BAF0 CMP W8, 0x2
	0x0359BAF4 B.LS 0x359BED4
	0x0359BAF8 STR X21, [X22 + 0x30]
	0x0359BAFC ADRP X21, 0xB61000
	0x0359BB00 LDR X21, [X21 + 0x720]
	0x0359BB04 LDR X0, [X21]
	0x0359BB08 CBZ X0, 0x359BB20
	0x0359BB0C LDR X8, [X22]
	0x0359BB10 LDR X1, [X8 + 0x40]
	0x0359BB14 BL 0x1C16E00
	0x0359BB18 CBZ X0, 0x359BF04
	0x0359BB1C LDR W8, [X22 + 0x18]
	0x0359BB20 CMP W8, 0x3
	0x0359BB24 B.LS 0x359BEDC
	0x0359BB28 LDR X8, [X21]
	0x0359BB2C STR X8, [X22 + 0x38]
	0x0359BB30 MOV X0, X22
	0x0359BB34 MOV X1, X31
	0x0359BB38 BL 0x3227578
	0x0359BB3C MOV X21, X0
	0x0359BB40 MOV X0, X19
	0x0359BB44 LDRB W8, [X0 + 0x28]!
	0x0359BB48 CBZ W8, 0x359BB94
	0x0359BB4C ADRP X8, 0xB93000
	0x0359BB50 LDR X8, [X8 + 0x830]
	0x0359BB54 LDR X1, [X8]
	0x0359BB58 BL 0x242D714
	0x0359BB5C CBZ X0, 0x359BED8
	0x0359BB60 MOV X1, X31
	0x0359BB64 BL 0x322B5E4
	0x0359BB68 ADRP X8, 0xB93000
	0x0359BB6C LDR X8, [X8 + 0xF08]
	0x0359BB70 ADRP X9, 0xB61000
	0x0359BB74 LDR X9, [X9 + 0x720]
	0x0359BB78 MOV X2, X0
	0x0359BB7C LDR X1, [X8]
	0x0359BB80 LDR X3, [X9]
	0x0359BB84 MOV X0, X21
	0x0359BB88 MOV X4, X31
	0x0359BB8C BL 0x32277C4
	0x0359BB90 MOV X21, X0
	0x0359BB94 LDR X22, [X19 + 0x30]
	0x0359BB98 CBZ X22, 0x359BBEC
	0x0359BB9C ADRP X8, 0xB5A000
	0x0359BBA0 LDR X8, [X8 + 0xA28]
	0x0359BBA4 LDR X0, [X8]
	0x0359BBA8 LDR W8, [X0 + 0xE0]
	0x0359BBAC CBNZ W8, 0x359BBB4
	0x0359BBB0 BL 0x1C16DFC
	0x0359BBB4 MOV X0, X22
	0x0359BBB8 MOV X1, X31
	0x0359BBBC BL 0x3624D20
	0x0359BBC0 ADRP X8, 0xB93000
	0x0359BBC4 LDR X8, [X8 + 0xF20]
	0x0359BBC8 ADRP X9, 0xB61000
	0x0359BBCC LDR X9, [X9 + 0x720]
	0x0359BBD0 MOV X2, X0
	0x0359BBD4 LDR X1, [X8]
	0x0359BBD8 LDR X3, [X9]
	0x0359BBDC MOV X0, X21
	0x0359BBE0 MOV X4, X31
	0x0359BBE4 BL 0x32277C4
	0x0359BBE8 MOV X21, X0
	0x0359BBEC CBZ X24, 0x359BEA4
	0x0359BBF0 LDR X0, [X24 + 0x20]
	0x0359BBF4 CBZ X0, 0x359BEA8
	0x0359BBF8 MOV X1, X31
	0x0359BBFC BL 0x361B448
	0x0359BC00 ADRP X8, 0xB61000
	0x0359BC04 LDR X8, [X8 + 0x8D8]
	0x0359BC08 MOV X22, X0
	0x0359BC0C LDR X0, [X8]
	0x0359BC10 MOVZ W1, 0x1
	0x0359BC14 BL 0x1C16D6C
	0x0359BC18 MOV X1, X0
	0x0359BC1C CBZ X1, 0x359BEAC
	0x0359BC20 LDR W8, [X1 + 0x18]
	0x0359BC24 CBZ W8, 0x359BEB0
	0x0359BC28 MOVZ W8, 0x2F
	0x0359BC2C STRH W8, [X1 + 0x20]
	0x0359BC30 CBZ X22, 0x359BEB4
	0x0359BC34 MOV X0, X22
	0x0359BC38 MOV X2, X31
	0x0359BC3C BL 0x322BC58
	0x0359BC40 MOV X1, X20
	0x0359BC44 MOV X2, X31
	0x0359BC48 BL 0x321B938
	0x0359BC4C ADRP X8, 0xB61000
	0x0359BC50 LDR X8, [X8 + 0x3A0]
	0x0359BC54 MOV X22, X0
	0x0359BC58 LDR X23, [X24 + 0x20]
	0x0359BC5C LDR X0, [X8]
	0x0359BC60 BL 0x1C16F10
	0x0359BC64 MOV X20, X0
	0x0359BC68 MOV X1, X23
	0x0359BC6C MOV X2, X31
	0x0359BC70 BL 0x36281F8
	0x0359BC74 CBZ X20, 0x359BEB8
	0x0359BC78 MOV X0, X20
	0x0359BC7C MOV X1, X22
	0x0359BC80 MOV X2, X31
	0x0359BC84 BL 0x36288CC
	0x0359BC88 MOV X0, X20
	0x0359BC8C MOV X1, X21
	0x0359BC90 MOV X2, X31
	0x0359BC94 BL 0x3628980
	0x0359BC98 MOV X0, X20
	0x0359BC9C MOV X1, X31
	0x0359BCA0 BL 0x3628A38
	0x0359BCA4 ADRP X8, 0xB81000
	0x0359BCA8 ADRP X9, 0xB59000
	0x0359BCAC LDR X8, [X8 + 0x4D0]
	0x0359BCB0 LDR X9, [X9 + 0x6D0]
	0x0359BCB4 MOV X20, X0
	0x0359BCB8 LDR X21, [X8]
	0x0359BCBC LDR X0, [X9]
	0x0359BCC0 BL 0x1C16F10
	0x0359BCC4 ADRP X8, 0xB59000
	0x0359BCC8 LDR X8, [X8 + 0x6C0]
	0x0359BCCC MOV X22, X0
	0x0359BCD0 LDR X1, [X8]
	0x0359BCD4 BL 0x2AA4804
	0x0359BCD8 ADRP X8, 0xB93000
	0x0359BCDC LDR X8, [X8 + 0x7D8]
	0x0359BCE0 LDR X1, [X19 + 0x40]
	0x0359BCE4 LDR X0, [X8]
	0x0359BCE8 MOV X2, X31
	0x0359BCEC BL 0x321B938
	0x0359BCF0 CBZ X22, 0x359BEBC
	0x0359BCF4 ADRP X8, 0xB93000
	0x0359BCF8 LDR X8, [X8 + 0x7D0]
	0x0359BCFC ADRP X9, 0xB59000
	0x0359BD00 LDR X9, [X9 + 0x810]
	0x0359BD04 MOV X2, X0
	0x0359BD08 LDR X1, [X8]
	0x0359BD0C LDR X3, [X9]
	0x0359BD10 MOV X0, X22
	0x0359BD14 BL 0x2AA5098
	0x0359BD18 LDR X23, [X24 + 0x10]
	0x0359BD1C CBZ X23, 0x359BEC0
	0x0359BD20 ADRP X10, 0xB9C000
	0x0359BD24 LDR X10, [X10 + 0x58]
	0x0359BD28 LDR X8, [X23]
	0x0359BD2C LDR W25, [X24 + 0x18]
	0x0359BD30 LDP X26, X24, [X19 + 0x48]
	0x0359BD34 LDR X1, [X10]
	0x0359BD38 LDRH W9, [X8 + 0x12E]
	0x0359BD3C CBZ X9, 0x359BD60
	0x0359BD40 LDR X10, [X8 + 0xB0]
	0x0359BD44 ADD X10, X10, 0x8
	0x0359BD48 LDUR X11, [X10 - 0x8]
	0x0359BD4C CMP X11, X1
	0x0359BD50 B.EQ 0x359BD88
	0x0359BD54 SUBS X9, X9, 0x1
	0x0359BD58 ADD X10, X10, 0x10
	0x0359BD5C B.NE 0x359BD48
	0x0359BD60 MOVZ W2, 0x3
	0x0359BD64 MOV X0, X23
	0x0359BD68 BL 0x1C5C788
	0x0359BD6C B 0x359BD98
	0x0359BD70 LDR X8, [X19 + 0x58]
	0x0359BD74 MOVN W9, 0x0
	0x0359BD78 STR X8, [X31 + 0x18]
	0x0359BD7C STR X31, [X19 + 0x58]
	0x0359BD80 STR W9, [X19]
	0x0359BD84 B 0x359BDF4
	0x0359BD88 LDR W9, [X10]
	0x0359BD8C ADD W9, W9, 0x3
	0x0359BD90 ADD X8, X8, W9, 0x4, SXTW
	0x0359BD94 ADD X0, X8, 0x138
	0x0359BD98 LDP X8, X9, [X0]
	0x0359BD9C MOV X0, X23
	0x0359BDA0 MOV X1, X21
	0x0359BDA4 MOV X2, X20
	0x0359BDA8 MOV X3, X22
	0x0359BDAC MOV X4, X31
	0x0359BDB0 MOV W5, W25
	0x0359BDB4 MOV X6, X26
	0x0359BDB8 MOV X7, X24
	0x0359BDBC STR X9, [X31]
	0x0359BDC0 BLR X8
	0x0359BDC4 CBZ X0, 0x359BEC4
	0x0359BDC8 ADRP X8, 0xB5B000
	0x0359BDCC LDR X8, [X8 + 0x1F8]
	0x0359BDD0 LDR X1, [X8]
	0x0359BDD4 BL 0x269F5D0
	0x0359BDD8 ADRP X8, 0xB5B000
	0x0359BDDC LDR X8, [X8 + 0x1F0]
	0x0359BDE0 STR X0, [X31 + 0x18]
	0x0359BDE4 LDR X1, [X8]
	0x0359BDE8 ADD X0, X31, 0x18
	0x0359BDEC BL 0x2677430
	0x0359BDF0 TBZ X0, 0x0, 0x359BE50
	0x0359BDF4 ADRP X8, 0xB5B000
	0x0359BDF8 LDR X8, [X8 + 0x1E0]
	0x0359BDFC ADD X0, X31, 0x18
	0x0359BE00 LDR X1, [X8]
	0x0359BE04 BL 0x2677474
	0x0359BE08 ADRP X8, 0xB9C000
	0x0359BE0C LDR X8, [X8 + 0x1A0]
	0x0359BE10 LDR X1, [X8]
	0x0359BE14 BL 0x22109A8
	0x0359BE18 MOVN W8, 0x1
	0x0359BE1C STR W8, [X19], #0x8
	0x0359BE20 MOV X20, X0
	0x0359BE24 LDR X0, [X27]
	0x0359BE28 ADRP X21, 0xB9C000
	0x0359BE2C LDR W8, [X0 + 0xE0]
	0x0359BE30 LDR X21, [X21 + 0x198]
	0x0359BE34 CBNZ W8, 0x359BE3C
	0x0359BE38 BL 0x1C16DFC
	0x0359BE3C LDR X2, [X21]
	0x0359BE40 MOV X0, X19
	0x0359BE44 MOV X1, X20
	0x0359BE48 BL 0x26322B0
	0x0359BE4C B 0x359BE88
	0x0359BE50 STR W31, [X19]
	0x0359BE54 LDR X8, [X31 + 0x18]
	0x0359BE58 STR X8, [X19 + 0x58]
	0x0359BE5C LDR X0, [X27]
	0x0359BE60 LDR W8, [X0 + 0xE0]
	0x0359BE64 CBNZ W8, 0x359BE6C
	0x0359BE68 BL 0x1C16DFC
	0x0359BE6C ADRP X8, 0xB9C000
	0x0359BE70 LDR X8, [X8 + 0x190]
	0x0359BE74 ADD X0, X19, 0x8
	0x0359BE78 LDR X3, [X8]
	0x0359BE7C ADD X1, X31, 0x18
	0x0359BE80 MOV X2, X19
	0x0359BE84 BL 0x1FB930C
	0x0359BE88 LDP X20, X19, [X31 + 0x60]
	0x0359BE8C LDP X22, X21, [X31 + 0x50]
	0x0359BE90 LDP X24, X23, [X31 + 0x40]
	0x0359BE94 LDP X26, X25, [X31 + 0x30]
	0x0359BE98 LDP X30, X27, [X31 + 0x20]
	0x0359BE9C ADD X31, X31, 0x70
	0x0359BEA0 RET
	0x0359BEA4 BL 0x1C16F20
	0x0359BEA8 BL 0x1C16F20
	0x0359BEAC BL 0x1C16F20
	0x0359BEB0 BL 0x1C16F28
	0x0359BEB4 BL 0x1C16F20
	0x0359BEB8 BL 0x1C16F20
	0x0359BEBC BL 0x1C16F20
	0x0359BEC0 BL 0x1C16F20
	0x0359BEC4 BL 0x1C16F20
	0x0359BEC8 BL 0x1C16F20
	0x0359BECC BL 0x1C16F28
	0x0359BED0 BL 0x1C16F28
	0x0359BED4 BL 0x1C16F28
	0x0359BED8 BL 0x1C16F20
	0x0359BEDC BL 0x1C16F28
	0x0359BEE0 BL 0x1C16F44
	0x0359BEE4 MOV X1, X31
	0x0359BEE8 BL 0x1C16DEC
	0x0359BEEC BL 0x1C16F44

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+32], X29
	003 Move [X31+40], X30
	004 Move [X31+48], X28
	005 Move [X31+56], X27
	006 Move [X31+64], X26
	007 Move [X31+72], X25
	008 Move [X31+80], X24
	009 Move [X31+88], X23
	010 Move [X31+96], X22
	011 Move [X31+104], X21
	012 Move [X31+112], X20
	013 Move [X31+120], X19
	014 Move X20, 0xE45000
	015 Move W8, [X20+4049]
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {110}
	021 Move X0, 0xB9D000
	022 Move X0, [X0+304]
	023 Call 0x1C17CF4
	024 Move X0, 0xB9D000
	025 Move X0, [X0+312]
	026 Call 0x1C17CF4
	027 Move X0, 0xB9C000
	028 Move X0, [X0+4000]
	029 Call 0x1C17CF4
	030 Move X0, 0xB62000
	031 Move X0, [X0+2264]
	032 Call 0x1C17CF4
	033 Move X0, 0xB62000
	034 Move X0, [X0+2536]
	035 Call 0x1C17CF4
	036 Move X0, 0xB5A000
	037 Move X0, [X0+2064]
	038 Call 0x1C17CF4
	039 Move X0, 0xB5A000
	040 Move X0, [X0+1728]
	041 Call 0x1C17CF4
	042 Move X0, 0xB5A000
	043 Move X0, [X0+1744]
	044 Call 0x1C17CF4
	045 Move X0, 0xB59000
	046 Move X0, [X0+3584]
	047 Call 0x1C17CF4
	048 Move X0, 0xB59000
	049 Move X0, [X0+3952]
	050 Call 0x1C17CF4
	051 Move X0, 0xB59000
	052 Move X0, [X0+3960]
	053 Call 0x1C17CF4
	054 Move X0, 0xB59000
	055 Move X0, [X0+3608]
	056 Call 0x1C17CF4
	057 Move X0, 0xB9D000
	058 Move X0, [X0+88]
	059 Call 0x1C17CF4
	060 Move X0, 0xB9D000
	061 Move X0, [X0+320]
	062 Call 0x1C17CF4
	063 Move X0, 0xB59000
	064 Move X0, [X0+2760]
	065 Call 0x1C17CF4
	066 Move X0, 0xB5C000
	067 Move X0, [X0+480]
	068 Call 0x1C17CF4
	069 Move X0, 0xB5C000
	070 Move X0, [X0+496]
	071 Call 0x1C17CF4
	072 Move X0, 0xB5C000
	073 Move X0, [X0+504]
	074 Call 0x1C17CF4
	075 Move X0, 0xB62000
	076 Move X0, [X0+928]
	077 Call 0x1C17CF4
	078 Move X0, 0xB5B000
	079 Move X0, [X0+2600]
	080 Call 0x1C17CF4
	081 Move X0, 0xB9D000
	082 Move X0, [X0+328]
	083 Call 0x1C17CF4
	084 Move X0, 0xB82000
	085 Move X0, [X0+1232]
	086 Call 0x1C17CF4
	087 Move X0, 0xB62000
	088 Move X0, [X0+2440]
	089 Call 0x1C17CF4
	090 Move X0, 0xB62000
	091 Move X0, [X0+1824]
	092 Call 0x1C17CF4
	093 Move X0, 0xB9D000
	094 Move X0, [X0+280]
	095 Call 0x1C17CF4
	096 Move X0, 0xB94000
	097 Move X0, [X0+2000]
	098 Call 0x1C17CF4
	099 Move X0, 0xB94000
	100 Move X0, [X0+2128]
	101 Call 0x1C17CF4
	102 Move X0, 0xB94000
	103 Move X0, [X0+2008]
	104 Call 0x1C17CF4
	105 Move X0, 0xB59000
	106 Move X0, [X0+2440]
	107 Call 0x1C17CF4
	108 Move W8, 1
	109 Move [X20+4049], W8
	110 Move [X31+24], X31
	111 Move X27, 0xB9C000
	112 Move W24, [X19]
	113 Move X27, [X27+4000]
	114 Compare W24, 0
	115 JumpIfEqual {150}
	116 Move X8, 0xB9D000
	117 Move X9, 0xB59000
	118 Move X8, [X8+328]
	119 Move X9, [X9+2440]
	120 Move X21, [X19+32]
	121 Move X20, [X19+40]
	122 Move X23, [X8]
	123 Move X26, [X9]
	124 Compare X21, 0
	125 JumpIfNotEqual {134}
	126 Move X8, 0xB59000
	127 Move X8, [X8+2760]
	128 Move X0, [X8]
	129 Move W1, W31
	130 Call 0x1C17D6C
	131 Move X21, X0
	132 Compare X0, 0
	133 JumpIfEqual {542}
	134 Move X10, 0xB59000
	135 Move X8, [X21]
	136 Move X10, [X10+3952]
	137 NotImplemented "Instruction LDRH not yet implemented."
	138 Move X1, [X10]
	139 Compare X9, 0
	140 JumpIfEqual {147}
	141 Move X10, [X8+176]
	142 Add X10, X10, 8
	143 NotImplemented "Instruction LDUR not yet implemented."
	144 NotImplemented "Instruction CMP not yet implemented."
	145 Subtract X9, X9, 1
	146 Add X10, X10, 16
	147 Move X0, X21
	148 Move W2, W31
	149 Call 0x1C5D788
	150 Move X8, [X19+88]
	151 Move TEMP, 0
	152 Not TEMP
	153 Move W9, TEMP
	154 Move [X31+24], X8
	155 Move [X19+88], X31
	156 Move [X19], W9
	157 NotImplemented "Instruction LDRSW not yet implemented."
	158 Add X8, X8, X9
	159 Add X0, X8, 312
	160 Move X8, [X0]
	161 Move X1, [X0+8]
	162 Move X0, X21
	163 NotImplemented "Instruction BLR not yet implemented."
	164 Move [X31+8], X23
	165 Move [X31+16], X20
	166 Move X28, 0xB59000
	167 Move X29, 0xB59000
	168 Move X27, 0xB5B000
	169 Move X20, 0xB9D000
	170 Move X25, 0xB62000
	171 Move X28, [X28+3608]
	172 Move X29, [X29+3960]
	173 Move X27, [X27+2600]
	174 Move X20, [X20+280]
	175 Move X25, [X25+1824]
	176 Move X22, X0
	177 Move X0, X26
	178 Compare X22, 0
	179 JumpIfEqual {531}
	180 Move X8, [X22]
	181 Move X1, [X28]
	182 Move X21, X0
	183 NotImplemented "Instruction LDRH not yet implemented."
	184 Compare X9, 0
	185 JumpIfEqual {192}
	186 Move X10, [X8+176]
	187 Add X10, X10, 8
	188 NotImplemented "Instruction LDUR not yet implemented."
	189 NotImplemented "Instruction CMP not yet implemented."
	190 Subtract X9, X9, 1
	191 Add X10, X10, 16
	192 Move X0, X22
	193 Move W2, W31
	194 Call 0x1C5D788
	195 NotImplemented "Instruction LDRSW not yet implemented."
	196 Add X8, X8, X9
	197 Add X0, X8, 312
	198 Move X8, [X0]
	199 Move X1, [X0+8]
	200 Move X0, X22
	201 NotImplemented "Instruction BLR not yet implemented."
	202 Move TEMP, X0
	203 And TEMP, TEMP, 1
	204 Compare TEMP, 1
	205 JumpIfNotEqual {242}
	206 Move X8, [X22]
	207 Move X1, [X29]
	208 NotImplemented "Instruction LDRH not yet implemented."
	209 Compare X9, 0
	210 JumpIfEqual {217}
	211 Move X10, [X8+176]
	212 Add X10, X10, 8
	213 NotImplemented "Instruction LDUR not yet implemented."
	214 NotImplemented "Instruction CMP not yet implemented."
	215 Subtract X9, X9, 1
	216 Add X10, X10, 16
	217 Move X0, X22
	218 Move W2, W31
	219 Call 0x1C5D788
	220 NotImplemented "Instruction LDRSW not yet implemented."
	221 Add X8, X8, X9
	222 Add X0, X8, 312
	223 Move X8, [X0]
	224 Move X1, [X0+8]
	225 Move X0, X22
	226 NotImplemented "Instruction BLR not yet implemented."
	227 Move X23, X0
	228 Move X0, [X27]
	229 Move W8, [X0+224]
	230 Compare W8, 0
	231 JumpIfNotEqual {233}
	232 Call 0x1C17DFC
	233 Move X0, X23
	234 Move X1, X31
	235 Call Uri.EscapeDataString, X0
	236 Move X1, [X20]
	237 Move X3, [X25]
	238 Move X2, X0
	239 Move X0, X21
	240 Move X4, X31
	241 Call String.Concat, X0, X1, X2, X3
	242 Move X23, X31
	243 Move W20, 6
	244 Move X27, 0xB9C000
	245 Move X27, [X27+4000]
	246 Move X25, [X31+16]
	247 Move TEMP, X24
	248 And TEMP, TEMP, -2147483648
	249 Compare TEMP, -2147483648
	250 JumpIfNotEqual {276}
	251 Compare X22, 0
	252 JumpIfEqual {276}
	253 Move X10, 0xB59000
	254 Move X8, [X22]
	255 Move X10, [X10+3584]
	256 NotImplemented "Instruction LDRH not yet implemented."
	257 Move X1, [X10]
	258 Compare X9, 0
	259 JumpIfEqual {266}
	260 Move X10, [X8+176]
	261 Add X10, X10, 8
	262 NotImplemented "Instruction LDUR not yet implemented."
	263 NotImplemented "Instruction CMP not yet implemented."
	264 Subtract X9, X9, 1
	265 Add X10, X10, 16
	266 Move X0, X22
	267 Move W2, W31
	268 Call 0x1C5D788
	269 NotImplemented "Instruction LDRSW not yet implemented."
	270 Add X8, X8, X9
	271 Add X0, X8, 312
	272 Move X8, [X0]
	273 Move X1, [X0+8]
	274 Move X0, X22
	275 NotImplemented "Instruction BLR not yet implemented."
	276 Compare X23, 0
	277 JumpIfNotEqual {532}
	278 NotImplemented "Instruction CMP not yet implemented."
	279 Compare W20, 0
	280 JumpIfNotEqual {517}
	281 Compare X25, 0
	282 JumpIfEqual {534}
	283 Move X0, [X25+32]
	284 Compare X0, 0
	285 JumpIfEqual {535}
	286 Move X1, X31
	287 Call Uri.get_AbsolutePath, X0
	288 Move X8, 0xB62000
	289 Move X8, [X8+2264]
	290 Move X22, X0
	291 Move X0, [X8]
	292 Move W1, 1
	293 Call 0x1C17D6C
	294 Move X1, X0
	295 Compare X1, 0
	296 JumpIfEqual {536}
	297 Move W8, [X1+24]
	298 Compare W8, 0
	299 JumpIfEqual {537}
	300 Move W8, 47
	301 NotImplemented "Instruction STRH not yet implemented."
	302 Compare X22, 0
	303 JumpIfEqual {538}
	304 Move X0, X22
	305 Move X2, X31
	306 Call String.TrimEnd, X0, X1
	307 Move X1, [X31+8]
	308 Move X2, X31
	309 Call String.Concat, X0, X1
	310 Move X8, 0xB62000
	311 Move X23, [X25+32]
	312 Move X8, [X8+928]
	313 Move X22, X0
	314 Move X0, [X8]
	315 Call 0x1C17F10
	316 Move X20, X0
	317 Move X1, X23
	318 Move X2, X31
	319 Call UriBuilder..ctor, X0, X1
	320 Compare X20, 0
	321 JumpIfEqual {539}
	322 Move X0, X20
	323 Move X1, X22
	324 Move X2, X31
	325 Call UriBuilder.set_Path, X0, X1
	326 Move X0, X20
	327 Move X1, X21
	328 Move X2, X31
	329 Call UriBuilder.set_Query, X0, X1
	330 Move X0, X20
	331 Move X1, X31
	332 Call UriBuilder.get_Uri, X0
	333 Move X8, 0xB82000
	334 Move X9, 0xB5A000
	335 Move X8, [X8+1232]
	336 Move X9, [X9+1744]
	337 Move X20, X0
	338 Move X21, [X8]
	339 Move X0, [X9]
	340 Call 0x1C17F10
	341 Move X8, 0xB5A000
	342 Move X8, [X8+1728]
	343 Move X22, X0
	344 Move X1, [X8]
	345 Call Dictionary`2<Object, Object>..ctor, X0
	346 Move X0, [X19+48]
	347 Move X1, X31
	348 Call String.IsNullOrEmpty, X0
	349 Move TEMP, X0
	350 And TEMP, TEMP, 1
	351 Compare TEMP, 1
	352 JumpIfEqual {370}
	353 Move X8, 0xB94000
	354 Move X1, [X19+48]
	355 Move X8, [X8+2008]
	356 Move X0, [X8]
	357 Move X2, X31
	358 Call String.Concat, X0, X1
	359 Compare X22, 0
	360 JumpIfEqual {543}
	361 Move X8, 0xB94000
	362 Move X8, [X8+2000]
	363 Move X9, 0xB5A000
	364 Move X9, [X9+2064]
	365 Move X2, X0
	366 Move X1, [X8]
	367 Move X3, [X9]
	368 Move X0, X22
	369 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	370 Move X0, [X19+56]
	371 Move X1, X31
	372 Call String.IsNullOrEmpty, X0
	373 Move TEMP, X0
	374 And TEMP, TEMP, 1
	375 Compare TEMP, 1
	376 JumpIfEqual {423}
	377 Move X0, X31
	378 Call Encoding.get_UTF8
	379 Move X8, 0xB62000
	380 Move X23, X0
	381 Move X0, [X19+56]
	382 Move X2, [X19+64]
	383 Move X8, [X8+2440]
	384 Move X1, [X8]
	385 Move X3, X31
	386 Call String.Concat, X0, X1, X2
	387 Move X1, X0
	388 Compare X23, 0
	389 JumpIfEqual {544}
	390 Move X8, [X23]
	391 Move X9, [X8+616]
	392 Move X2, [X8+624]
	393 Move X0, X23
	394 NotImplemented "Instruction BLR not yet implemented."
	395 Move X8, 0xB62000
	396 Move X8, [X8+2536]
	397 Move X23, X0
	398 Move X0, [X8]
	399 Move W8, [X0+224]
	400 Compare W8, 0
	401 JumpIfNotEqual {403}
	402 Call 0x1C17DFC
	403 Move X0, X23
	404 Move X1, X31
	405 Call Convert.ToBase64String, X0
	406 Move X1, X0
	407 Move X8, 0xB94000
	408 Move X8, [X8+2128]
	409 Move X0, [X8]
	410 Move X2, X31
	411 Call String.Concat, X0, X1
	412 Compare X22, 0
	413 JumpIfEqual {545}
	414 Move X8, 0xB94000
	415 Move X8, [X8+2000]
	416 Move X9, 0xB5A000
	417 Move X9, [X9+2064]
	418 Move X2, X0
	419 Move X1, [X8]
	420 Move X3, [X9]
	421 Move X0, X22
	422 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	423 Move X24, [X25+16]
	424 Compare X24, 0
	425 JumpIfEqual {540}
	426 Move X10, 0xB9D000
	427 Move W23, [X25+24]
	428 Move X8, [X24]
	429 Move X26, [X19+72]
	430 Move X25, [X19+80]
	431 Move X10, [X10+88]
	432 NotImplemented "Instruction LDRH not yet implemented."
	433 Move X1, [X10]
	434 Compare X9, 0
	435 JumpIfEqual {442}
	436 Move X10, [X8+176]
	437 Add X10, X10, 8
	438 NotImplemented "Instruction LDUR not yet implemented."
	439 NotImplemented "Instruction CMP not yet implemented."
	440 Subtract X9, X9, 1
	441 Add X10, X10, 16
	442 Move W2, 3
	443 Move X0, X24
	444 Call 0x1C5D788
	445 Move W9, [X10]
	446 Add W9, W9, 3
	447 Add X8, X8, W9
	448 Add X0, X8, 312
	449 Move X8, [X0]
	450 Move X9, [X0+8]
	451 Move X0, X24
	452 Move X1, X21
	453 Move X2, X20
	454 Move X3, X22
	455 Move X4, X31
	456 Move W5, W23
	457 Move X6, X26
	458 Move X7, X25
	459 Move [X31], X9
	460 NotImplemented "Instruction BLR not yet implemented."
	461 Compare X0, 0
	462 JumpIfEqual {541}
	463 Move X8, 0xB5C000
	464 Move X8, [X8+504]
	465 Move X1, [X8]
	466 Call Task`1<Object>.GetAwaiter, X0
	467 Move X8, 0xB5C000
	468 Move X8, [X8+496]
	469 Move [X31+24], X0
	470 Move X1, [X8]
	471 Add X0, X31, 24
	472 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	473 Move TEMP, X0
	474 And TEMP, TEMP, 1
	475 Compare TEMP, 1
	476 JumpIfNotEqual {502}
	477 Move X8, 0xB5C000
	478 Move X8, [X8+480]
	479 Add X0, X31, 24
	480 Move X1, [X8]
	481 Call TaskAwaiter`1<Object>.GetResult, X0
	482 Move X8, 0xB9D000
	483 Move X8, [X8+320]
	484 Move X1, [X8]
	485 Call 0x22119A8, X0
	486 Move TEMP, 1
	487 Not TEMP
	488 Move W8, TEMP
	489 Move [X19+8], W8
	490 Move X20, X0
	491 Move X0, [X27]
	492 Move X21, 0xB9D000
	493 Move W8, [X0+224]
	494 Move X21, [X21+312]
	495 Compare W8, 0
	496 JumpIfNotEqual {498}
	497 Call 0x1C17DFC
	498 Move X2, [X21]
	499 Move X0, X19
	500 Move X1, X20
	501 Call AsyncTaskMethodBuilder`1<Object>.SetResult, X0, X1
	502 Move [X19], W31
	503 Move X8, [X31+24]
	504 Move [X19+88], X8
	505 Move X0, [X27]
	506 Move W8, [X0+224]
	507 Compare W8, 0
	508 JumpIfNotEqual {510}
	509 Call 0x1C17DFC
	510 Move X8, 0xB9D000
	511 Move X8, [X8+304]
	512 Add X0, X19, 8
	513 Move X3, [X8]
	514 Add X1, X31, 24
	515 Move X2, X19
	516 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	517 Move X20, [X31+112]
	518 Move X19, [X31+120]
	519 Move X22, [X31+96]
	520 Move X21, [X31+104]
	521 Move X24, [X31+80]
	522 Move X23, [X31+88]
	523 Move X26, [X31+64]
	524 Move X25, [X31+72]
	525 Move X28, [X31+48]
	526 Move X27, [X31+56]
	527 Move X29, [X31+32]
	528 Move X30, [X31+40]
	529 Add X31, X31, 128
	530 Return 
	531 Call 0x1C17F20
	532 Move X0, X23
	533 Call 0x1C17F18
	534 Call 0x1C17F20
	535 Call 0x1C17F20
	536 Call 0x1C17F20
	537 Call 0x1C17F28
	538 Call 0x1C17F20
	539 Call 0x1C17F20
	540 Call 0x1C17F20
	541 Call 0x1C17F20
	542 Call 0x1C17F20
	543 Call 0x1C17F20
	544 Call 0x1C17F20
	545 Call 0x1C17F20
	546 Move X20, X1
	547 Move X21, X0
	548 Move X21, X26
	549 NotImplemented "Instruction CMP not yet implemented."
	550 Call 0x3EB2AD0
	551 Move X23, [X0]
	552 Call 0x3EB2AE0
	553 Move W20, W31
	554 Move X21, X0
	555 Move X20, X1
	556 Move X23, X31
	557 Move TEMP, X24
	558 And TEMP, TEMP, -2147483648
	559 Compare TEMP, -2147483648
	560 JumpIfNotEqual {586}
	561 Compare X22, 0
	562 JumpIfEqual {586}
	563 Move X10, 0xB59000
	564 Move X8, [X22]
	565 Move X10, [X10+3584]
	566 NotImplemented "Instruction LDRH not yet implemented."
	567 Move X1, [X10]
	568 Compare X9, 0
	569 JumpIfEqual {576}
	570 Move X10, [X8+176]
	571 Add X10, X10, 8
	572 NotImplemented "Instruction LDUR not yet implemented."
	573 NotImplemented "Instruction CMP not yet implemented."
	574 Subtract X9, X9, 1
	575 Add X10, X10, 16
	576 Move X0, X22
	577 Move W2, W31
	578 Call 0x1C5D788
	579 NotImplemented "Instruction LDRSW not yet implemented."
	580 Add X8, X8, X9
	581 Add X0, X8, 312
	582 Move X8, [X0]
	583 Move X1, [X0+8]
	584 Move X0, X22
	585 NotImplemented "Instruction BLR not yet implemented."
	586 Compare X23, 0
	587 JumpIfNotEqual {630}
	588 NotImplemented "Instruction CMP not yet implemented."
	589 Move X0, X21
	590 Call 0x3EB2AD0
	591 Move X20, X0
	592 Move X0, 0xB59000
	593 Move X0, [X0+2000]
	594 Call 0x1C17D08
	595 Move X8, [X20]
	596 Move X1, [X8]
	597 Call 0x1C18270
	598 Move TEMP, X0
	599 And TEMP, TEMP, 1
	600 Compare TEMP, 1
	601 JumpIfNotEqual {622}
	602 Move X20, [X20]
	603 Call 0x3EB2AE0
	604 Move TEMP, 1
	605 Not TEMP
	606 Move W8, TEMP
	607 Move [X19+8], W8
	608 Move X0, 0xB9C000
	609 Move X0, [X0+4000]
	610 Call 0x1C17D08
	611 Move W8, [X0+224]
	612 Compare W8, 0
	613 JumpIfNotEqual {615}
	614 Call 0x1C17DFC
	615 Move X0, 0xB9D000
	616 Move X0, [X0+336]
	617 Call 0x1C17D08
	618 Move X2, X0
	619 Move X0, X19
	620 Move X1, X20
	621 Call AsyncTaskMethodBuilder`1<Object>.SetException, X0, X1
	622 Move W0, 8
	623 Call 0x3EB2AF0
	624 Move X8, [X20]
	625 Move [X0], X8
	626 Move X1, 0x91A000
	627 Add X1, X1, 3672
	628 Move X2, X31
	629 Call 0x3EB2B00
	630 Move X0, X23
	631 Call 0x1C17F18
	632 Move X20, X1
	633 Move X21, X0
	634 Move TEMP, X24
	635 And TEMP, TEMP, -2147483648
	636 Compare TEMP, -2147483648
	637 JumpIfEqual {561}
	638 Move X21, X0
	639 Call 0x3EB2AE0
	640 Move X0, X21
	641 Call 0x1D2D690
	642 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x0359BEF0 MOV X1, X31
	0x0359BEF4 BL 0x1C16DEC
	0x0359BEF8 BL 0x1C16F44
	0x0359BEFC MOV X1, X31
	0x0359BF00 BL 0x1C16DEC
	0x0359BF04 BL 0x1C16F44
	0x0359BF08 MOV X1, X31
	0x0359BF0C BL 0x1C16DEC
	0x0359BF10 B 0x359BF90
	0x0359BF14 B 0x359BF90
	0x0359BF18 B 0x359BF90
	0x0359BF1C B 0x359BF90
	0x0359BF20 B 0x359BF90
	0x0359BF24 B 0x359BF90
	0x0359BF28 B 0x359BF90
	0x0359BF2C B 0x359BF90
	0x0359BF30 B 0x359BF90
	0x0359BF34 B 0x359BF90
	0x0359BF38 B 0x359BF90
	0x0359BF3C B 0x359BF90
	0x0359BF40 B 0x359BF90
	0x0359BF44 B 0x359BF90
	0x0359BF48 B 0x359BF90
	0x0359BF4C B 0x359BF90
	0x0359BF50 B 0x359BF90
	0x0359BF54 B 0x359BF90
	0x0359BF58 B 0x359BF90
	0x0359BF5C B 0x359BF90
	0x0359BF60 B 0x359BF90
	0x0359BF64 B 0x359BF90
	0x0359BF68 B 0x359BF90

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xE45000
	007 Move X21, 0xB9C000
	008 Move W8, [X22+4050]
	009 Move X21, [X21+4000]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xB9D000
	017 Move X0, [X0+344]
	018 Call 0x1C17CF4
	019 Move X0, 0xB9C000
	020 Move X0, [X0+4000]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+4050], W8
	024 Move X0, [X21]
	025 Move X21, 0xB9D000
	026 Move W8, [X0+224]
	027 Move X21, [X21+344]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X2, [X21]
	032 Add X0, X20, 8
	033 Move X1, X19
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Call AsyncTaskMethodBuilder`1<Object>.SetStateMachine, X0, X1
	040 Return 

