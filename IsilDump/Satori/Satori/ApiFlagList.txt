Type: Satori.ApiFlagList

Method: System.Collections.Generic.IEnumerable`1<Satori.IApiFlag> get_Flags()

Disassembly:
	0x03594294 MOV X1, X31
	0x03594298 B 0x33BDD8C
	0x0359429C LDR X0, [X0 + 0x10]
	0x035942A0 RET
	0x035942A4 STR X1, [X0 + 0x10]
	0x035942A8 RET
	0x035942AC LDR X0, [X0 + 0x18]
	0x035942B0 RET
	0x035942B4 STR X1, [X0 + 0x18]
	0x035942B8 RET
	0x035942BC LDR X0, [X0 + 0x20]
	0x035942C0 RET
	0x035942C4 STR X1, [X0 + 0x20]
	0x035942C8 RET
	0x035942CC LDR X0, [X0 + 0x28]
	0x035942D0 RET
	0x035942D4 STR X1, [X0 + 0x28]
	0x035942D8 RET
	0x035942DC STR X30, [X31 - 0x20]!
	0x035942E0 STP X20, X19, [X31 + 0x10]
	0x035942E4 ADRP X20, 0xE4B000
	0x035942E8 LDRB W8, [X20 + 0xFA6]
	0x035942EC MOV X19, X0
	0x035942F0 TBNZ X8, 0x0, 0x3594314
	0x035942F4 ADRP X0, 0xB60000
	0x035942F8 LDR X0, [X0 + 0x6C0]
	0x035942FC BL 0x1C16CF4
	0x03594300 ADRP X0, 0xB60000
	0x03594304 LDR X0, [X0 + 0x6D0]
	0x03594308 BL 0x1C16CF4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xE4C000
	005 Move W8, [X20+3996]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0xBA3000
	012 Move X0, [X0+3712]
	013 Call 0x1C17CF4
	014 Move X0, 0xBA3000
	015 Move X0, [X0+3720]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3996], W8
	019 Move X19, [X19+16]
	020 Compare X19, 0
	021 JumpIfNotEqual {32}
	022 Move X8, 0xBA3000
	023 Move X8, [X8+3720]
	024 Move X0, [X8]
	025 Call 0x1C17F10
	026 Move X8, 0xBA3000
	027 Move X8, [X8+3712]
	028 Move W1, W31
	029 Move X19, X0
	030 Move X2, [X8]
	031 Call List`1<Object>..ctor, X0, X1
	032 Move X0, X19
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move X30, [X31+32]
	036 Return X0

Method: System.Collections.Generic.List`1<Satori.ApiFlag> get__flags()

Disassembly:
	0x0359430C MOVZ W8, 0x1
	0x03594310 STRB W8, [X20 + 0xFA6]

ISIL:
	001 Move X0, [X0+16]
	002 Return X0

Method: System.Void set__flags(System.Collections.Generic.List`1<Satori.ApiFlag> value)

Disassembly:
	0x03594314 LDR X19, [X19 + 0x30]
	0x03594318 CBNZ X19, 0x3594340

ISIL:
	001 Move [X0+16], X1
	002 Return 

Method: System.String ToString()

Disassembly:
	0x0359431C ADRP X8, 0xB60000
	0x03594320 LDR X8, [X8 + 0x6D0]
	0x03594324 LDR X0, [X8]
	0x03594328 BL 0x1C16F10
	0x0359432C ADRP X8, 0xB60000
	0x03594330 LDR X8, [X8 + 0x6C0]
	0x03594334 MOV X19, X0
	0x03594338 LDR X1, [X8]
	0x0359433C BL 0x2AA4804
	0x03594340 MOV X0, X19
	0x03594344 LDP X20, X19, [X31 + 0x10]
	0x03594348 LDR X30, [X31], #0x20
	0x0359434C RET
	0x03594350 LDR X0, [X0 + 0x30]
	0x03594354 RET
	0x03594358 STR X1, [X0 + 0x30]
	0x0359435C RET
	0x03594360 LDR X0, [X0 + 0x38]
	0x03594364 RET
	0x03594368 STR X1, [X0 + 0x38]
	0x0359436C RET
	0x03594370 LDR X0, [X0 + 0x40]
	0x03594374 RET
	0x03594378 STR X1, [X0 + 0x40]
	0x0359437C RET
	0x03594380 LDR X0, [X0 + 0x48]
	0x03594384 RET
	0x03594388 STR X1, [X0 + 0x48]
	0x0359438C RET
	0x03594390 LDR X0, [X0 + 0x50]
	0x03594394 RET
	0x03594398 STR X1, [X0 + 0x50]
	0x0359439C RET
	0x035943A0 LDR X0, [X0 + 0x58]
	0x035943A4 RET
	0x035943A8 STR X1, [X0 + 0x58]
	0x035943AC RET
	0x035943B0 LDR X0, [X0 + 0x60]
	0x035943B4 RET
	0x035943B8 STR X1, [X0 + 0x60]
	0x035943BC RET
	0x035943C0 SUB X31, X31, 0x70
	0x035943C4 STP X29, X30, [X31 + 0x10]
	0x035943C8 STP X28, X27, [X31 + 0x20]
	0x035943CC STP X26, X25, [X31 + 0x30]
	0x035943D0 STP X24, X23, [X31 + 0x40]
	0x035943D4 STP X22, X21, [X31 + 0x50]
	0x035943D8 STP X20, X19, [X31 + 0x60]
	0x035943DC ADRP X25, 0xE4B000
	0x035943E0 ADRP X20, 0xB5F000
	0x035943E4 ADRP X24, 0xBA2000
	0x035943E8 ADRP X26, 0xB5F000
	0x035943EC ADRP X23, 0xB99000

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X25, 0xE4C000
	010 Move X23, 0xB60000
	011 Move X24, 0xBA3000
	012 Move X20, 0xB60000
	013 Move X21, 0xBA3000
	014 Move X22, 0xB9A000
	015 Move W8, [X25+3997]
	016 Move X23, [X23+2104]
	017 Move X24, [X24+3728]
	018 Move X20, [X20+2440]
	019 Move X21, [X21+3736]
	020 Move X22, [X22+3408]
	021 Move X19, X0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {43}
	026 Move X0, 0xBA3000
	027 Move X0, [X0+3728]
	028 Call 0x1C17CF4
	029 Move X0, 0xBA3000
	030 Move X0, [X0+3736]
	031 Call 0x1C17CF4
	032 Move X0, 0xB60000
	033 Move X0, [X0+2104]
	034 Call 0x1C17CF4
	035 Move X0, 0xB9A000
	036 Move X0, [X0+3408]
	037 Call 0x1C17CF4
	038 Move X0, 0xB60000
	039 Move X0, [X0+2440]
	040 Call 0x1C17CF4
	041 Move W8, 1
	042 Move [X25+3997], W8
	043 Move X0, X19
	044 Call ApiFlagList.get_Flags, X0
	045 Move X8, [X23]
	046 Move X2, [X24]
	047 Move X1, X0
	048 Move X0, X8
	049 Call String.Join, X0, X1
	050 Move X8, [X20]
	051 Move X1, [X21]
	052 Move X3, [X22]
	053 Move X20, [X31+48]
	054 Move X19, [X31+56]
	055 Move X22, [X31+32]
	056 Move X21, [X31+40]
	057 Move X24, [X31+16]
	058 Move X23, [X31+24]
	059 Move X2, X0
	060 Move X0, X8
	061 Move X4, X31
	062 Move X30, [X31+64]
	063 Move X25, [X31+72]
	064 Call String.Concat, X0, X1, X2, X3
	065 Return X0

Method: System.Void .ctor()

Disassembly:
	0x035943F0 ADRP X22, 0xB99000
	0x035943F4 ADRP X21, 0xBA2000

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

