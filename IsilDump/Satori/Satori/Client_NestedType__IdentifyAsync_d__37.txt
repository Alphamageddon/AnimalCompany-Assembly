Type: Satori.Client/<IdentifyAsync>d__37

Method: System.Void MoveNext()

Disassembly:
	0x035A5808 BL 0x1FC0130
	0x035A580C B 0x35A58E8
	0x035A5810 LDR W9, [X10]
	0x035A5814 ADD W9, W9, 0x2
	0x035A5818 ADD X8, X8, W9, 0x4, SXTW
	0x035A581C ADD X0, X8, 0x138
	0x035A5820 LDP X8, X1, [X0]
	0x035A5824 MOV X0, X20
	0x035A5828 BLR X8
	0x035A582C LDR X8, [X20]
	0x035A5830 LDR X1, [X23]
	0x035A5834 MOV X22, X0
	0x035A5838 LDRH W9, [X8 + 0x12E]
	0x035A583C CBZ X9, 0x35A5860
	0x035A5840 LDR X10, [X8 + 0xB0]
	0x035A5844 ADD X10, X10, 0x8
	0x035A5848 LDUR X11, [X10 - 0x8]
	0x035A584C CMP X11, X1
	0x035A5850 B.EQ 0x35A5870
	0x035A5854 SUBS X9, X9, 0x1
	0x035A5858 ADD X10, X10, 0x10
	0x035A585C B.NE 0x35A5848
	0x035A5860 MOVZ W2, 0x1
	0x035A5864 MOV X0, X20
	0x035A5868 BL 0x1C5C788
	0x035A586C B 0x35A5880
	0x035A5870 LDR W9, [X10]
	0x035A5874 ADD W9, W9, 0x1
	0x035A5878 ADD X8, X8, W9, 0x4, SXTW
	0x035A587C ADD X0, X8, 0x138
	0x035A5880 LDP X8, X1, [X0]
	0x035A5884 MOV X0, X20
	0x035A5888 BLR X8
	0x035A588C MOV X20, X0
	0x035A5890 LDR X0, [X24]
	0x035A5894 BL 0x1C16F10
	0x035A5898 MOV X21, X0
	0x035A589C MOV X1, X31
	0x035A58A0 BL 0x33BDD8C
	0x035A58A4 STR X31, [X21 + 0x20]
	0x035A58A8 MOV X0, X21
	0x035A58AC MOV X1, X22
	0x035A58B0 MOV X2, X20
	0x035A58B4 BL 0x35A5AE0
	0x035A58B8 MOVN W8, 0x1
	0x035A58BC STR W8, [X19], #0x8
	0x035A58C0 LDR X0, [X25]
	0x035A58C4 ADRP X20, 0xB92000
	0x035A58C8 LDR W8, [X0 + 0xE0]
	0x035A58CC LDR X20, [X20 + 0x358]
	0x035A58D0 CBNZ W8, 0x35A58D8
	0x035A58D4 BL 0x1C16DFC
	0x035A58D8 LDR X2, [X20]
	0x035A58DC MOV X0, X19
	0x035A58E0 MOV X1, X21
	0x035A58E4 BL 0x26322B0
	0x035A58E8 LDP X20, X19, [X31 + 0x40]
	0x035A58EC LDP X22, X21, [X31 + 0x30]
	0x035A58F0 LDP X24, X23, [X31 + 0x20]
	0x035A58F4 LDP X30, X25, [X31 + 0x10]
	0x035A58F8 ADD X31, X31, 0x50
	0x035A58FC RET
	0x035A5900 CBZ X20, 0x35A59EC
	0x035A5904 LDR X8, [X20]
	0x035A5908 LDR X1, [X23]
	0x035A590C LDRH W9, [X8 + 0x12E]
	0x035A5910 CBZ X9, 0x35A5934
	0x035A5914 LDR X10, [X8 + 0xB0]
	0x035A5918 ADD X10, X10, 0x8
	0x035A591C LDUR X11, [X10 - 0x8]
	0x035A5920 CMP X11, X1
	0x035A5924 B.EQ 0x35A5944
	0x035A5928 SUBS X9, X9, 0x1
	0x035A592C ADD X10, X10, 0x10
	0x035A5930 B.NE 0x35A591C
	0x035A5934 MOVZ W2, 0x2
	0x035A5938 MOV X0, X20
	0x035A593C BL 0x1C5C788
	0x035A5940 B 0x35A5954
	0x035A5944 LDR W9, [X10]
	0x035A5948 ADD W9, W9, 0x2
	0x035A594C ADD X8, X8, W9, 0x4, SXTW
	0x035A5950 ADD X0, X8, 0x138
	0x035A5954 LDP X8, X1, [X0]
	0x035A5958 MOV X0, X20
	0x035A595C BLR X8
	0x035A5960 LDR X8, [X20]
	0x035A5964 LDR X1, [X23]
	0x035A5968 MOV X22, X0
	0x035A596C LDRH W9, [X8 + 0x12E]
	0x035A5970 CBZ X9, 0x35A5994
	0x035A5974 LDR X10, [X8 + 0xB0]
	0x035A5978 ADD X10, X10, 0x8
	0x035A597C LDUR X11, [X10 - 0x8]
	0x035A5980 CMP X11, X1
	0x035A5984 B.EQ 0x35A59A4
	0x035A5988 SUBS X9, X9, 0x1
	0x035A598C ADD X10, X10, 0x10
	0x035A5990 B.NE 0x35A597C
	0x035A5994 MOVZ W2, 0x1
	0x035A5998 MOV X0, X20
	0x035A599C BL 0x1C5C788
	0x035A59A0 B 0x35A59B4
	0x035A59A4 LDR W9, [X10]
	0x035A59A8 ADD W9, W9, 0x1
	0x035A59AC ADD X8, X8, W9, 0x4, SXTW
	0x035A59B0 ADD X0, X8, 0x138
	0x035A59B4 LDP X8, X1, [X0]
	0x035A59B8 MOV X0, X20
	0x035A59BC BLR X8
	0x035A59C0 MOV X2, X0
	0x035A59C4 MOV X0, X21
	0x035A59C8 MOV X1, X22
	0x035A59CC BL 0x35A5AE0
	0x035A59D0 B 0x35A58B8
	0x035A59D4 BL 0x1C16F20
	0x035A59D8 BL 0x1C16F20
	0x035A59DC BL 0x1C16F20
	0x035A59E0 BL 0x1C16F20
	0x035A59E4 BL 0x1C16F20
	0x035A59E8 BL 0x1C16F20
	0x035A59EC BL 0x1C16F20
	0x035A59F0 B 0x35A5A30
	0x035A59F4 B 0x35A5A30
	0x035A59F8 B 0x35A5A30
	0x035A59FC B 0x35A5A30
	0x035A5A00 B 0x35A5A30
	0x035A5A04 B 0x35A5A30
	0x035A5A08 B 0x35A5A30
	0x035A5A0C B 0x35A5A30
	0x035A5A10 B 0x35A5A30
	0x035A5A14 B 0x35A5A30
	0x035A5A18 B 0x35A5A30
	0x035A5A1C B 0x35A5A30
	0x035A5A20 B 0x35A5A30
	0x035A5A24 B 0x35A5A30
	0x035A5A28 B 0x35A5A30
	0x035A5A2C B 0x35A5A30
	0x035A5A30 MOV X20, X0
	0x035A5A34 CMP W1, 0x1
	0x035A5A38 B.NE 0x35A5AD4
	0x035A5A3C MOV X0, X20
	0x035A5A40 BL 0x3EB1AD0
	0x035A5A44 MOV X20, X0
	0x035A5A48 ADRP X0, 0xB4E000
	0x035A5A4C LDR X0, [X0 + 0x7D0]
	0x035A5A50 BL 0x1C16D08
	0x035A5A54 LDR X8, [X20]
	0x035A5A58 LDR X1, [X8]
	0x035A5A5C BL 0x1C17270
	0x035A5A60 TBZ X0, 0x0, 0x35A5AAC
	0x035A5A64 LDR X20, [X20]
	0x035A5A68 BL 0x3EB1AE0
	0x035A5A6C MOVN W8, 0x1
	0x035A5A70 STR W8, [X19], #0x8
	0x035A5A74 ADRP X0, 0xB92000
	0x035A5A78 LDR X0, [X0 + 0x268]
	0x035A5A7C BL 0x1C16D08
	0x035A5A80 LDR W8, [X0 + 0xE0]
	0x035A5A84 CBNZ W8, 0x35A5A8C
	0x035A5A88 BL 0x1C16DFC
	0x035A5A8C ADRP X0, 0xB92000
	0x035A5A90 LDR X0, [X0 + 0x388]
	0x035A5A94 BL 0x1C16D08
	0x035A5A98 MOV X2, X0
	0x035A5A9C MOV X0, X19
	0x035A5AA0 MOV X1, X20
	0x035A5AA4 BL 0x26324C8
	0x035A5AA8 B 0x35A58E8
	0x035A5AAC MOVZ W0, 0x8
	0x035A5AB0 BL 0x3EB1AF0
	0x035A5AB4 LDR X8, [X20]
	0x035A5AB8 STR X8, [X0]
	0x035A5ABC ADRP X1, 0x90F000
	0x035A5AC0 ADD X1, X1, 0xE58
	0x035A5AC4 MOV X2, X31
	0x035A5AC8 BL 0x3EB1B00
	0x035A5ACC MOV X20, X0
	0x035A5AD0 BL 0x3EB1AE0
	0x035A5AD4 MOV X0, X20
	0x035A5AD8 BL 0x1D2C690
	0x035A5ADC BL 0x1990590
	0x035A5AE0 STR X30, [X31 - 0x60]!
	0x035A5AE4 STP X28, X27, [X31 + 0x10]
	0x035A5AE8 STP X26, X25, [X31 + 0x20]
	0x035A5AEC STP X24, X23, [X31 + 0x30]
	0x035A5AF0 STP X22, X21, [X31 + 0x40]
	0x035A5AF4 STP X20, X19, [X31 + 0x50]
	0x035A5AF8 ADRP X22, 0xE3B000
	0x035A5AFC ADRP X23, 0xB92000
	0x035A5B00 LDRB W8, [X22 + 0x2D]
	0x035A5B04 LDR X23, [X23 + 0x368]
	0x035A5B08 MOV X20, X2
	0x035A5B0C MOV X21, X1
	0x035A5B10 MOV X19, X0
	0x035A5B14 TBNZ X8, 0x0, 0x35A5B68
	0x035A5B18 ADRP X0, 0xB57000
	0x035A5B1C LDR X0, [X0 + 0x9E8]
	0x035A5B20 BL 0x1C16CF4
	0x035A5B24 ADRP X0, 0xB50000
	0x035A5B28 LDR X0, [X0 + 0x268]
	0x035A5B2C BL 0x1C16CF4
	0x035A5B30 ADRP X0, 0xB92000
	0x035A5B34 LDR X0, [X0 + 0x580]
	0x035A5B38 BL 0x1C16CF4
	0x035A5B3C ADRP X0, 0xB92000
	0x035A5B40 LDR X0, [X0 + 0x368]
	0x035A5B44 BL 0x1C16CF4
	0x035A5B48 ADRP X0, 0xB92000
	0x035A5B4C LDR X0, [X0 + 0x588]
	0x035A5B50 BL 0x1C16CF4
	0x035A5B54 ADRP X0, 0xB8B000
	0x035A5B58 LDR X0, [X0 + 0x498]
	0x035A5B5C BL 0x1C16CF4
	0x035A5B60 MOVZ W8, 0x1
	0x035A5B64 STRB W8, [X22 + 0x2D]
	0x035A5B68 STR X21, [X19 + 0x10]
	0x035A5B6C STR X20, [X19 + 0x28]
	0x035A5B70 LDR X0, [X23]
	0x035A5B74 ADRP X24, 0xB92000
	0x035A5B78 LDR W8, [X0 + 0xE0]
	0x035A5B7C LDR X24, [X24 + 0x580]
	0x035A5B80 CBNZ W8, 0x35A5B88
	0x035A5B84 BL 0x1C16DFC
	0x035A5B88 MOV X0, X21
	0x035A5B8C BL 0x35A8E08
	0x035A5B90 LDR X1, [X24]
	0x035A5B94 BL 0x22109A8
	0x035A5B98 CBZ X0, 0x35A5C9C
	0x035A5B9C ADRP X26, 0xB8B000
	0x035A5BA0 ADRP X27, 0xB50000
	0x035A5BA4 LDR X26, [X26 + 0x498]
	0x035A5BA8 LDR X27, [X27 + 0x268]
	0x035A5BAC ADRP X25, 0xB57000
	0x035A5BB0 ADRP X28, 0xB92000
	0x035A5BB4 LDR X1, [X26]
	0x035A5BB8 LDR X2, [X27]
	0x035A5BBC LDR X25, [X25 + 0x9E8]
	0x035A5BC0 LDR X28, [X28 + 0x588]
	0x035A5BC4 MOV X21, X0
	0x035A5BC8 BL 0x2AA5018
	0x035A5BCC LDR X8, [X25]
	0x035A5BD0 MOV X22, X0
	0x035A5BD4 LDR W9, [X8 + 0xE0]
	0x035A5BD8 CBNZ W9, 0x35A5BE4
	0x035A5BDC MOV X0, X8
	0x035A5BE0 BL 0x1C16DFC
	0x035A5BE4 MOV X0, X22
	0x035A5BE8 MOV X1, X31
	0x035A5BEC BL 0x3320B38
	0x035A5BF0 STR X0, [X19 + 0x18]
	0x035A5BF4 LDR X1, [X28]
	0x035A5BF8 LDR X2, [X27]
	0x035A5BFC MOV X0, X21
	0x035A5C00 BL 0x2AA5018
	0x035A5C04 CBZ X0, 0x35A5C9C
	0x035A5C08 LDR X8, [X0]
	0x035A5C0C LDP X9, X1, [X8 + 0x168]
	0x035A5C10 BLR X9
	0x035A5C14 STR X0, [X19 + 0x30]
	0x035A5C18 MOV X0, X20
	0x035A5C1C MOV X1, X31
	0x035A5C20 BL 0x32277A8
	0x035A5C24 TBNZ X0, 0x0, 0x35A5C80
	0x035A5C28 LDR X0, [X23]
	0x035A5C2C LDR W8, [X0 + 0xE0]
	0x035A5C30 CBNZ W8, 0x35A5C38
	0x035A5C34 BL 0x1C16DFC
	0x035A5C38 MOV X0, X20
	0x035A5C3C BL 0x35A8E08
	0x035A5C40 LDR X1, [X24]
	0x035A5C44 BL 0x22109A8
	0x035A5C48 CBZ X0, 0x35A5C9C
	0x035A5C4C LDR X1, [X26]
	0x035A5C50 LDR X2, [X27]
	0x035A5C54 BL 0x2AA5018
	0x035A5C58 LDR X8, [X25]
	0x035A5C5C MOV X20, X0
	0x035A5C60 LDR W9, [X8 + 0xE0]
	0x035A5C64 CBNZ W9, 0x35A5C70
	0x035A5C68 MOV X0, X8
	0x035A5C6C BL 0x1C16DFC
	0x035A5C70 MOV X0, X20
	0x035A5C74 MOV X1, X31
	0x035A5C78 BL 0x3320B38
	0x035A5C7C STR X0, [X19 + 0x20]
	0x035A5C80 LDP X20, X19, [X31 + 0x50]
	0x035A5C84 LDP X22, X21, [X31 + 0x40]
	0x035A5C88 LDP X24, X23, [X31 + 0x30]
	0x035A5C8C LDP X26, X25, [X31 + 0x20]
	0x035A5C90 LDP X28, X27, [X31 + 0x10]
	0x035A5C94 LDR X30, [X31], #0x60
	0x035A5C98 RET
	0x035A5C9C BL 0x1C16F20
	0x035A5CA0 STR X30, [X31 - 0x30]!
	0x035A5CA4 STP X22, X21, [X31 + 0x10]
	0x035A5CA8 STP X20, X19, [X31 + 0x20]
	0x035A5CAC ADRP X22, 0xE3B000
	0x035A5CB0 ADRP X21, 0xB92000
	0x035A5CB4 LDRB W8, [X22 + 0x15]
	0x035A5CB8 LDR X21, [X21 + 0x268]
	0x035A5CBC MOV X19, X1
	0x035A5CC0 MOV X20, X0
	0x035A5CC4 TBNZ X8, 0x0, 0x35A5CE8
	0x035A5CC8 ADRP X0, 0xB92000
	0x035A5CCC LDR X0, [X0 + 0x390]
	0x035A5CD0 BL 0x1C16CF4
	0x035A5CD4 ADRP X0, 0xB92000
	0x035A5CD8 LDR X0, [X0 + 0x268]
	0x035A5CDC BL 0x1C16CF4
	0x035A5CE0 MOVZ W8, 0x1
	0x035A5CE4 STRB W8, [X22 + 0x15]
	0x035A5CE8 LDR X0, [X21]
	0x035A5CEC ADRP X21, 0xB92000
	0x035A5CF0 LDR W8, [X0 + 0xE0]
	0x035A5CF4 LDR X21, [X21 + 0x390]
	0x035A5CF8 CBNZ W8, 0x35A5D00
	0x035A5CFC BL 0x1C16DFC
	0x035A5D00 LDR X2, [X21]
	0x035A5D04 ADD X0, X20, 0x8
	0x035A5D08 MOV X1, X19
	0x035A5D0C LDP X20, X19, [X31 + 0x20]
	0x035A5D10 LDP X22, X21, [X31 + 0x10]
	0x035A5D14 LDR X30, [X31], #0x30
	0x035A5D18 B 0x2632228
	0x035A5D1C SUB X31, X31, 0x50
	0x035A5D20 STR X30, [X31 + 0x10]
	0x035A5D24 STP X24, X23, [X31 + 0x20]
	0x035A5D28 STP X22, X21, [X31 + 0x30]
	0x035A5D2C STP X20, X19, [X31 + 0x40]
	0x035A5D30 ADRP X20, 0xE3B000
	0x035A5D34 LDRB W8, [X20 + 0x16]
	0x035A5D38 MOV X19, X0
	0x035A5D3C TBNZ X8, 0x0, 0x35A5DC0
	0x035A5D40 ADRP X0, 0xB92000
	0x035A5D44 LDR X0, [X0 + 0x590]
	0x035A5D48 BL 0x1C16CF4
	0x035A5D4C ADRP X0, 0xB92000
	0x035A5D50 LDR X0, [X0 + 0x598]
	0x035A5D54 BL 0x1C16CF4
	0x035A5D58 ADRP X0, 0xB92000
	0x035A5D5C LDR X0, [X0 + 0x5A0]
	0x035A5D60 BL 0x1C16CF4
	0x035A5D64 ADRP X0, 0xB51000
	0x035A5D68 LDR X0, [X0 + 0x280]
	0x035A5D6C BL 0x1C16CF4
	0x035A5D70 ADRP X0, 0xB92000
	0x035A5D74 LDR X0, [X0 + 0x340]
	0x035A5D78 BL 0x1C16CF4
	0x035A5D7C ADRP X0, 0xB4F000
	0x035A5D80 LDR X0, [X0 + 0x9F0]
	0x035A5D84 BL 0x1C16CF4
	0x035A5D88 ADRP X0, 0xB92000
	0x035A5D8C LDR X0, [X0 + 0x290]
	0x035A5D90 BL 0x1C16CF4
	0x035A5D94 ADRP X0, 0xB92000
	0x035A5D98 LDR X0, [X0 + 0x3A8]
	0x035A5D9C BL 0x1C16CF4
	0x035A5DA0 ADRP X0, 0xB92000
	0x035A5DA4 LDR X0, [X0 + 0x3B0]
	0x035A5DA8 BL 0x1C16CF4
	0x035A5DAC ADRP X0, 0xB92000
	0x035A5DB0 LDR X0, [X0 + 0x3B8]
	0x035A5DB4 BL 0x1C16CF4
	0x035A5DB8 MOVZ W8, 0x1
	0x035A5DBC STRB W8, [X20 + 0x16]
	0x035A5DC0 STR X31, [X31 + 0x18]
	0x035A5DC4 STP X31, X31, [X31]
	0x035A5DC8 ADRP X24, 0xB51000
	0x035A5DCC ADRP X23, 0xB92000
	0x035A5DD0 LDR W8, [X19]
	0x035A5DD4 LDR X20, [X19 + 0x20]
	0x035A5DD8 LDR X24, [X24 + 0x280]
	0x035A5DDC LDR X23, [X23 + 0x290]
	0x035A5DE0 CBZ W8, 0x35A5E04
	0x035A5DE4 CMP W8, 0x1
	0x035A5DE8 B.NE 0x35A5E30
	0x035A5DEC LDR X8, [X19 + 0x60]
	0x035A5DF0 MOVN W9, 0x0
	0x035A5DF4 STR X8, [X31]
	0x035A5DF8 STR X31, [X19 + 0x60]
	0x035A5DFC STR W9, [X19]
	0x035A5E00 B 0x35A60C4
	0x035A5E04 LDR X8, [X19 + 0x58]
	0x035A5E08 MOVN W9, 0x0
	0x035A5E0C STR X8, [X31 + 0x8]
	0x035A5E10 STR X31, [X19 + 0x58]
	0x035A5E14 STR W9, [X19]
	0x035A5E18 ADRP X8, 0xB92000
	0x035A5E1C LDR X8, [X8 + 0x3A8]
	0x035A5E20 ADD X0, X31, 0x8
	0x035A5E24 LDR X1, [X8]
	0x035A5E28 BL 0x2677474
	0x035A5E2C B 0x35A5FF0
	0x035A5E30 CBZ X20, 0x35A6160
	0x035A5E34 LDRB W8, [X20 + 0x10]
	0x035A5E38 CBZ W8, 0x35A5FF4
	0x035A5E3C LDR X21, [X19 + 0x28]
	0x035A5E40 CBZ X21, 0x35A6164
	0x035A5E44 LDR X8, [X21]
	0x035A5E48 LDR X1, [X23]
	0x035A5E4C LDRH W9, [X8 + 0x12E]
	0x035A5E50 CBZ X9, 0x35A5E74
	0x035A5E54 LDR X10, [X8 + 0xB0]
	0x035A5E58 ADD X10, X10, 0x8
	0x035A5E5C LDUR X11, [X10 - 0x8]
	0x035A5E60 CMP X11, X1
	0x035A5E64 B.EQ 0x35A5E84
	0x035A5E68 SUBS X9, X9, 0x1
	0x035A5E6C ADD X10, X10, 0x10
	0x035A5E70 B.NE 0x35A5E5C
	0x035A5E74 MOVZ W2, 0x5
	0x035A5E78 MOV X0, X21
	0x035A5E7C BL 0x1C5C788
	0x035A5E80 B 0x35A5E94
	0x035A5E84 LDR W9, [X10]
	0x035A5E88 ADD W9, W9, 0x5
	0x035A5E8C ADD X8, X8, W9, 0x4, SXTW
	0x035A5E90 ADD X0, X8, 0x138
	0x035A5E94 LDP X8, X1, [X0]
	0x035A5E98 MOV X0, X21
	0x035A5E9C BLR X8
	0x035A5EA0 MOV X1, X31
	0x035A5EA4 BL 0x32277A8
	0x035A5EA8 TBNZ X0, 0x0, 0x35A5FF0
	0x035A5EAC ADRP X8, 0xB4F000
	0x035A5EB0 LDR X8, [X8 + 0x9F0]
	0x035A5EB4 LDR X21, [X19 + 0x28]
	0x035A5EB8 LDR X0, [X8]
	0x035A5EBC LDR W8, [X0 + 0xE0]
	0x035A5EC0 CBNZ W8, 0x35A5EC8
	0x035A5EC4 BL 0x1C16DFC
	0x035A5EC8 MOV X0, X31
	0x035A5ECC BL 0x33616A4
	0x035A5ED0 ADRP X22, 0xB92000
	0x035A5ED4 LDR X22, [X22 + 0x340]
	0x035A5ED8 MOV X8, X0
	0x035A5EDC STR X8, [X31 + 0x18]
	0x035A5EE0 LDR X0, [X22]
	0x035A5EE4 LDR W8, [X0 + 0xE0]
	0x035A5EE8 CBNZ W8, 0x35A5EF4
	0x035A5EEC BL 0x1C16DFC

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+32], X24
	004 Move [X31+40], X23
	005 Move [X31+48], X22
	006 Move [X31+56], X21
	007 Move [X31+64], X20
	008 Move [X31+72], X19
	009 Move X20, 0xE3C000
	010 Move W8, [X20+16]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {66}
	016 Move X0, 0xB93000
	017 Move X0, [X0+1328]
	018 Call 0x1C17CF4
	019 Move X0, 0xB93000
	020 Move X0, [X0+1336]
	021 Call 0x1C17CF4
	022 Move X0, 0xB93000
	023 Move X0, [X0+1344]
	024 Call 0x1C17CF4
	025 Move X0, 0xB93000
	026 Move X0, [X0+856]
	027 Call 0x1C17CF4
	028 Move X0, 0xB93000
	029 Move X0, [X0+616]
	030 Call 0x1C17CF4
	031 Move X0, 0xB93000
	032 Move X0, [X0+832]
	033 Call 0x1C17CF4
	034 Move X0, 0xB50000
	035 Move X0, [X0+2544]
	036 Call 0x1C17CF4
	037 Move X0, 0xB93000
	038 Move X0, [X0+864]
	039 Call 0x1C17CF4
	040 Move X0, 0xB93000
	041 Move X0, [X0+656]
	042 Call 0x1C17CF4
	043 Move X0, 0xB93000
	044 Move X0, [X0+872]
	045 Call 0x1C17CF4
	046 Move X0, 0xB93000
	047 Move X0, [X0+936]
	048 Call 0x1C17CF4
	049 Move X0, 0xB93000
	050 Move X0, [X0+880]
	051 Call 0x1C17CF4
	052 Move X0, 0xB93000
	053 Move X0, [X0+944]
	054 Call 0x1C17CF4
	055 Move X0, 0xB93000
	056 Move X0, [X0+888]
	057 Call 0x1C17CF4
	058 Move X0, 0xB93000
	059 Move X0, [X0+896]
	060 Call 0x1C17CF4
	061 Move X0, 0xB93000
	062 Move X0, [X0+952]
	063 Call 0x1C17CF4
	064 Move W8, 1
	065 Move [X20+16], W8
	066 Move [X31+24], X31
	067 Move [X31], X31
	068 Move [X31+8], X31
	069 Move X23, 0xB93000
	070 Move X24, 0xB93000
	071 Move W8, [X19]
	072 Move X20, [X19+32]
	073 Move X23, [X23+616]
	074 Move X24, [X24+656]
	075 Compare W8, 0
	076 JumpIfEqual {85}
	077 NotImplemented "Instruction CMP not yet implemented."
	078 Move X8, [X19+96]
	079 Move TEMP, 0
	080 Not TEMP
	081 Move W9, TEMP
	082 Move [X31], X8
	083 Move [X19+96], X31
	084 Move [X19], W9
	085 Move X8, [X19+88]
	086 Move TEMP, 0
	087 Not TEMP
	088 Move W9, TEMP
	089 Move [X31+8], X8
	090 Move [X19+88], X31
	091 Move [X19], W9
	092 Move X8, 0xB93000
	093 Move X8, [X8+936]
	094 Add X0, X31, 8
	095 Move X1, [X8]
	096 Call TaskAwaiter`1<Object>.GetResult, X0
	097 Compare X20, 0
	098 JumpIfEqual {403}
	099 Move W8, [X20+16]
	100 Compare W8, 0
	101 JumpIfEqual {224}
	102 Move X21, [X19+40]
	103 Compare X21, 0
	104 JumpIfEqual {404}
	105 Move X8, [X21]
	106 Move X1, [X24]
	107 NotImplemented "Instruction LDRH not yet implemented."
	108 Compare X9, 0
	109 JumpIfEqual {116}
	110 Move X10, [X8+176]
	111 Add X10, X10, 8
	112 NotImplemented "Instruction LDUR not yet implemented."
	113 NotImplemented "Instruction CMP not yet implemented."
	114 Subtract X9, X9, 1
	115 Add X10, X10, 16
	116 Move W2, 5
	117 Move X0, X21
	118 Call 0x1C5D788
	119 Move W9, [X10]
	120 Add W9, W9, 5
	121 Add X8, X8, W9
	122 Add X0, X8, 312
	123 Move X8, [X0]
	124 Move X1, [X0+8]
	125 Move X0, X21
	126 NotImplemented "Instruction BLR not yet implemented."
	127 Move X1, X31
	128 Call String.IsNullOrEmpty, X0
	129 Move TEMP, X0
	130 And TEMP, TEMP, 1
	131 Compare TEMP, 1
	132 JumpIfEqual {224}
	133 Move X8, 0xB50000
	134 Move X8, [X8+2544]
	135 Move X21, [X19+40]
	136 Move X0, [X8]
	137 Move W8, [X0+224]
	138 Compare W8, 0
	139 JumpIfNotEqual {141}
	140 Call 0x1C17DFC
	141 Move X0, X31
	142 Call DateTime.get_UtcNow
	143 Move X22, 0xB93000
	144 Move X22, [X22+832]
	145 Move X8, X0
	146 Move [X31+24], X8
	147 Move X0, [X22]
	148 Move W8, [X0+224]
	149 Compare W8, 0
	150 JumpIfNotEqual {153}
	151 Call 0x1C17DFC
	152 Move X0, [X22]
	153 Move X8, [X0+184]
	154 Move X1, [X8]
	155 Add X0, X31, 24
	156 Move X2, X31
	157 Call DateTime.Add, X0, X1
	158 Compare X21, 0
	159 JumpIfEqual {405}
	160 Move X8, [X21]
	161 Move X1, [X24]
	162 Move X22, X0
	163 NotImplemented "Instruction LDRH not yet implemented."
	164 Compare X9, 0
	165 JumpIfEqual {172}
	166 Move X10, [X8+176]
	167 Add X10, X10, 8
	168 NotImplemented "Instruction LDUR not yet implemented."
	169 NotImplemented "Instruction CMP not yet implemented."
	170 Subtract X9, X9, 1
	171 Add X10, X10, 16
	172 Move W2, 7
	173 Move X0, X21
	174 Call 0x1C5D788
	175 Move W9, [X10]
	176 Add W9, W9, 7
	177 Add X8, X8, W9
	178 Add X0, X8, 312
	179 Move X8, [X0]
	180 Move X2, [X0+8]
	181 Move X0, X21
	182 Move X1, X22
	183 NotImplemented "Instruction BLR not yet implemented."
	184 Move TEMP, X0
	185 And TEMP, TEMP, 1
	186 Compare TEMP, 1
	187 JumpIfNotEqual {224}
	188 Move X1, [X19+40]
	189 Move X2, [X19+48]
	190 Move X3, [X19+56]
	191 Move X0, X20
	192 Call Client.SessionRefreshAsync, X0, X1, X2
	193 Compare X0, 0
	194 JumpIfEqual {406}
	195 Move X8, 0xB93000
	196 Move X8, [X8+952]
	197 Move X1, [X8]
	198 Call Task`1<Object>.GetAwaiter, X0
	199 Move X8, 0xB93000
	200 Move X8, [X8+944]
	201 Move [X31+8], X0
	202 Move X1, [X8]
	203 Add X0, X31, 8
	204 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	205 Move TEMP, X0
	206 And TEMP, TEMP, 1
	207 Compare TEMP, 1
	208 JumpIfEqual {92}
	209 Move [X19], W31
	210 Move X8, [X31+8]
	211 Move [X19+88], X8
	212 Move X0, [X23]
	213 Move W8, [X0+224]
	214 Compare W8, 0
	215 JumpIfNotEqual {217}
	216 Call 0x1C17DFC
	217 Move X8, 0xB93000
	218 Move X8, [X8+1336]
	219 Add X0, X19, 8
	220 Move X3, [X8]
	221 Add X1, X31, 8
	222 Move X2, X19
	223 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	224 Move X8, 0xB93000
	225 Move X8, [X8+1328]
	226 Move X0, [X8]
	227 Call 0x1C17F10
	228 Move X21, X0
	229 Move X1, X31
	230 Call Object..ctor, X0
	231 Compare X21, 0
	232 JumpIfEqual {398}
	233 Move X8, [X19+64]
	234 Move [X21+32], X8
	235 NotImplemented "Instruction LDUR not yet implemented."
	236 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	237 Move [X21+1], V0
	238 Compare X20, 0
	239 JumpIfEqual {399}
	240 Move X22, [X19+40]
	241 Compare X22, 0
	242 JumpIfEqual {400}
	243 Move X8, [X22]
	244 Move X20, [X20+64]
	245 Move X1, [X24]
	246 NotImplemented "Instruction LDRH not yet implemented."
	247 Compare X9, 0
	248 JumpIfEqual {255}
	249 Move X10, [X8+176]
	250 Add X10, X10, 8
	251 NotImplemented "Instruction LDUR not yet implemented."
	252 NotImplemented "Instruction CMP not yet implemented."
	253 Subtract X9, X9, 1
	254 Add X10, X10, 16
	255 Move X0, X22
	256 Move W2, W31
	257 Call 0x1C5D788
	258 NotImplemented "Instruction LDRSW not yet implemented."
	259 Add X8, X8, X9
	260 Add X0, X8, 312
	261 Move X8, [X0]
	262 Move X1, [X0+8]
	263 Move X0, X22
	264 NotImplemented "Instruction BLR not yet implemented."
	265 Move X1, X0
	266 Compare X20, 0
	267 JumpIfEqual {401}
	268 Move X3, [X19+48]
	269 Move X4, [X19+56]
	270 Move X0, X20
	271 Move X2, X21
	272 Call ApiClient.SatoriIdentifyAsync, X0, X1, X2, X3
	273 Compare X0, 0
	274 JumpIfEqual {402}
	275 Move X8, 0xB93000
	276 Move X8, [X8+896]
	277 Move X1, [X8]
	278 Call Task`1<Object>.GetAwaiter, X0
	279 Move X8, 0xB93000
	280 Move X8, [X8+888]
	281 Move [X31], X0
	282 Move X1, [X8]
	283 Add X0, X31, 0
	284 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	285 Move TEMP, X0
	286 And TEMP, TEMP, 1
	287 Compare TEMP, 1
	288 JumpIfNotEqual {313}
	289 Move X8, 0xB93000
	290 Move X8, [X8+880]
	291 Add X0, X31, 0
	292 Move X1, [X8]
	293 Call TaskAwaiter`1<Object>.GetResult, X0
	294 Move X20, X0
	295 Compare X0, 0
	296 JumpIfEqual {397}
	297 Move X22, 0xB93000
	298 Move X8, [X20]
	299 Move X22, [X22+864]
	300 NotImplemented "Instruction LDRH not yet implemented."
	301 Move X1, [X22]
	302 Compare X9, 0
	303 JumpIfEqual {310}
	304 Move X10, [X8+176]
	305 Add X10, X10, 8
	306 NotImplemented "Instruction LDUR not yet implemented."
	307 NotImplemented "Instruction CMP not yet implemented."
	308 Subtract X9, X9, 1
	309 Add X10, X10, 16
	310 Move W2, 2
	311 Move X0, X20
	312 Call 0x1C5D788
	313 Move W8, 1
	314 Move [X19], W8
	315 Move X8, [X31]
	316 Move [X19+96], X8
	317 Move X0, [X23]
	318 Move W8, [X0+224]
	319 Compare W8, 0
	320 JumpIfNotEqual {322}
	321 Call 0x1C17DFC
	322 Move X8, 0xB93000
	323 Move X8, [X8+1344]
	324 Add X0, X19, 8
	325 Move X3, [X8]
	326 Add X1, X31, 0
	327 Move X2, X19
	328 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	329 Move W9, [X10]
	330 Add W9, W9, 2
	331 Add X8, X8, W9
	332 Add X0, X8, 312
	333 Move X8, [X0]
	334 Move X1, [X0+8]
	335 Move X0, X20
	336 NotImplemented "Instruction BLR not yet implemented."
	337 Move X8, [X20]
	338 Move X1, [X22]
	339 Move X21, X0
	340 NotImplemented "Instruction LDRH not yet implemented."
	341 Compare X9, 0
	342 JumpIfEqual {349}
	343 Move X10, [X8+176]
	344 Add X10, X10, 8
	345 NotImplemented "Instruction LDUR not yet implemented."
	346 NotImplemented "Instruction CMP not yet implemented."
	347 Subtract X9, X9, 1
	348 Add X10, X10, 16
	349 Move W2, 1
	350 Move X0, X20
	351 Call 0x1C5D788
	352 Move W9, [X10]
	353 Add W9, W9, 1
	354 Add X8, X8, W9
	355 Add X0, X8, 312
	356 Move X8, [X0]
	357 Move X1, [X0+8]
	358 Move X0, X20
	359 NotImplemented "Instruction BLR not yet implemented."
	360 Move X8, 0xB93000
	361 Move X8, [X8+872]
	362 Move X22, X0
	363 Move X0, [X8]
	364 Call 0x1C17F10
	365 Move X20, X0
	366 Move X1, X31
	367 Call Object..ctor, X0
	368 Move [X20+32], X31
	369 Move X0, X20
	370 Move X1, X21
	371 Move X2, X22
	372 Call Session.Update, X0, X1, X2
	373 Move TEMP, 1
	374 Not TEMP
	375 Move W8, TEMP
	376 Move [X19+8], W8
	377 Move X0, [X23]
	378 Move X21, 0xB93000
	379 Move W8, [X0+224]
	380 Move X21, [X21+856]
	381 Compare W8, 0
	382 JumpIfNotEqual {384}
	383 Call 0x1C17DFC
	384 Move X2, [X21]
	385 Move X0, X19
	386 Move X1, X20
	387 Call AsyncTaskMethodBuilder`1<Object>.SetResult, X0, X1
	388 Move X20, [X31+64]
	389 Move X19, [X31+72]
	390 Move X22, [X31+48]
	391 Move X21, [X31+56]
	392 Move X24, [X31+32]
	393 Move X23, [X31+40]
	394 Move X30, [X31+16]
	395 Add X31, X31, 80
	396 Return 
	397 Call 0x1C17F20
	398 Call 0x1C17F20
	399 Call 0x1C17F20
	400 Call 0x1C17F20
	401 Call 0x1C17F20
	402 Call 0x1C17F20
	403 Call 0x1C17F20
	404 Call 0x1C17F20
	405 Call 0x1C17F20
	406 Call 0x1C17F20
	407 Move X20, X0
	408 NotImplemented "Instruction CMP not yet implemented."
	409 Move X0, X20
	410 Call 0x3EB2AD0
	411 Move X20, X0
	412 Move X0, 0xB4F000
	413 Move X0, [X0+2000]
	414 Call 0x1C17D08
	415 Move X8, [X20]
	416 Move X1, [X8]
	417 Call 0x1C18270
	418 Move TEMP, X0
	419 And TEMP, TEMP, 1
	420 Compare TEMP, 1
	421 JumpIfNotEqual {442}
	422 Move X20, [X20]
	423 Call 0x3EB2AE0
	424 Move TEMP, 1
	425 Not TEMP
	426 Move W8, TEMP
	427 Move [X19+8], W8
	428 Move X0, 0xB93000
	429 Move X0, [X0+616]
	430 Call 0x1C17D08
	431 Move W8, [X0+224]
	432 Compare W8, 0
	433 JumpIfNotEqual {435}
	434 Call 0x1C17DFC
	435 Move X0, 0xB93000
	436 Move X0, [X0+904]
	437 Call 0x1C17D08
	438 Move X2, X0
	439 Move X0, X19
	440 Move X1, X20
	441 Call AsyncTaskMethodBuilder`1<Object>.SetException, X0, X1
	442 Move W0, 8
	443 Call 0x3EB2AF0
	444 Move X8, [X20]
	445 Move [X0], X8
	446 Move X1, 0x910000
	447 Add X1, X1, 3672
	448 Move X2, X31
	449 Call 0x3EB2B00
	450 Move X20, X0
	451 Call 0x3EB2AE0
	452 Move X0, X20
	453 Call 0x1D2D690
	454 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x035A5EF0 LDR X0, [X22]
	0x035A5EF4 LDR X8, [X0 + 0xB8]
	0x035A5EF8 LDR X1, [X8]
	0x035A5EFC ADD X0, X31, 0x18
	0x035A5F00 MOV X2, X31
	0x035A5F04 BL 0x335FC68
	0x035A5F08 CBZ X21, 0x35A6168
	0x035A5F0C LDR X8, [X21]
	0x035A5F10 LDR X1, [X23]
	0x035A5F14 MOV X22, X0
	0x035A5F18 LDRH W9, [X8 + 0x12E]
	0x035A5F1C CBZ X9, 0x35A5F40
	0x035A5F20 LDR X10, [X8 + 0xB0]
	0x035A5F24 ADD X10, X10, 0x8
	0x035A5F28 LDUR X11, [X10 - 0x8]
	0x035A5F2C CMP X11, X1
	0x035A5F30 B.EQ 0x35A5F50
	0x035A5F34 SUBS X9, X9, 0x1
	0x035A5F38 ADD X10, X10, 0x10
	0x035A5F3C B.NE 0x35A5F28
	0x035A5F40 MOVZ W2, 0x7
	0x035A5F44 MOV X0, X21
	0x035A5F48 BL 0x1C5C788
	0x035A5F4C B 0x35A5F60
	0x035A5F50 LDR W9, [X10]
	0x035A5F54 ADD W9, W9, 0x7
	0x035A5F58 ADD X8, X8, W9, 0x4, SXTW
	0x035A5F5C ADD X0, X8, 0x138
	0x035A5F60 LDP X8, X2, [X0]
	0x035A5F64 MOV X0, X21
	0x035A5F68 MOV X1, X22

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xE3C000
	007 Move X21, 0xB93000
	008 Move W8, [X22+17]
	009 Move X21, [X21+616]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xB93000
	017 Move X0, [X0+912]
	018 Call 0x1C17CF4
	019 Move X0, 0xB93000
	020 Move X0, [X0+616]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+17], W8
	024 Move X0, [X21]
	025 Move X21, 0xB93000
	026 Move W8, [X0+224]
	027 Move X21, [X21+912]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X2, [X21]
	032 Add X0, X20, 8
	033 Move X1, X19
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Call AsyncTaskMethodBuilder`1<Object>.SetStateMachine, X0, X1
	040 Return 

