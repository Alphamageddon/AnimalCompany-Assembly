Type: Satori.Client/<DeleteIdentityAsync>d__42

Method: System.Void MoveNext()

Disassembly:
	0x035A1274 B 0x35A12D0
	0x035A1278 B 0x35A12D0
	0x035A127C B 0x35A12D0
	0x035A1280 B 0x35A12D0
	0x035A1284 B 0x35A12D0
	0x035A1288 B 0x35A12D0
	0x035A128C B 0x35A12D0
	0x035A1290 B 0x35A12D0
	0x035A1294 B 0x35A12D0
	0x035A1298 B 0x35A12D0
	0x035A129C B 0x35A12D0
	0x035A12A0 B 0x35A12D0
	0x035A12A4 B 0x35A12D0
	0x035A12A8 B 0x35A12D0
	0x035A12AC B 0x35A12D0
	0x035A12B0 B 0x35A12D0
	0x035A12B4 B 0x35A12D0
	0x035A12B8 B 0x35A12D0
	0x035A12BC B 0x35A12D0
	0x035A12C0 B 0x35A12D0
	0x035A12C4 B 0x35A12D0
	0x035A12C8 B 0x35A12D0
	0x035A12CC B 0x35A12D0
	0x035A12D0 MOV X20, X0
	0x035A12D4 CMP W1, 0x1
	0x035A12D8 B.NE 0x35A1368
	0x035A12DC MOV X0, X20
	0x035A12E0 BL 0x3EB1AD0
	0x035A12E4 MOV X20, X0
	0x035A12E8 ADRP X0, 0xB52000
	0x035A12EC LDR X0, [X0 + 0x7D0]
	0x035A12F0 BL 0x1C16D08
	0x035A12F4 LDR X8, [X20]
	0x035A12F8 LDR X1, [X8]
	0x035A12FC BL 0x1C17270
	0x035A1300 TBZ X0, 0x0, 0x35A1340
	0x035A1304 LDR X20, [X20]
	0x035A1308 BL 0x3EB1AE0
	0x035A130C MOVN W8, 0x1
	0x035A1310 STR W8, [X19], #0x8
	0x035A1314 ADRP X0, 0xB55000
	0x035A1318 LDR X0, [X0 + 0x280]
	0x035A131C BL 0x1C16D08
	0x035A1320 LDR W8, [X0 + 0xE0]
	0x035A1324 CBNZ W8, 0x35A132C
	0x035A1328 BL 0x1C16DFC
	0x035A132C MOV X0, X19
	0x035A1330 MOV X1, X20
	0x035A1334 MOV X2, X31
	0x035A1338 BL 0x32C4908
	0x035A133C B 0x35A121C
	0x035A1340 MOVZ W0, 0x8
	0x035A1344 BL 0x3EB1AF0
	0x035A1348 LDR X8, [X20]
	0x035A134C STR X8, [X0]
	0x035A1350 ADRP X1, 0x913000
	0x035A1354 ADD X1, X1, 0xE58
	0x035A1358 MOV X2, X31
	0x035A135C BL 0x3EB1B00
	0x035A1360 MOV X20, X0
	0x035A1364 BL 0x3EB1AE0
	0x035A1368 MOV X0, X20
	0x035A136C BL 0x1D2C690
	0x035A1370 BL 0x1990590
	0x035A1374 STP X30, X21, [X31 - 0x20]!
	0x035A1378 STP X20, X19, [X31 + 0x10]
	0x035A137C ADRP X20, 0xE3F000
	0x035A1380 ADRP X21, 0xB96000
	0x035A1384 LDRB W8, [X20 + 0x1A]
	0x035A1388 LDR X21, [X21 + 0x3F8]
	0x035A138C MOV X19, X0
	0x035A1390 TBNZ X8, 0x0, 0x35A13B4
	0x035A1394 ADRP X0, 0xB96000
	0x035A1398 LDR X0, [X0 + 0x3F8]
	0x035A139C BL 0x1C16CF4
	0x035A13A0 ADRP X0, 0xB96000
	0x035A13A4 LDR X0, [X0 + 0x400]
	0x035A13A8 BL 0x1C16CF4
	0x035A13AC MOVZ W8, 0x1
	0x035A13B0 STRB W8, [X20 + 0x1A]
	0x035A13B4 LDR X0, [X21]
	0x035A13B8 BL 0x1C16F10
	0x035A13BC MOV X1, X31
	0x035A13C0 MOV X20, X0
	0x035A13C4 BL 0x33BDD8C
	0x035A13C8 CBZ X20, 0x35A142C
	0x035A13CC LDR X8, [X19 + 0x10]
	0x035A13D0 ADRP X9, 0xB96000
	0x035A13D4 LDR X9, [X9 + 0x400]
	0x035A13D8 STR X8, [X20 + 0x20]
	0x035A13DC LDR X21, [X19 + 0x18]
	0x035A13E0 LDR X0, [X9]
	0x035A13E4 LDR W8, [X0 + 0xE0]
	0x035A13E8 CBNZ W8, 0x35A13F0
	0x035A13EC BL 0x1C16DFC
	0x035A13F0 MOVZ W1, 0x1
	0x035A13F4 MOV X0, X21
	0x035A13F8 MOV X2, X31
	0x035A13FC BL 0x36165BC
	0x035A1400 STR X0, [X20 + 0x28]
	0x035A1404 LDR X8, [X19 + 0x20]
	0x035A1408 MOV X0, X20
	0x035A140C STR X8, [X20 + 0x30]
	0x035A1410 LDR X8, [X19 + 0x28]
	0x035A1414 STR X8, [X20 + 0x18]
	0x035A1418 LDR X8, [X19 + 0x30]
	0x035A141C STR X8, [X20 + 0x10]
	0x035A1420 LDP X20, X19, [X31 + 0x10]
	0x035A1424 LDP X30, X21, [X31], #0x20
	0x035A1428 RET
	0x035A142C BL 0x1C16F20
	0x035A1430 STR X30, [X31 - 0x30]!
	0x035A1434 STP X22, X21, [X31 + 0x10]
	0x035A1438 STP X20, X19, [X31 + 0x20]
	0x035A143C ADRP X21, 0xE3E000
	0x035A1440 ADRP X22, 0xB55000
	0x035A1444 LDRB W8, [X21 + 0xFFF]
	0x035A1448 LDR X22, [X22 + 0x280]
	0x035A144C MOV X19, X1
	0x035A1450 MOV X20, X0
	0x035A1454 TBNZ X8, 0x0, 0x35A146C
	0x035A1458 ADRP X0, 0xB55000
	0x035A145C LDR X0, [X0 + 0x280]
	0x035A1460 BL 0x1C16CF4
	0x035A1464 MOVZ W8, 0x1
	0x035A1468 STRB W8, [X21 + 0xFFF]
	0x035A146C LDR X0, [X22]
	0x035A1470 LDR W8, [X0 + 0xE0]
	0x035A1474 CBNZ W8, 0x35A147C
	0x035A1478 BL 0x1C16DFC
	0x035A147C ADD X0, X20, 0x8
	0x035A1480 MOV X1, X19
	0x035A1484 LDP X20, X19, [X31 + 0x20]
	0x035A1488 LDP X22, X21, [X31 + 0x10]
	0x035A148C MOV X2, X31
	0x035A1490 LDR X30, [X31], #0x30
	0x035A1494 B 0x32C477C
	0x035A1498 SUB X31, X31, 0x70
	0x035A149C STP X30, X27, [X31 + 0x20]
	0x035A14A0 STP X26, X25, [X31 + 0x30]
	0x035A14A4 STP X24, X23, [X31 + 0x40]
	0x035A14A8 STP X22, X21, [X31 + 0x50]
	0x035A14AC STP X20, X19, [X31 + 0x60]
	0x035A14B0 ADRP X20, 0xE3F000
	0x035A14B4 LDRB W8, [X20]
	0x035A14B8 MOV X19, X0
	0x035A14BC TBNZ X8, 0x0, 0x35A1594
	0x035A14C0 ADRP X0, 0xB96000
	0x035A14C4 LDR X0, [X0 + 0x3D0]
	0x035A14C8 BL 0x1C16CF4
	0x035A14CC ADRP X0, 0xB96000
	0x035A14D0 LDR X0, [X0 + 0x408]
	0x035A14D4 BL 0x1C16CF4
	0x035A14D8 ADRP X0, 0xB96000
	0x035A14DC LDR X0, [X0 + 0x410]
	0x035A14E0 BL 0x1C16CF4
	0x035A14E4 ADRP X0, 0xB55000
	0x035A14E8 LDR X0, [X0 + 0x280]
	0x035A14EC BL 0x1C16CF4
	0x035A14F0 ADRP X0, 0xB96000
	0x035A14F4 LDR X0, [X0 + 0x340]
	0x035A14F8 BL 0x1C16CF4
	0x035A14FC ADRP X0, 0xB53000
	0x035A1500 LDR X0, [X0 + 0x9F0]
	0x035A1504 BL 0x1C16CF4
	0x035A1508 ADRP X0, 0xB52000
	0x035A150C LDR X0, [X0 + 0xE00]
	0x035A1510 BL 0x1C16CF4
	0x035A1514 ADRP X0, 0xB96000
	0x035A1518 LDR X0, [X0 + 0x418]
	0x035A151C BL 0x1C16CF4
	0x035A1520 ADRP X0, 0xB96000
	0x035A1524 LDR X0, [X0 + 0x420]
	0x035A1528 BL 0x1C16CF4
	0x035A152C ADRP X0, 0xB52000
	0x035A1530 LDR X0, [X0 + 0xE18]
	0x035A1534 BL 0x1C16CF4
	0x035A1538 ADRP X0, 0xB96000
	0x035A153C LDR X0, [X0 + 0x290]
	0x035A1540 BL 0x1C16CF4
	0x035A1544 ADRP X0, 0xB96000
	0x035A1548 LDR X0, [X0 + 0x3E8]
	0x035A154C BL 0x1C16CF4
	0x035A1550 ADRP X0, 0xB96000
	0x035A1554 LDR X0, [X0 + 0x3F0]
	0x035A1558 BL 0x1C16CF4
	0x035A155C ADRP X0, 0xB95000
	0x035A1560 LDR X0, [X0 + 0xE40]
	0x035A1564 BL 0x1C16CF4
	0x035A1568 ADRP X0, 0xB96000
	0x035A156C LDR X0, [X0 + 0x3A8]
	0x035A1570 BL 0x1C16CF4
	0x035A1574 ADRP X0, 0xB96000
	0x035A1578 LDR X0, [X0 + 0x3B0]
	0x035A157C BL 0x1C16CF4
	0x035A1580 ADRP X0, 0xB96000
	0x035A1584 LDR X0, [X0 + 0x3B8]
	0x035A1588 BL 0x1C16CF4
	0x035A158C MOVZ W8, 0x1
	0x035A1590 STRB W8, [X20]
	0x035A1594 STP X31, X31, [X31 + 0x10]
	0x035A1598 STR X31, [X31 + 0x8]
	0x035A159C ADRP X24, 0xB55000
	0x035A15A0 LDR W25, [X19]
	0x035A15A4 LDR X20, [X19 + 0x20]
	0x035A15A8 LDR X24, [X24 + 0x280]
	0x035A15AC CBZ W25, 0x35A15D0
	0x035A15B0 CMP W25, 0x1
	0x035A15B4 B.NE 0x35A15FC
	0x035A15B8 LDR X8, [X19 + 0x50]
	0x035A15BC MOVN W9, 0x0
	0x035A15C0 STR X8, [X31 + 0x8]
	0x035A15C4 STR X31, [X19 + 0x50]
	0x035A15C8 STR W9, [X19]
	0x035A15CC B 0x35A1AD4
	0x035A15D0 LDR X8, [X19 + 0x48]
	0x035A15D4 MOVN W25, 0x0
	0x035A15D8 STR X8, [X31 + 0x10]
	0x035A15DC STR X31, [X19 + 0x48]
	0x035A15E0 STR W25, [X19]
	0x035A15E4 ADRP X8, 0xB96000
	0x035A15E8 LDR X8, [X8 + 0x3A8]
	0x035A15EC ADD X0, X31, 0x10
	0x035A15F0 LDR X1, [X8]
	0x035A15F4 BL 0x2677474
	0x035A15F8 B 0x35A17C4
	0x035A15FC CBZ X20, 0x35A1B90
	0x035A1600 LDRB W8, [X20 + 0x10]
	0x035A1604 CBZ W8, 0x35A17C4
	0x035A1608 LDR X21, [X19 + 0x28]
	0x035A160C CBZ X21, 0x35A1B94
	0x035A1610 ADRP X23, 0xB96000
	0x035A1614 LDR X8, [X21]
	0x035A1618 LDR X23, [X23 + 0x290]
	0x035A161C LDRH W9, [X8 + 0x12E]
	0x035A1620 LDR X1, [X23]
	0x035A1624 CBZ X9, 0x35A1648
	0x035A1628 LDR X10, [X8 + 0xB0]
	0x035A162C ADD X10, X10, 0x8
	0x035A1630 LDUR X11, [X10 - 0x8]
	0x035A1634 CMP X11, X1
	0x035A1638 B.EQ 0x35A1658
	0x035A163C SUBS X9, X9, 0x1
	0x035A1640 ADD X10, X10, 0x10
	0x035A1644 B.NE 0x35A1630
	0x035A1648 MOVZ W2, 0x5
	0x035A164C MOV X0, X21
	0x035A1650 BL 0x1C5C788
	0x035A1654 B 0x35A1668
	0x035A1658 LDR W9, [X10]
	0x035A165C ADD W9, W9, 0x5
	0x035A1660 ADD X8, X8, W9, 0x4, SXTW
	0x035A1664 ADD X0, X8, 0x138
	0x035A1668 LDP X8, X1, [X0]
	0x035A166C MOV X0, X21
	0x035A1670 BLR X8
	0x035A1674 MOV X1, X31
	0x035A1678 BL 0x32277A8
	0x035A167C TBNZ X0, 0x0, 0x35A17C4
	0x035A1680 ADRP X8, 0xB53000
	0x035A1684 LDR X8, [X8 + 0x9F0]
	0x035A1688 LDR X21, [X19 + 0x28]
	0x035A168C LDR X0, [X8]
	0x035A1690 LDR W8, [X0 + 0xE0]
	0x035A1694 CBNZ W8, 0x35A169C
	0x035A1698 BL 0x1C16DFC
	0x035A169C MOV X0, X31
	0x035A16A0 BL 0x33616A4
	0x035A16A4 ADRP X22, 0xB96000
	0x035A16A8 LDR X22, [X22 + 0x340]
	0x035A16AC MOV X8, X0
	0x035A16B0 STR X8, [X31 + 0x18]
	0x035A16B4 LDR X0, [X22]
	0x035A16B8 LDR W8, [X0 + 0xE0]
	0x035A16BC CBNZ W8, 0x35A16C8
	0x035A16C0 BL 0x1C16DFC
	0x035A16C4 LDR X0, [X22]
	0x035A16C8 LDR X8, [X0 + 0xB8]
	0x035A16CC LDR X1, [X8]
	0x035A16D0 ADD X0, X31, 0x18
	0x035A16D4 MOV X2, X31
	0x035A16D8 BL 0x335FC68
	0x035A16DC CBZ X21, 0x35A1B98
	0x035A16E0 LDR X8, [X21]
	0x035A16E4 LDR X1, [X23]
	0x035A16E8 MOV X22, X0
	0x035A16EC LDRH W9, [X8 + 0x12E]
	0x035A16F0 CBZ X9, 0x35A1714
	0x035A16F4 LDR X10, [X8 + 0xB0]
	0x035A16F8 ADD X10, X10, 0x8
	0x035A16FC LDUR X11, [X10 - 0x8]
	0x035A1700 CMP X11, X1
	0x035A1704 B.EQ 0x35A1724
	0x035A1708 SUBS X9, X9, 0x1
	0x035A170C ADD X10, X10, 0x10
	0x035A1710 B.NE 0x35A16FC
	0x035A1714 MOVZ W2, 0x7
	0x035A1718 MOV X0, X21
	0x035A171C BL 0x1C5C788
	0x035A1720 B 0x35A1734
	0x035A1724 LDR W9, [X10]
	0x035A1728 ADD W9, W9, 0x7
	0x035A172C ADD X8, X8, W9, 0x4, SXTW
	0x035A1730 ADD X0, X8, 0x138
	0x035A1734 LDP X8, X2, [X0]
	0x035A1738 MOV X0, X21
	0x035A173C MOV X1, X22
	0x035A1740 BLR X8
	0x035A1744 TBZ X0, 0x0, 0x35A17C4
	0x035A1748 LDP X1, X2, [X19 + 0x28]
	0x035A174C LDR X3, [X19 + 0x38]
	0x035A1750 MOV X0, X20
	0x035A1754 BL 0x359F740
	0x035A1758 CBZ X0, 0x35A1B9C
	0x035A175C ADRP X8, 0xB96000
	0x035A1760 LDR X8, [X8 + 0x3B8]
	0x035A1764 LDR X1, [X8]
	0x035A1768 BL 0x269F5D0
	0x035A176C ADRP X8, 0xB96000
	0x035A1770 LDR X8, [X8 + 0x3B0]
	0x035A1774 STR X0, [X31 + 0x10]
	0x035A1778 LDR X1, [X8]
	0x035A177C ADD X0, X31, 0x10

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+32], X24
	004 Move [X31+40], X23
	005 Move [X31+48], X22
	006 Move [X31+56], X21
	007 Move [X31+64], X20
	008 Move [X31+72], X19
	009 Move X20, 0xE3F000
	010 Move W8, [X20+4090]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {45}
	016 Move X0, 0xB97000
	017 Move X0, [X0+920]
	018 Call 0x1C17CF4
	019 Move X0, 0xB97000
	020 Move X0, [X0+928]
	021 Call 0x1C17CF4
	022 Move X0, 0xB56000
	023 Move X0, [X0+640]
	024 Call 0x1C17CF4
	025 Move X0, 0xB97000
	026 Move X0, [X0+832]
	027 Call 0x1C17CF4
	028 Move X0, 0xB54000
	029 Move X0, [X0+2544]
	030 Call 0x1C17CF4
	031 Move X0, 0xB97000
	032 Move X0, [X0+656]
	033 Call 0x1C17CF4
	034 Move X0, 0xB97000
	035 Move X0, [X0+936]
	036 Call 0x1C17CF4
	037 Move X0, 0xB97000
	038 Move X0, [X0+944]
	039 Call 0x1C17CF4
	040 Move X0, 0xB97000
	041 Move X0, [X0+952]
	042 Call 0x1C17CF4
	043 Move W8, 1
	044 Move [X20+4090], W8
	045 Move [X31+24], X31
	046 Move [X31], X31
	047 Move [X31+8], X31
	048 Move X23, 0xB56000
	049 Move X24, 0xB97000
	050 Move W8, [X19]
	051 Move X20, [X19+32]
	052 Move X23, [X23+640]
	053 Move X24, [X24+656]
	054 Compare W8, 0
	055 JumpIfEqual {64}
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Move X8, [X19+72]
	058 Move TEMP, 0
	059 Not TEMP
	060 Move W9, TEMP
	061 Move [X31], X8
	062 Move [X19+72], X31
	063 Move [X19], W9
	064 Move X8, [X19+64]
	065 Move TEMP, 0
	066 Not TEMP
	067 Move W9, TEMP
	068 Move [X31+8], X8
	069 Move [X19+64], X31
	070 Move [X19], W9
	071 Move X8, 0xB97000
	072 Move X8, [X8+936]
	073 Add X0, X31, 8
	074 Move X1, [X8]
	075 Call TaskAwaiter`1<Object>.GetResult, X0
	076 Compare X20, 0
	077 JumpIfEqual {293}
	078 Move W8, [X20+16]
	079 Compare W8, 0
	080 JumpIfEqual {205}
	081 Move X21, [X19+40]
	082 Compare X21, 0
	083 JumpIfEqual {294}
	084 Move X8, [X21]
	085 Move X1, [X24]
	086 NotImplemented "Instruction LDRH not yet implemented."
	087 Compare X9, 0
	088 JumpIfEqual {95}
	089 Move X10, [X8+176]
	090 Add X10, X10, 8
	091 NotImplemented "Instruction LDUR not yet implemented."
	092 NotImplemented "Instruction CMP not yet implemented."
	093 Subtract X9, X9, 1
	094 Add X10, X10, 16
	095 Move W2, 5
	096 Move X0, X21
	097 Call 0x1C5D788
	098 Move W9, [X10]
	099 Add W9, W9, 5
	100 Add X8, X8, W9
	101 Add X0, X8, 312
	102 Move X8, [X0]
	103 Move X1, [X0+8]
	104 Move X0, X21
	105 NotImplemented "Instruction BLR not yet implemented."
	106 Move X1, X31
	107 Call String.IsNullOrEmpty, X0
	108 Move TEMP, X0
	109 And TEMP, TEMP, 1
	110 Compare TEMP, 1
	111 JumpIfEqual {203}
	112 Move X8, 0xB54000
	113 Move X8, [X8+2544]
	114 Move X21, [X19+40]
	115 Move X0, [X8]
	116 Move W8, [X0+224]
	117 Compare W8, 0
	118 JumpIfNotEqual {120}
	119 Call 0x1C17DFC
	120 Move X0, X31
	121 Call DateTime.get_UtcNow
	122 Move X22, 0xB97000
	123 Move X22, [X22+832]
	124 Move X8, X0
	125 Move [X31+24], X8
	126 Move X0, [X22]
	127 Move W8, [X0+224]
	128 Compare W8, 0
	129 JumpIfNotEqual {132}
	130 Call 0x1C17DFC
	131 Move X0, [X22]
	132 Move X8, [X0+184]
	133 Move X1, [X8]
	134 Add X0, X31, 24
	135 Move X2, X31
	136 Call DateTime.Add, X0, X1
	137 Compare X21, 0
	138 JumpIfEqual {295}
	139 Move X8, [X21]
	140 Move X1, [X24]
	141 Move X22, X0
	142 NotImplemented "Instruction LDRH not yet implemented."
	143 Compare X9, 0
	144 JumpIfEqual {151}
	145 Move X10, [X8+176]
	146 Add X10, X10, 8
	147 NotImplemented "Instruction LDUR not yet implemented."
	148 NotImplemented "Instruction CMP not yet implemented."
	149 Subtract X9, X9, 1
	150 Add X10, X10, 16
	151 Move W2, 7
	152 Move X0, X21
	153 Call 0x1C5D788
	154 Move W9, [X10]
	155 Add W9, W9, 7
	156 Add X8, X8, W9
	157 Add X0, X8, 312
	158 Move X8, [X0]
	159 Move X2, [X0+8]
	160 Move X0, X21
	161 Move X1, X22
	162 NotImplemented "Instruction BLR not yet implemented."
	163 Move TEMP, X0
	164 And TEMP, TEMP, 1
	165 Compare TEMP, 1
	166 JumpIfNotEqual {203}
	167 Move X1, [X19+40]
	168 Move X2, [X19+48]
	169 Move X3, [X19+56]
	170 Move X0, X20
	171 Call Client.SessionRefreshAsync, X0, X1, X2
	172 Compare X0, 0
	173 JumpIfEqual {296}
	174 Move X8, 0xB97000
	175 Move X8, [X8+952]
	176 Move X1, [X8]
	177 Call Task`1<Object>.GetAwaiter, X0
	178 Move X8, 0xB97000
	179 Move X8, [X8+944]
	180 Move [X31+8], X0
	181 Move X1, [X8]
	182 Add X0, X31, 8
	183 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	184 Move TEMP, X0
	185 And TEMP, TEMP, 1
	186 Compare TEMP, 1
	187 JumpIfEqual {71}
	188 Move [X19], W31
	189 Move X8, [X31+8]
	190 Move [X19+64], X8
	191 Move X0, [X23]
	192 Move W8, [X0+224]
	193 Compare W8, 0
	194 JumpIfNotEqual {196}
	195 Call 0x1C17DFC
	196 Move X8, 0xB97000
	197 Move X8, [X8+920]
	198 Add X0, X19, 8
	199 Move X3, [X8]
	200 Add X1, X31, 8
	201 Move X2, X19
	202 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	203 Compare X20, 0
	204 JumpIfEqual {292}
	205 Move X21, [X19+40]
	206 Compare X21, 0
	207 JumpIfEqual {289}
	208 Move X8, [X21]
	209 Move X20, [X20+64]
	210 Move X1, [X24]
	211 NotImplemented "Instruction LDRH not yet implemented."
	212 Compare X9, 0
	213 JumpIfEqual {220}
	214 Move X10, [X8+176]
	215 Add X10, X10, 8
	216 NotImplemented "Instruction LDUR not yet implemented."
	217 NotImplemented "Instruction CMP not yet implemented."
	218 Subtract X9, X9, 1
	219 Add X10, X10, 16
	220 Move X0, X21
	221 Move W2, W31
	222 Call 0x1C5D788
	223 NotImplemented "Instruction LDRSW not yet implemented."
	224 Add X8, X8, X9
	225 Add X0, X8, 312
	226 Move X8, [X0]
	227 Move X1, [X0+8]
	228 Move X0, X21
	229 NotImplemented "Instruction BLR not yet implemented."
	230 Move X1, X0
	231 Compare X20, 0
	232 JumpIfEqual {290}
	233 Move X2, [X19+48]
	234 Move X3, [X19+56]
	235 Move X0, X20
	236 Call ApiClient.SatoriDeleteIdentityAsync, X0, X1, X2
	237 Compare X0, 0
	238 JumpIfEqual {291}
	239 Move X1, X31
	240 Call Task.GetAwaiter, X0
	241 Move [X31], X0
	242 Add X0, X31, 0
	243 Move X1, X31
	244 Call TaskAwaiter.get_IsCompleted, X0
	245 Move TEMP, X0
	246 And TEMP, TEMP, 1
	247 Compare TEMP, 1
	248 JumpIfNotEqual {264}
	249 Add X0, X31, 0
	250 Move X1, X31
	251 Call TaskAwaiter.GetResult, X0
	252 Move TEMP, 1
	253 Not TEMP
	254 Move W8, TEMP
	255 Move [X19+8], W8
	256 Move X0, [X23]
	257 Move W8, [X0+224]
	258 Compare W8, 0
	259 JumpIfNotEqual {261}
	260 Call 0x1C17DFC
	261 Move X0, X19
	262 Move X1, X31
	263 Call AsyncTaskMethodBuilder.SetResult, X0
	264 Move W8, 1
	265 Move [X19], W8
	266 Move X8, [X31]
	267 Move [X19+72], X8
	268 Move X0, [X23]
	269 Move W8, [X0+224]
	270 Compare W8, 0
	271 JumpIfNotEqual {273}
	272 Call 0x1C17DFC
	273 Move X8, 0xB97000
	274 Move X8, [X8+928]
	275 Add X0, X19, 8
	276 Move X3, [X8]
	277 Add X1, X31, 0
	278 Move X2, X19
	279 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	280 Move X20, [X31+64]
	281 Move X19, [X31+72]
	282 Move X22, [X31+48]
	283 Move X21, [X31+56]
	284 Move X24, [X31+32]
	285 Move X23, [X31+40]
	286 Move X30, [X31+16]
	287 Add X31, X31, 80
	288 Return 
	289 Call 0x1C17F20
	290 Call 0x1C17F20
	291 Call 0x1C17F20
	292 Call 0x1C17F20
	293 Call 0x1C17F20
	294 Call 0x1C17F20
	295 Call 0x1C17F20
	296 Call 0x1C17F20
	297 Move X20, X0
	298 NotImplemented "Instruction CMP not yet implemented."
	299 Move X0, X20
	300 Call 0x3EB2AD0
	301 Move X20, X0
	302 Move X0, 0xB53000
	303 Move X0, [X0+2000]
	304 Call 0x1C17D08
	305 Move X8, [X20]
	306 Move X1, [X8]
	307 Call 0x1C18270
	308 Move TEMP, X0
	309 And TEMP, TEMP, 1
	310 Compare TEMP, 1
	311 JumpIfNotEqual {329}
	312 Move X20, [X20]
	313 Call 0x3EB2AE0
	314 Move TEMP, 1
	315 Not TEMP
	316 Move W8, TEMP
	317 Move [X19+8], W8
	318 Move X0, 0xB56000
	319 Move X0, [X0+640]
	320 Call 0x1C17D08
	321 Move W8, [X0+224]
	322 Compare W8, 0
	323 JumpIfNotEqual {325}
	324 Call 0x1C17DFC
	325 Move X0, X19
	326 Move X1, X20
	327 Move X2, X31
	328 Call AsyncTaskMethodBuilder.SetException, X0, X1
	329 Move W0, 8
	330 Call 0x3EB2AF0
	331 Move X8, [X20]
	332 Move [X0], X8
	333 Move X1, 0x914000
	334 Add X1, X1, 3672
	335 Move X2, X31
	336 Call 0x3EB2B00
	337 Move X20, X0
	338 Call 0x3EB2AE0
	339 Move X0, X20
	340 Call 0x1D2D690
	341 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x035A1780 BL 0x2677430
	0x035A1784 TBNZ X0, 0x0, 0x35A15E4
	0x035A1788 STR W31, [X19]
	0x035A178C LDR X8, [X31 + 0x10]
	0x035A1790 STR X8, [X19 + 0x48]
	0x035A1794 LDR X0, [X24]
	0x035A1798 LDR W8, [X0 + 0xE0]
	0x035A179C CBNZ W8, 0x35A17A4
	0x035A17A0 BL 0x1C16DFC
	0x035A17A4 ADRP X8, 0xB96000
	0x035A17A8 LDR X8, [X8 + 0x408]
	0x035A17AC ADD X0, X19, 0x8
	0x035A17B0 LDR X3, [X8]
	0x035A17B4 ADD X1, X31, 0x10
	0x035A17B8 MOV X2, X19
	0x035A17BC BL 0x21892E8
	0x035A17C0 B 0x35A1B44
	0x035A17C4 ADRP X8, 0xB95000
	0x035A17C8 LDR X8, [X8 + 0xE40]
	0x035A17CC LDR X0, [X8]
	0x035A17D0 BL 0x1C16F10
	0x035A17D4 ADRP X8, 0xB96000
	0x035A17D8 LDR X8, [X8 + 0x3F0]
	0x035A17DC MOV X21, X0
	0x035A17E0 LDR X1, [X8]
	0x035A17E4 BL 0x301B7C4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xE3F000
	007 Move X22, 0xB56000
	008 Move W8, [X21+4091]
	009 Move X22, [X22+640]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xB56000
	017 Move X0, [X0+640]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+4091], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Add X0, X20, 8
	027 Move X1, X19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X2, X31
	033 Move X30, [X31+48]
	034 Call AsyncTaskMethodBuilder.SetStateMachine, X0, X1
	035 Return 

