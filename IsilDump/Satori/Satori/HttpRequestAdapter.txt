Type: Satori.HttpRequestAdapter

Method: Satori.ILogger get_Logger()

Disassembly:
	0x035A8304 ADRP X0, 0xB8F000
	0x035A8308 LDR X0, [X0 + 0x600]

ISIL:
	001 Move X0, [X0+16]
	002 Return X0

Method: System.Void set_Logger(Satori.ILogger value)

Disassembly:
	0x035A830C BL 0x1C16D08
	0x035A8310 MOV X1, X0

ISIL:
	001 Move [X0+16], X1
	002 Return 

Method: Satori.TransientExceptionDelegate get_TransientExceptionDelegate()

Disassembly:
	0x035A8314 MOV X0, X22
	0x035A8318 BL 0x1C16DEC
	0x035A831C LDR X8, [X22]
	0x035A8320 LDR X9, [X1 + 0x40]
	0x035A8324 LDR X8, [X8 + 0x40]
	0x035A8328 CMP X8, X9
	0x035A832C B.NE 0x35A8340
	0x035A8330 MOV X0, X22
	0x035A8334 BL 0x1C16E08
	0x035A8338 LDR W23, [X0]
	0x035A833C B 0x35A8268
	0x035A8340 MOV X0, X22
	0x035A8344 BL 0x1C171E0
	0x035A8348 B 0x35A8438
	0x035A834C B 0x35A8438
	0x035A8350 B 0x35A8438
	0x035A8354 B 0x35A8438
	0x035A8358 B 0x35A8438
	0x035A835C B 0x35A8438
	0x035A8360 B 0x35A8438
	0x035A8364 B 0x35A8438
	0x035A8368 B 0x35A8438
	0x035A836C B 0x35A8438
	0x035A8370 B 0x35A8438
	0x035A8374 B 0x35A8438
	0x035A8378 B 0x35A8438
	0x035A837C B 0x35A8438
	0x035A8380 B 0x35A8438
	0x035A8384 B 0x35A8438
	0x035A8388 B 0x35A8438

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xE39000
	007 Move X22, 0xB87000
	008 Move X20, 0xB90000
	009 Move W8, [X21+32]
	010 Move X22, [X22+2288]
	011 Move X20, [X20+1496]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0xB90000
	018 Move X0, [X0+1496]
	019 Call 0x1C17CF4
	020 Move X0, 0xB87000
	021 Move X0, [X0+2288]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+32], W8
	025 Move X0, [X22]
	026 Call 0x1C17F10
	027 Move X2, [X20]
	028 Move X1, X19
	029 Move X20, X0
	030 Call TransientExceptionDelegate..ctor, X0, X1, X2
	031 Move X0, X20
	032 Move X20, [X31+32]
	033 Move X19, [X31+40]
	034 Move X22, [X31+16]
	035 Move X21, [X31+24]
	036 Move X30, [X31+48]
	037 Return X0

Method: System.Void .ctor(System.Net.Http.HttpClient httpClient)

Disassembly:
	0x035A848C ADRP X10, 0xB4B000
	0x035A8490 LDR X8, [X22]
	0x035A8494 LDR X10, [X10 + 0xE00]
	0x035A8498 LDRH W9, [X8 + 0x12E]
	0x035A849C LDR X1, [X10]
	0x035A84A0 CBZ X9, 0x35A84C4
	0x035A84A4 LDR X10, [X8 + 0xB0]
	0x035A84A8 ADD X10, X10, 0x8
	0x035A84AC LDUR X11, [X10 - 0x8]
	0x035A84B0 CMP X11, X1
	0x035A84B4 B.EQ 0x35A84D4
	0x035A84B8 SUBS X9, X9, 0x1
	0x035A84BC ADD X10, X10, 0x10
	0x035A84C0 B.NE 0x35A84AC
	0x035A84C4 MOV X0, X22
	0x035A84C8 MOV W2, W31
	0x035A84CC BL 0x1C5C788
	0x035A84D0 B 0x35A84E0
	0x035A84D4 LDRSW X9, [X10]
	0x035A84D8 ADD X8, X8, X9, 0x4, LSL
	0x035A84DC ADD X0, X8, 0x138
	0x035A84E0 LDP X8, X1, [X0]
	0x035A84E4 MOV X0, X22
	0x035A84E8 BLR X8
	0x035A84EC CBNZ X23, 0x35A8590
	0x035A84F0 LDR X8, [X31 + 0x8]
	0x035A84F4 CMP W8, 0x1
	0x035A84F8 B.NE 0x35A85B0
	0x035A84FC MOV X0, X21
	0x035A8500 BL 0x3EB1AD0
	0x035A8504 MOV X20, X0
	0x035A8508 ADRP X0, 0xB4B000
	0x035A850C LDR X0, [X0 + 0x7D0]
	0x035A8510 BL 0x1C16D08

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xE39000
	007 Move X21, 0xB4F000
	008 Move W8, [X22+33]
	009 Move X21, [X21+296]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xB4F000
	017 Move X0, [X0+296]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+33], W8
	021 Move X0, X20
	022 Move X1, X31
	023 Call Object..ctor, X0
	024 Move [X20+24], X19
	025 Move X0, [X21]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 Compare X19, 0
	031 JumpIfEqual {44}
	032 Move X8, [X21]
	033 Move X0, X19
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X8, [X8+184]
	039 Move X2, X31
	040 Move X1, [X8]
	041 Move X30, [X31+48]
	042 Call HttpClient.set_Timeout, X0, X1
	043 Return 
	044 Call 0x1C17F20

Method: System.Threading.Tasks.Task`1<System.String> SendAsync(System.String method, System.Uri uri, System.Collections.Generic.IDictionary`2<System.String, System.String> headers, System.Byte[] body, System.Int32 timeout, System.Nullable`1<System.Threading.CancellationToken> userCancelToken)

Disassembly:
	0x035A8514 LDR X8, [X20]
	0x035A8518 LDR X1, [X8]
	0x035A851C BL 0x1C17270
	0x035A8520 TBZ X0, 0x0, 0x35A8570
	0x035A8524 LDR X20, [X20]
	0x035A8528 BL 0x3EB1AE0
	0x035A852C MOVN W8, 0x1
	0x035A8530 STR X31, [X19 + 0x60]
	0x035A8534 STR W8, [X19], #0x8
	0x035A8538 ADRP X0, 0xB4E000
	0x035A853C LDR X0, [X0 + 0x130]
	0x035A8540 BL 0x1C16D08
	0x035A8544 LDR W8, [X0 + 0xE0]
	0x035A8548 CBNZ W8, 0x35A8550
	0x035A854C BL 0x1C16DFC
	0x035A8550 ADRP X0, 0xB4E000
	0x035A8554 LDR X0, [X0 + 0x240]
	0x035A8558 BL 0x1C16D08
	0x035A855C MOV X2, X0
	0x035A8560 MOV X0, X19
	0x035A8564 MOV X1, X20
	0x035A8568 BL 0x26324C8
	0x035A856C B 0x35A808C
	0x035A8570 MOVZ W0, 0x8
	0x035A8574 BL 0x3EB1AF0
	0x035A8578 LDR X8, [X20]
	0x035A857C STR X8, [X0]
	0x035A8580 ADRP X1, 0x90C000
	0x035A8584 ADD X1, X1, 0xE58
	0x035A8588 MOV X2, X31
	0x035A858C BL 0x3EB1B00
	0x035A8590 MOV X0, X23
	0x035A8594 BL 0x1C16F18
	0x035A8598 MOV X21, X0
	0x035A859C STR X1, [X31 + 0x8]
	0x035A85A0 TBNZ X24, 0x1F, 0x35A8488
	0x035A85A4 B 0x35A84EC
	0x035A85A8 MOV X21, X0
	0x035A85AC BL 0x3EB1AE0
	0x035A85B0 MOV X0, X21
	0x035A85B4 BL 0x1D2C690
	0x035A85B8 BL 0x1990590
	0x035A85BC SUB X31, X31, 0xA0
	0x035A85C0 STR X30, [X31 + 0x60]
	0x035A85C4 STP X24, X23, [X31 + 0x70]
	0x035A85C8 STP X22, X21, [X31 + 0x80]
	0x035A85CC STP X20, X19, [X31 + 0x90]
	0x035A85D0 ADRP X21, 0xE38000
	0x035A85D4 LDRB W8, [X21 + 0x27]
	0x035A85D8 MOV X19, X2
	0x035A85DC MOV X20, X1
	0x035A85E0 TBNZ X8, 0x0, 0x35A8664
	0x035A85E4 ADRP X0, 0xB50000
	0x035A85E8 LDR X0, [X0 + 0x700]
	0x035A85EC BL 0x1C16CF4
	0x035A85F0 ADRP X0, 0xB4B000
	0x035A85F4 LDR X0, [X0 + 0x720]
	0x035A85F8 BL 0x1C16CF4
	0x035A85FC ADRP X0, 0xB50000
	0x035A8600 LDR X0, [X0 + 0x708]
	0x035A8604 BL 0x1C16CF4
	0x035A8608 ADRP X0, 0xB50000
	0x035A860C LDR X0, [X0 + 0x710]
	0x035A8610 BL 0x1C16CF4
	0x035A8614 ADRP X0, 0xB50000
	0x035A8618 LDR X0, [X0 + 0x718]
	0x035A861C BL 0x1C16CF4
	0x035A8620 ADRP X0, 0xB4B000
	0x035A8624 LDR X0, [X0 + 0x818]
	0x035A8628 BL 0x1C16CF4
	0x035A862C ADRP X0, 0xB50000
	0x035A8630 LDR X0, [X0 + 0x720]
	0x035A8634 BL 0x1C16CF4
	0x035A8638 ADRP X0, 0xB50000
	0x035A863C LDR X0, [X0 + 0x728]
	0x035A8640 BL 0x1C16CF4
	0x035A8644 ADRP X0, 0xB4D000

ISIL:
	001 Subtract X31, X31, 224
	002 Move [X31+128], X29
	003 Move [X31+136], X30
	004 Move [X31+144], X28
	005 Move [X31+152], X27
	006 Move [X31+160], X26
	007 Move [X31+168], X25
	008 Move [X31+176], X24
	009 Move [X31+184], X23
	010 Move [X31+192], X22
	011 Move [X31+200], X21
	012 Move [X31+208], X20
	013 Move [X31+216], X19
	014 Move X28, 0xE39000
	015 Move X27, 0xB4F000
	016 Move W8, [X28+34]
	017 Move X27, [X27+304]
	018 Move X19, X7
	019 Move X20, X6
	020 Move W21, W5
	021 Move X22, X4
	022 Move X23, X3
	023 Move X24, X2
	024 Move X25, X1
	025 Move X26, X0
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {44}
	030 Move X0, 0xB4F000
	031 Move X0, [X0+312]
	032 Call 0x1C17CF4
	033 Move X0, 0xB90000
	034 Move X0, [X0+1504]
	035 Call 0x1C17CF4
	036 Move X0, 0xB4F000
	037 Move X0, [X0+328]
	038 Call 0x1C17CF4
	039 Move X0, 0xB4F000
	040 Move X0, [X0+304]
	041 Call 0x1C17CF4
	042 Move W8, 1
	043 Move [X28+34], W8
	044 Move X0, [X27]
	045 NotImplemented "Instruction MOVI not yet implemented."
	046 Move [X31+112], X31
	047 Move [X31+80], V0
	048 Move [X31+88], V0
	049 Move [X31+48], V0
	050 Move [X31+56], V0
	051 Move [X31+16], V0
	052 Move [X31+24], V0
	053 Move [X31], V0
	054 Move X27, 0xB4F000
	055 Move X29, 0xB90000
	056 Move X28, 0xB4F000
	057 Move W8, [X0+224]
	058 Move X27, [X27+312]
	059 Move X29, [X29+1504]
	060 Move X28, [X28+328]
	061 Compare W8, 0
	062 JumpIfNotEqual {64}
	063 Call 0x1C17DFC
	064 Move X0, [X27]
	065 Add X8, X31, 0
	066 Or X27, X8, 15
	067 Move X8, X27
	068 Call AsyncTaskMethodBuilder`1<Object>.Create
	069 Move X2, [X29]
	070 Move TEMP, 0
	071 Not TEMP
	072 Move W8, TEMP
	073 Add X1, X31, 0
	074 Move X0, X27
	075 Move [X31+80], X19
	076 Move [X31+88], X26
	077 Move [X31+32], X24
	078 Move [X31+40], X25
	079 Move [X31+48], X23
	080 Move [X31+56], X22
	081 Move [X31+64], W21
	082 Move [X31+72], X20
	083 Move [X31], W8
	084 Call AsyncTaskMethodBuilder`1<Object>.Start, X0, X1
	085 Move X1, [X28]
	086 Move X0, X27
	087 Call AsyncTaskMethodBuilder`1<Object>.get_Task, X0
	088 Move X20, [X31+208]
	089 Move X19, [X31+216]
	090 Move X22, [X31+192]
	091 Move X21, [X31+200]
	092 Move X24, [X31+176]
	093 Move X23, [X31+184]
	094 Move X26, [X31+160]
	095 Move X25, [X31+168]
	096 Move X28, [X31+144]
	097 Move X27, [X31+152]
	098 Move X29, [X31+128]
	099 Move X30, [X31+136]
	100 Add X31, X31, 224
	101 Return X0

Method: Satori.IHttpAdapter WithGzip(System.Boolean decompression = False, System.Boolean compression = False)

Disassembly:
	0x0359F3E0 MOV X6, X19
	0x0359F3E4 LDP X20, X19, [X31 + 0x20]
	0x0359F3E8 LDP X22, X21, [X31 + 0x10]
	0x0359F3EC LDR X8, [X8 + 0xB8]
	0x0359F3F0 LDR X1, [X8]
	0x0359F3F4 MOV X3, X1
	0x0359F3F8 LDP X30, X23, [X31], #0x30
	0x0359F3FC B 0x3596DF0
	0x0359F400 BL 0x1C16F20
	0x0359F404 SUB X31, X31, 0xD0
	0x0359F408 STR X30, [X31 + 0x70]
	0x0359F40C STP X28, X27, [X31 + 0x80]
	0x0359F410 STP X26, X25, [X31 + 0x90]
	0x0359F414 STP X24, X23, [X31 + 0xA0]
	0x0359F418 STP X22, X21, [X31 + 0xB0]
	0x0359F41C STP X20, X19, [X31 + 0xC0]
	0x0359F420 ADRP X27, 0xE40000
	0x0359F424 ADRP X26, 0xB98000
	0x0359F428 LDRB W8, [X27 + 0xFEE]
	0x0359F42C LDR X26, [X26 + 0x268]
	0x0359F430 MOV X19, X6
	0x0359F434 MOV X20, X5
	0x0359F438 MOV X21, X4
	0x0359F43C MOV X22, X3
	0x0359F440 MOV X23, X2
	0x0359F444 MOV X24, X1
	0x0359F448 MOV X25, X0
	0x0359F44C TBNZ X8, 0x0, 0x359F488
	0x0359F450 ADRP X0, 0xB98000
	0x0359F454 LDR X0, [X0 + 0x270]
	0x0359F458 BL 0x1C16CF4
	0x0359F45C ADRP X0, 0xB98000
	0x0359F460 LDR X0, [X0 + 0x2F8]
	0x0359F464 BL 0x1C16CF4
	0x0359F468 ADRP X0, 0xB98000
	0x0359F46C LDR X0, [X0 + 0x280]
	0x0359F470 BL 0x1C16CF4
	0x0359F474 ADRP X0, 0xB98000
	0x0359F478 LDR X0, [X0 + 0x268]
	0x0359F47C BL 0x1C16CF4
	0x0359F480 MOVZ W8, 0x1
	0x0359F484 STRB W8, [X27 + 0xFEE]
	0x0359F488 LDR X0, [X26]
	0x0359F48C MOVI V0.2D, 0x0
	0x0359F490 STR X31, [X31 + 0x60]
	0x0359F494 STP V0, V0, [X31 + 0x40]
	0x0359F498 STP V0, V0, [X31 + 0x20]
	0x0359F49C STP V0, V0, [X31]
	0x0359F4A0 ADRP X26, 0xB98000
	0x0359F4A4 ADRP X28, 0xB98000
	0x0359F4A8 ADRP X27, 0xB98000
	0x0359F4AC LDR W8, [X0 + 0xE0]
	0x0359F4B0 LDR X26, [X26 + 0x270]
	0x0359F4B4 LDR X28, [X28 + 0x2F8]
	0x0359F4B8 LDR X27, [X27 + 0x280]
	0x0359F4BC CBNZ W8, 0x359F4C4
	0x0359F4C0 BL 0x1C16DFC
	0x0359F4C4 LDR X0, [X26]
	0x0359F4C8 ADD X8, X31, 0x0
	0x0359F4CC ORR X26, X8, 0xF
	0x0359F4D0 MOV X8, X26
	0x0359F4D4 BL 0x263221C
	0x0359F4D8 LDR X2, [X28]
	0x0359F4DC MOVN W8, 0x0
	0x0359F4E0 ADD X1, X31, 0x0
	0x0359F4E4 MOV X0, X26
	0x0359F4E8 STP X25, X24, [X31 + 0x20]
	0x0359F4EC STP X23, X22, [X31 + 0x40]
	0x0359F4F0 STR X21, [X31 + 0x50]
	0x0359F4F4 STP X20, X19, [X31 + 0x30]
	0x0359F4F8 STR W8, [X31]
	0x0359F4FC BL 0x1FCF414
	0x0359F500 LDR X1, [X27]
	0x0359F504 MOV X0, X26

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xE42000
	007 Move X22, 0xB57000
	008 Move W8, [X20+35]
	009 Move X22, [X22+2608]
	010 Move W19, W1
	011 Move W21, W0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {30}
	016 Move X0, 0xB99000
	017 Move X0, [X0+576]
	018 Call 0x1C17CF4
	019 Move X0, 0xB57000
	020 Move X0, [X0+2608]
	021 Call 0x1C17CF4
	022 Move X0, 0xB57000
	023 Move X0, [X0+2624]
	024 Call 0x1C17CF4
	025 Move X0, 0xB99000
	026 Move X0, [X0+584]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X20+35], W8
	030 Move X0, [X22]
	031 Call 0x1C17F10
	032 Move X1, X31
	033 Move X20, X0
	034 Call HttpClientHandler..ctor, X0
	035 Compare X20, 0
	036 JumpIfEqual {92}
	037 Move X8, [X20]
	038 Move X0, X20
	039 Move X9, [X8+424]
	040 Move X1, [X8+432]
	041 NotImplemented "Instruction BLR not yet implemented."
	042 Move TEMP, X0
	043 And TEMP, TEMP, 1
	044 Compare TEMP, 1
	045 JumpIfNotEqual {54}
	046 Move TEMP, X21
	047 And TEMP, TEMP, 1
	048 Compare TEMP, 1
	049 JumpIfNotEqual {54}
	050 Move W1, 3
	051 Move X0, X20
	052 Move X2, X31
	053 Call HttpClientHandler.set_AutomaticDecompression, X0, X1
	054 Move X22, 0xB57000
	055 Move X21, 0xB99000
	056 Move X22, [X22+2624]
	057 Move X21, [X21+584]
	058 Move TEMP, X19
	059 And TEMP, TEMP, 1
	060 Compare TEMP, 1
	061 JumpIfNotEqual {74}
	062 Move X8, 0xB99000
	063 Move X8, [X8+576]
	064 Move X0, [X8]
	065 Call 0x1C17F10
	066 Move X1, X31
	067 Move X19, X0
	068 Call DelegatingHandler..ctor, X0
	069 Move X0, X19
	070 Move X1, X20
	071 Move X2, X31
	072 Call DelegatingHandler.set_InnerHandler, X0, X1
	073 Move X20, X19
	074 Move X0, [X22]
	075 Call 0x1C17F10
	076 Move X1, X20
	077 Move X2, X31
	078 Move X19, X0
	079 Call HttpClient..ctor, X0, X1
	080 Move X0, [X21]
	081 Call 0x1C17F10
	082 Move X1, X19
	083 Move X20, X0
	084 Call HttpRequestAdapter..ctor, X0, X1
	085 Move X0, X20
	086 Move X20, [X31+32]
	087 Move X19, [X31+40]
	088 Move X22, [X31+16]
	089 Move X21, [X31+24]
	090 Move X30, [X31+48]
	091 Return X0
	092 Call 0x1C17F20

Method: System.Boolean IsTransientException(System.Exception e)

Disassembly:
	0x035A8648 LDR X0, [X0 + 0x278]
	0x035A864C BL 0x1C16CF4
	0x035A8650 ADRP X0, 0xB4E000
	0x035A8654 LDR X0, [X0 + 0x238]
	0x035A8658 BL 0x1C16CF4
	0x035A865C MOVZ W8, 0x1
	0x035A8660 STRB W8, [X21 + 0x27]
	0x035A8664 MOVI V0.2D, 0x0
	0x035A8668 STR X31, [X31 + 0x50]
	0x035A866C STP V0, V0, [X31 + 0x30]
	0x035A8670 CBZ X20, 0x35A8854
	0x035A8674 ADRP X9, 0xB4B000
	0x035A8678 LDR X9, [X9 + 0x720]
	0x035A867C LDR X8, [X20]
	0x035A8680 LDR X9, [X9]
	0x035A8684 LDRB W11, [X8 + 0x130]
	0x035A8688 LDRB W10, [X9 + 0x130]
	0x035A868C CMP W11, W10
	0x035A8690 B.CS 0x35A86AC
	0x035A8694 ADRP X9, 0xB4D000
	0x035A8698 LDR X9, [X9 + 0x278]
	0x035A869C LDR X9, [X9]
	0x035A86A0 CMP X8, X9
	0x035A86A4 B.NE 0x35A8854
	0x035A86A8 B 0x35A87A8
	0x035A86AC LDR X11, [X8 + 0xC8]
	0x035A86B0 ADD X10, X11, X10, 0x3, LSL
	0x035A86B4 ADRP X11, 0xB4D000
	0x035A86B8 LDUR X10, [X10 - 0x8]
	0x035A86BC LDR X11, [X11 + 0x278]
	0x035A86C0 CMP X10, X9
	0x035A86C4 LDR X11, [X11]
	0x035A86C8 CSEL X0, X20, X31, EQ
	0x035A86CC CMP X8, X11
	0x035A86D0 B.EQ 0x35A87A8
	0x035A86D4 CBZ X0, 0x35A8854
	0x035A86D8 ADRP X8, 0xB50000
	0x035A86DC LDR X8, [X8 + 0x700]
	0x035A86E0 LDR X1, [X8]
	0x035A86E4 ADD X8, X31, 0x8
	0x035A86E8 BL 0x2AA54BC
	0x035A86EC LDUR V0, [X31 + 0x8]
	0x035A86F0 LDUR V1, [X31 + 0x18]
	0x035A86F4 LDR X8, [X31 + 0x28]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xE39000
	005 Move W8, [X20+36]
	006 Move X19, X1
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0xB87000
	012 Move X0, [X0+2456]
	013 Call 0x1C17CF4
	014 Move X0, 0xB4D000
	015 Move X0, [X0+1784]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+36], W8
	019 Compare X19, 0
	020 JumpIfEqual {36}
	021 Move X8, 0xB87000
	022 Move X8, [X8+2456]
	023 Move X9, [X8]
	024 Move X8, [X19]
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move X9, [X19+144]
	027 Move W0, 1
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Add X31, X9, 1
	030 Move X9, 0xB4D000
	031 Move X9, [X9+1784]
	032 Move W11, [X8+304]
	033 Move X9, [X9]
	034 Move W10, [X9+304]
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move W0, W31
	037 Move X8, [X8+200]
	038 Add X8, X8, X10
	039 NotImplemented "Instruction LDUR not yet implemented."
	040 NotImplemented "Instruction CMP not yet implemented."
	041 NotImplemented "Instruction CSET not yet implemented."
	042 Move X20, [X31+16]
	043 Move X19, [X31+24]
	044 Move X30, [X31+32]
	045 Return X0

