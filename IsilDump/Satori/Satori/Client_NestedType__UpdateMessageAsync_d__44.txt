Type: Satori.Client/<UpdateMessageAsync>d__44

Method: System.Void MoveNext()

Disassembly:
	0x035A6D1C ADD X10, X10, 0x10
	0x035A6D20 B.NE 0x35A6D0C
	0x035A6D24 MOVZ W2, 0x2
	0x035A6D28 MOV X0, X19
	0x035A6D2C BL 0x1C5C788
	0x035A6D30 B 0x35A6D44
	0x035A6D34 LDR W9, [X10]
	0x035A6D38 ADD W9, W9, 0x2
	0x035A6D3C ADD X8, X8, W9, 0x4, SXTW
	0x035A6D40 ADD X0, X8, 0x138
	0x035A6D44 LDP X3, X2, [X0]
	0x035A6D48 MOV X0, X19
	0x035A6D4C MOV X1, X20
	0x035A6D50 LDP X20, X19, [X31 + 0x30]
	0x035A6D54 LDP X22, X21, [X31 + 0x20]
	0x035A6D58 LDP X24, X23, [X31 + 0x10]
	0x035A6D5C LDP X30, X25, [X31], #0x40
	0x035A6D60 BR X3
	0x035A6D64 BL 0x1C16F20
	0x035A6D68 BL 0x1C16F20
	0x035A6D6C BL 0x1C16F20
	0x035A6D70 MOV X0, X21
	0x035A6D74 BL 0x1C16F18
	0x035A6D78 B 0x35A6D8C
	0x035A6D7C B 0x35A6D8C
	0x035A6D80 B 0x35A6D8C
	0x035A6D84 B 0x35A6D8C
	0x035A6D88 B 0x35A6D8C
	0x035A6D8C CMP W1, 0x1
	0x035A6D90 B.NE 0x35A6DA4
	0x035A6D94 BL 0x3EB1AD0
	0x035A6D98 LDR X21, [X0]
	0x035A6D9C BL 0x3EB1AE0
	0x035A6DA0 B 0x35A6C60
	0x035A6DA4 MOV X19, X0
	0x035A6DA8 MOV X21, X31
	0x035A6DAC B 0x35A6DB4
	0x035A6DB0 MOV X19, X0
	0x035A6DB4 CBZ X20, 0x35A6E10
	0x035A6DB8 LDR X8, [X20]
	0x035A6DBC LDR X1, [X23]
	0x035A6DC0 LDRH W9, [X8 + 0x12E]
	0x035A6DC4 CBZ X9, 0x35A6DE8
	0x035A6DC8 LDR X10, [X8 + 0xB0]
	0x035A6DCC ADD X10, X10, 0x8
	0x035A6DD0 LDUR X11, [X10 - 0x8]
	0x035A6DD4 CMP X11, X1
	0x035A6DD8 B.EQ 0x35A6DF8
	0x035A6DDC SUBS X9, X9, 0x1
	0x035A6DE0 ADD X10, X10, 0x10
	0x035A6DE4 B.NE 0x35A6DD0
	0x035A6DE8 MOV X0, X20
	0x035A6DEC MOV W2, W31
	0x035A6DF0 BL 0x1C5C788
	0x035A6DF4 B 0x35A6E04
	0x035A6DF8 LDRSW X9, [X10]
	0x035A6DFC ADD X8, X8, X9, 0x4, LSL
	0x035A6E00 ADD X0, X8, 0x138
	0x035A6E04 LDP X8, X1, [X0]
	0x035A6E08 MOV X0, X20
	0x035A6E0C BLR X8
	0x035A6E10 CBNZ X21, 0x35A6E1C
	0x035A6E14 MOV X0, X19
	0x035A6E18 BL 0x1D2C690
	0x035A6E1C MOV X0, X21
	0x035A6E20 BL 0x1C16F18
	0x035A6E24 BL 0x1990590
	0x035A6E28 SUB X31, X31, 0x90
	0x035A6E2C STR X30, [X31 + 0x60]
	0x035A6E30 STP X22, X21, [X31 + 0x70]
	0x035A6E34 STP X20, X19, [X31 + 0x80]
	0x035A6E38 ADRP X22, 0xE3A000
	0x035A6E3C ADRP X21, 0xB50000
	0x035A6E40 LDRB W8, [X22 + 0x1D]
	0x035A6E44 LDR X21, [X21 + 0x280]
	0x035A6E48 MOV X19, X1
	0x035A6E4C MOV X20, X0
	0x035A6E50 TBNZ X8, 0x0, 0x35A6E74
	0x035A6E54 ADRP X0, 0xB91000
	0x035A6E58 LDR X0, [X0 + 0x5C8]
	0x035A6E5C BL 0x1C16CF4
	0x035A6E60 ADRP X0, 0xB50000
	0x035A6E64 LDR X0, [X0 + 0x280]
	0x035A6E68 BL 0x1C16CF4
	0x035A6E6C MOVZ W8, 0x1
	0x035A6E70 STRB W8, [X22 + 0x1D]
	0x035A6E74 LDR X0, [X21]
	0x035A6E78 MOVI V0.2D, 0x0
	0x035A6E7C STP V0, V0, [X31 + 0x40]
	0x035A6E80 STP V0, V0, [X31 + 0x20]
	0x035A6E84 ADRP X21, 0xB91000
	0x035A6E88 LDR W8, [X0 + 0xE0]
	0x035A6E8C LDR X21, [X21 + 0x5C8]
	0x035A6E90 CBNZ W8, 0x35A6E98
	0x035A6E94 BL 0x1C16DFC
	0x035A6E98 ADD X8, X31, 0x8
	0x035A6E9C MOV X0, X31
	0x035A6EA0 BL 0x32C4770
	0x035A6EA4 LDUR V0, [X31 + 0x8]
	0x035A6EA8 LDR X9, [X31 + 0x18]
	0x035A6EAC LDR X2, [X21]
	0x035A6EB0 ADD X8, X31, 0x20
	0x035A6EB4 STP X19, X20, [X31 + 0x40]
	0x035A6EB8 ORR X20, X8, 0xF
	0x035A6EBC MOVN W10, 0x0
	0x035A6EC0 ADD X1, X31, 0x20
	0x035A6EC4 MOV X0, X20
	0x035A6EC8 STUR V0, [X31 + 0x28]
	0x035A6ECC STR X9, [X31 + 0x38]
	0x035A6ED0 STR W10, [X31 + 0x20]
	0x035A6ED4 BL 0x21947B8
	0x035A6ED8 MOV X0, X20
	0x035A6EDC MOV X1, X31
	0x035A6EE0 BL 0x32C47F8
	0x035A6EE4 LDP X20, X19, [X31 + 0x80]
	0x035A6EE8 LDP X22, X21, [X31 + 0x70]
	0x035A6EEC LDR X30, [X31 + 0x60]
	0x035A6EF0 ADD X31, X31, 0x90
	0x035A6EF4 RET
	0x035A6EF8 MOVN X8, 0x0
	0x035A6EFC MOV W0, W31
	0x035A6F00 STR X8, [X1]
	0x035A6F04 RET
	0x035A6F08 SUB X31, X31, 0x40
	0x035A6F0C STP X30, X23, [X31 + 0x10]
	0x035A6F10 STP X22, X21, [X31 + 0x20]
	0x035A6F14 STP X20, X19, [X31 + 0x30]
	0x035A6F18 ADRP X20, 0xE3A000
	0x035A6F1C LDRB W8, [X20 + 0x1E]
	0x035A6F20 MOV X19, X0
	0x035A6F24 TBNZ X8, 0x0, 0x35A6F60
	0x035A6F28 ADRP X0, 0xB91000
	0x035A6F2C LDR X0, [X0 + 0x5D0]
	0x035A6F30 BL 0x1C16CF4
	0x035A6F34 ADRP X0, 0xB50000
	0x035A6F38 LDR X0, [X0 + 0x280]
	0x035A6F3C BL 0x1C16CF4
	0x035A6F40 ADRP X0, 0xB50000
	0x035A6F44 LDR X0, [X0 + 0x298]
	0x035A6F48 BL 0x1C16CF4
	0x035A6F4C ADRP X0, 0xB4D000
	0x035A6F50 LDR X0, [X0 + 0xE00]
	0x035A6F54 BL 0x1C16CF4
	0x035A6F58 MOVZ W8, 0x1
	0x035A6F5C STRB W8, [X20 + 0x1E]
	0x035A6F60 STR X31, [X31 + 0x8]
	0x035A6F64 LDR W23, [X19]
	0x035A6F68 CBZ W23, 0x35A7018
	0x035A6F6C ADRP X8, 0xB50000
	0x035A6F70 LDR X8, [X8 + 0x298]
	0x035A6F74 LDP X21, X22, [X19 + 0x20]
	0x035A6F78 LDR X0, [X8]
	0x035A6F7C BL 0x1C16F10
	0x035A6F80 MOV X20, X0
	0x035A6F84 MOVZ W2, 0x1
	0x035A6F88 MOVZ W3, 0x1
	0x035A6F8C MOV X1, X21
	0x035A6F90 MOV X4, X31
	0x035A6F94 BL 0x3666F4C
	0x035A6F98 STR X20, [X19 + 0x30]
	0x035A6F9C CBZ X22, 0x35A7108
	0x035A6FA0 LDR X0, [X22 + 0x28]
	0x035A6FA4 CBZ X0, 0x35A710C
	0x035A6FA8 MOV X1, X20
	0x035A6FAC MOV X2, X31
	0x035A6FB0 BL 0x35F9084
	0x035A6FB4 CBZ X0, 0x35A7110
	0x035A6FB8 MOV X1, X31
	0x035A6FBC BL 0x33ED394
	0x035A6FC0 STR X0, [X31 + 0x8]
	0x035A6FC4 ADD X0, X31, 0x8
	0x035A6FC8 MOV X1, X31
	0x035A6FCC BL 0x32C3A80
	0x035A6FD0 TBNZ X0, 0x0, 0x35A702C
	0x035A6FD4 STR W31, [X19]
	0x035A6FD8 LDR X8, [X31 + 0x8]
	0x035A6FDC STR X8, [X19 + 0x38]
	0x035A6FE0 ADRP X8, 0xB50000
	0x035A6FE4 LDR X8, [X8 + 0x280]
	0x035A6FE8 LDR X0, [X8]
	0x035A6FEC LDR W8, [X0 + 0xE0]
	0x035A6FF0 CBNZ W8, 0x35A6FF8
	0x035A6FF4 BL 0x1C16DFC
	0x035A6FF8 ADRP X8, 0xB91000
	0x035A6FFC LDR X8, [X8 + 0x5D0]
	0x035A7000 ADD X0, X19, 0x8
	0x035A7004 LDR X3, [X8]
	0x035A7008 ADD X1, X31, 0x8
	0x035A700C MOV X2, X19
	0x035A7010 BL 0x218AE08
	0x035A7014 B 0x35A70EC
	0x035A7018 LDR X8, [X19 + 0x38]
	0x035A701C MOVN W23, 0x0
	0x035A7020 STR X8, [X31 + 0x8]
	0x035A7024 STR X31, [X19 + 0x38]
	0x035A7028 STR W23, [X19]
	0x035A702C ADD X0, X31, 0x8
	0x035A7030 MOV X1, X31
	0x035A7034 BL 0x32C3B4C
	0x035A7038 MOV X20, X31
	0x035A703C MOVZ W22, 0x6
	0x035A7040 TBZ X23, 0x1F, 0x35A70AC
	0x035A7044 LDR X21, [X19 + 0x30]
	0x035A7048 CBZ X21, 0x35A70AC
	0x035A704C ADRP X10, 0xB4C000
	0x035A7050 LDR X8, [X21]
	0x035A7054 LDR X10, [X10 + 0xE00]
	0x035A7058 LDRH W9, [X8 + 0x12E]
	0x035A705C LDR X1, [X10]
	0x035A7060 CBZ X9, 0x35A7084
	0x035A7064 LDR X10, [X8 + 0xB0]
	0x035A7068 ADD X10, X10, 0x8
	0x035A706C LDUR X11, [X10 - 0x8]
	0x035A7070 CMP X11, X1
	0x035A7074 B.EQ 0x35A7094
	0x035A7078 SUBS X9, X9, 0x1
	0x035A707C ADD X10, X10, 0x10
	0x035A7080 B.NE 0x35A706C
	0x035A7084 MOV X0, X21
	0x035A7088 MOV W2, W31
	0x035A708C BL 0x1C5C788
	0x035A7090 B 0x35A70A0
	0x035A7094 LDRSW X9, [X10]
	0x035A7098 ADD X8, X8, X9, 0x4, LSL
	0x035A709C ADD X0, X8, 0x138
	0x035A70A0 LDP X8, X1, [X0]
	0x035A70A4 MOV X0, X21
	0x035A70A8 BLR X8
	0x035A70AC CBNZ X20, 0x35A7100
	0x035A70B0 CMP W22, 0x6
	0x035A70B4 B.EQ 0x35A70BC
	0x035A70B8 CBNZ W22, 0x35A70EC
	0x035A70BC MOVN W8, 0x1
	0x035A70C0 STR X31, [X19 + 0x30]
	0x035A70C4 STR W8, [X19], #0x8
	0x035A70C8 ADRP X8, 0xB4F000
	0x035A70CC LDR X8, [X8 + 0x280]
	0x035A70D0 LDR X0, [X8]
	0x035A70D4 LDR W8, [X0 + 0xE0]
	0x035A70D8 CBNZ W8, 0x35A70E0
	0x035A70DC BL 0x1C16DFC
	0x035A70E0 MOV X0, X19
	0x035A70E4 MOV X1, X31
	0x035A70E8 BL 0x32C4864
	0x035A70EC LDP X20, X19, [X31 + 0x30]
	0x035A70F0 LDP X22, X21, [X31 + 0x20]
	0x035A70F4 LDP X30, X23, [X31 + 0x10]
	0x035A70F8 ADD X31, X31, 0x40
	0x035A70FC RET
	0x035A7100 MOV X0, X20
	0x035A7104 BL 0x1C16F18
	0x035A7108 BL 0x1C16F20
	0x035A710C BL 0x1C16F20
	0x035A7110 BL 0x1C16F20
	0x035A7114 MOV X22, X1
	0x035A7118 MOV X21, X0
	0x035A711C MOV W23, W31
	0x035A7120 B 0x35A7144
	0x035A7124 B 0x35A713C
	0x035A7128 B 0x35A713C
	0x035A712C B 0x35A713C
	0x035A7130 B 0x35A713C
	0x035A7134 B 0x35A713C
	0x035A7138 B 0x35A71F4
	0x035A713C MOV X22, X1
	0x035A7140 MOV X21, X0
	0x035A7144 CMP W22, 0x1
	0x035A7148 B.NE 0x35A7168
	0x035A714C MOV X0, X21
	0x035A7150 BL 0x3EB1AD0
	0x035A7154 LDR X20, [X0]
	0x035A7158 BL 0x3EB1AE0
	0x035A715C MOV W22, W31
	0x035A7160 TBZ X23, 0x1F, 0x35A70AC
	0x035A7164 B 0x35A7044
	0x035A7168 MOV X20, X31
	0x035A716C TBZ X23, 0x1F, 0x35A71D8
	0x035A7170 LDR X23, [X19 + 0x30]
	0x035A7174 CBZ X23, 0x35A71D8
	0x035A7178 ADRP X10, 0xB4C000
	0x035A717C LDR X8, [X23]
	0x035A7180 LDR X10, [X10 + 0xE00]
	0x035A7184 LDRH W9, [X8 + 0x12E]
	0x035A7188 LDR X1, [X10]
	0x035A718C CBZ X9, 0x35A71B0
	0x035A7190 LDR X10, [X8 + 0xB0]
	0x035A7194 ADD X10, X10, 0x8
	0x035A7198 LDUR X11, [X10 - 0x8]
	0x035A719C CMP X11, X1
	0x035A71A0 B.EQ 0x35A71C0
	0x035A71A4 SUBS X9, X9, 0x1
	0x035A71A8 ADD X10, X10, 0x10
	0x035A71AC B.NE 0x35A7198
	0x035A71B0 MOV X0, X23
	0x035A71B4 MOV W2, W31
	0x035A71B8 BL 0x1C5C788
	0x035A71BC B 0x35A71CC
	0x035A71C0 LDRSW X9, [X10]
	0x035A71C4 ADD X8, X8, X9, 0x4, LSL
	0x035A71C8 ADD X0, X8, 0x138
	0x035A71CC LDP X8, X1, [X0]
	0x035A71D0 MOV X0, X23
	0x035A71D4 BLR X8
	0x035A71D8 CBZ X20, 0x35A71FC
	0x035A71DC MOV X0, X20
	0x035A71E0 BL 0x1C16F18
	0x035A71E4 MOV X22, X1
	0x035A71E8 MOV X21, X0
	0x035A71EC TBZ X23, 0x1F, 0x35A71D8
	0x035A71F0 B 0x35A7170
	0x035A71F4 MOV X22, X1
	0x035A71F8 MOV X21, X0
	0x035A71FC CMP W22, 0x1
	0x035A7200 B.NE 0x35A7290
	0x035A7204 MOV X0, X21
	0x035A7208 BL 0x3EB1AD0
	0x035A720C MOV X20, X0
	0x035A7210 ADRP X0, 0xB4C000
	0x035A7214 LDR X0, [X0 + 0x7D0]
	0x035A7218 BL 0x1C16D08
	0x035A721C LDR X8, [X20]
	0x035A7220 LDR X1, [X8]
	0x035A7224 BL 0x1C17270
	0x035A7228 TBZ X0, 0x0, 0x35A7268
	0x035A722C LDR X20, [X20]
	0x035A7230 BL 0x3EB1AE0
	0x035A7234 MOVN W8, 0x1
	0x035A7238 STR W8, [X19], #0x8
	0x035A723C ADRP X0, 0xB4F000
	0x035A7240 LDR X0, [X0 + 0x280]
	0x035A7244 BL 0x1C16D08
	0x035A7248 LDR W8, [X0 + 0xE0]
	0x035A724C CBNZ W8, 0x35A7254
	0x035A7250 BL 0x1C16DFC
	0x035A7254 MOV X0, X19
	0x035A7258 MOV X1, X20
	0x035A725C MOV X2, X31
	0x035A7260 BL 0x32C4908
	0x035A7264 B 0x35A70EC
	0x035A7268 MOVZ W0, 0x8
	0x035A726C BL 0x3EB1AF0
	0x035A7270 LDR X8, [X20]
	0x035A7274 STR X8, [X0]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+32], X24
	004 Move [X31+40], X23
	005 Move [X31+48], X22
	006 Move [X31+56], X21
	007 Move [X31+64], X20
	008 Move [X31+72], X19
	009 Move X20, 0xE3B000
	010 Move W8, [X20+22]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {48}
	016 Move X0, 0xB92000
	017 Move X0, [X0+1424]
	018 Call 0x1C17CF4
	019 Move X0, 0xB92000
	020 Move X0, [X0+1432]
	021 Call 0x1C17CF4
	022 Move X0, 0xB92000
	023 Move X0, [X0+1440]
	024 Call 0x1C17CF4
	025 Move X0, 0xB51000
	026 Move X0, [X0+640]
	027 Call 0x1C17CF4
	028 Move X0, 0xB92000
	029 Move X0, [X0+832]
	030 Call 0x1C17CF4
	031 Move X0, 0xB4F000
	032 Move X0, [X0+2544]
	033 Call 0x1C17CF4
	034 Move X0, 0xB92000
	035 Move X0, [X0+656]
	036 Call 0x1C17CF4
	037 Move X0, 0xB92000
	038 Move X0, [X0+936]
	039 Call 0x1C17CF4
	040 Move X0, 0xB92000
	041 Move X0, [X0+944]
	042 Call 0x1C17CF4
	043 Move X0, 0xB92000
	044 Move X0, [X0+952]
	045 Call 0x1C17CF4
	046 Move W8, 1
	047 Move [X20+22], W8
	048 Move [X31+24], X31
	049 Move [X31], X31
	050 Move [X31+8], X31
	051 Move X24, 0xB51000
	052 Move X23, 0xB92000
	053 Move W8, [X19]
	054 Move X20, [X19+32]
	055 Move X24, [X24+640]
	056 Move X23, [X23+656]
	057 Compare W8, 0
	058 JumpIfEqual {67}
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Move X8, [X19+96]
	061 Move TEMP, 0
	062 Not TEMP
	063 Move W9, TEMP
	064 Move [X31], X8
	065 Move [X19+96], X31
	066 Move [X19], W9
	067 Move X8, [X19+88]
	068 Move TEMP, 0
	069 Not TEMP
	070 Move W9, TEMP
	071 Move [X31+8], X8
	072 Move [X19+88], X31
	073 Move [X19], W9
	074 Move X8, 0xB92000
	075 Move X8, [X8+936]
	076 Add X0, X31, 8
	077 Move X1, [X8]
	078 Call TaskAwaiter`1<Object>.GetResult, X0
	079 Compare X20, 0
	080 JumpIfEqual {312}
	081 Move W8, [X20+16]
	082 Compare W8, 0
	083 JumpIfEqual {208}
	084 Move X21, [X19+40]
	085 Compare X21, 0
	086 JumpIfEqual {313}
	087 Move X8, [X21]
	088 Move X1, [X23]
	089 NotImplemented "Instruction LDRH not yet implemented."
	090 Compare X9, 0
	091 JumpIfEqual {98}
	092 Move X10, [X8+176]
	093 Add X10, X10, 8
	094 NotImplemented "Instruction LDUR not yet implemented."
	095 NotImplemented "Instruction CMP not yet implemented."
	096 Subtract X9, X9, 1
	097 Add X10, X10, 16
	098 Move W2, 5
	099 Move X0, X21
	100 Call 0x1C5D788
	101 Move W9, [X10]
	102 Add W9, W9, 5
	103 Add X8, X8, W9
	104 Add X0, X8, 312
	105 Move X8, [X0]
	106 Move X1, [X0+8]
	107 Move X0, X21
	108 NotImplemented "Instruction BLR not yet implemented."
	109 Move X1, X31
	110 Call String.IsNullOrEmpty, X0
	111 Move TEMP, X0
	112 And TEMP, TEMP, 1
	113 Compare TEMP, 1
	114 JumpIfEqual {206}
	115 Move X8, 0xB4F000
	116 Move X8, [X8+2544]
	117 Move X21, [X19+40]
	118 Move X0, [X8]
	119 Move W8, [X0+224]
	120 Compare W8, 0
	121 JumpIfNotEqual {123}
	122 Call 0x1C17DFC
	123 Move X0, X31
	124 Call DateTime.get_UtcNow
	125 Move X22, 0xB92000
	126 Move X22, [X22+832]
	127 Move X8, X0
	128 Move [X31+24], X8
	129 Move X0, [X22]
	130 Move W8, [X0+224]
	131 Compare W8, 0
	132 JumpIfNotEqual {135}
	133 Call 0x1C17DFC
	134 Move X0, [X22]
	135 Move X8, [X0+184]
	136 Move X1, [X8]
	137 Add X0, X31, 24
	138 Move X2, X31
	139 Call DateTime.Add, X0, X1
	140 Compare X21, 0
	141 JumpIfEqual {314}
	142 Move X8, [X21]
	143 Move X1, [X23]
	144 Move X22, X0
	145 NotImplemented "Instruction LDRH not yet implemented."
	146 Compare X9, 0
	147 JumpIfEqual {154}
	148 Move X10, [X8+176]
	149 Add X10, X10, 8
	150 NotImplemented "Instruction LDUR not yet implemented."
	151 NotImplemented "Instruction CMP not yet implemented."
	152 Subtract X9, X9, 1
	153 Add X10, X10, 16
	154 Move W2, 7
	155 Move X0, X21
	156 Call 0x1C5D788
	157 Move W9, [X10]
	158 Add W9, W9, 7
	159 Add X8, X8, W9
	160 Add X0, X8, 312
	161 Move X8, [X0]
	162 Move X2, [X0+8]
	163 Move X0, X21
	164 Move X1, X22
	165 NotImplemented "Instruction BLR not yet implemented."
	166 Move TEMP, X0
	167 And TEMP, TEMP, 1
	168 Compare TEMP, 1
	169 JumpIfNotEqual {206}
	170 Move X1, [X19+40]
	171 Move X2, [X19+48]
	172 Move X3, [X19+56]
	173 Move X0, X20
	174 Call Client.SessionRefreshAsync, X0, X1, X2
	175 Compare X0, 0
	176 JumpIfEqual {315}
	177 Move X8, 0xB92000
	178 Move X8, [X8+952]
	179 Move X1, [X8]
	180 Call Task`1<Object>.GetAwaiter, X0
	181 Move X8, 0xB92000
	182 Move X8, [X8+944]
	183 Move [X31+8], X0
	184 Move X1, [X8]
	185 Add X0, X31, 8
	186 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	187 Move TEMP, X0
	188 And TEMP, TEMP, 1
	189 Compare TEMP, 1
	190 JumpIfEqual {74}
	191 Move [X19], W31
	192 Move X8, [X31+8]
	193 Move [X19+88], X8
	194 Move X0, [X24]
	195 Move W8, [X0+224]
	196 Compare W8, 0
	197 JumpIfNotEqual {199}
	198 Call 0x1C17DFC
	199 Move X8, 0xB92000
	200 Move X8, [X8+1432]
	201 Add X0, X19, 8
	202 Move X3, [X8]
	203 Add X1, X31, 8
	204 Move X2, X19
	205 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	206 Compare X20, 0
	207 JumpIfEqual {311}
	208 Move X21, [X19+40]
	209 Compare X21, 0
	210 JumpIfEqual {307}
	211 Move X8, [X21]
	212 Move X20, [X20+64]
	213 Move X1, [X23]
	214 NotImplemented "Instruction LDRH not yet implemented."
	215 Compare X9, 0
	216 JumpIfEqual {223}
	217 Move X10, [X8+176]
	218 Add X10, X10, 8
	219 NotImplemented "Instruction LDUR not yet implemented."
	220 NotImplemented "Instruction CMP not yet implemented."
	221 Subtract X9, X9, 1
	222 Add X10, X10, 16
	223 Move X0, X21
	224 Move W2, W31
	225 Call 0x1C5D788
	226 NotImplemented "Instruction LDRSW not yet implemented."
	227 Add X8, X8, X9
	228 Add X0, X8, 312
	229 Move X8, [X0]
	230 Move X1, [X0+8]
	231 Move X0, X21
	232 NotImplemented "Instruction BLR not yet implemented."
	233 Move X8, 0xB91000
	234 Move X8, [X8+1424]
	235 Move X21, X0
	236 Move X22, [X19+64]
	237 Move X0, [X8]
	238 Call 0x1C17F10
	239 Move X23, X0
	240 Move X1, X31
	241 Call Object..ctor, X0
	242 Compare X23, 0
	243 JumpIfEqual {308}
	244 NotImplemented "Instruction LDUR not yet implemented."
	245 Move [X23+1], V0
	246 Compare X20, 0
	247 JumpIfEqual {309}
	248 Move X4, [X19+48]
	249 Move X5, [X19+56]
	250 Move X0, X20
	251 Move X1, X21
	252 Move X2, X22
	253 Move X3, X23
	254 Call ApiClient.SatoriUpdateMessageAsync, X0, X1, X2, X3, X4
	255 Compare X0, 0
	256 JumpIfEqual {310}
	257 Move X1, X31
	258 Call Task.GetAwaiter, X0
	259 Move [X31], X0
	260 Add X0, X31, 0
	261 Move X1, X31
	262 Call TaskAwaiter.get_IsCompleted, X0
	263 Move TEMP, X0
	264 And TEMP, TEMP, 1
	265 Compare TEMP, 1
	266 JumpIfNotEqual {282}
	267 Add X0, X31, 0
	268 Move X1, X31
	269 Call TaskAwaiter.GetResult, X0
	270 Move TEMP, 1
	271 Not TEMP
	272 Move W8, TEMP
	273 Move [X19+8], W8
	274 Move X0, [X24]
	275 Move W8, [X0+224]
	276 Compare W8, 0
	277 JumpIfNotEqual {279}
	278 Call 0x1C17DFC
	279 Move X0, X19
	280 Move X1, X31
	281 Call AsyncTaskMethodBuilder.SetResult, X0
	282 Move W8, 1
	283 Move [X19], W8
	284 Move X8, [X31]
	285 Move [X19+96], X8
	286 Move X0, [X24]
	287 Move W8, [X0+224]
	288 Compare W8, 0
	289 JumpIfNotEqual {291}
	290 Call 0x1C17DFC
	291 Move X8, 0xB91000
	292 Move X8, [X8+1440]
	293 Add X0, X19, 8
	294 Move X3, [X8]
	295 Add X1, X31, 0
	296 Move X2, X19
	297 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	298 Move X20, [X31+64]
	299 Move X19, [X31+72]
	300 Move X22, [X31+48]
	301 Move X21, [X31+56]
	302 Move X24, [X31+32]
	303 Move X23, [X31+40]
	304 Move X30, [X31+16]
	305 Add X31, X31, 80
	306 Return 
	307 Call 0x1C17F20
	308 Call 0x1C17F20
	309 Call 0x1C17F20
	310 Call 0x1C17F20
	311 Call 0x1C17F20
	312 Call 0x1C17F20
	313 Call 0x1C17F20
	314 Call 0x1C17F20
	315 Call 0x1C17F20
	316 Move X20, X0
	317 NotImplemented "Instruction CMP not yet implemented."
	318 Move X0, X20
	319 Call 0x3EB2AD0
	320 Move X20, X0
	321 Move X0, 0xB4D000
	322 Move X0, [X0+2000]
	323 Call 0x1C17D08
	324 Move X8, [X20]
	325 Move X1, [X8]
	326 Call 0x1C18270
	327 Move TEMP, X0
	328 And TEMP, TEMP, 1
	329 Compare TEMP, 1
	330 JumpIfNotEqual {348}
	331 Move X20, [X20]
	332 Call 0x3EB2AE0
	333 Move TEMP, 1
	334 Not TEMP
	335 Move W8, TEMP
	336 Move [X19+8], W8
	337 Move X0, 0xB50000
	338 Move X0, [X0+640]
	339 Call 0x1C17D08
	340 Move W8, [X0+224]
	341 Compare W8, 0
	342 JumpIfNotEqual {344}
	343 Call 0x1C17DFC
	344 Move X0, X19
	345 Move X1, X20
	346 Move X2, X31
	347 Call AsyncTaskMethodBuilder.SetException, X0, X1
	348 Move W0, 8
	349 Call 0x3EB2AF0
	350 Move X8, [X20]
	351 Move [X0], X8
	352 Move X1, 0x90E000
	353 Add X1, X1, 3672
	354 Move X2, X31
	355 Call 0x3EB2B00
	356 Move X20, X0
	357 Call 0x3EB2AE0
	358 Move X0, X20
	359 Call 0x1D2D690
	360 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x035A7278 ADRP X1, 0x90D000
	0x035A727C ADD X1, X1, 0xE58
	0x035A7280 MOV X2, X31
	0x035A7284 BL 0x3EB1B00
	0x035A7288 MOV X21, X0
	0x035A728C BL 0x3EB1AE0
	0x035A7290 MOV X0, X21
	0x035A7294 BL 0x1D2C690
	0x035A7298 BL 0x1990590
	0x035A729C STR X30, [X31 - 0x30]!
	0x035A72A0 STP X22, X21, [X31 + 0x10]
	0x035A72A4 STP X20, X19, [X31 + 0x20]
	0x035A72A8 ADRP X21, 0xE39000
	0x035A72AC ADRP X22, 0xB4F000
	0x035A72B0 LDRB W8, [X21 + 0x1F]
	0x035A72B4 LDR X22, [X22 + 0x280]
	0x035A72B8 MOV X19, X1
	0x035A72BC MOV X20, X0
	0x035A72C0 TBNZ X8, 0x0, 0x35A72D8
	0x035A72C4 ADRP X0, 0xB4F000
	0x035A72C8 LDR X0, [X0 + 0x280]
	0x035A72CC BL 0x1C16CF4
	0x035A72D0 MOVZ W8, 0x1
	0x035A72D4 STRB W8, [X21 + 0x1F]
	0x035A72D8 LDR X0, [X22]
	0x035A72DC LDR W8, [X0 + 0xE0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xE3A000
	007 Move X22, 0xB50000
	008 Move W8, [X21+23]
	009 Move X22, [X22+640]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xB50000
	017 Move X0, [X0+640]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+23], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Add X0, X20, 8
	027 Move X1, X19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X2, X31
	033 Move X30, [X31+48]
	034 Call AsyncTaskMethodBuilder.SetStateMachine, X0, X1
	035 Return 

