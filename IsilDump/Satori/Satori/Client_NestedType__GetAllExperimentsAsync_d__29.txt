Type: Satori.Client/<GetAllExperimentsAsync>d__29

Method: System.Void MoveNext()

Disassembly:
	0x035A2DEC STRB W8, [X22 + 0x7]
	0x035A2DF0 LDR X0, [X21]
	0x035A2DF4 ADRP X21, 0xB95000
	0x035A2DF8 LDR W8, [X0 + 0xE0]
	0x035A2DFC LDR X21, [X21 + 0x4B8]
	0x035A2E00 CBNZ W8, 0x35A2E08
	0x035A2E04 BL 0x1C16DFC
	0x035A2E08 LDR X2, [X21]
	0x035A2E0C ADD X0, X20, 0x8
	0x035A2E10 MOV X1, X19
	0x035A2E14 LDP X20, X19, [X31 + 0x20]
	0x035A2E18 LDP X22, X21, [X31 + 0x10]
	0x035A2E1C LDR X30, [X31], #0x30
	0x035A2E20 B 0x2632228
	0x035A2E24 SUB X31, X31, 0x50
	0x035A2E28 STP X30, X25, [X31 + 0x10]
	0x035A2E2C STP X24, X23, [X31 + 0x20]
	0x035A2E30 STP X22, X21, [X31 + 0x30]
	0x035A2E34 STP X20, X19, [X31 + 0x40]
	0x035A2E38 ADRP X20, 0xE3E000
	0x035A2E3C LDRB W8, [X20 + 0x8]
	0x035A2E40 MOV X19, X0
	0x035A2E44 TBNZ X8, 0x0, 0x35A2EEC
	0x035A2E48 ADRP X0, 0xB95000
	0x035A2E4C LDR X0, [X0 + 0x4C0]
	0x035A2E50 BL 0x1C16CF4
	0x035A2E54 ADRP X0, 0xB95000
	0x035A2E58 LDR X0, [X0 + 0x460]
	0x035A2E5C BL 0x1C16CF4
	0x035A2E60 ADRP X0, 0xB95000
	0x035A2E64 LDR X0, [X0 + 0x2B8]
	0x035A2E68 BL 0x1C16CF4
	0x035A2E6C ADRP X0, 0xB95000
	0x035A2E70 LDR X0, [X0 + 0x468]
	0x035A2E74 BL 0x1C16CF4
	0x035A2E78 ADRP X0, 0xB95000
	0x035A2E7C LDR X0, [X0 + 0x470]
	0x035A2E80 BL 0x1C16CF4
	0x035A2E84 ADRP X0, 0xB51000
	0x035A2E88 LDR X0, [X0 + 0xE00]
	0x035A2E8C BL 0x1C16CF4
	0x035A2E90 ADRP X0, 0xB95000
	0x035A2E94 LDR X0, [X0 + 0x478]
	0x035A2E98 BL 0x1C16CF4
	0x035A2E9C ADRP X0, 0xB95000
	0x035A2EA0 LDR X0, [X0 + 0x480]
	0x035A2EA4 BL 0x1C16CF4
	0x035A2EA8 ADRP X0, 0xB51000
	0x035A2EAC LDR X0, [X0 + 0xE18]
	0x035A2EB0 BL 0x1C16CF4
	0x035A2EB4 ADRP X0, 0xB51000
	0x035A2EB8 LDR X0, [X0 + 0xAC8]
	0x035A2EBC BL 0x1C16CF4
	0x035A2EC0 ADRP X0, 0xB95000
	0x035A2EC4 LDR X0, [X0 + 0x488]
	0x035A2EC8 BL 0x1C16CF4
	0x035A2ECC ADRP X0, 0xB95000
	0x035A2ED0 LDR X0, [X0 + 0x490]
	0x035A2ED4 BL 0x1C16CF4
	0x035A2ED8 ADRP X0, 0xB95000
	0x035A2EDC LDR X0, [X0 + 0x498]
	0x035A2EE0 BL 0x1C16CF4
	0x035A2EE4 MOVZ W8, 0x1
	0x035A2EE8 STRB W8, [X20 + 0x8]
	0x035A2EEC STR X31, [X31 + 0x8]
	0x035A2EF0 LDR W23, [X19]
	0x035A2EF4 CBZ W23, 0x35A2FAC
	0x035A2EF8 ADRP X8, 0xB51000
	0x035A2EFC LDR X8, [X8 + 0xAC8]
	0x035A2F00 LDR X20, [X19 + 0x20]
	0x035A2F04 LDR X0, [X8]
	0x035A2F08 MOVZ W1, 0x1
	0x035A2F0C BL 0x1C16D6C
	0x035A2F10 MOV X1, X0
	0x035A2F14 CBZ X1, 0x35A3368
	0x035A2F18 LDR W8, [X1 + 0x18]
	0x035A2F1C CBZ W8, 0x35A336C
	0x035A2F20 LDR X8, [X19 + 0x28]
	0x035A2F24 STR X8, [X1 + 0x20]
	0x035A2F28 CBZ X20, 0x35A3370
	0x035A2F2C LDP X2, X3, [X19 + 0x30]
	0x035A2F30 MOV X0, X20
	0x035A2F34 BL 0x359F384
	0x035A2F38 CBZ X0, 0x35A3374
	0x035A2F3C ADRP X8, 0xB95000
	0x035A2F40 LDR X8, [X8 + 0x498]
	0x035A2F44 LDR X1, [X8]
	0x035A2F48 BL 0x269F5D0
	0x035A2F4C ADRP X8, 0xB95000
	0x035A2F50 LDR X8, [X8 + 0x490]
	0x035A2F54 STR X0, [X31 + 0x8]
	0x035A2F58 LDR X1, [X8]
	0x035A2F5C ADD X0, X31, 0x8
	0x035A2F60 BL 0x2677430
	0x035A2F64 TBNZ X0, 0x0, 0x35A2FC0
	0x035A2F68 STR W31, [X19]
	0x035A2F6C LDR X8, [X31 + 0x8]
	0x035A2F70 STR X8, [X19 + 0x40]
	0x035A2F74 ADRP X8, 0xB95000
	0x035A2F78 LDR X8, [X8 + 0x2B8]
	0x035A2F7C LDR X0, [X8]
	0x035A2F80 LDR W8, [X0 + 0xE0]
	0x035A2F84 CBNZ W8, 0x35A2F8C
	0x035A2F88 BL 0x1C16DFC
	0x035A2F8C ADRP X8, 0xB95000
	0x035A2F90 LDR X8, [X8 + 0x4C0]
	0x035A2F94 ADD X0, X19, 0x8
	0x035A2F98 LDR X3, [X8]
	0x035A2F9C ADD X1, X31, 0x8
	0x035A2FA0 MOV X2, X19
	0x035A2FA4 BL 0x1FBF4B8
	0x035A2FA8 B 0x35A3334
	0x035A2FAC LDR X8, [X19 + 0x40]
	0x035A2FB0 MOVN W23, 0x0
	0x035A2FB4 STR X8, [X31 + 0x8]
	0x035A2FB8 STR X31, [X19 + 0x40]
	0x035A2FBC STR W23, [X19]
	0x035A2FC0 ADRP X8, 0xB95000
	0x035A2FC4 LDR X8, [X8 + 0x488]
	0x035A2FC8 ADD X0, X31, 0x8
	0x035A2FCC LDR X1, [X8]
	0x035A2FD0 BL 0x2677474
	0x035A2FD4 MOV X20, X0
	0x035A2FD8 CBZ X0, 0x35A3354
	0x035A2FDC ADRP X10, 0xB95000
	0x035A2FE0 LDR X8, [X20]
	0x035A2FE4 LDR X10, [X10 + 0x468]
	0x035A2FE8 LDRH W9, [X8 + 0x12E]
	0x035A2FEC LDR X1, [X10]
	0x035A2FF0 CBZ X9, 0x35A3014
	0x035A2FF4 LDR X10, [X8 + 0xB0]
	0x035A2FF8 ADD X10, X10, 0x8
	0x035A2FFC LDUR X11, [X10 - 0x8]
	0x035A3000 CMP X11, X1
	0x035A3004 B.EQ 0x35A3024
	0x035A3008 SUBS X9, X9, 0x1
	0x035A300C ADD X10, X10, 0x10
	0x035A3010 B.NE 0x35A2FFC
	0x035A3014 MOV X0, X20
	0x035A3018 MOV W2, W31
	0x035A301C BL 0x1C5C788
	0x035A3020 B 0x35A3030
	0x035A3024 LDRSW X9, [X10]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xE3F000
	007 Move W8, [X20+2]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {33}
	013 Move X0, 0xB96000
	014 Move X0, [X0+1064]
	015 Call 0x1C17CF4
	016 Move X0, 0xB96000
	017 Move X0, [X0+256]
	018 Call 0x1C17CF4
	019 Move X0, 0xB95000
	020 Move X0, [X0+3968]
	021 Call 0x1C17CF4
	022 Move X0, 0xB96000
	023 Move X0, [X0+1072]
	024 Call 0x1C17CF4
	025 Move X0, 0xB96000
	026 Move X0, [X0+1080]
	027 Call 0x1C17CF4
	028 Move X0, 0xB96000
	029 Move X0, [X0+1088]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X20+2], W8
	033 Move [X31+8], X31
	034 Move X21, 0xB95000
	035 Move W8, [X19]
	036 Move X21, [X21+3968]
	037 Compare W8, 0
	038 JumpIfEqual {78}
	039 Move X0, [X19+32]
	040 Compare X0, 0
	041 JumpIfEqual {112}
	042 Move X1, [X19+40]
	043 Move X3, [X19+48]
	044 Move X4, [X19+56]
	045 Move X2, X31
	046 Call Client.GetExperimentsAsync, X0, X1, X2, X3
	047 Compare X0, 0
	048 JumpIfEqual {113}
	049 Move X8, 0xB96000
	050 Move X8, [X8+1088]
	051 Move X1, [X8]
	052 Call Task`1<Object>.GetAwaiter, X0
	053 Move X8, 0xB96000
	054 Move X8, [X8+1080]
	055 Move [X31+8], X0
	056 Move X1, [X8]
	057 Add X0, X31, 8
	058 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	059 Move TEMP, X0
	060 And TEMP, TEMP, 1
	061 Compare TEMP, 1
	062 JumpIfEqual {85}
	063 Move [X19], W31
	064 Move X8, [X31+8]
	065 Move [X19+64], X8
	066 Move X0, [X21]
	067 Move W8, [X0+224]
	068 Compare W8, 0
	069 JumpIfNotEqual {71}
	070 Call 0x1C17DFC
	071 Move X8, 0xB96000
	072 Move X8, [X8+1064]
	073 Add X0, X19, 8
	074 Move X3, [X8]
	075 Add X1, X31, 8
	076 Move X2, X19
	077 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	078 Move X8, [X19+64]
	079 Move TEMP, 0
	080 Not TEMP
	081 Move W9, TEMP
	082 Move [X31+8], X8
	083 Move [X19+64], X31
	084 Move [X19], W9
	085 Move X8, 0xB96000
	086 Move X8, [X8+1072]
	087 Add X0, X31, 8
	088 Move X1, [X8]
	089 Call TaskAwaiter`1<Object>.GetResult, X0
	090 Move TEMP, 1
	091 Not TEMP
	092 Move W8, TEMP
	093 Move [X19+8], W8
	094 Move X20, X0
	095 Move X0, [X21]
	096 Move X21, 0xB96000
	097 Move W8, [X0+224]
	098 Move X21, [X21+256]
	099 Compare W8, 0
	100 JumpIfNotEqual {102}
	101 Call 0x1C17DFC
	102 Move X2, [X21]
	103 Move X0, X19
	104 Move X1, X20
	105 Call AsyncTaskMethodBuilder`1<Object>.SetResult, X0, X1
	106 Move X20, [X31+32]
	107 Move X19, [X31+40]
	108 Move X30, [X31+16]
	109 Move X21, [X31+24]
	110 Add X31, X31, 48
	111 Return 
	112 Call 0x1C17F20
	113 Call 0x1C17F20
	114 Move X20, X0
	115 NotImplemented "Instruction CMP not yet implemented."
	116 Move X0, X20
	117 Call 0x3EB2AD0
	118 Move X20, X0
	119 Move X0, 0xB52000
	120 Move X0, [X0+2000]
	121 Call 0x1C17D08
	122 Move X8, [X20]
	123 Move X1, [X8]
	124 Call 0x1C18270
	125 Move TEMP, X0
	126 And TEMP, TEMP, 1
	127 Compare TEMP, 1
	128 JumpIfNotEqual {149}
	129 Move X20, [X20]
	130 Call 0x3EB2AE0
	131 Move TEMP, 1
	132 Not TEMP
	133 Move W8, TEMP
	134 Move [X19+8], W8
	135 Move X0, 0xB95000
	136 Move X0, [X0+3968]
	137 Call 0x1C17D08
	138 Move W8, [X0+224]
	139 Compare W8, 0
	140 JumpIfNotEqual {142}
	141 Call 0x1C17DFC
	142 Move X0, 0xB96000
	143 Move X0, [X0+288]
	144 Call 0x1C17D08
	145 Move X2, X0
	146 Move X0, X19
	147 Move X1, X20
	148 Call AsyncTaskMethodBuilder`1<Object>.SetException, X0, X1
	149 Move W0, 8
	150 Call 0x3EB2AF0
	151 Move X8, [X20]
	152 Move [X0], X8
	153 Move X1, 0x912000
	154 Add X1, X1, 3672
	155 Move X2, X31
	156 Call 0x3EB2B00
	157 Move X20, X0
	158 Call 0x3EB2AE0
	159 Move X0, X20
	160 Call 0x1D2D690
	161 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x035A3028 ADD X8, X8, X9, 0x4, LSL
	0x035A302C ADD X0, X8, 0x138
	0x035A3030 LDP X8, X1, [X0]
	0x035A3034 MOV X0, X20
	0x035A3038 BLR X8
	0x035A303C MOV X20, X0
	0x035A3040 CBZ X0, 0x35A3358
	0x035A3044 ADRP X10, 0xB94000
	0x035A3048 LDR X8, [X20]
	0x035A304C LDR X10, [X10 + 0x478]
	0x035A3050 LDRH W9, [X8 + 0x12E]
	0x035A3054 LDR X1, [X10]
	0x035A3058 CBZ X9, 0x35A307C
	0x035A305C LDR X10, [X8 + 0xB0]
	0x035A3060 ADD X10, X10, 0x8
	0x035A3064 LDUR X11, [X10 - 0x8]
	0x035A3068 CMP X11, X1
	0x035A306C B.EQ 0x35A308C
	0x035A3070 SUBS X9, X9, 0x1
	0x035A3074 ADD X10, X10, 0x10
	0x035A3078 B.NE 0x35A3064
	0x035A307C MOV X0, X20
	0x035A3080 MOV W2, W31
	0x035A3084 BL 0x1C5C788
	0x035A3088 B 0x35A3098
	0x035A308C LDRSW X9, [X10]
	0x035A3090 ADD X8, X8, X9, 0x4, LSL
	0x035A3094 ADD X0, X8, 0x138
	0x035A3098 LDP X8, X1, [X0]
	0x035A309C MOV X0, X20
	0x035A30A0 BLR X8

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xE3E000
	007 Move X21, 0xB94000
	008 Move W8, [X22+3]
	009 Move X21, [X21+3968]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xB95000
	017 Move X0, [X0+296]
	018 Call 0x1C17CF4
	019 Move X0, 0xB94000
	020 Move X0, [X0+3968]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+3], W8
	024 Move X0, [X21]
	025 Move X21, 0xB95000
	026 Move W8, [X0+224]
	027 Move X21, [X21+296]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X2, [X21]
	032 Add X0, X20, 8
	033 Move X1, X19
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Call AsyncTaskMethodBuilder`1<Object>.SetStateMachine, X0, X1
	040 Return 

