Type: Satori.ApiEvent

Method: System.String get_Id()

Disassembly:
	0x035936C0 ADRP X0, 0xB61000
	0x035936C4 LDR X0, [X0 + 0x6D0]

ISIL:
	001 Move X0, [X0+16]
	002 Return X0

Method: System.Void set_Id(System.String value)

Disassembly:
	0x035936C8 BL 0x1C16CF4
	0x035936CC MOVZ W8, 0x1

ISIL:
	001 Move [X0+16], X1
	002 Return 

Method: System.Collections.Generic.IDictionary`2<System.String, System.String> get_Metadata()

Disassembly:
	0x035936D0 STRB W8, [X20 + 0xFA1]
	0x035936D4 LDR X19, [X19 + 0x18]
	0x035936D8 CBNZ X19, 0x3593700
	0x035936DC ADRP X8, 0xB61000
	0x035936E0 LDR X8, [X8 + 0x6D0]
	0x035936E4 LDR X0, [X8]
	0x035936E8 BL 0x1C16F10
	0x035936EC ADRP X8, 0xB61000
	0x035936F0 LDR X8, [X8 + 0x6C0]
	0x035936F4 MOV X19, X0
	0x035936F8 LDR X1, [X8]
	0x035936FC BL 0x2AA4804
	0x03593700 MOV X0, X19
	0x03593704 LDP X20, X19, [X31 + 0x10]
	0x03593708 LDR X30, [X31], #0x20
	0x0359370C RET
	0x03593710 LDR X0, [X0 + 0x18]
	0x03593714 RET
	0x03593718 STR X1, [X0 + 0x18]
	0x0359371C RET
	0x03593720 LDR X0, [X0 + 0x20]
	0x03593724 RET
	0x03593728 STR X1, [X0 + 0x20]
	0x0359372C RET
	0x03593730 SUB X31, X31, 0x70
	0x03593734 STP X29, X30, [X31 + 0x10]
	0x03593738 STP X28, X27, [X31 + 0x20]
	0x0359373C STP X26, X25, [X31 + 0x30]
	0x03593740 STP X24, X23, [X31 + 0x40]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xE4D000
	005 Move W8, [X20+3988]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0xB62000
	012 Move X0, [X0+1728]
	013 Call 0x1C17CF4
	014 Move X0, 0xB62000
	015 Move X0, [X0+1744]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3988], W8
	019 Move X19, [X19+24]
	020 Compare X19, 0
	021 JumpIfNotEqual {31}
	022 Move X8, 0xB62000
	023 Move X8, [X8+1744]
	024 Move X0, [X8]
	025 Call 0x1C17F10
	026 Move X8, 0xB62000
	027 Move X8, [X8+1728]
	028 Move X19, X0
	029 Move X1, [X8]
	030 Call Dictionary`2<Object, Object>..ctor, X0
	031 Move X0, X19
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X30, [X31+32]
	035 Return X0

Method: System.Collections.Generic.Dictionary`2<System.String, System.String> get__metadata()

Disassembly:
	0x03593744 STP X22, X21, [X31 + 0x50]
	0x03593748 STP X20, X19, [X31 + 0x60]

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void set__metadata(System.Collections.Generic.Dictionary`2<System.String, System.String> value)

Disassembly:
	0x0359374C STR X0, [X31 + 0x8]
	0x03593750 ADRP X19, 0xE4C000

ISIL:
	001 Move [X0+24], X1
	002 Return 

Method: System.String get_Name()

Disassembly:
	0x03593754 ADRP X20, 0xB60000
	0x03593758 LDRB W8, [X19 + 0xFA2]

ISIL:
	001 Move X0, [X0+32]
	002 Return X0

Method: System.Void set_Name(System.String value)

Disassembly:
	0x0359375C LDR X20, [X20 + 0x988]
	0x03593760 TBNZ X8, 0x0, 0x359382C

ISIL:
	001 Move [X0+32], X1
	002 Return 

Method: System.String get_Timestamp()

Disassembly:
	0x03593764 ADRP X0, 0xB60000
	0x03593768 LDR X0, [X0 + 0xE00]

ISIL:
	001 Move X0, [X0+40]
	002 Return X0

Method: System.Void set_Timestamp(System.String value)

Disassembly:
	0x0359376C BL 0x1C16CF4
	0x03593770 ADRP X0, 0xB63000

ISIL:
	001 Move [X0+40], X1
	002 Return 

Method: System.String get_Value()

Disassembly:
	0x03593774 LDR X0, [X0 + 0x190]
	0x03593778 BL 0x1C16CF4

ISIL:
	001 Move X0, [X0+48]
	002 Return X0

Method: System.Void set_Value(System.String value)

Disassembly:
	0x0359377C ADRP X0, 0xB63000
	0x03593780 LDR X0, [X0 + 0x198]

ISIL:
	001 Move [X0+48], X1
	002 Return 

Method: System.String ToString()

Disassembly:
	0x03593784 BL 0x1C16CF4
	0x03593788 ADRP X0, 0xB60000
	0x0359378C LDR X0, [X0 + 0xE18]
	0x03593790 BL 0x1C16CF4
	0x03593794 ADRP X0, 0xB63000
	0x03593798 LDR X0, [X0 + 0x1B0]
	0x0359379C BL 0x1C16CF4
	0x035937A0 ADRP X0, 0xB63000
	0x035937A4 LDR X0, [X0 + 0x1B8]
	0x035937A8 BL 0x1C16CF4
	0x035937AC ADRP X0, 0xB60000
	0x035937B0 LDR X0, [X0 + 0xAC8]
	0x035937B4 BL 0x1C16CF4
	0x035937B8 ADRP X0, 0xB8D000
	0x035937BC LDR X0, [X0 + 0x360]
	0x035937C0 BL 0x1C16CF4
	0x035937C4 ADRP X0, 0xB8D000
	0x035937C8 LDR X0, [X0 + 0xFB8]
	0x035937CC BL 0x1C16CF4
	0x035937D0 ADRP X0, 0xB9A000
	0x035937D4 LDR X0, [X0 + 0xD88]
	0x035937D8 BL 0x1C16CF4
	0x035937DC ADRP X0, 0xB6B000
	0x035937E0 LDR X0, [X0 + 0x6D8]
	0x035937E4 BL 0x1C16CF4
	0x035937E8 ADRP X0, 0xB60000
	0x035937EC LDR X0, [X0 + 0x838]
	0x035937F0 BL 0x1C16CF4
	0x035937F4 ADRP X0, 0xBA3000
	0x035937F8 LDR X0, [X0 + 0xE20]
	0x035937FC BL 0x1C16CF4
	0x03593800 ADRP X0, 0xBA3000
	0x03593804 LDR X0, [X0 + 0xE28]
	0x03593808 BL 0x1C16CF4
	0x0359380C ADRP X0, 0xB60000
	0x03593810 LDR X0, [X0 + 0x988]
	0x03593814 BL 0x1C16CF4
	0x03593818 ADRP X0, 0xB60000
	0x0359381C LDR X0, [X0 + 0x848]
	0x03593820 BL 0x1C16CF4
	0x03593824 MOVZ W8, 0x1
	0x03593828 STRB W8, [X19 + 0xFA2]
	0x0359382C LDR X0, [X31 + 0x8]
	0x03593830 LDR X20, [X20]
	0x03593834 BL 0x3593618
	0x03593838 CBZ X0, 0x3593DBC
	0x0359383C ADRP X10, 0xB63000
	0x03593840 LDR X8, [X0]
	0x03593844 LDR X10, [X10 + 0x190]
	0x03593848 MOV X21, X0
	0x0359384C LDRH W9, [X8 + 0x12E]
	0x03593850 LDR X1, [X10]
	0x03593854 CBZ X9, 0x3593878
	0x03593858 LDR X10, [X8 + 0xB0]
	0x0359385C ADD X10, X10, 0x8
	0x03593860 LDUR X11, [X10 - 0x8]
	0x03593864 CMP X11, X1
	0x03593868 B.EQ 0x3593888
	0x0359386C SUBS X9, X9, 0x1
	0x03593870 ADD X10, X10, 0x10
	0x03593874 B.NE 0x3593860
	0x03593878 MOV X0, X21
	0x0359387C MOV W2, W31
	0x03593880 BL 0x1C5C788
	0x03593884 B 0x3593894
	0x03593888 LDRSW X9, [X10]
	0x0359388C ADD X8, X8, X9, 0x4, LSL
	0x03593890 ADD X0, X8, 0x138
	0x03593894 ADRP X25, 0xB60000
	0x03593898 ADRP X26, 0xB63000
	0x0359389C ADRP X28, 0xB60000
	0x035938A0 ADRP X29, 0xB8D000
	0x035938A4 ADRP X27, 0xB8D000
	0x035938A8 ADRP X19, 0xB6B000
	0x035938AC LDR X25, [X25 + 0xE18]
	0x035938B0 LDR X26, [X26 + 0x198]
	0x035938B4 LDR X28, [X28 + 0xAC8]
	0x035938B8 LDR X29, [X29 + 0x360]
	0x035938BC LDR X27, [X27 + 0xFB8]
	0x035938C0 LDR X19, [X19 + 0x6D8]
	0x035938C4 LDP X8, X1, [X0]
	0x035938C8 MOV X0, X21
	0x035938CC BLR X8
	0x035938D0 MOV X21, X0
	0x035938D4 MOV X0, X20
	0x035938D8 CBZ X21, 0x3593D84
	0x035938DC LDR X8, [X21]
	0x035938E0 LDR X1, [X25]
	0x035938E4 MOV X22, X0
	0x035938E8 LDRH W9, [X8 + 0x12E]
	0x035938EC CBZ X9, 0x3593910
	0x035938F0 LDR X10, [X8 + 0xB0]
	0x035938F4 ADD X10, X10, 0x8
	0x035938F8 LDUR X11, [X10 - 0x8]
	0x035938FC CMP X11, X1
	0x03593900 B.EQ 0x3593920
	0x03593904 SUBS X9, X9, 0x1
	0x03593908 ADD X10, X10, 0x10
	0x0359390C B.NE 0x35938F8
	0x03593910 MOV X0, X21
	0x03593914 MOV W2, W31
	0x03593918 BL 0x1C5C788
	0x0359391C B 0x359392C
	0x03593920 LDRSW X9, [X10]
	0x03593924 ADD X8, X8, X9, 0x4, LSL
	0x03593928 ADD X0, X8, 0x138
	0x0359392C LDP X8, X1, [X0]
	0x03593930 MOV X0, X21
	0x03593934 BLR X8
	0x03593938 TBZ X0, 0x0, 0x3593A10
	0x0359393C LDR X8, [X21]
	0x03593940 LDR X1, [X26]
	0x03593944 LDRH W9, [X8 + 0x12E]
	0x03593948 CBZ X9, 0x359396C
	0x0359394C LDR X10, [X8 + 0xB0]
	0x03593950 ADD X10, X10, 0x8
	0x03593954 LDUR X11, [X10 - 0x8]
	0x03593958 CMP X11, X1
	0x0359395C B.EQ 0x359397C
	0x03593960 SUBS X9, X9, 0x1
	0x03593964 ADD X10, X10, 0x10
	0x03593968 B.NE 0x3593954
	0x0359396C MOV X0, X21
	0x03593970 MOV W2, W31
	0x03593974 BL 0x1C5C788
	0x03593978 B 0x3593988
	0x0359397C LDRSW X9, [X10]
	0x03593980 ADD X8, X8, X9, 0x4, LSL
	0x03593984 ADD X0, X8, 0x138
	0x03593988 LDP X8, X1, [X0]
	0x0359398C MOV X0, X21
	0x03593990 BLR X8
	0x03593994 MOV X24, X0
	0x03593998 LDR X0, [X28]
	0x0359399C MOV X23, X1
	0x035939A0 MOVZ W1, 0x5
	0x035939A4 BL 0x1C16D6C
	0x035939A8 CBZ X0, 0x3593D90
	0x035939AC LDR W8, [X0 + 0x18]
	0x035939B0 CBZ W8, 0x3593D98
	0x035939B4 LDR X9, [X29]
	0x035939B8 CMP W8, 0x1
	0x035939BC STR X9, [X0 + 0x20]
	0x035939C0 B.EQ 0x3593D8C
	0x035939C4 CMP W8, 0x2
	0x035939C8 STR X24, [X0 + 0x28]
	0x035939CC B.LS 0x3593D9C
	0x035939D0 LDR X9, [X27]
	0x035939D4 CMP W8, 0x3
	0x035939D8 STR X9, [X0 + 0x30]
	0x035939DC B.EQ 0x3593DA0
	0x035939E0 CMP W8, 0x4
	0x035939E4 STR X23, [X0 + 0x38]
	0x035939E8 B.LS 0x3593D94
	0x035939EC LDR X8, [X19]
	0x035939F0 STR X8, [X0 + 0x40]
	0x035939F4 MOV X1, X31
	0x035939F8 BL 0x32278CC
	0x035939FC MOV X1, X0
	0x03593A00 MOV X0, X22
	0x03593A04 MOV X2, X31
	0x03593A08 BL 0x321B938
	0x03593A0C B 0x35938D8
	0x03593A10 MOV X23, X31
	0x03593A14 CBZ X21, 0x3593A78
	0x03593A18 LDR X8, [X21]
	0x03593A1C ADRP X10, 0xB60000
	0x03593A20 LDRH W9, [X8 + 0x12E]
	0x03593A24 LDR X10, [X10 + 0xE00]
	0x03593A28 LDR X1, [X10]
	0x03593A2C CBZ X9, 0x3593A50
	0x03593A30 LDR X10, [X8 + 0xB0]
	0x03593A34 ADD X10, X10, 0x8
	0x03593A38 LDUR X11, [X10 - 0x8]
	0x03593A3C CMP X11, X1
	0x03593A40 B.EQ 0x3593A60
	0x03593A44 SUBS X9, X9, 0x1
	0x03593A48 ADD X10, X10, 0x10
	0x03593A4C B.NE 0x3593A38
	0x03593A50 MOV X0, X21
	0x03593A54 MOV W2, W31
	0x03593A58 BL 0x1C5C788
	0x03593A5C B 0x3593A6C
	0x03593A60 LDRSW X9, [X10]
	0x03593A64 ADD X8, X8, X9, 0x4, LSL
	0x03593A68 ADD X0, X8, 0x138
	0x03593A6C LDP X8, X1, [X0]
	0x03593A70 MOV X0, X21
	0x03593A74 BLR X8
	0x03593A78 CBNZ X23, 0x3593DC0
	0x03593A7C ADRP X8, 0xBA3000
	0x03593A80 LDR X8, [X8 + 0xE20]
	0x03593A84 MOV X1, X22
	0x03593A88 MOV X3, X31
	0x03593A8C LDR X0, [X8]
	0x03593A90 ADRP X8, 0xB60000
	0x03593A94 LDR X8, [X8 + 0x848]
	0x03593A98 LDR X2, [X8]
	0x03593A9C BL 0x32274B8
	0x03593AA0 MOV X1, X0
	0x03593AA4 MOV X0, X20
	0x03593AA8 MOV X2, X31
	0x03593AAC BL 0x321B938
	0x03593AB0 ADRP X8, 0xB60000
	0x03593AB4 LDR X8, [X8 + 0x988]
	0x03593AB8 STR X0, [X31]
	0x03593ABC LDR X0, [X31 + 0x8]
	0x03593AC0 LDR X20, [X8]
	0x03593AC4 BL 0x359369C
	0x03593AC8 CBZ X0, 0x3593DBC
	0x03593ACC LDR X8, [X0]
	0x03593AD0 ADRP X10, 0xB63000
	0x03593AD4 MOV X21, X0
	0x03593AD8 LDRH W9, [X8 + 0x12E]
	0x03593ADC LDR X10, [X10 + 0x190]
	0x03593AE0 LDR X1, [X10]
	0x03593AE4 CBZ X9, 0x3593B08
	0x03593AE8 LDR X10, [X8 + 0xB0]
	0x03593AEC ADD X10, X10, 0x8
	0x03593AF0 LDUR X11, [X10 - 0x8]
	0x03593AF4 CMP X11, X1
	0x03593AF8 B.EQ 0x3593B18
	0x03593AFC SUBS X9, X9, 0x1
	0x03593B00 ADD X10, X10, 0x10
	0x03593B04 B.NE 0x3593AF0
	0x03593B08 MOV X0, X21
	0x03593B0C MOV W2, W31
	0x03593B10 BL 0x1C5C788
	0x03593B14 B 0x3593B24
	0x03593B18 LDRSW X9, [X10]
	0x03593B1C ADD X8, X8, X9, 0x4, LSL
	0x03593B20 ADD X0, X8, 0x138
	0x03593B24 LDP X8, X1, [X0]
	0x03593B28 MOV X0, X21
	0x03593B2C BLR X8
	0x03593B30 MOV X21, X0
	0x03593B34 MOV X0, X20
	0x03593B38 CBZ X21, 0x3593D88
	0x03593B3C LDR X8, [X21]
	0x03593B40 LDR X1, [X25]
	0x03593B44 MOV X22, X0
	0x03593B48 LDRH W9, [X8 + 0x12E]
	0x03593B4C CBZ X9, 0x3593B70
	0x03593B50 LDR X10, [X8 + 0xB0]
	0x03593B54 ADD X10, X10, 0x8
	0x03593B58 LDUR X11, [X10 - 0x8]
	0x03593B5C CMP X11, X1
	0x03593B60 B.EQ 0x3593B80
	0x03593B64 SUBS X9, X9, 0x1
	0x03593B68 ADD X10, X10, 0x10
	0x03593B6C B.NE 0x3593B58
	0x03593B70 MOV X0, X21
	0x03593B74 MOV W2, W31
	0x03593B78 BL 0x1C5C788
	0x03593B7C B 0x3593B8C
	0x03593B80 LDRSW X9, [X10]
	0x03593B84 ADD X8, X8, X9, 0x4, LSL
	0x03593B88 ADD X0, X8, 0x138
	0x03593B8C LDP X8, X1, [X0]
	0x03593B90 MOV X0, X21
	0x03593B94 BLR X8
	0x03593B98 TBZ X0, 0x0, 0x3593C70
	0x03593B9C LDR X8, [X21]
	0x03593BA0 LDR X1, [X26]
	0x03593BA4 LDRH W9, [X8 + 0x12E]
	0x03593BA8 CBZ X9, 0x3593BCC
	0x03593BAC LDR X10, [X8 + 0xB0]
	0x03593BB0 ADD X10, X10, 0x8
	0x03593BB4 LDUR X11, [X10 - 0x8]
	0x03593BB8 CMP X11, X1
	0x03593BBC B.EQ 0x3593BDC
	0x03593BC0 SUBS X9, X9, 0x1
	0x03593BC4 ADD X10, X10, 0x10
	0x03593BC8 B.NE 0x3593BB4
	0x03593BCC MOV X0, X21
	0x03593BD0 MOV W2, W31
	0x03593BD4 BL 0x1C5C788
	0x03593BD8 B 0x3593BE8
	0x03593BDC LDRSW X9, [X10]
	0x03593BE0 ADD X8, X8, X9, 0x4, LSL
	0x03593BE4 ADD X0, X8, 0x138
	0x03593BE8 LDP X8, X1, [X0]
	0x03593BEC MOV X0, X21
	0x03593BF0 BLR X8
	0x03593BF4 MOV X24, X0
	0x03593BF8 LDR X0, [X28]
	0x03593BFC MOV X23, X1
	0x03593C00 MOVZ W1, 0x5
	0x03593C04 BL 0x1C16D6C
	0x03593C08 CBZ X0, 0x3593DA8
	0x03593C0C LDR W8, [X0 + 0x18]
	0x03593C10 CBZ W8, 0x3593DB0
	0x03593C14 LDR X9, [X29]
	0x03593C18 CMP W8, 0x1
	0x03593C1C STR X9, [X0 + 0x20]
	0x03593C20 B.EQ 0x3593DA4
	0x03593C24 CMP W8, 0x2
	0x03593C28 STR X24, [X0 + 0x28]
	0x03593C2C B.LS 0x3593DB4
	0x03593C30 LDR X9, [X27]
	0x03593C34 CMP W8, 0x3
	0x03593C38 STR X9, [X0 + 0x30]
	0x03593C3C B.EQ 0x3593DB8
	0x03593C40 CMP W8, 0x4
	0x03593C44 STR X23, [X0 + 0x38]
	0x03593C48 B.LS 0x3593DAC
	0x03593C4C LDR X8, [X19]
	0x03593C50 STR X8, [X0 + 0x40]
	0x03593C54 MOV X1, X31
	0x03593C58 BL 0x32278CC
	0x03593C5C MOV X1, X0
	0x03593C60 MOV X0, X22
	0x03593C64 MOV X2, X31
	0x03593C68 BL 0x321B938
	0x03593C6C B 0x3593B38
	0x03593C70 MOV X23, X31
	0x03593C74 MOVZ W19, 0x7
	0x03593C78 CBZ X21, 0x3593CDC
	0x03593C7C LDR X8, [X21]
	0x03593C80 ADRP X10, 0xB60000
	0x03593C84 LDRH W9, [X8 + 0x12E]
	0x03593C88 LDR X10, [X10 + 0xE00]
	0x03593C8C LDR X1, [X10]
	0x03593C90 CBZ X9, 0x3593CB4
	0x03593C94 LDR X10, [X8 + 0xB0]
	0x03593C98 ADD X10, X10, 0x8
	0x03593C9C LDUR X11, [X10 - 0x8]
	0x03593CA0 CMP X11, X1
	0x03593CA4 B.EQ 0x3593CC4
	0x03593CA8 SUBS X9, X9, 0x1
	0x03593CAC ADD X10, X10, 0x10
	0x03593CB0 B.NE 0x3593C9C
	0x03593CB4 MOV X0, X21
	0x03593CB8 MOV W2, W31
	0x03593CBC BL 0x1C5C788
	0x03593CC0 B 0x3593CD0
	0x03593CC4 LDRSW X9, [X10]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X22, 0xE4D000
	015 Move X20, 0xB61000
	016 Move X21, 0xB9B000
	017 Move X23, 0xB61000
	018 Move W8, [X22+3989]
	019 Move X20, [X20+2440]
	020 Move X21, [X21+3464]
	021 Move X23, [X23+2104]
	022 Move X19, X0
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {83}
	027 Move X0, 0xB61000
	028 Move X0, [X0+3584]
	029 Call 0x1C17CF4
	030 Move X0, 0xB64000
	031 Move X0, [X0+400]
	032 Call 0x1C17CF4
	033 Move X0, 0xB64000
	034 Move X0, [X0+408]
	035 Call 0x1C17CF4
	036 Move X0, 0xB61000
	037 Move X0, [X0+3608]
	038 Call 0x1C17CF4
	039 Move X0, 0xB64000
	040 Move X0, [X0+432]
	041 Call 0x1C17CF4
	042 Move X0, 0xB64000
	043 Move X0, [X0+440]
	044 Call 0x1C17CF4
	045 Move X0, 0xB61000
	046 Move X0, [X0+2760]
	047 Call 0x1C17CF4
	048 Move X0, 0xB8E000
	049 Move X0, [X0+864]
	050 Call 0x1C17CF4
	051 Move X0, 0xB8E000
	052 Move X0, [X0+3000]
	053 Call 0x1C17CF4
	054 Move X0, 0xB8E000
	055 Move X0, [X0+4024]
	056 Call 0x1C17CF4
	057 Move X0, 0xB9B000
	058 Move X0, [X0+3464]
	059 Call 0x1C17CF4
	060 Move X0, 0xB6C000
	061 Move X0, [X0+1752]
	062 Call 0x1C17CF4
	063 Move X0, 0xB62000
	064 Move X0, [X0+3808]
	065 Call 0x1C17CF4
	066 Move X0, 0xB61000
	067 Move X0, [X0+2104]
	068 Call 0x1C17CF4
	069 Move X0, 0xB9B000
	070 Move X0, [X0+3776]
	071 Call 0x1C17CF4
	072 Move X0, 0xBA4000
	073 Move X0, [X0+3632]
	074 Call 0x1C17CF4
	075 Move X0, 0xB61000
	076 Move X0, [X0+2440]
	077 Call 0x1C17CF4
	078 Move X0, 0xB61000
	079 Move X0, [X0+2120]
	080 Call 0x1C17CF4
	081 Move W8, 1
	082 Move [X22+3989], W8
	083 Move X0, [X20]
	084 Move X2, [X19+16]
	085 Move X1, [X21]
	086 Move X3, [X23]
	087 Move X4, X31
	088 Call String.Concat, X0, X1, X2, X3
	089 Move X8, [X20]
	090 Move X20, X0
	091 Move X0, X19
	092 Move [X31+8], X8
	093 Call ApiEvent.get_Metadata, X0
	094 Compare X0, 0
	095 JumpIfEqual {297}
	096 Move X10, 0xB64000
	097 Move X8, [X0]
	098 Move X10, [X10+400]
	099 Move X21, X0
	100 Move [X31], X20
	101 NotImplemented "Instruction LDRH not yet implemented."
	102 Move X1, [X10]
	103 Compare X9, 0
	104 JumpIfEqual {111}
	105 Move X10, [X8+176]
	106 Add X10, X10, 8
	107 NotImplemented "Instruction LDUR not yet implemented."
	108 NotImplemented "Instruction CMP not yet implemented."
	109 Subtract X9, X9, 1
	110 Add X10, X10, 16
	111 Move X0, X21
	112 Move W2, W31
	113 Call 0x1C5D788
	114 NotImplemented "Instruction LDRSW not yet implemented."
	115 Add X8, X8, X9
	116 Add X0, X8, 312
	117 Move X28, 0xB61000
	118 Move X26, 0xB64000
	119 Move X29, 0xB61000
	120 Move X25, 0xB8E000
	121 Move X20, 0xB8E000
	122 Move X27, 0xB6C000
	123 Move X28, [X28+3608]
	124 Move X26, [X26+408]
	125 Move X29, [X29+2760]
	126 Move X25, [X25+864]
	127 Move X20, [X20+4024]
	128 Move X27, [X27+1752]
	129 Move X8, [X0]
	130 Move X1, [X0+8]
	131 Move X0, X21
	132 NotImplemented "Instruction BLR not yet implemented."
	133 Move X21, X0
	134 Move X0, [X31+8]
	135 Compare X21, 0
	136 JumpIfEqual {290}
	137 Move X8, [X21]
	138 Move X1, [X28]
	139 Move X22, X0
	140 NotImplemented "Instruction LDRH not yet implemented."
	141 Compare X9, 0
	142 JumpIfEqual {149}
	143 Move X10, [X8+176]
	144 Add X10, X10, 8
	145 NotImplemented "Instruction LDUR not yet implemented."
	146 NotImplemented "Instruction CMP not yet implemented."
	147 Subtract X9, X9, 1
	148 Add X10, X10, 16
	149 Move X0, X21
	150 Move W2, W31
	151 Call 0x1C5D788
	152 NotImplemented "Instruction LDRSW not yet implemented."
	153 Add X8, X8, X9
	154 Add X0, X8, 312
	155 Move X8, [X0]
	156 Move X1, [X0+8]
	157 Move X0, X21
	158 NotImplemented "Instruction BLR not yet implemented."
	159 Move TEMP, X0
	160 And TEMP, TEMP, 1
	161 Compare TEMP, 1
	162 JumpIfNotEqual {212}
	163 Move X8, [X21]
	164 Move X1, [X26]
	165 NotImplemented "Instruction LDRH not yet implemented."
	166 Compare X9, 0
	167 JumpIfEqual {174}
	168 Move X10, [X8+176]
	169 Add X10, X10, 8
	170 NotImplemented "Instruction LDUR not yet implemented."
	171 NotImplemented "Instruction CMP not yet implemented."
	172 Subtract X9, X9, 1
	173 Add X10, X10, 16
	174 Move X0, X21
	175 Move W2, W31
	176 Call 0x1C5D788
	177 NotImplemented "Instruction LDRSW not yet implemented."
	178 Add X8, X8, X9
	179 Add X0, X8, 312
	180 Move X8, [X0]
	181 Move X1, [X0+8]
	182 Move X0, X21
	183 NotImplemented "Instruction BLR not yet implemented."
	184 Move X24, X0
	185 Move X0, [X29]
	186 Move X23, X1
	187 Move W1, 5
	188 Call 0x1C17D6C
	189 Compare X0, 0
	190 JumpIfEqual {292}
	191 Move W8, [X0+24]
	192 Compare W8, 0
	193 JumpIfEqual {294}
	194 Move X9, [X25]
	195 NotImplemented "Instruction CMP not yet implemented."
	196 Move [X0+32], X9
	197 NotImplemented "Instruction CMP not yet implemented."
	198 Move [X0+40], X24
	199 Move X9, [X20]
	200 NotImplemented "Instruction CMP not yet implemented."
	201 Move [X0+48], X9
	202 NotImplemented "Instruction CMP not yet implemented."
	203 Move [X0+56], X23
	204 Move X8, [X27]
	205 Move [X0+64], X8
	206 Move X1, X31
	207 Call String.Concat, X0
	208 Move X1, X0
	209 Move X0, X22
	210 Move X2, X31
	211 Call String.Concat, X0, X1
	212 Move X20, 0xB61000
	213 Move X20, [X20+2104]
	214 Move X23, X31
	215 Compare X21, 0
	216 JumpIfEqual {240}
	217 Move X8, [X21]
	218 Move X10, 0xB61000
	219 NotImplemented "Instruction LDRH not yet implemented."
	220 Move X10, [X10+3584]
	221 Move X1, [X10]
	222 Compare X9, 0
	223 JumpIfEqual {230}
	224 Move X10, [X8+176]
	225 Add X10, X10, 8
	226 NotImplemented "Instruction LDUR not yet implemented."
	227 NotImplemented "Instruction CMP not yet implemented."
	228 Subtract X9, X9, 1
	229 Add X10, X10, 16
	230 Move X0, X21
	231 Move W2, W31
	232 Call 0x1C5D788
	233 NotImplemented "Instruction LDRSW not yet implemented."
	234 Add X8, X8, X9
	235 Add X0, X8, 312
	236 Move X8, [X0]
	237 Move X1, [X0+8]
	238 Move X0, X21
	239 NotImplemented "Instruction BLR not yet implemented."
	240 Compare X23, 0
	241 JumpIfNotEqual {298}
	242 Move X8, 0xBA4000
	243 Move X8, [X8+3632]
	244 Move X1, X22
	245 Move X3, X31
	246 Move X0, [X8]
	247 Move X8, 0xB61000
	248 Move X8, [X8+2120]
	249 Move X2, [X8]
	250 Call String.Concat, X0, X1, X2
	251 Move X1, X0
	252 Move X0, [X31]
	253 Move X2, X31
	254 Call String.Concat, X0, X1
	255 Move X8, 0xB62000
	256 Move X2, [X19+32]
	257 Move X8, [X8+3808]
	258 Move X3, [X20]
	259 Move X4, X31
	260 Move X1, [X8]
	261 Call String.Concat, X0, X1, X2, X3
	262 Move X8, 0xB9B000
	263 Move X2, [X19+40]
	264 Move X8, [X8+3776]
	265 Move X3, [X20]
	266 Move X4, X31
	267 Move X1, [X8]
	268 Call String.Concat, X0, X1, X2, X3
	269 Move X8, 0xB8E000
	270 Move X2, [X19+48]
	271 Move X8, [X8+3000]
	272 Move X3, [X20]
	273 Move X20, [X31+96]
	274 Move X19, [X31+104]
	275 Move X22, [X31+80]
	276 Move X21, [X31+88]
	277 Move X1, [X8]
	278 Move X24, [X31+64]
	279 Move X23, [X31+72]
	280 Move X26, [X31+48]
	281 Move X25, [X31+56]
	282 Move X28, [X31+32]
	283 Move X27, [X31+40]
	284 Move X29, [X31+16]
	285 Move X30, [X31+24]
	286 Move X4, X31
	287 Add X31, X31, 112
	288 Call String.Concat, X0, X1, X2, X3
	289 Return X0
	290 Call 0x1C17F20
	291 Call 0x1C17F28
	292 Call 0x1C17F20
	293 Call 0x1C17F28
	294 Call 0x1C17F28
	295 Call 0x1C17F28
	296 Call 0x1C17F28
	297 Call 0x1C17F20
	298 Move X0, X23
	299 Call 0x1C17F18
	300 Move X22, [X31+8]
	301 Move X20, 0xB61000
	302 Move X20, [X20+2104]
	303 NotImplemented "Instruction CMP not yet implemented."
	304 Call 0x3EB2AD0
	305 Move X23, [X0]
	306 Call 0x3EB2AE0
	307 Move X19, X0
	308 Move X23, X31
	309 Move X19, X0
	310 Compare X21, 0
	311 JumpIfEqual {335}
	312 Move X8, [X21]
	313 Move X10, 0xB61000
	314 NotImplemented "Instruction LDRH not yet implemented."
	315 Move X10, [X10+3584]
	316 Move X1, [X10]
	317 Compare X9, 0
	318 JumpIfEqual {325}
	319 Move X10, [X8+176]
	320 Add X10, X10, 8
	321 NotImplemented "Instruction LDUR not yet implemented."
	322 NotImplemented "Instruction CMP not yet implemented."
	323 Subtract X9, X9, 1
	324 Add X10, X10, 16
	325 Move X0, X21
	326 Move W2, W31
	327 Call 0x1C5D788
	328 NotImplemented "Instruction LDRSW not yet implemented."
	329 Add X8, X8, X9
	330 Add X0, X8, 312
	331 Move X8, [X0]
	332 Move X1, [X0+8]
	333 Move X0, X21
	334 NotImplemented "Instruction BLR not yet implemented."
	335 Compare X23, 0
	336 JumpIfNotEqual {339}
	337 Move X0, X19
	338 Call 0x1D2D690
	339 Move X0, X23
	340 Call 0x1C17F18
	341 Call 0x1991590

Method: System.Void .ctor()

Disassembly:
	0x03593CC8 ADD X8, X8, X9, 0x4, LSL
	0x03593CCC ADD X0, X8, 0x138

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

