Type: Satori.ApiClient/<SatoriHealthcheckAsync>d__7

Method: System.Void MoveNext()

Disassembly:
	0x0359D0BC BL 0x3EB1AE0
	0x0359D0C0 MOVN W8, 0x1
	0x0359D0C4 STR W8, [X19], #0x8
	0x0359D0C8 ADRP X0, 0xB9A000
	0x0359D0CC LDR X0, [X0 + 0x20]
	0x0359D0D0 BL 0x1C16D08
	0x0359D0D4 LDR W8, [X0 + 0xE0]
	0x0359D0D8 CBNZ W8, 0x359D0E0
	0x0359D0DC BL 0x1C16DFC
	0x0359D0E0 ADRP X0, 0xB9A000
	0x0359D0E4 LDR X0, [X0 + 0x200]
	0x0359D0E8 BL 0x1C16D08
	0x0359D0EC MOV X2, X0
	0x0359D0F0 MOV X0, X19
	0x0359D0F4 MOV X1, X20
	0x0359D0F8 BL 0x26324C8
	0x0359D0FC B 0x359CFF4
	0x0359D100 MOVZ W0, 0x8
	0x0359D104 BL 0x3EB1AF0
	0x0359D108 LDR X8, [X20]
	0x0359D10C STR X8, [X0]
	0x0359D110 ADRP X1, 0x917000
	0x0359D114 ADD X1, X1, 0xE58
	0x0359D118 MOV X2, X31
	0x0359D11C BL 0x3EB1B00
	0x0359D120 MOV X20, X0
	0x0359D124 BL 0x3EB1AE0
	0x0359D128 MOV X0, X20
	0x0359D12C BL 0x1D2C690
	0x0359D130 BL 0x1990590
	0x0359D134 STR X30, [X31 - 0x30]!
	0x0359D138 STP X22, X21, [X31 + 0x10]
	0x0359D13C STP X20, X19, [X31 + 0x20]
	0x0359D140 ADRP X22, 0xE42000
	0x0359D144 ADRP X21, 0xB9A000
	0x0359D148 LDRB W8, [X22 + 0xFDC]
	0x0359D14C LDR X21, [X21 + 0x20]
	0x0359D150 MOV X19, X1
	0x0359D154 MOV X20, X0
	0x0359D158 TBNZ X8, 0x0, 0x359D17C
	0x0359D15C ADRP X0, 0xB9A000
	0x0359D160 LDR X0, [X0 + 0x208]
	0x0359D164 BL 0x1C16CF4
	0x0359D168 ADRP X0, 0xB9A000
	0x0359D16C LDR X0, [X0 + 0x20]
	0x0359D170 BL 0x1C16CF4
	0x0359D174 MOVZ W8, 0x1
	0x0359D178 STRB W8, [X22 + 0xFDC]
	0x0359D17C LDR X0, [X21]
	0x0359D180 ADRP X21, 0xB9A000
	0x0359D184 LDR W8, [X0 + 0xE0]
	0x0359D188 LDR X21, [X21 + 0x208]
	0x0359D18C CBNZ W8, 0x359D194
	0x0359D190 BL 0x1C16DFC
	0x0359D194 LDR X2, [X21]
	0x0359D198 ADD X0, X20, 0x8
	0x0359D19C MOV X1, X19
	0x0359D1A0 LDP X20, X19, [X31 + 0x20]
	0x0359D1A4 LDP X22, X21, [X31 + 0x10]
	0x0359D1A8 LDR X30, [X31], #0x30
	0x0359D1AC B 0x2632228
	0x0359D1B0 SUB X31, X31, 0x60
	0x0359D1B4 STP X30, X27, [X31 + 0x10]
	0x0359D1B8 STP X26, X25, [X31 + 0x20]
	0x0359D1BC STP X24, X23, [X31 + 0x30]
	0x0359D1C0 STP X22, X21, [X31 + 0x40]
	0x0359D1C4 STP X20, X19, [X31 + 0x50]
	0x0359D1C8 ADRP X20, 0xE42000
	0x0359D1CC LDRB W8, [X20 + 0xFDD]
	0x0359D1D0 MOV X19, X0
	0x0359D1D4 TBNZ X8, 0x0, 0x359D2A0
	0x0359D1D8 ADRP X0, 0xB9A000
	0x0359D1DC LDR X0, [X0 + 0x210]
	0x0359D1E0 BL 0x1C16CF4
	0x0359D1E4 ADRP X0, 0xB59000
	0x0359D1E8 LDR X0, [X0 + 0x280]
	0x0359D1EC BL 0x1C16CF4
	0x0359D1F0 ADRP X0, 0xB5F000
	0x0359D1F4 LDR X0, [X0 + 0x8D8]
	0x0359D1F8 BL 0x1C16CF4
	0x0359D1FC ADRP X0, 0xB57000
	0x0359D200 LDR X0, [X0 + 0x810]
	0x0359D204 BL 0x1C16CF4
	0x0359D208 ADRP X0, 0xB57000
	0x0359D20C LDR X0, [X0 + 0x6C0]
	0x0359D210 BL 0x1C16CF4
	0x0359D214 ADRP X0, 0xB57000
	0x0359D218 LDR X0, [X0 + 0x6D0]
	0x0359D21C BL 0x1C16CF4
	0x0359D220 ADRP X0, 0xB9A000
	0x0359D224 LDR X0, [X0 + 0x58]
	0x0359D228 BL 0x1C16CF4
	0x0359D22C ADRP X0, 0xB59000
	0x0359D230 LDR X0, [X0 + 0x1E0]
	0x0359D234 BL 0x1C16CF4
	0x0359D238 ADRP X0, 0xB59000
	0x0359D23C LDR X0, [X0 + 0x1F0]
	0x0359D240 BL 0x1C16CF4
	0x0359D244 ADRP X0, 0xB59000
	0x0359D248 LDR X0, [X0 + 0x1F8]
	0x0359D24C BL 0x1C16CF4
	0x0359D250 ADRP X0, 0xB5F000
	0x0359D254 LDR X0, [X0 + 0x3A0]
	0x0359D258 BL 0x1C16CF4
	0x0359D25C ADRP X0, 0xB7F000
	0x0359D260 LDR X0, [X0 + 0x4D0]
	0x0359D264 BL 0x1C16CF4
	0x0359D268 ADRP X0, 0xB9A000
	0x0359D26C LDR X0, [X0 + 0x218]
	0x0359D270 BL 0x1C16CF4
	0x0359D274 ADRP X0, 0xB91000
	0x0359D278 LDR X0, [X0 + 0x7D0]
	0x0359D27C BL 0x1C16CF4
	0x0359D280 ADRP X0, 0xB91000
	0x0359D284 LDR X0, [X0 + 0x7D8]
	0x0359D288 BL 0x1C16CF4
	0x0359D28C ADRP X0, 0xB56000
	0x0359D290 LDR X0, [X0 + 0x988]
	0x0359D294 BL 0x1C16CF4
	0x0359D298 MOVZ W8, 0x1
	0x0359D29C STRB W8, [X20 + 0xFDD]
	0x0359D2A0 STR X31, [X31 + 0x8]
	0x0359D2A4 ADRP X27, 0xB59000
	0x0359D2A8 LDR W8, [X19]
	0x0359D2AC LDR X27, [X27 + 0x280]
	0x0359D2B0 CBZ W8, 0x359D454
	0x0359D2B4 LDR X24, [X19 + 0x20]
	0x0359D2B8 CBZ X24, 0x359D568
	0x0359D2BC LDR X0, [X24 + 0x20]
	0x0359D2C0 CBZ X0, 0x359D56C
	0x0359D2C4 ADRP X8, 0xB9A000
	0x0359D2C8 ADRP X9, 0xB56000
	0x0359D2CC LDR X8, [X8 + 0x218]
	0x0359D2D0 LDR X9, [X9 + 0x988]
	0x0359D2D4 LDR X21, [X8]
	0x0359D2D8 LDR X20, [X9]
	0x0359D2DC MOV X1, X31
	0x0359D2E0 BL 0x361B448
	0x0359D2E4 ADRP X8, 0xB5F000
	0x0359D2E8 LDR X8, [X8 + 0x8D8]
	0x0359D2EC MOV X22, X0
	0x0359D2F0 LDR X0, [X8]
	0x0359D2F4 MOVZ W1, 0x1
	0x0359D2F8 BL 0x1C16D6C
	0x0359D2FC MOV X1, X0
	0x0359D300 CBZ X1, 0x359D570
	0x0359D304 LDR W8, [X1 + 0x18]
	0x0359D308 CBZ W8, 0x359D574
	0x0359D30C MOVZ W8, 0x2F
	0x0359D310 STRH W8, [X1 + 0x20]
	0x0359D314 CBZ X22, 0x359D578
	0x0359D318 MOV X0, X22
	0x0359D31C MOV X2, X31
	0x0359D320 BL 0x322BC58
	0x0359D324 MOV X1, X21
	0x0359D328 MOV X2, X31
	0x0359D32C BL 0x321B938
	0x0359D330 ADRP X8, 0xB5F000
	0x0359D334 LDR X8, [X8 + 0x3A0]
	0x0359D338 MOV X22, X0
	0x0359D33C LDR X23, [X24 + 0x20]
	0x0359D340 LDR X0, [X8]
	0x0359D344 BL 0x1C16F10
	0x0359D348 MOV X21, X0
	0x0359D34C MOV X1, X23
	0x0359D350 MOV X2, X31
	0x0359D354 BL 0x36281F8
	0x0359D358 CBZ X21, 0x359D57C
	0x0359D35C MOV X0, X21
	0x0359D360 MOV X1, X22
	0x0359D364 MOV X2, X31
	0x0359D368 BL 0x36288CC
	0x0359D36C MOV X0, X21
	0x0359D370 MOV X1, X20
	0x0359D374 MOV X2, X31
	0x0359D378 BL 0x3628980
	0x0359D37C MOV X0, X21
	0x0359D380 MOV X1, X31
	0x0359D384 BL 0x3628A38
	0x0359D388 ADRP X8, 0xB7F000
	0x0359D38C ADRP X9, 0xB57000
	0x0359D390 LDR X8, [X8 + 0x4D0]
	0x0359D394 LDR X9, [X9 + 0x6D0]
	0x0359D398 MOV X20, X0
	0x0359D39C LDR X21, [X8]
	0x0359D3A0 LDR X0, [X9]
	0x0359D3A4 BL 0x1C16F10
	0x0359D3A8 ADRP X8, 0xB57000
	0x0359D3AC LDR X8, [X8 + 0x6C0]
	0x0359D3B0 MOV X22, X0
	0x0359D3B4 LDR X1, [X8]
	0x0359D3B8 BL 0x2AA4804
	0x0359D3BC ADRP X8, 0xB91000
	0x0359D3C0 LDR X8, [X8 + 0x7D8]
	0x0359D3C4 LDR X1, [X19 + 0x28]
	0x0359D3C8 LDR X0, [X8]
	0x0359D3CC MOV X2, X31
	0x0359D3D0 BL 0x321B938
	0x0359D3D4 CBZ X22, 0x359D580
	0x0359D3D8 ADRP X8, 0xB91000
	0x0359D3DC LDR X8, [X8 + 0x7D0]
	0x0359D3E0 ADRP X9, 0xB57000
	0x0359D3E4 LDR X9, [X9 + 0x810]
	0x0359D3E8 MOV X2, X0
	0x0359D3EC LDR X1, [X8]
	0x0359D3F0 LDR X3, [X9]
	0x0359D3F4 MOV X0, X22
	0x0359D3F8 BL 0x2AA5098
	0x0359D3FC LDR X23, [X24 + 0x10]
	0x0359D400 CBZ X23, 0x359D584
	0x0359D404 ADRP X10, 0xB9A000
	0x0359D408 LDR X10, [X10 + 0x58]
	0x0359D40C LDR X8, [X23]
	0x0359D410 LDR W25, [X24 + 0x18]
	0x0359D414 LDP X26, X24, [X19 + 0x30]
	0x0359D418 LDR X1, [X10]
	0x0359D41C LDRH W9, [X8 + 0x12E]
	0x0359D420 CBZ X9, 0x359D444
	0x0359D424 LDR X10, [X8 + 0xB0]
	0x0359D428 ADD X10, X10, 0x8
	0x0359D42C LDUR X11, [X10 - 0x8]
	0x0359D430 CMP X11, X1
	0x0359D434 B.EQ 0x359D46C
	0x0359D438 SUBS X9, X9, 0x1
	0x0359D43C ADD X10, X10, 0x10
	0x0359D440 B.NE 0x359D42C
	0x0359D444 MOVZ W2, 0x3
	0x0359D448 MOV X0, X23
	0x0359D44C BL 0x1C5C788
	0x0359D450 B 0x359D47C
	0x0359D454 LDR X8, [X19 + 0x40]
	0x0359D458 MOVN W9, 0x0
	0x0359D45C STR X8, [X31 + 0x8]
	0x0359D460 STR X31, [X19 + 0x40]
	0x0359D464 STR W9, [X19]
	0x0359D468 B 0x359D4D8
	0x0359D46C LDR W9, [X10]
	0x0359D470 ADD W9, W9, 0x3
	0x0359D474 ADD X8, X8, W9, 0x4, SXTW
	0x0359D478 ADD X0, X8, 0x138
	0x0359D47C LDP X8, X9, [X0]
	0x0359D480 MOV X0, X23
	0x0359D484 MOV X1, X21
	0x0359D488 MOV X2, X20
	0x0359D48C MOV X3, X22
	0x0359D490 MOV X4, X31
	0x0359D494 MOV W5, W25
	0x0359D498 MOV X6, X26
	0x0359D49C MOV X7, X24
	0x0359D4A0 STR X9, [X31]
	0x0359D4A4 BLR X8
	0x0359D4A8 CBZ X0, 0x359D588
	0x0359D4AC ADRP X8, 0xB59000
	0x0359D4B0 LDR X8, [X8 + 0x1F8]
	0x0359D4B4 LDR X1, [X8]
	0x0359D4B8 BL 0x269F5D0
	0x0359D4BC ADRP X8, 0xB59000
	0x0359D4C0 LDR X8, [X8 + 0x1F0]
	0x0359D4C4 STR X0, [X31 + 0x8]
	0x0359D4C8 LDR X1, [X8]
	0x0359D4CC ADD X0, X31, 0x8
	0x0359D4D0 BL 0x2677430
	0x0359D4D4 TBZ X0, 0x0, 0x359D514
	0x0359D4D8 ADRP X8, 0xB59000
	0x0359D4DC LDR X8, [X8 + 0x1E0]
	0x0359D4E0 ADD X0, X31, 0x8
	0x0359D4E4 LDR X1, [X8]
	0x0359D4E8 BL 0x2677474
	0x0359D4EC MOVN W8, 0x1
	0x0359D4F0 STR W8, [X19], #0x8
	0x0359D4F4 LDR X0, [X27]
	0x0359D4F8 LDR W8, [X0 + 0xE0]
	0x0359D4FC CBNZ W8, 0x359D504
	0x0359D500 BL 0x1C16DFC
	0x0359D504 MOV X0, X19
	0x0359D508 MOV X1, X31
	0x0359D50C BL 0x32C4864
	0x0359D510 B 0x359D54C
	0x0359D514 STR W31, [X19]
	0x0359D518 LDR X8, [X31 + 0x8]
	0x0359D51C STR X8, [X19 + 0x40]
	0x0359D520 LDR X0, [X27]
	0x0359D524 LDR W8, [X0 + 0xE0]
	0x0359D528 CBNZ W8, 0x359D530
	0x0359D52C BL 0x1C16DFC
	0x0359D530 ADRP X8, 0xB9A000
	0x0359D534 LDR X8, [X8 + 0x210]
	0x0359D538 ADD X0, X19, 0x8
	0x0359D53C LDR X3, [X8]
	0x0359D540 ADD X1, X31, 0x8
	0x0359D544 MOV X2, X19
	0x0359D548 BL 0x2187D98
	0x0359D54C LDP X20, X19, [X31 + 0x50]
	0x0359D550 LDP X22, X21, [X31 + 0x40]
	0x0359D554 LDP X24, X23, [X31 + 0x30]
	0x0359D558 LDP X26, X25, [X31 + 0x20]
	0x0359D55C LDP X30, X27, [X31 + 0x10]
	0x0359D560 ADD X31, X31, 0x60
	0x0359D564 RET
	0x0359D568 BL 0x1C16F20
	0x0359D56C BL 0x1C16F20
	0x0359D570 BL 0x1C16F20
	0x0359D574 BL 0x1C16F28
	0x0359D578 BL 0x1C16F20
	0x0359D57C BL 0x1C16F20
	0x0359D580 BL 0x1C16F20
	0x0359D584 BL 0x1C16F20

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+16], X30
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X20, 0xE43000
	013 Move W8, [X20+4055]
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {69}
	019 Move X0, 0xB9B000
	020 Move X0, [X0+448]
	021 Call 0x1C17CF4
	022 Move X0, 0xB5A000
	023 Move X0, [X0+640]
	024 Call 0x1C17CF4
	025 Move X0, 0xB60000
	026 Move X0, [X0+2264]
	027 Call 0x1C17CF4
	028 Move X0, 0xB58000
	029 Move X0, [X0+2064]
	030 Call 0x1C17CF4
	031 Move X0, 0xB58000
	032 Move X0, [X0+1728]
	033 Call 0x1C17CF4
	034 Move X0, 0xB58000
	035 Move X0, [X0+1744]
	036 Call 0x1C17CF4
	037 Move X0, 0xB9B000
	038 Move X0, [X0+88]
	039 Call 0x1C17CF4
	040 Move X0, 0xB5A000
	041 Move X0, [X0+480]
	042 Call 0x1C17CF4
	043 Move X0, 0xB5A000
	044 Move X0, [X0+496]
	045 Call 0x1C17CF4
	046 Move X0, 0xB5A000
	047 Move X0, [X0+504]
	048 Call 0x1C17CF4
	049 Move X0, 0xB60000
	050 Move X0, [X0+928]
	051 Call 0x1C17CF4
	052 Move X0, 0xB92000
	053 Move X0, [X0+3440]
	054 Call 0x1C17CF4
	055 Move X0, 0xB80000
	056 Move X0, [X0+1232]
	057 Call 0x1C17CF4
	058 Move X0, 0xB92000
	059 Move X0, [X0+2000]
	060 Call 0x1C17CF4
	061 Move X0, 0xB92000
	062 Move X0, [X0+2008]
	063 Call 0x1C17CF4
	064 Move X0, 0xB57000
	065 Move X0, [X0+2440]
	066 Call 0x1C17CF4
	067 Move W8, 1
	068 Move [X20+4055], W8
	069 Move [X31+8], X31
	070 Move X27, 0xB5A000
	071 Move W8, [X19]
	072 Move X27, [X27+640]
	073 Compare W8, 0
	074 JumpIfEqual {186}
	075 Move X24, [X19+32]
	076 Compare X24, 0
	077 JumpIfEqual {269}
	078 Move X0, [X24+32]
	079 Compare X0, 0
	080 JumpIfEqual {270}
	081 Move X8, 0xB92000
	082 Move X9, 0xB57000
	083 Move X8, [X8+3440]
	084 Move X9, [X9+2440]
	085 Move X21, [X8]
	086 Move X20, [X9]
	087 Move X1, X31
	088 Call Uri.get_AbsolutePath, X0
	089 Move X8, 0xB60000
	090 Move X8, [X8+2264]
	091 Move X22, X0
	092 Move X0, [X8]
	093 Move W1, 1
	094 Call 0x1C17D6C
	095 Move X1, X0
	096 Compare X1, 0
	097 JumpIfEqual {271}
	098 Move W8, [X1+24]
	099 Compare W8, 0
	100 JumpIfEqual {272}
	101 Move W8, 47
	102 NotImplemented "Instruction STRH not yet implemented."
	103 Compare X22, 0
	104 JumpIfEqual {273}
	105 Move X0, X22
	106 Move X2, X31
	107 Call String.TrimEnd, X0, X1
	108 Move X1, X21
	109 Move X2, X31
	110 Call String.Concat, X0, X1
	111 Move X8, 0xB60000
	112 Move X8, [X8+928]
	113 Move X22, X0
	114 Move X23, [X24+32]
	115 Move X0, [X8]
	116 Call 0x1C17F10
	117 Move X21, X0
	118 Move X1, X23
	119 Move X2, X31
	120 Call UriBuilder..ctor, X0, X1
	121 Compare X21, 0
	122 JumpIfEqual {274}
	123 Move X0, X21
	124 Move X1, X22
	125 Move X2, X31
	126 Call UriBuilder.set_Path, X0, X1
	127 Move X0, X21
	128 Move X1, X20
	129 Move X2, X31
	130 Call UriBuilder.set_Query, X0, X1
	131 Move X0, X21
	132 Move X1, X31
	133 Call UriBuilder.get_Uri, X0
	134 Move X8, 0xB80000
	135 Move X9, 0xB58000
	136 Move X8, [X8+1232]
	137 Move X9, [X9+1744]
	138 Move X20, X0
	139 Move X21, [X8]
	140 Move X0, [X9]
	141 Call 0x1C17F10
	142 Move X8, 0xB58000
	143 Move X8, [X8+1728]
	144 Move X22, X0
	145 Move X1, [X8]
	146 Call Dictionary`2<Object, Object>..ctor, X0
	147 Move X8, 0xB92000
	148 Move X8, [X8+2008]
	149 Move X1, [X19+40]
	150 Move X0, [X8]
	151 Move X2, X31
	152 Call String.Concat, X0, X1
	153 Compare X22, 0
	154 JumpIfEqual {275}
	155 Move X8, 0xB92000
	156 Move X8, [X8+2000]
	157 Move X9, 0xB58000
	158 Move X9, [X9+2064]
	159 Move X2, X0
	160 Move X1, [X8]
	161 Move X3, [X9]
	162 Move X0, X22
	163 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	164 Move X23, [X24+16]
	165 Compare X23, 0
	166 JumpIfEqual {276}
	167 Move X10, 0xB9B000
	168 Move X10, [X10+88]
	169 Move X8, [X23]
	170 Move W25, [X24+24]
	171 Move X26, [X19+48]
	172 Move X24, [X19+56]
	173 Move X1, [X10]
	174 NotImplemented "Instruction LDRH not yet implemented."
	175 Compare X9, 0
	176 JumpIfEqual {183}
	177 Move X10, [X8+176]
	178 Add X10, X10, 8
	179 NotImplemented "Instruction LDUR not yet implemented."
	180 NotImplemented "Instruction CMP not yet implemented."
	181 Subtract X9, X9, 1
	182 Add X10, X10, 16
	183 Move W2, 3
	184 Move X0, X23
	185 Call 0x1C5D788
	186 Move X8, [X19+64]
	187 Move TEMP, 0
	188 Not TEMP
	189 Move W9, TEMP
	190 Move [X31+8], X8
	191 Move [X19+64], X31
	192 Move [X19], W9
	193 Move W9, [X10]
	194 Add W9, W9, 3
	195 Add X8, X8, W9
	196 Add X0, X8, 312
	197 Move X8, [X0]
	198 Move X9, [X0+8]
	199 Move X0, X23
	200 Move X1, X21
	201 Move X2, X20
	202 Move X3, X22
	203 Move X4, X31
	204 Move W5, W25
	205 Move X6, X26
	206 Move X7, X24
	207 Move [X31], X9
	208 NotImplemented "Instruction BLR not yet implemented."
	209 Compare X0, 0
	210 JumpIfEqual {277}
	211 Move X8, 0xB5A000
	212 Move X8, [X8+504]
	213 Move X1, [X8]
	214 Call Task`1<Object>.GetAwaiter, X0
	215 Move X8, 0xB5A000
	216 Move X8, [X8+496]
	217 Move [X31+8], X0
	218 Move X1, [X8]
	219 Add X0, X31, 8
	220 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	221 Move TEMP, X0
	222 And TEMP, TEMP, 1
	223 Compare TEMP, 1
	224 JumpIfNotEqual {242}
	225 Move X8, 0xB5A000
	226 Move X8, [X8+480]
	227 Add X0, X31, 8
	228 Move X1, [X8]
	229 Call TaskAwaiter`1<Object>.GetResult, X0
	230 Move TEMP, 1
	231 Not TEMP
	232 Move W8, TEMP
	233 Move [X19+8], W8
	234 Move X0, [X27]
	235 Move W8, [X0+224]
	236 Compare W8, 0
	237 JumpIfNotEqual {239}
	238 Call 0x1C17DFC
	239 Move X0, X19
	240 Move X1, X31
	241 Call AsyncTaskMethodBuilder.SetResult, X0
	242 Move [X19], W31
	243 Move X8, [X31+8]
	244 Move [X19+64], X8
	245 Move X0, [X27]
	246 Move W8, [X0+224]
	247 Compare W8, 0
	248 JumpIfNotEqual {250}
	249 Call 0x1C17DFC
	250 Move X8, 0xB9B000
	251 Move X8, [X8+448]
	252 Add X0, X19, 8
	253 Move X3, [X8]
	254 Add X1, X31, 8
	255 Move X2, X19
	256 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	257 Move X20, [X31+80]
	258 Move X19, [X31+88]
	259 Move X22, [X31+64]
	260 Move X21, [X31+72]
	261 Move X24, [X31+48]
	262 Move X23, [X31+56]
	263 Move X26, [X31+32]
	264 Move X25, [X31+40]
	265 Move X30, [X31+16]
	266 Move X27, [X31+24]
	267 Add X31, X31, 96
	268 Return 
	269 Call 0x1C17F20
	270 Call 0x1C17F20
	271 Call 0x1C17F20
	272 Call 0x1C17F28
	273 Call 0x1C17F20
	274 Call 0x1C17F20
	275 Call 0x1C17F20
	276 Call 0x1C17F20
	277 Call 0x1C17F20
	278 Move X20, X0
	279 NotImplemented "Instruction CMP not yet implemented."
	280 Move X0, X20
	281 Call 0x3EB2AD0
	282 Move X20, X0
	283 Move X0, 0xB57000
	284 Move X0, [X0+2000]
	285 Call 0x1C17D08
	286 Move X8, [X20]
	287 Move X1, [X8]
	288 Call 0x1C18270
	289 Move TEMP, X0
	290 And TEMP, TEMP, 1
	291 Compare TEMP, 1
	292 JumpIfNotEqual {310}
	293 Move X20, [X20]
	294 Call 0x3EB2AE0
	295 Move TEMP, 1
	296 Not TEMP
	297 Move W8, TEMP
	298 Move [X19+8], W8
	299 Move X0, 0xB5A000
	300 Move X0, [X0+640]
	301 Call 0x1C17D08
	302 Move W8, [X0+224]
	303 Compare W8, 0
	304 JumpIfNotEqual {306}
	305 Call 0x1C17DFC
	306 Move X0, X19
	307 Move X1, X20
	308 Move X2, X31
	309 Call AsyncTaskMethodBuilder.SetException, X0, X1
	310 Move W0, 8
	311 Call 0x3EB2AF0
	312 Move X8, [X20]
	313 Move [X0], X8
	314 Move X1, 0x918000
	315 Add X1, X1, 3672
	316 Move X2, X31
	317 Call 0x3EB2B00
	318 Move X20, X0
	319 Call 0x3EB2AE0
	320 Move X0, X20
	321 Call 0x1D2D690
	322 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x0359D588 BL 0x1C16F20
	0x0359D58C B 0x359D5D8
	0x0359D590 B 0x359D5D8
	0x0359D594 B 0x359D5D8
	0x0359D598 B 0x359D5D8
	0x0359D59C B 0x359D5D8
	0x0359D5A0 B 0x359D5D8
	0x0359D5A4 B 0x359D5D8
	0x0359D5A8 B 0x359D5D8
	0x0359D5AC B 0x359D5D8
	0x0359D5B0 B 0x359D5D8
	0x0359D5B4 B 0x359D5D8
	0x0359D5B8 B 0x359D5D8
	0x0359D5BC B 0x359D5D8
	0x0359D5C0 B 0x359D5D8
	0x0359D5C4 B 0x359D5D8
	0x0359D5C8 B 0x359D5D8
	0x0359D5CC B 0x359D5D8
	0x0359D5D0 B 0x359D5D8
	0x0359D5D4 B 0x359D5D8
	0x0359D5D8 MOV X20, X0
	0x0359D5DC CMP W1, 0x1
	0x0359D5E0 B.NE 0x359D670
	0x0359D5E4 MOV X0, X20
	0x0359D5E8 BL 0x3EB1AD0
	0x0359D5EC MOV X20, X0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xE43000
	007 Move X22, 0xB5A000
	008 Move W8, [X21+4056]
	009 Move X22, [X22+640]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xB5A000
	017 Move X0, [X0+640]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+4056], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Add X0, X20, 8
	027 Move X1, X19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X2, X31
	033 Move X30, [X31+48]
	034 Call AsyncTaskMethodBuilder.SetStateMachine, X0, X1
	035 Return 

