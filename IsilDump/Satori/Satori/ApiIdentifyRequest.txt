Type: Satori.ApiIdentifyRequest

Method: System.Collections.Generic.IDictionary`2<System.String, System.String> get_Custom()

Disassembly:
	0x03594618 ADRP X20, 0xB8C000
	0x0359461C ADRP X26, 0xB8C000
	0x03594620 ADRP X25, 0xB6A000
	0x03594624 LDR X27, [X27 + 0xE18]
	0x03594628 LDR X28, [X28 + 0x198]
	0x0359462C LDR X29, [X29 + 0xAC8]
	0x03594630 LDR X20, [X20 + 0x360]
	0x03594634 LDR X26, [X26 + 0xFB8]
	0x03594638 LDR X25, [X25 + 0x6D8]
	0x0359463C LDP X8, X1, [X0]
	0x03594640 MOV X0, X21
	0x03594644 BLR X8
	0x03594648 MOV X21, X0
	0x0359464C LDR X0, [X31 + 0x8]
	0x03594650 CBZ X21, 0x35948F4
	0x03594654 LDR X8, [X21]
	0x03594658 LDR X1, [X27]
	0x0359465C MOV X22, X0
	0x03594660 LDRH W9, [X8 + 0x12E]
	0x03594664 CBZ X9, 0x3594688
	0x03594668 LDR X10, [X8 + 0xB0]
	0x0359466C ADD X10, X10, 0x8
	0x03594670 LDUR X11, [X10 - 0x8]
	0x03594674 CMP X11, X1
	0x03594678 B.EQ 0x3594698
	0x0359467C SUBS X9, X9, 0x1
	0x03594680 ADD X10, X10, 0x10
	0x03594684 B.NE 0x3594670
	0x03594688 MOV X0, X21

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xE4C000
	005 Move W8, [X20+4000]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0xB61000
	012 Move X0, [X0+1728]
	013 Call 0x1C17CF4
	014 Move X0, 0xB61000
	015 Move X0, [X0+1744]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+4000], W8
	019 Move X19, [X19+16]
	020 Compare X19, 0
	021 JumpIfNotEqual {31}
	022 Move X8, 0xB61000
	023 Move X8, [X8+1744]
	024 Move X0, [X8]
	025 Call 0x1C17F10
	026 Move X8, 0xB61000
	027 Move X8, [X8+1728]
	028 Move X19, X0
	029 Move X1, [X8]
	030 Call Dictionary`2<Object, Object>..ctor, X0
	031 Move X0, X19
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X30, [X31+32]
	035 Return X0

Method: System.Collections.Generic.Dictionary`2<System.String, System.String> get__custom()

Disassembly:
	0x0359468C MOV W2, W31
	0x03594690 BL 0x1C5C788

ISIL:
	001 Move X0, [X0+16]
	002 Return X0

Method: System.Void set__custom(System.Collections.Generic.Dictionary`2<System.String, System.String> value)

Disassembly:
	0x03594694 B 0x35946A4
	0x03594698 LDRSW X9, [X10]

ISIL:
	001 Move [X0+16], X1
	002 Return 

Method: System.Collections.Generic.IDictionary`2<System.String, System.String> get_Default()

Disassembly:
	0x0359469C ADD X8, X8, X9, 0x4, LSL
	0x035946A0 ADD X0, X8, 0x138
	0x035946A4 LDP X8, X1, [X0]
	0x035946A8 MOV X0, X21
	0x035946AC BLR X8
	0x035946B0 TBZ X0, 0x0, 0x3594788
	0x035946B4 LDR X8, [X21]
	0x035946B8 LDR X1, [X28]
	0x035946BC LDRH W9, [X8 + 0x12E]
	0x035946C0 CBZ X9, 0x35946E4
	0x035946C4 LDR X10, [X8 + 0xB0]
	0x035946C8 ADD X10, X10, 0x8
	0x035946CC LDUR X11, [X10 - 0x8]
	0x035946D0 CMP X11, X1
	0x035946D4 B.EQ 0x35946F4
	0x035946D8 SUBS X9, X9, 0x1
	0x035946DC ADD X10, X10, 0x10
	0x035946E0 B.NE 0x35946CC
	0x035946E4 MOV X0, X21
	0x035946E8 MOV W2, W31
	0x035946EC BL 0x1C5C788
	0x035946F0 B 0x3594700
	0x035946F4 LDRSW X9, [X10]
	0x035946F8 ADD X8, X8, X9, 0x4, LSL
	0x035946FC ADD X0, X8, 0x138
	0x03594700 LDP X8, X1, [X0]
	0x03594704 MOV X0, X21
	0x03594708 BLR X8
	0x0359470C MOV X24, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xE4C000
	005 Move W8, [X20+4001]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0xB61000
	012 Move X0, [X0+1728]
	013 Call 0x1C17CF4
	014 Move X0, 0xB61000
	015 Move X0, [X0+1744]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+4001], W8
	019 Move X19, [X19+24]
	020 Compare X19, 0
	021 JumpIfNotEqual {31}
	022 Move X8, 0xB61000
	023 Move X8, [X8+1744]
	024 Move X0, [X8]
	025 Call 0x1C17F10
	026 Move X8, 0xB61000
	027 Move X8, [X8+1728]
	028 Move X19, X0
	029 Move X1, [X8]
	030 Call Dictionary`2<Object, Object>..ctor, X0
	031 Move X0, X19
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X30, [X31+32]
	035 Return X0

Method: System.Collections.Generic.Dictionary`2<System.String, System.String> get__default()

Disassembly:
	0x03594710 LDR X0, [X29]
	0x03594714 MOV X23, X1

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void set__default(System.Collections.Generic.Dictionary`2<System.String, System.String> value)

Disassembly:
	0x03594718 MOVZ W1, 0x5
	0x0359471C BL 0x1C16D6C

ISIL:
	001 Move [X0+24], X1
	002 Return 

Method: System.String get_Id()

Disassembly:
	0x03594720 CBZ X0, 0x35948FC
	0x03594724 LDR W8, [X0 + 0x18]

ISIL:
	001 Move X0, [X0+32]
	002 Return X0

Method: System.Void set_Id(System.String value)

Disassembly:
	0x03594728 CBZ W8, 0x3594904
	0x0359472C LDR X9, [X20]

ISIL:
	001 Move [X0+32], X1
	002 Return 

Method: System.String ToString()

Disassembly:
	0x03594730 CMP W8, 0x1
	0x03594734 STR X9, [X0 + 0x20]
	0x03594738 B.EQ 0x35948F8
	0x0359473C CMP W8, 0x2
	0x03594740 STR X24, [X0 + 0x28]
	0x03594744 B.LS 0x3594908
	0x03594748 LDR X9, [X26]
	0x0359474C CMP W8, 0x3
	0x03594750 STR X9, [X0 + 0x30]
	0x03594754 B.EQ 0x359490C
	0x03594758 CMP W8, 0x4
	0x0359475C STR X23, [X0 + 0x38]
	0x03594760 B.LS 0x3594900
	0x03594764 LDR X8, [X25]
	0x03594768 STR X8, [X0 + 0x40]
	0x0359476C MOV X1, X31
	0x03594770 BL 0x32278CC
	0x03594774 MOV X1, X0
	0x03594778 MOV X0, X22
	0x0359477C MOV X2, X31
	0x03594780 BL 0x321B938
	0x03594784 B 0x3594650
	0x03594788 ADRP X20, 0xB5F000
	0x0359478C LDR X20, [X20 + 0x838]
	0x03594790 MOV X23, X31
	0x03594794 CBZ X21, 0x35947F8
	0x03594798 LDR X8, [X21]
	0x0359479C ADRP X10, 0xB5F000
	0x035947A0 LDRH W9, [X8 + 0x12E]
	0x035947A4 LDR X10, [X10 + 0xE00]
	0x035947A8 LDR X1, [X10]
	0x035947AC CBZ X9, 0x35947D0
	0x035947B0 LDR X10, [X8 + 0xB0]
	0x035947B4 ADD X10, X10, 0x8
	0x035947B8 LDUR X11, [X10 - 0x8]
	0x035947BC CMP X11, X1
	0x035947C0 B.EQ 0x35947E0
	0x035947C4 SUBS X9, X9, 0x1
	0x035947C8 ADD X10, X10, 0x10
	0x035947CC B.NE 0x35947B8
	0x035947D0 MOV X0, X21
	0x035947D4 MOV W2, W31
	0x035947D8 BL 0x1C5C788
	0x035947DC B 0x35947EC
	0x035947E0 LDRSW X9, [X10]
	0x035947E4 ADD X8, X8, X9, 0x4, LSL
	0x035947E8 ADD X0, X8, 0x138
	0x035947EC LDP X8, X1, [X0]
	0x035947F0 MOV X0, X21
	0x035947F4 BLR X8
	0x035947F8 CBNZ X23, 0x3594914
	0x035947FC ADRP X8, 0xBA2000
	0x03594800 LDR X8, [X8 + 0xE30]
	0x03594804 MOV X1, X22
	0x03594808 MOV X3, X31
	0x0359480C LDR X0, [X8]
	0x03594810 ADRP X8, 0xB5F000
	0x03594814 LDR X8, [X8 + 0x848]
	0x03594818 LDR X2, [X8]
	0x0359481C BL 0x32274B8
	0x03594820 MOV X1, X0
	0x03594824 LDR X0, [X31]
	0x03594828 MOV X2, X31
	0x0359482C BL 0x321B938
	0x03594830 ADRP X8, 0xBA2000
	0x03594834 LDR X2, [X19 + 0x38]
	0x03594838 LDR X8, [X8 + 0xE18]
	0x0359483C LDR X3, [X20]
	0x03594840 MOV X4, X31
	0x03594844 LDR X1, [X8]
	0x03594848 BL 0x32277C4
	0x0359484C ADRP X8, 0xBA2000
	0x03594850 LDR X2, [X19 + 0x40]
	0x03594854 LDR X8, [X8 + 0xEF8]
	0x03594858 LDR X3, [X20]
	0x0359485C MOV X4, X31
	0x03594860 LDR X1, [X8]
	0x03594864 BL 0x32277C4
	0x03594868 ADRP X8, 0xBA2000
	0x0359486C LDR X2, [X19 + 0x48]
	0x03594870 LDR X8, [X8 + 0xEF0]
	0x03594874 LDR X3, [X20]
	0x03594878 MOV X4, X31
	0x0359487C LDR X1, [X8]
	0x03594880 BL 0x32277C4
	0x03594884 ADRP X8, 0xBA2000
	0x03594888 LDR X2, [X19 + 0x50]
	0x0359488C LDR X8, [X8 + 0xF00]
	0x03594890 LDR X3, [X20]
	0x03594894 MOV X4, X31
	0x03594898 LDR X1, [X8]
	0x0359489C BL 0x32277C4
	0x035948A0 ADRP X8, 0xB9A000
	0x035948A4 LDR X2, [X19 + 0x58]
	0x035948A8 LDR X8, [X8 + 0x100]
	0x035948AC LDR X3, [X20]
	0x035948B0 MOV X4, X31
	0x035948B4 LDR X1, [X8]
	0x035948B8 BL 0x32277C4
	0x035948BC ADRP X8, 0xB99000
	0x035948C0 LDR X2, [X19 + 0x60]
	0x035948C4 LDR X8, [X8 + 0xDE8]
	0x035948C8 LDR X3, [X20]
	0x035948CC LDP X20, X19, [X31 + 0x60]
	0x035948D0 LDP X22, X21, [X31 + 0x50]
	0x035948D4 LDR X1, [X8]
	0x035948D8 LDP X24, X23, [X31 + 0x40]
	0x035948DC LDP X26, X25, [X31 + 0x30]
	0x035948E0 LDP X28, X27, [X31 + 0x20]
	0x035948E4 LDP X29, X30, [X31 + 0x10]
	0x035948E8 MOV X4, X31
	0x035948EC ADD X31, X31, 0x70
	0x035948F0 B 0x32277C4
	0x035948F4 BL 0x1C16F20
	0x035948F8 BL 0x1C16F28
	0x035948FC BL 0x1C16F20
	0x03594900 BL 0x1C16F28
	0x03594904 BL 0x1C16F28
	0x03594908 BL 0x1C16F28
	0x0359490C BL 0x1C16F28
	0x03594910 BL 0x1C16F20
	0x03594914 MOV X0, X23
	0x03594918 BL 0x1C16F18
	0x0359491C B 0x3594948
	0x03594920 B 0x3594948
	0x03594924 B 0x3594948
	0x03594928 B 0x3594948
	0x0359492C B 0x3594948
	0x03594930 B 0x3594948
	0x03594934 B 0x3594948
	0x03594938 LDR X22, [X31 + 0x8]
	0x0359493C B 0x3594948
	0x03594940 B 0x3594948
	0x03594944 B 0x3594948
	0x03594948 ADRP X20, 0xB5F000
	0x0359494C LDR X20, [X20 + 0x838]
	0x03594950 CMP W1, 0x1
	0x03594954 B.NE 0x3594968
	0x03594958 BL 0x3EB1AD0
	0x0359495C LDR X23, [X0]
	0x03594960 BL 0x3EB1AE0
	0x03594964 B 0x3594794
	0x03594968 MOV X19, X0
	0x0359496C MOV X23, X31
	0x03594970 B 0x3594978
	0x03594974 MOV X19, X0
	0x03594978 CBZ X21, 0x35949DC
	0x0359497C LDR X8, [X21]
	0x03594980 ADRP X10, 0xB5F000
	0x03594984 LDRH W9, [X8 + 0x12E]
	0x03594988 LDR X10, [X10 + 0xE00]
	0x0359498C LDR X1, [X10]
	0x03594990 CBZ X9, 0x35949B4
	0x03594994 LDR X10, [X8 + 0xB0]
	0x03594998 ADD X10, X10, 0x8
	0x0359499C LDUR X11, [X10 - 0x8]
	0x035949A0 CMP X11, X1
	0x035949A4 B.EQ 0x35949C4
	0x035949A8 SUBS X9, X9, 0x1
	0x035949AC ADD X10, X10, 0x10
	0x035949B0 B.NE 0x359499C
	0x035949B4 MOV X0, X21
	0x035949B8 MOV W2, W31
	0x035949BC BL 0x1C5C788
	0x035949C0 B 0x35949D0
	0x035949C4 LDRSW X9, [X10]
	0x035949C8 ADD X8, X8, X9, 0x4, LSL
	0x035949CC ADD X0, X8, 0x138
	0x035949D0 LDP X8, X1, [X0]
	0x035949D4 MOV X0, X21
	0x035949D8 BLR X8
	0x035949DC CBNZ X23, 0x35949E8
	0x035949E0 MOV X0, X19
	0x035949E4 BL 0x1D2C690
	0x035949E8 MOV X0, X23
	0x035949EC BL 0x1C16F18
	0x035949F0 BL 0x1990590
	0x035949F4 MOV X1, X31
	0x035949F8 B 0x33BDD8C
	0x035949FC STR X30, [X31 - 0x20]!
	0x03594A00 STP X20, X19, [X31 + 0x10]
	0x03594A04 ADRP X20, 0xE4B000
	0x03594A08 LDRB W8, [X20 + 0xFA8]
	0x03594A0C MOV X19, X0
	0x03594A10 TBNZ X8, 0x0, 0x3594A34
	0x03594A14 ADRP X0, 0xB60000
	0x03594A18 LDR X0, [X0 + 0x6C0]
	0x03594A1C BL 0x1C16CF4
	0x03594A20 ADRP X0, 0xB60000
	0x03594A24 LDR X0, [X0 + 0x6D0]
	0x03594A28 BL 0x1C16CF4
	0x03594A2C MOVZ W8, 0x1
	0x03594A30 STRB W8, [X20 + 0xFA8]
	0x03594A34 LDR X19, [X19 + 0x10]
	0x03594A38 CBNZ X19, 0x3594A60
	0x03594A3C ADRP X8, 0xB60000
	0x03594A40 LDR X8, [X8 + 0x6D0]
	0x03594A44 LDR X0, [X8]
	0x03594A48 BL 0x1C16F10
	0x03594A4C ADRP X8, 0xB60000
	0x03594A50 LDR X8, [X8 + 0x6C0]
	0x03594A54 MOV X19, X0
	0x03594A58 LDR X1, [X8]
	0x03594A5C BL 0x2AA4804
	0x03594A60 MOV X0, X19
	0x03594A64 LDP X20, X19, [X31 + 0x10]
	0x03594A68 LDR X30, [X31], #0x20
	0x03594A6C RET
	0x03594A70 LDR X0, [X0 + 0x10]
	0x03594A74 RET
	0x03594A78 STR X1, [X0 + 0x10]
	0x03594A7C RET
	0x03594A80 STR X30, [X31 - 0x20]!
	0x03594A84 STP X20, X19, [X31 + 0x10]
	0x03594A88 ADRP X20, 0xE4B000
	0x03594A8C LDRB W8, [X20 + 0xFA9]
	0x03594A90 MOV X19, X0
	0x03594A94 TBNZ X8, 0x0, 0x3594AB8
	0x03594A98 ADRP X0, 0xB60000
	0x03594A9C LDR X0, [X0 + 0x6C0]
	0x03594AA0 BL 0x1C16CF4
	0x03594AA4 ADRP X0, 0xB60000
	0x03594AA8 LDR X0, [X0 + 0x6D0]
	0x03594AAC BL 0x1C16CF4
	0x03594AB0 MOVZ W8, 0x1
	0x03594AB4 STRB W8, [X20 + 0xFA9]
	0x03594AB8 LDR X19, [X19 + 0x18]
	0x03594ABC CBNZ X19, 0x3594AE4
	0x03594AC0 ADRP X8, 0xB60000
	0x03594AC4 LDR X8, [X8 + 0x6D0]
	0x03594AC8 LDR X0, [X8]
	0x03594ACC BL 0x1C16F10
	0x03594AD0 ADRP X8, 0xB60000
	0x03594AD4 LDR X8, [X8 + 0x6C0]
	0x03594AD8 MOV X19, X0
	0x03594ADC LDR X1, [X8]
	0x03594AE0 BL 0x2AA4804
	0x03594AE4 MOV X0, X19
	0x03594AE8 LDP X20, X19, [X31 + 0x10]
	0x03594AEC LDR X30, [X31], #0x20
	0x03594AF0 RET
	0x03594AF4 LDR X0, [X0 + 0x18]
	0x03594AF8 RET
	0x03594AFC STR X1, [X0 + 0x18]
	0x03594B00 RET
	0x03594B04 STR X30, [X31 - 0x20]!
	0x03594B08 STP X20, X19, [X31 + 0x10]
	0x03594B0C ADRP X20, 0xE4B000
	0x03594B10 LDRB W8, [X20 + 0xFAA]
	0x03594B14 MOV X19, X0
	0x03594B18 TBNZ X8, 0x0, 0x3594B3C
	0x03594B1C ADRP X0, 0xB60000
	0x03594B20 LDR X0, [X0 + 0x6C0]
	0x03594B24 BL 0x1C16CF4
	0x03594B28 ADRP X0, 0xB60000
	0x03594B2C LDR X0, [X0 + 0x6D0]
	0x03594B30 BL 0x1C16CF4
	0x03594B34 MOVZ W8, 0x1
	0x03594B38 STRB W8, [X20 + 0xFAA]
	0x03594B3C LDR X19, [X19 + 0x20]
	0x03594B40 CBNZ X19, 0x3594B68
	0x03594B44 ADRP X8, 0xB60000
	0x03594B48 LDR X8, [X8 + 0x6D0]
	0x03594B4C LDR X0, [X8]
	0x03594B50 BL 0x1C16F10
	0x03594B54 ADRP X8, 0xB60000
	0x03594B58 LDR X8, [X8 + 0x6C0]
	0x03594B5C MOV X19, X0
	0x03594B60 LDR X1, [X8]
	0x03594B64 BL 0x2AA4804
	0x03594B68 MOV X0, X19
	0x03594B6C LDP X20, X19, [X31 + 0x10]
	0x03594B70 LDR X30, [X31], #0x20
	0x03594B74 RET
	0x03594B78 LDR X0, [X0 + 0x20]
	0x03594B7C RET
	0x03594B80 STR X1, [X0 + 0x20]
	0x03594B84 RET
	0x03594B88 SUB X31, X31, 0x70
	0x03594B8C STP X29, X30, [X31 + 0x10]
	0x03594B90 STP X28, X27, [X31 + 0x20]
	0x03594B94 STP X26, X25, [X31 + 0x30]
	0x03594B98 STP X24, X23, [X31 + 0x40]
	0x03594B9C STP X22, X21, [X31 + 0x50]
	0x03594BA0 STP X20, X19, [X31 + 0x60]
	0x03594BA4 ADRP X19, 0xE4B000
	0x03594BA8 ADRP X21, 0xB5F000
	0x03594BAC LDRB W8, [X19 + 0xFAB]
	0x03594BB0 LDR X21, [X21 + 0x988]
	0x03594BB4 MOV X20, X0
	0x03594BB8 TBNZ X8, 0x0, 0x3594C78
	0x03594BBC ADRP X0, 0xB5F000
	0x03594BC0 LDR X0, [X0 + 0xE00]
	0x03594BC4 BL 0x1C16CF4
	0x03594BC8 ADRP X0, 0xB62000
	0x03594BCC LDR X0, [X0 + 0x190]
	0x03594BD0 BL 0x1C16CF4
	0x03594BD4 ADRP X0, 0xB62000
	0x03594BD8 LDR X0, [X0 + 0x198]
	0x03594BDC BL 0x1C16CF4
	0x03594BE0 ADRP X0, 0xB5F000
	0x03594BE4 LDR X0, [X0 + 0xE18]
	0x03594BE8 BL 0x1C16CF4
	0x03594BEC ADRP X0, 0xB62000
	0x03594BF0 LDR X0, [X0 + 0x1B0]
	0x03594BF4 BL 0x1C16CF4
	0x03594BF8 ADRP X0, 0xB62000
	0x03594BFC LDR X0, [X0 + 0x1B8]
	0x03594C00 BL 0x1C16CF4
	0x03594C04 ADRP X0, 0xB5F000
	0x03594C08 LDR X0, [X0 + 0xAC8]
	0x03594C0C BL 0x1C16CF4
	0x03594C10 ADRP X0, 0xB8C000
	0x03594C14 LDR X0, [X0 + 0x360]
	0x03594C18 BL 0x1C16CF4
	0x03594C1C ADRP X0, 0xB8C000
	0x03594C20 LDR X0, [X0 + 0xFB8]
	0x03594C24 BL 0x1C16CF4
	0x03594C28 ADRP X0, 0xB6A000
	0x03594C2C LDR X0, [X0 + 0x6D8]
	0x03594C30 BL 0x1C16CF4
	0x03594C34 ADRP X0, 0xBA2000
	0x03594C38 LDR X0, [X0 + 0xE20]
	0x03594C3C BL 0x1C16CF4
	0x03594C40 ADRP X0, 0xBA2000
	0x03594C44 LDR X0, [X0 + 0xE28]
	0x03594C48 BL 0x1C16CF4
	0x03594C4C ADRP X0, 0xB5F000
	0x03594C50 LDR X0, [X0 + 0x988]
	0x03594C54 BL 0x1C16CF4
	0x03594C58 ADRP X0, 0xBA2000
	0x03594C5C LDR X0, [X0 + 0xF08]
	0x03594C60 BL 0x1C16CF4
	0x03594C64 ADRP X0, 0xB5F000
	0x03594C68 LDR X0, [X0 + 0x848]
	0x03594C6C BL 0x1C16CF4
	0x03594C70 MOVZ W8, 0x1
	0x03594C74 STRB W8, [X19 + 0xFAB]
	0x03594C78 LDR X19, [X21]
	0x03594C7C MOV X0, X20
	0x03594C80 BL 0x35949FC
	0x03594C84 CBZ X0, 0x3595470
	0x03594C88 ADRP X10, 0xB62000
	0x03594C8C LDR X8, [X0]
	0x03594C90 LDR X10, [X10 + 0x190]
	0x03594C94 MOV X21, X0
	0x03594C98 STR X20, [X31 + 0x8]
	0x03594C9C LDRH W9, [X8 + 0x12E]
	0x03594CA0 LDR X1, [X10]
	0x03594CA4 CBZ X9, 0x3594CC8
	0x03594CA8 LDR X10, [X8 + 0xB0]
	0x03594CAC ADD X10, X10, 0x8
	0x03594CB0 LDUR X11, [X10 - 0x8]
	0x03594CB4 CMP X11, X1
	0x03594CB8 B.EQ 0x3594CD8
	0x03594CBC SUBS X9, X9, 0x1
	0x03594CC0 ADD X10, X10, 0x10
	0x03594CC4 B.NE 0x3594CB0
	0x03594CC8 MOV X0, X21
	0x03594CCC MOV W2, W31
	0x03594CD0 BL 0x1C5C788
	0x03594CD4 B 0x3594CE4
	0x03594CD8 LDRSW X9, [X10]
	0x03594CDC ADD X8, X8, X9, 0x4, LSL
	0x03594CE0 ADD X0, X8, 0x138
	0x03594CE4 ADRP X27, 0xB5F000
	0x03594CE8 ADRP X28, 0xB62000
	0x03594CEC ADRP X29, 0xB5F000
	0x03594CF0 ADRP X25, 0xB8C000
	0x03594CF4 ADRP X26, 0xB8C000
	0x03594CF8 ADRP X20, 0xB6A000
	0x03594CFC LDR X27, [X27 + 0xE18]
	0x03594D00 LDR X28, [X28 + 0x198]
	0x03594D04 LDR X29, [X29 + 0xAC8]
	0x03594D08 LDR X25, [X25 + 0x360]
	0x03594D0C LDR X26, [X26 + 0xFB8]
	0x03594D10 LDR X20, [X20 + 0x6D8]
	0x03594D14 LDP X8, X1, [X0]
	0x03594D18 MOV X0, X21
	0x03594D1C BLR X8
	0x03594D20 MOV X21, X0
	0x03594D24 MOV X0, X19
	0x03594D28 CBZ X21, 0x359541C
	0x03594D2C LDR X8, [X21]
	0x03594D30 LDR X1, [X27]
	0x03594D34 MOV X22, X0
	0x03594D38 LDRH W9, [X8 + 0x12E]
	0x03594D3C CBZ X9, 0x3594D60
	0x03594D40 LDR X10, [X8 + 0xB0]
	0x03594D44 ADD X10, X10, 0x8
	0x03594D48 LDUR X11, [X10 - 0x8]
	0x03594D4C CMP X11, X1
	0x03594D50 B.EQ 0x3594D70
	0x03594D54 SUBS X9, X9, 0x1
	0x03594D58 ADD X10, X10, 0x10
	0x03594D5C B.NE 0x3594D48
	0x03594D60 MOV X0, X21
	0x03594D64 MOV W2, W31
	0x03594D68 BL 0x1C5C788
	0x03594D6C B 0x3594D7C
	0x03594D70 LDRSW X9, [X10]
	0x03594D74 ADD X8, X8, X9, 0x4, LSL
	0x03594D78 ADD X0, X8, 0x138
	0x03594D7C LDP X8, X1, [X0]
	0x03594D80 MOV X0, X21
	0x03594D84 BLR X8
	0x03594D88 TBZ X0, 0x0, 0x3594E60
	0x03594D8C LDR X8, [X21]
	0x03594D90 LDR X1, [X28]
	0x03594D94 LDRH W9, [X8 + 0x12E]
	0x03594D98 CBZ X9, 0x3594DBC
	0x03594D9C LDR X10, [X8 + 0xB0]
	0x03594DA0 ADD X10, X10, 0x8
	0x03594DA4 LDUR X11, [X10 - 0x8]
	0x03594DA8 CMP X11, X1
	0x03594DAC B.EQ 0x3594DCC
	0x03594DB0 SUBS X9, X9, 0x1
	0x03594DB4 ADD X10, X10, 0x10
	0x03594DB8 B.NE 0x3594DA4
	0x03594DBC MOV X0, X21
	0x03594DC0 MOV W2, W31
	0x03594DC4 BL 0x1C5C788
	0x03594DC8 B 0x3594DD8
	0x03594DCC LDRSW X9, [X10]
	0x03594DD0 ADD X8, X8, X9, 0x4, LSL
	0x03594DD4 ADD X0, X8, 0x138
	0x03594DD8 LDP X8, X1, [X0]
	0x03594DDC MOV X0, X21
	0x03594DE0 BLR X8
	0x03594DE4 MOV X24, X0
	0x03594DE8 LDR X0, [X29]
	0x03594DEC MOV X23, X1
	0x03594DF0 MOVZ W1, 0x5
	0x03594DF4 BL 0x1C16D6C
	0x03594DF8 CBZ X0, 0x3595428
	0x03594DFC LDR W8, [X0 + 0x18]
	0x03594E00 CBZ W8, 0x3595430
	0x03594E04 LDR X9, [X25]
	0x03594E08 CMP W8, 0x1
	0x03594E0C STR X9, [X0 + 0x20]
	0x03594E10 B.EQ 0x3595424
	0x03594E14 CMP W8, 0x2
	0x03594E18 STR X24, [X0 + 0x28]
	0x03594E1C B.LS 0x3595434
	0x03594E20 LDR X9, [X26]
	0x03594E24 CMP W8, 0x3
	0x03594E28 STR X9, [X0 + 0x30]
	0x03594E2C B.EQ 0x3595438
	0x03594E30 CMP W8, 0x4
	0x03594E34 STR X23, [X0 + 0x38]
	0x03594E38 B.LS 0x359542C
	0x03594E3C LDR X8, [X20]
	0x03594E40 STR X8, [X0 + 0x40]
	0x03594E44 MOV X1, X31
	0x03594E48 BL 0x32278CC
	0x03594E4C MOV X1, X0
	0x03594E50 MOV X0, X22
	0x03594E54 MOV X2, X31
	0x03594E58 BL 0x321B938
	0x03594E5C B 0x3594D28
	0x03594E60 MOV X23, X31
	0x03594E64 CBZ X21, 0x3594EC8
	0x03594E68 LDR X8, [X21]
	0x03594E6C ADRP X10, 0xB5F000
	0x03594E70 LDRH W9, [X8 + 0x12E]
	0x03594E74 LDR X10, [X10 + 0xE00]
	0x03594E78 LDR X1, [X10]
	0x03594E7C CBZ X9, 0x3594EA0
	0x03594E80 LDR X10, [X8 + 0xB0]
	0x03594E84 ADD X10, X10, 0x8
	0x03594E88 LDUR X11, [X10 - 0x8]
	0x03594E8C CMP X11, X1
	0x03594E90 B.EQ 0x3594EB0
	0x03594E94 SUBS X9, X9, 0x1
	0x03594E98 ADD X10, X10, 0x10
	0x03594E9C B.NE 0x3594E88
	0x03594EA0 MOV X0, X21
	0x03594EA4 MOV W2, W31
	0x03594EA8 BL 0x1C5C788
	0x03594EAC B 0x3594EBC
	0x03594EB0 LDRSW X9, [X10]
	0x03594EB4 ADD X8, X8, X9, 0x4, LSL
	0x03594EB8 ADD X0, X8, 0x138
	0x03594EBC LDP X8, X1, [X0]
	0x03594EC0 MOV X0, X21
	0x03594EC4 BLR X8
	0x03594EC8 CBNZ X23, 0x3595474
	0x03594ECC ADRP X8, 0xBA2000
	0x03594ED0 LDR X8, [X8 + 0xF08]
	0x03594ED4 MOV X1, X22
	0x03594ED8 MOV X3, X31
	0x03594EDC LDR X0, [X8]
	0x03594EE0 ADRP X8, 0xB5F000
	0x03594EE4 LDR X8, [X8 + 0x848]
	0x03594EE8 LDR X2, [X8]
	0x03594EEC BL 0x32274B8
	0x03594EF0 MOV X1, X0
	0x03594EF4 MOV X0, X19
	0x03594EF8 MOV X2, X31
	0x03594EFC BL 0x321B938
	0x03594F00 ADRP X8, 0xB5F000
	0x03594F04 LDR X8, [X8 + 0x988]
	0x03594F08 STR X0, [X31]
	0x03594F0C LDR X0, [X31 + 0x8]
	0x03594F10 LDR X19, [X8]
	0x03594F14 BL 0x3594A80
	0x03594F18 CBZ X0, 0x3595470
	0x03594F1C LDR X8, [X0]
	0x03594F20 ADRP X10, 0xB62000
	0x03594F24 MOV X21, X0
	0x03594F28 LDRH W9, [X8 + 0x12E]
	0x03594F2C LDR X10, [X10 + 0x190]
	0x03594F30 LDR X1, [X10]
	0x03594F34 CBZ X9, 0x3594F58
	0x03594F38 LDR X10, [X8 + 0xB0]
	0x03594F3C ADD X10, X10, 0x8
	0x03594F40 LDUR X11, [X10 - 0x8]
	0x03594F44 CMP X11, X1
	0x03594F48 B.EQ 0x3594F68
	0x03594F4C SUBS X9, X9, 0x1
	0x03594F50 ADD X10, X10, 0x10
	0x03594F54 B.NE 0x3594F40
	0x03594F58 MOV X0, X21
	0x03594F5C MOV W2, W31
	0x03594F60 BL 0x1C5C788

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move [X31+8], X0
	015 Move X19, 0xE4C000
	016 Move X20, 0xB60000
	017 Move W8, [X19+4002]
	018 Move X20, [X20+2440]
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {73}
	023 Move X0, 0xB60000
	024 Move X0, [X0+3584]
	025 Call 0x1C17CF4
	026 Move X0, 0xB63000
	027 Move X0, [X0+400]
	028 Call 0x1C17CF4
	029 Move X0, 0xB63000
	030 Move X0, [X0+408]
	031 Call 0x1C17CF4
	032 Move X0, 0xB60000
	033 Move X0, [X0+3608]
	034 Call 0x1C17CF4
	035 Move X0, 0xB63000
	036 Move X0, [X0+432]
	037 Call 0x1C17CF4
	038 Move X0, 0xB63000
	039 Move X0, [X0+440]
	040 Call 0x1C17CF4
	041 Move X0, 0xB60000
	042 Move X0, [X0+2760]
	043 Call 0x1C17CF4
	044 Move X0, 0xB8D000
	045 Move X0, [X0+864]
	046 Call 0x1C17CF4
	047 Move X0, 0xB8D000
	048 Move X0, [X0+4024]
	049 Call 0x1C17CF4
	050 Move X0, 0xB9A000
	051 Move X0, [X0+3464]
	052 Call 0x1C17CF4
	053 Move X0, 0xB6B000
	054 Move X0, [X0+1752]
	055 Call 0x1C17CF4
	056 Move X0, 0xB60000
	057 Move X0, [X0+2104]
	058 Call 0x1C17CF4
	059 Move X0, 0xBA3000
	060 Move X0, [X0+3616]
	061 Call 0x1C17CF4
	062 Move X0, 0xBA3000
	063 Move X0, [X0+3624]
	064 Call 0x1C17CF4
	065 Move X0, 0xB60000
	066 Move X0, [X0+2440]
	067 Call 0x1C17CF4
	068 Move X0, 0xB60000
	069 Move X0, [X0+2120]
	070 Call 0x1C17CF4
	071 Move W8, 1
	072 Move [X19+4002], W8
	073 Move X0, [X31+8]
	074 Move X20, [X20]
	075 Call ApiIdentifyRequest.get_Custom, X0
	076 Compare X0, 0
	077 JumpIfEqual {442}
	078 Move X10, 0xB63000
	079 Move X8, [X0]
	080 Move X10, [X10+400]
	081 Move X21, X0
	082 NotImplemented "Instruction LDRH not yet implemented."
	083 Move X1, [X10]
	084 Compare X9, 0
	085 JumpIfEqual {92}
	086 Move X10, [X8+176]
	087 Add X10, X10, 8
	088 NotImplemented "Instruction LDUR not yet implemented."
	089 NotImplemented "Instruction CMP not yet implemented."
	090 Subtract X9, X9, 1
	091 Add X10, X10, 16
	092 Move X0, X21
	093 Move W2, W31
	094 Call 0x1C5D788
	095 NotImplemented "Instruction LDRSW not yet implemented."
	096 Add X8, X8, X9
	097 Add X0, X8, 312
	098 Move X25, 0xB60000
	099 Move X26, 0xB63000
	100 Move X28, 0xB60000
	101 Move X29, 0xB8D000
	102 Move X27, 0xB8D000
	103 Move X19, 0xB6B000
	104 Move X25, [X25+3608]
	105 Move X26, [X26+408]
	106 Move X28, [X28+2760]
	107 Move X29, [X29+864]
	108 Move X27, [X27+4024]
	109 Move X19, [X19+1752]
	110 Move X8, [X0]
	111 Move X1, [X0+8]
	112 Move X0, X21
	113 NotImplemented "Instruction BLR not yet implemented."
	114 Move X21, X0
	115 Move X0, X20
	116 Compare X21, 0
	117 JumpIfEqual {428}
	118 Move X8, [X21]
	119 Move X1, [X25]
	120 Move X22, X0
	121 NotImplemented "Instruction LDRH not yet implemented."
	122 Compare X9, 0
	123 JumpIfEqual {130}
	124 Move X10, [X8+176]
	125 Add X10, X10, 8
	126 NotImplemented "Instruction LDUR not yet implemented."
	127 NotImplemented "Instruction CMP not yet implemented."
	128 Subtract X9, X9, 1
	129 Add X10, X10, 16
	130 Move X0, X21
	131 Move W2, W31
	132 Call 0x1C5D788
	133 NotImplemented "Instruction LDRSW not yet implemented."
	134 Add X8, X8, X9
	135 Add X0, X8, 312
	136 Move X8, [X0]
	137 Move X1, [X0+8]
	138 Move X0, X21
	139 NotImplemented "Instruction BLR not yet implemented."
	140 Move TEMP, X0
	141 And TEMP, TEMP, 1
	142 Compare TEMP, 1
	143 JumpIfNotEqual {193}
	144 Move X8, [X21]
	145 Move X1, [X26]
	146 NotImplemented "Instruction LDRH not yet implemented."
	147 Compare X9, 0
	148 JumpIfEqual {155}
	149 Move X10, [X8+176]
	150 Add X10, X10, 8
	151 NotImplemented "Instruction LDUR not yet implemented."
	152 NotImplemented "Instruction CMP not yet implemented."
	153 Subtract X9, X9, 1
	154 Add X10, X10, 16
	155 Move X0, X21
	156 Move W2, W31
	157 Call 0x1C5D788
	158 NotImplemented "Instruction LDRSW not yet implemented."
	159 Add X8, X8, X9
	160 Add X0, X8, 312
	161 Move X8, [X0]
	162 Move X1, [X0+8]
	163 Move X0, X21
	164 NotImplemented "Instruction BLR not yet implemented."
	165 Move X24, X0
	166 Move X0, [X28]
	167 Move X23, X1
	168 Move W1, 5
	169 Call 0x1C17D6C
	170 Compare X0, 0
	171 JumpIfEqual {431}
	172 Move W8, [X0+24]
	173 Compare W8, 0
	174 JumpIfEqual {433}
	175 Move X9, [X29]
	176 NotImplemented "Instruction CMP not yet implemented."
	177 Move [X0+32], X9
	178 NotImplemented "Instruction CMP not yet implemented."
	179 Move [X0+40], X24
	180 Move X9, [X27]
	181 NotImplemented "Instruction CMP not yet implemented."
	182 Move [X0+48], X9
	183 NotImplemented "Instruction CMP not yet implemented."
	184 Move [X0+56], X23
	185 Move X8, [X19]
	186 Move [X0+64], X8
	187 Move X1, X31
	188 Call String.Concat, X0
	189 Move X1, X0
	190 Move X0, X22
	191 Move X2, X31
	192 Call String.Concat, X0, X1
	193 Move X23, X31
	194 Compare X21, 0
	195 JumpIfEqual {219}
	196 Move X8, [X21]
	197 Move X10, 0xB60000
	198 NotImplemented "Instruction LDRH not yet implemented."
	199 Move X10, [X10+3584]
	200 Move X1, [X10]
	201 Compare X9, 0
	202 JumpIfEqual {209}
	203 Move X10, [X8+176]
	204 Add X10, X10, 8
	205 NotImplemented "Instruction LDUR not yet implemented."
	206 NotImplemented "Instruction CMP not yet implemented."
	207 Subtract X9, X9, 1
	208 Add X10, X10, 16
	209 Move X0, X21
	210 Move W2, W31
	211 Call 0x1C5D788
	212 NotImplemented "Instruction LDRSW not yet implemented."
	213 Add X8, X8, X9
	214 Add X0, X8, 312
	215 Move X8, [X0]
	216 Move X1, [X0+8]
	217 Move X0, X21
	218 NotImplemented "Instruction BLR not yet implemented."
	219 Compare X23, 0
	220 JumpIfNotEqual {443}
	221 Move X8, 0xBA3000
	222 Move X8, [X8+3616]
	223 Move X1, X22
	224 Move X3, X31
	225 Move X0, [X8]
	226 Move X8, 0xB60000
	227 Move X8, [X8+2120]
	228 Move X2, [X8]
	229 Call String.Concat, X0, X1, X2
	230 Move X1, X0
	231 Move X0, X20
	232 Move X2, X31
	233 Call String.Concat, X0, X1
	234 Move X8, 0xB60000
	235 Move X8, [X8+2440]
	236 Move [X31], X0
	237 Move X0, [X31+8]
	238 Move X20, [X8]
	239 Call ApiIdentifyRequest.get_Default, X0
	240 Compare X0, 0
	241 JumpIfEqual {442}
	242 Move X8, [X0]
	243 Move X10, 0xB63000
	244 Move X21, X0
	245 NotImplemented "Instruction LDRH not yet implemented."
	246 Move X10, [X10+400]
	247 Move X1, [X10]
	248 Compare X9, 0
	249 JumpIfEqual {256}
	250 Move X10, [X8+176]
	251 Add X10, X10, 8
	252 NotImplemented "Instruction LDUR not yet implemented."
	253 NotImplemented "Instruction CMP not yet implemented."
	254 Subtract X9, X9, 1
	255 Add X10, X10, 16
	256 Move X0, X21
	257 Move W2, W31
	258 Call 0x1C5D788
	259 NotImplemented "Instruction LDRSW not yet implemented."
	260 Add X8, X8, X9
	261 Add X0, X8, 312
	262 Move X8, [X0]
	263 Move X1, [X0+8]
	264 Move X0, X21
	265 NotImplemented "Instruction BLR not yet implemented."
	266 Move X21, X0
	267 Move X0, X20
	268 Compare X21, 0
	269 JumpIfEqual {429}
	270 Move X8, [X21]
	271 Move X1, [X25]
	272 Move X22, X0
	273 NotImplemented "Instruction LDRH not yet implemented."
	274 Compare X9, 0
	275 JumpIfEqual {282}
	276 Move X10, [X8+176]
	277 Add X10, X10, 8
	278 NotImplemented "Instruction LDUR not yet implemented."
	279 NotImplemented "Instruction CMP not yet implemented."
	280 Subtract X9, X9, 1
	281 Add X10, X10, 16
	282 Move X0, X21
	283 Move W2, W31
	284 Call 0x1C5D788
	285 NotImplemented "Instruction LDRSW not yet implemented."
	286 Add X8, X8, X9
	287 Add X0, X8, 312
	288 Move X8, [X0]
	289 Move X1, [X0+8]
	290 Move X0, X21
	291 NotImplemented "Instruction BLR not yet implemented."
	292 Move TEMP, X0
	293 And TEMP, TEMP, 1
	294 Compare TEMP, 1
	295 JumpIfNotEqual {345}
	296 Move X8, [X21]
	297 Move X1, [X26]
	298 NotImplemented "Instruction LDRH not yet implemented."
	299 Compare X9, 0
	300 JumpIfEqual {307}
	301 Move X10, [X8+176]
	302 Add X10, X10, 8
	303 NotImplemented "Instruction LDUR not yet implemented."
	304 NotImplemented "Instruction CMP not yet implemented."
	305 Subtract X9, X9, 1
	306 Add X10, X10, 16
	307 Move X0, X21
	308 Move W2, W31
	309 Call 0x1C5D788
	310 NotImplemented "Instruction LDRSW not yet implemented."
	311 Add X8, X8, X9
	312 Add X0, X8, 312
	313 Move X8, [X0]
	314 Move X1, [X0+8]
	315 Move X0, X21
	316 NotImplemented "Instruction BLR not yet implemented."
	317 Move X24, X0
	318 Move X0, [X28]
	319 Move X23, X1
	320 Move W1, 5
	321 Call 0x1C17D6C
	322 Compare X0, 0
	323 JumpIfEqual {437}
	324 Move W8, [X0+24]
	325 Compare W8, 0
	326 JumpIfEqual {439}
	327 Move X9, [X29]
	328 NotImplemented "Instruction CMP not yet implemented."
	329 Move [X0+32], X9
	330 NotImplemented "Instruction CMP not yet implemented."
	331 Move [X0+40], X24
	332 Move X9, [X27]
	333 NotImplemented "Instruction CMP not yet implemented."
	334 Move [X0+48], X9
	335 NotImplemented "Instruction CMP not yet implemented."
	336 Move [X0+56], X23
	337 Move X8, [X19]
	338 Move [X0+64], X8
	339 Move X1, X31
	340 Call String.Concat, X0
	341 Move X1, X0
	342 Move X0, X22
	343 Move X2, X31
	344 Call String.Concat, X0, X1
	345 Move X23, X31
	346 Move W19, 7
	347 Compare X21, 0
	348 JumpIfEqual {372}
	349 Move X8, [X21]
	350 Move X10, 0xB60000
	351 NotImplemented "Instruction LDRH not yet implemented."
	352 Move X10, [X10+3584]
	353 Move X1, [X10]
	354 Compare X9, 0
	355 JumpIfEqual {362}
	356 Move X10, [X8+176]
	357 Add X10, X10, 8
	358 NotImplemented "Instruction LDUR not yet implemented."
	359 NotImplemented "Instruction CMP not yet implemented."
	360 Subtract X9, X9, 1
	361 Add X10, X10, 16
	362 Move X0, X21
	363 Move W2, W31
	364 Call 0x1C5D788
	365 NotImplemented "Instruction LDRSW not yet implemented."
	366 Add X8, X8, X9
	367 Add X0, X8, 312
	368 Move X8, [X0]
	369 Move X1, [X0+8]
	370 Move X0, X21
	371 NotImplemented "Instruction BLR not yet implemented."
	372 Compare X23, 0
	373 JumpIfNotEqual {443}
	374 NotImplemented "Instruction CMP not yet implemented."
	375 Compare W19, 0
	376 JumpIfNotEqual {414}
	377 Move X8, 0xBA3000
	378 Move X8, [X8+3624]
	379 Move X1, X22
	380 Move X3, X31
	381 Move X0, [X8]
	382 Move X8, 0xB60000
	383 Move X8, [X8+2120]
	384 Move X2, [X8]
	385 Call String.Concat, X0, X1, X2
	386 Move X1, X0
	387 Move X0, [X31]
	388 Move X2, X31
	389 Call String.Concat, X0, X1
	390 Move X8, [X31+8]
	391 Move X4, X31
	392 Move X2, [X8+32]
	393 Move X8, 0xB9A000
	394 Move X8, [X8+3464]
	395 Move X1, [X8]
	396 Move X8, 0xB60000
	397 Move X8, [X8+2104]
	398 Move X20, [X31+96]
	399 Move X19, [X31+104]
	400 Move X22, [X31+80]
	401 Move X21, [X31+88]
	402 Move X24, [X31+64]
	403 Move X23, [X31+72]
	404 Move X3, [X8]
	405 Move X26, [X31+48]
	406 Move X25, [X31+56]
	407 Move X28, [X31+32]
	408 Move X27, [X31+40]
	409 Move X29, [X31+16]
	410 Move X30, [X31+24]
	411 Add X31, X31, 112
	412 Call String.Concat, X0, X1, X2, X3
	413 Return X0
	414 Move X20, [X31+96]
	415 Move X19, [X31+104]
	416 Move X22, [X31+80]
	417 Move X21, [X31+88]
	418 Move X24, [X31+64]
	419 Move X23, [X31+72]
	420 Move X26, [X31+48]
	421 Move X25, [X31+56]
	422 Move X28, [X31+32]
	423 Move X27, [X31+40]
	424 Move X29, [X31+16]
	425 Move X30, [X31+24]
	426 Add X31, X31, 112
	427 Return X0
	428 Call 0x1C17F20
	429 Call 0x1C17F20
	430 Call 0x1C17F28
	431 Call 0x1C17F20
	432 Call 0x1C17F28
	433 Call 0x1C17F28
	434 Call 0x1C17F28
	435 Call 0x1C17F28
	436 Call 0x1C17F28
	437 Call 0x1C17F20
	438 Call 0x1C17F28
	439 Call 0x1C17F28
	440 Call 0x1C17F28
	441 Call 0x1C17F28
	442 Call 0x1C17F20
	443 Move X0, X23
	444 Call 0x1C17F18
	445 Move X22, X20
	446 Move X22, X20
	447 NotImplemented "Instruction CMP not yet implemented."
	448 Call 0x3EB2AD0
	449 Move X23, [X0]
	450 Call 0x3EB2AE0
	451 Move W19, W31
	452 Compare X21, 0
	453 JumpIfNotEqual {349}
	454 Move X19, X0
	455 Move X23, X31
	456 Move X19, X0
	457 Compare X21, 0
	458 JumpIfEqual {482}
	459 Move X8, [X21]
	460 Move X10, 0xB60000
	461 NotImplemented "Instruction LDRH not yet implemented."
	462 Move X10, [X10+3584]
	463 Move X1, [X10]
	464 Compare X9, 0
	465 JumpIfEqual {472}
	466 Move X10, [X8+176]
	467 Add X10, X10, 8
	468 NotImplemented "Instruction LDUR not yet implemented."
	469 NotImplemented "Instruction CMP not yet implemented."
	470 Subtract X9, X9, 1
	471 Add X10, X10, 16
	472 Move X0, X21
	473 Move W2, W31
	474 Call 0x1C5D788
	475 NotImplemented "Instruction LDRSW not yet implemented."
	476 Add X8, X8, X9
	477 Add X0, X8, 312
	478 Move X8, [X0]
	479 Move X1, [X0+8]
	480 Move X0, X21
	481 NotImplemented "Instruction BLR not yet implemented."
	482 Compare X23, 0
	483 JumpIfEqual {520}
	484 Move X0, X23
	485 Call 0x1C17F18
	486 NotImplemented "Instruction CMP not yet implemented."
	487 Call 0x3EB2AD0
	488 Move X23, [X0]
	489 Call 0x3EB2AE0
	490 Move X19, X0
	491 Move X23, X31
	492 Move X19, X0
	493 Compare X21, 0
	494 JumpIfEqual {518}
	495 Move X8, [X21]
	496 Move X10, 0xB60000
	497 NotImplemented "Instruction LDRH not yet implemented."
	498 Move X10, [X10+3584]
	499 Move X1, [X10]
	500 Compare X9, 0
	501 JumpIfEqual {508}
	502 Move X10, [X8+176]
	503 Add X10, X10, 8
	504 NotImplemented "Instruction LDUR not yet implemented."
	505 NotImplemented "Instruction CMP not yet implemented."
	506 Subtract X9, X9, 1
	507 Add X10, X10, 16
	508 Move X0, X21
	509 Move W2, W31
	510 Call 0x1C5D788
	511 NotImplemented "Instruction LDRSW not yet implemented."
	512 Add X8, X8, X9
	513 Add X0, X8, 312
	514 Move X8, [X0]
	515 Move X1, [X0+8]
	516 Move X0, X21
	517 NotImplemented "Instruction BLR not yet implemented."
	518 Compare X23, 0
	519 JumpIfNotEqual {522}
	520 Move X0, X19
	521 Call 0x1D2D690
	522 Move X0, X23
	523 Call 0x1C17F18
	524 Call 0x1991590

Method: System.Void .ctor()

Disassembly:
	0x03594F64 B 0x3594F74
	0x03594F68 LDRSW X9, [X10]

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

