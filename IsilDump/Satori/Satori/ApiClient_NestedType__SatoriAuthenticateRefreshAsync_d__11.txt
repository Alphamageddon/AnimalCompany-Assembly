Type: Satori.ApiClient/<SatoriAuthenticateRefreshAsync>d__11

Method: System.Void MoveNext()

Disassembly:
	0x03599440 ADD X0, X19, 0x8
	0x03599444 LDR X3, [X8]
	0x03599448 ADD X1, X31, 0x8
	0x0359944C MOV X2, X19
	0x03599450 BL 0x2187C24
	0x03599454 LDP X20, X19, [X31 + 0x50]
	0x03599458 LDP X22, X21, [X31 + 0x40]
	0x0359945C LDP X24, X23, [X31 + 0x30]
	0x03599460 LDP X26, X25, [X31 + 0x20]
	0x03599464 LDP X30, X27, [X31 + 0x10]
	0x03599468 ADD X31, X31, 0x60
	0x0359946C RET
	0x03599470 ADRP X0, 0xB62000
	0x03599474 LDR X0, [X0 + 0x578]
	0x03599478 BL 0x1C16D08
	0x0359947C BL 0x1C16F10
	0x03599480 MOV X20, X0
	0x03599484 ADRP X0, 0xB96000
	0x03599488 LDR X0, [X0 + 0x2F0]
	0x0359948C BL 0x1C16D08
	0x03599490 MOV X1, X0
	0x03599494 MOV X0, X20
	0x03599498 MOV X2, X31
	0x0359949C BL 0x3314A68
	0x035994A0 ADRP X0, 0xB9E000
	0x035994A4 LDR X0, [X0 + 0xD8]
	0x035994A8 BL 0x1C16D08
	0x035994AC MOV X1, X0
	0x035994B0 MOV X0, X20
	0x035994B4 BL 0x1C16DEC
	0x035994B8 BL 0x1C16F20
	0x035994BC BL 0x1C16F20
	0x035994C0 BL 0x1C16F20
	0x035994C4 BL 0x1C16F20
	0x035994C8 BL 0x1C16F28
	0x035994CC BL 0x1C16F20
	0x035994D0 BL 0x1C16F20
	0x035994D4 BL 0x1C16F20
	0x035994D8 BL 0x1C16F20
	0x035994DC BL 0x1C16F20
	0x035994E0 B 0x359953C
	0x035994E4 B 0x359953C
	0x035994E8 B 0x359953C
	0x035994EC B 0x359953C
	0x035994F0 B 0x359953C
	0x035994F4 B 0x359953C
	0x035994F8 B 0x359953C
	0x035994FC B 0x359953C
	0x03599500 B 0x359953C
	0x03599504 B 0x359953C
	0x03599508 B 0x359953C
	0x0359950C B 0x359953C
	0x03599510 B 0x359953C
	0x03599514 B 0x359953C
	0x03599518 B 0x359953C
	0x0359951C B 0x359953C
	0x03599520 B 0x359953C
	0x03599524 B 0x359953C
	0x03599528 B 0x359953C
	0x0359952C B 0x359953C
	0x03599530 B 0x359953C
	0x03599534 B 0x359953C
	0x03599538 B 0x359953C
	0x0359953C MOV X20, X0
	0x03599540 CMP W1, 0x1
	0x03599544 B.NE 0x35995D4
	0x03599548 MOV X0, X20
	0x0359954C BL 0x3EB1AD0
	0x03599550 MOV X20, X0
	0x03599554 ADRP X0, 0xB5A000
	0x03599558 LDR X0, [X0 + 0x7D0]
	0x0359955C BL 0x1C16D08
	0x03599560 LDR X8, [X20]
	0x03599564 LDR X1, [X8]
	0x03599568 BL 0x1C17270
	0x0359956C TBZ X0, 0x0, 0x35995AC
	0x03599570 LDR X20, [X20]
	0x03599574 BL 0x3EB1AE0
	0x03599578 MOVN W8, 0x1
	0x0359957C STR W8, [X19], #0x8
	0x03599580 ADRP X0, 0xB5D000
	0x03599584 LDR X0, [X0 + 0x280]
	0x03599588 BL 0x1C16D08
	0x0359958C LDR W8, [X0 + 0xE0]
	0x03599590 CBNZ W8, 0x3599598
	0x03599594 BL 0x1C16DFC
	0x03599598 MOV X0, X19
	0x0359959C MOV X1, X20
	0x035995A0 MOV X2, X31
	0x035995A4 BL 0x32C4908
	0x035995A8 B 0x3599454
	0x035995AC MOVZ W0, 0x8
	0x035995B0 BL 0x3EB1AF0
	0x035995B4 LDR X8, [X20]
	0x035995B8 STR X8, [X0]
	0x035995BC ADRP X1, 0x91B000
	0x035995C0 ADD X1, X1, 0xE58
	0x035995C4 MOV X2, X31
	0x035995C8 BL 0x3EB1B00
	0x035995CC MOV X20, X0
	0x035995D0 BL 0x3EB1AE0
	0x035995D4 MOV X0, X20
	0x035995D8 BL 0x1D2C690
	0x035995DC BL 0x1990590
	0x035995E0 STR X30, [X31 - 0x30]!
	0x035995E4 STP X22, X21, [X31 + 0x10]
	0x035995E8 STP X20, X19, [X31 + 0x20]
	0x035995EC ADRP X21, 0xE46000
	0x035995F0 ADRP X22, 0xB5D000
	0x035995F4 LDRB W8, [X21 + 0xFCC]
	0x035995F8 LDR X22, [X22 + 0x280]
	0x035995FC MOV X19, X1
	0x03599600 MOV X20, X0
	0x03599604 TBNZ X8, 0x0, 0x359961C
	0x03599608 ADRP X0, 0xB5D000
	0x0359960C LDR X0, [X0 + 0x280]
	0x03599610 BL 0x1C16CF4
	0x03599614 MOVZ W8, 0x1
	0x03599618 STRB W8, [X21 + 0xFCC]
	0x0359961C LDR X0, [X22]
	0x03599620 LDR W8, [X0 + 0xE0]
	0x03599624 CBNZ W8, 0x359962C
	0x03599628 BL 0x1C16DFC
	0x0359962C ADD X0, X20, 0x8
	0x03599630 MOV X1, X19
	0x03599634 LDP X20, X19, [X31 + 0x20]
	0x03599638 LDP X22, X21, [X31 + 0x10]
	0x0359963C MOV X2, X31
	0x03599640 LDR X30, [X31], #0x30
	0x03599644 B 0x32C477C
	0x03599648 SUB X31, X31, 0x70
	0x0359964C STR X30, [X31 + 0x10]
	0x03599650 STP X28, X27, [X31 + 0x20]
	0x03599654 STP X26, X25, [X31 + 0x30]
	0x03599658 STP X24, X23, [X31 + 0x40]
	0x0359965C STP X22, X21, [X31 + 0x50]
	0x03599660 STP X20, X19, [X31 + 0x60]
	0x03599664 ADRP X20, 0xE46000
	0x03599668 LDRB W8, [X20 + 0xFCD]
	0x0359966C MOV X19, X0
	0x03599670 TBNZ X8, 0x0, 0x359973C
	0x03599674 ADRP X0, 0xB9E000
	0x03599678 LDR X0, [X0 + 0xE0]
	0x0359967C BL 0x1C16CF4
	0x03599680 ADRP X0, 0xB5D000
	0x03599684 LDR X0, [X0 + 0x280]
	0x03599688 BL 0x1C16CF4
	0x0359968C ADRP X0, 0xB63000
	0x03599690 LDR X0, [X0 + 0x8D8]
	0x03599694 BL 0x1C16CF4
	0x03599698 ADRP X0, 0xB5B000
	0x0359969C LDR X0, [X0 + 0x810]
	0x035996A0 BL 0x1C16CF4
	0x035996A4 ADRP X0, 0xB5B000
	0x035996A8 LDR X0, [X0 + 0x6C0]
	0x035996AC BL 0x1C16CF4
	0x035996B0 ADRP X0, 0xB5B000
	0x035996B4 LDR X0, [X0 + 0x6D0]
	0x035996B8 BL 0x1C16CF4
	0x035996BC ADRP X0, 0xB9E000
	0x035996C0 LDR X0, [X0 + 0x58]
	0x035996C4 BL 0x1C16CF4
	0x035996C8 ADRP X0, 0xB5D000
	0x035996CC LDR X0, [X0 + 0x1E0]
	0x035996D0 BL 0x1C16CF4
	0x035996D4 ADRP X0, 0xB5D000
	0x035996D8 LDR X0, [X0 + 0x1F0]
	0x035996DC BL 0x1C16CF4
	0x035996E0 ADRP X0, 0xB5D000
	0x035996E4 LDR X0, [X0 + 0x1F8]
	0x035996E8 BL 0x1C16CF4
	0x035996EC ADRP X0, 0xB63000
	0x035996F0 LDR X0, [X0 + 0x3A0]
	0x035996F4 BL 0x1C16CF4
	0x035996F8 ADRP X0, 0xB9E000
	0x035996FC LDR X0, [X0 + 0xE8]
	0x03599700 BL 0x1C16CF4
	0x03599704 ADRP X0, 0xB83000
	0x03599708 LDR X0, [X0 + 0x4D8]
	0x0359970C BL 0x1C16CF4
	0x03599710 ADRP X0, 0xB95000
	0x03599714 LDR X0, [X0 + 0x7D0]
	0x03599718 BL 0x1C16CF4
	0x0359971C ADRP X0, 0xB95000
	0x03599720 LDR X0, [X0 + 0x7D8]
	0x03599724 BL 0x1C16CF4
	0x03599728 ADRP X0, 0xB5A000
	0x0359972C LDR X0, [X0 + 0x988]
	0x03599730 BL 0x1C16CF4
	0x03599734 MOVZ W8, 0x1
	0x03599738 STRB W8, [X20 + 0xFCD]
	0x0359973C STR X31, [X31 + 0x18]
	0x03599740 ADRP X28, 0xB5D000
	0x03599744 LDR W8, [X19]
	0x03599748 LDR X28, [X28 + 0x280]
	0x0359974C CBZ W8, 0x3599928
	0x03599750 LDR X8, [X19 + 0x20]
	0x03599754 CBZ X8, 0x3599A40
	0x03599758 LDR X25, [X19 + 0x28]
	0x0359975C CBZ X25, 0x3599A88
	0x03599760 LDR X0, [X25 + 0x20]
	0x03599764 CBZ X0, 0x3599A8C
	0x03599768 ADRP X8, 0xB9E000
	0x0359976C ADRP X9, 0xB5A000
	0x03599770 LDR X8, [X8 + 0xE8]
	0x03599774 LDR X9, [X9 + 0x988]
	0x03599778 LDR X21, [X8]
	0x0359977C LDR X20, [X9]
	0x03599780 MOV X1, X31
	0x03599784 BL 0x361B448
	0x03599788 ADRP X8, 0xB63000
	0x0359978C LDR X8, [X8 + 0x8D8]
	0x03599790 MOV X22, X0
	0x03599794 LDR X0, [X8]
	0x03599798 MOVZ W1, 0x1
	0x0359979C BL 0x1C16D6C
	0x035997A0 MOV X1, X0
	0x035997A4 CBZ X1, 0x3599A90
	0x035997A8 LDR W8, [X1 + 0x18]
	0x035997AC CBZ W8, 0x3599A94
	0x035997B0 MOVZ W8, 0x2F
	0x035997B4 STRH W8, [X1 + 0x20]
	0x035997B8 CBZ X22, 0x3599A98
	0x035997BC MOV X0, X22
	0x035997C0 MOV X2, X31
	0x035997C4 BL 0x322BC58
	0x035997C8 MOV X1, X21
	0x035997CC MOV X2, X31
	0x035997D0 BL 0x321B938
	0x035997D4 ADRP X8, 0xB63000
	0x035997D8 LDR X8, [X8 + 0x3A0]
	0x035997DC MOV X22, X0
	0x035997E0 LDR X23, [X25 + 0x20]
	0x035997E4 LDR X0, [X8]
	0x035997E8 BL 0x1C16F10
	0x035997EC MOV X21, X0
	0x035997F0 MOV X1, X23
	0x035997F4 MOV X2, X31
	0x035997F8 BL 0x36281F8
	0x035997FC CBZ X21, 0x3599A9C
	0x03599800 MOV X0, X21
	0x03599804 MOV X1, X22
	0x03599808 MOV X2, X31
	0x0359980C BL 0x36288CC
	0x03599810 MOV X0, X21
	0x03599814 MOV X1, X20
	0x03599818 MOV X2, X31
	0x0359981C BL 0x3628980
	0x03599820 MOV X0, X21
	0x03599824 MOV X1, X31
	0x03599828 BL 0x3628A38
	0x0359982C ADRP X8, 0xB83000
	0x03599830 ADRP X9, 0xB5B000
	0x03599834 LDR X8, [X8 + 0x4D8]
	0x03599838 LDR X9, [X9 + 0x6D0]
	0x0359983C MOV X20, X0
	0x03599840 LDR X21, [X8]
	0x03599844 LDR X0, [X9]
	0x03599848 BL 0x1C16F10
	0x0359984C ADRP X8, 0xB5B000
	0x03599850 LDR X8, [X8 + 0x6C0]
	0x03599854 MOV X22, X0
	0x03599858 LDR X1, [X8]
	0x0359985C BL 0x2AA4804
	0x03599860 ADRP X8, 0xB95000
	0x03599864 LDR X8, [X8 + 0x7D8]
	0x03599868 LDR X1, [X19 + 0x30]
	0x0359986C LDR X0, [X8]
	0x03599870 MOV X2, X31
	0x03599874 BL 0x321B938
	0x03599878 CBZ X22, 0x3599AA0
	0x0359987C ADRP X8, 0xB95000
	0x03599880 LDR X8, [X8 + 0x7D0]
	0x03599884 ADRP X9, 0xB5B000
	0x03599888 LDR X9, [X9 + 0x810]
	0x0359988C MOV X2, X0
	0x03599890 LDR X1, [X8]
	0x03599894 LDR X3, [X9]
	0x03599898 MOV X0, X22
	0x0359989C BL 0x2AA5098
	0x035998A0 LDR X0, [X19 + 0x20]
	0x035998A4 BL 0x3597D7C
	0x035998A8 MOV X23, X0
	0x035998AC MOV X0, X31
	0x035998B0 BL 0x3241948
	0x035998B4 CBZ X0, 0x3599AA4
	0x035998B8 LDR X8, [X0]
	0x035998BC LDR X9, [X8 + 0x268]
	0x035998C0 LDR X2, [X8 + 0x270]
	0x035998C4 MOV X1, X23
	0x035998C8 BLR X9
	0x035998CC LDR X24, [X25 + 0x10]
	0x035998D0 CBZ X24, 0x3599AA8
	0x035998D4 ADRP X10, 0xB9E000
	0x035998D8 LDR X10, [X10 + 0x58]
	0x035998DC LDR X8, [X24]
	0x035998E0 LDR W26, [X25 + 0x18]
	0x035998E4 LDP X27, X25, [X19 + 0x38]
	0x035998E8 LDR X1, [X10]
	0x035998EC LDRH W9, [X8 + 0x12E]
	0x035998F0 MOV X23, X0
	0x035998F4 CBZ X9, 0x3599918
	0x035998F8 LDR X10, [X8 + 0xB0]
	0x035998FC ADD X10, X10, 0x8
	0x03599900 LDUR X11, [X10 - 0x8]
	0x03599904 CMP X11, X1
	0x03599908 B.EQ 0x3599940
	0x0359990C SUBS X9, X9, 0x1
	0x03599910 ADD X10, X10, 0x10
	0x03599914 B.NE 0x3599900
	0x03599918 MOVZ W2, 0x3
	0x0359991C MOV X0, X24
	0x03599920 BL 0x1C5C788
	0x03599924 B 0x3599950
	0x03599928 LDR X8, [X19 + 0x48]
	0x0359992C MOVN W9, 0x0
	0x03599930 STR X8, [X31 + 0x18]
	0x03599934 STR X31, [X19 + 0x48]
	0x03599938 STR W9, [X19]
	0x0359993C B 0x35999AC
	0x03599940 LDR W9, [X10]
	0x03599944 ADD W9, W9, 0x3
	0x03599948 ADD X8, X8, W9, 0x4, SXTW
	0x0359994C ADD X0, X8, 0x138
	0x03599950 LDP X8, X9, [X0]
	0x03599954 MOV X0, X24
	0x03599958 MOV X1, X21
	0x0359995C MOV X2, X20
	0x03599960 MOV X3, X22
	0x03599964 MOV X4, X23
	0x03599968 MOV W5, W26
	0x0359996C MOV X6, X27
	0x03599970 MOV X7, X25
	0x03599974 STR X9, [X31]
	0x03599978 BLR X8
	0x0359997C CBZ X0, 0x3599AAC
	0x03599980 ADRP X8, 0xB5D000
	0x03599984 LDR X8, [X8 + 0x1F8]
	0x03599988 LDR X1, [X8]
	0x0359998C BL 0x269F5D0
	0x03599990 ADRP X8, 0xB5D000
	0x03599994 LDR X8, [X8 + 0x1F0]
	0x03599998 STR X0, [X31 + 0x18]
	0x0359999C LDR X1, [X8]
	0x035999A0 ADD X0, X31, 0x18
	0x035999A4 BL 0x2677430
	0x035999A8 TBZ X0, 0x0, 0x35999E8
	0x035999AC ADRP X8, 0xB5D000
	0x035999B0 LDR X8, [X8 + 0x1E0]
	0x035999B4 ADD X0, X31, 0x18
	0x035999B8 LDR X1, [X8]
	0x035999BC BL 0x2677474
	0x035999C0 MOVN W8, 0x1
	0x035999C4 STR W8, [X19], #0x8
	0x035999C8 LDR X0, [X28]
	0x035999CC LDR W8, [X0 + 0xE0]
	0x035999D0 CBNZ W8, 0x35999D8
	0x035999D4 BL 0x1C16DFC
	0x035999D8 MOV X0, X19
	0x035999DC MOV X1, X31
	0x035999E0 BL 0x32C4864
	0x035999E4 B 0x3599A20
	0x035999E8 STR W31, [X19]
	0x035999EC LDR X8, [X31 + 0x18]
	0x035999F0 STR X8, [X19 + 0x48]
	0x035999F4 LDR X0, [X28]
	0x035999F8 LDR W8, [X0 + 0xE0]
	0x035999FC CBNZ W8, 0x3599A04
	0x03599A00 BL 0x1C16DFC
	0x03599A04 ADRP X8, 0xB9E000
	0x03599A08 LDR X8, [X8 + 0xE0]
	0x03599A0C ADD X0, X19, 0x8
	0x03599A10 LDR X3, [X8]
	0x03599A14 ADD X1, X31, 0x18
	0x03599A18 MOV X2, X19
	0x03599A1C BL 0x2187CA0
	0x03599A20 LDP X20, X19, [X31 + 0x60]
	0x03599A24 LDP X22, X21, [X31 + 0x50]
	0x03599A28 LDP X24, X23, [X31 + 0x40]
	0x03599A2C LDP X26, X25, [X31 + 0x30]
	0x03599A30 LDP X28, X27, [X31 + 0x20]
	0x03599A34 LDR X30, [X31 + 0x10]
	0x03599A38 ADD X31, X31, 0x70
	0x03599A3C RET
	0x03599A40 ADRP X0, 0xB62000
	0x03599A44 LDR X0, [X0 + 0x578]
	0x03599A48 BL 0x1C16D08
	0x03599A4C BL 0x1C16F10
	0x03599A50 MOV X20, X0
	0x03599A54 ADRP X0, 0xB95000
	0x03599A58 LDR X0, [X0 + 0xBC8]
	0x03599A5C BL 0x1C16D08
	0x03599A60 MOV X1, X0
	0x03599A64 MOV X0, X20
	0x03599A68 MOV X2, X31
	0x03599A6C BL 0x3314A68
	0x03599A70 ADRP X0, 0xB9E000
	0x03599A74 LDR X0, [X0 + 0xF0]
	0x03599A78 BL 0x1C16D08
	0x03599A7C MOV X1, X0
	0x03599A80 MOV X0, X20
	0x03599A84 BL 0x1C16DEC
	0x03599A88 BL 0x1C16F20
	0x03599A8C BL 0x1C16F20
	0x03599A90 BL 0x1C16F20
	0x03599A94 BL 0x1C16F28
	0x03599A98 BL 0x1C16F20
	0x03599A9C BL 0x1C16F20

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X30
	003 Move [X31+32], X28
	004 Move [X31+40], X27
	005 Move [X31+48], X26
	006 Move [X31+56], X25
	007 Move [X31+64], X24
	008 Move [X31+72], X23
	009 Move [X31+80], X22
	010 Move [X31+88], X21
	011 Move [X31+96], X20
	012 Move [X31+104], X19
	013 Move X20, 0xE47000
	014 Move W8, [X20+4039]
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {82}
	020 Move X0, 0xB9F000
	021 Move X0, [X0+160]
	022 Call 0x1C17CF4
	023 Move X0, 0xB9F000
	024 Move X0, [X0+80]
	025 Call 0x1C17CF4
	026 Move X0, 0xB9E000
	027 Move X0, [X0+3912]
	028 Call 0x1C17CF4
	029 Move X0, 0xB64000
	030 Move X0, [X0+2264]
	031 Call 0x1C17CF4
	032 Move X0, 0xB64000
	033 Move X0, [X0+2536]
	034 Call 0x1C17CF4
	035 Move X0, 0xB5C000
	036 Move X0, [X0+2064]
	037 Call 0x1C17CF4
	038 Move X0, 0xB5C000
	039 Move X0, [X0+1728]
	040 Call 0x1C17CF4
	041 Move X0, 0xB5C000
	042 Move X0, [X0+1744]
	043 Call 0x1C17CF4
	044 Move X0, 0xB9F000
	045 Move X0, [X0+88]
	046 Call 0x1C17CF4
	047 Move X0, 0xB9F000
	048 Move X0, [X0+96]
	049 Call 0x1C17CF4
	050 Move X0, 0xB5E000
	051 Move X0, [X0+480]
	052 Call 0x1C17CF4
	053 Move X0, 0xB5E000
	054 Move X0, [X0+496]
	055 Call 0x1C17CF4
	056 Move X0, 0xB5E000
	057 Move X0, [X0+504]
	058 Call 0x1C17CF4
	059 Move X0, 0xB64000
	060 Move X0, [X0+928]
	061 Call 0x1C17CF4
	062 Move X0, 0xB84000
	063 Move X0, [X0+1240]
	064 Call 0x1C17CF4
	065 Move X0, 0xB9F000
	066 Move X0, [X0+168]
	067 Call 0x1C17CF4
	068 Move X0, 0xB64000
	069 Move X0, [X0+2440]
	070 Call 0x1C17CF4
	071 Move X0, 0xB96000
	072 Move X0, [X0+2000]
	073 Call 0x1C17CF4
	074 Move X0, 0xB96000
	075 Move X0, [X0+2128]
	076 Call 0x1C17CF4
	077 Move X0, 0xB5B000
	078 Move X0, [X0+2440]
	079 Call 0x1C17CF4
	080 Move W8, 1
	081 Move [X20+4039], W8
	082 Move [X31+24], X31
	083 Move X28, 0xB9E000
	084 Move W8, [X19]
	085 Move X28, [X28+3912]
	086 Compare W8, 0
	087 JumpIfEqual {251}
	088 Move X8, [X19+32]
	089 Compare X8, 0
	090 JumpIfEqual {343}
	091 Move X25, [X19+40]
	092 Compare X25, 0
	093 JumpIfEqual {361}
	094 Move X0, [X25+32]
	095 Compare X0, 0
	096 JumpIfEqual {362}
	097 Move X8, 0xB9F000
	098 Move X9, 0xB5B000
	099 Move X8, [X8+168]
	100 Move X9, [X9+2440]
	101 Move X21, [X8]
	102 Move X20, [X9]
	103 Move X1, X31
	104 Call Uri.get_AbsolutePath, X0
	105 Move X8, 0xB64000
	106 Move X8, [X8+2264]
	107 Move X22, X0
	108 Move X0, [X8]
	109 Move W1, 1
	110 Call 0x1C17D6C
	111 Move X1, X0
	112 Compare X1, 0
	113 JumpIfEqual {363}
	114 Move W8, [X1+24]
	115 Compare W8, 0
	116 JumpIfEqual {364}
	117 Move W8, 47
	118 NotImplemented "Instruction STRH not yet implemented."
	119 Compare X22, 0
	120 JumpIfEqual {365}
	121 Move X0, X22
	122 Move X2, X31
	123 Call String.TrimEnd, X0, X1
	124 Move X1, X21
	125 Move X2, X31
	126 Call String.Concat, X0, X1
	127 Move X8, 0xB64000
	128 Move X8, [X8+928]
	129 Move X22, X0
	130 Move X23, [X25+32]
	131 Move X0, [X8]
	132 Call 0x1C17F10
	133 Move X21, X0
	134 Move X1, X23
	135 Move X2, X31
	136 Call UriBuilder..ctor, X0, X1
	137 Compare X21, 0
	138 JumpIfEqual {366}
	139 Move X0, X21
	140 Move X1, X22
	141 Move X2, X31
	142 Call UriBuilder.set_Path, X0, X1
	143 Move X0, X21
	144 Move X1, X20
	145 Move X2, X31
	146 Call UriBuilder.set_Query, X0, X1
	147 Move X0, X21
	148 Move X1, X31
	149 Call UriBuilder.get_Uri, X0
	150 Move X8, 0xB84000
	151 Move X9, 0xB5C000
	152 Move X8, [X8+1240]
	153 Move X9, [X9+1744]
	154 Move X20, X0
	155 Move X21, [X8]
	156 Move X0, [X9]
	157 Call 0x1C17F10
	158 Move X8, 0xB5C000
	159 Move X8, [X8+1728]
	160 Move X22, X0
	161 Move X1, [X8]
	162 Call Dictionary`2<Object, Object>..ctor, X0
	163 Move X0, [X19+48]
	164 Move X1, X31
	165 Call String.IsNullOrEmpty, X0
	166 Move TEMP, X0
	167 And TEMP, TEMP, 1
	168 Compare TEMP, 1
	169 JumpIfEqual {216}
	170 Move X0, X31
	171 Call Encoding.get_UTF8
	172 Move X8, 0xB64000
	173 Move X23, X0
	174 Move X0, [X19+48]
	175 Move X2, [X19+56]
	176 Move X8, [X8+2440]
	177 Move X1, [X8]
	178 Move X3, X31
	179 Call String.Concat, X0, X1, X2
	180 Move X1, X0
	181 Compare X23, 0
	182 JumpIfEqual {370}
	183 Move X8, [X23]
	184 Move X9, [X8+616]
	185 Move X2, [X8+624]
	186 Move X0, X23
	187 NotImplemented "Instruction BLR not yet implemented."
	188 Move X8, 0xB64000
	189 Move X8, [X8+2536]
	190 Move X23, X0
	191 Move X0, [X8]
	192 Move W8, [X0+224]
	193 Compare W8, 0
	194 JumpIfNotEqual {196}
	195 Call 0x1C17DFC
	196 Move X0, X23
	197 Move X1, X31
	198 Call Convert.ToBase64String, X0
	199 Move X1, X0
	200 Move X8, 0xB96000
	201 Move X8, [X8+2128]
	202 Move X0, [X8]
	203 Move X2, X31
	204 Call String.Concat, X0, X1
	205 Compare X22, 0
	206 JumpIfEqual {371}
	207 Move X8, 0xB96000
	208 Move X8, [X8+2000]
	209 Move X9, 0xB5C000
	210 Move X9, [X9+2064]
	211 Move X2, X0
	212 Move X1, [X8]
	213 Move X3, [X9]
	214 Move X0, X22
	215 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	216 Move X0, [X19+32]
	217 Call JsonWriter.ToJson, X0
	218 Move X23, X0
	219 Move X0, X31
	220 Call Encoding.get_UTF8
	221 Compare X0, 0
	222 JumpIfEqual {367}
	223 Move X8, [X0]
	224 Move X9, [X8+616]
	225 Move X2, [X8+624]
	226 Move X1, X23
	227 NotImplemented "Instruction BLR not yet implemented."
	228 Move X24, [X25+16]
	229 Compare X24, 0
	230 JumpIfEqual {368}
	231 Move X10, 0xB9F000
	232 Move X10, [X10+88]
	233 Move X8, [X24]
	234 Move W26, [X25+24]
	235 Move X27, [X19+64]
	236 Move X25, [X19+72]
	237 Move X1, [X10]
	238 NotImplemented "Instruction LDRH not yet implemented."
	239 Move X23, X0
	240 Compare X9, 0
	241 JumpIfEqual {248}
	242 Move X10, [X8+176]
	243 Add X10, X10, 8
	244 NotImplemented "Instruction LDUR not yet implemented."
	245 NotImplemented "Instruction CMP not yet implemented."
	246 Subtract X9, X9, 1
	247 Add X10, X10, 16
	248 Move W2, 3
	249 Move X0, X24
	250 Call 0x1C5D788
	251 Move X8, [X19+80]
	252 Move TEMP, 0
	253 Not TEMP
	254 Move W9, TEMP
	255 Move [X31+24], X8
	256 Move [X19+80], X31
	257 Move [X19], W9
	258 Move W9, [X10]
	259 Add W9, W9, 3
	260 Add X8, X8, W9
	261 Add X0, X8, 312
	262 Move X8, [X0]
	263 Move X9, [X0+8]
	264 Move X0, X24
	265 Move X1, X21
	266 Move X2, X20
	267 Move X3, X22
	268 Move X4, X23
	269 Move W5, W26
	270 Move X6, X27
	271 Move X7, X25
	272 Move [X31], X9
	273 NotImplemented "Instruction BLR not yet implemented."
	274 Compare X0, 0
	275 JumpIfEqual {369}
	276 Move X8, 0xB5E000
	277 Move X8, [X8+504]
	278 Move X1, [X8]
	279 Call Task`1<Object>.GetAwaiter, X0
	280 Move X8, 0xB5E000
	281 Move X8, [X8+496]
	282 Move [X31+24], X0
	283 Move X1, [X8]
	284 Add X0, X31, 24
	285 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	286 Move TEMP, X0
	287 And TEMP, TEMP, 1
	288 Compare TEMP, 1
	289 JumpIfNotEqual {315}
	290 Move X8, 0xB5E000
	291 Move X8, [X8+480]
	292 Add X0, X31, 24
	293 Move X1, [X8]
	294 Call TaskAwaiter`1<Object>.GetResult, X0
	295 Move X8, 0xB9F000
	296 Move X8, [X8+96]
	297 Move X1, [X8]
	298 Call 0x22119A8, X0
	299 Move TEMP, 1
	300 Not TEMP
	301 Move W8, TEMP
	302 Move [X19+8], W8
	303 Move X20, X0
	304 Move X0, [X28]
	305 Move X21, 0xB9F000
	306 Move W8, [X0+224]
	307 Move X21, [X21+80]
	308 Compare W8, 0
	309 JumpIfNotEqual {311}
	310 Call 0x1C17DFC
	311 Move X2, [X21]
	312 Move X0, X19
	313 Move X1, X20
	314 Call AsyncTaskMethodBuilder`1<Object>.SetResult, X0, X1
	315 Move [X19], W31
	316 Move X8, [X31+24]
	317 Move [X19+80], X8
	318 Move X0, [X28]
	319 Move W8, [X0+224]
	320 Compare W8, 0
	321 JumpIfNotEqual {323}
	322 Call 0x1C17DFC
	323 Move X8, 0xB9F000
	324 Move X8, [X8+160]
	325 Add X0, X19, 8
	326 Move X3, [X8]
	327 Add X1, X31, 24
	328 Move X2, X19
	329 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	330 Move X20, [X31+96]
	331 Move X19, [X31+104]
	332 Move X22, [X31+80]
	333 Move X21, [X31+88]
	334 Move X24, [X31+64]
	335 Move X23, [X31+72]
	336 Move X26, [X31+48]
	337 Move X25, [X31+56]
	338 Move X28, [X31+32]
	339 Move X27, [X31+40]
	340 Move X30, [X31+16]
	341 Add X31, X31, 112
	342 Return 
	343 Move X0, 0xB63000
	344 Move X0, [X0+1400]
	345 Call 0x1C17D08
	346 Call 0x1C17F10
	347 Move X20, X0
	348 Move X0, 0xB96000
	349 Move X0, [X0+3016]
	350 Call 0x1C17D08
	351 Move X1, X0
	352 Move X0, X20
	353 Move X2, X31
	354 Call ArgumentException..ctor, X0, X1
	355 Move X0, 0xB9F000
	356 Move X0, [X0+176]
	357 Call 0x1C17D08
	358 Move X1, X0
	359 Move X0, X20
	360 Call 0x1C17DEC
	361 Call 0x1C17F20
	362 Call 0x1C17F20
	363 Call 0x1C17F20
	364 Call 0x1C17F28
	365 Call 0x1C17F20
	366 Call 0x1C17F20
	367 Call 0x1C17F20
	368 Call 0x1C17F20
	369 Call 0x1C17F20
	370 Call 0x1C17F20
	371 Call 0x1C17F20
	372 Move X20, X0
	373 NotImplemented "Instruction CMP not yet implemented."
	374 Move X0, X20
	375 Call 0x3EB2AD0
	376 Move X20, X0
	377 Move X0, 0xB5B000
	378 Move X0, [X0+2000]
	379 Call 0x1C17D08
	380 Move X8, [X20]
	381 Move X1, [X8]
	382 Call 0x1C18270
	383 Move TEMP, X0
	384 And TEMP, TEMP, 1
	385 Compare TEMP, 1
	386 JumpIfNotEqual {407}
	387 Move X20, [X20]
	388 Call 0x3EB2AE0
	389 Move TEMP, 1
	390 Not TEMP
	391 Move W8, TEMP
	392 Move [X19+8], W8
	393 Move X0, 0xB9E000
	394 Move X0, [X0+3912]
	395 Call 0x1C17D08
	396 Move W8, [X0+224]
	397 Compare W8, 0
	398 JumpIfNotEqual {400}
	399 Call 0x1C17DFC
	400 Move X0, 0xB9F000
	401 Move X0, [X0+120]
	402 Call 0x1C17D08
	403 Move X2, X0
	404 Move X0, X19
	405 Move X1, X20
	406 Call AsyncTaskMethodBuilder`1<Object>.SetException, X0, X1
	407 Move W0, 8
	408 Call 0x3EB2AF0
	409 Move X8, [X20]
	410 Move [X0], X8
	411 Move X1, 0x91C000
	412 Add X1, X1, 3672
	413 Move X2, X31
	414 Call 0x3EB2B00
	415 Move X20, X0
	416 Call 0x3EB2AE0
	417 Move X0, X20
	418 Call 0x1D2D690
	419 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x03599AA0 BL 0x1C16F20
	0x03599AA4 BL 0x1C16F20
	0x03599AA8 BL 0x1C16F20
	0x03599AAC BL 0x1C16F20
	0x03599AB0 B 0x3599B10
	0x03599AB4 B 0x3599B10
	0x03599AB8 B 0x3599B10
	0x03599ABC B 0x3599B10
	0x03599AC0 B 0x3599B10
	0x03599AC4 B 0x3599B10
	0x03599AC8 B 0x3599B10
	0x03599ACC B 0x3599B10
	0x03599AD0 B 0x3599B10
	0x03599AD4 B 0x3599B10
	0x03599AD8 B 0x3599B10
	0x03599ADC B 0x3599B10
	0x03599AE0 B 0x3599B10
	0x03599AE4 B 0x3599B10
	0x03599AE8 B 0x3599B10
	0x03599AEC B 0x3599B10
	0x03599AF0 B 0x3599B10
	0x03599AF4 B 0x3599B10
	0x03599AF8 B 0x3599B10
	0x03599AFC B 0x3599B10
	0x03599B00 B 0x3599B10
	0x03599B04 B 0x3599B10
	0x03599B08 B 0x3599B10
	0x03599B0C B 0x3599B10
	0x03599B10 MOV X20, X0
	0x03599B14 CMP W1, 0x1
	0x03599B18 B.NE 0x3599BA8

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xE47000
	007 Move X21, 0xB9E000
	008 Move W8, [X22+4040]
	009 Move X21, [X21+3912]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xB9F000
	017 Move X0, [X0+128]
	018 Call 0x1C17CF4
	019 Move X0, 0xB9E000
	020 Move X0, [X0+3912]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+4040], W8
	024 Move X0, [X21]
	025 Move X21, 0xB9F000
	026 Move W8, [X0+224]
	027 Move X21, [X21+128]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X2, [X21]
	032 Add X0, X20, 8
	033 Move X1, X19
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Call AsyncTaskMethodBuilder`1<Object>.SetStateMachine, X0, X1
	040 Return 

