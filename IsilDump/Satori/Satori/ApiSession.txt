Type: Satori.ApiSession

Method: Satori.IApiProperties get_Properties()

Disassembly:
	0x035966F4 STR W19, [X22 + 0x18]
	0x035966F8 LDP X20, X19, [X31 + 0x20]

ISIL:
	001 Move X0, [X0+16]
	002 Return X0

Method: Satori.ApiProperties get__properties()

Disassembly:
	0x035966FC LDP X22, X21, [X31 + 0x10]
	0x03596700 LDR X30, [X31], #0x30

ISIL:
	001 Move X0, [X0+16]
	002 Return X0

Method: System.Void set__properties(Satori.ApiProperties value)

Disassembly:
	0x03596704 RET
	0x03596708 SUB X31, X31, 0xB0

ISIL:
	001 Move [X0+16], X1
	002 Return 

Method: System.String get_RefreshToken()

Disassembly:
	0x0359670C STR X30, [X31 + 0x70]
	0x03596710 STP X24, X23, [X31 + 0x80]

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void set_RefreshToken(System.String value)

Disassembly:
	0x03596714 STP X22, X21, [X31 + 0x90]
	0x03596718 STP X20, X19, [X31 + 0xA0]

ISIL:
	001 Move [X0+24], X1
	002 Return 

Method: System.String get_Token()

Disassembly:
	0x0359671C ADRP X24, 0xE49000
	0x03596720 ADRP X23, 0xB60000

ISIL:
	001 Move X0, [X0+32]
	002 Return X0

Method: System.Void set_Token(System.String value)

Disassembly:
	0x03596724 LDRB W8, [X24 + 0xFB3]
	0x03596728 LDR X23, [X23 + 0x280]

ISIL:
	001 Move [X0+32], X1
	002 Return 

Method: System.String ToString()

Disassembly:
	0x0359672C MOV X20, X3
	0x03596730 MOV X21, X2
	0x03596734 MOV X22, X1
	0x03596738 MOV X19, X0
	0x0359673C TBNZ X8, 0x0, 0x3596760
	0x03596740 ADRP X0, 0xBA0000
	0x03596744 LDR X0, [X0 + 0xF38]
	0x03596748 BL 0x1C16CF4
	0x0359674C ADRP X0, 0xB60000
	0x03596750 LDR X0, [X0 + 0x280]
	0x03596754 BL 0x1C16CF4
	0x03596758 MOVZ W8, 0x1
	0x0359675C STRB W8, [X24 + 0xFB3]
	0x03596760 LDR X0, [X23]
	0x03596764 MOVI V0.2D, 0x0
	0x03596768 STR X31, [X31 + 0x60]
	0x0359676C STP V0, V0, [X31 + 0x40]
	0x03596770 STP V0, V0, [X31 + 0x20]
	0x03596774 ADRP X23, 0xBA0000
	0x03596778 LDR W8, [X0 + 0xE0]
	0x0359677C LDR X23, [X23 + 0xF38]
	0x03596780 CBNZ W8, 0x3596788
	0x03596784 BL 0x1C16DFC
	0x03596788 ADD X8, X31, 0x8
	0x0359678C MOV X0, X31
	0x03596790 BL 0x32C4770
	0x03596794 LDUR V0, [X31 + 0x8]
	0x03596798 LDR X9, [X31 + 0x18]
	0x0359679C LDR X2, [X23]
	0x035967A0 ADD X8, X31, 0x20
	0x035967A4 STR X20, [X31 + 0x58]
	0x035967A8 ORR X20, X8, 0xF
	0x035967AC MOVN W10, 0x0
	0x035967B0 ADD X1, X31, 0x20
	0x035967B4 MOV X0, X20
	0x035967B8 STP X22, X21, [X31 + 0x48]
	0x035967BC STUR V0, [X31 + 0x28]
	0x035967C0 STP X9, X19, [X31 + 0x38]
	0x035967C4 STR W10, [X31 + 0x20]
	0x035967C8 BL 0x2190CB8
	0x035967CC MOV X0, X20
	0x035967D0 MOV X1, X31
	0x035967D4 BL 0x32C47F8
	0x035967D8 LDP X20, X19, [X31 + 0xA0]
	0x035967DC LDP X22, X21, [X31 + 0x90]
	0x035967E0 LDP X24, X23, [X31 + 0x80]
	0x035967E4 LDR X30, [X31 + 0x70]
	0x035967E8 ADD X31, X31, 0xB0
	0x035967EC RET
	0x035967F0 SUB X31, X31, 0xB0
	0x035967F4 STR X30, [X31 + 0x70]
	0x035967F8 STP X24, X23, [X31 + 0x80]
	0x035967FC STP X22, X21, [X31 + 0x90]
	0x03596800 STP X20, X19, [X31 + 0xA0]
	0x03596804 ADRP X24, 0xE49000
	0x03596808 ADRP X23, 0xB60000
	0x0359680C LDRB W8, [X24 + 0xFB4]
	0x03596810 LDR X23, [X23 + 0x280]
	0x03596814 MOV X20, X3
	0x03596818 MOV X21, X2
	0x0359681C MOV X22, X1
	0x03596820 MOV X19, X0
	0x03596824 TBNZ X8, 0x0, 0x3596848
	0x03596828 ADRP X0, 0xBA0000
	0x0359682C LDR X0, [X0 + 0xF40]
	0x03596830 BL 0x1C16CF4
	0x03596834 ADRP X0, 0xB60000
	0x03596838 LDR X0, [X0 + 0x280]
	0x0359683C BL 0x1C16CF4
	0x03596840 MOVZ W8, 0x1
	0x03596844 STRB W8, [X24 + 0xFB4]
	0x03596848 LDR X0, [X23]
	0x0359684C MOVI V0.2D, 0x0
	0x03596850 STR X31, [X31 + 0x60]
	0x03596854 STP V0, V0, [X31 + 0x40]
	0x03596858 STP V0, V0, [X31 + 0x20]
	0x0359685C ADRP X23, 0xBA0000
	0x03596860 LDR W8, [X0 + 0xE0]
	0x03596864 LDR X23, [X23 + 0xF40]
	0x03596868 CBNZ W8, 0x3596870
	0x0359686C BL 0x1C16DFC
	0x03596870 ADD X8, X31, 0x8
	0x03596874 MOV X0, X31
	0x03596878 BL 0x32C4770
	0x0359687C LDUR V0, [X31 + 0x8]
	0x03596880 LDR X9, [X31 + 0x18]
	0x03596884 LDR X2, [X23]
	0x03596888 ADD X8, X31, 0x20
	0x0359688C STR X20, [X31 + 0x58]
	0x03596890 ORR X20, X8, 0xF
	0x03596894 MOVN W10, 0x0
	0x03596898 ADD X1, X31, 0x20
	0x0359689C MOV X0, X20
	0x035968A0 STP X22, X21, [X31 + 0x48]
	0x035968A4 STUR V0, [X31 + 0x28]
	0x035968A8 STP X9, X19, [X31 + 0x38]
	0x035968AC STR W10, [X31 + 0x20]
	0x035968B0 BL 0x2190DB8
	0x035968B4 MOV X0, X20
	0x035968B8 MOV X1, X31
	0x035968BC BL 0x32C47F8
	0x035968C0 LDP X20, X19, [X31 + 0xA0]
	0x035968C4 LDP X22, X21, [X31 + 0x90]
	0x035968C8 LDP X24, X23, [X31 + 0x80]
	0x035968CC LDR X30, [X31 + 0x70]
	0x035968D0 ADD X31, X31, 0xB0
	0x035968D4 RET
	0x035968D8 SUB X31, X31, 0xB0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0xE4A000
	008 Move X21, 0xB5E000
	009 Move X22, 0xB5E000
	010 Move W8, [X20+4012]
	011 Move X21, [X21+2440]
	012 Move X22, [X22+2512]
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {38}
	018 Move X0, 0xB5E000
	019 Move X0, [X0+2512]
	020 Call 0x1C17CF4
	021 Move X0, 0xB5E000
	022 Move X0, [X0+2104]
	023 Call 0x1C17CF4
	024 Move X0, 0xB99000
	025 Move X0, [X0+96]
	026 Call 0x1C17CF4
	027 Move X0, 0xBA1000
	028 Move X0, [X0+3856]
	029 Call 0x1C17CF4
	030 Move X0, 0xB98000
	031 Move X0, [X0+3448]
	032 Call 0x1C17CF4
	033 Move X0, 0xB5E000
	034 Move X0, [X0+2440]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X20+4012], W8
	038 Move X0, [X22]
	039 Move X21, [X21]
	040 Move W1, 4
	041 Call 0x1C17D6C
	042 Compare X0, 0
	043 JumpIfEqual {125}
	044 Move X20, X0
	045 Compare X21, 0
	046 JumpIfEqual {53}
	047 Move X8, [X20]
	048 Move X0, X21
	049 Move X1, [X8+64]
	050 Call 0x1C17E00
	051 Compare X0, 0
	052 JumpIfEqual {122}
	053 Move W8, [X20+24]
	054 Compare W8, 0
	055 JumpIfEqual {121}
	056 Move X22, 0xBA1000
	057 Move X22, [X22+3856]
	058 Move [X20+32], X21
	059 Move X0, [X22]
	060 Compare X0, 0
	061 JumpIfEqual {68}
	062 Move X8, [X20]
	063 Move X1, [X8+64]
	064 Call 0x1C17E00
	065 Compare X0, 0
	066 JumpIfEqual {122}
	067 Move W8, [X20+24]
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Move X9, [X22]
	070 Move [X20+40], X9
	071 Move X21, [X19+16]
	072 Compare X21, 0
	073 JumpIfEqual {81}
	074 Move X8, [X20]
	075 Move X0, X21
	076 Move X1, [X8+64]
	077 Call 0x1C17E00
	078 Compare X0, 0
	079 JumpIfEqual {122}
	080 Move W8, [X20+24]
	081 NotImplemented "Instruction CMP not yet implemented."
	082 Move X22, 0xB5E000
	083 Move X22, [X22+2104]
	084 Move [X20+48], X21
	085 Move X0, [X22]
	086 Compare X0, 0
	087 JumpIfEqual {94}
	088 Move X8, [X20]
	089 Move X1, [X8+64]
	090 Call 0x1C17E00
	091 Compare X0, 0
	092 JumpIfEqual {122}
	093 Move W8, [X20+24]
	094 NotImplemented "Instruction CMP not yet implemented."
	095 Move X8, [X22]
	096 Move X21, 0xB99000
	097 Move X23, 0xB98000
	098 Move X21, [X21+96]
	099 Move X23, [X23+3448]
	100 Move X0, X20
	101 Move X1, X31
	102 Move [X20+56], X8
	103 Call String.Concat, X0
	104 Move X2, [X19+24]
	105 Move X1, [X21]
	106 Move X3, [X22]
	107 Move X4, X31
	108 Call String.Concat, X0, X1, X2, X3
	109 Move X2, [X19+32]
	110 Move X1, [X23]
	111 Move X3, [X22]
	112 Move X20, [X31+32]
	113 Move X19, [X31+40]
	114 Move X22, [X31+16]
	115 Move X21, [X31+24]
	116 Move X4, X31
	117 Move X30, [X31+48]
	118 Move X23, [X31+56]
	119 Call String.Concat, X0, X1, X2, X3
	120 Return X0
	121 Call 0x1C17F28
	122 Call 0x1C17F44
	123 Move X1, X31
	124 Call 0x1C17DEC
	125 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x035968DC STP X30, X27, [X31 + 0x60]
	0x035968E0 STP X26, X25, [X31 + 0x70]

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

