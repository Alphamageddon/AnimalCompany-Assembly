Type: Satori.TransientExceptionDelegate

Method: System.Void .ctor(System.Object object, System.IntPtr method)

Disassembly:
	0x035A838C B 0x35A8438
	0x035A8390 B 0x35A8438
	0x035A8394 B 0x35A8438
	0x035A8398 B 0x35A8438
	0x035A839C B 0x35A8438
	0x035A83A0 B 0x35A8438
	0x035A83A4 B 0x35A8438
	0x035A83A8 B 0x35A8438
	0x035A83AC B 0x35A8438
	0x035A83B0 B 0x35A8438
	0x035A83B4 B 0x35A8438
	0x035A83B8 B 0x35A8438
	0x035A83BC B 0x35A8438
	0x035A83C0 B 0x35A8438
	0x035A83C4 B 0x35A8454
	0x035A83C8 B 0x35A8438
	0x035A83CC B 0x35A8438
	0x035A83D0 B 0x35A8438
	0x035A83D4 B 0x35A8438
	0x035A83D8 B 0x35A8438
	0x035A83DC B 0x35A8438
	0x035A83E0 B 0x35A8438
	0x035A83E4 B 0x35A8438
	0x035A83E8 B 0x35A8438
	0x035A83EC B 0x35A8438
	0x035A83F0 B 0x35A8438
	0x035A83F4 B 0x35A8438
	0x035A83F8 B 0x35A8438
	0x035A83FC B 0x35A8438
	0x035A8400 B 0x35A8438
	0x035A8404 B 0x35A8438
	0x035A8408 B 0x35A8438
	0x035A840C B 0x35A8438
	0x035A8410 B 0x35A8438
	0x035A8414 B 0x35A8438
	0x035A8418 B 0x35A8438
	0x035A841C B 0x35A8438
	0x035A8420 B 0x35A8438
	0x035A8424 B 0x35A8438
	0x035A8428 B 0x35A8438
	0x035A842C B 0x35A8438
	0x035A8430 B 0x35A8438
	0x035A8434 B 0x35A8438
	0x035A8438 MOV X21, X0
	0x035A843C STR X1, [X31 + 0x8]
	0x035A8440 B 0x35A84F0
	0x035A8444 B 0x35A8454
	0x035A8448 B 0x35A8454
	0x035A844C B 0x35A8454
	0x035A8450 B 0x35A8454
	0x035A8454 MOV X21, X0
	0x035A8458 CMP W1, 0x1
	0x035A845C STR X1, [X31 + 0x8]
	0x035A8460 B.NE 0x35A8480
	0x035A8464 MOV X0, X21
	0x035A8468 BL 0x3EB1AD0
	0x035A846C LDR X23, [X0]
	0x035A8470 BL 0x3EB1AE0
	0x035A8474 MOV W21, W31
	0x035A8478 TBNZ X24, 0x1F, 0x35A7B48
	0x035A847C B 0x35A7BAC
	0x035A8480 MOV X23, X31
	0x035A8484 TBZ X24, 0x1F, 0x35A84EC
	0x035A8488 CBZ X22, 0x35A84EC

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X2+8]
	007 Move [X0+32], X1
	008 Move [X0+40], X2
	009 Move X19, X0
	010 Move X20, X2
	011 Move [X0+16], X8
	012 Move W22, [X2+82]
	013 Move [X0+64], X0
	014 Move X0, X2
	015 Move X21, X1
	016 Call 0x1C17D84
	017 Move TEMP, X0
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfNotEqual {24}
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Move X8, -27156480
	023 Add X8, X8, 860
	024 Compare W22, 0
	025 JumpIfEqual {32}
	026 Compare X21, 0
	027 JumpIfEqual {72}
	028 Move X8, [X19+16]
	029 Move X9, [X19+32]
	030 Move [X19+24], X8
	031 Move [X19+64], X9
	032 Move W8, [X19+112]
	033 Compare W8, 0
	034 JumpIfEqual {50}
	035 Move X0, X20
	036 Call 0x1C17D7C
	037 Move W21, W0
	038 Move X0, X20
	039 Call 0x1C18238
	040 Move TEMP, X21
	041 And TEMP, TEMP, 1
	042 Compare TEMP, 1
	043 JumpIfNotEqual {52}
	044 Move TEMP, X0
	045 And TEMP, TEMP, 1
	046 Compare TEMP, 1
	047 JumpIfNotEqual {58}
	048 Move X8, -27156480
	049 Add X8, X8, 1112
	050 Move X8, -27156480
	051 Add X8, X8, 828
	052 Move TEMP, X0
	053 And TEMP, TEMP, 1
	054 Compare TEMP, 1
	055 JumpIfNotEqual {60}
	056 Move X8, -27156480
	057 Add X8, X8, 920
	058 Move X8, -27156480
	059 Add X8, X8, 1052
	060 Move X8, -27156480
	061 Add X8, X8, 876
	062 Move [X19+24], X8
	063 Move X8, -27156480
	064 Add X8, X8, 744
	065 Move [X19+56], X8
	066 Move X20, [X31+32]
	067 Move X19, [X31+40]
	068 Move X22, [X31+16]
	069 Move X21, [X31+24]
	070 Move X30, [X31+48]
	071 Return 
	072 Move X1, -44613632
	073 Add X1, X1, 3811
	074 Move X0, X31
	075 Call 0x1C17F3C
	076 Move X1, X31
	077 Call 0x1C17DEC

Method: System.Boolean Invoke(System.Exception e)

Disassembly:
	0x035AA084 LDR W8, [X19 + 0x10]
	0x035AA088 MOV X0, X19
	0x035AA08C MOV X2, X31
	0x035AA090 SUB W1, W8, 0x1
	0x035AA094 BL 0x3222A1C

ISIL:
	001 Move X8, [X0+64]
	002 Move X3, [X0+24]
	003 Move X2, [X0+40]
	004 Move X0, X8
	005 CallNoReturn X3

Method: System.IAsyncResult BeginInvoke(System.Exception e, System.AsyncCallback callback, System.Object object)

Disassembly:
	0x035AA098 AND W8, W0, 0xFFFF
	0x035AA09C CMP W8, 0x7D
	0x035AA0A0 MOV X21, X31
	0x035AA0A4 B.NE 0x35A9C4C
	0x035AA0A8 MOV X0, X19
	0x035AA0AC BL 0x35A9274
	0x035AA0B0 CBZ X0, 0x35AA4B8
	0x035AA0B4 LDRB W8, [X0 + 0x18]

ISIL:
	001 Subtract X31, X31, 32
	002 Move [X31+8], X31
	003 Move [X31+16], X30
	004 Move [X31], X1
	005 Add X1, X31, 0
	006 Call 0x1C17CB0
	007 Move X30, [X31+16]
	008 Add X31, X31, 32
	009 Return X0

Method: System.Boolean EndInvoke(System.IAsyncResult result)

Disassembly:
	0x035AA0B8 MOV X19, X0
	0x035AA0BC TBNZ X8, 0x0, 0x35AA390
	0x035AA0C0 ADRP X8, 0xB51000
	0x035AA0C4 LDR X8, [X8 + 0xC60]
	0x035AA0C8 MOVZ W1, 0x1
	0x035AA0CC LDR X0, [X8]
	0x035AA0D0 BL 0x1C16D6C
	0x035AA0D4 ADRP X9, 0xB70000
	0x035AA0D8 LDR X8, [X24]
	0x035AA0DC LDR X9, [X9 + 0xD80]

ISIL:
	001 Move [X31-16], X30
	002 Move X0, X1
	003 Move X1, X31
	004 Call 0x1C17CB4
	005 Compare X0, 0
	006 JumpIfEqual {11}
	007 Call 0x1C17E08
	008 Move W0, [X0]
	009 Move X30, [X31+16]
	010 Return X0
	011 Call 0x1C17F20

