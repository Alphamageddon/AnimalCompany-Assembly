Type: Satori.HttpRequestAdapter/<SendAsync>d__8

Method: System.Void MoveNext()

Disassembly:
	0x035A86F8 ADRP X23, 0xB50000
	0x035A86FC LDR X23, [X23 + 0x710]
	0x035A8700 STP V0, V1, [X31 + 0x30]
	0x035A8704 STR X8, [X31 + 0x50]
	0x035A8708 ADRP X24, 0xB4B000
	0x035A870C LDR X24, [X24 + 0x818]
	0x035A8710 LDR X1, [X23]
	0x035A8714 ADD X0, X31, 0x30
	0x035A8718 BL 0x2C0A728
	0x035A871C TBZ X0, 0x0, 0x35A8818
	0x035A8720 CBZ X19, 0x35A886C
	0x035A8724 LDR X8, [X19]
	0x035A8728 LDP X21, X20, [X31 + 0x40]
	0x035A872C LDP X9, X1, [X8 + 0x198]
	0x035A8730 MOV X0, X19
	0x035A8734 BLR X9
	0x035A8738 MOV X22, X0
	0x035A873C CBZ X0, 0x35A8870
	0x035A8740 LDR X8, [X22]
	0x035A8744 LDR X1, [X24]
	0x035A8748 LDRH W9, [X8 + 0x12E]
	0x035A874C CBZ X9, 0x35A8770
	0x035A8750 LDR X10, [X8 + 0xB0]
	0x035A8754 ADD X10, X10, 0x8
	0x035A8758 LDUR X11, [X10 - 0x8]
	0x035A875C CMP X11, X1
	0x035A8760 B.EQ 0x35A8780
	0x035A8764 SUBS X9, X9, 0x1
	0x035A8768 ADD X10, X10, 0x10
	0x035A876C B.NE 0x35A8758
	0x035A8770 MOVZ W2, 0x1
	0x035A8774 MOV X0, X22
	0x035A8778 BL 0x1C5C788
	0x035A877C B 0x35A8790
	0x035A8780 LDR W9, [X10]
	0x035A8784 ADD W9, W9, 0x1
	0x035A8788 ADD X8, X8, W9, 0x4, SXTW
	0x035A878C ADD X0, X8, 0x138
	0x035A8790 LDP X8, X3, [X0]
	0x035A8794 MOV X0, X22
	0x035A8798 MOV X1, X21
	0x035A879C MOV X2, X20
	0x035A87A0 BLR X8
	0x035A87A4 B 0x35A8710
	0x035A87A8 CBZ X19, 0x35A8874
	0x035A87AC LDR X8, [X19]
	0x035A87B0 MOV X0, X19
	0x035A87B4 LDP X9, X1, [X8 + 0x198]
	0x035A87B8 BLR X9
	0x035A87BC CBZ X0, 0x35A8874
	0x035A87C0 ADRP X9, 0xB4B000
	0x035A87C4 LDR X8, [X0]
	0x035A87C8 LDR X9, [X9 + 0x818]
	0x035A87CC ADRP X10, 0xB4E000
	0x035A87D0 MOV X19, X0
	0x035A87D4 LDR X1, [X9]
	0x035A87D8 LDR X10, [X10 + 0x238]
	0x035A87DC LDRH W9, [X8 + 0x12E]
	0x035A87E0 LDR X21, [X10]
	0x035A87E4 CBZ X9, 0x35A8808
	0x035A87E8 LDR X10, [X8 + 0xB0]
	0x035A87EC ADD X10, X10, 0x8
	0x035A87F0 LDUR X11, [X10 - 0x8]
	0x035A87F4 CMP X11, X1
	0x035A87F8 B.EQ 0x35A8830
	0x035A87FC SUBS X9, X9, 0x1
	0x035A8800 ADD X10, X10, 0x10
	0x035A8804 B.NE 0x35A87F0
	0x035A8808 MOVZ W2, 0x1
	0x035A880C MOV X0, X19
	0x035A8810 BL 0x1C5C788
	0x035A8814 B 0x35A8840
	0x035A8818 ADRP X8, 0xB50000
	0x035A881C LDR X8, [X8 + 0x708]
	0x035A8820 ADD X0, X31, 0x30
	0x035A8824 LDR X1, [X8]
	0x035A8828 BL 0x2C0A83C
	0x035A882C B 0x35A8854
	0x035A8830 LDR W9, [X10]
	0x035A8834 ADD W9, W9, 0x1
	0x035A8838 ADD X8, X8, W9, 0x4, SXTW
	0x035A883C ADD X0, X8, 0x138
	0x035A8840 LDP X8, X3, [X0]
	0x035A8844 MOV X0, X19
	0x035A8848 MOV X1, X21
	0x035A884C MOV X2, X20
	0x035A8850 BLR X8
	0x035A8854 LDP X20, X19, [X31 + 0x90]
	0x035A8858 LDP X22, X21, [X31 + 0x80]
	0x035A885C LDP X24, X23, [X31 + 0x70]
	0x035A8860 LDR X30, [X31 + 0x60]
	0x035A8864 ADD X31, X31, 0xA0
	0x035A8868 RET
	0x035A886C BL 0x1C16F20
	0x035A8870 BL 0x1C16F20
	0x035A8874 BL 0x1C16F20
	0x035A8878 B 0x35A8888
	0x035A887C B 0x35A8888
	0x035A8880 B 0x35A8888
	0x035A8884 B 0x35A8888
	0x035A8888 MOV X19, X0
	0x035A888C CMP W1, 0x1
	0x035A8890 B.NE 0x35A88C4
	0x035A8894 MOV X0, X19
	0x035A8898 BL 0x3EB1AD0
	0x035A889C LDR X20, [X0]
	0x035A88A0 BL 0x3EB1AE0
	0x035A88A4 ADRP X8, 0xB50000
	0x035A88A8 LDR X8, [X8 + 0x708]
	0x035A88AC ADD X0, X31, 0x30
	0x035A88B0 LDR X1, [X8]
	0x035A88B4 BL 0x2C0A83C
	0x035A88B8 CBZ X20, 0x35A8854
	0x035A88BC MOV X0, X20
	0x035A88C0 BL 0x1C16F18
	0x035A88C4 MOV X20, X31
	0x035A88C8 B 0x35A88D0
	0x035A88CC MOV X19, X0
	0x035A88D0 ADRP X8, 0xB50000
	0x035A88D4 LDR X8, [X8 + 0x708]
	0x035A88D8 LDR X1, [X8]
	0x035A88DC ADD X0, X31, 0x30
	0x035A88E0 BL 0x2C0A83C
	0x035A88E4 CBNZ X20, 0x35A88F0
	0x035A88E8 MOV X0, X19
	0x035A88EC BL 0x1D2C690
	0x035A88F0 MOV X0, X20
	0x035A88F4 BL 0x1C16F18
	0x035A88F8 BL 0x1990590
	0x035A88FC STR X30, [X31 - 0x30]!
	0x035A8900 STP X22, X21, [X31 + 0x10]
	0x035A8904 STP X20, X19, [X31 + 0x20]
	0x035A8908 ADRP X22, 0xE38000
	0x035A890C ADRP X21, 0xB4E000
	0x035A8910 LDRB W8, [X22 + 0x26]
	0x035A8914 LDR X21, [X21 + 0x130]
	0x035A8918 MOV X19, X1
	0x035A891C MOV X20, X0
	0x035A8920 TBNZ X8, 0x0, 0x35A8944
	0x035A8924 ADRP X0, 0xB4E000
	0x035A8928 LDR X0, [X0 + 0x248]
	0x035A892C BL 0x1C16CF4
	0x035A8930 ADRP X0, 0xB4E000
	0x035A8934 LDR X0, [X0 + 0x130]
	0x035A8938 BL 0x1C16CF4
	0x035A893C MOVZ W8, 0x1
	0x035A8940 STRB W8, [X22 + 0x26]
	0x035A8944 LDR X0, [X21]
	0x035A8948 ADRP X21, 0xB4E000
	0x035A894C LDR W8, [X0 + 0xE0]
	0x035A8950 LDR X21, [X21 + 0x248]
	0x035A8954 CBNZ W8, 0x35A895C
	0x035A8958 BL 0x1C16DFC
	0x035A895C LDR X2, [X21]
	0x035A8960 ADD X0, X20, 0x8
	0x035A8964 MOV X1, X19
	0x035A8968 LDP X20, X19, [X31 + 0x20]
	0x035A896C LDP X22, X21, [X31 + 0x10]
	0x035A8970 LDR X30, [X31], #0x30
	0x035A8974 B 0x2632228
	0x035A8978 MOV X1, X31
	0x035A897C B 0x33A51F0
	0x035A8980 LDR X0, [X0 + 0x10]
	0x035A8984 RET
	0x035A8988 STR X1, [X0 + 0x10]
	0x035A898C RET
	0x035A8990 LDR X0, [X0 + 0x18]
	0x035A8994 RET
	0x035A8998 STR X1, [X0 + 0x18]
	0x035A899C RET
	0x035A89A0 STP X30, X21, [X31 - 0x20]!
	0x035A89A4 STP X20, X19, [X31 + 0x10]
	0x035A89A8 ADRP X20, 0xE38000
	0x035A89AC ADRP X21, 0xB4C000
	0x035A89B0 LDRB W8, [X20 + 0x28]
	0x035A89B4 LDR X21, [X21 + 0x9F0]
	0x035A89B8 MOV X19, X0
	0x035A89BC TBNZ X8, 0x0, 0x35A89D4
	0x035A89C0 ADRP X0, 0xB4C000
	0x035A89C4 LDR X0, [X0 + 0x9F0]
	0x035A89C8 BL 0x1C16CF4
	0x035A89CC MOVZ W8, 0x1
	0x035A89D0 STRB W8, [X20 + 0x28]
	0x035A89D4 LDR X0, [X21]
	0x035A89D8 LDR W8, [X0 + 0xE0]
	0x035A89DC CBNZ W8, 0x35A89E4
	0x035A89E0 BL 0x1C16DFC
	0x035A89E4 MOV X0, X31
	0x035A89E8 BL 0x33616A4
	0x035A89EC MOV X1, X0
	0x035A89F0 MOV X0, X19
	0x035A89F4 LDP X20, X19, [X31 + 0x10]
	0x035A89F8 LDP X30, X21, [X31], #0x20
	0x035A89FC B 0x35A8A00
	0x035A8A00 STR X30, [X31 - 0x30]!
	0x035A8A04 STP X22, X21, [X31 + 0x10]
	0x035A8A08 STP X20, X19, [X31 + 0x20]
	0x035A8A0C ADRP X22, 0xE38000
	0x035A8A10 ADRP X21, 0xB8F000
	0x035A8A14 LDRB W8, [X22 + 0x2A]
	0x035A8A18 LDR X21, [X21 + 0x368]
	0x035A8A1C MOV X19, X1
	0x035A8A20 MOV X20, X0
	0x035A8A24 TBNZ X8, 0x0, 0x35A8A54
	0x035A8A28 ADRP X0, 0xB4C000
	0x035A8A2C LDR X0, [X0 + 0x9F0]
	0x035A8A30 BL 0x1C16CF4
	0x035A8A34 ADRP X0, 0xB8F000
	0x035A8A38 LDR X0, [X0 + 0x368]
	0x035A8A3C BL 0x1C16CF4
	0x035A8A40 ADRP X0, 0xB4D000
	0x035A8A44 LDR X0, [X0 + 0x570]
	0x035A8A48 BL 0x1C16CF4
	0x035A8A4C MOVZ W8, 0x1
	0x035A8A50 STRB W8, [X22 + 0x2A]
	0x035A8A54 LDR X0, [X21]
	0x035A8A58 ADRP X22, 0xB4D000
	0x035A8A5C LDR W8, [X0 + 0xE0]
	0x035A8A60 LDR X22, [X22 + 0x570]
	0x035A8A64 CBNZ W8, 0x35A8A70
	0x035A8A68 BL 0x1C16DFC
	0x035A8A6C LDR X0, [X21]
	0x035A8A70 LDR X8, [X0 + 0xB8]
	0x035A8A74 LDR X0, [X22]
	0x035A8A78 LDR X22, [X20 + 0x18]
	0x035A8A7C ADRP X20, 0xB4C000
	0x035A8A80 LDR X21, [X8]
	0x035A8A84 LDR W8, [X0 + 0xE0]
	0x035A8A88 LDR X20, [X20 + 0x9F0]
	0x035A8A8C CBNZ W8, 0x35A8A94
	0x035A8A90 BL 0x1C16DFC
	0x035A8A94 SCVTF D0, X22
	0x035A8A98 MOV X0, X31
	0x035A8A9C BL 0x3394754
	0x035A8AA0 LDR X8, [X20]
	0x035A8AA4 MOV X20, X0
	0x035A8AA8 LDR W9, [X8 + 0xE0]
	0x035A8AAC CBNZ W9, 0x35A8AB8
	0x035A8AB0 MOV X0, X8
	0x035A8AB4 BL 0x1C16DFC
	0x035A8AB8 MOV X0, X21
	0x035A8ABC MOV X1, X20
	0x035A8AC0 MOV X2, X31
	0x035A8AC4 BL 0x3362E18
	0x035A8AC8 MOV X1, X0
	0x035A8ACC MOV X0, X19
	0x035A8AD0 LDP X20, X19, [X31 + 0x20]
	0x035A8AD4 LDP X22, X21, [X31 + 0x10]
	0x035A8AD8 MOV X2, X31
	0x035A8ADC LDR X30, [X31], #0x30
	0x035A8AE0 B 0x3363220
	0x035A8AE4 STP X30, X21, [X31 - 0x20]!
	0x035A8AE8 STP X20, X19, [X31 + 0x10]
	0x035A8AEC ADRP X20, 0xE38000
	0x035A8AF0 ADRP X21, 0xB4C000
	0x035A8AF4 LDRB W8, [X20 + 0x29]
	0x035A8AF8 LDR X21, [X21 + 0x9F0]
	0x035A8AFC MOV X19, X0
	0x035A8B00 TBNZ X8, 0x0, 0x35A8B18
	0x035A8B04 ADRP X0, 0xB4C000
	0x035A8B08 LDR X0, [X0 + 0x9F0]
	0x035A8B0C BL 0x1C16CF4
	0x035A8B10 MOVZ W8, 0x1
	0x035A8B14 STRB W8, [X20 + 0x29]
	0x035A8B18 LDR X0, [X21]
	0x035A8B1C LDR W8, [X0 + 0xE0]
	0x035A8B20 CBNZ W8, 0x35A8B28
	0x035A8B24 BL 0x1C16DFC
	0x035A8B28 MOV X0, X31
	0x035A8B2C BL 0x33616A4
	0x035A8B30 MOV X1, X0
	0x035A8B34 MOV X0, X19
	0x035A8B38 LDP X20, X19, [X31 + 0x10]
	0x035A8B3C LDP X30, X21, [X31], #0x20
	0x035A8B40 B 0x35A8B44
	0x035A8B44 STR X30, [X31 - 0x30]!
	0x035A8B48 STP X22, X21, [X31 + 0x10]
	0x035A8B4C STP X20, X19, [X31 + 0x20]
	0x035A8B50 ADRP X22, 0xE38000
	0x035A8B54 ADRP X21, 0xB8F000
	0x035A8B58 LDRB W8, [X22 + 0x2B]
	0x035A8B5C LDR X21, [X21 + 0x368]
	0x035A8B60 MOV X19, X1
	0x035A8B64 MOV X20, X0
	0x035A8B68 TBNZ X8, 0x0, 0x35A8B98
	0x035A8B6C ADRP X0, 0xB4C000
	0x035A8B70 LDR X0, [X0 + 0x9F0]
	0x035A8B74 BL 0x1C16CF4
	0x035A8B78 ADRP X0, 0xB8F000
	0x035A8B7C LDR X0, [X0 + 0x368]
	0x035A8B80 BL 0x1C16CF4
	0x035A8B84 ADRP X0, 0xB4D000
	0x035A8B88 LDR X0, [X0 + 0x570]
	0x035A8B8C BL 0x1C16CF4
	0x035A8B90 MOVZ W8, 0x1
	0x035A8B94 STRB W8, [X22 + 0x2B]
	0x035A8B98 LDR X0, [X21]
	0x035A8B9C ADRP X22, 0xB4D000
	0x035A8BA0 LDR W8, [X0 + 0xE0]
	0x035A8BA4 LDR X22, [X22 + 0x570]
	0x035A8BA8 CBNZ W8, 0x35A8BB4
	0x035A8BAC BL 0x1C16DFC
	0x035A8BB0 LDR X0, [X21]
	0x035A8BB4 LDR X8, [X0 + 0xB8]
	0x035A8BB8 LDR X0, [X22]
	0x035A8BBC LDR X22, [X20 + 0x20]
	0x035A8BC0 ADRP X20, 0xB4C000
	0x035A8BC4 LDR X21, [X8]
	0x035A8BC8 LDR W8, [X0 + 0xE0]
	0x035A8BCC LDR X20, [X20 + 0x9F0]
	0x035A8BD0 CBNZ W8, 0x35A8BD8
	0x035A8BD4 BL 0x1C16DFC
	0x035A8BD8 SCVTF D0, X22
	0x035A8BDC MOV X0, X31
	0x035A8BE0 BL 0x3394754
	0x035A8BE4 LDR X8, [X20]
	0x035A8BE8 MOV X20, X0
	0x035A8BEC LDR W9, [X8 + 0xE0]
	0x035A8BF0 CBNZ W9, 0x35A8BFC
	0x035A8BF4 MOV X0, X8
	0x035A8BF8 BL 0x1C16DFC
	0x035A8BFC MOV X0, X21
	0x035A8C00 MOV X1, X20
	0x035A8C04 MOV X2, X31
	0x035A8C08 BL 0x3362E18
	0x035A8C0C MOV X1, X0
	0x035A8C10 MOV X0, X19
	0x035A8C14 LDP X20, X19, [X31 + 0x20]
	0x035A8C18 LDP X22, X21, [X31 + 0x10]
	0x035A8C1C MOV X2, X31
	0x035A8C20 LDR X30, [X31], #0x30
	0x035A8C24 B 0x3363220
	0x035A8C28 LDR X0, [X0 + 0x20]
	0x035A8C2C RET
	0x035A8C30 STR X1, [X0 + 0x20]
	0x035A8C34 RET
	0x035A8C38 LDR X0, [X0 + 0x28]
	0x035A8C3C RET
	0x035A8C40 STR X1, [X0 + 0x28]
	0x035A8C44 RET
	0x035A8C48 LDR X0, [X0 + 0x30]
	0x035A8C4C RET
	0x035A8C50 STR X1, [X0 + 0x30]
	0x035A8C54 RET
	0x035A8C58 SUB X31, X31, 0x40
	0x035A8C5C STR X30, [X31 + 0x10]
	0x035A8C60 STP X22, X21, [X31 + 0x20]
	0x035A8C64 STP X20, X19, [X31 + 0x30]
	0x035A8C68 ADRP X19, 0xE38000
	0x035A8C6C ADRP X21, 0xB4B000
	0x035A8C70 LDRB W8, [X19 + 0x2C]
	0x035A8C74 LDR X21, [X21 + 0x9D0]
	0x035A8C78 MOV X20, X0
	0x035A8C7C TBNZ X8, 0x0, 0x35A8CAC
	0x035A8C80 ADRP X0, 0xB4D000
	0x035A8C84 LDR X0, [X0 + 0xA60]
	0x035A8C88 BL 0x1C16CF4
	0x035A8C8C ADRP X0, 0xB4B000
	0x035A8C90 LDR X0, [X0 + 0x9D0]
	0x035A8C94 BL 0x1C16CF4
	0x035A8C98 ADRP X0, 0xB8F000
	0x035A8C9C LDR X0, [X0 + 0x608]
	0x035A8CA0 BL 0x1C16CF4
	0x035A8CA4 MOVZ W8, 0x1
	0x035A8CA8 STRB W8, [X19 + 0x2C]
	0x035A8CAC LDR X0, [X21]
	0x035A8CB0 MOVZ W1, 0x5
	0x035A8CB4 BL 0x1C16D6C
	0x035A8CB8 CBZ X0, 0x35A8E04
	0x035A8CBC LDR X21, [X20 + 0x10]
	0x035A8CC0 MOV X19, X0
	0x035A8CC4 CBZ X21, 0x35A8CDC
	0x035A8CC8 LDR X8, [X19]
	0x035A8CCC MOV X0, X21
	0x035A8CD0 LDR X1, [X8 + 0x40]
	0x035A8CD4 BL 0x1C16E00
	0x035A8CD8 CBZ X0, 0x35A8DF8
	0x035A8CDC LDR W8, [X19 + 0x18]
	0x035A8CE0 CBZ W8, 0x35A8DF4
	0x035A8CE4 ADRP X22, 0xB4D000
	0x035A8CE8 LDR X22, [X22 + 0xA60]
	0x035A8CEC STR X21, [X19 + 0x20]
	0x035A8CF0 LDR X8, [X20 + 0x18]
	0x035A8CF4 ADD X1, X31, 0x18
	0x035A8CF8 LDR X0, [X22]
	0x035A8CFC STR X8, [X31 + 0x18]
	0x035A8D00 BL 0x1C16E04
	0x035A8D04 MOV X21, X0
	0x035A8D08 CBZ X0, 0x35A8D20
	0x035A8D0C LDR X8, [X19]
	0x035A8D10 MOV X0, X21
	0x035A8D14 LDR X1, [X8 + 0x40]
	0x035A8D18 BL 0x1C16E00
	0x035A8D1C CBZ X0, 0x35A8DF8
	0x035A8D20 LDR W8, [X19 + 0x18]
	0x035A8D24 CMP W8, 0x1
	0x035A8D28 B.LS 0x35A8DF4
	0x035A8D2C STR X21, [X19 + 0x28]
	0x035A8D30 LDR X21, [X20 + 0x28]
	0x035A8D34 CBZ X21, 0x35A8D50
	0x035A8D38 LDR X8, [X19]
	0x035A8D3C MOV X0, X21
	0x035A8D40 LDR X1, [X8 + 0x40]
	0x035A8D44 BL 0x1C16E00
	0x035A8D48 CBZ X0, 0x35A8DF8
	0x035A8D4C LDR W8, [X19 + 0x18]
	0x035A8D50 CMP W8, 0x2
	0x035A8D54 B.LS 0x35A8DF4
	0x035A8D58 STR X21, [X19 + 0x30]
	0x035A8D5C LDR X8, [X20 + 0x20]
	0x035A8D60 LDR X0, [X22]
	0x035A8D64 ADD X1, X31, 0x8
	0x035A8D68 STR X8, [X31 + 0x8]
	0x035A8D6C BL 0x1C16E04
	0x035A8D70 MOV X21, X0
	0x035A8D74 CBZ X0, 0x35A8D8C
	0x035A8D78 LDR X8, [X19]
	0x035A8D7C MOV X0, X21
	0x035A8D80 LDR X1, [X8 + 0x40]
	0x035A8D84 BL 0x1C16E00
	0x035A8D88 CBZ X0, 0x35A8DF8
	0x035A8D8C LDR W8, [X19 + 0x18]
	0x035A8D90 CMP W8, 0x3
	0x035A8D94 B.LS 0x35A8DF4
	0x035A8D98 STR X21, [X19 + 0x38]
	0x035A8D9C LDR X20, [X20 + 0x30]
	0x035A8DA0 CBZ X20, 0x35A8DBC
	0x035A8DA4 LDR X8, [X19]
	0x035A8DA8 MOV X0, X20
	0x035A8DAC LDR X1, [X8 + 0x40]
	0x035A8DB0 BL 0x1C16E00
	0x035A8DB4 CBZ X0, 0x35A8DF8
	0x035A8DB8 LDR W8, [X19 + 0x18]
	0x035A8DBC CMP W8, 0x4
	0x035A8DC0 B.LS 0x35A8DF4
	0x035A8DC4 ADRP X8, 0xB8F000
	0x035A8DC8 LDR X8, [X8 + 0x608]
	0x035A8DCC STR X20, [X19 + 0x40]
	0x035A8DD0 MOV X1, X19
	0x035A8DD4 MOV X2, X31
	0x035A8DD8 LDR X0, [X8]
	0x035A8DDC BL 0x3227C5C
	0x035A8DE0 LDP X20, X19, [X31 + 0x30]
	0x035A8DE4 LDP X22, X21, [X31 + 0x20]
	0x035A8DE8 LDR X30, [X31 + 0x10]
	0x035A8DEC ADD X31, X31, 0x40
	0x035A8DF0 RET
	0x035A8DF4 BL 0x1C16F28
	0x035A8DF8 BL 0x1C16F44
	0x035A8DFC MOV X1, X31
	0x035A8E00 BL 0x1C16DEC
	0x035A8E04 BL 0x1C16F20
	0x035A8E08 STR D8, [X31 - 0x30]!
	0x035A8E0C STP X30, X21, [X31 + 0x10]
	0x035A8E10 STP X20, X19, [X31 + 0x20]
	0x035A8E14 ADRP X20, 0xE38000
	0x035A8E18 ADRP X21, 0xB54000
	0x035A8E1C LDRB W8, [X20 + 0x2F]
	0x035A8E20 LDR X21, [X21 + 0x8D8]
	0x035A8E24 MOV X19, X0
	0x035A8E28 TBNZ X8, 0x0, 0x35A8E58
	0x035A8E2C ADRP X0, 0xB54000
	0x035A8E30 LDR X0, [X0 + 0x8D8]
	0x035A8E34 BL 0x1C16CF4
	0x035A8E38 ADRP X0, 0xB54000
	0x035A8E3C LDR X0, [X0 + 0x9E8]
	0x035A8E40 BL 0x1C16CF4
	0x035A8E44 ADRP X0, 0xB4B000
	0x035A8E48 LDR X0, [X0 + 0x5A8]
	0x035A8E4C BL 0x1C16CF4
	0x035A8E50 MOVZ W8, 0x1
	0x035A8E54 STRB W8, [X20 + 0x2F]
	0x035A8E58 LDR X0, [X21]
	0x035A8E5C MOVZ W1, 0x1
	0x035A8E60 BL 0x1C16D6C
	0x035A8E64 CBZ X0, 0x35A8F7C
	0x035A8E68 LDR W8, [X0 + 0x18]
	0x035A8E6C MOV X1, X0
	0x035A8E70 CBZ W8, 0x35A8F80
	0x035A8E74 MOVZ W8, 0x2E
	0x035A8E78 STRH W8, [X1 + 0x20]
	0x035A8E7C CBZ X19, 0x35A8F7C
	0x035A8E80 MOV X0, X19
	0x035A8E84 MOV X2, X31
	0x035A8E88 BL 0x3229E68
	0x035A8E8C CBZ X0, 0x35A8F7C
	0x035A8E90 LDR W8, [X0 + 0x18]
	0x035A8E94 CMP W8, 0x1
	0x035A8E98 B.LS 0x35A8F80
	0x035A8E9C LDR X19, [X0 + 0x28]
	0x035A8EA0 CBZ X19, 0x35A8F7C
	0x035A8EA4 ADRP X8, 0xB4B000
	0x035A8EA8 LDR X8, [X8 + 0x5A8]
	0x035A8EAC ADRP X21, 0xB54000
	0x035A8EB0 LDR W20, [X19 + 0x10]
	0x035A8EB4 LDR X0, [X8]
	0x035A8EB8 LDR W8, [X0 + 0xE0]
	0x035A8EBC LDR X21, [X21 + 0x9E8]
	0x035A8EC0 CBNZ W8, 0x35A8EC8
	0x035A8EC4 BL 0x1C16DFC
	0x035A8EC8 LDR X0, [X21]
	0x035A8ECC SCVTF D0, W20
	0x035A8ED0 FMOV D1, 0.25
	0x035A8ED4 FMUL D0, D0, D1
	0x035A8ED8 LDR W8, [X0 + 0xE0]
	0x035A8EDC FRINTP D0, D0
	0x035A8EE0 FMOV D1, 4
	0x035A8EE4 FMUL D8, D0, D1
	0x035A8EE8 CBNZ W8, 0x35A8EF0
	0x035A8EEC BL 0x1C16DFC
	0x035A8EF0 MOV V0.16B, V8.16B
	0x035A8EF4 MOV X0, X31
	0x035A8EF8 BL 0x331EFAC
	0x035A8EFC MOV W1, W0
	0x035A8F00 MOVZ W2, 0x3D
	0x035A8F04 MOV X0, X19
	0x035A8F08 MOV X3, X31
	0x035A8F0C BL 0x3228A68
	0x035A8F10 CBZ X0, 0x35A8F7C
	0x035A8F14 MOVZ W1, 0x2D
	0x035A8F18 MOVZ W2, 0x2B
	0x035A8F1C MOV X3, X31
	0x035A8F20 BL 0x32296D0
	0x035A8F24 CBZ X0, 0x35A8F7C
	0x035A8F28 MOVZ W1, 0x5F
	0x035A8F2C MOVZ W2, 0x2F
	0x035A8F30 MOV X3, X31
	0x035A8F34 BL 0x32296D0
	0x035A8F38 MOV X20, X0
	0x035A8F3C MOV X0, X31
	0x035A8F40 BL 0x3241948
	0x035A8F44 MOV X19, X0
	0x035A8F48 MOV X0, X20
	0x035A8F4C MOV X1, X31
	0x035A8F50 BL 0x3322D04
	0x035A8F54 CBZ X19, 0x35A8F7C
	0x035A8F58 LDR X8, [X19]
	0x035A8F5C MOV X1, X0
	0x035A8F60 MOV X0, X19
	0x035A8F64 LDP X20, X19, [X31 + 0x20]
	0x035A8F68 LDR X3, [X8 + 0x378]
	0x035A8F6C LDR X2, [X8 + 0x380]
	0x035A8F70 LDP X30, X21, [X31 + 0x10]
	0x035A8F74 LDR V8, [X31], #0x30
	0x035A8F78 BR X3
	0x035A8F7C BL 0x1C16F20
	0x035A8F80 BL 0x1C16F28
	0x035A8F84 STP X30, X21, [X31 - 0x20]!
	0x035A8F88 STP X20, X19, [X31 + 0x10]
	0x035A8F8C ADRP X21, 0xE38000
	0x035A8F90 LDRB W8, [X21 + 0x2E]
	0x035A8F94 MOV X19, X1
	0x035A8F98 MOV X20, X0
	0x035A8F9C TBNZ X8, 0x0, 0x35A8FB4
	0x035A8FA0 ADRP X0, 0xB8F000
	0x035A8FA4 LDR X0, [X0 + 0x368]
	0x035A8FA8 BL 0x1C16CF4
	0x035A8FAC MOVZ W8, 0x1
	0x035A8FB0 STRB W8, [X21 + 0x2E]
	0x035A8FB4 MOV X0, X20
	0x035A8FB8 MOV X1, X31
	0x035A8FBC BL 0x32277A8
	0x035A8FC0 MOV X21, X31
	0x035A8FC4 TBNZ X0, 0x0, 0x35A8FF8
	0x035A8FC8 ADRP X8, 0xB8F000
	0x035A8FCC LDR X8, [X8 + 0x368]
	0x035A8FD0 LDR X0, [X8]
	0x035A8FD4 BL 0x1C16F10
	0x035A8FD8 MOV X1, X31
	0x035A8FDC MOV X21, X0
	0x035A8FE0 BL 0x33BDD8C
	0x035A8FE4 MOV X0, X21
	0x035A8FE8 MOV X1, X20
	0x035A8FEC MOV X2, X19
	0x035A8FF0 STR X31, [X21 + 0x20]
	0x035A8FF4 BL 0x35A5AE0
	0x035A8FF8 LDP X20, X19, [X31 + 0x10]
	0x035A8FFC MOV X0, X21
	0x035A9000 LDP X30, X21, [X31], #0x20
	0x035A9004 RET
	0x035A9008 SUB X31, X31, 0x30
	0x035A900C STR X30, [X31 + 0x10]
	0x035A9010 STP X20, X19, [X31 + 0x20]
	0x035A9014 ADRP X20, 0xE37000
	0x035A9018 ADRP X19, 0xB8E000
	0x035A901C LDRB W8, [X20 + 0x30]
	0x035A9020 LDR X19, [X19 + 0x368]
	0x035A9024 TBNZ X8, 0x0, 0x35A903C
	0x035A9028 ADRP X0, 0xB8E000
	0x035A902C LDR X0, [X0 + 0x368]
	0x035A9030 BL 0x1C16CF4
	0x035A9034 MOVZ W8, 0x1
	0x035A9038 STRB W8, [X20 + 0x30]
	0x035A903C ADD X0, X31, 0x18
	0x035A9040 MOVZ W1, 0x7B2
	0x035A9044 MOVZ W2, 0x1
	0x035A9048 MOVZ W3, 0x1
	0x035A904C MOVZ W7, 0x1
	0x035A9050 MOV W4, W31
	0x035A9054 MOV W5, W31
	0x035A9058 MOV W6, W31
	0x035A905C STR X31, [X31 + 0x18]
	0x035A9060 STR X31, [X31]
	0x035A9064 BL 0x335F47C
	0x035A9068 LDR X8, [X19]
	0x035A906C LDP X30, X9, [X31 + 0x10]
	0x035A9070 LDP X20, X19, [X31 + 0x20]
	0x035A9074 LDR X8, [X8 + 0xB8]
	0x035A9078 STR X9, [X8]
	0x035A907C ADD X31, X31, 0x30
	0x035A9080 RET
	0x035A9084 LDR X8, [X0 + 0x40]
	0x035A9088 LDR X3, [X0 + 0x18]
	0x035A908C LDR X2, [X0 + 0x28]
	0x035A9090 MOV X0, X8
	0x035A9094 BR X3
	0x035A9098 SUB X31, X31, 0x20
	0x035A909C STP X31, X30, [X31 + 0x8]
	0x035A90A0 STR X1, [X31]
	0x035A90A4 ADD X1, X31, 0x0
	0x035A90A8 BL 0x1C16CB0
	0x035A90AC LDR X30, [X31 + 0x10]
	0x035A90B0 ADD X31, X31, 0x20
	0x035A90B4 RET
	0x035A90B8 STR X30, [X31 - 0x10]!
	0x035A90BC MOV X0, X1
	0x035A90C0 MOV X1, X31
	0x035A90C4 BL 0x1C16CB4
	0x035A90C8 CBZ X0, 0x35A90DC
	0x035A90CC BL 0x1C16E08
	0x035A90D0 LDRB W0, [X0]
	0x035A90D4 LDR X30, [X31], #0x10
	0x035A90D8 RET
	0x035A90DC BL 0x1C16F20
	0x035A90E0 STR X30, [X31 - 0x40]!
	0x035A90E4 STP X24, X23, [X31 + 0x10]
	0x035A90E8 STP X22, X21, [X31 + 0x20]
	0x035A90EC STP X20, X19, [X31 + 0x30]
	0x035A90F0 ADRP X21, 0xE37000
	0x035A90F4 ADRP X24, 0xB73000
	0x035A90F8 LDRB W8, [X21 + 0x31]
	0x035A90FC LDR X24, [X24 + 0x10]
	0x035A9100 MOV X19, X2
	0x035A9104 MOV W22, W1
	0x035A9108 MOV W20, W0
	0x035A910C TBNZ X8, 0x0, 0x35A9124
	0x035A9110 ADRP X0, 0xB73000
	0x035A9114 LDR X0, [X0 + 0x10]
	0x035A9118 BL 0x1C16CF4
	0x035A911C MOVZ W8, 0x1
	0x035A9120 STRB W8, [X21 + 0x31]
	0x035A9124 LDR X0, [X24]
	0x035A9128 BL 0x1C16D0C
	0x035A912C CBZ X19, 0x35A9270
	0x035A9130 LDR X21, [X0 + 0x8]
	0x035A9134 MOV X0, X19
	0x035A9138 MOV W1, W22
	0x035A913C MOV X2, X31
	0x035A9140 BL 0x3222A1C
	0x035A9144 CBZ X21, 0x35A9270
	0x035A9148 MOV W1, W0
	0x035A914C MOV X0, X21
	0x035A9150 MOV X2, X31
	0x035A9154 BL 0x3233D30
	0x035A9158 LDR W8, [X19 + 0x10]
	0x035A915C ADD W21, W22, 0x1
	0x035A9160 CMP W21, W8
	0x035A9164 B.GE 0x35A9254
	0x035A9168 MOV X0, X19
	0x035A916C MOV W1, W21
	0x035A9170 MOV X2, X31
	0x035A9174 BL 0x3222A1C
	0x035A9178 AND W8, W0, 0xFFFF
	0x035A917C CMP W8, 0x5C
	0x035A9180 B.NE 0x35A91F0
	0x035A9184 TBZ X20, 0x0, 0x35A91B8
	0x035A9188 LDR X0, [X24]
	0x035A918C BL 0x1C16D0C
	0x035A9190 LDR X23, [X0 + 0x8]
	0x035A9194 MOV X0, X19
	0x035A9198 MOV W1, W21
	0x035A919C MOV X2, X31
	0x035A91A0 BL 0x3222A1C
	0x035A91A4 CBZ X23, 0x35A9270
	0x035A91A8 MOV W1, W0
	0x035A91AC MOV X0, X23
	0x035A91B0 MOV X2, X31
	0x035A91B4 BL 0x3233D30
	0x035A91B8 LDR X0, [X24]
	0x035A91BC BL 0x1C16D0C
	0x035A91C0 LDR X23, [X0 + 0x8]
	0x035A91C4 ADD W21, W22, 0x2
	0x035A91C8 MOV X0, X19
	0x035A91CC MOV W1, W21
	0x035A91D0 MOV X2, X31
	0x035A91D4 BL 0x3222A1C
	0x035A91D8 CBZ X23, 0x35A9270
	0x035A91DC MOV W1, W0
	0x035A91E0 MOV X0, X23
	0x035A91E4 MOV X2, X31
	0x035A91E8 BL 0x3233D30
	0x035A91EC B 0x35A9244
	0x035A91F0 MOV X0, X19
	0x035A91F4 MOV W1, W21
	0x035A91F8 MOV X2, X31
	0x035A91FC BL 0x3222A1C
	0x035A9200 LDR X8, [X24]
	0x035A9204 MOV W22, W0
	0x035A9208 MOV X0, X8
	0x035A920C BL 0x1C16D0C
	0x035A9210 LDR X23, [X0 + 0x8]
	0x035A9214 MOV X0, X19
	0x035A9218 MOV W1, W21
	0x035A921C MOV X2, X31
	0x035A9220 BL 0x3222A1C
	0x035A9224 CBZ X23, 0x35A9270
	0x035A9228 MOV W1, W0
	0x035A922C MOV X0, X23
	0x035A9230 MOV X2, X31
	0x035A9234 AND W22, W22, 0xFFFF
	0x035A9238 BL 0x3233D30
	0x035A923C CMP W22, 0x22
	0x035A9240 B.EQ 0x35A9258
	0x035A9244 LDR W8, [X19 + 0x10]
	0x035A9248 MOV W22, W21
	0x035A924C ADD W21, W21, 0x1
	0x035A9250 B 0x35A9160
	0x035A9254 SUB W21, W8, 0x1
	0x035A9258 MOV W0, W21
	0x035A925C LDP X20, X19, [X31 + 0x30]
	0x035A9260 LDP X22, X21, [X31 + 0x20]
	0x035A9264 LDP X24, X23, [X31 + 0x10]
	0x035A9268 LDR X30, [X31], #0x40
	0x035A926C RET
	0x035A9270 BL 0x1C16F20
	0x035A9274 STP X30, X25, [X31 - 0x40]!
	0x035A9278 STP X24, X23, [X31 + 0x10]
	0x035A927C STP X22, X21, [X31 + 0x20]
	0x035A9280 STP X20, X19, [X31 + 0x30]
	0x035A9284 ADRP X20, 0xE37000
	0x035A9288 ADRP X23, 0xB73000
	0x035A928C LDRB W8, [X20 + 0x32]
	0x035A9290 LDR X23, [X23 + 0x10]
	0x035A9294 MOV X19, X0
	0x035A9298 TBNZ X8, 0x0, 0x35A92F8
	0x035A929C ADRP X0, 0xB73000
	0x035A92A0 LDR X0, [X0 + 0x10]
	0x035A92A4 BL 0x1C16CF4
	0x035A92A8 ADRP X0, 0xB4B000
	0x035A92AC LDR X0, [X0 + 0x1B8]
	0x035A92B0 BL 0x1C16CF4
	0x035A92B4 ADRP X0, 0xB72000
	0x035A92B8 LDR X0, [X0 + 0xB78]
	0x035A92BC BL 0x1C16CF4
	0x035A92C0 ADRP X0, 0xB4B000
	0x035A92C4 LDR X0, [X0 + 0x1C0]
	0x035A92C8 BL 0x1C16CF4
	0x035A92CC ADRP X0, 0xB4B000
	0x035A92D0 LDR X0, [X0 + 0x1D0]
	0x035A92D4 BL 0x1C16CF4
	0x035A92D8 ADRP X0, 0xB88000
	0x035A92DC LDR X0, [X0 + 0x208]
	0x035A92E0 BL 0x1C16CF4
	0x035A92E4 ADRP X0, 0xB88000
	0x035A92E8 LDR X0, [X0 + 0x210]
	0x035A92EC BL 0x1C16CF4
	0x035A92F0 MOVZ W8, 0x1
	0x035A92F4 STRB W8, [X20 + 0x32]
	0x035A92F8 LDR X0, [X23]
	0x035A92FC BL 0x1C16D0C
	0x035A9300 LDR X8, [X0]
	0x035A9304 CBZ X8, 0x35A9638
	0x035A9308 LDR W8, [X8 + 0x18]
	0x035A930C CMP W8, 0x0
	0x035A9310 B.LE 0x35A9340
	0x035A9314 LDR X0, [X23]
	0x035A9318 BL 0x1C16D0C
	0x035A931C LDR X0, [X0]
	0x035A9320 CBZ X0, 0x35A9638
	0x035A9324 ADRP X8, 0xB88000
	0x035A9328 LDR X8, [X8 + 0x208]
	0x035A932C LDR X1, [X8]
	0x035A9330 BL 0x26022C0
	0x035A9334 MOV X20, X0
	0x035A9338 CBNZ X20, 0x35A9368
	0x035A933C B 0x35A9638
	0x035A9340 ADRP X8, 0xB4B000
	0x035A9344 LDR X8, [X8 + 0x1D0]
	0x035A9348 LDR X0, [X8]
	0x035A934C BL 0x1C16F10
	0x035A9350 ADRP X8, 0xB4B000
	0x035A9354 LDR X8, [X8 + 0x1C0]
	0x035A9358 MOV X20, X0
	0x035A935C LDR X1, [X8]
	0x035A9360 BL 0x301B7C4
	0x035A9364 CBZ X20, 0x35A9638
	0x035A9368 LDP W2, W8, [X20 + 0x18]
	0x035A936C ADD W8, W8, 0x1
	0x035A9370 CMP W2, 0x1
	0x035A9374 STP W31, W8, [X20 + 0x18]
	0x035A9378 B.LT 0x35A938C
	0x035A937C LDR X0, [X20 + 0x10]
	0x035A9380 MOV W1, W31
	0x035A9384 MOV X3, X31
	0x035A9388 BL 0x339FA34
	0x035A938C CBZ X19, 0x35A9638
	0x035A9390 LDR W8, [X19 + 0x10]
	0x035A9394 CMP W8, 0x2
	0x035A9398 B.EQ 0x35A9620
	0x035A939C LDR X0, [X23]
	0x035A93A0 BL 0x1C16D0C
	0x035A93A4 LDR X0, [X0 + 0x8]
	0x035A93A8 CBZ X0, 0x35A9638
	0x035A93AC MOV W1, W31
	0x035A93B0 MOV X2, X31
	0x035A93B4 BL 0x3232ADC
	0x035A93B8 LDR W8, [X19 + 0x10]
	0x035A93BC SUB W8, W8, 0x1
	0x035A93C0 CMP W8, 0x2
	0x035A93C4 B.LT 0x35A95A8
	0x035A93C8 ADRP X24, 0xB4B000
	0x035A93CC LDR X24, [X24 + 0x1B8]
	0x035A93D0 MOV W25, W31
	0x035A93D4 MOVZ W21, 0x1
	0x035A93D8 MOV X0, X19
	0x035A93DC MOV W1, W21
	0x035A93E0 MOV X2, X31
	0x035A93E4 BL 0x3222A1C
	0x035A93E8 AND W8, W0, 0xFFFF
	0x035A93EC CMP W8, 0x5B
	0x035A93F0 B.EQ 0x35A9410
	0x035A93F4 MOV X0, X19
	0x035A93F8 MOV W1, W21
	0x035A93FC MOV X2, X31
	0x035A9400 BL 0x3222A1C
	0x035A9404 AND W8, W0, 0xFFFF
	0x035A9408 CMP W8, 0x7B
	0x035A940C B.NE 0x35A9418
	0x035A9410 ADD W25, W25, 0x1
	0x035A9414 B 0x35A9454
	0x035A9418 MOV X0, X19
	0x035A941C MOV W1, W21
	0x035A9420 MOV X2, X31
	0x035A9424 BL 0x3222A1C
	0x035A9428 AND W8, W0, 0xFFFF
	0x035A942C CMP W8, 0x5D
	0x035A9430 B.EQ 0x35A9450
	0x035A9434 MOV X0, X19
	0x035A9438 MOV W1, W21
	0x035A943C MOV X2, X31
	0x035A9440 BL 0x3222A1C
	0x035A9444 AND W8, W0, 0xFFFF
	0x035A9448 CMP W8, 0x7D
	0x035A944C B.NE 0x35A949C
	0x035A9450 SUB W25, W25, 0x1
	0x035A9454 LDR X0, [X23]
	0x035A9458 BL 0x1C16D0C
	0x035A945C LDR X22, [X0 + 0x8]
	0x035A9460 MOV X0, X19
	0x035A9464 MOV W1, W21
	0x035A9468 MOV X2, X31
	0x035A946C BL 0x3222A1C
	0x035A9470 CBZ X22, 0x35A9638
	0x035A9474 MOV W1, W0
	0x035A9478 MOV X0, X22
	0x035A947C MOV X2, X31
	0x035A9480 BL 0x3233D30
	0x035A9484 LDR W8, [X19 + 0x10]
	0x035A9488 ADD W21, W21, 0x1
	0x035A948C SUB W8, W8, 0x1
	0x035A9490 CMP W21, W8
	0x035A9494 B.LT 0x35A93D8
	0x035A9498 B 0x35A95A8
	0x035A949C MOV X0, X19
	0x035A94A0 MOV W1, W21
	0x035A94A4 MOV X2, X31
	0x035A94A8 BL 0x3222A1C
	0x035A94AC AND W8, W0, 0xFFFF
	0x035A94B0 CMP W8, 0x22
	0x035A94B4 B.NE 0x35A94D0
	0x035A94B8 MOVZ W0, 0x1
	0x035A94BC MOV W1, W21
	0x035A94C0 MOV X2, X19
	0x035A94C4 BL 0x35A90E0
	0x035A94C8 MOV W21, W0
	0x035A94CC B 0x35A9484
	0x035A94D0 MOV X0, X19
	0x035A94D4 MOV W1, W21
	0x035A94D8 MOV X2, X31
	0x035A94DC BL 0x3222A1C
	0x035A94E0 AND W8, W0, 0xFFFF
	0x035A94E4 CMP W8, 0x2C
	0x035A94E8 B.NE 0x35A94F4
	0x035A94EC CBNZ W25, 0x35A9454
	0x035A94F0 B 0x35A9514
	0x035A94F4 MOV X0, X19
	0x035A94F8 MOV W1, W21
	0x035A94FC MOV X2, X31
	0x035A9500 BL 0x3222A1C
	0x035A9504 CBNZ W25, 0x35A9454
	0x035A9508 AND W8, W0, 0xFFFF
	0x035A950C CMP W8, 0x3A
	0x035A9510 B.NE 0x35A9454
	0x035A9514 LDR X0, [X23]
	0x035A9518 BL 0x1C16D0C
	0x035A951C LDR X0, [X0 + 0x8]
	0x035A9520 CBZ X0, 0x35A9638
	0x035A9524 LDR X8, [X0]
	0x035A9528 LDP X9, X1, [X8 + 0x168]
	0x035A952C BLR X9
	0x035A9530 LDR W10, [X20 + 0x1C]
	0x035A9534 LDR X8, [X20 + 0x10]
	0x035A9538 LDR X9, [X24]
	0x035A953C ADD W10, W10, 0x1
	0x035A9540 STR W10, [X20 + 0x1C]
	0x035A9544 CBZ X8, 0x35A9638
	0x035A9548 LDRSW X10, [X20 + 0x18]
	0x035A954C LDR W11, [X8 + 0x18]
	0x035A9550 MOV X1, X0
	0x035A9554 CMP W10, W11
	0x035A9558 B.CS 0x35A9570
	0x035A955C ADD W9, W10, 0x1
	0x035A9560 ADD X8, X8, X10, 0x3, LSL
	0x035A9564 STR W9, [X20 + 0x18]
	0x035A9568 STR X1, [X8 + 0x20]
	0x035A956C B 0x35A9584
	0x035A9570 LDR X8, [X9 + 0x20]
	0x035A9574 MOV X0, X20
	0x035A9578 LDR X8, [X8 + 0xC0]
	0x035A957C LDR X2, [X8 + 0x70]
	0x035A9580 BL 0x301BF90
	0x035A9584 LDR X0, [X23]
	0x035A9588 BL 0x1C16D0C
	0x035A958C LDR X0, [X0 + 0x8]
	0x035A9590 CBZ X0, 0x35A9638
	0x035A9594 MOV W1, W31
	0x035A9598 MOV X2, X31
	0x035A959C BL 0x3232ADC
	0x035A95A0 MOV W25, W31
	0x035A95A4 B 0x35A9484
	0x035A95A8 LDR X0, [X23]
	0x035A95AC BL 0x1C16D0C
	0x035A95B0 LDR X0, [X0 + 0x8]
	0x035A95B4 CBZ X0, 0x35A9638
	0x035A95B8 LDR X8, [X0]

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+32], X30
	003 Move [X31+48], X28
	004 Move [X31+56], X27
	005 Move [X31+64], X26
	006 Move [X31+72], X25
	007 Move [X31+80], X24
	008 Move [X31+88], X23
	009 Move [X31+96], X22
	010 Move [X31+104], X21
	011 Move [X31+112], X20
	012 Move [X31+120], X19
	013 Move X20, 0xE39000
	014 Move W8, [X20+37]
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {124}
	020 Move X0, 0xB90000
	021 Move X0, [X0+1512]
	022 Call 0x1C17CF4
	023 Move X0, 0xB90000
	024 Move X0, [X0+1520]
	025 Call 0x1C17CF4
	026 Move X0, 0xB4F000
	027 Move X0, [X0+352]
	028 Call 0x1C17CF4
	029 Move X0, 0xB4F000
	030 Move X0, [X0+304]
	031 Call 0x1C17CF4
	032 Move X0, 0xB4F000
	033 Move X0, [X0+360]
	034 Call 0x1C17CF4
	035 Move X0, 0xB4E000
	036 Move X0, [X0+2640]
	037 Call 0x1C17CF4
	038 Move X0, 0xB4E000
	039 Move X0, [X0+544]
	040 Call 0x1C17CF4
	041 Move X0, 0xB4F000
	042 Move X0, [X0+368]
	043 Call 0x1C17CF4
	044 Move X0, 0xB4F000
	045 Move X0, [X0+376]
	046 Call 0x1C17CF4
	047 Move X0, 0xB4F000
	048 Move X0, [X0+384]
	049 Call 0x1C17CF4
	050 Move X0, 0xB4F000
	051 Move X0, [X0+392]
	052 Call 0x1C17CF4
	053 Move X0, 0xB4C000
	054 Move X0, [X0+3584]
	055 Call 0x1C17CF4
	056 Move X0, 0xB4F000
	057 Move X0, [X0+400]
	058 Call 0x1C17CF4
	059 Move X0, 0xB4F000
	060 Move X0, [X0+408]
	061 Call 0x1C17CF4
	062 Move X0, 0xB4C000
	063 Move X0, [X0+3608]
	064 Call 0x1C17CF4
	065 Move X0, 0xB90000
	066 Move X0, [X0+1528]
	067 Call 0x1C17CF4
	068 Move X0, 0xB90000
	069 Move X0, [X0+1408]
	070 Call 0x1C17CF4
	071 Move X0, 0xB4F000
	072 Move X0, [X0+432]
	073 Call 0x1C17CF4
	074 Move X0, 0xB4F000
	075 Move X0, [X0+440]
	076 Call 0x1C17CF4
	077 Move X0, 0xB4F000
	078 Move X0, [X0+448]
	079 Call 0x1C17CF4
	080 Move X0, 0xB4F000
	081 Move X0, [X0+456]
	082 Call 0x1C17CF4
	083 Move X0, 0xB4F000
	084 Move X0, [X0+464]
	085 Call 0x1C17CF4
	086 Move X0, 0xB4C000
	087 Move X0, [X0+2512]
	088 Call 0x1C17CF4
	089 Move X0, 0xB4F000
	090 Move X0, [X0+472]
	091 Call 0x1C17CF4
	092 Move X0, 0xB4F000
	093 Move X0, [X0+480]
	094 Call 0x1C17CF4
	095 Move X0, 0xB4F000
	096 Move X0, [X0+488]
	097 Call 0x1C17CF4
	098 Move X0, 0xB4F000
	099 Move X0, [X0+496]
	100 Call 0x1C17CF4
	101 Move X0, 0xB4F000
	102 Move X0, [X0+504]
	103 Call 0x1C17CF4
	104 Move X0, 0xB4F000
	105 Move X0, [X0+512]
	106 Call 0x1C17CF4
	107 Move X0, 0xB4E000
	108 Move X0, [X0+1392]
	109 Call 0x1C17CF4
	110 Move X0, 0xB4F000
	111 Move X0, [X0+520]
	112 Call 0x1C17CF4
	113 Move X0, 0xB4F000
	114 Move X0, [X0+528]
	115 Call 0x1C17CF4
	116 Move X0, 0xB4F000
	117 Move X0, [X0+536]
	118 Call 0x1C17CF4
	119 Move X0, 0xB4F000
	120 Move X0, [X0+544]
	121 Call 0x1C17CF4
	122 Move W8, 1
	123 Move [X20+37], W8
	124 Move [X31+40], X31
	125 Move [X31+24], X31
	126 Move X26, 0xB4F000
	127 Move W24, [X19]
	128 Move X27, [X19+88]
	129 Move X26, [X26+304]
	130 Compare W24, 0
	131 JumpIfEqual {140}
	132 NotImplemented "Instruction CMP not yet implemented."
	133 Move X8, [X19+112]
	134 Move TEMP, 0
	135 Not TEMP
	136 Move W9, TEMP
	137 Move [X31+24], X8
	138 Move [X19+112], X31
	139 Move [X19], W9
	140 Move X8, [X19+104]
	141 Move TEMP, 0
	142 Not TEMP
	143 Move W9, TEMP
	144 Move [X31+40], X8
	145 Move [X19+104], X31
	146 Move [X19], W9
	147 Move X8, 0xB4F000
	148 Move X8, [X8+384]
	149 Move X0, [X8]
	150 Call 0x1C17F10
	151 Move X20, X0
	152 Move X1, X31
	153 Call HttpRequestMessage..ctor, X0
	154 Compare X20, 0
	155 JumpIfEqual {709}
	156 Move X1, [X19+32]
	157 Move X0, X20
	158 Move X2, X31
	159 Call HttpRequestMessage.set_RequestUri, X0, X1
	160 Move X8, 0xB4F000
	161 Move X22, [X19+40]
	162 Move X8, [X8+376]
	163 Move X0, [X8]
	164 Call 0x1C17F10
	165 Move X21, X0
	166 Move X1, X22
	167 Move X2, X31
	168 Call HttpMethod..ctor, X0, X1
	169 Move X0, X20
	170 Move X1, X21
	171 Move X2, X31
	172 Call HttpRequestMessage.set_Method, X0, X1
	173 Move X0, X20
	174 Move X1, X31
	175 Call HttpRequestMessage.get_Headers, X0
	176 Compare X0, 0
	177 JumpIfEqual {710}
	178 Move X1, X31
	179 Call HttpRequestHeaders.get_Accept, X0
	180 Move X8, 0xB4F000
	181 Move X8, [X8+448]
	182 Move X21, X0
	183 Move X0, [X8]
	184 Call 0x1C17F10
	185 Move X8, 0xB4F000
	186 Move X8, [X8+520]
	187 Move X22, X0
	188 Move X1, [X8]
	189 Move X2, X31
	190 Call MediaTypeWithQualityHeaderValue..ctor, X0, X1
	191 Compare X21, 0
	192 JumpIfEqual {711}
	193 Move X8, 0xB4F000
	194 Move X8, [X8+368]
	195 Move X2, [X8]
	196 Move X0, X21
	197 Move X1, X22
	198 Call 0x2DE164C, X0, X1
	199 Move X21, [X19+48]
	200 Compare X21, 0
	201 JumpIfEqual {712}
	202 Move X10, 0xB4F000
	203 Move X8, [X21]
	204 Move X10, [X10+400]
	205 NotImplemented "Instruction LDRH not yet implemented."
	206 Move X1, [X10]
	207 Compare X9, 0
	208 JumpIfEqual {215}
	209 Move X10, [X8+176]
	210 Add X10, X10, 8
	211 NotImplemented "Instruction LDUR not yet implemented."
	212 NotImplemented "Instruction CMP not yet implemented."
	213 Subtract X9, X9, 1
	214 Add X10, X10, 16
	215 Move X0, X21
	216 Move W2, W31
	217 Call 0x1C5D788
	218 NotImplemented "Instruction LDRSW not yet implemented."
	219 Add X8, X8, X9
	220 Add X0, X8, 312
	221 Move X8, [X0]
	222 Move X1, [X0+8]
	223 Move X0, X21
	224 NotImplemented "Instruction BLR not yet implemented."
	225 Move X22, X0
	226 Compare X0, 0
	227 JumpIfEqual {713}
	228 Move X25, 0xB4C000
	229 Move X28, 0xB4F000
	230 Move X25, [X25+3608]
	231 Move X28, [X28+408]
	232 Move X8, [X22]
	233 Move X1, [X25]
	234 NotImplemented "Instruction LDRH not yet implemented."
	235 Compare X9, 0
	236 JumpIfEqual {243}
	237 Move X10, [X8+176]
	238 Add X10, X10, 8
	239 NotImplemented "Instruction LDUR not yet implemented."
	240 NotImplemented "Instruction CMP not yet implemented."
	241 Subtract X9, X9, 1
	242 Add X10, X10, 16
	243 Move X0, X22
	244 Move W2, W31
	245 Call 0x1C5D788
	246 NotImplemented "Instruction LDRSW not yet implemented."
	247 Add X8, X8, X9
	248 Add X0, X8, 312
	249 Move X8, [X0]
	250 Move X1, [X0+8]
	251 Move X0, X22
	252 NotImplemented "Instruction BLR not yet implemented."
	253 Move TEMP, X0
	254 And TEMP, TEMP, 1
	255 Compare TEMP, 1
	256 JumpIfNotEqual {289}
	257 Move X8, [X22]
	258 Move X1, [X28]
	259 NotImplemented "Instruction LDRH not yet implemented."
	260 Compare X9, 0
	261 JumpIfEqual {268}
	262 Move X10, [X8+176]
	263 Add X10, X10, 8
	264 NotImplemented "Instruction LDUR not yet implemented."
	265 NotImplemented "Instruction CMP not yet implemented."
	266 Subtract X9, X9, 1
	267 Add X10, X10, 16
	268 Move X0, X22
	269 Move W2, W31
	270 Call 0x1C5D788
	271 NotImplemented "Instruction LDRSW not yet implemented."
	272 Add X8, X8, X9
	273 Add X0, X8, 312
	274 Move X8, [X0]
	275 Move X1, [X0+8]
	276 Move X0, X22
	277 NotImplemented "Instruction BLR not yet implemented."
	278 Move X21, X0
	279 Move X23, X1
	280 Move X0, X20
	281 Move X1, X31
	282 Call HttpRequestMessage.get_Headers, X0
	283 Compare X0, 0
	284 JumpIfEqual {689}
	285 Move X1, X21
	286 Move X2, X23
	287 Move X3, X31
	288 Call HttpHeaders.Add, X0, X1, X2
	289 Move X23, X31
	290 Move W21, 6
	291 Move TEMP, X24
	292 And TEMP, TEMP, -2147483648
	293 Compare TEMP, -2147483648
	294 JumpIfNotEqual {320}
	295 Compare X22, 0
	296 JumpIfEqual {320}
	297 Move X10, 0xB4C000
	298 Move X8, [X22]
	299 Move X10, [X10+3584]
	300 NotImplemented "Instruction LDRH not yet implemented."
	301 Move X1, [X10]
	302 Compare X9, 0
	303 JumpIfEqual {310}
	304 Move X10, [X8+176]
	305 Add X10, X10, 8
	306 NotImplemented "Instruction LDUR not yet implemented."
	307 NotImplemented "Instruction CMP not yet implemented."
	308 Subtract X9, X9, 1
	309 Add X10, X10, 16
	310 Move X0, X22
	311 Move W2, W31
	312 Call 0x1C5D788
	313 NotImplemented "Instruction LDRSW not yet implemented."
	314 Add X8, X8, X9
	315 Add X0, X8, 312
	316 Move X8, [X0]
	317 Move X1, [X0+8]
	318 Move X0, X22
	319 NotImplemented "Instruction BLR not yet implemented."
	320 Compare X23, 0
	321 JumpIfNotEqual {714}
	322 NotImplemented "Instruction CMP not yet implemented."
	323 Compare W21, 0
	324 JumpIfNotEqual {676}
	325 Move X21, [X19+56]
	326 Compare X21, 0
	327 JumpIfEqual {337}
	328 Move X8, 0xB4F000
	329 Move X8, [X8+360]
	330 Move X0, [X8]
	331 Call 0x1C17F10
	332 Move X22, X0
	333 Move X1, X21
	334 Move X2, X31
	335 Call ByteArrayContent..ctor, X0, X1
	336 Move [X20+56], X22
	337 Move X23, 0xB4E000
	338 Move X23, [X23+2640]
	339 Move X0, [X23]
	340 Call 0x1C17F10
	341 Move X22, X0
	342 Move X1, X31
	343 Call CancellationTokenSource..ctor, X0
	344 Compare X22, 0
	345 JumpIfEqual {716}
	346 Move X0, X22
	347 Move X1, X31
	348 Call CancellationTokenSource.get_Token, X0
	349 Move X8, 0xB4E000
	350 Move X8, [X8+1392]
	351 Move X21, X0
	352 Move W24, [X19+64]
	353 Move X0, [X8]
	354 Move W8, [X0+224]
	355 Compare W8, 0
	356 JumpIfNotEqual {358}
	357 Call 0x1C17DFC
	358 NotImplemented "Instruction SCVTF not yet implemented."
	359 Move X0, X31
	360 Call TimeSpan.FromSeconds, V0
	361 Move X1, X0
	362 Move X0, X22
	363 Move X2, X31
	364 Call CancellationTokenSource.CancelAfter, X0, X1
	365 Move X0, X19
	366 Add X0, X0, 72
	367 Move W8, [X0]
	368 Compare W8, 0
	369 JumpIfEqual {454}
	370 Move X8, 0xB4F000
	371 Move X8, [X8+464]
	372 Move X1, [X8]
	373 Call Nullable`1<CancellationToken>.get_Value, X0
	374 Move X22, X0
	375 Move X0, [X23]
	376 Move W8, [X0+224]
	377 Compare W8, 0
	378 JumpIfNotEqual {380}
	379 Call 0x1C17DFC
	380 Move X0, X21
	381 Move X1, X22
	382 Move X2, X31
	383 Call CancellationTokenSource.CreateLinkedTokenSource, X0, X1
	384 Move X22, X0
	385 Compare X27, 0
	386 JumpIfEqual {457}
	387 Move X23, [X27+16]
	388 Compare X23, 0
	389 JumpIfEqual {468}
	390 Move X8, 0xB4C000
	391 Move X8, [X8+2512]
	392 Move X0, [X8]
	393 Move W1, 3
	394 Call 0x1C17D6C
	395 Move X24, X0
	396 Compare X0, 0
	397 JumpIfEqual {751}
	398 Move X25, [X19+40]
	399 Compare X25, 0
	400 JumpIfEqual {407}
	401 Move X8, [X24]
	402 Move X1, [X8+64]
	403 Move X0, X25
	404 Call 0x1C17E00
	405 Compare X0, 0
	406 JumpIfEqual {755}
	407 Move W8, [X24+24]
	408 Compare W8, 0
	409 JumpIfEqual {752}
	410 Move [X24+32], X25
	411 Move X25, [X19+32]
	412 Compare X25, 0
	413 JumpIfEqual {421}
	414 Move X8, [X24]
	415 Move X1, [X8+64]
	416 Move X0, X25
	417 Call 0x1C17E00
	418 Compare X0, 0
	419 JumpIfEqual {758}
	420 Move W8, [X24+24]
	421 NotImplemented "Instruction CMP not yet implemented."
	422 Move [X24+40], X25
	423 Move X25, [X19+56]
	424 Compare X25, 0
	425 JumpIfEqual {433}
	426 Move X8, [X24]
	427 Move X1, [X8+64]
	428 Move X0, X25
	429 Call 0x1C17E00
	430 Compare X0, 0
	431 JumpIfEqual {761}
	432 Move W8, [X24+24]
	433 NotImplemented "Instruction CMP not yet implemented."
	434 Move [X24+48], X25
	435 Move X9, 0xB90000
	436 Move X8, [X23]
	437 Move X9, [X9+1528]
	438 Move X10, 0xB4F000
	439 Move X1, [X9]
	440 Move X10, [X10+528]
	441 NotImplemented "Instruction LDRH not yet implemented."
	442 Move X25, [X10]
	443 Compare X9, 0
	444 JumpIfEqual {451}
	445 Move X10, [X8+176]
	446 Add X10, X10, 8
	447 NotImplemented "Instruction LDUR not yet implemented."
	448 NotImplemented "Instruction CMP not yet implemented."
	449 Subtract X9, X9, 1
	450 Add X10, X10, 16
	451 Move W2, 2
	452 Move X0, X23
	453 Call 0x1C5D788
	454 Move X22, X31
	455 Compare X27, 0
	456 JumpIfNotEqual {387}
	457 Call 0x1C17F20
	458 Move W9, [X10]
	459 Add W9, W9, 2
	460 Add X8, X8, W9
	461 Add X0, X8, 312
	462 Move X8, [X0]
	463 Move X3, [X0+8]
	464 Move X0, X23
	465 Move X1, X25
	466 Move X2, X24
	467 NotImplemented "Instruction BLR not yet implemented."
	468 Move X23, [X27+24]
	469 Compare X22, 0
	470 JumpIfEqual {475}
	471 Move X0, X22
	472 Move X1, X31
	473 Call CancellationTokenSource.get_Token, X0
	474 Move X21, X0
	475 Compare X23, 0
	476 JumpIfEqual {717}
	477 Move X8, [X23]
	478 Move X9, [X8+408]
	479 Move X3, [X8+416]
	480 Move X0, X23
	481 Move X1, X20
	482 Move X2, X21
	483 NotImplemented "Instruction BLR not yet implemented."
	484 Compare X0, 0
	485 JumpIfEqual {718}
	486 Move X8, 0xB4F000
	487 Move X8, [X8+512]
	488 Move X1, [X8]
	489 Call Task`1<Object>.GetAwaiter, X0
	490 Move X8, 0xB4F000
	491 Move X8, [X8+488]
	492 Move [X31+40], X0
	493 Move X1, [X8]
	494 Add X0, X31, 40
	495 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	496 Move TEMP, X0
	497 And TEMP, TEMP, 1
	498 Compare TEMP, 1
	499 JumpIfNotEqual {625}
	500 Move X8, 0xB4F000
	501 Move X8, [X8+472]
	502 Add X0, X31, 40
	503 Move X1, [X8]
	504 Call TaskAwaiter`1<Object>.GetResult, X0
	505 Move [X19+96], X0
	506 Compare X0, 0
	507 JumpIfEqual {702}
	508 Move X0, [X0+56]
	509 Compare X0, 0
	510 JumpIfEqual {703}
	511 Move X1, X31
	512 Call HttpContent.ReadAsStringAsync, X0
	513 Compare X0, 0
	514 JumpIfEqual {704}
	515 Move X8, 0xB4F000
	516 Move X8, [X8+504]
	517 Move X1, [X8]
	518 Call Task`1<Object>.GetAwaiter, X0
	519 Move X8, 0xB4F000
	520 Move X8, [X8+496]
	521 Move [X31+24], X0
	522 Move X1, [X8]
	523 Add X0, X31, 24
	524 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	525 Move TEMP, X0
	526 And TEMP, TEMP, 1
	527 Compare TEMP, 1
	528 JumpIfNotEqual {609}
	529 Move X8, 0xB4F000
	530 Move X8, [X8+480]
	531 Add X0, X31, 24
	532 Move X1, [X8]
	533 Call TaskAwaiter`1<Object>.GetResult, X0
	534 Move X8, [X19+96]
	535 Compare X8, 0
	536 JumpIfEqual {690}
	537 Move X20, X0
	538 Move X0, [X8+56]
	539 Compare X0, 0
	540 JumpIfEqual {543}
	541 Move X1, X31
	542 Call HttpContent.Dispose, X0
	543 Compare X27, 0
	544 JumpIfEqual {691}
	545 Move X21, [X27+16]
	546 Compare X21, 0
	547 JumpIfEqual {650}
	548 Move X8, 0xB4C000
	549 Move X8, [X8+2512]
	550 Move X0, [X8]
	551 Move W1, 2
	552 Call 0x1C17D6C
	553 Move X8, [X19+96]
	554 Compare X8, 0
	555 JumpIfEqual {705}
	556 Move X9, 0xB4F000
	557 Move W8, [X8+32]
	558 Move X9, [X9+392]
	559 Move X22, X0
	560 Move [X31+20], W8
	561 Move X0, [X9]
	562 Add X1, X31, 20
	563 Call 0x1C17E04
	564 Compare X22, 0
	565 JumpIfEqual {706}
	566 Move X23, X0
	567 Compare X0, 0
	568 JumpIfEqual {575}
	569 Move X8, [X22]
	570 Move X1, [X8+64]
	571 Move X0, X23
	572 Call 0x1C17E00
	573 Compare X0, 0
	574 JumpIfEqual {719}
	575 Move W8, [X22+24]
	576 Compare W8, 0
	577 JumpIfEqual {707}
	578 Move [X22+32], X23
	579 Compare X20, 0
	580 JumpIfEqual {588}
	581 Move X8, [X22]
	582 Move X1, [X8+64]
	583 Move X0, X20
	584 Call 0x1C17E00
	585 Compare X0, 0
	586 JumpIfEqual {722}
	587 Move W8, [X22+24]
	588 NotImplemented "Instruction CMP not yet implemented."
	589 Move [X22+40], X20
	590 Move X9, 0xB90000
	591 Move X8, [X21]
	592 Move X9, [X9+1528]
	593 Move X10, 0xB4F000
	594 Move X1, [X9]
	595 Move X10, [X10+536]
	596 NotImplemented "Instruction LDRH not yet implemented."
	597 Move X23, [X10]
	598 Compare X9, 0
	599 JumpIfEqual {606}
	600 Move X10, [X8+176]
	601 Add X10, X10, 8
	602 NotImplemented "Instruction LDUR not yet implemented."
	603 NotImplemented "Instruction CMP not yet implemented."
	604 Subtract X9, X9, 1
	605 Add X10, X10, 16
	606 Move W2, 2
	607 Move X0, X21
	608 Call 0x1C5D788
	609 Move W8, 1
	610 Move [X19], W8
	611 Move X8, [X31+24]
	612 Move [X19+112], X8
	613 Move X0, [X26]
	614 Move W8, [X0+224]
	615 Compare W8, 0
	616 JumpIfNotEqual {618}
	617 Call 0x1C17DFC
	618 Move X8, 0xB90000
	619 Move X8, [X8+1512]
	620 Add X0, X19, 8
	621 Move X3, [X8]
	622 Add X1, X31, 24
	623 Move X2, X19
	624 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	625 Move [X19], W31
	626 Move X8, [X31+40]
	627 Move [X19+104], X8
	628 Move X0, [X26]
	629 Move W8, [X0+224]
	630 Compare W8, 0
	631 JumpIfNotEqual {633}
	632 Call 0x1C17DFC
	633 Move X8, 0xB90000
	634 Move X8, [X8+1520]
	635 Add X0, X19, 8
	636 Move X3, [X8]
	637 Add X1, X31, 40
	638 Move X2, X19
	639 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	640 Move W9, [X10]
	641 Add W9, W9, 2
	642 Add X8, X8, W9
	643 Add X0, X8, 312
	644 Move X8, [X0]
	645 Move X3, [X0+8]
	646 Move X0, X21
	647 Move X1, X23
	648 Move X2, X22
	649 NotImplemented "Instruction BLR not yet implemented."
	650 Move X0, [X19+96]
	651 Compare X0, 0
	652 JumpIfEqual {692}
	653 Move X1, X31
	654 Call HttpResponseMessage.get_IsSuccessStatusCode, X0
	655 Move TEMP, X0
	656 And TEMP, TEMP, 1
	657 Compare TEMP, 1
	658 JumpIfNotEqual {693}
	659 Move TEMP, 1
	660 Not TEMP
	661 Move W8, TEMP
	662 Move [X19], W8
	663 Move [X19+96], X31
	664 Move X0, [X26]
	665 Move X21, 0xB4E000
	666 Add X19, X19, 8
	667 Move W8, [X0+224]
	668 Move X21, [X21+352]
	669 Compare W8, 0
	670 JumpIfNotEqual {672}
	671 Call 0x1C17DFC
	672 Move X2, [X21]
	673 Move X0, X19
	674 Move X1, X20
	675 Call AsyncTaskMethodBuilder`1<Object>.SetResult, X0, X1
	676 Move X20, [X31+112]
	677 Move X19, [X31+120]
	678 Move X22, [X31+96]
	679 Move X21, [X31+104]
	680 Move X24, [X31+80]
	681 Move X23, [X31+88]
	682 Move X26, [X31+64]
	683 Move X25, [X31+72]
	684 Move X28, [X31+48]
	685 Move X27, [X31+56]
	686 Move X30, [X31+32]
	687 Add X31, X31, 128
	688 Return 
	689 Call 0x1C17F20
	690 Call 0x1C17F20
	691 Call 0x1C17F20
	692 Call 0x1C17F20
	693 Move X8, 0xB8F000
	694 Move X8, [X8+1408]
	695 Move X1, [X8]
	696 Move X0, X20
	697 Call 0x22119A8, X0
	698 Move X20, X0
	699 Compare X0, 0
	700 JumpIfNotEqual {725}
	701 Call 0x1C17F20
	702 Call 0x1C17F20
	703 Call 0x1C17F20
	704 Call 0x1C17F20
	705 Call 0x1C17F20
	706 Call 0x1C17F20
	707 Call 0x1C17F28
	708 Call 0x1C17F28
	709 Call 0x1C17F20
	710 Call 0x1C17F20
	711 Call 0x1C17F20
	712 Call 0x1C17F20
	713 Call 0x1C17F20
	714 Move X0, X23
	715 Call 0x1C17F18
	716 Call 0x1C17F20
	717 Call 0x1C17F20
	718 Call 0x1C17F20
	719 Call 0x1C17F44
	720 Move X1, X31
	721 Call 0x1C17DEC
	722 Call 0x1C17F44
	723 Move X1, X31
	724 Call 0x1C17DEC
	725 Move X8, 0xB4E000
	726 Move X8, [X8+544]
	727 Move X9, 0xB4D000
	728 Move X9, [X9+544]
	729 Move X1, [X8]
	730 Move X2, [X9]
	731 Move X0, X20
	732 Call Dictionary`2<Object, Object>.ContainsKey, X0, X1
	733 Move TEMP, X0
	734 And TEMP, TEMP, 1
	735 Compare TEMP, 1
	736 JumpIfNotEqual {764}
	737 Move X0, 0xB4E000
	738 Move X0, [X0+544]
	739 Call 0x1C17D08
	740 Move X21, X0
	741 Move X0, 0xB4D000
	742 Move X0, [X0+616]
	743 Call 0x1C17D08
	744 Move X2, X0
	745 Move X0, X20
	746 Move X1, X21
	747 Call Dictionary`2<Object, Object>.get_Item, X0, X1
	748 Compare X0, 0
	749 JumpIfNotEqual {803}
	750 Call 0x1C17F20
	751 Call 0x1C17F20
	752 Call 0x1C17F28
	753 Call 0x1C17F28
	754 Call 0x1C17F28
	755 Call 0x1C17F44
	756 Move X1, X31
	757 Call 0x1C17DEC
	758 Call 0x1C17F44
	759 Move X1, X31
	760 Call 0x1C17DEC
	761 Call 0x1C17F44
	762 Move X1, X31
	763 Call 0x1C17DEC
	764 Move X0, 0xB4D000
	765 Move X0, [X0+632]
	766 Call 0x1C17D08
	767 Move X8, [X0+184]
	768 Move X21, [X8]
	769 Move X0, 0xB4C000
	770 Move X0, [X0+1848]
	771 Call 0x1C17D08
	772 Move X22, X0
	773 Move X0, 0xB4D000
	774 Move X0, [X0+544]
	775 Call 0x1C17D08
	776 Move X2, X0
	777 Move X0, X20
	778 Move X1, X22
	779 Call Dictionary`2<Object, Object>.ContainsKey, X0, X1
	780 Move TEMP, X0
	781 And TEMP, TEMP, 1
	782 Compare TEMP, 1
	783 JumpIfNotEqual {808}
	784 Move X0, 0xB4C000
	785 Move X0, [X0+1848]
	786 Call 0x1C17D08
	787 Move X22, X0
	788 Move X0, 0xB4D000
	789 Move X0, [X0+616]
	790 Call 0x1C17D08
	791 Move X2, X0
	792 Move X0, X20
	793 Move X1, X22
	794 Call Dictionary`2<Object, Object>.get_Item, X0, X1
	795 Move X22, X0
	796 Move X0, 0xB4B000
	797 Move X0, [X0+1880]
	798 Call 0x1C17D08
	799 Move X1, X0
	800 Compare X22, 0
	801 JumpIfNotEqual {860}
	802 Call 0x1C17F20
	803 Move X8, [X0]
	804 Move X9, [X8+360]
	805 Move X1, [X8+368]
	806 NotImplemented "Instruction BLR not yet implemented."
	807 Move X21, X0
	808 Move TEMP, 0
	809 Not TEMP
	810 Move W23, TEMP
	811 Move X8, [X19+96]
	812 Compare X8, 0
	813 JumpIfNotEqual {815}
	814 Call 0x1C17F20
	815 NotImplemented "Instruction LDRSW not yet implemented."
	816 Move X0, 0xB86000
	817 Move X0, [X0+2456]
	818 Call 0x1C17D08
	819 Call 0x1C17F10
	820 Move X22, X0
	821 Move X1, X24
	822 Move X2, X21
	823 Move W3, W23
	824 Call ApiResponseException..ctor, X0, X1, X2, X3
	825 Move X0, 0xB4E000
	826 Move X0, [X0+568]
	827 Call 0x1C17D08
	828 Move X21, X0
	829 Move X0, 0xB4D000
	830 Move X0, [X0+544]
	831 Call 0x1C17D08
	832 Move X2, X0
	833 Move X0, X20
	834 Move X1, X21
	835 Call Dictionary`2<Object, Object>.ContainsKey, X0, X1
	836 Move TEMP, X0
	837 And TEMP, TEMP, 1
	838 Compare TEMP, 1
	839 JumpIfNotEqual {854}
	840 Move X0, 0xB4E000
	841 Move X0, [X0+568]
	842 Call 0x1C17D08
	843 Move X21, X0
	844 Move X0, 0xB4D000
	845 Move X0, [X0+616]
	846 Call 0x1C17D08
	847 Move X2, X0
	848 Move X0, X20
	849 Move X1, X21
	850 Call Dictionary`2<Object, Object>.get_Item, X0, X1
	851 Move X1, X0
	852 Move X2, X22
	853 Call HttpAdapterUtil.CopyResponseError, X0, X1, X2
	854 Move X0, 0xB8F000
	855 Move X0, [X0+1536]
	856 Call 0x1C17D08
	857 Move X1, X0
	858 Move X0, X22
	859 Call 0x1C17DEC
	860 Move X8, [X22]
	861 Move X9, [X1+64]
	862 Move X8, [X8+64]
	863 NotImplemented "Instruction CMP not yet implemented."
	864 Move X0, X22
	865 Call 0x1C17E08
	866 Move W23, [X0]
	867 Move X0, X22
	868 Call 0x1C181E0
	869 Move X21, X0
	870 Move [X31+8], X1
	871 Move X21, X0
	872 NotImplemented "Instruction CMP not yet implemented."
	873 Move [X31+8], X1
	874 Move X0, X21
	875 Call 0x3EB2AD0
	876 Move X23, [X0]
	877 Call 0x3EB2AE0
	878 Move W21, W31
	879 Move TEMP, X24
	880 And TEMP, TEMP, -2147483648
	881 Compare TEMP, -2147483648
	882 JumpIfEqual {295}
	883 Move X23, X31
	884 Move TEMP, X24
	885 And TEMP, TEMP, -2147483648
	886 Compare TEMP, -2147483648
	887 JumpIfNotEqual {913}
	888 Compare X22, 0
	889 JumpIfEqual {913}
	890 Move X10, 0xB4B000
	891 Move X8, [X22]
	892 Move X10, [X10+3584]
	893 NotImplemented "Instruction LDRH not yet implemented."
	894 Move X1, [X10]
	895 Compare X9, 0
	896 JumpIfEqual {903}
	897 Move X10, [X8+176]
	898 Add X10, X10, 8
	899 NotImplemented "Instruction LDUR not yet implemented."
	900 NotImplemented "Instruction CMP not yet implemented."
	901 Subtract X9, X9, 1
	902 Add X10, X10, 16
	903 Move X0, X22
	904 Move W2, W31
	905 Call 0x1C5D788
	906 NotImplemented "Instruction LDRSW not yet implemented."
	907 Add X8, X8, X9
	908 Add X0, X8, 312
	909 Move X8, [X0]
	910 Move X1, [X0+8]
	911 Move X0, X22
	912 NotImplemented "Instruction BLR not yet implemented."
	913 Compare X23, 0
	914 JumpIfNotEqual {959}
	915 Move X8, [X31+8]
	916 NotImplemented "Instruction CMP not yet implemented."
	917 Move X0, X21
	918 Call 0x3EB2AD0
	919 Move X20, X0
	920 Move X0, 0xB4B000
	921 Move X0, [X0+2000]
	922 Call 0x1C17D08
	923 Move X8, [X20]
	924 Move X1, [X8]
	925 Call 0x1C18270
	926 Move TEMP, X0
	927 And TEMP, TEMP, 1
	928 Compare TEMP, 1
	929 JumpIfNotEqual {951}
	930 Move X20, [X20]
	931 Call 0x3EB2AE0
	932 Move TEMP, 1
	933 Not TEMP
	934 Move W8, TEMP
	935 Move [X19+96], X31
	936 Move [X19+8], W8
	937 Move X0, 0xB4E000
	938 Move X0, [X0+304]
	939 Call 0x1C17D08
	940 Move W8, [X0+224]
	941 Compare W8, 0
	942 JumpIfNotEqual {944}
	943 Call 0x1C17DFC
	944 Move X0, 0xB4E000
	945 Move X0, [X0+576]
	946 Call 0x1C17D08
	947 Move X2, X0
	948 Move X0, X19
	949 Move X1, X20
	950 Call AsyncTaskMethodBuilder`1<Object>.SetException, X0, X1
	951 Move W0, 8
	952 Call 0x3EB2AF0
	953 Move X8, [X20]
	954 Move [X0], X8
	955 Move X1, 0x90C000
	956 Add X1, X1, 3672
	957 Move X2, X31
	958 Call 0x3EB2B00
	959 Move X0, X23
	960 Call 0x1C17F18
	961 Move X21, X0
	962 Move [X31+8], X1
	963 Move TEMP, X24
	964 And TEMP, TEMP, -2147483648
	965 Compare TEMP, -2147483648
	966 JumpIfEqual {888}
	967 Move X21, X0
	968 Call 0x3EB2AE0
	969 Move X0, X21
	970 Call 0x1D2D690
	971 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x035A98FC BL 0x1C16F10
	0x035A9900 MOV W1, W21
	0x035A9904 MOV X2, X31
	0x035A9908 MOV X20, X0
	0x035A990C BL 0x3231B28
	0x035A9910 LDR W8, [X19 + 0x10]
	0x035A9914 SUB W8, W8, 0x1
	0x035A9918 CMP W8, 0x2
	0x035A991C B.LT 0x35A9C34
	0x035A9920 ADRP X23, 0xB88000
	0x035A9924 ADRP X24, 0xB88000
	0x035A9928 LDR X23, [X23 + 0x228]
	0x035A992C LDR X24, [X24 + 0x230]
	0x035A9930 MOVZ W21, 0x1
	0x035A9934 MOV X0, X19
	0x035A9938 MOV W1, W21
	0x035A993C MOV X2, X31
	0x035A9940 BL 0x3222A1C
	0x035A9944 AND W8, W0, 0xFFFF
	0x035A9948 CMP W8, 0x5C
	0x035A994C B.NE 0x35A9A18
	0x035A9950 LDR W8, [X19 + 0x10]
	0x035A9954 ADD W22, W21, 0x1
	0x035A9958 SUB W8, W8, 0x1
	0x035A995C CMP W22, W8
	0x035A9960 B.GE 0x35A9A18
	0x035A9964 MOV X0, X19
	0x035A9968 MOV W1, W22
	0x035A996C MOV X2, X31
	0x035A9970 BL 0x3222A1C
	0x035A9974 LDR X8, [X23]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xE38000
	007 Move X21, 0xB4E000
	008 Move W8, [X22+38]
	009 Move X21, [X21+304]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xB4E000
	017 Move X0, [X0+584]
	018 Call 0x1C17CF4
	019 Move X0, 0xB4E000
	020 Move X0, [X0+304]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+38], W8
	024 Move X0, [X21]
	025 Move X21, 0xB4E000
	026 Move W8, [X0+224]
	027 Move X21, [X21+584]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X2, [X21]
	032 Add X0, X20, 8
	033 Move X1, X19
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Call AsyncTaskMethodBuilder`1<Object>.SetStateMachine, X0, X1
	040 Return 

