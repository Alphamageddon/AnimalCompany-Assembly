Type: Satori.Client/<DeleteMessageAsync>d__45

Method: System.Void MoveNext()

Disassembly:
	0x035A17E8 LDR X22, [X19 + 0x40]
	0x035A17EC CBZ X22, 0x35A1B6C
	0x035A17F0 ADRP X10, 0xB96000
	0x035A17F4 LDR X8, [X22]
	0x035A17F8 LDR X10, [X10 + 0x418]
	0x035A17FC LDRH W9, [X8 + 0x12E]
	0x035A1800 LDR X1, [X10]
	0x035A1804 CBZ X9, 0x35A1828
	0x035A1808 LDR X10, [X8 + 0xB0]
	0x035A180C ADD X10, X10, 0x8
	0x035A1810 LDUR X11, [X10 - 0x8]
	0x035A1814 CMP X11, X1
	0x035A1818 B.EQ 0x35A1838
	0x035A181C SUBS X9, X9, 0x1
	0x035A1820 ADD X10, X10, 0x10
	0x035A1824 B.NE 0x35A1810
	0x035A1828 MOV X0, X22
	0x035A182C MOV W2, W31
	0x035A1830 BL 0x1C5C788
	0x035A1834 B 0x35A1844
	0x035A1838 LDRSW X9, [X10]
	0x035A183C ADD X8, X8, X9, 0x4, LSL
	0x035A1840 ADD X0, X8, 0x138
	0x035A1844 LDP X8, X1, [X0]
	0x035A1848 MOV X0, X22
	0x035A184C BLR X8
	0x035A1850 MOV X22, X0
	0x035A1854 CBZ X0, 0x35A1B70
	0x035A1858 ADRP X23, 0xB52000
	0x035A185C ADRP X26, 0xB96000
	0x035A1860 ADRP X27, 0xB96000
	0x035A1864 LDR X23, [X23 + 0xE18]
	0x035A1868 LDR X26, [X26 + 0x420]
	0x035A186C LDR X27, [X27 + 0x3E8]
	0x035A1870 LDR X8, [X22]
	0x035A1874 LDR X1, [X23]
	0x035A1878 LDRH W9, [X8 + 0x12E]
	0x035A187C CBZ X9, 0x35A18A0
	0x035A1880 LDR X10, [X8 + 0xB0]
	0x035A1884 ADD X10, X10, 0x8
	0x035A1888 LDUR X11, [X10 - 0x8]
	0x035A188C CMP X11, X1
	0x035A1890 B.EQ 0x35A18B0
	0x035A1894 SUBS X9, X9, 0x1
	0x035A1898 ADD X10, X10, 0x10
	0x035A189C B.NE 0x35A1888
	0x035A18A0 MOV X0, X22
	0x035A18A4 MOV W2, W31
	0x035A18A8 BL 0x1C5C788
	0x035A18AC B 0x35A18BC
	0x035A18B0 LDRSW X9, [X10]
	0x035A18B4 ADD X8, X8, X9, 0x4, LSL
	0x035A18B8 ADD X0, X8, 0x138
	0x035A18BC LDP X8, X1, [X0]
	0x035A18C0 MOV X0, X22
	0x035A18C4 BLR X8
	0x035A18C8 TBZ X0, 0x0, 0x35A1988
	0x035A18CC LDR X8, [X22]
	0x035A18D0 LDR X1, [X26]
	0x035A18D4 LDRH W9, [X8 + 0x12E]
	0x035A18D8 CBZ X9, 0x35A18FC
	0x035A18DC LDR X10, [X8 + 0xB0]
	0x035A18E0 ADD X10, X10, 0x8
	0x035A18E4 LDUR X11, [X10 - 0x8]
	0x035A18E8 CMP X11, X1
	0x035A18EC B.EQ 0x35A190C
	0x035A18F0 SUBS X9, X9, 0x1
	0x035A18F4 ADD X10, X10, 0x10
	0x035A18F8 B.NE 0x35A18E4
	0x035A18FC MOV X0, X22
	0x035A1900 MOV W2, W31
	0x035A1904 BL 0x1C5C788
	0x035A1908 B 0x35A1918
	0x035A190C LDRSW X9, [X10]
	0x035A1910 ADD X8, X8, X9, 0x4, LSL
	0x035A1914 ADD X0, X8, 0x138
	0x035A1918 LDP X8, X1, [X0]
	0x035A191C MOV X0, X22
	0x035A1920 BLR X8
	0x035A1924 CBZ X0, 0x35A1B64
	0x035A1928 BL 0x35A1374
	0x035A192C MOV X1, X0
	0x035A1930 CBZ X21, 0x35A1B68
	0x035A1934 LDR W10, [X21 + 0x1C]
	0x035A1938 LDR X8, [X21 + 0x10]
	0x035A193C LDR X9, [X27]
	0x035A1940 ADD W10, W10, 0x1
	0x035A1944 STR W10, [X21 + 0x1C]
	0x035A1948 CBZ X8, 0x35A1B60
	0x035A194C LDRSW X10, [X21 + 0x18]
	0x035A1950 LDR W11, [X8 + 0x18]
	0x035A1954 CMP W10, W11
	0x035A1958 B.CS 0x35A1970
	0x035A195C ADD W9, W10, 0x1
	0x035A1960 ADD X8, X8, X10, 0x3, LSL
	0x035A1964 STR W9, [X21 + 0x18]
	0x035A1968 STR X1, [X8 + 0x20]
	0x035A196C B 0x35A1870
	0x035A1970 LDR X8, [X9 + 0x20]
	0x035A1974 LDR X8, [X8 + 0xC0]
	0x035A1978 LDR X2, [X8 + 0x70]
	0x035A197C MOV X0, X21
	0x035A1980 BL 0x301BF90
	0x035A1984 B 0x35A1870
	0x035A1988 MOV X23, X31
	0x035A198C MOVZ W26, 0x9
	0x035A1990 TBZ X25, 0x1F, 0x35A19F8
	0x035A1994 CBZ X22, 0x35A19F8
	0x035A1998 ADRP X10, 0xB52000
	0x035A199C LDR X8, [X22]
	0x035A19A0 LDR X10, [X10 + 0xE00]
	0x035A19A4 LDRH W9, [X8 + 0x12E]
	0x035A19A8 LDR X1, [X10]
	0x035A19AC CBZ X9, 0x35A19D0
	0x035A19B0 LDR X10, [X8 + 0xB0]
	0x035A19B4 ADD X10, X10, 0x8
	0x035A19B8 LDUR X11, [X10 - 0x8]
	0x035A19BC CMP X11, X1
	0x035A19C0 B.EQ 0x35A19E0
	0x035A19C4 SUBS X9, X9, 0x1
	0x035A19C8 ADD X10, X10, 0x10
	0x035A19CC B.NE 0x35A19B8
	0x035A19D0 MOV X0, X22
	0x035A19D4 MOV W2, W31
	0x035A19D8 BL 0x1C5C788
	0x035A19DC B 0x35A19EC
	0x035A19E0 LDRSW X9, [X10]
	0x035A19E4 ADD X8, X8, X9, 0x4, LSL
	0x035A19E8 ADD X0, X8, 0x138
	0x035A19EC LDP X8, X1, [X0]
	0x035A19F0 MOV X0, X22
	0x035A19F4 BLR X8
	0x035A19F8 CBNZ X23, 0x35A1B74
	0x035A19FC CMP W26, 0x9
	0x035A1A00 B.EQ 0x35A1A08
	0x035A1A04 CBNZ W26, 0x35A1B44
	0x035A1A08 ADRP X8, 0xB96000
	0x035A1A0C LDR X8, [X8 + 0x3D0]
	0x035A1A10 LDR X0, [X8]
	0x035A1A14 BL 0x1C16F10
	0x035A1A18 MOV X22, X0
	0x035A1A1C MOV X1, X31
	0x035A1A20 BL 0x33BDD8C
	0x035A1A24 CBZ X22, 0x35A1B7C
	0x035A1A28 STR X21, [X22 + 0x10]
	0x035A1A2C CBZ X20, 0x35A1B80
	0x035A1A30 LDR X21, [X19 + 0x28]
	0x035A1A34 CBZ X21, 0x35A1B84
	0x035A1A38 ADRP X10, 0xB96000
	0x035A1A3C LDR X8, [X21]
	0x035A1A40 LDR X20, [X20 + 0x40]
	0x035A1A44 LDR X10, [X10 + 0x290]
	0x035A1A48 LDRH W9, [X8 + 0x12E]
	0x035A1A4C LDR X1, [X10]
	0x035A1A50 CBZ X9, 0x35A1A74
	0x035A1A54 LDR X10, [X8 + 0xB0]
	0x035A1A58 ADD X10, X10, 0x8
	0x035A1A5C LDUR X11, [X10 - 0x8]
	0x035A1A60 CMP X11, X1
	0x035A1A64 B.EQ 0x35A1A84
	0x035A1A68 SUBS X9, X9, 0x1
	0x035A1A6C ADD X10, X10, 0x10
	0x035A1A70 B.NE 0x35A1A5C
	0x035A1A74 MOV X0, X21
	0x035A1A78 MOV W2, W31
	0x035A1A7C BL 0x1C5C788
	0x035A1A80 B 0x35A1A90
	0x035A1A84 LDRSW X9, [X10]
	0x035A1A88 ADD X8, X8, X9, 0x4, LSL
	0x035A1A8C ADD X0, X8, 0x138
	0x035A1A90 LDP X8, X1, [X0]
	0x035A1A94 MOV X0, X21
	0x035A1A98 BLR X8
	0x035A1A9C MOV X1, X0
	0x035A1AA0 CBZ X20, 0x35A1B88
	0x035A1AA4 LDP X3, X4, [X19 + 0x30]
	0x035A1AA8 MOV X0, X20
	0x035A1AAC MOV X2, X22
	0x035A1AB0 BL 0x3596BF4
	0x035A1AB4 CBZ X0, 0x35A1B8C
	0x035A1AB8 MOV X1, X31
	0x035A1ABC BL 0x33ED394
	0x035A1AC0 STR X0, [X31 + 0x8]
	0x035A1AC4 ADD X0, X31, 0x8
	0x035A1AC8 MOV X1, X31
	0x035A1ACC BL 0x32C3A80
	0x035A1AD0 TBZ X0, 0x0, 0x35A1B08
	0x035A1AD4 ADD X0, X31, 0x8
	0x035A1AD8 MOV X1, X31
	0x035A1ADC BL 0x32C3B4C
	0x035A1AE0 MOVN W8, 0x1
	0x035A1AE4 STR W8, [X19], #0x8
	0x035A1AE8 LDR X0, [X24]
	0x035A1AEC LDR W8, [X0 + 0xE0]
	0x035A1AF0 CBNZ W8, 0x35A1AF8
	0x035A1AF4 BL 0x1C16DFC
	0x035A1AF8 MOV X0, X19
	0x035A1AFC MOV X1, X31
	0x035A1B00 BL 0x32C4864
	0x035A1B04 B 0x35A1B44
	0x035A1B08 MOVZ W8, 0x1
	0x035A1B0C STR W8, [X19]
	0x035A1B10 LDR X8, [X31 + 0x8]
	0x035A1B14 STR X8, [X19 + 0x50]
	0x035A1B18 LDR X0, [X24]
	0x035A1B1C LDR W8, [X0 + 0xE0]
	0x035A1B20 CBNZ W8, 0x35A1B28
	0x035A1B24 BL 0x1C16DFC
	0x035A1B28 ADRP X8, 0xB96000
	0x035A1B2C LDR X8, [X8 + 0x410]
	0x035A1B30 ADD X0, X19, 0x8
	0x035A1B34 LDR X3, [X8]
	0x035A1B38 ADD X1, X31, 0x8
	0x035A1B3C MOV X2, X19
	0x035A1B40 BL 0x218A9AC
	0x035A1B44 LDP X20, X19, [X31 + 0x60]
	0x035A1B48 LDP X22, X21, [X31 + 0x50]
	0x035A1B4C LDP X24, X23, [X31 + 0x40]
	0x035A1B50 LDP X26, X25, [X31 + 0x30]
	0x035A1B54 LDP X30, X27, [X31 + 0x20]
	0x035A1B58 ADD X31, X31, 0x70
	0x035A1B5C RET
	0x035A1B60 BL 0x1C16F20
	0x035A1B64 BL 0x1C16F20
	0x035A1B68 BL 0x1C16F20
	0x035A1B6C BL 0x1C16F20
	0x035A1B70 BL 0x1C16F20
	0x035A1B74 MOV X0, X23
	0x035A1B78 BL 0x1C16F18
	0x035A1B7C BL 0x1C16F20
	0x035A1B80 BL 0x1C16F20
	0x035A1B84 BL 0x1C16F20
	0x035A1B88 BL 0x1C16F20
	0x035A1B8C BL 0x1C16F20
	0x035A1B90 BL 0x1C16F20
	0x035A1B94 BL 0x1C16F20
	0x035A1B98 BL 0x1C16F20
	0x035A1B9C BL 0x1C16F20
	0x035A1BA0 B 0x35A1C18
	0x035A1BA4 B 0x35A1C18
	0x035A1BA8 B 0x35A1C18
	0x035A1BAC B 0x35A1C18
	0x035A1BB0 B 0x35A1C18
	0x035A1BB4 B 0x35A1C18
	0x035A1BB8 B 0x35A1C18
	0x035A1BBC B 0x35A1C18
	0x035A1BC0 B 0x35A1C18
	0x035A1BC4 B 0x35A1C18
	0x035A1BC8 B 0x35A1C18
	0x035A1BCC B 0x35A1C18
	0x035A1BD0 B 0x35A1C18
	0x035A1BD4 B 0x35A1C18
	0x035A1BD8 B 0x35A1C18
	0x035A1BDC B 0x35A1C18
	0x035A1BE0 B 0x35A1C18
	0x035A1BE4 B 0x35A1C18
	0x035A1BE8 B 0x35A1C18
	0x035A1BEC B 0x35A1C18
	0x035A1BF0 B 0x35A1C18
	0x035A1BF4 B 0x35A1C18
	0x035A1BF8 B 0x35A1C18
	0x035A1BFC B 0x35A1C34
	0x035A1C00 B 0x35A1C18
	0x035A1C04 B 0x35A1C18
	0x035A1C08 B 0x35A1C18
	0x035A1C0C B 0x35A1C18
	0x035A1C10 B 0x35A1C18
	0x035A1C14 B 0x35A1C18
	0x035A1C18 MOV X20, X1
	0x035A1C1C MOV X21, X0
	0x035A1C20 B 0x35A1CCC
	0x035A1C24 B 0x35A1C34
	0x035A1C28 B 0x35A1C34
	0x035A1C2C B 0x35A1C34
	0x035A1C30 B 0x35A1C34
	0x035A1C34 CMP W1, 0x1
	0x035A1C38 B.NE 0x35A1C54
	0x035A1C3C BL 0x3EB1AD0
	0x035A1C40 LDR X23, [X0]
	0x035A1C44 BL 0x3EB1AE0
	0x035A1C48 MOV W26, W31
	0x035A1C4C TBNZ X25, 0x1F, 0x35A1994
	0x035A1C50 B 0x35A19F8
	0x035A1C54 MOV X21, X0
	0x035A1C58 MOV X20, X1
	0x035A1C5C MOV X23, X31
	0x035A1C60 TBZ X25, 0x1F, 0x35A1CC8
	0x035A1C64 CBZ X22, 0x35A1CC8
	0x035A1C68 ADRP X10, 0xB52000
	0x035A1C6C LDR X8, [X22]
	0x035A1C70 LDR X10, [X10 + 0xE00]
	0x035A1C74 LDRH W9, [X8 + 0x12E]
	0x035A1C78 LDR X1, [X10]
	0x035A1C7C CBZ X9, 0x35A1CA0
	0x035A1C80 LDR X10, [X8 + 0xB0]
	0x035A1C84 ADD X10, X10, 0x8
	0x035A1C88 LDUR X11, [X10 - 0x8]
	0x035A1C8C CMP X11, X1
	0x035A1C90 B.EQ 0x35A1CB0
	0x035A1C94 SUBS X9, X9, 0x1
	0x035A1C98 ADD X10, X10, 0x10
	0x035A1C9C B.NE 0x35A1C88
	0x035A1CA0 MOV X0, X22
	0x035A1CA4 MOV W2, W31
	0x035A1CA8 BL 0x1C5C788
	0x035A1CAC B 0x35A1CBC
	0x035A1CB0 LDRSW X9, [X10]
	0x035A1CB4 ADD X8, X8, X9, 0x4, LSL
	0x035A1CB8 ADD X0, X8, 0x138
	0x035A1CBC LDP X8, X1, [X0]
	0x035A1CC0 MOV X0, X22
	0x035A1CC4 BLR X8
	0x035A1CC8 CBNZ X23, 0x35A1D58
	0x035A1CCC CMP W20, 0x1
	0x035A1CD0 B.NE 0x35A1D78
	0x035A1CD4 MOV X0, X21
	0x035A1CD8 BL 0x3EB1AD0
	0x035A1CDC MOV X20, X0
	0x035A1CE0 ADRP X0, 0xB52000
	0x035A1CE4 LDR X0, [X0 + 0x7D0]
	0x035A1CE8 BL 0x1C16D08
	0x035A1CEC LDR X8, [X20]
	0x035A1CF0 LDR X1, [X8]
	0x035A1CF4 BL 0x1C17270

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+32], X24
	004 Move [X31+40], X23
	005 Move [X31+48], X22
	006 Move [X31+56], X21
	007 Move [X31+64], X20
	008 Move [X31+72], X19
	009 Move X20, 0xE3F000
	010 Move W8, [X20+4092]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {45}
	016 Move X0, 0xB97000
	017 Move X0, [X0+960]
	018 Call 0x1C17CF4
	019 Move X0, 0xB97000
	020 Move X0, [X0+968]
	021 Call 0x1C17CF4
	022 Move X0, 0xB56000
	023 Move X0, [X0+640]
	024 Call 0x1C17CF4
	025 Move X0, 0xB97000
	026 Move X0, [X0+832]
	027 Call 0x1C17CF4
	028 Move X0, 0xB54000
	029 Move X0, [X0+2544]
	030 Call 0x1C17CF4
	031 Move X0, 0xB97000
	032 Move X0, [X0+656]
	033 Call 0x1C17CF4
	034 Move X0, 0xB97000
	035 Move X0, [X0+936]
	036 Call 0x1C17CF4
	037 Move X0, 0xB97000
	038 Move X0, [X0+944]
	039 Call 0x1C17CF4
	040 Move X0, 0xB97000
	041 Move X0, [X0+952]
	042 Call 0x1C17CF4
	043 Move W8, 1
	044 Move [X20+4092], W8
	045 Move [X31+24], X31
	046 Move [X31], X31
	047 Move [X31+8], X31
	048 Move X23, 0xB56000
	049 Move X24, 0xB97000
	050 Move W8, [X19]
	051 Move X20, [X19+32]
	052 Move X23, [X23+640]
	053 Move X24, [X24+656]
	054 Compare W8, 0
	055 JumpIfEqual {64}
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Move X8, [X19+80]
	058 Move TEMP, 0
	059 Not TEMP
	060 Move W9, TEMP
	061 Move [X31], X8
	062 Move [X19+80], X31
	063 Move [X19], W9
	064 Move X8, [X19+72]
	065 Move TEMP, 0
	066 Not TEMP
	067 Move W9, TEMP
	068 Move [X31+8], X8
	069 Move [X19+72], X31
	070 Move [X19], W9
	071 Move X8, 0xB97000
	072 Move X8, [X8+936]
	073 Add X0, X31, 8
	074 Move X1, [X8]
	075 Call TaskAwaiter`1<Object>.GetResult, X0
	076 Compare X20, 0
	077 JumpIfEqual {294}
	078 Move W8, [X20+16]
	079 Compare W8, 0
	080 JumpIfEqual {205}
	081 Move X21, [X19+40]
	082 Compare X21, 0
	083 JumpIfEqual {295}
	084 Move X8, [X21]
	085 Move X1, [X24]
	086 NotImplemented "Instruction LDRH not yet implemented."
	087 Compare X9, 0
	088 JumpIfEqual {95}
	089 Move X10, [X8+176]
	090 Add X10, X10, 8
	091 NotImplemented "Instruction LDUR not yet implemented."
	092 NotImplemented "Instruction CMP not yet implemented."
	093 Subtract X9, X9, 1
	094 Add X10, X10, 16
	095 Move W2, 5
	096 Move X0, X21
	097 Call 0x1C5D788
	098 Move W9, [X10]
	099 Add W9, W9, 5
	100 Add X8, X8, W9
	101 Add X0, X8, 312
	102 Move X8, [X0]
	103 Move X1, [X0+8]
	104 Move X0, X21
	105 NotImplemented "Instruction BLR not yet implemented."
	106 Move X1, X31
	107 Call String.IsNullOrEmpty, X0
	108 Move TEMP, X0
	109 And TEMP, TEMP, 1
	110 Compare TEMP, 1
	111 JumpIfEqual {203}
	112 Move X8, 0xB54000
	113 Move X8, [X8+2544]
	114 Move X21, [X19+40]
	115 Move X0, [X8]
	116 Move W8, [X0+224]
	117 Compare W8, 0
	118 JumpIfNotEqual {120}
	119 Call 0x1C17DFC
	120 Move X0, X31
	121 Call DateTime.get_UtcNow
	122 Move X22, 0xB97000
	123 Move X22, [X22+832]
	124 Move X8, X0
	125 Move [X31+24], X8
	126 Move X0, [X22]
	127 Move W8, [X0+224]
	128 Compare W8, 0
	129 JumpIfNotEqual {132}
	130 Call 0x1C17DFC
	131 Move X0, [X22]
	132 Move X8, [X0+184]
	133 Move X1, [X8]
	134 Add X0, X31, 24
	135 Move X2, X31
	136 Call DateTime.Add, X0, X1
	137 Compare X21, 0
	138 JumpIfEqual {296}
	139 Move X8, [X21]
	140 Move X1, [X24]
	141 Move X22, X0
	142 NotImplemented "Instruction LDRH not yet implemented."
	143 Compare X9, 0
	144 JumpIfEqual {151}
	145 Move X10, [X8+176]
	146 Add X10, X10, 8
	147 NotImplemented "Instruction LDUR not yet implemented."
	148 NotImplemented "Instruction CMP not yet implemented."
	149 Subtract X9, X9, 1
	150 Add X10, X10, 16
	151 Move W2, 7
	152 Move X0, X21
	153 Call 0x1C5D788
	154 Move W9, [X10]
	155 Add W9, W9, 7
	156 Add X8, X8, W9
	157 Add X0, X8, 312
	158 Move X8, [X0]
	159 Move X2, [X0+8]
	160 Move X0, X21
	161 Move X1, X22
	162 NotImplemented "Instruction BLR not yet implemented."
	163 Move TEMP, X0
	164 And TEMP, TEMP, 1
	165 Compare TEMP, 1
	166 JumpIfNotEqual {203}
	167 Move X1, [X19+40]
	168 Move X2, [X19+48]
	169 Move X3, [X19+56]
	170 Move X0, X20
	171 Call Client.SessionRefreshAsync, X0, X1, X2
	172 Compare X0, 0
	173 JumpIfEqual {297}
	174 Move X8, 0xB97000
	175 Move X8, [X8+952]
	176 Move X1, [X8]
	177 Call Task`1<Object>.GetAwaiter, X0
	178 Move X8, 0xB97000
	179 Move X8, [X8+944]
	180 Move [X31+8], X0
	181 Move X1, [X8]
	182 Add X0, X31, 8
	183 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	184 Move TEMP, X0
	185 And TEMP, TEMP, 1
	186 Compare TEMP, 1
	187 JumpIfEqual {71}
	188 Move [X19], W31
	189 Move X8, [X31+8]
	190 Move [X19+72], X8
	191 Move X0, [X23]
	192 Move W8, [X0+224]
	193 Compare W8, 0
	194 JumpIfNotEqual {196}
	195 Call 0x1C17DFC
	196 Move X8, 0xB97000
	197 Move X8, [X8+960]
	198 Add X0, X19, 8
	199 Move X3, [X8]
	200 Add X1, X31, 8
	201 Move X2, X19
	202 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	203 Compare X20, 0
	204 JumpIfEqual {293}
	205 Move X21, [X19+40]
	206 Compare X21, 0
	207 JumpIfEqual {290}
	208 Move X8, [X21]
	209 Move X20, [X20+64]
	210 Move X1, [X24]
	211 NotImplemented "Instruction LDRH not yet implemented."
	212 Compare X9, 0
	213 JumpIfEqual {220}
	214 Move X10, [X8+176]
	215 Add X10, X10, 8
	216 NotImplemented "Instruction LDUR not yet implemented."
	217 NotImplemented "Instruction CMP not yet implemented."
	218 Subtract X9, X9, 1
	219 Add X10, X10, 16
	220 Move X0, X21
	221 Move W2, W31
	222 Call 0x1C5D788
	223 NotImplemented "Instruction LDRSW not yet implemented."
	224 Add X8, X8, X9
	225 Add X0, X8, 312
	226 Move X8, [X0]
	227 Move X1, [X0+8]
	228 Move X0, X21
	229 NotImplemented "Instruction BLR not yet implemented."
	230 Move X1, X0
	231 Compare X20, 0
	232 JumpIfEqual {291}
	233 Move X3, [X19+48]
	234 Move X4, [X19+56]
	235 Move X2, [X19+64]
	236 Move X0, X20
	237 Call ApiClient.SatoriDeleteMessageAsync, X0, X1, X2, X3
	238 Compare X0, 0
	239 JumpIfEqual {292}
	240 Move X1, X31
	241 Call Task.GetAwaiter, X0
	242 Move [X31], X0
	243 Add X0, X31, 0
	244 Move X1, X31
	245 Call TaskAwaiter.get_IsCompleted, X0
	246 Move TEMP, X0
	247 And TEMP, TEMP, 1
	248 Compare TEMP, 1
	249 JumpIfNotEqual {265}
	250 Add X0, X31, 0
	251 Move X1, X31
	252 Call TaskAwaiter.GetResult, X0
	253 Move TEMP, 1
	254 Not TEMP
	255 Move W8, TEMP
	256 Move [X19+8], W8
	257 Move X0, [X23]
	258 Move W8, [X0+224]
	259 Compare W8, 0
	260 JumpIfNotEqual {262}
	261 Call 0x1C17DFC
	262 Move X0, X19
	263 Move X1, X31
	264 Call AsyncTaskMethodBuilder.SetResult, X0
	265 Move W8, 1
	266 Move [X19], W8
	267 Move X8, [X31]
	268 Move [X19+80], X8
	269 Move X0, [X23]
	270 Move W8, [X0+224]
	271 Compare W8, 0
	272 JumpIfNotEqual {274}
	273 Call 0x1C17DFC
	274 Move X8, 0xB97000
	275 Move X8, [X8+968]
	276 Add X0, X19, 8
	277 Move X3, [X8]
	278 Add X1, X31, 0
	279 Move X2, X19
	280 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	281 Move X20, [X31+64]
	282 Move X19, [X31+72]
	283 Move X22, [X31+48]
	284 Move X21, [X31+56]
	285 Move X24, [X31+32]
	286 Move X23, [X31+40]
	287 Move X30, [X31+16]
	288 Add X31, X31, 80
	289 Return 
	290 Call 0x1C17F20
	291 Call 0x1C17F20
	292 Call 0x1C17F20
	293 Call 0x1C17F20
	294 Call 0x1C17F20
	295 Call 0x1C17F20
	296 Call 0x1C17F20
	297 Call 0x1C17F20
	298 Move X20, X0
	299 NotImplemented "Instruction CMP not yet implemented."
	300 Move X0, X20
	301 Call 0x3EB2AD0
	302 Move X20, X0
	303 Move X0, 0xB53000
	304 Move X0, [X0+2000]
	305 Call 0x1C17D08
	306 Move X8, [X20]
	307 Move X1, [X8]
	308 Call 0x1C18270
	309 Move TEMP, X0
	310 And TEMP, TEMP, 1
	311 Compare TEMP, 1
	312 JumpIfNotEqual {330}
	313 Move X20, [X20]
	314 Call 0x3EB2AE0
	315 Move TEMP, 1
	316 Not TEMP
	317 Move W8, TEMP
	318 Move [X19+8], W8
	319 Move X0, 0xB56000
	320 Move X0, [X0+640]
	321 Call 0x1C17D08
	322 Move W8, [X0+224]
	323 Compare W8, 0
	324 JumpIfNotEqual {326}
	325 Call 0x1C17DFC
	326 Move X0, X19
	327 Move X1, X20
	328 Move X2, X31
	329 Call AsyncTaskMethodBuilder.SetException, X0, X1
	330 Move W0, 8
	331 Call 0x3EB2AF0
	332 Move X8, [X20]
	333 Move [X0], X8
	334 Move X1, 0x914000
	335 Add X1, X1, 3672
	336 Move X2, X31
	337 Call 0x3EB2B00
	338 Move X20, X0
	339 Call 0x3EB2AE0
	340 Move X0, X20
	341 Call 0x1D2D690
	342 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x035A1CF8 TBZ X0, 0x0, 0x35A1D38
	0x035A1CFC LDR X20, [X20]
	0x035A1D00 BL 0x3EB1AE0
	0x035A1D04 MOVN W8, 0x1
	0x035A1D08 STR W8, [X19], #0x8
	0x035A1D0C ADRP X0, 0xB55000
	0x035A1D10 LDR X0, [X0 + 0x280]
	0x035A1D14 BL 0x1C16D08
	0x035A1D18 LDR W8, [X0 + 0xE0]
	0x035A1D1C CBNZ W8, 0x35A1D24
	0x035A1D20 BL 0x1C16DFC
	0x035A1D24 MOV X0, X19
	0x035A1D28 MOV X1, X20
	0x035A1D2C MOV X2, X31
	0x035A1D30 BL 0x32C4908
	0x035A1D34 B 0x35A1B44
	0x035A1D38 MOVZ W0, 0x8
	0x035A1D3C BL 0x3EB1AF0
	0x035A1D40 LDR X8, [X20]
	0x035A1D44 STR X8, [X0]
	0x035A1D48 ADRP X1, 0x913000
	0x035A1D4C ADD X1, X1, 0xE58
	0x035A1D50 MOV X2, X31
	0x035A1D54 BL 0x3EB1B00
	0x035A1D58 MOV X0, X23
	0x035A1D5C BL 0x1C16F18

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xE3F000
	007 Move X22, 0xB56000
	008 Move W8, [X21+4093]
	009 Move X22, [X22+640]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xB56000
	017 Move X0, [X0+640]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+4093], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Add X0, X20, 8
	027 Move X1, X19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X2, X31
	033 Move X30, [X31+48]
	034 Call AsyncTaskMethodBuilder.SetStateMachine, X0, X1
	035 Return 

