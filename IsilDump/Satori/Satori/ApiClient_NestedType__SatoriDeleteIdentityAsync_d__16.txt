Type: Satori.ApiClient/<SatoriDeleteIdentityAsync>d__16

Method: System.Void MoveNext()

Disassembly:
	0x03599B1C MOV X0, X20
	0x03599B20 BL 0x3EB1AD0
	0x03599B24 MOV X20, X0
	0x03599B28 ADRP X0, 0xB5A000
	0x03599B2C LDR X0, [X0 + 0x7D0]
	0x03599B30 BL 0x1C16D08
	0x03599B34 LDR X8, [X20]
	0x03599B38 LDR X1, [X8]
	0x03599B3C BL 0x1C17270
	0x03599B40 TBZ X0, 0x0, 0x3599B80
	0x03599B44 LDR X20, [X20]
	0x03599B48 BL 0x3EB1AE0
	0x03599B4C MOVN W8, 0x1
	0x03599B50 STR W8, [X19], #0x8
	0x03599B54 ADRP X0, 0xB5D000
	0x03599B58 LDR X0, [X0 + 0x280]
	0x03599B5C BL 0x1C16D08
	0x03599B60 LDR W8, [X0 + 0xE0]
	0x03599B64 CBNZ W8, 0x3599B6C
	0x03599B68 BL 0x1C16DFC
	0x03599B6C MOV X0, X19
	0x03599B70 MOV X1, X20
	0x03599B74 MOV X2, X31
	0x03599B78 BL 0x32C4908
	0x03599B7C B 0x3599A20
	0x03599B80 MOVZ W0, 0x8
	0x03599B84 BL 0x3EB1AF0
	0x03599B88 LDR X8, [X20]
	0x03599B8C STR X8, [X0]
	0x03599B90 ADRP X1, 0x91B000
	0x03599B94 ADD X1, X1, 0xE58
	0x03599B98 MOV X2, X31
	0x03599B9C BL 0x3EB1B00
	0x03599BA0 MOV X20, X0
	0x03599BA4 BL 0x3EB1AE0
	0x03599BA8 MOV X0, X20
	0x03599BAC BL 0x1D2C690
	0x03599BB0 BL 0x1990590
	0x03599BB4 STR X30, [X31 - 0x30]!
	0x03599BB8 STP X22, X21, [X31 + 0x10]
	0x03599BBC STP X20, X19, [X31 + 0x20]
	0x03599BC0 ADRP X21, 0xE46000
	0x03599BC4 ADRP X22, 0xB5D000
	0x03599BC8 LDRB W8, [X21 + 0xFCE]
	0x03599BCC LDR X22, [X22 + 0x280]
	0x03599BD0 MOV X19, X1
	0x03599BD4 MOV X20, X0
	0x03599BD8 TBNZ X8, 0x0, 0x3599BF0
	0x03599BDC ADRP X0, 0xB5D000
	0x03599BE0 LDR X0, [X0 + 0x280]
	0x03599BE4 BL 0x1C16CF4
	0x03599BE8 MOVZ W8, 0x1
	0x03599BEC STRB W8, [X21 + 0xFCE]
	0x03599BF0 LDR X0, [X22]
	0x03599BF4 LDR W8, [X0 + 0xE0]
	0x03599BF8 CBNZ W8, 0x3599C00
	0x03599BFC BL 0x1C16DFC
	0x03599C00 ADD X0, X20, 0x8
	0x03599C04 MOV X1, X19
	0x03599C08 LDP X20, X19, [X31 + 0x20]
	0x03599C0C LDP X22, X21, [X31 + 0x10]
	0x03599C10 MOV X2, X31
	0x03599C14 LDR X30, [X31], #0x30
	0x03599C18 B 0x32C477C
	0x03599C1C SUB X31, X31, 0x80
	0x03599C20 STP X29, X30, [X31 + 0x20]
	0x03599C24 STP X28, X27, [X31 + 0x30]
	0x03599C28 STP X26, X25, [X31 + 0x40]
	0x03599C2C STP X24, X23, [X31 + 0x50]
	0x03599C30 STP X22, X21, [X31 + 0x60]
	0x03599C34 STP X20, X19, [X31 + 0x70]
	0x03599C38 ADRP X20, 0xE46000
	0x03599C3C LDRB W8, [X20 + 0xFCF]
	0x03599C40 MOV X19, X0
	0x03599C44 TBNZ X8, 0x0, 0x3599D88
	0x03599C48 ADRP X0, 0xB9E000
	0x03599C4C LDR X0, [X0 + 0xF8]
	0x03599C50 BL 0x1C16CF4
	0x03599C54 ADRP X0, 0xB9E000
	0x03599C58 LDR X0, [X0 + 0x100]
	0x03599C5C BL 0x1C16CF4
	0x03599C60 ADRP X0, 0xB9D000
	0x03599C64 LDR X0, [X0 + 0xF80]
	0x03599C68 BL 0x1C16CF4
	0x03599C6C ADRP X0, 0xB63000
	0x03599C70 LDR X0, [X0 + 0x8D8]
	0x03599C74 BL 0x1C16CF4
	0x03599C78 ADRP X0, 0xB5B000
	0x03599C7C LDR X0, [X0 + 0x810]
	0x03599C80 BL 0x1C16CF4
	0x03599C84 ADRP X0, 0xB5B000
	0x03599C88 LDR X0, [X0 + 0x6C0]
	0x03599C8C BL 0x1C16CF4
	0x03599C90 ADRP X0, 0xB5B000
	0x03599C94 LDR X0, [X0 + 0x6D0]
	0x03599C98 BL 0x1C16CF4
	0x03599C9C ADRP X0, 0xB5A000
	0x03599CA0 LDR X0, [X0 + 0xE00]
	0x03599CA4 BL 0x1C16CF4
	0x03599CA8 ADRP X0, 0xB5A000
	0x03599CAC LDR X0, [X0 + 0xF70]
	0x03599CB0 BL 0x1C16CF4
	0x03599CB4 ADRP X0, 0xB5A000
	0x03599CB8 LDR X0, [X0 + 0xF78]
	0x03599CBC BL 0x1C16CF4
	0x03599CC0 ADRP X0, 0xB5A000
	0x03599CC4 LDR X0, [X0 + 0xE18]
	0x03599CC8 BL 0x1C16CF4
	0x03599CCC ADRP X0, 0xB9E000
	0x03599CD0 LDR X0, [X0 + 0x58]
	0x03599CD4 BL 0x1C16CF4
	0x03599CD8 ADRP X0, 0xB9E000
	0x03599CDC LDR X0, [X0 + 0x108]
	0x03599CE0 BL 0x1C16CF4
	0x03599CE4 ADRP X0, 0xB5A000
	0x03599CE8 LDR X0, [X0 + 0xAC8]
	0x03599CEC BL 0x1C16CF4
	0x03599CF0 ADRP X0, 0xB5D000
	0x03599CF4 LDR X0, [X0 + 0x1E0]
	0x03599CF8 BL 0x1C16CF4
	0x03599CFC ADRP X0, 0xB5D000
	0x03599D00 LDR X0, [X0 + 0x1F0]
	0x03599D04 BL 0x1C16CF4
	0x03599D08 ADRP X0, 0xB5D000
	0x03599D0C LDR X0, [X0 + 0x1F8]
	0x03599D10 BL 0x1C16CF4
	0x03599D14 ADRP X0, 0xB63000
	0x03599D18 LDR X0, [X0 + 0x3A0]
	0x03599D1C BL 0x1C16CF4
	0x03599D20 ADRP X0, 0xB5C000
	0x03599D24 LDR X0, [X0 + 0xA28]
	0x03599D28 BL 0x1C16CF4
	0x03599D2C ADRP X0, 0xB9E000
	0x03599D30 LDR X0, [X0 + 0x110]
	0x03599D34 BL 0x1C16CF4
	0x03599D38 ADRP X0, 0xB83000
	0x03599D3C LDR X0, [X0 + 0x4D0]
	0x03599D40 BL 0x1C16CF4
	0x03599D44 ADRP X0, 0xB63000
	0x03599D48 LDR X0, [X0 + 0x720]
	0x03599D4C BL 0x1C16CF4
	0x03599D50 ADRP X0, 0xB9E000
	0x03599D54 LDR X0, [X0 + 0x118]
	0x03599D58 BL 0x1C16CF4
	0x03599D5C ADRP X0, 0xB95000
	0x03599D60 LDR X0, [X0 + 0x7D0]
	0x03599D64 BL 0x1C16CF4
	0x03599D68 ADRP X0, 0xB95000
	0x03599D6C LDR X0, [X0 + 0x7D8]
	0x03599D70 BL 0x1C16CF4
	0x03599D74 ADRP X0, 0xB5A000
	0x03599D78 LDR X0, [X0 + 0x988]
	0x03599D7C BL 0x1C16CF4
	0x03599D80 MOVZ W8, 0x1
	0x03599D84 STRB W8, [X20 + 0xFCF]
	0x03599D88 STR X31, [X31 + 0x18]
	0x03599D8C ADRP X27, 0xB9D000
	0x03599D90 LDR W24, [X19]
	0x03599D94 LDR X27, [X27 + 0xF80]
	0x03599D98 CBZ W24, 0x3599E20
	0x03599D9C ADRP X8, 0xB9E000
	0x03599DA0 ADRP X9, 0xB5A000
	0x03599DA4 LDR X8, [X8 + 0x110]
	0x03599DA8 LDR X9, [X9 + 0x988]
	0x03599DAC LDP X21, X20, [X19 + 0x20]
	0x03599DB0 LDR X23, [X8]
	0x03599DB4 LDR X26, [X9]
	0x03599DB8 CBNZ X21, 0x3599DD8
	0x03599DBC ADRP X8, 0xB5A000
	0x03599DC0 LDR X8, [X8 + 0xAC8]
	0x03599DC4 LDR X0, [X8]
	0x03599DC8 MOV W1, W31
	0x03599DCC BL 0x1C16D6C
	0x03599DD0 MOV X21, X0
	0x03599DD4 CBZ X0, 0x359A2DC
	0x03599DD8 ADRP X10, 0xB5A000
	0x03599DDC LDR X8, [X21]
	0x03599DE0 LDR X10, [X10 + 0xF70]
	0x03599DE4 LDRH W9, [X8 + 0x12E]
	0x03599DE8 LDR X1, [X10]
	0x03599DEC CBZ X9, 0x3599E10
	0x03599DF0 LDR X10, [X8 + 0xB0]
	0x03599DF4 ADD X10, X10, 0x8
	0x03599DF8 LDUR X11, [X10 - 0x8]
	0x03599DFC CMP X11, X1
	0x03599E00 B.EQ 0x3599E38
	0x03599E04 SUBS X9, X9, 0x1
	0x03599E08 ADD X10, X10, 0x10
	0x03599E0C B.NE 0x3599DF8
	0x03599E10 MOV X0, X21
	0x03599E14 MOV W2, W31
	0x03599E18 BL 0x1C5C788
	0x03599E1C B 0x3599E44
	0x03599E20 LDR X8, [X19 + 0x48]
	0x03599E24 MOVN W9, 0x0
	0x03599E28 STR X8, [X31 + 0x18]
	0x03599E2C STR X31, [X19 + 0x48]
	0x03599E30 STR W9, [X19]
	0x03599E34 B 0x359A1F8
	0x03599E38 LDRSW X9, [X10]
	0x03599E3C ADD X8, X8, X9, 0x4, LSL
	0x03599E40 ADD X0, X8, 0x138
	0x03599E44 LDP X8, X1, [X0]
	0x03599E48 MOV X0, X21
	0x03599E4C BLR X8
	0x03599E50 STP X23, X20, [X31 + 0x8]
	0x03599E54 ADRP X28, 0xB5A000
	0x03599E58 ADRP X29, 0xB5A000
	0x03599E5C ADRP X27, 0xB5C000
	0x03599E60 ADRP X20, 0xB9E000
	0x03599E64 ADRP X25, 0xB63000
	0x03599E68 LDR X28, [X28 + 0xE18]
	0x03599E6C LDR X29, [X29 + 0xF78]
	0x03599E70 LDR X27, [X27 + 0xA28]
	0x03599E74 LDR X20, [X20 + 0x118]
	0x03599E78 LDR X25, [X25 + 0x720]
	0x03599E7C MOV X22, X0
	0x03599E80 MOV X0, X26
	0x03599E84 CBZ X22, 0x359A2AC
	0x03599E88 LDR X8, [X22]
	0x03599E8C LDR X1, [X28]
	0x03599E90 MOV X21, X0
	0x03599E94 LDRH W9, [X8 + 0x12E]
	0x03599E98 CBZ X9, 0x3599EBC
	0x03599E9C LDR X10, [X8 + 0xB0]
	0x03599EA0 ADD X10, X10, 0x8
	0x03599EA4 LDUR X11, [X10 - 0x8]
	0x03599EA8 CMP X11, X1
	0x03599EAC B.EQ 0x3599ECC
	0x03599EB0 SUBS X9, X9, 0x1
	0x03599EB4 ADD X10, X10, 0x10
	0x03599EB8 B.NE 0x3599EA4
	0x03599EBC MOV X0, X22
	0x03599EC0 MOV W2, W31
	0x03599EC4 BL 0x1C5C788
	0x03599EC8 B 0x3599ED8
	0x03599ECC LDRSW X9, [X10]
	0x03599ED0 ADD X8, X8, X9, 0x4, LSL
	0x03599ED4 ADD X0, X8, 0x138
	0x03599ED8 LDP X8, X1, [X0]
	0x03599EDC MOV X0, X22
	0x03599EE0 BLR X8
	0x03599EE4 TBZ X0, 0x0, 0x3599F7C
	0x03599EE8 LDR X8, [X22]
	0x03599EEC LDR X1, [X29]
	0x03599EF0 LDRH W9, [X8 + 0x12E]
	0x03599EF4 CBZ X9, 0x3599F18
	0x03599EF8 LDR X10, [X8 + 0xB0]
	0x03599EFC ADD X10, X10, 0x8
	0x03599F00 LDUR X11, [X10 - 0x8]
	0x03599F04 CMP X11, X1
	0x03599F08 B.EQ 0x3599F28
	0x03599F0C SUBS X9, X9, 0x1
	0x03599F10 ADD X10, X10, 0x10
	0x03599F14 B.NE 0x3599F00
	0x03599F18 MOV X0, X22
	0x03599F1C MOV W2, W31
	0x03599F20 BL 0x1C5C788
	0x03599F24 B 0x3599F34
	0x03599F28 LDRSW X9, [X10]
	0x03599F2C ADD X8, X8, X9, 0x4, LSL
	0x03599F30 ADD X0, X8, 0x138
	0x03599F34 LDP X8, X1, [X0]
	0x03599F38 MOV X0, X22
	0x03599F3C BLR X8
	0x03599F40 MOV X23, X0
	0x03599F44 LDR X0, [X27]
	0x03599F48 LDR W8, [X0 + 0xE0]
	0x03599F4C CBNZ W8, 0x3599F54
	0x03599F50 BL 0x1C16DFC
	0x03599F54 MOV X0, X23
	0x03599F58 MOV X1, X31
	0x03599F5C BL 0x3624D20
	0x03599F60 LDR X1, [X20]
	0x03599F64 LDR X3, [X25]
	0x03599F68 MOV X2, X0
	0x03599F6C MOV X0, X21
	0x03599F70 MOV X4, X31
	0x03599F74 BL 0x32277C4
	0x03599F78 B 0x3599E84
	0x03599F7C MOV X23, X31
	0x03599F80 MOVZ W20, 0x6
	0x03599F84 ADRP X27, 0xB9D000
	0x03599F88 LDR X27, [X27 + 0xF80]
	0x03599F8C LDR X25, [X31 + 0x10]
	0x03599F90 TBZ X24, 0x1F, 0x3599FF8
	0x03599F94 CBZ X22, 0x3599FF8
	0x03599F98 ADRP X10, 0xB5A000
	0x03599F9C LDR X8, [X22]
	0x03599FA0 LDR X10, [X10 + 0xE00]
	0x03599FA4 LDRH W9, [X8 + 0x12E]
	0x03599FA8 LDR X1, [X10]
	0x03599FAC CBZ X9, 0x3599FD0
	0x03599FB0 LDR X10, [X8 + 0xB0]
	0x03599FB4 ADD X10, X10, 0x8
	0x03599FB8 LDUR X11, [X10 - 0x8]
	0x03599FBC CMP X11, X1
	0x03599FC0 B.EQ 0x3599FE0
	0x03599FC4 SUBS X9, X9, 0x1
	0x03599FC8 ADD X10, X10, 0x10
	0x03599FCC B.NE 0x3599FB8
	0x03599FD0 MOV X0, X22
	0x03599FD4 MOV W2, W31
	0x03599FD8 BL 0x1C5C788
	0x03599FDC B 0x3599FEC
	0x03599FE0 LDRSW X9, [X10]
	0x03599FE4 ADD X8, X8, X9, 0x4, LSL

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+16], X30
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X20, 0xE47000
	013 Move W8, [X20+4041]
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {69}
	019 Move X0, 0xB9F000
	020 Move X0, [X0+184]
	021 Call 0x1C17CF4
	022 Move X0, 0xB5E000
	023 Move X0, [X0+640]
	024 Call 0x1C17CF4
	025 Move X0, 0xB64000
	026 Move X0, [X0+2264]
	027 Call 0x1C17CF4
	028 Move X0, 0xB5C000
	029 Move X0, [X0+2064]
	030 Call 0x1C17CF4
	031 Move X0, 0xB5C000
	032 Move X0, [X0+1728]
	033 Call 0x1C17CF4
	034 Move X0, 0xB5C000
	035 Move X0, [X0+1744]
	036 Call 0x1C17CF4
	037 Move X0, 0xB9F000
	038 Move X0, [X0+88]
	039 Call 0x1C17CF4
	040 Move X0, 0xB5E000
	041 Move X0, [X0+480]
	042 Call 0x1C17CF4
	043 Move X0, 0xB5E000
	044 Move X0, [X0+496]
	045 Call 0x1C17CF4
	046 Move X0, 0xB5E000
	047 Move X0, [X0+504]
	048 Call 0x1C17CF4
	049 Move X0, 0xB64000
	050 Move X0, [X0+928]
	051 Call 0x1C17CF4
	052 Move X0, 0xB9F000
	053 Move X0, [X0+192]
	054 Call 0x1C17CF4
	055 Move X0, 0xB96000
	056 Move X0, [X0+2000]
	057 Call 0x1C17CF4
	058 Move X0, 0xB96000
	059 Move X0, [X0+2008]
	060 Call 0x1C17CF4
	061 Move X0, 0xB5B000
	062 Move X0, [X0+2440]
	063 Call 0x1C17CF4
	064 Move X0, 0xB84000
	065 Move X0, [X0+1224]
	066 Call 0x1C17CF4
	067 Move W8, 1
	068 Move [X20+4041], W8
	069 Move [X31+8], X31
	070 Move X27, 0xB5E000
	071 Move W8, [X19]
	072 Move X27, [X27+640]
	073 Compare W8, 0
	074 JumpIfEqual {186}
	075 Move X24, [X19+32]
	076 Compare X24, 0
	077 JumpIfEqual {269}
	078 Move X0, [X24+32]
	079 Compare X0, 0
	080 JumpIfEqual {270}
	081 Move X8, 0xB9F000
	082 Move X9, 0xB5B000
	083 Move X8, [X8+192]
	084 Move X9, [X9+2440]
	085 Move X21, [X8]
	086 Move X20, [X9]
	087 Move X1, X31
	088 Call Uri.get_AbsolutePath, X0
	089 Move X8, 0xB64000
	090 Move X8, [X8+2264]
	091 Move X22, X0
	092 Move X0, [X8]
	093 Move W1, 1
	094 Call 0x1C17D6C
	095 Move X1, X0
	096 Compare X1, 0
	097 JumpIfEqual {271}
	098 Move W8, [X1+24]
	099 Compare W8, 0
	100 JumpIfEqual {272}
	101 Move W8, 47
	102 NotImplemented "Instruction STRH not yet implemented."
	103 Compare X22, 0
	104 JumpIfEqual {273}
	105 Move X0, X22
	106 Move X2, X31
	107 Call String.TrimEnd, X0, X1
	108 Move X1, X21
	109 Move X2, X31
	110 Call String.Concat, X0, X1
	111 Move X8, 0xB64000
	112 Move X8, [X8+928]
	113 Move X22, X0
	114 Move X23, [X24+32]
	115 Move X0, [X8]
	116 Call 0x1C17F10
	117 Move X21, X0
	118 Move X1, X23
	119 Move X2, X31
	120 Call UriBuilder..ctor, X0, X1
	121 Compare X21, 0
	122 JumpIfEqual {274}
	123 Move X0, X21
	124 Move X1, X22
	125 Move X2, X31
	126 Call UriBuilder.set_Path, X0, X1
	127 Move X0, X21
	128 Move X1, X20
	129 Move X2, X31
	130 Call UriBuilder.set_Query, X0, X1
	131 Move X0, X21
	132 Move X1, X31
	133 Call UriBuilder.get_Uri, X0
	134 Move X8, 0xB84000
	135 Move X9, 0xB5C000
	136 Move X8, [X8+1224]
	137 Move X9, [X9+1744]
	138 Move X20, X0
	139 Move X21, [X8]
	140 Move X0, [X9]
	141 Call 0x1C17F10
	142 Move X8, 0xB5C000
	143 Move X8, [X8+1728]
	144 Move X22, X0
	145 Move X1, [X8]
	146 Call Dictionary`2<Object, Object>..ctor, X0
	147 Move X8, 0xB96000
	148 Move X8, [X8+2008]
	149 Move X1, [X19+40]
	150 Move X0, [X8]
	151 Move X2, X31
	152 Call String.Concat, X0, X1
	153 Compare X22, 0
	154 JumpIfEqual {275}
	155 Move X8, 0xB96000
	156 Move X8, [X8+2000]
	157 Move X9, 0xB5C000
	158 Move X9, [X9+2064]
	159 Move X2, X0
	160 Move X1, [X8]
	161 Move X3, [X9]
	162 Move X0, X22
	163 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	164 Move X23, [X24+16]
	165 Compare X23, 0
	166 JumpIfEqual {276}
	167 Move X10, 0xB9F000
	168 Move X10, [X10+88]
	169 Move X8, [X23]
	170 Move W25, [X24+24]
	171 Move X26, [X19+48]
	172 Move X24, [X19+56]
	173 Move X1, [X10]
	174 NotImplemented "Instruction LDRH not yet implemented."
	175 Compare X9, 0
	176 JumpIfEqual {183}
	177 Move X10, [X8+176]
	178 Add X10, X10, 8
	179 NotImplemented "Instruction LDUR not yet implemented."
	180 NotImplemented "Instruction CMP not yet implemented."
	181 Subtract X9, X9, 1
	182 Add X10, X10, 16
	183 Move W2, 3
	184 Move X0, X23
	185 Call 0x1C5D788
	186 Move X8, [X19+64]
	187 Move TEMP, 0
	188 Not TEMP
	189 Move W9, TEMP
	190 Move [X31+8], X8
	191 Move [X19+64], X31
	192 Move [X19], W9
	193 Move W9, [X10]
	194 Add W9, W9, 3
	195 Add X8, X8, W9
	196 Add X0, X8, 312
	197 Move X8, [X0]
	198 Move X9, [X0+8]
	199 Move X0, X23
	200 Move X1, X21
	201 Move X2, X20
	202 Move X3, X22
	203 Move X4, X31
	204 Move W5, W25
	205 Move X6, X26
	206 Move X7, X24
	207 Move [X31], X9
	208 NotImplemented "Instruction BLR not yet implemented."
	209 Compare X0, 0
	210 JumpIfEqual {277}
	211 Move X8, 0xB5E000
	212 Move X8, [X8+504]
	213 Move X1, [X8]
	214 Call Task`1<Object>.GetAwaiter, X0
	215 Move X8, 0xB5E000
	216 Move X8, [X8+496]
	217 Move [X31+8], X0
	218 Move X1, [X8]
	219 Add X0, X31, 8
	220 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	221 Move TEMP, X0
	222 And TEMP, TEMP, 1
	223 Compare TEMP, 1
	224 JumpIfNotEqual {242}
	225 Move X8, 0xB5E000
	226 Move X8, [X8+480]
	227 Add X0, X31, 8
	228 Move X1, [X8]
	229 Call TaskAwaiter`1<Object>.GetResult, X0
	230 Move TEMP, 1
	231 Not TEMP
	232 Move W8, TEMP
	233 Move [X19+8], W8
	234 Move X0, [X27]
	235 Move W8, [X0+224]
	236 Compare W8, 0
	237 JumpIfNotEqual {239}
	238 Call 0x1C17DFC
	239 Move X0, X19
	240 Move X1, X31
	241 Call AsyncTaskMethodBuilder.SetResult, X0
	242 Move [X19], W31
	243 Move X8, [X31+8]
	244 Move [X19+64], X8
	245 Move X0, [X27]
	246 Move W8, [X0+224]
	247 Compare W8, 0
	248 JumpIfNotEqual {250}
	249 Call 0x1C17DFC
	250 Move X8, 0xB9F000
	251 Move X8, [X8+184]
	252 Add X0, X19, 8
	253 Move X3, [X8]
	254 Add X1, X31, 8
	255 Move X2, X19
	256 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	257 Move X20, [X31+80]
	258 Move X19, [X31+88]
	259 Move X22, [X31+64]
	260 Move X21, [X31+72]
	261 Move X24, [X31+48]
	262 Move X23, [X31+56]
	263 Move X26, [X31+32]
	264 Move X25, [X31+40]
	265 Move X30, [X31+16]
	266 Move X27, [X31+24]
	267 Add X31, X31, 96
	268 Return 
	269 Call 0x1C17F20
	270 Call 0x1C17F20
	271 Call 0x1C17F20
	272 Call 0x1C17F28
	273 Call 0x1C17F20
	274 Call 0x1C17F20
	275 Call 0x1C17F20
	276 Call 0x1C17F20
	277 Call 0x1C17F20
	278 Move X20, X0
	279 NotImplemented "Instruction CMP not yet implemented."
	280 Move X0, X20
	281 Call 0x3EB2AD0
	282 Move X20, X0
	283 Move X0, 0xB5B000
	284 Move X0, [X0+2000]
	285 Call 0x1C17D08
	286 Move X8, [X20]
	287 Move X1, [X8]
	288 Call 0x1C18270
	289 Move TEMP, X0
	290 And TEMP, TEMP, 1
	291 Compare TEMP, 1
	292 JumpIfNotEqual {310}
	293 Move X20, [X20]
	294 Call 0x3EB2AE0
	295 Move TEMP, 1
	296 Not TEMP
	297 Move W8, TEMP
	298 Move [X19+8], W8
	299 Move X0, 0xB5E000
	300 Move X0, [X0+640]
	301 Call 0x1C17D08
	302 Move W8, [X0+224]
	303 Compare W8, 0
	304 JumpIfNotEqual {306}
	305 Call 0x1C17DFC
	306 Move X0, X19
	307 Move X1, X20
	308 Move X2, X31
	309 Call AsyncTaskMethodBuilder.SetException, X0, X1
	310 Move W0, 8
	311 Call 0x3EB2AF0
	312 Move X8, [X20]
	313 Move [X0], X8
	314 Move X1, 0x91C000
	315 Add X1, X1, 3672
	316 Move X2, X31
	317 Call 0x3EB2B00
	318 Move X20, X0
	319 Call 0x3EB2AE0
	320 Move X0, X20
	321 Call 0x1D2D690
	322 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x03599FE8 ADD X0, X8, 0x138
	0x03599FEC LDP X8, X1, [X0]
	0x03599FF0 MOV X0, X22
	0x03599FF4 BLR X8
	0x03599FF8 CBNZ X23, 0x359A2B0
	0x03599FFC CMP W20, 0x6
	0x0359A000 B.EQ 0x359A008
	0x0359A004 CBNZ W20, 0x359A28C
	0x0359A008 CBZ X25, 0x359A2B8
	0x0359A00C LDR X0, [X25 + 0x20]
	0x0359A010 CBZ X0, 0x359A2BC
	0x0359A014 MOV X1, X31
	0x0359A018 BL 0x361B448
	0x0359A01C ADRP X8, 0xB62000
	0x0359A020 LDR X8, [X8 + 0x8D8]
	0x0359A024 MOV X22, X0
	0x0359A028 LDR X0, [X8]
	0x0359A02C MOVZ W1, 0x1
	0x0359A030 BL 0x1C16D6C
	0x0359A034 MOV X1, X0
	0x0359A038 CBZ X1, 0x359A2C0
	0x0359A03C LDR W8, [X1 + 0x18]
	0x0359A040 CBZ W8, 0x359A2C4
	0x0359A044 MOVZ W8, 0x2F
	0x0359A048 STRH W8, [X1 + 0x20]
	0x0359A04C CBZ X22, 0x359A2C8

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xE47000
	007 Move X22, 0xB5E000
	008 Move W8, [X21+4042]
	009 Call 0x3EB28F4
	010 Return 
	011 Move X19, X1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0xB5D000
	018 Move X0, [X0+640]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+4042], W8
	022 Move X0, [X22]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Add X0, X20, 8
	028 Move X1, X19
	029 Move X20, [X31+32]
	030 Move X19, [X31+40]
	031 Move X22, [X31+16]
	032 Move X21, [X31+24]
	033 Move X2, X31
	034 Move X30, [X31+48]
	035 Call AsyncTaskMethodBuilder.SetStateMachine, X0, X1
	036 Return 

