Type: UnityEngine.TerrainUtils.TerrainMap

Method: UnityEngine.Terrain GetTerrain(System.Int32 tileX, System.Int32 tileZ)

Disassembly:
	0x03C9B39C LDR X8, [X8 + 0xB8]
	0x03C9B3A0 FMOV S1, 8
	0x03C9B3A4 FMUL S0, S0, S11
	0x03C9B3A8 LDR V2, [X8]
	0x03C9B3AC FMUL S1, S2, S1
	0x03C9B3B0 FCMP S0, S1
	0x03C9B3B4 FCSEL S0, S0, S1, GT
	0x03C9B3B8 FABD S1, S9, S9
	0x03C9B3BC FCMP S1, S0
	0x03C9B3C0 B.PL 0x3C9B48C
	0x03C9B3C4 MOV X0, X20
	0x03C9B3C8 MOV X1, X31
	0x03C9B3CC BL 0x3C32E90
	0x03C9B3D0 CBZ X0, 0x3C9B654
	0x03C9B3D4 MOV X1, X31
	0x03C9B3D8 BL 0x3C3F58C
	0x03C9B3DC ADRP X25, 0x74C000
	0x03C9B3E0 LDR X8, [X25 + 0x168]
	0x03C9B3E4 MOV V8.16B, V2.16B
	0x03C9B3E8 CBNZ X8, 0x3C9B400
	0x03C9B3EC ADRP X0, 0xFFFFFFFFFCE60000
	0x03C9B3F0 ADD X0, X0, 0xA9D
	0x03C9B3F4 BL 0x1C16CB8
	0x03C9B3F8 MOV X8, X0
	0x03C9B3FC STR X0, [X25 + 0x168]
	0x03C9B400 MOV X0, X20
	0x03C9B404 BLR X8
	0x03C9B408 CBZ X0, 0x3C9B654
	0x03C9B40C BL 0x3C9A0F8
	0x03C9B410 MOV X0, X22

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x74D000
	007 Move W8, [X22+464]
	008 Move W19, W2
	009 Move W20, W1
	010 Move X21, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x4C7000
	016 Move X0, [X0+248]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+464], W8
	020 Move [X31+8], X31
	021 Move X0, [X21+32]
	022 Compare X0, 0
	023 JumpIfEqual {38}
	024 Move X8, 0x4C7000
	025 Move X8, [X8+248]
	026 Move W1, W20
	027 NotImplemented "Instruction BFM not yet implemented."
	028 Add X2, X31, 8
	029 Move X3, [X8]
	030 Call Dictionary`2<TerrainTileCoord, Object>.TryGetValue, X0, X1, X2
	031 Move X0, [X31+8]
	032 Move X20, [X31+32]
	033 Move X19, [X31+40]
	034 Move X22, [X31+16]
	035 Move X21, [X31+24]
	036 Move X30, [X31+48]
	037 Return X0
	038 Call 0x1C17F20

Method: UnityEngine.TerrainUtils.TerrainMap CreateFromPlacement(UnityEngine.Terrain originTerrain, System.Predicate`1<UnityEngine.Terrain> filter = null, System.Boolean fullValidation = True)

Disassembly:
	0x03C9B414 MOV X1, X31
	0x03C9B418 MOV V10.16B, V2.16B
	0x03C9B41C BL 0x3C32E90
	0x03C9B420 CBZ X0, 0x3C9B654
	0x03C9B424 MOV X1, X31
	0x03C9B428 BL 0x3C3F58C
	0x03C9B42C LDRB W8, [X23 + 0x5AA]
	0x03C9B430 MOV V9.16B, V2.16B
	0x03C9B434 FADD S8, S8, S10
	0x03C9B438 CBNZ W8, 0x3C9B450
	0x03C9B43C ADRP X0, 0x45F000
	0x03C9B440 LDR X0, [X0 + 0x4B8]
	0x03C9B444 BL 0x1C16CF4
	0x03C9B448 MOVZ W8, 0x1
	0x03C9B44C STRB W8, [X23 + 0x5AA]
	0x03C9B450 LDR X8, [X24]
	0x03C9B454 FABS S0, S8
	0x03C9B458 FABS S1, S9
	0x03C9B45C FCMP S0, S1
	0x03C9B460 LDR X8, [X8 + 0xB8]
	0x03C9B464 FMOV S2, 8
	0x03C9B468 FCSEL S0, S0, S1, GT
	0x03C9B46C FMUL S0, S0, S11
	0x03C9B470 LDR V3, [X8]
	0x03C9B474 FMUL S1, S3, S2
	0x03C9B478 FCMP S0, S1
	0x03C9B47C FCSEL S0, S0, S1, GT
	0x03C9B480 FABD S1, S9, S9
	0x03C9B484 FCMP S1, S0
	0x03C9B488 B.MI 0x3C9B498
	0x03C9B48C LDR W8, [X19 + 0x1C]
	0x03C9B490 ORR W8, W8, 0x8
	0x03C9B494 STR W8, [X19 + 0x1C]
	0x03C9B498 LDR X0, [X26]
	0x03C9B49C LDR W8, [X0 + 0xE0]
	0x03C9B4A0 CBNZ W8, 0x3C9B4A8
	0x03C9B4A4 BL 0x1C16DFC
	0x03C9B4A8 MOV X0, X21
	0x03C9B4AC MOV X1, X31
	0x03C9B4B0 BL 0x3C38948
	0x03C9B4B4 TBZ X0, 0x0, 0x3C9B634
	0x03C9B4B8 CBZ X20, 0x3C9B654
	0x03C9B4BC MOV X0, X20
	0x03C9B4C0 MOV X1, X31
	0x03C9B4C4 BL 0x3C32E90
	0x03C9B4C8 CBZ X0, 0x3C9B654
	0x03C9B4CC MOV X1, X31
	0x03C9B4D0 BL 0x3C3F58C
	0x03C9B4D4 CBZ X21, 0x3C9B654
	0x03C9B4D8 MOV X0, X21
	0x03C9B4DC MOV X1, X31
	0x03C9B4E0 MOV V8.16B, V0.16B
	0x03C9B4E4 BL 0x3C32E90
	0x03C9B4E8 CBZ X0, 0x3C9B654
	0x03C9B4EC MOV X1, X31
	0x03C9B4F0 BL 0x3C3F58C
	0x03C9B4F4 ADRP X22, 0x73E000
	0x03C9B4F8 LDRB W8, [X22 + 0x5AA]
	0x03C9B4FC MOV V9.16B, V0.16B
	0x03C9B500 CBNZ W8, 0x3C9B518
	0x03C9B504 ADRP X0, 0x45F000
	0x03C9B508 LDR X0, [X0 + 0x4B8]
	0x03C9B50C BL 0x1C16CF4
	0x03C9B510 MOVZ W8, 0x1
	0x03C9B514 STRB W8, [X22 + 0x5AA]
	0x03C9B518 ADRP X23, 0x45F000
	0x03C9B51C LDR X23, [X23 + 0x4B8]
	0x03C9B520 ADRP X9, 0xFFFFFFFFFCE4F000
	0x03C9B524 LDR V10, [X9 + 0x240]
	0x03C9B528 FABS S0, S8
	0x03C9B52C LDR X8, [X23]
	0x03C9B530 FABS S1, S9
	0x03C9B534 FCMP S0, S1
	0x03C9B538 FCSEL S0, S0, S1, GT
	0x03C9B53C LDR X8, [X8 + 0xB8]
	0x03C9B540 FMOV S1, 8
	0x03C9B544 FMUL S0, S0, S10
	0x03C9B548 LDR V2, [X8]
	0x03C9B54C FMUL S1, S2, S1
	0x03C9B550 FCMP S0, S1
	0x03C9B554 FCSEL S0, S0, S1, GT
	0x03C9B558 FABD S1, S9, S9
	0x03C9B55C FCMP S1, S0
	0x03C9B560 B.PL 0x3C9B628
	0x03C9B564 MOV X0, X20
	0x03C9B568 MOV X1, X31
	0x03C9B56C BL 0x3C32E90
	0x03C9B570 CBZ X0, 0x3C9B654
	0x03C9B574 MOV X1, X31
	0x03C9B578 BL 0x3C3F58C
	0x03C9B57C MOV X0, X21
	0x03C9B580 MOV X1, X31
	0x03C9B584 MOV V8.16B, V2.16B
	0x03C9B588 BL 0x3C32E90
	0x03C9B58C CBZ X0, 0x3C9B654
	0x03C9B590 MOV X1, X31
	0x03C9B594 BL 0x3C3F58C
	0x03C9B598 ADRP X20, 0x74C000
	0x03C9B59C LDR X8, [X20 + 0x168]
	0x03C9B5A0 MOV V9.16B, V2.16B
	0x03C9B5A4 CBNZ X8, 0x3C9B5BC
	0x03C9B5A8 ADRP X0, 0xFFFFFFFFFCE60000
	0x03C9B5AC ADD X0, X0, 0xA9D
	0x03C9B5B0 BL 0x1C16CB8
	0x03C9B5B4 MOV X8, X0
	0x03C9B5B8 STR X0, [X20 + 0x168]
	0x03C9B5BC MOV X0, X21
	0x03C9B5C0 BLR X8
	0x03C9B5C4 CBZ X0, 0x3C9B654
	0x03C9B5C8 BL 0x3C9A0F8
	0x03C9B5CC LDRB W8, [X22 + 0x5AA]
	0x03C9B5D0 FADD S9, S9, S2
	0x03C9B5D4 CBNZ W8, 0x3C9B5EC
	0x03C9B5D8 ADRP X0, 0x45F000
	0x03C9B5DC LDR X0, [X0 + 0x4B8]
	0x03C9B5E0 BL 0x1C16CF4
	0x03C9B5E4 MOVZ W8, 0x1
	0x03C9B5E8 STRB W8, [X22 + 0x5AA]
	0x03C9B5EC LDR X8, [X23]
	0x03C9B5F0 FABS S0, S8
	0x03C9B5F4 FABS S1, S9
	0x03C9B5F8 FCMP S0, S1
	0x03C9B5FC LDR X8, [X8 + 0xB8]
	0x03C9B600 FMOV S2, 8
	0x03C9B604 FCSEL S0, S0, S1, GT
	0x03C9B608 FMUL S0, S0, S10
	0x03C9B60C LDR V3, [X8]
	0x03C9B610 FMUL S1, S3, S2
	0x03C9B614 FCMP S0, S1
	0x03C9B618 FCSEL S0, S0, S1, GT
	0x03C9B61C FABD S1, S9, S9
	0x03C9B620 FCMP S1, S0
	0x03C9B624 B.MI 0x3C9B634
	0x03C9B628 LDR W8, [X19 + 0x1C]
	0x03C9B62C ORR W8, W8, 0x8
	0x03C9B630 STR W8, [X19 + 0x1C]
	0x03C9B634 LDP X20, X19, [X31 + 0x60]
	0x03C9B638 LDP X22, X21, [X31 + 0x50]
	0x03C9B63C LDP X24, X23, [X31 + 0x40]
	0x03C9B640 LDP X26, X25, [X31 + 0x30]
	0x03C9B644 LDP X30, X27, [X31 + 0x20]
	0x03C9B648 LDP D9, D8, [X31 + 0x10]
	0x03C9B64C LDP D11, D10, [X31], #0x70
	0x03C9B650 RET
	0x03C9B654 BL 0x1C16F20
	0x03C9B658 STP X30, X21, [X31 - 0x20]!
	0x03C9B65C STP X20, X19, [X31 + 0x10]
	0x03C9B660 CBZ X1, 0x3C9B6AC
	0x03C9B664 ADRP X21, 0x74C000
	0x03C9B668 LDR X8, [X21 + 0x178]
	0x03C9B66C MOV X20, X1
	0x03C9B670 MOV X19, X0
	0x03C9B674 CBNZ X8, 0x3C9B68C
	0x03C9B678 ADRP X0, 0xFFFFFFFFFCE7E000
	0x03C9B67C ADD X0, X0, 0x48E
	0x03C9B680 BL 0x1C16CB8
	0x03C9B684 MOV X8, X0
	0x03C9B688 STR X0, [X21 + 0x178]
	0x03C9B68C MOV X0, X20
	0x03C9B690 BLR X8
	0x03C9B694 LDR W8, [X19 + 0x10]
	0x03C9B698 LDP X20, X19, [X31 + 0x10]
	0x03C9B69C CMP W0, W8
	0x03C9B6A0 CSET W0, EQ
	0x03C9B6A4 LDP X30, X21, [X31], #0x20
	0x03C9B6A8 RET
	0x03C9B6AC BL 0x1C16F20
	0x03C9B6B0 STP X30, X19, [X31 - 0x10]!
	0x03C9B6B4 ADRP X19, 0x74C000
	0x03C9B6B8 LDR X8, [X19 + 0x188]
	0x03C9B6BC CBNZ X8, 0x3C9B6D4

ISIL:
	001 Move [X31-96], D11
	002 Move [X31-88], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X22, 0x74D000
	013 Move X23, 0x4C7000
	014 Move W8, [X22+465]
	015 Move X23, [X23+256]
	016 Move W19, W2
	017 Move X20, X1
	018 Move X21, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {37}
	023 Move X0, 0x459000
	024 Move X0, [X0+1432]
	025 Call 0x1C17CF4
	026 Move X0, 0x4C7000
	027 Move X0, [X0+264]
	028 Call 0x1C17CF4
	029 Move X0, 0x4C7000
	030 Move X0, [X0+272]
	031 Call 0x1C17CF4
	032 Move X0, 0x4C7000
	033 Move X0, [X0+256]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X22+465], W8
	037 Move X0, [X23]
	038 Call 0x1C17F10
	039 Move X1, X31
	040 Move X22, X0
	041 Call Object..ctor, X0
	042 Move X23, 0x74D000
	043 Move X8, [X23+392]
	044 Compare X8, 0
	045 JumpIfNotEqual {51}
	046 Move X0, -51949568
	047 Add X0, X0, 3161
	048 Call 0x1C17CB8
	049 Move X8, X0
	050 Move [X23+392], X0
	051 NotImplemented "Instruction BLR not yet implemented."
	052 Compare X0, 0
	053 JumpIfEqual {111}
	054 Move X8, [X23+392]
	055 Compare X8, 0
	056 JumpIfNotEqual {62}
	057 Move X0, -51949568
	058 Add X0, X0, 3161
	059 Call 0x1C17CB8
	060 Move X8, X0
	061 Move [X23+392], X0
	062 NotImplemented "Instruction BLR not yet implemented."
	063 Compare X0, 0
	064 JumpIfEqual {214}
	065 Move X8, [X0+24]
	066 Compare X8, 0
	067 JumpIfEqual {111}
	068 Move X23, 0x459000
	069 Move X23, [X23+1432]
	070 Move X0, [X23]
	071 Move W8, [X0+224]
	072 Compare W8, 0
	073 JumpIfNotEqual {75}
	074 Call 0x1C17DFC
	075 Move X0, X21
	076 Move X1, X31
	077 Move X2, X31
	078 Call Object.op_Equality, X0, X1
	079 Move TEMP, X0
	080 And TEMP, TEMP, 1
	081 Compare TEMP, 1
	082 JumpIfEqual {111}
	083 Compare X21, 0
	084 JumpIfEqual {214}
	085 Move X24, 0x74D000
	086 Move X8, [X24+360]
	087 Compare X8, 0
	088 JumpIfNotEqual {94}
	089 Move X0, -52031488
	090 Add X0, X0, 2717
	091 Call 0x1C17CB8
	092 Move X8, X0
	093 Move [X24+360], X0
	094 Move X0, X21
	095 NotImplemented "Instruction BLR not yet implemented."
	096 Move X8, [X23]
	097 Move X23, X0
	098 Move W9, [X8+224]
	099 Compare W9, 0
	100 JumpIfNotEqual {103}
	101 Move X0, X8
	102 Call 0x1C17DFC
	103 Move X0, X23
	104 Move X1, X31
	105 Move X2, X31
	106 Call Object.op_Equality, X0, X1
	107 Move TEMP, X0
	108 And TEMP, TEMP, 1
	109 Compare TEMP, 1
	110 JumpIfNotEqual {124}
	111 Move X20, [X31+80]
	112 Move X19, [X31+88]
	113 Move X22, [X31+64]
	114 Move X21, [X31+72]
	115 Move X24, [X31+48]
	116 Move X23, [X31+56]
	117 Move X30, [X31+32]
	118 Move D9, [X31+16]
	119 Move D8, [X31+24]
	120 Move X0, X31
	121 Move D11, [X31+96]
	122 Move D10, [X31+104]
	123 Return X0
	124 Move X23, 0x74D000
	125 Move X8, [X23+376]
	126 Compare X8, 0
	127 JumpIfNotEqual {133}
	128 Move X0, -51908608
	129 Add X0, X0, 1166
	130 Call 0x1C17CB8
	131 Move X8, X0
	132 Move [X23+376], X0
	133 Move X0, X21
	134 NotImplemented "Instruction BLR not yet implemented."
	135 Compare X22, 0
	136 JumpIfEqual {214}
	137 Move [X22+16], W0
	138 Move X0, X21
	139 Move X1, X31
	140 Call Component.get_transform, X0
	141 Compare X0, 0
	142 JumpIfEqual {214}
	143 Move X1, X31
	144 Call Transform.get_position, X0
	145 Move X0, X21
	146 Move X1, X31
	147 Move V8, V0
	148 Call Component.get_transform, X0
	149 Compare X0, 0
	150 JumpIfEqual {214}
	151 Move X1, X31
	152 Call Transform.get_position, X0
	153 Move X8, [X24+360]
	154 Move V9, V2
	155 Compare X8, 0
	156 JumpIfNotEqual {162}
	157 Move X0, -52031488
	158 Add X0, X0, 2717
	159 Call 0x1C17CB8
	160 Move X8, X0
	161 Move [X24+360], X0
	162 Move X0, X21
	163 NotImplemented "Instruction BLR not yet implemented."
	164 Compare X0, 0
	165 JumpIfEqual {214}
	166 Call TerrainData.get_size, X0
	167 Move X8, [X24+360]
	168 Move V10, V0
	169 Compare X8, 0
	170 JumpIfNotEqual {176}
	171 Move X0, -52031488
	172 Add X0, X0, 2717
	173 Call 0x1C17CB8
	174 Move X8, X0
	175 Move [X24+360], X0
	176 Move X0, X21
	177 NotImplemented "Instruction BLR not yet implemented."
	178 Compare X0, 0
	179 JumpIfEqual {214}
	180 Call TerrainData.get_size, X0
	181 Move V11, V2
	182 Compare X20, 0
	183 JumpIfNotEqual {195}
	184 Move X8, 0x4C7000
	185 Move X8, [X8+264]
	186 Move X0, [X8]
	187 Call 0x1C17F10
	188 Move X8, 0x4C7000
	189 Move X8, [X8+272]
	190 Move X1, X22
	191 Move X3, X31
	192 Move X20, X0
	193 Move X2, [X8]
	194 Call Predicate`1<Object>..ctor, X0, X1, X2
	195 And W1, W19, 1
	196 Move V0, V8
	197 Move V1, V9
	198 Move X0, X20
	199 Move X20, [X31+80]
	200 Move X19, [X31+88]
	201 Move X22, [X31+64]
	202 Move X21, [X31+72]
	203 Move X24, [X31+48]
	204 Move X23, [X31+56]
	205 Move X30, [X31+32]
	206 Move D9, [X31+16]
	207 Move D8, [X31+24]
	208 Move V2, V10
	209 Move V3, V11
	210 Move D11, [X31+96]
	211 Move D10, [X31+104]
	212 Call TerrainMap.CreateFromPlacement, X0, X1, X2, X3
	213 Return X0
	214 Call 0x1C17F20

Method: UnityEngine.TerrainUtils.TerrainMap CreateFromPlacement(UnityEngine.Vector2 gridOrigin, UnityEngine.Vector2 gridSize, System.Predicate`1<UnityEngine.Terrain> filter = null, System.Boolean fullValidation = True)

Disassembly:
	0x03C9B6C8 BL 0x1C16CB8
	0x03C9B6CC MOV X8, X0
	0x03C9B6D0 STR X0, [X19 + 0x188]
	0x03C9B6D4 BLR X8
	0x03C9B6D8 CBZ X0, 0x3C9B70C
	0x03C9B6DC LDR X8, [X19 + 0x188]
	0x03C9B6E0 CBNZ X8, 0x3C9B6F8
	0x03C9B6E4 ADRP X0, 0xFFFFFFFFFCE74000
	0x03C9B6E8 ADD X0, X0, 0xC59
	0x03C9B6EC BL 0x1C16CB8
	0x03C9B6F0 MOV X8, X0
	0x03C9B6F4 STR X0, [X19 + 0x188]
	0x03C9B6F8 BLR X8
	0x03C9B6FC CBZ X0, 0x3C9B714
	0x03C9B700 LDR W8, [X0 + 0x18]
	0x03C9B704 CMP W8, 0x0
	0x03C9B708 CSET W0, NE
	0x03C9B70C LDP X30, X19, [X31], #0x10
	0x03C9B710 RET
	0x03C9B714 BL 0x1C16F20
	0x03C9B718 STP X30, X25, [X31 - 0x40]!
	0x03C9B71C STP X24, X23, [X31 + 0x10]
	0x03C9B720 STP X22, X21, [X31 + 0x20]
	0x03C9B724 STP X20, X19, [X31 + 0x30]
	0x03C9B728 ADRP X19, 0x74C000
	0x03C9B72C LDR X8, [X19 + 0x188]
	0x03C9B730 CBNZ X8, 0x3C9B748
	0x03C9B734 ADRP X0, 0xFFFFFFFFFCE74000
	0x03C9B738 ADD X0, X0, 0xC59
	0x03C9B73C BL 0x1C16CB8
	0x03C9B740 MOV X8, X0
	0x03C9B744 STR X0, [X19 + 0x188]
	0x03C9B748 BLR X8
	0x03C9B74C CBZ X0, 0x3C9B80C
	0x03C9B750 LDR W8, [X0 + 0x18]
	0x03C9B754 MOV X19, X0
	0x03C9B758 CMP W8, 0x1
	0x03C9B75C B.LT 0x3C9B7F4
	0x03C9B760 ADRP X20, 0xFFFFFFFFFCE56000
	0x03C9B764 ADRP X21, 0xFFFFFFFFFCE7C000
	0x03C9B768 MOV W23, W31
	0x03C9B76C ADRP X24, 0x74C000
	0x03C9B770 ADD X20, X20, 0x8E4
	0x03C9B774 ADRP X25, 0x74C000
	0x03C9B778 ADD X21, X21, 0x2C7
	0x03C9B77C CMP W23, W8
	0x03C9B780 B.CS 0x3C9B808
	0x03C9B784 ADD X8, X19, W23, 0x3, SXTW
	0x03C9B788 LDR X22, [X8 + 0x20]
	0x03C9B78C CBZ X22, 0x3C9B80C
	0x03C9B790 LDR X8, [X24 + 0x170]
	0x03C9B794 CBNZ X8, 0x3C9B7A8
	0x03C9B798 MOV X0, X20
	0x03C9B79C BL 0x1C16CB8
	0x03C9B7A0 MOV X8, X0
	0x03C9B7A4 STR X0, [X24 + 0x170]
	0x03C9B7A8 MOV X0, X22
	0x03C9B7AC BLR X8
	0x03C9B7B0 TBZ X0, 0x0, 0x3C9B7E4
	0x03C9B7B4 LDR X8, [X25 + 0x180]
	0x03C9B7B8 CBNZ X8, 0x3C9B7CC
	0x03C9B7BC MOV X0, X21
	0x03C9B7C0 BL 0x1C16CB8
	0x03C9B7C4 MOV X8, X0
	0x03C9B7C8 STR X0, [X25 + 0x180]
	0x03C9B7CC MOV X0, X22
	0x03C9B7D0 MOV X1, X31
	0x03C9B7D4 MOV X2, X31
	0x03C9B7D8 MOV X3, X31
	0x03C9B7DC MOV X4, X31
	0x03C9B7E0 BLR X8
	0x03C9B7E4 LDR W8, [X19 + 0x18]
	0x03C9B7E8 ADD W23, W23, 0x1
	0x03C9B7EC CMP W23, W8
	0x03C9B7F0 B.LT 0x3C9B77C
	0x03C9B7F4 LDP X20, X19, [X31 + 0x30]
	0x03C9B7F8 LDP X22, X21, [X31 + 0x20]
	0x03C9B7FC LDP X24, X23, [X31 + 0x10]
	0x03C9B800 LDP X30, X25, [X31], #0x40
	0x03C9B804 RET
	0x03C9B808 BL 0x1C16F28
	0x03C9B80C BL 0x1C16F20
	0x03C9B810 STP X29, X30, [X31 - 0x60]!
	0x03C9B814 STP X28, X27, [X31 + 0x10]
	0x03C9B818 STP X26, X25, [X31 + 0x20]
	0x03C9B81C STP X24, X23, [X31 + 0x30]
	0x03C9B820 STP X22, X21, [X31 + 0x40]
	0x03C9B824 STP X20, X19, [X31 + 0x50]
	0x03C9B828 ADRP X19, 0x74C000
	0x03C9B82C ADRP X21, 0x4C6000
	0x03C9B830 LDRB W8, [X19 + 0x1D8]
	0x03C9B834 LDR X21, [X21 + 0x168]
	0x03C9B838 MOV W20, W0
	0x03C9B83C TBNZ X8, 0x0, 0x3C9B8B4
	0x03C9B840 ADRP X0, 0x4C6000
	0x03C9B844 LDR X0, [X0 + 0x170]
	0x03C9B848 BL 0x1C16CF4
	0x03C9B84C ADRP X0, 0x4C6000
	0x03C9B850 LDR X0, [X0 + 0x178]
	0x03C9B854 BL 0x1C16CF4
	0x03C9B858 ADRP X0, 0x4C6000
	0x03C9B85C LDR X0, [X0 + 0x180]
	0x03C9B860 BL 0x1C16CF4
	0x03C9B864 ADRP X0, 0x4C6000
	0x03C9B868 LDR X0, [X0 + 0x188]
	0x03C9B86C BL 0x1C16CF4
	0x03C9B870 ADRP X0, 0x4C6000
	0x03C9B874 LDR X0, [X0 + 0x190]
	0x03C9B878 BL 0x1C16CF4
	0x03C9B87C ADRP X0, 0x4C6000
	0x03C9B880 LDR X0, [X0 + 0x108]
	0x03C9B884 BL 0x1C16CF4
	0x03C9B888 ADRP X0, 0x4C6000
	0x03C9B88C LDR X0, [X0 + 0x168]
	0x03C9B890 BL 0x1C16CF4
	0x03C9B894 ADRP X0, 0x4C6000
	0x03C9B898 LDR X0, [X0 + 0x198]
	0x03C9B89C BL 0x1C16CF4
	0x03C9B8A0 ADRP X0, 0x4C6000
	0x03C9B8A4 LDR X0, [X0 + 0x1A0]
	0x03C9B8A8 BL 0x1C16CF4
	0x03C9B8AC MOVZ W8, 0x1
	0x03C9B8B0 STRB W8, [X19 + 0x1D8]
	0x03C9B8B4 LDR X0, [X21]
	0x03C9B8B8 BL 0x1C16F10
	0x03C9B8BC MOV X1, X31
	0x03C9B8C0 MOV X19, X0
	0x03C9B8C4 BL 0x33BDD8C
	0x03C9B8C8 CBZ X19, 0x3C9BAE4
	0x03C9B8CC AND W8, W20, 0x1
	0x03C9B8D0 STRB W8, [X19 + 0x10]
	0x03C9B8D4 BL 0x3C9B6B0
	0x03C9B8D8 TBZ X0, 0x0, 0x3C9BAC4
	0x03C9B8DC ADRP X8, 0x4C6000
	0x03C9B8E0 LDR X8, [X8 + 0x190]
	0x03C9B8E4 LDR X0, [X8]
	0x03C9B8E8 BL 0x1C16F10
	0x03C9B8EC ADRP X8, 0x4C6000
	0x03C9B8F0 LDR X8, [X8 + 0x180]
	0x03C9B8F4 MOV X20, X0
	0x03C9B8F8 LDR X1, [X8]
	0x03C9B8FC BL 0x2A12DD4
	0x03C9B900 ADRP X21, 0x74C000
	0x03C9B904 LDR X8, [X21 + 0x188]
	0x03C9B908 CBNZ X8, 0x3C9B920
	0x03C9B90C ADRP X0, 0xFFFFFFFFFCE74000
	0x03C9B910 ADD X0, X0, 0xC59
	0x03C9B914 BL 0x1C16CB8
	0x03C9B918 MOV X8, X0
	0x03C9B91C STR X0, [X21 + 0x188]
	0x03C9B920 BLR X8
	0x03C9B924 CBZ X0, 0x3C9BAE4
	0x03C9B928 LDR W8, [X0 + 0x18]
	0x03C9B92C MOV X21, X0
	0x03C9B930 CMP W8, 0x1
	0x03C9B934 B.LT 0x3C9BAA0
	0x03C9B938 ADRP X29, 0x4C6000
	0x03C9B93C LDR X29, [X29 + 0x1A0]
	0x03C9B940 MOV X27, X31
	0x03C9B944 ADD X28, X21, 0x20
	0x03C9B948 ADRP X23, 0x74C000
	0x03C9B94C ADRP X22, 0x74C000
	0x03C9B950 LDR X0, [X29]
	0x03C9B954 BL 0x1C16F10
	0x03C9B958 MOV X1, X31
	0x03C9B95C MOV X24, X0
	0x03C9B960 BL 0x33BDD8C
	0x03C9B964 CBZ X24, 0x3C9BAE4
	0x03C9B968 STR X19, [X24 + 0x18]
	0x03C9B96C LDR W8, [X21 + 0x18]
	0x03C9B970 CMP X27, X8
	0x03C9B974 B.CS 0x3C9BAE8
	0x03C9B978 LDR X25, [X28, X27, LSL #3]
	0x03C9B97C STR X25, [X24 + 0x10]
	0x03C9B980 LDRB W8, [X19 + 0x10]
	0x03C9B984 CBZ W8, 0x3C9B9B8
	0x03C9B988 CBZ X25, 0x3C9BAE4
	0x03C9B98C LDR X8, [X22 + 0x170]
	0x03C9B990 CBNZ X8, 0x3C9B9A8
	0x03C9B994 ADRP X0, 0xFFFFFFFFFCE56000
	0x03C9B998 ADD X0, X0, 0x8E4
	0x03C9B99C BL 0x1C16CB8
	0x03C9B9A0 MOV X8, X0
	0x03C9B9A4 STR X0, [X22 + 0x170]
	0x03C9B9A8 MOV X0, X25
	0x03C9B9AC BLR X8
	0x03C9B9B0 TBZ X0, 0x0, 0x3C9BA90
	0x03C9B9B4 LDR X25, [X24 + 0x10]
	0x03C9B9B8 CBZ X25, 0x3C9BAE4
	0x03C9B9BC LDR X8, [X23 + 0x178]
	0x03C9B9C0 CBNZ X8, 0x3C9B9D8
	0x03C9B9C4 ADRP X0, 0xFFFFFFFFFCE7E000
	0x03C9B9C8 ADD X0, X0, 0x48E
	0x03C9B9CC BL 0x1C16CB8
	0x03C9B9D0 MOV X8, X0
	0x03C9B9D4 STR X0, [X23 + 0x178]
	0x03C9B9D8 MOV X0, X25
	0x03C9B9DC BLR X8
	0x03C9B9E0 CBZ X20, 0x3C9BAE4
	0x03C9B9E4 ADRP X8, 0x4C6000
	0x03C9B9E8 LDR X8, [X8 + 0x178]
	0x03C9B9EC MOV W1, W0
	0x03C9B9F0 MOV X0, X20
	0x03C9B9F4 LDR X2, [X8]
	0x03C9B9F8 BL 0x2A13880
	0x03C9B9FC TBNZ X0, 0x0, 0x3C9BA90
	0x03C9BA00 ADRP X8, 0x4C6000
	0x03C9BA04 LDR X25, [X24 + 0x10]
	0x03C9BA08 LDR X8, [X8 + 0x108]
	0x03C9BA0C LDR X0, [X8]
	0x03C9BA10 BL 0x1C16F10
	0x03C9BA14 ADRP X8, 0x4C6000
	0x03C9BA18 LDR X8, [X8 + 0x198]
	0x03C9BA1C MOV X1, X24
	0x03C9BA20 MOV X3, X31
	0x03C9BA24 MOV X26, X0
	0x03C9BA28 LDR X2, [X8]
	0x03C9BA2C BL 0x24AD1FC
	0x03C9BA30 MOVZ W2, 0x1
	0x03C9BA34 MOV X0, X25
	0x03C9BA38 MOV X1, X26
	0x03C9BA3C BL 0x3C9A414
	0x03C9BA40 CBZ X0, 0x3C9BA90
	0x03C9BA44 LDR X24, [X24 + 0x10]
	0x03C9BA48 CBZ X24, 0x3C9BAE4
	0x03C9BA4C LDR X8, [X23 + 0x178]
	0x03C9BA50 MOV X25, X0
	0x03C9BA54 CBNZ X8, 0x3C9BA6C
	0x03C9BA58 ADRP X0, 0xFFFFFFFFFCE7E000
	0x03C9BA5C ADD X0, X0, 0x48E
	0x03C9BA60 BL 0x1C16CB8
	0x03C9BA64 MOV X8, X0
	0x03C9BA68 STR X0, [X23 + 0x178]
	0x03C9BA6C MOV X0, X24
	0x03C9BA70 BLR X8
	0x03C9BA74 ADRP X8, 0x4C6000
	0x03C9BA78 LDR X8, [X8 + 0x170]
	0x03C9BA7C MOV W1, W0
	0x03C9BA80 MOV X0, X20
	0x03C9BA84 MOV X2, X25
	0x03C9BA88 LDR X3, [X8]
	0x03C9BA8C BL 0x2A1368C
	0x03C9BA90 LDRSW X8, [X21 + 0x18]
	0x03C9BA94 ADD X27, X27, 0x1
	0x03C9BA98 CMP X27, X8
	0x03C9BA9C B.LT 0x3C9B950
	0x03C9BAA0 CBZ X20, 0x3C9BAE4
	0x03C9BAA4 ADRP X8, 0x4C6000
	0x03C9BAA8 LDR X8, [X8 + 0x188]
	0x03C9BAAC MOV X0, X20

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+16], D15
	003 Move [X31+24], D14
	004 Move [X31+32], D13
	005 Move [X31+40], D12
	006 Move [X31+48], D11
	007 Move [X31+56], D10
	008 Move [X31+64], D9
	009 Move [X31+72], D8
	010 Move [X31+80], X29
	011 Move [X31+88], X30
	012 Move [X31+96], X28
	013 Move [X31+104], X27
	014 Move [X31+112], X26
	015 Move [X31+120], X25
	016 Move [X31+128], X24
	017 Move [X31+136], X23
	018 Move [X31+144], X22
	019 Move [X31+152], X21
	020 Move [X31+160], X20
	021 Move [X31+168], X19
	022 Move X19, 0x74D000
	023 Move W8, [X19+466]
	024 Move W21, W1
	025 Move X20, X0
	026 Move V10, V3
	027 Move V11, V2
	028 Move V8, V1
	029 Move V9, V0
	030 Move TEMP, X8
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfEqual {45}
	034 Move X0, 0x4C7000
	035 Move X0, [X0+280]
	036 Call 0x1C17CF4
	037 Move X0, 0x459000
	038 Move X0, [X0+1432]
	039 Call 0x1C17CF4
	040 Move X0, 0x4C7000
	041 Move X0, [X0+288]
	042 Call 0x1C17CF4
	043 Move W8, 1
	044 Move [X19+466], W8
	045 Move X19, 0x74D000
	046 Move X8, [X19+392]
	047 Compare X8, 0
	048 JumpIfNotEqual {54}
	049 Move X0, -51949568
	050 Add X0, X0, 3161
	051 Call 0x1C17CB8
	052 Move X8, X0
	053 Move [X19+392], X0
	054 NotImplemented "Instruction BLR not yet implemented."
	055 Compare X0, 0
	056 JumpIfEqual {250}
	057 Move X8, [X19+392]
	058 Compare X8, 0
	059 JumpIfNotEqual {65}
	060 Move X0, -51949568
	061 Add X0, X0, 3161
	062 Call 0x1C17CB8
	063 Move X8, X0
	064 Move [X19+392], X0
	065 NotImplemented "Instruction BLR not yet implemented."
	066 Compare X0, 0
	067 JumpIfEqual {284}
	068 Move W8, [X0+24]
	069 Compare W8, 0
	070 JumpIfEqual {250}
	071 Move [X31+4], W21
	072 Move X8, 0x4C7000
	073 Move X8, [X8+288]
	074 Move X0, [X8]
	075 Call 0x1C17F10
	076 Move X21, X0
	077 Call TerrainMap..ctor, X0
	078 Move X8, [X19+392]
	079 Compare X8, 0
	080 JumpIfNotEqual {86}
	081 Move X0, -51949568
	082 Add X0, X0, 3161
	083 Call 0x1C17CB8
	084 Move X8, X0
	085 Move [X19+392], X0
	086 NotImplemented "Instruction BLR not yet implemented."
	087 Compare X0, 0
	088 JumpIfEqual {284}
	089 Move W8, [X0+24]
	090 Move X22, X0
	091 NotImplemented "Instruction CMP not yet implemented."
	092 Move X29, 0x459000
	093 Move X24, 0x459000
	094 Move X29, [X29+1432]
	095 Move X24, [X24+1448]
	096 Move S0, 1
	097 Move W27, W31
	098 Move X28, 0x74D000
	099 Move X19, 0x73F000
	100 Move X23, 0x7FF00000
	101 Move D14, 0.5
	102 NotImplemented "Instruction FDIV not yet implemented."
	103 NotImplemented "Instruction FDIV not yet implemented."
	104 NotImplemented "Instruction CMP not yet implemented."
	105 Add X8, X22, W27
	106 Move X25, [X8+32]
	107 Compare X25, 0
	108 JumpIfEqual {284}
	109 Move X8, [X28+360]
	110 Compare X8, 0
	111 JumpIfNotEqual {117}
	112 Move X0, -52031488
	113 Add X0, X0, 2717
	114 Call 0x1C17CB8
	115 Move X8, X0
	116 Move [X28+360], X0
	117 Move X0, X25
	118 NotImplemented "Instruction BLR not yet implemented."
	119 Move X8, [X29]
	120 Move X26, X0
	121 Move W9, [X8+224]
	122 Compare W9, 0
	123 JumpIfNotEqual {126}
	124 Move X0, X8
	125 Call 0x1C17DFC
	126 Move X0, X26
	127 Move X1, X31
	128 Move X2, X31
	129 Call Object.op_Equality, X0, X1
	130 Move TEMP, X0
	131 And TEMP, TEMP, 1
	132 Compare TEMP, 1
	133 JumpIfEqual {238}
	134 Compare X20, 0
	135 JumpIfEqual {145}
	136 Move X8, [X20+24]
	137 Move X0, [X20+64]
	138 Move X2, [X20+40]
	139 Move X1, X25
	140 NotImplemented "Instruction BLR not yet implemented."
	141 Move TEMP, X0
	142 And TEMP, TEMP, 1
	143 Compare TEMP, 1
	144 JumpIfNotEqual {238}
	145 Move X0, X25
	146 Move X1, X31
	147 Call Component.get_transform, X0
	148 Compare X0, 0
	149 JumpIfEqual {284}
	150 Move X1, X31
	151 Call Transform.get_position, X0
	152 Move W8, [X19+1495]
	153 Move V11, V0
	154 Move V10, V2
	155 Compare W8, 0
	156 JumpIfNotEqual {161}
	157 Move X0, X24
	158 Call 0x1C17CF4
	159 Move W8, 1
	160 Move [X19+1495], W8
	161 Move X0, [X24]
	162 Move W8, [X0+224]
	163 Compare W8, 0
	164 JumpIfNotEqual {166}
	165 Call 0x1C17DFC
	166 Subtract S0, S11, S9
	167 Multiply S12, S15, S0
	168 NotImplemented "Instruction FCVT not yet implemented."
	169 Add X0, X31, 8
	170 Move V0, V11
	171 Call 0x3EB2C00
	172 NotImplemented "Instruction FCMP not yet implemented."
	173 Move D12, -0.5
	174 NotImplemented "Instruction FCMP not yet implemented."
	175 Move V0, [X31+8]
	176 Move D1, -1
	177 NotImplemented "Instruction FCMP not yet implemented."
	178 Move D12, -0.5
	179 Move V0, [X31+8]
	180 Move D1, 1
	181 NotImplemented "Instruction FCVTZS not yet implemented."
	182 Add D1, D0, D1
	183 And X31, X8, 1
	184 NotImplemented "Instruction FCSEL not yet implemented."
	185 Add D0, D11, D12
	186 NotImplemented "Instruction FRINTP not yet implemented."
	187 Add D0, D11, D14
	188 NotImplemented "Instruction FRINTM not yet implemented."
	189 Move W8, [X19+1495]
	190 Move D1, X23
	191 NotImplemented "Instruction FCVTZS not yet implemented."
	192 NotImplemented "Instruction FCMP not yet implemented."
	193 Move W10, 0x80000000
	194 NotImplemented "Instruction CSEL not yet implemented."
	195 Compare W8, 0
	196 JumpIfNotEqual {201}
	197 Move X0, X24
	198 Call 0x1C17CF4
	199 Move W8, 1
	200 Move [X19+1495], W8
	201 Move X0, [X24]
	202 Move W8, [X0+224]
	203 Compare W8, 0
	204 JumpIfNotEqual {206}
	205 Call 0x1C17DFC
	206 Subtract S0, S10, S8
	207 Multiply S11, S13, S0
	208 NotImplemented "Instruction FCVT not yet implemented."
	209 Add X0, X31, 8
	210 Move V0, V10
	211 Call 0x3EB2C00
	212 NotImplemented "Instruction FCMP not yet implemented."
	213 NotImplemented "Instruction FCMP not yet implemented."
	214 Move V0, [X31+8]
	215 Move D1, -1
	216 NotImplemented "Instruction FCMP not yet implemented."
	217 Move V0, [X31+8]
	218 Move D1, 1
	219 NotImplemented "Instruction FCVTZS not yet implemented."
	220 Add D1, D0, D1
	221 And X31, X8, 1
	222 NotImplemented "Instruction FCSEL not yet implemented."
	223 Add D0, D10, D12
	224 NotImplemented "Instruction FRINTP not yet implemented."
	225 Add D0, D10, D14
	226 NotImplemented "Instruction FRINTM not yet implemented."
	227 Compare X21, 0
	228 JumpIfEqual {284}
	229 Move D1, X23
	230 NotImplemented "Instruction FCVTZS not yet implemented."
	231 NotImplemented "Instruction FCMP not yet implemented."
	232 Move W9, 0x80000000
	233 NotImplemented "Instruction CSEL not yet implemented."
	234 Move X0, X21
	235 Move W1, W26
	236 Move X3, X25
	237 Call TerrainMap.TryToAddTerrain, X0, X1, X2, X3
	238 Move W8, [X22+24]
	239 Add W27, W27, 1
	240 NotImplemented "Instruction CMP not yet implemented."
	241 Move W8, [X31+4]
	242 Move TEMP, X8
	243 And TEMP, TEMP, 1
	244 Compare TEMP, 1
	245 JumpIfNotEqual {251}
	246 Compare X21, 0
	247 JumpIfEqual {284}
	248 Move X0, X21
	249 Call TerrainMap.Validate, X0
	250 Move X0, X31
	251 Compare X21, 0
	252 JumpIfEqual {284}
	253 Move X0, [X21+32]
	254 Compare X0, 0
	255 JumpIfEqual {284}
	256 Move X8, 0x4C7000
	257 Move X8, [X8+280]
	258 Move X1, [X8]
	259 Call Dictionary`2<TerrainTileCoord, Object>.get_Count, X0
	260 NotImplemented "Instruction CMP not yet implemented."
	261 NotImplemented "Instruction CSEL not yet implemented."
	262 Move X20, [X31+160]
	263 Move X19, [X31+168]
	264 Move X22, [X31+144]
	265 Move X21, [X31+152]
	266 Move X24, [X31+128]
	267 Move X23, [X31+136]
	268 Move X26, [X31+112]
	269 Move X25, [X31+120]
	270 Move X28, [X31+96]
	271 Move X27, [X31+104]
	272 Move X29, [X31+80]
	273 Move X30, [X31+88]
	274 Move D9, [X31+64]
	275 Move D8, [X31+72]
	276 Move D11, [X31+48]
	277 Move D10, [X31+56]
	278 Move D13, [X31+32]
	279 Move D12, [X31+40]
	280 Move D15, [X31+16]
	281 Move D14, [X31+24]
	282 Add X31, X31, 176
	283 Return X0
	284 Call 0x1C17F20
	285 Call 0x1C17F28

Method: System.Collections.Generic.Dictionary`2<UnityEngine.TerrainUtils.TerrainTileCoord, UnityEngine.Terrain> get_terrainTiles()

Disassembly:
	0x03C9BDAC ADD X31, X31, 0xF0
	0x03C9BDB0 RET

ISIL:
	001 Move X0, [X0+32]
	002 Return X0

Method: System.Void .ctor()

Disassembly:
	0x03C9BAB0 LDR X1, [X8]
	0x03C9BAB4 BL 0x2A1345C
	0x03C9BAB8 CMP W0, 0x0
	0x03C9BABC CSEL X0, X31, X20, EQ
	0x03C9BAC0 B 0x3C9BAC8
	0x03C9BAC4 MOV X0, X31
	0x03C9BAC8 LDP X20, X19, [X31 + 0x50]
	0x03C9BACC LDP X22, X21, [X31 + 0x40]
	0x03C9BAD0 LDP X24, X23, [X31 + 0x30]
	0x03C9BAD4 LDP X26, X25, [X31 + 0x20]
	0x03C9BAD8 LDP X28, X27, [X31 + 0x10]
	0x03C9BADC LDP X29, X30, [X31], #0x60
	0x03C9BAE0 RET
	0x03C9BAE4 BL 0x1C16F20
	0x03C9BAE8 BL 0x1C16F28
	0x03C9BAEC MOV X1, X31
	0x03C9BAF0 B 0x33BDD8C
	0x03C9BAF4 MOV X1, X31
	0x03C9BAF8 B 0x33BDD8C
	0x03C9BAFC SUB X31, X31, 0xF0
	0x03C9BB00 STP X29, X30, [X31 + 0x90]
	0x03C9BB04 STP X28, X27, [X31 + 0xA0]
	0x03C9BB08 STP X26, X25, [X31 + 0xB0]
	0x03C9BB0C STP X24, X23, [X31 + 0xC0]
	0x03C9BB10 STP X22, X21, [X31 + 0xD0]
	0x03C9BB14 STP X20, X19, [X31 + 0xE0]
	0x03C9BB18 ADRP X19, 0x74C000
	0x03C9BB1C LDRB W8, [X19 + 0x1D9]
	0x03C9BB20 TBNZ X8, 0x0, 0x3C9BBA4
	0x03C9BB24 ADRP X0, 0x4C6000
	0x03C9BB28 LDR X0, [X0 + 0x1A8]
	0x03C9BB2C BL 0x1C16CF4
	0x03C9BB30 ADRP X0, 0x4C6000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x74D000
	007 Move X21, 0x4C7000
	008 Move X20, 0x4C7000
	009 Move W8, [X22+467]
	010 Move X21, [X21+296]
	011 Move X20, [X20+304]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x4C7000
	018 Move X0, [X0+304]
	019 Call 0x1C17CF4
	020 Move X0, 0x4C7000
	021 Move X0, [X0+296]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X22+467], W8
	025 Move X0, X19
	026 Move X1, X31
	027 Call Object..ctor, X0
	028 Move [X19+28], W31
	029 Move X0, [X21]
	030 Call 0x1C17F10
	031 Move X1, [X20]
	032 Move X20, X0
	033 Call Dictionary`2<TerrainTileCoord, Object>..ctor, X0
	034 Move [X19+32], X20
	035 Move X20, [X31+32]
	036 Move X19, [X31+40]
	037 Move X22, [X31+16]
	038 Move X21, [X31+24]
	039 Move X30, [X31+48]
	040 Return 

Method: System.Void AddTerrainInternal(System.Int32 x, System.Int32 z, UnityEngine.Terrain terrain)

Disassembly:
	0x03C9BDB4 MOV X19, X0
	0x03C9BDB8 MOV X21, X31
	0x03C9BDBC ADRP X8, 0x4C6000
	0x03C9BDC0 LDR X8, [X8 + 0x1C0]
	0x03C9BDC4 LDR X1, [X8]
	0x03C9BDC8 ADD X0, X31, 0x30
	0x03C9BDCC BL 0x2C1621C
	0x03C9BDD0 CBZ X21, 0x3C9BE14
	0x03C9BDD4 MOV X0, X21
	0x03C9BDD8 BL 0x1C16F18
	0x03C9BDDC MOV X0, X21
	0x03C9BDE0 BL 0x1C16F18
	0x03C9BDE4 BL 0x1C16F20
	0x03C9BDE8 BL 0x1C16F20
	0x03C9BDEC MOV X20, X1
	0x03C9BDF0 MOV X19, X0
	0x03C9BDF4 B 0x3C9BDBC
	0x03C9BDF8 B 0x3C9BE0C
	0x03C9BDFC B 0x3C9BE0C
	0x03C9BE00 B 0x3C9BE0C
	0x03C9BE04 B 0x3C9BE0C
	0x03C9BE08 B 0x3C9BE0C
	0x03C9BE0C MOV X20, X1
	0x03C9BE10 MOV X19, X0
	0x03C9BE14 CMP W20, 0x1
	0x03C9BE18 B.NE 0x3C9BE4C
	0x03C9BE1C MOV X0, X19
	0x03C9BE20 BL 0x3EB1AD0
	0x03C9BE24 LDR X20, [X0]
	0x03C9BE28 BL 0x3EB1AE0
	0x03C9BE2C ADRP X8, 0x4C6000
	0x03C9BE30 LDR X8, [X8 + 0x1B8]
	0x03C9BE34 ADD X0, X31, 0x60
	0x03C9BE38 LDR X1, [X8]
	0x03C9BE3C BL 0x2BF5448
	0x03C9BE40 CBZ X20, 0x3C9BD94
	0x03C9BE44 MOV X0, X20
	0x03C9BE48 BL 0x1C16F18
	0x03C9BE4C MOV X20, X31
	0x03C9BE50 B 0x3C9BE58
	0x03C9BE54 MOV X19, X0
	0x03C9BE58 ADRP X8, 0x4C6000
	0x03C9BE5C LDR X8, [X8 + 0x1B8]
	0x03C9BE60 LDR X1, [X8]
	0x03C9BE64 ADD X0, X31, 0x60
	0x03C9BE68 BL 0x2BF5448
	0x03C9BE6C CBNZ X20, 0x3C9BE78
	0x03C9BE70 MOV X0, X19
	0x03C9BE74 BL 0x1D2C690
	0x03C9BE78 MOV X0, X20
	0x03C9BE7C BL 0x1C16F18
	0x03C9BE80 BL 0x1990590
	0x03C9BE84 STP X30, X23, [X31 - 0x30]!
	0x03C9BE88 STP X22, X21, [X31 + 0x10]
	0x03C9BE8C STP X20, X19, [X31 + 0x20]
	0x03C9BE90 CBZ X1, 0x3C9BF5C
	0x03C9BE94 ADRP X23, 0x74C000
	0x03C9BE98 LDR X8, [X23 + 0x178]
	0x03C9BE9C MOV X19, X1
	0x03C9BEA0 MOV X20, X0
	0x03C9BEA4 CBNZ X8, 0x3C9BEBC
	0x03C9BEA8 ADRP X0, 0xFFFFFFFFFCE7E000
	0x03C9BEAC ADD X0, X0, 0x48E
	0x03C9BEB0 BL 0x1C16CB8
	0x03C9BEB4 MOV X8, X0
	0x03C9BEB8 STR X0, [X23 + 0x178]
	0x03C9BEBC MOV X0, X19
	0x03C9BEC0 BLR X8
	0x03C9BEC4 LDR X22, [X20 + 0x10]
	0x03C9BEC8 CBZ X22, 0x3C9BF5C
	0x03C9BECC LDR X8, [X23 + 0x178]
	0x03C9BED0 MOV W21, W0
	0x03C9BED4 CBNZ X8, 0x3C9BEEC
	0x03C9BED8 ADRP X0, 0xFFFFFFFFFCE7E000

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x74D000
	009 Move W8, [X23+468]
	010 Move X19, X3
	011 Move W20, W2
	012 Move W21, W1
	013 Move X22, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0x4C7000
	019 Move X0, [X0+352]
	020 Call 0x1C17CF4
	021 Move X0, 0x4C7000
	022 Move X0, [X0+280]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X23+468], W8
	026 Move X0, [X22+32]
	027 Compare X0, 0
	028 JumpIfEqual {90}
	029 Move X8, 0x4C7000
	030 Move X8, [X8+280]
	031 Move X1, [X8]
	032 Call Dictionary`2<TerrainTileCoord, Object>.get_Count, X0
	033 Compare X19, 0
	034 JumpIfEqual {90}
	035 Move X24, 0x74D000
	036 Move X8, [X24+360]
	037 Move W23, W0
	038 Compare X8, 0
	039 JumpIfNotEqual {45}
	040 Move X0, -52031488
	041 Add X0, X0, 2717
	042 Call 0x1C17CB8
	043 Move X8, X0
	044 Move [X24+360], X0
	045 Move X0, X19
	046 NotImplemented "Instruction BLR not yet implemented."
	047 Compare X0, 0
	048 JumpIfEqual {90}
	049 Call TerrainData.get_size, X0
	050 Compare W23, 0
	051 JumpIfEqual {69}
	052 Move S3, [X22+16]
	053 Move S4, [X22+20]
	054 Move V5, [X22+24]
	055 Move X8, -52105216
	056 Move V6, [X8+3872]
	057 Subtract S0, S0, S3
	058 Subtract S1, S1, S4
	059 Subtract S2, S2, S5
	060 Multiply S0, S0, S0
	061 Multiply S1, S1, S1
	062 Add S0, S0, S1
	063 Multiply S1, S2, S2
	064 Add S0, S1, S0
	065 NotImplemented "Instruction FCMP not yet implemented."
	066 Move W8, [X22+28]
	067 Or W8, W8, 4
	068 Move [X22+28], W8
	069 Move [X22+16], S0
	070 Move [X22+24], S1
	071 Move [X22+24], S2
	072 Move X0, [X22+32]
	073 Compare X0, 0
	074 JumpIfEqual {90}
	075 Move X8, 0x4C7000
	076 Move X8, [X8+352]
	077 Move W1, W21
	078 NotImplemented "Instruction BFM not yet implemented."
	079 Move X2, X19
	080 Move X3, [X8]
	081 Move X20, [X31+48]
	082 Move X19, [X31+56]
	083 Move X22, [X31+32]
	084 Move X21, [X31+40]
	085 Move X24, [X31+16]
	086 Move X23, [X31+24]
	087 Move X30, [X31+64]
	088 Call Dictionary`2<TerrainTileCoord, Object>.Add, X0, X1, X2
	089 Return 
	090 Call 0x1C17F20

Method: System.Boolean TryToAddTerrain(System.Int32 tileX, System.Int32 tileZ, UnityEngine.Terrain terrain)

Disassembly:
	0x03C9BB34 LDR X0, [X0 + 0x1B0]
	0x03C9BB38 BL 0x1C16CF4
	0x03C9BB3C ADRP X0, 0x4C6000
	0x03C9BB40 LDR X0, [X0 + 0x1B8]
	0x03C9BB44 BL 0x1C16CF4
	0x03C9BB48 ADRP X0, 0x4C6000
	0x03C9BB4C LDR X0, [X0 + 0x1C0]
	0x03C9BB50 BL 0x1C16CF4
	0x03C9BB54 ADRP X0, 0x4C6000
	0x03C9BB58 LDR X0, [X0 + 0x1C8]
	0x03C9BB5C BL 0x1C16CF4
	0x03C9BB60 ADRP X0, 0x4C6000
	0x03C9BB64 LDR X0, [X0 + 0x1D0]
	0x03C9BB68 BL 0x1C16CF4
	0x03C9BB6C ADRP X0, 0x4C6000
	0x03C9BB70 LDR X0, [X0 + 0x1D8]
	0x03C9BB74 BL 0x1C16CF4
	0x03C9BB78 ADRP X0, 0x4C6000
	0x03C9BB7C LDR X0, [X0 + 0x1E0]
	0x03C9BB80 BL 0x1C16CF4
	0x03C9BB84 ADRP X0, 0x4C6000
	0x03C9BB88 LDR X0, [X0 + 0x1E8]
	0x03C9BB8C BL 0x1C16CF4
	0x03C9BB90 ADRP X0, 0x4C6000
	0x03C9BB94 LDR X0, [X0 + 0x1F0]
	0x03C9BB98 BL 0x1C16CF4
	0x03C9BB9C MOVZ W8, 0x1
	0x03C9BBA0 STRB W8, [X19 + 0x1D9]
	0x03C9BBA4 MOVI V0.2D, 0x0
	0x03C9BBA8 STR X31, [X31 + 0x80]
	0x03C9BBAC STR X31, [X31 + 0x50]
	0x03C9BBB0 STP V0, V0, [X31 + 0x60]
	0x03C9BBB4 STP V0, V0, [X31 + 0x30]
	0x03C9BBB8 BL 0x3C9B6B0
	0x03C9BBBC TBZ X0, 0x0, 0x3C9BD94
	0x03C9BBC0 BL 0x3C9B718
	0x03C9BBC4 MOVZ W0, 0x1
	0x03C9BBC8 BL 0x3C9B810
	0x03C9BBCC CBZ X0, 0x3C9BD94
	0x03C9BBD0 ADRP X8, 0x4C6000
	0x03C9BBD4 LDR X8, [X8 + 0x1B0]
	0x03C9BBD8 LDR X1, [X8]
	0x03C9BBDC ADD X8, X31, 0x8
	0x03C9BBE0 BL 0x2A13AB4
	0x03C9BBE4 LDUR V0, [X31 + 0x8]
	0x03C9BBE8 LDUR V1, [X31 + 0x18]
	0x03C9BBEC LDR X8, [X31 + 0x28]
	0x03C9BBF0 ADRP X28, 0x4C6000
	0x03C9BBF4 ADRP X27, 0x4C6000
	0x03C9BBF8 LDR X28, [X28 + 0x1D0]
	0x03C9BBFC LDR X27, [X27 + 0x1C8]
	0x03C9BC00 ADRP X19, 0xFFFFFFFFFCE7C000
	0x03C9BC04 ADRP X29, 0x74C000
	0x03C9BC08 ADD X19, X19, 0x2C7
	0x03C9BC0C STP V0, V1, [X31 + 0x60]
	0x03C9BC10 STR X8, [X31 + 0x80]
	0x03C9BC14 LDR X1, [X28]
	0x03C9BC18 ADD X0, X31, 0x60
	0x03C9BC1C BL 0x2BF5330
	0x03C9BC20 TBZ X0, 0x0, 0x3C9BD80
	0x03C9BC24 LDR X20, [X31 + 0x78]
	0x03C9BC28 CBZ X20, 0x3C9BDE4
	0x03C9BC2C LDR X0, [X20 + 0x20]
	0x03C9BC30 CBZ X0, 0x3C9BDE8
	0x03C9BC34 ADRP X8, 0x4C6000
	0x03C9BC38 LDR X8, [X8 + 0x1A8]
	0x03C9BC3C LDR X1, [X8]
	0x03C9BC40 ADD X8, X31, 0x8
	0x03C9BC44 BL 0x2AED6D4

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x74D000
	009 Move X24, 0x459000
	010 Move W8, [X23+469]
	011 Move X24, [X24+1432]
	012 Move X20, X3
	013 Move W21, W2
	014 Move W22, W1
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0x459000
	021 Move X0, [X0+1432]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X23+469], W8
	025 Move X0, [X24]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 Move X0, X20
	031 Move X1, X31
	032 Move X2, X31
	033 Call Object.op_Inequality, X0, X1
	034 Move TEMP, X0
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfNotEqual {74}
	038 Move X0, X19
	039 Move W1, W22
	040 Move W2, W21
	041 Call TerrainMap.GetTerrain, X0, X1, X2
	042 Move X8, [X24]
	043 Move X23, X0
	044 Move W9, [X8+224]
	045 Compare W9, 0
	046 JumpIfNotEqual {49}
	047 Move X0, X8
	048 Call 0x1C17DFC
	049 Move X0, X23
	050 Move X1, X31
	051 Move X2, X31
	052 Call Object.op_Inequality, X0, X1
	053 Move TEMP, X0
	054 And TEMP, TEMP, 1
	055 Compare TEMP, 1
	056 JumpIfNotEqual {75}
	057 Move X0, [X24]
	058 Move W8, [X0+224]
	059 Compare W8, 0
	060 JumpIfNotEqual {62}
	061 Call 0x1C17DFC
	062 Move X0, X23
	063 Move X1, X20
	064 Move X2, X31
	065 Call Object.op_Inequality, X0, X1
	066 Move TEMP, X0
	067 And TEMP, TEMP, 1
	068 Compare TEMP, 1
	069 JumpIfNotEqual {74}
	070 Move W8, [X19+28]
	071 Move W0, W31
	072 Or W8, W8, 1
	073 Move [X19+28], W8
	074 Move W0, W31
	075 Move X0, X19
	076 Move W1, W22
	077 Move W2, W21
	078 Move X3, X20
	079 Call TerrainMap.AddTerrainInternal, X0, X1, X2, X3
	080 Move W0, 1
	081 Move X20, [X31+48]
	082 Move X19, [X31+56]
	083 Move X22, [X31+32]
	084 Move X21, [X31+40]
	085 Move X24, [X31+16]
	086 Move X23, [X31+24]
	087 Move X30, [X31+64]
	088 Return X0

Method: System.Void ValidateTerrain(System.Int32 tileX, System.Int32 tileZ)

Disassembly:
	0x03C9BEDC ADD X0, X0, 0x48E
	0x03C9BEE0 BL 0x1C16CB8
	0x03C9BEE4 MOV X8, X0
	0x03C9BEE8 STR X0, [X23 + 0x178]
	0x03C9BEEC MOV X0, X22
	0x03C9BEF0 BLR X8
	0x03C9BEF4 CMP W21, W0
	0x03C9BEF8 B.NE 0x3C9BF40
	0x03C9BEFC LDR X8, [X20 + 0x18]
	0x03C9BF00 CBZ X8, 0x3C9BF5C
	0x03C9BF04 LDRB W8, [X8 + 0x10]
	0x03C9BF08 CBZ W8, 0x3C9BF48
	0x03C9BF0C ADRP X20, 0x74C000
	0x03C9BF10 LDR X1, [X20 + 0x170]
	0x03C9BF14 CBNZ X1, 0x3C9BF2C
	0x03C9BF18 ADRP X0, 0xFFFFFFFFFCE56000
	0x03C9BF1C ADD X0, X0, 0x8E4
	0x03C9BF20 BL 0x1C16CB8
	0x03C9BF24 MOV X1, X0
	0x03C9BF28 STR X0, [X20 + 0x170]
	0x03C9BF2C MOV X0, X19
	0x03C9BF30 LDP X20, X19, [X31 + 0x20]
	0x03C9BF34 LDP X22, X21, [X31 + 0x10]
	0x03C9BF38 LDP X30, X23, [X31], #0x30
	0x03C9BF3C BR X1
	0x03C9BF40 MOV W0, W31
	0x03C9BF44 B 0x3C9BF4C
	0x03C9BF48 MOVZ W0, 0x1
	0x03C9BF4C LDP X20, X19, [X31 + 0x20]
	0x03C9BF50 LDP X22, X21, [X31 + 0x10]
	0x03C9BF54 LDP X30, X23, [X31], #0x30
	0x03C9BF58 RET
	0x03C9BF5C BL 0x1C16F20
	0x03C9BF60 LDR W0, [X0]
	0x03C9BF64 RET
	0x03C9BF68 LDR X0, [X0 + 0x8]
	0x03C9BF6C RET
	0x03C9BF70 STR X1, [X0 + 0x8]
	0x03C9BF74 RET
	0x03C9BF78 LDR X0, [X0 + 0x10]
	0x03C9BF7C RET
	0x03C9BF80 STR X1, [X0 + 0x10]
	0x03C9BF84 RET
	0x03C9BF88 LDR W0, [X0 + 0x18]
	0x03C9BF8C RET
	0x03C9BF90 STR W1, [X0 + 0x18]
	0x03C9BF94 RET
	0x03C9BF98 LDR V0, [X0 + 0x1C]
	0x03C9BF9C RET
	0x03C9BFA0 STR S0, [X0 + 0x1C]
	0x03C9BFA4 RET
	0x03C9BFA8 LDR V0, [X0 + 0x24]
	0x03C9BFAC RET
	0x03C9BFB0 STR S0, [X0 + 0x24]
	0x03C9BFB4 RET
	0x03C9BFB8 LDR V0, [X0 + 0x28]
	0x03C9BFBC RET
	0x03C9BFC0 STR S0, [X0 + 0x28]
	0x03C9BFC4 RET
	0x03C9BFC8 LDR V0, [X0 + 0x2C]
	0x03C9BFCC RET
	0x03C9BFD0 STR S0, [X0 + 0x2C]
	0x03C9BFD4 RET
	0x03C9BFD8 LDR V0, [X0 + 0x30]
	0x03C9BFDC RET
	0x03C9BFE0 STR S0, [X0 + 0x30]
	0x03C9BFE4 RET
	0x03C9BFE8 LDR V0, [X0 + 0x34]
	0x03C9BFEC RET
	0x03C9BFF0 STR S0, [X0 + 0x34]
	0x03C9BFF4 RET
	0x03C9BFF8 LDR V0, [X0 + 0x38]
	0x03C9BFFC RET
	0x03C9C000 STR S0, [X0 + 0x38]
	0x03C9C004 RET
	0x03C9C008 LDR V0, [X0 + 0x3C]
	0x03C9C00C RET
	0x03C9C010 STR S0, [X0 + 0x3C]
	0x03C9C014 RET
	0x03C9C018 LDR V0, [X0 + 0x40]
	0x03C9C01C RET
	0x03C9C020 STR S0, [X0 + 0x40]
	0x03C9C024 RET
	0x03C9C028 LDR V0, [X0 + 0x44]
	0x03C9C02C RET
	0x03C9C030 STR S0, [X0 + 0x44]
	0x03C9C034 RET
	0x03C9C038 LDR V0, [X0 + 0x48]
	0x03C9C03C RET
	0x03C9C040 STR S0, [X0 + 0x48]
	0x03C9C044 RET
	0x03C9C048 LDR V0, [X0 + 0x4C]
	0x03C9C04C RET
	0x03C9C050 STR S0, [X0 + 0x4C]
	0x03C9C054 RET
	0x03C9C058 LDR V0, [X0 + 0x50]
	0x03C9C05C RET
	0x03C9C060 STR S0, [X0 + 0x50]
	0x03C9C064 RET
	0x03C9C068 LDR V0, [X0 + 0x54]
	0x03C9C06C RET
	0x03C9C070 STR S0, [X0 + 0x54]
	0x03C9C074 RET
	0x03C9C078 STR S0, [X0 + 0x58]
	0x03C9C07C RET
	0x03C9C080 LDR V0, [X0 + 0x5C]
	0x03C9C084 RET
	0x03C9C088 STR S0, [X0 + 0x5C]
	0x03C9C08C RET
	0x03C9C090 LDR W0, [X0]
	0x03C9C094 RET
	0x03C9C098 LDR W0, [X0 + 0x4]
	0x03C9C09C RET
	0x03C9C0A0 LDR W0, [X0 + 0x8]
	0x03C9C0A4 RET
	0x03C9C0A8 LDR W0, [X0 + 0xC]
	0x03C9C0AC RET
	0x03C9C0B0 STR X30, [X31 - 0x20]!
	0x03C9C0B4 STP X20, X19, [X31 + 0x10]
	0x03C9C0B8 ADRP X20, 0x74B000
	0x03C9C0BC ADRP X19, 0x47F000
	0x03C9C0C0 LDRB W8, [X20 + 0x1DA]
	0x03C9C0C4 LDR X19, [X19 + 0x608]
	0x03C9C0C8 TBNZ X8, 0x0, 0x3C9C0E0
	0x03C9C0CC ADRP X0, 0x47F000
	0x03C9C0D0 LDR X0, [X0 + 0x608]
	0x03C9C0D4 BL 0x1C16CF4
	0x03C9C0D8 MOVZ W8, 0x1
	0x03C9C0DC STRB W8, [X20 + 0x1DA]
	0x03C9C0E0 LDR X0, [X19]
	0x03C9C0E4 LDR W8, [X0 + 0xE0]
	0x03C9C0E8 CBNZ W8, 0x3C9C0F4
	0x03C9C0EC BL 0x1C16DFC
	0x03C9C0F0 LDR X0, [X19]
	0x03C9C0F4 LDR X8, [X0 + 0xB8]
	0x03C9C0F8 LDP X20, X19, [X31 + 0x10]
	0x03C9C0FC LDP X0, X1, [X8]
	0x03C9C100 LDR X30, [X31], #0x20
	0x03C9C104 RET
	0x03C9C108 STP W1, W2, [X0]
	0x03C9C10C STP W3, W4, [X0 + 0x8]
	0x03C9C110 RET
	0x03C9C114 SUB X31, X31, 0x30
	0x03C9C118 STP X30, X21, [X31 + 0x10]
	0x03C9C11C STP X20, X19, [X31 + 0x20]
	0x03C9C120 ADRP X21, 0x74B000
	0x03C9C124 ADRP X20, 0x47F000
	0x03C9C128 LDRB W8, [X21 + 0x1DB]
	0x03C9C12C LDR X20, [X20 + 0x608]
	0x03C9C130 MOV X19, X0
	0x03C9C134 TBNZ X8, 0x0, 0x3C9C14C
	0x03C9C138 ADRP X0, 0x47F000
	0x03C9C13C LDR X0, [X0 + 0x608]
	0x03C9C140 BL 0x1C16CF4
	0x03C9C144 MOVZ W8, 0x1
	0x03C9C148 STRB W8, [X21 + 0x1DB]
	0x03C9C14C LDR V0, [X19]
	0x03C9C150 LDR X0, [X20]
	0x03C9C154 ADD X1, X31, 0x0
	0x03C9C158 STR V0, [X31]
	0x03C9C15C BL 0x1C16E04
	0x03C9C160 MOV X1, X31
	0x03C9C164 BL 0x33D55D8
	0x03C9C168 LDP X20, X19, [X31 + 0x20]
	0x03C9C16C LDP X30, X21, [X31 + 0x10]
	0x03C9C170 ADD X31, X31, 0x30
	0x03C9C174 RET
	0x03C9C178 SUB X31, X31, 0x40
	0x03C9C17C STR X30, [X31 + 0x10]
	0x03C9C180 STP X22, X21, [X31 + 0x20]
	0x03C9C184 STP X20, X19, [X31 + 0x30]
	0x03C9C188 ADRP X22, 0x74B000
	0x03C9C18C ADRP X21, 0x47F000
	0x03C9C190 LDRB W8, [X22 + 0x1DC]
	0x03C9C194 LDR X21, [X21 + 0x608]
	0x03C9C198 MOV X19, X1
	0x03C9C19C MOV X20, X0
	0x03C9C1A0 TBNZ X8, 0x0, 0x3C9C1B8
	0x03C9C1A4 ADRP X0, 0x47F000
	0x03C9C1A8 LDR X0, [X0 + 0x608]
	0x03C9C1AC BL 0x1C16CF4
	0x03C9C1B0 MOVZ W8, 0x1
	0x03C9C1B4 STRB W8, [X22 + 0x1DC]
	0x03C9C1B8 LDR V0, [X20]
	0x03C9C1BC LDR X0, [X21]
	0x03C9C1C0 ADD X1, X31, 0x0
	0x03C9C1C4 STR V0, [X31]
	0x03C9C1C8 BL 0x1C16E04
	0x03C9C1CC MOV X1, X19
	0x03C9C1D0 MOV X2, X31
	0x03C9C1D4 BL 0x33D55D0
	0x03C9C1D8 LDP X20, X19, [X31 + 0x30]
	0x03C9C1DC LDP X22, X21, [X31 + 0x20]
	0x03C9C1E0 LDR X30, [X31 + 0x10]
	0x03C9C1E4 AND W0, W0, 0x1
	0x03C9C1E8 ADD X31, X31, 0x40
	0x03C9C1EC RET
	0x03C9C1F0 SUB X31, X31, 0x50
	0x03C9C1F4 STP X30, X23, [X31 + 0x20]
	0x03C9C1F8 STP X22, X21, [X31 + 0x30]
	0x03C9C1FC STP X20, X19, [X31 + 0x40]
	0x03C9C200 ADRP X23, 0x74B000
	0x03C9C204 ADRP X22, 0x47F000
	0x03C9C208 LDRB W8, [X23 + 0x1DD]
	0x03C9C20C LDR X22, [X22 + 0x608]
	0x03C9C210 MOV X19, X2
	0x03C9C214 MOV X20, X1
	0x03C9C218 MOV X21, X0
	0x03C9C21C TBNZ X8, 0x0, 0x3C9C234
	0x03C9C220 ADRP X0, 0x47F000
	0x03C9C224 LDR X0, [X0 + 0x608]
	0x03C9C228 BL 0x1C16CF4
	0x03C9C22C MOVZ W8, 0x1
	0x03C9C230 STRB W8, [X23 + 0x1DD]
	0x03C9C234 LDR V0, [X21]
	0x03C9C238 LDR X0, [X22]
	0x03C9C23C ADD X1, X31, 0x10
	0x03C9C240 STR V0, [X31 + 0x1]
	0x03C9C244 BL 0x1C16E04
	0x03C9C248 MOV X21, X0
	0x03C9C24C LDR X0, [X22]
	0x03C9C250 ADD X1, X31, 0x0
	0x03C9C254 STP X20, X19, [X31]
	0x03C9C258 BL 0x1C16E04
	0x03C9C25C MOV X1, X0
	0x03C9C260 MOV X0, X21
	0x03C9C264 MOV X2, X31
	0x03C9C268 BL 0x33D55D0
	0x03C9C26C LDP X20, X19, [X31 + 0x40]
	0x03C9C270 LDP X22, X21, [X31 + 0x30]
	0x03C9C274 LDP X30, X23, [X31 + 0x20]
	0x03C9C278 AND W0, W0, 0x1
	0x03C9C27C ADD X31, X31, 0x50
	0x03C9C280 RET
	0x03C9C284 STR X30, [X31 - 0x20]!
	0x03C9C288 STP X20, X19, [X31 + 0x10]
	0x03C9C28C ADRP X19, 0x74B000
	0x03C9C290 ADRP X20, 0x47F000
	0x03C9C294 LDRB W8, [X19 + 0x1DE]
	0x03C9C298 LDR X20, [X20 + 0x608]
	0x03C9C29C TBNZ X8, 0x0, 0x3C9C2B4
	0x03C9C2A0 ADRP X0, 0x47F000
	0x03C9C2A4 LDR X0, [X0 + 0x608]
	0x03C9C2A8 BL 0x1C16CF4
	0x03C9C2AC MOVZ W8, 0x1
	0x03C9C2B0 STRB W8, [X19 + 0x1DE]
	0x03C9C2B4 LDR X8, [X20]
	0x03C9C2B8 LDP X20, X19, [X31 + 0x10]
	0x03C9C2BC LDR X8, [X8 + 0xB8]
	0x03C9C2C0 STP X31, X31, [X8]
	0x03C9C2C4 LDR X30, [X31], #0x20
	0x03C9C2C8 RET
	0x03C9C2CC LDR V0, [X0]
	0x03C9C2D0 RET
	0x03C9C2D4 LDR V0, [X0 + 0x4]
	0x03C9C2D8 RET
	0x03C9C2DC LDR V0, [X0 + 0x8]
	0x03C9C2E0 RET
	0x03C9C2E4 LDR V0, [X0 + 0xC]
	0x03C9C2E8 RET
	0x03C9C2EC LDR V0, [X0 + 0x10]
	0x03C9C2F0 RET
	0x03C9C2F4 STP S0, S1, [X0]
	0x03C9C2F8 STP S2, S3, [X0 + 0x8]
	0x03C9C2FC STR S4, [X0 + 0x10]
	0x03C9C300 RET
	0x03C9C304 SUB X31, X31, 0x40
	0x03C9C308 STP X30, X21, [X31 + 0x20]
	0x03C9C30C STP X20, X19, [X31 + 0x30]
	0x03C9C310 ADRP X21, 0x74B000
	0x03C9C314 ADRP X20, 0x4C5000
	0x03C9C318 LDRB W8, [X21 + 0x1DF]
	0x03C9C31C LDR X20, [X20 + 0x1F8]
	0x03C9C320 MOV X19, X0
	0x03C9C324 TBNZ X8, 0x0, 0x3C9C33C
	0x03C9C328 ADRP X0, 0x4C5000
	0x03C9C32C LDR X0, [X0 + 0x1F8]
	0x03C9C330 BL 0x1C16CF4
	0x03C9C334 MOVZ W8, 0x1
	0x03C9C338 STRB W8, [X21 + 0x1DF]
	0x03C9C33C LDR W8, [X19 + 0x10]
	0x03C9C340 LDR V0, [X19]
	0x03C9C344 LDR X0, [X20]
	0x03C9C348 ADD X1, X31, 0x0
	0x03C9C34C STR W8, [X31 + 0x10]
	0x03C9C350 STR V0, [X31]
	0x03C9C354 BL 0x1C16E04
	0x03C9C358 MOV X1, X31
	0x03C9C35C BL 0x33D55D8
	0x03C9C360 LDP X20, X19, [X31 + 0x30]
	0x03C9C364 LDP X30, X21, [X31 + 0x20]
	0x03C9C368 ADD X31, X31, 0x40
	0x03C9C36C RET
	0x03C9C370 SUB X31, X31, 0x50
	0x03C9C374 STR X30, [X31 + 0x20]
	0x03C9C378 STP X22, X21, [X31 + 0x30]
	0x03C9C37C STP X20, X19, [X31 + 0x40]
	0x03C9C380 ADRP X22, 0x74B000
	0x03C9C384 ADRP X21, 0x4C5000
	0x03C9C388 LDRB W8, [X22 + 0x1E0]
	0x03C9C38C LDR X21, [X21 + 0x1F8]
	0x03C9C390 MOV X19, X1
	0x03C9C394 MOV X20, X0
	0x03C9C398 TBNZ X8, 0x0, 0x3C9C3B0
	0x03C9C39C ADRP X0, 0x4C5000
	0x03C9C3A0 LDR X0, [X0 + 0x1F8]
	0x03C9C3A4 BL 0x1C16CF4
	0x03C9C3A8 MOVZ W8, 0x1
	0x03C9C3AC STRB W8, [X22 + 0x1E0]
	0x03C9C3B0 LDR W8, [X20 + 0x10]
	0x03C9C3B4 LDR V0, [X20]
	0x03C9C3B8 LDR X0, [X21]
	0x03C9C3BC ADD X1, X31, 0x0
	0x03C9C3C0 STR W8, [X31 + 0x10]
	0x03C9C3C4 STR V0, [X31]
	0x03C9C3C8 BL 0x1C16E04
	0x03C9C3CC MOV X1, X19
	0x03C9C3D0 MOV X2, X31
	0x03C9C3D4 BL 0x33D55D0
	0x03C9C3D8 LDP X20, X19, [X31 + 0x40]
	0x03C9C3DC LDP X22, X21, [X31 + 0x30]
	0x03C9C3E0 LDR X30, [X31 + 0x20]
	0x03C9C3E4 AND W0, W0, 0x1
	0x03C9C3E8 ADD X31, X31, 0x50
	0x03C9C3EC RET
	0x03C9C3F0 SUB X31, X31, 0x70
	0x03C9C3F4 STR X30, [X31 + 0x40]
	0x03C9C3F8 STP X22, X21, [X31 + 0x50]
	0x03C9C3FC STP X20, X19, [X31 + 0x60]
	0x03C9C400 ADRP X22, 0x74B000
	0x03C9C404 ADRP X21, 0x4C5000
	0x03C9C408 LDRB W8, [X22 + 0x1E1]
	0x03C9C40C LDR X21, [X21 + 0x1F8]
	0x03C9C410 MOV X19, X1
	0x03C9C414 MOV X20, X0
	0x03C9C418 TBNZ X8, 0x0, 0x3C9C430
	0x03C9C41C ADRP X0, 0x4C5000
	0x03C9C420 LDR X0, [X0 + 0x1F8]
	0x03C9C424 BL 0x1C16CF4
	0x03C9C428 MOVZ W8, 0x1
	0x03C9C42C STRB W8, [X22 + 0x1E1]
	0x03C9C430 LDR W8, [X20 + 0x10]
	0x03C9C434 LDR V0, [X20]
	0x03C9C438 LDR X0, [X21]
	0x03C9C43C ADD X1, X31, 0x20
	0x03C9C440 STR W8, [X31 + 0x30]
	0x03C9C444 STR V0, [X31 + 0x2]
	0x03C9C448 BL 0x1C16E04
	0x03C9C44C MOV X20, X0
	0x03C9C450 LDR W8, [X19 + 0x10]
	0x03C9C454 LDR V0, [X19]
	0x03C9C458 LDR X0, [X21]
	0x03C9C45C ADD X1, X31, 0x0
	0x03C9C460 STR W8, [X31 + 0x10]
	0x03C9C464 STR V0, [X31]
	0x03C9C468 BL 0x1C16E04
	0x03C9C46C MOV X1, X0
	0x03C9C470 MOV X0, X20
	0x03C9C474 MOV X2, X31
	0x03C9C478 BL 0x33D55D0
	0x03C9C47C LDP X20, X19, [X31 + 0x60]
	0x03C9C480 LDP X22, X21, [X31 + 0x50]
	0x03C9C484 LDR X30, [X31 + 0x40]
	0x03C9C488 AND W0, W0, 0x1
	0x03C9C48C ADD X31, X31, 0x70
	0x03C9C490 RET
	0x03C9C494 LDR W0, [X0 + 0x10]
	0x03C9C498 RET
	0x03C9C49C STR W1, [X0 + 0x10]
	0x03C9C4A0 RET
	0x03C9C4A4 LDR W9, [X0 + 0x24]
	0x03C9C4A8 LDUR V0, [X0 + 0x14]
	0x03C9C4AC STR W9, [X8 + 0x10]
	0x03C9C4B0 STR V0, [X8]
	0x03C9C4B4 RET
	0x03C9C4B8 LDR W8, [X1 + 0x10]
	0x03C9C4BC LDR V0, [X1]
	0x03C9C4C0 STR W8, [X0 + 0x24]
	0x03C9C4C4 STUR V0, [X0 + 0x14]
	0x03C9C4C8 RET
	0x03C9C4CC LDP X8, X1, [X0 + 0x28]
	0x03C9C4D0 MOV X0, X8
	0x03C9C4D4 RET
	0x03C9C4D8 STP X1, X2, [X0 + 0x28]
	0x03C9C4DC RET
	0x03C9C4E0 LDR V0, [X0 + 0x38]
	0x03C9C4E4 RET
	0x03C9C4E8 STR S0, [X0 + 0x38]
	0x03C9C4EC RET
	0x03C9C4F0 LDR W0, [X0 + 0x3C]
	0x03C9C4F4 RET
	0x03C9C4F8 STR W1, [X0 + 0x3C]
	0x03C9C4FC RET
	0x03C9C500 STP X30, X19, [X31 - 0x10]!
	0x03C9C504 MOV X1, X31
	0x03C9C508 MOV X19, X0
	0x03C9C50C BL 0x33BDD8C
	0x03C9C510 MOVI V0.2D, 0x0
	0x03C9C514 MOVZ W8, 0x3F800000
	0x03C9C518 STP V0, V0, [X19 + 0x10]
	0x03C9C51C STP X31, X8, [X19 + 0x30]
	0x03C9C520 LDP X30, X19, [X31], #0x10
	0x03C9C524 RET
	0x03C9C528 SUB X31, X31, 0xA0
	0x03C9C52C STR X30, [X31 + 0x80]
	0x03C9C530 STP X20, X19, [X31 + 0x90]
	0x03C9C534 MOV X19, X1
	0x03C9C538 MOV X1, X31
	0x03C9C53C MOV X20, X0
	0x03C9C540 BL 0x33BDD8C
	0x03C9C544 LDR W8, [X19]
	0x03C9C548 LDR X30, [X31 + 0x80]
	0x03C9C54C STR W8, [X20 + 0x10]
	0x03C9C550 LDP V1, V0, [X19]
	0x03C9C554 LDR V2, [X19 + 0x2]
	0x03C9C558 LDR W8, [X19 + 0x30]
	0x03C9C55C STP V1, V0, [X31 + 0x40]
	0x03C9C560 LDR W9, [X31 + 0x54]
	0x03C9C564 LDUR V0, [X31 + 0x44]
	0x03C9C568 STR W8, [X31 + 0x70]
	0x03C9C56C STR V2, [X31 + 0x6]
	0x03C9C570 STR W9, [X20 + 0x24]
	0x03C9C574 STUR V0, [X20 + 0x14]
	0x03C9C578 LDP V1, V0, [X19 + 0x10]
	0x03C9C57C LDR V2, [X19]
	0x03C9C580 LDR W8, [X19 + 0x30]
	0x03C9C584 STP V1, V0, [X31 + 0x10]
	0x03C9C588 LDUR V0, [X31 + 0x18]
	0x03C9C58C STR W8, [X31 + 0x30]
	0x03C9C590 STR V2, [X31]
	0x03C9C594 STUR V0, [X20 + 0x28]
	0x03C9C598 LDR V0, [X19 + 0x28]
	0x03C9C59C STR S0, [X20 + 0x38]
	0x03C9C5A0 LDR W8, [X19 + 0x2C]
	0x03C9C5A4 STR W8, [X20 + 0x3C]
	0x03C9C5A8 LDP X20, X19, [X31 + 0x90]
	0x03C9C5AC ADD X31, X31, 0xA0
	0x03C9C5B0 RET
	0x03C9C5B4 STR D8, [X31 - 0x40]!
	0x03C9C5B8 STR X30, [X31 + 0x8]
	0x03C9C5BC STP X24, X23, [X31 + 0x10]
	0x03C9C5C0 STP X22, X21, [X31 + 0x20]
	0x03C9C5C4 STP X20, X19, [X31 + 0x30]
	0x03C9C5C8 MOV W23, W1
	0x03C9C5CC MOV X1, X31
	0x03C9C5D0 MOV W19, W5
	0x03C9C5D4 MOV V8.16B, V0.16B
	0x03C9C5D8 MOV X20, X4
	0x03C9C5DC MOV X21, X3
	0x03C9C5E0 MOV X22, X2
	0x03C9C5E4 MOV X24, X0
	0x03C9C5E8 BL 0x33BDD8C
	0x03C9C5EC STR W23, [X24 + 0x10]
	0x03C9C5F0 LDR V0, [X22]
	0x03C9C5F4 LDR W8, [X22 + 0x10]
	0x03C9C5F8 STP X21, X20, [X24 + 0x28]
	0x03C9C5FC STR S8, [X24 + 0x38]
	0x03C9C600 STUR V0, [X24 + 0x14]
	0x03C9C604 STR W8, [X24 + 0x24]
	0x03C9C608 STR W19, [X24 + 0x3C]
	0x03C9C60C LDP X20, X19, [X31 + 0x30]
	0x03C9C610 LDP X22, X21, [X31 + 0x20]
	0x03C9C614 LDP X24, X23, [X31 + 0x10]
	0x03C9C618 LDR X30, [X31 + 0x8]
	0x03C9C61C LDR V8, [X31], #0x40
	0x03C9C620 RET
	0x03C9C624 STR X30, [X31 - 0x20]!
	0x03C9C628 STP X20, X19, [X31 + 0x10]
	0x03C9C62C ADRP X19, 0x74B000
	0x03C9C630 ADRP X20, 0x4BC000
	0x03C9C634 LDRB W8, [X19 + 0x1E2]
	0x03C9C638 LDR X20, [X20 + 0xBC0]
	0x03C9C63C TBNZ X8, 0x0, 0x3C9C654
	0x03C9C640 ADRP X0, 0x4BC000
	0x03C9C644 LDR X0, [X0 + 0xBC0]
	0x03C9C648 BL 0x1C16CF4
	0x03C9C64C MOVZ W8, 0x1
	0x03C9C650 STRB W8, [X19 + 0x1E2]
	0x03C9C654 LDR X0, [X20]

ISIL:
	001 Move [X31-112], D11
	002 Move [X31-104], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+40], X27
	007 Move [X31+48], X26
	008 Move [X31+56], X25
	009 Move [X31+64], X24
	010 Move [X31+72], X23
	011 Move [X31+80], X22
	012 Move [X31+88], X21
	013 Move [X31+96], X20
	014 Move [X31+104], X19
	015 Move X20, 0x74D000
	016 Move X26, 0x459000
	017 Move W8, [X20+470]
	018 Move X26, [X26+1432]
	019 Move W25, W2
	020 Move W21, W1
	021 Move X19, X0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {31}
	026 Move X0, 0x459000
	027 Move X0, [X0+1432]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X20+470], W8
	031 Move X0, X19
	032 Move W1, W21
	033 Move W2, W25
	034 Call TerrainMap.GetTerrain, X0, X1, X2
	035 Move X8, [X26]
	036 Move X20, X0
	037 Move W9, [X8+224]
	038 Compare W9, 0
	039 JumpIfNotEqual {42}
	040 Move X0, X8
	041 Call 0x1C17DFC
	042 Move X0, X20
	043 Move X1, X31
	044 Move X2, X31
	045 Call Object.op_Inequality, X0, X1
	046 Move TEMP, X0
	047 And TEMP, TEMP, 1
	048 Compare TEMP, 1
	049 JumpIfNotEqual {533}
	050 Subtract W1, W21, 1
	051 Move X0, X19
	052 Move W2, W25
	053 Call TerrainMap.GetTerrain, X0, X1, X2
	054 Move X24, X0
	055 Add W1, W21, 1
	056 Move X0, X19
	057 Move W2, W25
	058 Call TerrainMap.GetTerrain, X0, X1, X2
	059 Move X23, X0
	060 Add W2, W25, 1
	061 Move X0, X19
	062 Move W1, W21
	063 Call TerrainMap.GetTerrain, X0, X1, X2
	064 Move X22, X0
	065 Subtract W2, W25, 1
	066 Move X0, X19
	067 Move W1, W21
	068 Call TerrainMap.GetTerrain, X0, X1, X2
	069 Move X8, [X26]
	070 Move X21, X0
	071 Move W9, [X8+224]
	072 Compare W9, 0
	073 JumpIfNotEqual {76}
	074 Move X0, X8
	075 Call 0x1C17DFC
	076 Move X0, X24
	077 Move X1, X31
	078 Call Object.op_Implicit, X0
	079 Move TEMP, X0
	080 And TEMP, TEMP, 1
	081 Compare TEMP, 1
	082 JumpIfNotEqual {186}
	083 Compare X20, 0
	084 JumpIfEqual {548}
	085 Move X0, X20
	086 Move X1, X31
	087 Call Component.get_transform, X0
	088 Compare X0, 0
	089 JumpIfEqual {548}
	090 Move X1, X31
	091 Call Transform.get_position, X0
	092 Compare X24, 0
	093 JumpIfEqual {548}
	094 Move X0, X24
	095 Move X1, X31
	096 Move V8, V0
	097 Call Component.get_transform, X0
	098 Compare X0, 0
	099 JumpIfEqual {548}
	100 Move X1, X31
	101 Call Transform.get_position, X0
	102 Move X25, 0x74C000
	103 Move X8, [X25+360]
	104 Move V9, V0
	105 Compare X8, 0
	106 JumpIfNotEqual {112}
	107 Move X0, -52035584
	108 Add X0, X0, 2717
	109 Call 0x1C17CB8
	110 Move X8, X0
	111 Move [X25+360], X0
	112 Move X0, X24
	113 NotImplemented "Instruction BLR not yet implemented."
	114 Compare X0, 0
	115 JumpIfEqual {548}
	116 Call TerrainData.get_size, X0
	117 Move X25, 0x73E000
	118 Move W8, [X25+1450]
	119 Add S9, S9, S0
	120 Compare W8, 0
	121 JumpIfNotEqual {127}
	122 Move X0, 0x45F000
	123 Move X0, [X0+1208]
	124 Call 0x1C17CF4
	125 Move W8, 1
	126 Move [X25+1450], W8
	127 Move X27, 0x45F000
	128 Move X27, [X27+1208]
	129 Move X9, -52105216
	130 Move V10, [X9+576]
	131 NotImplemented "Instruction FABS not yet implemented."
	132 Move X8, [X27]
	133 NotImplemented "Instruction FABS not yet implemented."
	134 NotImplemented "Instruction FCMP not yet implemented."
	135 NotImplemented "Instruction FCSEL not yet implemented."
	136 Move X8, [X8+184]
	137 Move S1, 8
	138 Multiply S0, S0, S10
	139 Move V2, [X8]
	140 Multiply S1, S2, S1
	141 NotImplemented "Instruction FCMP not yet implemented."
	142 NotImplemented "Instruction FCSEL not yet implemented."
	143 NotImplemented "Instruction FABD not yet implemented."
	144 NotImplemented "Instruction FCMP not yet implemented."
	145 Move X0, X20
	146 Move X1, X31
	147 Call Component.get_transform, X0
	148 Compare X0, 0
	149 JumpIfEqual {548}
	150 Move X1, X31
	151 Call Transform.get_position, X0
	152 Move X0, X24
	153 Move X1, X31
	154 Move V8, V2
	155 Call Component.get_transform, X0
	156 Compare X0, 0
	157 JumpIfEqual {548}
	158 Move X1, X31
	159 Call Transform.get_position, X0
	160 Move W8, [X25+1450]
	161 Move V9, V2
	162 Compare W8, 0
	163 JumpIfNotEqual {169}
	164 Move X0, 0x45F000
	165 Move X0, [X0+1208]
	166 Call 0x1C17CF4
	167 Move W8, 1
	168 Move [X25+1450], W8
	169 Move X8, [X27]
	170 NotImplemented "Instruction FABS not yet implemented."
	171 NotImplemented "Instruction FABS not yet implemented."
	172 NotImplemented "Instruction FCMP not yet implemented."
	173 Move X8, [X8+184]
	174 Move S2, 8
	175 NotImplemented "Instruction FCSEL not yet implemented."
	176 Multiply S0, S0, S10
	177 Move V3, [X8]
	178 Multiply S1, S3, S2
	179 NotImplemented "Instruction FCMP not yet implemented."
	180 NotImplemented "Instruction FCSEL not yet implemented."
	181 NotImplemented "Instruction FABD not yet implemented."
	182 NotImplemented "Instruction FCMP not yet implemented."
	183 Move W8, [X19+28]
	184 Or W8, W8, 8
	185 Move [X19+28], W8
	186 Move X0, [X26]
	187 Move W8, [X0+224]
	188 Compare W8, 0
	189 JumpIfNotEqual {191}
	190 Call 0x1C17DFC
	191 Move X0, X23
	192 Move X1, X31
	193 Call Object.op_Implicit, X0
	194 Move TEMP, X0
	195 And TEMP, TEMP, 1
	196 Compare TEMP, 1
	197 JumpIfNotEqual {302}
	198 Compare X20, 0
	199 JumpIfEqual {548}
	200 Move X0, X20
	201 Move X1, X31
	202 Call Component.get_transform, X0
	203 Compare X0, 0
	204 JumpIfEqual {548}
	205 Move X1, X31
	206 Call Transform.get_position, X0
	207 Move X24, 0x74C000
	208 Move X8, [X24+360]
	209 Move V8, V0
	210 Compare X8, 0
	211 JumpIfNotEqual {217}
	212 Move X0, -52035584
	213 Add X0, X0, 2717
	214 Call 0x1C17CB8
	215 Move X8, X0
	216 Move [X24+360], X0
	217 Move X0, X20
	218 NotImplemented "Instruction BLR not yet implemented."
	219 Compare X0, 0
	220 JumpIfEqual {548}
	221 Call TerrainData.get_size, X0
	222 Compare X23, 0
	223 JumpIfEqual {548}
	224 Move X0, X23
	225 Move X1, X31
	226 Move V10, V0
	227 Call Component.get_transform, X0
	228 Compare X0, 0
	229 JumpIfEqual {548}
	230 Move X1, X31
	231 Call Transform.get_position, X0
	232 Move X24, 0x73E000
	233 Move W8, [X24+1450]
	234 Move V9, V0
	235 Add S8, S8, S10
	236 Compare W8, 0
	237 JumpIfNotEqual {243}
	238 Move X0, 0x45F000
	239 Move X0, [X0+1208]
	240 Call 0x1C17CF4
	241 Move W8, 1
	242 Move [X24+1450], W8
	243 Move X25, 0x45F000
	244 Move X25, [X25+1208]
	245 Move X9, -52105216
	246 Move V10, [X9+576]
	247 NotImplemented "Instruction FABS not yet implemented."
	248 Move X8, [X25]
	249 NotImplemented "Instruction FABS not yet implemented."
	250 NotImplemented "Instruction FCMP not yet implemented."
	251 NotImplemented "Instruction FCSEL not yet implemented."
	252 Move X8, [X8+184]
	253 Move S1, 8
	254 Multiply S0, S0, S10
	255 Move V2, [X8]
	256 Multiply S1, S2, S1
	257 NotImplemented "Instruction FCMP not yet implemented."
	258 NotImplemented "Instruction FCSEL not yet implemented."
	259 NotImplemented "Instruction FABD not yet implemented."
	260 NotImplemented "Instruction FCMP not yet implemented."
	261 Move X0, X20
	262 Move X1, X31
	263 Call Component.get_transform, X0
	264 Compare X0, 0
	265 JumpIfEqual {548}
	266 Move X1, X31
	267 Call Transform.get_position, X0
	268 Move X0, X23
	269 Move X1, X31
	270 Move V8, V2
	271 Call Component.get_transform, X0
	272 Compare X0, 0
	273 JumpIfEqual {548}
	274 Move X1, X31
	275 Call Transform.get_position, X0
	276 Move W8, [X24+1450]
	277 Move V9, V2
	278 Compare W8, 0
	279 JumpIfNotEqual {285}
	280 Move X0, 0x45F000
	281 Move X0, [X0+1208]
	282 Call 0x1C17CF4
	283 Move W8, 1
	284 Move [X24+1450], W8
	285 Move X8, [X25]
	286 NotImplemented "Instruction FABS not yet implemented."
	287 NotImplemented "Instruction FABS not yet implemented."
	288 NotImplemented "Instruction FCMP not yet implemented."
	289 Move X8, [X8+184]
	290 Move S2, 8
	291 NotImplemented "Instruction FCSEL not yet implemented."
	292 Multiply S0, S0, S10
	293 Move V3, [X8]
	294 Multiply S1, S3, S2
	295 NotImplemented "Instruction FCMP not yet implemented."
	296 NotImplemented "Instruction FCSEL not yet implemented."
	297 NotImplemented "Instruction FABD not yet implemented."
	298 NotImplemented "Instruction FCMP not yet implemented."
	299 Move W8, [X19+28]
	300 Or W8, W8, 8
	301 Move [X19+28], W8
	302 Move X0, [X26]
	303 Move W8, [X0+224]
	304 Compare W8, 0
	305 JumpIfNotEqual {307}
	306 Call 0x1C17DFC
	307 Move X0, X22
	308 Move X1, X31
	309 Call Object.op_Implicit, X0
	310 Move TEMP, X0
	311 And TEMP, TEMP, 1
	312 Compare TEMP, 1
	313 JumpIfNotEqual {418}
	314 Compare X20, 0
	315 JumpIfEqual {548}
	316 Move X0, X20
	317 Move X1, X31
	318 Call Component.get_transform, X0
	319 Compare X0, 0
	320 JumpIfEqual {548}
	321 Move X1, X31
	322 Call Transform.get_position, X0
	323 Compare X22, 0
	324 JumpIfEqual {548}
	325 Move X0, X22
	326 Move X1, X31
	327 Move V8, V0
	328 Call Component.get_transform, X0
	329 Compare X0, 0
	330 JumpIfEqual {548}
	331 Move X1, X31
	332 Call Transform.get_position, X0
	333 Move X23, 0x73E000
	334 Move W8, [X23+1450]
	335 Move V9, V0
	336 Compare W8, 0
	337 JumpIfNotEqual {343}
	338 Move X0, 0x45F000
	339 Move X0, [X0+1208]
	340 Call 0x1C17CF4
	341 Move W8, 1
	342 Move [X23+1450], W8
	343 Move X24, 0x45F000
	344 Move X24, [X24+1208]
	345 Move X9, -52105216
	346 Move V11, [X9+576]
	347 NotImplemented "Instruction FABS not yet implemented."
	348 Move X8, [X24]
	349 NotImplemented "Instruction FABS not yet implemented."
	350 NotImplemented "Instruction FCMP not yet implemented."
	351 NotImplemented "Instruction FCSEL not yet implemented."
	352 Move X8, [X8+184]
	353 Move S1, 8
	354 Multiply S0, S0, S11
	355 Move V2, [X8]
	356 Multiply S1, S2, S1
	357 NotImplemented "Instruction FCMP not yet implemented."
	358 NotImplemented "Instruction FCSEL not yet implemented."
	359 NotImplemented "Instruction FABD not yet implemented."
	360 NotImplemented "Instruction FCMP not yet implemented."
	361 Move X0, X20
	362 Move X1, X31
	363 Call Component.get_transform, X0
	364 Compare X0, 0
	365 JumpIfEqual {548}
	366 Move X1, X31
	367 Call Transform.get_position, X0
	368 Move X25, 0x74C000
	369 Move X8, [X25+360]
	370 Move V8, V2
	371 Compare X8, 0
	372 JumpIfNotEqual {378}
	373 Move X0, -52035584
	374 Add X0, X0, 2717
	375 Call 0x1C17CB8
	376 Move X8, X0
	377 Move [X25+360], X0
	378 Move X0, X20
	379 NotImplemented "Instruction BLR not yet implemented."
	380 Compare X0, 0
	381 JumpIfEqual {548}
	382 Call TerrainData.get_size, X0
	383 Move X0, X22
	384 Move X1, X31
	385 Move V10, V2
	386 Call Component.get_transform, X0
	387 Compare X0, 0
	388 JumpIfEqual {548}
	389 Move X1, X31
	390 Call Transform.get_position, X0
	391 Move W8, [X23+1450]
	392 Move V9, V2
	393 Add S8, S8, S10
	394 Compare W8, 0
	395 JumpIfNotEqual {401}
	396 Move X0, 0x45F000
	397 Move X0, [X0+1208]
	398 Call 0x1C17CF4
	399 Move W8, 1
	400 Move [X23+1450], W8
	401 Move X8, [X24]
	402 NotImplemented "Instruction FABS not yet implemented."
	403 NotImplemented "Instruction FABS not yet implemented."
	404 NotImplemented "Instruction FCMP not yet implemented."
	405 Move X8, [X8+184]
	406 Move S2, 8
	407 NotImplemented "Instruction FCSEL not yet implemented."
	408 Multiply S0, S0, S11
	409 Move V3, [X8]
	410 Multiply S1, S3, S2
	411 NotImplemented "Instruction FCMP not yet implemented."
	412 NotImplemented "Instruction FCSEL not yet implemented."
	413 NotImplemented "Instruction FABD not yet implemented."
	414 NotImplemented "Instruction FCMP not yet implemented."
	415 Move W8, [X19+28]
	416 Or W8, W8, 8
	417 Move [X19+28], W8
	418 Move X0, [X26]
	419 Move W8, [X0+224]
	420 Compare W8, 0
	421 JumpIfNotEqual {423}
	422 Call 0x1C17DFC
	423 Move X0, X21
	424 Move X1, X31
	425 Call Object.op_Implicit, X0
	426 Move TEMP, X0
	427 And TEMP, TEMP, 1
	428 Compare TEMP, 1
	429 JumpIfNotEqual {533}
	430 Compare X20, 0
	431 JumpIfEqual {548}
	432 Move X0, X20
	433 Move X1, X31
	434 Call Component.get_transform, X0
	435 Compare X0, 0
	436 JumpIfEqual {548}
	437 Move X1, X31
	438 Call Transform.get_position, X0
	439 Compare X21, 0
	440 JumpIfEqual {548}
	441 Move X0, X21
	442 Move X1, X31
	443 Move V8, V0
	444 Call Component.get_transform, X0
	445 Compare X0, 0
	446 JumpIfEqual {548}
	447 Move X1, X31
	448 Call Transform.get_position, X0
	449 Move X22, 0x73E000
	450 Move W8, [X22+1450]
	451 Move V9, V0
	452 Compare W8, 0
	453 JumpIfNotEqual {459}
	454 Move X0, 0x45F000
	455 Move X0, [X0+1208]
	456 Call 0x1C17CF4
	457 Move W8, 1
	458 Move [X22+1450], W8
	459 Move X23, 0x45F000
	460 Move X23, [X23+1208]
	461 Move X9, -52105216
	462 Move V10, [X9+576]
	463 NotImplemented "Instruction FABS not yet implemented."
	464 Move X8, [X23]
	465 NotImplemented "Instruction FABS not yet implemented."
	466 NotImplemented "Instruction FCMP not yet implemented."
	467 NotImplemented "Instruction FCSEL not yet implemented."
	468 Move X8, [X8+184]
	469 Move S1, 8
	470 Multiply S0, S0, S10
	471 Move V2, [X8]
	472 Multiply S1, S2, S1
	473 NotImplemented "Instruction FCMP not yet implemented."
	474 NotImplemented "Instruction FCSEL not yet implemented."
	475 NotImplemented "Instruction FABD not yet implemented."
	476 NotImplemented "Instruction FCMP not yet implemented."
	477 Move X0, X20
	478 Move X1, X31
	479 Call Component.get_transform, X0
	480 Compare X0, 0
	481 JumpIfEqual {548}
	482 Move X1, X31
	483 Call Transform.get_position, X0
	484 Move X0, X21
	485 Move X1, X31
	486 Move V8, V2
	487 Call Component.get_transform, X0
	488 Compare X0, 0
	489 JumpIfEqual {548}
	490 Move X1, X31
	491 Call Transform.get_position, X0
	492 Move X20, 0x74C000
	493 Move X8, [X20+360]
	494 Move V9, V2
	495 Compare X8, 0
	496 JumpIfNotEqual {502}
	497 Move X0, -52035584
	498 Add X0, X0, 2717
	499 Call 0x1C17CB8
	500 Move X8, X0
	501 Move [X20+360], X0
	502 Move X0, X21
	503 NotImplemented "Instruction BLR not yet implemented."
	504 Compare X0, 0
	505 JumpIfEqual {548}
	506 Call TerrainData.get_size, X0
	507 Move W8, [X22+1450]
	508 Add S9, S9, S2
	509 Compare W8, 0
	510 JumpIfNotEqual {516}
	511 Move X0, 0x45F000
	512 Move X0, [X0+1208]
	513 Call 0x1C17CF4
	514 Move W8, 1
	515 Move [X22+1450], W8
	516 Move X8, [X23]
	517 NotImplemented "Instruction FABS not yet implemented."
	518 NotImplemented "Instruction FABS not yet implemented."
	519 NotImplemented "Instruction FCMP not yet implemented."
	520 Move X8, [X8+184]
	521 Move S2, 8
	522 NotImplemented "Instruction FCSEL not yet implemented."
	523 Multiply S0, S0, S10
	524 Move V3, [X8]
	525 Multiply S1, S3, S2
	526 NotImplemented "Instruction FCMP not yet implemented."
	527 NotImplemented "Instruction FCSEL not yet implemented."
	528 NotImplemented "Instruction FABD not yet implemented."
	529 NotImplemented "Instruction FCMP not yet implemented."
	530 Move W8, [X19+28]
	531 Or W8, W8, 8
	532 Move [X19+28], W8
	533 Move X20, [X31+96]
	534 Move X19, [X31+104]
	535 Move X22, [X31+80]
	536 Move X21, [X31+88]
	537 Move X24, [X31+64]
	538 Move X23, [X31+72]
	539 Move X26, [X31+48]
	540 Move X25, [X31+56]
	541 Move X30, [X31+32]
	542 Move X27, [X31+40]
	543 Move D9, [X31+16]
	544 Move D8, [X31+24]
	545 Move D11, [X31+112]
	546 Move D10, [X31+120]
	547 Return 
	548 Call 0x1C17F20

Method: UnityEngine.TerrainUtils.TerrainMapStatusCode Validate()

Disassembly:
	0x03C9BC48 LDUR V0, [X31 + 0x8]
	0x03C9BC4C LDUR V1, [X31 + 0x18]
	0x03C9BC50 LDR X8, [X31 + 0x28]
	0x03C9BC54 STP V0, V1, [X31 + 0x30]
	0x03C9BC58 STR X8, [X31 + 0x50]
	0x03C9BC5C LDR X1, [X27]
	0x03C9BC60 ADD X0, X31, 0x30
	0x03C9BC64 BL 0x2C16108
	0x03C9BC68 TBZ X0, 0x0, 0x3C9BD0C
	0x03C9BC6C LDP W24, W25, [X31 + 0x40]
	0x03C9BC70 MOV X0, X20
	0x03C9BC74 MOV W1, W24
	0x03C9BC78 MOV W2, W25
	0x03C9BC7C BL 0x3C9A39C
	0x03C9BC80 MOV X21, X0
	0x03C9BC84 SUB W1, W24, 0x1
	0x03C9BC88 MOV X0, X20
	0x03C9BC8C MOV W2, W25
	0x03C9BC90 BL 0x3C9A39C
	0x03C9BC94 MOV X22, X0
	0x03C9BC98 ADD W1, W24, 0x1
	0x03C9BC9C MOV X0, X20
	0x03C9BCA0 MOV W2, W25
	0x03C9BCA4 BL 0x3C9A39C
	0x03C9BCA8 MOV X23, X0
	0x03C9BCAC ADD W2, W25, 0x1
	0x03C9BCB0 MOV X0, X20
	0x03C9BCB4 MOV W1, W24
	0x03C9BCB8 BL 0x3C9A39C
	0x03C9BCBC MOV X26, X0
	0x03C9BCC0 SUB W2, W25, 0x1
	0x03C9BCC4 MOV X0, X20
	0x03C9BCC8 MOV W1, W24
	0x03C9BCCC BL 0x3C9A39C
	0x03C9BCD0 CBZ X21, 0x3C9BD3C
	0x03C9BCD4 LDR X8, [X29 + 0x180]
	0x03C9BCD8 MOV X24, X0
	0x03C9BCDC CBNZ X8, 0x3C9BCF0
	0x03C9BCE0 MOV X0, X19
	0x03C9BCE4 BL 0x1C16CB8
	0x03C9BCE8 MOV X8, X0
	0x03C9BCEC STR X0, [X29 + 0x180]
	0x03C9BCF0 MOV X0, X21
	0x03C9BCF4 MOV X1, X22
	0x03C9BCF8 MOV X2, X26
	0x03C9BCFC MOV X3, X23
	0x03C9BD00 MOV X4, X24
	0x03C9BD04 BLR X8
	0x03C9BD08 B 0x3C9BC5C
	0x03C9BD0C MOV X21, X31
	0x03C9BD10 MOVZ W20, 0x9
	0x03C9BD14 ADRP X8, 0x4C6000
	0x03C9BD18 LDR X8, [X8 + 0x1C0]
	0x03C9BD1C LDR X1, [X8]
	0x03C9BD20 ADD X0, X31, 0x30
	0x03C9BD24 BL 0x2C1621C
	0x03C9BD28 CBNZ X21, 0x3C9BDDC
	0x03C9BD2C CMP W20, 0x9
	0x03C9BD30 B.EQ 0x3C9BC14
	0x03C9BD34 CBZ W20, 0x3C9BC14
	0x03C9BD38 B 0x3C9BD80
	0x03C9BD3C BL 0x1C16F20
	0x03C9BD40 B 0x3C9BDEC
	0x03C9BD44 B 0x3C9BD60
	0x03C9BD48 B 0x3C9BD60
	0x03C9BD4C B 0x3C9BD60
	0x03C9BD50 B 0x3C9BD60
	0x03C9BD54 B 0x3C9BD60
	0x03C9BD58 B 0x3C9BD60
	0x03C9BD5C B 0x3C9BD60
	0x03C9BD60 MOV X20, X1
	0x03C9BD64 CMP W20, 0x1
	0x03C9BD68 B.NE 0x3C9BDB4
	0x03C9BD6C BL 0x3EB1AD0
	0x03C9BD70 LDR X21, [X0]
	0x03C9BD74 BL 0x3EB1AE0
	0x03C9BD78 MOV W20, W31
	0x03C9BD7C B 0x3C9BD14
	0x03C9BD80 ADRP X8, 0x4C6000
	0x03C9BD84 LDR X8, [X8 + 0x1B8]
	0x03C9BD88 ADD X0, X31, 0x60
	0x03C9BD8C LDR X1, [X8]
	0x03C9BD90 BL 0x2BF5448
	0x03C9BD94 LDP X20, X19, [X31 + 0xE0]
	0x03C9BD98 LDP X22, X21, [X31 + 0xD0]
	0x03C9BD9C LDP X24, X23, [X31 + 0xC0]
	0x03C9BDA0 LDP X26, X25, [X31 + 0xB0]
	0x03C9BDA4 LDP X28, X27, [X31 + 0xA0]
	0x03C9BDA8 LDP X29, X30, [X31 + 0x90]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+32], X30
	003 Move [X31+40], X21
	004 Move [X31+48], X20
	005 Move [X31+56], X19
	006 Move X20, 0x74D000
	007 Move W8, [X20+471]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {30}
	013 Move X0, 0x4C7000
	014 Move X0, [X0+312]
	015 Call 0x1C17CF4
	016 Move X0, 0x4C7000
	017 Move X0, [X0+320]
	018 Call 0x1C17CF4
	019 Move X0, 0x4C7000
	020 Move X0, [X0+328]
	021 Call 0x1C17CF4
	022 Move X0, 0x4C7000
	023 Move X0, [X0+336]
	024 Call 0x1C17CF4
	025 Move X0, 0x4C7000
	026 Move X0, [X0+344]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X20+471], W8
	030 Move [X31+8], X31
	031 Move [X31+16], X31
	032 Move [X31+24], X31
	033 Move X0, [X19+32]
	034 Compare X0, 0
	035 JumpIfEqual {72}
	036 Move X8, 0x4C7000
	037 Move X8, [X8+312]
	038 Move X1, [X8]
	039 Call Dictionary`2<TerrainTileCoord, Object>.get_Keys, X0
	040 Compare X0, 0
	041 JumpIfEqual {72}
	042 Move X8, 0x4C7000
	043 Move X8, [X8+344]
	044 Move X21, 0x4C7000
	045 Move X20, 0x4C7000
	046 Move X1, [X8]
	047 Move X21, [X21+328]
	048 Move X20, [X20+320]
	049 Add X8, X31, 8
	050 Call KeyCollection<TerrainTileCoord, Object>.GetEnumerator, X0
	051 Move X1, [X21]
	052 Add X0, X31, 8
	053 Call Enumerator<TerrainTileCoord, Object>.MoveNext, X0
	054 Move TEMP, X0
	055 And TEMP, TEMP, 1
	056 Compare TEMP, 1
	057 JumpIfNotEqual {62}
	058 Move W1, [X31+24]
	059 Move W2, [X31+28]
	060 Move X0, X19
	061 Call TerrainMap.ValidateTerrain, X0, X1, X2
	062 Move X1, [X20]
	063 Add X0, X31, 8
	064 Call Enumerator<TerrainTileCoord, Object>.Dispose, X0
	065 Move W0, [X19+28]
	066 Move X20, [X31+48]
	067 Move X19, [X31+56]
	068 Move X30, [X31+32]
	069 Move X21, [X31+40]
	070 Add X31, X31, 64
	071 Return X0
	072 Call 0x1C17F20
	073 Move X21, X0
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Move X0, X21
	076 Call 0x3EB2AD0
	077 Move X20, [X0]
	078 Call 0x3EB2AE0
	079 Move X8, 0x4C7000
	080 Move X8, [X8+320]
	081 Add X0, X31, 8
	082 Move X1, [X8]
	083 Call Enumerator<TerrainTileCoord, Object>.Dispose, X0
	084 Compare X20, 0
	085 JumpIfEqual {65}
	086 Move X0, X20
	087 Call 0x1C17F18
	088 Move X20, X31
	089 Move X21, X0
	090 Move X8, 0x4C7000
	091 Move X8, [X8+320]
	092 Move X1, [X8]
	093 Add X0, X31, 8
	094 Call Enumerator<TerrainTileCoord, Object>.Dispose, X0
	095 Compare X20, 0
	096 JumpIfNotEqual {99}
	097 Move X0, X21
	098 Call 0x1D2D690
	099 Move X0, X20
	100 Call 0x1C17F18
	101 Call 0x1991590

