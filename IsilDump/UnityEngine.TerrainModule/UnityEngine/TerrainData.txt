Type: UnityEngine.TerrainData

Method: System.Int32 GetBoundaryValue(UnityEngine.TerrainData/BoundaryValueType type)

Disassembly:
	0x03C9AFDC CBZ X20, 0x3C9B654
	0x03C9AFE0 MOV X0, X20
	0x03C9AFE4 MOV X1, X31
	0x03C9AFE8 BL 0x3C32E90
	0x03C9AFEC CBZ X0, 0x3C9B654
	0x03C9AFF0 MOV X1, X31
	0x03C9AFF4 BL 0x3C3F58C
	0x03C9AFF8 CBZ X24, 0x3C9B654
	0x03C9AFFC MOV X0, X24
	0x03C9B000 MOV X1, X31
	0x03C9B004 MOV V8.16B, V0.16B
	0x03C9B008 BL 0x3C32E90
	0x03C9B00C CBZ X0, 0x3C9B654
	0x03C9B010 MOV X1, X31
	0x03C9B014 BL 0x3C3F58C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x74E000
	005 Move X1, [X20+408]
	006 Move W19, W0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51879936
	010 Add X0, X0, 1738
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+408], X0
	014 Move W0, W19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Void .ctor()

Disassembly:
	0x03C9B018 ADRP X25, 0x74C000
	0x03C9B01C LDR X8, [X25 + 0x168]
	0x03C9B020 MOV V9.16B, V0.16B
	0x03C9B024 CBNZ X8, 0x3C9B03C
	0x03C9B028 ADRP X0, 0xFFFFFFFFFCE60000
	0x03C9B02C ADD X0, X0, 0xA9D
	0x03C9B030 BL 0x1C16CB8
	0x03C9B034 MOV X8, X0
	0x03C9B038 STR X0, [X25 + 0x168]
	0x03C9B03C MOV X0, X24
	0x03C9B040 BLR X8
	0x03C9B044 CBZ X0, 0x3C9B654
	0x03C9B048 BL 0x3C9A0F8
	0x03C9B04C ADRP X25, 0x73E000
	0x03C9B050 LDRB W8, [X25 + 0x5AA]
	0x03C9B054 FADD S9, S9, S0
	0x03C9B058 CBNZ W8, 0x3C9B070
	0x03C9B05C ADRP X0, 0x45F000
	0x03C9B060 LDR X0, [X0 + 0x4B8]
	0x03C9B064 BL 0x1C16CF4
	0x03C9B068 MOVZ W8, 0x1
	0x03C9B06C STRB W8, [X25 + 0x5AA]
	0x03C9B070 ADRP X27, 0x45F000
	0x03C9B074 LDR X27, [X27 + 0x4B8]
	0x03C9B078 ADRP X9, 0xFFFFFFFFFCE4F000
	0x03C9B07C LDR V10, [X9 + 0x240]
	0x03C9B080 FABS S0, S8
	0x03C9B084 LDR X8, [X27]
	0x03C9B088 FABS S1, S9
	0x03C9B08C FCMP S0, S1
	0x03C9B090 FCSEL S0, S0, S1, GT
	0x03C9B094 LDR X8, [X8 + 0xB8]
	0x03C9B098 FMOV S1, 8
	0x03C9B09C FMUL S0, S0, S10
	0x03C9B0A0 LDR V2, [X8]
	0x03C9B0A4 FMUL S1, S2, S1
	0x03C9B0A8 FCMP S0, S1
	0x03C9B0AC FCSEL S0, S0, S1, GT
	0x03C9B0B0 FABD S1, S9, S9
	0x03C9B0B4 FCMP S1, S0
	0x03C9B0B8 B.PL 0x3C9B14C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x74D000
	006 Move X20, 0x459000
	007 Move W8, [X21+416]
	008 Move X20, [X20+1432]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x459000
	015 Move X0, [X0+1432]
	016 Call 0x1C17CF4
	017 Move X0, 0x4A6000
	018 Move X0, [X0+1664]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+416], W8
	022 Move X0, [X20]
	023 Move X20, 0x4A6000
	024 Move W8, [X0+224]
	025 Move X20, [X20+1664]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Move X0, X19
	030 Move X1, X31
	031 Call Object..ctor, X0
	032 Move X0, [X20]
	033 Move W8, [X0+224]
	034 Compare W8, 0
	035 JumpIfNotEqual {37}
	036 Call 0x1C17DFC
	037 Move X20, 0x74D000
	038 Move X1, [X20+424]
	039 Compare X1, 0
	040 JumpIfNotEqual {46}
	041 Move X0, -51892224
	042 Add X0, X0, 1858
	043 Call 0x1C17CB8
	044 Move X1, X0
	045 Move [X20+424], X0
	046 Move X0, X19
	047 Move X20, [X31+16]
	048 Move X19, [X31+24]
	049 Move X30, [X31+32]
	050 Move X21, [X31+40]
	051 CallNoReturn X1

Method: System.Void Internal_Create(UnityEngine.TerrainData terrainData)

Disassembly:
	0x03C9B0BC MOV X0, X20
	0x03C9B0C0 MOV X1, X31
	0x03C9B0C4 BL 0x3C32E90
	0x03C9B0C8 CBZ X0, 0x3C9B654
	0x03C9B0CC MOV X1, X31
	0x03C9B0D0 BL 0x3C3F58C
	0x03C9B0D4 MOV X0, X24
	0x03C9B0D8 MOV X1, X31
	0x03C9B0DC MOV V8.16B, V2.16B
	0x03C9B0E0 BL 0x3C32E90
	0x03C9B0E4 CBZ X0, 0x3C9B654
	0x03C9B0E8 MOV X1, X31
	0x03C9B0EC BL 0x3C3F58C
	0x03C9B0F0 LDRB W8, [X25 + 0x5AA]
	0x03C9B0F4 MOV V9.16B, V2.16B

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x74D000
	005 Move X1, [X20+424]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51892224
	010 Add X0, X0, 1858
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+424], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: UnityEngine.Vector3 get_size()

Disassembly:
	0x03C9B0F8 CBNZ W8, 0x3C9B110
	0x03C9B0FC ADRP X0, 0x45F000
	0x03C9B100 LDR X0, [X0 + 0x4B8]
	0x03C9B104 BL 0x1C16CF4
	0x03C9B108 MOVZ W8, 0x1
	0x03C9B10C STRB W8, [X25 + 0x5AA]
	0x03C9B110 LDR X8, [X27]
	0x03C9B114 FABS S0, S8
	0x03C9B118 FABS S1, S9
	0x03C9B11C FCMP S0, S1
	0x03C9B120 LDR X8, [X8 + 0xB8]
	0x03C9B124 FMOV S2, 8
	0x03C9B128 FCSEL S0, S0, S1, GT
	0x03C9B12C FMUL S0, S0, S10
	0x03C9B130 LDR V3, [X8]
	0x03C9B134 FMUL S1, S3, S2
	0x03C9B138 FCMP S0, S1
	0x03C9B13C FCSEL S0, S0, S1, GT
	0x03C9B140 FABD S1, S9, S9
	0x03C9B144 FCMP S1, S0
	0x03C9B148 B.MI 0x3C9B158
	0x03C9B14C LDR W8, [X19 + 0x1C]
	0x03C9B150 ORR W8, W8, 0x8

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+32], X20
	004 Move [X31+40], X19
	005 Move X20, 0x74D000
	006 Move X8, [X20+456]
	007 Move X19, X0
	008 Move [X31+8], W31
	009 Move [X31], X31
	010 Compare X8, 0
	011 JumpIfNotEqual {17}
	012 Move X0, -52072448
	013 Add X0, X0, 2377
	014 Call 0x1C17CB8
	015 Move X8, X0
	016 Move [X20+456], X0
	017 Add X1, X31, 0
	018 Move X0, X19
	019 NotImplemented "Instruction BLR not yet implemented."
	020 Move S0, [X31]
	021 Move S1, [X31+4]
	022 Move V2, [X31+8]
	023 Move X20, [X31+32]
	024 Move X19, [X31+40]
	025 Move X30, [X31+16]
	026 Add X31, X31, 48
	027 Return X0

Method: System.Single GetAlphamapResolutionInternal()

Disassembly:
	0x03C9B198 LDR X8, [X24 + 0x168]
	0x03C9B19C MOV V8.16B, V0.16B
	0x03C9B1A0 CBNZ X8, 0x3C9B1B8
	0x03C9B1A4 ADRP X0, 0xFFFFFFFFFCE60000
	0x03C9B1A8 ADD X0, X0, 0xA9D
	0x03C9B1AC BL 0x1C16CB8
	0x03C9B1B0 MOV X8, X0
	0x03C9B1B4 STR X0, [X24 + 0x168]
	0x03C9B1B8 MOV X0, X20
	0x03C9B1BC BLR X8
	0x03C9B1C0 CBZ X0, 0x3C9B654
	0x03C9B1C4 BL 0x3C9A0F8
	0x03C9B1C8 CBZ X23, 0x3C9B654
	0x03C9B1CC MOV X0, X23
	0x03C9B1D0 MOV X1, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x74D000
	005 Move X1, [X20+432]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -52072448
	010 Add X0, X0, 2320
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+432], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: UnityEngine.Terrain[] get_users()

Disassembly:
	0x03C9AD14 ADD X0, X31, 0x8
	0x03C9AD18 BL 0x2C165A0
	0x03C9AD1C LDR W0, [X19 + 0x1C]
	0x03C9AD20 LDP X20, X19, [X31 + 0x30]
	0x03C9AD24 LDP X30, X21, [X31 + 0x20]
	0x03C9AD28 ADD X31, X31, 0x40
	0x03C9AD2C RET
	0x03C9AD30 BL 0x1C16F20
	0x03C9AD34 B 0x3C9AD38
	0x03C9AD38 MOV X21, X0
	0x03C9AD3C CMP W1, 0x1
	0x03C9AD40 B.NE 0x3C9AD74
	0x03C9AD44 MOV X0, X21
	0x03C9AD48 BL 0x3EB1AD0
	0x03C9AD4C LDR X20, [X0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x74E000
	005 Move X1, [X20+440]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51879936
	010 Add X0, X0, 1823
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+440], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Void .cctor()

Disassembly:
	0x03C9B1D4 MOV V10.16B, V0.16B
	0x03C9B1D8 BL 0x3C32E90
	0x03C9B1DC CBZ X0, 0x3C9B654
	0x03C9B1E0 MOV X1, X31
	0x03C9B1E4 BL 0x3C3F58C
	0x03C9B1E8 ADRP X24, 0x73E000
	0x03C9B1EC LDRB W8, [X24 + 0x5AA]
	0x03C9B1F0 MOV V9.16B, V0.16B
	0x03C9B1F4 FADD S8, S8, S10
	0x03C9B1F8 CBNZ W8, 0x3C9B210
	0x03C9B1FC ADRP X0, 0x45F000
	0x03C9B200 LDR X0, [X0 + 0x4B8]
	0x03C9B204 BL 0x1C16CF4
	0x03C9B208 MOVZ W8, 0x1
	0x03C9B20C STRB W8, [X24 + 0x5AA]
	0x03C9B210 ADRP X25, 0x45F000
	0x03C9B214 LDR X25, [X25 + 0x4B8]
	0x03C9B218 ADRP X9, 0xFFFFFFFFFCE4F000
	0x03C9B21C LDR V10, [X9 + 0x240]
	0x03C9B220 FABS S0, S8
	0x03C9B224 LDR X8, [X25]
	0x03C9B228 FABS S1, S9
	0x03C9B22C FCMP S0, S1
	0x03C9B230 FCSEL S0, S0, S1, GT
	0x03C9B234 LDR X8, [X8 + 0xB8]
	0x03C9B238 FMOV S1, 8
	0x03C9B23C FMUL S0, S0, S10
	0x03C9B240 LDR V2, [X8]
	0x03C9B244 FMUL S1, S2, S1
	0x03C9B248 FCMP S0, S1
	0x03C9B24C FCSEL S0, S0, S1, GT
	0x03C9B250 FABD S1, S9, S9
	0x03C9B254 FCMP S1, S0
	0x03C9B258 B.PL 0x3C9B2EC
	0x03C9B25C MOV X0, X20
	0x03C9B260 MOV X1, X31
	0x03C9B264 BL 0x3C32E90
	0x03C9B268 CBZ X0, 0x3C9B654
	0x03C9B26C MOV X1, X31
	0x03C9B270 BL 0x3C3F58C
	0x03C9B274 MOV X0, X23
	0x03C9B278 MOV X1, X31
	0x03C9B27C MOV V8.16B, V2.16B
	0x03C9B280 BL 0x3C32E90
	0x03C9B284 CBZ X0, 0x3C9B654
	0x03C9B288 MOV X1, X31
	0x03C9B28C BL 0x3C3F58C
	0x03C9B290 LDRB W8, [X24 + 0x5AA]
	0x03C9B294 MOV V9.16B, V2.16B
	0x03C9B298 CBNZ W8, 0x3C9B2B0
	0x03C9B29C ADRP X0, 0x45F000
	0x03C9B2A0 LDR X0, [X0 + 0x4B8]
	0x03C9B2A4 BL 0x1C16CF4
	0x03C9B2A8 MOVZ W8, 0x1
	0x03C9B2AC STRB W8, [X24 + 0x5AA]
	0x03C9B2B0 LDR X8, [X25]
	0x03C9B2B4 FABS S0, S8
	0x03C9B2B8 FABS S1, S9
	0x03C9B2BC FCMP S0, S1
	0x03C9B2C0 LDR X8, [X8 + 0xB8]
	0x03C9B2C4 FMOV S2, 8
	0x03C9B2C8 FCSEL S0, S0, S1, GT
	0x03C9B2CC FMUL S0, S0, S10
	0x03C9B2D0 LDR V3, [X8]
	0x03C9B2D4 FMUL S1, S3, S2
	0x03C9B2D8 FCMP S0, S1
	0x03C9B2DC FCSEL S0, S0, S1, GT
	0x03C9B2E0 FABD S1, S9, S9
	0x03C9B2E4 FCMP S1, S0
	0x03C9B2E8 B.MI 0x3C9B2F8
	0x03C9B2EC LDR W8, [X19 + 0x1C]
	0x03C9B2F0 ORR W8, W8, 0x8
	0x03C9B2F4 STR W8, [X19 + 0x1C]
	0x03C9B2F8 LDR X0, [X26]
	0x03C9B2FC LDR W8, [X0 + 0xE0]
	0x03C9B300 CBNZ W8, 0x3C9B308
	0x03C9B304 BL 0x1C16DFC
	0x03C9B308 MOV X0, X22
	0x03C9B30C MOV X1, X31
	0x03C9B310 BL 0x3C38948
	0x03C9B314 TBZ X0, 0x0, 0x3C9B498
	0x03C9B318 CBZ X20, 0x3C9B654
	0x03C9B31C MOV X0, X20
	0x03C9B320 MOV X1, X31
	0x03C9B324 BL 0x3C32E90
	0x03C9B328 CBZ X0, 0x3C9B654
	0x03C9B32C MOV X1, X31
	0x03C9B330 BL 0x3C3F58C
	0x03C9B334 CBZ X22, 0x3C9B654
	0x03C9B338 MOV X0, X22
	0x03C9B33C MOV X1, X31
	0x03C9B340 MOV V8.16B, V0.16B
	0x03C9B344 BL 0x3C32E90
	0x03C9B348 CBZ X0, 0x3C9B654
	0x03C9B34C MOV X1, X31
	0x03C9B350 BL 0x3C3F58C
	0x03C9B354 ADRP X23, 0x73E000
	0x03C9B358 LDRB W8, [X23 + 0x5AA]
	0x03C9B35C MOV V9.16B, V0.16B
	0x03C9B360 CBNZ W8, 0x3C9B378
	0x03C9B364 ADRP X0, 0x45F000
	0x03C9B368 LDR X0, [X0 + 0x4B8]
	0x03C9B36C BL 0x1C16CF4
	0x03C9B370 MOVZ W8, 0x1
	0x03C9B374 STRB W8, [X23 + 0x5AA]
	0x03C9B378 ADRP X24, 0x45F000
	0x03C9B37C LDR X24, [X24 + 0x4B8]
	0x03C9B380 ADRP X9, 0xFFFFFFFFFCE4F000
	0x03C9B384 LDR V11, [X9 + 0x240]
	0x03C9B388 FABS S0, S8
	0x03C9B38C LDR X8, [X24]
	0x03C9B390 FABS S1, S9

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x74D000
	005 Move W8, [X19+448]
	006 Move TEMP, X8
	007 And TEMP, TEMP, 1
	008 Compare TEMP, 1
	009 JumpIfEqual {15}
	010 Move X0, 0x4A6000
	011 Move X0, [X0+1664]
	012 Call 0x1C17CF4
	013 Move W8, 1
	014 Move [X19+448], W8
	015 Move X20, 0x74D000
	016 Move X19, 0x4A6000
	017 Move X8, [X20+408]
	018 Move X19, [X19+1664]
	019 Compare X8, 0
	020 JumpIfNotEqual {26}
	021 Move X0, -51884032
	022 Add X0, X0, 1738
	023 Call 0x1C17CB8
	024 Move X8, X0
	025 Move [X20+408], X0
	026 Move W0, W31
	027 NotImplemented "Instruction BLR not yet implemented."
	028 Move X8, [X19]
	029 Move X8, [X8+184]
	030 Move [X8], W0
	031 Move X8, [X20+408]
	032 Compare X8, 0
	033 JumpIfNotEqual {39}
	034 Move X0, -51884032
	035 Add X0, X0, 1738
	036 Call 0x1C17CB8
	037 Move X8, X0
	038 Move [X20+408], X0
	039 Move W0, 1
	040 NotImplemented "Instruction BLR not yet implemented."
	041 Move X8, [X19]
	042 Move X8, [X8+184]
	043 Move [X8+4], W0
	044 Move X8, [X20+408]
	045 Compare X8, 0
	046 JumpIfNotEqual {52}
	047 Move X0, -51884032
	048 Add X0, X0, 1738
	049 Call 0x1C17CB8
	050 Move X8, X0
	051 Move [X20+408], X0
	052 Move W0, 2
	053 NotImplemented "Instruction BLR not yet implemented."
	054 Move X8, [X19]
	055 Move X8, [X8+184]
	056 Move [X8+8], W0
	057 Move X8, [X20+408]
	058 Compare X8, 0
	059 JumpIfNotEqual {65}
	060 Move X0, -51884032
	061 Add X0, X0, 1738
	062 Call 0x1C17CB8
	063 Move X8, X0
	064 Move [X20+408], X0
	065 Move W0, 3
	066 NotImplemented "Instruction BLR not yet implemented."
	067 Move X8, [X19]
	068 Move X8, [X8+184]
	069 Move [X8+12], W0
	070 Move X8, [X20+408]
	071 Compare X8, 0
	072 JumpIfNotEqual {78}
	073 Move X0, -51884032
	074 Add X0, X0, 1738
	075 Call 0x1C17CB8
	076 Move X8, X0
	077 Move [X20+408], X0
	078 Move W0, 5
	079 NotImplemented "Instruction BLR not yet implemented."
	080 Move X8, [X19]
	081 Move X8, [X8+184]
	082 Move [X8+16], W0
	083 Move X8, [X20+408]
	084 Compare X8, 0
	085 JumpIfNotEqual {91}
	086 Move X0, -51884032
	087 Add X0, X0, 1738
	088 Call 0x1C17CB8
	089 Move X8, X0
	090 Move [X20+408], X0
	091 Move W0, 6
	092 NotImplemented "Instruction BLR not yet implemented."
	093 Move X8, [X19]
	094 Move X8, [X8+184]
	095 Move [X8+20], W0
	096 Move X8, [X20+408]
	097 Compare X8, 0
	098 JumpIfNotEqual {104}
	099 Move X0, -51884032
	100 Add X0, X0, 1738
	101 Call 0x1C17CB8
	102 Move X8, X0
	103 Move [X20+408], X0
	104 Move W0, 7
	105 NotImplemented "Instruction BLR not yet implemented."
	106 Move X8, [X19]
	107 Move X8, [X8+184]
	108 Move [X8+24], W0
	109 Move X8, [X20+408]
	110 Compare X8, 0
	111 JumpIfNotEqual {117}
	112 Move X0, -51884032
	113 Add X0, X0, 1738
	114 Call 0x1C17CB8
	115 Move X8, X0
	116 Move [X20+408], X0
	117 Move W0, 8
	118 NotImplemented "Instruction BLR not yet implemented."
	119 Move X8, [X19]
	120 Move X20, [X31+16]
	121 Move X19, [X31+24]
	122 Move X8, [X8+184]
	123 Move [X8+28], W0
	124 Move X30, [X31+32]
	125 Return 

Method: System.Void get_size_Injected(out UnityEngine.Vector3 ret)

Disassembly:
	0x03C9B154 STR W8, [X19 + 0x1C]
	0x03C9B158 LDR X0, [X26]
	0x03C9B15C LDR W8, [X0 + 0xE0]
	0x03C9B160 CBNZ W8, 0x3C9B168
	0x03C9B164 BL 0x1C16DFC
	0x03C9B168 MOV X0, X23
	0x03C9B16C MOV X1, X31
	0x03C9B170 BL 0x3C38948
	0x03C9B174 TBZ X0, 0x0, 0x3C9B2F8
	0x03C9B178 CBZ X20, 0x3C9B654
	0x03C9B17C MOV X0, X20
	0x03C9B180 MOV X1, X31
	0x03C9B184 BL 0x3C32E90
	0x03C9B188 CBZ X0, 0x3C9B654
	0x03C9B18C MOV X1, X31
	0x03C9B190 BL 0x3C3F58C
	0x03C9B194 ADRP X24, 0x74C000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x74D000
	006 Move X2, [X21+456]
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -52072448
	012 Add X0, X0, 2377
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+456], X0
	016 Move X0, X20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

