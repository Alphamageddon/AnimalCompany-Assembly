Type: UnityEngine.Physics

Method: System.Void OnSceneContactModify(UnityEngine.PhysicsScene scene, System.IntPtr buffer, System.Int32 count, System.Boolean isCCD)

Disassembly:
	0x03C8B57C STR W0, [X31 + 0x8]
	0x03C8B580 LDP S0, S1, [X19]
	0x03C8B584 LDP S2, S3, [X19 + 0x8]
	0x03C8B588 LDP S4, S5, [X19 + 0x10]
	0x03C8B58C ADD X0, X31, 0x8
	0x03C8B590 MOVN W1, 0x4
	0x03C8B594 MOV V6.16B, V8.16B
	0x03C8B598 MOV W2, W31
	0x03C8B59C BL 0x3C8AAB4
	0x03C8B5A0 LDP X20, X19, [X31 + 0x20]
	0x03C8B5A4 LDP X30, X21, [X31 + 0x10]
	0x03C8B5A8 AND W0, W0, 0x1
	0x03C8B5AC LDR V8, [X31], #0x30
	0x03C8B5B0 RET
	0x03C8B5B4 SUB X31, X31, 0x30
	0x03C8B5B8 STP X30, X21, [X31 + 0x10]
	0x03C8B5BC STP X20, X19, [X31 + 0x20]
	0x03C8B5C0 ADRP X20, 0x75B000
	0x03C8B5C4 ADRP X21, 0x468000
	0x03C8B5C8 LDRB W8, [X20 + 0xD83]
	0x03C8B5CC LDR X21, [X21 + 0x5F8]
	0x03C8B5D0 MOV X19, X0
	0x03C8B5D4 TBNZ X8, 0x0, 0x3C8B5EC
	0x03C8B5D8 ADRP X0, 0x468000
	0x03C8B5DC LDR X0, [X0 + 0x5F8]
	0x03C8B5E0 BL 0x1C16CF4
	0x03C8B5E4 MOVZ W8, 0x1
	0x03C8B5E8 STRB W8, [X20 + 0xD83]
	0x03C8B5EC LDR X0, [X21]
	0x03C8B5F0 LDR W8, [X0 + 0xE0]
	0x03C8B5F4 CBNZ W8, 0x3C8B5FC
	0x03C8B5F8 BL 0x1C16DFC
	0x03C8B5FC BL 0x3C8A804
	0x03C8B600 STR W0, [X31 + 0x8]
	0x03C8B604 LDP S0, S1, [X19]
	0x03C8B608 LDP S2, S3, [X19 + 0x8]
	0x03C8B60C LDP S4, S5, [X19 + 0x10]
	0x03C8B610 MOVZ W8, 0x7F800000
	0x03C8B614 ADD X0, X31, 0x8
	0x03C8B618 MOVN W1, 0x4
	0x03C8B61C FMOV S6, W8
	0x03C8B620 MOV W2, W31
	0x03C8B624 BL 0x3C8AAB4
	0x03C8B628 LDP X20, X19, [X31 + 0x20]
	0x03C8B62C LDP X30, X21, [X31 + 0x10]
	0x03C8B630 AND W0, W0, 0x1
	0x03C8B634 ADD X31, X31, 0x30
	0x03C8B638 RET
	0x03C8B63C SUB X31, X31, 0x50
	0x03C8B640 STR D8, [X31 + 0x10]
	0x03C8B644 STR X30, [X31 + 0x18]
	0x03C8B648 STP X24, X23, [X31 + 0x20]
	0x03C8B64C STP X22, X21, [X31 + 0x30]
	0x03C8B650 STP X20, X19, [X31 + 0x40]
	0x03C8B654 ADRP X23, 0x75B000
	0x03C8B658 ADRP X24, 0x468000
	0x03C8B65C LDRB W8, [X23 + 0xD84]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X25, 0x75C000
	010 Move X24, 0x4D6000
	011 Move X23, 0x469000
	012 Move W8, [X25+3372]
	013 Move X24, [X24+2280]
	014 Move X23, [X23+1528]
	015 Move W20, W3
	016 Move W21, W2
	017 Move X22, X1
	018 Move X19, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {31}
	023 Move X0, 0x4D6000
	024 Move X0, [X0+2280]
	025 Call 0x1C17CF4
	026 Move X0, 0x469000
	027 Move X0, [X0+1528]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X25+3372], W8
	031 Move X3, [X24]
	032 Move W2, 1
	033 Move X0, X22
	034 Move W1, W21
	035 Call NativeArrayUnsafeUtility.ConvertExistingDataToNativeArray, X0, X1, X2
	036 Move X21, X0
	037 Move X0, [X23]
	038 Move X22, X1
	039 Move W8, [X0+224]
	040 Compare W8, 0
	041 JumpIfNotEqual {44}
	042 Call 0x1C17DFC
	043 Move X0, [X23]
	044 Move X8, [X0+184]
	045 Move TEMP, X20
	046 And TEMP, TEMP, 1
	047 Compare TEMP, 1
	048 JumpIfNotEqual {67}
	049 Move X8, [X8+8]
	050 Compare X8, 0
	051 JumpIfEqual {70}
	052 Move X5, [X8+24]
	053 Move X0, [X8+64]
	054 Move X4, [X8+40]
	055 And X1, X19, 0
	056 Move X2, X21
	057 Move X3, X22
	058 Move X20, [X31+48]
	059 Move X19, [X31+56]
	060 Move X22, [X31+32]
	061 Move X21, [X31+40]
	062 Move X24, [X31+16]
	063 Move X23, [X31+24]
	064 Move X30, [X31+64]
	065 Move X25, [X31+72]
	066 CallNoReturn X5
	067 Move X8, [X8]
	068 Compare X8, 0
	069 JumpIfNotEqual {52}
	070 Move X20, [X31+48]
	071 Move X19, [X31+56]
	072 Move X22, [X31+32]
	073 Move X21, [X31+40]
	074 Move X24, [X31+16]
	075 Move X23, [X31+24]
	076 Move X30, [X31+64]
	077 Move X25, [X31+72]
	078 Return 

Method: UnityEngine.Vector3 get_gravity()

Disassembly:
	0x03C8B660 LDR X24, [X24 + 0x5F8]
	0x03C8B664 MOV W19, W3
	0x03C8B668 MOV W20, W2
	0x03C8B66C MOV V8.16B, V0.16B
	0x03C8B670 MOV X21, X1
	0x03C8B674 MOV X22, X0
	0x03C8B678 TBNZ X8, 0x0, 0x3C8B690
	0x03C8B67C ADRP X0, 0x468000
	0x03C8B680 LDR X0, [X0 + 0x5F8]
	0x03C8B684 BL 0x1C16CF4
	0x03C8B688 MOVZ W8, 0x1
	0x03C8B68C STRB W8, [X23 + 0xD84]
	0x03C8B690 LDR X0, [X24]
	0x03C8B694 LDR W8, [X0 + 0xE0]
	0x03C8B698 CBNZ W8, 0x3C8B6A0
	0x03C8B69C BL 0x1C16DFC
	0x03C8B6A0 BL 0x3C8A804
	0x03C8B6A4 STR W0, [X31 + 0x8]
	0x03C8B6A8 LDP S0, S1, [X22]
	0x03C8B6AC LDP S2, S3, [X22 + 0x8]
	0x03C8B6B0 LDP S4, S5, [X22 + 0x10]
	0x03C8B6B4 ADD X0, X31, 0x8
	0x03C8B6B8 MOV X1, X21
	0x03C8B6BC MOV V6.16B, V8.16B
	0x03C8B6C0 MOV W2, W20
	0x03C8B6C4 MOV W3, W19
	0x03C8B6C8 BL 0x3C8AFA0
	0x03C8B6CC LDP X20, X19, [X31 + 0x40]
	0x03C8B6D0 LDP X22, X21, [X31 + 0x30]
	0x03C8B6D4 LDP X24, X23, [X31 + 0x20]
	0x03C8B6D8 LDR X30, [X31 + 0x18]
	0x03C8B6DC LDR V8, [X31 + 0x10]
	0x03C8B6E0 AND W0, W0, 0x1
	0x03C8B6E4 ADD X31, X31, 0x50
	0x03C8B6E8 RET

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+32], X20
	004 Move [X31+40], X19
	005 Move X20, 0x75C000
	006 Move X19, 0x469000
	007 Move W8, [X20+3373]
	008 Move X19, [X19+1528]
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x469000
	014 Move X0, [X0+1528]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X20+3373], W8
	018 Move X0, [X19]
	019 Move [X31+8], W31
	020 Move [X31], X31
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move X19, 0x75C000
	026 Move X8, [X19+3584]
	027 Compare X8, 0
	028 JumpIfNotEqual {34}
	029 Move X0, -51802112
	030 Add X0, X0, 2390
	031 Call 0x1C17CB8
	032 Move X8, X0
	033 Move [X19+3584], X0
	034 Add X0, X31, 0
	035 NotImplemented "Instruction BLR not yet implemented."
	036 Move S0, [X31]
	037 Move S1, [X31+4]
	038 Move V2, [X31+8]
	039 Move X20, [X31+32]
	040 Move X19, [X31+40]
	041 Move X30, [X31+16]
	042 Add X31, X31, 48
	043 Return X0

Method: System.Single get_sleepThreshold()

Disassembly:
	0x03C8B728 TBNZ X8, 0x0, 0x3C8B740
	0x03C8B72C ADRP X0, 0x468000
	0x03C8B730 LDR X0, [X0 + 0x5F8]
	0x03C8B734 BL 0x1C16CF4
	0x03C8B738 MOVZ W8, 0x1
	0x03C8B73C STRB W8, [X23 + 0xD85]
	0x03C8B740 LDR X0, [X22]
	0x03C8B744 LDP S14, S13, [X21]
	0x03C8B748 LDP S12, S10, [X21 + 0x8]
	0x03C8B74C LDP S11, S9, [X21 + 0x10]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, 0x75C000
	004 Move X0, [X19+3376]
	005 Compare X0, 0
	006 JumpIfNotEqual {11}
	007 Move X0, -51777536
	008 Add X0, X0, 35
	009 Call 0x1C17CB8
	010 Move [X19+3376], X0
	011 Move X30, [X31+16]
	012 Move X19, [X31+24]
	013 CallNoReturn X0

Method: System.Boolean get_queriesHitTriggers()

Disassembly:
	0x03C8B750 LDR W8, [X0 + 0xE0]
	0x03C8B754 CBNZ W8, 0x3C8B75C
	0x03C8B758 BL 0x1C16DFC
	0x03C8B75C MOV V1.16B, V13.16B
	0x03C8B760 MOV V2.16B, V12.16B
	0x03C8B764 MOV V3.16B, V10.16B
	0x03C8B768 MOV V4.16B, V11.16B
	0x03C8B76C MOV V5.16B, V9.16B
	0x03C8B770 MOV X0, X20
	0x03C8B774 MOV V6.16B, V8.16B

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, 0x75C000
	004 Move X0, [X19+3384]
	005 Compare X0, 0
	006 JumpIfNotEqual {11}
	007 Move X0, -51851264
	008 Add X0, X0, 595
	009 Call 0x1C17CB8
	010 Move [X19+3384], X0
	011 Move X30, [X31+16]
	012 Move X19, [X31+24]
	013 CallNoReturn X0

Method: UnityEngine.SimulationMode get_simulationMode()

Disassembly:
	0x03C8B778 MOV W1, W19
	0x03C8B77C LDP X20, X19, [X31 + 0x60]
	0x03C8B780 LDP X22, X21, [X31 + 0x50]
	0x03C8B784 LDP X30, X23, [X31 + 0x40]
	0x03C8B788 LDP D9, D8, [X31 + 0x30]
	0x03C8B78C LDP D11, D10, [X31 + 0x20]
	0x03C8B790 LDP D13, D12, [X31 + 0x10]
	0x03C8B794 MOV V0.16B, V14.16B
	0x03C8B798 MOV W2, W31
	0x03C8B79C LDR V14, [X31], #0x70

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, 0x75C000
	004 Move X0, [X19+3392]
	005 Compare X0, 0
	006 JumpIfNotEqual {11}
	007 Move X0, -51818496
	008 Add X0, X0, 1491
	009 Call 0x1C17CB8
	010 Move [X19+3392], X0
	011 Move X30, [X31+16]
	012 Move X19, [X31+24]
	013 CallNoReturn X0

Method: System.Void set_simulationMode(UnityEngine.SimulationMode value)

Disassembly:
	0x03C8B7A0 B 0x3C8AEC8
	0x03C8B7A4 SUB X31, X31, 0x40
	0x03C8B7A8 STR D8, [X31 + 0x10]
	0x03C8B7AC STR X30, [X31 + 0x18]
	0x03C8B7B0 STP X22, X21, [X31 + 0x20]
	0x03C8B7B4 STP X20, X19, [X31 + 0x30]
	0x03C8B7B8 ADRP X21, 0x75B000
	0x03C8B7BC ADRP X22, 0x468000
	0x03C8B7C0 LDRB W8, [X21 + 0xD86]
	0x03C8B7C4 LDR X22, [X22 + 0x5F8]
	0x03C8B7C8 MOV V8.16B, V0.16B
	0x03C8B7CC MOV X19, X1
	0x03C8B7D0 MOV X20, X0
	0x03C8B7D4 TBNZ X8, 0x0, 0x3C8B7EC
	0x03C8B7D8 ADRP X0, 0x468000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x75C000
	005 Move X1, [X20+3400]
	006 Move W19, W0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -52006912
	010 Add X0, X0, 1893
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+3400], X0
	014 Move W0, W19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Boolean get_invokeCollisionCallbacks()

Disassembly:
	0x03C8B7DC LDR X0, [X0 + 0x5F8]
	0x03C8B7E0 BL 0x1C16CF4
	0x03C8B7E4 MOVZ W8, 0x1
	0x03C8B7E8 STRB W8, [X21 + 0xD86]
	0x03C8B7EC LDR X0, [X22]
	0x03C8B7F0 LDR W8, [X0 + 0xE0]
	0x03C8B7F4 CBNZ W8, 0x3C8B7FC
	0x03C8B7F8 BL 0x1C16DFC
	0x03C8B7FC BL 0x3C8A804
	0x03C8B800 STR W0, [X31 + 0x8]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, 0x75C000
	004 Move X0, [X19+3408]
	005 Compare X0, 0
	006 JumpIfNotEqual {11}
	007 Move X0, -51916800
	008 Add X0, X0, 2551
	009 Call 0x1C17CB8
	010 Move [X19+3408], X0
	011 Move X30, [X31+16]
	012 Move X19, [X31+24]
	013 CallNoReturn X0

Method: UnityEngine.PhysicsScene get_defaultPhysicsScene()

Disassembly:
	0x03C8B804 LDP S0, S1, [X20]
	0x03C8B808 LDP S2, S3, [X20 + 0x8]
	0x03C8B80C LDP S4, S5, [X20 + 0x10]
	0x03C8B810 ADD X0, X31, 0x8
	0x03C8B814 MOVN W2, 0x4
	0x03C8B818 MOV X1, X19
	0x03C8B81C MOV V6.16B, V8.16B
	0x03C8B820 MOV W3, W31
	0x03C8B824 BL 0x3C8AFA0
	0x03C8B828 LDP X20, X19, [X31 + 0x30]
	0x03C8B82C LDP X22, X21, [X31 + 0x20]
	0x03C8B830 LDR X30, [X31 + 0x18]
	0x03C8B834 LDR V8, [X31 + 0x10]
	0x03C8B838 AND W0, W0, 0x1
	0x03C8B83C ADD X31, X31, 0x40
	0x03C8B840 RET
	0x03C8B844 STR X30, [X31 - 0x30]!
	0x03C8B848 STP X22, X21, [X31 + 0x10]
	0x03C8B84C STP X20, X19, [X31 + 0x20]
	0x03C8B850 ADRP X21, 0x75B000
	0x03C8B854 ADRP X22, 0x468000
	0x03C8B858 LDRB W8, [X21 + 0xD87]
	0x03C8B85C LDR X22, [X22 + 0x5F8]
	0x03C8B860 MOV X19, X1
	0x03C8B864 MOV X20, X0
	0x03C8B868 TBNZ X8, 0x0, 0x3C8B880
	0x03C8B86C ADRP X0, 0x468000
	0x03C8B870 LDR X0, [X0 + 0x5F8]
	0x03C8B874 BL 0x1C16CF4
	0x03C8B878 MOVZ W8, 0x1
	0x03C8B87C STRB W8, [X21 + 0xD87]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x75C000
	005 Move X19, 0x469000
	006 Move W8, [X20+3416]
	007 Move X19, [X19+1528]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x469000
	013 Move X0, [X0+1528]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+3416], W8
	017 Move X0, [X19]
	018 Move [X31+8], W31
	019 Move W8, [X0+224]
	020 Compare W8, 0
	021 JumpIfNotEqual {23}
	022 Call 0x1C17DFC
	023 Move X19, 0x75C000
	024 Move X8, [X19+3592]
	025 Compare X8, 0
	026 JumpIfNotEqual {32}
	027 Move X0, -51982336
	028 Add X0, X0, 2572
	029 Call 0x1C17CB8
	030 Move X8, X0
	031 Move [X19+3592], X0
	032 Add X0, X31, 8
	033 NotImplemented "Instruction BLR not yet implemented."
	034 Move W0, [X31+8]
	035 Move X20, [X31+16]
	036 Move X19, [X31+24]
	037 Move X30, [X31+32]
	038 Return X0

Method: System.Void IgnoreCollision(UnityEngine.Collider collider1, UnityEngine.Collider collider2, System.Boolean ignore)

Disassembly:
	0x03C8B8BC BL 0x3C8AFA0
	0x03C8B8C0 LDP X20, X19, [X31 + 0x20]
	0x03C8B8C4 LDP X22, X21, [X31 + 0x10]
	0x03C8B8C8 AND W0, W0, 0x1
	0x03C8B8CC LDR X30, [X31], #0x30
	0x03C8B8D0 RET
	0x03C8B8D4 SUB X31, X31, 0x70
	0x03C8B8D8 STP D13, D12, [X31 + 0x10]
	0x03C8B8DC STP D11, D10, [X31 + 0x20]
	0x03C8B8E0 STP D9, D8, [X31 + 0x30]
	0x03C8B8E4 STP X30, X23, [X31 + 0x40]
	0x03C8B8E8 STP X22, X21, [X31 + 0x50]
	0x03C8B8EC STP X20, X19, [X31 + 0x60]
	0x03C8B8F0 ADRP X22, 0x75B000
	0x03C8B8F4 ADRP X23, 0x468000
	0x03C8B8F8 LDRB W8, [X22 + 0xD88]
	0x03C8B8FC LDR X23, [X23 + 0x5F8]
	0x03C8B900 MOV W19, W2
	0x03C8B904 MOV W20, W1
	0x03C8B908 MOV X21, X0
	0x03C8B90C MOV V11.16B, V5.16B

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x75C000
	007 Move X3, [X22+3424]
	008 Move W20, W2
	009 Move X19, X1
	010 Move X21, X0
	011 Compare X3, 0
	012 JumpIfNotEqual {18}
	013 Move X0, -51908608
	014 Add X0, X0, 2949
	015 Call 0x1C17CB8
	016 Move X3, X0
	017 Move [X22+3424], X0
	018 And W2, W20, 1
	019 Move X0, X21
	020 Move X1, X19
	021 Move X20, [X31+32]
	022 Move X19, [X31+40]
	023 Move X22, [X31+16]
	024 Move X21, [X31+24]
	025 Move X30, [X31+48]
	026 CallNoReturn X3

Method: System.Void IgnoreCollision(UnityEngine.Collider collider1, UnityEngine.Collider collider2)

Disassembly:
	0x03C8B910 MOV V12.16B, V4.16B
	0x03C8B914 MOV V13.16B, V3.16B
	0x03C8B918 MOV V8.16B, V2.16B
	0x03C8B91C MOV V9.16B, V1.16B
	0x03C8B920 MOV V10.16B, V0.16B
	0x03C8B924 TBNZ X8, 0x0, 0x3C8B93C
	0x03C8B928 ADRP X0, 0x468000
	0x03C8B92C LDR X0, [X0 + 0x5F8]
	0x03C8B930 BL 0x1C16CF4
	0x03C8B934 MOVZ W8, 0x1
	0x03C8B938 STRB W8, [X22 + 0xD88]
	0x03C8B93C LDR X0, [X23]
	0x03C8B940 LDR W8, [X0 + 0xE0]
	0x03C8B944 CBNZ W8, 0x3C8B94C
	0x03C8B948 BL 0x1C16DFC
	0x03C8B94C BL 0x3C8A804
	0x03C8B950 ADRP X22, 0x74D000
	0x03C8B954 LDRB W8, [X22 + 0x784]
	0x03C8B958 STR W0, [X31 + 0x8]
	0x03C8B95C CBNZ W8, 0x3C8B974
	0x03C8B960 ADRP X0, 0x468000
	0x03C8B964 LDR X0, [X0 + 0x5A8]
	0x03C8B968 BL 0x1C16CF4
	0x03C8B96C MOVZ W8, 0x1
	0x03C8B970 STRB W8, [X22 + 0x784]
	0x03C8B974 ADRP X8, 0x468000
	0x03C8B978 LDR X8, [X8 + 0x5A8]
	0x03C8B97C FSUB S13, S13, S10
	0x03C8B980 FSUB S12, S12, S9
	0x03C8B984 FSUB S11, S11, S8
	0x03C8B988 LDR X0, [X8]
	0x03C8B98C LDR W8, [X0 + 0xE0]
	0x03C8B990 CBNZ W8, 0x3C8B998
	0x03C8B994 BL 0x1C16DFC

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x75C000
	007 Move X22, 0x469000
	008 Move W8, [X21+3432]
	009 Move X22, [X22+1528]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x469000
	017 Move X0, [X0+1528]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3432], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move X21, 0x75C000
	027 Move X3, [X21+3424]
	028 Compare X3, 0
	029 JumpIfNotEqual {35}
	030 Move X0, -51908608
	031 Add X0, X0, 2949
	032 Call 0x1C17CB8
	033 Move X3, X0
	034 Move [X21+3424], X0
	035 Move X0, X20
	036 Move X1, X19
	037 Move X20, [X31+32]
	038 Move X19, [X31+40]
	039 Move X22, [X31+16]
	040 Move X21, [X31+24]
	041 Move W2, 1
	042 Move X30, [X31+48]
	043 CallNoReturn X3

Method: System.Boolean GetIgnoreCollision(UnityEngine.Collider collider1, UnityEngine.Collider collider2)

Disassembly:
	0x03C8B998 FMUL S0, S13, S13
	0x03C8B99C FMUL S1, S12, S12
	0x03C8B9A0 FADD S0, S0, S1
	0x03C8B9A4 FMUL S1, S11, S11
	0x03C8B9A8 FADD S0, S1, S0
	0x03C8B9AC FSQRT S6, S0
	0x03C8B9B0 ADD X0, X31, 0x8
	0x03C8B9B4 MOV V0.16B, V10.16B
	0x03C8B9B8 MOV V1.16B, V9.16B
	0x03C8B9BC MOV V2.16B, V8.16B
	0x03C8B9C0 MOV V3.16B, V13.16B
	0x03C8B9C4 MOV V4.16B, V12.16B
	0x03C8B9C8 MOV V5.16B, V11.16B
	0x03C8B9CC MOV X1, X21
	0x03C8B9D0 MOV W2, W20
	0x03C8B9D4 MOV W3, W19
	0x03C8B9D8 BL 0x3C8AFA0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x75C000
	006 Move X2, [X21+3440]
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51998720
	012 Add X0, X0, 2744
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+3440], X0
	016 Move X0, X20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Boolean Raycast(UnityEngine.Vector3 origin, UnityEngine.Vector3 direction, System.Single maxDistance, System.Int32 layerMask, UnityEngine.QueryTriggerInteraction queryTriggerInteraction)

Disassembly:
	0x03C8B9DC LDP X20, X19, [X31 + 0x60]
	0x03C8B9E0 LDP X22, X21, [X31 + 0x50]
	0x03C8B9E4 LDP X30, X23, [X31 + 0x40]
	0x03C8B9E8 LDP D9, D8, [X31 + 0x30]
	0x03C8B9EC LDP D11, D10, [X31 + 0x20]
	0x03C8B9F0 LDP D13, D12, [X31 + 0x10]
	0x03C8B9F4 AND W0, W0, 0x1
	0x03C8B9F8 ADD X31, X31, 0x70
	0x03C8B9FC RET
	0x03C8BA00 STP D13, D12, [X31 - 0x60]!
	0x03C8BA04 STP D11, D10, [X31 + 0x10]
	0x03C8BA08 STP D9, D8, [X31 + 0x20]
	0x03C8BA0C STR X30, [X31 + 0x30]
	0x03C8BA10 STP X22, X21, [X31 + 0x40]
	0x03C8BA14 STP X20, X19, [X31 + 0x50]
	0x03C8BA18 ADRP X22, 0x75B000
	0x03C8BA1C ADRP X21, 0x468000
	0x03C8BA20 LDRB W8, [X22 + 0xD89]
	0x03C8BA24 LDR X21, [X21 + 0x5F8]
	0x03C8BA28 MOV W19, W1
	0x03C8BA2C MOV X20, X0
	0x03C8BA30 MOV V8.16B, V5.16B
	0x03C8BA34 MOV V9.16B, V4.16B
	0x03C8BA38 MOV V10.16B, V3.16B
	0x03C8BA3C MOV V11.16B, V2.16B
	0x03C8BA40 MOV V12.16B, V1.16B
	0x03C8BA44 MOV V13.16B, V0.16B
	0x03C8BA48 TBNZ X8, 0x0, 0x3C8BA60
	0x03C8BA4C ADRP X0, 0x468000
	0x03C8BA50 LDR X0, [X0 + 0x5F8]
	0x03C8BA54 BL 0x1C16CF4
	0x03C8BA58 MOVZ W8, 0x1
	0x03C8BA5C STRB W8, [X22 + 0xD89]
	0x03C8BA60 LDR X0, [X21]
	0x03C8BA64 LDR W8, [X0 + 0xE0]
	0x03C8BA68 CBNZ W8, 0x3C8BA70
	0x03C8BA6C BL 0x1C16DFC
	0x03C8BA70 MOV V2.16B, V11.16B
	0x03C8BA74 MOV V3.16B, V10.16B
	0x03C8BA78 MOV V4.16B, V9.16B
	0x03C8BA7C MOV V5.16B, V8.16B
	0x03C8BA80 MOV X0, X20
	0x03C8BA84 MOV W1, W19
	0x03C8BA88 LDP X20, X19, [X31 + 0x50]
	0x03C8BA8C LDP X22, X21, [X31 + 0x40]
	0x03C8BA90 LDR X30, [X31 + 0x30]
	0x03C8BA94 LDP D9, D8, [X31 + 0x20]
	0x03C8BA98 LDP D11, D10, [X31 + 0x10]
	0x03C8BA9C MOV V0.16B, V13.16B
	0x03C8BAA0 MOV V1.16B, V12.16B
	0x03C8BAA4 MOV W2, W31
	0x03C8BAA8 LDP D13, D12, [X31], #0x60
	0x03C8BAAC B 0x3C8B8D4
	0x03C8BAB0 STP D15, D14, [X31 - 0x70]!

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], D14
	003 Move [X31+24], D13
	004 Move [X31+32], D12
	005 Move [X31+40], D11
	006 Move [X31+48], D10
	007 Move [X31+56], D9
	008 Move [X31+64], D8
	009 Move [X31+72], X30
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X22, 0x75C000
	015 Move X21, 0x469000
	016 Move W8, [X22+3448]
	017 Move X21, [X21+1528]
	018 Move W19, W1
	019 Move W20, W0
	020 Move V8, V6
	021 Move V9, V5
	022 Move V10, V4
	023 Move V11, V3
	024 Move V12, V2
	025 Move V13, V1
	026 Move V14, V0
	027 Move TEMP, X8
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfEqual {36}
	031 Move X0, 0x469000
	032 Move X0, [X0+1528]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X22+3448], W8
	036 Move X0, [X21]
	037 Move W8, [X0+224]
	038 Compare W8, 0
	039 JumpIfNotEqual {41}
	040 Call 0x1C17DFC
	041 Call Physics.get_defaultPhysicsScene
	042 Move [X31+8], W0
	043 Add X0, X31, 8
	044 Move V0, V14
	045 Move V1, V13
	046 Move V2, V12
	047 Move V3, V11
	048 Move V4, V10
	049 Move V5, V9
	050 Move V6, V8
	051 Move W1, W20
	052 Move W2, W19
	053 Call PhysicsScene.Raycast, X0, X1, X2, V0, X3, X4
	054 Move X20, [X31+96]
	055 Move X19, [X31+104]
	056 Move X22, [X31+80]
	057 Move X21, [X31+88]
	058 Move X30, [X31+72]
	059 Move D9, [X31+56]
	060 Move D8, [X31+64]
	061 Move D11, [X31+40]
	062 Move D10, [X31+48]
	063 Move D13, [X31+24]
	064 Move D12, [X31+32]
	065 Move V14, [X31+16]
	066 And W0, W0, 1
	067 Add X31, X31, 112
	068 Return X0

Method: System.Boolean Raycast(UnityEngine.Vector3 origin, UnityEngine.Vector3 direction, System.Single maxDistance, System.Int32 layerMask)

Disassembly:
	0x03C8BC84 MOV X21, X1
	0x03C8BC88 TBNZ X8, 0x0, 0x3C8BCA0
	0x03C8BC8C ADRP X0, 0x468000
	0x03C8BC90 LDR X0, [X0 + 0x5F8]
	0x03C8BC94 BL 0x1C16CF4
	0x03C8BC98 MOVZ W8, 0x1
	0x03C8BC9C STRB W8, [X22 + 0xD8C]
	0x03C8BCA0 LDR X0, [X23]
	0x03C8BCA4 LDR W8, [X0 + 0xE0]
	0x03C8BCA8 CBNZ W8, 0x3C8BCB0
	0x03C8BCAC BL 0x1C16DFC
	0x03C8BCB0 ADRP X22, 0x75B000
	0x03C8BCB4 LDR X8, [X22 + 0xE10]
	0x03C8BCB8 CBNZ X8, 0x3C8BCD0
	0x03C8BCBC ADRP X0, 0xFFFFFFFFFCE78000
	0x03C8BCC0 ADD X0, X0, 0x9E5
	0x03C8BCC4 BL 0x1C16CB8
	0x03C8BCC8 MOV X8, X0
	0x03C8BCCC STR X0, [X22 + 0xE10]
	0x03C8BCD0 ADD X0, X31, 0x8
	0x03C8BCD4 MOV X1, X21
	0x03C8BCD8 MOV V0.16B, V8.16B
	0x03C8BCDC MOV W2, W20
	0x03C8BCE0 MOV W3, W19
	0x03C8BCE4 BLR X8
	0x03C8BCE8 LDP X20, X19, [X31 + 0x30]
	0x03C8BCEC LDP X22, X21, [X31 + 0x20]
	0x03C8BCF0 LDP X30, X23, [X31 + 0x10]
	0x03C8BCF4 LDR V8, [X31], #0x40
	0x03C8BCF8 RET
	0x03C8BCFC STR D8, [X31 - 0x40]!
	0x03C8BD00 STP X30, X23, [X31 + 0x10]
	0x03C8BD04 STP X22, X21, [X31 + 0x20]
	0x03C8BD08 STP X20, X19, [X31 + 0x30]
	0x03C8BD0C ADRP X23, 0x75B000
	0x03C8BD10 LDR X4, [X23 + 0xE10]
	0x03C8BD14 MOV W19, W3
	0x03C8BD18 MOV W20, W2
	0x03C8BD1C MOV V8.16B, V0.16B
	0x03C8BD20 MOV X21, X1
	0x03C8BD24 MOV X22, X0
	0x03C8BD28 CBNZ X4, 0x3C8BD40
	0x03C8BD2C ADRP X0, 0xFFFFFFFFFCE78000
	0x03C8BD30 ADD X0, X0, 0x9E5
	0x03C8BD34 BL 0x1C16CB8
	0x03C8BD38 MOV X4, X0
	0x03C8BD3C STR X0, [X23 + 0xE10]
	0x03C8BD40 MOV X0, X22
	0x03C8BD44 MOV X1, X21

ISIL:
	001 Move [X31-96], D14
	002 Move [X31+16], D13
	003 Move [X31+24], D12
	004 Move [X31+32], D11
	005 Move [X31+40], D10
	006 Move [X31+48], D9
	007 Move [X31+56], D8
	008 Move [X31+64], X30
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X21, 0x75C000
	013 Move X20, 0x469000
	014 Move W8, [X21+3449]
	015 Move X20, [X20+1528]
	016 Move W19, W0
	017 Move V8, V6
	018 Move V9, V5
	019 Move V10, V4
	020 Move V11, V3
	021 Move V12, V2
	022 Move V13, V1
	023 Move V14, V0
	024 Move TEMP, X8
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {33}
	028 Move X0, 0x469000
	029 Move X0, [X0+1528]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X21+3449], W8
	033 Move X0, [X20]
	034 Move W8, [X0+224]
	035 Compare W8, 0
	036 JumpIfNotEqual {38}
	037 Call 0x1C17DFC
	038 Call Physics.get_defaultPhysicsScene
	039 Move [X31+8], W0
	040 Add X0, X31, 8
	041 Move V0, V14
	042 Move V1, V13
	043 Move V2, V12
	044 Move V3, V11
	045 Move V4, V10
	046 Move V5, V9
	047 Move V6, V8
	048 Move W1, W19
	049 Move W2, W31
	050 Call PhysicsScene.Raycast, X0, X1, X2, V0, X3, X4
	051 Move X20, [X31+80]
	052 Move X19, [X31+88]
	053 Move X30, [X31+64]
	054 Move X21, [X31+72]
	055 Move D9, [X31+48]
	056 Move D8, [X31+56]
	057 Move D11, [X31+32]
	058 Move D10, [X31+40]
	059 Move D13, [X31+16]
	060 Move D12, [X31+24]
	061 And W0, W0, 1
	062 Move V14, [X31+96]
	063 Return X0

Method: System.Boolean Raycast(UnityEngine.Vector3 origin, UnityEngine.Vector3 direction, System.Single maxDistance)

Disassembly:
	0x03C8BD48 MOV W2, W20
	0x03C8BD4C MOV W3, W19
	0x03C8BD50 LDP X20, X19, [X31 + 0x30]
	0x03C8BD54 LDP X22, X21, [X31 + 0x20]
	0x03C8BD58 LDP X30, X23, [X31 + 0x10]
	0x03C8BD5C MOV V0.16B, V8.16B
	0x03C8BD60 LDR V8, [X31], #0x40
	0x03C8BD64 BR X4
	0x03C8BD68 SUB X31, X31, 0x90
	0x03C8BD6C STP D15, D14, [X31 + 0x20]
	0x03C8BD70 STP D13, D12, [X31 + 0x30]
	0x03C8BD74 STP D11, D10, [X31 + 0x40]
	0x03C8BD78 STP D9, D8, [X31 + 0x50]
	0x03C8BD7C STR X30, [X31 + 0x60]
	0x03C8BD80 STP X22, X21, [X31 + 0x70]
	0x03C8BD84 STP X20, X19, [X31 + 0x80]
	0x03C8BD88 ADRP X21, 0x75B000
	0x03C8BD8C LDRB W8, [X21 + 0xD8D]
	0x03C8BD90 MOV W19, W1
	0x03C8BD94 MOV W20, W0
	0x03C8BD98 MOV V15.16B, V6.16B
	0x03C8BD9C MOV V12.16B, V5.16B
	0x03C8BDA0 MOV V13.16B, V4.16B
	0x03C8BDA4 MOV V14.16B, V3.16B
	0x03C8BDA8 MOV V9.16B, V2.16B
	0x03C8BDAC MOV V10.16B, V1.16B
	0x03C8BDB0 MOV V11.16B, V0.16B
	0x03C8BDB4 TBNZ X8, 0x0, 0x3C8BDD8
	0x03C8BDB8 ADRP X0, 0x468000
	0x03C8BDBC LDR X0, [X0 + 0x5F8]
	0x03C8BDC0 BL 0x1C16CF4
	0x03C8BDC4 ADRP X0, 0x46E000
	0x03C8BDC8 LDR X0, [X0 + 0x488]
	0x03C8BDCC BL 0x1C16CF4
	0x03C8BDD0 MOVZ W8, 0x1
	0x03C8BDD4 STRB W8, [X21 + 0xD8D]
	0x03C8BDD8 ADRP X21, 0x74D000
	0x03C8BDDC LDRB W8, [X21 + 0x784]
	0x03C8BDE0 CBNZ W8, 0x3C8BDF8
	0x03C8BDE4 ADRP X0, 0x468000
	0x03C8BDE8 LDR X0, [X0 + 0x5A8]
	0x03C8BDEC BL 0x1C16CF4
	0x03C8BDF0 MOVZ W8, 0x1
	0x03C8BDF4 STRB W8, [X21 + 0x784]
	0x03C8BDF8 ADRP X21, 0x468000
	0x03C8BDFC LDR X21, [X21 + 0x5A8]
	0x03C8BE00 LDR X0, [X21]
	0x03C8BE04 LDR W8, [X0 + 0xE0]
	0x03C8BE08 CBNZ W8, 0x3C8BE10
	0x03C8BE0C BL 0x1C16DFC

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+16], D14
	003 Move [X31+24], D13
	004 Move [X31+32], D12
	005 Move [X31+40], D11
	006 Move [X31+48], D10
	007 Move [X31+56], D9
	008 Move [X31+64], D8
	009 Move [X31+72], X30
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X20, 0x75C000
	013 Move X19, 0x469000
	014 Move W8, [X20+3450]
	015 Move X19, [X19+1528]
	016 Move V8, V6
	017 Move V9, V5
	018 Move V10, V4
	019 Move V11, V3
	020 Move V12, V2
	021 Move V13, V1
	022 Move V14, V0
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {32}
	027 Move X0, 0x469000
	028 Move X0, [X0+1528]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X20+3450], W8
	032 Move X0, [X19]
	033 Move W8, [X0+224]
	034 Compare W8, 0
	035 JumpIfNotEqual {37}
	036 Call 0x1C17DFC
	037 Call Physics.get_defaultPhysicsScene
	038 Move [X31+8], W0
	039 Add X0, X31, 8
	040 Move TEMP, 4
	041 Not TEMP
	042 Move W1, TEMP
	043 Move V0, V14
	044 Move V1, V13
	045 Move V2, V12
	046 Move V3, V11
	047 Move V4, V10
	048 Move V5, V9
	049 Move V6, V8
	050 Move W2, W31
	051 Call PhysicsScene.Raycast, X0, X1, X2, V0, X3, X4
	052 Move X20, [X31+80]
	053 Move X19, [X31+88]
	054 Move X30, [X31+72]
	055 Move D9, [X31+56]
	056 Move D8, [X31+64]
	057 Move D11, [X31+40]
	058 Move D10, [X31+48]
	059 Move D13, [X31+24]
	060 Move D12, [X31+32]
	061 Move V14, [X31+16]
	062 And W0, W0, 1
	063 Add X31, X31, 96
	064 Return X0

Method: System.Boolean Raycast(UnityEngine.Vector3 origin, UnityEngine.Vector3 direction)

Disassembly:
	0x03C8BE10 FMUL S0, S14, S14
	0x03C8BE14 FMUL S1, S13, S13
	0x03C8BE18 FMUL S2, S12, S12
	0x03C8BE1C FADD S0, S0, S1
	0x03C8BE20 FADD S0, S2, S0
	0x03C8BE24 MOVZ W8, 0x1
	0x03C8BE28 FSQRT S8, S0
	0x03C8BE2C FMOV S0, W8
	0x03C8BE30 FCMP S8, S0
	0x03C8BE34 B.LE 0x3C8BEB8
	0x03C8BE38 ADRP X22, 0x74D000
	0x03C8BE3C LDRB W8, [X22 + 0x785]
	0x03C8BE40 STR S10, [X31 + 0x6C]
	0x03C8BE44 MOV V10.16B, V9.16B
	0x03C8BE48 MOV V9.16B, V15.16B
	0x03C8BE4C CBNZ W8, 0x3C8BE64
	0x03C8BE50 ADRP X0, 0x468000
	0x03C8BE54 LDR X0, [X0 + 0x5A8]
	0x03C8BE58 BL 0x1C16CF4
	0x03C8BE5C MOVZ W8, 0x1
	0x03C8BE60 STRB W8, [X22 + 0x785]
	0x03C8BE64 LDR X0, [X21]
	0x03C8BE68 FDIV S15, S14, S8
	0x03C8BE6C FDIV S13, S13, S8
	0x03C8BE70 FDIV S14, S12, S8
	0x03C8BE74 LDR W8, [X0 + 0xE0]
	0x03C8BE78 CBNZ W8, 0x3C8BE80
	0x03C8BE7C BL 0x1C16DFC
	0x03C8BE80 FMUL S0, S15, S15
	0x03C8BE84 FMUL S1, S13, S13
	0x03C8BE88 ADRP X8, 0xFFFFFFFFFCE5F000
	0x03C8BE8C FADD S0, S0, S1
	0x03C8BE90 LDR V1, [X8 + 0x17C]
	0x03C8BE94 FMUL S2, S14, S14
	0x03C8BE98 FADD S0, S2, S0
	0x03C8BE9C FSQRT S0, S0
	0x03C8BEA0 FCMP S0, S1
	0x03C8BEA4 B.LE 0x3C8BEEC
	0x03C8BEA8 FDIV S12, S15, S0
	0x03C8BEAC FDIV S13, S13, S0
	0x03C8BEB0 FDIV S14, S14, S0
	0x03C8BEB4 B 0x3C8BF24
	0x03C8BEB8 ADRP X8, 0x46E000
	0x03C8BEBC LDR X8, [X8 + 0x488]
	0x03C8BEC0 LDP X20, X19, [X31 + 0x80]
	0x03C8BEC4 LDP X22, X21, [X31 + 0x70]

ISIL:
	001 Move [X31-80], D13
	002 Move [X31-72], D12
	003 Move [X31+16], D11
	004 Move [X31+24], D10
	005 Move [X31+32], D9
	006 Move [X31+40], D8
	007 Move [X31+48], X30
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X20, 0x75C000
	011 Move X19, 0x469000
	012 Move W8, [X20+3451]
	013 Move X19, [X19+1528]
	014 Move V8, V5
	015 Move V9, V4
	016 Move V10, V3
	017 Move V11, V2
	018 Move V12, V1
	019 Move V13, V0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {29}
	024 Move X0, 0x469000
	025 Move X0, [X0+1528]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X20+3451], W8
	029 Move X0, [X19]
	030 Move W8, [X0+224]
	031 Compare W8, 0
	032 JumpIfNotEqual {34}
	033 Call 0x1C17DFC
	034 Call Physics.get_defaultPhysicsScene
	035 Move W8, 0x7F800000
	036 Move [X31+56], W0
	037 Add X0, X31, 56
	038 Move TEMP, 4
	039 Not TEMP
	040 Move W1, TEMP
	041 Move S6, W8
	042 Move V0, V13
	043 Move V1, V12
	044 Move V2, V11
	045 Move V3, V10
	046 Move V4, V9
	047 Move V5, V8
	048 Move W2, W31
	049 Call PhysicsScene.Raycast, X0, X1, X2, V0, X3, X4
	050 Move X20, [X31+64]
	051 Move X19, [X31+72]
	052 Move X30, [X31+48]
	053 Move D9, [X31+32]
	054 Move D8, [X31+40]
	055 Move D11, [X31+16]
	056 Move D10, [X31+24]
	057 And W0, W0, 1
	058 Move D13, [X31+80]
	059 Move D12, [X31+88]
	060 Return X0

Method: System.Boolean Raycast(UnityEngine.Vector3 origin, UnityEngine.Vector3 direction, out UnityEngine.RaycastHit hitInfo, System.Single maxDistance, System.Int32 layerMask, UnityEngine.QueryTriggerInteraction queryTriggerInteraction)

Disassembly:
	0x03C8BEC8 LDR X30, [X31 + 0x60]
	0x03C8BECC LDR X0, [X8]
	0x03C8BED0 LDP D9, D8, [X31 + 0x50]
	0x03C8BED4 LDP D11, D10, [X31 + 0x40]
	0x03C8BED8 LDP D13, D12, [X31 + 0x30]
	0x03C8BEDC LDP D15, D14, [X31 + 0x20]
	0x03C8BEE0 MOV W1, W31
	0x03C8BEE4 ADD X31, X31, 0x90
	0x03C8BEE8 B 0x1C16D6C
	0x03C8BEEC ADRP X21, 0x74D000
	0x03C8BEF0 LDRB W8, [X21 + 0x783]
	0x03C8BEF4 CBNZ W8, 0x3C8BF0C
	0x03C8BEF8 ADRP X0, 0x468000
	0x03C8BEFC LDR X0, [X0 + 0x5A0]
	0x03C8BF00 BL 0x1C16CF4
	0x03C8BF04 MOVZ W8, 0x1
	0x03C8BF08 STRB W8, [X21 + 0x783]
	0x03C8BF0C ADRP X8, 0x468000
	0x03C8BF10 LDR X8, [X8 + 0x5A0]
	0x03C8BF14 LDR X8, [X8]
	0x03C8BF18 LDR X8, [X8 + 0xB8]
	0x03C8BF1C LDP S12, S13, [X8]
	0x03C8BF20 LDR V14, [X8 + 0x8]
	0x03C8BF24 ADRP X8, 0x468000
	0x03C8BF28 LDR X8, [X8 + 0x5F8]
	0x03C8BF2C LDR X0, [X8]
	0x03C8BF30 LDR W8, [X0 + 0xE0]
	0x03C8BF34 CBNZ W8, 0x3C8BF3C
	0x03C8BF38 BL 0x1C16DFC
	0x03C8BF3C BL 0x3C8A804
	0x03C8BF40 LDR V0, [X31 + 0x6C]
	0x03C8BF44 AND X0, X0, 0x0
	0x03C8BF48 ADD X1, X31, 0x8
	0x03C8BF4C MOV W2, W20
	0x03C8BF50 STP S11, S0, [X31 + 0x8]
	0x03C8BF54 MOV V0.16B, V9.16B
	0x03C8BF58 MOV W3, W19
	0x03C8BF5C STP S10, S12, [X31 + 0x10]
	0x03C8BF60 STP S13, S14, [X31 + 0x18]
	0x03C8BF64 BL 0x3C8BC54
	0x03C8BF68 LDP X20, X19, [X31 + 0x80]
	0x03C8BF6C LDP X22, X21, [X31 + 0x70]
	0x03C8BF70 LDR X30, [X31 + 0x60]
	0x03C8BF74 LDP D9, D8, [X31 + 0x50]
	0x03C8BF78 LDP D11, D10, [X31 + 0x40]
	0x03C8BF7C LDP D13, D12, [X31 + 0x30]
	0x03C8BF80 LDP D15, D14, [X31 + 0x20]
	0x03C8BF84 ADD X31, X31, 0x90
	0x03C8BF88 RET
	0x03C8BF8C STR D14, [X31 - 0x60]!
	0x03C8BF90 STP D13, D12, [X31 + 0x10]
	0x03C8BF94 STP D11, D10, [X31 + 0x20]
	0x03C8BF98 STP D9, D8, [X31 + 0x30]
	0x03C8BF9C STP X30, X21, [X31 + 0x40]

ISIL:
	001 Move [X31-112], D14
	002 Move [X31+16], D13
	003 Move [X31+24], D12
	004 Move [X31+32], D11
	005 Move [X31+40], D10
	006 Move [X31+48], D9
	007 Move [X31+56], D8
	008 Move [X31+64], X30
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X23, 0x75C000
	015 Move X22, 0x469000
	016 Move W8, [X23+3452]
	017 Move X22, [X22+1528]
	018 Move W19, W2
	019 Move W20, W1
	020 Move V8, V6
	021 Move X21, X0
	022 Move V9, V5
	023 Move V10, V4
	024 Move V11, V3
	025 Move V12, V2
	026 Move V13, V1
	027 Move V14, V0
	028 Move TEMP, X8
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfEqual {37}
	032 Move X0, 0x469000
	033 Move X0, [X0+1528]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X23+3452], W8
	037 Move X0, [X22]
	038 Move W8, [X0+224]
	039 Compare W8, 0
	040 JumpIfNotEqual {42}
	041 Call 0x1C17DFC
	042 Call Physics.get_defaultPhysicsScene
	043 Move [X31+8], W0
	044 Add X0, X31, 8
	045 Move V0, V14
	046 Move V1, V13
	047 Move V2, V12
	048 Move V3, V11
	049 Move V4, V10
	050 Move V5, V9
	051 Move X1, X21
	052 Move V6, V8
	053 Move W2, W20
	054 Move W3, W19
	055 Call PhysicsScene.Raycast, X0, X1, X2, X3, V0, X4, X5
	056 Move X20, [X31+96]
	057 Move X19, [X31+104]
	058 Move X22, [X31+80]
	059 Move X21, [X31+88]
	060 Move X30, [X31+64]
	061 Move X23, [X31+72]
	062 Move D9, [X31+48]
	063 Move D8, [X31+56]
	064 Move D11, [X31+32]
	065 Move D10, [X31+40]
	066 Move D13, [X31+16]
	067 Move D12, [X31+24]
	068 And W0, W0, 1
	069 Move V14, [X31+112]
	070 Return X0

Method: System.Boolean Raycast(UnityEngine.Vector3 origin, UnityEngine.Vector3 direction, out UnityEngine.RaycastHit hitInfo, System.Single maxDistance, System.Int32 layerMask)

Disassembly:
	0x03C8C18C STR D14, [X31 - 0x70]!
	0x03C8C190 STP D13, D12, [X31 + 0x10]
	0x03C8C194 STP D11, D10, [X31 + 0x20]
	0x03C8C198 STP D9, D8, [X31 + 0x30]
	0x03C8C19C STP X30, X23, [X31 + 0x40]
	0x03C8C1A0 STP X22, X21, [X31 + 0x50]
	0x03C8C1A4 STP X20, X19, [X31 + 0x60]
	0x03C8C1A8 ADRP X23, 0x75A000
	0x03C8C1AC ADRP X22, 0x467000
	0x03C8C1B0 LDRB W8, [X23 + 0xD91]
	0x03C8C1B4 LDR X22, [X22 + 0x5F8]
	0x03C8C1B8 MOV W19, W2
	0x03C8C1BC MOV W20, W1
	0x03C8C1C0 MOV V8.16B, V0.16B
	0x03C8C1C4 MOV X21, X0
	0x03C8C1C8 TBNZ X8, 0x0, 0x3C8C1E0
	0x03C8C1CC ADRP X0, 0x467000
	0x03C8C1D0 LDR X0, [X0 + 0x5F8]
	0x03C8C1D4 BL 0x1C16CF4
	0x03C8C1D8 MOVZ W8, 0x1
	0x03C8C1DC STRB W8, [X23 + 0xD91]
	0x03C8C1E0 LDR X0, [X22]
	0x03C8C1E4 LDP S14, S13, [X21]
	0x03C8C1E8 LDP S12, S10, [X21 + 0x8]
	0x03C8C1EC LDP S11, S9, [X21 + 0x10]
	0x03C8C1F0 LDR W8, [X0 + 0xE0]
	0x03C8C1F4 CBNZ W8, 0x3C8C1FC
	0x03C8C1F8 BL 0x1C16DFC
	0x03C8C1FC MOV V1.16B, V13.16B
	0x03C8C200 MOV V2.16B, V12.16B
	0x03C8C204 MOV V3.16B, V10.16B
	0x03C8C208 MOV V4.16B, V11.16B
	0x03C8C20C MOV V5.16B, V9.16B
	0x03C8C210 MOV V6.16B, V8.16B
	0x03C8C214 MOV W0, W20
	0x03C8C218 MOV W1, W19
	0x03C8C21C LDP X20, X19, [X31 + 0x60]
	0x03C8C220 LDP X22, X21, [X31 + 0x50]
	0x03C8C224 LDP X30, X23, [X31 + 0x40]
	0x03C8C228 LDP D9, D8, [X31 + 0x30]
	0x03C8C22C LDP D11, D10, [X31 + 0x20]
	0x03C8C230 LDP D13, D12, [X31 + 0x10]
	0x03C8C234 MOV V0.16B, V14.16B
	0x03C8C238 LDR V14, [X31], #0x70
	0x03C8C23C B 0x3C8BD68
	0x03C8C240 STR D14, [X31 - 0x60]!
	0x03C8C244 STP D13, D12, [X31 + 0x8]
	0x03C8C248 STP D11, D10, [X31 + 0x18]
	0x03C8C24C STP D9, D8, [X31 + 0x28]
	0x03C8C250 STR X30, [X31 + 0x38]
	0x03C8C254 STP X22, X21, [X31 + 0x40]
	0x03C8C258 STP X20, X19, [X31 + 0x50]
	0x03C8C25C ADRP X22, 0x75A000
	0x03C8C260 ADRP X21, 0x467000
	0x03C8C264 LDRB W8, [X22 + 0xD92]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], D14
	003 Move [X31+24], D13
	004 Move [X31+32], D12
	005 Move [X31+40], D11
	006 Move [X31+48], D10
	007 Move [X31+56], D9
	008 Move [X31+64], D8
	009 Move [X31+72], X30
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X22, 0x75B000
	015 Move X21, 0x468000
	016 Move W8, [X22+3453]
	017 Move X21, [X21+1528]
	018 Move W19, W1
	019 Move V8, V6
	020 Move X20, X0
	021 Move V9, V5
	022 Move V10, V4
	023 Move V11, V3
	024 Move V12, V2
	025 Move V13, V1
	026 Move V14, V0
	027 Move TEMP, X8
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfEqual {36}
	031 Move X0, 0x468000
	032 Move X0, [X0+1528]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X22+3453], W8
	036 Move X0, [X21]
	037 Move W8, [X0+224]
	038 Compare W8, 0
	039 JumpIfNotEqual {41}
	040 Call 0x1C17DFC
	041 Call Physics.get_defaultPhysicsScene
	042 Move [X31+8], W0
	043 Add X0, X31, 8
	044 Move V0, V14
	045 Move V1, V13
	046 Move V2, V12
	047 Move V3, V11
	048 Move V4, V10
	049 Move V5, V9
	050 Move X1, X20
	051 Move V6, V8
	052 Move W2, W19
	053 Move W3, W31
	054 Call PhysicsScene.Raycast, X0, X1, X2, X3, V0, X4, X5
	055 Move X20, [X31+96]
	056 Move X19, [X31+104]
	057 Move X22, [X31+80]
	058 Move X21, [X31+88]
	059 Move X30, [X31+72]
	060 Move D9, [X31+56]
	061 Move D8, [X31+64]
	062 Move D11, [X31+40]
	063 Move D10, [X31+48]
	064 Move D13, [X31+24]
	065 Move D12, [X31+32]
	066 Move V14, [X31+16]
	067 And W0, W0, 1
	068 Add X31, X31, 112
	069 Return X0

Method: System.Boolean Raycast(UnityEngine.Vector3 origin, UnityEngine.Vector3 direction, out UnityEngine.RaycastHit hitInfo, System.Single maxDistance)

Disassembly:
	0x03C8C268 LDR X21, [X21 + 0x5F8]
	0x03C8C26C MOV W19, W1
	0x03C8C270 MOV V8.16B, V0.16B
	0x03C8C274 MOV X20, X0
	0x03C8C278 TBNZ X8, 0x0, 0x3C8C290
	0x03C8C27C ADRP X0, 0x467000
	0x03C8C280 LDR X0, [X0 + 0x5F8]
	0x03C8C284 BL 0x1C16CF4
	0x03C8C288 MOVZ W8, 0x1
	0x03C8C28C STRB W8, [X22 + 0xD92]
	0x03C8C290 LDR X0, [X21]
	0x03C8C294 LDP S14, S13, [X20]
	0x03C8C298 LDP S12, S10, [X20 + 0x8]
	0x03C8C29C LDP S11, S9, [X20 + 0x10]
	0x03C8C2A0 LDR W8, [X0 + 0xE0]
	0x03C8C2A4 CBNZ W8, 0x3C8C2AC
	0x03C8C2A8 BL 0x1C16DFC
	0x03C8C2AC MOV V1.16B, V13.16B
	0x03C8C2B0 MOV V2.16B, V12.16B
	0x03C8C2B4 MOV V3.16B, V10.16B
	0x03C8C2B8 MOV V4.16B, V11.16B
	0x03C8C2BC MOV V5.16B, V9.16B
	0x03C8C2C0 MOV V6.16B, V8.16B
	0x03C8C2C4 MOV W0, W19
	0x03C8C2C8 LDP X20, X19, [X31 + 0x50]
	0x03C8C2CC LDP X22, X21, [X31 + 0x40]
	0x03C8C2D0 LDR X30, [X31 + 0x38]
	0x03C8C2D4 LDP D9, D8, [X31 + 0x28]
	0x03C8C2D8 LDP D11, D10, [X31 + 0x18]
	0x03C8C2DC LDP D13, D12, [X31 + 0x8]
	0x03C8C2E0 MOV V0.16B, V14.16B
	0x03C8C2E4 MOV W1, W31
	0x03C8C2E8 LDR V14, [X31], #0x60
	0x03C8C2EC B 0x3C8BD68
	0x03C8C2F0 STR D14, [X31 - 0x60]!
	0x03C8C2F4 STP D13, D12, [X31 + 0x10]
	0x03C8C2F8 STP D11, D10, [X31 + 0x20]
	0x03C8C2FC STP D9, D8, [X31 + 0x30]
	0x03C8C300 STP X30, X21, [X31 + 0x40]
	0x03C8C304 STP X20, X19, [X31 + 0x50]
	0x03C8C308 ADRP X21, 0x75A000
	0x03C8C30C ADRP X20, 0x467000
	0x03C8C310 LDRB W8, [X21 + 0xD93]
	0x03C8C314 LDR X20, [X20 + 0x5F8]
	0x03C8C318 MOV V8.16B, V0.16B
	0x03C8C31C MOV X19, X0
	0x03C8C320 TBNZ X8, 0x0, 0x3C8C338
	0x03C8C324 ADRP X0, 0x467000
	0x03C8C328 LDR X0, [X0 + 0x5F8]
	0x03C8C32C BL 0x1C16CF4

ISIL:
	001 Move [X31-96], D14
	002 Move [X31+16], D13
	003 Move [X31+24], D12
	004 Move [X31+32], D11
	005 Move [X31+40], D10
	006 Move [X31+48], D9
	007 Move [X31+56], D8
	008 Move [X31+64], X30
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X21, 0x75B000
	013 Move X20, 0x468000
	014 Move W8, [X21+3454]
	015 Move X20, [X20+1528]
	016 Move V8, V6
	017 Move X19, X0
	018 Move V9, V5
	019 Move V10, V4
	020 Move V11, V3
	021 Move V12, V2
	022 Move V13, V1
	023 Move V14, V0
	024 Move TEMP, X8
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {33}
	028 Move X0, 0x468000
	029 Move X0, [X0+1528]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X21+3454], W8
	033 Move X0, [X20]
	034 Move W8, [X0+224]
	035 Compare W8, 0
	036 JumpIfNotEqual {38}
	037 Call 0x1C17DFC
	038 Call Physics.get_defaultPhysicsScene
	039 Move [X31+8], W0
	040 Add X0, X31, 8
	041 Move TEMP, 4
	042 Not TEMP
	043 Move W2, TEMP
	044 Move V0, V14
	045 Move V1, V13
	046 Move V2, V12
	047 Move V3, V11
	048 Move V4, V10
	049 Move V5, V9
	050 Move X1, X19
	051 Move V6, V8
	052 Move W3, W31
	053 Call PhysicsScene.Raycast, X0, X1, X2, X3, V0, X4, X5
	054 Move X20, [X31+80]
	055 Move X19, [X31+88]
	056 Move X30, [X31+64]
	057 Move X21, [X31+72]
	058 Move D9, [X31+48]
	059 Move D8, [X31+56]
	060 Move D11, [X31+32]
	061 Move D10, [X31+40]
	062 Move D13, [X31+16]
	063 Move D12, [X31+24]
	064 And W0, W0, 1
	065 Move V14, [X31+96]
	066 Return X0

Method: System.Boolean Raycast(UnityEngine.Vector3 origin, UnityEngine.Vector3 direction, out UnityEngine.RaycastHit hitInfo)

Disassembly:
	0x03C8C330 MOVZ W8, 0x1
	0x03C8C334 STRB W8, [X21 + 0xD93]
	0x03C8C338 LDR X0, [X20]
	0x03C8C33C LDP S12, S9, [X19]
	0x03C8C340 LDP S10, S11, [X19 + 0x8]
	0x03C8C344 LDP S13, S14, [X19 + 0x10]
	0x03C8C348 LDR W8, [X0 + 0xE0]
	0x03C8C34C CBNZ W8, 0x3C8C354
	0x03C8C350 BL 0x1C16DFC
	0x03C8C354 MOV V0.16B, V12.16B
	0x03C8C358 MOV V1.16B, V9.16B
	0x03C8C35C MOV V2.16B, V10.16B
	0x03C8C360 MOV V3.16B, V11.16B
	0x03C8C364 MOV V4.16B, V13.16B
	0x03C8C368 MOV V6.16B, V8.16B
	0x03C8C36C LDP X20, X19, [X31 + 0x50]
	0x03C8C370 LDP X30, X21, [X31 + 0x40]
	0x03C8C374 LDP D9, D8, [X31 + 0x30]
	0x03C8C378 LDP D11, D10, [X31 + 0x20]
	0x03C8C37C LDP D13, D12, [X31 + 0x10]
	0x03C8C380 MOVN W0, 0x4
	0x03C8C384 MOV V5.16B, V14.16B
	0x03C8C388 MOV W1, W31
	0x03C8C38C LDR V14, [X31], #0x60
	0x03C8C390 B 0x3C8BD68
	0x03C8C394 STP D13, D12, [X31 - 0x50]!
	0x03C8C398 STP D11, D10, [X31 + 0x10]
	0x03C8C39C STP D9, D8, [X31 + 0x20]
	0x03C8C3A0 STP X30, X21, [X31 + 0x30]
	0x03C8C3A4 STP X20, X19, [X31 + 0x40]
	0x03C8C3A8 ADRP X21, 0x75A000
	0x03C8C3AC ADRP X20, 0x467000
	0x03C8C3B0 LDRB W8, [X21 + 0xD94]
	0x03C8C3B4 LDR X20, [X20 + 0x5F8]
	0x03C8C3B8 MOV X19, X0
	0x03C8C3BC TBNZ X8, 0x0, 0x3C8C3D4
	0x03C8C3C0 ADRP X0, 0x467000
	0x03C8C3C4 LDR X0, [X0 + 0x5F8]
	0x03C8C3C8 BL 0x1C16CF4
	0x03C8C3CC MOVZ W8, 0x1
	0x03C8C3D0 STRB W8, [X21 + 0xD94]
	0x03C8C3D4 LDR X0, [X20]
	0x03C8C3D8 LDP S11, S8, [X19]
	0x03C8C3DC LDP S9, S10, [X19 + 0x8]
	0x03C8C3E0 LDP S12, S13, [X19 + 0x10]
	0x03C8C3E4 LDR W8, [X0 + 0xE0]
	0x03C8C3E8 CBNZ W8, 0x3C8C3F0
	0x03C8C3EC BL 0x1C16DFC
	0x03C8C3F0 MOV V0.16B, V11.16B
	0x03C8C3F4 MOV V1.16B, V8.16B

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+16], D13
	003 Move [X31+24], D12
	004 Move [X31+32], D11
	005 Move [X31+40], D10
	006 Move [X31+48], D9
	007 Move [X31+56], D8
	008 Move [X31+64], X30
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X21, 0x75B000
	013 Move X20, 0x468000
	014 Move W8, [X21+3455]
	015 Move X20, [X20+1528]
	016 Move X19, X0
	017 Move V8, V5
	018 Move V9, V4
	019 Move V10, V3
	020 Move V11, V2
	021 Move V12, V1
	022 Move V13, V0
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {32}
	027 Move X0, 0x468000
	028 Move X0, [X0+1528]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X21+3455], W8
	032 Move X0, [X20]
	033 Move W8, [X0+224]
	034 Compare W8, 0
	035 JumpIfNotEqual {37}
	036 Call 0x1C17DFC
	037 Call Physics.get_defaultPhysicsScene
	038 Move W8, 0x7F800000
	039 Move [X31+8], W0
	040 Add X0, X31, 8
	041 Move TEMP, 4
	042 Not TEMP
	043 Move W2, TEMP
	044 Move S6, W8
	045 Move V0, V13
	046 Move V1, V12
	047 Move V2, V11
	048 Move V3, V10
	049 Move V4, V9
	050 Move V5, V8
	051 Move X1, X19
	052 Move W3, W31
	053 Call PhysicsScene.Raycast, X0, X1, X2, X3, V0, X4, X5
	054 Move X20, [X31+80]
	055 Move X19, [X31+88]
	056 Move X30, [X31+64]
	057 Move X21, [X31+72]
	058 Move D9, [X31+48]
	059 Move D8, [X31+56]
	060 Move D11, [X31+32]
	061 Move D10, [X31+40]
	062 Move D13, [X31+16]
	063 Move D12, [X31+24]
	064 And W0, W0, 1
	065 Add X31, X31, 96
	066 Return X0

Method: System.Boolean Raycast(UnityEngine.Ray ray, System.Single maxDistance, System.Int32 layerMask, UnityEngine.QueryTriggerInteraction queryTriggerInteraction)

Disassembly:
	0x03C8C3F8 MOV V2.16B, V9.16B
	0x03C8C3FC MOV V3.16B, V10.16B
	0x03C8C400 LDP X20, X19, [X31 + 0x40]
	0x03C8C404 LDP X30, X21, [X31 + 0x30]
	0x03C8C408 LDP D9, D8, [X31 + 0x20]
	0x03C8C40C LDP D11, D10, [X31 + 0x10]
	0x03C8C410 MOVZ W8, 0x7F800000
	0x03C8C414 MOVN W0, 0x4
	0x03C8C418 FMOV S6, W8
	0x03C8C41C MOV V4.16B, V12.16B
	0x03C8C420 MOV V5.16B, V13.16B
	0x03C8C424 MOV W1, W31
	0x03C8C428 LDP D13, D12, [X31], #0x50
	0x03C8C42C B 0x3C8BD68
	0x03C8C430 SUB X31, X31, 0x50
	0x03C8C434 STR D8, [X31 + 0x10]
	0x03C8C438 STR X30, [X31 + 0x18]
	0x03C8C43C STP X24, X23, [X31 + 0x20]
	0x03C8C440 STP X22, X21, [X31 + 0x30]
	0x03C8C444 STP X20, X19, [X31 + 0x40]
	0x03C8C448 ADRP X23, 0x75A000
	0x03C8C44C ADRP X24, 0x467000
	0x03C8C450 LDRB W8, [X23 + 0xD95]
	0x03C8C454 LDR X24, [X24 + 0x5F8]
	0x03C8C458 MOV W19, W3
	0x03C8C45C MOV W20, W2
	0x03C8C460 MOV V8.16B, V0.16B
	0x03C8C464 MOV X21, X1
	0x03C8C468 MOV X22, X0
	0x03C8C46C TBNZ X8, 0x0, 0x3C8C484
	0x03C8C470 ADRP X0, 0x467000
	0x03C8C474 LDR X0, [X0 + 0x5F8]
	0x03C8C478 BL 0x1C16CF4
	0x03C8C47C MOVZ W8, 0x1
	0x03C8C480 STRB W8, [X23 + 0xD95]
	0x03C8C484 LDR X0, [X24]
	0x03C8C488 LDR W8, [X0 + 0xE0]
	0x03C8C48C CBNZ W8, 0x3C8C494

ISIL:
	001 Move [X31-64], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0x75B000
	009 Move X23, 0x468000
	010 Move W8, [X22+3456]
	011 Move X23, [X23+1528]
	012 Move W19, W2
	013 Move W20, W1
	014 Move V8, V0
	015 Move X21, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0x468000
	021 Move X0, [X0+1528]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X22+3456], W8
	025 Move X0, [X23]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 Call Physics.get_defaultPhysicsScene
	031 Move [X31+8], W0
	032 Move S0, [X21]
	033 Move S1, [X21+4]
	034 Move S2, [X21+8]
	035 Move S3, [X21+12]
	036 Move S4, [X21+16]
	037 Move S5, [X21+20]
	038 Add X0, X31, 8
	039 Move V6, V8
	040 Move W1, W20
	041 Move W2, W19
	042 Call PhysicsScene.Raycast, X0, X1, X2, V0, X3, X4
	043 Move X20, [X31+48]
	044 Move X19, [X31+56]
	045 Move X22, [X31+32]
	046 Move X21, [X31+40]
	047 Move X30, [X31+16]
	048 Move X23, [X31+24]
	049 And W0, W0, 1
	050 Move V8, [X31+64]
	051 Return X0

Method: System.Boolean Raycast(UnityEngine.Ray ray, System.Single maxDistance, System.Int32 layerMask)

Disassembly:
	0x03C8C490 BL 0x1C16DFC
	0x03C8C494 BL 0x3C8A804
	0x03C8C498 STR W0, [X31 + 0x8]
	0x03C8C49C LDP S0, S1, [X22]
	0x03C8C4A0 LDP S2, S3, [X22 + 0x8]
	0x03C8C4A4 LDP S4, S5, [X22 + 0x10]
	0x03C8C4A8 ADD X0, X31, 0x8
	0x03C8C4AC MOV X1, X21
	0x03C8C4B0 MOV V6.16B, V8.16B
	0x03C8C4B4 MOV W2, W20
	0x03C8C4B8 MOV W3, W19
	0x03C8C4BC BL 0x3C8C4DC
	0x03C8C4C0 LDP X20, X19, [X31 + 0x40]
	0x03C8C4C4 LDP X22, X21, [X31 + 0x30]
	0x03C8C4C8 LDP X24, X23, [X31 + 0x20]
	0x03C8C4CC LDR X30, [X31 + 0x18]
	0x03C8C4D0 LDR V8, [X31 + 0x10]
	0x03C8C4D4 ADD X31, X31, 0x50
	0x03C8C4D8 RET
	0x03C8C4DC SUB X31, X31, 0xB0
	0x03C8C4E0 STP D15, D14, [X31 + 0x20]
	0x03C8C4E4 STP D13, D12, [X31 + 0x30]
	0x03C8C4E8 STP D11, D10, [X31 + 0x40]
	0x03C8C4EC STP D9, D8, [X31 + 0x50]
	0x03C8C4F0 STR X30, [X31 + 0x60]
	0x03C8C4F4 STP X26, X25, [X31 + 0x70]
	0x03C8C4F8 STP X24, X23, [X31 + 0x80]
	0x03C8C4FC STP X22, X21, [X31 + 0x90]
	0x03C8C500 STP X20, X19, [X31 + 0xA0]
	0x03C8C504 ADRP X23, 0x74C000
	0x03C8C508 LDRB W8, [X23 + 0x784]
	0x03C8C50C MOV W19, W3
	0x03C8C510 MOV W20, W2
	0x03C8C514 MOV V15.16B, V6.16B
	0x03C8C518 MOV X21, X1
	0x03C8C51C MOV V12.16B, V5.16B
	0x03C8C520 MOV V13.16B, V4.16B
	0x03C8C524 MOV V14.16B, V3.16B
	0x03C8C528 MOV V9.16B, V2.16B

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], D8
	003 Move [X31+24], X30
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x75B000
	009 Move X22, 0x468000
	010 Move W8, [X21+3457]
	011 Move X22, [X22+1528]
	012 Move W19, W1
	013 Move V8, V0
	014 Move X20, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {24}
	019 Move X0, 0x468000
	020 Move X0, [X0+1528]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X21+3457], W8
	024 Move X0, [X22]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Call Physics.get_defaultPhysicsScene
	030 Move [X31+8], W0
	031 Move S0, [X20]
	032 Move S1, [X20+4]
	033 Move S2, [X20+8]
	034 Move S3, [X20+12]
	035 Move S4, [X20+16]
	036 Move S5, [X20+20]
	037 Add X0, X31, 8
	038 Move V6, V8
	039 Move W1, W19
	040 Move W2, W31
	041 Call PhysicsScene.Raycast, X0, X1, X2, V0, X3, X4
	042 Move X20, [X31+48]
	043 Move X19, [X31+56]
	044 Move X22, [X31+32]
	045 Move X21, [X31+40]
	046 Move X30, [X31+24]
	047 Move V8, [X31+16]
	048 And W0, W0, 1
	049 Add X31, X31, 64
	050 Return X0

Method: System.Boolean Raycast(UnityEngine.Ray ray, System.Single maxDistance)

Disassembly:
	0x03C8C52C MOV V10.16B, V1.16B
	0x03C8C530 MOV V11.16B, V0.16B
	0x03C8C534 MOV X22, X0
	0x03C8C538 CBNZ W8, 0x3C8C550
	0x03C8C53C ADRP X0, 0x467000
	0x03C8C540 LDR X0, [X0 + 0x5A8]
	0x03C8C544 BL 0x1C16CF4
	0x03C8C548 MOVZ W8, 0x1
	0x03C8C54C STRB W8, [X23 + 0x784]
	0x03C8C550 ADRP X23, 0x467000
	0x03C8C554 LDR X23, [X23 + 0x5A8]
	0x03C8C558 LDR X0, [X23]
	0x03C8C55C LDR W8, [X0 + 0xE0]
	0x03C8C560 CBNZ W8, 0x3C8C568
	0x03C8C564 BL 0x1C16DFC
	0x03C8C568 FMUL S0, S14, S14
	0x03C8C56C FMUL S1, S13, S13
	0x03C8C570 FMUL S2, S12, S12
	0x03C8C574 FADD S0, S0, S1
	0x03C8C578 FADD S0, S2, S0
	0x03C8C57C MOVZ W8, 0x1
	0x03C8C580 FSQRT S8, S0
	0x03C8C584 FMOV S0, W8
	0x03C8C588 FCMP S8, S0
	0x03C8C58C B.LE 0x3C8C5F4
	0x03C8C590 ADRP X26, 0x74C000
	0x03C8C594 LDRB W8, [X26 + 0x785]
	0x03C8C598 STR S9, [X31 + 0x6C]
	0x03C8C59C CBNZ W8, 0x3C8C5B4
	0x03C8C5A0 ADRP X0, 0x467000
	0x03C8C5A4 LDR X0, [X0 + 0x5A8]
	0x03C8C5A8 BL 0x1C16CF4
	0x03C8C5AC MOVZ W8, 0x1
	0x03C8C5B0 STRB W8, [X26 + 0x785]

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x75B000
	007 Move X21, 0x468000
	008 Move W8, [X20+3458]
	009 Move X21, [X21+1528]
	010 Move V8, V0
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x468000
	017 Move X0, [X0+1528]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X20+3458], W8
	021 Move X0, [X21]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Call Physics.get_defaultPhysicsScene
	027 Move [X31+8], W0
	028 Move S0, [X19]
	029 Move S1, [X19+4]
	030 Move S2, [X19+8]
	031 Move S3, [X19+12]
	032 Move S4, [X19+16]
	033 Move S5, [X19+20]
	034 Add X0, X31, 8
	035 Move TEMP, 4
	036 Not TEMP
	037 Move W1, TEMP
	038 Move V6, V8
	039 Move W2, W31
	040 Call PhysicsScene.Raycast, X0, X1, X2, V0, X3, X4
	041 Move X20, [X31+32]
	042 Move X19, [X31+40]
	043 Move X30, [X31+16]
	044 Move X21, [X31+24]
	045 And W0, W0, 1
	046 Move V8, [X31+48]
	047 Return X0

Method: System.Boolean Raycast(UnityEngine.Ray ray)

Disassembly:
	0x03C8C5B4 LDR X0, [X23]
	0x03C8C5B8 MOV V9.16B, V15.16B
	0x03C8C5BC LDR W8, [X0 + 0xE0]
	0x03C8C5C0 CBNZ W8, 0x3C8C5C8
	0x03C8C5C4 BL 0x1C16DFC
	0x03C8C5C8 ADRP X8, 0xFFFFFFFFFCE5E000
	0x03C8C5CC LDR V15, [X8 + 0x17C]
	0x03C8C5D0 ADRP X24, 0x467000
	0x03C8C5D4 LDR X24, [X24 + 0x5A0]
	0x03C8C5D8 ADRP X25, 0x74C000
	0x03C8C5DC FCMP S8, S15
	0x03C8C5E0 B.LE 0x3C8C5FC
	0x03C8C5E4 FDIV S14, S14, S8
	0x03C8C5E8 FDIV S13, S13, S8
	0x03C8C5EC FDIV S12, S12, S8
	0x03C8C5F0 B 0x3C8C628
	0x03C8C5F4 MOV W0, W31
	0x03C8C5F8 B 0x3C8C704
	0x03C8C5FC LDRB W8, [X25 + 0x783]
	0x03C8C600 CBNZ W8, 0x3C8C618
	0x03C8C604 ADRP X0, 0x467000
	0x03C8C608 LDR X0, [X0 + 0x5A0]
	0x03C8C60C BL 0x1C16CF4
	0x03C8C610 MOVZ W8, 0x1
	0x03C8C614 STRB W8, [X25 + 0x783]
	0x03C8C618 LDR X8, [X24]
	0x03C8C61C LDR X8, [X8 + 0xB8]
	0x03C8C620 LDP S14, S13, [X8]
	0x03C8C624 LDR V12, [X8 + 0x8]
	0x03C8C628 LDRB W8, [X26 + 0x785]
	0x03C8C62C CBNZ W8, 0x3C8C644
	0x03C8C630 ADRP X0, 0x467000
	0x03C8C634 LDR X0, [X0 + 0x5A8]
	0x03C8C638 BL 0x1C16CF4

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x75B000
	007 Move X21, 0x468000
	008 Move W8, [X20+3459]
	009 Move X21, [X21+1528]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x468000
	016 Move X0, [X0+1528]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+3459], W8
	020 Move X0, [X21]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Call Physics.get_defaultPhysicsScene
	026 Move [X31+8], W0
	027 Move S0, [X19]
	028 Move S1, [X19+4]
	029 Move S2, [X19+8]
	030 Move S3, [X19+12]
	031 Move S4, [X19+16]
	032 Move S5, [X19+20]
	033 Move W8, 0x7F800000
	034 Add X0, X31, 8
	035 Move TEMP, 4
	036 Not TEMP
	037 Move W1, TEMP
	038 Move S6, W8
	039 Move W2, W31
	040 Call PhysicsScene.Raycast, X0, X1, X2, V0, X3, X4
	041 Move X20, [X31+32]
	042 Move X19, [X31+40]
	043 Move X30, [X31+16]
	044 Move X21, [X31+24]
	045 And W0, W0, 1
	046 Add X31, X31, 48
	047 Return X0

Method: System.Boolean Raycast(UnityEngine.Ray ray, out UnityEngine.RaycastHit hitInfo, System.Single maxDistance, System.Int32 layerMask, UnityEngine.QueryTriggerInteraction queryTriggerInteraction)

Disassembly:
	0x03C8C63C MOVZ W8, 0x1
	0x03C8C640 STRB W8, [X26 + 0x785]
	0x03C8C644 LDR X0, [X23]
	0x03C8C648 LDR W8, [X0 + 0xE0]
	0x03C8C64C CBNZ W8, 0x3C8C654
	0x03C8C650 BL 0x1C16DFC
	0x03C8C654 FMUL S0, S14, S14
	0x03C8C658 FMUL S1, S13, S13
	0x03C8C65C FADD S0, S0, S1
	0x03C8C660 FMUL S1, S12, S12
	0x03C8C664 FADD S0, S1, S0
	0x03C8C668 FSQRT S2, S0
	0x03C8C66C FCMP S2, S15
	0x03C8C670 B.LE 0x3C8C684
	0x03C8C674 FDIV S0, S14, S2
	0x03C8C678 FDIV S1, S13, S2
	0x03C8C67C FDIV S2, S12, S2
	0x03C8C680 B 0x3C8C6B0
	0x03C8C684 LDRB W8, [X25 + 0x783]
	0x03C8C688 CBNZ W8, 0x3C8C6A0
	0x03C8C68C ADRP X0, 0x467000
	0x03C8C690 LDR X0, [X0 + 0x5A0]
	0x03C8C694 BL 0x1C16CF4
	0x03C8C698 MOVZ W8, 0x1
	0x03C8C69C STRB W8, [X25 + 0x783]
	0x03C8C6A0 LDR X8, [X24]
	0x03C8C6A4 LDR X8, [X8 + 0xB8]
	0x03C8C6A8 LDP S0, S1, [X8]
	0x03C8C6AC LDR V2, [X8 + 0x8]
	0x03C8C6B0 LDR W9, [X22]
	0x03C8C6B4 ADRP X22, 0x75B000
	0x03C8C6B8 LDR V3, [X31 + 0x6C]
	0x03C8C6BC LDR X8, [X22 + 0x38]
	0x03C8C6C0 STP S11, S10, [X31 + 0x8]
	0x03C8C6C4 STP S1, S2, [X31 + 0x18]
	0x03C8C6C8 STP S3, S0, [X31 + 0x10]
	0x03C8C6CC STR W9, [X31 + 0x68]
	0x03C8C6D0 CBNZ X8, 0x3C8C6E8
	0x03C8C6D4 ADRP X0, 0xFFFFFFFFFCE87000
	0x03C8C6D8 ADD X0, X0, 0x482
	0x03C8C6DC BL 0x1C16CB8
	0x03C8C6E0 MOV X8, X0
	0x03C8C6E4 STR X0, [X22 + 0x38]
	0x03C8C6E8 ADD X0, X31, 0x68

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], D8
	003 Move [X31+24], X30
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X23, 0x75B000
	011 Move X24, 0x468000
	012 Move W8, [X23+3460]
	013 Move X24, [X24+1528]
	014 Move W19, W3
	015 Move W20, W2
	016 Move V8, V0
	017 Move X21, X1
	018 Move X22, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {28}
	023 Move X0, 0x468000
	024 Move X0, [X0+1528]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X23+3460], W8
	028 Move X0, [X24]
	029 Move W8, [X0+224]
	030 Compare W8, 0
	031 JumpIfNotEqual {33}
	032 Call 0x1C17DFC
	033 Call Physics.get_defaultPhysicsScene
	034 Move [X31+8], W0
	035 Move S0, [X22]
	036 Move S1, [X22+4]
	037 Move S2, [X22+8]
	038 Move S3, [X22+12]
	039 Move S4, [X22+16]
	040 Move S5, [X22+20]
	041 Add X0, X31, 8
	042 Move X1, X21
	043 Move V6, V8
	044 Move W2, W20
	045 Move W3, W19
	046 Call PhysicsScene.Raycast, X0, X1, X2, X3, V0, X4, X5
	047 Move X20, [X31+64]
	048 Move X19, [X31+72]
	049 Move X22, [X31+48]
	050 Move X21, [X31+56]
	051 Move X24, [X31+32]
	052 Move X23, [X31+40]
	053 Move X30, [X31+24]
	054 Move V8, [X31+16]
	055 And W0, W0, 1
	056 Add X31, X31, 80
	057 Return X0

Method: System.Boolean Raycast(UnityEngine.Ray ray, out UnityEngine.RaycastHit hitInfo, System.Single maxDistance, System.Int32 layerMask)

Disassembly:
	0x03C8C6EC ADD X1, X31, 0x8
	0x03C8C6F0 MOV X2, X21
	0x03C8C6F4 MOV V0.16B, V9.16B
	0x03C8C6F8 MOV W3, W20
	0x03C8C6FC MOV W4, W19
	0x03C8C700 BLR X8
	0x03C8C704 LDP X20, X19, [X31 + 0xA0]
	0x03C8C708 LDP X22, X21, [X31 + 0x90]
	0x03C8C70C LDP X24, X23, [X31 + 0x80]
	0x03C8C710 LDP X26, X25, [X31 + 0x70]
	0x03C8C714 LDR X30, [X31 + 0x60]
	0x03C8C718 LDP D9, D8, [X31 + 0x50]
	0x03C8C71C LDP D11, D10, [X31 + 0x40]
	0x03C8C720 LDP D13, D12, [X31 + 0x30]
	0x03C8C724 LDP D15, D14, [X31 + 0x20]
	0x03C8C728 ADD X31, X31, 0xB0
	0x03C8C72C RET
	0x03C8C730 STR D8, [X31 - 0x40]!
	0x03C8C734 STP X30, X23, [X31 + 0x10]
	0x03C8C738 STP X22, X21, [X31 + 0x20]
	0x03C8C73C STP X20, X19, [X31 + 0x30]
	0x03C8C740 ADRP X22, 0x75A000
	0x03C8C744 ADRP X23, 0x467000
	0x03C8C748 LDRB W8, [X22 + 0xD96]
	0x03C8C74C LDR X23, [X23 + 0x5F8]
	0x03C8C750 MOV W19, W2
	0x03C8C754 MOV V8.16B, V0.16B
	0x03C8C758 MOV X20, X1
	0x03C8C75C MOV X21, X0
	0x03C8C760 TBNZ X8, 0x0, 0x3C8C778
	0x03C8C764 ADRP X0, 0x467000
	0x03C8C768 LDR X0, [X0 + 0x5F8]
	0x03C8C76C BL 0x1C16CF4
	0x03C8C770 MOVZ W8, 0x1
	0x03C8C774 STRB W8, [X22 + 0xD96]
	0x03C8C778 LDR X0, [X23]
	0x03C8C77C LDR W8, [X0 + 0xE0]
	0x03C8C780 CBNZ W8, 0x3C8C788
	0x03C8C784 BL 0x1C16DFC
	0x03C8C788 BL 0x3C8A804
	0x03C8C78C STR W0, [X31 + 0x8]
	0x03C8C790 LDP S0, S1, [X21]
	0x03C8C794 LDP S2, S3, [X21 + 0x8]
	0x03C8C798 LDP S4, S5, [X21 + 0x10]
	0x03C8C79C ADD X0, X31, 0x8
	0x03C8C7A0 MOV X1, X20

ISIL:
	001 Move [X31-112], D14
	002 Move [X31+16], D13
	003 Move [X31+24], D12
	004 Move [X31+32], D11
	005 Move [X31+40], D10
	006 Move [X31+48], D9
	007 Move [X31+56], D8
	008 Move [X31+64], X30
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X23, 0x75B000
	015 Move X22, 0x468000
	016 Move W8, [X23+3461]
	017 Move X22, [X22+1528]
	018 Move W19, W2
	019 Move V8, V0
	020 Move X20, X1
	021 Move X21, X0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {31}
	026 Move X0, 0x468000
	027 Move X0, [X0+1528]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X23+3461], W8
	031 Move X0, [X22]
	032 Move S14, [X21]
	033 Move S13, [X21+4]
	034 Move S12, [X21+8]
	035 Move S10, [X21+12]
	036 Move S11, [X21+16]
	037 Move S9, [X21+20]
	038 Move W8, [X0+224]
	039 Compare W8, 0
	040 JumpIfNotEqual {42}
	041 Call 0x1C17DFC
	042 Move V1, V13
	043 Move V2, V12
	044 Move V3, V10
	045 Move V4, V11
	046 Move V5, V9
	047 Move X0, X20
	048 Move V6, V8
	049 Move W1, W19
	050 Move X20, [X31+96]
	051 Move X19, [X31+104]
	052 Move X22, [X31+80]
	053 Move X21, [X31+88]
	054 Move X30, [X31+64]
	055 Move X23, [X31+72]
	056 Move D9, [X31+48]
	057 Move D8, [X31+56]
	058 Move D11, [X31+32]
	059 Move D10, [X31+40]
	060 Move D13, [X31+16]
	061 Move D12, [X31+24]
	062 Move V0, V14
	063 Move W2, W31
	064 Move V14, [X31+112]
	065 Call Physics.Raycast, X0, X1, X2, V0, X3, X4
	066 Return X0

Method: System.Boolean Raycast(UnityEngine.Ray ray, out UnityEngine.RaycastHit hitInfo, System.Single maxDistance)

Disassembly:
	0x03C8C7A4 MOV V6.16B, V8.16B
	0x03C8C7A8 MOV W2, W19
	0x03C8C7AC MOV W3, W31
	0x03C8C7B0 BL 0x3C8C4DC
	0x03C8C7B4 LDP X20, X19, [X31 + 0x30]
	0x03C8C7B8 LDP X22, X21, [X31 + 0x20]
	0x03C8C7BC LDP X30, X23, [X31 + 0x10]
	0x03C8C7C0 LDR V8, [X31], #0x40
	0x03C8C7C4 RET
	0x03C8C7C8 SUB X31, X31, 0x40
	0x03C8C7CC STR D8, [X31 + 0x10]
	0x03C8C7D0 STR X30, [X31 + 0x18]
	0x03C8C7D4 STP X22, X21, [X31 + 0x20]
	0x03C8C7D8 STP X20, X19, [X31 + 0x30]
	0x03C8C7DC ADRP X21, 0x75A000
	0x03C8C7E0 ADRP X22, 0x467000
	0x03C8C7E4 LDRB W8, [X21 + 0xD97]
	0x03C8C7E8 LDR X22, [X22 + 0x5F8]
	0x03C8C7EC MOV V8.16B, V0.16B
	0x03C8C7F0 MOV X19, X1
	0x03C8C7F4 MOV X20, X0
	0x03C8C7F8 TBNZ X8, 0x0, 0x3C8C810
	0x03C8C7FC ADRP X0, 0x467000
	0x03C8C800 LDR X0, [X0 + 0x5F8]
	0x03C8C804 BL 0x1C16CF4
	0x03C8C808 MOVZ W8, 0x1
	0x03C8C80C STRB W8, [X21 + 0xD97]
	0x03C8C810 LDR X0, [X22]
	0x03C8C814 LDR W8, [X0 + 0xE0]
	0x03C8C818 CBNZ W8, 0x3C8C820
	0x03C8C81C BL 0x1C16DFC
	0x03C8C820 BL 0x3C8A804
	0x03C8C824 STR W0, [X31 + 0x8]
	0x03C8C828 LDP S0, S1, [X20]
	0x03C8C82C LDP S2, S3, [X20 + 0x8]
	0x03C8C830 LDP S4, S5, [X20 + 0x10]
	0x03C8C834 ADD X0, X31, 0x8
	0x03C8C838 MOVN W2, 0x4
	0x03C8C83C MOV X1, X19
	0x03C8C840 MOV V6.16B, V8.16B

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], D8
	003 Move [X31+24], X30
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x75B000
	009 Move X22, 0x468000
	010 Move W8, [X21+3462]
	011 Move X22, [X22+1528]
	012 Move V8, V0
	013 Move X19, X1
	014 Move X20, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {24}
	019 Move X0, 0x468000
	020 Move X0, [X0+1528]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X21+3462], W8
	024 Move X0, [X22]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Call Physics.get_defaultPhysicsScene
	030 Move [X31+8], W0
	031 Move S0, [X20]
	032 Move S1, [X20+4]
	033 Move S2, [X20+8]
	034 Move S3, [X20+12]
	035 Move S4, [X20+16]
	036 Move S5, [X20+20]
	037 Add X0, X31, 8
	038 Move TEMP, 4
	039 Not TEMP
	040 Move W2, TEMP
	041 Move X1, X19
	042 Move V6, V8
	043 Move W3, W31
	044 Call PhysicsScene.Raycast, X0, X1, X2, X3, V0, X4, X5
	045 Move X20, [X31+48]
	046 Move X19, [X31+56]
	047 Move X22, [X31+32]
	048 Move X21, [X31+40]
	049 Move X30, [X31+24]
	050 Move V8, [X31+16]
	051 And W0, W0, 1
	052 Add X31, X31, 64
	053 Return X0

Method: System.Boolean Raycast(UnityEngine.Ray ray, out UnityEngine.RaycastHit hitInfo)

Disassembly:
	0x03C8C844 MOV W3, W31
	0x03C8C848 BL 0x3C8C4DC
	0x03C8C84C LDP X20, X19, [X31 + 0x30]
	0x03C8C850 LDP X22, X21, [X31 + 0x20]
	0x03C8C854 LDR X30, [X31 + 0x18]
	0x03C8C858 LDR V8, [X31 + 0x10]
	0x03C8C85C ADD X31, X31, 0x40
	0x03C8C860 RET
	0x03C8C864 STR X30, [X31 - 0x30]!
	0x03C8C868 STP X22, X21, [X31 + 0x10]
	0x03C8C86C STP X20, X19, [X31 + 0x20]
	0x03C8C870 ADRP X21, 0x75A000
	0x03C8C874 ADRP X22, 0x467000
	0x03C8C878 LDRB W8, [X21 + 0xD98]
	0x03C8C87C LDR X22, [X22 + 0x5F8]
	0x03C8C880 MOV X19, X1
	0x03C8C884 MOV X20, X0
	0x03C8C888 TBNZ X8, 0x0, 0x3C8C8A0
	0x03C8C88C ADRP X0, 0x467000
	0x03C8C890 LDR X0, [X0 + 0x5F8]
	0x03C8C894 BL 0x1C16CF4
	0x03C8C898 MOVZ W8, 0x1
	0x03C8C89C STRB W8, [X21 + 0xD98]
	0x03C8C8A0 LDR X0, [X22]
	0x03C8C8A4 LDR W8, [X0 + 0xE0]
	0x03C8C8A8 CBNZ W8, 0x3C8C8B0
	0x03C8C8AC BL 0x1C16DFC
	0x03C8C8B0 BL 0x3C8A804
	0x03C8C8B4 STR W0, [X31 + 0x8]
	0x03C8C8B8 LDP S0, S1, [X20]
	0x03C8C8BC LDP S2, S3, [X20 + 0x8]
	0x03C8C8C0 LDP S4, S5, [X20 + 0x10]
	0x03C8C8C4 MOVZ W8, 0x7F800000
	0x03C8C8C8 ADD X0, X31, 0x8
	0x03C8C8CC MOVN W2, 0x4
	0x03C8C8D0 FMOV S6, W8

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x75B000
	007 Move X22, 0x468000
	008 Move W8, [X21+3463]
	009 Move X22, [X22+1528]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x468000
	017 Move X0, [X0+1528]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3463], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Call Physics.get_defaultPhysicsScene
	027 Move [X31+8], W0
	028 Move S0, [X20]
	029 Move S1, [X20+4]
	030 Move S2, [X20+8]
	031 Move S3, [X20+12]
	032 Move S4, [X20+16]
	033 Move S5, [X20+20]
	034 Move W8, 0x7F800000
	035 Add X0, X31, 8
	036 Move TEMP, 4
	037 Not TEMP
	038 Move W2, TEMP
	039 Move S6, W8
	040 Move X1, X19
	041 Move W3, W31
	042 Call PhysicsScene.Raycast, X0, X1, X2, X3, V0, X4, X5
	043 Move X20, [X31+32]
	044 Move X19, [X31+40]
	045 Move X22, [X31+16]
	046 Move X21, [X31+24]
	047 And W0, W0, 1
	048 Move X30, [X31+48]
	049 Return X0

Method: System.Boolean Linecast(UnityEngine.Vector3 start, UnityEngine.Vector3 end, out UnityEngine.RaycastHit hitInfo, System.Int32 layerMask, UnityEngine.QueryTriggerInteraction queryTriggerInteraction)

Disassembly:
	0x03C8C8D4 MOV X1, X19
	0x03C8C8D8 MOV W3, W31
	0x03C8C8DC BL 0x3C8C4DC
	0x03C8C8E0 LDP X20, X19, [X31 + 0x20]
	0x03C8C8E4 LDP X22, X21, [X31 + 0x10]
	0x03C8C8E8 LDR X30, [X31], #0x30
	0x03C8C8EC RET
	0x03C8C8F0 STR D14, [X31 - 0x70]!
	0x03C8C8F4 STP D13, D12, [X31 + 0x10]
	0x03C8C8F8 STP D11, D10, [X31 + 0x20]
	0x03C8C8FC STP D9, D8, [X31 + 0x30]
	0x03C8C900 STP X30, X23, [X31 + 0x40]
	0x03C8C904 STP X22, X21, [X31 + 0x50]
	0x03C8C908 STP X20, X19, [X31 + 0x60]
	0x03C8C90C ADRP X23, 0x75A000
	0x03C8C910 ADRP X22, 0x467000
	0x03C8C914 LDRB W8, [X23 + 0xD99]
	0x03C8C918 LDR X22, [X22 + 0x5F8]
	0x03C8C91C MOV W19, W2
	0x03C8C920 MOV W20, W1
	0x03C8C924 MOV V8.16B, V6.16B
	0x03C8C928 MOV X21, X0
	0x03C8C92C MOV V9.16B, V5.16B
	0x03C8C930 MOV V10.16B, V4.16B
	0x03C8C934 MOV V11.16B, V3.16B
	0x03C8C938 MOV V12.16B, V2.16B
	0x03C8C93C MOV V13.16B, V1.16B
	0x03C8C940 MOV V14.16B, V0.16B
	0x03C8C944 TBNZ X8, 0x0, 0x3C8C95C
	0x03C8C948 ADRP X0, 0x467000
	0x03C8C94C LDR X0, [X0 + 0x5F8]
	0x03C8C950 BL 0x1C16CF4
	0x03C8C954 MOVZ W8, 0x1
	0x03C8C958 STRB W8, [X23 + 0xD99]
	0x03C8C95C LDR X0, [X22]
	0x03C8C960 LDR W8, [X0 + 0xE0]
	0x03C8C964 CBNZ W8, 0x3C8C96C
	0x03C8C968 BL 0x1C16DFC
	0x03C8C96C BL 0x3C8A804
	0x03C8C970 STR W0, [X31 + 0x8]
	0x03C8C974 ADD X0, X31, 0x8
	0x03C8C978 MOV V0.16B, V14.16B
	0x03C8C97C MOV V1.16B, V13.16B
	0x03C8C980 MOV V2.16B, V12.16B
	0x03C8C984 MOV V3.16B, V11.16B
	0x03C8C988 MOV V4.16B, V10.16B
	0x03C8C98C MOV V5.16B, V9.16B
	0x03C8C990 MOV X1, X21
	0x03C8C994 MOV V6.16B, V8.16B
	0x03C8C998 MOV W2, W20
	0x03C8C99C MOV W3, W19
	0x03C8C9A0 BL 0x3C8C4DC
	0x03C8C9A4 LDP X20, X19, [X31 + 0x60]
	0x03C8C9A8 LDP X22, X21, [X31 + 0x50]
	0x03C8C9AC LDP X30, X23, [X31 + 0x40]
	0x03C8C9B0 LDP D9, D8, [X31 + 0x30]
	0x03C8C9B4 LDP D11, D10, [X31 + 0x20]
	0x03C8C9B8 LDP D13, D12, [X31 + 0x10]
	0x03C8C9BC LDR V14, [X31], #0x70
	0x03C8C9C0 RET
	0x03C8C9C4 SUB X31, X31, 0x70
	0x03C8C9C8 STR D14, [X31 + 0x10]
	0x03C8C9CC STP D13, D12, [X31 + 0x18]
	0x03C8C9D0 STP D11, D10, [X31 + 0x28]
	0x03C8C9D4 STP D9, D8, [X31 + 0x38]
	0x03C8C9D8 STR X30, [X31 + 0x48]
	0x03C8C9DC STP X22, X21, [X31 + 0x50]
	0x03C8C9E0 STP X20, X19, [X31 + 0x60]
	0x03C8C9E4 ADRP X22, 0x75A000
	0x03C8C9E8 ADRP X21, 0x467000
	0x03C8C9EC LDRB W8, [X22 + 0xD9A]
	0x03C8C9F0 LDR X21, [X21 + 0x5F8]
	0x03C8C9F4 MOV W19, W1
	0x03C8C9F8 MOV V8.16B, V6.16B
	0x03C8C9FC MOV X20, X0

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], D13
	003 Move [X31+24], D12
	004 Move [X31+32], D11
	005 Move [X31+40], D10
	006 Move [X31+48], D9
	007 Move [X31+56], D8
	008 Move [X31+64], X30
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X22, 0x75B000
	015 Move X23, 0x468000
	016 Move W8, [X22+3464]
	017 Move X23, [X23+1528]
	018 Move W19, W2
	019 Move W20, W1
	020 Move X21, X0
	021 Move V11, V5
	022 Move V12, V4
	023 Move V13, V3
	024 Move V8, V2
	025 Move V9, V1
	026 Move V10, V0
	027 Move TEMP, X8
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfEqual {36}
	031 Move X0, 0x468000
	032 Move X0, [X0+1528]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X22+3464], W8
	036 Move X0, [X23]
	037 Move W8, [X0+224]
	038 Compare W8, 0
	039 JumpIfNotEqual {41}
	040 Call 0x1C17DFC
	041 Call Physics.get_defaultPhysicsScene
	042 Move X22, 0x74D000
	043 Move W8, [X22+1924]
	044 Move [X31+8], W0
	045 Compare W8, 0
	046 JumpIfNotEqual {52}
	047 Move X0, 0x468000
	048 Move X0, [X0+1448]
	049 Call 0x1C17CF4
	050 Move W8, 1
	051 Move [X22+1924], W8
	052 Move X8, 0x468000
	053 Move X8, [X8+1448]
	054 Subtract S13, S13, S10
	055 Subtract S12, S12, S9
	056 Subtract S11, S11, S8
	057 Move X0, [X8]
	058 Move W8, [X0+224]
	059 Compare W8, 0
	060 JumpIfNotEqual {62}
	061 Call 0x1C17DFC
	062 Multiply S0, S13, S13
	063 Multiply S1, S12, S12
	064 Add S0, S0, S1
	065 Multiply S1, S11, S11
	066 Add S0, S1, S0
	067 NotImplemented "Instruction FSQRT not yet implemented."
	068 Add X0, X31, 8
	069 Move V0, V10
	070 Move V1, V9
	071 Move V2, V8
	072 Move V3, V13
	073 Move V4, V12
	074 Move V5, V11
	075 Move X1, X21
	076 Move W2, W20
	077 Move W3, W19
	078 Call PhysicsScene.Raycast, X0, X1, X2, X3, V0, X4, X5
	079 Move X20, [X31+96]
	080 Move X19, [X31+104]
	081 Move X22, [X31+80]
	082 Move X21, [X31+88]
	083 Move X30, [X31+64]
	084 Move X23, [X31+72]
	085 Move D9, [X31+48]
	086 Move D8, [X31+56]
	087 Move D11, [X31+32]
	088 Move D10, [X31+40]
	089 Move D13, [X31+16]
	090 Move D12, [X31+24]
	091 And W0, W0, 1
	092 Add X31, X31, 112
	093 Return X0

Method: System.Boolean Linecast(UnityEngine.Vector3 start, UnityEngine.Vector3 end, out UnityEngine.RaycastHit hitInfo, System.Int32 layerMask)

Disassembly:
	0x03C8CA00 MOV V9.16B, V5.16B
	0x03C8CA04 MOV V10.16B, V4.16B
	0x03C8CA08 MOV V11.16B, V3.16B
	0x03C8CA0C MOV V12.16B, V2.16B
	0x03C8CA10 MOV V13.16B, V1.16B
	0x03C8CA14 MOV V14.16B, V0.16B
	0x03C8CA18 TBNZ X8, 0x0, 0x3C8CA30
	0x03C8CA1C ADRP X0, 0x467000
	0x03C8CA20 LDR X0, [X0 + 0x5F8]
	0x03C8CA24 BL 0x1C16CF4
	0x03C8CA28 MOVZ W8, 0x1
	0x03C8CA2C STRB W8, [X22 + 0xD9A]
	0x03C8CA30 LDR X0, [X21]
	0x03C8CA34 LDR W8, [X0 + 0xE0]
	0x03C8CA38 CBNZ W8, 0x3C8CA40
	0x03C8CA3C BL 0x1C16DFC
	0x03C8CA40 BL 0x3C8A804
	0x03C8CA44 STR W0, [X31 + 0x8]
	0x03C8CA48 ADD X0, X31, 0x8
	0x03C8CA4C MOV V0.16B, V14.16B
	0x03C8CA50 MOV V1.16B, V13.16B
	0x03C8CA54 MOV V2.16B, V12.16B
	0x03C8CA58 MOV V3.16B, V11.16B
	0x03C8CA5C MOV V4.16B, V10.16B
	0x03C8CA60 MOV V5.16B, V9.16B
	0x03C8CA64 MOV X1, X20
	0x03C8CA68 MOV V6.16B, V8.16B
	0x03C8CA6C MOV W2, W19
	0x03C8CA70 MOV W3, W31
	0x03C8CA74 BL 0x3C8C4DC
	0x03C8CA78 LDP X20, X19, [X31 + 0x60]
	0x03C8CA7C LDP X22, X21, [X31 + 0x50]
	0x03C8CA80 LDR X30, [X31 + 0x48]
	0x03C8CA84 LDP D9, D8, [X31 + 0x38]
	0x03C8CA88 LDP D11, D10, [X31 + 0x28]
	0x03C8CA8C LDP D13, D12, [X31 + 0x18]
	0x03C8CA90 LDR V14, [X31 + 0x10]
	0x03C8CA94 ADD X31, X31, 0x70
	0x03C8CA98 RET
	0x03C8CA9C STR D14, [X31 - 0x60]!
	0x03C8CAA0 STP D13, D12, [X31 + 0x10]
	0x03C8CAA4 STP D11, D10, [X31 + 0x20]
	0x03C8CAA8 STP D9, D8, [X31 + 0x30]
	0x03C8CAAC STP X30, X21, [X31 + 0x40]

ISIL:
	001 Move [X31-96], D13
	002 Move [X31-88], D12
	003 Move [X31+16], D11
	004 Move [X31+24], D10
	005 Move [X31+32], D9
	006 Move [X31+40], D8
	007 Move [X31+48], X30
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X22, 0x75B000
	013 Move X21, 0x468000
	014 Move W8, [X22+3465]
	015 Move X21, [X21+1528]
	016 Move W19, W1
	017 Move X20, X0
	018 Move V8, V5
	019 Move V9, V4
	020 Move V10, V3
	021 Move V11, V2
	022 Move V12, V1
	023 Move V13, V0
	024 Move TEMP, X8
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {33}
	028 Move X0, 0x468000
	029 Move X0, [X0+1528]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X22+3465], W8
	033 Move X0, [X21]
	034 Move W8, [X0+224]
	035 Compare W8, 0
	036 JumpIfNotEqual {38}
	037 Call 0x1C17DFC
	038 Move V2, V11
	039 Move V3, V10
	040 Move V4, V9
	041 Move V5, V8
	042 Move X0, X20
	043 Move W1, W19
	044 Move X20, [X31+80]
	045 Move X19, [X31+88]
	046 Move X22, [X31+64]
	047 Move X21, [X31+72]
	048 Move X30, [X31+48]
	049 Move D9, [X31+32]
	050 Move D8, [X31+40]
	051 Move D11, [X31+16]
	052 Move D10, [X31+24]
	053 Move V0, V13
	054 Move V1, V12
	055 Move W2, W31
	056 Move D13, [X31+96]
	057 Move D12, [X31+104]
	058 Call Physics.Linecast, X0, X1, X2, X3, X4
	059 Return X0

Method: System.Boolean SphereCast(UnityEngine.Vector3 origin, System.Single radius, UnityEngine.Vector3 direction, out UnityEngine.RaycastHit hitInfo, System.Single maxDistance, System.Int32 layerMask, UnityEngine.QueryTriggerInteraction queryTriggerInteraction)

Disassembly:
	0x03C8CAB0 STP X20, X19, [X31 + 0x50]
	0x03C8CAB4 ADRP X21, 0x75A000
	0x03C8CAB8 ADRP X20, 0x467000
	0x03C8CABC LDRB W8, [X21 + 0xD9B]
	0x03C8CAC0 LDR X20, [X20 + 0x5F8]
	0x03C8CAC4 MOV V8.16B, V6.16B
	0x03C8CAC8 MOV X19, X0
	0x03C8CACC MOV V9.16B, V5.16B
	0x03C8CAD0 MOV V10.16B, V4.16B
	0x03C8CAD4 MOV V11.16B, V3.16B
	0x03C8CAD8 MOV V12.16B, V2.16B
	0x03C8CADC MOV V13.16B, V1.16B
	0x03C8CAE0 MOV V14.16B, V0.16B
	0x03C8CAE4 TBNZ X8, 0x0, 0x3C8CAFC
	0x03C8CAE8 ADRP X0, 0x467000
	0x03C8CAEC LDR X0, [X0 + 0x5F8]
	0x03C8CAF0 BL 0x1C16CF4
	0x03C8CAF4 MOVZ W8, 0x1
	0x03C8CAF8 STRB W8, [X21 + 0xD9B]
	0x03C8CAFC LDR X0, [X20]
	0x03C8CB00 LDR W8, [X0 + 0xE0]
	0x03C8CB04 CBNZ W8, 0x3C8CB0C
	0x03C8CB08 BL 0x1C16DFC
	0x03C8CB0C BL 0x3C8A804
	0x03C8CB10 STR W0, [X31 + 0x8]
	0x03C8CB14 ADD X0, X31, 0x8
	0x03C8CB18 MOVN W2, 0x4
	0x03C8CB1C MOV V0.16B, V14.16B
	0x03C8CB20 MOV V1.16B, V13.16B
	0x03C8CB24 MOV V2.16B, V12.16B
	0x03C8CB28 MOV V3.16B, V11.16B
	0x03C8CB2C MOV V4.16B, V10.16B
	0x03C8CB30 MOV V5.16B, V9.16B
	0x03C8CB34 MOV X1, X19
	0x03C8CB38 MOV V6.16B, V8.16B
	0x03C8CB3C MOV W3, W31
	0x03C8CB40 BL 0x3C8C4DC
	0x03C8CB44 LDP X20, X19, [X31 + 0x50]
	0x03C8CB48 LDP X30, X21, [X31 + 0x40]
	0x03C8CB4C LDP D9, D8, [X31 + 0x30]
	0x03C8CB50 LDP D11, D10, [X31 + 0x20]
	0x03C8CB54 LDP D13, D12, [X31 + 0x10]
	0x03C8CB58 LDR V14, [X31], #0x60
	0x03C8CB5C RET
	0x03C8CB60 SUB X31, X31, 0x60
	0x03C8CB64 STP D13, D12, [X31 + 0x10]
	0x03C8CB68 STP D11, D10, [X31 + 0x20]
	0x03C8CB6C STP D9, D8, [X31 + 0x30]
	0x03C8CB70 STP X30, X21, [X31 + 0x40]
	0x03C8CB74 STP X20, X19, [X31 + 0x50]
	0x03C8CB78 ADRP X21, 0x75A000
	0x03C8CB7C ADRP X20, 0x467000
	0x03C8CB80 LDRB W8, [X21 + 0xD9C]

ISIL:
	001 Move [X31-112], D15
	002 Move [X31-104], D14
	003 Move [X31+16], D13
	004 Move [X31+24], D12
	005 Move [X31+32], D11
	006 Move [X31+40], D10
	007 Move [X31+48], D9
	008 Move [X31+56], D8
	009 Move [X31+64], X30
	010 Move [X31+72], X23
	011 Move [X31+80], X22
	012 Move [X31+88], X21
	013 Move [X31+96], X20
	014 Move [X31+104], X19
	015 Move X23, 0x75B000
	016 Move X22, 0x468000
	017 Move W8, [X23+3466]
	018 Move X22, [X22+1528]
	019 Move W19, W2
	020 Move W20, W1
	021 Move V8, V7
	022 Move X21, X0
	023 Move V9, V6
	024 Move V10, V5
	025 Move V11, V4
	026 Move V12, V3
	027 Move V13, V2
	028 Move V14, V1
	029 Move V15, V0
	030 Move TEMP, X8
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfEqual {39}
	034 Move X0, 0x468000
	035 Move X0, [X0+1528]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X23+3466], W8
	039 Move X0, [X22]
	040 Move W8, [X0+224]
	041 Compare W8, 0
	042 JumpIfNotEqual {44}
	043 Call 0x1C17DFC
	044 Call Physics.get_defaultPhysicsScene
	045 Move V2, V13
	046 Move V3, V12
	047 Move V4, V11
	048 Move V5, V10
	049 Move V6, V9
	050 Move X1, X21
	051 Move V7, V8
	052 Move W2, W20
	053 Move W3, W19
	054 Move X20, [X31+96]
	055 Move X19, [X31+104]
	056 Move X22, [X31+80]
	057 Move X21, [X31+88]
	058 Move X30, [X31+64]
	059 Move X23, [X31+72]
	060 Move D9, [X31+48]
	061 Move D8, [X31+56]
	062 Move D11, [X31+32]
	063 Move D10, [X31+40]
	064 Move D13, [X31+16]
	065 Move D12, [X31+24]
	066 And X0, X0, 0
	067 Move V0, V15
	068 Move V1, V14
	069 Move D15, [X31+112]
	070 Move D14, [X31+120]
	071 Call PhysicsScene.Internal_SphereCast, X0, X1, V0, X2, X3, V1, X4, X5
	072 Return X0

Method: System.Boolean SphereCast(UnityEngine.Vector3 origin, System.Single radius, UnityEngine.Vector3 direction, out UnityEngine.RaycastHit hitInfo, System.Single maxDistance, System.Int32 layerMask)

Disassembly:
	0x03C8CB8C MOV V8.16B, V5.16B
	0x03C8CB90 MOV V9.16B, V4.16B
	0x03C8CB94 MOV V10.16B, V3.16B
	0x03C8CB98 MOV V11.16B, V2.16B
	0x03C8CB9C MOV V12.16B, V1.16B
	0x03C8CBA0 MOV V13.16B, V0.16B
	0x03C8CBA4 TBNZ X8, 0x0, 0x3C8CBBC
	0x03C8CBA8 ADRP X0, 0x467000
	0x03C8CBAC LDR X0, [X0 + 0x5F8]
	0x03C8CBB0 BL 0x1C16CF4
	0x03C8CBB4 MOVZ W8, 0x1
	0x03C8CBB8 STRB W8, [X21 + 0xD9C]
	0x03C8CBBC LDR X0, [X20]
	0x03C8CBC0 LDR W8, [X0 + 0xE0]
	0x03C8CBC4 CBNZ W8, 0x3C8CBCC
	0x03C8CBC8 BL 0x1C16DFC
	0x03C8CBCC BL 0x3C8A804
	0x03C8CBD0 MOVZ W8, 0x7F800000
	0x03C8CBD4 STR W0, [X31 + 0x8]
	0x03C8CBD8 ADD X0, X31, 0x8
	0x03C8CBDC MOVN W2, 0x4
	0x03C8CBE0 FMOV S6, W8
	0x03C8CBE4 MOV V0.16B, V13.16B
	0x03C8CBE8 MOV V1.16B, V12.16B
	0x03C8CBEC MOV V2.16B, V11.16B
	0x03C8CBF0 MOV V3.16B, V10.16B
	0x03C8CBF4 MOV V4.16B, V9.16B
	0x03C8CBF8 MOV V5.16B, V8.16B
	0x03C8CBFC MOV X1, X19
	0x03C8CC00 MOV W3, W31
	0x03C8CC04 BL 0x3C8C4DC
	0x03C8CC08 LDP X20, X19, [X31 + 0x50]
	0x03C8CC0C LDP X30, X21, [X31 + 0x40]
	0x03C8CC10 LDP D9, D8, [X31 + 0x30]
	0x03C8CC14 LDP D11, D10, [X31 + 0x20]
	0x03C8CC18 LDP D13, D12, [X31 + 0x10]
	0x03C8CC1C ADD X31, X31, 0x60
	0x03C8CC20 RET
	0x03C8CC24 SUB X31, X31, 0x60
	0x03C8CC28 STR D8, [X31 + 0x30]
	0x03C8CC2C STR X30, [X31 + 0x38]
	0x03C8CC30 STP X22, X21, [X31 + 0x40]
	0x03C8CC34 STP X20, X19, [X31 + 0x50]
	0x03C8CC38 STR W0, [X31 + 0x28]
	0x03C8CC3C STP S0, S1, [X31 + 0x18]
	0x03C8CC40 STR S2, [X31 + 0x20]
	0x03C8CC44 ADRP X21, 0x75A000
	0x03C8CC48 STP S3, S4, [X31 + 0x8]
	0x03C8CC4C STR S5, [X31 + 0x10]
	0x03C8CC50 ADRP X22, 0x467000

ISIL:
	001 Move [X31-112], D15
	002 Move [X31-104], D14
	003 Move [X31+16], D13
	004 Move [X31+24], D12
	005 Move [X31+32], D11
	006 Move [X31+40], D10
	007 Move [X31+48], D9
	008 Move [X31+56], D8
	009 Move [X31+64], X30
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X22, 0x75B000
	015 Move X21, 0x468000
	016 Move W8, [X22+3467]
	017 Move X21, [X21+1528]
	018 Move W19, W1
	019 Move V8, V7
	020 Move X20, X0
	021 Move V9, V6
	022 Move V10, V5
	023 Move V11, V4
	024 Move V12, V3
	025 Move V13, V2
	026 Move V14, V1
	027 Move V15, V0
	028 Move TEMP, X8
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfEqual {37}
	032 Move X0, 0x468000
	033 Move X0, [X0+1528]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X22+3467], W8
	037 Move X0, [X21]
	038 Move W8, [X0+224]
	039 Compare W8, 0
	040 JumpIfNotEqual {42}
	041 Call 0x1C17DFC
	042 Move V2, V13
	043 Move V3, V12
	044 Move V4, V11
	045 Move V5, V10
	046 Move V6, V9
	047 Move X0, X20
	048 Move V7, V8
	049 Move W1, W19
	050 Move X20, [X31+96]
	051 Move X19, [X31+104]
	052 Move X22, [X31+80]
	053 Move X21, [X31+88]
	054 Move X30, [X31+64]
	055 Move D9, [X31+48]
	056 Move D8, [X31+56]
	057 Move D11, [X31+32]
	058 Move D10, [X31+40]
	059 Move D13, [X31+16]
	060 Move D12, [X31+24]
	061 Move V0, V15
	062 Move V1, V14
	063 Move W2, W31
	064 Move D15, [X31+112]
	065 Move D14, [X31+120]
	066 Call Physics.SphereCast, X0, V0, X1, X2, V1, X3, X4
	067 Return X0

Method: UnityEngine.RaycastHit[] Internal_RaycastAll(UnityEngine.PhysicsScene physicsScene, UnityEngine.Ray ray, System.Single maxDistance, System.Int32 mask, UnityEngine.QueryTriggerInteraction queryTriggerInteraction)

Disassembly:
	0x03C8CC54 LDRB W8, [X21 + 0xD9D]
	0x03C8CC58 LDR X22, [X22 + 0x5F8]
	0x03C8CC5C MOV W19, W2
	0x03C8CC60 MOV W20, W1
	0x03C8CC64 MOV V8.16B, V6.16B
	0x03C8CC68 TBNZ X8, 0x0, 0x3C8CC80
	0x03C8CC6C ADRP X0, 0x467000
	0x03C8CC70 LDR X0, [X0 + 0x5F8]
	0x03C8CC74 BL 0x1C16CF4
	0x03C8CC78 MOVZ W8, 0x1
	0x03C8CC7C STRB W8, [X21 + 0xD9D]
	0x03C8CC80 LDR X0, [X22]
	0x03C8CC84 LDR W8, [X0 + 0xE0]
	0x03C8CC88 CBNZ W8, 0x3C8CC90
	0x03C8CC8C BL 0x1C16DFC
	0x03C8CC90 ADRP X21, 0x75A000
	0x03C8CC94 LDR X8, [X21 + 0xE18]
	0x03C8CC98 CBNZ X8, 0x3C8CCB0
	0x03C8CC9C ADRP X0, 0xFFFFFFFFFCE7D000
	0x03C8CCA0 ADD X0, X0, 0xBE4
	0x03C8CCA4 BL 0x1C16CB8
	0x03C8CCA8 MOV X8, X0
	0x03C8CCAC STR X0, [X21 + 0xE18]
	0x03C8CCB0 ADD X0, X31, 0x28
	0x03C8CCB4 ADD X1, X31, 0x18
	0x03C8CCB8 ADD X2, X31, 0x8
	0x03C8CCBC MOV V0.16B, V8.16B
	0x03C8CCC0 MOV W3, W20
	0x03C8CCC4 MOV W4, W19
	0x03C8CCC8 BLR X8
	0x03C8CCCC LDP X20, X19, [X31 + 0x50]
	0x03C8CCD0 LDP X22, X21, [X31 + 0x40]
	0x03C8CCD4 LDR X30, [X31 + 0x38]
	0x03C8CCD8 LDR V8, [X31 + 0x30]
	0x03C8CCDC ADD X31, X31, 0x60
	0x03C8CCE0 RET
	0x03C8CCE4 STR D8, [X31 - 0x40]!
	0x03C8CCE8 STR X30, [X31 + 0x8]
	0x03C8CCEC STP X24, X23, [X31 + 0x10]
	0x03C8CCF0 STP X22, X21, [X31 + 0x20]
	0x03C8CCF4 STP X20, X19, [X31 + 0x30]
	0x03C8CCF8 ADRP X24, 0x75A000

ISIL:
	001 Move [X31-64], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0x75B000
	009 Move [X31+8], W0
	010 Move X23, 0x468000
	011 Move W8, [X22+3468]
	012 Move X23, [X23+1528]
	013 Move W19, W3
	014 Move W20, W2
	015 Move V8, V0
	016 Move X21, X1
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {26}
	021 Move X0, 0x468000
	022 Move X0, [X0+1528]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X22+3468], W8
	026 Move X0, [X23]
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X22, 0x75B000
	032 Move X8, [X22+3600]
	033 Compare X8, 0
	034 JumpIfNotEqual {40}
	035 Move X0, -51937280
	036 Add X0, X0, 2533
	037 Call 0x1C17CB8
	038 Move X8, X0
	039 Move [X22+3600], X0
	040 Add X0, X31, 8
	041 Move X1, X21
	042 Move V0, V8
	043 Move W2, W20
	044 Move W3, W19
	045 NotImplemented "Instruction BLR not yet implemented."
	046 Move X20, [X31+48]
	047 Move X19, [X31+56]
	048 Move X22, [X31+32]
	049 Move X21, [X31+40]
	050 Move X30, [X31+16]
	051 Move X23, [X31+24]
	052 Move V8, [X31+64]
	053 Return X0

Method: UnityEngine.RaycastHit[] RaycastAll(UnityEngine.Vector3 origin, UnityEngine.Vector3 direction, System.Single maxDistance, System.Int32 layerMask, UnityEngine.QueryTriggerInteraction queryTriggerInteraction)

Disassembly:
	0x03C8CD68 STP D11, D10, [X31 + 0x18]
	0x03C8CD6C STP D9, D8, [X31 + 0x28]
	0x03C8CD70 STR X30, [X31 + 0x38]
	0x03C8CD74 STP X22, X21, [X31 + 0x40]
	0x03C8CD78 STP X20, X19, [X31 + 0x50]
	0x03C8CD7C ADRP X22, 0x75A000
	0x03C8CD80 ADRP X21, 0x467000
	0x03C8CD84 LDRB W8, [X22 + 0xD9E]
	0x03C8CD88 LDR X21, [X21 + 0x5F8]
	0x03C8CD8C MOV W19, W1
	0x03C8CD90 MOV W20, W0
	0x03C8CD94 MOV V8.16B, V6.16B
	0x03C8CD98 MOV V9.16B, V5.16B
	0x03C8CD9C MOV V10.16B, V4.16B
	0x03C8CDA0 MOV V11.16B, V3.16B
	0x03C8CDA4 MOV V12.16B, V2.16B
	0x03C8CDA8 MOV V13.16B, V1.16B
	0x03C8CDAC MOV V14.16B, V0.16B
	0x03C8CDB0 TBNZ X8, 0x0, 0x3C8CDC8
	0x03C8CDB4 ADRP X0, 0x467000
	0x03C8CDB8 LDR X0, [X0 + 0x5F8]
	0x03C8CDBC BL 0x1C16CF4
	0x03C8CDC0 MOVZ W8, 0x1
	0x03C8CDC4 STRB W8, [X22 + 0xD9E]
	0x03C8CDC8 LDR X0, [X21]
	0x03C8CDCC LDR W8, [X0 + 0xE0]
	0x03C8CDD0 CBNZ W8, 0x3C8CDD8
	0x03C8CDD4 BL 0x1C16DFC
	0x03C8CDD8 BL 0x3C8A804
	0x03C8CDDC MOV V1.16B, V13.16B
	0x03C8CDE0 MOV V2.16B, V12.16B
	0x03C8CDE4 MOV V3.16B, V11.16B
	0x03C8CDE8 MOV V4.16B, V10.16B
	0x03C8CDEC MOV V5.16B, V9.16B
	0x03C8CDF0 MOV V6.16B, V8.16B
	0x03C8CDF4 MOV W1, W20
	0x03C8CDF8 MOV W2, W19
	0x03C8CDFC LDP X20, X19, [X31 + 0x50]
	0x03C8CE00 LDP X22, X21, [X31 + 0x40]
	0x03C8CE04 LDR X30, [X31 + 0x38]
	0x03C8CE08 LDP D9, D8, [X31 + 0x28]
	0x03C8CE0C LDP D11, D10, [X31 + 0x18]
	0x03C8CE10 LDP D13, D12, [X31 + 0x8]
	0x03C8CE14 AND X0, X0, 0x0
	0x03C8CE18 MOV V0.16B, V14.16B
	0x03C8CE1C LDR V14, [X31], #0x60
	0x03C8CE20 B 0x3C8CC24
	0x03C8CE24 STR D14, [X31 - 0x60]!
	0x03C8CE28 STP D13, D12, [X31 + 0x10]
	0x03C8CE2C STP D11, D10, [X31 + 0x20]
	0x03C8CE30 STP D9, D8, [X31 + 0x30]
	0x03C8CE34 STP X30, X21, [X31 + 0x40]
	0x03C8CE38 STP X20, X19, [X31 + 0x50]
	0x03C8CE3C ADRP X21, 0x75A000
	0x03C8CE40 ADRP X20, 0x467000
	0x03C8CE44 LDRB W8, [X21 + 0xD9F]
	0x03C8CE48 LDR X20, [X20 + 0x5F8]
	0x03C8CE4C MOV W19, W0
	0x03C8CE50 MOV V8.16B, V6.16B
	0x03C8CE54 MOV V9.16B, V5.16B
	0x03C8CE58 MOV V10.16B, V4.16B
	0x03C8CE5C MOV V11.16B, V3.16B
	0x03C8CE60 MOV V12.16B, V2.16B
	0x03C8CE64 MOV V13.16B, V1.16B
	0x03C8CE68 MOV V14.16B, V0.16B
	0x03C8CE6C TBNZ X8, 0x0, 0x3C8CE84
	0x03C8CE70 ADRP X0, 0x467000
	0x03C8CE74 LDR X0, [X0 + 0x5F8]
	0x03C8CE78 BL 0x1C16CF4
	0x03C8CE7C MOVZ W8, 0x1
	0x03C8CE80 STRB W8, [X21 + 0xD9F]
	0x03C8CE84 LDR X0, [X20]
	0x03C8CE88 LDR W8, [X0 + 0xE0]
	0x03C8CE8C CBNZ W8, 0x3C8CE94
	0x03C8CE90 BL 0x1C16DFC
	0x03C8CE94 MOV V1.16B, V13.16B
	0x03C8CE98 MOV V2.16B, V12.16B
	0x03C8CE9C MOV V3.16B, V11.16B
	0x03C8CEA0 MOV V4.16B, V10.16B
	0x03C8CEA4 MOV V5.16B, V9.16B
	0x03C8CEA8 MOV V6.16B, V8.16B
	0x03C8CEAC MOV W0, W19
	0x03C8CEB0 LDP X20, X19, [X31 + 0x50]
	0x03C8CEB4 LDP X30, X21, [X31 + 0x40]
	0x03C8CEB8 LDP D9, D8, [X31 + 0x30]
	0x03C8CEBC LDP D11, D10, [X31 + 0x20]
	0x03C8CEC0 LDP D13, D12, [X31 + 0x10]
	0x03C8CEC4 MOV V0.16B, V14.16B
	0x03C8CEC8 MOV W1, W31
	0x03C8CECC LDR V14, [X31], #0x60
	0x03C8CED0 B 0x3C8CD60
	0x03C8CED4 SUB X31, X31, 0x50
	0x03C8CED8 STR D8, [X31 + 0x20]
	0x03C8CEDC STR X30, [X31 + 0x28]
	0x03C8CEE0 STP X22, X21, [X31 + 0x30]
	0x03C8CEE4 STP X20, X19, [X31 + 0x40]
	0x03C8CEE8 STR W0, [X31 + 0x18]
	0x03C8CEEC ADRP X21, 0x75A000
	0x03C8CEF0 STP S0, S1, [X31 + 0x8]
	0x03C8CEF4 STR S2, [X31 + 0x10]
	0x03C8CEF8 ADRP X22, 0x467000
	0x03C8CEFC LDRB W8, [X21 + 0xDA0]
	0x03C8CF00 LDR X22, [X22 + 0x5F8]
	0x03C8CF04 MOV W19, W2
	0x03C8CF08 MOV W20, W1
	0x03C8CF0C MOV V8.16B, V3.16B
	0x03C8CF10 TBNZ X8, 0x0, 0x3C8CF28
	0x03C8CF14 ADRP X0, 0x467000
	0x03C8CF18 LDR X0, [X0 + 0x5F8]
	0x03C8CF1C BL 0x1C16CF4
	0x03C8CF20 MOVZ W8, 0x1
	0x03C8CF24 STRB W8, [X21 + 0xDA0]
	0x03C8CF28 LDR X0, [X22]
	0x03C8CF2C LDR W8, [X0 + 0xE0]
	0x03C8CF30 CBNZ W8, 0x3C8CF38
	0x03C8CF34 BL 0x1C16DFC
	0x03C8CF38 ADRP X21, 0x75A000
	0x03C8CF3C LDR X8, [X21 + 0xE20]
	0x03C8CF40 CBNZ X8, 0x3C8CF58
	0x03C8CF44 ADRP X0, 0xFFFFFFFFFCE9D000
	0x03C8CF48 ADD X0, X0, 0x4D
	0x03C8CF4C BL 0x1C16CB8
	0x03C8CF50 MOV X8, X0
	0x03C8CF54 STR X0, [X21 + 0xE20]
	0x03C8CF58 ADD X0, X31, 0x18
	0x03C8CF5C ADD X1, X31, 0x8
	0x03C8CF60 MOV V0.16B, V8.16B
	0x03C8CF64 MOV W2, W20
	0x03C8CF68 MOV W3, W19
	0x03C8CF6C BLR X8
	0x03C8CF70 LDP X20, X19, [X31 + 0x40]
	0x03C8CF74 LDP X22, X21, [X31 + 0x30]
	0x03C8CF78 LDR X30, [X31 + 0x28]
	0x03C8CF7C LDR V8, [X31 + 0x20]
	0x03C8CF80 ADD X31, X31, 0x50
	0x03C8CF84 RET
	0x03C8CF88 STR D8, [X31 - 0x40]!

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+32], D15
	003 Move [X31+40], D14
	004 Move [X31+48], D13
	005 Move [X31+56], D12
	006 Move [X31+64], D11
	007 Move [X31+72], D10
	008 Move [X31+80], D9
	009 Move [X31+88], D8
	010 Move [X31+96], X30
	011 Move [X31+112], X22
	012 Move [X31+120], X21
	013 Move [X31+128], X20
	014 Move [X31+136], X19
	015 Move X21, 0x75B000
	016 Move W8, [X21+3469]
	017 Move W19, W1
	018 Move W20, W0
	019 Move V15, V6
	020 Move V12, V5
	021 Move V13, V4
	022 Move V14, V3
	023 Move V9, V2
	024 Move V10, V1
	025 Move V11, V0
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {38}
	030 Move X0, 0x468000
	031 Move X0, [X0+1528]
	032 Call 0x1C17CF4
	033 Move X0, 0x46E000
	034 Move X0, [X0+1160]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X21+3469], W8
	038 Move X21, 0x74D000
	039 Move W8, [X21+1924]
	040 Compare W8, 0
	041 JumpIfNotEqual {47}
	042 Move X0, 0x468000
	043 Move X0, [X0+1448]
	044 Call 0x1C17CF4
	045 Move W8, 1
	046 Move [X21+1924], W8
	047 Move X21, 0x468000
	048 Move X21, [X21+1448]
	049 Move X0, [X21]
	050 Move W8, [X0+224]
	051 Compare W8, 0
	052 JumpIfNotEqual {54}
	053 Call 0x1C17DFC
	054 Multiply S0, S14, S14
	055 Multiply S1, S13, S13
	056 Multiply S2, S12, S12
	057 Add S0, S0, S1
	058 Add S0, S2, S0
	059 Move W8, 1
	060 NotImplemented "Instruction FSQRT not yet implemented."
	061 Move S0, W8
	062 NotImplemented "Instruction FCMP not yet implemented."
	063 Move X22, 0x74D000
	064 Move W8, [X22+1925]
	065 Move [X31+108], S10
	066 Move V10, V9
	067 Move V9, V15
	068 Compare W8, 0
	069 JumpIfNotEqual {75}
	070 Move X0, 0x468000
	071 Move X0, [X0+1448]
	072 Call 0x1C17CF4
	073 Move W8, 1
	074 Move [X22+1925], W8
	075 Move X0, [X21]
	076 NotImplemented "Instruction FDIV not yet implemented."
	077 NotImplemented "Instruction FDIV not yet implemented."
	078 NotImplemented "Instruction FDIV not yet implemented."
	079 Move W8, [X0+224]
	080 Compare W8, 0
	081 JumpIfNotEqual {83}
	082 Call 0x1C17DFC
	083 Multiply S0, S15, S15
	084 Multiply S1, S13, S13
	085 Move X8, -52039680
	086 Add S0, S0, S1
	087 Move V1, [X8+380]
	088 Multiply S2, S14, S14
	089 Add S0, S2, S0
	090 NotImplemented "Instruction FSQRT not yet implemented."
	091 NotImplemented "Instruction FCMP not yet implemented."
	092 NotImplemented "Instruction FDIV not yet implemented."
	093 NotImplemented "Instruction FDIV not yet implemented."
	094 NotImplemented "Instruction FDIV not yet implemented."
	095 Move X8, 0x46E000
	096 Move X8, [X8+1160]
	097 Move X20, [X31+128]
	098 Move X19, [X31+136]
	099 Move X22, [X31+112]
	100 Move X21, [X31+120]
	101 Move X30, [X31+96]
	102 Move X0, [X8]
	103 Move D9, [X31+80]
	104 Move D8, [X31+88]
	105 Move D11, [X31+64]
	106 Move D10, [X31+72]
	107 Move D13, [X31+48]
	108 Move D12, [X31+56]
	109 Move D15, [X31+32]
	110 Move D14, [X31+40]
	111 Move W1, W31
	112 Add X31, X31, 144
	113 Call 0x1C17D6C
	114 Return X0
	115 Move X21, 0x74D000
	116 Move W8, [X21+1923]
	117 Compare W8, 0
	118 JumpIfNotEqual {124}
	119 Move X0, 0x468000
	120 Move X0, [X0+1440]
	121 Call 0x1C17CF4
	122 Move W8, 1
	123 Move [X21+1923], W8
	124 Move X8, 0x468000
	125 Move X8, [X8+1440]
	126 Move X8, [X8]
	127 Move X8, [X8+184]
	128 Move S12, [X8]
	129 Move S13, [X8+4]
	130 Move V14, [X8+8]
	131 Move X8, 0x468000
	132 Move X8, [X8+1528]
	133 Move X0, [X8]
	134 Move W8, [X0+224]
	135 Compare W8, 0
	136 JumpIfNotEqual {138}
	137 Call 0x1C17DFC
	138 Call Physics.get_defaultPhysicsScene
	139 Move V0, [X31+108]
	140 And X0, X0, 0
	141 Add X1, X31, 8
	142 Move W2, W20
	143 Move [X31+8], S11
	144 Move [X31+16], S0
	145 Move V0, V9
	146 Move W3, W19
	147 Move [X31+16], S10
	148 Move [X31+24], S12
	149 Move [X31+24], S13
	150 Move [X31+32], S14
	151 Call Physics.Internal_RaycastAll, X0, X1, V0, X2, X3
	152 Move X20, [X31+128]
	153 Move X19, [X31+136]
	154 Move X22, [X31+112]
	155 Move X21, [X31+120]
	156 Move X30, [X31+96]
	157 Move D9, [X31+80]
	158 Move D8, [X31+88]
	159 Move D11, [X31+64]
	160 Move D10, [X31+72]
	161 Move D13, [X31+48]
	162 Move D12, [X31+56]
	163 Move D15, [X31+32]
	164 Move D14, [X31+40]
	165 Add X31, X31, 144
	166 Return X0

Method: UnityEngine.RaycastHit[] RaycastAll(UnityEngine.Vector3 origin, UnityEngine.Vector3 direction, System.Single maxDistance, System.Int32 layerMask)

Disassembly:
	0x03C8CF8C STP X30, X23, [X31 + 0x10]
	0x03C8CF90 STP X22, X21, [X31 + 0x20]
	0x03C8CF94 STP X20, X19, [X31 + 0x30]
	0x03C8CF98 ADRP X23, 0x75A000
	0x03C8CF9C LDR X4, [X23 + 0xE20]
	0x03C8CFA0 MOV W19, W3
	0x03C8CFA4 MOV W20, W2
	0x03C8CFA8 MOV V8.16B, V0.16B
	0x03C8CFAC MOV X21, X1
	0x03C8CFB0 MOV X22, X0
	0x03C8CFB4 CBNZ X4, 0x3C8CFCC
	0x03C8CFB8 ADRP X0, 0xFFFFFFFFFCE9D000
	0x03C8CFBC ADD X0, X0, 0x4D
	0x03C8CFC0 BL 0x1C16CB8
	0x03C8CFC4 MOV X4, X0
	0x03C8CFC8 STR X0, [X23 + 0xE20]
	0x03C8CFCC MOV X0, X22
	0x03C8CFD0 MOV X1, X21
	0x03C8CFD4 MOV W2, W20
	0x03C8CFD8 MOV W3, W19
	0x03C8CFDC LDP X20, X19, [X31 + 0x30]
	0x03C8CFE0 LDP X22, X21, [X31 + 0x20]
	0x03C8CFE4 LDP X30, X23, [X31 + 0x10]
	0x03C8CFE8 MOV V0.16B, V8.16B
	0x03C8CFEC LDR V8, [X31], #0x40
	0x03C8CFF0 BR X4
	0x03C8CFF4 STP D11, D10, [X31 - 0x50]!
	0x03C8CFF8 STP D9, D8, [X31 + 0x10]
	0x03C8CFFC STR X30, [X31 + 0x20]
	0x03C8D000 STP X22, X21, [X31 + 0x30]
	0x03C8D004 STP X20, X19, [X31 + 0x40]
	0x03C8D008 ADRP X22, 0x759000
	0x03C8D00C ADRP X21, 0x466000
	0x03C8D010 LDRB W8, [X22 + 0xDA1]
	0x03C8D014 LDR X21, [X21 + 0x5F8]
	0x03C8D018 MOV W19, W1
	0x03C8D01C MOV W20, W0
	0x03C8D020 MOV V8.16B, V3.16B
	0x03C8D024 MOV V9.16B, V2.16B
	0x03C8D028 MOV V10.16B, V1.16B
	0x03C8D02C MOV V11.16B, V0.16B
	0x03C8D030 TBNZ X8, 0x0, 0x3C8D048
	0x03C8D034 ADRP X0, 0x466000
	0x03C8D038 LDR X0, [X0 + 0x5F8]

ISIL:
	001 Move [X31-96], D14
	002 Move [X31+16], D13
	003 Move [X31+24], D12
	004 Move [X31+32], D11
	005 Move [X31+40], D10
	006 Move [X31+48], D9
	007 Move [X31+56], D8
	008 Move [X31+64], X30
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X21, 0x75B000
	013 Move X20, 0x468000
	014 Move W8, [X21+3470]
	015 Move X20, [X20+1528]
	016 Move W19, W0
	017 Move V8, V6
	018 Move V9, V5
	019 Move V10, V4
	020 Move V11, V3
	021 Move V12, V2
	022 Move V13, V1
	023 Move V14, V0
	024 Move TEMP, X8
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {33}
	028 Move X0, 0x468000
	029 Move X0, [X0+1528]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X21+3470], W8
	033 Move X0, [X20]
	034 Move W8, [X0+224]
	035 Compare W8, 0
	036 JumpIfNotEqual {38}
	037 Call 0x1C17DFC
	038 Move V1, V13
	039 Move V2, V12
	040 Move V3, V11
	041 Move V4, V10
	042 Move V5, V9
	043 Move V6, V8
	044 Move W0, W19
	045 Move X20, [X31+80]
	046 Move X19, [X31+88]
	047 Move X30, [X31+64]
	048 Move X21, [X31+72]
	049 Move D9, [X31+48]
	050 Move D8, [X31+56]
	051 Move D11, [X31+32]
	052 Move D10, [X31+40]
	053 Move D13, [X31+16]
	054 Move D12, [X31+24]
	055 Move V0, V14
	056 Move W1, W31
	057 Move V14, [X31+96]
	058 Call Physics.RaycastAll, X0, X1, V0, X2, X3
	059 Return X0

Method: UnityEngine.RaycastHit[] RaycastAll(UnityEngine.Vector3 origin, UnityEngine.Vector3 direction, System.Single maxDistance)

Disassembly:
	0x03C8D03C BL 0x1C16CF4
	0x03C8D040 MOVZ W8, 0x1
	0x03C8D044 STRB W8, [X22 + 0xDA1]
	0x03C8D048 LDR X0, [X21]
	0x03C8D04C LDR W8, [X0 + 0xE0]
	0x03C8D050 CBNZ W8, 0x3C8D058
	0x03C8D054 BL 0x1C16DFC
	0x03C8D058 BL 0x3C8A804
	0x03C8D05C MOV V2.16B, V9.16B
	0x03C8D060 MOV V3.16B, V8.16B
	0x03C8D064 MOV W1, W20
	0x03C8D068 MOV W2, W19
	0x03C8D06C LDP X20, X19, [X31 + 0x40]
	0x03C8D070 LDP X22, X21, [X31 + 0x30]
	0x03C8D074 LDR X30, [X31 + 0x20]
	0x03C8D078 LDP D9, D8, [X31 + 0x10]
	0x03C8D07C AND X0, X0, 0x0
	0x03C8D080 MOV V0.16B, V11.16B
	0x03C8D084 MOV V1.16B, V10.16B
	0x03C8D088 LDP D11, D10, [X31], #0x50
	0x03C8D08C B 0x3C8CED4
	0x03C8D090 STP D11, D10, [X31 - 0x40]!
	0x03C8D094 STP D9, D8, [X31 + 0x10]
	0x03C8D098 STP X30, X21, [X31 + 0x20]
	0x03C8D09C STP X20, X19, [X31 + 0x30]
	0x03C8D0A0 ADRP X21, 0x759000
	0x03C8D0A4 ADRP X20, 0x466000
	0x03C8D0A8 LDRB W8, [X21 + 0xDA2]
	0x03C8D0AC LDR X20, [X20 + 0x5F8]
	0x03C8D0B0 MOV W19, W0
	0x03C8D0B4 MOV V8.16B, V3.16B
	0x03C8D0B8 MOV V9.16B, V2.16B
	0x03C8D0BC MOV V10.16B, V1.16B
	0x03C8D0C0 MOV V11.16B, V0.16B
	0x03C8D0C4 TBNZ X8, 0x0, 0x3C8D0DC
	0x03C8D0C8 ADRP X0, 0x466000
	0x03C8D0CC LDR X0, [X0 + 0x5F8]
	0x03C8D0D0 BL 0x1C16CF4
	0x03C8D0D4 MOVZ W8, 0x1
	0x03C8D0D8 STRB W8, [X21 + 0xDA2]
	0x03C8D0DC LDR X0, [X20]
	0x03C8D0E0 LDR W8, [X0 + 0xE0]
	0x03C8D0E4 CBNZ W8, 0x3C8D0EC

ISIL:
	001 Move [X31-80], D14
	002 Move [X31+8], D13
	003 Move [X31+16], D12
	004 Move [X31+24], D11
	005 Move [X31+32], D10
	006 Move [X31+40], D9
	007 Move [X31+48], D8
	008 Move [X31+56], X30
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X20, 0x75A000
	012 Move X19, 0x467000
	013 Move W8, [X20+3471]
	014 Move X19, [X19+1528]
	015 Move V8, V6
	016 Move V9, V5
	017 Move V10, V4
	018 Move V11, V3
	019 Move V12, V2
	020 Move V13, V1
	021 Move V14, V0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {31}
	026 Move X0, 0x467000
	027 Move X0, [X0+1528]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X20+3471], W8
	031 Move X0, [X19]
	032 Move W8, [X0+224]
	033 Compare W8, 0
	034 JumpIfNotEqual {36}
	035 Call 0x1C17DFC
	036 Move V1, V13
	037 Move V2, V12
	038 Move V3, V11
	039 Move V4, V10
	040 Move V5, V9
	041 Move V6, V8
	042 Move X20, [X31+64]
	043 Move X19, [X31+72]
	044 Move X30, [X31+56]
	045 Move D9, [X31+40]
	046 Move D8, [X31+48]
	047 Move D11, [X31+24]
	048 Move D10, [X31+32]
	049 Move D13, [X31+8]
	050 Move D12, [X31+16]
	051 Move TEMP, 4
	052 Not TEMP
	053 Move W0, TEMP
	054 Move V0, V14
	055 Move W1, W31
	056 Move V14, [X31+80]
	057 Call Physics.RaycastAll, X0, X1, V0, X2, X3
	058 Return X0

Method: UnityEngine.RaycastHit[] RaycastAll(UnityEngine.Vector3 origin, UnityEngine.Vector3 direction)

Disassembly:
	0x03C8D0E8 BL 0x1C16DFC
	0x03C8D0EC MOV V2.16B, V9.16B
	0x03C8D0F0 MOV V3.16B, V8.16B
	0x03C8D0F4 MOV W0, W19
	0x03C8D0F8 LDP X20, X19, [X31 + 0x30]
	0x03C8D0FC LDP X30, X21, [X31 + 0x20]
	0x03C8D100 LDP D9, D8, [X31 + 0x10]
	0x03C8D104 MOV V0.16B, V11.16B
	0x03C8D108 MOV V1.16B, V10.16B
	0x03C8D10C MOV W1, W31
	0x03C8D110 LDP D11, D10, [X31], #0x40
	0x03C8D114 B 0x3C8CFF4
	0x03C8D118 STP D11, D10, [X31 - 0x40]!
	0x03C8D11C STP D9, D8, [X31 + 0x10]
	0x03C8D120 STR X30, [X31 + 0x20]
	0x03C8D124 STP X20, X19, [X31 + 0x30]
	0x03C8D128 ADRP X20, 0x759000
	0x03C8D12C ADRP X19, 0x466000
	0x03C8D130 LDRB W8, [X20 + 0xDA3]
	0x03C8D134 LDR X19, [X19 + 0x5F8]
	0x03C8D138 MOV V8.16B, V3.16B
	0x03C8D13C MOV V9.16B, V2.16B
	0x03C8D140 MOV V10.16B, V1.16B
	0x03C8D144 MOV V11.16B, V0.16B
	0x03C8D148 TBNZ X8, 0x0, 0x3C8D160
	0x03C8D14C ADRP X0, 0x466000
	0x03C8D150 LDR X0, [X0 + 0x5F8]
	0x03C8D154 BL 0x1C16CF4
	0x03C8D158 MOVZ W8, 0x1
	0x03C8D15C STRB W8, [X20 + 0xDA3]
	0x03C8D160 LDR X0, [X19]
	0x03C8D164 LDR W8, [X0 + 0xE0]
	0x03C8D168 CBNZ W8, 0x3C8D170
	0x03C8D16C BL 0x1C16DFC
	0x03C8D170 MOV V2.16B, V9.16B
	0x03C8D174 MOV V3.16B, V8.16B
	0x03C8D178 LDP X20, X19, [X31 + 0x30]
	0x03C8D17C LDR X30, [X31 + 0x20]
	0x03C8D180 LDP D9, D8, [X31 + 0x10]
	0x03C8D184 MOVN W0, 0x0
	0x03C8D188 MOV V0.16B, V11.16B

ISIL:
	001 Move [X31-80], D13
	002 Move [X31-72], D12
	003 Move [X31+16], D11
	004 Move [X31+24], D10
	005 Move [X31+32], D9
	006 Move [X31+40], D8
	007 Move [X31+48], X30
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X20, 0x75A000
	011 Move X19, 0x467000
	012 Move W8, [X20+3472]
	013 Move X19, [X19+1528]
	014 Move V8, V5
	015 Move V9, V4
	016 Move V10, V3
	017 Move V11, V2
	018 Move V12, V1
	019 Move V13, V0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {29}
	024 Move X0, 0x467000
	025 Move X0, [X0+1528]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X20+3472], W8
	029 Move X0, [X19]
	030 Move W8, [X0+224]
	031 Compare W8, 0
	032 JumpIfNotEqual {34}
	033 Call 0x1C17DFC
	034 Move V2, V11
	035 Move V3, V10
	036 Move V4, V9
	037 Move V5, V8
	038 Move X20, [X31+64]
	039 Move X19, [X31+72]
	040 Move X30, [X31+48]
	041 Move D9, [X31+32]
	042 Move D8, [X31+40]
	043 Move D11, [X31+16]
	044 Move D10, [X31+24]
	045 Move W8, 0x7F800000
	046 Move TEMP, 4
	047 Not TEMP
	048 Move W0, TEMP
	049 Move S6, W8
	050 Move V0, V13
	051 Move V1, V12
	052 Move W1, W31
	053 Move D13, [X31+80]
	054 Move D12, [X31+88]
	055 Call Physics.RaycastAll, X0, X1, V0, X2, X3
	056 Return X0

Method: UnityEngine.RaycastHit[] RaycastAll(UnityEngine.Ray ray, System.Single maxDistance, System.Int32 layerMask, UnityEngine.QueryTriggerInteraction queryTriggerInteraction)

Disassembly:
	0x03C8D18C MOV V1.16B, V10.16B
	0x03C8D190 MOV W1, W31
	0x03C8D194 LDP D11, D10, [X31], #0x40
	0x03C8D198 B 0x3C8CFF4
	0x03C8D19C SUB X31, X31, 0x30
	0x03C8D1A0 STR D8, [X31 + 0x10]
	0x03C8D1A4 STR X30, [X31 + 0x18]
	0x03C8D1A8 STP X20, X19, [X31 + 0x20]
	0x03C8D1AC ADRP X19, 0x759000
	0x03C8D1B0 STR W0, [X31 + 0x8]
	0x03C8D1B4 ADRP X20, 0x466000
	0x03C8D1B8 LDRB W8, [X19 + 0xDA4]
	0x03C8D1BC LDR X20, [X20 + 0x5F8]
	0x03C8D1C0 MOV V8.16B, V0.16B
	0x03C8D1C4 TBNZ X8, 0x0, 0x3C8D1DC
	0x03C8D1C8 ADRP X0, 0x466000
	0x03C8D1CC LDR X0, [X0 + 0x5F8]
	0x03C8D1D0 BL 0x1C16CF4
	0x03C8D1D4 MOVZ W8, 0x1
	0x03C8D1D8 STRB W8, [X19 + 0xDA4]
	0x03C8D1DC LDR X0, [X20]
	0x03C8D1E0 LDR W8, [X0 + 0xE0]
	0x03C8D1E4 CBNZ W8, 0x3C8D1EC
	0x03C8D1E8 BL 0x1C16DFC
	0x03C8D1EC ADRP X19, 0x759000
	0x03C8D1F0 LDR X8, [X19 + 0xE28]
	0x03C8D1F4 CBNZ X8, 0x3C8D20C
	0x03C8D1F8 ADRP X0, 0xFFFFFFFFFCE9C000
	0x03C8D1FC ADD X0, X0, 0xF1
	0x03C8D200 BL 0x1C16CB8
	0x03C8D204 MOV X8, X0
	0x03C8D208 STR X0, [X19 + 0xE28]
	0x03C8D20C ADD X0, X31, 0x8
	0x03C8D210 MOV V0.16B, V8.16B
	0x03C8D214 BLR X8
	0x03C8D218 LDP X20, X19, [X31 + 0x20]
	0x03C8D21C LDR X30, [X31 + 0x18]
	0x03C8D220 LDR V8, [X31 + 0x10]
	0x03C8D224 ADD X31, X31, 0x30
	0x03C8D228 RET
	0x03C8D22C STR D8, [X31 - 0x20]!
	0x03C8D230 STR X30, [X31 + 0x8]
	0x03C8D234 STP X20, X19, [X31 + 0x10]
	0x03C8D238 ADRP X20, 0x759000
	0x03C8D23C LDR X1, [X20 + 0xE28]

ISIL:
	001 Move [X31-112], D14
	002 Move [X31+16], D13
	003 Move [X31+24], D12
	004 Move [X31+32], D11
	005 Move [X31+40], D10
	006 Move [X31+48], D9
	007 Move [X31+56], D8
	008 Move [X31+64], X30
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X23, 0x75A000
	015 Move X22, 0x467000
	016 Move W8, [X23+3473]
	017 Move X22, [X22+1528]
	018 Move W19, W2
	019 Move W20, W1
	020 Move V8, V0
	021 Move X21, X0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {31}
	026 Move X0, 0x467000
	027 Move X0, [X0+1528]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X23+3473], W8
	031 Move X0, [X22]
	032 Move S14, [X21]
	033 Move S13, [X21+4]
	034 Move S12, [X21+8]
	035 Move S10, [X21+12]
	036 Move S11, [X21+16]
	037 Move S9, [X21+20]
	038 Move W8, [X0+224]
	039 Compare W8, 0
	040 JumpIfNotEqual {42}
	041 Call 0x1C17DFC
	042 Move V1, V13
	043 Move V2, V12
	044 Move V3, V10
	045 Move V4, V11
	046 Move V5, V9
	047 Move V6, V8
	048 Move W0, W20
	049 Move W1, W19
	050 Move X20, [X31+96]
	051 Move X19, [X31+104]
	052 Move X22, [X31+80]
	053 Move X21, [X31+88]
	054 Move X30, [X31+64]
	055 Move X23, [X31+72]
	056 Move D9, [X31+48]
	057 Move D8, [X31+56]
	058 Move D11, [X31+32]
	059 Move D10, [X31+40]
	060 Move D13, [X31+16]
	061 Move D12, [X31+24]
	062 Move V0, V14
	063 Move V14, [X31+112]
	064 Call Physics.RaycastAll, X0, X1, V0, X2, X3
	065 Return X0

Method: UnityEngine.RaycastHit[] RaycastAll(UnityEngine.Ray ray, System.Single maxDistance, System.Int32 layerMask)

Disassembly:
	0x03C8D240 MOV V8.16B, V0.16B
	0x03C8D244 MOV X19, X0
	0x03C8D248 CBNZ X1, 0x3C8D260
	0x03C8D24C ADRP X0, 0xFFFFFFFFFCE9C000
	0x03C8D250 ADD X0, X0, 0xF1
	0x03C8D254 BL 0x1C16CB8
	0x03C8D258 MOV X1, X0
	0x03C8D25C STR X0, [X20 + 0xE28]
	0x03C8D260 MOV X0, X19
	0x03C8D264 LDP X20, X19, [X31 + 0x10]
	0x03C8D268 LDR X30, [X31 + 0x8]
	0x03C8D26C MOV V0.16B, V8.16B
	0x03C8D270 LDR V8, [X31], #0x20
	0x03C8D274 BR X1
	0x03C8D278 STR D8, [X31 - 0x20]!
	0x03C8D27C STR X30, [X31 + 0x8]
	0x03C8D280 STP X20, X19, [X31 + 0x10]
	0x03C8D284 ADRP X20, 0x759000
	0x03C8D288 ADRP X19, 0x466000
	0x03C8D28C LDRB W8, [X20 + 0xDA5]
	0x03C8D290 LDR X19, [X19 + 0x5F8]
	0x03C8D294 MOV V8.16B, V0.16B
	0x03C8D298 TBNZ X8, 0x0, 0x3C8D2C8
	0x03C8D29C ADRP X0, 0x466000
	0x03C8D2A0 LDR X0, [X0 + 0xA28]
	0x03C8D2A4 BL 0x1C16CF4
	0x03C8D2A8 ADRP X0, 0x466000
	0x03C8D2AC LDR X0, [X0 + 0x5F8]
	0x03C8D2B0 BL 0x1C16CF4
	0x03C8D2B4 ADRP X0, 0x4D3000
	0x03C8D2B8 LDR X0, [X0 + 0x8F0]
	0x03C8D2BC BL 0x1C16CF4
	0x03C8D2C0 MOVZ W8, 0x1
	0x03C8D2C4 STRB W8, [X20 + 0xDA5]
	0x03C8D2C8 LDR X0, [X19]
	0x03C8D2CC LDR W8, [X0 + 0xE0]
	0x03C8D2D0 CBNZ W8, 0x3C8D2D8
	0x03C8D2D4 BL 0x1C16DFC
	0x03C8D2D8 ADRP X20, 0x759000
	0x03C8D2DC LDR X8, [X20 + 0xD40]
	0x03C8D2E0 CBNZ X8, 0x3C8D2F8
	0x03C8D2E4 ADRP X0, 0xFFFFFFFFFCE92000
	0x03C8D2E8 ADD X0, X0, 0x5D3
	0x03C8D2EC BL 0x1C16CB8

ISIL:
	001 Move [X31-96], D14
	002 Move [X31+8], D13
	003 Move [X31+16], D12
	004 Move [X31+24], D11
	005 Move [X31+32], D10
	006 Move [X31+40], D9
	007 Move [X31+48], D8
	008 Move [X31+56], X30
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X22, 0x75A000
	014 Move X21, 0x467000
	015 Move W8, [X22+3474]
	016 Move X21, [X21+1528]
	017 Move W19, W1
	018 Move V8, V0
	019 Move X20, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {29}
	024 Move X0, 0x467000
	025 Move X0, [X0+1528]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X22+3474], W8
	029 Move X0, [X21]
	030 Move S14, [X20]
	031 Move S13, [X20+4]
	032 Move S12, [X20+8]
	033 Move S10, [X20+12]
	034 Move S11, [X20+16]
	035 Move S9, [X20+20]
	036 Move W8, [X0+224]
	037 Compare W8, 0
	038 JumpIfNotEqual {40}
	039 Call 0x1C17DFC
	040 Move V1, V13
	041 Move V2, V12
	042 Move V3, V10
	043 Move V4, V11
	044 Move V5, V9
	045 Move V6, V8
	046 Move W0, W19
	047 Move X20, [X31+80]
	048 Move X19, [X31+88]
	049 Move X22, [X31+64]
	050 Move X21, [X31+72]
	051 Move X30, [X31+56]
	052 Move D9, [X31+40]
	053 Move D8, [X31+48]
	054 Move D11, [X31+24]
	055 Move D10, [X31+32]
	056 Move D13, [X31+8]
	057 Move D12, [X31+16]
	058 Move V0, V14
	059 Move W1, W31
	060 Move V14, [X31+96]
	061 Call Physics.RaycastAll, X0, X1, V0, X2, X3
	062 Return X0

Method: UnityEngine.RaycastHit[] RaycastAll(UnityEngine.Ray ray, System.Single maxDistance)

Disassembly:
	0x03C8D2F0 MOV X8, X0
	0x03C8D2F4 STR X0, [X20 + 0xD40]
	0x03C8D2F8 BLR X8
	0x03C8D2FC CMP W0, 0x2
	0x03C8D300 B.NE 0x3C8D330
	0x03C8D304 LDR X0, [X19]
	0x03C8D308 LDR W8, [X0 + 0xE0]
	0x03C8D30C CBNZ W8, 0x3C8D314
	0x03C8D310 BL 0x1C16DFC
	0x03C8D314 BL 0x3C8A804
	0x03C8D318 LDP X20, X19, [X31 + 0x10]
	0x03C8D31C LDR X30, [X31 + 0x8]
	0x03C8D320 AND X0, X0, 0x0
	0x03C8D324 MOV V0.16B, V8.16B
	0x03C8D328 LDR V8, [X31], #0x20
	0x03C8D32C B 0x3C8D19C
	0x03C8D330 ADRP X8, 0x466000
	0x03C8D334 LDR X8, [X8 + 0xA28]
	0x03C8D338 ADRP X19, 0x4D3000
	0x03C8D33C LDR X0, [X8]
	0x03C8D340 LDR W8, [X0 + 0xE0]
	0x03C8D344 LDR X19, [X19 + 0x8F0]
	0x03C8D348 CBNZ W8, 0x3C8D350
	0x03C8D34C BL 0x1C16DFC
	0x03C8D350 LDR X0, [X19]
	0x03C8D354 LDP X20, X19, [X31 + 0x10]
	0x03C8D358 LDR X30, [X31 + 0x8]
	0x03C8D35C MOV X1, X31
	0x03C8D360 LDR V8, [X31], #0x20
	0x03C8D364 B 0x3C06A04
	0x03C8D368 STP X30, X19, [X31 - 0x10]!
	0x03C8D36C ADRP X19, 0x759000
	0x03C8D370 LDR X0, [X19 + 0xDA8]
	0x03C8D374 CBNZ X0, 0x3C8D388
	0x03C8D378 ADRP X0, 0xFFFFFFFFFCE9E000
	0x03C8D37C ADD X0, X0, 0x1E2
	0x03C8D380 BL 0x1C16CB8
	0x03C8D384 STR X0, [X19 + 0xDA8]
	0x03C8D388 LDP X30, X19, [X31], #0x10
	0x03C8D38C BR X0
	0x03C8D390 STP X30, X19, [X31 - 0x10]!

ISIL:
	001 Move [X31-96], D14
	002 Move [X31+16], D13
	003 Move [X31+24], D12
	004 Move [X31+32], D11
	005 Move [X31+40], D10
	006 Move [X31+48], D9
	007 Move [X31+56], D8
	008 Move [X31+64], X30
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X21, 0x75A000
	013 Move X20, 0x467000
	014 Move W8, [X21+3475]
	015 Move X20, [X20+1528]
	016 Move V8, V0
	017 Move X19, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {27}
	022 Move X0, 0x467000
	023 Move X0, [X0+1528]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X21+3475], W8
	027 Move X0, [X20]
	028 Move S12, [X19]
	029 Move S9, [X19+4]
	030 Move S10, [X19+8]
	031 Move S11, [X19+12]
	032 Move S13, [X19+16]
	033 Move S14, [X19+20]
	034 Move W8, [X0+224]
	035 Compare W8, 0
	036 JumpIfNotEqual {38}
	037 Call 0x1C17DFC
	038 Move V0, V12
	039 Move V1, V9
	040 Move V2, V10
	041 Move V3, V11
	042 Move V4, V13
	043 Move V6, V8
	044 Move X20, [X31+80]
	045 Move X19, [X31+88]
	046 Move X30, [X31+64]
	047 Move X21, [X31+72]
	048 Move D9, [X31+48]
	049 Move D8, [X31+56]
	050 Move D11, [X31+32]
	051 Move D10, [X31+40]
	052 Move D13, [X31+16]
	053 Move D12, [X31+24]
	054 Move TEMP, 4
	055 Not TEMP
	056 Move W0, TEMP
	057 Move V5, V14
	058 Move W1, W31
	059 Move V14, [X31+96]
	060 Call Physics.RaycastAll, X0, X1, V0, X2, X3
	061 Return X0

Method: UnityEngine.RaycastHit[] RaycastAll(UnityEngine.Ray ray)

Disassembly:
	0x03C8D394 ADRP X19, 0x759000
	0x03C8D398 LDR X0, [X19 + 0xDB0]
	0x03C8D39C CBNZ X0, 0x3C8D3B0
	0x03C8D3A0 ADRP X0, 0xFFFFFFFFFCE94000
	0x03C8D3A4 ADD X0, X0, 0x407
	0x03C8D3A8 BL 0x1C16CB8
	0x03C8D3AC STR X0, [X19 + 0xDB0]
	0x03C8D3B0 LDP X30, X19, [X31], #0x10
	0x03C8D3B4 BR X0
	0x03C8D3B8 STR X30, [X31 - 0x20]!
	0x03C8D3BC STP X20, X19, [X31 + 0x10]
	0x03C8D3C0 ADRP X20, 0x759000
	0x03C8D3C4 LDR X1, [X20 + 0xDB8]
	0x03C8D3C8 MOV W19, W0
	0x03C8D3CC CBNZ X1, 0x3C8D3E4
	0x03C8D3D0 ADRP X0, 0xFFFFFFFFFCE7A000
	0x03C8D3D4 ADD X0, X0, 0xA2B
	0x03C8D3D8 BL 0x1C16CB8
	0x03C8D3DC MOV X1, X0
	0x03C8D3E0 STR X0, [X20 + 0xDB8]
	0x03C8D3E4 AND W0, W19, 0x1
	0x03C8D3E8 LDP X20, X19, [X31 + 0x10]
	0x03C8D3EC LDR X30, [X31], #0x20
	0x03C8D3F0 BR X1
	0x03C8D3F4 STP X30, X19, [X31 - 0x10]!
	0x03C8D3F8 ADRP X19, 0x759000
	0x03C8D3FC LDR X0, [X19 + 0xDC0]
	0x03C8D400 CBNZ X0, 0x3C8D414
	0x03C8D404 ADRP X0, 0xFFFFFFFFFCE6C000
	0x03C8D408 ADD X0, X0, 0xB1F
	0x03C8D40C BL 0x1C16CB8
	0x03C8D410 STR X0, [X19 + 0xDC0]
	0x03C8D414 LDP X30, X19, [X31], #0x10
	0x03C8D418 BR X0
	0x03C8D41C SUB X31, X31, 0x80
	0x03C8D420 STR X30, [X31 + 0x40]
	0x03C8D424 STP X24, X23, [X31 + 0x50]
	0x03C8D428 STP X22, X21, [X31 + 0x60]
	0x03C8D42C STP X20, X19, [X31 + 0x70]

ISIL:
	001 Move [X31-80], D13
	002 Move [X31-72], D12
	003 Move [X31+16], D11
	004 Move [X31+24], D10
	005 Move [X31+32], D9
	006 Move [X31+40], D8
	007 Move [X31+48], X30
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X21, 0x75A000
	012 Move X20, 0x467000
	013 Move W8, [X21+3476]
	014 Move X20, [X20+1528]
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0x467000
	021 Move X0, [X0+1528]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+3476], W8
	025 Move X0, [X20]
	026 Move S11, [X19]
	027 Move S8, [X19+4]
	028 Move S9, [X19+8]
	029 Move S10, [X19+12]
	030 Move S12, [X19+16]
	031 Move S13, [X19+20]
	032 Move W8, [X0+224]
	033 Compare W8, 0
	034 JumpIfNotEqual {36}
	035 Call 0x1C17DFC
	036 Move V0, V11
	037 Move V1, V8
	038 Move V2, V9
	039 Move V3, V10
	040 Move X20, [X31+64]
	041 Move X19, [X31+72]
	042 Move X30, [X31+48]
	043 Move X21, [X31+56]
	044 Move D9, [X31+32]
	045 Move D8, [X31+40]
	046 Move D11, [X31+16]
	047 Move D10, [X31+24]
	048 Move W8, 0x7F800000
	049 Move TEMP, 4
	050 Not TEMP
	051 Move W0, TEMP
	052 Move S6, W8
	053 Move V4, V12
	054 Move V5, V13
	055 Move W1, W31
	056 Move D13, [X31+80]
	057 Move D12, [X31+88]
	058 Call Physics.RaycastAll, X0, X1, V0, X2, X3
	059 Return X0

Method: System.Int32 RaycastNonAlloc(UnityEngine.Ray ray, UnityEngine.RaycastHit[] results, System.Single maxDistance, System.Int32 layerMask, UnityEngine.QueryTriggerInteraction queryTriggerInteraction)

Disassembly:
	0x03C8D430 LDR V7, [X31 + 0x9]
	0x03C8D434 LDR V16, [X31 + 0x88]
	0x03C8D438 LDR X8, [X31 + 0x80]
	0x03C8D43C STP S0, S1, [X31 + 0x30]
	0x03C8D440 STR S2, [X31 + 0x38]
	0x03C8D444 STP S3, S4, [X31 + 0x20]
	0x03C8D448 STP S5, S6, [X31 + 0x28]
	0x03C8D44C ADRP X23, 0x759000
	0x03C8D450 STR X8, [X31 + 0x10]
	0x03C8D454 STR S16, [X31 + 0x18]
	0x03C8D458 STR V7, [X31]
	0x03C8D45C ADRP X24, 0x466000
	0x03C8D460 LDRB W9, [X23 + 0xDC8]
	0x03C8D464 LDR X24, [X24 + 0x5F8]
	0x03C8D468 MOV X19, X3
	0x03C8D46C MOV X20, X2
	0x03C8D470 MOV X21, X1
	0x03C8D474 MOV X22, X0
	0x03C8D478 TBNZ X9, 0x0, 0x3C8D490
	0x03C8D47C ADRP X0, 0x466000
	0x03C8D480 LDR X0, [X0 + 0x5F8]
	0x03C8D484 BL 0x1C16CF4
	0x03C8D488 MOVZ W8, 0x1
	0x03C8D48C STRB W8, [X23 + 0xDC8]
	0x03C8D490 LDR X0, [X24]
	0x03C8D494 LDR W8, [X0 + 0xE0]
	0x03C8D498 CBNZ W8, 0x3C8D4A0
	0x03C8D49C BL 0x1C16DFC
	0x03C8D4A0 ADRP X23, 0x759000
	0x03C8D4A4 LDR X8, [X23 + 0xE30]
	0x03C8D4A8 CBNZ X8, 0x3C8D4C0
	0x03C8D4AC ADRP X0, 0xFFFFFFFFFCE68000
	0x03C8D4B0 ADD X0, X0, 0x97E
	0x03C8D4B4 BL 0x1C16CB8
	0x03C8D4B8 MOV X8, X0
	0x03C8D4BC STR X0, [X23 + 0xE30]
	0x03C8D4C0 ADD X1, X31, 0x30
	0x03C8D4C4 ADD X2, X31, 0x20
	0x03C8D4C8 ADD X4, X31, 0x10
	0x03C8D4CC ADD X5, X31, 0x0
	0x03C8D4D0 MOV X0, X22
	0x03C8D4D4 MOV X3, X21
	0x03C8D4D8 MOV X6, X20

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], D8
	003 Move [X31+24], X30
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X23, 0x75A000
	011 Move X24, 0x467000
	012 Move W8, [X23+3477]
	013 Move X24, [X24+1528]
	014 Move W19, W3
	015 Move W20, W2
	016 Move V8, V0
	017 Move X21, X1
	018 Move X22, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {28}
	023 Move X0, 0x467000
	024 Move X0, [X0+1528]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X23+3477], W8
	028 Move X0, [X24]
	029 Move W8, [X0+224]
	030 Compare W8, 0
	031 JumpIfNotEqual {33}
	032 Call 0x1C17DFC
	033 Call Physics.get_defaultPhysicsScene
	034 Move [X31+8], W0
	035 Move S0, [X22]
	036 Move S1, [X22+4]
	037 Move S2, [X22+8]
	038 Move S3, [X22+12]
	039 Move S4, [X22+16]
	040 Move S5, [X22+20]
	041 Add X0, X31, 8
	042 Move X1, X21
	043 Move V6, V8
	044 Move W2, W20
	045 Move W3, W19
	046 Call PhysicsScene.Raycast, X0, X1, X2, X3, V0, X4, X5
	047 Move X20, [X31+64]
	048 Move X19, [X31+72]
	049 Move X22, [X31+48]
	050 Move X21, [X31+56]
	051 Move X24, [X31+32]
	052 Move X23, [X31+40]
	053 Move X30, [X31+24]
	054 Move V8, [X31+16]
	055 Add X31, X31, 80
	056 Return X0

Method: System.Int32 RaycastNonAlloc(UnityEngine.Ray ray, UnityEngine.RaycastHit[] results, System.Single maxDistance, System.Int32 layerMask)

Disassembly:
	0x03C8D730 MOV W3, W19
	0x03C8D734 LDP X20, X19, [X31 + 0x40]
	0x03C8D738 LDP X22, X21, [X31 + 0x30]
	0x03C8D73C LDP X30, X23, [X31 + 0x20]
	0x03C8D740 LDP D9, D8, [X31 + 0x10]
	0x03C8D744 AND X0, X0, 0x0
	0x03C8D748 MOV V0.16B, V11.16B
	0x03C8D74C MOV V1.16B, V10.16B
	0x03C8D750 LDP D11, D10, [X31], #0x50
	0x03C8D754 B 0x3C90BF0
	0x03C8D758 LDR W0, [X0]
	0x03C8D75C B 0x3C90BF0
	0x03C8D760 STP D11, D10, [X31 - 0x50]!
	0x03C8D764 STP D9, D8, [X31 + 0x10]
	0x03C8D768 STR X30, [X31 + 0x20]
	0x03C8D76C STP X22, X21, [X31 + 0x30]
	0x03C8D770 STP X20, X19, [X31 + 0x40]
	0x03C8D774 ADRP X22, 0x759000
	0x03C8D778 ADRP X21, 0x466000
	0x03C8D77C LDRB W8, [X22 + 0xDCB]
	0x03C8D780 LDR X21, [X21 + 0x5F8]
	0x03C8D784 MOV W19, W1
	0x03C8D788 MOV X20, X0
	0x03C8D78C MOV V8.16B, V3.16B
	0x03C8D790 MOV V9.16B, V2.16B
	0x03C8D794 MOV V10.16B, V1.16B
	0x03C8D798 MOV V11.16B, V0.16B
	0x03C8D79C TBNZ X8, 0x0, 0x3C8D7B4
	0x03C8D7A0 ADRP X0, 0x466000
	0x03C8D7A4 LDR X0, [X0 + 0x5F8]
	0x03C8D7A8 BL 0x1C16CF4
	0x03C8D7AC MOVZ W8, 0x1
	0x03C8D7B0 STRB W8, [X22 + 0xDCB]
	0x03C8D7B4 LDR X0, [X21]
	0x03C8D7B8 LDR W8, [X0 + 0xE0]
	0x03C8D7BC CBNZ W8, 0x3C8D7C4
	0x03C8D7C0 BL 0x1C16DFC
	0x03C8D7C4 MOV V2.16B, V9.16B

ISIL:
	001 Move [X31-64], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0x75A000
	009 Move X23, 0x467000
	010 Move W8, [X22+3478]
	011 Move X23, [X23+1528]
	012 Move W19, W2
	013 Move V8, V0
	014 Move X20, X1
	015 Move X21, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0x467000
	021 Move X0, [X0+1528]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X22+3478], W8
	025 Move X0, [X23]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 Call Physics.get_defaultPhysicsScene
	031 Move [X31+8], W0
	032 Move S0, [X21]
	033 Move S1, [X21+4]
	034 Move S2, [X21+8]
	035 Move S3, [X21+12]
	036 Move S4, [X21+16]
	037 Move S5, [X21+20]
	038 Add X0, X31, 8
	039 Move X1, X20
	040 Move V6, V8
	041 Move W2, W19
	042 Move W3, W31
	043 Call PhysicsScene.Raycast, X0, X1, X2, X3, V0, X4, X5
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X30, [X31+16]
	049 Move X23, [X31+24]
	050 Move V8, [X31+64]
	051 Return X0

Method: System.Int32 RaycastNonAlloc(UnityEngine.Ray ray, UnityEngine.RaycastHit[] results, System.Single maxDistance)

Disassembly:
	0x03C8D7C8 MOV V3.16B, V8.16B
	0x03C8D7CC MOV X0, X20
	0x03C8D7D0 MOV W1, W19
	0x03C8D7D4 LDP X20, X19, [X31 + 0x40]
	0x03C8D7D8 LDP X22, X21, [X31 + 0x30]
	0x03C8D7DC LDR X30, [X31 + 0x20]
	0x03C8D7E0 LDP D9, D8, [X31 + 0x10]
	0x03C8D7E4 MOV V0.16B, V11.16B
	0x03C8D7E8 MOV V1.16B, V10.16B
	0x03C8D7EC MOV W2, W31
	0x03C8D7F0 LDP D11, D10, [X31], #0x50
	0x03C8D7F4 B 0x3C8D6B4
	0x03C8D7F8 SUB X31, X31, 0x80
	0x03C8D7FC STP D15, D14, [X31 + 0x10]
	0x03C8D800 STP D13, D12, [X31 + 0x20]
	0x03C8D804 STP D11, D10, [X31 + 0x30]
	0x03C8D808 STP D9, D8, [X31 + 0x40]
	0x03C8D80C STP X30, X23, [X31 + 0x50]
	0x03C8D810 STP X22, X21, [X31 + 0x60]
	0x03C8D814 STP X20, X19, [X31 + 0x70]
	0x03C8D818 ADRP X23, 0x759000
	0x03C8D81C ADRP X22, 0x466000
	0x03C8D820 LDRB W8, [X23 + 0xDCC]
	0x03C8D824 LDR X22, [X22 + 0x5F8]
	0x03C8D828 MOV W19, W2
	0x03C8D82C MOV W20, W1
	0x03C8D830 MOV V8.16B, V7.16B
	0x03C8D834 MOV X21, X0
	0x03C8D838 MOV V9.16B, V6.16B
	0x03C8D83C MOV V10.16B, V5.16B
	0x03C8D840 MOV V11.16B, V4.16B
	0x03C8D844 MOV V12.16B, V3.16B
	0x03C8D848 MOV V13.16B, V2.16B
	0x03C8D84C MOV V14.16B, V1.16B
	0x03C8D850 MOV V15.16B, V0.16B
	0x03C8D854 TBNZ X8, 0x0, 0x3C8D86C
	0x03C8D858 ADRP X0, 0x466000
	0x03C8D85C LDR X0, [X0 + 0x5F8]
	0x03C8D860 BL 0x1C16CF4

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], D8
	003 Move [X31+24], X30
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x75A000
	009 Move X22, 0x467000
	010 Move W8, [X21+3479]
	011 Move X22, [X22+1528]
	012 Move V8, V0
	013 Move X19, X1
	014 Move X20, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {24}
	019 Move X0, 0x467000
	020 Move X0, [X0+1528]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X21+3479], W8
	024 Move X0, [X22]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Call Physics.get_defaultPhysicsScene
	030 Move [X31+8], W0
	031 Move S0, [X20]
	032 Move S1, [X20+4]
	033 Move S2, [X20+8]
	034 Move S3, [X20+12]
	035 Move S4, [X20+16]
	036 Move S5, [X20+20]
	037 Add X0, X31, 8
	038 Move TEMP, 4
	039 Not TEMP
	040 Move W2, TEMP
	041 Move X1, X19
	042 Move V6, V8
	043 Move W3, W31
	044 Call PhysicsScene.Raycast, X0, X1, X2, X3, V0, X4, X5
	045 Move X20, [X31+48]
	046 Move X19, [X31+56]
	047 Move X22, [X31+32]
	048 Move X21, [X31+40]
	049 Move X30, [X31+24]
	050 Move V8, [X31+16]
	051 Add X31, X31, 64
	052 Return X0

Method: System.Int32 RaycastNonAlloc(UnityEngine.Ray ray, UnityEngine.RaycastHit[] results)

Disassembly:
	0x03C8D864 MOVZ W8, 0x1
	0x03C8D868 STRB W8, [X23 + 0xDCC]
	0x03C8D86C LDR X0, [X22]
	0x03C8D870 LDR W8, [X0 + 0xE0]
	0x03C8D874 CBNZ W8, 0x3C8D87C
	0x03C8D878 BL 0x1C16DFC
	0x03C8D87C BL 0x3C8A804
	0x03C8D880 STR W0, [X31 + 0x8]
	0x03C8D884 ADD X0, X31, 0x8
	0x03C8D888 MOV V0.16B, V15.16B
	0x03C8D88C MOV V1.16B, V14.16B
	0x03C8D890 MOV V2.16B, V13.16B
	0x03C8D894 MOV V3.16B, V12.16B
	0x03C8D898 MOV V4.16B, V11.16B
	0x03C8D89C MOV V5.16B, V10.16B
	0x03C8D8A0 MOV V6.16B, V9.16B
	0x03C8D8A4 MOV X1, X21
	0x03C8D8A8 MOV V7.16B, V8.16B
	0x03C8D8AC MOV W2, W20
	0x03C8D8B0 MOV W3, W19
	0x03C8D8B4 BL 0x3C8D8DC
	0x03C8D8B8 LDP X20, X19, [X31 + 0x70]
	0x03C8D8BC LDP X22, X21, [X31 + 0x60]
	0x03C8D8C0 LDP X30, X23, [X31 + 0x50]
	0x03C8D8C4 LDP D9, D8, [X31 + 0x40]
	0x03C8D8C8 LDP D11, D10, [X31 + 0x30]
	0x03C8D8CC LDP D13, D12, [X31 + 0x20]
	0x03C8D8D0 LDP D15, D14, [X31 + 0x10]
	0x03C8D8D4 ADD X31, X31, 0x80
	0x03C8D8D8 RET
	0x03C8D8DC STP D15, D14, [X31 - 0x70]!
	0x03C8D8E0 STP D13, D12, [X31 + 0x10]
	0x03C8D8E4 STP D11, D10, [X31 + 0x20]
	0x03C8D8E8 STP D9, D8, [X31 + 0x30]
	0x03C8D8EC STP X30, X23, [X31 + 0x40]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x75A000
	007 Move X22, 0x467000
	008 Move W8, [X21+3480]
	009 Move X22, [X22+1528]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x467000
	017 Move X0, [X0+1528]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3480], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Call Physics.get_defaultPhysicsScene
	027 Move [X31+8], W0
	028 Move S0, [X20]
	029 Move S1, [X20+4]
	030 Move S2, [X20+8]
	031 Move S3, [X20+12]
	032 Move S4, [X20+16]
	033 Move S5, [X20+20]
	034 Move W8, 0x7F800000
	035 Add X0, X31, 8
	036 Move TEMP, 4
	037 Not TEMP
	038 Move W2, TEMP
	039 Move S6, W8
	040 Move X1, X19
	041 Move W3, W31
	042 Call PhysicsScene.Raycast, X0, X1, X2, X3, V0, X4, X5
	043 Move X20, [X31+32]
	044 Move X19, [X31+40]
	045 Move X22, [X31+16]
	046 Move X21, [X31+24]
	047 Move X30, [X31+48]
	048 Return X0

Method: System.Int32 RaycastNonAlloc(UnityEngine.Vector3 origin, UnityEngine.Vector3 direction, UnityEngine.RaycastHit[] results, System.Single maxDistance, System.Int32 layerMask, UnityEngine.QueryTriggerInteraction queryTriggerInteraction)

Disassembly:
	0x03C8D8F0 STP X22, X21, [X31 + 0x50]
	0x03C8D8F4 STP X20, X19, [X31 + 0x60]
	0x03C8D8F8 ADRP X23, 0x74B000
	0x03C8D8FC LDRB W8, [X23 + 0x784]
	0x03C8D900 MOV W19, W3
	0x03C8D904 MOV W20, W2
	0x03C8D908 MOV V8.16B, V7.16B
	0x03C8D90C MOV X21, X1
	0x03C8D910 MOV V9.16B, V6.16B
	0x03C8D914 MOV V10.16B, V5.16B
	0x03C8D918 MOV V11.16B, V4.16B
	0x03C8D91C MOV V12.16B, V3.16B
	0x03C8D920 MOV V13.16B, V2.16B
	0x03C8D924 MOV V14.16B, V1.16B
	0x03C8D928 MOV V15.16B, V0.16B
	0x03C8D92C MOV X22, X0
	0x03C8D930 CBNZ W8, 0x3C8D948
	0x03C8D934 ADRP X0, 0x466000
	0x03C8D938 LDR X0, [X0 + 0x5A8]
	0x03C8D93C BL 0x1C16CF4
	0x03C8D940 MOVZ W8, 0x1
	0x03C8D944 STRB W8, [X23 + 0x784]
	0x03C8D948 ADRP X8, 0x466000
	0x03C8D94C LDR X8, [X8 + 0x5A8]
	0x03C8D950 LDR X0, [X8]
	0x03C8D954 LDR W8, [X0 + 0xE0]
	0x03C8D958 CBNZ W8, 0x3C8D960
	0x03C8D95C BL 0x1C16DFC
	0x03C8D960 FMUL S0, S11, S11
	0x03C8D964 FMUL S1, S10, S10
	0x03C8D968 FMUL S2, S9, S9
	0x03C8D96C FADD S0, S0, S1
	0x03C8D970 FADD S0, S2, S0
	0x03C8D974 MOVZ W8, 0x1
	0x03C8D978 FSQRT S0, S0
	0x03C8D97C FMOV S1, W8
	0x03C8D980 FCMP S0, S1
	0x03C8D984 B.LE 0x3C8D9D8
	0x03C8D988 LDR W0, [X22]
	0x03C8D98C MOV V2.16B, V13.16B
	0x03C8D990 MOV V3.16B, V12.16B
	0x03C8D994 MOV V4.16B, V11.16B
	0x03C8D998 MOV V5.16B, V10.16B
	0x03C8D99C MOV V6.16B, V9.16B
	0x03C8D9A0 MOV X1, X21
	0x03C8D9A4 MOV V7.16B, V8.16B
	0x03C8D9A8 MOV W2, W20
	0x03C8D9AC MOV W3, W19
	0x03C8D9B0 LDP X20, X19, [X31 + 0x60]
	0x03C8D9B4 LDP X22, X21, [X31 + 0x50]
	0x03C8D9B8 LDP X30, X23, [X31 + 0x40]
	0x03C8D9BC LDP D9, D8, [X31 + 0x30]
	0x03C8D9C0 LDP D11, D10, [X31 + 0x20]

ISIL:
	001 Move [X31-112], D14
	002 Move [X31+16], D13
	003 Move [X31+24], D12
	004 Move [X31+32], D11
	005 Move [X31+40], D10
	006 Move [X31+48], D9
	007 Move [X31+56], D8
	008 Move [X31+64], X30
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X23, 0x75A000
	015 Move X22, 0x467000
	016 Move W8, [X23+3481]
	017 Move X22, [X22+1528]
	018 Move W19, W2
	019 Move W20, W1
	020 Move V8, V6
	021 Move X21, X0
	022 Move V9, V5
	023 Move V10, V4
	024 Move V11, V3
	025 Move V12, V2
	026 Move V13, V1
	027 Move V14, V0
	028 Move TEMP, X8
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfEqual {37}
	032 Move X0, 0x467000
	033 Move X0, [X0+1528]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X23+3481], W8
	037 Move X0, [X22]
	038 Move W8, [X0+224]
	039 Compare W8, 0
	040 JumpIfNotEqual {42}
	041 Call 0x1C17DFC
	042 Call Physics.get_defaultPhysicsScene
	043 Move [X31+8], W0
	044 Add X0, X31, 8
	045 Move V0, V14
	046 Move V1, V13
	047 Move V2, V12
	048 Move V3, V11
	049 Move V4, V10
	050 Move V5, V9
	051 Move X1, X21
	052 Move V6, V8
	053 Move W2, W20
	054 Move W3, W19
	055 Call PhysicsScene.Raycast, X0, X1, X2, X3, V0, X4, X5
	056 Move X20, [X31+96]
	057 Move X19, [X31+104]
	058 Move X22, [X31+80]
	059 Move X21, [X31+88]
	060 Move X30, [X31+64]
	061 Move X23, [X31+72]
	062 Move D9, [X31+48]
	063 Move D8, [X31+56]
	064 Move D11, [X31+32]
	065 Move D10, [X31+40]
	066 Move D13, [X31+16]
	067 Move D12, [X31+24]
	068 Move V14, [X31+112]
	069 Return X0

Method: System.Int32 RaycastNonAlloc(UnityEngine.Vector3 origin, UnityEngine.Vector3 direction, UnityEngine.RaycastHit[] results, System.Single maxDistance, System.Int32 layerMask)

Disassembly:
	0x03C8D9C4 LDP D13, D12, [X31 + 0x10]
	0x03C8D9C8 MOV V0.16B, V15.16B
	0x03C8D9CC MOV V1.16B, V14.16B
	0x03C8D9D0 LDP D15, D14, [X31], #0x70
	0x03C8D9D4 B 0x3C90ACC
	0x03C8D9D8 LDP X20, X19, [X31 + 0x60]
	0x03C8D9DC LDP X22, X21, [X31 + 0x50]
	0x03C8D9E0 LDP X30, X23, [X31 + 0x40]
	0x03C8D9E4 LDP D9, D8, [X31 + 0x30]
	0x03C8D9E8 LDP D11, D10, [X31 + 0x20]
	0x03C8D9EC LDP D13, D12, [X31 + 0x10]
	0x03C8D9F0 MOV W0, W31
	0x03C8D9F4 LDP D15, D14, [X31], #0x70
	0x03C8D9F8 RET
	0x03C8D9FC STP D15, D14, [X31 - 0x70]!
	0x03C8DA00 STP D13, D12, [X31 + 0x10]
	0x03C8DA04 STP D11, D10, [X31 + 0x20]
	0x03C8DA08 STP D9, D8, [X31 + 0x30]
	0x03C8DA0C STR X30, [X31 + 0x40]
	0x03C8DA10 STP X22, X21, [X31 + 0x50]
	0x03C8DA14 STP X20, X19, [X31 + 0x60]
	0x03C8DA18 ADRP X22, 0x759000
	0x03C8DA1C ADRP X21, 0x466000
	0x03C8DA20 LDRB W8, [X22 + 0xDCD]
	0x03C8DA24 LDR X21, [X21 + 0x5F8]
	0x03C8DA28 MOV W19, W1
	0x03C8DA2C MOV V8.16B, V7.16B
	0x03C8DA30 MOV X20, X0
	0x03C8DA34 MOV V9.16B, V6.16B
	0x03C8DA38 MOV V10.16B, V5.16B
	0x03C8DA3C MOV V11.16B, V4.16B
	0x03C8DA40 MOV V12.16B, V3.16B
	0x03C8DA44 MOV V13.16B, V2.16B
	0x03C8DA48 MOV V14.16B, V1.16B
	0x03C8DA4C MOV V15.16B, V0.16B
	0x03C8DA50 TBNZ X8, 0x0, 0x3C8DA68
	0x03C8DA54 ADRP X0, 0x466000
	0x03C8DA58 LDR X0, [X0 + 0x5F8]
	0x03C8DA5C BL 0x1C16CF4
	0x03C8DA60 MOVZ W8, 0x1
	0x03C8DA64 STRB W8, [X22 + 0xDCD]
	0x03C8DA68 LDR X0, [X21]
	0x03C8DA6C LDR W8, [X0 + 0xE0]
	0x03C8DA70 CBNZ W8, 0x3C8DA78
	0x03C8DA74 BL 0x1C16DFC
	0x03C8DA78 MOV V2.16B, V13.16B
	0x03C8DA7C MOV V3.16B, V12.16B
	0x03C8DA80 MOV V4.16B, V11.16B
	0x03C8DA84 MOV V5.16B, V10.16B
	0x03C8DA88 MOV V6.16B, V9.16B
	0x03C8DA8C MOV X0, X20
	0x03C8DA90 MOV V7.16B, V8.16B
	0x03C8DA94 MOV W1, W19
	0x03C8DA98 LDP X20, X19, [X31 + 0x60]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], D14
	003 Move [X31+24], D13
	004 Move [X31+32], D12
	005 Move [X31+40], D11
	006 Move [X31+48], D10
	007 Move [X31+56], D9
	008 Move [X31+64], D8
	009 Move [X31+72], X30
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X22, 0x75A000
	015 Move X21, 0x467000
	016 Move W8, [X22+3482]
	017 Move X21, [X21+1528]
	018 Move W19, W1
	019 Move V8, V6
	020 Move X20, X0
	021 Move V9, V5
	022 Move V10, V4
	023 Move V11, V3
	024 Move V12, V2
	025 Move V13, V1
	026 Move V14, V0
	027 Move TEMP, X8
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfEqual {36}
	031 Move X0, 0x467000
	032 Move X0, [X0+1528]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X22+3482], W8
	036 Move X0, [X21]
	037 Move W8, [X0+224]
	038 Compare W8, 0
	039 JumpIfNotEqual {41}
	040 Call 0x1C17DFC
	041 Call Physics.get_defaultPhysicsScene
	042 Move [X31+8], W0
	043 Add X0, X31, 8
	044 Move V0, V14
	045 Move V1, V13
	046 Move V2, V12
	047 Move V3, V11
	048 Move V4, V10
	049 Move V5, V9
	050 Move X1, X20
	051 Move V6, V8
	052 Move W2, W19
	053 Move W3, W31
	054 Call PhysicsScene.Raycast, X0, X1, X2, X3, V0, X4, X5
	055 Move X20, [X31+96]
	056 Move X19, [X31+104]
	057 Move X22, [X31+80]
	058 Move X21, [X31+88]
	059 Move X30, [X31+72]
	060 Move D9, [X31+56]
	061 Move D8, [X31+64]
	062 Move D11, [X31+40]
	063 Move D10, [X31+48]
	064 Move D13, [X31+24]
	065 Move D12, [X31+32]
	066 Move V14, [X31+16]
	067 Add X31, X31, 112
	068 Return X0

Method: System.Int32 RaycastNonAlloc(UnityEngine.Vector3 origin, UnityEngine.Vector3 direction, UnityEngine.RaycastHit[] results, System.Single maxDistance)

Disassembly:
	0x03C8DA9C LDP X22, X21, [X31 + 0x50]
	0x03C8DAA0 LDR X30, [X31 + 0x40]
	0x03C8DAA4 LDP D9, D8, [X31 + 0x30]
	0x03C8DAA8 LDP D11, D10, [X31 + 0x20]
	0x03C8DAAC LDP D13, D12, [X31 + 0x10]
	0x03C8DAB0 MOV V0.16B, V15.16B
	0x03C8DAB4 MOV V1.16B, V14.16B
	0x03C8DAB8 MOV W2, W31
	0x03C8DABC LDP D15, D14, [X31], #0x70
	0x03C8DAC0 B 0x3C8D7F8
	0x03C8DAC4 STR X30, [X31 - 0x20]!
	0x03C8DAC8 STP X20, X19, [X31 + 0x10]
	0x03C8DACC ADRP X20, 0x759000
	0x03C8DAD0 LDR X1, [X20 + 0xDD0]
	0x03C8DAD4 MOV W19, W0
	0x03C8DAD8 CBNZ X1, 0x3C8DAF0
	0x03C8DADC ADRP X0, 0xFFFFFFFFFCE9A000
	0x03C8DAE0 ADD X0, X0, 0x351
	0x03C8DAE4 BL 0x1C16CB8
	0x03C8DAE8 MOV X1, X0
	0x03C8DAEC STR X0, [X20 + 0xDD0]
	0x03C8DAF0 MOV W0, W19
	0x03C8DAF4 LDP X20, X19, [X31 + 0x10]
	0x03C8DAF8 LDR X30, [X31], #0x20
	0x03C8DAFC BR X1
	0x03C8DB00 STR X30, [X31 - 0x20]!
	0x03C8DB04 STP X20, X19, [X31 + 0x10]
	0x03C8DB08 ADRP X20, 0x759000
	0x03C8DB0C LDR X1, [X20 + 0xDD8]
	0x03C8DB10 MOV W19, W0
	0x03C8DB14 CBNZ X1, 0x3C8DB2C
	0x03C8DB18 ADRP X0, 0xFFFFFFFFFCE88000
	0x03C8DB1C ADD X0, X0, 0xFF
	0x03C8DB20 BL 0x1C16CB8
	0x03C8DB24 MOV X1, X0
	0x03C8DB28 STR X0, [X20 + 0xDD8]
	0x03C8DB2C MOV W0, W19
	0x03C8DB30 LDP X20, X19, [X31 + 0x10]
	0x03C8DB34 LDR X30, [X31], #0x20
	0x03C8DB38 BR X1
	0x03C8DB3C STP X30, X21, [X31 - 0x20]!
	0x03C8DB40 STP X20, X19, [X31 + 0x10]
	0x03C8DB44 ADRP X21, 0x759000
	0x03C8DB48 LDR X2, [X21 + 0xDE0]
	0x03C8DB4C MOV X19, X1
	0x03C8DB50 MOV X20, X0
	0x03C8DB54 CBNZ X2, 0x3C8DB6C
	0x03C8DB58 ADRP X0, 0xFFFFFFFFFCE78000
	0x03C8DB5C ADD X0, X0, 0x799

ISIL:
	001 Move [X31-96], D14
	002 Move [X31+16], D13
	003 Move [X31+24], D12
	004 Move [X31+32], D11
	005 Move [X31+40], D10
	006 Move [X31+48], D9
	007 Move [X31+56], D8
	008 Move [X31+64], X30
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X21, 0x75A000
	013 Move X20, 0x467000
	014 Move W8, [X21+3483]
	015 Move X20, [X20+1528]
	016 Move V8, V6
	017 Move X19, X0
	018 Move V9, V5
	019 Move V10, V4
	020 Move V11, V3
	021 Move V12, V2
	022 Move V13, V1
	023 Move V14, V0
	024 Move TEMP, X8
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {33}
	028 Move X0, 0x467000
	029 Move X0, [X0+1528]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X21+3483], W8
	033 Move X0, [X20]
	034 Move W8, [X0+224]
	035 Compare W8, 0
	036 JumpIfNotEqual {38}
	037 Call 0x1C17DFC
	038 Call Physics.get_defaultPhysicsScene
	039 Move [X31+8], W0
	040 Add X0, X31, 8
	041 Move TEMP, 4
	042 Not TEMP
	043 Move W2, TEMP
	044 Move V0, V14
	045 Move V1, V13
	046 Move V2, V12
	047 Move V3, V11
	048 Move V4, V10
	049 Move V5, V9
	050 Move X1, X19
	051 Move V6, V8
	052 Move W3, W31
	053 Call PhysicsScene.Raycast, X0, X1, X2, X3, V0, X4, X5
	054 Move X20, [X31+80]
	055 Move X19, [X31+88]
	056 Move X30, [X31+64]
	057 Move X21, [X31+72]
	058 Move D9, [X31+48]
	059 Move D8, [X31+56]
	060 Move D11, [X31+32]
	061 Move D10, [X31+40]
	062 Move D13, [X31+16]
	063 Move D12, [X31+24]
	064 Move V14, [X31+96]
	065 Return X0

Method: System.Int32 RaycastNonAlloc(UnityEngine.Vector3 origin, UnityEngine.Vector3 direction, UnityEngine.RaycastHit[] results)

Disassembly:
	0x03C8DB60 BL 0x1C16CB8
	0x03C8DB64 MOV X2, X0
	0x03C8DB68 STR X0, [X21 + 0xDE0]
	0x03C8DB6C MOV X0, X20
	0x03C8DB70 MOV X1, X19
	0x03C8DB74 LDP X20, X19, [X31 + 0x10]
	0x03C8DB78 LDP X30, X21, [X31], #0x20
	0x03C8DB7C BR X2
	0x03C8DB80 STP X30, X21, [X31 - 0x20]!
	0x03C8DB84 STP X20, X19, [X31 + 0x10]
	0x03C8DB88 ADRP X21, 0x759000
	0x03C8DB8C LDR X2, [X21 + 0xDE8]
	0x03C8DB90 MOV X19, X1
	0x03C8DB94 MOV X20, X0
	0x03C8DB98 CBNZ X2, 0x3C8DBB0
	0x03C8DB9C ADRP X0, 0xFFFFFFFFFCE66000
	0x03C8DBA0 ADD X0, X0, 0xB0B
	0x03C8DBA4 BL 0x1C16CB8
	0x03C8DBA8 MOV X2, X0
	0x03C8DBAC STR X0, [X21 + 0xDE8]
	0x03C8DBB0 MOV X0, X20
	0x03C8DBB4 MOV X1, X19
	0x03C8DBB8 LDP X20, X19, [X31 + 0x10]
	0x03C8DBBC LDP X30, X21, [X31], #0x20
	0x03C8DBC0 BR X2
	0x03C8DBC4 STP X30, X21, [X31 - 0x20]!
	0x03C8DBC8 STP X20, X19, [X31 + 0x10]
	0x03C8DBCC ADRP X21, 0x759000
	0x03C8DBD0 LDR X2, [X21 + 0xDF0]
	0x03C8DBD4 MOV X19, X1
	0x03C8DBD8 MOV X20, X0
	0x03C8DBDC CBNZ X2, 0x3C8DBF4
	0x03C8DBE0 ADRP X0, 0xFFFFFFFFFCE90000
	0x03C8DBE4 ADD X0, X0, 0x683
	0x03C8DBE8 BL 0x1C16CB8
	0x03C8DBEC MOV X2, X0
	0x03C8DBF0 STR X0, [X21 + 0xDF0]
	0x03C8DBF4 MOV X0, X20
	0x03C8DBF8 MOV X1, X19
	0x03C8DBFC LDP X20, X19, [X31 + 0x10]
	0x03C8DC00 LDP X30, X21, [X31], #0x20
	0x03C8DC04 BR X2
	0x03C8DC08 STR X30, [X31 - 0x20]!
	0x03C8DC0C STP X20, X19, [X31 + 0x10]
	0x03C8DC10 ADRP X19, 0x759000
	0x03C8DC14 ADRP X20, 0x466000
	0x03C8DC18 LDRB W8, [X19 + 0xDF8]
	0x03C8DC1C LDR X20, [X20 + 0x5F8]
	0x03C8DC20 TBNZ X8, 0x0, 0x3C8DC38

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+16], D13
	003 Move [X31+24], D12
	004 Move [X31+32], D11
	005 Move [X31+40], D10
	006 Move [X31+48], D9
	007 Move [X31+56], D8
	008 Move [X31+64], X30
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X21, 0x75A000
	013 Move X20, 0x467000
	014 Move W8, [X21+3484]
	015 Move X20, [X20+1528]
	016 Move X19, X0
	017 Move V8, V5
	018 Move V9, V4
	019 Move V10, V3
	020 Move V11, V2
	021 Move V12, V1
	022 Move V13, V0
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {32}
	027 Move X0, 0x467000
	028 Move X0, [X0+1528]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X21+3484], W8
	032 Move X0, [X20]
	033 Move W8, [X0+224]
	034 Compare W8, 0
	035 JumpIfNotEqual {37}
	036 Call 0x1C17DFC
	037 Call Physics.get_defaultPhysicsScene
	038 Move W8, 0x7F800000
	039 Move [X31+8], W0
	040 Add X0, X31, 8
	041 Move TEMP, 4
	042 Not TEMP
	043 Move W2, TEMP
	044 Move S6, W8
	045 Move V0, V13
	046 Move V1, V12
	047 Move V2, V11
	048 Move V3, V10
	049 Move V4, V9
	050 Move V5, V8
	051 Move X1, X19
	052 Move W3, W31
	053 Call PhysicsScene.Raycast, X0, X1, X2, X3, V0, X4, X5
	054 Move X20, [X31+80]
	055 Move X19, [X31+88]
	056 Move X30, [X31+64]
	057 Move X21, [X31+72]
	058 Move D9, [X31+48]
	059 Move D8, [X31+56]
	060 Move D11, [X31+32]
	061 Move D10, [X31+40]
	062 Move D13, [X31+16]
	063 Move D12, [X31+24]
	064 Add X31, X31, 96
	065 Return X0

Method: UnityEngine.Collider[] OverlapCapsule_Internal(UnityEngine.PhysicsScene physicsScene, UnityEngine.Vector3 point0, UnityEngine.Vector3 point1, System.Single radius, System.Int32 layerMask, UnityEngine.QueryTriggerInteraction queryTriggerInteraction)

Disassembly:
	0x03C8DC24 ADRP X0, 0x466000
	0x03C8DC28 LDR X0, [X0 + 0x5F8]
	0x03C8DC2C BL 0x1C16CF4
	0x03C8DC30 MOVZ W8, 0x1
	0x03C8DC34 STRB W8, [X19 + 0xDF8]
	0x03C8DC38 LDR X0, [X20]
	0x03C8DC3C LDR W8, [X0 + 0xE0]
	0x03C8DC40 CBNZ W8, 0x3C8DC48
	0x03C8DC44 BL 0x1C16DFC
	0x03C8DC48 ADRP X19, 0x759000
	0x03C8DC4C LDR X8, [X19 + 0xD40]
	0x03C8DC50 CBNZ X8, 0x3C8DC68
	0x03C8DC54 ADRP X0, 0xFFFFFFFFFCE92000
	0x03C8DC58 ADD X0, X0, 0x5D3
	0x03C8DC5C BL 0x1C16CB8
	0x03C8DC60 MOV X8, X0
	0x03C8DC64 STR X0, [X19 + 0xD40]
	0x03C8DC68 BLR X8
	0x03C8DC6C LDP X20, X19, [X31 + 0x10]
	0x03C8DC70 CMP W0, 0x2
	0x03C8DC74 CSET W0, NE
	0x03C8DC78 LDR X30, [X31], #0x20
	0x03C8DC7C RET
	0x03C8DC80 STP X30, X21, [X31 - 0x20]!
	0x03C8DC84 STP X20, X19, [X31 + 0x10]
	0x03C8DC88 ADRP X20, 0x759000
	0x03C8DC8C ADRP X21, 0x466000
	0x03C8DC90 LDRB W8, [X20 + 0xDF9]
	0x03C8DC94 LDR X21, [X21 + 0x5F8]
	0x03C8DC98 MOV W19, W0
	0x03C8DC9C TBNZ X8, 0x0, 0x3C8DCB4
	0x03C8DCA0 ADRP X0, 0x466000
	0x03C8DCA4 LDR X0, [X0 + 0x5F8]
	0x03C8DCA8 BL 0x1C16CF4
	0x03C8DCAC MOVZ W8, 0x1
	0x03C8DCB0 STRB W8, [X20 + 0xDF9]
	0x03C8DCB4 LDR X0, [X21]
	0x03C8DCB8 LDR W8, [X0 + 0xE0]
	0x03C8DCBC CBNZ W8, 0x3C8DCC4
	0x03C8DCC0 BL 0x1C16DFC
	0x03C8DCC4 ADRP X20, 0x759000
	0x03C8DCC8 LDR X1, [X20 + 0xD48]
	0x03C8DCCC CBNZ X1, 0x3C8DCE4
	0x03C8DCD0 ADRP X0, 0xFFFFFFFFFCE64000
	0x03C8DCD4 ADD X0, X0, 0x765
	0x03C8DCD8 BL 0x1C16CB8
	0x03C8DCDC MOV X1, X0
	0x03C8DCE0 STR X0, [X20 + 0xD48]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+48], D8
	003 Move [X31+56], X30
	004 Move [X31+64], X22
	005 Move [X31+72], X21
	006 Move [X31+80], X20
	007 Move [X31+88], X19
	008 Move [X31+40], W0
	009 Move [X31+24], S0
	010 Move [X31+32], S1
	011 Move [X31+32], S2
	012 Move X21, 0x75A000
	013 Move [X31+8], S3
	014 Move [X31+16], S4
	015 Move [X31+16], S5
	016 Move X22, 0x467000
	017 Move W8, [X21+3485]
	018 Move X22, [X22+1528]
	019 Move W19, W2
	020 Move W20, W1
	021 Move V8, V6
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {31}
	026 Move X0, 0x467000
	027 Move X0, [X0+1528]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X21+3485], W8
	031 Move X0, [X22]
	032 Move W8, [X0+224]
	033 Compare W8, 0
	034 JumpIfNotEqual {36}
	035 Call 0x1C17DFC
	036 Move X21, 0x75A000
	037 Move X8, [X21+3608]
	038 Compare X8, 0
	039 JumpIfNotEqual {45}
	040 Move X0, -51916800
	041 Add X0, X0, 3044
	042 Call 0x1C17CB8
	043 Move X8, X0
	044 Move [X21+3608], X0
	045 Add X0, X31, 40
	046 Add X1, X31, 24
	047 Add X2, X31, 8
	048 Move V0, V8
	049 Move W3, W20
	050 Move W4, W19
	051 NotImplemented "Instruction BLR not yet implemented."
	052 Move X20, [X31+80]
	053 Move X19, [X31+88]
	054 Move X22, [X31+64]
	055 Move X21, [X31+72]
	056 Move X30, [X31+56]
	057 Move V8, [X31+48]
	058 Add X31, X31, 96
	059 Return X0

Method: UnityEngine.Collider[] OverlapCapsule(UnityEngine.Vector3 point0, UnityEngine.Vector3 point1, System.Single radius, System.Int32 layerMask, UnityEngine.QueryTriggerInteraction queryTriggerInteraction)

Disassembly:
	0x03C8DD60 ADRP X23, 0x4D3000
	0x03C8DD64 MOVZ W2, 0x1
	0x03C8DD68 LDR X3, [X8]
	0x03C8DD6C LDR X22, [X22 + 0x5F8]
	0x03C8DD70 LDR X23, [X23 + 0x900]
	0x03C8DD74 MOV X0, X21
	0x03C8DD78 MOV W1, W20
	0x03C8DD7C BL 0x22223B8
	0x03C8DD80 MOV X8, X0
	0x03C8DD84 LDR X0, [X22]
	0x03C8DD88 STP X8, X1, [X31 + 0x10]
	0x03C8DD8C LDR W8, [X0 + 0xE0]
	0x03C8DD90 CBNZ W8, 0x3C8DD9C
	0x03C8DD94 BL 0x1C16DFC
	0x03C8DD98 LDR X0, [X22]
	0x03C8DD9C LDR X8, [X0 + 0xB8]
	0x03C8DDA0 LDR X20, [X8 + 0x10]
	0x03C8DDA4 CBZ X20, 0x3C8DDD0
	0x03C8DDA8 LDR X1, [X23]
	0x03C8DDAC ADD X0, X31, 0x10
	0x03C8DDB0 BL 0x23CD524
	0x03C8DDB4 MOV X2, X0
	0x03C8DDB8 LDR X0, [X20 + 0x40]
	0x03C8DDBC LDR X8, [X20 + 0x18]
	0x03C8DDC0 LDR X4, [X20 + 0x28]
	0x03C8DDC4 MOV X3, X1
	0x03C8DDC8 AND X1, X19, 0x0
	0x03C8DDCC BLR X8
	0x03C8DDD0 MOV X19, X31
	0x03C8DDD4 LDR X1, [X23]
	0x03C8DDD8 ADD X0, X31, 0x10
	0x03C8DDDC BL 0x23CD524
	0x03C8DDE0 MOV X20, X0
	0x03C8DDE4 LDR X0, [X22]
	0x03C8DDE8 MOV X21, X1
	0x03C8DDEC LDR W8, [X0 + 0xE0]
	0x03C8DDF0 CBNZ W8, 0x3C8DDF8
	0x03C8DDF4 BL 0x1C16DFC
	0x03C8DDF8 MOV X0, X20
	0x03C8DDFC MOV X1, X21
	0x03C8DE00 BL 0x3C8DF54
	0x03C8DE04 CBNZ X19, 0x3C8DE1C
	0x03C8DE08 LDP X20, X19, [X31 + 0x40]
	0x03C8DE0C LDP X22, X21, [X31 + 0x30]
	0x03C8DE10 LDP X30, X23, [X31 + 0x20]
	0x03C8DE14 ADD X31, X31, 0x50
	0x03C8DE18 RET
	0x03C8DE1C MOV X0, X19
	0x03C8DE20 BL 0x1C16F18

ISIL:
	001 Move [X31-96], D14
	002 Move [X31+8], D13
	003 Move [X31+16], D12
	004 Move [X31+24], D11
	005 Move [X31+32], D10
	006 Move [X31+40], D9
	007 Move [X31+48], D8
	008 Move [X31+56], X30
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X22, 0x75A000
	014 Move X21, 0x467000
	015 Move W8, [X22+3486]
	016 Move X21, [X21+1528]
	017 Move W19, W1
	018 Move W20, W0
	019 Move V8, V6
	020 Move V9, V5
	021 Move V10, V4
	022 Move V11, V3
	023 Move V12, V2
	024 Move V13, V1
	025 Move V14, V0
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {35}
	030 Move X0, 0x467000
	031 Move X0, [X0+1528]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X22+3486], W8
	035 Move X0, [X21]
	036 Move W8, [X0+224]
	037 Compare W8, 0
	038 JumpIfNotEqual {40}
	039 Call 0x1C17DFC
	040 Call Physics.get_defaultPhysicsScene
	041 Move V1, V13
	042 Move V2, V12
	043 Move V3, V11
	044 Move V4, V10
	045 Move V5, V9
	046 Move V6, V8
	047 Move W1, W20
	048 Move W2, W19
	049 Move X20, [X31+80]
	050 Move X19, [X31+88]
	051 Move X22, [X31+64]
	052 Move X21, [X31+72]
	053 Move X30, [X31+56]
	054 Move D9, [X31+40]
	055 Move D8, [X31+48]
	056 Move D11, [X31+24]
	057 Move D10, [X31+32]
	058 Move D13, [X31+8]
	059 Move D12, [X31+16]
	060 And X0, X0, 0
	061 Move V0, V14
	062 Move V14, [X31+96]
	063 Call Physics.OverlapCapsule_Internal, X0, X1, X2, V0, X3, X4
	064 Return X0

Method: UnityEngine.Collider[] OverlapCapsule(UnityEngine.Vector3 point0, UnityEngine.Vector3 point1, System.Single radius, System.Int32 layerMask)

Disassembly:
	0x03C8DE24 B 0x3C8DE2C
	0x03C8DE28 B 0x3C8DE2C
	0x03C8DE2C MOV X19, X0
	0x03C8DE30 CMP W1, 0x1
	0x03C8DE34 B.NE 0x3C8DED4
	0x03C8DE38 MOV X0, X19
	0x03C8DE3C BL 0x3EB1AD0
	0x03C8DE40 MOV X19, X0
	0x03C8DE44 ADRP X0, 0x466000
	0x03C8DE48 LDR X0, [X0 + 0x7D0]
	0x03C8DE4C BL 0x1C16D08
	0x03C8DE50 LDR X8, [X19]
	0x03C8DE54 LDR X1, [X8]
	0x03C8DE58 BL 0x1C17270
	0x03C8DE5C TBZ X0, 0x0, 0x3C8DE94
	0x03C8DE60 LDR X19, [X19]
	0x03C8DE64 BL 0x3EB1AE0
	0x03C8DE68 ADRP X0, 0x466000
	0x03C8DE6C LDR X0, [X0 + 0xA28]
	0x03C8DE70 BL 0x1C16D08
	0x03C8DE74 LDR W8, [X0 + 0xE0]
	0x03C8DE78 CBNZ W8, 0x3C8DE80
	0x03C8DE7C BL 0x1C16DFC
	0x03C8DE80 MOV X0, X19
	0x03C8DE84 MOV X1, X31
	0x03C8DE88 BL 0x3C0649C
	0x03C8DE8C MOV X19, X31
	0x03C8DE90 B 0x3C8DDD4
	0x03C8DE94 MOVZ W0, 0x8
	0x03C8DE98 BL 0x3EB1AF0
	0x03C8DE9C LDR X8, [X19]
	0x03C8DEA0 STR X8, [X0]
	0x03C8DEA4 ADRP X1, 0x227000
	0x03C8DEA8 ADD X1, X1, 0xE58
	0x03C8DEAC MOV X2, X31
	0x03C8DEB0 BL 0x3EB1B00
	0x03C8DEB4 MOV X19, X0
	0x03C8DEB8 B 0x3C8DED4
	0x03C8DEBC MOV X19, X0
	0x03C8DEC0 B 0x3C8DED4
	0x03C8DEC4 MOV X20, X1
	0x03C8DEC8 MOV X19, X0
	0x03C8DECC BL 0x3EB1AE0
	0x03C8DED0 MOV W1, W20

ISIL:
	001 Move [X31-96], D14
	002 Move [X31+16], D13
	003 Move [X31+24], D12
	004 Move [X31+32], D11
	005 Move [X31+40], D10
	006 Move [X31+48], D9
	007 Move [X31+56], D8
	008 Move [X31+64], X30
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X21, 0x75A000
	013 Move X20, 0x467000
	014 Move W8, [X21+3487]
	015 Move X20, [X20+1528]
	016 Move W19, W0
	017 Move V8, V6
	018 Move V9, V5
	019 Move V10, V4
	020 Move V11, V3
	021 Move V12, V2
	022 Move V13, V1
	023 Move V14, V0
	024 Move TEMP, X8
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {33}
	028 Move X0, 0x467000
	029 Move X0, [X0+1528]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X21+3487], W8
	033 Move X0, [X20]
	034 Move W8, [X0+224]
	035 Compare W8, 0
	036 JumpIfNotEqual {38}
	037 Call 0x1C17DFC
	038 Move V1, V13
	039 Move V2, V12
	040 Move V3, V11
	041 Move V4, V10
	042 Move V5, V9
	043 Move V6, V8
	044 Move W0, W19
	045 Move X20, [X31+80]
	046 Move X19, [X31+88]
	047 Move X30, [X31+64]
	048 Move X21, [X31+72]
	049 Move D9, [X31+48]
	050 Move D8, [X31+56]
	051 Move D11, [X31+32]
	052 Move D10, [X31+40]
	053 Move D13, [X31+16]
	054 Move D12, [X31+24]
	055 Move V0, V14
	056 Move W1, W31
	057 Move V14, [X31+96]
	058 Call Physics.OverlapCapsule, X0, X1, V0, X2, X3
	059 Return X0

Method: UnityEngine.Collider[] OverlapSphere_Internal(UnityEngine.PhysicsScene physicsScene, UnityEngine.Vector3 position, System.Single radius, System.Int32 layerMask, UnityEngine.QueryTriggerInteraction queryTriggerInteraction)

Disassembly:
	0x03C8DED4 MOVZ W8, 0x1
	0x03C8DED8 CMP W1, W8
	0x03C8DEDC B.NE 0x3C8DEFC
	0x03C8DEE0 MOV X0, X19
	0x03C8DEE4 BL 0x3EB1AD0
	0x03C8DEE8 LDR X8, [X0]
	0x03C8DEEC STR X8, [X31 + 0x8]
	0x03C8DEF0 BL 0x3EB1AE0
	0x03C8DEF4 LDR X19, [X31 + 0x8]
	0x03C8DEF8 B 0x3C8DDD4
	0x03C8DEFC STR X31, [X31 + 0x8]
	0x03C8DF00 B 0x3C8DF08
	0x03C8DF04 MOV X19, X0
	0x03C8DF08 LDR X1, [X23]
	0x03C8DF0C ADD X0, X31, 0x10
	0x03C8DF10 BL 0x23CD524
	0x03C8DF14 MOV X20, X0
	0x03C8DF18 LDR X0, [X22]
	0x03C8DF1C MOV X21, X1
	0x03C8DF20 LDR W8, [X0 + 0xE0]
	0x03C8DF24 CBNZ W8, 0x3C8DF2C
	0x03C8DF28 BL 0x1C16DFC
	0x03C8DF2C MOV X0, X20
	0x03C8DF30 MOV X1, X21
	0x03C8DF34 BL 0x3C8DF54
	0x03C8DF38 LDR X8, [X31 + 0x8]
	0x03C8DF3C CBNZ X8, 0x3C8DF48
	0x03C8DF40 MOV X0, X19
	0x03C8DF44 BL 0x1D2C690
	0x03C8DF48 LDR X0, [X31 + 0x8]
	0x03C8DF4C BL 0x1C16F18
	0x03C8DF50 BL 0x1990590
	0x03C8DF54 SUB X31, X31, 0x110
	0x03C8DF58 STP X29, X30, [X31 + 0xB0]
	0x03C8DF5C STP X28, X27, [X31 + 0xC0]
	0x03C8DF60 STP X26, X25, [X31 + 0xD0]
	0x03C8DF64 STP X24, X23, [X31 + 0xE0]
	0x03C8DF68 STP X22, X21, [X31 + 0xF0]
	0x03C8DF6C STP X20, X19, [X31 + 0x100]
	0x03C8DF70 STR X0, [X31 + 0x18]
	0x03C8DF74 ADRP X19, 0x759000
	0x03C8DF78 ADRP X28, 0x466000
	0x03C8DF7C LDRB W8, [X19 + 0xDFB]
	0x03C8DF80 LDR X28, [X28 + 0x5F8]
	0x03C8DF84 MOV X20, X1

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], D8
	003 Move [X31+40], X30
	004 Move [X31+48], X22
	005 Move [X31+56], X21
	006 Move [X31+64], X20
	007 Move [X31+72], X19
	008 Move [X31+24], W0
	009 Move X21, 0x75A000
	010 Move [X31+8], S0
	011 Move [X31+16], S1
	012 Move [X31+16], S2
	013 Move X22, 0x467000
	014 Move W8, [X21+3488]
	015 Move X22, [X22+1528]
	016 Move W19, W2
	017 Move W20, W1
	018 Move V8, V3
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {28}
	023 Move X0, 0x467000
	024 Move X0, [X0+1528]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X21+3488], W8
	028 Move X0, [X22]
	029 Move W8, [X0+224]
	030 Compare W8, 0
	031 JumpIfNotEqual {33}
	032 Call 0x1C17DFC
	033 Move X21, 0x75A000
	034 Move X8, [X21+3616]
	035 Compare X8, 0
	036 JumpIfNotEqual {42}
	037 Move X0, -51785728
	038 Add X0, X0, 77
	039 Call 0x1C17CB8
	040 Move X8, X0
	041 Move [X21+3616], X0
	042 Add X0, X31, 24
	043 Add X1, X31, 8
	044 Move V0, V8
	045 Move W2, W20
	046 Move W3, W19
	047 NotImplemented "Instruction BLR not yet implemented."
	048 Move X20, [X31+64]
	049 Move X19, [X31+72]
	050 Move X22, [X31+48]
	051 Move X21, [X31+56]
	052 Move X30, [X31+40]
	053 Move V8, [X31+32]
	054 Add X31, X31, 80
	055 Return X0

Method: UnityEngine.Collider[] OverlapSphere(UnityEngine.Vector3 position, System.Single radius, System.Int32 layerMask, UnityEngine.QueryTriggerInteraction queryTriggerInteraction)

Disassembly:
	0x03C8DFF4 BL 0x1C16CB8
	0x03C8DFF8 MOV X8, X0
	0x03C8DFFC STR X0, [X19 + 0xD50]
	0x03C8E000 BLR X8
	0x03C8E004 TBZ X0, 0x0, 0x3C8E304
	0x03C8E008 CMP W20, 0x1
	0x03C8E00C B.LT 0x3C8E304
	0x03C8E010 AND X8, X20, 0x0
	0x03C8E014 STR X8, [X31 + 0x10]
	0x03C8E018 ADRP X19, 0x465000
	0x03C8E01C LDR X19, [X19 + 0x598]
	0x03C8E020 MOV X29, X31
	0x03C8E024 ADRP X20, 0x758000
	0x03C8E028 ADRP X21, 0x758000
	0x03C8E02C ADRP X22, 0x758000
	0x03C8E030 ADRP X8, 0x4D2000
	0x03C8E034 LDR X8, [X8 + 0x908]
	0x03C8E038 MOVI V0.2D, 0x0
	0x03C8E03C STR X31, [X31 + 0xA0]
	0x03C8E040 STP V0, V0, [X31 + 0x80]
	0x03C8E044 LDR X8, [X8]
	0x03C8E048 LDR X0, [X8 + 0x20]
	0x03C8E04C LDRB W8, [X0 + 0x135]
	0x03C8E050 TBNZ X8, 0x0, 0x3C8E058
	0x03C8E054 BL 0x1C5C684
	0x03C8E058 LDR X8, [X31 + 0x18]
	0x03C8E05C MOVZ W9, 0x28
	0x03C8E060 MADD X8, X29, X9, X8
	0x03C8E064 LDP V1, V0, [X8]
	0x03C8E068 LDR X9, [X8 + 0x20]
	0x03C8E06C STP V1, V0, [X31 + 0x20]
	0x03C8E070 LDRB W8, [X31 + 0x34]
	0x03C8E074 STR X9, [X31 + 0x40]
	0x03C8E078 ANDS W31, W8, 0x3
	0x03C8E07C B.NE 0x3C8E2F4
	0x03C8E080 LDR W8, [X31 + 0x30]
	0x03C8E084 CBZ W8, 0x3C8E2F4
	0x03C8E088 MOV W23, W31
	0x03C8E08C ADD X0, X31, 0x20

ISIL:
	001 Move [X31-80], D11
	002 Move [X31-72], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X22, 0x759000
	011 Move X21, 0x466000
	012 Move W8, [X22+3489]
	013 Move X21, [X21+1528]
	014 Move W19, W1
	015 Move W20, W0
	016 Move V8, V3
	017 Move V9, V2
	018 Move V10, V1
	019 Move V11, V0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {29}
	024 Move X0, 0x466000
	025 Move X0, [X0+1528]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X22+3489], W8
	029 Move X0, [X21]
	030 Move W8, [X0+224]
	031 Compare W8, 0
	032 JumpIfNotEqual {34}
	033 Call 0x1C17DFC
	034 Call Physics.get_defaultPhysicsScene
	035 Move V2, V9
	036 Move V3, V8
	037 Move W1, W20
	038 Move W2, W19
	039 Move X20, [X31+64]
	040 Move X19, [X31+72]
	041 Move X22, [X31+48]
	042 Move X21, [X31+56]
	043 Move X30, [X31+32]
	044 Move D9, [X31+16]
	045 Move D8, [X31+24]
	046 And X0, X0, 0
	047 Move V0, V11
	048 Move V1, V10
	049 Move D11, [X31+80]
	050 Move D10, [X31+88]
	051 Call Physics.OverlapSphere_Internal, X0, X1, V0, X2, X3
	052 Return X0

Method: UnityEngine.Collider[] OverlapSphere(UnityEngine.Vector3 position, System.Single radius, System.Int32 layerMask)

Disassembly:
	0x03C8E090 MOV W1, W23
	0x03C8E094 BL 0x3C90FAC
	0x03C8E098 LDRB W8, [X0 + 0x14]
	0x03C8E09C ANDS W31, W8, 0x3
	0x03C8E0A0 B.NE 0x3C8E2E0
	0x03C8E0A4 MOV X24, X0
	0x03C8E0A8 ADD X0, X31, 0x20
	0x03C8E0AC BL 0x3C8A0F8
	0x03C8E0B0 MOV X26, X0
	0x03C8E0B4 ADD X0, X31, 0x20
	0x03C8E0B8 BL 0x3C8A080
	0x03C8E0BC LDR X8, [X19]
	0x03C8E0C0 MOV X25, X0
	0x03C8E0C4 LDR W9, [X8 + 0xE0]
	0x03C8E0C8 CBNZ W9, 0x3C8E0D4
	0x03C8E0CC MOV X0, X8
	0x03C8E0D0 BL 0x1C16DFC
	0x03C8E0D4 MOV X0, X26
	0x03C8E0D8 MOV X1, X31
	0x03C8E0DC MOV X2, X31
	0x03C8E0E0 BL 0x3C354F8
	0x03C8E0E4 TBNZ X0, 0x0, 0x3C8E0F4
	0x03C8E0E8 MOV X0, X24
	0x03C8E0EC BL 0x3C8A210
	0x03C8E0F0 MOV X26, X0
	0x03C8E0F4 LDR X0, [X19]
	0x03C8E0F8 LDR W8, [X0 + 0xE0]
	0x03C8E0FC CBNZ W8, 0x3C8E104
	0x03C8E100 BL 0x1C16DFC
	0x03C8E104 MOV X0, X25
	0x03C8E108 MOV X1, X31
	0x03C8E10C MOV X2, X31
	0x03C8E110 BL 0x3C354F8
	0x03C8E114 TBNZ X0, 0x0, 0x3C8E124

ISIL:
	001 Move [X31-64], D11
	002 Move [X31-56], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X21, 0x759000
	010 Move X20, 0x466000
	011 Move W8, [X21+3490]
	012 Move X20, [X20+1528]
	013 Move W19, W0
	014 Move V8, V3
	015 Move V9, V2
	016 Move V10, V1
	017 Move V11, V0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {27}
	022 Move X0, 0x466000
	023 Move X0, [X0+1528]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X21+3490], W8
	027 Move X0, [X20]
	028 Move W8, [X0+224]
	029 Compare W8, 0
	030 JumpIfNotEqual {32}
	031 Call 0x1C17DFC
	032 Move V2, V9
	033 Move V3, V8
	034 Move W0, W19
	035 Move X20, [X31+48]
	036 Move X19, [X31+56]
	037 Move X30, [X31+32]
	038 Move X21, [X31+40]
	039 Move D9, [X31+16]
	040 Move D8, [X31+24]
	041 Move V0, V11
	042 Move V1, V10
	043 Move W1, W31
	044 Move D11, [X31+64]
	045 Move D10, [X31+72]
	046 Call Physics.OverlapSphere, X0, V0, X1, X2
	047 Return X0

Method: UnityEngine.Collider[] OverlapSphere(UnityEngine.Vector3 position, System.Single radius)

Disassembly:
	0x03C8E118 MOV X0, X24
	0x03C8E11C BL 0x3C8A184
	0x03C8E120 MOV X25, X0
	0x03C8E124 LDRH W8, [X24 + 0x16]
	0x03C8E128 TBNZ X8, 0x2, 0x3C8E138
	0x03C8E12C TBNZ X8, 0x3, 0x3C8E1C8
	0x03C8E130 TBNZ X8, 0x4, 0x3C8E258
	0x03C8E134 B 0x3C8E2E0
	0x03C8E138 LDR X0, [X28]
	0x03C8E13C LDR W8, [X0 + 0xE0]
	0x03C8E140 CBNZ W8, 0x3C8E148
	0x03C8E144 BL 0x1C16DFC
	0x03C8E148 ADD X0, X31, 0x20
	0x03C8E14C MOV X1, X24
	0x03C8E150 MOV W2, W31
	0x03C8E154 BL 0x3C8E354
	0x03C8E158 LDR X8, [X22 + 0xDE0]
	0x03C8E15C MOV X27, X0
	0x03C8E160 CBNZ X8, 0x3C8E178
	0x03C8E164 ADRP X0, 0xFFFFFFFFFCE77000
	0x03C8E168 ADD X0, X0, 0x799
	0x03C8E16C BL 0x1C16CB8
	0x03C8E170 MOV X8, X0
	0x03C8E174 STR X0, [X22 + 0xDE0]
	0x03C8E178 MOV X0, X26
	0x03C8E17C MOV X1, X27
	0x03C8E180 BLR X8
	0x03C8E184 ADD X0, X31, 0x20
	0x03C8E188 MOVZ W2, 0x1
	0x03C8E18C MOV X1, X24
	0x03C8E190 BL 0x3C8E354
	0x03C8E194 LDR X8, [X22 + 0xDE0]
	0x03C8E198 MOV X27, X0

ISIL:
	001 Move [X31-64], D11
	002 Move [X31-56], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0x759000
	009 Move X19, 0x466000
	010 Move W8, [X20+3491]
	011 Move X19, [X19+1528]
	012 Move V8, V3
	013 Move V9, V2
	014 Move V10, V1
	015 Move V11, V0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0x466000
	021 Move X0, [X0+1528]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X20+3491], W8
	025 Move X0, [X19]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 Move V2, V9
	031 Move V3, V8
	032 Move X20, [X31+48]
	033 Move X19, [X31+56]
	034 Move X30, [X31+32]
	035 Move D9, [X31+16]
	036 Move D8, [X31+24]
	037 Move TEMP, 0
	038 Not TEMP
	039 Move W0, TEMP
	040 Move V0, V11
	041 Move V1, V10
	042 Move W1, W31
	043 Move D11, [X31+64]
	044 Move D10, [X31+72]
	045 Call Physics.OverlapSphere, X0, V0, X1, X2
	046 Return X0

Method: System.Void Simulate_Internal(UnityEngine.PhysicsScene physicsScene, System.Single step)

Disassembly:
	0x03C8E19C CBNZ X8, 0x3C8E1B4
	0x03C8E1A0 ADRP X0, 0xFFFFFFFFFCE77000
	0x03C8E1A4 ADD X0, X0, 0x799
	0x03C8E1A8 BL 0x1C16CB8
	0x03C8E1AC MOV X8, X0
	0x03C8E1B0 STR X0, [X22 + 0xDE0]
	0x03C8E1B4 MOV X0, X25
	0x03C8E1B8 MOV X1, X27
	0x03C8E1BC BLR X8
	0x03C8E1C0 LDRH W8, [X24 + 0x16]
	0x03C8E1C4 TBZ X8, 0x3, 0x3C8E130
	0x03C8E1C8 LDR X0, [X28]
	0x03C8E1CC LDR W8, [X0 + 0xE0]
	0x03C8E1D0 CBNZ W8, 0x3C8E1D8
	0x03C8E1D4 BL 0x1C16DFC
	0x03C8E1D8 ADD X0, X31, 0x20
	0x03C8E1DC MOV X1, X24
	0x03C8E1E0 MOV W2, W31
	0x03C8E1E4 BL 0x3C8E354
	0x03C8E1E8 LDR X8, [X21 + 0xDE8]
	0x03C8E1EC MOV X27, X0
	0x03C8E1F0 CBNZ X8, 0x3C8E208
	0x03C8E1F4 ADRP X0, 0xFFFFFFFFFCE65000
	0x03C8E1F8 ADD X0, X0, 0xB0B
	0x03C8E1FC BL 0x1C16CB8
	0x03C8E200 MOV X8, X0
	0x03C8E204 STR X0, [X21 + 0xDE8]
	0x03C8E208 MOV X0, X26
	0x03C8E20C MOV X1, X27
	0x03C8E210 BLR X8
	0x03C8E214 ADD X0, X31, 0x20
	0x03C8E218 MOVZ W2, 0x1
	0x03C8E21C MOV X1, X24
	0x03C8E220 BL 0x3C8E354
	0x03C8E224 LDR X8, [X21 + 0xDE8]
	0x03C8E228 MOV X27, X0

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], D8
	003 Move [X31+24], X30
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, 0x759000
	007 Move [X31+8], W0
	008 Move X20, 0x466000
	009 Move W8, [X19+3492]
	010 Move X20, [X20+1528]
	011 Move V8, V0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x466000
	017 Move X0, [X0+1528]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X19+3492], W8
	021 Move X0, [X20]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move X19, 0x759000
	027 Move X8, [X19+3624]
	028 Compare X8, 0
	029 JumpIfNotEqual {35}
	030 Move X0, -51789824
	031 Add X0, X0, 241
	032 Call 0x1C17CB8
	033 Move X8, X0
	034 Move [X19+3624], X0
	035 Add X0, X31, 8
	036 Move V0, V8
	037 NotImplemented "Instruction BLR not yet implemented."
	038 Move X20, [X31+32]
	039 Move X19, [X31+40]
	040 Move X30, [X31+24]
	041 Move V8, [X31+16]
	042 Add X31, X31, 48
	043 Return 

Method: System.Void Simulate(System.Single step)

Disassembly:
	0x03C8E278 LDR X8, [X20 + 0xDF0]
	0x03C8E27C MOV X27, X0
	0x03C8E280 CBNZ X8, 0x3C8E298
	0x03C8E284 ADRP X0, 0xFFFFFFFFFCE8F000
	0x03C8E288 ADD X0, X0, 0x683
	0x03C8E28C BL 0x1C16CB8
	0x03C8E290 MOV X8, X0
	0x03C8E294 STR X0, [X20 + 0xDF0]
	0x03C8E298 MOV X0, X26
	0x03C8E29C MOV X1, X27
	0x03C8E2A0 BLR X8
	0x03C8E2A4 ADD X0, X31, 0x20
	0x03C8E2A8 MOVZ W2, 0x1
	0x03C8E2AC MOV X1, X24
	0x03C8E2B0 BL 0x3C8E354
	0x03C8E2B4 LDR X8, [X20 + 0xDF0]
	0x03C8E2B8 MOV X24, X0
	0x03C8E2BC CBNZ X8, 0x3C8E2D4
	0x03C8E2C0 ADRP X0, 0xFFFFFFFFFCE8F000
	0x03C8E2C4 ADD X0, X0, 0x683
	0x03C8E2C8 BL 0x1C16CB8
	0x03C8E2CC MOV X8, X0
	0x03C8E2D0 STR X0, [X20 + 0xDF0]
	0x03C8E2D4 MOV X0, X25
	0x03C8E2D8 MOV X1, X24
	0x03C8E2DC BLR X8
	0x03C8E2E0 LDR W8, [X31 + 0x30]
	0x03C8E2E4 ADD W23, W23, 0x1
	0x03C8E2E8 SXTW X9, W23
	0x03C8E2EC CMP X9, X8
	0x03C8E2F0 B.LT 0x3C8E08C
	0x03C8E2F4 LDR X8, [X31 + 0x10]
	0x03C8E2F8 ADD X29, X29, 0x1
	0x03C8E2FC CMP X29, X8
	0x03C8E300 B.NE 0x3C8E030
	0x03C8E304 LDP X20, X19, [X31 + 0x100]
	0x03C8E308 LDP X22, X21, [X31 + 0xF0]
	0x03C8E30C LDP X24, X23, [X31 + 0xE0]
	0x03C8E310 LDP X26, X25, [X31 + 0xD0]
	0x03C8E314 LDP X28, X27, [X31 + 0xC0]
	0x03C8E318 LDP X29, X30, [X31 + 0xB0]
	0x03C8E31C ADD X31, X31, 0x110
	0x03C8E320 RET
	0x03C8E324 LDRB W8, [X0 + 0x14]
	0x03C8E328 ANDS W31, W8, 0x3
	0x03C8E32C CSET W0, NE
	0x03C8E330 RET
	0x03C8E334 B 0x3C90FAC
	0x03C8E338 LDRB W8, [X0 + 0x14]
	0x03C8E33C ANDS W31, W8, 0x3
	0x03C8E340 CSET W0, NE
	0x03C8E344 RET
	0x03C8E348 LDRB W8, [X0 + 0x16]
	0x03C8E34C UBFM W0, W8, 0x2, 0x2
	0x03C8E350 RET
	0x03C8E354 STP X30, X23, [X31 - 0x30]!
	0x03C8E358 STP X22, X21, [X31 + 0x10]
	0x03C8E35C STP X20, X19, [X31 + 0x20]
	0x03C8E360 ADRP X23, 0x758000
	0x03C8E364 ADRP X22, 0x465000

ISIL:
	001 Move [X31-32], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x759000
	006 Move X19, 0x466000
	007 Move W8, [X20+3493]
	008 Move X19, [X19+1528]
	009 Move V8, V0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {25}
	014 Move X0, 0x466000
	015 Move X0, [X0+2600]
	016 Call 0x1C17CF4
	017 Move X0, 0x466000
	018 Move X0, [X0+1528]
	019 Call 0x1C17CF4
	020 Move X0, 0x4D3000
	021 Move X0, [X0+2288]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X20+3493], W8
	025 Move X0, [X19]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 Move X20, 0x759000
	031 Move X8, [X20+3392]
	032 Compare X8, 0
	033 JumpIfNotEqual {39}
	034 Move X0, -51830784
	035 Add X0, X0, 1491
	036 Call 0x1C17CB8
	037 Move X8, X0
	038 Move [X20+3392], X0
	039 NotImplemented "Instruction BLR not yet implemented."
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Move X0, [X19]
	042 Move W8, [X0+224]
	043 Compare W8, 0
	044 JumpIfNotEqual {46}
	045 Call 0x1C17DFC
	046 Call Physics.get_defaultPhysicsScene
	047 Move X20, [X31+16]
	048 Move X19, [X31+24]
	049 Move X30, [X31+8]
	050 And X0, X0, 0
	051 Move V0, V8
	052 Move V8, [X31+32]
	053 Call Physics.Simulate_Internal, X0, V0
	054 Return 
	055 Move X8, 0x466000
	056 Move X8, [X8+2600]
	057 Move X19, 0x4D3000
	058 Move X0, [X8]
	059 Move W8, [X0+224]
	060 Move X19, [X19+2288]
	061 Compare W8, 0
	062 JumpIfNotEqual {64}
	063 Call 0x1C17DFC
	064 Move X0, [X19]
	065 Move X20, [X31+16]
	066 Move X19, [X31+24]
	067 Move X30, [X31+8]
	068 Move X1, X31
	069 Move V8, [X31+32]
	070 Call Debug.LogWarning, X0
	071 Return 

Method: System.Void SyncTransforms()

Disassembly:
	0x03C8E368 LDRB W8, [X23 + 0xDFC]
	0x03C8E36C LDR X22, [X22 + 0x5F8]
	0x03C8E370 MOV W19, W2
	0x03C8E374 MOV X20, X1
	0x03C8E378 MOV X21, X0
	0x03C8E37C TBNZ X8, 0x0, 0x3C8E3A0
	0x03C8E380 ADRP X0, 0x4D2000
	0x03C8E384 LDR X0, [X0 + 0x918]
	0x03C8E388 BL 0x1C16CF4
	0x03C8E38C ADRP X0, 0x465000

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, 0x759000
	004 Move X0, [X19+3496]
	005 Compare X0, 0
	006 JumpIfNotEqual {11}
	007 Move X0, -51781632
	008 Add X0, X0, 482
	009 Call 0x1C17CB8
	010 Move [X19+3496], X0
	011 Move X30, [X31+16]
	012 Move X19, [X31+24]
	013 CallNoReturn X0

Method: System.Boolean get_autoSyncTransforms()

Disassembly:
	0x03C8E390 LDR X0, [X0 + 0x5F8]
	0x03C8E394 BL 0x1C16CF4
	0x03C8E398 MOVZ W8, 0x1
	0x03C8E39C STRB W8, [X23 + 0xDFC]
	0x03C8E3A0 LDR X0, [X22]
	0x03C8E3A4 LDR W8, [X0 + 0xE0]
	0x03C8E3A8 CBNZ W8, 0x3C8E3B0
	0x03C8E3AC BL 0x1C16DFC
	0x03C8E3B0 ADRP X23, 0x758000
	0x03C8E3B4 LDR X8, [X23 + 0xDC0]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, 0x759000
	004 Move X0, [X19+3504]
	005 Compare X0, 0
	006 JumpIfNotEqual {11}
	007 Move X0, -51822592
	008 Add X0, X0, 1031
	009 Call 0x1C17CB8
	010 Move [X19+3504], X0
	011 Move X30, [X31+16]
	012 Move X19, [X31+24]
	013 CallNoReturn X0

Method: System.Void set_autoSyncTransforms(System.Boolean value)

Disassembly:
	0x03C8E3B8 CBNZ X8, 0x3C8E3D0
	0x03C8E3BC ADRP X0, 0xFFFFFFFFFCE6B000
	0x03C8E3C0 ADD X0, X0, 0xB1F
	0x03C8E3C4 BL 0x1C16CB8
	0x03C8E3C8 MOV X8, X0
	0x03C8E3CC STR X0, [X23 + 0xDC0]
	0x03C8E3D0 BLR X8
	0x03C8E3D4 TBZ X0, 0x0, 0x3C8E43C
	0x03C8E3D8 LDR X0, [X22]
	0x03C8E3DC LDR W8, [X0 + 0xE0]
	0x03C8E3E0 CBNZ W8, 0x3C8E3EC
	0x03C8E3E4 BL 0x1C16DFC
	0x03C8E3E8 LDR X0, [X22]
	0x03C8E3EC LDR X8, [X0 + 0xB8]
	0x03C8E3F0 LDR X8, [X8 + 0x18]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x759000
	005 Move X1, [X20+3512]
	006 Move W19, W0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51929088
	010 Add X0, X0, 2603
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+3512], X0
	014 And W0, W19, 1
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Boolean get_reuseCollisionCallbacks()

Disassembly:
	0x03C8E3F4 CBZ X8, 0x3C8E474
	0x03C8E3F8 LDR X9, [X21 + 0x20]
	0x03C8E3FC LDP V1, V0, [X21]
	0x03C8E400 STR X9, [X8 + 0x30]
	0x03C8E404 STP V1, V0, [X8 + 0x10]
	0x03C8E408 LDR X9, [X20 + 0x20]
	0x03C8E40C LDP V1, V0, [X20]
	0x03C8E410 STR X31, [X8 + 0x68]
	0x03C8E414 STRB W31, [X8 + 0x60]
	0x03C8E418 STR X9, [X8 + 0x58]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, 0x759000
	004 Move X0, [X19+3520]
	005 Compare X0, 0
	006 JumpIfNotEqual {11}
	007 Move X0, -51986432
	008 Add X0, X0, 2847
	009 Call 0x1C17CB8
	010 Move [X19+3520], X0
	011 Move X30, [X31+16]
	012 Move X19, [X31+24]
	013 CallNoReturn X0

Method: System.Boolean Query_ComputePenetration(UnityEngine.Collider colliderA, UnityEngine.Vector3 positionA, UnityEngine.Quaternion rotationA, UnityEngine.Collider colliderB, UnityEngine.Vector3 positionB, UnityEngine.Quaternion rotationB, ref UnityEngine.Vector3 direction, ref System.Single distance)

Disassembly:
	0x03C8E41C STUR V0, [X8 + 0x48]
	0x03C8E420 STUR V1, [X8 + 0x38]
	0x03C8E424 LDR X8, [X0 + 0xB8]
	0x03C8E428 LDR X0, [X8 + 0x18]
	0x03C8E42C CBZ X0, 0x3C8E474
	0x03C8E430 AND W8, W19, 0x1
	0x03C8E434 STRB W8, [X0 + 0x60]
	0x03C8E438 B 0x3C8E464
	0x03C8E43C ADRP X8, 0x4D2000
	0x03C8E440 LDR X8, [X8 + 0x918]
	0x03C8E444 LDR X0, [X8]
	0x03C8E448 BL 0x1C16F10
	0x03C8E44C AND W3, W19, 0x1
	0x03C8E450 MOV X1, X21
	0x03C8E454 MOV X2, X20
	0x03C8E458 MOV X22, X0
	0x03C8E45C BL 0x3C8A470
	0x03C8E460 MOV X0, X22
	0x03C8E464 LDP X20, X19, [X31 + 0x20]
	0x03C8E468 LDP X22, X21, [X31 + 0x10]
	0x03C8E46C LDP X30, X23, [X31], #0x30
	0x03C8E470 RET
	0x03C8E474 BL 0x1C16F20
	0x03C8E478 LDRB W8, [X0 + 0x16]
	0x03C8E47C UBFM W0, W8, 0x3, 0x3
	0x03C8E480 RET
	0x03C8E484 LDRB W8, [X0 + 0x16]
	0x03C8E488 UBFM W0, W8, 0x4, 0x4
	0x03C8E48C RET
	0x03C8E490 STP X30, X21, [X31 - 0x20]!
	0x03C8E494 STP X20, X19, [X31 + 0x10]
	0x03C8E498 ADRP X19, 0x758000
	0x03C8E49C ADRP X21, 0x4D2000
	0x03C8E4A0 ADRP X20, 0x465000
	0x03C8E4A4 LDRB W8, [X19 + 0xDFD]
	0x03C8E4A8 LDR X21, [X21 + 0x918]
	0x03C8E4AC LDR X20, [X20 + 0x5F8]
	0x03C8E4B0 TBNZ X8, 0x0, 0x3C8E4D4
	0x03C8E4B4 ADRP X0, 0x4D2000
	0x03C8E4B8 LDR X0, [X0 + 0x918]
	0x03C8E4BC BL 0x1C16CF4
	0x03C8E4C0 ADRP X0, 0x465000
	0x03C8E4C4 LDR X0, [X0 + 0x5F8]
	0x03C8E4C8 BL 0x1C16CF4
	0x03C8E4CC MOVZ W8, 0x1
	0x03C8E4D0 STRB W8, [X19 + 0xDFD]
	0x03C8E4D4 LDR X0, [X21]
	0x03C8E4D8 BL 0x1C16F10
	0x03C8E4DC MOV X1, X31
	0x03C8E4E0 MOV X19, X0
	0x03C8E4E4 STR X31, [X0 + 0x68]
	0x03C8E4E8 BL 0x33BDD8C
	0x03C8E4EC MOVI V0.2D, 0x0
	0x03C8E4F0 STR X31, [X19 + 0x68]
	0x03C8E4F4 STP V0, V0, [X19 + 0x10]
	0x03C8E4F8 STP V0, V0, [X19 + 0x30]
	0x03C8E4FC STR V0, [X19 + 0x5]

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+64], X30
	003 Move [X31+80], X24
	004 Move [X31+88], X23
	005 Move [X31+96], X22
	006 Move [X31+104], X21
	007 Move [X31+112], X20
	008 Move [X31+120], X19
	009 Move V7, [X31+9]
	010 Move V16, [X31+136]
	011 Move X8, [X31+128]
	012 Move [X31+48], S0
	013 Move [X31+56], S1
	014 Move [X31+56], S2
	015 Move [X31+32], S3
	016 Move [X31+40], S4
	017 Move [X31+40], S5
	018 Move [X31+48], S6
	019 Move X23, 0x759000
	020 Move [X31+16], X8
	021 Move [X31+24], S16
	022 Move [X31], V7
	023 Move X24, 0x466000
	024 Move W9, [X23+3528]
	025 Move X24, [X24+1528]
	026 Move X19, X3
	027 Move X20, X2
	028 Move X21, X1
	029 Move X22, X0
	030 Move TEMP, X9
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfEqual {39}
	034 Move X0, 0x466000
	035 Move X0, [X0+1528]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X23+3528], W8
	039 Move X0, [X24]
	040 Move W8, [X0+224]
	041 Compare W8, 0
	042 JumpIfNotEqual {44}
	043 Call 0x1C17DFC
	044 Move X23, 0x759000
	045 Move X8, [X23+3632]
	046 Compare X8, 0
	047 JumpIfNotEqual {53}
	048 Move X0, -52002816
	049 Add X0, X0, 2430
	050 Call 0x1C17CB8
	051 Move X8, X0
	052 Move [X23+3632], X0
	053 Add X1, X31, 48
	054 Add X2, X31, 32
	055 Add X4, X31, 16
	056 Add X5, X31, 0
	057 Move X0, X22
	058 Move X3, X21
	059 Move X6, X20
	060 Move X7, X19
	061 NotImplemented "Instruction BLR not yet implemented."
	062 Move X20, [X31+112]
	063 Move X19, [X31+120]
	064 Move X22, [X31+96]
	065 Move X21, [X31+104]
	066 Move X24, [X31+80]
	067 Move X23, [X31+88]
	068 Move X30, [X31+64]
	069 And W0, W0, 1
	070 Add X31, X31, 128
	071 Return X0

Method: System.Boolean ComputePenetration(UnityEngine.Collider colliderA, UnityEngine.Vector3 positionA, UnityEngine.Quaternion rotationA, UnityEngine.Collider colliderB, UnityEngine.Vector3 positionB, UnityEngine.Quaternion rotationB, out UnityEngine.Vector3 direction, out System.Single distance)

Disassembly:
	0x03C8E58C RET
	0x03C8E590 ADRP X1, 0xFFFFFFFFFCE8D000
	0x03C8E594 ADD X1, X1, 0xEE3
	0x03C8E598 MOV X0, X31
	0x03C8E59C BL 0x1C16F3C
	0x03C8E5A0 MOV X1, X31
	0x03C8E5A4 BL 0x1C16DEC
	0x03C8E5A8 LDR X8, [X0 + 0x40]
	0x03C8E5AC LDR X5, [X0 + 0x18]
	0x03C8E5B0 LDR X4, [X0 + 0x28]
	0x03C8E5B4 AND X1, X1, 0x0
	0x03C8E5B8 MOV X0, X8
	0x03C8E5BC BR X5
	0x03C8E5C0 STP X30, X21, [X31 - 0x20]!
	0x03C8E5C4 STP X20, X19, [X31 + 0x10]
	0x03C8E5C8 ADRP X21, 0x758000
	0x03C8E5CC ADRP X20, 0x465000
	0x03C8E5D0 LDRB W8, [X21 + 0xE38]
	0x03C8E5D4 LDR X20, [X20 + 0x598]
	0x03C8E5D8 MOV X19, X0
	0x03C8E5DC TBNZ X8, 0x0, 0x3C8E600
	0x03C8E5E0 ADRP X0, 0x4D2000
	0x03C8E5E4 LDR X0, [X0 + 0x920]
	0x03C8E5E8 BL 0x1C16CF4
	0x03C8E5EC ADRP X0, 0x465000
	0x03C8E5F0 LDR X0, [X0 + 0x598]
	0x03C8E5F4 BL 0x1C16CF4
	0x03C8E5F8 MOVZ W8, 0x1
	0x03C8E5FC STRB W8, [X21 + 0xE38]
	0x03C8E600 LDR X0, [X20]
	0x03C8E604 LDR W19, [X19 + 0x28]
	0x03C8E608 LDR W8, [X0 + 0xE0]
	0x03C8E60C CBNZ W8, 0x3C8E614
	0x03C8E610 BL 0x1C16DFC
	0x03C8E614 MOV W0, W19
	0x03C8E618 MOV X1, X31
	0x03C8E61C BL 0x3C39A64
	0x03C8E620 CBZ X0, 0x3C8E660
	0x03C8E624 ADRP X8, 0x4D2000
	0x03C8E628 LDR X8, [X8 + 0x920]
	0x03C8E62C LDR X9, [X0]
	0x03C8E630 LDR X8, [X8]
	0x03C8E634 LDRB W11, [X9 + 0x130]
	0x03C8E638 LDRB W10, [X8 + 0x130]
	0x03C8E63C CMP W11, W10
	0x03C8E640 B.CS 0x3C8E64C
	0x03C8E644 MOV X0, X31
	0x03C8E648 B 0x3C8E660
	0x03C8E64C LDR X9, [X9 + 0xC8]
	0x03C8E650 ADD X9, X9, X10, 0x3, LSL
	0x03C8E654 LDUR X9, [X9 - 0x8]
	0x03C8E658 CMP X9, X8
	0x03C8E65C CSEL X0, X0, X31, EQ
	0x03C8E660 LDP X20, X19, [X31 + 0x10]
	0x03C8E664 LDP X30, X21, [X31], #0x20
	0x03C8E668 RET
	0x03C8E66C LDP S0, S1, [X0]
	0x03C8E670 LDR V2, [X0 + 0x8]
	0x03C8E674 RET
	0x03C8E678 LDP S0, S1, [X0 + 0xC]
	0x03C8E67C LDR V2, [X0 + 0x14]
	0x03C8E680 RET
	0x03C8E684 LDR V0, [X0 + 0x1C]
	0x03C8E688 RET
	0x03C8E68C STR S0, [X0 + 0x1C]
	0x03C8E690 RET
	0x03C8E694 STP X30, X21, [X31 - 0x20]!
	0x03C8E698 STP X20, X19, [X31 + 0x10]
	0x03C8E69C ADRP X20, 0x758000
	0x03C8E6A0 ADRP X21, 0x465000
	0x03C8E6A4 LDRB W8, [X20 + 0xE39]
	0x03C8E6A8 LDR X21, [X21 + 0x598]
	0x03C8E6AC MOV X19, X0
	0x03C8E6B0 TBNZ X8, 0x0, 0x3C8E6C8

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+16], D15
	003 Move [X31+24], D14
	004 Move [X31+32], D13
	005 Move [X31+40], D12
	006 Move [X31+48], D11
	007 Move [X31+56], D10
	008 Move [X31+64], D9
	009 Move [X31+72], D8
	010 Move [X31+80], X30
	011 Move [X31+96], X24
	012 Move [X31+104], X23
	013 Move [X31+112], X22
	014 Move [X31+120], X21
	015 Move [X31+128], X20
	016 Move [X31+136], X19
	017 Move X23, 0x759000
	018 Move S8, [X31+168]
	019 Move S15, [X31+172]
	020 Move S11, [X31+160]
	021 Move S10, [X31+164]
	022 Move S12, [X31+148]
	023 Move S9, [X31+152]
	024 Move W8, [X23+3529]
	025 Move V13, [X31+144]
	026 Move X19, X3
	027 Move X20, X2
	028 Move X21, X1
	029 Move V14, V0
	030 Move X22, X0
	031 Move [X31+88], S5
	032 Move [X31+96], S6
	033 Move [X31+8], S3
	034 Move [X31+16], S4
	035 Move [X31], S1
	036 Move [X31+8], S2
	037 Move TEMP, X8
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfEqual {46}
	041 Move X0, 0x466000
	042 Move X0, [X0+1528]
	043 Call 0x1C17CF4
	044 Move W8, 1
	045 Move [X23+3529], W8
	046 Move X24, 0x74B000
	047 Move X23, 0x466000
	048 Move W8, [X24+1923]
	049 Move X23, [X23+1528]
	050 Compare W8, 0
	051 JumpIfNotEqual {57}
	052 Move X0, 0x466000
	053 Move X0, [X0+1440]
	054 Call 0x1C17CF4
	055 Move W8, 1
	056 Move [X24+1923], W8
	057 Move X8, 0x466000
	058 Move X8, [X8+1440]
	059 Move X8, [X8]
	060 Move X8, [X8+184]
	061 Move V0, [X8]
	062 Move V1, [X8+8]
	063 Move [X20], D0
	064 Move [X20+8], S1
	065 Move [X19], W31
	066 Move X0, [X23]
	067 Move W8, [X0+224]
	068 Compare W8, 0
	069 JumpIfNotEqual {71}
	070 Call 0x1C17DFC
	071 Move [X31+160], S11
	072 Move [X31+168], S10
	073 Move [X31+144], S13
	074 Move [X31+152], S12
	075 Move [X31+168], S8
	076 Move [X31+176], S15
	077 Move [X31+152], S9
	078 Move X0, X22
	079 Move V0, V14
	080 Move S1, [X31]
	081 Move S2, [X31+4]
	082 Move S3, [X31+8]
	083 Move S4, [X31+12]
	084 Move S5, [X31+88]
	085 Move S6, [X31+92]
	086 Move X1, X21
	087 Move X2, X20
	088 Move X3, X19
	089 Move X20, [X31+128]
	090 Move X19, [X31+136]
	091 Move X22, [X31+112]
	092 Move X21, [X31+120]
	093 Move X24, [X31+96]
	094 Move X23, [X31+104]
	095 Move X30, [X31+80]
	096 Move D9, [X31+64]
	097 Move D8, [X31+72]
	098 Move D11, [X31+48]
	099 Move D10, [X31+56]
	100 Move D13, [X31+32]
	101 Move D12, [X31+40]
	102 Move D15, [X31+16]
	103 Move D14, [X31+24]
	104 Add X31, X31, 144
	105 Call Physics.Query_ComputePenetration, X0, X1, X2, X3, X4, X5, X6, X7
	106 Return X0

Method: System.Int32 OverlapSphereNonAlloc(UnityEngine.Vector3 position, System.Single radius, UnityEngine.Collider[] results, System.Int32 layerMask, UnityEngine.QueryTriggerInteraction queryTriggerInteraction)

Disassembly:
	0x03C8E6B4 ADRP X0, 0x465000
	0x03C8E6B8 LDR X0, [X0 + 0x598]
	0x03C8E6BC BL 0x1C16CF4
	0x03C8E6C0 MOVZ W8, 0x1
	0x03C8E6C4 STRB W8, [X20 + 0xE39]
	0x03C8E6C8 MOV X0, X19
	0x03C8E6CC BL 0x3C8E770
	0x03C8E6D0 LDR X8, [X21]
	0x03C8E6D4 MOV X20, X0
	0x03C8E6D8 LDR W9, [X8 + 0xE0]
	0x03C8E6DC CBNZ W9, 0x3C8E6E8
	0x03C8E6E0 MOV X0, X8
	0x03C8E6E4 BL 0x1C16DFC
	0x03C8E6E8 MOV X0, X20
	0x03C8E6EC MOV X1, X31
	0x03C8E6F0 MOV X2, X31
	0x03C8E6F4 BL 0x3C354F8
	0x03C8E6F8 TBZ X0, 0x0, 0x3C8E704
	0x03C8E6FC CBNZ X20, 0x3C8E748
	0x03C8E700 B 0x3C8E76C
	0x03C8E704 MOV X0, X19
	0x03C8E708 BL 0x3C8E5C0
	0x03C8E70C LDR X8, [X21]
	0x03C8E710 MOV X20, X0
	0x03C8E714 LDR W9, [X8 + 0xE0]
	0x03C8E718 CBNZ W9, 0x3C8E724
	0x03C8E71C MOV X0, X8
	0x03C8E720 BL 0x1C16DFC
	0x03C8E724 MOV X0, X20
	0x03C8E728 MOV X1, X31
	0x03C8E72C MOV X2, X31
	0x03C8E730 BL 0x3C354F8
	0x03C8E734 TBZ X0, 0x0, 0x3C8E75C
	0x03C8E738 MOV X0, X19
	0x03C8E73C BL 0x3C8E5C0
	0x03C8E740 CBZ X0, 0x3C8E76C
	0x03C8E744 MOV X20, X0
	0x03C8E748 MOV X0, X20
	0x03C8E74C LDP X20, X19, [X31 + 0x10]
	0x03C8E750 MOV X1, X31
	0x03C8E754 LDP X30, X21, [X31], #0x20

ISIL:
	001 Move [X31-80], D11
	002 Move [X31-72], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X23, 0x759000
	012 Move X22, 0x466000
	013 Move W8, [X23+3530]
	014 Move X22, [X22+1528]
	015 Move W19, W2
	016 Move W20, W1
	017 Move X21, X0
	018 Move V8, V3
	019 Move V9, V2
	020 Move V10, V1
	021 Move V11, V0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {31}
	026 Move X0, 0x466000
	027 Move X0, [X0+1528]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X23+3530], W8
	031 Move X0, [X22]
	032 Move W8, [X0+224]
	033 Compare W8, 0
	034 JumpIfNotEqual {36}
	035 Call 0x1C17DFC
	036 Call Physics.get_defaultPhysicsScene
	037 Move V2, V9
	038 Move V3, V8
	039 Move X1, X21
	040 Move W2, W20
	041 Move W3, W19
	042 Move X20, [X31+64]
	043 Move X19, [X31+72]
	044 Move X22, [X31+48]
	045 Move X21, [X31+56]
	046 Move X30, [X31+32]
	047 Move X23, [X31+40]
	048 Move D9, [X31+16]
	049 Move D8, [X31+24]
	050 And X0, X0, 0
	051 Move V0, V11
	052 Move V1, V10
	053 Move D11, [X31+80]
	054 Move D10, [X31+88]
	055 Call PhysicsScene.OverlapSphereNonAlloc_Internal, X0, X1, V0, X2, X3, X4
	056 Return X0

Method: System.Int32 OverlapSphereNonAlloc(UnityEngine.Vector3 position, System.Single radius, UnityEngine.Collider[] results, System.Int32 layerMask)

Disassembly:
	0x03C8E760 MOV X0, X31
	0x03C8E764 LDP X30, X21, [X31], #0x20
	0x03C8E768 RET
	0x03C8E76C BL 0x1C16F20
	0x03C8E770 STP X30, X21, [X31 - 0x20]!
	0x03C8E774 STP X20, X19, [X31 + 0x10]
	0x03C8E778 ADRP X21, 0x758000
	0x03C8E77C ADRP X20, 0x465000
	0x03C8E780 LDRB W8, [X21 + 0xE3A]
	0x03C8E784 LDR X20, [X20 + 0x598]
	0x03C8E788 MOV X19, X0
	0x03C8E78C TBNZ X8, 0x0, 0x3C8E7A4
	0x03C8E790 ADRP X0, 0x465000
	0x03C8E794 LDR X0, [X0 + 0x598]
	0x03C8E798 BL 0x1C16CF4
	0x03C8E79C MOVZ W8, 0x1
	0x03C8E7A0 STRB W8, [X21 + 0xE3A]
	0x03C8E7A4 MOV X0, X19
	0x03C8E7A8 BL 0x3C8E5C0
	0x03C8E7AC LDR X8, [X20]
	0x03C8E7B0 MOV X20, X0
	0x03C8E7B4 LDR W9, [X8 + 0xE0]
	0x03C8E7B8 CBNZ W9, 0x3C8E7C4
	0x03C8E7BC MOV X0, X8
	0x03C8E7C0 BL 0x1C16DFC
	0x03C8E7C4 MOV X0, X20
	0x03C8E7C8 MOV X1, X31
	0x03C8E7CC MOV X2, X31
	0x03C8E7D0 BL 0x3C354F8
	0x03C8E7D4 TBZ X0, 0x0, 0x3C8E818
	0x03C8E7D8 MOV X0, X19
	0x03C8E7DC BL 0x3C8E5C0
	0x03C8E7E0 CBZ X0, 0x3C8E828
	0x03C8E7E4 ADRP X20, 0x758000
	0x03C8E7E8 LDR X1, [X20 + 0xF50]
	0x03C8E7EC MOV X19, X0
	0x03C8E7F0 CBNZ X1, 0x3C8E808
	0x03C8E7F4 ADRP X0, 0xFFFFFFFFFCE9E000

ISIL:
	001 Move [X31-80], D11
	002 Move [X31-72], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X22, 0x759000
	011 Move X21, 0x466000
	012 Move W8, [X22+3531]
	013 Move X21, [X21+1528]
	014 Move W19, W1
	015 Move X20, X0
	016 Move V8, V3
	017 Move V9, V2
	018 Move V10, V1
	019 Move V11, V0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {29}
	024 Move X0, 0x466000
	025 Move X0, [X0+1528]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X22+3531], W8
	029 Move X0, [X21]
	030 Move W8, [X0+224]
	031 Compare W8, 0
	032 JumpIfNotEqual {34}
	033 Call 0x1C17DFC
	034 Move V2, V9
	035 Move V3, V8
	036 Move X0, X20
	037 Move W1, W19
	038 Move X20, [X31+64]
	039 Move X19, [X31+72]
	040 Move X22, [X31+48]
	041 Move X21, [X31+56]
	042 Move X30, [X31+32]
	043 Move D9, [X31+16]
	044 Move D8, [X31+24]
	045 Move V0, V11
	046 Move V1, V10
	047 Move W2, W31
	048 Move D11, [X31+80]
	049 Move D10, [X31+88]
	050 Call Physics.OverlapSphereNonAlloc, X0, V0, X1, X2, X3
	051 Return X0

Method: System.Int32 SphereCastNonAlloc(UnityEngine.Vector3 origin, System.Single radius, UnityEngine.Vector3 direction, UnityEngine.RaycastHit[] results, System.Single maxDistance, System.Int32 layerMask, UnityEngine.QueryTriggerInteraction queryTriggerInteraction)

Disassembly:
	0x03C8E7F8 ADD X0, X0, 0xDC9
	0x03C8E7FC BL 0x1C16CB8
	0x03C8E800 MOV X1, X0
	0x03C8E804 STR X0, [X20 + 0xF50]
	0x03C8E808 MOV X0, X19
	0x03C8E80C LDP X20, X19, [X31 + 0x10]
	0x03C8E810 LDP X30, X21, [X31], #0x20
	0x03C8E814 BR X1
	0x03C8E818 LDP X20, X19, [X31 + 0x10]
	0x03C8E81C MOV X0, X31
	0x03C8E820 LDP X30, X21, [X31], #0x20
	0x03C8E824 RET
	0x03C8E828 BL 0x1C16F20
	0x03C8E82C STR X30, [X31 - 0x20]!
	0x03C8E830 STP X20, X19, [X31 + 0x10]
	0x03C8E834 ADRP X20, 0x758000
	0x03C8E838 LDR X1, [X20 + 0xF50]
	0x03C8E83C MOV X19, X0
	0x03C8E840 CBNZ X1, 0x3C8E858
	0x03C8E844 ADRP X0, 0xFFFFFFFFFCE9E000
	0x03C8E848 ADD X0, X0, 0xDC9
	0x03C8E84C BL 0x1C16CB8
	0x03C8E850 MOV X1, X0
	0x03C8E854 STR X0, [X20 + 0xF50]
	0x03C8E858 MOV X0, X19
	0x03C8E85C LDP X20, X19, [X31 + 0x10]
	0x03C8E860 LDR X30, [X31], #0x20
	0x03C8E864 BR X1
	0x03C8E868 SUB X31, X31, 0x30
	0x03C8E86C STR X30, [X31 + 0x10]
	0x03C8E870 STP X20, X19, [X31 + 0x20]
	0x03C8E874 ADRP X20, 0x758000
	0x03C8E878 LDR X8, [X20 + 0xEC0]
	0x03C8E87C MOV X19, X0
	0x03C8E880 STR W31, [X31 + 0x8]
	0x03C8E884 STR X31, [X31]
	0x03C8E888 CBNZ X8, 0x3C8E8A0
	0x03C8E88C ADRP X0, 0xFFFFFFFFFCE93000
	0x03C8E890 ADD X0, X0, 0x435
	0x03C8E894 BL 0x1C16CB8
	0x03C8E898 MOV X8, X0
	0x03C8E89C STR X0, [X20 + 0xEC0]
	0x03C8E8A0 ADD X1, X31, 0x0
	0x03C8E8A4 MOV X0, X19
	0x03C8E8A8 BLR X8
	0x03C8E8AC LDP S0, S1, [X31]
	0x03C8E8B0 LDR V2, [X31 + 0x8]
	0x03C8E8B4 LDP X20, X19, [X31 + 0x20]
	0x03C8E8B8 LDR X30, [X31 + 0x10]
	0x03C8E8BC ADD X31, X31, 0x30
	0x03C8E8C0 RET
	0x03C8E8C4 STP X30, X21, [X31 - 0x20]!
	0x03C8E8C8 STP X20, X19, [X31 + 0x10]
	0x03C8E8CC ADRP X21, 0x758000
	0x03C8E8D0 LDR X2, [X21 + 0xEC0]
	0x03C8E8D4 MOV X19, X1
	0x03C8E8D8 MOV X20, X0

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+16], D15
	003 Move [X31+24], D14
	004 Move [X31+32], D13
	005 Move [X31+40], D12
	006 Move [X31+48], D11
	007 Move [X31+56], D10
	008 Move [X31+64], D9
	009 Move [X31+72], D8
	010 Move [X31+80], X30
	011 Move [X31+88], X23
	012 Move [X31+96], X22
	013 Move [X31+104], X21
	014 Move [X31+112], X20
	015 Move [X31+120], X19
	016 Move X23, 0x759000
	017 Move X22, 0x466000
	018 Move W8, [X23+3532]
	019 Move X22, [X22+1528]
	020 Move W19, W2
	021 Move W20, W1
	022 Move V8, V7
	023 Move X21, X0
	024 Move V9, V6
	025 Move V10, V5
	026 Move V11, V4
	027 Move V12, V3
	028 Move V13, V2
	029 Move V14, V1
	030 Move V15, V0
	031 Move TEMP, X8
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfEqual {40}
	035 Move X0, 0x466000
	036 Move X0, [X0+1528]
	037 Call 0x1C17CF4
	038 Move W8, 1
	039 Move [X23+3532], W8
	040 Move X0, [X22]
	041 Move W8, [X0+224]
	042 Compare W8, 0
	043 JumpIfNotEqual {45}
	044 Call 0x1C17DFC
	045 Call Physics.get_defaultPhysicsScene
	046 Move [X31+8], W0
	047 Add X0, X31, 8
	048 Move V0, V15
	049 Move V1, V14
	050 Move V2, V13
	051 Move V3, V12
	052 Move V4, V11
	053 Move V5, V10
	054 Move V6, V9
	055 Move X1, X21
	056 Move V7, V8
	057 Move W2, W20
	058 Move W3, W19
	059 Call PhysicsScene.SphereCast, X0, X1, V0, X2, X3, V1, X4, X5
	060 Move X20, [X31+112]
	061 Move X19, [X31+120]
	062 Move X22, [X31+96]
	063 Move X21, [X31+104]
	064 Move X30, [X31+80]
	065 Move X23, [X31+88]
	066 Move D9, [X31+64]
	067 Move D8, [X31+72]
	068 Move D11, [X31+48]
	069 Move D10, [X31+56]
	070 Move D13, [X31+32]
	071 Move D12, [X31+40]
	072 Move D15, [X31+16]
	073 Move D14, [X31+24]
	074 Add X31, X31, 128
	075 Return X0

Method: System.Int32 SphereCastNonAlloc(UnityEngine.Vector3 origin, System.Single radius, UnityEngine.Vector3 direction, UnityEngine.RaycastHit[] results, System.Single maxDistance, System.Int32 layerMask)

Disassembly:
	0x03C8E9FC STP X30, X21, [X31 - 0x20]!
	0x03C8EA00 STP X20, X19, [X31 + 0x10]
	0x03C8EA04 ADRP X21, 0x758000
	0x03C8EA08 LDR X2, [X21 + 0xED0]
	0x03C8EA0C MOV X19, X1
	0x03C8EA10 MOV X20, X0
	0x03C8EA14 CBNZ X2, 0x3C8EA2C
	0x03C8EA18 ADRP X0, 0xFFFFFFFFFCE63000
	0x03C8EA1C ADD X0, X0, 0x815
	0x03C8EA20 BL 0x1C16CB8
	0x03C8EA24 MOV X2, X0
	0x03C8EA28 STR X0, [X21 + 0xED0]
	0x03C8EA2C MOV X0, X20
	0x03C8EA30 MOV X1, X19
	0x03C8EA34 LDP X20, X19, [X31 + 0x10]
	0x03C8EA38 LDP X30, X21, [X31], #0x20
	0x03C8EA3C BR X2
	0x03C8EA40 SUB X31, X31, 0x30
	0x03C8EA44 STR X30, [X31 + 0x10]
	0x03C8EA48 STP X20, X19, [X31 + 0x20]
	0x03C8EA4C ADRP X20, 0x758000
	0x03C8EA50 LDR X8, [X20 + 0xED8]
	0x03C8EA54 MOV X19, X0
	0x03C8EA58 STP S0, S1, [X31]
	0x03C8EA5C STR S2, [X31 + 0x8]
	0x03C8EA60 CBNZ X8, 0x3C8EA78
	0x03C8EA64 ADRP X0, 0xFFFFFFFFFCE63000
	0x03C8EA68 ADD X0, X0, 0x85F
	0x03C8EA6C BL 0x1C16CB8
	0x03C8EA70 MOV X8, X0
	0x03C8EA74 STR X0, [X20 + 0xED8]
	0x03C8EA78 ADD X1, X31, 0x0
	0x03C8EA7C MOV X0, X19
	0x03C8EA80 BLR X8
	0x03C8EA84 LDP X20, X19, [X31 + 0x20]
	0x03C8EA88 LDR X30, [X31 + 0x10]
	0x03C8EA8C ADD X31, X31, 0x30
	0x03C8EA90 RET
	0x03C8EA94 STP X30, X21, [X31 - 0x20]!
	0x03C8EA98 STP X20, X19, [X31 + 0x10]
	0x03C8EA9C ADRP X21, 0x758000
	0x03C8EAA0 LDR X2, [X21 + 0xED8]
	0x03C8EAA4 MOV X19, X1
	0x03C8EAA8 MOV X20, X0
	0x03C8EAAC CBNZ X2, 0x3C8EAC4
	0x03C8EAB0 ADRP X0, 0xFFFFFFFFFCE63000
	0x03C8EAB4 ADD X0, X0, 0x85F
	0x03C8EAB8 BL 0x1C16CB8
	0x03C8EABC MOV X2, X0
	0x03C8EAC0 STR X0, [X21 + 0xED8]

ISIL:
	001 Move [X31-112], D15
	002 Move [X31-104], D14
	003 Move [X31+16], D13
	004 Move [X31+24], D12
	005 Move [X31+32], D11
	006 Move [X31+40], D10
	007 Move [X31+48], D9
	008 Move [X31+56], D8
	009 Move [X31+64], X30
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X22, 0x759000
	015 Move X21, 0x466000
	016 Move W8, [X22+3533]
	017 Move X21, [X21+1528]
	018 Move W19, W1
	019 Move V8, V7
	020 Move X20, X0
	021 Move V9, V6
	022 Move V10, V5
	023 Move V11, V4
	024 Move V12, V3
	025 Move V13, V2
	026 Move V14, V1
	027 Move V15, V0
	028 Move TEMP, X8
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfEqual {37}
	032 Move X0, 0x466000
	033 Move X0, [X0+1528]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X22+3533], W8
	037 Move X0, [X21]
	038 Move W8, [X0+224]
	039 Compare W8, 0
	040 JumpIfNotEqual {42}
	041 Call 0x1C17DFC
	042 Move V2, V13
	043 Move V3, V12
	044 Move V4, V11
	045 Move V5, V10
	046 Move V6, V9
	047 Move X0, X20
	048 Move V7, V8
	049 Move W1, W19
	050 Move X20, [X31+96]
	051 Move X19, [X31+104]
	052 Move X22, [X31+80]
	053 Move X21, [X31+88]
	054 Move X30, [X31+64]
	055 Move D9, [X31+48]
	056 Move D8, [X31+56]
	057 Move D11, [X31+32]
	058 Move D10, [X31+40]
	059 Move D13, [X31+16]
	060 Move D12, [X31+24]
	061 Move V0, V15
	062 Move V1, V14
	063 Move W2, W31
	064 Move D15, [X31+112]
	065 Move D14, [X31+120]
	066 Call Physics.SphereCastNonAlloc, X0, V0, X1, X2, V1, X3, X4
	067 Return X0

Method: UnityEngine.Collider GetColliderByInstanceID(System.Int32 instanceID)

Disassembly:
	0x03C8EAC4 MOV X0, X20
	0x03C8EAC8 MOV X1, X19
	0x03C8EACC LDP X20, X19, [X31 + 0x10]
	0x03C8EAD0 LDP X30, X21, [X31], #0x20
	0x03C8EAD4 BR X2
	0x03C8EAD8 STR X30, [X31 - 0x20]!
	0x03C8EADC STP X20, X19, [X31 + 0x10]
	0x03C8EAE0 ADRP X20, 0x758000
	0x03C8EAE4 LDR X1, [X20 + 0xE40]
	0x03C8EAE8 MOV X19, X0
	0x03C8EAEC CBNZ X1, 0x3C8EB04
	0x03C8EAF0 ADRP X0, 0xFFFFFFFFFCE87000
	0x03C8EAF4 ADD X0, X0, 0x136
	0x03C8EAF8 BL 0x1C16CB8
	0x03C8EAFC MOV X1, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x759000
	005 Move X1, [X20+3536]
	006 Move W19, W0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51798016
	010 Add X0, X0, 849
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+3536], X0
	014 Move W0, W19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: UnityEngine.Component GetBodyByInstanceID(System.Int32 instanceID)

Disassembly:
	0x03C8EB00 STR X0, [X20 + 0xE40]
	0x03C8EB04 MOV X0, X19
	0x03C8EB08 LDP X20, X19, [X31 + 0x10]
	0x03C8EB0C LDR X30, [X31], #0x20
	0x03C8EB10 BR X1
	0x03C8EB14 STR D8, [X31 - 0x20]!
	0x03C8EB18 STR X30, [X31 + 0x8]
	0x03C8EB1C STP X20, X19, [X31 + 0x10]
	0x03C8EB20 ADRP X20, 0x758000
	0x03C8EB24 LDR X1, [X20 + 0xE48]
	0x03C8EB28 MOV V8.16B, V0.16B
	0x03C8EB2C MOV X19, X0
	0x03C8EB30 CBNZ X1, 0x3C8EB48
	0x03C8EB34 ADRP X0, 0xFFFFFFFFFCE91000
	0x03C8EB38 ADD X0, X0, 0x5FD

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x759000
	005 Move X1, [X20+3544]
	006 Move W19, W0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51871744
	010 Add X0, X0, 255
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+3544], X0
	014 Move W0, W19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Void SendOnCollisionEnter(UnityEngine.Component component, UnityEngine.Collision collision)

Disassembly:
	0x03C8EB3C BL 0x1C16CB8
	0x03C8EB40 MOV X1, X0
	0x03C8EB44 STR X0, [X20 + 0xE48]
	0x03C8EB48 MOV X0, X19
	0x03C8EB4C LDP X20, X19, [X31 + 0x10]
	0x03C8EB50 LDR X30, [X31 + 0x8]
	0x03C8EB54 MOV V0.16B, V8.16B
	0x03C8EB58 LDR V8, [X31], #0x20
	0x03C8EB5C BR X1
	0x03C8EB60 STR X30, [X31 - 0x20]!
	0x03C8EB64 STP X20, X19, [X31 + 0x10]
	0x03C8EB68 ADRP X20, 0x758000
	0x03C8EB6C LDR X1, [X20 + 0xE50]
	0x03C8EB70 MOV X19, X0
	0x03C8EB74 CBNZ X1, 0x3C8EB8C
	0x03C8EB78 ADRP X0, 0xFFFFFFFFFCE63000
	0x03C8EB7C ADD X0, X0, 0x7A9

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x759000
	006 Move X2, [X21+3552]
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51937280
	012 Add X0, X0, 1945
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+3552], X0
	016 Move X0, X20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Void SendOnCollisionStay(UnityEngine.Component component, UnityEngine.Collision collision)

Disassembly:
	0x03C8EB80 BL 0x1C16CB8
	0x03C8EB84 MOV X1, X0
	0x03C8EB88 STR X0, [X20 + 0xE50]
	0x03C8EB8C MOV X0, X19
	0x03C8EB90 LDP X20, X19, [X31 + 0x10]
	0x03C8EB94 LDR X30, [X31], #0x20
	0x03C8EB98 BR X1
	0x03C8EB9C STR D8, [X31 - 0x20]!
	0x03C8EBA0 STR X30, [X31 + 0x8]
	0x03C8EBA4 STP X20, X19, [X31 + 0x10]
	0x03C8EBA8 ADRP X20, 0x758000
	0x03C8EBAC LDR X1, [X20 + 0xE58]
	0x03C8EBB0 MOV V8.16B, V0.16B
	0x03C8EBB4 MOV X19, X0
	0x03C8EBB8 CBNZ X1, 0x3C8EBD0
	0x03C8EBBC ADRP X0, 0xFFFFFFFFFCE83000
	0x03C8EBC0 ADD X0, X0, 0x6CF

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x759000
	006 Move X2, [X21+3560]
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -52011008
	012 Add X0, X0, 2827
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+3560], X0
	016 Move X0, X20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Void SendOnCollisionExit(UnityEngine.Component component, UnityEngine.Collision collision)

Disassembly:
	0x03C8EBC4 BL 0x1C16CB8
	0x03C8EBC8 MOV X1, X0
	0x03C8EBCC STR X0, [X20 + 0xE58]
	0x03C8EBD0 MOV X0, X19
	0x03C8EBD4 LDP X20, X19, [X31 + 0x10]
	0x03C8EBD8 LDR X30, [X31 + 0x8]
	0x03C8EBDC MOV V0.16B, V8.16B
	0x03C8EBE0 LDR V8, [X31], #0x20
	0x03C8EBE4 BR X1
	0x03C8EBE8 STR X30, [X31 - 0x20]!
	0x03C8EBEC STP X20, X19, [X31 + 0x10]
	0x03C8EBF0 ADRP X20, 0x758000
	0x03C8EBF4 LDR X1, [X20 + 0xE60]
	0x03C8EBF8 MOV X19, X0
	0x03C8EBFC CBNZ X1, 0x3C8EC14
	0x03C8EC00 ADRP X0, 0xFFFFFFFFFCE7F000
	0x03C8EC04 ADD X0, X0, 0x955

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x759000
	006 Move X2, [X21+3568]
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51838976
	012 Add X0, X0, 1667
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+3568], X0
	016 Move X0, X20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Boolean get_autoSimulation()

Disassembly:
	0x03C8EC08 BL 0x1C16CB8
	0x03C8EC0C MOV X1, X0
	0x03C8EC10 STR X0, [X20 + 0xE60]
	0x03C8EC14 MOV X0, X19
	0x03C8EC18 LDP X20, X19, [X31 + 0x10]
	0x03C8EC1C LDR X30, [X31], #0x20
	0x03C8EC20 BR X1
	0x03C8EC24 STR D8, [X31 - 0x20]!
	0x03C8EC28 STR X30, [X31 + 0x8]
	0x03C8EC2C STP X20, X19, [X31 + 0x10]
	0x03C8EC30 ADRP X20, 0x758000
	0x03C8EC34 LDR X1, [X20 + 0xE68]
	0x03C8EC38 MOV V8.16B, V0.16B
	0x03C8EC3C MOV X19, X0
	0x03C8EC40 CBNZ X1, 0x3C8EC58
	0x03C8EC44 ADRP X0, 0xFFFFFFFFFCE7B000
	0x03C8EC48 ADD X0, X0, 0xC9E
	0x03C8EC4C BL 0x1C16CB8
	0x03C8EC50 MOV X1, X0
	0x03C8EC54 STR X0, [X20 + 0xE68]
	0x03C8EC58 MOV X0, X19
	0x03C8EC5C LDP X20, X19, [X31 + 0x10]
	0x03C8EC60 LDR X30, [X31 + 0x8]
	0x03C8EC64 MOV V0.16B, V8.16B
	0x03C8EC68 LDR V8, [X31], #0x20
	0x03C8EC6C BR X1
	0x03C8EC70 STR X30, [X31 - 0x20]!
	0x03C8EC74 STP X20, X19, [X31 + 0x10]
	0x03C8EC78 ADRP X20, 0x758000
	0x03C8EC7C LDR X1, [X20 + 0xE70]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x759000
	005 Move X20, 0x466000
	006 Move W8, [X19+3576]
	007 Move X20, [X20+1528]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x466000
	013 Move X0, [X0+1528]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+3576], W8
	017 Move X0, [X20]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {22}
	021 Call 0x1C17DFC
	022 Move X19, 0x759000
	023 Move X8, [X19+3392]
	024 Compare X8, 0
	025 JumpIfNotEqual {31}
	026 Move X0, -51830784
	027 Add X0, X0, 1491
	028 Call 0x1C17CB8
	029 Move X8, X0
	030 Move [X19+3392], X0
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 NotImplemented "Instruction CMP not yet implemented."
	035 NotImplemented "Instruction CSET not yet implemented."
	036 Move X30, [X31+32]
	037 Return X0

Method: System.Void set_autoSimulation(System.Boolean value)

Disassembly:
	0x03C8EC80 MOV X19, X0
	0x03C8EC84 CBNZ X1, 0x3C8EC9C
	0x03C8EC88 ADRP X0, 0xFFFFFFFFFCE71000
	0x03C8EC8C ADD X0, X0, 0x8F6
	0x03C8EC90 BL 0x1C16CB8
	0x03C8EC94 MOV X1, X0
	0x03C8EC98 STR X0, [X20 + 0xE70]
	0x03C8EC9C MOV X0, X19
	0x03C8ECA0 LDP X20, X19, [X31 + 0x10]
	0x03C8ECA4 LDR X30, [X31], #0x20
	0x03C8ECA8 BR X1
	0x03C8ECAC STP X30, X21, [X31 - 0x20]!
	0x03C8ECB0 STP X20, X19, [X31 + 0x10]
	0x03C8ECB4 ADRP X21, 0x758000
	0x03C8ECB8 LDR X2, [X21 + 0xE78]
	0x03C8ECBC MOV W19, W1
	0x03C8ECC0 MOV X20, X0
	0x03C8ECC4 CBNZ X2, 0x3C8ECDC
	0x03C8ECC8 ADRP X0, 0xFFFFFFFFFCE79000
	0x03C8ECCC ADD X0, X0, 0xA67
	0x03C8ECD0 BL 0x1C16CB8
	0x03C8ECD4 MOV X2, X0
	0x03C8ECD8 STR X0, [X21 + 0xE78]
	0x03C8ECDC AND W1, W19, 0x1
	0x03C8ECE0 MOV X0, X20
	0x03C8ECE4 LDP X20, X19, [X31 + 0x10]
	0x03C8ECE8 LDP X30, X21, [X31], #0x20
	0x03C8ECEC BR X2
	0x03C8ECF0 STR X30, [X31 - 0x20]!
	0x03C8ECF4 STP X20, X19, [X31 + 0x10]
	0x03C8ECF8 ADRP X20, 0x758000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x759000
	006 Move X21, 0x466000
	007 Move W8, [X20+3577]
	008 Move X21, [X21+1528]
	009 Move W19, W0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x466000
	015 Move X0, [X0+1528]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3577], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X20, 0x759000
	025 Move X1, [X20+3400]
	026 Compare X1, 0
	027 JumpIfNotEqual {33}
	028 Move X0, -52019200
	029 Add X0, X0, 1893
	030 Call 0x1C17CB8
	031 Move X1, X0
	032 Move [X20+3400], X0
	033 And W31, W19, 1
	034 Move X20, [X31+16]
	035 Move X19, [X31+24]
	036 Move W8, 2
	037 NotImplemented "Instruction CSEL not yet implemented."
	038 Move X30, [X31+32]
	039 Move X21, [X31+40]
	040 CallNoReturn X1

Method: System.Void OnSceneContact(UnityEngine.PhysicsScene scene, System.IntPtr buffer, System.Int32 count)

Disassembly:
	0x03C8ECFC LDR X1, [X20 + 0xE80]
	0x03C8ED00 MOV X19, X0
	0x03C8ED04 CBNZ X1, 0x3C8ED1C
	0x03C8ED08 ADRP X0, 0xFFFFFFFFFCE8B000
	0x03C8ED0C ADD X0, X0, 0x30B
	0x03C8ED10 BL 0x1C16CB8
	0x03C8ED14 MOV X1, X0
	0x03C8ED18 STR X0, [X20 + 0xE80]
	0x03C8ED1C MOV X0, X19
	0x03C8ED20 LDP X20, X19, [X31 + 0x10]
	0x03C8ED24 LDR X30, [X31], #0x20
	0x03C8ED28 BR X1
	0x03C8ED2C STP X30, X21, [X31 - 0x20]!
	0x03C8ED30 STP X20, X19, [X31 + 0x10]
	0x03C8ED34 ADRP X21, 0x758000
	0x03C8ED38 LDR X2, [X21 + 0xE88]
	0x03C8ED3C MOV W19, W1
	0x03C8ED40 MOV X20, X0
	0x03C8ED44 CBNZ X2, 0x3C8ED5C
	0x03C8ED48 ADRP X0, 0xFFFFFFFFFCE6F000
	0x03C8ED4C ADD X0, X0, 0xA0B
	0x03C8ED50 BL 0x1C16CB8
	0x03C8ED54 MOV X2, X0
	0x03C8ED58 STR X0, [X21 + 0xE88]
	0x03C8ED5C AND W1, W19, 0x1
	0x03C8ED60 MOV X0, X20
	0x03C8ED64 LDP X20, X19, [X31 + 0x10]
	0x03C8ED68 LDP X30, X21, [X31], #0x20
	0x03C8ED6C BR X2
	0x03C8ED70 STR X30, [X31 - 0x20]!
	0x03C8ED74 STP X20, X19, [X31 + 0x10]
	0x03C8ED78 ADRP X20, 0x758000
	0x03C8ED7C LDR X1, [X20 + 0xE90]
	0x03C8ED80 MOV X19, X0
	0x03C8ED84 CBNZ X1, 0x3C8ED9C
	0x03C8ED88 ADRP X0, 0xFFFFFFFFFCE7B000
	0x03C8ED8C ADD X0, X0, 0xCCD
	0x03C8ED90 BL 0x1C16CB8
	0x03C8ED94 MOV X1, X0
	0x03C8ED98 STR X0, [X20 + 0xE90]
	0x03C8ED9C MOV X0, X19
	0x03C8EDA0 LDP X20, X19, [X31 + 0x10]
	0x03C8EDA4 LDR X30, [X31], #0x20
	0x03C8EDA8 BR X1
	0x03C8EDAC STP X30, X21, [X31 - 0x20]!
	0x03C8EDB0 STP X20, X19, [X31 + 0x10]
	0x03C8EDB4 ADRP X21, 0x758000
	0x03C8EDB8 LDR X2, [X21 + 0xE98]
	0x03C8EDBC MOV W19, W1
	0x03C8EDC0 MOV X20, X0
	0x03C8EDC4 CBNZ X2, 0x3C8EDDC
	0x03C8EDC8 ADRP X0, 0xFFFFFFFFFCE7F000
	0x03C8EDCC ADD X0, X0, 0x977
	0x03C8EDD0 BL 0x1C16CB8
	0x03C8EDD4 MOV X2, X0
	0x03C8EDD8 STR X0, [X21 + 0xE98]
	0x03C8EDDC MOV X0, X20
	0x03C8EDE0 MOV W1, W19
	0x03C8EDE4 LDP X20, X19, [X31 + 0x10]
	0x03C8EDE8 LDP X30, X21, [X31], #0x20
	0x03C8EDEC BR X2
	0x03C8EDF0 SUB X31, X31, 0x30
	0x03C8EDF4 STR X30, [X31 + 0x10]
	0x03C8EDF8 STP X20, X19, [X31 + 0x20]
	0x03C8EDFC ADRP X20, 0x758000
	0x03C8EE00 LDR X8, [X20 + 0xEE0]
	0x03C8EE04 MOV X19, X0
	0x03C8EE08 STR W31, [X31 + 0x8]
	0x03C8EE0C STR X31, [X31]
	0x03C8EE10 CBNZ X8, 0x3C8EE28
	0x03C8EE14 ADRP X0, 0xFFFFFFFFFCE75000
	0x03C8EE18 ADD X0, X0, 0xAA6
	0x03C8EE1C BL 0x1C16CB8
	0x03C8EE20 MOV X8, X0
	0x03C8EE24 STR X0, [X20 + 0xEE0]
	0x03C8EE28 ADD X1, X31, 0x0
	0x03C8EE2C MOV X0, X19
	0x03C8EE30 BLR X8
	0x03C8EE34 LDP S0, S1, [X31]
	0x03C8EE38 LDR V2, [X31 + 0x8]
	0x03C8EE3C LDP X20, X19, [X31 + 0x20]
	0x03C8EE40 LDR X30, [X31 + 0x10]
	0x03C8EE44 ADD X31, X31, 0x30
	0x03C8EE48 RET
	0x03C8EE4C STP X30, X21, [X31 - 0x20]!
	0x03C8EE50 STP X20, X19, [X31 + 0x10]
	0x03C8EE54 ADRP X21, 0x758000
	0x03C8EE58 LDR X2, [X21 + 0xEE0]
	0x03C8EE5C MOV X19, X1
	0x03C8EE60 MOV X20, X0
	0x03C8EE64 CBNZ X2, 0x3C8EE7C
	0x03C8EE68 ADRP X0, 0xFFFFFFFFFCE75000
	0x03C8EE6C ADD X0, X0, 0xAA6
	0x03C8EE70 BL 0x1C16CB8
	0x03C8EE74 MOV X2, X0
	0x03C8EE78 STR X0, [X21 + 0xEE0]
	0x03C8EE7C MOV X0, X20
	0x03C8EE80 MOV X1, X19
	0x03C8EE84 LDP X20, X19, [X31 + 0x10]
	0x03C8EE88 LDP X30, X21, [X31], #0x20
	0x03C8EE8C BR X2
	0x03C8EE90 SUB X31, X31, 0x30
	0x03C8EE94 STR X30, [X31 + 0x10]
	0x03C8EE98 STP X20, X19, [X31 + 0x20]
	0x03C8EE9C ADRP X20, 0x758000
	0x03C8EEA0 LDR X8, [X20 + 0xEE8]
	0x03C8EEA4 MOV X19, X0
	0x03C8EEA8 STR W31, [X31 + 0x8]
	0x03C8EEAC STR X31, [X31]
	0x03C8EEB0 CBNZ X8, 0x3C8EEC8
	0x03C8EEB4 ADRP X0, 0xFFFFFFFFFCE75000
	0x03C8EEB8 ADD X0, X0, 0xAF2
	0x03C8EEBC BL 0x1C16CB8
	0x03C8EEC0 MOV X8, X0
	0x03C8EEC4 STR X0, [X20 + 0xEE8]
	0x03C8EEC8 ADD X1, X31, 0x0
	0x03C8EECC MOV X0, X19
	0x03C8EED0 BLR X8
	0x03C8EED4 LDP S0, S1, [X31]
	0x03C8EED8 LDR V2, [X31 + 0x8]
	0x03C8EEDC LDP X20, X19, [X31 + 0x20]
	0x03C8EEE0 LDR X30, [X31 + 0x10]
	0x03C8EEE4 ADD X31, X31, 0x30
	0x03C8EEE8 RET
	0x03C8EEEC STP X30, X21, [X31 - 0x20]!
	0x03C8EEF0 STP X20, X19, [X31 + 0x10]
	0x03C8EEF4 ADRP X21, 0x758000
	0x03C8EEF8 LDR X2, [X21 + 0xEE8]
	0x03C8EEFC MOV X19, X1
	0x03C8EF00 MOV X20, X0
	0x03C8EF04 CBNZ X2, 0x3C8EF1C
	0x03C8EF08 ADRP X0, 0xFFFFFFFFFCE75000
	0x03C8EF0C ADD X0, X0, 0xAF2
	0x03C8EF10 BL 0x1C16CB8
	0x03C8EF14 MOV X2, X0
	0x03C8EF18 STR X0, [X21 + 0xEE8]
	0x03C8EF1C MOV X0, X20
	0x03C8EF20 MOV X1, X19
	0x03C8EF24 LDP X20, X19, [X31 + 0x10]
	0x03C8EF28 LDP X30, X21, [X31], #0x20
	0x03C8EF2C BR X2
	0x03C8EF30 STP X30, X21, [X31 - 0x20]!
	0x03C8EF34 STP X20, X19, [X31 + 0x10]
	0x03C8EF38 ADRP X21, 0x758000
	0x03C8EF3C LDR X2, [X21 + 0xEA0]
	0x03C8EF40 MOV W19, W1
	0x03C8EF44 MOV X20, X0
	0x03C8EF48 CBNZ X2, 0x3C8EF60
	0x03C8EF4C ADRP X0, 0xFFFFFFFFFCE91000
	0x03C8EF50 ADD X0, X0, 0x62C

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+40], X23
	004 Move [X31+48], X22
	005 Move [X31+56], X21
	006 Move [X31+64], X20
	007 Move [X31+72], X19
	008 Move X22, 0x759000
	009 Move W8, [X22+3578]
	010 Move W20, W2
	011 Move X21, X1
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {28}
	017 Move X0, 0x4D3000
	018 Move X0, [X0+2296]
	019 Call 0x1C17CF4
	020 Move X0, 0x4D3000
	021 Move X0, [X0+2304]
	022 Call 0x1C17CF4
	023 Move X0, 0x466000
	024 Move X0, [X0+1528]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X22+3578], W8
	028 Compare W20, 0
	029 JumpIfEqual {80}
	030 Move X8, 0x4D3000
	031 Move X8, [X8+2296]
	032 Move X22, 0x466000
	033 Move X23, 0x4D3000
	034 Move W2, 1
	035 Move X3, [X8]
	036 Move X22, [X22+1528]
	037 Move X23, [X23+2304]
	038 Move X0, X21
	039 Move W1, W20
	040 Call NativeArrayUnsafeUtility.ConvertExistingDataToNativeArray, X0, X1, X2
	041 Move X8, X0
	042 Move X0, [X22]
	043 Move [X31+16], X8
	044 Move [X31+24], X1
	045 Move W8, [X0+224]
	046 Compare W8, 0
	047 JumpIfNotEqual {50}
	048 Call 0x1C17DFC
	049 Move X0, [X22]
	050 Move X8, [X0+184]
	051 Move X20, [X8+16]
	052 Compare X20, 0
	053 JumpIfEqual {64}
	054 Move X1, [X23]
	055 Add X0, X31, 16
	056 Call NativeArray`1<ContactPairHeader>.AsReadOnly, X0
	057 Move X2, X0
	058 Move X0, [X20+64]
	059 Move X8, [X20+24]
	060 Move X4, [X20+40]
	061 Move X3, X1
	062 And X1, X19, 0
	063 NotImplemented "Instruction BLR not yet implemented."
	064 Move X19, X31
	065 Move X1, [X23]
	066 Add X0, X31, 16
	067 Call NativeArray`1<ContactPairHeader>.AsReadOnly, X0
	068 Move X20, X0
	069 Move X0, [X22]
	070 Move X21, X1
	071 Move W8, [X0+224]
	072 Compare W8, 0
	073 JumpIfNotEqual {75}
	074 Call 0x1C17DFC
	075 Move X0, X20
	076 Move X1, X21
	077 Call Physics.ReportContacts, X0
	078 Compare X19, 0
	079 JumpIfNotEqual {88}
	080 Move X20, [X31+64]
	081 Move X19, [X31+72]
	082 Move X22, [X31+48]
	083 Move X21, [X31+56]
	084 Move X30, [X31+32]
	085 Move X23, [X31+40]
	086 Add X31, X31, 80
	087 Return 
	088 Move X0, X19
	089 Call 0x1C17F18
	090 Move X19, X0
	091 NotImplemented "Instruction CMP not yet implemented."
	092 Move X0, X19
	093 Call 0x3EB2AD0
	094 Move X19, X0
	095 Move X0, 0x466000
	096 Move X0, [X0+2000]
	097 Call 0x1C17D08
	098 Move X8, [X19]
	099 Move X1, [X8]
	100 Call 0x1C18270
	101 Move TEMP, X0
	102 And TEMP, TEMP, 1
	103 Compare TEMP, 1
	104 JumpIfNotEqual {118}
	105 Move X19, [X19]
	106 Call 0x3EB2AE0
	107 Move X0, 0x466000
	108 Move X0, [X0+2600]
	109 Call 0x1C17D08
	110 Move W8, [X0+224]
	111 Compare W8, 0
	112 JumpIfNotEqual {114}
	113 Call 0x1C17DFC
	114 Move X0, X19
	115 Move X1, X31
	116 Call Debug.LogError, X0
	117 Move X19, X31
	118 Move W0, 8
	119 Call 0x3EB2AF0
	120 Move X8, [X19]
	121 Move [X0], X8
	122 Move X1, 0x227000
	123 Add X1, X1, 3672
	124 Move X2, X31
	125 Call 0x3EB2B00
	126 Move X19, X0
	127 Move X19, X0
	128 Move X20, X1
	129 Move X19, X0
	130 Call 0x3EB2AE0
	131 Move W1, W20
	132 Move W8, 1
	133 NotImplemented "Instruction CMP not yet implemented."
	134 Move X0, X19
	135 Call 0x3EB2AD0
	136 Move X8, [X0]
	137 Move [X31+8], X8
	138 Call 0x3EB2AE0
	139 Move X19, [X31+8]
	140 Move [X31+8], X31
	141 Move X19, X0
	142 Move X1, [X23]
	143 Add X0, X31, 16
	144 Call NativeArray`1<ContactPairHeader>.AsReadOnly, X0
	145 Move X20, X0
	146 Move X0, [X22]
	147 Move X21, X1
	148 Move W8, [X0+224]
	149 Compare W8, 0
	150 JumpIfNotEqual {152}
	151 Call 0x1C17DFC
	152 Move X0, X20
	153 Move X1, X21
	154 Call Physics.ReportContacts, X0
	155 Move X8, [X31+8]
	156 Compare X8, 0
	157 JumpIfNotEqual {160}
	158 Move X0, X19
	159 Call 0x1D2D690
	160 Move X0, [X31+8]
	161 Call 0x1C17F18
	162 Call 0x1991590

Method: System.Void ReportContacts(Unity.Collections.NativeArray`1/ReadOnly<UnityEngine.ContactPairHeader> array)

Disassembly:
	0x03C8EF54 BL 0x1C16CB8
	0x03C8EF58 MOV X2, X0
	0x03C8EF5C STR X0, [X21 + 0xEA0]
	0x03C8EF60 AND W1, W19, 0x1
	0x03C8EF64 MOV X0, X20
	0x03C8EF68 LDP X20, X19, [X31 + 0x10]
	0x03C8EF6C LDP X30, X21, [X31], #0x20
	0x03C8EF70 BR X2
	0x03C8EF74 SUB X31, X31, 0x30
	0x03C8EF78 STR X30, [X31 + 0x10]
	0x03C8EF7C STP X20, X19, [X31 + 0x20]
	0x03C8EF80 ADRP X20, 0x758000
	0x03C8EF84 LDR X8, [X20 + 0xEF0]
	0x03C8EF88 MOV X19, X0
	0x03C8EF8C STR W31, [X31 + 0x8]
	0x03C8EF90 STR X31, [X31]
	0x03C8EF94 CBNZ X8, 0x3C8EFAC
	0x03C8EF98 ADRP X0, 0xFFFFFFFFFCE8B000
	0x03C8EF9C ADD X0, X0, 0x334
	0x03C8EFA0 BL 0x1C16CB8
	0x03C8EFA4 MOV X8, X0
	0x03C8EFA8 STR X0, [X20 + 0xEF0]
	0x03C8EFAC ADD X1, X31, 0x0
	0x03C8EFB0 MOV X0, X19
	0x03C8EFB4 BLR X8
	0x03C8EFB8 LDP S0, S1, [X31]
	0x03C8EFBC LDR V2, [X31 + 0x8]
	0x03C8EFC0 LDP X20, X19, [X31 + 0x20]
	0x03C8EFC4 LDR X30, [X31 + 0x10]
	0x03C8EFC8 ADD X31, X31, 0x30
	0x03C8EFCC RET
	0x03C8EFD0 STP X30, X21, [X31 - 0x20]!
	0x03C8EFD4 STP X20, X19, [X31 + 0x10]
	0x03C8EFD8 ADRP X21, 0x758000
	0x03C8EFDC LDR X2, [X21 + 0xEF0]
	0x03C8EFE0 MOV X19, X1
	0x03C8EFE4 MOV X20, X0
	0x03C8EFE8 CBNZ X2, 0x3C8F000
	0x03C8EFEC ADRP X0, 0xFFFFFFFFFCE8B000
	0x03C8EFF0 ADD X0, X0, 0x334
	0x03C8EFF4 BL 0x1C16CB8
	0x03C8EFF8 MOV X2, X0
	0x03C8EFFC STR X0, [X21 + 0xEF0]
	0x03C8F000 MOV X0, X20
	0x03C8F004 MOV X1, X19
	0x03C8F008 LDP X20, X19, [X31 + 0x10]
	0x03C8F00C LDP X30, X21, [X31], #0x20
	0x03C8F010 BR X2
	0x03C8F014 SUB X31, X31, 0x30
	0x03C8F018 STR X30, [X31 + 0x10]
	0x03C8F01C STP X20, X19, [X31 + 0x20]
	0x03C8F020 ADRP X20, 0x757000
	0x03C8F024 LDR X8, [X20 + 0xEF8]
	0x03C8F028 MOV X19, X0
	0x03C8F02C STP S0, S1, [X31]
	0x03C8F030 STR S2, [X31 + 0x8]
	0x03C8F034 CBNZ X8, 0x3C8F04C
	0x03C8F038 ADRP X0, 0xFFFFFFFFFCE92000
	0x03C8F03C ADD X0, X0, 0x478
	0x03C8F040 BL 0x1C16CB8
	0x03C8F044 MOV X8, X0
	0x03C8F048 STR X0, [X20 + 0xEF8]
	0x03C8F04C ADD X1, X31, 0x0
	0x03C8F050 MOV X0, X19
	0x03C8F054 BLR X8
	0x03C8F058 LDP X20, X19, [X31 + 0x20]
	0x03C8F05C LDR X30, [X31 + 0x10]
	0x03C8F060 ADD X31, X31, 0x30
	0x03C8F064 RET
	0x03C8F068 STP X30, X21, [X31 - 0x20]!
	0x03C8F06C STP X20, X19, [X31 + 0x10]
	0x03C8F070 ADRP X21, 0x757000
	0x03C8F074 LDR X2, [X21 + 0xEF8]
	0x03C8F078 MOV X19, X1
	0x03C8F07C MOV X20, X0
	0x03C8F080 CBNZ X2, 0x3C8F098
	0x03C8F084 ADRP X0, 0xFFFFFFFFFCE92000
	0x03C8F088 ADD X0, X0, 0x478
	0x03C8F08C BL 0x1C16CB8
	0x03C8F090 MOV X2, X0
	0x03C8F094 STR X0, [X21 + 0xEF8]
	0x03C8F098 MOV X0, X20
	0x03C8F09C MOV X1, X19
	0x03C8F0A0 LDP X20, X19, [X31 + 0x10]
	0x03C8F0A4 LDP X30, X21, [X31], #0x20
	0x03C8F0A8 BR X2
	0x03C8F0AC SUB X31, X31, 0x30
	0x03C8F0B0 STP X31, X30, [X31 + 0x8]
	0x03C8F0B4 STP X20, X19, [X31 + 0x20]
	0x03C8F0B8 ADRP X20, 0x757000
	0x03C8F0BC LDR X8, [X20 + 0xF00]
	0x03C8F0C0 MOV X19, X0
	0x03C8F0C4 STR X31, [X31]
	0x03C8F0C8 CBNZ X8, 0x3C8F0E0
	0x03C8F0CC ADRP X0, 0xFFFFFFFFFCE76000
	0x03C8F0D0 ADD X0, X0, 0x7F0
	0x03C8F0D4 BL 0x1C16CB8
	0x03C8F0D8 MOV X8, X0
	0x03C8F0DC STR X0, [X20 + 0xF00]
	0x03C8F0E0 ADD X1, X31, 0x0
	0x03C8F0E4 MOV X0, X19
	0x03C8F0E8 BLR X8
	0x03C8F0EC LDP S0, S1, [X31]
	0x03C8F0F0 LDP S2, S3, [X31 + 0x8]
	0x03C8F0F4 LDP X20, X19, [X31 + 0x20]
	0x03C8F0F8 LDR X30, [X31 + 0x10]
	0x03C8F0FC ADD X31, X31, 0x30
	0x03C8F100 RET
	0x03C8F104 STP X30, X21, [X31 - 0x20]!
	0x03C8F108 STP X20, X19, [X31 + 0x10]
	0x03C8F10C ADRP X21, 0x757000
	0x03C8F110 LDR X2, [X21 + 0xF00]
	0x03C8F114 MOV X19, X1
	0x03C8F118 MOV X20, X0
	0x03C8F11C CBNZ X2, 0x3C8F134
	0x03C8F120 ADRP X0, 0xFFFFFFFFFCE76000
	0x03C8F124 ADD X0, X0, 0x7F0
	0x03C8F128 BL 0x1C16CB8
	0x03C8F12C MOV X2, X0
	0x03C8F130 STR X0, [X21 + 0xF00]
	0x03C8F134 MOV X0, X20
	0x03C8F138 MOV X1, X19
	0x03C8F13C LDP X20, X19, [X31 + 0x10]
	0x03C8F140 LDP X30, X21, [X31], #0x20
	0x03C8F144 BR X2
	0x03C8F148 SUB X31, X31, 0x30
	0x03C8F14C STR X30, [X31 + 0x10]
	0x03C8F150 STP X20, X19, [X31 + 0x20]
	0x03C8F154 ADRP X20, 0x757000
	0x03C8F158 LDR X8, [X20 + 0xF08]
	0x03C8F15C MOV X19, X0
	0x03C8F160 STP S0, S1, [X31]
	0x03C8F164 STP S2, S3, [X31 + 0x8]
	0x03C8F168 CBNZ X8, 0x3C8F180
	0x03C8F16C ADRP X0, 0xFFFFFFFFFCE88000
	0x03C8F170 ADD X0, X0, 0x281
	0x03C8F174 BL 0x1C16CB8
	0x03C8F178 MOV X8, X0
	0x03C8F17C STR X0, [X20 + 0xF08]
	0x03C8F180 ADD X1, X31, 0x0
	0x03C8F184 MOV X0, X19
	0x03C8F188 BLR X8
	0x03C8F18C LDP X20, X19, [X31 + 0x20]
	0x03C8F190 LDR X30, [X31 + 0x10]
	0x03C8F194 ADD X31, X31, 0x30
	0x03C8F198 RET
	0x03C8F19C STP X30, X21, [X31 - 0x20]!
	0x03C8F1A0 STP X20, X19, [X31 + 0x10]
	0x03C8F1A4 ADRP X21, 0x757000
	0x03C8F1A8 LDR X2, [X21 + 0xF08]
	0x03C8F1AC MOV X19, X1
	0x03C8F1B0 MOV X20, X0
	0x03C8F1B4 CBNZ X2, 0x3C8F1CC
	0x03C8F1B8 ADRP X0, 0xFFFFFFFFFCE88000
	0x03C8F1BC ADD X0, X0, 0x281
	0x03C8F1C0 BL 0x1C16CB8
	0x03C8F1C4 MOV X2, X0
	0x03C8F1C8 STR X0, [X21 + 0xF08]
	0x03C8F1CC MOV X0, X20
	0x03C8F1D0 MOV X1, X19
	0x03C8F1D4 LDP X20, X19, [X31 + 0x10]
	0x03C8F1D8 LDP X30, X21, [X31], #0x20
	0x03C8F1DC BR X2
	0x03C8F1E0 SUB X31, X31, 0x30
	0x03C8F1E4 STR X30, [X31 + 0x10]
	0x03C8F1E8 STP X20, X19, [X31 + 0x20]
	0x03C8F1EC ADRP X20, 0x757000
	0x03C8F1F0 LDR X8, [X20 + 0xF10]
	0x03C8F1F4 MOV X19, X0
	0x03C8F1F8 STP S0, S1, [X31]
	0x03C8F1FC STR S2, [X31 + 0x8]
	0x03C8F200 CBNZ X8, 0x3C8F218
	0x03C8F204 ADRP X0, 0xFFFFFFFFFCE9A000
	0x03C8F208 ADD X0, X0, 0x14A
	0x03C8F20C BL 0x1C16CB8
	0x03C8F210 MOV X8, X0
	0x03C8F214 STR X0, [X20 + 0xF10]
	0x03C8F218 ADD X1, X31, 0x0
	0x03C8F21C MOV X0, X19
	0x03C8F220 BLR X8
	0x03C8F224 LDP X20, X19, [X31 + 0x20]
	0x03C8F228 LDR X30, [X31 + 0x10]
	0x03C8F22C ADD X31, X31, 0x30
	0x03C8F230 RET
	0x03C8F234 STP X30, X21, [X31 - 0x20]!
	0x03C8F238 STP X20, X19, [X31 + 0x10]
	0x03C8F23C ADRP X21, 0x757000
	0x03C8F240 LDR X2, [X21 + 0xF10]
	0x03C8F244 MOV X19, X1
	0x03C8F248 MOV X20, X0
	0x03C8F24C CBNZ X2, 0x3C8F264
	0x03C8F250 ADRP X0, 0xFFFFFFFFFCE9A000
	0x03C8F254 ADD X0, X0, 0x14A
	0x03C8F258 BL 0x1C16CB8
	0x03C8F25C MOV X2, X0
	0x03C8F260 STR X0, [X21 + 0xF10]
	0x03C8F264 MOV X0, X20
	0x03C8F268 MOV X1, X19
	0x03C8F26C LDP X20, X19, [X31 + 0x10]
	0x03C8F270 LDP X30, X21, [X31], #0x20
	0x03C8F274 BR X2
	0x03C8F278 SUB X31, X31, 0x30
	0x03C8F27C STR X30, [X31 + 0x10]
	0x03C8F280 STP X20, X19, [X31 + 0x20]
	0x03C8F284 ADRP X20, 0x757000
	0x03C8F288 LDR X8, [X20 + 0xF18]
	0x03C8F28C MOV X19, X0
	0x03C8F290 STP S0, S1, [X31]
	0x03C8F294 STP S2, S3, [X31 + 0x8]
	0x03C8F298 CBNZ X8, 0x3C8F2B0
	0x03C8F29C ADRP X0, 0xFFFFFFFFFCE8C000
	0x03C8F2A0 ADD X0, X0, 0x570
	0x03C8F2A4 BL 0x1C16CB8
	0x03C8F2A8 MOV X8, X0
	0x03C8F2AC STR X0, [X20 + 0xF18]
	0x03C8F2B0 ADD X1, X31, 0x0
	0x03C8F2B4 MOV X0, X19
	0x03C8F2B8 BLR X8
	0x03C8F2BC LDP X20, X19, [X31 + 0x20]
	0x03C8F2C0 LDR X30, [X31 + 0x10]
	0x03C8F2C4 ADD X31, X31, 0x30
	0x03C8F2C8 RET
	0x03C8F2CC STP X30, X21, [X31 - 0x20]!
	0x03C8F2D0 STP X20, X19, [X31 + 0x10]
	0x03C8F2D4 ADRP X21, 0x757000
	0x03C8F2D8 LDR X2, [X21 + 0xF18]
	0x03C8F2DC MOV X19, X1
	0x03C8F2E0 MOV X20, X0
	0x03C8F2E4 CBNZ X2, 0x3C8F2FC
	0x03C8F2E8 ADRP X0, 0xFFFFFFFFFCE8C000
	0x03C8F2EC ADD X0, X0, 0x570
	0x03C8F2F0 BL 0x1C16CB8
	0x03C8F2F4 MOV X2, X0
	0x03C8F2F8 STR X0, [X21 + 0xF18]
	0x03C8F2FC MOV X0, X20
	0x03C8F300 MOV X1, X19
	0x03C8F304 LDP X20, X19, [X31 + 0x10]
	0x03C8F308 LDP X30, X21, [X31], #0x20
	0x03C8F30C BR X2
	0x03C8F310 STR X30, [X31 - 0x20]!
	0x03C8F314 STP X20, X19, [X31 + 0x10]
	0x03C8F318 ADRP X20, 0x757000
	0x03C8F31C LDR X1, [X20 + 0xEA8]
	0x03C8F320 MOV X19, X0

ISIL:
	001 Subtract X31, X31, 272
	002 Move [X31+176], X29
	003 Move [X31+184], X30
	004 Move [X31+192], X28
	005 Move [X31+200], X27
	006 Move [X31+208], X26
	007 Move [X31+216], X25
	008 Move [X31+224], X24
	009 Move [X31+232], X23
	010 Move [X31+240], X22
	011 Move [X31+248], X21
	012 Move [X31+256], X20
	013 Move [X31+264], X19
	014 Move [X31+24], X0
	015 Move X19, 0x759000
	016 Move X28, 0x466000
	017 Move W8, [X19+3579]
	018 Move X28, [X28+1528]
	019 Move X20, X1
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {38}
	024 Move X0, 0x466000
	025 Move X0, [X0+1432]
	026 Call 0x1C17CF4
	027 Move X0, 0x466000
	028 Move X0, [X0+1528]
	029 Call 0x1C17CF4
	030 Move X0, 0x4D3000
	031 Move X0, [X0+2312]
	032 Call 0x1C17CF4
	033 Move X0, 0x4D3000
	034 Move X0, [X0+2320]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X19+3579], W8
	038 Move X0, [X28]
	039 NotImplemented "Instruction MOVI not yet implemented."
	040 Move [X31+64], X31
	041 Move [X31+32], V0
	042 Move [X31+40], V0
	043 Move W8, [X0+224]
	044 Compare W8, 0
	045 JumpIfNotEqual {47}
	046 Call 0x1C17DFC
	047 Move X19, 0x759000
	048 Move X8, [X19+3408]
	049 Compare X8, 0
	050 JumpIfNotEqual {56}
	051 Move X0, -51929088
	052 Add X0, X0, 2551
	053 Call 0x1C17CB8
	054 Move X8, X0
	055 Move [X19+3408], X0
	056 NotImplemented "Instruction BLR not yet implemented."
	057 Move TEMP, X0
	058 And TEMP, TEMP, 1
	059 Compare TEMP, 1
	060 JumpIfNotEqual {285}
	061 NotImplemented "Instruction CMP not yet implemented."
	062 And X8, X20, 0
	063 Move [X31+16], X8
	064 Move X19, 0x465000
	065 Move X19, [X19+1432]
	066 Move X29, X31
	067 Move X20, 0x758000
	068 Move X21, 0x758000
	069 Move X22, 0x758000
	070 Move X8, 0x4D2000
	071 Move X8, [X8+2312]
	072 NotImplemented "Instruction MOVI not yet implemented."
	073 Move [X31+160], X31
	074 Move [X31+128], V0
	075 Move [X31+136], V0
	076 Move X8, [X8]
	077 Move X0, [X8+32]
	078 Move W8, [X0+309]
	079 Move TEMP, X8
	080 And TEMP, TEMP, 1
	081 Compare TEMP, 1
	082 JumpIfEqual {84}
	083 Call 0x1C5D684
	084 Move X8, [X31+24]
	085 Move W9, 40
	086 NotImplemented "Instruction MADD not yet implemented."
	087 Move V1, [X8]
	088 Move V0, [X8+16]
	089 Move X9, [X8+32]
	090 Move [X31+32], V1
	091 Move [X31+40], V0
	092 Move W8, [X31+52]
	093 Move [X31+64], X9
	094 And W31, W8, 3
	095 Move W8, [X31+48]
	096 Compare W8, 0
	097 JumpIfEqual {282}
	098 Move W23, W31
	099 Add X0, X31, 32
	100 Move W1, W23
	101 Call ContactPairHeader.GetContactPair_Internal, X0, X1
	102 Move W8, [X0+20]
	103 And W31, W8, 3
	104 Move X24, X0
	105 Add X0, X31, 32
	106 Call ContactPairHeader.get_Body, X0
	107 Move X26, X0
	108 Add X0, X31, 32
	109 Call ContactPairHeader.get_OtherBody, X0
	110 Move X8, [X19]
	111 Move X25, X0
	112 Move W9, [X8+224]
	113 Compare W9, 0
	114 JumpIfNotEqual {117}
	115 Move X0, X8
	116 Call 0x1C17DFC
	117 Move X0, X26
	118 Move X1, X31
	119 Move X2, X31
	120 Call Object.op_Inequality, X0, X1
	121 Move TEMP, X0
	122 And TEMP, TEMP, 1
	123 Compare TEMP, 1
	124 JumpIfEqual {128}
	125 Move X0, X24
	126 Call ContactPair.get_Collider, X0
	127 Move X26, X0
	128 Move X0, [X19]
	129 Move W8, [X0+224]
	130 Compare W8, 0
	131 JumpIfNotEqual {133}
	132 Call 0x1C17DFC
	133 Move X0, X25
	134 Move X1, X31
	135 Move X2, X31
	136 Call Object.op_Inequality, X0, X1
	137 Move TEMP, X0
	138 And TEMP, TEMP, 1
	139 Compare TEMP, 1
	140 JumpIfEqual {144}
	141 Move X0, X24
	142 Call ContactPair.get_OtherCollider, X0
	143 Move X25, X0
	144 NotImplemented "Instruction LDRH not yet implemented."
	145 Move TEMP, X8
	146 And TEMP, TEMP, 4
	147 Compare TEMP, 4
	148 JumpIfEqual {157}
	149 Move TEMP, X8
	150 And TEMP, TEMP, 8
	151 Compare TEMP, 8
	152 JumpIfEqual {199}
	153 Move TEMP, X8
	154 And TEMP, TEMP, 16
	155 Compare TEMP, 16
	156 JumpIfEqual {241}
	157 Move X0, [X28]
	158 Move W8, [X0+224]
	159 Compare W8, 0
	160 JumpIfNotEqual {162}
	161 Call 0x1C17DFC
	162 Add X0, X31, 32
	163 Move X1, X24
	164 Move W2, W31
	165 Call Physics.GetCollisionToReport, X0, X1, X2
	166 Move X8, [X22+3552]
	167 Move X27, X0
	168 Compare X8, 0
	169 JumpIfNotEqual {175}
	170 Move X0, -51941376
	171 Add X0, X0, 1945
	172 Call 0x1C17CB8
	173 Move X8, X0
	174 Move [X22+3552], X0
	175 Move X0, X26
	176 Move X1, X27
	177 NotImplemented "Instruction BLR not yet implemented."
	178 Add X0, X31, 32
	179 Move W2, 1
	180 Move X1, X24
	181 Call Physics.GetCollisionToReport, X0, X1, X2
	182 Move X8, [X22+3552]
	183 Move X27, X0
	184 Compare X8, 0
	185 JumpIfNotEqual {191}
	186 Move X0, -51941376
	187 Add X0, X0, 1945
	188 Call 0x1C17CB8
	189 Move X8, X0
	190 Move [X22+3552], X0
	191 Move X0, X25
	192 Move X1, X27
	193 NotImplemented "Instruction BLR not yet implemented."
	194 NotImplemented "Instruction LDRH not yet implemented."
	195 Move TEMP, X8
	196 And TEMP, TEMP, 8
	197 Compare TEMP, 8
	198 JumpIfNotEqual {153}
	199 Move X0, [X28]
	200 Move W8, [X0+224]
	201 Compare W8, 0
	202 JumpIfNotEqual {204}
	203 Call 0x1C17DFC
	204 Add X0, X31, 32
	205 Move X1, X24
	206 Move W2, W31
	207 Call Physics.GetCollisionToReport, X0, X1, X2
	208 Move X8, [X21+3560]
	209 Move X27, X0
	210 Compare X8, 0
	211 JumpIfNotEqual {217}
	212 Move X0, -52015104
	213 Add X0, X0, 2827
	214 Call 0x1C17CB8
	215 Move X8, X0
	216 Move [X21+3560], X0
	217 Move X0, X26
	218 Move X1, X27
	219 NotImplemented "Instruction BLR not yet implemented."
	220 Add X0, X31, 32
	221 Move W2, 1
	222 Move X1, X24
	223 Call Physics.GetCollisionToReport, X0, X1, X2
	224 Move X8, [X21+3560]
	225 Move X27, X0
	226 Compare X8, 0
	227 JumpIfNotEqual {233}
	228 Move X0, -52015104
	229 Add X0, X0, 2827
	230 Call 0x1C17CB8
	231 Move X8, X0
	232 Move [X21+3560], X0
	233 Move X0, X25
	234 Move X1, X27
	235 NotImplemented "Instruction BLR not yet implemented."
	236 NotImplemented "Instruction LDRH not yet implemented."
	237 Move TEMP, X8
	238 And TEMP, TEMP, 16
	239 Compare TEMP, 16
	240 JumpIfNotEqual {278}
	241 Move X0, [X28]
	242 Move W8, [X0+224]
	243 Compare W8, 0
	244 JumpIfNotEqual {246}
	245 Call 0x1C17DFC
	246 Add X0, X31, 32
	247 Move X1, X24
	248 Move W2, W31
	249 Call Physics.GetCollisionToReport, X0, X1, X2
	250 Move X8, [X20+3568]
	251 Move X27, X0
	252 Compare X8, 0
	253 JumpIfNotEqual {259}
	254 Move X0, -51843072
	255 Add X0, X0, 1667
	256 Call 0x1C17CB8
	257 Move X8, X0
	258 Move [X20+3568], X0
	259 Move X0, X26
	260 Move X1, X27
	261 NotImplemented "Instruction BLR not yet implemented."
	262 Add X0, X31, 32
	263 Move W2, 1
	264 Move X1, X24
	265 Call Physics.GetCollisionToReport, X0, X1, X2
	266 Move X8, [X20+3568]
	267 Move X24, X0
	268 Compare X8, 0
	269 JumpIfNotEqual {275}
	270 Move X0, -51843072
	271 Add X0, X0, 1667
	272 Call 0x1C17CB8
	273 Move X8, X0
	274 Move [X20+3568], X0
	275 Move X0, X25
	276 Move X1, X24
	277 NotImplemented "Instruction BLR not yet implemented."
	278 Move W8, [X31+48]
	279 Add W23, W23, 1
	280 Move X9, W23
	281 NotImplemented "Instruction CMP not yet implemented."
	282 Move X8, [X31+16]
	283 Add X29, X29, 1
	284 NotImplemented "Instruction CMP not yet implemented."
	285 Move X20, [X31+256]
	286 Move X19, [X31+264]
	287 Move X22, [X31+240]
	288 Move X21, [X31+248]
	289 Move X24, [X31+224]
	290 Move X23, [X31+232]
	291 Move X26, [X31+208]
	292 Move X25, [X31+216]
	293 Move X28, [X31+192]
	294 Move X27, [X31+200]
	295 Move X29, [X31+176]
	296 Move X30, [X31+184]
	297 Add X31, X31, 272
	298 Return 

Method: UnityEngine.Collision GetCollisionToReport(in UnityEngine.ContactPairHeader header, in UnityEngine.ContactPair pair, System.Boolean flipped)

Disassembly:
	0x03C8F354 ADRP X20, 0x757000
	0x03C8F358 LDR X1, [X20 + 0xEB0]
	0x03C8F35C MOV X19, X0
	0x03C8F360 CBNZ X1, 0x3C8F378
	0x03C8F364 ADRP X0, 0xFFFFFFFFFCE74000
	0x03C8F368 ADD X0, X0, 0xA82
	0x03C8F36C BL 0x1C16CB8
	0x03C8F370 MOV X1, X0
	0x03C8F374 STR X0, [X20 + 0xEB0]
	0x03C8F378 MOV X0, X19
	0x03C8F37C LDP X20, X19, [X31 + 0x10]
	0x03C8F380 LDR X30, [X31], #0x20
	0x03C8F384 BR X1
	0x03C8F388 STR X30, [X31 - 0x20]!
	0x03C8F38C STP X20, X19, [X31 + 0x10]
	0x03C8F390 ADRP X20, 0x757000
	0x03C8F394 LDR X1, [X20 + 0xEB8]
	0x03C8F398 MOV X19, X0
	0x03C8F39C CBNZ X1, 0x3C8F3B4
	0x03C8F3A0 ADRP X0, 0xFFFFFFFFFCE7A000
	0x03C8F3A4 ADD X0, X0, 0xCF6
	0x03C8F3A8 BL 0x1C16CB8
	0x03C8F3AC MOV X1, X0
	0x03C8F3B0 STR X0, [X20 + 0xEB8]
	0x03C8F3B4 MOV X0, X19
	0x03C8F3B8 LDP X20, X19, [X31 + 0x10]
	0x03C8F3BC LDR X30, [X31], #0x20
	0x03C8F3C0 BR X1
	0x03C8F3C4 SUB X31, X31, 0x30
	0x03C8F3C8 STP X30, X21, [X31 + 0x10]
	0x03C8F3CC STP X20, X19, [X31 + 0x20]
	0x03C8F3D0 ADRP X21, 0x757000
	0x03C8F3D4 LDR X8, [X21 + 0xF20]
	0x03C8F3D8 MOV W19, W1
	0x03C8F3DC MOV X20, X0
	0x03C8F3E0 STP S0, S1, [X31]
	0x03C8F3E4 STR S2, [X31 + 0x8]
	0x03C8F3E8 CBNZ X8, 0x3C8F400
	0x03C8F3EC ADRP X0, 0xFFFFFFFFFCE8C000
	0x03C8F3F0 ADD X0, X0, 0x5B6
	0x03C8F3F4 BL 0x1C16CB8
	0x03C8F3F8 MOV X8, X0
	0x03C8F3FC STR X0, [X21 + 0xF20]
	0x03C8F400 ADD X1, X31, 0x0
	0x03C8F404 MOV X0, X20
	0x03C8F408 MOV W2, W19
	0x03C8F40C BLR X8
	0x03C8F410 LDP X20, X19, [X31 + 0x20]
	0x03C8F414 LDP X30, X21, [X31 + 0x10]
	0x03C8F418 ADD X31, X31, 0x30
	0x03C8F41C RET
	0x03C8F420 STR X30, [X31 - 0x30]!
	0x03C8F424 STP X22, X21, [X31 + 0x10]
	0x03C8F428 STP X20, X19, [X31 + 0x20]
	0x03C8F42C ADRP X22, 0x757000
	0x03C8F430 LDR X3, [X22 + 0xF20]
	0x03C8F434 MOV W19, W2
	0x03C8F438 MOV X20, X1
	0x03C8F43C MOV X21, X0
	0x03C8F440 CBNZ X3, 0x3C8F458
	0x03C8F444 ADRP X0, 0xFFFFFFFFFCE8C000
	0x03C8F448 ADD X0, X0, 0x5B6
	0x03C8F44C BL 0x1C16CB8
	0x03C8F450 MOV X3, X0
	0x03C8F454 STR X0, [X22 + 0xF20]
	0x03C8F458 MOV X0, X21
	0x03C8F45C MOV X1, X20
	0x03C8F460 MOV W2, W19
	0x03C8F464 LDP X20, X19, [X31 + 0x20]
	0x03C8F468 LDP X22, X21, [X31 + 0x10]
	0x03C8F46C LDR X30, [X31], #0x30
	0x03C8F470 BR X3
	0x03C8F474 SUB X31, X31, 0x30

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x758000
	008 Move X22, 0x465000
	009 Move W8, [X23+3580]
	010 Move X22, [X22+1528]
	011 Move W19, W2
	012 Move X20, X1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0x4D2000
	019 Move X0, [X0+2328]
	020 Call 0x1C17CF4
	021 Move X0, 0x465000
	022 Move X0, [X0+1528]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X23+3580], W8
	026 Move X0, [X22]
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X23, 0x758000
	032 Move X8, [X23+3520]
	033 Compare X8, 0
	034 JumpIfNotEqual {40}
	035 Move X0, -51990528
	036 Add X0, X0, 2847
	037 Call 0x1C17CB8
	038 Move X8, X0
	039 Move [X23+3520], X0
	040 NotImplemented "Instruction BLR not yet implemented."
	041 Move TEMP, X0
	042 And TEMP, TEMP, 1
	043 Compare TEMP, 1
	044 JumpIfNotEqual {75}
	045 Move X0, [X22]
	046 Move W8, [X0+224]
	047 Compare W8, 0
	048 JumpIfNotEqual {51}
	049 Call 0x1C17DFC
	050 Move X0, [X22]
	051 Move X8, [X0+184]
	052 Move X8, [X8+24]
	053 Compare X8, 0
	054 JumpIfEqual {92}
	055 Move X9, [X21+32]
	056 Move V1, [X21]
	057 Move V0, [X21+16]
	058 Move [X8+48], X9
	059 Move [X8+16], V1
	060 Move [X8+24], V0
	061 Move X9, [X20+32]
	062 Move V1, [X20]
	063 Move V0, [X20+16]
	064 Move [X8+104], X31
	065 Move [X8+96], W31
	066 Move [X8+88], X9
	067 Move [X8+72], V0
	068 Move [X8+56], V1
	069 Move X8, [X0+184]
	070 Move X0, [X8+24]
	071 Compare X0, 0
	072 JumpIfEqual {92}
	073 And W8, W19, 1
	074 Move [X0+96], W8
	075 Move X8, 0x4D2000
	076 Move X8, [X8+2328]
	077 Move X0, [X8]
	078 Call 0x1C17F10
	079 And W3, W19, 1
	080 Move X1, X21
	081 Move X2, X20
	082 Move X22, X0
	083 Call Collision..ctor, X0, X1, X2, X3
	084 Move X0, X22
	085 Move X20, [X31+32]
	086 Move X19, [X31+40]
	087 Move X22, [X31+16]
	088 Move X21, [X31+24]
	089 Move X30, [X31+48]
	090 Move X23, [X31+56]
	091 Return X0
	092 Call 0x1C17F20

Method: System.Void .cctor()

Disassembly:
	0x03C8F490 STP S0, S1, [X31]
	0x03C8F494 STR S2, [X31 + 0x8]
	0x03C8F498 CBNZ X8, 0x3C8F4B0
	0x03C8F49C ADRP X0, 0xFFFFFFFFFCE96000
	0x03C8F4A0 ADD X0, X0, 0x6A4
	0x03C8F4A4 BL 0x1C16CB8
	0x03C8F4A8 MOV X8, X0
	0x03C8F4AC STR X0, [X21 + 0xF28]
	0x03C8F4B0 ADD X1, X31, 0x0
	0x03C8F4B4 MOV X0, X20
	0x03C8F4B8 MOV W2, W19
	0x03C8F4BC BLR X8
	0x03C8F4C0 LDP X20, X19, [X31 + 0x20]
	0x03C8F4C4 LDP X30, X21, [X31 + 0x10]
	0x03C8F4C8 ADD X31, X31, 0x30
	0x03C8F4CC RET
	0x03C8F4D0 STR X30, [X31 - 0x30]!
	0x03C8F4D4 STP X22, X21, [X31 + 0x10]
	0x03C8F4D8 STP X20, X19, [X31 + 0x20]
	0x03C8F4DC ADRP X22, 0x757000
	0x03C8F4E0 LDR X3, [X22 + 0xF28]
	0x03C8F4E4 MOV W19, W2
	0x03C8F4E8 MOV X20, X1
	0x03C8F4EC MOV X21, X0
	0x03C8F4F0 CBNZ X3, 0x3C8F508
	0x03C8F4F4 ADRP X0, 0xFFFFFFFFFCE96000
	0x03C8F4F8 ADD X0, X0, 0x6A4
	0x03C8F4FC BL 0x1C16CB8
	0x03C8F500 MOV X3, X0
	0x03C8F504 STR X0, [X22 + 0xF28]
	0x03C8F508 MOV X0, X21
	0x03C8F50C MOV X1, X20
	0x03C8F510 MOV W2, W19
	0x03C8F514 LDP X20, X19, [X31 + 0x20]
	0x03C8F518 LDP X22, X21, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, 0x758000
	006 Move X21, 0x4D2000
	007 Move X20, 0x465000
	008 Move W8, [X19+3581]
	009 Move X21, [X21+2328]
	010 Move X20, [X20+1528]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x4D2000
	016 Move X0, [X0+2328]
	017 Call 0x1C17CF4
	018 Move X0, 0x465000
	019 Move X0, [X0+1528]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X19+3581], W8
	023 Move X0, [X21]
	024 Call 0x1C17F10
	025 Move X1, X31
	026 Move X19, X0
	027 Move [X0+104], X31
	028 Call Object..ctor, X0
	029 NotImplemented "Instruction MOVI not yet implemented."
	030 Move [X19+104], X31
	031 Move [X19+16], V0
	032 Move [X19+24], V0
	033 Move [X19+48], V0
	034 Move [X19+56], V0
	035 Move [X19+5], V0
	036 Move [X19+96], W31
	037 Move X8, [X20]
	038 Move X8, [X8+184]
	039 Move [X8+24], X19
	040 Move X20, [X31+16]
	041 Move X19, [X31+24]
	042 Move X30, [X31+32]
	043 Move X21, [X31+40]
	044 Return 

Method: System.Void get_gravity_Injected(out UnityEngine.Vector3 ret)

Disassembly:
	0x03C8B6EC STR D14, [X31 - 0x70]!
	0x03C8B6F0 STP D13, D12, [X31 + 0x10]
	0x03C8B6F4 STP D11, D10, [X31 + 0x20]
	0x03C8B6F8 STP D9, D8, [X31 + 0x30]
	0x03C8B6FC STP X30, X23, [X31 + 0x40]
	0x03C8B700 STP X22, X21, [X31 + 0x50]
	0x03C8B704 STP X20, X19, [X31 + 0x60]
	0x03C8B708 ADRP X23, 0x75B000
	0x03C8B70C ADRP X22, 0x468000
	0x03C8B710 LDRB W8, [X23 + 0xD85]
	0x03C8B714 LDR X22, [X22 + 0x5F8]
	0x03C8B718 MOV W19, W2
	0x03C8B71C MOV V8.16B, V0.16B
	0x03C8B720 MOV X20, X1
	0x03C8B724 MOV X21, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x75C000
	005 Move X1, [X20+3584]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51802112
	010 Add X0, X0, 2390
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+3584], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Void get_defaultPhysicsScene_Injected(out UnityEngine.PhysicsScene ret)

Disassembly:
	0x03C8B880 LDR X0, [X22]
	0x03C8B884 LDR W8, [X0 + 0xE0]
	0x03C8B888 CBNZ W8, 0x3C8B890
	0x03C8B88C BL 0x1C16DFC
	0x03C8B890 BL 0x3C8A804
	0x03C8B894 STR W0, [X31 + 0x8]
	0x03C8B898 LDP S0, S1, [X20]
	0x03C8B89C LDP S2, S3, [X20 + 0x8]
	0x03C8B8A0 LDP S4, S5, [X20 + 0x10]
	0x03C8B8A4 MOVZ W8, 0x7F800000
	0x03C8B8A8 ADD X0, X31, 0x8
	0x03C8B8AC MOVN W2, 0x4
	0x03C8B8B0 FMOV S6, W8
	0x03C8B8B4 MOV X1, X19
	0x03C8B8B8 MOV W3, W31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x75C000
	005 Move X1, [X20+3592]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51982336
	010 Add X0, X0, 2572
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+3592], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: UnityEngine.RaycastHit[] Internal_RaycastAll_Injected(ref UnityEngine.PhysicsScene physicsScene, ref UnityEngine.Ray ray, System.Single maxDistance, System.Int32 mask, UnityEngine.QueryTriggerInteraction queryTriggerInteraction)

Disassembly:
	0x03C8CCFC LDR X5, [X24 + 0xE18]
	0x03C8CD00 MOV W19, W4
	0x03C8CD04 MOV W20, W3
	0x03C8CD08 MOV V8.16B, V0.16B
	0x03C8CD0C MOV X21, X2
	0x03C8CD10 MOV X22, X1
	0x03C8CD14 MOV X23, X0
	0x03C8CD18 CBNZ X5, 0x3C8CD30
	0x03C8CD1C ADRP X0, 0xFFFFFFFFFCE7D000
	0x03C8CD20 ADD X0, X0, 0xBE4
	0x03C8CD24 BL 0x1C16CB8
	0x03C8CD28 MOV X5, X0
	0x03C8CD2C STR X0, [X24 + 0xE18]
	0x03C8CD30 MOV X0, X23
	0x03C8CD34 MOV X1, X22
	0x03C8CD38 MOV X2, X21
	0x03C8CD3C MOV W3, W20
	0x03C8CD40 MOV W4, W19
	0x03C8CD44 LDP X20, X19, [X31 + 0x30]
	0x03C8CD48 LDP X22, X21, [X31 + 0x20]
	0x03C8CD4C LDP X24, X23, [X31 + 0x10]
	0x03C8CD50 LDR X30, [X31 + 0x8]
	0x03C8CD54 MOV V0.16B, V8.16B
	0x03C8CD58 LDR V8, [X31], #0x40
	0x03C8CD5C BR X5
	0x03C8CD60 STR D14, [X31 - 0x60]!
	0x03C8CD64 STP D13, D12, [X31 + 0x8]

ISIL:
	001 Move [X31-64], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x75B000
	009 Move X4, [X23+3600]
	010 Move W19, W3
	011 Move W20, W2
	012 Move V8, V0
	013 Move X21, X1
	014 Move X22, X0
	015 Compare X4, 0
	016 JumpIfNotEqual {22}
	017 Move X0, -51937280
	018 Add X0, X0, 2533
	019 Call 0x1C17CB8
	020 Move X4, X0
	021 Move [X23+3600], X0
	022 Move X0, X22
	023 Move X1, X21
	024 Move W2, W20
	025 Move W3, W19
	026 Move X20, [X31+48]
	027 Move X19, [X31+56]
	028 Move X22, [X31+32]
	029 Move X21, [X31+40]
	030 Move X30, [X31+16]
	031 Move X23, [X31+24]
	032 Move V0, V8
	033 Move V8, [X31+64]
	034 CallNoReturn X4

Method: UnityEngine.Collider[] OverlapCapsule_Internal_Injected(ref UnityEngine.PhysicsScene physicsScene, ref UnityEngine.Vector3 point0, ref UnityEngine.Vector3 point1, System.Single radius, System.Int32 layerMask, UnityEngine.QueryTriggerInteraction queryTriggerInteraction)

Disassembly:
	0x03C8DCE4 ANDS W31, W19, 0x1
	0x03C8DCE8 LDP X20, X19, [X31 + 0x10]
	0x03C8DCEC MOVZ W8, 0x2
	0x03C8DCF0 CSEL W0, W31, W8, NE
	0x03C8DCF4 LDP X30, X21, [X31], #0x20
	0x03C8DCF8 BR X1
	0x03C8DCFC SUB X31, X31, 0x50
	0x03C8DD00 STP X30, X23, [X31 + 0x20]
	0x03C8DD04 STP X22, X21, [X31 + 0x30]
	0x03C8DD08 STP X20, X19, [X31 + 0x40]
	0x03C8DD0C ADRP X22, 0x759000
	0x03C8DD10 LDRB W8, [X22 + 0xDFA]
	0x03C8DD14 MOV W20, W2
	0x03C8DD18 MOV X21, X1
	0x03C8DD1C MOV X19, X0
	0x03C8DD20 TBNZ X8, 0x0, 0x3C8DD50
	0x03C8DD24 ADRP X0, 0x4D3000
	0x03C8DD28 LDR X0, [X0 + 0x8F8]
	0x03C8DD2C BL 0x1C16CF4
	0x03C8DD30 ADRP X0, 0x4D3000
	0x03C8DD34 LDR X0, [X0 + 0x900]
	0x03C8DD38 BL 0x1C16CF4
	0x03C8DD3C ADRP X0, 0x466000
	0x03C8DD40 LDR X0, [X0 + 0x5F8]
	0x03C8DD44 BL 0x1C16CF4
	0x03C8DD48 MOVZ W8, 0x1
	0x03C8DD4C STRB W8, [X22 + 0xDFA]
	0x03C8DD50 CBZ W20, 0x3C8DE08
	0x03C8DD54 ADRP X8, 0x4D3000
	0x03C8DD58 LDR X8, [X8 + 0x8F8]
	0x03C8DD5C ADRP X22, 0x466000

ISIL:
	001 Move [X31-64], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X24, 0x75A000
	010 Move X5, [X24+3608]
	011 Move W19, W4
	012 Move W20, W3
	013 Move V8, V0
	014 Move X21, X2
	015 Move X22, X1
	016 Move X23, X0
	017 Compare X5, 0
	018 JumpIfNotEqual {24}
	019 Move X0, -51916800
	020 Add X0, X0, 3044
	021 Call 0x1C17CB8
	022 Move X5, X0
	023 Move [X24+3608], X0
	024 Move X0, X23
	025 Move X1, X22
	026 Move X2, X21
	027 Move W3, W20
	028 Move W4, W19
	029 Move X20, [X31+48]
	030 Move X19, [X31+56]
	031 Move X22, [X31+32]
	032 Move X21, [X31+40]
	033 Move X24, [X31+16]
	034 Move X23, [X31+24]
	035 Move X30, [X31+8]
	036 Move V0, V8
	037 Move V8, [X31+64]
	038 CallNoReturn X5

Method: UnityEngine.Collider[] OverlapSphere_Internal_Injected(ref UnityEngine.PhysicsScene physicsScene, ref UnityEngine.Vector3 position, System.Single radius, System.Int32 layerMask, UnityEngine.QueryTriggerInteraction queryTriggerInteraction)

Disassembly:
	0x03C8DF88 TBNZ X8, 0x0, 0x3C8DFC4
	0x03C8DF8C ADRP X0, 0x466000
	0x03C8DF90 LDR X0, [X0 + 0x598]
	0x03C8DF94 BL 0x1C16CF4
	0x03C8DF98 ADRP X0, 0x466000
	0x03C8DF9C LDR X0, [X0 + 0x5F8]
	0x03C8DFA0 BL 0x1C16CF4
	0x03C8DFA4 ADRP X0, 0x4D3000
	0x03C8DFA8 LDR X0, [X0 + 0x908]
	0x03C8DFAC BL 0x1C16CF4
	0x03C8DFB0 ADRP X0, 0x4D3000
	0x03C8DFB4 LDR X0, [X0 + 0x910]
	0x03C8DFB8 BL 0x1C16CF4
	0x03C8DFBC MOVZ W8, 0x1
	0x03C8DFC0 STRB W8, [X19 + 0xDFB]
	0x03C8DFC4 LDR X0, [X28]
	0x03C8DFC8 MOVI V0.2D, 0x0
	0x03C8DFCC STR X31, [X31 + 0x40]
	0x03C8DFD0 STP V0, V0, [X31 + 0x20]
	0x03C8DFD4 LDR W8, [X0 + 0xE0]
	0x03C8DFD8 CBNZ W8, 0x3C8DFE0
	0x03C8DFDC BL 0x1C16DFC
	0x03C8DFE0 ADRP X19, 0x759000
	0x03C8DFE4 LDR X8, [X19 + 0xD50]
	0x03C8DFE8 CBNZ X8, 0x3C8E000
	0x03C8DFEC ADRP X0, 0xFFFFFFFFFCE7A000
	0x03C8DFF0 ADD X0, X0, 0x9F7

ISIL:
	001 Move [X31-64], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x75A000
	009 Move X4, [X23+3616]
	010 Move W19, W3
	011 Move W20, W2
	012 Move V8, V0
	013 Move X21, X1
	014 Move X22, X0
	015 Compare X4, 0
	016 JumpIfNotEqual {22}
	017 Move X0, -51785728
	018 Add X0, X0, 77
	019 Call 0x1C17CB8
	020 Move X4, X0
	021 Move [X23+3616], X0
	022 Move X0, X22
	023 Move X1, X21
	024 Move W2, W20
	025 Move W3, W19
	026 Move X20, [X31+48]
	027 Move X19, [X31+56]
	028 Move X22, [X31+32]
	029 Move X21, [X31+40]
	030 Move X30, [X31+16]
	031 Move X23, [X31+24]
	032 Move V0, V8
	033 Move V8, [X31+64]
	034 CallNoReturn X4

Method: System.Void Simulate_Internal_Injected(ref UnityEngine.PhysicsScene physicsScene, System.Single step)

Disassembly:
	0x03C8E22C CBNZ X8, 0x3C8E244
	0x03C8E230 ADRP X0, 0xFFFFFFFFFCE65000
	0x03C8E234 ADD X0, X0, 0xB0B
	0x03C8E238 BL 0x1C16CB8
	0x03C8E23C MOV X8, X0
	0x03C8E240 STR X0, [X21 + 0xDE8]
	0x03C8E244 MOV X0, X25
	0x03C8E248 MOV X1, X27
	0x03C8E24C BLR X8
	0x03C8E250 LDRH W8, [X24 + 0x16]
	0x03C8E254 TBZ X8, 0x4, 0x3C8E2E0
	0x03C8E258 LDR X0, [X28]
	0x03C8E25C LDR W8, [X0 + 0xE0]
	0x03C8E260 CBNZ W8, 0x3C8E268
	0x03C8E264 BL 0x1C16DFC
	0x03C8E268 ADD X0, X31, 0x20
	0x03C8E26C MOV X1, X24
	0x03C8E270 MOV W2, W31
	0x03C8E274 BL 0x3C8E354

ISIL:
	001 Move [X31-32], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x759000
	006 Move X1, [X20+3624]
	007 Move V8, V0
	008 Move X19, X0
	009 Compare X1, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51789824
	012 Add X0, X0, 241
	013 Call 0x1C17CB8
	014 Move X1, X0
	015 Move [X20+3624], X0
	016 Move X0, X19
	017 Move X20, [X31+16]
	018 Move X19, [X31+24]
	019 Move X30, [X31+8]
	020 Move V0, V8
	021 Move V8, [X31+32]
	022 CallNoReturn X1

Method: System.Boolean Query_ComputePenetration_Injected(UnityEngine.Collider colliderA, ref UnityEngine.Vector3 positionA, ref UnityEngine.Quaternion rotationA, UnityEngine.Collider colliderB, ref UnityEngine.Vector3 positionB, ref UnityEngine.Quaternion rotationB, ref UnityEngine.Vector3 direction, ref System.Single distance)

Disassembly:
	0x03C8E500 STRB W31, [X19 + 0x60]
	0x03C8E504 LDR X8, [X20]
	0x03C8E508 LDR X8, [X8 + 0xB8]
	0x03C8E50C STR X19, [X8 + 0x18]
	0x03C8E510 LDP X20, X19, [X31 + 0x10]
	0x03C8E514 LDP X30, X21, [X31], #0x20
	0x03C8E518 RET
	0x03C8E51C STP X30, X21, [X31 - 0x20]!
	0x03C8E520 STP X20, X19, [X31 + 0x10]
	0x03C8E524 LDR X8, [X2 + 0x8]
	0x03C8E528 STP X1, X2, [X0 + 0x20]
	0x03C8E52C MOV X19, X0
	0x03C8E530 MOV X20, X1
	0x03C8E534 STR X8, [X0 + 0x10]
	0x03C8E538 LDRB W21, [X2 + 0x52]
	0x03C8E53C STR X0, [X0 + 0x40]
	0x03C8E540 MOV X0, X2
	0x03C8E544 BL 0x1C16D84
	0x03C8E548 TBZ X0, 0x0, 0x3C8E564
	0x03C8E54C CMP W21, 0x2
	0x03C8E550 B.NE 0x3C8E568
	0x03C8E554 ADRP X8, 0xFFFFFFFFFDF7F000
	0x03C8E558 ADD X8, X8, 0x13C
	0x03C8E55C STR X8, [X19 + 0x18]
	0x03C8E560 B 0x3C8E578
	0x03C8E564 CBZ X20, 0x3C8E590
	0x03C8E568 LDR X8, [X19 + 0x10]
	0x03C8E56C LDR X9, [X19 + 0x20]
	0x03C8E570 STR X8, [X19 + 0x18]
	0x03C8E574 STR X9, [X19 + 0x40]
	0x03C8E578 ADRP X8, 0xFFFFFFFFFDF7F000
	0x03C8E57C ADD X8, X8, 0xDC
	0x03C8E580 STR X8, [X19 + 0x38]
	0x03C8E584 LDP X20, X19, [X31 + 0x10]
	0x03C8E588 LDP X30, X21, [X31], #0x20

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X27, 0x759000
	012 Move X8, [X27+3632]
	013 Move X19, X7
	014 Move X20, X6
	015 Move X21, X5
	016 Move X22, X4
	017 Move X23, X3
	018 Move X24, X2
	019 Move X25, X1
	020 Move X26, X0
	021 Compare X8, 0
	022 JumpIfNotEqual {28}
	023 Move X0, -52002816
	024 Add X0, X0, 2430
	025 Call 0x1C17CB8
	026 Move X8, X0
	027 Move [X27+3632], X0
	028 Move X0, X26
	029 Move X1, X25
	030 Move X2, X24
	031 Move X3, X23
	032 Move X4, X22
	033 Move X5, X21
	034 Move X6, X20
	035 Move X7, X19
	036 Move X20, [X31+64]
	037 Move X19, [X31+72]
	038 Move X22, [X31+48]
	039 Move X21, [X31+56]
	040 Move X24, [X31+32]
	041 Move X23, [X31+40]
	042 Move X26, [X31+16]
	043 Move X25, [X31+24]
	044 Move X30, [X31+80]
	045 Move X27, [X31+88]
	046 CallNoReturn X8

