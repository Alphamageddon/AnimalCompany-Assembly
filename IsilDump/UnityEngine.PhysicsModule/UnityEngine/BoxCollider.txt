Type: UnityEngine.BoxCollider

Method: UnityEngine.Vector3 get_center()

Disassembly:
	0x03C90E14 STR S17, [X31 + 0xC]
	0x03C90E18 B 0x3C90CF0
	0x03C90E1C SUB X31, X31, 0x30
	0x03C90E20 STR X30, [X31 + 0x10]
	0x03C90E24 STP X20, X19, [X31 + 0x20]
	0x03C90E28 STR W0, [X31 + 0x8]
	0x03C90E2C ADD X0, X31, 0x8
	0x03C90E30 MOV X1, X31
	0x03C90E34 BL 0x3C46324
	0x03C90E38 TBZ X0, 0x0, 0x3C90E8C
	0x03C90E3C LDR W0, [X31 + 0x8]
	0x03C90E40 BL 0x3C90F1C
	0x03C90E44 ADRP X20, 0x757000
	0x03C90E48 LDR X8, [X20 + 0x20]
	0x03C90E4C MOV X19, X0
	0x03C90E50 STR W19, [X31 + 0x18]
	0x03C90E54 CBNZ X8, 0x3C90E6C
	0x03C90E58 ADRP X0, 0xFFFFFFFFFCE9C000
	0x03C90E5C ADD X0, X0, 0xE9E
	0x03C90E60 BL 0x1C16CB8
	0x03C90E64 MOV X8, X0
	0x03C90E68 STR X0, [X20 + 0x20]
	0x03C90E6C ADD X0, X31, 0x18

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+32], X20
	004 Move [X31+40], X19
	005 Move X20, 0x757000
	006 Move X8, [X20+4064]
	007 Move X19, X0
	008 Move [X31+8], W31
	009 Move [X31], X31
	010 Compare X8, 0
	011 JumpIfNotEqual {17}
	012 Move X0, -51896320
	013 Add X0, X0, 1797
	014 Call 0x1C17CB8
	015 Move X8, X0
	016 Move [X20+4064], X0
	017 Add X1, X31, 0
	018 Move X0, X19
	019 NotImplemented "Instruction BLR not yet implemented."
	020 Move S0, [X31]
	021 Move S1, [X31+4]
	022 Move V2, [X31+8]
	023 Move X20, [X31+32]
	024 Move X19, [X31+40]
	025 Move X30, [X31+16]
	026 Add X31, X31, 48
	027 Return X0

Method: System.Void set_center(UnityEngine.Vector3 value)

Disassembly:
	0x03C90EB4 LDR X0, [X0 + 0xC20]
	0x03C90EB8 BL 0x1C16D08
	0x03C90EBC MOV X2, X0
	0x03C90EC0 MOV X0, X19
	0x03C90EC4 MOV X1, X20
	0x03C90EC8 MOV X3, X31
	0x03C90ECC BL 0x330E16C
	0x03C90ED0 B 0x3C90F04
	0x03C90ED4 ADRP X0, 0x463000
	0x03C90ED8 LDR X0, [X0 + 0x7D0]
	0x03C90EDC BL 0x1C16D08
	0x03C90EE0 BL 0x1C16F10
	0x03C90EE4 MOV X19, X0
	0x03C90EE8 ADRP X0, 0x4D0000
	0x03C90EEC LDR X0, [X0 + 0x8A8]
	0x03C90EF0 BL 0x1C16D08
	0x03C90EF4 MOV X1, X0
	0x03C90EF8 MOV X0, X19
	0x03C90EFC MOV X2, X31
	0x03C90F00 BL 0x33B2C70
	0x03C90F04 ADRP X0, 0x4D0000

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+32], X20
	004 Move [X31+40], X19
	005 Move X20, 0x757000
	006 Move X8, [X20+4072]
	007 Move X19, X0
	008 Move [X31], S0
	009 Move [X31+8], S1
	010 Move [X31+8], S2
	011 Compare X8, 0
	012 JumpIfNotEqual {18}
	013 Move X0, -51904512
	014 Add X0, X0, 2917
	015 Call 0x1C17CB8
	016 Move X8, X0
	017 Move [X20+4072], X0
	018 Add X1, X31, 0
	019 Move X0, X19
	020 NotImplemented "Instruction BLR not yet implemented."
	021 Move X20, [X31+32]
	022 Move X19, [X31+40]
	023 Move X30, [X31+16]
	024 Add X31, X31, 48
	025 Return 

Method: UnityEngine.Vector3 get_size()

Disassembly:
	0x03C90F4C ADD X0, X31, 0x8
	0x03C90F50 ADD X1, X31, 0x0
	0x03C90F54 BLR X8
	0x03C90F58 LDR W0, [X31]
	0x03C90F5C LDP X30, X19, [X31 + 0x10]
	0x03C90F60 ADD X31, X31, 0x20
	0x03C90F64 RET
	0x03C90F68 STP X30, X21, [X31 - 0x20]!
	0x03C90F6C STP X20, X19, [X31 + 0x10]
	0x03C90F70 ADRP X21, 0x757000
	0x03C90F74 LDR X2, [X21 + 0x60]
	0x03C90F78 MOV X19, X1
	0x03C90F7C MOV X20, X0
	0x03C90F80 CBNZ X2, 0x3C90F98
	0x03C90F84 ADRP X0, 0xFFFFFFFFFCE83000
	0x03C90F88 ADD X0, X0, 0x542
	0x03C90F8C BL 0x1C16CB8
	0x03C90F90 MOV X2, X0
	0x03C90F94 STR X0, [X21 + 0x60]
	0x03C90F98 MOV X0, X20
	0x03C90F9C MOV X1, X19
	0x03C90FA0 LDP X20, X19, [X31 + 0x10]
	0x03C90FA4 LDP X30, X21, [X31], #0x20

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+32], X20
	004 Move [X31+40], X19
	005 Move X20, 0x757000
	006 Move X8, [X20+4080]
	007 Move X19, X0
	008 Move [X31+8], W31
	009 Move [X31], X31
	010 Compare X8, 0
	011 JumpIfNotEqual {17}
	012 Move X0, -51879936
	013 Add X0, X0, 344
	014 Call 0x1C17CB8
	015 Move X8, X0
	016 Move [X20+4080], X0
	017 Add X1, X31, 0
	018 Move X0, X19
	019 NotImplemented "Instruction BLR not yet implemented."
	020 Move S0, [X31]
	021 Move S1, [X31+4]
	022 Move V2, [X31+8]
	023 Move X20, [X31+32]
	024 Move X19, [X31+40]
	025 Move X30, [X31+16]
	026 Add X31, X31, 48
	027 Return X0

Method: System.Void set_size(UnityEngine.Vector3 value)

Disassembly:
	0x03C90FEC BL 0x1C16D08
	0x03C90FF0 BL 0x1C16F10
	0x03C90FF4 MOV X19, X0
	0x03C90FF8 ADRP X0, 0x4D0000
	0x03C90FFC LDR X0, [X0 + 0x948]
	0x03C91000 BL 0x1C16D08
	0x03C91004 MOV X1, X0
	0x03C91008 MOV X0, X19
	0x03C9100C MOV X2, X31
	0x03C91010 BL 0x3379B6C
	0x03C91014 ADRP X0, 0x4CF000
	0x03C91018 LDR X0, [X0 + 0x950]
	0x03C9101C BL 0x1C16D08
	0x03C91020 MOV X1, X0
	0x03C91024 MOV X0, X19
	0x03C91028 BL 0x1C16DEC
	0x03C9102C STR X30, [X31 - 0x30]!
	0x03C91030 STP X22, X21, [X31 + 0x10]
	0x03C91034 STP X20, X19, [X31 + 0x20]
	0x03C91038 ADRP X22, 0x756000
	0x03C9103C LDR X3, [X22 + 0x70]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+32], X20
	004 Move [X31+40], X19
	005 Move X20, 0x757000
	006 Move X8, [X20+4088]
	007 Move X19, X0
	008 Move [X31], S0
	009 Move [X31+8], S1
	010 Move [X31+8], S2
	011 Compare X8, 0
	012 JumpIfNotEqual {18}
	013 Move X0, -51965952
	014 Add X0, X0, 1774
	015 Call 0x1C17CB8
	016 Move X8, X0
	017 Move [X20+4088], X0
	018 Add X1, X31, 0
	019 Move X0, X19
	020 NotImplemented "Instruction BLR not yet implemented."
	021 Move X20, [X31+32]
	022 Move X19, [X31+40]
	023 Move X30, [X31+16]
	024 Add X31, X31, 48
	025 Return 

Method: System.Void get_center_Injected(out UnityEngine.Vector3 ret)

Disassembly:
	0x03C90E70 BLR X8
	0x03C90E74 TBZ X0, 0x0, 0x3C90ED4
	0x03C90E78 AND X0, X19, 0x0
	0x03C90E7C LDP X20, X19, [X31 + 0x20]
	0x03C90E80 LDR X30, [X31 + 0x10]
	0x03C90E84 ADD X31, X31, 0x30
	0x03C90E88 RET
	0x03C90E8C ADRP X0, 0x46B000
	0x03C90E90 LDR X0, [X0 + 0x578]
	0x03C90E94 BL 0x1C16D08
	0x03C90E98 BL 0x1C16F10
	0x03C90E9C MOV X19, X0
	0x03C90EA0 ADRP X0, 0x4D0000
	0x03C90EA4 LDR X0, [X0 + 0x8A0]
	0x03C90EA8 BL 0x1C16D08
	0x03C90EAC MOV X20, X0
	0x03C90EB0 ADRP X0, 0x46E000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x757000
	006 Move X2, [X21+4064]
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51896320
	012 Add X0, X0, 1797
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+4064], X0
	016 Move X0, X20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Void set_center_Injected(ref UnityEngine.Vector3 value)

Disassembly:
	0x03C90F08 LDR X0, [X0 + 0x940]
	0x03C90F0C BL 0x1C16D08
	0x03C90F10 MOV X1, X0
	0x03C90F14 MOV X0, X19
	0x03C90F18 BL 0x1C16DEC
	0x03C90F1C SUB X31, X31, 0x20
	0x03C90F20 STP X30, X19, [X31 + 0x10]
	0x03C90F24 ADRP X19, 0x757000
	0x03C90F28 LDR X8, [X19 + 0x60]
	0x03C90F2C STR W0, [X31 + 0x8]
	0x03C90F30 STR W31, [X31]
	0x03C90F34 CBNZ X8, 0x3C90F4C
	0x03C90F38 ADRP X0, 0xFFFFFFFFFCE83000
	0x03C90F3C ADD X0, X0, 0x542
	0x03C90F40 BL 0x1C16CB8
	0x03C90F44 MOV X8, X0
	0x03C90F48 STR X0, [X19 + 0x60]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x757000
	006 Move X2, [X21+4072]
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51904512
	012 Add X0, X0, 2917
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+4072], X0
	016 Move X0, X20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Void get_size_Injected(out UnityEngine.Vector3 ret)

Disassembly:
	0x03C90FA8 BR X2
	0x03C90FAC STP X30, X19, [X31 - 0x10]!
	0x03C90FB0 LDR W8, [X0 + 0x10]
	0x03C90FB4 MOV W19, W1
	0x03C90FB8 SXTW X9, W19
	0x03C90FBC CMP X9, X8
	0x03C90FC0 B.GE 0x3C90FE4
	0x03C90FC4 ADD X0, X0, 0x8
	0x03C90FC8 MOV X1, X31
	0x03C90FCC BL 0x33C6854
	0x03C90FD0 ADD W8, W19, W19, 0x2, LSL
	0x03C90FD4 UBFM W8, W8, 0x1D, 0x1C
	0x03C90FD8 ADD X0, X0, W8, SXTW
	0x03C90FDC LDP X30, X19, [X31], #0x10
	0x03C90FE0 RET
	0x03C90FE4 ADRP X0, 0x46D000
	0x03C90FE8 LDR X0, [X0 + 0xF78]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x757000
	006 Move X2, [X21+4080]
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51879936
	012 Add X0, X0, 344
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+4080], X0
	016 Move X0, X20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Void set_size_Injected(ref UnityEngine.Vector3 value)

Disassembly:
	0x03C91040 MOV W20, W2
	0x03C91044 MOV X19, X1
	0x03C91048 MOV X21, X0
	0x03C9104C CBNZ X3, 0x3C91064
	0x03C91050 ADRP X0, 0xFFFFFFFFFCE68000
	0x03C91054 ADD X0, X0, 0xD2A
	0x03C91058 BL 0x1C16CB8
	0x03C9105C MOV X3, X0
	0x03C91060 STR X0, [X22 + 0x70]
	0x03C91064 AND W2, W20, 0x1
	0x03C91068 MOV X0, X21
	0x03C9106C MOV X1, X19
	0x03C91070 LDP X20, X19, [X31 + 0x20]
	0x03C91074 LDP X22, X21, [X31 + 0x10]
	0x03C91078 LDR X30, [X31], #0x30
	0x03C9107C BR X3
	0x03C91080 STP X30, X19, [X31 - 0x10]!

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x756000
	006 Move X2, [X21+4088]
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51965952
	012 Add X0, X0, 1774
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+4088], X0
	016 Move X0, X20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

