Type: UnityEngine.CapsuleCollider

Method: UnityEngine.Vector3 get_center()

Disassembly:
	0x03C90CC0 MOV X0, X23
	0x03C90CC4 MOV X1, X22
	0x03C90CC8 MOV X2, X21
	0x03C90CCC MOV W3, W20
	0x03C90CD0 MOV W4, W19
	0x03C90CD4 LDP X20, X19, [X31 + 0x30]
	0x03C90CD8 LDP X22, X21, [X31 + 0x20]
	0x03C90CDC LDP X24, X23, [X31 + 0x10]
	0x03C90CE0 LDR X30, [X31 + 0x8]
	0x03C90CE4 MOV V0.16B, V8.16B
	0x03C90CE8 LDR V8, [X31], #0x40
	0x03C90CEC BR X5
	0x03C90CF0 SUB X31, X31, 0x60
	0x03C90CF4 STR X30, [X31 + 0x30]
	0x03C90CF8 STP X22, X21, [X31 + 0x40]
	0x03C90CFC STP X20, X19, [X31 + 0x50]
	0x03C90D00 ADRP X22, 0x757000
	0x03C90D04 LDR V6, [X31 + 0x6]
	0x03C90D08 LDR X8, [X22 + 0x58]
	0x03C90D0C MOV W19, W3
	0x03C90D10 MOV W20, W2
	0x03C90D14 MOV X21, X1
	0x03C90D18 STR W0, [X31 + 0x38]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+32], X20
	004 Move [X31+40], X19
	005 Move X20, 0x757000
	006 Move X8, [X20+4056]
	007 Move X19, X0
	008 Move [X31+8], W31
	009 Move [X31], X31
	010 Compare X8, 0
	011 JumpIfNotEqual {17}
	012 Move X0, -51785728
	013 Add X0, X0, 3617
	014 Call 0x1C17CB8
	015 Move X8, X0
	016 Move [X20+4056], X0
	017 Add X1, X31, 0
	018 Move X0, X19
	019 NotImplemented "Instruction BLR not yet implemented."
	020 Move S0, [X31]
	021 Move S1, [X31+4]
	022 Move V2, [X31+8]
	023 Move X20, [X31+32]
	024 Move X19, [X31+40]
	025 Move X30, [X31+16]
	026 Add X31, X31, 48
	027 Return X0

Method: System.Single get_radius()

Disassembly:
	0x03C90D60 MOV W6, W19
	0x03C90D64 BLR X8
	0x03C90D68 LDP X20, X19, [X31 + 0x50]
	0x03C90D6C LDP X22, X21, [X31 + 0x40]
	0x03C90D70 LDR X30, [X31 + 0x30]
	0x03C90D74 ADD X31, X31, 0x60
	0x03C90D78 RET
	0x03C90D7C STR X30, [X31 - 0x50]!
	0x03C90D80 STP X26, X25, [X31 + 0x10]
	0x03C90D84 STP X24, X23, [X31 + 0x20]
	0x03C90D88 STP X22, X21, [X31 + 0x30]
	0x03C90D8C STP X20, X19, [X31 + 0x40]
	0x03C90D90 ADRP X26, 0x757000
	0x03C90D94 LDR X7, [X26 + 0x58]
	0x03C90D98 MOV W19, W6

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x757000
	005 Move X1, [X20+4032]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51785728
	010 Add X0, X0, 3575
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+4032], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Single get_height()

Disassembly:
	0x03C90D9C MOV W20, W5
	0x03C90DA0 MOV X21, X4
	0x03C90DA4 MOV X22, X3
	0x03C90DA8 MOV X23, X2
	0x03C90DAC MOV X24, X1
	0x03C90DB0 MOV X25, X0
	0x03C90DB4 CBNZ X7, 0x3C90DCC
	0x03C90DB8 ADRP X0, 0xFFFFFFFFFCE71000
	0x03C90DBC ADD X0, X0, 0x758
	0x03C90DC0 BL 0x1C16CB8
	0x03C90DC4 MOV X7, X0
	0x03C90DC8 STR X0, [X26 + 0x58]
	0x03C90DCC MOV X0, X25
	0x03C90DD0 MOV X1, X24
	0x03C90DD4 MOV X2, X23

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x757000
	005 Move X1, [X20+4040]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51814400
	010 Add X0, X0, 1849
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+4040], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Int32 get_direction()

Disassembly:
	0x03C90DD8 MOV X3, X22
	0x03C90DDC MOV X4, X21
	0x03C90DE0 MOV W5, W20
	0x03C90DE4 MOV W6, W19
	0x03C90DE8 LDP X20, X19, [X31 + 0x40]
	0x03C90DEC LDP X22, X21, [X31 + 0x30]
	0x03C90DF0 LDP X24, X23, [X31 + 0x20]
	0x03C90DF4 LDP X26, X25, [X31 + 0x10]
	0x03C90DF8 LDR X30, [X31], #0x50
	0x03C90DFC BR X7
	0x03C90E00 LDP S6, S7, [X31]
	0x03C90E04 LDP S16, S17, [X31 + 0x8]
	0x03C90E08 LDR W0, [X0]
	0x03C90E0C STR S6, [X31]
	0x03C90E10 STP S7, S16, [X31 + 0x4]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x757000
	005 Move X1, [X20+4048]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51838976
	010 Add X0, X0, 1693
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+4048], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Void get_center_Injected(out UnityEngine.Vector3 ret)

Disassembly:
	0x03C90D1C STP S0, S1, [X31 + 0x20]
	0x03C90D20 STR S2, [X31 + 0x28]
	0x03C90D24 STP S3, S4, [X31 + 0x10]
	0x03C90D28 STR S5, [X31 + 0x18]
	0x03C90D2C STR V6, [X31]
	0x03C90D30 CBNZ X8, 0x3C90D48
	0x03C90D34 ADRP X0, 0xFFFFFFFFFCE71000
	0x03C90D38 ADD X0, X0, 0x758
	0x03C90D3C BL 0x1C16CB8
	0x03C90D40 MOV X8, X0
	0x03C90D44 STR X0, [X22 + 0x58]
	0x03C90D48 ADD X0, X31, 0x38
	0x03C90D4C ADD X1, X31, 0x20
	0x03C90D50 ADD X2, X31, 0x10
	0x03C90D54 ADD X4, X31, 0x0
	0x03C90D58 MOV X3, X21
	0x03C90D5C MOV W5, W20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x757000
	006 Move X2, [X21+4056]
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51785728
	012 Add X0, X0, 3617
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+4056], X0
	016 Move X0, X20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

