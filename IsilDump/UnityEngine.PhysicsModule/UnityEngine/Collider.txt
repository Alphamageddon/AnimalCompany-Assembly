Type: UnityEngine.Collider

Method: System.Boolean get_enabled()

Disassembly:
	0x03C9070C STR X30, [X31 + 0x8]
	0x03C90710 STP X24, X23, [X31 + 0x10]
	0x03C90714 STP X22, X21, [X31 + 0x20]
	0x03C90718 STP X20, X19, [X31 + 0x30]
	0x03C9071C ADRP X24, 0x757000
	0x03C90720 LDR X5, [X24 + 0x30]
	0x03C90724 MOV W19, W4
	0x03C90728 MOV W20, W3
	0x03C9072C MOV X21, X2
	0x03C90730 MOV V8.16B, V0.16B
	0x03C90734 MOV X22, X1
	0x03C90738 MOV X23, X0
	0x03C9073C CBNZ X5, 0x3C90754
	0x03C90740 ADRP X0, 0xFFFFFFFFFCE67000
	0x03C90744 ADD X0, X0, 0xA5D

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x757000
	005 Move X1, [X20+3904]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51904512
	010 Add X0, X0, 2881
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+3904], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Void set_enabled(System.Boolean value)

Disassembly:
	0x03C90748 BL 0x1C16CB8
	0x03C9074C MOV X5, X0
	0x03C90750 STR X0, [X24 + 0x30]
	0x03C90754 MOV X0, X23
	0x03C90758 MOV X1, X22
	0x03C9075C MOV X2, X21
	0x03C90760 MOV W3, W20
	0x03C90764 MOV W4, W19
	0x03C90768 LDP X20, X19, [X31 + 0x30]
	0x03C9076C LDP X22, X21, [X31 + 0x20]
	0x03C90770 LDP X24, X23, [X31 + 0x10]
	0x03C90774 LDR X30, [X31 + 0x8]
	0x03C90778 MOV V0.16B, V8.16B
	0x03C9077C LDR V8, [X31], #0x40
	0x03C90780 BR X5
	0x03C90784 STR D8, [X31 - 0x40]!
	0x03C90788 STP X30, X23, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x757000
	006 Move X2, [X21+3912]
	007 Move W19, W1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51945472
	012 Add X0, X0, 2102
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+3912], X0
	016 And W1, W19, 1
	017 Move X0, X20
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: UnityEngine.Rigidbody get_attachedRigidbody()

Disassembly:
	0x03C8F82C STR W31, [X31 + 0x8]
	0x03C8F830 STR X31, [X31]
	0x03C8F834 CBNZ X8, 0x3C8F84C
	0x03C8F838 ADRP X0, 0xFFFFFFFFFCE6E000
	0x03C8F83C ADD X0, X0, 0xA42
	0x03C8F840 BL 0x1C16CB8
	0x03C8F844 MOV X8, X0
	0x03C8F848 STR X0, [X20 + 0xF68]
	0x03C8F84C ADD X1, X31, 0x10
	0x03C8F850 ADD X2, X31, 0x0
	0x03C8F854 MOV X0, X19
	0x03C8F858 BLR X8
	0x03C8F85C LDP S0, S1, [X31]
	0x03C8F860 LDR V2, [X31 + 0x8]
	0x03C8F864 LDP X20, X19, [X31 + 0x30]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x758000
	005 Move X1, [X20+3920]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51781632
	010 Add X0, X0, 3529
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+3920], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Boolean get_isTrigger()

Disassembly:
	0x03C9078C STP X22, X21, [X31 + 0x20]
	0x03C90790 STP X20, X19, [X31 + 0x30]
	0x03C90794 ADRP X23, 0x757000
	0x03C90798 LDR X8, [X23 + 0x38]
	0x03C9079C MOV W19, W4
	0x03C907A0 MOV W20, W3
	0x03C907A4 MOV V8.16B, V0.16B
	0x03C907A8 MOV X21, X2
	0x03C907AC MOV X22, X1
	0x03C907B0 STR W0, [X31 + 0x8]
	0x03C907B4 CBNZ X8, 0x3C907CC
	0x03C907B8 ADRP X0, 0xFFFFFFFFFCE83000
	0x03C907BC ADD X0, X0, 0x482
	0x03C907C0 BL 0x1C16CB8
	0x03C907C4 MOV X8, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x757000
	005 Move X1, [X20+3928]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51994624
	010 Add X0, X0, 2898
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+3928], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Void set_isTrigger(System.Boolean value)

Disassembly:
	0x03C907C8 STR X0, [X23 + 0x38]
	0x03C907CC ADD X0, X31, 0x8
	0x03C907D0 MOV X1, X22
	0x03C907D4 MOV X2, X21
	0x03C907D8 MOV V0.16B, V8.16B
	0x03C907DC MOV W3, W20
	0x03C907E0 MOV W4, W19
	0x03C907E4 BLR X8
	0x03C907E8 LDP X20, X19, [X31 + 0x30]
	0x03C907EC LDP X22, X21, [X31 + 0x20]
	0x03C907F0 LDP X30, X23, [X31 + 0x10]
	0x03C907F4 LDR V8, [X31], #0x40
	0x03C907F8 RET
	0x03C907FC STR D8, [X31 - 0x40]!
	0x03C90800 STR X30, [X31 + 0x8]
	0x03C90804 STP X24, X23, [X31 + 0x10]
	0x03C90808 STP X22, X21, [X31 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x757000
	006 Move X2, [X21+3936]
	007 Move W19, W1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51847168
	012 Add X0, X0, 1753
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+3936], X0
	016 And W1, W19, 1
	017 Move X0, X20
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: UnityEngine.Vector3 ClosestPoint(UnityEngine.Vector3 position)

Disassembly:
	0x03C9080C STP X20, X19, [X31 + 0x30]
	0x03C90810 ADRP X24, 0x757000
	0x03C90814 LDR X5, [X24 + 0x38]
	0x03C90818 MOV W19, W4
	0x03C9081C MOV W20, W3
	0x03C90820 MOV V8.16B, V0.16B
	0x03C90824 MOV X21, X2
	0x03C90828 MOV X22, X1
	0x03C9082C MOV X23, X0
	0x03C90830 CBNZ X5, 0x3C90848
	0x03C90834 ADRP X0, 0xFFFFFFFFFCE83000
	0x03C90838 ADD X0, X0, 0x482
	0x03C9083C BL 0x1C16CB8
	0x03C90840 MOV X5, X0
	0x03C90844 STR X0, [X24 + 0x38]
	0x03C90848 MOV X0, X23
	0x03C9084C MOV X1, X22
	0x03C90850 MOV X2, X21
	0x03C90854 MOV W3, W20
	0x03C90858 MOV W4, W19
	0x03C9085C LDP X20, X19, [X31 + 0x30]
	0x03C90860 LDP X22, X21, [X31 + 0x20]
	0x03C90864 LDP X24, X23, [X31 + 0x10]
	0x03C90868 LDR X30, [X31 + 0x8]
	0x03C9086C MOV V0.16B, V8.16B
	0x03C90870 LDR V8, [X31], #0x40

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+32], X30
	003 Move [X31+48], X20
	004 Move [X31+56], X19
	005 Move X20, 0x757000
	006 Move X8, [X20+3944]
	007 Move X19, X0
	008 Move [X31+16], S0
	009 Move [X31+24], S1
	010 Move [X31+24], S2
	011 Move [X31+8], W31
	012 Move [X31], X31
	013 Compare X8, 0
	014 JumpIfNotEqual {20}
	015 Move X0, -51978240
	016 Add X0, X0, 2626
	017 Call 0x1C17CB8
	018 Move X8, X0
	019 Move [X20+3944], X0
	020 Add X1, X31, 16
	021 Add X2, X31, 0
	022 Move X0, X19
	023 NotImplemented "Instruction BLR not yet implemented."
	024 Move S0, [X31]
	025 Move S1, [X31+4]
	026 Move V2, [X31+8]
	027 Move X20, [X31+48]
	028 Move X19, [X31+56]
	029 Move X30, [X31+32]
	030 Add X31, X31, 64
	031 Return X0

Method: UnityEngine.Bounds get_bounds()

Disassembly:
	0x03C908C8 BL 0x1C16CB8
	0x03C908CC MOV X8, X0
	0x03C908D0 STR X0, [X22 + 0x40]
	0x03C908D4 ADD X0, X31, 0x38
	0x03C908D8 ADD X1, X31, 0x10
	0x03C908DC ADD X2, X31, 0x0
	0x03C908E0 MOV V0.16B, V9.16B
	0x03C908E4 MOV V1.16B, V8.16B
	0x03C908E8 MOV X3, X21
	0x03C908EC MOV W4, W20
	0x03C908F0 MOV W5, W19
	0x03C908F4 BLR X8
	0x03C908F8 LDP X20, X19, [X31 + 0x50]
	0x03C908FC LDP X22, X21, [X31 + 0x40]
	0x03C90900 LDR X30, [X31 + 0x30]
	0x03C90904 LDP D9, D8, [X31 + 0x20]
	0x03C90908 AND W0, W0, 0x1
	0x03C9090C ADD X31, X31, 0x60
	0x03C90910 RET
	0x03C90914 STP D9, D8, [X31 - 0x50]!
	0x03C90918 STP X30, X25, [X31 + 0x10]
	0x03C9091C STP X24, X23, [X31 + 0x20]
	0x03C90920 STP X22, X21, [X31 + 0x30]
	0x03C90924 STP X20, X19, [X31 + 0x40]
	0x03C90928 ADRP X25, 0x757000
	0x03C9092C LDR X6, [X25 + 0x40]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+32], X30
	003 Move [X31+40], X21
	004 Move [X31+48], X20
	005 Move [X31+56], X19
	006 Move X21, 0x757000
	007 Move X19, X8
	008 Move X8, [X21+3952]
	009 Move X20, X0
	010 Move [X31+8], X31
	011 Move [X31+16], X31
	012 Move [X31+24], X31
	013 Compare X8, 0
	014 JumpIfNotEqual {20}
	015 Move X0, -51814400
	016 Add X0, X0, 1786
	017 Call 0x1C17CB8
	018 Move X8, X0
	019 Move [X21+3952], X0
	020 Add X1, X31, 8
	021 Move X0, X20
	022 NotImplemented "Instruction BLR not yet implemented."
	023 Move X8, [X31+24]
	024 NotImplemented "Instruction LDUR not yet implemented."
	025 Move X30, [X31+32]
	026 Move X21, [X31+40]
	027 Move [X19+16], X8
	028 Move [X19], V0
	029 Move X20, [X31+48]
	030 Move X19, [X31+56]
	031 Add X31, X31, 64
	032 Return X0

Method: System.Void set_includeLayers(UnityEngine.LayerMask value)

Disassembly:
	0x03C90974 MOV X3, X21
	0x03C90978 MOV W4, W20
	0x03C9097C MOV W5, W19
	0x03C90980 LDP X20, X19, [X31 + 0x40]
	0x03C90984 LDP X22, X21, [X31 + 0x30]
	0x03C90988 LDP X24, X23, [X31 + 0x20]
	0x03C9098C LDP X30, X25, [X31 + 0x10]
	0x03C90990 MOV V0.16B, V9.16B
	0x03C90994 MOV V1.16B, V8.16B
	0x03C90998 LDP D9, D8, [X31], #0x50
	0x03C9099C BR X6
	0x03C909A0 STP D15, D14, [X31 - 0x70]!
	0x03C909A4 STP D13, D12, [X31 + 0x10]
	0x03C909A8 STP D11, D10, [X31 + 0x20]
	0x03C909AC STP D9, D8, [X31 + 0x30]
	0x03C909B0 STP X30, X23, [X31 + 0x40]
	0x03C909B4 STP X22, X21, [X31 + 0x50]
	0x03C909B8 STP X20, X19, [X31 + 0x60]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x757000
	005 Move X8, [X20+3960]
	006 Move X19, X0
	007 Move [X31+8], W1
	008 Compare X8, 0
	009 JumpIfNotEqual {15}
	010 Move X0, -51986432
	011 Add X0, X0, 2595
	012 Call 0x1C17CB8
	013 Move X8, X0
	014 Move [X20+3960], X0
	015 Add X1, X31, 8
	016 Move X0, X19
	017 NotImplemented "Instruction BLR not yet implemented."
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Return 

Method: System.Void .ctor()

Disassembly:
	0x03C90A00 BL 0x1C16CF4
	0x03C90A04 MOVZ W8, 0x1

ISIL:
	001 Move X1, X31
	002 Call Component..ctor, X0
	003 Return 

Method: System.Void ClosestPoint_Injected(ref UnityEngine.Vector3 position, out UnityEngine.Vector3 ret)

Disassembly:
	0x03C90874 BR X5
	0x03C90878 SUB X31, X31, 0x60
	0x03C9087C STP D9, D8, [X31 + 0x20]
	0x03C90880 STR X30, [X31 + 0x30]
	0x03C90884 STP X22, X21, [X31 + 0x40]
	0x03C90888 STP X20, X19, [X31 + 0x50]
	0x03C9088C ADRP X22, 0x757000
	0x03C90890 LDR X8, [X22 + 0x40]
	0x03C90894 MOV W19, W3
	0x03C90898 MOV W20, W2
	0x03C9089C MOV X21, X1
	0x03C908A0 MOV V8.16B, V7.16B
	0x03C908A4 MOV V9.16B, V3.16B
	0x03C908A8 STR W0, [X31 + 0x38]
	0x03C908AC STP S0, S1, [X31 + 0x10]
	0x03C908B0 STR S2, [X31 + 0x18]
	0x03C908B4 STP S4, S5, [X31]
	0x03C908B8 STR S6, [X31 + 0x8]
	0x03C908BC CBNZ X8, 0x3C908D4
	0x03C908C0 ADRP X0, 0xFFFFFFFFFCE6D000
	0x03C908C4 ADD X0, X0, 0xA99

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x757000
	007 Move X3, [X22+3944]
	008 Move X19, X2
	009 Move X20, X1
	010 Move X21, X0
	011 Compare X3, 0
	012 JumpIfNotEqual {18}
	013 Move X0, -51978240
	014 Add X0, X0, 2626
	015 Call 0x1C17CB8
	016 Move X3, X0
	017 Move [X22+3944], X0
	018 Move X0, X21
	019 Move X1, X20
	020 Move X2, X19
	021 Move X20, [X31+32]
	022 Move X19, [X31+40]
	023 Move X22, [X31+16]
	024 Move X21, [X31+24]
	025 Move X30, [X31+48]
	026 CallNoReturn X3

Method: System.Void get_bounds_Injected(out UnityEngine.Bounds ret)

Disassembly:
	0x03C90930 MOV W19, W5
	0x03C90934 MOV W20, W4
	0x03C90938 MOV X21, X3
	0x03C9093C MOV V8.16B, V1.16B
	0x03C90940 MOV X22, X2
	0x03C90944 MOV V9.16B, V0.16B
	0x03C90948 MOV X23, X1
	0x03C9094C MOV X24, X0
	0x03C90950 CBNZ X6, 0x3C90968
	0x03C90954 ADRP X0, 0xFFFFFFFFFCE6D000
	0x03C90958 ADD X0, X0, 0xA99
	0x03C9095C BL 0x1C16CB8
	0x03C90960 MOV X6, X0
	0x03C90964 STR X0, [X25 + 0x40]
	0x03C90968 MOV X0, X24
	0x03C9096C MOV X1, X23
	0x03C90970 MOV X2, X22

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x757000
	006 Move X2, [X21+3952]
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51814400
	012 Add X0, X0, 1786
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+3952], X0
	016 Move X0, X20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Void set_includeLayers_Injected(ref UnityEngine.LayerMask value)

Disassembly:
	0x03C909BC ADRP X23, 0x748000
	0x03C909C0 LDRB W8, [X23 + 0x784]
	0x03C909C4 MOV W19, W3
	0x03C909C8 MOV W20, W2
	0x03C909CC MOV V8.16B, V7.16B
	0x03C909D0 MOV X21, X1
	0x03C909D4 MOV V11.16B, V6.16B
	0x03C909D8 MOV V13.16B, V5.16B
	0x03C909DC MOV V15.16B, V4.16B
	0x03C909E0 MOV V9.16B, V3.16B
	0x03C909E4 MOV V10.16B, V2.16B
	0x03C909E8 MOV V12.16B, V1.16B
	0x03C909EC MOV V14.16B, V0.16B
	0x03C909F0 MOV X22, X0
	0x03C909F4 CBNZ W8, 0x3C90A0C
	0x03C909F8 ADRP X0, 0x463000
	0x03C909FC LDR X0, [X0 + 0x5A8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x757000
	006 Move X2, [X21+3960]
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51986432
	012 Add X0, X0, 2595
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+3960], X0
	016 Move X0, X20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

