Type: UnityEngine.Collision

Method: UnityEngine.Vector3 get_relativeVelocity()

Disassembly:
	0x03C8AFC0 STP X20, X19, [X31 + 0x90]
	0x03C8AFC4 MOV V11.16B, V0.16B
	0x03C8AFC8 MOVI V0.2D, 0x0
	0x03C8AFCC STUR V0, [X1 + 0x1C]
	0x03C8AFD0 STP V0, V0, [X1]
	0x03C8AFD4 ADRP X23, 0x74E000
	0x03C8AFD8 LDRB W8, [X23 + 0x784]
	0x03C8AFDC MOV W19, W3
	0x03C8AFE0 MOV W20, W2
	0x03C8AFE4 MOV V8.16B, V6.16B
	0x03C8AFE8 MOV X21, X1

ISIL:
	001 Move S0, [X0+40]
	002 Move S1, [X0+44]
	003 Move V2, [X0+48]
	004 Move W8, [X0+96]
	005 NotImplemented "Instruction FNEG not yet implemented."
	006 NotImplemented "Instruction FNEG not yet implemented."
	007 NotImplemented "Instruction FNEG not yet implemented."
	008 NotImplemented "Instruction CMP not yet implemented."
	009 NotImplemented "Instruction FCSEL not yet implemented."
	010 NotImplemented "Instruction FCSEL not yet implemented."
	011 NotImplemented "Instruction FCSEL not yet implemented."
	012 Return X0

Method: UnityEngine.Rigidbody get_rigidbody()

Disassembly:
	0x03C8AFEC MOV V12.16B, V5.16B
	0x03C8AFF0 MOV V13.16B, V4.16B
	0x03C8AFF4 MOV V14.16B, V3.16B
	0x03C8AFF8 MOV V9.16B, V2.16B
	0x03C8AFFC MOV V10.16B, V1.16B
	0x03C8B000 MOV X22, X0
	0x03C8B004 CBNZ W8, 0x3C8B01C
	0x03C8B008 ADRP X0, 0x468000
	0x03C8B00C LDR X0, [X0 + 0x5A8]
	0x03C8B010 BL 0x1C16CF4
	0x03C8B014 MOVZ W8, 0x1
	0x03C8B018 STRB W8, [X23 + 0x784]
	0x03C8B01C ADRP X23, 0x468000
	0x03C8B020 LDR X23, [X23 + 0x5A8]
	0x03C8B024 LDR X0, [X23]
	0x03C8B028 LDR W8, [X0 + 0xE0]
	0x03C8B02C CBNZ W8, 0x3C8B034
	0x03C8B030 BL 0x1C16DFC
	0x03C8B034 FMUL S0, S14, S14
	0x03C8B038 FMUL S1, S13, S13
	0x03C8B03C FMUL S2, S12, S12
	0x03C8B040 FADD S0, S0, S1
	0x03C8B044 FADD S0, S2, S0
	0x03C8B048 MOVZ W8, 0x1
	0x03C8B04C FSQRT S15, S0
	0x03C8B050 FMOV S0, W8
	0x03C8B054 FCMP S15, S0
	0x03C8B058 B.LE 0x3C8B0D0
	0x03C8B05C ADRP X24, 0x74D000
	0x03C8B060 LDRB W8, [X24 + 0x785]
	0x03C8B064 CBNZ W8, 0x3C8B07C
	0x03C8B068 ADRP X0, 0x468000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x75D000
	005 Move W8, [X20+3368]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x4D6000
	012 Move X0, [X0+2264]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3368], W8
	016 Move X0, X19
	017 Call Collision.get_body, X0
	018 Compare X0, 0
	019 JumpIfEqual {33}
	020 Move X8, 0x4D6000
	021 Move X8, [X8+2264]
	022 Move X9, [X0]
	023 Move X8, [X8]
	024 Move W11, [X9+304]
	025 Move W10, [X8+304]
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move X0, X31
	028 Move X9, [X9+200]
	029 Add X9, X9, X10
	030 NotImplemented "Instruction LDUR not yet implemented."
	031 NotImplemented "Instruction CMP not yet implemented."
	032 NotImplemented "Instruction CSEL not yet implemented."
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move X30, [X31+32]
	036 Return X0

Method: UnityEngine.Component get_body()

Disassembly:
	0x03C8B06C LDR X0, [X0 + 0x5A8]
	0x03C8B070 BL 0x1C16CF4
	0x03C8B074 MOVZ W8, 0x1
	0x03C8B078 STRB W8, [X24 + 0x785]
	0x03C8B07C LDR X0, [X23]

ISIL:
	001 Move W8, [X0+96]
	002 Add X0, X0, 16
	003 Compare W8, 0
	004 Invalid "Jump target not found in method."
	005 Call ContactPairHeader.get_Body, X0
	006 Return X0

Method: UnityEngine.Collider get_collider()

Disassembly:
	0x03C8B170 LDP D9, D8, [X31 + 0x50]
	0x03C8B174 LDP D11, D10, [X31 + 0x40]
	0x03C8B178 LDP D13, D12, [X31 + 0x30]
	0x03C8B17C LDP D15, D14, [X31 + 0x20]
	0x03C8B180 AND W0, W0, 0x1

ISIL:
	001 Move W8, [X0+96]
	002 Add X0, X0, 56
	003 Compare W8, 0
	004 Invalid "Jump target not found in method."
	005 Call ContactPair.get_Collider, X0
	006 Return X0

Method: UnityEngine.GameObject get_gameObject()

Disassembly:
	0x03C8B29C MOV V10.16B, V4.16B
	0x03C8B2A0 MOV V11.16B, V3.16B
	0x03C8B2A4 MOV V12.16B, V2.16B
	0x03C8B2A8 MOV V13.16B, V1.16B
	0x03C8B2AC MOV V14.16B, V0.16B
	0x03C8B2B0 TBNZ X8, 0x0, 0x3C8B2C8
	0x03C8B2B4 ADRP X0, 0x468000
	0x03C8B2B8 LDR X0, [X0 + 0x5F8]
	0x03C8B2BC BL 0x1C16CF4
	0x03C8B2C0 MOVZ W8, 0x1
	0x03C8B2C4 STRB W8, [X21 + 0xD7E]
	0x03C8B2C8 LDR X0, [X20]
	0x03C8B2CC LDR W8, [X0 + 0xE0]
	0x03C8B2D0 CBNZ W8, 0x3C8B2D8
	0x03C8B2D4 BL 0x1C16DFC
	0x03C8B2D8 BL 0x3C8A804
	0x03C8B2DC STR W0, [X31 + 0x8]
	0x03C8B2E0 ADD X0, X31, 0x8
	0x03C8B2E4 MOVN W2, 0x4
	0x03C8B2E8 MOV V0.16B, V14.16B
	0x03C8B2EC MOV V1.16B, V13.16B
	0x03C8B2F0 MOV V2.16B, V12.16B
	0x03C8B2F4 MOV V3.16B, V11.16B
	0x03C8B2F8 MOV V4.16B, V10.16B
	0x03C8B2FC MOV V5.16B, V9.16B
	0x03C8B300 MOV X1, X19
	0x03C8B304 MOV V6.16B, V8.16B
	0x03C8B308 MOV W3, W31
	0x03C8B30C BL 0x3C8AFA0
	0x03C8B310 LDP X20, X19, [X31 + 0x50]
	0x03C8B314 LDP X30, X21, [X31 + 0x40]
	0x03C8B318 LDP D9, D8, [X31 + 0x30]
	0x03C8B31C LDP D11, D10, [X31 + 0x20]
	0x03C8B320 LDP D13, D12, [X31 + 0x10]
	0x03C8B324 AND W0, W0, 0x1
	0x03C8B328 LDR V14, [X31], #0x60
	0x03C8B32C RET

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x75C000
	006 Move X20, 0x469000
	007 Move W8, [X21+3369]
	008 Move X20, [X20+1432]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x469000
	015 Move X0, [X0+1432]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+3369], W8
	019 Move X0, X19
	020 Call Collision.get_body, X0
	021 Move X8, [X20]
	022 Move X20, X0
	023 Move W9, [X8+224]
	024 Compare W9, 0
	025 JumpIfNotEqual {28}
	026 Move X0, X8
	027 Call 0x1C17DFC
	028 Move X0, X20
	029 Move X1, X31
	030 Move X2, X31
	031 Call Object.op_Inequality, X0, X1
	032 Move TEMP, X0
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfNotEqual {47}
	036 Move X0, X19
	037 Call Collision.get_body, X0
	038 Compare X0, 0
	039 JumpIfEqual {51}
	040 Move X20, [X31+16]
	041 Move X19, [X31+24]
	042 Move X1, X31
	043 Move X30, [X31+32]
	044 Move X21, [X31+40]
	045 Call Component.get_gameObject, X0
	046 Return X0
	047 Move X0, X19
	048 Call Collision.get_collider, X0
	049 Compare X0, 0
	050 JumpIfNotEqual {40}
	051 Call 0x1C17F20

Method: System.Void set_Flipped(System.Boolean value)

Disassembly:
	0x03C8B330 SUB X31, X31, 0x60
	0x03C8B334 STP D13, D12, [X31 + 0x10]
	0x03C8B338 STP D11, D10, [X31 + 0x20]

ISIL:
	001 And W8, W1, 1
	002 Move [X0+96], W8
	003 Return 

Method: System.Int32 get_contactCount()

Disassembly:
	0x03C8B33C STP D9, D8, [X31 + 0x30]
	0x03C8B340 STP X30, X21, [X31 + 0x40]

ISIL:
	001 Move W0, [X0+72]
	002 Return X0

Method: UnityEngine.ContactPoint[] get_contacts()

Disassembly:
	0x03C8B344 STP X20, X19, [X31 + 0x50]
	0x03C8B348 ADRP X21, 0x75B000
	0x03C8B34C ADRP X20, 0x468000
	0x03C8B350 LDRB W8, [X21 + 0xD7F]
	0x03C8B354 LDR X20, [X20 + 0x5F8]
	0x03C8B358 MOV X19, X0
	0x03C8B35C MOV V8.16B, V5.16B
	0x03C8B360 MOV V9.16B, V4.16B
	0x03C8B364 MOV V10.16B, V3.16B
	0x03C8B368 MOV V11.16B, V2.16B
	0x03C8B36C MOV V12.16B, V1.16B
	0x03C8B370 MOV V13.16B, V0.16B
	0x03C8B374 TBNZ X8, 0x0, 0x3C8B38C
	0x03C8B378 ADRP X0, 0x468000
	0x03C8B37C LDR X0, [X0 + 0x5F8]
	0x03C8B380 BL 0x1C16CF4
	0x03C8B384 MOVZ W8, 0x1
	0x03C8B388 STRB W8, [X21 + 0xD7F]
	0x03C8B38C LDR X0, [X20]
	0x03C8B390 LDR W8, [X0 + 0xE0]
	0x03C8B394 CBNZ W8, 0x3C8B39C
	0x03C8B398 BL 0x1C16DFC
	0x03C8B39C BL 0x3C8A804
	0x03C8B3A0 MOVZ W8, 0x7F800000
	0x03C8B3A4 STR W0, [X31 + 0x8]
	0x03C8B3A8 ADD X0, X31, 0x8
	0x03C8B3AC MOVN W2, 0x4
	0x03C8B3B0 FMOV S6, W8
	0x03C8B3B4 MOV V0.16B, V13.16B
	0x03C8B3B8 MOV V1.16B, V12.16B
	0x03C8B3BC MOV V2.16B, V11.16B
	0x03C8B3C0 MOV V3.16B, V10.16B
	0x03C8B3C4 MOV V4.16B, V9.16B
	0x03C8B3C8 MOV V5.16B, V8.16B
	0x03C8B3CC MOV X1, X19
	0x03C8B3D0 MOV W3, W31
	0x03C8B3D4 BL 0x3C8AFA0
	0x03C8B3D8 LDP X20, X19, [X31 + 0x50]
	0x03C8B3DC LDP X30, X21, [X31 + 0x40]
	0x03C8B3E0 LDP D9, D8, [X31 + 0x30]
	0x03C8B3E4 LDP D11, D10, [X31 + 0x20]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x75C000
	008 Move W8, [X20+3370]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x4D6000
	015 Move X0, [X0+2272]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3370], W8
	019 Move X0, [X19+104]
	020 Compare X0, 0
	021 JumpIfNotEqual {46}
	022 Move X8, 0x4D6000
	023 Move W1, [X19+72]
	024 Move X8, [X8+2272]
	025 Add X20, X19, 56
	026 Move X0, [X8]
	027 Call 0x1C17D6C
	028 Move [X19+104], X0
	029 Move X23, 0x75D000
	030 Move X8, [X23+112]
	031 Move W22, [X19+96]
	032 Move X21, X0
	033 Compare X8, 0
	034 JumpIfNotEqual {40}
	035 Move X0, -51974144
	036 Add X0, X0, 3370
	037 Call 0x1C17CB8
	038 Move X8, X0
	039 Move [X23+112], X0
	040 NotImplemented "Instruction CMP not yet implemented."
	041 NotImplemented "Instruction CSET not yet implemented."
	042 Move X0, X20
	043 Move X1, X21
	044 NotImplemented "Instruction BLR not yet implemented."
	045 Move X0, [X19+104]
	046 Move X20, [X31+32]
	047 Move X19, [X31+40]
	048 Move X22, [X31+16]
	049 Move X21, [X31+24]
	050 Move X30, [X31+48]
	051 Move X23, [X31+56]
	052 Return X0

Method: System.Void .ctor()

Disassembly:
	0x03C8B43C STRB W8, [X22 + 0xD80]
	0x03C8B440 LDR X0, [X23]
	0x03C8B444 LDR W8, [X0 + 0xE0]
	0x03C8B448 CBNZ W8, 0x3C8B450
	0x03C8B44C BL 0x1C16DFC
	0x03C8B450 BL 0x3C8A804
	0x03C8B454 STR W0, [X31 + 0x8]
	0x03C8B458 LDP S0, S1, [X21]
	0x03C8B45C LDP S2, S3, [X21 + 0x8]
	0x03C8B460 LDP S4, S5, [X21 + 0x10]
	0x03C8B464 ADD X0, X31, 0x8
	0x03C8B468 MOV V6.16B, V8.16B
	0x03C8B46C MOV W1, W20

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X1, X31
	004 Move X19, X0
	005 Move [X0+104], X31
	006 Call Object..ctor, X0
	007 NotImplemented "Instruction MOVI not yet implemented."
	008 Move [X19+104], X31
	009 Move [X19+16], V0
	010 Move [X19+24], V0
	011 Move [X19+48], V0
	012 Move [X19+56], V0
	013 Move [X19+5], V0
	014 Move [X19+96], W31
	015 Move X30, [X31+16]
	016 Move X19, [X31+24]
	017 Return 

Method: System.Void .ctor(in UnityEngine.ContactPairHeader header, in UnityEngine.ContactPair pair, System.Boolean flipped)

Disassembly:
	0x03C8B470 MOV W2, W19
	0x03C8B474 BL 0x3C8AAB4
	0x03C8B478 LDP X20, X19, [X31 + 0x30]
	0x03C8B47C LDP X22, X21, [X31 + 0x20]
	0x03C8B480 LDP X30, X23, [X31 + 0x10]
	0x03C8B484 AND W0, W0, 0x1
	0x03C8B488 LDR V8, [X31], #0x40
	0x03C8B48C RET
	0x03C8B490 SUB X31, X31, 0x40
	0x03C8B494 STR D8, [X31 + 0x10]
	0x03C8B498 STR X30, [X31 + 0x18]
	0x03C8B49C STP X22, X21, [X31 + 0x20]
	0x03C8B4A0 STP X20, X19, [X31 + 0x30]
	0x03C8B4A4 ADRP X21, 0x75B000
	0x03C8B4A8 ADRP X22, 0x468000
	0x03C8B4AC LDRB W8, [X21 + 0xD81]
	0x03C8B4B0 LDR X22, [X22 + 0x5F8]
	0x03C8B4B4 MOV W19, W1
	0x03C8B4B8 MOV V8.16B, V0.16B
	0x03C8B4BC MOV X20, X0
	0x03C8B4C0 TBNZ X8, 0x0, 0x3C8B4D8
	0x03C8B4C4 ADRP X0, 0x468000
	0x03C8B4C8 LDR X0, [X0 + 0x5F8]
	0x03C8B4CC BL 0x1C16CF4
	0x03C8B4D0 MOVZ W8, 0x1
	0x03C8B4D4 STRB W8, [X21 + 0xD81]
	0x03C8B4D8 LDR X0, [X22]
	0x03C8B4DC LDR W8, [X0 + 0xE0]
	0x03C8B4E0 CBNZ W8, 0x3C8B4E8
	0x03C8B4E4 BL 0x1C16DFC
	0x03C8B4E8 BL 0x3C8A804
	0x03C8B4EC STR W0, [X31 + 0x8]
	0x03C8B4F0 LDP S0, S1, [X20]
	0x03C8B4F4 LDP S2, S3, [X20 + 0x8]
	0x03C8B4F8 LDP S4, S5, [X20 + 0x10]
	0x03C8B4FC ADD X0, X31, 0x8
	0x03C8B500 MOV V6.16B, V8.16B
	0x03C8B504 MOV W1, W19
	0x03C8B508 MOV W2, W31
	0x03C8B50C BL 0x3C8AAB4
	0x03C8B510 LDP X20, X19, [X31 + 0x30]
	0x03C8B514 LDP X22, X21, [X31 + 0x20]
	0x03C8B518 LDR X30, [X31 + 0x18]
	0x03C8B51C LDR V8, [X31 + 0x10]
	0x03C8B520 AND W0, W0, 0x1
	0x03C8B524 ADD X31, X31, 0x40
	0x03C8B528 RET
	0x03C8B52C STR D8, [X31 - 0x30]!
	0x03C8B530 STP X30, X21, [X31 + 0x10]
	0x03C8B534 STP X20, X19, [X31 + 0x20]
	0x03C8B538 ADRP X20, 0x75B000
	0x03C8B53C ADRP X21, 0x468000
	0x03C8B540 LDRB W8, [X20 + 0xD82]
	0x03C8B544 LDR X21, [X21 + 0x5F8]
	0x03C8B548 MOV V8.16B, V0.16B

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0x75C000
	009 Move X23, 0x4D6000
	010 Move W8, [X24+3371]
	011 Move X23, [X23+2272]
	012 Move W22, W3
	013 Move X20, X2
	014 Move X21, X1
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0x4D6000
	021 Move X0, [X0+2272]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X24+3371], W8
	025 Move X0, X19
	026 Move X1, X31
	027 Move [X19+104], X31
	028 Call Object..ctor, X0
	029 Move W1, [X20+16]
	030 Move X0, [X23]
	031 Call 0x1C17D6C
	032 Move [X19+104], X0
	033 Move X24, 0x75D000
	034 Move X8, [X24+112]
	035 Move X23, X0
	036 Compare X8, 0
	037 JumpIfNotEqual {43}
	038 Move X0, -51974144
	039 Add X0, X0, 3370
	040 Call 0x1C17CB8
	041 Move X8, X0
	042 Move [X24+112], X0
	043 And W22, W22, 1
	044 Move X0, X20
	045 Move X1, X23
	046 Move W2, W22
	047 NotImplemented "Instruction BLR not yet implemented."
	048 Move V0, [X21]
	049 Move V1, [X21+16]
	050 Move X8, [X21+32]
	051 Move X24, [X31+16]
	052 Move X23, [X31+24]
	053 Move [X19+16], V0
	054 Move [X19+24], V1
	055 Move [X19+48], X8
	056 Move V0, [X20]
	057 Move V1, [X20+16]
	058 Move X8, [X20+32]
	059 Move [X19+96], W22
	060 Move X22, [X31+32]
	061 Move X21, [X31+40]
	062 Move [X19+56], V0
	063 Move [X19+72], V1
	064 Move [X19+88], X8
	065 Move X20, [X31+48]
	066 Move X19, [X31+56]
	067 Move X30, [X31+64]
	068 Return 

Method: System.Void Reuse(in UnityEngine.ContactPairHeader header, in UnityEngine.ContactPair pair)

Disassembly:
	0x03C8B54C MOV X19, X0
	0x03C8B550 TBNZ X8, 0x0, 0x3C8B568
	0x03C8B554 ADRP X0, 0x468000
	0x03C8B558 LDR X0, [X0 + 0x5F8]
	0x03C8B55C BL 0x1C16CF4
	0x03C8B560 MOVZ W8, 0x1
	0x03C8B564 STRB W8, [X20 + 0xD82]
	0x03C8B568 LDR X0, [X21]
	0x03C8B56C LDR W8, [X0 + 0xE0]
	0x03C8B570 CBNZ W8, 0x3C8B578
	0x03C8B574 BL 0x1C16DFC
	0x03C8B578 BL 0x3C8A804

ISIL:
	001 Move X8, [X1+32]
	002 Move V1, [X1]
	003 Move V0, [X1+16]
	004 Move [X0+48], X8
	005 Move [X0+16], V1
	006 Move [X0+24], V0
	007 Move X8, [X2+32]
	008 Move V1, [X2]
	009 Move V0, [X2+16]
	010 Move [X0+104], X31
	011 Move [X0+96], W31
	012 Move [X0+88], X8
	013 Move [X0+72], V0
	014 Move [X0+56], V1
	015 Return 

