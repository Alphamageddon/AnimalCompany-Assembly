Type: AnimalCompany.Log

Method: AnimalCompany.LogLevel get_logLevel()

Disassembly:
	0x035C1E3C MOV X3, X23
	0x035C1E40 MOV X4, X22
	0x035C1E44 BL 0x35C3B90
	0x035C1E48 LDR X0, [X27]
	0x035C1E4C LDR W8, [X0 + 0xE0]
	0x035C1E50 CBNZ W8, 0x35C1E58
	0x035C1E54 BL 0x1C16DFC
	0x035C1E58 MOV W0, W26
	0x035C1E5C MOV W1, W25
	0x035C1E60 BL 0x35C1C08
	0x035C1E64 TBZ X0, 0x0, 0x35C1EB4
	0x035C1E68 LDR X0, [X27]
	0x035C1E6C LDR W8, [X0 + 0xE0]
	0x035C1E70 CBNZ W8, 0x35C1E78
	0x035C1E74 BL 0x1C16DFC
	0x035C1E78 MOV W0, W26
	0x035C1E7C MOV W1, W25
	0x035C1E80 MOV X2, X24
	0x035C1E84 MOV X3, X23
	0x035C1E88 MOV X4, X22
	0x035C1E8C MOV X5, X21
	0x035C1E90 MOV X6, X20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xE20000
	005 Move X19, 0xB33000
	006 Move W8, [X20+377]
	007 Move X19, [X19+1928]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xB33000
	013 Move X0, [X0+1928]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+377], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move W0, [X8]
	027 Move X30, [X31+32]
	028 Return X0

Method: System.Void set_logLevel(AnimalCompany.LogLevel value)

Disassembly:
	0x035C1E94 MOV W7, W19
	0x035C1E98 LDP X20, X19, [X31 + 0x50]
	0x035C1E9C LDP X22, X21, [X31 + 0x40]
	0x035C1EA0 LDP X24, X23, [X31 + 0x30]
	0x035C1EA4 LDP X26, X25, [X31 + 0x20]
	0x035C1EA8 LDP X28, X27, [X31 + 0x10]
	0x035C1EAC LDR X30, [X31], #0x60
	0x035C1EB0 B 0x35C3E5C
	0x035C1EB4 LDP X20, X19, [X31 + 0x50]
	0x035C1EB8 LDP X22, X21, [X31 + 0x40]
	0x035C1EBC LDP X24, X23, [X31 + 0x30]
	0x035C1EC0 LDP X26, X25, [X31 + 0x20]
	0x035C1EC4 LDP X28, X27, [X31 + 0x10]
	0x035C1EC8 LDR X30, [X31], #0x60
	0x035C1ECC RET
	0x035C1ED0 SUB X31, X31, 0x60
	0x035C1ED4 STR X30, [X31 + 0x10]
	0x035C1ED8 STP X26, X25, [X31 + 0x20]
	0x035C1EDC STP X24, X23, [X31 + 0x30]
	0x035C1EE0 STP X22, X21, [X31 + 0x40]
	0x035C1EE4 STP X20, X19, [X31 + 0x50]
	0x035C1EE8 ADRP X25, 0xE1F000
	0x035C1EEC ADRP X26, 0xB32000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xE20000
	006 Move X20, 0xB33000
	007 Move W8, [X21+378]
	008 Move X20, [X20+1928]
	009 Move W19, W0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xB33000
	015 Move X0, [X0+1928]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+378], W8
	019 Move X0, [X20]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {25}
	023 Call 0x1C17DFC
	024 Move X0, [X20]
	025 Move X8, [X0+184]
	026 Move [X8], W19
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Return 

Method: AnimalCompany.LogChannel get_logChannelFlags()

Disassembly:
	0x035C1EF0 LDRB W8, [X25 + 0x18A]
	0x035C1EF4 LDR X26, [X26 + 0x788]
	0x035C1EF8 MOV W19, W5
	0x035C1EFC MOV X20, X4
	0x035C1F00 MOV X21, X3
	0x035C1F04 MOV X22, X2
	0x035C1F08 MOV X23, X1
	0x035C1F0C MOV W24, W0
	0x035C1F10 TBNZ X8, 0x0, 0x35C1F28
	0x035C1F14 ADRP X0, 0xB32000
	0x035C1F18 LDR X0, [X0 + 0x788]
	0x035C1F1C BL 0x1C16CF4
	0x035C1F20 MOVZ W8, 0x1
	0x035C1F24 STRB W8, [X25 + 0x18A]
	0x035C1F28 LDR X0, [X26]
	0x035C1F2C LDR W8, [X0 + 0xE0]
	0x035C1F30 CBNZ W8, 0x35C1F38
	0x035C1F34 BL 0x1C16DFC
	0x035C1F38 MOVZ W0, 0x5
	0x035C1F3C MOV W1, W24
	0x035C1F40 MOV X2, X23
	0x035C1F44 MOV X3, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xE20000
	005 Move X19, 0xB33000
	006 Move W8, [X20+379]
	007 Move X19, [X19+1928]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xB33000
	013 Move X0, [X0+1928]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+379], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move W0, [X8+4]
	027 Move X30, [X31+32]
	028 Return X0

Method: System.Void set_logChannelFlags(AnimalCompany.LogChannel value)

Disassembly:
	0x035C1F48 MOV X4, X22
	0x035C1F4C MOV X5, X21
	0x035C1F50 MOV X6, X20
	0x035C1F54 MOV W7, W19
	0x035C1F58 BL 0x35C1DA0
	0x035C1F5C LDP X20, X19, [X31 + 0x50]
	0x035C1F60 LDP X22, X21, [X31 + 0x40]
	0x035C1F64 LDP X24, X23, [X31 + 0x30]
	0x035C1F68 LDP X26, X25, [X31 + 0x20]
	0x035C1F6C LDR X30, [X31 + 0x10]
	0x035C1F70 ADD X31, X31, 0x60
	0x035C1F74 RET
	0x035C1F78 SUB X31, X31, 0x50
	0x035C1F7C STP X30, X25, [X31 + 0x10]
	0x035C1F80 STP X24, X23, [X31 + 0x20]
	0x035C1F84 STP X22, X21, [X31 + 0x30]
	0x035C1F88 STP X20, X19, [X31 + 0x40]
	0x035C1F8C ADRP X24, 0xE1F000
	0x035C1F90 ADRP X25, 0xB32000
	0x035C1F94 LDRB W8, [X24 + 0x18B]
	0x035C1F98 LDR X25, [X25 + 0x788]
	0x035C1F9C MOV W19, W4
	0x035C1FA0 MOV X20, X3

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xE20000
	006 Move X20, 0xB33000
	007 Move W8, [X21+380]
	008 Move X20, [X20+1928]
	009 Move W19, W0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xB33000
	015 Move X0, [X0+1928]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+380], W8
	019 Move X0, [X20]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {25}
	023 Call 0x1C17DFC
	024 Move X0, [X20]
	025 Move X8, [X0+184]
	026 Move [X8+4], W19
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Return 

Method: AnimalCompany.LogLevel get_remoteLogLevel()

Disassembly:
	0x035C1FA4 MOV X21, X2
	0x035C1FA8 MOV X22, X1
	0x035C1FAC MOV X23, X0
	0x035C1FB0 TBNZ X8, 0x0, 0x35C1FC8
	0x035C1FB4 ADRP X0, 0xB32000
	0x035C1FB8 LDR X0, [X0 + 0x788]
	0x035C1FBC BL 0x1C16CF4
	0x035C1FC0 MOVZ W8, 0x1
	0x035C1FC4 STRB W8, [X24 + 0x18B]
	0x035C1FC8 LDR X0, [X25]
	0x035C1FCC LDR W8, [X0 + 0xE0]
	0x035C1FD0 CBNZ W8, 0x35C1FD8
	0x035C1FD4 BL 0x1C16DFC
	0x035C1FD8 MOVZ W0, 0x4
	0x035C1FDC MOVZ W1, 0x1
	0x035C1FE0 MOV X2, X23
	0x035C1FE4 MOV X3, X31
	0x035C1FE8 MOV X4, X22
	0x035C1FEC MOV X5, X21
	0x035C1FF0 MOV X6, X20
	0x035C1FF4 MOV W7, W19
	0x035C1FF8 BL 0x35C1DA0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xE20000
	005 Move X19, 0xB33000
	006 Move W8, [X20+381]
	007 Move X19, [X19+1928]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xB33000
	013 Move X0, [X0+1928]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+381], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move W0, [X8+8]
	027 Move X30, [X31+32]
	028 Return X0

Method: System.Void set_remoteLogLevel(AnimalCompany.LogLevel value)

Disassembly:
	0x035C1FFC LDP X20, X19, [X31 + 0x40]
	0x035C2000 LDP X22, X21, [X31 + 0x30]
	0x035C2004 LDP X24, X23, [X31 + 0x20]
	0x035C2008 LDP X30, X25, [X31 + 0x10]
	0x035C200C ADD X31, X31, 0x50
	0x035C2010 RET
	0x035C2014 SUB X31, X31, 0x60
	0x035C2018 STR X30, [X31 + 0x10]
	0x035C201C STP X26, X25, [X31 + 0x20]
	0x035C2020 STP X24, X23, [X31 + 0x30]
	0x035C2024 STP X22, X21, [X31 + 0x40]
	0x035C2028 STP X20, X19, [X31 + 0x50]
	0x035C202C ADRP X25, 0xE1E000
	0x035C2030 ADRP X26, 0xB31000
	0x035C2034 LDRB W8, [X25 + 0x18C]
	0x035C2038 LDR X26, [X26 + 0x788]
	0x035C203C MOV W19, W5
	0x035C2040 MOV X20, X4
	0x035C2044 MOV X21, X3
	0x035C2048 MOV X22, X2
	0x035C204C MOV X23, X1
	0x035C2050 MOV W24, W0
	0x035C2054 TBNZ X8, 0x0, 0x35C206C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xE1F000
	006 Move X20, 0xB32000
	007 Move W8, [X21+382]
	008 Move X20, [X20+1928]
	009 Move W19, W0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xB32000
	015 Move X0, [X0+1928]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+382], W8
	019 Move X0, [X20]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {25}
	023 Call 0x1C17DFC
	024 Move X0, [X20]
	025 Move X8, [X0+184]
	026 Move [X8+8], W19
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Return 

Method: AnimalCompany.LogChannel get_remoteLogChannelFlags()

Disassembly:
	0x035C2058 ADRP X0, 0xB31000
	0x035C205C LDR X0, [X0 + 0x788]
	0x035C2060 BL 0x1C16CF4
	0x035C2064 MOVZ W8, 0x1
	0x035C2068 STRB W8, [X25 + 0x18C]
	0x035C206C LDR X0, [X26]
	0x035C2070 LDR W8, [X0 + 0xE0]
	0x035C2074 CBNZ W8, 0x35C207C
	0x035C2078 BL 0x1C16DFC
	0x035C207C MOVZ W0, 0x4
	0x035C2080 MOV W1, W24
	0x035C2084 MOV X2, X23
	0x035C2088 MOV X3, X31
	0x035C208C MOV X4, X22
	0x035C2090 MOV X5, X21
	0x035C2094 MOV X6, X20
	0x035C2098 MOV W7, W19
	0x035C209C BL 0x35C1DA0
	0x035C20A0 LDP X20, X19, [X31 + 0x50]
	0x035C20A4 LDP X22, X21, [X31 + 0x40]
	0x035C20A8 LDP X24, X23, [X31 + 0x30]
	0x035C20AC LDP X26, X25, [X31 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xE1F000
	005 Move X19, 0xB32000
	006 Move W8, [X20+383]
	007 Move X19, [X19+1928]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xB32000
	013 Move X0, [X0+1928]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+383], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move W0, [X8+12]
	027 Move X30, [X31+32]
	028 Return X0

Method: System.Void set_remoteLogChannelFlags(AnimalCompany.LogChannel value)

Disassembly:
	0x035C20B0 LDR X30, [X31 + 0x10]
	0x035C20B4 ADD X31, X31, 0x60
	0x035C20B8 RET
	0x035C20BC SUB X31, X31, 0x50
	0x035C20C0 STP X30, X25, [X31 + 0x10]
	0x035C20C4 STP X24, X23, [X31 + 0x20]
	0x035C20C8 STP X22, X21, [X31 + 0x30]
	0x035C20CC STP X20, X19, [X31 + 0x40]
	0x035C20D0 ADRP X24, 0xE1E000
	0x035C20D4 ADRP X25, 0xB31000
	0x035C20D8 LDRB W8, [X24 + 0x18D]
	0x035C20DC LDR X25, [X25 + 0x788]
	0x035C20E0 MOV W19, W4
	0x035C20E4 MOV X20, X3
	0x035C20E8 MOV X21, X2
	0x035C20EC MOV X22, X1
	0x035C20F0 MOV X23, X0
	0x035C20F4 TBNZ X8, 0x0, 0x35C210C
	0x035C20F8 ADRP X0, 0xB31000
	0x035C20FC LDR X0, [X0 + 0x788]
	0x035C2100 BL 0x1C16CF4
	0x035C2104 MOVZ W8, 0x1
	0x035C2108 STRB W8, [X24 + 0x18D]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xE1F000
	006 Move X20, 0xB32000
	007 Move W8, [X21+384]
	008 Move X20, [X20+1928]
	009 Move W19, W0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xB32000
	015 Move X0, [X0+1928]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+384], W8
	019 Move X0, [X20]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {25}
	023 Call 0x1C17DFC
	024 Move X0, [X20]
	025 Move X8, [X0+184]
	026 Move [X8+12], W19
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Return 

Method: System.Boolean get_disableUncaughtExceptionLogging()

Disassembly:
	0x035C210C LDR X0, [X25]
	0x035C2110 LDR W8, [X0 + 0xE0]
	0x035C2114 CBNZ W8, 0x35C211C
	0x035C2118 BL 0x1C16DFC
	0x035C211C MOVZ W0, 0x3
	0x035C2120 MOVZ W1, 0x1
	0x035C2124 MOV X2, X23
	0x035C2128 MOV X3, X31
	0x035C212C MOV X4, X22
	0x035C2130 MOV X5, X21
	0x035C2134 MOV X6, X20
	0x035C2138 MOV W7, W19
	0x035C213C BL 0x35C1DA0
	0x035C2140 LDP X20, X19, [X31 + 0x40]
	0x035C2144 LDP X22, X21, [X31 + 0x30]
	0x035C2148 LDP X24, X23, [X31 + 0x20]
	0x035C214C LDP X30, X25, [X31 + 0x10]
	0x035C2150 ADD X31, X31, 0x50
	0x035C2154 RET
	0x035C2158 SUB X31, X31, 0x60
	0x035C215C STR X30, [X31 + 0x10]
	0x035C2160 STP X26, X25, [X31 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xE1F000
	005 Move X19, 0xB32000
	006 Move W8, [X20+385]
	007 Move X19, [X19+1928]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xB32000
	013 Move X0, [X0+1928]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+385], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move W0, [X8+16]
	027 Move X30, [X31+32]
	028 Return X0

Method: System.Void set_disableUncaughtExceptionLogging(System.Boolean value)

Disassembly:
	0x035C2164 STP X24, X23, [X31 + 0x30]
	0x035C2168 STP X22, X21, [X31 + 0x40]
	0x035C216C STP X20, X19, [X31 + 0x50]
	0x035C2170 ADRP X25, 0xE1E000
	0x035C2174 ADRP X26, 0xB31000
	0x035C2178 LDRB W8, [X25 + 0x18E]
	0x035C217C LDR X26, [X26 + 0x788]
	0x035C2180 MOV W19, W5
	0x035C2184 MOV X20, X4
	0x035C2188 MOV X21, X3
	0x035C218C MOV X22, X2
	0x035C2190 MOV X23, X1
	0x035C2194 MOV W24, W0
	0x035C2198 TBNZ X8, 0x0, 0x35C21B0
	0x035C219C ADRP X0, 0xB31000
	0x035C21A0 LDR X0, [X0 + 0x788]
	0x035C21A4 BL 0x1C16CF4
	0x035C21A8 MOVZ W8, 0x1
	0x035C21AC STRB W8, [X25 + 0x18E]
	0x035C21B0 LDR X0, [X26]
	0x035C21B4 LDR W8, [X0 + 0xE0]
	0x035C21B8 CBNZ W8, 0x35C21C0
	0x035C21BC BL 0x1C16DFC
	0x035C21C0 MOVZ W0, 0x3

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xE1F000
	006 Move X20, 0xB32000
	007 Move W8, [X21+386]
	008 Move X20, [X20+1928]
	009 Move W19, W0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xB32000
	015 Move X0, [X0+1928]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+386], W8
	019 Move X0, [X20]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {25}
	023 Call 0x1C17DFC
	024 Move X0, [X20]
	025 Move X8, [X0+184]
	026 And W9, W19, 1
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move [X8+16], W9
	030 Move X30, [X31+32]
	031 Move X21, [X31+40]
	032 Return 

Method: System.Void Awake()

Disassembly:
	0x035C21C4 MOV W1, W24
	0x035C21C8 MOV X2, X23
	0x035C21CC MOV X3, X31
	0x035C21D0 MOV X4, X22
	0x035C21D4 MOV X5, X21
	0x035C21D8 MOV X6, X20
	0x035C21DC MOV W7, W19
	0x035C21E0 BL 0x35C1DA0
	0x035C21E4 LDP X20, X19, [X31 + 0x50]
	0x035C21E8 LDP X22, X21, [X31 + 0x40]
	0x035C21EC LDP X24, X23, [X31 + 0x30]
	0x035C21F0 LDP X26, X25, [X31 + 0x20]
	0x035C21F4 LDR X30, [X31 + 0x10]
	0x035C21F8 ADD X31, X31, 0x60
	0x035C21FC RET
	0x035C2200 SUB X31, X31, 0x50
	0x035C2204 STP X30, X25, [X31 + 0x10]
	0x035C2208 STP X24, X23, [X31 + 0x20]
	0x035C220C STP X22, X21, [X31 + 0x30]
	0x035C2210 STP X20, X19, [X31 + 0x40]
	0x035C2214 ADRP X24, 0xE1E000
	0x035C2218 ADRP X25, 0xB31000
	0x035C221C LDRB W8, [X24 + 0x18F]
	0x035C2220 LDR X25, [X25 + 0x788]
	0x035C2224 MOV W19, W4
	0x035C2228 MOV X20, X3
	0x035C222C MOV X21, X2
	0x035C2230 MOV X22, X1
	0x035C2234 MOV X23, X0
	0x035C2238 TBNZ X8, 0x0, 0x35C2250
	0x035C223C ADRP X0, 0xB31000
	0x035C2240 LDR X0, [X0 + 0x788]
	0x035C2244 BL 0x1C16CF4
	0x035C2248 MOVZ W8, 0x1
	0x035C224C STRB W8, [X24 + 0x18F]
	0x035C2250 LDR X0, [X25]
	0x035C2254 LDR W8, [X0 + 0xE0]
	0x035C2258 CBNZ W8, 0x35C2260
	0x035C225C BL 0x1C16DFC
	0x035C2260 MOVZ W0, 0x2
	0x035C2264 MOVZ W1, 0x1
	0x035C2268 MOV X2, X23
	0x035C226C MOV X3, X31
	0x035C2270 MOV X4, X22
	0x035C2274 MOV X5, X21
	0x035C2278 MOV X6, X20
	0x035C227C MOV W7, W19
	0x035C2280 BL 0x35C1DA0
	0x035C2284 LDP X20, X19, [X31 + 0x40]
	0x035C2288 LDP X22, X21, [X31 + 0x30]
	0x035C228C LDP X24, X23, [X31 + 0x20]
	0x035C2290 LDP X30, X25, [X31 + 0x10]
	0x035C2294 ADD X31, X31, 0x50
	0x035C2298 RET
	0x035C229C SUB X31, X31, 0x60
	0x035C22A0 STR X30, [X31 + 0x10]
	0x035C22A4 STP X26, X25, [X31 + 0x20]
	0x035C22A8 STP X24, X23, [X31 + 0x30]
	0x035C22AC STP X22, X21, [X31 + 0x40]
	0x035C22B0 STP X20, X19, [X31 + 0x50]
	0x035C22B4 ADRP X25, 0xE1E000
	0x035C22B8 ADRP X26, 0xB31000
	0x035C22BC LDRB W8, [X25 + 0x190]
	0x035C22C0 LDR X26, [X26 + 0x788]
	0x035C22C4 MOV W19, W5
	0x035C22C8 MOV X20, X4
	0x035C22CC MOV X21, X3
	0x035C22D0 MOV X22, X2
	0x035C22D4 MOV X23, X1
	0x035C22D8 MOV W24, W0
	0x035C22DC TBNZ X8, 0x0, 0x35C22F4
	0x035C22E0 ADRP X0, 0xB31000
	0x035C22E4 LDR X0, [X0 + 0x788]
	0x035C22E8 BL 0x1C16CF4
	0x035C22EC MOVZ W8, 0x1
	0x035C22F0 STRB W8, [X25 + 0x190]
	0x035C22F4 LDR X0, [X26]
	0x035C22F8 LDR W8, [X0 + 0xE0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, 0xE1F000
	007 Move X20, 0xB32000
	008 Move W8, [X19+387]
	009 Move X20, [X20+1928]
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {31}
	014 Move X0, 0xB32000
	015 Move X0, [X0+2416]
	016 Call 0x1C17CF4
	017 Move X0, 0xB76000
	018 Move X0, [X0+3304]
	019 Call 0x1C17CF4
	020 Move X0, 0xB32000
	021 Move X0, [X0+1928]
	022 Call 0x1C17CF4
	023 Move X0, 0xB76000
	024 Move X0, [X0+3312]
	025 Call 0x1C17CF4
	026 Move X0, 0xB76000
	027 Move X0, [X0+3320]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X19+387], W8
	031 Move X21, 0xB76000
	032 Move X21, [X21+3320]
	033 Move X0, X31
	034 Call Thread.get_CurrentThread
	035 Move X8, [X20]
	036 Move X19, X0
	037 Move W9, [X8+224]
	038 Compare W9, 0
	039 JumpIfNotEqual {43}
	040 Move X0, X8
	041 Call 0x1C17DFC
	042 Move X8, [X20]
	043 Move X8, [X8+184]
	044 Move [X8+40], X19
	045 Move X0, [X21]
	046 Move W8, [X0+224]
	047 Compare W8, 0
	048 JumpIfNotEqual {51}
	049 Call 0x1C17DFC
	050 Move X0, [X21]
	051 Move X8, [X0+184]
	052 Move X22, 0xB32000
	053 Move X19, [X8+8]
	054 Move X22, [X22+2416]
	055 Compare X19, 0
	056 JumpIfNotEqual {78}
	057 Move W8, [X0+224]
	058 Compare W8, 0
	059 JumpIfNotEqual {62}
	060 Call 0x1C17DFC
	061 Move X0, [X21]
	062 Move X9, 0xB76000
	063 Move X8, [X0+184]
	064 Move X9, [X9+3304]
	065 Move X20, [X8]
	066 Move X0, [X9]
	067 Call 0x1C17F10
	068 Move X8, 0xB76000
	069 Move X8, [X8+3312]
	070 Move X1, X20
	071 Move X3, X31
	072 Move X19, X0
	073 Move X2, [X8]
	074 Call LogCallback..ctor, X0, X1, X2
	075 Move X8, [X21]
	076 Move X8, [X8+184]
	077 Move [X8+8], X19
	078 Move X0, [X22]
	079 Move W8, [X0+224]
	080 Compare W8, 0
	081 JumpIfNotEqual {83}
	082 Call 0x1C17DFC
	083 Move X0, X19
	084 Move X20, [X31+32]
	085 Move X19, [X31+40]
	086 Move X22, [X31+16]
	087 Move X21, [X31+24]
	088 Move X1, X31
	089 Move X30, [X31+48]
	090 Call Application.add_logMessageReceived, X0
	091 Return 

Method: System.Int32 Color32ToRGB24(UnityEngine.Color32 c)

Disassembly:
	0x035C22FC CBNZ W8, 0x35C2304
	0x035C2300 BL 0x1C16DFC
	0x035C2304 MOVZ W0, 0x2
	0x035C2308 MOV W1, W24
	0x035C230C MOV X2, X23

ISIL:
	001 And W8, W0, 0xFF00
	002 NotImplemented "Instruction BFM not yet implemented."
	003 NotImplemented "Instruction BFM not yet implemented."
	004 Move W0, W8
	005 Return X0

Method: System.String Color32ToRGBString(UnityEngine.Color32 c)

Disassembly:
	0x035C2310 MOV X3, X31
	0x035C2314 MOV X4, X22
	0x035C2318 MOV X5, X21
	0x035C231C MOV X6, X20
	0x035C2320 MOV W7, W19
	0x035C2324 BL 0x35C1DA0
	0x035C2328 LDP X20, X19, [X31 + 0x50]
	0x035C232C LDP X22, X21, [X31 + 0x40]
	0x035C2330 LDP X24, X23, [X31 + 0x30]
	0x035C2334 LDP X26, X25, [X31 + 0x20]
	0x035C2338 LDR X30, [X31 + 0x10]
	0x035C233C ADD X31, X31, 0x60
	0x035C2340 RET
	0x035C2344 SUB X31, X31, 0x50
	0x035C2348 STP X30, X25, [X31 + 0x10]
	0x035C234C STP X24, X23, [X31 + 0x20]
	0x035C2350 STP X22, X21, [X31 + 0x30]
	0x035C2354 STP X20, X19, [X31 + 0x40]
	0x035C2358 ADRP X24, 0xE1E000
	0x035C235C ADRP X25, 0xB31000
	0x035C2360 LDRB W8, [X24 + 0x191]
	0x035C2364 LDR X25, [X25 + 0x788]
	0x035C2368 MOV W19, W4
	0x035C236C MOV X20, X3
	0x035C2370 MOV X21, X2
	0x035C2374 MOV X22, X1
	0x035C2378 MOV X23, X0
	0x035C237C TBNZ X8, 0x0, 0x35C2394
	0x035C2380 ADRP X0, 0xB31000
	0x035C2384 LDR X0, [X0 + 0x788]
	0x035C2388 BL 0x1C16CF4
	0x035C238C MOVZ W8, 0x1
	0x035C2390 STRB W8, [X24 + 0x191]
	0x035C2394 LDR X0, [X25]
	0x035C2398 LDR W8, [X0 + 0xE0]
	0x035C239C CBNZ W8, 0x35C23A4
	0x035C23A0 BL 0x1C16DFC
	0x035C23A4 MOVZ W0, 0x1
	0x035C23A8 MOVZ W1, 0x1
	0x035C23AC MOV X2, X23
	0x035C23B0 MOV X3, X31
	0x035C23B4 MOV X4, X22
	0x035C23B8 MOV X5, X21
	0x035C23BC MOV X6, X20

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xE1F000
	007 Move X20, 0xB32000
	008 Move W8, [X21+388]
	009 Move X20, [X20+1928]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {26}
	015 Move X0, 0xB32000
	016 Move X0, [X0+1880]
	017 Call 0x1C17CF4
	018 Move X0, 0xB32000
	019 Move X0, [X0+1928]
	020 Call 0x1C17CF4
	021 Move X0, 0xB3A000
	022 Move X0, [X0+2440]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X21+388], W8
	026 Move X0, [X20]
	027 Move X21, 0xB32000
	028 Move X20, 0xB3A000
	029 Move W8, [X0+224]
	030 Move X21, [X21+1880]
	031 Move X20, [X20+2440]
	032 Compare W8, 0
	033 JumpIfNotEqual {35}
	034 Call 0x1C17DFC
	035 Move X0, [X21]
	036 And W8, W19, 0xFF00
	037 NotImplemented "Instruction BFM not yet implemented."
	038 NotImplemented "Instruction BFM not yet implemented."
	039 Add X1, X31, 12
	040 Move [X31+12], W8
	041 Call 0x1C17E04
	042 Move X8, [X20]
	043 Move X1, X0
	044 Move X2, X31
	045 Move X0, X8
	046 Call String.Format, X0, X1
	047 Move X20, [X31+32]
	048 Move X19, [X31+40]
	049 Move X30, [X31+16]
	050 Move X21, [X31+24]
	051 Add X31, X31, 48
	052 Return X0

Method: System.Void Update()

Disassembly:
	0x035C23C0 MOV W7, W19
	0x035C23C4 BL 0x35C1DA0
	0x035C23C8 LDP X20, X19, [X31 + 0x40]
	0x035C23CC LDP X22, X21, [X31 + 0x30]
	0x035C23D0 LDP X24, X23, [X31 + 0x20]
	0x035C23D4 LDP X30, X25, [X31 + 0x10]
	0x035C23D8 ADD X31, X31, 0x50
	0x035C23DC RET
	0x035C23E0 SUB X31, X31, 0x60
	0x035C23E4 STR X30, [X31 + 0x10]
	0x035C23E8 STP X26, X25, [X31 + 0x20]
	0x035C23EC STP X24, X23, [X31 + 0x30]
	0x035C23F0 STP X22, X21, [X31 + 0x40]
	0x035C23F4 STP X20, X19, [X31 + 0x50]
	0x035C23F8 ADRP X25, 0xE1E000
	0x035C23FC ADRP X26, 0xB31000
	0x035C2400 LDRB W8, [X25 + 0x192]
	0x035C2404 LDR X26, [X26 + 0x788]
	0x035C2408 MOV W19, W5
	0x035C240C MOV X20, X4
	0x035C2410 MOV X21, X3
	0x035C2414 MOV X22, X2
	0x035C2418 MOV X23, X1
	0x035C241C MOV X24, X0
	0x035C2420 TBNZ X8, 0x0, 0x35C2438
	0x035C2424 ADRP X0, 0xB31000
	0x035C2428 LDR X0, [X0 + 0x788]
	0x035C242C BL 0x1C16CF4
	0x035C2430 MOVZ W8, 0x1
	0x035C2434 STRB W8, [X25 + 0x192]
	0x035C2438 LDR X0, [X26]
	0x035C243C LDR W8, [X0 + 0xE0]
	0x035C2440 CBNZ W8, 0x35C2448
	0x035C2444 BL 0x1C16DFC
	0x035C2448 MOVZ W0, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, 0xE1F000
	006 Move X20, 0xB32000
	007 Move W8, [X19+389]
	008 Move X20, [X20+1928]
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0xB32000
	014 Move X0, [X0+1928]
	015 Call 0x1C17CF4
	016 Move X0, 0xB33000
	017 Move X0, [X0+712]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X19+389], W8
	021 Move X21, 0xB33000
	022 Move X21, [X21+712]
	023 Move X0, X31
	024 Call Time.get_frameCount
	025 Move X8, [X20]
	026 Move W19, W0
	027 Move W9, [X8+224]
	028 Compare W9, 0
	029 JumpIfNotEqual {33}
	030 Move X0, X8
	031 Call 0x1C17DFC
	032 Move X8, [X20]
	033 Move X8, [X8+184]
	034 Move [X8+32], W19
	035 Move X0, [X21]
	036 Move W8, [X0+224]
	037 Compare W8, 0
	038 JumpIfNotEqual {40}
	039 Call 0x1C17DFC
	040 Move X20, [X31+16]
	041 Move X19, [X31+24]
	042 Move X30, [X31+32]
	043 Move X21, [X31+40]

Method: System.Void .cctor()

Disassembly:
	0x035C28BC TBNZ X8, 0x0, 0x35C28D4
	0x035C28C0 ADRP X0, 0xB31000
	0x035C28C4 LDR X0, [X0 + 0x788]
	0x035C28C8 BL 0x1C16CF4
	0x035C28CC MOVZ W8, 0x1
	0x035C28D0 STRB W8, [X27 + 0x199]
	0x035C28D4 LDR X0, [X28]
	0x035C28D8 LDR W8, [X0 + 0xE0]
	0x035C28DC CBNZ W8, 0x35C28E4
	0x035C28E0 BL 0x1C16DFC
	0x035C28E4 MOV W0, W26
	0x035C28E8 MOV W1, W25
	0x035C28EC MOV X2, X24
	0x035C28F0 MOV X3, X23
	0x035C28F4 MOV X4, X22
	0x035C28F8 MOV X5, X21
	0x035C28FC MOV X6, X20
	0x035C2900 MOV W7, W19
	0x035C2904 LDP X20, X19, [X31 + 0x50]
	0x035C2908 LDP X22, X21, [X31 + 0x40]
	0x035C290C LDP X24, X23, [X31 + 0x30]
	0x035C2910 LDP X26, X25, [X31 + 0x20]
	0x035C2914 LDP X28, X27, [X31 + 0x10]
	0x035C2918 LDR X30, [X31], #0x60
	0x035C291C B 0x35C1DA0
	0x035C2920 SUB X31, X31, 0x90
	0x035C2924 STR X30, [X31 + 0x40]
	0x035C2928 STP X26, X25, [X31 + 0x50]
	0x035C292C STP X24, X23, [X31 + 0x60]
	0x035C2930 STP X22, X21, [X31 + 0x70]
	0x035C2934 STP X20, X19, [X31 + 0x80]
	0x035C2938 ADRP X19, 0xE1E000
	0x035C293C ADRP X25, 0xB31000
	0x035C2940 LDRB W8, [X19 + 0x19A]
	0x035C2944 LDR X25, [X25 + 0x788]
	0x035C2948 MOV X20, X1
	0x035C294C MOV X21, X0
	0x035C2950 TBNZ X8, 0x0, 0x35C2A58
	0x035C2954 ADRP X0, 0xB3A000
	0x035C2958 LDR X0, [X0 + 0x8D8]
	0x035C295C BL 0x1C16CF4
	0x035C2960 ADRP X0, 0xB75000
	0x035C2964 LDR X0, [X0 + 0xD30]
	0x035C2968 BL 0x1C16CF4
	0x035C296C ADRP X0, 0xB75000
	0x035C2970 LDR X0, [X0 + 0xD38]
	0x035C2974 BL 0x1C16CF4
	0x035C2978 ADRP X0, 0xB32000
	0x035C297C LDR X0, [X0 + 0x460]
	0x035C2980 BL 0x1C16CF4
	0x035C2984 ADRP X0, 0xB59000
	0x035C2988 LDR X0, [X0 + 0xBC0]
	0x035C298C BL 0x1C16CF4
	0x035C2990 ADRP X0, 0xB75000
	0x035C2994 LDR X0, [X0 + 0xD40]
	0x035C2998 BL 0x1C16CF4
	0x035C299C ADRP X0, 0xB75000
	0x035C29A0 LDR X0, [X0 + 0xD48]
	0x035C29A4 BL 0x1C16CF4
	0x035C29A8 ADRP X0, 0xB31000
	0x035C29AC LDR X0, [X0 + 0x788]
	0x035C29B0 BL 0x1C16CF4
	0x035C29B4 ADRP X0, 0xB32000
	0x035C29B8 LDR X0, [X0 + 0x2C8]
	0x035C29BC BL 0x1C16CF4
	0x035C29C0 ADRP X0, 0xB75000

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X25, 0xE1F000
	010 Move X20, 0xB32000
	011 Move X24, 0xB32000
	012 Move X19, 0xB32000
	013 Move X23, 0xB76000
	014 Move X22, 0xB76000
	015 Move X21, 0xB76000
	016 Move X20, [X20+1928]
	017 Move W8, [X25+390]
	018 Move X24, [X24+1824]
	019 Move X19, [X19+1816]
	020 Move X23, [X23+3344]
	021 Move X22, [X22+3352]
	022 Move X21, [X21+3360]
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {47}
	027 Move X0, 0xB76000
	028 Move X0, [X0+3352]
	029 Call 0x1C17CF4
	030 Move X0, 0xB32000
	031 Move X0, [X0+1816]
	032 Call 0x1C17CF4
	033 Move X0, 0xB32000
	034 Move X0, [X0+1824]
	035 Call 0x1C17CF4
	036 Move X0, 0xB76000
	037 Move X0, [X0+3344]
	038 Call 0x1C17CF4
	039 Move X0, 0xB32000
	040 Move X0, [X0+1928]
	041 Call 0x1C17CF4
	042 Move X0, 0xB76000
	043 Move X0, [X0+3360]
	044 Call 0x1C17CF4
	045 Move W8, 1
	046 Move [X25+390], W8
	047 Move X8, [X20]
	048 Move X9, -44908544
	049 Move V0, [X9+2120]
	050 Move X8, [X8+184]
	051 Move [X8], D0
	052 Move X0, [X24]
	053 Call 0x1C17F10
	054 Move X1, [X19]
	055 Move X19, X0
	056 Call Dictionary`2<Object, Object>..ctor, X0
	057 Move X8, [X20]
	058 Move X8, [X8+184]
	059 Move [X8+24], X19
	060 Move X0, [X23]
	061 Call 0x1C17F10
	062 Move X1, [X22]
	063 Move X19, X0
	064 Call Dictionary`2<UncaughtException, Object>..ctor, X0
	065 Move X8, [X20]
	066 Move X24, [X31+16]
	067 Move X23, [X31+24]
	068 Move X8, [X8+184]
	069 Move [X8+56], X19
	070 Move X0, [X21]
	071 Move X20, [X31+48]
	072 Move X19, [X31+56]
	073 Move X22, [X31+32]
	074 Move X21, [X31+40]
	075 Move X30, [X31+64]
	076 Move X25, [X31+72]

Method: System.Void InitializeCodebaseFilePathPrefix(System.String filePath = )

Disassembly:
	0x035C29C4 LDR X0, [X0 + 0xD50]
	0x035C29C8 BL 0x1C16CF4
	0x035C29CC ADRP X0, 0xB75000
	0x035C29D0 LDR X0, [X0 + 0xD58]
	0x035C29D4 BL 0x1C16CF4
	0x035C29D8 ADRP X0, 0xB75000
	0x035C29DC LDR X0, [X0 + 0xD60]
	0x035C29E0 BL 0x1C16CF4
	0x035C29E4 ADRP X0, 0xB75000
	0x035C29E8 LDR X0, [X0 + 0xD68]
	0x035C29EC BL 0x1C16CF4
	0x035C29F0 ADRP X0, 0xB75000
	0x035C29F4 LDR X0, [X0 + 0xD70]
	0x035C29F8 BL 0x1C16CF4
	0x035C29FC ADRP X0, 0xB3D000
	0x035C2A00 LDR X0, [X0 + 0x670]
	0x035C2A04 BL 0x1C16CF4
	0x035C2A08 ADRP X0, 0xB62000
	0x035C2A0C LDR X0, [X0 + 0x910]
	0x035C2A10 BL 0x1C16CF4
	0x035C2A14 ADRP X0, 0xB3D000
	0x035C2A18 LDR X0, [X0 + 0x650]
	0x035C2A1C BL 0x1C16CF4
	0x035C2A20 ADRP X0, 0xB3C000
	0x035C2A24 LDR X0, [X0 + 0x3B0]
	0x035C2A28 BL 0x1C16CF4
	0x035C2A2C ADRP X0, 0xB75000
	0x035C2A30 LDR X0, [X0 + 0xD78]
	0x035C2A34 BL 0x1C16CF4
	0x035C2A38 ADRP X0, 0xB31000
	0x035C2A3C LDR X0, [X0 + 0x988]
	0x035C2A40 BL 0x1C16CF4
	0x035C2A44 ADRP X0, 0xB75000
	0x035C2A48 LDR X0, [X0 + 0xD80]
	0x035C2A4C BL 0x1C16CF4
	0x035C2A50 MOVZ W8, 0x1
	0x035C2A54 STRB W8, [X19 + 0x19A]
	0x035C2A58 LDR X0, [X25]
	0x035C2A5C STR X31, [X31 + 0x38]
	0x035C2A60 LDR W8, [X0 + 0xE0]
	0x035C2A64 CBNZ W8, 0x35C2A6C
	0x035C2A68 BL 0x1C16DFC
	0x035C2A6C ADRP X19, 0xE1E000
	0x035C2A70 LDRB W8, [X19 + 0x1AC]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xE1F000
	005 Move W8, [X20+391]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0xB32000
	012 Move X0, [X0+1928]
	013 Call 0x1C17CF4
	014 Move X0, 0xB76000
	015 Move X0, [X0+3368]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+391], W8
	019 Compare X19, 0
	020 JumpIfEqual {52}
	021 Move X20, 0xB76000
	022 Move X20, [X20+3368]
	023 Move X0, X19
	024 Move X2, X31
	025 Move X1, [X20]
	026 Call String.IndexOf, X0, X1
	027 Move X8, [X20]
	028 Compare X8, 0
	029 JumpIfEqual {52}
	030 Move W8, [X8+16]
	031 Move X20, 0xB32000
	032 Move X20, [X20+1928]
	033 Move W1, W31
	034 Add W2, W8, W0
	035 Move X0, X19
	036 Move X3, X31
	037 Call String.Substring, X0, X1, X2
	038 Move X8, [X20]
	039 Move X19, X0
	040 Move W9, [X8+224]
	041 Compare W9, 0
	042 JumpIfNotEqual {46}
	043 Move X0, X8
	044 Call 0x1C17DFC
	045 Move X8, [X20]
	046 Move X8, [X8+184]
	047 Move [X8+48], X19
	048 Move X20, [X31+16]
	049 Move X19, [X31+24]
	050 Move X30, [X31+32]
	051 Return 
	052 Call 0x1C17F20

Method: System.Boolean IsEnabled(AnimalCompany.LogLevel level, AnimalCompany.LogChannel channel)

Disassembly:
	0x035C2A74 CBNZ W8, 0x35C2A8C
	0x035C2A78 ADRP X0, 0xB31000
	0x035C2A7C LDR X0, [X0 + 0x788]
	0x035C2A80 BL 0x1C16CF4
	0x035C2A84 MOVZ W8, 0x1
	0x035C2A88 STRB W8, [X19 + 0x1AC]
	0x035C2A8C LDR X0, [X25]
	0x035C2A90 LDR W8, [X0 + 0xE0]
	0x035C2A94 CBNZ W8, 0x35C2AA0
	0x035C2A98 BL 0x1C16DFC
	0x035C2A9C LDR X0, [X25]
	0x035C2AA0 LDR X8, [X0 + 0xB8]
	0x035C2AA4 LDRB W9, [X8 + 0x10]
	0x035C2AA8 CBNZ W9, 0x35C2F58
	0x035C2AAC LDR W9, [X0 + 0xE0]
	0x035C2AB0 CBNZ W9, 0x35C2AC0
	0x035C2AB4 BL 0x1C16DFC
	0x035C2AB8 LDR X8, [X25]
	0x035C2ABC LDR X8, [X8 + 0xB8]
	0x035C2AC0 LDR X19, [X8 + 0x38]
	0x035C2AC4 STRB W31, [X31 + 0x4C]
	0x035C2AC8 ADD X1, X31, 0x4C
	0x035C2ACC MOV X0, X19
	0x035C2AD0 MOV X2, X31
	0x035C2AD4 BL 0x33DE64C
	0x035C2AD8 LDR X0, [X25]
	0x035C2ADC LDR W8, [X0 + 0xE0]
	0x035C2AE0 CBNZ W8, 0x35C2AEC
	0x035C2AE4 BL 0x1C16DFC
	0x035C2AE8 LDR X0, [X25]
	0x035C2AEC LDR X8, [X0 + 0xB8]
	0x035C2AF0 LDR X0, [X8 + 0x38]
	0x035C2AF4 CBZ X0, 0x35C2F7C
	0x035C2AF8 ADRP X8, 0xB75000
	0x035C2AFC LDR X8, [X8 + 0xD38]
	0x035C2B00 LDR X4, [X8]
	0x035C2B04 ADD X3, X31, 0x38
	0x035C2B08 MOV X1, X21

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xE1F000
	007 Move X21, 0xB32000
	008 Move W8, [X22+392]
	009 Move X21, [X21+1928]
	010 Move W19, W1
	011 Move W20, W0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xB32000
	017 Move X0, [X0+1928]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+392], W8
	021 Move X0, [X21]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move W0, W20
	027 Move W1, W19
	028 Call Log.LocalLogEnabled, X0, X1
	029 Move TEMP, X0
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfNotEqual {40}
	033 Move X20, [X31+32]
	034 Move X19, [X31+40]
	035 Move X22, [X31+16]
	036 Move X21, [X31+24]
	037 Move W0, 1
	038 Move X30, [X31+48]
	039 Return X0
	040 Move X0, [X21]
	041 Move W8, [X0+224]
	042 Compare W8, 0
	043 JumpIfNotEqual {45}
	044 Call 0x1C17DFC
	045 Move W0, W20
	046 Move W1, W19
	047 Move X20, [X31+32]
	048 Move X19, [X31+40]
	049 Move X22, [X31+16]
	050 Move X21, [X31+24]
	051 Move X30, [X31+48]
	052 Call Log.RemoteLogEnabled, X0, X1
	053 Return X0

Method: System.Void Trace(System.String message, System.Collections.Generic.Dictionary`2<System.String, System.Object> data = null, System.String filePath = , System.String memberName = , System.Int32 lineNumber = -1)

Disassembly:
	0x035C2D04 LDR X3, [X8 + 0x280]
	0x035C2D08 MOV X0, X22
	0x035C2D0C MOV X1, X23
	0x035C2D10 BLR X9
	0x035C2D14 LDR X0, [X25]
	0x035C2D18 LDR W8, [X0 + 0xE0]
	0x035C2D1C CBNZ W8, 0x35C2D28
	0x035C2D20 BL 0x1C16DFC
	0x035C2D24 LDR X0, [X25]
	0x035C2D28 LDR X8, [X0 + 0xB8]
	0x035C2D2C LDR W0, [X8 + 0x20]
	0x035C2D30 MOV X1, X31
	0x035C2D34 BL 0x35AD530
	0x035C2D38 ADRP X9, 0xB75000
	0x035C2D3C LDR X8, [X22]
	0x035C2D40 LDR X9, [X9 + 0xD60]
	0x035C2D44 MOV X2, X0
	0x035C2D48 LDR X3, [X8 + 0x280]
	0x035C2D4C LDR X1, [X9]
	0x035C2D50 LDR X9, [X8 + 0x278]
	0x035C2D54 MOV X0, X22
	0x035C2D58 BLR X9
	0x035C2D5C MOV X0, X31
	0x035C2D60 BL 0x33E3C68
	0x035C2D64 LDR X8, [X25]
	0x035C2D68 LDR X8, [X8 + 0xB8]
	0x035C2D6C LDR X8, [X8 + 0x28]
	0x035C2D70 CMP X0, X8
	0x035C2D74 CSET W0, EQ
	0x035C2D78 MOV X1, X31
	0x035C2D7C BL 0x35AD8D0
	0x035C2D80 ADRP X9, 0xB75000
	0x035C2D84 LDR X8, [X22]
	0x035C2D88 LDR X9, [X9 + 0xD80]
	0x035C2D8C MOV X2, X0
	0x035C2D90 LDR X3, [X8 + 0x280]
	0x035C2D94 LDR X1, [X9]
	0x035C2D98 LDR X9, [X8 + 0x278]
	0x035C2D9C MOV X0, X22

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X24, 0xE1F000
	011 Move X25, 0xB32000
	012 Move W8, [X24+393]
	013 Move X25, [X25+1928]
	014 Move W19, W4
	015 Move X20, X3
	016 Move X21, X2
	017 Move X22, X1
	018 Move X23, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {28}
	023 Move X0, 0xB32000
	024 Move X0, [X0+1928]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X24+393], W8
	028 Move X0, [X25]
	029 Move W8, [X0+224]
	030 Compare W8, 0
	031 JumpIfNotEqual {33}
	032 Call 0x1C17DFC
	033 Move W0, 5
	034 Move W1, 1
	035 Move X2, X23
	036 Move X3, X31
	037 Move X4, X22
	038 Move X5, X21
	039 Move X6, X20
	040 Move W7, W19
	041 Call Log.DoLog, X0, X1, X2, X3, X4, X5, X6, X7
	042 Move X20, [X31+64]
	043 Move X19, [X31+72]
	044 Move X22, [X31+48]
	045 Move X21, [X31+56]
	046 Move X24, [X31+32]
	047 Move X23, [X31+40]
	048 Move X30, [X31+16]
	049 Move X25, [X31+24]
	050 Add X31, X31, 80
	051 Return 

Method: System.Void Trace(AnimalCompany.LogChannel channel, System.String message, System.Collections.Generic.Dictionary`2<System.String, System.Object> data = null, System.String filePath = , System.String memberName = , System.Int32 lineNumber = -1)

Disassembly:
	0x035C2ED0 LDR X3, [X8 + 0x280]
	0x035C2ED4 LDR X1, [X9]
	0x035C2ED8 LDR X9, [X8 + 0x278]
	0x035C2EDC MOV X0, X21
	0x035C2EE0 BLR X9
	0x035C2EE4 ADRP X9, 0xB62000
	0x035C2EE8 LDR X8, [X22]
	0x035C2EEC LDR X9, [X9 + 0x910]
	0x035C2EF0 LDR X3, [X8 + 0x280]
	0x035C2EF4 LDR X1, [X9]
	0x035C2EF8 LDR X9, [X8 + 0x278]
	0x035C2EFC MOV X0, X22
	0x035C2F00 MOV X2, X21
	0x035C2F04 BLR X9
	0x035C2F08 LDR X8, [X25]
	0x035C2F0C LDR X8, [X8 + 0xB8]
	0x035C2F10 LDR X1, [X8 + 0x18]
	0x035C2F14 MOV X0, X22
	0x035C2F18 BL 0x35C30A0
	0x035C2F1C ADRP X8, 0xB32000
	0x035C2F20 LDR X8, [X8 + 0x2C8]
	0x035C2F24 LDR X0, [X8]
	0x035C2F28 LDR W8, [X0 + 0xE0]
	0x035C2F2C CBNZ W8, 0x35C2F34
	0x035C2F30 BL 0x1C16DFC
	0x035C2F34 MOV X0, X22
	0x035C2F38 BL 0x35C38D0
	0x035C2F3C MOV X21, X31
	0x035C2F40 LDRB W8, [X31 + 0x4C]
	0x035C2F44 CBZ W8, 0x35C2F54
	0x035C2F48 MOV X0, X19
	0x035C2F4C MOV X1, X31
	0x035C2F50 BL 0x33E14E4
	0x035C2F54 CBNZ X21, 0x35C2F74
	0x035C2F58 LDP X20, X19, [X31 + 0x80]
	0x035C2F5C LDP X22, X21, [X31 + 0x70]
	0x035C2F60 LDP X24, X23, [X31 + 0x60]
	0x035C2F64 LDP X26, X25, [X31 + 0x50]
	0x035C2F68 LDR X30, [X31 + 0x40]
	0x035C2F6C ADD X31, X31, 0x90
	0x035C2F70 RET
	0x035C2F74 MOV X0, X21

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+16], X30
	003 Move [X31+32], X26
	004 Move [X31+40], X25
	005 Move [X31+48], X24
	006 Move [X31+56], X23
	007 Move [X31+64], X22
	008 Move [X31+72], X21
	009 Move [X31+80], X20
	010 Move [X31+88], X19
	011 Move X25, 0xE1F000
	012 Move X26, 0xB32000
	013 Move W8, [X25+394]
	014 Move X26, [X26+1928]
	015 Move W19, W5
	016 Move X20, X4
	017 Move X21, X3
	018 Move X22, X2
	019 Move X23, X1
	020 Move W24, W0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {30}
	025 Move X0, 0xB32000
	026 Move X0, [X0+1928]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X25+394], W8
	030 Move X0, [X26]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {35}
	034 Call 0x1C17DFC
	035 Move W0, 5
	036 Move W1, W24
	037 Move X2, X23
	038 Move X3, X31
	039 Move X4, X22
	040 Move X5, X21
	041 Move X6, X20
	042 Move W7, W19
	043 Call Log.DoLog, X0, X1, X2, X3, X4, X5, X6, X7
	044 Move X20, [X31+80]
	045 Move X19, [X31+88]
	046 Move X22, [X31+64]
	047 Move X21, [X31+72]
	048 Move X24, [X31+48]
	049 Move X23, [X31+56]
	050 Move X26, [X31+32]
	051 Move X25, [X31+40]
	052 Move X30, [X31+16]
	053 Add X31, X31, 96
	054 Return 

Method: System.Void Debug(System.String message, System.Collections.Generic.Dictionary`2<System.String, System.Object> data = null, System.String filePath = , System.String memberName = , System.Int32 lineNumber = -1)

Disassembly:
	0x035C2F78 BL 0x1C16F18
	0x035C2F7C BL 0x1C16F20
	0x035C2F80 BL 0x1C16F20
	0x035C2F84 BL 0x1C16F20
	0x035C2F88 BL 0x1C16F20
	0x035C2F8C BL 0x1C16F28
	0x035C2F90 BL 0x1C16F20
	0x035C2F94 BL 0x1C16F20
	0x035C2F98 BL 0x1C16F28
	0x035C2F9C BL 0x1C16F20
	0x035C2FA0 BL 0x1C16F28
	0x035C2FA4 BL 0x1C16F20
	0x035C2FA8 BL 0x1C16F20
	0x035C2FAC BL 0x1C16F20
	0x035C2FB0 BL 0x1C16F20
	0x035C2FB4 B 0x35C3048
	0x035C2FB8 B 0x35C3048
	0x035C2FBC B 0x35C3048
	0x035C2FC0 B 0x35C3048
	0x035C2FC4 B 0x35C3048
	0x035C2FC8 B 0x35C3048
	0x035C2FCC B 0x35C3048
	0x035C2FD0 B 0x35C3048
	0x035C2FD4 B 0x35C3048
	0x035C2FD8 B 0x35C3048
	0x035C2FDC B 0x35C3048
	0x035C2FE0 B 0x35C3048
	0x035C2FE4 B 0x35C3048
	0x035C2FE8 B 0x35C3048
	0x035C2FEC B 0x35C3048
	0x035C2FF0 B 0x35C3048
	0x035C2FF4 B 0x35C3048
	0x035C2FF8 B 0x35C3048
	0x035C2FFC B 0x35C3048
	0x035C3000 B 0x35C3048
	0x035C3004 B 0x35C3048
	0x035C3008 B 0x35C3048
	0x035C300C B 0x35C3048
	0x035C3010 B 0x35C3048

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X24, 0xE1F000
	011 Move X25, 0xB32000
	012 Move W8, [X24+395]
	013 Move X25, [X25+1928]
	014 Move W19, W4
	015 Move X20, X3
	016 Move X21, X2
	017 Move X22, X1
	018 Move X23, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {28}
	023 Move X0, 0xB32000
	024 Move X0, [X0+1928]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X24+395], W8
	028 Move X0, [X25]
	029 Move W8, [X0+224]
	030 Compare W8, 0
	031 JumpIfNotEqual {33}
	032 Call 0x1C17DFC
	033 Move W0, 4
	034 Move W1, 1
	035 Move X2, X23
	036 Move X3, X31
	037 Move X4, X22
	038 Move X5, X21
	039 Move X6, X20
	040 Move W7, W19
	041 Call Log.DoLog, X0, X1, X2, X3, X4, X5, X6, X7
	042 Move X20, [X31+64]
	043 Move X19, [X31+72]
	044 Move X22, [X31+48]
	045 Move X21, [X31+56]
	046 Move X24, [X31+32]
	047 Move X23, [X31+40]
	048 Move X30, [X31+16]
	049 Move X25, [X31+24]
	050 Add X31, X31, 80
	051 Return 

Method: System.Void Debug(AnimalCompany.LogChannel channel, System.String message, System.Collections.Generic.Dictionary`2<System.String, System.Object> data = null, System.String filePath = , System.String memberName = , System.Int32 lineNumber = -1)

Disassembly:
	0x035C3014 B 0x35C3048
	0x035C3018 B 0x35C3048
	0x035C301C B 0x35C3048
	0x035C3020 B 0x35C3048
	0x035C3024 B 0x35C3048
	0x035C3028 B 0x35C3048
	0x035C302C B 0x35C3048
	0x035C3030 B 0x35C3048
	0x035C3034 B 0x35C3048
	0x035C3038 B 0x35C3048
	0x035C303C B 0x35C3048
	0x035C3040 B 0x35C3048
	0x035C3044 B 0x35C3048
	0x035C3048 MOV X20, X0
	0x035C304C CMP W1, 0x1
	0x035C3050 B.NE 0x35C3068
	0x035C3054 MOV X0, X20
	0x035C3058 BL 0x3EB1AD0
	0x035C305C LDR X21, [X0]
	0x035C3060 BL 0x3EB1AE0
	0x035C3064 B 0x35C2F40
	0x035C3068 MOV X21, X31
	0x035C306C B 0x35C3074
	0x035C3070 MOV X20, X0
	0x035C3074 LDRB W8, [X31 + 0x4C]
	0x035C3078 CBZ W8, 0x35C3088
	0x035C307C MOV X0, X19
	0x035C3080 MOV X1, X31
	0x035C3084 BL 0x33E14E4
	0x035C3088 CBNZ X21, 0x35C3094
	0x035C308C MOV X0, X20
	0x035C3090 BL 0x1D2C690
	0x035C3094 MOV X0, X21
	0x035C3098 BL 0x1C16F18
	0x035C309C BL 0x1990590
	0x035C30A0 STP X29, X30, [X31 - 0x60]!
	0x035C30A4 STP X28, X27, [X31 + 0x10]
	0x035C30A8 STP X26, X25, [X31 + 0x20]
	0x035C30AC STP X24, X23, [X31 + 0x30]
	0x035C30B0 STP X22, X21, [X31 + 0x40]
	0x035C30B4 STP X20, X19, [X31 + 0x50]
	0x035C30B8 ADRP X21, 0xE1D000

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+16], X30
	003 Move [X31+32], X26
	004 Move [X31+40], X25
	005 Move [X31+48], X24
	006 Move [X31+56], X23
	007 Move [X31+64], X22
	008 Move [X31+72], X21
	009 Move [X31+80], X20
	010 Move [X31+88], X19
	011 Move X25, 0xE1E000
	012 Move X26, 0xB31000
	013 Move W8, [X25+396]
	014 Move X26, [X26+1928]
	015 Move W19, W5
	016 Move X20, X4
	017 Move X21, X3
	018 Move X22, X2
	019 Move X23, X1
	020 Move W24, W0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {30}
	025 Move X0, 0xB31000
	026 Move X0, [X0+1928]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X25+396], W8
	030 Move X0, [X26]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {35}
	034 Call 0x1C17DFC
	035 Move W0, 4
	036 Move W1, W24
	037 Move X2, X23
	038 Move X3, X31
	039 Move X4, X22
	040 Move X5, X21
	041 Move X6, X20
	042 Move W7, W19
	043 Call Log.DoLog, X0, X1, X2, X3, X4, X5, X6, X7
	044 Move X20, [X31+80]
	045 Move X19, [X31+88]
	046 Move X22, [X31+64]
	047 Move X21, [X31+72]
	048 Move X24, [X31+48]
	049 Move X23, [X31+56]
	050 Move X26, [X31+32]
	051 Move X25, [X31+40]
	052 Move X30, [X31+16]
	053 Add X31, X31, 96
	054 Return 

Method: System.Void Info(System.String message, System.Collections.Generic.Dictionary`2<System.String, System.Object> data = null, System.String filePath = , System.String memberName = , System.Int32 lineNumber = -1)

Disassembly:
	0x035C30BC LDRB W8, [X21 + 0x1A3]
	0x035C30C0 MOV X19, X1
	0x035C30C4 MOV X20, X0
	0x035C30C8 TBNZ X8, 0x0, 0x35C3170
	0x035C30CC ADRP X0, 0xB30000
	0x035C30D0 LDR X0, [X0 + 0xB58]
	0x035C30D4 BL 0x1C16CF4
	0x035C30D8 ADRP X0, 0xB39000
	0x035C30DC LDR X0, [X0 + 0x9E8]
	0x035C30E0 BL 0x1C16CF4
	0x035C30E4 ADRP X0, 0xB38000
	0x035C30E8 LDR X0, [X0 + 0xF10]
	0x035C30EC BL 0x1C16CF4
	0x035C30F0 ADRP X0, 0xB30000
	0x035C30F4 LDR X0, [X0 + 0x7D0]
	0x035C30F8 BL 0x1C16CF4
	0x035C30FC ADRP X0, 0xB30000
	0x035C3100 LDR X0, [X0 + 0x818]
	0x035C3104 BL 0x1C16CF4
	0x035C3108 ADRP X0, 0xB30000
	0x035C310C LDR X0, [X0 + 0xE00]
	0x035C3110 BL 0x1C16CF4
	0x035C3114 ADRP X0, 0xB30000
	0x035C3118 LDR X0, [X0 + 0xE18]
	0x035C311C BL 0x1C16CF4
	0x035C3120 ADRP X0, 0xB30000
	0x035C3124 LDR X0, [X0 + 0x758]
	0x035C3128 BL 0x1C16CF4
	0x035C312C ADRP X0, 0xB32000
	0x035C3130 LDR X0, [X0 + 0xA60]
	0x035C3134 BL 0x1C16CF4
	0x035C3138 ADRP X0, 0xB31000
	0x035C313C LDR X0, [X0 + 0x460]
	0x035C3140 BL 0x1C16CF4
	0x035C3144 ADRP X0, 0xB30000
	0x035C3148 LDR X0, [X0 + 0x788]
	0x035C314C BL 0x1C16CF4
	0x035C3150 ADRP X0, 0xB30000
	0x035C3154 LDR X0, [X0 + 0xA90]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X24, 0xE1E000
	011 Move X25, 0xB31000
	012 Move W8, [X24+397]
	013 Move X25, [X25+1928]
	014 Move W19, W4
	015 Move X20, X3
	016 Move X21, X2
	017 Move X22, X1
	018 Move X23, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {28}
	023 Move X0, 0xB31000
	024 Move X0, [X0+1928]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X24+397], W8
	028 Move X0, [X25]
	029 Move W8, [X0+224]
	030 Compare W8, 0
	031 JumpIfNotEqual {33}
	032 Call 0x1C17DFC
	033 Move W0, 3
	034 Move W1, 1
	035 Move X2, X23
	036 Move X3, X31
	037 Move X4, X22
	038 Move X5, X21
	039 Move X6, X20
	040 Move W7, W19
	041 Call Log.DoLog, X0, X1, X2, X3, X4, X5, X6, X7
	042 Move X20, [X31+64]
	043 Move X19, [X31+72]
	044 Move X22, [X31+48]
	045 Move X21, [X31+56]
	046 Move X24, [X31+32]
	047 Move X23, [X31+40]
	048 Move X30, [X31+16]
	049 Move X25, [X31+24]
	050 Add X31, X31, 80
	051 Return 

Method: System.Void Info(AnimalCompany.LogChannel channel, System.String message, System.Collections.Generic.Dictionary`2<System.String, System.Object> data = null, System.String filePath = , System.String memberName = , System.Int32 lineNumber = -1)

Disassembly:
	0x035C3158 BL 0x1C16CF4
	0x035C315C ADRP X0, 0xB30000
	0x035C3160 LDR X0, [X0 + 0x830]
	0x035C3164 BL 0x1C16CF4
	0x035C3168 MOVZ W8, 0x1
	0x035C316C STRB W8, [X21 + 0x1A3]
	0x035C3170 CBZ X19, 0x35C36E8
	0x035C3174 ADRP X10, 0xB30000
	0x035C3178 LDR X8, [X19]
	0x035C317C LDR X10, [X10 + 0x818]
	0x035C3180 LDRH W9, [X8 + 0x12E]
	0x035C3184 LDR X1, [X10]
	0x035C3188 CBZ X9, 0x35C31AC
	0x035C318C LDR X10, [X8 + 0xB0]
	0x035C3190 ADD X10, X10, 0x8
	0x035C3194 LDUR X11, [X10 - 0x8]
	0x035C3198 CMP X11, X1
	0x035C319C B.EQ 0x35C31BC
	0x035C31A0 SUBS X9, X9, 0x1
	0x035C31A4 ADD X10, X10, 0x10
	0x035C31A8 B.NE 0x35C3194
	0x035C31AC MOVZ W2, 0x6
	0x035C31B0 MOV X0, X19
	0x035C31B4 BL 0x1C5C788
	0x035C31B8 B 0x35C31CC
	0x035C31BC LDR W9, [X10]
	0x035C31C0 ADD W9, W9, 0x6
	0x035C31C4 ADD X8, X8, W9, 0x4, SXTW
	0x035C31C8 ADD X0, X8, 0x138
	0x035C31CC LDP X8, X1, [X0]
	0x035C31D0 MOV X0, X19
	0x035C31D4 BLR X8
	0x035C31D8 MOV X19, X0
	0x035C31DC CBZ X0, 0x35C3754
	0x035C31E0 ADRP X24, 0xB30000
	0x035C31E4 ADRP X25, 0xB38000
	0x035C31E8 ADRP X27, 0xB31000
	0x035C31EC ADRP X28, 0xB30000
	0x035C31F0 ADRP X29, 0xB32000
	0x035C31F4 ADRP X23, 0xB30000
	0x035C31F8 LDR X24, [X24 + 0xE18]
	0x035C31FC LDR X25, [X25 + 0xF10]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+16], X30
	003 Move [X31+32], X26
	004 Move [X31+40], X25
	005 Move [X31+48], X24
	006 Move [X31+56], X23
	007 Move [X31+64], X22
	008 Move [X31+72], X21
	009 Move [X31+80], X20
	010 Move [X31+88], X19
	011 Move X25, 0xE1E000
	012 Move X26, 0xB31000
	013 Move W8, [X25+398]
	014 Move X26, [X26+1928]
	015 Move W19, W5
	016 Move X20, X4
	017 Move X21, X3
	018 Move X22, X2
	019 Move X23, X1
	020 Move W24, W0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {30}
	025 Move X0, 0xB31000
	026 Move X0, [X0+1928]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X25+398], W8
	030 Move X0, [X26]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {35}
	034 Call 0x1C17DFC
	035 Move W0, 3
	036 Move W1, W24
	037 Move X2, X23
	038 Move X3, X31
	039 Move X4, X22
	040 Move X5, X21
	041 Move X6, X20
	042 Move W7, W19
	043 Call Log.DoLog, X0, X1, X2, X3, X4, X5, X6, X7
	044 Move X20, [X31+80]
	045 Move X19, [X31+88]
	046 Move X22, [X31+64]
	047 Move X21, [X31+72]
	048 Move X24, [X31+48]
	049 Move X23, [X31+56]
	050 Move X26, [X31+32]
	051 Move X25, [X31+40]
	052 Move X30, [X31+16]
	053 Add X31, X31, 96
	054 Return 

Method: System.Void Warning(System.String message, System.Collections.Generic.Dictionary`2<System.String, System.Object> data = null, System.String filePath = , System.String memberName = , System.Int32 lineNumber = -1)

Disassembly:
	0x035C3200 LDR X27, [X27 + 0x460]
	0x035C3204 LDR X28, [X28 + 0x758]
	0x035C3208 LDR X29, [X29 + 0xA60]
	0x035C320C LDR X23, [X23 + 0xA90]
	0x035C3210 LDR X8, [X19]
	0x035C3214 LDR X1, [X24]
	0x035C3218 LDRH W9, [X8 + 0x12E]
	0x035C321C CBZ X9, 0x35C3240
	0x035C3220 LDR X10, [X8 + 0xB0]
	0x035C3224 ADD X10, X10, 0x8
	0x035C3228 LDUR X11, [X10 - 0x8]
	0x035C322C CMP X11, X1
	0x035C3230 B.EQ 0x35C3250
	0x035C3234 SUBS X9, X9, 0x1
	0x035C3238 ADD X10, X10, 0x10
	0x035C323C B.NE 0x35C3228
	0x035C3240 MOV X0, X19
	0x035C3244 MOV W2, W31
	0x035C3248 BL 0x1C5C788
	0x035C324C B 0x35C325C
	0x035C3250 LDRSW X9, [X10]
	0x035C3254 ADD X8, X8, X9, 0x4, LSL
	0x035C3258 ADD X0, X8, 0x138
	0x035C325C LDP X8, X1, [X0]
	0x035C3260 MOV X0, X19
	0x035C3264 BLR X8
	0x035C3268 TBZ X0, 0x0, 0x35C366C
	0x035C326C LDR X8, [X19]
	0x035C3270 LDR X1, [X24]
	0x035C3274 LDRH W9, [X8 + 0x12E]
	0x035C3278 CBZ X9, 0x35C329C
	0x035C327C LDR X10, [X8 + 0xB0]
	0x035C3280 ADD X10, X10, 0x8
	0x035C3284 LDUR X11, [X10 - 0x8]
	0x035C3288 CMP X11, X1
	0x035C328C B.EQ 0x35C32AC
	0x035C3290 SUBS X9, X9, 0x1
	0x035C3294 ADD X10, X10, 0x10
	0x035C3298 B.NE 0x35C3284

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X24, 0xE1E000
	011 Move X25, 0xB31000
	012 Move W8, [X24+399]
	013 Move X25, [X25+1928]
	014 Move W19, W4
	015 Move X20, X3
	016 Move X21, X2
	017 Move X22, X1
	018 Move X23, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {28}
	023 Move X0, 0xB31000
	024 Move X0, [X0+1928]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X24+399], W8
	028 Move X0, [X25]
	029 Move W8, [X0+224]
	030 Compare W8, 0
	031 JumpIfNotEqual {33}
	032 Call 0x1C17DFC
	033 Move W0, 2
	034 Move W1, 1
	035 Move X2, X23
	036 Move X3, X31
	037 Move X4, X22
	038 Move X5, X21
	039 Move X6, X20
	040 Move W7, W19
	041 Call Log.DoLog, X0, X1, X2, X3, X4, X5, X6, X7
	042 Move X20, [X31+64]
	043 Move X19, [X31+72]
	044 Move X22, [X31+48]
	045 Move X21, [X31+56]
	046 Move X24, [X31+32]
	047 Move X23, [X31+40]
	048 Move X30, [X31+16]
	049 Move X25, [X31+24]
	050 Add X31, X31, 80
	051 Return 

Method: System.Void Warning(AnimalCompany.LogChannel channel, System.String message, System.Collections.Generic.Dictionary`2<System.String, System.Object> data = null, System.String filePath = , System.String memberName = , System.Int32 lineNumber = -1)

Disassembly:
	0x035C329C MOVZ W2, 0x1
	0x035C32A0 MOV X0, X19
	0x035C32A4 BL 0x1C5C788
	0x035C32A8 B 0x35C32BC
	0x035C32AC LDR W9, [X10]
	0x035C32B0 ADD W9, W9, 0x1
	0x035C32B4 ADD X8, X8, W9, 0x4, SXTW
	0x035C32B8 ADD X0, X8, 0x138
	0x035C32BC LDP X8, X1, [X0]
	0x035C32C0 MOV X0, X19
	0x035C32C4 BLR X8
	0x035C32C8 CBZ X0, 0x35C3708
	0x035C32CC LDR X8, [X0]
	0x035C32D0 LDR X1, [X25]
	0x035C32D4 LDR X8, [X8 + 0x40]
	0x035C32D8 LDR X9, [X1 + 0x40]
	0x035C32DC CMP X8, X9
	0x035C32E0 B.NE 0x35C3704
	0x035C32E4 BL 0x1C16E08
	0x035C32E8 LDP X0, X21, [X0]
	0x035C32EC CBZ X21, 0x35C3364
	0x035C32F0 LDR X9, [X28]
	0x035C32F4 LDR X8, [X21]
	0x035C32F8 CMP X8, X9
	0x035C32FC B.EQ 0x35C3390
	0x035C3300 LDR X9, [X29]
	0x035C3304 CMP X8, X9
	0x035C3308 B.EQ 0x35C3458
	0x035C330C LDR X9, [X23]
	0x035C3310 CMP X8, X9
	0x035C3314 B.EQ 0x35C34F4
	0x035C3318 ADRP X9, 0xB30000
	0x035C331C LDR X9, [X9 + 0xB58]
	0x035C3320 LDR X9, [X9]
	0x035C3324 CMP X8, X9
	0x035C3328 B.EQ 0x35C3568
	0x035C332C ADRP X9, 0xB30000
	0x035C3330 LDR X9, [X9 + 0x7D0]
	0x035C3334 LDRB W11, [X8 + 0x130]
	0x035C3338 LDR X9, [X9]
	0x035C333C LDRB W10, [X9 + 0x130]
	0x035C3340 CMP W11, W10

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+16], X30
	003 Move [X31+32], X26
	004 Move [X31+40], X25
	005 Move [X31+48], X24
	006 Move [X31+56], X23
	007 Move [X31+64], X22
	008 Move [X31+72], X21
	009 Move [X31+80], X20
	010 Move [X31+88], X19
	011 Move X25, 0xE1E000
	012 Move X26, 0xB31000
	013 Move W8, [X25+400]
	014 Move X26, [X26+1928]
	015 Move W19, W5
	016 Move X20, X4
	017 Move X21, X3
	018 Move X22, X2
	019 Move X23, X1
	020 Move W24, W0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {30}
	025 Move X0, 0xB31000
	026 Move X0, [X0+1928]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X25+400], W8
	030 Move X0, [X26]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {35}
	034 Call 0x1C17DFC
	035 Move W0, 2
	036 Move W1, W24
	037 Move X2, X23
	038 Move X3, X31
	039 Move X4, X22
	040 Move X5, X21
	041 Move X6, X20
	042 Move W7, W19
	043 Call Log.DoLog, X0, X1, X2, X3, X4, X5, X6, X7
	044 Move X20, [X31+80]
	045 Move X19, [X31+88]
	046 Move X22, [X31+64]
	047 Move X21, [X31+72]
	048 Move X24, [X31+48]
	049 Move X23, [X31+56]
	050 Move X26, [X31+32]
	051 Move X25, [X31+40]
	052 Move X30, [X31+16]
	053 Add X31, X31, 96
	054 Return 

Method: System.Void Error(System.String message, System.Collections.Generic.Dictionary`2<System.String, System.Object> data = null, System.String filePath = , System.String memberName = , System.Int32 lineNumber = -1)

Disassembly:
	0x035C3344 B.CC 0x35C335C
	0x035C3348 LDR X8, [X8 + 0xC8]
	0x035C334C ADD X8, X8, X10, 0x3, LSL
	0x035C3350 LDUR X8, [X8 - 0x8]
	0x035C3354 CMP X8, X9
	0x035C3358 B.EQ 0x35C35E4
	0x035C335C MOV W26, W31
	0x035C3360 B 0x35C3368
	0x035C3364 MOVZ W26, 0x1
	0x035C3368 CBZ X0, 0x35C370C
	0x035C336C LDR X8, [X0]
	0x035C3370 LDP X9, X1, [X8 + 0x168]
	0x035C3374 BLR X9
	0x035C3378 MOV X22, X0
	0x035C337C TBZ X26, 0x0, 0x35C3404
	0x035C3380 ADRP X8, 0xB30000
	0x035C3384 LDR X8, [X8 + 0x830]
	0x035C3388 LDR X21, [X8]
	0x035C338C B 0x35C3418
	0x035C3390 CBZ X0, 0x35C371C
	0x035C3394 LDR X8, [X0]
	0x035C3398 LDP X9, X1, [X8 + 0x168]
	0x035C339C BLR X9
	0x035C33A0 MOV X22, X0
	0x035C33A4 LDR X0, [X27]
	0x035C33A8 LDR W8, [X0 + 0xE0]
	0x035C33AC CBNZ W8, 0x35C33B4
	0x035C33B0 BL 0x1C16DFC
	0x035C33B4 LDR X8, [X21]
	0x035C33B8 LDR X1, [X28]
	0x035C33BC LDR X8, [X8 + 0x40]
	0x035C33C0 LDR X9, [X1 + 0x40]
	0x035C33C4 CMP X8, X9
	0x035C33C8 B.NE 0x35C3714
	0x035C33CC MOV X0, X21
	0x035C33D0 BL 0x1C16E08
	0x035C33D4 LDR W0, [X0]
	0x035C33D8 MOV X1, X31
	0x035C33DC BL 0x35AD530

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X24, 0xE1E000
	011 Move X25, 0xB31000
	012 Move W8, [X24+401]
	013 Move X25, [X25+1928]
	014 Move W19, W4
	015 Move X20, X3
	016 Move X21, X2
	017 Move X22, X1
	018 Move X23, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {28}
	023 Move X0, 0xB31000
	024 Move X0, [X0+1928]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X24+401], W8
	028 Move X0, [X25]
	029 Move W8, [X0+224]
	030 Compare W8, 0
	031 JumpIfNotEqual {33}
	032 Call 0x1C17DFC
	033 Move W0, 1
	034 Move W1, 1
	035 Move X2, X23
	036 Move X3, X31
	037 Move X4, X22
	038 Move X5, X21
	039 Move X6, X20
	040 Move W7, W19
	041 Call Log.DoLog, X0, X1, X2, X3, X4, X5, X6, X7
	042 Move X20, [X31+64]
	043 Move X19, [X31+72]
	044 Move X22, [X31+48]
	045 Move X21, [X31+56]
	046 Move X24, [X31+32]
	047 Move X23, [X31+40]
	048 Move X30, [X31+16]
	049 Move X25, [X31+24]
	050 Add X31, X31, 80
	051 Return 

Method: System.Void Error(System.String message, System.Exception exception, System.Collections.Generic.Dictionary`2<System.String, System.Object> data = null, System.String filePath = , System.String memberName = , System.Int32 lineNumber = -1)

Disassembly:
	0x035C33E0 CBZ X20, 0x35C3720
	0x035C33E4 LDR X8, [X20]
	0x035C33E8 MOV X2, X0
	0x035C33EC LDR X9, [X8 + 0x278]
	0x035C33F0 LDR X3, [X8 + 0x280]
	0x035C33F4 MOV X0, X20
	0x035C33F8 MOV X1, X22
	0x035C33FC BLR X9
	0x035C3400 B 0x35C3210
	0x035C3404 LDR X8, [X21]
	0x035C3408 LDP X9, X1, [X8 + 0x168]
	0x035C340C MOV X0, X21
	0x035C3410 BLR X9
	0x035C3414 MOV X21, X0
	0x035C3418 LDR X0, [X27]
	0x035C341C LDR W8, [X0 + 0xE0]
	0x035C3420 CBNZ W8, 0x35C3428
	0x035C3424 BL 0x1C16DFC
	0x035C3428 MOV X0, X21
	0x035C342C MOV X1, X31
	0x035C3430 BL 0x35ACF6C
	0x035C3434 CBZ X20, 0x35C3710
	0x035C3438 LDR X8, [X20]
	0x035C343C MOV X2, X0
	0x035C3440 LDR X9, [X8 + 0x278]
	0x035C3444 LDR X3, [X8 + 0x280]
	0x035C3448 MOV X0, X20
	0x035C344C MOV X1, X22
	0x035C3450 BLR X9
	0x035C3454 B 0x35C3210
	0x035C3458 CBZ X0, 0x35C372C
	0x035C345C LDR X8, [X0]
	0x035C3460 LDP X9, X1, [X8 + 0x168]
	0x035C3464 BLR X9
	0x035C3468 ADRP X8, 0xB39000
	0x035C346C LDR X8, [X8 + 0x9E8]
	0x035C3470 MOV X22, X0
	0x035C3474 LDR X0, [X8]
	0x035C3478 LDR W8, [X0 + 0xE0]
	0x035C347C CBNZ W8, 0x35C3484
	0x035C3480 BL 0x1C16DFC
	0x035C3484 LDR X8, [X21]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+16], X30
	003 Move [X31+32], X26
	004 Move [X31+40], X25
	005 Move [X31+48], X24
	006 Move [X31+56], X23
	007 Move [X31+64], X22
	008 Move [X31+72], X21
	009 Move [X31+80], X20
	010 Move [X31+88], X19
	011 Move X25, 0xE1E000
	012 Move X26, 0xB31000
	013 Move W8, [X25+402]
	014 Move X26, [X26+1928]
	015 Move W19, W5
	016 Move X20, X4
	017 Move X21, X3
	018 Move X22, X2
	019 Move X23, X1
	020 Move X24, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {30}
	025 Move X0, 0xB31000
	026 Move X0, [X0+1928]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X25+402], W8
	030 Move X0, [X26]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {35}
	034 Call 0x1C17DFC
	035 Move W0, 1
	036 Move W1, 1
	037 Move X2, X24
	038 Move X3, X23
	039 Move X4, X22
	040 Move X5, X21
	041 Move X6, X20
	042 Move W7, W19
	043 Call Log.DoLog, X0, X1, X2, X3, X4, X5, X6, X7
	044 Move X20, [X31+80]
	045 Move X19, [X31+88]
	046 Move X22, [X31+64]
	047 Move X21, [X31+72]
	048 Move X24, [X31+48]
	049 Move X23, [X31+56]
	050 Move X26, [X31+32]
	051 Move X25, [X31+40]
	052 Move X30, [X31+16]
	053 Add X31, X31, 96
	054 Return 

Method: System.Void Error(System.Exception exception, System.Collections.Generic.Dictionary`2<System.String, System.Object> data = null, System.String filePath = , System.String memberName = , System.Int32 lineNumber = -1)

Disassembly:
	0x035C3488 LDR X1, [X29]
	0x035C348C LDR X8, [X8 + 0x40]
	0x035C3490 LDR X9, [X1 + 0x40]
	0x035C3494 CMP X8, X9
	0x035C3498 B.NE 0x35C3724
	0x035C349C MOV X0, X21
	0x035C34A0 BL 0x1C16E08
	0x035C34A4 LDR X0, [X0]
	0x035C34A8 MOV X1, X31
	0x035C34AC BL 0x33203EC
	0x035C34B0 MOV W21, W0
	0x035C34B4 LDR X0, [X27]
	0x035C34B8 LDR W8, [X0 + 0xE0]
	0x035C34BC CBNZ W8, 0x35C34C4
	0x035C34C0 BL 0x1C16DFC
	0x035C34C4 MOV W0, W21
	0x035C34C8 MOV X1, X31
	0x035C34CC BL 0x35AD530
	0x035C34D0 CBZ X20, 0x35C3730
	0x035C34D4 LDR X8, [X20]
	0x035C34D8 MOV X2, X0
	0x035C34DC LDR X9, [X8 + 0x278]
	0x035C34E0 LDR X3, [X8 + 0x280]
	0x035C34E4 MOV X0, X20
	0x035C34E8 MOV X1, X22
	0x035C34EC BLR X9
	0x035C34F0 B 0x35C3210
	0x035C34F4 CBZ X0, 0x35C3740
	0x035C34F8 LDR X8, [X0]
	0x035C34FC LDP X9, X1, [X8 + 0x168]
	0x035C3500 BLR X9
	0x035C3504 MOV X22, X0
	0x035C3508 LDR X0, [X27]
	0x035C350C LDR W8, [X0 + 0xE0]
	0x035C3510 CBNZ W8, 0x35C3518
	0x035C3514 BL 0x1C16DFC
	0x035C3518 LDR X8, [X21]
	0x035C351C LDR X1, [X23]
	0x035C3520 LDR X8, [X8 + 0x40]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X24, 0xE1E000
	011 Move X25, 0xB31000
	012 Move W8, [X24+403]
	013 Move X25, [X25+1928]
	014 Move W19, W4
	015 Move X20, X3
	016 Move X21, X2
	017 Move X22, X1
	018 Move X23, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {28}
	023 Move X0, 0xB31000
	024 Move X0, [X0+1928]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X24+403], W8
	028 Move X0, [X25]
	029 Move W8, [X0+224]
	030 Compare W8, 0
	031 JumpIfNotEqual {33}
	032 Call 0x1C17DFC
	033 Move W0, 1
	034 Move W1, 1
	035 Move X2, X31
	036 Move X3, X23
	037 Move X4, X22
	038 Move X5, X21
	039 Move X6, X20
	040 Move W7, W19
	041 Call Log.DoLog, X0, X1, X2, X3, X4, X5, X6, X7
	042 Move X20, [X31+64]
	043 Move X19, [X31+72]
	044 Move X22, [X31+48]
	045 Move X21, [X31+56]
	046 Move X24, [X31+32]
	047 Move X23, [X31+40]
	048 Move X30, [X31+16]
	049 Move X25, [X31+24]
	050 Add X31, X31, 80
	051 Return 

Method: System.Void Error(AnimalCompany.LogChannel channel, System.Exception exception, System.Collections.Generic.Dictionary`2<System.String, System.Object> data = null, System.String filePath = , System.String memberName = , System.Int32 lineNumber = -1)

Disassembly:
	0x035C3524 LDR X9, [X1 + 0x40]
	0x035C3528 CMP X8, X9
	0x035C352C B.NE 0x35C3734
	0x035C3530 MOV X0, X21
	0x035C3534 BL 0x1C16E08
	0x035C3538 LDR V0, [X0]
	0x035C353C MOV X0, X31
	0x035C3540 BL 0x35AD448
	0x035C3544 CBZ X20, 0x35C373C
	0x035C3548 LDR X8, [X20]
	0x035C354C MOV X2, X0
	0x035C3550 LDR X9, [X8 + 0x278]
	0x035C3554 LDR X3, [X8 + 0x280]
	0x035C3558 MOV X0, X20
	0x035C355C MOV X1, X22
	0x035C3560 BLR X9
	0x035C3564 B 0x35C3210
	0x035C3568 CBZ X0, 0x35C3750
	0x035C356C LDR X8, [X0]
	0x035C3570 LDP X9, X1, [X8 + 0x168]
	0x035C3574 BLR X9
	0x035C3578 MOV X22, X0
	0x035C357C LDR X0, [X27]
	0x035C3580 LDR W8, [X0 + 0xE0]
	0x035C3584 CBNZ W8, 0x35C358C
	0x035C3588 BL 0x1C16DFC
	0x035C358C ADRP X9, 0xB30000
	0x035C3590 LDR X8, [X21]
	0x035C3594 LDR X9, [X9 + 0xB58]
	0x035C3598 LDR X8, [X8 + 0x40]
	0x035C359C LDR X1, [X9]
	0x035C35A0 LDR X9, [X1 + 0x40]
	0x035C35A4 CMP X8, X9
	0x035C35A8 B.NE 0x35C3744
	0x035C35AC MOV X0, X21
	0x035C35B0 BL 0x1C16E08
	0x035C35B4 LDRB W0, [X0]
	0x035C35B8 MOV X1, X31
	0x035C35BC BL 0x35AD8D0
	0x035C35C0 CBZ X20, 0x35C374C
	0x035C35C4 LDR X8, [X20]
	0x035C35C8 MOV X2, X0

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+16], X30
	003 Move [X31+32], X26
	004 Move [X31+40], X25
	005 Move [X31+48], X24
	006 Move [X31+56], X23
	007 Move [X31+64], X22
	008 Move [X31+72], X21
	009 Move [X31+80], X20
	010 Move [X31+88], X19
	011 Move X25, 0xE1E000
	012 Move X26, 0xB31000
	013 Move W8, [X25+404]
	014 Move X26, [X26+1928]
	015 Move W19, W5
	016 Move X20, X4
	017 Move X21, X3
	018 Move X22, X2
	019 Move X23, X1
	020 Move W24, W0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {30}
	025 Move X0, 0xB31000
	026 Move X0, [X0+1928]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X25+404], W8
	030 Move X0, [X26]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {35}
	034 Call 0x1C17DFC
	035 Move W0, 1
	036 Move W1, W24
	037 Move X2, X31
	038 Move X3, X23
	039 Move X4, X22
	040 Move X5, X21
	041 Move X6, X20
	042 Move W7, W19
	043 Call Log.DoLog, X0, X1, X2, X3, X4, X5, X6, X7
	044 Move X20, [X31+80]
	045 Move X19, [X31+88]
	046 Move X22, [X31+64]
	047 Move X21, [X31+72]
	048 Move X24, [X31+48]
	049 Move X23, [X31+56]
	050 Move X26, [X31+32]
	051 Move X25, [X31+40]
	052 Move X30, [X31+16]
	053 Add X31, X31, 96
	054 Return 

Method: System.Void Error(AnimalCompany.LogChannel channel, System.String message, System.Collections.Generic.Dictionary`2<System.String, System.Object> data = null, System.String filePath = , System.String memberName = , System.Int32 lineNumber = -1)

Disassembly:
	0x035C35CC LDR X9, [X8 + 0x278]
	0x035C35D0 LDR X3, [X8 + 0x280]
	0x035C35D4 MOV X0, X20
	0x035C35D8 MOV X1, X22
	0x035C35DC BLR X9
	0x035C35E0 B 0x35C3210
	0x035C35E4 CBZ X0, 0x35C3768
	0x035C35E8 LDR X8, [X0]
	0x035C35EC LDP X9, X1, [X8 + 0x168]
	0x035C35F0 BLR X9
	0x035C35F4 ADRP X8, 0xB30000
	0x035C35F8 LDR X8, [X8 + 0x788]
	0x035C35FC MOV X22, X0
	0x035C3600 LDR X0, [X8]
	0x035C3604 LDR W8, [X0 + 0xE0]
	0x035C3608 CBNZ W8, 0x35C3610
	0x035C360C BL 0x1C16DFC
	0x035C3610 MOV X0, X21
	0x035C3614 BL 0x35C43E4
	0x035C3618 CBZ X0, 0x35C3760
	0x035C361C LDR X8, [X0]
	0x035C3620 LDP X9, X1, [X8 + 0x168]
	0x035C3624 BLR X9
	0x035C3628 MOV X21, X0
	0x035C362C LDR X0, [X27]
	0x035C3630 LDR W8, [X0 + 0xE0]
	0x035C3634 CBNZ W8, 0x35C363C
	0x035C3638 BL 0x1C16DFC
	0x035C363C MOV X0, X21
	0x035C3640 MOV X1, X31
	0x035C3644 BL 0x35ACF6C
	0x035C3648 CBZ X20, 0x35C3764
	0x035C364C LDR X8, [X20]
	0x035C3650 MOV X2, X0
	0x035C3654 LDR X9, [X8 + 0x278]
	0x035C3658 LDR X3, [X8 + 0x280]
	0x035C365C MOV X0, X20
	0x035C3660 MOV X1, X22
	0x035C3664 BLR X9
	0x035C3668 B 0x35C3210
	0x035C366C ADRP X22, 0xB30000
	0x035C3670 LDR X22, [X22 + 0xE00]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+16], X30
	003 Move [X31+32], X26
	004 Move [X31+40], X25
	005 Move [X31+48], X24
	006 Move [X31+56], X23
	007 Move [X31+64], X22
	008 Move [X31+72], X21
	009 Move [X31+80], X20
	010 Move [X31+88], X19
	011 Move X25, 0xE1E000
	012 Move X26, 0xB31000
	013 Move W8, [X25+405]
	014 Move X26, [X26+1928]
	015 Move W19, W5
	016 Move X20, X4
	017 Move X21, X3
	018 Move X22, X2
	019 Move X23, X1
	020 Move W24, W0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {30}
	025 Move X0, 0xB31000
	026 Move X0, [X0+1928]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X25+405], W8
	030 Move X0, [X26]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {35}
	034 Call 0x1C17DFC
	035 Move W0, 1
	036 Move W1, W24
	037 Move X2, X23
	038 Move X3, X31
	039 Move X4, X22
	040 Move X5, X21
	041 Move X6, X20
	042 Move W7, W19
	043 Call Log.DoLog, X0, X1, X2, X3, X4, X5, X6, X7
	044 Move X20, [X31+80]
	045 Move X19, [X31+88]
	046 Move X22, [X31+64]
	047 Move X21, [X31+72]
	048 Move X24, [X31+48]
	049 Move X23, [X31+56]
	050 Move X26, [X31+32]
	051 Move X25, [X31+40]
	052 Move X30, [X31+16]
	053 Add X31, X31, 96
	054 Return 

Method: System.Void Error(AnimalCompany.LogChannel channel, System.String message, System.Exception exception, System.Collections.Generic.Dictionary`2<System.String, System.Object> data = null, System.String filePath = , System.String memberName = , System.Int32 lineNumber = -1)

Disassembly:
	0x035C3674 MOV X21, X31
	0x035C3678 LDR X1, [X22]
	0x035C367C MOV X0, X19
	0x035C3680 BL 0x1C16E00
	0x035C3684 CBZ X0, 0x35C36E4
	0x035C3688 LDR X8, [X0]
	0x035C368C LDR X1, [X22]
	0x035C3690 MOV X19, X0
	0x035C3694 LDRH W9, [X8 + 0x12E]
	0x035C3698 CBZ X9, 0x35C36BC
	0x035C369C LDR X10, [X8 + 0xB0]
	0x035C36A0 ADD X10, X10, 0x8
	0x035C36A4 LDUR X11, [X10 - 0x8]
	0x035C36A8 CMP X11, X1
	0x035C36AC B.EQ 0x35C36CC
	0x035C36B0 SUBS X9, X9, 0x1
	0x035C36B4 ADD X10, X10, 0x10
	0x035C36B8 B.NE 0x35C36A4
	0x035C36BC MOV X0, X19
	0x035C36C0 MOV W2, W31
	0x035C36C4 BL 0x1C5C788
	0x035C36C8 B 0x35C36D8
	0x035C36CC LDRSW X9, [X10]
	0x035C36D0 ADD X8, X8, X9, 0x4, LSL
	0x035C36D4 ADD X0, X8, 0x138
	0x035C36D8 LDP X8, X1, [X0]
	0x035C36DC MOV X0, X19
	0x035C36E0 BLR X8
	0x035C36E4 CBNZ X21, 0x35C3758
	0x035C36E8 LDP X20, X19, [X31 + 0x50]
	0x035C36EC LDP X22, X21, [X31 + 0x40]
	0x035C36F0 LDP X24, X23, [X31 + 0x30]
	0x035C36F4 LDP X26, X25, [X31 + 0x20]
	0x035C36F8 LDP X28, X27, [X31 + 0x10]
	0x035C36FC LDP X29, X30, [X31], #0x60
	0x035C3700 RET
	0x035C3704 BL 0x1C171E0
	0x035C3708 BL 0x1C16F20
	0x035C370C BL 0x1C16F20
	0x035C3710 BL 0x1C16F20
	0x035C3714 MOV X0, X21
	0x035C3718 BL 0x1C171E0
	0x035C371C BL 0x1C16F20

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+16], X30
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X26, 0xE1E000
	013 Move X27, 0xB31000
	014 Move W8, [X26+406]
	015 Move X27, [X27+1928]
	016 Move W19, W6
	017 Move X20, X5
	018 Move X21, X4
	019 Move X22, X3
	020 Move X23, X2
	021 Move X24, X1
	022 Move W25, W0
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {32}
	027 Move X0, 0xB31000
	028 Move X0, [X0+1928]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X26+406], W8
	032 Move X0, [X27]
	033 Move W8, [X0+224]
	034 Compare W8, 0
	035 JumpIfNotEqual {37}
	036 Call 0x1C17DFC
	037 Move W0, 1
	038 Move W1, W25
	039 Move X2, X24
	040 Move X3, X23
	041 Move X4, X22
	042 Move X5, X21
	043 Move X6, X20
	044 Move W7, W19
	045 Call Log.DoLog, X0, X1, X2, X3, X4, X5, X6, X7
	046 Move X20, [X31+80]
	047 Move X19, [X31+88]
	048 Move X22, [X31+64]
	049 Move X21, [X31+72]
	050 Move X24, [X31+48]
	051 Move X23, [X31+56]
	052 Move X26, [X31+32]
	053 Move X25, [X31+40]
	054 Move X30, [X31+16]
	055 Move X27, [X31+24]
	056 Add X31, X31, 96
	057 Return 

Method: System.Void Generic(AnimalCompany.LogLevel level, System.String message, System.Collections.Generic.Dictionary`2<System.String, System.Object> data = null, System.String filePath = , System.String memberName = , System.Int32 lineNumber = -1)

Disassembly:
	0x035C3720 BL 0x1C16F20
	0x035C3724 MOV X0, X21
	0x035C3728 BL 0x1C171E0
	0x035C372C BL 0x1C16F20
	0x035C3730 BL 0x1C16F20
	0x035C3734 MOV X0, X21
	0x035C3738 BL 0x1C171E0
	0x035C373C BL 0x1C16F20
	0x035C3740 BL 0x1C16F20
	0x035C3744 MOV X0, X21
	0x035C3748 BL 0x1C171E0
	0x035C374C BL 0x1C16F20
	0x035C3750 BL 0x1C16F20
	0x035C3754 BL 0x1C16F20
	0x035C3758 MOV X0, X21
	0x035C375C BL 0x1C16F18
	0x035C3760 BL 0x1C16F20
	0x035C3764 BL 0x1C16F20
	0x035C3768 BL 0x1C16F20
	0x035C376C B 0x35C3808
	0x035C3770 B 0x35C3808
	0x035C3774 B 0x35C3808
	0x035C3778 B 0x35C3808
	0x035C377C B 0x35C3808
	0x035C3780 B 0x35C3808
	0x035C3784 B 0x35C3808
	0x035C3788 B 0x35C3808
	0x035C378C B 0x35C3808
	0x035C3790 B 0x35C3808
	0x035C3794 B 0x35C3808
	0x035C3798 B 0x35C3808
	0x035C379C B 0x35C3808
	0x035C37A0 B 0x35C3808
	0x035C37A4 B 0x35C3808
	0x035C37A8 B 0x35C3808
	0x035C37AC B 0x35C3808
	0x035C37B0 B 0x35C3808
	0x035C37B4 B 0x35C3808
	0x035C37B8 B 0x35C3808
	0x035C37BC B 0x35C3808
	0x035C37C0 B 0x35C3808
	0x035C37C4 B 0x35C3808

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+16], X30
	003 Move [X31+32], X26
	004 Move [X31+40], X25
	005 Move [X31+48], X24
	006 Move [X31+56], X23
	007 Move [X31+64], X22
	008 Move [X31+72], X21
	009 Move [X31+80], X20
	010 Move [X31+88], X19
	011 Move X25, 0xE1E000
	012 Move X26, 0xB31000
	013 Move W8, [X25+407]
	014 Move X26, [X26+1928]
	015 Move W19, W5
	016 Move X20, X4
	017 Move X21, X3
	018 Move X22, X2
	019 Move X23, X1
	020 Move W24, W0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {30}
	025 Move X0, 0xB31000
	026 Move X0, [X0+1928]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X25+407], W8
	030 Move X0, [X26]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {35}
	034 Call 0x1C17DFC
	035 Move W1, 1
	036 Move W0, W24
	037 Move X2, X23
	038 Move X3, X31
	039 Move X4, X22
	040 Move X5, X21
	041 Move X6, X20
	042 Move W7, W19
	043 Call Log.DoLog, X0, X1, X2, X3, X4, X5, X6, X7
	044 Move X20, [X31+80]
	045 Move X19, [X31+88]
	046 Move X22, [X31+64]
	047 Move X21, [X31+72]
	048 Move X24, [X31+48]
	049 Move X23, [X31+56]
	050 Move X26, [X31+32]
	051 Move X25, [X31+40]
	052 Move X30, [X31+16]
	053 Add X31, X31, 96
	054 Return 

Method: System.Void Generic(AnimalCompany.LogLevel level, System.String message, System.Exception exception = null, System.Collections.Generic.Dictionary`2<System.String, System.Object> data = null, System.String filePath = , System.String memberName = , System.Int32 lineNumber = -1)

Disassembly:
	0x035C37C8 B 0x35C3808
	0x035C37CC B 0x35C3808
	0x035C37D0 B 0x35C3808
	0x035C37D4 B 0x35C3808
	0x035C37D8 B 0x35C3808
	0x035C37DC B 0x35C3808
	0x035C37E0 B 0x35C3808
	0x035C37E4 B 0x35C3808
	0x035C37E8 B 0x35C3808
	0x035C37EC B 0x35C3808
	0x035C37F0 B 0x35C3808
	0x035C37F4 B 0x35C3808
	0x035C37F8 B 0x35C3808
	0x035C37FC B 0x35C3808
	0x035C3800 B 0x35C3808
	0x035C3804 B 0x35C3808
	0x035C3808 ADRP X22, 0xB30000
	0x035C380C LDR X22, [X22 + 0xE00]
	0x035C3810 MOV X20, X0
	0x035C3814 CMP W1, 0x1
	0x035C3818 B.NE 0x35C3830
	0x035C381C MOV X0, X20
	0x035C3820 BL 0x3EB1AD0
	0x035C3824 LDR X21, [X0]
	0x035C3828 BL 0x3EB1AE0
	0x035C382C B 0x35C3678
	0x035C3830 MOV X21, X31
	0x035C3834 B 0x35C383C
	0x035C3838 MOV X20, X0
	0x035C383C ADRP X8, 0xB30000
	0x035C3840 LDR X8, [X8 + 0xE00]
	0x035C3844 LDR X1, [X8]
	0x035C3848 MOV X0, X19
	0x035C384C BL 0x1C16E00
	0x035C3850 MOV X19, X0
	0x035C3854 CBZ X0, 0x35C38B8
	0x035C3858 LDR X8, [X19]
	0x035C385C ADRP X10, 0xB30000
	0x035C3860 LDRH W9, [X8 + 0x12E]
	0x035C3864 LDR X10, [X10 + 0xE00]
	0x035C3868 LDR X1, [X10]
	0x035C386C CBZ X9, 0x35C3890
	0x035C3870 LDR X10, [X8 + 0xB0]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+16], X30
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X26, 0xE1E000
	013 Move X27, 0xB31000
	014 Move W8, [X26+408]
	015 Move X27, [X27+1928]
	016 Move W19, W6
	017 Move X20, X5
	018 Move X21, X4
	019 Move X22, X3
	020 Move X23, X2
	021 Move X24, X1
	022 Move W25, W0
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {32}
	027 Move X0, 0xB31000
	028 Move X0, [X0+1928]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X26+408], W8
	032 Move X0, [X27]
	033 Move W8, [X0+224]
	034 Compare W8, 0
	035 JumpIfNotEqual {37}
	036 Call 0x1C17DFC
	037 Move W1, 1
	038 Move W0, W25
	039 Move X2, X24
	040 Move X3, X23
	041 Move X4, X22
	042 Move X5, X21
	043 Move X6, X20
	044 Move W7, W19
	045 Call Log.DoLog, X0, X1, X2, X3, X4, X5, X6, X7
	046 Move X20, [X31+80]
	047 Move X19, [X31+88]
	048 Move X22, [X31+64]
	049 Move X21, [X31+72]
	050 Move X24, [X31+48]
	051 Move X23, [X31+56]
	052 Move X26, [X31+32]
	053 Move X25, [X31+40]
	054 Move X30, [X31+16]
	055 Move X27, [X31+24]
	056 Add X31, X31, 96
	057 Return 

Method: System.Void Generic(AnimalCompany.LogLevel level, AnimalCompany.LogChannel channel, System.String message, System.Exception exception = null, System.Collections.Generic.Dictionary`2<System.String, System.Object> data = null, System.String filePath = , System.String memberName = , System.Int32 lineNumber = -1)

Disassembly:
	0x035C3874 ADD X10, X10, 0x8
	0x035C3878 LDUR X11, [X10 - 0x8]
	0x035C387C CMP X11, X1
	0x035C3880 B.EQ 0x35C38A0
	0x035C3884 SUBS X9, X9, 0x1
	0x035C3888 ADD X10, X10, 0x10
	0x035C388C B.NE 0x35C3878
	0x035C3890 MOV X0, X19
	0x035C3894 MOV W2, W31
	0x035C3898 BL 0x1C5C788
	0x035C389C B 0x35C38AC
	0x035C38A0 LDRSW X9, [X10]
	0x035C38A4 ADD X8, X8, X9, 0x4, LSL
	0x035C38A8 ADD X0, X8, 0x138
	0x035C38AC LDP X8, X1, [X0]
	0x035C38B0 MOV X0, X19
	0x035C38B4 BLR X8
	0x035C38B8 CBNZ X21, 0x35C38C4
	0x035C38BC MOV X0, X20
	0x035C38C0 BL 0x1D2C690
	0x035C38C4 MOV X0, X21
	0x035C38C8 BL 0x1C16F18
	0x035C38CC BL 0x1990590
	0x035C38D0 STR X30, [X31 - 0x30]!
	0x035C38D4 STP X22, X21, [X31 + 0x10]
	0x035C38D8 STP X20, X19, [X31 + 0x20]
	0x035C38DC ADRP X21, 0xE1D000
	0x035C38E0 ADRP X20, 0xB31000
	0x035C38E4 LDRB W8, [X21 + 0x1AA]
	0x035C38E8 LDR X20, [X20 + 0x9F0]
	0x035C38EC MOV X19, X0
	0x035C38F0 TBNZ X8, 0x0, 0x35C398C
	0x035C38F4 ADRP X0, 0xB74000
	0x035C38F8 LDR X0, [X0 + 0xD88]
	0x035C38FC BL 0x1C16CF4
	0x035C3900 ADRP X0, 0xB32000
	0x035C3904 LDR X0, [X0 + 0xC48]
	0x035C3908 BL 0x1C16CF4
	0x035C390C ADRP X0, 0xB31000
	0x035C3910 LDR X0, [X0 + 0x9F0]
	0x035C3914 BL 0x1C16CF4
	0x035C3918 ADRP X0, 0xB31000
	0x035C391C LDR X0, [X0 + 0x460]

ISIL:
	001 Move [X31-96], X30
	002 Move [X31+16], X28
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X27, 0xE1E000
	013 Move X28, 0xB31000
	014 Move W8, [X27+409]
	015 Move X28, [X28+1928]
	016 Move W19, W7
	017 Move X20, X6
	018 Move X21, X5
	019 Move X22, X4
	020 Move X23, X3
	021 Move X24, X2
	022 Move W25, W1
	023 Move W26, W0
	024 Move TEMP, X8
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {33}
	028 Move X0, 0xB31000
	029 Move X0, [X0+1928]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X27+409], W8
	033 Move X0, [X28]
	034 Move W8, [X0+224]
	035 Compare W8, 0
	036 JumpIfNotEqual {38}
	037 Call 0x1C17DFC
	038 Move W0, W26
	039 Move W1, W25
	040 Move X2, X24
	041 Move X3, X23
	042 Move X4, X22
	043 Move X5, X21
	044 Move X6, X20
	045 Move W7, W19
	046 Move X20, [X31+80]
	047 Move X19, [X31+88]
	048 Move X22, [X31+64]
	049 Move X21, [X31+72]
	050 Move X24, [X31+48]
	051 Move X23, [X31+56]
	052 Move X26, [X31+32]
	053 Move X25, [X31+40]
	054 Move X28, [X31+16]
	055 Move X27, [X31+24]
	056 Move X30, [X31+96]
	057 Call Log.DoLog, X0, X1, X2, X3, X4, X5, X6, X7
	058 Return 

Method: System.Void ProcessUncaughtException(System.String message, System.String stackTrace)

Disassembly:
	0x035C3920 BL 0x1C16CF4
	0x035C3924 ADRP X0, 0xB30000
	0x035C3928 LDR X0, [X0 + 0x788]
	0x035C392C BL 0x1C16CF4
	0x035C3930 ADRP X0, 0xB31000
	0x035C3934 LDR X0, [X0 + 0x2C8]
	0x035C3938 BL 0x1C16CF4
	0x035C393C ADRP X0, 0xB74000
	0x035C3940 LDR X0, [X0 + 0xD90]
	0x035C3944 BL 0x1C16CF4
	0x035C3948 ADRP X0, 0xB74000
	0x035C394C LDR X0, [X0 + 0xD98]
	0x035C3950 BL 0x1C16CF4
	0x035C3954 ADRP X0, 0xB74000
	0x035C3958 LDR X0, [X0 + 0xDA0]
	0x035C395C BL 0x1C16CF4
	0x035C3960 ADRP X0, 0xB74000
	0x035C3964 LDR X0, [X0 + 0xDA8]
	0x035C3968 BL 0x1C16CF4
	0x035C396C ADRP X0, 0xB74000
	0x035C3970 LDR X0, [X0 + 0xDB0]
	0x035C3974 BL 0x1C16CF4
	0x035C3978 ADRP X0, 0xB74000
	0x035C397C LDR X0, [X0 + 0xD78]
	0x035C3980 BL 0x1C16CF4
	0x035C3984 MOVZ W8, 0x1
	0x035C3988 STRB W8, [X21 + 0x1AA]
	0x035C398C LDR X0, [X20]
	0x035C3990 ADRP X22, 0xB32000
	0x035C3994 LDR W8, [X0 + 0xE0]
	0x035C3998 LDR X22, [X22 + 0xC48]
	0x035C399C CBNZ W8, 0x35C39A4
	0x035C39A0 BL 0x1C16DFC
	0x035C39A4 ADRP X21, 0xB74000
	0x035C39A8 ADRP X20, 0xB31000
	0x035C39AC LDR X21, [X21 + 0xD90]
	0x035C39B0 LDR X20, [X20 + 0x460]
	0x035C39B4 MOV X0, X31
	0x035C39B8 BL 0x33616A4
	0x035C39BC LDR X8, [X22]
	0x035C39C0 STR X0, [X31 + 0x8]
	0x035C39C4 LDR W9, [X8 + 0xE0]
	0x035C39C8 CBNZ W9, 0x35C39D4
	0x035C39CC MOV X0, X8
	0x035C39D0 BL 0x1C16DFC
	0x035C39D4 MOV X0, X31
	0x035C39D8 BL 0x3338524
	0x035C39DC LDR X1, [X21]
	0x035C39E0 MOV X2, X0
	0x035C39E4 ADD X0, X31, 0x8
	0x035C39E8 MOV X3, X31
	0x035C39EC BL 0x3362380
	0x035C39F0 LDR X8, [X20]
	0x035C39F4 MOV X20, X0
	0x035C39F8 LDR W9, [X8 + 0xE0]
	0x035C39FC CBNZ W9, 0x35C3A08
	0x035C3A00 MOV X0, X8
	0x035C3A04 BL 0x1C16DFC
	0x035C3A08 MOV X0, X20
	0x035C3A0C MOV X1, X31
	0x035C3A10 BL 0x35ACF6C
	0x035C3A14 CBZ X19, 0x35C3B8C
	0x035C3A18 ADRP X9, 0xB74000
	0x035C3A1C LDR X8, [X19]
	0x035C3A20 LDR X9, [X9 + 0xDB0]
	0x035C3A24 ADRP X21, 0xB31000
	0x035C3A28 MOV X2, X0
	0x035C3A2C LDR X3, [X8 + 0x280]
	0x035C3A30 LDR X1, [X9]
	0x035C3A34 LDR X9, [X8 + 0x278]
	0x035C3A38 LDR X21, [X21 + 0x2C8]
	0x035C3A3C MOV X0, X19
	0x035C3A40 BLR X9
	0x035C3A44 LDR X0, [X21]
	0x035C3A48 LDR W8, [X0 + 0xE0]
	0x035C3A4C CBNZ W8, 0x35C3A58
	0x035C3A50 BL 0x1C16DFC
	0x035C3A54 LDR X0, [X21]
	0x035C3A58 LDR X8, [X0 + 0xB8]
	0x035C3A5C LDR X9, [X19]
	0x035C3A60 MOV X0, X19
	0x035C3A64 LDR X20, [X8]
	0x035C3A68 LDP X8, X1, [X9 + 0x168]
	0x035C3A6C BLR X8
	0x035C3A70 CBZ X20, 0x35C3B8C
	0x035C3A74 LDR X8, [X20]
	0x035C3A78 MOV X1, X0
	0x035C3A7C MOV X0, X20
	0x035C3A80 LDR X9, [X8 + 0x268]
	0x035C3A84 LDR X2, [X8 + 0x270]
	0x035C3A88 BLR X9
	0x035C3A8C CBZ X0, 0x35C3B8C
	0x035C3A90 LDR W8, [X0 + 0x18]
	0x035C3A94 MOV X20, X0
	0x035C3A98 CMP W8, 0x100000
	0x035C3A9C B.GT 0x35C3AD8
	0x035C3AA0 LDR X0, [X21]
	0x035C3AA4 LDR W8, [X0 + 0xE0]
	0x035C3AA8 CBNZ W8, 0x35C3AB4
	0x035C3AAC BL 0x1C16DFC
	0x035C3AB0 LDR X0, [X21]
	0x035C3AB4 LDR X8, [X0 + 0xB8]
	0x035C3AB8 LDR X0, [X8 + 0x10]
	0x035C3ABC CBZ X0, 0x35C3B8C
	0x035C3AC0 ADRP X8, 0xB74000
	0x035C3AC4 LDR X8, [X8 + 0xD88]
	0x035C3AC8 MOV X1, X20
	0x035C3ACC LDR X2, [X8]
	0x035C3AD0 BL 0x2992C14
	0x035C3AD4 B 0x35C3B7C
	0x035C3AD8 ADRP X9, 0xB74000
	0x035C3ADC LDR X8, [X19]
	0x035C3AE0 LDR X9, [X9 + 0xD78]
	0x035C3AE4 MOV X0, X19
	0x035C3AE8 LDR X1, [X9]
	0x035C3AEC LDP X9, X2, [X8 + 0x1A8]
	0x035C3AF0 BLR X9
	0x035C3AF4 CBZ X0, 0x35C3B8C
	0x035C3AF8 LDR X8, [X0]
	0x035C3AFC LDP X9, X1, [X8 + 0x168]
	0x035C3B00 BLR X9
	0x035C3B04 CBZ X0, 0x35C3B8C
	0x035C3B08 MOVZ W2, 0x400
	0x035C3B0C MOV W1, W31
	0x035C3B10 MOV X3, X31
	0x035C3B14 BL 0x3228DE4
	0x035C3B18 ADRP X8, 0xB74000
	0x035C3B1C LDR X8, [X8 + 0xDA0]
	0x035C3B20 MOV X1, X0
	0x035C3B24 MOV X2, X31
	0x035C3B28 LDR X8, [X8]
	0x035C3B2C MOV X0, X8
	0x035C3B30 BL 0x321B938
	0x035C3B34 ADRP X8, 0xB30000
	0x035C3B38 LDR X8, [X8 + 0x788]
	0x035C3B3C MOV X19, X0
	0x035C3B40 LDR X8, [X8]
	0x035C3B44 LDR W9, [X8 + 0xE0]
	0x035C3B48 CBNZ W9, 0x35C3B54
	0x035C3B4C MOV X0, X8
	0x035C3B50 BL 0x1C16DFC
	0x035C3B54 ADRP X8, 0xB74000
	0x035C3B58 ADRP X9, 0xB74000
	0x035C3B5C LDR X8, [X8 + 0xDA8]
	0x035C3B60 LDR X9, [X9 + 0xD98]
	0x035C3B64 MOVZ W4, 0x41
	0x035C3B68 MOV X0, X19
	0x035C3B6C LDR X2, [X8]
	0x035C3B70 LDR X3, [X9]
	0x035C3B74 MOV X1, X31
	0x035C3B78 BL 0x35C2344
	0x035C3B7C LDP X20, X19, [X31 + 0x20]
	0x035C3B80 LDP X22, X21, [X31 + 0x10]
	0x035C3B84 LDR X30, [X31], #0x30
	0x035C3B88 RET
	0x035C3B8C BL 0x1C16F20
	0x035C3B90 STR X30, [X31 - 0x50]!
	0x035C3B94 STP X26, X25, [X31 + 0x10]
	0x035C3B98 STP X24, X23, [X31 + 0x20]
	0x035C3B9C STP X22, X21, [X31 + 0x30]
	0x035C3BA0 STP X20, X19, [X31 + 0x40]
	0x035C3BA4 ADRP X25, 0xE1D000
	0x035C3BA8 ADRP X22, 0xB30000
	0x035C3BAC LDRB W8, [X25 + 0x19E]
	0x035C3BB0 LDR X22, [X22 + 0x8F0]
	0x035C3BB4 MOV X21, X4
	0x035C3BB8 MOV X23, X3
	0x035C3BBC MOV X24, X2
	0x035C3BC0 MOV W20, W1
	0x035C3BC4 MOV W19, W0
	0x035C3BC8 TBNZ X8, 0x0, 0x35C3C28
	0x035C3BCC ADRP X0, 0xB30000
	0x035C3BD0 LDR X0, [X0 + 0xA28]
	0x035C3BD4 BL 0x1C16CF4
	0x035C3BD8 ADRP X0, 0xB30000
	0x035C3BDC LDR X0, [X0 + 0x758]
	0x035C3BE0 BL 0x1C16CF4
	0x035C3BE4 ADRP X0, 0xB74000
	0x035C3BE8 LDR X0, [X0 + 0xD40]
	0x035C3BEC BL 0x1C16CF4
	0x035C3BF0 ADRP X0, 0xB30000
	0x035C3BF4 LDR X0, [X0 + 0x788]
	0x035C3BF8 BL 0x1C16CF4
	0x035C3BFC ADRP X0, 0xB30000
	0x035C3C00 LDR X0, [X0 + 0x8F0]
	0x035C3C04 BL 0x1C16CF4
	0x035C3C08 ADRP X0, 0xB74000
	0x035C3C0C LDR X0, [X0 + 0xDB8]
	0x035C3C10 BL 0x1C16CF4
	0x035C3C14 ADRP X0, 0xB74000
	0x035C3C18 LDR X0, [X0 + 0xDC0]
	0x035C3C1C BL 0x1C16CF4
	0x035C3C20 MOVZ W8, 0x1
	0x035C3C24 STRB W8, [X25 + 0x19E]
	0x035C3C28 LDR X0, [X22]
	0x035C3C2C ADRP X25, 0xB30000
	0x035C3C30 LDR X25, [X25 + 0x788]
	0x035C3C34 BL 0x1C16F10
	0x035C3C38 MOV X1, X31
	0x035C3C3C MOV X22, X0
	0x035C3C40 BL 0x3231AC4
	0x035C3C44 CBZ X24, 0x35C3C7C
	0x035C3C48 CBZ X22, 0x35C3E58
	0x035C3C4C MOV X0, X22
	0x035C3C50 MOV X1, X24
	0x035C3C54 MOV X2, X31
	0x035C3C58 BL 0x32333E0
	0x035C3C5C CBZ X23, 0x35C3CAC
	0x035C3C60 MOV X0, X22
	0x035C3C64 MOV X1, X31
	0x035C3C68 BL 0x3233888
	0x035C3C6C MOV X0, X22
	0x035C3C70 MOV X1, X31
	0x035C3C74 BL 0x3233888
	0x035C3C78 B 0x35C3C80
	0x035C3C7C CBZ X23, 0x35C3CAC
	0x035C3C80 LDR X0, [X25]
	0x035C3C84 LDR W8, [X0 + 0xE0]
	0x035C3C88 CBNZ W8, 0x35C3C90
	0x035C3C8C BL 0x1C16DFC
	0x035C3C90 MOV X0, X23
	0x035C3C94 BL 0x35C43E4
	0x035C3C98 CBZ X22, 0x35C3E58
	0x035C3C9C MOV X1, X0
	0x035C3CA0 MOV X0, X22
	0x035C3CA4 MOV X2, X31
	0x035C3CA8 BL 0x3233654
	0x035C3CAC CBZ X21, 0x35C3D10
	0x035C3CB0 CBZ X22, 0x35C3E58
	0x035C3CB4 ADRP X23, 0xB74000
	0x035C3CB8 LDR X23, [X23 + 0xDC0]
	0x035C3CBC MOV X0, X22
	0x035C3CC0 MOV X1, X31
	0x035C3CC4 BL 0x3233888
	0x035C3CC8 MOV X0, X22
	0x035C3CCC MOV X1, X31
	0x035C3CD0 BL 0x3233888
	0x035C3CD4 LDR X1, [X23]
	0x035C3CD8 MOV X0, X22
	0x035C3CDC MOV X2, X31
	0x035C3CE0 BL 0x32333E0
	0x035C3CE4 LDR X0, [X25]
	0x035C3CE8 LDR W8, [X0 + 0xE0]
	0x035C3CEC CBNZ W8, 0x35C3CF4
	0x035C3CF0 BL 0x1C16DFC
	0x035C3CF4 MOV X0, X21
	0x035C3CF8 BL 0x35C468C
	0x035C3CFC MOV X1, X0
	0x035C3D00 MOV X0, X22
	0x035C3D04 MOV X2, X31
	0x035C3D08 BL 0x3233654
	0x035C3D0C B 0x35C3D14
	0x035C3D10 CBZ X22, 0x35C3E58
	0x035C3D14 ADRP X26, 0xB30000
	0x035C3D18 ADRP X24, 0xB74000
	0x035C3D1C ADRP X23, 0xB74000
	0x035C3D20 LDR X26, [X26 + 0x758]
	0x035C3D24 LDR X24, [X24 + 0xD40]
	0x035C3D28 LDR X23, [X23 + 0xDB8]
	0x035C3D2C MOV X0, X22
	0x035C3D30 MOV X1, X31
	0x035C3D34 BL 0x3233888
	0x035C3D38 LDR X8, [X22]
	0x035C3D3C MOV X0, X22
	0x035C3D40 LDP X9, X1, [X8 + 0x168]
	0x035C3D44 BLR X9
	0x035C3D48 LDR X8, [X25]
	0x035C3D4C MOV X21, X0
	0x035C3D50 LDR W9, [X8 + 0xE0]
	0x035C3D54 CBNZ W9, 0x35C3D64
	0x035C3D58 MOV X0, X8
	0x035C3D5C BL 0x1C16DFC
	0x035C3D60 LDR X8, [X25]
	0x035C3D64 LDR X8, [X8 + 0xB8]
	0x035C3D68 LDR X0, [X26]
	0x035C3D6C ADD X1, X31, 0xC
	0x035C3D70 LDR W8, [X8 + 0x20]
	0x035C3D74 STR W8, [X31 + 0xC]
	0x035C3D78 BL 0x1C16E04
	0x035C3D7C MOV X22, X0
	0x035C3D80 LDR X0, [X24]
	0x035C3D84 ADD X1, X31, 0x8
	0x035C3D88 STR W20, [X31 + 0x8]
	0x035C3D8C BL 0x1C16E04
	0x035C3D90 LDR X8, [X23]
	0x035C3D94 MOV X2, X0
	0x035C3D98 MOV X1, X22
	0x035C3D9C MOV X3, X21
	0x035C3DA0 MOV X0, X8
	0x035C3DA4 MOV X4, X31
	0x035C3DA8 BL 0x3227C18
	0x035C3DAC SUB W8, W19, 0x3
	0x035C3DB0 CMP W8, 0x3
	0x035C3DB4 MOV X20, X0
	0x035C3DB8 B.CS 0x35C3DE4
	0x035C3DBC ADRP X8, 0xB30000
	0x035C3DC0 LDR X8, [X8 + 0xA28]
	0x035C3DC4 LDR X0, [X8]
	0x035C3DC8 LDR W8, [X0 + 0xE0]
	0x035C3DCC CBNZ W8, 0x35C3DD4
	0x035C3DD0 BL 0x1C16DFC
	0x035C3DD4 MOV X0, X20
	0x035C3DD8 MOV X1, X31
	0x035C3DDC BL 0x3C06048
	0x035C3DE0 B 0x35C3E40
	0x035C3DE4 CMP W19, 0x1
	0x035C3DE8 B.EQ 0x35C3E1C
	0x035C3DEC CMP W19, 0x2
	0x035C3DF0 B.NE 0x35C3E40
	0x035C3DF4 ADRP X8, 0xB30000
	0x035C3DF8 LDR X8, [X8 + 0xA28]
	0x035C3DFC LDR X0, [X8]
	0x035C3E00 LDR W8, [X0 + 0xE0]
	0x035C3E04 CBNZ W8, 0x35C3E0C
	0x035C3E08 BL 0x1C16DFC
	0x035C3E0C MOV X0, X20
	0x035C3E10 MOV X1, X31
	0x035C3E14 BL 0x3C06A04
	0x035C3E18 B 0x35C3E40
	0x035C3E1C ADRP X8, 0xB30000
	0x035C3E20 LDR X8, [X8 + 0xA28]
	0x035C3E24 LDR X0, [X8]
	0x035C3E28 LDR W8, [X0 + 0xE0]
	0x035C3E2C CBNZ W8, 0x35C3E34
	0x035C3E30 BL 0x1C16DFC
	0x035C3E34 MOV X0, X20
	0x035C3E38 MOV X1, X31
	0x035C3E3C BL 0x3C0649C
	0x035C3E40 LDP X20, X19, [X31 + 0x40]
	0x035C3E44 LDP X22, X21, [X31 + 0x30]
	0x035C3E48 LDP X24, X23, [X31 + 0x20]
	0x035C3E4C LDP X26, X25, [X31 + 0x10]
	0x035C3E50 LDR X30, [X31], #0x50
	0x035C3E54 RET
	0x035C3E58 BL 0x1C16F20
	0x035C3E5C SUB X31, X31, 0xB0
	0x035C3E60 STP X29, X30, [X31 + 0x50]
	0x035C3E64 STP X28, X27, [X31 + 0x60]
	0x035C3E68 STP X26, X25, [X31 + 0x70]
	0x035C3E6C STP X24, X23, [X31 + 0x80]
	0x035C3E70 STP X22, X21, [X31 + 0x90]
	0x035C3E74 STP X20, X19, [X31 + 0xA0]
	0x035C3E78 STR W7, [X31 + 0xC]
	0x035C3E7C STR X6, [X31 + 0x10]
	0x035C3E80 ADRP X21, 0xE1D000
	0x035C3E84 ADRP X19, 0xB58000
	0x035C3E88 ADRP X28, 0xB74000
	0x035C3E8C ADRP X23, 0xB31000
	0x035C3E90 LDRB W8, [X21 + 0x19F]
	0x035C3E94 LDR X19, [X19 + 0xBC0]
	0x035C3E98 LDR X28, [X28 + 0xD48]
	0x035C3E9C LDR X23, [X23 + 0x460]
	0x035C3EA0 MOV X26, X5
	0x035C3EA4 MOV X22, X4
	0x035C3EA8 MOV X20, X3
	0x035C3EAC MOV X25, X2
	0x035C3EB0 MOV W27, W1
	0x035C3EB4 MOV W24, W0
	0x035C3EB8 TBNZ X8, 0x0, 0x35C3FA8
	0x035C3EBC ADRP X0, 0xB30000
	0x035C3EC0 LDR X0, [X0 + 0x758]
	0x035C3EC4 BL 0x1C16CF4
	0x035C3EC8 ADRP X0, 0xB31000
	0x035C3ECC LDR X0, [X0 + 0x460]
	0x035C3ED0 BL 0x1C16CF4
	0x035C3ED4 ADRP X0, 0xB58000
	0x035C3ED8 LDR X0, [X0 + 0xBC0]
	0x035C3EDC BL 0x1C16CF4
	0x035C3EE0 ADRP X0, 0xB74000
	0x035C3EE4 LDR X0, [X0 + 0xD40]
	0x035C3EE8 BL 0x1C16CF4
	0x035C3EEC ADRP X0, 0xB74000
	0x035C3EF0 LDR X0, [X0 + 0xD48]
	0x035C3EF4 BL 0x1C16CF4
	0x035C3EF8 ADRP X0, 0xB30000
	0x035C3EFC LDR X0, [X0 + 0x788]
	0x035C3F00 BL 0x1C16CF4
	0x035C3F04 ADRP X0, 0xB31000
	0x035C3F08 LDR X0, [X0 + 0x2C8]
	0x035C3F0C BL 0x1C16CF4
	0x035C3F10 ADRP X0, 0xB74000
	0x035C3F14 LDR X0, [X0 + 0xDC8]
	0x035C3F18 BL 0x1C16CF4
	0x035C3F1C ADRP X0, 0xB74000
	0x035C3F20 LDR X0, [X0 + 0xD58]
	0x035C3F24 BL 0x1C16CF4
	0x035C3F28 ADRP X0, 0xB74000
	0x035C3F2C LDR X0, [X0 + 0xDD0]
	0x035C3F30 BL 0x1C16CF4
	0x035C3F34 ADRP X0, 0xB74000
	0x035C3F38 LDR X0, [X0 + 0xD60]
	0x035C3F3C BL 0x1C16CF4
	0x035C3F40 ADRP X0, 0xB74000
	0x035C3F44 LDR X0, [X0 + 0xD68]
	0x035C3F48 BL 0x1C16CF4
	0x035C3F4C ADRP X0, 0xB74000
	0x035C3F50 LDR X0, [X0 + 0xDD8]
	0x035C3F54 BL 0x1C16CF4
	0x035C3F58 ADRP X0, 0xB3C000
	0x035C3F5C LDR X0, [X0 + 0x670]
	0x035C3F60 BL 0x1C16CF4
	0x035C3F64 ADRP X0, 0xB61000
	0x035C3F68 LDR X0, [X0 + 0x910]
	0x035C3F6C BL 0x1C16CF4
	0x035C3F70 ADRP X0, 0xB74000
	0x035C3F74 LDR X0, [X0 + 0xD78]
	0x035C3F78 BL 0x1C16CF4
	0x035C3F7C ADRP X0, 0xB74000
	0x035C3F80 LDR X0, [X0 + 0xDE0]
	0x035C3F84 BL 0x1C16CF4
	0x035C3F88 ADRP X0, 0xB74000
	0x035C3F8C LDR X0, [X0 + 0xD80]
	0x035C3F90 BL 0x1C16CF4
	0x035C3F94 ADRP X0, 0xB74000
	0x035C3F98 LDR X0, [X0 + 0xDE8]
	0x035C3F9C BL 0x1C16CF4
	0x035C3FA0 MOVZ W8, 0x1
	0x035C3FA4 STRB W8, [X21 + 0x19F]
	0x035C3FA8 LDR X0, [X19]
	0x035C3FAC BL 0x1C16F10
	0x035C3FB0 MOV X1, X31
	0x035C3FB4 MOV X21, X0
	0x035C3FB8 BL 0x35AE864
	0x035C3FBC LDR X8, [X28]
	0x035C3FC0 MOVN X9, 0x0
	0x035C3FC4 ADD X0, X31, 0x38
	0x035C3FC8 MOV X1, X31
	0x035C3FCC STP X8, X9, [X31 + 0x38]
	0x035C3FD0 STR W24, [X31 + 0x48]
	0x035C3FD4 BL 0x33B162C
	0x035C3FD8 LDR X8, [X23]
	0x035C3FDC MOV X28, X0
	0x035C3FE0 LDR W9, [X8 + 0xE0]
	0x035C3FE4 CBNZ W9, 0x35C3FF0
	0x035C3FE8 MOV X0, X8
	0x035C3FEC BL 0x1C16DFC
	0x035C3FF0 MOV X0, X28
	0x035C3FF4 MOV X1, X31
	0x035C3FF8 BL 0x35ACF6C
	0x035C3FFC CBZ X21, 0x35C43E0
	0x035C4000 ADRP X9, 0xB73000
	0x035C4004 LDR X8, [X21]
	0x035C4008 B 0x3EB169C
	0x035C400C ADRP X29, 0xB73000
	0x035C4010 ADRP X19, 0xB73000
	0x035C4014 LDR X3, [X8 + 0x280]
	0x035C4018 LDR X1, [X9]
	0x035C401C LDR X9, [X8 + 0x278]
	0x035C4020 ADRP X23, 0xB2F000
	0x035C4024 LDR X29, [X29 + 0xD40]
	0x035C4028 LDR X19, [X19 + 0xD68]
	0x035C402C LDR X23, [X23 + 0x788]
	0x035C4030 MOV X2, X0
	0x035C4034 MOV X0, X21
	0x035C4038 BLR X9
	0x035C403C LDR X8, [X29]
	0x035C4040 MOVN X9, 0x0
	0x035C4044 ADD X0, X31, 0x20
	0x035C4048 MOV X1, X31
	0x035C404C STP X8, X9, [X31 + 0x20]
	0x035C4050 STR W27, [X31 + 0x30]
	0x035C4054 BL 0x33B162C
	0x035C4058 MOV X1, X31
	0x035C405C BL 0x35ACF6C
	0x035C4060 LDR X8, [X21]
	0x035C4064 LDR X1, [X19]
	0x035C4068 MOV X2, X0
	0x035C406C MOV X0, X21
	0x035C4070 LDR X9, [X8 + 0x278]
	0x035C4074 LDR X3, [X8 + 0x280]
	0x035C4078 BLR X9
	0x035C407C LDR X0, [X23]
	0x035C4080 LDR W8, [X0 + 0xE0]
	0x035C4084 CBNZ W8, 0x35C4090
	0x035C4088 BL 0x1C16DFC
	0x035C408C LDR X0, [X23]
	0x035C4090 MOV X29, X23
	0x035C4094 LDR X8, [X0 + 0xB8]
	0x035C4098 LDR X8, [X8 + 0x30]
	0x035C409C CBZ X8, 0x35C43E0

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+64], X30
	003 Move [X31+80], X26
	004 Move [X31+88], X25
	005 Move [X31+96], X24
	006 Move [X31+104], X23
	007 Move [X31+112], X22
	008 Move [X31+120], X21
	009 Move [X31+128], X20
	010 Move [X31+136], X19
	011 Move X19, 0xE1E000
	012 Move X25, 0xB31000
	013 Move W8, [X19+410]
	014 Move X25, [X25+1928]
	015 Move X20, X1
	016 Move X21, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {86}
	021 Move X0, 0xB3A000
	022 Move X0, [X0+2264]
	023 Call 0x1C17CF4
	024 Move X0, 0xB75000
	025 Move X0, [X0+3376]
	026 Call 0x1C17CF4
	027 Move X0, 0xB75000
	028 Move X0, [X0+3384]
	029 Call 0x1C17CF4
	030 Move X0, 0xB32000
	031 Move X0, [X0+1120]
	032 Call 0x1C17CF4
	033 Move X0, 0xB59000
	034 Move X0, [X0+3008]
	035 Call 0x1C17CF4
	036 Move X0, 0xB75000
	037 Move X0, [X0+3392]
	038 Call 0x1C17CF4
	039 Move X0, 0xB75000
	040 Move X0, [X0+3400]
	041 Call 0x1C17CF4
	042 Move X0, 0xB31000
	043 Move X0, [X0+1928]
	044 Call 0x1C17CF4
	045 Move X0, 0xB32000
	046 Move X0, [X0+712]
	047 Call 0x1C17CF4
	048 Move X0, 0xB75000
	049 Move X0, [X0+3408]
	050 Call 0x1C17CF4
	051 Move X0, 0xB75000
	052 Move X0, [X0+3416]
	053 Call 0x1C17CF4
	054 Move X0, 0xB75000
	055 Move X0, [X0+3424]
	056 Call 0x1C17CF4
	057 Move X0, 0xB75000
	058 Move X0, [X0+3432]
	059 Call 0x1C17CF4
	060 Move X0, 0xB75000
	061 Move X0, [X0+3440]
	062 Call 0x1C17CF4
	063 Move X0, 0xB3D000
	064 Move X0, [X0+1648]
	065 Call 0x1C17CF4
	066 Move X0, 0xB62000
	067 Move X0, [X0+2320]
	068 Call 0x1C17CF4
	069 Move X0, 0xB3D000
	070 Move X0, [X0+1616]
	071 Call 0x1C17CF4
	072 Move X0, 0xB3C000
	073 Move X0, [X0+944]
	074 Call 0x1C17CF4
	075 Move X0, 0xB75000
	076 Move X0, [X0+3448]
	077 Call 0x1C17CF4
	078 Move X0, 0xB31000
	079 Move X0, [X0+2440]
	080 Call 0x1C17CF4
	081 Move X0, 0xB75000
	082 Move X0, [X0+3456]
	083 Call 0x1C17CF4
	084 Move W8, 1
	085 Move [X19+410], W8
	086 Move X0, [X25]
	087 Move [X31+56], X31
	088 Move W8, [X0+224]
	089 Compare W8, 0
	090 JumpIfNotEqual {92}
	091 Call 0x1C17DFC
	092 Move X19, 0xE1E000
	093 Move W8, [X19+428]
	094 Compare W8, 0
	095 JumpIfNotEqual {101}
	096 Move X0, 0xB31000
	097 Move X0, [X0+1928]
	098 Call 0x1C17CF4
	099 Move W8, 1
	100 Move [X19+428], W8
	101 Move X0, [X25]
	102 Move W8, [X0+224]
	103 Compare W8, 0
	104 JumpIfNotEqual {107}
	105 Call 0x1C17DFC
	106 Move X0, [X25]
	107 Move X8, [X0+184]
	108 Move W9, [X8+16]
	109 Compare W9, 0
	110 JumpIfNotEqual {438}
	111 Move W9, [X0+224]
	112 Compare W9, 0
	113 JumpIfNotEqual {117}
	114 Call 0x1C17DFC
	115 Move X8, [X25]
	116 Move X8, [X8+184]
	117 Move X19, [X8+56]
	118 Move [X31+76], W31
	119 Add X1, X31, 76
	120 Move X0, X19
	121 Move X2, X31
	122 Call Monitor.Enter, X0, X1
	123 Move X0, [X25]
	124 Move W8, [X0+224]
	125 Compare W8, 0
	126 JumpIfNotEqual {129}
	127 Call 0x1C17DFC
	128 Move X0, [X25]
	129 Move X8, [X0+184]
	130 Move X0, [X8+56]
	131 Compare X0, 0
	132 JumpIfEqual {451}
	133 Move X8, 0xB75000
	134 Move X8, [X8+3384]
	135 Move X4, [X8]
	136 Add X3, X31, 56
	137 Move X1, X21
	138 Move X2, X20
	139 Call Dictionary`2<UncaughtException, Object>.TryGetValue, X0, X1, X2
	140 Move TEMP, X0
	141 And TEMP, TEMP, 1
	142 Compare TEMP, 1
	143 JumpIfNotEqual {162}
	144 Move X8, [X31+56]
	145 Compare X8, 0
	146 JumpIfEqual {461}
	147 Move W9, [X8+16]
	148 Add W9, W9, 1
	149 Move [X8+16], W9
	150 Move X0, X31
	151 Call Time.get_time
	152 Move X22, [X31+56]
	153 Compare X22, 0
	154 JumpIfEqual {462}
	155 Move V1, [X22+20]
	156 Subtract S0, S0, S1
	157 Move S1, 30
	158 NotImplemented "Instruction FCMP not yet implemented."
	159 Move X0, X31
	160 Call Time.get_time
	161 Move [X22+20], S0
	162 Move X8, 0xB75000
	163 Move X8, [X8+3408]
	164 Move X0, [X8]
	165 Call 0x1C17F10
	166 Move X22, X0
	167 Move X1, X31
	168 Call Object..ctor, X0
	169 Compare X22, 0
	170 JumpIfEqual {463}
	171 Move W8, 1
	172 Move [X22+16], W8
	173 Move X0, X31
	174 Call Time.get_time
	175 Move [X22+20], S0
	176 Move X0, [X25]
	177 Move [X31+56], X22
	178 Move W8, [X0+224]
	179 Compare W8, 0
	180 JumpIfNotEqual {183}
	181 Call 0x1C17DFC
	182 Move X0, [X25]
	183 Move X8, [X0+184]
	184 Move X0, [X8+56]
	185 Compare X0, 0
	186 JumpIfEqual {464}
	187 Move X8, 0xB75000
	188 Move X3, [X31+56]
	189 Move X8, [X8+3376]
	190 Move X4, [X8]
	191 Move X1, X21
	192 Move X2, X20
	193 Call Dictionary`2<UncaughtException, Object>.Add, X0, X1, X2
	194 Move X26, 0xB59000
	195 Move X26, [X26+3008]
	196 Move X0, [X26]
	197 Call 0x1C17F10
	198 Move X22, X0
	199 Move X1, X31
	200 Call JSONObject..ctor, X0
	201 Move X8, 0xB75000
	202 Move X8, [X8+3400]
	203 Move TEMP, 0
	204 Not TEMP
	205 Move X9, TEMP
	206 Move W10, 1
	207 Move [X31+48], W10
	208 Move X8, [X8]
	209 Move [X31+32], X8
	210 Move [X31+40], X9
	211 Add X0, X31, 32
	212 Move X1, X31
	213 Call Enum.ToString, X0
	214 Move X24, 0xB32000
	215 Move X24, [X24+1120]
	216 Move X23, X0
	217 Move X0, [X24]
	218 Move W8, [X0+224]
	219 Compare W8, 0
	220 JumpIfNotEqual {222}
	221 Call 0x1C17DFC
	222 Move X0, X23
	223 Move X1, X31
	224 Call JSONNode.op_Implicit, X0
	225 Compare X22, 0
	226 JumpIfEqual {452}
	227 Move X9, 0xB75000
	228 Move X8, [X22]
	229 Move X9, [X9+3416]
	230 Move X2, X0
	231 Move X3, [X8+640]
	232 Move X1, [X9]
	233 Move X9, [X8+632]
	234 Move X0, X22
	235 NotImplemented "Instruction BLR not yet implemented."
	236 Move X8, 0xB75000
	237 Move X8, [X8+3392]
	238 Move TEMP, 0
	239 Not TEMP
	240 Move X9, TEMP
	241 Move W10, 2
	242 Move [X31+24], W10
	243 Move X8, [X8]
	244 Move [X31+8], X8
	245 Move [X31+16], X9
	246 Add X0, X31, 8
	247 Move X1, X31
	248 Call Enum.ToString, X0
	249 Move X1, X31
	250 Call JSONNode.op_Implicit, X0
	251 Move X9, 0xB75000
	252 Move X8, [X22]
	253 Move X9, [X9+3432]
	254 Move X2, X0
	255 Move X3, [X8+640]
	256 Move X1, [X9]
	257 Move X9, [X8+632]
	258 Move X0, X22
	259 NotImplemented "Instruction BLR not yet implemented."
	260 Move X8, 0xB75000
	261 Move X9, 0xB31000
	262 Move X0, [X24]
	263 Move X8, [X8+3448]
	264 Move X9, [X9+2440]
	265 NotImplemented "Instruction CMP not yet implemented."
	266 Move W10, [X0+224]
	267 Move X23, [X8]
	268 Move X9, [X9]
	269 NotImplemented "Instruction CSEL not yet implemented."
	270 Compare W10, 0
	271 JumpIfNotEqual {273}
	272 Call 0x1C17DFC
	273 Move X0, X24
	274 Move X1, X31
	275 Call JSONNode.op_Implicit, X0
	276 Move X8, [X22]
	277 Move X2, X0
	278 Move X9, [X8+632]
	279 Move X3, [X8+640]
	280 Move X0, X22
	281 Move X1, X23
	282 NotImplemented "Instruction BLR not yet implemented."
	283 Move X0, [X25]
	284 Move W8, [X0+224]
	285 Compare W8, 0
	286 JumpIfNotEqual {289}
	287 Call 0x1C17DFC
	288 Move X0, [X25]
	289 Move X8, [X0+184]
	290 Move W0, [X8+32]
	291 Move X1, X31
	292 Call JSONNode.op_Implicit, X0
	293 Move X9, 0xB75000
	294 Move X8, [X22]
	295 Move X9, [X9+3424]
	296 Move X2, X0
	297 Move X3, [X8+640]
	298 Move X1, [X9]
	299 Move X9, [X8+632]
	300 Move X0, X22
	301 NotImplemented "Instruction BLR not yet implemented."
	302 Move X0, X31
	303 Call Thread.get_CurrentThread
	304 Move X8, [X25]
	305 Move X8, [X8+184]
	306 Move X8, [X8+40]
	307 NotImplemented "Instruction CMP not yet implemented."
	308 NotImplemented "Instruction CSET not yet implemented."
	309 Move X1, X31
	310 Call JSONNode.op_Implicit, X0
	311 Move X9, 0xB75000
	312 Move X8, [X22]
	313 Move X9, [X9+3456]
	314 Move X2, X0
	315 Move X3, [X8+640]
	316 Move X1, [X9]
	317 Move X9, [X8+632]
	318 Move X0, X22
	319 NotImplemented "Instruction BLR not yet implemented."
	320 Move X8, [X31+56]
	321 Compare X8, 0
	322 JumpIfEqual {453}
	323 Move W0, [X8+16]
	324 Move X1, X31
	325 Call JSONNode.op_Implicit, X0
	326 Move X9, 0xB75000
	327 Move X8, [X22]
	328 Move X9, [X9+3440]
	329 Move X2, X0
	330 Move X3, [X8+640]
	331 Move X1, [X9]
	332 Move X9, [X8+632]
	333 Move X0, X22
	334 NotImplemented "Instruction BLR not yet implemented."
	335 Move X8, 0xB3A000
	336 Move X8, [X8+2264]
	337 Move X0, [X8]
	338 Move W1, 1
	339 Call 0x1C17D6C
	340 Move X1, X0
	341 Compare X1, 0
	342 JumpIfEqual {454}
	343 Move W8, [X1+24]
	344 Compare W8, 0
	345 JumpIfEqual {455}
	346 Move W8, 58
	347 NotImplemented "Instruction STRH not yet implemented."
	348 Compare X21, 0
	349 JumpIfEqual {456}
	350 Move W2, 2
	351 Move W3, 1
	352 Move X0, X21
	353 Move X4, X31
	354 Call String.Split, X0, X1, X2, X3
	355 Move X23, X0
	356 Move X0, [X26]
	357 Call 0x1C17F10
	358 Move X21, X0
	359 Move X1, X31
	360 Call JSONObject..ctor, X0
	361 Compare X23, 0
	362 JumpIfEqual {457}
	363 Move W8, [X23+24]
	364 Compare W8, 0
	365 JumpIfEqual {458}
	366 Move X0, [X23+32]
	367 Move X1, X31
	368 Call JSONNode.op_Implicit, X0
	369 Compare X21, 0
	370 JumpIfEqual {459}
	371 Move X9, 0xB3C000
	372 Move X8, [X21]
	373 Move X9, [X9+944]
	374 Move X2, X0
	375 Move X3, [X8+640]
	376 Move X1, [X9]
	377 Move X9, [X8+632]
	378 Move X0, X21
	379 NotImplemented "Instruction BLR not yet implemented."
	380 Move W8, [X23+24]
	381 NotImplemented "Instruction CMP not yet implemented."
	382 Move X0, [X23+40]
	383 Move X1, X31
	384 Call JSONNode.op_Implicit, X0
	385 Move X9, 0xB3D000
	386 Move X8, [X21]
	387 Move X9, [X9+1616]
	388 Move X2, X0
	389 Move X3, [X8+640]
	390 Move X1, [X9]
	391 Move X9, [X8+632]
	392 Move X0, X21
	393 NotImplemented "Instruction BLR not yet implemented."
	394 Move X0, X20
	395 Move X1, X31
	396 Call JSONNode.op_Implicit, X0
	397 Move X9, 0xB3D000
	398 Move X8, [X21]
	399 Move X9, [X9+1648]
	400 Move X2, X0
	401 Move X3, [X8+640]
	402 Move X1, [X9]
	403 Move X9, [X8+632]
	404 Move X0, X21
	405 NotImplemented "Instruction BLR not yet implemented."
	406 Move X9, 0xB62000
	407 Move X8, [X22]
	408 Move X9, [X9+2320]
	409 Move X3, [X8+640]
	410 Move X1, [X9]
	411 Move X9, [X8+632]
	412 Move X0, X22
	413 Move X2, X21
	414 NotImplemented "Instruction BLR not yet implemented."
	415 Move X8, [X25]
	416 Move X8, [X8+184]
	417 Move X1, [X8+24]
	418 Move X0, X22
	419 Call Log.AddFields, X0, X1
	420 Move X8, 0xB32000
	421 Move X8, [X8+712]
	422 Move X0, [X8]
	423 Move W8, [X0+224]
	424 Compare W8, 0
	425 JumpIfNotEqual {427}
	426 Call 0x1C17DFC
	427 Move X0, X22
	428 Call Loggly.QueueLog, X0
	429 Move X21, X31
	430 Move W8, [X31+76]
	431 Compare W8, 0
	432 JumpIfEqual {436}
	433 Move X0, X19
	434 Move X1, X31
	435 Call Monitor.Exit, X0
	436 Compare X21, 0
	437 JumpIfNotEqual {449}
	438 Move X20, [X31+128]
	439 Move X19, [X31+136]
	440 Move X22, [X31+112]
	441 Move X21, [X31+120]
	442 Move X24, [X31+96]
	443 Move X23, [X31+104]
	444 Move X26, [X31+80]
	445 Move X25, [X31+88]
	446 Move X30, [X31+64]
	447 Add X31, X31, 144
	448 Return 
	449 Move X0, X21
	450 Call 0x1C17F18
	451 Call 0x1C17F20
	452 Call 0x1C17F20
	453 Call 0x1C17F20
	454 Call 0x1C17F20
	455 Call 0x1C17F28
	456 Call 0x1C17F20
	457 Call 0x1C17F20
	458 Call 0x1C17F28
	459 Call 0x1C17F20
	460 Call 0x1C17F28
	461 Call 0x1C17F20
	462 Call 0x1C17F20
	463 Call 0x1C17F20
	464 Call 0x1C17F20
	465 Move X20, X0
	466 NotImplemented "Instruction CMP not yet implemented."
	467 Move X0, X20
	468 Call 0x3EB2AD0
	469 Move X21, [X0]
	470 Call 0x3EB2AE0
	471 Move X21, X31
	472 Move X20, X0
	473 Move W8, [X31+76]
	474 Compare W8, 0
	475 JumpIfEqual {479}
	476 Move X0, X19
	477 Move X1, X31
	478 Call Monitor.Exit, X0
	479 Compare X21, 0
	480 JumpIfNotEqual {483}
	481 Move X0, X20
	482 Call 0x1D2D690
	483 Move X0, X21
	484 Call 0x1C17F18
	485 Call 0x1991590

Method: System.Boolean LocalLogEnabled(AnimalCompany.LogLevel level, AnimalCompany.LogChannel channel)

Disassembly:
	0x035C2B0C MOV X2, X20
	0x035C2B10 BL 0x2B25968
	0x035C2B14 TBZ X0, 0x0, 0x35C2B60
	0x035C2B18 LDR X8, [X31 + 0x38]
	0x035C2B1C CBZ X8, 0x35C2FA4
	0x035C2B20 LDR W9, [X8 + 0x10]
	0x035C2B24 ADD W9, W9, 0x1
	0x035C2B28 STR W9, [X8 + 0x10]
	0x035C2B2C MOV X0, X31
	0x035C2B30 BL 0x3C3C6C4
	0x035C2B34 LDR X22, [X31 + 0x38]
	0x035C2B38 CBZ X22, 0x35C2FA8
	0x035C2B3C LDR V1, [X22 + 0x14]
	0x035C2B40 FSUB S0, S0, S1
	0x035C2B44 FMOV S1, 30
	0x035C2B48 FCMP S0, S1
	0x035C2B4C B.MI 0x35C2F3C
	0x035C2B50 MOV X0, X31
	0x035C2B54 BL 0x3C3C6C4
	0x035C2B58 STR S0, [X22 + 0x14]
	0x035C2B5C B 0x35C2BD4
	0x035C2B60 ADRP X8, 0xB75000
	0x035C2B64 LDR X8, [X8 + 0xD50]
	0x035C2B68 LDR X0, [X8]
	0x035C2B6C BL 0x1C16F10
	0x035C2B70 MOV X22, X0
	0x035C2B74 MOV X1, X31
	0x035C2B78 BL 0x33BDD8C
	0x035C2B7C CBZ X22, 0x35C2FAC
	0x035C2B80 MOVZ W8, 0x1
	0x035C2B84 STR W8, [X22 + 0x10]
	0x035C2B88 MOV X0, X31
	0x035C2B8C BL 0x3C3C6C4
	0x035C2B90 STR S0, [X22 + 0x14]
	0x035C2B94 LDR X0, [X25]
	0x035C2B98 STR X22, [X31 + 0x38]
	0x035C2B9C LDR W8, [X0 + 0xE0]
	0x035C2BA0 CBNZ W8, 0x35C2BAC
	0x035C2BA4 BL 0x1C16DFC
	0x035C2BA8 LDR X0, [X25]
	0x035C2BAC LDR X8, [X0 + 0xB8]
	0x035C2BB0 LDR X0, [X8 + 0x38]
	0x035C2BB4 CBZ X0, 0x35C2FB0
	0x035C2BB8 ADRP X8, 0xB75000
	0x035C2BBC LDR X3, [X31 + 0x38]
	0x035C2BC0 LDR X8, [X8 + 0xD30]
	0x035C2BC4 LDR X4, [X8]
	0x035C2BC8 MOV X1, X21
	0x035C2BCC MOV X2, X20
	0x035C2BD0 BL 0x2B23F08
	0x035C2BD4 ADRP X26, 0xB59000
	0x035C2BD8 LDR X26, [X26 + 0xBC0]
	0x035C2BDC LDR X0, [X26]
	0x035C2BE0 BL 0x1C16F10
	0x035C2BE4 MOV X22, X0
	0x035C2BE8 MOV X1, X31
	0x035C2BEC BL 0x35AE864
	0x035C2BF0 ADRP X8, 0xB75000
	0x035C2BF4 LDR X8, [X8 + 0xD48]
	0x035C2BF8 MOVN X9, 0x0
	0x035C2BFC MOVZ W10, 0x1
	0x035C2C00 STR W10, [X31 + 0x30]
	0x035C2C04 LDR X8, [X8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xE1F000
	007 Move W8, [X21+411]
	008 Move W20, W1
	009 Move W19, W0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xB32000
	015 Move X0, [X0+1928]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+411], W8
	019 Compare W19, 0
	020 JumpIfEqual {69}
	021 Move X21, 0xB32000
	022 Move X21, [X21+1928]
	023 Move X0, [X21]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Move X22, 0xE1F000
	029 Move W8, [X22+429]
	030 Compare W8, 0
	031 JumpIfNotEqual {37}
	032 Move X0, 0xB32000
	033 Move X0, [X0+1928]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X22+429], W8
	037 Move X0, [X21]
	038 Move W8, [X0+224]
	039 Compare W8, 0
	040 JumpIfNotEqual {43}
	041 Call 0x1C17DFC
	042 Move X0, [X21]
	043 Move X8, [X0+184]
	044 Move W8, [X8+4]
	045 NotImplemented "Instruction BICS not yet implemented."
	046 Move W8, [X0+224]
	047 Compare W8, 0
	048 JumpIfNotEqual {50}
	049 Call 0x1C17DFC
	050 Move X20, 0xE1F000
	051 Move W8, [X20+430]
	052 Compare W8, 0
	053 JumpIfNotEqual {59}
	054 Move X0, 0xB32000
	055 Move X0, [X0+1928]
	056 Call 0x1C17CF4
	057 Move W8, 1
	058 Move [X20+430], W8
	059 Move X0, [X21]
	060 Move W8, [X0+224]
	061 Compare W8, 0
	062 JumpIfNotEqual {65}
	063 Call 0x1C17DFC
	064 Move X0, [X21]
	065 Move X8, [X0+184]
	066 Move W8, [X8]
	067 NotImplemented "Instruction CMP not yet implemented."
	068 NotImplemented "Instruction CSET not yet implemented."
	069 Move W0, W31
	070 Move X20, [X31+32]
	071 Move X19, [X31+40]
	072 Move X22, [X31+16]
	073 Move X21, [X31+24]
	074 Move X30, [X31+48]
	075 Return X0

Method: System.Boolean RemoteLogEnabled(AnimalCompany.LogLevel level, AnimalCompany.LogChannel channel)

Disassembly:
	0x035C2C08 STP X8, X9, [X31 + 0x20]
	0x035C2C0C ADD X0, X31, 0x20
	0x035C2C10 MOV X1, X31
	0x035C2C14 BL 0x33B162C
	0x035C2C18 ADRP X24, 0xB32000
	0x035C2C1C LDR X24, [X24 + 0x460]
	0x035C2C20 MOV X23, X0
	0x035C2C24 LDR X0, [X24]
	0x035C2C28 LDR W8, [X0 + 0xE0]
	0x035C2C2C CBNZ W8, 0x35C2C34
	0x035C2C30 BL 0x1C16DFC
	0x035C2C34 MOV X0, X23
	0x035C2C38 MOV X1, X31
	0x035C2C3C BL 0x35ACF6C
	0x035C2C40 CBZ X22, 0x35C2F80
	0x035C2C44 ADRP X9, 0xB75000
	0x035C2C48 LDR X8, [X22]
	0x035C2C4C LDR X9, [X9 + 0xD58]
	0x035C2C50 MOV X2, X0
	0x035C2C54 LDR X3, [X8 + 0x280]
	0x035C2C58 LDR X1, [X9]
	0x035C2C5C LDR X9, [X8 + 0x278]
	0x035C2C60 MOV X0, X22
	0x035C2C64 BLR X9
	0x035C2C68 ADRP X8, 0xB75000
	0x035C2C6C LDR X8, [X8 + 0xD40]
	0x035C2C70 MOVN X9, 0x0
	0x035C2C74 MOVZ W10, 0x2
	0x035C2C78 STR W10, [X31 + 0x18]
	0x035C2C7C LDR X8, [X8]
	0x035C2C80 STP X8, X9, [X31 + 0x8]
	0x035C2C84 ADD X0, X31, 0x8
	0x035C2C88 MOV X1, X31
	0x035C2C8C BL 0x33B162C
	0x035C2C90 MOV X1, X31
	0x035C2C94 BL 0x35ACF6C
	0x035C2C98 ADRP X9, 0xB75000
	0x035C2C9C LDR X8, [X22]
	0x035C2CA0 LDR X9, [X9 + 0xD68]
	0x035C2CA4 MOV X2, X0
	0x035C2CA8 LDR X3, [X8 + 0x280]
	0x035C2CAC LDR X1, [X9]
	0x035C2CB0 LDR X9, [X8 + 0x278]
	0x035C2CB4 MOV X0, X22
	0x035C2CB8 BLR X9
	0x035C2CBC ADRP X8, 0xB75000
	0x035C2CC0 ADRP X9, 0xB31000
	0x035C2CC4 LDR X0, [X24]
	0x035C2CC8 LDR X8, [X8 + 0xD78]
	0x035C2CCC LDR X9, [X9 + 0x988]
	0x035C2CD0 CMP X21, 0x0
	0x035C2CD4 LDR W10, [X0 + 0xE0]
	0x035C2CD8 LDR X23, [X8]
	0x035C2CDC LDR X9, [X9]
	0x035C2CE0 CSEL X24, X9, X21, EQ
	0x035C2CE4 CBNZ W10, 0x35C2CEC
	0x035C2CE8 BL 0x1C16DFC
	0x035C2CEC MOV X0, X24
	0x035C2CF0 MOV X1, X31
	0x035C2CF4 BL 0x35ACF6C
	0x035C2CF8 LDR X8, [X22]
	0x035C2CFC MOV X2, X0
	0x035C2D00 LDR X9, [X8 + 0x278]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xE1F000
	007 Move W8, [X21+412]
	008 Move W20, W1
	009 Move W19, W0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xB32000
	015 Move X0, [X0+1928]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+412], W8
	019 Compare W19, 0
	020 JumpIfEqual {69}
	021 Move X21, 0xB32000
	022 Move X21, [X21+1928]
	023 Move X0, [X21]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Move X22, 0xE1F000
	029 Move W8, [X22+431]
	030 Compare W8, 0
	031 JumpIfNotEqual {37}
	032 Move X0, 0xB32000
	033 Move X0, [X0+1928]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X22+431], W8
	037 Move X0, [X21]
	038 Move W8, [X0+224]
	039 Compare W8, 0
	040 JumpIfNotEqual {43}
	041 Call 0x1C17DFC
	042 Move X0, [X21]
	043 Move X8, [X0+184]
	044 Move W8, [X8+12]
	045 NotImplemented "Instruction BICS not yet implemented."
	046 Move W8, [X0+224]
	047 Compare W8, 0
	048 JumpIfNotEqual {50}
	049 Call 0x1C17DFC
	050 Move X20, 0xE1F000
	051 Move W8, [X20+432]
	052 Compare W8, 0
	053 JumpIfNotEqual {59}
	054 Move X0, 0xB32000
	055 Move X0, [X0+1928]
	056 Call 0x1C17CF4
	057 Move W8, 1
	058 Move [X20+432], W8
	059 Move X0, [X21]
	060 Move W8, [X0+224]
	061 Compare W8, 0
	062 JumpIfNotEqual {65}
	063 Call 0x1C17DFC
	064 Move X0, [X21]
	065 Move X8, [X0+184]
	066 Move W8, [X8+8]
	067 NotImplemented "Instruction CMP not yet implemented."
	068 NotImplemented "Instruction CSET not yet implemented."
	069 Move W0, W31
	070 Move X20, [X31+32]
	071 Move X19, [X31+40]
	072 Move X22, [X31+16]
	073 Move X21, [X31+24]
	074 Move X30, [X31+48]
	075 Return X0

Method: System.Void DoLog(AnimalCompany.LogLevel level, AnimalCompany.LogChannel channel, System.String message, System.Exception exception, System.Collections.Generic.Dictionary`2<System.String, System.Object> data, System.String filePath, System.String memberName, System.Int32 lineNumber)

Disassembly:
	0x035C2DA0 BLR X9
	0x035C2DA4 LDR X8, [X31 + 0x38]
	0x035C2DA8 CBZ X8, 0x35C2F84
	0x035C2DAC LDR W0, [X8 + 0x10]
	0x035C2DB0 MOV X1, X31
	0x035C2DB4 BL 0x35AD530
	0x035C2DB8 ADRP X9, 0xB75000
	0x035C2DBC LDR X8, [X22]
	0x035C2DC0 LDR X9, [X9 + 0xD70]
	0x035C2DC4 MOV X2, X0
	0x035C2DC8 LDR X3, [X8 + 0x280]
	0x035C2DCC LDR X1, [X9]
	0x035C2DD0 LDR X9, [X8 + 0x278]
	0x035C2DD4 MOV X0, X22
	0x035C2DD8 BLR X9
	0x035C2DDC ADRP X8, 0xB3A000
	0x035C2DE0 LDR X8, [X8 + 0x8D8]
	0x035C2DE4 LDR X0, [X8]
	0x035C2DE8 MOVZ W1, 0x1
	0x035C2DEC BL 0x1C16D6C
	0x035C2DF0 MOV X1, X0
	0x035C2DF4 CBZ X1, 0x35C2F88
	0x035C2DF8 LDR W8, [X1 + 0x18]
	0x035C2DFC CBZ W8, 0x35C2F8C
	0x035C2E00 MOVZ W8, 0x3A
	0x035C2E04 STRH W8, [X1 + 0x20]
	0x035C2E08 CBZ X21, 0x35C2F90
	0x035C2E0C MOVZ W2, 0x2
	0x035C2E10 MOVZ W3, 0x1
	0x035C2E14 MOV X0, X21
	0x035C2E18 MOV X4, X31
	0x035C2E1C BL 0x3229FCC
	0x035C2E20 MOV X23, X0
	0x035C2E24 LDR X0, [X26]
	0x035C2E28 BL 0x1C16F10
	0x035C2E2C MOV X21, X0
	0x035C2E30 MOV X1, X31
	0x035C2E34 BL 0x35AE864
	0x035C2E38 CBZ X23, 0x35C2F94
	0x035C2E3C LDR W8, [X23 + 0x18]
	0x035C2E40 CBZ W8, 0x35C2F98
	0x035C2E44 LDR X0, [X23 + 0x20]
	0x035C2E48 MOV X1, X31
	0x035C2E4C BL 0x35ACF6C
	0x035C2E50 CBZ X21, 0x35C2F9C
	0x035C2E54 ADRP X9, 0xB3C000
	0x035C2E58 LDR X8, [X21]
	0x035C2E5C LDR X9, [X9 + 0x3B0]
	0x035C2E60 MOV X2, X0
	0x035C2E64 LDR X3, [X8 + 0x280]
	0x035C2E68 LDR X1, [X9]
	0x035C2E6C LDR X9, [X8 + 0x278]
	0x035C2E70 MOV X0, X21
	0x035C2E74 BLR X9
	0x035C2E78 LDR W8, [X23 + 0x18]
	0x035C2E7C CMP W8, 0x1
	0x035C2E80 B.LS 0x35C2FA0
	0x035C2E84 LDR X0, [X23 + 0x28]
	0x035C2E88 MOV X1, X31
	0x035C2E8C BL 0x35ACF6C
	0x035C2E90 ADRP X9, 0xB3D000
	0x035C2E94 LDR X8, [X21]
	0x035C2E98 LDR X9, [X9 + 0x650]
	0x035C2E9C MOV X2, X0
	0x035C2EA0 LDR X3, [X8 + 0x280]
	0x035C2EA4 LDR X1, [X9]
	0x035C2EA8 LDR X9, [X8 + 0x278]
	0x035C2EAC MOV X0, X21
	0x035C2EB0 BLR X9
	0x035C2EB4 MOV X0, X20
	0x035C2EB8 MOV X1, X31
	0x035C2EBC BL 0x35ACF6C
	0x035C2EC0 ADRP X9, 0xB3D000
	0x035C2EC4 LDR X8, [X21]
	0x035C2EC8 LDR X9, [X9 + 0x670]
	0x035C2ECC MOV X2, X0

ISIL:
	001 Move [X31-96], X30
	002 Move [X31+16], X28
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X28, 0xE1F000
	013 Move X27, 0xB32000
	014 Move W8, [X28+413]
	015 Move X27, [X27+1928]
	016 Move W19, W7
	017 Move X20, X6
	018 Move X21, X5
	019 Move X22, X4
	020 Move X23, X3
	021 Move X24, X2
	022 Move W25, W1
	023 Move W26, W0
	024 Move TEMP, X8
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {33}
	028 Move X0, 0xB32000
	029 Move X0, [X0+1928]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X28+413], W8
	033 Move X0, [X27]
	034 Move W8, [X0+224]
	035 Compare W8, 0
	036 JumpIfNotEqual {38}
	037 Call 0x1C17DFC
	038 Move W0, W26
	039 Move W1, W25
	040 Call Log.LocalLogEnabled, X0, X1
	041 Move TEMP, X0
	042 And TEMP, TEMP, 1
	043 Compare TEMP, 1
	044 JumpIfNotEqual {56}
	045 Move X0, [X27]
	046 Move W8, [X0+224]
	047 Compare W8, 0
	048 JumpIfNotEqual {50}
	049 Call 0x1C17DFC
	050 Move W0, W26
	051 Move W1, W25
	052 Move X2, X24
	053 Move X3, X23
	054 Move X4, X22
	055 Call Log.LogLocal, X0, X1, X2, X3, X4
	056 Move X0, [X27]
	057 Move W8, [X0+224]
	058 Compare W8, 0
	059 JumpIfNotEqual {61}
	060 Call 0x1C17DFC
	061 Move W0, W26
	062 Move W1, W25
	063 Call Log.RemoteLogEnabled, X0, X1
	064 Move TEMP, X0
	065 And TEMP, TEMP, 1
	066 Compare TEMP, 1
	067 JumpIfNotEqual {94}
	068 Move X0, [X27]
	069 Move W8, [X0+224]
	070 Compare W8, 0
	071 JumpIfNotEqual {73}
	072 Call 0x1C17DFC
	073 Move W0, W26
	074 Move W1, W25
	075 Move X2, X24
	076 Move X3, X23
	077 Move X4, X22
	078 Move X5, X21
	079 Move X6, X20
	080 Move W7, W19
	081 Move X20, [X31+80]
	082 Move X19, [X31+88]
	083 Move X22, [X31+64]
	084 Move X21, [X31+72]
	085 Move X24, [X31+48]
	086 Move X23, [X31+56]
	087 Move X26, [X31+32]
	088 Move X25, [X31+40]
	089 Move X28, [X31+16]
	090 Move X27, [X31+24]
	091 Move X30, [X31+96]
	092 Call Log.LogRemote, X0, X1, X2, X3, X4, X5, X6, X7
	093 Return 
	094 Move X20, [X31+80]
	095 Move X19, [X31+88]
	096 Move X22, [X31+64]
	097 Move X21, [X31+72]
	098 Move X24, [X31+48]
	099 Move X23, [X31+56]
	100 Move X26, [X31+32]
	101 Move X25, [X31+40]
	102 Move X28, [X31+16]
	103 Move X27, [X31+24]
	104 Move X30, [X31+96]
	105 Return 

Method: System.Void LogLocal(AnimalCompany.LogLevel level, AnimalCompany.LogChannel channel, System.String message, System.Exception exception, System.Collections.Generic.Dictionary`2<System.String, System.Object> data)

Disassembly:
	0x035C4B90 MOV X2, X0
	0x035C4B94 MOV X0, X20
	0x035C4B98 LDR X9, [X8 + 0x278]
	0x035C4B9C LDR X3, [X8 + 0x280]
	0x035C4BA0 BLR X9
	0x035C4BA4 LDR X8, [X19]
	0x035C4BA8 MOV X0, X19
	0x035C4BAC LDP X9, X1, [X8 + 0x1B8]
	0x035C4BB0 BLR X9
	0x035C4BB4 CBZ X0, 0x35C4BE8
	0x035C4BB8 LDR X8, [X19]
	0x035C4BBC MOV X0, X19
	0x035C4BC0 LDP X9, X1, [X8 + 0x1B8]
	0x035C4BC4 BLR X9
	0x035C4BC8 LDR X8, [X22]
	0x035C4BCC MOV X21, X0
	0x035C4BD0 LDR W9, [X8 + 0xE0]
	0x035C4BD4 CBNZ W9, 0x35C4BE0
	0x035C4BD8 MOV X0, X8
	0x035C4BDC BL 0x1C16DFC
	0x035C4BE0 MOV X0, X21
	0x035C4BE4 B 0x35C4C04
	0x035C4BE8 LDR X0, [X22]
	0x035C4BEC LDR W8, [X0 + 0xE0]
	0x035C4BF0 CBNZ W8, 0x35C4BF8
	0x035C4BF4 BL 0x1C16DFC
	0x035C4BF8 ADRP X8, 0xB2F000
	0x035C4BFC LDR X8, [X8 + 0x830]
	0x035C4C00 LDR X0, [X8]
	0x035C4C04 MOV X1, X31
	0x035C4C08 BL 0x35ACF6C
	0x035C4C0C LDR X8, [X20]
	0x035C4C10 LDR X1, [X24]
	0x035C4C14 MOV X2, X0
	0x035C4C18 MOV X0, X20
	0x035C4C1C LDR X9, [X8 + 0x278]
	0x035C4C20 LDR X3, [X8 + 0x280]
	0x035C4C24 BLR X9
	0x035C4C28 LDR X8, [X19]
	0x035C4C2C MOV X0, X19
	0x035C4C30 LDP X9, X1, [X8 + 0x198]
	0x035C4C34 BLR X9
	0x035C4C38 LDR X8, [X23]
	0x035C4C3C MOV X21, X0
	0x035C4C40 LDR W9, [X8 + 0xE0]
	0x035C4C44 CBNZ W9, 0x35C4C50
	0x035C4C48 MOV X0, X8
	0x035C4C4C BL 0x1C16DFC
	0x035C4C50 MOV X0, X21
	0x035C4C54 BL 0x35C468C
	0x035C4C58 CBZ X0, 0x35C4D0C
	0x035C4C5C LDR X8, [X0]
	0x035C4C60 ADRP X24, 0xB5B000
	0x035C4C64 LDP X9, X1, [X8 + 0x168]
	0x035C4C68 LDR X24, [X24 + 0x128]
	0x035C4C6C BLR X9
	0x035C4C70 LDR X8, [X22]
	0x035C4C74 MOV X21, X0
	0x035C4C78 LDR W9, [X8 + 0xE0]
	0x035C4C7C CBNZ W9, 0x35C4C88
	0x035C4C80 MOV X0, X8
	0x035C4C84 BL 0x1C16DFC
	0x035C4C88 MOV X0, X21
	0x035C4C8C MOV X1, X31
	0x035C4C90 BL 0x35ACF6C
	0x035C4C94 LDR X8, [X20]
	0x035C4C98 LDR X1, [X24]
	0x035C4C9C MOV X2, X0
	0x035C4CA0 MOV X0, X20
	0x035C4CA4 LDR X9, [X8 + 0x278]
	0x035C4CA8 LDR X3, [X8 + 0x280]
	0x035C4CAC BLR X9
	0x035C4CB0 LDR X19, [X19 + 0x28]
	0x035C4CB4 CBZ X19, 0x35C4CF4
	0x035C4CB8 LDR X0, [X23]
	0x035C4CBC ADRP X21, 0xB67000
	0x035C4CC0 LDR W8, [X0 + 0xE0]
	0x035C4CC4 LDR X21, [X21 + 0xFC8]
	0x035C4CC8 CBNZ W8, 0x35C4CD0
	0x035C4CCC BL 0x1C16DFC
	0x035C4CD0 MOV X0, X19
	0x035C4CD4 BL 0x35C4A34
	0x035C4CD8 LDR X8, [X20]
	0x035C4CDC LDR X1, [X21]
	0x035C4CE0 MOV X2, X0
	0x035C4CE4 MOV X0, X20
	0x035C4CE8 LDR X9, [X8 + 0x278]
	0x035C4CEC LDR X3, [X8 + 0x280]
	0x035C4CF0 BLR X9
	0x035C4CF4 MOV X0, X20
	0x035C4CF8 LDP X20, X19, [X31 + 0x30]
	0x035C4CFC LDP X22, X21, [X31 + 0x20]
	0x035C4D00 LDP X24, X23, [X31 + 0x10]
	0x035C4D04 LDR X30, [X31], #0x40
	0x035C4D08 RET
	0x035C4D0C BL 0x1C16F20
	0x035C4D10 MOV X1, X31
	0x035C4D14 B 0x3C36C30
	0x035C4D18 STR X30, [X31 - 0x20]!
	0x035C4D1C STP X20, X19, [X31 + 0x10]
	0x035C4D20 ADRP X19, 0xE1C000
	0x035C4D24 ADRP X20, 0xB73000
	0x035C4D28 LDRB W8, [X19 + 0x1A4]
	0x035C4D2C LDR X20, [X20 + 0xCF8]
	0x035C4D30 TBNZ X8, 0x0, 0x35C4D48
	0x035C4D34 ADRP X0, 0xB73000
	0x035C4D38 LDR X0, [X0 + 0xCF8]
	0x035C4D3C BL 0x1C16CF4
	0x035C4D40 MOVZ W8, 0x1
	0x035C4D44 STRB W8, [X19 + 0x1A4]
	0x035C4D48 LDR X0, [X20]
	0x035C4D4C BL 0x1C16F10
	0x035C4D50 MOV X1, X31
	0x035C4D54 MOV X19, X0
	0x035C4D58 BL 0x33BDD8C
	0x035C4D5C LDR X8, [X20]
	0x035C4D60 LDR X8, [X8 + 0xB8]
	0x035C4D64 STR X19, [X8]
	0x035C4D68 LDP X20, X19, [X31 + 0x10]
	0x035C4D6C LDR X30, [X31], #0x20
	0x035C4D70 RET
	0x035C4D74 MOV X1, X31
	0x035C4D78 B 0x33BDD8C
	0x035C4D7C STR X30, [X31 - 0x30]!
	0x035C4D80 STP X22, X21, [X31 + 0x10]
	0x035C4D84 STP X20, X19, [X31 + 0x20]
	0x035C4D88 ADRP X22, 0xE1C000
	0x035C4D8C LDRB W8, [X22 + 0x1A5]
	0x035C4D90 MOV W21, W3
	0x035C4D94 MOV X19, X2
	0x035C4D98 MOV X20, X1
	0x035C4D9C TBNZ X8, 0x0, 0x35C4DB4
	0x035C4DA0 ADRP X0, 0xB2F000
	0x035C4DA4 LDR X0, [X0 + 0x788]
	0x035C4DA8 BL 0x1C16CF4
	0x035C4DAC MOVZ W8, 0x1
	0x035C4DB0 STRB W8, [X22 + 0x1A5]
	0x035C4DB4 CMP W21, 0x4
	0x035C4DB8 B.NE 0x35C4DEC
	0x035C4DBC ADRP X8, 0xB2F000
	0x035C4DC0 LDR X8, [X8 + 0x788]
	0x035C4DC4 LDR X0, [X8]
	0x035C4DC8 LDR W8, [X0 + 0xE0]
	0x035C4DCC CBNZ W8, 0x35C4DD4
	0x035C4DD0 BL 0x1C16DFC
	0x035C4DD4 MOV X0, X20
	0x035C4DD8 MOV X1, X19
	0x035C4DDC LDP X20, X19, [X31 + 0x20]
	0x035C4DE0 LDP X22, X21, [X31 + 0x10]
	0x035C4DE4 LDR X30, [X31], #0x30
	0x035C4DE8 B 0x35C2920
	0x035C4DEC LDP X20, X19, [X31 + 0x20]
	0x035C4DF0 LDP X22, X21, [X31 + 0x10]
	0x035C4DF4 LDR X30, [X31], #0x30
	0x035C4DF8 RET
	0x035C4DFC STR X30, [X31 - 0x20]!
	0x035C4E00 STP X20, X19, [X31 + 0x10]
	0x035C4E04 ADRP X20, 0xE1C000
	0x035C4E08 ADRP X19, 0xB30000
	0x035C4E0C LDRB W8, [X20 + 0x1A6]
	0x035C4E10 LDR X19, [X19 + 0x2C8]
	0x035C4E14 TBNZ X8, 0x0, 0x35C4E2C
	0x035C4E18 ADRP X0, 0xB30000
	0x035C4E1C LDR X0, [X0 + 0x2C8]
	0x035C4E20 BL 0x1C16CF4
	0x035C4E24 MOVZ W8, 0x1
	0x035C4E28 STRB W8, [X20 + 0x1A6]
	0x035C4E2C LDR X0, [X19]
	0x035C4E30 LDR W8, [X0 + 0xE0]
	0x035C4E34 CBNZ W8, 0x35C4E40
	0x035C4E38 BL 0x1C16DFC
	0x035C4E3C LDR X0, [X19]
	0x035C4E40 LDR X8, [X0 + 0xB8]
	0x035C4E44 LDP X20, X19, [X31 + 0x10]
	0x035C4E48 LDR X0, [X8 + 0x28]
	0x035C4E4C LDR X30, [X31], #0x20
	0x035C4E50 RET
	0x035C4E54 STP X30, X21, [X31 - 0x20]!
	0x035C4E58 STP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X25, 0xE1D000
	011 Move X22, 0xB30000
	012 Move W8, [X25+414]
	013 Move X22, [X22+2288]
	014 Move X21, X4
	015 Move X23, X3
	016 Move X24, X2
	017 Move W20, W1
	018 Move W19, W0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {46}
	023 Move X0, 0xB30000
	024 Move X0, [X0+2600]
	025 Call 0x1C17CF4
	026 Move X0, 0xB30000
	027 Move X0, [X0+1880]
	028 Call 0x1C17CF4
	029 Move X0, 0xB74000
	030 Move X0, [X0+3392]
	031 Call 0x1C17CF4
	032 Move X0, 0xB30000
	033 Move X0, [X0+1928]
	034 Call 0x1C17CF4
	035 Move X0, 0xB30000
	036 Move X0, [X0+2288]
	037 Call 0x1C17CF4
	038 Move X0, 0xB74000
	039 Move X0, [X0+3512]
	040 Call 0x1C17CF4
	041 Move X0, 0xB74000
	042 Move X0, [X0+3520]
	043 Call 0x1C17CF4
	044 Move W8, 1
	045 Move [X25+414], W8
	046 Move X0, [X22]
	047 Move X25, 0xB30000
	048 Move X25, [X25+1928]
	049 Call 0x1C17F10
	050 Move X1, X31
	051 Move X22, X0
	052 Call StringBuilder..ctor, X0
	053 Compare X24, 0
	054 JumpIfEqual {69}
	055 Compare X22, 0
	056 JumpIfEqual {198}
	057 Move X0, X22
	058 Move X1, X24
	059 Move X2, X31
	060 Call StringBuilder.Append, X0, X1
	061 Compare X23, 0
	062 JumpIfEqual {84}
	063 Move X0, X22
	064 Move X1, X31
	065 Call StringBuilder.AppendLine, X0
	066 Move X0, X22
	067 Move X1, X31
	068 Call StringBuilder.AppendLine, X0
	069 Compare X23, 0
	070 JumpIfEqual {84}
	071 Move X0, [X25]
	072 Move W8, [X0+224]
	073 Compare W8, 0
	074 JumpIfNotEqual {76}
	075 Call 0x1C17DFC
	076 Move X0, X23
	077 Call Log.FormatException, X0
	078 Compare X22, 0
	079 JumpIfEqual {198}
	080 Move X1, X0
	081 Move X0, X22
	082 Move X2, X31
	083 Call StringBuilder.Append, X0, X1
	084 Compare X21, 0
	085 JumpIfEqual {111}
	086 Compare X22, 0
	087 JumpIfEqual {198}
	088 Move X23, 0xB74000
	089 Move X23, [X23+3520]
	090 Move X0, X22
	091 Move X1, X31
	092 Call StringBuilder.AppendLine, X0
	093 Move X0, X22
	094 Move X1, X31
	095 Call StringBuilder.AppendLine, X0
	096 Move X1, [X23]
	097 Move X0, X22
	098 Move X2, X31
	099 Call StringBuilder.Append, X0, X1
	100 Move X0, [X25]
	101 Move W8, [X0+224]
	102 Compare W8, 0
	103 JumpIfNotEqual {105}
	104 Call 0x1C17DFC
	105 Move X0, X21
	106 Call Log.FormatDictionary, X0
	107 Move X1, X0
	108 Move X0, X22
	109 Move X2, X31
	110 Call StringBuilder.Append, X0, X1
	111 Compare X22, 0
	112 JumpIfEqual {198}
	113 Move X26, 0xB30000
	114 Move X24, 0xB74000
	115 Move X23, 0xB74000
	116 Move X26, [X26+1880]
	117 Move X24, [X24+3392]
	118 Move X23, [X23+3512]
	119 Move X0, X22
	120 Move X1, X31
	121 Call StringBuilder.AppendLine, X0
	122 Move X8, [X22]
	123 Move X0, X22
	124 Move X9, [X8+360]
	125 Move X1, [X8+368]
	126 NotImplemented "Instruction BLR not yet implemented."
	127 Move X8, [X25]
	128 Move X21, X0
	129 Move W9, [X8+224]
	130 Compare W9, 0
	131 JumpIfNotEqual {135}
	132 Move X0, X8
	133 Call 0x1C17DFC
	134 Move X8, [X25]
	135 Move X8, [X8+184]
	136 Move X0, [X26]
	137 Add X1, X31, 12
	138 Move W8, [X8+32]
	139 Move [X31+12], W8
	140 Call 0x1C17E04
	141 Move X22, X0
	142 Move X0, [X24]
	143 Add X1, X31, 8
	144 Move [X31+8], W20
	145 Call 0x1C17E04
	146 Move X8, [X23]
	147 Move X2, X0
	148 Move X1, X22
	149 Move X3, X21
	150 Move X0, X8
	151 Move X4, X31
	152 Call String.Format, X0, X1, X2, X3
	153 Subtract W8, W19, 3
	154 NotImplemented "Instruction CMP not yet implemented."
	155 Move X20, X0
	156 Move X8, 0xB30000
	157 Move X8, [X8+2600]
	158 Move X0, [X8]
	159 Move W8, [X0+224]
	160 Compare W8, 0
	161 JumpIfNotEqual {163}
	162 Call 0x1C17DFC
	163 Move X0, X20
	164 Move X1, X31
	165 Call Debug.Log, X0
	166 NotImplemented "Instruction CMP not yet implemented."
	167 NotImplemented "Instruction CMP not yet implemented."
	168 Move X8, 0xB30000
	169 Move X8, [X8+2600]
	170 Move X0, [X8]
	171 Move W8, [X0+224]
	172 Compare W8, 0
	173 JumpIfNotEqual {175}
	174 Call 0x1C17DFC
	175 Move X0, X20
	176 Move X1, X31
	177 Call Debug.LogWarning, X0
	178 Move X8, 0xB30000
	179 Move X8, [X8+2600]
	180 Move X0, [X8]
	181 Move W8, [X0+224]
	182 Compare W8, 0
	183 JumpIfNotEqual {185}
	184 Call 0x1C17DFC
	185 Move X0, X20
	186 Move X1, X31
	187 Call Debug.LogError, X0
	188 Move X20, [X31+64]
	189 Move X19, [X31+72]
	190 Move X22, [X31+48]
	191 Move X21, [X31+56]
	192 Move X24, [X31+32]
	193 Move X23, [X31+40]
	194 Move X26, [X31+16]
	195 Move X25, [X31+24]
	196 Move X30, [X31+80]
	197 Return 
	198 Call 0x1C17F20

Method: System.Void LogRemote(AnimalCompany.LogLevel level, AnimalCompany.LogChannel channel, System.String message, System.Exception exception, System.Collections.Generic.Dictionary`2<System.String, System.Object> data, System.String filePath, System.String memberName, System.Int32 lineNumber)

Disassembly:
	0x035C4E5C ADRP X21, 0xE1C000
	0x035C4E60 ADRP X20, 0xB30000
	0x035C4E64 LDRB W8, [X21 + 0x1A7]
	0x035C4E68 LDR X20, [X20 + 0x2C8]
	0x035C4E6C MOV X19, X0
	0x035C4E70 TBNZ X8, 0x0, 0x35C4E88
	0x035C4E74 ADRP X0, 0xB30000
	0x035C4E78 LDR X0, [X0 + 0x2C8]
	0x035C4E7C BL 0x1C16CF4
	0x035C4E80 MOVZ W8, 0x1
	0x035C4E84 STRB W8, [X21 + 0x1A7]
	0x035C4E88 LDR X0, [X20]
	0x035C4E8C LDR W8, [X0 + 0xE0]
	0x035C4E90 CBNZ W8, 0x35C4E9C
	0x035C4E94 BL 0x1C16DFC
	0x035C4E98 LDR X0, [X20]
	0x035C4E9C LDR X8, [X0 + 0xB8]
	0x035C4EA0 STR X19, [X8 + 0x28]
	0x035C4EA4 LDP X20, X19, [X31 + 0x10]
	0x035C4EA8 LDP X30, X21, [X31], #0x20
	0x035C4EAC B 0x35C4EB0
	0x035C4EB0 STP X30, X21, [X31 - 0x20]!
	0x035C4EB4 STP X20, X19, [X31 + 0x10]
	0x035C4EB8 ADRP X20, 0xE1C000
	0x035C4EBC ADRP X19, 0xB30000
	0x035C4EC0 LDRB W8, [X20 + 0x1A9]
	0x035C4EC4 LDR X19, [X19 + 0x2C8]
	0x035C4EC8 TBNZ X8, 0x0, 0x35C4F10
	0x035C4ECC ADRP X0, 0xB30000
	0x035C4ED0 LDR X0, [X0 + 0x2C8]
	0x035C4ED4 BL 0x1C16CF4
	0x035C4ED8 ADRP X0, 0xB73000
	0x035C4EDC LDR X0, [X0 + 0xE08]
	0x035C4EE0 BL 0x1C16CF4
	0x035C4EE4 ADRP X0, 0xB30000
	0x035C4EE8 LDR X0, [X0 + 0xEC8]
	0x035C4EEC BL 0x1C16CF4
	0x035C4EF0 ADRP X0, 0xB73000
	0x035C4EF4 LDR X0, [X0 + 0xE10]
	0x035C4EF8 BL 0x1C16CF4
	0x035C4EFC ADRP X0, 0xB31000
	0x035C4F00 LDR X0, [X0 + 0x3A0]
	0x035C4F04 BL 0x1C16CF4
	0x035C4F08 MOVZ W8, 0x1
	0x035C4F0C STRB W8, [X20 + 0x1A9]
	0x035C4F10 LDR X0, [X19]
	0x035C4F14 ADRP X20, 0xB73000
	0x035C4F18 LDR W8, [X0 + 0xE0]
	0x035C4F1C LDR X20, [X20 + 0xE08]
	0x035C4F20 CBNZ W8, 0x35C4F2C
	0x035C4F24 BL 0x1C16DFC
	0x035C4F28 LDR X0, [X19]
	0x035C4F2C LDR X8, [X0 + 0xB8]
	0x035C4F30 LDR X9, [X20]
	0x035C4F34 MOV X1, X31
	0x035C4F38 LDR X0, [X8 + 0x28]
	0x035C4F3C STR X9, [X8 + 0x30]
	0x035C4F40 BL 0x32277A8
	0x035C4F44 LDR X8, [X19]
	0x035C4F48 TBNZ X0, 0x0, 0x35C4F88
	0x035C4F4C ADRP X20, 0xB31000
	0x035C4F50 LDR W9, [X8 + 0xE0]
	0x035C4F54 LDR X20, [X20 + 0x3A0]
	0x035C4F58 CBNZ W9, 0x35C4F68
	0x035C4F5C MOV X0, X8
	0x035C4F60 BL 0x1C16DFC
	0x035C4F64 LDR X8, [X19]
	0x035C4F68 LDR X8, [X8 + 0xB8]
	0x035C4F6C LDR X1, [X20]
	0x035C4F70 MOV X3, X31
	0x035C4F74 LDP X2, X0, [X8 + 0x28]
	0x035C4F78 BL 0x32274B8
	0x035C4F7C LDR X8, [X19]
	0x035C4F80 LDR X9, [X8 + 0xB8]
	0x035C4F84 STR X0, [X9 + 0x30]
	0x035C4F88 ADRP X21, 0xB73000
	0x035C4F8C ADRP X20, 0xB30000
	0x035C4F90 LDR W9, [X8 + 0xE0]
	0x035C4F94 LDR X21, [X21 + 0xE10]
	0x035C4F98 LDR X20, [X20 + 0xEC8]
	0x035C4F9C CBNZ W9, 0x35C4FAC
	0x035C4FA0 MOV X0, X8
	0x035C4FA4 BL 0x1C16DFC
	0x035C4FA8 LDR X8, [X19]
	0x035C4FAC LDR X8, [X8 + 0xB8]
	0x035C4FB0 LDR X1, [X21]
	0x035C4FB4 MOV X2, X31
	0x035C4FB8 LDR X0, [X8 + 0x30]
	0x035C4FBC BL 0x321B938
	0x035C4FC0 LDR X8, [X19]
	0x035C4FC4 MOV X2, X31
	0x035C4FC8 LDR X8, [X8 + 0xB8]
	0x035C4FCC STR X0, [X8 + 0x30]
	0x035C4FD0 LDR X1, [X20]
	0x035C4FD4 BL 0x321B938
	0x035C4FD8 LDR X8, [X19]
	0x035C4FDC LDP X20, X19, [X31 + 0x10]
	0x035C4FE0 LDR X8, [X8 + 0xB8]
	0x035C4FE4 STR X0, [X8 + 0x30]
	0x035C4FE8 LDP X30, X21, [X31], #0x20
	0x035C4FEC RET
	0x035C4FF0 STP X30, X23, [X31 - 0x30]!
	0x035C4FF4 STP X22, X21, [X31 + 0x10]
	0x035C4FF8 STP X20, X19, [X31 + 0x20]
	0x035C4FFC ADRP X19, 0xE1C000
	0x035C5000 ADRP X20, 0xB2F000
	0x035C5004 LDRB W8, [X19 + 0x1A8]
	0x035C5008 B 0x3EB16A4
	0x035C500C TBNZ X8, 0x0, 0x35C5060
	0x035C5010 ADRP X0, 0xB72000
	0x035C5014 LDR X0, [X0 + 0xE18]
	0x035C5018 BL 0x1C16CF4
	0x035C501C ADRP X0, 0xB72000
	0x035C5020 LDR X0, [X0 + 0xE20]
	0x035C5024 BL 0x1C16CF4
	0x035C5028 ADRP X0, 0xB2F000
	0x035C502C LDR X0, [X0 + 0x2C8]
	0x035C5030 BL 0x1C16CF4
	0x035C5034 ADRP X0, 0xB36000
	0x035C5038 LDR X0, [X0 + 0x558]
	0x035C503C BL 0x1C16CF4
	0x035C5040 ADRP X0, 0xB2F000
	0x035C5044 LDR X0, [X0 + 0xFE0]
	0x035C5048 BL 0x1C16CF4
	0x035C504C ADRP X0, 0xB72000
	0x035C5050 LDR X0, [X0 + 0xE28]
	0x035C5054 BL 0x1C16CF4
	0x035C5058 MOVZ W8, 0x1
	0x035C505C STRB W8, [X19 + 0x1A8]
	0x035C5060 MOV X0, X31
	0x035C5064 BL 0x3241948
	0x035C5068 LDR X8, [X20]
	0x035C506C LDR X8, [X8 + 0xB8]
	0x035C5070 STR X0, [X8]
	0x035C5074 LDR X8, [X20]
	0x035C5078 LDR X8, [X8 + 0xB8]
	0x035C507C LDR X0, [X8]
	0x035C5080 CBZ X0, 0x35C5128
	0x035C5084 ADRP X9, 0xB2F000
	0x035C5088 LDR X8, [X0]
	0x035C508C LDR X9, [X9 + 0xFE0]
	0x035C5090 ADRP X19, 0xB72000
	0x035C5094 LDR X19, [X19 + 0xE20]
	0x035C5098 LDR X2, [X8 + 0x270]
	0x035C509C LDR X1, [X9]
	0x035C50A0 LDR X9, [X8 + 0x268]
	0x035C50A4 ADRP X21, 0xB72000
	0x035C50A8 ADRP X22, 0xB36000
	0x035C50AC ADRP X23, 0xB72000
	0x035C50B0 LDR X21, [X21 + 0xE18]
	0x035C50B4 LDR X22, [X22 + 0x558]
	0x035C50B8 LDR X23, [X23 + 0xE28]
	0x035C50BC BLR X9
	0x035C50C0 LDR X8, [X20]
	0x035C50C4 LDR X8, [X8 + 0xB8]
	0x035C50C8 STR X0, [X8 + 0x8]
	0x035C50CC LDR X0, [X19]
	0x035C50D0 BL 0x1C16F10
	0x035C50D4 LDR X1, [X21]
	0x035C50D8 MOV X19, X0
	0x035C50DC BL 0x2991A90
	0x035C50E0 LDR X8, [X20]
	0x035C50E4 LDR X8, [X8 + 0xB8]
	0x035C50E8 STR X19, [X8 + 0x10]
	0x035C50EC LDR X0, [X22]
	0x035C50F0 BL 0x1C16F10
	0x035C50F4 MOV X1, X31
	0x035C50F8 MOV X19, X0
	0x035C50FC BL 0x32E23B4
	0x035C5100 LDR X8, [X20]
	0x035C5104 LDP X22, X21, [X31 + 0x10]
	0x035C5108 LDR X8, [X8 + 0xB8]
	0x035C510C STR X19, [X8 + 0x18]
	0x035C5110 LDR X9, [X23]
	0x035C5114 LDP X20, X19, [X31 + 0x20]
	0x035C5118 STR W31, [X8 + 0x38]
	0x035C511C STR X9, [X8 + 0x28]
	0x035C5120 LDP X30, X23, [X31], #0x30
	0x035C5124 B 0x35C4EB0
	0x035C5128 BL 0x1C16F20
	0x035C512C MOV X1, X31
	0x035C5130 B 0x33A51F0
	0x035C5134 STR X30, [X31 - 0x30]!
	0x035C5138 STP X22, X21, [X31 + 0x10]
	0x035C513C STP X20, X19, [X31 + 0x20]
	0x035C5140 ADRP X22, 0xE1B000
	0x035C5144 ADRP X21, 0xB2E000
	0x035C5148 LDRB W8, [X22 + 0x1B1]
	0x035C514C LDR X21, [X21 + 0x618]
	0x035C5150 MOV W20, W1
	0x035C5154 MOV X19, X0
	0x035C5158 TBNZ X8, 0x0, 0x35C5170
	0x035C515C ADRP X0, 0xB2E000
	0x035C5160 LDR X0, [X0 + 0x618]
	0x035C5164 BL 0x1C16CF4
	0x035C5168 MOVZ W8, 0x1
	0x035C516C STRB W8, [X22 + 0x1B1]
	0x035C5170 MOV X0, X19
	0x035C5174 MOV X1, X31
	0x035C5178 BL 0x33A51F0
	0x035C517C LDR X0, [X21]
	0x035C5180 MOVZ W1, 0x1
	0x035C5184 BL 0x1C16D6C
	0x035C5188 CBZ X0, 0x35C51AC
	0x035C518C LDR W8, [X0 + 0x18]
	0x035C5190 CBZ W8, 0x35C51B0
	0x035C5194 STRB W20, [X0 + 0x20]
	0x035C5198 STR X0, [X19 + 0x10]
	0x035C519C LDP X20, X19, [X31 + 0x20]
	0x035C51A0 LDP X22, X21, [X31 + 0x10]
	0x035C51A4 LDR X30, [X31], #0x30
	0x035C51A8 RET
	0x035C51AC BL 0x1C16F20
	0x035C51B0 BL 0x1C16F28
	0x035C51B4 STR X30, [X31 - 0x20]!
	0x035C51B8 STP X20, X19, [X31 + 0x10]
	0x035C51BC MOV X19, X1
	0x035C51C0 MOV X1, X31
	0x035C51C4 MOV X20, X0
	0x035C51C8 BL 0x33A51F0
	0x035C51CC STR X19, [X20 + 0x10]
	0x035C51D0 LDP X20, X19, [X31 + 0x10]
	0x035C51D4 LDR X30, [X31], #0x20
	0x035C51D8 RET
	0x035C51DC STR X30, [X31 - 0x20]!
	0x035C51E0 STP X20, X19, [X31 + 0x10]
	0x035C51E4 MOV W19, W1
	0x035C51E8 MOV X1, X31
	0x035C51EC MOV X20, X0
	0x035C51F0 BL 0x33A51F0
	0x035C51F4 STRB W19, [X20 + 0x10]
	0x035C51F8 LDP X20, X19, [X31 + 0x10]
	0x035C51FC LDR X30, [X31], #0x20
	0x035C5200 RET
	0x035C5204 STP X30, X23, [X31 - 0x30]!
	0x035C5208 STP X22, X21, [X31 + 0x10]
	0x035C520C STP X20, X19, [X31 + 0x20]
	0x035C5210 ADRP X23, 0xE1B000
	0x035C5214 ADRP X22, 0xB2E000
	0x035C5218 ADRP X20, 0xB72000
	0x035C521C ADRP X21, 0xB72000
	0x035C5220 MOV X19, X8
	0x035C5224 LDRB W8, [X23 + 0x1B2]
	0x035C5228 LDR X22, [X22 + 0x618]
	0x035C522C LDR X20, [X20 + 0xE30]
	0x035C5230 LDR X21, [X21 + 0xE38]
	0x035C5234 TBNZ X8, 0x0, 0x35C5264
	0x035C5238 ADRP X0, 0xB2E000
	0x035C523C LDR X0, [X0 + 0x618]
	0x035C5240 BL 0x1C16CF4
	0x035C5244 ADRP X0, 0xB72000
	0x035C5248 LDR X0, [X0 + 0xE38]
	0x035C524C BL 0x1C16CF4
	0x035C5250 ADRP X0, 0xB72000
	0x035C5254 LDR X0, [X0 + 0xE30]
	0x035C5258 BL 0x1C16CF4
	0x035C525C MOVZ W8, 0x1
	0x035C5260 STRB W8, [X23 + 0x1B2]
	0x035C5264 LDR X0, [X22]
	0x035C5268 MOVZ W1, 0xACE
	0x035C526C BL 0x1C16D6C
	0x035C5270 LDR X1, [X20]
	0x035C5274 MOV X2, X31
	0x035C5278 MOV X20, X0
	0x035C527C BL 0x32C5BD8
	0x035C5280 LDR X0, [X22]
	0x035C5284 MOVZ W1, 0xA0F
	0x035C5288 BL 0x1C16D6C
	0x035C528C LDR X1, [X21]
	0x035C5290 MOV X2, X31
	0x035C5294 MOV X21, X0
	0x035C5298 BL 0x32C5BD8
	0x035C529C ADRP X8, 0xFFFFFFFFFD528000
	0x035C52A0 LDR V0, [X8 + 0xF58]
	0x035C52A4 STP X20, X21, [X19]
	0x035C52A8 STRB W31, [X19 + 0x18]
	0x035C52AC STUR W31, [X19 + 0x19]
	0x035C52B0 STR D0, [X19 + 0x10]
	0x035C52B4 STR W31, [X19 + 0x1C]
	0x035C52B8 LDP X20, X19, [X31 + 0x20]
	0x035C52BC LDP X22, X21, [X31 + 0x10]
	0x035C52C0 LDP X30, X23, [X31], #0x30
	0x035C52C4 RET
	0x035C52C8 MOV X1, X31
	0x035C52CC B 0x33BDD8C
	0x035C52D0 LDRB W0, [X0]
	0x035C52D4 RET
	0x035C52D8 LDR X0, [X0 + 0x8]
	0x035C52DC RET
	0x035C52E0 AND W8, W1, 0x1
	0x035C52E4 STRB W8, [X0]
	0x035C52E8 STR X2, [X0 + 0x8]
	0x035C52EC RET
	0x035C52F0 STP X30, X21, [X31 - 0x20]!
	0x035C52F4 STP X20, X19, [X31 + 0x10]
	0x035C52F8 LDR X8, [X2 + 0x8]
	0x035C52FC STP X1, X2, [X0 + 0x20]
	0x035C5300 MOV X19, X0
	0x035C5304 MOV X20, X1
	0x035C5308 STR X8, [X0 + 0x10]
	0x035C530C LDRB W21, [X2 + 0x52]
	0x035C5310 STR X0, [X0 + 0x40]
	0x035C5314 MOV X0, X2
	0x035C5318 BL 0x1C16D84
	0x035C531C TBZ X0, 0x0, 0x35C5338
	0x035C5320 CMP W21, 0x1
	0x035C5324 B.NE 0x35C533C
	0x035C5328 ADRP X8, 0xFFFFFFFFFE5FC000
	0x035C532C ADD X8, X8, 0xFD4
	0x035C5330 STR X8, [X19 + 0x18]
	0x035C5334 B 0x35C534C
	0x035C5338 CBZ X20, 0x35C5364
	0x035C533C LDR X8, [X19 + 0x10]
	0x035C5340 LDR X9, [X19 + 0x20]
	0x035C5344 STR X8, [X19 + 0x18]
	0x035C5348 STR X9, [X19 + 0x40]
	0x035C534C ADRP X8, 0xFFFFFFFFFE5FC000
	0x035C5350 ADD X8, X8, 0xF7C
	0x035C5354 STR X8, [X19 + 0x38]
	0x035C5358 LDP X20, X19, [X31 + 0x10]
	0x035C535C LDP X30, X21, [X31], #0x20
	0x035C5360 RET
	0x035C5364 ADRP X1, 0xFFFFFFFFFD556000
	0x035C5368 ADD X1, X1, 0xEE3
	0x035C536C MOV X0, X31
	0x035C5370 BL 0x1C16F3C
	0x035C5374 MOV X1, X31
	0x035C5378 BL 0x1C16DEC
	0x035C537C LDR X8, [X0 + 0x40]
	0x035C5380 LDR X4, [X0 + 0x18]
	0x035C5384 LDR X3, [X0 + 0x28]
	0x035C5388 MOV X0, X8
	0x035C538C BR X4
	0x035C5390 SUB X31, X31, 0x50
	0x035C5394 STP X30, X23, [X31 + 0x20]
	0x035C5398 STP X22, X21, [X31 + 0x30]
	0x035C539C STP X20, X19, [X31 + 0x40]
	0x035C53A0 ADRP X23, 0xE1B000
	0x035C53A4 STP X1, X2, [X31 + 0x10]
	0x035C53A8 ADRP X22, 0xB5A000
	0x035C53AC LDRB W8, [X23 + 0x1B4]
	0x035C53B0 LDR X22, [X22 + 0xE0]
	0x035C53B4 MOV X19, X4
	0x035C53B8 MOV X20, X3
	0x035C53BC MOV X21, X0
	0x035C53C0 TBNZ X8, 0x0, 0x35C53D8
	0x035C53C4 ADRP X0, 0xB5A000
	0x035C53C8 LDR X0, [X0 + 0xE0]
	0x035C53CC BL 0x1C16CF4
	0x035C53D0 MOVZ W8, 0x1
	0x035C53D4 STRB W8, [X23 + 0x1B4]
	0x035C53D8 LDR X0, [X22]
	0x035C53DC ADD X1, X31, 0x10
	0x035C53E0 STP X31, X31, [X31]

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+80], X29
	003 Move [X31+88], X30
	004 Move [X31+96], X28
	005 Move [X31+104], X27
	006 Move [X31+112], X26
	007 Move [X31+120], X25
	008 Move [X31+128], X24
	009 Move [X31+136], X23
	010 Move [X31+144], X22
	011 Move [X31+152], X21
	012 Move [X31+160], X20
	013 Move [X31+168], X19
	014 Move [X31+12], W7
	015 Move [X31+16], X6
	016 Move X21, 0xE1D000
	017 Move X19, 0xB58000
	018 Move X28, 0xB74000
	019 Move X23, 0xB31000
	020 Move W8, [X21+415]
	021 Move X19, [X19+3008]
	022 Move X28, [X28+3400]
	023 Move X23, [X23+1120]
	024 Move X26, X5
	025 Move X22, X4
	026 Move X20, X3
	027 Move X25, X2
	028 Move W27, W1
	029 Move W24, W0
	030 Move TEMP, X8
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfEqual {93}
	034 Move X0, 0xB30000
	035 Move X0, [X0+1880]
	036 Call 0x1C17CF4
	037 Move X0, 0xB31000
	038 Move X0, [X0+1120]
	039 Call 0x1C17CF4
	040 Move X0, 0xB58000
	041 Move X0, [X0+3008]
	042 Call 0x1C17CF4
	043 Move X0, 0xB74000
	044 Move X0, [X0+3392]
	045 Call 0x1C17CF4
	046 Move X0, 0xB74000
	047 Move X0, [X0+3400]
	048 Call 0x1C17CF4
	049 Move X0, 0xB30000
	050 Move X0, [X0+1928]
	051 Call 0x1C17CF4
	052 Move X0, 0xB31000
	053 Move X0, [X0+712]
	054 Call 0x1C17CF4
	055 Move X0, 0xB74000
	056 Move X0, [X0+3528]
	057 Call 0x1C17CF4
	058 Move X0, 0xB74000
	059 Move X0, [X0+3416]
	060 Call 0x1C17CF4
	061 Move X0, 0xB74000
	062 Move X0, [X0+3536]
	063 Call 0x1C17CF4
	064 Move X0, 0xB74000
	065 Move X0, [X0+3424]
	066 Call 0x1C17CF4
	067 Move X0, 0xB74000
	068 Move X0, [X0+3432]
	069 Call 0x1C17CF4
	070 Move X0, 0xB74000
	071 Move X0, [X0+3544]
	072 Call 0x1C17CF4
	073 Move X0, 0xB3C000
	074 Move X0, [X0+1648]
	075 Call 0x1C17CF4
	076 Move X0, 0xB61000
	077 Move X0, [X0+2320]
	078 Call 0x1C17CF4
	079 Move X0, 0xB74000
	080 Move X0, [X0+3448]
	081 Call 0x1C17CF4
	082 Move X0, 0xB74000
	083 Move X0, [X0+3552]
	084 Call 0x1C17CF4
	085 Move X0, 0xB74000
	086 Move X0, [X0+3456]
	087 Call 0x1C17CF4
	088 Move X0, 0xB74000
	089 Move X0, [X0+3560]
	090 Call 0x1C17CF4
	091 Move W8, 1
	092 Move [X21+415], W8
	093 Move X0, [X19]
	094 Call 0x1C17F10
	095 Move X1, X31
	096 Move X21, X0
	097 Call JSONObject..ctor, X0
	098 Move X8, [X28]
	099 Move TEMP, 0
	100 Not TEMP
	101 Move X9, TEMP
	102 Add X0, X31, 56
	103 Move X1, X31
	104 Move [X31+56], X8
	105 Move [X31+64], X9
	106 Move [X31+72], W24
	107 Call Enum.ToString, X0
	108 Move X8, [X23]
	109 Move X28, X0
	110 Move W9, [X8+224]
	111 Compare W9, 0
	112 JumpIfNotEqual {115}
	113 Move X0, X8
	114 Call 0x1C17DFC
	115 Move X0, X28
	116 Move X1, X31
	117 Call JSONNode.op_Implicit, X0
	118 Compare X21, 0
	119 JumpIfEqual {392}
	120 Move X9, 0xB73000
	121 Move X8, [X21]
	122 Call 0x3EB269C
	123 Return 
	124 Move X29, 0xB73000
	125 Move X19, 0xB73000
	126 Move X3, [X8+640]
	127 Move X1, [X9]
	128 Move X9, [X8+632]
	129 Move X23, 0xB2F000
	130 Move X29, [X29+3392]
	131 Move X19, [X19+3432]
	132 Move X23, [X23+1928]
	133 Move X2, X0
	134 Move X0, X21
	135 NotImplemented "Instruction BLR not yet implemented."
	136 Move X8, [X29]
	137 Move TEMP, 0
	138 Not TEMP
	139 Move X9, TEMP
	140 Add X0, X31, 32
	141 Move X1, X31
	142 Move [X31+32], X8
	143 Move [X31+40], X9
	144 Move [X31+48], W27
	145 Call Enum.ToString, X0
	146 Move X1, X31
	147 Call JSONNode.op_Implicit, X0
	148 Move X8, [X21]
	149 Move X1, [X19]
	150 Move X2, X0
	151 Move X0, X21
	152 Move X9, [X8+632]
	153 Move X3, [X8+640]
	154 NotImplemented "Instruction BLR not yet implemented."
	155 Move X0, [X23]
	156 Move W8, [X0+224]
	157 Compare W8, 0
	158 JumpIfNotEqual {161}
	159 Call 0x1C17DFC
	160 Move X0, [X23]
	161 Move X29, X23
	162 Move X8, [X0+184]
	163 Move X8, [X8+48]
	164 Compare X8, 0
	165 JumpIfEqual {392}
	166 Compare X26, 0
	167 JumpIfEqual {392}
	168 Move X23, X22
	169 Move X19, 0xB2F000
	170 Move X27, 0xB73000
	171 Move X22, 0xB73000
	172 Move X19, [X19+1880]
	173 Move X27, [X27+3552]
	174 Move X22, [X22+3560]
	175 Move W1, [X8+16]
	176 Move X28, 0xB73000
	177 Move X28, [X28+3424]
	178 Move X0, X26
	179 Move X2, X31
	180 Call String.Substring, X0, X1
	181 Move X26, X0
	182 Move X0, [X19]
	183 Move W8, [X31+12]
	184 Add X1, X31, 28
	185 Move [X31+28], W8
	186 Call 0x1C17E04
	187 Move X8, [X27]
	188 Move X3, [X31+16]
	189 Move X2, X0
	190 Move X1, X26
	191 Move X0, X8
	192 Move X4, X31
	193 Call String.Format, X0, X1, X2, X3
	194 Move X1, X31
	195 Call JSONNode.op_Implicit, X0
	196 Move X8, [X21]
	197 Move X1, [X22]
	198 Move X2, X0
	199 Move X0, X21
	200 Move X9, [X8+632]
	201 Move X3, [X8+640]
	202 NotImplemented "Instruction BLR not yet implemented."
	203 Move X8, [X29]
	204 Move X1, X31
	205 Move X8, [X8+184]
	206 Move W0, [X8+32]
	207 Call JSONNode.op_Implicit, X0
	208 Move X8, [X21]
	209 Move X1, [X28]
	210 Move X2, X0
	211 Move X0, X21
	212 Move X9, [X8+632]
	213 Move X3, [X8+640]
	214 NotImplemented "Instruction BLR not yet implemented."
	215 Move X0, X31
	216 Call Thread.get_CurrentThread
	217 Move X8, [X29]
	218 Move X1, X31
	219 Move X8, [X8+184]
	220 Move X8, [X8+40]
	221 NotImplemented "Instruction CMP not yet implemented."
	222 NotImplemented "Instruction CSET not yet implemented."
	223 Call JSONNode.op_Implicit, X0
	224 Move X9, 0xB73000
	225 Move X8, [X21]
	226 Move X9, [X9+3456]
	227 Move X2, X0
	228 Move X0, X21
	229 Move X3, [X8+640]
	230 Move X1, [X9]
	231 Move X9, [X8+632]
	232 NotImplemented "Instruction BLR not yet implemented."
	233 Compare X25, 0
	234 JumpIfEqual {244}
	235 Move X22, 0xB30000
	236 Move X22, [X22+1120]
	237 Move X19, X23
	238 Move X0, [X22]
	239 Move W8, [X0+224]
	240 Compare W8, 0
	241 JumpIfNotEqual {243}
	242 Call 0x1C17DFC
	243 Move X0, X25
	244 Move X22, 0xB30000
	245 Move X22, [X22+1120]
	246 Move X19, X23
	247 Compare X20, 0
	248 JumpIfEqual {285}
	249 Move X0, X20
	250 Move X1, X31
	251 Call Exception.GetType, X0
	252 Move X8, [X20]
	253 Move X23, X0
	254 Move X0, X20
	255 Move X9, [X8+392]
	256 Move X1, [X8+400]
	257 NotImplemented "Instruction BLR not yet implemented."
	258 Move X8, 0xB73000
	259 Move X8, [X8+3536]
	260 Move X2, X0
	261 Move X1, X23
	262 Move X3, X31
	263 Move X8, [X8]
	264 Move X0, X8
	265 Call String.Format, X0, X1, X2
	266 Move X8, [X22]
	267 Move X23, X0
	268 Move W9, [X8+224]
	269 Compare W9, 0
	270 JumpIfNotEqual {273}
	271 Move X0, X8
	272 Call 0x1C17DFC
	273 Move X0, X23
	274 Move X1, X31
	275 Call JSONNode.op_Implicit, X0
	276 Move X9, 0xB73000
	277 Move X8, [X21]
	278 Move X9, [X9+3448]
	279 Move X2, X0
	280 Move X0, X21
	281 Move X3, [X8+640]
	282 Move X1, [X9]
	283 Move X9, [X8+632]
	284 NotImplemented "Instruction BLR not yet implemented."
	285 Subtract W8, W24, 1
	286 NotImplemented "Instruction CMP not yet implemented."
	287 Move X8, 0xB73000
	288 Move X8, [X8+3528]
	289 Move X0, [X8]
	290 Move W8, [X0+224]
	291 Compare W8, 0
	292 JumpIfNotEqual {294}
	293 Call 0x1C17DFC
	294 Move X0, X31
	295 Call StackTraceUtility.ExtractStackTrace
	296 Move X8, [X22]
	297 Move X22, X0
	298 Move W9, [X8+224]
	299 Compare W9, 0
	300 JumpIfNotEqual {303}
	301 Move X0, X8
	302 Call 0x1C17DFC
	303 Move X0, X22
	304 Move X1, X31
	305 Call JSONNode.op_Implicit, X0
	306 Move X9, 0xB3B000
	307 Move X8, [X21]
	308 Move X9, [X9+1648]
	309 Move X2, X0
	310 Move X0, X21
	311 Move X3, [X8+640]
	312 Move X1, [X9]
	313 Move X9, [X8+632]
	314 NotImplemented "Instruction BLR not yet implemented."
	315 Compare X20, 0
	316 JumpIfEqual {333}
	317 Move X0, [X29]
	318 Move X22, 0xB60000
	319 Move W8, [X0+224]
	320 Move X22, [X22+2320]
	321 Compare W8, 0
	322 JumpIfNotEqual {324}
	323 Call 0x1C17DFC
	324 Move X0, X20
	325 Call Log.ExceptionToJSON, X0
	326 Move X8, [X21]
	327 Move X1, [X22]
	328 Move X2, X0
	329 Move X0, X21
	330 Move X9, [X8+632]
	331 Move X3, [X8+640]
	332 NotImplemented "Instruction BLR not yet implemented."
	333 Compare X19, 0
	334 JumpIfEqual {359}
	335 Move X8, 0xB57000
	336 Move X8, [X8+3008]
	337 Move X22, 0xB73000
	338 Move X0, [X8]
	339 Move X22, [X22+3544]
	340 Call 0x1C17F10
	341 Move X1, X31
	342 Move X20, X0
	343 Call JSONObject..ctor, X0
	344 Move X0, [X29]
	345 Move W8, [X0+224]
	346 Compare W8, 0
	347 JumpIfNotEqual {349}
	348 Call 0x1C17DFC
	349 Move X0, X20
	350 Move X1, X19
	351 Call Log.AddFields, X0, X1
	352 Move X8, [X21]
	353 Move X1, [X22]
	354 Move X0, X21
	355 Move X2, X20
	356 Move X9, [X8+632]
	357 Move X3, [X8+640]
	358 NotImplemented "Instruction BLR not yet implemented."
	359 Move X0, [X29]
	360 Move X19, 0xB30000
	361 Move W8, [X0+224]
	362 Move X19, [X19+712]
	363 Compare W8, 0
	364 JumpIfNotEqual {367}
	365 Call 0x1C17DFC
	366 Move X0, [X29]
	367 Move X8, [X0+184]
	368 Move X0, X21
	369 Move X1, [X8+24]
	370 Call Log.AddFields, X0, X1
	371 Move X0, [X19]
	372 Move W8, [X0+224]
	373 Compare W8, 0
	374 JumpIfNotEqual {376}
	375 Call 0x1C17DFC
	376 Move X0, X21
	377 Call Loggly.QueueLog, X0
	378 Move X20, [X31+160]
	379 Move X19, [X31+168]
	380 Move X22, [X31+144]
	381 Move X21, [X31+152]
	382 Move X24, [X31+128]
	383 Move X23, [X31+136]
	384 Move X26, [X31+112]
	385 Move X25, [X31+120]
	386 Move X28, [X31+96]
	387 Move X27, [X31+104]
	388 Move X29, [X31+80]
	389 Move X30, [X31+88]
	390 Add X31, X31, 176
	391 Return 
	392 Call 0x1C17F20

Method: System.Text.StringBuilder FormatException(System.Exception exception)

Disassembly:
	0x035C53E4 BL 0x1C16E04
	0x035C53E8 STR X0, [X31]
	0x035C53EC ADD X1, X31, 0x0
	0x035C53F0 MOV X0, X21
	0x035C53F4 MOV X2, X20
	0x035C53F8 MOV X3, X19
	0x035C53FC BL 0x1C16CB0
	0x035C5400 LDP X20, X19, [X31 + 0x40]
	0x035C5404 LDP X22, X21, [X31 + 0x30]
	0x035C5408 LDP X30, X23, [X31 + 0x20]
	0x035C540C ADD X31, X31, 0x50
	0x035C5410 RET
	0x035C5414 MOV X0, X1
	0x035C5418 MOV X1, X31
	0x035C541C B 0x1C16CB4
	0x035C5420 LDRB W0, [X0 + 0x10]
	0x035C5424 RET
	0x035C5428 AND W8, W1, 0x1
	0x035C542C STRB W8, [X0 + 0x10]
	0x035C5430 RET
	0x035C5434 STP X30, X21, [X31 - 0x20]!
	0x035C5438 STP X20, X19, [X31 + 0x10]
	0x035C543C ADRP X20, 0xE1B000
	0x035C5440 ADRP X21, 0xB72000
	0x035C5444 ADRP X19, 0xB72000
	0x035C5448 LDRB W8, [X20 + 0x1B5]
	0x035C544C LDR X21, [X21 + 0xE40]
	0x035C5450 LDR X19, [X19 + 0xE48]
	0x035C5454 TBNZ X8, 0x0, 0x35C5478
	0x035C5458 ADRP X0, 0xB72000
	0x035C545C LDR X0, [X0 + 0xE48]
	0x035C5460 BL 0x1C16CF4
	0x035C5464 ADRP X0, 0xB72000
	0x035C5468 LDR X0, [X0 + 0xE40]
	0x035C546C BL 0x1C16CF4
	0x035C5470 MOVZ W8, 0x1
	0x035C5474 STRB W8, [X20 + 0x1B5]
	0x035C5478 LDR X0, [X21]
	0x035C547C BL 0x1C16F10
	0x035C5480 LDR X1, [X19]
	0x035C5484 MOV X19, X0
	0x035C5488 BL 0x301B7C4
	0x035C548C MOV X0, X19
	0x035C5490 LDP X20, X19, [X31 + 0x10]
	0x035C5494 LDP X30, X21, [X31], #0x20
	0x035C5498 RET
	0x035C549C RET
	0x035C54A0 RET
	0x035C54A4 RET
	0x035C54A8 RET
	0x035C54AC RET
	0x035C54B0 RET
	0x035C54B4 RET
	0x035C54B8 RET
	0x035C54BC RET
	0x035C54C0 RET
	0x035C54C4 RET
	0x035C54C8 MOV X1, X31
	0x035C54CC B 0x33BDD8C
	0x035C54D0 LDRB W0, [X0 + 0x10]
	0x035C54D4 RET
	0x035C54D8 AND W8, W1, 0x1
	0x035C54DC STRB W8, [X0 + 0x10]
	0x035C54E0 RET
	0x035C54E4 LDR X0, [X0 + 0x18]
	0x035C54E8 RET
	0x035C54EC STP X30, X21, [X31 - 0x20]!
	0x035C54F0 STP X20, X19, [X31 + 0x10]
	0x035C54F4 ADRP X20, 0xE1B000
	0x035C54F8 ADRP X21, 0xB2E000
	0x035C54FC LDRB W8, [X20 + 0x1B6]
	0x035C5500 LDR X21, [X21 + 0xD98]
	0x035C5504 MOV X19, X0
	0x035C5508 TBNZ X8, 0x0, 0x35C5520
	0x035C550C ADRP X0, 0xB2E000
	0x035C5510 LDR X0, [X0 + 0xD98]
	0x035C5514 BL 0x1C16CF4
	0x035C5518 MOVZ W8, 0x1
	0x035C551C STRB W8, [X20 + 0x1B6]
	0x035C5520 LDR X0, [X21]
	0x035C5524 BL 0x1C16F10
	0x035C5528 MOV X20, X0
	0x035C552C BL 0x35C5548
	0x035C5530 MOV X0, X19
	0x035C5534 MOV X1, X20
	0x035C5538 LDP X20, X19, [X31 + 0x10]
	0x035C553C MOV X2, X31
	0x035C5540 LDP X30, X21, [X31], #0x20
	0x035C5544 B 0x35C55C8
	0x035C5548 STR X30, [X31 - 0x30]!
	0x035C554C STP X22, X21, [X31 + 0x10]
	0x035C5550 STP X20, X19, [X31 + 0x20]
	0x035C5554 ADRP X22, 0xE1B000
	0x035C5558 ADRP X21, 0xB38000
	0x035C555C ADRP X20, 0xB38000
	0x035C5560 LDRB W8, [X22 + 0x21B]
	0x035C5564 LDR X21, [X21 + 0x920]
	0x035C5568 LDR X20, [X20 + 0x928]
	0x035C556C MOV X19, X0
	0x035C5570 TBNZ X8, 0x0, 0x35C5594
	0x035C5574 ADRP X0, 0xB38000
	0x035C5578 LDR X0, [X0 + 0x928]
	0x035C557C BL 0x1C16CF4
	0x035C5580 ADRP X0, 0xB38000
	0x035C5584 LDR X0, [X0 + 0x920]
	0x035C5588 BL 0x1C16CF4
	0x035C558C MOVZ W8, 0x1
	0x035C5590 STRB W8, [X22 + 0x21B]
	0x035C5594 MOV X0, X19
	0x035C5598 MOV X1, X31
	0x035C559C BL 0x33BDD8C
	0x035C55A0 LDR X0, [X21]
	0x035C55A4 BL 0x1C16F10
	0x035C55A8 LDR X1, [X20]
	0x035C55AC MOV X20, X0
	0x035C55B0 BL 0x301B7C4
	0x035C55B4 STR X20, [X19 + 0x10]
	0x035C55B8 LDP X20, X19, [X31 + 0x20]
	0x035C55BC LDP X22, X21, [X31 + 0x10]
	0x035C55C0 LDR X30, [X31], #0x30
	0x035C55C4 RET
	0x035C55C8 SUB X31, X31, 0x70
	0x035C55CC STP X29, X30, [X31 + 0x10]
	0x035C55D0 STP X28, X27, [X31 + 0x20]
	0x035C55D4 STP X26, X25, [X31 + 0x30]
	0x035C55D8 STP X24, X23, [X31 + 0x40]
	0x035C55DC STP X22, X21, [X31 + 0x50]
	0x035C55E0 STP X20, X19, [X31 + 0x60]
	0x035C55E4 STR X2, [X31 + 0x8]
	0x035C55E8 ADRP X22, 0xE1B000
	0x035C55EC ADRP X24, 0xB72000
	0x035C55F0 ADRP X29, 0xB72000
	0x035C55F4 ADRP X26, 0xB72000
	0x035C55F8 ADRP X25, 0xB72000
	0x035C55FC ADRP X23, 0xB72000
	0x035C5600 ADRP X19, 0xB72000
	0x035C5604 ADRP X28, 0xB72000
	0x035C5608 ADRP X27, 0xB72000
	0x035C560C LDR X24, [X24 + 0xE40]
	0x035C5610 LDR X29, [X29 + 0xE48]
	0x035C5614 LDR X26, [X26 + 0xE50]
	0x035C5618 LDR X25, [X25 + 0xE58]
	0x035C561C LDR X23, [X23 + 0xE60]
	0x035C5620 LDR X19, [X19 + 0xE68]
	0x035C5624 LDR X28, [X28 + 0xE70]
	0x035C5628 LDR X27, [X27 + 0xE78]
	0x035C562C LDRB W8, [X22 + 0x1B7]
	0x035C5630 MOV X21, X1
	0x035C5634 MOV X20, X0
	0x035C5638 TBNZ X8, 0x0, 0x35C5728
	0x035C563C ADRP X0, 0xB55000
	0x035C5640 LDR X0, [X0 + 0xD68]
	0x035C5644 BL 0x1C16CF4
	0x035C5648 ADRP X0, 0xB72000
	0x035C564C LDR X0, [X0 + 0xE68]
	0x035C5650 BL 0x1C16CF4
	0x035C5654 ADRP X0, 0xB72000
	0x035C5658 LDR X0, [X0 + 0xE78]
	0x035C565C BL 0x1C16CF4
	0x035C5660 ADRP X0, 0xB72000
	0x035C5664 LDR X0, [X0 + 0xE70]
	0x035C5668 BL 0x1C16CF4
	0x035C566C ADRP X0, 0xB72000
	0x035C5670 LDR X0, [X0 + 0xE60]
	0x035C5674 BL 0x1C16CF4
	0x035C5678 ADRP X0, 0xB72000
	0x035C567C LDR X0, [X0 + 0xE58]
	0x035C5680 BL 0x1C16CF4
	0x035C5684 ADRP X0, 0xB72000
	0x035C5688 LDR X0, [X0 + 0xE50]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xE1C000
	007 Move X21, 0xB2F000
	008 Move W8, [X20+416]
	009 Move X21, [X21+2288]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {35}
	015 Move X0, 0xB36000
	016 Move X0, [X0+752]
	017 Call 0x1C17CF4
	018 Move X0, 0xB2F000
	019 Move X0, [X0+1928]
	020 Call 0x1C17CF4
	021 Move X0, 0xB2F000
	022 Move X0, [X0+2288]
	023 Call 0x1C17CF4
	024 Move X0, 0xB73000
	025 Move X0, [X0+3568]
	026 Call 0x1C17CF4
	027 Move X0, 0xB73000
	028 Move X0, [X0+3576]
	029 Call 0x1C17CF4
	030 Move X0, 0xB5F000
	031 Move X0, [X0+2856]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X20+416], W8
	035 Move X0, [X21]
	036 Call 0x1C17F10
	037 Move X1, X31
	038 Move X20, X0
	039 Call StringBuilder..ctor, X0
	040 Compare X19, 0
	041 JumpIfEqual {191}
	042 Move X22, 0xB5F000
	043 Move X22, [X22+2856]
	044 Move X0, X19
	045 Move X1, X31
	046 Call Exception.GetType, X0
	047 Move X8, [X19]
	048 Move X21, X0
	049 Move X0, X19
	050 Move X9, [X8+392]
	051 Move X1, [X8+400]
	052 NotImplemented "Instruction BLR not yet implemented."
	053 Move X8, [X22]
	054 Move X2, X0
	055 Move X1, X21
	056 Move X3, X31
	057 Move X0, X8
	058 Call String.Format, X0, X1, X2
	059 Compare X20, 0
	060 JumpIfEqual {191}
	061 Move X1, X0
	062 Move X0, X20
	063 Move X2, X31
	064 Call StringBuilder.Append, X0, X1
	065 Move X8, [X19]
	066 Move X0, X19
	067 Move X9, [X8+440]
	068 Move X1, [X8+448]
	069 NotImplemented "Instruction BLR not yet implemented."
	070 Compare X0, 0
	071 JumpIfEqual {84}
	072 Move X0, X20
	073 Move X1, X31
	074 Call StringBuilder.AppendLine, X0
	075 Move X8, [X19]
	076 Move X0, X19
	077 Move X9, [X8+440]
	078 Move X1, [X8+448]
	079 NotImplemented "Instruction BLR not yet implemented."
	080 Move X1, X0
	081 Move X0, X20
	082 Move X2, X31
	083 Call StringBuilder.Append, X0, X1
	084 Move X8, [X19]
	085 Move X22, 0xB2F000
	086 Move X0, X19
	087 Move X9, [X8+408]
	088 Move X1, [X8+416]
	089 Move X22, [X22+1928]
	090 NotImplemented "Instruction BLR not yet implemented."
	091 Compare X0, 0
	092 JumpIfEqual {157}
	093 Move X8, [X19]
	094 Move X0, X19
	095 Move X9, [X8+408]
	096 Move X1, [X8+416]
	097 NotImplemented "Instruction BLR not yet implemented."
	098 Compare X0, 0
	099 JumpIfEqual {191}
	100 Move X10, 0xB36000
	101 Move X8, [X0]
	102 Move X10, [X10+752]
	103 Move X21, X0
	104 NotImplemented "Instruction LDRH not yet implemented."
	105 Move X1, [X10]
	106 Compare X9, 0
	107 JumpIfEqual {114}
	108 Move X10, [X8+176]
	109 Add X10, X10, 8
	110 NotImplemented "Instruction LDUR not yet implemented."
	111 NotImplemented "Instruction CMP not yet implemented."
	112 Subtract X9, X9, 1
	113 Add X10, X10, 16
	114 Move W2, 1
	115 Move X0, X21
	116 Call 0x1C5D788
	117 Move W9, [X10]
	118 Add W9, W9, 1
	119 Add X8, X8, W9
	120 Add X0, X8, 312
	121 Move X8, [X0]
	122 Move X1, [X0+8]
	123 Move X0, X21
	124 NotImplemented "Instruction BLR not yet implemented."
	125 Compare W0, 0
	126 JumpIfEqual {157}
	127 Move X0, X20
	128 Move X1, X31
	129 Call StringBuilder.AppendLine, X0
	130 Move X0, X20
	131 Move X1, X31
	132 Call StringBuilder.AppendLine, X0
	133 Move X8, 0xB73000
	134 Move X8, [X8+3568]
	135 Move X0, X20
	136 Move X2, X31
	137 Move X1, [X8]
	138 Call StringBuilder.Append, X0, X1
	139 Move X8, [X19]
	140 Move X0, X19
	141 Move X9, [X8+408]
	142 Move X1, [X8+416]
	143 NotImplemented "Instruction BLR not yet implemented."
	144 Move X8, [X22]
	145 Move X21, X0
	146 Move W9, [X8+224]
	147 Compare W9, 0
	148 JumpIfNotEqual {151}
	149 Move X0, X8
	150 Call 0x1C17DFC
	151 Move X0, X21
	152 Call Log.FormatDictionary, X0
	153 Move X1, X0
	154 Move X0, X20
	155 Move X2, X31
	156 Call StringBuilder.Append, X0, X1
	157 Move X8, [X19+40]
	158 Compare X8, 0
	159 JumpIfEqual {184}
	160 Move X21, 0xB73000
	161 Move X21, [X21+3576]
	162 Move X0, X20
	163 Move X1, X31
	164 Call StringBuilder.AppendLine, X0
	165 Move X0, X20
	166 Move X1, X31
	167 Call StringBuilder.AppendLine, X0
	168 Move X1, [X21]
	169 Move X0, X20
	170 Move X2, X31
	171 Call StringBuilder.Append, X0, X1
	172 Move X0, [X22]
	173 Move X19, [X19+40]
	174 Move W8, [X0+224]
	175 Compare W8, 0
	176 JumpIfNotEqual {178}
	177 Call 0x1C17DFC
	178 Move X0, X19
	179 Call Log.FormatException, X0
	180 Move X1, X0
	181 Move X0, X20
	182 Move X2, X31
	183 Call StringBuilder.Append, X0, X1
	184 Move X0, X20
	185 Move X20, [X31+32]
	186 Move X19, [X31+40]
	187 Move X22, [X31+16]
	188 Move X21, [X31+24]
	189 Move X30, [X31+48]
	190 Return X0
	191 Call 0x1C17F20

Method: SimpleJSON.JSONObject ExceptionToJSON(System.Exception exception)

Disassembly:
	0x035C5A34 B 0x35C5A48
	0x035C5A38 LDR W9, [X10]
	0x035C5A3C ADD W9, W9, 0x4
	0x035C5A40 ADD X8, X8, W9, 0x4, SXTW
	0x035C5A44 ADD X0, X8, 0x138
	0x035C5A48 LDP X8, X2, [X0]
	0x035C5A4C MOV X0, X21
	0x035C5A50 MOV X1, X22
	0x035C5A54 BLR X8
	0x035C5A58 LDR X8, [X31 + 0x8]
	0x035C5A5C STR W0, [X20 + 0x5C]
	0x035C5A60 LDP X22, X21, [X31 + 0x50]
	0x035C5A64 LDP X24, X23, [X31 + 0x40]
	0x035C5A68 STR X8, [X20 + 0x70]
	0x035C5A6C LDP X20, X19, [X31 + 0x60]
	0x035C5A70 LDP X26, X25, [X31 + 0x30]
	0x035C5A74 LDP X28, X27, [X31 + 0x20]
	0x035C5A78 LDP X29, X30, [X31 + 0x10]
	0x035C5A7C ADD X31, X31, 0x70
	0x035C5A80 RET
	0x035C5A84 BL 0x1C16F20
	0x035C5A88 MOV X2, X31
	0x035C5A8C B 0x35C55C8
	0x035C5A90 MOV X1, X31
	0x035C5A94 B 0x33BDD8C
	0x035C5A98 STR X30, [X31 - 0x50]!
	0x035C5A9C STP X26, X25, [X31 + 0x10]
	0x035C5AA0 STP X24, X23, [X31 + 0x20]
	0x035C5AA4 STP X22, X21, [X31 + 0x30]
	0x035C5AA8 STP X20, X19, [X31 + 0x40]
	0x035C5AAC ADRP X25, 0xE1B000
	0x035C5AB0 ADRP X22, 0xB72000
	0x035C5AB4 ADRP X21, 0xB72000
	0x035C5AB8 ADRP X23, 0xB72000
	0x035C5ABC ADRP X24, 0xB72000
	0x035C5AC0 LDRB W8, [X25 + 0x1C9]
	0x035C5AC4 LDR X22, [X22 + 0xEB0]
	0x035C5AC8 LDR X21, [X21 + 0xEB8]
	0x035C5ACC LDR X23, [X23 + 0xEC0]
	0x035C5AD0 LDR X24, [X24 + 0xEC8]
	0x035C5AD4 MOV X20, X1
	0x035C5AD8 MOV X19, X0
	0x035C5ADC TBNZ X8, 0x0, 0x35C5B3C
	0x035C5AE0 ADRP X0, 0xB58000
	0x035C5AE4 LDR X0, [X0 + 0x320]
	0x035C5AE8 BL 0x1C16CF4
	0x035C5AEC ADRP X0, 0xB72000
	0x035C5AF0 LDR X0, [X0 + 0xED0]
	0x035C5AF4 BL 0x1C16CF4
	0x035C5AF8 ADRP X0, 0xB72000
	0x035C5AFC LDR X0, [X0 + 0xEC8]
	0x035C5B00 BL 0x1C16CF4
	0x035C5B04 ADRP X0, 0xB72000
	0x035C5B08 LDR X0, [X0 + 0xED8]
	0x035C5B0C BL 0x1C16CF4
	0x035C5B10 ADRP X0, 0xB72000
	0x035C5B14 LDR X0, [X0 + 0xEB8]
	0x035C5B18 BL 0x1C16CF4
	0x035C5B1C ADRP X0, 0xB72000
	0x035C5B20 LDR X0, [X0 + 0xEB0]
	0x035C5B24 BL 0x1C16CF4
	0x035C5B28 ADRP X0, 0xB72000
	0x035C5B2C LDR X0, [X0 + 0xEC0]
	0x035C5B30 BL 0x1C16CF4
	0x035C5B34 MOVZ W8, 0x1
	0x035C5B38 STRB W8, [X25 + 0x1C9]
	0x035C5B3C LDR X0, [X22]
	0x035C5B40 BL 0x1C16F10
	0x035C5B44 LDR X1, [X21]
	0x035C5B48 MOV X21, X0
	0x035C5B4C BL 0x301B7C4
	0x035C5B50 STR X21, [X19 + 0x10]
	0x035C5B54 LDR X0, [X23]
	0x035C5B58 BL 0x1C16F10
	0x035C5B5C LDR X1, [X24]
	0x035C5B60 MOV X21, X0
	0x035C5B64 BL 0x301B7C4
	0x035C5B68 MOV X0, X19
	0x035C5B6C MOV X1, X31
	0x035C5B70 STR X21, [X19 + 0x18]
	0x035C5B74 BL 0x33BDD8C
	0x035C5B78 STR X20, [X19 + 0x20]
	0x035C5B7C CBZ X20, 0x35C5CA8
	0x035C5B80 ADRP X25, 0xB58000
	0x035C5B84 LDR X8, [X20]
	0x035C5B88 LDR X25, [X25 + 0x320]
	0x035C5B8C ADRP X26, 0xB72000
	0x035C5B90 LDRH W9, [X8 + 0x12E]
	0x035C5B94 LDR X1, [X25]
	0x035C5B98 LDR X26, [X26 + 0xED0]
	0x035C5B9C CBZ X9, 0x35C5BC0
	0x035C5BA0 LDR X10, [X8 + 0xB0]
	0x035C5BA4 ADD X10, X10, 0x8
	0x035C5BA8 LDUR X11, [X10 - 0x8]
	0x035C5BAC CMP X11, X1
	0x035C5BB0 B.EQ 0x35C5BD0
	0x035C5BB4 SUBS X9, X9, 0x1
	0x035C5BB8 ADD X10, X10, 0x10
	0x035C5BBC B.NE 0x35C5BA8
	0x035C5BC0 MOV X0, X20
	0x035C5BC4 MOV W2, W31
	0x035C5BC8 BL 0x1C5C788
	0x035C5BCC B 0x35C5BDC
	0x035C5BD0 LDRSW X9, [X10]
	0x035C5BD4 ADD X8, X8, X9, 0x4, LSL
	0x035C5BD8 ADD X0, X8, 0x138
	0x035C5BDC LDP X8, X1, [X0]
	0x035C5BE0 ADRP X24, 0xB72000
	0x035C5BE4 LDR X24, [X24 + 0xED8]
	0x035C5BE8 MOV X0, X20
	0x035C5BEC BLR X8
	0x035C5BF0 LDR X8, [X22]
	0x035C5BF4 MOV W21, W0
	0x035C5BF8 MOV X0, X8
	0x035C5BFC BL 0x1C16F10
	0x035C5C00 LDR X2, [X26]
	0x035C5C04 MOV W1, W21
	0x035C5C08 MOV X22, X0
	0x035C5C0C BL 0x301B830
	0x035C5C10 STR X22, [X19 + 0x10]
	0x035C5C14 LDR X8, [X20]
	0x035C5C18 LDR X1, [X25]
	0x035C5C1C LDRH W9, [X8 + 0x12E]
	0x035C5C20 CBZ X9, 0x35C5C44
	0x035C5C24 LDR X10, [X8 + 0xB0]
	0x035C5C28 ADD X10, X10, 0x8
	0x035C5C2C LDUR X11, [X10 - 0x8]
	0x035C5C30 CMP X11, X1
	0x035C5C34 B.EQ 0x35C5C54
	0x035C5C38 SUBS X9, X9, 0x1
	0x035C5C3C ADD X10, X10, 0x10
	0x035C5C40 B.NE 0x35C5C2C
	0x035C5C44 MOV X0, X20
	0x035C5C48 MOV W2, W31
	0x035C5C4C BL 0x1C5C788
	0x035C5C50 B 0x35C5C60
	0x035C5C54 LDRSW X9, [X10]
	0x035C5C58 ADD X8, X8, X9, 0x4, LSL
	0x035C5C5C ADD X0, X8, 0x138
	0x035C5C60 LDP X8, X1, [X0]
	0x035C5C64 MOV X0, X20
	0x035C5C68 BLR X8
	0x035C5C6C LDR X8, [X23]
	0x035C5C70 MOV W20, W0
	0x035C5C74 MOV X0, X8
	0x035C5C78 BL 0x1C16F10
	0x035C5C7C LDR X2, [X24]
	0x035C5C80 MOV W1, W20
	0x035C5C84 MOV X21, X0
	0x035C5C88 BL 0x301B830
	0x035C5C8C STR X21, [X19 + 0x18]
	0x035C5C90 LDP X20, X19, [X31 + 0x40]
	0x035C5C94 LDP X22, X21, [X31 + 0x30]
	0x035C5C98 LDP X24, X23, [X31 + 0x20]
	0x035C5C9C LDP X26, X25, [X31 + 0x10]
	0x035C5CA0 LDR X30, [X31], #0x50
	0x035C5CA4 RET
	0x035C5CA8 BL 0x1C16F20
	0x035C5CAC SUB X31, X31, 0x20
	0x035C5CB0 STR X30, [X31 + 0x10]
	0x035C5CB4 MOV X5, X3
	0x035C5CB8 MOV W4, W2
	0x035C5CBC MOV W2, W31
	0x035C5CC0 MOV X3, X31
	0x035C5CC4 MOV W6, W31
	0x035C5CC8 MOV X7, X31
	0x035C5CCC BL 0x35C5CDC
	0x035C5CD0 LDR X30, [X31 + 0x10]
	0x035C5CD4 ADD X31, X31, 0x20
	0x035C5CD8 RET
	0x035C5CDC SUB X31, X31, 0xB0
	0x035C5CE0 STP X29, X30, [X31 + 0x50]
	0x035C5CE4 STP X28, X27, [X31 + 0x60]
	0x035C5CE8 STP X26, X25, [X31 + 0x70]
	0x035C5CEC STP X24, X23, [X31 + 0x80]
	0x035C5CF0 STP X22, X21, [X31 + 0x90]
	0x035C5CF4 STP X20, X19, [X31 + 0xA0]
	0x035C5CF8 ADRP X24, 0xE1B000
	0x035C5CFC LDRB W8, [X24 + 0x1B8]
	0x035C5D00 MOV X29, X7
	0x035C5D04 MOV W22, W6
	0x035C5D08 MOV X20, X5
	0x035C5D0C MOV W23, W4

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0xE1C000
	009 Move X21, 0xB57000
	010 Move W8, [X20+417]
	011 Move X21, [X21+3008]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {46}
	017 Move X0, 0xB30000
	018 Move X0, [X0+1120]
	019 Call 0x1C17CF4
	020 Move X0, 0xB57000
	021 Move X0, [X0+3008]
	022 Call 0x1C17CF4
	023 Move X0, 0xB2F000
	024 Move X0, [X0+1928]
	025 Call 0x1C17CF4
	026 Move X0, 0xB3B000
	027 Move X0, [X0+1648]
	028 Call 0x1C17CF4
	029 Move X0, 0xB67000
	030 Move X0, [X0+4040]
	031 Call 0x1C17CF4
	032 Move X0, 0xB2F000
	033 Move X0, [X0+2096]
	034 Call 0x1C17CF4
	035 Move X0, 0xB3B000
	036 Move X0, [X0+1616]
	037 Call 0x1C17CF4
	038 Move X0, 0xB3A000
	039 Move X0, [X0+944]
	040 Call 0x1C17CF4
	041 Move X0, 0xB5B000
	042 Move X0, [X0+296]
	043 Call 0x1C17CF4
	044 Move W8, 1
	045 Move [X20+417], W8
	046 Move X0, [X21]
	047 Call 0x1C17F10
	048 Move X1, X31
	049 Move X20, X0
	050 Call JSONObject..ctor, X0
	051 Compare X19, 0
	052 JumpIfEqual {209}
	053 Move X0, X19
	054 Move X1, X31
	055 Call Exception.GetType, X0
	056 Compare X0, 0
	057 JumpIfEqual {209}
	058 Move X8, [X0]
	059 Move X22, 0xB30000
	060 Move X9, [X8+360]
	061 Move X1, [X8+368]
	062 Move X22, [X22+1120]
	063 NotImplemented "Instruction BLR not yet implemented."
	064 Move X8, [X22]
	065 Move X21, X0
	066 Move W9, [X8+224]
	067 Compare W9, 0
	068 JumpIfNotEqual {71}
	069 Move X0, X8
	070 Call 0x1C17DFC
	071 Move X0, X21
	072 Move X1, X31
	073 Call JSONNode.op_Implicit, X0
	074 Compare X20, 0
	075 JumpIfEqual {209}
	076 Move X9, 0xB3A000
	077 Move X8, [X20]
	078 Move X9, [X9+944]
	079 Move X21, 0xB3B000
	080 Move X24, 0xB3B000
	081 Move X3, [X8+640]
	082 Move X1, [X9]
	083 Move X9, [X8+632]
	084 Move X23, 0xB2F000
	085 Move X21, [X21+1616]
	086 Move X24, [X24+1648]
	087 Move X23, [X23+1928]
	088 Move X2, X0
	089 Move X0, X20
	090 NotImplemented "Instruction BLR not yet implemented."
	091 Move X8, [X19]
	092 Move X0, X19
	093 Move X9, [X8+392]
	094 Move X1, [X8+400]
	095 NotImplemented "Instruction BLR not yet implemented."
	096 Move X1, X31
	097 Call JSONNode.op_Implicit, X0
	098 Move X8, [X20]
	099 Move X1, [X21]
	100 Move X2, X0
	101 Move X0, X20
	102 Move X9, [X8+632]
	103 Move X3, [X8+640]
	104 NotImplemented "Instruction BLR not yet implemented."
	105 Move X8, [X19]
	106 Move X0, X19
	107 Move X9, [X8+440]
	108 Move X1, [X8+448]
	109 NotImplemented "Instruction BLR not yet implemented."
	110 Compare X0, 0
	111 JumpIfEqual {125}
	112 Move X8, [X19]
	113 Move X0, X19
	114 Move X9, [X8+440]
	115 Move X1, [X8+448]
	116 NotImplemented "Instruction BLR not yet implemented."
	117 Move X8, [X22]
	118 Move X21, X0
	119 Move W9, [X8+224]
	120 Compare W9, 0
	121 JumpIfNotEqual {124}
	122 Move X0, X8
	123 Call 0x1C17DFC
	124 Move X0, X21
	125 Move X0, [X22]
	126 Move W8, [X0+224]
	127 Compare W8, 0
	128 JumpIfNotEqual {130}
	129 Call 0x1C17DFC
	130 Move X8, 0xB2F000
	131 Move X8, [X8+2096]
	132 Move X0, [X8]
	133 Move X1, X31
	134 Call JSONNode.op_Implicit, X0
	135 Move X8, [X20]
	136 Move X1, [X24]
	137 Move X2, X0
	138 Move X0, X20
	139 Move X9, [X8+632]
	140 Move X3, [X8+640]
	141 NotImplemented "Instruction BLR not yet implemented."
	142 Move X8, [X19]
	143 Move X0, X19
	144 Move X9, [X8+408]
	145 Move X1, [X8+416]
	146 NotImplemented "Instruction BLR not yet implemented."
	147 Move X8, [X23]
	148 Move X21, X0
	149 Move W9, [X8+224]
	150 Compare W9, 0
	151 JumpIfNotEqual {154}
	152 Move X0, X8
	153 Call 0x1C17DFC
	154 Move X0, X21
	155 Call Log.FormatDictionary, X0
	156 Compare X0, 0
	157 JumpIfEqual {209}
	158 Move X8, [X0]
	159 Move X24, 0xB5B000
	160 Move X9, [X8+360]
	161 Move X1, [X8+368]
	162 Move X24, [X24+296]
	163 NotImplemented "Instruction BLR not yet implemented."
	164 Move X8, [X22]
	165 Move X21, X0
	166 Move W9, [X8+224]
	167 Compare W9, 0
	168 JumpIfNotEqual {171}
	169 Move X0, X8
	170 Call 0x1C17DFC
	171 Move X0, X21
	172 Move X1, X31
	173 Call JSONNode.op_Implicit, X0
	174 Move X8, [X20]
	175 Move X1, [X24]
	176 Move X2, X0
	177 Move X0, X20
	178 Move X9, [X8+632]
	179 Move X3, [X8+640]
	180 NotImplemented "Instruction BLR not yet implemented."
	181 Move X19, [X19+40]
	182 Compare X19, 0
	183 JumpIfEqual {200}
	184 Move X0, [X23]
	185 Move X21, 0xB67000
	186 Move W8, [X0+224]
	187 Move X21, [X21+4040]
	188 Compare W8, 0
	189 JumpIfNotEqual {191}
	190 Call 0x1C17DFC
	191 Move X0, X19
	192 Call Log.ExceptionToJSON, X0
	193 Move X8, [X20]
	194 Move X1, [X21]
	195 Move X2, X0
	196 Move X0, X20
	197 Move X9, [X8+632]
	198 Move X3, [X8+640]
	199 NotImplemented "Instruction BLR not yet implemented."
	200 Move X0, X20
	201 Move X20, [X31+48]
	202 Move X19, [X31+56]
	203 Move X22, [X31+32]
	204 Move X21, [X31+40]
	205 Move X24, [X31+16]
	206 Move X23, [X31+24]
	207 Move X30, [X31+64]
	208 Return X0
	209 Call 0x1C17F20

Method: System.Text.StringBuilder FormatDictionary(System.Collections.IDictionary dictionary)

Disassembly:
	0x035C568C BL 0x1C16CF4
	0x035C5690 ADRP X0, 0xB58000
	0x035C5694 LDR X0, [X0 + 0x320]
	0x035C5698 BL 0x1C16CF4
	0x035C569C ADRP X0, 0xB55000
	0x035C56A0 LDR X0, [X0 + 0xD80]
	0x035C56A4 BL 0x1C16CF4
	0x035C56A8 ADRP X0, 0xB72000
	0x035C56AC LDR X0, [X0 + 0xE48]
	0x035C56B0 BL 0x1C16CF4
	0x035C56B4 ADRP X0, 0xB72000
	0x035C56B8 LDR X0, [X0 + 0xE40]
	0x035C56BC BL 0x1C16CF4
	0x035C56C0 ADRP X0, 0xB72000
	0x035C56C4 LDR X0, [X0 + 0xE80]
	0x035C56C8 BL 0x1C16CF4
	0x035C56CC ADRP X0, 0xB72000
	0x035C56D0 LDR X0, [X0 + 0xE88]
	0x035C56D4 BL 0x1C16CF4
	0x035C56D8 ADRP X0, 0xB72000
	0x035C56DC LDR X0, [X0 + 0xE90]
	0x035C56E0 BL 0x1C16CF4
	0x035C56E4 ADRP X0, 0xB72000
	0x035C56E8 LDR X0, [X0 + 0xE98]
	0x035C56EC BL 0x1C16CF4
	0x035C56F0 ADRP X0, 0xB72000
	0x035C56F4 LDR X0, [X0 + 0xEA0]
	0x035C56F8 BL 0x1C16CF4
	0x035C56FC ADRP X0, 0xB72000
	0x035C5700 LDR X0, [X0 + 0xEA8]
	0x035C5704 BL 0x1C16CF4
	0x035C5708 ADRP X0, 0xB2E000
	0x035C570C LDR X0, [X0 + 0x8F0]
	0x035C5710 BL 0x1C16CF4
	0x035C5714 ADRP X0, 0xB2E000
	0x035C5718 LDR X0, [X0 + 0x6C0]
	0x035C571C BL 0x1C16CF4
	0x035C5720 MOVZ W8, 0x1
	0x035C5724 STRB W8, [X22 + 0x1B7]
	0x035C5728 LDR X0, [X24]
	0x035C572C BL 0x1C16F10
	0x035C5730 LDR X1, [X29]
	0x035C5734 MOV X22, X0
	0x035C5738 BL 0x301B7C4
	0x035C573C STR X22, [X20 + 0x18]
	0x035C5740 LDR X0, [X26]
	0x035C5744 BL 0x1C16F10
	0x035C5748 LDR X1, [X25]
	0x035C574C MOV X22, X0
	0x035C5750 BL 0x2DBDE08
	0x035C5754 STR X22, [X20 + 0x20]
	0x035C5758 LDR X0, [X23]
	0x035C575C BL 0x1C16F10
	0x035C5760 LDR X1, [X19]
	0x035C5764 MOV X22, X0
	0x035C5768 BL 0x2AA4804
	0x035C576C STR X22, [X20 + 0x28]
	0x035C5770 LDR X0, [X28]
	0x035C5774 BL 0x1C16F10
	0x035C5778 LDR X1, [X27]
	0x035C577C MOV X22, X0
	0x035C5780 BL 0x2AA4804
	0x035C5784 STR X22, [X20 + 0x30]
	0x035C5788 ADRP X8, 0xB72000
	0x035C578C LDR X8, [X8 + 0xE80]
	0x035C5790 LDR X0, [X8]
	0x035C5794 BL 0x1C16F10
	0x035C5798 MOV X1, X31
	0x035C579C MOV X22, X0
	0x035C57A0 BL 0x33BDD8C
	0x035C57A4 ADRP X8, 0xB72000
	0x035C57A8 LDR X8, [X8 + 0xEA0]
	0x035C57AC LDR X0, [X8]
	0x035C57B0 BL 0x1C16F10
	0x035C57B4 ADRP X8, 0xB72000
	0x035C57B8 LDR X8, [X8 + 0xE98]
	0x035C57BC MOV X1, X22
	0x035C57C0 MOV X23, X0
	0x035C57C4 LDR X2, [X8]
	0x035C57C8 BL 0x25F6FBC
	0x035C57CC STR X23, [X20 + 0x40]
	0x035C57D0 LDR X0, [X24]
	0x035C57D4 BL 0x1C16F10
	0x035C57D8 LDR X1, [X29]
	0x035C57DC MOV X22, X0
	0x035C57E0 BL 0x301B7C4
	0x035C57E4 STR X22, [X20 + 0x48]
	0x035C57E8 ADRP X8, 0xB72000
	0x035C57EC LDR X8, [X8 + 0xE90]
	0x035C57F0 LDR X0, [X8]
	0x035C57F4 BL 0x1C16F10
	0x035C57F8 ADRP X8, 0xB72000
	0x035C57FC LDR X8, [X8 + 0xE88]
	0x035C5800 MOV X22, X0
	0x035C5804 LDR X1, [X8]
	0x035C5808 BL 0x24F1248
	0x035C580C STR X22, [X20 + 0x68]
	0x035C5810 ADRP X8, 0xB2E000
	0x035C5814 LDR X8, [X8 + 0x8F0]
	0x035C5818 LDR X0, [X8]
	0x035C581C BL 0x1C16F10
	0x035C5820 MOV X1, X31
	0x035C5824 MOV X22, X0
	0x035C5828 BL 0x3231AC4
	0x035C582C MOV X0, X20
	0x035C5830 MOV X1, X31
	0x035C5834 STR X22, [X20 + 0x78]
	0x035C5838 BL 0x33BDD8C
	0x035C583C ADRP X8, 0xB72000
	0x035C5840 LDR X8, [X8 + 0xEA8]
	0x035C5844 LDR X0, [X8]
	0x035C5848 BL 0x1C16F10
	0x035C584C MOV X1, X21
	0x035C5850 MOV X22, X0
	0x035C5854 BL 0x35C5A98
	0x035C5858 STR X22, [X20 + 0x50]
	0x035C585C ADRP X8, 0xB2E000
	0x035C5860 LDR X8, [X8 + 0x6C0]
	0x035C5864 ADRP X24, 0xB55000
	0x035C5868 LDR X0, [X8]
	0x035C586C LDR W8, [X0 + 0xE0]
	0x035C5870 LDR X24, [X24 + 0xD68]
	0x035C5874 LDR X22, [X24]
	0x035C5878 CBNZ W8, 0x35C5880
	0x035C587C BL 0x1C16DFC
	0x035C5880 MOV X0, X22
	0x035C5884 MOV X1, X31
	0x035C5888 BL 0x338C698
	0x035C588C CBZ X21, 0x35C5A84
	0x035C5890 ADRP X23, 0xB58000
	0x035C5894 LDR X8, [X21]
	0x035C5898 LDR X23, [X23 + 0x320]
	0x035C589C ADRP X19, 0xB55000
	0x035C58A0 MOV X22, X0
	0x035C58A4 LDRH W9, [X8 + 0x12E]
	0x035C58A8 LDR X1, [X23]
	0x035C58AC LDR X19, [X19 + 0xD80]
	0x035C58B0 CBZ X9, 0x35C58D4
	0x035C58B4 LDR X10, [X8 + 0xB0]
	0x035C58B8 ADD X10, X10, 0x8
	0x035C58BC LDUR X11, [X10 - 0x8]
	0x035C58C0 CMP X11, X1
	0x035C58C4 B.EQ 0x35C58E4
	0x035C58C8 SUBS X9, X9, 0x1
	0x035C58CC ADD X10, X10, 0x10
	0x035C58D0 B.NE 0x35C58BC
	0x035C58D4 MOVZ W2, 0x2
	0x035C58D8 MOV X0, X21
	0x035C58DC BL 0x1C5C788
	0x035C58E0 B 0x35C58F4
	0x035C58E4 LDR W9, [X10]
	0x035C58E8 ADD W9, W9, 0x2
	0x035C58EC ADD X8, X8, W9, 0x4, SXTW
	0x035C58F0 ADD X0, X8, 0x138
	0x035C58F4 LDP X8, X2, [X0]
	0x035C58F8 MOV X0, X21
	0x035C58FC MOV X1, X22
	0x035C5900 BLR X8
	0x035C5904 LDR X0, [X19]
	0x035C5908 MOV X1, X31
	0x035C590C BL 0x338C698
	0x035C5910 LDR X8, [X21]
	0x035C5914 LDR X1, [X23]
	0x035C5918 MOV X22, X0
	0x035C591C LDRH W9, [X8 + 0x12E]
	0x035C5920 CBZ X9, 0x35C5944
	0x035C5924 LDR X10, [X8 + 0xB0]
	0x035C5928 ADD X10, X10, 0x8
	0x035C592C LDUR X11, [X10 - 0x8]
	0x035C5930 CMP X11, X1
	0x035C5934 B.EQ 0x35C5954
	0x035C5938 SUBS X9, X9, 0x1
	0x035C593C ADD X10, X10, 0x10
	0x035C5940 B.NE 0x35C592C
	0x035C5944 MOVZ W2, 0x2
	0x035C5948 MOV X0, X21
	0x035C594C BL 0x1C5C788
	0x035C5950 B 0x35C5964
	0x035C5954 LDR W9, [X10]
	0x035C5958 ADD W9, W9, 0x2
	0x035C595C ADD X8, X8, W9, 0x4, SXTW
	0x035C5960 ADD X0, X8, 0x138
	0x035C5964 LDP X8, X2, [X0]
	0x035C5968 MOV X0, X21
	0x035C596C MOV X1, X22
	0x035C5970 BLR X8
	0x035C5974 LDR X0, [X24]
	0x035C5978 MOV X1, X31
	0x035C597C BL 0x338C698
	0x035C5980 LDR X8, [X21]
	0x035C5984 LDR X1, [X23]
	0x035C5988 MOV X22, X0
	0x035C598C LDRH W9, [X8 + 0x12E]
	0x035C5990 CBZ X9, 0x35C59B4
	0x035C5994 LDR X10, [X8 + 0xB0]
	0x035C5998 ADD X10, X10, 0x8
	0x035C599C LDUR X11, [X10 - 0x8]
	0x035C59A0 CMP X11, X1
	0x035C59A4 B.EQ 0x35C59C4
	0x035C59A8 SUBS X9, X9, 0x1
	0x035C59AC ADD X10, X10, 0x10
	0x035C59B0 B.NE 0x35C599C
	0x035C59B4 MOVZ W2, 0x4
	0x035C59B8 MOV X0, X21
	0x035C59BC BL 0x1C5C788
	0x035C59C0 B 0x35C59D4
	0x035C59C4 LDR W9, [X10]
	0x035C59C8 ADD W9, W9, 0x4
	0x035C59CC ADD X8, X8, W9, 0x4, SXTW
	0x035C59D0 ADD X0, X8, 0x138
	0x035C59D4 LDP X8, X2, [X0]
	0x035C59D8 MOV X0, X21
	0x035C59DC MOV X1, X22
	0x035C59E0 BLR X8
	0x035C59E4 STR W0, [X20 + 0x58]
	0x035C59E8 LDR X0, [X19]
	0x035C59EC MOV X1, X31
	0x035C59F0 BL 0x338C698
	0x035C59F4 LDR X8, [X21]
	0x035C59F8 LDR X1, [X23]
	0x035C59FC MOV X22, X0
	0x035C5A00 LDRH W9, [X8 + 0x12E]
	0x035C5A04 CBZ X9, 0x35C5A28
	0x035C5A08 LDR X10, [X8 + 0xB0]
	0x035C5A0C ADD X10, X10, 0x8
	0x035C5A10 LDUR X11, [X10 - 0x8]
	0x035C5A14 CMP X11, X1
	0x035C5A18 B.EQ 0x35C5A38
	0x035C5A1C SUBS X9, X9, 0x1
	0x035C5A20 ADD X10, X10, 0x10
	0x035C5A24 B.NE 0x35C5A10
	0x035C5A28 MOVZ W2, 0x4
	0x035C5A2C MOV X0, X21
	0x035C5A30 BL 0x1C5C788

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X19, 0xE1C000
	011 Move X21, 0xB2F000
	012 Move W8, [X19+418]
	013 Move X21, [X21+2288]
	014 Move X20, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {39}
	019 Move X0, 0xB37000
	020 Move X0, [X0+3856]
	021 Call 0x1C17CF4
	022 Move X0, 0xB2F000
	023 Move X0, [X0+2072]
	024 Call 0x1C17CF4
	025 Move X0, 0xB2F000
	026 Move X0, [X0+3584]
	027 Call 0x1C17CF4
	028 Move X0, 0xB2F000
	029 Move X0, [X0+3608]
	030 Call 0x1C17CF4
	031 Move X0, 0xB2F000
	032 Move X0, [X0+2288]
	033 Call 0x1C17CF4
	034 Move X0, 0xB73000
	035 Move X0, [X0+3584]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X19+418], W8
	039 Move X0, [X21]
	040 Call 0x1C17F10
	041 Move X1, X31
	042 Move X19, X0
	043 Call StringBuilder..ctor, X0
	044 Compare X20, 0
	045 JumpIfEqual {196}
	046 Move X10, 0xB2F000
	047 Move X8, [X20]
	048 Move X10, [X10+2072]
	049 NotImplemented "Instruction LDRH not yet implemented."
	050 Move X1, [X10]
	051 Compare X9, 0
	052 JumpIfEqual {59}
	053 Move X10, [X8+176]
	054 Add X10, X10, 8
	055 NotImplemented "Instruction LDUR not yet implemented."
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Subtract X9, X9, 1
	058 Add X10, X10, 16
	059 Move W2, 6
	060 Move X0, X20
	061 Call 0x1C5D788
	062 Move W9, [X10]
	063 Add W9, W9, 6
	064 Add X8, X8, W9
	065 Add X0, X8, 312
	066 Move X8, [X0]
	067 Move X1, [X0+8]
	068 Move X23, 0xB2F000
	069 Move X23, [X23+3584]
	070 Move X0, X20
	071 NotImplemented "Instruction BLR not yet implemented."
	072 Move X20, X0
	073 Compare X0, 0
	074 JumpIfEqual {197}
	075 Move X24, 0xB2F000
	076 Move X25, 0xB37000
	077 Move X26, 0xB73000
	078 Move X24, [X24+3608]
	079 Move X25, [X25+3856]
	080 Move X26, [X26+3584]
	081 Move X8, [X20]
	082 Move X1, [X24]
	083 NotImplemented "Instruction LDRH not yet implemented."
	084 Compare X9, 0
	085 JumpIfEqual {92}
	086 Move X10, [X8+176]
	087 Add X10, X10, 8
	088 NotImplemented "Instruction LDUR not yet implemented."
	089 NotImplemented "Instruction CMP not yet implemented."
	090 Subtract X9, X9, 1
	091 Add X10, X10, 16
	092 Move X0, X20
	093 Move W2, W31
	094 Call 0x1C5D788
	095 NotImplemented "Instruction LDRSW not yet implemented."
	096 Add X8, X8, X9
	097 Add X0, X8, 312
	098 Move X8, [X0]
	099 Move X1, [X0+8]
	100 Move X0, X20
	101 NotImplemented "Instruction BLR not yet implemented."
	102 Move TEMP, X0
	103 And TEMP, TEMP, 1
	104 Compare TEMP, 1
	105 JumpIfNotEqual {152}
	106 Move X8, [X20]
	107 Move X1, [X24]
	108 NotImplemented "Instruction LDRH not yet implemented."
	109 Compare X9, 0
	110 JumpIfEqual {117}
	111 Move X10, [X8+176]
	112 Add X10, X10, 8
	113 NotImplemented "Instruction LDUR not yet implemented."
	114 NotImplemented "Instruction CMP not yet implemented."
	115 Subtract X9, X9, 1
	116 Add X10, X10, 16
	117 Move W2, 1
	118 Move X0, X20
	119 Call 0x1C5D788
	120 Move W9, [X10]
	121 Add W9, W9, 1
	122 Add X8, X8, W9
	123 Add X0, X8, 312
	124 Move X8, [X0]
	125 Move X1, [X0+8]
	126 Move X0, X20
	127 NotImplemented "Instruction BLR not yet implemented."
	128 Compare X0, 0
	129 JumpIfEqual {193}
	130 Move X8, [X0]
	131 Move X1, [X25]
	132 Move X8, [X8+64]
	133 Move X9, [X1+64]
	134 NotImplemented "Instruction CMP not yet implemented."
	135 Call 0x1C17E08
	136 Compare X19, 0
	137 JumpIfEqual {194}
	138 Move X21, [X0]
	139 Move X22, [X0+8]
	140 Move X0, X19
	141 Move X1, X31
	142 Call StringBuilder.AppendLine, X0
	143 Move X0, [X26]
	144 Move X1, X21
	145 Move X2, X22
	146 Move X3, X31
	147 Call String.Format, X0, X1, X2
	148 Move X1, X0
	149 Move X0, X19
	150 Move X2, X31
	151 Call StringBuilder.Append, X0, X1
	152 Move X21, X31
	153 Move X1, [X23]
	154 Move X0, X20
	155 Call 0x1C17E00
	156 Compare X0, 0
	157 JumpIfEqual {180}
	158 Move X8, [X0]
	159 Move X1, [X23]
	160 Move X20, X0
	161 NotImplemented "Instruction LDRH not yet implemented."
	162 Compare X9, 0
	163 JumpIfEqual {170}
	164 Move X10, [X8+176]
	165 Add X10, X10, 8
	166 NotImplemented "Instruction LDUR not yet implemented."
	167 NotImplemented "Instruction CMP not yet implemented."
	168 Subtract X9, X9, 1
	169 Add X10, X10, 16
	170 Move X0, X20
	171 Move W2, W31
	172 Call 0x1C5D788
	173 NotImplemented "Instruction LDRSW not yet implemented."
	174 Add X8, X8, X9
	175 Add X0, X8, 312
	176 Move X8, [X0]
	177 Move X1, [X0+8]
	178 Move X0, X20
	179 NotImplemented "Instruction BLR not yet implemented."
	180 Compare X21, 0
	181 JumpIfNotEqual {198}
	182 Move X0, X19
	183 Move X20, [X31+64]
	184 Move X19, [X31+72]
	185 Move X22, [X31+48]
	186 Move X21, [X31+56]
	187 Move X24, [X31+32]
	188 Move X23, [X31+40]
	189 Move X26, [X31+16]
	190 Move X25, [X31+24]
	191 Move X30, [X31+80]
	192 Return X0
	193 Call 0x1C17F20
	194 Call 0x1C17F20
	195 Call 0x1C181E0
	196 Call 0x1C17F20
	197 Call 0x1C17F20
	198 Move X0, X21
	199 Call 0x1C17F18
	200 NotImplemented "Instruction CMP not yet implemented."
	201 Call 0x3EB2AD0
	202 Move X21, [X0]
	203 Call 0x3EB2AE0
	204 Move X19, X0
	205 Move X21, X31
	206 Move X19, X0
	207 Move X1, [X23]
	208 Move X0, X20
	209 Call 0x1C17E00
	210 Move X20, X0
	211 Compare X0, 0
	212 JumpIfEqual {234}
	213 Move X8, [X20]
	214 Move X1, [X23]
	215 NotImplemented "Instruction LDRH not yet implemented."
	216 Compare X9, 0
	217 JumpIfEqual {224}
	218 Move X10, [X8+176]
	219 Add X10, X10, 8
	220 NotImplemented "Instruction LDUR not yet implemented."
	221 NotImplemented "Instruction CMP not yet implemented."
	222 Subtract X9, X9, 1
	223 Add X10, X10, 16
	224 Move X0, X20
	225 Move W2, W31
	226 Call 0x1C5D788
	227 NotImplemented "Instruction LDRSW not yet implemented."
	228 Add X8, X8, X9
	229 Add X0, X8, 312
	230 Move X8, [X0]
	231 Move X1, [X0+8]
	232 Move X0, X20
	233 NotImplemented "Instruction BLR not yet implemented."
	234 Compare X21, 0
	235 JumpIfNotEqual {238}
	236 Move X0, X19
	237 Call 0x1D2D690
	238 Move X0, X21
	239 Call 0x1C17F18
	240 Call 0x1991590

Method: System.Void AddFields(SimpleJSON.JSONObject json, System.Collections.IDictionary data)

Disassembly:
	0x035C40A0 CBZ X26, 0x35C43E0
	0x035C40A4 MOV X23, X22
	0x035C40A8 ADRP X19, 0xB2F000
	0x035C40AC ADRP X27, 0xB73000
	0x035C40B0 ADRP X22, 0xB73000
	0x035C40B4 LDR X19, [X19 + 0x758]
	0x035C40B8 LDR X27, [X27 + 0xDE0]
	0x035C40BC LDR X22, [X22 + 0xDE8]
	0x035C40C0 LDR W1, [X8 + 0x10]
	0x035C40C4 ADRP X28, 0xB73000
	0x035C40C8 LDR X28, [X28 + 0xD60]
	0x035C40CC MOV X0, X26
	0x035C40D0 MOV X2, X31
	0x035C40D4 BL 0x322B484
	0x035C40D8 MOV X26, X0
	0x035C40DC LDR X0, [X19]
	0x035C40E0 LDR W8, [X31 + 0xC]
	0x035C40E4 ADD X1, X31, 0x1C
	0x035C40E8 STR W8, [X31 + 0x1C]
	0x035C40EC BL 0x1C16E04
	0x035C40F0 LDR X8, [X27]
	0x035C40F4 LDR X3, [X31 + 0x10]
	0x035C40F8 MOV X2, X0
	0x035C40FC MOV X1, X26
	0x035C4100 MOV X0, X8
	0x035C4104 MOV X4, X31
	0x035C4108 BL 0x3227C18
	0x035C410C MOV X1, X31
	0x035C4110 BL 0x35ACF6C
	0x035C4114 LDR X8, [X21]
	0x035C4118 LDR X1, [X22]
	0x035C411C MOV X2, X0
	0x035C4120 MOV X0, X21
	0x035C4124 LDR X9, [X8 + 0x278]
	0x035C4128 LDR X3, [X8 + 0x280]
	0x035C412C BLR X9
	0x035C4130 LDR X8, [X29]
	0x035C4134 MOV X1, X31
	0x035C4138 LDR X8, [X8 + 0xB8]
	0x035C413C LDR W0, [X8 + 0x20]
	0x035C4140 BL 0x35AD530
	0x035C4144 LDR X8, [X21]
	0x035C4148 LDR X1, [X28]
	0x035C414C MOV X2, X0
	0x035C4150 MOV X0, X21
	0x035C4154 LDR X9, [X8 + 0x278]
	0x035C4158 LDR X3, [X8 + 0x280]
	0x035C415C BLR X9
	0x035C4160 MOV X0, X31
	0x035C4164 BL 0x33E3C68
	0x035C4168 LDR X8, [X29]
	0x035C416C MOV X1, X31
	0x035C4170 LDR X8, [X8 + 0xB8]
	0x035C4174 LDR X8, [X8 + 0x28]
	0x035C4178 CMP X0, X8
	0x035C417C CSET W0, EQ
	0x035C4180 BL 0x35AD8D0
	0x035C4184 ADRP X9, 0xB73000
	0x035C4188 LDR X8, [X21]
	0x035C418C LDR X9, [X9 + 0xD80]
	0x035C4190 MOV X2, X0
	0x035C4194 MOV X0, X21
	0x035C4198 LDR X3, [X8 + 0x280]
	0x035C419C LDR X1, [X9]
	0x035C41A0 LDR X9, [X8 + 0x278]
	0x035C41A4 BLR X9
	0x035C41A8 CBZ X25, 0x35C41D0
	0x035C41AC ADRP X22, 0xB30000
	0x035C41B0 LDR X22, [X22 + 0x460]
	0x035C41B4 MOV X19, X23
	0x035C41B8 LDR X0, [X22]
	0x035C41BC LDR W8, [X0 + 0xE0]
	0x035C41C0 CBNZ W8, 0x35C41C8
	0x035C41C4 BL 0x1C16DFC
	0x035C41C8 MOV X0, X25
	0x035C41CC B 0x35C423C
	0x035C41D0 ADRP X22, 0xB30000
	0x035C41D4 LDR X22, [X22 + 0x460]
	0x035C41D8 MOV X19, X23
	0x035C41DC CBZ X20, 0x35C4268
	0x035C41E0 MOV X0, X20
	0x035C41E4 MOV X1, X31
	0x035C41E8 BL 0x33B32AC
	0x035C41EC LDR X8, [X20]
	0x035C41F0 MOV X23, X0
	0x035C41F4 MOV X0, X20
	0x035C41F8 LDP X9, X1, [X8 + 0x188]
	0x035C41FC BLR X9
	0x035C4200 ADRP X8, 0xB73000
	0x035C4204 LDR X8, [X8 + 0xDD0]
	0x035C4208 MOV X2, X0
	0x035C420C MOV X1, X23
	0x035C4210 MOV X3, X31
	0x035C4214 LDR X8, [X8]
	0x035C4218 MOV X0, X8
	0x035C421C BL 0x3227BD4
	0x035C4220 LDR X8, [X22]
	0x035C4224 MOV X23, X0
	0x035C4228 LDR W9, [X8 + 0xE0]
	0x035C422C CBNZ W9, 0x35C4238
	0x035C4230 MOV X0, X8
	0x035C4234 BL 0x1C16DFC
	0x035C4238 MOV X0, X23
	0x035C423C MOV X1, X31
	0x035C4240 BL 0x35ACF6C
	0x035C4244 ADRP X9, 0xB73000
	0x035C4248 LDR X8, [X21]
	0x035C424C LDR X9, [X9 + 0xD78]
	0x035C4250 MOV X2, X0
	0x035C4254 MOV X0, X21
	0x035C4258 LDR X3, [X8 + 0x280]
	0x035C425C LDR X1, [X9]
	0x035C4260 LDR X9, [X8 + 0x278]
	0x035C4264 BLR X9
	0x035C4268 SUB W8, W24, 0x1
	0x035C426C CMP W8, 0x1
	0x035C4270 B.HI 0x35C42DC
	0x035C4274 ADRP X8, 0xB73000
	0x035C4278 LDR X8, [X8 + 0xDC8]
	0x035C427C LDR X0, [X8]
	0x035C4280 LDR W8, [X0 + 0xE0]
	0x035C4284 CBNZ W8, 0x35C428C
	0x035C4288 BL 0x1C16DFC
	0x035C428C MOV X0, X31
	0x035C4290 BL 0x3C36F80
	0x035C4294 LDR X8, [X22]
	0x035C4298 MOV X22, X0
	0x035C429C LDR W9, [X8 + 0xE0]
	0x035C42A0 CBNZ W9, 0x35C42AC
	0x035C42A4 MOV X0, X8
	0x035C42A8 BL 0x1C16DFC
	0x035C42AC MOV X0, X22
	0x035C42B0 MOV X1, X31
	0x035C42B4 BL 0x35ACF6C
	0x035C42B8 ADRP X9, 0xB3B000
	0x035C42BC LDR X8, [X21]
	0x035C42C0 LDR X9, [X9 + 0x670]
	0x035C42C4 MOV X2, X0
	0x035C42C8 MOV X0, X21
	0x035C42CC LDR X3, [X8 + 0x280]
	0x035C42D0 LDR X1, [X9]
	0x035C42D4 LDR X9, [X8 + 0x278]
	0x035C42D8 BLR X9
	0x035C42DC CBZ X20, 0x35C431C
	0x035C42E0 LDR X0, [X29]
	0x035C42E4 ADRP X22, 0xB60000
	0x035C42E8 LDR W8, [X0 + 0xE0]
	0x035C42EC LDR X22, [X22 + 0x910]
	0x035C42F0 CBNZ W8, 0x35C42F8
	0x035C42F4 BL 0x1C16DFC
	0x035C42F8 MOV X0, X20
	0x035C42FC BL 0x35C4A34
	0x035C4300 LDR X8, [X21]
	0x035C4304 LDR X1, [X22]
	0x035C4308 MOV X2, X0
	0x035C430C MOV X0, X21
	0x035C4310 LDR X9, [X8 + 0x278]
	0x035C4314 LDR X3, [X8 + 0x280]
	0x035C4318 BLR X9
	0x035C431C CBZ X19, 0x35C437C
	0x035C4320 ADRP X8, 0xB57000
	0x035C4324 LDR X8, [X8 + 0xBC0]
	0x035C4328 ADRP X22, 0xB73000
	0x035C432C LDR X0, [X8]
	0x035C4330 LDR X22, [X22 + 0xDD8]
	0x035C4334 BL 0x1C16F10
	0x035C4338 MOV X1, X31
	0x035C433C MOV X20, X0
	0x035C4340 BL 0x35AE864
	0x035C4344 LDR X0, [X29]
	0x035C4348 LDR W8, [X0 + 0xE0]
	0x035C434C CBNZ W8, 0x35C4354
	0x035C4350 BL 0x1C16DFC
	0x035C4354 MOV X0, X20
	0x035C4358 MOV X1, X19
	0x035C435C BL 0x35C30A0
	0x035C4360 LDR X8, [X21]
	0x035C4364 LDR X1, [X22]
	0x035C4368 MOV X0, X21
	0x035C436C MOV X2, X20
	0x035C4370 LDR X9, [X8 + 0x278]
	0x035C4374 LDR X3, [X8 + 0x280]
	0x035C4378 BLR X9
	0x035C437C LDR X0, [X29]
	0x035C4380 ADRP X19, 0xB30000
	0x035C4384 LDR W8, [X0 + 0xE0]
	0x035C4388 LDR X19, [X19 + 0x2C8]
	0x035C438C CBNZ W8, 0x35C4398
	0x035C4390 BL 0x1C16DFC
	0x035C4394 LDR X0, [X29]
	0x035C4398 LDR X8, [X0 + 0xB8]
	0x035C439C MOV X0, X21
	0x035C43A0 LDR X1, [X8 + 0x18]
	0x035C43A4 BL 0x35C30A0
	0x035C43A8 LDR X0, [X19]
	0x035C43AC LDR W8, [X0 + 0xE0]
	0x035C43B0 CBNZ W8, 0x35C43B8
	0x035C43B4 BL 0x1C16DFC
	0x035C43B8 MOV X0, X21
	0x035C43BC BL 0x35C38D0
	0x035C43C0 LDP X20, X19, [X31 + 0xA0]
	0x035C43C4 LDP X22, X21, [X31 + 0x90]
	0x035C43C8 LDP X24, X23, [X31 + 0x80]
	0x035C43CC LDP X26, X25, [X31 + 0x70]
	0x035C43D0 LDP X28, X27, [X31 + 0x60]
	0x035C43D4 LDP X29, X30, [X31 + 0x50]
	0x035C43D8 ADD X31, X31, 0xB0
	0x035C43DC RET
	0x035C43E0 BL 0x1C16F20
	0x035C43E4 STR X30, [X31 - 0x30]!
	0x035C43E8 STP X22, X21, [X31 + 0x10]
	0x035C43EC STP X20, X19, [X31 + 0x20]
	0x035C43F0 ADRP X20, 0xE1C000
	0x035C43F4 ADRP X21, 0xB2F000
	0x035C43F8 LDRB W8, [X20 + 0x1A0]
	0x035C43FC LDR X21, [X21 + 0x8F0]
	0x035C4400 MOV X19, X0
	0x035C4404 TBNZ X8, 0x0, 0x35C4458
	0x035C4408 ADRP X0, 0xB36000
	0x035C440C LDR X0, [X0 + 0x2F0]
	0x035C4410 BL 0x1C16CF4
	0x035C4414 ADRP X0, 0xB2F000
	0x035C4418 LDR X0, [X0 + 0x788]
	0x035C441C BL 0x1C16CF4
	0x035C4420 ADRP X0, 0xB2F000
	0x035C4424 LDR X0, [X0 + 0x8F0]
	0x035C4428 BL 0x1C16CF4
	0x035C442C ADRP X0, 0xB73000
	0x035C4430 LDR X0, [X0 + 0xDF0]
	0x035C4434 BL 0x1C16CF4
	0x035C4438 ADRP X0, 0xB73000
	0x035C443C LDR X0, [X0 + 0xDF8]
	0x035C4440 BL 0x1C16CF4
	0x035C4444 ADRP X0, 0xB5F000
	0x035C4448 LDR X0, [X0 + 0xB28]
	0x035C444C BL 0x1C16CF4
	0x035C4450 MOVZ W8, 0x1
	0x035C4454 STRB W8, [X20 + 0x1A0]
	0x035C4458 LDR X0, [X21]
	0x035C445C BL 0x1C16F10
	0x035C4460 MOV X1, X31
	0x035C4464 MOV X20, X0
	0x035C4468 BL 0x3231AC4
	0x035C446C CBZ X19, 0x35C4688
	0x035C4470 ADRP X22, 0xB5F000
	0x035C4474 LDR X22, [X22 + 0xB28]
	0x035C4478 MOV X0, X19
	0x035C447C MOV X1, X31
	0x035C4480 BL 0x33B32AC
	0x035C4484 LDR X8, [X19]
	0x035C4488 MOV X21, X0
	0x035C448C MOV X0, X19
	0x035C4490 LDP X9, X1, [X8 + 0x188]
	0x035C4494 BLR X9
	0x035C4498 LDR X8, [X22]
	0x035C449C MOV X2, X0
	0x035C44A0 MOV X1, X21
	0x035C44A4 MOV X3, X31
	0x035C44A8 MOV X0, X8
	0x035C44AC BL 0x3227BD4
	0x035C44B0 CBZ X20, 0x35C4688
	0x035C44B4 MOV X1, X0
	0x035C44B8 MOV X0, X20
	0x035C44BC MOV X2, X31
	0x035C44C0 BL 0x32333E0
	0x035C44C4 LDR X8, [X19]
	0x035C44C8 MOV X0, X19
	0x035C44CC LDP X9, X1, [X8 + 0x1B8]
	0x035C44D0 BLR X9
	0x035C44D4 CBZ X0, 0x35C4504
	0x035C44D8 MOV X0, X20
	0x035C44DC MOV X1, X31
	0x035C44E0 BL 0x3233888
	0x035C44E4 LDR X8, [X19]
	0x035C44E8 MOV X0, X19
	0x035C44EC LDP X9, X1, [X8 + 0x1B8]
	0x035C44F0 BLR X9
	0x035C44F4 MOV X1, X0
	0x035C44F8 MOV X0, X20
	0x035C44FC MOV X2, X31
	0x035C4500 BL 0x32333E0
	0x035C4504 LDR X8, [X19]
	0x035C4508 ADRP X22, 0xB2F000
	0x035C450C MOV X0, X19
	0x035C4510 LDP X9, X1, [X8 + 0x198]
	0x035C4514 LDR X22, [X22 + 0x788]
	0x035C4518 BLR X9
	0x035C451C CBZ X0, 0x35C4610
	0x035C4520 LDR X8, [X19]
	0x035C4524 MOV X0, X19
	0x035C4528 LDP X9, X1, [X8 + 0x198]
	0x035C452C BLR X9
	0x035C4530 CBZ X0, 0x35C4688
	0x035C4534 ADRP X10, 0xB36000
	0x035C4538 LDR X8, [X0]
	0x035C453C LDR X10, [X10 + 0x2F0]
	0x035C4540 MOV X21, X0
	0x035C4544 LDRH W9, [X8 + 0x12E]
	0x035C4548 LDR X1, [X10]
	0x035C454C CBZ X9, 0x35C4570
	0x035C4550 LDR X10, [X8 + 0xB0]
	0x035C4554 ADD X10, X10, 0x8
	0x035C4558 LDUR X11, [X10 - 0x8]
	0x035C455C CMP X11, X1
	0x035C4560 B.EQ 0x35C4580
	0x035C4564 SUBS X9, X9, 0x1
	0x035C4568 ADD X10, X10, 0x10
	0x035C456C B.NE 0x35C4558
	0x035C4570 MOVZ W2, 0x1
	0x035C4574 MOV X0, X21
	0x035C4578 BL 0x1C5C788
	0x035C457C B 0x35C4590
	0x035C4580 LDR W9, [X10]
	0x035C4584 ADD W9, W9, 0x1
	0x035C4588 ADD X8, X8, W9, 0x4, SXTW
	0x035C458C ADD X0, X8, 0x138
	0x035C4590 LDP X8, X1, [X0]
	0x035C4594 MOV X0, X21
	0x035C4598 BLR X8
	0x035C459C CBZ W0, 0x35C4610
	0x035C45A0 MOV X0, X20
	0x035C45A4 MOV X1, X31
	0x035C45A8 BL 0x3233888
	0x035C45AC MOV X0, X20
	0x035C45B0 MOV X1, X31
	0x035C45B4 BL 0x3233888
	0x035C45B8 ADRP X8, 0xB73000
	0x035C45BC LDR X8, [X8 + 0xDF0]
	0x035C45C0 MOV X0, X20
	0x035C45C4 MOV X2, X31
	0x035C45C8 LDR X1, [X8]
	0x035C45CC BL 0x32333E0
	0x035C45D0 LDR X8, [X19]
	0x035C45D4 MOV X0, X19
	0x035C45D8 LDP X9, X1, [X8 + 0x198]
	0x035C45DC BLR X9
	0x035C45E0 LDR X8, [X22]
	0x035C45E4 MOV X21, X0
	0x035C45E8 LDR W9, [X8 + 0xE0]
	0x035C45EC CBNZ W9, 0x35C45F8
	0x035C45F0 MOV X0, X8
	0x035C45F4 BL 0x1C16DFC
	0x035C45F8 MOV X0, X21
	0x035C45FC BL 0x35C468C
	0x035C4600 MOV X1, X0
	0x035C4604 MOV X0, X20
	0x035C4608 MOV X2, X31
	0x035C460C BL 0x3233654
	0x035C4610 LDR X8, [X19 + 0x28]
	0x035C4614 CBZ X8, 0x35C4674
	0x035C4618 ADRP X21, 0xB73000
	0x035C461C LDR X21, [X21 + 0xDF8]
	0x035C4620 MOV X0, X20
	0x035C4624 MOV X1, X31
	0x035C4628 BL 0x3233888
	0x035C462C MOV X0, X20
	0x035C4630 MOV X1, X31
	0x035C4634 BL 0x3233888
	0x035C4638 LDR X1, [X21]
	0x035C463C MOV X0, X20
	0x035C4640 MOV X2, X31
	0x035C4644 BL 0x32333E0
	0x035C4648 LDR X0, [X22]
	0x035C464C LDR X19, [X19 + 0x28]
	0x035C4650 LDR W8, [X0 + 0xE0]
	0x035C4654 CBNZ W8, 0x35C465C
	0x035C4658 BL 0x1C16DFC
	0x035C465C MOV X0, X19
	0x035C4660 BL 0x35C43E4
	0x035C4664 MOV X1, X0
	0x035C4668 MOV X0, X20
	0x035C466C MOV X2, X31
	0x035C4670 BL 0x3233654
	0x035C4674 MOV X0, X20
	0x035C4678 LDP X20, X19, [X31 + 0x20]
	0x035C467C LDP X22, X21, [X31 + 0x10]
	0x035C4680 LDR X30, [X31], #0x30
	0x035C4684 RET
	0x035C4688 BL 0x1C16F20
	0x035C468C STR X30, [X31 - 0x50]!
	0x035C4690 STP X26, X25, [X31 + 0x10]
	0x035C4694 STP X24, X23, [X31 + 0x20]
	0x035C4698 STP X22, X21, [X31 + 0x30]
	0x035C469C STP X20, X19, [X31 + 0x40]
	0x035C46A0 ADRP X19, 0xE1C000
	0x035C46A4 ADRP X21, 0xB2F000
	0x035C46A8 LDRB W8, [X19 + 0x1A2]
	0x035C46AC LDR X21, [X21 + 0x8F0]
	0x035C46B0 MOV X20, X0
	0x035C46B4 TBNZ X8, 0x0, 0x35C4708
	0x035C46B8 ADRP X0, 0xB37000
	0x035C46BC LDR X0, [X0 + 0xF10]
	0x035C46C0 BL 0x1C16CF4
	0x035C46C4 ADRP X0, 0xB2F000
	0x035C46C8 LDR X0, [X0 + 0x818]
	0x035C46CC BL 0x1C16CF4
	0x035C46D0 ADRP X0, 0xB2F000
	0x035C46D4 LDR X0, [X0 + 0xE00]
	0x035C46D8 BL 0x1C16CF4
	0x035C46DC ADRP X0, 0xB2F000
	0x035C46E0 LDR X0, [X0 + 0xE18]
	0x035C46E4 BL 0x1C16CF4
	0x035C46E8 ADRP X0, 0xB2F000
	0x035C46EC LDR X0, [X0 + 0x8F0]
	0x035C46F0 BL 0x1C16CF4
	0x035C46F4 ADRP X0, 0xB73000
	0x035C46F8 LDR X0, [X0 + 0xE00]
	0x035C46FC BL 0x1C16CF4
	0x035C4700 MOVZ W8, 0x1
	0x035C4704 STRB W8, [X19 + 0x1A2]
	0x035C4708 LDR X0, [X21]
	0x035C470C BL 0x1C16F10
	0x035C4710 MOV X1, X31
	0x035C4714 MOV X19, X0
	0x035C4718 BL 0x3231AC4
	0x035C471C CBZ X20, 0x35C495C
	0x035C4720 ADRP X10, 0xB2F000
	0x035C4724 LDR X8, [X20]
	0x035C4728 LDR X10, [X10 + 0x818]
	0x035C472C LDRH W9, [X8 + 0x12E]
	0x035C4730 LDR X1, [X10]
	0x035C4734 CBZ X9, 0x35C4758
	0x035C4738 LDR X10, [X8 + 0xB0]
	0x035C473C ADD X10, X10, 0x8
	0x035C4740 LDUR X11, [X10 - 0x8]
	0x035C4744 CMP X11, X1
	0x035C4748 B.EQ 0x35C4768
	0x035C474C SUBS X9, X9, 0x1
	0x035C4750 ADD X10, X10, 0x10
	0x035C4754 B.NE 0x35C4740
	0x035C4758 MOVZ W2, 0x6
	0x035C475C MOV X0, X20
	0x035C4760 BL 0x1C5C788
	0x035C4764 B 0x35C4778
	0x035C4768 LDR W9, [X10]
	0x035C476C ADD W9, W9, 0x6
	0x035C4770 ADD X8, X8, W9, 0x4, SXTW
	0x035C4774 ADD X0, X8, 0x138
	0x035C4778 LDP X8, X1, [X0]
	0x035C477C ADRP X23, 0xB2F000
	0x035C4780 LDR X23, [X23 + 0xE00]
	0x035C4784 MOV X0, X20
	0x035C4788 BLR X8
	0x035C478C MOV X20, X0
	0x035C4790 CBZ X0, 0x35C4960
	0x035C4794 ADRP X24, 0xB2F000
	0x035C4798 ADRP X25, 0xB37000
	0x035C479C ADRP X26, 0xB73000
	0x035C47A0 LDR X24, [X24 + 0xE18]
	0x035C47A4 LDR X25, [X25 + 0xF10]
	0x035C47A8 LDR X26, [X26 + 0xE00]
	0x035C47AC LDR X8, [X20]
	0x035C47B0 LDR X1, [X24]
	0x035C47B4 LDRH W9, [X8 + 0x12E]
	0x035C47B8 CBZ X9, 0x35C47DC
	0x035C47BC LDR X10, [X8 + 0xB0]
	0x035C47C0 ADD X10, X10, 0x8
	0x035C47C4 LDUR X11, [X10 - 0x8]
	0x035C47C8 CMP X11, X1
	0x035C47CC B.EQ 0x35C47EC
	0x035C47D0 SUBS X9, X9, 0x1
	0x035C47D4 ADD X10, X10, 0x10
	0x035C47D8 B.NE 0x35C47C4
	0x035C47DC MOV X0, X20
	0x035C47E0 MOV W2, W31
	0x035C47E4 BL 0x1C5C788
	0x035C47E8 B 0x35C47F8
	0x035C47EC LDRSW X9, [X10]
	0x035C47F0 ADD X8, X8, X9, 0x4, LSL
	0x035C47F4 ADD X0, X8, 0x138
	0x035C47F8 LDP X8, X1, [X0]
	0x035C47FC MOV X0, X20
	0x035C4800 BLR X8
	0x035C4804 TBZ X0, 0x0, 0x35C48C0
	0x035C4808 LDR X8, [X20]
	0x035C480C LDR X1, [X24]
	0x035C4810 LDRH W9, [X8 + 0x12E]
	0x035C4814 CBZ X9, 0x35C4838
	0x035C4818 LDR X10, [X8 + 0xB0]
	0x035C481C ADD X10, X10, 0x8
	0x035C4820 LDUR X11, [X10 - 0x8]
	0x035C4824 CMP X11, X1
	0x035C4828 B.EQ 0x35C4848
	0x035C482C SUBS X9, X9, 0x1
	0x035C4830 ADD X10, X10, 0x10
	0x035C4834 B.NE 0x35C4820
	0x035C4838 MOVZ W2, 0x1
	0x035C483C MOV X0, X20
	0x035C4840 BL 0x1C5C788
	0x035C4844 B 0x35C4858
	0x035C4848 LDR W9, [X10]
	0x035C484C ADD W9, W9, 0x1
	0x035C4850 ADD X8, X8, W9, 0x4, SXTW
	0x035C4854 ADD X0, X8, 0x138
	0x035C4858 LDP X8, X1, [X0]
	0x035C485C MOV X0, X20
	0x035C4860 BLR X8
	0x035C4864 CBZ X0, 0x35C4950
	0x035C4868 LDR X8, [X0]
	0x035C486C LDR X1, [X25]
	0x035C4870 LDR X8, [X8 + 0x40]
	0x035C4874 LDR X9, [X1 + 0x40]
	0x035C4878 CMP X8, X9
	0x035C487C B.NE 0x35C4958
	0x035C4880 BL 0x1C16E08
	0x035C4884 CBZ X19, 0x35C4954
	0x035C4888 LDP X21, X22, [X0]
	0x035C488C MOV X0, X19
	0x035C4890 MOV X1, X31
	0x035C4894 BL 0x3233888
	0x035C4898 LDR X0, [X26]
	0x035C489C MOV X1, X21
	0x035C48A0 MOV X2, X22
	0x035C48A4 MOV X3, X31
	0x035C48A8 BL 0x3227BD4
	0x035C48AC MOV X1, X0
	0x035C48B0 MOV X0, X19
	0x035C48B4 MOV X2, X31
	0x035C48B8 BL 0x32333E0
	0x035C48BC B 0x35C47AC
	0x035C48C0 MOV X21, X31
	0x035C48C4 LDR X1, [X23]
	0x035C48C8 MOV X0, X20
	0x035C48CC BL 0x1C16E00

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X21, 0xE1D000
	014 Move W8, [X21+419]
	015 Move X19, X1
	016 Move X20, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {62}
	021 Move X0, 0xB30000
	022 Move X0, [X0+2904]
	023 Call 0x1C17CF4
	024 Move X0, 0xB39000
	025 Move X0, [X0+2536]
	026 Call 0x1C17CF4
	027 Move X0, 0xB38000
	028 Move X0, [X0+3856]
	029 Call 0x1C17CF4
	030 Move X0, 0xB30000
	031 Move X0, [X0+2000]
	032 Call 0x1C17CF4
	033 Move X0, 0xB30000
	034 Move X0, [X0+2072]
	035 Call 0x1C17CF4
	036 Move X0, 0xB30000
	037 Move X0, [X0+3584]
	038 Call 0x1C17CF4
	039 Move X0, 0xB30000
	040 Move X0, [X0+3608]
	041 Call 0x1C17CF4
	042 Move X0, 0xB30000
	043 Move X0, [X0+1880]
	044 Call 0x1C17CF4
	045 Move X0, 0xB32000
	046 Move X0, [X0+2656]
	047 Call 0x1C17CF4
	048 Move X0, 0xB31000
	049 Move X0, [X0+1120]
	050 Call 0x1C17CF4
	051 Move X0, 0xB30000
	052 Move X0, [X0+1928]
	053 Call 0x1C17CF4
	054 Move X0, 0xB30000
	055 Move X0, [X0+2704]
	056 Call 0x1C17CF4
	057 Move X0, 0xB30000
	058 Move X0, [X0+2096]
	059 Call 0x1C17CF4
	060 Move W8, 1
	061 Move [X21+419], W8
	062 Compare X19, 0
	063 JumpIfEqual {431}
	064 Move X10, 0xB30000
	065 Move X8, [X19]
	066 Move X10, [X10+2072]
	067 NotImplemented "Instruction LDRH not yet implemented."
	068 Move X1, [X10]
	069 Compare X9, 0
	070 JumpIfEqual {77}
	071 Move X10, [X8+176]
	072 Add X10, X10, 8
	073 NotImplemented "Instruction LDUR not yet implemented."
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Subtract X9, X9, 1
	076 Add X10, X10, 16
	077 Move W2, 6
	078 Move X0, X19
	079 Call 0x1C5D788
	080 Move W9, [X10]
	081 Add W9, W9, 6
	082 Add X8, X8, W9
	083 Add X0, X8, 312
	084 Move X8, [X0]
	085 Move X1, [X0+8]
	086 Move X0, X19
	087 NotImplemented "Instruction BLR not yet implemented."
	088 Move X19, X0
	089 Compare X0, 0
	090 JumpIfEqual {464}
	091 Move X24, 0xB30000
	092 Move X25, 0xB38000
	093 Move X27, 0xB31000
	094 Move X28, 0xB30000
	095 Move X29, 0xB32000
	096 Move X23, 0xB30000
	097 Move X24, [X24+3608]
	098 Move X25, [X25+3856]
	099 Move X27, [X27+1120]
	100 Move X28, [X28+1880]
	101 Move X29, [X29+2656]
	102 Move X23, [X23+2704]
	103 Move X8, [X19]
	104 Move X1, [X24]
	105 NotImplemented "Instruction LDRH not yet implemented."
	106 Compare X9, 0
	107 JumpIfEqual {114}
	108 Move X10, [X8+176]
	109 Add X10, X10, 8
	110 NotImplemented "Instruction LDUR not yet implemented."
	111 NotImplemented "Instruction CMP not yet implemented."
	112 Subtract X9, X9, 1
	113 Add X10, X10, 16
	114 Move X0, X19
	115 Move W2, W31
	116 Call 0x1C5D788
	117 NotImplemented "Instruction LDRSW not yet implemented."
	118 Add X8, X8, X9
	119 Add X0, X8, 312
	120 Move X8, [X0]
	121 Move X1, [X0+8]
	122 Move X0, X19
	123 NotImplemented "Instruction BLR not yet implemented."
	124 Move TEMP, X0
	125 And TEMP, TEMP, 1
	126 Compare TEMP, 1
	127 JumpIfNotEqual {399}
	128 Move X8, [X19]
	129 Move X1, [X24]
	130 NotImplemented "Instruction LDRH not yet implemented."
	131 Compare X9, 0
	132 JumpIfEqual {139}
	133 Move X10, [X8+176]
	134 Add X10, X10, 8
	135 NotImplemented "Instruction LDUR not yet implemented."
	136 NotImplemented "Instruction CMP not yet implemented."
	137 Subtract X9, X9, 1
	138 Add X10, X10, 16
	139 Move W2, 1
	140 Move X0, X19
	141 Call 0x1C5D788
	142 Move W9, [X10]
	143 Add W9, W9, 1
	144 Add X8, X8, W9
	145 Add X0, X8, 312
	146 Move X8, [X0]
	147 Move X1, [X0+8]
	148 Move X0, X19
	149 NotImplemented "Instruction BLR not yet implemented."
	150 Compare X0, 0
	151 JumpIfEqual {445}
	152 Move X8, [X0]
	153 Move X1, [X25]
	154 Move X8, [X8+64]
	155 Move X9, [X1+64]
	156 NotImplemented "Instruction CMP not yet implemented."
	157 Call 0x1C17E08
	158 Move X0, [X0]
	159 Move X21, [X0+8]
	160 Compare X21, 0
	161 JumpIfEqual {184}
	162 Move X9, [X28]
	163 Move X8, [X21]
	164 NotImplemented "Instruction CMP not yet implemented."
	165 Move X9, [X29]
	166 NotImplemented "Instruction CMP not yet implemented."
	167 Move X9, [X23]
	168 NotImplemented "Instruction CMP not yet implemented."
	169 Move X9, 0xB30000
	170 Move X9, [X9+2904]
	171 Move X9, [X9]
	172 NotImplemented "Instruction CMP not yet implemented."
	173 Move X9, 0xB30000
	174 Move X9, [X9+2000]
	175 Move W11, [X8+304]
	176 Move X9, [X9]
	177 Move W10, [X9+304]
	178 NotImplemented "Instruction CMP not yet implemented."
	179 Move X8, [X8+200]
	180 Add X8, X8, X10
	181 NotImplemented "Instruction LDUR not yet implemented."
	182 NotImplemented "Instruction CMP not yet implemented."
	183 Move W26, W31
	184 Move W26, 1
	185 Compare X0, 0
	186 JumpIfEqual {446}
	187 Move X8, [X0]
	188 Move X9, [X8+360]
	189 Move X1, [X8+368]
	190 NotImplemented "Instruction BLR not yet implemented."
	191 Move X22, X0
	192 Move TEMP, X26
	193 And TEMP, TEMP, 1
	194 Compare TEMP, 1
	195 JumpIfNotEqual {230}
	196 Move X8, 0xB30000
	197 Move X8, [X8+2096]
	198 Move X21, [X8]
	199 Compare X0, 0
	200 JumpIfEqual {450}
	201 Move X8, [X0]
	202 Move X9, [X8+360]
	203 Move X1, [X8+368]
	204 NotImplemented "Instruction BLR not yet implemented."
	205 Move X22, X0
	206 Move X0, [X27]
	207 Move W8, [X0+224]
	208 Compare W8, 0
	209 JumpIfNotEqual {211}
	210 Call 0x1C17DFC
	211 Move X8, [X21]
	212 Move X1, [X28]
	213 Move X8, [X8+64]
	214 Move X9, [X1+64]
	215 NotImplemented "Instruction CMP not yet implemented."
	216 Move X0, X21
	217 Call 0x1C17E08
	218 Move W0, [X0]
	219 Move X1, X31
	220 Call JSONNode.op_Implicit, X0
	221 Compare X20, 0
	222 JumpIfEqual {451}
	223 Move X8, [X20]
	224 Move X2, X0
	225 Move X9, [X8+632]
	226 Move X3, [X8+640]
	227 Move X0, X20
	228 Move X1, X22
	229 NotImplemented "Instruction BLR not yet implemented."
	230 Move X8, [X21]
	231 Move X9, [X8+360]
	232 Move X1, [X8+368]
	233 Move X0, X21
	234 NotImplemented "Instruction BLR not yet implemented."
	235 Move X21, X0
	236 Move X0, [X27]
	237 Move W8, [X0+224]
	238 Compare W8, 0
	239 JumpIfNotEqual {241}
	240 Call 0x1C17DFC
	241 Move X0, X21
	242 Move X1, X31
	243 Call JSONNode.op_Implicit, X0
	244 Compare X20, 0
	245 JumpIfEqual {447}
	246 Move X8, [X20]
	247 Move X2, X0
	248 Move X9, [X8+632]
	249 Move X3, [X8+640]
	250 Move X0, X20
	251 Move X1, X22
	252 NotImplemented "Instruction BLR not yet implemented."
	253 Compare X0, 0
	254 JumpIfEqual {454}
	255 Move X8, [X0]
	256 Move X9, [X8+360]
	257 Move X1, [X8+368]
	258 NotImplemented "Instruction BLR not yet implemented."
	259 Move X8, 0xB39000
	260 Move X8, [X8+2536]
	261 Move X22, X0
	262 Move X0, [X8]
	263 Move W8, [X0+224]
	264 Compare W8, 0
	265 JumpIfNotEqual {267}
	266 Call 0x1C17DFC
	267 Move X8, [X21]
	268 Move X1, [X29]
	269 Move X8, [X8+64]
	270 Move X9, [X1+64]
	271 NotImplemented "Instruction CMP not yet implemented."
	272 Move X0, X21
	273 Call 0x1C17E08
	274 Move X0, [X0]
	275 Move X1, X31
	276 Call Convert.ToInt32, X0
	277 Move W21, W0
	278 Move X0, [X27]
	279 Move W8, [X0+224]
	280 Compare W8, 0
	281 JumpIfNotEqual {283}
	282 Call 0x1C17DFC
	283 Move W0, W21
	284 Move X1, X31
	285 Call JSONNode.op_Implicit, X0
	286 Compare X20, 0
	287 JumpIfEqual {455}
	288 Move X8, [X20]
	289 Move X2, X0
	290 Move X9, [X8+632]
	291 Move X3, [X8+640]
	292 Move X0, X20
	293 Move X1, X22
	294 NotImplemented "Instruction BLR not yet implemented."
	295 Compare X0, 0
	296 JumpIfEqual {459}
	297 Move X8, [X0]
	298 Move X9, [X8+360]
	299 Move X1, [X8+368]
	300 NotImplemented "Instruction BLR not yet implemented."
	301 Move X22, X0
	302 Move X0, [X27]
	303 Move W8, [X0+224]
	304 Compare W8, 0
	305 JumpIfNotEqual {307}
	306 Call 0x1C17DFC
	307 Move X8, [X21]
	308 Move X1, [X23]
	309 Move X8, [X8+64]
	310 Move X9, [X1+64]
	311 NotImplemented "Instruction CMP not yet implemented."
	312 Move X0, X21
	313 Call 0x1C17E08
	314 Move V0, [X0]
	315 Move X0, X31
	316 Call JSONNode.op_Implicit, V0
	317 Compare X20, 0
	318 JumpIfEqual {458}
	319 Move X8, [X20]
	320 Move X2, X0
	321 Move X9, [X8+632]
	322 Move X3, [X8+640]
	323 Move X0, X20
	324 Move X1, X22
	325 NotImplemented "Instruction BLR not yet implemented."
	326 Compare X0, 0
	327 JumpIfEqual {463}
	328 Move X8, [X0]
	329 Move X9, [X8+360]
	330 Move X1, [X8+368]
	331 NotImplemented "Instruction BLR not yet implemented."
	332 Move X22, X0
	333 Move X0, [X27]
	334 Move W8, [X0+224]
	335 Compare W8, 0
	336 JumpIfNotEqual {338}
	337 Call 0x1C17DFC
	338 Move X9, 0xB30000
	339 Move X8, [X21]
	340 Move X9, [X9+2904]
	341 Move X8, [X8+64]
	342 Move X1, [X9]
	343 Move X9, [X1+64]
	344 NotImplemented "Instruction CMP not yet implemented."
	345 Move X0, X21
	346 Call 0x1C17E08
	347 Move W0, [X0]
	348 Move X1, X31
	349 Call JSONNode.op_Implicit, X0
	350 Compare X20, 0
	351 JumpIfEqual {462}
	352 Move X8, [X20]
	353 Move X2, X0
	354 Move X9, [X8+632]
	355 Move X3, [X8+640]
	356 Move X0, X20
	357 Move X1, X22
	358 NotImplemented "Instruction BLR not yet implemented."
	359 Compare X0, 0
	360 JumpIfEqual {469}
	361 Move X8, [X0]
	362 Move X9, [X8+360]
	363 Move X1, [X8+368]
	364 NotImplemented "Instruction BLR not yet implemented."
	365 Move X8, 0xB30000
	366 Move X8, [X8+1928]
	367 Move X22, X0
	368 Move X0, [X8]
	369 Move W8, [X0+224]
	370 Compare W8, 0
	371 JumpIfNotEqual {373}
	372 Call 0x1C17DFC
	373 Move X0, X21
	374 Call Log.FormatException, X0
	375 Compare X0, 0
	376 JumpIfEqual {467}
	377 Move X8, [X0]
	378 Move X9, [X8+360]
	379 Move X1, [X8+368]
	380 NotImplemented "Instruction BLR not yet implemented."
	381 Move X21, X0
	382 Move X0, [X27]
	383 Move W8, [X0+224]
	384 Compare W8, 0
	385 JumpIfNotEqual {387}
	386 Call 0x1C17DFC
	387 Move X0, X21
	388 Move X1, X31
	389 Call JSONNode.op_Implicit, X0
	390 Compare X20, 0
	391 JumpIfEqual {468}
	392 Move X8, [X20]
	393 Move X2, X0
	394 Move X9, [X8+632]
	395 Move X3, [X8+640]
	396 Move X0, X20
	397 Move X1, X22
	398 NotImplemented "Instruction BLR not yet implemented."
	399 Move X22, 0xB30000
	400 Move X22, [X22+3584]
	401 Move X21, X31
	402 Move X1, [X22]
	403 Move X0, X19
	404 Call 0x1C17E00
	405 Compare X0, 0
	406 JumpIfEqual {429}
	407 Move X8, [X0]
	408 Move X1, [X22]
	409 Move X19, X0
	410 NotImplemented "Instruction LDRH not yet implemented."
	411 Compare X9, 0
	412 JumpIfEqual {419}
	413 Move X10, [X8+176]
	414 Add X10, X10, 8
	415 NotImplemented "Instruction LDUR not yet implemented."
	416 NotImplemented "Instruction CMP not yet implemented."
	417 Subtract X9, X9, 1
	418 Add X10, X10, 16
	419 Move X0, X19
	420 Move W2, W31
	421 Call 0x1C5D788
	422 NotImplemented "Instruction LDRSW not yet implemented."
	423 Add X8, X8, X9
	424 Add X0, X8, 312
	425 Move X8, [X0]
	426 Move X1, [X0+8]
	427 Move X0, X19
	428 NotImplemented "Instruction BLR not yet implemented."
	429 Compare X21, 0
	430 JumpIfNotEqual {465}
	431 Move X20, [X31+80]
	432 Move X19, [X31+88]
	433 Move X22, [X31+64]
	434 Move X21, [X31+72]
	435 Move X24, [X31+48]
	436 Move X23, [X31+56]
	437 Move X26, [X31+32]
	438 Move X25, [X31+40]
	439 Move X28, [X31+16]
	440 Move X27, [X31+24]
	441 Move X29, [X31+96]
	442 Move X30, [X31+104]
	443 Return 
	444 Call 0x1C181E0
	445 Call 0x1C17F20
	446 Call 0x1C17F20
	447 Call 0x1C17F20
	448 Move X0, X21
	449 Call 0x1C181E0
	450 Call 0x1C17F20
	451 Call 0x1C17F20
	452 Move X0, X21
	453 Call 0x1C181E0
	454 Call 0x1C17F20
	455 Call 0x1C17F20
	456 Move X0, X21
	457 Call 0x1C181E0
	458 Call 0x1C17F20
	459 Call 0x1C17F20
	460 Move X0, X21
	461 Call 0x1C181E0
	462 Call 0x1C17F20
	463 Call 0x1C17F20
	464 Call 0x1C17F20
	465 Move X0, X21
	466 Call 0x1C17F18
	467 Call 0x1C17F20
	468 Call 0x1C17F20
	469 Call 0x1C17F20
	470 Move X22, 0xB30000
	471 Move X22, [X22+3584]
	472 Move X20, X0
	473 NotImplemented "Instruction CMP not yet implemented."
	474 Move X0, X20
	475 Call 0x3EB2AD0
	476 Move X21, [X0]
	477 Call 0x3EB2AE0
	478 Move X21, X31
	479 Move X20, X0
	480 Move X8, 0xB30000
	481 Move X8, [X8+3584]
	482 Move X1, [X8]
	483 Move X0, X19
	484 Call 0x1C17E00
	485 Move X19, X0
	486 Compare X0, 0
	487 JumpIfEqual {511}
	488 Move X8, [X19]
	489 Move X10, 0xB30000
	490 NotImplemented "Instruction LDRH not yet implemented."
	491 Move X10, [X10+3584]
	492 Move X1, [X10]
	493 Compare X9, 0
	494 JumpIfEqual {501}
	495 Move X10, [X8+176]
	496 Add X10, X10, 8
	497 NotImplemented "Instruction LDUR not yet implemented."
	498 NotImplemented "Instruction CMP not yet implemented."
	499 Subtract X9, X9, 1
	500 Add X10, X10, 16
	501 Move X0, X19
	502 Move W2, W31
	503 Call 0x1C5D788
	504 NotImplemented "Instruction LDRSW not yet implemented."
	505 Add X8, X8, X9
	506 Add X0, X8, 312
	507 Move X8, [X0]
	508 Move X1, [X0+8]
	509 Move X0, X19
	510 NotImplemented "Instruction BLR not yet implemented."
	511 Compare X21, 0
	512 JumpIfNotEqual {515}
	513 Move X0, X20
	514 Call 0x1D2D690
	515 Move X0, X21
	516 Call 0x1C17F18
	517 Call 0x1991590

Method: System.Void .ctor()

Disassembly:
	0x035C5D10 MOV X25, X3
	0x035C5D14 MOV W26, W2

ISIL:
	001 Move X1, X31
	002 Call MonoBehaviour..ctor, X0
	003 Return 

