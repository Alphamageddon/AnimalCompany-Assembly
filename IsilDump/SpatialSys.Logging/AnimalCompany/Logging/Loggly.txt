Type: AnimalCompany.Logging.Loggly

Method: System.String get_envTag()

Disassembly:
	0x035C5DFC ADRP X0, 0xB72000
	0x035C5E00 LDR X0, [X0 + 0xF58]
	0x035C5E04 BL 0x1C16CF4
	0x035C5E08 ADRP X0, 0xB72000
	0x035C5E0C LDR X0, [X0 + 0xF60]
	0x035C5E10 BL 0x1C16CF4
	0x035C5E14 ADRP X0, 0xB2E000
	0x035C5E18 LDR X0, [X0 + 0x838]
	0x035C5E1C BL 0x1C16CF4
	0x035C5E20 ADRP X0, 0xB37000
	0x035C5E24 LDR X0, [X0 + 0x790]
	0x035C5E28 BL 0x1C16CF4
	0x035C5E2C ADRP X0, 0xB57000
	0x035C5E30 LDR X0, [X0 + 0x5E8]
	0x035C5E34 BL 0x1C16CF4
	0x035C5E38 MOVZ W8, 0x1
	0x035C5E3C STRB W8, [X24 + 0x1B8]
	0x035C5E40 STP X31, X31, [X31 + 0x30]
	0x035C5E44 STR X31, [X31 + 0x40]
	0x035C5E48 LDR X0, [X19 + 0x30]
	0x035C5E4C CBZ X0, 0x35C6C7C
	0x035C5E50 ADRP X8, 0xB72000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xE1C000
	005 Move X19, 0xB30000
	006 Move W8, [X20+422]
	007 Move X19, [X19+712]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xB30000
	013 Move X0, [X0+712]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+422], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X0, [X8+40]
	027 Move X30, [X31+32]
	028 Return X0

Method: System.Void set_envTag(System.String value)

Disassembly:
	0x035C5E54 LDR X8, [X8 + 0xEE8]
	0x035C5E58 MOV X1, X21
	0x035C5E5C LDR X2, [X8]
	0x035C5E60 BL 0x2AA528C
	0x035C5E64 TBNZ X0, 0x0, 0x35C619C
	0x035C5E68 LDR X8, [X19 + 0x38]
	0x035C5E6C MOVN X9, 0x80000000
	0x035C5E70 CMP X8, X9
	0x035C5E74 B.NE 0x35C6094
	0x035C5E78 LDR X0, [X19 + 0x30]
	0x035C5E7C STR X31, [X19 + 0x38]
	0x035C5E80 CBZ X0, 0x35C6C7C
	0x035C5E84 ADRP X8, 0xB72000
	0x035C5E88 LDR X8, [X8 + 0xEF0]
	0x035C5E8C LDR X1, [X8]
	0x035C5E90 BL 0x2AA4F58
	0x035C5E94 ADRP X24, 0xB72000
	0x035C5E98 LDR X24, [X24 + 0xF50]
	0x035C5E9C MOV X27, X0
	0x035C5EA0 LDR X8, [X24]
	0x035C5EA4 LDR W9, [X8 + 0xE0]
	0x035C5EA8 CBNZ W9, 0x35C5EB8
	0x035C5EAC MOV X0, X8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xE1C000
	006 Move X20, 0xB30000
	007 Move W8, [X21+423]
	008 Move X20, [X20+712]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xB30000
	015 Move X0, [X0+712]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+423], W8
	019 Move X0, [X20]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {25}
	023 Call 0x1C17DFC
	024 Move X0, [X20]
	025 Move X8, [X0+184]
	026 Move [X8+40], X19
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]

Method: System.Void .cctor()

Disassembly:
	0x035C5FF0 LDR X0, [X8]
	0x035C5FF4 BL 0x1C16F10
	0x035C5FF8 ADRP X8, 0xB72000
	0x035C5FFC LDR X8, [X8 + 0xF30]
	0x035C6000 MOV X1, X28
	0x035C6004 MOV X27, X0
	0x035C6008 LDR X2, [X8]
	0x035C600C BL 0x301B8E0
	0x035C6010 LDR X0, [X19 + 0x40]
	0x035C6014 CBZ X0, 0x35C6C7C
	0x035C6018 LDR X8, [X0]
	0x035C601C LDR X9, [X8 + 0x2D8]
	0x035C6020 LDR X1, [X8 + 0x2E0]
	0x035C6024 BLR X9
	0x035C6028 CBZ X27, 0x35C6C7C
	0x035C602C LDR X1, [X24]
	0x035C6030 ADD X8, X31, 0x18
	0x035C6034 MOV X0, X27
	0x035C6038 BL 0x301CB58
	0x035C603C LDUR V0, [X31 + 0x18]
	0x035C6040 LDR X8, [X31 + 0x28]
	0x035C6044 ADRP X24, 0xB56000
	0x035C6048 STR V0, [X31 + 0x3]
	0x035C604C STR X8, [X31 + 0x40]
	0x035C6050 LDR X24, [X24 + 0x5C0]
	0x035C6054 LDR X1, [X29]
	0x035C6058 ADD X0, X31, 0x30
	0x035C605C BL 0x2BC4350
	0x035C6060 TBZ X0, 0x0, 0x35C607C
	0x035C6064 LDR X0, [X19 + 0x40]
	0x035C6068 CBZ X0, 0x35C6198
	0x035C606C LDR X1, [X31 + 0x40]
	0x035C6070 LDR X2, [X24]
	0x035C6074 BL 0x25F7234
	0x035C6078 B 0x35C6054
	0x035C607C ADRP X8, 0xB71000
	0x035C6080 LDR X8, [X8 + 0xF08]
	0x035C6084 ADD X0, X31, 0x30
	0x035C6088 LDR X1, [X8]
	0x035C608C BL 0x2BC434C
	0x035C6090 LDR X29, [X31 + 0x10]
	0x035C6094 ADRP X8, 0xB71000
	0x035C6098 LDR X8, [X8 + 0xF40]
	0x035C609C LDR X0, [X8]
	0x035C60A0 BL 0x1C16F10
	0x035C60A4 MOV X1, X21
	0x035C60A8 MOV X27, X0
	0x035C60AC BL 0x35C6F08
	0x035C60B0 CBZ X27, 0x35C6C7C
	0x035C60B4 STR W23, [X27 + 0x18]
	0x035C60B8 LDR X8, [X19 + 0x38]
	0x035C60BC AND W9, W26, 0x1
	0x035C60C0 AND W10, W22, 0x1
	0x035C60C4 ADD X11, X8, 0x1
	0x035C60C8 STR X11, [X19 + 0x38]
	0x035C60CC STR X8, [X27 + 0x20]
	0x035C60D0 STRB W9, [X27 + 0x28]
	0x035C60D4 STR X25, [X27 + 0x30]
	0x035C60D8 STRB W10, [X27 + 0x38]
	0x035C60DC STR X29, [X27 + 0x40]
	0x035C60E0 LDR X0, [X19 + 0x30]
	0x035C60E4 CBZ X0, 0x35C6C7C
	0x035C60E8 ADRP X8, 0xB71000
	0x035C60EC LDR X8, [X8 + 0xEE0]
	0x035C60F0 MOV X1, X21
	0x035C60F4 MOV X2, X27
	0x035C60F8 LDR X3, [X8]
	0x035C60FC BL 0x2AA5098
	0x035C6100 CBZ X20, 0x35C6C7C
	0x035C6104 LDR X8, [X20 + 0x18]
	0x035C6108 CMP W8, 0x1
	0x035C610C B.LT 0x35C6150
	0x035C6110 MOV X24, X31
	0x035C6114 AND X8, X8, 0x0
	0x035C6118 ADD X25, X20, 0x20
	0x035C611C CMP X24, W8, UXTW
	0x035C6120 B.CS 0x35C6190
	0x035C6124 LDR X1, [X25, X24, LSL #3]
	0x035C6128 CBZ X1, 0x35C6140

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X19, 0xE1C000
	008 Move X20, 0xB2F000
	009 Move W8, [X19+424]
	010 Call 0x3EB26A4
	011 Return 
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {36}
	016 Move X0, 0xB72000
	017 Move X0, [X0+3608]
	018 Call 0x1C17CF4
	019 Move X0, 0xB72000
	020 Move X0, [X0+3616]
	021 Call 0x1C17CF4
	022 Move X0, 0xB2F000
	023 Move X0, [X0+712]
	024 Call 0x1C17CF4
	025 Move X0, 0xB36000
	026 Move X0, [X0+1368]
	027 Call 0x1C17CF4
	028 Move X0, 0xB2F000
	029 Move X0, [X0+4064]
	030 Call 0x1C17CF4
	031 Move X0, 0xB72000
	032 Move X0, [X0+3624]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X19+424], W8
	036 Move X0, X31
	037 Call Encoding.get_UTF8
	038 Move X8, [X20]
	039 Move X8, [X8+184]
	040 Move [X8], X0
	041 Move X8, [X20]
	042 Move X8, [X8+184]
	043 Move X0, [X8]
	044 Compare X0, 0
	045 JumpIfEqual {91}
	046 Move X9, 0xB2F000
	047 Move X8, [X0]
	048 Move X9, [X9+4064]
	049 Move X19, 0xB72000
	050 Move X19, [X19+3616]
	051 Move X2, [X8+624]
	052 Move X1, [X9]
	053 Move X9, [X8+616]
	054 Move X21, 0xB72000
	055 Move X22, 0xB36000
	056 Move X23, 0xB72000
	057 Move X21, [X21+3608]
	058 Move X22, [X22+1368]
	059 Move X23, [X23+3624]
	060 NotImplemented "Instruction BLR not yet implemented."
	061 Move X8, [X20]
	062 Move X8, [X8+184]
	063 Move [X8+8], X0
	064 Move X0, [X19]
	065 Call 0x1C17F10
	066 Move X1, [X21]
	067 Move X19, X0
	068 Call ConcurrentQueue`1<Object>..ctor, X0
	069 Move X8, [X20]
	070 Move X8, [X8+184]
	071 Move [X8+16], X19
	072 Move X0, [X22]
	073 Call 0x1C17F10
	074 Move X1, X31
	075 Move X19, X0
	076 Call MemoryStream..ctor, X0
	077 Move X8, [X20]
	078 Move X22, [X31+16]
	079 Move X21, [X31+24]
	080 Move X8, [X8+184]
	081 Move [X8+24], X19
	082 Move X9, [X23]
	083 Move X20, [X31+32]
	084 Move X19, [X31+40]
	085 Move [X8+56], W31
	086 Move [X8+40], X9
	087 Move X30, [X31+48]
	088 Move X23, [X31+56]
	089 Call Loggly.RefreshLogglyURL
	090 Return 
	091 Call 0x1C17F20

Method: System.Void RefreshLogglyURL()

Disassembly:
	0x035C5EB0 BL 0x1C16DFC
	0x035C5EB4 LDR X8, [X24]
	0x035C5EB8 LDR X9, [X8 + 0xB8]
	0x035C5EBC LDR X28, [X9 + 0x18]
	0x035C5EC0 CBNZ X28, 0x35C5F48
	0x035C5EC4 LDR W9, [X8 + 0xE0]
	0x035C5EC8 STR X21, [X31 + 0x8]
	0x035C5ECC MOV W21, W22
	0x035C5ED0 MOV W22, W26
	0x035C5ED4 MOV X26, X25
	0x035C5ED8 CBZ W9, 0x35C5EE4
	0x035C5EDC MOV X25, X29
	0x035C5EE0 B 0x35C5EF4
	0x035C5EE4 MOV X0, X8
	0x035C5EE8 MOV X25, X29
	0x035C5EEC BL 0x1C16DFC
	0x035C5EF0 LDR X8, [X24]
	0x035C5EF4 ADRP X9, 0xB72000
	0x035C5EF8 LDR X8, [X8 + 0xB8]
	0x035C5EFC LDR X9, [X9 + 0xF20]
	0x035C5F00 LDR X29, [X8]
	0x035C5F04 LDR X0, [X9]
	0x035C5F08 BL 0x1C16F10
	0x035C5F0C ADRP X8, 0xB72000
	0x035C5F10 LDR X8, [X8 + 0xF48]
	0x035C5F14 MOV X1, X29
	0x035C5F18 MOV X3, X31
	0x035C5F1C MOV X28, X0
	0x035C5F20 LDR X2, [X8]
	0x035C5F24 BL 0x2D30350
	0x035C5F28 LDR X8, [X24]
	0x035C5F2C MOV X29, X25
	0x035C5F30 MOV X25, X26
	0x035C5F34 MOV W26, W22
	0x035C5F38 LDR X8, [X8 + 0xB8]
	0x035C5F3C MOV W22, W21
	0x035C5F40 LDR X21, [X31 + 0x8]
	0x035C5F44 STR X28, [X8 + 0x18]
	0x035C5F48 STR X29, [X31 + 0x10]
	0x035C5F4C ADRP X8, 0xB72000
	0x035C5F50 LDR X8, [X8 + 0xEF8]
	0x035C5F54 MOV X0, X27
	0x035C5F58 MOV X1, X28
	0x035C5F5C LDR X2, [X8]
	0x035C5F60 BL 0x21C9AF0
	0x035C5F64 ADRP X8, 0xB72000
	0x035C5F68 LDR X8, [X8 + 0xF00]
	0x035C5F6C LDR X1, [X8]
	0x035C5F70 BL 0x21D79F4
	0x035C5F74 CBZ X0, 0x35C6C7C
	0x035C5F78 ADRP X24, 0xB72000
	0x035C5F7C LDR X24, [X24 + 0xF28]
	0x035C5F80 ADD X8, X31, 0x18
	0x035C5F84 LDR X1, [X24]
	0x035C5F88 BL 0x301CB58
	0x035C5F8C LDUR V0, [X31 + 0x18]
	0x035C5F90 LDR X8, [X31 + 0x28]
	0x035C5F94 ADRP X29, 0xB72000
	0x035C5F98 STR V0, [X31 + 0x3]
	0x035C5F9C STR X8, [X31 + 0x40]
	0x035C5FA0 LDR X29, [X29 + 0xF10]
	0x035C5FA4 LDR X1, [X29]
	0x035C5FA8 ADD X0, X31, 0x30
	0x035C5FAC BL 0x2BC4350
	0x035C5FB0 TBZ X0, 0x0, 0x35C5FD0
	0x035C5FB4 LDR X8, [X19 + 0x38]
	0x035C5FB8 LDR X9, [X31 + 0x40]
	0x035C5FBC ADD X10, X8, 0x1
	0x035C5FC0 STR X10, [X19 + 0x38]
	0x035C5FC4 CBZ X9, 0x35C6194
	0x035C5FC8 STR X8, [X9 + 0x20]
	0x035C5FCC B 0x35C5FA4
	0x035C5FD0 ADRP X8, 0xB72000
	0x035C5FD4 LDR X8, [X8 + 0xF08]
	0x035C5FD8 ADD X0, X31, 0x30
	0x035C5FDC LDR X1, [X8]
	0x035C5FE0 BL 0x2BC434C
	0x035C5FE4 ADRP X8, 0xB72000
	0x035C5FE8 LDR X28, [X19 + 0x40]
	0x035C5FEC LDR X8, [X8 + 0xF38]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xE1C000
	006 Move X19, 0xB30000
	007 Move W8, [X20+425]
	008 Move X19, [X19+712]
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {30}
	013 Move X0, 0xB30000
	014 Move X0, [X0+712]
	015 Call 0x1C17CF4
	016 Move X0, 0xB73000
	017 Move X0, [X0+3592]
	018 Call 0x1C17CF4
	019 Move X0, 0xB30000
	020 Move X0, [X0+3784]
	021 Call 0x1C17CF4
	022 Move X0, 0xB73000
	023 Move X0, [X0+3600]
	024 Call 0x1C17CF4
	025 Move X0, 0xB31000
	026 Move X0, [X0+928]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X20+425], W8
	030 Move X0, [X19]
	031 Move X20, 0xB73000
	032 Move W8, [X0+224]
	033 Move X20, [X20+3592]
	034 Compare W8, 0
	035 JumpIfNotEqual {38}
	036 Call 0x1C17DFC
	037 Move X0, [X19]
	038 Move X8, [X0+184]
	039 Move X9, [X20]
	040 Move X1, X31
	041 Move X0, [X8+40]
	042 Move [X8+48], X9
	043 Call String.IsNullOrEmpty, X0
	044 Move X8, [X19]
	045 Move TEMP, X0
	046 And TEMP, TEMP, 1
	047 Compare TEMP, 1
	048 JumpIfEqual {66}
	049 Move X20, 0xB31000
	050 Move W9, [X8+224]
	051 Move X20, [X20+928]
	052 Compare W9, 0
	053 JumpIfNotEqual {57}
	054 Move X0, X8
	055 Call 0x1C17DFC
	056 Move X8, [X19]
	057 Move X8, [X8+184]
	058 Move X1, [X20]
	059 Move X3, X31
	060 Move X2, [X8+40]
	061 Move X0, [X8+48]
	062 Call String.Concat, X0, X1, X2
	063 Move X8, [X19]
	064 Move X9, [X8+184]
	065 Move [X9+48], X0
	066 Move X21, 0xB73000
	067 Move X20, 0xB30000
	068 Move W9, [X8+224]
	069 Move X21, [X21+3600]
	070 Move X20, [X20+3784]
	071 Compare W9, 0
	072 JumpIfNotEqual {76}
	073 Move X0, X8
	074 Call 0x1C17DFC
	075 Move X8, [X19]
	076 Move X8, [X8+184]
	077 Move X1, [X21]
	078 Move X2, X31
	079 Move X0, [X8+48]
	080 Call String.Concat, X0, X1
	081 Move X8, [X19]
	082 Move X2, X31
	083 Move X8, [X8+184]
	084 Move [X8+48], X0
	085 Move X1, [X20]
	086 Call String.Concat, X0, X1
	087 Move X8, [X19]
	088 Move X20, [X31+16]
	089 Move X19, [X31+24]
	090 Move X8, [X8+184]
	091 Move [X8+48], X0
	092 Move X30, [X31+32]
	093 Move X21, [X31+40]
	094 Return 

Method: System.Void QueueLog(SimpleJSON.JSONObject logJSON)

Disassembly:
	0x035C48D0 CBZ X0, 0x35C4930
	0x035C48D4 LDR X8, [X0]
	0x035C48D8 LDR X1, [X23]
	0x035C48DC MOV X20, X0
	0x035C48E0 LDRH W9, [X8 + 0x12E]
	0x035C48E4 CBZ X9, 0x35C4908
	0x035C48E8 LDR X10, [X8 + 0xB0]
	0x035C48EC ADD X10, X10, 0x8
	0x035C48F0 LDUR X11, [X10 - 0x8]
	0x035C48F4 CMP X11, X1
	0x035C48F8 B.EQ 0x35C4918
	0x035C48FC SUBS X9, X9, 0x1
	0x035C4900 ADD X10, X10, 0x10
	0x035C4904 B.NE 0x35C48F0
	0x035C4908 MOV X0, X20
	0x035C490C MOV W2, W31
	0x035C4910 BL 0x1C5C788
	0x035C4914 B 0x35C4924
	0x035C4918 LDRSW X9, [X10]
	0x035C491C ADD X8, X8, X9, 0x4, LSL
	0x035C4920 ADD X0, X8, 0x138
	0x035C4924 LDP X8, X1, [X0]
	0x035C4928 MOV X0, X20
	0x035C492C BLR X8
	0x035C4930 CBNZ X21, 0x35C4964
	0x035C4934 MOV X0, X19
	0x035C4938 LDP X20, X19, [X31 + 0x40]
	0x035C493C LDP X22, X21, [X31 + 0x30]
	0x035C4940 LDP X24, X23, [X31 + 0x20]
	0x035C4944 LDP X26, X25, [X31 + 0x10]
	0x035C4948 LDR X30, [X31], #0x50
	0x035C494C RET
	0x035C4950 BL 0x1C16F20
	0x035C4954 BL 0x1C16F20
	0x035C4958 BL 0x1C171E0
	0x035C495C BL 0x1C16F20
	0x035C4960 BL 0x1C16F20
	0x035C4964 MOV X0, X21
	0x035C4968 BL 0x1C16F18
	0x035C496C B 0x35C4988
	0x035C4970 B 0x35C4988
	0x035C4974 B 0x35C4988
	0x035C4978 B 0x35C4988
	0x035C497C B 0x35C4988
	0x035C4980 B 0x35C4988
	0x035C4984 B 0x35C4988
	0x035C4988 CMP W1, 0x1
	0x035C498C B.NE 0x35C49A0
	0x035C4990 BL 0x3EB1AD0
	0x035C4994 LDR X21, [X0]
	0x035C4998 BL 0x3EB1AE0
	0x035C499C B 0x35C48C4
	0x035C49A0 MOV X19, X0
	0x035C49A4 MOV X21, X31
	0x035C49A8 B 0x35C49B0
	0x035C49AC MOV X19, X0
	0x035C49B0 LDR X1, [X23]
	0x035C49B4 MOV X0, X20
	0x035C49B8 BL 0x1C16E00
	0x035C49BC MOV X20, X0
	0x035C49C0 CBZ X0, 0x35C4A1C
	0x035C49C4 LDR X8, [X20]
	0x035C49C8 LDR X1, [X23]
	0x035C49CC LDRH W9, [X8 + 0x12E]
	0x035C49D0 CBZ X9, 0x35C49F4
	0x035C49D4 LDR X10, [X8 + 0xB0]
	0x035C49D8 ADD X10, X10, 0x8
	0x035C49DC LDUR X11, [X10 - 0x8]
	0x035C49E0 CMP X11, X1
	0x035C49E4 B.EQ 0x35C4A04
	0x035C49E8 SUBS X9, X9, 0x1
	0x035C49EC ADD X10, X10, 0x10
	0x035C49F0 B.NE 0x35C49DC
	0x035C49F4 MOV X0, X20
	0x035C49F8 MOV W2, W31
	0x035C49FC BL 0x1C5C788
	0x035C4A00 B 0x35C4A10
	0x035C4A04 LDRSW X9, [X10]
	0x035C4A08 ADD X8, X8, X9, 0x4, LSL
	0x035C4A0C ADD X0, X8, 0x138
	0x035C4A10 LDP X8, X1, [X0]
	0x035C4A14 MOV X0, X20
	0x035C4A18 BLR X8
	0x035C4A1C CBNZ X21, 0x35C4A28
	0x035C4A20 MOV X0, X19
	0x035C4A24 BL 0x1D2C690
	0x035C4A28 MOV X0, X21
	0x035C4A2C BL 0x1C16F18
	0x035C4A30 BL 0x1990590
	0x035C4A34 STR X30, [X31 - 0x40]!
	0x035C4A38 STP X24, X23, [X31 + 0x10]
	0x035C4A3C STP X22, X21, [X31 + 0x20]
	0x035C4A40 STP X20, X19, [X31 + 0x30]
	0x035C4A44 ADRP X20, 0xE1C000
	0x035C4A48 ADRP X21, 0xB57000
	0x035C4A4C LDRB W8, [X20 + 0x1A1]
	0x035C4A50 LDR X21, [X21 + 0xBC0]
	0x035C4A54 MOV X19, X0
	0x035C4A58 TBNZ X8, 0x0, 0x35C4AD0
	0x035C4A5C ADRP X0, 0xB30000
	0x035C4A60 LDR X0, [X0 + 0x460]
	0x035C4A64 BL 0x1C16CF4
	0x035C4A68 ADRP X0, 0xB57000
	0x035C4A6C LDR X0, [X0 + 0xBC0]
	0x035C4A70 BL 0x1C16CF4
	0x035C4A74 ADRP X0, 0xB2F000
	0x035C4A78 LDR X0, [X0 + 0x788]
	0x035C4A7C BL 0x1C16CF4
	0x035C4A80 ADRP X0, 0xB3B000
	0x035C4A84 LDR X0, [X0 + 0x670]
	0x035C4A88 BL 0x1C16CF4
	0x035C4A8C ADRP X0, 0xB67000
	0x035C4A90 LDR X0, [X0 + 0xFC8]
	0x035C4A94 BL 0x1C16CF4
	0x035C4A98 ADRP X0, 0xB2F000
	0x035C4A9C LDR X0, [X0 + 0x830]
	0x035C4AA0 BL 0x1C16CF4
	0x035C4AA4 ADRP X0, 0xB3B000
	0x035C4AA8 LDR X0, [X0 + 0x650]
	0x035C4AAC BL 0x1C16CF4
	0x035C4AB0 ADRP X0, 0xB3A000
	0x035C4AB4 LDR X0, [X0 + 0x3B0]
	0x035C4AB8 BL 0x1C16CF4
	0x035C4ABC ADRP X0, 0xB5B000
	0x035C4AC0 LDR X0, [X0 + 0x128]
	0x035C4AC4 BL 0x1C16CF4
	0x035C4AC8 MOVZ W8, 0x1
	0x035C4ACC STRB W8, [X20 + 0x1A1]
	0x035C4AD0 LDR X0, [X21]
	0x035C4AD4 BL 0x1C16F10
	0x035C4AD8 MOV X1, X31
	0x035C4ADC MOV X20, X0
	0x035C4AE0 BL 0x35AE864
	0x035C4AE4 CBZ X19, 0x35C4D0C
	0x035C4AE8 MOV X0, X19
	0x035C4AEC MOV X1, X31
	0x035C4AF0 BL 0x33B32AC
	0x035C4AF4 CBZ X0, 0x35C4D0C
	0x035C4AF8 LDR X8, [X0]
	0x035C4AFC ADRP X22, 0xB30000
	0x035C4B00 LDP X9, X1, [X8 + 0x168]
	0x035C4B04 LDR X22, [X22 + 0x460]
	0x035C4B08 BLR X9
	0x035C4B0C LDR X8, [X22]
	0x035C4B10 MOV X21, X0
	0x035C4B14 LDR W9, [X8 + 0xE0]
	0x035C4B18 CBNZ W9, 0x35C4B24
	0x035C4B1C MOV X0, X8
	0x035C4B20 BL 0x1C16DFC
	0x035C4B24 MOV X0, X21
	0x035C4B28 MOV X1, X31
	0x035C4B2C BL 0x35ACF6C
	0x035C4B30 CBZ X20, 0x35C4D0C
	0x035C4B34 ADRP X9, 0xB3A000
	0x035C4B38 LDR X8, [X20]
	0x035C4B3C LDR X9, [X9 + 0x3B0]
	0x035C4B40 ADRP X21, 0xB3B000
	0x035C4B44 ADRP X24, 0xB3B000
	0x035C4B48 LDR X3, [X8 + 0x280]
	0x035C4B4C LDR X1, [X9]
	0x035C4B50 LDR X9, [X8 + 0x278]
	0x035C4B54 ADRP X23, 0xB2F000
	0x035C4B58 LDR X21, [X21 + 0x650]
	0x035C4B5C LDR X24, [X24 + 0x670]
	0x035C4B60 LDR X23, [X23 + 0x788]
	0x035C4B64 MOV X2, X0
	0x035C4B68 MOV X0, X20
	0x035C4B6C BLR X9
	0x035C4B70 LDR X8, [X19]
	0x035C4B74 MOV X0, X19
	0x035C4B78 LDP X9, X1, [X8 + 0x188]
	0x035C4B7C BLR X9
	0x035C4B80 MOV X1, X31
	0x035C4B84 BL 0x35ACF6C
	0x035C4B88 LDR X8, [X20]
	0x035C4B8C LDR X1, [X21]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xE1D000
	007 Move X20, 0xB31000
	008 Move W8, [X21+426]
	009 Move X20, [X20+2544]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {53}
	015 Move X0, 0xB74000
	016 Move X0, [X0+3464]
	017 Call 0x1C17CF4
	018 Move X0, 0xB32000
	019 Move X0, [X0+3144]
	020 Call 0x1C17CF4
	021 Move X0, 0xB31000
	022 Move X0, [X0+2544]
	023 Call 0x1C17CF4
	024 Move X0, 0xB31000
	025 Move X0, [X0+1120]
	026 Call 0x1C17CF4
	027 Move X0, 0xB30000
	028 Move X0, [X0+1928]
	029 Call 0x1C17CF4
	030 Move X0, 0xB31000
	031 Move X0, [X0+712]
	032 Call 0x1C17CF4
	033 Move X0, 0xB74000
	034 Move X0, [X0+3472]
	035 Call 0x1C17CF4
	036 Move X0, 0xB74000
	037 Move X0, [X0+3480]
	038 Call 0x1C17CF4
	039 Move X0, 0xB74000
	040 Move X0, [X0+3488]
	041 Call 0x1C17CF4
	042 Move X0, 0xB74000
	043 Move X0, [X0+3496]
	044 Call 0x1C17CF4
	045 Move X0, 0xB74000
	046 Move X0, [X0+3504]
	047 Call 0x1C17CF4
	048 Move X0, 0xB74000
	049 Move X0, [X0+3448]
	050 Call 0x1C17CF4
	051 Move W8, 1
	052 Move [X21+426], W8
	053 Move X0, [X20]
	054 Move X22, 0xB32000
	055 Move W8, [X0+224]
	056 Move X22, [X22+3144]
	057 Compare W8, 0
	058 JumpIfNotEqual {60}
	059 Call 0x1C17DFC
	060 Move X21, 0xB74000
	061 Move X20, 0xB31000
	062 Move X21, [X21+3472]
	063 Move X20, [X20+1120]
	064 Move X0, X31
	065 Call DateTime.get_UtcNow
	066 Move X8, [X22]
	067 Move [X31+8], X0
	068 Move W9, [X8+224]
	069 Compare W9, 0
	070 JumpIfNotEqual {73}
	071 Move X0, X8
	072 Call 0x1C17DFC
	073 Move X0, X31
	074 Call CultureInfo.get_InvariantCulture
	075 Move X1, [X21]
	076 Move X2, X0
	077 Add X0, X31, 8
	078 Move X3, X31
	079 Call DateTime.ToString, X0, X1, X2
	080 Move X8, [X20]
	081 Move X20, X0
	082 Move W9, [X8+224]
	083 Compare W9, 0
	084 JumpIfNotEqual {87}
	085 Move X0, X8
	086 Call 0x1C17DFC
	087 Move X0, X20
	088 Move X1, X31
	089 Call JSONNode.op_Implicit, X0
	090 Compare X19, 0
	091 JumpIfEqual {196}
	092 Move X9, 0xB74000
	093 Move X8, [X19]
	094 Move X9, [X9+3504]
	095 Move X21, 0xB31000
	096 Move X2, X0
	097 Move X3, [X8+640]
	098 Move X1, [X9]
	099 Move X9, [X8+632]
	100 Move X21, [X21+712]
	101 Move X0, X19
	102 NotImplemented "Instruction BLR not yet implemented."
	103 Move X0, [X21]
	104 Move W8, [X0+224]
	105 Compare W8, 0
	106 JumpIfNotEqual {109}
	107 Call 0x1C17DFC
	108 Move X0, [X21]
	109 Move X8, [X0+184]
	110 Move X9, [X19]
	111 Move X0, X19
	112 Move X20, [X8]
	113 Move X8, [X9+360]
	114 Move X1, [X9+368]
	115 NotImplemented "Instruction BLR not yet implemented."
	116 Compare X20, 0
	117 JumpIfEqual {196}
	118 Move X8, [X20]
	119 Move X1, X0
	120 Move X0, X20
	121 Move X9, [X8+616]
	122 Move X2, [X8+624]
	123 NotImplemented "Instruction BLR not yet implemented."
	124 Compare X0, 0
	125 JumpIfEqual {196}
	126 Move W8, [X0+24]
	127 Move X20, X0
	128 NotImplemented "Instruction CMP not yet implemented."
	129 Move X0, [X21]
	130 Move W8, [X0+224]
	131 Compare W8, 0
	132 JumpIfNotEqual {135}
	133 Call 0x1C17DFC
	134 Move X0, [X21]
	135 Move X8, [X0+184]
	136 Move X0, [X8+16]
	137 Compare X0, 0
	138 JumpIfEqual {196}
	139 Move X8, 0xB74000
	140 Move X8, [X8+3464]
	141 Move X1, X20
	142 Move X2, [X8]
	143 Call ConcurrentQueue`1<Object>.Enqueue, X0, X1
	144 Move X9, 0xB74000
	145 Move X8, [X19]
	146 Move X9, [X9+3448]
	147 Move X0, X19
	148 Move X1, [X9]
	149 Move X9, [X8+424]
	150 Move X2, [X8+432]
	151 NotImplemented "Instruction BLR not yet implemented."
	152 Compare X0, 0
	153 JumpIfEqual {196}
	154 Move X8, [X0]
	155 Move X9, [X8+360]
	156 Move X1, [X8+368]
	157 NotImplemented "Instruction BLR not yet implemented."
	158 Compare X0, 0
	159 JumpIfEqual {196}
	160 Move W2, 1024
	161 Move W1, W31
	162 Move X3, X31
	163 Call String.Substring, X0, X1, X2
	164 Move X8, 0xB74000
	165 Move X8, [X8+3488]
	166 Move X1, X0
	167 Move X2, X31
	168 Move X8, [X8]
	169 Move X0, X8
	170 Call String.Concat, X0, X1
	171 Move X8, 0xB30000
	172 Move X8, [X8+1928]
	173 Move X19, X0
	174 Move X8, [X8]
	175 Move W9, [X8+224]
	176 Compare W9, 0
	177 JumpIfNotEqual {180}
	178 Move X0, X8
	179 Call 0x1C17DFC
	180 Move X8, 0xB74000
	181 Move X9, 0xB74000
	182 Move X8, [X8+3496]
	183 Move X9, [X9+3480]
	184 Move W4, 65
	185 Move X0, X19
	186 Move X2, [X8]
	187 Move X3, [X9]
	188 Move X1, X31
	189 Call Log.Error, X0, X1, X2, X3, X4
	190 Move X20, [X31+32]
	191 Move X19, [X31+40]
	192 Move X22, [X31+16]
	193 Move X21, [X31+24]
	194 Move X30, [X31+48]
	195 Return 
	196 Call 0x1C17F20

Method: System.Void Update()

Disassembly:
	0x035C244C MOVZ W1, 0x1
	0x035C2450 MOV X2, X24
	0x035C2454 MOV X3, X23
	0x035C2458 MOV X4, X22
	0x035C245C MOV X5, X21
	0x035C2460 MOV X6, X20
	0x035C2464 MOV W7, W19
	0x035C2468 BL 0x35C1DA0
	0x035C246C LDP X20, X19, [X31 + 0x50]
	0x035C2470 LDP X22, X21, [X31 + 0x40]
	0x035C2474 LDP X24, X23, [X31 + 0x30]
	0x035C2478 LDP X26, X25, [X31 + 0x20]
	0x035C247C LDR X30, [X31 + 0x10]
	0x035C2480 ADD X31, X31, 0x60
	0x035C2484 RET
	0x035C2488 SUB X31, X31, 0x50
	0x035C248C STP X30, X25, [X31 + 0x10]
	0x035C2490 STP X24, X23, [X31 + 0x20]
	0x035C2494 STP X22, X21, [X31 + 0x30]
	0x035C2498 STP X20, X19, [X31 + 0x40]
	0x035C249C ADRP X24, 0xE1E000
	0x035C24A0 ADRP X25, 0xB31000
	0x035C24A4 LDRB W8, [X24 + 0x193]
	0x035C24A8 LDR X25, [X25 + 0x788]
	0x035C24AC MOV W19, W4
	0x035C24B0 MOV X20, X3
	0x035C24B4 MOV X21, X2
	0x035C24B8 MOV X22, X1
	0x035C24BC MOV X23, X0
	0x035C24C0 TBNZ X8, 0x0, 0x35C24D8
	0x035C24C4 ADRP X0, 0xB31000
	0x035C24C8 LDR X0, [X0 + 0x788]
	0x035C24CC BL 0x1C16CF4
	0x035C24D0 MOVZ W8, 0x1
	0x035C24D4 STRB W8, [X24 + 0x193]
	0x035C24D8 LDR X0, [X25]
	0x035C24DC LDR W8, [X0 + 0xE0]
	0x035C24E0 CBNZ W8, 0x35C24E8
	0x035C24E4 BL 0x1C16DFC
	0x035C24E8 MOVZ W0, 0x1
	0x035C24EC MOVZ W1, 0x1
	0x035C24F0 MOV X2, X31
	0x035C24F4 MOV X3, X23
	0x035C24F8 MOV X4, X22
	0x035C24FC MOV X5, X21
	0x035C2500 MOV X6, X20
	0x035C2504 MOV W7, W19
	0x035C2508 BL 0x35C1DA0
	0x035C250C LDP X20, X19, [X31 + 0x40]
	0x035C2510 LDP X22, X21, [X31 + 0x30]
	0x035C2514 LDP X24, X23, [X31 + 0x20]
	0x035C2518 LDP X30, X25, [X31 + 0x10]
	0x035C251C ADD X31, X31, 0x50
	0x035C2520 RET
	0x035C2524 SUB X31, X31, 0x60
	0x035C2528 STR X30, [X31 + 0x10]
	0x035C252C STP X26, X25, [X31 + 0x20]
	0x035C2530 STP X24, X23, [X31 + 0x30]
	0x035C2534 STP X22, X21, [X31 + 0x40]
	0x035C2538 STP X20, X19, [X31 + 0x50]
	0x035C253C ADRP X25, 0xE1E000
	0x035C2540 ADRP X26, 0xB31000
	0x035C2544 LDRB W8, [X25 + 0x194]
	0x035C2548 LDR X26, [X26 + 0x788]
	0x035C254C MOV W19, W5
	0x035C2550 MOV X20, X4
	0x035C2554 MOV X21, X3
	0x035C2558 MOV X22, X2
	0x035C255C MOV X23, X1
	0x035C2560 MOV W24, W0
	0x035C2564 TBNZ X8, 0x0, 0x35C257C
	0x035C2568 ADRP X0, 0xB31000
	0x035C256C LDR X0, [X0 + 0x788]
	0x035C2570 BL 0x1C16CF4
	0x035C2574 MOVZ W8, 0x1
	0x035C2578 STRB W8, [X25 + 0x194]
	0x035C257C LDR X0, [X26]
	0x035C2580 LDR W8, [X0 + 0xE0]
	0x035C2584 CBNZ W8, 0x35C258C
	0x035C2588 BL 0x1C16DFC
	0x035C258C MOVZ W0, 0x1
	0x035C2590 MOV W1, W24
	0x035C2594 MOV X2, X31
	0x035C2598 MOV X3, X23
	0x035C259C MOV X4, X22
	0x035C25A0 MOV X5, X21
	0x035C25A4 MOV X6, X20
	0x035C25A8 MOV W7, W19
	0x035C25AC BL 0x35C1DA0
	0x035C25B0 LDP X20, X19, [X31 + 0x50]
	0x035C25B4 LDP X22, X21, [X31 + 0x40]
	0x035C25B8 LDP X24, X23, [X31 + 0x30]
	0x035C25BC LDP X26, X25, [X31 + 0x20]
	0x035C25C0 LDR X30, [X31 + 0x10]
	0x035C25C4 ADD X31, X31, 0x60
	0x035C25C8 RET
	0x035C25CC SUB X31, X31, 0x60
	0x035C25D0 STR X30, [X31 + 0x10]
	0x035C25D4 STP X26, X25, [X31 + 0x20]
	0x035C25D8 STP X24, X23, [X31 + 0x30]
	0x035C25DC STP X22, X21, [X31 + 0x40]
	0x035C25E0 STP X20, X19, [X31 + 0x50]
	0x035C25E4 ADRP X25, 0xE1E000
	0x035C25E8 ADRP X26, 0xB31000
	0x035C25EC LDRB W8, [X25 + 0x195]
	0x035C25F0 LDR X26, [X26 + 0x788]
	0x035C25F4 MOV W19, W5
	0x035C25F8 MOV X20, X4
	0x035C25FC MOV X21, X3
	0x035C2600 MOV X22, X2
	0x035C2604 MOV X23, X1
	0x035C2608 MOV W24, W0
	0x035C260C TBNZ X8, 0x0, 0x35C2624
	0x035C2610 ADRP X0, 0xB31000
	0x035C2614 LDR X0, [X0 + 0x788]
	0x035C2618 BL 0x1C16CF4
	0x035C261C MOVZ W8, 0x1
	0x035C2620 STRB W8, [X25 + 0x195]
	0x035C2624 LDR X0, [X26]
	0x035C2628 LDR W8, [X0 + 0xE0]
	0x035C262C CBNZ W8, 0x35C2634
	0x035C2630 BL 0x1C16DFC
	0x035C2634 MOVZ W0, 0x1
	0x035C2638 MOV W1, W24
	0x035C263C MOV X2, X23
	0x035C2640 MOV X3, X31
	0x035C2644 MOV X4, X22
	0x035C2648 MOV X5, X21
	0x035C264C MOV X6, X20
	0x035C2650 MOV W7, W19
	0x035C2654 BL 0x35C1DA0
	0x035C2658 LDP X20, X19, [X31 + 0x50]
	0x035C265C LDP X22, X21, [X31 + 0x40]
	0x035C2660 LDP X24, X23, [X31 + 0x30]
	0x035C2664 LDP X26, X25, [X31 + 0x20]
	0x035C2668 LDR X30, [X31 + 0x10]
	0x035C266C ADD X31, X31, 0x60
	0x035C2670 RET
	0x035C2674 SUB X31, X31, 0x60
	0x035C2678 STP X30, X27, [X31 + 0x10]
	0x035C267C STP X26, X25, [X31 + 0x20]
	0x035C2680 STP X24, X23, [X31 + 0x30]
	0x035C2684 STP X22, X21, [X31 + 0x40]
	0x035C2688 STP X20, X19, [X31 + 0x50]
	0x035C268C ADRP X26, 0xE1E000
	0x035C2690 ADRP X27, 0xB31000
	0x035C2694 LDRB W8, [X26 + 0x196]
	0x035C2698 LDR X27, [X27 + 0x788]
	0x035C269C MOV W19, W6
	0x035C26A0 MOV X20, X5
	0x035C26A4 MOV X21, X4
	0x035C26A8 MOV X22, X3
	0x035C26AC MOV X23, X2
	0x035C26B0 MOV X24, X1
	0x035C26B4 MOV W25, W0
	0x035C26B8 TBNZ X8, 0x0, 0x35C26D0
	0x035C26BC ADRP X0, 0xB31000
	0x035C26C0 LDR X0, [X0 + 0x788]
	0x035C26C4 BL 0x1C16CF4
	0x035C26C8 MOVZ W8, 0x1
	0x035C26CC STRB W8, [X26 + 0x196]
	0x035C26D0 LDR X0, [X27]
	0x035C26D4 LDR W8, [X0 + 0xE0]
	0x035C26D8 CBNZ W8, 0x35C26E0
	0x035C26DC BL 0x1C16DFC
	0x035C26E0 MOVZ W0, 0x1
	0x035C26E4 MOV W1, W25
	0x035C26E8 MOV X2, X24
	0x035C26EC MOV X3, X23
	0x035C26F0 MOV X4, X22
	0x035C26F4 MOV X5, X21
	0x035C26F8 MOV X6, X20
	0x035C26FC MOV W7, W19
	0x035C2700 BL 0x35C1DA0
	0x035C2704 LDP X20, X19, [X31 + 0x50]
	0x035C2708 LDP X22, X21, [X31 + 0x40]
	0x035C270C LDP X24, X23, [X31 + 0x30]
	0x035C2710 LDP X26, X25, [X31 + 0x20]
	0x035C2714 LDP X30, X27, [X31 + 0x10]
	0x035C2718 ADD X31, X31, 0x60
	0x035C271C RET
	0x035C2720 SUB X31, X31, 0x60
	0x035C2724 STR X30, [X31 + 0x10]
	0x035C2728 STP X26, X25, [X31 + 0x20]
	0x035C272C STP X24, X23, [X31 + 0x30]
	0x035C2730 STP X22, X21, [X31 + 0x40]
	0x035C2734 STP X20, X19, [X31 + 0x50]
	0x035C2738 ADRP X25, 0xE1E000
	0x035C273C ADRP X26, 0xB31000
	0x035C2740 LDRB W8, [X25 + 0x197]
	0x035C2744 LDR X26, [X26 + 0x788]
	0x035C2748 MOV W19, W5
	0x035C274C MOV X20, X4
	0x035C2750 MOV X21, X3
	0x035C2754 MOV X22, X2
	0x035C2758 MOV X23, X1
	0x035C275C MOV W24, W0
	0x035C2760 TBNZ X8, 0x0, 0x35C2778
	0x035C2764 ADRP X0, 0xB31000
	0x035C2768 LDR X0, [X0 + 0x788]
	0x035C276C BL 0x1C16CF4
	0x035C2770 MOVZ W8, 0x1
	0x035C2774 STRB W8, [X25 + 0x197]
	0x035C2778 LDR X0, [X26]
	0x035C277C LDR W8, [X0 + 0xE0]
	0x035C2780 CBNZ W8, 0x35C2788
	0x035C2784 BL 0x1C16DFC
	0x035C2788 MOVZ W1, 0x1
	0x035C278C MOV W0, W24
	0x035C2790 MOV X2, X23
	0x035C2794 MOV X3, X31
	0x035C2798 MOV X4, X22
	0x035C279C MOV X5, X21
	0x035C27A0 MOV X6, X20
	0x035C27A4 MOV W7, W19
	0x035C27A8 BL 0x35C1DA0
	0x035C27AC LDP X20, X19, [X31 + 0x50]
	0x035C27B0 LDP X22, X21, [X31 + 0x40]
	0x035C27B4 LDP X24, X23, [X31 + 0x30]
	0x035C27B8 LDP X26, X25, [X31 + 0x20]
	0x035C27BC LDR X30, [X31 + 0x10]
	0x035C27C0 ADD X31, X31, 0x60
	0x035C27C4 RET
	0x035C27C8 SUB X31, X31, 0x60
	0x035C27CC STP X30, X27, [X31 + 0x10]
	0x035C27D0 STP X26, X25, [X31 + 0x20]
	0x035C27D4 STP X24, X23, [X31 + 0x30]
	0x035C27D8 STP X22, X21, [X31 + 0x40]
	0x035C27DC STP X20, X19, [X31 + 0x50]
	0x035C27E0 ADRP X26, 0xE1E000
	0x035C27E4 ADRP X27, 0xB31000
	0x035C27E8 LDRB W8, [X26 + 0x198]
	0x035C27EC LDR X27, [X27 + 0x788]
	0x035C27F0 MOV W19, W6
	0x035C27F4 MOV X20, X5
	0x035C27F8 MOV X21, X4
	0x035C27FC MOV X22, X3
	0x035C2800 MOV X23, X2
	0x035C2804 MOV X24, X1
	0x035C2808 MOV W25, W0
	0x035C280C TBNZ X8, 0x0, 0x35C2824
	0x035C2810 ADRP X0, 0xB31000
	0x035C2814 LDR X0, [X0 + 0x788]
	0x035C2818 BL 0x1C16CF4
	0x035C281C MOVZ W8, 0x1
	0x035C2820 STRB W8, [X26 + 0x198]
	0x035C2824 LDR X0, [X27]
	0x035C2828 LDR W8, [X0 + 0xE0]
	0x035C282C CBNZ W8, 0x35C2834
	0x035C2830 BL 0x1C16DFC
	0x035C2834 MOVZ W1, 0x1
	0x035C2838 MOV W0, W25
	0x035C283C MOV X2, X24
	0x035C2840 MOV X3, X23
	0x035C2844 MOV X4, X22
	0x035C2848 MOV X5, X21
	0x035C284C MOV X6, X20
	0x035C2850 MOV W7, W19
	0x035C2854 BL 0x35C1DA0
	0x035C2858 LDP X20, X19, [X31 + 0x50]
	0x035C285C LDP X22, X21, [X31 + 0x40]
	0x035C2860 LDP X24, X23, [X31 + 0x30]
	0x035C2864 LDP X26, X25, [X31 + 0x20]
	0x035C2868 LDP X30, X27, [X31 + 0x10]
	0x035C286C ADD X31, X31, 0x60
	0x035C2870 RET
	0x035C2874 STR X30, [X31 - 0x60]!
	0x035C2878 STP X28, X27, [X31 + 0x10]
	0x035C287C STP X26, X25, [X31 + 0x20]
	0x035C2880 STP X24, X23, [X31 + 0x30]
	0x035C2884 STP X22, X21, [X31 + 0x40]
	0x035C2888 STP X20, X19, [X31 + 0x50]
	0x035C288C ADRP X27, 0xE1E000
	0x035C2890 ADRP X28, 0xB31000
	0x035C2894 LDRB W8, [X27 + 0x199]
	0x035C2898 LDR X28, [X28 + 0x788]
	0x035C289C MOV W19, W7
	0x035C28A0 MOV X20, X6
	0x035C28A4 MOV X21, X5
	0x035C28A8 MOV X22, X4
	0x035C28AC MOV X23, X3
	0x035C28B0 MOV X24, X2
	0x035C28B4 MOV W25, W1
	0x035C28B8 MOV W26, W0

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], D8
	003 Move [X31+24], X30
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X19, 0xE1F000
	009 Move X22, 0xB33000
	010 Move W8, [X19+427]
	011 Move X22, [X22+712]
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {39}
	016 Move X0, 0xB76000
	017 Move X0, [X0+3328]
	018 Call 0x1C17CF4
	019 Move X0, 0xB76000
	020 Move X0, [X0+3336]
	021 Call 0x1C17CF4
	022 Move X0, 0xB33000
	023 Move X0, [X0+712]
	024 Call 0x1C17CF4
	025 Move X0, 0xB6D000
	026 Move X0, [X0+2424]
	027 Call 0x1C17CF4
	028 Move X0, 0xB6D000
	029 Move X0, [X0+2432]
	030 Call 0x1C17CF4
	031 Move X0, 0xB75000
	032 Move X0, [X0+2880]
	033 Call 0x1C17CF4
	034 Move X0, 0xB5B000
	035 Move X0, [X0+1240]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X19+427], W8
	039 Move X8, [X22]
	040 Move [X31], X31
	041 Move [X31+8], X31
	042 Move W9, [X8+224]
	043 Compare W9, 0
	044 JumpIfNotEqual {48}
	045 Move X0, X8
	046 Call 0x1C17DFC
	047 Move X8, [X22]
	048 Move X9, [X8+184]
	049 Move X0, [X9+32]
	050 Compare X0, 0
	051 JumpIfEqual {112}
	052 Move W9, [X8+224]
	053 Compare W9, 0
	054 JumpIfNotEqual {62}
	055 Move X0, X8
	056 Call 0x1C17DFC
	057 Move X8, [X22]
	058 Move X8, [X8+184]
	059 Move X0, [X8+32]
	060 Compare X0, 0
	061 JumpIfEqual {334}
	062 Move X1, X31
	063 Call UnityWebRequest.get_isDone, X0
	064 Move X8, [X22]
	065 Move TEMP, X0
	066 And TEMP, TEMP, 1
	067 Compare TEMP, 1
	068 JumpIfNotEqual {112}
	069 Move W9, [X8+224]
	070 Compare W9, 0
	071 JumpIfNotEqual {75}
	072 Move X0, X8
	073 Call 0x1C17DFC
	074 Move X8, [X22]
	075 Move X8, [X8+184]
	076 Move X0, [X8+32]
	077 Compare X0, 0
	078 JumpIfEqual {334}
	079 Move X1, X31
	080 Call UnityWebRequest.get_result, X0
	081 NotImplemented "Instruction CMP not yet implemented."
	082 Move X0, [X22]
	083 Move W8, [X0+224]
	084 Compare W8, 0
	085 JumpIfNotEqual {88}
	086 Call 0x1C17DFC
	087 Move X0, [X22]
	088 Move X8, [X0+184]
	089 Move X0, [X8+24]
	090 Compare X0, 0
	091 JumpIfEqual {334}
	092 Move X8, [X0]
	093 Move X1, X31
	094 Move X9, [X8+840]
	095 Move X2, [X8+848]
	096 NotImplemented "Instruction BLR not yet implemented."
	097 Move X0, [X22]
	098 Move W8, [X0+224]
	099 Compare W8, 0
	100 JumpIfNotEqual {103}
	101 Call 0x1C17DFC
	102 Move X0, [X22]
	103 Move X8, [X0+184]
	104 Move X0, [X8+32]
	105 Compare X0, 0
	106 JumpIfEqual {334}
	107 Move X1, X31
	108 Call UnityWebRequest.Dispose, X0
	109 Move X8, [X22]
	110 Move X9, [X8+184]
	111 Move [X9+32], X31
	112 Move W9, [X8+224]
	113 Compare W9, 0
	114 JumpIfNotEqual {118}
	115 Move X0, X8
	116 Call 0x1C17DFC
	117 Move X8, [X22]
	118 Move X8, [X8+184]
	119 Move X8, [X8+32]
	120 Compare X8, 0
	121 JumpIfNotEqual {326}
	122 Move X0, X31
	123 Call Time.get_realtimeSinceStartup
	124 Move X0, [X22]
	125 Move V8, V0
	126 Move W8, [X0+224]
	127 Compare W8, 0
	128 JumpIfNotEqual {131}
	129 Call 0x1C17DFC
	130 Move X0, [X22]
	131 Move X8, [X0+184]
	132 Move S1, 30
	133 Move V0, [X8+56]
	134 Add S0, S0, S1
	135 NotImplemented "Instruction FCMP not yet implemented."
	136 Move X19, 0xB76000
	137 Move X20, 0xB76000
	138 Move X19, [X19+3336]
	139 Move X20, [X20+3328]
	140 Move W8, [X0+224]
	141 Compare W8, 0
	142 JumpIfNotEqual {145}
	143 Call 0x1C17DFC
	144 Move X0, [X22]
	145 Move X8, [X0+184]
	146 Move X0, [X8+16]
	147 Compare X0, 0
	148 JumpIfEqual {334}
	149 Move X2, [X19]
	150 Add X1, X31, 8
	151 Call ConcurrentQueue`1<Object>.TryPeek, X0, X1
	152 Move TEMP, X0
	153 And TEMP, TEMP, 1
	154 Compare TEMP, 1
	155 JumpIfNotEqual {239}
	156 Move X0, [X22]
	157 Move W8, [X0+224]
	158 Compare W8, 0
	159 JumpIfNotEqual {162}
	160 Call 0x1C17DFC
	161 Move X0, [X22]
	162 Move X8, [X0+184]
	163 Move X0, [X8+24]
	164 Compare X0, 0
	165 JumpIfEqual {334}
	166 Move X8, [X0]
	167 Move X9, [X8+488]
	168 Move X1, [X8+496]
	169 NotImplemented "Instruction BLR not yet implemented."
	170 Move X8, [X31+8]
	171 Compare X8, 0
	172 JumpIfEqual {334}
	173 NotImplemented "Instruction LDRSW not yet implemented."
	174 Add X8, X8, X0
	175 NotImplemented "Instruction CMP not yet implemented."
	176 Move X0, [X22]
	177 Move W8, [X0+224]
	178 Compare W8, 0
	179 JumpIfNotEqual {182}
	180 Call 0x1C17DFC
	181 Move X0, [X22]
	182 Move X8, [X0+184]
	183 Move X0, [X8+16]
	184 Compare X0, 0
	185 JumpIfEqual {334}
	186 Move X2, [X20]
	187 Add X1, X31, 0
	188 Call ConcurrentQueue`1<Object>.TryDequeue, X0, X1
	189 Move X8, [X22]
	190 Move X8, [X8+184]
	191 Move X0, [X8+24]
	192 Compare X0, 0
	193 JumpIfEqual {334}
	194 Move X8, [X0]
	195 Move X9, [X8+488]
	196 Move X1, [X8+496]
	197 NotImplemented "Instruction BLR not yet implemented."
	198 Compare X0, 0
	199 JumpIfEqual {219}
	200 Move X0, [X22]
	201 Move W8, [X0+224]
	202 Compare W8, 0
	203 JumpIfNotEqual {206}
	204 Call 0x1C17DFC
	205 Move X0, [X22]
	206 Move X8, [X0+184]
	207 Move X1, [X8+8]
	208 Compare X1, 0
	209 JumpIfEqual {334}
	210 Move X0, [X8+24]
	211 Compare X0, 0
	212 JumpIfEqual {334}
	213 Move X8, [X0]
	214 Move W3, [X1+24]
	215 Move W2, W31
	216 Move X9, [X8+904]
	217 Move X4, [X8+912]
	218 NotImplemented "Instruction BLR not yet implemented."
	219 Move X0, [X22]
	220 Move W8, [X0+224]
	221 Compare W8, 0
	222 JumpIfNotEqual {225}
	223 Call 0x1C17DFC
	224 Move X0, [X22]
	225 Move X1, [X31+8]
	226 Compare X1, 0
	227 JumpIfEqual {334}
	228 Move X8, [X0+184]
	229 Move X0, [X8+24]
	230 Compare X0, 0
	231 JumpIfEqual {334}
	232 Move X8, [X0]
	233 Move W3, [X1+24]
	234 Move W2, W31
	235 Move X9, [X8+904]
	236 Move X4, [X8+912]
	237 NotImplemented "Instruction BLR not yet implemented."
	238 Move X0, [X22]
	239 Move X0, [X22]
	240 Move W8, [X0+224]
	241 Compare W8, 0
	242 JumpIfNotEqual {245}
	243 Call 0x1C17DFC
	244 Move X0, [X22]
	245 Move X8, [X0+184]
	246 Move X0, [X8+24]
	247 Compare X0, 0
	248 JumpIfEqual {334}
	249 Move X8, [X0]
	250 Move X9, [X8+488]
	251 Move X1, [X8+496]
	252 NotImplemented "Instruction BLR not yet implemented."
	253 Compare X0, 0
	254 JumpIfEqual {326}
	255 Move X0, [X22]
	256 Move W8, [X0+224]
	257 Compare W8, 0
	258 JumpIfNotEqual {261}
	259 Call 0x1C17DFC
	260 Move X0, [X22]
	261 Move X9, 0xB6D000
	262 Move X8, [X0+184]
	263 Move X9, [X9+2424]
	264 Move X20, [X8+48]
	265 Move X0, [X9]
	266 Call 0x1C17F10
	267 Move X8, 0xB5B000
	268 Move X8, [X8+1240]
	269 Move X1, X20
	270 Move X3, X31
	271 Move X19, X0
	272 Move X2, [X8]
	273 Call UnityWebRequest..ctor, X0, X1, X2
	274 Move X8, [X22]
	275 Move X8, [X8+184]
	276 Move X0, [X8+24]
	277 Move [X8+32], X19
	278 Compare X0, 0
	279 JumpIfEqual {334}
	280 Move X8, [X0]
	281 Move X9, [X8+1016]
	282 Move X1, [X8+1024]
	283 NotImplemented "Instruction BLR not yet implemented."
	284 Move X8, 0xB6D000
	285 Move X8, [X8+2432]
	286 Move X21, X0
	287 Move X8, [X8]
	288 Move X0, X8
	289 Call 0x1C17F10
	290 Move X1, X21
	291 Move X2, X31
	292 Move X20, X0
	293 Call UploadHandlerRaw..ctor, X0, X1
	294 Compare X19, 0
	295 JumpIfEqual {334}
	296 Move X0, X19
	297 Move X1, X20
	298 Move X2, X31
	299 Call UnityWebRequest.set_uploadHandler, X0, X1
	300 Move X8, [X22]
	301 Move X8, [X8+184]
	302 Move X0, [X8+32]
	303 Compare X0, 0
	304 JumpIfEqual {334}
	305 Move X1, X31
	306 Call UnityWebRequest.get_uploadHandler, X0
	307 Compare X0, 0
	308 JumpIfEqual {334}
	309 Move X8, 0xB75000
	310 Move X8, [X8+2880]
	311 Move X2, X31
	312 Move X1, [X8]
	313 Call UploadHandler.set_contentType, X0, X1
	314 Move X8, [X22]
	315 Move X8, [X8+184]
	316 Move X0, [X8+32]
	317 Compare X0, 0
	318 JumpIfEqual {334}
	319 Move X1, X31
	320 Call UnityWebRequest.SendWebRequest, X0
	321 Move X0, X31
	322 Call Time.get_realtimeSinceStartup
	323 Move X8, [X22]
	324 Move X8, [X8+184]
	325 Move [X8+56], S0
	326 Move X20, [X31+48]
	327 Move X19, [X31+56]
	328 Move X22, [X31+32]
	329 Move X21, [X31+40]
	330 Move X30, [X31+24]
	331 Move V8, [X31+16]
	332 Add X31, X31, 64
	333 Return 
	334 Call 0x1C17F20

