Type: UnityEngine.Audio.AudioMixer

Method: System.Void .ctor()

Disassembly:
	0x03BFE92C BL 0x33C5D2C
	0x03BFE930 TBZ X0, 0x0, 0x3BFE964
	0x03BFE934 ADRP X20, 0x7E5000
	0x03BFE938 LDR X1, [X20 + 0xCC0]
	0x03BFE93C CBNZ X1, 0x3BFE954
	0x03BFE940 ADRP X0, 0xFFFFFFFFFCF1A000
	0x03BFE944 ADD X0, X0, 0x558
	0x03BFE948 BL 0x1C16CB8
	0x03BFE94C MOV X1, X0
	0x03BFE950 STR X0, [X20 + 0xCC0]
	0x03BFE954 MOV X0, X19
	0x03BFE958 LDP X20, X19, [X31 + 0x10]
	0x03BFE95C LDR X30, [X31], #0x20
	0x03BFE960 BR X1
	0x03BFE964 LDP X20, X19, [X31 + 0x10]
	0x03BFE968 LDR X30, [X31], #0x20
	0x03BFE96C RET
	0x03BFE970 STR X30, [X31 - 0x20]!
	0x03BFE974 STP X20, X19, [X31 + 0x10]
	0x03BFE978 ADRP X20, 0x7E5000
	0x03BFE97C LDR X1, [X20 + 0xCC0]
	0x03BFE980 MOV X19, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x7E6000
	006 Move X21, 0x4F6000
	007 Move W8, [X20+3009]
	008 Move X21, [X21+1432]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x4F6000
	015 Move X0, [X0+1432]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3009], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X1, X31
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call Object..ctor, X0
	031 Return 

Method: UnityEngine.Audio.AudioMixerGroup[] FindMatchingGroups(System.String subPath)

Disassembly:
	0x03BFE984 CBNZ X1, 0x3BFE99C
	0x03BFE988 ADRP X0, 0xFFFFFFFFFCF1A000
	0x03BFE98C ADD X0, X0, 0x558
	0x03BFE990 BL 0x1C16CB8
	0x03BFE994 MOV X1, X0
	0x03BFE998 STR X0, [X20 + 0xCC0]
	0x03BFE99C MOV X0, X19
	0x03BFE9A0 LDP X20, X19, [X31 + 0x10]
	0x03BFE9A4 LDR X30, [X31], #0x20
	0x03BFE9A8 BR X1
	0x03BFE9AC STR X30, [X31 - 0x20]!
	0x03BFE9B0 STP X20, X19, [X31 + 0x10]
	0x03BFE9B4 MOV X19, X0
	0x03BFE9B8 LDR X0, [X0]
	0x03BFE9BC MOV X1, X31
	0x03BFE9C0 MOV X2, X31
	0x03BFE9C4 BL 0x33C5D2C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7E6000
	006 Move X2, [X21+3016]
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51384320
	012 Add X0, X0, 3921
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+3016], X0
	016 Move X0, X20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Boolean SetFloat(System.String name, System.Single value)

Disassembly:
	0x03BFE9C8 TBZ X0, 0x0, 0x3BFEA00
	0x03BFE9CC ADRP X20, 0x7E5000
	0x03BFE9D0 LDR X1, [X20 + 0xCC8]
	0x03BFE9D4 LDR X19, [X19]
	0x03BFE9D8 CBNZ X1, 0x3BFE9F0
	0x03BFE9DC ADRP X0, 0xFFFFFFFFFCF04000
	0x03BFE9E0 ADD X0, X0, 0xC98
	0x03BFE9E4 BL 0x1C16CB8
	0x03BFE9E8 MOV X1, X0
	0x03BFE9EC STR X0, [X20 + 0xCC8]
	0x03BFE9F0 MOV X0, X19
	0x03BFE9F4 LDP X20, X19, [X31 + 0x10]
	0x03BFE9F8 LDR X30, [X31], #0x20
	0x03BFE9FC BR X1
	0x03BFEA00 LDP X20, X19, [X31 + 0x10]
	0x03BFEA04 LDR X30, [X31], #0x20
	0x03BFEA08 RET
	0x03BFEA0C STR X30, [X31 - 0x20]!
	0x03BFEA10 STP X20, X19, [X31 + 0x10]
	0x03BFEA14 ADRP X20, 0x7E5000
	0x03BFEA18 LDR X1, [X20 + 0xCC8]

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x7E6000
	007 Move X2, [X21+3024]
	008 Move V8, V0
	009 Move X19, X1
	010 Move X20, X0
	011 Compare X2, 0
	012 JumpIfNotEqual {18}
	013 Move X0, -51335168
	014 Add X0, X0, 2815
	015 Call 0x1C17CB8
	016 Move X2, X0
	017 Move [X21+3024], X0
	018 Move X0, X20
	019 Move X1, X19
	020 Move X20, [X31+32]
	021 Move X19, [X31+40]
	022 Move X30, [X31+16]
	023 Move X21, [X31+24]
	024 Move V0, V8
	025 Move V8, [X31+48]
	026 CallNoReturn X2

