Type: UnityEngine.AudioSettings/Mobile

Method: System.Boolean get_muteState()

Disassembly:
	0x03BFC848 LDP X20, X19, [X31 + 0x20]
	0x03BFC84C LDP X30, X21, [X31 + 0x10]
	0x03BFC850 MOV V0.16B, V8.16B
	0x03BFC854 LDR V8, [X31], #0x30
	0x03BFC858 BR X2
	0x03BFC85C STP X30, X21, [X31 - 0x20]!
	0x03BFC860 STP X20, X19, [X31 + 0x10]
	0x03BFC864 ADRP X21, 0x7E7000
	0x03BFC868 LDR X2, [X21 + 0xAE0]
	0x03BFC86C MOV W19, W1
	0x03BFC870 MOV X20, X0
	0x03BFC874 CBNZ X2, 0x3BFC88C
	0x03BFC878 ADRP X0, 0xFFFFFFFFFCF22000
	0x03BFC87C ADD X0, X0, 0x6E4
	0x03BFC880 BL 0x1C16CB8
	0x03BFC884 MOV X2, X0
	0x03BFC888 STR X0, [X21 + 0xAE0]
	0x03BFC88C AND W1, W19, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x7E8000
	005 Move X20, 0x563000
	006 Move W8, [X19+2672]
	007 Move X20, [X20+2448]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x563000
	013 Move X0, [X0+2448]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+2672], W8
	017 Move X8, [X20]
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X8, [X8+184]
	021 Move W0, [X8]
	022 Move X30, [X31+32]
	023 Return X0

Method: System.Void set_muteState(System.Boolean value)

Disassembly:
	0x03BFC890 MOV X0, X20
	0x03BFC894 LDP X20, X19, [X31 + 0x10]
	0x03BFC898 LDP X30, X21, [X31], #0x20
	0x03BFC89C BR X2
	0x03BFC8A0 STR X30, [X31 - 0x20]!
	0x03BFC8A4 STP X20, X19, [X31 + 0x10]
	0x03BFC8A8 ADRP X20, 0x7E7000
	0x03BFC8AC LDR X1, [X20 + 0xAE8]
	0x03BFC8B0 MOV X19, X0
	0x03BFC8B4 CBNZ X1, 0x3BFC8CC
	0x03BFC8B8 ADRP X0, 0xFFFFFFFFFCF1E000
	0x03BFC8BC ADD X0, X0, 0x713
	0x03BFC8C0 BL 0x1C16CB8
	0x03BFC8C4 MOV X1, X0
	0x03BFC8C8 STR X0, [X20 + 0xAE8]
	0x03BFC8CC MOV X0, X19
	0x03BFC8D0 LDP X20, X19, [X31 + 0x10]
	0x03BFC8D4 LDR X30, [X31], #0x20
	0x03BFC8D8 BR X1
	0x03BFC8DC STR D8, [X31 - 0x20]!

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7E8000
	006 Move X20, 0x563000
	007 Move W8, [X21+2673]
	008 Move X20, [X20+2448]
	009 Move W19, W0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x563000
	015 Move X0, [X0+2448]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2673], W8
	019 Move X8, [X20]
	020 And W9, W19, 1
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move X8, [X8+184]
	024 Move [X8], W9
	025 Move X30, [X31+32]
	026 Move X21, [X31+40]
	027 Return 

Method: System.Boolean get_stopAudioOutputOnMute()

Disassembly:
	0x03BFC8E0 STR X30, [X31 + 0x8]
	0x03BFC8E4 STP X20, X19, [X31 + 0x10]
	0x03BFC8E8 ADRP X20, 0x7E7000
	0x03BFC8EC LDR X1, [X20 + 0xAF0]
	0x03BFC8F0 MOV V8.16B, V0.16B
	0x03BFC8F4 MOV X19, X0
	0x03BFC8F8 CBNZ X1, 0x3BFC910
	0x03BFC8FC ADRP X0, 0xFFFFFFFFFCF2A000
	0x03BFC900 ADD X0, X0, 0x9D6
	0x03BFC904 BL 0x1C16CB8
	0x03BFC908 MOV X1, X0
	0x03BFC90C STR X0, [X20 + 0xAF0]
	0x03BFC910 MOV X0, X19
	0x03BFC914 LDP X20, X19, [X31 + 0x10]
	0x03BFC918 LDR X30, [X31 + 0x8]
	0x03BFC91C MOV V0.16B, V8.16B
	0x03BFC920 LDR V8, [X31], #0x20
	0x03BFC924 BR X1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x7E8000
	005 Move X20, 0x563000
	006 Move W8, [X19+2674]
	007 Move X20, [X20+2448]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x563000
	013 Move X0, [X0+2448]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+2674], W8
	017 Move X8, [X20]
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X8, [X8+184]
	021 Move W0, [X8+1]
	022 Move X30, [X31+32]
	023 Return X0

Method: System.Void InvokeOnMuteStateChanged(System.Boolean mute)

Disassembly:
	0x03BFC928 STR D8, [X31 - 0x20]!
	0x03BFC92C STR X30, [X31 + 0x8]
	0x03BFC930 STP X20, X19, [X31 + 0x10]
	0x03BFC934 ADRP X20, 0x7E7000
	0x03BFC938 LDR X1, [X20 + 0xAC8]
	0x03BFC93C MOV V8.16B, V0.16B
	0x03BFC940 MOV X19, X0
	0x03BFC944 CBNZ X1, 0x3BFC95C
	0x03BFC948 ADRP X0, 0xFFFFFFFFFCF1A000
	0x03BFC94C ADD X0, X0, 0x16F
	0x03BFC950 BL 0x1C16CB8
	0x03BFC954 MOV X1, X0
	0x03BFC958 STR X0, [X20 + 0xAC8]
	0x03BFC95C MOV X0, X19
	0x03BFC960 LDP X20, X19, [X31 + 0x10]
	0x03BFC964 LDR X30, [X31 + 0x8]
	0x03BFC968 MOV V0.16B, V8.16B
	0x03BFC96C LDR V8, [X31], #0x20
	0x03BFC970 BR X1
	0x03BFC974 STR D8, [X31 - 0x20]!
	0x03BFC978 STR X30, [X31 + 0x8]
	0x03BFC97C STP X20, X19, [X31 + 0x10]
	0x03BFC980 ADRP X20, 0x7E7000
	0x03BFC984 LDR X1, [X20 + 0xAF8]
	0x03BFC988 MOV V8.16B, V0.16B
	0x03BFC98C MOV X19, X0
	0x03BFC990 CBNZ X1, 0x3BFC9A8
	0x03BFC994 ADRP X0, 0xFFFFFFFFFCF00000
	0x03BFC998 ADD X0, X0, 0xF20
	0x03BFC99C BL 0x1C16CB8
	0x03BFC9A0 MOV X1, X0
	0x03BFC9A4 STR X0, [X20 + 0xAF8]
	0x03BFC9A8 MOV X0, X19
	0x03BFC9AC LDP X20, X19, [X31 + 0x10]
	0x03BFC9B0 LDR X30, [X31 + 0x8]
	0x03BFC9B4 MOV V0.16B, V8.16B
	0x03BFC9B8 LDR V8, [X31], #0x20
	0x03BFC9BC BR X1
	0x03BFC9C0 STR X30, [X31 - 0x20]!
	0x03BFC9C4 STP X20, X19, [X31 + 0x10]
	0x03BFC9C8 ADRP X20, 0x7E7000
	0x03BFC9CC LDR X1, [X20 + 0xB00]
	0x03BFC9D0 MOV X19, X0
	0x03BFC9D4 CBNZ X1, 0x3BFC9EC
	0x03BFC9D8 ADRP X0, 0xFFFFFFFFFCF1C000
	0x03BFC9DC ADD X0, X0, 0x52D
	0x03BFC9E0 BL 0x1C16CB8
	0x03BFC9E4 MOV X1, X0
	0x03BFC9E8 STR X0, [X20 + 0xB00]
	0x03BFC9EC MOV X0, X19
	0x03BFC9F0 LDP X20, X19, [X31 + 0x10]
	0x03BFC9F4 LDR X30, [X31], #0x20
	0x03BFC9F8 BR X1
	0x03BFC9FC STR X30, [X31 - 0x20]!
	0x03BFCA00 STP X20, X19, [X31 + 0x10]
	0x03BFCA04 ADRP X20, 0x7E7000
	0x03BFCA08 LDR X1, [X20 + 0xB08]
	0x03BFCA0C MOV X19, X0
	0x03BFCA10 CBNZ X1, 0x3BFCA28
	0x03BFCA14 ADRP X0, 0xFFFFFFFFFCF18000
	0x03BFCA18 ADD X0, X0, 0x4F6
	0x03BFCA1C BL 0x1C16CB8
	0x03BFCA20 MOV X1, X0
	0x03BFCA24 STR X0, [X20 + 0xB08]
	0x03BFCA28 MOV X0, X19
	0x03BFCA2C LDP X20, X19, [X31 + 0x10]
	0x03BFCA30 LDR X30, [X31], #0x20
	0x03BFCA34 BR X1
	0x03BFCA38 STP X30, X21, [X31 - 0x20]!
	0x03BFCA3C STP X20, X19, [X31 + 0x10]
	0x03BFCA40 ADRP X21, 0x7E7000
	0x03BFCA44 LDR X2, [X21 + 0xB10]
	0x03BFCA48 MOV X19, X1
	0x03BFCA4C MOV X20, X0
	0x03BFCA50 CBNZ X2, 0x3BFCA68
	0x03BFCA54 ADRP X0, 0xFFFFFFFFFCF04000
	0x03BFCA58 ADD X0, X0, 0xA60
	0x03BFCA5C BL 0x1C16CB8
	0x03BFCA60 MOV X2, X0
	0x03BFCA64 STR X0, [X21 + 0xB10]
	0x03BFCA68 MOV X0, X20
	0x03BFCA6C MOV X1, X19
	0x03BFCA70 LDP X20, X19, [X31 + 0x10]
	0x03BFCA74 LDP X30, X21, [X31], #0x20
	0x03BFCA78 BR X2
	0x03BFCA7C STP X30, X21, [X31 - 0x20]!
	0x03BFCA80 STP X20, X19, [X31 + 0x10]
	0x03BFCA84 ADRP X21, 0x7E7000
	0x03BFCA88 LDR X2, [X21 + 0xB18]
	0x03BFCA8C MOV X19, X1
	0x03BFCA90 MOV X20, X0
	0x03BFCA94 CBNZ X2, 0x3BFCAAC
	0x03BFCA98 ADRP X0, 0xFFFFFFFFFCEF6000
	0x03BFCA9C ADD X0, X0, 0xD08
	0x03BFCAA0 BL 0x1C16CB8
	0x03BFCAA4 MOV X2, X0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x7E8000
	007 Move W8, [X20+2675]
	008 Move W19, W0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x563000
	014 Move X0, [X0+2448]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X20+2675], W8
	018 Move X21, 0x7E8000
	019 Move X20, 0x563000
	020 Move W8, [X21+3049]
	021 Move X20, [X20+2448]
	022 Compare W8, 0
	023 JumpIfNotEqual {29}
	024 Move X0, 0x563000
	025 Move X0, [X0+2448]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X21+3049], W8
	029 Move X8, [X20]
	030 And W10, W19, 1
	031 Move X8, [X8+184]
	032 Move W9, [X8]
	033 NotImplemented "Instruction CMP not yet implemented."
	034 NotImplemented "Instruction CSET not yet implemented."
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move X22, 0x7E8000
	037 Move W9, [X22+3050]
	038 Compare W9, 0
	039 JumpIfNotEqual {46}
	040 Move X0, X20
	041 Call 0x1C17CF4
	042 Move X8, [X20]
	043 Move W9, 1
	044 Move [X22+3050], W9
	045 Move X8, [X8+184]
	046 And W9, W19, 1
	047 Move [X8], W9
	048 Move X22, 0x7E8000
	049 Move W9, [X22+2674]
	050 Move TEMP, X9
	051 And TEMP, TEMP, 1
	052 Compare TEMP, 1
	053 JumpIfEqual {60}
	054 Move X0, X20
	055 Call 0x1C17CF4
	056 Move X8, [X20]
	057 Move W9, 1
	058 Move [X22+2674], W9
	059 Move X8, [X8+184]
	060 Move W9, [X8+1]
	061 Compare W9, 0
	062 JumpIfEqual {94}
	063 Move W9, [X21+3049]
	064 Compare W9, 0
	065 JumpIfNotEqual {72}
	066 Move X0, X20
	067 Call 0x1C17CF4
	068 Move X8, [X20]
	069 Move W9, 1
	070 Move [X21+3049], W9
	071 Move X8, [X8+184]
	072 Move W8, [X8]
	073 Compare W8, 0
	074 JumpIfEqual {84}
	075 Move X21, 0x7E8000
	076 Move X8, [X21+2664]
	077 Compare X8, 0
	078 JumpIfNotEqual {93}
	079 Move X0, -51261440
	080 Add X0, X0, 1280
	081 Call 0x1C17CB8
	082 Move X8, X0
	083 Move [X21+2664], X0
	084 Move X21, 0x7E8000
	085 Move X8, [X21+2656]
	086 Compare X8, 0
	087 JumpIfNotEqual {93}
	088 Move X0, -51318784
	089 Add X0, X0, 3482
	090 Call 0x1C17CB8
	091 Move X8, X0
	092 Move [X21+2656], X0
	093 NotImplemented "Instruction BLR not yet implemented."
	094 Move X8, [X20]
	095 Move X8, [X8+184]
	096 Move X8, [X8+8]
	097 Compare X8, 0
	098 JumpIfEqual {109}
	099 Move X3, [X8+24]
	100 Move X0, [X8+64]
	101 Move X2, [X8+40]
	102 And W1, W19, 1
	103 Move X20, [X31+32]
	104 Move X19, [X31+40]
	105 Move X22, [X31+16]
	106 Move X21, [X31+24]
	107 Move X30, [X31+48]
	108 CallNoReturn X3
	109 Move X20, [X31+32]
	110 Move X19, [X31+40]
	111 Move X22, [X31+16]
	112 Move X21, [X31+24]
	113 Move X30, [X31+48]
	114 Return 

Method: System.Boolean InvokeIsStopAudioOutputOnMuteEnabled()

Disassembly:
	0x03BFCAF8 LDR X30, [X31], #0x20
	0x03BFCAFC BR X2
	0x03BFCB00 FMOV S0, 1
	0x03BFCB04 B 0x3BFCB08
	0x03BFCB08 STR D8, [X31 - 0x30]!
	0x03BFCB0C STR X30, [X31 + 0x8]
	0x03BFCB10 STP X22, X21, [X31 + 0x10]
	0x03BFCB14 STP X20, X19, [X31 + 0x20]
	0x03BFCB18 ADRP X21, 0x7E7000
	0x03BFCB1C ADRP X22, 0x4F7000
	0x03BFCB20 LDRB W8, [X21 + 0xB20]
	0x03BFCB24 LDR X22, [X22 + 0x598]
	0x03BFCB28 MOV V8.16B, V0.16B
	0x03BFCB2C MOV X19, X1
	0x03BFCB30 MOV X20, X0
	0x03BFCB34 TBNZ X8, 0x0, 0x3BFCB64
	0x03BFCB38 ADRP X0, 0x4F7000
	0x03BFCB3C LDR X0, [X0 + 0xA28]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x7E8000
	005 Move X20, 0x563000
	006 Move W8, [X19+2674]
	007 Move X20, [X20+2448]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x563000
	013 Move X0, [X0+2448]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+2674], W8
	017 Move X8, [X20]
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X8, [X8+184]
	021 Move W0, [X8+1]
	022 Move X30, [X31+32]
	023 Return X0

Method: System.Void StartAudioOutput()

Disassembly:
	0x03BFCAD0 MOV X19, X0
	0x03BFCAD4 CBNZ X2, 0x3BFCAEC
	0x03BFCAD8 ADRP X0, 0xFFFFFFFFFCF02000
	0x03BFCADC ADD X0, X0, 0xACF
	0x03BFCAE0 BL 0x1C16CB8
	0x03BFCAE4 MOV X2, X0
	0x03BFCAE8 STR X0, [X20 + 0xAD0]
	0x03BFCAEC MOV X0, X19
	0x03BFCAF0 LDP X20, X19, [X31 + 0x10]
	0x03BFCAF4 MOV X1, X31

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, 0x7E8000
	004 Move X0, [X19+2656]
	005 Compare X0, 0
	006 JumpIfNotEqual {11}
	007 Move X0, -51318784
	008 Add X0, X0, 3482
	009 Call 0x1C17CB8
	010 Move [X19+2656], X0
	011 Move X30, [X31+16]
	012 Move X19, [X31+24]
	013 CallNoReturn X0

Method: System.Void StopAudioOutput()

Disassembly:
	0x03BFCAA8 STR X0, [X21 + 0xB18]
	0x03BFCAAC MOV X0, X20
	0x03BFCAB0 MOV X1, X19
	0x03BFCAB4 LDP X20, X19, [X31 + 0x10]
	0x03BFCAB8 LDP X30, X21, [X31], #0x20
	0x03BFCABC BR X2
	0x03BFCAC0 STR X30, [X31 - 0x20]!
	0x03BFCAC4 STP X20, X19, [X31 + 0x10]
	0x03BFCAC8 ADRP X20, 0x7E7000
	0x03BFCACC LDR X2, [X20 + 0xAD0]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, 0x7E8000
	004 Move X0, [X19+2664]
	005 Compare X0, 0
	006 JumpIfNotEqual {11}
	007 Move X0, -51261440
	008 Add X0, X0, 1280
	009 Call 0x1C17CB8
	010 Move [X19+2664], X0
	011 Move X30, [X31+16]
	012 Move X19, [X31+24]
	013 CallNoReturn X0

