Type: UnityEngine.VFX.VFXSpawnerState

Method: System.Void .ctor(System.IntPtr ptr, System.Boolean owner)

Disassembly:
	0x03E62D74 STRB W8, [X21 + 0xB39]
	0x03E62D78 STRB W31, [X31 + 0x8]
	0x03E62D7C LDR W8, [X19]
	0x03E62D80 ADD X0, X31, 0xC
	0x03E62D84 MOV X1, X31
	0x03E62D88 STR W8, [X31 + 0xC]
	0x03E62D8C BL 0x3399AF8
	0x03E62D90 LDRB W9, [X19 + 0x4]
	0x03E62D94 LDR X8, [X20]
	0x03E62D98 MOV W20, W0
	0x03E62D9C STRB W9, [X31 + 0x8]
	0x03E62DA0 LDR W9, [X8 + 0xE0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, X1
	006 Move X1, X31
	007 Move X20, X0
	008 And W21, W2, 1
	009 Call Object..ctor, X0
	010 Move [X20+16], X19
	011 Move [X20+24], W21
	012 Move X20, [X31+16]
	013 Move X19, [X31+24]
	014 Move X30, [X31+32]
	015 Move X21, [X31+40]
	016 Return 

Method: UnityEngine.VFX.VFXSpawnerState CreateSpawnerStateWrapper()

Disassembly:
	0x03E62DA4 CBNZ W9, 0x3E62DB0
	0x03E62DA8 MOV X0, X8
	0x03E62DAC BL 0x1C16DFC
	0x03E62DB0 ADD X0, X31, 0x8
	0x03E62DB4 MOV X1, X31
	0x03E62DB8 BL 0x33176B4
	0x03E62DBC LDRB W8, [X19 + 0x5]
	0x03E62DC0 MOV W21, W0
	0x03E62DC4 ADD X0, X31, 0x8
	0x03E62DC8 MOV X1, X31
	0x03E62DCC STRB W8, [X31 + 0x8]
	0x03E62DD0 BL 0x33176B4
	0x03E62DD4 LDR W8, [X19 + 0x8]
	0x03E62DD8 MOV W22, W0
	0x03E62DDC ADD X0, X31, 0xC
	0x03E62DE0 MOV X1, X31
	0x03E62DE4 STR W8, [X31 + 0xC]
	0x03E62DE8 BL 0x3399AF8
	0x03E62DEC LDR W8, [X19 + 0xC]
	0x03E62DF0 MOV W23, W0
	0x03E62DF4 ADD X0, X31, 0xC
	0x03E62DF8 MOV X1, X31
	0x03E62DFC STR W8, [X31 + 0xC]
	0x03E62E00 BL 0x3399AF8
	0x03E62E04 LDR W8, [X19 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x587000
	005 Move X20, 0x30A000
	006 Move W8, [X19+2712]
	007 Move X20, [X20+3840]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x30A000
	013 Move X0, [X0+3840]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+2712], W8
	017 Move X0, [X20]
	018 Call 0x1C17F10
	019 Move X1, X31
	020 Move X19, X0
	021 Call Object..ctor, X0
	022 Move X0, X19
	023 Move [X19+16], X31
	024 Move [X19+24], W31
	025 Call VFXSpawnerState.PrepareWrapper, X0
	026 Move X0, X19
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X30, [X31+32]
	030 Return X0

Method: System.Void PrepareWrapper()

Disassembly:
	0x03E62E08 MOV W24, W0
	0x03E62E0C ADD X0, X31, 0xC
	0x03E62E10 MOV X1, X31
	0x03E62E14 STR W8, [X31 + 0xC]
	0x03E62E18 BL 0x3399AF8
	0x03E62E1C EOR W8, W20, W21, 0x1
	0x03E62E20 EOR W8, W8, W22, 0x1
	0x03E62E24 EOR W8, W8, W23, 0x2
	0x03E62E28 EOR W8, W8, W24, 0x2
	0x03E62E2C LDP X20, X19, [X31 + 0x30]
	0x03E62E30 LDP X22, X21, [X31 + 0x20]
	0x03E62E34 LDP X24, X23, [X31 + 0x10]
	0x03E62E38 EOR W0, W8, W0, 0x3
	0x03E62E3C LDR X30, [X31], #0x40
	0x03E62E40 RET
	0x03E62E44 LDR X0, [X0]
	0x03E62E48 RET
	0x03E62E4C LDR W0, [X0 + 0x8]
	0x03E62E50 RET
	0x03E62E54 STP X30, X21, [X31 - 0x20]!
	0x03E62E58 STP X20, X19, [X31 + 0x10]
	0x03E62E5C ADRP X21, 0x586000
	0x03E62E60 LDRB W8, [X21 + 0xB3A]
	0x03E62E64 MOV X20, X1
	0x03E62E68 MOV X19, X0
	0x03E62E6C TBNZ X8, 0x0, 0x3E62E84
	0x03E62E70 ADRP X0, 0x309000
	0x03E62E74 LDR X0, [X0 + 0xF88]
	0x03E62E78 BL 0x1C16CF4
	0x03E62E7C MOVZ W8, 0x1
	0x03E62E80 STRB W8, [X21 + 0xB3A]
	0x03E62E84 CBZ X20, 0x3E62ECC
	0x03E62E88 ADRP X8, 0x309000
	0x03E62E8C LDR X8, [X8 + 0xF88]
	0x03E62E90 LDR X9, [X20]
	0x03E62E94 LDR X8, [X8]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move W8, [X0+24]
	004 Compare W8, 0
	005 JumpIfNotEqual {15}
	006 Move X8, [X0+32]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {22}
	010 Call VFXEventAttribute.CreateEventAttributeWrapper
	011 Move [X19+32], X0
	012 Move X30, [X31+16]
	013 Move X19, [X31+24]
	014 Return 
	015 Move X0, 0x292000
	016 Move X0, [X0+2000]
	017 Call 0x1C17D08
	018 Call 0x1C17F10
	019 Move X19, X0
	020 Move X0, 0x30A000
	021 Move X0, [X0+3816]
	022 Move X0, 0x292000
	023 Move X0, [X0+2000]
	024 Call 0x1C17D08
	025 Call 0x1C17F10
	026 Move X19, X0
	027 Move X0, 0x30A000
	028 Move X0, [X0+3848]
	029 Call 0x1C17D08
	030 Move X1, X0
	031 Move X0, X19
	032 Move X2, X31
	033 Call Exception..ctor, X0, X1
	034 Move X0, 0x30A000
	035 Move X0, [X0+3856]
	036 Call 0x1C17D08
	037 Move X1, X0
	038 Move X0, X19
	039 Call 0x1C17DEC

Method: System.Void SetWrapValue(System.IntPtr ptrToSpawnerState, System.IntPtr ptrToEventAttribute)

Disassembly:
	0x03E62E98 CMP X9, X8
	0x03E62E9C B.NE 0x3E62ECC
	0x03E62EA0 MOV X0, X20
	0x03E62EA4 BL 0x1C16E08
	0x03E62EA8 LDP X1, X20, [X0]
	0x03E62EAC LDR X0, [X19]
	0x03E62EB0 MOV X2, X31
	0x03E62EB4 BL 0x321BA08
	0x03E62EB8 TBZ X0, 0x0, 0x3E62ECC
	0x03E62EBC LDR W8, [X19 + 0x8]
	0x03E62EC0 CMP W8, W20
	0x03E62EC4 CSET W0, EQ
	0x03E62EC8 B 0x3E62ED0
	0x03E62ECC MOV W0, W31
	0x03E62ED0 LDP X20, X19, [X31 + 0x10]
	0x03E62ED4 LDP X30, X21, [X31], #0x20
	0x03E62ED8 RET
	0x03E62EDC STR X30, [X31 - 0x20]!
	0x03E62EE0 STP X20, X19, [X31 + 0x10]
	0x03E62EE4 MOV X20, X0
	0x03E62EE8 LDR X0, [X0]
	0x03E62EEC MOV X19, X2
	0x03E62EF0 MOV X2, X31
	0x03E62EF4 BL 0x321BA08
	0x03E62EF8 TBZ X0, 0x0, 0x3E62F0C
	0x03E62EFC LDR W8, [X20 + 0x8]
	0x03E62F00 CMP W8, W19
	0x03E62F04 CSET W0, EQ
	0x03E62F08 B 0x3E62F10
	0x03E62F0C MOV W0, W31
	0x03E62F10 LDP X20, X19, [X31 + 0x10]
	0x03E62F14 LDR X30, [X31], #0x20
	0x03E62F18 RET
	0x03E62F1C STR X30, [X31 - 0x20]!
	0x03E62F20 STP X20, X19, [X31 + 0x10]
	0x03E62F24 MOV X19, X0

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move W8, [X0+24]
	004 Compare W8, 0
	005 JumpIfNotEqual {16}
	006 Move X8, [X0+32]
	007 Compare X8, 0
	008 JumpIfEqual {23}
	009 Move [X0+16], X1
	010 Move X0, X8
	011 Move X1, X2
	012 Move X30, [X31+16]
	013 Move X19, [X31+24]
	014 Call VFXEventAttribute.SetWrapValue, X0, X1
	015 Return 
	016 Move X0, 0x292000
	017 Move X0, [X0+2000]
	018 Call 0x1C17D08
	019 Call 0x1C17F10
	020 Move X19, X0
	021 Move X0, 0x30A000
	022 Move X0, [X0+3816]
	023 Move X0, 0x292000
	024 Move X0, [X0+2000]
	025 Call 0x1C17D08
	026 Call 0x1C17F10
	027 Move X19, X0
	028 Move X0, 0x30A000
	029 Move X0, [X0+3864]
	030 Call 0x1C17D08
	031 Move X1, X0
	032 Move X0, X19
	033 Move X2, X31
	034 Call Exception..ctor, X0, X1
	035 Move X0, 0x30A000
	036 Move X0, [X0+3872]
	037 Call 0x1C17D08
	038 Move X1, X0
	039 Move X0, X19
	040 Call 0x1C17DEC

Method: System.Void Release()

Disassembly:
	0x03E62F28 LDR X0, [X0]
	0x03E62F2C CBZ X0, 0x3E62F64
	0x03E62F30 LDR X8, [X0]
	0x03E62F34 LDP X9, X1, [X8 + 0x158]
	0x03E62F38 BLR X9
	0x03E62F3C LDR W8, [X19 + 0x8]
	0x03E62F40 MOV W20, W0
	0x03E62F44 ADD X0, X31, 0xC
	0x03E62F48 MOV X1, X31
	0x03E62F4C STR W8, [X31 + 0xC]
	0x03E62F50 BL 0x3399AF8
	0x03E62F54 EOR W0, W20, W0, 0x1
	0x03E62F58 LDP X20, X19, [X31 + 0x10]
	0x03E62F5C LDR X30, [X31], #0x20
	0x03E62F60 RET
	0x03E62F64 BL 0x1C16F20
	0x03E62F68 STP X29, X30, [X31 - 0x60]!
	0x03E62F6C STP X28, X27, [X31 + 0x10]
	0x03E62F70 STP X26, X25, [X31 + 0x20]
	0x03E62F74 STP X24, X23, [X31 + 0x30]
	0x03E62F78 STP X22, X21, [X31 + 0x40]
	0x03E62F7C STP X20, X19, [X31 + 0x50]
	0x03E62F80 SUB X31, X31, 0x1E0
	0x03E62F84 ADRP X27, 0x586000
	0x03E62F88 ADRP X25, 0x309000
	0x03E62F8C ADRP X21, 0x2F9000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, X0
	006 Move X0, [X0+16]
	007 Move X1, X31
	008 Move X2, X31
	009 Call IntPtr.op_Inequality, X0, X1
	010 Move TEMP, X0
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfNotEqual {29}
	014 Move W8, [X19+24]
	015 Compare W8, 0
	016 JumpIfEqual {29}
	017 Move X21, 0x587000
	018 Move X8, [X21+2720]
	019 Move X20, [X19+16]
	020 Compare X8, 0
	021 JumpIfNotEqual {27}
	022 Move X0, -53895168
	023 Add X0, X0, 3909
	024 Call 0x1C17CB8
	025 Move X8, X0
	026 Move [X21+2720], X0
	027 Move X0, X20
	028 NotImplemented "Instruction BLR not yet implemented."
	029 Move [X19+16], X31
	030 Move [X19+32], X31
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X30, [X31+32]
	034 Move X21, [X31+40]
	035 Return 

Method: System.Void Finalize()

Disassembly:
	0x03E62FCC LDR X20, [X20 + 0xFA0]
	0x03E62FD0 LDR X24, [X24 + 0xF98]
	0x03E62FD4 LDR X28, [X28 + 0xFA0]
	0x03E62FD8 LDRB W8, [X27 + 0xB3B]
	0x03E62FDC TBNZ X8, 0x0, 0x3E63318
	0x03E62FE0 ADRP X0, 0x296000
	0x03E62FE4 LDR X0, [X0 + 0x158]
	0x03E62FE8 BL 0x1C16CF4
	0x03E62FEC ADRP X0, 0x309000
	0x03E62FF0 LDR X0, [X0 + 0xFA0]
	0x03E62FF4 BL 0x1C16CF4
	0x03E62FF8 ADRP X0, 0x309000
	0x03E62FFC LDR X0, [X0 + 0xFA8]
	0x03E63000 BL 0x1C16CF4
	0x03E63004 ADRP X0, 0x308000
	0x03E63008 LDR X0, [X0 + 0xF98]
	0x03E6300C BL 0x1C16CF4
	0x03E63010 ADRP X0, 0x2F8000
	0x03E63014 LDR X0, [X0 + 0xF98]
	0x03E63018 BL 0x1C16CF4
	0x03E6301C ADRP X0, 0x2F8000
	0x03E63020 LDR X0, [X0 + 0xFA0]
	0x03E63024 BL 0x1C16CF4
	0x03E63028 ADRP X0, 0x308000
	0x03E6302C LDR X0, [X0 + 0xFB0]
	0x03E63030 BL 0x1C16CF4
	0x03E63034 ADRP X0, 0x308000
	0x03E63038 LDR X0, [X0 + 0xFB8]
	0x03E6303C BL 0x1C16CF4
	0x03E63040 ADRP X0, 0x2F8000
	0x03E63044 LDR X0, [X0 + 0xFA8]
	0x03E63048 BL 0x1C16CF4
	0x03E6304C ADRP X0, 0x308000
	0x03E63050 LDR X0, [X0 + 0xFC0]
	0x03E63054 BL 0x1C16CF4
	0x03E63058 ADRP X0, 0x308000
	0x03E6305C LDR X0, [X0 + 0xFC8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, X0
	006 Call VFXSpawnerState.Release, X0
	007 Move X0, X19
	008 Move X20, [X31+16]
	009 Move X19, [X31+24]
	010 Move X1, X31
	011 Move X30, [X31+32]
	012 Move X21, [X31+40]
	013 Call Object.Finalize, X0
	014 Return 
	015 NotImplemented "Instruction CMP not yet implemented."
	016 Move X21, X0
	017 Move X0, X21
	018 Call 0x3EB2AD0
	019 Move X20, [X0]
	020 Call 0x3EB2AE0
	021 Move X0, X19
	022 Move X1, X31
	023 Call Object.Finalize, X0
	024 Compare X20, 0
	025 JumpIfNotEqual {32}
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Return 
	031 Move X20, X31
	032 Move X0, X20
	033 Call 0x1C17F18
	034 Move X21, X0
	035 Move X0, X19
	036 Move X1, X31
	037 Call Object.Finalize, X0
	038 Compare X20, 0
	039 JumpIfNotEqual {42}
	040 Move X0, X21
	041 Call 0x1D2D690
	042 Move X0, X20
	043 Call 0x1C17F18
	044 Call 0x1991590

Method: System.Void Dispose()

Disassembly:
	0x03E63060 BL 0x1C16CF4
	0x03E63064 ADRP X0, 0x2F8000
	0x03E63068 LDR X0, [X0 + 0xFE8]
	0x03E6306C BL 0x1C16CF4
	0x03E63070 ADRP X0, 0x308000
	0x03E63074 LDR X0, [X0 + 0xFD0]
	0x03E63078 BL 0x1C16CF4
	0x03E6307C ADRP X0, 0x308000
	0x03E63080 LDR X0, [X0 + 0xFD8]
	0x03E63084 BL 0x1C16CF4
	0x03E63088 ADRP X0, 0x2F8000
	0x03E6308C LDR X0, [X0 + 0xFF0]
	0x03E63090 BL 0x1C16CF4
	0x03E63094 ADRP X0, 0x308000
	0x03E63098 LDR X0, [X0 + 0xFE0]
	0x03E6309C BL 0x1C16CF4
	0x03E630A0 ADRP X0, 0x308000
	0x03E630A4 LDR X0, [X0 + 0xFE8]
	0x03E630A8 BL 0x1C16CF4
	0x03E630AC ADRP X0, 0x308000
	0x03E630B0 LDR X0, [X0 + 0xFF0]
	0x03E630B4 BL 0x1C16CF4
	0x03E630B8 ADRP X0, 0x2FB000
	0x03E630BC LDR X0, [X0 + 0x170]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x586000
	006 Move X20, 0x298000
	007 Move W8, [X21+2713]
	008 Move X20, [X20+3088]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x298000
	015 Move X0, [X0+3088]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2713], W8
	019 Move X0, X19
	020 Call VFXSpawnerState.Release, X0
	021 Move X0, [X20]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move X0, X19
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X1, X31
	030 Move X30, [X31+32]
	031 Move X21, [X31+40]
	032 Call GC.SuppressFinalize, X0
	033 Return 

Method: System.Void Internal_Destroy(System.IntPtr ptr)

Disassembly:
	0x03E62F90 ADRP X19, 0x296000
	0x03E62F94 ADRP X23, 0x2FA000
	0x03E62F98 ADRP X29, 0x2FA000
	0x03E62F9C ADRP X22, 0x2FA000
	0x03E62FA0 ADRP X26, 0x2F9000
	0x03E62FA4 ADRP X20, 0x2F9000
	0x03E62FA8 ADRP X24, 0x309000
	0x03E62FAC ADRP X28, 0x309000
	0x03E62FB0 LDR X25, [X25 + 0xF90]
	0x03E62FB4 LDR X21, [X21 + 0xFA8]
	0x03E62FB8 LDR X19, [X19 + 0x158]
	0x03E62FBC LDR X23, [X23 + 0x10]
	0x03E62FC0 LDR X29, [X29 + 0x50]
	0x03E62FC4 LDR X22, [X22 + 0x48]
	0x03E62FC8 LDR X26, [X26 + 0xFF8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x587000
	005 Move X1, [X20+2720]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -53895168
	010 Add X0, X0, 3909
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+2720], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

