Type: System.Security.Cryptography.X509Certificates.X509Certificate2Impl

Method: System.Collections.Generic.IEnumerable`1<System.Security.Cryptography.X509Certificates.X509Extension> get_Extensions()

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Security.Cryptography.X509Certificates.X500DistinguishedName get_IssuerName()

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Security.Cryptography.AsymmetricAlgorithm get_PrivateKey()

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Void set_PrivateKey(System.Security.Cryptography.AsymmetricAlgorithm value)

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.String get_SignatureAlgorithm()

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Security.Cryptography.X509Certificates.X500DistinguishedName get_SubjectName()

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Int32 get_Version()

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Security.Cryptography.X509Certificates.X509CertificateImplCollection get_IntermediateCertificates()

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.String GetNameInfo(System.Security.Cryptography.X509Certificates.X509NameType nameType, System.Boolean forIssuer)

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Boolean Verify(System.Security.Cryptography.X509Certificates.X509Certificate2 thisCertificate)

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Void AppendPrivateKeyInfo(System.Text.StringBuilder sb)

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Void .ctor()

Disassembly:
	0x0365704C B 0x36571E0
	0x03657050 B 0x3657080

ISIL:
	001 Move X1, X31
	002 Call X509CertificateImpl..ctor, X0
	003 Return 

