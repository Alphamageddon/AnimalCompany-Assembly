Type: System.Security.Cryptography.X509Certificates.X509Helper2

Method: Mono.Security.X509.X509Certificate GetMonoCertificate(System.Security.Cryptography.X509Certificates.X509Certificate2 certificate)

Disassembly:
	0x0365CB60 MOV X0, X22
	0x0365CB64 BL 0x365BEAC
	0x0365CB68 MOV X1, X0
	0x0365CB6C MOV X0, X20
	0x0365CB70 MOV X2, X31
	0x0365CB74 BL 0x321BA08
	0x0365CB78 TBZ X0, 0x0, 0x365CA44
	0x0365CB7C MOV X20, X31
	0x0365CB80 B 0x365CB94
	0x0365CB84 MOV X22, X31
	0x0365CB88 B 0x365CC04
	0x0365CB8C MOV X20, X31
	0x0365CB90 MOV X22, X31
	0x0365CB94 LDR X1, [X23]
	0x0365CB98 MOV X0, X19
	0x0365CB9C BL 0x1C16E00
	0x0365CBA0 CBZ X0, 0x365CC00
	0x0365CBA4 LDR X8, [X0]
	0x0365CBA8 LDR X1, [X23]
	0x0365CBAC MOV X19, X0
	0x0365CBB0 LDRH W9, [X8 + 0x12E]
	0x0365CBB4 CBZ X9, 0x365CBD8
	0x0365CBB8 LDR X10, [X8 + 0xB0]
	0x0365CBBC ADD X10, X10, 0x8
	0x0365CBC0 LDUR X11, [X10 - 0x8]
	0x0365CBC4 CMP X11, X1
	0x0365CBC8 B.EQ 0x365CBE8
	0x0365CBCC SUBS X9, X9, 0x1
	0x0365CBD0 ADD X10, X10, 0x10
	0x0365CBD4 B.NE 0x365CBC0
	0x0365CBD8 MOV X0, X19
	0x0365CBDC MOV W2, W31
	0x0365CBE0 BL 0x1C5C788
	0x0365CBE4 B 0x365CBF4
	0x0365CBE8 LDRSW X9, [X10]
	0x0365CBEC ADD X8, X8, X9, 0x4, LSL
	0x0365CBF0 ADD X0, X8, 0x138
	0x0365CBF4 LDP X8, X1, [X0]
	0x0365CBF8 MOV X0, X19
	0x0365CBFC BLR X8
	0x0365CC00 CBNZ X20, 0x365CC38
	0x0365CC04 MOV X0, X22
	0x0365CC08 LDP X20, X19, [X31 + 0x40]
	0x0365CC0C LDP X22, X21, [X31 + 0x30]
	0x0365CC10 LDP X24, X23, [X31 + 0x20]
	0x0365CC14 LDP X26, X25, [X31 + 0x10]
	0x0365CC18 LDR X30, [X31], #0x50
	0x0365CC1C RET
	0x0365CC20 MOV X0, X22
	0x0365CC24 BL 0x1C171E0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xD85000
	005 Move W8, [X20+1681]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0xADE000
	012 Move X0, [X0+448]
	013 Call 0x1C17CF4
	014 Move X0, 0xAC5000
	015 Move X0, [X0+3264]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1681], W8
	019 Compare X19, 0
	020 JumpIfEqual {54}
	021 Move X0, X19
	022 Call X509Certificate2.get_Impl, X0
	023 Compare X0, 0
	024 JumpIfEqual {36}
	025 Move X8, 0xADE000
	026 Move X8, [X8+448]
	027 Move X9, [X0]
	028 Move X8, [X8]
	029 Move W11, [X9+304]
	030 Move W10, [X8+304]
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move X9, [X9+200]
	033 Add X9, X9, X10
	034 NotImplemented "Instruction LDUR not yet implemented."
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move X20, 0xAC5000
	037 Move X20, [X20+3264]
	038 Move X0, X19
	039 Call X509Certificate2.get_RawData, X0
	040 Move X8, [X20]
	041 Move X19, X0
	042 Move X0, X8
	043 Call 0x1C17F10
	044 Move X1, X19
	045 Move X2, X31
	046 Move X20, X0
	047 Call X509Certificate..ctor, X0, X1
	048 Move X0, X20
	049 Move X20, [X31+16]
	050 Move X19, [X31+24]
	051 Move X30, [X31+32]
	052 Return X0
	053 Move X0, [X0+184]
	054 Call 0x1C17F20

Method: System.Security.Cryptography.X509Certificates.X509ChainImpl CreateChainImpl(System.Boolean useMachineContext)

Disassembly:
	0x036596F0 BL 0x3252170
	0x036596F4 MOV X0, X20
	0x036596F8 LDP X20, X19, [X31 + 0x10]
	0x036596FC LDP X30, X21, [X31], #0x20
	0x03659700 RET
	0x03659704 RET
	0x03659708 STP X30, X21, [X31 - 0x20]!
	0x0365970C STP X20, X19, [X31 + 0x10]
	0x03659710 LDR X8, [X0]
	0x03659714 MOV X19, X0
	0x03659718 LDP X9, X2, [X8 + 0x1E8]
	0x0365971C MOV W1, W31
	0x03659720 BLR X9
	0x03659724 MOV X0, X19
	0x03659728 LDP X20, X19, [X31 + 0x10]
	0x0365972C MOV X1, X31
	0x03659730 LDP X30, X21, [X31], #0x20
	0x03659734 B 0x33CB4DC
	0x03659738 CMP W1, 0x1
	0x0365973C MOV X21, X0
	0x03659740 B.NE 0x3659770
	0x03659744 MOV X0, X21

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xD88000
	006 Move X21, 0xAE4000
	007 Move W8, [X20+1682]
	008 Move X21, [X21+3064]
	009 Move W19, W0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xAE4000
	015 Move X0, [X0+3064]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1682], W8
	019 Move X0, [X21]
	020 Call 0x1C17F10
	021 And W1, W19, 1
	022 Move X20, X0
	023 Call X509ChainImplMono..ctor, X0, X1
	024 Move X0, X20
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Return X0

Method: System.Boolean IsValid(System.Security.Cryptography.X509Certificates.X509ChainImpl impl)

Disassembly:
	0x0365EE20 MOV X0, X19
	0x0365EE24 MOV X2, X31
	0x0365EE28 BL 0x330E100
	0x0365EE2C B 0x365EE60
	0x0365EE30 ADRP X0, 0xA9D000

ISIL:
	001 Compare X0, 0
	002 JumpIfEqual {7}
	003 Move X8, [X0]
	004 Move X2, [X8+392]
	005 Move X1, [X8+400]
	006 CallNoReturn X2
	007 Return X0

Method: System.Void ThrowIfContextInvalid(System.Security.Cryptography.X509Certificates.X509ChainImpl impl)

Disassembly:
	0x0365965C LDP X30, X19, [X31], #0x10
	0x03659660 RET
	0x03659664 BL 0x3659684
	0x03659668 MOV X19, X0
	0x0365966C ADRP X0, 0xAE3000
	0x03659670 LDR X0, [X0 + 0xC28]
	0x03659674 BL 0x1C16D08
	0x03659678 MOV X1, X0
	0x0365967C MOV X0, X19
	0x03659680 BL 0x1C16DEC
	0x03659684 STP X30, X21, [X31 - 0x20]!
	0x03659688 STP X20, X19, [X31 + 0x10]
	0x0365968C ADRP X20, 0xD87000
	0x03659690 ADRP X21, 0xAE3000
	0x03659694 ADRP X19, 0xAC7000
	0x03659698 LDRB W8, [X20 + 0x693]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Compare X0, 0
	004 JumpIfEqual {16}
	005 Move X8, [X0]
	006 Move X9, [X8+392]
	007 Move X1, [X8+400]
	008 NotImplemented "Instruction BLR not yet implemented."
	009 Move TEMP, X0
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfNotEqual {16}
	013 Move X30, [X31+16]
	014 Move X19, [X31+24]
	015 Return 
	016 Call X509Helper2.GetInvalidChainContextException
	017 Move X19, X0
	018 Move X0, 0xAE4000
	019 Move X0, [X0+3056]
	020 Call 0x1C17D08
	021 Move X1, X0
	022 Move X0, X19
	023 Call 0x1C17DEC

Method: System.Exception GetInvalidChainContextException()

Disassembly:
	0x0365A684 BL 0x1C16F10
	0x0365A688 MOVZ W1, 0x3
	0x0365A68C MOVZ W2, 0x1
	0x0365A690 MOV X20, X0
	0x0365A694 BL 0x365A730
	0x0365A698 STR X20, [X19 + 0x78]
	0x0365A69C CBZ X20, 0x365A6BC
	0x0365A6A0 MOVZ W1, 0x4
	0x0365A6A4 MOV X0, X20
	0x0365A6A8 BL 0x365A85C
	0x0365A6AC LDR X0, [X19 + 0x78]
	0x0365A6B0 LDP X20, X19, [X31 + 0x10]
	0x0365A6B4 LDR X30, [X31], #0x20
	0x0365A6B8 RET
	0x0365A6BC BL 0x1C16F20
	0x0365A6C0 CMP W1, 0x1
	0x0365A6C4 MOV X20, X0
	0x0365A6C8 B.NE 0x365A724
	0x0365A6CC MOV X0, X20
	0x0365A6D0 BL 0x3EB1AD0
	0x0365A6D4 MOV X20, X0
	0x0365A6D8 ADRP X0, 0xA9F000
	0x0365A6DC LDR X0, [X0 + 0xCC0]
	0x0365A6E0 BL 0x1C16D08
	0x0365A6E4 LDR X8, [X20]
	0x0365A6E8 LDR X1, [X8]
	0x0365A6EC BL 0x1C17270
	0x0365A6F0 TBZ X0, 0x0, 0x365A6FC
	0x0365A6F4 BL 0x3EB1AE0
	0x0365A6F8 B 0x365A6AC
	0x0365A6FC MOVZ W0, 0x8
	0x0365A700 BL 0x3EB1AF0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xD87000
	006 Move X21, 0xAE3000
	007 Move X19, 0xAC7000
	008 Move W8, [X20+1683]
	009 Move X21, [X21+3120]
	010 Move X19, [X19+3296]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0xAC7000
	016 Move X0, [X0+3296]
	017 Call 0x1C17CF4
	018 Move X0, 0xAE3000
	019 Move X0, [X0+3120]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X20+1683], W8
	023 Move X0, [X21]
	024 Move X1, X31
	025 Call Locale.GetText, X0
	026 Move X8, [X19]
	027 Move X19, X0
	028 Move X0, X8
	029 Call 0x1C17F10
	030 Move X1, X19
	031 Move X2, X31
	032 Move X20, X0
	033 Call CryptographicException..ctor, X0, X1
	034 Move X0, X20
	035 Move X20, [X31+16]
	036 Move X19, [X31+24]
	037 Move X30, [X31+32]
	038 Move X21, [X31+40]
	039 Return X0

