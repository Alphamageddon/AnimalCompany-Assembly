Type: System.Security.Cryptography.X509Certificates.X509Certificate2

Method: System.Void Reset()

Disassembly:
	0x03652984 LDR X0, [X0 + 0xA58]
	0x03652988 BL 0x1C16CF4
	0x0365298C ADRP X0, 0xAEA000
	0x03652990 LDR X0, [X0 + 0xA60]
	0x03652994 BL 0x1C16CF4
	0x03652998 ADRP X0, 0xAEA000
	0x0365299C LDR X0, [X0 + 0xA68]
	0x036529A0 BL 0x1C16CF4
	0x036529A4 ADRP X0, 0xAEA000
	0x036529A8 LDR X0, [X0 + 0xA70]
	0x036529AC BL 0x1C16CF4
	0x036529B0 ADRP X0, 0xAA3000
	0x036529B4 LDR X0, [X0 + 0x1A0]
	0x036529B8 BL 0x1C16CF4
	0x036529BC ADRP X0, 0xAEA000
	0x036529C0 LDR X0, [X0 + 0xA78]
	0x036529C4 BL 0x1C16CF4
	0x036529C8 ADRP X0, 0xAD1000
	0x036529CC LDR X0, [X0 + 0x9B0]
	0x036529D0 BL 0x1C16CF4
	0x036529D4 ADRP X0, 0xAA2000
	0x036529D8 LDR X0, [X0 + 0x608]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Call 0x1C17D44
	005 Move [X19+96], X31
	006 Call 0x1C17D44
	007 Move [X19+104], X31
	008 Call 0x1C17D44
	009 Move [X19+112], W31
	010 Call 0x1C17D44
	011 Move [X19+120], X31
	012 Call 0x1C17D44
	013 Move [X19+128], X31
	014 Call 0x1C17D44
	015 Move [X19+136], X31
	016 Call 0x1C17D44
	017 Move [X19+144], X31
	018 Call 0x1C17D44
	019 Move [X19+152], X31
	020 Move X0, X19
	021 Move X1, X31
	022 Move X30, [X31+16]
	023 Move X19, [X31+24]
	024 Call X509Certificate.Reset, X0
	025 Return 

Method: System.Void .ctor()

Disassembly:
	0x036529DC BL 0x1C16CF4
	0x036529E0 ADRP X0, 0xAD1000

ISIL:
	001 Move X1, X31
	002 Call X509Certificate..ctor, X0
	003 Return 

Method: System.Void .ctor(System.Byte[] rawData)

Disassembly:
	0x036529E4 LDR X0, [X0 + 0x9B8]
	0x036529E8 BL 0x1C16CF4
	0x036529EC ADRP X0, 0xAD1000
	0x036529F0 LDR X0, [X0 + 0x9C0]
	0x036529F4 BL 0x1C16CF4
	0x036529F8 ADRP X0, 0xAEA000
	0x036529FC LDR X0, [X0 + 0xA80]
	0x03652A00 BL 0x1C16CF4
	0x03652A04 ADRP X0, 0xAD1000
	0x03652A08 LDR X0, [X0 + 0x9C8]
	0x03652A0C BL 0x1C16CF4
	0x03652A10 ADRP X0, 0xAD1000
	0x03652A14 LDR X0, [X0 + 0x9D0]
	0x03652A18 BL 0x1C16CF4
	0x03652A1C ADRP X0, 0xAEA000
	0x03652A20 LDR X0, [X0 + 0xA88]
	0x03652A24 BL 0x1C16CF4
	0x03652A28 ADRP X0, 0xAD1000
	0x03652A2C LDR X0, [X0 + 0x9D8]
	0x03652A30 BL 0x1C16CF4
	0x03652A34 MOVZ W8, 0x1
	0x03652A38 STRB W8, [X21 + 0x627]
	0x03652A3C TBZ X19, 0x0, 0x36531FC
	0x03652A40 MOV X0, X20
	0x03652A44 MOV X1, X31
	0x03652A48 BL 0x326C1C0
	0x03652A4C TBZ X0, 0x0, 0x36531FC
	0x03652A50 ADRP X8, 0xAA1000
	0x03652A54 LDR X8, [X8 + 0x8F0]
	0x03652A58 LDR X0, [X8]
	0x03652A5C BL 0x1C16F10
	0x03652A60 MOV X1, X31
	0x03652A64 MOV X19, X0
	0x03652A68 BL 0x3231AC4
	0x03652A6C CBZ X19, 0x3653528
	0x03652A70 ADRP X8, 0xAEA000
	0x03652A74 LDR X8, [X8 + 0xA38]
	0x03652A78 MOV X0, X19
	0x03652A7C MOV X2, X31
	0x03652A80 LDR X1, [X8]
	0x03652A84 BL 0x32338A8
	0x03652A88 ADRP X8, 0xAEA000
	0x03652A8C LDR X8, [X8 + 0xA40]
	0x03652A90 MOV X0, X19
	0x03652A94 MOV X2, X31
	0x03652A98 LDR X1, [X8]
	0x03652A9C BL 0x32333E0
	0x03652AA0 MOV X0, X20
	0x03652AA4 BL 0x36527A4
	0x03652AA8 MOV W1, W0
	0x03652AAC MOV X0, X19
	0x03652AB0 MOV X2, X31
	0x03652AB4 BL 0x3233E30
	0x03652AB8 MOV X0, X19
	0x03652ABC MOV X1, X31
	0x03652AC0 BL 0x3233888
	0x03652AC4 MOV X0, X19
	0x03652AC8 MOV X1, X31
	0x03652ACC BL 0x3233888
	0x03652AD0 ADRP X8, 0xAD1000
	0x03652AD4 LDR X8, [X8 + 0x9B8]
	0x03652AD8 MOV X0, X19
	0x03652ADC MOV X2, X31
	0x03652AE0 LDR X1, [X8]
	0x03652AE4 BL 0x32338A8
	0x03652AE8 ADRP X25, 0xAA3000
	0x03652AEC LDR X25, [X25 + 0x1A0]
	0x03652AF0 MOV X0, X19
	0x03652AF4 MOV X2, X31
	0x03652AF8 LDR X1, [X25]
	0x03652AFC BL 0x32333E0
	0x03652B00 MOV X0, X20
	0x03652B04 BL 0x365272C
	0x03652B08 CBZ X0, 0x3653528
	0x03652B0C LDR X1, [X0 + 0x20]
	0x03652B10 MOV X0, X19
	0x03652B14 MOV X2, X31
	0x03652B18 BL 0x32333E0
	0x03652B1C MOV X0, X20
	0x03652B20 MOV W1, W31
	0x03652B24 MOV W2, W31
	0x03652B28 BL 0x3652898
	0x03652B2C CBZ X0, 0x3653528
	0x03652B30 LDR W8, [X0 + 0x10]
	0x03652B34 MOV X21, X0
	0x03652B38 CMP W8, 0x1
	0x03652B3C B.LT 0x3652B84
	0x03652B40 MOV X0, X19
	0x03652B44 MOV X1, X31
	0x03652B48 BL 0x3233888
	0x03652B4C LDR X1, [X25]
	0x03652B50 MOV X0, X19
	0x03652B54 MOV X2, X31
	0x03652B58 BL 0x32333E0
	0x03652B5C ADRP X8, 0xAEA000
	0x03652B60 LDR X8, [X8 + 0xA28]
	0x03652B64 MOV X0, X19
	0x03652B68 MOV X2, X31
	0x03652B6C LDR X1, [X8]
	0x03652B70 BL 0x32333E0
	0x03652B74 MOV X0, X19
	0x03652B78 MOV X1, X21
	0x03652B7C MOV X2, X31
	0x03652B80 BL 0x32333E0
	0x03652B84 MOVZ W1, 0x1
	0x03652B88 MOV X0, X20
	0x03652B8C MOV W2, W31
	0x03652B90 BL 0x3652898
	0x03652B94 CBZ X0, 0x3653528
	0x03652B98 LDR W8, [X0 + 0x10]
	0x03652B9C MOV X21, X0
	0x03652BA0 CMP W8, 0x1
	0x03652BA4 B.LT 0x3652BEC
	0x03652BA8 MOV X0, X19

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, 0xD8F000
	006 Move W8, [X19+1571]
	007 Move X21, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0xAA2000
	014 Move X0, [X0+3584]
	015 Call 0x1C17CF4
	016 Move X0, 0xAD2000
	017 Move X0, [X0+2368]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X19+1571], W8
	021 Move X0, X20
	022 Move X1, X21
	023 Move X2, X31
	024 Call X509Certificate..ctor, X0, X1
	025 Compare X21, 0
	026 JumpIfEqual {75}
	027 Move X8, [X21+24]
	028 Compare X8, 0
	029 JumpIfEqual {75}
	030 Move X8, 0xAD2000
	031 Move X8, [X8+2368]
	032 Move X0, [X8]
	033 Call 0x1C17F10
	034 Move X1, X31
	035 Move X2, X31
	036 Move X19, X0
	037 Call SafePasswordHandle..ctor, X0, X1
	038 Move X0, X21
	039 Move X1, X19
	040 Move W2, W31
	041 Move X3, X31
	042 Call X509Helper.Import, X0, X1, X2
	043 Move X1, X0
	044 Move X0, X20
	045 Move X2, X31
	046 Call X509Certificate.ImportHandle, X0, X1
	047 Move X20, X31
	048 Compare X19, 0
	049 JumpIfEqual {73}
	050 Move X10, 0xAA2000
	051 Move X8, [X19]
	052 Move X10, [X10+3584]
	053 NotImplemented "Instruction LDRH not yet implemented."
	054 Move X1, [X10]
	055 Compare X9, 0
	056 JumpIfEqual {63}
	057 Move X10, [X8+176]
	058 Add X10, X10, 8
	059 NotImplemented "Instruction LDUR not yet implemented."
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Subtract X9, X9, 1
	062 Add X10, X10, 16
	063 Move X0, X19
	064 Move W2, W31
	065 Call 0x1C5D788
	066 NotImplemented "Instruction LDRSW not yet implemented."
	067 Add X8, X8, X9
	068 Add X0, X8, 312
	069 Move X8, [X0]
	070 Move X1, [X0+8]
	071 Move X0, X19
	072 NotImplemented "Instruction BLR not yet implemented."
	073 Compare X20, 0
	074 JumpIfNotEqual {80}
	075 Move X20, [X31+16]
	076 Move X19, [X31+24]
	077 Move X30, [X31+32]
	078 Move X21, [X31+40]
	079 Return 
	080 Move X0, X20
	081 Call 0x1C17F18
	082 Move X21, X0
	083 NotImplemented "Instruction CMP not yet implemented."
	084 Move X0, X21
	085 Call 0x3EB2AD0
	086 Move X20, [X0]
	087 Call 0x3EB2AE0
	088 Move X20, X31
	089 Move X21, X0
	090 Compare X19, 0
	091 JumpIfEqual {115}
	092 Move X10, 0xAA2000
	093 Move X8, [X19]
	094 Move X10, [X10+3584]
	095 NotImplemented "Instruction LDRH not yet implemented."
	096 Move X1, [X10]
	097 Compare X9, 0
	098 JumpIfEqual {105}
	099 Move X10, [X8+176]
	100 Add X10, X10, 8
	101 NotImplemented "Instruction LDUR not yet implemented."
	102 NotImplemented "Instruction CMP not yet implemented."
	103 Subtract X9, X9, 1
	104 Add X10, X10, 16
	105 Move X0, X19
	106 Move W2, W31
	107 Call 0x1C5D788
	108 NotImplemented "Instruction LDRSW not yet implemented."
	109 Add X8, X8, X9
	110 Add X0, X8, 312
	111 Move X8, [X0]
	112 Move X1, [X0+8]
	113 Move X0, X19
	114 NotImplemented "Instruction BLR not yet implemented."
	115 Compare X20, 0
	116 JumpIfNotEqual {119}
	117 Move X0, X21
	118 Call 0x1D2D690
	119 Move X0, X20
	120 Call 0x1C17F18
	121 Call 0x1991590

Method: System.Void .ctor(System.String fileName)

Disassembly:
	0x03652BAC MOV X1, X31
	0x03652BB0 BL 0x3233888

ISIL:
	001 Move X2, X31
	002 Call X509Certificate..ctor, X0, X1
	003 Return 

Method: System.Void .ctor(System.Security.Cryptography.X509Certificates.X509Certificate certificate)

Disassembly:
	0x03652BB4 LDR X1, [X25]
	0x03652BB8 MOV X0, X19

ISIL:
	001 Move X2, X31
	002 Call X509Certificate..ctor, X0, X1
	003 Return 

Method: System.Void .ctor(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context)

Disassembly:
	0x03652BBC MOV X2, X31
	0x03652BC0 BL 0x32333E0
	0x03652BC4 ADRP X8, 0xAEA000
	0x03652BC8 LDR X8, [X8 + 0xA50]
	0x03652BCC MOV X0, X19
	0x03652BD0 MOV X2, X31
	0x03652BD4 LDR X1, [X8]
	0x03652BD8 BL 0x32333E0
	0x03652BDC MOV X0, X19
	0x03652BE0 MOV X1, X21
	0x03652BE4 MOV X2, X31
	0x03652BE8 BL 0x32333E0
	0x03652BEC MOVZ W1, 0x2
	0x03652BF0 MOV X0, X20
	0x03652BF4 MOV W2, W31
	0x03652BF8 BL 0x3652898

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X4, X31
	004 Call X509Certificate..ctor, X0, X1, X2
	005 Move X0, 0xACD000
	006 Move X0, [X0+3152]
	007 Call 0x1C17D08
	008 Call 0x1C17F10
	009 Move X1, X31
	010 Move X19, X0
	011 Call PlatformNotSupportedException..ctor, X0
	012 Move X0, 0xAEB000
	013 Move X0, [X0+2496]
	014 Call 0x1C17D08
	015 Move X1, X0
	016 Move X0, X19
	017 Call 0x1C17DEC

Method: System.Security.Cryptography.X509Certificates.X509ExtensionCollection get_Extensions()

Disassembly:
	0x03652BFC CBZ X0, 0x3653528
	0x03652C00 LDR W8, [X0 + 0x10]
	0x03652C04 MOV X21, X0
	0x03652C08 CMP W8, 0x1
	0x03652C0C B.LT 0x3652C54
	0x03652C10 MOV X0, X19
	0x03652C14 MOV X1, X31
	0x03652C18 BL 0x3233888
	0x03652C1C LDR X1, [X25]
	0x03652C20 MOV X0, X19
	0x03652C24 MOV X2, X31
	0x03652C28 BL 0x32333E0
	0x03652C2C ADRP X8, 0xAEA000
	0x03652C30 LDR X8, [X8 + 0xA48]
	0x03652C34 MOV X0, X19
	0x03652C38 MOV X2, X31
	0x03652C3C LDR X1, [X8]
	0x03652C40 BL 0x32333E0
	0x03652C44 MOV X0, X19
	0x03652C48 MOV X1, X21
	0x03652C4C MOV X2, X31
	0x03652C50 BL 0x32333E0
	0x03652C54 MOVZ W1, 0x3
	0x03652C58 MOV X0, X20
	0x03652C5C MOV W2, W31
	0x03652C60 BL 0x3652898
	0x03652C64 CBZ X0, 0x3653528
	0x03652C68 LDR W8, [X0 + 0x10]
	0x03652C6C MOV X21, X0
	0x03652C70 CMP W8, 0x1
	0x03652C74 B.LT 0x3652CBC
	0x03652C78 MOV X0, X19
	0x03652C7C MOV X1, X31
	0x03652C80 BL 0x3233888
	0x03652C84 LDR X1, [X25]
	0x03652C88 MOV X0, X19
	0x03652C8C MOV X2, X31
	0x03652C90 BL 0x32333E0
	0x03652C94 ADRP X8, 0xAEA000
	0x03652C98 LDR X8, [X8 + 0xA88]
	0x03652C9C MOV X0, X19
	0x03652CA0 MOV X2, X31
	0x03652CA4 LDR X1, [X8]
	0x03652CA8 BL 0x32333E0
	0x03652CAC MOV X0, X19
	0x03652CB0 MOV X1, X21
	0x03652CB4 MOV X2, X31
	0x03652CB8 BL 0x32333E0
	0x03652CBC MOV X0, X19
	0x03652CC0 MOV X1, X31
	0x03652CC4 BL 0x3233888
	0x03652CC8 MOV X0, X19
	0x03652CCC MOV X1, X31
	0x03652CD0 BL 0x3233888
	0x03652CD4 ADRP X8, 0xAD1000
	0x03652CD8 LDR X8, [X8 + 0x9D0]
	0x03652CDC MOV X0, X19
	0x03652CE0 MOV X2, X31
	0x03652CE4 LDR X1, [X8]
	0x03652CE8 BL 0x32338A8
	0x03652CEC LDR X1, [X25]
	0x03652CF0 MOV X0, X19
	0x03652CF4 MOV X2, X31
	0x03652CF8 BL 0x32333E0
	0x03652CFC MOV X0, X20
	0x03652D00 BL 0x36524A8
	0x03652D04 CBZ X0, 0x3653528
	0x03652D08 LDR X1, [X0 + 0x20]
	0x03652D0C MOV X0, X19
	0x03652D10 MOV X2, X31
	0x03652D14 BL 0x32333E0
	0x03652D18 MOVZ W2, 0x1
	0x03652D1C MOV X0, X20
	0x03652D20 MOV W1, W31
	0x03652D24 BL 0x3652898
	0x03652D28 CBZ X0, 0x3653528
	0x03652D2C LDR W8, [X0 + 0x10]
	0x03652D30 MOV X21, X0
	0x03652D34 CMP W8, 0x1
	0x03652D38 B.LT 0x3652D80
	0x03652D3C MOV X0, X19
	0x03652D40 MOV X1, X31
	0x03652D44 BL 0x3233888
	0x03652D48 LDR X1, [X25]
	0x03652D4C MOV X0, X19
	0x03652D50 MOV X2, X31
	0x03652D54 BL 0x32333E0
	0x03652D58 ADRP X8, 0xAEA000
	0x03652D5C LDR X8, [X8 + 0xA28]
	0x03652D60 MOV X0, X19
	0x03652D64 MOV X2, X31
	0x03652D68 LDR X1, [X8]
	0x03652D6C BL 0x32333E0
	0x03652D70 MOV X0, X19
	0x03652D74 MOV X1, X21
	0x03652D78 MOV X2, X31
	0x03652D7C BL 0x32333E0
	0x03652D80 MOVZ W1, 0x1
	0x03652D84 MOVZ W2, 0x1
	0x03652D88 MOV X0, X20
	0x03652D8C BL 0x3652898
	0x03652D90 CBZ X0, 0x3653528
	0x03652D94 LDR W8, [X0 + 0x10]
	0x03652D98 MOV X21, X0
	0x03652D9C CMP W8, 0x1
	0x03652DA0 B.LT 0x3652DE8
	0x03652DA4 MOV X0, X19
	0x03652DA8 MOV X1, X31
	0x03652DAC BL 0x3233888
	0x03652DB0 LDR X1, [X25]
	0x03652DB4 MOV X0, X19
	0x03652DB8 MOV X2, X31
	0x03652DBC BL 0x32333E0
	0x03652DC0 ADRP X8, 0xAEA000
	0x03652DC4 LDR X8, [X8 + 0xA50]
	0x03652DC8 MOV X0, X19
	0x03652DCC MOV X2, X31
	0x03652DD0 LDR X1, [X8]
	0x03652DD4 BL 0x32333E0
	0x03652DD8 MOV X0, X19
	0x03652DDC MOV X1, X21
	0x03652DE0 MOV X2, X31
	0x03652DE4 BL 0x32333E0
	0x03652DE8 MOVZ W1, 0x2
	0x03652DEC MOVZ W2, 0x1
	0x03652DF0 MOV X0, X20
	0x03652DF4 BL 0x3652898
	0x03652DF8 CBZ X0, 0x3653528
	0x03652DFC LDR W8, [X0 + 0x10]
	0x03652E00 MOV X21, X0
	0x03652E04 CMP W8, 0x1
	0x03652E08 B.LT 0x3652E50
	0x03652E0C MOV X0, X19
	0x03652E10 MOV X1, X31
	0x03652E14 BL 0x3233888
	0x03652E18 LDR X1, [X25]
	0x03652E1C MOV X0, X19
	0x03652E20 MOV X2, X31
	0x03652E24 BL 0x32333E0
	0x03652E28 ADRP X8, 0xAEA000
	0x03652E2C LDR X8, [X8 + 0xA48]
	0x03652E30 MOV X0, X19
	0x03652E34 MOV X2, X31
	0x03652E38 LDR X1, [X8]
	0x03652E3C BL 0x32333E0
	0x03652E40 MOV X0, X19
	0x03652E44 MOV X1, X21
	0x03652E48 MOV X2, X31
	0x03652E4C BL 0x32333E0
	0x03652E50 MOVZ W1, 0x3
	0x03652E54 MOVZ W2, 0x1
	0x03652E58 MOV X0, X20
	0x03652E5C BL 0x3652898
	0x03652E60 CBZ X0, 0x3653528
	0x03652E64 LDR W8, [X0 + 0x10]
	0x03652E68 MOV X21, X0
	0x03652E6C CMP W8, 0x1
	0x03652E70 B.LT 0x3652EB8
	0x03652E74 MOV X0, X19
	0x03652E78 MOV X1, X31
	0x03652E7C BL 0x3233888
	0x03652E80 LDR X1, [X25]
	0x03652E84 MOV X0, X19
	0x03652E88 MOV X2, X31
	0x03652E8C BL 0x32333E0
	0x03652E90 ADRP X8, 0xAEA000
	0x03652E94 LDR X8, [X8 + 0xA88]
	0x03652E98 MOV X0, X19
	0x03652E9C MOV X2, X31
	0x03652EA0 LDR X1, [X8]
	0x03652EA4 BL 0x32333E0
	0x03652EA8 MOV X0, X19
	0x03652EAC MOV X1, X21
	0x03652EB0 MOV X2, X31
	0x03652EB4 BL 0x32333E0
	0x03652EB8 MOV X0, X19
	0x03652EBC MOV X1, X31
	0x03652EC0 BL 0x3233888
	0x03652EC4 MOV X0, X19
	0x03652EC8 MOV X1, X31
	0x03652ECC BL 0x3233888
	0x03652ED0 ADRP X8, 0xAD1000
	0x03652ED4 LDR X8, [X8 + 0x9C0]
	0x03652ED8 MOV X0, X19
	0x03652EDC MOV X2, X31
	0x03652EE0 LDR X1, [X8]
	0x03652EE4 BL 0x32338A8
	0x03652EE8 LDR X1, [X25]
	0x03652EEC MOV X0, X19
	0x03652EF0 MOV X2, X31
	0x03652EF4 BL 0x32333E0
	0x03652EF8 LDR X8, [X20]
	0x03652EFC MOV X0, X20
	0x03652F00 LDR X9, [X8 + 0x248]
	0x03652F04 LDR X1, [X8 + 0x250]
	0x03652F08 BLR X9
	0x03652F0C MOV X1, X0
	0x03652F10 MOV X0, X19
	0x03652F14 MOV X2, X31
	0x03652F18 BL 0x32338A8
	0x03652F1C MOV X0, X19
	0x03652F20 MOV X1, X31
	0x03652F24 BL 0x3233888
	0x03652F28 ADRP X8, 0xAD1000
	0x03652F2C LDR X8, [X8 + 0x9D8]
	0x03652F30 MOV X0, X19
	0x03652F34 MOV X2, X31
	0x03652F38 LDR X1, [X8]
	0x03652F3C BL 0x32338A8
	0x03652F40 LDR X1, [X25]
	0x03652F44 MOV X0, X19
	0x03652F48 MOV X2, X31
	0x03652F4C BL 0x32333E0
	0x03652F50 MOV X0, X20
	0x03652F54 MOV X1, X31
	0x03652F58 BL 0x326BF08
	0x03652F5C MOV X1, X31
	0x03652F60 BL 0x326BFA4
	0x03652F64 MOV X1, X0
	0x03652F68 MOV X0, X19
	0x03652F6C MOV X2, X31
	0x03652F70 BL 0x32338A8
	0x03652F74 MOV X0, X19
	0x03652F78 MOV X1, X31
	0x03652F7C BL 0x3233888
	0x03652F80 ADRP X8, 0xAD1000
	0x03652F84 LDR X8, [X8 + 0x9C8]
	0x03652F88 MOV X0, X19
	0x03652F8C MOV X2, X31
	0x03652F90 LDR X1, [X8]
	0x03652F94 BL 0x32338A8
	0x03652F98 LDR X1, [X25]
	0x03652F9C MOV X0, X19
	0x03652FA0 MOV X2, X31
	0x03652FA4 BL 0x32333E0
	0x03652FA8 MOV X0, X20
	0x03652FAC MOV X1, X31
	0x03652FB0 BL 0x326C0EC
	0x03652FB4 MOV X1, X31
	0x03652FB8 BL 0x326BFA4
	0x03652FBC MOV X1, X0

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X20, 0xD8F000
	010 Move W8, [X20+1572]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {33}
	016 Move X0, 0xAA2000
	017 Move X0, [X0+3584]
	018 Call 0x1C17CF4
	019 Move X0, 0xAEB000
	020 Move X0, [X0+2504]
	021 Call 0x1C17CF4
	022 Move X0, 0xAEB000
	023 Move X0, [X0+2512]
	024 Call 0x1C17CF4
	025 Move X0, 0xAA2000
	026 Move X0, [X0+3608]
	027 Call 0x1C17CF4
	028 Move X0, 0xAEB000
	029 Move X0, [X0+2520]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X20+1572], W8
	033 Move X0, X19
	034 Move X1, X31
	035 Call X509Certificate.ThrowIfInvalid, X0
	036 Move X20, [X19+152]
	037 Call 0x1C17D44
	038 Compare X20, 0
	039 JumpIfNotEqual {191}
	040 Move X8, 0xAEB000
	041 Move X8, [X8+2520]
	042 Move X0, [X8]
	043 Call 0x1C17F10
	044 Move X20, X0
	045 Call X509ExtensionCollection..ctor, X0
	046 Move X0, X19
	047 Call X509Certificate2.get_Impl, X0
	048 Compare X0, 0
	049 JumpIfEqual {204}
	050 Move X8, [X0]
	051 Move X9, [X8+648]
	052 Move X1, [X8+656]
	053 NotImplemented "Instruction BLR not yet implemented."
	054 Compare X0, 0
	055 JumpIfEqual {204}
	056 Move X10, 0xAEB000
	057 Move X8, [X0]
	058 Move X10, [X10+2504]
	059 Move X21, X0
	060 NotImplemented "Instruction LDRH not yet implemented."
	061 Move X1, [X10]
	062 Compare X9, 0
	063 JumpIfEqual {70}
	064 Move X10, [X8+176]
	065 Add X10, X10, 8
	066 NotImplemented "Instruction LDUR not yet implemented."
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Subtract X9, X9, 1
	069 Add X10, X10, 16
	070 Move X0, X21
	071 Move W2, W31
	072 Call 0x1C5D788
	073 NotImplemented "Instruction LDRSW not yet implemented."
	074 Add X8, X8, X9
	075 Add X0, X8, 312
	076 Move X8, [X0]
	077 Move X1, [X0+8]
	078 Move X0, X21
	079 NotImplemented "Instruction BLR not yet implemented."
	080 Move X21, X0
	081 Compare X0, 0
	082 JumpIfEqual {205}
	083 Move X24, 0xAA2000
	084 Move X25, 0xAEB000
	085 Move X24, [X24+3608]
	086 Move X25, [X25+2512]
	087 Move X8, [X21]
	088 Move X1, [X24]
	089 NotImplemented "Instruction LDRH not yet implemented."
	090 Compare X9, 0
	091 JumpIfEqual {98}
	092 Move X10, [X8+176]
	093 Add X10, X10, 8
	094 NotImplemented "Instruction LDUR not yet implemented."
	095 NotImplemented "Instruction CMP not yet implemented."
	096 Subtract X9, X9, 1
	097 Add X10, X10, 16
	098 Move X0, X21
	099 Move W2, W31
	100 Call 0x1C5D788
	101 NotImplemented "Instruction LDRSW not yet implemented."
	102 Add X8, X8, X9
	103 Add X0, X8, 312
	104 Move X8, [X0]
	105 Move X1, [X0+8]
	106 Move X0, X21
	107 NotImplemented "Instruction BLR not yet implemented."
	108 Move TEMP, X0
	109 And TEMP, TEMP, 1
	110 Compare TEMP, 1
	111 JumpIfNotEqual {157}
	112 Move X8, [X21]
	113 Move X1, [X25]
	114 NotImplemented "Instruction LDRH not yet implemented."
	115 Compare X9, 0
	116 JumpIfEqual {123}
	117 Move X10, [X8+176]
	118 Add X10, X10, 8
	119 NotImplemented "Instruction LDUR not yet implemented."
	120 NotImplemented "Instruction CMP not yet implemented."
	121 Subtract X9, X9, 1
	122 Add X10, X10, 16
	123 Move X0, X21
	124 Move W2, W31
	125 Call 0x1C5D788
	126 NotImplemented "Instruction LDRSW not yet implemented."
	127 Add X8, X8, X9
	128 Add X0, X8, 312
	129 Move X8, [X0]
	130 Move X1, [X0+8]
	131 Move X0, X21
	132 NotImplemented "Instruction BLR not yet implemented."
	133 Move X22, X0
	134 Compare X0, 0
	135 JumpIfEqual {201}
	136 Move X0, [X22+16]
	137 Call X509Certificate2.CreateCustomExtensionIfAny, X0
	138 Move X23, X0
	139 Compare X0, 0
	140 JumpIfEqual {152}
	141 Move X8, [X23]
	142 Move X9, [X8+376]
	143 Move X2, [X8+384]
	144 Move X0, X23
	145 Move X1, X22
	146 NotImplemented "Instruction BLR not yet implemented."
	147 Compare X20, 0
	148 JumpIfEqual {202}
	149 Move X0, X20
	150 Move X1, X23
	151 Call X509ExtensionCollection.Add, X0, X1
	152 Compare X20, 0
	153 JumpIfEqual {203}
	154 Move X0, X20
	155 Move X1, X22
	156 Call X509ExtensionCollection.Add, X0, X1
	157 Move X22, X31
	158 Move W23, 6
	159 Compare X21, 0
	160 JumpIfEqual {184}
	161 Move X10, 0xAA2000
	162 Move X8, [X21]
	163 Move X10, [X10+3584]
	164 NotImplemented "Instruction LDRH not yet implemented."
	165 Move X1, [X10]
	166 Compare X9, 0
	167 JumpIfEqual {174}
	168 Move X10, [X8+176]
	169 Add X10, X10, 8
	170 NotImplemented "Instruction LDUR not yet implemented."
	171 NotImplemented "Instruction CMP not yet implemented."
	172 Subtract X9, X9, 1
	173 Add X10, X10, 16
	174 Move X0, X21
	175 Move W2, W31
	176 Call 0x1C5D788
	177 NotImplemented "Instruction LDRSW not yet implemented."
	178 Add X8, X8, X9
	179 Add X0, X8, 312
	180 Move X8, [X0]
	181 Move X1, [X0+8]
	182 Move X0, X21
	183 NotImplemented "Instruction BLR not yet implemented."
	184 Compare X22, 0
	185 JumpIfNotEqual {206}
	186 NotImplemented "Instruction CMP not yet implemented."
	187 Compare W23, 0
	188 JumpIfNotEqual {191}
	189 Call 0x1C17D44
	190 Move [X19+152], X20
	191 Move X0, X20
	192 Move X20, [X31+48]
	193 Move X19, [X31+56]
	194 Move X22, [X31+32]
	195 Move X21, [X31+40]
	196 Move X24, [X31+16]
	197 Move X23, [X31+24]
	198 Move X30, [X31+64]
	199 Move X25, [X31+72]
	200 Return X0
	201 Call 0x1C17F20
	202 Call 0x1C17F20
	203 Call 0x1C17F20
	204 Call 0x1C17F20
	205 Call 0x1C17F20
	206 Move X0, X22
	207 Call 0x1C17F18
	208 Move X23, X0
	209 NotImplemented "Instruction CMP not yet implemented."
	210 Move X0, X23
	211 Call 0x3EB2AD0
	212 Move X22, [X0]
	213 Call 0x3EB2AE0
	214 Move W23, W31
	215 Compare X21, 0
	216 JumpIfNotEqual {161}
	217 Move X22, X31
	218 Move X23, X0
	219 Compare X21, 0
	220 JumpIfEqual {244}
	221 Move X10, 0xAA2000
	222 Move X8, [X21]
	223 Move X10, [X10+3584]
	224 NotImplemented "Instruction LDRH not yet implemented."
	225 Move X1, [X10]
	226 Compare X9, 0
	227 JumpIfEqual {234}
	228 Move X10, [X8+176]
	229 Add X10, X10, 8
	230 NotImplemented "Instruction LDUR not yet implemented."
	231 NotImplemented "Instruction CMP not yet implemented."
	232 Subtract X9, X9, 1
	233 Add X10, X10, 16
	234 Move X0, X21
	235 Move W2, W31
	236 Call 0x1C5D788
	237 NotImplemented "Instruction LDRSW not yet implemented."
	238 Add X8, X8, X9
	239 Add X0, X8, 312
	240 Move X8, [X0]
	241 Move X1, [X0+8]
	242 Move X0, X21
	243 NotImplemented "Instruction BLR not yet implemented."
	244 Compare X22, 0
	245 JumpIfNotEqual {248}
	246 Move X0, X23
	247 Call 0x1D2D690
	248 Move X0, X22
	249 Call 0x1C17F18
	250 Call 0x1991590

Method: System.Boolean get_HasPrivateKey()

Disassembly:
	0x036532E4 CBZ X0, 0x3653528
	0x036532E8 LDR X8, [X0]
	0x036532EC MOV X1, X19
	0x036532F0 LDR X9, [X8 + 0x328]
	0x036532F4 LDR X2, [X8 + 0x330]
	0x036532F8 BLR X9
	0x036532FC MOV X0, X20
	0x03653300 BL 0x3651BFC
	0x03653304 CBZ X0, 0x3653528
	0x03653308 MOV X20, X0
	0x0365330C LDR X0, [X0 + 0x10]
	0x03653310 CBZ X0, 0x3653528
	0x03653314 LDR X8, [X0]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X1, X31
	004 Move X19, X0
	005 Call X509Certificate.ThrowIfInvalid, X0
	006 Move X0, X19
	007 Call X509Certificate2.get_Impl, X0
	008 Compare X0, 0
	009 JumpIfEqual {16}
	010 Move X8, [X0]
	011 Move X2, [X8+584]
	012 Move X1, [X8+592]
	013 Move X30, [X31+16]
	014 Move X19, [X31+24]
	015 CallNoReturn X2
	016 Call 0x1C17F20

Method: System.Security.Cryptography.AsymmetricAlgorithm get_PrivateKey()

Disassembly:
	0x03653318 LDR X9, [X8 + 0x298]
	0x0365331C LDR X1, [X8 + 0x2A0]
	0x03653320 BLR X9
	0x03653324 CMP W0, 0x1
	0x03653328 B.LT 0x36534E0
	0x0365332C MOV X0, X19
	0x03653330 MOV X1, X31
	0x03653334 BL 0x3233888
	0x03653338 MOV X0, X19
	0x0365333C MOV X1, X31
	0x03653340 BL 0x3233888
	0x03653344 ADRP X8, 0xAE9000
	0x03653348 LDR X8, [X8 + 0xA80]
	0x0365334C MOV X0, X19
	0x03653350 MOV X2, X31
	0x03653354 LDR X1, [X8]
	0x03653358 BL 0x32333E0
	0x0365335C MOV X0, X20
	0x03653360 BL 0x3653794
	0x03653364 CBZ X0, 0x3653528
	0x03653368 MOV X20, X0
	0x0365336C BL 0x36538E0
	0x03653370 TBZ X0, 0x0, 0x36534E0
	0x03653374 ADRP X23, 0xAE9000
	0x03653378 ADRP X24, 0xAE9000
	0x0365337C ADRP X21, 0xACD000
	0x03653380 LDR X23, [X23 + 0xA20]
	0x03653384 LDR X24, [X24 + 0xA30]
	0x03653388 LDR X21, [X21 + 0xCE0]
	0x0365338C MOV X0, X20
	0x03653390 BL 0x36537F0
	0x03653394 MOV X22, X0
	0x03653398 MOV X0, X19
	0x0365339C MOV X1, X31
	0x036533A0 BL 0x3233888
	0x036533A4 LDR X1, [X23]
	0x036533A8 MOV X0, X19
	0x036533AC MOV X2, X31
	0x036533B0 BL 0x32333E0
	0x036533B4 CBZ X22, 0x365345C
	0x036533B8 LDR X0, [X22 + 0x10]
	0x036533BC CBZ X0, 0x3653464
	0x036533C0 BL 0x364DE60
	0x036533C4 MOV X1, X0
	0x036533C8 MOV X0, X19
	0x036533CC MOV X2, X31
	0x036533D0 BL 0x32333E0
	0x036533D4 MOVZ W1, 0x28
	0x036533D8 MOV X0, X19
	0x036533DC MOV X2, X31
	0x036533E0 BL 0x3233D30
	0x036533E4 LDR X8, [X22 + 0x10]
	0x036533E8 CBZ X8, 0x365346C
	0x036533EC LDR X1, [X8 + 0x10]
	0x036533F0 MOV X0, X19
	0x036533F4 MOV X2, X31
	0x036533F8 BL 0x32333E0
	0x036533FC LDR X1, [X24]
	0x03653400 MOV X0, X19
	0x03653404 MOV X2, X31
	0x03653408 BL 0x32333E0
	0x0365340C MOV X0, X19
	0x03653410 MOV X1, X31
	0x03653414 BL 0x3233888
	0x03653418 LDR X1, [X25]
	0x0365341C MOV X0, X19
	0x03653420 MOV X2, X31
	0x03653424 BL 0x32333E0
	0x03653428 LDR X8, [X22]
	0x0365342C LDP X9, X2, [X8 + 0x188]
	0x03653430 MOVZ W1, 0x1
	0x03653434 MOV X0, X22
	0x03653438 BLR X9
	0x0365343C MOV X1, X0
	0x03653440 MOV X0, X19
	0x03653444 MOV X2, X31
	0x03653448 BL 0x32333E0
	0x0365344C MOV X0, X20
	0x03653450 BL 0x36538E0
	0x03653454 TBNZ X0, 0x0, 0x365338C
	0x03653458 B 0x36534E0
	0x0365345C BL 0x1C16F20
	0x03653460 B 0x3653568
	0x03653464 BL 0x1C16F20
	0x03653468 B 0x3653544
	0x0365346C BL 0x1C16F20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xD8E000
	005 Move W8, [X20+1573]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0xACE000
	012 Move X0, [X0+3936]
	013 Call 0x1C17CF4
	014 Move X0, 0xACE000
	015 Move X0, [X0+3912]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1573], W8
	019 Move X0, X19
	020 Move X1, X31
	021 Call X509Certificate.ThrowIfInvalid, X0
	022 Move X0, X19
	023 Call X509Certificate2.get_HasPrivateKey, X0
	024 Move X20, X31
	025 Move TEMP, X0
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfNotEqual {78}
	029 Move X20, [X19+144]
	030 Call 0x1C17D44
	031 Compare X20, 0
	032 JumpIfEqual {34}
	033 Move X20, [X19+144]
	034 Move X8, [X19]
	035 Move X0, X19
	036 Move X9, [X8+520]
	037 Move X1, [X8+528]
	038 NotImplemented "Instruction BLR not yet implemented."
	039 Move X8, 0xACE000
	040 Move X8, [X8+3936]
	041 Move X2, X31
	042 Move X20, X0
	043 Move X1, [X8]
	044 Call String.op_Equality, X0, X1
	045 Move TEMP, X0
	046 And TEMP, TEMP, 1
	047 Compare TEMP, 1
	048 JumpIfNotEqual {56}
	049 Move X0, X19
	050 Call X509Certificate2.get_Impl, X0
	051 Compare X0, 0
	052 JumpIfEqual {83}
	053 Move X8, [X0]
	054 Move X9, [X8+600]
	055 Move X1, [X8+608]
	056 Move X8, 0xACE000
	057 Move X8, [X8+3912]
	058 Move X0, X20
	059 Move X2, X31
	060 Move X1, [X8]
	061 Call String.op_Equality, X0, X1
	062 Move TEMP, X0
	063 And TEMP, TEMP, 1
	064 Compare TEMP, 1
	065 JumpIfNotEqual {84}
	066 Move X0, X19
	067 Call X509Certificate2.get_Impl, X0
	068 Compare X0, 0
	069 JumpIfEqual {83}
	070 Move X8, [X0]
	071 Move X9, [X8+616]
	072 Move X1, [X8+624]
	073 NotImplemented "Instruction BLR not yet implemented."
	074 Move X20, X0
	075 Call 0x1C17D44
	076 Move [X19+144], X20
	077 Call 0x1C17D44
	078 Move X0, X20
	079 Move X20, [X31+16]
	080 Move X19, [X31+24]
	081 Move X30, [X31+32]
	082 Return X0
	083 Call 0x1C17F20
	084 Move X0, 0xAA1000
	085 Move X0, [X0+2880]
	086 Call 0x1C17D08
	087 Call 0x1C17F10
	088 Move X19, X0
	089 Move X0, 0xAEA000
	090 Move X0, [X0+2544]
	091 Call 0x1C17D08
	092 Move X1, X0
	093 Move X0, X19
	094 Move X2, X31
	095 Call NotSupportedException..ctor, X0, X1
	096 Move X0, 0xAEA000
	097 Move X0, [X0+2552]
	098 Call 0x1C17D08
	099 Move X1, X0
	100 Move X0, X19
	101 Call 0x1C17DEC

Method: System.Void set_PrivateKey(System.Security.Cryptography.AsymmetricAlgorithm value)

Disassembly:
	0x03653470 B 0x3653544
	0x03653474 B 0x36534A8
	0x03653478 B 0x36534A8
	0x0365347C B 0x36534A8
	0x03653480 B 0x36534A8
	0x03653484 B 0x36534A8
	0x03653488 B 0x36534A8
	0x0365348C B 0x36534A8
	0x03653490 B 0x36534A8
	0x03653494 B 0x36534A8
	0x03653498 B 0x36534A8
	0x0365349C B 0x36534A8
	0x036534A0 B 0x36534A8
	0x036534A4 B 0x36534A8

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0xACC000
	004 Move X0, [X0+3152]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X1, X31
	008 Move X19, X0
	009 Call PlatformNotSupportedException..ctor, X0
	010 Move X0, 0xAEA000
	011 Move X0, [X0+2560]
	012 Call 0x1C17D08
	013 Move X1, X0
	014 Move X0, X19
	015 Call 0x1C17DEC

Method: System.Security.Cryptography.X509Certificates.X500DistinguishedName get_IssuerName()

Disassembly:
	0x036534A8 MOV X22, X0
	0x036534AC CMP W1, 0x1
	0x036534B0 B.NE 0x3653574
	0x036534B4 MOV X0, X22
	0x036534B8 BL 0x3EB1AD0
	0x036534BC MOV X22, X0
	0x036534C0 MOV X0, X21
	0x036534C4 BL 0x1C16D08
	0x036534C8 LDR X8, [X22]
	0x036534CC LDR X1, [X8]
	0x036534D0 BL 0x1C17270
	0x036534D4 TBZ X0, 0x0, 0x3653544
	0x036534D8 BL 0x3EB1AE0
	0x036534DC B 0x365344C
	0x036534E0 MOV X0, X19
	0x036534E4 MOV X1, X31
	0x036534E8 BL 0x3233888
	0x036534EC LDR X8, [X19]
	0x036534F0 MOV X0, X19
	0x036534F4 LDP X2, X1, [X8 + 0x168]
	0x036534F8 LDP X20, X19, [X31 + 0x40]
	0x036534FC LDP X22, X21, [X31 + 0x30]
	0x03653500 LDP X24, X23, [X31 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X1, X31
	005 Move X19, X0
	006 Call X509Certificate.ThrowIfInvalid, X0
	007 Move X20, [X19+128]
	008 Call 0x1C17D44
	009 Compare X20, 0
	010 JumpIfNotEqual {22}
	011 Move X0, X19
	012 Call X509Certificate2.get_Impl, X0
	013 Compare X0, 0
	014 JumpIfEqual {27}
	015 Move X8, [X0]
	016 Move X9, [X8+664]
	017 Move X1, [X8+672]
	018 NotImplemented "Instruction BLR not yet implemented."
	019 Move X20, X0
	020 Call 0x1C17D44
	021 Move [X19+128], X20
	022 Move X0, X20
	023 Move X20, [X31+16]
	024 Move X19, [X31+24]
	025 Move X30, [X31+32]
	026 Return X0
	027 Call 0x1C17F20

Method: System.DateTime get_NotAfter()

Disassembly:
	0x03653504 LDP X30, X25, [X31 + 0x10]
	0x03653508 ADD X31, X31, 0x50

ISIL:
	001 Move X1, X31
	002 Call X509Certificate.GetNotAfter, X0
	003 Return X0

Method: System.DateTime get_NotBefore()

Disassembly:
	0x0365350C BR X2
	0x03653510 LDP X20, X19, [X31 + 0x40]

ISIL:
	001 Move X1, X31
	002 Call X509Certificate.GetNotBefore, X0
	003 Return X0

Method: System.Security.Cryptography.X509Certificates.PublicKey get_PublicKey()

Disassembly:
	0x03653514 LDP X22, X21, [X31 + 0x30]
	0x03653518 LDP X24, X23, [X31 + 0x20]
	0x0365351C LDP X30, X25, [X31 + 0x10]
	0x03653520 ADD X31, X31, 0x50
	0x03653524 RET
	0x03653528 BL 0x1C16F20
	0x0365352C BL 0x1C16F20
	0x03653530 BL 0x1C16F20
	0x03653534 BL 0x1C16F20
	0x03653538 BL 0x1C16F20
	0x0365353C MOV X0, X22
	0x03653540 BL 0x1C16F18
	0x03653544 MOVZ W0, 0x8
	0x03653548 BL 0x3EB1AF0
	0x0365354C LDR X8, [X22]
	0x03653550 STR X8, [X0]
	0x03653554 ADRP X1, 0x861000
	0x03653558 ADD X1, X1, 0xE58
	0x0365355C MOV X2, X31
	0x03653560 BL 0x3EB1B00
	0x03653564 B 0x3653758
	0x03653568 B 0x365356C
	0x0365356C MOV X22, X0
	0x03653570 BL 0x3EB1AE0
	0x03653574 MOV X0, X22
	0x03653578 BL 0x1D2C690
	0x0365357C B 0x3653580
	0x03653580 MOV X23, X1
	0x03653584 MOV X22, X0
	0x03653588 CMP W23, 0x1
	0x0365358C B.NE 0x36535B0
	0x03653590 MOV X0, X22
	0x03653594 BL 0x3EB1AD0
	0x03653598 LDR X8, [X0]
	0x0365359C STR X8, [X31 + 0x8]
	0x036535A0 BL 0x3EB1AE0
	0x036535A4 LDR X22, [X31 + 0x8]
	0x036535A8 MOV W23, W31
	0x036535AC B 0x36531B4
	0x036535B0 STR X31, [X31 + 0x8]
	0x036535B4 ADRP X10, 0xAA0000
	0x036535B8 LDR X8, [X24]
	0x036535BC LDR X10, [X10 + 0xE00]
	0x036535C0 LDRH W9, [X8 + 0x12E]
	0x036535C4 LDR X1, [X10]
	0x036535C8 CBZ X9, 0x36535EC
	0x036535CC LDR X10, [X8 + 0xB0]
	0x036535D0 ADD X10, X10, 0x8
	0x036535D4 LDUR X11, [X10 - 0x8]
	0x036535D8 CMP X11, X1
	0x036535DC B.EQ 0x36535FC
	0x036535E0 SUBS X9, X9, 0x1
	0x036535E4 ADD X10, X10, 0x10
	0x036535E8 B.NE 0x36535D4
	0x036535EC MOV X0, X24
	0x036535F0 MOV W2, W31
	0x036535F4 BL 0x1C5C788
	0x036535F8 B 0x3653608
	0x036535FC LDRSW X9, [X10]
	0x03653600 ADD X8, X8, X9, 0x4, LSL
	0x03653604 ADD X0, X8, 0x138
	0x03653608 LDP X8, X1, [X0]
	0x0365360C MOV X0, X24
	0x03653610 BLR X8
	0x03653614 LDR X8, [X31 + 0x8]
	0x03653618 CBZ X8, 0x3653700
	0x0365361C LDR X0, [X31 + 0x8]
	0x03653620 BL 0x1C16F18
	0x03653624 MOV X23, X1
	0x03653628 MOV X22, X0
	0x0365362C B 0x36535B4
	0x03653630 B 0x3653688
	0x03653634 B 0x3653688
	0x03653638 B 0x3653688
	0x0365363C B 0x3653688
	0x03653640 B 0x3653688
	0x03653644 B 0x3653688
	0x03653648 B 0x3653688
	0x0365364C B 0x3653688
	0x03653650 B 0x3653688
	0x03653654 B 0x3653688
	0x03653658 B 0x3653688

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0xD8E000
	009 Move W8, [X20+1574]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {26}
	015 Move X0, 0xAEA000
	016 Move X0, [X0+2280]
	017 Call 0x1C17CF4
	018 Move X0, 0xAEA000
	019 Move X0, [X0+2016]
	020 Call 0x1C17CF4
	021 Move X0, 0xAEA000
	022 Move X0, [X0+2304]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X20+1574], W8
	026 Move X0, X19
	027 Move X1, X31
	028 Call X509Certificate.ThrowIfInvalid, X0
	029 Move X20, [X19+136]
	030 Call 0x1C17D44
	031 Compare X20, 0
	032 JumpIfNotEqual {84}
	033 Move X8, [X19]
	034 Move X0, X19
	035 Move X9, [X8+520]
	036 Move X1, [X8+528]
	037 NotImplemented "Instruction BLR not yet implemented."
	038 Move X8, [X19]
	039 Move X20, X0
	040 Move X0, X19
	041 Move X9, [X8+536]
	042 Move X1, [X8+544]
	043 NotImplemented "Instruction BLR not yet implemented."
	044 Move X8, [X19]
	045 Move X21, X0
	046 Move X0, X19
	047 Move X9, [X8+552]
	048 Move X1, [X8+560]
	049 NotImplemented "Instruction BLR not yet implemented."
	050 Move X8, 0xAEA000
	051 Move X8, [X8+2016]
	052 Move X22, X0
	053 Move X8, [X8]
	054 Move X0, X8
	055 Call 0x1C17F10
	056 Move X1, X20
	057 Move X23, X0
	058 Call Oid..ctor, X0, X1
	059 Move X20, 0xAEA000
	060 Move X20, [X20+2280]
	061 Move X0, [X20]
	062 Call 0x1C17F10
	063 Move X1, X23
	064 Move X2, X21
	065 Move X24, X0
	066 Call AsnEncodedData..ctor, X0, X1, X2
	067 Move X0, [X20]
	068 Call 0x1C17F10
	069 Move X1, X23
	070 Move X2, X22
	071 Move X21, X0
	072 Call AsnEncodedData..ctor, X0, X1, X2
	073 Move X8, 0xAEA000
	074 Move X8, [X8+2304]
	075 Move X0, [X8]
	076 Call 0x1C17F10
	077 Move X1, X23
	078 Move X2, X24
	079 Move X3, X21
	080 Move X20, X0
	081 Call PublicKey..ctor, X0, X1, X2, X3
	082 Call 0x1C17D44
	083 Move [X19+136], X20
	084 Move X0, X20
	085 Move X20, [X31+48]
	086 Move X19, [X31+56]
	087 Move X22, [X31+32]
	088 Move X21, [X31+40]
	089 Move X24, [X31+16]
	090 Move X23, [X31+24]
	091 Move X30, [X31+64]
	092 Return X0

Method: System.Byte[] get_RawData()

Disassembly:
	0x0365365C B 0x36536F8
	0x03653660 B 0x36536F8
	0x03653664 B 0x36536F8
	0x03653668 B 0x36536F8
	0x0365366C B 0x3653688
	0x03653670 B 0x3653688
	0x03653674 B 0x3653688
	0x03653678 B 0x3653688
	0x0365367C B 0x3653688
	0x03653680 B 0x3653688
	0x03653684 B 0x3653688
	0x03653688 MOV X23, X1
	0x0365368C MOV X22, X0
	0x03653690 CMP W23, 0x1
	0x03653694 B.NE 0x3653574
	0x03653698 MOV X0, X22
	0x0365369C BL 0x3EB1AD0
	0x036536A0 MOV X21, X0
	0x036536A4 ADRP X0, 0xACD000
	0x036536A8 LDR X0, [X0 + 0xCE0]
	0x036536AC BL 0x1C16D08
	0x036536B0 LDR X8, [X21]
	0x036536B4 LDR X1, [X8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X1, X31
	005 Move X19, X0
	006 Call X509Certificate.ThrowIfInvalid, X0
	007 Move X20, [X19+96]
	008 Call 0x1C17D44
	009 Compare X20, 0
	010 JumpIfNotEqual {22}
	011 Move X0, X19
	012 Call X509Certificate2.get_Impl, X0
	013 Compare X0, 0
	014 JumpIfEqual {29}
	015 Move X8, [X0]
	016 Move X9, [X8+456]
	017 Move X1, [X8+464]
	018 NotImplemented "Instruction BLR not yet implemented."
	019 Move X20, X0
	020 Call 0x1C17D44
	021 Move [X19+96], X20
	022 Move X0, X20
	023 Move X20, [X31+16]
	024 Move X19, [X31+24]
	025 Move X1, X31
	026 Move X30, [X31+32]
	027 Call Helpers.CloneByteArray, X0
	028 Return X0
	029 Call 0x1C17F20

Method: System.String get_SerialNumber()

Disassembly:
	0x036536B8 BL 0x1C17270
	0x036536BC TBZ X0, 0x0, 0x36536C8
	0x036536C0 BL 0x3EB1AE0
	0x036536C4 B 0x36532DC

ISIL:
	001 Move X8, [X0]
	002 Move X2, [X8+584]
	003 Move X1, [X8+592]
	004 CallNoReturn X2

Method: System.Security.Cryptography.Oid get_SignatureAlgorithm()

Disassembly:
	0x036536C8 MOVZ W0, 0x8
	0x036536CC BL 0x3EB1AF0
	0x036536D0 LDR X8, [X21]
	0x036536D4 STR X8, [X0]
	0x036536D8 ADRP X1, 0x861000
	0x036536DC ADD X1, X1, 0xE58
	0x036536E0 MOV X2, X31
	0x036536E4 BL 0x3EB1B00
	0x036536E8 B 0x3653758
	0x036536EC MOV X22, X0
	0x036536F0 BL 0x3EB1AE0
	0x036536F4 B 0x3653574
	0x036536F8 MOV X23, X1
	0x036536FC MOV X22, X0
	0x03653700 CMP W23, 0x1
	0x03653704 B.NE 0x3653690
	0x03653708 MOV X0, X22
	0x0365370C BL 0x3EB1AD0
	0x03653710 MOV X22, X0
	0x03653714 ADRP X0, 0xAA0000
	0x03653718 LDR X0, [X0 + 0xB40]
	0x0365371C BL 0x1C16D08
	0x03653720 LDR X8, [X22]
	0x03653724 LDR X1, [X8]
	0x03653728 BL 0x1C17270

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X1, X31
	005 Move X19, X0
	006 Call X509Certificate.ThrowIfInvalid, X0
	007 Move X20, [X19+104]
	008 Call 0x1C17D44
	009 Compare X20, 0
	010 JumpIfNotEqual {24}
	011 Move X0, X19
	012 Call X509Certificate2.get_Impl, X0
	013 Compare X0, 0
	014 JumpIfEqual {29}
	015 Move X8, [X0]
	016 Move X9, [X8+712]
	017 Move X1, [X8+720]
	018 NotImplemented "Instruction BLR not yet implemented."
	019 Move W1, 4
	020 Call Oid.FromOidValue, X0, X1
	021 Move X20, X0
	022 Call 0x1C17D44
	023 Move [X19+104], X20
	024 Move X0, X20
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Return X0
	029 Call 0x1C17F20

Method: System.Security.Cryptography.X509Certificates.X500DistinguishedName get_SubjectName()

Disassembly:
	0x0365372C TBZ X0, 0x0, 0x3653738
	0x03653730 BL 0x3EB1AE0
	0x03653734 B 0x3653230
	0x03653738 MOVZ W0, 0x8
	0x0365373C BL 0x3EB1AF0
	0x03653740 LDR X8, [X22]
	0x03653744 STR X8, [X0]
	0x03653748 ADRP X1, 0x861000
	0x0365374C ADD X1, X1, 0xE58
	0x03653750 MOV X2, X31
	0x03653754 BL 0x3EB1B00
	0x03653758 B 0x3653688
	0x0365375C MOV X23, X1
	0x03653760 MOV X22, X0
	0x03653764 BL 0x3EB1AE0
	0x03653768 B 0x3653690
	0x0365376C BL 0x1990590
	0x03653770 STR X30, [X31 - 0x10]!
	0x03653774 LDR X0, [X0 + 0x10]
	0x03653778 CBZ X0, 0x3653790
	0x0365377C LDR X8, [X0]
	0x03653780 LDR X2, [X8 + 0x298]
	0x03653784 LDR X1, [X8 + 0x2A0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X1, X31
	005 Move X19, X0
	006 Call X509Certificate.ThrowIfInvalid, X0
	007 Move X20, [X19+120]
	008 Call 0x1C17D44
	009 Compare X20, 0
	010 JumpIfNotEqual {22}
	011 Move X0, X19
	012 Call X509Certificate2.get_Impl, X0
	013 Compare X0, 0
	014 JumpIfEqual {27}
	015 Move X8, [X0]
	016 Move X9, [X8+728]
	017 Move X1, [X8+736]
	018 NotImplemented "Instruction BLR not yet implemented."
	019 Move X20, X0
	020 Call 0x1C17D44
	021 Move [X19+120], X20
	022 Move X0, X20
	023 Move X20, [X31+16]
	024 Move X19, [X31+24]
	025 Move X30, [X31+32]
	026 Return X0
	027 Call 0x1C17F20

Method: System.String get_Thumbprint()

Disassembly:
	0x03653788 LDR X30, [X31], #0x10
	0x0365378C BR X2
	0x03653790 BL 0x1C16F20
	0x03653794 STP X30, X21, [X31 - 0x20]!
	0x03653798 STP X20, X19, [X31 + 0x10]
	0x0365379C ADRP X21, 0xD8D000
	0x036537A0 ADRP X20, 0xAE9000

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0]
	003 Move X9, [X8+472]
	004 Move X1, [X8+480]
	005 NotImplemented "Instruction BLR not yet implemented."
	006 Move X1, X31
	007 Move X30, [X31+16]
	008 Call Helpers.ToHexStringUpper, X0
	009 Return X0

Method: System.Int32 get_Version()

Disassembly:
	0x036537A4 LDRB W8, [X21 + 0x68A]
	0x036537A8 LDR X20, [X20 + 0xA90]
	0x036537AC MOV X19, X0
	0x036537B0 TBNZ X8, 0x0, 0x36537C8
	0x036537B4 ADRP X0, 0xAE9000
	0x036537B8 LDR X0, [X0 + 0xA90]
	0x036537BC BL 0x1C16CF4
	0x036537C0 MOVZ W8, 0x1
	0x036537C4 STRB W8, [X21 + 0x68A]
	0x036537C8 LDR X0, [X20]
	0x036537CC LDR X19, [X19 + 0x10]
	0x036537D0 BL 0x1C16F10
	0x036537D4 MOV X1, X19
	0x036537D8 MOV X20, X0
	0x036537DC BL 0x365DBD0
	0x036537E0 MOV X0, X20
	0x036537E4 LDP X20, X19, [X31 + 0x10]
	0x036537E8 LDP X30, X21, [X31], #0x20
	0x036537EC RET
	0x036537F0 STR X30, [X31 - 0x20]!
	0x036537F4 STP X20, X19, [X31 + 0x10]
	0x036537F8 ADRP X20, 0xD8D000
	0x036537FC LDRB W8, [X20 + 0x68D]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X1, X31
	005 Move X19, X0
	006 Call X509Certificate.ThrowIfInvalid, X0
	007 Move W20, [X19+112]
	008 Call 0x1C17D44
	009 Compare W20, 0
	010 JumpIfNotEqual {22}
	011 Move X0, X19
	012 Call X509Certificate2.get_Impl, X0
	013 Compare X0, 0
	014 JumpIfEqual {27}
	015 Move X8, [X0]
	016 Move X9, [X8+744]
	017 Move X1, [X8+752]
	018 NotImplemented "Instruction BLR not yet implemented."
	019 Move W20, W0
	020 Call 0x1C17D44
	021 Move [X19+112], W20
	022 Move W0, W20
	023 Move X20, [X31+16]
	024 Move X19, [X31+24]
	025 Move X30, [X31+32]
	026 Return X0
	027 Call 0x1C17F20

Method: System.Security.Cryptography.X509Certificates.X509ContentType GetCertContentType(System.Byte[] rawData)

Disassembly:
	0x03653800 MOV X19, X0
	0x03653804 TBNZ X8, 0x0, 0x3653828
	0x03653808 ADRP X0, 0xAA0000
	0x0365380C LDR X0, [X0 + 0xE18]
	0x03653810 BL 0x1C16CF4
	0x03653814 ADRP X0, 0xAE6000
	0x03653818 LDR X0, [X0 + 0xF28]
	0x0365381C BL 0x1C16CF4
	0x03653820 MOVZ W8, 0x1
	0x03653824 STRB W8, [X20 + 0x68D]
	0x03653828 LDR X19, [X19 + 0x10]
	0x0365382C CBZ X19, 0x36538DC
	0x03653830 ADRP X10, 0xAA0000
	0x03653834 LDR X8, [X19]
	0x03653838 LDR X10, [X10 + 0xE18]
	0x0365383C LDRH W9, [X8 + 0x12E]
	0x03653840 LDR X1, [X10]
	0x03653844 CBZ X9, 0x3653868
	0x03653848 LDR X10, [X8 + 0xB0]
	0x0365384C ADD X10, X10, 0x8
	0x03653850 LDUR X11, [X10 - 0x8]
	0x03653854 CMP X11, X1
	0x03653858 B.EQ 0x3653878
	0x0365385C SUBS X9, X9, 0x1
	0x03653860 ADD X10, X10, 0x10
	0x03653864 B.NE 0x3653850
	0x03653868 MOVZ W2, 0x1
	0x0365386C MOV X0, X19
	0x03653870 BL 0x1C5C788
	0x03653874 B 0x3653888
	0x03653878 LDR W9, [X10]
	0x0365387C ADD W9, W9, 0x1
	0x03653880 ADD X8, X8, W9, 0x4, SXTW
	0x03653884 ADD X0, X8, 0x138
	0x03653888 LDP X8, X1, [X0]
	0x0365388C MOV X0, X19
	0x03653890 BLR X8
	0x03653894 CBZ X0, 0x36538CC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Compare X0, 0
	005 JumpIfEqual {21}
	006 Move X8, [X0+24]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfEqual {21}
	010 Move X0, X31
	011 Call X509Pal.get_Instance
	012 Compare X0, 0
	013 JumpIfEqual {44}
	014 Move X1, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X2, X31
	018 Move X30, [X31+32]
	019 Call X509PalImpl.GetCertContentType, X0, X1
	020 Return X0
	021 Move X0, 0xAA9000
	022 Move X0, [X0+1400]
	023 Call 0x1C17D08
	024 Call 0x1C17F10
	025 Move X19, X0
	026 Move X0, 0xAEA000
	027 Move X0, [X0+2568]
	028 Call 0x1C17D08
	029 Move X20, X0
	030 Move X0, 0xAE7000
	031 Move X0, [X0+488]
	032 Call 0x1C17D08
	033 Move X2, X0
	034 Move X0, X19
	035 Move X1, X20
	036 Move X3, X31
	037 Call ArgumentException..ctor, X0, X1, X2
	038 Move X0, 0xAEA000
	039 Move X0, [X0+2576]
	040 Call 0x1C17D08
	041 Move X1, X0
	042 Move X0, X19
	043 Call 0x1C17DEC
	044 Call 0x1C17F20

Method: System.String GetNameInfo(System.Security.Cryptography.X509Certificates.X509NameType nameType, System.Boolean forIssuer)

Disassembly:
	0x03653898 ADRP X9, 0xAE6000
	0x0365389C LDR X9, [X9 + 0xF28]
	0x036538A0 LDR X8, [X0]
	0x036538A4 LDR X1, [X9]
	0x036538A8 LDRB W10, [X8 + 0x130]
	0x036538AC LDRB W9, [X1 + 0x130]
	0x036538B0 CMP W10, W9
	0x036538B4 B.CC 0x36538D8
	0x036538B8 LDR X8, [X8 + 0xC8]
	0x036538BC ADD X8, X8, X9, 0x3, LSL
	0x036538C0 LDUR X8, [X8 - 0x8]
	0x036538C4 CMP X8, X1
	0x036538C8 B.NE 0x36538D8
	0x036538CC LDP X20, X19, [X31 + 0x10]
	0x036538D0 LDR X30, [X31], #0x20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W20, W2
	005 Move W19, W1
	006 Call X509Certificate2.get_Impl, X0
	007 Compare X0, 0
	008 JumpIfEqual {18}
	009 Move X8, [X0]
	010 And W2, W20, 1
	011 Move W1, W19
	012 Move X20, [X31+16]
	013 Move X19, [X31+24]
	014 Move X4, [X8+776]
	015 Move X3, [X8+784]
	016 Move X30, [X31+32]
	017 CallNoReturn X4
	018 Call 0x1C17F20

Method: System.String ToString()

Disassembly:
	0x036538D4 RET
	0x036538D8 BL 0x1C171E0
	0x036538DC BL 0x1C16F20

ISIL:
	001 Move W1, 1
	002 Move X2, X31
	003 Call X509Certificate.ToString, X0, X1
	004 Return X0

Method: System.String ToString(System.Boolean verbose)

Disassembly:
	0x036538E0 STR X30, [X31 - 0x20]!
	0x036538E4 STP X20, X19, [X31 + 0x10]
	0x036538E8 ADRP X20, 0xD8D000
	0x036538EC LDRB W8, [X20 + 0x68F]
	0x036538F0 MOV X19, X0
	0x036538F4 TBNZ X8, 0x0, 0x365390C
	0x036538F8 ADRP X0, 0xAA0000
	0x036538FC LDR X0, [X0 + 0xE18]
	0x03653900 BL 0x1C16CF4
	0x03653904 MOVZ W8, 0x1
	0x03653908 STRB W8, [X20 + 0x68F]
	0x0365390C LDR X19, [X19 + 0x10]
	0x03653910 CBZ X19, 0x365397C
	0x03653914 ADRP X10, 0xAA0000
	0x03653918 LDR X8, [X19]
	0x0365391C LDR X10, [X10 + 0xE18]
	0x03653920 LDRH W9, [X8 + 0x12E]
	0x03653924 LDR X1, [X10]
	0x03653928 CBZ X9, 0x365394C
	0x0365392C LDR X10, [X8 + 0xB0]
	0x03653930 ADD X10, X10, 0x8
	0x03653934 LDUR X11, [X10 - 0x8]
	0x03653938 CMP X11, X1
	0x0365393C B.EQ 0x365395C
	0x03653940 SUBS X9, X9, 0x1
	0x03653944 ADD X10, X10, 0x10
	0x03653948 B.NE 0x3653934
	0x0365394C MOV X0, X19
	0x03653950 MOV W2, W31
	0x03653954 BL 0x1C5C788
	0x03653958 B 0x3653968
	0x0365395C LDRSW X9, [X10]
	0x03653960 ADD X8, X8, X9, 0x4, LSL
	0x03653964 ADD X0, X8, 0x138
	0x03653968 LDP X2, X1, [X0]
	0x0365396C MOV X0, X19
	0x03653970 LDP X20, X19, [X31 + 0x10]
	0x03653974 LDR X30, [X31], #0x20
	0x03653978 BR X2
	0x0365397C BL 0x1C16F20
	0x03653980 STP X30, X19, [X31 - 0x10]!
	0x03653984 MOV X19, X0
	0x03653988 BL 0x3652024
	0x0365398C CBZ X0, 0x36539A8
	0x03653990 LDR X8, [X0]
	0x03653994 MOV X1, X19
	0x03653998 LDR X3, [X8 + 0x318]
	0x0365399C LDR X2, [X8 + 0x320]
	0x036539A0 LDP X30, X19, [X31], #0x10
	0x036539A4 BR X3
	0x036539A8 BL 0x1C16F20
	0x036539AC STP X30, X23, [X31 - 0x30]!
	0x036539B0 STP X22, X21, [X31 + 0x10]
	0x036539B4 STP X20, X19, [X31 + 0x20]
	0x036539B8 ADRP X23, 0xD8D000
	0x036539BC ADRP X22, 0xAE9000
	0x036539C0 ADRP X20, 0xAD0000
	0x036539C4 ADRP X21, 0xAE6000
	0x036539C8 LDRB W8, [X23 + 0x694]
	0x036539CC LDR X22, [X22 + 0x7E0]
	0x036539D0 LDR X20, [X20 + 0x770]
	0x036539D4 LDR X21, [X21 + 0x8C8]
	0x036539D8 MOV X19, X0
	0x036539DC TBNZ X8, 0x0, 0x3653A0C
	0x036539E0 ADRP X0, 0xAE9000
	0x036539E4 LDR X0, [X0 + 0x7E0]
	0x036539E8 BL 0x1C16CF4
	0x036539EC ADRP X0, 0xAE6000
	0x036539F0 LDR X0, [X0 + 0x8C8]
	0x036539F4 BL 0x1C16CF4
	0x036539F8 ADRP X0, 0xAD0000
	0x036539FC LDR X0, [X0 + 0x770]
	0x03653A00 BL 0x1C16CF4
	0x03653A04 MOVZ W8, 0x1
	0x03653A08 STRB W8, [X23 + 0x694]
	0x03653A0C MOV X0, X19
	0x03653A10 MOV X1, X31
	0x03653A14 BL 0x33BDD8C
	0x03653A18 LDR X0, [X22]
	0x03653A1C BL 0x1C16F10
	0x03653A20 LDR X22, [X20]
	0x03653A24 LDR X21, [X21]
	0x03653A28 MOV X1, X31
	0x03653A2C MOV X20, X0
	0x03653A30 BL 0x33BDD8C
	0x03653A34 STP X22, X21, [X20 + 0x10]
	0x03653A38 STR X20, [X19 + 0x10]
	0x03653A3C LDP X20, X19, [X31 + 0x20]
	0x03653A40 LDP X22, X21, [X31 + 0x10]
	0x03653A44 LDP X30, X23, [X31], #0x30
	0x03653A48 RET
	0x03653A4C STP X30, X23, [X31 - 0x30]!
	0x03653A50 STP X22, X21, [X31 + 0x10]
	0x03653A54 STP X20, X19, [X31 + 0x20]
	0x03653A58 ADRP X23, 0xD8D000
	0x03653A5C ADRP X22, 0xAE9000
	0x03653A60 ADRP X20, 0xAD0000
	0x03653A64 ADRP X21, 0xAE9000
	0x03653A68 LDRB W8, [X23 + 0x67E]
	0x03653A6C LDR X22, [X22 + 0x7E0]
	0x03653A70 LDR X20, [X20 + 0x5C8]
	0x03653A74 LDR X21, [X21 + 0x8E0]
	0x03653A78 MOV X19, X0
	0x03653A7C TBNZ X8, 0x0, 0x3653AAC
	0x03653A80 ADRP X0, 0xAE9000
	0x03653A84 LDR X0, [X0 + 0x7E0]
	0x03653A88 BL 0x1C16CF4
	0x03653A8C ADRP X0, 0xAE9000
	0x03653A90 LDR X0, [X0 + 0x8E0]
	0x03653A94 BL 0x1C16CF4
	0x03653A98 ADRP X0, 0xAD0000
	0x03653A9C LDR X0, [X0 + 0x5C8]
	0x03653AA0 BL 0x1C16CF4
	0x03653AA4 MOVZ W8, 0x1
	0x03653AA8 STRB W8, [X23 + 0x67E]
	0x03653AAC MOV X0, X19
	0x03653AB0 MOV X1, X31
	0x03653AB4 BL 0x33BDD8C
	0x03653AB8 LDR X0, [X22]
	0x03653ABC BL 0x1C16F10
	0x03653AC0 LDR X22, [X20]
	0x03653AC4 LDR X21, [X21]
	0x03653AC8 MOV X1, X31
	0x03653ACC MOV X20, X0
	0x03653AD0 BL 0x33BDD8C
	0x03653AD4 STP X22, X21, [X20 + 0x10]
	0x03653AD8 STR X20, [X19 + 0x10]
	0x03653ADC LDP X20, X19, [X31 + 0x20]
	0x03653AE0 LDP X22, X21, [X31 + 0x10]
	0x03653AE4 LDP X30, X23, [X31], #0x30
	0x03653AE8 RET
	0x03653AEC STP X30, X23, [X31 - 0x30]!
	0x03653AF0 STP X22, X21, [X31 + 0x10]
	0x03653AF4 STP X20, X19, [X31 + 0x20]
	0x03653AF8 ADRP X23, 0xD8D000
	0x03653AFC ADRP X22, 0xAE9000
	0x03653B00 ADRP X20, 0xAD0000
	0x03653B04 ADRP X21, 0xAE6000
	0x03653B08 LDRB W8, [X23 + 0x69E]
	0x03653B0C LDR X22, [X22 + 0x7E0]
	0x03653B10 LDR X20, [X20 + 0x650]
	0x03653B14 LDR X21, [X21 + 0x910]
	0x03653B18 MOV X19, X0
	0x03653B1C TBNZ X8, 0x0, 0x3653B4C
	0x03653B20 ADRP X0, 0xAE9000
	0x03653B24 LDR X0, [X0 + 0x7E0]
	0x03653B28 BL 0x1C16CF4
	0x03653B2C ADRP X0, 0xAD0000
	0x03653B30 LDR X0, [X0 + 0x650]
	0x03653B34 BL 0x1C16CF4
	0x03653B38 ADRP X0, 0xAE6000
	0x03653B3C LDR X0, [X0 + 0x910]
	0x03653B40 BL 0x1C16CF4
	0x03653B44 MOVZ W8, 0x1
	0x03653B48 STRB W8, [X23 + 0x69E]
	0x03653B4C MOV X0, X19
	0x03653B50 MOV X1, X31
	0x03653B54 BL 0x33BDD8C
	0x03653B58 LDR X0, [X22]
	0x03653B5C BL 0x1C16F10
	0x03653B60 LDR X22, [X20]
	0x03653B64 LDR X21, [X21]
	0x03653B68 MOV X1, X31
	0x03653B6C MOV X20, X0
	0x03653B70 BL 0x33BDD8C
	0x03653B74 STP X22, X21, [X20 + 0x10]
	0x03653B78 STR X20, [X19 + 0x10]
	0x03653B7C LDP X20, X19, [X31 + 0x20]
	0x03653B80 LDP X22, X21, [X31 + 0x10]
	0x03653B84 LDP X30, X23, [X31], #0x30
	0x03653B88 RET
	0x03653B8C MOV X1, X31
	0x03653B90 B 0x3351EFC
	0x03653B94 MOV X1, X31
	0x03653B98 B 0x3351EFC
	0x03653B9C STR X30, [X31 - 0x20]!
	0x03653BA0 STP X20, X19, [X31 + 0x10]
	0x03653BA4 MOV X19, X1
	0x03653BA8 MOV X1, X31
	0x03653BAC MOV X20, X0
	0x03653BB0 BL 0x3351EFC
	0x03653BB4 MOV X0, X20
	0x03653BB8 MOV X1, X19
	0x03653BBC LDP X20, X19, [X31 + 0x10]
	0x03653BC0 LDR X30, [X31], #0x20
	0x03653BC4 B 0x3653BC8
	0x03653BC8 STP X30, X19, [X31 - 0x10]!
	0x03653BCC CBZ X1, 0x3653BEC
	0x03653BD0 LDR X0, [X0 + 0x10]
	0x03653BD4 CBZ X0, 0x3653C34
	0x03653BD8 LDR X8, [X0]
	0x03653BDC LDR X3, [X8 + 0x318]
	0x03653BE0 LDR X2, [X8 + 0x320]
	0x03653BE4 LDP X30, X19, [X31], #0x10
	0x03653BE8 BR X3
	0x03653BEC ADRP X0, 0xAA5000
	0x03653BF0 LDR X0, [X0 + 0x528]
	0x03653BF4 BL 0x1C16D08
	0x03653BF8 BL 0x1C16F10
	0x03653BFC MOV X19, X0
	0x03653C00 ADRP X0, 0xAE9000
	0x03653C04 LDR X0, [X0 + 0xA98]
	0x03653C08 BL 0x1C16D08
	0x03653C0C MOV X1, X0
	0x03653C10 MOV X0, X19
	0x03653C14 MOV X2, X31
	0x03653C18 BL 0x330E100
	0x03653C1C ADRP X0, 0xAE9000
	0x03653C20 LDR X0, [X0 + 0xAA0]
	0x03653C24 BL 0x1C16D08
	0x03653C28 MOV X1, X0
	0x03653C2C MOV X0, X19
	0x03653C30 BL 0x1C16DEC
	0x03653C34 BL 0x1C16F20
	0x03653C38 STP X30, X21, [X31 - 0x20]!
	0x03653C3C STP X20, X19, [X31 + 0x10]
	0x03653C40 ADRP X21, 0xD8D000
	0x03653C44 LDRB W8, [X21 + 0x62A]
	0x03653C48 MOV W19, W1
	0x03653C4C MOV X20, X0
	0x03653C50 TBNZ X8, 0x0, 0x3653C68
	0x03653C54 ADRP X0, 0xAE6000
	0x03653C58 LDR X0, [X0 + 0x2A0]
	0x03653C5C BL 0x1C16CF4
	0x03653C60 MOVZ W8, 0x1
	0x03653C64 STRB W8, [X21 + 0x62A]
	0x03653C68 TBNZ X19, 0x1F, 0x3653CF4
	0x03653C6C LDR X0, [X20 + 0x10]
	0x03653C70 CBZ X0, 0x3653CEC
	0x03653C74 LDR X8, [X0]
	0x03653C78 LDR X9, [X8 + 0x298]
	0x03653C7C LDR X1, [X8 + 0x2A0]
	0x03653C80 BLR X9
	0x03653C84 CMP W0, W19
	0x03653C88 B.LE 0x3653D14
	0x03653C8C LDR X0, [X20 + 0x10]
	0x03653C90 CBZ X0, 0x3653CEC
	0x03653C94 LDR X8, [X0]
	0x03653C98 MOV W1, W19
	0x03653C9C LDR X9, [X8 + 0x2E8]
	0x03653CA0 LDR X2, [X8 + 0x2F0]
	0x03653CA4 BLR X9
	0x03653CA8 CBZ X0, 0x3653CE0
	0x03653CAC ADRP X9, 0xAE6000
	0x03653CB0 LDR X9, [X9 + 0x2A0]
	0x03653CB4 LDR X8, [X0]
	0x03653CB8 LDR X1, [X9]
	0x03653CBC LDRB W10, [X8 + 0x130]
	0x03653CC0 LDRB W9, [X1 + 0x130]
	0x03653CC4 CMP W10, W9
	0x03653CC8 B.CC 0x3653CF0
	0x03653CCC LDR X8, [X8 + 0xC8]
	0x03653CD0 ADD X8, X8, X9, 0x3, LSL
	0x03653CD4 LDUR X8, [X8 - 0x8]
	0x03653CD8 CMP X8, X1
	0x03653CDC B.NE 0x3653CF0
	0x03653CE0 LDP X20, X19, [X31 + 0x10]
	0x03653CE4 LDP X30, X21, [X31], #0x20
	0x03653CE8 RET
	0x03653CEC BL 0x1C16F20
	0x03653CF0 BL 0x1C171E0
	0x03653CF4 ADRP X0, 0xAA8000
	0x03653CF8 LDR X0, [X0 + 0x760]
	0x03653CFC BL 0x1C16D08
	0x03653D00 BL 0x1C16F10
	0x03653D04 MOV X19, X0
	0x03653D08 ADRP X0, 0xAE9000
	0x03653D0C LDR X0, [X0 + 0xAA8]
	0x03653D10 B 0x3653D30
	0x03653D14 ADRP X0, 0xAA8000
	0x03653D18 LDR X0, [X0 + 0x760]
	0x03653D1C BL 0x1C16D08
	0x03653D20 BL 0x1C16F10
	0x03653D24 MOV X19, X0
	0x03653D28 ADRP X0, 0xAE9000
	0x03653D2C LDR X0, [X0 + 0xAB0]
	0x03653D30 BL 0x1C16D08
	0x03653D34 MOV X1, X0
	0x03653D38 MOV X0, X19
	0x03653D3C MOV X2, X31
	0x03653D40 BL 0x3316014
	0x03653D44 ADRP X0, 0xAE9000
	0x03653D48 LDR X0, [X0 + 0xAB8]
	0x03653D4C BL 0x1C16D08
	0x03653D50 MOV X1, X0
	0x03653D54 MOV X0, X19
	0x03653D58 BL 0x1C16DEC
	0x03653D5C STP X30, X19, [X31 - 0x10]!
	0x03653D60 CBZ X1, 0x3653D80
	0x03653D64 LDR X0, [X0 + 0x10]
	0x03653D68 CBZ X0, 0x3653DC8
	0x03653D6C LDR X8, [X0]
	0x03653D70 LDR X3, [X8 + 0x308]
	0x03653D74 LDR X2, [X8 + 0x310]
	0x03653D78 LDP X30, X19, [X31], #0x10
	0x03653D7C BR X3
	0x03653D80 ADRP X0, 0xAA5000
	0x03653D84 LDR X0, [X0 + 0x528]
	0x03653D88 BL 0x1C16D08
	0x03653D8C BL 0x1C16F10
	0x03653D90 MOV X19, X0
	0x03653D94 ADRP X0, 0xAE6000
	0x03653D98 LDR X0, [X0 + 0xE0]
	0x03653D9C BL 0x1C16D08
	0x03653DA0 MOV X1, X0
	0x03653DA4 MOV X0, X19
	0x03653DA8 MOV X2, X31
	0x03653DAC BL 0x330E100
	0x03653DB0 ADRP X0, 0xAE9000
	0x03653DB4 LDR X0, [X0 + 0xAC0]
	0x03653DB8 BL 0x1C16D08
	0x03653DBC MOV X1, X0
	0x03653DC0 MOV X0, X19
	0x03653DC4 BL 0x1C16DEC
	0x03653DC8 BL 0x1C16F20
	0x03653DCC STR X30, [X31 - 0x40]!
	0x03653DD0 STP X24, X23, [X31 + 0x10]
	0x03653DD4 STP X22, X21, [X31 + 0x20]
	0x03653DD8 STP X20, X19, [X31 + 0x30]
	0x03653DDC ADRP X21, 0xD8D000
	0x03653DE0 LDRB W8, [X21 + 0x62B]
	0x03653DE4 MOV X20, X1
	0x03653DE8 MOV X19, X0
	0x03653DEC TBNZ X8, 0x0, 0x3653E1C
	0x03653DF0 ADRP X0, 0xAA0000
	0x03653DF4 LDR X0, [X0 + 0xE00]
	0x03653DF8 BL 0x1C16CF4
	0x03653DFC ADRP X0, 0xAA0000
	0x03653E00 LDR X0, [X0 + 0xE18]
	0x03653E04 BL 0x1C16CF4
	0x03653E08 ADRP X0, 0xAE6000
	0x03653E0C LDR X0, [X0 + 0x2A0]
	0x03653E10 BL 0x1C16CF4
	0x03653E14 MOVZ W8, 0x1
	0x03653E18 STRB W8, [X21 + 0x62B]
	0x03653E1C CBZ X20, 0x3653FF4
	0x03653E20 LDR X0, [X19 + 0x10]
	0x03653E24 CBZ X0, 0x365403C
	0x03653E28 LDR X8, [X0]
	0x03653E2C ADRP X22, 0xAA0000
	0x03653E30 LDR X9, [X8 + 0x388]
	0x03653E34 LDR X1, [X8 + 0x390]
	0x03653E38 LDR X22, [X22 + 0xE00]
	0x03653E3C BLR X9
	0x03653E40 MOV X19, X0
	0x03653E44 CBZ X0, 0x3654040
	0x03653E48 ADRP X23, 0xAA0000
	0x03653E4C ADRP X24, 0xAE6000
	0x03653E50 LDR X23, [X23 + 0xE18]
	0x03653E54 LDR X24, [X24 + 0x2A0]
	0x03653E58 LDR X8, [X19]
	0x03653E5C LDR X1, [X23]
	0x03653E60 LDRH W9, [X8 + 0x12E]
	0x03653E64 CBZ X9, 0x3653E88
	0x03653E68 LDR X10, [X8 + 0xB0]
	0x03653E6C ADD X10, X10, 0x8
	0x03653E70 LDUR X11, [X10 - 0x8]
	0x03653E74 CMP X11, X1
	0x03653E78 B.EQ 0x3653E98
	0x03653E7C SUBS X9, X9, 0x1
	0x03653E80 ADD X10, X10, 0x10
	0x03653E84 B.NE 0x3653E70
	0x03653E88 MOV X0, X19
	0x03653E8C MOV W2, W31
	0x03653E90 BL 0x1C5C788
	0x03653E94 B 0x3653EA4
	0x03653E98 LDRSW X9, [X10]
	0x03653E9C ADD X8, X8, X9, 0x4, LSL
	0x03653EA0 ADD X0, X8, 0x138
	0x03653EA4 LDP X8, X1, [X0]
	0x03653EA8 MOV X0, X19
	0x03653EAC BLR X8
	0x03653EB0 MOV W21, W0
	0x03653EB4 TBZ X0, 0x0, 0x3653F5C
	0x03653EB8 LDR X8, [X19]
	0x03653EBC LDR X1, [X23]
	0x03653EC0 LDRH W9, [X8 + 0x12E]
	0x03653EC4 CBZ X9, 0x3653EE8
	0x03653EC8 LDR X10, [X8 + 0xB0]
	0x03653ECC ADD X10, X10, 0x8
	0x03653ED0 LDUR X11, [X10 - 0x8]
	0x03653ED4 CMP X11, X1
	0x03653ED8 B.EQ 0x3653EF8
	0x03653EDC SUBS X9, X9, 0x1
	0x03653EE0 ADD X10, X10, 0x10
	0x03653EE4 B.NE 0x3653ED0
	0x03653EE8 MOVZ W2, 0x1
	0x03653EEC MOV X0, X19
	0x03653EF0 BL 0x1C5C788
	0x03653EF4 B 0x3653F08
	0x03653EF8 LDR W9, [X10]
	0x03653EFC ADD W9, W9, 0x1
	0x03653F00 ADD X8, X8, W9, 0x4, SXTW
	0x03653F04 ADD X0, X8, 0x138
	0x03653F08 LDP X8, X1, [X0]
	0x03653F0C MOV X0, X19
	0x03653F10 BLR X8
	0x03653F14 CBZ X0, 0x3653FF0
	0x03653F18 LDR X8, [X0]
	0x03653F1C LDR X1, [X24]
	0x03653F20 LDRB W10, [X8 + 0x130]
	0x03653F24 LDRB W9, [X1 + 0x130]
	0x03653F28 CMP W10, W9
	0x03653F2C B.CC 0x3653FEC
	0x03653F30 LDR X10, [X8 + 0xC8]
	0x03653F34 ADD X9, X10, X9, 0x3, LSL
	0x03653F38 LDUR X9, [X9 - 0x8]
	0x03653F3C CMP X9, X1
	0x03653F40 B.NE 0x3653FEC
	0x03653F44 LDP X9, X2, [X8 + 0x1C8]
	0x03653F48 MOV X1, X20
	0x03653F4C BLR X9
	0x03653F50 TBZ X0, 0x0, 0x3653E58
	0x03653F54 MOV X20, X31
	0x03653F58 B 0x3653F64
	0x03653F5C MOV X20, X31
	0x03653F60 MOV W21, W31
	0x03653F64 LDR X1, [X22]
	0x03653F68 MOV X0, X19
	0x03653F6C BL 0x1C16E00
	0x03653F70 CBZ X0, 0x3653FD0
	0x03653F74 LDR X8, [X0]
	0x03653F78 LDR X1, [X22]
	0x03653F7C MOV X19, X0
	0x03653F80 LDRH W9, [X8 + 0x12E]
	0x03653F84 CBZ X9, 0x3653FA8
	0x03653F88 LDR X10, [X8 + 0xB0]
	0x03653F8C ADD X10, X10, 0x8
	0x03653F90 LDUR X11, [X10 - 0x8]
	0x03653F94 CMP X11, X1
	0x03653F98 B.EQ 0x3653FB8
	0x03653F9C SUBS X9, X9, 0x1
	0x03653FA0 ADD X10, X10, 0x10
	0x03653FA4 B.NE 0x3653F90
	0x03653FA8 MOV X0, X19
	0x03653FAC MOV W2, W31
	0x03653FB0 BL 0x1C5C788
	0x03653FB4 B 0x3653FC4
	0x03653FB8 LDRSW X9, [X10]
	0x03653FBC ADD X8, X8, X9, 0x4, LSL
	0x03653FC0 ADD X0, X8, 0x138
	0x03653FC4 LDP X8, X1, [X0]
	0x03653FC8 MOV X0, X19
	0x03653FCC BLR X8
	0x03653FD0 CBNZ X20, 0x3654044
	0x03653FD4 AND W0, W21, 0x1
	0x03653FD8 LDP X20, X19, [X31 + 0x30]
	0x03653FDC LDP X22, X21, [X31 + 0x20]
	0x03653FE0 LDP X24, X23, [X31 + 0x10]
	0x03653FE4 LDR X30, [X31], #0x40
	0x03653FE8 RET
	0x03653FEC BL 0x1C171E0
	0x03653FF0 BL 0x1C16F20
	0x03653FF4 ADRP X0, 0xAA5000
	0x03653FF8 LDR X0, [X0 + 0x528]
	0x03653FFC BL 0x1C16D08
	0x03654000 BL 0x1C16F10
	0x03654004 MOV X19, X0
	0x03654008 ADRP X0, 0xAE5000
	0x0365400C LDR X0, [X0 + 0xE0]
	0x03654010 BL 0x1C16D08
	0x03654014 MOV X1, X0
	0x03654018 MOV X0, X19
	0x0365401C MOV X2, X31
	0x03654020 BL 0x330E100
	0x03654024 ADRP X0, 0xAE8000
	0x03654028 LDR X0, [X0 + 0xAC8]
	0x0365402C BL 0x1C16D08
	0x03654030 MOV X1, X0
	0x03654034 MOV X0, X19
	0x03654038 BL 0x1C16DEC
	0x0365403C BL 0x1C16F20
	0x03654040 BL 0x1C16F20
	0x03654044 MOV X0, X20
	0x03654048 BL 0x1C16F18
	0x0365404C B 0x365405C
	0x03654050 B 0x365405C
	0x03654054 B 0x365405C
	0x03654058 B 0x365405C
	0x0365405C MOV X21, X0
	0x03654060 CMP W1, 0x1
	0x03654064 B.NE 0x365407C
	0x03654068 MOV X0, X21
	0x0365406C BL 0x3EB1AD0
	0x03654070 LDR X20, [X0]
	0x03654074 BL 0x3EB1AE0
	0x03654078 B 0x3653F60
	0x0365407C MOV X20, X31
	0x03654080 B 0x3654088
	0x03654084 MOV X21, X0
	0x03654088 LDR X1, [X22]
	0x0365408C MOV X0, X19
	0x03654090 BL 0x1C16E00
	0x03654094 MOV X19, X0
	0x03654098 CBZ X0, 0x36540F4
	0x0365409C LDR X8, [X19]
	0x036540A0 LDR X1, [X22]
	0x036540A4 LDRH W9, [X8 + 0x12E]
	0x036540A8 CBZ X9, 0x36540CC
	0x036540AC LDR X10, [X8 + 0xB0]
	0x036540B0 ADD X10, X10, 0x8
	0x036540B4 LDUR X11, [X10 - 0x8]
	0x036540B8 CMP X11, X1
	0x036540BC B.EQ 0x36540DC
	0x036540C0 SUBS X9, X9, 0x1
	0x036540C4 ADD X10, X10, 0x10
	0x036540C8 B.NE 0x36540B4
	0x036540CC MOV X0, X19
	0x036540D0 MOV W2, W31
	0x036540D4 BL 0x1C5C788
	0x036540D8 B 0x36540E8
	0x036540DC LDRSW X9, [X10]
	0x036540E0 ADD X8, X8, X9, 0x4, LSL
	0x036540E4 ADD X0, X8, 0x138
	0x036540E8 LDP X8, X1, [X0]
	0x036540EC MOV X0, X19
	0x036540F0 BLR X8
	0x036540F4 CBNZ X20, 0x3654100
	0x036540F8 MOV X0, X21
	0x036540FC BL 0x1D2C690
	0x03654100 MOV X0, X20
	0x03654104 BL 0x1C16F18
	0x03654108 BL 0x1990590
	0x0365410C STP X30, X21, [X31 - 0x20]!
	0x03654110 STP X20, X19, [X31 + 0x10]
	0x03654114 ADRP X20, 0xD8C000
	0x03654118 LDRB W8, [X20 + 0x62C]
	0x0365411C MOV X19, X1
	0x03654120 TBNZ X8, 0x0, 0x3654144
	0x03654124 ADRP X0, 0xAE8000
	0x03654128 LDR X0, [X0 + 0x878]
	0x0365412C BL 0x1C16CF4
	0x03654130 ADRP X0, 0xACF000
	0x03654134 LDR X0, [X0 + 0x650]
	0x03654138 BL 0x1C16CF4
	0x0365413C MOVZ W8, 0x1
	0x03654140 STRB W8, [X20 + 0x62C]
	0x03654144 CBZ X19, 0x36541C4
	0x03654148 MOV X0, X19
	0x0365414C BL 0x3651BFC
	0x03654150 CBZ X0, 0x36541C4
	0x03654154 ADRP X8, 0xACF000
	0x03654158 LDR X8, [X8 + 0x650]
	0x0365415C ADRP X21, 0xAE8000
	0x03654160 LDR X1, [X8]
	0x03654164 LDR X21, [X21 + 0x878]
	0x03654168 BL 0x36541C8
	0x0365416C CBZ X0, 0x3654184
	0x03654170 LDR X8, [X21]
	0x03654174 LDR X9, [X0]
	0x03654178 MOV X20, X0
	0x0365417C CMP X9, X8
	0x03654180 B.EQ 0x36541B0
	0x03654184 MOV X0, X19
	0x03654188 BL 0x3652514
	0x0365418C LDR X8, [X21]
	0x03654190 MOV X19, X0
	0x03654194 MOV X0, X8
	0x03654198 BL 0x1C16F10
	0x0365419C MOVZ W2, 0x2
	0x036541A0 MOV X1, X19
	0x036541A4 MOV W3, W31
	0x036541A8 MOV X20, X0
	0x036541AC BL 0x365455C
	0x036541B0 CBZ X20, 0x36541C4
	0x036541B4 MOV X0, X20
	0x036541B8 LDP X20, X19, [X31 + 0x10]
	0x036541BC LDP X30, X21, [X31], #0x20
	0x036541C0 B 0x365490C
	0x036541C4 BL 0x1C16F20
	0x036541C8 STP X30, X23, [X31 - 0x30]!
	0x036541CC STP X22, X21, [X31 + 0x10]
	0x036541D0 STP X20, X19, [X31 + 0x20]
	0x036541D4 ADRP X21, 0xD8C000
	0x036541D8 LDRB W8, [X21 + 0x689]
	0x036541DC MOV X20, X1
	0x036541E0 MOV X19, X0
	0x036541E4 TBNZ X8, 0x0, 0x3654214
	0x036541E8 ADRP X0, 0xA9F000
	0x036541EC LDR X0, [X0 + 0xE00]
	0x036541F0 BL 0x1C16CF4
	0x036541F4 ADRP X0, 0xA9F000
	0x036541F8 LDR X0, [X0 + 0xE18]
	0x036541FC BL 0x1C16CF4
	0x03654200 ADRP X0, 0xAE5000
	0x03654204 LDR X0, [X0 + 0xF28]
	0x03654208 BL 0x1C16CF4
	0x0365420C MOVZ W8, 0x1
	0x03654210 STRB W8, [X21 + 0x689]
	0x03654214 CBZ X20, 0x3654434
	0x03654218 LDR X0, [X19 + 0x10]
	0x0365421C CBZ X0, 0x3654430
	0x03654220 LDR X8, [X0]
	0x03654224 LDR X9, [X8 + 0x298]
	0x03654228 LDR X1, [X8 + 0x2A0]
	0x0365422C BLR X9
	0x03654230 CBZ W0, 0x3654380
	0x03654234 LDR W8, [X20 + 0x10]
	0x03654238 CBZ W8, 0x3654380
	0x0365423C LDR X0, [X19 + 0x10]
	0x03654240 CBZ X0, 0x3654430
	0x03654244 LDR X8, [X0]
	0x03654248 LDR X9, [X8 + 0x388]
	0x0365424C LDR X1, [X8 + 0x390]
	0x03654250 BLR X9
	0x03654254 MOV X19, X0
	0x03654258 CBZ X0, 0x365447C
	0x0365425C ADRP X22, 0xA9F000
	0x03654260 ADRP X23, 0xAE5000
	0x03654264 LDR X22, [X22 + 0xE18]
	0x03654268 LDR X23, [X23 + 0xF28]
	0x0365426C LDR X8, [X19]
	0x03654270 LDR X1, [X22]
	0x03654274 LDRH W9, [X8 + 0x12E]
	0x03654278 CBZ X9, 0x365429C
	0x0365427C LDR X10, [X8 + 0xB0]
	0x03654280 ADD X10, X10, 0x8
	0x03654284 LDUR X11, [X10 - 0x8]
	0x03654288 CMP X11, X1
	0x0365428C B.EQ 0x36542AC
	0x03654290 SUBS X9, X9, 0x1
	0x03654294 ADD X10, X10, 0x10
	0x03654298 B.NE 0x3654284
	0x0365429C MOV X0, X19
	0x036542A0 MOV W2, W31
	0x036542A4 BL 0x1C5C788
	0x036542A8 B 0x36542B8
	0x036542AC LDRSW X9, [X10]
	0x036542B0 ADD X8, X8, X9, 0x4, LSL
	0x036542B4 ADD X0, X8, 0x138
	0x036542B8 LDP X8, X1, [X0]
	0x036542BC MOV X0, X19
	0x036542C0 BLR X8
	0x036542C4 TBZ X0, 0x0, 0x3654388
	0x036542C8 LDR X8, [X19]
	0x036542CC LDR X1, [X22]
	0x036542D0 LDRH W9, [X8 + 0x12E]
	0x036542D4 CBZ X9, 0x36542F8
	0x036542D8 LDR X10, [X8 + 0xB0]
	0x036542DC ADD X10, X10, 0x8
	0x036542E0 LDUR X11, [X10 - 0x8]
	0x036542E4 CMP X11, X1
	0x036542E8 B.EQ 0x3654308
	0x036542EC SUBS X9, X9, 0x1
	0x036542F0 ADD X10, X10, 0x10
	0x036542F4 B.NE 0x36542E0
	0x036542F8 MOVZ W2, 0x1
	0x036542FC MOV X0, X19
	0x03654300 BL 0x1C5C788
	0x03654304 B 0x3654318
	0x03654308 LDR W9, [X10]
	0x0365430C ADD W9, W9, 0x1
	0x03654310 ADD X8, X8, W9, 0x4, SXTW
	0x03654314 ADD X0, X8, 0x138
	0x03654318 LDP X8, X1, [X0]
	0x0365431C MOV X0, X19
	0x03654320 BLR X8
	0x03654324 MOV X21, X0
	0x03654328 CBZ X0, 0x3654428
	0x0365432C LDR X8, [X21]
	0x03654330 LDR X1, [X23]
	0x03654334 LDRB W10, [X8 + 0x130]
	0x03654338 LDRB W9, [X1 + 0x130]
	0x0365433C CMP W10, W9
	0x03654340 B.CC 0x365441C
	0x03654344 LDR X8, [X8 + 0xC8]
	0x03654348 ADD X8, X8, X9, 0x3, LSL
	0x0365434C LDUR X8, [X8 - 0x8]
	0x03654350 CMP X8, X1
	0x03654354 B.NE 0x365441C
	0x03654358 LDR X8, [X21 + 0x10]
	0x0365435C CBZ X8, 0x365442C
	0x03654360 LDR X0, [X8 + 0x10]
	0x03654364 CBZ X0, 0x3654424
	0x03654368 MOV X1, X20
	0x0365436C MOV X2, X31
	0x03654370 BL 0x322693C
	0x03654374 TBZ X0, 0x0, 0x365426C
	0x03654378 MOV X20, X31
	0x0365437C B 0x3654390
	0x03654380 MOV X21, X31
	0x03654384 B 0x3654408
	0x03654388 MOV X20, X31
	0x0365438C MOV X21, X31
	0x03654390 ADRP X22, 0xA9F000
	0x03654394 LDR X22, [X22 + 0xE00]
	0x03654398 MOV X0, X19
	0x0365439C LDR X1, [X22]
	0x036543A0 BL 0x1C16E00
	0x036543A4 CBZ X0, 0x3654404
	0x036543A8 LDR X8, [X0]
	0x036543AC LDR X1, [X22]
	0x036543B0 MOV X19, X0
	0x036543B4 LDRH W9, [X8 + 0x12E]
	0x036543B8 CBZ X9, 0x36543DC
	0x036543BC LDR X10, [X8 + 0xB0]
	0x036543C0 ADD X10, X10, 0x8
	0x036543C4 LDUR X11, [X10 - 0x8]
	0x036543C8 CMP X11, X1
	0x036543CC B.EQ 0x36543EC
	0x036543D0 SUBS X9, X9, 0x1
	0x036543D4 ADD X10, X10, 0x10
	0x036543D8 B.NE 0x36543C4
	0x036543DC MOV X0, X19
	0x036543E0 MOV W2, W31
	0x036543E4 BL 0x1C5C788
	0x036543E8 B 0x36543F8
	0x036543EC LDRSW X9, [X10]
	0x036543F0 ADD X8, X8, X9, 0x4, LSL
	0x036543F4 ADD X0, X8, 0x138
	0x036543F8 LDP X8, X1, [X0]
	0x036543FC MOV X0, X19
	0x03654400 BLR X8
	0x03654404 CBNZ X20, 0x3654480
	0x03654408 MOV X0, X21
	0x0365440C LDP X20, X19, [X31 + 0x20]
	0x03654410 LDP X22, X21, [X31 + 0x10]
	0x03654414 LDP X30, X23, [X31], #0x30
	0x03654418 RET
	0x0365441C MOV X0, X21
	0x03654420 BL 0x1C171E0
	0x03654424 BL 0x1C16F20
	0x03654428 BL 0x1C16F20
	0x0365442C BL 0x1C16F20
	0x03654430 BL 0x1C16F20
	0x03654434 ADRP X0, 0xAA4000
	0x03654438 LDR X0, [X0 + 0x528]
	0x0365443C BL 0x1C16D08
	0x03654440 BL 0x1C16F10
	0x03654444 MOV X19, X0
	0x03654448 ADRP X0, 0xACC000
	0x0365444C LDR X0, [X0 + 0xBE0]
	0x03654450 BL 0x1C16D08
	0x03654454 MOV X1, X0
	0x03654458 MOV X0, X19
	0x0365445C MOV X2, X31
	0x03654460 BL 0x330E100
	0x03654464 ADRP X0, 0xAE8000
	0x03654468 LDR X0, [X0 + 0xAD0]
	0x0365446C BL 0x1C16D08
	0x03654470 MOV X1, X0
	0x03654474 MOV X0, X19
	0x03654478 BL 0x1C16DEC
	0x0365447C BL 0x1C16F20
	0x03654480 MOV X0, X20
	0x03654484 BL 0x1C16F18
	0x03654488 B 0x36544A4
	0x0365448C B 0x36544A4
	0x03654490 B 0x36544A4
	0x03654494 B 0x36544A4
	0x03654498 B 0x36544A4
	0x0365449C B 0x36544A4
	0x036544A0 B 0x36544A4
	0x036544A4 MOV X21, X0
	0x036544A8 CMP W1, 0x1
	0x036544AC B.NE 0x36544C4
	0x036544B0 MOV X0, X21
	0x036544B4 BL 0x3EB1AD0
	0x036544B8 LDR X20, [X0]
	0x036544BC BL 0x3EB1AE0
	0x036544C0 B 0x365438C
	0x036544C4 MOV X20, X31
	0x036544C8 B 0x36544D0
	0x036544CC MOV X21, X0
	0x036544D0 ADRP X22, 0xA9F000
	0x036544D4 LDR X22, [X22 + 0xE00]
	0x036544D8 LDR X1, [X22]
	0x036544DC MOV X0, X19
	0x036544E0 BL 0x1C16E00
	0x036544E4 MOV X19, X0
	0x036544E8 CBZ X0, 0x3654544
	0x036544EC LDR X8, [X19]
	0x036544F0 LDR X1, [X22]
	0x036544F4 LDRH W9, [X8 + 0x12E]
	0x036544F8 CBZ X9, 0x365451C
	0x036544FC LDR X10, [X8 + 0xB0]
	0x03654500 ADD X10, X10, 0x8
	0x03654504 LDUR X11, [X10 - 0x8]
	0x03654508 CMP X11, X1
	0x0365450C B.EQ 0x365452C
	0x03654510 SUBS X9, X9, 0x1
	0x03654514 ADD X10, X10, 0x10
	0x03654518 B.NE 0x3654504
	0x0365451C MOV X0, X19
	0x03654520 MOV W2, W31
	0x03654524 BL 0x1C5C788
	0x03654528 B 0x3654538
	0x0365452C LDRSW X9, [X10]
	0x03654530 ADD X8, X8, X9, 0x4, LSL
	0x03654534 ADD X0, X8, 0x138
	0x03654538 LDP X8, X1, [X0]
	0x0365453C MOV X0, X19
	0x03654540 BLR X8
	0x03654544 CBNZ X20, 0x3654550
	0x03654548 MOV X0, X21
	0x0365454C BL 0x1D2C690
	0x03654550 MOV X0, X20
	0x03654554 BL 0x1C16F18
	0x03654558 BL 0x1990590
	0x0365455C STP X30, X27, [X31 - 0x50]!
	0x03654560 STP X26, X25, [X31 + 0x10]
	0x03654564 STP X24, X23, [X31 + 0x20]
	0x03654568 STP X22, X21, [X31 + 0x30]
	0x0365456C STP X20, X19, [X31 + 0x40]
	0x03654570 ADRP X21, 0xD8C000
	0x03654574 LDRB W8, [X21 + 0x6A2]
	0x03654578 MOV W20, W3
	0x0365457C MOV W22, W2
	0x03654580 MOV X23, X1
	0x03654584 MOV X19, X0
	0x03654588 TBNZ X8, 0x0, 0x36545DC
	0x0365458C ADRP X0, 0xACC000
	0x03654590 LDR X0, [X0 + 0xB98]
	0x03654594 BL 0x1C16CF4
	0x03654598 ADRP X0, 0xA9F000
	0x0365459C LDR X0, [X0 + 0x618]
	0x036545A0 BL 0x1C16CF4
	0x036545A4 ADRP X0, 0xACC000
	0x036545A8 LDR X0, [X0 + 0xBD8]
	0x036545AC BL 0x1C16CF4
	0x036545B0 ADRP X0, 0xAE8000
	0x036545B4 LDR X0, [X0 + 0x7E0]
	0x036545B8 BL 0x1C16CF4
	0x036545BC ADRP X0, 0xACF000
	0x036545C0 LDR X0, [X0 + 0x650]
	0x036545C4 BL 0x1C16CF4
	0x036545C8 ADRP X0, 0xAE5000
	0x036545CC LDR X0, [X0 + 0x910]
	0x036545D0 BL 0x1C16CF4
	0x036545D4 MOVZ W8, 0x1
	0x036545D8 STRB W8, [X21 + 0x6A2]
	0x036545DC MOV X0, X19
	0x036545E0 MOV X1, X31
	0x036545E4 BL 0x33BDD8C
	0x036545E8 CBZ X23, 0x365488C
	0x036545EC LDR X8, [X23 + 0x10]
	0x036545F0 CBZ X8, 0x3654888
	0x036545F4 LDR X21, [X8 + 0x18]
	0x036545F8 CMP W22, 0x2
	0x036545FC B.EQ 0x3654698
	0x03654600 CMP W22, 0x1
	0x03654604 B.EQ 0x3654620
	0x03654608 CBNZ W22, 0x36548C0
	0x0365460C MOV X0, X31
	0x03654610 BL 0x325D0E8
	0x03654614 CBZ X0, 0x3654888
	0x03654618 MOV X1, X21
	0x0365461C B 0x3654810
	0x03654620 MOV X0, X31
	0x03654624 BL 0x325D0E8
	0x03654628 CBZ X0, 0x3654888
	0x0365462C MOV X1, X21
	0x03654630 MOV X2, X31
	0x03654634 BL 0x32513F4
	0x03654638 ADRP X8, 0xA9F000
	0x0365463C LDR X8, [X8 + 0x618]
	0x03654640 MOV X21, X0
	0x03654644 MOVZ W1, 0x8
	0x03654648 LDR X8, [X8]
	0x0365464C MOV X0, X8
	0x03654650 BL 0x1C16D6C
	0x03654654 MOV X2, X0
	0x03654658 STR X0, [X19 + 0x28]
	0x0365465C MOVZ W1, 0xC
	0x03654660 MOVZ W4, 0x8
	0x03654664 MOV X0, X21
	0x03654668 MOV W3, W31
	0x0365466C MOV X5, X31
	0x03654670 BL 0x33A8A9C
	0x03654674 LDR X8, [X19 + 0x28]
	0x03654678 CBZ X8, 0x3654888
	0x0365467C LDR W9, [X8 + 0x18]
	0x03654680 CBZ W9, 0x3654908
	0x03654684 LDRB W9, [X8 + 0x20]
	0x03654688 MOVZ W10, 0x40
	0x0365468C BFM W10, W9, 0x0, 0x3
	0x03654690 STRB W10, [X8 + 0x20]
	0x03654694 B 0x365481C
	0x03654698 ADRP X27, 0xACC000
	0x0365469C LDR X27, [X27 + 0xB98]
	0x036546A0 LDR X0, [X27]
	0x036546A4 BL 0x1C16F10
	0x036546A8 MOVZ W1, 0x30
	0x036546AC MOV X2, X31
	0x036546B0 MOV X22, X0
	0x036546B4 BL 0x31E79E8
	0x036546B8 LDR X0, [X27]
	0x036546BC BL 0x1C16F10
	0x036546C0 MOVZ W1, 0x30
	0x036546C4 MOV X2, X31
	0x036546C8 MOV X24, X0
	0x036546CC BL 0x31E79E8
	0x036546D0 CBZ X22, 0x3654888
	0x036546D4 MOV X0, X22
	0x036546D8 MOV X1, X24
	0x036546DC MOV X2, X31
	0x036546E0 BL 0x31E7ED0
	0x036546E4 LDR X8, [X23 + 0x20]
	0x036546E8 CBZ X8, 0x3654888
	0x036546EC ADRP X9, 0xACC000
	0x036546F0 LDR X9, [X9 + 0xBD8]
	0x036546F4 MOV X24, X0
	0x036546F8 LDR X25, [X8 + 0x10]
	0x036546FC LDR X0, [X9]
	0x03654700 LDR W9, [X0 + 0xE0]
	0x03654704 CBNZ W9, 0x365470C
	0x03654708 BL 0x1C16DFC
	0x0365470C MOV X0, X25
	0x03654710 MOV X1, X31
	0x03654714 BL 0x3264FF4
	0x03654718 LDR X8, [X27]
	0x0365471C MOV X26, X0
	0x03654720 MOV X0, X8
	0x03654724 BL 0x1C16F10
	0x03654728 MOV X1, X26
	0x0365472C MOV X2, X31
	0x03654730 MOV X25, X0
	0x03654734 BL 0x31E7A44
	0x03654738 CBZ X24, 0x3654888
	0x0365473C MOV X0, X24
	0x03654740 MOV X1, X25
	0x03654744 MOV X2, X31
	0x03654748 BL 0x31E7ED0
	0x0365474C LDR X8, [X23 + 0x18]
	0x03654750 CBZ X8, 0x3654888
	0x03654754 LDR X0, [X27]
	0x03654758 LDR X23, [X8 + 0x18]
	0x0365475C BL 0x1C16F10
	0x03654760 MOV X1, X23
	0x03654764 MOV X2, X31
	0x03654768 MOV X25, X0
	0x0365476C BL 0x31E7A44

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X21, 0xD8E000
	011 Move W8, [X21+1575]
	012 Move W19, W1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {95}
	018 Move X0, 0xAA1000
	019 Move X0, [X0+3584]
	020 Call 0x1C17CF4
	021 Move X0, 0xAA1000
	022 Move X0, [X0+2288]
	023 Call 0x1C17CF4
	024 Move X0, 0xAEA000
	025 Move X0, [X0+2584]
	026 Call 0x1C17CF4
	027 Move X0, 0xAEA000
	028 Move X0, [X0+2592]
	029 Call 0x1C17CF4
	030 Move X0, 0xAEA000
	031 Move X0, [X0+2600]
	032 Call 0x1C17CF4
	033 Move X0, 0xAEA000
	034 Move X0, [X0+2608]
	035 Call 0x1C17CF4
	036 Move X0, 0xAEA000
	037 Move X0, [X0+2616]
	038 Call 0x1C17CF4
	039 Move X0, 0xAEA000
	040 Move X0, [X0+2624]
	041 Call 0x1C17CF4
	042 Move X0, 0xAEA000
	043 Move X0, [X0+2632]
	044 Call 0x1C17CF4
	045 Move X0, 0xAEA000
	046 Move X0, [X0+2640]
	047 Call 0x1C17CF4
	048 Move X0, 0xAEA000
	049 Move X0, [X0+2648]
	050 Call 0x1C17CF4
	051 Move X0, 0xAEA000
	052 Move X0, [X0+2656]
	053 Call 0x1C17CF4
	054 Move X0, 0xAEA000
	055 Move X0, [X0+2664]
	056 Call 0x1C17CF4
	057 Move X0, 0xAEA000
	058 Move X0, [X0+2672]
	059 Call 0x1C17CF4
	060 Move X0, 0xAA3000
	061 Move X0, [X0+416]
	062 Call 0x1C17CF4
	063 Move X0, 0xAEA000
	064 Move X0, [X0+2680]
	065 Call 0x1C17CF4
	066 Move X0, 0xAD1000
	067 Move X0, [X0+2480]
	068 Call 0x1C17CF4
	069 Move X0, 0xAA2000
	070 Move X0, [X0+1544]
	071 Call 0x1C17CF4
	072 Move X0, 0xAD1000
	073 Move X0, [X0+2488]
	074 Call 0x1C17CF4
	075 Move X0, 0xAD1000
	076 Move X0, [X0+2496]
	077 Call 0x1C17CF4
	078 Move X0, 0xAEA000
	079 Move X0, [X0+2688]
	080 Call 0x1C17CF4
	081 Move X0, 0xAD1000
	082 Move X0, [X0+2504]
	083 Call 0x1C17CF4
	084 Move X0, 0xAD1000
	085 Move X0, [X0+2512]
	086 Call 0x1C17CF4
	087 Move X0, 0xAEA000
	088 Move X0, [X0+2696]
	089 Call 0x1C17CF4
	090 Move X0, 0xAD1000
	091 Move X0, [X0+2520]
	092 Call 0x1C17CF4
	093 Move W8, 1
	094 Move [X21+1575], W8
	095 Move TEMP, X19
	096 And TEMP, TEMP, 1
	097 Compare TEMP, 1
	098 JumpIfNotEqual {605}
	099 Move X0, X20
	100 Move X1, X31
	101 Call X509Certificate.get_IsValid, X0
	102 Move TEMP, X0
	103 And TEMP, TEMP, 1
	104 Compare TEMP, 1
	105 JumpIfNotEqual {605}
	106 Move X8, 0xAA1000
	107 Move X8, [X8+2288]
	108 Move X0, [X8]
	109 Call 0x1C17F10
	110 Move X1, X31
	111 Move X19, X0
	112 Call StringBuilder..ctor, X0
	113 Compare X19, 0
	114 JumpIfEqual {819}
	115 Move X8, 0xAEA000
	116 Move X8, [X8+2616]
	117 Move X0, X19
	118 Move X2, X31
	119 Move X1, [X8]
	120 Call StringBuilder.AppendLine, X0, X1
	121 Move X8, 0xAEA000
	122 Move X8, [X8+2624]
	123 Move X0, X19
	124 Move X2, X31
	125 Move X1, [X8]
	126 Call StringBuilder.Append, X0, X1
	127 Move X0, X20
	128 Call X509Certificate2.get_Version, X0
	129 Move W1, W0
	130 Move X0, X19
	131 Move X2, X31
	132 Call StringBuilder.Append, X0, X1
	133 Move X0, X19
	134 Move X1, X31
	135 Call StringBuilder.AppendLine, X0
	136 Move X0, X19
	137 Move X1, X31
	138 Call StringBuilder.AppendLine, X0
	139 Move X8, 0xAD1000
	140 Move X8, [X8+2488]
	141 Move X0, X19
	142 Move X2, X31
	143 Move X1, [X8]
	144 Call StringBuilder.AppendLine, X0, X1
	145 Move X25, 0xAA3000
	146 Move X25, [X25+416]
	147 Move X0, X19
	148 Move X2, X31
	149 Move X1, [X25]
	150 Call StringBuilder.Append, X0, X1
	151 Move X0, X20
	152 Call X509Certificate2.get_SubjectName, X0
	153 Compare X0, 0
	154 JumpIfEqual {819}
	155 Move X1, [X0+32]
	156 Move X0, X19
	157 Move X2, X31
	158 Call StringBuilder.Append, X0, X1
	159 Move X0, X20
	160 Move W1, W31
	161 Move W2, W31
	162 Call X509Certificate2.GetNameInfo, X0, X1, X2
	163 Compare X0, 0
	164 JumpIfEqual {819}
	165 Move W8, [X0+16]
	166 Move X21, X0
	167 NotImplemented "Instruction CMP not yet implemented."
	168 Move X0, X19
	169 Move X1, X31
	170 Call StringBuilder.AppendLine, X0
	171 Move X1, [X25]
	172 Move X0, X19
	173 Move X2, X31
	174 Call StringBuilder.Append, X0, X1
	175 Move X8, 0xAEA000
	176 Move X8, [X8+2600]
	177 Move X0, X19
	178 Move X2, X31
	179 Move X1, [X8]
	180 Call StringBuilder.Append, X0, X1
	181 Move X0, X19
	182 Move X1, X21
	183 Move X2, X31
	184 Call StringBuilder.Append, X0, X1
	185 Move W1, 1
	186 Move X0, X20
	187 Move W2, W31
	188 Call X509Certificate2.GetNameInfo, X0, X1, X2
	189 Compare X0, 0
	190 JumpIfEqual {819}
	191 Move W8, [X0+16]
	192 Move X21, X0
	193 NotImplemented "Instruction CMP not yet implemented."
	194 Move X0, X19
	195 Move X1, X31
	196 Call StringBuilder.AppendLine, X0
	197 Move X1, [X25]
	198 Move X0, X19
	199 Move X2, X31
	200 Call StringBuilder.Append, X0, X1
	201 Move X8, 0xAEA000
	202 Move X8, [X8+2640]
	203 Move X0, X19
	204 Move X2, X31
	205 Move X1, [X8]
	206 Call StringBuilder.Append, X0, X1
	207 Move X0, X19
	208 Move X1, X21
	209 Move X2, X31
	210 Call StringBuilder.Append, X0, X1
	211 Move W1, 2
	212 Move X0, X20
	213 Move W2, W31
	214 Call X509Certificate2.GetNameInfo, X0, X1, X2
	215 Compare X0, 0
	216 JumpIfEqual {819}
	217 Move W8, [X0+16]
	218 Move X21, X0
	219 NotImplemented "Instruction CMP not yet implemented."
	220 Move X0, X19
	221 Move X1, X31
	222 Call StringBuilder.AppendLine, X0
	223 Move X1, [X25]
	224 Move X0, X19
	225 Move X2, X31
	226 Call StringBuilder.Append, X0, X1
	227 Move X8, 0xAEA000
	228 Move X8, [X8+2632]
	229 Move X0, X19
	230 Move X2, X31
	231 Move X1, [X8]
	232 Call StringBuilder.Append, X0, X1
	233 Move X0, X19
	234 Move X1, X21
	235 Move X2, X31
	236 Call StringBuilder.Append, X0, X1
	237 Move W1, 3
	238 Move X0, X20
	239 Move W2, W31
	240 Call X509Certificate2.GetNameInfo, X0, X1, X2
	241 Compare X0, 0
	242 JumpIfEqual {819}
	243 Move W8, [X0+16]
	244 Move X21, X0
	245 NotImplemented "Instruction CMP not yet implemented."
	246 Move X0, X19
	247 Move X1, X31
	248 Call StringBuilder.AppendLine, X0
	249 Move X1, [X25]
	250 Move X0, X19
	251 Move X2, X31
	252 Call StringBuilder.Append, X0, X1
	253 Move X8, 0xAEA000
	254 Move X8, [X8+2696]
	255 Move X0, X19
	256 Move X2, X31
	257 Move X1, [X8]
	258 Call StringBuilder.Append, X0, X1
	259 Move X0, X19
	260 Move X1, X21
	261 Move X2, X31
	262 Call StringBuilder.Append, X0, X1
	263 Move X0, X19
	264 Move X1, X31
	265 Call StringBuilder.AppendLine, X0
	266 Move X0, X19
	267 Move X1, X31
	268 Call StringBuilder.AppendLine, X0
	269 Move X8, 0xAD1000
	270 Move X8, [X8+2512]
	271 Move X0, X19
	272 Move X2, X31
	273 Move X1, [X8]
	274 Call StringBuilder.AppendLine, X0, X1
	275 Move X1, [X25]
	276 Move X0, X19
	277 Move X2, X31
	278 Call StringBuilder.Append, X0, X1
	279 Move X0, X20
	280 Call X509Certificate2.get_IssuerName, X0
	281 Compare X0, 0
	282 JumpIfEqual {819}
	283 Move X1, [X0+32]
	284 Move X0, X19
	285 Move X2, X31
	286 Call StringBuilder.Append, X0, X1
	287 Move W2, 1
	288 Move X0, X20
	289 Move W1, W31
	290 Call X509Certificate2.GetNameInfo, X0, X1, X2
	291 Compare X0, 0
	292 JumpIfEqual {819}
	293 Move W8, [X0+16]
	294 Move X21, X0
	295 NotImplemented "Instruction CMP not yet implemented."
	296 Move X0, X19
	297 Move X1, X31
	298 Call StringBuilder.AppendLine, X0
	299 Move X1, [X25]
	300 Move X0, X19
	301 Move X2, X31
	302 Call StringBuilder.Append, X0, X1
	303 Move X8, 0xAEA000
	304 Move X8, [X8+2600]
	305 Move X0, X19
	306 Move X2, X31
	307 Move X1, [X8]
	308 Call StringBuilder.Append, X0, X1
	309 Move X0, X19
	310 Move X1, X21
	311 Move X2, X31
	312 Call StringBuilder.Append, X0, X1
	313 Move W1, 1
	314 Move W2, 1
	315 Move X0, X20
	316 Call X509Certificate2.GetNameInfo, X0, X1, X2
	317 Compare X0, 0
	318 JumpIfEqual {819}
	319 Move W8, [X0+16]
	320 Move X21, X0
	321 NotImplemented "Instruction CMP not yet implemented."
	322 Move X0, X19
	323 Move X1, X31
	324 Call StringBuilder.AppendLine, X0
	325 Move X1, [X25]
	326 Move X0, X19
	327 Move X2, X31
	328 Call StringBuilder.Append, X0, X1
	329 Move X8, 0xAEA000
	330 Move X8, [X8+2640]
	331 Move X0, X19
	332 Move X2, X31
	333 Move X1, [X8]
	334 Call StringBuilder.Append, X0, X1
	335 Move X0, X19
	336 Move X1, X21
	337 Move X2, X31
	338 Call StringBuilder.Append, X0, X1
	339 Move W1, 2
	340 Move W2, 1
	341 Move X0, X20
	342 Call X509Certificate2.GetNameInfo, X0, X1, X2
	343 Compare X0, 0
	344 JumpIfEqual {819}
	345 Move W8, [X0+16]
	346 Move X21, X0
	347 NotImplemented "Instruction CMP not yet implemented."
	348 Move X0, X19
	349 Move X1, X31
	350 Call StringBuilder.AppendLine, X0
	351 Move X1, [X25]
	352 Move X0, X19
	353 Move X2, X31
	354 Call StringBuilder.Append, X0, X1
	355 Move X8, 0xAEA000
	356 Move X8, [X8+2632]
	357 Move X0, X19
	358 Move X2, X31
	359 Move X1, [X8]
	360 Call StringBuilder.Append, X0, X1
	361 Move X0, X19
	362 Move X1, X21
	363 Move X2, X31
	364 Call StringBuilder.Append, X0, X1
	365 Move W1, 3
	366 Move W2, 1
	367 Move X0, X20
	368 Call X509Certificate2.GetNameInfo, X0, X1, X2
	369 Compare X0, 0
	370 JumpIfEqual {819}
	371 Move W8, [X0+16]
	372 Move X21, X0
	373 NotImplemented "Instruction CMP not yet implemented."
	374 Move X0, X19
	375 Move X1, X31
	376 Call StringBuilder.AppendLine, X0
	377 Move X1, [X25]
	378 Move X0, X19
	379 Move X2, X31
	380 Call StringBuilder.Append, X0, X1
	381 Move X8, 0xAEA000
	382 Move X8, [X8+2696]
	383 Move X0, X19
	384 Move X2, X31
	385 Move X1, [X8]
	386 Call StringBuilder.Append, X0, X1
	387 Move X0, X19
	388 Move X1, X21
	389 Move X2, X31
	390 Call StringBuilder.Append, X0, X1
	391 Move X0, X19
	392 Move X1, X31
	393 Call StringBuilder.AppendLine, X0
	394 Move X0, X19
	395 Move X1, X31
	396 Call StringBuilder.AppendLine, X0
	397 Move X8, 0xAD1000
	398 Move X8, [X8+2496]
	399 Move X0, X19
	400 Move X2, X31
	401 Move X1, [X8]
	402 Call StringBuilder.AppendLine, X0, X1
	403 Move X1, [X25]
	404 Move X0, X19
	405 Move X2, X31
	406 Call StringBuilder.Append, X0, X1
	407 Move X8, [X20]
	408 Move X0, X20
	409 Move X9, [X8+584]
	410 Move X1, [X8+592]
	411 NotImplemented "Instruction BLR not yet implemented."
	412 Move X1, X0
	413 Move X0, X19
	414 Move X2, X31
	415 Call StringBuilder.AppendLine, X0, X1
	416 Move X0, X19
	417 Move X1, X31
	418 Call StringBuilder.AppendLine, X0
	419 Move X8, 0xAD1000
	420 Move X8, [X8+2520]
	421 Move X0, X19
	422 Move X2, X31
	423 Move X1, [X8]
	424 Call StringBuilder.AppendLine, X0, X1
	425 Move X1, [X25]
	426 Move X0, X19
	427 Move X2, X31
	428 Call StringBuilder.Append, X0, X1
	429 Move X0, X20
	430 Move X1, X31
	431 Call X509Certificate.GetNotBefore, X0
	432 Move X1, X31
	433 Call X509Certificate.FormatDate, X0
	434 Move X1, X0
	435 Move X0, X19
	436 Move X2, X31
	437 Call StringBuilder.AppendLine, X0, X1
	438 Move X0, X19
	439 Move X1, X31
	440 Call StringBuilder.AppendLine, X0
	441 Move X8, 0xAD1000
	442 Move X8, [X8+2504]
	443 Move X0, X19
	444 Move X2, X31
	445 Move X1, [X8]
	446 Call StringBuilder.AppendLine, X0, X1
	447 Move X1, [X25]
	448 Move X0, X19
	449 Move X2, X31
	450 Call StringBuilder.Append, X0, X1
	451 Move X0, X20
	452 Move X1, X31
	453 Call X509Certificate.GetNotAfter, X0
	454 Move X1, X31
	455 Call X509Certificate.FormatDate, X0
	456 Move X1, X0
	457 Move X0, X19
	458 Move X2, X31
	459 Call StringBuilder.AppendLine, X0, X1
	460 Move X0, X19
	461 Move X1, X31
	462 Call StringBuilder.AppendLine, X0
	463 Move X8, 0xAD1000
	464 Move X8, [X8+2480]
	465 Move X0, X19
	466 Move X2, X31
	467 Move X1, [X8]
	468 Call StringBuilder.AppendLine, X0, X1
	469 Move X1, [X25]
	470 Move X0, X19
	471 Move X2, X31
	472 Call StringBuilder.Append, X0, X1
	473 Move X8, [X20]
	474 Move X0, X20
	475 Move X9, [X8+472]
	476 Move X1, [X8+480]
	477 NotImplemented "Instruction BLR not yet implemented."
	478 Move X1, X31
	479 Call Helpers.ToHexStringUpper, X0
	480 Move X1, X0
	481 Move X0, X19
	482 Move X2, X31
	483 Call StringBuilder.AppendLine, X0, X1
	484 Move X0, X19
	485 Move X1, X31
	486 Call StringBuilder.AppendLine, X0
	487 Move X8, 0xAE9000
	488 Move X8, [X8+2664]
	489 Move X0, X19
	490 Move X2, X31
	491 Move X1, [X8]
	492 Call StringBuilder.AppendLine, X0, X1
	493 Move X1, [X25]
	494 Move X0, X19
	495 Move X2, X31
	496 Call StringBuilder.Append, X0, X1
	497 Move X0, X20
	498 Call X509Certificate2.get_SignatureAlgorithm, X0
	499 Compare X0, 0
	500 JumpIfEqual {819}
	501 Call Oid.get_FriendlyName, X0
	502 Move X1, X0
	503 Move X0, X19
	504 Move X2, X31
	505 Call StringBuilder.Append, X0, X1
	506 Move W1, 40
	507 Move X0, X19
	508 Move X2, X31
	509 Call StringBuilder.Append, X0, X1
	510 Move X0, X20
	511 Call X509Certificate2.get_SignatureAlgorithm, X0
	512 Compare X0, 0
	513 JumpIfEqual {819}
	514 Move X1, [X0+16]
	515 Move X0, X19
	516 Move X2, X31
	517 Call StringBuilder.Append, X0, X1
	518 Move X8, 0xAA1000
	519 Move X8, [X8+1544]
	520 Move X0, X19
	521 Move X2, X31
	522 Move X1, [X8]
	523 Call StringBuilder.AppendLine, X0, X1
	524 Move X0, X19
	525 Move X1, X31
	526 Call StringBuilder.AppendLine, X0
	527 Move X8, 0xAE9000
	528 Move X8, [X8+2680]
	529 Move X0, X19
	530 Move X2, X31
	531 Move X1, [X8]
	532 Call StringBuilder.Append, X0, X1
	533 Move X0, X20
	534 Call X509Certificate2.get_PublicKey, X0
	535 Move X21, X0
	536 Move X0, X19
	537 Move X1, X31
	538 Call StringBuilder.AppendLine, X0
	539 Move X1, [X25]
	540 Move X0, X19
	541 Move X2, X31
	542 Call StringBuilder.Append, X0, X1
	543 Move X8, 0xAE9000
	544 Move X8, [X8+2584]
	545 Move X1, [X8]
	546 Move X0, X19
	547 Move X2, X31
	548 Call StringBuilder.Append, X0, X1
	549 Compare X21, 0
	550 JumpIfEqual {820}
	551 Move X0, [X21+32]
	552 Compare X0, 0
	553 JumpIfEqual {821}
	554 Call Oid.get_FriendlyName, X0
	555 Move X1, X0
	556 Move X0, X19
	557 Move X2, X31
	558 Call StringBuilder.Append, X0, X1
	559 Move X0, X19
	560 Move X1, X31
	561 Call StringBuilder.AppendLine, X0
	562 Move X1, [X25]
	563 Move X0, X19
	564 Move X2, X31
	565 Call StringBuilder.Append, X0, X1
	566 Move X8, 0xAE9000
	567 Move X8, [X8+2648]
	568 Move X1, [X8]
	569 Move X0, X19
	570 Move X2, X31
	571 Call StringBuilder.Append, X0, X1
	572 Move X0, X20
	573 Move X1, X31
	574 Call RSACertificateExtensions.GetRSAPublicKey, X0
	575 Move X24, X0
	576 Compare X0, 0
	577 JumpIfEqual {619}
	578 Move X8, [X24]
	579 Move X9, [X8+408]
	580 Move X1, [X8+416]
	581 Move X0, X24
	582 NotImplemented "Instruction BLR not yet implemented."
	583 Move W1, W0
	584 Move X0, X19
	585 Move X2, X31
	586 Call StringBuilder.Append, X0, X1
	587 Move X22, X31
	588 Move W23, 13
	589 Move X10, 0xAA0000
	590 Move X8, [X24]
	591 Move X10, [X10+3584]
	592 NotImplemented "Instruction LDRH not yet implemented."
	593 Move X1, [X10]
	594 Compare X9, 0
	595 JumpIfEqual {602}
	596 Move X10, [X8+176]
	597 Add X10, X10, 8
	598 NotImplemented "Instruction LDUR not yet implemented."
	599 NotImplemented "Instruction CMP not yet implemented."
	600 Subtract X9, X9, 1
	601 Add X10, X10, 16
	602 Move X0, X24
	603 Move W2, W31
	604 Call 0x1C5D788
	605 Move X8, [X20]
	606 Move X0, X20
	607 NotImplemented "Instruction LDRSW not yet implemented."
	608 Add X8, X8, X9
	609 Add X0, X8, 312
	610 Move X8, [X0]
	611 Move X1, [X0+8]
	612 Move X0, X24
	613 NotImplemented "Instruction BLR not yet implemented."
	614 Compare X22, 0
	615 JumpIfNotEqual {824}
	616 Compare W23, 0
	617 JumpIfEqual {619}
	618 NotImplemented "Instruction CMP not yet implemented."
	619 Move X0, X19
	620 Move X1, X31
	621 Call StringBuilder.AppendLine, X0
	622 Move X1, [X25]
	623 Move X0, X19
	624 Move X2, X31
	625 Call StringBuilder.Append, X0, X1
	626 Move X8, 0xAE9000
	627 Move X8, [X8+2656]
	628 Move X1, [X8]
	629 Move X0, X19
	630 Move X2, X31
	631 Call StringBuilder.Append, X0, X1
	632 Move X0, [X21+16]
	633 Compare X0, 0
	634 JumpIfEqual {822}
	635 Move X8, [X0]
	636 Move X9, [X8+392]
	637 Move X2, [X8+400]
	638 Move W1, 1
	639 NotImplemented "Instruction BLR not yet implemented."
	640 Move X1, X0
	641 Move X0, X19
	642 Move X2, X31
	643 Call StringBuilder.AppendLine, X0, X1
	644 Move X1, [X25]
	645 Move X0, X19
	646 Move X2, X31
	647 Call StringBuilder.Append, X0, X1
	648 Move X8, 0xAE9000
	649 Move X8, [X8+2672]
	650 Move X1, [X8]
	651 Move X0, X19
	652 Move X2, X31
	653 Call StringBuilder.Append, X0, X1
	654 Move X0, [X21+24]
	655 Compare X0, 0
	656 JumpIfEqual {823}
	657 Move X8, [X0]
	658 Move X9, [X8+392]
	659 Move X2, [X8+400]
	660 Move W1, 1
	661 NotImplemented "Instruction BLR not yet implemented."
	662 Move X1, X0
	663 Move X0, X19
	664 Move X2, X31
	665 Call StringBuilder.Append, X0, X1
	666 Move X0, X20
	667 Call X509Certificate2.get_Impl, X0
	668 Compare X0, 0
	669 JumpIfEqual {819}
	670 Move X8, [X0]
	671 Move X1, X19
	672 Move X9, [X8+808]
	673 Move X2, [X8+816]
	674 NotImplemented "Instruction BLR not yet implemented."
	675 Move X0, X20
	676 Call X509Certificate2.get_Extensions, X0
	677 Compare X0, 0
	678 JumpIfEqual {819}
	679 Move X20, X0
	680 Move X0, [X0+16]
	681 Compare X0, 0
	682 JumpIfEqual {819}
	683 Move X8, [X0]
	684 Move X9, [X8+664]
	685 Move X1, [X8+672]
	686 NotImplemented "Instruction BLR not yet implemented."
	687 NotImplemented "Instruction CMP not yet implemented."
	688 Move X0, X19
	689 Move X1, X31
	690 Call StringBuilder.AppendLine, X0
	691 Move X0, X19
	692 Move X1, X31
	693 Call StringBuilder.AppendLine, X0
	694 Move X8, 0xAE9000
	695 Move X8, [X8+2688]
	696 Move X0, X19
	697 Move X2, X31
	698 Move X1, [X8]
	699 Call StringBuilder.Append, X0, X1
	700 Move X0, X20
	701 Call X509ExtensionCollection.GetEnumerator, X0
	702 Compare X0, 0
	703 JumpIfEqual {819}
	704 Move X20, X0
	705 Call X509ExtensionEnumerator.MoveNext, X0
	706 Move TEMP, X0
	707 And TEMP, TEMP, 1
	708 Compare TEMP, 1
	709 JumpIfNotEqual {792}
	710 Move X23, 0xAE9000
	711 Move X24, 0xAE9000
	712 Move X21, 0xACD000
	713 Move X23, [X23+2592]
	714 Move X24, [X24+2608]
	715 Move X21, [X21+3296]
	716 Move X0, X20
	717 Call X509ExtensionEnumerator.get_Current, X0
	718 Move X22, X0
	719 Move X0, X19
	720 Move X1, X31
	721 Call StringBuilder.AppendLine, X0
	722 Move X1, [X23]
	723 Move X0, X19
	724 Move X2, X31
	725 Call StringBuilder.Append, X0, X1
	726 Compare X22, 0
	727 JumpIfEqual {774}
	728 Move X0, [X22+16]
	729 Compare X0, 0
	730 JumpIfEqual {775}
	731 Call Oid.get_FriendlyName, X0
	732 Move X1, X0
	733 Move X0, X19
	734 Move X2, X31
	735 Call StringBuilder.Append, X0, X1
	736 Move W1, 40
	737 Move X0, X19
	738 Move X2, X31
	739 Call StringBuilder.Append, X0, X1
	740 Move X8, [X22+16]
	741 Compare X8, 0
	742 JumpIfEqual {776}
	743 Move X1, [X8+16]
	744 Move X0, X19
	745 Move X2, X31
	746 Call StringBuilder.Append, X0, X1
	747 Move X1, [X24]
	748 Move X0, X19
	749 Move X2, X31
	750 Call StringBuilder.Append, X0, X1
	751 Move X0, X19
	752 Move X1, X31
	753 Call StringBuilder.AppendLine, X0
	754 Move X1, [X25]
	755 Move X0, X19
	756 Move X2, X31
	757 Call StringBuilder.Append, X0, X1
	758 Move X8, [X22]
	759 Move X9, [X8+392]
	760 Move X2, [X8+400]
	761 Move W1, 1
	762 Move X0, X22
	763 NotImplemented "Instruction BLR not yet implemented."
	764 Move X1, X0
	765 Move X0, X19
	766 Move X2, X31
	767 Call StringBuilder.Append, X0, X1
	768 Move X0, X20
	769 Call X509ExtensionEnumerator.MoveNext, X0
	770 Move TEMP, X0
	771 And TEMP, TEMP, 1
	772 Compare TEMP, 1
	773 JumpIfEqual {716}
	774 Call 0x1C17F20
	775 Call 0x1C17F20
	776 Call 0x1C17F20
	777 Move X22, X0
	778 NotImplemented "Instruction CMP not yet implemented."
	779 Move X0, X22
	780 Call 0x3EB2AD0
	781 Move X22, X0
	782 Move X0, X21
	783 Call 0x1C17D08
	784 Move X8, [X22]
	785 Move X1, [X8]
	786 Call 0x1C18270
	787 Move TEMP, X0
	788 And TEMP, TEMP, 1
	789 Compare TEMP, 1
	790 JumpIfNotEqual {826}
	791 Call 0x3EB2AE0
	792 Move X0, X19
	793 Move X1, X31
	794 Call StringBuilder.AppendLine, X0
	795 Move X8, [X19]
	796 Move X0, X19
	797 Move X2, [X8+360]
	798 Move X1, [X8+368]
	799 Move X20, [X31+64]
	800 Move X19, [X31+72]
	801 Move X22, [X31+48]
	802 Move X21, [X31+56]
	803 Move X24, [X31+32]
	804 Move X23, [X31+40]
	805 Move X30, [X31+16]
	806 Move X25, [X31+24]
	807 Add X31, X31, 80
	808 CallNoReturn X2
	809 Move X20, [X31+64]
	810 Move X19, [X31+72]
	811 Move X22, [X31+48]
	812 Move X21, [X31+56]
	813 Move X24, [X31+32]
	814 Move X23, [X31+40]
	815 Move X30, [X31+16]
	816 Move X25, [X31+24]
	817 Add X31, X31, 80
	818 Return X0
	819 Call 0x1C17F20
	820 Call 0x1C17F20
	821 Call 0x1C17F20
	822 Call 0x1C17F20
	823 Call 0x1C17F20
	824 Move X0, X22
	825 Call 0x1C17F18
	826 Move W0, 8
	827 Call 0x3EB2AF0
	828 Move X8, [X22]
	829 Move [X0], X8
	830 Move X1, 0x861000
	831 Add X1, X1, 3672
	832 Move X2, X31
	833 Call 0x3EB2B00
	834 Move X22, X0
	835 Call 0x3EB2AE0
	836 Move X0, X22
	837 Call 0x1D2D690
	838 Move X23, X1
	839 Move X22, X0
	840 NotImplemented "Instruction CMP not yet implemented."
	841 Move X0, X22
	842 Call 0x3EB2AD0
	843 Move X8, [X0]
	844 Move [X31+8], X8
	845 Call 0x3EB2AE0
	846 Move X22, [X31+8]
	847 Move W23, W31
	848 Move [X31+8], X31
	849 Move X10, 0xAA0000
	850 Move X8, [X24]
	851 Move X10, [X10+3584]
	852 NotImplemented "Instruction LDRH not yet implemented."
	853 Move X1, [X10]
	854 Compare X9, 0
	855 JumpIfEqual {862}
	856 Move X10, [X8+176]
	857 Add X10, X10, 8
	858 NotImplemented "Instruction LDUR not yet implemented."
	859 NotImplemented "Instruction CMP not yet implemented."
	860 Subtract X9, X9, 1
	861 Add X10, X10, 16
	862 Move X0, X24
	863 Move W2, W31
	864 Call 0x1C5D788
	865 NotImplemented "Instruction LDRSW not yet implemented."
	866 Add X8, X8, X9
	867 Add X0, X8, 312
	868 Move X8, [X0]
	869 Move X1, [X0+8]
	870 Move X0, X24
	871 NotImplemented "Instruction BLR not yet implemented."
	872 Move X8, [X31+8]
	873 Compare X8, 0
	874 JumpIfEqual {908}
	875 Move X0, [X31+8]
	876 Call 0x1C17F18
	877 Move X23, X1
	878 Move X22, X0
	879 Move X23, X1
	880 Move X22, X0
	881 NotImplemented "Instruction CMP not yet implemented."
	882 Move X0, X22
	883 Call 0x3EB2AD0
	884 Move X21, X0
	885 Move X0, 0xACD000
	886 Move X0, [X0+3296]
	887 Call 0x1C17D08
	888 Move X8, [X21]
	889 Move X1, [X8]
	890 Call 0x1C18270
	891 Move TEMP, X0
	892 And TEMP, TEMP, 1
	893 Compare TEMP, 1
	894 JumpIfNotEqual {896}
	895 Call 0x3EB2AE0
	896 Move W0, 8
	897 Call 0x3EB2AF0
	898 Move X8, [X21]
	899 Move [X0], X8
	900 Move X1, 0x861000
	901 Add X1, X1, 3672
	902 Move X2, X31
	903 Call 0x3EB2B00
	904 Move X22, X0
	905 Call 0x3EB2AE0
	906 Move X23, X1
	907 Move X22, X0
	908 NotImplemented "Instruction CMP not yet implemented."
	909 Move X0, X22
	910 Call 0x3EB2AD0
	911 Move X22, X0
	912 Move X0, 0xAA0000
	913 Move X0, [X0+2880]
	914 Call 0x1C17D08
	915 Move X8, [X22]
	916 Move X1, [X8]
	917 Call 0x1C18270
	918 Move TEMP, X0
	919 And TEMP, TEMP, 1
	920 Compare TEMP, 1
	921 JumpIfNotEqual {923}
	922 Call 0x3EB2AE0
	923 Move W0, 8
	924 Call 0x3EB2AF0
	925 Move X8, [X22]
	926 Move [X0], X8
	927 Move X1, 0x861000
	928 Add X1, X1, 3672
	929 Move X2, X31
	930 Call 0x3EB2B00
	931 Move X23, X1
	932 Move X22, X0
	933 Call 0x3EB2AE0
	934 Call 0x1991590

Method: System.Boolean Verify()

Disassembly:
	0x03654980 BL 0x1C16D08
	0x03654984 MOV X1, X0
	0x03654988 MOV X0, X19
	0x0365498C BL 0x1C16DEC
	0x03654990 SUB X31, X31, 0xA0
	0x03654994 STP X29, X30, [X31 + 0x40]
	0x03654998 STP X28, X27, [X31 + 0x50]
	0x0365499C STP X26, X25, [X31 + 0x60]
	0x036549A0 STP X24, X23, [X31 + 0x70]
	0x036549A4 STP X22, X21, [X31 + 0x80]
	0x036549A8 STP X20, X19, [X31 + 0x90]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Call X509Certificate2.get_Impl, X0
	005 Compare X0, 0
	006 JumpIfEqual {14}
	007 Move X8, [X0]
	008 Move X1, X19
	009 Move X3, [X8+792]
	010 Move X2, [X8+800]
	011 Move X30, [X31+16]
	012 Move X19, [X31+24]
	013 CallNoReturn X3
	014 Call 0x1C17F20

Method: System.Security.Cryptography.X509Certificates.X509Extension CreateCustomExtensionIfAny(System.Security.Cryptography.Oid oid)

Disassembly:
	0x036530B0 MOV X0, X19
	0x036530B4 MOV X2, X31
	0x036530B8 LDR X1, [X8]
	0x036530BC BL 0x32338A8
	0x036530C0 MOV X0, X19
	0x036530C4 MOV X1, X31
	0x036530C8 BL 0x3233888
	0x036530CC ADRP X8, 0xAE9000
	0x036530D0 LDR X8, [X8 + 0xA78]
	0x036530D4 MOV X0, X19
	0x036530D8 MOV X2, X31
	0x036530DC LDR X1, [X8]
	0x036530E0 BL 0x32333E0
	0x036530E4 MOV X0, X20
	0x036530E8 BL 0x3652514
	0x036530EC MOV X21, X0
	0x036530F0 MOV X0, X19
	0x036530F4 MOV X1, X31
	0x036530F8 BL 0x3233888
	0x036530FC LDR X1, [X25]
	0x03653100 MOV X0, X19
	0x03653104 MOV X2, X31
	0x03653108 BL 0x32333E0
	0x0365310C ADRP X8, 0xAE9000
	0x03653110 LDR X8, [X8 + 0xA18]
	0x03653114 LDR X1, [X8]
	0x03653118 MOV X0, X19
	0x0365311C MOV X2, X31
	0x03653120 BL 0x32333E0
	0x03653124 CBZ X21, 0x365352C
	0x03653128 LDR X0, [X21 + 0x20]
	0x0365312C CBZ X0, 0x3653530
	0x03653130 BL 0x364DE60
	0x03653134 MOV X1, X0
	0x03653138 MOV X0, X19
	0x0365313C MOV X2, X31
	0x03653140 BL 0x32333E0
	0x03653144 MOV X0, X19
	0x03653148 MOV X1, X31
	0x0365314C BL 0x3233888
	0x03653150 LDR X1, [X25]
	0x03653154 MOV X0, X19
	0x03653158 MOV X2, X31
	0x0365315C BL 0x32333E0
	0x03653160 ADRP X8, 0xAE9000
	0x03653164 LDR X8, [X8 + 0xA58]
	0x03653168 LDR X1, [X8]
	0x0365316C MOV X0, X19
	0x03653170 MOV X2, X31
	0x03653174 BL 0x32333E0
	0x03653178 MOV X0, X20
	0x0365317C MOV X1, X31
	0x03653180 BL 0x35DEA48
	0x03653184 MOV X24, X0
	0x03653188 CBZ X0, 0x3653230
	0x0365318C LDR X8, [X24]
	0x03653190 LDP X9, X1, [X8 + 0x198]
	0x03653194 MOV X0, X24
	0x03653198 BLR X9
	0x0365319C MOV W1, W0
	0x036531A0 MOV X0, X19
	0x036531A4 MOV X2, X31
	0x036531A8 BL 0x3233E30
	0x036531AC MOV X22, X31
	0x036531B0 MOVZ W23, 0xD
	0x036531B4 ADRP X10, 0xAA0000
	0x036531B8 LDR X8, [X24]
	0x036531BC LDR X10, [X10 + 0xE00]
	0x036531C0 LDRH W9, [X8 + 0x12E]
	0x036531C4 LDR X1, [X10]
	0x036531C8 CBZ X9, 0x36531EC
	0x036531CC LDR X10, [X8 + 0xB0]
	0x036531D0 ADD X10, X10, 0x8
	0x036531D4 LDUR X11, [X10 - 0x8]
	0x036531D8 CMP X11, X1
	0x036531DC B.EQ 0x3653208
	0x036531E0 SUBS X9, X9, 0x1
	0x036531E4 ADD X10, X10, 0x10
	0x036531E8 B.NE 0x36531D4
	0x036531EC MOV X0, X24
	0x036531F0 MOV W2, W31
	0x036531F4 BL 0x1C5C788
	0x036531F8 B 0x3653214
	0x036531FC LDR X8, [X20]
	0x03653200 MOV X0, X20
	0x03653204 B 0x36534F4
	0x03653208 LDRSW X9, [X10]
	0x0365320C ADD X8, X8, X9, 0x4, LSL
	0x03653210 ADD X0, X8, 0x138
	0x03653214 LDP X8, X1, [X0]
	0x03653218 MOV X0, X24
	0x0365321C BLR X8
	0x03653220 CBNZ X22, 0x365353C
	0x03653224 CBZ W23, 0x3653230
	0x03653228 CMP W23, 0xD
	0x0365322C B.NE 0x3653510
	0x03653230 MOV X0, X19
	0x03653234 MOV X1, X31
	0x03653238 BL 0x3233888
	0x0365323C LDR X1, [X25]
	0x03653240 MOV X0, X19
	0x03653244 MOV X2, X31
	0x03653248 BL 0x32333E0
	0x0365324C ADRP X8, 0xAE9000
	0x03653250 LDR X8, [X8 + 0xA60]
	0x03653254 LDR X1, [X8]
	0x03653258 MOV X0, X19
	0x0365325C MOV X2, X31
	0x03653260 BL 0x32333E0
	0x03653264 LDR X0, [X21 + 0x10]
	0x03653268 CBZ X0, 0x3653534
	0x0365326C LDR X8, [X0]
	0x03653270 LDP X9, X2, [X8 + 0x188]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xD8E000
	005 Move W8, [X20+1576]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {40}
	011 Move X0, 0xAEA000
	012 Move X0, [X0+2144]
	013 Call 0x1C17CF4
	014 Move X0, 0xAEA000
	015 Move X0, [X0+2152]
	016 Call 0x1C17CF4
	017 Move X0, 0xAEA000
	018 Move X0, [X0+2160]
	019 Call 0x1C17CF4
	020 Move X0, 0xAEA000
	021 Move X0, [X0+2168]
	022 Call 0x1C17CF4
	023 Move X0, 0xAD1000
	024 Move X0, [X0+1480]
	025 Call 0x1C17CF4
	026 Move X0, 0xAEA000
	027 Move X0, [X0+2528]
	028 Call 0x1C17CF4
	029 Move X0, 0xAD1000
	030 Move X0, [X0+1616]
	031 Call 0x1C17CF4
	032 Move X0, 0xAD1000
	033 Move X0, [X0+1904]
	034 Call 0x1C17CF4
	035 Move X0, 0xACF000
	036 Move X0, [X0+552]
	037 Call 0x1C17CF4
	038 Move W8, 1
	039 Move [X20+1576], W8
	040 Compare X19, 0
	041 JumpIfEqual {134}
	042 Move X8, 0xAEA000
	043 Move X8, [X8+2528]
	044 Move X19, [X19+16]
	045 Move X2, X31
	046 Move X1, [X8]
	047 Move X0, X19
	048 Call String.op_Equality, X0, X1
	049 Move TEMP, X0
	050 And TEMP, TEMP, 1
	051 Compare TEMP, 1
	052 JumpIfNotEqual {64}
	053 Move X0, X31
	054 Call X509Pal.get_Instance
	055 Compare X0, 0
	056 JumpIfEqual {134}
	057 Move X1, X31
	058 Call X509PalImpl.get_SupportsLegacyBasicConstraintsExtension, X0
	059 Move X19, X31
	060 Move TEMP, X0
	061 And TEMP, TEMP, 1
	062 Compare TEMP, 1
	063 JumpIfEqual {74}
	064 Move X8, 0xACF000
	065 Move X8, [X8+552]
	066 Move X0, X19
	067 Move X2, X31
	068 Move X1, [X8]
	069 Call String.op_Equality, X0, X1
	070 Move TEMP, X0
	071 And TEMP, TEMP, 1
	072 Compare TEMP, 1
	073 JumpIfNotEqual {80}
	074 Move X8, 0xAEA000
	075 Move X8, [X8+2144]
	076 Move X0, [X8]
	077 Call 0x1C17F10
	078 Move X19, X0
	079 Call X509BasicConstraintsExtension..ctor, X0
	080 Move X8, 0xAD1000
	081 Move X8, [X8+1904]
	082 Move X0, X19
	083 Move X2, X31
	084 Move X1, [X8]
	085 Call String.op_Equality, X0, X1
	086 Move TEMP, X0
	087 And TEMP, TEMP, 1
	088 Compare TEMP, 1
	089 JumpIfNotEqual {96}
	090 Move X8, 0xAEA000
	091 Move X8, [X8+2160]
	092 Move X0, [X8]
	093 Call 0x1C17F10
	094 Move X19, X0
	095 Call X509KeyUsageExtension..ctor, X0
	096 Move X8, 0xAD1000
	097 Move X8, [X8+1480]
	098 Move X0, X19
	099 Move X2, X31
	100 Move X1, [X8]
	101 Call String.op_Equality, X0, X1
	102 Move TEMP, X0
	103 And TEMP, TEMP, 1
	104 Compare TEMP, 1
	105 JumpIfNotEqual {112}
	106 Move X8, 0xAEA000
	107 Move X8, [X8+2152]
	108 Move X0, [X8]
	109 Call 0x1C17F10
	110 Move X19, X0
	111 Call X509EnhancedKeyUsageExtension..ctor, X0
	112 Move X8, 0xAD1000
	113 Move X8, [X8+1616]
	114 Move X0, X19
	115 Move X2, X31
	116 Move X1, [X8]
	117 Call String.op_Equality, X0, X1
	118 Move X19, X31
	119 Move TEMP, X0
	120 And TEMP, TEMP, 1
	121 Compare TEMP, 1
	122 JumpIfNotEqual {129}
	123 Move X8, 0xAEA000
	124 Move X8, [X8+2168]
	125 Move X0, [X8]
	126 Call 0x1C17F10
	127 Move X19, X0
	128 Call X509SubjectKeyIdentifierExtension..ctor, X0
	129 Move X0, X19
	130 Move X20, [X31+16]
	131 Move X19, [X31+24]
	132 Move X30, [X31+32]
	133 Return X0
	134 Call 0x1C17F20

Method: System.Security.Cryptography.X509Certificates.X509Certificate2Impl get_Impl()

Disassembly:
	0x03653024 BL 0x32338A8
	0x03653028 MOV X0, X19
	0x0365302C MOV X1, X31
	0x03653030 BL 0x3233888
	0x03653034 ADRP X8, 0xAE9000
	0x03653038 LDR X8, [X8 + 0xA68]
	0x0365303C MOV X0, X19
	0x03653040 MOV X2, X31
	0x03653044 LDR X1, [X8]
	0x03653048 BL 0x32338A8
	0x0365304C LDR X1, [X25]
	0x03653050 MOV X0, X19
	0x03653054 MOV X2, X31
	0x03653058 BL 0x32333E0
	0x0365305C MOV X0, X20
	0x03653060 BL 0x36526C8
	0x03653064 CBZ X0, 0x3653528
	0x03653068 BL 0x364DE60
	0x0365306C MOV X1, X0
	0x03653070 MOV X0, X19
	0x03653074 MOV X2, X31
	0x03653078 BL 0x32333E0
	0x0365307C MOVZ W1, 0x28
	0x03653080 MOV X0, X19
	0x03653084 MOV X2, X31
	0x03653088 BL 0x3233D30
	0x0365308C MOV X0, X20
	0x03653090 BL 0x36526C8
	0x03653094 CBZ X0, 0x3653528
	0x03653098 LDR X1, [X0 + 0x10]
	0x0365309C MOV X0, X19
	0x036530A0 MOV X2, X31
	0x036530A4 BL 0x32333E0
	0x036530A8 ADRP X8, 0xAA1000
	0x036530AC LDR X8, [X8 + 0x608]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xD8E000
	005 Move W8, [X20+1577]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xAE7000
	012 Move X0, [X0+456]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+1577], W8
	016 Move X8, [X19+16]
	017 Compare X8, 0
	018 JumpIfEqual {26}
	019 Move X9, 0xAE7000
	020 Move X9, [X9+456]
	021 Move X10, [X8]
	022 Move X9, [X9]
	023 Move W12, [X10+304]
	024 Move W11, [X9+304]
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move X19, X31
	027 Move X10, [X10+200]
	028 Add X10, X10, X11
	029 NotImplemented "Instruction LDUR not yet implemented."
	030 NotImplemented "Instruction CMP not yet implemented."
	031 NotImplemented "Instruction CSEL not yet implemented."
	032 Move X0, X19
	033 Move X1, X31
	034 Call X509Helper.ThrowIfContextInvalid, X0
	035 Move X0, X19
	036 Move X20, [X31+16]
	037 Move X19, [X31+24]
	038 Move X30, [X31+32]
	039 Return X0

