Type: System.Security.Cryptography.X509Certificates.X509CertificateCollection

Method: System.Void .ctor()

Disassembly:
	0x03654B94 LDR X19, [X19 + 0xAF0]
	0x03654B98 CBNZ W8, 0x3654BA0

ISIL:
	001 Move X1, X31
	002 Call CollectionBase..ctor, X0
	003 Return 

Method: System.Void .ctor(System.Security.Cryptography.X509Certificates.X509CertificateCollection value)

Disassembly:
	0x03658A18 BL 0x33BDD8C
	0x03658A1C STR X20, [X19 + 0x10]
	0x03658A20 LDR X8, [X21]
	0x03658A24 LDP X22, X21, [X31 + 0x10]
	0x03658A28 LDR X8, [X8 + 0xB8]
	0x03658A2C LDR X8, [X8]
	0x03658A30 STR X8, [X19 + 0x20]
	0x03658A34 LDP X20, X19, [X31 + 0x20]
	0x03658A38 LDR X30, [X31], #0x30
	0x03658A3C RET
	0x03658A40 LDR X0, [X0 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X1
	005 Move X1, X31
	006 Move X20, X0
	007 Call CollectionBase..ctor, X0
	008 Move X0, X20
	009 Move X1, X19
	010 Move X20, [X31+16]
	011 Move X19, [X31+24]
	012 Move X30, [X31+32]

Method: System.Security.Cryptography.X509Certificates.X509Certificate get_Item(System.Int32 index)

Disassembly:
	0x03658B14 ADRP X0, 0xA9D000
	0x03658B18 LDR X0, [X0 + 0x278]
	0x03658B1C BL 0x1C16CF4
	0x03658B20 ADRP X0, 0xAE4000
	0x03658B24 LDR X0, [X0 + 0xC08]
	0x03658B28 BL 0x1C16CF4
	0x03658B2C MOVZ W8, 0x1
	0x03658B30 STRB W8, [X20 + 0x67D]
	0x03658B34 CMP W19, 0x800
	0x03658B38 B.LE 0x3658B70
	0x03658B3C CMP W19, 0x10000
	0x03658B40 B.LE 0x3658B9C
	0x03658B44 CMP W19, 0x40000
	0x03658B48 B.LE 0x3658BDC
	0x03658B4C CMP W19, 0x80000
	0x03658B50 B.EQ 0x3658C34
	0x03658B54 MOVZ W8, 0x2000000
	0x03658B58 CMP W19, W8
	0x03658B5C B.EQ 0x3658C34
	0x03658B60 MOVZ W8, 0x1000000
	0x03658B64 CMP W19, W8
	0x03658B68 B.EQ 0x3658C34
	0x03658B6C B 0x3658C64
	0x03658B70 CMP W19, 0x40
	0x03658B74 B.LE 0x3658BC0
	0x03658B78 CMP W19, 0x100
	0x03658B7C B.LE 0x3658BF0
	0x03658B80 CMP W19, 0x200
	0x03658B84 B.EQ 0x3658C34
	0x03658B88 CMP W19, 0x400
	0x03658B8C B.EQ 0x3658C34
	0x03658B90 CMP W19, 0x800
	0x03658B94 B.EQ 0x3658C34
	0x03658B98 B 0x3658C64
	0x03658B9C CMP W19, 0x2000
	0x03658BA0 B.LE 0x3658C04
	0x03658BA4 CMP W19, 0x4000
	0x03658BA8 B.EQ 0x3658C34

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xD89000
	006 Move W8, [X21+1602]
	007 Move W19, W1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xACC000
	014 Move X0, [X0+2472]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+1602], W8
	018 Move X0, [X20+16]
	019 Compare X0, 0
	020 JumpIfEqual {45}
	021 Move X8, [X0]
	022 Move W1, W19
	023 Move X9, [X8+744]
	024 Move X2, [X8+752]
	025 NotImplemented "Instruction BLR not yet implemented."
	026 Compare X0, 0
	027 JumpIfEqual {39}
	028 Move X9, 0xACC000
	029 Move X9, [X9+2472]
	030 Move X8, [X0]
	031 Move X1, [X9]
	032 Move W10, [X8+304]
	033 Move W9, [X1+304]
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Move X8, [X8+200]
	036 Add X8, X8, X9
	037 NotImplemented "Instruction LDUR not yet implemented."
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Move X20, [X31+16]
	040 Move X19, [X31+24]
	041 Move X30, [X31+32]
	042 Move X21, [X31+40]
	043 Return X0
	044 Call 0x1C181E0
	045 Call 0x1C17F20

Method: System.Void AddRange(System.Security.Cryptography.X509Certificates.X509CertificateCollection value)

Disassembly:
	0x03658A44 RET
	0x03658A48 LDR X0, [X0 + 0x18]
	0x03658A4C RET
	0x03658A50 LDR W0, [X0 + 0x28]
	0x03658A54 RET
	0x03658A58 STR W1, [X0 + 0x28]
	0x03658A5C RET
	0x03658A60 MOV W0, W31
	0x03658A64 MOVZ W8, 0x1
	0x03658A68 MOVZ W9, 0x20
	0x03658A6C BICS W31, W8, W1, 0x0
	0x03658A70 CINC W0, W0, EQ
	0x03658A74 SUBS W9, W9, 0x1
	0x03658A78 UBFM W8, W8, 0x1F, 0x1E
	0x03658A7C B.NE 0x3658A6C
	0x03658A80 RET
	0x03658A84 STP X30, X21, [X31 - 0x20]!
	0x03658A88 STP X20, X19, [X31 + 0x10]
	0x03658A8C ANDS W31, W4, W3, 0x0
	0x03658A90 B.EQ 0x3658AE4
	0x03658A94 MOV X20, X1
	0x03658A98 CBZ X1, 0x3658AF4
	0x03658A9C LDRSW X8, [X2]
	0x03658AA0 LDR W9, [X20 + 0x18]
	0x03658AA4 MOV X19, X2
	0x03658AA8 CMP W8, W9
	0x03658AAC B.CS 0x3658AF0
	0x03658AB0 ADD X8, X20, X8, 0x4, LSL
	0x03658AB4 STR W4, [X8 + 0x20]
	0x03658AB8 LDRSW X21, [X19]
	0x03658ABC MOV W0, W4
	0x03658AC0 BL 0x3658AF8
	0x03658AC4 LDR W8, [X20 + 0x18]
	0x03658AC8 CMP W21, W8
	0x03658ACC B.CS 0x3658AF0
	0x03658AD0 ADD X8, X20, X21, 0x4, LSL
	0x03658AD4 STR X0, [X8 + 0x28]
	0x03658AD8 LDR W8, [X19]
	0x03658ADC ADD W8, W8, 0x1
	0x03658AE0 STR W8, [X19]
	0x03658AE4 LDP X20, X19, [X31 + 0x10]
	0x03658AE8 LDP X30, X21, [X31], #0x20
	0x03658AEC RET
	0x03658AF0 BL 0x1C16F28
	0x03658AF4 BL 0x1C16F20
	0x03658AF8 SUB X31, X31, 0x40
	0x03658AFC STR X30, [X31 + 0x20]
	0x03658B00 STP X20, X19, [X31 + 0x30]
	0x03658B04 ADRP X20, 0xD88000
	0x03658B08 LDRB W8, [X20 + 0x67D]
	0x03658B0C MOV W19, W0
	0x03658B10 TBNZ X8, 0x0, 0x3658B34

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Compare X1, 0
	007 JumpIfEqual {42}
	008 Move X20, X0
	009 Move X0, [X1+16]
	010 Move X19, X1
	011 Compare X0, 0
	012 JumpIfEqual {35}
	013 Move W21, W31
	014 Move X8, [X0]
	015 Move X9, [X8+664]
	016 Move X1, [X8+672]
	017 NotImplemented "Instruction BLR not yet implemented."
	018 NotImplemented "Instruction CMP not yet implemented."
	019 Move X22, [X20+16]
	020 Move X0, X19
	021 Move W1, W21
	022 Call X509CertificateCollection.get_Item, X0, X1
	023 Compare X22, 0
	024 JumpIfEqual {35}
	025 Move X8, [X22]
	026 Move X1, X0
	027 Move X0, X22
	028 Move X9, [X8+776]
	029 Move X2, [X8+784]
	030 NotImplemented "Instruction BLR not yet implemented."
	031 Move X0, [X19+16]
	032 Add W21, W21, 1
	033 Compare X0, 0
	034 JumpIfNotEqual {14}
	035 Call 0x1C17F20
	036 Move X20, [X31+32]
	037 Move X19, [X31+40]
	038 Move X22, [X31+16]
	039 Move X21, [X31+24]
	040 Move X30, [X31+48]
	041 Return 
	042 Move X0, 0xAA1000
	043 Move X0, [X0+1320]
	044 Call 0x1C17D08
	045 Call 0x1C17F10
	046 Move X19, X0
	047 Move X0, 0xAA6000
	048 Move X0, [X0+3784]
	049 Call 0x1C17D08
	050 Move X1, X0
	051 Move X0, X19
	052 Move X2, X31
	053 Call ArgumentNullException..ctor, X0, X1
	054 Move X0, 0xAE5000
	055 Move X0, [X0+2984]
	056 Call 0x1C17D08
	057 Move X1, X0
	058 Move X0, X19
	059 Call 0x1C17DEC

Method: System.Security.Cryptography.X509Certificates.X509CertificateCollection/X509CertificateEnumerator GetEnumerator()

Disassembly:
	0x03658BAC CMP W19, 0x8000
	0x03658BB0 B.EQ 0x3658C34
	0x03658BB4 CMP W19, 0x10000
	0x03658BB8 B.EQ 0x3658C34
	0x03658BBC B 0x3658C64
	0x03658BC0 CMP W19, 0x10
	0x03658BC4 B.LE 0x3658C18
	0x03658BC8 CMP W19, 0x20
	0x03658BCC B.EQ 0x3658C34
	0x03658BD0 CMP W19, 0x40
	0x03658BD4 B.EQ 0x3658C34
	0x03658BD8 B 0x3658C64
	0x03658BDC CMP W19, 0x20000
	0x03658BE0 B.EQ 0x3658C34
	0x03658BE4 CMP W19, 0x40000
	0x03658BE8 B.EQ 0x3658C34
	0x03658BEC B 0x3658C64
	0x03658BF0 CMP W19, 0x80
	0x03658BF4 B.EQ 0x3658C34
	0x03658BF8 CMP W19, 0x100
	0x03658BFC B.EQ 0x3658C34
	0x03658C00 B 0x3658C64

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xD89000
	006 Move X21, 0xAE5000
	007 Move W8, [X20+1603]
	008 Move X21, [X21+2992]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xAE5000
	015 Move X0, [X0+2992]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1603], W8
	019 Move X0, [X21]
	020 Call 0x1C17F10
	021 Move X1, X19
	022 Move X20, X0
	023 Call X509CertificateEnumerator..ctor, X0, X1
	024 Move X0, X20
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Return X0

Method: System.Int32 GetHashCode()

Disassembly:
	0x03658CB8 LDR W9, [X19 + 0x28]
	0x03658CBC LDR X8, [X8 + 0xC10]
	0x03658CC0 CBZ W9, 0x3658EB0
	0x03658CC4 MOV W1, W31
	0x03658CC8 MOVZ W10, 0x1
	0x03658CCC MOVZ W11, 0x20
	0x03658CD0 BICS W31, W10, W9, 0x0
	0x03658CD4 CINC W1, W1, EQ

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+16]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move X8, [X0]
	006 Move X2, [X8+344]
	007 Move X1, [X8+352]
	008 Move X30, [X31+16]
	009 CallNoReturn X2
	010 Call 0x1C17F20

