Type: System.Security.Cryptography.X509Certificates.X509Extension

Method: System.Void .ctor()

Disassembly:
	0x03651EA4 CMP W23, 0x6
	0x03651EA8 B.EQ 0x3651EB0

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Void .ctor(System.String oid, System.Byte[] rawData, System.Boolean critical)

Disassembly:
	0x0365E958 B.NE 0x365E964
	0x0365E95C MOV X0, X31
	0x0365E960 B 0x31F8934
	0x0365E964 MOV X0, X31
	0x0365E968 B 0x31F89FC
	0x0365E96C LDR X0, [X0 + 0x30]
	0x0365E970 RET
	0x0365E974 MOV X8, X0
	0x0365E978 LDR X0, [X0 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X0
	005 And W20, W3, 1
	006 Call AsnEncodedData..ctor, X0, X1, X2
	007 Move [X19+32], W20
	008 Move X20, [X31+16]
	009 Move X19, [X31+24]
	010 Move X30, [X31+32]
	011 Return 

Method: System.Boolean get_Critical()

Disassembly:
	0x0365E97C STR X31, [X8 + 0x30]
	0x0365E980 CBZ X0, 0x365E98C

ISIL:
	001 Move W0, [X0+32]
	002 Return X0

Method: System.Void set_Critical(System.Boolean value)

Disassembly:
	0x0365E984 MOV X1, X31
	0x0365E988 B 0x3352028
	0x0365E98C RET

ISIL:
	001 And W8, W1, 1
	002 Move [X0+32], W8
	003 Return 

Method: System.Void CopyFrom(System.Security.Cryptography.AsnEncodedData asnEncodedData)

Disassembly:
	0x0365E990 STP X30, X21, [X31 - 0x20]!
	0x0365E994 STP X20, X19, [X31 + 0x10]
	0x0365E998 ADRP X21, 0xD82000
	0x0365E99C LDRB W8, [X21 + 0x6A5]
	0x0365E9A0 MOV X20, X1
	0x0365E9A4 MOV X19, X0
	0x0365E9A8 TBNZ X8, 0x0, 0x365E9CC
	0x0365E9AC ADRP X0, 0xAC2000
	0x0365E9B0 LDR X0, [X0 + 0xB98]
	0x0365E9B4 BL 0x1C16CF4
	0x0365E9B8 ADRP X0, 0xA97000
	0x0365E9BC LDR X0, [X0 + 0x278]
	0x0365E9C0 BL 0x1C16CF4
	0x0365E9C4 MOVZ W8, 0x1
	0x0365E9C8 STRB W8, [X21 + 0x6A5]
	0x0365E9CC CBZ X20, 0x365EAB0
	0x0365E9D0 LDR X8, [X20 + 0x18]
	0x0365E9D4 CBZ X8, 0x365EAB0
	0x0365E9D8 ADRP X9, 0xA97000
	0x0365E9DC LDR X9, [X9 + 0x278]
	0x0365E9E0 LDR X9, [X9]
	0x0365E9E4 LDR X9, [X9 + 0xB8]
	0x0365E9E8 LDR X9, [X9]
	0x0365E9EC STR X9, [X19 + 0x30]
	0x0365E9F0 CBZ W8, 0x365EA68
	0x0365E9F4 LDRB W9, [X20 + 0x20]
	0x0365E9F8 CMP W9, 0x4
	0x0365E9FC B.NE 0x365EA10
	0x0365EA00 CMP W8, 0x2
	0x0365EA04 B.NE 0x365EA18
	0x0365EA08 MOVZ W0, 0x4
	0x0365EA0C B 0x365EAB4
	0x0365EA10 MOVZ W0, 0x2
	0x0365EA14 B 0x365EAB4
	0x0365EA18 CMP W8, 0x3
	0x0365EA1C B.LT 0x365EA60
	0x0365EA20 ADRP X8, 0xAC2000
	0x0365EA24 LDR X8, [X8 + 0xB98]
	0x0365EA28 LDR X0, [X8]
	0x0365EA2C BL 0x1C16F10
	0x0365EA30 MOV X21, X0
	0x0365EA34 MOV X1, X20
	0x0365EA38 MOV X2, X31
	0x0365EA3C BL 0x31E7A44
	0x0365EA40 CBZ X21, 0x365EA6C
	0x0365EA44 MOV X0, X21
	0x0365EA48 MOV X1, X31
	0x0365EA4C BL 0x31E7D00
	0x0365EA50 MOV X8, X0
	0x0365EA54 MOV W0, W31
	0x0365EA58 STR X8, [X19 + 0x28]
	0x0365EA5C B 0x365EAB4
	0x0365EA60 MOVZ W0, 0x3
	0x0365EA64 B 0x365EAB4
	0x0365EA68 BL 0x1C16F28
	0x0365EA6C BL 0x1C16F20
	0x0365EA70 B 0x365EA78
	0x0365EA74 B 0x365EA78
	0x0365EA78 MOV X19, X0
	0x0365EA7C CMP W1, 0x1
	0x0365EA80 B.NE 0x365EAE8
	0x0365EA84 MOV X0, X19
	0x0365EA88 BL 0x3EB1AD0
	0x0365EA8C MOV X19, X0
	0x0365EA90 ADRP X0, 0xA9B000
	0x0365EA94 LDR X0, [X0 + 0xCC0]
	0x0365EA98 BL 0x1C16D08
	0x0365EA9C LDR X8, [X19]
	0x0365EAA0 LDR X1, [X8]
	0x0365EAA4 BL 0x1C17270
	0x0365EAA8 TBZ X0, 0x0, 0x365EAC0
	0x0365EAAC BL 0x3EB1AE0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xD83000
	006 Move W8, [X21+1670]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xADC000
	014 Move X0, [X0+3880]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+1670], W8
	018 Compare X19, 0
	019 JumpIfEqual {61}
	020 Move X8, 0xADC000
	021 Move X8, [X8+3880]
	022 Move X9, [X19]
	023 Move X8, [X8]
	024 Move W11, [X9+304]
	025 Move W10, [X8+304]
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move X9, [X9+200]
	028 Add X9, X9, X10
	029 NotImplemented "Instruction LDUR not yet implemented."
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move X0, X20
	032 Move X1, X19
	033 Call AsnEncodedData.CopyFrom, X0, X1
	034 Move W8, [X19+32]
	035 Move [X20+32], W8
	036 Move X20, [X31+16]
	037 Move X19, [X31+24]
	038 Move X30, [X31+32]
	039 Move X21, [X31+40]
	040 Return 
	041 Move X0, 0xADF000
	042 Move X0, [X0+3384]
	043 Call 0x1C17D08
	044 Move X1, X31
	045 Call Locale.GetText, X0
	046 Move X19, X0
	047 Move X0, 0xA9E000
	048 Move X0, [X0+1400]
	049 Call 0x1C17D08
	050 Call 0x1C17F10
	051 Move X1, X19
	052 Move X2, X31
	053 Move X20, X0
	054 Call ArgumentException..ctor, X0, X1
	055 Move X0, 0xADF000
	056 Move X0, [X0+3392]
	057 Call 0x1C17D08
	058 Move X1, X0
	059 Move X0, X20
	060 Call 0x1C17DEC
	061 Move X0, 0xA9B000
	062 Move X0, [X0+1320]
	063 Call 0x1C17D08
	064 Call 0x1C17F10
	065 Move X19, X0
	066 Move X0, 0xADF000
	067 Move X0, [X0+3352]
	068 Call 0x1C17D08
	069 Move X1, X0
	070 Move X0, X19
	071 Move X2, X31
	072 Call ArgumentNullException..ctor, X0, X1
	073 Move X0, 0xADF000
	074 Move X0, [X0+3392]
	075 Call 0x1C17D08
	076 Move X1, X0
	077 Move X0, X19
	078 Call 0x1C17DEC

Method: System.String FormatUnkownData(System.Byte[] data)

Disassembly:
	0x03652868 MOV X2, X0
	0x0365286C MOV X0, X19
	0x03652870 MOV X1, X20
	0x03652874 MOV X3, X31
	0x03652878 BL 0x330E16C
	0x0365287C ADRP X0, 0xAEA000
	0x03652880 LDR X0, [X0 + 0xA10]
	0x03652884 BL 0x1C16D08
	0x03652888 MOV X1, X0
	0x0365288C MOV X0, X19
	0x03652890 BL 0x1C16DEC
	0x03652894 BL 0x1C16F20
	0x03652898 STR X30, [X31 - 0x20]!
	0x0365289C STP X20, X19, [X31 + 0x10]
	0x036528A0 MOV W20, W2
	0x036528A4 MOV W19, W1
	0x036528A8 BL 0x3652024
	0x036528AC CBZ X0, 0x36528D0
	0x036528B0 LDR X8, [X0]
	0x036528B4 AND W2, W20, 0x1
	0x036528B8 MOV W1, W19
	0x036528BC LDP X20, X19, [X31 + 0x10]
	0x036528C0 LDR X4, [X8 + 0x308]
	0x036528C4 LDR X3, [X8 + 0x310]
	0x036528C8 LDR X30, [X31], #0x20
	0x036528CC BR X4
	0x036528D0 BL 0x1C16F20
	0x036528D4 MOVZ W1, 0x1
	0x036528D8 MOV X2, X31
	0x036528DC B 0x326BBD4
	0x036528E0 SUB X31, X31, 0x50
	0x036528E4 STP X30, X25, [X31 + 0x10]
	0x036528E8 STP X24, X23, [X31 + 0x20]
	0x036528EC STP X22, X21, [X31 + 0x30]
	0x036528F0 STP X20, X19, [X31 + 0x40]
	0x036528F4 ADRP X21, 0xD8E000
	0x036528F8 LDRB W8, [X21 + 0x627]
	0x036528FC MOV W19, W1
	0x03652900 MOV X20, X0
	0x03652904 TBNZ X8, 0x0, 0x3652A3C
	0x03652908 ADRP X0, 0xAA1000
	0x0365290C LDR X0, [X0 + 0xE00]
	0x03652910 BL 0x1C16CF4
	0x03652914 ADRP X0, 0xAA1000
	0x03652918 LDR X0, [X0 + 0x8F0]
	0x0365291C BL 0x1C16CF4
	0x03652920 ADRP X0, 0xAEA000
	0x03652924 LDR X0, [X0 + 0xA18]
	0x03652928 BL 0x1C16CF4
	0x0365292C ADRP X0, 0xAEA000
	0x03652930 LDR X0, [X0 + 0xA20]
	0x03652934 BL 0x1C16CF4
	0x03652938 ADRP X0, 0xAEA000
	0x0365293C LDR X0, [X0 + 0xA28]
	0x03652940 BL 0x1C16CF4
	0x03652944 ADRP X0, 0xAEA000
	0x03652948 LDR X0, [X0 + 0xA30]
	0x0365294C BL 0x1C16CF4
	0x03652950 ADRP X0, 0xAEA000
	0x03652954 LDR X0, [X0 + 0xA38]
	0x03652958 BL 0x1C16CF4
	0x0365295C ADRP X0, 0xAEA000
	0x03652960 LDR X0, [X0 + 0xA40]
	0x03652964 BL 0x1C16CF4
	0x03652968 ADRP X0, 0xAEA000
	0x0365296C LDR X0, [X0 + 0xA48]
	0x03652970 BL 0x1C16CF4
	0x03652974 ADRP X0, 0xAEA000
	0x03652978 LDR X0, [X0 + 0xA50]
	0x0365297C BL 0x1C16CF4
	0x03652980 ADRP X0, 0xAEA000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0xD8F000
	008 Move W8, [X20+1671]
	009 Move X19, X1
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {25}
	014 Move X0, 0xAA2000
	015 Move X0, [X0+2288]
	016 Call 0x1C17CF4
	017 Move X0, 0xAA4000
	018 Move X0, [X0+632]
	019 Call 0x1C17CF4
	020 Move X0, 0xACF000
	021 Move X0, [X0+2984]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X20+1671], W8
	025 Compare X19, 0
	026 JumpIfEqual {58}
	027 Move X8, [X19+24]
	028 Compare X8, 0
	029 JumpIfEqual {58}
	030 Move X8, 0xAA2000
	031 Move X8, [X8+2288]
	032 Move X0, [X8]
	033 Call 0x1C17F10
	034 Move X1, X31
	035 Move X20, X0
	036 Call StringBuilder..ctor, X0
	037 Move X8, [X19+24]
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Move X23, 0xACF000
	040 Move X23, [X23+2984]
	041 Move X21, X31
	042 And X8, X8, 0
	043 Add X22, X19, 32
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Move X1, [X23]
	046 Add X0, X22, X21
	047 Move X2, X31
	048 Call Byte.ToString, X0, X1
	049 Compare X20, 0
	050 JumpIfEqual {84}
	051 Move X1, X0
	052 Move X0, X20
	053 Move X2, X31
	054 Call StringBuilder.Append, X0, X1
	055 Move W8, [X19+24]
	056 Add X21, X21, 1
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Move X8, 0xAA4000
	059 Move X8, [X8+632]
	060 Move X20, [X31+32]
	061 Move X19, [X31+40]
	062 Move X22, [X31+16]
	063 Move X21, [X31+24]
	064 Move X8, [X8]
	065 Move X8, [X8+184]
	066 Move X0, [X8]
	067 Move X30, [X31+48]
	068 Move X23, [X31+56]
	069 Return X0
	070 Compare X20, 0
	071 JumpIfEqual {84}
	072 Move X8, [X20]
	073 Move X0, X20
	074 Move X20, [X31+32]
	075 Move X19, [X31+40]
	076 Move X22, [X31+16]
	077 Move X21, [X31+24]
	078 Move X2, [X8+360]
	079 Move X1, [X8+368]
	080 Move X30, [X31+48]
	081 Move X23, [X31+56]
	082 CallNoReturn X2
	083 Call 0x1C17F28
	084 Call 0x1C17F20

