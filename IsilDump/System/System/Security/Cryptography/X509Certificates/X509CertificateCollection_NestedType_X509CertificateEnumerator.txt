Type: System.Security.Cryptography.X509Certificates.X509CertificateCollection/X509CertificateEnumerator

Method: System.Void .ctor(System.Security.Cryptography.X509Certificates.X509CertificateCollection mappings)

Disassembly:
	0x03658C04 CMP W19, 0x1000
	0x03658C08 B.EQ 0x3658C34
	0x03658C0C CMP W19, 0x2000
	0x03658C10 B.EQ 0x3658C34
	0x03658C14 B 0x3658C64
	0x03658C18 B.HI 0x3658C64
	0x03658C1C MOVZ W8, 0x1
	0x03658C20 MOVZ W9, 0x116
	0x03658C24 LSLV W8, W8, W19
	0x03658C28 MOVK W9, 0x10000
	0x03658C2C ANDS W31, W8, W9, 0x0
	0x03658C30 B.EQ 0x3658C64
	0x03658C34 ADRP X8, 0xAE4000
	0x03658C38 LDR X8, [X8 + 0xC08]
	0x03658C3C MOVN X9, 0x0
	0x03658C40 ADD X0, X31, 0x8
	0x03658C44 MOV X1, X31
	0x03658C48 LDR X8, [X8]
	0x03658C4C STR W19, [X31 + 0x18]
	0x03658C50 STP X8, X9, [X31 + 0x8]
	0x03658C54 BL 0x33B162C
	0x03658C58 MOV X1, X31
	0x03658C5C BL 0x320A160
	0x03658C60 B 0x3658C78
	0x03658C64 ADRP X8, 0xA9D000
	0x03658C68 LDR X8, [X8 + 0x278]
	0x03658C6C LDR X8, [X8]
	0x03658C70 LDR X8, [X8 + 0xB8]
	0x03658C74 LDR X0, [X8]
	0x03658C78 LDP X20, X19, [X31 + 0x30]
	0x03658C7C LDR X30, [X31 + 0x20]
	0x03658C80 ADD X31, X31, 0x40
	0x03658C84 RET
	0x03658C88 STR X30, [X31 - 0x20]!
	0x03658C8C STP X20, X19, [X31 + 0x10]
	0x03658C90 ADRP X20, 0xD88000
	0x03658C94 LDRB W8, [X20 + 0x655]
	0x03658C98 MOV X19, X0
	0x03658C9C TBNZ X8, 0x0, 0x3658CB4
	0x03658CA0 ADRP X0, 0xAE4000
	0x03658CA4 LDR X0, [X0 + 0xC10]
	0x03658CA8 BL 0x1C16CF4
	0x03658CAC MOVZ W8, 0x1
	0x03658CB0 STRB W8, [X20 + 0x655]
	0x03658CB4 ADRP X8, 0xAE4000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xD89000
	006 Move W8, [X21+1604]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xAA4000
	014 Move X0, [X0+3512]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+1604], W8
	018 Move X0, X19
	019 Move X1, X31
	020 Call Object..ctor, X0
	021 Compare X20, 0
	022 JumpIfEqual {52}
	023 Move X10, 0xAA4000
	024 Move X8, [X20]
	025 Move X10, [X10+3512]
	026 NotImplemented "Instruction LDRH not yet implemented."
	027 Move X1, [X10]
	028 Compare X9, 0
	029 JumpIfEqual {36}
	030 Move X10, [X8+176]
	031 Add X10, X10, 8
	032 NotImplemented "Instruction LDUR not yet implemented."
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Subtract X9, X9, 1
	035 Add X10, X10, 16
	036 Move X0, X20
	037 Move W2, W31
	038 Call 0x1C5D788
	039 NotImplemented "Instruction LDRSW not yet implemented."
	040 Add X8, X8, X9
	041 Add X0, X8, 312
	042 Move X8, [X0]
	043 Move X1, [X0+8]
	044 Move X0, X20
	045 NotImplemented "Instruction BLR not yet implemented."
	046 Move [X19+16], X0
	047 Move X20, [X31+16]
	048 Move X19, [X31+24]
	049 Move X30, [X31+32]
	050 Move X21, [X31+40]
	051 Return 
	052 Call 0x1C17F20

Method: System.Security.Cryptography.X509Certificates.X509Certificate get_Current()

Disassembly:
	0x03658CD8 SUBS W11, W11, 0x1
	0x03658CDC UBFM W10, W10, 0x1F, 0x1E
	0x03658CE0 B.NE 0x3658CD0
	0x03658CE4 LDR X0, [X8]
	0x03658CE8 BL 0x1C16D6C
	0x03658CEC STR X0, [X19 + 0x18]
	0x03658CF0 STR W31, [X31 + 0xC]
	0x03658CF4 LDR W3, [X19 + 0x28]
	0x03658CF8 ADD X2, X31, 0xC
	0x03658CFC MOVZ W4, 0x20
	0x03658D00 MOV X1, X0
	0x03658D04 BL 0x3658A84
	0x03658D08 LDR X1, [X19 + 0x18]
	0x03658D0C LDR W3, [X19 + 0x28]
	0x03658D10 ADD X2, X31, 0xC
	0x03658D14 MOVZ W4, 0x1
	0x03658D18 BL 0x3658A84
	0x03658D1C LDR X1, [X19 + 0x18]
	0x03658D20 LDR W3, [X19 + 0x28]
	0x03658D24 ADD X2, X31, 0xC
	0x03658D28 MOVZ W4, 0x2
	0x03658D2C BL 0x3658A84
	0x03658D30 LDR X1, [X19 + 0x18]
	0x03658D34 LDR W3, [X19 + 0x28]
	0x03658D38 ADD X2, X31, 0xC
	0x03658D3C MOVZ W4, 0x4
	0x03658D40 BL 0x3658A84
	0x03658D44 LDR X1, [X19 + 0x18]
	0x03658D48 LDR W3, [X19 + 0x28]
	0x03658D4C ADD X2, X31, 0xC
	0x03658D50 MOVZ W4, 0x8
	0x03658D54 BL 0x3658A84
	0x03658D58 LDR X1, [X19 + 0x18]
	0x03658D5C LDR W3, [X19 + 0x28]
	0x03658D60 ADD X2, X31, 0xC
	0x03658D64 MOVZ W4, 0x10
	0x03658D68 BL 0x3658A84
	0x03658D6C LDR X1, [X19 + 0x18]
	0x03658D70 LDR W3, [X19 + 0x28]
	0x03658D74 ADD X2, X31, 0xC
	0x03658D78 MOVZ W4, 0x40
	0x03658D7C BL 0x3658A84
	0x03658D80 LDR X1, [X19 + 0x18]
	0x03658D84 LDR W3, [X19 + 0x28]
	0x03658D88 ADD X2, X31, 0xC
	0x03658D8C MOVZ W4, 0x80
	0x03658D90 BL 0x3658A84
	0x03658D94 LDR X1, [X19 + 0x18]
	0x03658D98 LDR W3, [X19 + 0x28]
	0x03658D9C ADD X2, X31, 0xC
	0x03658DA0 MOVZ W4, 0x100
	0x03658DA4 BL 0x3658A84
	0x03658DA8 LDR X1, [X19 + 0x18]
	0x03658DAC LDR W3, [X19 + 0x28]
	0x03658DB0 ADD X2, X31, 0xC
	0x03658DB4 MOVZ W4, 0x200
	0x03658DB8 BL 0x3658A84
	0x03658DBC LDR X1, [X19 + 0x18]
	0x03658DC0 LDR W3, [X19 + 0x28]
	0x03658DC4 ADD X2, X31, 0xC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xD89000
	005 Move W8, [X20+1605]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0xA9C000
	012 Move X0, [X0+3608]
	013 Call 0x1C17CF4
	014 Move X0, 0xACC000
	015 Move X0, [X0+2472]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1605], W8
	019 Move X19, [X19+16]
	020 Compare X19, 0
	021 JumpIfEqual {64}
	022 Move X10, 0xA9C000
	023 Move X8, [X19]
	024 Move X10, [X10+3608]
	025 NotImplemented "Instruction LDRH not yet implemented."
	026 Move X1, [X10]
	027 Compare X9, 0
	028 JumpIfEqual {35}
	029 Move X10, [X8+176]
	030 Add X10, X10, 8
	031 NotImplemented "Instruction LDUR not yet implemented."
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Subtract X9, X9, 1
	034 Add X10, X10, 16
	035 Move W2, 1
	036 Move X0, X19
	037 Call 0x1C5D788
	038 Move W9, [X10]
	039 Add W9, W9, 1
	040 Add X8, X8, W9
	041 Add X0, X8, 312
	042 Move X8, [X0]
	043 Move X1, [X0+8]
	044 Move X0, X19
	045 NotImplemented "Instruction BLR not yet implemented."
	046 Compare X0, 0
	047 JumpIfEqual {59}
	048 Move X9, 0xACC000
	049 Move X9, [X9+2472]
	050 Move X8, [X0]
	051 Move X1, [X9]
	052 Move W10, [X8+304]
	053 Move W9, [X1+304]
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Move X8, [X8+200]
	056 Add X8, X8, X9
	057 NotImplemented "Instruction LDUR not yet implemented."
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Move X20, [X31+16]
	060 Move X19, [X31+24]
	061 Move X30, [X31+32]
	062 Return X0
	063 Call 0x1C181E0
	064 Call 0x1C17F20

Method: System.Object System.Collections.IEnumerator.get_Current()

Disassembly:
	0x03658DC8 MOVZ W4, 0x400
	0x03658DCC BL 0x3658A84
	0x03658DD0 LDR X1, [X19 + 0x18]
	0x03658DD4 LDR W3, [X19 + 0x28]
	0x03658DD8 ADD X2, X31, 0xC
	0x03658DDC MOVZ W4, 0x800
	0x03658DE0 BL 0x3658A84
	0x03658DE4 LDR X1, [X19 + 0x18]
	0x03658DE8 LDR W3, [X19 + 0x28]
	0x03658DEC ADD X2, X31, 0xC
	0x03658DF0 MOVZ W4, 0x1000
	0x03658DF4 BL 0x3658A84
	0x03658DF8 LDR X1, [X19 + 0x18]
	0x03658DFC LDR W3, [X19 + 0x28]
	0x03658E00 ADD X2, X31, 0xC
	0x03658E04 MOVZ W4, 0x2000
	0x03658E08 BL 0x3658A84
	0x03658E0C LDR X1, [X19 + 0x18]
	0x03658E10 LDR W3, [X19 + 0x28]
	0x03658E14 ADD X2, X31, 0xC
	0x03658E18 MOVZ W4, 0x4000
	0x03658E1C BL 0x3658A84
	0x03658E20 LDR X1, [X19 + 0x18]
	0x03658E24 LDR W3, [X19 + 0x28]
	0x03658E28 ADD X2, X31, 0xC
	0x03658E2C MOVZ W4, 0x8000
	0x03658E30 BL 0x3658A84
	0x03658E34 LDR X1, [X19 + 0x18]
	0x03658E38 LDR W3, [X19 + 0x28]
	0x03658E3C ADD X2, X31, 0xC
	0x03658E40 MOVZ W4, 0x10000
	0x03658E44 BL 0x3658A84
	0x03658E48 LDR X1, [X19 + 0x18]
	0x03658E4C LDR W3, [X19 + 0x28]
	0x03658E50 ADD X2, X31, 0xC
	0x03658E54 MOVZ W4, 0x20000
	0x03658E58 BL 0x3658A84
	0x03658E5C LDR X1, [X19 + 0x18]
	0x03658E60 LDR W3, [X19 + 0x28]
	0x03658E64 ADD X2, X31, 0xC
	0x03658E68 MOVZ W4, 0x40000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xD89000
	005 Move W8, [X20+1606]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xA9C000
	012 Move X0, [X0+3608]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+1606], W8
	016 Move X19, [X19+16]
	017 Compare X19, 0
	018 JumpIfEqual {46}
	019 Move X10, 0xA9C000
	020 Move X8, [X19]
	021 Move X10, [X10+3608]
	022 NotImplemented "Instruction LDRH not yet implemented."
	023 Move X1, [X10]
	024 Compare X9, 0
	025 JumpIfEqual {32}
	026 Move X10, [X8+176]
	027 Add X10, X10, 8
	028 NotImplemented "Instruction LDUR not yet implemented."
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Subtract X9, X9, 1
	031 Add X10, X10, 16
	032 Move W2, 1
	033 Move X0, X19
	034 Call 0x1C5D788
	035 Move W9, [X10]
	036 Add W9, W9, 1
	037 Add X8, X8, W9
	038 Add X0, X8, 312
	039 Move X2, [X0]
	040 Move X1, [X0+8]
	041 Move X0, X19
	042 Move X20, [X31+16]
	043 Move X19, [X31+24]
	044 Move X30, [X31+32]
	045 CallNoReturn X2
	046 Call 0x1C17F20

Method: System.Boolean System.Collections.IEnumerator.MoveNext()

Disassembly:
	0x03658E6C BL 0x3658A84
	0x03658E70 LDR X1, [X19 + 0x18]
	0x03658E74 LDR W3, [X19 + 0x28]
	0x03658E78 ADD X2, X31, 0xC
	0x03658E7C MOVZ W4, 0x80000
	0x03658E80 BL 0x3658A84
	0x03658E84 LDR X1, [X19 + 0x18]
	0x03658E88 LDR W3, [X19 + 0x28]
	0x03658E8C ADD X2, X31, 0xC
	0x03658E90 MOVZ W4, 0x1000000
	0x03658E94 BL 0x3658A84
	0x03658E98 LDR X1, [X19 + 0x18]
	0x03658E9C LDR W3, [X19 + 0x28]
	0x03658EA0 ADD X2, X31, 0xC
	0x03658EA4 MOVZ W4, 0x2000000
	0x03658EA8 BL 0x3658A84
	0x03658EAC B 0x3658EC0
	0x03658EB0 LDR X0, [X8]
	0x03658EB4 MOV W1, W31
	0x03658EB8 BL 0x1C16D6C
	0x03658EBC STR X0, [X19 + 0x18]
	0x03658EC0 LDP X20, X19, [X31 + 0x10]
	0x03658EC4 LDR X30, [X31], #0x20
	0x03658EC8 RET
	0x03658ECC STP X30, X21, [X31 - 0x20]!
	0x03658ED0 STP X20, X19, [X31 + 0x10]
	0x03658ED4 ADRP X21, 0xD88000
	0x03658ED8 ADRP X20, 0xAC8000
	0x03658EDC LDRB W8, [X21 + 0x656]
	0x03658EE0 LDR X20, [X20 + 0xBA0]
	0x03658EE4 MOV X19, X0
	0x03658EE8 TBNZ X8, 0x0, 0x3658F00
	0x03658EEC ADRP X0, 0xAC8000
	0x03658EF0 LDR X0, [X0 + 0xBA0]
	0x03658EF4 BL 0x1C16CF4
	0x03658EF8 MOVZ W8, 0x1
	0x03658EFC STRB W8, [X21 + 0x656]
	0x03658F00 MOV X0, X19
	0x03658F04 MOV X1, X31
	0x03658F08 BL 0x33BDD8C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xD89000
	005 Move W8, [X20+1607]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xA9C000
	012 Move X0, [X0+3608]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+1607], W8
	016 Move X19, [X19+16]
	017 Compare X19, 0
	018 JumpIfEqual {45}
	019 Move X10, 0xA9C000
	020 Move X8, [X19]
	021 Move X10, [X10+3608]
	022 NotImplemented "Instruction LDRH not yet implemented."
	023 Move X1, [X10]
	024 Compare X9, 0
	025 JumpIfEqual {32}
	026 Move X10, [X8+176]
	027 Add X10, X10, 8
	028 NotImplemented "Instruction LDUR not yet implemented."
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Subtract X9, X9, 1
	031 Add X10, X10, 16
	032 Move X0, X19
	033 Move W2, W31
	034 Call 0x1C5D788
	035 NotImplemented "Instruction LDRSW not yet implemented."
	036 Add X8, X8, X9
	037 Add X0, X8, 312
	038 Move X2, [X0]
	039 Move X1, [X0+8]
	040 Move X0, X19
	041 Move X20, [X31+16]
	042 Move X19, [X31+24]
	043 Move X30, [X31+32]
	044 CallNoReturn X2
	045 Call 0x1C17F20

Method: System.Void System.Collections.IEnumerator.Reset()

Disassembly:
	0x03658F0C LDR X0, [X20]
	0x03658F10 BL 0x1C16F10
	0x03658F14 MOV X1, X31
	0x03658F18 MOV X20, X0
	0x03658F1C BL 0x3351F5C
	0x03658F20 STR X20, [X19 + 0x10]
	0x03658F24 LDP X20, X19, [X31 + 0x10]
	0x03658F28 LDP X30, X21, [X31], #0x20
	0x03658F2C RET
	0x03658F30 STR X30, [X31 - 0x10]!
	0x03658F34 LDR X0, [X0 + 0x10]
	0x03658F38 CBZ X0, 0x3658F50
	0x03658F3C LDR X8, [X0]
	0x03658F40 LDR X2, [X8 + 0x298]
	0x03658F44 LDR X1, [X8 + 0x2A0]
	0x03658F48 LDR X30, [X31], #0x10
	0x03658F4C BR X2
	0x03658F50 BL 0x1C16F20
	0x03658F54 STR X30, [X31 - 0x10]!
	0x03658F58 LDR X0, [X0 + 0x10]
	0x03658F5C CBZ X0, 0x3658F74
	0x03658F60 LDR X8, [X0]
	0x03658F64 LDR X2, [X8 + 0x2C8]
	0x03658F68 LDR X1, [X8 + 0x2D0]
	0x03658F6C LDR X30, [X31], #0x10
	0x03658F70 BR X2
	0x03658F74 BL 0x1C16F20
	0x03658F78 STP X30, X21, [X31 - 0x20]!
	0x03658F7C STP X20, X19, [X31 + 0x10]
	0x03658F80 ADRP X21, 0xD88000
	0x03658F84 LDRB W8, [X21 + 0x657]
	0x03658F88 MOV W19, W1
	0x03658F8C MOV X20, X0
	0x03658F90 TBNZ X8, 0x0, 0x3658FA8
	0x03658F94 ADRP X0, 0xAE4000
	0x03658F98 LDR X0, [X0 + 0xC18]
	0x03658F9C BL 0x1C16CF4
	0x03658FA0 MOVZ W8, 0x1
	0x03658FA4 STRB W8, [X21 + 0x657]
	0x03658FA8 LDR X0, [X20 + 0x10]
	0x03658FAC CBZ X0, 0x365900C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xD89000
	005 Move W8, [X20+1608]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xA9C000
	012 Move X0, [X0+3608]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+1608], W8
	016 Move X19, [X19+16]
	017 Compare X19, 0
	018 JumpIfEqual {46}
	019 Move X10, 0xA9C000
	020 Move X8, [X19]
	021 Move X10, [X10+3608]
	022 NotImplemented "Instruction LDRH not yet implemented."
	023 Move X1, [X10]
	024 Compare X9, 0
	025 JumpIfEqual {32}
	026 Move X10, [X8+176]
	027 Add X10, X10, 8
	028 NotImplemented "Instruction LDUR not yet implemented."
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Subtract X9, X9, 1
	031 Add X10, X10, 16
	032 Move W2, 2
	033 Move X0, X19
	034 Call 0x1C5D788
	035 Move W9, [X10]
	036 Add W9, W9, 2
	037 Add X8, X8, W9
	038 Add X0, X8, 312
	039 Move X2, [X0]
	040 Move X1, [X0+8]
	041 Move X0, X19
	042 Move X20, [X31+16]
	043 Move X19, [X31+24]
	044 Move X30, [X31+32]
	045 CallNoReturn X2
	046 Call 0x1C17F20

Method: System.Boolean MoveNext()

Disassembly:
	0x03658FB0 LDR X8, [X0]
	0x03658FB4 MOV W1, W19
	0x03658FB8 LDR X9, [X8 + 0x2E8]
	0x03658FBC LDR X2, [X8 + 0x2F0]
	0x03658FC0 BLR X9
	0x03658FC4 CBZ X0, 0x3658FFC
	0x03658FC8 ADRP X9, 0xAE4000
	0x03658FCC LDR X9, [X9 + 0xC18]
	0x03658FD0 LDR X8, [X0]
	0x03658FD4 LDR X1, [X9]
	0x03658FD8 LDRB W10, [X8 + 0x130]
	0x03658FDC LDRB W9, [X1 + 0x130]
	0x03658FE0 CMP W10, W9
	0x03658FE4 B.CC 0x3659008
	0x03658FE8 LDR X8, [X8 + 0xC8]
	0x03658FEC ADD X8, X8, X9, 0x3, LSL
	0x03658FF0 LDUR X8, [X8 - 0x8]
	0x03658FF4 CMP X8, X1
	0x03658FF8 B.NE 0x3659008
	0x03658FFC LDP X20, X19, [X31 + 0x10]
	0x03659000 LDP X30, X21, [X31], #0x20
	0x03659004 RET
	0x03659008 BL 0x1C171E0
	0x0365900C BL 0x1C16F20
	0x03659010 STR X30, [X31 - 0x10]!
	0x03659014 LDR X0, [X0 + 0x10]
	0x03659018 CBZ X0, 0x3659030
	0x0365901C LDR X8, [X0]
	0x03659020 LDR X2, [X8 + 0x2D8]
	0x03659024 LDR X1, [X8 + 0x2E0]
	0x03659028 LDR X30, [X31], #0x10
	0x0365902C BR X2
	0x03659030 BL 0x1C16F20
	0x03659034 STR X30, [X31 - 0x10]!
	0x03659038 LDR X0, [X0 + 0x10]
	0x0365903C CBZ X0, 0x3659054
	0x03659040 LDR X8, [X0]
	0x03659044 LDR X4, [X8 + 0x368]
	0x03659048 LDR X3, [X8 + 0x370]
	0x0365904C LDR X30, [X31], #0x10

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xD89000
	005 Move W8, [X20+1609]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xA9C000
	012 Move X0, [X0+3608]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+1609], W8
	016 Move X19, [X19+16]
	017 Compare X19, 0
	018 JumpIfEqual {45}
	019 Move X10, 0xA9C000
	020 Move X8, [X19]
	021 Move X10, [X10+3608]
	022 NotImplemented "Instruction LDRH not yet implemented."
	023 Move X1, [X10]
	024 Compare X9, 0
	025 JumpIfEqual {32}
	026 Move X10, [X8+176]
	027 Add X10, X10, 8
	028 NotImplemented "Instruction LDUR not yet implemented."
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Subtract X9, X9, 1
	031 Add X10, X10, 16
	032 Move X0, X19
	033 Move W2, W31
	034 Call 0x1C5D788
	035 NotImplemented "Instruction LDRSW not yet implemented."
	036 Add X8, X8, X9
	037 Add X0, X8, 312
	038 Move X2, [X0]
	039 Move X1, [X0+8]
	040 Move X0, X19
	041 Move X20, [X31+16]
	042 Move X19, [X31+24]
	043 Move X30, [X31+32]
	044 CallNoReturn X2
	045 Call 0x1C17F20

