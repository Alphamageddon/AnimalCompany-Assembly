Type: System.Security.Cryptography.X509Certificates.X509Chain

Method: System.Security.Cryptography.X509Certificates.X509ChainImpl get_Impl()

Disassembly:
	0x03659640 BR X2
	0x03659644 BL 0x1C16F20
	0x03659648 STP X30, X19, [X31 - 0x10]!
	0x0365964C LDR X8, [X0]
	0x03659650 LDP X9, X1, [X8 + 0x188]
	0x03659654 BLR X9
	0x03659658 TBZ X0, 0x0, 0x3659664

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, [X0+16]
	005 Call X509Helper2.ThrowIfContextInvalid, X0
	006 Move X0, [X19+16]
	007 Move X30, [X31+16]
	008 Move X19, [X31+24]
	009 Return X0

Method: System.Void .ctor()

Disassembly:
	0x0365969C LDR X21, [X21 + 0xC30]
	0x036596A0 LDR X19, [X19 + 0xCE0]
	0x036596A4 TBNZ X8, 0x0, 0x36596C8
	0x036596A8 ADRP X0, 0xAC7000
	0x036596AC LDR X0, [X0 + 0xCE0]
	0x036596B0 BL 0x1C16CF4
	0x036596B4 ADRP X0, 0xAE3000
	0x036596B8 LDR X0, [X0 + 0xC30]
	0x036596BC BL 0x1C16CF4

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X1, X31
	004 Move X19, X0
	005 Call Object..ctor, X0
	006 Move W0, W31
	007 Call X509Helper2.CreateChainImpl, X0
	008 Move [X19+16], X0
	009 Move X30, [X31+16]
	010 Move X19, [X31+24]
	011 Return 

Method: System.Void .ctor(System.Boolean useMachineContext)

Disassembly:
	0x036596C0 MOVZ W8, 0x1
	0x036596C4 STRB W8, [X20 + 0x693]
	0x036596C8 LDR X0, [X21]
	0x036596CC MOV X1, X31
	0x036596D0 BL 0x320A160
	0x036596D4 LDR X8, [X19]
	0x036596D8 MOV X19, X0
	0x036596DC MOV X0, X8
	0x036596E0 BL 0x1C16F10
	0x036596E4 MOV X1, X19
	0x036596E8 MOV X2, X31
	0x036596EC MOV X20, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W19, W1
	005 Move X1, X31
	006 Move X20, X0
	007 Call Object..ctor, X0
	008 And W0, W19, 1
	009 Call X509Helper2.CreateChainImpl, X0
	010 Move [X20+16], X0
	011 Move X20, [X31+16]
	012 Move X19, [X31+24]
	013 Move X30, [X31+32]
	014 Return 

Method: System.Void .ctor(System.Security.Cryptography.X509Certificates.X509ChainImpl impl)

Disassembly:
	0x03659748 BL 0x3EB1AD0
	0x0365974C LDR X20, [X0]
	0x03659750 BL 0x3EB1AE0
	0x03659754 MOV X0, X19
	0x03659758 MOV X1, X31
	0x0365975C BL 0x33CB4DC
	0x03659760 CBNZ X20, 0x3659778
	0x03659764 LDP X20, X19, [X31 + 0x10]
	0x03659768 LDP X30, X21, [X31], #0x20
	0x0365976C RET
	0x03659770 MOV X20, X31
	0x03659774 B 0x3659784

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X1
	005 Move X1, X31
	006 Move X20, X0
	007 Call Object..ctor, X0
	008 Move X0, X19
	009 Call X509Helper2.ThrowIfContextInvalid, X0
	010 Move [X20+16], X19
	011 Move X20, [X31+16]
	012 Move X19, [X31+24]
	013 Move X30, [X31+32]
	014 Return 

Method: System.Void .ctor(System.IntPtr chainContext)

Disassembly:
	0x03659778 MOV X0, X20
	0x0365977C BL 0x1C16F18
	0x03659780 MOV X21, X0
	0x03659784 MOV X0, X19
	0x03659788 MOV X1, X31
	0x0365978C BL 0x33CB4DC
	0x03659790 CBNZ X20, 0x365979C
	0x03659794 MOV X0, X21
	0x03659798 BL 0x1D2C690
	0x0365979C MOV X0, X20
	0x036597A0 BL 0x1C16F18
	0x036597A4 BL 0x1990590
	0x036597A8 MOV X1, X31
	0x036597AC B 0x33BDD8C
	0x036597B0 STP X30, X21, [X31 - 0x20]!
	0x036597B4 STP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X1, X31
	004 Call Object..ctor, X0
	005 Move X0, 0xA9B000
	006 Move X0, [X0+2880]
	007 Call 0x1C17D08
	008 Call 0x1C17F10
	009 Move X1, X31
	010 Move X19, X0
	011 Call NotSupportedException..ctor, X0
	012 Move X0, 0xAE4000
	013 Move X0, [X0+3072]
	014 Call 0x1C17D08
	015 Move X1, X0
	016 Move X0, X19
	017 Call 0x1C17DEC

Method: System.Security.Cryptography.X509Certificates.X509ChainElementCollection get_ChainElements()

Disassembly:
	0x036597B8 ADRP X21, 0xD87000
	0x036597BC LDRB W8, [X21 + 0x662]
	0x036597C0 MOV W20, W1
	0x036597C4 MOV X19, X0
	0x036597C8 TBNZ X8, 0x0, 0x36597EC
	0x036597CC ADRP X0, 0xAE0000
	0x036597D0 LDR X0, [X0 + 0x3A0]
	0x036597D4 BL 0x1C16CF4
	0x036597D8 ADRP X0, 0xAE0000
	0x036597DC LDR X0, [X0 + 0x348]
	0x036597E0 BL 0x1C16CF4

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, [X0+16]
	005 Call X509Helper2.ThrowIfContextInvalid, X0
	006 Move X0, [X19+16]
	007 Compare X0, 0
	008 JumpIfEqual {15}
	009 Move X8, [X0]
	010 Move X2, [X8+408]
	011 Move X1, [X8+416]
	012 Move X30, [X31+16]
	013 Move X19, [X31+24]
	014 CallNoReturn X2
	015 Call 0x1C17F20

Method: System.Security.Cryptography.X509Certificates.X509ChainPolicy get_ChainPolicy()

Disassembly:
	0x036597E4 MOVZ W8, 0x1
	0x036597E8 STRB W8, [X21 + 0x662]
	0x036597EC MOV X0, X19
	0x036597F0 MOV X1, X31
	0x036597F4 BL 0x33BDD8C
	0x036597F8 CBZ X19, 0x365985C
	0x036597FC ADRP X8, 0xAE0000
	0x03659800 LDR X8, [X8 + 0x3A0]
	0x03659804 ANDS W31, W20, 0x1
	0x03659808 MOVZ W9, 0x1
	0x0365980C CINC W9, W9, NE

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, [X0+16]
	005 Call X509Helper2.ThrowIfContextInvalid, X0
	006 Move X0, [X19+16]
	007 Compare X0, 0
	008 JumpIfEqual {15}
	009 Move X8, [X0]
	010 Move X2, [X8+424]
	011 Move X1, [X8+432]
	012 Move X30, [X31+16]
	013 Move X19, [X31+24]
	014 CallNoReturn X2
	015 Call 0x1C17F20

Method: System.Boolean Build(System.Security.Cryptography.X509Certificates.X509Certificate2 certificate)

Disassembly:
	0x03658430 STR V0, [X31 + 0x2]
	0x03658434 STR X8, [X31 + 0x30]
	0x03658438 LDR X20, [X20 + 0xCC0]
	0x0365843C LDR X1, [X25]
	0x03658440 ADD X0, X31, 0x20
	0x03658444 BL 0x2BC4350
	0x03658448 TBZ X0, 0x0, 0x36584A4
	0x0365844C LDR X0, [X31 + 0x30]
	0x03658450 CBZ X0, 0x3658460
	0x03658454 MOV X1, X31
	0x03658458 BL 0x326ACE4
	0x0365845C B 0x365843C
	0x03658460 BL 0x1C16F20
	0x03658464 B 0x36584F8
	0x03658468 MOV X22, X1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, X0
	005 Move X0, [X0+16]
	006 Move X19, X1
	007 Call X509Helper2.ThrowIfContextInvalid, X0
	008 Move X0, [X20+16]
	009 Compare X0, 0
	010 JumpIfEqual {19}
	011 Move X8, [X0]
	012 Move X1, X19
	013 Move X20, [X31+16]
	014 Move X19, [X31+24]
	015 Move X3, [X8+440]
	016 Move X2, [X8+448]
	017 Move X30, [X31+32]
	018 CallNoReturn X3
	019 Call 0x1C17F20

Method: System.Void Reset()

Disassembly:
	0x03659810 STR W9, [X19 + 0x10]
	0x03659814 LDR X0, [X8]
	0x03659818 ADRP X21, 0xAE0000
	0x0365981C LDR X21, [X21 + 0x348]
	0x03659820 BL 0x1C16F10
	0x03659824 MOV X20, X0
	0x03659828 BL 0x3658ECC
	0x0365982C STR X20, [X19 + 0x18]
	0x03659830 LDR X0, [X21]
	0x03659834 BL 0x1C16F10
	0x03659838 MOV X1, X31

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, [X0+16]
	005 Call X509Helper2.ThrowIfContextInvalid, X0
	006 Move X0, [X19+16]
	007 Compare X0, 0
	008 JumpIfEqual {15}
	009 Move X8, [X0]
	010 Move X2, [X8+472]
	011 Move X1, [X8+480]
	012 Move X30, [X31+16]
	013 Move X19, [X31+24]
	014 CallNoReturn X2
	015 Call 0x1C17F20

Method: System.Security.Cryptography.X509Certificates.X509Chain Create()

Disassembly:
	0x036583D0 LDR X0, [X0 + 0xBE8]
	0x036583D4 BL 0x1C16CF4
	0x036583D8 ADRP X0, 0xAE4000
	0x036583DC LDR X0, [X0 + 0xBD0]
	0x036583E0 BL 0x1C16CF4
	0x036583E4 MOVZ W8, 0x1
	0x036583E8 STRB W8, [X20 + 0x651]
	0x036583EC STP X31, X31, [X31 + 0x20]
	0x036583F0 STR X31, [X31 + 0x30]
	0x036583F4 LDR X0, [X19 + 0x10]
	0x036583F8 CBZ X0, 0x36584F4
	0x036583FC ADRP X8, 0xAE4000
	0x03658400 LDR X8, [X8 + 0xBD0]
	0x03658404 ADRP X25, 0xAE4000
	0x03658408 ADRP X23, 0xAE4000
	0x0365840C LDR X1, [X8]
	0x03658410 LDR X25, [X25 + 0xBC0]
	0x03658414 LDR X23, [X23 + 0xBB8]
	0x03658418 ADD X8, X31, 0x8
	0x0365841C BL 0x301CB58
	0x03658420 LDUR V0, [X31 + 0x8]
	0x03658424 LDR X8, [X31 + 0x18]
	0x03658428 ADRP X20, 0xAA1000
	0x0365842C MOVZ W24, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0xD89000
	005 Move X20, 0xAE2000
	006 Move W8, [X19+1618]
	007 Move X20, [X20+832]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xAE2000
	013 Move X0, [X0+832]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+1618], W8
	017 Move X0, [X20]
	018 Call 0x1C17F10
	019 Move X1, X31
	020 Move X19, X0
	021 Call Object..ctor, X0
	022 Move W0, W31
	023 Call X509Helper2.CreateChainImpl, X0
	024 Move [X19+16], X0
	025 Move X0, X19
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Return X0

Method: System.Void Dispose()

Disassembly:
	0x0365983C MOV X20, X0
	0x03659840 BL 0x33BDD8C
	0x03659844 MOV X0, X20
	0x03659848 BL 0x365CD7C
	0x0365984C STR X20, [X19 + 0x20]
	0x03659850 LDP X20, X19, [X31 + 0x10]
	0x03659854 LDP X30, X21, [X31], #0x20
	0x03659858 RET
	0x0365985C BL 0x1C16F20
	0x03659860 STP X30, X19, [X31 - 0x10]!
	0x03659864 MOV X1, X31
	0x03659868 MOV X19, X0
	0x0365986C BL 0x33BDD8C
	0x03659870 MOV X0, X19
	0x03659874 LDP X30, X19, [X31], #0x10
	0x03659878 B 0x365CD7C
	0x0365987C MOVZ W0, 0x1
	0x03659880 RET
	0x03659884 LDR X0, [X0 + 0x18]
	0x03659888 RET
	0x0365988C LDR X0, [X0 + 0x20]
	0x03659890 RET
	0x03659894 RET
	0x03659898 SUB X31, X31, 0x70
	0x0365989C STR X30, [X31 + 0x10]
	0x036598A0 STP X28, X27, [X31 + 0x20]
	0x036598A4 STP X26, X25, [X31 + 0x30]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xD88000
	006 Move X20, 0xAA2000
	007 Move W8, [X21+1619]
	008 Move X20, [X20+3088]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xAA2000
	015 Move X0, [X0+3088]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+1619], W8
	019 Move X8, [X19]
	020 Move W1, 1
	021 Move X0, X19
	022 Move X9, [X8+392]
	023 Move X2, [X8+400]
	024 NotImplemented "Instruction BLR not yet implemented."
	025 Move X0, [X20]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 Move X0, X19
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X1, X31
	034 Move X30, [X31+32]
	035 Move X21, [X31+40]
	036 Call GC.SuppressFinalize, X0
	037 Return 

Method: System.Void Dispose(System.Boolean disposing)

Disassembly:
	0x036598A8 STP X24, X23, [X31 + 0x40]
	0x036598AC STP X22, X21, [X31 + 0x50]
	0x036598B0 STP X20, X19, [X31 + 0x60]
	0x036598B4 ADRP X21, 0xD87000
	0x036598B8 LDRB W8, [X21 + 0x663]
	0x036598BC MOV X20, X1
	0x036598C0 MOV X19, X0
	0x036598C4 TBNZ X8, 0x0, 0x365990C

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, [X0+16]
	005 Compare X0, 0
	006 JumpIfEqual {9}
	007 Call X509ChainImpl.Dispose, X0
	008 Move [X19+16], X31
	009 Move X30, [X31+16]
	010 Move X19, [X31+24]
	011 Return 

Method: System.Void Finalize()

Disassembly:
	0x03659934 MOV W1, W21
	0x03659938 BL 0x3659F3C
	0x0365993C ADRP X8, 0xAC7000
	0x03659940 LDR X8, [X8 + 0xBA0]
	0x03659944 LDR X0, [X8]
	0x03659948 BL 0x1C16F10
	0x0365994C MOV X1, X31
	0x03659950 MOV X20, X0
	0x03659954 BL 0x3351F5C
	0x03659958 LDR X0, [X19 + 0x18]
	0x0365995C CBZ X0, 0x3659D34
	0x03659960 BL 0x3659058
	0x03659964 CBZ X0, 0x3659D34
	0x03659968 ADRP X23, 0xAC5000
	0x0365996C LDR X23, [X23 + 0x810]
	0x03659970 MOV X22, X0
	0x03659974 BL 0x3659504
	0x03659978 TBZ X0, 0x0, 0x3659A14
	0x0365997C MOV W24, W31
	0x03659980 MOV X0, X22
	0x03659984 BL 0x3659370
	0x03659988 CBZ X0, 0x3659D34
	0x0365998C LDR X25, [X0 + 0x18]
	0x03659990 CBZ X25, 0x3659D34
	0x03659994 LDR X8, [X25 + 0x18]
	0x03659998 CMP W8, 0x1
	0x0365999C B.LT 0x3659A08
	0x036599A0 MOV X26, X31
	0x036599A4 AND X8, X8, 0x0
	0x036599A8 ADD X27, X25, 0x28
	0x036599AC CMP X26, W8, UXTW
	0x036599B0 B.CS 0x3659D30
	0x036599B4 LDUR X28, [X27 - 0x8]
	0x036599B8 BICS W31, W28, W24, 0x0
	0x036599BC B.EQ 0x36599F4
	0x036599C0 LDR X8, [X27]
	0x036599C4 LDR X0, [X23]
	0x036599C8 ADD X1, X31, 0x0
	0x036599CC STP X28, X8, [X31]
	0x036599D0 BL 0x1C16E04

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X0]
	006 Move X19, X0
	007 Move X9, [X8+392]
	008 Move X2, [X8+400]
	009 Move W1, W31
	010 NotImplemented "Instruction BLR not yet implemented."
	011 Move X0, X19
	012 Move X20, [X31+16]
	013 Move X19, [X31+24]
	014 Move X1, X31
	015 Move X30, [X31+32]
	016 Move X21, [X31+40]
	017 Call Object.Finalize, X0
	018 Return 
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Move X21, X0
	021 Move X0, X21
	022 Call 0x3EB2AD0
	023 Move X20, [X0]
	024 Call 0x3EB2AE0
	025 Move X0, X19
	026 Move X1, X31
	027 Call Object.Finalize, X0
	028 Compare X20, 0
	029 JumpIfNotEqual {36}
	030 Move X20, [X31+16]
	031 Move X19, [X31+24]
	032 Move X30, [X31+32]
	033 Move X21, [X31+40]
	034 Return 
	035 Move X20, X31
	036 Move X0, X20
	037 Call 0x1C17F18
	038 Move X21, X0
	039 Move X0, X19
	040 Move X1, X31
	041 Call Object.Finalize, X0
	042 Compare X20, 0
	043 JumpIfNotEqual {46}
	044 Move X0, X21
	045 Call 0x1D2D690
	046 Move X0, X20
	047 Call 0x1C17F18
	048 Call 0x1991590

