Type: System.Security.Cryptography.X509Certificates.X509ChainStatus

Method: System.Void .ctor(System.Security.Cryptography.X509Certificates.X509ChainStatusFlags flag)

Disassembly:
	0x0365B050 MOV X1, X20
	0x0365B054 LDP X9, X2, [X8 + 0x1C8]
	0x0365B058 BLR X9
	0x0365B05C ANDS W31, W0, 0x1
	0x0365B060 CSEL X0, X31, X20, NE
	0x0365B064 LDP X20, X19, [X31 + 0x20]
	0x0365B068 LDP X22, X21, [X31 + 0x10]
	0x0365B06C LDR X30, [X31], #0x30

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move [X0], W1
	005 Move W0, W1
	006 Call X509ChainStatus.GetInformation, X0
	007 Move [X19+8], X0
	008 Move X30, [X31+16]
	009 Move X19, [X31+24]
	010 Return 

Method: System.Security.Cryptography.X509Certificates.X509ChainStatusFlags get_Status()

Disassembly:
	0x0365DF44 BL 0x1C16F28
	0x0365DF48 BL 0x1C16F28

ISIL:
	001 Move W0, [X0]
	002 Return X0

Method: System.Void set_Status(System.Security.Cryptography.X509Certificates.X509ChainStatusFlags value)

Disassembly:
	0x0365DF4C BL 0x1C16F20
	0x0365DF50 B 0x365DF68

ISIL:
	001 Move [X0], W1
	002 Return 

Method: System.Void set_StatusInformation(System.String value)

Disassembly:
	0x0365DF54 B 0x365DF68
	0x0365DF58 B 0x365DF68

ISIL:
	001 Move [X0+8], X1
	002 Return 

Method: System.String GetInformation(System.Security.Cryptography.X509Certificates.X509ChainStatusFlags flags)

Disassembly:
	0x03659AF8 BLR X9
	0x03659AFC CBZ X0, 0x3659D34
	0x03659B00 LDR W8, [X0 + 0x40]
	0x03659B04 CMP W8, 0xFFF
	0x03659B08 B.EQ 0x3659D04
	0x03659B0C LDR X20, [X19 + 0x28]
	0x03659B10 CBZ X20, 0x3659D34
	0x03659B14 LDR X8, [X20 + 0x18]
	0x03659B18 CMP W8, 0x1
	0x03659B1C B.LT 0x3659D04
	0x03659B20 MOV X21, X31
	0x03659B24 AND X8, X8, 0x0
	0x03659B28 ADD X22, X20, 0x20
	0x03659B2C MOVZ W23, 0x2000000
	0x03659B30 CMP X21, W8, UXTW
	0x03659B34 B.CS 0x3659D30
	0x03659B38 LDR W8, [X22]
	0x03659B3C CMP W8, 0x800
	0x03659B40 B.LE 0x3659B68
	0x03659B44 CMP W8, 0x10000
	0x03659B48 B.LE 0x3659B8C
	0x03659B4C CMP W8, 0x40000
	0x03659B50 B.LE 0x3659BE0
	0x03659B54 CMP W8, 0x80000
	0x03659B58 B.EQ 0x3659C54
	0x03659B5C CMP W8, W23
	0x03659B60 B.EQ 0x3659C04
	0x03659B64 B 0x3659D28
	0x03659B68 CMP W8, 0x20
	0x03659B6C B.LE 0x3659BA8
	0x03659B70 CMP W8, 0x200
	0x03659B74 B.LE 0x3659BF4
	0x03659B78 CMP W8, 0x400
	0x03659B7C B.EQ 0x3659CB4
	0x03659B80 CMP W8, 0x800
	0x03659B84 B.EQ 0x3659C34
	0x03659B88 B 0x3659D28
	0x03659B8C CMP W8, 0x4000
	0x03659B90 B.LE 0x3659C24
	0x03659B94 CMP W8, 0x8000
	0x03659B98 B.EQ 0x3659C34
	0x03659B9C CMP W8, 0x10000
	0x03659BA0 B.EQ 0x3659BC0
	0x03659BA4 B 0x3659D28
	0x03659BA8 CMP W8, 0x1
	0x03659BAC B.EQ 0x3659C94
	0x03659BB0 CMP W8, 0x2
	0x03659BB4 B.EQ 0x3659C74
	0x03659BB8 CMP W8, 0x20
	0x03659BBC B.NE 0x3659D28
	0x03659BC0 LDR X8, [X19]
	0x03659BC4 MOV X0, X19
	0x03659BC8 LDP X9, X1, [X8 + 0x1A8]
	0x03659BCC BLR X9
	0x03659BD0 CBZ X0, 0x3659D34
	0x03659BD4 LDRB W8, [X0 + 0x40]
	0x03659BD8 TBNZ X8, 0x4, 0x3659CF0
	0x03659BDC B 0x3659D28
	0x03659BE0 CMP W8, 0x20000
	0x03659BE4 B.EQ 0x3659CD4
	0x03659BE8 CMP W8, 0x40000
	0x03659BEC B.EQ 0x3659CF0
	0x03659BF0 B 0x3659D28
	0x03659BF4 CMP W8, 0x100
	0x03659BF8 B.EQ 0x3659C54
	0x03659BFC CMP W8, 0x200
	0x03659C00 B.NE 0x3659D28
	0x03659C04 LDR X8, [X19]
	0x03659C08 MOV X0, X19
	0x03659C0C LDP X9, X1, [X8 + 0x1A8]
	0x03659C10 BLR X9
	0x03659C14 CBZ X0, 0x3659D34
	0x03659C18 LDRB W8, [X0 + 0x40]
	0x03659C1C TBNZ X8, 0x7, 0x3659CF0
	0x03659C20 B 0x3659D28
	0x03659C24 CMP W8, 0x1000
	0x03659C28 B.EQ 0x3659C34
	0x03659C2C CMP W8, 0x4000
	0x03659C30 B.NE 0x3659D28
	0x03659C34 LDR X8, [X19]
	0x03659C38 MOV X0, X19
	0x03659C3C LDP X9, X1, [X8 + 0x1A8]
	0x03659C40 BLR X9
	0x03659C44 CBZ X0, 0x3659D34
	0x03659C48 LDRB W8, [X0 + 0x40]
	0x03659C4C TBNZ X8, 0x6, 0x3659CF0
	0x03659C50 B 0x3659D28
	0x03659C54 LDR X8, [X19]
	0x03659C58 MOV X0, X19
	0x03659C5C LDP X9, X1, [X8 + 0x1A8]
	0x03659C60 BLR X9
	0x03659C64 CBZ X0, 0x3659D34
	0x03659C68 LDRB W8, [X0 + 0x40]
	0x03659C6C TBNZ X8, 0x5, 0x3659CF0
	0x03659C70 B 0x3659D28
	0x03659C74 LDR X8, [X19]
	0x03659C78 MOV X0, X19
	0x03659C7C LDP X9, X1, [X8 + 0x1A8]
	0x03659C80 BLR X9
	0x03659C84 CBZ X0, 0x3659D34

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+32], X30
	003 Move [X31+48], X20
	004 Move [X31+56], X19
	005 Move X20, 0xD88000
	006 Move W8, [X20+1661]
	007 Move W19, W0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0xA9D000
	013 Move X0, [X0+632]
	014 Call 0x1C17CF4
	015 Move X0, 0xAE4000
	016 Move X0, [X0+3080]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+1661], W8
	020 NotImplemented "Instruction CMP not yet implemented."
	021 NotImplemented "Instruction CMP not yet implemented."
	022 NotImplemented "Instruction CMP not yet implemented."
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Move W8, 0x2000000
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move W8, 0x1000000
	027 NotImplemented "Instruction CMP not yet implemented."
	028 NotImplemented "Instruction CMP not yet implemented."
	029 NotImplemented "Instruction CMP not yet implemented."
	030 NotImplemented "Instruction CMP not yet implemented."
	031 NotImplemented "Instruction CMP not yet implemented."
	032 NotImplemented "Instruction CMP not yet implemented."
	033 NotImplemented "Instruction CMP not yet implemented."
	034 NotImplemented "Instruction CMP not yet implemented."
	035 NotImplemented "Instruction CMP not yet implemented."
	036 NotImplemented "Instruction CMP not yet implemented."
	037 NotImplemented "Instruction CMP not yet implemented."
	038 NotImplemented "Instruction CMP not yet implemented."
	039 NotImplemented "Instruction CMP not yet implemented."
	040 NotImplemented "Instruction CMP not yet implemented."
	041 NotImplemented "Instruction CMP not yet implemented."
	042 NotImplemented "Instruction CMP not yet implemented."
	043 NotImplemented "Instruction CMP not yet implemented."
	044 NotImplemented "Instruction CMP not yet implemented."
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Move W8, 1
	047 Move W9, 278
	048 NotImplemented "Instruction LSLV not yet implemented."
	049 NotImplemented "Instruction MOVK not yet implemented."
	050 And W31, W8, W9
	051 Move X8, 0xAE4000
	052 Move X8, [X8+3080]
	053 Move TEMP, 0
	054 Not TEMP
	055 Move X9, TEMP
	056 Add X0, X31, 8
	057 Move X1, X31
	058 Move X8, [X8]
	059 Move [X31+24], W19
	060 Move [X31+8], X8
	061 Move [X31+16], X9
	062 Call Enum.ToString, X0
	063 Move X1, X31
	064 Call Locale.GetText, X0
	065 Move X8, 0xA9D000
	066 Move X8, [X8+632]
	067 Move X8, [X8]
	068 Move X8, [X8+184]
	069 Move X0, [X8]
	070 Move X20, [X31+48]
	071 Move X19, [X31+56]
	072 Move X30, [X31+32]
	073 Add X31, X31, 64
	074 Return X0

