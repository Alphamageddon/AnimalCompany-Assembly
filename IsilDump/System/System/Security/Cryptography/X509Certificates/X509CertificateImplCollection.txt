Type: System.Security.Cryptography.X509Certificates.X509CertificateImplCollection

Method: System.Void .ctor()

Disassembly:
	0x036581F4 RET
	0x036581F8 BL 0x1C16F20
	0x036581FC BL 0x1C16F20
	0x03658200 BL 0x1C16F20
	0x03658204 BL 0x1C16F20
	0x03658208 B 0x3658214
	0x0365820C B 0x3658214
	0x03658210 B 0x3658214
	0x03658214 MOV X19, X0
	0x03658218 CMP W1, 0x1
	0x0365821C B.NE 0x3658248
	0x03658220 MOV X0, X19
	0x03658224 BL 0x3EB1AD0
	0x03658228 LDR X20, [X0]
	0x0365822C BL 0x3EB1AE0
	0x03658230 LDR X1, [X21]
	0x03658234 ADD X0, X31, 0x20
	0x03658238 BL 0x2BC434C
	0x0365823C CBZ X20, 0x36581E4
	0x03658240 MOV X0, X20
	0x03658244 BL 0x1C16F18
	0x03658248 MOV X20, X31
	0x0365824C B 0x3658254
	0x03658250 MOV X19, X0
	0x03658254 LDR X1, [X21]
	0x03658258 ADD X0, X31, 0x20
	0x0365825C BL 0x2BC434C
	0x03658260 CBNZ X20, 0x365826C
	0x03658264 MOV X0, X19
	0x03658268 BL 0x1D2C690
	0x0365826C MOV X0, X20
	0x03658270 BL 0x1C16F18

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xD89000
	007 Move X21, 0xAE5000
	008 Move X20, 0xAE5000
	009 Move W8, [X22+1610]
	010 Move X21, [X21+2944]
	011 Move X20, [X20+2952]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0xAE5000
	018 Move X0, [X0+2952]
	019 Call 0x1C17CF4
	020 Move X0, 0xAE5000
	021 Move X0, [X0+2944]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X22+1610], W8
	025 Move X0, X19
	026 Move X1, X31
	027 Call Object..ctor, X0
	028 Move X0, [X21]
	029 Call 0x1C17F10
	030 Move X1, [X20]
	031 Move X20, X0
	032 Call List`1<Object>..ctor, X0
	033 Move [X19+16], X20
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Return 

Method: System.Void .ctor(System.Security.Cryptography.X509Certificates.X509CertificateImplCollection other)

Disassembly:
	0x03659050 BR X4
	0x03659054 BL 0x1C16F20
	0x03659058 STP X30, X21, [X31 - 0x20]!
	0x0365905C STP X20, X19, [X31 + 0x10]
	0x03659060 ADRP X21, 0xD87000
	0x03659064 ADRP X20, 0xAE3000
	0x03659068 LDRB W8, [X21 + 0x658]
	0x0365906C LDR X20, [X20 + 0xC20]
	0x03659070 MOV X19, X0
	0x03659074 TBNZ X8, 0x0, 0x365908C
	0x03659078 ADRP X0, 0xAE3000
	0x0365907C LDR X0, [X0 + 0xC20]
	0x03659080 BL 0x1C16CF4
	0x03659084 MOVZ W8, 0x1
	0x03659088 STRB W8, [X21 + 0x658]
	0x0365908C LDR X0, [X20]
	0x03659090 LDR X19, [X19 + 0x10]
	0x03659094 BL 0x1C16F10
	0x03659098 MOV X1, X19
	0x0365909C MOV X20, X0
	0x036590A0 BL 0x36590B4
	0x036590A4 MOV X0, X20
	0x036590A8 LDP X20, X19, [X31 + 0x10]
	0x036590AC LDP X30, X21, [X31], #0x20
	0x036590B0 RET
	0x036590B4 STP X30, X21, [X31 - 0x20]!
	0x036590B8 STP X20, X19, [X31 + 0x10]
	0x036590BC ADRP X21, 0xD87000
	0x036590C0 LDRB W8, [X21 + 0x65C]
	0x036590C4 MOV X20, X1
	0x036590C8 MOV X19, X0
	0x036590CC TBNZ X8, 0x0, 0x36590E4
	0x036590D0 ADRP X0, 0xAA2000
	0x036590D4 LDR X0, [X0 + 0xDB8]
	0x036590D8 BL 0x1C16CF4
	0x036590DC MOVZ W8, 0x1
	0x036590E0 STRB W8, [X21 + 0x65C]
	0x036590E4 MOV X0, X19
	0x036590E8 MOV X1, X31
	0x036590EC BL 0x33BDD8C
	0x036590F0 CBZ X20, 0x3659164
	0x036590F4 ADRP X10, 0xAA2000
	0x036590F8 LDR X8, [X20]
	0x036590FC LDR X10, [X10 + 0xDB8]
	0x03659100 LDRH W9, [X8 + 0x12E]
	0x03659104 LDR X1, [X10]
	0x03659108 CBZ X9, 0x365912C
	0x0365910C LDR X10, [X8 + 0xB0]
	0x03659110 ADD X10, X10, 0x8
	0x03659114 LDUR X11, [X10 - 0x8]
	0x03659118 CMP X11, X1
	0x0365911C B.EQ 0x365913C
	0x03659120 SUBS X9, X9, 0x1
	0x03659124 ADD X10, X10, 0x10
	0x03659128 B.NE 0x3659114
	0x0365912C MOV X0, X20
	0x03659130 MOV W2, W31
	0x03659134 BL 0x1C5C788
	0x03659138 B 0x3659148
	0x0365913C LDRSW X9, [X10]
	0x03659140 ADD X8, X8, X9, 0x4, LSL
	0x03659144 ADD X0, X8, 0x138
	0x03659148 LDP X8, X1, [X0]
	0x0365914C MOV X0, X20
	0x03659150 BLR X8
	0x03659154 STR X0, [X19 + 0x10]
	0x03659158 LDP X20, X19, [X31 + 0x10]
	0x0365915C LDP X30, X21, [X31], #0x20
	0x03659160 RET
	0x03659164 BL 0x1C16F20
	0x03659168 STP X30, X21, [X31 - 0x20]!
	0x0365916C STP X20, X19, [X31 + 0x10]
	0x03659170 ADRP X21, 0xD87000
	0x03659174 ADRP X20, 0xAE3000
	0x03659178 LDRB W8, [X21 + 0x659]
	0x0365917C LDR X20, [X20 + 0xC20]
	0x03659180 MOV X19, X0
	0x03659184 TBNZ X8, 0x0, 0x365919C
	0x03659188 ADRP X0, 0xAE3000
	0x0365918C LDR X0, [X0 + 0xC20]
	0x03659190 BL 0x1C16CF4
	0x03659194 MOVZ W8, 0x1
	0x03659198 STRB W8, [X21 + 0x659]
	0x0365919C LDR X0, [X20]
	0x036591A0 LDR X19, [X19 + 0x10]
	0x036591A4 BL 0x1C16F10
	0x036591A8 MOV X1, X19
	0x036591AC MOV X20, X0
	0x036591B0 BL 0x36590B4
	0x036591B4 MOV X0, X20
	0x036591B8 LDP X20, X19, [X31 + 0x10]
	0x036591BC LDP X30, X21, [X31], #0x20
	0x036591C0 RET
	0x036591C4 STR X30, [X31 - 0x30]!
	0x036591C8 STP X22, X21, [X31 + 0x10]
	0x036591CC STP X20, X19, [X31 + 0x20]
	0x036591D0 ADRP X22, 0xD87000
	0x036591D4 ADRP X21, 0xAE3000
	0x036591D8 LDRB W8, [X22 + 0x65A]
	0x036591DC LDR X21, [X21 + 0xC18]
	0x036591E0 MOV X19, X1
	0x036591E4 MOV X20, X0
	0x036591E8 TBNZ X8, 0x0, 0x3659200
	0x036591EC ADRP X0, 0xAE3000
	0x036591F0 LDR X0, [X0 + 0xC18]
	0x036591F4 BL 0x1C16CF4
	0x036591F8 MOVZ W8, 0x1
	0x036591FC STRB W8, [X22 + 0x65A]
	0x03659200 LDR X0, [X21]
	0x03659204 LDR X20, [X20 + 0x10]
	0x03659208 BL 0x1C16F10
	0x0365920C MOV X1, X19
	0x03659210 MOV X21, X0
	0x03659214 BL 0x36589D4
	0x03659218 CBZ X20, 0x3659240
	0x0365921C LDR X8, [X20]
	0x03659220 MOV X0, X20
	0x03659224 MOV X1, X21
	0x03659228 LDP X20, X19, [X31 + 0x20]
	0x0365922C LDR X3, [X8 + 0x308]
	0x03659230 LDR X2, [X8 + 0x310]
	0x03659234 LDP X22, X21, [X31 + 0x10]
	0x03659238 LDR X30, [X31], #0x30
	0x0365923C BR X3
	0x03659240 BL 0x1C16F20
	0x03659244 STR X30, [X31 - 0x10]!
	0x03659248 LDR X0, [X0 + 0x10]
	0x0365924C CBZ X0, 0x3659264
	0x03659250 LDR X8, [X0]
	0x03659254 LDR X2, [X8 + 0x328]
	0x03659258 LDR X1, [X8 + 0x330]
	0x0365925C LDR X30, [X31], #0x10
	0x03659260 BR X2
	0x03659264 BL 0x1C16F20
	0x03659268 STP X30, X23, [X31 - 0x30]!
	0x0365926C STP X22, X21, [X31 + 0x10]
	0x03659270 STP X20, X19, [X31 + 0x20]
	0x03659274 ADRP X21, 0xD87000

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+64], X30
	003 Move [X31+72], X23
	004 Move [X31+80], X22
	005 Move [X31+88], X21
	006 Move [X31+96], X20
	007 Move [X31+104], X19
	008 Move X23, 0xD88000
	009 Move X22, 0xAE4000
	010 Move X21, 0xAE4000
	011 Move W8, [X23+1611]
	012 Move X22, [X22+2944]
	013 Move X21, [X21+2952]
	014 Move X20, X1
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {43}
	020 Move X0, 0xAE4000
	021 Move X0, [X0+3000]
	022 Call 0x1C17CF4
	023 Move X0, 0xAE4000
	024 Move X0, [X0+3008]
	025 Call 0x1C17CF4
	026 Move X0, 0xAE4000
	027 Move X0, [X0+3016]
	028 Call 0x1C17CF4
	029 Move X0, 0xAE4000
	030 Move X0, [X0+2960]
	031 Call 0x1C17CF4
	032 Move X0, 0xAE4000
	033 Move X0, [X0+3024]
	034 Call 0x1C17CF4
	035 Move X0, 0xAE4000
	036 Move X0, [X0+2952]
	037 Call 0x1C17CF4
	038 Move X0, 0xAE4000
	039 Move X0, [X0+2944]
	040 Call 0x1C17CF4
	041 Move W8, 1
	042 Move [X23+1611], W8
	043 Move X0, X19
	044 Move X1, X31
	045 Move [X31+32], X31
	046 Move [X31+40], X31
	047 Move [X31+48], X31
	048 Call Object..ctor, X0
	049 Move X0, [X22]
	050 Call 0x1C17F10
	051 Move X1, [X21]
	052 Move X21, X0
	053 Call List`1<Object>..ctor, X0
	054 Move [X19+16], X21
	055 Compare X20, 0
	056 JumpIfEqual {126}
	057 Move X0, [X20+16]
	058 Compare X0, 0
	059 JumpIfEqual {126}
	060 Move X8, 0xAE4000
	061 Move X8, [X8+3024]
	062 Move X22, 0xAE4000
	063 Move X23, 0xAE4000
	064 Move X21, 0xAE4000
	065 Move X1, [X8]
	066 Move X22, [X22+3008]
	067 Move X23, [X23+2960]
	068 Move X21, [X21+3000]
	069 Add X8, X31, 8
	070 Call List`1<Object>.GetEnumerator, X0
	071 NotImplemented "Instruction LDUR not yet implemented."
	072 Move X8, [X31+24]
	073 Move [X31+2], V0
	074 Move [X31+48], X8
	075 Move X1, [X22]
	076 Add X0, X31, 32
	077 Call Enumerator<Object>.MoveNext, X0
	078 Move TEMP, X0
	079 And TEMP, TEMP, 1
	080 Compare TEMP, 1
	081 JumpIfNotEqual {112}
	082 Move X0, [X31+48]
	083 Compare X0, 0
	084 JumpIfEqual {124}
	085 Move X8, [X0]
	086 Move X20, [X19+16]
	087 Move X9, [X8+408]
	088 Move X1, [X8+416]
	089 NotImplemented "Instruction BLR not yet implemented."
	090 Move X1, X0
	091 Compare X20, 0
	092 JumpIfEqual {125}
	093 Move W10, [X20+28]
	094 Move X8, [X20+16]
	095 Move X9, [X23]
	096 Add W10, W10, 1
	097 Move [X20+28], W10
	098 Compare X8, 0
	099 JumpIfEqual {123}
	100 NotImplemented "Instruction LDRSW not yet implemented."
	101 Move W11, [X8+24]
	102 NotImplemented "Instruction CMP not yet implemented."
	103 Add W9, W10, 1
	104 Add X8, X8, X10
	105 Move [X20+24], W9
	106 Move [X8+32], X1
	107 Move X8, [X9+32]
	108 Move X8, [X8+192]
	109 Move X2, [X8+112]
	110 Move X0, X20
	111 Call List`1<Object>.AddWithResize, X0, X1
	112 Move X1, [X21]
	113 Add X0, X31, 32
	114 Call Enumerator<Object>.Dispose, X0
	115 Move X20, [X31+96]
	116 Move X19, [X31+104]
	117 Move X22, [X31+80]
	118 Move X21, [X31+88]
	119 Move X30, [X31+64]
	120 Move X23, [X31+72]
	121 Add X31, X31, 112
	122 Return 
	123 Call 0x1C17F20
	124 Call 0x1C17F20
	125 Call 0x1C17F20
	126 Call 0x1C17F20
	127 Move X19, X0
	128 NotImplemented "Instruction CMP not yet implemented."
	129 Move X0, X19
	130 Call 0x3EB2AD0
	131 Move X20, [X0]
	132 Call 0x3EB2AE0
	133 Move X1, [X21]
	134 Add X0, X31, 32
	135 Call Enumerator<Object>.Dispose, X0
	136 Compare X20, 0
	137 JumpIfEqual {115}
	138 Move X0, X20
	139 Call 0x1C17F18
	140 Move X20, X31
	141 Move X19, X0
	142 Move X1, [X21]
	143 Add X0, X31, 32
	144 Call Enumerator<Object>.Dispose, X0
	145 Compare X20, 0
	146 JumpIfNotEqual {149}
	147 Move X0, X19
	148 Call 0x1D2D690
	149 Move X0, X20
	150 Call 0x1C17F18
	151 Call 0x1991590

Method: System.Int32 get_Count()

Disassembly:
	0x03659278 LDRB W8, [X21 + 0x65B]
	0x0365927C MOV X19, X1
	0x03659280 MOV X20, X0
	0x03659284 TBNZ X8, 0x0, 0x365929C
	0x03659288 ADRP X0, 0xAE3000
	0x0365928C LDR X0, [X0 + 0xC18]
	0x03659290 BL 0x1C16CF4
	0x03659294 MOVZ W8, 0x1
	0x03659298 STRB W8, [X21 + 0x65B]
	0x0365929C LDR X0, [X20 + 0x10]
	0x036592A0 CBZ X0, 0x3659354
	0x036592A4 ADRP X23, 0xAE3000
	0x036592A8 LDR X23, [X23 + 0xC18]
	0x036592AC MOV W21, W31
	0x036592B0 LDR X8, [X0]
	0x036592B4 LDR X9, [X8 + 0x298]
	0x036592B8 LDR X1, [X8 + 0x2A0]
	0x036592BC BLR X9

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xD88000
	005 Move W8, [X20+1612]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xAE4000
	012 Move X0, [X0+3032]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+1612], W8
	016 Move X8, [X19+16]
	017 Compare X8, 0
	018 JumpIfEqual {24}
	019 Move W0, [X8+24]
	020 Move X20, [X31+16]
	021 Move X19, [X31+24]
	022 Move X30, [X31+32]
	023 Return X0
	024 Call 0x1C17F20

Method: System.Security.Cryptography.X509Certificates.X509CertificateImpl get_Item(System.Int32 index)

Disassembly:
	0x036592C0 MOV W22, W0
	0x036592C4 CMP W21, W0
	0x036592C8 B.GE 0x3659358
	0x036592CC LDR X0, [X20 + 0x10]
	0x036592D0 CBZ X0, 0x3659354
	0x036592D4 LDR X8, [X0]
	0x036592D8 MOV W1, W21
	0x036592DC LDR X9, [X8 + 0x2E8]
	0x036592E0 LDR X2, [X8 + 0x2F0]
	0x036592E4 BLR X9
	0x036592E8 CBZ X0, 0x3659354
	0x036592EC LDR X9, [X0]
	0x036592F0 LDR X8, [X23]
	0x036592F4 LDRB W11, [X9 + 0x130]
	0x036592F8 LDRB W10, [X8 + 0x130]
	0x036592FC CMP W11, W10
	0x03659300 B.CC 0x3659354
	0x03659304 LDR X11, [X9 + 0xC8]
	0x03659308 ADD X11, X11, X10, 0x3, LSL
	0x0365930C LDUR X11, [X11 - 0x8]
	0x03659310 CMP X11, X8
	0x03659314 B.NE 0x3659354

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xD88000
	006 Move W8, [X21+1613]
	007 Move W19, W1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xAE4000
	014 Move X0, [X0+3040]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+1613], W8
	018 Move X0, [X20+16]
	019 Compare X0, 0
	020 JumpIfEqual {31}
	021 Move X8, 0xAE4000
	022 Move X8, [X8+3040]
	023 Move W1, W19
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X2, [X8]
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Call List`1<Object>.get_Item, X0, X1
	030 Return X0
	031 Call 0x1C17F20

Method: System.Void Add(System.Security.Cryptography.X509Certificates.X509CertificateImpl impl, System.Boolean takeOwnership)

Disassembly:
	0x03658274 BL 0x1990590
	0x03658278 STR X30, [X31 - 0x20]!
	0x0365827C STP X20, X19, [X31 + 0x10]
	0x03658280 ADRP X20, 0xD88000
	0x03658284 LDRB W8, [X20 + 0x64C]
	0x03658288 MOV X19, X0
	0x0365828C TBNZ X8, 0x0, 0x36582A4
	0x03658290 ADRP X0, 0xAE4000
	0x03658294 LDR X0, [X0 + 0xBD8]
	0x03658298 BL 0x1C16CF4
	0x0365829C MOVZ W8, 0x1
	0x036582A0 STRB W8, [X20 + 0x64C]
	0x036582A4 LDR X8, [X19 + 0x10]
	0x036582A8 CBZ X8, 0x36582BC
	0x036582AC LDR W0, [X8 + 0x18]
	0x036582B0 LDP X20, X19, [X31 + 0x10]
	0x036582B4 LDR X30, [X31], #0x20
	0x036582B8 RET
	0x036582BC BL 0x1C16F20
	0x036582C0 STP X30, X21, [X31 - 0x20]!
	0x036582C4 STP X20, X19, [X31 + 0x10]
	0x036582C8 ADRP X21, 0xD88000
	0x036582CC LDRB W8, [X21 + 0x64D]
	0x036582D0 MOV W19, W1
	0x036582D4 MOV X20, X0
	0x036582D8 TBNZ X8, 0x0, 0x36582F0
	0x036582DC ADRP X0, 0xAE4000
	0x036582E0 LDR X0, [X0 + 0xBE0]
	0x036582E4 BL 0x1C16CF4
	0x036582E8 MOVZ W8, 0x1
	0x036582EC STRB W8, [X21 + 0x64D]
	0x036582F0 LDR X0, [X20 + 0x10]
	0x036582F4 CBZ X0, 0x3658314
	0x036582F8 ADRP X8, 0xAE4000
	0x036582FC LDR X8, [X8 + 0xBE0]
	0x03658300 MOV W1, W19
	0x03658304 LDP X20, X19, [X31 + 0x10]
	0x03658308 LDR X2, [X8]
	0x0365830C LDP X30, X21, [X31], #0x20
	0x03658310 B 0x301BCCC
	0x03658314 BL 0x1C16F20
	0x03658318 STP X30, X21, [X31 - 0x20]!
	0x0365831C STP X20, X19, [X31 + 0x10]
	0x03658320 ADRP X21, 0xD88000
	0x03658324 ADRP X20, 0xAA2000
	0x03658328 LDRB W8, [X21 + 0x650]
	0x0365832C LDR X20, [X20 + 0xC10]
	0x03658330 MOV X19, X0
	0x03658334 TBNZ X8, 0x0, 0x365834C
	0x03658338 ADRP X0, 0xAA2000
	0x0365833C LDR X0, [X0 + 0xC10]
	0x03658340 BL 0x1C16CF4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xD89000
	007 Move W8, [X22+1614]
	008 Move W21, W2
	009 Move X19, X1
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0xAE5000
	016 Move X0, [X0+2960]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+1614], W8
	020 Move TEMP, X21
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {32}
	024 Compare X19, 0
	025 JumpIfEqual {68}
	026 Move X8, [X19]
	027 Move X0, X19
	028 Move X9, [X8+408]
	029 Move X1, [X8+416]
	030 NotImplemented "Instruction BLR not yet implemented."
	031 Move X19, X0
	032 Move X0, [X20+16]
	033 Compare X0, 0
	034 JumpIfEqual {68}
	035 Move X9, 0xAE5000
	036 Move X9, [X9+2960]
	037 Move W10, [X0+28]
	038 Move X8, [X0+16]
	039 Move X9, [X9]
	040 Add W10, W10, 1
	041 Move [X0+28], W10
	042 Compare X8, 0
	043 JumpIfEqual {68}
	044 NotImplemented "Instruction LDRSW not yet implemented."
	045 Move W11, [X8+24]
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Add W9, W10, 1
	048 Add X8, X8, X10
	049 Move [X0+24], W9
	050 Move [X8+32], X19
	051 Move X20, [X31+32]
	052 Move X19, [X31+40]
	053 Move X22, [X31+16]
	054 Move X21, [X31+24]
	055 Move X30, [X31+48]
	056 Return 
	057 Move X8, [X9+32]
	058 Move X1, X19
	059 Move X20, [X31+32]
	060 Move X19, [X31+40]
	061 Move X22, [X31+16]
	062 Move X21, [X31+24]
	063 Move X8, [X8+192]
	064 Move X2, [X8+112]
	065 Move X30, [X31+48]
	066 Call List`1<Object>.AddWithResize, X0, X1
	067 Return 
	068 Call 0x1C17F20

Method: System.Security.Cryptography.X509Certificates.X509CertificateImplCollection Clone()

Disassembly:
	0x036570D8 LDUR X11, [X10 - 0x8]
	0x036570DC CMP X11, X1
	0x036570E0 B.EQ 0x3657100
	0x036570E4 SUBS X9, X9, 0x1
	0x036570E8 ADD X10, X10, 0x10
	0x036570EC B.NE 0x36570D8
	0x036570F0 MOV X0, X20
	0x036570F4 MOV W2, W31
	0x036570F8 BL 0x1C5C788
	0x036570FC B 0x365710C
	0x03657100 LDRSW X9, [X10]
	0x03657104 ADD X8, X8, X9, 0x4, LSL
	0x03657108 ADD X0, X8, 0x138
	0x0365710C LDP X8, X1, [X0]
	0x03657110 MOV X0, X20
	0x03657114 BLR X8
	0x03657118 CBZ X19, 0x36571E0
	0x0365711C MOV X0, X19
	0x03657120 BL 0x1C16F18
	0x03657124 B 0x3657134
	0x03657128 B 0x3657134
	0x0365712C B 0x3657134

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xD8A000
	006 Move X21, 0xAE6000
	007 Move W8, [X20+1615]
	008 Move X21, [X21+2896]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xAE6000
	015 Move X0, [X0+2896]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1615], W8
	019 Move X0, [X21]
	020 Call 0x1C17F10
	021 Move X1, X19
	022 Move X20, X0
	023 Call X509CertificateImplCollection..ctor, X0, X1
	024 Move X0, X20
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Return X0

Method: System.Void Dispose()

Disassembly:
	0x03659318 CBZ X19, 0x3659354
	0x0365931C LDR X9, [X9 + 0xC8]
	0x03659320 ADD X9, X9, X10, 0x3, LSL
	0x03659324 LDUR X9, [X9 - 0x8]
	0x03659328 LDR X10, [X19]
	0x0365932C CMP X9, X8
	0x03659330 CSEL X8, X0, X31, EQ
	0x03659334 LDR X1, [X8 + 0x10]
	0x03659338 LDP X8, X2, [X10 + 0x1C8]
	0x0365933C MOV X0, X19
	0x03659340 BLR X8
	0x03659344 TBNZ X0, 0x0, 0x3659358
	0x03659348 LDR X0, [X20 + 0x10]
	0x0365934C ADD W21, W21, 0x1
	0x03659350 CBNZ X0, 0x36592B0
	0x03659354 BL 0x1C16F20
	0x03659358 CMP W21, W22
	0x0365935C LDP X20, X19, [X31 + 0x20]
	0x03659360 LDP X22, X21, [X31 + 0x10]
	0x03659364 CSET W0, LT
	0x03659368 LDP X30, X23, [X31], #0x30
	0x0365936C RET
	0x03659370 STR X30, [X31 - 0x20]!
	0x03659374 STP X20, X19, [X31 + 0x10]
	0x03659378 ADRP X20, 0xD87000
	0x0365937C LDRB W8, [X20 + 0x65D]
	0x03659380 MOV X19, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xD88000
	006 Move X20, 0xAA2000
	007 Move W8, [X21+1616]
	008 Move X20, [X20+3088]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xAA2000
	015 Move X0, [X0+3088]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+1616], W8
	019 Move X8, [X19]
	020 Move W1, 1
	021 Move X0, X19
	022 Move X9, [X8+392]
	023 Move X2, [X8+400]
	024 NotImplemented "Instruction BLR not yet implemented."
	025 Move X0, [X20]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 Move X0, X19
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X1, X31
	034 Move X30, [X31+32]
	035 Move X21, [X31+40]
	036 Call GC.SuppressFinalize, X0
	037 Return 

Method: System.Void Dispose(System.Boolean disposing)

Disassembly:
	0x03659384 TBNZ X8, 0x0, 0x36593A8
	0x03659388 ADRP X0, 0xA9A000
	0x0365938C LDR X0, [X0 + 0xE18]
	0x03659390 BL 0x1C16CF4
	0x03659394 ADRP X0, 0xAE3000
	0x03659398 LDR X0, [X0 + 0xC18]
	0x0365939C BL 0x1C16CF4
	0x036593A0 MOVZ W8, 0x1
	0x036593A4 STRB W8, [X20 + 0x65D]
	0x036593A8 LDR X19, [X19 + 0x10]
	0x036593AC CBZ X19, 0x365945C
	0x036593B0 ADRP X10, 0xA9A000
	0x036593B4 LDR X8, [X19]
	0x036593B8 LDR X10, [X10 + 0xE18]
	0x036593BC LDRH W9, [X8 + 0x12E]
	0x036593C0 LDR X1, [X10]
	0x036593C4 CBZ X9, 0x36593E8
	0x036593C8 LDR X10, [X8 + 0xB0]
	0x036593CC ADD X10, X10, 0x8
	0x036593D0 LDUR X11, [X10 - 0x8]
	0x036593D4 CMP X11, X1
	0x036593D8 B.EQ 0x36593F8
	0x036593DC SUBS X9, X9, 0x1
	0x036593E0 ADD X10, X10, 0x10
	0x036593E4 B.NE 0x36593D0
	0x036593E8 MOVZ W2, 0x1
	0x036593EC MOV X0, X19
	0x036593F0 BL 0x1C5C788
	0x036593F4 B 0x3659408
	0x036593F8 LDR W9, [X10]
	0x036593FC ADD W9, W9, 0x1
	0x03659400 ADD X8, X8, W9, 0x4, SXTW
	0x03659404 ADD X0, X8, 0x138
	0x03659408 LDP X8, X1, [X0]
	0x0365940C MOV X0, X19
	0x03659410 BLR X8
	0x03659414 CBZ X0, 0x365944C
	0x03659418 ADRP X9, 0xAE3000
	0x0365941C LDR X9, [X9 + 0xC18]
	0x03659420 LDR X8, [X0]
	0x03659424 LDR X1, [X9]
	0x03659428 LDRB W10, [X8 + 0x130]
	0x0365942C LDRB W9, [X1 + 0x130]
	0x03659430 CMP W10, W9
	0x03659434 B.CC 0x3659458
	0x03659438 LDR X8, [X8 + 0xC8]
	0x0365943C ADD X8, X8, X9, 0x3, LSL
	0x03659440 LDUR X8, [X8 - 0x8]
	0x03659444 CMP X8, X1
	0x03659448 B.NE 0x3659458
	0x0365944C LDP X20, X19, [X31 + 0x10]
	0x03659450 LDR X30, [X31], #0x20
	0x03659454 RET
	0x03659458 BL 0x1C171E0
	0x0365945C BL 0x1C16F20
	0x03659460 STR X30, [X31 - 0x20]!
	0x03659464 STP X20, X19, [X31 + 0x10]
	0x03659468 ADRP X20, 0xD87000
	0x0365946C LDRB W8, [X20 + 0x65E]
	0x03659470 MOV X19, X0
	0x03659474 TBNZ X8, 0x0, 0x365948C
	0x03659478 ADRP X0, 0xA9A000
	0x0365947C LDR X0, [X0 + 0xE18]
	0x03659480 BL 0x1C16CF4
	0x03659484 MOVZ W8, 0x1
	0x03659488 STRB W8, [X20 + 0x65E]
	0x0365948C LDR X19, [X19 + 0x10]
	0x03659490 CBZ X19, 0x3659500
	0x03659494 ADRP X10, 0xA9A000
	0x03659498 LDR X8, [X19]
	0x0365949C LDR X10, [X10 + 0xE18]
	0x036594A0 LDRH W9, [X8 + 0x12E]
	0x036594A4 LDR X1, [X10]
	0x036594A8 CBZ X9, 0x36594CC
	0x036594AC LDR X10, [X8 + 0xB0]
	0x036594B0 ADD X10, X10, 0x8
	0x036594B4 LDUR X11, [X10 - 0x8]
	0x036594B8 CMP X11, X1
	0x036594BC B.EQ 0x36594DC
	0x036594C0 SUBS X9, X9, 0x1
	0x036594C4 ADD X10, X10, 0x10
	0x036594C8 B.NE 0x36594B4
	0x036594CC MOVZ W2, 0x1
	0x036594D0 MOV X0, X19
	0x036594D4 BL 0x1C5C788
	0x036594D8 B 0x36594EC
	0x036594DC LDR W9, [X10]
	0x036594E0 ADD W9, W9, 0x1
	0x036594E4 ADD X8, X8, W9, 0x4, SXTW
	0x036594E8 ADD X0, X8, 0x138
	0x036594EC LDP X2, X1, [X0]
	0x036594F0 MOV X0, X19
	0x036594F4 LDP X20, X19, [X31 + 0x10]
	0x036594F8 LDR X30, [X31], #0x20
	0x036594FC BR X2
	0x03659500 BL 0x1C16F20
	0x03659504 STR X30, [X31 - 0x20]!
	0x03659508 STP X20, X19, [X31 + 0x10]
	0x0365950C ADRP X20, 0xD87000
	0x03659510 LDRB W8, [X20 + 0x65F]
	0x03659514 MOV X19, X0
	0x03659518 TBNZ X8, 0x0, 0x3659530
	0x0365951C ADRP X0, 0xA9A000
	0x03659520 LDR X0, [X0 + 0xE18]
	0x03659524 BL 0x1C16CF4
	0x03659528 MOVZ W8, 0x1
	0x0365952C STRB W8, [X20 + 0x65F]
	0x03659530 LDR X19, [X19 + 0x10]
	0x03659534 CBZ X19, 0x36595A0
	0x03659538 ADRP X10, 0xA9A000
	0x0365953C LDR X8, [X19]
	0x03659540 LDR X10, [X10 + 0xE18]
	0x03659544 LDRH W9, [X8 + 0x12E]
	0x03659548 LDR X1, [X10]
	0x0365954C CBZ X9, 0x3659570
	0x03659550 LDR X10, [X8 + 0xB0]
	0x03659554 ADD X10, X10, 0x8
	0x03659558 LDUR X11, [X10 - 0x8]
	0x0365955C CMP X11, X1
	0x03659560 B.EQ 0x3659580
	0x03659564 SUBS X9, X9, 0x1
	0x03659568 ADD X10, X10, 0x10
	0x0365956C B.NE 0x3659558
	0x03659570 MOV X0, X19
	0x03659574 MOV W2, W31
	0x03659578 BL 0x1C5C788
	0x0365957C B 0x365958C
	0x03659580 LDRSW X9, [X10]
	0x03659584 ADD X8, X8, X9, 0x4, LSL
	0x03659588 ADD X0, X8, 0x138
	0x0365958C LDP X2, X1, [X0]
	0x03659590 MOV X0, X19
	0x03659594 LDP X20, X19, [X31 + 0x10]
	0x03659598 LDR X30, [X31], #0x20
	0x0365959C BR X2

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+64], X30
	003 Move [X31+72], X25
	004 Move [X31+80], X24
	005 Move [X31+88], X23
	006 Move [X31+96], X22
	007 Move [X31+104], X21
	008 Move [X31+112], X20
	009 Move [X31+120], X19
	010 Move X20, 0xD88000
	011 Move W8, [X20+1617]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {34}
	017 Move X0, 0xAE4000
	018 Move X0, [X0+3000]
	019 Call 0x1C17CF4
	020 Move X0, 0xAE4000
	021 Move X0, [X0+3008]
	022 Call 0x1C17CF4
	023 Move X0, 0xAE4000
	024 Move X0, [X0+3016]
	025 Call 0x1C17CF4
	026 Move X0, 0xAE4000
	027 Move X0, [X0+3048]
	028 Call 0x1C17CF4
	029 Move X0, 0xAE4000
	030 Move X0, [X0+3024]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X20+1617], W8
	034 Move [X31+32], X31
	035 Move [X31+40], X31
	036 Move [X31+48], X31
	037 Move X0, [X19+16]
	038 Compare X0, 0
	039 JumpIfEqual {111}
	040 Move X8, 0xAE4000
	041 Move X8, [X8+3024]
	042 Move X25, 0xAE4000
	043 Move X23, 0xAE4000
	044 Move X1, [X8]
	045 Move X25, [X25+3008]
	046 Move X23, [X23+3000]
	047 Add X8, X31, 8
	048 Call List`1<Object>.GetEnumerator, X0
	049 NotImplemented "Instruction LDUR not yet implemented."
	050 Move X8, [X31+24]
	051 Move X20, 0xAA1000
	052 Move W24, 1
	053 Move [X31+2], V0
	054 Move [X31+48], X8
	055 Move X20, [X20+3264]
	056 Move X1, [X25]
	057 Add X0, X31, 32
	058 Call Enumerator<Object>.MoveNext, X0
	059 Move TEMP, X0
	060 And TEMP, TEMP, 1
	061 Compare TEMP, 1
	062 JumpIfNotEqual {85}
	063 Move X0, [X31+48]
	064 Compare X0, 0
	065 JumpIfEqual {68}
	066 Move X1, X31
	067 Call X509CertificateImpl.Dispose, X0
	068 Call 0x1C17F20
	069 Move X22, X1
	070 Move X21, X0
	071 NotImplemented "Instruction CMP not yet implemented."
	072 Move X0, X21
	073 Call 0x3EB2AD0
	074 Move X21, X0
	075 Move X0, X20
	076 Call 0x1C17D08
	077 Move X8, [X21]
	078 Move X1, [X8]
	079 Call 0x1C18270
	080 Move TEMP, X0
	081 And TEMP, TEMP, 1
	082 Compare TEMP, 1
	083 JumpIfNotEqual {112}
	084 Call 0x3EB2AE0
	085 Move X1, [X23]
	086 Add X0, X31, 32
	087 Call Enumerator<Object>.Dispose, X0
	088 Move X8, [X19+16]
	089 Compare X8, 0
	090 JumpIfEqual {111}
	091 Move W2, [X8+24]
	092 Move W9, [X8+28]
	093 Add W9, W9, 1
	094 NotImplemented "Instruction CMP not yet implemented."
	095 Move [X8+24], W31
	096 Move [X8+28], W9
	097 Move X0, [X8+16]
	098 Move W1, W31
	099 Move X3, X31
	100 Call Array.Clear, X0, X1, X2
	101 Move X20, [X31+112]
	102 Move X19, [X31+120]
	103 Move X22, [X31+96]
	104 Move X21, [X31+104]
	105 Move X24, [X31+80]
	106 Move X23, [X31+88]
	107 Move X30, [X31+64]
	108 Move X25, [X31+72]
	109 Add X31, X31, 128
	110 Return 
	111 Call 0x1C17F20
	112 Move W0, 8
	113 Call 0x3EB2AF0
	114 Move X8, [X21]
	115 Move [X0], X8
	116 Move X1, 0x85C000
	117 Add X1, X1, 3672
	118 Move X2, X31
	119 Call 0x3EB2B00
	120 Move X21, X0
	121 Move X21, X0
	122 Move W22, W1
	123 Call 0x3EB2AE0
	124 Move X21, X0
	125 Move W24, 1
	126 Move W22, W1
	127 NotImplemented "Instruction CMP not yet implemented."
	128 Move X0, X21
	129 Call 0x3EB2AD0
	130 Move X20, [X0]
	131 Call 0x3EB2AE0
	132 Move X1, [X23]
	133 Add X0, X31, 32
	134 Call Enumerator<Object>.Dispose, X0
	135 Compare X20, 0
	136 JumpIfEqual {88}
	137 Move X0, X20
	138 Call 0x1C17F18
	139 Move X20, X31
	140 Move X21, X0
	141 Move X1, [X23]
	142 Add X0, X31, 32
	143 Call Enumerator<Object>.Dispose, X0
	144 Compare X20, 0
	145 JumpIfNotEqual {148}
	146 Move X0, X21
	147 Call 0x1D2D690
	148 Move X0, X20
	149 Call 0x1C17F18
	150 Call 0x1991590

Method: System.Void Finalize()

Disassembly:
	0x036595A0 BL 0x1C16F20
	0x036595A4 STR X30, [X31 - 0x20]!
	0x036595A8 STP X20, X19, [X31 + 0x10]
	0x036595AC ADRP X20, 0xD87000
	0x036595B0 LDRB W8, [X20 + 0x660]
	0x036595B4 MOV X19, X0
	0x036595B8 TBNZ X8, 0x0, 0x36595D0
	0x036595BC ADRP X0, 0xA9A000
	0x036595C0 LDR X0, [X0 + 0xE18]
	0x036595C4 BL 0x1C16CF4
	0x036595C8 MOVZ W8, 0x1
	0x036595CC STRB W8, [X20 + 0x660]
	0x036595D0 LDR X19, [X19 + 0x10]
	0x036595D4 CBZ X19, 0x3659644
	0x036595D8 ADRP X10, 0xA9A000
	0x036595DC LDR X8, [X19]
	0x036595E0 LDR X10, [X10 + 0xE18]
	0x036595E4 LDRH W9, [X8 + 0x12E]
	0x036595E8 LDR X1, [X10]
	0x036595EC CBZ X9, 0x3659610
	0x036595F0 LDR X10, [X8 + 0xB0]
	0x036595F4 ADD X10, X10, 0x8
	0x036595F8 LDUR X11, [X10 - 0x8]
	0x036595FC CMP X11, X1
	0x03659600 B.EQ 0x3659620
	0x03659604 SUBS X9, X9, 0x1
	0x03659608 ADD X10, X10, 0x10
	0x0365960C B.NE 0x36595F8
	0x03659610 MOVZ W2, 0x2
	0x03659614 MOV X0, X19
	0x03659618 BL 0x1C5C788
	0x0365961C B 0x3659630
	0x03659620 LDR W9, [X10]
	0x03659624 ADD W9, W9, 0x2
	0x03659628 ADD X8, X8, W9, 0x4, SXTW
	0x0365962C ADD X0, X8, 0x138
	0x03659630 LDP X2, X1, [X0]
	0x03659634 MOV X0, X19
	0x03659638 LDP X20, X19, [X31 + 0x10]
	0x0365963C LDR X30, [X31], #0x20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X0]
	006 Move X19, X0
	007 Move X9, [X8+392]
	008 Move X2, [X8+400]
	009 Move W1, W31
	010 NotImplemented "Instruction BLR not yet implemented."
	011 Move X0, X19
	012 Move X20, [X31+16]
	013 Move X19, [X31+24]
	014 Move X1, X31
	015 Move X30, [X31+32]
	016 Move X21, [X31+40]
	017 Call Object.Finalize, X0
	018 Return 
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Move X21, X0
	021 Move X0, X21
	022 Call 0x3EB2AD0
	023 Move X20, [X0]
	024 Call 0x3EB2AE0
	025 Move X0, X19
	026 Move X1, X31
	027 Call Object.Finalize, X0
	028 Compare X20, 0
	029 JumpIfNotEqual {36}
	030 Move X20, [X31+16]
	031 Move X19, [X31+24]
	032 Move X30, [X31+32]
	033 Move X21, [X31+40]
	034 Return 
	035 Move X20, X31
	036 Move X0, X20
	037 Call 0x1C17F18
	038 Move X21, X0
	039 Move X0, X19
	040 Move X1, X31
	041 Call Object.Finalize, X0
	042 Compare X20, 0
	043 JumpIfNotEqual {46}
	044 Move X0, X21
	045 Call 0x1D2D690
	046 Move X0, X20
	047 Call 0x1C17F18
	048 Call 0x1991590

