Type: System.Security.Cryptography.X509Certificates.X509Certificate2Collection

Method: System.Void .ctor()

Disassembly:
	0x03654B8C LDR X0, [X8]
	0x03654B90 LDR W8, [X0 + 0xE0]

ISIL:
	001 Move X1, X31
	002 Call CollectionBase..ctor, X0
	003 Return 

Method: System.Void .ctor(System.Security.Cryptography.X509Certificates.X509Certificate2Collection certificates)

Disassembly:
	0x03654B9C BL 0x1C16DFC
	0x03654BA0 MOV X0, X31
	0x03654BA4 BL 0x3338524
	0x03654BA8 LDR X8, [X19]
	0x03654BAC MOV X26, X0
	0x03654BB0 MOV X0, X8
	0x03654BB4 BL 0x1C16F10
	0x03654BB8 MOV X1, X31
	0x03654BBC MOV X19, X0
	0x03654BC0 BL 0x3351EFC
	0x03654BC4 LDR X0, [X20 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X1
	005 Move X1, X31
	006 Move X20, X0
	007 Call CollectionBase..ctor, X0
	008 Move X0, X20
	009 Move X1, X19
	010 Move X20, [X31+16]
	011 Move X19, [X31+24]
	012 Move X30, [X31+32]

Method: System.Security.Cryptography.X509Certificates.X509Certificate2 get_Item(System.Int32 index)

Disassembly:
	0x03654C38 BL 0x1C5C788
	0x03654C3C B 0x3654C4C
	0x03654C40 LDRSW X9, [X10]
	0x03654C44 ADD X8, X8, X9, 0x4, LSL
	0x03654C48 ADD X0, X8, 0x138
	0x03654C4C LDP X8, X1, [X0]
	0x03654C50 MOV X0, X20
	0x03654C54 BLR X8
	0x03654C58 TBZ X0, 0x0, 0x3655158
	0x03654C5C LDR X8, [X20]
	0x03654C60 LDR X1, [X24]
	0x03654C64 LDRH W9, [X8 + 0x12E]
	0x03654C68 CBZ X9, 0x3654C8C
	0x03654C6C LDR X10, [X8 + 0xB0]
	0x03654C70 ADD X10, X10, 0x8
	0x03654C74 LDUR X11, [X10 - 0x8]
	0x03654C78 CMP X11, X1
	0x03654C7C B.EQ 0x3654C9C
	0x03654C80 SUBS X9, X9, 0x1
	0x03654C84 ADD X10, X10, 0x10
	0x03654C88 B.NE 0x3654C74
	0x03654C8C MOVZ W2, 0x1
	0x03654C90 MOV X0, X20
	0x03654C94 BL 0x1C5C788
	0x03654C98 B 0x3654CAC
	0x03654C9C LDR W9, [X10]
	0x03654CA0 ADD W9, W9, 0x1
	0x03654CA4 ADD X8, X8, W9, 0x4, SXTW
	0x03654CA8 ADD X0, X8, 0x138
	0x03654CAC LDP X8, X1, [X0]
	0x03654CB0 MOV X0, X20
	0x03654CB4 BLR X8
	0x03654CB8 MOV X28, X0
	0x03654CBC CBZ X0, 0x3654CF4
	0x03654CC0 ADRP X9, 0xAE5000
	0x03654CC4 LDR X8, [X28]
	0x03654CC8 LDR X9, [X9 + 0x2A0]
	0x03654CCC LDRB W10, [X8 + 0x130]
	0x03654CD0 LDR X1, [X9]
	0x03654CD4 LDRB W9, [X1 + 0x130]
	0x03654CD8 CMP W10, W9
	0x03654CDC B.CC 0x3655204
	0x03654CE0 LDR X8, [X8 + 0xC8]
	0x03654CE4 ADD X8, X8, X9, 0x3, LSL
	0x03654CE8 LDUR X8, [X8 - 0x8]
	0x03654CEC CMP X8, X1
	0x03654CF0 B.NE 0x3655204
	0x03654CF4 CMP W21, 0xE
	0x03654CF8 B.HI 0x3654C00
	0x03654CFC ADR X8, 0xFFFFFFFFFFFFFF04
	0x03654D00 LDRH W9, [X22, X25, LSL #1]
	0x03654D04 ADD X8, X8, X9, 0x2, LSL
	0x03654D08 BR X8
	0x03654D0C CBZ X28, 0x36552D4
	0x03654D10 LDR X8, [X28]
	0x03654D14 LDP X9, X1, [X8 + 0x1D8]
	0x03654D18 MOV X0, X28
	0x03654D1C BLR X9
	0x03654D20 MOV X1, X31
	0x03654D24 BL 0x32256C4
	0x03654D28 MOV X1, X0
	0x03654D2C MOVZ W2, 0x1
	0x03654D30 MOV X0, X23
	0x03654D34 MOV X3, X26
	0x03654D38 MOV X4, X31
	0x03654D3C BL 0x3225C70
	0x03654D40 CBZ W0, 0x36550B4
	0x03654D44 LDR X8, [X28]
	0x03654D48 LDP X9, X1, [X8 + 0x1E8]
	0x03654D4C MOV X0, X28
	0x03654D50 BLR X9
	0x03654D54 MOV X1, X0
	0x03654D58 MOVZ W2, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xD8D000
	006 Move W8, [X21+1578]
	007 Move W19, W1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xAE6000
	014 Move X0, [X0+672]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+1578], W8
	018 Move TEMP, X19
	019 And TEMP, TEMP, -2147483648
	020 Compare TEMP, -2147483648
	021 JumpIfEqual {58}
	022 Move X0, [X20+16]
	023 Compare X0, 0
	024 JumpIfEqual {56}
	025 Move X8, [X0]
	026 Move X9, [X8+664]
	027 Move X1, [X8+672]
	028 NotImplemented "Instruction BLR not yet implemented."
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move X0, [X20+16]
	031 Compare X0, 0
	032 JumpIfEqual {56}
	033 Move X8, [X0]
	034 Move W1, W19
	035 Move X9, [X8+744]
	036 Move X2, [X8+752]
	037 NotImplemented "Instruction BLR not yet implemented."
	038 Compare X0, 0
	039 JumpIfEqual {51}
	040 Move X9, 0xAE6000
	041 Move X9, [X9+672]
	042 Move X8, [X0]
	043 Move X1, [X9]
	044 Move W10, [X8+304]
	045 Move W9, [X1+304]
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Move X8, [X8+200]
	048 Add X8, X8, X9
	049 NotImplemented "Instruction LDUR not yet implemented."
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Move X20, [X31+16]
	052 Move X19, [X31+24]
	053 Move X30, [X31+32]
	054 Move X21, [X31+40]
	055 Return X0
	056 Call 0x1C17F20
	057 Call 0x1C181E0
	058 Move X0, 0xAA8000
	059 Move X0, [X0+1888]
	060 Call 0x1C17D08
	061 Call 0x1C17F10
	062 Move X19, X0
	063 Move X0, 0xAE9000
	064 Move X0, [X0+2728]
	065 Move X0, 0xAA8000
	066 Move X0, [X0+1888]
	067 Call 0x1C17D08
	068 Call 0x1C17F10
	069 Move X19, X0
	070 Move X0, 0xAE9000
	071 Move X0, [X0+2736]
	072 Call 0x1C17D08
	073 Move X1, X0
	074 Move X0, X19
	075 Move X2, X31
	076 Call ArgumentOutOfRangeException..ctor, X0, X1
	077 Move X0, 0xAE9000
	078 Move X0, [X0+2744]
	079 Call 0x1C17D08
	080 Move X1, X0
	081 Move X0, X19
	082 Call 0x1C17DEC

Method: System.Int32 Add(System.Security.Cryptography.X509Certificates.X509Certificate2 certificate)

Disassembly:
	0x03654D5C MOV X0, X23
	0x03654D60 MOV X3, X26
	0x03654D64 MOV X4, X31
	0x03654D68 BL 0x3225C70
	0x03654D6C B 0x3654FD0
	0x03654D70 CBZ X28, 0x365531C
	0x03654D74 MOV X0, X28
	0x03654D78 BL 0x3651BFC
	0x03654D7C CBZ X0, 0x3655304
	0x03654D80 ADRP X8, 0xACF000
	0x03654D84 LDR X8, [X8 + 0x770]
	0x03654D88 LDR X1, [X8]
	0x03654D8C BL 0x36541C8
	0x03654D90 CBZ X0, 0x36550B4
	0x03654D94 ADRP X8, 0xAE8000
	0x03654D98 LDR X8, [X8 + 0x870]
	0x03654D9C LDR X9, [X0]
	0x03654DA0 LDR X8, [X8]
	0x03654DA4 CMP X9, X8
	0x03654DA8 B.NE 0x36550B4
	0x03654DAC BL 0x3655AD4
	0x03654DB0 LDR W8, [X31 + 0x4]
	0x03654DB4 BICS W31, W8, W0, 0x0
	0x03654DB8 B.NE 0x3654C00
	0x03654DBC B 0x36550B4
	0x03654DC0 CBZ X28, 0x36552A4
	0x03654DC4 MOV X0, X28
	0x03654DC8 MOV X1, X31

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Compare X1, 0
	004 JumpIfEqual {14}
	005 Move X0, [X0+16]
	006 Compare X0, 0
	007 JumpIfEqual {32}
	008 Move X8, [X0]
	009 Move X3, [X8+776]
	010 Move X2, [X8+784]
	011 Move X30, [X31+16]
	012 Move X19, [X31+24]
	013 CallNoReturn X3
	014 Move X0, 0xAA5000
	015 Move X0, [X0+1320]
	016 Call 0x1C17D08
	017 Call 0x1C17F10
	018 Move X19, X0
	019 Move X0, 0xAE6000
	020 Move X0, [X0+224]
	021 Call 0x1C17D08
	022 Move X1, X0
	023 Move X0, X19
	024 Move X2, X31
	025 Call ArgumentNullException..ctor, X0, X1
	026 Move X0, 0xAE9000
	027 Move X0, [X0+2752]
	028 Call 0x1C17D08
	029 Move X1, X0
	030 Move X0, X19
	031 Call 0x1C17DEC
	032 Call 0x1C17F20

Method: System.Void AddRange(System.Security.Cryptography.X509Certificates.X509Certificate2Collection certificates)

Disassembly:
	0x03654BC8 CBZ X0, 0x3655370
	0x03654BCC LDR X8, [X0]
	0x03654BD0 STR X19, [X31 + 0x20]
	0x03654BD4 LDR X9, [X8 + 0x388]
	0x03654BD8 LDR X1, [X8 + 0x390]
	0x03654BDC BLR X9
	0x03654BE0 MOV X20, X0
	0x03654BE4 CBZ X0, 0x3655374
	0x03654BE8 ADRP X24, 0xA9F000
	0x03654BEC LDR X24, [X24 + 0xE18]
	0x03654BF0 LDR X8, [X31 + 0x30]
	0x03654BF4 ADRP X22, 0xFFFFFFFFFD543000
	0x03654BF8 ADD X22, X22, 0x60C
	0x03654BFC STR X8, [X31 + 0x8]
	0x03654C00 LDR X8, [X20]
	0x03654C04 LDR X1, [X24]
	0x03654C08 LDRH W9, [X8 + 0x12E]
	0x03654C0C CBZ X9, 0x3654C30
	0x03654C10 LDR X10, [X8 + 0xB0]
	0x03654C14 ADD X10, X10, 0x8
	0x03654C18 LDUR X11, [X10 - 0x8]
	0x03654C1C CMP X11, X1
	0x03654C20 B.EQ 0x3654C40
	0x03654C24 SUBS X9, X9, 0x1
	0x03654C28 ADD X10, X10, 0x10
	0x03654C2C B.NE 0x3654C18
	0x03654C30 MOV X0, X20
	0x03654C34 MOV W2, W31

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Compare X1, 0
	004 JumpIfEqual {14}
	005 Move X0, [X0+16]
	006 Compare X0, 0
	007 JumpIfEqual {32}
	008 Move X8, [X0]
	009 Move X3, [X8+792]
	010 Move X2, [X8+800]
	011 Move X30, [X31+16]
	012 Move X19, [X31+24]
	013 CallNoReturn X3
	014 Move X0, 0xAA5000
	015 Move X0, [X0+1320]
	016 Call 0x1C17D08
	017 Call 0x1C17F10
	018 Move X19, X0
	019 Move X0, 0xAE9000
	020 Move X0, [X0+2712]
	021 Call 0x1C17D08
	022 Move X1, X0
	023 Move X0, X19
	024 Move X2, X31
	025 Call ArgumentNullException..ctor, X0, X1
	026 Move X0, 0xAE9000
	027 Move X0, [X0+2720]
	028 Call 0x1C17D08
	029 Move X1, X0
	030 Move X0, X19
	031 Call 0x1C17DEC
	032 Call 0x1C17F20

Method: System.Boolean Contains(System.Security.Cryptography.X509Certificates.X509Certificate2 certificate)

Disassembly:
	0x03654DCC BL 0x326B63C
	0x03654DD0 MOV X1, X0
	0x03654DD4 MOVZ W2, 0x1
	0x03654DD8 MOV X0, X23
	0x03654DDC MOV X3, X26
	0x03654DE0 MOV X4, X31
	0x03654DE4 BL 0x3225C70
	0x03654DE8 B 0x3654FD0
	0x03654DEC MOV X1, X28
	0x03654DF0 BL 0x365410C
	0x03654DF4 MOV X1, X0
	0x03654DF8 MOVZ W2, 0x1
	0x03654DFC MOV X0, X23
	0x03654E00 MOV X3, X26
	0x03654E04 MOV X4, X31
	0x03654E08 BL 0x3225C70
	0x03654E0C B 0x3654FD0
	0x03654E10 CBZ X28, 0x3655238
	0x03654E14 MOV X0, X28
	0x03654E18 BL 0x3651BFC
	0x03654E1C CBZ X0, 0x3655274
	0x03654E20 LDR X0, [X0 + 0x10]
	0x03654E24 CBZ X0, 0x36552B0
	0x03654E28 LDR X8, [X0]
	0x03654E2C LDR X1, [X8 + 0x2A0]
	0x03654E30 LDR X9, [X8 + 0x298]
	0x03654E34 BLR X9
	0x03654E38 B 0x3654FD0
	0x03654E3C CBZ X28, 0x3655268
	0x03654E40 MOV X0, X28
	0x03654E44 MOV X1, X31
	0x03654E48 BL 0x326B698
	0x03654E4C MOV X1, X0
	0x03654E50 MOVZ W2, 0x1
	0x03654E54 MOV X0, X23
	0x03654E58 MOV X3, X26
	0x03654E5C MOV X4, X31
	0x03654E60 BL 0x3225C70
	0x03654E64 B 0x3654FD0
	0x03654E68 CBZ X28, 0x3655244
	0x03654E6C MOVZ W2, 0x1
	0x03654E70 MOV X0, X28
	0x03654E74 MOV W1, W31
	0x03654E78 BL 0x3652898
	0x03654E7C CBZ X0, 0x365525C
	0x03654E80 MOVZ W2, 0x3
	0x03654E84 MOV X1, X23
	0x03654E88 MOV X3, X31
	0x03654E8C BL 0x322BD40
	0x03654E90 TBZ X0, 0x1F, 0x36550B4
	0x03654E94 B 0x3654C00
	0x03654E98 CBZ X28, 0x3655250
	0x03654E9C MOV X0, X28
	0x03654EA0 MOV X1, X31
	0x03654EA4 BL 0x326BF08
	0x03654EA8 ADRP X8, 0xAA0000
	0x03654EAC LDR X8, [X8 + 0x9F0]
	0x03654EB0 MOV X27, X0
	0x03654EB4 LDR X0, [X8]
	0x03654EB8 LDR W8, [X0 + 0xE0]
	0x03654EBC CBNZ W8, 0x3654EC4
	0x03654EC0 BL 0x1C16DFC
	0x03654EC4 LDR X0, [X31 + 0x18]
	0x03654EC8 MOV X1, X27
	0x03654ECC MOV X2, X31
	0x03654ED0 BL 0x3363148
	0x03654ED4 B 0x36550B0
	0x03654ED8 CBZ X28, 0x36552E0
	0x03654EDC MOV X0, X28
	0x03654EE0 BL 0x365272C
	0x03654EE4 ADRP X19, 0xAE8000
	0x03654EE8 LDR X19, [X19 + 0xAF0]
	0x03654EEC CBZ X0, 0x36552BC
	0x03654EF0 LDR X8, [X0]
	0x03654EF4 LDP X9, X2, [X8 + 0x188]
	0x03654EF8 MOVZ W1, 0x1
	0x03654EFC BLR X9
	0x03654F00 MOV X29, X0
	0x03654F04 LDR X0, [X19]
	0x03654F08 LDR W8, [X0 + 0xE0]
	0x03654F0C CBNZ W8, 0x3654F14
	0x03654F10 BL 0x1C16DFC
	0x03654F14 CBZ X29, 0x3655298
	0x03654F18 LDR X8, [X19]
	0x03654F1C LDR X8, [X8 + 0xB8]
	0x03654F20 LDR X1, [X8]
	0x03654F24 MOVZ W2, 0x1
	0x03654F28 MOV X0, X29
	0x03654F2C MOV X3, X31
	0x03654F30 BL 0x322ADF0
	0x03654F34 MOV X29, X0
	0x03654F38 CBZ X0, 0x36552EC
	0x03654F3C LDR W8, [X29 + 0x18]
	0x03654F40 CMP W8, 0x1
	0x03654F44 B.LT 0x3654C00
	0x03654F48 MOV W19, W31
	0x03654F4C CMP W19, W8
	0x03654F50 B.CS 0x3655214
	0x03654F54 ADD X8, X29, W19, 0x3, SXTW
	0x03654F58 LDR X27, [X8 + 0x20]
	0x03654F5C CBZ X27, 0x3655220
	0x03654F60 MOVZ W1, 0x3D
	0x03654F64 MOV X0, X27
	0x03654F68 MOV X2, X31
	0x03654F6C BL 0x322BD98
	0x03654F70 MOV W2, W0
	0x03654F74 MOVZ W3, 0x3
	0x03654F78 MOV X0, X27
	0x03654F7C MOV X1, X23
	0x03654F80 MOV X4, X31
	0x03654F84 BL 0x322C310
	0x03654F88 TBZ X0, 0x1F, 0x36550B4
	0x03654F8C LDR W8, [X29 + 0x18]
	0x03654F90 ADD W19, W19, 0x1
	0x03654F94 CMP W19, W8
	0x03654F98 B.LT 0x3654F4C
	0x03654F9C B 0x3654C00
	0x03654FA0 CBZ X28, 0x36552F8
	0x03654FA4 LDR X8, [X28]
	0x03654FA8 LDR X1, [X8 + 0x250]
	0x03654FAC LDR X9, [X8 + 0x248]
	0x03654FB0 MOV X0, X28
	0x03654FB4 BLR X9
	0x03654FB8 MOV X1, X0
	0x03654FBC MOVZ W2, 0x1
	0x03654FC0 MOV X0, X23
	0x03654FC4 MOV X3, X26
	0x03654FC8 MOV X4, X31
	0x03654FCC BL 0x3225C70
	0x03654FD0 CBNZ W0, 0x3654C00
	0x03654FD4 B 0x36550B4
	0x03654FD8 CBZ X28, 0x36552C8
	0x03654FDC MOV X0, X28
	0x03654FE0 MOV X1, X31
	0x03654FE4 BL 0x326BF08
	0x03654FE8 ADRP X8, 0xAA0000
	0x03654FEC LDR X8, [X8 + 0x9F0]
	0x03654FF0 MOV X27, X0
	0x03654FF4 LDR X0, [X8]
	0x03654FF8 LDR W8, [X0 + 0xE0]
	0x03654FFC CBNZ W8, 0x3655004
	0x03655000 BL 0x1C16DFC
	0x03655004 LDR X0, [X31 + 0x18]
	0x03655008 MOV X1, X27
	0x0365500C MOV X2, X31
	0x03655010 BL 0x336328C
	0x03655014 TBZ X0, 0x0, 0x3654C00
	0x03655018 MOV X0, X28
	0x0365501C MOV X1, X31
	0x03655020 BL 0x326C0EC
	0x03655024 ADRP X8, 0xA9F000
	0x03655028 LDR X8, [X8 + 0x9F0]
	0x0365502C MOV X27, X0
	0x03655030 LDR X0, [X8]
	0x03655034 LDR W8, [X0 + 0xE0]
	0x03655038 CBNZ W8, 0x3655040
	0x0365503C BL 0x1C16DFC
	0x03655040 LDR X0, [X31 + 0x18]
	0x03655044 MOV X1, X27
	0x03655048 MOV X2, X31
	0x0365504C BL 0x33631B4
	0x03655050 B 0x36550B0
	0x03655054 CBZ X28, 0x365528C
	0x03655058 MOV X0, X28
	0x0365505C BL 0x3651BFC
	0x03655060 CBZ X0, 0x3655280
	0x03655064 LDR X1, [X31 + 0x10]
	0x03655068 BL 0x36541C8
	0x0365506C CBNZ X0, 0x36550B4
	0x03655070 B 0x3654C00
	0x03655074 CBZ X28, 0x3655310
	0x03655078 MOV X0, X28
	0x0365507C MOV X1, X31
	0x03655080 BL 0x326C0EC
	0x03655084 ADRP X8, 0xA9F000
	0x03655088 LDR X8, [X8 + 0x9F0]
	0x0365508C MOV X27, X0
	0x03655090 LDR X0, [X8]
	0x03655094 LDR W8, [X0 + 0xE0]
	0x03655098 CBNZ W8, 0x36550A0
	0x0365509C BL 0x1C16DFC
	0x036550A0 LDR X0, [X31 + 0x18]
	0x036550A4 MOV X1, X27
	0x036550A8 MOV X2, X31
	0x036550AC BL 0x3363220
	0x036550B0 TBZ X0, 0x0, 0x3654C00
	0x036550B4 LDR W8, [X31 + 0x28]
	0x036550B8 TBZ X8, 0x0, 0x36550E0
	0x036550BC CBZ X28, 0x36550F4
	0x036550C0 MOV X0, X28
	0x036550C4 BL 0x3653980
	0x036550C8 TBZ X0, 0x0, 0x3654C00
	0x036550CC LDR X0, [X31 + 0x20]
	0x036550D0 CBZ X0, 0x36550FC
	0x036550D4 MOV X1, X28
	0x036550D8 BL 0x3653D5C
	0x036550DC B 0x3654C00
	0x036550E0 LDR X0, [X31 + 0x20]
	0x036550E4 CBZ X0, 0x365522C
	0x036550E8 MOV X1, X28
	0x036550EC BL 0x3653D5C
	0x036550F0 B 0x3654C00
	0x036550F4 BL 0x1C16F20
	0x036550F8 B 0x3655464
	0x036550FC BL 0x1C16F20
	0x03655100 B 0x3655464
	0x03655104 B 0x3655110
	0x03655108 B 0x3655110

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0xD8D000
	009 Move W8, [X21+1579]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {27}
	016 Move X0, 0xAA0000
	017 Move X0, [X0+3584]
	018 Call 0x1C17CF4
	019 Move X0, 0xAA0000
	020 Move X0, [X0+3608]
	021 Call 0x1C17CF4
	022 Move X0, 0xAE6000
	023 Move X0, [X0+672]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X21+1579], W8
	027 Compare X20, 0
	028 JumpIfEqual {155}
	029 Move X0, [X19+16]
	030 Compare X0, 0
	031 JumpIfEqual {173}
	032 Move X8, [X0]
	033 Move X22, 0xAA0000
	034 Move X9, [X8+904]
	035 Move X1, [X8+912]
	036 Move X22, [X22+3584]
	037 NotImplemented "Instruction BLR not yet implemented."
	038 Move X19, X0
	039 Compare X0, 0
	040 JumpIfEqual {174}
	041 Move X23, 0xAA0000
	042 Move X24, 0xAE6000
	043 Move X23, [X23+3608]
	044 Move X24, [X24+672]
	045 Move X8, [X19]
	046 Move X1, [X23]
	047 NotImplemented "Instruction LDRH not yet implemented."
	048 Compare X9, 0
	049 JumpIfEqual {56}
	050 Move X10, [X8+176]
	051 Add X10, X10, 8
	052 NotImplemented "Instruction LDUR not yet implemented."
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Subtract X9, X9, 1
	055 Add X10, X10, 16
	056 Move X0, X19
	057 Move W2, W31
	058 Call 0x1C5D788
	059 NotImplemented "Instruction LDRSW not yet implemented."
	060 Add X8, X8, X9
	061 Add X0, X8, 312
	062 Move X8, [X0]
	063 Move X1, [X0+8]
	064 Move X0, X19
	065 NotImplemented "Instruction BLR not yet implemented."
	066 Move W21, W0
	067 Move TEMP, X0
	068 And TEMP, TEMP, 1
	069 Compare TEMP, 1
	070 JumpIfNotEqual {113}
	071 Move X8, [X19]
	072 Move X1, [X23]
	073 NotImplemented "Instruction LDRH not yet implemented."
	074 Compare X9, 0
	075 JumpIfEqual {82}
	076 Move X10, [X8+176]
	077 Add X10, X10, 8
	078 NotImplemented "Instruction LDUR not yet implemented."
	079 NotImplemented "Instruction CMP not yet implemented."
	080 Subtract X9, X9, 1
	081 Add X10, X10, 16
	082 Move W2, 1
	083 Move X0, X19
	084 Call 0x1C5D788
	085 Move W9, [X10]
	086 Add W9, W9, 1
	087 Add X8, X8, W9
	088 Add X0, X8, 312
	089 Move X8, [X0]
	090 Move X1, [X0+8]
	091 Move X0, X19
	092 NotImplemented "Instruction BLR not yet implemented."
	093 Compare X0, 0
	094 JumpIfEqual {154}
	095 Move X8, [X0]
	096 Move X1, [X24]
	097 Move W10, [X8+304]
	098 Move W9, [X1+304]
	099 NotImplemented "Instruction CMP not yet implemented."
	100 Move X10, [X8+200]
	101 Add X9, X10, X9
	102 NotImplemented "Instruction LDUR not yet implemented."
	103 NotImplemented "Instruction CMP not yet implemented."
	104 Move X9, [X8+456]
	105 Move X2, [X8+464]
	106 Move X1, X20
	107 NotImplemented "Instruction BLR not yet implemented."
	108 Move TEMP, X0
	109 And TEMP, TEMP, 1
	110 Compare TEMP, 1
	111 JumpIfNotEqual {45}
	112 Move X20, X31
	113 Move X20, X31
	114 Move W21, W31
	115 Move X1, [X22]
	116 Move X0, X19
	117 Call 0x1C17E00
	118 Compare X0, 0
	119 JumpIfEqual {142}
	120 Move X8, [X0]
	121 Move X1, [X22]
	122 Move X19, X0
	123 NotImplemented "Instruction LDRH not yet implemented."
	124 Compare X9, 0
	125 JumpIfEqual {132}
	126 Move X10, [X8+176]
	127 Add X10, X10, 8
	128 NotImplemented "Instruction LDUR not yet implemented."
	129 NotImplemented "Instruction CMP not yet implemented."
	130 Subtract X9, X9, 1
	131 Add X10, X10, 16
	132 Move X0, X19
	133 Move W2, W31
	134 Call 0x1C5D788
	135 NotImplemented "Instruction LDRSW not yet implemented."
	136 Add X8, X8, X9
	137 Add X0, X8, 312
	138 Move X8, [X0]
	139 Move X1, [X0+8]
	140 Move X0, X19
	141 NotImplemented "Instruction BLR not yet implemented."
	142 Compare X20, 0
	143 JumpIfNotEqual {175}
	144 And W0, W21, 1
	145 Move X20, [X31+48]
	146 Move X19, [X31+56]
	147 Move X22, [X31+32]
	148 Move X21, [X31+40]
	149 Move X24, [X31+16]
	150 Move X23, [X31+24]
	151 Move X30, [X31+64]
	152 Return X0
	153 Call 0x1C181E0
	154 Call 0x1C17F20
	155 Move X0, 0xAA5000
	156 Move X0, [X0+1320]
	157 Call 0x1C17D08
	158 Call 0x1C17F10
	159 Move X19, X0
	160 Move X0, 0xAE5000
	161 Move X0, [X0+224]
	162 Call 0x1C17D08
	163 Move X1, X0
	164 Move X0, X19
	165 Move X2, X31
	166 Call ArgumentNullException..ctor, X0, X1
	167 Move X0, 0xAE8000
	168 Move X0, [X0+2760]
	169 Call 0x1C17D08
	170 Move X1, X0
	171 Move X0, X19
	172 Call 0x1C17DEC
	173 Call 0x1C17F20
	174 Call 0x1C17F20
	175 Move X0, X20
	176 Call 0x1C17F18
	177 Move X21, X0
	178 NotImplemented "Instruction CMP not yet implemented."
	179 Move X0, X21
	180 Call 0x3EB2AD0
	181 Move X20, [X0]
	182 Call 0x3EB2AE0
	183 Move X20, X31
	184 Move X21, X0
	185 Move X1, [X22]
	186 Move X0, X19
	187 Call 0x1C17E00
	188 Move X19, X0
	189 Compare X0, 0
	190 JumpIfEqual {212}
	191 Move X8, [X19]
	192 Move X1, [X22]
	193 NotImplemented "Instruction LDRH not yet implemented."
	194 Compare X9, 0
	195 JumpIfEqual {202}
	196 Move X10, [X8+176]
	197 Add X10, X10, 8
	198 NotImplemented "Instruction LDUR not yet implemented."
	199 NotImplemented "Instruction CMP not yet implemented."
	200 Subtract X9, X9, 1
	201 Add X10, X10, 16
	202 Move X0, X19
	203 Move W2, W31
	204 Call 0x1C5D788
	205 NotImplemented "Instruction LDRSW not yet implemented."
	206 Add X8, X8, X9
	207 Add X0, X8, 312
	208 Move X8, [X0]
	209 Move X1, [X0+8]
	210 Move X0, X19
	211 NotImplemented "Instruction BLR not yet implemented."
	212 Compare X20, 0
	213 JumpIfNotEqual {216}
	214 Move X0, X21
	215 Call 0x1D2D690
	216 Move X0, X20
	217 Call 0x1C17F18
	218 Call 0x1991590

Method: System.String GetKeyIdentifier(System.Security.Cryptography.X509Certificates.X509Certificate2 x)

Disassembly:
	0x0365510C B 0x3655110
	0x03655110 MOV X28, X0
	0x03655114 CMP W1, 0x1
	0x03655118 B.NE 0x3655A14
	0x0365511C MOV X0, X28
	0x03655120 BL 0x3EB1AD0
	0x03655124 MOV X28, X0
	0x03655128 ADRP X0, 0xAA4000
	0x0365512C LDR X0, [X0 + 0xCC0]
	0x03655130 BL 0x1C16D08
	0x03655134 LDR X8, [X28]
	0x03655138 LDR X1, [X8]
	0x0365513C BL 0x1C17270
	0x03655140 TBZ X0, 0x0, 0x3655438
	0x03655144 LDR X8, [X28]
	0x03655148 STR X8, [X31 + 0x8]
	0x0365514C BL 0x3EB1AE0
	0x03655150 STR W31, [X31 + 0x38]
	0x03655154 B 0x3654C00
	0x03655158 LDR X8, [X31 + 0x8]
	0x0365515C ADRP X22, 0xA9E000
	0x03655160 LDR X19, [X31 + 0x20]
	0x03655164 MOV X21, X31
	0x03655168 STR X8, [X31 + 0x30]
	0x0365516C LDR X22, [X22 + 0xE00]
	0x03655170 LDR X1, [X22]
	0x03655174 MOV X0, X20
	0x03655178 BL 0x1C16E00
	0x0365517C CBZ X0, 0x36551DC
	0x03655180 LDR X8, [X0]
	0x03655184 LDR X1, [X22]
	0x03655188 MOV X20, X0
	0x0365518C LDRH W9, [X8 + 0x12E]
	0x03655190 CBZ X9, 0x36551B4
	0x03655194 LDR X10, [X8 + 0xB0]
	0x03655198 ADD X10, X10, 0x8
	0x0365519C LDUR X11, [X10 - 0x8]
	0x036551A0 CMP X11, X1
	0x036551A4 B.EQ 0x36551C4
	0x036551A8 SUBS X9, X9, 0x1
	0x036551AC ADD X10, X10, 0x10
	0x036551B0 B.NE 0x365519C
	0x036551B4 MOV X0, X20
	0x036551B8 MOV W2, W31
	0x036551BC BL 0x1C5C788
	0x036551C0 B 0x36551D0
	0x036551C4 LDRSW X9, [X10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xD8C000
	006 Move W8, [X20+1580]
	007 Move X19, X1
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0xAE8000
	013 Move X0, [X0+2168]
	014 Call 0x1C17CF4
	015 Move X0, 0xACF000
	016 Move X0, [X0+1616]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+1580], W8
	020 Compare X19, 0
	021 JumpIfEqual {58}
	022 Move X0, X19
	023 Call X509Certificate2.get_Extensions, X0
	024 Compare X0, 0
	025 JumpIfEqual {58}
	026 Move X8, 0xACF000
	027 Move X8, [X8+1616]
	028 Move X21, 0xAE8000
	029 Move X1, [X8]
	030 Move X21, [X21+2168]
	031 Call X509ExtensionCollection.get_Item, X0, X1
	032 Compare X0, 0
	033 JumpIfEqual {38}
	034 Move X8, [X21]
	035 Move X9, [X0]
	036 Move X20, X0
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move X0, X19
	039 Call X509Certificate2.get_PublicKey, X0
	040 Move X8, [X21]
	041 Move X19, X0
	042 Move X0, X8
	043 Call 0x1C17F10
	044 Move W2, 2
	045 Move X1, X19
	046 Move W3, W31
	047 Move X20, X0
	048 Call X509SubjectKeyIdentifierExtension..ctor, X0, X1, X2, X3
	049 Compare X20, 0
	050 JumpIfEqual {58}
	051 Move X0, X20
	052 Move X20, [X31+16]
	053 Move X19, [X31+24]
	054 Move X30, [X31+32]
	055 Move X21, [X31+40]
	056 Call X509SubjectKeyIdentifierExtension.get_SubjectKeyIdentifier, X0
	057 Return X0
	058 Call 0x1C17F20

Method: System.Security.Cryptography.X509Certificates.X509Certificate2Collection Find(System.Security.Cryptography.X509Certificates.X509FindType findType, System.Object findValue, System.Boolean validOnly)

Disassembly:
	0x03655990 B 0x3655A04
	0x03655994 B 0x3655A10
	0x03655998 B 0x3655A10
	0x0365599C B 0x3655A10
	0x036559A0 B 0x3655A04
	0x036559A4 B 0x3655A10
	0x036559A8 B 0x3655A10
	0x036559AC B 0x3655A04
	0x036559B0 B 0x3655A04
	0x036559B4 B 0x3655A10
	0x036559B8 B 0x3655A04
	0x036559BC B 0x3655A10
	0x036559C0 B 0x3655A10
	0x036559C4 B 0x3655A04
	0x036559C8 B 0x3655A04
	0x036559CC B 0x3655A10
	0x036559D0 B 0x3655A10
	0x036559D4 B 0x3655A04
	0x036559D8 B 0x3655A10
	0x036559DC B 0x3655A10
	0x036559E0 B 0x3655A04
	0x036559E4 B 0x3655A10
	0x036559E8 B 0x3655A10
	0x036559EC B 0x3655A04
	0x036559F0 B 0x3655A10
	0x036559F4 B 0x3655A10
	0x036559F8 B 0x3655A04
	0x036559FC B 0x3655A04
	0x03655A00 B 0x3655A10
	0x03655A04 MOV X28, X0
	0x03655A08 B 0x3655A1C
	0x03655A0C B 0x3655A10
	0x03655A10 MOV X28, X0
	0x03655A14 LDR X8, [X31 + 0x8]
	0x03655A18 STR X8, [X31 + 0x30]
	0x03655A1C ADRP X22, 0xA9E000
	0x03655A20 LDR X19, [X31 + 0x20]
	0x03655A24 LDR X22, [X22 + 0xE00]
	0x03655A28 CMP W1, 0x1
	0x03655A2C B.NE 0x3655A44
	0x03655A30 MOV X0, X28
	0x03655A34 BL 0x3EB1AD0
	0x03655A38 LDR X21, [X0]
	0x03655A3C BL 0x3EB1AE0
	0x03655A40 B 0x3655170
	0x03655A44 MOV X21, X31
	0x03655A48 B 0x3655A50
	0x03655A4C MOV X28, X0
	0x03655A50 ADRP X22, 0xA9E000
	0x03655A54 LDR X22, [X22 + 0xE00]
	0x03655A58 LDR X1, [X22]
	0x03655A5C MOV X0, X20
	0x03655A60 BL 0x1C16E00
	0x03655A64 MOV X19, X0
	0x03655A68 CBZ X0, 0x3655AC4
	0x03655A6C LDR X8, [X19]
	0x03655A70 LDR X1, [X22]
	0x03655A74 LDRH W9, [X8 + 0x12E]
	0x03655A78 CBZ X9, 0x3655A9C
	0x03655A7C LDR X10, [X8 + 0xB0]
	0x03655A80 ADD X10, X10, 0x8
	0x03655A84 LDUR X11, [X10 - 0x8]
	0x03655A88 CMP X11, X1
	0x03655A8C B.EQ 0x3655AAC
	0x03655A90 SUBS X9, X9, 0x1
	0x03655A94 ADD X10, X10, 0x10
	0x03655A98 B.NE 0x3655A84
	0x03655A9C MOV X0, X19
	0x03655AA0 MOV W2, W31
	0x03655AA4 BL 0x1C5C788
	0x03655AA8 B 0x3655AB8
	0x03655AAC LDRSW X9, [X10]
	0x03655AB0 ADD X8, X8, X9, 0x4, LSL
	0x03655AB4 ADD X0, X8, 0x138
	0x03655AB8 LDP X8, X1, [X0]
	0x03655ABC MOV X0, X19
	0x03655AC0 BLR X8
	0x03655AC4 CBZ X21, 0x3655908
	0x03655AC8 MOV X0, X21
	0x03655ACC BL 0x1C16F18
	0x03655AD0 BL 0x1990590
	0x03655AD4 STP X30, X19, [X31 - 0x10]!
	0x03655AD8 LDR W8, [X0 + 0x28]
	0x03655ADC ORR W8, W8, 0x4
	0x03655AE0 CMP W8, 0x4
	0x03655AE4 B.NE 0x3655AF4
	0x03655AE8 LDR W0, [X0 + 0x24]
	0x03655AEC LDP X30, X19, [X31], #0x10
	0x03655AF0 RET
	0x03655AF4 ADRP X0, 0xACB000
	0x03655AF8 LDR X0, [X0 + 0xCE0]
	0x03655AFC BL 0x1C16D08
	0x03655B00 BL 0x1C16F10
	0x03655B04 MOV X19, X0
	0x03655B08 ADRP X0, 0xAE7000
	0x03655B0C LDR X0, [X0 + 0x988]
	0x03655B10 BL 0x1C16D08
	0x03655B14 MOV X1, X0
	0x03655B18 MOV X0, X19
	0x03655B1C MOV X2, X31
	0x03655B20 BL 0x3252170
	0x03655B24 ADRP X0, 0xAE7000
	0x03655B28 LDR X0, [X0 + 0xB40]
	0x03655B2C BL 0x1C16D08
	0x03655B30 MOV X1, X0
	0x03655B34 MOV X0, X19
	0x03655B38 BL 0x1C16DEC
	0x03655B3C STP X30, X21, [X31 - 0x20]!
	0x03655B40 STP X20, X19, [X31 + 0x10]
	0x03655B44 ADRP X20, 0xD8B000
	0x03655B48 ADRP X21, 0xAE7000
	0x03655B4C LDRB W8, [X20 + 0x62E]
	0x03655B50 LDR X21, [X21 + 0xB48]
	0x03655B54 MOV X19, X0
	0x03655B58 TBNZ X8, 0x0, 0x3655B70
	0x03655B5C ADRP X0, 0xAE7000
	0x03655B60 LDR X0, [X0 + 0xB48]
	0x03655B64 BL 0x1C16CF4
	0x03655B68 MOVZ W8, 0x1
	0x03655B6C STRB W8, [X20 + 0x62E]
	0x03655B70 LDR X0, [X21]
	0x03655B74 BL 0x1C16F10
	0x03655B78 MOV X1, X19
	0x03655B7C MOV X20, X0
	0x03655B80 BL 0x3655B94
	0x03655B84 MOV X0, X20
	0x03655B88 LDP X20, X19, [X31 + 0x10]
	0x03655B8C LDP X30, X21, [X31], #0x20
	0x03655B90 RET
	0x03655B94 STP X30, X21, [X31 - 0x20]!
	0x03655B98 STP X20, X19, [X31 + 0x10]
	0x03655B9C ADRP X21, 0xD8B000
	0x03655BA0 LDRB W8, [X21 + 0x630]
	0x03655BA4 MOV X20, X1
	0x03655BA8 MOV X19, X0
	0x03655BAC TBNZ X8, 0x0, 0x3655BC4
	0x03655BB0 ADRP X0, 0xAA6000
	0x03655BB4 LDR X0, [X0 + 0xDB8]
	0x03655BB8 BL 0x1C16CF4
	0x03655BBC MOVZ W8, 0x1
	0x03655BC0 STRB W8, [X21 + 0x630]
	0x03655BC4 MOV X0, X19
	0x03655BC8 MOV X1, X31
	0x03655BCC BL 0x33BDD8C
	0x03655BD0 CBZ X20, 0x3655C44
	0x03655BD4 ADRP X10, 0xAA6000
	0x03655BD8 LDR X8, [X20]
	0x03655BDC LDR X10, [X10 + 0xDB8]
	0x03655BE0 LDRH W9, [X8 + 0x12E]
	0x03655BE4 LDR X1, [X10]
	0x03655BE8 CBZ X9, 0x3655C0C
	0x03655BEC LDR X10, [X8 + 0xB0]
	0x03655BF0 ADD X10, X10, 0x8
	0x03655BF4 LDUR X11, [X10 - 0x8]
	0x03655BF8 CMP X11, X1
	0x03655BFC B.EQ 0x3655C1C
	0x03655C00 SUBS X9, X9, 0x1
	0x03655C04 ADD X10, X10, 0x10
	0x03655C08 B.NE 0x3655BF4
	0x03655C0C MOV X0, X20
	0x03655C10 MOV W2, W31
	0x03655C14 BL 0x1C5C788
	0x03655C18 B 0x3655C28
	0x03655C1C LDRSW X9, [X10]
	0x03655C20 ADD X8, X8, X9, 0x4, LSL
	0x03655C24 ADD X0, X8, 0x138
	0x03655C28 LDP X8, X1, [X0]
	0x03655C2C MOV X0, X20
	0x03655C30 BLR X8
	0x03655C34 STR X0, [X19 + 0x10]
	0x03655C38 LDP X20, X19, [X31 + 0x10]
	0x03655C3C LDP X30, X21, [X31], #0x20
	0x03655C40 RET
	0x03655C44 BL 0x1C16F20
	0x03655C48 STR X30, [X31 - 0x20]!
	0x03655C4C STP X20, X19, [X31 + 0x10]
	0x03655C50 ADRP X19, 0xD8B000
	0x03655C54 ADRP X20, 0xA9E000
	0x03655C58 LDRB W8, [X19 + 0x62F]
	0x03655C5C LDR X20, [X20 + 0xAC8]
	0x03655C60 TBNZ X8, 0x0, 0x3655C84
	0x03655C64 ADRP X0, 0xA9E000
	0x03655C68 LDR X0, [X0 + 0xAC8]
	0x03655C6C BL 0x1C16CF4
	0x03655C70 ADRP X0, 0xAE7000
	0x03655C74 LDR X0, [X0 + 0xAF0]
	0x03655C78 BL 0x1C16CF4
	0x03655C7C MOVZ W8, 0x1
	0x03655C80 STRB W8, [X19 + 0x62F]
	0x03655C84 LDR X0, [X20]
	0x03655C88 MOVZ W1, 0x1
	0x03655C8C BL 0x1C16D6C
	0x03655C90 MOV X19, X0
	0x03655C94 MOV X0, X31
	0x03655C98 BL 0x33C1548
	0x03655C9C CBZ X19, 0x3655CCC
	0x03655CA0 LDR W8, [X19 + 0x18]
	0x03655CA4 CBZ W8, 0x3655CD0
	0x03655CA8 ADRP X8, 0xAE7000
	0x03655CAC LDR X8, [X8 + 0xAF0]
	0x03655CB0 STR X0, [X19 + 0x20]
	0x03655CB4 LDR X8, [X8]
	0x03655CB8 LDR X8, [X8 + 0xB8]
	0x03655CBC STR X19, [X8]
	0x03655CC0 LDP X20, X19, [X31 + 0x10]
	0x03655CC4 LDR X30, [X31], #0x20
	0x03655CC8 RET
	0x03655CCC BL 0x1C16F20
	0x03655CD0 BL 0x1C16F28
	0x03655CD4 STR X30, [X31 - 0x20]!
	0x03655CD8 STP X20, X19, [X31 + 0x10]
	0x03655CDC ADRP X20, 0xD8B000
	0x03655CE0 LDRB W8, [X20 + 0x631]
	0x03655CE4 MOV X19, X0
	0x03655CE8 TBNZ X8, 0x0, 0x3655D0C
	0x03655CEC ADRP X0, 0xA9E000
	0x03655CF0 LDR X0, [X0 + 0xE18]
	0x03655CF4 BL 0x1C16CF4
	0x03655CF8 ADRP X0, 0xAE4000
	0x03655CFC LDR X0, [X0 + 0x2A0]
	0x03655D00 BL 0x1C16CF4
	0x03655D04 MOVZ W8, 0x1
	0x03655D08 STRB W8, [X20 + 0x631]
	0x03655D0C LDR X19, [X19 + 0x10]
	0x03655D10 CBZ X19, 0x3655DC0
	0x03655D14 ADRP X10, 0xA9E000
	0x03655D18 LDR X8, [X19]
	0x03655D1C LDR X10, [X10 + 0xE18]
	0x03655D20 LDRH W9, [X8 + 0x12E]
	0x03655D24 LDR X1, [X10]
	0x03655D28 CBZ X9, 0x3655D4C
	0x03655D2C LDR X10, [X8 + 0xB0]
	0x03655D30 ADD X10, X10, 0x8
	0x03655D34 LDUR X11, [X10 - 0x8]
	0x03655D38 CMP X11, X1
	0x03655D3C B.EQ 0x3655D5C
	0x03655D40 SUBS X9, X9, 0x1
	0x03655D44 ADD X10, X10, 0x10
	0x03655D48 B.NE 0x3655D34
	0x03655D4C MOVZ W2, 0x1
	0x03655D50 MOV X0, X19
	0x03655D54 BL 0x1C5C788
	0x03655D58 B 0x3655D6C
	0x03655D5C LDR W9, [X10]
	0x03655D60 ADD W9, W9, 0x1
	0x03655D64 ADD X8, X8, W9, 0x4, SXTW
	0x03655D68 ADD X0, X8, 0x138
	0x03655D6C LDP X8, X1, [X0]
	0x03655D70 MOV X0, X19
	0x03655D74 BLR X8
	0x03655D78 CBZ X0, 0x3655DB0
	0x03655D7C ADRP X9, 0xAE4000
	0x03655D80 LDR X9, [X9 + 0x2A0]
	0x03655D84 LDR X8, [X0]
	0x03655D88 LDR X1, [X9]
	0x03655D8C LDRB W10, [X8 + 0x130]
	0x03655D90 LDRB W9, [X1 + 0x130]
	0x03655D94 CMP W10, W9
	0x03655D98 B.CC 0x3655DBC
	0x03655D9C LDR X8, [X8 + 0xC8]
	0x03655DA0 ADD X8, X8, X9, 0x3, LSL
	0x03655DA4 LDUR X8, [X8 - 0x8]
	0x03655DA8 CMP X8, X1
	0x03655DAC B.NE 0x3655DBC
	0x03655DB0 LDP X20, X19, [X31 + 0x10]
	0x03655DB4 LDR X30, [X31], #0x20
	0x03655DB8 RET
	0x03655DBC BL 0x1C171E0
	0x03655DC0 BL 0x1C16F20
	0x03655DC4 STR X30, [X31 - 0x20]!
	0x03655DC8 STP X20, X19, [X31 + 0x10]
	0x03655DCC ADRP X20, 0xD8B000
	0x03655DD0 LDRB W8, [X20 + 0x632]
	0x03655DD4 MOV X19, X0
	0x03655DD8 TBNZ X8, 0x0, 0x3655DF0
	0x03655DDC ADRP X0, 0xA9E000
	0x03655DE0 LDR X0, [X0 + 0xE18]
	0x03655DE4 BL 0x1C16CF4
	0x03655DE8 MOVZ W8, 0x1
	0x03655DEC STRB W8, [X20 + 0x632]
	0x03655DF0 LDR X19, [X19 + 0x10]
	0x03655DF4 CBZ X19, 0x3655E60
	0x03655DF8 ADRP X10, 0xA9E000
	0x03655DFC LDR X8, [X19]
	0x03655E00 LDR X10, [X10 + 0xE18]
	0x03655E04 LDRH W9, [X8 + 0x12E]
	0x03655E08 LDR X1, [X10]
	0x03655E0C CBZ X9, 0x3655E30
	0x03655E10 LDR X10, [X8 + 0xB0]
	0x03655E14 ADD X10, X10, 0x8
	0x03655E18 LDUR X11, [X10 - 0x8]
	0x03655E1C CMP X11, X1
	0x03655E20 B.EQ 0x3655E40
	0x03655E24 SUBS X9, X9, 0x1
	0x03655E28 ADD X10, X10, 0x10
	0x03655E2C B.NE 0x3655E18
	0x03655E30 MOV X0, X19
	0x03655E34 MOV W2, W31
	0x03655E38 BL 0x1C5C788
	0x03655E3C B 0x3655E4C
	0x03655E40 LDRSW X9, [X10]
	0x03655E44 ADD X8, X8, X9, 0x4, LSL
	0x03655E48 ADD X0, X8, 0x138
	0x03655E4C LDP X2, X1, [X0]
	0x03655E50 MOV X0, X19
	0x03655E54 LDP X20, X19, [X31 + 0x10]
	0x03655E58 LDR X30, [X31], #0x20
	0x03655E5C BR X2
	0x03655E60 BL 0x1C16F20
	0x03655E64 STR X30, [X31 - 0x20]!
	0x03655E68 STP X20, X19, [X31 + 0x10]
	0x03655E6C ADRP X20, 0xD8B000
	0x03655E70 LDRB W8, [X20 + 0x633]
	0x03655E74 MOV X19, X0
	0x03655E78 TBNZ X8, 0x0, 0x3655E90
	0x03655E7C ADRP X0, 0xA9E000
	0x03655E80 LDR X0, [X0 + 0xE18]
	0x03655E84 BL 0x1C16CF4
	0x03655E88 MOVZ W8, 0x1
	0x03655E8C STRB W8, [X20 + 0x633]
	0x03655E90 LDR X19, [X19 + 0x10]
	0x03655E94 CBZ X19, 0x3655F04
	0x03655E98 ADRP X10, 0xA9E000
	0x03655E9C LDR X8, [X19]
	0x03655EA0 LDR X10, [X10 + 0xE18]
	0x03655EA4 LDRH W9, [X8 + 0x12E]
	0x03655EA8 LDR X1, [X10]
	0x03655EAC CBZ X9, 0x3655ED0
	0x03655EB0 LDR X10, [X8 + 0xB0]
	0x03655EB4 ADD X10, X10, 0x8
	0x03655EB8 LDUR X11, [X10 - 0x8]
	0x03655EBC CMP X11, X1
	0x03655EC0 B.EQ 0x3655EE0
	0x03655EC4 SUBS X9, X9, 0x1
	0x03655EC8 ADD X10, X10, 0x10
	0x03655ECC B.NE 0x3655EB8
	0x03655ED0 MOVZ W2, 0x1
	0x03655ED4 MOV X0, X19
	0x03655ED8 BL 0x1C5C788
	0x03655EDC B 0x3655EF0
	0x03655EE0 LDR W9, [X10]
	0x03655EE4 ADD W9, W9, 0x1
	0x03655EE8 ADD X8, X8, W9, 0x4, SXTW
	0x03655EEC ADD X0, X8, 0x138
	0x03655EF0 LDP X2, X1, [X0]
	0x03655EF4 MOV X0, X19
	0x03655EF8 LDP X20, X19, [X31 + 0x10]
	0x03655EFC LDR X30, [X31], #0x20
	0x03655F00 BR X2
	0x03655F04 BL 0x1C16F20
	0x03655F08 STR X30, [X31 - 0x20]!
	0x03655F0C STP X20, X19, [X31 + 0x10]
	0x03655F10 ADRP X20, 0xD8B000
	0x03655F14 LDRB W8, [X20 + 0x634]
	0x03655F18 MOV X19, X0
	0x03655F1C TBNZ X8, 0x0, 0x3655F34
	0x03655F20 ADRP X0, 0xA9E000
	0x03655F24 LDR X0, [X0 + 0xE18]
	0x03655F28 BL 0x1C16CF4
	0x03655F2C MOVZ W8, 0x1
	0x03655F30 STRB W8, [X20 + 0x634]
	0x03655F34 LDR X19, [X19 + 0x10]
	0x03655F38 CBZ X19, 0x3655FA4
	0x03655F3C ADRP X10, 0xA9E000
	0x03655F40 LDR X8, [X19]
	0x03655F44 LDR X10, [X10 + 0xE18]
	0x03655F48 LDRH W9, [X8 + 0x12E]
	0x03655F4C LDR X1, [X10]
	0x03655F50 CBZ X9, 0x3655F74
	0x03655F54 LDR X10, [X8 + 0xB0]
	0x03655F58 ADD X10, X10, 0x8
	0x03655F5C LDUR X11, [X10 - 0x8]
	0x03655F60 CMP X11, X1
	0x03655F64 B.EQ 0x3655F84
	0x03655F68 SUBS X9, X9, 0x1
	0x03655F6C ADD X10, X10, 0x10
	0x03655F70 B.NE 0x3655F5C
	0x03655F74 MOV X0, X19
	0x03655F78 MOV W2, W31
	0x03655F7C BL 0x1C5C788
	0x03655F80 B 0x3655F90
	0x03655F84 LDRSW X9, [X10]
	0x03655F88 ADD X8, X8, X9, 0x4, LSL
	0x03655F8C ADD X0, X8, 0x138
	0x03655F90 LDP X2, X1, [X0]
	0x03655F94 MOV X0, X19
	0x03655F98 LDP X20, X19, [X31 + 0x10]
	0x03655F9C LDR X30, [X31], #0x20
	0x03655FA0 BR X2
	0x03655FA4 BL 0x1C16F20
	0x03655FA8 STR X30, [X31 - 0x20]!
	0x03655FAC STP X20, X19, [X31 + 0x10]
	0x03655FB0 ADRP X20, 0xD8B000
	0x03655FB4 LDRB W8, [X20 + 0x635]
	0x03655FB8 MOV X19, X0
	0x03655FBC TBNZ X8, 0x0, 0x3655FD4
	0x03655FC0 ADRP X0, 0xA9E000
	0x03655FC4 LDR X0, [X0 + 0xE18]
	0x03655FC8 BL 0x1C16CF4
	0x03655FCC MOVZ W8, 0x1
	0x03655FD0 STRB W8, [X20 + 0x635]
	0x03655FD4 LDR X19, [X19 + 0x10]
	0x03655FD8 CBZ X19, 0x3656048
	0x03655FDC ADRP X10, 0xA9E000
	0x03655FE0 LDR X8, [X19]
	0x03655FE4 LDR X10, [X10 + 0xE18]
	0x03655FE8 LDRH W9, [X8 + 0x12E]
	0x03655FEC LDR X1, [X10]
	0x03655FF0 CBZ X9, 0x3656014
	0x03655FF4 LDR X10, [X8 + 0xB0]
	0x03655FF8 ADD X10, X10, 0x8
	0x03655FFC LDUR X11, [X10 - 0x8]
	0x03656000 CMP X11, X1
	0x03656004 B.EQ 0x3656024
	0x03656008 SUBS X9, X9, 0x1
	0x0365600C ADD X10, X10, 0x10
	0x03656010 B.NE 0x3655FFC
	0x03656014 MOVZ W2, 0x2
	0x03656018 MOV X0, X19
	0x0365601C BL 0x1C5C788
	0x03656020 B 0x3656034
	0x03656024 LDR W9, [X10]
	0x03656028 ADD W9, W9, 0x2
	0x0365602C ADD X8, X8, W9, 0x4, SXTW
	0x03656030 ADD X0, X8, 0x138
	0x03656034 LDP X2, X1, [X0]
	0x03656038 MOV X0, X19
	0x0365603C LDP X20, X19, [X31 + 0x10]
	0x03656040 LDR X30, [X31], #0x20
	0x03656044 BR X2
	0x03656048 BL 0x1C16F20
	0x0365604C MOV X1, X31
	0x03656050 B 0x326C590
	0x03656054 LDR X8, [X0 + 0xB8]
	0x03656058 CMP X8, 0x0
	0x0365605C CSET W0, NE
	0x03656060 RET
	0x03656064 STR X30, [X31 - 0x20]!
	0x03656068 STP X20, X19, [X31 + 0x10]
	0x0365606C MOV X19, X1
	0x03656070 MOV X1, X31
	0x03656074 MOV X20, X0
	0x03656078 BL 0x326C590
	0x0365607C STR X19, [X20 + 0xB8]
	0x03656080 LDP X20, X19, [X31 + 0x10]
	0x03656084 LDR X30, [X31], #0x20
	0x03656088 RET
	0x0365608C MOV X1, X31
	0x03656090 B 0x326C590
	0x03656094 STR X30, [X31 - 0x20]!
	0x03656098 STP X20, X19, [X31 + 0x10]
	0x0365609C MOV X20, X1
	0x036560A0 MOV X1, X31
	0x036560A4 MOV X19, X0
	0x036560A8 BL 0x326C590
	0x036560AC CBZ X20, 0x36560D4
	0x036560B0 LDR X8, [X20 + 0xB8]
	0x036560B4 STR X8, [X19 + 0xB8]
	0x036560B8 LDR X0, [X20 + 0xB0]
	0x036560BC CBZ X0, 0x36560C8
	0x036560C0 BL 0x36560D8
	0x036560C4 STR X0, [X19 + 0xB0]
	0x036560C8 LDP X20, X19, [X31 + 0x10]
	0x036560CC LDR X30, [X31], #0x20
	0x036560D0 RET
	0x036560D4 BL 0x1C16F20
	0x036560D8 STP X30, X21, [X31 - 0x20]!
	0x036560DC STP X20, X19, [X31 + 0x10]
	0x036560E0 ADRP X20, 0xD8A000
	0x036560E4 ADRP X21, 0xAE6000
	0x036560E8 LDRB W8, [X20 + 0x64F]
	0x036560EC LDR X21, [X21 + 0xB50]
	0x036560F0 MOV X19, X0
	0x036560F4 TBNZ X8, 0x0, 0x365610C
	0x036560F8 ADRP X0, 0xAE6000
	0x036560FC LDR X0, [X0 + 0xB50]
	0x03656100 BL 0x1C16CF4
	0x03656104 MOVZ W8, 0x1
	0x03656108 STRB W8, [X20 + 0x64F]
	0x0365610C LDR X0, [X21]
	0x03656110 BL 0x1C16F10
	0x03656114 MOV X1, X19
	0x03656118 MOV X20, X0
	0x0365611C BL 0x3658050
	0x03656120 MOV X0, X20
	0x03656124 LDP X20, X19, [X31 + 0x10]
	0x03656128 LDP X30, X21, [X31], #0x20
	0x0365612C RET
	0x03656130 STR X30, [X31 - 0x30]!
	0x03656134 STP X22, X21, [X31 + 0x10]
	0x03656138 STP X20, X19, [X31 + 0x20]
	0x0365613C ADRP X22, 0xD8A000
	0x03656140 LDRB W8, [X22 + 0x636]
	0x03656144 MOV X21, X2
	0x03656148 MOV X20, X1
	0x0365614C MOV X19, X0
	0x03656150 TBNZ X8, 0x0, 0x3656174
	0x03656154 ADRP X0, 0xAE3000
	0x03656158 LDR X0, [X0 + 0x1D8]
	0x0365615C BL 0x1C16CF4
	0x03656160 ADRP X0, 0xACA000
	0x03656164 LDR X0, [X0 + 0xCC0]
	0x03656168 BL 0x1C16CF4
	0x0365616C MOVZ W8, 0x1
	0x03656170 STRB W8, [X22 + 0x636]
	0x03656174 MOV X0, X19
	0x03656178 MOV X1, X31
	0x0365617C BL 0x326C590
	0x03656180 MOV X0, X20
	0x03656184 BL 0x3652800
	0x03656188 SUB W8, W0, 0x1
	0x0365618C CMP W8, 0x5
	0x03656190 B.HI 0x365622C
	0x03656194 ADRP X9, 0xFFFFFFFFFD541000
	0x03656198 ADD X9, X9, 0x62A
	0x0365619C ADR X10, 0x10
	0x036561A0 LDRB W11, [X9, X8, LSL]
	0x036561A4 ADD X10, X10, X11, 0x2, LSL
	0x036561A8 BR X10
	0x036561AC ADRP X8, 0xACA000
	0x036561B0 LDR X8, [X8 + 0xCC0]
	0x036561B4 LDR X0, [X8]
	0x036561B8 BL 0x1C16F10
	0x036561BC MOV X1, X20
	0x036561C0 MOV X2, X31
	0x036561C4 MOV X21, X0
	0x036561C8 BL 0x31EA6BC
	0x036561CC STR X21, [X19 + 0xB8]
	0x036561D0 B 0x365621C
	0x036561D4 MOV X0, X19
	0x036561D8 MOV X1, X20
	0x036561DC MOV X2, X21
	0x036561E0 BL 0x3656280
	0x036561E4 STR X0, [X19 + 0xB8]
	0x036561E8 B 0x365621C
	0x036561EC ADRP X8, 0xAE3000
	0x036561F0 LDR X8, [X8 + 0x1D8]
	0x036561F4 LDR X0, [X8]
	0x036561F8 BL 0x1C16F10
	0x036561FC MOV X1, X20
	0x03656200 MOV X2, X31
	0x03656204 MOV X21, X0
	0x03656208 BL 0x3203FF8
	0x0365620C CBZ X21, 0x365627C
	0x03656210 LDR X8, [X21 + 0x70]
	0x03656214 STR X8, [X19 + 0xB8]
	0x03656218 CBZ X8, 0x365622C
	0x0365621C LDP X20, X19, [X31 + 0x20]
	0x03656220 LDP X22, X21, [X31 + 0x10]
	0x03656224 LDR X30, [X31], #0x30
	0x03656228 RET
	0x0365622C ADRP X0, 0xAE6000
	0x03656230 LDR X0, [X0 + 0xB58]
	0x03656234 BL 0x1C16D08
	0x03656238 MOV X1, X31
	0x0365623C BL 0x320A160
	0x03656240 MOV X19, X0
	0x03656244 ADRP X0, 0xACA000
	0x03656248 LDR X0, [X0 + 0xCE0]
	0x0365624C BL 0x1C16D08
	0x03656250 BL 0x1C16F10
	0x03656254 MOV X1, X19
	0x03656258 MOV X2, X31
	0x0365625C MOV X20, X0
	0x03656260 BL 0x3252170
	0x03656264 ADRP X0, 0xAE6000
	0x03656268 LDR X0, [X0 + 0xB60]
	0x0365626C BL 0x1C16D08
	0x03656270 MOV X1, X0
	0x03656274 MOV X0, X20
	0x03656278 BL 0x1C16DEC
	0x0365627C BL 0x1C16F20
	0x03656280 STP X30, X21, [X31 - 0x20]!
	0x03656284 STP X20, X19, [X31 + 0x10]
	0x03656288 MOV X19, X1
	0x0365628C MOV X20, X0
	0x03656290 CBZ X2, 0x36562C4
	0x03656294 LDR X8, [X2]
	0x03656298 MOV X0, X2
	0x0365629C MOV X21, X2
	0x036562A0 LDP X9, X1, [X8 + 0x188]
	0x036562A4 BLR X9
	0x036562A8 TBZ X0, 0x0, 0x36562B4
	0x036562AC MOV X2, X31
	0x036562B0 B 0x36562C4
	0x036562B4 MOV X0, X21
	0x036562B8 MOV X1, X31
	0x036562BC BL 0x3224DB8
	0x036562C0 MOV X2, X0
	0x036562C4 MOV X0, X20
	0x036562C8 MOV X1, X19
	0x036562CC LDP X20, X19, [X31 + 0x10]
	0x036562D0 LDP X30, X21, [X31], #0x20
	0x036562D4 B 0x3656A4C
	0x036562D8 STP X30, X21, [X31 - 0x20]!
	0x036562DC STP X20, X19, [X31 + 0x10]
	0x036562E0 ADRP X21, 0xD8A000
	0x036562E4 ADRP X20, 0xAE3000
	0x036562E8 LDRB W8, [X21 + 0x637]
	0x036562EC LDR X20, [X20 + 0x1C0]
	0x036562F0 MOV X19, X0
	0x036562F4 TBNZ X8, 0x0, 0x365630C
	0x036562F8 ADRP X0, 0xAE3000
	0x036562FC LDR X0, [X0 + 0x1C0]
	0x03656300 BL 0x1C16CF4
	0x03656304 MOVZ W8, 0x1
	0x03656308 STRB W8, [X21 + 0x637]
	0x0365630C MOV X0, X19
	0x03656310 MOV X1, X31
	0x03656314 BL 0x326C218
	0x03656318 LDR X0, [X20]
	0x0365631C BL 0x1C16F10
	0x03656320 MOV X1, X19
	0x03656324 MOV X20, X0
	0x03656328 BL 0x3656094
	0x0365632C MOV X0, X20
	0x03656330 LDP X20, X19, [X31 + 0x10]
	0x03656334 LDP X30, X21, [X31], #0x20
	0x03656338 RET
	0x0365633C STP X30, X19, [X31 - 0x10]!
	0x03656340 MOV X1, X31
	0x03656344 MOV X19, X0
	0x03656348 BL 0x326C218
	0x0365634C LDR X0, [X19 + 0xB8]
	0x03656350 LDP X30, X19, [X31], #0x10
	0x03656354 RET
	0x03656358 STP X30, X19, [X31 - 0x10]!
	0x0365635C MOV X1, X31
	0x03656360 MOV X19, X0
	0x03656364 BL 0x326C218
	0x03656368 MOV X0, X19
	0x0365636C MOV X1, X31
	0x03656370 BL 0x326C218
	0x03656374 LDR X0, [X19 + 0xB8]
	0x03656378 CBZ X0, 0x365638C
	0x0365637C LDR X8, [X0]
	0x03656380 LDP X2, X1, [X8 + 0x1F8]
	0x03656384 LDP X30, X19, [X31], #0x10
	0x03656388 BR X2
	0x0365638C BL 0x1C16F20
	0x03656390 STR X30, [X31 - 0x10]!
	0x03656394 LDR X8, [X0]
	0x03656398 LDR X9, [X8 + 0x2A8]
	0x0365639C LDR X1, [X8 + 0x2B0]
	0x036563A0 BLR X9
	0x036563A4 CMP X0, 0x0
	0x036563A8 CSET W0, NE
	0x036563AC LDR X30, [X31], #0x10
	0x036563B0 RET
	0x036563B4 SUB X31, X31, 0xA0
	0x036563B8 STR X30, [X31 + 0x80]
	0x036563BC STP X20, X19, [X31 + 0x90]
	0x036563C0 ADRP X19, 0xD8A000
	0x036563C4 LDRB W8, [X19 + 0x638]
	0x036563C8 MOV X20, X0
	0x036563CC TBNZ X8, 0x0, 0x36563FC
	0x036563D0 ADRP X0, 0xACA000
	0x036563D4 LDR X0, [X0 + 0xF40]
	0x036563D8 BL 0x1C16CF4
	0x036563DC ADRP X0, 0xACB000
	0x036563E0 LDR X0, [X0 + 0x1A0]
	0x036563E4 BL 0x1C16CF4
	0x036563E8 ADRP X0, 0xACB000
	0x036563EC LDR X0, [X0 + 0x6D8]
	0x036563F0 BL 0x1C16CF4
	0x036563F4 MOVZ W8, 0x1
	0x036563F8 STRB W8, [X19 + 0x638]
	0x036563FC LDR X0, [X20 + 0xB8]
	0x03656400 CBZ X0, 0x365665C
	0x03656404 LDR X8, [X0]
	0x03656408 LDP X9, X1, [X8 + 0x1D8]
	0x0365640C BLR X9
	0x03656410 CBZ X0, 0x365642C
	0x03656414 ADRP X19, 0xACB000
	0x03656418 LDR X19, [X19 + 0x1A0]
	0x0365641C LDR X9, [X0]
	0x03656420 LDR X8, [X19]
	0x03656424 CMP X9, X8
	0x03656428 B.EQ 0x365652C
	0x0365642C LDR X0, [X20 + 0xB8]
	0x03656430 CBZ X0, 0x36566B8
	0x03656434 LDR X8, [X0]
	0x03656438 LDP X9, X1, [X8 + 0x1D8]
	0x0365643C BLR X9
	0x03656440 CBZ X0, 0x3656478
	0x03656444 ADRP X19, 0xACB000
	0x03656448 LDR X19, [X19 + 0x6D8]
	0x0365644C LDR X9, [X0]
	0x03656450 LDR X8, [X19]
	0x03656454 LDRB W11, [X9 + 0x130]
	0x03656458 LDRB W10, [X8 + 0x130]
	0x0365645C CMP W11, W10
	0x03656460 B.CC 0x3656478
	0x03656464 LDR X9, [X9 + 0xC8]
	0x03656468 ADD X9, X9, X10, 0x3, LSL
	0x0365646C LDUR X9, [X9 - 0x8]
	0x03656470 CMP X9, X8
	0x03656474 B.EQ 0x36565B8
	0x03656478 LDR X0, [X20 + 0xB8]
	0x0365647C CBZ X0, 0x36566BC
	0x03656480 MOV X1, X31
	0x03656484 BL 0x31EDFBC
	0x03656488 CBZ X0, 0x36565C4
	0x0365648C ADRP X19, 0xACA000
	0x03656490 LDR X19, [X19 + 0xF40]
	0x03656494 LDR X9, [X0]
	0x03656498 LDR X8, [X19]
	0x0365649C CMP X9, X8
	0x036564A0 B.NE 0x36565C4
	0x036564A4 MOV X1, X31
	0x036564A8 BL 0x3266AE0
	0x036564AC TBNZ X0, 0x0, 0x36565C4
	0x036564B0 LDR X0, [X19]
	0x036564B4 BL 0x1C16F10
	0x036564B8 MOV X19, X0
	0x036564BC MOV X1, X31
	0x036564C0 BL 0x32646DC
	0x036564C4 LDR X0, [X20 + 0xB8]
	0x036564C8 CBZ X0, 0x36566CC
	0x036564CC MOV X1, X31
	0x036564D0 BL 0x31EDFBC
	0x036564D4 CBZ X0, 0x36566D0
	0x036564D8 LDR X8, [X0]
	0x036564DC LDP X9, X2, [X8 + 0x1E8]
	0x036564E0 ADD X8, X31, 0x40
	0x036564E4 MOVZ W1, 0x1
	0x036564E8 BLR X9
	0x036564EC LDP V0, V1, [X31 + 0x40]
	0x036564F0 LDP V2, V3, [X31 + 0x60]
	0x036564F4 STP V0, V1, [X31]
	0x036564F8 STP V2, V3, [X31 + 0x20]
	0x036564FC CBZ X19, 0x36566D4
	0x03656500 LDR X8, [X19]
	0x03656504 LDP V0, V1, [X31]
	0x03656508 LDP V2, V3, [X31 + 0x20]
	0x0365650C LDR X9, [X8 + 0x1F8]
	0x03656510 STP V0, V1, [X31 + 0x40]
	0x03656514 STP V2, V3, [X31 + 0x60]
	0x03656518 LDR X2, [X8 + 0x200]
	0x0365651C ADD X1, X31, 0x40
	0x03656520 MOV X0, X19
	0x03656524 BLR X9
	0x03656528 B 0x36565C8
	0x0365652C MOV X1, X31
	0x03656530 BL 0x325C894
	0x03656534 TBNZ X0, 0x0, 0x36565C4
	0x03656538 LDR X0, [X19]
	0x0365653C BL 0x1C16F10
	0x03656540 MOV X19, X0
	0x03656544 MOV X1, X31
	0x03656548 BL 0x325B9CC
	0x0365654C LDR X0, [X20 + 0xB8]
	0x03656550 CBZ X0, 0x36566C0
	0x03656554 LDR X8, [X0]
	0x03656558 LDP X9, X1, [X8 + 0x1D8]
	0x0365655C BLR X9
	0x03656560 CBZ X0, 0x36566C4
	0x03656564 LDR X8, [X0]
	0x03656568 LDP X9, X2, [X8 + 0x1E8]
	0x0365656C ADD X8, X31, 0x40
	0x03656570 MOVZ W1, 0x1
	0x03656574 BLR X9
	0x03656578 LDP V0, V1, [X31 + 0x40]
	0x0365657C LDP V2, V3, [X31 + 0x60]
	0x03656580 STP V0, V1, [X31]
	0x03656584 STP V2, V3, [X31 + 0x20]
	0x03656588 CBZ X19, 0x36566C8
	0x0365658C LDR X8, [X19]
	0x03656590 LDP V0, V1, [X31]
	0x03656594 LDP V2, V3, [X31 + 0x20]
	0x03656598 LDR X9, [X8 + 0x1F8]
	0x0365659C STP V0, V1, [X31 + 0x40]
	0x036565A0 STP V2, V3, [X31 + 0x60]
	0x036565A4 LDR X2, [X8 + 0x200]
	0x036565A8 ADD X1, X31, 0x40
	0x036565AC MOV X0, X19
	0x036565B0 BLR X9
	0x036565B4 B 0x36565C8
	0x036565B8 MOV X1, X31
	0x036565BC BL 0x3201D3C
	0x036565C0 TBZ X0, 0x0, 0x36565DC
	0x036565C4 MOV X19, X31
	0x036565C8 MOV X0, X19
	0x036565CC LDP X20, X19, [X31 + 0x90]
	0x036565D0 LDR X30, [X31 + 0x80]
	0x036565D4 ADD X31, X31, 0xA0
	0x036565D8 RET
	0x036565DC LDR X0, [X19]
	0x036565E0 BL 0x1C16F10
	0x036565E4 MOV X19, X0
	0x036565E8 MOV X1, X31
	0x036565EC BL 0x32012E4
	0x036565F0 LDR X0, [X20 + 0xB8]
	0x036565F4 CBZ X0, 0x36566D8
	0x036565F8 LDR X8, [X0]
	0x036565FC LDP X9, X1, [X8 + 0x1D8]
	0x03656600 BLR X9
	0x03656604 CBZ X0, 0x36566DC
	0x03656608 LDR X8, [X0]
	0x0365660C LDP X9, X2, [X8 + 0x1E8]
	0x03656610 ADD X8, X31, 0x40
	0x03656614 MOVZ W1, 0x1
	0x03656618 BLR X9
	0x0365661C LDP V0, V1, [X31 + 0x40]
	0x03656620 LDP V2, V3, [X31 + 0x60]
	0x03656624 STP V0, V1, [X31]
	0x03656628 STP V2, V3, [X31 + 0x20]
	0x0365662C CBZ X19, 0x36566E0
	0x03656630 LDR X8, [X19]
	0x03656634 LDP V0, V1, [X31]
	0x03656638 LDP V2, V3, [X31 + 0x20]
	0x0365663C LDR X9, [X8 + 0x1F8]
	0x03656640 STP V0, V1, [X31 + 0x40]
	0x03656644 STP V2, V3, [X31 + 0x60]
	0x03656648 LDR X2, [X8 + 0x200]
	0x0365664C ADD X1, X31, 0x40
	0x03656650 MOV X0, X19
	0x03656654 BLR X9
	0x03656658 B 0x36565C8
	0x0365665C ADRP X19, 0xAE3000
	0x03656660 LDR X19, [X19 + 0x1C0]
	0x03656664 MOV X0, X19
	0x03656668 BL 0x1C16D08
	0x0365666C BL 0x19903D0
	0x03656670 MOV X0, X19
	0x03656674 BL 0x1C16D08
	0x03656678 LDR X8, [X0 + 0xB8]
	0x0365667C ADRP X0, 0xACA000
	0x03656680 LDR X19, [X8]
	0x03656684 LDR X0, [X0 + 0xCE0]
	0x03656688 BL 0x1C16D08
	0x0365668C BL 0x1C16F10
	0x03656690 MOV X1, X19
	0x03656694 MOV X2, X31
	0x03656698 MOV X20, X0
	0x0365669C BL 0x3252170
	0x036566A0 ADRP X0, 0xAE6000
	0x036566A4 LDR X0, [X0 + 0xB68]
	0x036566A8 BL 0x1C16D08
	0x036566AC MOV X1, X0
	0x036566B0 MOV X0, X20
	0x036566B4 BL 0x1C16DEC
	0x036566B8 BL 0x1C16F20
	0x036566BC BL 0x1C16F20
	0x036566C0 BL 0x1C16F20
	0x036566C4 BL 0x1C16F20
	0x036566C8 BL 0x1C16F20
	0x036566CC BL 0x1C16F20
	0x036566D0 BL 0x1C16F20
	0x036566D4 BL 0x1C16F20
	0x036566D8 BL 0x1C16F20
	0x036566DC BL 0x1C16F20
	0x036566E0 BL 0x1C16F20
	0x036566E4 B 0x365673C
	0x036566E8 B 0x365673C
	0x036566EC B 0x365673C
	0x036566F0 B 0x365673C
	0x036566F4 B 0x365673C
	0x036566F8 B 0x365673C
	0x036566FC B 0x365673C
	0x03656700 B 0x365673C
	0x03656704 B 0x365673C
	0x03656708 B 0x365673C
	0x0365670C B 0x365673C
	0x03656710 B 0x365673C
	0x03656714 B 0x365673C
	0x03656718 B 0x365673C
	0x0365671C B 0x365673C
	0x03656720 B 0x365673C
	0x03656724 B 0x365673C
	0x03656728 B 0x365673C
	0x0365672C B 0x365673C
	0x03656730 B 0x365673C
	0x03656734 B 0x365673C
	0x03656738 B 0x365673C
	0x0365673C MOV X19, X0
	0x03656740 CMP W1, 0x1
	0x03656744 B.NE 0x36567A0
	0x03656748 MOV X0, X19
	0x0365674C BL 0x3EB1AD0
	0x03656750 MOV X19, X0
	0x03656754 ADRP X0, 0xAA3000
	0x03656758 LDR X0, [X0 + 0xCC0]
	0x0365675C BL 0x1C16D08
	0x03656760 LDR X8, [X19]
	0x03656764 LDR X1, [X8]
	0x03656768 BL 0x1C17270
	0x0365676C TBZ X0, 0x0, 0x3656778
	0x03656770 BL 0x3EB1AE0
	0x03656774 B 0x36565C4
	0x03656778 MOVZ W0, 0x8
	0x0365677C BL 0x3EB1AF0
	0x03656780 LDR X8, [X19]
	0x03656784 STR X8, [X0]
	0x03656788 ADRP X1, 0x85E000
	0x0365678C ADD X1, X1, 0xE58
	0x03656790 MOV X2, X31
	0x03656794 BL 0x3EB1B00
	0x03656798 MOV X19, X0
	0x0365679C BL 0x3EB1AE0
	0x036567A0 MOV X0, X19
	0x036567A4 BL 0x1D2C690
	0x036567A8 BL 0x1990590
	0x036567AC STP X30, X21, [X31 - 0x20]!
	0x036567B0 STP X20, X19, [X31 + 0x10]
	0x036567B4 ADRP X21, 0xD8A000
	0x036567B8 LDRB W8, [X21 + 0x639]
	0x036567BC MOV X19, X1
	0x036567C0 MOV X20, X0
	0x036567C4 TBNZ X8, 0x0, 0x36567E8
	0x036567C8 ADRP X0, 0xACB000
	0x036567CC LDR X0, [X0 + 0x158]
	0x036567D0 BL 0x1C16CF4
	0x036567D4 ADRP X0, 0xACB000
	0x036567D8 LDR X0, [X0 + 0x160]
	0x036567DC BL 0x1C16CF4
	0x036567E0 MOVZ W8, 0x1
	0x036567E4 STRB W8, [X21 + 0x639]
	0x036567E8 LDR X0, [X20 + 0xB8]
	0x036567EC CBZ X0, 0x36568A0
	0x036567F0 CBZ X19, 0x365685C
	0x036567F4 ADRP X9, 0xACB000
	0x036567F8 LDR X9, [X9 + 0x160]
	0x036567FC LDR X8, [X19]
	0x03656800 LDR X10, [X9]
	0x03656804 LDRB W9, [X8 + 0x130]
	0x03656808 LDRB W11, [X10 + 0x130]
	0x0365680C CMP W9, W11
	0x03656810 B.CC 0x3656828
	0x03656814 LDR X12, [X8 + 0xC8]
	0x03656818 ADD X11, X12, X11, 0x3, LSL
	0x0365681C LDUR X11, [X11 - 0x8]
	0x03656820 CMP X11, X10
	0x03656824 B.EQ 0x3656888
	0x03656828 ADRP X10, 0xACB000
	0x0365682C LDR X10, [X10 + 0x158]
	0x03656830 LDR X10, [X10]
	0x03656834 LDRB W11, [X10 + 0x130]
	0x03656838 CMP W9, W11
	0x0365683C B.CC 0x36568FC
	0x03656840 LDR X8, [X8 + 0xC8]
	0x03656844 ADD X8, X8, X11, 0x3, LSL
	0x03656848 LDUR X8, [X8 - 0x8]
	0x0365684C CMP X8, X10
	0x03656850 B.NE 0x36568FC
	0x03656854 MOV X1, X19
	0x03656858 B 0x3656878
	0x0365685C LDR X8, [X0]
	0x03656860 MOV X1, X31
	0x03656864 LDP X9, X2, [X8 + 0x1E8]
	0x03656868 BLR X9
	0x0365686C LDR X0, [X20 + 0xB8]
	0x03656870 CBZ X0, 0x3656930
	0x03656874 MOV X1, X31
	0x03656878 LDP X20, X19, [X31 + 0x10]
	0x0365687C MOV X2, X31
	0x03656880 LDP X30, X21, [X31], #0x20
	0x03656884 B 0x31F5138
	0x03656888 LDR X8, [X0]
	0x0365688C MOV X1, X19
	0x03656890 LDP X20, X19, [X31 + 0x10]
	0x03656894 LDP X3, X2, [X8 + 0x1E8]
	0x03656898 LDP X30, X21, [X31], #0x20
	0x0365689C BR X3
	0x036568A0 ADRP X19, 0xAE3000
	0x036568A4 LDR X19, [X19 + 0x1C0]
	0x036568A8 MOV X0, X19
	0x036568AC BL 0x1C16D08
	0x036568B0 BL 0x19903D0
	0x036568B4 MOV X0, X19
	0x036568B8 BL 0x1C16D08
	0x036568BC LDR X8, [X0 + 0xB8]
	0x036568C0 ADRP X0, 0xACA000
	0x036568C4 LDR X19, [X8]
	0x036568C8 LDR X0, [X0 + 0xCE0]
	0x036568CC BL 0x1C16D08
	0x036568D0 BL 0x1C16F10
	0x036568D4 MOV X1, X19
	0x036568D8 MOV X2, X31
	0x036568DC MOV X20, X0
	0x036568E0 BL 0x3252170
	0x036568E4 ADRP X0, 0xAE6000
	0x036568E8 LDR X0, [X0 + 0xB70]
	0x036568EC BL 0x1C16D08
	0x036568F0 MOV X1, X0
	0x036568F4 MOV X0, X20
	0x036568F8 BL 0x1C16DEC
	0x036568FC ADRP X0, 0xA9D000
	0x03656900 LDR X0, [X0 + 0xB40]
	0x03656904 BL 0x1C16D08
	0x03656908 BL 0x1C16F10
	0x0365690C MOV X1, X31
	0x03656910 MOV X19, X0
	0x03656914 BL 0x3380310
	0x03656918 ADRP X0, 0xAE6000
	0x0365691C LDR X0, [X0 + 0xB70]
	0x03656920 BL 0x1C16D08
	0x03656924 MOV X1, X0
	0x03656928 MOV X0, X19
	0x0365692C BL 0x1C16DEC
	0x03656930 BL 0x1C16F20
	0x03656934 STR X30, [X31 - 0x20]!
	0x03656938 STP X20, X19, [X31 + 0x10]
	0x0365693C ADRP X20, 0xD8A000
	0x03656940 LDRB W8, [X20 + 0x63A]
	0x03656944 MOV X19, X0
	0x03656948 TBNZ X8, 0x0, 0x3656960
	0x0365694C ADRP X0, 0xACB000
	0x03656950 LDR X0, [X0 + 0x160]
	0x03656954 BL 0x1C16CF4
	0x03656958 MOVZ W8, 0x1
	0x0365695C STRB W8, [X20 + 0x63A]
	0x03656960 LDR X8, [X19]
	0x03656964 MOV X0, X19
	0x03656968 LDR X9, [X8 + 0x2A8]
	0x0365696C LDR X1, [X8 + 0x2B0]
	0x03656970 BLR X9
	0x03656974 CBZ X0, 0x36569B4
	0x03656978 ADRP X8, 0xACB000
	0x0365697C LDR X8, [X8 + 0x160]
	0x03656980 LDR X9, [X0]
	0x03656984 LDR X8, [X8]
	0x03656988 LDRB W11, [X9 + 0x130]
	0x0365698C LDRB W10, [X8 + 0x130]
	0x03656990 CMP W11, W10
	0x03656994 B.CS 0x36569A0
	0x03656998 MOV X0, X31
	0x0365699C B 0x36569B4
	0x036569A0 LDR X9, [X9 + 0xC8]
	0x036569A4 ADD X9, X9, X10, 0x3, LSL
	0x036569A8 LDUR X9, [X9 - 0x8]
	0x036569AC CMP X9, X8
	0x036569B0 CSEL X0, X0, X31, EQ
	0x036569B4 LDP X20, X19, [X31 + 0x10]
	0x036569B8 LDR X30, [X31], #0x20
	0x036569BC RET
	0x036569C0 STR X30, [X31 - 0x20]!
	0x036569C4 STP X20, X19, [X31 + 0x10]
	0x036569C8 ADRP X20, 0xD8A000
	0x036569CC LDRB W8, [X20 + 0x63B]
	0x036569D0 MOV X19, X0
	0x036569D4 TBNZ X8, 0x0, 0x36569EC
	0x036569D8 ADRP X0, 0xACB000
	0x036569DC LDR X0, [X0 + 0x158]
	0x036569E0 BL 0x1C16CF4
	0x036569E4 MOVZ W8, 0x1
	0x036569E8 STRB W8, [X20 + 0x63B]
	0x036569EC LDR X8, [X19]
	0x036569F0 MOV X0, X19
	0x036569F4 LDR X9, [X8 + 0x2A8]
	0x036569F8 LDR X1, [X8 + 0x2B0]
	0x036569FC BLR X9
	0x03656A00 CBZ X0, 0x3656A40
	0x03656A04 ADRP X8, 0xACB000
	0x03656A08 LDR X8, [X8 + 0x158]
	0x03656A0C LDR X9, [X0]
	0x03656A10 LDR X8, [X8]
	0x03656A14 LDRB W11, [X9 + 0x130]
	0x03656A18 LDRB W10, [X8 + 0x130]
	0x03656A1C CMP W11, W10
	0x03656A20 B.CS 0x3656A2C
	0x03656A24 MOV X0, X31
	0x03656A28 B 0x3656A40
	0x03656A2C LDR X9, [X9 + 0xC8]
	0x03656A30 ADD X9, X9, X10, 0x3, LSL
	0x03656A34 LDUR X9, [X9 - 0x8]
	0x03656A38 CMP X9, X8
	0x03656A3C CSEL X0, X0, X31, EQ
	0x03656A40 LDP X20, X19, [X31 + 0x10]
	0x03656A44 LDR X30, [X31], #0x20
	0x03656A48 RET
	0x03656A4C STR X30, [X31 - 0x50]!
	0x03656A50 STP X26, X25, [X31 + 0x10]
	0x03656A54 STP X24, X23, [X31 + 0x20]
	0x03656A58 STP X22, X21, [X31 + 0x30]
	0x03656A5C STP X20, X19, [X31 + 0x40]
	0x03656A60 ADRP X23, 0xD8A000
	0x03656A64 ADRP X20, 0xACA000
	0x03656A68 LDRB W8, [X23 + 0x63C]
	0x03656A6C LDR X20, [X20 + 0xD68]
	0x03656A70 MOV X22, X2
	0x03656A74 MOV X21, X1
	0x03656A78 MOV X19, X0
	0x03656A7C TBNZ X8, 0x0, 0x3656ADC
	0x03656A80 ADRP X0, 0xAE6000
	0x03656A84 LDR X0, [X0 + 0xB78]
	0x03656A88 BL 0x1C16CF4
	0x03656A8C ADRP X0, 0xACB000
	0x03656A90 LDR X0, [X0 + 0x158]
	0x03656A94 BL 0x1C16CF4
	0x03656A98 ADRP X0, 0xA9D000
	0x03656A9C LDR X0, [X0 + 0xE00]
	0x03656AA0 BL 0x1C16CF4
	0x03656AA4 ADRP X0, 0xACA000
	0x03656AA8 LDR X0, [X0 + 0xD68]
	0x03656AAC BL 0x1C16CF4
	0x03656AB0 ADRP X0, 0xACB000
	0x03656AB4 LDR X0, [X0 + 0x160]
	0x03656AB8 BL 0x1C16CF4
	0x03656ABC ADRP X0, 0xAE3000
	0x03656AC0 LDR X0, [X0 + 0x1C0]
	0x03656AC4 BL 0x1C16CF4
	0x03656AC8 ADRP X0, 0xAE6000
	0x03656ACC LDR X0, [X0 + 0xB50]
	0x03656AD0 BL 0x1C16CF4

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+64], X29
	003 Move [X31+72], X30
	004 Move [X31+80], X28
	005 Move [X31+88], X27
	006 Move [X31+96], X26
	007 Move [X31+104], X25
	008 Move [X31+112], X24
	009 Move [X31+120], X23
	010 Move [X31+128], X22
	011 Move [X31+136], X21
	012 Move [X31+144], X20
	013 Move [X31+152], X19
	014 Move X22, 0xD8C000
	015 Move W8, [X22+1581]
	016 Move X19, X2
	017 Move W21, W1
	018 Move X20, X0
	019 Move [X31+40], W3
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {59}
	024 Move X0, 0xACC000
	025 Move X0, [X0+3032]
	026 Call 0x1C17CF4
	027 Move X0, 0xAA1000
	028 Move X0, [X0+3144]
	029 Call 0x1C17CF4
	030 Move X0, 0xAA0000
	031 Move X0, [X0+2544]
	032 Call 0x1C17CF4
	033 Move X0, 0xA9F000
	034 Move X0, [X0+3584]
	035 Call 0x1C17CF4
	036 Move X0, 0xA9F000
	037 Move X0, [X0+3608]
	038 Call 0x1C17CF4
	039 Move X0, 0xAA1000
	040 Move X0, [X0+632]
	041 Call 0x1C17CF4
	042 Move X0, 0xAE8000
	043 Move X0, [X0+2800]
	044 Call 0x1C17CF4
	045 Move X0, 0xAE5000
	046 Move X0, [X0+672]
	047 Call 0x1C17CF4
	048 Move X0, 0xAE8000
	049 Move X0, [X0+2160]
	050 Call 0x1C17CF4
	051 Move X0, 0xAE8000
	052 Move X0, [X0+2808]
	053 Call 0x1C17CF4
	054 Move X0, 0xACF000
	055 Move X0, [X0+1904]
	056 Call 0x1C17CF4
	057 Move W8, 1
	058 Move [X22+1581], W8
	059 Move [X31+56], W31
	060 Compare X19, 0
	061 JumpIfEqual {660}
	062 Move X22, 0xAA1000
	063 Move X22, [X22+632]
	064 Move X24, 0xAA0000
	065 Move X8, [X22]
	066 Move X24, [X24+2544]
	067 Move X8, [X8+184]
	068 Move X1, [X24]
	069 Move X23, [X8]
	070 Move W9, [X1+224]
	071 Compare W9, 0
	072 JumpIfNotEqual {76}
	073 Move X0, X1
	074 Call 0x1C17DFC
	075 Move X1, [X24]
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Move X8, [X1+184]
	078 Move W25, W21
	079 Move X8, [X8+16]
	080 Move [X31+24], X8
	081 Move X8, -44814336
	082 Add X8, X8, 1532
	083 NotImplemented "Instruction ADR not yet implemented."
	084 Move W10, [X8]
	085 Add X9, X9, X10
	086 CallNoReturn X9
	087 Move X1, [X22]
	088 Move X8, [X19]
	089 NotImplemented "Instruction CMP not yet implemented."
	090 Move [X31+16], X23
	091 Move X23, X19
	092 Move [X31+4], W31
	093 Move X1, [X22]
	094 Move X8, [X19]
	095 NotImplemented "Instruction CMP not yet implemented."
	096 Move X8, 0xACC000
	097 Move X8, [X8+3032]
	098 Move X0, [X8]
	099 Move W8, [X0+224]
	100 Compare W8, 0
	101 JumpIfNotEqual {103}
	102 Call 0x1C17DFC
	103 Move X0, X19
	104 Move X1, X31
	105 Call CryptoConfig.EncodeOID, X0
	106 Move [X31+4], W31
	107 Move [X31+16], X19
	108 Move X8, [X19]
	109 Move X9, [X1+64]
	110 Move X8, [X8+64]
	111 NotImplemented "Instruction CMP not yet implemented."
	112 Move X0, X19
	113 Call 0x1C17E08
	114 Move X8, [X0]
	115 Move [X31+4], W31
	116 Move [X31+16], X23
	117 Move [X31+24], X8
	118 Move X8, 0xAE8000
	119 Move X8, [X8+2808]
	120 Move X9, [X19]
	121 Move X1, [X8]
	122 Move X8, [X9+64]
	123 Move X9, [X1+64]
	124 NotImplemented "Instruction CMP not yet implemented."
	125 Move X0, X19
	126 Call 0x1C17E08
	127 Move W8, [X0]
	128 Move [X31+16], X23
	129 Move [X31+4], W8
	130 Move X8, 0xAA1000
	131 Move X8, [X8+3144]
	132 Move X19, 0xAE8000
	133 Move X0, [X8]
	134 Move W8, [X0+224]
	135 Move X19, [X19+2800]
	136 Compare W8, 0
	137 JumpIfNotEqual {139}
	138 Call 0x1C17DFC
	139 Move X0, X31
	140 Call CultureInfo.get_InvariantCulture
	141 Move X8, [X19]
	142 Move X26, X0
	143 Move X0, X8
	144 Call 0x1C17F10
	145 Move X1, X31
	146 Move X19, X0
	147 Call CollectionBase..ctor, X0
	148 Move X0, [X20+16]
	149 Compare X0, 0
	150 JumpIfEqual {678}
	151 Move X8, [X0]
	152 Move [X31+32], X19
	153 Move X9, [X8+904]
	154 Move X1, [X8+912]
	155 NotImplemented "Instruction BLR not yet implemented."
	156 Move X20, X0
	157 Compare X0, 0
	158 JumpIfEqual {679}
	159 Move X24, 0xA9F000
	160 Move X24, [X24+3608]
	161 Move X8, [X31+48]
	162 Move X22, -44814336
	163 Add X22, X22, 1548
	164 Move [X31+8], X8
	165 Move X8, [X20]
	166 Move X1, [X24]
	167 NotImplemented "Instruction LDRH not yet implemented."
	168 Compare X9, 0
	169 JumpIfEqual {176}
	170 Move X10, [X8+176]
	171 Add X10, X10, 8
	172 NotImplemented "Instruction LDUR not yet implemented."
	173 NotImplemented "Instruction CMP not yet implemented."
	174 Subtract X9, X9, 1
	175 Add X10, X10, 16
	176 Move X0, X20
	177 Move W2, W31
	178 Call 0x1C5D788
	179 NotImplemented "Instruction LDRSW not yet implemented."
	180 Add X8, X8, X9
	181 Add X0, X8, 312
	182 Move X8, [X0]
	183 Move X1, [X0+8]
	184 Move X0, X20
	185 NotImplemented "Instruction BLR not yet implemented."
	186 Move TEMP, X0
	187 And TEMP, TEMP, 1
	188 Compare TEMP, 1
	189 JumpIfNotEqual {537}
	190 Move X8, [X20]
	191 Move X1, [X24]
	192 NotImplemented "Instruction LDRH not yet implemented."
	193 Compare X9, 0
	194 JumpIfEqual {201}
	195 Move X10, [X8+176]
	196 Add X10, X10, 8
	197 NotImplemented "Instruction LDUR not yet implemented."
	198 NotImplemented "Instruction CMP not yet implemented."
	199 Subtract X9, X9, 1
	200 Add X10, X10, 16
	201 Move W2, 1
	202 Move X0, X20
	203 Call 0x1C5D788
	204 Move W9, [X10]
	205 Add W9, W9, 1
	206 Add X8, X8, W9
	207 Add X0, X8, 312
	208 Move X8, [X0]
	209 Move X1, [X0+8]
	210 Move X0, X20
	211 NotImplemented "Instruction BLR not yet implemented."
	212 Move X28, X0
	213 Compare X0, 0
	214 JumpIfEqual {226}
	215 Move X9, 0xAE5000
	216 Move X8, [X28]
	217 Move X9, [X9+672]
	218 Move W10, [X8+304]
	219 Move X1, [X9]
	220 Move W9, [X1+304]
	221 NotImplemented "Instruction CMP not yet implemented."
	222 Move X8, [X8+200]
	223 Add X8, X8, X9
	224 NotImplemented "Instruction LDUR not yet implemented."
	225 NotImplemented "Instruction CMP not yet implemented."
	226 NotImplemented "Instruction CMP not yet implemented."
	227 NotImplemented "Instruction ADR not yet implemented."
	228 NotImplemented "Instruction LDRH not yet implemented."
	229 Add X8, X8, X9
	230 CallNoReturn X8
	231 Compare X28, 0
	232 JumpIfEqual {639}
	233 Move X8, [X28]
	234 Move X9, [X8+472]
	235 Move X1, [X8+480]
	236 Move X0, X28
	237 NotImplemented "Instruction BLR not yet implemented."
	238 Move X1, X31
	239 Call Helpers.ToHexStringUpper, X0
	240 Move X1, X0
	241 Move W2, 1
	242 Move X0, X23
	243 Move X3, X26
	244 Move X4, X31
	245 Call String.Compare, X0, X1, X2, X3
	246 Compare W0, 0
	247 JumpIfEqual {493}
	248 Move X8, [X28]
	249 Move X9, [X8+488]
	250 Move X1, [X8+496]
	251 Move X0, X28
	252 NotImplemented "Instruction BLR not yet implemented."
	253 Move X1, X0
	254 Move W2, 1
	255 Move X0, X23
	256 Move X3, X26
	257 Move X4, X31
	258 Call String.Compare, X0, X1, X2, X3
	259 Compare X28, 0
	260 JumpIfEqual {657}
	261 Move X0, X28
	262 Call X509Certificate2.get_Extensions, X0
	263 Compare X0, 0
	264 JumpIfEqual {651}
	265 Move X8, 0xACF000
	266 Move X8, [X8+1904]
	267 Move X1, [X8]
	268 Call X509ExtensionCollection.get_Item, X0, X1
	269 Compare X0, 0
	270 JumpIfEqual {493}
	271 Move X8, 0xAE8000
	272 Move X8, [X8+2160]
	273 Move X9, [X0]
	274 Move X8, [X8]
	275 NotImplemented "Instruction CMP not yet implemented."
	276 Call X509KeyUsageExtension.get_KeyUsages, X0
	277 Move W8, [X31+4]
	278 NotImplemented "Instruction BICS not yet implemented."
	279 Compare X28, 0
	280 JumpIfEqual {627}
	281 Move X0, X28
	282 Move X1, X31
	283 Call X509Certificate.get_Issuer, X0
	284 Move X1, X0
	285 Move W2, 1
	286 Move X0, X23
	287 Move X3, X26
	288 Move X4, X31
	289 Call String.Compare, X0, X1, X2, X3
	290 Move X1, X28
	291 Call X509Certificate2Collection.GetKeyIdentifier, X0, X1
	292 Move X1, X0
	293 Move W2, 1
	294 Move X0, X23
	295 Move X3, X26
	296 Move X4, X31
	297 Call String.Compare, X0, X1, X2, X3
	298 Compare X28, 0
	299 JumpIfEqual {600}
	300 Move X0, X28
	301 Call X509Certificate2.get_Extensions, X0
	302 Compare X0, 0
	303 JumpIfEqual {615}
	304 Move X0, [X0+16]
	305 Compare X0, 0
	306 JumpIfEqual {630}
	307 Move X8, [X0]
	308 Move X1, [X8+672]
	309 Move X9, [X8+664]
	310 NotImplemented "Instruction BLR not yet implemented."
	311 Compare X28, 0
	312 JumpIfEqual {612}
	313 Move X0, X28
	314 Move X1, X31
	315 Call X509Certificate.get_Subject, X0
	316 Move X1, X0
	317 Move W2, 1
	318 Move X0, X23
	319 Move X3, X26
	320 Move X4, X31
	321 Call String.Compare, X0, X1, X2, X3
	322 Compare X28, 0
	323 JumpIfEqual {603}
	324 Move W2, 1
	325 Move X0, X28
	326 Move W1, W31
	327 Call X509Certificate2.GetNameInfo, X0, X1, X2
	328 Compare X0, 0
	329 JumpIfEqual {609}
	330 Move W2, 3
	331 Move X1, X23
	332 Move X3, X31
	333 Call String.IndexOf, X0, X1, X2
	334 Move TEMP, X0
	335 And TEMP, TEMP, -2147483648
	336 Compare TEMP, -2147483648
	337 JumpIfNotEqual {493}
	338 Compare X28, 0
	339 JumpIfEqual {606}
	340 Move X0, X28
	341 Move X1, X31
	342 Call X509Certificate.GetNotBefore, X0
	343 Move X8, 0xAA0000
	344 Move X8, [X8+2544]
	345 Move X27, X0
	346 Move X0, [X8]
	347 Move W8, [X0+224]
	348 Compare W8, 0
	349 JumpIfNotEqual {351}
	350 Call 0x1C17DFC
	351 Move X0, [X31+24]
	352 Move X1, X27
	353 Move X2, X31
	354 Call DateTime.op_LessThan, X0, X1
	355 Compare X28, 0
	356 JumpIfEqual {642}
	357 Move X0, X28
	358 Call X509Certificate2.get_SubjectName, X0
	359 Move X19, 0xAE8000
	360 Move X19, [X19+2800]
	361 Compare X0, 0
	362 JumpIfEqual {633}
	363 Move X8, [X0]
	364 Move X9, [X8+392]
	365 Move X2, [X8+400]
	366 Move W1, 1
	367 NotImplemented "Instruction BLR not yet implemented."
	368 Move X29, X0
	369 Move X0, [X19]
	370 Move W8, [X0+224]
	371 Compare W8, 0
	372 JumpIfNotEqual {374}
	373 Call 0x1C17DFC
	374 Compare X29, 0
	375 JumpIfEqual {624}
	376 Move X8, [X19]
	377 Move X8, [X8+184]
	378 Move X1, [X8]
	379 Move W2, 1
	380 Move X0, X29
	381 Move X3, X31
	382 Call String.Split, X0, X1, X2
	383 Move X29, X0
	384 Compare X0, 0
	385 JumpIfEqual {645}
	386 Move W8, [X29+24]
	387 NotImplemented "Instruction CMP not yet implemented."
	388 Move W19, W31
	389 NotImplemented "Instruction CMP not yet implemented."
	390 Add X8, X29, W19
	391 Move X27, [X8+32]
	392 Compare X27, 0
	393 JumpIfEqual {594}
	394 Move W1, 61
	395 Move X0, X27
	396 Move X2, X31
	397 Call String.IndexOf, X0, X1
	398 Move W2, W0
	399 Move W3, 3
	400 Move X0, X27
	401 Move X1, X23
	402 Move X4, X31
	403 Call String.IndexOf, X0, X1, X2, X3
	404 Move TEMP, X0
	405 And TEMP, TEMP, -2147483648
	406 Compare TEMP, -2147483648
	407 JumpIfNotEqual {493}
	408 Move W8, [X29+24]
	409 Add W19, W19, 1
	410 NotImplemented "Instruction CMP not yet implemented."
	411 Compare X28, 0
	412 JumpIfEqual {648}
	413 Move X8, [X28]
	414 Move X1, [X8+592]
	415 Move X9, [X8+584]
	416 Move X0, X28
	417 NotImplemented "Instruction BLR not yet implemented."
	418 Move X1, X0
	419 Move W2, 1
	420 Move X0, X23
	421 Move X3, X26
	422 Move X4, X31
	423 Call String.Compare, X0, X1, X2, X3
	424 Compare W0, 0
	425 JumpIfNotEqual {165}
	426 Compare X28, 0
	427 JumpIfEqual {636}
	428 Move X0, X28
	429 Move X1, X31
	430 Call X509Certificate.GetNotBefore, X0
	431 Move X8, 0xAA0000
	432 Move X8, [X8+2544]
	433 Move X27, X0
	434 Move X0, [X8]
	435 Move W8, [X0+224]
	436 Compare W8, 0
	437 JumpIfNotEqual {439}
	438 Call 0x1C17DFC
	439 Move X0, [X31+24]
	440 Move X1, X27
	441 Move X2, X31
	442 Call DateTime.op_GreaterThanOrEqual, X0, X1
	443 Move TEMP, X0
	444 And TEMP, TEMP, 1
	445 Compare TEMP, 1
	446 JumpIfNotEqual {165}
	447 Move X0, X28
	448 Move X1, X31
	449 Call X509Certificate.GetNotAfter, X0
	450 Move X8, 0xA9F000
	451 Move X8, [X8+2544]
	452 Move X27, X0
	453 Move X0, [X8]
	454 Move W8, [X0+224]
	455 Compare W8, 0
	456 JumpIfNotEqual {458}
	457 Call 0x1C17DFC
	458 Move X0, [X31+24]
	459 Move X1, X27
	460 Move X2, X31
	461 Call DateTime.op_LessThanOrEqual, X0, X1
	462 Compare X28, 0
	463 JumpIfEqual {621}
	464 Move X0, X28
	465 Call X509Certificate2.get_Extensions, X0
	466 Compare X0, 0
	467 JumpIfEqual {618}
	468 Move X1, [X31+16]
	469 Call X509ExtensionCollection.get_Item, X0, X1
	470 Compare X0, 0
	471 JumpIfNotEqual {493}
	472 Compare X28, 0
	473 JumpIfEqual {654}
	474 Move X0, X28
	475 Move X1, X31
	476 Call X509Certificate.GetNotAfter, X0
	477 Move X8, 0xA9F000
	478 Move X8, [X8+2544]
	479 Move X27, X0
	480 Move X0, [X8]
	481 Move W8, [X0+224]
	482 Compare W8, 0
	483 JumpIfNotEqual {485}
	484 Call 0x1C17DFC
	485 Move X0, [X31+24]
	486 Move X1, X27
	487 Move X2, X31
	488 Call DateTime.op_GreaterThan, X0, X1
	489 Move TEMP, X0
	490 And TEMP, TEMP, 1
	491 Compare TEMP, 1
	492 JumpIfNotEqual {165}
	493 Move W8, [X31+40]
	494 Move TEMP, X8
	495 And TEMP, TEMP, 1
	496 Compare TEMP, 1
	497 JumpIfNotEqual {511}
	498 Compare X28, 0
	499 JumpIfEqual {516}
	500 Move X0, X28
	501 Call X509Certificate2.Verify, X0
	502 Move TEMP, X0
	503 And TEMP, TEMP, 1
	504 Compare TEMP, 1
	505 JumpIfNotEqual {165}
	506 Move X0, [X31+32]
	507 Compare X0, 0
	508 JumpIfEqual {517}
	509 Move X1, X28
	510 Call X509Certificate2Collection.Add, X0, X1
	511 Move X0, [X31+32]
	512 Compare X0, 0
	513 JumpIfEqual {597}
	514 Move X1, X28
	515 Call X509Certificate2Collection.Add, X0, X1
	516 Call 0x1C17F20
	517 Call 0x1C17F20
	518 Move X28, X0
	519 NotImplemented "Instruction CMP not yet implemented."
	520 Move X0, X28
	521 Call 0x3EB2AD0
	522 Move X28, X0
	523 Move X0, 0xAA4000
	524 Move X0, [X0+3264]
	525 Call 0x1C17D08
	526 Move X8, [X28]
	527 Move X1, [X8]
	528 Call 0x1C18270
	529 Move TEMP, X0
	530 And TEMP, TEMP, 1
	531 Compare TEMP, 1
	532 JumpIfNotEqual {727}
	533 Move X8, [X28]
	534 Move [X31+8], X8
	535 Call 0x3EB2AE0
	536 Move [X31+56], W31
	537 Move X8, [X31+8]
	538 Move X22, 0xA9E000
	539 Move X19, [X31+32]
	540 Move X21, X31
	541 Move [X31+48], X8
	542 Move X22, [X22+3584]
	543 Move X1, [X22]
	544 Move X0, X20
	545 Call 0x1C17E00
	546 Compare X0, 0
	547 JumpIfEqual {570}
	548 Move X8, [X0]
	549 Move X1, [X22]
	550 Move X20, X0
	551 NotImplemented "Instruction LDRH not yet implemented."
	552 Compare X9, 0
	553 JumpIfEqual {560}
	554 Move X10, [X8+176]
	555 Add X10, X10, 8
	556 NotImplemented "Instruction LDUR not yet implemented."
	557 NotImplemented "Instruction CMP not yet implemented."
	558 Subtract X9, X9, 1
	559 Add X10, X10, 16
	560 Move X0, X20
	561 Move W2, W31
	562 Call 0x1C5D788
	563 NotImplemented "Instruction LDRSW not yet implemented."
	564 Add X8, X8, X9
	565 Add X0, X8, 312
	566 Move X8, [X0]
	567 Move X1, [X0+8]
	568 Move X0, X20
	569 NotImplemented "Instruction BLR not yet implemented."
	570 Compare X21, 0
	571 JumpIfNotEqual {680}
	572 Move X0, X19
	573 Move X20, [X31+144]
	574 Move X19, [X31+152]
	575 Move X22, [X31+128]
	576 Move X21, [X31+136]
	577 Move X24, [X31+112]
	578 Move X23, [X31+120]
	579 Move X26, [X31+96]
	580 Move X25, [X31+104]
	581 Move X28, [X31+80]
	582 Move X27, [X31+88]
	583 Move X29, [X31+64]
	584 Move X30, [X31+72]
	585 Add X31, X31, 160
	586 Return X0
	587 Move X8, [X31+8]
	588 Move [X31+48], X8
	589 Move X0, X28
	590 Call 0x1C181E0
	591 Move X8, [X31+8]
	592 Move [X31+48], X8
	593 Call 0x1C17F28
	594 Move X8, [X31+8]
	595 Move [X31+48], X8
	596 Call 0x1C17F20
	597 Move X8, [X31+8]
	598 Move [X31+48], X8
	599 Call 0x1C17F20
	600 Move X8, [X31+8]
	601 Move [X31+48], X8
	602 Call 0x1C17F20
	603 Move X8, [X31+8]
	604 Move [X31+48], X8
	605 Call 0x1C17F20
	606 Move X8, [X31+8]
	607 Move [X31+48], X8
	608 Call 0x1C17F20
	609 Move X8, [X31+8]
	610 Move [X31+48], X8
	611 Call 0x1C17F20
	612 Move X8, [X31+8]
	613 Move [X31+48], X8
	614 Call 0x1C17F20
	615 Move X8, [X31+8]
	616 Move [X31+48], X8
	617 Call 0x1C17F20
	618 Move X8, [X31+8]
	619 Move [X31+48], X8
	620 Call 0x1C17F20
	621 Move X8, [X31+8]
	622 Move [X31+48], X8
	623 Call 0x1C17F20
	624 Move X8, [X31+8]
	625 Move [X31+48], X8
	626 Call 0x1C17F20
	627 Move X8, [X31+8]
	628 Move [X31+48], X8
	629 Call 0x1C17F20
	630 Move X8, [X31+8]
	631 Move [X31+48], X8
	632 Call 0x1C17F20
	633 Move X8, [X31+8]
	634 Move [X31+48], X8
	635 Call 0x1C17F20
	636 Move X8, [X31+8]
	637 Move [X31+48], X8
	638 Call 0x1C17F20
	639 Move X8, [X31+8]
	640 Move [X31+48], X8
	641 Call 0x1C17F20
	642 Move X8, [X31+8]
	643 Move [X31+48], X8
	644 Call 0x1C17F20
	645 Move X8, [X31+8]
	646 Move [X31+48], X8
	647 Call 0x1C17F20
	648 Move X8, [X31+8]
	649 Move [X31+48], X8
	650 Call 0x1C17F20
	651 Move X8, [X31+8]
	652 Move [X31+48], X8
	653 Call 0x1C17F20
	654 Move X8, [X31+8]
	655 Move [X31+48], X8
	656 Call 0x1C17F20
	657 Move X8, [X31+8]
	658 Move [X31+48], X8
	659 Call 0x1C17F20
	660 Move X0, 0xAA3000
	661 Move X0, [X0+1320]
	662 Call 0x1C17D08
	663 Call 0x1C17F10
	664 Move X19, X0
	665 Move X0, 0xAE7000
	666 Move X0, [X0+2816]
	667 Call 0x1C17D08
	668 Move X1, X0
	669 Move X0, X19
	670 Move X2, X31
	671 Call ArgumentNullException..ctor, X0, X1
	672 Move X0, 0xAE7000
	673 Move X0, [X0+2824]
	674 Call 0x1C17D08
	675 Move X1, X0
	676 Move X0, X19
	677 Call 0x1C17DEC
	678 Call 0x1C17F20
	679 Call 0x1C17F20
	680 Move X0, X21
	681 Call 0x1C17F18
	682 Move X0, X19
	683 Call 0x1C181E0
	684 Move X0, X19
	685 Call 0x1C181E0
	686 Move X0, X19
	687 Call 0x1C181E0
	688 Move X0, 0xA9E000
	689 Move X0, [X0+2512]
	690 Call 0x1C17D08
	691 Move W1, 1
	692 Call 0x1C17D6C
	693 Move X19, X0
	694 Move [X31+44], W21
	695 Move X0, 0xAE7000
	696 Move X0, [X0+2832]
	697 Call 0x1C17D08
	698 Add X1, X31, 44
	699 Call 0x1C17E04
	700 Move X20, X0
	701 Move X0, X19
	702 Call 0x19913C0
	703 Move X0, X19
	704 Move X1, X20
	705 Call 0x19990B4
	706 Move X0, X19
	707 Move X1, X31
	708 Move X2, X20
	709 Call 0x1994444
	710 Move X0, 0xAE7000
	711 Move X0, [X0+2840]
	712 Call 0x1C17D08
	713 Move X1, X19
	714 Move X2, X31
	715 Call Locale.GetText, X0, X1
	716 Move X19, X0
	717 Move X0, 0xACB000
	718 Move X0, [X0+3296]
	719 Call 0x1C17D08
	720 Call 0x1C17F10
	721 Move X1, X19
	722 Move X2, X31
	723 Move X20, X0
	724 Call CryptographicException..ctor, X0, X1
	725 Move X0, X19
	726 Call 0x1C181E0
	727 Move X8, [X31+8]
	728 Move W0, 8
	729 Move [X31+48], X8
	730 Call 0x3EB2AF0
	731 Move X8, [X28]
	732 Move [X0], X8
	733 Move X1, 0x85F000
	734 Add X1, X1, 3672
	735 Move X2, X31
	736 Call 0x3EB2B00
	737 Move X8, [X31+8]
	738 Move X21, X1
	739 Move X28, X0
	740 Move [X31+48], X8
	741 Move X21, X1
	742 Move X28, X0
	743 Call 0x3EB2AE0
	744 Move X22, 0xA9E000
	745 Move X19, [X31+32]
	746 Move X22, [X22+3584]
	747 Move X1, X21
	748 NotImplemented "Instruction CMP not yet implemented."
	749 Move X28, X0
	750 Move X0, X28
	751 Call 0x3EB2AD0
	752 Move X20, X0
	753 Move X0, 0xA9E000
	754 Move X0, [X0+2000]
	755 Call 0x1C17D08
	756 Move X8, [X20]
	757 Move X1, [X8]
	758 Call 0x1C18270
	759 Move TEMP, X0
	760 And TEMP, TEMP, 1
	761 Compare TEMP, 1
	762 JumpIfEqual {854}
	763 Move W0, 8
	764 Call 0x3EB2AF0
	765 Move X8, [X20]
	766 Move [X0], X8
	767 Move X1, 0x85F000
	768 Add X1, X1, 3672
	769 Move X2, X31
	770 Call 0x3EB2B00
	771 Move X28, X0
	772 Call 0x3EB2AE0
	773 Move X28, X0
	774 NotImplemented "Instruction CMP not yet implemented."
	775 Move X0, X28
	776 Call 0x3EB2AD0
	777 Move X20, X0
	778 Move X0, 0xACD000
	779 Move X0, [X0+3768]
	780 Call 0x1C17D08
	781 Move X8, [X20]
	782 Move X1, [X8]
	783 Call 0x1C18270
	784 Move TEMP, X0
	785 And TEMP, TEMP, 1
	786 Compare TEMP, 1
	787 JumpIfNotEqual {829}
	788 Call 0x3EB2AE0
	789 Move X0, 0xA9E000
	790 Move X0, [X0+2512]
	791 Call 0x1C17D08
	792 Move W1, 1
	793 Call 0x1C17D6C
	794 Move X20, X0
	795 Call 0x19913C0
	796 Move X0, X20
	797 Move X1, X19
	798 Call 0x19990B4
	799 Move X0, X20
	800 Move X1, X31
	801 Move X2, X19
	802 Call 0x1994444
	803 Move X0, 0xAE7000
	804 Move X0, [X0+2848]
	805 Call 0x1C17D08
	806 Move X1, X20
	807 Move X2, X31
	808 Call Locale.GetText, X0, X1
	809 Move X19, X0
	810 Move X0, 0xAA6000
	811 Move X0, [X0+1400]
	812 Call 0x1C17D08
	813 Call 0x1C17F10
	814 Move X20, X0
	815 Move X0, 0xAE7000
	816 Move X0, [X0+2816]
	817 Call 0x1C17D08
	818 Move X1, X0
	819 Move X0, X20
	820 Move X2, X19
	821 Move X3, X31
	822 Call ArgumentException..ctor, X0, X1, X2
	823 Move X0, 0xAE7000
	824 Move X0, [X0+2824]
	825 Call 0x1C17D08
	826 Move X1, X0
	827 Move X0, X20
	828 Call 0x1C17DEC
	829 Move W0, 8
	830 Call 0x3EB2AF0
	831 Move X8, [X20]
	832 Move [X0], X8
	833 Move X1, 0x85F000
	834 Add X1, X1, 3672
	835 Move X2, X31
	836 Call 0x3EB2B00
	837 Move X28, X0
	838 Call 0x3EB2AE0
	839 NotImplemented "Instruction CMP not yet implemented."
	840 Move X28, X0
	841 Move X0, X28
	842 Call 0x3EB2AD0
	843 Move X20, X0
	844 Move X0, 0xA9E000
	845 Move X0, [X0+2000]
	846 Call 0x1C17D08
	847 Move X8, [X20]
	848 Move X1, [X8]
	849 Call 0x1C18270
	850 Move TEMP, X0
	851 And TEMP, TEMP, 1
	852 Compare TEMP, 1
	853 JumpIfNotEqual {881}
	854 Move X20, [X20]
	855 Call 0x3EB2AE0
	856 Move X0, 0xA9E000
	857 Move X0, [X0+2512]
	858 Call 0x1C17D08
	859 Move W1, 2
	860 Call 0x1C17D6C
	861 Move X21, X0
	862 Move X0, X19
	863 Call 0x19913C0
	864 Move X0, X19
	865 Move X1, X31
	866 Call "il2cpp_vm_object_is_inst", X0
	867 Move X19, X0
	868 Move X0, X21
	869 Call 0x19913C0
	870 Move X0, X21
	871 Move X1, X19
	872 Call 0x19990B4
	873 Move X0, X21
	874 Move X1, X31
	875 Move X2, X19
	876 Call 0x1994444
	877 Move X0, X21
	878 Call 0x19913C0
	879 Move X19, 0xAE7000
	880 Move X19, [X19+2856]
	881 Move W0, 8
	882 Call 0x3EB2AF0
	883 Move X8, [X20]
	884 Move [X0], X8
	885 Move X1, 0x85F000
	886 Add X1, X1, 3672
	887 Move X2, X31
	888 Call 0x3EB2B00
	889 Move X28, X0
	890 Call 0x3EB2AE0
	891 NotImplemented "Instruction CMP not yet implemented."
	892 Move X28, X0
	893 Move X0, X28
	894 Call 0x3EB2AD0
	895 Move X20, X0
	896 Move X0, 0xA9E000
	897 Move X0, [X0+2000]
	898 Call 0x1C17D08
	899 Move X8, [X20]
	900 Move X1, [X8]
	901 Call 0x1C18270
	902 Move TEMP, X0
	903 And TEMP, TEMP, 1
	904 Compare TEMP, 1
	905 JumpIfNotEqual {933}
	906 Move X20, [X20]
	907 Call 0x3EB2AE0
	908 Move X0, 0xA9E000
	909 Move X0, [X0+2512]
	910 Call 0x1C17D08
	911 Move W1, 2
	912 Call 0x1C17D6C
	913 Move X21, X0
	914 Move X0, X19
	915 Call 0x19913C0
	916 Move X0, X19
	917 Move X1, X31
	918 Call "il2cpp_vm_object_is_inst", X0
	919 Move X19, X0
	920 Move X0, X21
	921 Call 0x19913C0
	922 Move X0, X21
	923 Move X1, X19
	924 Call 0x19990B4
	925 Move X0, X21
	926 Move X1, X31
	927 Move X2, X19
	928 Call 0x1994444
	929 Move X0, X21
	930 Call 0x19913C0
	931 Move X19, 0xAE7000
	932 Move X19, [X19+2864]
	933 Move W0, 8
	934 Call 0x3EB2AF0
	935 Move X8, [X20]
	936 Move [X0], X8
	937 Move X1, 0x85F000
	938 Add X1, X1, 3672
	939 Move X2, X31
	940 Call 0x3EB2B00
	941 Move X28, X0
	942 Call 0x3EB2AE0
	943 NotImplemented "Instruction CMP not yet implemented."
	944 Move X28, X0
	945 Move X0, X28
	946 Call 0x3EB2AD0
	947 Move X20, X0
	948 Move X0, 0xA9E000
	949 Move X0, [X0+2000]
	950 Call 0x1C17D08
	951 Move X8, [X20]
	952 Move X1, [X8]
	953 Call 0x1C18270
	954 Move TEMP, X0
	955 And TEMP, TEMP, 1
	956 Compare TEMP, 1
	957 JumpIfNotEqual {1018}
	958 Move X20, [X20]
	959 Call 0x3EB2AE0
	960 Move X0, 0xA9E000
	961 Move X0, [X0+2512]
	962 Call 0x1C17D08
	963 Move W1, 2
	964 Call 0x1C17D6C
	965 Move X21, X0
	966 Move X0, X19
	967 Call 0x19913C0
	968 Move X0, X19
	969 Move X1, X31
	970 Call "il2cpp_vm_object_is_inst", X0
	971 Move X19, X0
	972 Move X0, X21
	973 Call 0x19913C0
	974 Move X0, X21
	975 Move X1, X19
	976 Call 0x19990B4
	977 Move X0, X21
	978 Move X1, X31
	979 Move X2, X19
	980 Call 0x1994444
	981 Move X0, X21
	982 Call 0x19913C0
	983 Move X19, 0xAC8000
	984 Move X19, [X19+2744]
	985 Move X0, X19
	986 Call 0x1C17D08
	987 Move X1, X0
	988 Move X0, X21
	989 Call 0x19990B4
	990 Move X0, X19
	991 Call 0x1C17D08
	992 Move X2, X0
	993 Move W1, 1
	994 Move X0, X21
	995 Call 0x1994444
	996 Move X0, 0xAE7000
	997 Move X0, [X0+2872]
	998 Call 0x1C17D08
	999 Move X1, X21
	1000 Move X2, X31
	1001 Call Locale.GetText, X0, X1
	1002 Move X19, X0
	1003 Move X0, 0xACB000
	1004 Move X0, [X0+3296]
	1005 Call 0x1C17D08
	1006 Call 0x1C17F10
	1007 Move X1, X19
	1008 Move X2, X20
	1009 Move X3, X31
	1010 Move X21, X0
	1011 Call CryptographicException..ctor, X0, X1, X2
	1012 Move X0, 0xAE7000
	1013 Move X0, [X0+2824]
	1014 Call 0x1C17D08
	1015 Move X1, X0
	1016 Move X0, X21
	1017 Call 0x1C17DEC
	1018 Move W0, 8
	1019 Call 0x3EB2AF0
	1020 Move X8, [X20]
	1021 Move [X0], X8
	1022 Move X1, 0x85F000
	1023 Add X1, X1, 3672
	1024 Move X2, X31
	1025 Call 0x3EB2B00
	1026 Move X28, X0
	1027 Call 0x3EB2AE0
	1028 Move X0, X28
	1029 Call 0x1D2D690
	1030 Move X28, X0
	1031 Move X28, X0
	1032 Move X8, [X31+8]
	1033 Move [X31+48], X8
	1034 Move X22, 0xA9E000
	1035 Move X19, [X31+32]
	1036 Move X22, [X22+3584]
	1037 NotImplemented "Instruction CMP not yet implemented."
	1038 Move X0, X28
	1039 Call 0x3EB2AD0
	1040 Move X21, [X0]
	1041 Call 0x3EB2AE0
	1042 Move X21, X31
	1043 Move X28, X0
	1044 Move X22, 0xA9E000
	1045 Move X22, [X22+3584]
	1046 Move X1, [X22]
	1047 Move X0, X20
	1048 Call 0x1C17E00
	1049 Move X19, X0
	1050 Compare X0, 0
	1051 JumpIfEqual {1073}
	1052 Move X8, [X19]
	1053 Move X1, [X22]
	1054 NotImplemented "Instruction LDRH not yet implemented."
	1055 Compare X9, 0
	1056 JumpIfEqual {1063}
	1057 Move X10, [X8+176]
	1058 Add X10, X10, 8
	1059 NotImplemented "Instruction LDUR not yet implemented."
	1060 NotImplemented "Instruction CMP not yet implemented."
	1061 Subtract X9, X9, 1
	1062 Add X10, X10, 16
	1063 Move X0, X19
	1064 Move W2, W31
	1065 Call 0x1C5D788
	1066 NotImplemented "Instruction LDRSW not yet implemented."
	1067 Add X8, X8, X9
	1068 Add X0, X8, 312
	1069 Move X8, [X0]
	1070 Move X1, [X0+8]
	1071 Move X0, X19
	1072 NotImplemented "Instruction BLR not yet implemented."
	1073 Compare X21, 0
	1074 JumpIfEqual {1028}
	1075 Move X0, X21
	1076 Call 0x1C17F18
	1077 Call 0x1991590

Method: System.Security.Cryptography.X509Certificates.X509Certificate2Enumerator GetEnumerator()

Disassembly:
	0x03656B3C CBZ X0, 0x3656F98
	0x03656B40 MOV X1, X31
	0x03656B44 BL 0x3352004
	0x03656B48 CBZ W0, 0x3656CC4
	0x03656B4C MOV X0, X20
	0x03656B50 MOV X1, X31
	0x03656B54 BL 0x31EC4A8
	0x03656B58 CBZ X0, 0x3656F98
	0x03656B5C LDR X8, [X0]
	0x03656B60 LDR X9, [X8 + 0x298]
	0x03656B64 LDR X1, [X8 + 0x2A0]
	0x03656B68 BLR X9
	0x03656B6C CBZ W0, 0x3656CCC
	0x03656B70 MOV X0, X20
	0x03656B74 MOV X1, X31
	0x03656B78 BL 0x31EC4A8
	0x03656B7C CBZ X0, 0x3656F98
	0x03656B80 LDR X8, [X0]
	0x03656B84 MOV W1, W31
	0x03656B88 LDR X9, [X8 + 0x2E8]
	0x03656B8C LDR X2, [X8 + 0x2F0]
	0x03656B90 BLR X9

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xD8B000
	006 Move X21, 0xAE7000
	007 Move W8, [X20+1582]
	008 Move X21, [X21+2888]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xAE7000
	015 Move X0, [X0+2888]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1582], W8
	019 Move X0, [X21]
	020 Call 0x1C17F10
	021 Move X1, X19
	022 Move X20, X0
	023 Call X509Certificate2Enumerator..ctor, X0, X1
	024 Move X0, X20
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Return X0

Method: System.Void .cctor()

Disassembly:
	0x03656C48 MOV X0, X21
	0x03656C4C BLR X9
	0x03656C50 CBZ X0, 0x3656F9C
	0x03656C54 LDR X8, [X0]
	0x03656C58 LDP X9, X2, [X8 + 0x1C8]
	0x03656C5C MOV W1, W31
	0x03656C60 BLR X9
	0x03656C64 MOV X1, X0
	0x03656C68 MOV X0, X24
	0x03656C6C MOV X2, X31
	0x03656C70 BL 0x321BA08
	0x03656C74 TBNZ X0, 0x0, 0x3656CBC
	0x03656C78 MOV X0, X21
	0x03656C7C MOV X1, X31
	0x03656C80 BL 0x31EDFBC
	0x03656C84 CBZ X0, 0x3656C08
	0x03656C88 MOV X0, X21
	0x03656C8C MOV X1, X31
	0x03656C90 BL 0x31EDFBC
	0x03656C94 CBZ X0, 0x3656FA0
	0x03656C98 LDR X8, [X0]
	0x03656C9C LDP X9, X2, [X8 + 0x1C8]
	0x03656CA0 MOV W1, W31
	0x03656CA4 BLR X9
	0x03656CA8 MOV X1, X0
	0x03656CAC MOV X0, X24
	0x03656CB0 MOV X2, X31
	0x03656CB4 BL 0x321BA08
	0x03656CB8 TBZ X0, 0x0, 0x3656C08
	0x03656CBC MOV X24, X31
	0x03656CC0 B 0x3656D04
	0x03656CC4 MOV X21, X31
	0x03656CC8 B 0x3656F78
	0x03656CCC MOV X0, X20
	0x03656CD0 MOV X1, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0xD8B000
	005 Move X20, 0xA9E000
	006 Move W8, [X19+1583]
	007 Move X20, [X20+2760]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0xA9E000
	013 Move X0, [X0+2760]
	014 Call 0x1C17CF4
	015 Move X0, 0xAE7000
	016 Move X0, [X0+2800]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X19+1583], W8
	020 Move X0, [X20]
	021 Move W1, 1
	022 Call 0x1C17D6C
	023 Move X19, X0
	024 Move X0, X31
	025 Call Environment.get_NewLine
	026 Compare X19, 0
	027 JumpIfEqual {41}
	028 Move W8, [X19+24]
	029 Compare W8, 0
	030 JumpIfEqual {42}
	031 Move X8, 0xAE7000
	032 Move X8, [X8+2800]
	033 Move [X19+32], X0
	034 Move X8, [X8]
	035 Move X8, [X8+184]
	036 Move [X8], X19
	037 Move X20, [X31+16]
	038 Move X19, [X31+24]
	039 Move X30, [X31+32]
	040 Return 
	041 Call 0x1C17F20
	042 Call 0x1C17F28

