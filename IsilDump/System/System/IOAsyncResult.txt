Type: System.IOAsyncResult

Method: System.Void .ctor()

Disassembly:
	0x0362F388 BL 0x1C5C788
	0x0362F38C B 0x362F3BC

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Void Init(System.AsyncCallback async_callback, System.Object async_state)

Disassembly:
	0x0362F390 LDR X0, [X19 + 0x40]
	0x0362F394 LDR X8, [X19 + 0x18]
	0x0362F398 LDR X3, [X19 + 0x28]
	0x0362F39C MOV X1, X20
	0x0362F3A0 MOV X2, X21
	0x0362F3A4 BLR X8
	0x0362F3A8 B 0x362F3D0
	0x0362F3AC LDR W9, [X10]

ISIL:
	001 Move X8, X0
	002 Move X0, [X0+32]
	003 Move [X8+16], X1
	004 Move [X8+24], X2
	005 NotImplemented "Instruction STRH not yet implemented."
	006 Compare X0, 0
	007 JumpIfEqual {11}
	008 Move X1, X31
	009 Call EventWaitHandle.Reset, X0
	010 Return 
	011 Return 

Method: System.Void .ctor(System.AsyncCallback async_callback, System.Object async_state)

Disassembly:
	0x0362F3B0 ADD W9, W9, 0x1
	0x0362F3B4 ADD X8, X8, W9, 0x4, SXTW
	0x0362F3B8 ADD X0, X8, 0x138
	0x0362F3BC LDP X8, X3, [X0]
	0x0362F3C0 MOV X0, X22
	0x0362F3C4 MOV X1, X19
	0x0362F3C8 MOV X2, X23
	0x0362F3CC BLR X8
	0x0362F3D0 LDP X20, X19, [X31 + 0x30]
	0x0362F3D4 LDP X22, X21, [X31 + 0x20]
	0x0362F3D8 LDP X24, X23, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, X1
	006 Move X1, X31
	007 Move X19, X2
	008 Move X21, X0
	009 Call Object..ctor, X0
	010 Move [X21+16], X20
	011 Move [X21+24], X19
	012 Move X20, [X31+16]
	013 Move X19, [X31+24]
	014 Move X30, [X31+32]
	015 Move X21, [X31+40]
	016 Return 

Method: System.AsyncCallback get_AsyncCallback()

Disassembly:
	0x0362F3DC LDR X30, [X31], #0x40
	0x0362F3E0 RET

ISIL:
	001 Move X0, [X0+16]
	002 Return X0

Method: System.Object get_AsyncState()

Disassembly:
	0x0362F3E4 BL 0x1C16F20
	0x0362F3E8 BL 0x1C16F20

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Threading.WaitHandle get_AsyncWaitHandle()

Disassembly:
	0x0362F3EC BL 0x1C16F28
	0x0362F3F0 BL 0x1C16F28
	0x0362F3F4 BL 0x1C16F20
	0x0362F3F8 BL 0x1C16F44
	0x0362F3FC MOV X1, X31
	0x0362F400 BL 0x1C16DEC
	0x0362F404 BL 0x1C16F44
	0x0362F408 MOV X1, X31
	0x0362F40C BL 0x1C16DEC
	0x0362F410 B 0x362F430
	0x0362F414 B 0x362F430
	0x0362F418 B 0x362F430
	0x0362F41C B 0x362F430
	0x0362F420 B 0x362F430
	0x0362F424 B 0x362F430
	0x0362F428 B 0x362F430
	0x0362F42C B 0x362F430
	0x0362F430 MOV X19, X0
	0x0362F434 CMP W1, 0x1
	0x0362F438 B.NE 0x362F4A0
	0x0362F43C MOV X0, X19
	0x0362F440 BL 0x3EB1AD0
	0x0362F444 MOV X19, X0
	0x0362F448 ADRP X0, 0xACA000
	0x0362F44C LDR X0, [X0 + 0xCC0]
	0x0362F450 BL 0x1C16D08
	0x0362F454 LDR X8, [X19]
	0x0362F458 LDR X1, [X8]
	0x0362F45C BL 0x1C17270
	0x0362F460 TBZ X0, 0x0, 0x362F478
	0x0362F464 LDP X20, X19, [X31 + 0x30]
	0x0362F468 LDP X22, X21, [X31 + 0x20]
	0x0362F46C LDP X24, X23, [X31 + 0x10]
	0x0362F470 LDR X30, [X31], #0x40
	0x0362F474 B 0x3EB1AE0
	0x0362F478 MOVZ W0, 0x8
	0x0362F47C BL 0x3EB1AF0
	0x0362F480 LDR X8, [X19]
	0x0362F484 STR X8, [X0]
	0x0362F488 ADRP X1, 0x885000
	0x0362F48C ADD X1, X1, 0xE58
	0x0362F490 MOV X2, X31
	0x0362F494 BL 0x3EB1B00
	0x0362F498 MOV X19, X0
	0x0362F49C BL 0x3EB1AE0
	0x0362F4A0 MOV X0, X19
	0x0362F4A4 BL 0x1D2C690
	0x0362F4A8 BL 0x1990590
	0x0362F4AC STR X30, [X31 - 0x30]!
	0x0362F4B0 STP X22, X21, [X31 + 0x10]
	0x0362F4B4 STP X20, X19, [X31 + 0x20]
	0x0362F4B8 ADRP X21, 0xDB1000
	0x0362F4BC ADRP X22, 0xAF0000
	0x0362F4C0 LDRB W8, [X21 + 0x50C]
	0x0362F4C4 LDR X22, [X22 + 0x158]
	0x0362F4C8 MOV X19, X1
	0x0362F4CC MOV X20, X0
	0x0362F4D0 TBNZ X8, 0x0, 0x362F4E8
	0x0362F4D4 ADRP X0, 0xAF0000
	0x0362F4D8 LDR X0, [X0 + 0x158]
	0x0362F4DC BL 0x1C16CF4
	0x0362F4E0 MOVZ W8, 0x1
	0x0362F4E4 STRB W8, [X21 + 0x50C]
	0x0362F4E8 LDR X0, [X22]
	0x0362F4EC LDR W8, [X0 + 0xE0]
	0x0362F4F0 CBNZ W8, 0x362F4F8
	0x0362F4F4 BL 0x1C16DFC
	0x0362F4F8 MOV X0, X20
	0x0362F4FC MOV X1, X31
	0x0362F500 BL 0x33671B0

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xDB2000
	007 Move W8, [X20+1282]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xAF6000
	014 Move X0, [X0+1992]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X20+1282], W8
	018 Move [X31+12], W31
	019 Add X1, X31, 12
	020 Move X0, X19
	021 Move X2, X31
	022 Call Monitor.Enter, X0, X1
	023 Move X21, [X19+32]
	024 Compare X21, 0
	025 JumpIfEqual {27}
	026 Move X20, X31
	027 Move X8, 0xAF6000
	028 Move W20, [X19+41]
	029 Move X8, [X8+1992]
	030 Move X0, [X8]
	031 Call 0x1C17F10
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move X21, X0
	034 NotImplemented "Instruction CSET not yet implemented."
	035 Move X2, X31
	036 Call ManualResetEvent..ctor, X0, X1
	037 Move X20, X31
	038 Move [X19+32], X21
	039 Move W8, [X31+12]
	040 Compare W8, 0
	041 JumpIfEqual {45}
	042 Move X0, X19
	043 Move X1, X31
	044 Call Monitor.Exit, X0
	045 Compare X20, 0
	046 JumpIfNotEqual {54}
	047 Move X0, X21
	048 Move X20, [X31+32]
	049 Move X19, [X31+40]
	050 Move X30, [X31+16]
	051 Move X21, [X31+24]
	052 Add X31, X31, 48
	053 Return X0
	054 Move X0, X20
	055 Call 0x1C17F18
	056 Move X21, X0
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Move X0, X21
	059 Call 0x3EB2AD0
	060 Move X20, [X0]
	061 Call 0x3EB2AE0
	062 Move X21, X31
	063 Move X20, X31
	064 Move X21, X0
	065 Move W8, [X31+12]
	066 Compare W8, 0
	067 JumpIfEqual {71}
	068 Move X0, X19
	069 Move X1, X31
	070 Call Monitor.Exit, X0
	071 Compare X20, 0
	072 JumpIfNotEqual {75}
	073 Move X0, X21
	074 Call 0x1D2D690
	075 Move X0, X20
	076 Call 0x1C17F18
	077 Call 0x1991590

Method: System.Boolean get_CompletedSynchronously()

Disassembly:
	0x0362F504 STR X19, [X20 + 0x10]
	0x0362F508 LDP X20, X19, [X31 + 0x20]

ISIL:
	001 Move W0, [X0+40]
	002 Return X0

Method: System.Void set_CompletedSynchronously(System.Boolean value)

Disassembly:
	0x0362F50C LDP X22, X21, [X31 + 0x10]
	0x0362F510 LDR X30, [X31], #0x30
	0x0362F514 RET

ISIL:
	001 And W8, W1, 1
	002 Move [X0+40], W8
	003 Return 

Method: System.Boolean get_IsCompleted()

Disassembly:
	0x0362F518 STR X30, [X31 - 0x30]!
	0x0362F51C STP X22, X21, [X31 + 0x10]

ISIL:
	001 Move W0, [X0+41]
	002 Return X0

Method: System.Void set_IsCompleted(System.Boolean value)

Disassembly:
	0x0362F520 STP X20, X19, [X31 + 0x20]
	0x0362F524 ADRP X21, 0xDB1000
	0x0362F528 ADRP X22, 0xB0C000
	0x0362F52C LDRB W8, [X21 + 0x50B]
	0x0362F530 LDR X22, [X22 + 0x6C0]
	0x0362F534 MOV X19, X1
	0x0362F538 MOV X20, X0
	0x0362F53C TBNZ X8, 0x0, 0x362F554
	0x0362F540 ADRP X0, 0xB0C000
	0x0362F544 LDR X0, [X0 + 0x6C0]
	0x0362F548 BL 0x1C16CF4
	0x0362F54C MOVZ W8, 0x1
	0x0362F550 STRB W8, [X21 + 0x50B]
	0x0362F554 LDR X0, [X22]
	0x0362F558 LDR W8, [X0 + 0xE0]
	0x0362F55C CBNZ W8, 0x362F564
	0x0362F560 BL 0x1C16DFC
	0x0362F564 MOV X0, X20
	0x0362F568 MOV X1, X19
	0x0362F56C LDP X20, X19, [X31 + 0x20]
	0x0362F570 LDP X22, X21, [X31 + 0x10]
	0x0362F574 MOV X2, X31
	0x0362F578 LDR X30, [X31], #0x30
	0x0362F57C B 0x365F930
	0x0362F580 STP X30, X19, [X31 - 0x10]!
	0x0362F584 LDRB W8, [X0 + 0x18]
	0x0362F588 MOV X19, X0
	0x0362F58C CBNZ W8, 0x362F5B0
	0x0362F590 MOVZ W8, 0x1
	0x0362F594 MOV X0, X19
	0x0362F598 MOV X1, X31
	0x0362F59C STRB W8, [X19 + 0x18]
	0x0362F5A0 BL 0x365F958
	0x0362F5A4 MOV X1, X31
	0x0362F5A8 BL 0x320A1E4
	0x0362F5AC STR X0, [X19 + 0x10]
	0x0362F5B0 MOV X0, X19
	0x0362F5B4 MOV X1, X31
	0x0362F5B8 LDP X30, X19, [X31], #0x10
	0x0362F5BC B 0x365F958
	0x0362F5C0 STR X30, [X31 - 0x30]!
	0x0362F5C4 STP X22, X21, [X31 + 0x10]
	0x0362F5C8 STP X20, X19, [X31 + 0x20]
	0x0362F5CC MOV X21, X1
	0x0362F5D0 MOV X1, X31
	0x0362F5D4 MOV W19, W3
	0x0362F5D8 MOV W20, W2
	0x0362F5DC MOV X22, X0
	0x0362F5E0 BL 0x33BDD8C
	0x0362F5E4 STR X21, [X22 + 0x18]
	0x0362F5E8 STP W20, W19, [X22 + 0x10]
	0x0362F5EC LDP X20, X19, [X31 + 0x20]
	0x0362F5F0 LDP X22, X21, [X31 + 0x10]
	0x0362F5F4 LDR X30, [X31], #0x30

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move W20, W1
	007 Move X19, X0
	008 And W8, W1, 1
	009 Move [X0+41], W8
	010 Move [X31+12], W31
	011 Add X1, X31, 12
	012 Move X2, X31
	013 Call Monitor.Enter, X0, X1
	014 Move TEMP, X20
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfNotEqual {24}
	018 Move X0, [X19+32]
	019 Compare X0, 0
	020 JumpIfEqual {24}
	021 Move X1, X31
	022 Call EventWaitHandle.Set, X0
	023 Move X20, X31
	024 Move X20, X31
	025 Move W8, [X31+12]
	026 Compare W8, 0
	027 JumpIfEqual {31}
	028 Move X0, X19
	029 Move X1, X31
	030 Call Monitor.Exit, X0
	031 Compare X20, 0
	032 JumpIfNotEqual {39}
	033 Move X20, [X31+32]
	034 Move X19, [X31+40]
	035 Move X30, [X31+16]
	036 Move X21, [X31+24]
	037 Add X31, X31, 48
	038 Return 
	039 Move X0, X20
	040 Call 0x1C17F18
	041 Move X21, X0
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X0, X21
	044 Call 0x3EB2AD0
	045 Move X20, [X0]
	046 Call 0x3EB2AE0
	047 Move X20, X31
	048 Move X21, X0
	049 Move W8, [X31+12]
	050 Compare W8, 0
	051 JumpIfEqual {55}
	052 Move X0, X19
	053 Move X1, X31
	054 Call Monitor.Exit, X0
	055 Compare X20, 0
	056 JumpIfNotEqual {59}
	057 Move X0, X21
	058 Call 0x1D2D690
	059 Move X0, X20
	060 Call 0x1C17F18
	061 Call 0x1991590

Method: System.Void CompleteDisposed()

Disassembly:
	

ISIL:
No ISIL was generated
