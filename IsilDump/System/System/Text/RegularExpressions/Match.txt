Type: System.Text.RegularExpressions.Match

Method: System.Void .ctor(System.Text.RegularExpressions.Regex regex, System.Int32 capcount, System.String text, System.Int32 begpos, System.Int32 len, System.Int32 startpos)

Disassembly:
	0x03631ACC LDR X23, [X23 + 0x600]
	0x03631AD0 MOV W20, W2
	0x03631AD4 MOV X21, X1
	0x03631AD8 MOV X19, X0
	0x03631ADC TBNZ X8, 0x0, 0x3631AF4
	0x03631AE0 ADRP X0, 0xACA000
	0x03631AE4 LDR X0, [X0 + 0x600]
	0x03631AE8 BL 0x1C16CF4
	0x03631AEC MOVZ W8, 0x1
	0x03631AF0 STRB W8, [X22 + 0x522]
	0x03631AF4 LDR X0, [X23]
	0x03631AF8 LDR W8, [X0 + 0xE0]
	0x03631AFC CBNZ W8, 0x3631B08
	0x03631B00 BL 0x1C16DFC
	0x03631B04 LDR X0, [X23]
	0x03631B08 LDR X8, [X0 + 0xB8]
	0x03631B0C LDR X22, [X8 + 0x18]
	0x03631B10 CBZ X22, 0x3631B48
	0x03631B14 LDR X8, [X22 + 0x30]
	0x03631B18 LDR V0, [X22 + 0x2]
	0x03631B1C ADD X0, X31, 0x20
	0x03631B20 ADD X1, X31, 0x40
	0x03631B24 STR X8, [X31 + 0x30]
	0x03631B28 STR V0, [X31 + 0x2]
	0x03631B2C LDR X8, [X21 + 0x10]
	0x03631B30 LDR V0, [X21]
	0x03631B34 STR X8, [X31 + 0x50]
	0x03631B38 STR V0, [X31 + 0x4]
	0x03631B3C BL 0x3633784
	0x03631B40 TBNZ X0, 0x0, 0x3631B90
	0x03631B44 LDR X0, [X23]
	0x03631B48 LDR W8, [X0 + 0xE0]
	0x03631B4C CBNZ W8, 0x3631B58
	0x03631B50 BL 0x1C16DFC
	0x03631B54 LDR X0, [X23]
	0x03631B58 LDR X8, [X0 + 0xB8]
	0x03631B5C LDR W8, [X8]
	0x03631B60 CBZ W8, 0x3631B8C
	0x03631B64 LDR X8, [X21 + 0x10]
	0x03631B68 LDR V0, [X21]
	0x03631B6C AND W2, W20, 0x1
	0x03631B70 ADD X1, X31, 0x0
	0x03631B74 MOV X0, X19
	0x03631B78 STR X8, [X31 + 0x10]
	0x03631B7C STR V0, [X31]
	0x03631B80 BL 0x3631BD8
	0x03631B84 MOV X22, X0
	0x03631B88 B 0x3631B90
	0x03631B8C MOV X22, X31
	0x03631B90 MOV X0, X22
	0x03631B94 LDP X20, X19, [X31 + 0x80]
	0x03631B98 LDP X22, X21, [X31 + 0x70]
	0x03631B9C LDP X30, X23, [X31 + 0x60]
	0x03631BA0 ADD X31, X31, 0x90
	0x03631BA4 RET
	0x03631BA8 SUB X31, X31, 0x30
	0x03631BAC STR X30, [X31 + 0x20]
	0x03631BB0 LDR X8, [X1 + 0x10]
	0x03631BB4 LDR V0, [X1]
	0x03631BB8 ADD X1, X31, 0x0
	0x03631BBC STR X8, [X31 + 0x10]
	0x03631BC0 STR V0, [X31]
	0x03631BC4 BL 0x3633784
	0x03631BC8 LDR X30, [X31 + 0x20]
	0x03631BCC AND W0, W0, 0x1
	0x03631BD0 ADD X31, X31, 0x30
	0x03631BD4 RET
	0x03631BD8 SUB X31, X31, 0xE0
	0x03631BDC STP X30, X27, [X31 + 0x90]
	0x03631BE0 STP X26, X25, [X31 + 0xA0]
	0x03631BE4 STP X24, X23, [X31 + 0xB0]
	0x03631BE8 STP X22, X21, [X31 + 0xC0]
	0x03631BEC STP X20, X19, [X31 + 0xD0]
	0x03631BF0 ADRP X19, 0xDAF000
	0x03631BF4 ADRP X25, 0xACA000
	0x03631BF8 LDRB W8, [X19 + 0x523]
	0x03631BFC LDR X25, [X25 + 0x600]
	0x03631C00 MOV W23, W2
	0x03631C04 MOV X21, X1
	0x03631C08 MOV X22, X0
	0x03631C0C TBNZ X8, 0x0, 0x3631C48
	0x03631C10 ADRP X0, 0xB0A000

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X28, 0xDB0000
	014 Move X27, 0xAC4000
	015 Move X26, 0xB0B000
	016 Move W8, [X28+1305]
	017 Move X27, [X27+3672]
	018 Move X26, [X26+1744]
	019 Move W19, W6
	020 Move W20, W5
	021 Move W21, W4
	022 Move X25, X3
	023 Move W23, W2
	024 Move X24, X1
	025 Move X22, X0
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {44}
	030 Move X0, 0xB0B000
	031 Move X0, [X0+1744]
	032 Call 0x1C17CF4
	033 Move X0, 0xAFB000
	034 Move X0, [X0+3488]
	035 Call 0x1C17CF4
	036 Move X0, 0xAC4000
	037 Move X0, [X0+3672]
	038 Call 0x1C17CF4
	039 Move X0, 0xAC5000
	040 Move X0, [X0+1200]
	041 Call 0x1C17CF4
	042 Move W8, 1
	043 Move [X28+1305], W8
	044 Move X0, [X27]
	045 Move X29, 0xAC5000
	046 Move X28, 0xAFB000
	047 Move X29, [X29+1200]
	048 Move X28, [X28+3488]
	049 Move W1, 2
	050 Call 0x1C17D6C
	051 Move X8, [X26]
	052 Move X26, X0
	053 Move W9, [X8+224]
	054 Compare W9, 0
	055 JumpIfNotEqual {58}
	056 Move X0, X8
	057 Call 0x1C17DFC
	058 Move X29, [X29]
	059 Move X0, X22
	060 Move X1, X31
	061 Call Object..ctor, X0
	062 Move [X22+16], X31
	063 Move [X22+24], X25
	064 Move [X22+32], X26
	065 Move [X22+40], W31
	066 Move [X22+56], X29
	067 Move [X22+72], X24
	068 Move X0, [X27]
	069 Move W1, W23
	070 Call 0x1C17D6C
	071 Move [X22+104], X0
	072 Move X0, [X28]
	073 Move W1, W23
	074 Call 0x1C17D6C
	075 Move [X22+96], X0
	076 Compare X0, 0
	077 JumpIfEqual {101}
	078 Move W8, [X0+24]
	079 Compare W8, 0
	080 JumpIfEqual {102}
	081 Move X8, [X22+32]
	082 Add W9, W20, W21
	083 Move X24, [X31+48]
	084 Move X23, [X31+56]
	085 Move X26, [X31+32]
	086 Move X25, [X31+40]
	087 Move [X0+32], X8
	088 Move [X22+80], W21
	089 Move [X22+88], W9
	090 Move [X22+92], W19
	091 Move [X22+112], W31
	092 Move X20, [X31+80]
	093 Move X19, [X31+88]
	094 Move X22, [X31+64]
	095 Move X21, [X31+72]
	096 Move X28, [X31+16]
	097 Move X27, [X31+24]
	098 Move X29, [X31+96]
	099 Move X30, [X31+104]
	100 Return 
	101 Call 0x1C17F20
	102 Call 0x1C17F28

Method: System.Text.RegularExpressions.Match get_Empty()

Disassembly:
	0x03631C14 LDR X0, [X0 + 0x7E0]
	0x03631C18 BL 0x1C16CF4
	0x03631C1C ADRP X0, 0xB0A000
	0x03631C20 LDR X0, [X0 + 0x7E8]
	0x03631C24 BL 0x1C16CF4
	0x03631C28 ADRP X0, 0xB0A000
	0x03631C2C LDR X0, [X0 + 0x7F0]
	0x03631C30 BL 0x1C16CF4
	0x03631C34 ADRP X0, 0xACA000
	0x03631C38 LDR X0, [X0 + 0x600]
	0x03631C3C BL 0x1C16CF4
	0x03631C40 MOVZ W8, 0x1
	0x03631C44 STRB W8, [X19 + 0x523]
	0x03631C48 LDR X0, [X25]
	0x03631C4C LDR W8, [X0 + 0xE0]
	0x03631C50 CBNZ W8, 0x3631C5C
	0x03631C54 BL 0x1C16DFC
	0x03631C58 LDR X0, [X25]
	0x03631C5C LDR X8, [X0 + 0xB8]
	0x03631C60 LDR X19, [X8 + 0x8]
	0x03631C64 STRB W31, [X31 + 0x6C]
	0x03631C68 ADD X1, X31, 0x6C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xDB0000
	005 Move X19, 0xB0B000
	006 Move W8, [X20+1306]
	007 Move X19, [X19+1944]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xB0B000
	013 Move X0, [X0+1944]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+1306], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X0, [X8]
	027 Move X30, [X31+32]
	028 Return X0

Method: System.Void Reset(System.Text.RegularExpressions.Regex regex, System.String text, System.Int32 textbeg, System.Int32 textend, System.Int32 textstart)

Disassembly:
	0x03631C6C MOV X0, X19
	0x03631C70 MOV X2, X31
	0x03631C74 BL 0x33DE64C
	0x03631C78 LDR X8, [X21 + 0x10]
	0x03631C7C LDR V0, [X21]
	0x03631C80 LDR X0, [X25]
	0x03631C84 STR X8, [X31 + 0x80]
	0x03631C88 STR V0, [X31 + 0x7]
	0x03631C8C LDR W8, [X0 + 0xE0]
	0x03631C90 CBNZ W8, 0x3631C98
	0x03631C94 BL 0x1C16DFC
	0x03631C98 LDR V0, [X31 + 0x7]
	0x03631C9C LDR X8, [X31 + 0x80]
	0x03631CA0 STR V0, [X31 + 0x5]
	0x03631CA4 STR X8, [X31 + 0x60]
	0x03631CA8 ADD X0, X31, 0x50
	0x03631CAC BL 0x363207C
	0x03631CB0 MOV X20, X0
	0x03631CB4 MOV X24, X31
	0x03631CB8 CBNZ X0, 0x3631F98
	0x03631CBC TBZ X23, 0x0, 0x3631F98
	0x03631CC0 LDR X0, [X25]
	0x03631CC4 LDR W8, [X0 + 0xE0]
	0x03631CC8 CBNZ W8, 0x3631CD4
	0x03631CCC BL 0x1C16DFC

ISIL:
	001 Move [X31-16], X30
	002 Move X11, [X0+104]
	003 Move [X0+72], X1
	004 Move [X0+24], X2
	005 Move [X0+80], W3
	006 Move [X0+88], W4
	007 Move [X0+92], W5
	008 Compare X11, 0
	009 JumpIfEqual {26}
	010 Move W8, [X11+24]
	011 Move X9, X8
	012 ShiftRight X9, 32
	013 And X9, X9, 0x7FFFFFFF
	014 NotImplemented "Instruction CMP not yet implemented."
	015 Move X9, X31
	016 Move X10, W8
	017 Add X11, X11, 32
	018 NotImplemented "Instruction CMP not yet implemented."
	019 Move [X11], W31
	020 Add X9, X9, 1
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Move [X0+112], W31
	023 Move X30, [X31+16]
	024 Return 
	025 Call 0x1C17F28
	026 Call 0x1C17F20

Method: System.Text.RegularExpressions.GroupCollection get_Groups()

Disassembly:
	0x03631CD0 LDR X0, [X25]
	0x03631CD4 LDR X8, [X0 + 0xB8]
	0x03631CD8 LDR W8, [X8]
	0x03631CDC CBZ W8, 0x3631E00
	0x03631CE0 LDR X8, [X21 + 0x10]
	0x03631CE4 LDR V0, [X21]
	0x03631CE8 ADRP X9, 0xB0A000
	0x03631CEC LDR X9, [X9 + 0x7E0]
	0x03631CF0 STR X8, [X31 + 0x80]
	0x03631CF4 STR V0, [X31 + 0x7]
	0x03631CF8 LDR X27, [X22 + 0x40]
	0x03631CFC LDR V0, [X22 + 0x3]
	0x03631D00 LDR W26, [X22 + 0x48]
	0x03631D04 LDR X24, [X22 + 0x50]
	0x03631D08 LDP X22, X23, [X22 + 0x58]
	0x03631D0C LDR X0, [X9]
	0x03631D10 STR V0, [X31]
	0x03631D14 BL 0x1C16F10
	0x03631D18 LDR V0, [X31 + 0x7]
	0x03631D1C LDR X8, [X31 + 0x80]
	0x03631D20 MOV X20, X0
	0x03631D24 STR V0, [X31 + 0x3]
	0x03631D28 STR X8, [X31 + 0x40]
	0x03631D2C MOV X1, X31
	0x03631D30 BL 0x33BDD8C
	0x03631D34 LDR V0, [X31 + 0x3]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xDB0000
	005 Move W8, [X20+1307]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xB0B000
	012 Move X0, [X0+1952]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+1307], W8
	016 Move X20, [X19+64]
	017 Compare X20, 0
	018 JumpIfNotEqual {29}
	019 Move X8, 0xB0B000
	020 Move X8, [X8+1952]
	021 Move X0, [X8]
	022 Call 0x1C17F10
	023 Move X1, X31
	024 Move X20, X0
	025 Call Object..ctor, X0
	026 Move [X20+16], X19
	027 Move [X20+24], X31
	028 Move [X19+64], X20
	029 Move X0, X20
	030 Move X20, [X31+16]
	031 Move X19, [X31+24]
	032 Move X30, [X31+32]
	033 Return X0

Method: System.Text.RegularExpressions.Match NextMatch()

Disassembly:
	0x03631D38 LDR X8, [X31 + 0x40]
	0x03631D3C LDR V1, [X31]
	0x03631D40 STR X27, [X20 + 0x50]
	0x03631D44 STR W26, [X20 + 0x58]
	0x03631D48 STR V0, [X20 + 0x2]
	0x03631D4C STR V1, [X20 + 0x4]
	0x03631D50 STP X8, X23, [X20 + 0x30]
	0x03631D54 STP X24, X22, [X20 + 0x60]
	0x03631D58 LDR X8, [X25]
	0x03631D5C LDR W9, [X8 + 0xE0]
	0x03631D60 CBNZ W9, 0x3631D70
	0x03631D64 MOV X0, X8

ISIL:
	001 Move X8, X0
	002 Move X0, [X0+72]
	003 Compare X0, 0
	004 JumpIfEqual {12}
	005 Move W6, [X8+84]
	006 Move W9, [X8+88]
	007 Move W4, [X8+80]
	008 Move W2, [X8+20]
	009 Move X3, [X8+24]
	010 Move W1, W31
	011 Subtract W5, W9, W4
	012 Move X0, X8
	013 Return X0

Method: System.ReadOnlySpan`1<System.Char> GroupToStringImpl(System.Int32 groupnum)

Disassembly:
	0x03631FEC B 0x3632024
	0x03631FF0 B 0x3632024
	0x03631FF4 B 0x3632024
	0x03631FF8 B 0x3632024
	0x03631FFC B 0x3632024
	0x03632000 B 0x3632024
	0x03632004 B 0x3632024
	0x03632008 B 0x3632024
	0x0363200C B 0x3632024
	0x03632010 B 0x3632024
	0x03632014 B 0x3632024
	0x03632018 B 0x3632024
	0x0363201C B 0x3632024
	0x03632020 B 0x3632024
	0x03632024 MOV X20, X0
	0x03632028 CMP W1, 0x1
	0x0363202C B.NE 0x3632044
	0x03632030 MOV X0, X20
	0x03632034 BL 0x3EB1AD0
	0x03632038 LDR X24, [X0]
	0x0363203C BL 0x3EB1AE0
	0x03632040 B 0x3631E04
	0x03632044 MOV X24, X31
	0x03632048 B 0x3632050
	0x0363204C MOV X20, X0
	0x03632050 LDRB W8, [X31 + 0x6C]
	0x03632054 CBZ W8, 0x3632064
	0x03632058 MOV X0, X19
	0x0363205C MOV X1, X31
	0x03632060 BL 0x33E14E4
	0x03632064 CBNZ X24, 0x3632070
	0x03632068 MOV X0, X20
	0x0363206C BL 0x1D2C690
	0x03632070 MOV X0, X24
	0x03632074 BL 0x1C16F18
	0x03632078 BL 0x1990590
	0x0363207C SUB X31, X31, 0x80
	0x03632080 STP X30, X21, [X31 + 0x60]
	0x03632084 STP X20, X19, [X31 + 0x70]
	0x03632088 ADRP X21, 0xDAE000
	0x0363208C ADRP X20, 0xAC9000
	0x03632090 LDRB W8, [X21 + 0x527]
	0x03632094 LDR X20, [X20 + 0x600]
	0x03632098 MOV X19, X0
	0x0363209C TBNZ X8, 0x0, 0x36320B4
	0x036320A0 ADRP X0, 0xAC9000
	0x036320A4 LDR X0, [X0 + 0x600]
	0x036320A8 BL 0x1C16CF4
	0x036320AC MOVZ W8, 0x1
	0x036320B0 STRB W8, [X21 + 0x527]
	0x036320B4 LDR X8, [X20]
	0x036320B8 STR X31, [X31 + 0x38]
	0x036320BC LDR W9, [X8 + 0xE0]
	0x036320C0 CBNZ W9, 0x36320D0
	0x036320C4 MOV X0, X8
	0x036320C8 BL 0x1C16DFC
	0x036320CC LDR X8, [X20]
	0x036320D0 LDR X9, [X8 + 0xB8]
	0x036320D4 LDR X9, [X9 + 0x18]
	0x036320D8 CBZ X9, 0x3632130
	0x036320DC LDR X8, [X9 + 0x30]
	0x036320E0 LDR V0, [X9 + 0x2]
	0x036320E4 ADD X0, X31, 0x20
	0x036320E8 ADD X1, X31, 0x40
	0x036320EC STR X8, [X31 + 0x30]
	0x036320F0 STR V0, [X31 + 0x2]
	0x036320F4 LDR X8, [X19 + 0x10]
	0x036320F8 LDR V0, [X19]
	0x036320FC STR X8, [X31 + 0x50]
	0x03632100 STR V0, [X31 + 0x4]
	0x03632104 BL 0x3633784
	0x03632108 LDR X8, [X20]
	0x0363210C TBZ X0, 0x0, 0x3632130
	0x03632110 LDR W9, [X8 + 0xE0]
	0x03632114 CBNZ W9, 0x3632124
	0x03632118 MOV X0, X8
	0x0363211C BL 0x1C16DFC
	0x03632120 LDR X8, [X20]
	0x03632124 LDR X8, [X8 + 0xB8]
	0x03632128 ADD X19, X8, 0x18
	0x0363212C B 0x3632228
	0x03632130 LDR X9, [X19 + 0x10]
	0x03632134 LDR V0, [X19]
	0x03632138 STR X9, [X31 + 0x50]
	0x0363213C STR V0, [X31 + 0x4]
	0x03632140 LDR W9, [X8 + 0xE0]
	0x03632144 CBNZ W9, 0x3632150
	0x03632148 MOV X0, X8
	0x0363214C BL 0x1C16DFC
	0x03632150 LDR V0, [X31 + 0x4]
	0x03632154 LDR X8, [X31 + 0x50]
	0x03632158 ADD X0, X31, 0x0
	0x0363215C ADD X1, X31, 0x38
	0x03632160 MOV X2, X31
	0x03632164 STR V0, [X31]
	0x03632168 STR X8, [X31 + 0x10]
	0x0363216C ADD X19, X31, 0x38
	0x03632170 BL 0x363B474
	0x03632174 TBZ X0, 0x0, 0x3632228
	0x03632178 LDR X0, [X20]
	0x0363217C LDR W8, [X0 + 0xE0]
	0x03632180 CBNZ W8, 0x363218C

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xDB0000
	007 Move W8, [X21+1308]
	008 Move W20, W1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xAC4000
	015 Move X0, [X0+632]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+1308], W8
	019 Move X8, [X19+104]
	020 Compare X8, 0
	021 JumpIfEqual {112}
	022 Move W9, [X8+24]
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Move X9, W20
	025 Add X8, X8, X9
	026 Move W8, [X8+32]
	027 Compare W8, 0
	028 JumpIfEqual {67}
	029 Move X10, [X19+96]
	030 Compare X10, 0
	031 JumpIfEqual {112}
	032 Move W11, [X10+24]
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Add X9, X10, X9
	035 Move X9, [X9+32]
	036 Compare X9, 0
	037 JumpIfEqual {112}
	038 Move W11, [X9+24]
	039 Move W10, W8
	040 ShiftRight W10, 31
	041 And W10, W10, 0x3FFFFFFF
	042 Subtract W8, W10, 2
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Subtract W10, W10, 1
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Add X8, X9, W8
	047 Add X9, X9, W10
	048 Move X22, 0xDA8000
	049 Move X19, [X19+24]
	050 NotImplemented "Instruction LDRSW not yet implemented."
	051 Move W8, [X22+1889]
	052 Move W20, [X9+32]
	053 Compare W8, 0
	054 JumpIfEqual {78}
	055 Compare X19, 0
	056 JumpIfEqual {85}
	057 Move W8, [X19+16]
	058 Subtract W8, W8, W21
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Move W0, 24
	061 Move X1, X31
	062 Call ThrowHelper.ThrowArgumentOutOfRangeException, X0
	063 Move X0, X19
	064 Move X1, X31
	065 Call String.GetRawStringData, X0
	066 Add X0, X0, X21
	067 Move X8, 0xAC4000
	068 Move X8, [X8+632]
	069 Move X20, 0xDA8000
	070 Move W9, [X20+1890]
	071 Move X8, [X8]
	072 Move X8, [X8+184]
	073 Move X19, [X8]
	074 Compare W9, 0
	075 JumpIfEqual {91}
	076 Compare X19, 0
	077 JumpIfNotEqual {98}
	078 Move X0, 0xAE9000
	079 Move X0, [X0+656]
	080 Call 0x1C17CF4
	081 Move W8, 1
	082 Move [X22+1889], W8
	083 Compare X19, 0
	084 JumpIfNotEqual {57}
	085 Or W8, W20, W21
	086 Compare W8, 0
	087 JumpIfEqual {102}
	088 Move W0, 24
	089 Move X1, X31
	090 Call ThrowHelper.ThrowArgumentOutOfRangeException, X0
	091 Move X0, 0xAE9000
	092 Move X0, [X0+656]
	093 Call 0x1C17CF4
	094 Move W8, 1
	095 Move [X20+1890], W8
	096 Compare X19, 0
	097 JumpIfEqual {102}
	098 Move X0, X19
	099 Move X1, X31
	100 Call String.GetRawStringData, X0
	101 Move W20, [X19+16]
	102 Move X0, X31
	103 Move W20, W31
	104 Move W1, W20
	105 Move X20, [X31+32]
	106 Move X19, [X31+40]
	107 Move X22, [X31+16]
	108 Move X21, [X31+24]
	109 Move X30, [X31+48]
	110 Return X0
	111 Call 0x1C17F28
	112 Call 0x1C17F20

Method: System.ReadOnlySpan`1<System.Char> LastGroupToStringImpl()

Disassembly:
	0x03632184 BL 0x1C16DFC
	0x03632188 LDR X0, [X20]
	0x0363218C LDR X8, [X31 + 0x38]
	0x03632190 CBZ X8, 0x363223C
	0x03632194 LDR X9, [X0 + 0xB8]
	0x03632198 LDR X10, [X9 + 0x20]
	0x0363219C CMP X10, X8
	0x036321A0 B.EQ 0x36321B8
	0x036321A4 LDR X9, [X8 + 0x18]
	0x036321A8 CBZ X9, 0x363223C

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+104]
	003 Compare X8, 0
	004 JumpIfEqual {12}
	005 Move X9, [X0]
	006 Move W8, [X8+24]
	007 Move X3, [X9+408]
	008 Move X2, [X9+416]
	009 Subtract W1, W8, 1
	010 Move X30, [X31+16]
	011 CallNoReturn X3
	012 Call 0x1C17F20

Method: System.Void AddMatch(System.Int32 cap, System.Int32 start, System.Int32 len)

Disassembly:
	0x036321AC LDR X10, [X8 + 0x10]
	0x036321B0 STR X10, [X9 + 0x10]
	0x036321B4 B 0x36321E4
	0x036321B8 LDR W10, [X0 + 0xE0]
	0x036321BC LDR X19, [X8 + 0x10]
	0x036321C0 CBZ W10, 0x36321CC
	0x036321C4 STR X19, [X9 + 0x20]
	0x036321C8 B 0x36321E4
	0x036321CC BL 0x1C16DFC
	0x036321D0 LDR X0, [X20]
	0x036321D4 LDR X8, [X31 + 0x38]
	0x036321D8 LDR X9, [X0 + 0xB8]
	0x036321DC STR X19, [X9 + 0x20]
	0x036321E0 CBZ X8, 0x363223C
	0x036321E4 LDR X9, [X8 + 0x10]
	0x036321E8 CBZ X9, 0x363223C
	0x036321EC LDR X10, [X8 + 0x18]
	0x036321F0 STR X10, [X9 + 0x18]
	0x036321F4 LDR W9, [X0 + 0xE0]
	0x036321F8 CBNZ W9, 0x3632208
	0x036321FC BL 0x1C16DFC
	0x03632200 LDR X0, [X20]
	0x03632204 LDR X8, [X31 + 0x38]
	0x03632208 LDR X9, [X0 + 0xB8]
	0x0363220C LDR X10, [X9 + 0x18]
	0x03632210 CBZ X10, 0x363223C
	0x03632214 STR X8, [X10 + 0x10]
	0x03632218 CBZ X8, 0x363223C
	0x0363221C ADD X19, X31, 0x38
	0x03632220 STP X31, X10, [X8 + 0x10]
	0x03632224 STR X8, [X9 + 0x18]
	0x03632228 LDR X0, [X19]
	0x0363222C LDP X20, X19, [X31 + 0x70]
	0x03632230 LDP X30, X21, [X31 + 0x60]
	0x03632234 ADD X31, X31, 0x80
	0x03632238 RET
	0x0363223C BL 0x1C16F20
	0x03632240 STP X30, X27, [X31 - 0x50]!
	0x03632244 STP X26, X25, [X31 + 0x10]
	0x03632248 STP X24, X23, [X31 + 0x20]
	0x0363224C STP X22, X21, [X31 + 0x30]
	0x03632250 STP X20, X19, [X31 + 0x40]
	0x03632254 LDR X27, [X31 + 0x50]
	0x03632258 MOV X25, X1
	0x0363225C MOV X1, X31
	0x03632260 MOV X19, X7
	0x03632264 MOV W20, W6
	0x03632268 MOV X21, X5
	0x0363226C MOV X22, X4
	0x03632270 MOV X23, X3
	0x03632274 MOV X24, X2
	0x03632278 MOV X26, X0
	0x0363227C BL 0x33BDD8C
	0x03632280 LDR V0, [X25]
	0x03632284 LDR X8, [X25 + 0x10]
	0x03632288 STP X24, X23, [X26 + 0x48]
	0x0363228C STP X22, X21, [X26 + 0x38]
	0x03632290 STR W20, [X26 + 0x58]
	0x03632294 STR V0, [X26 + 0x2]
	0x03632298 STR X8, [X26 + 0x30]
	0x0363229C STP X19, X27, [X26 + 0x60]
	0x036322A0 LDP X20, X19, [X31 + 0x40]
	0x036322A4 LDP X22, X21, [X31 + 0x30]
	0x036322A8 LDP X24, X23, [X31 + 0x20]
	0x036322AC LDP X26, X25, [X31 + 0x10]
	0x036322B0 LDP X30, X27, [X31], #0x50
	0x036322B4 RET
	0x036322B8 SUB X31, X31, 0x60
	0x036322BC STP X30, X21, [X31 + 0x40]
	0x036322C0 STP X20, X19, [X31 + 0x50]
	0x036322C4 ADRP X19, 0xDAE000
	0x036322C8 ADRP X20, 0xAC9000
	0x036322CC LDRB W8, [X19 + 0x524]
	0x036322D0 LDR X20, [X20 + 0x600]
	0x036322D4 TBNZ X8, 0x0, 0x3632304
	0x036322D8 ADRP X0, 0xB09000
	0x036322DC LDR X0, [X0 + 0x7E8]
	0x036322E0 BL 0x1C16CF4
	0x036322E4 ADRP X0, 0xB09000
	0x036322E8 LDR X0, [X0 + 0x7F8]
	0x036322EC BL 0x1C16CF4
	0x036322F0 ADRP X0, 0xAC9000
	0x036322F4 LDR X0, [X0 + 0x600]
	0x036322F8 BL 0x1C16CF4
	0x036322FC MOVZ W8, 0x1
	0x03632300 STRB W8, [X19 + 0x524]
	0x03632304 LDR X0, [X20]
	0x03632308 LDR W8, [X0 + 0xE0]
	0x0363230C CBNZ W8, 0x3632318
	0x03632310 BL 0x1C16DFC
	0x03632314 LDR X0, [X20]
	0x03632318 LDR X8, [X0 + 0xB8]
	0x0363231C LDR X0, [X8 + 0x8]
	0x03632320 CBZ X0, 0x36323B8
	0x03632324 ADRP X8, 0xB09000
	0x03632328 LDR X8, [X8 + 0x7F8]
	0x0363232C LDR X1, [X8]
	0x03632330 BL 0x2B30954
	0x03632334 LDR X0, [X20]
	0x03632338 LDR X8, [X0 + 0xB8]
	0x0363233C LDR X19, [X8 + 0x18]
	0x03632340 CBZ X19, 0x36323A8
	0x03632344 ADRP X21, 0xB09000
	0x03632348 LDR X21, [X21 + 0x7E8]
	0x0363234C LDR W8, [X0 + 0xE0]
	0x03632350 CBNZ W8, 0x363235C
	0x03632354 BL 0x1C16DFC
	0x03632358 LDR X0, [X20]
	0x0363235C LDR X8, [X0 + 0xB8]
	0x03632360 LDR X9, [X19 + 0x30]
	0x03632364 LDR V0, [X19 + 0x2]
	0x03632368 LDR X0, [X8 + 0x8]
	0x0363236C STR X9, [X31 + 0x10]
	0x03632370 STR V0, [X31]
	0x03632374 CBZ X0, 0x36323B8
	0x03632378 LDR V0, [X31]
	0x0363237C LDR X8, [X31 + 0x10]
	0x03632380 LDR X3, [X21]
	0x03632384 ADD X1, X31, 0x20
	0x03632388 MOV X2, X19

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X23, 0xDAF000
	011 Move W8, [X23+1309]
	012 Move W20, W3
	013 Move W22, W2
	014 Move W19, W1
	015 Move X21, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0xAC3000
	021 Move X0, [X0+3672]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X23+1309], W8
	025 Move X24, [X21+96]
	026 Compare X24, 0
	027 JumpIfEqual {132}
	028 Move W8, [X24+24]
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move X23, W19
	031 Add X25, X24, X23
	032 Add X25, X25, 32
	033 Move X8, [X25]
	034 Compare X8, 0
	035 JumpIfNotEqual {44}
	036 Move X8, 0xAC3000
	037 Move X8, [X8+3672]
	038 Move W1, 2
	039 Move X0, [X8]
	040 Call 0x1C17D6C
	041 Move W8, [X24+24]
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move [X25], X0
	044 Move X9, [X21+104]
	045 Compare X9, 0
	046 JumpIfEqual {132}
	047 Move W8, [X9+24]
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move X8, [X21+96]
	050 Compare X8, 0
	051 JumpIfEqual {132}
	052 Move W10, [X8+24]
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Add X10, X8, X23
	055 Move X26, [X10+32]
	056 Compare X26, 0
	057 JumpIfEqual {132}
	058 Add X9, X9, X23
	059 Move W24, [X9+32]
	060 Move W9, [X26+24]
	061 Move W25, W24
	062 ShiftRight W25, 31
	063 And W25, W25, 0x3FFFFFFF
	064 Add W10, W25, 2
	065 NotImplemented "Instruction CMP not yet implemented."
	066 Move X8, 0xAC3000
	067 Move X8, [X8+3672]
	068 Move W1, W24
	069 ShiftRight W1, 29
	070 And W1, W1, 0xFFFFFFF
	071 Move X0, [X8]
	072 Call 0x1C17D6C
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Move W9, [X26+24]
	075 Move X8, X31
	076 Move W10, W25
	077 Add X11, X26, 32
	078 Add X12, X0, 32
	079 NotImplemented "Instruction CMP not yet implemented."
	080 Compare X0, 0
	081 JumpIfEqual {132}
	082 Move W13, [X0+24]
	083 NotImplemented "Instruction CMP not yet implemented."
	084 Move W13, [X11]
	085 Move [X12], W13
	086 Add X8, X8, 1
	087 NotImplemented "Instruction CMP not yet implemented."
	088 Move X8, [X21+96]
	089 Compare X8, 0
	090 JumpIfEqual {132}
	091 Move W9, [X8+24]
	092 NotImplemented "Instruction CMP not yet implemented."
	093 Add X8, X8, X23
	094 Move [X8+32], X0
	095 Move X8, [X21+96]
	096 Compare X8, 0
	097 JumpIfEqual {132}
	098 Move W9, [X8+24]
	099 NotImplemented "Instruction CMP not yet implemented."
	100 Add X8, X8, X23
	101 Move X8, [X8+32]
	102 Compare X8, 0
	103 JumpIfEqual {132}
	104 Move W9, [X8+24]
	105 NotImplemented "Instruction CMP not yet implemented."
	106 Move X10, W25
	107 Or X10, X10, 1
	108 Add X11, X8, W25
	109 NotImplemented "Instruction CMP not yet implemented."
	110 Move [X11+32], W22
	111 Add X8, X8, X10
	112 Move [X8+32], W20
	113 Move X8, [X21+104]
	114 Compare X8, 0
	115 JumpIfEqual {132}
	116 Move W9, [X8+24]
	117 NotImplemented "Instruction CMP not yet implemented."
	118 Add W9, W24, 1
	119 Add X8, X8, X23
	120 Move X20, [X31+64]
	121 Move X19, [X31+72]
	122 Move X22, [X31+48]
	123 Move X21, [X31+56]
	124 Move X24, [X31+32]
	125 Move X23, [X31+40]
	126 Move X26, [X31+16]
	127 Move X25, [X31+24]
	128 Move [X8+32], W9
	129 Move X30, [X31+80]
	130 Return 
	131 Call 0x1C17F28
	132 Call 0x1C17F20

Method: System.Void BalanceMatch(System.Int32 cap)

Disassembly:
	0x0363238C STR V0, [X31 + 0x2]
	0x03632390 STR X8, [X31 + 0x30]
	0x03632394 BL 0x2B30710
	0x03632398 LDR X19, [X19 + 0x18]
	0x0363239C CBZ X19, 0x36323A8
	0x036323A0 LDR X0, [X20]
	0x036323A4 B 0x363234C
	0x036323A8 LDP X20, X19, [X31 + 0x50]
	0x036323AC LDP X30, X21, [X31 + 0x40]
	0x036323B0 ADD X31, X31, 0x60
	0x036323B4 RET
	0x036323B8 BL 0x1C16F20
	0x036323BC SUB X31, X31, 0x90
	0x036323C0 STR X30, [X31 + 0x60]
	0x036323C4 STP X22, X21, [X31 + 0x70]
	0x036323C8 STP X20, X19, [X31 + 0x80]
	0x036323CC ADRP X22, 0xDAE000
	0x036323D0 ADRP X21, 0xAC9000
	0x036323D4 LDRB W8, [X22 + 0x525]
	0x036323D8 LDR X21, [X21 + 0x600]
	0x036323DC MOV X19, X1
	0x036323E0 MOV X20, X0
	0x036323E4 TBNZ X8, 0x0, 0x3632408
	0x036323E8 ADRP X0, 0xB09000
	0x036323EC LDR X0, [X0 + 0x800]
	0x036323F0 BL 0x1C16CF4
	0x036323F4 ADRP X0, 0xAC9000
	0x036323F8 LDR X0, [X0 + 0x600]
	0x036323FC BL 0x1C16CF4
	0x03632400 MOVZ W8, 0x1
	0x03632404 STRB W8, [X22 + 0x525]
	0x03632408 LDR X0, [X21]
	0x0363240C LDR W8, [X0 + 0xE0]
	0x03632410 CBNZ W8, 0x363241C
	0x03632414 BL 0x1C16DFC
	0x03632418 LDR X0, [X21]
	0x0363241C LDR X8, [X0 + 0xB8]
	0x03632420 LDR W9, [X8 + 0x10]
	0x03632424 CMP W9, 0xA
	0x03632428 B.GE 0x3632468
	0x0363242C LDR X8, [X20 + 0x10]
	0x03632430 LDR V0, [X20]
	0x03632434 STR X8, [X31 + 0x50]
	0x03632438 STR V0, [X31 + 0x4]
	0x0363243C LDR W8, [X0 + 0xE0]
	0x03632440 CBNZ W8, 0x3632448
	0x03632444 BL 0x1C16DFC
	0x03632448 LDR V0, [X31 + 0x4]
	0x0363244C LDR X8, [X31 + 0x50]
	0x03632450 ADD X0, X31, 0x0
	0x03632454 MOV X1, X19
	0x03632458 STR V0, [X31]
	0x0363245C STR X8, [X31 + 0x10]
	0x03632460 BL 0x36324D8

ISIL:
	001 Move [X31-16], X30
	002 Move X9, [X0+104]
	003 Move W8, 1
	004 Move [X0+112], W8
	005 Compare X9, 0
	006 JumpIfEqual {61}
	007 Move W8, [X9+24]
	008 NotImplemented "Instruction CMP not yet implemented."
	009 Move X8, [X0+96]
	010 Compare X8, 0
	011 JumpIfEqual {61}
	012 Move W10, [X8+24]
	013 NotImplemented "Instruction CMP not yet implemented."
	014 Move X10, W1
	015 Add X8, X8, X10
	016 Move X8, [X8+32]
	017 Compare X8, 0
	018 JumpIfEqual {61}
	019 Add X9, X9, X10
	020 Move W10, [X9+32]
	021 Move W9, [X8+24]
	022 Move W10, W10
	023 ShiftRight W10, 31
	024 And W10, W10, 0x3FFFFFFF
	025 Subtract W10, W10, 2
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Add X11, X8, W10
	028 Move W11, [X11+32]
	029 Move TEMP, 2
	030 Not TEMP
	031 Move W12, TEMP
	032 Subtract W12, W12, W11
	033 NotImplemented "Instruction CMP not yet implemented."
	034 NotImplemented "Instruction CSEL not yet implemented."
	035 Subtract W11, W10, 2
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Add X11, X8, W11
	038 Move W2, [X11+32]
	039 Move TEMP, X2
	040 And TEMP, TEMP, -2147483648
	041 Compare TEMP, -2147483648
	042 JumpIfEqual {51}
	043 Move X8, [X0]
	044 NotImplemented "Instruction ORN not yet implemented."
	045 Move X5, [X8+424]
	046 Move X4, [X8+432]
	047 Move TEMP, 1
	048 Not TEMP
	049 Move W8, TEMP
	050 Subtract W3, W8, W10
	051 Subtract W10, W10, 1
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Move X9, [X0]
	054 Add X8, X8, W10
	055 Move W3, [X8+32]
	056 Move X5, [X9+424]
	057 Move X4, [X9+432]
	058 Move X30, [X31+16]
	059 CallNoReturn X5
	060 Call 0x1C17F28
	061 Call 0x1C17F20

Method: System.Void RemoveMatch(System.Int32 cap)

Disassembly:
	0x03632464 B 0x36324BC
	0x03632468 LDR W9, [X0 + 0xE0]
	0x0363246C CBNZ W9, 0x363247C
	0x03632470 BL 0x1C16DFC
	0x03632474 LDR X8, [X21]
	0x03632478 LDR X8, [X8 + 0xB8]
	0x0363247C LDR X0, [X8 + 0x8]
	0x03632480 LDR X8, [X20 + 0x10]
	0x03632484 LDR V0, [X20]
	0x03632488 STR X8, [X31 + 0x30]
	0x0363248C STR V0, [X31 + 0x2]
	0x03632490 CBZ X0, 0x36324D4
	0x03632494 ADRP X8, 0xB09000
	0x03632498 LDR X8, [X8 + 0x800]

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+104]
	003 Compare X8, 0
	004 JumpIfEqual {13}
	005 Move W9, [X8+24]
	006 NotImplemented "Instruction CMP not yet implemented."
	007 Add X8, X8, W1
	008 Move W9, [X8+32]
	009 Subtract W9, W9, 1
	010 Move [X8+32], W9
	011 Move X30, [X31+16]
	012 Return 
	013 Call 0x1C17F20
	014 Call 0x1C17F28

Method: System.Boolean IsMatched(System.Int32 cap)

Disassembly:
	0x0363249C LDR V0, [X31 + 0x2]
	0x036324A0 LDR X9, [X31 + 0x30]
	0x036324A4 ADD X1, X31, 0x40
	0x036324A8 LDR X3, [X8]
	0x036324AC MOV X2, X19
	0x036324B0 STR V0, [X31 + 0x4]
	0x036324B4 STR X9, [X31 + 0x50]
	0x036324B8 BL 0x2B325B4
	0x036324BC LDP X20, X19, [X31 + 0x80]
	0x036324C0 LDP X22, X21, [X31 + 0x70]
	0x036324C4 LDR X30, [X31 + 0x60]
	0x036324C8 AND W0, W0, 0x1
	0x036324CC ADD X31, X31, 0x90
	0x036324D0 RET
	0x036324D4 BL 0x1C16F20
	0x036324D8 SUB X31, X31, 0x70
	0x036324DC STR X30, [X31 + 0x40]
	0x036324E0 STP X22, X21, [X31 + 0x50]
	0x036324E4 STP X20, X19, [X31 + 0x60]
	0x036324E8 ADRP X22, 0xDAE000
	0x036324EC ADRP X21, 0xAC9000
	0x036324F0 LDRB W8, [X22 + 0x526]
	0x036324F4 LDR X21, [X21 + 0x600]
	0x036324F8 MOV X19, X1
	0x036324FC MOV X20, X0
	0x03632500 TBNZ X8, 0x0, 0x3632518
	0x03632504 ADRP X0, 0xAC9000
	0x03632508 LDR X0, [X0 + 0x600]
	0x0363250C BL 0x1C16CF4
	0x03632510 MOVZ W8, 0x1
	0x03632514 STRB W8, [X22 + 0x526]
	0x03632518 LDR X0, [X21]
	0x0363251C LDR W8, [X0 + 0xE0]
	0x03632520 CBNZ W8, 0x363252C
	0x03632524 BL 0x1C16DFC
	0x03632528 LDR X0, [X21]

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+104]
	003 Compare X8, 0
	004 JumpIfEqual {34}
	005 Move W9, [X8+24]
	006 NotImplemented "Instruction CMP not yet implemented."
	007 NotImplemented "Instruction CMP not yet implemented."
	008 Move X9, W1
	009 Add X8, X8, X9
	010 Move W8, [X8+32]
	011 NotImplemented "Instruction CMP not yet implemented."
	012 Move X10, [X0+96]
	013 Compare X10, 0
	014 JumpIfEqual {34}
	015 Move W11, [X10+24]
	016 NotImplemented "Instruction CMP not yet implemented."
	017 Add X9, X10, X9
	018 Move X9, [X9+32]
	019 Compare X9, 0
	020 JumpIfEqual {34}
	021 Move W10, [X9+24]
	022 Move W8, W8
	023 ShiftRight W8, 31
	024 And W8, W8, 0x3FFFFFFF
	025 Subtract W8, W8, 1
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Add X8, X9, W8
	028 Move W8, [X8+32]
	029 Add W31, W8, 2
	030 NotImplemented "Instruction CSET not yet implemented."
	031 Move W0, W31
	032 Move X30, [X31+16]
	033 Return X0
	034 Call 0x1C17F20
	035 Call 0x1C17F28

Method: System.Int32 MatchIndex(System.Int32 cap)

Disassembly:
	0x0363252C LDR X8, [X0 + 0xB8]
	0x03632530 LDR X8, [X8 + 0x18]
	0x03632534 CBZ X8, 0x363258C
	0x03632538 LDR X8, [X8 + 0x18]
	0x0363253C STR X8, [X19]
	0x03632540 CBZ X8, 0x3632598
	0x03632544 LDR X9, [X8 + 0x30]
	0x03632548 LDR V0, [X8 + 0x2]
	0x0363254C ADD X0, X31, 0x0
	0x03632550 ADD X1, X31, 0x20
	0x03632554 STR X9, [X31 + 0x10]
	0x03632558 STR V0, [X31]
	0x0363255C LDR X8, [X20 + 0x10]
	0x03632560 LDR V0, [X20]
	0x03632564 STR X8, [X31 + 0x30]
	0x03632568 STR V0, [X31 + 0x2]
	0x0363256C BL 0x3633784
	0x03632570 TBNZ X0, 0x0, 0x363259C
	0x03632574 LDR X8, [X19]
	0x03632578 CBZ X8, 0x36325B4
	0x0363257C LDR X8, [X8 + 0x18]
	0x03632580 STR X8, [X19]
	0x03632584 CBNZ X8, 0x3632544
	0x03632588 B 0x363259C
	0x0363258C MOV W0, W31
	0x03632590 STR X31, [X19]
	0x03632594 B 0x363259C
	0x03632598 MOV W0, W31
	0x0363259C LDP X20, X19, [X31 + 0x60]
	0x036325A0 LDP X22, X21, [X31 + 0x50]
	0x036325A4 LDR X30, [X31 + 0x40]
	0x036325A8 AND W0, W0, 0x1
	0x036325AC ADD X31, X31, 0x70
	0x036325B0 RET
	0x036325B4 BL 0x1C16F20

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+96]
	003 Compare X8, 0
	004 JumpIfEqual {40}
	005 Move W9, [X8+24]
	006 NotImplemented "Instruction CMP not yet implemented."
	007 Move X9, [X0+104]
	008 Compare X9, 0
	009 JumpIfEqual {40}
	010 Move W10, [X9+24]
	011 NotImplemented "Instruction CMP not yet implemented."
	012 Move X10, W1
	013 Add X8, X8, X10
	014 Move X8, [X8+32]
	015 Compare X8, 0
	016 JumpIfEqual {40}
	017 Add X9, X9, X10
	018 Move W10, [X9+32]
	019 Move W9, [X8+24]
	020 Move W10, W10
	021 ShiftRight W10, 31
	022 And W10, W10, 0x3FFFFFFF
	023 Subtract W10, W10, 2
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Add X10, X8, W10
	026 Move W0, [X10+32]
	027 Move TEMP, X0
	028 And TEMP, TEMP, -2147483648
	029 Compare TEMP, -2147483648
	030 JumpIfNotEqual {38}
	031 Move TEMP, 2
	032 Not TEMP
	033 Move W10, TEMP
	034 Subtract W10, W10, W0
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Add X8, X8, W10
	037 Move W0, [X8+32]
	038 Move X30, [X31+16]
	039 Return X0
	040 Call 0x1C17F20
	041 Call 0x1C17F28

Method: System.Int32 MatchLength(System.Int32 cap)

Disassembly:
	0x036325B8 STR X30, [X31 - 0x30]!
	0x036325BC STP X22, X21, [X31 + 0x10]
	0x036325C0 STP X20, X19, [X31 + 0x20]
	0x036325C4 ADRP X22, 0xDAE000
	0x036325C8 ADRP X21, 0xAC9000
	0x036325CC LDRB W8, [X22 + 0x528]
	0x036325D0 LDR X21, [X21 + 0x600]
	0x036325D4 MOV X19, X1
	0x036325D8 MOV X20, X0
	0x036325DC TBNZ X8, 0x0, 0x36325F4
	0x036325E0 ADRP X0, 0xAC9000
	0x036325E4 LDR X0, [X0 + 0x600]
	0x036325E8 BL 0x1C16CF4
	0x036325EC MOVZ W8, 0x1
	0x036325F0 STRB W8, [X22 + 0x528]
	0x036325F4 LDR X0, [X21]
	0x036325F8 LDR W8, [X0 + 0xE0]
	0x036325FC CBNZ W8, 0x3632608
	0x03632600 BL 0x1C16DFC
	0x03632604 LDR X0, [X21]
	0x03632608 LDR X8, [X0 + 0xB8]
	0x0363260C MOV X0, X20
	0x03632610 MOV X1, X19
	0x03632614 LDP X20, X19, [X31 + 0x20]
	0x03632618 LDR X3, [X8 + 0x30]
	0x0363261C LDP X22, X21, [X31 + 0x10]
	0x03632620 MOV W2, W31
	0x03632624 LDR X30, [X31], #0x30
	0x03632628 B 0x363262C
	0x0363262C STR X30, [X31 - 0x40]!
	0x03632630 STP X24, X23, [X31 + 0x10]
	0x03632634 STP X22, X21, [X31 + 0x20]
	0x03632638 STP X20, X19, [X31 + 0x30]
	0x0363263C ADRP X23, 0xDAE000
	0x03632640 ADRP X24, 0xAC9000

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+96]
	003 Compare X8, 0
	004 JumpIfEqual {40}
	005 Move W9, [X8+24]
	006 NotImplemented "Instruction CMP not yet implemented."
	007 Move X9, [X0+104]
	008 Compare X9, 0
	009 JumpIfEqual {40}
	010 Move W10, [X9+24]
	011 NotImplemented "Instruction CMP not yet implemented."
	012 Move X10, W1
	013 Add X8, X8, X10
	014 Move X8, [X8+32]
	015 Compare X8, 0
	016 JumpIfEqual {40}
	017 Add X9, X9, X10
	018 Move W10, [X9+32]
	019 Move W9, [X8+24]
	020 Move W10, W10
	021 ShiftRight W10, 31
	022 And W10, W10, 0x3FFFFFFF
	023 Subtract W10, W10, 1
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Add X10, X8, W10
	026 Move W0, [X10+32]
	027 Move TEMP, X0
	028 And TEMP, TEMP, -2147483648
	029 Compare TEMP, -2147483648
	030 JumpIfNotEqual {38}
	031 Move TEMP, 2
	032 Not TEMP
	033 Move W10, TEMP
	034 Subtract W10, W10, W0
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Add X8, X8, W10
	037 Move W0, [X8+32]
	038 Move X30, [X31+16]
	039 Return X0
	040 Call 0x1C17F20
	041 Call 0x1C17F28

Method: System.Void Tidy(System.Int32 textpos)

Disassembly:
	0x03632644 LDRB W8, [X23 + 0x529]
	0x03632648 LDR X24, [X24 + 0x600]
	0x0363264C MOV X20, X3
	0x03632650 MOV W21, W2
	0x03632654 MOV X22, X1
	0x03632658 MOV X19, X0
	0x0363265C TBNZ X8, 0x0, 0x3632674
	0x03632660 ADRP X0, 0xAC9000
	0x03632664 LDR X0, [X0 + 0x600]
	0x03632668 BL 0x1C16CF4
	0x0363266C MOVZ W8, 0x1
	0x03632670 STRB W8, [X23 + 0x529]
	0x03632674 LDR X0, [X24]
	0x03632678 BL 0x1C16F10
	0x0363267C MOVZ W4, 0x1
	0x03632680 MOV X1, X22
	0x03632684 MOV W2, W21
	0x03632688 MOV X3, X20
	0x0363268C MOV X23, X0
	0x03632690 BL 0x36326B8
	0x03632694 CBZ X23, 0x36326B4
	0x03632698 MOV X0, X23
	0x0363269C MOV X1, X19
	0x036326A0 LDP X20, X19, [X31 + 0x30]
	0x036326A4 LDP X22, X21, [X31 + 0x20]
	0x036326A8 LDP X24, X23, [X31 + 0x10]
	0x036326AC LDR X30, [X31], #0x40
	0x036326B0 B 0x3632A38
	0x036326B4 BL 0x1C16F20
	0x036326B8 SUB X31, X31, 0xA0
	0x036326BC STR X30, [X31 + 0x50]
	0x036326C0 STP X26, X25, [X31 + 0x60]
	0x036326C4 STP X24, X23, [X31 + 0x70]
	0x036326C8 STP X22, X21, [X31 + 0x80]
	0x036326CC STP X20, X19, [X31 + 0x90]
	0x036326D0 ADRP X24, 0xDAE000
	0x036326D4 LDRB W8, [X24 + 0x534]
	0x036326D8 MOV W22, W4
	0x036326DC MOV X23, X3
	0x036326E0 MOV W21, W2
	0x036326E4 MOV X20, X1
	0x036326E8 MOV X19, X0
	0x036326EC TBNZ X8, 0x0, 0x363271C
	0x036326F0 ADRP X0, 0xAC3000
	0x036326F4 LDR X0, [X0 + 0xC48]
	0x036326F8 BL 0x1C16CF4
	0x036326FC ADRP X0, 0xB09000
	0x03632700 LDR X0, [X0 + 0x808]
	0x03632704 BL 0x1C16CF4
	0x03632708 ADRP X0, 0xAC9000
	0x0363270C LDR X0, [X0 + 0x600]
	0x03632710 BL 0x1C16CF4
	0x03632714 MOVZ W8, 0x1
	0x03632718 STRB W8, [X24 + 0x534]
	0x0363271C MOV X0, X19
	0x03632720 MOV X1, X31
	0x03632724 BL 0x33BDD8C
	0x03632728 CBZ X20, 0x36329F0
	0x0363272C CMP W21, 0x400
	0x03632730 B.CS 0x36329B8
	0x03632734 TBZ X21, 0x8, 0x3632744
	0x03632738 MOVN W8, 0x30B
	0x0363273C AND W8, W21, W8, 0x0
	0x03632740 CBNZ W8, 0x36329B8
	0x03632744 ADRP X25, 0xAC9000
	0x03632748 LDR X25, [X25 + 0x600]
	0x0363274C ADRP X24, 0xAC3000
	0x03632750 LDR X0, [X25]
	0x03632754 LDR W8, [X0 + 0xE0]
	0x03632758 LDR X24, [X24 + 0xC48]
	0x0363275C CBNZ W8, 0x3632764
	0x03632760 BL 0x1C16DFC
	0x03632764 MOV X0, X23
	0x03632768 BL 0x3633348
	0x0363276C STR W21, [X19 + 0x20]
	0x03632770 STP X23, X20, [X19 + 0x10]
	0x03632774 LDR X0, [X24]
	0x03632778 LDR W8, [X0 + 0xE0]
	0x0363277C CBNZ W8, 0x3632784
	0x03632780 BL 0x1C16DFC
	0x03632784 MOV X0, X31
	0x03632788 TBNZ X21, 0x9, 0x3632798
	0x0363278C BL 0x33387A0
	0x03632790 CBNZ X0, 0x36327A0
	0x03632794 B 0x36329EC
	0x03632798 BL 0x3338524
	0x0363279C CBZ X0, 0x36329EC
	0x036327A0 LDR X8, [X0]
	0x036327A4 LDP X9, X1, [X8 + 0x168]
	0x036327A8 BLR X9
	0x036327AC ADRP X26, 0xDAE000
	0x036327B0 LDRB W8, [X26 + 0x558]

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+96]
	003 Compare X8, 0
	004 JumpIfEqual {97}
	005 Move X11, [X8+24]
	006 Compare W11, 0
	007 JumpIfEqual {96}
	008 Move X9, [X8+32]
	009 Compare X9, 0
	010 JumpIfEqual {97}
	011 Move W10, [X9+24]
	012 Compare W10, 0
	013 JumpIfEqual {96}
	014 Move W12, [X9+32]
	015 NotImplemented "Instruction CMP not yet implemented."
	016 Move [X0+16], W12
	017 Move W10, [X9+36]
	018 Move X9, [X0+104]
	019 Move [X0+84], W1
	020 Move [X0+20], W10
	021 Compare X9, 0
	022 JumpIfEqual {97}
	023 Move X12, [X9+24]
	024 Compare W12, 0
	025 JumpIfEqual {96}
	026 Move W10, [X9+32]
	027 Move W13, [X0+112]
	028 Move [X0+40], W10
	029 Compare W13, 0
	030 JumpIfEqual {94}
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move X10, X31
	033 And X11, X11, 0
	034 And X12, X12, 0
	035 Add X13, X9, X10
	036 Add X13, X13, 32
	037 Move W14, [X13]
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Add X15, X8, X10
	040 Move X15, [X15+32]
	041 Move W14, W14
	042 ShiftRight W14, 31
	043 And W14, W14, 0x3FFFFFFF
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Compare X15, 0
	046 JumpIfEqual {97}
	047 Move W17, [X15+24]
	048 Move W16, W31
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Add X1, X15, W16
	051 Move W1, [X1+32]
	052 Move TEMP, X1
	053 And TEMP, TEMP, -2147483648
	054 Compare TEMP, -2147483648
	055 JumpIfEqual {59}
	056 Add W16, W16, 1
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Move W16, W31
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Compare X15, 0
	061 JumpIfEqual {97}
	062 Move W17, [X15+24]
	063 Move X14, W14
	064 Add X1, X15, W16
	065 Add X1, X1, 32
	066 Subtract X2, X14, W16
	067 Move W14, W16
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Move W3, [X1]
	070 Move TEMP, X3
	071 And TEMP, TEMP, -2147483648
	072 Compare TEMP, -2147483648
	073 JumpIfEqual {79}
	074 NotImplemented "Instruction CMP not yet implemented."
	075 NotImplemented "Instruction CMP not yet implemented."
	076 Add X4, X15, W14
	077 Move [X4+32], W3
	078 Move W3, 1
	079 Move TEMP, 0
	080 Not TEMP
	081 Move W3, TEMP
	082 Add W14, W14, W3
	083 Add X1, X1, 4
	084 Subtract X2, X2, 1
	085 Add W16, W16, 1
	086 Move W14, W16
	087 NotImplemented "Instruction CMP not yet implemented."
	088 Add X10, X10, 1
	089 NotImplemented "Instruction CINC not yet implemented."
	090 NotImplemented "Instruction SBFM not yet implemented."
	091 NotImplemented "Instruction CMP not yet implemented."
	092 Move [X13], W14
	093 Move [X0+112], W31
	094 Move X30, [X31+16]
	095 Return 
	096 Call 0x1C17F28
	097 Call 0x1C17F20

Method: System.Void .cctor()

Disassembly:
	0x036327B4 MOV X23, X0
	0x036327B8 CBNZ W8, 0x36327D0
	0x036327BC ADRP X0, 0xAC9000
	0x036327C0 LDR X0, [X0 + 0x600]
	0x036327C4 BL 0x1C16CF4
	0x036327C8 MOVZ W8, 0x1
	0x036327CC STRB W8, [X26 + 0x558]
	0x036327D0 LDR X0, [X25]
	0x036327D4 LDR W8, [X0 + 0xE0]
	0x036327D8 CBNZ W8, 0x36327E4
	0x036327DC BL 0x1C16DFC
	0x036327E0 LDR X0, [X25]
	0x036327E4 LDR X8, [X0 + 0xB8]
	0x036327E8 LDR X24, [X8 + 0x18]
	0x036327EC CBZ X24, 0x363281C
	0x036327F0 LDR X8, [X24 + 0x30]
	0x036327F4 LDR V0, [X24 + 0x2]
	0x036327F8 ADD X0, X31, 0x20
	0x036327FC ADD X1, X31, 0x38
	0x03632800 STP W21, W31, [X31 + 0x38]
	0x03632804 STR X8, [X31 + 0x30]
	0x03632808 STR V0, [X31 + 0x2]
	0x0363280C STP X23, X20, [X31 + 0x40]
	0x03632810 BL 0x3633784
	0x03632814 TBNZ X0, 0x0, 0x3632858
	0x03632818 LDR X0, [X25]
	0x0363281C LDR W8, [X0 + 0xE0]
	0x03632820 CBNZ W8, 0x363282C
	0x03632824 BL 0x1C16DFC
	0x03632828 LDR X0, [X25]
	0x0363282C LDR X8, [X0 + 0xB8]
	0x03632830 LDR W8, [X8]
	0x03632834 CBZ W8, 0x3632894
	0x03632838 ADD X1, X31, 0x8
	0x0363283C MOV X0, X19
	0x03632840 MOV W2, W31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, 0xDAF000
	006 Move X20, 0xAC4000
	007 Move X21, 0xB0A000
	008 Move W8, [X19+1310]
	009 Move X20, [X20+632]
	010 Move X21, [X21+1944]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0xB0A000
	016 Move X0, [X0+1944]
	017 Call 0x1C17CF4
	018 Move X0, 0xAC4000
	019 Move X0, [X0+632]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X19+1310], W8
	023 Move X8, [X20]
	024 Move X0, [X21]
	025 Move X8, [X8+184]
	026 Move X19, [X8]
	027 Call 0x1C17F10
	028 Move W2, 1
	029 Move X1, X31
	030 Move X3, X19
	031 Move W4, W31
	032 Move W5, W31
	033 Move W6, W31
	034 Move X20, X0
	035 Call Match..ctor, X0, X1, X2, X3, X4, X5, X6
	036 Move X8, [X21]
	037 Move X8, [X8+184]
	038 Move [X8], X20
	039 Move X20, [X31+16]
	040 Move X19, [X31+24]
	041 Move X30, [X31+32]
	042 Move X21, [X31+40]
	043 Return 

Method: System.Void .ctor()

Disassembly:
	0x03632844 STP W21, W31, [X31 + 0x8]
	0x03632848 STP X23, X20, [X31 + 0x10]
	0x0363284C BL 0x3631BD8
	0x03632850 MOV X24, X0
	0x03632854 CBZ X0, 0x3632894
	0x03632858 LDR V0, [X24 + 0x4]
	0x0363285C MOVZ W9, 0x1
	0x03632860 STR V0, [X19 + 0x3]
	0x03632864 LDR X8, [X24 + 0x50]
	0x03632868 STR X8, [X19 + 0x40]
	0x0363286C LDR W8, [X24 + 0x58]
	0x03632870 STR W8, [X19 + 0x48]
	0x03632874 LDR X8, [X24 + 0x38]
	0x03632878 STR X8, [X19 + 0x60]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0xDAF000
	005 Move X20, 0xB0A000
	006 Move W8, [X19+1311]
	007 Move X20, [X20+2000]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xB0A000
	013 Move X0, [X0+2000]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+1311], W8
	017 Move X0, [X20]
	018 Call 0x1C17D9C

