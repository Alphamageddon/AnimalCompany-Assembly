Type: System.Text.RegularExpressions.GroupCollection

Method: System.Void .ctor(System.Text.RegularExpressions.Match match, System.Collections.Hashtable caps)

Disassembly:
	0x03630954 MOV X1, X0
	0x03630958 MOV X0, X19
	0x0363095C BL 0x1C16DEC
	0x03630960 B 0x362F9B0
	0x03630964 STP X30, X19, [X31 - 0x10]!
	0x03630968 ADRP X0, 0xAC3000
	0x0363096C LDR X0, [X0 + 0xB40]
	0x03630970 BL 0x1C16D08
	0x03630974 BL 0x1C16F10
	0x03630978 MOV X19, X0
	0x0363097C ADRP X0, 0xAED000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, X1
	006 Move X1, X31
	007 Move X19, X2
	008 Move X21, X0
	009 Call Object..ctor, X0
	010 Move [X21+16], X20
	011 Move [X21+24], X19
	012 Move X20, [X31+16]
	013 Move X19, [X31+24]
	014 Move X30, [X31+32]
	015 Move X21, [X31+40]
	016 Return 

Method: System.Boolean get_IsReadOnly()

Disassembly:
	0x03630980 LDR X0, [X0 + 0x68]
	0x03630984 BL 0x1C16D08

ISIL:
	001 Move W0, 1
	002 Return X0

Method: System.Int32 get_Count()

Disassembly:
	0x03630988 MOV X1, X0
	0x0363098C MOV X0, X19
	0x03630990 MOV X2, X31
	0x03630994 BL 0x3379A44
	0x03630998 ADRP X0, 0xB0B000
	0x0363099C LDR X0, [X0 + 0x780]
	0x036309A0 BL 0x1C16D08
	0x036309A4 MOV X1, X0
	0x036309A8 MOV X0, X19

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+16]
	003 Compare X8, 0
	004 JumpIfEqual {11}
	005 Move X8, [X8+104]
	006 Compare X8, 0
	007 JumpIfEqual {11}
	008 Move W0, [X8+24]
	009 Move X30, [X31+16]
	010 Return X0
	011 Call 0x1C17F20

Method: System.Text.RegularExpressions.Group get_Item(System.Int32 groupnum)

Disassembly:
	0x036309AC BL 0x1C16DEC

ISIL:
No ISIL was generated
Method: System.Text.RegularExpressions.Group get_Item(System.String groupname)

Disassembly:
	0x03630AB4 BL 0x1C16F20
	0x03630AB8 B 0x3630A2C
	0x03630ABC MOVN W8, 0x0
	0x03630AC0 STR W8, [X0 + 0x18]
	0x03630AC4 RET
	0x03630AC8 RET
	0x03630ACC STP X29, X30, [X31 - 0x60]!
	0x03630AD0 STP X28, X27, [X31 + 0x10]
	0x03630AD4 STP X26, X25, [X31 + 0x20]
	0x03630AD8 STP X24, X23, [X31 + 0x30]
	0x03630ADC STP X22, X21, [X31 + 0x40]
	0x03630AE0 STP X20, X19, [X31 + 0x50]
	0x03630AE4 ADRP X28, 0xDB0000
	0x03630AE8 ADRP X27, 0xAC4000
	0x03630AEC ADRP X26, 0xB0B000
	0x03630AF0 LDRB W8, [X28 + 0x519]
	0x03630AF4 LDR X27, [X27 + 0xE58]
	0x03630AF8 LDR X26, [X26 + 0x6D0]
	0x03630AFC MOV W19, W6
	0x03630B00 MOV W20, W5
	0x03630B04 MOV W21, W4
	0x03630B08 MOV X25, X3
	0x03630B0C MOV W23, W2
	0x03630B10 MOV X24, X1
	0x03630B14 MOV X22, X0
	0x03630B18 TBNZ X8, 0x0, 0x3630B54
	0x03630B1C ADRP X0, 0xB0B000
	0x03630B20 LDR X0, [X0 + 0x6D0]
	0x03630B24 BL 0x1C16CF4
	0x03630B28 ADRP X0, 0xAFB000
	0x03630B2C LDR X0, [X0 + 0xDA0]
	0x03630B30 BL 0x1C16CF4
	0x03630B34 ADRP X0, 0xAC4000
	0x03630B38 LDR X0, [X0 + 0xE58]
	0x03630B3C BL 0x1C16CF4
	0x03630B40 ADRP X0, 0xAC5000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xDB1000
	006 Move W8, [X21+1295]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xB0C000
	014 Move X0, [X0+1744]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+1295], W8
	018 Move X8, [X19+16]
	019 Compare X8, 0
	020 JumpIfEqual {49}
	021 Move X0, [X8+72]
	022 Compare X0, 0
	023 JumpIfEqual {34}
	024 Move X1, X20
	025 Call Regex.GroupNumberFromName, X0, X1
	026 Move W1, W0
	027 Move X0, X19
	028 Move X20, [X31+16]
	029 Move X19, [X31+24]
	030 Move X30, [X31+32]
	031 Move X21, [X31+40]
	032 Call GroupCollection.GetGroup, X0, X1
	033 Return X0
	034 Move X19, 0xB0C000
	035 Move X19, [X19+1744]
	036 Move X0, [X19]
	037 Move W8, [X0+224]
	038 Compare W8, 0
	039 JumpIfNotEqual {42}
	040 Call 0x1C17DFC
	041 Move X0, [X19]
	042 Move X8, [X0+184]
	043 Move X20, [X31+16]
	044 Move X19, [X31+24]
	045 Move X0, [X8]
	046 Move X30, [X31+32]
	047 Move X21, [X31+40]
	048 Return X0
	049 Call 0x1C17F20

Method: System.Collections.IEnumerator GetEnumerator()

Disassembly:
	0x03630C84 CBZ X11, 0x3630CCC
	0x03630C88 LDR W8, [X11 + 0x18]
	0x03630C8C UBFM X9, X8, 0x20, 0x1F
	0x03630C90 CMP X9, 0x1
	0x03630C94 B.LT 0x3630CBC
	0x03630C98 MOV X9, X31
	0x03630C9C SXTW X10, W8
	0x03630CA0 ADD X11, X11, 0x20
	0x03630CA4 CMP X9, X8
	0x03630CA8 B.CS 0x3630CC8
	0x03630CAC STR W31, [X11, X9, LSL #2]
	0x03630CB0 ADD X9, X9, 0x1
	0x03630CB4 CMP X9, X10
	0x03630CB8 B.LT 0x3630CA4
	0x03630CBC STRB W31, [X0 + 0x70]
	0x03630CC0 LDR X30, [X31], #0x10
	0x03630CC4 RET
	0x03630CC8 BL 0x1C16F28
	0x03630CCC BL 0x1C16F20
	0x03630CD0 STR X30, [X31 - 0x20]!
	0x03630CD4 STP X20, X19, [X31 + 0x10]
	0x03630CD8 ADRP X20, 0xDB0000
	0x03630CDC LDRB W8, [X20 + 0x51B]
	0x03630CE0 MOV X19, X0
	0x03630CE4 TBNZ X8, 0x0, 0x3630CFC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xDB1000
	006 Move X21, 0xB0C000
	007 Move W8, [X20+1296]
	008 Move X21, [X21+1776]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xB0C000
	015 Move X0, [X0+1776]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1296], W8
	019 Move X0, [X21]
	020 Call 0x1C17F10
	021 Move X1, X31
	022 Move X20, X0
	023 Call Object..ctor, X0
	024 Move TEMP, 0
	025 Not TEMP
	026 Move W8, TEMP
	027 Move [X20+16], X19
	028 Move [X20+24], W8
	029 Move X0, X20
	030 Move X20, [X31+16]
	031 Move X19, [X31+24]
	032 Move X30, [X31+32]
	033 Move X21, [X31+40]
	034 Return X0

Method: System.Collections.Generic.IEnumerator`1<System.Text.RegularExpressions.Group> System.Collections.Generic.IEnumerable<System.Text.RegularExpressions.Group>.GetEnumerator()

Disassembly:
	0x03630D18 MOV X20, X0
	0x03630D1C BL 0x33BDD8C
	0x03630D20 STP X19, X31, [X20 + 0x10]
	0x03630D24 STR X20, [X19 + 0x40]
	0x03630D28 MOV X0, X20
	0x03630D2C LDP X20, X19, [X31 + 0x10]
	0x03630D30 LDR X30, [X31], #0x20
	0x03630D34 RET
	0x03630D38 MOV X8, X0
	0x03630D3C LDR X0, [X0 + 0x48]
	0x03630D40 CBZ X0, 0x3630D60
	0x03630D44 LDP W6, W9, [X8 + 0x54]
	0x03630D48 LDR W4, [X8 + 0x50]
	0x03630D4C LDR W2, [X8 + 0x14]
	0x03630D50 LDR X3, [X8 + 0x18]
	0x03630D54 MOV W1, W31
	0x03630D58 SUB W5, W9, W4
	0x03630D5C B 0x3630D68
	0x03630D60 MOV X0, X8
	0x03630D64 RET
	0x03630D68 SUB X31, X31, 0x70
	0x03630D6C STR X30, [X31 + 0x10]
	0x03630D70 STP X28, X27, [X31 + 0x20]
	0x03630D74 STP X26, X25, [X31 + 0x30]
	0x03630D78 STP X24, X23, [X31 + 0x40]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xDB1000
	006 Move X21, 0xB0C000
	007 Move W8, [X20+1297]
	008 Move X21, [X21+1776]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xB0C000
	015 Move X0, [X0+1776]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1297], W8
	019 Move X0, [X21]
	020 Call 0x1C17F10
	021 Move X1, X31
	022 Move X20, X0
	023 Call Object..ctor, X0
	024 Move TEMP, 0
	025 Not TEMP
	026 Move W8, TEMP
	027 Move [X20+16], X19
	028 Move [X20+24], W8
	029 Move X0, X20
	030 Move X20, [X31+16]
	031 Move X19, [X31+24]
	032 Move X30, [X31+32]
	033 Move X21, [X31+40]
	034 Return X0

Method: System.Text.RegularExpressions.Group GetGroup(System.Int32 groupnum)

Disassembly:
	0x036309B0 STR X30, [X31 - 0x20]!
	0x036309B4 STP X20, X19, [X31 + 0x10]
	0x036309B8 ADRP X19, 0xDB0000
	0x036309BC ADRP X20, 0xB0B000
	0x036309C0 LDRB W8, [X19 + 0x518]
	0x036309C4 LDR X20, [X20 + 0x788]
	0x036309C8 TBNZ X8, 0x0, 0x36309E0
	0x036309CC ADRP X0, 0xB0B000
	0x036309D0 LDR X0, [X0 + 0x788]
	0x036309D4 BL 0x1C16CF4
	0x036309D8 MOVZ W8, 0x1
	0x036309DC STRB W8, [X19 + 0x518]
	0x036309E0 LDR X0, [X20]
	0x036309E4 BL 0x1C16D9C
	0x036309E8 STP X30, X19, [X31 - 0x10]!
	0x036309EC MOV X19, X0
	0x036309F0 LDR X0, [X0 + 0x10]
	0x036309F4 CBZ X0, 0x3630A28
	0x036309F8 BL 0x362F988
	0x036309FC LDR W8, [X19 + 0x18]
	0x03630A00 CMP W8, W0
	0x03630A04 B.GE 0x3630A1C
	0x03630A08 ADD W8, W8, 0x1
	0x03630A0C CMP W8, W0
	0x03630A10 CSET W0, LT
	0x03630A14 STR W8, [X19 + 0x18]
	0x03630A18 B 0x3630A20
	0x03630A1C MOV W0, W31
	0x03630A20 LDP X30, X19, [X31], #0x10
	0x03630A24 RET
	0x03630A28 BL 0x1C16F20
	0x03630A2C STR X30, [X31 - 0x20]!
	0x03630A30 STP X20, X19, [X31 + 0x10]
	0x03630A34 LDR W20, [X0 + 0x18]
	0x03630A38 TBNZ X20, 0x1F, 0x3630A6C
	0x03630A3C MOV X19, X0
	0x03630A40 LDR X0, [X0 + 0x10]
	0x03630A44 CBZ X0, 0x3630AB4
	0x03630A48 BL 0x362F988
	0x03630A4C CMP W20, W0
	0x03630A50 B.GE 0x3630A6C
	0x03630A54 LDR X0, [X19 + 0x10]
	0x03630A58 CBZ X0, 0x3630AB4
	0x03630A5C LDR W1, [X19 + 0x18]
	0x03630A60 LDP X20, X19, [X31 + 0x10]
	0x03630A64 LDR X30, [X31], #0x20
	0x03630A68 B 0x362F9B0
	0x03630A6C ADRP X0, 0xAC3000
	0x03630A70 LDR X0, [X0 + 0x5B0]
	0x03630A74 BL 0x1C16D08
	0x03630A78 BL 0x1C16F10
	0x03630A7C MOV X19, X0
	0x03630A80 ADRP X0, 0xAED000
	0x03630A84 LDR X0, [X0 + 0x290]
	0x03630A88 BL 0x1C16D08
	0x03630A8C MOV X1, X0
	0x03630A90 MOV X0, X19
	0x03630A94 MOV X2, X31
	0x03630A98 BL 0x337DF1C
	0x03630A9C ADRP X0, 0xB0B000
	0x03630AA0 LDR X0, [X0 + 0x790]
	0x03630AA4 BL 0x1C16D08
	0x03630AA8 MOV X1, X0
	0x03630AAC MOV X0, X19
	0x03630AB0 BL 0x1C16DEC

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xDB1000
	007 Move W8, [X21+1298]
	008 Move W20, W1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {25}
	014 Move X0, 0xB0C000
	015 Move X0, [X0+1744]
	016 Call 0x1C17CF4
	017 Move X0, 0xB0C000
	018 Move X0, [X0+1760]
	019 Call 0x1C17CF4
	020 Move X0, 0xAC4000
	021 Move X0, [X0+1880]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+1298], W8
	025 Move [X31+12], W31
	026 Move X21, [X19+24]
	027 Compare X21, 0
	028 JumpIfEqual {48}
	029 Move X8, 0xAC4000
	030 Move X8, [X8+1880]
	031 Move X22, 0xB0C000
	032 Add X1, X31, 8
	033 Move X0, [X8]
	034 Move X22, [X22+1760]
	035 Move [X31+8], W20
	036 Call 0x1C17E04
	037 Move X3, [X22]
	038 Move X1, X0
	039 Add X2, X31, 12
	040 Move X0, X21
	041 Call 0x21ECB50, X0, X1, X2
	042 Move TEMP, X0
	043 And TEMP, TEMP, 1
	044 Compare TEMP, 1
	045 JumpIfNotEqual {63}
	046 Move W1, [X31+12]
	047 Move X0, X19
	048 Move X8, [X19+16]
	049 Compare X8, 0
	050 JumpIfEqual {79}
	051 Move X8, [X8+104]
	052 Compare X8, 0
	053 JumpIfEqual {79}
	054 Move TEMP, X20
	055 And TEMP, TEMP, -2147483648
	056 Compare TEMP, -2147483648
	057 JumpIfEqual {63}
	058 Move W8, [X8+24]
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Move X0, X19
	061 Move W1, W20
	062 Call GroupCollection.GetGroupImpl, X0, X1
	063 Move X19, 0xB0C000
	064 Move X19, [X19+1744]
	065 Move X0, [X19]
	066 Move W8, [X0+224]
	067 Compare W8, 0
	068 JumpIfNotEqual {71}
	069 Call 0x1C17DFC
	070 Move X0, [X19]
	071 Move X8, [X0+184]
	072 Move X0, [X8]
	073 Move X20, [X31+32]
	074 Move X19, [X31+40]
	075 Move X22, [X31+16]
	076 Move X21, [X31+24]
	077 Move X30, [X31+48]
	078 Return X0
	079 Call 0x1C17F20

Method: System.Text.RegularExpressions.Group GetGroupImpl(System.Int32 groupnum)

Disassembly:
	0x03630D7C STP X22, X21, [X31 + 0x50]
	0x03630D80 STP X20, X19, [X31 + 0x60]
	0x03630D84 ADRP X26, 0xDB0000
	0x03630D88 LDRB W8, [X26 + 0x538]
	0x03630D8C MOV W20, W6
	0x03630D90 MOV W25, W5
	0x03630D94 MOV W22, W4
	0x03630D98 MOV X23, X3
	0x03630D9C MOV W21, W2
	0x03630DA0 MOV W24, W1
	0x03630DA4 MOV X19, X0
	0x03630DA8 TBNZ X8, 0x0, 0x3630DCC
	0x03630DAC ADRP X0, 0xAC5000
	0x03630DB0 LDR X0, [X0 + 0xC48]
	0x03630DB4 BL 0x1C16CF4
	0x03630DB8 ADRP X0, 0xB0B000
	0x03630DBC LDR X0, [X0 + 0x7A8]
	0x03630DC0 BL 0x1C16CF4
	0x03630DC4 MOVZ W8, 0x1
	0x03630DC8 STRB W8, [X26 + 0x538]
	0x03630DCC TBNZ X20, 0x1F, 0x3630EF0
	0x03630DD0 CBZ X23, 0x3630EEC
	0x03630DD4 LDR W8, [X23 + 0x10]
	0x03630DD8 CMP W8, W20
	0x03630DDC B.LT 0x3630EF0
	0x03630DE0 TBNZ X25, 0x1F, 0x3630F20
	0x03630DE4 CMP W8, W25
	0x03630DE8 B.LT 0x3630F20
	0x03630DEC LDR X0, [X19 + 0x50]
	0x03630DF0 CBZ X0, 0x3630EEC
	0x03630DF4 BL 0x3631998
	0x03630DF8 MOV X26, X0
	0x03630DFC CBNZ X0, 0x3630E1C
	0x03630E00 LDR X0, [X19 + 0x28]
	0x03630E04 CBZ X0, 0x3630E88
	0x03630E08 LDR X8, [X0]
	0x03630E0C LDP X9, X1, [X8 + 0x178]
	0x03630E10 BLR X9
	0x03630E14 MOV X26, X0
	0x03630E18 CBZ X26, 0x3630EE8
	0x03630E1C LDR X8, [X19 + 0x10]
	0x03630E20 ADD W4, W25, W22
	0x03630E24 AND W7, W24, 0x1
	0x03630E28 MOV X0, X26
	0x03630E2C MOV X1, X19
	0x03630E30 MOV X2, X23
	0x03630E34 MOV W3, W22
	0x03630E38 MOV W5, W20
	0x03630E3C MOV W6, W21
	0x03630E40 STP X8, X31, [X31]
	0x03630E44 BL 0x3646624
	0x03630E48 MOV X21, X0
	0x03630E4C MOV X20, X31
	0x03630E50 LDR X0, [X19 + 0x50]
	0x03630E54 CBZ X0, 0x3630EEC
	0x03630E58 MOV X1, X26
	0x03630E5C BL 0x36319F0
	0x03630E60 CBNZ X20, 0x3630F7C
	0x03630E64 MOV X0, X21
	0x03630E68 LDP X20, X19, [X31 + 0x60]
	0x03630E6C LDP X22, X21, [X31 + 0x50]
	0x03630E70 LDP X24, X23, [X31 + 0x40]
	0x03630E74 LDP X26, X25, [X31 + 0x30]
	0x03630E78 LDP X28, X27, [X31 + 0x20]
	0x03630E7C LDR X30, [X31 + 0x10]
	0x03630E80 ADD X31, X31, 0x70
	0x03630E84 RET
	0x03630E88 ADRP X8, 0xAC5000
	0x03630E8C LDR X8, [X8 + 0xC48]
	0x03630E90 LDR X27, [X19 + 0x60]
	0x03630E94 LDR W26, [X19 + 0x20]
	0x03630E98 LDR X0, [X8]
	0x03630E9C LDR W8, [X0 + 0xE0]
	0x03630EA0 CBNZ W8, 0x3630EA8
	0x03630EA4 BL 0x1C16DFC
	0x03630EA8 MOV X0, X31
	0x03630EAC TBNZ X26, 0x9, 0x3630EB8
	0x03630EB0 BL 0x33387A0
	0x03630EB4 B 0x3630EBC
	0x03630EB8 BL 0x3338524
	0x03630EBC ADRP X8, 0xB0B000
	0x03630EC0 LDR X8, [X8 + 0x7A8]
	0x03630EC4 MOV X28, X0
	0x03630EC8 LDR X0, [X8]
	0x03630ECC BL 0x1C16F10
	0x03630ED0 MOV X1, X27
	0x03630ED4 MOV X2, X28
	0x03630ED8 MOV X3, X31
	0x03630EDC MOV X26, X0
	0x03630EE0 BL 0x363CA38
	0x03630EE4 CBNZ X26, 0x3630E1C
	0x03630EE8 BL 0x1C16F20
	0x03630EEC BL 0x1C16F20
	0x03630EF0 ADRP X0, 0xACB000
	0x03630EF4 LDR X0, [X0 + 0x760]
	0x03630EF8 BL 0x1C16D08
	0x03630EFC BL 0x1C16F10
	0x03630F00 MOV X19, X0
	0x03630F04 ADRP X0, 0xB0B000
	0x03630F08 LDR X0, [X0 + 0x7B0]
	0x03630F0C BL 0x1C16D08
	0x03630F10 MOV X20, X0
	0x03630F14 ADRP X0, 0xB0B000
	0x03630F18 LDR X0, [X0 + 0x7B8]
	0x03630F1C B 0x3630F4C
	0x03630F20 ADRP X0, 0xACB000
	0x03630F24 LDR X0, [X0 + 0x760]
	0x03630F28 BL 0x1C16D08
	0x03630F2C BL 0x1C16F10
	0x03630F30 MOV X19, X0
	0x03630F34 ADRP X0, 0xACB000

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X21, 0xDB1000
	014 Move W8, [X21+1299]
	015 Move W19, W1
	016 Move X20, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {29}
	021 Move X0, 0xB0C000
	022 Move X0, [X0+1784]
	023 Call 0x1C17CF4
	024 Move X0, 0xB0C000
	025 Move X0, [X0+1744]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X21+1299], W8
	029 Compare W19, 0
	030 JumpIfEqual {39}
	031 Move X0, [X20+32]
	032 Compare X0, 0
	033 JumpIfEqual {54}
	034 Move W9, [X0+24]
	035 Subtract W8, W19, 1
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Add X8, X0, W8
	038 Add X8, X8, 32
	039 Add X8, X20, 16
	040 Move X0, [X8]
	041 Move X20, [X31+80]
	042 Move X19, [X31+88]
	043 Move X22, [X31+64]
	044 Move X21, [X31+72]
	045 Move X24, [X31+48]
	046 Move X23, [X31+56]
	047 Move X26, [X31+32]
	048 Move X25, [X31+40]
	049 Move X28, [X31+16]
	050 Move X27, [X31+24]
	051 Move X29, [X31+96]
	052 Move X30, [X31+104]
	053 Return X0
	054 Move X8, [X20+16]
	055 Compare X8, 0
	056 JumpIfEqual {130}
	057 Move X8, [X8+104]
	058 Compare X8, 0
	059 JumpIfEqual {130}
	060 Move X9, 0xB0C000
	061 Move X9, [X9+1784]
	062 Move W8, [X8+24]
	063 Move X0, [X9]
	064 Subtract W1, W8, 1
	065 Call 0x1C17D6C
	066 Move [X20+32], X0
	067 Compare X0, 0
	068 JumpIfEqual {130}
	069 Move X28, 0xB0C000
	070 Move X28, [X28+1744]
	071 Move X27, X31
	072 NotImplemented "Instruction LDRSW not yet implemented."
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Move X8, [X20+16]
	075 Compare X8, 0
	076 JumpIfEqual {130}
	077 Move X0, [X8+72]
	078 Compare X0, 0
	079 JumpIfEqual {130}
	080 Add X21, X27, 1
	081 Move W1, W21
	082 Call Regex.GroupNameFromNumber, X0, X1
	083 Move X8, [X20+16]
	084 Compare X8, 0
	085 JumpIfEqual {130}
	086 Move X9, [X8+96]
	087 Compare X9, 0
	088 JumpIfEqual {130}
	089 Move W10, [X9+24]
	090 NotImplemented "Instruction CMP not yet implemented."
	091 Move X10, [X8+104]
	092 Compare X10, 0
	093 JumpIfEqual {130}
	094 Move W11, [X10+24]
	095 NotImplemented "Instruction CMP not yet implemented."
	096 Move X22, X0
	097 Move X24, [X8+24]
	098 Add X8, X9, X27
	099 Add X9, X10, X27
	100 Move X0, [X28]
	101 Move X29, [X20+32]
	102 Move X25, [X8+40]
	103 Move W26, [X9+36]
	104 Call 0x1C17F10
	105 Move X1, X24
	106 Move X2, X25
	107 Move W3, W26
	108 Move X4, X22
	109 Move X23, X0
	110 Call Group..ctor, X0, X1, X2, X3, X4
	111 Compare X29, 0
	112 JumpIfEqual {130}
	113 Compare X23, 0
	114 JumpIfEqual {121}
	115 Move X8, [X29]
	116 Move X0, X23
	117 Move X1, [X8+64]
	118 Call 0x1C17E00
	119 Compare X0, 0
	120 JumpIfEqual {132}
	121 Move W9, [X29+24]
	122 Subtract X8, X21, 1
	123 NotImplemented "Instruction CMP not yet implemented."
	124 Add X9, X29, X27
	125 Move [X9+32], X23
	126 Move X0, [X20+32]
	127 Add X27, X8, 1
	128 Compare X0, 0
	129 JumpIfNotEqual {72}
	130 Call 0x1C17F20
	131 Call 0x1C17F28
	132 Call 0x1C17F44
	133 Move X1, X31
	134 Call 0x1C17DEC

Method: System.Boolean get_IsSynchronized()

Disassembly:
	0x03631078 SUB W10, W10, 0x1
	0x0363107C CMP W10, W11

ISIL:
	001 Move W0, W31
	002 Return X0

Method: System.Object get_SyncRoot()

Disassembly:
	0x03631080 B.CS 0x363117C
	0x03631084 ADD X8, X9, W8, 0x2, SXTW

ISIL:
	001 Move X0, [X0+16]
	002 Return X0

Method: System.Void CopyTo(System.Array array, System.Int32 arrayIndex)

Disassembly:
	0x03631088 ADD X9, X9, W10, 0x2, SXTW
	0x0363108C ADRP X22, 0xDA8000
	0x03631090 LDR X19, [X19 + 0x18]
	0x03631094 LDRSW X21, [X8 + 0x20]
	0x03631098 LDRB W8, [X22 + 0x761]
	0x0363109C LDR W20, [X9 + 0x20]
	0x036310A0 CBZ W8, 0x3631104
	0x036310A4 CBZ X19, 0x363111C
	0x036310A8 LDR W8, [X19 + 0x10]
	0x036310AC SUBS W8, W8, W21
	0x036310B0 B.CC 0x36310BC
	0x036310B4 CMP W8, W20
	0x036310B8 B.CS 0x36310C8
	0x036310BC MOVZ W0, 0x18
	0x036310C0 MOV X1, X31
	0x036310C4 BL 0x339D764
	0x036310C8 MOV X0, X19
	0x036310CC MOV X1, X31
	0x036310D0 BL 0x3225708
	0x036310D4 ADD X0, X0, X21, 0x1, LSL
	0x036310D8 B 0x3631168
	0x036310DC ADRP X8, 0xAC4000
	0x036310E0 LDR X8, [X8 + 0x278]
	0x036310E4 ADRP X20, 0xDA8000
	0x036310E8 LDRB W9, [X20 + 0x762]
	0x036310EC LDR X8, [X8]
	0x036310F0 LDR X8, [X8 + 0xB8]
	0x036310F4 LDR X19, [X8]
	0x036310F8 CBZ W9, 0x3631134
	0x036310FC CBNZ X19, 0x363114C
	0x03631100 B 0x3631160
	0x03631104 ADRP X0, 0xAE9000
	0x03631108 LDR X0, [X0 + 0x290]
	0x0363110C BL 0x1C16CF4
	0x03631110 MOVZ W8, 0x1
	0x03631114 STRB W8, [X22 + 0x761]
	0x03631118 CBNZ X19, 0x36310A8
	0x0363111C ORR W8, W20, W21, 0x0
	0x03631120 CBZ W8, 0x3631160
	0x03631124 MOVZ W0, 0x18
	0x03631128 MOV X1, X31
	0x0363112C BL 0x339D764
	0x03631130 B 0x3631160
	0x03631134 ADRP X0, 0xAE9000
	0x03631138 LDR X0, [X0 + 0x290]
	0x0363113C BL 0x1C16CF4
	0x03631140 MOVZ W8, 0x1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Compare X1, 0
	008 JumpIfEqual {35}
	009 Move W19, W2
	010 Move X20, X1
	011 Move X21, X0
	012 Call GroupCollection.get_Count, X0
	013 NotImplemented "Instruction CMP not yet implemented."
	014 Move W22, W31
	015 Move X0, X21
	016 Move W1, W22
	017 Add W23, W19, W22
	018 Call GroupCollection.GetGroup, X0, X1
	019 Move X1, X0
	020 Move X0, X20
	021 Move W2, W23
	022 Move X3, X31
	023 Call Array.SetValue, X0, X1, X2
	024 Move X0, X21
	025 Add W22, W22, 1
	026 Call GroupCollection.get_Count, X0
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X30, [X31+48]
	033 Move X23, [X31+56]
	034 Return 
	035 Move X0, 0xAC8000
	036 Move X0, [X0+1320]
	037 Call 0x1C17D08
	038 Call 0x1C17F10
	039 Move X19, X0
	040 Move X0, 0xAEB000
	041 Move X0, [X0+1600]
	042 Call 0x1C17D08
	043 Move X1, X0
	044 Move X0, X19
	045 Move X2, X31
	046 Call ArgumentNullException..ctor, X0, X1
	047 Move X0, 0xB0B000
	048 Move X0, [X0+1792]
	049 Call 0x1C17D08
	050 Move X1, X0
	051 Move X0, X19
	052 Call 0x1C17DEC

Method: System.Void CopyTo(System.Text.RegularExpressions.Group[] array, System.Int32 arrayIndex)

Disassembly:
	0x03631144 STRB W8, [X20 + 0x762]
	0x03631148 CBZ X19, 0x3631160
	0x0363114C MOV X0, X19
	0x03631150 MOV X1, X31
	0x03631154 BL 0x3225708
	0x03631158 LDR W20, [X19 + 0x10]
	0x0363115C B 0x3631168
	0x03631160 MOV X0, X31
	0x03631164 MOV W20, W31
	0x03631168 MOV W1, W20
	0x0363116C LDP X20, X19, [X31 + 0x20]
	0x03631170 LDP X22, X21, [X31 + 0x10]
	0x03631174 LDR X30, [X31], #0x30
	0x03631178 RET
	0x0363117C BL 0x1C16F28
	0x03631180 BL 0x1C16F20
	0x03631184 STR X30, [X31 - 0x10]!
	0x03631188 LDR X8, [X0 + 0x68]
	0x0363118C CBZ X8, 0x36311A8
	0x03631190 LDR X9, [X0]
	0x03631194 LDR W8, [X8 + 0x18]
	0x03631198 LDP X3, X2, [X9 + 0x198]
	0x0363119C SUB W1, W8, 0x1
	0x036311A0 LDR X30, [X31], #0x10
	0x036311A4 BR X3
	0x036311A8 BL 0x1C16F20
	0x036311AC STR X30, [X31 - 0x50]!
	0x036311B0 STP X26, X25, [X31 + 0x10]
	0x036311B4 STP X24, X23, [X31 + 0x20]
	0x036311B8 STP X22, X21, [X31 + 0x30]
	0x036311BC STP X20, X19, [X31 + 0x40]
	0x036311C0 ADRP X23, 0xDAF000
	0x036311C4 LDRB W8, [X23 + 0x51D]
	0x036311C8 MOV W20, W3
	0x036311CC MOV W22, W2
	0x036311D0 MOV W19, W1
	0x036311D4 MOV X21, X0
	0x036311D8 TBNZ X8, 0x0, 0x36311F0
	0x036311DC ADRP X0, 0xAC3000
	0x036311E0 LDR X0, [X0 + 0xE58]
	0x036311E4 BL 0x1C16CF4
	0x036311E8 MOVZ W8, 0x1
	0x036311EC STRB W8, [X23 + 0x51D]
	0x036311F0 LDR X24, [X21 + 0x60]
	0x036311F4 CBZ X24, 0x3631388
	0x036311F8 LDR W8, [X24 + 0x18]
	0x036311FC CMP W8, W19
	0x03631200 B.LS 0x3631384
	0x03631204 SXTW X23, W19
	0x03631208 ADD X25, X24, X23, 0x3, LSL
	0x0363120C LDR X8, [X25 + 0x20]!
	0x03631210 CBNZ X8, 0x3631238
	0x03631214 ADRP X8, 0xAC3000
	0x03631218 LDR X8, [X8 + 0xE58]
	0x0363121C MOVZ W1, 0x2
	0x03631220 LDR X0, [X8]
	0x03631224 BL 0x1C16D6C
	0x03631228 LDR W8, [X24 + 0x18]
	0x0363122C CMP W8, W19
	0x03631230 B.LS 0x3631384
	0x03631234 STR X0, [X25]
	0x03631238 LDR X9, [X21 + 0x68]
	0x0363123C CBZ X9, 0x3631388
	0x03631240 LDR W8, [X9 + 0x18]
	0x03631244 CMP W8, W19
	0x03631248 B.LS 0x3631384
	0x0363124C LDR X8, [X21 + 0x60]
	0x03631250 CBZ X8, 0x3631388
	0x03631254 LDR W10, [X8 + 0x18]
	0x03631258 CMP W10, W19
	0x0363125C B.LS 0x3631384
	0x03631260 ADD X10, X8, X23, 0x3, LSL
	0x03631264 LDR X26, [X10 + 0x20]
	0x03631268 CBZ X26, 0x3631388
	0x0363126C ADD X9, X9, X23, 0x2, LSL
	0x03631270 LDR W24, [X9 + 0x20]
	0x03631274 LDR W9, [X26 + 0x18]
	0x03631278 UBFM W25, W24, 0x1F, 0x1E
	0x0363127C ADD W10, W25, 0x2
	0x03631280 CMP W10, W9
	0x03631284 B.LE 0x3631308
	0x03631288 ADRP X8, 0xAC3000
	0x0363128C LDR X8, [X8 + 0xE58]
	0x03631290 UBFM W1, W24, 0x1D, 0x1C
	0x03631294 LDR X0, [X8]
	0x03631298 BL 0x1C16D6C
	0x0363129C CMP W25, 0x1
	0x036312A0 B.LT 0x36312E4
	0x036312A4 LDR W9, [X26 + 0x18]
	0x036312A8 MOV X8, X31
	0x036312AC MOV W10, W25
	0x036312B0 ADD X11, X26, 0x20
	0x036312B4 ADD X12, X0, 0x20
	0x036312B8 CMP X9, X8

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Compare X1, 0
	008 JumpIfEqual {70}
	009 Move W19, W2
	010 Move TEMP, X2
	011 And TEMP, TEMP, -2147483648
	012 Compare TEMP, -2147483648
	013 JumpIfEqual {58}
	014 Move W8, [X1+24]
	015 Move X20, X1
	016 NotImplemented "Instruction CMP not yet implemented."
	017 Move X21, X0
	018 Call GroupCollection.get_Count, X0
	019 Move W8, [X20+24]
	020 Subtract W8, W8, W19
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Move X0, X21
	023 Call GroupCollection.get_Count, X0
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move W22, W31
	026 Move X0, X21
	027 Move W1, W22
	028 Call GroupCollection.GetGroup, X0, X1
	029 Move X23, X0
	030 Compare X0, 0
	031 JumpIfEqual {38}
	032 Move X8, [X20]
	033 Move X0, X23
	034 Move X1, [X8+64]
	035 Call 0x1C17E00
	036 Compare X0, 0
	037 JumpIfEqual {55}
	038 Move W9, [X20+24]
	039 Add W8, W19, W22
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Add X8, X20, W8
	042 Move X0, X21
	043 Move [X8+32], X23
	044 Add W22, W22, 1
	045 Call GroupCollection.get_Count, X0
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Move X20, [X31+32]
	048 Move X19, [X31+40]
	049 Move X22, [X31+16]
	050 Move X21, [X31+24]
	051 Move X30, [X31+48]
	052 Move X23, [X31+56]
	053 Return 
	054 Call 0x1C17F28
	055 Call 0x1C17F44
	056 Move X1, X31
	057 Call 0x1C17DEC
	058 Move X0, 0xACB000
	059 Move X0, [X0+1888]
	060 Call 0x1C17D08
	061 Call 0x1C17F10
	062 Move X19, X0
	063 Move X0, 0xAED000
	064 Move X0, [X0+688]
	065 Call 0x1C17D08
	066 Move X1, X0
	067 Move X0, X19
	068 Move X2, X31
	069 Call ArgumentOutOfRangeException..ctor, X0, X1
	070 Move X0, 0xAC8000
	071 Move X0, [X0+1320]
	072 Call 0x1C17D08
	073 Call 0x1C17F10
	074 Move X19, X0
	075 Move X0, 0xAEB000
	076 Move X0, [X0+1600]
	077 Call 0x1C17D08
	078 Move X1, X0
	079 Move X0, X19
	080 Move X2, X31
	081 Call ArgumentNullException..ctor, X0, X1
	082 Move X0, 0xACB000
	083 Move X0, [X0+1400]
	084 Call 0x1C17D08
	085 Call 0x1C17F10
	086 Move X19, X0
	087 Move X0, 0xAEC000
	088 Move X0, [X0+792]
	089 Call 0x1C17D08
	090 Move X1, X0
	091 Move X0, X19
	092 Move X2, X31
	093 Call ArgumentException..ctor, X0, X1
	094 Move X0, 0xB0B000
	095 Move X0, [X0+1800]
	096 Call 0x1C17D08
	097 Move X1, X0
	098 Move X0, X19
	099 Call 0x1C17DEC

Method: System.Int32 System.Collections.Generic.IList<System.Text.RegularExpressions.Group>.IndexOf(System.Text.RegularExpressions.Group item)

Disassembly:
	0x036312BC B.EQ 0x3631384
	0x036312C0 CBZ X0, 0x3631388
	0x036312C4 LDR W13, [X0 + 0x18]
	0x036312C8 CMP X8, X13
	0x036312CC B.CS 0x3631384
	0x036312D0 LDR W13, [X11, X8, LSL #2]
	0x036312D4 STR W13, [X12, X8, LSL #2]
	0x036312D8 ADD X8, X8, 0x1
	0x036312DC CMP X10, X8
	0x036312E0 B.NE 0x36312B8
	0x036312E4 LDR X8, [X21 + 0x60]
	0x036312E8 CBZ X8, 0x3631388
	0x036312EC LDR W9, [X8 + 0x18]
	0x036312F0 CMP W9, W19
	0x036312F4 B.LS 0x3631384
	0x036312F8 ADD X8, X8, X23, 0x3, LSL
	0x036312FC STR X0, [X8 + 0x20]
	0x03631300 LDR X8, [X21 + 0x60]
	0x03631304 CBZ X8, 0x3631388
	0x03631308 LDR W9, [X8 + 0x18]
	0x0363130C CMP W9, W19
	0x03631310 B.LS 0x3631384
	0x03631314 ADD X8, X8, X23, 0x3, LSL
	0x03631318 LDR X8, [X8 + 0x20]
	0x0363131C CBZ X8, 0x3631388
	0x03631320 LDR W9, [X8 + 0x18]
	0x03631324 CMP W25, W9
	0x03631328 B.CS 0x3631384
	0x0363132C SXTW X10, W25
	0x03631330 ORR X10, X10, 0x1
	0x03631334 ADD X11, X8, W25, 0x2, SXTW
	0x03631338 CMP W10, W9
	0x0363133C STR W22, [X11 + 0x20]
	0x03631340 B.CS 0x3631384
	0x03631344 ADD X8, X8, X10, 0x2, LSL
	0x03631348 STR W20, [X8 + 0x20]
	0x0363134C LDR X8, [X21 + 0x68]
	0x03631350 CBZ X8, 0x3631388
	0x03631354 LDR W9, [X8 + 0x18]
	0x03631358 CMP W9, W19
	0x0363135C B.LS 0x3631384
	0x03631360 ADD W9, W24, 0x1
	0x03631364 ADD X8, X8, X23, 0x2, LSL
	0x03631368 LDP X20, X19, [X31 + 0x40]
	0x0363136C LDP X22, X21, [X31 + 0x30]
	0x03631370 LDP X24, X23, [X31 + 0x20]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xDB0000
	007 Move X22, 0xB0B000
	008 Move W8, [X21+1300]
	009 Move X22, [X22+1808]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xB0B000
	017 Move X0, [X0+1808]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+1300], W8
	021 Move X0, [X22]
	022 Call 0x211C0E8
	023 Move X21, X0
	024 Move X0, X20
	025 Call GroupCollection.get_Count, X0
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move W22, W31
	028 Move X0, X20
	029 Move W1, W22
	030 Call GroupCollection.GetGroup, X0, X1
	031 Compare X21, 0
	032 JumpIfEqual {58}
	033 Move X8, [X21]
	034 Move X1, X0
	035 Move X0, X21
	036 Move X2, X19
	037 Move X9, [X8+440]
	038 Move X3, [X8+448]
	039 NotImplemented "Instruction BLR not yet implemented."
	040 Move TEMP, X0
	041 And TEMP, TEMP, 1
	042 Compare TEMP, 1
	043 JumpIfEqual {51}
	044 Move X0, X20
	045 Add W22, W22, 1
	046 Call GroupCollection.get_Count, X0
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Move TEMP, 0
	049 Not TEMP
	050 Move W22, TEMP
	051 Move W0, W22
	052 Move X20, [X31+32]
	053 Move X19, [X31+40]
	054 Move X22, [X31+16]
	055 Move X21, [X31+24]
	056 Move X30, [X31+48]
	057 Return X0
	058 Call 0x1C17F20

Method: System.Void System.Collections.Generic.IList<System.Text.RegularExpressions.Group>.Insert(System.Int32 index, System.Text.RegularExpressions.Group item)

Disassembly:
	0x03631374 LDP X26, X25, [X31 + 0x10]
	0x03631378 STR W9, [X8 + 0x20]
	0x0363137C LDR X30, [X31], #0x50
	0x03631380 RET
	0x03631384 BL 0x1C16F28
	0x03631388 BL 0x1C16F20
	0x0363138C STR X30, [X31 - 0x10]!
	0x03631390 LDR X9, [X0 + 0x68]
	0x03631394 MOVZ W8, 0x1
	0x03631398 STRB W8, [X0 + 0x70]
	0x0363139C CBZ X9, 0x3631460
	0x036313A0 LDR W8, [X9 + 0x18]
	0x036313A4 CMP W8, W1
	0x036313A8 B.LS 0x363145C
	0x036313AC LDR X8, [X0 + 0x60]
	0x036313B0 CBZ X8, 0x3631460
	0x036313B4 LDR W10, [X8 + 0x18]
	0x036313B8 CMP W10, W1
	0x036313BC B.LS 0x363145C

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0xAC3000
	004 Move X0, [X0+2880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X19, X0
	008 Move X0, 0xAED000
	009 Move X0, [X0+104]
	010 Call 0x1C17D08
	011 Move X1, X0
	012 Move X0, X19
	013 Move X2, X31
	014 Call NotSupportedException..ctor, X0, X1
	015 Move X0, 0xB0B000
	016 Move X0, [X0+1816]
	017 Call 0x1C17D08
	018 Move X1, X0
	019 Move X0, X19
	020 Call 0x1C17DEC

Method: System.Void System.Collections.Generic.IList<System.Text.RegularExpressions.Group>.RemoveAt(System.Int32 index)

Disassembly:
	0x036313C0 SXTW X10, W1
	0x036313C4 ADD X8, X8, X10, 0x3, LSL
	0x036313C8 LDR X8, [X8 + 0x20]
	0x036313CC CBZ X8, 0x3631460
	0x036313D0 ADD X9, X9, X10, 0x2, LSL
	0x036313D4 LDR W10, [X9 + 0x20]
	0x036313D8 LDR W9, [X8 + 0x18]
	0x036313DC UBFM W10, W10, 0x1F, 0x1E
	0x036313E0 SUB W10, W10, 0x2
	0x036313E4 CMP W10, W9
	0x036313E8 B.CS 0x363145C
	0x036313EC ADD X11, X8, W10, 0x2, SXTW
	0x036313F0 LDR W11, [X11 + 0x20]
	0x036313F4 MOVN W12, 0x2
	0x036313F8 SUB W12, W12, W11
	0x036313FC CMP W11, 0x0
	0x03631400 CSEL W10, W10, W12, GE
	0x03631404 SUBS W11, W10, 0x2
	0x03631408 B.MI 0x3631420

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0xAC3000
	004 Move X0, [X0+2880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X19, X0
	008 Move X0, 0xAED000
	009 Move X0, [X0+104]
	010 Call 0x1C17D08
	011 Move X1, X0
	012 Move X0, X19
	013 Move X2, X31
	014 Call NotSupportedException..ctor, X0, X1
	015 Move X0, 0xB0B000
	016 Move X0, [X0+1824]
	017 Call 0x1C17D08
	018 Move X1, X0
	019 Move X0, X19
	020 Call 0x1C17DEC

Method: System.Text.RegularExpressions.Group System.Collections.Generic.IList<System.Text.RegularExpressions.Group>.get_Item(System.Int32 index)

Disassembly:
	0x0363140C CMP W11, W9

ISIL:
	001 Call GroupCollection.GetGroup, X0, X1
	002 Return X0

Method: System.Void System.Collections.Generic.IList<System.Text.RegularExpressions.Group>.set_Item(System.Int32 index, System.Text.RegularExpressions.Group value)

Disassembly:
	0x03631410 B.CS 0x363145C
	0x03631414 ADD X11, X8, W11, 0x2, UXTW
	0x03631418 LDR W2, [X11 + 0x20]
	0x0363141C TBNZ X2, 0x1F, 0x3631438
	0x03631420 LDR X8, [X0]
	0x03631424 ORN W2, W31, W10, 0x0
	0x03631428 LDP X5, X4, [X8 + 0x1A8]
	0x0363142C MOVN W8, 0x1
	0x03631430 SUB W3, W8, W10
	0x03631434 B 0x3631454
	0x03631438 SUB W10, W10, 0x1
	0x0363143C CMP W10, W9
	0x03631440 B.CS 0x363145C
	0x03631444 LDR X9, [X0]
	0x03631448 ADD X8, X8, W10, 0x2, SXTW
	0x0363144C LDR W3, [X8 + 0x20]
	0x03631450 LDP X5, X4, [X9 + 0x1A8]
	0x03631454 LDR X30, [X31], #0x10
	0x03631458 BR X5

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0xAC3000
	004 Move X0, [X0+2880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X19, X0
	008 Move X0, 0xAED000
	009 Move X0, [X0+104]
	010 Call 0x1C17D08
	011 Move X1, X0
	012 Move X0, X19
	013 Move X2, X31
	014 Call NotSupportedException..ctor, X0, X1
	015 Move X0, 0xB0B000
	016 Move X0, [X0+1832]
	017 Call 0x1C17D08
	018 Move X1, X0
	019 Move X0, X19
	020 Call 0x1C17DEC

Method: System.Void System.Collections.Generic.ICollection<System.Text.RegularExpressions.Group>.Add(System.Text.RegularExpressions.Group item)

Disassembly:
	0x0363145C BL 0x1C16F28
	0x03631460 BL 0x1C16F20
	0x03631464 STR X30, [X31 - 0x10]!
	0x03631468 LDR X8, [X0 + 0x68]
	0x0363146C CBZ X8, 0x3631494
	0x03631470 LDR W9, [X8 + 0x18]
	0x03631474 CMP W9, W1
	0x03631478 B.LS 0x3631498
	0x0363147C ADD X8, X8, W1, 0x2, SXTW
	0x03631480 LDR W9, [X8 + 0x20]
	0x03631484 SUB W9, W9, 0x1
	0x03631488 STR W9, [X8 + 0x20]
	0x0363148C LDR X30, [X31], #0x10
	0x03631490 RET
	0x03631494 BL 0x1C16F20
	0x03631498 BL 0x1C16F28
	0x0363149C STR X30, [X31 - 0x10]!
	0x036314A0 LDR X8, [X0 + 0x68]
	0x036314A4 CBZ X8, 0x3631524

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0xAC3000
	004 Move X0, [X0+2880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X19, X0
	008 Move X0, 0xAED000
	009 Move X0, [X0+104]
	010 Call 0x1C17D08
	011 Move X1, X0
	012 Move X0, X19
	013 Move X2, X31
	014 Call NotSupportedException..ctor, X0, X1
	015 Move X0, 0xB0B000
	016 Move X0, [X0+1840]
	017 Call 0x1C17D08
	018 Move X1, X0
	019 Move X0, X19
	020 Call 0x1C17DEC

Method: System.Void System.Collections.Generic.ICollection<System.Text.RegularExpressions.Group>.Clear()

Disassembly:
	0x036314A8 LDR W9, [X8 + 0x18]
	0x036314AC CMP W9, W1
	0x036314B0 B.LE 0x3631518
	0x036314B4 CMP W9, W1
	0x036314B8 B.LS 0x3631528
	0x036314BC SXTW X9, W1
	0x036314C0 ADD X8, X8, X9, 0x2, LSL
	0x036314C4 LDR W8, [X8 + 0x20]
	0x036314C8 CMP W8, 0x1
	0x036314CC B.LT 0x3631518
	0x036314D0 LDR X10, [X0 + 0x60]
	0x036314D4 CBZ X10, 0x3631524
	0x036314D8 LDR W11, [X10 + 0x18]
	0x036314DC CMP W11, W1
	0x036314E0 B.LS 0x3631528
	0x036314E4 ADD X9, X10, X9, 0x3, LSL
	0x036314E8 LDR X9, [X9 + 0x20]
	0x036314EC CBZ X9, 0x3631524
	0x036314F0 LDR W10, [X9 + 0x18]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0xAC3000
	004 Move X0, [X0+2880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X19, X0
	008 Move X0, 0xAED000
	009 Move X0, [X0+104]
	010 Call 0x1C17D08
	011 Move X1, X0
	012 Move X0, X19
	013 Move X2, X31
	014 Call NotSupportedException..ctor, X0, X1
	015 Move X0, 0xB0B000
	016 Move X0, [X0+1848]
	017 Call 0x1C17D08
	018 Move X1, X0
	019 Move X0, X19
	020 Call 0x1C17DEC

Method: System.Boolean System.Collections.Generic.ICollection<System.Text.RegularExpressions.Group>.Contains(System.Text.RegularExpressions.Group item)

Disassembly:
	0x036314F4 UBFM W8, W8, 0x1F, 0x1E
	0x036314F8 SUB W8, W8, 0x1
	0x036314FC CMP W8, W10
	0x03631500 B.CS 0x3631528
	0x03631504 ADD X8, X9, W8, 0x2, SXTW
	0x03631508 LDR W8, [X8 + 0x20]
	0x0363150C ADDS W31, W8, 0x2
	0x03631510 CSET W0, NE
	0x03631514 B 0x363151C
	0x03631518 MOV W0, W31
	0x0363151C LDR X30, [X31], #0x10
	0x03631520 RET
	0x03631524 BL 0x1C16F20
	0x03631528 BL 0x1C16F28
	0x0363152C STR X30, [X31 - 0x10]!
	0x03631530 LDR X8, [X0 + 0x60]
	0x03631534 CBZ X8, 0x36315B0
	0x03631538 LDR W9, [X8 + 0x18]
	0x0363153C CMP W9, W1
	0x03631540 B.LS 0x36315B4
	0x03631544 LDR X9, [X0 + 0x68]
	0x03631548 CBZ X9, 0x36315B0
	0x0363154C LDR W10, [X9 + 0x18]
	0x03631550 CMP W10, W1
	0x03631554 B.LS 0x36315B4
	0x03631558 SXTW X10, W1
	0x0363155C ADD X8, X8, X10, 0x3, LSL
	0x03631560 LDR X8, [X8 + 0x20]
	0x03631564 CBZ X8, 0x36315B0
	0x03631568 ADD X9, X9, X10, 0x2, LSL
	0x0363156C LDR W10, [X9 + 0x20]
	0x03631570 LDR W9, [X8 + 0x18]
	0x03631574 UBFM W10, W10, 0x1F, 0x1E
	0x03631578 SUB W10, W10, 0x2
	0x0363157C CMP W10, W9
	0x03631580 B.CS 0x36315B4
	0x03631584 ADD X10, X8, W10, 0x2, SXTW
	0x03631588 LDR W0, [X10 + 0x20]
	0x0363158C TBZ X0, 0x1F, 0x36315A8
	0x03631590 MOVN W10, 0x2
	0x03631594 SUB W10, W10, W0
	0x03631598 CMP W10, W9
	0x0363159C B.CS 0x36315B4
	0x036315A0 ADD X8, X8, W10, 0x2, SXTW
	0x036315A4 LDR W0, [X8 + 0x20]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xDB0000
	007 Move X21, 0xB0B000
	008 Move W8, [X22+1301]
	009 Move X21, [X21+1856]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xB0B000
	017 Move X0, [X0+1856]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+1301], W8
	021 Move X8, [X20]
	022 Move X1, [X21]
	023 NotImplemented "Instruction LDRH not yet implemented."
	024 Compare X9, 0
	025 JumpIfEqual {32}
	026 Move X10, [X8+176]
	027 Add X10, X10, 8
	028 NotImplemented "Instruction LDUR not yet implemented."
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Subtract X9, X9, 1
	031 Add X10, X10, 16
	032 Move W2, 2
	033 Move X0, X20
	034 Call 0x1C5D788
	035 Move W9, [X10]
	036 Add W9, W9, 2
	037 Add X8, X8, W9
	038 Add X0, X8, 312
	039 Move X8, [X0]
	040 Move X2, [X0+8]
	041 Move X0, X20
	042 Move X1, X19
	043 NotImplemented "Instruction BLR not yet implemented."
	044 Move X20, [X31+32]
	045 Move X19, [X31+40]
	046 Move X22, [X31+16]
	047 Move X21, [X31+24]
	048 NotImplemented "Instruction ORN not yet implemented."
	049 Move W0, W8
	050 ShiftRight W0, 31
	051 And W0, W0, 0x7FFFFFFF
	052 Move X30, [X31+48]
	053 Return X0

Method: System.Boolean System.Collections.Generic.ICollection<System.Text.RegularExpressions.Group>.Remove(System.Text.RegularExpressions.Group item)

Disassembly:
	0x036315A8 LDR X30, [X31], #0x10
	0x036315AC RET
	0x036315B0 BL 0x1C16F20
	0x036315B4 BL 0x1C16F28
	0x036315B8 STR X30, [X31 - 0x10]!
	0x036315BC LDR X8, [X0 + 0x60]
	0x036315C0 CBZ X8, 0x363163C
	0x036315C4 LDR W9, [X8 + 0x18]
	0x036315C8 CMP W9, W1
	0x036315CC B.LS 0x3631640
	0x036315D0 LDR X9, [X0 + 0x68]
	0x036315D4 CBZ X9, 0x363163C
	0x036315D8 LDR W10, [X9 + 0x18]
	0x036315DC CMP W10, W1
	0x036315E0 B.LS 0x3631640
	0x036315E4 SXTW X10, W1
	0x036315E8 ADD X8, X8, X10, 0x3, LSL
	0x036315EC LDR X8, [X8 + 0x20]
	0x036315F0 CBZ X8, 0x363163C

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0xAC3000
	004 Move X0, [X0+2880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X19, X0
	008 Move X0, 0xAED000
	009 Move X0, [X0+104]
	010 Call 0x1C17D08
	011 Move X1, X0
	012 Move X0, X19
	013 Move X2, X31
	014 Call NotSupportedException..ctor, X0, X1
	015 Move X0, 0xB0B000
	016 Move X0, [X0+1864]
	017 Call 0x1C17D08
	018 Move X1, X0
	019 Move X0, X19
	020 Call 0x1C17DEC

Method: System.Int32 System.Collections.IList.Add(System.Object value)

Disassembly:
	0x036315F4 ADD X9, X9, X10, 0x2, LSL
	0x036315F8 LDR W10, [X9 + 0x20]
	0x036315FC LDR W9, [X8 + 0x18]
	0x03631600 UBFM W10, W10, 0x1F, 0x1E
	0x03631604 SUB W10, W10, 0x1
	0x03631608 CMP W10, W9
	0x0363160C B.CS 0x3631640
	0x03631610 ADD X10, X8, W10, 0x2, SXTW
	0x03631614 LDR W0, [X10 + 0x20]
	0x03631618 TBZ X0, 0x1F, 0x3631634
	0x0363161C MOVN W10, 0x2
	0x03631620 SUB W10, W10, W0
	0x03631624 CMP W10, W9
	0x03631628 B.CS 0x3631640
	0x0363162C ADD X8, X8, W10, 0x2, SXTW
	0x03631630 LDR W0, [X8 + 0x20]
	0x03631634 LDR X30, [X31], #0x10
	0x03631638 RET
	0x0363163C BL 0x1C16F20

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0xAC3000
	004 Move X0, [X0+2880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X19, X0
	008 Move X0, 0xAED000
	009 Move X0, [X0+104]
	010 Call 0x1C17D08
	011 Move X1, X0
	012 Move X0, X19
	013 Move X2, X31
	014 Call NotSupportedException..ctor, X0, X1
	015 Move X0, 0xB0B000
	016 Move X0, [X0+1872]
	017 Call 0x1C17D08
	018 Move X1, X0
	019 Move X0, X19
	020 Call 0x1C17DEC

Method: System.Void System.Collections.IList.Clear()

Disassembly:
	0x03631640 BL 0x1C16F28
	0x03631644 STR X30, [X31 - 0x10]!
	0x03631648 LDR X8, [X0 + 0x60]
	0x0363164C CBZ X8, 0x36317B0
	0x03631650 LDR X11, [X8 + 0x18]
	0x03631654 CBZ W11, 0x36317AC
	0x03631658 LDR X9, [X8 + 0x20]
	0x0363165C CBZ X9, 0x36317B0
	0x03631660 LDR W10, [X9 + 0x18]
	0x03631664 CBZ W10, 0x36317AC
	0x03631668 LDR W12, [X9 + 0x20]
	0x0363166C CMP W10, 0x1
	0x03631670 STR W12, [X0 + 0x10]
	0x03631674 B.EQ 0x36317AC
	0x03631678 LDR W10, [X9 + 0x24]
	0x0363167C LDR X9, [X0 + 0x68]
	0x03631680 STR W1, [X0 + 0x54]
	0x03631684 STR W10, [X0 + 0x14]
	0x03631688 CBZ X9, 0x36317B0

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0xAC3000
	004 Move X0, [X0+2880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X19, X0
	008 Move X0, 0xAED000
	009 Move X0, [X0+104]
	010 Call 0x1C17D08
	011 Move X1, X0
	012 Move X0, X19
	013 Move X2, X31
	014 Call NotSupportedException..ctor, X0, X1
	015 Move X0, 0xB0B000
	016 Move X0, [X0+1880]
	017 Call 0x1C17D08
	018 Move X1, X0
	019 Move X0, X19
	020 Call 0x1C17DEC

Method: System.Boolean System.Collections.IList.Contains(System.Object value)

Disassembly:
	0x0363168C LDR X12, [X9 + 0x18]
	0x03631690 CBZ W12, 0x36317AC
	0x03631694 LDR W10, [X9 + 0x20]
	0x03631698 LDRB W13, [X0 + 0x70]
	0x0363169C STR W10, [X0 + 0x28]
	0x036316A0 CBZ W13, 0x36317A4
	0x036316A4 CMP W12, 0x1
	0x036316A8 B.LT 0x36317A0
	0x036316AC MOV X10, X31
	0x036316B0 AND X11, X11, 0x0
	0x036316B4 AND X12, X12, 0x0
	0x036316B8 ADD X13, X9, X10, 0x2, LSL
	0x036316BC LDR W14, [X13 + 0x20]!
	0x036316C0 CMP X10, X11
	0x036316C4 B.EQ 0x36317AC
	0x036316C8 ADD X15, X8, X10, 0x3, LSL
	0x036316CC LDR X15, [X15 + 0x20]
	0x036316D0 UBFM W14, W14, 0x1F, 0x1E
	0x036316D4 CMP W14, 0x1
	0x036316D8 B.LT 0x363170C
	0x036316DC CBZ X15, 0x36317B0
	0x036316E0 LDR W17, [X15 + 0x18]
	0x036316E4 MOV W16, W31
	0x036316E8 CMP W16, W17
	0x036316EC B.CS 0x36317AC
	0x036316F0 ADD X1, X15, W16, 0x2, SXTW
	0x036316F4 LDR W1, [X1 + 0x20]
	0x036316F8 TBNZ X1, 0x1F, 0x3631710
	0x036316FC ADD W16, W16, 0x1
	0x03631700 CMP W14, W16
	0x03631704 B.NE 0x36316E8
	0x03631708 B 0x3631784
	0x0363170C MOV W16, W31
	0x03631710 CMP W16, W14
	0x03631714 B.GE 0x3631780
	0x03631718 CBZ X15, 0x36317B0
	0x0363171C LDR W17, [X15 + 0x18]
	0x03631720 SXTW X14, W14
	0x03631724 ADD X1, X15, W16, 0x2, SXTW
	0x03631728 ADD X1, X1, 0x20
	0x0363172C SUB X2, X14, W16, SXTW
	0x03631730 MOV W14, W16
	0x03631734 CMP W16, W17
	0x03631738 B.CS 0x36317AC
	0x0363173C LDR W3, [X1]
	0x03631740 TBNZ X3, 0x1F, 0x3631764
	0x03631744 CMP W16, W14
	0x03631748 B.EQ 0x363175C
	0x0363174C CMP W14, W17
	0x03631750 B.CS 0x36317AC
	0x03631754 ADD X4, X15, W14, 0x2, SXTW
	0x03631758 STR W3, [X4 + 0x20]
	0x0363175C MOVZ W3, 0x1
	0x03631760 B 0x3631768
	0x03631764 MOVN W3, 0x0
	0x03631768 ADD W14, W14, W3
	0x0363176C ADD X1, X1, 0x4
	0x03631770 SUBS X2, X2, 0x1
	0x03631774 ADD W16, W16, 0x1
	0x03631778 B.NE 0x3631734
	0x0363177C B 0x3631784

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xDB0000
	006 Move W8, [X21+1302]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0xB0B000
	014 Move X0, [X0+1744]
	015 Call 0x1C17CF4
	016 Move X0, 0xB0B000
	017 Move X0, [X0+1888]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+1302], W8
	021 Compare X19, 0
	022 JumpIfEqual {34}
	023 Move X8, 0xB0B000
	024 Move X8, [X8+1744]
	025 Move X9, [X19]
	026 Move X8, [X8]
	027 Move W11, [X9+304]
	028 Move W10, [X8+304]
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move X9, [X9+200]
	031 Add X9, X9, X10
	032 NotImplemented "Instruction LDUR not yet implemented."
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move X20, [X31+16]
	035 Move X19, [X31+24]
	036 Move W0, W31
	037 Move X30, [X31+32]
	038 Move X21, [X31+40]
	039 Return X0
	040 Move X10, 0xB0B000
	041 Move X8, [X20]
	042 Move X10, [X10+1888]
	043 NotImplemented "Instruction LDRH not yet implemented."
	044 Move X1, [X10]
	045 Compare X9, 0
	046 JumpIfEqual {53}
	047 Move X10, [X8+176]
	048 Add X10, X10, 8
	049 NotImplemented "Instruction LDUR not yet implemented."
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Subtract X9, X9, 1
	052 Add X10, X10, 16
	053 Move W2, 4
	054 Move X0, X20
	055 Call 0x1C5D788
	056 Move W9, [X10]
	057 Add W9, W9, 4
	058 Add X8, X8, W9
	059 Add X0, X8, 312
	060 Move X3, [X0]
	061 Move X2, [X0+8]
	062 Move X0, X20
	063 Move X1, X19
	064 Move X20, [X31+16]
	065 Move X19, [X31+24]
	066 Move X30, [X31+32]
	067 Move X21, [X31+40]
	068 CallNoReturn X3

Method: System.Int32 System.Collections.IList.IndexOf(System.Object value)

Disassembly:
	0x03631780 MOV W14, W16
	0x03631784 CMP W14, 0x0
	0x03631788 ADD X10, X10, 0x1
	0x0363178C CINC W14, W14, LT
	0x03631790 SBFM W14, W14, 0x1, 0x1F
	0x03631794 CMP X10, X12
	0x03631798 STR W14, [X13]
	0x0363179C B.NE 0x36316B8
	0x036317A0 STRB W31, [X0 + 0x70]
	0x036317A4 LDR X30, [X31], #0x10
	0x036317A8 RET
	0x036317AC BL 0x1C16F28
	0x036317B0 BL 0x1C16F20
	0x036317B4 STP X30, X21, [X31 - 0x20]!
	0x036317B8 STP X20, X19, [X31 + 0x10]
	0x036317BC ADRP X19, 0xDAF000
	0x036317C0 ADRP X20, 0xAC4000
	0x036317C4 ADRP X21, 0xB0A000
	0x036317C8 LDRB W8, [X19 + 0x51E]
	0x036317CC LDR X20, [X20 + 0x278]
	0x036317D0 LDR X21, [X21 + 0x798]
	0x036317D4 TBNZ X8, 0x0, 0x36317F8
	0x036317D8 ADRP X0, 0xB0A000
	0x036317DC LDR X0, [X0 + 0x798]
	0x036317E0 BL 0x1C16CF4
	0x036317E4 ADRP X0, 0xAC4000
	0x036317E8 LDR X0, [X0 + 0x278]
	0x036317EC BL 0x1C16CF4
	0x036317F0 MOVZ W8, 0x1
	0x036317F4 STRB W8, [X19 + 0x51E]
	0x036317F8 LDR X8, [X20]
	0x036317FC LDR X0, [X21]
	0x03631800 LDR X8, [X8 + 0xB8]
	0x03631804 LDR X19, [X8]
	0x03631808 BL 0x1C16F10
	0x0363180C MOVZ W2, 0x1
	0x03631810 MOV X1, X31
	0x03631814 MOV X3, X19
	0x03631818 MOV W4, W31
	0x0363181C MOV W5, W31
	0x03631820 MOV W6, W31
	0x03631824 MOV X20, X0
	0x03631828 BL 0x3630ACC
	0x0363182C LDR X8, [X21]
	0x03631830 LDR X8, [X8 + 0xB8]
	0x03631834 STR X20, [X8]
	0x03631838 LDP X20, X19, [X31 + 0x10]
	0x0363183C LDP X30, X21, [X31], #0x20
	0x03631840 RET
	0x03631844 STR X30, [X31 - 0x20]!
	0x03631848 STP X20, X19, [X31 + 0x10]
	0x0363184C ADRP X19, 0xDAF000
	0x03631850 ADRP X20, 0xB0A000
	0x03631854 LDRB W8, [X19 + 0x51F]
	0x03631858 LDR X20, [X20 + 0x7D0]
	0x0363185C TBNZ X8, 0x0, 0x3631874
	0x03631860 ADRP X0, 0xB0A000
	0x03631864 LDR X0, [X0 + 0x7D0]
	0x03631868 BL 0x1C16CF4
	0x0363186C MOVZ W8, 0x1
	0x03631870 STRB W8, [X19 + 0x51F]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xDB0000
	006 Move W8, [X21+1303]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0xB0B000
	014 Move X0, [X0+1744]
	015 Call 0x1C17CF4
	016 Move X0, 0xB0B000
	017 Move X0, [X0+1856]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+1303], W8
	021 Compare X19, 0
	022 JumpIfEqual {34}
	023 Move X8, 0xB0B000
	024 Move X8, [X8+1744]
	025 Move X9, [X19]
	026 Move X8, [X8]
	027 Move W11, [X9+304]
	028 Move W10, [X8+304]
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move X9, [X9+200]
	031 Add X9, X9, X10
	032 NotImplemented "Instruction LDUR not yet implemented."
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move X20, [X31+16]
	035 Move X19, [X31+24]
	036 Move TEMP, 0
	037 Not TEMP
	038 Move W0, TEMP
	039 Move X30, [X31+32]
	040 Move X21, [X31+40]
	041 Return X0
	042 Move X10, 0xB0B000
	043 Move X8, [X20]
	044 Move X10, [X10+1856]
	045 NotImplemented "Instruction LDRH not yet implemented."
	046 Move X1, [X10]
	047 Compare X9, 0
	048 JumpIfEqual {55}
	049 Move X10, [X8+176]
	050 Add X10, X10, 8
	051 NotImplemented "Instruction LDUR not yet implemented."
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Subtract X9, X9, 1
	054 Add X10, X10, 16
	055 Move W2, 2
	056 Move X0, X20
	057 Call 0x1C5D788
	058 Move W9, [X10]
	059 Add W9, W9, 2
	060 Add X8, X8, W9
	061 Add X0, X8, 312
	062 Move X3, [X0]
	063 Move X2, [X0+8]
	064 Move X0, X20
	065 Move X1, X19
	066 Move X20, [X31+16]
	067 Move X19, [X31+24]
	068 Move X30, [X31+32]
	069 Move X21, [X31+40]
	070 CallNoReturn X3

Method: System.Void System.Collections.IList.Insert(System.Int32 index, System.Object value)

Disassembly:
	0x03631874 LDR X0, [X20]
	0x03631878 BL 0x1C16D9C
	0x0363187C STR X30, [X31 - 0x60]!
	0x03631880 STP X28, X27, [X31 + 0x10]
	0x03631884 STP X26, X25, [X31 + 0x20]
	0x03631888 STP X24, X23, [X31 + 0x30]
	0x0363188C STP X22, X21, [X31 + 0x40]
	0x03631890 STP X20, X19, [X31 + 0x50]
	0x03631894 ADRP X27, 0xDAF000
	0x03631898 ADRP X28, 0xB0A000
	0x0363189C LDRB W8, [X27 + 0x520]
	0x036318A0 LDR X28, [X28 + 0x798]
	0x036318A4 MOV W19, W7
	0x036318A8 MOV W21, W6
	0x036318AC MOV W23, W5
	0x036318B0 MOV X24, X4
	0x036318B4 MOV W25, W3
	0x036318B8 MOV X20, X2
	0x036318BC MOV X26, X1

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0xAC3000
	004 Move X0, [X0+2880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X19, X0
	008 Move X0, 0xAED000
	009 Move X0, [X0+104]
	010 Call 0x1C17D08
	011 Move X1, X0
	012 Move X0, X19
	013 Move X2, X31
	014 Call NotSupportedException..ctor, X0, X1
	015 Move X0, 0xB0B000
	016 Move X0, [X0+1896]
	017 Call 0x1C17D08
	018 Move X1, X0
	019 Move X0, X19
	020 Call 0x1C17DEC

Method: System.Boolean System.Collections.IList.get_IsFixedSize()

Disassembly:
	0x036318C0 MOV X22, X0
	0x036318C4 TBNZ X8, 0x0, 0x36318DC

ISIL:
	001 Move W0, 1
	002 Return X0

Method: System.Void System.Collections.IList.Remove(System.Object value)

Disassembly:
	0x036318C8 ADRP X0, 0xB0A000
	0x036318CC LDR X0, [X0 + 0x798]
	0x036318D0 BL 0x1C16CF4
	0x036318D4 MOVZ W8, 0x1
	0x036318D8 STRB W8, [X27 + 0x520]
	0x036318DC LDR X0, [X28]
	0x036318E0 LDR W8, [X0 + 0xE0]
	0x036318E4 CBNZ W8, 0x36318EC
	0x036318E8 BL 0x1C16DFC
	0x036318EC MOV X0, X22
	0x036318F0 MOV X1, X26
	0x036318F4 MOV W2, W25
	0x036318F8 MOV X3, X24
	0x036318FC MOV W4, W23
	0x03631900 MOV W5, W21
	0x03631904 MOV W6, W19
	0x03631908 BL 0x3630ACC
	0x0363190C STR X20, [X22 + 0x78]
	0x03631910 LDP X20, X19, [X31 + 0x50]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0xAC3000
	004 Move X0, [X0+2880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X19, X0
	008 Move X0, 0xAED000
	009 Move X0, [X0+104]
	010 Call 0x1C17D08
	011 Move X1, X0
	012 Move X0, X19
	013 Move X2, X31
	014 Call NotSupportedException..ctor, X0, X1
	015 Move X0, 0xB0B000
	016 Move X0, [X0+1904]
	017 Call 0x1C17D08
	018 Move X1, X0
	019 Move X0, X19
	020 Call 0x1C17DEC

Method: System.Void System.Collections.IList.RemoveAt(System.Int32 index)

Disassembly:
	0x03631914 LDP X22, X21, [X31 + 0x40]
	0x03631918 LDP X24, X23, [X31 + 0x30]
	0x0363191C LDP X26, X25, [X31 + 0x20]
	0x03631920 LDP X28, X27, [X31 + 0x10]
	0x03631924 LDR X30, [X31], #0x60
	0x03631928 RET
	0x0363192C STP X30, X21, [X31 - 0x20]!
	0x03631930 STP X20, X19, [X31 + 0x10]
	0x03631934 ADRP X20, 0xDAF000
	0x03631938 LDRB W8, [X20 + 0x521]
	0x0363193C MOV X19, X0
	0x03631940 TBNZ X8, 0x0, 0x3631958
	0x03631944 ADRP X0, 0xB0A000
	0x03631948 LDR X0, [X0 + 0x7A0]
	0x0363194C BL 0x1C16CF4
	0x03631950 MOVZ W8, 0x1
	0x03631954 STRB W8, [X20 + 0x521]
	0x03631958 LDR X20, [X19 + 0x40]
	0x0363195C CBNZ X20, 0x3631988

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0xAC3000
	004 Move X0, [X0+2880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X19, X0
	008 Move X0, 0xAED000
	009 Move X0, [X0+104]
	010 Call 0x1C17D08
	011 Move X1, X0
	012 Move X0, X19
	013 Move X2, X31
	014 Call NotSupportedException..ctor, X0, X1
	015 Move X0, 0xB0B000
	016 Move X0, [X0+1912]
	017 Call 0x1C17D08
	018 Move X1, X0
	019 Move X0, X19
	020 Call 0x1C17DEC

Method: System.Object System.Collections.IList.get_Item(System.Int32 index)

Disassembly:
	0x03631960 ADRP X8, 0xB0A000

ISIL:
	001 Call GroupCollection.GetGroup, X0, X1
	002 Return X0

Method: System.Void System.Collections.IList.set_Item(System.Int32 index, System.Object value)

Disassembly:
	0x03631964 LDR X21, [X19 + 0x78]
	0x03631968 LDR X8, [X8 + 0x7A0]
	0x0363196C LDR X0, [X8]
	0x03631970 BL 0x1C16F10
	0x03631974 MOV X1, X31
	0x03631978 MOV X20, X0
	0x0363197C BL 0x33BDD8C
	0x03631980 STP X19, X21, [X20 + 0x10]
	0x03631984 STR X20, [X19 + 0x40]
	0x03631988 MOV X0, X20
	0x0363198C LDP X20, X19, [X31 + 0x10]
	0x03631990 LDP X30, X21, [X31], #0x20
	0x03631994 RET
	0x03631998 STR X30, [X31 - 0x20]!
	0x0363199C STP X20, X19, [X31 + 0x10]
	0x036319A0 MOV X20, X0
	0x036319A4 ADD X19, X0, 0x20
	0x036319A8 BL 0x1C16D44
	0x036319AC MOVZ W1, 0x1

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0xAC3000
	004 Move X0, [X0+2880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X19, X0
	008 Move X0, 0xAED000
	009 Move X0, [X0+104]
	010 Call 0x1C17D08
	011 Move X1, X0
	012 Move X0, X19
	013 Move X2, X31
	014 Call NotSupportedException..ctor, X0, X1
	015 Move X0, 0xB0B000
	016 Move X0, [X0+1920]
	017 Call 0x1C17D08
	018 Move X1, X0
	019 Move X0, X19
	020 Call 0x1C17DEC

Method: System.Void .ctor()

Disassembly:
	0x036319B0 MOV X0, X19
	0x036319B4 MOV X2, X31
	0x036319B8 BL 0x33E9064
	0x036319BC MOV W8, W0
	0x036319C0 MOV X0, X31
	0x036319C4 CBNZ W8, 0x36319E4
	0x036319C8 LDR X0, [X20 + 0x10]
	0x036319CC CBZ X0, 0x36319D8
	0x036319D0 STR X0, [X20 + 0x18]
	0x036319D4 B 0x36319E4
	0x036319D8 BL 0x1C16D44
	0x036319DC MOV X0, X31
	0x036319E0 STR W31, [X19]
	0x036319E4 LDP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0xDB0000
	005 Move X20, 0xB0B000
	006 Move W8, [X19+1304]
	007 Move X20, [X20+1928]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xB0B000
	013 Move X0, [X0+1928]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+1304], W8
	017 Move X0, [X20]
	018 Call 0x1C17D9C

