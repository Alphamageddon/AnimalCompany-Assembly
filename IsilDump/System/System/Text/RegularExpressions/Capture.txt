Type: System.Text.RegularExpressions.Capture

Method: System.Void .ctor(System.String text, System.Int32 index, System.Int32 length)

Disassembly:
	0x036305C0 ADRP X0, 0xAED000
	0x036305C4 LDR X0, [X0 + 0x68]
	0x036305C8 BL 0x1C16D08
	0x036305CC MOV X1, X0
	0x036305D0 MOV X0, X19
	0x036305D4 MOV X2, X31
	0x036305D8 BL 0x3379A44
	0x036305DC ADRP X0, 0xB0B000
	0x036305E0 LDR X0, [X0 + 0x748]
	0x036305E4 BL 0x1C16D08
	0x036305E8 MOV X1, X0
	0x036305EC MOV X0, X19
	0x036305F0 BL 0x1C16DEC
	0x036305F4 STP X30, X19, [X31 - 0x10]!
	0x036305F8 ADRP X0, 0xAC3000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, X1
	007 Move X1, X31
	008 Move W19, W3
	009 Move W20, W2
	010 Move X22, X0
	011 Call Object..ctor, X0
	012 Move [X22+24], X21
	013 Move [X22+16], W20
	014 Move [X22+20], W19
	015 Move X20, [X31+32]
	016 Move X19, [X31+40]
	017 Move X22, [X31+16]
	018 Move X21, [X31+24]
	019 Move X30, [X31+48]
	020 Return 

Method: System.Int32 get_Index()

Disassembly:
	0x036305FC LDR X0, [X0 + 0xB40]
	0x03630600 BL 0x1C16D08

ISIL:
	001 Move W0, [X0+16]
	002 Return X0

Method: System.Void set_Index(System.Int32 value)

Disassembly:
	0x03630604 BL 0x1C16F10
	0x03630608 MOV X19, X0

ISIL:
	001 Move [X0+16], W1
	002 Return 

Method: System.Int32 get_Length()

Disassembly:
	0x0363060C ADRP X0, 0xAED000
	0x03630610 LDR X0, [X0 + 0x68]

ISIL:
	001 Move W0, [X0+20]
	002 Return X0

Method: System.Void set_Length(System.Int32 value)

Disassembly:
	0x03630614 BL 0x1C16D08
	0x03630618 MOV X1, X0

ISIL:
	001 Move [X0+20], W1
	002 Return 

Method: System.String get_Text()

Disassembly:
	0x0363061C MOV X0, X19
	0x03630620 MOV X2, X31

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void set_Text(System.String value)

Disassembly:
	0x03630624 BL 0x3379A44
	0x03630628 ADRP X0, 0xB0B000

ISIL:
	001 Move [X0+24], X1
	002 Return 

Method: System.String get_Value()

Disassembly:
	0x0363062C LDR X0, [X0 + 0x750]
	0x03630630 BL 0x1C16D08
	0x03630634 MOV X1, X0
	0x03630638 MOV X0, X19
	0x0363063C BL 0x1C16DEC
	0x03630640 STP X30, X19, [X31 - 0x10]!
	0x03630644 ADRP X0, 0xAC3000
	0x03630648 LDR X0, [X0 + 0xB40]
	0x0363064C BL 0x1C16D08

ISIL:
	001 Move [X31-16], X30
	002 Move X8, X0
	003 Move X0, [X0+24]
	004 Compare X0, 0
	005 JumpIfEqual {12}
	006 Move W1, [X8+16]
	007 Move W2, [X8+20]
	008 Move X3, X31
	009 Move X30, [X31+16]
	010 Call String.Substring, X0, X1, X2
	011 Return X0
	012 Call 0x1C17F20

Method: System.String ToString()

Disassembly:
	0x03630650 BL 0x1C16F10

ISIL:
	001 Call Capture.get_Value, X0
	002 Return X0

Method: System.ReadOnlySpan`1<System.Char> GetLeftSubstring()

Disassembly:
	0x03630654 MOV X19, X0
	0x03630658 ADRP X0, 0xAED000
	0x0363065C LDR X0, [X0 + 0x68]
	0x03630660 BL 0x1C16D08
	0x03630664 MOV X1, X0
	0x03630668 MOV X0, X19
	0x0363066C MOV X2, X31
	0x03630670 BL 0x3379A44
	0x03630674 ADRP X0, 0xB0B000
	0x03630678 LDR X0, [X0 + 0x758]
	0x0363067C BL 0x1C16D08
	0x03630680 MOV X1, X0
	0x03630684 MOV X0, X19
	0x03630688 BL 0x1C16DEC
	0x0363068C STP X30, X21, [X31 - 0x20]!
	0x03630690 STP X20, X19, [X31 + 0x10]
	0x03630694 ADRP X21, 0xDB0000
	0x03630698 LDRB W8, [X21 + 0x516]
	0x0363069C MOV X19, X1
	0x036306A0 MOV X20, X0
	0x036306A4 TBNZ X8, 0x0, 0x36306C8
	0x036306A8 ADRP X0, 0xB0B000
	0x036306AC LDR X0, [X0 + 0x6D0]
	0x036306B0 BL 0x1C16CF4
	0x036306B4 ADRP X0, 0xB0B000
	0x036306B8 LDR X0, [X0 + 0x760]
	0x036306BC BL 0x1C16CF4
	0x036306C0 MOVZ W8, 0x1
	0x036306C4 STRB W8, [X21 + 0x516]
	0x036306C8 CBZ X19, 0x3630700
	0x036306CC ADRP X8, 0xB0B000
	0x036306D0 LDR X8, [X8 + 0x6D0]
	0x036306D4 LDR X9, [X19]
	0x036306D8 LDR X8, [X8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xDAA000
	006 Move X20, [X0+24]
	007 Move W8, [X21+1889]
	008 Move W19, [X0+16]
	009 Compare W8, 0
	010 JumpIfEqual {21}
	011 Compare X20, 0
	012 JumpIfEqual {28}
	013 Move W8, [X20+16]
	014 NotImplemented "Instruction CMP not yet implemented."
	015 Move W0, 24
	016 Move X1, X31
	017 Call ThrowHelper.ThrowArgumentOutOfRangeException, X0
	018 Move X0, X20
	019 Move X1, X31
	020 Call String.GetRawStringData, X0
	021 Move X0, 0xAEB000
	022 Move X0, [X0+656]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X21+1889], W8
	026 Compare X20, 0
	027 JumpIfNotEqual {13}
	028 Compare W19, 0
	029 JumpIfEqual {33}
	030 Move W0, 24
	031 Move X1, X31
	032 Call ThrowHelper.ThrowArgumentOutOfRangeException, X0
	033 Move X0, X31
	034 Move X19, X31
	035 Move X1, X19
	036 Move X20, [X31+16]
	037 Move X19, [X31+24]
	038 Move X30, [X31+32]
	039 Move X21, [X31+40]
	040 Return X0

Method: System.ReadOnlySpan`1<System.Char> GetRightSubstring()

Disassembly:
	0x036306DC LDRB W11, [X9 + 0x130]
	0x036306E0 LDRB W10, [X8 + 0x130]
	0x036306E4 CMP W11, W10
	0x036306E8 B.CC 0x3630700
	0x036306EC LDR X9, [X9 + 0xC8]
	0x036306F0 ADD X9, X9, X10, 0x3, LSL
	0x036306F4 LDUR X9, [X9 - 0x8]
	0x036306F8 CMP X9, X8
	0x036306FC B.EQ 0x3630710
	0x03630700 LDP X20, X19, [X31 + 0x10]
	0x03630704 MOV W0, W31
	0x03630708 LDP X30, X21, [X31], #0x20
	0x0363070C RET
	0x03630710 ADRP X10, 0xB0B000
	0x03630714 LDR X8, [X20]
	0x03630718 LDR X10, [X10 + 0x760]
	0x0363071C LDRH W9, [X8 + 0x12E]
	0x03630720 LDR X1, [X10]
	0x03630724 CBZ X9, 0x3630748
	0x03630728 LDR X10, [X8 + 0xB0]
	0x0363072C ADD X10, X10, 0x8
	0x03630730 LDUR X11, [X10 - 0x8]
	0x03630734 CMP X11, X1
	0x03630738 B.EQ 0x3630758
	0x0363073C SUBS X9, X9, 0x1
	0x03630740 ADD X10, X10, 0x10
	0x03630744 B.NE 0x3630730
	0x03630748 MOVZ W2, 0x4
	0x0363074C MOV X0, X20
	0x03630750 BL 0x1C5C788
	0x03630754 B 0x3630768
	0x03630758 LDR W9, [X10]
	0x0363075C ADD W9, W9, 0x4
	0x03630760 ADD X8, X8, W9, 0x4, SXTW
	0x03630764 ADD X0, X8, 0x138
	0x03630768 LDP X3, X2, [X0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X19, [X0+24]
	008 Compare X19, 0
	009 JumpIfEqual {43}
	010 Move W9, [X0+16]
	011 Move W21, [X0+20]
	012 Move W8, [X19+16]
	013 Move X23, 0xDAA000
	014 Move W10, [X23+1889]
	015 Add W20, W21, W9
	016 Subtract W22, W8, W9
	017 Compare W10, 0
	018 JumpIfNotEqual {25}
	019 Move X0, 0xAEB000
	020 Move X0, [X0+656]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X23+1889], W8
	024 Move W8, [X19+16]
	025 Subtract W8, W8, W20
	026 Subtract W21, W22, W21
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Move W0, 24
	029 Move X1, X31
	030 Call ThrowHelper.ThrowArgumentOutOfRangeException, X0
	031 Move X0, X19
	032 Move X1, X31
	033 Call String.GetRawStringData, X0
	034 Add X0, X0, W20
	035 Move W1, W21
	036 Move X20, [X31+32]
	037 Move X19, [X31+40]
	038 Move X22, [X31+16]
	039 Move X21, [X31+24]
	040 Move X30, [X31+48]
	041 Move X23, [X31+56]
	042 Return X0
	043 Call 0x1C17F20

