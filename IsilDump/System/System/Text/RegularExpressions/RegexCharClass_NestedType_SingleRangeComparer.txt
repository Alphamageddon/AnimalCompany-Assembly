Type: System.Text.RegularExpressions.RegexCharClass/SingleRangeComparer

Method: System.Void .ctor()

Disassembly:
	0x0363C598 ADD X9, X9, 0x402
	0x0363C59C ADR X10, 0x10

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Int32 Compare(System.Text.RegularExpressions.RegexCharClass/SingleRange x, System.Text.RegularExpressions.RegexCharClass/SingleRange y)

Disassembly:
	0x0363C5A0 LDRB W11, [X9, X8, LSL]
	0x0363C5A4 ADD X10, X10, X11, 0x2, LSL
	0x0363C5A8 BR X10
	0x0363C5AC CBNZ W22, 0x363C69C
	0x0363C5B0 B 0x363C6CC
	0x0363C5B4 CBNZ W22, 0x363C6CC
	0x0363C5B8 MOVZ W8, 0x1
	0x0363C5BC STRB W8, [X19 + 0x29]
	0x0363C5C0 B 0x363C6CC
	0x0363C5C4 MOV W1, W31
	0x0363C5C8 MOV X2, X31
	0x0363C5CC BL 0x3222A1C
	0x0363C5D0 ADRP X8, 0xB00000
	0x0363C5D4 LDR X8, [X8 + 0x328]
	0x0363C5D8 MOV W21, W0
	0x0363C5DC LDR X8, [X8]
	0x0363C5E0 MOV X0, X8
	0x0363C5E4 BL 0x1C16F10
	0x0363C5E8 MOV X22, X0
	0x0363C5EC MOV W1, W21
	0x0363C5F0 MOV W2, W31
	0x0363C5F4 MOV W3, W31
	0x0363C5F8 MOV W4, W20
	0x0363C5FC BL 0x363C894
	0x0363C600 MOV X0, X19
	0x0363C604 MOV X1, X22
	0x0363C608 LDP X20, X19, [X31 + 0x30]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xDA5000
	007 Move [X31+12], W1
	008 Move X21, 0xABA000
	009 Move W8, [X20+1369]
	010 Move X21, [X21+368]
	011 Move X19, X2
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xABA000
	017 Move X0, [X0+368]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X20+1369], W8
	021 Move X0, [X21]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Add X0, X31, 12
	027 Move W1, W19
	028 Move X2, X31
	029 Call Char.CompareTo, X0, X1
	030 Move X20, [X31+32]
	031 Move X19, [X31+40]
	032 Move X30, [X31+16]
	033 Move X21, [X31+24]
	034 Add X31, X31, 48
	035 Return X0

Method: System.Void .cctor()

Disassembly:
	0x0363C60C LDP X22, X21, [X31 + 0x20]
	0x0363C610 LDP X30, X23, [X31 + 0x10]
	0x0363C614 ADD X31, X31, 0x40
	0x0363C618 B 0x363C194
	0x0363C61C CBZ X21, 0x363C6E0
	0x0363C620 LDR W8, [X21 + 0x2C]
	0x0363C624 CBNZ W8, 0x363C6CC
	0x0363C628 MOV X0, X19
	0x0363C62C BL 0x363C304
	0x0363C630 CBZ X0, 0x363C6E0
	0x0363C634 MOVZ W8, 0x1
	0x0363C638 STRB W8, [X0 + 0x18]
	0x0363C63C B 0x363C6CC
	0x0363C640 CBZ W22, 0x363C674
	0x0363C644 MOV X0, X19
	0x0363C648 BL 0x363C288
	0x0363C64C MOV X20, X0
	0x0363C650 MOV X0, X19
	0x0363C654 BL 0x363C304
	0x0363C658 CBZ X0, 0x363C6E0
	0x0363C65C MOVZ W2, 0x1
	0x0363C660 MOV X1, X20
	0x0363C664 BL 0x363C7E8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0xDA5000
	005 Move X20, 0xB00000
	006 Move W8, [X19+1370]
	007 Move X20, [X20+2408]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xB00000
	013 Move X0, [X0+2408]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+1370], W8
	017 Move X0, [X20]
	018 Call 0x1C17F10
	019 Move X1, X31
	020 Move X19, X0
	021 Call Object..ctor, X0
	022 Move X8, [X20]
	023 Move X8, [X8+184]
	024 Move [X8], X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Return 

