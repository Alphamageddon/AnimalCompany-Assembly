Type: System.Text.RegularExpressions.RegexInterpreter

Method: System.Void .ctor(System.Text.RegularExpressions.RegexCode code, System.Globalization.CultureInfo culture)

Disassembly:
	0x0363DA38 B.HI 0x363DAD0
	0x0363DA3C ADR X9, 0x10
	0x0363DA40 LDRH W10, [X28, X8, LSL #1]
	0x0363DA44 ADD X9, X9, X10, 0x2, LSL
	0x0363DA48 BR X9
	0x0363DA4C MOVZ W1, 0x1
	0x0363DA50 MOV X0, X19
	0x0363DA54 BL 0x363D16C
	0x0363DA58 LDRB W8, [X19 + 0x98]
	0x0363DA5C CBZ W8, 0x363DA70
	0x0363DA60 LDR W2, [X19 + 0x28]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, X1
	006 Move X1, X31
	007 Move X19, X2
	008 Move X21, X0
	009 Call Object..ctor, X0
	010 Move [X21+128], X20
	011 Move [X21+136], X19
	012 Move X20, [X31+16]
	013 Move X19, [X31+24]
	014 Move X30, [X31+32]
	015 Move X21, [X31+40]
	016 Return 

Method: System.Void InitTrackCount()

Disassembly:
	0x0363DA6C B 0x363DA7C
	0x0363DA70 LDR W8, [X19 + 0x14]
	0x0363DA74 LDR W2, [X19 + 0x28]
	0x0363DA78 SUB W8, W8, W2
	0x0363DA7C CMP W0, W8
	0x0363DA80 CSEL W8, W8, W0, GT
	0x0363DA84 SUBS W1, W8, 0x1
	0x0363DA88 MOVZ W20, 0x2

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+128]
	003 Compare X8, 0
	004 JumpIfEqual {9}
	005 Move W8, [X8+32]
	006 Move [X0+92], W8
	007 Move X30, [X31+16]
	008 Return 
	009 Call 0x1C17F20

Method: System.Void Advance(System.Int32 i)

Disassembly:
	0x0363DA8C B.GE 0x363E610
	0x0363DA90 B 0x363DA04
	0x0363DA94 LDR W8, [X19 + 0x48]
	0x0363DA98 MOV X0, X19
	0x0363DA9C ADD W8, W8, 0x1
	0x0363DAA0 STR W8, [X19 + 0x48]
	0x0363DAA4 BL 0x363D0F0
	0x0363DAA8 LDR W2, [X19 + 0x28]
	0x0363DAAC MOV W1, W0
	0x0363DAB0 CMP W2, W0
	0x0363DAB4 B.NE 0x363E55C
	0x0363DAB8 MOV X0, X19
	0x0363DABC BL 0x363D03C
	0x0363DAC0 MOV X0, X19
	0x0363DAC4 BL 0x363D0F0
	0x0363DAC8 MOV W1, W0
	0x0363DACC B 0x363E1B0
	0x0363DAD0 SUB W9, W8, 0x83
	0x0363DAD4 CMP W9, 0x21
	0x0363DAD8 B.HI 0x363E690
	0x0363DADC ADR X8, 0x10
	0x0363DAE0 LDRH W10, [X27, X9, LSL #1]
	0x0363DAE4 ADD X8, X8, X10, 0x2, LSL
	0x0363DAE8 BR X8
	0x0363DAEC LDR W8, [X19 + 0x38]

ISIL:
	001 Move [X31-16], X30
	002 Move W8, [X0+148]
	003 Move X9, [X0+128]
	004 Add W8, W1, W8
	005 Add W8, W8, 1
	006 Move [X0+148], W8
	007 Compare X9, 0
	008 JumpIfEqual {31}
	009 Move X9, [X9+16]
	010 Compare X9, 0
	011 JumpIfEqual {31}
	012 Move W10, [X9+24]
	013 NotImplemented "Instruction CMP not yet implemented."
	014 Add X8, X9, W8
	015 Move W8, [X8+32]
	016 Move TEMP, 576
	017 Not TEMP
	018 Move W9, TEMP
	019 Move W10, W8
	020 ShiftRight W10, 9
	021 And W10, W10, 511
	022 Move W11, W8
	023 ShiftRight W11, 6
	024 And W11, W11, 63
	025 And W8, W8, W9
	026 Move [X0+153], W10
	027 Move [X0+152], W11
	028 Move [X0+144], W8
	029 Move X30, [X31+16]
	030 Return 
	031 Call 0x1C17F20
	032 Call 0x1C17F28

Method: System.Void Goto(System.Int32 newpos)

Disassembly:
	0x0363DB10 SUBS W1, W20, 0x1
	0x0363DB14 MOVZ W20, 0x2
	0x0363DB18 STR W0, [X19 + 0x28]
	0x0363DB1C B.LT 0x363DA04
	0x0363DB20 LDRB W8, [X19 + 0x98]
	0x0363DB24 CMP W8, 0x0
	0x0363DB28 CSNEG W8, W24, W24, EQ
	0x0363DB2C ADD W2, W8, W0
	0x0363DB30 B 0x363E610
	0x0363DB34 MOVZ W1, 0x1
	0x0363DB38 MOV X0, X19
	0x0363DB3C BL 0x363D16C
	0x0363DB40 LDRB W8, [X19 + 0x98]
	0x0363DB44 MOVZ W9, 0x10
	0x0363DB48 MOVZ W10, 0x28
	0x0363DB4C MOVZ W11, 0x14
	0x0363DB50 CMP W8, 0x0
	0x0363DB54 CSEL X8, X10, X9, EQ
	0x0363DB58 CSEL X9, X11, X10, EQ
	0x0363DB5C LDR W9, [X19, X9, LSL]
	0x0363DB60 LDR W8, [X19, X8, LSL]
	0x0363DB64 SUB W8, W9, W8
	0x0363DB68 CMP W8, W0
	0x0363DB6C B.LT 0x363E4F8
	0x0363DB70 MOV W20, W0
	0x0363DB74 MOV X0, X19
	0x0363DB78 MOV W1, W31
	0x0363DB7C BL 0x363D16C
	0x0363DB80 MOV W21, W0
	0x0363DB84 ADD W20, W20, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W8, [X0+148]
	005 Move X19, X0
	006 Move W20, W1
	007 NotImplemented "Instruction CMP not yet implemented."
	008 Move X0, X19
	009 Call RegexRunner.EnsureStorage, X0
	010 Move X8, [X19+128]
	011 Compare X8, 0
	012 JumpIfEqual {38}
	013 Move X8, [X8+16]
	014 Compare X8, 0
	015 JumpIfEqual {38}
	016 Move W9, [X8+24]
	017 NotImplemented "Instruction CMP not yet implemented."
	018 Add X8, X8, W20
	019 Move W8, [X8+32]
	020 Move TEMP, 576
	021 Not TEMP
	022 Move W9, TEMP
	023 Move W10, W8
	024 ShiftRight W10, 9
	025 And W10, W10, 511
	026 Move W11, W8
	027 ShiftRight W11, 6
	028 And W11, W11, 63
	029 And W8, W8, W9
	030 Move [X19+153], W10
	031 Move [X19+152], W11
	032 Move [X19+144], W8
	033 Move [X19+148], W20
	034 Move X20, [X31+16]
	035 Move X19, [X31+24]
	036 Move X30, [X31+32]
	037 Return 
	038 Call 0x1C17F20
	039 Call 0x1C17F28

Method: System.Void Textto(System.Int32 newpos)

Disassembly:
	0x0363DBD0 CSEL X9, X11, X10, EQ
	0x0363DBD4 LDR W9, [X19, X9, LSL]

ISIL:
	001 Move [X0+40], W1
	002 Return 

Method: System.Void Trackto(System.Int32 newpos)

Disassembly:
	0x0363DBD8 LDR W8, [X19, X8, LSL]
	0x0363DBDC SUB W8, W9, W8
	0x0363DBE0 CMP W8, W0
	0x0363DBE4 B.LT 0x363E4F8
	0x0363DBE8 MOV W20, W0
	0x0363DBEC MOV X0, X19
	0x0363DBF0 MOV W1, W31
	0x0363DBF4 BL 0x363D16C
	0x0363DBF8 MOV W21, W0

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+48]
	003 Compare X8, 0
	004 JumpIfEqual {10}
	005 Move W8, [X8+24]
	006 Subtract W8, W8, W1
	007 Move [X0+56], W8
	008 Move X30, [X31+16]
	009 Return 
	010 Call 0x1C17F20

Method: System.Int32 Textstart()

Disassembly:
	0x0363DBFC ADD W20, W20, 0x1
	0x0363DC00 SUB W20, W20, 0x1

ISIL:
	001 Move W0, [X0+24]
	002 Return X0

Method: System.Int32 Textpos()

Disassembly:
	0x0363DC04 CMP W20, 0x0
	0x0363DC08 B.LE 0x363E618

ISIL:
	001 Move W0, [X0+40]
	002 Return X0

Method: System.Int32 Trackpos()

Disassembly:
	0x0363DC0C MOV X0, X19
	0x0363DC10 BL 0x363D210
	0x0363DC14 AND W8, W0, 0xFFFF
	0x0363DC18 CMP W8, W21, UXTH
	0x0363DC1C B.NE 0x363DC00
	0x0363DC20 B 0x363E4F8
	0x0363DC24 MOVZ W1, 0x1
	0x0363DC28 MOV X0, X19
	0x0363DC2C BL 0x363D16C

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+48]
	003 Compare X8, 0
	004 JumpIfEqual {10}
	005 Move W9, [X0+56]
	006 Move W8, [X8+24]
	007 Subtract W0, W8, W9
	008 Move X30, [X31+16]
	009 Return X0
	010 Call 0x1C17F20

Method: System.Void TrackPush()

Disassembly:
	0x0363DC30 LDRB W8, [X19 + 0x98]
	0x0363DC34 MOVZ W9, 0x10
	0x0363DC38 MOVZ W10, 0x28
	0x0363DC3C MOVZ W11, 0x14
	0x0363DC40 CMP W8, 0x0
	0x0363DC44 CSEL X8, X10, X9, EQ
	0x0363DC48 CSEL X9, X11, X10, EQ
	0x0363DC4C LDR W9, [X19, X9, LSL]
	0x0363DC50 LDR W8, [X19, X8, LSL]
	0x0363DC54 SUB W8, W9, W8
	0x0363DC58 CMP W8, W0
	0x0363DC5C B.LT 0x363E4F8
	0x0363DC60 LDR X8, [X19 + 0x80]
	0x0363DC64 CBZ X8, 0x363EAF0
	0x0363DC68 LDR X21, [X8 + 0x18]
	0x0363DC6C MOV W20, W0

ISIL:
	001 Move [X31-16], X30
	002 Move W9, [X0+56]
	003 Move X8, [X0+48]
	004 Subtract W9, W9, 1
	005 Move [X0+56], W9
	006 Compare X8, 0
	007 JumpIfEqual {15}
	008 Move W10, [X8+24]
	009 NotImplemented "Instruction CMP not yet implemented."
	010 Move W10, [X0+148]
	011 Add X8, X8, W9
	012 Move [X8+32], W10
	013 Move X30, [X31+16]
	014 Return 
	015 Call 0x1C17F20
	016 Call 0x1C17F28

Method: System.Void TrackPush(System.Int32 I1)

Disassembly:
	0x0363DC70 MOV X0, X19
	0x0363DC74 MOV W1, W31
	0x0363DC78 BL 0x363D16C
	0x0363DC7C CBZ X21, 0x363EAF0
	0x0363DC80 LDR W8, [X21 + 0x18]
	0x0363DC84 CMP W0, W8
	0x0363DC88 B.CS 0x363EAF4
	0x0363DC8C ADD X8, X21, W0, 0x3, SXTW
	0x0363DC90 LDR X21, [X8 + 0x20]
	0x0363DC94 ADD W22, W20, 0x1
	0x0363DC98 SUB W22, W22, 0x1
	0x0363DC9C CMP W22, 0x0
	0x0363DCA0 B.LE 0x363E618
	0x0363DCA4 MOV X0, X19
	0x0363DCA8 BL 0x363D210
	0x0363DCAC LDR X8, [X23]
	0x0363DCB0 MOV W20, W0
	0x0363DCB4 LDR W9, [X8 + 0xE0]
	0x0363DCB8 CBNZ W9, 0x363DCC4
	0x0363DCBC MOV X0, X8
	0x0363DCC0 BL 0x1C16DFC
	0x0363DCC4 MOV W0, W20
	0x0363DCC8 MOV X1, X21

ISIL:
	001 Move [X31-16], X30
	002 Move W9, [X0+56]
	003 Move X8, [X0+48]
	004 Subtract W9, W9, 1
	005 Move [X0+56], W9
	006 Compare X8, 0
	007 JumpIfEqual {22}
	008 Move W10, [X8+24]
	009 NotImplemented "Instruction CMP not yet implemented."
	010 Add X9, X8, W9
	011 Move [X9+32], W1
	012 Move W9, [X0+56]
	013 Subtract W9, W9, 1
	014 NotImplemented "Instruction CMP not yet implemented."
	015 Move [X0+56], W9
	016 Move W10, [X0+148]
	017 Add X8, X8, W9
	018 Move [X8+32], W10
	019 Move X30, [X31+16]
	020 Return 
	021 Call 0x1C17F28
	022 Call 0x1C17F20

Method: System.Void TrackPush(System.Int32 I1, System.Int32 I2)

Disassembly:
	0x0363DCCC MOV X2, X31
	0x0363DCD0 BL 0x3635788
	0x0363DCD4 TBNZ X0, 0x0, 0x363DC98
	0x0363DCD8 B 0x363E4F8
	0x0363DCDC MOVZ W1, 0x1
	0x0363DCE0 MOV X0, X19
	0x0363DCE4 BL 0x363D16C
	0x0363DCE8 LDRB W8, [X19 + 0x98]
	0x0363DCEC MOVZ W9, 0x10
	0x0363DCF0 MOVZ W10, 0x28
	0x0363DCF4 MOVZ W11, 0x14
	0x0363DCF8 CMP W8, 0x0
	0x0363DCFC CSEL X8, X10, X9, EQ
	0x0363DD00 CSEL X9, X11, X10, EQ
	0x0363DD04 LDR W9, [X19, X9, LSL]
	0x0363DD08 LDR W8, [X19, X8, LSL]
	0x0363DD0C MOV W1, W31
	0x0363DD10 SUB W8, W9, W8
	0x0363DD14 CMP W0, W8
	0x0363DD18 CSEL W21, W8, W0, GT
	0x0363DD1C MOV X0, X19
	0x0363DD20 BL 0x363D16C
	0x0363DD24 CMP W21, 0x1
	0x0363DD28 B.LT 0x363E508
	0x0363DD2C MOV W20, W0
	0x0363DD30 MOV W22, W21
	0x0363DD34 MOV X0, X19
	0x0363DD38 BL 0x363D210
	0x0363DD3C AND W8, W0, 0xFFFF
	0x0363DD40 CMP W8, W20, UXTH

ISIL:
	001 Move [X31-16], X30
	002 Move W9, [X0+56]
	003 Move X8, [X0+48]
	004 Subtract W10, W9, 1
	005 Move [X0+56], W10
	006 Compare X8, 0
	007 JumpIfEqual {28}
	008 Move W9, [X8+24]
	009 NotImplemented "Instruction CMP not yet implemented."
	010 Add X10, X8, W10
	011 Move [X10+32], W1
	012 Move W10, [X0+56]
	013 Subtract W10, W10, 1
	014 NotImplemented "Instruction CMP not yet implemented."
	015 Move [X0+56], W10
	016 Add X10, X8, W10
	017 Move [X10+32], W2
	018 Move W10, [X0+56]
	019 Subtract W10, W10, 1
	020 NotImplemented "Instruction CMP not yet implemented."
	021 Move [X0+56], W10
	022 Move W9, [X0+148]
	023 Add X8, X8, W10
	024 Move [X8+32], W9
	025 Move X30, [X31+16]
	026 Return 
	027 Call 0x1C17F28
	028 Call 0x1C17F20

Method: System.Void TrackPush(System.Int32 I1, System.Int32 I2, System.Int32 I3)

Disassembly:
	0x0363DD44 B.NE 0x363E510
	0x0363DD48 SUBS W22, W22, 0x1
	0x0363DD4C B.GT 0x363DD34
	0x0363DD50 B 0x363DDC8
	0x0363DD54 MOVZ W1, 0x1
	0x0363DD58 MOV X0, X19
	0x0363DD5C BL 0x363D16C
	0x0363DD60 LDRB W8, [X19 + 0x98]
	0x0363DD64 MOVZ W9, 0x10
	0x0363DD68 MOVZ W10, 0x28
	0x0363DD6C MOVZ W11, 0x14
	0x0363DD70 CMP W8, 0x0
	0x0363DD74 CSEL X8, X10, X9, EQ
	0x0363DD78 CSEL X9, X11, X10, EQ
	0x0363DD7C LDR W9, [X19, X9, LSL]
	0x0363DD80 LDR W8, [X19, X8, LSL]
	0x0363DD84 MOV W1, W31
	0x0363DD88 SUB W8, W9, W8
	0x0363DD8C CMP W0, W8
	0x0363DD90 CSEL W21, W8, W0, GT
	0x0363DD94 MOV X0, X19
	0x0363DD98 BL 0x363D16C
	0x0363DD9C CMP W21, 0x1
	0x0363DDA0 B.LT 0x363E508
	0x0363DDA4 MOV W20, W0
	0x0363DDA8 MOV W22, W21
	0x0363DDAC MOV X0, X19
	0x0363DDB0 BL 0x363D210
	0x0363DDB4 AND W8, W0, 0xFFFF
	0x0363DDB8 CMP W8, W20, UXTH
	0x0363DDBC B.EQ 0x363E510
	0x0363DDC0 SUBS W22, W22, 0x1
	0x0363DDC4 B.GT 0x363DDAC
	0x0363DDC8 MOV W22, W31
	0x0363DDCC B 0x363E530
	0x0363DDD0 MOVZ W1, 0x1
	0x0363DDD4 MOV X0, X19

ISIL:
	001 Move [X31-16], X30
	002 Move W9, [X0+56]
	003 Move X8, [X0+48]
	004 Subtract W10, W9, 1
	005 Move [X0+56], W10
	006 Compare X8, 0
	007 JumpIfEqual {34}
	008 Move W9, [X8+24]
	009 NotImplemented "Instruction CMP not yet implemented."
	010 Add X10, X8, W10
	011 Move [X10+32], W1
	012 Move W10, [X0+56]
	013 Subtract W10, W10, 1
	014 NotImplemented "Instruction CMP not yet implemented."
	015 Move [X0+56], W10
	016 Add X10, X8, W10
	017 Move [X10+32], W2
	018 Move W10, [X0+56]
	019 Subtract W10, W10, 1
	020 NotImplemented "Instruction CMP not yet implemented."
	021 Move [X0+56], W10
	022 Add X10, X8, W10
	023 Move [X10+32], W3
	024 Move W10, [X0+56]
	025 Subtract W10, W10, 1
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move [X0+56], W10
	028 Move W9, [X0+148]
	029 Add X8, X8, W10
	030 Move [X8+32], W9
	031 Move X30, [X31+16]
	032 Return 
	033 Call 0x1C17F28
	034 Call 0x1C17F20

Method: System.Void TrackPush2(System.Int32 I1)

Disassembly:
	0x0363DDD8 BL 0x363D16C
	0x0363DDDC LDRB W8, [X19 + 0x98]
	0x0363DDE0 MOVZ W9, 0x10
	0x0363DDE4 MOVZ W10, 0x28
	0x0363DDE8 MOVZ W11, 0x14
	0x0363DDEC CMP W8, 0x0
	0x0363DDF0 CSEL X8, X10, X9, EQ
	0x0363DDF4 CSEL X9, X11, X10, EQ
	0x0363DDF8 LDR W9, [X19, X9, LSL]
	0x0363DDFC LDR W10, [X19, X8, LSL]
	0x0363DE00 LDR X8, [X19 + 0x80]
	0x0363DE04 SUB W9, W9, W10
	0x0363DE08 CMP W0, W9
	0x0363DE0C CSEL W22, W9, W0, GT
	0x0363DE10 CBZ X8, 0x363EAF0
	0x0363DE14 LDR X20, [X8 + 0x18]
	0x0363DE18 MOV X0, X19
	0x0363DE1C MOV W1, W31
	0x0363DE20 BL 0x363D16C
	0x0363DE24 CBZ X20, 0x363EAF0
	0x0363DE28 LDR W8, [X20 + 0x18]
	0x0363DE2C CMP W0, W8
	0x0363DE30 B.CS 0x363EAF4
	0x0363DE34 CMP W22, 0x1

ISIL:
	001 Move [X31-16], X30
	002 Move W9, [X0+56]
	003 Move X8, [X0+48]
	004 Subtract W9, W9, 1
	005 Move [X0+56], W9
	006 Compare X8, 0
	007 JumpIfEqual {23}
	008 Move W10, [X8+24]
	009 NotImplemented "Instruction CMP not yet implemented."
	010 Add X9, X8, W9
	011 Move [X9+32], W1
	012 Move W9, [X0+56]
	013 Subtract W9, W9, 1
	014 NotImplemented "Instruction CMP not yet implemented."
	015 Move [X0+56], W9
	016 Move W10, [X0+148]
	017 Add X8, X8, W9
	018 Subtract W10, W31, W10
	019 Move [X8+32], W10
	020 Move X30, [X31+16]
	021 Return 
	022 Call 0x1C17F28
	023 Call 0x1C17F20

Method: System.Void TrackPush2(System.Int32 I1, System.Int32 I2)

Disassembly:
	0x0363DE38 B.LT 0x363E5BC
	0x0363DE3C ADD X8, X20, W0, 0x3, SXTW
	0x0363DE40 LDR X20, [X8 + 0x20]
	0x0363DE44 MOV W29, W22
	0x0363DE48 MOV X0, X19
	0x0363DE4C BL 0x363D210
	0x0363DE50 LDR X8, [X23]
	0x0363DE54 MOV W21, W0
	0x0363DE58 LDR W9, [X8 + 0xE0]
	0x0363DE5C CBNZ W9, 0x363DE68
	0x0363DE60 MOV X0, X8
	0x0363DE64 BL 0x1C16DFC
	0x0363DE68 MOV W0, W21
	0x0363DE6C MOV X1, X20
	0x0363DE70 MOV X2, X31
	0x0363DE74 BL 0x3635788
	0x0363DE78 TBZ X0, 0x0, 0x363E5C4
	0x0363DE7C SUBS W29, W29, 0x1
	0x0363DE80 B.GT 0x363DE48
	0x0363DE84 MOV W29, W31
	0x0363DE88 B 0x363E5E4
	0x0363DE8C LDRB W8, [X19 + 0x98]
	0x0363DE90 MOVZ W9, 0x10
	0x0363DE94 MOVZ W10, 0x28
	0x0363DE98 MOVZ W11, 0x14
	0x0363DE9C CMP W8, 0x0
	0x0363DEA0 CSEL X8, X10, X9, EQ
	0x0363DEA4 CSEL X9, X11, X10, EQ
	0x0363DEA8 LDR W9, [X19, X9, LSL]
	0x0363DEAC LDR W8, [X19, X8, LSL]
	0x0363DEB0 SUB W8, W9, W8

ISIL:
	001 Move [X31-16], X30
	002 Move W9, [X0+56]
	003 Move X8, [X0+48]
	004 Subtract W10, W9, 1
	005 Move [X0+56], W10
	006 Compare X8, 0
	007 JumpIfEqual {29}
	008 Move W9, [X8+24]
	009 NotImplemented "Instruction CMP not yet implemented."
	010 Add X10, X8, W10
	011 Move [X10+32], W1
	012 Move W10, [X0+56]
	013 Subtract W10, W10, 1
	014 NotImplemented "Instruction CMP not yet implemented."
	015 Move [X0+56], W10
	016 Add X10, X8, W10
	017 Move [X10+32], W2
	018 Move W10, [X0+56]
	019 Subtract W10, W10, 1
	020 NotImplemented "Instruction CMP not yet implemented."
	021 Move [X0+56], W10
	022 Move W9, [X0+148]
	023 Add X8, X8, W10
	024 Subtract W9, W31, W9
	025 Move [X8+32], W9
	026 Move X30, [X31+16]
	027 Return 
	028 Call 0x1C17F28
	029 Call 0x1C17F20

Method: System.Void Backtrack()

Disassembly:
	0x0363DEB4 CMP W8, 0x1
	0x0363DEB8 B.LT 0x363E4F8
	0x0363DEBC MOV X0, X19
	0x0363DEC0 BL 0x363D210
	0x0363DEC4 AND W20, W0, 0xFFFF
	0x0363DEC8 MOV X0, X19
	0x0363DECC MOV W1, W31
	0x0363DED0 BL 0x363D16C
	0x0363DED4 CMP W20, W0, UXTH
	0x0363DED8 MOVZ W20, 0x1
	0x0363DEDC B.EQ 0x363DA04
	0x0363DEE0 B 0x363E4F8
	0x0363DEE4 LDRB W8, [X19 + 0x98]
	0x0363DEE8 MOVZ W9, 0x10
	0x0363DEEC MOVZ W10, 0x28
	0x0363DEF0 MOVZ W11, 0x14
	0x0363DEF4 CMP W8, 0x0
	0x0363DEF8 CSEL X8, X10, X9, EQ
	0x0363DEFC CSEL X9, X11, X10, EQ
	0x0363DF00 LDR W9, [X19, X9, LSL]
	0x0363DF04 LDR W8, [X19, X8, LSL]
	0x0363DF08 SUB W8, W9, W8
	0x0363DF0C CMP W8, 0x1
	0x0363DF10 B.LT 0x363E4F8
	0x0363DF14 MOV X0, X19
	0x0363DF18 BL 0x363D210
	0x0363DF1C AND W20, W0, 0xFFFF
	0x0363DF20 MOV X0, X19
	0x0363DF24 MOV W1, W31
	0x0363DF28 BL 0x363D16C
	0x0363DF2C CMP W20, W0, UXTH
	0x0363DF30 MOVZ W20, 0x1
	0x0363DF34 B.NE 0x363DA04
	0x0363DF38 B 0x363E4F8
	0x0363DF3C LDRB W8, [X19 + 0x98]
	0x0363DF40 MOVZ W9, 0x10
	0x0363DF44 MOVZ W10, 0x28
	0x0363DF48 MOVZ W11, 0x14
	0x0363DF4C CMP W8, 0x0
	0x0363DF50 CSEL X8, X10, X9, EQ
	0x0363DF54 CSEL X9, X11, X10, EQ
	0x0363DF58 LDR W9, [X19, X9, LSL]
	0x0363DF5C LDR W8, [X19, X8, LSL]
	0x0363DF60 SUB W8, W9, W8
	0x0363DF64 CMP W8, 0x1
	0x0363DF68 B.LT 0x363E4F8
	0x0363DF6C MOV X0, X19
	0x0363DF70 BL 0x363D210
	0x0363DF74 LDR X8, [X19 + 0x80]
	0x0363DF78 CBZ X8, 0x363EAF0
	0x0363DF7C LDR X21, [X8 + 0x18]
	0x0363DF80 MOV W20, W0
	0x0363DF84 MOV X0, X19
	0x0363DF88 MOV W1, W31
	0x0363DF8C BL 0x363D16C
	0x0363DF90 CBZ X21, 0x363EAF0
	0x0363DF94 LDR W8, [X21 + 0x18]
	0x0363DF98 CMP W0, W8
	0x0363DF9C B.CS 0x363EAF4
	0x0363DFA0 LDR X8, [X23]
	0x0363DFA4 ADD X9, X21, W0, 0x3, SXTW

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 NotImplemented "Instruction LDRSW not yet implemented."
	005 Move X9, [X0+48]
	006 Add W10, W8, 1
	007 Move [X0+56], W10
	008 Compare X9, 0
	009 JumpIfEqual {77}
	010 Move W10, [X9+24]
	011 NotImplemented "Instruction CMP not yet implemented."
	012 Add X8, X9, X8
	013 Move W20, [X8+32]
	014 Move X19, X0
	015 Move TEMP, X20
	016 And TEMP, TEMP, -2147483648
	017 Compare TEMP, -2147483648
	018 JumpIfEqual {42}
	019 Move X8, [X19+128]
	020 Compare X8, 0
	021 JumpIfEqual {77}
	022 Move X8, [X8+16]
	023 Compare X8, 0
	024 JumpIfEqual {77}
	025 Move W9, [X8+24]
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Add X8, X8, X20
	028 Move W8, [X8+32]
	029 Move TEMP, 704
	030 Not TEMP
	031 Move W9, TEMP
	032 Move W10, W8
	033 ShiftRight W10, 9
	034 And W10, W10, 511
	035 Move W11, W8
	036 ShiftRight W11, 6
	037 And W11, W11, 63
	038 And W8, W8, W9
	039 Move W9, 128
	040 Move [X19+153], W10
	041 Move [X19+152], W11
	042 Move X8, [X19+128]
	043 Compare X8, 0
	044 JumpIfEqual {77}
	045 Move X8, [X8+16]
	046 Compare X8, 0
	047 JumpIfEqual {77}
	048 Move W9, [X8+24]
	049 Subtract W20, W31, W20
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Add X8, X8, W20
	052 Move W8, [X8+32]
	053 Move TEMP, 832
	054 Not TEMP
	055 Move W9, TEMP
	056 Move W10, W8
	057 ShiftRight W10, 9
	058 And W10, W10, 511
	059 Move W11, W8
	060 ShiftRight W11, 6
	061 And W11, W11, 63
	062 And W8, W8, W9
	063 Move [X19+153], W10
	064 Move [X19+152], W11
	065 Move W9, 256
	066 Move W10, [X19+148]
	067 Or W8, W8, W9
	068 Move [X19+144], W8
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Move X0, X19
	071 Call RegexRunner.EnsureStorage, X0
	072 Move [X19+148], W20
	073 Move X20, [X31+16]
	074 Move X19, [X31+24]
	075 Move X30, [X31+32]
	076 Return 
	077 Call 0x1C17F20
	078 Call 0x1C17F28

Method: System.Void SetOperator(System.Int32 op)

Disassembly:
	0x0363DAF0 MOV X0, X19
	0x0363DAF4 ADD W8, W8, 0x2
	0x0363DAF8 STR W8, [X19 + 0x38]
	0x0363DAFC BL 0x363CFC8
	0x0363DB00 MOV W20, W0
	0x0363DB04 MOVZ W1, 0x1
	0x0363DB08 MOV X0, X19
	0x0363DB0C BL 0x363D000

ISIL:
	001 Move W8, W1
	002 ShiftRight W8, 9
	003 And W8, W8, 511
	004 Move TEMP, 576
	005 Not TEMP
	006 Move W10, TEMP
	007 Move W9, W1
	008 ShiftRight W9, 6
	009 And W9, W9, 63
	010 Move [X0+153], W8
	011 And W8, W1, W10
	012 Move [X0+152], W9
	013 Move [X0+144], W8
	014 Return 

Method: System.Void TrackPop()

Disassembly:
	0x0363DFA8 LDR X21, [X9 + 0x20]
	0x0363DFAC LDR W10, [X8 + 0xE0]
	0x0363DFB0 CBNZ W10, 0x363DFBC
	0x0363DFB4 MOV X0, X8

ISIL:
	001 Move W8, [X0+56]
	002 Add W8, W8, 1
	003 Move [X0+56], W8
	004 Return 

Method: System.Void TrackPop(System.Int32 framesize)

Disassembly:
	0x0363DFB8 BL 0x1C16DFC
	0x0363DFBC MOV W0, W20
	0x0363DFC0 MOV X1, X21
	0x0363DFC4 MOV X2, X31

ISIL:
	001 Move W8, [X0+56]
	002 Add W8, W8, W1
	003 Move [X0+56], W8
	004 Return 

Method: System.Int32 TrackPeek()

Disassembly:
	0x0363DFC8 BL 0x3635788
	0x0363DFCC B 0x363E4B8
	0x0363DFD0 LDR X8, [X19 + 0x80]
	0x0363DFD4 CBZ X8, 0x363EAF0
	0x0363DFD8 LDR X20, [X8 + 0x18]
	0x0363DFDC MOV X0, X19
	0x0363DFE0 MOV W1, W31
	0x0363DFE4 BL 0x363D16C
	0x0363DFE8 CBZ X20, 0x363EAF0
	0x0363DFEC LDR W8, [X20 + 0x18]
	0x0363DFF0 CMP W0, W8
	0x0363DFF4 B.CS 0x363EAF4
	0x0363DFF8 ADD X8, X20, W0, 0x3, SXTW
	0x0363DFFC LDR X1, [X8 + 0x20]

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+48]
	003 Compare X8, 0
	004 JumpIfEqual {13}
	005 Move W9, [X0+56]
	006 Move W10, [X8+24]
	007 Subtract W9, W9, 1
	008 NotImplemented "Instruction CMP not yet implemented."
	009 Add X8, X8, W9
	010 Move W0, [X8+32]
	011 Move X30, [X31+16]
	012 Return X0
	013 Call 0x1C17F20
	014 Call 0x1C17F28

Method: System.Int32 TrackPeek(System.Int32 i)

Disassembly:
	0x0363E000 MOV X0, X19
	0x0363E004 BL 0x363D2A0
	0x0363E008 B 0x363E4B8
	0x0363E00C MOV X0, X19
	0x0363E010 MOV W1, W31
	0x0363E014 BL 0x363D16C
	0x0363E018 LDR X8, [X19 + 0x60]
	0x0363E01C CBZ X8, 0x363EAF0
	0x0363E020 LDR X9, [X8]
	0x0363E024 MOV W20, W0
	0x0363E028 MOV X0, X8
	0x0363E02C MOV W1, W20
	0x0363E030 LDP X10, X2, [X9 + 0x1D8]
	0x0363E034 BLR X10
	0x0363E038 TBZ X0, 0x0, 0x363E594

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+48]
	003 Compare X8, 0
	004 JumpIfEqual {14}
	005 Move W9, [X0+56]
	006 Move W10, [X8+24]
	007 NotImplemented "Instruction ORN not yet implemented."
	008 Add W9, W9, W11
	009 NotImplemented "Instruction CMP not yet implemented."
	010 Add X8, X8, W9
	011 Move W0, [X8+32]
	012 Move X30, [X31+16]
	013 Return X0
	014 Call 0x1C17F20
	015 Call 0x1C17F28

Method: System.Void StackPush(System.Int32 I1)

Disassembly:
	0x0363E03C LDR X0, [X19 + 0x60]
	0x0363E040 CBZ X0, 0x363EAF0
	0x0363E044 LDR X8, [X0]
	0x0363E048 MOV W1, W20
	0x0363E04C LDP X9, X2, [X8 + 0x1E8]
	0x0363E050 BLR X9
	0x0363E054 LDR X8, [X19 + 0x60]
	0x0363E058 CBZ X8, 0x363EAF0
	0x0363E05C LDR X9, [X8]
	0x0363E060 MOV W21, W0
	0x0363E064 MOV X0, X8
	0x0363E068 MOV W1, W20
	0x0363E06C LDP X10, X2, [X9 + 0x1F8]
	0x0363E070 BLR X10
	0x0363E074 MOV W2, W0

ISIL:
	001 Move [X31-16], X30
	002 Move W9, [X0+72]
	003 Move X8, [X0+64]
	004 Subtract W9, W9, 1
	005 Move [X0+72], W9
	006 Compare X8, 0
	007 JumpIfEqual {14}
	008 Move W10, [X8+24]
	009 NotImplemented "Instruction CMP not yet implemented."
	010 Add X8, X8, W9
	011 Move [X8+32], W1
	012 Move X30, [X31+16]
	013 Return 
	014 Call 0x1C17F20
	015 Call 0x1C17F28

Method: System.Void StackPush(System.Int32 I1, System.Int32 I2)

Disassembly:
	0x0363E078 MOV X0, X19
	0x0363E07C MOV W1, W21
	0x0363E080 BL 0x363D40C
	0x0363E084 B 0x363E4B8
	0x0363E088 LDR W8, [X19 + 0x28]
	0x0363E08C LDR W9, [X19 + 0x10]
	0x0363E090 MOV W20, W31
	0x0363E094 SUB W9, W8, W9
	0x0363E098 CMP W9, 0x1
	0x0363E09C B.LT 0x363DA04
	0x0363E0A0 LDR X0, [X19 + 0x20]
	0x0363E0A4 CBZ X0, 0x363EAF0
	0x0363E0A8 SUB W1, W8, 0x1
	0x0363E0AC B 0x363E134
	0x0363E0B0 LDR W8, [X19 + 0x14]
	0x0363E0B4 LDR W1, [X19 + 0x28]
	0x0363E0B8 MOV W20, W31
	0x0363E0BC SUB W8, W8, W1
	0x0363E0C0 CMP W8, 0x1
	0x0363E0C4 B.GE 0x363E12C
	0x0363E0C8 B 0x363DA04
	0x0363E0CC LDR W1, [X19 + 0x28]

ISIL:
	001 Move [X31-16], X30
	002 Move W9, [X0+72]
	003 Move X8, [X0+64]
	004 Subtract W9, W9, 1
	005 Move [X0+72], W9
	006 Compare X8, 0
	007 JumpIfEqual {21}
	008 Move W10, [X8+24]
	009 NotImplemented "Instruction CMP not yet implemented."
	010 Add X9, X8, W9
	011 Move [X9+32], W1
	012 Move W9, [X0+72]
	013 Subtract W9, W9, 1
	014 NotImplemented "Instruction CMP not yet implemented."
	015 Move [X0+72], W9
	016 Add X8, X8, W9
	017 Move [X8+32], W2
	018 Move X30, [X31+16]
	019 Return 
	020 Call 0x1C17F28
	021 Call 0x1C17F20

Method: System.Void StackPop()

Disassembly:
	0x0363E0D0 LDP W2, W3, [X19 + 0x10]
	0x0363E0D4 MOV X0, X19
	0x0363E0D8 BL 0x363ED20
	0x0363E0DC B 0x363E4D4

ISIL:
	001 Move W8, [X0+72]
	002 Add W8, W8, 1
	003 Move [X0+72], W8
	004 Return 

Method: System.Void StackPop(System.Int32 framesize)

Disassembly:
	0x0363E0E0 LDR W1, [X19 + 0x28]
	0x0363E0E4 LDP W2, W3, [X19 + 0x10]
	0x0363E0E8 MOV X0, X19
	0x0363E0EC BL 0x363ED20

ISIL:
	001 Move W8, [X0+72]
	002 Add W8, W8, W1
	003 Move [X0+72], W8
	004 Return 

Method: System.Int32 StackPeek()

Disassembly:
	0x0363E0F0 B 0x363E4F0
	0x0363E0F4 LDR W8, [X19 + 0x28]
	0x0363E0F8 LDR W9, [X19 + 0x10]
	0x0363E0FC B 0x363E158
	0x0363E100 LDR W8, [X19 + 0x28]
	0x0363E104 LDR W9, [X19 + 0x18]
	0x0363E108 CMP W8, W9
	0x0363E10C B 0x363E144
	0x0363E110 LDR W8, [X19 + 0x14]
	0x0363E114 LDR W1, [X19 + 0x28]
	0x0363E118 SUB W8, W8, W1
	0x0363E11C CMP W8, 0x1
	0x0363E120 B.GT 0x363E4F8
	0x0363E124 MOV W20, W31

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+64]
	003 Compare X8, 0
	004 JumpIfEqual {13}
	005 Move W9, [X0+72]
	006 Move W10, [X8+24]
	007 Subtract W9, W9, 1
	008 NotImplemented "Instruction CMP not yet implemented."
	009 Add X8, X8, W9
	010 Move W0, [X8+32]
	011 Move X30, [X31+16]
	012 Return X0
	013 Call 0x1C17F20
	014 Call 0x1C17F28

Method: System.Int32 StackPeek(System.Int32 i)

Disassembly:
	0x0363E128 B.NE 0x363DA04
	0x0363E12C LDR X0, [X19 + 0x20]
	0x0363E130 CBZ X0, 0x363EAF0
	0x0363E134 MOV X2, X31
	0x0363E138 BL 0x3222A1C
	0x0363E13C AND W8, W0, 0xFFFF
	0x0363E140 CMP W8, 0xA
	0x0363E144 MOV W20, W31
	0x0363E148 B.EQ 0x363DA04
	0x0363E14C B 0x363E4F8
	0x0363E150 LDR W8, [X19 + 0x14]
	0x0363E154 LDR W9, [X19 + 0x28]
	0x0363E158 SUB W8, W8, W9
	0x0363E15C CMP W8, 0x0
	0x0363E160 MOV W20, W31

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+64]
	003 Compare X8, 0
	004 JumpIfEqual {14}
	005 Move W9, [X0+72]
	006 Move W10, [X8+24]
	007 NotImplemented "Instruction ORN not yet implemented."
	008 Add W9, W9, W11
	009 NotImplemented "Instruction CMP not yet implemented."
	010 Add X8, X8, W9
	011 Move W0, [X8+32]
	012 Move X30, [X31+16]
	013 Return X0
	014 Call 0x1C17F20
	015 Call 0x1C17F28

Method: System.Int32 Operator()

Disassembly:
	0x0363E164 B.GT 0x363E4F8
	0x0363E168 B 0x363DA04

ISIL:
	001 Move W0, [X0+144]
	002 Return X0

Method: System.Int32 Operand(System.Int32 i)

Disassembly:
	0x0363E16C LDR W1, [X19 + 0x28]
	0x0363E170 MOV X0, X19
	0x0363E174 BL 0x363CC70
	0x0363E178 MOVZ W20, 0x1
	0x0363E17C B 0x363DA04
	0x0363E180 LDR W8, [X19 + 0x48]
	0x0363E184 LDR W21, [X19 + 0x28]
	0x0363E188 MOV X0, X19
	0x0363E18C ADD W8, W8, 0x1
	0x0363E190 STR W8, [X19 + 0x48]
	0x0363E194 BL 0x363D0F0
	0x0363E198 MOV W20, W0
	0x0363E19C MOV X0, X19
	0x0363E1A0 BL 0x363D0F0
	0x0363E1A4 CMP W21, W20
	0x0363E1A8 MOV W1, W0
	0x0363E1AC B.NE 0x363E578

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+128]
	003 Compare X8, 0
	004 JumpIfEqual {17}
	005 Move X8, [X8+16]
	006 Compare X8, 0
	007 JumpIfEqual {17}
	008 Move W9, [X0+148]
	009 Move W10, [X8+24]
	010 Add W9, W1, W9
	011 Add W9, W9, 1
	012 NotImplemented "Instruction CMP not yet implemented."
	013 Add X8, X8, W9
	014 Move W0, [X8+32]
	015 Move X30, [X31+16]
	016 Return X0
	017 Call 0x1C17F20
	018 Call 0x1C17F28

Method: System.Int32 Leftchars()

Disassembly:
	0x0363E1B0 MOV X0, X19
	0x0363E1B4 BL 0x363CDD8
	0x0363E1B8 MOVZ W20, 0x1
	0x0363E1BC B 0x363DA04

ISIL:
	001 Move W8, [X0+40]
	002 Move W9, [X0+16]
	003 Subtract W0, W8, W9
	004 Return X0

Method: System.Int32 Rightchars()

Disassembly:
	0x0363E1C0 MOV X0, X19
	0x0363E1C4 MOV W1, W31
	0x0363E1C8 BL 0x363D16C
	0x0363E1CC MOV W2, W0

ISIL:
	001 Move W8, [X0+20]
	002 Move W9, [X0+40]
	003 Subtract W0, W8, W9
	004 Return X0

Method: System.Int32 Bump()

Disassembly:
	0x0363E1D0 MOVN W1, 0x0
	0x0363E1D4 MOV X0, X19
	0x0363E1D8 B 0x363E1F8
	0x0363E1DC LDR W20, [X19 + 0x28]
	0x0363E1E0 MOV X0, X19

ISIL:
	001 Move W8, [X0+152]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 Move W8, 1
	004 NotImplemented "Instruction CSNEG not yet implemented."
	005 Return X0

Method: System.Int32 Forwardchars()

Disassembly:
	0x0363E1E4 MOV W1, W31
	0x0363E1E8 BL 0x363D16C
	0x0363E1EC MOV W2, W0
	0x0363E1F0 MOV X0, X19
	0x0363E1F4 MOV W1, W20
	0x0363E1F8 BL 0x363D078
	0x0363E1FC MOV X0, X19
	0x0363E200 BL 0x363CC30
	0x0363E204 MOVZ W20, 0x1
	0x0363E208 B 0x363DA04
	0x0363E20C LDR W8, [X19 + 0x48]

ISIL:
	001 Move W8, [X0+152]
	002 Move W9, 16
	003 Move W10, 40
	004 Move W11, 20
	005 NotImplemented "Instruction CMP not yet implemented."
	006 NotImplemented "Instruction CSEL not yet implemented."
	007 NotImplemented "Instruction CSEL not yet implemented."
	008 Move W9, [X0]
	009 Move W8, [X0]
	010 Subtract W0, W9, W8
	011 Return X0

Method: System.Char Forwardcharnext()

Disassembly:
	0x0363E210 MOV X0, X19
	0x0363E214 ADD W8, W8, 0x2
	0x0363E218 STR W8, [X19 + 0x48]
	0x0363E21C BL 0x363D0F0
	0x0363E220 MOV W20, W0
	0x0363E224 MOVZ W1, 0x1
	0x0363E228 MOV X0, X19
	0x0363E22C BL 0x363D128
	0x0363E230 LDR W22, [X19 + 0x28]
	0x0363E234 MOV W21, W0
	0x0363E238 MOVZ W1, 0x1
	0x0363E23C MOV X0, X19
	0x0363E240 BL 0x363D16C
	0x0363E244 CMP W21, W0
	0x0363E248 B.GE 0x363E258
	0x0363E24C TBNZ X21, 0x1F, 0x363E654
	0x0363E250 CMP W22, W20
	0x0363E254 B.NE 0x363E654
	0x0363E258 MOV X0, X19
	0x0363E25C MOV W1, W20
	0x0363E260 MOV W2, W21
	0x0363E264 BL 0x363CE38
	0x0363E268 B 0x363E618
	0x0363E26C LDR W8, [X19 + 0x48]
	0x0363E270 MOV X0, X19
	0x0363E274 ADD W8, W8, 0x2
	0x0363E278 STR W8, [X19 + 0x48]
	0x0363E27C BL 0x363D0F0
	0x0363E280 MOV W20, W0
	0x0363E284 MOVZ W1, 0x1
	0x0363E288 MOV X0, X19
	0x0363E28C BL 0x363D128
	0x0363E290 MOV W21, W0
	0x0363E294 TBNZ X0, 0x1F, 0x363E5AC
	0x0363E298 LDR W3, [X19 + 0x28]
	0x0363E29C MOV X0, X19

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X0
	005 Move W8, [X0+152]
	006 Move X0, [X0+32]
	007 Move W1, [X19+40]
	008 Compare W8, 0
	009 JumpIfEqual {14}
	010 Subtract W1, W1, 1
	011 Move [X19+40], W1
	012 Compare X0, 0
	013 JumpIfNotEqual {18}
	014 Add W8, W1, 1
	015 Move [X19+40], W8
	016 Compare X0, 0
	017 JumpIfEqual {46}
	018 Move X2, X31
	019 Call String.get_Chars, X0, X1
	020 Move W8, [X19+153]
	021 Move W20, W0
	022 Compare W8, 0
	023 JumpIfEqual {41}
	024 Move X0, [X19+136]
	025 Compare X0, 0
	026 JumpIfEqual {46}
	027 Move X8, [X0]
	028 Move X9, [X8+472]
	029 Move X1, [X8+480]
	030 NotImplemented "Instruction BLR not yet implemented."
	031 Compare X0, 0
	032 JumpIfEqual {46}
	033 Move X8, [X0]
	034 Move W1, W20
	035 Move X20, [X31+16]
	036 Move X19, [X31+24]
	037 Move X3, [X8+424]
	038 Move X2, [X8+432]
	039 Move X30, [X31+32]
	040 CallNoReturn X3
	041 Move W0, W20
	042 Move X20, [X31+16]
	043 Move X19, [X31+24]
	044 Move X30, [X31+32]
	045 Return X0
	046 Call 0x1C17F20

Method: System.Boolean Stringmatch(System.String str)

Disassembly:
	0x0363E2A0 MOV W1, W20
	0x0363E2A4 MOV W2, W21
	0x0363E2A8 BL 0x363CD44
	0x0363E2AC B 0x363E618
	0x0363E2B0 MOVN W1, 0x0
	0x0363E2B4 B 0x363E2BC
	0x0363E2B8 LDR W1, [X19 + 0x28]
	0x0363E2BC MOV X0, X19
	0x0363E2C0 BL 0x363D03C
	0x0363E2C4 B 0x363E3D4
	0x0363E2C8 MOVZ W1, 0x1
	0x0363E2CC MOV X0, X19
	0x0363E2D0 BL 0x363D16C
	0x0363E2D4 ADDS W31, W0, 0x1
	0x0363E2D8 B.EQ 0x363E308
	0x0363E2DC MOVZ W1, 0x1
	0x0363E2E0 MOV X0, X19
	0x0363E2E4 BL 0x363D16C
	0x0363E2E8 LDR X8, [X19 + 0x60]
	0x0363E2EC CBZ X8, 0x363EAF0
	0x0363E2F0 LDR X9, [X8]
	0x0363E2F4 MOV W1, W0
	0x0363E2F8 MOV X0, X8
	0x0363E2FC LDP X10, X2, [X9 + 0x1D8]
	0x0363E300 BLR X10
	0x0363E304 TBZ X0, 0x0, 0x363E4F8
	0x0363E308 LDR W8, [X19 + 0x48]
	0x0363E30C MOVZ W1, 0x1
	0x0363E310 MOV X0, X19
	0x0363E314 ADD W8, W8, 0x1
	0x0363E318 STR W8, [X19 + 0x48]
	0x0363E31C BL 0x363D16C
	0x0363E320 MOV W20, W0
	0x0363E324 MOV X0, X19
	0x0363E328 MOV W1, W31
	0x0363E32C BL 0x363D16C
	0x0363E330 ADDS W31, W20, 0x1
	0x0363E334 MOV W20, W0
	0x0363E338 B.EQ 0x363E620
	0x0363E33C MOVZ W1, 0x1
	0x0363E340 MOV X0, X19
	0x0363E344 BL 0x363D16C
	0x0363E348 MOV W21, W0
	0x0363E34C MOV X0, X19
	0x0363E350 BL 0x363D0F0
	0x0363E354 LDR W4, [X19 + 0x28]
	0x0363E358 MOV W3, W0
	0x0363E35C MOV X0, X19
	0x0363E360 MOV W1, W20
	0x0363E364 MOV W2, W21
	0x0363E368 BL 0x363EB58
	0x0363E36C B 0x363E63C
	0x0363E370 LDR W8, [X19 + 0x48]
	0x0363E374 MOV X0, X19
	0x0363E378 ADD W8, W8, 0x1
	0x0363E37C STR W8, [X19 + 0x48]
	0x0363E380 BL 0x363D0F0
	0x0363E384 MOV W1, W0
	0x0363E388 MOV X0, X19
	0x0363E38C BL 0x363CC70
	0x0363E390 MOV X0, X19
	0x0363E394 BL 0x363D0F0
	0x0363E398 MOV W20, W31
	0x0363E39C STR W0, [X19 + 0x28]
	0x0363E3A0 B 0x363DA04
	0x0363E3A4 LDR X8, [X19 + 0x30]
	0x0363E3A8 CBZ X8, 0x363EAF0
	0x0363E3AC LDR X9, [X19 + 0x50]
	0x0363E3B0 CBZ X9, 0x363EAF0
	0x0363E3B4 LDR W8, [X8 + 0x18]
	0x0363E3B8 LDR W10, [X19 + 0x38]
	0x0363E3BC LDR W11, [X19 + 0x58]
	0x0363E3C0 LDR W9, [X9 + 0x18]
	0x0363E3C4 MOV X0, X19
	0x0363E3C8 SUB W1, W8, W10
	0x0363E3CC SUB W2, W9, W11
	0x0363E3D0 BL 0x363D078
	0x0363E3D4 MOV X0, X19
	0x0363E3D8 BL 0x363CC30
	0x0363E3DC MOV W20, W31
	0x0363E3E0 B 0x363DA04
	0x0363E3E4 LDR W8, [X19 + 0x48]
	0x0363E3E8 MOV X0, X19
	0x0363E3EC ADD W8, W8, 0x2
	0x0363E3F0 STR W8, [X19 + 0x48]
	0x0363E3F4 BL 0x363D0F0
	0x0363E3F8 LDR X8, [X19 + 0x30]
	0x0363E3FC CBZ X8, 0x363EAF0
	0x0363E400 LDR W9, [X8 + 0x18]
	0x0363E404 LDR X8, [X19 + 0x50]
	0x0363E408 SUB W9, W9, W0

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move W8, [X0+152]
	009 Move W20, [X0+40]
	010 Move X19, X0
	011 Move X21, X1
	012 Compare W8, 0
	013 JumpIfEqual {20}
	014 Compare X21, 0
	015 JumpIfEqual {99}
	016 Move W9, [X19+16]
	017 Move W8, [X21+16]
	018 Subtract W9, W20, W9
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Compare X21, 0
	021 JumpIfEqual {99}
	022 Move W9, [X19+20]
	023 Move W8, [X21+16]
	024 Subtract W9, W9, W20
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Add W20, W8, W20
	027 Move W9, [X19+153]
	028 Compare W9, 0
	029 JumpIfEqual {65}
	030 Subtract W22, W8, 1
	031 Add W31, W22, 1
	032 Move X0, X21
	033 Move W1, W22
	034 Move X2, X31
	035 Call String.get_Chars, X0, X1
	036 Move X8, [X19+136]
	037 Compare X8, 0
	038 JumpIfEqual {99}
	039 Move X9, [X8]
	040 Move W23, W0
	041 Move X0, X8
	042 Move X10, [X9+472]
	043 Move X1, [X9+480]
	044 NotImplemented "Instruction BLR not yet implemented."
	045 Move X8, [X19+32]
	046 Compare X8, 0
	047 JumpIfEqual {99}
	048 Subtract W20, W20, 1
	049 Move X24, X0
	050 Move X0, X8
	051 Move W1, W20
	052 Move X2, X31
	053 Call String.get_Chars, X0, X1
	054 Compare X24, 0
	055 JumpIfEqual {99}
	056 Move X8, [X24]
	057 Move W1, W0
	058 Move X0, X24
	059 Move X9, [X8+424]
	060 Move X2, [X8+432]
	061 NotImplemented "Instruction BLR not yet implemented."
	062 And W8, W23, 0xFFFF
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Subtract W22, W22, 1
	065 Subtract W22, W8, 1
	066 Add W31, W22, 1
	067 Move X0, X21
	068 Move W1, W22
	069 Move X2, X31
	070 Call String.get_Chars, X0, X1
	071 Move X8, [X19+32]
	072 Compare X8, 0
	073 JumpIfEqual {99}
	074 Subtract W20, W20, 1
	075 Move W23, W0
	076 Move X0, X8
	077 Move W1, W20
	078 Move X2, X31
	079 Call String.get_Chars, X0, X1
	080 And W8, W23, 0xFFFF
	081 NotImplemented "Instruction CMP not yet implemented."
	082 Subtract W22, W22, 1
	083 Move W0, W31
	084 Move W8, [X19+152]
	085 Compare W8, 0
	086 JumpIfNotEqual {89}
	087 Move W8, [X21+16]
	088 Add W20, W8, W20
	089 Move W0, 1
	090 Move [X19+40], W20
	091 Move X20, [X31+48]
	092 Move X19, [X31+56]
	093 Move X22, [X31+32]
	094 Move X21, [X31+40]
	095 Move X24, [X31+16]
	096 Move X23, [X31+24]
	097 Move X30, [X31+64]
	098 Return X0
	099 Call 0x1C17F20

Method: System.Boolean Refmatch(System.Int32 index, System.Int32 len)

Disassembly:
	0x0363E40C STR W9, [X19 + 0x38]
	0x0363E410 CBZ X8, 0x363EAF0
	0x0363E414 LDR W9, [X19 + 0x58]
	0x0363E418 LDR W8, [X8 + 0x18]
	0x0363E41C MOVZ W1, 0x1
	0x0363E420 MOV X0, X19
	0x0363E424 SUB W20, W8, W9
	0x0363E428 BL 0x363D128
	0x0363E42C CMP W20, W0
	0x0363E430 B.EQ 0x363E4F8
	0x0363E434 MOV X0, X19
	0x0363E438 BL 0x363ECCC
	0x0363E43C LDR X8, [X19 + 0x50]
	0x0363E440 CBNZ X8, 0x363E414
	0x0363E444 B 0x363EAF0
	0x0363E448 LDR W8, [X19 + 0x48]
	0x0363E44C MOV X0, X19
	0x0363E450 ADD W8, W8, 0x2
	0x0363E454 STR W8, [X19 + 0x48]
	0x0363E458 BL 0x363D0F0
	0x0363E45C LDR X8, [X19 + 0x30]
	0x0363E460 CBZ X8, 0x363EAF0
	0x0363E464 LDR W8, [X8 + 0x18]
	0x0363E468 MOVZ W1, 0x1
	0x0363E46C SUB W8, W8, W0
	0x0363E470 MOV X0, X19
	0x0363E474 STR W8, [X19 + 0x38]
	0x0363E478 BL 0x363D128
	0x0363E47C MOV W1, W0
	0x0363E480 MOV X0, X19
	0x0363E484 BL 0x363CC70
	0x0363E488 MOV W20, W31
	0x0363E48C B 0x363DA04
	0x0363E490 MOV X0, X19
	0x0363E494 MOV W1, W31
	0x0363E498 BL 0x363D16C
	0x0363E49C LDR X8, [X19 + 0x60]
	0x0363E4A0 CBZ X8, 0x363EAF0
	0x0363E4A4 LDR X9, [X8]
	0x0363E4A8 MOV W1, W0
	0x0363E4AC MOV X0, X8
	0x0363E4B0 LDP X10, X2, [X9 + 0x1D8]
	0x0363E4B4 BLR X10
	0x0363E4B8 MOVZ W20, 0x1
	0x0363E4BC TBNZ X0, 0x0, 0x363DA04
	0x0363E4C0 B 0x363E4F8
	0x0363E4C4 LDR W1, [X19 + 0x28]
	0x0363E4C8 LDP W2, W3, [X19 + 0x10]
	0x0363E4CC MOV X0, X19
	0x0363E4D0 BL 0x363EE20
	0x0363E4D4 MOV W20, W31
	0x0363E4D8 TBNZ X0, 0x0, 0x363DA04
	0x0363E4DC B 0x363E4F8
	0x0363E4E0 LDR W1, [X19 + 0x28]
	0x0363E4E4 LDP W2, W3, [X19 + 0x10]
	0x0363E4E8 MOV X0, X19
	0x0363E4EC BL 0x363EE20
	0x0363E4F0 MOV W20, W31
	0x0363E4F4 TBZ X0, 0x0, 0x363DA04
	0x0363E4F8 MOV X0, X19
	0x0363E4FC BL 0x363CEB4
	0x0363E500 MOV W20, W29
	0x0363E504 B 0x363DA04
	0x0363E508 MOV W22, W21
	0x0363E50C B 0x363E530
	0x0363E510 CBZ X19, 0x363EAF0
	0x0363E514 LDRB W8, [X19 + 0x98]
	0x0363E518 LDR W9, [X19 + 0x28]
	0x0363E51C CMP W8, 0x0
	0x0363E520 MOVN W8, 0x0
	0x0363E524 CSNEG W8, W8, W8, EQ
	0x0363E528 ADD W8, W8, W9
	0x0363E52C STR W8, [X19 + 0x28]
	0x0363E530 CMP W21, W22
	0x0363E534 MOVZ W20, 0x2
	0x0363E538 B.LE 0x363DA04
	0x0363E53C LDRB W8, [X19 + 0x98]
	0x0363E540 LDR W9, [X19 + 0x28]
	0x0363E544 MOVN W10, 0x0
	0x0363E548 ORN W11, W31, W22, 0x0
	0x0363E54C CMP W8, 0x0
	0x0363E550 CSNEG W8, W10, W10, EQ
	0x0363E554 ADD W1, W21, W11
	0x0363E558 B 0x363E60C
	0x0363E55C MOV X0, X19
	0x0363E560 ADDS W31, W1, 0x1
	0x0363E564 B.NE 0x363E56C
	0x0363E568 MOV W1, W2
	0x0363E56C BL 0x363CCCC
	0x0363E570 MOVZ W20, 0x1
	0x0363E574 B 0x363DA04
	0x0363E578 LDR W2, [X19 + 0x28]
	0x0363E57C MOV X0, X19
	0x0363E580 BL 0x363CCCC
	0x0363E584 LDR W1, [X19 + 0x28]
	0x0363E588 MOV X0, X19
	0x0363E58C BL 0x363D03C
	0x0363E590 B 0x363E670
	0x0363E594 LDR X8, [X19 + 0x68]
	0x0363E598 CBZ X8, 0x363EAF0
	0x0363E59C LDRB W8, [X8 + 0x21]
	0x0363E5A0 MOVZ W20, 0x1
	0x0363E5A4 TBNZ X8, 0x0, 0x363DA04

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move W8, [X0+152]
	010 Move W20, W2
	011 Move X19, X0
	012 Compare W8, 0
	013 JumpIfEqual {18}
	014 Move W21, [X19+40]
	015 Move W8, [X19+16]
	016 Subtract W8, W21, W8
	017 NotImplemented "Instruction CMP not yet implemented."
	018 Move W9, [X19+20]
	019 Move W8, [X19+40]
	020 Subtract W9, W9, W8
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Add W21, W8, W20
	023 Move W8, [X19+153]
	024 Compare W8, 0
	025 JumpIfEqual {82}
	026 Subtract W24, W1, 1
	027 Move W25, W20
	028 Compare W25, 0
	029 JumpIfEqual {105}
	030 Move X0, [X19+136]
	031 Compare X0, 0
	032 JumpIfEqual {120}
	033 Move X8, [X0]
	034 Move X9, [X8+472]
	035 Move X1, [X8+480]
	036 NotImplemented "Instruction BLR not yet implemented."
	037 Move X8, [X19+32]
	038 Compare X8, 0
	039 JumpIfEqual {120}
	040 Move X22, X0
	041 Add W1, W24, W25
	042 Move X0, X8
	043 Move X2, X31
	044 Call String.get_Chars, X0, X1
	045 Compare X22, 0
	046 JumpIfEqual {120}
	047 Move X8, [X22]
	048 Move W1, W0
	049 Move X0, X22
	050 Move X9, [X8+424]
	051 Move X2, [X8+432]
	052 NotImplemented "Instruction BLR not yet implemented."
	053 Move X8, [X19+136]
	054 Compare X8, 0
	055 JumpIfEqual {120}
	056 Move X9, [X8]
	057 Move W22, W0
	058 Move X0, X8
	059 Move X10, [X9+472]
	060 Move X1, [X9+480]
	061 NotImplemented "Instruction BLR not yet implemented."
	062 Move X8, [X19+32]
	063 Compare X8, 0
	064 JumpIfEqual {120}
	065 Subtract W21, W21, 1
	066 Move X23, X0
	067 Move X0, X8
	068 Move W1, W21
	069 Move X2, X31
	070 Call String.get_Chars, X0, X1
	071 Compare X23, 0
	072 JumpIfEqual {120}
	073 Move X8, [X23]
	074 Move W1, W0
	075 Move X0, X23
	076 Subtract W25, W25, 1
	077 Move X9, [X8+424]
	078 Move X2, [X8+432]
	079 NotImplemented "Instruction BLR not yet implemented."
	080 And W8, W22, 0xFFFF
	081 NotImplemented "Instruction CMP not yet implemented."
	082 Subtract W23, W1, 1
	083 Move W24, W20
	084 Compare W24, 0
	085 JumpIfEqual {105}
	086 Move X0, [X19+32]
	087 Compare X0, 0
	088 JumpIfEqual {120}
	089 Add W1, W23, W24
	090 Move X2, X31
	091 Call String.get_Chars, X0, X1
	092 Move X8, [X19+32]
	093 Compare X8, 0
	094 JumpIfEqual {120}
	095 Subtract W21, W21, 1
	096 Move W22, W0
	097 Move X0, X8
	098 Move W1, W21
	099 Move X2, X31
	100 Subtract W24, W24, 1
	101 Call String.get_Chars, X0, X1
	102 And W8, W22, 0xFFFF
	103 NotImplemented "Instruction CMP not yet implemented."
	104 Move W0, W31
	105 Move W8, [X19+152]
	106 Move W0, 1
	107 NotImplemented "Instruction CMP not yet implemented."
	108 NotImplemented "Instruction CSEL not yet implemented."
	109 Add W8, W8, W21
	110 Move [X19+40], W8
	111 Move X20, [X31+48]
	112 Move X19, [X31+56]
	113 Move X22, [X31+32]
	114 Move X21, [X31+40]
	115 Move X24, [X31+16]
	116 Move X23, [X31+24]
	117 Move X30, [X31+64]
	118 Move X25, [X31+72]
	119 Return X0
	120 Call 0x1C17F20

Method: System.Void Backwardnext()

Disassembly:
	0x0363E5A8 B 0x363E4F8
	0x0363E5AC MOV X0, X19
	0x0363E5B0 MOV W1, W20
	0x0363E5B4 BL 0x363CDD8
	0x0363E5B8 B 0x363E660
	0x0363E5BC MOV W29, W22
	0x0363E5C0 B 0x363E5E4
	0x0363E5C4 CBZ X19, 0x363EAF0
	0x0363E5C8 LDRB W8, [X19 + 0x98]
	0x0363E5CC LDR W9, [X19 + 0x28]
	0x0363E5D0 CMP W8, 0x0
	0x0363E5D4 MOVN W8, 0x0

ISIL:
	001 Move [X31-16], X30
	002 Compare X0, 0
	003 JumpIfEqual {15}
	004 Move W8, [X0+152]
	005 Move W9, [X0+40]
	006 NotImplemented "Instruction CMP not yet implemented."
	007 Move TEMP, 0
	008 Not TEMP
	009 Move W8, TEMP
	010 NotImplemented "Instruction CSNEG not yet implemented."
	011 Add W8, W8, W9
	012 Move [X0+40], W8
	013 Move X30, [X31+16]
	014 Return 
	015 Call 0x1C17F20

Method: System.Char CharAt(System.Int32 j)

Disassembly:
	0x0363E5D8 CSNEG W8, W8, W8, EQ
	0x0363E5DC ADD W8, W8, W9
	0x0363E5E0 STR W8, [X19 + 0x28]
	0x0363E5E4 CMP W22, W29
	0x0363E5E8 MOVZ W20, 0x2
	0x0363E5EC B.LE 0x363DA04
	0x0363E5F0 LDRB W8, [X19 + 0x98]

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+32]
	003 Compare X0, 0
	004 JumpIfEqual {9}
	005 Move X2, X31
	006 Move X30, [X31+16]
	007 Call String.get_Chars, X0, X1
	008 Return X0
	009 Call 0x1C17F20

Method: System.Boolean FindFirstChar()

Disassembly:
	0x0363E5F4 LDR W9, [X19 + 0x28]
	0x0363E5F8 MOVN W10, 0x0
	0x0363E5FC ORN W11, W31, W29, 0x0
	0x0363E600 CMP W8, 0x0
	0x0363E604 CSNEG W8, W10, W10, EQ
	0x0363E608 ADD W1, W22, W11
	0x0363E60C ADD W2, W8, W9
	0x0363E610 MOV X0, X19
	0x0363E614 BL 0x363CCCC
	0x0363E618 MOVZ W20, 0x2
	0x0363E61C B 0x363DA04
	0x0363E620 MOV X0, X19
	0x0363E624 BL 0x363D0F0
	0x0363E628 LDR W3, [X19 + 0x28]
	0x0363E62C MOV W2, W0
	0x0363E630 MOV X0, X19
	0x0363E634 MOV W1, W20
	0x0363E638 BL 0x363EC6C
	0x0363E63C MOV X0, X19
	0x0363E640 BL 0x363D0F0
	0x0363E644 MOV W1, W0
	0x0363E648 MOV X0, X19
	0x0363E64C BL 0x363CC70
	0x0363E650 B 0x363E618
	0x0363E654 MOV X0, X19
	0x0363E658 MOV W1, W20
	0x0363E65C BL 0x363CC70
	0x0363E660 LDR W1, [X19 + 0x28]
	0x0363E664 ADD W2, W21, 0x1
	0x0363E668 MOV X0, X19
	0x0363E66C BL 0x363D078
	0x0363E670 MOV X0, X19
	0x0363E674 MOV W1, W31
	0x0363E678 BL 0x363D16C
	0x0363E67C MOV W1, W0
	0x0363E680 MOV X0, X19
	0x0363E684 BL 0x363CB10
	0x0363E688 MOV W20, W29
	0x0363E68C B 0x363DA04
	0x0363E690 SUB W8, W8, 0x118
	0x0363E694 CMP W8, 0x5
	0x0363E698 B.HI 0x363EAF8
	0x0363E69C ADR X9, 0x10
	0x0363E6A0 LDRH W10, [X25, X8, LSL #1]
	0x0363E6A4 ADD X9, X9, X10, 0x2, LSL
	0x0363E6A8 BR X9
	0x0363E6AC LDR W8, [X19 + 0x38]
	0x0363E6B0 ADD W8, W8, 0x1
	0x0363E6B4 STR W8, [X19 + 0x38]
	0x0363E6B8 B 0x363EA4C
	0x0363E6BC LDR W8, [X19 + 0x48]
	0x0363E6C0 ADD W8, W8, 0x2
	0x0363E6C4 B 0x363E6D0
	0x0363E6C8 LDR W8, [X19 + 0x48]
	0x0363E6CC ADD W8, W8, 0x1
	0x0363E6D0 STR W8, [X19 + 0x48]
	0x0363E6D4 B 0x363E4F8
	0x0363E6D8 LDR W8, [X19 + 0x38]
	0x0363E6DC MOVZ W1, 0x1
	0x0363E6E0 MOV X0, X19
	0x0363E6E4 ADD W8, W8, 0x2
	0x0363E6E8 STR W8, [X19 + 0x38]
	0x0363E6EC BL 0x363D000
	0x0363E6F0 MOV W21, W0
	0x0363E6F4 STR W0, [X19 + 0x28]
	0x0363E6F8 MOV X0, X19
	0x0363E6FC BL 0x363D210
	0x0363E700 AND W20, W0, 0xFFFF
	0x0363E704 MOV X0, X19
	0x0363E708 MOV W1, W31
	0x0363E70C BL 0x363D16C
	0x0363E710 CMP W20, W0, UXTH
	0x0363E714 B.NE 0x363E4F8
	0x0363E718 B 0x363E7E4
	0x0363E71C LDR W8, [X19 + 0x38]
	0x0363E720 MOVZ W1, 0x1
	0x0363E724 MOV X0, X19
	0x0363E728 ADD W8, W8, 0x2
	0x0363E72C STR W8, [X19 + 0x38]
	0x0363E730 BL 0x363D000
	0x0363E734 MOV W21, W0
	0x0363E738 STR W0, [X19 + 0x28]
	0x0363E73C MOV X0, X19
	0x0363E740 BL 0x363D210
	0x0363E744 AND W20, W0, 0xFFFF
	0x0363E748 MOV X0, X19
	0x0363E74C MOV W1, W31
	0x0363E750 BL 0x363D16C
	0x0363E754 CMP W20, W0, UXTH
	0x0363E758 B.EQ 0x363E4F8
	0x0363E75C B 0x363E7E4
	0x0363E760 LDR W8, [X19 + 0x38]
	0x0363E764 MOVZ W1, 0x1
	0x0363E768 MOV X0, X19
	0x0363E76C ADD W8, W8, 0x2
	0x0363E770 STR W8, [X19 + 0x38]
	0x0363E774 BL 0x363D000
	0x0363E778 MOV W21, W0
	0x0363E77C STR W0, [X19 + 0x28]
	0x0363E780 MOV X0, X19
	0x0363E784 BL 0x363D210
	0x0363E788 LDR X8, [X19 + 0x80]
	0x0363E78C CBZ X8, 0x363EAF0
	0x0363E790 LDR X22, [X8 + 0x18]
	0x0363E794 MOV W20, W0
	0x0363E798 MOV X0, X19
	0x0363E79C MOV W1, W31
	0x0363E7A0 BL 0x363D16C
	0x0363E7A4 CBZ X22, 0x363EAF0
	0x0363E7A8 LDR W8, [X22 + 0x18]
	0x0363E7AC CMP W0, W8
	0x0363E7B0 B.CS 0x363EAF4
	0x0363E7B4 LDR X8, [X23]
	0x0363E7B8 ADD X9, X22, W0, 0x3, SXTW
	0x0363E7BC LDR X22, [X9 + 0x20]
	0x0363E7C0 LDR W10, [X8 + 0xE0]
	0x0363E7C4 CBNZ W10, 0x363E7D0
	0x0363E7C8 MOV X0, X8
	0x0363E7CC BL 0x1C16DFC
	0x0363E7D0 MOV W0, W20
	0x0363E7D4 MOV X1, X22
	0x0363E7D8 MOV X2, X31
	0x0363E7DC BL 0x3635788
	0x0363E7E0 TBZ X0, 0x0, 0x363E4F8
	0x0363E7E4 MOV X0, X19
	0x0363E7E8 BL 0x363CFC8
	0x0363E7EC SUBS W1, W0, 0x1
	0x0363E7F0 MOVZ W20, 0x2
	0x0363E7F4 B.LT 0x363DA04
	0x0363E7F8 LDRB W8, [X19 + 0x98]
	0x0363E7FC CMP W8, 0x0
	0x0363E800 CSNEG W8, W26, W26, EQ
	0x0363E804 ADD W2, W8, W21
	0x0363E808 B 0x363E610
	0x0363E80C LDR W8, [X19 + 0x38]
	0x0363E810 MOV X0, X19
	0x0363E814 ADD W8, W8, 0x1
	0x0363E818 STR W8, [X19 + 0x38]
	0x0363E81C BL 0x363CFC8
	0x0363E820 STR W0, [X19 + 0x28]
	0x0363E824 B 0x363E670
	0x0363E828 LDR W8, [X19 + 0x38]
	0x0363E82C LDR W9, [X19 + 0x48]
	0x0363E830 MOVZ W1, 0x1
	0x0363E834 MOV X0, X19
	0x0363E838 ADD W8, W8, 0x2
	0x0363E83C ADD W9, W9, 0x1
	0x0363E840 STR W8, [X19 + 0x38]
	0x0363E844 STR W9, [X19 + 0x48]
	0x0363E848 MOVZ W20, 0x1
	0x0363E84C BL 0x363D000
	0x0363E850 STR W0, [X19 + 0x28]
	0x0363E854 MOV X0, X19
	0x0363E858 BL 0x363CFC8
	0x0363E85C MOV W1, W0
	0x0363E860 MOV X0, X19
	0x0363E864 BL 0x363CDD8
	0x0363E868 B 0x363DA04
	0x0363E86C LDR W8, [X19 + 0x38]
	0x0363E870 MOVZ W1, 0x1
	0x0363E874 MOV X0, X19
	0x0363E878 ADD W8, W8, 0x2
	0x0363E87C STR W8, [X19 + 0x38]
	0x0363E880 BL 0x363D000
	0x0363E884 MOV W20, W0
	0x0363E888 MOV X0, X19
	0x0363E88C BL 0x363CFC8
	0x0363E890 MOV W1, W0
	0x0363E894 MOV X0, X19
	0x0363E898 BL 0x363CDD8
	0x0363E89C MOV X0, X19
	0x0363E8A0 MOV W1, W20
	0x0363E8A4 BL 0x363D03C
	0x0363E8A8 STR W20, [X19 + 0x28]
	0x0363E8AC B 0x363E670
	0x0363E8B0 LDR W8, [X19 + 0x38]
	0x0363E8B4 LDR W9, [X19 + 0x48]
	0x0363E8B8 MOVZ W1, 0x1
	0x0363E8BC MOV X0, X19
	0x0363E8C0 ADD W8, W8, 0x1
	0x0363E8C4 ADD W9, W9, 0x2
	0x0363E8C8 STR W8, [X19 + 0x38]
	0x0363E8CC STR W9, [X19 + 0x48]
	0x0363E8D0 BL 0x363D128
	0x0363E8D4 CMP W0, 0x1
	0x0363E8D8 B.LT 0x363EAA8
	0x0363E8DC MOV X0, X19
	0x0363E8E0 BL 0x363D0F0
	0x0363E8E4 STR W0, [X19 + 0x28]
	0x0363E8E8 MOV X0, X19
	0x0363E8EC BL 0x363CFC8
	0x0363E8F0 MOV W20, W0
	0x0363E8F4 MOVZ W1, 0x1
	0x0363E8F8 MOV X0, X19
	0x0363E8FC BL 0x363D128
	0x0363E900 SUB W2, W0, 0x1
	0x0363E904 MOV X0, X19
	0x0363E908 MOV W1, W20
	0x0363E90C B 0x363E264
	0x0363E910 LDR W8, [X19 + 0x38]
	0x0363E914 MOV X0, X19
	0x0363E918 ADD W8, W8, 0x3
	0x0363E91C STR W8, [X19 + 0x38]
	0x0363E920 BL 0x363CFC8
	0x0363E924 MOV W20, W0
	0x0363E928 MOVZ W1, 0x2
	0x0363E92C MOV X0, X19
	0x0363E930 BL 0x363D000
	0x0363E934 MOV W21, W0
	0x0363E938 MOVZ W1, 0x1
	0x0363E93C MOV X0, X19
	0x0363E940 BL 0x363D000
	0x0363E944 MOV W22, W0
	0x0363E948 MOVZ W1, 0x1
	0x0363E94C MOV X0, X19
	0x0363E950 BL 0x363D16C
	0x0363E954 CMP W21, W20
	0x0363E958 B.EQ 0x363EA70
	0x0363E95C CMP W22, W0
	0x0363E960 B.GE 0x363EA70
	0x0363E964 MOVZ W1, 0x1
	0x0363E968 MOV X0, X19
	0x0363E96C STR W21, [X19 + 0x28]
	0x0363E970 BL 0x363D000
	0x0363E974 ADD W2, W0, 0x1
	0x0363E978 MOV X0, X19
	0x0363E97C MOV W1, W21
	0x0363E980 BL 0x363D078
	0x0363E984 MOV X0, X19
	0x0363E988 MOV W1, W20
	0x0363E98C BL 0x363CDD8

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0xDA3000
	008 Move W8, [X20+1388]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {28}
	014 Move X0, 0xAFF000
	015 Move X0, [X0+840]
	016 Call 0x1C17CF4
	017 Move X0, 0xAFF000
	018 Move X0, [X0+848]
	019 Call 0x1C17CF4
	020 Move X0, 0xAFE000
	021 Move X0, [X0+2272]
	022 Call 0x1C17CF4
	023 Move X0, 0xAFF000
	024 Move X0, [X0+752]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X20+1388], W8
	028 Move X8, [X19+128]
	029 Compare X8, 0
	030 JumpIfEqual {265}
	031 Move W9, [X8+88]
	032 Move W10, 53
	033 And W31, W9, W10
	034 Move W10, [X8+92]
	035 Compare W10, 0
	036 JumpIfEqual {84}
	037 Move TEMP, X9
	038 And TEMP, TEMP, 32
	039 Compare TEMP, 32
	040 JumpIfNotEqual {44}
	041 Move W10, [X19+40]
	042 Move W11, [X19+20]
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Move TEMP, X9
	045 And TEMP, TEMP, 16
	046 Compare TEMP, 16
	047 JumpIfEqual {99}
	048 Move W9, [X8+88]
	049 Move TEMP, X9
	050 And TEMP, TEMP, 4
	051 Compare TEMP, 4
	052 JumpIfNotEqual {56}
	053 Move W10, [X19+40]
	054 Move W11, [X19+24]
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Move TEMP, X9
	057 And TEMP, TEMP, 1
	058 Compare TEMP, 1
	059 JumpIfNotEqual {148}
	060 Move W10, [X19+40]
	061 Move W9, [X19+16]
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Move X0, [X8+80]
	064 Compare X0, 0
	065 JumpIfEqual {116}
	066 Move X1, [X19+32]
	067 Move W2, [X19+40]
	068 Move W3, [X19+16]
	069 Move W4, [X19+20]
	070 Move X5, X31
	071 Call RegexBoyerMoore.Scan, X0, X1, X2, X3, X4
	072 Add W31, W0, 1
	073 Move [X19+40], W0
	074 Move X8, [X19+128]
	075 Compare X8, 0
	076 JumpIfEqual {265}
	077 Move W8, [X8+92]
	078 Move W9, 16
	079 Move W0, W31
	080 NotImplemented "Instruction CMP not yet implemented."
	081 Move W8, 20
	082 NotImplemented "Instruction CSEL not yet implemented."
	083 Move W8, [X19]
	084 Move TEMP, X9
	085 And TEMP, TEMP, 1
	086 Compare TEMP, 1
	087 JumpIfNotEqual {91}
	088 Move W10, [X19+40]
	089 Move W11, [X19+16]
	090 NotImplemented "Instruction CMP not yet implemented."
	091 Move TEMP, X9
	092 And TEMP, TEMP, 4
	093 Compare TEMP, 4
	094 JumpIfNotEqual {131}
	095 Move W10, [X19+40]
	096 Move W11, [X19+24]
	097 NotImplemented "Instruction CMP not yet implemented."
	098 Move W8, [X19+20]
	099 Move W9, [X19+20]
	100 Move W1, [X19+40]
	101 Subtract W9, W9, 1
	102 NotImplemented "Instruction CMP not yet implemented."
	103 Move X0, [X19+32]
	104 Compare X0, 0
	105 JumpIfEqual {265}
	106 Move X2, X31
	107 Call String.get_Chars, X0, X1
	108 And W8, W0, 0xFFFF
	109 NotImplemented "Instruction CMP not yet implemented."
	110 Move X8, [X19+128]
	111 Compare X8, 0
	112 JumpIfNotEqual {48}
	113 Move W8, [X19+16]
	114 Move W0, W31
	115 Move [X19+40], W8
	116 Move W9, [X8+56]
	117 Compare W9, 0
	118 JumpIfEqual {257}
	119 Move W9, [X8+92]
	120 Move [X19+152], W9
	121 Move X9, 0xAFF000
	122 Move X9, [X9+752]
	123 Move W20, [X8+64]
	124 Move X0, [X9]
	125 Move W9, [X0+224]
	126 Compare W9, 0
	127 JumpIfEqual {164}
	128 And W31, W20, 255
	129 NotImplemented "Instruction CSET not yet implemented."
	130 Move [X19+153], W9
	131 Move TEMP, X9
	132 And TEMP, TEMP, 16
	133 Compare TEMP, 16
	134 JumpIfNotEqual {140}
	135 Move W10, [X19+20]
	136 Move W11, [X19+40]
	137 Subtract W10, W10, 1
	138 NotImplemented "Instruction CMP not yet implemented."
	139 Move [X19+40], W10
	140 Move TEMP, X9
	141 And TEMP, TEMP, 32
	142 Compare TEMP, 32
	143 JumpIfNotEqual {148}
	144 Move W10, [X19+40]
	145 Move W9, [X19+20]
	146 NotImplemented "Instruction CMP not yet implemented."
	147 Move [X19+40], W9
	148 Move X0, [X8+80]
	149 Compare X0, 0
	150 JumpIfEqual {257}
	151 Move W3, [X19+16]
	152 Move W4, [X19+20]
	153 Move W2, [X19+40]
	154 Move X1, [X19+32]
	155 Move X20, [X31+32]
	156 Move X19, [X31+40]
	157 Move X22, [X31+16]
	158 Move X21, [X31+24]
	159 Move X5, X31
	160 Move X30, [X31+48]
	161 Move X23, [X31+56]
	162 Call RegexBoyerMoore.IsMatch, X0, X1, X2, X3, X4
	163 Return X0
	164 Call 0x1C17DFC
	165 Move X8, [X19+128]
	166 And W31, W20, 255
	167 NotImplemented "Instruction CSET not yet implemented."
	168 Move [X19+153], W9
	169 Compare X8, 0
	170 JumpIfEqual {265}
	171 Move X22, 0xAFE000
	172 Move X22, [X22+2272]
	173 Move X20, [X8+72]
	174 Move X0, [X22]
	175 Move W9, [X0+224]
	176 Compare W9, 0
	177 JumpIfNotEqual {179}
	178 Call 0x1C17DFC
	179 Move X0, X20
	180 Move X1, X31
	181 Call RegexCharClass.IsSingleton, X0
	182 Move TEMP, X0
	183 And TEMP, TEMP, 1
	184 Compare TEMP, 1
	185 JumpIfNotEqual {213}
	186 Move X0, [X22]
	187 Move W8, [X0+224]
	188 Compare W8, 0
	189 JumpIfNotEqual {191}
	190 Call 0x1C17DFC
	191 Move X0, X20
	192 Move X1, X31
	193 Call RegexCharClass.SingletonChar, X0
	194 Move W8, [X19+152]
	195 Move W9, 16
	196 Move W10, 40
	197 Move W11, 20
	198 NotImplemented "Instruction CMP not yet implemented."
	199 NotImplemented "Instruction CSEL not yet implemented."
	200 NotImplemented "Instruction CSEL not yet implemented."
	201 Move W9, [X19]
	202 Move W8, [X19]
	203 Subtract W8, W9, W8
	204 NotImplemented "Instruction CMP not yet implemented."
	205 Add W20, W8, 1
	206 And W21, W0, 0xFFFF
	207 Move X0, X19
	208 Call RegexInterpreter.Forwardcharnext, X0
	209 NotImplemented "Instruction CMP not yet implemented."
	210 Subtract W20, W20, 1
	211 NotImplemented "Instruction CMP not yet implemented."
	212 Move W0, W31
	213 Move W8, [X19+152]
	214 Move W9, 16
	215 Move W10, 40
	216 Move W11, 20
	217 NotImplemented "Instruction CMP not yet implemented."
	218 NotImplemented "Instruction CSEL not yet implemented."
	219 NotImplemented "Instruction CSEL not yet implemented."
	220 Move W9, [X19]
	221 Move W8, [X19]
	222 Subtract W8, W9, W8
	223 NotImplemented "Instruction CMP not yet implemented."
	224 Add W23, W8, 1
	225 Move X0, X19
	226 Call RegexInterpreter.Forwardcharnext, X0
	227 Move X8, [X22]
	228 Move W21, W0
	229 Move W9, [X8+224]
	230 Compare W9, 0
	231 JumpIfNotEqual {234}
	232 Move X0, X8
	233 Call 0x1C17DFC
	234 Move W0, W21
	235 Move X1, X20
	236 Move X2, X31
	237 Call RegexCharClass.CharInClass, X0, X1
	238 Move TEMP, X0
	239 And TEMP, TEMP, 1
	240 Compare TEMP, 1
	241 JumpIfEqual {246}
	242 Subtract W23, W23, 1
	243 NotImplemented "Instruction CMP not yet implemented."
	244 Move W0, W31
	245 Move W0, W31
	246 Compare X19, 0
	247 JumpIfEqual {265}
	248 Move W8, [X19+152]
	249 Move W9, [X19+40]
	250 Move TEMP, 0
	251 Not TEMP
	252 Move W10, TEMP
	253 NotImplemented "Instruction CMP not yet implemented."
	254 NotImplemented "Instruction CSNEG not yet implemented."
	255 Add W8, W8, W9
	256 Move [X19+40], W8
	257 Move W0, 1
	258 Move X20, [X31+32]
	259 Move X19, [X31+40]
	260 Move X22, [X31+16]
	261 Move X21, [X31+24]
	262 Move X30, [X31+48]
	263 Move X23, [X31+56]
	264 Return X0
	265 Call 0x1C17F20

Method: System.Void Go()

Disassembly:
	0x0363E990 B 0x363E670
	0x0363E994 LDR W8, [X19 + 0x38]
	0x0363E998 MOV X0, X19
	0x0363E99C ADD W8, W8, 0x1
	0x0363E9A0 STR W8, [X19 + 0x38]
	0x0363E9A4 BL 0x363CFC8
	0x0363E9A8 MOV W1, W0
	0x0363E9AC MOV X0, X19
	0x0363E9B0 BL 0x363D03C
	0x0363E9B4 MOV X0, X19
	0x0363E9B8 BL 0x363ECCC
	0x0363E9BC MOV X0, X19
	0x0363E9C0 MOV W1, W31
	0x0363E9C4 BL 0x363D16C
	0x0363E9C8 ADDS W31, W0, 0x1
	0x0363E9CC B.EQ 0x363E4F8
	0x0363E9D0 MOVZ W1, 0x1
	0x0363E9D4 MOV X0, X19
	0x0363E9D8 BL 0x363D16C
	0x0363E9DC ADDS W31, W0, 0x1
	0x0363E9E0 B.EQ 0x363E4F8
	0x0363E9E4 MOV X0, X19
	0x0363E9E8 BL 0x363ECCC
	0x0363E9EC B 0x363E4F8
	0x0363E9F0 LDR W9, [X19 + 0x38]
	0x0363E9F4 LDR X8, [X19 + 0x50]
	0x0363E9F8 ADD W9, W9, 0x1
	0x0363E9FC STR W9, [X19 + 0x38]
	0x0363EA00 CBZ X8, 0x363EAF0
	0x0363EA04 LDR W9, [X19 + 0x58]
	0x0363EA08 LDR W8, [X8 + 0x18]
	0x0363EA0C MOV X0, X19
	0x0363EA10 SUB W20, W8, W9
	0x0363EA14 BL 0x363CFC8
	0x0363EA18 CMP W20, W0
	0x0363EA1C B.EQ 0x363E4F8
	0x0363EA20 MOV X0, X19
	0x0363EA24 BL 0x363ECCC
	0x0363EA28 LDR X8, [X19 + 0x50]
	0x0363EA2C CBNZ X8, 0x363EA04
	0x0363EA30 B 0x363EAF0
	0x0363EA34 LDR W8, [X19 + 0x48]
	0x0363EA38 LDR W9, [X19 + 0x38]
	0x0363EA3C ADD W8, W8, 0x1
	0x0363EA40 ADD W9, W9, 0x1
	0x0363EA44 STR W8, [X19 + 0x48]
	0x0363EA48 STR W9, [X19 + 0x38]
	0x0363EA4C MOV X0, X19
	0x0363EA50 BL 0x363CFC8
	0x0363EA54 MOV W1, W0
	0x0363EA58 MOV X0, X19
	0x0363EA5C BL 0x363D03C
	0x0363EA60 B 0x363E4F8
	0x0363EA64 LDR W8, [X19 + 0x38]
	0x0363EA68 ADD W8, W8, 0x2
	0x0363EA6C STR W8, [X19 + 0x38]
	0x0363EA70 MOV X0, X19
	0x0363EA74 BL 0x363CFC8
	0x0363EA78 MOV W20, W0
	0x0363EA7C MOVZ W1, 0x1
	0x0363EA80 MOV X0, X19
	0x0363EA84 BL 0x363D000
	0x0363EA88 MOV W2, W0
	0x0363EA8C B 0x363EAC4
	0x0363EA90 LDR W8, [X19 + 0x38]
	0x0363EA94 LDR W9, [X19 + 0x48]
	0x0363EA98 ADD W8, W8, 0x1
	0x0363EA9C ADD W9, W9, 0x2
	0x0363EAA0 STR W8, [X19 + 0x38]
	0x0363EAA4 STR W9, [X19 + 0x48]
	0x0363EAA8 MOV X0, X19
	0x0363EAAC BL 0x363CFC8
	0x0363EAB0 MOV W20, W0
	0x0363EAB4 MOVZ W1, 0x1
	0x0363EAB8 MOV X0, X19
	0x0363EABC BL 0x363D128
	0x0363EAC0 SUB W2, W0, 0x1
	0x0363EAC4 MOV X0, X19
	0x0363EAC8 MOV W1, W20
	0x0363EACC BL 0x363D078
	0x0363EAD0 B 0x363E4F8
	0x0363EAD4 LDP X20, X19, [X31 + 0x50]
	0x0363EAD8 LDP X22, X21, [X31 + 0x40]
	0x0363EADC LDP X24, X23, [X31 + 0x30]
	0x0363EAE0 LDP X26, X25, [X31 + 0x20]
	0x0363EAE4 LDP X28, X27, [X31 + 0x10]
	0x0363EAE8 LDP X29, X30, [X31], #0x60
	0x0363EAEC RET
	0x0363EAF0 BL 0x1C16F20
	0x0363EAF4 BL 0x1C16F28
	0x0363EAF8 ADRP X0, 0xAFE000
	0x0363EAFC LDR X0, [X0 + 0x358]
	0x0363EB00 BL 0x1C16D08
	0x0363EB04 MOV X1, X31
	0x0363EB08 BL 0x3627D04
	0x0363EB0C MOV X19, X0
	0x0363EB10 ADRP X0, 0xAFE000
	0x0363EB14 LDR X0, [X0 + 0x360]
	0x0363EB18 BL 0x1C16D08
	0x0363EB1C MOV X1, X0
	0x0363EB20 MOV X0, X19
	0x0363EB24 BL 0x1C16DEC
	0x0363EB28 LDRB W8, [X0 + 0x74]
	0x0363EB2C CBZ W8, 0x363EB34
	0x0363EB30 RET
	0x0363EB34 B 0x3646BA0
	0x0363EB38 STR X30, [X31 - 0x10]!
	0x0363EB3C LDR X0, [X0 + 0x60]
	0x0363EB40 CBZ X0, 0x363EB54
	0x0363EB44 LDR X8, [X0]
	0x0363EB48 LDP X3, X2, [X8 + 0x1D8]
	0x0363EB4C LDR X30, [X31], #0x10
	0x0363EB50 BR X3
	0x0363EB54 BL 0x1C16F20
	0x0363EB58 STP X30, X25, [X31 - 0x40]!
	0x0363EB5C STP X24, X23, [X31 + 0x10]
	0x0363EB60 STP X22, X21, [X31 + 0x20]
	0x0363EB64 STP X20, X19, [X31 + 0x30]
	0x0363EB68 MOV X20, X0
	0x0363EB6C LDR X0, [X0 + 0x60]
	0x0363EB70 CMP W4, W3
	0x0363EB74 CSEL W25, W3, W4, LT
	0x0363EB78 CSEL W24, W4, W3, LT
	0x0363EB7C CBZ X0, 0x363EC68
	0x0363EB80 LDR X8, [X0]
	0x0363EB84 MOV W21, W2
	0x0363EB88 MOV W19, W1
	0x0363EB8C MOV W1, W21
	0x0363EB90 LDP X9, X2, [X8 + 0x1E8]
	0x0363EB94 BLR X9
	0x0363EB98 LDR X8, [X20 + 0x60]
	0x0363EB9C CBZ X8, 0x363EC68
	0x0363EBA0 LDR X9, [X8]
	0x0363EBA4 MOV W23, W0
	0x0363EBA8 MOV X0, X8
	0x0363EBAC MOV W1, W21
	0x0363EBB0 LDP X10, X2, [X9 + 0x1F8]
	0x0363EBB4 BLR X10
	0x0363EBB8 ADD W22, W0, W23
	0x0363EBBC CMP W24, W22
	0x0363EBC0 B.GE 0x363EBEC
	0x0363EBC4 CMP W25, W23
	0x0363EBC8 B.LE 0x363EBE4
	0x0363EBCC CMP W25, W22
	0x0363EBD0 CSEL W8, W22, W25, GT
	0x0363EBD4 CMP W23, W24
	0x0363EBD8 CSEL W22, W23, W24, GT
	0x0363EBDC MOV W24, W8
	0x0363EBE0 B 0x363EBEC
	0x0363EBE4 MOV W24, W25
	0x0363EBE8 MOV W22, W23
	0x0363EBEC MOV X0, X20
	0x0363EBF0 MOV W1, W21
	0x0363EBF4 BL 0x3646E4C
	0x0363EBF8 LDR X0, [X20 + 0x60]
	0x0363EBFC CBZ X0, 0x363EC68
	0x0363EC00 LDR X8, [X0]
	0x0363EC04 MOV W1, W21
	0x0363EC08 LDP X9, X2, [X8 + 0x1B8]
	0x0363EC0C BLR X9
	0x0363EC10 ADDS W31, W19, 0x1
	0x0363EC14 B.EQ 0x363EC54
	0x0363EC18 MOV X0, X20
	0x0363EC1C MOV W1, W19
	0x0363EC20 BL 0x3646E4C
	0x0363EC24 LDR X0, [X20 + 0x60]
	0x0363EC28 CBZ X0, 0x363EC68
	0x0363EC2C LDR X8, [X0]
	0x0363EC30 SUB W3, W24, W22
	0x0363EC34 MOV W1, W19
	0x0363EC38 MOV W2, W22
	0x0363EC3C LDP X5, X4, [X8 + 0x1A8]
	0x0363EC40 LDP X20, X19, [X31 + 0x30]
	0x0363EC44 LDP X22, X21, [X31 + 0x20]
	0x0363EC48 LDP X24, X23, [X31 + 0x10]
	0x0363EC4C LDP X30, X25, [X31], #0x40
	0x0363EC50 BR X5
	0x0363EC54 LDP X20, X19, [X31 + 0x30]
	0x0363EC58 LDP X22, X21, [X31 + 0x20]
	0x0363EC5C LDP X24, X23, [X31 + 0x10]
	0x0363EC60 LDP X30, X25, [X31], #0x40
	0x0363EC64 RET
	0x0363EC68 BL 0x1C16F20
	0x0363EC6C STP X30, X23, [X31 - 0x30]!
	0x0363EC70 STP X22, X21, [X31 + 0x10]
	0x0363EC74 STP X20, X19, [X31 + 0x20]
	0x0363EC78 CMP W3, W2
	0x0363EC7C MOV W19, W3
	0x0363EC80 MOV W21, W2
	0x0363EC84 MOV W20, W1
	0x0363EC88 MOV X23, X0
	0x0363EC8C CSEL W22, W3, W2, LT
	0x0363EC90 BL 0x3646E4C
	0x0363EC94 LDR X0, [X23 + 0x60]
	0x0363EC98 CBZ X0, 0x363ECC8
	0x0363EC9C LDR X8, [X0]
	0x0363ECA0 CMP W19, W21
	0x0363ECA4 MOV W1, W20
	0x0363ECA8 MOV W2, W22
	0x0363ECAC LDP X5, X4, [X8 + 0x1A8]
	0x0363ECB0 CSEL W8, W21, W19, LT
	0x0363ECB4 SUB W3, W8, W22
	0x0363ECB8 LDP X20, X19, [X31 + 0x20]
	0x0363ECBC LDP X22, X21, [X31 + 0x10]
	0x0363ECC0 LDP X30, X23, [X31], #0x30
	0x0363ECC4 BR X5
	0x0363ECC8 BL 0x1C16F20
	0x0363ECCC STP X30, X19, [X31 - 0x10]!
	0x0363ECD0 MOV X19, X0
	0x0363ECD4 BL 0x3646EA8
	0x0363ECD8 LDR X8, [X19 + 0x60]
	0x0363ECDC CBZ X8, 0x363ECF8
	0x0363ECE0 LDR X9, [X8]
	0x0363ECE4 MOV W1, W0
	0x0363ECE8 MOV X0, X8
	0x0363ECEC LDP X3, X2, [X9 + 0x1C8]
	0x0363ECF0 LDP X30, X19, [X31], #0x10
	0x0363ECF4 BR X3
	0x0363ECF8 BL 0x1C16F20
	0x0363ECFC STR X30, [X31 - 0x10]!
	0x0363ED00 LDR X8, [X0 + 0x50]
	0x0363ED04 CBZ X8, 0x363ED1C
	0x0363ED08 LDR W9, [X0 + 0x58]
	0x0363ED0C LDR W8, [X8 + 0x18]
	0x0363ED10 SUB W0, W8, W9
	0x0363ED14 LDR X30, [X31], #0x10
	0x0363ED18 RET
	0x0363ED1C BL 0x1C16F20
	0x0363ED20 STP X30, X23, [X31 - 0x30]!
	0x0363ED24 STP X22, X21, [X31 + 0x10]
	0x0363ED28 STP X20, X19, [X31 + 0x20]
	0x0363ED2C ADRP X23, 0xDA2000
	0x0363ED30 LDRB W8, [X23 + 0x5AF]
	0x0363ED34 MOV W20, W3
	0x0363ED38 MOV W22, W2
	0x0363ED3C MOV W19, W1
	0x0363ED40 MOV X21, X0
	0x0363ED44 TBNZ X8, 0x0, 0x363ED5C
	0x0363ED48 ADRP X0, 0xAFD000
	0x0363ED4C LDR X0, [X0 + 0x8E0]
	0x0363ED50 BL 0x1C16CF4
	0x0363ED54 MOVZ W8, 0x1
	0x0363ED58 STRB W8, [X23 + 0x5AF]
	0x0363ED5C CMP W19, W22
	0x0363ED60 B.LE 0x363EDAC
	0x0363ED64 LDR X0, [X21 + 0x20]
	0x0363ED68 CBZ X0, 0x363EE1C
	0x0363ED6C SUB W1, W19, 0x1
	0x0363ED70 MOV X2, X31
	0x0363ED74 BL 0x3222A1C
	0x0363ED78 ADRP X8, 0xAFD000
	0x0363ED7C LDR X8, [X8 + 0x8E0]
	0x0363ED80 MOV W22, W0
	0x0363ED84 LDR X8, [X8]
	0x0363ED88 LDR W9, [X8 + 0xE0]
	0x0363ED8C CBNZ W9, 0x363ED98
	0x0363ED90 MOV X0, X8
	0x0363ED94 BL 0x1C16DFC
	0x0363ED98 MOV W0, W22
	0x0363ED9C MOV X1, X31
	0x0363EDA0 BL 0x36357F0
	0x0363EDA4 AND W22, W0, 0x1
	0x0363EDA8 B 0x363EDB0
	0x0363EDAC MOV W22, W31
	0x0363EDB0 CMP W19, W20
	0x0363EDB4 B.GE 0x363EE00
	0x0363EDB8 LDR X0, [X21 + 0x20]
	0x0363EDBC CBZ X0, 0x363EE1C
	0x0363EDC0 MOV W1, W19
	0x0363EDC4 MOV X2, X31
	0x0363EDC8 BL 0x3222A1C
	0x0363EDCC ADRP X8, 0xAFD000
	0x0363EDD0 LDR X8, [X8 + 0x8E0]
	0x0363EDD4 MOV W19, W0
	0x0363EDD8 LDR X8, [X8]
	0x0363EDDC LDR W9, [X8 + 0xE0]
	0x0363EDE0 CBNZ W9, 0x363EDEC
	0x0363EDE4 MOV X0, X8
	0x0363EDE8 BL 0x1C16DFC
	0x0363EDEC MOV W0, W19
	0x0363EDF0 MOV X1, X31
	0x0363EDF4 BL 0x36357F0
	0x0363EDF8 AND W8, W0, 0x1
	0x0363EDFC B 0x363EE04
	0x0363EE00 MOV W8, W31
	0x0363EE04 CMP W22, W8
	0x0363EE08 LDP X20, X19, [X31 + 0x20]
	0x0363EE0C LDP X22, X21, [X31 + 0x10]
	0x0363EE10 CSET W0, NE
	0x0363EE14 LDP X30, X23, [X31], #0x30
	0x0363EE18 RET
	0x0363EE1C BL 0x1C16F20
	0x0363EE20 STP X30, X23, [X31 - 0x30]!
	0x0363EE24 STP X22, X21, [X31 + 0x10]
	0x0363EE28 STP X20, X19, [X31 + 0x20]
	0x0363EE2C ADRP X23, 0xDA2000
	0x0363EE30 LDRB W8, [X23 + 0x5B0]
	0x0363EE34 MOV W20, W3
	0x0363EE38 MOV W22, W2
	0x0363EE3C MOV W19, W1
	0x0363EE40 MOV X21, X0
	0x0363EE44 TBNZ X8, 0x0, 0x363EE5C
	0x0363EE48 ADRP X0, 0xAFD000
	0x0363EE4C LDR X0, [X0 + 0x8E0]
	0x0363EE50 BL 0x1C16CF4
	0x0363EE54 MOVZ W8, 0x1
	0x0363EE58 STRB W8, [X23 + 0x5B0]
	0x0363EE5C CMP W19, W22
	0x0363EE60 B.LE 0x363EEAC
	0x0363EE64 LDR X0, [X21 + 0x20]
	0x0363EE68 CBZ X0, 0x363EF1C
	0x0363EE6C SUB W1, W19, 0x1
	0x0363EE70 MOV X2, X31
	0x0363EE74 BL 0x3222A1C
	0x0363EE78 ADRP X8, 0xAFD000
	0x0363EE7C LDR X8, [X8 + 0x8E0]
	0x0363EE80 MOV W22, W0
	0x0363EE84 LDR X8, [X8]
	0x0363EE88 LDR W9, [X8 + 0xE0]
	0x0363EE8C CBNZ W9, 0x363EE98
	0x0363EE90 MOV X0, X8
	0x0363EE94 BL 0x1C16DFC
	0x0363EE98 MOV W0, W22
	0x0363EE9C MOV X1, X31
	0x0363EEA0 BL 0x363571C
	0x0363EEA4 AND W22, W0, 0x1
	0x0363EEA8 B 0x363EEB0
	0x0363EEAC MOV W22, W31
	0x0363EEB0 CMP W19, W20
	0x0363EEB4 B.GE 0x363EF00
	0x0363EEB8 LDR X0, [X21 + 0x20]
	0x0363EEBC CBZ X0, 0x363EF1C
	0x0363EEC0 MOV W1, W19
	0x0363EEC4 MOV X2, X31
	0x0363EEC8 BL 0x3222A1C
	0x0363EECC ADRP X8, 0xAFD000
	0x0363EED0 LDR X8, [X8 + 0x8E0]
	0x0363EED4 MOV W19, W0
	0x0363EED8 LDR X8, [X8]
	0x0363EEDC LDR W9, [X8 + 0xE0]
	0x0363EEE0 CBNZ W9, 0x363EEEC
	0x0363EEE4 MOV X0, X8
	0x0363EEE8 BL 0x1C16DFC
	0x0363EEEC MOV W0, W19
	0x0363EEF0 MOV X1, X31
	0x0363EEF4 BL 0x363571C
	0x0363EEF8 AND W8, W0, 0x1
	0x0363EEFC B 0x363EF04
	0x0363EF00 MOV W8, W31
	0x0363EF04 CMP W22, W8
	0x0363EF08 LDP X20, X19, [X31 + 0x20]
	0x0363EF0C LDP X22, X21, [X31 + 0x10]
	0x0363EF10 CSET W0, NE
	0x0363EF14 LDP X30, X23, [X31], #0x30
	0x0363EF18 RET
	0x0363EF1C BL 0x1C16F20
	0x0363EF20 STR X30, [X31 - 0x10]!
	0x0363EF24 LDR X0, [X0 + 0x60]
	0x0363EF28 CBZ X0, 0x363EF3C
	0x0363EF2C LDR X8, [X0]
	0x0363EF30 LDP X3, X2, [X8 + 0x1E8]
	0x0363EF34 LDR X30, [X31], #0x10
	0x0363EF38 BR X3
	0x0363EF3C BL 0x1C16F20
	0x0363EF40 STR X30, [X31 - 0x10]!
	0x0363EF44 LDR X0, [X0 + 0x60]
	0x0363EF48 CBZ X0, 0x363EF5C
	0x0363EF4C LDR X8, [X0]
	0x0363EF50 LDP X3, X2, [X8 + 0x1F8]
	0x0363EF54 LDR X30, [X31], #0x10
	0x0363EF58 BR X3
	0x0363EF5C BL 0x1C16F20
	0x0363EF60 STP X30, X25, [X31 - 0x40]!
	0x0363EF64 STP X24, X23, [X31 + 0x10]
	0x0363EF68 STP X22, X21, [X31 + 0x20]
	0x0363EF6C STP X20, X19, [X31 + 0x30]
	0x0363EF70 ADRP X25, 0xDA2000
	0x0363EF74 ADRP X24, 0xAB7000
	0x0363EF78 ADRP X23, 0xAB7000
	0x0363EF7C LDRB W8, [X25 + 0x56E]
	0x0363EF80 LDR X24, [X24 + 0x278]
	0x0363EF84 LDR X23, [X23 + 0x570]
	0x0363EF88 MOV X19, X3
	0x0363EF8C MOV X20, X2
	0x0363EF90 MOV X22, X1
	0x0363EF94 MOV X21, X0
	0x0363EF98 TBNZ X8, 0x0, 0x363EFC8
	0x0363EF9C ADRP X0, 0xAB7000
	0x0363EFA0 LDR X0, [X0 + 0x278]
	0x0363EFA4 BL 0x1C16CF4
	0x0363EFA8 ADRP X0, 0xAB7000
	0x0363EFAC LDR X0, [X0 + 0x570]
	0x0363EFB0 BL 0x1C16CF4
	0x0363EFB4 ADRP X0, 0xAFE000
	0x0363EFB8 LDR X0, [X0 + 0x368]
	0x0363EFBC BL 0x1C16CF4
	0x0363EFC0 MOVZ W8, 0x1
	0x0363EFC4 STRB W8, [X25 + 0x56E]
	0x0363EFC8 LDR X8, [X24]
	0x0363EFCC LDR X8, [X8 + 0xB8]
	0x0363EFD0 LDR X8, [X8]
	0x0363EFD4 STP X8, X8, [X21 + 0x90]
	0x0363EFD8 LDR X0, [X23]
	0x0363EFDC ADRP X23, 0xAFE000
	0x0363EFE0 LDR W8, [X0 + 0xE0]
	0x0363EFE4 LDR X23, [X23 + 0x368]
	0x0363EFE8 CBNZ W8, 0x363EFF0
	0x0363EFEC BL 0x1C16DFC
	0x0363EFF0 MOVN X0, 0x0
	0x0363EFF4 MOV X1, X31
	0x0363EFF8 BL 0x339481C
	0x0363EFFC STR X0, [X21 + 0xA0]
	0x0363F000 LDR X1, [X23]
	0x0363F004 MOV X0, X21
	0x0363F008 MOV X2, X31
	0x0363F00C BL 0x3394DD8
	0x0363F010 STP X22, X20, [X21 + 0x90]
	0x0363F014 STR X19, [X21 + 0xA0]
	0x0363F018 LDP X20, X19, [X31 + 0x30]
	0x0363F01C LDP X22, X21, [X31 + 0x20]
	0x0363F020 LDP X24, X23, [X31 + 0x10]
	0x0363F024 LDP X30, X25, [X31], #0x40
	0x0363F028 RET
	0x0363F02C STR X30, [X31 - 0x30]!
	0x0363F030 STP X22, X21, [X31 + 0x10]
	0x0363F034 STP X20, X19, [X31 + 0x20]
	0x0363F038 ADRP X21, 0xDA1000
	0x0363F03C ADRP X22, 0xAB6000
	0x0363F040 ADRP X20, 0xAB6000
	0x0363F044 LDRB W8, [X21 + 0x56F]
	0x0363F048 LDR X22, [X22 + 0x278]
	0x0363F04C LDR X20, [X20 + 0x570]
	0x0363F050 MOV X19, X0
	0x0363F054 TBNZ X8, 0x0, 0x363F078
	0x0363F058 ADRP X0, 0xAB6000
	0x0363F05C LDR X0, [X0 + 0x278]
	0x0363F060 BL 0x1C16CF4
	0x0363F064 ADRP X0, 0xAB6000
	0x0363F068 LDR X0, [X0 + 0x570]
	0x0363F06C BL 0x1C16CF4
	0x0363F070 MOVZ W8, 0x1
	0x0363F074 STRB W8, [X21 + 0x56F]
	0x0363F078 LDR X8, [X22]
	0x0363F07C LDR X8, [X8 + 0xB8]
	0x0363F080 LDR X8, [X8]
	0x0363F084 STP X8, X8, [X19 + 0x90]
	0x0363F088 LDR X0, [X20]
	0x0363F08C LDR W8, [X0 + 0xE0]
	0x0363F090 CBNZ W8, 0x363F098
	0x0363F094 BL 0x1C16DFC
	0x0363F098 MOVN X0, 0x0
	0x0363F09C MOV X1, X31
	0x0363F0A0 BL 0x339481C
	0x0363F0A4 STR X0, [X19 + 0xA0]
	0x0363F0A8 MOV X0, X19
	0x0363F0AC LDP X20, X19, [X31 + 0x20]
	0x0363F0B0 LDP X22, X21, [X31 + 0x10]
	0x0363F0B4 MOV X1, X31
	0x0363F0B8 LDR X30, [X31], #0x30
	0x0363F0BC B 0x3394D80
	0x0363F0C0 STP X30, X25, [X31 - 0x40]!
	0x0363F0C4 STP X24, X23, [X31 + 0x10]
	0x0363F0C8 STP X22, X21, [X31 + 0x20]
	0x0363F0CC STP X20, X19, [X31 + 0x30]
	0x0363F0D0 ADRP X25, 0xDA1000
	0x0363F0D4 ADRP X24, 0xAB6000
	0x0363F0D8 ADRP X23, 0xAB6000
	0x0363F0DC LDRB W8, [X25 + 0x570]
	0x0363F0E0 LDR X24, [X24 + 0x278]
	0x0363F0E4 LDR X23, [X23 + 0x570]
	0x0363F0E8 MOV X21, X3
	0x0363F0EC MOV X22, X2
	0x0363F0F0 MOV X20, X1
	0x0363F0F4 MOV X19, X0
	0x0363F0F8 TBNZ X8, 0x0, 0x363F140
	0x0363F0FC ADRP X0, 0xAB6000
	0x0363F100 LDR X0, [X0 + 0x278]
	0x0363F104 BL 0x1C16CF4
	0x0363F108 ADRP X0, 0xAB6000
	0x0363F10C LDR X0, [X0 + 0x570]
	0x0363F110 BL 0x1C16CF4
	0x0363F114 ADRP X0, 0xAFD000
	0x0363F118 LDR X0, [X0 + 0x370]
	0x0363F11C BL 0x1C16CF4
	0x0363F120 ADRP X0, 0xAFD000
	0x0363F124 LDR X0, [X0 + 0x378]
	0x0363F128 BL 0x1C16CF4
	0x0363F12C ADRP X0, 0xAFD000
	0x0363F130 LDR X0, [X0 + 0x380]
	0x0363F134 BL 0x1C16CF4
	0x0363F138 MOVZ W8, 0x1
	0x0363F13C STRB W8, [X25 + 0x570]
	0x0363F140 LDR X8, [X24]
	0x0363F144 LDR X8, [X8 + 0xB8]
	0x0363F148 LDR X8, [X8]
	0x0363F14C STP X8, X8, [X19 + 0x90]
	0x0363F150 LDR X0, [X23]
	0x0363F154 LDR W8, [X0 + 0xE0]
	0x0363F158 CBNZ W8, 0x363F160
	0x0363F15C BL 0x1C16DFC
	0x0363F160 MOVN X0, 0x0
	0x0363F164 MOV X1, X31
	0x0363F168 BL 0x339481C
	0x0363F16C STR X0, [X19 + 0xA0]
	0x0363F170 MOV X0, X19
	0x0363F174 MOV X1, X20
	0x0363F178 MOV X2, X22
	0x0363F17C MOV X3, X21
	0x0363F180 MOV X4, X31
	0x0363F184 BL 0x3394DF8
	0x0363F188 CBZ X20, 0x363F1F4
	0x0363F18C ADRP X8, 0xAFD000
	0x0363F190 LDR X8, [X8 + 0x380]
	0x0363F194 ADRP X21, 0xAFD000
	0x0363F198 ADRP X22, 0xAFD000
	0x0363F19C MOV X0, X20
	0x0363F1A0 LDR X1, [X8]
	0x0363F1A4 LDR X21, [X21 + 0x370]
	0x0363F1A8 LDR X22, [X22 + 0x378]
	0x0363F1AC MOV X2, X31
	0x0363F1B0 BL 0x32A9F64
	0x0363F1B4 STR X0, [X19 + 0x90]
	0x0363F1B8 LDR X1, [X21]
	0x0363F1BC MOV X0, X20
	0x0363F1C0 MOV X2, X31
	0x0363F1C4 BL 0x32A9F64
	0x0363F1C8 STR X0, [X19 + 0x98]
	0x0363F1CC LDR X1, [X22]
	0x0363F1D0 MOV X0, X20
	0x0363F1D4 MOV X2, X31
	0x0363F1D8 BL 0x32A9C7C
	0x0363F1DC STR X0, [X19 + 0xA0]
	0x0363F1E0 LDP X20, X19, [X31 + 0x30]
	0x0363F1E4 LDP X22, X21, [X31 + 0x20]
	0x0363F1E8 LDP X24, X23, [X31 + 0x10]
	0x0363F1EC LDP X30, X25, [X31], #0x40
	0x0363F1F0 RET
	0x0363F1F4 BL 0x1C16F20
	0x0363F1F8 STP X30, X23, [X31 - 0x30]!
	0x0363F1FC STP X22, X21, [X31 + 0x10]
	0x0363F200 STP X20, X19, [X31 + 0x20]
	0x0363F204 ADRP X23, 0xDA1000
	0x0363F208 LDRB W8, [X23 + 0x571]
	0x0363F20C MOV X21, X3
	0x0363F210 MOV X22, X2
	0x0363F214 MOV X19, X1
	0x0363F218 MOV X20, X0
	0x0363F21C TBNZ X8, 0x0, 0x363F258
	0x0363F220 ADRP X0, 0xAB6000
	0x0363F224 LDR X0, [X0 + 0x570]
	0x0363F228 BL 0x1C16CF4
	0x0363F22C ADRP X0, 0xAFD000
	0x0363F230 LDR X0, [X0 + 0x370]
	0x0363F234 BL 0x1C16CF4
	0x0363F238 ADRP X0, 0xAFD000
	0x0363F23C LDR X0, [X0 + 0x378]
	0x0363F240 BL 0x1C16CF4
	0x0363F244 ADRP X0, 0xAFD000
	0x0363F248 LDR X0, [X0 + 0x380]
	0x0363F24C BL 0x1C16CF4
	0x0363F250 MOVZ W8, 0x1
	0x0363F254 STRB W8, [X23 + 0x571]
	0x0363F258 MOV X0, X20
	0x0363F25C MOV X1, X19
	0x0363F260 MOV X2, X22
	0x0363F264 MOV X3, X21
	0x0363F268 MOV X4, X31
	0x0363F26C BL 0x33B3620
	0x0363F270 CBZ X19, 0x363F2F0
	0x0363F274 ADRP X8, 0xAFD000
	0x0363F278 LDR X8, [X8 + 0x380]
	0x0363F27C LDR X2, [X20 + 0x90]
	0x0363F280 ADRP X22, 0xAFD000
	0x0363F284 ADRP X23, 0xAB6000
	0x0363F288 LDR X1, [X8]
	0x0363F28C ADRP X21, 0xAFD000
	0x0363F290 LDR X22, [X22 + 0x370]
	0x0363F294 LDR X23, [X23 + 0x570]
	0x0363F298 LDR X21, [X21 + 0x378]
	0x0363F29C MOV X0, X19
	0x0363F2A0 MOV X3, X31
	0x0363F2A4 BL 0x32A8BF0
	0x0363F2A8 LDR X2, [X20 + 0x98]
	0x0363F2AC LDR X1, [X22]
	0x0363F2B0 MOV X0, X19
	0x0363F2B4 MOV X3, X31
	0x0363F2B8 BL 0x32A8BF0
	0x0363F2BC LDR X0, [X23]
	0x0363F2C0 LDR X20, [X20 + 0xA0]
	0x0363F2C4 LDR W8, [X0 + 0xE0]
	0x0363F2C8 CBNZ W8, 0x363F2D0
	0x0363F2CC BL 0x1C16DFC
	0x0363F2D0 LDR X1, [X21]
	0x0363F2D4 MOV X0, X19
	0x0363F2D8 MOV X2, X20
	0x0363F2DC LDP X20, X19, [X31 + 0x20]
	0x0363F2E0 LDP X22, X21, [X31 + 0x10]
	0x0363F2E4 MOV X3, X31
	0x0363F2E8 LDP X30, X23, [X31], #0x30
	0x0363F2EC B 0x32A8FFC
	0x0363F2F0 BL 0x1C16F20
	0x0363F2F4 LDR X0, [X0 + 0x90]
	0x0363F2F8 RET
	0x0363F2FC LDR X0, [X0 + 0x98]
	0x0363F300 RET
	0x0363F304 LDR X0, [X0 + 0xA0]
	0x0363F308 RET
	0x0363F30C STP X30, X21, [X31 - 0x20]!
	0x0363F310 STP X20, X19, [X31 + 0x10]
	0x0363F314 MOV W20, W1
	0x0363F318 MOV X1, X31
	0x0363F31C MOV W19, W2
	0x0363F320 MOV X21, X0
	0x0363F324 BL 0x33BDD8C
	0x0363F328 STR W20, [X21 + 0x10]
	0x0363F32C STR W19, [X21 + 0x34]
	0x0363F330 LDP X20, X19, [X31 + 0x10]
	0x0363F334 LDP X30, X21, [X31], #0x20
	0x0363F338 RET
	0x0363F33C STR X30, [X31 - 0x30]!
	0x0363F340 STP X22, X21, [X31 + 0x10]
	0x0363F344 STP X20, X19, [X31 + 0x20]
	0x0363F348 MOV W21, W1
	0x0363F34C MOV X1, X31
	0x0363F350 MOV W19, W3
	0x0363F354 MOV W20, W2
	0x0363F358 MOV X22, X0
	0x0363F35C BL 0x33BDD8C
	0x0363F360 STR W21, [X22 + 0x10]
	0x0363F364 STR W20, [X22 + 0x34]
	0x0363F368 STRH W19, [X22 + 0x28]
	0x0363F36C LDP X20, X19, [X31 + 0x20]
	0x0363F370 LDP X22, X21, [X31 + 0x10]
	0x0363F374 LDR X30, [X31], #0x30
	0x0363F378 RET
	0x0363F37C STR X30, [X31 - 0x30]!
	0x0363F380 STP X22, X21, [X31 + 0x10]
	0x0363F384 STP X20, X19, [X31 + 0x20]
	0x0363F388 MOV W21, W1
	0x0363F38C MOV X1, X31
	0x0363F390 MOV X19, X3
	0x0363F394 MOV W20, W2
	0x0363F398 MOV X22, X0
	0x0363F39C BL 0x33BDD8C
	0x0363F3A0 STR W21, [X22 + 0x10]
	0x0363F3A4 STR W20, [X22 + 0x34]
	0x0363F3A8 STR X19, [X22 + 0x20]
	0x0363F3AC LDP X20, X19, [X31 + 0x20]
	0x0363F3B0 LDP X22, X21, [X31 + 0x10]
	0x0363F3B4 LDR X30, [X31], #0x30
	0x0363F3B8 RET
	0x0363F3BC STR X30, [X31 - 0x30]!
	0x0363F3C0 STP X22, X21, [X31 + 0x10]
	0x0363F3C4 STP X20, X19, [X31 + 0x20]
	0x0363F3C8 MOV W21, W1
	0x0363F3CC MOV X1, X31
	0x0363F3D0 MOV W19, W3
	0x0363F3D4 MOV W20, W2
	0x0363F3D8 MOV X22, X0
	0x0363F3DC BL 0x33BDD8C
	0x0363F3E0 STR W21, [X22 + 0x10]
	0x0363F3E4 STR W20, [X22 + 0x34]
	0x0363F3E8 STR W19, [X22 + 0x2C]
	0x0363F3EC LDP X20, X19, [X31 + 0x20]
	0x0363F3F0 LDP X22, X21, [X31 + 0x10]
	0x0363F3F4 LDR X30, [X31], #0x30
	0x0363F3F8 RET
	0x0363F3FC STP X30, X23, [X31 - 0x30]!
	0x0363F400 STP X22, X21, [X31 + 0x10]
	0x0363F404 STP X20, X19, [X31 + 0x20]
	0x0363F408 MOV W22, W1
	0x0363F40C MOV X1, X31
	0x0363F410 MOV W19, W4
	0x0363F414 MOV W20, W3
	0x0363F418 MOV W21, W2
	0x0363F41C MOV X23, X0
	0x0363F420 BL 0x33BDD8C
	0x0363F424 STR W22, [X23 + 0x10]
	0x0363F428 STP W19, W21, [X23 + 0x30]
	0x0363F42C STR W20, [X23 + 0x2C]
	0x0363F430 LDP X20, X19, [X31 + 0x20]
	0x0363F434 LDP X22, X21, [X31 + 0x10]
	0x0363F438 LDP X30, X23, [X31], #0x30
	0x0363F43C RET
	0x0363F440 LDRB W8, [X0 + 0x34]
	0x0363F444 UBFM W0, W8, 0x6, 0x6
	0x0363F448 RET
	0x0363F44C STR X30, [X31 - 0x20]!
	0x0363F450 STP X20, X19, [X31 + 0x10]
	0x0363F454 ADRP X20, 0xDA1000
	0x0363F458 LDRB W8, [X20 + 0x572]
	0x0363F45C MOV X19, X0
	0x0363F460 TBNZ X8, 0x0, 0x363F484
	0x0363F464 ADRP X0, 0xAFD000
	0x0363F468 LDR X0, [X0 + 0x388]
	0x0363F46C BL 0x1C16CF4
	0x0363F470 ADRP X0, 0xAFD000
	0x0363F474 LDR X0, [X0 + 0x2D0]
	0x0363F478 BL 0x1C16CF4
	0x0363F47C MOVZ W8, 0x1
	0x0363F480 STRB W8, [X20 + 0x572]
	0x0363F484 LDRB W8, [X19 + 0x34]
	0x0363F488 TBZ X8, 0x6, 0x363F4B8
	0x0363F48C LDR W8, [X19 + 0x10]
	0x0363F490 CMP W8, 0x19
	0x0363F494 B.NE 0x363F4B8
	0x0363F498 LDR X0, [X19 + 0x18]
	0x0363F49C CBZ X0, 0x363F4B8
	0x0363F4A0 ADRP X8, 0xAFD000
	0x0363F4A4 LDR W2, [X0 + 0x18]
	0x0363F4A8 LDR X8, [X8 + 0x388]
	0x0363F4AC MOV W1, W31
	0x0363F4B0 LDR X3, [X8]
	0x0363F4B4 BL 0x301DBB0
	0x0363F4B8 MOV X0, X19
	0x0363F4BC LDP X20, X19, [X31 + 0x10]
	0x0363F4C0 LDR X30, [X31], #0x20
	0x0363F4C4 RET
	0x0363F4C8 LDR W8, [X0 + 0x10]
	0x0363F4CC STP W2, W3, [X0 + 0x2C]
	0x0363F4D0 ADD W8, W1, W8
	0x0363F4D4 SUB W8, W8, 0x9
	0x0363F4D8 STR W8, [X0 + 0x10]
	0x0363F4DC RET
	0x0363F4E0 STR X30, [X31 - 0x10]!
	0x0363F4E4 LDR W8, [X0 + 0x10]
	0x0363F4E8 SUB W9, W8, 0x18
	0x0363F4EC CMP W9, 0x5
	0x0363F4F0 B.HI 0x363F514
	0x0363F4F4 ADRP X8, 0xFFFFFFFFFD558000
	0x0363F4F8 ADD X8, X8, 0x4B4
	0x0363F4FC ADR X10, 0x10
	0x0363F500 LDRB W11, [X8, X9, LSL]
	0x0363F504 ADD X10, X10, X11, 0x2, LSL
	0x0363F508 BR X10
	0x0363F50C LDR X30, [X31], #0x10
	0x0363F510 B 0x363FCB8
	0x0363F514 CMP W8, 0x5
	0x0363F518 B.EQ 0x363F524
	0x0363F51C CMP W8, 0xB
	0x0363F520 B.NE 0x363F528
	0x0363F524 BL 0x363FE6C
	0x0363F528 LDR X30, [X31], #0x10
	0x0363F52C RET
	0x0363F530 LDR X30, [X31], #0x10
	0x0363F534 B 0x363F548
	0x0363F538 LDR X30, [X31], #0x10
	0x0363F53C B 0x363F91C
	0x0363F540 LDR X30, [X31], #0x10
	0x0363F544 B 0x363FE40
	0x0363F548 STP X29, X30, [X31 - 0x60]!
	0x0363F54C STP X28, X27, [X31 + 0x10]
	0x0363F550 STP X26, X25, [X31 + 0x20]
	0x0363F554 STP X24, X23, [X31 + 0x30]
	0x0363F558 STP X22, X21, [X31 + 0x40]
	0x0363F55C STP X20, X19, [X31 + 0x50]
	0x0363F560 ADRP X20, 0xDA1000
	0x0363F564 LDRB W8, [X20 + 0x576]
	0x0363F568 MOV X19, X0
	0x0363F56C TBNZ X8, 0x0, 0x363F5CC
	0x0363F570 ADRP X0, 0xAFD000
	0x0363F574 LDR X0, [X0 + 0x390]
	0x0363F578 BL 0x1C16CF4
	0x0363F57C ADRP X0, 0xAFD000
	0x0363F580 LDR X0, [X0 + 0x398]
	0x0363F584 BL 0x1C16CF4
	0x0363F588 ADRP X0, 0xAFD000
	0x0363F58C LDR X0, [X0 + 0x2D0]
	0x0363F590 BL 0x1C16CF4
	0x0363F594 ADRP X0, 0xAFD000
	0x0363F598 LDR X0, [X0 + 0x2D8]
	0x0363F59C BL 0x1C16CF4
	0x0363F5A0 ADRP X0, 0xAFD000
	0x0363F5A4 LDR X0, [X0 + 0x3A0]
	0x0363F5A8 BL 0x1C16CF4
	0x0363F5AC ADRP X0, 0xAFC000
	0x0363F5B0 LDR X0, [X0 + 0x8E0]
	0x0363F5B4 BL 0x1C16CF4
	0x0363F5B8 ADRP X0, 0xAFD000
	0x0363F5BC LDR X0, [X0 + 0x3A8]
	0x0363F5C0 BL 0x1C16CF4
	0x0363F5C4 MOVZ W8, 0x1
	0x0363F5C8 STRB W8, [X20 + 0x576]
	0x0363F5CC LDR X0, [X19 + 0x18]
	0x0363F5D0 CBZ X0, 0x363F8D0
	0x0363F5D4 ADRP X25, 0xAFD000
	0x0363F5D8 ADRP X26, 0xAFD000
	0x0363F5DC LDR X25, [X25 + 0x2D8]
	0x0363F5E0 LDR X26, [X26 + 0x3A0]
	0x0363F5E4 MOV W29, W31
	0x0363F5E8 MOV W28, W31
	0x0363F5EC MOV W27, W31
	0x0363F5F0 MOV W21, W31
	0x0363F5F4 MOV W20, W31
	0x0363F5F8 LDR W8, [X0 + 0x18]
	0x0363F5FC CMP W21, W8
	0x0363F600 B.GE 0x363F890
	0x0363F604 LDR X2, [X25]
	0x0363F608 MOV W1, W21
	0x0363F60C BL 0x301BCCC
	0x0363F610 CMP W21, W20
	0x0363F614 MOV X22, X0
	0x0363F618 B.LE 0x363F634
	0x0363F61C LDR X0, [X19 + 0x18]
	0x0363F620 CBZ X0, 0x363F88C
	0x0363F624 LDR X3, [X26]
	0x0363F628 MOV W1, W20
	0x0363F62C MOV X2, X22
	0x0363F630 BL 0x301BD20
	0x0363F634 CBZ X22, 0x363F88C
	0x0363F638 LDR W8, [X22 + 0x10]
	0x0363F63C CMP W8, 0x15
	0x0363F640 B.GT 0x363F6DC
	0x0363F644 CMP W8, 0x9
	0x0363F648 B.EQ 0x363F654
	0x0363F64C CMP W8, 0xB
	0x0363F650 B.NE 0x363F73C
	0x0363F654 LDR W9, [X22 + 0x34]
	0x0363F658 MOVZ W11, 0x41
	0x0363F65C EOR W10, W29, 0x1
	0x0363F660 AND W24, W9, W11, 0x0
	0x0363F664 CMP W27, W24
	0x0363F668 CSET W9, NE
	0x0363F66C ORR W9, W9, W10, 0x0
	0x0363F670 CMP W8, 0xB
	0x0363F674 ORR W8, W28, W9, 0x0
	0x0363F678 B.NE 0x363F72C
	0x0363F67C TBNZ X8, 0x0, 0x363F6AC
	0x0363F680 ADRP X8, 0xAFC000
	0x0363F684 LDR X8, [X8 + 0x8E0]
	0x0363F688 LDR X23, [X22 + 0x20]
	0x0363F68C LDR X0, [X8]
	0x0363F690 LDR W8, [X0 + 0xE0]
	0x0363F694 CBNZ W8, 0x363F69C
	0x0363F698 BL 0x1C16DFC
	0x0363F69C MOV X0, X23
	0x0363F6A0 MOV X1, X31
	0x0363F6A4 BL 0x3635324
	0x0363F6A8 TBNZ X0, 0x0, 0x363F770
	0x0363F6AC ADRP X8, 0xAFC000
	0x0363F6B0 LDR X8, [X8 + 0x8E0]
	0x0363F6B4 LDR X22, [X22 + 0x20]
	0x0363F6B8 LDR X0, [X8]
	0x0363F6BC LDR W8, [X0 + 0xE0]
	0x0363F6C0 CBNZ W8, 0x363F6C8
	0x0363F6C4 BL 0x1C16DFC
	0x0363F6C8 MOV X0, X22
	0x0363F6CC MOV X1, X31
	0x0363F6D0 BL 0x3635324
	0x0363F6D4 EOR W28, W0, 0x1
	0x0363F6D8 B 0x363F734
	0x0363F6DC CMP W8, 0x16
	0x0363F6E0 B.EQ 0x363F768
	0x0363F6E4 CMP W8, 0x18
	0x0363F6E8 B.NE 0x363F73C
	0x0363F6EC LDR X8, [X22 + 0x18]
	0x0363F6F0 CBZ X8, 0x363F88C
	0x0363F6F4 MOV W23, W31
	0x0363F6F8 LDR W9, [X8 + 0x18]
	0x0363F6FC CMP W23, W9
	0x0363F700 B.GE 0x363F748
	0x0363F704 LDR X2, [X25]
	0x0363F708 MOV X0, X8
	0x0363F70C MOV W1, W23
	0x0363F710 BL 0x301BCCC
	0x0363F714 CBZ X0, 0x363F88C
	0x0363F718 STR X19, [X0 + 0x38]
	0x0363F71C LDR X8, [X22 + 0x18]
	0x0363F720 ADD W23, W23, 0x1
	0x0363F724 CBNZ X8, 0x363F6F8
	0x0363F728 B 0x363F88C
	0x0363F72C TBZ X8, 0x0, 0x363F770
	0x0363F730 MOV W28, W31
	0x0363F734 MOVZ W29, 0x1
	0x0363F738 B 0x363F878
	0x0363F73C MOV W28, W31
	0x0363F740 MOV W29, W31
	0x0363F744 B 0x363F874
	0x0363F748 LDR X0, [X19 + 0x18]
	0x0363F74C CBZ X0, 0x363F88C
	0x0363F750 ADRP X9, 0xAFD000
	0x0363F754 LDR X9, [X9 + 0x390]
	0x0363F758 ADD W1, W21, 0x1
	0x0363F75C MOV X2, X8
	0x0363F760 LDR X3, [X9]
	0x0363F764 BL 0x301D118
	0x0363F768 SUB W20, W20, 0x1
	0x0363F76C B 0x363F874
	0x0363F770 LDR X0, [X19 + 0x18]
	0x0363F774 CBZ X0, 0x363F88C
	0x0363F778 LDR X2, [X25]
	0x0363F77C SUB W20, W20, 0x1
	0x0363F780 MOV W1, W20
	0x0363F784 BL 0x301BCCC
	0x0363F788 CBZ X0, 0x363F88C
	0x0363F78C LDR W8, [X0 + 0x10]
	0x0363F790 MOV X23, X0
	0x0363F794 CMP W8, 0x9
	0x0363F798 B.NE 0x363F7D0
	0x0363F79C ADRP X8, 0xAFC000
	0x0363F7A0 LDR X8, [X8 + 0x8E0]
	0x0363F7A4 LDR X0, [X8]
	0x0363F7A8 BL 0x1C16F10
	0x0363F7AC MOV X1, X31
	0x0363F7B0 MOV X24, X0
	0x0363F7B4 BL 0x363414C
	0x0363F7B8 CBZ X24, 0x363F88C
	0x0363F7BC LDRH W1, [X23 + 0x28]
	0x0363F7C0 MOV X0, X24
	0x0363F7C4 MOV X2, X31
	0x0363F7C8 BL 0x363427C
	0x0363F7CC B 0x363F7FC
	0x0363F7D0 ADRP X8, 0xAFC000
	0x0363F7D4 LDR X8, [X8 + 0x8E0]
	0x0363F7D8 LDR X24, [X23 + 0x20]
	0x0363F7DC LDR X0, [X8]
	0x0363F7E0 LDR W8, [X0 + 0xE0]
	0x0363F7E4 CBNZ W8, 0x363F7EC
	0x0363F7E8 BL 0x1C16DFC
	0x0363F7EC MOV X0, X24
	0x0363F7F0 MOV X1, X31
	0x0363F7F4 BL 0x3635CFC
	0x0363F7F8 MOV X24, X0
	0x0363F7FC LDR W8, [X22 + 0x10]
	0x0363F800 CMP W8, 0x9
	0x0363F804 B.NE 0x363F820
	0x0363F808 CBZ X24, 0x363F88C
	0x0363F80C LDRH W1, [X22 + 0x28]
	0x0363F810 MOV X0, X24
	0x0363F814 MOV X2, X31
	0x0363F818 BL 0x363427C
	0x0363F81C B 0x363F85C
	0x0363F820 ADRP X8, 0xAFC000
	0x0363F824 LDR X8, [X8 + 0x8E0]
	0x0363F828 LDR X22, [X22 + 0x20]
	0x0363F82C LDR X0, [X8]
	0x0363F830 LDR W8, [X0 + 0xE0]
	0x0363F834 CBNZ W8, 0x363F83C
	0x0363F838 BL 0x1C16DFC
	0x0363F83C MOV X0, X22
	0x0363F840 MOV X1, X31
	0x0363F844 BL 0x3635CFC
	0x0363F848 CBZ X24, 0x363F88C
	0x0363F84C MOV X1, X0
	0x0363F850 MOV X0, X24
	0x0363F854 MOV X2, X31
	0x0363F858 BL 0x36343A0
	0x0363F85C MOVZ W8, 0xB
	0x0363F860 MOV X0, X24
	0x0363F864 MOV X1, X31
	0x0363F868 STR W8, [X23 + 0x10]
	0x0363F86C BL 0x3635FCC
	0x0363F870 STR X0, [X23 + 0x20]
	0x0363F874 MOV W24, W27
	0x0363F878 LDR X0, [X19 + 0x18]
	0x0363F87C ADD W21, W21, 0x1
	0x0363F880 ADD W20, W20, 0x1
	0x0363F884 MOV W27, W24
	0x0363F888 CBNZ X0, 0x363F5F8
	0x0363F88C BL 0x1C16F20
	0x0363F890 SUBS W2, W21, W20
	0x0363F894 B.LE 0x363F8AC
	0x0363F898 ADRP X8, 0xAFD000
	0x0363F89C LDR X8, [X8 + 0x398]
	0x0363F8A0 MOV W1, W20
	0x0363F8A4 LDR X3, [X8]
	0x0363F8A8 BL 0x301DAD8
	0x0363F8AC MOV X0, X19
	0x0363F8B0 LDP X20, X19, [X31 + 0x50]
	0x0363F8B4 LDP X22, X21, [X31 + 0x40]
	0x0363F8B8 LDP X24, X23, [X31 + 0x30]
	0x0363F8BC LDP X26, X25, [X31 + 0x20]
	0x0363F8C0 LDP X28, X27, [X31 + 0x10]
	0x0363F8C4 MOVZ W1, 0x16
	0x0363F8C8 LDP X29, X30, [X31], #0x60
	0x0363F8CC B 0x363FF88
	0x0363F8D0 ADRP X8, 0xAFD000
	0x0363F8D4 LDR W20, [X19 + 0x34]
	0x0363F8D8 LDR X8, [X8 + 0x3A8]
	0x0363F8DC LDR X0, [X8]
	0x0363F8E0 BL 0x1C16F10
	0x0363F8E4 MOV X1, X31
	0x0363F8E8 MOV X19, X0
	0x0363F8EC BL 0x33BDD8C
	0x0363F8F0 MOVZ W8, 0x16
	0x0363F8F4 STR W8, [X19 + 0x10]
	0x0363F8F8 STR W20, [X19 + 0x34]
	0x0363F8FC MOV X0, X19
	0x0363F900 LDP X20, X19, [X31 + 0x50]
	0x0363F904 LDP X22, X21, [X31 + 0x40]
	0x0363F908 LDP X24, X23, [X31 + 0x30]
	0x0363F90C LDP X26, X25, [X31 + 0x20]
	0x0363F910 LDP X28, X27, [X31 + 0x10]
	0x0363F914 LDP X29, X30, [X31], #0x60
	0x0363F918 RET
	0x0363F91C STP X29, X30, [X31 - 0x60]!
	0x0363F920 STP X28, X27, [X31 + 0x10]
	0x0363F924 STP X26, X25, [X31 + 0x20]
	0x0363F928 STP X24, X23, [X31 + 0x30]
	0x0363F92C STP X22, X21, [X31 + 0x40]
	0x0363F930 STP X20, X19, [X31 + 0x50]
	0x0363F934 ADRP X20, 0xDA1000
	0x0363F938 LDRB W8, [X20 + 0x577]
	0x0363F93C MOV X19, X0
	0x0363F940 TBNZ X8, 0x0, 0x363F9B8
	0x0363F944 ADRP X0, 0xAB6000
	0x0363F948 LDR X0, [X0 + 0x170]
	0x0363F94C BL 0x1C16CF4
	0x0363F950 ADRP X0, 0xABD000
	0x0363F954 LDR X0, [X0 + 0x9E8]
	0x0363F958 BL 0x1C16CF4
	0x0363F95C ADRP X0, 0xAB6000
	0x0363F960 LDR X0, [X0 + 0xC48]
	0x0363F964 BL 0x1C16CF4
	0x0363F968 ADRP X0, 0xAFD000
	0x0363F96C LDR X0, [X0 + 0x390]
	0x0363F970 BL 0x1C16CF4
	0x0363F974 ADRP X0, 0xAFD000
	0x0363F978 LDR X0, [X0 + 0x398]
	0x0363F97C BL 0x1C16CF4
	0x0363F980 ADRP X0, 0xAFD000
	0x0363F984 LDR X0, [X0 + 0x2D0]
	0x0363F988 BL 0x1C16CF4
	0x0363F98C ADRP X0, 0xAFD000
	0x0363F990 LDR X0, [X0 + 0x2D8]
	0x0363F994 BL 0x1C16CF4
	0x0363F998 ADRP X0, 0xAFD000
	0x0363F99C LDR X0, [X0 + 0x3A0]
	0x0363F9A0 BL 0x1C16CF4
	0x0363F9A4 ADRP X0, 0xAFD000
	0x0363F9A8 LDR X0, [X0 + 0x3A8]
	0x0363F9AC BL 0x1C16CF4
	0x0363F9B0 MOVZ W8, 0x1
	0x0363F9B4 STRB W8, [X20 + 0x577]
	0x0363F9B8 LDR X0, [X19 + 0x18]
	0x0363F9BC CBZ X0, 0x363FC6C
	0x0363F9C0 ADRP X26, 0xAFD000
	0x0363F9C4 ADRP X27, 0xAFD000
	0x0363F9C8 LDR X26, [X26 + 0x2D8]
	0x0363F9CC LDR X27, [X27 + 0x3A0]
	0x0363F9D0 MOV W24, W31
	0x0363F9D4 MOV W29, W31
	0x0363F9D8 MOV W21, W31
	0x0363F9DC MOV W20, W31
	0x0363F9E0 MOVZ W25, 0x41
	0x0363F9E4 LDR W8, [X0 + 0x18]
	0x0363F9E8 CMP W21, W8
	0x0363F9EC B.GE 0x363FC2C
	0x0363F9F0 LDR X2, [X26]
	0x0363F9F4 MOV W1, W21
	0x0363F9F8 BL 0x301BCCC
	0x0363F9FC CMP W21, W20
	0x0363FA00 MOV X22, X0
	0x0363FA04 B.LE 0x363FA20
	0x0363FA08 LDR X0, [X19 + 0x18]
	0x0363FA0C CBZ X0, 0x363FC28
	0x0363FA10 LDR X3, [X27]
	0x0363FA14 MOV W1, W20
	0x0363FA18 MOV X2, X22
	0x0363FA1C BL 0x301BD20
	0x0363FA20 CBZ X22, 0x363FC28
	0x0363FA24 LDR W8, [X22 + 0x10]
	0x0363FA28 CMP W8, 0x16
	0x0363FA2C B.GT 0x363FB28
	0x0363FA30 CMP W8, 0x9
	0x0363FA34 B.EQ 0x363FA40
	0x0363FA38 CMP W8, 0xC
	0x0363FA3C B.NE 0x363FB88
	0x0363FA40 LDR W28, [X22 + 0x34]
	0x0363FA44 AND W8, W28, W25, 0x0
	0x0363FA48 CMP W29, W8
	0x0363FA4C CSET W9, NE
	0x0363FA50 ORN W9, W9, W24, 0x0
	0x0363FA54 TBNZ X9, 0x0, 0x363FB90
	0x0363FA58 LDR X0, [X19 + 0x18]
	0x0363FA5C CBZ X0, 0x363FC28
	0x0363FA60 LDR X2, [X26]
	0x0363FA64 SUB W20, W20, 0x1
	0x0363FA68 MOV W1, W20
	0x0363FA6C BL 0x301BCCC
	0x0363FA70 CBZ X0, 0x363FC28
	0x0363FA74 LDR W8, [X0 + 0x10]
	0x0363FA78 MOV X23, X0
	0x0363FA7C CMP W8, 0x9
	0x0363FA80 B.NE 0x363FAE8
	0x0363FA84 MOVZ W8, 0xC
	0x0363FA88 STR W8, [X23 + 0x10]
	0x0363FA8C ADRP X8, 0xAB6000
	0x0363FA90 LDR X8, [X8 + 0xC48]
	0x0363FA94 LDRH W24, [X23 + 0x28]
	0x0363FA98 LDR X0, [X8]
	0x0363FA9C LDR W8, [X0 + 0xE0]
	0x0363FAA0 CBNZ W8, 0x363FAA8
	0x0363FAA4 BL 0x1C16DFC
	0x0363FAA8 MOV X0, X31
	0x0363FAAC BL 0x3338524
	0x0363FAB0 ADRP X8, 0xABD000
	0x0363FAB4 LDR X8, [X8 + 0x9E8]
	0x0363FAB8 MOV X25, X0
	0x0363FABC LDR X8, [X8]
	0x0363FAC0 LDR W9, [X8 + 0xE0]
	0x0363FAC4 CBNZ W9, 0x363FAD0
	0x0363FAC8 MOV X0, X8
	0x0363FACC BL 0x1C16DFC
	0x0363FAD0 MOV W0, W24
	0x0363FAD4 MOV X1, X25
	0x0363FAD8 MOV X2, X31
	0x0363FADC BL 0x332226C
	0x0363FAE0 MOVZ W25, 0x41
	0x0363FAE4 STR X0, [X23 + 0x20]
	0x0363FAE8 LDR W8, [X22 + 0x10]
	0x0363FAEC TBNZ X28, 0x6, 0x363FB9C
	0x0363FAF0 LDR X24, [X23 + 0x20]
	0x0363FAF4 CMP W8, 0x9
	0x0363FAF8 B.NE 0x363FBF4
	0x0363FAFC ADRP X8, 0xAB6000
	0x0363FB00 LDR X8, [X8 + 0x170]
	0x0363FB04 LDR X0, [X8]
	0x0363FB08 LDR W8, [X0 + 0xE0]
	0x0363FB0C CBNZ W8, 0x363FB14
	0x0363FB10 BL 0x1C16DFC
	0x0363FB14 ADD X0, X22, 0x28
	0x0363FB18 MOV X1, X31
	0x0363FB1C BL 0x330A76C
	0x0363FB20 MOV X1, X0
	0x0363FB24 B 0x363FBF8

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X20, 0xDA3000
	014 Move W8, [X20+1389]
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0xAFE000
	021 Move X0, [X0+2272]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X20+1389], W8
	025 Move X23, 0xAFE000
	026 Move X23, [X23+2272]
	027 Move X0, X19
	028 Move W1, W31
	029 Call RegexInterpreter.Goto, X0, X1
	030 Move X25, -44720128
	031 Move X27, -44720128
	032 Move X28, -44720128
	033 Move TEMP, 0
	034 Not TEMP
	035 Move W24, TEMP
	036 Add X25, X25, 1192
	037 Move W26, 1
	038 Add X27, X27, 1124
	039 Add X28, X28, 1038
	040 Move TEMP, 0
	041 Not TEMP
	042 Move W20, TEMP
	043 Move TEMP, X20
	044 And TEMP, TEMP, -2147483648
	045 Compare TEMP, -2147483648
	046 JumpIfNotEqual {48}
	047 Move W29, W20
	048 Move X0, X19
	049 Move W1, W20
	050 Call RegexInterpreter.Advance, X0, X1
	051 Move TEMP, 0
	052 Not TEMP
	053 Move W29, TEMP
	054 Move W8, [X19+116]
	055 Compare W8, 0
	056 JumpIfNotEqual {59}
	057 Move X0, X19
	058 Call RegexRunner.DoCheckTimeout, X0
	059 Move W8, [X19+144]
	060 NotImplemented "Instruction CMP not yet implemented."
	061 NotImplemented "Instruction ADR not yet implemented."
	062 NotImplemented "Instruction LDRH not yet implemented."
	063 Add X9, X9, X10
	064 CallNoReturn X9
	065 Move W1, 1
	066 Move X0, X19
	067 Call RegexInterpreter.Operand, X0, X1
	068 Move W8, [X19+152]
	069 Compare W8, 0
	070 JumpIfEqual {74}
	071 Move W2, [X19+40]
	072 Move W8, [X19+16]
	073 Subtract W8, W2, W8
	074 Move W8, [X19+20]
	075 Move W2, [X19+40]
	076 Subtract W8, W8, W2
	077 NotImplemented "Instruction CMP not yet implemented."
	078 NotImplemented "Instruction CSEL not yet implemented."
	079 Subtract W1, W8, 1
	080 Move W20, 2
	081 Move W8, [X19+72]
	082 Move X0, X19
	083 Add W8, W8, 1
	084 Move [X19+72], W8
	085 Call RegexInterpreter.StackPeek, X0
	086 Move W2, [X19+40]
	087 Move W1, W0
	088 NotImplemented "Instruction CMP not yet implemented."
	089 Move X0, X19
	090 Call RegexInterpreter.StackPush, X0, X1
	091 Move X0, X19
	092 Call RegexInterpreter.StackPeek, X0
	093 Move W1, W0
	094 Subtract W9, W8, 131
	095 NotImplemented "Instruction CMP not yet implemented."
	096 NotImplemented "Instruction ADR not yet implemented."
	097 NotImplemented "Instruction LDRH not yet implemented."
	098 Add X8, X8, X10
	099 CallNoReturn X8
	100 Move W8, [X19+56]
	101 Move X0, X19
	102 Add W8, W8, 2
	103 Move [X19+56], W8
	104 Call RegexInterpreter.TrackPeek, X0
	105 Move W20, W0
	106 Move W1, 1
	107 Move X0, X19
	108 Call RegexInterpreter.TrackPeek, X0, X1
	109 Subtract W1, W20, 1
	110 Move W20, 2
	111 Move [X19+40], W0
	112 Move W8, [X19+152]
	113 NotImplemented "Instruction CMP not yet implemented."
	114 NotImplemented "Instruction CSNEG not yet implemented."
	115 Add W2, W8, W0
	116 Move W1, 1
	117 Move X0, X19
	118 Call RegexInterpreter.Operand, X0, X1
	119 Move W8, [X19+152]
	120 Move W9, 16
	121 Move W10, 40
	122 Move W11, 20
	123 NotImplemented "Instruction CMP not yet implemented."
	124 NotImplemented "Instruction CSEL not yet implemented."
	125 NotImplemented "Instruction CSEL not yet implemented."
	126 Move W9, [X19]
	127 Move W8, [X19]
	128 Subtract W8, W9, W8
	129 NotImplemented "Instruction CMP not yet implemented."
	130 Move W20, W0
	131 Move X0, X19
	132 Move W1, W31
	133 Call RegexInterpreter.Operand, X0, X1
	134 Move W21, W0
	135 Add W20, W20, 1
	136 Subtract W20, W20, 1
	137 NotImplemented "Instruction CMP not yet implemented."
	138 Move X0, X19
	139 Call RegexInterpreter.Forwardcharnext, X0
	140 And W8, W0, 0xFFFF
	141 NotImplemented "Instruction CMP not yet implemented."
	142 Move W1, 1
	143 Move X0, X19
	144 Call RegexInterpreter.Operand, X0, X1
	145 Move W8, [X19+152]
	146 Move W9, 16
	147 Move W10, 40
	148 Move W11, 20
	149 NotImplemented "Instruction CMP not yet implemented."
	150 NotImplemented "Instruction CSEL not yet implemented."
	151 NotImplemented "Instruction CSEL not yet implemented."
	152 Move W9, [X19]
	153 Move W8, [X19]
	154 Subtract W8, W9, W8
	155 NotImplemented "Instruction CMP not yet implemented."
	156 Move W20, W0
	157 Move X0, X19
	158 Move W1, W31
	159 Call RegexInterpreter.Operand, X0, X1
	160 Move W21, W0
	161 Add W20, W20, 1
	162 Subtract W20, W20, 1
	163 NotImplemented "Instruction CMP not yet implemented."
	164 Move X0, X19
	165 Call RegexInterpreter.Forwardcharnext, X0
	166 And W8, W0, 0xFFFF
	167 NotImplemented "Instruction CMP not yet implemented."
	168 Move W1, 1
	169 Move X0, X19
	170 Call RegexInterpreter.Operand, X0, X1
	171 Move W8, [X19+152]
	172 Move W9, 16
	173 Move W10, 40
	174 Move W11, 20
	175 NotImplemented "Instruction CMP not yet implemented."
	176 NotImplemented "Instruction CSEL not yet implemented."
	177 NotImplemented "Instruction CSEL not yet implemented."
	178 Move W9, [X19]
	179 Move W8, [X19]
	180 Subtract W8, W9, W8
	181 NotImplemented "Instruction CMP not yet implemented."
	182 Move X8, [X19+128]
	183 Compare X8, 0
	184 JumpIfEqual {1103}
	185 Move X21, [X8+24]
	186 Move W20, W0
	187 Move X0, X19
	188 Move W1, W31
	189 Call RegexInterpreter.Operand, X0, X1
	190 Compare X21, 0
	191 JumpIfEqual {1103}
	192 Move W8, [X21+24]
	193 NotImplemented "Instruction CMP not yet implemented."
	194 Add X8, X21, W0
	195 Move X21, [X8+32]
	196 Add W22, W20, 1
	197 Subtract W22, W22, 1
	198 NotImplemented "Instruction CMP not yet implemented."
	199 Move X0, X19
	200 Call RegexInterpreter.Forwardcharnext, X0
	201 Move X8, [X23]
	202 Move W20, W0
	203 Move W9, [X8+224]
	204 Compare W9, 0
	205 JumpIfNotEqual {208}
	206 Move X0, X8
	207 Call 0x1C17DFC
	208 Move W0, W20
	209 Move X1, X21
	210 Move X2, X31
	211 Call RegexCharClass.CharInClass, X0, X1
	212 Move TEMP, X0
	213 And TEMP, TEMP, 1
	214 Compare TEMP, 1
	215 JumpIfEqual {197}
	216 Move W1, 1
	217 Move X0, X19
	218 Call RegexInterpreter.Operand, X0, X1
	219 Move W8, [X19+152]
	220 Move W9, 16
	221 Move W10, 40
	222 Move W11, 20
	223 NotImplemented "Instruction CMP not yet implemented."
	224 NotImplemented "Instruction CSEL not yet implemented."
	225 NotImplemented "Instruction CSEL not yet implemented."
	226 Move W9, [X19]
	227 Move W8, [X19]
	228 Move W1, W31
	229 Subtract W8, W9, W8
	230 NotImplemented "Instruction CMP not yet implemented."
	231 NotImplemented "Instruction CSEL not yet implemented."
	232 Move X0, X19
	233 Call RegexInterpreter.Operand, X0, X1
	234 NotImplemented "Instruction CMP not yet implemented."
	235 Move W20, W0
	236 Move W22, W21
	237 Move X0, X19
	238 Call RegexInterpreter.Forwardcharnext, X0
	239 And W8, W0, 0xFFFF
	240 NotImplemented "Instruction CMP not yet implemented."
	241 Subtract W22, W22, 1
	242 Move W1, 1
	243 Move X0, X19
	244 Call RegexInterpreter.Operand, X0, X1
	245 Move W8, [X19+152]
	246 Move W9, 16
	247 Move W10, 40
	248 Move W11, 20
	249 NotImplemented "Instruction CMP not yet implemented."
	250 NotImplemented "Instruction CSEL not yet implemented."
	251 NotImplemented "Instruction CSEL not yet implemented."
	252 Move W9, [X19]
	253 Move W8, [X19]
	254 Move W1, W31
	255 Subtract W8, W9, W8
	256 NotImplemented "Instruction CMP not yet implemented."
	257 NotImplemented "Instruction CSEL not yet implemented."
	258 Move X0, X19
	259 Call RegexInterpreter.Operand, X0, X1
	260 NotImplemented "Instruction CMP not yet implemented."
	261 Move W20, W0
	262 Move W22, W21
	263 Move X0, X19
	264 Call RegexInterpreter.Forwardcharnext, X0
	265 And W8, W0, 0xFFFF
	266 NotImplemented "Instruction CMP not yet implemented."
	267 Subtract W22, W22, 1
	268 Move W22, W31
	269 Move W1, 1
	270 Move X0, X19
	271 Call RegexInterpreter.Operand, X0, X1
	272 Move W8, [X19+152]
	273 Move W9, 16
	274 Move W10, 40
	275 Move W11, 20
	276 NotImplemented "Instruction CMP not yet implemented."
	277 NotImplemented "Instruction CSEL not yet implemented."
	278 NotImplemented "Instruction CSEL not yet implemented."
	279 Move W9, [X19]
	280 Move W10, [X19]
	281 Move X8, [X19+128]
	282 Subtract W9, W9, W10
	283 NotImplemented "Instruction CMP not yet implemented."
	284 NotImplemented "Instruction CSEL not yet implemented."
	285 Compare X8, 0
	286 JumpIfEqual {1103}
	287 Move X20, [X8+24]
	288 Move X0, X19
	289 Move W1, W31
	290 Call RegexInterpreter.Operand, X0, X1
	291 Compare X20, 0
	292 JumpIfEqual {1103}
	293 Move W8, [X20+24]
	294 NotImplemented "Instruction CMP not yet implemented."
	295 NotImplemented "Instruction CMP not yet implemented."
	296 Add X8, X20, W0
	297 Move X20, [X8+32]
	298 Move W29, W22
	299 Move X0, X19
	300 Call RegexInterpreter.Forwardcharnext, X0
	301 Move X8, [X23]
	302 Move W21, W0
	303 Move W9, [X8+224]
	304 Compare W9, 0
	305 JumpIfNotEqual {308}
	306 Move X0, X8
	307 Call 0x1C17DFC
	308 Move W0, W21
	309 Move X1, X20
	310 Move X2, X31
	311 Call RegexCharClass.CharInClass, X0, X1
	312 Move TEMP, X0
	313 And TEMP, TEMP, 1
	314 Compare TEMP, 1
	315 JumpIfNotEqual {784}
	316 Subtract W29, W29, 1
	317 Move W29, W31
	318 Move W8, [X19+152]
	319 Move W9, 16
	320 Move W10, 40
	321 Move W11, 20
	322 NotImplemented "Instruction CMP not yet implemented."
	323 NotImplemented "Instruction CSEL not yet implemented."
	324 NotImplemented "Instruction CSEL not yet implemented."
	325 Move W9, [X19]
	326 Move W8, [X19]
	327 Subtract W8, W9, W8
	328 NotImplemented "Instruction CMP not yet implemented."
	329 Move X0, X19
	330 Call RegexInterpreter.Forwardcharnext, X0
	331 And W20, W0, 0xFFFF
	332 Move X0, X19
	333 Move W1, W31
	334 Call RegexInterpreter.Operand, X0, X1
	335 NotImplemented "Instruction CMP not yet implemented."
	336 Move W20, 1
	337 Move W8, [X19+152]
	338 Move W9, 16
	339 Move W10, 40
	340 Move W11, 20
	341 NotImplemented "Instruction CMP not yet implemented."
	342 NotImplemented "Instruction CSEL not yet implemented."
	343 NotImplemented "Instruction CSEL not yet implemented."
	344 Move W9, [X19]
	345 Move W8, [X19]
	346 Subtract W8, W9, W8
	347 NotImplemented "Instruction CMP not yet implemented."
	348 Move X0, X19
	349 Call RegexInterpreter.Forwardcharnext, X0
	350 And W20, W0, 0xFFFF
	351 Move X0, X19
	352 Move W1, W31
	353 Call RegexInterpreter.Operand, X0, X1
	354 NotImplemented "Instruction CMP not yet implemented."
	355 Move W20, 1
	356 Move W8, [X19+152]
	357 Move W9, 16
	358 Move W10, 40
	359 Move W11, 20
	360 NotImplemented "Instruction CMP not yet implemented."
	361 NotImplemented "Instruction CSEL not yet implemented."
	362 NotImplemented "Instruction CSEL not yet implemented."
	363 Move W9, [X19]
	364 Move W8, [X19]
	365 Subtract W8, W9, W8
	366 NotImplemented "Instruction CMP not yet implemented."
	367 Move X0, X19
	368 Call RegexInterpreter.Forwardcharnext, X0
	369 Move X8, [X19+128]
	370 Compare X8, 0
	371 JumpIfEqual {1103}
	372 Move X21, [X8+24]
	373 Move W20, W0
	374 Move X0, X19
	375 Move W1, W31
	376 Call RegexInterpreter.Operand, X0, X1
	377 Compare X21, 0
	378 JumpIfEqual {1103}
	379 Move W8, [X21+24]
	380 NotImplemented "Instruction CMP not yet implemented."
	381 Move X8, [X23]
	382 Add X9, X21, W0
	383 Move X21, [X9+32]
	384 Move W10, [X8+224]
	385 Compare W10, 0
	386 JumpIfNotEqual {389}
	387 Move X0, X8
	388 Call 0x1C17DFC
	389 Move W0, W20
	390 Move X1, X21
	391 Move X2, X31
	392 Call RegexCharClass.CharInClass, X0, X1
	393 Move X8, [X19+128]
	394 Compare X8, 0
	395 JumpIfEqual {1103}
	396 Move X20, [X8+24]
	397 Move X0, X19
	398 Move W1, W31
	399 Call RegexInterpreter.Operand, X0, X1
	400 Compare X20, 0
	401 JumpIfEqual {1103}
	402 Move W8, [X20+24]
	403 NotImplemented "Instruction CMP not yet implemented."
	404 Add X8, X20, W0
	405 Move X1, [X8+32]
	406 Move X0, X19
	407 Call RegexInterpreter.Stringmatch, X0, X1
	408 Move X0, X19
	409 Move W1, W31
	410 Call RegexInterpreter.Operand, X0, X1
	411 Move X8, [X19+96]
	412 Compare X8, 0
	413 JumpIfEqual {1103}
	414 Move X9, [X8]
	415 Move W20, W0
	416 Move X0, X8
	417 Move W1, W20
	418 Move X10, [X9+472]
	419 Move X2, [X9+480]
	420 NotImplemented "Instruction BLR not yet implemented."
	421 Move TEMP, X0
	422 And TEMP, TEMP, 1
	423 Compare TEMP, 1
	424 JumpIfNotEqual {771}
	425 Move X0, [X19+96]
	426 Compare X0, 0
	427 JumpIfEqual {1103}
	428 Move X8, [X0]
	429 Move W1, W20
	430 Move X9, [X8+488]
	431 Move X2, [X8+496]
	432 NotImplemented "Instruction BLR not yet implemented."
	433 Move X8, [X19+96]
	434 Compare X8, 0
	435 JumpIfEqual {1103}
	436 Move X9, [X8]
	437 Move W21, W0
	438 Move X0, X8
	439 Move W1, W20
	440 Move X10, [X9+504]
	441 Move X2, [X9+512]
	442 NotImplemented "Instruction BLR not yet implemented."
	443 Move W2, W0
	444 Move X0, X19
	445 Move W1, W21
	446 Call RegexInterpreter.Refmatch, X0, X1, X2
	447 Move W8, [X19+40]
	448 Move W9, [X19+16]
	449 Move W20, W31
	450 Subtract W9, W8, W9
	451 NotImplemented "Instruction CMP not yet implemented."
	452 Move X0, [X19+32]
	453 Compare X0, 0
	454 JumpIfEqual {1103}
	455 Subtract W1, W8, 1
	456 Move W8, [X19+20]
	457 Move W1, [X19+40]
	458 Move W20, W31
	459 Subtract W8, W8, W1
	460 NotImplemented "Instruction CMP not yet implemented."
	461 Move W1, [X19+40]
	462 Move W2, [X19+16]
	463 Move W3, [X19+20]
	464 Move X0, X19
	465 Call RegexRunner.IsBoundary, X0, X1, X2, X3
	466 Move W1, [X19+40]
	467 Move W2, [X19+16]
	468 Move W3, [X19+20]
	469 Move X0, X19
	470 Call RegexRunner.IsBoundary, X0, X1, X2, X3
	471 Move W8, [X19+40]
	472 Move W9, [X19+16]
	473 Move W8, [X19+40]
	474 Move W9, [X19+24]
	475 NotImplemented "Instruction CMP not yet implemented."
	476 Move W8, [X19+20]
	477 Move W1, [X19+40]
	478 Subtract W8, W8, W1
	479 NotImplemented "Instruction CMP not yet implemented."
	480 Move W20, W31
	481 Move X0, [X19+32]
	482 Compare X0, 0
	483 JumpIfEqual {1103}
	484 Move X2, X31
	485 Call String.get_Chars, X0, X1
	486 And W8, W0, 0xFFFF
	487 NotImplemented "Instruction CMP not yet implemented."
	488 Move W20, W31
	489 Move W8, [X19+20]
	490 Move W9, [X19+40]
	491 Subtract W8, W8, W9
	492 NotImplemented "Instruction CMP not yet implemented."
	493 Move W20, W31
	494 Move W1, [X19+40]
	495 Move X0, X19
	496 Call RegexInterpreter.TrackPush, X0, X1
	497 Move W20, 1
	498 Move W8, [X19+72]
	499 Move W21, [X19+40]
	500 Move X0, X19
	501 Add W8, W8, 1
	502 Move [X19+72], W8
	503 Call RegexInterpreter.StackPeek, X0
	504 Move W20, W0
	505 Move X0, X19
	506 Call RegexInterpreter.StackPeek, X0
	507 NotImplemented "Instruction CMP not yet implemented."
	508 Move W1, W0
	509 Move X0, X19
	510 Call RegexInterpreter.TrackPush2, X0, X1
	511 Move W20, 1
	512 Move X0, X19
	513 Move W1, W31
	514 Call RegexInterpreter.Operand, X0, X1
	515 Move W2, W0
	516 Move TEMP, 0
	517 Not TEMP
	518 Move W1, TEMP
	519 Move X0, X19
	520 Move W20, [X19+40]
	521 Move X0, X19
	522 Move W1, W31
	523 Call RegexInterpreter.Operand, X0, X1
	524 Move W2, W0
	525 Move X0, X19
	526 Move W1, W20
	527 Call RegexInterpreter.StackPush, X0, X1, X2
	528 Move X0, X19
	529 Call RegexInterpreter.TrackPush, X0
	530 Move W20, 1
	531 Move W8, [X19+72]
	532 Move X0, X19
	533 Add W8, W8, 2
	534 Move [X19+72], W8
	535 Call RegexInterpreter.StackPeek, X0
	536 Move W20, W0
	537 Move W1, 1
	538 Move X0, X19
	539 Call RegexInterpreter.StackPeek, X0, X1
	540 Move W22, [X19+40]
	541 Move W21, W0
	542 Move W1, 1
	543 Move X0, X19
	544 Call RegexInterpreter.Operand, X0, X1
	545 NotImplemented "Instruction CMP not yet implemented."
	546 Move TEMP, X21
	547 And TEMP, TEMP, -2147483648
	548 Compare TEMP, -2147483648
	549 JumpIfEqual {822}
	550 NotImplemented "Instruction CMP not yet implemented."
	551 Move X0, X19
	552 Move W1, W20
	553 Move W2, W21
	554 Call RegexInterpreter.TrackPush2, X0, X1, X2
	555 Move W8, [X19+72]
	556 Move X0, X19
	557 Add W8, W8, 2
	558 Move [X19+72], W8
	559 Call RegexInterpreter.StackPeek, X0
	560 Move W20, W0
	561 Move W1, 1
	562 Move X0, X19
	563 Call RegexInterpreter.StackPeek, X0, X1
	564 Move W21, W0
	565 Move TEMP, X0
	566 And TEMP, TEMP, -2147483648
	567 Compare TEMP, -2147483648
	568 JumpIfEqual {780}
	569 Move W3, [X19+40]
	570 Move X0, X19
	571 Move W1, W20
	572 Move W2, W21
	573 Call RegexInterpreter.TrackPush, X0, X1, X2, X3
	574 Move TEMP, 0
	575 Not TEMP
	576 Move W1, TEMP
	577 Move W1, [X19+40]
	578 Move X0, X19
	579 Call RegexInterpreter.StackPush, X0, X1
	580 Move W1, 1
	581 Move X0, X19
	582 Call RegexInterpreter.Operand, X0, X1
	583 Add W31, W0, 1
	584 Move W1, 1
	585 Move X0, X19
	586 Call RegexInterpreter.Operand, X0, X1
	587 Move X8, [X19+96]
	588 Compare X8, 0
	589 JumpIfEqual {1103}
	590 Move X9, [X8]
	591 Move W1, W0
	592 Move X0, X8
	593 Move X10, [X9+472]
	594 Move X2, [X9+480]
	595 NotImplemented "Instruction BLR not yet implemented."
	596 Move TEMP, X0
	597 And TEMP, TEMP, 1
	598 Compare TEMP, 1
	599 JumpIfNotEqual {734}
	600 Move W8, [X19+72]
	601 Move W1, 1
	602 Move X0, X19
	603 Add W8, W8, 1
	604 Move [X19+72], W8
	605 Call RegexInterpreter.Operand, X0, X1
	606 Move W20, W0
	607 Move X0, X19
	608 Move W1, W31
	609 Call RegexInterpreter.Operand, X0, X1
	610 Add W31, W20, 1
	611 Move W20, W0
	612 Move W1, 1
	613 Move X0, X19
	614 Call RegexInterpreter.Operand, X0, X1
	615 Move W21, W0
	616 Move X0, X19
	617 Call RegexInterpreter.StackPeek, X0
	618 Move W4, [X19+40]
	619 Move W3, W0
	620 Move X0, X19
	621 Move W1, W20
	622 Move W2, W21
	623 Call RegexRunner.TransferCapture, X0, X1, X2, X3, X4
	624 Move W8, [X19+72]
	625 Move X0, X19
	626 Add W8, W8, 1
	627 Move [X19+72], W8
	628 Call RegexInterpreter.StackPeek, X0
	629 Move W1, W0
	630 Move X0, X19
	631 Call RegexInterpreter.TrackPush, X0, X1
	632 Move X0, X19
	633 Call RegexInterpreter.StackPeek, X0
	634 Move W20, W31
	635 Move [X19+40], W0
	636 Move X8, [X19+48]
	637 Compare X8, 0
	638 JumpIfEqual {1103}
	639 Move X9, [X19+80]
	640 Compare X9, 0
	641 JumpIfEqual {1103}
	642 Move W8, [X8+24]
	643 Move W10, [X19+56]
	644 Move W11, [X19+88]
	645 Move W9, [X9+24]
	646 Move X0, X19
	647 Subtract W1, W8, W10
	648 Subtract W2, W9, W11
	649 Call RegexInterpreter.StackPush, X0, X1, X2
	650 Move X0, X19
	651 Call RegexInterpreter.TrackPush, X0
	652 Move W20, W31
	653 Move W8, [X19+72]
	654 Move X0, X19
	655 Add W8, W8, 2
	656 Move [X19+72], W8
	657 Call RegexInterpreter.StackPeek, X0
	658 Move X8, [X19+48]
	659 Compare X8, 0
	660 JumpIfEqual {1103}
	661 Move W9, [X8+24]
	662 Move X8, [X19+80]
	663 Subtract W9, W9, W0
	664 Move [X19+56], W9
	665 Compare X8, 0
	666 JumpIfEqual {1103}
	667 Move W9, [X19+88]
	668 Move W8, [X8+24]
	669 Move W1, 1
	670 Move X0, X19
	671 Subtract W20, W8, W9
	672 Call RegexInterpreter.StackPeek, X0, X1
	673 NotImplemented "Instruction CMP not yet implemented."
	674 Move X0, X19
	675 Call RegexRunner.Uncapture, X0
	676 Move X8, [X19+80]
	677 Compare X8, 0
	678 JumpIfNotEqual {667}
	679 Move W8, [X19+72]
	680 Move X0, X19
	681 Add W8, W8, 2
	682 Move [X19+72], W8
	683 Call RegexInterpreter.StackPeek, X0
	684 Move X8, [X19+48]
	685 Compare X8, 0
	686 JumpIfEqual {1103}
	687 Move W8, [X8+24]
	688 Move W1, 1
	689 Subtract W8, W8, W0
	690 Move X0, X19
	691 Move [X19+56], W8
	692 Call RegexInterpreter.StackPeek, X0, X1
	693 Move W1, W0
	694 Move X0, X19
	695 Call RegexInterpreter.TrackPush, X0, X1
	696 Move W20, W31
	697 Move X0, X19
	698 Move W1, W31
	699 Call RegexInterpreter.Operand, X0, X1
	700 Move X8, [X19+96]
	701 Compare X8, 0
	702 JumpIfEqual {1103}
	703 Move X9, [X8]
	704 Move W1, W0
	705 Move X0, X8
	706 Move X10, [X9+472]
	707 Move X2, [X9+480]
	708 NotImplemented "Instruction BLR not yet implemented."
	709 Move W20, 1
	710 Move TEMP, X0
	711 And TEMP, TEMP, 1
	712 Compare TEMP, 1
	713 JumpIfEqual {43}
	714 Move W1, [X19+40]
	715 Move W2, [X19+16]
	716 Move W3, [X19+20]
	717 Move X0, X19
	718 Call RegexRunner.IsECMABoundary, X0, X1, X2, X3
	719 Move W20, W31
	720 Move TEMP, X0
	721 And TEMP, TEMP, 1
	722 Compare TEMP, 1
	723 JumpIfEqual {43}
	724 Move W1, [X19+40]
	725 Move W2, [X19+16]
	726 Move W3, [X19+20]
	727 Move X0, X19
	728 Call RegexRunner.IsECMABoundary, X0, X1, X2, X3
	729 Move W20, W31
	730 Move TEMP, X0
	731 And TEMP, TEMP, 1
	732 Compare TEMP, 1
	733 JumpIfNotEqual {43}
	734 Move X0, X19
	735 Call RegexInterpreter.Backtrack, X0
	736 Move W20, W29
	737 Move W22, W21
	738 Compare X19, 0
	739 JumpIfEqual {1103}
	740 Move W8, [X19+152]
	741 Move W9, [X19+40]
	742 NotImplemented "Instruction CMP not yet implemented."
	743 Move TEMP, 0
	744 Not TEMP
	745 Move W8, TEMP
	746 NotImplemented "Instruction CSNEG not yet implemented."
	747 Add W8, W8, W9
	748 Move [X19+40], W8
	749 NotImplemented "Instruction CMP not yet implemented."
	750 Move W20, 2
	751 Move W8, [X19+152]
	752 Move W9, [X19+40]
	753 Move TEMP, 0
	754 Not TEMP
	755 Move W10, TEMP
	756 NotImplemented "Instruction ORN not yet implemented."
	757 NotImplemented "Instruction CMP not yet implemented."
	758 NotImplemented "Instruction CSNEG not yet implemented."
	759 Add W1, W21, W11
	760 Move X0, X19
	761 Add W31, W1, 1
	762 Move W1, W2
	763 Call RegexInterpreter.TrackPush, X0, X1, X2
	764 Move W20, 1
	765 Move W2, [X19+40]
	766 Move X0, X19
	767 Call RegexInterpreter.TrackPush, X0, X1, X2
	768 Move W1, [X19+40]
	769 Move X0, X19
	770 Call RegexInterpreter.StackPush, X0, X1
	771 Move X8, [X19+104]
	772 Compare X8, 0
	773 JumpIfEqual {1103}
	774 Move W8, [X8+33]
	775 Move W20, 1
	776 Move TEMP, X8
	777 And TEMP, TEMP, 1
	778 Compare TEMP, 1
	779 JumpIfEqual {43}
	780 Move X0, X19
	781 Move W1, W20
	782 Call RegexInterpreter.TrackPush2, X0, X1
	783 Move W29, W22
	784 Compare X19, 0
	785 JumpIfEqual {1103}
	786 Move W8, [X19+152]
	787 Move W9, [X19+40]
	788 NotImplemented "Instruction CMP not yet implemented."
	789 Move TEMP, 0
	790 Not TEMP
	791 Move W8, TEMP
	792 NotImplemented "Instruction CSNEG not yet implemented."
	793 Add W8, W8, W9
	794 Move [X19+40], W8
	795 NotImplemented "Instruction CMP not yet implemented."
	796 Move W20, 2
	797 Move W8, [X19+152]
	798 Move W9, [X19+40]
	799 Move TEMP, 0
	800 Not TEMP
	801 Move W10, TEMP
	802 NotImplemented "Instruction ORN not yet implemented."
	803 NotImplemented "Instruction CMP not yet implemented."
	804 NotImplemented "Instruction CSNEG not yet implemented."
	805 Add W1, W22, W11
	806 Add W2, W8, W9
	807 Move X0, X19
	808 Call RegexInterpreter.TrackPush, X0, X1, X2
	809 Move W20, 2
	810 Move X0, X19
	811 Call RegexInterpreter.StackPeek, X0
	812 Move W3, [X19+40]
	813 Move W2, W0
	814 Move X0, X19
	815 Move W1, W20
	816 Call RegexRunner.Capture, X0, X1, X2, X3
	817 Move X0, X19
	818 Call RegexInterpreter.StackPeek, X0
	819 Move W1, W0
	820 Move X0, X19
	821 Call RegexInterpreter.TrackPush, X0, X1
	822 Move X0, X19
	823 Move W1, W20
	824 Call RegexInterpreter.TrackPush, X0, X1
	825 Move W1, [X19+40]
	826 Add W2, W21, 1
	827 Move X0, X19
	828 Call RegexInterpreter.StackPush, X0, X1, X2
	829 Move X0, X19
	830 Move W1, W31
	831 Call RegexInterpreter.Operand, X0, X1
	832 Move W1, W0
	833 Move X0, X19
	834 Call RegexInterpreter.Goto, X0, X1
	835 Move W20, W29
	836 Subtract W8, W8, 280
	837 NotImplemented "Instruction CMP not yet implemented."
	838 NotImplemented "Instruction ADR not yet implemented."
	839 NotImplemented "Instruction LDRH not yet implemented."
	840 Add X9, X9, X10
	841 CallNoReturn X9
	842 Move W8, [X19+56]
	843 Add W8, W8, 1
	844 Move [X19+56], W8
	845 Move W8, [X19+72]
	846 Add W8, W8, 2
	847 Move W8, [X19+72]
	848 Add W8, W8, 1
	849 Move [X19+72], W8
	850 Move W8, [X19+56]
	851 Move W1, 1
	852 Move X0, X19
	853 Add W8, W8, 2
	854 Move [X19+56], W8
	855 Call RegexInterpreter.TrackPeek, X0, X1
	856 Move W21, W0
	857 Move [X19+40], W0
	858 Move X0, X19
	859 Call RegexInterpreter.Forwardcharnext, X0
	860 And W20, W0, 0xFFFF
	861 Move X0, X19
	862 Move W1, W31
	863 Call RegexInterpreter.Operand, X0, X1
	864 NotImplemented "Instruction CMP not yet implemented."
	865 Move W8, [X19+56]
	866 Move W1, 1
	867 Move X0, X19
	868 Add W8, W8, 2
	869 Move [X19+56], W8
	870 Call RegexInterpreter.TrackPeek, X0, X1
	871 Move W21, W0
	872 Move [X19+40], W0
	873 Move X0, X19
	874 Call RegexInterpreter.Forwardcharnext, X0
	875 And W20, W0, 0xFFFF
	876 Move X0, X19
	877 Move W1, W31
	878 Call RegexInterpreter.Operand, X0, X1
	879 NotImplemented "Instruction CMP not yet implemented."
	880 Move W8, [X19+56]
	881 Move W1, 1
	882 Move X0, X19
	883 Add W8, W8, 2
	884 Move [X19+56], W8
	885 Call RegexInterpreter.TrackPeek, X0, X1
	886 Move W21, W0
	887 Move [X19+40], W0
	888 Move X0, X19
	889 Call RegexInterpreter.Forwardcharnext, X0
	890 Move X8, [X19+128]
	891 Compare X8, 0
	892 JumpIfEqual {1103}
	893 Move X22, [X8+24]
	894 Move W20, W0
	895 Move X0, X19
	896 Move W1, W31
	897 Call RegexInterpreter.Operand, X0, X1
	898 Compare X22, 0
	899 JumpIfEqual {1103}
	900 Move W8, [X22+24]
	901 NotImplemented "Instruction CMP not yet implemented."
	902 Move X8, [X23]
	903 Add X9, X22, W0
	904 Move X22, [X9+32]
	905 Move W10, [X8+224]
	906 Compare W10, 0
	907 JumpIfNotEqual {910}
	908 Move X0, X8
	909 Call 0x1C17DFC
	910 Move W0, W20
	911 Move X1, X22
	912 Move X2, X31
	913 Call RegexCharClass.CharInClass, X0, X1
	914 Move TEMP, X0
	915 And TEMP, TEMP, 1
	916 Compare TEMP, 1
	917 JumpIfNotEqual {734}
	918 Move X0, X19
	919 Call RegexInterpreter.TrackPeek, X0
	920 Subtract W1, W0, 1
	921 Move W20, 2
	922 Move W8, [X19+152]
	923 NotImplemented "Instruction CMP not yet implemented."
	924 NotImplemented "Instruction CSNEG not yet implemented."
	925 Add W2, W8, W21
	926 Move W8, [X19+56]
	927 Move X0, X19
	928 Add W8, W8, 1
	929 Move [X19+56], W8
	930 Call RegexInterpreter.TrackPeek, X0
	931 Move [X19+40], W0
	932 Move W8, [X19+56]
	933 Move W9, [X19+72]
	934 Move W1, 1
	935 Move X0, X19
	936 Add W8, W8, 2
	937 Add W9, W9, 1
	938 Move [X19+56], W8
	939 Move [X19+72], W9
	940 Move W20, 1
	941 Call RegexInterpreter.TrackPeek, X0, X1
	942 Move [X19+40], W0
	943 Move X0, X19
	944 Call RegexInterpreter.TrackPeek, X0
	945 Move W1, W0
	946 Move X0, X19
	947 Call RegexInterpreter.TrackPush2, X0, X1
	948 Move W8, [X19+56]
	949 Move W1, 1
	950 Move X0, X19
	951 Add W8, W8, 2
	952 Move [X19+56], W8
	953 Call RegexInterpreter.TrackPeek, X0, X1
	954 Move W20, W0
	955 Move X0, X19
	956 Call RegexInterpreter.TrackPeek, X0
	957 Move W1, W0
	958 Move X0, X19
	959 Call RegexInterpreter.TrackPush2, X0, X1
	960 Move X0, X19
	961 Move W1, W20
	962 Call RegexInterpreter.StackPush, X0, X1
	963 Move [X19+40], W20
	964 Move W8, [X19+56]
	965 Move W9, [X19+72]
	966 Move W1, 1
	967 Move X0, X19
	968 Add W8, W8, 1
	969 Add W9, W9, 2
	970 Move [X19+56], W8
	971 Move [X19+72], W9
	972 Call RegexInterpreter.StackPeek, X0, X1
	973 NotImplemented "Instruction CMP not yet implemented."
	974 Move X0, X19
	975 Call RegexInterpreter.StackPeek, X0
	976 Move [X19+40], W0
	977 Move X0, X19
	978 Call RegexInterpreter.TrackPeek, X0
	979 Move W20, W0
	980 Move W1, 1
	981 Move X0, X19
	982 Call RegexInterpreter.StackPeek, X0, X1
	983 Subtract W2, W0, 1
	984 Move X0, X19
	985 Move W1, W20
	986 Move W8, [X19+56]
	987 Move X0, X19
	988 Add W8, W8, 3
	989 Move [X19+56], W8
	990 Call RegexInterpreter.TrackPeek, X0
	991 Move W20, W0
	992 Move W1, 2
	993 Move X0, X19
	994 Call RegexInterpreter.TrackPeek, X0, X1
	995 Move W21, W0
	996 Move W1, 1
	997 Move X0, X19
	998 Call RegexInterpreter.TrackPeek, X0, X1
	999 Move W22, W0
	1000 Move W1, 1
	1001 Move X0, X19
	1002 Call RegexInterpreter.Operand, X0, X1
	1003 NotImplemented "Instruction CMP not yet implemented."
	1004 NotImplemented "Instruction CMP not yet implemented."
	1005 Move W1, 1
	1006 Move X0, X19
	1007 Move [X19+40], W21
	1008 Call RegexInterpreter.TrackPeek, X0, X1
	1009 Add W2, W0, 1
	1010 Move X0, X19
	1011 Move W1, W21
	1012 Call RegexInterpreter.StackPush, X0, X1, X2
	1013 Move X0, X19
	1014 Move W1, W20
	1015 Call RegexInterpreter.TrackPush2, X0, X1
	1016 Move W8, [X19+56]
	1017 Move X0, X19
	1018 Add W8, W8, 1
	1019 Move [X19+56], W8
	1020 Call RegexInterpreter.TrackPeek, X0
	1021 Move W1, W0
	1022 Move X0, X19
	1023 Call RegexInterpreter.StackPush, X0, X1
	1024 Move X0, X19
	1025 Call RegexRunner.Uncapture, X0
	1026 Move X0, X19
	1027 Move W1, W31
	1028 Call RegexInterpreter.Operand, X0, X1
	1029 Add W31, W0, 1
	1030 Move W1, 1
	1031 Move X0, X19
	1032 Call RegexInterpreter.Operand, X0, X1
	1033 Add W31, W0, 1
	1034 Move X0, X19
	1035 Call RegexRunner.Uncapture, X0
	1036 Move W9, [X19+56]
	1037 Move X8, [X19+80]
	1038 Add W9, W9, 1
	1039 Move [X19+56], W9
	1040 Compare X8, 0
	1041 JumpIfEqual {1103}
	1042 Move W9, [X19+88]
	1043 Move W8, [X8+24]
	1044 Move X0, X19
	1045 Subtract W20, W8, W9
	1046 Call RegexInterpreter.TrackPeek, X0
	1047 NotImplemented "Instruction CMP not yet implemented."
	1048 Move X0, X19
	1049 Call RegexRunner.Uncapture, X0
	1050 Move X8, [X19+80]
	1051 Compare X8, 0
	1052 JumpIfNotEqual {1042}
	1053 Move W8, [X19+72]
	1054 Move W9, [X19+56]
	1055 Add W8, W8, 1
	1056 Add W9, W9, 1
	1057 Move [X19+72], W8
	1058 Move [X19+56], W9
	1059 Move X0, X19
	1060 Call RegexInterpreter.TrackPeek, X0
	1061 Move W1, W0
	1062 Move X0, X19
	1063 Call RegexInterpreter.StackPush, X0, X1
	1064 Move W8, [X19+56]
	1065 Add W8, W8, 2
	1066 Move [X19+56], W8
	1067 Move X0, X19
	1068 Call RegexInterpreter.TrackPeek, X0
	1069 Move W20, W0
	1070 Move W1, 1
	1071 Move X0, X19
	1072 Call RegexInterpreter.TrackPeek, X0, X1
	1073 Move W2, W0
	1074 Move W8, [X19+56]
	1075 Move W9, [X19+72]
	1076 Add W8, W8, 1
	1077 Add W9, W9, 2
	1078 Move [X19+56], W8
	1079 Move [X19+72], W9
	1080 Move X0, X19
	1081 Call RegexInterpreter.TrackPeek, X0
	1082 Move W20, W0
	1083 Move W1, 1
	1084 Move X0, X19
	1085 Call RegexInterpreter.StackPeek, X0, X1
	1086 Subtract W2, W0, 1
	1087 Move X0, X19
	1088 Move W1, W20
	1089 Call RegexInterpreter.StackPush, X0, X1, X2
	1090 Move X20, [X31+80]
	1091 Move X19, [X31+88]
	1092 Move X22, [X31+64]
	1093 Move X21, [X31+72]
	1094 Move X24, [X31+48]
	1095 Move X23, [X31+56]
	1096 Move X26, [X31+32]
	1097 Move X25, [X31+40]
	1098 Move X28, [X31+16]
	1099 Move X27, [X31+24]
	1100 Move X29, [X31+96]
	1101 Move X30, [X31+104]
	1102 Return 
	1103 Call 0x1C17F20
	1104 Call 0x1C17F28
	1105 Move X0, 0xAFE000
	1106 Move X0, [X0+856]
	1107 Call 0x1C17D08
	1108 Move X1, X31
	1109 Call NotImplemented.ByDesignWithMessage, X0
	1110 Move X19, X0
	1111 Move X0, 0xAFE000
	1112 Move X0, [X0+864]
	1113 Call 0x1C17D08
	1114 Move X1, X0
	1115 Move X0, X19
	1116 Call 0x1C17DEC

