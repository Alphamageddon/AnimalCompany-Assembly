Type: System.Text.RegularExpressions.RegexMatchTimeoutException

Method: System.Void .ctor(System.String regexInput, System.String regexPattern, System.TimeSpan matchTimeout)

Disassembly:
	0x0363FF60 LDR W8, [X19 + 0x10]
	0x0363FF64 STRH W0, [X19 + 0x28]
	0x0363FF68 STR X31, [X19 + 0x20]
	0x0363FF6C SUB W8, W8, 0x1
	0x0363FF70 STR W8, [X19 + 0x10]
	0x0363FF74 MOV X0, X19
	0x0363FF78 LDP X20, X19, [X31 + 0x20]
	0x0363FF7C LDP X22, X21, [X31 + 0x10]
	0x0363FF80 LDR X30, [X31], #0x30
	0x0363FF84 RET
	0x0363FF88 STP X30, X21, [X31 - 0x20]!
	0x0363FF8C STP X20, X19, [X31 + 0x10]
	0x0363FF90 ADRP X21, 0xDA1000
	0x0363FF94 LDRB W8, [X21 + 0x573]
	0x0363FF98 MOV W20, W1
	0x0363FF9C MOV X19, X0
	0x0363FFA0 TBNZ X8, 0x0, 0x363FFB8
	0x0363FFA4 ADRP X0, 0xAFD000
	0x0363FFA8 LDR X0, [X0 + 0x3A8]
	0x0363FFAC BL 0x1C16CF4
	0x0363FFB0 MOVZ W8, 0x1
	0x0363FFB4 STRB W8, [X21 + 0x573]
	0x0363FFB8 ADRP X21, 0xDA1000
	0x0363FFBC LDRB W8, [X21 + 0x57B]
	0x0363FFC0 TBNZ X8, 0x0, 0x363FFD8
	0x0363FFC4 ADRP X0, 0xAFD000
	0x0363FFC8 LDR X0, [X0 + 0x2D0]
	0x0363FFCC BL 0x1C16CF4
	0x0363FFD0 MOVZ W8, 0x1
	0x0363FFD4 STRB W8, [X21 + 0x57B]
	0x0363FFD8 LDR X8, [X19 + 0x18]
	0x0363FFDC CBZ X8, 0x363FFF0
	0x0363FFE0 LDR W8, [X8 + 0x18]
	0x0363FFE4 CMP W8, 0x1
	0x0363FFE8 B.EQ 0x3640028
	0x0363FFEC CBNZ W8, 0x3640018
	0x0363FFF0 ADRP X8, 0xAFD000
	0x0363FFF4 LDR X8, [X8 + 0x3A8]
	0x0363FFF8 LDR W21, [X19 + 0x34]
	0x0363FFFC LDR X0, [X8]
	0x03640000 BL 0x1C16F10
	0x03640004 MOV X1, X31
	0x03640008 MOV X19, X0
	0x0364000C BL 0x33BDD8C
	0x03640010 STR W20, [X19 + 0x10]
	0x03640014 STR W21, [X19 + 0x34]
	0x03640018 MOV X0, X19
	0x0364001C LDP X20, X19, [X31 + 0x10]
	0x03640020 LDP X30, X21, [X31], #0x20
	0x03640024 RET
	0x03640028 MOV X0, X19

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X25, 0xDA2000
	010 Move X24, 0xAB7000
	011 Move X23, 0xAB7000
	012 Move W8, [X25+1390]
	013 Move X24, [X24+632]
	014 Move X23, [X23+1392]
	015 Move X19, X3
	016 Move X20, X2
	017 Move X22, X1
	018 Move X21, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {34}
	023 Move X0, 0xAB7000
	024 Move X0, [X0+632]
	025 Call 0x1C17CF4
	026 Move X0, 0xAB7000
	027 Move X0, [X0+1392]
	028 Call 0x1C17CF4
	029 Move X0, 0xAFE000
	030 Move X0, [X0+872]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X25+1390], W8
	034 Move X8, [X24]
	035 Move X8, [X8+184]
	036 Move X8, [X8]
	037 Move [X21+144], X8
	038 Move [X21+152], X8
	039 Move X0, [X23]
	040 Move X23, 0xAFE000
	041 Move W8, [X0+224]
	042 Move X23, [X23+872]
	043 Compare W8, 0
	044 JumpIfNotEqual {46}
	045 Call 0x1C17DFC
	046 Move TEMP, 0
	047 Not TEMP
	048 Move X0, TEMP
	049 Move X1, X31
	050 Call TimeSpan.FromTicks, X0
	051 Move [X21+160], X0
	052 Move X1, [X23]
	053 Move X0, X21
	054 Move X2, X31
	055 Call TimeoutException..ctor, X0, X1
	056 Move [X21+144], X22
	057 Move [X21+152], X20
	058 Move [X21+160], X19
	059 Move X20, [X31+48]
	060 Move X19, [X31+56]
	061 Move X22, [X31+32]
	062 Move X21, [X31+40]
	063 Move X24, [X31+16]
	064 Move X23, [X31+24]
	065 Move X30, [X31+64]
	066 Move X25, [X31+72]
	067 Return 

Method: System.Void .ctor()

Disassembly:
	0x0364002C LDP X20, X19, [X31 + 0x10]
	0x03640030 MOV W1, W31
	0x03640034 LDP X30, X21, [X31], #0x20
	0x03640038 B 0x363BE48
	0x0364003C STR X30, [X31 - 0x40]!
	0x03640040 STP X24, X23, [X31 + 0x10]
	0x03640044 STP X22, X21, [X31 + 0x20]
	0x03640048 STP X20, X19, [X31 + 0x30]
	0x0364004C ADRP X23, 0xDA0000
	0x03640050 LDRB W8, [X23 + 0x578]
	0x03640054 MOV W20, W3
	0x03640058 MOV W21, W2
	0x0364005C MOV W22, W1
	0x03640060 MOV X19, X0
	0x03640064 TBNZ X8, 0x0, 0x364007C
	0x03640068 ADRP X0, 0xAFC000
	0x0364006C LDR X0, [X0 + 0x3A8]
	0x03640070 BL 0x1C16CF4
	0x03640074 MOVZ W8, 0x1
	0x03640078 STRB W8, [X23 + 0x578]
	0x0364007C ORR W8, W20, W21, 0x0
	0x03640080 CBZ W8, 0x36400C4
	0x03640084 CMP W21, 0x1
	0x03640088 B.NE 0x3640094
	0x0364008C CMP W20, 0x1
	0x03640090 B.EQ 0x364013C
	0x03640094 LDR W8, [X19 + 0x10]
	0x03640098 SUB W9, W8, 0x9
	0x0364009C CMP W9, 0x2
	0x036400A0 B.HI 0x36400F4
	0x036400A4 ANDS W31, W22, 0x1
	0x036400A8 MOVN W9, 0x5
	0x036400AC MOVN W10, 0x2
	0x036400B0 CSEL W9, W10, W9, NE
	0x036400B4 ADD W8, W8, W9
	0x036400B8 STR W8, [X19 + 0x10]
	0x036400BC STP W21, W20, [X19 + 0x2C]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xDA1000
	007 Move X22, 0xAB6000
	008 Move X20, 0xAB6000
	009 Move W8, [X21+1391]
	010 Move X22, [X22+632]
	011 Move X20, [X20+1392]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0xAB6000
	018 Move X0, [X0+632]
	019 Call 0x1C17CF4
	020 Move X0, 0xAB6000
	021 Move X0, [X0+1392]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+1391], W8
	025 Move X8, [X22]
	026 Move X8, [X8+184]
	027 Move X8, [X8]
	028 Move [X19+144], X8
	029 Move [X19+152], X8
	030 Move X0, [X20]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {35}
	034 Call 0x1C17DFC
	035 Move TEMP, 0
	036 Not TEMP
	037 Move X0, TEMP
	038 Move X1, X31
	039 Call TimeSpan.FromTicks, X0
	040 Move [X19+160], X0
	041 Move X0, X19
	042 Move X20, [X31+32]
	043 Move X19, [X31+40]
	044 Move X22, [X31+16]
	045 Move X21, [X31+24]
	046 Move X1, X31
	047 Move X30, [X31+48]
	048 Call TimeoutException..ctor, X0
	049 Return 

Method: System.Void .ctor(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context)

Disassembly:
	0x036400C0 B 0x364013C
	0x036400C4 ADRP X8, 0xAFC000
	0x036400C8 LDR W20, [X19 + 0x34]
	0x036400CC LDR X8, [X8 + 0x3A8]
	0x036400D0 LDR X0, [X8]
	0x036400D4 BL 0x1C16F10
	0x036400D8 MOV X1, X31
	0x036400DC MOV X19, X0
	0x036400E0 BL 0x33BDD8C
	0x036400E4 MOVZ W8, 0x17
	0x036400E8 STR W8, [X19 + 0x10]
	0x036400EC STR W20, [X19 + 0x34]
	0x036400F0 B 0x364013C
	0x036400F4 ADRP X8, 0xAFC000
	0x036400F8 LDR W23, [X19 + 0x34]
	0x036400FC LDR X8, [X8 + 0x3A8]
	0x03640100 ANDS W31, W22, 0x1
	0x03640104 LDR X0, [X8]
	0x03640108 MOVZ W8, 0x1A
	0x0364010C CINC W24, W8, NE
	0x03640110 BL 0x1C16F10
	0x03640114 MOV X1, X31
	0x03640118 MOV X22, X0
	0x0364011C BL 0x33BDD8C
	0x03640120 MOV X0, X22
	0x03640124 MOV X1, X19
	0x03640128 STR W24, [X22 + 0x10]
	0x0364012C STP W20, W23, [X22 + 0x30]
	0x03640130 STR W21, [X22 + 0x2C]
	0x03640134 BL 0x3640154
	0x03640138 MOV X19, X22
	0x0364013C MOV X0, X19
	0x03640140 LDP X20, X19, [X31 + 0x30]
	0x03640144 LDP X22, X21, [X31 + 0x20]
	0x03640148 LDP X24, X23, [X31 + 0x10]
	0x0364014C LDR X30, [X31], #0x40
	0x03640150 RET
	0x03640154 STP X30, X21, [X31 - 0x20]!
	0x03640158 STP X20, X19, [X31 + 0x10]
	0x0364015C ADRP X21, 0xDA0000
	0x03640160 LDRB W8, [X21 + 0x579]
	0x03640164 MOV X20, X1
	0x03640168 MOV X19, X0
	0x0364016C TBNZ X8, 0x0, 0x364019C
	0x03640170 ADRP X0, 0xAFC000
	0x03640174 LDR X0, [X0 + 0x3B0]
	0x03640178 BL 0x1C16CF4
	0x0364017C ADRP X0, 0xAFC000
	0x03640180 LDR X0, [X0 + 0x3B8]
	0x03640184 BL 0x1C16CF4
	0x03640188 ADRP X0, 0xAFC000
	0x0364018C LDR X0, [X0 + 0x3C0]
	0x03640190 BL 0x1C16CF4
	0x03640194 MOVZ W8, 0x1
	0x03640198 STRB W8, [X21 + 0x579]
	0x0364019C LDR X8, [X19 + 0x18]
	0x036401A0 CBNZ X8, 0x36401D0
	0x036401A4 ADRP X8, 0xAFC000
	0x036401A8 LDR X8, [X8 + 0x3C0]
	0x036401AC LDR X0, [X8]
	0x036401B0 BL 0x1C16F10
	0x036401B4 ADRP X8, 0xAFC000
	0x036401B8 LDR X8, [X8 + 0x3B8]
	0x036401BC MOVZ W1, 0x4
	0x036401C0 MOV X21, X0
	0x036401C4 LDR X2, [X8]
	0x036401C8 BL 0x301B830
	0x036401CC STR X21, [X19 + 0x18]
	0x036401D0 CBZ X20, 0x3640258
	0x036401D4 MOV X0, X20
	0x036401D8 BL 0x363F4E0
	0x036401DC LDR X8, [X19 + 0x18]
	0x036401E0 CBZ X8, 0x3640258
	0x036401E4 ADRP X10, 0xAFC000
	0x036401E8 LDR X10, [X10 + 0x3B0]
	0x036401EC LDR W11, [X8 + 0x1C]
	0x036401F0 LDR X9, [X8 + 0x10]
	0x036401F4 LDR X10, [X10]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X25, 0xDA1000
	010 Move X24, 0xAB6000
	011 Move X23, 0xAB6000
	012 Move W8, [X25+1392]
	013 Move X24, [X24+632]
	014 Move X23, [X23+1392]
	015 Move X21, X3
	016 Move X22, X2
	017 Move X20, X1
	018 Move X19, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {40}
	023 Move X0, 0xAB6000
	024 Move X0, [X0+632]
	025 Call 0x1C17CF4
	026 Move X0, 0xAB6000
	027 Move X0, [X0+1392]
	028 Call 0x1C17CF4
	029 Move X0, 0xAFD000
	030 Move X0, [X0+880]
	031 Call 0x1C17CF4
	032 Move X0, 0xAFD000
	033 Move X0, [X0+888]
	034 Call 0x1C17CF4
	035 Move X0, 0xAFD000
	036 Move X0, [X0+896]
	037 Call 0x1C17CF4
	038 Move W8, 1
	039 Move [X25+1392], W8
	040 Move X8, [X24]
	041 Move X8, [X8+184]
	042 Move X8, [X8]
	043 Move [X19+144], X8
	044 Move [X19+152], X8
	045 Move X0, [X23]
	046 Move W8, [X0+224]
	047 Compare W8, 0
	048 JumpIfNotEqual {50}
	049 Call 0x1C17DFC
	050 Move TEMP, 0
	051 Not TEMP
	052 Move X0, TEMP
	053 Move X1, X31
	054 Call TimeSpan.FromTicks, X0
	055 Move [X19+160], X0
	056 Move X0, X19
	057 Move X1, X20
	058 Move X2, X22
	059 Move X3, X21
	060 Move X4, X31
	061 Call TimeoutException..ctor, X0, X1, X2
	062 Compare X20, 0
	063 JumpIfEqual {94}
	064 Move X8, 0xAFD000
	065 Move X8, [X8+896]
	066 Move X21, 0xAFD000
	067 Move X22, 0xAFD000
	068 Move X0, X20
	069 Move X1, [X8]
	070 Move X21, [X21+880]
	071 Move X22, [X22+888]
	072 Move X2, X31
	073 Call SerializationInfo.GetString, X0, X1
	074 Move [X19+144], X0
	075 Move X1, [X21]
	076 Move X0, X20
	077 Move X2, X31
	078 Call SerializationInfo.GetString, X0, X1
	079 Move [X19+152], X0
	080 Move X1, [X22]
	081 Move X0, X20
	082 Move X2, X31
	083 Call SerializationInfo.GetInt64, X0, X1
	084 Move [X19+160], X0
	085 Move X20, [X31+48]
	086 Move X19, [X31+56]
	087 Move X22, [X31+32]
	088 Move X21, [X31+40]
	089 Move X24, [X31+16]
	090 Move X23, [X31+24]
	091 Move X30, [X31+64]
	092 Move X25, [X31+72]
	093 Return 
	094 Call 0x1C17F20

Method: System.Void System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context)

Disassembly:
	0x036401F8 ADD W11, W11, 0x1
	0x036401FC STR W11, [X8 + 0x1C]
	0x03640200 CBZ X9, 0x3640258
	0x03640204 LDRSW X11, [X8 + 0x18]
	0x03640208 LDR W12, [X9 + 0x18]
	0x0364020C MOV X20, X0
	0x03640210 CMP W11, W12
	0x03640214 B.CS 0x364022C
	0x03640218 ADD W10, W11, 0x1
	0x0364021C ADD X9, X9, X11, 0x3, LSL
	0x03640220 STR W10, [X8 + 0x18]
	0x03640224 STR X20, [X9 + 0x20]
	0x03640228 B 0x3640244
	0x0364022C LDR X9, [X10 + 0x20]
	0x03640230 MOV X0, X8
	0x03640234 MOV X1, X20
	0x03640238 LDR X9, [X9 + 0xC0]
	0x0364023C LDR X2, [X9 + 0x70]
	0x03640240 BL 0x301BF90
	0x03640244 CBZ X20, 0x3640258
	0x03640248 STR X19, [X20 + 0x38]
	0x0364024C LDP X20, X19, [X31 + 0x10]
	0x03640250 LDP X30, X21, [X31], #0x20
	0x03640254 RET
	0x03640258 BL 0x1C16F20
	0x0364025C LDR W0, [X0 + 0x10]
	0x03640260 RET
	0x03640264 STP X30, X27, [X31 - 0x50]!
	0x03640268 STP X26, X25, [X31 + 0x10]
	0x0364026C STP X24, X23, [X31 + 0x20]
	0x03640270 STP X22, X21, [X31 + 0x30]
	0x03640274 STP X20, X19, [X31 + 0x40]
	0x03640278 ADRP X21, 0xDA0000
	0x0364027C ADRP X22, 0xAB5000
	0x03640280 LDRB W8, [X21 + 0x57C]
	0x03640284 LDR X22, [X22 + 0xC48]
	0x03640288 MOV W19, W1
	0x0364028C MOV X20, X0
	0x03640290 TBNZ X8, 0x0, 0x36402CC
	0x03640294 ADRP X0, 0xAB5000
	0x03640298 LDR X0, [X0 + 0xC48]
	0x0364029C BL 0x1C16CF4
	0x036402A0 ADRP X0, 0xAB5000
	0x036402A4 LDR X0, [X0 + 0xE78]
	0x036402A8 BL 0x1C16CF4
	0x036402AC ADRP X0, 0xAFB000
	0x036402B0 LDR X0, [X0 + 0x808]
	0x036402B4 BL 0x1C16CF4
	0x036402B8 ADRP X0, 0xAFC000
	0x036402BC LDR X0, [X0 + 0x3C8]
	0x036402C0 BL 0x1C16CF4
	0x036402C4 MOVZ W8, 0x1
	0x036402C8 STRB W8, [X21 + 0x57C]
	0x036402CC LDR X0, [X22]
	0x036402D0 LDR W8, [X0 + 0xE0]
	0x036402D4 CBNZ W8, 0x36402DC
	0x036402D8 BL 0x1C16DFC
	0x036402DC ADRP X21, 0xAFB000
	0x036402E0 LDR X21, [X21 + 0x808]
	0x036402E4 MOV X0, X31
	0x036402E8 TBNZ X19, 0x9, 0x36402F4
	0x036402EC BL 0x33387A0
	0x036402F0 B 0x36402F8

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0xDA1000
	008 Move W8, [X23+1393]
	009 Move X21, X3
	010 Move X22, X2
	011 Move X19, X1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {31}
	017 Move X0, 0xAB6000
	018 Move X0, [X0+1392]
	019 Call 0x1C17CF4
	020 Move X0, 0xAFD000
	021 Move X0, [X0+880]
	022 Call 0x1C17CF4
	023 Move X0, 0xAFD000
	024 Move X0, [X0+888]
	025 Call 0x1C17CF4
	026 Move X0, 0xAFD000
	027 Move X0, [X0+896]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X23+1393], W8
	031 Move X0, X20
	032 Move X1, X19
	033 Move X2, X22
	034 Move X3, X21
	035 Move X4, X31
	036 Call Exception.GetObjectData, X0, X1, X2
	037 Compare X19, 0
	038 JumpIfEqual {75}
	039 Move X8, 0xAFD000
	040 Move X8, [X8+896]
	041 Move X2, [X20+144]
	042 Move X22, 0xAFD000
	043 Move X23, 0xAB6000
	044 Move X1, [X8]
	045 Move X21, 0xAFD000
	046 Move X22, [X22+880]
	047 Move X23, [X23+1392]
	048 Move X21, [X21+888]
	049 Move X0, X19
	050 Move X3, X31
	051 Call SerializationInfo.AddValue, X0, X1, X2
	052 Move X2, [X20+152]
	053 Move X1, [X22]
	054 Move X0, X19
	055 Move X3, X31
	056 Call SerializationInfo.AddValue, X0, X1, X2
	057 Move X0, [X23]
	058 Move X20, [X20+160]
	059 Move W8, [X0+224]
	060 Compare W8, 0
	061 JumpIfNotEqual {63}
	062 Call 0x1C17DFC
	063 Move X1, [X21]
	064 Move X0, X19
	065 Move X2, X20
	066 Move X20, [X31+32]
	067 Move X19, [X31+40]
	068 Move X22, [X31+16]
	069 Move X21, [X31+24]
	070 Move X3, X31
	071 Move X30, [X31+48]
	072 Move X23, [X31+56]
	073 Call SerializationInfo.AddValue, X0, X1, X2
	074 Return 
	075 Call 0x1C17F20

Method: System.String get_Input()

Disassembly:
	0x036402F4 BL 0x3338524
	0x036402F8 MOV X22, X0

ISIL:
	001 Move X0, [X0+144]
	002 Return X0

Method: System.String get_Pattern()

Disassembly:
	0x036402FC LDR X0, [X21]
	0x03640300 BL 0x1C16F10

ISIL:
	001 Move X0, [X0+152]
	002 Return X0

Method: System.TimeSpan get_MatchTimeout()

Disassembly:
	0x03640304 MOV X1, X22
	0x03640308 MOV X21, X0

ISIL:
	001 Move X0, [X0+160]
	002 Return X0

