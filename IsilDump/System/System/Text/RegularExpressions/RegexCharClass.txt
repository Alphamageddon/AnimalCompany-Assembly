Type: System.Text.RegularExpressions.RegexCharClass

Method: System.Void .ctor()

Disassembly:
	0x0363514C MOV X2, X31
	0x03635150 LDR X30, [X31], #0x30
	0x03635154 B 0x32333E0
	0x03635158 BL 0x1C16F20
	0x0363515C STR X30, [X31 - 0x30]!
	0x03635160 STP X22, X21, [X31 + 0x10]
	0x03635164 STP X20, X19, [X31 + 0x20]
	0x03635168 ADRP X22, 0xDAB000
	0x0363516C LDRB W8, [X22 + 0x543]
	0x03635170 MOV W21, W2
	0x03635174 MOV W20, W1
	0x03635178 MOV X19, X0
	0x0363517C TBNZ X8, 0x0, 0x36351AC
	0x03635180 ADRP X0, 0xB06000
	0x03635184 LDR X0, [X0 + 0x8E0]
	0x03635188 BL 0x1C16CF4
	0x0363518C ADRP X0, 0xB06000
	0x03635190 LDR X0, [X0 + 0x938]
	0x03635194 BL 0x1C16CF4
	0x03635198 ADRP X0, 0xB06000
	0x0363519C LDR X0, [X0 + 0x940]
	0x036351A0 BL 0x1C16CF4
	0x036351A4 MOVZ W8, 0x1
	0x036351A8 STRB W8, [X22 + 0x543]
	0x036351AC TBZ X21, 0x0, 0x36351C0
	0x036351B0 TBZ X20, 0x0, 0x36351E4
	0x036351B4 ADRP X8, 0xB06000
	0x036351B8 LDR X8, [X8 + 0x938]
	0x036351BC B 0x36351CC
	0x036351C0 TBZ X20, 0x0, 0x3635214
	0x036351C4 ADRP X8, 0xB06000
	0x036351C8 LDR X8, [X8 + 0x940]
	0x036351CC LDR X1, [X8]
	0x036351D0 MOV X0, X19
	0x036351D4 LDP X20, X19, [X31 + 0x20]
	0x036351D8 LDP X22, X21, [X31 + 0x10]
	0x036351DC LDR X30, [X31], #0x30
	0x036351E0 B 0x36345B8
	0x036351E4 ADRP X20, 0xB06000
	0x036351E8 LDR X20, [X20 + 0x8E0]
	0x036351EC LDR X0, [X20]
	0x036351F0 LDR W8, [X0 + 0xE0]
	0x036351F4 CBNZ W8, 0x36351FC
	0x036351F8 BL 0x1C16DFC
	0x036351FC LDR X0, [X19 + 0x18]
	0x03635200 CBZ X0, 0x3635254

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0xDAC000
	008 Move X22, 0xB07000
	009 Move X20, 0xB07000
	010 Move X21, 0xABF000
	011 Move W8, [X23+1339]
	012 Move X22, [X22+2232]
	013 Move X20, [X20+2240]
	014 Move X21, [X21+2288]
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {31}
	020 Move X0, 0xB07000
	021 Move X0, [X0+2240]
	022 Call 0x1C17CF4
	023 Move X0, 0xB07000
	024 Move X0, [X0+2232]
	025 Call 0x1C17CF4
	026 Move X0, 0xABF000
	027 Move X0, [X0+2288]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X23+1339], W8
	031 Move X0, X19
	032 Move X1, X31
	033 Call Object..ctor, X0
	034 Move X0, [X22]
	035 Call 0x1C17F10
	036 Move X2, [X20]
	037 Move W1, 6
	038 Move X20, X0
	039 Call List`1<SingleRange>..ctor, X0, X1
	040 Move W8, 1
	041 Move [X19+16], X20
	042 Move [X19+32], W8
	043 Move X0, [X21]
	044 Call 0x1C17F10
	045 Move X1, X31
	046 Move X20, X0
	047 Call StringBuilder..ctor, X0
	048 Move [X19+24], X20
	049 Move X20, [X31+32]
	050 Move X19, [X31+40]
	051 Move X22, [X31+16]
	052 Move X21, [X31+24]
	053 Move X30, [X31+48]
	054 Move X23, [X31+56]
	055 Return 

Method: System.Void .ctor(System.Boolean negate, System.Collections.Generic.List`1<System.Text.RegularExpressions.RegexCharClass/SingleRange> ranges, System.Text.StringBuilder categories, System.Text.RegularExpressions.RegexCharClass subtraction)

Disassembly:
	0x03635204 LDR X8, [X20]
	0x03635208 LDR X8, [X8 + 0xB8]
	0x0363520C LDR X1, [X8 + 0x10]
	0x03635210 B 0x3635240
	0x03635214 ADRP X20, 0xB06000
	0x03635218 LDR X20, [X20 + 0x8E0]
	0x0363521C LDR X0, [X20]
	0x03635220 LDR W8, [X0 + 0xE0]
	0x03635224 CBNZ W8, 0x363522C
	0x03635228 BL 0x1C16DFC
	0x0363522C LDR X0, [X19 + 0x18]
	0x03635230 CBZ X0, 0x3635254
	0x03635234 LDR X8, [X20]
	0x03635238 LDR X8, [X8 + 0xB8]
	0x0363523C LDR X1, [X8 + 0x8]
	0x03635240 LDP X20, X19, [X31 + 0x20]
	0x03635244 LDP X22, X21, [X31 + 0x10]
	0x03635248 MOV X2, X31
	0x0363524C LDR X30, [X31], #0x30

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 And W23, W1, 1
	008 Move X1, X31
	009 Move X19, X4
	010 Move X20, X3
	011 Move X21, X2
	012 Move X22, X0
	013 Call Object..ctor, X0
	014 Move W8, 1
	015 Move [X22+16], X21
	016 Move [X22+24], X20
	017 Move [X22+33], W23
	018 Move [X22+32], W8
	019 Move [X22+40], X19
	020 Move X20, [X31+32]
	021 Move X19, [X31+40]
	022 Move X22, [X31+16]
	023 Move X21, [X31+24]
	024 Move X30, [X31+48]
	025 Move X23, [X31+56]
	026 Return 

Method: System.Boolean get_CanMerge()

Disassembly:
	0x03635250 B 0x32333E0
	0x03635254 BL 0x1C16F20
	0x03635258 STP X30, X23, [X31 - 0x30]!
	0x0363525C STP X22, X21, [X31 + 0x10]
	0x03635260 STP X20, X19, [X31 + 0x20]
	0x03635264 ADRP X23, 0xDAB000
	0x03635268 LDRB W8, [X23 + 0x544]
	0x0363526C MOV X19, X3

ISIL:
	001 Move W8, [X0+33]
	002 Compare W8, 0
	003 JumpIfEqual {6}
	004 Move W0, W31
	005 Return X0
	006 Move X8, [X0+40]
	007 NotImplemented "Instruction CMP not yet implemented."
	008 NotImplemented "Instruction CSET not yet implemented."
	009 Return X0

Method: System.Void set_Negate(System.Boolean value)

Disassembly:
	0x03635270 MOV W21, W2
	0x03635274 MOV W22, W1
	0x03635278 MOV X20, X0

ISIL:
	001 And W8, W1, 1
	002 Move [X0+33], W8
	003 Return 

Method: System.Void AddChar(System.Char c)

Disassembly:
	0x0363527C TBNZ X8, 0x0, 0x36352AC
	0x03635280 ADRP X0, 0xB06000

ISIL:
	001 Move W2, W1

Method: System.Void AddCharClass(System.Text.RegularExpressions.RegexCharClass cc)

Disassembly:
	0x036353A0 BL 0x1C16DFC
	0x036353A4 MOV X0, X19
	0x036353A8 BL 0x36353E8
	0x036353AC EOR W8, W0, 0x1
	0x036353B0 LDP X20, X19, [X31 + 0x10]
	0x036353B4 AND W0, W8, 0x1
	0x036353B8 LDP X30, X21, [X31], #0x20
	0x036353BC RET
	0x036353C0 CBZ X0, 0x36353E4
	0x036353C4 STR X30, [X31 - 0x10]!
	0x036353C8 MOV W1, W31
	0x036353CC MOV X2, X31
	0x036353D0 BL 0x3222A1C
	0x036353D4 AND W8, W0, 0xFFFF
	0x036353D8 CMP W8, 0x1
	0x036353DC CSET W0, EQ
	0x036353E0 LDR X30, [X31], #0x10
	0x036353E4 RET
	0x036353E8 STP X30, X21, [X31 - 0x20]!
	0x036353EC STP X20, X19, [X31 + 0x10]
	0x036353F0 CBZ X0, 0x363543C
	0x036353F4 LDR W21, [X0 + 0x10]
	0x036353F8 MOVZ W1, 0x1
	0x036353FC MOV X2, X31
	0x03635400 MOV X19, X0
	0x03635404 BL 0x3222A1C
	0x03635408 MOV W20, W0
	0x0363540C MOVZ W1, 0x2
	0x03635410 MOV X0, X19
	0x03635414 MOV X2, X31
	0x03635418 BL 0x3222A1C
	0x0363541C AND W8, W20, 0xFFFF
	0x03635420 ADD W8, W8, W0, UXTH
	0x03635424 LDP X20, X19, [X31 + 0x10]
	0x03635428 ADD W8, W8, 0x3
	0x0363542C CMP W21, W8
	0x03635430 CSET W0, GT
	0x03635434 LDP X30, X21, [X31], #0x20
	0x03635438 RET
	0x0363543C BL 0x1C16F20
	0x03635440 STR X30, [X31 - 0x20]!
	0x03635444 STP X20, X19, [X31 + 0x10]
	0x03635448 ADRP X20, 0xDAB000
	0x0363544C LDRB W8, [X20 + 0x546]
	0x03635450 MOV X19, X0
	0x03635454 TBNZ X8, 0x0, 0x363546C
	0x03635458 ADRP X0, 0xB06000
	0x0363545C LDR X0, [X0 + 0x8E0]
	0x03635460 BL 0x1C16CF4
	0x03635464 MOVZ W8, 0x1
	0x03635468 STRB W8, [X20 + 0x546]
	0x0363546C CBZ X19, 0x36354FC
	0x03635470 MOVZ W1, 0x2
	0x03635474 MOV X0, X19
	0x03635478 MOV X2, X31
	0x0363547C BL 0x3222A1C
	0x03635480 ANDS W31, W0, 0xFFFF
	0x03635484 B.EQ 0x3635490
	0x03635488 MOV W8, W31
	0x0363548C B 0x36354AC
	0x03635490 MOV X0, X19
	0x03635494 MOV W1, W31
	0x03635498 MOV X2, X31
	0x0363549C BL 0x3222A1C
	0x036354A0 ANDS W31, W0, 0xFFFF
	0x036354A4 MOV W8, W31
	0x036354A8 B.EQ 0x36354BC
	0x036354AC LDP X20, X19, [X31 + 0x10]
	0x036354B0 AND W0, W8, 0x1
	0x036354B4 LDR X30, [X31], #0x20
	0x036354B8 RET
	0x036354BC MOVZ W1, 0x1
	0x036354C0 MOV X0, X19
	0x036354C4 MOV X2, X31
	0x036354C8 BL 0x3222A1C
	0x036354CC ANDS W31, W0, 0xFFFF
	0x036354D0 B.NE 0x3635488
	0x036354D4 ADRP X8, 0xB06000
	0x036354D8 LDR X8, [X8 + 0x8E0]
	0x036354DC LDR X0, [X8]
	0x036354E0 LDR W8, [X0 + 0xE0]
	0x036354E4 CBNZ W8, 0x36354EC
	0x036354E8 BL 0x1C16DFC
	0x036354EC MOV X0, X19
	0x036354F0 BL 0x36353E8
	0x036354F4 EOR W8, W0, 0x1
	0x036354F8 B 0x36354AC
	0x036354FC BL 0x1C16F20
	0x03635500 STR X30, [X31 - 0x20]!
	0x03635504 STP X20, X19, [X31 + 0x10]
	0x03635508 ADRP X20, 0xDAB000
	0x0363550C LDRB W8, [X20 + 0x547]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0xDAC000
	008 Move W8, [X21+1340]
	009 Move X20, X1
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0xB07000
	016 Move X0, [X0+2248]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X21+1340], W8
	020 Compare X20, 0
	021 JumpIfEqual {103}
	022 Move W8, [X20+32]
	023 Compare W8, 0
	024 JumpIfEqual {45}
	025 Move W8, [X19+32]
	026 Compare W8, 0
	027 JumpIfEqual {46}
	028 Move X0, X19
	029 Call RegexCharClass.RangeCount, X0
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move X0, X20
	032 Call RegexCharClass.RangeCount, X0
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move X0, X20
	035 Move W1, W31
	036 Call RegexCharClass.GetRangeAt, X0, X1
	037 Move X21, X0
	038 Move X0, X19
	039 Call RegexCharClass.RangeCount, X0
	040 Subtract W1, W0, 1
	041 Move X0, X19
	042 Call RegexCharClass.GetRangeAt, X0, X1
	043 And W8, W21, 0xFFFF
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Move [X19+32], W31
	046 Move X0, X20
	047 Call RegexCharClass.RangeCount, X0
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move X23, 0xB07000
	050 Move X23, [X23+2248]
	051 Move W21, W31
	052 Move X22, [X19+16]
	053 Move X0, X20
	054 Move W1, W21
	055 Call RegexCharClass.GetRangeAt, X0, X1
	056 Compare X22, 0
	057 JumpIfEqual {103}
	058 Move W10, [X22+28]
	059 Move X8, [X22+16]
	060 Move X9, [X23]
	061 Add W10, W10, 1
	062 Move [X22+28], W10
	063 Compare X8, 0
	064 JumpIfEqual {103}
	065 NotImplemented "Instruction LDRSW not yet implemented."
	066 Move W11, [X8+24]
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Add W9, W10, 1
	069 Add X8, X8, X10
	070 Move [X22+24], W9
	071 Move [X8+32], W0
	072 Move X8, [X9+32]
	073 And X1, X0, 0
	074 Move X0, X22
	075 Move X8, [X8+192]
	076 Move X2, [X8+112]
	077 Call List`1<SingleRange>.AddWithResize, X0, X1
	078 Move X0, X20
	079 Add W21, W21, 1
	080 Call RegexCharClass.RangeCount, X0
	081 NotImplemented "Instruction CMP not yet implemented."
	082 Move X0, [X20+24]
	083 Compare X0, 0
	084 JumpIfEqual {103}
	085 Move X8, [X0]
	086 Move X19, [X19+24]
	087 Move X9, [X8+360]
	088 Move X1, [X8+368]
	089 NotImplemented "Instruction BLR not yet implemented."
	090 Compare X19, 0
	091 JumpIfEqual {103}
	092 Move X1, X0
	093 Move X0, X19
	094 Move X20, [X31+32]
	095 Move X19, [X31+40]
	096 Move X22, [X31+16]
	097 Move X21, [X31+24]
	098 Move X2, X31
	099 Move X30, [X31+48]
	100 Move X23, [X31+56]
	101 Call StringBuilder.Append, X0, X1
	102 Return 
	103 Call 0x1C17F20

Method: System.Void AddSet(System.String set)

Disassembly:
	0x036355B8 B.EQ 0x36355F0
	0x036355BC MOVZ W1, 0x3
	0x036355C0 MOV X0, X19
	0x036355C4 MOV X2, X31
	0x036355C8 BL 0x3222A1C
	0x036355CC MOV W20, W0
	0x036355D0 MOVZ W1, 0x4
	0x036355D4 MOV X0, X19
	0x036355D8 MOV X2, X31
	0x036355DC BL 0x3222A1C
	0x036355E0 AND W8, W20, 0xFFFF
	0x036355E4 ADD W8, W8, 0x1
	0x036355E8 CMP W8, W0, UXTH
	0x036355EC B.NE 0x36355F8
	0x036355F0 MOVZ W0, 0x1
	0x036355F4 B 0x36355FC
	0x036355F8 MOV W0, W31
	0x036355FC LDP X20, X19, [X31 + 0x10]
	0x03635600 LDR X30, [X31], #0x20
	0x03635604 RET
	0x03635608 BL 0x1C16F20
	0x0363560C STR X30, [X31 - 0x20]!
	0x03635610 STP X20, X19, [X31 + 0x10]
	0x03635614 ADRP X20, 0xDAB000
	0x03635618 LDRB W8, [X20 + 0x548]
	0x0363561C MOV X19, X0
	0x03635620 TBNZ X8, 0x0, 0x3635638
	0x03635624 ADRP X0, 0xB06000
	0x03635628 LDR X0, [X0 + 0x8E0]
	0x0363562C BL 0x1C16CF4
	0x03635630 MOVZ W8, 0x1
	0x03635634 STRB W8, [X20 + 0x548]
	0x03635638 CBZ X19, 0x3635718
	0x0363563C MOV X0, X19
	0x03635640 MOV W1, W31
	0x03635644 MOV X2, X31
	0x03635648 BL 0x3222A1C
	0x0363564C AND W8, W0, 0xFFFF
	0x03635650 CMP W8, 0x1
	0x03635654 B.NE 0x3635708
	0x03635658 MOVZ W1, 0x2
	0x0363565C MOV X0, X19
	0x03635660 MOV X2, X31
	0x03635664 BL 0x3222A1C
	0x03635668 ANDS W31, W0, 0xFFFF
	0x0363566C B.NE 0x3635708
	0x03635670 MOVZ W1, 0x1
	0x03635674 MOV X0, X19
	0x03635678 MOV X2, X31
	0x0363567C BL 0x3222A1C
	0x03635680 AND W8, W0, 0xFFFF
	0x03635684 CMP W8, 0x2
	0x03635688 B.NE 0x3635708
	0x0363568C ADRP X8, 0xB06000
	0x03635690 LDR X8, [X8 + 0x8E0]
	0x03635694 LDR X0, [X8]
	0x03635698 LDR W8, [X0 + 0xE0]
	0x0363569C CBNZ W8, 0x36356A4
	0x036356A0 BL 0x1C16DFC
	0x036356A4 MOV X0, X19
	0x036356A8 BL 0x36353E8
	0x036356AC TBNZ X0, 0x0, 0x3635708
	0x036356B0 MOVZ W1, 0x3
	0x036356B4 MOV X0, X19
	0x036356B8 MOV X2, X31
	0x036356BC BL 0x3222A1C
	0x036356C0 ORN W8, W31, W0, 0x0
	0x036356C4 ANDS W31, W8, 0xFFFF
	0x036356C8 B.EQ 0x3635700
	0x036356CC MOVZ W1, 0x3
	0x036356D0 MOV X0, X19
	0x036356D4 MOV X2, X31
	0x036356D8 BL 0x3222A1C
	0x036356DC MOV W20, W0
	0x036356E0 MOVZ W1, 0x4
	0x036356E4 MOV X0, X19
	0x036356E8 MOV X2, X31
	0x036356EC BL 0x3222A1C
	0x036356F0 AND W8, W20, 0xFFFF
	0x036356F4 ADD W8, W8, 0x1
	0x036356F8 CMP W8, W0, UXTH
	0x036356FC B.NE 0x3635708
	0x03635700 MOVZ W0, 0x1
	0x03635704 B 0x363570C
	0x03635708 MOV W0, W31
	0x0363570C LDP X20, X19, [X31 + 0x10]
	0x03635710 LDR X30, [X31], #0x20
	0x03635714 RET
	0x03635718 BL 0x1C16F20
	0x0363571C STP X30, X21, [X31 - 0x20]!
	0x03635720 STP X20, X19, [X31 + 0x10]
	0x03635724 ADRP X21, 0xDAB000
	0x03635728 ADRP X20, 0xB06000
	0x0363572C LDRB W8, [X21 + 0x549]
	0x03635730 LDR X20, [X20 + 0x8E0]
	0x03635734 MOV W19, W0
	0x03635738 TBNZ X8, 0x0, 0x363575C
	0x0363573C ADRP X0, 0xB06000
	0x03635740 LDR X0, [X0 + 0x8E0]
	0x03635744 BL 0x1C16CF4
	0x03635748 ADRP X0, 0xB06000
	0x0363574C LDR X0, [X0 + 0x960]
	0x03635750 BL 0x1C16CF4
	0x03635754 MOVZ W8, 0x1
	0x03635758 STRB W8, [X21 + 0x549]
	0x0363575C LDR X0, [X20]
	0x03635760 ADRP X20, 0xB06000
	0x03635764 LDR W8, [X0 + 0xE0]
	0x03635768 LDR X20, [X20 + 0x960]
	0x0363576C CBNZ W8, 0x3635774
	0x03635770 BL 0x1C16DFC
	0x03635774 LDR X1, [X20]
	0x03635778 MOV W0, W19
	0x0363577C LDP X20, X19, [X31 + 0x10]
	0x03635780 LDP X30, X21, [X31], #0x20
	0x03635784 B 0x3635788
	0x03635788 STR X30, [X31 - 0x30]!
	0x0363578C STP X22, X21, [X31 + 0x10]
	0x03635790 STP X20, X19, [X31 + 0x20]
	0x03635794 ADRP X22, 0xDAB000
	0x03635798 ADRP X21, 0xB06000
	0x0363579C LDRB W8, [X22 + 0x54B]
	0x036357A0 LDR X21, [X21 + 0x8E0]
	0x036357A4 MOV X19, X1
	0x036357A8 MOV W20, W0
	0x036357AC TBNZ X8, 0x0, 0x36357C4
	0x036357B0 ADRP X0, 0xB06000
	0x036357B4 LDR X0, [X0 + 0x8E0]
	0x036357B8 BL 0x1C16CF4
	0x036357BC MOVZ W8, 0x1
	0x036357C0 STRB W8, [X22 + 0x54B]
	0x036357C4 LDR X0, [X21]
	0x036357C8 LDR W8, [X0 + 0xE0]
	0x036357CC CBNZ W8, 0x36357D4
	0x036357D0 BL 0x1C16DFC
	0x036357D4 MOV W0, W20
	0x036357D8 MOV X1, X19

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X21, 0xDAC000
	011 Move W8, [X21+1341]
	012 Move X19, X1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0xB07000
	019 Move X0, [X0+2248]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X21+1341], W8
	023 Move W8, [X20+32]
	024 Compare W8, 0
	025 JumpIfEqual {48}
	026 Move X0, X20
	027 Call RegexCharClass.RangeCount, X0
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Compare X19, 0
	030 JumpIfEqual {145}
	031 Move W8, [X19+16]
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move X0, X19
	034 Move W1, W31
	035 Move X2, X31
	036 Call String.get_Chars, X0, X1
	037 Move W21, W0
	038 Move X0, X20
	039 Call RegexCharClass.RangeCount, X0
	040 Subtract W1, W0, 1
	041 Move X0, X20
	042 Call RegexCharClass.GetRangeAt, X0, X1
	043 Move X8, X0
	044 ShiftRight X8, 16
	045 And X8, X8, 0x7FFFFFFF
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Move [X20+32], W31
	048 Compare X19, 0
	049 JumpIfEqual {145}
	050 Move W8, [X19+16]
	051 Move X25, 0xB07000
	052 Move X25, [X25+2248]
	053 Subtract W9, W8, 1
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Move W9, W31
	056 Move X23, [X20+16]
	057 Move X0, X19
	058 Move W1, W9
	059 Move X2, X31
	060 Move W21, W9
	061 Call String.get_Chars, X0, X1
	062 Add W22, W21, 1
	063 Move W24, W0
	064 Move X0, X19
	065 Move W1, W22
	066 Move X2, X31
	067 Call String.get_Chars, X0, X1
	068 Subtract W2, W0, 1
	069 Add X0, X31, 12
	070 Move W1, W24
	071 Move X3, X31
	072 Move [X31+12], W31
	073 Call SingleRange..ctor, X0, X1, X2
	074 Compare X23, 0
	075 JumpIfEqual {145}
	076 Move W10, [X23+28]
	077 Move W1, [X31+12]
	078 Move X8, [X23+16]
	079 Move X9, [X25]
	080 Add W10, W10, 1
	081 Move [X23+28], W10
	082 Compare X8, 0
	083 JumpIfEqual {145}
	084 NotImplemented "Instruction LDRSW not yet implemented."
	085 Move W11, [X8+24]
	086 NotImplemented "Instruction CMP not yet implemented."
	087 Add W9, W10, 1
	088 Add X8, X8, X10
	089 Move [X23+24], W9
	090 Move [X8+32], W1
	091 Move X8, [X9+32]
	092 Move X0, X23
	093 Move X8, [X8+192]
	094 Move X2, [X8+112]
	095 Call List`1<SingleRange>.AddWithResize, X0, X1
	096 Move W8, [X19+16]
	097 Add W9, W22, 1
	098 Subtract W10, W8, 1
	099 NotImplemented "Instruction CMP not yet implemented."
	100 Add W1, W21, 2
	101 Move W1, W31
	102 NotImplemented "Instruction CMP not yet implemented."
	103 Move X20, [X20+16]
	104 Move X0, X19
	105 Move X2, X31
	106 Call String.get_Chars, X0, X1
	107 Move W1, W0
	108 Add X0, X31, 8
	109 Move W2, 0xFFFF
	110 Move X3, X31
	111 Move [X31+8], W31
	112 Call SingleRange..ctor, X0, X1, X2
	113 Compare X20, 0
	114 JumpIfEqual {145}
	115 Move W10, [X20+28]
	116 Move W1, [X31+8]
	117 Move X8, [X20+16]
	118 Move X9, [X25]
	119 Add W10, W10, 1
	120 Move [X20+28], W10
	121 Compare X8, 0
	122 JumpIfEqual {145}
	123 NotImplemented "Instruction LDRSW not yet implemented."
	124 Move W11, [X8+24]
	125 NotImplemented "Instruction CMP not yet implemented."
	126 Add W9, W10, 1
	127 Add X8, X8, X10
	128 Move [X20+24], W9
	129 Move [X8+32], W1
	130 Move X8, [X9+32]
	131 Move X0, X20
	132 Move X8, [X8+192]
	133 Move X2, [X8+112]
	134 Call List`1<SingleRange>.AddWithResize, X0, X1
	135 Move X20, [X31+64]
	136 Move X19, [X31+72]
	137 Move X22, [X31+48]
	138 Move X21, [X31+56]
	139 Move X24, [X31+32]
	140 Move X23, [X31+40]
	141 Move X30, [X31+16]
	142 Move X25, [X31+24]
	143 Add X31, X31, 80
	144 Return 
	145 Call 0x1C17F20

Method: System.Void AddSubtraction(System.Text.RegularExpressions.RegexCharClass sub)

Disassembly:
	0x036357DC LDP X20, X19, [X31 + 0x20]
	0x036357E0 LDP X22, X21, [X31 + 0x10]

ISIL:
	001 Move [X0+40], X1
	002 Return 

Method: System.Void AddRange(System.Char first, System.Char last)

Disassembly:
	0x03635284 LDR X0, [X0 + 0x948]
	0x03635288 BL 0x1C16CF4
	0x0363528C ADRP X0, 0xB06000
	0x03635290 LDR X0, [X0 + 0x950]
	0x03635294 BL 0x1C16CF4
	0x03635298 ADRP X0, 0xB06000
	0x0363529C LDR X0, [X0 + 0x958]
	0x036352A0 BL 0x1C16CF4
	0x036352A4 MOVZ W8, 0x1
	0x036352A8 STRB W8, [X23 + 0x544]
	0x036352AC TBZ X22, 0x0, 0x36352C0
	0x036352B0 TBZ X21, 0x0, 0x36352EC
	0x036352B4 ADRP X8, 0xB06000
	0x036352B8 LDR X8, [X8 + 0x948]
	0x036352BC B 0x36352F4
	0x036352C0 ADRP X8, 0xB06000
	0x036352C4 LDR X8, [X8 + 0x950]
	0x036352C8 AND W2, W21, 0x1
	0x036352CC MOV X0, X20
	0x036352D0 MOV X4, X19
	0x036352D4 LDR X1, [X8]
	0x036352D8 LDP X20, X19, [X31 + 0x20]
	0x036352DC LDP X22, X21, [X31 + 0x10]
	0x036352E0 MOV W3, W31
	0x036352E4 LDP X30, X23, [X31], #0x30
	0x036352E8 B 0x36347E4
	0x036352EC ADRP X8, 0xB06000
	0x036352F0 LDR X8, [X8 + 0x958]
	0x036352F4 LDR X1, [X8]
	0x036352F8 MOV X0, X20
	0x036352FC LDP X20, X19, [X31 + 0x20]
	0x03635300 LDP X22, X21, [X31 + 0x10]
	0x03635304 LDP X30, X23, [X31], #0x30
	0x03635308 B 0x36345B8
	0x0363530C CBZ X0, 0x363531C
	0x03635310 MOVZ W1, 0x3
	0x03635314 MOV X2, X31
	0x03635318 B 0x3222A1C
	0x0363531C STR X30, [X31 - 0x10]!
	0x03635320 BL 0x1C16F20
	0x03635324 STP X30, X21, [X31 - 0x20]!
	0x03635328 STP X20, X19, [X31 + 0x10]
	0x0363532C ADRP X21, 0xDAB000
	0x03635330 ADRP X20, 0xB06000
	0x03635334 LDRB W8, [X21 + 0x545]
	0x03635338 LDR X20, [X20 + 0x8E0]
	0x0363533C MOV X19, X0
	0x03635340 TBNZ X8, 0x0, 0x3635358
	0x03635344 ADRP X0, 0xB06000
	0x03635348 LDR X0, [X0 + 0x8E0]
	0x0363534C BL 0x1C16CF4
	0x03635350 MOVZ W8, 0x1
	0x03635354 STRB W8, [X21 + 0x545]
	0x03635358 LDR X0, [X20]
	0x0363535C LDR W8, [X0 + 0xE0]
	0x03635360 CBZ W8, 0x363536C
	0x03635364 CBNZ X19, 0x3635374
	0x03635368 B 0x3635394
	0x0363536C BL 0x1C16DFC
	0x03635370 CBZ X19, 0x3635394
	0x03635374 MOV X0, X19
	0x03635378 MOV W1, W31
	0x0363537C MOV X2, X31
	0x03635380 BL 0x3222A1C
	0x03635384 AND W8, W0, 0xFFFF
	0x03635388 CMP W8, 0x1
	0x0363538C MOV W8, W31
	0x03635390 B.EQ 0x36353B0
	0x03635394 LDR X0, [X20]
	0x03635398 LDR W8, [X0 + 0xE0]
	0x0363539C CBNZ W8, 0x36353A4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xDAC000
	007 Move W8, [X21+1342]
	008 Move W22, W2
	009 Move W19, W1
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {26}
	015 Move X0, 0xB07000
	016 Move X0, [X0+2248]
	017 Call 0x1C17CF4
	018 Move X0, 0xB07000
	019 Move X0, [X0+2256]
	020 Call 0x1C17CF4
	021 Move X0, 0xB07000
	022 Move X0, [X0+2264]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X21+1342], W8
	026 Move X21, [X20+16]
	027 Add X0, X31, 12
	028 Move W1, W19
	029 Move W2, W22
	030 Move X3, X31
	031 Move [X31+12], W31
	032 Call SingleRange..ctor, X0, X1, X2
	033 Compare X21, 0
	034 JumpIfEqual {80}
	035 Move X9, 0xB07000
	036 Move X9, [X9+2248]
	037 Move W10, [X21+28]
	038 Move W1, [X31+12]
	039 Move X8, [X21+16]
	040 Move X9, [X9]
	041 Add W10, W10, 1
	042 Move [X21+28], W10
	043 Compare X8, 0
	044 JumpIfEqual {80}
	045 NotImplemented "Instruction LDRSW not yet implemented."
	046 Move W11, [X8+24]
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Add W9, W10, 1
	049 Add X8, X8, X10
	050 Move [X21+24], W9
	051 Move [X8+32], W1
	052 Move X8, [X9+32]
	053 Move X0, X21
	054 Move X8, [X8+192]
	055 Move X2, [X8+112]
	056 Call List`1<SingleRange>.AddWithResize, X0, X1
	057 Move W8, [X20+32]
	058 Compare W8, 0
	059 JumpIfEqual {74}
	060 Move X0, [X20+16]
	061 Compare X0, 0
	062 JumpIfEqual {80}
	063 Move W8, [X0+24]
	064 Subtract W1, W8, 1
	065 Move X8, 0xB07000
	066 Move X8, [X8+2264]
	067 Move X2, [X8]
	068 Call List`1<SingleRange>.get_Item, X0, X1
	069 Move X8, X0
	070 ShiftRight X8, 16
	071 And X8, X8, 0x7FFFFFFF
	072 NotImplemented "Instruction CMP not yet implemented."
	073 Move [X20+32], W31
	074 Move X20, [X31+32]
	075 Move X19, [X31+40]
	076 Move X22, [X31+16]
	077 Move X21, [X31+24]
	078 Move X30, [X31+48]
	079 Return 
	080 Call 0x1C17F20

Method: System.Void AddCategoryFromName(System.String categoryName, System.Boolean invert, System.Boolean caseInsensitive, System.String pattern)

Disassembly:
	0x036357E4 MOV W2, W31
	0x036357E8 LDR X30, [X31], #0x30
	0x036357EC B 0x363586C
	0x036357F0 STP X30, X21, [X31 - 0x20]!
	0x036357F4 STP X20, X19, [X31 + 0x10]
	0x036357F8 ADRP X21, 0xDAB000
	0x036357FC ADRP X20, 0xB06000
	0x03635800 LDRB W8, [X21 + 0x54A]
	0x03635804 LDR X20, [X20 + 0x8E0]
	0x03635808 MOV W19, W0
	0x0363580C TBNZ X8, 0x0, 0x3635824
	0x03635810 ADRP X0, 0xB06000
	0x03635814 LDR X0, [X0 + 0x8E0]
	0x03635818 BL 0x1C16CF4
	0x0363581C MOVZ W8, 0x1
	0x03635820 STRB W8, [X21 + 0x54A]
	0x03635824 LDR X0, [X20]
	0x03635828 LDR W8, [X0 + 0xE0]
	0x0363582C CBNZ W8, 0x3635838
	0x03635830 BL 0x1C16DFC
	0x03635834 LDR X0, [X20]
	0x03635838 LDR X8, [X0 + 0xB8]
	0x0363583C MOV W0, W19
	0x03635840 LDR X1, [X8 + 0x38]
	0x03635844 BL 0x3635788
	0x03635848 AND W8, W19, 0xFFFE
	0x0363584C MOVZ W9, 0x1006
	0x03635850 CMP W9, W8, LSR
	0x03635854 LDP X20, X19, [X31 + 0x10]
	0x03635858 CSET W8, EQ
	0x0363585C ORR W8, W8, W0, 0x0
	0x03635860 AND W0, W8, 0x1
	0x03635864 LDP X30, X21, [X31], #0x20
	0x03635868 RET
	0x0363586C STP X30, X25, [X31 - 0x40]!
	0x03635870 STP X24, X23, [X31 + 0x10]
	0x03635874 STP X22, X21, [X31 + 0x20]
	0x03635878 STP X20, X19, [X31 + 0x30]
	0x0363587C ADRP X22, 0xDAB000
	0x03635880 LDRB W8, [X22 + 0x54C]
	0x03635884 MOV W19, W2
	0x03635888 MOV X20, X1
	0x0363588C MOV W21, W0
	0x03635890 TBNZ X8, 0x0, 0x36358A8
	0x03635894 ADRP X0, 0xB06000
	0x03635898 LDR X0, [X0 + 0x8E0]
	0x0363589C BL 0x1C16CF4
	0x036358A0 MOVZ W8, 0x1
	0x036358A4 STRB W8, [X22 + 0x54C]
	0x036358A8 CBZ X20, 0x3635990
	0x036358AC ADRP X25, 0xB06000
	0x036358B0 LDR X25, [X25 + 0x8E0]
	0x036358B4 ADD W1, W19, 0x1
	0x036358B8 MOV X0, X20
	0x036358BC MOV X2, X31
	0x036358C0 BL 0x3222A1C
	0x036358C4 MOV W23, W0
	0x036358C8 AND W22, W0, 0xFFFF
	0x036358CC ADD W1, W19, 0x2
	0x036358D0 MOV X0, X20
	0x036358D4 MOV X2, X31
	0x036358D8 BL 0x3222A1C
	0x036358DC LDR W8, [X20 + 0x10]
	0x036358E0 ADD W9, W19, W23, UXTH
	0x036358E4 ADD W9, W9, W0, UXTH
	0x036358E8 ADD W24, W9, 0x3
	0x036358EC CMP W8, W24
	0x036358F0 AND W23, W0, 0xFFFF
	0x036358F4 B.LE 0x3635920
	0x036358F8 LDR X0, [X25]
	0x036358FC LDR W8, [X0 + 0xE0]
	0x03635900 CBNZ W8, 0x3635908
	0x03635904 BL 0x1C16DFC
	0x03635908 MOV W0, W21
	0x0363590C MOV X1, X20
	0x03635910 MOV W2, W24
	0x03635914 BL 0x363586C
	0x03635918 AND W24, W0, 0x1
	0x0363591C B 0x3635924
	0x03635920 MOV W24, W31
	0x03635924 LDR X0, [X25]
	0x03635928 LDR W8, [X0 + 0xE0]
	0x0363592C CBNZ W8, 0x3635934
	0x03635930 BL 0x1C16DFC
	0x03635934 MOV W0, W21
	0x03635938 MOV X1, X20
	0x0363593C MOV W2, W19
	0x03635940 MOV W3, W22
	0x03635944 MOV W4, W23
	0x03635948 BL 0x3635994
	0x0363594C MOV W21, W0
	0x03635950 MOV X0, X20
	0x03635954 MOV W1, W19
	0x03635958 MOV X2, X31
	0x0363595C BL 0x3222A1C
	0x03635960 AND W8, W0, 0xFFFF
	0x03635964 CMP W8, 0x1
	0x03635968 CSET W8, EQ
	0x0363596C CMP W24, 0x0
	0x03635970 EOR W8, W21, W8, 0x0
	0x03635974 LDP X20, X19, [X31 + 0x30]
	0x03635978 LDP X22, X21, [X31 + 0x20]
	0x0363597C LDP X24, X23, [X31 + 0x10]
	0x03635980 CSET W9, EQ
	0x03635984 AND W0, W9, W8, 0x0
	0x03635988 LDP X30, X25, [X31], #0x40
	0x0363598C RET
	0x03635990 BL 0x1C16F20
	0x03635994 STR X30, [X31 - 0x50]!
	0x03635998 STP X26, X25, [X31 + 0x10]
	0x0363599C STP X24, X23, [X31 + 0x20]
	0x036359A0 STP X22, X21, [X31 + 0x30]
	0x036359A4 STP X20, X19, [X31 + 0x40]
	0x036359A8 ADRP X24, 0xDAB000
	0x036359AC LDRB W8, [X24 + 0x54D]
	0x036359B0 MOV W19, W4
	0x036359B4 MOV W20, W3
	0x036359B8 MOV W21, W2
	0x036359BC MOV X22, X1
	0x036359C0 MOV W23, W0
	0x036359C4 TBNZ X8, 0x0, 0x36359DC
	0x036359C8 ADRP X0, 0xB06000
	0x036359CC LDR X0, [X0 + 0x8E0]
	0x036359D0 BL 0x1C16CF4
	0x036359D4 MOVZ W8, 0x1
	0x036359D8 STRB W8, [X24 + 0x54D]
	0x036359DC ADD W25, W21, 0x3
	0x036359E0 CBZ W20, 0x3635A28
	0x036359E4 CBZ X22, 0x3635AA0
	0x036359E8 ADD W26, W25, W20
	0x036359EC ADD W8, W25, W26
	0x036359F0 CMP W8, 0x0

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X25, 0xDAC000
	011 Move X24, 0xB07000
	012 Move W8, [X25+1343]
	013 Move X24, [X24+2272]
	014 Move X22, X4
	015 Move W23, W3
	016 Move W20, W2
	017 Move X21, X1
	018 Move X19, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {43}
	023 Move X0, 0xAF4000
	024 Move X0, [X0+1272]
	025 Call 0x1C17CF4
	026 Move X0, 0xAEF000
	027 Move X0, [X0+2800]
	028 Call 0x1C17CF4
	029 Move X0, 0xB07000
	030 Move X0, [X0+2272]
	031 Call 0x1C17CF4
	032 Move X0, 0xB07000
	033 Move X0, [X0+2280]
	034 Call 0x1C17CF4
	035 Move X0, 0xB07000
	036 Move X0, [X0+2288]
	037 Call 0x1C17CF4
	038 Move X0, 0xB07000
	039 Move X0, [X0+2296]
	040 Call 0x1C17CF4
	041 Move W8, 1
	042 Move [X25+1343], W8
	043 Move X0, [X24]
	044 Move [X31+8], X31
	045 Move W8, [X0+224]
	046 Compare W8, 0
	047 JumpIfNotEqual {50}
	048 Call 0x1C17DFC
	049 Move X0, [X24]
	050 Move X8, [X0+184]
	051 Move X0, [X8+88]
	052 Compare X0, 0
	053 JumpIfEqual {172}
	054 Move X8, 0xAF4000
	055 Move X8, [X8+1272]
	056 Add X2, X31, 8
	057 Move X1, X21
	058 Move X3, [X8]
	059 Call Dictionary`2<Object, Object>.TryGetValue, X0, X1, X2
	060 Move TEMP, X0
	061 And TEMP, TEMP, 1
	062 Compare TEMP, 1
	063 JumpIfNotEqual {81}
	064 Move X0, [X24]
	065 Move W8, [X0+224]
	066 Compare W8, 0
	067 JumpIfNotEqual {69}
	068 Call 0x1C17DFC
	069 Compare X21, 0
	070 JumpIfEqual {172}
	071 Move X8, [X24]
	072 Move X0, X21
	073 Move X2, X31
	074 Move X8, [X8+184]
	075 Move X1, [X8]
	076 Call String.Equals, X0, X1
	077 Move TEMP, X0
	078 And TEMP, TEMP, 1
	079 Compare TEMP, 1
	080 JumpIfNotEqual {93}
	081 Move X0, [X24]
	082 Move W8, [X0+224]
	083 Compare W8, 0
	084 JumpIfNotEqual {86}
	085 Call 0x1C17DFC
	086 And W1, W20, 1
	087 Move X0, X21
	088 Move X2, X22
	089 Call RegexCharClass.SetFromProperty, X0, X1, X2
	090 Move X1, X0
	091 Move X0, X19
	092 Call RegexCharClass.AddSet, X0, X1
	093 Move TEMP, X23
	094 And TEMP, TEMP, 1
	095 Compare TEMP, 1
	096 JumpIfNotEqual {143}
	097 Move X8, 0xB07000
	098 Move X8, [X8+2288]
	099 Move X0, X21
	100 Move X2, X31
	101 Move X1, [X8]
	102 Call String.Equals, X0, X1
	103 Move TEMP, X0
	104 And TEMP, TEMP, 1
	105 Compare TEMP, 1
	106 JumpIfEqual {127}
	107 Move X8, 0xB07000
	108 Move X8, [X8+2296]
	109 Move X0, X21
	110 Move X2, X31
	111 Move X1, [X8]
	112 Call String.Equals, X0, X1
	113 Move TEMP, X0
	114 And TEMP, TEMP, 1
	115 Compare TEMP, 1
	116 JumpIfEqual {127}
	117 Move X8, 0xB07000
	118 Move X8, [X8+2280]
	119 Move X0, X21
	120 Move X2, X31
	121 Move X1, [X8]
	122 Call String.Equals, X0, X1
	123 Move TEMP, X0
	124 And TEMP, TEMP, 1
	125 Compare TEMP, 1
	126 JumpIfNotEqual {143}
	127 Move X0, [X24]
	128 Move W8, [X0+224]
	129 Compare W8, 0
	130 JumpIfNotEqual {133}
	131 Call 0x1C17DFC
	132 Move X0, [X24]
	133 Move X8, [X0+184]
	134 Move X0, [X8+88]
	135 Compare X0, 0
	136 JumpIfEqual {172}
	137 Move X1, [X8]
	138 Move X8, 0xAEF000
	139 Move X8, [X8+2800]
	140 Move X2, [X8]
	141 Call Dictionary`2<Object, Object>.get_Item, X0, X1
	142 Move [X31+8], X0
	143 Move TEMP, X20
	144 And TEMP, TEMP, 1
	145 Compare TEMP, 1
	146 JumpIfNotEqual {156}
	147 Move X0, [X24]
	148 Move X20, [X31+8]
	149 Move W8, [X0+224]
	150 Compare W8, 0
	151 JumpIfNotEqual {153}
	152 Call 0x1C17DFC
	153 Move X0, X20
	154 Call RegexCharClass.NegateCategory, X0
	155 Move [X31+8], X0
	156 Move X0, [X19+24]
	157 Compare X0, 0
	158 JumpIfEqual {172}
	159 Move X1, [X31+8]
	160 Move X2, X31
	161 Call StringBuilder.Append, X0, X1
	162 Move X20, [X31+64]
	163 Move X19, [X31+72]
	164 Move X22, [X31+48]
	165 Move X21, [X31+56]
	166 Move X24, [X31+32]
	167 Move X23, [X31+40]
	168 Move X30, [X31+16]
	169 Move X25, [X31+24]
	170 Add X31, X31, 80
	171 Return 
	172 Call 0x1C17F20

Method: System.Void AddCategory(System.String category)

Disassembly:
	0x03635CD8 ANDS W31, W0, 0xFFFF
	0x03635CDC SXTH W8, W0
	0x03635CE0 B.NE 0x3635CB0
	0x03635CE4 AND W0, W22, 0x1
	0x03635CE8 LDP X20, X19, [X31 + 0x20]
	0x03635CEC LDP X22, X21, [X31 + 0x10]
	0x03635CF0 LDR X30, [X31], #0x30

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+24]
	003 Compare X0, 0
	004 JumpIfEqual {9}
	005 Move X2, X31
	006 Move X30, [X31+16]
	007 Call StringBuilder.Append, X0, X1
	008 Return 
	009 Call 0x1C17F20

Method: System.Void AddLowercase(System.Globalization.CultureInfo culture)

Disassembly:
	0x03635CF4 RET
	0x03635CF8 BL 0x1C16F20
	0x03635CFC STP X30, X21, [X31 - 0x20]!
	0x03635D00 STP X20, X19, [X31 + 0x10]
	0x03635D04 ADRP X20, 0xDAB000
	0x03635D08 ADRP X21, 0xB06000
	0x03635D0C LDRB W8, [X20 + 0x54F]
	0x03635D10 LDR X21, [X21 + 0x8E0]
	0x03635D14 MOV X19, X0
	0x03635D18 TBNZ X8, 0x0, 0x3635D30
	0x03635D1C ADRP X0, 0xB06000
	0x03635D20 LDR X0, [X0 + 0x8E0]
	0x03635D24 BL 0x1C16CF4
	0x03635D28 MOVZ W8, 0x1
	0x03635D2C STRB W8, [X20 + 0x54F]
	0x03635D30 LDR X0, [X21]
	0x03635D34 LDR W8, [X0 + 0xE0]
	0x03635D38 CBNZ W8, 0x3635D40
	0x03635D3C BL 0x1C16DFC
	0x03635D40 MOV X0, X19
	0x03635D44 LDP X20, X19, [X31 + 0x10]
	0x03635D48 MOV W1, W31
	0x03635D4C LDP X30, X21, [X31], #0x20
	0x03635D50 B 0x3635D54
	0x03635D54 SUB X31, X31, 0x60
	0x03635D58 STP X30, X27, [X31 + 0x10]
	0x03635D5C STP X26, X25, [X31 + 0x20]
	0x03635D60 STP X24, X23, [X31 + 0x30]
	0x03635D64 STP X22, X21, [X31 + 0x40]
	0x03635D68 STP X20, X19, [X31 + 0x50]
	0x03635D6C ADRP X21, 0xDAB000
	0x03635D70 LDRB W8, [X21 + 0x550]
	0x03635D74 MOV W20, W1
	0x03635D78 MOV X19, X0
	0x03635D7C TBNZ X8, 0x0, 0x3635DC4
	0x03635D80 ADRP X0, 0xB06000
	0x03635D84 LDR X0, [X0 + 0x8C8]
	0x03635D88 BL 0x1C16CF4
	0x03635D8C ADRP X0, 0xB06000
	0x03635D90 LDR X0, [X0 + 0x8C0]
	0x03635D94 BL 0x1C16CF4
	0x03635D98 ADRP X0, 0xB06000
	0x03635D9C LDR X0, [X0 + 0x8B8]
	0x03635DA0 BL 0x1C16CF4
	0x03635DA4 ADRP X0, 0xB06000
	0x03635DA8 LDR X0, [X0 + 0x8E0]
	0x03635DAC BL 0x1C16CF4
	0x03635DB0 ADRP X0, 0xABE000
	0x03635DB4 LDR X0, [X0 + 0x8F0]
	0x03635DB8 BL 0x1C16CF4
	0x03635DBC MOVZ W8, 0x1
	0x03635DC0 STRB W8, [X21 + 0x550]
	0x03635DC4 CBZ X19, 0x3635FC8
	0x03635DC8 ADRP X22, 0xB06000
	0x03635DCC ADRP X26, 0xB06000
	0x03635DD0 LDR X22, [X22 + 0x8B8]
	0x03635DD4 LDR X26, [X26 + 0x8C0]
	0x03635DD8 ADD W1, W20, 0x1
	0x03635DDC MOV X0, X19
	0x03635DE0 MOV X2, X31
	0x03635DE4 BL 0x3222A1C
	0x03635DE8 MOV W21, W0
	0x03635DEC AND W25, W0, 0xFFFF
	0x03635DF0 ADD W1, W20, 0x2
	0x03635DF4 MOV X0, X19
	0x03635DF8 MOV X2, X31
	0x03635DFC BL 0x3222A1C
	0x03635E00 MOV W23, W0
	0x03635E04 LDR X0, [X22]
	0x03635E08 ADD W24, W20, 0x3
	0x03635E0C ADD W22, W24, W21, UXTH
	0x03635E10 BL 0x1C16F10
	0x03635E14 LDR X2, [X26]
	0x03635E18 MOV W1, W25
	0x03635E1C MOV X21, X0
	0x03635E20 BL 0x3134010
	0x03635E24 CMP W24, W22
	0x03635E28 B.GE 0x3635EE4
	0x03635E2C ADRP X26, 0xB06000

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X21, 0xDAC000
	011 Move W8, [X21+1344]
	012 Move X19, X1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0xB07000
	019 Move X0, [X0+2256]
	020 Call 0x1C17CF4
	021 Move X0, 0xB07000
	022 Move X0, [X0+2264]
	023 Call 0x1C17CF4
	024 Move X0, 0xB07000
	025 Move X0, [X0+2336]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X21+1344], W8
	029 Move X0, [X20+16]
	030 Move [X20+32], W31
	031 Compare X0, 0
	032 JumpIfEqual {85}
	033 Move W8, [X0+24]
	034 Subtract W23, W8, 1
	035 Move X24, 0xB07000
	036 Move X25, 0xB07000
	037 Move X24, [X24+2264]
	038 Move X25, [X25+2336]
	039 Move W21, W31
	040 Move X2, [X24]
	041 Move W1, W21
	042 Call List`1<SingleRange>.get_Item, X0, X1
	043 Move X22, X0
	044 Xor W8, W22, W22
	045 And X31, X8, 0xFFFF
	046 Move X2, X22
	047 ShiftRight X2, 16
	048 And X2, X2, 0x7FFFFFFF
	049 Move X0, X20
	050 Move W1, W22
	051 Call RegexCharClass.AddLowercaseRange, X0, X1, X2, X3
	052 Compare X19, 0
	053 JumpIfEqual {85}
	054 Move X8, [X19]
	055 Move X0, X19
	056 Move X9, [X8+472]
	057 Move X1, [X8+480]
	058 NotImplemented "Instruction BLR not yet implemented."
	059 Compare X0, 0
	060 JumpIfEqual {85}
	061 Move X8, [X0]
	062 Move W1, W22
	063 Move X9, [X8+424]
	064 Move X2, [X8+432]
	065 NotImplemented "Instruction BLR not yet implemented."
	066 Move X22, [X20+16]
	067 Move W1, W0
	068 Add X0, X31, 12
	069 Move W2, W1
	070 Move X3, X31
	071 Move [X31+12], W31
	072 Call SingleRange..ctor, X0, X1, X2
	073 Compare X22, 0
	074 JumpIfEqual {85}
	075 Move W2, [X31+12]
	076 Move X3, [X25]
	077 Move X0, X22
	078 Move W1, W21
	079 Call List`1<SingleRange>.set_Item, X0, X1, X2
	080 NotImplemented "Instruction CMP not yet implemented."
	081 Move X0, [X20+16]
	082 Add W21, W21, 1
	083 Compare X0, 0
	084 JumpIfNotEqual {40}
	085 Call 0x1C17F20
	086 Move X20, [X31+64]
	087 Move X19, [X31+72]
	088 Move X22, [X31+48]
	089 Move X21, [X31+56]
	090 Move X24, [X31+32]
	091 Move X23, [X31+40]
	092 Move X30, [X31+16]
	093 Move X25, [X31+24]
	094 Add X31, X31, 80
	095 Return 

Method: System.Void AddLowercaseRange(System.Char chMin, System.Char chMax, System.Globalization.CultureInfo culture)

Disassembly:
	0x03635E30 LDR X26, [X26 + 0x8C8]
	0x03635E34 MOV X0, X19
	0x03635E38 MOV W1, W24
	0x03635E3C MOV X2, X31
	0x03635E40 BL 0x3222A1C
	0x03635E44 ADD W1, W24, 0x1
	0x03635E48 CMP W1, W22
	0x03635E4C MOV W25, W0
	0x03635E50 B.GE 0x3635E68
	0x03635E54 MOV X0, X19
	0x03635E58 MOV X2, X31
	0x03635E5C BL 0x3222A1C
	0x03635E60 SUB W2, W0, 0x1
	0x03635E64 B 0x3635E6C
	0x03635E68 MOVZ W2, 0xFFFF
	0x03635E6C ADD X0, X31, 0xC
	0x03635E70 MOV W1, W25
	0x03635E74 MOV X3, X31
	0x03635E78 STR W31, [X31 + 0xC]
	0x03635E7C BL 0x363B668
	0x03635E80 CBZ X21, 0x3635FC8
	0x03635E84 LDR W10, [X21 + 0x1C]
	0x03635E88 LDR W1, [X31 + 0xC]
	0x03635E8C LDR X8, [X21 + 0x10]
	0x03635E90 LDR X9, [X26]
	0x03635E94 ADD W10, W10, 0x1
	0x03635E98 STR W10, [X21 + 0x1C]
	0x03635E9C CBZ X8, 0x3635FC8
	0x03635EA0 LDRSW X10, [X21 + 0x18]
	0x03635EA4 LDR W11, [X8 + 0x18]
	0x03635EA8 CMP W10, W11
	0x03635EAC B.CS 0x3635EC4
	0x03635EB0 ADD W9, W10, 0x1
	0x03635EB4 ADD X8, X8, X10, 0x2, LSL
	0x03635EB8 STR W9, [X21 + 0x18]
	0x03635EBC STR W1, [X8 + 0x20]
	0x03635EC0 B 0x3635ED8
	0x03635EC4 LDR X8, [X9 + 0x20]
	0x03635EC8 MOV X0, X21
	0x03635ECC LDR X8, [X8 + 0xC0]
	0x03635ED0 LDR X2, [X8 + 0x70]
	0x03635ED4 BL 0x31347A0
	0x03635ED8 ADD W24, W24, 0x2
	0x03635EDC CMP W24, W22
	0x03635EE0 B.LT 0x3635E34
	0x03635EE4 LDR W8, [X19 + 0x10]
	0x03635EE8 ADRP X27, 0xABE000
	0x03635EEC ADRP X26, 0xB06000
	0x03635EF0 LDR X27, [X27 + 0x8F0]
	0x03635EF4 LDR X26, [X26 + 0x8E0]
	0x03635EF8 ADD W25, W22, W23, UXTH
	0x03635EFC CMP W8, W25
	0x03635F00 AND W24, W23, 0xFFFF
	0x03635F04 B.LE 0x3635F2C
	0x03635F08 LDR X0, [X26]
	0x03635F0C LDR W8, [X0 + 0xE0]
	0x03635F10 CBNZ W8, 0x3635F18
	0x03635F14 BL 0x1C16DFC
	0x03635F18 MOV X0, X19
	0x03635F1C MOV W1, W25
	0x03635F20 BL 0x3635D54
	0x03635F24 MOV X23, X0
	0x03635F28 B 0x3635F30
	0x03635F2C MOV X23, X31
	0x03635F30 MOV X0, X19
	0x03635F34 MOV W1, W20
	0x03635F38 MOV X2, X31
	0x03635F3C BL 0x3222A1C
	0x03635F40 AND W25, W0, 0xFFFF
	0x03635F44 MOV X0, X19
	0x03635F48 MOV W1, W22
	0x03635F4C MOV W2, W24
	0x03635F50 MOV X3, X31
	0x03635F54 BL 0x3228DE4
	0x03635F58 LDR X8, [X27]
	0x03635F5C MOV X19, X0
	0x03635F60 MOV X0, X8
	0x03635F64 BL 0x1C16F10
	0x03635F68 MOV X1, X19
	0x03635F6C MOV X2, X31
	0x03635F70 MOV X20, X0
	0x03635F74 BL 0x3231CF8
	0x03635F78 LDR X0, [X26]
	0x03635F7C BL 0x1C16F10
	0x03635F80 CMP W25, 0x1
	0x03635F84 MOV X1, X31
	0x03635F88 MOV X19, X0
	0x03635F8C CSET W22, EQ
	0x03635F90 BL 0x33BDD8C
	0x03635F94 MOVZ W8, 0x1
	0x03635F98 STP X21, X20, [X19 + 0x10]
	0x03635F9C STRB W22, [X19 + 0x21]
	0x03635FA0 STRB W8, [X19 + 0x20]
	0x03635FA4 STR X23, [X19 + 0x28]
	0x03635FA8 MOV X0, X19
	0x03635FAC LDP X20, X19, [X31 + 0x50]
	0x03635FB0 LDP X22, X21, [X31 + 0x40]
	0x03635FB4 LDP X24, X23, [X31 + 0x30]
	0x03635FB8 LDP X26, X25, [X31 + 0x20]
	0x03635FBC LDP X30, X27, [X31 + 0x10]
	0x03635FC0 ADD X31, X31, 0x60
	0x03635FC4 RET
	0x03635FC8 BL 0x1C16F20
	0x03635FCC STR X30, [X31 - 0x40]!
	0x03635FD0 STP X24, X23, [X31 + 0x10]
	0x03635FD4 STP X22, X21, [X31 + 0x20]
	0x03635FD8 STP X20, X19, [X31 + 0x30]
	0x03635FDC ADRP X20, 0xDAB000
	0x03635FE0 LDRB W8, [X20 + 0x552]
	0x03635FE4 MOV X19, X0
	0x03635FE8 TBNZ X8, 0x0, 0x363600C
	0x03635FEC ADRP X0, 0xB06000
	0x03635FF0 LDR X0, [X0 + 0x8D0]
	0x03635FF4 BL 0x1C16CF4
	0x03635FF8 ADRP X0, 0xB06000
	0x03635FFC LDR X0, [X0 + 0x8D8]
	0x03636000 BL 0x1C16CF4
	0x03636004 MOVZ W8, 0x1
	0x03636008 STRB W8, [X20 + 0x552]
	0x0363600C LDRB W8, [X19 + 0x20]
	0x03636010 CBNZ W8, 0x363601C
	0x03636014 MOV X0, X19
	0x03636018 BL 0x3636168
	0x0363601C LDR X8, [X19 + 0x10]
	0x03636020 CBZ X8, 0x36360FC
	0x03636024 LDR X0, [X19 + 0x18]
	0x03636028 CBZ X0, 0x36360FC
	0x0363602C LDR W8, [X8 + 0x18]
	0x03636030 MOV X1, X31
	0x03636034 UBFM W21, W8, 0x1F, 0x1E
	0x03636038 BL 0x323260C
	0x0363603C ADD W8, W21, W0
	0x03636040 ADD W0, W8, 0x3
	0x03636044 MOV X1, X31
	0x03636048 BL 0x3235A9C
	0x0363604C CBZ X0, 0x36360FC
	0x03636050 LDRB W1, [X19 + 0x21]
	0x03636054 MOV X2, X31
	0x03636058 MOV X20, X0
	0x0363605C BL 0x3233D30

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X23, 0xDAC000
	012 Move X22, 0xB07000
	013 Move W8, [X23+1345]
	014 Move X22, [X22+2272]
	015 Move W19, W2
	016 Move W20, W1
	017 Move X21, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {27}
	022 Move X0, 0xB07000
	023 Move X0, [X0+2272]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X23+1345], W8
	027 Move X0, [X22]
	028 Move W8, [X0+224]
	029 Compare W8, 0
	030 JumpIfNotEqual {33}
	031 Call 0x1C17DFC
	032 Move X0, [X22]
	033 Move X8, [X0+184]
	034 Move X8, [X8+104]
	035 Compare X8, 0
	036 JumpIfEqual {151}
	037 Move W24, [X8+24]
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Move W23, W31
	040 Move W25, 12
	041 Move W8, [X0+224]
	042 Add W9, W23, W24
	043 NotImplemented "Instruction CMP not yet implemented."
	044 NotImplemented "Instruction CINC not yet implemented."
	045 Compare W8, 0
	046 JumpIfNotEqual {49}
	047 Call 0x1C17DFC
	048 Move X0, [X22]
	049 Move X8, [X0+184]
	050 Move X8, [X8+104]
	051 Compare X8, 0
	052 JumpIfEqual {151}
	053 Move W10, [X8+24]
	054 NotImplemented "Instruction SBFM not yet implemented."
	055 NotImplemented "Instruction CMP not yet implemented."
	056 NotImplemented "Instruction SMADDL not yet implemented."
	057 NotImplemented "Instruction LDRH not yet implemented."
	058 NotImplemented "Instruction CMP not yet implemented."
	059 NotImplemented "Instruction CSEL not yet implemented."
	060 NotImplemented "Instruction CSINC not yet implemented."
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Move W23, W31
	063 Move W8, [X0+224]
	064 Compare W8, 0
	065 JumpIfNotEqual {68}
	066 Call 0x1C17DFC
	067 Move X0, [X22]
	068 Move X8, [X0+184]
	069 Move X8, [X8+104]
	070 Compare X8, 0
	071 JumpIfEqual {151}
	072 Move W8, [X8+24]
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Move X27, -45117440
	075 And W24, W19, 0xFFFF
	076 And W25, W20, 0xFFFF
	077 Move W26, 12
	078 Add X27, X27, 2436
	079 Move W8, [X0+224]
	080 Compare W8, 0
	081 JumpIfNotEqual {84}
	082 Call 0x1C17DFC
	083 Move X0, [X22]
	084 Move X8, [X0+184]
	085 Move X8, [X8+104]
	086 Compare X8, 0
	087 JumpIfEqual {151}
	088 Move W9, [X8+24]
	089 NotImplemented "Instruction CMP not yet implemented."
	090 Move W9, [X0+224]
	091 Compare W9, 0
	092 JumpIfNotEqual {99}
	093 Call 0x1C17DFC
	094 Move X0, [X22]
	095 Move X8, [X0+184]
	096 Move X8, [X8+104]
	097 Compare X8, 0
	098 JumpIfEqual {151}
	099 Move W9, [X8+24]
	100 NotImplemented "Instruction CMP not yet implemented."
	101 Move X9, W23
	102 NotImplemented "Instruction MADD not yet implemented."
	103 Move X9, [X8+32]
	104 And W11, W9, 0xFFFF
	105 NotImplemented "Instruction CMP not yet implemented."
	106 Move X12, X9
	107 ShiftRight X12, 16
	108 And X12, X12, 0x7FFFFFFF
	109 NotImplemented "Instruction CMP not yet implemented."
	110 Move X10, X9
	111 ShiftRight X10, 32
	112 And X10, X10, 0x7FFFFFFF
	113 NotImplemented "Instruction CSEL not yet implemented."
	114 NotImplemented "Instruction CMP not yet implemented."
	115 NotImplemented "Instruction CSEL not yet implemented."
	116 NotImplemented "Instruction CMP not yet implemented."
	117 Move W8, [X8+40]
	118 NotImplemented "Instruction ADR not yet implemented."
	119 Move W11, [X27]
	120 Add X9, X9, X11
	121 CallNoReturn X9
	122 Move W2, W8
	123 Move W1, W8
	124 Add W1, W1, W8
	125 Add W2, W2, W8
	126 Or W1, W1, 1
	127 Or W2, W2, 1
	128 And W8, W1, 1
	129 And W9, W2, 1
	130 Add W1, W8, W1
	131 Add W2, W9, W2
	132 And W8, W2, 0xFFFF
	133 NotImplemented "Instruction CMP not yet implemented."
	134 And W8, W1, 0xFFFF
	135 NotImplemented "Instruction CMP not yet implemented."
	136 Move X0, X21
	137 Call RegexCharClass.AddRange, X0, X1, X2
	138 Move X0, [X22]
	139 Add W23, W23, 1
	140 Move X20, [X31+64]
	141 Move X19, [X31+72]
	142 Move X22, [X31+48]
	143 Move X21, [X31+56]
	144 Move X24, [X31+32]
	145 Move X23, [X31+40]
	146 Move X26, [X31+16]
	147 Move X25, [X31+24]
	148 Move X30, [X31+80]
	149 Move X27, [X31+88]
	150 Return 
	151 Call 0x1C17F20
	152 Call 0x1C17F28

Method: System.Void AddWord(System.Boolean ecma, System.Boolean negate)

Disassembly:
	0x03636060 MOV X0, X20
	0x03636064 MOV W1, W21
	0x03636068 MOV X2, X31
	0x0363606C BL 0x3233D30
	0x03636070 LDR X0, [X19 + 0x18]
	0x03636074 CBZ X0, 0x36360FC
	0x03636078 MOV X1, X31
	0x0363607C BL 0x323260C
	0x03636080 MOV W1, W0
	0x03636084 MOV X0, X20
	0x03636088 MOV X2, X31
	0x0363608C BL 0x3233D30
	0x03636090 LDR X0, [X19 + 0x10]
	0x03636094 CBZ X0, 0x36360FC
	0x03636098 ADRP X23, 0xB05000
	0x0363609C LDR X23, [X23 + 0x8D8]
	0x036360A0 MOV W21, W31
	0x036360A4 LDR W8, [X0 + 0x18]
	0x036360A8 CMP W21, W8
	0x036360AC B.GE 0x3636100
	0x036360B0 LDR X2, [X23]
	0x036360B4 MOV W1, W21
	0x036360B8 BL 0x31344AC
	0x036360BC MOV X22, X0
	0x036360C0 MOV X0, X20
	0x036360C4 MOV W1, W22
	0x036360C8 MOV X2, X31
	0x036360CC ORN W24, W31, W22, 0x0
	0x036360D0 BL 0x3233D30
	0x036360D4 ANDS X31, X24, 0xFFFFFFFF
	0x036360D8 B.EQ 0x36360F0
	0x036360DC UBFM X8, X22, 0x10, 0x3F
	0x036360E0 ADD W1, W8, 0x1
	0x036360E4 MOV X0, X20
	0x036360E8 MOV X2, X31
	0x036360EC BL 0x3233D30
	0x036360F0 LDR X0, [X19 + 0x10]
	0x036360F4 ADD W21, W21, 0x1
	0x036360F8 CBNZ X0, 0x36360A4
	0x036360FC BL 0x1C16F20
	0x03636100 MOV X0, X20
	0x03636104 MOV X1, X31
	0x03636108 BL 0x323260C
	0x0363610C SUB W2, W0, 0x3
	0x03636110 MOVZ W1, 0x1
	0x03636114 MOV X0, X20
	0x03636118 MOV X3, X31
	0x0363611C BL 0x3232F10
	0x03636120 LDR X1, [X19 + 0x18]
	0x03636124 MOV X0, X20
	0x03636128 MOV X2, X31
	0x0363612C BL 0x3233654
	0x03636130 LDR X0, [X19 + 0x28]
	0x03636134 CBZ X0, 0x363614C
	0x03636138 BL 0x3635FCC
	0x0363613C MOV X1, X0
	0x03636140 MOV X0, X20
	0x03636144 MOV X2, X31
	0x03636148 BL 0x32333E0
	0x0363614C MOV X0, X20
	0x03636150 LDP X20, X19, [X31 + 0x30]
	0x03636154 LDP X22, X21, [X31 + 0x20]
	0x03636158 LDP X24, X23, [X31 + 0x10]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xDAB000
	007 Move W8, [X22+1346]
	008 Move W21, W2
	009 Move W20, W1
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {26}
	015 Move X0, 0xB06000
	016 Move X0, [X0+2272]
	017 Call 0x1C17CF4
	018 Move X0, 0xB06000
	019 Move X0, [X0+2344]
	020 Call 0x1C17CF4
	021 Move X0, 0xB06000
	022 Move X0, [X0+2352]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X22+1346], W8
	026 Move TEMP, X21
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfNotEqual {36}
	030 Move TEMP, X20
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfNotEqual {51}
	034 Move X8, 0xB06000
	035 Move X8, [X8+2352]
	036 Move TEMP, X20
	037 And TEMP, TEMP, 1
	038 Compare TEMP, 1
	039 JumpIfNotEqual {64}
	040 Move X8, 0xB06000
	041 Move X8, [X8+2344]
	042 Move X1, [X8]
	043 Move X0, X19
	044 Move X20, [X31+32]
	045 Move X19, [X31+40]
	046 Move X22, [X31+16]
	047 Move X21, [X31+24]
	048 Move X30, [X31+48]
	049 Call RegexCharClass.AddSet, X0, X1
	050 Return 
	051 Move X20, 0xB06000
	052 Move X20, [X20+2272]
	053 Move X0, [X20]
	054 Move W8, [X0+224]
	055 Compare W8, 0
	056 JumpIfNotEqual {58}
	057 Call 0x1C17DFC
	058 Move X0, [X19+24]
	059 Compare X0, 0
	060 JumpIfEqual {85}
	061 Move X8, [X20]
	062 Move X8, [X8+184]
	063 Move X1, [X8+32]
	064 Move X20, 0xB06000
	065 Move X20, [X20+2272]
	066 Move X0, [X20]
	067 Move W8, [X0+224]
	068 Compare W8, 0
	069 JumpIfNotEqual {71}
	070 Call 0x1C17DFC
	071 Move X0, [X19+24]
	072 Compare X0, 0
	073 JumpIfEqual {85}
	074 Move X8, [X20]
	075 Move X8, [X8+184]
	076 Move X1, [X8+24]
	077 Move X20, [X31+32]
	078 Move X19, [X31+40]
	079 Move X22, [X31+16]
	080 Move X21, [X31+24]
	081 Move X2, X31
	082 Move X30, [X31+48]
	083 Call StringBuilder.Append, X0, X1
	084 Return 
	085 Call 0x1C17F20

Method: System.Void AddSpace(System.Boolean ecma, System.Boolean negate)

Disassembly:
	0x0363615C MOV X1, X31
	0x03636160 LDR X30, [X31], #0x40
	0x03636164 B 0x3235BE8
	0x03636168 SUB X31, X31, 0x60
	0x0363616C STP X30, X27, [X31 + 0x10]
	0x03636170 STP X26, X25, [X31 + 0x20]
	0x03636174 STP X24, X23, [X31 + 0x30]
	0x03636178 STP X22, X21, [X31 + 0x40]
	0x0363617C STP X20, X19, [X31 + 0x50]
	0x03636180 ADRP X20, 0xDAA000
	0x03636184 ADRP X21, 0xB05000
	0x03636188 LDRB W8, [X20 + 0x554]
	0x0363618C LDR X21, [X21 + 0x968]
	0x03636190 MOV X19, X0
	0x03636194 TBNZ X8, 0x0, 0x36361E8
	0x03636198 ADRP X0, 0xB05000
	0x0363619C LDR X0, [X0 + 0x970]
	0x036361A0 BL 0x1C16CF4
	0x036361A4 ADRP X0, 0xB05000
	0x036361A8 LDR X0, [X0 + 0x978]
	0x036361AC BL 0x1C16CF4
	0x036361B0 ADRP X0, 0xB05000
	0x036361B4 LDR X0, [X0 + 0x8D0]
	0x036361B8 BL 0x1C16CF4
	0x036361BC ADRP X0, 0xB05000
	0x036361C0 LDR X0, [X0 + 0x8D8]
	0x036361C4 BL 0x1C16CF4
	0x036361C8 ADRP X0, 0xB05000
	0x036361CC LDR X0, [X0 + 0x920]
	0x036361D0 BL 0x1C16CF4
	0x036361D4 ADRP X0, 0xB05000
	0x036361D8 LDR X0, [X0 + 0x968]
	0x036361DC BL 0x1C16CF4
	0x036361E0 MOVZ W8, 0x1
	0x036361E4 STRB W8, [X20 + 0x554]
	0x036361E8 MOVZ W8, 0x1
	0x036361EC STRB W8, [X19 + 0x20]
	0x036361F0 LDR X0, [X21]
	0x036361F4 LDR X20, [X19 + 0x10]
	0x036361F8 LDR W8, [X0 + 0xE0]
	0x036361FC CBNZ W8, 0x3636204
	0x03636200 BL 0x1C16DFC
	0x03636204 CBZ X20, 0x363639C
	0x03636208 LDR X8, [X21]
	0x0363620C ADRP X9, 0xB05000
	0x03636210 MOV X0, X20
	0x03636214 LDR X8, [X8 + 0xB8]
	0x03636218 LDR X9, [X9 + 0x978]
	0x0363621C LDR X1, [X8]
	0x03636220 LDR X2, [X9]
	0x03636224 BL 0x313641C
	0x03636228 LDR X0, [X19 + 0x10]
	0x0363622C CBZ X0, 0x363639C
	0x03636230 LDR W8, [X0 + 0x18]
	0x03636234 CMP W8, 0x2
	0x03636238 B.LT 0x3636380
	0x0363623C ADRP X24, 0xB05000
	0x03636240 ADRP X25, 0xB05000
	0x03636244 LDR X24, [X24 + 0x8D8]
	0x03636248 LDR X25, [X25 + 0x920]
	0x0363624C MOV W20, W31
	0x03636250 MOVZ W21, 0x1
	0x03636254 MOVZ W26, 0xFFFF

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xDAB000
	007 Move W8, [X22+1347]
	008 Move W21, W2
	009 Move W20, W1
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {26}
	015 Move X0, 0xB06000
	016 Move X0, [X0+2272]
	017 Call 0x1C17CF4
	018 Move X0, 0xB06000
	019 Move X0, [X0+2360]
	020 Call 0x1C17CF4
	021 Move X0, 0xB06000
	022 Move X0, [X0+2368]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X22+1347], W8
	026 Move TEMP, X21
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfNotEqual {36}
	030 Move TEMP, X20
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfNotEqual {51}
	034 Move X8, 0xB06000
	035 Move X8, [X8+2360]
	036 Move TEMP, X20
	037 And TEMP, TEMP, 1
	038 Compare TEMP, 1
	039 JumpIfNotEqual {64}
	040 Move X8, 0xB06000
	041 Move X8, [X8+2368]
	042 Move X1, [X8]
	043 Move X0, X19
	044 Move X20, [X31+32]
	045 Move X19, [X31+40]
	046 Move X22, [X31+16]
	047 Move X21, [X31+24]
	048 Move X30, [X31+48]
	049 Call RegexCharClass.AddSet, X0, X1
	050 Return 
	051 Move X20, 0xB06000
	052 Move X20, [X20+2272]
	053 Move X0, [X20]
	054 Move W8, [X0+224]
	055 Compare W8, 0
	056 JumpIfNotEqual {58}
	057 Call 0x1C17DFC
	058 Move X0, [X19+24]
	059 Compare X0, 0
	060 JumpIfEqual {85}
	061 Move X8, [X20]
	062 Move X8, [X8+184]
	063 Move X1, [X8+16]
	064 Move X20, 0xB06000
	065 Move X20, [X20+2272]
	066 Move X0, [X20]
	067 Move W8, [X0+224]
	068 Compare W8, 0
	069 JumpIfNotEqual {71}
	070 Call 0x1C17DFC
	071 Move X0, [X19+24]
	072 Compare X0, 0
	073 JumpIfEqual {85}
	074 Move X8, [X20]
	075 Move X8, [X8+184]
	076 Move X1, [X8+8]
	077 Move X20, [X31+32]
	078 Move X19, [X31+40]
	079 Move X22, [X31+16]
	080 Move X21, [X31+24]
	081 Move X2, X31
	082 Move X30, [X31+48]
	083 Call StringBuilder.Append, X0, X1
	084 Return 
	085 Call 0x1C17F20

Method: System.Void AddDigit(System.Boolean ecma, System.Boolean negate, System.String pattern)

Disassembly:
	0x03636258 LDR X2, [X24]
	0x0363625C MOV W1, W20
	0x03636260 BL 0x31344AC
	0x03636264 LDR X23, [X19 + 0x10]
	0x03636268 CBZ X23, 0x363639C
	0x0363626C UBFM X22, X0, 0x10, 0x3F
	0x03636270 LDR W8, [X23 + 0x18]
	0x03636274 CMP W21, W8
	0x03636278 B.EQ 0x36362C0
	0x0363627C AND W27, W22, 0xFFFF
	0x03636280 CMP W27, W26
	0x03636284 B.EQ 0x36362C0
	0x03636288 LDR X2, [X24]
	0x0363628C MOV X0, X23
	0x03636290 MOV W1, W21
	0x03636294 BL 0x31344AC
	0x03636298 ADD W8, W27, 0x1
	0x0363629C CMP W8, W0, UXTH
	0x036362A0 B.CC 0x36362C8
	0x036362A4 LDR X23, [X19 + 0x10]
	0x036362A8 UBFM X8, X0, 0x10, 0x3F
	0x036362AC CMP W27, W8, UXTH
	0x036362B0 CSEL W22, W8, W22, CC
	0x036362B4 ADD W21, W21, 0x1
	0x036362B8 CBNZ X23, 0x3636270
	0x036362BC B 0x363639C
	0x036362C0 MOVZ W27, 0x1
	0x036362C4 B 0x36362D4
	0x036362C8 LDR X23, [X19 + 0x10]
	0x036362CC CBZ X23, 0x363639C
	0x036362D0 MOV W27, W31
	0x036362D4 LDR X2, [X24]
	0x036362D8 MOV X0, X23
	0x036362DC MOV W1, W20
	0x036362E0 BL 0x31344AC
	0x036362E4 MOV X1, X0
	0x036362E8 ADD X0, X31, 0xC
	0x036362EC MOV W2, W22
	0x036362F0 MOV X3, X31
	0x036362F4 STR W31, [X31 + 0xC]
	0x036362F8 BL 0x363B668
	0x036362FC LDR W2, [X31 + 0xC]
	0x03636300 LDR X3, [X25]
	0x03636304 MOV X0, X23
	0x03636308 MOV W1, W20

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0xDAB000
	008 Move W8, [X23+1348]
	009 Move X19, X3
	010 Move W21, W2
	011 Move W22, W1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {28}
	017 Move X0, 0xB06000
	018 Move X0, [X0+2376]
	019 Call 0x1C17CF4
	020 Move X0, 0xB06000
	021 Move X0, [X0+2384]
	022 Call 0x1C17CF4
	023 Move X0, 0xB06000
	024 Move X0, [X0+2392]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X23+1348], W8
	028 Move TEMP, X22
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfNotEqual {38}
	032 Move TEMP, X21
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfNotEqual {53}
	036 Move X8, 0xB06000
	037 Move X8, [X8+2376]
	038 Move X8, 0xB06000
	039 Move X8, [X8+2384]
	040 And W2, W21, 1
	041 Move X0, X20
	042 Move X4, X19
	043 Move X1, [X8]
	044 Move X20, [X31+32]
	045 Move X19, [X31+40]
	046 Move X22, [X31+16]
	047 Move X21, [X31+24]
	048 Move W3, W31
	049 Move X30, [X31+48]
	050 Move X23, [X31+56]
	051 Call RegexCharClass.AddCategoryFromName, X0, X1, X2, X3, X4
	052 Return 
	053 Move X8, 0xB06000
	054 Move X8, [X8+2392]
	055 Move X1, [X8]
	056 Move X0, X20
	057 Move X20, [X31+32]
	058 Move X19, [X31+40]
	059 Move X22, [X31+16]
	060 Move X21, [X31+24]
	061 Move X30, [X31+48]
	062 Move X23, [X31+56]
	063 Call RegexCharClass.AddSet, X0, X1
	064 Return 

Method: System.Char SingletonChar(System.String set)

Disassembly:
	0x0363630C BL 0x3134500
	0x03636310 ADD W20, W20, 0x1
	0x03636314 TBNZ X27, 0x0, 0x363635C
	0x03636318 CMP W20, W21
	0x0363631C B.GE 0x363634C
	0x03636320 LDR X22, [X19 + 0x10]

ISIL:
	001 Compare X0, 0
	002 JumpIfEqual {7}
	003 Move W1, 3
	004 Move X2, X31
	005 Call String.get_Chars, X0, X1
	006 Return X0
	007 Move [X31-16], X30
	008 Call 0x1C17F20

Method: System.Boolean IsMergeable(System.String charClass)

Disassembly:
	0x03636324 CBZ X22, 0x363639C
	0x03636328 LDR X2, [X24]
	0x0363632C MOV X0, X22
	0x03636330 MOV W1, W21
	0x03636334 BL 0x31344AC
	0x03636338 LDR X3, [X25]
	0x0363633C AND X2, X0, 0x0
	0x03636340 MOV X0, X22
	0x03636344 MOV W1, W20
	0x03636348 BL 0x3134500
	0x0363634C LDR X0, [X19 + 0x10]
	0x03636350 ADD W21, W21, 0x1
	0x03636354 CBNZ X0, 0x3636258
	0x03636358 B 0x363639C
	0x0363635C LDR X0, [X19 + 0x10]
	0x03636360 CBZ X0, 0x363639C
	0x03636364 ADRP X9, 0xB05000
	0x03636368 LDR W8, [X0 + 0x18]
	0x0363636C LDR X9, [X9 + 0x970]
	0x03636370 MOV W1, W20
	0x03636374 SUB W2, W8, W20
	0x03636378 LDR X3, [X9]
	0x0363637C BL 0x31362A4
	0x03636380 LDP X20, X19, [X31 + 0x50]
	0x03636384 LDP X22, X21, [X31 + 0x40]
	0x03636388 LDP X24, X23, [X31 + 0x30]
	0x0363638C LDP X26, X25, [X31 + 0x20]
	0x03636390 LDP X30, X27, [X31 + 0x10]
	0x03636394 ADD X31, X31, 0x60
	0x03636398 RET
	0x0363639C BL 0x1C16F20
	0x036363A0 STP X29, X30, [X31 - 0x60]!
	0x036363A4 STP X28, X27, [X31 + 0x10]
	0x036363A8 STP X26, X25, [X31 + 0x20]
	0x036363AC STP X24, X23, [X31 + 0x30]
	0x036363B0 STP X22, X21, [X31 + 0x40]
	0x036363B4 STP X20, X19, [X31 + 0x50]
	0x036363B8 SUB X31, X31, 0x5F0
	0x036363BC ADRP X23, 0xDAA000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xDAB000
	006 Move X20, 0xB06000
	007 Move W8, [X21+1349]
	008 Move X20, [X20+2272]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xB06000
	015 Move X0, [X0+2272]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+1349], W8
	019 Move X0, [X20]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfEqual {25}
	023 Compare X19, 0
	024 JumpIfNotEqual {28}
	025 Call 0x1C17DFC
	026 Compare X19, 0
	027 JumpIfEqual {35}
	028 Move X0, X19
	029 Move W1, W31
	030 Move X2, X31
	031 Call String.get_Chars, X0, X1
	032 And W8, W0, 0xFFFF
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move W8, W31
	035 Move X0, [X20]
	036 Move W8, [X0+224]
	037 Compare W8, 0
	038 JumpIfNotEqual {40}
	039 Call 0x1C17DFC
	040 Move X0, X19
	041 Call RegexCharClass.IsSubtraction, X0
	042 Xor W8, W0, 1
	043 Move X20, [X31+16]
	044 Move X19, [X31+24]
	045 And W0, W8, 1
	046 Move X30, [X31+32]
	047 Move X21, [X31+40]
	048 Return X0

Method: System.Boolean IsEmpty(System.String charClass)

Disassembly:
	0x03636440 ADRP X0, 0xB05000
	0x03636444 LDR X0, [X0 + 0x9D0]
	0x03636448 BL 0x1C16CF4
	0x0363644C ADRP X0, 0xABE000
	0x03636450 LDR X0, [X0 + 0x6D0]
	0x03636454 BL 0x1C16CF4
	0x03636458 ADRP X0, 0xB05000
	0x0363645C LDR X0, [X0 + 0x9D8]
	0x03636460 BL 0x1C16CF4
	0x03636464 ADRP X0, 0xB05000
	0x03636468 LDR X0, [X0 + 0x8E0]
	0x0363646C BL 0x1C16CF4
	0x03636470 ADRP X0, 0xACA000
	0x03636474 LDR X0, [X0 + 0xE30]
	0x03636478 BL 0x1C16CF4
	0x0363647C ADRP X0, 0xABD000
	0x03636480 LDR X0, [X0 + 0xAC8]
	0x03636484 BL 0x1C16CF4
	0x03636488 ADRP X0, 0xB05000
	0x0363648C LDR X0, [X0 + 0x9E0]
	0x03636490 BL 0x1C16CF4
	0x03636494 ADRP X0, 0xABE000
	0x03636498 LDR X0, [X0 + 0xFE0]
	0x0363649C BL 0x1C16CF4
	0x036364A0 ADRP X0, 0xB05000
	0x036364A4 LDR X0, [X0 + 0x9E8]
	0x036364A8 BL 0x1C16CF4
	0x036364AC ADRP X0, 0xB05000
	0x036364B0 LDR X0, [X0 + 0x9F0]
	0x036364B4 BL 0x1C16CF4
	0x036364B8 ADRP X0, 0xB05000
	0x036364BC LDR X0, [X0 + 0x9F8]
	0x036364C0 BL 0x1C16CF4
	0x036364C4 ADRP X0, 0xB05000
	0x036364C8 LDR X0, [X0 + 0xA00]
	0x036364CC BL 0x1C16CF4
	0x036364D0 ADRP X0, 0xB05000
	0x036364D4 LDR X0, [X0 + 0xA08]
	0x036364D8 BL 0x1C16CF4
	0x036364DC ADRP X0, 0xB05000
	0x036364E0 LDR X0, [X0 + 0xA10]
	0x036364E4 BL 0x1C16CF4
	0x036364E8 ADRP X0, 0xB05000
	0x036364EC LDR X0, [X0 + 0xA18]
	0x036364F0 BL 0x1C16CF4
	0x036364F4 ADRP X0, 0xB05000
	0x036364F8 LDR X0, [X0 + 0xA20]
	0x036364FC BL 0x1C16CF4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xDAB000
	005 Move W8, [X20+1350]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xB06000
	012 Move X0, [X0+2272]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+1350], W8
	016 Compare X19, 0
	017 JumpIfEqual {50}
	018 Move W1, 2
	019 Move X0, X19
	020 Move X2, X31
	021 Call String.get_Chars, X0, X1
	022 And W31, W0, 0xFFFF
	023 Move W8, W31
	024 Move X0, X19
	025 Move W1, W31
	026 Move X2, X31
	027 Call String.get_Chars, X0, X1
	028 And W31, W0, 0xFFFF
	029 Move W8, W31
	030 Move X20, [X31+16]
	031 Move X19, [X31+24]
	032 And W0, W8, 1
	033 Move X30, [X31+32]
	034 Return X0
	035 Move W1, 1
	036 Move X0, X19
	037 Move X2, X31
	038 Call String.get_Chars, X0, X1
	039 And W31, W0, 0xFFFF
	040 Move X8, 0xB06000
	041 Move X8, [X8+2272]
	042 Move X0, [X8]
	043 Move W8, [X0+224]
	044 Compare W8, 0
	045 JumpIfNotEqual {47}
	046 Call 0x1C17DFC
	047 Move X0, X19
	048 Call RegexCharClass.IsSubtraction, X0
	049 Xor W8, W0, 1
	050 Call 0x1C17F20

Method: System.Boolean IsSingleton(System.String set)

Disassembly:
	0x03636500 ADRP X0, 0xB05000
	0x03636504 LDR X0, [X0 + 0xA28]
	0x03636508 BL 0x1C16CF4
	0x0363650C ADRP X0, 0xAEE000
	0x03636510 LDR X0, [X0 + 0x1D0]
	0x03636514 BL 0x1C16CF4
	0x03636518 ADRP X0, 0xB05000
	0x0363651C LDR X0, [X0 + 0xA30]
	0x03636520 BL 0x1C16CF4
	0x03636524 ADRP X0, 0xB05000
	0x03636528 LDR X0, [X0 + 0xA38]
	0x0363652C BL 0x1C16CF4
	0x03636530 ADRP X0, 0xB05000
	0x03636534 LDR X0, [X0 + 0xA40]
	0x03636538 BL 0x1C16CF4
	0x0363653C ADRP X0, 0xB05000
	0x03636540 LDR X0, [X0 + 0xA48]
	0x03636544 BL 0x1C16CF4
	0x03636548 ADRP X0, 0xB05000
	0x0363654C LDR X0, [X0 + 0xA50]
	0x03636550 BL 0x1C16CF4
	0x03636554 ADRP X0, 0xB05000
	0x03636558 LDR X0, [X0 + 0xA58]
	0x0363655C BL 0x1C16CF4
	0x03636560 ADRP X0, 0xB05000
	0x03636564 LDR X0, [X0 + 0xA60]
	0x03636568 BL 0x1C16CF4
	0x0363656C ADRP X0, 0xB05000
	0x03636570 LDR X0, [X0 + 0xA68]
	0x03636574 BL 0x1C16CF4
	0x03636578 ADRP X0, 0xB05000
	0x0363657C LDR X0, [X0 + 0xA70]
	0x03636580 BL 0x1C16CF4
	0x03636584 ADRP X0, 0xB05000
	0x03636588 LDR X0, [X0 + 0xA78]
	0x0363658C BL 0x1C16CF4
	0x03636590 ADRP X0, 0xB05000
	0x03636594 LDR X0, [X0 + 0xA80]
	0x03636598 BL 0x1C16CF4
	0x0363659C ADRP X0, 0xB05000
	0x036365A0 LDR X0, [X0 + 0xA88]
	0x036365A4 BL 0x1C16CF4
	0x036365A8 ADRP X0, 0xB05000
	0x036365AC LDR X0, [X0 + 0xA90]
	0x036365B0 BL 0x1C16CF4
	0x036365B4 ADRP X0, 0xB05000
	0x036365B8 LDR X0, [X0 + 0xA98]
	0x036365BC BL 0x1C16CF4
	0x036365C0 ADRP X0, 0xB05000
	0x036365C4 LDR X0, [X0 + 0xAA0]
	0x036365C8 BL 0x1C16CF4
	0x036365CC ADRP X0, 0xB05000
	0x036365D0 LDR X0, [X0 + 0xAA8]
	0x036365D4 BL 0x1C16CF4
	0x036365D8 ADRP X0, 0xB05000
	0x036365DC LDR X0, [X0 + 0xAB0]
	0x036365E0 BL 0x1C16CF4
	0x036365E4 ADRP X0, 0xB05000
	0x036365E8 LDR X0, [X0 + 0xAB8]
	0x036365EC BL 0x1C16CF4
	0x036365F0 ADRP X0, 0xB05000
	0x036365F4 LDR X0, [X0 + 0xAC0]
	0x036365F8 BL 0x1C16CF4
	0x036365FC ADRP X0, 0xB05000
	0x03636600 LDR X0, [X0 + 0xAC8]
	0x03636604 BL 0x1C16CF4
	0x03636608 ADRP X0, 0xB05000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xDAB000
	005 Move W8, [X20+1351]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xB06000
	012 Move X0, [X0+2272]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+1351], W8
	016 Compare X19, 0
	017 JumpIfEqual {71}
	018 Move X0, X19
	019 Move W1, W31
	020 Move X2, X31
	021 Call String.get_Chars, X0, X1
	022 And W31, W0, 0xFFFF
	023 Move W1, 2
	024 Move X0, X19
	025 Move X2, X31
	026 Call String.get_Chars, X0, X1
	027 And W31, W0, 0xFFFF
	028 Move W1, 1
	029 Move X0, X19
	030 Move X2, X31
	031 Call String.get_Chars, X0, X1
	032 And W8, W0, 0xFFFF
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move X8, 0xB06000
	035 Move X8, [X8+2272]
	036 Move X0, [X8]
	037 Move W8, [X0+224]
	038 Compare W8, 0
	039 JumpIfNotEqual {41}
	040 Call 0x1C17DFC
	041 Move X0, X19
	042 Call RegexCharClass.IsSubtraction, X0
	043 Move TEMP, X0
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfEqual {66}
	047 Move W1, 3
	048 Move X0, X19
	049 Move X2, X31
	050 Call String.get_Chars, X0, X1
	051 NotImplemented "Instruction ORN not yet implemented."
	052 And W31, W8, 0xFFFF
	053 Move W1, 3
	054 Move X0, X19
	055 Move X2, X31
	056 Call String.get_Chars, X0, X1
	057 Move W20, W0
	058 Move W1, 4
	059 Move X0, X19
	060 Move X2, X31
	061 Call String.get_Chars, X0, X1
	062 And W8, W20, 0xFFFF
	063 Add W8, W8, 1
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Move W0, 1
	066 Move W0, W31
	067 Move X20, [X31+16]
	068 Move X19, [X31+24]
	069 Move X30, [X31+32]
	070 Return X0
	071 Call 0x1C17F20

Method: System.Boolean IsSingletonInverse(System.String set)

Disassembly:
	0x0363660C LDR X0, [X0 + 0xAD0]
	0x03636610 BL 0x1C16CF4
	0x03636614 ADRP X0, 0xB05000
	0x03636618 LDR X0, [X0 + 0xAD8]
	0x0363661C BL 0x1C16CF4
	0x03636620 ADRP X0, 0xB05000
	0x03636624 LDR X0, [X0 + 0xAE0]
	0x03636628 BL 0x1C16CF4
	0x0363662C ADRP X0, 0xB05000
	0x03636630 LDR X0, [X0 + 0xAE8]
	0x03636634 BL 0x1C16CF4
	0x03636638 ADRP X0, 0xB05000
	0x0363663C LDR X0, [X0 + 0xAF0]
	0x03636640 BL 0x1C16CF4
	0x03636644 ADRP X0, 0xB05000
	0x03636648 LDR X0, [X0 + 0xAF8]
	0x0363664C BL 0x1C16CF4
	0x03636650 ADRP X0, 0xB05000
	0x03636654 LDR X0, [X0 + 0xB00]
	0x03636658 BL 0x1C16CF4
	0x0363665C ADRP X0, 0xB05000
	0x03636660 LDR X0, [X0 + 0xB08]
	0x03636664 BL 0x1C16CF4
	0x03636668 ADRP X0, 0xB05000
	0x0363666C LDR X0, [X0 + 0xB10]
	0x03636670 BL 0x1C16CF4
	0x03636674 ADRP X0, 0xB05000
	0x03636678 LDR X0, [X0 + 0xB18]
	0x0363667C BL 0x1C16CF4
	0x03636680 ADRP X0, 0xB05000
	0x03636684 LDR X0, [X0 + 0xB20]
	0x03636688 BL 0x1C16CF4
	0x0363668C ADRP X0, 0xB05000
	0x03636690 LDR X0, [X0 + 0xB28]
	0x03636694 BL 0x1C16CF4
	0x03636698 ADRP X0, 0xB05000
	0x0363669C LDR X0, [X0 + 0xB30]
	0x036366A0 BL 0x1C16CF4
	0x036366A4 ADRP X0, 0xB05000
	0x036366A8 LDR X0, [X0 + 0xB38]
	0x036366AC BL 0x1C16CF4
	0x036366B0 ADRP X0, 0xB05000
	0x036366B4 LDR X0, [X0 + 0xB40]
	0x036366B8 BL 0x1C16CF4
	0x036366BC ADRP X0, 0xB05000
	0x036366C0 LDR X0, [X0 + 0xB48]
	0x036366C4 BL 0x1C16CF4
	0x036366C8 ADRP X0, 0xB05000
	0x036366CC LDR X0, [X0 + 0xB50]
	0x036366D0 BL 0x1C16CF4
	0x036366D4 ADRP X0, 0xB05000
	0x036366D8 LDR X0, [X0 + 0xB58]
	0x036366DC BL 0x1C16CF4
	0x036366E0 ADRP X0, 0xAF2000
	0x036366E4 LDR X0, [X0 + 0x440]
	0x036366E8 BL 0x1C16CF4
	0x036366EC ADRP X0, 0xB05000
	0x036366F0 LDR X0, [X0 + 0x998]
	0x036366F4 BL 0x1C16CF4
	0x036366F8 ADRP X0, 0xAE9000
	0x036366FC LDR X0, [X0 + 0xB8]
	0x03636700 BL 0x1C16CF4
	0x03636704 ADRP X0, 0xB05000
	0x03636708 LDR X0, [X0 + 0xB60]
	0x0363670C BL 0x1C16CF4
	0x03636710 ADRP X0, 0xB05000
	0x03636714 LDR X0, [X0 + 0xB68]
	0x03636718 BL 0x1C16CF4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xDAB000
	005 Move W8, [X20+1352]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xB06000
	012 Move X0, [X0+2272]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+1352], W8
	016 Compare X19, 0
	017 JumpIfEqual {72}
	018 Move X0, X19
	019 Move W1, W31
	020 Move X2, X31
	021 Call String.get_Chars, X0, X1
	022 And W8, W0, 0xFFFF
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Move W1, 2
	025 Move X0, X19
	026 Move X2, X31
	027 Call String.get_Chars, X0, X1
	028 And W31, W0, 0xFFFF
	029 Move W1, 1
	030 Move X0, X19
	031 Move X2, X31
	032 Call String.get_Chars, X0, X1
	033 And W8, W0, 0xFFFF
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Move X8, 0xB06000
	036 Move X8, [X8+2272]
	037 Move X0, [X8]
	038 Move W8, [X0+224]
	039 Compare W8, 0
	040 JumpIfNotEqual {42}
	041 Call 0x1C17DFC
	042 Move X0, X19
	043 Call RegexCharClass.IsSubtraction, X0
	044 Move TEMP, X0
	045 And TEMP, TEMP, 1
	046 Compare TEMP, 1
	047 JumpIfEqual {67}
	048 Move W1, 3
	049 Move X0, X19
	050 Move X2, X31
	051 Call String.get_Chars, X0, X1
	052 NotImplemented "Instruction ORN not yet implemented."
	053 And W31, W8, 0xFFFF
	054 Move W1, 3
	055 Move X0, X19
	056 Move X2, X31
	057 Call String.get_Chars, X0, X1
	058 Move W20, W0
	059 Move W1, 4
	060 Move X0, X19
	061 Move X2, X31
	062 Call String.get_Chars, X0, X1
	063 And W8, W20, 0xFFFF
	064 Add W8, W8, 1
	065 NotImplemented "Instruction CMP not yet implemented."
	066 Move W0, 1
	067 Move W0, W31
	068 Move X20, [X31+16]
	069 Move X19, [X31+24]
	070 Move X30, [X31+32]
	071 Return X0
	072 Call 0x1C17F20

Method: System.Boolean IsSubtraction(System.String charClass)

Disassembly:
	0x036363E8 ADRP X12, 0xB05000
	0x036363EC ADRP X10, 0xB05000
	0x036363F0 ADRP X11, 0xABE000
	0x036363F4 LDR X25, [X25 + 0x980]
	0x036363F8 LDR X22, [X22 + 0x8E0]
	0x036363FC LDR X21, [X21 + 0x58]
	0x03636400 LDR X19, [X19 + 0x988]
	0x03636404 LDR X20, [X20 + 0x990]
	0x03636408 LDR X29, [X29 + 0x998]
	0x0363640C LDR X28, [X28 + 0x9A0]
	0x03636410 LDR X27, [X27 + 0x9A8]
	0x03636414 LDR X26, [X26 + 0x9B0]
	0x03636418 LDRB W8, [X23 + 0x556]
	0x0363641C LDR X24, [X24 + 0x9B8]
	0x03636420 LDR X12, [X12 + 0x9C0]
	0x03636424 LDR X10, [X10 + 0x9C8]
	0x03636428 LDR X11, [X11 + 0x6D0]
	0x0363642C TBNZ X8, 0x0, 0x3637310
	0x03636430 ADRP X0, 0xABE000
	0x03636434 LDR X0, [X0 + 0x810]
	0x03636438 MOV X25, X10
	0x0363643C BL 0x1C16CF4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Compare X0, 0
	006 JumpIfEqual {27}
	007 Move W21, [X0+16]
	008 Move W1, 1
	009 Move X2, X31
	010 Move X19, X0
	011 Call String.get_Chars, X0, X1
	012 Move W20, W0
	013 Move W1, 2
	014 Move X0, X19
	015 Move X2, X31
	016 Call String.get_Chars, X0, X1
	017 And W8, W20, 0xFFFF
	018 Add W8, W8, W0
	019 Move X20, [X31+16]
	020 Move X19, [X31+24]
	021 Add W8, W8, 3
	022 NotImplemented "Instruction CMP not yet implemented."
	023 NotImplemented "Instruction CSET not yet implemented."
	024 Move X30, [X31+32]
	025 Move X21, [X31+40]
	026 Return X0
	027 Call 0x1C17F20

Method: System.Boolean IsNegated(System.String set)

Disassembly:
	0x036363C0 ADRP X25, 0xB05000
	0x036363C4 ADRP X22, 0xB05000
	0x036363C8 ADRP X21, 0xAE6000
	0x036363CC ADRP X19, 0xB05000
	0x036363D0 ADRP X20, 0xB05000
	0x036363D4 ADRP X29, 0xB05000
	0x036363D8 ADRP X28, 0xB05000
	0x036363DC ADRP X27, 0xB05000
	0x036363E0 ADRP X26, 0xB05000
	0x036363E4 ADRP X24, 0xB05000

ISIL:
	001 Compare X0, 0
	002 JumpIfEqual {11}
	003 Move [X31-16], X30
	004 Move W1, W31
	005 Move X2, X31
	006 Call String.get_Chars, X0, X1
	007 And W8, W0, 0xFFFF
	008 NotImplemented "Instruction CMP not yet implemented."
	009 NotImplemented "Instruction CSET not yet implemented."
	010 Move X30, [X31+16]
	011 Return X0

Method: System.Boolean IsECMAWordChar(System.Char ch)

Disassembly:
	0x0363671C ADRP X0, 0xB05000
	0x03636720 LDR X0, [X0 + 0xB70]
	0x03636724 BL 0x1C16CF4
	0x03636728 ADRP X0, 0xB05000
	0x0363672C LDR X0, [X0 + 0xB78]
	0x03636730 BL 0x1C16CF4
	0x03636734 ADRP X0, 0xB05000
	0x03636738 LDR X0, [X0 + 0xB80]
	0x0363673C BL 0x1C16CF4
	0x03636740 ADRP X0, 0xB05000
	0x03636744 LDR X0, [X0 + 0xB88]
	0x03636748 BL 0x1C16CF4
	0x0363674C ADRP X0, 0xB05000
	0x03636750 LDR X0, [X0 + 0xB90]
	0x03636754 BL 0x1C16CF4
	0x03636758 ADRP X0, 0xB05000
	0x0363675C LDR X0, [X0 + 0xB98]
	0x03636760 BL 0x1C16CF4
	0x03636764 ADRP X0, 0xB05000
	0x03636768 LDR X0, [X0 + 0xBA0]
	0x0363676C BL 0x1C16CF4
	0x03636770 ADRP X0, 0xB05000
	0x03636774 LDR X0, [X0 + 0xBA8]
	0x03636778 BL 0x1C16CF4
	0x0363677C ADRP X0, 0xB05000
	0x03636780 LDR X0, [X0 + 0xBB0]
	0x03636784 BL 0x1C16CF4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xDAB000
	006 Move X20, 0xB06000
	007 Move W8, [X21+1353]
	008 Move X20, [X20+2272]
	009 Move W19, W0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0xB06000
	015 Move X0, [X0+2272]
	016 Call 0x1C17CF4
	017 Move X0, 0xB06000
	018 Move X0, [X0+2400]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+1353], W8
	022 Move X0, [X20]
	023 Move X20, 0xB06000
	024 Move W8, [X0+224]
	025 Move X20, [X20+2400]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Move X1, [X20]
	030 Move W0, W19
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X30, [X31+32]
	034 Move X21, [X31+40]

Method: System.Boolean IsWordChar(System.Char ch)

Disassembly:
	0x036367F0 BL 0x1C16CF4
	0x036367F4 ADRP X0, 0xB05000
	0x036367F8 LDR X0, [X0 + 0xC00]
	0x036367FC BL 0x1C16CF4
	0x03636800 ADRP X0, 0xB05000
	0x03636804 LDR X0, [X0 + 0x498]
	0x03636808 BL 0x1C16CF4
	0x0363680C ADRP X0, 0xB05000
	0x03636810 LDR X0, [X0 + 0xC08]
	0x03636814 BL 0x1C16CF4
	0x03636818 ADRP X0, 0xB05000
	0x0363681C LDR X0, [X0 + 0xC10]
	0x03636820 BL 0x1C16CF4
	0x03636824 ADRP X0, 0xB05000
	0x03636828 LDR X0, [X0 + 0xC18]
	0x0363682C BL 0x1C16CF4
	0x03636830 ADRP X0, 0xB05000
	0x03636834 LDR X0, [X0 + 0xC20]
	0x03636838 BL 0x1C16CF4
	0x0363683C ADRP X0, 0xB05000
	0x03636840 LDR X0, [X0 + 0xC28]
	0x03636844 BL 0x1C16CF4
	0x03636848 ADRP X0, 0xB05000
	0x0363684C LDR X0, [X0 + 0xC30]
	0x03636850 BL 0x1C16CF4
	0x03636854 ADRP X0, 0xB05000
	0x03636858 LDR X0, [X0 + 0xC38]
	0x0363685C BL 0x1C16CF4
	0x03636860 ADRP X0, 0xB05000
	0x03636864 LDR X0, [X0 + 0xC40]
	0x03636868 BL 0x1C16CF4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xDAB000
	006 Move X20, 0xB06000
	007 Move W8, [X21+1354]
	008 Move X20, [X20+2272]
	009 Move W19, W0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xB06000
	015 Move X0, [X0+2272]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+1354], W8
	019 Move X0, [X20]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {25}
	023 Call 0x1C17DFC
	024 Move X0, [X20]
	025 Move X8, [X0+184]
	026 Move W0, W19
	027 Move X1, [X8+56]
	028 Call RegexCharClass.CharInClass, X0, X1
	029 And W8, W19, 0xFFFE
	030 Move W9, 0x1006
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 NotImplemented "Instruction CSET not yet implemented."
	035 Or W8, W8, W0
	036 And W0, W8, 1
	037 Move X30, [X31+32]
	038 Move X21, [X31+40]
	039 Return X0

Method: System.Boolean CharInClass(System.Char ch, System.String set)

Disassembly:
	0x03636788 ADRP X0, 0xB05000
	0x0363678C LDR X0, [X0 + 0xBB8]
	0x03636790 BL 0x1C16CF4
	0x03636794 ADRP X0, 0xB05000
	0x03636798 LDR X0, [X0 + 0xBC0]
	0x0363679C BL 0x1C16CF4
	0x036367A0 ADRP X0, 0xB05000
	0x036367A4 LDR X0, [X0 + 0xBC8]
	0x036367A8 BL 0x1C16CF4
	0x036367AC ADRP X0, 0xB05000
	0x036367B0 LDR X0, [X0 + 0xBD0]
	0x036367B4 BL 0x1C16CF4
	0x036367B8 ADRP X0, 0xB05000
	0x036367BC LDR X0, [X0 + 0xBD8]
	0x036367C0 BL 0x1C16CF4
	0x036367C4 ADRP X0, 0xB05000
	0x036367C8 LDR X0, [X0 + 0xBE0]
	0x036367CC BL 0x1C16CF4
	0x036367D0 ADRP X0, 0xB05000
	0x036367D4 LDR X0, [X0 + 0xBE8]
	0x036367D8 BL 0x1C16CF4
	0x036367DC ADRP X0, 0xB05000
	0x036367E0 LDR X0, [X0 + 0xBF0]
	0x036367E4 BL 0x1C16CF4
	0x036367E8 ADRP X0, 0xB05000
	0x036367EC LDR X0, [X0 + 0xBF8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xDAB000
	007 Move X21, 0xB06000
	008 Move W8, [X22+1355]
	009 Move X21, [X21+2272]
	010 Move X19, X1
	011 Move W20, W0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xB06000
	017 Move X0, [X0+2272]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+1355], W8
	021 Move X0, [X21]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move W0, W20
	027 Move X1, X19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move W2, W31
	033 Move X30, [X31+48]
	034 Call RegexCharClass.CharInClassRecursive, X0, X1, X2
	035 Return X0

Method: System.Boolean CharInClassRecursive(System.Char ch, System.String set, System.Int32 start)

Disassembly:
	0x0363686C ADRP X0, 0xB05000
	0x03636870 LDR X0, [X0 + 0xC48]
	0x03636874 BL 0x1C16CF4
	0x03636878 ADRP X0, 0xB05000
	0x0363687C LDR X0, [X0 + 0xC50]
	0x03636880 BL 0x1C16CF4
	0x03636884 ADRP X0, 0xB05000
	0x03636888 LDR X0, [X0 + 0xC58]
	0x0363688C BL 0x1C16CF4
	0x03636890 ADRP X0, 0xB05000
	0x03636894 LDR X0, [X0 + 0xC60]
	0x03636898 BL 0x1C16CF4
	0x0363689C ADRP X0, 0xB05000
	0x036368A0 LDR X0, [X0 + 0xC68]
	0x036368A4 BL 0x1C16CF4
	0x036368A8 ADRP X0, 0xB05000
	0x036368AC LDR X0, [X0 + 0xC70]
	0x036368B0 BL 0x1C16CF4
	0x036368B4 ADRP X0, 0xB05000
	0x036368B8 LDR X0, [X0 + 0xC78]
	0x036368BC BL 0x1C16CF4
	0x036368C0 ADRP X0, 0xB05000
	0x036368C4 LDR X0, [X0 + 0xC80]
	0x036368C8 BL 0x1C16CF4
	0x036368CC ADRP X0, 0xB05000
	0x036368D0 LDR X0, [X0 + 0xC88]
	0x036368D4 BL 0x1C16CF4
	0x036368D8 ADRP X0, 0xB05000
	0x036368DC LDR X0, [X0 + 0xC90]
	0x036368E0 BL 0x1C16CF4
	0x036368E4 ADRP X0, 0xB05000
	0x036368E8 LDR X0, [X0 + 0xC98]
	0x036368EC BL 0x1C16CF4
	0x036368F0 ADRP X0, 0xB05000
	0x036368F4 LDR X0, [X0 + 0xCA0]
	0x036368F8 BL 0x1C16CF4
	0x036368FC ADRP X0, 0xB05000
	0x03636900 LDR X0, [X0 + 0xCA8]
	0x03636904 BL 0x1C16CF4
	0x03636908 ADRP X0, 0xB05000
	0x0363690C LDR X0, [X0 + 0xCB0]
	0x03636910 BL 0x1C16CF4
	0x03636914 ADRP X0, 0xB05000
	0x03636918 LDR X0, [X0 + 0xCB8]
	0x0363691C BL 0x1C16CF4
	0x03636920 ADRP X0, 0xB05000
	0x03636924 LDR X0, [X0 + 0xCC0]
	0x03636928 BL 0x1C16CF4
	0x0363692C ADRP X0, 0xB05000
	0x03636930 LDR X0, [X0 + 0xCC8]
	0x03636934 BL 0x1C16CF4
	0x03636938 ADRP X0, 0xB05000
	0x0363693C LDR X0, [X0 + 0xCD0]
	0x03636940 BL 0x1C16CF4
	0x03636944 ADRP X0, 0xB05000
	0x03636948 LDR X0, [X0 + 0xCD8]
	0x0363694C BL 0x1C16CF4
	0x03636950 ADRP X0, 0xB05000
	0x03636954 LDR X0, [X0 + 0xCE0]
	0x03636958 BL 0x1C16CF4
	0x0363695C ADRP X0, 0xB05000
	0x03636960 LDR X0, [X0 + 0xCE8]
	0x03636964 BL 0x1C16CF4
	0x03636968 ADRP X0, 0xB05000
	0x0363696C LDR X0, [X0 + 0xCF0]
	0x03636970 BL 0x1C16CF4
	0x03636974 ADRP X0, 0xB05000
	0x03636978 LDR X0, [X0 + 0xCF8]
	0x0363697C BL 0x1C16CF4
	0x03636980 ADRP X0, 0xB05000
	0x03636984 LDR X0, [X0 + 0xD00]
	0x03636988 BL 0x1C16CF4
	0x0363698C ADRP X0, 0xB05000
	0x03636990 LDR X0, [X0 + 0xD08]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X22, 0xDAB000
	010 Move W8, [X22+1356]
	011 Move W19, W2
	012 Move X20, X1
	013 Move W21, W0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0xB06000
	019 Move X0, [X0+2272]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+1356], W8
	023 Compare X20, 0
	024 JumpIfEqual {86}
	025 Move X25, 0xB06000
	026 Move X25, [X25+2272]
	027 Add W1, W19, 1
	028 Move X0, X20
	029 Move X2, X31
	030 Call String.get_Chars, X0, X1
	031 Move W23, W0
	032 And W22, W0, 0xFFFF
	033 Add W1, W19, 2
	034 Move X0, X20
	035 Move X2, X31
	036 Call String.get_Chars, X0, X1
	037 Move W8, [X20+16]
	038 Add W9, W19, W23
	039 Add W9, W9, W0
	040 Add W24, W9, 3
	041 NotImplemented "Instruction CMP not yet implemented."
	042 And W23, W0, 0xFFFF
	043 Move X0, [X25]
	044 Move W8, [X0+224]
	045 Compare W8, 0
	046 JumpIfNotEqual {48}
	047 Call 0x1C17DFC
	048 Move W0, W21
	049 Move X1, X20
	050 Move W2, W24
	051 Call RegexCharClass.CharInClassRecursive, X0, X1, X2
	052 And W24, W0, 1
	053 Move W24, W31
	054 Move X0, [X25]
	055 Move W8, [X0+224]
	056 Compare W8, 0
	057 JumpIfNotEqual {59}
	058 Call 0x1C17DFC
	059 Move W0, W21
	060 Move X1, X20
	061 Move W2, W19
	062 Move W3, W22
	063 Move W4, W23
	064 Call RegexCharClass.CharInClassInternal, X0, X1, X2, X3, X4
	065 Move W21, W0
	066 Move X0, X20
	067 Move W1, W19
	068 Move X2, X31
	069 Call String.get_Chars, X0, X1
	070 And W8, W0, 0xFFFF
	071 NotImplemented "Instruction CMP not yet implemented."
	072 NotImplemented "Instruction CSET not yet implemented."
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Xor W8, W21, W8
	075 Move X20, [X31+48]
	076 Move X19, [X31+56]
	077 Move X22, [X31+32]
	078 Move X21, [X31+40]
	079 Move X24, [X31+16]
	080 Move X23, [X31+24]
	081 NotImplemented "Instruction CSET not yet implemented."
	082 And W0, W9, W8
	083 Move X30, [X31+64]
	084 Move X25, [X31+72]
	085 Return X0
	086 Call 0x1C17F20

Method: System.Boolean CharInClassInternal(System.Char ch, System.String set, System.Int32 start, System.Int32 mySetLength, System.Int32 myCategoryLength)

Disassembly:
	0x03636994 BL 0x1C16CF4
	0x03636998 ADRP X0, 0xB05000
	0x0363699C LDR X0, [X0 + 0xD10]
	0x036369A0 BL 0x1C16CF4
	0x036369A4 ADRP X0, 0xB05000
	0x036369A8 LDR X0, [X0 + 0xD18]
	0x036369AC BL 0x1C16CF4
	0x036369B0 ADRP X0, 0xB05000
	0x036369B4 LDR X0, [X0 + 0xD20]
	0x036369B8 BL 0x1C16CF4
	0x036369BC ADRP X0, 0xB05000
	0x036369C0 LDR X0, [X0 + 0x990]
	0x036369C4 BL 0x1C16CF4
	0x036369C8 ADRP X0, 0xB05000
	0x036369CC LDR X0, [X0 + 0xD28]
	0x036369D0 BL 0x1C16CF4
	0x036369D4 ADRP X0, 0xB05000
	0x036369D8 LDR X0, [X0 + 0xD30]
	0x036369DC BL 0x1C16CF4
	0x036369E0 ADRP X0, 0xB05000
	0x036369E4 LDR X0, [X0 + 0xD38]
	0x036369E8 BL 0x1C16CF4
	0x036369EC ADRP X0, 0xB05000
	0x036369F0 LDR X0, [X0 + 0xD40]
	0x036369F4 BL 0x1C16CF4
	0x036369F8 ADRP X0, 0xB05000
	0x036369FC LDR X0, [X0 + 0x9A8]
	0x03636A00 BL 0x1C16CF4
	0x03636A04 ADRP X0, 0xB05000
	0x03636A08 LDR X0, [X0 + 0xD48]
	0x03636A0C BL 0x1C16CF4
	0x03636A10 ADRP X0, 0xB05000
	0x03636A14 LDR X0, [X0 + 0xD50]
	0x03636A18 BL 0x1C16CF4
	0x03636A1C ADRP X0, 0xB05000
	0x03636A20 LDR X0, [X0 + 0xD58]
	0x03636A24 BL 0x1C16CF4
	0x03636A28 ADRP X0, 0xB05000
	0x03636A2C LDR X0, [X0 + 0xD60]
	0x03636A30 BL 0x1C16CF4
	0x03636A34 ADRP X0, 0xB05000
	0x03636A38 LDR X0, [X0 + 0xD68]
	0x03636A3C BL 0x1C16CF4
	0x03636A40 ADRP X0, 0xB05000
	0x03636A44 LDR X0, [X0 + 0xD70]
	0x03636A48 BL 0x1C16CF4
	0x03636A4C ADRP X0, 0xB05000
	0x03636A50 LDR X0, [X0 + 0xD78]
	0x03636A54 BL 0x1C16CF4
	0x03636A58 ADRP X0, 0xB05000
	0x03636A5C LDR X0, [X0 + 0xD80]
	0x03636A60 BL 0x1C16CF4
	0x03636A64 ADRP X0, 0xB05000
	0x03636A68 LDR X0, [X0 + 0xD88]
	0x03636A6C BL 0x1C16CF4
	0x03636A70 ADRP X0, 0xB05000
	0x03636A74 LDR X0, [X0 + 0xD90]
	0x03636A78 BL 0x1C16CF4
	0x03636A7C ADRP X0, 0xB05000
	0x03636A80 LDR X0, [X0 + 0xD98]
	0x03636A84 BL 0x1C16CF4
	0x03636A88 ADRP X0, 0xB05000
	0x03636A8C LDR X0, [X0 + 0xDA0]
	0x03636A90 BL 0x1C16CF4
	0x03636A94 ADRP X0, 0xB05000
	0x03636A98 LDR X0, [X0 + 0xDA8]
	0x03636A9C BL 0x1C16CF4
	0x03636AA0 ADRP X0, 0xB05000

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X24, 0xDAB000
	011 Move W8, [X24+1357]
	012 Move W19, W4
	013 Move W20, W3
	014 Move W21, W2
	015 Move X22, X1
	016 Move W23, W0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {26}
	021 Move X0, 0xB06000
	022 Move X0, [X0+2272]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X24+1357], W8
	026 Add W25, W21, 3
	027 Compare W20, 0
	028 JumpIfEqual {45}
	029 Compare X22, 0
	030 JumpIfEqual {86}
	031 Add W26, W25, W20
	032 Add W8, W25, W26
	033 NotImplemented "Instruction CMP not yet implemented."
	034 NotImplemented "Instruction CINC not yet implemented."
	035 NotImplemented "Instruction SBFM not yet implemented."
	036 Move X0, X22
	037 Move W1, W24
	038 Move X2, X31
	039 Call String.get_Chars, X0, X1
	040 And W8, W0, 0xFFFF
	041 NotImplemented "Instruction CMP not yet implemented."
	042 NotImplemented "Instruction CSEL not yet implemented."
	043 NotImplemented "Instruction CSINC not yet implemented."
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Move W26, W25
	046 Xor W8, W26, W21
	047 Move TEMP, X8
	048 And TEMP, TEMP, 1
	049 Compare TEMP, 1
	050 JumpIfEqual {52}
	051 Move W0, 1
	052 Compare W19, 0
	053 JumpIfEqual {75}
	054 Move X8, 0xB06000
	055 Move X8, [X8+2272]
	056 Move X0, [X8]
	057 Move W8, [X0+224]
	058 Compare W8, 0
	059 JumpIfNotEqual {61}
	060 Call 0x1C17DFC
	061 Move W0, W23
	062 Move X1, X22
	063 Move W2, W21
	064 Move W3, W20
	065 Move W4, W19
	066 Move X20, [X31+64]
	067 Move X19, [X31+72]
	068 Move X22, [X31+48]
	069 Move X21, [X31+56]
	070 Move X24, [X31+32]
	071 Move X23, [X31+40]
	072 Move X26, [X31+16]
	073 Move X25, [X31+24]
	074 Move X30, [X31+80]
	075 Move W0, W31
	076 Move X20, [X31+64]
	077 Move X19, [X31+72]
	078 Move X22, [X31+48]
	079 Move X21, [X31+56]
	080 Move X24, [X31+32]
	081 Move X23, [X31+40]
	082 Move X26, [X31+16]
	083 Move X25, [X31+24]
	084 Move X30, [X31+80]
	085 Return X0
	086 Call 0x1C17F20

Method: System.Boolean CharInCategory(System.Char ch, System.String set, System.Int32 start, System.Int32 mySetLength, System.Int32 myCategoryLength)

Disassembly:
	0x03636AA4 LDR X0, [X0 + 0xDB0]
	0x03636AA8 BL 0x1C16CF4
	0x03636AAC ADRP X0, 0xB05000
	0x03636AB0 LDR X0, [X0 + 0xDB8]
	0x03636AB4 BL 0x1C16CF4
	0x03636AB8 ADRP X0, 0xB05000
	0x03636ABC LDR X0, [X0 + 0xDC0]
	0x03636AC0 BL 0x1C16CF4
	0x03636AC4 ADRP X0, 0xB05000
	0x03636AC8 LDR X0, [X0 + 0xDC8]
	0x03636ACC BL 0x1C16CF4
	0x03636AD0 ADRP X0, 0xB05000
	0x03636AD4 LDR X0, [X0 + 0xDD0]
	0x03636AD8 BL 0x1C16CF4
	0x03636ADC ADRP X0, 0xB05000
	0x03636AE0 LDR X0, [X0 + 0xDD8]
	0x03636AE4 BL 0x1C16CF4
	0x03636AE8 ADRP X0, 0xB05000
	0x03636AEC LDR X0, [X0 + 0x9C0]
	0x03636AF0 BL 0x1C16CF4
	0x03636AF4 ADRP X0, 0xB05000
	0x03636AF8 LDR X0, [X0 + 0xDE0]
	0x03636AFC BL 0x1C16CF4
	0x03636B00 ADRP X0, 0xB05000
	0x03636B04 LDR X0, [X0 + 0xDE8]
	0x03636B08 BL 0x1C16CF4
	0x03636B0C ADRP X0, 0xB05000
	0x03636B10 LDR X0, [X0 + 0xDF0]
	0x03636B14 BL 0x1C16CF4
	0x03636B18 ADRP X0, 0xB05000
	0x03636B1C LDR X0, [X0 + 0xDF8]
	0x03636B20 BL 0x1C16CF4
	0x03636B24 ADRP X0, 0xB05000
	0x03636B28 LDR X0, [X0 + 0xE00]
	0x03636B2C BL 0x1C16CF4
	0x03636B30 ADRP X0, 0xB05000
	0x03636B34 LDR X0, [X0 + 0xE08]
	0x03636B38 BL 0x1C16CF4
	0x03636B3C ADRP X0, 0xB05000
	0x03636B40 LDR X0, [X0 + 0xE10]
	0x03636B44 BL 0x1C16CF4
	0x03636B48 ADRP X0, 0xB05000
	0x03636B4C LDR X0, [X0 + 0xE18]
	0x03636B50 BL 0x1C16CF4
	0x03636B54 ADRP X0, 0xB05000
	0x03636B58 LDR X0, [X0 + 0xE20]
	0x03636B5C BL 0x1C16CF4
	0x03636B60 ADRP X0, 0xB05000
	0x03636B64 LDR X0, [X0 + 0xE28]
	0x03636B68 BL 0x1C16CF4
	0x03636B6C ADRP X0, 0xB05000
	0x03636B70 LDR X0, [X0 + 0xE30]
	0x03636B74 BL 0x1C16CF4
	0x03636B78 ADRP X0, 0xB05000
	0x03636B7C LDR X0, [X0 + 0xE38]
	0x03636B80 BL 0x1C16CF4
	0x03636B84 ADRP X0, 0xB05000
	0x03636B88 LDR X0, [X0 + 0xE40]
	0x03636B8C BL 0x1C16CF4
	0x03636B90 ADRP X0, 0xB05000
	0x03636B94 LDR X0, [X0 + 0xE48]
	0x03636B98 BL 0x1C16CF4
	0x03636B9C ADRP X0, 0xB05000
	0x03636BA0 LDR X0, [X0 + 0xE50]
	0x03636BA4 BL 0x1C16CF4
	0x03636BA8 ADRP X0, 0xB05000
	0x03636BAC LDR X0, [X0 + 0xE58]
	0x03636BB0 BL 0x1C16CF4
	0x03636BB4 ADRP X0, 0xB05000
	0x03636BB8 LDR X0, [X0 + 0xE60]
	0x03636BBC BL 0x1C16CF4
	0x03636BC0 ADRP X0, 0xB05000
	0x03636BC4 LDR X0, [X0 + 0xE68]
	0x03636BC8 BL 0x1C16CF4
	0x03636BCC ADRP X0, 0xB05000
	0x03636BD0 LDR X0, [X0 + 0xE70]
	0x03636BD4 BL 0x1C16CF4
	0x03636BD8 ADRP X0, 0xB05000
	0x03636BDC LDR X0, [X0 + 0xE78]
	0x03636BE0 BL 0x1C16CF4
	0x03636BE4 ADRP X0, 0xB05000
	0x03636BE8 LDR X0, [X0 + 0xE80]
	0x03636BEC BL 0x1C16CF4
	0x03636BF0 ADRP X0, 0xB05000
	0x03636BF4 LDR X0, [X0 + 0xE88]
	0x03636BF8 BL 0x1C16CF4
	0x03636BFC ADRP X0, 0xB05000
	0x03636C00 LDR X0, [X0 + 0xE90]
	0x03636C04 BL 0x1C16CF4
	0x03636C08 ADRP X0, 0xB05000
	0x03636C0C LDR X0, [X0 + 0xE98]
	0x03636C10 BL 0x1C16CF4
	0x03636C14 ADRP X0, 0xB05000
	0x03636C18 LDR X0, [X0 + 0xEA0]
	0x03636C1C BL 0x1C16CF4
	0x03636C20 ADRP X0, 0xB05000
	0x03636C24 LDR X0, [X0 + 0xEA8]
	0x03636C28 BL 0x1C16CF4

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X21, 0xDAB000
	011 Move W8, [X21+1358]
	012 Move W23, W4
	013 Move W22, W3
	014 Move W24, W2
	015 Move X19, X1
	016 Move W20, W0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {29}
	021 Move X0, 0xAC0000
	022 Move X0, [X0+368]
	023 Call 0x1C17CF4
	024 Move X0, 0xB06000
	025 Move X0, [X0+2272]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X21+1358], W8
	029 Move W0, W20
	030 Move X1, X31
	031 Call CharUnicodeInfo.GetUnicodeCategory, X0
	032 Add W8, W24, W22
	033 Add W22, W8, 3
	034 Add W23, W22, W23
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move [X31+12], W22
	037 Compare X19, 0
	038 JumpIfEqual {109}
	039 Move X24, 0xB06000
	040 Move X25, 0xAC0000
	041 Move X24, [X24+2272]
	042 Move X25, [X25+368]
	043 Move W21, W0
	044 Move X0, X19
	045 Move W1, W22
	046 Move X2, X31
	047 Call String.get_Chars, X0, X1
	048 And W31, W0, 0xFFFF
	049 NotImplemented "Instruction SXTH not yet implemented."
	050 Subtract W9, W8, 1
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Move X0, [X25]
	053 Move W8, [X0+224]
	054 Compare W8, 0
	055 JumpIfNotEqual {57}
	056 Call 0x1C17DFC
	057 Move W0, W20
	058 Move X1, X31
	059 Call Char.IsWhiteSpace, X0
	060 Move TEMP, X0
	061 And TEMP, TEMP, 1
	062 Compare TEMP, 1
	063 JumpIfNotEqual {94}
	064 Move X0, [X24]
	065 Move W8, [X0+224]
	066 Compare W8, 0
	067 JumpIfNotEqual {69}
	068 Call 0x1C17DFC
	069 Add X3, X31, 12
	070 Move W1, W21
	071 Move X2, X19
	072 Call RegexCharClass.CharInCategoryGroup, X0, X1, X2, X3
	073 Move TEMP, X0
	074 And TEMP, TEMP, 1
	075 Compare TEMP, 1
	076 JumpIfEqual {98}
	077 Move W22, [X31+12]
	078 Add W31, W8, 100
	079 Move X0, [X25]
	080 Move W8, [X0+224]
	081 Compare W8, 0
	082 JumpIfNotEqual {84}
	083 Call 0x1C17DFC
	084 Move W0, W20
	085 Move X1, X31
	086 Call Char.IsWhiteSpace, X0
	087 Move TEMP, X0
	088 And TEMP, TEMP, 1
	089 Compare TEMP, 1
	090 JumpIfEqual {94}
	091 NotImplemented "Instruction CMP not yet implemented."
	092 NotImplemented "Instruction ORN not yet implemented."
	093 NotImplemented "Instruction CMP not yet implemented."
	094 Add W22, W22, 1
	095 NotImplemented "Instruction CMP not yet implemented."
	096 Move [X31+12], W22
	097 Move W0, W31
	098 Move W0, 1
	099 Move X20, [X31+64]
	100 Move X19, [X31+72]
	101 Move X22, [X31+48]
	102 Move X21, [X31+56]
	103 Move X24, [X31+32]
	104 Move X23, [X31+40]
	105 Move X30, [X31+16]
	106 Move X25, [X31+24]
	107 Add X31, X31, 80
	108 Return X0
	109 Call 0x1C17F20

Method: System.Boolean CharInCategoryGroup(System.Char ch, System.Globalization.UnicodeCategory chcategory, System.String category, ref System.Int32 i)

Disassembly:
	0x03636C2C ADRP X0, 0xB03000
	0x03636C30 LDR X0, [X0 + 0xC20]
	0x03636C34 BL 0x1C16CF4
	0x03636C38 ADRP X0, 0xB05000
	0x03636C3C LDR X0, [X0 + 0xEB0]
	0x03636C40 BL 0x1C16CF4
	0x03636C44 ADRP X0, 0xB05000
	0x03636C48 LDR X0, [X0 + 0xEB8]
	0x03636C4C BL 0x1C16CF4
	0x03636C50 ADRP X0, 0xB05000
	0x03636C54 LDR X0, [X0 + 0xEC0]
	0x03636C58 BL 0x1C16CF4
	0x03636C5C ADRP X0, 0xB05000
	0x03636C60 LDR X0, [X0 + 0xEC8]
	0x03636C64 BL 0x1C16CF4
	0x03636C68 ADRP X0, 0xB05000
	0x03636C6C LDR X0, [X0 + 0xED0]
	0x03636C70 BL 0x1C16CF4
	0x03636C74 ADRP X0, 0xB05000
	0x03636C78 LDR X0, [X0 + 0xED8]
	0x03636C7C BL 0x1C16CF4
	0x03636C80 ADRP X0, 0xB05000
	0x03636C84 LDR X0, [X0 + 0xEE0]
	0x03636C88 BL 0x1C16CF4
	0x03636C8C ADRP X0, 0xB05000
	0x03636C90 LDR X0, [X0 + 0xEE8]
	0x03636C94 BL 0x1C16CF4
	0x03636C98 ADRP X0, 0xB05000
	0x03636C9C LDR X0, [X0 + 0xEF0]
	0x03636CA0 BL 0x1C16CF4
	0x03636CA4 ADRP X0, 0xB05000
	0x03636CA8 LDR X0, [X0 + 0xEF8]
	0x03636CAC BL 0x1C16CF4
	0x03636CB0 ADRP X0, 0xB05000
	0x03636CB4 LDR X0, [X0 + 0xF00]
	0x03636CB8 BL 0x1C16CF4
	0x03636CBC ADRP X0, 0xB05000
	0x03636CC0 LDR X0, [X0 + 0xF08]
	0x03636CC4 BL 0x1C16CF4
	0x03636CC8 ADRP X0, 0xB05000
	0x03636CCC LDR X0, [X0 + 0xF10]
	0x03636CD0 BL 0x1C16CF4
	0x03636CD4 ADRP X0, 0xB05000
	0x03636CD8 LDR X0, [X0 + 0xF18]
	0x03636CDC BL 0x1C16CF4
	0x03636CE0 ADRP X0, 0xB05000
	0x03636CE4 LDR X0, [X0 + 0xF20]
	0x03636CE8 BL 0x1C16CF4
	0x03636CEC ADRP X0, 0xB05000
	0x03636CF0 LDR X0, [X0 + 0xF28]
	0x03636CF4 BL 0x1C16CF4
	0x03636CF8 ADRP X0, 0xB05000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move W8, [X3]
	007 Move W21, W1
	008 Add W1, W8, 1
	009 Move [X3], W1
	010 Compare X2, 0
	011 JumpIfEqual {54}
	012 Move X20, X2
	013 Move X0, X2
	014 Move X2, X31
	015 Move X19, X3
	016 Call String.get_Chars, X0, X1
	017 NotImplemented "Instruction SXTH not yet implemented."
	018 NotImplemented "Instruction CMP not yet implemented."
	019 Move W22, W31
	020 Move W9, [X19]
	021 Subtract W8, W8, 1
	022 NotImplemented "Instruction CMP not yet implemented."
	023 NotImplemented "Instruction CSET not yet implemented."
	024 Add W1, W9, 1
	025 Move X0, X20
	026 Move X2, X31
	027 Or W22, W22, W8
	028 Move [X19], W1
	029 Call String.get_Chars, X0, X1
	030 And W31, W0, 0xFFFF
	031 NotImplemented "Instruction SXTH not yet implemented."
	032 Move W22, 1
	033 Compare W8, 0
	034 JumpIfEqual {47}
	035 Move W9, [X19]
	036 NotImplemented "Instruction ORN not yet implemented."
	037 NotImplemented "Instruction CMP not yet implemented."
	038 NotImplemented "Instruction CSET not yet implemented."
	039 Add W1, W9, 1
	040 Move X0, X20
	041 Move X2, X31
	042 And W22, W22, W8
	043 Move [X19], W1
	044 Call String.get_Chars, X0, X1
	045 And W31, W0, 0xFFFF
	046 NotImplemented "Instruction SXTH not yet implemented."
	047 And W0, W22, 1
	048 Move X20, [X31+32]
	049 Move X19, [X31+40]
	050 Move X22, [X31+16]
	051 Move X21, [X31+24]
	052 Move X30, [X31+48]
	053 Return X0
	054 Call 0x1C17F20

Method: System.String NegateCategory(System.String category)

Disassembly:
	0x036359F4 CINC W8, W8, LT
	0x036359F8 SBFM W24, W8, 0x1, 0x1F
	0x036359FC MOV X0, X22
	0x03635A00 MOV W1, W24
	0x03635A04 MOV X2, X31
	0x03635A08 BL 0x3222A1C
	0x03635A0C AND W8, W0, 0xFFFF
	0x03635A10 CMP W8, W23, UXTH
	0x03635A14 CSEL W26, W24, W26, HI
	0x03635A18 CSINC W25, W25, W24, HI
	0x03635A1C CMP W25, W26
	0x03635A20 B.NE 0x36359EC
	0x03635A24 B 0x3635A2C
	0x03635A28 MOV W26, W25
	0x03635A2C EOR W8, W26, W21, 0x0
	0x03635A30 TBNZ X8, 0x0, 0x3635A3C
	0x03635A34 MOVZ W0, 0x1
	0x03635A38 B 0x3635A88
	0x03635A3C CBZ W19, 0x3635A84
	0x03635A40 ADRP X8, 0xB06000
	0x03635A44 LDR X8, [X8 + 0x8E0]
	0x03635A48 LDR X0, [X8]
	0x03635A4C LDR W8, [X0 + 0xE0]
	0x03635A50 CBNZ W8, 0x3635A58
	0x03635A54 BL 0x1C16DFC
	0x03635A58 MOV W0, W23
	0x03635A5C MOV X1, X22
	0x03635A60 MOV W2, W21
	0x03635A64 MOV W3, W20
	0x03635A68 MOV W4, W19
	0x03635A6C LDP X20, X19, [X31 + 0x40]
	0x03635A70 LDP X22, X21, [X31 + 0x30]
	0x03635A74 LDP X24, X23, [X31 + 0x20]
	0x03635A78 LDP X26, X25, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Compare X0, 0
	006 JumpIfEqual {36}
	007 Move X19, X0
	008 Move W0, [X0+16]
	009 Move X1, X31
	010 Call StringBuilderCache.Acquire, X0
	011 Move W8, [X19+16]
	012 Move X20, X0
	013 NotImplemented "Instruction CMP not yet implemented."
	014 Move W21, W31
	015 Move X0, X19
	016 Move W1, W21
	017 Move X2, X31
	018 Call String.get_Chars, X0, X1
	019 Compare X20, 0
	020 JumpIfEqual {41}
	021 Subtract W1, W31, W0
	022 Move X0, X20
	023 Move X2, X31
	024 Call StringBuilder.Append, X0, X1
	025 Move W8, [X19+16]
	026 Add W21, W21, 1
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Move X0, X20
	029 Move X20, [X31+16]
	030 Move X19, [X31+24]
	031 Move X1, X31
	032 Move X30, [X31+32]
	033 Move X21, [X31+40]
	034 Call StringBuilderCache.GetStringAndRelease, X0
	035 Return X0
	036 Move X20, [X31+16]
	037 Move X19, [X31+24]
	038 Move X30, [X31+32]
	039 Move X21, [X31+40]
	040 Return X0
	041 Call 0x1C17F20

Method: System.Text.RegularExpressions.RegexCharClass Parse(System.String charClass)

Disassembly:
	0x03636CFC LDR X0, [X0 + 0xF30]
	0x03636D00 BL 0x1C16CF4
	0x03636D04 ADRP X0, 0xB05000
	0x03636D08 LDR X0, [X0 + 0xF38]
	0x03636D0C BL 0x1C16CF4
	0x03636D10 ADRP X0, 0xB05000
	0x03636D14 LDR X0, [X0 + 0xF40]
	0x03636D18 BL 0x1C16CF4
	0x03636D1C ADRP X0, 0xB05000
	0x03636D20 LDR X0, [X0 + 0xF48]
	0x03636D24 BL 0x1C16CF4
	0x03636D28 ADRP X0, 0xB05000
	0x03636D2C LDR X0, [X0 + 0xF50]
	0x03636D30 BL 0x1C16CF4
	0x03636D34 ADRP X0, 0xB05000
	0x03636D38 LDR X0, [X0 + 0xF58]
	0x03636D3C BL 0x1C16CF4
	0x03636D40 ADRP X0, 0xB05000
	0x03636D44 LDR X0, [X0 + 0xF60]
	0x03636D48 BL 0x1C16CF4
	0x03636D4C ADRP X0, 0xB05000
	0x03636D50 LDR X0, [X0 + 0xF68]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xDAB000
	006 Move X21, 0xB06000
	007 Move W8, [X20+1359]
	008 Move X21, [X21+2272]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xB06000
	015 Move X0, [X0+2272]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1359], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move W1, W31
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]

Method: System.Text.RegularExpressions.RegexCharClass ParseRecursive(System.String charClass, System.Int32 start)

Disassembly:
	0x03636D54 BL 0x1C16CF4
	0x03636D58 ADRP X0, 0xB05000
	0x03636D5C LDR X0, [X0 + 0xF70]
	0x03636D60 BL 0x1C16CF4
	0x03636D64 ADRP X0, 0xB05000
	0x03636D68 LDR X0, [X0 + 0xF78]
	0x03636D6C BL 0x1C16CF4
	0x03636D70 ADRP X0, 0xB05000
	0x03636D74 LDR X0, [X0 + 0xF80]
	0x03636D78 BL 0x1C16CF4
	0x03636D7C ADRP X0, 0xB05000
	0x03636D80 LDR X0, [X0 + 0xF88]
	0x03636D84 BL 0x1C16CF4
	0x03636D88 ADRP X0, 0xB05000
	0x03636D8C LDR X0, [X0 + 0xF90]
	0x03636D90 BL 0x1C16CF4
	0x03636D94 ADRP X0, 0xB05000
	0x03636D98 LDR X0, [X0 + 0xF98]
	0x03636D9C BL 0x1C16CF4
	0x03636DA0 ADRP X0, 0xB05000
	0x03636DA4 LDR X0, [X0 + 0xFA0]
	0x03636DA8 BL 0x1C16CF4
	0x03636DAC ADRP X0, 0xB05000
	0x03636DB0 LDR X0, [X0 + 0xFA8]
	0x03636DB4 BL 0x1C16CF4
	0x03636DB8 ADRP X0, 0xB05000
	0x03636DBC LDR X0, [X0 + 0xFB0]
	0x03636DC0 BL 0x1C16CF4
	0x03636DC4 ADRP X0, 0xB05000
	0x03636DC8 LDR X0, [X0 + 0xFB8]
	0x03636DCC BL 0x1C16CF4
	0x03636DD0 ADRP X0, 0xB05000
	0x03636DD4 LDR X0, [X0 + 0xFC0]
	0x03636DD8 BL 0x1C16CF4
	0x03636DDC ADRP X0, 0xB05000
	0x03636DE0 LDR X0, [X0 + 0xFC8]
	0x03636DE4 BL 0x1C16CF4
	0x03636DE8 ADRP X0, 0xB05000
	0x03636DEC LDR X0, [X0 + 0xFD0]
	0x03636DF0 BL 0x1C16CF4
	0x03636DF4 ADRP X0, 0xB05000
	0x03636DF8 LDR X0, [X0 + 0xFD8]
	0x03636DFC BL 0x1C16CF4
	0x03636E00 ADRP X0, 0xB05000
	0x03636E04 LDR X0, [X0 + 0xFE0]
	0x03636E08 BL 0x1C16CF4
	0x03636E0C ADRP X0, 0xAE6000
	0x03636E10 LDR X0, [X0 + 0x58]
	0x03636E14 BL 0x1C16CF4
	0x03636E18 ADRP X0, 0xB05000
	0x03636E1C LDR X0, [X0 + 0xFE8]
	0x03636E20 BL 0x1C16CF4
	0x03636E24 ADRP X0, 0xB05000
	0x03636E28 LDR X0, [X0 + 0xFF0]
	0x03636E2C BL 0x1C16CF4
	0x03636E30 ADRP X0, 0xB05000
	0x03636E34 LDR X0, [X0 + 0xFF8]
	0x03636E38 BL 0x1C16CF4
	0x03636E3C ADRP X0, 0xB06000
	0x03636E40 LDR X0, [X0]
	0x03636E44 BL 0x1C16CF4
	0x03636E48 ADRP X0, 0xB06000
	0x03636E4C LDR X0, [X0 + 0x8]
	0x03636E50 BL 0x1C16CF4
	0x03636E54 ADRP X0, 0xB06000
	0x03636E58 LDR X0, [X0 + 0x10]
	0x03636E5C BL 0x1C16CF4
	0x03636E60 ADRP X0, 0xB06000
	0x03636E64 LDR X0, [X0 + 0x18]
	0x03636E68 BL 0x1C16CF4
	0x03636E6C ADRP X0, 0xB06000
	0x03636E70 LDR X0, [X0 + 0x20]
	0x03636E74 BL 0x1C16CF4
	0x03636E78 ADRP X0, 0xB06000
	0x03636E7C LDR X0, [X0 + 0x28]
	0x03636E80 BL 0x1C16CF4
	0x03636E84 ADRP X0, 0xB05000
	0x03636E88 LDR X0, [X0 + 0x950]
	0x03636E8C BL 0x1C16CF4
	0x03636E90 ADRP X0, 0xB06000
	0x03636E94 LDR X0, [X0 + 0x30]
	0x03636E98 BL 0x1C16CF4
	0x03636E9C ADRP X0, 0xB06000
	0x03636EA0 LDR X0, [X0 + 0x38]
	0x03636EA4 BL 0x1C16CF4
	0x03636EA8 ADRP X0, 0xB06000
	0x03636EAC LDR X0, [X0 + 0x40]
	0x03636EB0 BL 0x1C16CF4
	0x03636EB4 ADRP X0, 0xB06000
	0x03636EB8 LDR X0, [X0 + 0x48]
	0x03636EBC BL 0x1C16CF4
	0x03636EC0 ADRP X0, 0xB06000
	0x03636EC4 LDR X0, [X0 + 0x50]
	0x03636EC8 BL 0x1C16CF4
	0x03636ECC ADRP X0, 0xB06000
	0x03636ED0 LDR X0, [X0 + 0x58]
	0x03636ED4 BL 0x1C16CF4
	0x03636ED8 ADRP X0, 0xB06000
	0x03636EDC LDR X0, [X0 + 0x60]
	0x03636EE0 BL 0x1C16CF4
	0x03636EE4 ADRP X0, 0xB05000
	0x03636EE8 LDR X0, [X0 + 0x980]
	0x03636EEC BL 0x1C16CF4
	0x03636EF0 ADRP X0, 0xB06000
	0x03636EF4 LDR X0, [X0 + 0x68]
	0x03636EF8 BL 0x1C16CF4
	0x03636EFC ADRP X0, 0xB06000
	0x03636F00 LDR X0, [X0 + 0x70]
	0x03636F04 BL 0x1C16CF4
	0x03636F08 ADRP X0, 0xB06000
	0x03636F0C LDR X0, [X0 + 0x78]
	0x03636F10 BL 0x1C16CF4
	0x03636F14 ADRP X0, 0xB06000
	0x03636F18 LDR X0, [X0 + 0x80]
	0x03636F1C BL 0x1C16CF4
	0x03636F20 ADRP X0, 0xB06000
	0x03636F24 LDR X0, [X0 + 0x88]
	0x03636F28 BL 0x1C16CF4
	0x03636F2C ADRP X0, 0xB06000
	0x03636F30 LDR X0, [X0 + 0x90]
	0x03636F34 BL 0x1C16CF4
	0x03636F38 ADRP X0, 0xB06000
	0x03636F3C LDR X0, [X0 + 0x98]
	0x03636F40 BL 0x1C16CF4
	0x03636F44 ADRP X0, 0xB06000
	0x03636F48 LDR X0, [X0 + 0xA0]
	0x03636F4C BL 0x1C16CF4
	0x03636F50 ADRP X0, 0xB06000
	0x03636F54 LDR X0, [X0 + 0xA8]
	0x03636F58 BL 0x1C16CF4
	0x03636F5C ADRP X0, 0xB06000
	0x03636F60 LDR X0, [X0 + 0xB0]
	0x03636F64 BL 0x1C16CF4
	0x03636F68 ADRP X0, 0xB06000
	0x03636F6C LDR X0, [X0 + 0xB8]
	0x03636F70 BL 0x1C16CF4
	0x03636F74 ADRP X0, 0xB06000
	0x03636F78 LDR X0, [X0 + 0xC0]
	0x03636F7C BL 0x1C16CF4
	0x03636F80 ADRP X0, 0xB06000
	0x03636F84 LDR X0, [X0 + 0xC8]
	0x03636F88 BL 0x1C16CF4
	0x03636F8C ADRP X0, 0xB06000
	0x03636F90 LDR X0, [X0 + 0xD0]
	0x03636F94 BL 0x1C16CF4
	0x03636F98 ADRP X0, 0xB06000
	0x03636F9C LDR X0, [X0 + 0xD8]
	0x03636FA0 BL 0x1C16CF4
	0x03636FA4 ADRP X0, 0xB06000
	0x03636FA8 LDR X0, [X0 + 0xE0]
	0x03636FAC BL 0x1C16CF4
	0x03636FB0 ADRP X0, 0xB03000
	0x03636FB4 LDR X0, [X0 + 0xDC0]
	0x03636FB8 BL 0x1C16CF4
	0x03636FBC ADRP X0, 0xB06000
	0x03636FC0 LDR X0, [X0 + 0xE8]
	0x03636FC4 BL 0x1C16CF4
	0x03636FC8 ADRP X0, 0xB06000

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+16], X30
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X21, 0xDAB000
	013 Move W8, [X21+1360]
	014 Move W20, W1
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {37}
	020 Move X0, 0xB06000
	021 Move X0, [X0+2248]
	022 Call 0x1C17CF4
	023 Move X0, 0xB06000
	024 Move X0, [X0+2240]
	025 Call 0x1C17CF4
	026 Move X0, 0xB06000
	027 Move X0, [X0+2232]
	028 Call 0x1C17CF4
	029 Move X0, 0xB06000
	030 Move X0, [X0+2272]
	031 Call 0x1C17CF4
	032 Move X0, 0xABE000
	033 Move X0, [X0+2288]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X21+1360], W8
	037 Compare X19, 0
	038 JumpIfEqual {168}
	039 Move X22, 0xB06000
	040 Move X26, 0xB06000
	041 Move X22, [X22+2232]
	042 Move X26, [X26+2240]
	043 Add W1, W20, 1
	044 Move X0, X19
	045 Move X2, X31
	046 Call String.get_Chars, X0, X1
	047 Move W21, W0
	048 And W25, W0, 0xFFFF
	049 Add W1, W20, 2
	050 Move X0, X19
	051 Move X2, X31
	052 Call String.get_Chars, X0, X1
	053 Move W23, W0
	054 Move X0, [X22]
	055 Add W24, W20, 3
	056 Add W22, W24, W21
	057 Call 0x1C17F10
	058 Move X2, [X26]
	059 Move W1, W25
	060 Move X21, X0
	061 Call List`1<SingleRange>..ctor, X0, X1
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Move X26, 0xB06000
	064 Move X26, [X26+2248]
	065 Move X0, X19
	066 Move W1, W24
	067 Move X2, X31
	068 Call String.get_Chars, X0, X1
	069 Add W1, W24, 1
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Move W25, W0
	072 Move X0, X19
	073 Move X2, X31
	074 Call String.get_Chars, X0, X1
	075 Subtract W2, W0, 1
	076 Move W2, 0xFFFF
	077 Add X0, X31, 12
	078 Move W1, W25
	079 Move X3, X31
	080 Move [X31+12], W31
	081 Call SingleRange..ctor, X0, X1, X2
	082 Compare X21, 0
	083 JumpIfEqual {168}
	084 Move W10, [X21+28]
	085 Move W1, [X31+12]
	086 Move X8, [X21+16]
	087 Move X9, [X26]
	088 Add W10, W10, 1
	089 Move [X21+28], W10
	090 Compare X8, 0
	091 JumpIfEqual {168}
	092 NotImplemented "Instruction LDRSW not yet implemented."
	093 Move W11, [X8+24]
	094 NotImplemented "Instruction CMP not yet implemented."
	095 Add W9, W10, 1
	096 Add X8, X8, X10
	097 Move [X21+24], W9
	098 Move [X8+32], W1
	099 Move X8, [X9+32]
	100 Move X0, X21
	101 Move X8, [X8+192]
	102 Move X2, [X8+112]
	103 Call List`1<SingleRange>.AddWithResize, X0, X1
	104 Add W24, W24, 2
	105 NotImplemented "Instruction CMP not yet implemented."
	106 Move W8, [X19+16]
	107 Move X27, 0xABE000
	108 Move X26, 0xB06000
	109 Move X27, [X27+2288]
	110 Move X26, [X26+2272]
	111 Add W25, W22, W23
	112 NotImplemented "Instruction CMP not yet implemented."
	113 And W24, W23, 0xFFFF
	114 Move X0, [X26]
	115 Move W8, [X0+224]
	116 Compare W8, 0
	117 JumpIfNotEqual {119}
	118 Call 0x1C17DFC
	119 Move X0, X19
	120 Move W1, W25
	121 Call RegexCharClass.ParseRecursive, X0, X1
	122 Move X23, X0
	123 Move X23, X31
	124 Move X0, X19
	125 Move W1, W20
	126 Move X2, X31
	127 Call String.get_Chars, X0, X1
	128 And W25, W0, 0xFFFF
	129 Move X0, X19
	130 Move W1, W22
	131 Move W2, W24
	132 Move X3, X31
	133 Call String.Substring, X0, X1, X2
	134 Move X8, [X27]
	135 Move X19, X0
	136 Move X0, X8
	137 Call 0x1C17F10
	138 Move X1, X19
	139 Move X2, X31
	140 Move X20, X0
	141 Call StringBuilder..ctor, X0, X1
	142 Move X0, [X26]
	143 Call 0x1C17F10
	144 NotImplemented "Instruction CMP not yet implemented."
	145 Move X1, X31
	146 Move X19, X0
	147 NotImplemented "Instruction CSET not yet implemented."
	148 Call Object..ctor, X0
	149 Move W8, 1
	150 Move [X19+16], X21
	151 Move [X19+24], X20
	152 Move [X19+33], W22
	153 Move [X19+32], W8
	154 Move [X19+40], X23
	155 Move X0, X19
	156 Move X20, [X31+80]
	157 Move X19, [X31+88]
	158 Move X22, [X31+64]
	159 Move X21, [X31+72]
	160 Move X24, [X31+48]
	161 Move X23, [X31+56]
	162 Move X26, [X31+32]
	163 Move X25, [X31+40]
	164 Move X30, [X31+16]
	165 Move X27, [X31+24]
	166 Add X31, X31, 96
	167 Return X0
	168 Call 0x1C17F20

Method: System.Int32 RangeCount()

Disassembly:
	0x03635510 MOV X19, X0
	0x03635514 TBNZ X8, 0x0, 0x363552C
	0x03635518 ADRP X0, 0xB06000
	0x0363551C LDR X0, [X0 + 0x8E0]
	0x03635520 BL 0x1C16CF4
	0x03635524 MOVZ W8, 0x1
	0x03635528 STRB W8, [X20 + 0x547]
	0x0363552C CBZ X19, 0x3635608
	0x03635530 MOV X0, X19
	0x03635534 MOV W1, W31
	0x03635538 MOV X2, X31
	0x0363553C BL 0x3222A1C
	0x03635540 ANDS W31, W0, 0xFFFF
	0x03635544 B.NE 0x36355F8
	0x03635548 MOVZ W1, 0x2
	0x0363554C MOV X0, X19
	0x03635550 MOV X2, X31
	0x03635554 BL 0x3222A1C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xDAC000
	005 Move W8, [X20+1361]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xB07000
	012 Move X0, [X0+2256]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+1361], W8
	016 Move X8, [X19+16]
	017 Compare X8, 0
	018 JumpIfEqual {24}
	019 Move W0, [X8+24]
	020 Move X20, [X31+16]
	021 Move X19, [X31+24]
	022 Move X30, [X31+32]
	023 Return X0
	024 Call 0x1C17F20

Method: System.String ToStringClass()

Disassembly:
	0x03636FCC LDR X0, [X0 + 0xF0]
	0x03636FD0 BL 0x1C16CF4
	0x03636FD4 ADRP X0, 0xB06000
	0x03636FD8 LDR X0, [X0 + 0xF8]
	0x03636FDC BL 0x1C16CF4
	0x03636FE0 ADRP X0, 0xB05000
	0x03636FE4 LDR X0, [X0 + 0x9A0]
	0x03636FE8 BL 0x1C16CF4
	0x03636FEC ADRP X0, 0xB06000
	0x03636FF0 LDR X0, [X0 + 0x100]
	0x03636FF4 BL 0x1C16CF4
	0x03636FF8 ADRP X0, 0xB06000
	0x03636FFC LDR X0, [X0 + 0x108]
	0x03637000 BL 0x1C16CF4
	0x03637004 ADRP X0, 0xB05000
	0x03637008 LDR X0, [X0 + 0x110]
	0x0363700C BL 0x1C16CF4
	0x03637010 ADRP X0, 0xB05000
	0x03637014 LDR X0, [X0 + 0x118]
	0x03637018 BL 0x1C16CF4
	0x0363701C ADRP X0, 0xB05000
	0x03637020 LDR X0, [X0 + 0x120]
	0x03637024 BL 0x1C16CF4
	0x03637028 ADRP X0, 0xB05000
	0x0363702C LDR X0, [X0 + 0x128]
	0x03637030 BL 0x1C16CF4
	0x03637034 ADRP X0, 0xB04000
	0x03637038 LDR X0, [X0 + 0x9B8]
	0x0363703C BL 0x1C16CF4
	0x03637040 ADRP X0, 0xB05000
	0x03637044 LDR X0, [X0 + 0x130]
	0x03637048 BL 0x1C16CF4
	0x0363704C ADRP X0, 0xB05000
	0x03637050 LDR X0, [X0 + 0x138]
	0x03637054 BL 0x1C16CF4
	0x03637058 ADRP X0, 0xB05000
	0x0363705C LDR X0, [X0 + 0x140]
	0x03637060 BL 0x1C16CF4
	0x03637064 ADRP X0, 0xB05000
	0x03637068 LDR X0, [X0 + 0x148]
	0x0363706C BL 0x1C16CF4
	0x03637070 ADRP X0, 0xB05000
	0x03637074 LDR X0, [X0 + 0x150]
	0x03637078 BL 0x1C16CF4
	0x0363707C ADRP X0, 0xB05000
	0x03637080 LDR X0, [X0 + 0x158]
	0x03637084 BL 0x1C16CF4
	0x03637088 ADRP X0, 0xB05000
	0x0363708C LDR X0, [X0 + 0x160]
	0x03637090 BL 0x1C16CF4
	0x03637094 ADRP X0, 0xB05000
	0x03637098 LDR X0, [X0 + 0x168]
	0x0363709C BL 0x1C16CF4
	0x036370A0 ADRP X0, 0xB05000
	0x036370A4 LDR X0, [X0 + 0x170]
	0x036370A8 BL 0x1C16CF4
	0x036370AC ADRP X0, 0xB05000
	0x036370B0 LDR X0, [X0 + 0x178]
	0x036370B4 BL 0x1C16CF4
	0x036370B8 ADRP X0, 0xB04000
	0x036370BC LDR X0, [X0 + 0x9C8]
	0x036370C0 BL 0x1C16CF4
	0x036370C4 ADRP X0, 0xB05000
	0x036370C8 LDR X0, [X0 + 0x180]
	0x036370CC BL 0x1C16CF4
	0x036370D0 ADRP X0, 0xB05000
	0x036370D4 LDR X0, [X0 + 0x188]
	0x036370D8 BL 0x1C16CF4
	0x036370DC ADRP X0, 0xB05000
	0x036370E0 LDR X0, [X0 + 0x190]
	0x036370E4 BL 0x1C16CF4
	0x036370E8 ADRP X0, 0xB05000
	0x036370EC LDR X0, [X0 + 0x198]
	0x036370F0 BL 0x1C16CF4
	0x036370F4 ADRP X0, 0xB05000
	0x036370F8 LDR X0, [X0 + 0x1A0]
	0x036370FC BL 0x1C16CF4
	0x03637100 ADRP X0, 0xB05000
	0x03637104 LDR X0, [X0 + 0x1A8]
	0x03637108 BL 0x1C16CF4
	0x0363710C ADRP X0, 0xB05000
	0x03637110 LDR X0, [X0 + 0x1B0]
	0x03637114 BL 0x1C16CF4
	0x03637118 ADRP X0, 0xB05000
	0x0363711C LDR X0, [X0 + 0x1B8]
	0x03637120 BL 0x1C16CF4
	0x03637124 ADRP X0, 0xAED000
	0x03637128 LDR X0, [X0 + 0x1E8]
	0x0363712C BL 0x1C16CF4
	0x03637130 ADRP X0, 0xB05000
	0x03637134 LDR X0, [X0 + 0x1C0]
	0x03637138 BL 0x1C16CF4
	0x0363713C ADRP X0, 0xB05000
	0x03637140 LDR X0, [X0 + 0x1C8]
	0x03637144 BL 0x1C16CF4
	0x03637148 ADRP X0, 0xB05000
	0x0363714C LDR X0, [X0 + 0x1D0]
	0x03637150 BL 0x1C16CF4
	0x03637154 ADRP X0, 0xB05000
	0x03637158 LDR X0, [X0 + 0x1D8]
	0x0363715C BL 0x1C16CF4
	0x03637160 ADRP X0, 0xB05000
	0x03637164 LDR X0, [X0 + 0x1E0]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0xDAB000
	009 Move W8, [X20+1362]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0xB06000
	016 Move X0, [X0+2256]
	017 Call 0x1C17CF4
	018 Move X0, 0xB06000
	019 Move X0, [X0+2264]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X20+1362], W8
	023 Move W8, [X19+32]
	024 Compare W8, 0
	025 JumpIfNotEqual {28}
	026 Move X0, X19
	027 Call RegexCharClass.Canonicalize, X0
	028 Move X8, [X19+16]
	029 Compare X8, 0
	030 JumpIfEqual {92}
	031 Move X0, [X19+24]
	032 Compare X0, 0
	033 JumpIfEqual {92}
	034 Move W8, [X8+24]
	035 Move X1, X31
	036 Move W21, W8
	037 ShiftRight W21, 31
	038 And W21, W21, 0x3FFFFFFF
	039 Call StringBuilder.get_Length, X0
	040 Add W8, W21, W0
	041 Add W0, W8, 3
	042 Move X1, X31
	043 Call StringBuilderCache.Acquire, X0
	044 Compare X0, 0
	045 JumpIfEqual {92}
	046 Move W1, [X19+33]
	047 Move X2, X31
	048 Move X20, X0
	049 Call StringBuilder.Append, X0, X1
	050 Move X0, X20
	051 Move W1, W21
	052 Move X2, X31
	053 Call StringBuilder.Append, X0, X1
	054 Move X0, [X19+24]
	055 Compare X0, 0
	056 JumpIfEqual {92}
	057 Move X1, X31
	058 Call StringBuilder.get_Length, X0
	059 Move W1, W0
	060 Move X0, X20
	061 Move X2, X31
	062 Call StringBuilder.Append, X0, X1
	063 Move X0, [X19+16]
	064 Compare X0, 0
	065 JumpIfEqual {92}
	066 Move X23, 0xB05000
	067 Move X23, [X23+2264]
	068 Move W21, W31
	069 Move W8, [X0+24]
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Move X2, [X23]
	072 Move W1, W21
	073 Call List`1<SingleRange>.get_Item, X0, X1
	074 Move X22, X0
	075 Move X0, X20
	076 Move W1, W22
	077 Move X2, X31
	078 NotImplemented "Instruction ORN not yet implemented."
	079 Call StringBuilder.Append, X0, X1
	080 And X31, X24, 0xFFFFFFFF
	081 Move X8, X22
	082 ShiftRight X8, 16
	083 And X8, X8, 0x7FFFFFFF
	084 Add W1, W8, 1
	085 Move X0, X20
	086 Move X2, X31
	087 Call StringBuilder.Append, X0, X1
	088 Move X0, [X19+16]
	089 Add W21, W21, 1
	090 Compare X0, 0
	091 JumpIfNotEqual {69}
	092 Call 0x1C17F20
	093 Move X0, X20
	094 Move X1, X31
	095 Call StringBuilder.get_Length, X0
	096 Subtract W2, W0, 3
	097 Move W1, 1
	098 Move X0, X20
	099 Move X3, X31
	100 Call StringBuilder.set_Chars, X0, X1, X2
	101 Move X1, [X19+24]
	102 Move X0, X20
	103 Move X2, X31
	104 Call StringBuilder.Append, X0, X1
	105 Move X0, [X19+40]
	106 Compare X0, 0
	107 JumpIfEqual {113}
	108 Call RegexCharClass.ToStringClass, X0
	109 Move X1, X0
	110 Move X0, X20
	111 Move X2, X31
	112 Call StringBuilder.Append, X0, X1
	113 Move X0, X20
	114 Move X20, [X31+48]
	115 Move X19, [X31+56]
	116 Move X22, [X31+32]
	117 Move X21, [X31+40]
	118 Move X24, [X31+16]
	119 Move X23, [X31+24]
	120 Move X1, X31
	121 Move X30, [X31+64]
	122 Call StringBuilderCache.GetStringAndRelease, X0
	123 Return X0

Method: System.Text.RegularExpressions.RegexCharClass/SingleRange GetRangeAt(System.Int32 i)

Disassembly:
	0x03635558 ANDS W31, W0, 0xFFFF
	0x0363555C B.NE 0x36355F8
	0x03635560 MOVZ W1, 0x1
	0x03635564 MOV X0, X19
	0x03635568 MOV X2, X31
	0x0363556C BL 0x3222A1C
	0x03635570 AND W8, W0, 0xFFFF
	0x03635574 CMP W8, 0x2
	0x03635578 B.NE 0x36355F8
	0x0363557C ADRP X8, 0xB06000
	0x03635580 LDR X8, [X8 + 0x8E0]
	0x03635584 LDR X0, [X8]
	0x03635588 LDR W8, [X0 + 0xE0]
	0x0363558C CBNZ W8, 0x3635594
	0x03635590 BL 0x1C16DFC
	0x03635594 MOV X0, X19
	0x03635598 BL 0x36353E8
	0x0363559C TBNZ X0, 0x0, 0x36355F8
	0x036355A0 MOVZ W1, 0x3
	0x036355A4 MOV X0, X19
	0x036355A8 MOV X2, X31
	0x036355AC BL 0x3222A1C
	0x036355B0 ORN W8, W31, W0, 0x0
	0x036355B4 ANDS W31, W8, 0xFFFF

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xDAC000
	006 Move W8, [X21+1363]
	007 Move W19, W1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xB07000
	014 Move X0, [X0+2264]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+1363], W8
	018 Move X0, [X20+16]
	019 Compare X0, 0
	020 JumpIfEqual {32}
	021 Move X8, 0xB07000
	022 Move X8, [X8+2264]
	023 Move W1, W19
	024 Move X2, [X8]
	025 Call List`1<SingleRange>.get_Item, X0, X1
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 And X0, X0, 0
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Return X0
	032 Call 0x1C17F20

Method: System.Void Canonicalize()

Disassembly:
	0x03637168 BL 0x1C16CF4
	0x0363716C ADRP X0, 0xB05000
	0x03637170 LDR X0, [X0 + 0x1E8]
	0x03637174 BL 0x1C16CF4
	0x03637178 ADRP X0, 0xAC7000
	0x0363717C LDR X0, [X0 + 0x358]
	0x03637180 BL 0x1C16CF4
	0x03637184 ADRP X0, 0xB04000
	0x03637188 LDR X0, [X0 + 0x9B0]
	0x0363718C BL 0x1C16CF4
	0x03637190 ADRP X0, 0xB05000
	0x03637194 LDR X0, [X0 + 0x1F0]
	0x03637198 BL 0x1C16CF4
	0x0363719C ADRP X0, 0xB04000
	0x036371A0 LDR X0, [X0 + 0x8E8]
	0x036371A4 BL 0x1C16CF4
	0x036371A8 ADRP X0, 0xB05000
	0x036371AC LDR X0, [X0 + 0x1F8]
	0x036371B0 BL 0x1C16CF4
	0x036371B4 ADRP X0, 0xB05000
	0x036371B8 LDR X0, [X0 + 0x200]
	0x036371BC BL 0x1C16CF4
	0x036371C0 ADRP X0, 0xB05000
	0x036371C4 LDR X0, [X0 + 0x208]
	0x036371C8 BL 0x1C16CF4
	0x036371CC ADRP X0, 0xB05000
	0x036371D0 LDR X0, [X0 + 0x210]
	0x036371D4 BL 0x1C16CF4
	0x036371D8 ADRP X0, 0xB05000
	0x036371DC LDR X0, [X0 + 0x218]
	0x036371E0 BL 0x1C16CF4
	0x036371E4 ADRP X0, 0xB04000
	0x036371E8 LDR X0, [X0 + 0x8F0]
	0x036371EC BL 0x1C16CF4
	0x036371F0 ADRP X0, 0xB05000
	0x036371F4 LDR X0, [X0 + 0x220]
	0x036371F8 BL 0x1C16CF4
	0x036371FC ADRP X0, 0xB05000
	0x03637200 LDR X0, [X0 + 0x228]
	0x03637204 BL 0x1C16CF4
	0x03637208 ADRP X0, 0xB05000
	0x0363720C LDR X0, [X0 + 0x230]
	0x03637210 BL 0x1C16CF4
	0x03637214 ADRP X0, 0xB05000
	0x03637218 LDR X0, [X0 + 0x238]
	0x0363721C BL 0x1C16CF4
	0x03637220 ADRP X0, 0xB05000
	0x03637224 LDR X0, [X0 + 0x240]
	0x03637228 BL 0x1C16CF4
	0x0363722C ADRP X0, 0xB05000
	0x03637230 LDR X0, [X0 + 0x248]
	0x03637234 BL 0x1C16CF4
	0x03637238 ADRP X0, 0xB04000
	0x0363723C LDR X0, [X0 + 0x8F8]
	0x03637240 BL 0x1C16CF4
	0x03637244 ADRP X0, 0xB05000
	0x03637248 LDR X0, [X0 + 0x250]
	0x0363724C BL 0x1C16CF4
	0x03637250 ADRP X0, 0xB05000
	0x03637254 LDR X0, [X0 + 0x258]
	0x03637258 BL 0x1C16CF4
	0x0363725C ADRP X0, 0xB05000
	0x03637260 LDR X0, [X0 + 0x260]
	0x03637264 BL 0x1C16CF4
	0x03637268 ADRP X0, 0xB05000
	0x0363726C LDR X0, [X0 + 0x268]
	0x03637270 BL 0x1C16CF4
	0x03637274 ADRP X0, 0xB05000
	0x03637278 LDR X0, [X0 + 0x270]
	0x0363727C BL 0x1C16CF4
	0x03637280 ADRP X0, 0xB05000
	0x03637284 LDR X0, [X0 + 0x278]
	0x03637288 BL 0x1C16CF4
	0x0363728C ADRP X0, 0xB05000
	0x03637290 LDR X0, [X0 + 0x280]
	0x03637294 BL 0x1C16CF4
	0x03637298 ADRP X0, 0xB05000
	0x0363729C LDR X0, [X0 + 0x288]
	0x036372A0 BL 0x1C16CF4
	0x036372A4 ADRP X0, 0xAEB000
	0x036372A8 LDR X0, [X0 + 0xFB0]
	0x036372AC BL 0x1C16CF4
	0x036372B0 ADRP X0, 0xB05000
	0x036372B4 LDR X0, [X0 + 0x290]
	0x036372B8 BL 0x1C16CF4
	0x036372BC ADRP X0, 0xB05000
	0x036372C0 LDR X0, [X0 + 0x298]
	0x036372C4 BL 0x1C16CF4
	0x036372C8 ADRP X0, 0xB04000
	0x036372CC LDR X0, [X0 + 0x988]
	0x036372D0 BL 0x1C16CF4
	0x036372D4 ADRP X0, 0xB05000
	0x036372D8 LDR X0, [X0 + 0x2A0]
	0x036372DC BL 0x1C16CF4
	0x036372E0 ADRP X0, 0xB05000
	0x036372E4 LDR X0, [X0 + 0x2A8]
	0x036372E8 BL 0x1C16CF4
	0x036372EC ADRP X12, 0xB04000
	0x036372F0 MOV X10, X25
	0x036372F4 ADRP X11, 0xABD000
	0x036372F8 ADRP X25, 0xB04000
	0x036372FC LDR X12, [X12 + 0x9C0]
	0x03637300 LDR X11, [X11 + 0x6D0]
	0x03637304 LDR X25, [X25 + 0x980]
	0x03637308 MOVZ W8, 0x1
	0x0363730C STRB W8, [X23 + 0x556]
	0x03637310 LDR X8, [X22]
	0x03637314 LDR X9, [X25]
	0x03637318 LDR X8, [X8 + 0xB8]
	0x0363731C STR X9, [X8]
	0x03637320 LDR X8, [X22]
	0x03637324 LDR X13, [X21]
	0x03637328 LDR X9, [X19]
	0x0363732C LDR X8, [X8 + 0xB8]
	0x03637330 STP X13, X9, [X8 + 0x8]
	0x03637334 LDR X13, [X20]
	0x03637338 LDR X9, [X29]
	0x0363733C STP X13, X9, [X8 + 0x18]
	0x03637340 LDR X13, [X28]
	0x03637344 LDR X9, [X27]
	0x03637348 STP X13, X9, [X8 + 0x28]
	0x0363734C LDR X13, [X26]
	0x03637350 LDR X9, [X24]
	0x03637354 STP X13, X9, [X8 + 0x38]
	0x03637358 LDR X13, [X12]
	0x0363735C LDR X9, [X10]
	0x03637360 STP X13, X9, [X8 + 0x48]
	0x03637364 LDR X0, [X11]
	0x03637368 BL 0x1C16F10
	0x0363736C ADRP X8, 0xB04000
	0x03637370 LDR X8, [X8 + 0x9D0]
	0x03637374 MOVZ W1, 0x26
	0x03637378 MOV X19, X0
	0x0363737C LDR X2, [X8]
	0x03637380 BL 0x2AA481C
	0x03637384 CBZ X19, 0x363B470
	0x03637388 ADRP X8, 0xB04000
	0x0363738C ADRP X9, 0xB04000
	0x03637390 ADRP X20, 0xABD000
	0x03637394 LDR X8, [X8 + 0xED0]
	0x03637398 LDR X9, [X9 + 0xA80]
	0x0363739C LDR X20, [X20 + 0x810]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+16], X30
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X20, 0xDAA000
	013 Move X21, 0xB05000
	014 Move W8, [X20+1364]
	015 Move X21, [X21+2408]
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {41}
	021 Move X0, 0xB05000
	022 Move X0, [X0+2416]
	023 Call 0x1C17CF4
	024 Move X0, 0xB05000
	025 Move X0, [X0+2424]
	026 Call 0x1C17CF4
	027 Move X0, 0xB05000
	028 Move X0, [X0+2256]
	029 Call 0x1C17CF4
	030 Move X0, 0xB05000
	031 Move X0, [X0+2264]
	032 Call 0x1C17CF4
	033 Move X0, 0xB05000
	034 Move X0, [X0+2336]
	035 Call 0x1C17CF4
	036 Move X0, 0xB05000
	037 Move X0, [X0+2408]
	038 Call 0x1C17CF4
	039 Move W8, 1
	040 Move [X20+1364], W8
	041 Move W8, 1
	042 Move [X19+32], W8
	043 Move X0, [X21]
	044 Move X20, [X19+16]
	045 Move W8, [X0+224]
	046 Compare W8, 0
	047 JumpIfNotEqual {49}
	048 Call 0x1C17DFC
	049 Compare X20, 0
	050 JumpIfEqual {163}
	051 Move X8, [X21]
	052 Move X9, 0xB05000
	053 Move X0, X20
	054 Move X8, [X8+184]
	055 Move X9, [X9+2424]
	056 Move X1, [X8]
	057 Move X2, [X9]
	058 Call List`1<SingleRange>.Sort, X0, X1
	059 Move X0, [X19+16]
	060 Compare X0, 0
	061 JumpIfEqual {163}
	062 Move W8, [X0+24]
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Move X24, 0xB05000
	065 Move X25, 0xB05000
	066 Move X24, [X24+2264]
	067 Move X25, [X25+2336]
	068 Move W20, W31
	069 Move W21, 1
	070 Move W26, 0xFFFF
	071 Move X2, [X24]
	072 Move W1, W20
	073 Call List`1<SingleRange>.get_Item, X0, X1
	074 Move X23, [X19+16]
	075 Compare X23, 0
	076 JumpIfEqual {163}
	077 Move X22, X0
	078 ShiftRight X22, 16
	079 And X22, X22, 0x7FFFFFFF
	080 Move W8, [X23+24]
	081 NotImplemented "Instruction CMP not yet implemented."
	082 And W27, W22, 0xFFFF
	083 NotImplemented "Instruction CMP not yet implemented."
	084 Move X2, [X24]
	085 Move X0, X23
	086 Move W1, W21
	087 Call List`1<SingleRange>.get_Item, X0, X1
	088 Add W8, W27, 1
	089 NotImplemented "Instruction CMP not yet implemented."
	090 Move X23, [X19+16]
	091 Move X8, X0
	092 ShiftRight X8, 16
	093 And X8, X8, 0x7FFFFFFF
	094 NotImplemented "Instruction CMP not yet implemented."
	095 NotImplemented "Instruction CSEL not yet implemented."
	096 Add W21, W21, 1
	097 Compare X23, 0
	098 JumpIfNotEqual {80}
	099 Move W27, 1
	100 Move X23, [X19+16]
	101 Compare X23, 0
	102 JumpIfEqual {163}
	103 Move W27, W31
	104 Move X2, [X24]
	105 Move X0, X23
	106 Move W1, W20
	107 Call List`1<SingleRange>.get_Item, X0, X1
	108 Move X1, X0
	109 Add X0, X31, 12
	110 Move W2, W22
	111 Move X3, X31
	112 Move [X31+12], W31
	113 Call SingleRange..ctor, X0, X1, X2
	114 Move W2, [X31+12]
	115 Move X3, [X25]
	116 Move X0, X23
	117 Move W1, W20
	118 Call List`1<SingleRange>.set_Item, X0, X1, X2
	119 Add W20, W20, 1
	120 Move TEMP, X27
	121 And TEMP, TEMP, 1
	122 Compare TEMP, 1
	123 JumpIfEqual {141}
	124 NotImplemented "Instruction CMP not yet implemented."
	125 Move X22, [X19+16]
	126 Compare X22, 0
	127 JumpIfEqual {163}
	128 Move X2, [X24]
	129 Move X0, X22
	130 Move W1, W21
	131 Call List`1<SingleRange>.get_Item, X0, X1
	132 Move X3, [X25]
	133 And X2, X0, 0
	134 Move X0, X22
	135 Move W1, W20
	136 Call List`1<SingleRange>.set_Item, X0, X1, X2
	137 Move X0, [X19+16]
	138 Add W21, W21, 1
	139 Compare X0, 0
	140 JumpIfNotEqual {71}
	141 Move X0, [X19+16]
	142 Compare X0, 0
	143 JumpIfEqual {163}
	144 Move X9, 0xB05000
	145 Move W8, [X0+24]
	146 Move X9, [X9+2416]
	147 Move W1, W20
	148 Subtract W2, W8, W20
	149 Move X3, [X9]
	150 Call List`1<SingleRange>.RemoveRange, X0, X1, X2
	151 Move X20, [X31+80]
	152 Move X19, [X31+88]
	153 Move X22, [X31+64]
	154 Move X21, [X31+72]
	155 Move X24, [X31+48]
	156 Move X23, [X31+56]
	157 Move X26, [X31+32]
	158 Move X25, [X31+40]
	159 Move X30, [X31+16]
	160 Move X27, [X31+24]
	161 Add X31, X31, 96
	162 Return 
	163 Call 0x1C17F20

Method: System.String SetFromProperty(System.String capname, System.Boolean invert, System.String pattern)

Disassembly:
	0x03635A7C LDR X30, [X31], #0x50
	0x03635A80 B 0x3635AA4
	0x03635A84 MOV W0, W31
	0x03635A88 LDP X20, X19, [X31 + 0x40]
	0x03635A8C LDP X22, X21, [X31 + 0x30]
	0x03635A90 LDP X24, X23, [X31 + 0x20]
	0x03635A94 LDP X26, X25, [X31 + 0x10]
	0x03635A98 LDR X30, [X31], #0x50
	0x03635A9C RET
	0x03635AA0 BL 0x1C16F20
	0x03635AA4 SUB X31, X31, 0x50
	0x03635AA8 STP X30, X25, [X31 + 0x10]
	0x03635AAC STP X24, X23, [X31 + 0x20]
	0x03635AB0 STP X22, X21, [X31 + 0x30]
	0x03635AB4 STP X20, X19, [X31 + 0x40]
	0x03635AB8 ADRP X21, 0xDAB000
	0x03635ABC LDRB W8, [X21 + 0x54E]
	0x03635AC0 MOV W23, W4
	0x03635AC4 MOV W22, W3
	0x03635AC8 MOV W24, W2
	0x03635ACC MOV X19, X1
	0x03635AD0 MOV W20, W0
	0x03635AD4 TBNZ X8, 0x0, 0x3635AF8
	0x03635AD8 ADRP X0, 0xAC0000
	0x03635ADC LDR X0, [X0 + 0x170]
	0x03635AE0 BL 0x1C16CF4
	0x03635AE4 ADRP X0, 0xB06000
	0x03635AE8 LDR X0, [X0 + 0x8E0]
	0x03635AEC BL 0x1C16CF4
	0x03635AF0 MOVZ W8, 0x1
	0x03635AF4 STRB W8, [X21 + 0x54E]
	0x03635AF8 MOV W0, W20
	0x03635AFC MOV X1, X31
	0x03635B00 BL 0x330331C
	0x03635B04 ADD W8, W24, W22
	0x03635B08 ADD W22, W8, 0x3
	0x03635B0C ADD W23, W22, W23
	0x03635B10 CMP W22, W23
	0x03635B14 STR W22, [X31 + 0xC]
	0x03635B18 B.GE 0x3635C04
	0x03635B1C CBZ X19, 0x3635C28
	0x03635B20 ADRP X24, 0xB06000
	0x03635B24 ADRP X25, 0xAC0000
	0x03635B28 LDR X24, [X24 + 0x8E0]
	0x03635B2C LDR X25, [X25 + 0x170]
	0x03635B30 MOV W21, W0
	0x03635B34 MOV X0, X19
	0x03635B38 MOV W1, W22
	0x03635B3C MOV X2, X31
	0x03635B40 BL 0x3222A1C
	0x03635B44 ANDS W31, W0, 0xFFFF
	0x03635B48 B.EQ 0x3635B84
	0x03635B4C SXTH W8, W0
	0x03635B50 SUBS W9, W8, 0x1
	0x03635B54 B.LT 0x3635BB0
	0x03635B58 CMP W8, 0x64
	0x03635B5C B.NE 0x3635BDC
	0x03635B60 LDR X0, [X25]
	0x03635B64 LDR W8, [X0 + 0xE0]
	0x03635B68 CBNZ W8, 0x3635B70
	0x03635B6C BL 0x1C16DFC
	0x03635B70 MOV W0, W20
	0x03635B74 MOV X1, X31
	0x03635B78 BL 0x3317FCC
	0x03635B7C TBZ X0, 0x0, 0x3635BF4
	0x03635B80 B 0x3635C0C
	0x03635B84 LDR X0, [X24]
	0x03635B88 LDR W8, [X0 + 0xE0]
	0x03635B8C CBNZ W8, 0x3635B94
	0x03635B90 BL 0x1C16DFC
	0x03635B94 ADD X3, X31, 0xC
	0x03635B98 MOV W1, W21
	0x03635B9C MOV X2, X19
	0x03635BA0 BL 0x3635C2C
	0x03635BA4 TBNZ X0, 0x0, 0x3635C0C
	0x03635BA8 LDR W22, [X31 + 0xC]
	0x03635BAC B 0x3635BF4
	0x03635BB0 ADDS W31, W8, 0x64
	0x03635BB4 B.NE 0x3635BE8
	0x03635BB8 LDR X0, [X25]
	0x03635BBC LDR W8, [X0 + 0xE0]
	0x03635BC0 CBNZ W8, 0x3635BC8
	0x03635BC4 BL 0x1C16DFC
	0x03635BC8 MOV W0, W20
	0x03635BCC MOV X1, X31
	0x03635BD0 BL 0x3317FCC
	0x03635BD4 TBNZ X0, 0x0, 0x3635BF4
	0x03635BD8 B 0x3635C0C
	0x03635BDC CMP W21, W9
	0x03635BE0 B.NE 0x3635BF4
	0x03635BE4 B 0x3635C0C
	0x03635BE8 ORN W8, W31, W8, 0x0
	0x03635BEC CMP W21, W8
	0x03635BF0 B.NE 0x3635C0C
	0x03635BF4 ADD W22, W22, 0x1
	0x03635BF8 CMP W22, W23
	0x03635BFC STR W22, [X31 + 0xC]
	0x03635C00 B.LT 0x3635B34
	0x03635C04 MOV W0, W31
	0x03635C08 B 0x3635C10
	0x03635C0C MOVZ W0, 0x1
	0x03635C10 LDP X20, X19, [X31 + 0x40]
	0x03635C14 LDP X22, X21, [X31 + 0x30]
	0x03635C18 LDP X24, X23, [X31 + 0x20]
	0x03635C1C LDP X30, X25, [X31 + 0x10]
	0x03635C20 ADD X31, X31, 0x50
	0x03635C24 RET
	0x03635C28 BL 0x1C16F20
	0x03635C2C STR X30, [X31 - 0x30]!
	0x03635C30 STP X22, X21, [X31 + 0x10]
	0x03635C34 STP X20, X19, [X31 + 0x20]
	0x03635C38 LDR W8, [X3]
	0x03635C3C MOV W21, W1
	0x03635C40 ADD W1, W8, 0x1
	0x03635C44 STR W1, [X3]
	0x03635C48 CBZ X2, 0x3635CF8
	0x03635C4C MOV X20, X2
	0x03635C50 MOV X0, X2
	0x03635C54 MOV X2, X31
	0x03635C58 MOV X19, X3
	0x03635C5C BL 0x3222A1C
	0x03635C60 SXTH W8, W0
	0x03635C64 CMP W8, 0x1
	0x03635C68 B.LT 0x3635CA8
	0x03635C6C MOV W22, W31
	0x03635C70 LDR W9, [X19]
	0x03635C74 SUB W8, W8, 0x1
	0x03635C78 CMP W8, W21
	0x03635C7C CSET W8, EQ
	0x03635C80 ADD W1, W9, 0x1
	0x03635C84 MOV X0, X20
	0x03635C88 MOV X2, X31
	0x03635C8C ORR W22, W22, W8, 0x0
	0x03635C90 STR W1, [X19]
	0x03635C94 BL 0x3222A1C
	0x03635C98 ANDS W31, W0, 0xFFFF
	0x03635C9C SXTH W8, W0
	0x03635CA0 B.NE 0x3635C70
	0x03635CA4 B 0x3635CE4
	0x03635CA8 MOVZ W22, 0x1
	0x03635CAC CBZ W8, 0x3635CE4
	0x03635CB0 LDR W9, [X19]
	0x03635CB4 ORN W8, W31, W8, 0x0
	0x03635CB8 CMP W8, W21
	0x03635CBC CSET W8, NE
	0x03635CC0 ADD W1, W9, 0x1
	0x03635CC4 MOV X0, X20
	0x03635CC8 MOV X2, X31
	0x03635CCC AND W22, W22, W8, 0x0
	0x03635CD0 STR W1, [X19]
	0x03635CD4 BL 0x3222A1C

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X23, 0xDAC000
	011 Move X22, 0xB07000
	012 Move W8, [X23+1365]
	013 Move X22, [X22+2272]
	014 Move X20, X2
	015 Move W19, W1
	016 Move X21, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {29}
	021 Move X0, 0xB07000
	022 Move X0, [X0+2272]
	023 Call 0x1C17CF4
	024 Move X0, 0xB07000
	025 Move X0, [X0+2304]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X23+1365], W8
	029 Move X0, [X22]
	030 Move W8, [X0+224]
	031 Compare W8, 0
	032 JumpIfNotEqual {35}
	033 Call 0x1C17DFC
	034 Move X0, [X22]
	035 Move X8, [X0+184]
	036 Move X8, [X8+96]
	037 Compare X8, 0
	038 JumpIfEqual {183}
	039 Move W23, [X8+24]
	040 Compare W23, 0
	041 JumpIfEqual {82}
	042 Move W24, W31
	043 Move X0, [X22]
	044 Add W9, W24, W23
	045 NotImplemented "Instruction CMP not yet implemented."
	046 NotImplemented "Instruction CINC not yet implemented."
	047 Move W8, [X0+224]
	048 Compare W8, 0
	049 JumpIfNotEqual {52}
	050 Call 0x1C17DFC
	051 Move X0, [X22]
	052 Move X8, [X0+184]
	053 Move X8, [X8+96]
	054 Compare X8, 0
	055 JumpIfEqual {183}
	056 Move W9, [X8+24]
	057 NotImplemented "Instruction SBFM not yet implemented."
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Move X26, W25
	060 Add X8, X8, X26
	061 Move X8, [X8+32]
	062 Compare X8, 0
	063 JumpIfEqual {183}
	064 Move W9, [X8+24]
	065 Compare W9, 0
	066 JumpIfEqual {182}
	067 Move X1, [X8+32]
	068 Move W2, 4
	069 Move X0, X21
	070 Move X3, X31
	071 Call String.Compare, X0, X1, X2
	072 Move TEMP, X0
	073 And TEMP, TEMP, -2147483648
	074 Compare TEMP, -2147483648
	075 JumpIfEqual {80}
	076 Compare W0, 0
	077 JumpIfEqual {111}
	078 Add W24, W25, 1
	079 NotImplemented "Instruction CMP not yet implemented."
	080 NotImplemented "Instruction CMP not yet implemented."
	081 Move W23, W25
	082 Move X0, 0xB07000
	083 Move X0, [X0+2312]
	084 Call 0x1C17D08
	085 Move X1, X21
	086 Move X2, X31
	087 Call SR.Format, X0, X1
	088 Move X19, X0
	089 Move X0, 0xB07000
	090 Move X0, [X0+2320]
	091 Call 0x1C17D08
	092 Move X1, X20
	093 Move X2, X19
	094 Move X3, X31
	095 Call SR.Format, X0, X1, X2
	096 Move X19, X0
	097 Move X0, 0xAC7000
	098 Move X0, [X0+1400]
	099 Call 0x1C17D08
	100 Call 0x1C17F10
	101 Move X1, X19
	102 Move X2, X31
	103 Move X20, X0
	104 Call ArgumentException..ctor, X0, X1
	105 Move X0, 0xB07000
	106 Move X0, [X0+2328]
	107 Call 0x1C17D08
	108 Move X1, X0
	109 Move X0, X20
	110 Call 0x1C17DEC
	111 Move X0, [X22]
	112 Move W8, [X0+224]
	113 Compare W8, 0
	114 JumpIfNotEqual {117}
	115 Call 0x1C17DFC
	116 Move X0, [X22]
	117 Move X8, [X0+184]
	118 Move X8, [X8+96]
	119 Compare X8, 0
	120 JumpIfEqual {183}
	121 Move W9, [X8+24]
	122 NotImplemented "Instruction CMP not yet implemented."
	123 Add X8, X8, X26
	124 Move X8, [X8+32]
	125 Compare X8, 0
	126 JumpIfEqual {183}
	127 Move W9, [X8+24]
	128 NotImplemented "Instruction CMP not yet implemented."
	129 Move X20, [X8+40]
	130 Move TEMP, X19
	131 And TEMP, TEMP, 1
	132 Compare TEMP, 1
	133 JumpIfNotEqual {157}
	134 Compare X20, 0
	135 JumpIfEqual {183}
	136 Move X0, X20
	137 Move W1, W31
	138 Move X2, X31
	139 Call String.get_Chars, X0, X1
	140 And W31, W0, 0xFFFF
	141 Move X8, 0xB07000
	142 Move X8, [X8+2304]
	143 Move X1, X20
	144 Move X20, [X31+64]
	145 Move X19, [X31+72]
	146 Move X22, [X31+48]
	147 Move X21, [X31+56]
	148 Move X0, [X8]
	149 Move X24, [X31+32]
	150 Move X23, [X31+40]
	151 Move X26, [X31+16]
	152 Move X25, [X31+24]
	153 Move X2, X31
	154 Move X30, [X31+80]
	155 Call String.Concat, X0, X1
	156 Return X0
	157 Move X0, X20
	158 Move X20, [X31+64]
	159 Move X19, [X31+72]
	160 Move X22, [X31+48]
	161 Move X21, [X31+56]
	162 Move X24, [X31+32]
	163 Move X23, [X31+40]
	164 Move X26, [X31+16]
	165 Move X25, [X31+24]
	166 Move X30, [X31+80]
	167 Return X0
	168 Move X0, X20
	169 Move X20, [X31+64]
	170 Move X19, [X31+72]
	171 Move X22, [X31+48]
	172 Move X21, [X31+56]
	173 Move X24, [X31+32]
	174 Move X23, [X31+40]
	175 Move X26, [X31+16]
	176 Move X25, [X31+24]
	177 Move W1, 1
	178 Move X2, X31
	179 Move X30, [X31+80]
	180 Call String.Substring, X0, X1
	181 Return X0
	182 Call 0x1C17F28
	183 Call 0x1C17F20

Method: System.Void .cctor()

Disassembly:
	0x036373A0 ADRP X23, 0xB05000
	0x036373A4 ADRP X24, 0xB05000
	0x036373A8 ADRP X22, 0xB04000
	0x036373AC ADRP X29, 0xB04000
	0x036373B0 ADRP X27, 0xB04000
	0x036373B4 ADRP X28, 0xB04000
	0x036373B8 ADRP X26, 0xB04000
	0x036373BC LDR X23, [X23 + 0x198]
	0x036373C0 LDR X24, [X24 + 0xA0]
	0x036373C4 LDR X22, [X22 + 0xB88]
	0x036373C8 LDR X29, [X29 + 0xC38]
	0x036373CC LDR X27, [X27 + 0xD88]
	0x036373D0 LDR X28, [X28 + 0xF70]
	0x036373D4 LDR X26, [X26 + 0xE68]
	0x036373D8 LDR X1, [X8]
	0x036373DC LDR X2, [X9]
	0x036373E0 LDR X3, [X20]
	0x036373E4 ADRP X21, 0xABC000
	0x036373E8 LDR X21, [X21 + 0xAC8]
	0x036373EC MOV X0, X19
	0x036373F0 BL 0x2AA5098
	0x036373F4 LDR X1, [X23]
	0x036373F8 LDR X2, [X24]
	0x036373FC LDR X3, [X20]
	0x03637400 MOV X0, X19
	0x03637404 BL 0x2AA5098
	0x03637408 LDR X1, [X22]
	0x0363740C LDR X2, [X29]
	0x03637410 LDR X3, [X20]
	0x03637414 MOV X0, X19
	0x03637418 BL 0x2AA5098
	0x0363741C LDR X1, [X27]
	0x03637420 LDR X2, [X28]
	0x03637424 LDR X3, [X20]
	0x03637428 MOV X0, X19
	0x0363742C BL 0x2AA5098
	0x03637430 ADRP X8, 0xB04000
	0x03637434 LDR X8, [X8 + 0xD20]
	0x03637438 LDR X2, [X26]
	0x0363743C LDR X3, [X20]
	0x03637440 MOV X0, X19
	0x03637444 LDR X1, [X8]
	0x03637448 BL 0x2AA5098
	0x0363744C ADRP X8, 0xB02000
	0x03637450 LDR X8, [X8 + 0xDC0]
	0x03637454 MOV X0, X19
	0x03637458 LDR X1, [X8]
	0x0363745C ADRP X8, 0xB04000
	0x03637460 LDR X8, [X8 + 0xFB8]
	0x03637464 LDR X3, [X20]
	0x03637468 LDR X2, [X8]
	0x0363746C BL 0x2AA5098
	0x03637470 ADRP X8, 0xB04000
	0x03637474 LDR X8, [X8 + 0x8F0]
	0x03637478 MOV X0, X19
	0x0363747C LDR X1, [X8]
	0x03637480 ADRP X8, 0xB04000
	0x03637484 LDR X8, [X8 + 0xFB0]
	0x03637488 LDR X3, [X20]
	0x0363748C LDR X2, [X8]
	0x03637490 BL 0x2AA5098
	0x03637494 ADRP X8, 0xB04000
	0x03637498 LDR X8, [X8 + 0xD48]
	0x0363749C MOV X0, X19
	0x036374A0 LDR X1, [X8]
	0x036374A4 ADRP X8, 0xB04000
	0x036374A8 LDR X8, [X8 + 0xD40]
	0x036374AC LDR X3, [X20]
	0x036374B0 LDR X2, [X8]
	0x036374B4 BL 0x2AA5098
	0x036374B8 ADRP X8, 0xB04000
	0x036374BC LDR X8, [X8 + 0xD80]
	0x036374C0 MOV X0, X19
	0x036374C4 LDR X1, [X8]
	0x036374C8 ADRP X8, 0xB04000
	0x036374CC LDR X8, [X8 + 0xE48]
	0x036374D0 LDR X3, [X20]
	0x036374D4 LDR X2, [X8]
	0x036374D8 BL 0x2AA5098
	0x036374DC ADRP X8, 0xB04000
	0x036374E0 LDR X8, [X8 + 0x8E8]
	0x036374E4 MOV X0, X19
	0x036374E8 LDR X1, [X8]
	0x036374EC ADRP X8, 0xB04000
	0x036374F0 LDR X8, [X8 + 0xE10]
	0x036374F4 LDR X3, [X20]
	0x036374F8 LDR X2, [X8]
	0x036374FC BL 0x2AA5098
	0x03637500 ADRP X8, 0xB04000
	0x03637504 LDR X8, [X8 + 0x8F8]
	0x03637508 MOV X0, X19
	0x0363750C LDR X1, [X8]
	0x03637510 ADRP X8, 0xB04000
	0x03637514 LDR X8, [X8 + 0xA50]
	0x03637518 LDR X3, [X20]
	0x0363751C LDR X2, [X8]
	0x03637520 BL 0x2AA5098
	0x03637524 ADRP X8, 0xB02000
	0x03637528 LDR X8, [X8 + 0xC20]
	0x0363752C MOV X0, X19
	0x03637530 LDR X1, [X8]
	0x03637534 ADRP X8, 0xB04000
	0x03637538 LDR X8, [X8 + 0xC28]
	0x0363753C LDR X3, [X20]
	0x03637540 LDR X2, [X8]
	0x03637544 BL 0x2AA5098
	0x03637548 ADRP X8, 0xB04000
	0x0363754C LDR X1, [X25]
	0x03637550 LDR X8, [X8 + 0xDA8]
	0x03637554 LDR X3, [X20]
	0x03637558 MOV X0, X19
	0x0363755C LDR X2, [X8]
	0x03637560 BL 0x2AA5098
	0x03637564 ADRP X8, 0xB05000
	0x03637568 LDR X8, [X8 + 0x1B8]
	0x0363756C MOV X0, X19
	0x03637570 LDR X1, [X8]
	0x03637574 ADRP X8, 0xB05000
	0x03637578 LDR X8, [X8 + 0x278]
	0x0363757C LDR X3, [X20]
	0x03637580 LDR X2, [X8]
	0x03637584 BL 0x2AA5098
	0x03637588 ADRP X8, 0xB04000
	0x0363758C LDR X8, [X8 + 0xAE0]
	0x03637590 MOV X0, X19
	0x03637594 LDR X1, [X8]
	0x03637598 ADRP X8, 0xB04000
	0x0363759C LDR X8, [X8 + 0xA08]
	0x036375A0 LDR X3, [X20]
	0x036375A4 LDR X2, [X8]
	0x036375A8 BL 0x2AA5098
	0x036375AC ADRP X8, 0xB04000
	0x036375B0 LDR X8, [X8 + 0xBA0]
	0x036375B4 MOV X0, X19
	0x036375B8 LDR X1, [X8]
	0x036375BC ADRP X8, 0xB04000
	0x036375C0 LDR X8, [X8 + 0xB08]
	0x036375C4 LDR X3, [X20]
	0x036375C8 LDR X2, [X8]
	0x036375CC BL 0x2AA5098
	0x036375D0 ADRP X8, 0xAED000
	0x036375D4 LDR X8, [X8 + 0x1E8]
	0x036375D8 MOV X0, X19
	0x036375DC LDR X1, [X8]
	0x036375E0 ADRP X8, 0xB05000
	0x036375E4 LDR X8, [X8 + 0x120]
	0x036375E8 LDR X3, [X20]
	0x036375EC LDR X2, [X8]
	0x036375F0 BL 0x2AA5098
	0x036375F4 ADRP X8, 0xB04000
	0x036375F8 LDR X8, [X8 + 0x950]
	0x036375FC MOV X0, X19
	0x03637600 LDR X1, [X8]
	0x03637604 ADRP X8, 0xAE8000
	0x03637608 LDR X8, [X8 + 0xB8]
	0x0363760C LDR X3, [X20]
	0x03637610 LDR X2, [X8]
	0x03637614 BL 0x2AA5098
	0x03637618 ADRP X8, 0xB04000
	0x0363761C LDR X8, [X8 + 0xA70]
	0x03637620 MOV X0, X19
	0x03637624 LDR X1, [X8]
	0x03637628 ADRP X8, 0xABD000
	0x0363762C LDR X8, [X8 + 0xFE0]
	0x03637630 LDR X3, [X20]
	0x03637634 LDR X2, [X8]
	0x03637638 BL 0x2AA5098
	0x0363763C ADRP X8, 0xB05000
	0x03637640 LDR X8, [X8 + 0x210]
	0x03637644 MOV X0, X19
	0x03637648 LDR X1, [X8]
	0x0363764C ADRP X8, 0xB04000
	0x03637650 LDR X8, [X8 + 0xC10]
	0x03637654 LDR X3, [X20]
	0x03637658 LDR X2, [X8]
	0x0363765C BL 0x2AA5098
	0x03637660 ADRP X8, 0xAC7000
	0x03637664 LDR X8, [X8 + 0x358]
	0x03637668 MOV X0, X19
	0x0363766C LDR X1, [X8]
	0x03637670 ADRP X8, 0xB05000
	0x03637674 LDR X8, [X8 + 0x240]
	0x03637678 LDR X3, [X20]
	0x0363767C LDR X2, [X8]
	0x03637680 BL 0x2AA5098
	0x03637684 ADRP X8, 0xB04000
	0x03637688 LDR X8, [X8 + 0xBD0]
	0x0363768C MOV X0, X19
	0x03637690 LDR X1, [X8]
	0x03637694 ADRP X8, 0xB04000
	0x03637698 LDR X8, [X8 + 0xC00]
	0x0363769C LDR X3, [X20]
	0x036376A0 LDR X2, [X8]
	0x036376A4 BL 0x2AA5098
	0x036376A8 ADRP X8, 0xB05000
	0x036376AC LDR X8, [X8 + 0x230]
	0x036376B0 MOV X0, X19
	0x036376B4 LDR X1, [X8]
	0x036376B8 ADRP X8, 0xB04000
	0x036376BC LDR X8, [X8 + 0xF90]
	0x036376C0 LDR X3, [X20]
	0x036376C4 LDR X2, [X8]
	0x036376C8 BL 0x2AA5098
	0x036376CC ADRP X8, 0xB04000
	0x036376D0 LDR X8, [X8 + 0xE90]
	0x036376D4 MOV X0, X19
	0x036376D8 LDR X1, [X8]
	0x036376DC ADRP X8, 0xB04000
	0x036376E0 LDR X8, [X8 + 0xFC0]
	0x036376E4 LDR X3, [X20]
	0x036376E8 LDR X2, [X8]
	0x036376EC BL 0x2AA5098
	0x036376F0 ADRP X8, 0xB04000
	0x036376F4 LDR X8, [X8 + 0xEC0]
	0x036376F8 MOV X0, X19
	0x036376FC LDR X1, [X8]
	0x03637700 ADRP X8, 0xB05000
	0x03637704 LDR X8, [X8 + 0x110]
	0x03637708 LDR X3, [X20]
	0x0363770C LDR X2, [X8]
	0x03637710 BL 0x2AA5098
	0x03637714 ADRP X8, 0xB04000
	0x03637718 LDR X8, [X8 + 0xAE8]
	0x0363771C MOV X0, X19
	0x03637720 LDR X1, [X8]
	0x03637724 ADRP X8, 0xB05000
	0x03637728 LDR X8, [X8 + 0xC8]
	0x0363772C LDR X3, [X20]
	0x03637730 LDR X2, [X8]
	0x03637734 BL 0x2AA5098
	0x03637738 ADRP X8, 0xB04000
	0x0363773C LDR X8, [X8 + 0xBC8]
	0x03637740 MOV X0, X19
	0x03637744 LDR X1, [X8]
	0x03637748 ADRP X8, 0xB05000
	0x0363774C LDR X8, [X8 + 0xE8]
	0x03637750 LDR X3, [X20]
	0x03637754 LDR X2, [X8]
	0x03637758 BL 0x2AA5098
	0x0363775C ADRP X8, 0xB05000
	0x03637760 LDR X8, [X8 + 0x78]
	0x03637764 MOV X0, X19
	0x03637768 LDR X1, [X8]
	0x0363776C ADRP X8, 0xB04000
	0x03637770 LDR X8, [X8 + 0xAB0]
	0x03637774 LDR X3, [X20]
	0x03637778 LDR X2, [X8]
	0x0363777C BL 0x2AA5098
	0x03637780 ADRP X8, 0xAEB000
	0x03637784 LDR X8, [X8 + 0xFB0]
	0x03637788 MOV X0, X19
	0x0363778C LDR X1, [X8]
	0x03637790 ADRP X8, 0xB04000
	0x03637794 LDR X8, [X8 + 0xDF0]
	0x03637798 LDR X3, [X20]
	0x0363779C LDR X2, [X8]
	0x036377A0 BL 0x2AA5098
	0x036377A4 ADRP X8, 0xB04000
	0x036377A8 LDR X8, [X8 + 0xEF8]
	0x036377AC MOV X0, X19
	0x036377B0 LDR X1, [X8]
	0x036377B4 ADRP X8, 0xB05000
	0x036377B8 LDR X8, [X8 + 0x148]
	0x036377BC LDR X3, [X20]
	0x036377C0 LDR X2, [X8]
	0x036377C4 BL 0x2AA5098
	0x036377C8 ADRP X8, 0xB05000
	0x036377CC LDR X8, [X8 + 0x158]
	0x036377D0 MOV X0, X19
	0x036377D4 LDR X1, [X8]
	0x036377D8 ADRP X8, 0xB04000
	0x036377DC LDR X8, [X8 + 0xFC8]
	0x036377E0 LDR X3, [X20]
	0x036377E4 LDR X2, [X8]
	0x036377E8 BL 0x2AA5098
	0x036377EC ADRP X8, 0xB04000
	0x036377F0 LDR X8, [X8 + 0xDD0]
	0x036377F4 MOV X0, X19
	0x036377F8 LDR X1, [X8]
	0x036377FC ADRP X8, 0xB05000
	0x03637800 LDR X8, [X8 + 0xD0]
	0x03637804 LDR X3, [X20]
	0x03637808 LDR X2, [X8]
	0x0363780C BL 0x2AA5098
	0x03637810 ADRP X8, 0xB04000
	0x03637814 LDR X8, [X8 + 0xDE0]
	0x03637818 MOV X0, X19
	0x0363781C LDR X1, [X8]
	0x03637820 ADRP X8, 0xB04000
	0x03637824 LDR X8, [X8 + 0xCB0]
	0x03637828 LDR X3, [X20]
	0x0363782C LDR X2, [X8]
	0x03637830 BL 0x2AA5098
	0x03637834 ADRP X8, 0xAED000
	0x03637838 LDR X8, [X8 + 0x1D0]
	0x0363783C MOV X0, X19
	0x03637840 LDR X1, [X8]
	0x03637844 ADRP X8, 0xB04000
	0x03637848 LDR X8, [X8 + 0xAC8]
	0x0363784C LDR X3, [X20]
	0x03637850 LDR X2, [X8]
	0x03637854 BL 0x2AA5098
	0x03637858 ADRP X8, 0xB04000
	0x0363785C LDR X8, [X8 + 0xA38]
	0x03637860 MOV X0, X19
	0x03637864 LDR X1, [X8]
	0x03637868 ADRP X8, 0xB05000
	0x0363786C LDR X8, [X8 + 0x1A8]
	0x03637870 LDR X3, [X20]
	0x03637874 LDR X2, [X8]
	0x03637878 BL 0x2AA5098
	0x0363787C ADRP X8, 0xB04000
	0x03637880 LDR X8, [X8 + 0xD08]
	0x03637884 MOV X0, X19
	0x03637888 LDR X1, [X8]
	0x0363788C ADRP X8, 0xB05000
	0x03637890 LDR X8, [X8 + 0x58]
	0x03637894 LDR X3, [X20]
	0x03637898 LDR X2, [X8]
	0x0363789C BL 0x2AA5098
	0x036378A0 ADRP X8, 0xB05000
	0x036378A4 LDR X8, [X8 + 0x130]
	0x036378A8 MOV X0, X19
	0x036378AC LDR X1, [X8]
	0x036378B0 ADRP X8, 0xB05000
	0x036378B4 LDR X8, [X8 + 0x1C0]
	0x036378B8 LDR X3, [X20]
	0x036378BC LDR X2, [X8]
	0x036378C0 BL 0x2AA5098
	0x036378C4 ADRP X8, 0xAF1000
	0x036378C8 LDR X8, [X8 + 0x440]
	0x036378CC MOV X0, X19
	0x036378D0 LDR X1, [X8]
	0x036378D4 ADRP X8, 0xB04000
	0x036378D8 LDR X8, [X8 + 0xC70]
	0x036378DC LDR X3, [X20]
	0x036378E0 LDR X2, [X8]
	0x036378E4 BL 0x2AA5098
	0x036378E8 ADRP X23, 0xB04000
	0x036378EC LDR X23, [X23 + 0x8E0]
	0x036378F0 MOVZ W1, 0x70
	0x036378F4 LDR X8, [X23]
	0x036378F8 LDR X8, [X8 + 0xB8]
	0x036378FC STR X19, [X8 + 0x58]
	0x03637900 ADRP X8, 0xAC9000
	0x03637904 LDR X8, [X8 + 0xE30]
	0x03637908 LDR X0, [X8]
	0x0363790C BL 0x1C16D6C
	0x03637910 LDR X8, [X21]
	0x03637914 MOV X19, X0
	0x03637918 MOVZ W1, 0x2
	0x0363791C MOV X0, X8
	0x03637920 BL 0x1C16D6C
	0x03637924 CBZ X0, 0x363B470
	0x03637928 LDR W8, [X0 + 0x18]
	0x0363792C CBZ W8, 0x363B46C
	0x03637930 ADRP X9, 0xB04000
	0x03637934 LDR X9, [X9 + 0xAB8]
	0x03637938 CMP W8, 0x1
	0x0363793C LDR X9, [X9]
	0x03637940 STR X9, [X0 + 0x20]
	0x03637944 B.EQ 0x363B46C
	0x03637948 ADRP X8, 0xB04000
	0x0363794C LDR X8, [X8 + 0xC60]
	0x03637950 LDR X8, [X8]
	0x03637954 STR X8, [X0 + 0x28]
	0x03637958 CBZ X19, 0x363B470
	0x0363795C MOV X22, X19
	0x03637960 LDR W8, [X22 + 0x18]!
	0x03637964 CBZ W8, 0x363B46C
	0x03637968 STR X0, [X19 + 0x20]
	0x0363796C LDR X0, [X21]
	0x03637970 MOVZ W1, 0x2
	0x03637974 BL 0x1C16D6C
	0x03637978 CBZ X0, 0x363B470
	0x0363797C LDR W8, [X0 + 0x18]
	0x03637980 CBZ W8, 0x363B46C
	0x03637984 ADRP X9, 0xB05000
	0x03637988 LDR X9, [X9 + 0x1C8]
	0x0363798C CMP W8, 0x1
	0x03637990 LDR X9, [X9]
	0x03637994 STR X9, [X0 + 0x20]
	0x03637998 B.EQ 0x363B46C
	0x0363799C ADRP X8, 0xB05000
	0x036379A0 LDR X8, [X8]
	0x036379A4 LDR X8, [X8]
	0x036379A8 STR X8, [X0 + 0x28]
	0x036379AC LDR W8, [X22]
	0x036379B0 CMP W8, 0x1
	0x036379B4 B.LS 0x363B46C
	0x036379B8 STR X0, [X19 + 0x28]
	0x036379BC LDR X0, [X21]
	0x036379C0 MOVZ W1, 0x2
	0x036379C4 BL 0x1C16D6C
	0x036379C8 CBZ X0, 0x363B470
	0x036379CC LDR W8, [X0 + 0x18]
	0x036379D0 CBZ W8, 0x363B46C
	0x036379D4 ADRP X9, 0xB04000
	0x036379D8 LDR X9, [X9 + 0xD68]
	0x036379DC CMP W8, 0x1
	0x036379E0 LDR X9, [X9]
	0x036379E4 STR X9, [X0 + 0x20]
	0x036379E8 B.EQ 0x363B46C
	0x036379EC ADRP X8, 0xB04000
	0x036379F0 LDR X8, [X8 + 0xE30]
	0x036379F4 LDR X8, [X8]
	0x036379F8 STR X8, [X0 + 0x28]
	0x036379FC LDR W8, [X22]
	0x03637A00 CMP W8, 0x2
	0x03637A04 B.LS 0x363B46C
	0x03637A08 STR X0, [X19 + 0x30]
	0x03637A0C LDR X0, [X21]
	0x03637A10 MOVZ W1, 0x2
	0x03637A14 BL 0x1C16D6C
	0x03637A18 CBZ X0, 0x363B470
	0x03637A1C LDR W8, [X0 + 0x18]
	0x03637A20 CBZ W8, 0x363B46C
	0x03637A24 ADRP X9, 0xB04000
	0x03637A28 LDR X9, [X9 + 0xE78]
	0x03637A2C CMP W8, 0x1
	0x03637A30 LDR X9, [X9]
	0x03637A34 STR X9, [X0 + 0x20]
	0x03637A38 B.EQ 0x363B46C
	0x03637A3C ADRP X8, 0xB05000
	0x03637A40 LDR X8, [X8 + 0x1E8]
	0x03637A44 LDR X8, [X8]
	0x03637A48 STR X8, [X0 + 0x28]
	0x03637A4C LDR W8, [X22]
	0x03637A50 CMP W8, 0x3
	0x03637A54 B.LS 0x363B46C
	0x03637A58 STR X0, [X19 + 0x38]
	0x03637A5C LDR X0, [X21]
	0x03637A60 MOVZ W1, 0x2
	0x03637A64 BL 0x1C16D6C
	0x03637A68 CBZ X0, 0x363B470
	0x03637A6C LDR W8, [X0 + 0x18]
	0x03637A70 CBZ W8, 0x363B46C
	0x03637A74 ADRP X9, 0xB05000
	0x03637A78 LDR X9, [X9 + 0x208]
	0x03637A7C CMP W8, 0x1
	0x03637A80 LDR X9, [X9]
	0x03637A84 STR X9, [X0 + 0x20]
	0x03637A88 B.EQ 0x363B46C
	0x03637A8C ADRP X8, 0xB04000
	0x03637A90 LDR X8, [X8 + 0xDB0]
	0x03637A94 LDR X8, [X8]
	0x03637A98 STR X8, [X0 + 0x28]
	0x03637A9C LDR W8, [X22]
	0x03637AA0 CMP W8, 0x4
	0x03637AA4 B.LS 0x363B46C
	0x03637AA8 STR X0, [X19 + 0x40]
	0x03637AAC LDR X0, [X21]
	0x03637AB0 MOVZ W1, 0x2
	0x03637AB4 BL 0x1C16D6C
	0x03637AB8 CBZ X0, 0x363B470
	0x03637ABC LDR W8, [X0 + 0x18]
	0x03637AC0 CBZ W8, 0x363B46C
	0x03637AC4 ADRP X9, 0xB05000
	0x03637AC8 LDR X9, [X9 + 0x228]
	0x03637ACC CMP W8, 0x1
	0x03637AD0 LDR X9, [X9]
	0x03637AD4 STR X9, [X0 + 0x20]
	0x03637AD8 B.EQ 0x363B46C
	0x03637ADC ADRP X8, 0xB04000
	0x03637AE0 LDR X8, [X8 + 0xF88]
	0x03637AE4 LDR X8, [X8]
	0x03637AE8 STR X8, [X0 + 0x28]
	0x03637AEC LDR W8, [X22]
	0x03637AF0 CMP W8, 0x5
	0x03637AF4 B.LS 0x363B46C
	0x03637AF8 STR X0, [X19 + 0x48]
	0x03637AFC LDR X0, [X21]
	0x03637B00 MOVZ W1, 0x2
	0x03637B04 BL 0x1C16D6C
	0x03637B08 CBZ X0, 0x363B470
	0x03637B0C LDR W8, [X0 + 0x18]
	0x03637B10 CBZ W8, 0x363B46C
	0x03637B14 ADRP X9, 0xB05000
	0x03637B18 LDR X9, [X9 + 0x160]
	0x03637B1C CMP W8, 0x1
	0x03637B20 LDR X9, [X9]
	0x03637B24 STR X9, [X0 + 0x20]
	0x03637B28 B.EQ 0x363B46C
	0x03637B2C ADRP X8, 0xB04000
	0x03637B30 LDR X8, [X8 + 0xE08]
	0x03637B34 LDR X8, [X8]
	0x03637B38 STR X8, [X0 + 0x28]
	0x03637B3C LDR W8, [X22]
	0x03637B40 CMP W8, 0x6
	0x03637B44 B.LS 0x363B46C
	0x03637B48 STR X0, [X19 + 0x50]
	0x03637B4C LDR X0, [X21]
	0x03637B50 MOVZ W1, 0x2
	0x03637B54 BL 0x1C16D6C
	0x03637B58 CBZ X0, 0x363B470
	0x03637B5C LDR W8, [X0 + 0x18]
	0x03637B60 CBZ W8, 0x363B46C
	0x03637B64 ADRP X9, 0xB04000
	0x03637B68 LDR X9, [X9 + 0xA58]
	0x03637B6C CMP W8, 0x1
	0x03637B70 LDR X9, [X9]
	0x03637B74 STR X9, [X0 + 0x20]
	0x03637B78 B.EQ 0x363B46C
	0x03637B7C ADRP X8, 0xB04000
	0x03637B80 LDR X8, [X8 + 0xBB0]
	0x03637B84 LDR X8, [X8]
	0x03637B88 STR X8, [X0 + 0x28]
	0x03637B8C LDR W8, [X22]
	0x03637B90 CMP W8, 0x7
	0x03637B94 B.LS 0x363B46C
	0x03637B98 STR X0, [X19 + 0x58]
	0x03637B9C LDR X0, [X21]
	0x03637BA0 MOVZ W1, 0x2
	0x03637BA4 BL 0x1C16D6C
	0x03637BA8 CBZ X0, 0x363B470
	0x03637BAC LDR W8, [X0 + 0x18]
	0x03637BB0 CBZ W8, 0x363B46C
	0x03637BB4 ADRP X9, 0xB04000
	0x03637BB8 LDR X9, [X9 + 0xB00]
	0x03637BBC CMP W8, 0x1
	0x03637BC0 LDR X9, [X9]
	0x03637BC4 STR X9, [X0 + 0x20]
	0x03637BC8 B.EQ 0x363B46C
	0x03637BCC ADRP X8, 0xB04000
	0x03637BD0 LDR X8, [X8 + 0xAA8]
	0x03637BD4 LDR X8, [X8]
	0x03637BD8 STR X8, [X0 + 0x28]
	0x03637BDC LDR W8, [X22]
	0x03637BE0 CMP W8, 0x8
	0x03637BE4 B.LS 0x363B46C
	0x03637BE8 STR X0, [X19 + 0x60]
	0x03637BEC LDR X0, [X21]
	0x03637BF0 MOVZ W1, 0x2
	0x03637BF4 BL 0x1C16D6C
	0x03637BF8 CBZ X0, 0x363B470
	0x03637BFC LDR W8, [X0 + 0x18]
	0x03637C00 CBZ W8, 0x363B46C
	0x03637C04 ADRP X9, 0xB04000
	0x03637C08 LDR X9, [X9 + 0xEE0]
	0x03637C0C CMP W8, 0x1
	0x03637C10 LDR X9, [X9]
	0x03637C14 STR X9, [X0 + 0x20]
	0x03637C18 B.EQ 0x363B46C
	0x03637C1C ADRP X8, 0xB04000
	0x03637C20 LDR X8, [X8 + 0xDA0]
	0x03637C24 LDR X8, [X8]
	0x03637C28 STR X8, [X0 + 0x28]
	0x03637C2C LDR W8, [X22]
	0x03637C30 CMP W8, 0x9
	0x03637C34 B.LS 0x363B46C
	0x03637C38 STR X0, [X19 + 0x68]
	0x03637C3C LDR X0, [X21]
	0x03637C40 MOVZ W1, 0x2
	0x03637C44 BL 0x1C16D6C
	0x03637C48 CBZ X0, 0x363B470
	0x03637C4C LDR W8, [X0 + 0x18]
	0x03637C50 CBZ W8, 0x363B46C
	0x03637C54 ADRP X9, 0xB04000
	0x03637C58 LDR X9, [X9 + 0xB40]
	0x03637C5C CMP W8, 0x1
	0x03637C60 LDR X9, [X9]
	0x03637C64 STR X9, [X0 + 0x20]
	0x03637C68 B.EQ 0x363B46C
	0x03637C6C ADRP X8, 0xB04000
	0x03637C70 LDR X8, [X8 + 0xE18]
	0x03637C74 LDR X8, [X8]
	0x03637C78 STR X8, [X0 + 0x28]
	0x03637C7C LDR W8, [X22]
	0x03637C80 CMP W8, 0xA
	0x03637C84 B.LS 0x363B46C
	0x03637C88 STR X0, [X19 + 0x70]
	0x03637C8C LDR X0, [X21]
	0x03637C90 MOVZ W1, 0x2
	0x03637C94 BL 0x1C16D6C
	0x03637C98 CBZ X0, 0x363B470
	0x03637C9C LDR W8, [X0 + 0x18]
	0x03637CA0 CBZ W8, 0x363B46C
	0x03637CA4 ADRP X9, 0xB04000
	0x03637CA8 LDR X9, [X9 + 0xB90]
	0x03637CAC CMP W8, 0x1
	0x03637CB0 LDR X9, [X9]
	0x03637CB4 STR X9, [X0 + 0x20]
	0x03637CB8 B.EQ 0x363B46C
	0x03637CBC ADRP X8, 0xB05000
	0x03637CC0 LDR X8, [X8 + 0x178]
	0x03637CC4 LDR X8, [X8]
	0x03637CC8 STR X8, [X0 + 0x28]
	0x03637CCC LDR W8, [X22]
	0x03637CD0 CMP W8, 0xB
	0x03637CD4 B.LS 0x363B46C
	0x03637CD8 STR X0, [X19 + 0x78]
	0x03637CDC LDR X0, [X21]
	0x03637CE0 MOVZ W1, 0x2
	0x03637CE4 BL 0x1C16D6C
	0x03637CE8 CBZ X0, 0x363B470
	0x03637CEC LDR W8, [X0 + 0x18]
	0x03637CF0 CBZ W8, 0x363B46C
	0x03637CF4 ADRP X9, 0xB04000
	0x03637CF8 LDR X9, [X9 + 0xB18]
	0x03637CFC CMP W8, 0x1
	0x03637D00 LDR X9, [X9]
	0x03637D04 STR X9, [X0 + 0x20]
	0x03637D08 B.EQ 0x363B46C
	0x03637D0C ADRP X8, 0xB04000
	0x03637D10 LDR X8, [X8 + 0xCC0]
	0x03637D14 LDR X8, [X8]
	0x03637D18 STR X8, [X0 + 0x28]
	0x03637D1C LDR W8, [X22]
	0x03637D20 CMP W8, 0xC
	0x03637D24 B.LS 0x363B46C
	0x03637D28 STR X0, [X19 + 0x80]
	0x03637D2C LDR X0, [X21]
	0x03637D30 MOVZ W1, 0x2
	0x03637D34 BL 0x1C16D6C
	0x03637D38 CBZ X0, 0x363B470
	0x03637D3C LDR W8, [X0 + 0x18]
	0x03637D40 CBZ W8, 0x363B46C
	0x03637D44 ADRP X9, 0xB04000
	0x03637D48 LDR X9, [X9 + 0xB20]
	0x03637D4C CMP W8, 0x1
	0x03637D50 LDR X9, [X9]
	0x03637D54 STR X9, [X0 + 0x20]
	0x03637D58 B.EQ 0x363B46C
	0x03637D5C ADRP X8, 0xB05000
	0x03637D60 LDR X8, [X8 + 0xA8]
	0x03637D64 LDR X8, [X8]
	0x03637D68 STR X8, [X0 + 0x28]
	0x03637D6C LDR W8, [X22]
	0x03637D70 CMP W8, 0xD
	0x03637D74 B.LS 0x363B46C
	0x03637D78 STR X0, [X19 + 0x88]
	0x03637D7C LDR X0, [X21]
	0x03637D80 MOVZ W1, 0x2
	0x03637D84 BL 0x1C16D6C
	0x03637D88 CBZ X0, 0x363B470
	0x03637D8C LDR W8, [X0 + 0x18]
	0x03637D90 CBZ W8, 0x363B46C
	0x03637D94 ADRP X9, 0xB05000
	0x03637D98 LDR X9, [X9 + 0x218]
	0x03637D9C CMP W8, 0x1
	0x03637DA0 LDR X9, [X9]
	0x03637DA4 STR X9, [X0 + 0x20]
	0x03637DA8 B.EQ 0x363B46C
	0x03637DAC ADRP X8, 0xB04000
	0x03637DB0 LDR X8, [X8 + 0xCA8]
	0x03637DB4 LDR X8, [X8]
	0x03637DB8 STR X8, [X0 + 0x28]
	0x03637DBC LDR W8, [X22]
	0x03637DC0 CMP W8, 0xE
	0x03637DC4 B.LS 0x363B46C
	0x03637DC8 STR X0, [X19 + 0x90]
	0x03637DCC LDR X0, [X21]
	0x03637DD0 MOVZ W1, 0x2
	0x03637DD4 BL 0x1C16D6C
	0x03637DD8 CBZ X0, 0x363B470
	0x03637DDC LDR W8, [X0 + 0x18]
	0x03637DE0 CBZ W8, 0x363B46C
	0x03637DE4 ADRP X9, 0xB04000
	0x03637DE8 LDR X9, [X9 + 0xA78]
	0x03637DEC CMP W8, 0x1
	0x03637DF0 LDR X9, [X9]
	0x03637DF4 STR X9, [X0 + 0x20]
	0x03637DF8 B.EQ 0x363B46C
	0x03637DFC ADRP X8, 0xB05000
	0x03637E00 LDR X8, [X8 + 0x28]
	0x03637E04 LDR X8, [X8]
	0x03637E08 STR X8, [X0 + 0x28]
	0x03637E0C LDR W8, [X22]
	0x03637E10 CMP W8, 0xF
	0x03637E14 B.LS 0x363B46C
	0x03637E18 STR X0, [X19 + 0x98]
	0x03637E1C LDR X0, [X21]
	0x03637E20 MOVZ W1, 0x2
	0x03637E24 BL 0x1C16D6C
	0x03637E28 CBZ X0, 0x363B470
	0x03637E2C LDR W8, [X0 + 0x18]
	0x03637E30 CBZ W8, 0x363B46C
	0x03637E34 ADRP X9, 0xB05000
	0x03637E38 LDR X9, [X9 + 0x30]
	0x03637E3C CMP W8, 0x1
	0x03637E40 LDR X9, [X9]
	0x03637E44 STR X9, [X0 + 0x20]
	0x03637E48 B.EQ 0x363B46C
	0x03637E4C ADRP X8, 0xB04000
	0x03637E50 LDR X8, [X8 + 0x9F0]
	0x03637E54 LDR X8, [X8]
	0x03637E58 STR X8, [X0 + 0x28]
	0x03637E5C LDR W8, [X22]
	0x03637E60 CMP W8, 0x10
	0x03637E64 B.LS 0x363B46C
	0x03637E68 STR X0, [X19 + 0xA0]
	0x03637E6C LDR X0, [X21]
	0x03637E70 MOVZ W1, 0x2
	0x03637E74 BL 0x1C16D6C
	0x03637E78 CBZ X0, 0x363B470
	0x03637E7C LDR W8, [X0 + 0x18]
	0x03637E80 CBZ W8, 0x363B46C
	0x03637E84 ADRP X9, 0xB04000
	0x03637E88 LDR X9, [X9 + 0xCF8]
	0x03637E8C CMP W8, 0x1
	0x03637E90 LDR X9, [X9]
	0x03637E94 STR X9, [X0 + 0x20]
	0x03637E98 B.EQ 0x363B46C
	0x03637E9C ADRP X8, 0xB04000
	0x03637EA0 LDR X8, [X8 + 0xDB8]
	0x03637EA4 LDR X8, [X8]
	0x03637EA8 STR X8, [X0 + 0x28]
	0x03637EAC LDR W8, [X22]
	0x03637EB0 CMP W8, 0x11
	0x03637EB4 B.LS 0x363B46C
	0x03637EB8 STR X0, [X19 + 0xA8]
	0x03637EBC LDR X0, [X21]
	0x03637EC0 MOVZ W1, 0x2
	0x03637EC4 BL 0x1C16D6C
	0x03637EC8 CBZ X0, 0x363B470
	0x03637ECC LDR W8, [X0 + 0x18]
	0x03637ED0 CBZ W8, 0x363B46C
	0x03637ED4 ADRP X9, 0xB05000
	0x03637ED8 LDR X9, [X9 + 0xB0]
	0x03637EDC CMP W8, 0x1
	0x03637EE0 LDR X9, [X9]
	0x03637EE4 STR X9, [X0 + 0x20]
	0x03637EE8 B.EQ 0x363B46C
	0x03637EEC ADRP X8, 0xB04000
	0x03637EF0 LDR X8, [X8 + 0xCD8]
	0x03637EF4 LDR X8, [X8]
	0x03637EF8 STR X8, [X0 + 0x28]
	0x03637EFC LDR W8, [X22]
	0x03637F00 CMP W8, 0x12
	0x03637F04 B.LS 0x363B46C
	0x03637F08 STR X0, [X19 + 0xB0]
	0x03637F0C LDR X0, [X21]
	0x03637F10 MOVZ W1, 0x2
	0x03637F14 BL 0x1C16D6C
	0x03637F18 CBZ X0, 0x363B470
	0x03637F1C LDR W8, [X0 + 0x18]
	0x03637F20 CBZ W8, 0x363B46C
	0x03637F24 ADRP X9, 0xB04000
	0x03637F28 LDR X9, [X9 + 0xCD0]
	0x03637F2C CMP W8, 0x1
	0x03637F30 LDR X9, [X9]
	0x03637F34 STR X9, [X0 + 0x20]
	0x03637F38 B.EQ 0x363B46C
	0x03637F3C ADRP X8, 0xB05000
	0x03637F40 LDR X8, [X8 + 0x18]
	0x03637F44 LDR X8, [X8]
	0x03637F48 STR X8, [X0 + 0x28]
	0x03637F4C LDR W8, [X22]
	0x03637F50 CMP W8, 0x13
	0x03637F54 B.LS 0x363B46C
	0x03637F58 STR X0, [X19 + 0xB8]
	0x03637F5C LDR X0, [X21]
	0x03637F60 MOVZ W1, 0x2
	0x03637F64 BL 0x1C16D6C
	0x03637F68 CBZ X0, 0x363B470
	0x03637F6C LDR W8, [X0 + 0x18]
	0x03637F70 CBZ W8, 0x363B46C
	0x03637F74 ADRP X9, 0xB05000
	0x03637F78 LDR X9, [X9 + 0x168]
	0x03637F7C CMP W8, 0x1
	0x03637F80 LDR X9, [X9]
	0x03637F84 STR X9, [X0 + 0x20]
	0x03637F88 B.EQ 0x363B46C
	0x03637F8C ADRP X8, 0xB04000
	0x03637F90 LDR X8, [X8 + 0xC18]
	0x03637F94 LDR X8, [X8]
	0x03637F98 STR X8, [X0 + 0x28]
	0x03637F9C LDR W8, [X22]
	0x03637FA0 CMP W8, 0x14
	0x03637FA4 B.LS 0x363B46C
	0x03637FA8 STR X0, [X19 + 0xC0]
	0x03637FAC LDR X0, [X21]
	0x03637FB0 MOVZ W1, 0x2
	0x03637FB4 BL 0x1C16D6C
	0x03637FB8 CBZ X0, 0x363B470
	0x03637FBC LDR W8, [X0 + 0x18]
	0x03637FC0 CBZ W8, 0x363B46C
	0x03637FC4 ADRP X9, 0xB04000
	0x03637FC8 LDR X9, [X9 + 0xF38]
	0x03637FCC CMP W8, 0x1
	0x03637FD0 LDR X9, [X9]
	0x03637FD4 STR X9, [X0 + 0x20]
	0x03637FD8 B.EQ 0x363B46C
	0x03637FDC ADRP X8, 0xB04000
	0x03637FE0 LDR X8, [X8 + 0x9E0]
	0x03637FE4 LDR X8, [X8]
	0x03637FE8 STR X8, [X0 + 0x28]
	0x03637FEC LDR W8, [X22]
	0x03637FF0 CMP W8, 0x15
	0x03637FF4 B.LS 0x363B46C
	0x03637FF8 STR X0, [X19 + 0xC8]
	0x03637FFC LDR X0, [X21]
	0x03638000 MOVZ W1, 0x2
	0x03638004 BL 0x1C16D6C
	0x03638008 CBZ X0, 0x363B470
	0x0363800C LDR W8, [X0 + 0x18]
	0x03638010 CBZ W8, 0x363B46C
	0x03638014 ADRP X9, 0xB03000
	0x03638018 LDR X9, [X9 + 0xC78]
	0x0363801C CMP W8, 0x1
	0x03638020 LDR X9, [X9]
	0x03638024 STR X9, [X0 + 0x20]
	0x03638028 B.EQ 0x363B46C
	0x0363802C ADRP X8, 0xB03000
	0x03638030 LDR X8, [X8 + 0xAA0]
	0x03638034 LDR X8, [X8]
	0x03638038 STR X8, [X0 + 0x28]
	0x0363803C LDR W8, [X22]
	0x03638040 CMP W8, 0x16
	0x03638044 B.LS 0x363B46C
	0x03638048 STR X0, [X19 + 0xD0]
	0x0363804C LDR X0, [X21]
	0x03638050 MOVZ W1, 0x2
	0x03638054 BL 0x1C16D6C
	0x03638058 CBZ X0, 0x363B470
	0x0363805C LDR W8, [X0 + 0x18]
	0x03638060 CBZ W8, 0x363B46C
	0x03638064 ADRP X9, 0xB04000
	0x03638068 LDR X9, [X9 + 0x1A0]
	0x0363806C CMP W8, 0x1
	0x03638070 LDR X9, [X9]
	0x03638074 STR X9, [X0 + 0x20]
	0x03638078 B.EQ 0x363B46C
	0x0363807C ADRP X20, 0xB04000
	0x03638080 LDR X20, [X20 + 0x68]
	0x03638084 LDR X8, [X20]
	0x03638088 STR X8, [X0 + 0x28]
	0x0363808C LDR W8, [X22]
	0x03638090 CMP W8, 0x17
	0x03638094 B.LS 0x363B46C
	0x03638098 STR X0, [X19 + 0xD8]
	0x0363809C LDR X0, [X21]
	0x036380A0 MOVZ W1, 0x2
	0x036380A4 BL 0x1C16D6C
	0x036380A8 CBZ X0, 0x363B470
	0x036380AC LDR W8, [X0 + 0x18]
	0x036380B0 CBZ W8, 0x363B46C
	0x036380B4 ADRP X9, 0xB03000
	0x036380B8 LDR X9, [X9 + 0xA30]
	0x036380BC CMP W8, 0x1
	0x036380C0 LDR X9, [X9]
	0x036380C4 STR X9, [X0 + 0x20]
	0x036380C8 B.EQ 0x363B46C
	0x036380CC ADRP X8, 0xB04000
	0x036380D0 LDR X8, [X8 + 0x128]
	0x036380D4 LDR X8, [X8]
	0x036380D8 STR X8, [X0 + 0x28]
	0x036380DC LDR W8, [X22]
	0x036380E0 CMP W8, 0x18
	0x036380E4 B.LS 0x363B46C
	0x036380E8 STR X0, [X19 + 0xE0]
	0x036380EC LDR X0, [X21]
	0x036380F0 MOVZ W1, 0x2
	0x036380F4 BL 0x1C16D6C
	0x036380F8 CBZ X0, 0x363B470
	0x036380FC LDR W8, [X0 + 0x18]
	0x03638100 CBZ W8, 0x363B46C
	0x03638104 ADRP X9, 0xB03000
	0x03638108 LDR X9, [X9 + 0xEB8]
	0x0363810C CMP W8, 0x1
	0x03638110 LDR X9, [X9]
	0x03638114 STR X9, [X0 + 0x20]
	0x03638118 B.EQ 0x363B46C
	0x0363811C LDR X8, [X20]
	0x03638120 STR X8, [X0 + 0x28]
	0x03638124 LDR W8, [X22]
	0x03638128 CMP W8, 0x19
	0x0363812C B.LS 0x363B46C
	0x03638130 STR X0, [X19 + 0xE8]
	0x03638134 LDR X0, [X21]
	0x03638138 MOVZ W1, 0x2
	0x0363813C BL 0x1C16D6C
	0x03638140 CBZ X0, 0x363B470
	0x03638144 LDR W8, [X0 + 0x18]
	0x03638148 CBZ W8, 0x363B46C
	0x0363814C ADRP X9, 0xB03000
	0x03638150 LDR X9, [X9 + 0xDC0]
	0x03638154 CMP W8, 0x1
	0x03638158 LDR X9, [X9]
	0x0363815C STR X9, [X0 + 0x20]
	0x03638160 B.EQ 0x363B46C
	0x03638164 ADRP X8, 0xB04000
	0x03638168 LDR X8, [X8 + 0xB8]
	0x0363816C LDR X8, [X8]
	0x03638170 STR X8, [X0 + 0x28]
	0x03638174 LDR W8, [X22]
	0x03638178 CMP W8, 0x1A
	0x0363817C B.LS 0x363B46C
	0x03638180 STR X0, [X19 + 0xF0]
	0x03638184 LDR X0, [X21]
	0x03638188 MOVZ W1, 0x2
	0x0363818C BL 0x1C16D6C
	0x03638190 CBZ X0, 0x363B470
	0x03638194 LDR W8, [X0 + 0x18]
	0x03638198 CBZ W8, 0x363B46C
	0x0363819C ADRP X9, 0xB03000
	0x036381A0 LDR X9, [X9 + 0xE88]
	0x036381A4 CMP W8, 0x1
	0x036381A8 LDR X9, [X9]
	0x036381AC STR X9, [X0 + 0x20]
	0x036381B0 B.EQ 0x363B46C
	0x036381B4 ADRP X8, 0xB03000
	0x036381B8 LDR X8, [X8 + 0xD38]
	0x036381BC LDR X8, [X8]
	0x036381C0 STR X8, [X0 + 0x28]
	0x036381C4 LDR W8, [X22]
	0x036381C8 CMP W8, 0x1B
	0x036381CC B.LS 0x363B46C
	0x036381D0 STR X0, [X19 + 0xF8]
	0x036381D4 LDR X0, [X21]
	0x036381D8 MOVZ W1, 0x2
	0x036381DC BL 0x1C16D6C
	0x036381E0 CBZ X0, 0x363B470
	0x036381E4 LDR W8, [X0 + 0x18]
	0x036381E8 CBZ W8, 0x363B46C
	0x036381EC ADRP X9, 0xB03000
	0x036381F0 LDR X9, [X9 + 0xAD0]
	0x036381F4 CMP W8, 0x1
	0x036381F8 LDR X9, [X9]
	0x036381FC STR X9, [X0 + 0x20]
	0x03638200 B.EQ 0x363B46C
	0x03638204 ADRP X8, 0xB03000
	0x03638208 LDR X8, [X8 + 0xAF8]
	0x0363820C LDR X8, [X8]
	0x03638210 STR X8, [X0 + 0x28]
	0x03638214 LDR W8, [X22]
	0x03638218 CMP W8, 0x1C
	0x0363821C B.LS 0x363B46C
	0x03638220 STR X0, [X19 + 0x100]
	0x03638224 LDR X0, [X21]
	0x03638228 MOVZ W1, 0x2
	0x0363822C BL 0x1C16D6C
	0x03638230 CBZ X0, 0x363B470
	0x03638234 LDR W8, [X0 + 0x18]
	0x03638238 CBZ W8, 0x363B46C
	0x0363823C ADRP X9, 0xB03000
	0x03638240 LDR X9, [X9 + 0xBC0]
	0x03638244 CMP W8, 0x1
	0x03638248 LDR X9, [X9]
	0x0363824C STR X9, [X0 + 0x20]
	0x03638250 B.EQ 0x363B46C
	0x03638254 ADRP X8, 0xB03000
	0x03638258 LDR X8, [X8 + 0xB58]
	0x0363825C LDR X8, [X8]
	0x03638260 STR X8, [X0 + 0x28]
	0x03638264 LDR W8, [X22]
	0x03638268 CMP W8, 0x1D
	0x0363826C B.LS 0x363B46C
	0x03638270 STR X0, [X19 + 0x108]
	0x03638274 LDR X0, [X21]
	0x03638278 MOVZ W1, 0x2
	0x0363827C BL 0x1C16D6C
	0x03638280 CBZ X0, 0x363B470
	0x03638284 LDR W8, [X0 + 0x18]
	0x03638288 CBZ W8, 0x363B46C
	0x0363828C ADRP X9, 0xB03000
	0x03638290 LDR X9, [X9 + 0xFA0]
	0x03638294 CMP W8, 0x1
	0x03638298 LDR X9, [X9]
	0x0363829C STR X9, [X0 + 0x20]
	0x036382A0 B.EQ 0x363B46C
	0x036382A4 ADRP X8, 0xB04000
	0x036382A8 LDR X8, [X8 + 0x1F8]
	0x036382AC LDR X8, [X8]
	0x036382B0 STR X8, [X0 + 0x28]
	0x036382B4 LDR W8, [X22]
	0x036382B8 CMP W8, 0x1E
	0x036382BC B.LS 0x363B46C
	0x036382C0 STR X0, [X19 + 0x110]
	0x036382C4 LDR X0, [X21]
	0x036382C8 MOVZ W1, 0x2
	0x036382CC BL 0x1C16D6C
	0x036382D0 CBZ X0, 0x363B470
	0x036382D4 LDR W8, [X0 + 0x18]
	0x036382D8 CBZ W8, 0x363B46C
	0x036382DC ADRP X9, 0xB03000
	0x036382E0 LDR X9, [X9 + 0xC68]
	0x036382E4 CMP W8, 0x1
	0x036382E8 LDR X9, [X9]
	0x036382EC STR X9, [X0 + 0x20]
	0x036382F0 B.EQ 0x363B46C
	0x036382F4 ADRP X8, 0xB04000
	0x036382F8 LDR X8, [X8 + 0x248]
	0x036382FC LDR X8, [X8]
	0x03638300 STR X8, [X0 + 0x28]
	0x03638304 LDR W8, [X22]
	0x03638308 CMP W8, 0x1F
	0x0363830C B.LS 0x363B46C
	0x03638310 STR X0, [X19 + 0x118]
	0x03638314 LDR X0, [X21]
	0x03638318 MOVZ W1, 0x2
	0x0363831C BL 0x1C16D6C
	0x03638320 CBZ X0, 0x363B470
	0x03638324 LDR W8, [X0 + 0x18]
	0x03638328 CBZ W8, 0x363B46C
	0x0363832C ADRP X9, 0xB03000
	0x03638330 LDR X9, [X9 + 0xB60]
	0x03638334 CMP W8, 0x1
	0x03638338 LDR X9, [X9]
	0x0363833C STR X9, [X0 + 0x20]
	0x03638340 B.EQ 0x363B46C
	0x03638344 ADRP X8, 0xB03000
	0x03638348 LDR X8, [X8 + 0xD00]
	0x0363834C LDR X8, [X8]
	0x03638350 STR X8, [X0 + 0x28]
	0x03638354 LDR W8, [X22]
	0x03638358 CMP W8, 0x20
	0x0363835C B.LS 0x363B46C
	0x03638360 STR X0, [X19 + 0x120]
	0x03638364 LDR X0, [X21]
	0x03638368 MOVZ W1, 0x2
	0x0363836C BL 0x1C16D6C
	0x03638370 CBZ X0, 0x363B470
	0x03638374 LDR W8, [X0 + 0x18]
	0x03638378 CBZ W8, 0x363B46C
	0x0363837C ADRP X9, 0xB04000
	0x03638380 LDR X9, [X9 + 0xE0]
	0x03638384 CMP W8, 0x1
	0x03638388 LDR X9, [X9]
	0x0363838C STR X9, [X0 + 0x20]
	0x03638390 B.EQ 0x363B46C
	0x03638394 ADRP X8, 0xB04000
	0x03638398 LDR X8, [X8 + 0x108]
	0x0363839C LDR X8, [X8]
	0x036383A0 STR X8, [X0 + 0x28]
	0x036383A4 LDR W8, [X22]
	0x036383A8 CMP W8, 0x21
	0x036383AC B.LS 0x363B46C
	0x036383B0 STR X0, [X19 + 0x128]
	0x036383B4 LDR X0, [X21]
	0x036383B8 MOVZ W1, 0x2
	0x036383BC BL 0x1C16D6C
	0x036383C0 CBZ X0, 0x363B470
	0x036383C4 LDR W8, [X0 + 0x18]
	0x036383C8 CBZ W8, 0x363B46C
	0x036383CC ADRP X9, 0xB03000
	0x036383D0 LDR X9, [X9 + 0xBE8]
	0x036383D4 CMP W8, 0x1
	0x036383D8 LDR X9, [X9]
	0x036383DC STR X9, [X0 + 0x20]
	0x036383E0 B.EQ 0x363B46C
	0x036383E4 ADRP X8, 0xB03000
	0x036383E8 LDR X8, [X8 + 0xEB0]
	0x036383EC LDR X8, [X8]
	0x036383F0 STR X8, [X0 + 0x28]
	0x036383F4 LDR W8, [X22]
	0x036383F8 CMP W8, 0x22
	0x036383FC B.LS 0x363B46C
	0x03638400 STR X0, [X19 + 0x130]
	0x03638404 LDR X0, [X21]
	0x03638408 MOVZ W1, 0x2
	0x0363840C BL 0x1C16D6C
	0x03638410 CBZ X0, 0x363B470
	0x03638414 LDR W8, [X0 + 0x18]
	0x03638418 CBZ W8, 0x363B46C
	0x0363841C ADRP X9, 0xB03000
	0x03638420 LDR X9, [X9 + 0xCC8]
	0x03638424 CMP W8, 0x1
	0x03638428 LDR X9, [X9]
	0x0363842C STR X9, [X0 + 0x20]
	0x03638430 B.EQ 0x363B46C
	0x03638434 ADRP X8, 0xB03000
	0x03638438 LDR X8, [X8 + 0xE28]
	0x0363843C LDR X8, [X8]
	0x03638440 STR X8, [X0 + 0x28]
	0x03638444 LDR W8, [X22]
	0x03638448 CMP W8, 0x23
	0x0363844C B.LS 0x363B46C
	0x03638450 STR X0, [X19 + 0x138]
	0x03638454 LDR X0, [X21]
	0x03638458 MOVZ W1, 0x2
	0x0363845C BL 0x1C16D6C
	0x03638460 CBZ X0, 0x363B470
	0x03638464 LDR W8, [X0 + 0x18]
	0x03638468 CBZ W8, 0x363B46C
	0x0363846C ADRP X9, 0xB03000
	0x03638470 LDR X9, [X9 + 0xD30]
	0x03638474 CMP W8, 0x1
	0x03638478 LDR X9, [X9]
	0x0363847C STR X9, [X0 + 0x20]
	0x03638480 B.EQ 0x363B46C
	0x03638484 ADRP X8, 0xB04000
	0x03638488 LDR X8, [X8 + 0x190]
	0x0363848C LDR X8, [X8]
	0x03638490 STR X8, [X0 + 0x28]
	0x03638494 LDR W8, [X22]
	0x03638498 CMP W8, 0x24
	0x0363849C B.LS 0x363B46C
	0x036384A0 STR X0, [X19 + 0x140]
	0x036384A4 LDR X0, [X21]
	0x036384A8 MOVZ W1, 0x2
	0x036384AC BL 0x1C16D6C
	0x036384B0 CBZ X0, 0x363B470
	0x036384B4 LDR W8, [X0 + 0x18]
	0x036384B8 CBZ W8, 0x363B46C
	0x036384BC ADRP X9, 0xB03000
	0x036384C0 LDR X9, [X9 + 0xCE8]
	0x036384C4 CMP W8, 0x1
	0x036384C8 LDR X9, [X9]
	0x036384CC STR X9, [X0 + 0x20]
	0x036384D0 B.EQ 0x363B46C
	0x036384D4 ADRP X8, 0xB03000
	0x036384D8 LDR X8, [X8 + 0xC08]
	0x036384DC LDR X8, [X8]
	0x036384E0 STR X8, [X0 + 0x28]
	0x036384E4 LDR W8, [X22]
	0x036384E8 CMP W8, 0x25
	0x036384EC B.LS 0x363B46C
	0x036384F0 STR X0, [X19 + 0x148]
	0x036384F4 LDR X0, [X21]
	0x036384F8 MOVZ W1, 0x2
	0x036384FC BL 0x1C16D6C
	0x03638500 CBZ X0, 0x363B470
	0x03638504 LDR W8, [X0 + 0x18]
	0x03638508 CBZ W8, 0x363B46C
	0x0363850C ADRP X9, 0xB03000
	0x03638510 LDR X9, [X9 + 0xAD8]
	0x03638514 CMP W8, 0x1
	0x03638518 LDR X9, [X9]
	0x0363851C STR X9, [X0 + 0x20]
	0x03638520 B.EQ 0x363B46C
	0x03638524 ADRP X20, 0xB03000
	0x03638528 LDR X20, [X20 + 0xC30]
	0x0363852C LDR X8, [X20]
	0x03638530 STR X8, [X0 + 0x28]
	0x03638534 LDR W8, [X22]
	0x03638538 CMP W8, 0x26
	0x0363853C B.LS 0x363B46C
	0x03638540 STR X0, [X19 + 0x150]
	0x03638544 LDR X0, [X21]
	0x03638548 MOVZ W1, 0x2
	0x0363854C BL 0x1C16D6C
	0x03638550 CBZ X0, 0x363B470
	0x03638554 LDR W8, [X0 + 0x18]
	0x03638558 CBZ W8, 0x363B46C
	0x0363855C ADRP X9, 0xB03000
	0x03638560 LDR X9, [X9 + 0xC50]
	0x03638564 CMP W8, 0x1
	0x03638568 LDR X9, [X9]
	0x0363856C STR X9, [X0 + 0x20]
	0x03638570 B.EQ 0x363B46C
	0x03638574 ADRP X8, 0xB04000
	0x03638578 LDR X8, [X8 + 0x88]
	0x0363857C LDR X8, [X8]
	0x03638580 STR X8, [X0 + 0x28]
	0x03638584 LDR W8, [X22]
	0x03638588 CMP W8, 0x27
	0x0363858C B.LS 0x363B46C
	0x03638590 STR X0, [X19 + 0x158]
	0x03638594 LDR X0, [X21]
	0x03638598 MOVZ W1, 0x2
	0x0363859C BL 0x1C16D6C
	0x036385A0 CBZ X0, 0x363B470
	0x036385A4 LDR W8, [X0 + 0x18]
	0x036385A8 CBZ W8, 0x363B46C
	0x036385AC ADRP X9, 0xB04000
	0x036385B0 LDR X9, [X9 + 0x2A8]
	0x036385B4 CMP W8, 0x1
	0x036385B8 LDR X9, [X9]
	0x036385BC STR X9, [X0 + 0x20]
	0x036385C0 B.EQ 0x363B46C
	0x036385C4 LDR X8, [X20]
	0x036385C8 STR X8, [X0 + 0x28]
	0x036385CC LDR W8, [X22]
	0x036385D0 CMP W8, 0x28
	0x036385D4 B.LS 0x363B46C
	0x036385D8 STR X0, [X19 + 0x160]
	0x036385DC LDR X0, [X21]
	0x036385E0 MOVZ W1, 0x2
	0x036385E4 BL 0x1C16D6C
	0x036385E8 CBZ X0, 0x363B470
	0x036385EC LDR W8, [X0 + 0x18]
	0x036385F0 CBZ W8, 0x363B46C
	0x036385F4 ADRP X9, 0xB03000
	0x036385F8 LDR X9, [X9 + 0xD58]
	0x036385FC CMP W8, 0x1
	0x03638600 LDR X9, [X9]
	0x03638604 STR X9, [X0 + 0x20]
	0x03638608 B.EQ 0x363B46C
	0x0363860C ADRP X8, 0xB04000
	0x03638610 LDR X8, [X8 + 0x138]
	0x03638614 LDR X8, [X8]
	0x03638618 STR X8, [X0 + 0x28]
	0x0363861C LDR W8, [X22]
	0x03638620 CMP W8, 0x29
	0x03638624 B.LS 0x363B46C
	0x03638628 STR X0, [X19 + 0x168]
	0x0363862C LDR X0, [X21]
	0x03638630 MOVZ W1, 0x2
	0x03638634 BL 0x1C16D6C
	0x03638638 CBZ X0, 0x363B470
	0x0363863C LDR W8, [X0 + 0x18]
	0x03638640 CBZ W8, 0x363B46C
	0x03638644 ADRP X9, 0xB03000
	0x03638648 LDR X9, [X9 + 0xAC0]
	0x0363864C CMP W8, 0x1
	0x03638650 LDR X9, [X9]
	0x03638654 STR X9, [X0 + 0x20]
	0x03638658 B.EQ 0x363B46C
	0x0363865C ADRP X8, 0xB03000
	0x03638660 LDR X8, [X8 + 0xFD0]
	0x03638664 LDR X8, [X8]
	0x03638668 STR X8, [X0 + 0x28]
	0x0363866C LDR W8, [X22]
	0x03638670 CMP W8, 0x2A
	0x03638674 B.LS 0x363B46C
	0x03638678 STR X0, [X19 + 0x170]
	0x0363867C LDR X0, [X21]
	0x03638680 MOVZ W1, 0x2
	0x03638684 BL 0x1C16D6C
	0x03638688 CBZ X0, 0x363B470
	0x0363868C LDR W8, [X0 + 0x18]
	0x03638690 CBZ W8, 0x363B46C
	0x03638694 ADRP X9, 0xB03000
	0x03638698 LDR X9, [X9 + 0xE00]
	0x0363869C CMP W8, 0x1
	0x036386A0 LDR X9, [X9]
	0x036386A4 STR X9, [X0 + 0x20]
	0x036386A8 B.EQ 0x363B46C
	0x036386AC ADRP X8, 0xB03000
	0x036386B0 LDR X8, [X8 + 0xA48]
	0x036386B4 LDR X8, [X8]
	0x036386B8 STR X8, [X0 + 0x28]
	0x036386BC LDR W8, [X22]
	0x036386C0 CMP W8, 0x2B
	0x036386C4 B.LS 0x363B46C
	0x036386C8 STR X0, [X19 + 0x178]
	0x036386CC LDR X0, [X21]
	0x036386D0 MOVZ W1, 0x2
	0x036386D4 BL 0x1C16D6C
	0x036386D8 CBZ X0, 0x363B470
	0x036386DC LDR W8, [X0 + 0x18]
	0x036386E0 CBZ W8, 0x363B46C
	0x036386E4 ADRP X9, 0xB03000
	0x036386E8 LDR X9, [X9 + 0xBF8]
	0x036386EC CMP W8, 0x1
	0x036386F0 LDR X9, [X9]
	0x036386F4 STR X9, [X0 + 0x20]
	0x036386F8 B.EQ 0x363B46C
	0x036386FC ADRP X8, 0xB03000
	0x03638700 LDR X8, [X8 + 0xF40]
	0x03638704 LDR X8, [X8]
	0x03638708 STR X8, [X0 + 0x28]
	0x0363870C LDR W8, [X22]
	0x03638710 CMP W8, 0x2C
	0x03638714 B.LS 0x363B46C
	0x03638718 STR X0, [X19 + 0x180]
	0x0363871C LDR X0, [X21]
	0x03638720 MOVZ W1, 0x2
	0x03638724 BL 0x1C16D6C
	0x03638728 CBZ X0, 0x363B470
	0x0363872C LDR W8, [X0 + 0x18]
	0x03638730 CBZ W8, 0x363B46C
	0x03638734 ADRP X9, 0xB04000
	0x03638738 LDR X9, [X9 + 0xD8]
	0x0363873C CMP W8, 0x1
	0x03638740 LDR X9, [X9]
	0x03638744 STR X9, [X0 + 0x20]
	0x03638748 B.EQ 0x363B46C
	0x0363874C ADRP X8, 0xB04000
	0x03638750 LDR X8, [X8 + 0x290]
	0x03638754 LDR X8, [X8]
	0x03638758 STR X8, [X0 + 0x28]
	0x0363875C LDR W8, [X22]
	0x03638760 CMP W8, 0x2D
	0x03638764 B.LS 0x363B46C
	0x03638768 STR X0, [X19 + 0x188]
	0x0363876C LDR X0, [X21]
	0x03638770 MOVZ W1, 0x2
	0x03638774 BL 0x1C16D6C
	0x03638778 CBZ X0, 0x363B470
	0x0363877C LDR W8, [X0 + 0x18]
	0x03638780 CBZ W8, 0x363B46C
	0x03638784 ADRP X9, 0xB03000
	0x03638788 LDR X9, [X9 + 0xF58]
	0x0363878C CMP W8, 0x1
	0x03638790 LDR X9, [X9]
	0x03638794 STR X9, [X0 + 0x20]
	0x03638798 B.EQ 0x363B46C
	0x0363879C ADRP X8, 0xB03000
	0x036387A0 LDR X8, [X8 + 0xB70]
	0x036387A4 LDR X8, [X8]
	0x036387A8 STR X8, [X0 + 0x28]
	0x036387AC LDR W8, [X22]
	0x036387B0 CMP W8, 0x2E
	0x036387B4 B.LS 0x363B46C
	0x036387B8 STR X0, [X19 + 0x190]
	0x036387BC LDR X0, [X21]
	0x036387C0 MOVZ W1, 0x2
	0x036387C4 BL 0x1C16D6C
	0x036387C8 CBZ X0, 0x363B470
	0x036387CC LDR W8, [X0 + 0x18]
	0x036387D0 CBZ W8, 0x363B46C
	0x036387D4 ADRP X9, 0xB04000
	0x036387D8 LDR X9, [X9 + 0x220]
	0x036387DC CMP W8, 0x1
	0x036387E0 LDR X9, [X9]
	0x036387E4 STR X9, [X0 + 0x20]
	0x036387E8 B.EQ 0x363B46C
	0x036387EC ADRP X8, 0xB03000
	0x036387F0 LDR X8, [X8 + 0xF68]
	0x036387F4 LDR X8, [X8]
	0x036387F8 STR X8, [X0 + 0x28]
	0x036387FC LDR W8, [X22]
	0x03638800 CMP W8, 0x2F
	0x03638804 B.LS 0x363B46C
	0x03638808 STR X0, [X19 + 0x198]
	0x0363880C LDR X0, [X21]
	0x03638810 MOVZ W1, 0x2
	0x03638814 BL 0x1C16D6C
	0x03638818 CBZ X0, 0x363B470
	0x0363881C LDR W8, [X0 + 0x18]
	0x03638820 CBZ W8, 0x363B46C
	0x03638824 ADRP X9, 0xB03000
	0x03638828 LDR X9, [X9 + 0xFE8]
	0x0363882C CMP W8, 0x1
	0x03638830 LDR X9, [X9]
	0x03638834 STR X9, [X0 + 0x20]
	0x03638838 B.EQ 0x363B46C
	0x0363883C ADRP X8, 0xB03000
	0x03638840 LDR X8, [X8 + 0xB78]
	0x03638844 LDR X8, [X8]
	0x03638848 STR X8, [X0 + 0x28]
	0x0363884C LDR W8, [X22]
	0x03638850 CMP W8, 0x30
	0x03638854 B.LS 0x363B46C
	0x03638858 STR X0, [X19 + 0x1A0]
	0x0363885C LDR X0, [X21]
	0x03638860 MOVZ W1, 0x2
	0x03638864 BL 0x1C16D6C
	0x03638868 CBZ X0, 0x363B470
	0x0363886C LDR W8, [X0 + 0x18]
	0x03638870 CBZ W8, 0x363B46C
	0x03638874 ADRP X9, 0xB03000
	0x03638878 LDR X9, [X9 + 0xF08]
	0x0363887C CMP W8, 0x1
	0x03638880 LDR X9, [X9]
	0x03638884 STR X9, [X0 + 0x20]
	0x03638888 B.EQ 0x363B46C
	0x0363888C ADRP X8, 0xB03000
	0x03638890 LDR X8, [X8 + 0x498]
	0x03638894 LDR X8, [X8]
	0x03638898 STR X8, [X0 + 0x28]
	0x0363889C LDR W8, [X22]
	0x036388A0 CMP W8, 0x31
	0x036388A4 B.LS 0x363B46C
	0x036388A8 STR X0, [X19 + 0x1A8]
	0x036388AC LDR X0, [X21]
	0x036388B0 MOVZ W1, 0x2
	0x036388B4 BL 0x1C16D6C
	0x036388B8 CBZ X0, 0x363B470
	0x036388BC LDR W8, [X0 + 0x18]
	0x036388C0 CBZ W8, 0x363B46C
	0x036388C4 ADRP X9, 0xB03000
	0x036388C8 LDR X9, [X9 + 0xDF8]
	0x036388CC CMP W8, 0x1
	0x036388D0 LDR X9, [X9]
	0x036388D4 STR X9, [X0 + 0x20]
	0x036388D8 B.EQ 0x363B46C
	0x036388DC ADRP X8, 0xB04000
	0x036388E0 LDR X8, [X8 + 0x1D8]
	0x036388E4 LDR X8, [X8]
	0x036388E8 STR X8, [X0 + 0x28]
	0x036388EC LDR W8, [X22]
	0x036388F0 CMP W8, 0x32
	0x036388F4 B.LS 0x363B46C
	0x036388F8 STR X0, [X19 + 0x1B0]
	0x036388FC LDR X0, [X21]
	0x03638900 MOVZ W1, 0x2
	0x03638904 BL 0x1C16D6C
	0x03638908 CBZ X0, 0x363B470
	0x0363890C LDR W8, [X0 + 0x18]
	0x03638910 CBZ W8, 0x363B46C
	0x03638914 ADRP X9, 0xB03000
	0x03638918 LDR X9, [X9 + 0x9F8]
	0x0363891C CMP W8, 0x1
	0x03638920 LDR X9, [X9]
	0x03638924 STR X9, [X0 + 0x20]
	0x03638928 B.EQ 0x363B46C
	0x0363892C ADRP X8, 0xB03000
	0x03638930 LDR X8, [X8 + 0xF28]
	0x03638934 LDR X8, [X8]
	0x03638938 STR X8, [X0 + 0x28]
	0x0363893C LDR W8, [X22]
	0x03638940 CMP W8, 0x33
	0x03638944 B.LS 0x363B46C
	0x03638948 STR X0, [X19 + 0x1B8]
	0x0363894C LDR X0, [X21]
	0x03638950 MOVZ W1, 0x2
	0x03638954 BL 0x1C16D6C
	0x03638958 CBZ X0, 0x363B470
	0x0363895C LDR W8, [X0 + 0x18]
	0x03638960 CBZ W8, 0x363B46C
	0x03638964 ADRP X9, 0xB03000
	0x03638968 LDR X9, [X9 + 0xC98]
	0x0363896C CMP W8, 0x1
	0x03638970 LDR X9, [X9]
	0x03638974 STR X9, [X0 + 0x20]
	0x03638978 B.EQ 0x363B46C
	0x0363897C ADRP X8, 0xB03000
	0x03638980 LDR X8, [X8 + 0xCB8]
	0x03638984 LDR X8, [X8]
	0x03638988 STR X8, [X0 + 0x28]
	0x0363898C LDR W8, [X22]
	0x03638990 CMP W8, 0x34
	0x03638994 B.LS 0x363B46C
	0x03638998 STR X0, [X19 + 0x1C0]
	0x0363899C LDR X0, [X21]
	0x036389A0 MOVZ W1, 0x2
	0x036389A4 BL 0x1C16D6C
	0x036389A8 CBZ X0, 0x363B470
	0x036389AC LDR W8, [X0 + 0x18]
	0x036389B0 CBZ W8, 0x363B46C
	0x036389B4 ADRP X9, 0xB03000
	0x036389B8 LDR X9, [X9 + 0xF78]
	0x036389BC CMP W8, 0x1
	0x036389C0 LDR X9, [X9]
	0x036389C4 STR X9, [X0 + 0x20]
	0x036389C8 B.EQ 0x363B46C
	0x036389CC ADRP X8, 0xB04000
	0x036389D0 LDR X8, [X8 + 0x1F0]
	0x036389D4 LDR X8, [X8]
	0x036389D8 STR X8, [X0 + 0x28]
	0x036389DC LDR W8, [X22]
	0x036389E0 CMP W8, 0x35
	0x036389E4 B.LS 0x363B46C
	0x036389E8 STR X0, [X19 + 0x1C8]
	0x036389EC LDR X0, [X21]
	0x036389F0 MOVZ W1, 0x2
	0x036389F4 BL 0x1C16D6C
	0x036389F8 CBZ X0, 0x363B470
	0x036389FC LDR W8, [X0 + 0x18]
	0x03638A00 CBZ W8, 0x363B46C
	0x03638A04 ADRP X9, 0xB04000
	0x03638A08 LDR X9, [X9 + 0x260]
	0x03638A0C CMP W8, 0x1
	0x03638A10 LDR X9, [X9]
	0x03638A14 STR X9, [X0 + 0x20]
	0x03638A18 B.EQ 0x363B46C
	0x03638A1C ADRP X8, 0xB03000
	0x03638A20 LDR X8, [X8 + 0xB38]
	0x03638A24 LDR X8, [X8]
	0x03638A28 STR X8, [X0 + 0x28]
	0x03638A2C LDR W8, [X22]
	0x03638A30 CMP W8, 0x36
	0x03638A34 B.LS 0x363B46C
	0x03638A38 STR X0, [X19 + 0x1D0]
	0x03638A3C LDR X0, [X21]
	0x03638A40 MOVZ W1, 0x2
	0x03638A44 BL 0x1C16D6C
	0x03638A48 CBZ X0, 0x363B470
	0x03638A4C LDR W8, [X0 + 0x18]
	0x03638A50 CBZ W8, 0x363B46C
	0x03638A54 ADRP X9, 0xB04000
	0x03638A58 LDR X9, [X9 + 0x1E0]
	0x03638A5C CMP W8, 0x1
	0x03638A60 LDR X9, [X9]
	0x03638A64 STR X9, [X0 + 0x20]
	0x03638A68 B.EQ 0x363B46C
	0x03638A6C ADRP X8, 0xB04000
	0x03638A70 LDR X8, [X8 + 0x200]
	0x03638A74 LDR X8, [X8]
	0x03638A78 STR X8, [X0 + 0x28]
	0x03638A7C LDR W8, [X22]
	0x03638A80 CMP W8, 0x37
	0x03638A84 B.LS 0x363B46C
	0x03638A88 STR X0, [X19 + 0x1D8]
	0x03638A8C LDR X0, [X21]
	0x03638A90 MOVZ W1, 0x2
	0x03638A94 BL 0x1C16D6C
	0x03638A98 CBZ X0, 0x363B470
	0x03638A9C LDR W8, [X0 + 0x18]
	0x03638AA0 CBZ W8, 0x363B46C
	0x03638AA4 ADRP X9, 0xB03000
	0x03638AA8 LDR X9, [X9 + 0xDD8]
	0x03638AAC CMP W8, 0x1
	0x03638AB0 LDR X9, [X9]
	0x03638AB4 STR X9, [X0 + 0x20]
	0x03638AB8 B.EQ 0x363B46C
	0x03638ABC ADRP X8, 0xB04000
	0x03638AC0 LDR X8, [X8 + 0x50]
	0x03638AC4 LDR X8, [X8]
	0x03638AC8 STR X8, [X0 + 0x28]
	0x03638ACC LDR W8, [X22]
	0x03638AD0 CMP W8, 0x38
	0x03638AD4 B.LS 0x363B46C
	0x03638AD8 STR X0, [X19 + 0x1E0]
	0x03638ADC LDR X0, [X21]
	0x03638AE0 MOVZ W1, 0x2
	0x03638AE4 BL 0x1C16D6C
	0x03638AE8 CBZ X0, 0x363B470
	0x03638AEC LDR W8, [X0 + 0x18]
	0x03638AF0 CBZ W8, 0x363B46C
	0x03638AF4 ADRP X9, 0xB04000
	0x03638AF8 LDR X9, [X9 + 0x1B0]
	0x03638AFC CMP W8, 0x1
	0x03638B00 LDR X9, [X9]
	0x03638B04 STR X9, [X0 + 0x20]
	0x03638B08 B.EQ 0x363B46C
	0x03638B0C ADRP X8, 0xB03000
	0x03638B10 LDR X8, [X8 + 0xB28]
	0x03638B14 LDR X8, [X8]
	0x03638B18 STR X8, [X0 + 0x28]
	0x03638B1C LDR W8, [X22]
	0x03638B20 CMP W8, 0x39
	0x03638B24 B.LS 0x363B46C
	0x03638B28 STR X0, [X19 + 0x1E8]
	0x03638B2C LDR X0, [X21]
	0x03638B30 MOVZ W1, 0x2
	0x03638B34 BL 0x1C16D6C
	0x03638B38 CBZ X0, 0x363B470
	0x03638B3C LDR W8, [X0 + 0x18]
	0x03638B40 CBZ W8, 0x363B46C
	0x03638B44 ADRP X9, 0xB03000
	0x03638B48 LDR X9, [X9 + 0xB30]
	0x03638B4C CMP W8, 0x1
	0x03638B50 LDR X9, [X9]
	0x03638B54 STR X9, [X0 + 0x20]
	0x03638B58 B.EQ 0x363B46C
	0x03638B5C ADRP X8, 0xB03000
	0x03638B60 LDR X8, [X8 + 0xD18]
	0x03638B64 LDR X8, [X8]
	0x03638B68 STR X8, [X0 + 0x28]
	0x03638B6C LDR W8, [X22]
	0x03638B70 CMP W8, 0x3A
	0x03638B74 B.LS 0x363B46C
	0x03638B78 STR X0, [X19 + 0x1F0]
	0x03638B7C LDR X0, [X21]
	0x03638B80 MOVZ W1, 0x2
	0x03638B84 BL 0x1C16D6C
	0x03638B88 CBZ X0, 0x363B470
	0x03638B8C LDR W8, [X0 + 0x18]
	0x03638B90 CBZ W8, 0x363B46C
	0x03638B94 ADRP X9, 0xB03000
	0x03638B98 LDR X9, [X9 + 0xDC8]
	0x03638B9C CMP W8, 0x1
	0x03638BA0 LDR X9, [X9]
	0x03638BA4 STR X9, [X0 + 0x20]
	0x03638BA8 B.EQ 0x363B46C
	0x03638BAC ADRP X8, 0xB03000
	0x03638BB0 LDR X8, [X8 + 0xA98]
	0x03638BB4 LDR X8, [X8]
	0x03638BB8 STR X8, [X0 + 0x28]
	0x03638BBC LDR W8, [X22]
	0x03638BC0 CMP W8, 0x3B
	0x03638BC4 B.LS 0x363B46C
	0x03638BC8 STR X0, [X19 + 0x1F8]
	0x03638BCC LDR X0, [X21]
	0x03638BD0 MOVZ W1, 0x2
	0x03638BD4 BL 0x1C16D6C
	0x03638BD8 CBZ X0, 0x363B470
	0x03638BDC LDR W8, [X0 + 0x18]
	0x03638BE0 CBZ W8, 0x363B46C
	0x03638BE4 ADRP X9, 0xB03000
	0x03638BE8 LDR X9, [X9 + 0xFE0]
	0x03638BEC CMP W8, 0x1
	0x03638BF0 LDR X9, [X9]
	0x03638BF4 STR X9, [X0 + 0x20]
	0x03638BF8 B.EQ 0x363B46C
	0x03638BFC ADRP X8, 0xB03000
	0x03638C00 LDR X8, [X8 + 0xF80]
	0x03638C04 LDR X8, [X8]
	0x03638C08 STR X8, [X0 + 0x28]
	0x03638C0C LDR W8, [X22]
	0x03638C10 CMP W8, 0x3C
	0x03638C14 B.LS 0x363B46C
	0x03638C18 STR X0, [X19 + 0x200]
	0x03638C1C LDR X0, [X21]
	0x03638C20 MOVZ W1, 0x2
	0x03638C24 BL 0x1C16D6C
	0x03638C28 CBZ X0, 0x363B470
	0x03638C2C LDR W8, [X0 + 0x18]
	0x03638C30 CBZ W8, 0x363B46C
	0x03638C34 ADRP X9, 0xB03000
	0x03638C38 LDR X9, [X9 + 0xD50]
	0x03638C3C CMP W8, 0x1
	0x03638C40 LDR X9, [X9]
	0x03638C44 STR X9, [X0 + 0x20]
	0x03638C48 B.EQ 0x363B46C
	0x03638C4C ADRP X8, 0xB03000
	0x03638C50 LDR X8, [X8 + 0xE70]
	0x03638C54 LDR X8, [X8]
	0x03638C58 STR X8, [X0 + 0x28]
	0x03638C5C LDR W8, [X22]
	0x03638C60 CMP W8, 0x3D
	0x03638C64 B.LS 0x363B46C
	0x03638C68 STR X0, [X19 + 0x208]
	0x03638C6C LDR X0, [X21]
	0x03638C70 MOVZ W1, 0x2
	0x03638C74 BL 0x1C16D6C
	0x03638C78 CBZ X0, 0x363B470
	0x03638C7C LDR W8, [X0 + 0x18]
	0x03638C80 CBZ W8, 0x363B46C
	0x03638C84 ADRP X9, 0xB03000
	0x03638C88 LDR X9, [X9 + 0xBF0]
	0x03638C8C CMP W8, 0x1
	0x03638C90 LDR X9, [X9]
	0x03638C94 STR X9, [X0 + 0x20]
	0x03638C98 B.EQ 0x363B46C
	0x03638C9C ADRP X8, 0xB03000
	0x03638CA0 LDR X8, [X8 + 0xAF0]
	0x03638CA4 LDR X8, [X8]
	0x03638CA8 STR X8, [X0 + 0x28]
	0x03638CAC LDR W8, [X22]
	0x03638CB0 CMP W8, 0x3E
	0x03638CB4 B.LS 0x363B46C
	0x03638CB8 STR X0, [X19 + 0x210]
	0x03638CBC LDR X0, [X21]
	0x03638CC0 MOVZ W1, 0x2
	0x03638CC4 BL 0x1C16D6C
	0x03638CC8 CBZ X0, 0x363B470
	0x03638CCC LDR W8, [X0 + 0x18]
	0x03638CD0 CBZ W8, 0x363B46C
	0x03638CD4 ADRP X9, 0xB03000
	0x03638CD8 LDR X9, [X9 + 0xE40]
	0x03638CDC CMP W8, 0x1
	0x03638CE0 LDR X9, [X9]
	0x03638CE4 STR X9, [X0 + 0x20]
	0x03638CE8 B.EQ 0x363B46C
	0x03638CEC ADRP X8, 0xB03000
	0x03638CF0 LDR X8, [X8 + 0xA40]
	0x03638CF4 LDR X8, [X8]
	0x03638CF8 STR X8, [X0 + 0x28]
	0x03638CFC LDR W8, [X22]
	0x03638D00 CMP W8, 0x3F
	0x03638D04 B.LS 0x363B46C
	0x03638D08 STR X0, [X19 + 0x218]
	0x03638D0C LDR X0, [X21]
	0x03638D10 MOVZ W1, 0x2
	0x03638D14 BL 0x1C16D6C
	0x03638D18 CBZ X0, 0x363B470
	0x03638D1C LDR W8, [X0 + 0x18]
	0x03638D20 CBZ W8, 0x363B46C
	0x03638D24 ADRP X9, 0xB03000
	0x03638D28 LDR X9, [X9 + 0xB80]
	0x03638D2C CMP W8, 0x1
	0x03638D30 LDR X9, [X9]
	0x03638D34 STR X9, [X0 + 0x20]
	0x03638D38 B.EQ 0x363B46C
	0x03638D3C ADRP X8, 0xB04000
	0x03638D40 LDR X8, [X8 + 0x288]
	0x03638D44 LDR X8, [X8]
	0x03638D48 STR X8, [X0 + 0x28]
	0x03638D4C LDR W8, [X22]
	0x03638D50 CMP W8, 0x40
	0x03638D54 B.LS 0x363B46C
	0x03638D58 STR X0, [X19 + 0x220]
	0x03638D5C LDR X0, [X21]
	0x03638D60 MOVZ W1, 0x2
	0x03638D64 BL 0x1C16D6C
	0x03638D68 CBZ X0, 0x363B470
	0x03638D6C LDR W8, [X0 + 0x18]
	0x03638D70 CBZ W8, 0x363B46C
	0x03638D74 ADRP X9, 0xB04000
	0x03638D78 LDR X9, [X9 + 0x2A0]
	0x03638D7C CMP W8, 0x1
	0x03638D80 LDR X9, [X9]
	0x03638D84 STR X9, [X0 + 0x20]
	0x03638D88 B.EQ 0x363B46C
	0x03638D8C ADRP X8, 0xB03000
	0x03638D90 LDR X8, [X8 + 0xF50]
	0x03638D94 LDR X8, [X8]
	0x03638D98 STR X8, [X0 + 0x28]
	0x03638D9C LDR W8, [X22]
	0x03638DA0 CMP W8, 0x41
	0x03638DA4 B.LS 0x363B46C
	0x03638DA8 STR X0, [X19 + 0x228]
	0x03638DAC LDR X0, [X21]
	0x03638DB0 MOVZ W1, 0x2
	0x03638DB4 BL 0x1C16D6C
	0x03638DB8 CBZ X0, 0x363B470
	0x03638DBC LDR W8, [X0 + 0x18]
	0x03638DC0 CBZ W8, 0x363B46C
	0x03638DC4 ADRP X9, 0xB04000
	0x03638DC8 LDR X9, [X9 + 0x98]
	0x03638DCC CMP W8, 0x1
	0x03638DD0 LDR X9, [X9]
	0x03638DD4 STR X9, [X0 + 0x20]
	0x03638DD8 B.EQ 0x363B46C
	0x03638DDC ADRP X8, 0xB03000
	0x03638DE0 LDR X8, [X8 + 0xE38]
	0x03638DE4 LDR X8, [X8]
	0x03638DE8 STR X8, [X0 + 0x28]
	0x03638DEC LDR W8, [X22]
	0x03638DF0 CMP W8, 0x42
	0x03638DF4 B.LS 0x363B46C
	0x03638DF8 STR X0, [X19 + 0x230]
	0x03638DFC LDR X0, [X21]
	0x03638E00 MOVZ W1, 0x2
	0x03638E04 BL 0x1C16D6C
	0x03638E08 CBZ X0, 0x363B470
	0x03638E0C LDR W8, [X0 + 0x18]
	0x03638E10 CBZ W8, 0x363B46C
	0x03638E14 ADRP X9, 0xB04000
	0x03638E18 LDR X9, [X9 + 0x80]
	0x03638E1C CMP W8, 0x1
	0x03638E20 LDR X9, [X9]
	0x03638E24 STR X9, [X0 + 0x20]
	0x03638E28 B.EQ 0x363B46C
	0x03638E2C ADRP X8, 0xB03000
	0x03638E30 LDR X8, [X8 + 0xFF8]
	0x03638E34 LDR X8, [X8]
	0x03638E38 STR X8, [X0 + 0x28]
	0x03638E3C LDR W8, [X22]
	0x03638E40 CMP W8, 0x43
	0x03638E44 B.LS 0x363B46C
	0x03638E48 STR X0, [X19 + 0x238]
	0x03638E4C LDR X0, [X21]
	0x03638E50 MOVZ W1, 0x2
	0x03638E54 BL 0x1C16D6C
	0x03638E58 CBZ X0, 0x363B470
	0x03638E5C LDR W8, [X0 + 0x18]
	0x03638E60 CBZ W8, 0x363B46C
	0x03638E64 ADRP X9, 0xB03000
	0x03638E68 LDR X9, [X9 + 0xF18]
	0x03638E6C CMP W8, 0x1
	0x03638E70 LDR X9, [X9]
	0x03638E74 STR X9, [X0 + 0x20]
	0x03638E78 B.EQ 0x363B46C
	0x03638E7C ADRP X8, 0xB03000
	0x03638E80 LDR X8, [X8 + 0xC90]
	0x03638E84 LDR X8, [X8]
	0x03638E88 STR X8, [X0 + 0x28]
	0x03638E8C LDR W8, [X22]
	0x03638E90 CMP W8, 0x44
	0x03638E94 B.LS 0x363B46C
	0x03638E98 STR X0, [X19 + 0x240]
	0x03638E9C LDR X0, [X21]
	0x03638EA0 MOVZ W1, 0x2
	0x03638EA4 BL 0x1C16D6C
	0x03638EA8 CBZ X0, 0x363B470
	0x03638EAC LDR W8, [X0 + 0x18]
	0x03638EB0 CBZ W8, 0x363B46C
	0x03638EB4 ADRP X9, 0xB03000
	0x03638EB8 LDR X9, [X9 + 0xBA8]
	0x03638EBC CMP W8, 0x1
	0x03638EC0 LDR X9, [X9]
	0x03638EC4 STR X9, [X0 + 0x20]
	0x03638EC8 B.EQ 0x363B46C
	0x03638ECC ADRP X8, 0xB03000
	0x03638ED0 LDR X8, [X8 + 0xD98]
	0x03638ED4 LDR X8, [X8]
	0x03638ED8 STR X8, [X0 + 0x28]
	0x03638EDC LDR W8, [X22]
	0x03638EE0 CMP W8, 0x45
	0x03638EE4 B.LS 0x363B46C
	0x03638EE8 STR X0, [X19 + 0x248]
	0x03638EEC LDR X0, [X21]
	0x03638EF0 MOVZ W1, 0x2
	0x03638EF4 BL 0x1C16D6C
	0x03638EF8 CBZ X0, 0x363B470
	0x03638EFC LDR W8, [X0 + 0x18]
	0x03638F00 CBZ W8, 0x363B46C
	0x03638F04 ADRP X9, 0xB04000
	0x03638F08 LDR X9, [X9 + 0x170]
	0x03638F0C CMP W8, 0x1
	0x03638F10 LDR X9, [X9]
	0x03638F14 STR X9, [X0 + 0x20]
	0x03638F18 B.EQ 0x363B46C
	0x03638F1C ADRP X8, 0xB03000
	0x03638F20 LDR X8, [X8 + 0xF20]
	0x03638F24 LDR X8, [X8]
	0x03638F28 STR X8, [X0 + 0x28]
	0x03638F2C LDR W8, [X22]
	0x03638F30 CMP W8, 0x46
	0x03638F34 B.LS 0x363B46C
	0x03638F38 STR X0, [X19 + 0x250]
	0x03638F3C LDR X0, [X21]
	0x03638F40 MOVZ W1, 0x2
	0x03638F44 BL 0x1C16D6C
	0x03638F48 CBZ X0, 0x363B470
	0x03638F4C LDR W8, [X0 + 0x18]
	0x03638F50 CBZ W8, 0x363B46C
	0x03638F54 ADRP X9, 0xB03000
	0x03638F58 LDR X9, [X9 + 0xF10]
	0x03638F5C CMP W8, 0x1
	0x03638F60 LDR X9, [X9]
	0x03638F64 STR X9, [X0 + 0x20]
	0x03638F68 B.EQ 0x363B46C
	0x03638F6C ADRP X8, 0xB03000
	0x03638F70 LDR X8, [X8 + 0xD70]
	0x03638F74 LDR X8, [X8]
	0x03638F78 STR X8, [X0 + 0x28]
	0x03638F7C LDR W8, [X22]
	0x03638F80 CMP W8, 0x47
	0x03638F84 B.LS 0x363B46C
	0x03638F88 STR X0, [X19 + 0x258]
	0x03638F8C LDR X0, [X21]
	0x03638F90 MOVZ W1, 0x2
	0x03638F94 BL 0x1C16D6C
	0x03638F98 CBZ X0, 0x363B470
	0x03638F9C LDR W8, [X0 + 0x18]
	0x03638FA0 CBZ W8, 0x363B46C
	0x03638FA4 ADRP X9, 0xB03000
	0x03638FA8 LDR X9, [X9 + 0xA88]
	0x03638FAC CMP W8, 0x1
	0x03638FB0 LDR X9, [X9]
	0x03638FB4 STR X9, [X0 + 0x20]
	0x03638FB8 B.EQ 0x363B46C
	0x03638FBC ADRP X8, 0xB04000
	0x03638FC0 LDR X8, [X8 + 0x48]
	0x03638FC4 LDR X8, [X8]
	0x03638FC8 STR X8, [X0 + 0x28]
	0x03638FCC LDR W8, [X22]
	0x03638FD0 CMP W8, 0x48
	0x03638FD4 B.LS 0x363B46C
	0x03638FD8 STR X0, [X19 + 0x260]
	0x03638FDC LDR X0, [X21]
	0x03638FE0 MOVZ W1, 0x2
	0x03638FE4 BL 0x1C16D6C
	0x03638FE8 CBZ X0, 0x363B470
	0x03638FEC LDR W8, [X0 + 0x18]
	0x03638FF0 CBZ W8, 0x363B46C
	0x03638FF4 ADRP X9, 0xB03000
	0x03638FF8 LDR X9, [X9 + 0xC58]
	0x03638FFC CMP W8, 0x1
	0x03639000 LDR X9, [X9]
	0x03639004 STR X9, [X0 + 0x20]
	0x03639008 B.EQ 0x363B46C
	0x0363900C ADRP X8, 0xB02000
	0x03639010 LDR X8, [X8 + 0xFA8]
	0x03639014 LDR X8, [X8]
	0x03639018 STR X8, [X0 + 0x28]
	0x0363901C LDR W8, [X22]
	0x03639020 CMP W8, 0x49
	0x03639024 B.LS 0x363B46C
	0x03639028 STR X0, [X19 + 0x268]
	0x0363902C LDR X0, [X21]
	0x03639030 MOVZ W1, 0x2
	0x03639034 BL 0x1C16D6C
	0x03639038 CBZ X0, 0x363B470
	0x0363903C LDR W8, [X0 + 0x18]
	0x03639040 CBZ W8, 0x363B46C
	0x03639044 ADRP X9, 0xB02000
	0x03639048 LDR X9, [X9 + 0xD28]
	0x0363904C CMP W8, 0x1
	0x03639050 LDR X9, [X9]
	0x03639054 STR X9, [X0 + 0x20]
	0x03639058 B.EQ 0x363B46C
	0x0363905C ADRP X8, 0xB02000
	0x03639060 LDR X8, [X8 + 0xF30]
	0x03639064 LDR X8, [X8]
	0x03639068 STR X8, [X0 + 0x28]
	0x0363906C LDR W8, [X22]
	0x03639070 CMP W8, 0x4A
	0x03639074 B.LS 0x363B46C
	0x03639078 STR X0, [X19 + 0x270]
	0x0363907C LDR X0, [X21]
	0x03639080 MOVZ W1, 0x2
	0x03639084 BL 0x1C16D6C
	0x03639088 CBZ X0, 0x363B470
	0x0363908C LDR W8, [X0 + 0x18]
	0x03639090 CBZ W8, 0x363B46C
	0x03639094 ADRP X9, 0xB02000
	0x03639098 LDR X9, [X9 + 0xC80]
	0x0363909C CMP W8, 0x1
	0x036390A0 LDR X9, [X9]
	0x036390A4 STR X9, [X0 + 0x20]
	0x036390A8 B.EQ 0x363B46C
	0x036390AC ADRP X8, 0xB03000
	0x036390B0 LDR X8, [X8 + 0x118]
	0x036390B4 LDR X8, [X8]
	0x036390B8 STR X8, [X0 + 0x28]
	0x036390BC LDR W8, [X22]
	0x036390C0 CMP W8, 0x4B
	0x036390C4 B.LS 0x363B46C
	0x036390C8 STR X0, [X19 + 0x278]
	0x036390CC LDR X0, [X21]
	0x036390D0 MOVZ W1, 0x2
	0x036390D4 BL 0x1C16D6C
	0x036390D8 CBZ X0, 0x363B470
	0x036390DC LDR W8, [X0 + 0x18]
	0x036390E0 CBZ W8, 0x363B46C
	0x036390E4 ADRP X9, 0xB03000
	0x036390E8 LDR X9, [X9 + 0x180]
	0x036390EC CMP W8, 0x1
	0x036390F0 LDR X9, [X9]
	0x036390F4 STR X9, [X0 + 0x20]
	0x036390F8 B.EQ 0x363B46C
	0x036390FC ADRP X8, 0xB03000
	0x03639100 LDR X8, [X8 + 0x280]
	0x03639104 LDR X8, [X8]
	0x03639108 STR X8, [X0 + 0x28]
	0x0363910C LDR W8, [X22]
	0x03639110 CMP W8, 0x4C
	0x03639114 B.LS 0x363B46C
	0x03639118 STR X0, [X19 + 0x280]
	0x0363911C LDR X0, [X21]
	0x03639120 MOVZ W1, 0x2
	0x03639124 BL 0x1C16D6C
	0x03639128 CBZ X0, 0x363B470
	0x0363912C LDR W8, [X0 + 0x18]
	0x03639130 CBZ W8, 0x363B46C
	0x03639134 ADRP X9, 0xB02000
	0x03639138 LDR X9, [X9 + 0xE98]
	0x0363913C CMP W8, 0x1
	0x03639140 LDR X9, [X9]
	0x03639144 STR X9, [X0 + 0x20]
	0x03639148 B.EQ 0x363B46C
	0x0363914C ADRP X8, 0xB02000
	0x03639150 LDR X8, [X8 + 0xE20]
	0x03639154 LDR X8, [X8]
	0x03639158 STR X8, [X0 + 0x28]
	0x0363915C LDR W8, [X22]
	0x03639160 CMP W8, 0x4D
	0x03639164 B.LS 0x363B46C
	0x03639168 STR X0, [X19 + 0x288]
	0x0363916C LDR X0, [X21]
	0x03639170 MOVZ W1, 0x2
	0x03639174 BL 0x1C16D6C
	0x03639178 CBZ X0, 0x363B470
	0x0363917C LDR W8, [X0 + 0x18]
	0x03639180 CBZ W8, 0x363B46C
	0x03639184 ADRP X9, 0xB03000
	0x03639188 LDR X9, [X9 + 0x10]
	0x0363918C CMP W8, 0x1
	0x03639190 LDR X9, [X9]
	0x03639194 STR X9, [X0 + 0x20]
	0x03639198 B.EQ 0x363B46C
	0x0363919C ADRP X8, 0xB03000
	0x036391A0 LDR X8, [X8 + 0x90]
	0x036391A4 LDR X8, [X8]
	0x036391A8 STR X8, [X0 + 0x28]
	0x036391AC LDR W8, [X22]
	0x036391B0 CMP W8, 0x4E
	0x036391B4 B.LS 0x363B46C
	0x036391B8 STR X0, [X19 + 0x290]
	0x036391BC LDR X0, [X21]
	0x036391C0 MOVZ W1, 0x2
	0x036391C4 BL 0x1C16D6C
	0x036391C8 CBZ X0, 0x363B470
	0x036391CC LDR W8, [X0 + 0x18]
	0x036391D0 CBZ W8, 0x363B46C
	0x036391D4 ADRP X9, 0xB03000
	0x036391D8 LDR X9, [X9 + 0x140]
	0x036391DC CMP W8, 0x1
	0x036391E0 LDR X9, [X9]
	0x036391E4 STR X9, [X0 + 0x20]
	0x036391E8 B.EQ 0x363B46C
	0x036391EC ADRP X8, 0xB02000
	0x036391F0 LDR X8, [X8 + 0xA60]
	0x036391F4 LDR X8, [X8]
	0x036391F8 STR X8, [X0 + 0x28]
	0x036391FC LDR W8, [X22]
	0x03639200 CMP W8, 0x4F
	0x03639204 B.LS 0x363B46C
	0x03639208 STR X0, [X19 + 0x298]
	0x0363920C LDR X0, [X21]
	0x03639210 MOVZ W1, 0x2
	0x03639214 BL 0x1C16D6C
	0x03639218 CBZ X0, 0x363B470
	0x0363921C LDR W8, [X0 + 0x18]
	0x03639220 CBZ W8, 0x363B46C
	0x03639224 ADRP X9, 0xB02000
	0x03639228 LDR X9, [X9 + 0xE50]
	0x0363922C CMP W8, 0x1
	0x03639230 LDR X9, [X9]
	0x03639234 STR X9, [X0 + 0x20]
	0x03639238 B.EQ 0x363B46C
	0x0363923C ADRP X8, 0xB02000
	0x03639240 LDR X8, [X8 + 0xB50]
	0x03639244 LDR X8, [X8]
	0x03639248 STR X8, [X0 + 0x28]
	0x0363924C LDR W8, [X22]
	0x03639250 CMP W8, 0x50
	0x03639254 B.LS 0x363B46C
	0x03639258 STR X0, [X19 + 0x2A0]
	0x0363925C LDR X0, [X21]
	0x03639260 MOVZ W1, 0x2
	0x03639264 BL 0x1C16D6C
	0x03639268 CBZ X0, 0x363B470
	0x0363926C LDR W8, [X0 + 0x18]
	0x03639270 CBZ W8, 0x363B46C
	0x03639274 ADRP X9, 0xB02000
	0x03639278 LDR X9, [X9 + 0xD78]
	0x0363927C CMP W8, 0x1
	0x03639280 LDR X9, [X9]
	0x03639284 STR X9, [X0 + 0x20]
	0x03639288 B.EQ 0x363B46C
	0x0363928C ADRP X8, 0xB02000
	0x03639290 LDR X8, [X8 + 0xBB8]
	0x03639294 LDR X8, [X8]
	0x03639298 STR X8, [X0 + 0x28]
	0x0363929C LDR W8, [X22]
	0x036392A0 CMP W8, 0x51
	0x036392A4 B.LS 0x363B46C
	0x036392A8 STR X0, [X19 + 0x2A8]
	0x036392AC LDR X0, [X21]
	0x036392B0 MOVZ W1, 0x2
	0x036392B4 BL 0x1C16D6C
	0x036392B8 CBZ X0, 0x363B470
	0x036392BC LDR W8, [X0 + 0x18]
	0x036392C0 CBZ W8, 0x363B46C
	0x036392C4 ADRP X9, 0xB03000
	0x036392C8 LDR X9, [X9 + 0x40]
	0x036392CC CMP W8, 0x1
	0x036392D0 LDR X9, [X9]
	0x036392D4 STR X9, [X0 + 0x20]
	0x036392D8 B.EQ 0x363B46C
	0x036392DC ADRP X8, 0xB03000
	0x036392E0 LDR X8, [X8 + 0x298]
	0x036392E4 LDR X8, [X8]
	0x036392E8 STR X8, [X0 + 0x28]
	0x036392EC LDR W8, [X22]
	0x036392F0 CMP W8, 0x52
	0x036392F4 B.LS 0x363B46C
	0x036392F8 STR X0, [X19 + 0x2B0]
	0x036392FC LDR X0, [X21]
	0x03639300 MOVZ W1, 0x2
	0x03639304 BL 0x1C16D6C
	0x03639308 CBZ X0, 0x363B470
	0x0363930C LDR W8, [X0 + 0x18]
	0x03639310 CBZ W8, 0x363B46C
	0x03639314 ADRP X9, 0xB03000
	0x03639318 LDR X9, [X9 + 0xF8]
	0x0363931C CMP W8, 0x1
	0x03639320 LDR X9, [X9]
	0x03639324 STR X9, [X0 + 0x20]
	0x03639328 B.EQ 0x363B46C
	0x0363932C ADRP X20, 0xB02000
	0x03639330 LDR X20, [X20 + 0xA20]
	0x03639334 LDR X8, [X20]
	0x03639338 STR X8, [X0 + 0x28]
	0x0363933C LDR W8, [X22]
	0x03639340 CMP W8, 0x53
	0x03639344 B.LS 0x363B46C
	0x03639348 STR X0, [X19 + 0x2B8]
	0x0363934C LDR X0, [X21]
	0x03639350 MOVZ W1, 0x2
	0x03639354 BL 0x1C16D6C
	0x03639358 CBZ X0, 0x363B470
	0x0363935C LDR W8, [X0 + 0x18]
	0x03639360 CBZ W8, 0x363B46C
	0x03639364 ADRP X9, 0xB03000
	0x03639368 LDR X9, [X9 + 0x250]
	0x0363936C CMP W8, 0x1
	0x03639370 LDR X9, [X9]
	0x03639374 STR X9, [X0 + 0x20]
	0x03639378 B.EQ 0x363B46C
	0x0363937C LDR X8, [X20]
	0x03639380 STR X8, [X0 + 0x28]
	0x03639384 LDR W8, [X22]
	0x03639388 CMP W8, 0x54
	0x0363938C B.LS 0x363B46C
	0x03639390 STR X0, [X19 + 0x2C0]
	0x03639394 LDR X0, [X21]
	0x03639398 MOVZ W1, 0x2
	0x0363939C BL 0x1C16D6C
	0x036393A0 CBZ X0, 0x363B470
	0x036393A4 LDR W8, [X0 + 0x18]
	0x036393A8 CBZ W8, 0x363B46C
	0x036393AC ADRP X9, 0xB02000
	0x036393B0 LDR X9, [X9 + 0xFD8]
	0x036393B4 CMP W8, 0x1
	0x036393B8 LDR X9, [X9]
	0x036393BC STR X9, [X0 + 0x20]
	0x036393C0 B.EQ 0x363B46C
	0x036393C4 ADRP X8, 0xB02000
	0x036393C8 LDR X8, [X8 + 0xC88]
	0x036393CC LDR X8, [X8]
	0x036393D0 STR X8, [X0 + 0x28]
	0x036393D4 LDR W8, [X22]
	0x036393D8 CMP W8, 0x55
	0x036393DC B.LS 0x363B46C
	0x036393E0 STR X0, [X19 + 0x2C8]
	0x036393E4 LDR X0, [X21]
	0x036393E8 MOVZ W1, 0x2
	0x036393EC BL 0x1C16D6C
	0x036393F0 CBZ X0, 0x363B470
	0x036393F4 LDR W8, [X0 + 0x18]
	0x036393F8 CBZ W8, 0x363B46C
	0x036393FC ADRP X9, 0xB02000
	0x03639400 LDR X9, [X9 + 0xEC8]
	0x03639404 CMP W8, 0x1
	0x03639408 LDR X9, [X9]
	0x0363940C STR X9, [X0 + 0x20]
	0x03639410 B.EQ 0x363B46C
	0x03639414 ADRP X8, 0xB02000
	0x03639418 LDR X8, [X8 + 0xCA0]
	0x0363941C LDR X8, [X8]
	0x03639420 STR X8, [X0 + 0x28]
	0x03639424 LDR W8, [X22]
	0x03639428 CMP W8, 0x56
	0x0363942C B.LS 0x363B46C
	0x03639430 STR X0, [X19 + 0x2D0]
	0x03639434 LDR X0, [X21]
	0x03639438 MOVZ W1, 0x2
	0x0363943C BL 0x1C16D6C
	0x03639440 CBZ X0, 0x363B470
	0x03639444 LDR W8, [X0 + 0x18]
	0x03639448 CBZ W8, 0x363B46C
	0x0363944C ADRP X9, 0xB03000
	0x03639450 LDR X9, [X9 + 0x188]
	0x03639454 CMP W8, 0x1
	0x03639458 LDR X9, [X9]
	0x0363945C STR X9, [X0 + 0x20]
	0x03639460 B.EQ 0x363B46C
	0x03639464 ADRP X8, 0xB02000
	0x03639468 LDR X8, [X8 + 0xBD8]
	0x0363946C LDR X8, [X8]
	0x03639470 STR X8, [X0 + 0x28]
	0x03639474 LDR W8, [X22]
	0x03639478 CMP W8, 0x57
	0x0363947C B.LS 0x363B46C
	0x03639480 STR X0, [X19 + 0x2D8]
	0x03639484 LDR X0, [X21]
	0x03639488 MOVZ W1, 0x2
	0x0363948C BL 0x1C16D6C
	0x03639490 CBZ X0, 0x363B470
	0x03639494 LDR W8, [X0 + 0x18]
	0x03639498 CBZ W8, 0x363B46C
	0x0363949C ADRP X9, 0xB02000
	0x036394A0 LDR X9, [X9 + 0xC40]
	0x036394A4 CMP W8, 0x1
	0x036394A8 LDR X9, [X9]
	0x036394AC STR X9, [X0 + 0x20]
	0x036394B0 B.EQ 0x363B46C
	0x036394B4 ADRP X8, 0xB02000
	0x036394B8 LDR X8, [X8 + 0xBE0]
	0x036394BC LDR X8, [X8]
	0x036394C0 STR X8, [X0 + 0x28]
	0x036394C4 LDR W8, [X22]
	0x036394C8 CMP W8, 0x58
	0x036394CC B.LS 0x363B46C
	0x036394D0 STR X0, [X19 + 0x2E0]
	0x036394D4 LDR X0, [X21]
	0x036394D8 MOVZ W1, 0x2
	0x036394DC BL 0x1C16D6C
	0x036394E0 CBZ X0, 0x363B470
	0x036394E4 LDR W8, [X0 + 0x18]
	0x036394E8 CBZ W8, 0x363B46C
	0x036394EC ADRP X9, 0xB02000
	0x036394F0 LDR X9, [X9 + 0x9E8]
	0x036394F4 CMP W8, 0x1
	0x036394F8 LDR X9, [X9]
	0x036394FC STR X9, [X0 + 0x20]
	0x03639500 B.EQ 0x363B46C
	0x03639504 ADRP X8, 0xB02000
	0x03639508 LDR X8, [X8 + 0xF00]
	0x0363950C LDR X8, [X8]
	0x03639510 STR X8, [X0 + 0x28]
	0x03639514 LDR W8, [X22]
	0x03639518 CMP W8, 0x59
	0x0363951C B.LS 0x363B46C
	0x03639520 STR X0, [X19 + 0x2E8]
	0x03639524 LDR X0, [X21]
	0x03639528 MOVZ W1, 0x2
	0x0363952C BL 0x1C16D6C
	0x03639530 CBZ X0, 0x363B470
	0x03639534 LDR W8, [X0 + 0x18]
	0x03639538 CBZ W8, 0x363B46C
	0x0363953C ADRP X9, 0xB02000
	0x03639540 LDR X9, [X9 + 0xE80]
	0x03639544 CMP W8, 0x1
	0x03639548 LDR X9, [X9]
	0x0363954C STR X9, [X0 + 0x20]
	0x03639550 B.EQ 0x363B46C
	0x03639554 ADRP X8, 0xB03000
	0x03639558 LDR X8, [X8 + 0x150]
	0x0363955C LDR X8, [X8]
	0x03639560 STR X8, [X0 + 0x28]
	0x03639564 LDR W8, [X22]
	0x03639568 CMP W8, 0x5A
	0x0363956C B.LS 0x363B46C
	0x03639570 STR X0, [X19 + 0x2F0]
	0x03639574 LDR X0, [X21]
	0x03639578 MOVZ W1, 0x2
	0x0363957C BL 0x1C16D6C
	0x03639580 CBZ X0, 0x363B470
	0x03639584 LDR W8, [X0 + 0x18]
	0x03639588 CBZ W8, 0x363B46C
	0x0363958C ADRP X9, 0xB03000
	0x03639590 LDR X9, [X9 + 0xC0]
	0x03639594 CMP W8, 0x1
	0x03639598 LDR X9, [X9]
	0x0363959C STR X9, [X0 + 0x20]
	0x036395A0 B.EQ 0x363B46C
	0x036395A4 ADRP X8, 0xB02000
	0x036395A8 LDR X8, [X8 + 0xF60]
	0x036395AC LDR X8, [X8]
	0x036395B0 STR X8, [X0 + 0x28]
	0x036395B4 LDR W8, [X22]
	0x036395B8 CMP W8, 0x5B
	0x036395BC B.LS 0x363B46C
	0x036395C0 STR X0, [X19 + 0x2F8]
	0x036395C4 LDR X0, [X21]
	0x036395C8 MOVZ W1, 0x2
	0x036395CC BL 0x1C16D6C
	0x036395D0 CBZ X0, 0x363B470
	0x036395D4 LDR W8, [X0 + 0x18]
	0x036395D8 CBZ W8, 0x363B46C
	0x036395DC ADRP X9, 0xB02000
	0x036395E0 LDR X9, [X9 + 0xEF0]
	0x036395E4 CMP W8, 0x1
	0x036395E8 LDR X9, [X9]
	0x036395EC STR X9, [X0 + 0x20]
	0x036395F0 B.EQ 0x363B46C
	0x036395F4 ADRP X8, 0xB03000
	0x036395F8 LDR X8, [X8 + 0x238]
	0x036395FC LDR X8, [X8]
	0x03639600 STR X8, [X0 + 0x28]
	0x03639604 LDR W8, [X22]
	0x03639608 CMP W8, 0x5C
	0x0363960C B.LS 0x363B46C
	0x03639610 STR X0, [X19 + 0x300]
	0x03639614 LDR X0, [X21]
	0x03639618 MOVZ W1, 0x2
	0x0363961C BL 0x1C16D6C
	0x03639620 CBZ X0, 0x363B470
	0x03639624 LDR W8, [X0 + 0x18]
	0x03639628 CBZ W8, 0x363B46C
	0x0363962C ADRP X9, 0xB02000
	0x03639630 LDR X9, [X9 + 0xA10]
	0x03639634 CMP W8, 0x1
	0x03639638 LDR X9, [X9]
	0x0363963C STR X9, [X0 + 0x20]
	0x03639640 B.EQ 0x363B46C
	0x03639644 ADRP X8, 0xB02000
	0x03639648 LDR X8, [X8 + 0xD90]
	0x0363964C LDR X8, [X8]
	0x03639650 STR X8, [X0 + 0x28]
	0x03639654 LDR W8, [X22]
	0x03639658 CMP W8, 0x5D
	0x0363965C B.LS 0x363B46C
	0x03639660 STR X0, [X19 + 0x308]
	0x03639664 LDR X0, [X21]
	0x03639668 MOVZ W1, 0x2
	0x0363966C BL 0x1C16D6C
	0x03639670 CBZ X0, 0x363B470
	0x03639674 LDR W8, [X0 + 0x18]
	0x03639678 CBZ W8, 0x363B46C
	0x0363967C ADRP X9, 0xB02000
	0x03639680 LDR X9, [X9 + 0xB98]
	0x03639684 CMP W8, 0x1
	0x03639688 LDR X9, [X9]
	0x0363968C STR X9, [X0 + 0x20]
	0x03639690 B.EQ 0x363B46C
	0x03639694 ADRP X8, 0xB02000
	0x03639698 LDR X8, [X8 + 0xC20]
	0x0363969C LDR X8, [X8]
	0x036396A0 STR X8, [X0 + 0x28]
	0x036396A4 LDR W8, [X22]
	0x036396A8 CMP W8, 0x5E
	0x036396AC B.LS 0x363B46C
	0x036396B0 STR X0, [X19 + 0x310]
	0x036396B4 LDR X0, [X21]
	0x036396B8 MOVZ W1, 0x2
	0x036396BC BL 0x1C16D6C
	0x036396C0 CBZ X0, 0x363B470
	0x036396C4 LDR W8, [X0 + 0x18]
	0x036396C8 CBZ W8, 0x363B46C
	0x036396CC ADRP X9, 0xB02000
	0x036396D0 LDR X9, [X9 + 0xEA0]
	0x036396D4 CMP W8, 0x1
	0x036396D8 LDR X9, [X9]
	0x036396DC STR X9, [X0 + 0x20]
	0x036396E0 B.EQ 0x363B46C
	0x036396E4 ADRP X8, 0xB03000
	0x036396E8 LDR X8, [X8 + 0x270]
	0x036396EC LDR X8, [X8]
	0x036396F0 STR X8, [X0 + 0x28]
	0x036396F4 LDR W8, [X22]
	0x036396F8 CMP W8, 0x5F
	0x036396FC B.LS 0x363B46C
	0x03639700 STR X0, [X19 + 0x318]
	0x03639704 LDR X0, [X21]
	0x03639708 MOVZ W1, 0x2
	0x0363970C BL 0x1C16D6C
	0x03639710 CBZ X0, 0x363B470
	0x03639714 LDR W8, [X0 + 0x18]
	0x03639718 CBZ W8, 0x363B46C
	0x0363971C ADRP X9, 0xB02000
	0x03639720 LDR X9, [X9 + 0xE60]
	0x03639724 CMP W8, 0x1
	0x03639728 LDR X9, [X9]
	0x0363972C STR X9, [X0 + 0x20]
	0x03639730 B.EQ 0x363B46C
	0x03639734 ADRP X8, 0xB02000
	0x03639738 LDR X8, [X8 + 0xDE8]
	0x0363973C LDR X8, [X8]
	0x03639740 STR X8, [X0 + 0x28]
	0x03639744 LDR W8, [X22]
	0x03639748 CMP W8, 0x60
	0x0363974C B.LS 0x363B46C
	0x03639750 STR X0, [X19 + 0x320]
	0x03639754 LDR X0, [X21]
	0x03639758 MOVZ W1, 0x2
	0x0363975C BL 0x1C16D6C
	0x03639760 CBZ X0, 0x363B470
	0x03639764 LDR W8, [X0 + 0x18]
	0x03639768 CBZ W8, 0x363B46C
	0x0363976C ADRP X9, 0xB02000
	0x03639770 LDR X9, [X9 + 0xB48]
	0x03639774 CMP W8, 0x1
	0x03639778 LDR X9, [X9]
	0x0363977C STR X9, [X0 + 0x20]
	0x03639780 B.EQ 0x363B46C
	0x03639784 ADRP X8, 0xB02000
	0x03639788 LDR X8, [X8 + 0xB10]
	0x0363978C LDR X8, [X8]
	0x03639790 STR X8, [X0 + 0x28]
	0x03639794 LDR W8, [X22]
	0x03639798 CMP W8, 0x61
	0x0363979C B.LS 0x363B46C
	0x036397A0 STR X0, [X19 + 0x328]
	0x036397A4 LDR X0, [X21]
	0x036397A8 MOVZ W1, 0x2
	0x036397AC BL 0x1C16D6C
	0x036397B0 CBZ X0, 0x363B470
	0x036397B4 LDR W8, [X0 + 0x18]
	0x036397B8 CBZ W8, 0x363B46C
	0x036397BC ADRP X9, 0xB02000
	0x036397C0 LDR X9, [X9 + 0xA68]
	0x036397C4 CMP W8, 0x1
	0x036397C8 LDR X9, [X9]
	0x036397CC STR X9, [X0 + 0x20]
	0x036397D0 B.EQ 0x363B46C
	0x036397D4 ADRP X8, 0xB02000
	0x036397D8 LDR X8, [X8 + 0xA28]
	0x036397DC LDR X8, [X8]
	0x036397E0 STR X8, [X0 + 0x28]
	0x036397E4 LDR W8, [X22]
	0x036397E8 CMP W8, 0x62
	0x036397EC B.LS 0x363B46C
	0x036397F0 STR X0, [X19 + 0x330]
	0x036397F4 LDR X0, [X21]
	0x036397F8 MOVZ W1, 0x2
	0x036397FC BL 0x1C16D6C
	0x03639800 CBZ X0, 0x363B470
	0x03639804 LDR W8, [X0 + 0x18]
	0x03639808 CBZ W8, 0x363B46C
	0x0363980C ADRP X9, 0xB03000
	0x03639810 LDR X9, [X9 + 0xF0]
	0x03639814 CMP W8, 0x1
	0x03639818 LDR X9, [X9]
	0x0363981C STR X9, [X0 + 0x20]
	0x03639820 B.EQ 0x363B46C
	0x03639824 ADRP X8, 0xB02000
	0x03639828 LDR X8, [X8 + 0xCF0]
	0x0363982C LDR X8, [X8]
	0x03639830 STR X8, [X0 + 0x28]
	0x03639834 LDR W8, [X22]
	0x03639838 CMP W8, 0x63
	0x0363983C B.LS 0x363B46C
	0x03639840 STR X0, [X19 + 0x338]
	0x03639844 LDR X0, [X21]
	0x03639848 MOVZ W1, 0x2
	0x0363984C BL 0x1C16D6C
	0x03639850 CBZ X0, 0x363B470
	0x03639854 LDR W8, [X0 + 0x18]
	0x03639858 CBZ W8, 0x363B46C
	0x0363985C ADRP X9, 0xB02000
	0x03639860 LDR X9, [X9 + 0xED8]
	0x03639864 CMP W8, 0x1
	0x03639868 LDR X9, [X9]
	0x0363986C STR X9, [X0 + 0x20]
	0x03639870 B.EQ 0x363B46C
	0x03639874 ADRP X8, 0xB03000
	0x03639878 LDR X8, [X8 + 0x60]
	0x0363987C LDR X8, [X8]
	0x03639880 STR X8, [X0 + 0x28]
	0x03639884 LDR W8, [X22]
	0x03639888 CMP W8, 0x64
	0x0363988C B.LS 0x363B46C
	0x03639890 STR X0, [X19 + 0x340]
	0x03639894 LDR X0, [X21]
	0x03639898 MOVZ W1, 0x2
	0x0363989C BL 0x1C16D6C
	0x036398A0 CBZ X0, 0x363B470
	0x036398A4 LDR W8, [X0 + 0x18]
	0x036398A8 CBZ W8, 0x363B46C
	0x036398AC ADRP X9, 0xB02000
	0x036398B0 LDR X9, [X9 + 0xA18]
	0x036398B4 CMP W8, 0x1
	0x036398B8 LDR X9, [X9]
	0x036398BC STR X9, [X0 + 0x20]
	0x036398C0 B.EQ 0x363B46C
	0x036398C4 ADRP X8, 0xB02000
	0x036398C8 LDR X8, [X8 + 0xB68]
	0x036398CC LDR X8, [X8]
	0x036398D0 STR X8, [X0 + 0x28]
	0x036398D4 LDR W8, [X22]
	0x036398D8 CMP W8, 0x65
	0x036398DC B.LS 0x363B46C
	0x036398E0 STR X0, [X19 + 0x348]
	0x036398E4 LDR X0, [X21]
	0x036398E8 MOVZ W1, 0x2
	0x036398EC BL 0x1C16D6C
	0x036398F0 CBZ X0, 0x363B470
	0x036398F4 LDR W8, [X0 + 0x18]
	0x036398F8 CBZ W8, 0x363B46C
	0x036398FC ADRP X9, 0xB03000
	0x03639900 LDR X9, [X9 + 0x8]
	0x03639904 CMP W8, 0x1
	0x03639908 LDR X9, [X9]
	0x0363990C STR X9, [X0 + 0x20]
	0x03639910 B.EQ 0x363B46C
	0x03639914 ADRP X8, 0xB02000
	0x03639918 LDR X8, [X8 + 0xFF0]
	0x0363991C LDR X8, [X8]
	0x03639920 STR X8, [X0 + 0x28]
	0x03639924 LDR W8, [X22]
	0x03639928 CMP W8, 0x66
	0x0363992C B.LS 0x363B46C
	0x03639930 STR X0, [X19 + 0x350]
	0x03639934 LDR X0, [X21]
	0x03639938 MOVZ W1, 0x2
	0x0363993C BL 0x1C16D6C
	0x03639940 CBZ X0, 0x363B470
	0x03639944 LDR W8, [X0 + 0x18]
	0x03639948 CBZ W8, 0x363B46C
	0x0363994C ADRP X9, 0xB03000
	0x03639950 LDR X9, [X9 + 0x38]
	0x03639954 CMP W8, 0x1
	0x03639958 LDR X9, [X9]
	0x0363995C STR X9, [X0 + 0x20]
	0x03639960 B.EQ 0x363B46C
	0x03639964 ADRP X8, 0xB02000
	0x03639968 LDR X8, [X8 + 0xF98]
	0x0363996C LDR X8, [X8]
	0x03639970 STR X8, [X0 + 0x28]
	0x03639974 LDR W8, [X22]
	0x03639978 CMP W8, 0x67
	0x0363997C B.LS 0x363B46C
	0x03639980 STR X0, [X19 + 0x358]
	0x03639984 LDR X0, [X21]
	0x03639988 MOVZ W1, 0x2
	0x0363998C BL 0x1C16D6C
	0x03639990 CBZ X0, 0x363B470
	0x03639994 LDR W8, [X0 + 0x18]
	0x03639998 CBZ W8, 0x363B46C
	0x0363999C ADRP X9, 0xB02000
	0x036399A0 LDR X9, [X9 + 0xCE0]
	0x036399A4 CMP W8, 0x1
	0x036399A8 LDR X9, [X9]
	0x036399AC STR X9, [X0 + 0x20]
	0x036399B0 B.EQ 0x363B46C
	0x036399B4 ADRP X8, 0xB02000
	0x036399B8 LDR X8, [X8 + 0xA00]
	0x036399BC LDR X8, [X8]
	0x036399C0 STR X8, [X0 + 0x28]
	0x036399C4 LDR W8, [X22]
	0x036399C8 CMP W8, 0x68
	0x036399CC B.LS 0x363B46C
	0x036399D0 STR X0, [X19 + 0x360]
	0x036399D4 LDR X0, [X21]
	0x036399D8 MOVZ W1, 0x2
	0x036399DC BL 0x1C16D6C
	0x036399E0 CBZ X0, 0x363B470
	0x036399E4 LDR W8, [X0 + 0x18]
	0x036399E8 CBZ W8, 0x363B46C
	0x036399EC ADRP X9, 0xB02000
	0x036399F0 LDR X9, [X9 + 0xF48]
	0x036399F4 CMP W8, 0x1
	0x036399F8 LDR X9, [X9]
	0x036399FC STR X9, [X0 + 0x20]
	0x03639A00 B.EQ 0x363B46C
	0x03639A04 ADRP X8, 0xB02000
	0x03639A08 LDR X8, [X8 + 0xA90]
	0x03639A0C LDR X8, [X8]
	0x03639A10 STR X8, [X0 + 0x28]
	0x03639A14 LDR W8, [X22]
	0x03639A18 CMP W8, 0x69
	0x03639A1C B.LS 0x363B46C
	0x03639A20 STR X0, [X19 + 0x368]
	0x03639A24 LDR X0, [X21]
	0x03639A28 MOVZ W1, 0x2
	0x03639A2C BL 0x1C16D6C
	0x03639A30 CBZ X0, 0x363B470
	0x03639A34 LDR W8, [X0 + 0x18]
	0x03639A38 CBZ W8, 0x363B46C
	0x03639A3C ADRP X9, 0xB02000
	0x03639A40 LDR X9, [X9 + 0xC48]
	0x03639A44 CMP W8, 0x1
	0x03639A48 LDR X9, [X9]
	0x03639A4C STR X9, [X0 + 0x20]
	0x03639A50 B.EQ 0x363B46C
	0x03639A54 ADRP X8, 0xB03000
	0x03639A58 LDR X8, [X8 + 0x100]
	0x03639A5C LDR X8, [X8]
	0x03639A60 STR X8, [X0 + 0x28]
	0x03639A64 LDR W8, [X22]
	0x03639A68 CMP W8, 0x6A
	0x03639A6C B.LS 0x363B46C
	0x03639A70 STR X0, [X19 + 0x370]
	0x03639A74 LDR X0, [X21]
	0x03639A78 MOVZ W1, 0x2
	0x03639A7C BL 0x1C16D6C
	0x03639A80 CBZ X0, 0x363B470
	0x03639A84 LDR W8, [X0 + 0x18]
	0x03639A88 CBZ W8, 0x363B46C
	0x03639A8C ADRP X9, 0xB02000
	0x03639A90 LDR X9, [X9 + 0xD10]
	0x03639A94 CMP W8, 0x1
	0x03639A98 LDR X9, [X9]
	0x03639A9C STR X9, [X0 + 0x20]
	0x03639AA0 B.EQ 0x363B46C
	0x03639AA4 ADRP X8, 0xB03000
	0x03639AA8 LDR X8, [X8 + 0x268]
	0x03639AAC LDR X8, [X8]
	0x03639AB0 STR X8, [X0 + 0x28]
	0x03639AB4 LDR W8, [X22]
	0x03639AB8 CMP W8, 0x6B
	0x03639ABC B.LS 0x363B46C
	0x03639AC0 STR X0, [X19 + 0x378]
	0x03639AC4 LDR X0, [X21]
	0x03639AC8 MOVZ W1, 0x2
	0x03639ACC BL 0x1C16D6C
	0x03639AD0 CBZ X0, 0x363B470
	0x03639AD4 LDR W8, [X0 + 0x18]
	0x03639AD8 CBZ W8, 0x363B46C
	0x03639ADC ADRP X9, 0xB03000
	0x03639AE0 LDR X9, [X9 + 0x258]
	0x03639AE4 CMP W8, 0x1
	0x03639AE8 LDR X9, [X9]
	0x03639AEC STR X9, [X0 + 0x20]
	0x03639AF0 B.EQ 0x363B46C
	0x03639AF4 ADRP X8, 0xB02000
	0x03639AF8 LDR X8, [X8 + 0xEE8]
	0x03639AFC LDR X8, [X8]
	0x03639B00 STR X8, [X0 + 0x28]
	0x03639B04 LDR W8, [X22]
	0x03639B08 CMP W8, 0x6C
	0x03639B0C B.LS 0x363B46C
	0x03639B10 STR X0, [X19 + 0x380]
	0x03639B14 LDR X0, [X21]
	0x03639B18 MOVZ W1, 0x2
	0x03639B1C BL 0x1C16D6C
	0x03639B20 CBZ X0, 0x363B470
	0x03639B24 LDR W8, [X0 + 0x18]
	0x03639B28 CBZ W8, 0x363B46C
	0x03639B2C ADRP X9, 0xB03000
	0x03639B30 LDR X9, [X9 + 0x1D0]
	0x03639B34 CMP W8, 0x1
	0x03639B38 LDR X9, [X9]
	0x03639B3C STR X9, [X0 + 0x20]
	0x03639B40 B.EQ 0x363B46C
	0x03639B44 ADRP X8, 0xB02000
	0x03639B48 LDR X8, [X8 + 0xE58]
	0x03639B4C LDR X8, [X8]
	0x03639B50 STR X8, [X0 + 0x28]
	0x03639B54 LDR W8, [X22]
	0x03639B58 CMP W8, 0x6D
	0x03639B5C B.LS 0x363B46C
	0x03639B60 STR X0, [X19 + 0x388]
	0x03639B64 LDR X0, [X21]
	0x03639B68 MOVZ W1, 0x2
	0x03639B6C BL 0x1C16D6C
	0x03639B70 CBZ X0, 0x363B470
	0x03639B74 LDR W8, [X0 + 0x18]
	0x03639B78 CBZ W8, 0x363B46C
	0x03639B7C ADRP X9, 0xB03000
	0x03639B80 LDR X9, [X9 + 0x70]
	0x03639B84 CMP W8, 0x1
	0x03639B88 LDR X9, [X9]
	0x03639B8C STR X9, [X0 + 0x20]
	0x03639B90 B.EQ 0x363B46C
	0x03639B94 ADRP X8, 0xB03000
	0x03639B98 LDR X8, [X8 + 0x20]
	0x03639B9C LDR X8, [X8]
	0x03639BA0 STR X8, [X0 + 0x28]
	0x03639BA4 LDR W8, [X22]
	0x03639BA8 CMP W8, 0x6E
	0x03639BAC B.LS 0x363B46C
	0x03639BB0 STR X0, [X19 + 0x390]
	0x03639BB4 LDR X0, [X21]
	0x03639BB8 MOVZ W1, 0x2
	0x03639BBC BL 0x1C16D6C
	0x03639BC0 CBZ X0, 0x363B470
	0x03639BC4 LDR W8, [X0 + 0x18]
	0x03639BC8 CBZ W8, 0x363B46C
	0x03639BCC ADRP X9, 0xB02000
	0x03639BD0 LDR X9, [X9 + 0xD60]
	0x03639BD4 CMP W8, 0x1
	0x03639BD8 LDR X9, [X9]
	0x03639BDC STR X9, [X0 + 0x20]
	0x03639BE0 B.EQ 0x363B46C
	0x03639BE4 ADRP X8, 0xB02000
	0x03639BE8 LDR X8, [X8 + 0xEA8]
	0x03639BEC LDR X8, [X8]
	0x03639BF0 STR X8, [X0 + 0x28]
	0x03639BF4 LDR W8, [X22]
	0x03639BF8 CMP W8, 0x6F
	0x03639BFC B.LS 0x363B46C
	0x03639C00 STR X0, [X19 + 0x398]
	0x03639C04 LDR X8, [X23]
	0x03639C08 ADRP X9, 0xB02000
	0x03639C0C MOVZ W1, 0x5E
	0x03639C10 LDR X8, [X8 + 0xB8]
	0x03639C14 LDR X9, [X9 + 0x9D8]
	0x03639C18 STR X19, [X8 + 0x60]
	0x03639C1C LDR X0, [X9]
	0x03639C20 BL 0x1C16D6C
	0x03639C24 MOV X19, X0
	0x03639C28 ADD X0, X31, 0x5E0
	0x03639C2C MOVZ W1, 0x41
	0x03639C30 MOVZ W2, 0x5A
	0x03639C34 MOVZ W3, 0x1
	0x03639C38 MOVZ W4, 0x20
	0x03639C3C MOV X5, X31
	0x03639C40 STR W31, [X31 + 0x5E8]
	0x03639C44 STR X31, [X31 + 0x5E0]
	0x03639C48 BL 0x363B588
	0x03639C4C CBZ X19, 0x363B470
	0x03639C50 LDR W8, [X19 + 0x18]
	0x03639C54 CBZ W8, 0x363B46C
	0x03639C58 LDR X8, [X31 + 0x5E0]
	0x03639C5C LDR W9, [X31 + 0x5E8]
	0x03639C60 ADD X0, X31, 0x5D0
	0x03639C64 MOVZ W1, 0xC0
	0x03639C68 MOVZ W2, 0xDE
	0x03639C6C MOVZ W3, 0x1
	0x03639C70 MOVZ W4, 0x20
	0x03639C74 MOV X5, X31
	0x03639C78 STR X8, [X19 + 0x20]
	0x03639C7C STR W9, [X19 + 0x28]
	0x03639C80 STR W31, [X31 + 0x5D8]
	0x03639C84 STR X31, [X31 + 0x5D0]
	0x03639C88 BL 0x363B588
	0x03639C8C LDR W8, [X19 + 0x18]
	0x03639C90 CMP W8, 0x1
	0x03639C94 B.LS 0x363B46C
	0x03639C98 LDR X8, [X31 + 0x5D0]
	0x03639C9C LDR W9, [X31 + 0x5D8]
	0x03639CA0 ADD X0, X31, 0x5C0
	0x03639CA4 MOVZ W1, 0x100
	0x03639CA8 MOVZ W2, 0x12E
	0x03639CAC MOVZ W3, 0x2
	0x03639CB0 MOV W4, W31
	0x03639CB4 MOV X5, X31
	0x03639CB8 STUR X8, [X19 + 0x2C]
	0x03639CBC STR W9, [X19 + 0x34]
	0x03639CC0 STR W31, [X31 + 0x5C8]
	0x03639CC4 STR X31, [X31 + 0x5C0]
	0x03639CC8 BL 0x363B588
	0x03639CCC LDR W8, [X19 + 0x18]
	0x03639CD0 CMP W8, 0x2
	0x03639CD4 B.LS 0x363B46C
	0x03639CD8 LDR X8, [X31 + 0x5C0]
	0x03639CDC LDR W9, [X31 + 0x5C8]
	0x03639CE0 ADD X0, X31, 0x5B0
	0x03639CE4 MOVZ W1, 0x130
	0x03639CE8 MOVZ W2, 0x130
	0x03639CEC MOVZ W4, 0x69
	0x03639CF0 MOV W3, W31
	0x03639CF4 MOV X5, X31
	0x03639CF8 STR X8, [X19 + 0x38]
	0x03639CFC STR W9, [X19 + 0x40]
	0x03639D00 STR W31, [X31 + 0x5B8]
	0x03639D04 STR X31, [X31 + 0x5B0]
	0x03639D08 BL 0x363B588
	0x03639D0C LDR W8, [X19 + 0x18]
	0x03639D10 CMP W8, 0x3
	0x03639D14 B.LS 0x363B46C
	0x03639D18 LDR X8, [X31 + 0x5B0]
	0x03639D1C LDR W9, [X31 + 0x5B8]
	0x03639D20 ADD X0, X31, 0x5A0
	0x03639D24 MOVZ W1, 0x132
	0x03639D28 MOVZ W2, 0x136
	0x03639D2C MOVZ W3, 0x2
	0x03639D30 MOV W4, W31
	0x03639D34 MOV X5, X31
	0x03639D38 STUR X8, [X19 + 0x44]
	0x03639D3C STR W9, [X19 + 0x4C]
	0x03639D40 STR W31, [X31 + 0x5A8]
	0x03639D44 STR X31, [X31 + 0x5A0]
	0x03639D48 BL 0x363B588
	0x03639D4C LDR W8, [X19 + 0x18]
	0x03639D50 CMP W8, 0x4
	0x03639D54 B.LS 0x363B46C
	0x03639D58 LDR X8, [X31 + 0x5A0]
	0x03639D5C LDR W9, [X31 + 0x5A8]
	0x03639D60 ADD X0, X31, 0x590
	0x03639D64 MOVZ W1, 0x139
	0x03639D68 MOVZ W2, 0x147
	0x03639D6C MOVZ W3, 0x3
	0x03639D70 MOV W4, W31
	0x03639D74 MOV X5, X31
	0x03639D78 STR X8, [X19 + 0x50]
	0x03639D7C STR W9, [X19 + 0x58]
	0x03639D80 STR W31, [X31 + 0x598]
	0x03639D84 STR X31, [X31 + 0x590]
	0x03639D88 BL 0x363B588
	0x03639D8C LDR W8, [X19 + 0x18]
	0x03639D90 CMP W8, 0x5
	0x03639D94 B.LS 0x363B46C
	0x03639D98 LDR X8, [X31 + 0x590]
	0x03639D9C LDR W9, [X31 + 0x598]
	0x03639DA0 ADD X0, X31, 0x580
	0x03639DA4 MOVZ W1, 0x14A
	0x03639DA8 MOVZ W2, 0x176
	0x03639DAC MOVZ W3, 0x2
	0x03639DB0 MOV W4, W31
	0x03639DB4 MOV X5, X31
	0x03639DB8 STUR X8, [X19 + 0x5C]
	0x03639DBC STR W9, [X19 + 0x64]
	0x03639DC0 STR W31, [X31 + 0x588]
	0x03639DC4 STR X31, [X31 + 0x580]
	0x03639DC8 BL 0x363B588
	0x03639DCC LDR W8, [X19 + 0x18]
	0x03639DD0 CMP W8, 0x6
	0x03639DD4 B.LS 0x363B46C
	0x03639DD8 LDR X8, [X31 + 0x580]
	0x03639DDC LDR W9, [X31 + 0x588]
	0x03639DE0 ADD X0, X31, 0x570
	0x03639DE4 MOVZ W1, 0x178
	0x03639DE8 MOVZ W2, 0x178
	0x03639DEC MOVZ W4, 0xFF
	0x03639DF0 MOV W3, W31
	0x03639DF4 MOV X5, X31
	0x03639DF8 STR X8, [X19 + 0x68]
	0x03639DFC STR W9, [X19 + 0x70]
	0x03639E00 STR W31, [X31 + 0x578]
	0x03639E04 STR X31, [X31 + 0x570]
	0x03639E08 BL 0x363B588
	0x03639E0C LDR W8, [X19 + 0x18]
	0x03639E10 CMP W8, 0x7
	0x03639E14 B.LS 0x363B46C
	0x03639E18 LDR X8, [X31 + 0x570]
	0x03639E1C LDR W9, [X31 + 0x578]
	0x03639E20 ADD X0, X31, 0x560
	0x03639E24 MOVZ W1, 0x179
	0x03639E28 MOVZ W2, 0x17D
	0x03639E2C MOVZ W3, 0x3
	0x03639E30 MOV W4, W31
	0x03639E34 MOV X5, X31
	0x03639E38 STUR X8, [X19 + 0x74]
	0x03639E3C STR W9, [X19 + 0x7C]
	0x03639E40 STR W31, [X31 + 0x568]
	0x03639E44 STR X31, [X31 + 0x560]
	0x03639E48 BL 0x363B588
	0x03639E4C LDR W8, [X19 + 0x18]
	0x03639E50 CMP W8, 0x8
	0x03639E54 B.LS 0x363B46C
	0x03639E58 LDR X8, [X31 + 0x560]
	0x03639E5C LDR W9, [X31 + 0x568]
	0x03639E60 ADD X0, X31, 0x550
	0x03639E64 MOVZ W1, 0x181
	0x03639E68 MOVZ W2, 0x181
	0x03639E6C MOVZ W4, 0x253
	0x03639E70 MOV W3, W31
	0x03639E74 MOV X5, X31
	0x03639E78 STR X8, [X19 + 0x80]
	0x03639E7C STR W9, [X19 + 0x88]
	0x03639E80 STR W31, [X31 + 0x558]
	0x03639E84 STR X31, [X31 + 0x550]
	0x03639E88 BL 0x363B588
	0x03639E8C LDR W8, [X19 + 0x18]
	0x03639E90 CMP W8, 0x9
	0x03639E94 B.LS 0x363B46C
	0x03639E98 LDR X8, [X31 + 0x550]
	0x03639E9C LDR W9, [X31 + 0x558]
	0x03639EA0 ADD X0, X31, 0x540
	0x03639EA4 MOVZ W1, 0x182
	0x03639EA8 MOVZ W2, 0x184
	0x03639EAC MOVZ W3, 0x2
	0x03639EB0 MOV W4, W31
	0x03639EB4 MOV X5, X31
	0x03639EB8 STUR X8, [X19 + 0x8C]
	0x03639EBC STR W9, [X19 + 0x94]
	0x03639EC0 STR W31, [X31 + 0x548]
	0x03639EC4 STR X31, [X31 + 0x540]
	0x03639EC8 BL 0x363B588
	0x03639ECC LDR W8, [X19 + 0x18]
	0x03639ED0 CMP W8, 0xA
	0x03639ED4 B.LS 0x363B46C
	0x03639ED8 LDR X8, [X31 + 0x540]
	0x03639EDC LDR W9, [X31 + 0x548]
	0x03639EE0 ADD X0, X31, 0x530
	0x03639EE4 MOVZ W1, 0x186
	0x03639EE8 MOVZ W2, 0x186
	0x03639EEC MOVZ W4, 0x254
	0x03639EF0 MOV W3, W31
	0x03639EF4 MOV X5, X31
	0x03639EF8 STR X8, [X19 + 0x98]
	0x03639EFC STR W9, [X19 + 0xA0]
	0x03639F00 STR W31, [X31 + 0x538]
	0x03639F04 STR X31, [X31 + 0x530]
	0x03639F08 BL 0x363B588
	0x03639F0C LDR W8, [X19 + 0x18]
	0x03639F10 CMP W8, 0xB
	0x03639F14 B.LS 0x363B46C
	0x03639F18 LDR X8, [X31 + 0x530]
	0x03639F1C LDR W9, [X31 + 0x538]
	0x03639F20 ADD X0, X31, 0x520
	0x03639F24 MOVZ W1, 0x187
	0x03639F28 MOVZ W2, 0x187
	0x03639F2C MOVZ W4, 0x188
	0x03639F30 MOV W3, W31
	0x03639F34 MOV X5, X31
	0x03639F38 STUR X8, [X19 + 0xA4]
	0x03639F3C STR W9, [X19 + 0xAC]
	0x03639F40 STR W31, [X31 + 0x528]
	0x03639F44 STR X31, [X31 + 0x520]
	0x03639F48 BL 0x363B588
	0x03639F4C LDR W8, [X19 + 0x18]
	0x03639F50 CMP W8, 0xC
	0x03639F54 B.LS 0x363B46C
	0x03639F58 LDR X8, [X31 + 0x520]
	0x03639F5C LDR W9, [X31 + 0x528]
	0x03639F60 ADD X0, X31, 0x510
	0x03639F64 MOVZ W1, 0x189
	0x03639F68 MOVZ W2, 0x18A
	0x03639F6C MOVZ W3, 0x1
	0x03639F70 MOVZ W4, 0xCD
	0x03639F74 MOV X5, X31
	0x03639F78 STR X8, [X19 + 0xB0]
	0x03639F7C STR W9, [X19 + 0xB8]
	0x03639F80 STR W31, [X31 + 0x518]
	0x03639F84 STR X31, [X31 + 0x510]
	0x03639F88 BL 0x363B588
	0x03639F8C LDR W8, [X19 + 0x18]
	0x03639F90 CMP W8, 0xD
	0x03639F94 B.LS 0x363B46C
	0x03639F98 LDR X8, [X31 + 0x510]
	0x03639F9C LDR W9, [X31 + 0x518]
	0x03639FA0 ADD X0, X31, 0x500
	0x03639FA4 MOVZ W1, 0x18B
	0x03639FA8 MOVZ W2, 0x18B
	0x03639FAC MOVZ W4, 0x18C
	0x03639FB0 MOV W3, W31
	0x03639FB4 MOV X5, X31
	0x03639FB8 STUR X8, [X19 + 0xBC]
	0x03639FBC STR W9, [X19 + 0xC4]
	0x03639FC0 STR W31, [X31 + 0x508]
	0x03639FC4 STR X31, [X31 + 0x500]
	0x03639FC8 BL 0x363B588
	0x03639FCC LDR W8, [X19 + 0x18]
	0x03639FD0 CMP W8, 0xE
	0x03639FD4 B.LS 0x363B46C
	0x03639FD8 LDR X8, [X31 + 0x500]
	0x03639FDC LDR W9, [X31 + 0x508]
	0x03639FE0 ADD X0, X31, 0x4F0
	0x03639FE4 MOVZ W1, 0x18E
	0x03639FE8 MOVZ W2, 0x18E
	0x03639FEC MOVZ W4, 0x1DD
	0x03639FF0 MOV W3, W31
	0x03639FF4 MOV X5, X31
	0x03639FF8 STR X8, [X19 + 0xC8]
	0x03639FFC STR W9, [X19 + 0xD0]
	0x0363A000 STR W31, [X31 + 0x4F8]
	0x0363A004 STR X31, [X31 + 0x4F0]
	0x0363A008 BL 0x363B588
	0x0363A00C LDR W8, [X19 + 0x18]
	0x0363A010 CMP W8, 0xF
	0x0363A014 B.LS 0x363B46C
	0x0363A018 LDR X8, [X31 + 0x4F0]
	0x0363A01C LDR W9, [X31 + 0x4F8]
	0x0363A020 ADD X0, X31, 0x4E0
	0x0363A024 MOVZ W1, 0x18F
	0x0363A028 MOVZ W2, 0x18F
	0x0363A02C MOVZ W4, 0x259
	0x0363A030 MOV W3, W31
	0x0363A034 MOV X5, X31
	0x0363A038 STUR X8, [X19 + 0xD4]
	0x0363A03C STR W9, [X19 + 0xDC]
	0x0363A040 STR W31, [X31 + 0x4E8]
	0x0363A044 STR X31, [X31 + 0x4E0]
	0x0363A048 BL 0x363B588
	0x0363A04C LDR W8, [X19 + 0x18]
	0x0363A050 CMP W8, 0x10
	0x0363A054 B.LS 0x363B46C
	0x0363A058 LDR X8, [X31 + 0x4E0]
	0x0363A05C LDR W9, [X31 + 0x4E8]
	0x0363A060 ADD X0, X31, 0x4D0
	0x0363A064 MOVZ W1, 0x190
	0x0363A068 MOVZ W2, 0x190
	0x0363A06C MOVZ W4, 0x25B
	0x0363A070 MOV W3, W31
	0x0363A074 MOV X5, X31
	0x0363A078 STR X8, [X19 + 0xE0]
	0x0363A07C STR W9, [X19 + 0xE8]
	0x0363A080 STR W31, [X31 + 0x4D8]
	0x0363A084 STR X31, [X31 + 0x4D0]
	0x0363A088 BL 0x363B588
	0x0363A08C LDR W8, [X19 + 0x18]
	0x0363A090 CMP W8, 0x11
	0x0363A094 B.LS 0x363B46C
	0x0363A098 LDR X8, [X31 + 0x4D0]
	0x0363A09C LDR W9, [X31 + 0x4D8]
	0x0363A0A0 ADD X0, X31, 0x4C0
	0x0363A0A4 MOVZ W1, 0x191
	0x0363A0A8 MOVZ W2, 0x191
	0x0363A0AC MOVZ W4, 0x192
	0x0363A0B0 MOV W3, W31
	0x0363A0B4 MOV X5, X31
	0x0363A0B8 STUR X8, [X19 + 0xEC]
	0x0363A0BC STR W9, [X19 + 0xF4]
	0x0363A0C0 STR W31, [X31 + 0x4C8]
	0x0363A0C4 STR X31, [X31 + 0x4C0]
	0x0363A0C8 BL 0x363B588
	0x0363A0CC LDR W8, [X19 + 0x18]
	0x0363A0D0 CMP W8, 0x12
	0x0363A0D4 B.LS 0x363B46C
	0x0363A0D8 LDR X8, [X31 + 0x4C0]
	0x0363A0DC LDR W9, [X31 + 0x4C8]
	0x0363A0E0 ADD X0, X31, 0x4B0
	0x0363A0E4 MOVZ W1, 0x193
	0x0363A0E8 MOVZ W2, 0x193
	0x0363A0EC MOVZ W4, 0x260
	0x0363A0F0 MOV W3, W31
	0x0363A0F4 MOV X5, X31
	0x0363A0F8 STR X8, [X19 + 0xF8]
	0x0363A0FC STR W9, [X19 + 0x100]
	0x0363A100 STR W31, [X31 + 0x4B8]
	0x0363A104 STR X31, [X31 + 0x4B0]
	0x0363A108 BL 0x363B588
	0x0363A10C LDR W8, [X19 + 0x18]
	0x0363A110 CMP W8, 0x13
	0x0363A114 B.LS 0x363B46C
	0x0363A118 LDR X8, [X31 + 0x4B0]
	0x0363A11C LDR W9, [X31 + 0x4B8]
	0x0363A120 ADD X10, X19, 0x104
	0x0363A124 ADD X0, X31, 0x4A0
	0x0363A128 MOVZ W1, 0x194
	0x0363A12C MOVZ W2, 0x194
	0x0363A130 MOVZ W4, 0x263
	0x0363A134 MOV W3, W31
	0x0363A138 MOV X5, X31
	0x0363A13C STR X8, [X10]
	0x0363A140 STR W9, [X19 + 0x10C]
	0x0363A144 STR W31, [X31 + 0x4A8]
	0x0363A148 STR X31, [X31 + 0x4A0]
	0x0363A14C BL 0x363B588
	0x0363A150 LDR W8, [X19 + 0x18]
	0x0363A154 CMP W8, 0x14
	0x0363A158 B.LS 0x363B46C
	0x0363A15C LDR X8, [X31 + 0x4A0]
	0x0363A160 LDR W9, [X31 + 0x4A8]
	0x0363A164 ADD X0, X31, 0x490
	0x0363A168 MOVZ W1, 0x196
	0x0363A16C MOVZ W2, 0x196
	0x0363A170 MOVZ W4, 0x269
	0x0363A174 MOV W3, W31
	0x0363A178 MOV X5, X31
	0x0363A17C STR X8, [X19 + 0x110]
	0x0363A180 STR W9, [X19 + 0x118]
	0x0363A184 STR W31, [X31 + 0x498]
	0x0363A188 STR X31, [X31 + 0x490]
	0x0363A18C BL 0x363B588
	0x0363A190 LDR W8, [X19 + 0x18]
	0x0363A194 CMP W8, 0x15
	0x0363A198 B.LS 0x363B46C
	0x0363A19C LDR X8, [X31 + 0x490]
	0x0363A1A0 LDR W9, [X31 + 0x498]
	0x0363A1A4 ADD X10, X19, 0x11C
	0x0363A1A8 ADD X0, X31, 0x480
	0x0363A1AC MOVZ W1, 0x197
	0x0363A1B0 MOVZ W2, 0x197
	0x0363A1B4 MOVZ W4, 0x268
	0x0363A1B8 MOV W3, W31
	0x0363A1BC MOV X5, X31
	0x0363A1C0 STR X8, [X10]
	0x0363A1C4 STR W9, [X10 + 0x8]
	0x0363A1C8 STR W31, [X31 + 0x488]
	0x0363A1CC STR X31, [X31 + 0x480]
	0x0363A1D0 BL 0x363B588
	0x0363A1D4 LDR W8, [X19 + 0x18]
	0x0363A1D8 CMP W8, 0x16
	0x0363A1DC B.LS 0x363B46C
	0x0363A1E0 LDR X8, [X31 + 0x480]
	0x0363A1E4 LDR W9, [X31 + 0x488]
	0x0363A1E8 ADD X0, X31, 0x470
	0x0363A1EC MOVZ W1, 0x198
	0x0363A1F0 MOVZ W2, 0x198
	0x0363A1F4 MOVZ W4, 0x199
	0x0363A1F8 MOV W3, W31
	0x0363A1FC MOV X5, X31
	0x0363A200 STR X8, [X19 + 0x128]
	0x0363A204 STR W9, [X19 + 0x130]
	0x0363A208 STR W31, [X31 + 0x478]
	0x0363A20C STR X31, [X31 + 0x470]
	0x0363A210 BL 0x363B588
	0x0363A214 LDR W8, [X19 + 0x18]
	0x0363A218 CMP W8, 0x17
	0x0363A21C B.LS 0x363B46C
	0x0363A220 LDR X8, [X31 + 0x470]
	0x0363A224 LDR W9, [X31 + 0x478]
	0x0363A228 ADD X10, X19, 0x134
	0x0363A22C ADD X0, X31, 0x460
	0x0363A230 MOVZ W1, 0x19C
	0x0363A234 MOVZ W2, 0x19C
	0x0363A238 MOVZ W4, 0x26F
	0x0363A23C MOV W3, W31
	0x0363A240 MOV X5, X31
	0x0363A244 STR X8, [X10]
	0x0363A248 STR W9, [X10 + 0x8]
	0x0363A24C STR W31, [X31 + 0x468]
	0x0363A250 STR X31, [X31 + 0x460]
	0x0363A254 BL 0x363B588
	0x0363A258 LDR W8, [X19 + 0x18]
	0x0363A25C CMP W8, 0x18
	0x0363A260 B.LS 0x363B46C
	0x0363A264 LDR X8, [X31 + 0x460]
	0x0363A268 LDR W9, [X31 + 0x468]
	0x0363A26C ADD X0, X31, 0x450
	0x0363A270 MOVZ W1, 0x19D
	0x0363A274 MOVZ W2, 0x19D
	0x0363A278 MOVZ W4, 0x272
	0x0363A27C MOV W3, W31
	0x0363A280 MOV X5, X31
	0x0363A284 STR X8, [X19 + 0x140]
	0x0363A288 STR W9, [X19 + 0x148]
	0x0363A28C STR W31, [X31 + 0x458]
	0x0363A290 STR X31, [X31 + 0x450]
	0x0363A294 BL 0x363B588
	0x0363A298 LDR W8, [X19 + 0x18]
	0x0363A29C CMP W8, 0x19
	0x0363A2A0 B.LS 0x363B46C
	0x0363A2A4 LDR X8, [X31 + 0x450]
	0x0363A2A8 LDR W9, [X31 + 0x458]
	0x0363A2AC ADD X10, X19, 0x14C
	0x0363A2B0 ADD X0, X31, 0x440
	0x0363A2B4 MOVZ W1, 0x19F
	0x0363A2B8 MOVZ W2, 0x19F
	0x0363A2BC MOVZ W4, 0x275
	0x0363A2C0 MOV W3, W31
	0x0363A2C4 MOV X5, X31
	0x0363A2C8 STR X8, [X10]
	0x0363A2CC STR W9, [X10 + 0x8]
	0x0363A2D0 STR W31, [X31 + 0x448]
	0x0363A2D4 STR X31, [X31 + 0x440]
	0x0363A2D8 BL 0x363B588
	0x0363A2DC LDR W8, [X19 + 0x18]
	0x0363A2E0 CMP W8, 0x1A
	0x0363A2E4 B.LS 0x363B46C
	0x0363A2E8 LDR X8, [X31 + 0x440]
	0x0363A2EC LDR W9, [X31 + 0x448]
	0x0363A2F0 ADD X0, X31, 0x430
	0x0363A2F4 MOVZ W1, 0x1A0
	0x0363A2F8 MOVZ W2, 0x1A4
	0x0363A2FC MOVZ W3, 0x2
	0x0363A300 MOV W4, W31
	0x0363A304 MOV X5, X31
	0x0363A308 STR X8, [X19 + 0x158]
	0x0363A30C STR W9, [X19 + 0x160]
	0x0363A310 STR W31, [X31 + 0x438]
	0x0363A314 STR X31, [X31 + 0x430]
	0x0363A318 BL 0x363B588
	0x0363A31C LDR W8, [X19 + 0x18]
	0x0363A320 CMP W8, 0x1B
	0x0363A324 B.LS 0x363B46C
	0x0363A328 LDR X8, [X31 + 0x430]
	0x0363A32C LDR W9, [X31 + 0x438]
	0x0363A330 ADD X10, X19, 0x164
	0x0363A334 ADD X0, X31, 0x420
	0x0363A338 MOVZ W1, 0x1A7
	0x0363A33C MOVZ W2, 0x1A7
	0x0363A340 MOVZ W4, 0x1A8
	0x0363A344 MOV W3, W31
	0x0363A348 MOV X5, X31
	0x0363A34C STR X8, [X10]
	0x0363A350 STR W9, [X10 + 0x8]
	0x0363A354 STR W31, [X31 + 0x428]
	0x0363A358 STR X31, [X31 + 0x420]
	0x0363A35C BL 0x363B588
	0x0363A360 LDR W8, [X19 + 0x18]
	0x0363A364 CMP W8, 0x1C
	0x0363A368 B.LS 0x363B46C
	0x0363A36C LDR X8, [X31 + 0x420]
	0x0363A370 LDR W9, [X31 + 0x428]
	0x0363A374 ADD X0, X31, 0x410
	0x0363A378 MOVZ W1, 0x1A9
	0x0363A37C MOVZ W2, 0x1A9
	0x0363A380 MOVZ W4, 0x283
	0x0363A384 MOV W3, W31
	0x0363A388 MOV X5, X31
	0x0363A38C STR X8, [X19 + 0x170]
	0x0363A390 STR W9, [X19 + 0x178]
	0x0363A394 STR W31, [X31 + 0x418]
	0x0363A398 STR X31, [X31 + 0x410]
	0x0363A39C BL 0x363B588
	0x0363A3A0 LDR W8, [X19 + 0x18]
	0x0363A3A4 CMP W8, 0x1D
	0x0363A3A8 B.LS 0x363B46C
	0x0363A3AC LDR X8, [X31 + 0x410]
	0x0363A3B0 LDR W9, [X31 + 0x418]
	0x0363A3B4 ADD X10, X19, 0x17C
	0x0363A3B8 ADD X0, X31, 0x400
	0x0363A3BC MOVZ W1, 0x1AC
	0x0363A3C0 MOVZ W2, 0x1AC
	0x0363A3C4 MOVZ W4, 0x1AD
	0x0363A3C8 MOV W3, W31
	0x0363A3CC MOV X5, X31
	0x0363A3D0 STR X8, [X10]
	0x0363A3D4 STR W9, [X10 + 0x8]
	0x0363A3D8 STR W31, [X31 + 0x408]
	0x0363A3DC STR X31, [X31 + 0x400]
	0x0363A3E0 BL 0x363B588
	0x0363A3E4 LDR W8, [X19 + 0x18]
	0x0363A3E8 CMP W8, 0x1E
	0x0363A3EC B.LS 0x363B46C
	0x0363A3F0 LDR X8, [X31 + 0x400]
	0x0363A3F4 LDR W9, [X31 + 0x408]
	0x0363A3F8 ADD X0, X31, 0x3F0
	0x0363A3FC MOVZ W1, 0x1AE
	0x0363A400 MOVZ W2, 0x1AE
	0x0363A404 MOVZ W4, 0x288
	0x0363A408 MOV W3, W31
	0x0363A40C MOV X5, X31
	0x0363A410 STR X8, [X19 + 0x188]
	0x0363A414 STR W9, [X19 + 0x190]
	0x0363A418 STR W31, [X31 + 0x3F8]
	0x0363A41C STR X31, [X31 + 0x3F0]
	0x0363A420 BL 0x363B588
	0x0363A424 LDR W8, [X19 + 0x18]
	0x0363A428 CMP W8, 0x1F
	0x0363A42C B.LS 0x363B46C
	0x0363A430 LDR X8, [X31 + 0x3F0]
	0x0363A434 LDR W9, [X31 + 0x3F8]
	0x0363A438 ADD X10, X19, 0x194
	0x0363A43C ADD X0, X31, 0x3E0
	0x0363A440 MOVZ W1, 0x1AF
	0x0363A444 MOVZ W2, 0x1AF
	0x0363A448 MOVZ W4, 0x1B0
	0x0363A44C MOV W3, W31
	0x0363A450 MOV X5, X31
	0x0363A454 STR X8, [X10]
	0x0363A458 STR W9, [X10 + 0x8]
	0x0363A45C STR W31, [X31 + 0x3E8]
	0x0363A460 STR X31, [X31 + 0x3E0]
	0x0363A464 BL 0x363B588
	0x0363A468 LDR W8, [X19 + 0x18]
	0x0363A46C CMP W8, 0x20
	0x0363A470 B.LS 0x363B46C
	0x0363A474 LDR X8, [X31 + 0x3E0]
	0x0363A478 LDR W9, [X31 + 0x3E8]
	0x0363A47C ADD X0, X31, 0x3D0
	0x0363A480 MOVZ W1, 0x1B1
	0x0363A484 MOVZ W2, 0x1B2
	0x0363A488 MOVZ W3, 0x1
	0x0363A48C MOVZ W4, 0xD9
	0x0363A490 MOV X5, X31
	0x0363A494 STR X8, [X19 + 0x1A0]
	0x0363A498 STR W9, [X19 + 0x1A8]
	0x0363A49C STR W31, [X31 + 0x3D8]
	0x0363A4A0 STR X31, [X31 + 0x3D0]
	0x0363A4A4 BL 0x363B588
	0x0363A4A8 LDR W8, [X19 + 0x18]
	0x0363A4AC CMP W8, 0x21
	0x0363A4B0 B.LS 0x363B46C
	0x0363A4B4 LDR X8, [X31 + 0x3D0]
	0x0363A4B8 LDR W9, [X31 + 0x3D8]
	0x0363A4BC ADD X10, X19, 0x1AC
	0x0363A4C0 ADD X0, X31, 0x3C0
	0x0363A4C4 MOVZ W1, 0x1B3
	0x0363A4C8 MOVZ W2, 0x1B5
	0x0363A4CC MOVZ W3, 0x3
	0x0363A4D0 MOV W4, W31
	0x0363A4D4 MOV X5, X31
	0x0363A4D8 STR X8, [X10]
	0x0363A4DC STR W9, [X10 + 0x8]
	0x0363A4E0 STR W31, [X31 + 0x3C8]
	0x0363A4E4 STR X31, [X31 + 0x3C0]
	0x0363A4E8 BL 0x363B588
	0x0363A4EC LDR W8, [X19 + 0x18]
	0x0363A4F0 CMP W8, 0x22
	0x0363A4F4 B.LS 0x363B46C
	0x0363A4F8 LDR X8, [X31 + 0x3C0]
	0x0363A4FC LDR W9, [X31 + 0x3C8]
	0x0363A500 ADD X0, X31, 0x3B0
	0x0363A504 MOVZ W1, 0x1B7
	0x0363A508 MOVZ W2, 0x1B7
	0x0363A50C MOVZ W4, 0x292
	0x0363A510 MOV W3, W31
	0x0363A514 MOV X5, X31
	0x0363A518 STR X8, [X19 + 0x1B8]
	0x0363A51C STR W9, [X19 + 0x1C0]
	0x0363A520 STR W31, [X31 + 0x3B8]
	0x0363A524 STR X31, [X31 + 0x3B0]
	0x0363A528 BL 0x363B588
	0x0363A52C LDR W8, [X19 + 0x18]
	0x0363A530 CMP W8, 0x23
	0x0363A534 B.LS 0x363B46C
	0x0363A538 LDR X8, [X31 + 0x3B0]
	0x0363A53C LDR W9, [X31 + 0x3B8]
	0x0363A540 ADD X10, X19, 0x1C4
	0x0363A544 ADD X0, X31, 0x3A0
	0x0363A548 MOVZ W1, 0x1B8
	0x0363A54C MOVZ W2, 0x1B8
	0x0363A550 MOVZ W4, 0x1B9
	0x0363A554 MOV W3, W31
	0x0363A558 MOV X5, X31
	0x0363A55C STR X8, [X10]
	0x0363A560 STR W9, [X10 + 0x8]
	0x0363A564 STR W31, [X31 + 0x3A8]
	0x0363A568 STR X31, [X31 + 0x3A0]
	0x0363A56C BL 0x363B588
	0x0363A570 LDR W8, [X19 + 0x18]
	0x0363A574 CMP W8, 0x24
	0x0363A578 B.LS 0x363B46C
	0x0363A57C LDR X8, [X31 + 0x3A0]
	0x0363A580 LDR W9, [X31 + 0x3A8]
	0x0363A584 ADD X0, X31, 0x390
	0x0363A588 MOVZ W1, 0x1BC
	0x0363A58C MOVZ W2, 0x1BC
	0x0363A590 MOVZ W4, 0x1BD
	0x0363A594 MOV W3, W31
	0x0363A598 MOV X5, X31
	0x0363A59C STR X8, [X19 + 0x1D0]
	0x0363A5A0 STR W9, [X19 + 0x1D8]
	0x0363A5A4 STR W31, [X31 + 0x398]
	0x0363A5A8 STR X31, [X31 + 0x390]
	0x0363A5AC BL 0x363B588
	0x0363A5B0 LDR W8, [X19 + 0x18]
	0x0363A5B4 CMP W8, 0x25
	0x0363A5B8 B.LS 0x363B46C
	0x0363A5BC LDR X8, [X31 + 0x390]
	0x0363A5C0 LDR W9, [X31 + 0x398]
	0x0363A5C4 ADD X10, X19, 0x1DC
	0x0363A5C8 ADD X0, X31, 0x380
	0x0363A5CC MOVZ W1, 0x1C4
	0x0363A5D0 MOVZ W2, 0x1C5
	0x0363A5D4 MOVZ W4, 0x1C6
	0x0363A5D8 MOV W3, W31
	0x0363A5DC MOV X5, X31
	0x0363A5E0 STR X8, [X10]
	0x0363A5E4 STR W9, [X10 + 0x8]
	0x0363A5E8 STR W31, [X31 + 0x388]
	0x0363A5EC STR X31, [X31 + 0x380]
	0x0363A5F0 BL 0x363B588
	0x0363A5F4 LDR W8, [X19 + 0x18]
	0x0363A5F8 CMP W8, 0x26
	0x0363A5FC B.LS 0x363B46C
	0x0363A600 LDR X8, [X31 + 0x380]
	0x0363A604 LDR W9, [X31 + 0x388]
	0x0363A608 ADD X0, X31, 0x370
	0x0363A60C MOVZ W1, 0x1C7
	0x0363A610 MOVZ W2, 0x1C8
	0x0363A614 MOVZ W4, 0x1C9
	0x0363A618 MOV W3, W31
	0x0363A61C MOV X5, X31
	0x0363A620 STR X8, [X19 + 0x1E8]
	0x0363A624 STR W9, [X19 + 0x1F0]
	0x0363A628 STR W31, [X31 + 0x378]
	0x0363A62C STR X31, [X31 + 0x370]
	0x0363A630 BL 0x363B588
	0x0363A634 LDR W8, [X19 + 0x18]
	0x0363A638 CMP W8, 0x27
	0x0363A63C B.LS 0x363B46C
	0x0363A640 LDR X8, [X31 + 0x370]
	0x0363A644 LDR W9, [X31 + 0x378]
	0x0363A648 ADD X10, X19, 0x1F4
	0x0363A64C ADD X0, X31, 0x360
	0x0363A650 MOVZ W1, 0x1CA
	0x0363A654 MOVZ W2, 0x1CB
	0x0363A658 MOVZ W4, 0x1CC
	0x0363A65C MOV W3, W31
	0x0363A660 MOV X5, X31
	0x0363A664 STR X8, [X10]
	0x0363A668 STR W9, [X10 + 0x8]
	0x0363A66C STR W31, [X31 + 0x368]
	0x0363A670 STR X31, [X31 + 0x360]
	0x0363A674 BL 0x363B588
	0x0363A678 LDR W8, [X19 + 0x18]
	0x0363A67C CMP W8, 0x28
	0x0363A680 B.LS 0x363B46C
	0x0363A684 LDR X8, [X31 + 0x360]
	0x0363A688 LDR W9, [X31 + 0x368]
	0x0363A68C ADD X0, X31, 0x350
	0x0363A690 MOVZ W1, 0x1CD
	0x0363A694 MOVZ W2, 0x1DB
	0x0363A698 MOVZ W3, 0x3
	0x0363A69C MOV W4, W31
	0x0363A6A0 MOV X5, X31
	0x0363A6A4 STR X8, [X19 + 0x200]
	0x0363A6A8 STR W9, [X19 + 0x208]
	0x0363A6AC STR W31, [X31 + 0x358]
	0x0363A6B0 STR X31, [X31 + 0x350]
	0x0363A6B4 BL 0x363B588
	0x0363A6B8 LDR W8, [X19 + 0x18]
	0x0363A6BC CMP W8, 0x29
	0x0363A6C0 B.LS 0x363B46C
	0x0363A6C4 LDR X8, [X31 + 0x350]
	0x0363A6C8 LDR W9, [X31 + 0x358]
	0x0363A6CC ADD X10, X19, 0x20C
	0x0363A6D0 ADD X0, X31, 0x340
	0x0363A6D4 MOVZ W1, 0x1DE
	0x0363A6D8 MOVZ W2, 0x1EE
	0x0363A6DC MOVZ W3, 0x2
	0x0363A6E0 MOV W4, W31
	0x0363A6E4 MOV X5, X31
	0x0363A6E8 STR X8, [X10]
	0x0363A6EC STR W9, [X10 + 0x8]
	0x0363A6F0 STR W31, [X31 + 0x348]
	0x0363A6F4 STR X31, [X31 + 0x340]
	0x0363A6F8 BL 0x363B588
	0x0363A6FC LDR W8, [X19 + 0x18]
	0x0363A700 CMP W8, 0x2A
	0x0363A704 B.LS 0x363B46C
	0x0363A708 LDR X8, [X31 + 0x340]
	0x0363A70C LDR W9, [X31 + 0x348]
	0x0363A710 ADD X0, X31, 0x330
	0x0363A714 MOVZ W1, 0x1F1
	0x0363A718 MOVZ W2, 0x1F2
	0x0363A71C MOVZ W4, 0x1F3
	0x0363A720 MOV W3, W31
	0x0363A724 MOV X5, X31
	0x0363A728 STR X8, [X19 + 0x218]
	0x0363A72C STR W9, [X19 + 0x220]
	0x0363A730 STR W31, [X31 + 0x338]
	0x0363A734 STR X31, [X31 + 0x330]
	0x0363A738 BL 0x363B588
	0x0363A73C LDR W8, [X19 + 0x18]
	0x0363A740 CMP W8, 0x2B
	0x0363A744 B.LS 0x363B46C
	0x0363A748 LDR X8, [X31 + 0x330]
	0x0363A74C LDR W9, [X31 + 0x338]
	0x0363A750 ADD X10, X19, 0x224
	0x0363A754 ADD X0, X31, 0x320
	0x0363A758 MOVZ W1, 0x1F4
	0x0363A75C MOVZ W2, 0x1F4
	0x0363A760 MOVZ W4, 0x1F5
	0x0363A764 MOV W3, W31
	0x0363A768 MOV X5, X31
	0x0363A76C STR X8, [X10]
	0x0363A770 STR W9, [X10 + 0x8]
	0x0363A774 STR W31, [X31 + 0x328]
	0x0363A778 STR X31, [X31 + 0x320]
	0x0363A77C BL 0x363B588
	0x0363A780 LDR W8, [X19 + 0x18]
	0x0363A784 CMP W8, 0x2C
	0x0363A788 B.LS 0x363B46C
	0x0363A78C LDR X8, [X31 + 0x320]
	0x0363A790 LDR W9, [X31 + 0x328]
	0x0363A794 ADD X0, X31, 0x310
	0x0363A798 MOVZ W1, 0x1FA
	0x0363A79C MOVZ W2, 0x216
	0x0363A7A0 MOVZ W3, 0x2
	0x0363A7A4 MOV W4, W31
	0x0363A7A8 MOV X5, X31
	0x0363A7AC STR X8, [X19 + 0x230]
	0x0363A7B0 STR W9, [X19 + 0x238]
	0x0363A7B4 STR W31, [X31 + 0x318]
	0x0363A7B8 STR X31, [X31 + 0x310]
	0x0363A7BC BL 0x363B588
	0x0363A7C0 LDR W8, [X19 + 0x18]
	0x0363A7C4 CMP W8, 0x2D
	0x0363A7C8 B.LS 0x363B46C
	0x0363A7CC LDR X8, [X31 + 0x310]
	0x0363A7D0 LDR W9, [X31 + 0x318]
	0x0363A7D4 ADD X10, X19, 0x23C
	0x0363A7D8 ADD X0, X31, 0x300
	0x0363A7DC MOVZ W1, 0x386
	0x0363A7E0 MOVZ W2, 0x386
	0x0363A7E4 MOVZ W4, 0x3AC
	0x0363A7E8 MOV W3, W31
	0x0363A7EC MOV X5, X31
	0x0363A7F0 STR X8, [X10]
	0x0363A7F4 STR W9, [X10 + 0x8]
	0x0363A7F8 STR W31, [X31 + 0x308]
	0x0363A7FC STR X31, [X31 + 0x300]
	0x0363A800 BL 0x363B588
	0x0363A804 LDR W8, [X19 + 0x18]
	0x0363A808 CMP W8, 0x2E
	0x0363A80C B.LS 0x363B46C
	0x0363A810 LDR X8, [X31 + 0x300]
	0x0363A814 LDR W9, [X31 + 0x308]
	0x0363A818 ADD X0, X31, 0x2F0
	0x0363A81C MOVZ W1, 0x388
	0x0363A820 MOVZ W2, 0x38A
	0x0363A824 MOVZ W3, 0x1
	0x0363A828 MOVZ W4, 0x25
	0x0363A82C MOV X5, X31
	0x0363A830 STR X8, [X19 + 0x248]
	0x0363A834 STR W9, [X19 + 0x250]
	0x0363A838 STR W31, [X31 + 0x2F8]
	0x0363A83C STR X31, [X31 + 0x2F0]
	0x0363A840 BL 0x363B588
	0x0363A844 LDR W8, [X19 + 0x18]
	0x0363A848 CMP W8, 0x2F
	0x0363A84C B.LS 0x363B46C
	0x0363A850 LDR X8, [X31 + 0x2F0]
	0x0363A854 LDR W9, [X31 + 0x2F8]
	0x0363A858 ADD X10, X19, 0x254
	0x0363A85C ADD X0, X31, 0x2E0
	0x0363A860 MOVZ W1, 0x38C
	0x0363A864 MOVZ W2, 0x38C
	0x0363A868 MOVZ W4, 0x3CC
	0x0363A86C MOV W3, W31
	0x0363A870 MOV X5, X31
	0x0363A874 STR X8, [X10]
	0x0363A878 STR W9, [X10 + 0x8]
	0x0363A87C STR W31, [X31 + 0x2E8]
	0x0363A880 STR X31, [X31 + 0x2E0]
	0x0363A884 BL 0x363B588
	0x0363A888 LDR W8, [X19 + 0x18]
	0x0363A88C CMP W8, 0x30
	0x0363A890 B.LS 0x363B46C
	0x0363A894 LDR X8, [X31 + 0x2E0]
	0x0363A898 LDR W9, [X31 + 0x2E8]
	0x0363A89C ADD X0, X31, 0x2D0
	0x0363A8A0 MOVZ W1, 0x38E
	0x0363A8A4 MOVZ W2, 0x38F
	0x0363A8A8 MOVZ W3, 0x1
	0x0363A8AC MOVZ W4, 0x3F
	0x0363A8B0 MOV X5, X31
	0x0363A8B4 STR X8, [X19 + 0x260]
	0x0363A8B8 STR W9, [X19 + 0x268]
	0x0363A8BC STR W31, [X31 + 0x2D8]
	0x0363A8C0 STR X31, [X31 + 0x2D0]
	0x0363A8C4 BL 0x363B588
	0x0363A8C8 LDR W8, [X19 + 0x18]
	0x0363A8CC CMP W8, 0x31
	0x0363A8D0 B.LS 0x363B46C
	0x0363A8D4 LDR X8, [X31 + 0x2D0]
	0x0363A8D8 LDR W9, [X31 + 0x2D8]
	0x0363A8DC ADD X10, X19, 0x26C
	0x0363A8E0 ADD X0, X31, 0x2C0
	0x0363A8E4 MOVZ W1, 0x391
	0x0363A8E8 MOVZ W2, 0x3AB
	0x0363A8EC MOVZ W3, 0x1
	0x0363A8F0 MOVZ W4, 0x20
	0x0363A8F4 MOV X5, X31
	0x0363A8F8 STR X8, [X10]
	0x0363A8FC STR W9, [X10 + 0x8]
	0x0363A900 STR W31, [X31 + 0x2C8]
	0x0363A904 STR X31, [X31 + 0x2C0]
	0x0363A908 BL 0x363B588
	0x0363A90C LDR W8, [X19 + 0x18]
	0x0363A910 CMP W8, 0x32
	0x0363A914 B.LS 0x363B46C
	0x0363A918 LDR X8, [X31 + 0x2C0]
	0x0363A91C LDR W9, [X31 + 0x2C8]
	0x0363A920 ADD X0, X31, 0x2B0
	0x0363A924 MOVZ W1, 0x3E2
	0x0363A928 MOVZ W2, 0x3EE
	0x0363A92C MOVZ W3, 0x2
	0x0363A930 MOV W4, W31
	0x0363A934 MOV X5, X31
	0x0363A938 STR X8, [X19 + 0x278]
	0x0363A93C STR W9, [X19 + 0x280]
	0x0363A940 STR W31, [X31 + 0x2B8]
	0x0363A944 STR X31, [X31 + 0x2B0]
	0x0363A948 BL 0x363B588
	0x0363A94C LDR W8, [X19 + 0x18]
	0x0363A950 CMP W8, 0x33
	0x0363A954 B.LS 0x363B46C
	0x0363A958 LDR X8, [X31 + 0x2B0]
	0x0363A95C LDR W9, [X31 + 0x2B8]
	0x0363A960 ADD X10, X19, 0x284
	0x0363A964 ADD X0, X31, 0x2A0
	0x0363A968 MOVZ W1, 0x401
	0x0363A96C MOVZ W2, 0x40F
	0x0363A970 MOVZ W3, 0x1
	0x0363A974 MOVZ W4, 0x50
	0x0363A978 MOV X5, X31
	0x0363A97C STR X8, [X10]
	0x0363A980 STR W9, [X10 + 0x8]
	0x0363A984 STR W31, [X31 + 0x2A8]
	0x0363A988 STR X31, [X31 + 0x2A0]
	0x0363A98C BL 0x363B588
	0x0363A990 LDR W8, [X19 + 0x18]
	0x0363A994 CMP W8, 0x34
	0x0363A998 B.LS 0x363B46C
	0x0363A99C LDR X8, [X31 + 0x2A0]
	0x0363A9A0 LDR W9, [X31 + 0x2A8]
	0x0363A9A4 ADD X0, X31, 0x290
	0x0363A9A8 MOVZ W1, 0x410
	0x0363A9AC MOVZ W2, 0x42F
	0x0363A9B0 MOVZ W3, 0x1
	0x0363A9B4 MOVZ W4, 0x20
	0x0363A9B8 MOV X5, X31
	0x0363A9BC STR X8, [X19 + 0x290]
	0x0363A9C0 STR W9, [X19 + 0x298]
	0x0363A9C4 STR W31, [X31 + 0x298]
	0x0363A9C8 STR X31, [X31 + 0x290]
	0x0363A9CC BL 0x363B588
	0x0363A9D0 LDR W8, [X19 + 0x18]
	0x0363A9D4 CMP W8, 0x35
	0x0363A9D8 B.LS 0x363B46C
	0x0363A9DC LDR X8, [X31 + 0x290]
	0x0363A9E0 LDR W9, [X31 + 0x298]
	0x0363A9E4 ADD X10, X19, 0x29C
	0x0363A9E8 ADD X0, X31, 0x280
	0x0363A9EC MOVZ W1, 0x460
	0x0363A9F0 MOVZ W2, 0x480
	0x0363A9F4 MOVZ W3, 0x2
	0x0363A9F8 MOV W4, W31
	0x0363A9FC MOV X5, X31
	0x0363AA00 STR X8, [X10]
	0x0363AA04 STR W9, [X10 + 0x8]
	0x0363AA08 STR W31, [X31 + 0x288]
	0x0363AA0C STR X31, [X31 + 0x280]
	0x0363AA10 BL 0x363B588
	0x0363AA14 LDR W8, [X19 + 0x18]
	0x0363AA18 CMP W8, 0x36
	0x0363AA1C B.LS 0x363B46C
	0x0363AA20 LDR X8, [X31 + 0x280]
	0x0363AA24 LDR W9, [X31 + 0x288]
	0x0363AA28 ADD X0, X31, 0x270
	0x0363AA2C MOVZ W1, 0x490
	0x0363AA30 MOVZ W2, 0x4BE
	0x0363AA34 MOVZ W3, 0x2
	0x0363AA38 MOV W4, W31
	0x0363AA3C MOV X5, X31
	0x0363AA40 STR X8, [X19 + 0x2A8]
	0x0363AA44 STR W9, [X19 + 0x2B0]
	0x0363AA48 STR W31, [X31 + 0x278]
	0x0363AA4C STR X31, [X31 + 0x270]
	0x0363AA50 BL 0x363B588
	0x0363AA54 LDR W8, [X19 + 0x18]
	0x0363AA58 CMP W8, 0x37
	0x0363AA5C B.LS 0x363B46C
	0x0363AA60 LDR X8, [X31 + 0x270]
	0x0363AA64 LDR W9, [X31 + 0x278]
	0x0363AA68 ADD X10, X19, 0x2B4
	0x0363AA6C ADD X0, X31, 0x260
	0x0363AA70 MOVZ W1, 0x4C1
	0x0363AA74 MOVZ W2, 0x4C3
	0x0363AA78 MOVZ W3, 0x3
	0x0363AA7C MOV W4, W31
	0x0363AA80 MOV X5, X31
	0x0363AA84 STR X8, [X10]
	0x0363AA88 STR W9, [X10 + 0x8]
	0x0363AA8C STR W31, [X31 + 0x268]
	0x0363AA90 STR X31, [X31 + 0x260]
	0x0363AA94 BL 0x363B588
	0x0363AA98 LDR W8, [X19 + 0x18]
	0x0363AA9C CMP W8, 0x38
	0x0363AAA0 B.LS 0x363B46C
	0x0363AAA4 LDR X8, [X31 + 0x260]
	0x0363AAA8 LDR W9, [X31 + 0x268]
	0x0363AAAC ADD X0, X31, 0x250
	0x0363AAB0 MOVZ W1, 0x4C7
	0x0363AAB4 MOVZ W2, 0x4C7
	0x0363AAB8 MOVZ W4, 0x4C8
	0x0363AABC MOV W3, W31
	0x0363AAC0 MOV X5, X31
	0x0363AAC4 STR X8, [X19 + 0x2C0]
	0x0363AAC8 STR W9, [X19 + 0x2C8]
	0x0363AACC STR W31, [X31 + 0x258]
	0x0363AAD0 STR X31, [X31 + 0x250]
	0x0363AAD4 BL 0x363B588
	0x0363AAD8 LDR W8, [X19 + 0x18]
	0x0363AADC CMP W8, 0x39
	0x0363AAE0 B.LS 0x363B46C
	0x0363AAE4 LDR X8, [X31 + 0x250]
	0x0363AAE8 LDR W9, [X31 + 0x258]
	0x0363AAEC ADD X10, X19, 0x2CC
	0x0363AAF0 ADD X0, X31, 0x240
	0x0363AAF4 MOVZ W1, 0x4CB
	0x0363AAF8 MOVZ W2, 0x4CB
	0x0363AAFC MOVZ W4, 0x4CC
	0x0363AB00 MOV W3, W31
	0x0363AB04 MOV X5, X31
	0x0363AB08 STR X8, [X10]
	0x0363AB0C STR W9, [X10 + 0x8]
	0x0363AB10 STR W31, [X31 + 0x248]
	0x0363AB14 STR X31, [X31 + 0x240]
	0x0363AB18 BL 0x363B588
	0x0363AB1C LDR W8, [X19 + 0x18]
	0x0363AB20 CMP W8, 0x3A
	0x0363AB24 B.LS 0x363B46C
	0x0363AB28 LDR X8, [X31 + 0x240]
	0x0363AB2C LDR W9, [X31 + 0x248]
	0x0363AB30 ADD X0, X31, 0x230
	0x0363AB34 MOVZ W1, 0x4D0
	0x0363AB38 MOVZ W2, 0x4EA
	0x0363AB3C MOVZ W3, 0x2
	0x0363AB40 MOV W4, W31
	0x0363AB44 MOV X5, X31
	0x0363AB48 STR X8, [X19 + 0x2D8]
	0x0363AB4C STR W9, [X19 + 0x2E0]
	0x0363AB50 STR W31, [X31 + 0x238]
	0x0363AB54 STR X31, [X31 + 0x230]
	0x0363AB58 BL 0x363B588
	0x0363AB5C LDR W8, [X19 + 0x18]
	0x0363AB60 CMP W8, 0x3B
	0x0363AB64 B.LS 0x363B46C
	0x0363AB68 LDR X8, [X31 + 0x230]
	0x0363AB6C LDR W9, [X31 + 0x238]
	0x0363AB70 ADD X10, X19, 0x2E4
	0x0363AB74 ADD X0, X31, 0x220
	0x0363AB78 MOVZ W1, 0x4EE
	0x0363AB7C MOVZ W2, 0x4F4
	0x0363AB80 MOVZ W3, 0x2
	0x0363AB84 MOV W4, W31
	0x0363AB88 MOV X5, X31
	0x0363AB8C STR X8, [X10]
	0x0363AB90 STR W9, [X10 + 0x8]
	0x0363AB94 STR W31, [X31 + 0x228]
	0x0363AB98 STR X31, [X31 + 0x220]
	0x0363AB9C BL 0x363B588
	0x0363ABA0 LDR W8, [X19 + 0x18]
	0x0363ABA4 CMP W8, 0x3C
	0x0363ABA8 B.LS 0x363B46C
	0x0363ABAC LDR X8, [X31 + 0x220]
	0x0363ABB0 LDR W9, [X31 + 0x228]
	0x0363ABB4 ADD X0, X31, 0x210
	0x0363ABB8 MOVZ W1, 0x4F8
	0x0363ABBC MOVZ W2, 0x4F8
	0x0363ABC0 MOVZ W4, 0x4F9
	0x0363ABC4 MOV W3, W31
	0x0363ABC8 MOV X5, X31
	0x0363ABCC STR X8, [X19 + 0x2F0]
	0x0363ABD0 STR W9, [X19 + 0x2F8]
	0x0363ABD4 STR W31, [X31 + 0x218]
	0x0363ABD8 STR X31, [X31 + 0x210]
	0x0363ABDC BL 0x363B588
	0x0363ABE0 LDR W8, [X19 + 0x18]
	0x0363ABE4 CMP W8, 0x3D
	0x0363ABE8 B.LS 0x363B46C
	0x0363ABEC LDR X8, [X31 + 0x210]
	0x0363ABF0 LDR W9, [X31 + 0x218]
	0x0363ABF4 ADD X10, X19, 0x2FC
	0x0363ABF8 ADD X0, X31, 0x200
	0x0363ABFC MOVZ W1, 0x531
	0x0363AC00 MOVZ W2, 0x556
	0x0363AC04 MOVZ W3, 0x1
	0x0363AC08 MOVZ W4, 0x30
	0x0363AC0C MOV X5, X31
	0x0363AC10 STR X8, [X10]
	0x0363AC14 STR W9, [X10 + 0x8]
	0x0363AC18 STR W31, [X31 + 0x208]
	0x0363AC1C STR X31, [X31 + 0x200]
	0x0363AC20 BL 0x363B588
	0x0363AC24 LDR W8, [X19 + 0x18]
	0x0363AC28 CMP W8, 0x3E
	0x0363AC2C B.LS 0x363B46C
	0x0363AC30 LDR X8, [X31 + 0x200]
	0x0363AC34 LDR W9, [X31 + 0x208]
	0x0363AC38 ADD X0, X31, 0x1F0
	0x0363AC3C MOVZ W1, 0x10A0
	0x0363AC40 MOVZ W2, 0x10C5
	0x0363AC44 MOVZ W3, 0x1
	0x0363AC48 MOVZ W4, 0x30
	0x0363AC4C MOV X5, X31
	0x0363AC50 STR X8, [X19 + 0x308]
	0x0363AC54 STR W9, [X19 + 0x310]
	0x0363AC58 STR W31, [X31 + 0x1F8]
	0x0363AC5C STR X31, [X31 + 0x1F0]
	0x0363AC60 BL 0x363B588
	0x0363AC64 LDR W8, [X19 + 0x18]
	0x0363AC68 CMP W8, 0x3F
	0x0363AC6C B.LS 0x363B46C
	0x0363AC70 LDR X8, [X31 + 0x1F0]
	0x0363AC74 LDR W9, [X31 + 0x1F8]
	0x0363AC78 ADD X10, X19, 0x314
	0x0363AC7C ADD X0, X31, 0x1E0
	0x0363AC80 MOVZ W1, 0x1E00
	0x0363AC84 MOVZ W2, 0x1EF8
	0x0363AC88 MOVZ W3, 0x2
	0x0363AC8C MOV W4, W31
	0x0363AC90 MOV X5, X31
	0x0363AC94 STR X8, [X10]
	0x0363AC98 STR W9, [X10 + 0x8]
	0x0363AC9C STR W31, [X31 + 0x1E8]
	0x0363ACA0 STR X31, [X31 + 0x1E0]
	0x0363ACA4 BL 0x363B588
	0x0363ACA8 LDR W8, [X19 + 0x18]
	0x0363ACAC CMP W8, 0x40
	0x0363ACB0 B.LS 0x363B46C
	0x0363ACB4 LDR X8, [X31 + 0x1E0]
	0x0363ACB8 LDR W9, [X31 + 0x1E8]
	0x0363ACBC ADD X0, X31, 0x1D0
	0x0363ACC0 MOVZ W1, 0x1F08
	0x0363ACC4 MOVZ W2, 0x1F0F
	0x0363ACC8 MOVZ W3, 0x1
	0x0363ACCC MOVN W4, 0x7
	0x0363ACD0 MOV X5, X31
	0x0363ACD4 STR X8, [X19 + 0x320]
	0x0363ACD8 STR W9, [X19 + 0x328]
	0x0363ACDC STR W31, [X31 + 0x1D8]
	0x0363ACE0 STR X31, [X31 + 0x1D0]
	0x0363ACE4 BL 0x363B588
	0x0363ACE8 LDR W8, [X19 + 0x18]
	0x0363ACEC CMP W8, 0x41
	0x0363ACF0 B.LS 0x363B46C
	0x0363ACF4 LDR X8, [X31 + 0x1D0]
	0x0363ACF8 LDR W9, [X31 + 0x1D8]
	0x0363ACFC ADD X10, X19, 0x32C
	0x0363AD00 ADD X0, X31, 0x1C0
	0x0363AD04 MOVZ W1, 0x1F18
	0x0363AD08 MOVZ W2, 0x1F1F
	0x0363AD0C MOVZ W3, 0x1
	0x0363AD10 MOVN W4, 0x7
	0x0363AD14 MOV X5, X31
	0x0363AD18 STR X8, [X10]
	0x0363AD1C STR W9, [X10 + 0x8]
	0x0363AD20 STR W31, [X31 + 0x1C8]
	0x0363AD24 STR X31, [X31 + 0x1C0]
	0x0363AD28 BL 0x363B588
	0x0363AD2C LDR W8, [X19 + 0x18]
	0x0363AD30 CMP W8, 0x42
	0x0363AD34 B.LS 0x363B46C
	0x0363AD38 LDR X8, [X31 + 0x1C0]
	0x0363AD3C LDR W9, [X31 + 0x1C8]
	0x0363AD40 ADD X0, X31, 0x1B0
	0x0363AD44 MOVZ W1, 0x1F28
	0x0363AD48 MOVZ W2, 0x1F2F
	0x0363AD4C MOVZ W3, 0x1
	0x0363AD50 MOVN W4, 0x7
	0x0363AD54 MOV X5, X31
	0x0363AD58 STR X8, [X19 + 0x338]
	0x0363AD5C STR W9, [X19 + 0x340]
	0x0363AD60 STR W31, [X31 + 0x1B8]
	0x0363AD64 STR X31, [X31 + 0x1B0]
	0x0363AD68 BL 0x363B588
	0x0363AD6C LDR W8, [X19 + 0x18]
	0x0363AD70 CMP W8, 0x43
	0x0363AD74 B.LS 0x363B46C
	0x0363AD78 LDR X8, [X31 + 0x1B0]
	0x0363AD7C LDR W9, [X31 + 0x1B8]
	0x0363AD80 ADD X10, X19, 0x344
	0x0363AD84 ADD X0, X31, 0x1A0
	0x0363AD88 MOVZ W1, 0x1F38
	0x0363AD8C MOVZ W2, 0x1F3F
	0x0363AD90 MOVZ W3, 0x1
	0x0363AD94 MOVN W4, 0x7
	0x0363AD98 MOV X5, X31
	0x0363AD9C STR X8, [X10]
	0x0363ADA0 STR W9, [X10 + 0x8]
	0x0363ADA4 STR W31, [X31 + 0x1A8]
	0x0363ADA8 STR X31, [X31 + 0x1A0]
	0x0363ADAC BL 0x363B588
	0x0363ADB0 LDR W8, [X19 + 0x18]
	0x0363ADB4 CMP W8, 0x44
	0x0363ADB8 B.LS 0x363B46C
	0x0363ADBC LDR X8, [X31 + 0x1A0]
	0x0363ADC0 LDR W9, [X31 + 0x1A8]
	0x0363ADC4 ADD X0, X31, 0x190
	0x0363ADC8 MOVZ W1, 0x1F48
	0x0363ADCC MOVZ W2, 0x1F4D
	0x0363ADD0 MOVZ W3, 0x1
	0x0363ADD4 MOVN W4, 0x7
	0x0363ADD8 MOV X5, X31
	0x0363ADDC STR X8, [X19 + 0x350]
	0x0363ADE0 STR W9, [X19 + 0x358]
	0x0363ADE4 STR W31, [X31 + 0x198]
	0x0363ADE8 STR X31, [X31 + 0x190]
	0x0363ADEC BL 0x363B588
	0x0363ADF0 LDR W8, [X19 + 0x18]
	0x0363ADF4 CMP W8, 0x45
	0x0363ADF8 B.LS 0x363B46C
	0x0363ADFC LDR X8, [X31 + 0x190]
	0x0363AE00 LDR W9, [X31 + 0x198]
	0x0363AE04 ADD X10, X19, 0x35C
	0x0363AE08 ADD X0, X31, 0x180
	0x0363AE0C MOVZ W1, 0x1F59
	0x0363AE10 MOVZ W2, 0x1F59
	0x0363AE14 MOVZ W4, 0x1F51
	0x0363AE18 MOV W3, W31
	0x0363AE1C MOV X5, X31
	0x0363AE20 STR X8, [X10]
	0x0363AE24 STR W9, [X10 + 0x8]
	0x0363AE28 STR W31, [X31 + 0x188]
	0x0363AE2C STR X31, [X31 + 0x180]
	0x0363AE30 BL 0x363B588
	0x0363AE34 LDR W8, [X19 + 0x18]
	0x0363AE38 CMP W8, 0x46
	0x0363AE3C B.LS 0x363B46C
	0x0363AE40 LDR X8, [X31 + 0x180]
	0x0363AE44 LDR W9, [X31 + 0x188]
	0x0363AE48 ADD X0, X31, 0x170
	0x0363AE4C MOVZ W1, 0x1F5B
	0x0363AE50 MOVZ W2, 0x1F5B
	0x0363AE54 MOVZ W4, 0x1F53
	0x0363AE58 MOV W3, W31
	0x0363AE5C MOV X5, X31
	0x0363AE60 STR X8, [X19 + 0x368]
	0x0363AE64 STR W9, [X19 + 0x370]
	0x0363AE68 STR W31, [X31 + 0x178]
	0x0363AE6C STR X31, [X31 + 0x170]
	0x0363AE70 BL 0x363B588
	0x0363AE74 LDR W8, [X19 + 0x18]
	0x0363AE78 CMP W8, 0x47
	0x0363AE7C B.LS 0x363B46C
	0x0363AE80 LDR X8, [X31 + 0x170]
	0x0363AE84 LDR W9, [X31 + 0x178]
	0x0363AE88 ADD X10, X19, 0x374
	0x0363AE8C ADD X0, X31, 0x160
	0x0363AE90 MOVZ W1, 0x1F5D
	0x0363AE94 MOVZ W2, 0x1F5D
	0x0363AE98 MOVZ W4, 0x1F55
	0x0363AE9C MOV W3, W31
	0x0363AEA0 MOV X5, X31
	0x0363AEA4 STR X8, [X10]
	0x0363AEA8 STR W9, [X10 + 0x8]
	0x0363AEAC STR W31, [X31 + 0x168]
	0x0363AEB0 STR X31, [X31 + 0x160]
	0x0363AEB4 BL 0x363B588
	0x0363AEB8 LDR W8, [X19 + 0x18]
	0x0363AEBC CMP W8, 0x48
	0x0363AEC0 B.LS 0x363B46C
	0x0363AEC4 LDR X8, [X31 + 0x160]
	0x0363AEC8 LDR W9, [X31 + 0x168]
	0x0363AECC ADD X0, X31, 0x150
	0x0363AED0 MOVZ W1, 0x1F5F
	0x0363AED4 MOVZ W2, 0x1F5F
	0x0363AED8 MOVZ W4, 0x1F57
	0x0363AEDC MOV W3, W31
	0x0363AEE0 MOV X5, X31
	0x0363AEE4 STR X8, [X19 + 0x380]
	0x0363AEE8 STR W9, [X19 + 0x388]
	0x0363AEEC STR W31, [X31 + 0x158]
	0x0363AEF0 STR X31, [X31 + 0x150]
	0x0363AEF4 BL 0x363B588
	0x0363AEF8 LDR W8, [X19 + 0x18]
	0x0363AEFC CMP W8, 0x49
	0x0363AF00 B.LS 0x363B46C
	0x0363AF04 LDR X8, [X31 + 0x150]
	0x0363AF08 LDR W9, [X31 + 0x158]
	0x0363AF0C ADD X10, X19, 0x38C
	0x0363AF10 ADD X0, X31, 0x140
	0x0363AF14 MOVZ W1, 0x1F68
	0x0363AF18 MOVZ W2, 0x1F6F
	0x0363AF1C MOVZ W3, 0x1
	0x0363AF20 MOVN W4, 0x7
	0x0363AF24 MOV X5, X31
	0x0363AF28 STR X8, [X10]
	0x0363AF2C STR W9, [X10 + 0x8]
	0x0363AF30 STR W31, [X31 + 0x148]
	0x0363AF34 STR X31, [X31 + 0x140]
	0x0363AF38 BL 0x363B588
	0x0363AF3C LDR W8, [X19 + 0x18]
	0x0363AF40 CMP W8, 0x4A
	0x0363AF44 B.LS 0x363B46C
	0x0363AF48 LDR X8, [X31 + 0x140]
	0x0363AF4C LDR W9, [X31 + 0x148]
	0x0363AF50 ADD X0, X31, 0x130
	0x0363AF54 MOVZ W1, 0x1F88
	0x0363AF58 MOVZ W2, 0x1F8F
	0x0363AF5C MOVZ W3, 0x1
	0x0363AF60 MOVN W4, 0x7
	0x0363AF64 MOV X5, X31
	0x0363AF68 STR X8, [X19 + 0x398]
	0x0363AF6C STR W9, [X19 + 0x3A0]
	0x0363AF70 STR W31, [X31 + 0x138]
	0x0363AF74 STR X31, [X31 + 0x130]
	0x0363AF78 BL 0x363B588
	0x0363AF7C LDR W8, [X19 + 0x18]
	0x0363AF80 CMP W8, 0x4B
	0x0363AF84 B.LS 0x363B46C
	0x0363AF88 LDR X8, [X31 + 0x130]
	0x0363AF8C LDR W9, [X31 + 0x138]
	0x0363AF90 ADD X10, X19, 0x3A4
	0x0363AF94 ADD X0, X31, 0x120
	0x0363AF98 MOVZ W1, 0x1F98
	0x0363AF9C MOVZ W2, 0x1F9F
	0x0363AFA0 MOVZ W3, 0x1
	0x0363AFA4 MOVN W4, 0x7
	0x0363AFA8 MOV X5, X31
	0x0363AFAC STR X8, [X10]
	0x0363AFB0 STR W9, [X10 + 0x8]
	0x0363AFB4 STR W31, [X31 + 0x128]
	0x0363AFB8 STR X31, [X31 + 0x120]
	0x0363AFBC BL 0x363B588
	0x0363AFC0 LDR W8, [X19 + 0x18]
	0x0363AFC4 CMP W8, 0x4C
	0x0363AFC8 B.LS 0x363B46C
	0x0363AFCC LDR X8, [X31 + 0x120]
	0x0363AFD0 LDR W9, [X31 + 0x128]
	0x0363AFD4 ADD X0, X31, 0x110
	0x0363AFD8 MOVZ W1, 0x1FA8
	0x0363AFDC MOVZ W2, 0x1FAF
	0x0363AFE0 MOVZ W3, 0x1
	0x0363AFE4 MOVN W4, 0x7
	0x0363AFE8 MOV X5, X31
	0x0363AFEC STR X8, [X19 + 0x3B0]
	0x0363AFF0 STR W9, [X19 + 0x3B8]
	0x0363AFF4 STR W31, [X31 + 0x118]
	0x0363AFF8 STR X31, [X31 + 0x110]
	0x0363AFFC BL 0x363B588
	0x0363B000 LDR W8, [X19 + 0x18]
	0x0363B004 CMP W8, 0x4D
	0x0363B008 B.LS 0x363B46C
	0x0363B00C LDR X8, [X31 + 0x110]
	0x0363B010 LDR W9, [X31 + 0x118]
	0x0363B014 ADD X10, X19, 0x3BC
	0x0363B018 ADD X0, X31, 0x100
	0x0363B01C MOVZ W1, 0x1FB8
	0x0363B020 MOVZ W2, 0x1FB9
	0x0363B024 MOVZ W3, 0x1
	0x0363B028 MOVN W4, 0x7
	0x0363B02C MOV X5, X31
	0x0363B030 STR X8, [X10]
	0x0363B034 STR W9, [X10 + 0x8]
	0x0363B038 STR W31, [X31 + 0x108]
	0x0363B03C STR X31, [X31 + 0x100]
	0x0363B040 BL 0x363B588
	0x0363B044 LDR W8, [X19 + 0x18]
	0x0363B048 CMP W8, 0x4E
	0x0363B04C B.LS 0x363B46C
	0x0363B050 LDR X8, [X31 + 0x100]
	0x0363B054 LDR W9, [X31 + 0x108]
	0x0363B058 ADD X0, X31, 0xF0
	0x0363B05C MOVZ W1, 0x1FBA
	0x0363B060 MOVZ W2, 0x1FBB
	0x0363B064 MOVZ W3, 0x1
	0x0363B068 MOVN W4, 0x49
	0x0363B06C MOV X5, X31
	0x0363B070 STR X8, [X19 + 0x3C8]
	0x0363B074 STR W9, [X19 + 0x3D0]
	0x0363B078 STR W31, [X31 + 0xF8]
	0x0363B07C STR X31, [X31 + 0xF0]
	0x0363B080 BL 0x363B588
	0x0363B084 LDR W8, [X19 + 0x18]
	0x0363B088 CMP W8, 0x4F
	0x0363B08C B.LS 0x363B46C
	0x0363B090 LDR X8, [X31 + 0xF0]
	0x0363B094 LDR W9, [X31 + 0xF8]
	0x0363B098 ADD X10, X19, 0x3D4
	0x0363B09C ADD X0, X31, 0xE0
	0x0363B0A0 MOVZ W1, 0x1FBC
	0x0363B0A4 MOVZ W2, 0x1FBC
	0x0363B0A8 MOVZ W4, 0x1FB3
	0x0363B0AC MOV W3, W31
	0x0363B0B0 MOV X5, X31
	0x0363B0B4 STR X8, [X10]
	0x0363B0B8 STR W9, [X10 + 0x8]
	0x0363B0BC STR W31, [X31 + 0xE8]
	0x0363B0C0 STR X31, [X31 + 0xE0]
	0x0363B0C4 BL 0x363B588
	0x0363B0C8 LDR W8, [X19 + 0x18]
	0x0363B0CC CMP W8, 0x50
	0x0363B0D0 B.LS 0x363B46C
	0x0363B0D4 LDR X8, [X31 + 0xE0]
	0x0363B0D8 LDR W9, [X31 + 0xE8]
	0x0363B0DC ADD X0, X31, 0xD0
	0x0363B0E0 MOVZ W1, 0x1FC8
	0x0363B0E4 MOVZ W2, 0x1FCB
	0x0363B0E8 MOVZ W3, 0x1
	0x0363B0EC MOVN W4, 0x55
	0x0363B0F0 MOV X5, X31
	0x0363B0F4 STR X8, [X19 + 0x3E0]
	0x0363B0F8 STR W9, [X19 + 0x3E8]
	0x0363B0FC STR W31, [X31 + 0xD8]
	0x0363B100 STR X31, [X31 + 0xD0]
	0x0363B104 BL 0x363B588
	0x0363B108 LDR W8, [X19 + 0x18]
	0x0363B10C CMP W8, 0x51
	0x0363B110 B.LS 0x363B46C
	0x0363B114 LDR X8, [X31 + 0xD0]
	0x0363B118 LDR W9, [X31 + 0xD8]
	0x0363B11C ADD X10, X19, 0x3EC
	0x0363B120 ADD X0, X31, 0xC0
	0x0363B124 MOVZ W1, 0x1FCC
	0x0363B128 MOVZ W2, 0x1FCC
	0x0363B12C MOVZ W4, 0x1FC3
	0x0363B130 MOV W3, W31
	0x0363B134 MOV X5, X31
	0x0363B138 STR X8, [X10]
	0x0363B13C STR W9, [X10 + 0x8]
	0x0363B140 STR W31, [X31 + 0xC8]
	0x0363B144 STR X31, [X31 + 0xC0]
	0x0363B148 BL 0x363B588
	0x0363B14C LDR W8, [X19 + 0x18]
	0x0363B150 CMP W8, 0x52
	0x0363B154 B.LS 0x363B46C
	0x0363B158 LDR X8, [X31 + 0xC0]
	0x0363B15C LDR W9, [X31 + 0xC8]
	0x0363B160 ADD X0, X31, 0xB0
	0x0363B164 MOVZ W1, 0x1FD8
	0x0363B168 MOVZ W2, 0x1FD9
	0x0363B16C MOVZ W3, 0x1
	0x0363B170 MOVN W4, 0x7
	0x0363B174 MOV X5, X31
	0x0363B178 STR X8, [X19 + 0x3F8]
	0x0363B17C STR W9, [X19 + 0x400]
	0x0363B180 STR W31, [X31 + 0xB8]
	0x0363B184 STR X31, [X31 + 0xB0]
	0x0363B188 BL 0x363B588
	0x0363B18C LDR W8, [X19 + 0x18]
	0x0363B190 CMP W8, 0x53
	0x0363B194 B.LS 0x363B46C
	0x0363B198 LDR X8, [X31 + 0xB0]
	0x0363B19C LDR W9, [X31 + 0xB8]
	0x0363B1A0 ADD X10, X19, 0x404
	0x0363B1A4 ADD X0, X31, 0xA0
	0x0363B1A8 MOVZ W1, 0x1FDA
	0x0363B1AC MOVZ W2, 0x1FDB
	0x0363B1B0 MOVZ W3, 0x1
	0x0363B1B4 MOVN W4, 0x63
	0x0363B1B8 MOV X5, X31
	0x0363B1BC STR X8, [X10]
	0x0363B1C0 STR W9, [X10 + 0x8]
	0x0363B1C4 STR W31, [X31 + 0xA8]
	0x0363B1C8 STR X31, [X31 + 0xA0]
	0x0363B1CC BL 0x363B588
	0x0363B1D0 LDR W8, [X19 + 0x18]
	0x0363B1D4 CMP W8, 0x54
	0x0363B1D8 B.LS 0x363B46C
	0x0363B1DC LDR X8, [X31 + 0xA0]
	0x0363B1E0 LDR W9, [X31 + 0xA8]
	0x0363B1E4 ADD X0, X31, 0x90
	0x0363B1E8 MOVZ W1, 0x1FE8
	0x0363B1EC MOVZ W2, 0x1FE9
	0x0363B1F0 MOVZ W3, 0x1
	0x0363B1F4 MOVN W4, 0x7
	0x0363B1F8 MOV X5, X31
	0x0363B1FC STR X8, [X19 + 0x410]
	0x0363B200 STR W9, [X19 + 0x418]
	0x0363B204 STR W31, [X31 + 0x98]
	0x0363B208 STR X31, [X31 + 0x90]
	0x0363B20C BL 0x363B588
	0x0363B210 LDR W8, [X19 + 0x18]
	0x0363B214 CMP W8, 0x55
	0x0363B218 B.LS 0x363B46C
	0x0363B21C LDR X8, [X31 + 0x90]
	0x0363B220 LDR W9, [X31 + 0x98]
	0x0363B224 ADD X10, X19, 0x41C
	0x0363B228 ADD X0, X31, 0x80
	0x0363B22C MOVZ W1, 0x1FEA
	0x0363B230 MOVZ W2, 0x1FEB
	0x0363B234 MOVZ W3, 0x1
	0x0363B238 MOVN W4, 0x6F
	0x0363B23C MOV X5, X31
	0x0363B240 STR X8, [X10]
	0x0363B244 STR W9, [X10 + 0x8]
	0x0363B248 STR W31, [X31 + 0x88]
	0x0363B24C STR X31, [X31 + 0x80]
	0x0363B250 BL 0x363B588
	0x0363B254 LDR W8, [X19 + 0x18]
	0x0363B258 CMP W8, 0x56
	0x0363B25C B.LS 0x363B46C
	0x0363B260 LDR X8, [X31 + 0x80]
	0x0363B264 LDR W9, [X31 + 0x88]
	0x0363B268 ADD X0, X31, 0x70
	0x0363B26C MOVZ W1, 0x1FEC
	0x0363B270 MOVZ W2, 0x1FEC
	0x0363B274 MOVZ W4, 0x1FE5
	0x0363B278 MOV W3, W31
	0x0363B27C MOV X5, X31
	0x0363B280 STR X8, [X19 + 0x428]
	0x0363B284 STR W9, [X19 + 0x430]
	0x0363B288 STR W31, [X31 + 0x78]
	0x0363B28C STR X31, [X31 + 0x70]
	0x0363B290 BL 0x363B588
	0x0363B294 LDR W8, [X19 + 0x18]
	0x0363B298 CMP W8, 0x57
	0x0363B29C B.LS 0x363B46C
	0x0363B2A0 LDR X8, [X31 + 0x70]
	0x0363B2A4 LDR W9, [X31 + 0x78]
	0x0363B2A8 ADD X10, X19, 0x434
	0x0363B2AC ADD X0, X31, 0x60
	0x0363B2B0 MOVZ W1, 0x1FF8
	0x0363B2B4 MOVZ W2, 0x1FF9
	0x0363B2B8 MOVZ W3, 0x1
	0x0363B2BC MOVN W4, 0x7F
	0x0363B2C0 MOV X5, X31
	0x0363B2C4 STR X8, [X10]
	0x0363B2C8 STR W9, [X10 + 0x8]
	0x0363B2CC STR W31, [X31 + 0x68]
	0x0363B2D0 STR X31, [X31 + 0x60]
	0x0363B2D4 BL 0x363B588
	0x0363B2D8 LDR W8, [X19 + 0x18]
	0x0363B2DC CMP W8, 0x58
	0x0363B2E0 B.LS 0x363B46C
	0x0363B2E4 LDR X8, [X31 + 0x60]
	0x0363B2E8 LDR W9, [X31 + 0x68]
	0x0363B2EC ADD X0, X31, 0x50
	0x0363B2F0 MOVZ W1, 0x1FFA
	0x0363B2F4 MOVZ W2, 0x1FFB
	0x0363B2F8 MOVZ W3, 0x1
	0x0363B2FC MOVN W4, 0x7D
	0x0363B300 MOV X5, X31
	0x0363B304 STR X8, [X19 + 0x440]
	0x0363B308 STR W9, [X19 + 0x448]
	0x0363B30C STR W31, [X31 + 0x58]
	0x0363B310 STR X31, [X31 + 0x50]
	0x0363B314 BL 0x363B588
	0x0363B318 LDR W8, [X19 + 0x18]
	0x0363B31C CMP W8, 0x59
	0x0363B320 B.LS 0x363B46C
	0x0363B324 LDR X8, [X31 + 0x50]
	0x0363B328 LDR W9, [X31 + 0x58]
	0x0363B32C ADD X10, X19, 0x44C
	0x0363B330 ADD X0, X31, 0x40
	0x0363B334 MOVZ W1, 0x1FFC
	0x0363B338 MOVZ W2, 0x1FFC
	0x0363B33C MOVZ W4, 0x1FF3
	0x0363B340 MOV W3, W31
	0x0363B344 MOV X5, X31
	0x0363B348 STR X8, [X10]
	0x0363B34C STR W9, [X10 + 0x8]
	0x0363B350 STR W31, [X31 + 0x48]
	0x0363B354 STR X31, [X31 + 0x40]
	0x0363B358 BL 0x363B588
	0x0363B35C LDR W8, [X19 + 0x18]
	0x0363B360 CMP W8, 0x5A
	0x0363B364 B.LS 0x363B46C
	0x0363B368 LDR X8, [X31 + 0x40]
	0x0363B36C LDR W9, [X31 + 0x48]
	0x0363B370 ADD X0, X31, 0x30
	0x0363B374 MOVZ W1, 0x2160
	0x0363B378 MOVZ W2, 0x216F
	0x0363B37C MOVZ W3, 0x1
	0x0363B380 MOVZ W4, 0x10
	0x0363B384 MOV X5, X31
	0x0363B388 STR X8, [X19 + 0x458]
	0x0363B38C STR W9, [X19 + 0x460]
	0x0363B390 STR W31, [X31 + 0x38]
	0x0363B394 STR X31, [X31 + 0x30]
	0x0363B398 BL 0x363B588
	0x0363B39C LDR W8, [X19 + 0x18]
	0x0363B3A0 CMP W8, 0x5B
	0x0363B3A4 B.LS 0x363B46C
	0x0363B3A8 LDR X8, [X31 + 0x30]
	0x0363B3AC LDR W9, [X31 + 0x38]
	0x0363B3B0 ADD X10, X19, 0x464
	0x0363B3B4 ADD X0, X31, 0x20
	0x0363B3B8 MOVZ W1, 0x24B6
	0x0363B3BC MOVZ W2, 0x24D0
	0x0363B3C0 MOVZ W3, 0x1
	0x0363B3C4 MOVZ W4, 0x1A
	0x0363B3C8 MOV X5, X31
	0x0363B3CC STR X8, [X10]
	0x0363B3D0 STR W9, [X10 + 0x8]
	0x0363B3D4 STR W31, [X31 + 0x28]
	0x0363B3D8 STR X31, [X31 + 0x20]
	0x0363B3DC BL 0x363B588
	0x0363B3E0 LDR W8, [X19 + 0x18]
	0x0363B3E4 CMP W8, 0x5C
	0x0363B3E8 B.LS 0x363B46C
	0x0363B3EC LDR X8, [X31 + 0x20]
	0x0363B3F0 LDR W9, [X31 + 0x28]
	0x0363B3F4 ADD X0, X31, 0x10
	0x0363B3F8 MOVZ W1, 0xFF21
	0x0363B3FC MOVZ W2, 0xFF3A
	0x0363B400 MOVZ W3, 0x1
	0x0363B404 MOVZ W4, 0x20
	0x0363B408 MOV X5, X31
	0x0363B40C STR X8, [X19 + 0x470]
	0x0363B410 STR W9, [X19 + 0x478]
	0x0363B414 STR W31, [X31 + 0x18]
	0x0363B418 STR X31, [X31 + 0x10]
	0x0363B41C BL 0x363B588
	0x0363B420 LDR W8, [X19 + 0x18]
	0x0363B424 CMP W8, 0x5D
	0x0363B428 B.LS 0x363B46C
	0x0363B42C LDR X8, [X31 + 0x10]
	0x0363B430 LDR W9, [X31 + 0x18]
	0x0363B434 ADD X10, X19, 0x47C
	0x0363B438 STR X8, [X10]
	0x0363B43C STR W9, [X10 + 0x8]
	0x0363B440 LDR X8, [X23]
	0x0363B444 LDR X8, [X8 + 0xB8]
	0x0363B448 STR X19, [X8 + 0x68]
	0x0363B44C ADD X31, X31, 0x5F0
	0x0363B450 LDP X20, X19, [X31 + 0x50]
	0x0363B454 LDP X22, X21, [X31 + 0x40]
	0x0363B458 LDP X24, X23, [X31 + 0x30]
	0x0363B45C LDP X26, X25, [X31 + 0x20]
	0x0363B460 LDP X28, X27, [X31 + 0x10]
	0x0363B464 LDP X29, X30, [X31], #0x60
	0x0363B468 RET
	0x0363B46C BL 0x1C16F28
	0x0363B470 BL 0x1C16F20
	0x0363B474 SUB X31, X31, 0x80
	0x0363B478 STP X30, X21, [X31 + 0x60]
	0x0363B47C STP X20, X19, [X31 + 0x70]
	0x0363B480 ADRP X21, 0xDA5000
	0x0363B484 LDRB W8, [X21 + 0x557]
	0x0363B488 MOV X19, X1
	0x0363B48C MOV X20, X0
	0x0363B490 CBNZ W8, 0x363B4B4
	0x0363B494 ADRP X0, 0xB00000
	0x0363B498 LDR X0, [X0 + 0x800]
	0x0363B49C BL 0x1C16CF4
	0x0363B4A0 ADRP X0, 0xAC0000
	0x0363B4A4 LDR X0, [X0 + 0x600]
	0x0363B4A8 BL 0x1C16CF4
	0x0363B4AC MOVZ W8, 0x1
	0x0363B4B0 STRB W8, [X21 + 0x557]
	0x0363B4B4 ADRP X21, 0xAC0000
	0x0363B4B8 LDR X21, [X21 + 0x600]
	0x0363B4BC LDR X0, [X21]
	0x0363B4C0 LDR W8, [X0 + 0xE0]
	0x0363B4C4 CBNZ W8, 0x363B4D0
	0x0363B4C8 BL 0x1C16DFC
	0x0363B4CC LDR X0, [X21]
	0x0363B4D0 LDR X8, [X0 + 0xB8]
	0x0363B4D4 LDR W9, [X8 + 0x10]
	0x0363B4D8 CMP W9, 0xA
	0x0363B4DC B.GE 0x363B51C
	0x0363B4E0 LDR X8, [X20 + 0x10]
	0x0363B4E4 LDR V0, [X20]
	0x0363B4E8 STR X8, [X31 + 0x50]
	0x0363B4EC STR V0, [X31 + 0x4]
	0x0363B4F0 LDR W8, [X0 + 0xE0]
	0x0363B4F4 CBNZ W8, 0x363B4FC
	0x0363B4F8 BL 0x1C16DFC
	0x0363B4FC LDR V0, [X31 + 0x4]
	0x0363B500 LDR X8, [X31 + 0x50]
	0x0363B504 ADD X0, X31, 0x0
	0x0363B508 MOV X1, X19
	0x0363B50C STR V0, [X31]
	0x0363B510 STR X8, [X31 + 0x10]
	0x0363B514 BL 0x36324D8
	0x0363B518 B 0x363B570
	0x0363B51C LDR W9, [X0 + 0xE0]
	0x0363B520 CBNZ W9, 0x363B530
	0x0363B524 BL 0x1C16DFC
	0x0363B528 LDR X8, [X21]
	0x0363B52C LDR X8, [X8 + 0xB8]
	0x0363B530 LDR X0, [X8 + 0x8]
	0x0363B534 LDR X8, [X20 + 0x10]
	0x0363B538 LDR V0, [X20]
	0x0363B53C STR X8, [X31 + 0x30]
	0x0363B540 STR V0, [X31 + 0x2]
	0x0363B544 CBZ X0, 0x363B584
	0x0363B548 ADRP X8, 0xB00000
	0x0363B54C LDR X8, [X8 + 0x800]
	0x0363B550 LDR V0, [X31 + 0x2]
	0x0363B554 LDR X9, [X31 + 0x30]
	0x0363B558 ADD X1, X31, 0x40
	0x0363B55C LDR X3, [X8]
	0x0363B560 MOV X2, X19
	0x0363B564 STR V0, [X31 + 0x4]
	0x0363B568 STR X9, [X31 + 0x50]
	0x0363B56C BL 0x2B325B4
	0x0363B570 LDP X20, X19, [X31 + 0x70]
	0x0363B574 LDP X30, X21, [X31 + 0x60]
	0x0363B578 AND W0, W0, 0x1
	0x0363B57C ADD X31, X31, 0x80
	0x0363B580 RET
	0x0363B584 BL 0x1C16F20
	0x0363B588 STRH W1, [X0]
	0x0363B58C STRH W2, [X0 + 0x2]
	0x0363B590 STP W3, W4, [X0 + 0x4]
	0x0363B594 RET
	0x0363B598 MOV X1, X31
	0x0363B59C B 0x33BDD8C
	0x0363B5A0 SUB X31, X31, 0x30
	0x0363B5A4 STP X30, X21, [X31 + 0x10]
	0x0363B5A8 STP X20, X19, [X31 + 0x20]
	0x0363B5AC ADRP X20, 0xDA5000
	0x0363B5B0 STR W1, [X31 + 0xC]
	0x0363B5B4 ADRP X21, 0xABA000
	0x0363B5B8 LDRB W8, [X20 + 0x559]
	0x0363B5BC LDR X21, [X21 + 0x170]
	0x0363B5C0 MOV X19, X2
	0x0363B5C4 TBNZ X8, 0x0, 0x363B5DC
	0x0363B5C8 ADRP X0, 0xABA000
	0x0363B5CC LDR X0, [X0 + 0x170]
	0x0363B5D0 BL 0x1C16CF4
	0x0363B5D4 MOVZ W8, 0x1
	0x0363B5D8 STRB W8, [X20 + 0x559]
	0x0363B5DC LDR X0, [X21]
	0x0363B5E0 LDR W8, [X0 + 0xE0]
	0x0363B5E4 CBNZ W8, 0x363B5EC
	0x0363B5E8 BL 0x1C16DFC
	0x0363B5EC ADD X0, X31, 0xC
	0x0363B5F0 MOV W1, W19
	0x0363B5F4 MOV X2, X31
	0x0363B5F8 BL 0x331A770
	0x0363B5FC LDP X20, X19, [X31 + 0x20]
	0x0363B600 LDP X30, X21, [X31 + 0x10]
	0x0363B604 ADD X31, X31, 0x30
	0x0363B608 RET
	0x0363B60C STR X30, [X31 - 0x20]!
	0x0363B610 STP X20, X19, [X31 + 0x10]
	0x0363B614 ADRP X19, 0xDA5000
	0x0363B618 ADRP X20, 0xB00000
	0x0363B61C LDRB W8, [X19 + 0x55A]
	0x0363B620 LDR X20, [X20 + 0x968]
	0x0363B624 TBNZ X8, 0x0, 0x363B63C
	0x0363B628 ADRP X0, 0xB00000
	0x0363B62C LDR X0, [X0 + 0x968]
	0x0363B630 BL 0x1C16CF4
	0x0363B634 MOVZ W8, 0x1
	0x0363B638 STRB W8, [X19 + 0x55A]
	0x0363B63C LDR X0, [X20]
	0x0363B640 BL 0x1C16F10
	0x0363B644 MOV X1, X31
	0x0363B648 MOV X19, X0
	0x0363B64C BL 0x33BDD8C
	0x0363B650 LDR X8, [X20]
	0x0363B654 LDR X8, [X8 + 0xB8]
	0x0363B658 STR X19, [X8]
	0x0363B65C LDP X20, X19, [X31 + 0x10]
	0x0363B660 LDR X30, [X31], #0x20
	0x0363B664 RET
	0x0363B668 STRH W1, [X0]
	0x0363B66C STRH W2, [X0 + 0x2]
	0x0363B670 RET
	0x0363B674 STP X30, X27, [X31 - 0x50]!
	0x0363B678 STP X26, X25, [X31 + 0x10]
	0x0363B67C STP X24, X23, [X31 + 0x20]
	0x0363B680 STP X22, X21, [X31 + 0x30]
	0x0363B684 STP X20, X19, [X31 + 0x40]
	0x0363B688 ADRP X27, 0xDA5000
	0x0363B68C LDRB W8, [X27 + 0x55B]
	0x0363B690 MOV X19, X7
	0x0363B694 MOV X20, X6
	0x0363B698 MOV W21, W5
	0x0363B69C MOV X23, X4
	0x0363B6A0 MOV W24, W3
	0x0363B6A4 MOV X25, X2
	0x0363B6A8 MOV X26, X1
	0x0363B6AC MOV X22, X0
	0x0363B6B0 TBNZ X8, 0x0, 0x363B6C8
	0x0363B6B4 ADRP X0, 0xABA000
	0x0363B6B8 LDR X0, [X0 + 0xE78]
	0x0363B6BC BL 0x1C16CF4
	0x0363B6C0 MOVZ W8, 0x1
	0x0363B6C4 STRB W8, [X27 + 0x55B]
	0x0363B6C8 MOV X0, X22
	0x0363B6CC MOV X1, X31
	0x0363B6D0 BL 0x33BDD8C
	0x0363B6D4 STR X26, [X22 + 0x10]
	0x0363B6D8 CBZ X25, 0x363B740
	0x0363B6DC ADRP X9, 0xABA000
	0x0363B6E0 LDR X9, [X9 + 0xE78]
	0x0363B6E4 LDRB W8, [X31 + 0x58]
	0x0363B6E8 LDR W26, [X31 + 0x50]
	0x0363B6EC MOV X0, X25
	0x0363B6F0 LDR X1, [X9]
	0x0363B6F4 AND W27, W8, 0x1
	0x0363B6F8 BL 0x301DDC4
	0x0363B6FC STR X0, [X22 + 0x18]
	0x0363B700 STR W24, [X22 + 0x20]
	0x0363B704 STR X23, [X22 + 0x28]
	0x0363B708 STR W21, [X22 + 0x30]
	0x0363B70C STR X20, [X22 + 0x50]
	0x0363B710 LDR V0, [X19]
	0x0363B714 LDR X8, [X19 + 0x10]
	0x0363B718 STR W26, [X22 + 0x58]
	0x0363B71C STRB W27, [X22 + 0x5C]
	0x0363B720 STUR V0, [X22 + 0x38]
	0x0363B724 STR X8, [X22 + 0x48]
	0x0363B728 LDP X20, X19, [X31 + 0x40]
	0x0363B72C LDP X22, X21, [X31 + 0x30]
	0x0363B730 LDP X24, X23, [X31 + 0x20]
	0x0363B734 LDP X26, X25, [X31 + 0x10]
	0x0363B738 LDP X30, X27, [X31], #0x50
	0x0363B73C RET
	0x0363B740 BL 0x1C16F20
	0x0363B744 AND W8, W0, 0x3F
	0x0363B748 SUB W8, W8, 0x3
	0x0363B74C CMP W8, 0x23
	0x0363B750 B.HI 0x363B76C
	0x0363B754 MOVZ X9, 0x3F
	0x0363B758 MOVK X9, 0xF7F00000
	0x0363B75C MOVK X9, 0xB
	0x0363B760 LSRV X8, X9, X8
	0x0363B764 AND W0, W8, 0x1
	0x0363B768 RET
	0x0363B76C MOV W0, W31
	0x0363B770 RET
	0x0363B774 SUB X31, X31, 0x60
	0x0363B778 STP X30, X25, [X31 + 0x20]
	0x0363B77C STP X24, X23, [X31 + 0x30]
	0x0363B780 STP X22, X21, [X31 + 0x40]
	0x0363B784 STP X20, X19, [X31 + 0x50]
	0x0363B788 ADRP X24, 0xDA5000
	0x0363B78C ADRP X25, 0xB01000
	0x0363B790 ADRP X22, 0xB01000
	0x0363B794 ADRP X23, 0xB01000
	0x0363B798 LDRB W8, [X24 + 0x55C]
	0x0363B79C LDR X25, [X25 + 0x2B0]
	0x0363B7A0 LDR X22, [X22 + 0x2B8]
	0x0363B7A4 LDR X23, [X23 + 0x2C0]
	0x0363B7A8 MOV X20, X2
	0x0363B7AC MOV X21, X1
	0x0363B7B0 MOV X19, X0
	0x0363B7B4 TBNZ X8, 0x0, 0x363B7E4
	0x0363B7B8 ADRP X0, 0xB01000
	0x0363B7BC LDR X0, [X0 + 0x2B8]
	0x0363B7C0 BL 0x1C16CF4
	0x0363B7C4 ADRP X0, 0xB01000
	0x0363B7C8 LDR X0, [X0 + 0x2B0]
	0x0363B7CC BL 0x1C16CF4
	0x0363B7D0 ADRP X0, 0xB01000
	0x0363B7D4 LDR X0, [X0 + 0x2C0]
	0x0363B7D8 BL 0x1C16CF4
	0x0363B7DC MOVZ W8, 0x1
	0x0363B7E0 STRB W8, [X24 + 0x55C]
	0x0363B7E4 LDR X0, [X25]
	0x0363B7E8 BL 0x1C16F10
	0x0363B7EC LDR X2, [X22]
	0x0363B7F0 MOVZ W1, 0x20
	0x0363B7F4 MOV X22, X0
	0x0363B7F8 BL 0x301B830
	0x0363B7FC STR X22, [X19]
	0x0363B800 LDR X3, [X23]
	0x0363B804 MOVI V0.2D, 0x0
	0x0363B808 ADD X0, X31, 0x0
	0x0363B80C MOV X1, X21
	0x0363B810 MOV X2, X20
	0x0363B814 STP V0, V0, [X31]
	0x0363B818 BL 0x278D208
	0x0363B81C LDP V1, V0, [X31]
	0x0363B820 STRB W31, [X19 + 0x2A]
	0x0363B824 STRH W31, [X19 + 0x28]
	0x0363B828 LDP X22, X21, [X31 + 0x40]
	0x0363B82C STUR V0, [X19 + 0x18]
	0x0363B830 STUR V1, [X19 + 0x8]
	0x0363B834 LDP X20, X19, [X31 + 0x50]
	0x0363B838 LDP X24, X23, [X31 + 0x30]
	0x0363B83C LDP X30, X25, [X31 + 0x20]
	0x0363B840 ADD X31, X31, 0x60
	0x0363B844 RET
	0x0363B848 STP X29, X30, [X31 - 0x30]!
	0x0363B84C STP X22, X21, [X31 + 0x10]
	0x0363B850 STP X20, X19, [X31 + 0x20]
	0x0363B854 ADD X29, X31, 0x0
	0x0363B858 SUB X31, X31, 0x40
	0x0363B85C MRS X22, 0xC000
	0x0363B860 LDR X9, [X22 + 0x28]
	0x0363B864 ADRP X21, 0xDA5000
	0x0363B868 MOV X20, X0
	0x0363B86C MOV X19, X8
	0x0363B870 STUR X9, [X29 - 0x8]
	0x0363B874 LDRB W9, [X21 + 0x55D]
	0x0363B878 TBNZ X9, 0x0, 0x363B8A8
	0x0363B87C ADRP X0, 0xABA000
	0x0363B880 LDR X0, [X0 + 0xC48]
	0x0363B884 BL 0x1C16CF4
	0x0363B888 ADRP X0, 0xB01000
	0x0363B88C LDR X0, [X0 + 0x2C8]
	0x0363B890 BL 0x1C16CF4
	0x0363B894 ADRP X0, 0xAE7000
	0x0363B898 LDR X0, [X0 + 0x160]
	0x0363B89C BL 0x1C16CF4
	0x0363B8A0 MOVZ W8, 0x1
	0x0363B8A4 STRB W8, [X21 + 0x55D]
	0x0363B8A8 ADD X8, X31, 0x0
	0x0363B8AC MOVI V0.2D, 0x0
	0x0363B8B0 SUB X1, X8, 0x80
	0x0363B8B4 STP V0, V0, [X29 - 0x30]
	0x0363B8B8 STUR V0, [X29 - 0x40]
	0x0363B8BC ADD X31, X1, 0x0
	0x0363B8C0 SUB X0, X29, 0x40
	0x0363B8C4 MOVZ W2, 0x20
	0x0363B8C8 STP V0, V0, [X8 - 0x20]
	0x0363B8CC STP V0, V0, [X8 - 0x40]
	0x0363B8D0 STP V0, V0, [X8 - 0x60]
	0x0363B8D4 STP V0, V0, [X8 - 0x80]
	0x0363B8D8 BL 0x363B774
	0x0363B8DC SUB X0, X29, 0x40
	0x0363B8E0 MOV X1, X20
	0x0363B8E4 BL 0x363B99C
	0x0363B8E8 MOV X21, X0
	0x0363B8EC SUB X0, X29, 0x40
	0x0363B8F0 BL 0x363BB34
	0x0363B8F4 CBZ X21, 0x363B900
	0x0363B8F8 LDRB W8, [X21 + 0x18]
	0x0363B8FC CBZ W8, 0x363B90C
	0x0363B900 STP X31, X31, [X19]
	0x0363B904 STR X31, [X19 + 0x10]
	0x0363B908 B 0x363B970
	0x0363B90C CBZ X20, 0x363B994
	0x0363B910 ADRP X8, 0xABA000
	0x0363B914 LDR X8, [X8 + 0xC48]
	0x0363B918 LDR W20, [X20 + 0x40]
	0x0363B91C LDR X0, [X8]
	0x0363B920 LDR W8, [X0 + 0xE0]
	0x0363B924 CBNZ W8, 0x363B92C
	0x0363B928 BL 0x1C16DFC
	0x0363B92C MOV X0, X31
	0x0363B930 TBNZ X20, 0x9, 0x363B93C
	0x0363B934 BL 0x33387A0
	0x0363B938 B 0x363B940
	0x0363B93C BL 0x3338524
	0x0363B940 MOV X1, X0
	0x0363B944 MOV X0, X21
	0x0363B948 BL 0x363BB7C
	0x0363B94C ADRP X8, 0xB01000
	0x0363B950 LDRB W1, [X21 + 0x19]
	0x0363B954 LDR X8, [X8 + 0x2C8]
	0x0363B958 MOV X2, X0
	0x0363B95C MOV X0, X19
	0x0363B960 STP X31, X31, [X19 + 0x8]
	0x0363B964 LDR X3, [X8]
	0x0363B968 STR X31, [X19]
	0x0363B96C BL 0x2439084
	0x0363B970 LDR X8, [X22 + 0x28]
	0x0363B974 LDUR X9, [X29 - 0x8]
	0x0363B978 CMP X8, X9
	0x0363B97C B.NE 0x363B998
	0x0363B980 ADD X31, X29, 0x0
	0x0363B984 LDP X20, X19, [X31 + 0x20]
	0x0363B988 LDP X22, X21, [X31 + 0x10]
	0x0363B98C LDP X29, X30, [X31], #0x30
	0x0363B990 RET
	0x0363B994 BL 0x1C16F20
	0x0363B998 BL 0x3EB1B20
	0x0363B99C STP X30, X25, [X31 - 0x40]!
	0x0363B9A0 STP X24, X23, [X31 + 0x10]
	0x0363B9A4 STP X22, X21, [X31 + 0x20]
	0x0363B9A8 STP X20, X19, [X31 + 0x30]
	0x0363B9AC ADRP X21, 0xDA5000
	0x0363B9B0 LDRB W8, [X21 + 0x567]
	0x0363B9B4 MOV X20, X1
	0x0363B9B8 MOV X19, X0
	0x0363B9BC TBNZ X8, 0x0, 0x363B9E0
	0x0363B9C0 ADRP X0, 0xB01000
	0x0363B9C4 LDR X0, [X0 + 0x2D0]
	0x0363B9C8 BL 0x1C16CF4
	0x0363B9CC ADRP X0, 0xB01000
	0x0363B9D0 LDR X0, [X0 + 0x2D8]
	0x0363B9D4 BL 0x1C16CF4
	0x0363B9D8 MOVZ W8, 0x1
	0x0363B9DC STRB W8, [X21 + 0x567]
	0x0363B9E0 CBZ X20, 0x363BAF4
	0x0363B9E4 LDR X21, [X20 + 0x10]
	0x0363B9E8 CBZ X21, 0x363BAF4
	0x0363B9EC ADRP X23, 0xB01000
	0x0363B9F0 ADRP X20, 0xB01000
	0x0363B9F4 LDR X23, [X23 + 0x2D8]
	0x0363B9F8 LDR X20, [X20 + 0x2E0]
	0x0363B9FC MOV W22, W31
	0x0363BA00 ADRP X24, 0xDA5000
	0x0363BA04 MOVZ W25, 0x1
	0x0363BA08 LDR X8, [X21 + 0x18]
	0x0363BA0C CBZ X8, 0x363BA54
	0x0363BA10 LDR W8, [X8 + 0x18]
	0x0363BA14 CMP W22, W8
	0x0363BA18 B.GE 0x363BA68
	0x0363BA1C LDRB W8, [X19 + 0x28]
	0x0363BA20 CBNZ W8, 0x363BA68
	0x0363BA24 LDR W8, [X21 + 0x10]
	0x0363BA28 MOV X0, X19
	0x0363BA2C MOV X2, X21
	0x0363BA30 MOV W3, W22
	0x0363BA34 ORR W1, W8, 0x40
	0x0363BA38 BL 0x363C368
	0x0363BA3C LDRB W8, [X19 + 0x29]
	0x0363BA40 CBZ W8, 0x363BAC8
	0x0363BA44 STRB W31, [X19 + 0x29]
	0x0363BA48 LDR X8, [X21 + 0x18]
	0x0363BA4C ADD W22, W22, 0x1
	0x0363BA50 CBNZ X8, 0x363BA10
	0x0363BA54 LDR W1, [X21 + 0x10]
	0x0363BA58 MOV X0, X19
	0x0363BA5C MOV X2, X21
	0x0363BA60 MOV W3, W31
	0x0363BA64 BL 0x363C368
	0x0363BA68 STRB W31, [X19 + 0x28]
	0x0363BA6C LDRB W8, [X24 + 0x560]
	0x0363BA70 TBNZ X8, 0x0, 0x363BA80
	0x0363BA74 MOV X0, X20
	0x0363BA78 BL 0x1C16CF4
	0x0363BA7C STRB W25, [X24 + 0x560]
	0x0363BA80 LDR W8, [X19 + 0x20]
	0x0363BA84 CBZ W8, 0x363BAF8
	0x0363BA88 MOV X0, X19
	0x0363BA8C BL 0x363C138
	0x0363BA90 LDR X21, [X21 + 0x38]
	0x0363BA94 CBZ X21, 0x363BAF4
	0x0363BA98 LDR W8, [X21 + 0x10]
	0x0363BA9C MOV W22, W0
	0x0363BAA0 MOV X0, X19
	0x0363BAA4 MOV X2, X21
	0x0363BAA8 ORR W1, W8, 0x80
	0x0363BAAC MOV W3, W22
	0x0363BAB0 BL 0x363C368
	0x0363BAB4 LDRB W8, [X19 + 0x2A]
	0x0363BAB8 CBNZ W8, 0x363BB04
	0x0363BABC ADD W22, W22, 0x1
	0x0363BAC0 CBNZ X21, 0x363BA08
	0x0363BAC4 B 0x363BAF4
	0x0363BAC8 LDR X0, [X21 + 0x18]
	0x0363BACC CBZ X0, 0x363BAF4
	0x0363BAD0 LDR X2, [X23]
	0x0363BAD4 MOV W1, W22
	0x0363BAD8 BL 0x301BCCC
	0x0363BADC MOV X21, X0
	0x0363BAE0 MOV X0, X19
	0x0363BAE4 MOV W1, W22
	0x0363BAE8 BL 0x363C040
	0x0363BAEC MOV W22, W31
	0x0363BAF0 CBNZ X21, 0x363BA08
	0x0363BAF4 BL 0x1C16F20
	0x0363BAF8 MOV X0, X19
	0x0363BAFC BL 0x363C238
	0x0363BB00 TBZ X0, 0x0, 0x363BB1C
	0x0363BB04 LDP X20, X19, [X31 + 0x30]
	0x0363BB08 LDP X22, X21, [X31 + 0x20]
	0x0363BB0C LDP X24, X23, [X31 + 0x10]
	0x0363BB10 MOV X0, X31
	0x0363BB14 LDP X30, X25, [X31], #0x40
	0x0363BB18 RET
	0x0363BB1C MOV X0, X19
	0x0363BB20 LDP X20, X19, [X31 + 0x30]
	0x0363BB24 LDP X22, X21, [X31 + 0x20]
	0x0363BB28 LDP X24, X23, [X31 + 0x10]
	0x0363BB2C LDP X30, X25, [X31], #0x40
	0x0363BB30 B 0x363C288
	0x0363BB34 STP X30, X21, [X31 - 0x20]!
	0x0363BB38 STP X20, X19, [X31 + 0x10]
	0x0363BB3C ADRP X21, 0xDA5000
	0x0363BB40 ADRP X20, 0xB01000
	0x0363BB44 LDRB W8, [X21 + 0x566]
	0x0363BB48 LDR X20, [X20 + 0x2E8]
	0x0363BB4C MOV X19, X0
	0x0363BB50 TBNZ X8, 0x0, 0x363BB68
	0x0363BB54 ADRP X0, 0xB01000
	0x0363BB58 LDR X0, [X0 + 0x2E8]
	0x0363BB5C BL 0x1C16CF4
	0x0363BB60 MOVZ W8, 0x1
	0x0363BB64 STRB W8, [X21 + 0x566]
	0x0363BB68 LDR X1, [X20]
	0x0363BB6C ADD X0, X19, 0x8
	0x0363BB70 LDP X20, X19, [X31 + 0x10]
	0x0363BB74 LDP X30, X21, [X31], #0x20
	0x0363BB78 B 0x3648634
	0x0363BB7C STP X30, X19, [X31 - 0x10]!
	0x0363BB80 LDRB W8, [X0 + 0x19]
	0x0363BB84 MOV X19, X0
	0x0363BB88 CBZ W8, 0x363BB9C
	0x0363BB8C LDR X0, [X19 + 0x10]
	0x0363BB90 CBZ X0, 0x363BBB0
	0x0363BB94 MOV X2, X31
	0x0363BB98 BL 0x3634CF4
	0x0363BB9C LDR X0, [X19 + 0x10]
	0x0363BBA0 CBZ X0, 0x363BBB0
	0x0363BBA4 MOV X1, X31
	0x0363BBA8 LDP X30, X19, [X31], #0x10
	0x0363BBAC B 0x3635FCC
	0x0363BBB0 BL 0x1C16F20
	0x0363BBB4 AND W8, W2, 0x1
	0x0363BBB8 STR X1, [X0 + 0x8]
	0x0363BBBC STRB W8, [X0]
	0x0363BBC0 RET
	0x0363BBC4 STP X30, X25, [X31 - 0x40]!
	0x0363BBC8 STP X24, X23, [X31 + 0x10]
	0x0363BBCC STP X22, X21, [X31 + 0x20]
	0x0363BBD0 STP X20, X19, [X31 + 0x30]
	0x0363BBD4 ADRP X20, 0xDA5000
	0x0363BBD8 LDRB W8, [X20 + 0x55E]
	0x0363BBDC MOV X19, X0
	0x0363BBE0 TBNZ X8, 0x0, 0x363BC10
	0x0363BBE4 ADRP X0, 0xABA000
	0x0363BBE8 LDR X0, [X0 + 0x170]
	0x0363BBEC BL 0x1C16CF4
	0x0363BBF0 ADRP X0, 0xB01000
	0x0363BBF4 LDR X0, [X0 + 0x2F0]
	0x0363BBF8 BL 0x1C16CF4
	0x0363BBFC ADRP X0, 0xABA000
	0x0363BC00 LDR X0, [X0 + 0x278]
	0x0363BC04 BL 0x1C16CF4
	0x0363BC08 MOVZ W8, 0x1
	0x0363BC0C STRB W8, [X20 + 0x55E]
	0x0363BC10 CBZ X19, 0x363BDF8
	0x0363BC14 LDR X0, [X19 + 0x10]
	0x0363BC18 CBZ X0, 0x363BDF8
	0x0363BC1C ADRP X20, 0xB01000
	0x0363BC20 LDR X20, [X20 + 0x2D0]
	0x0363BC24 ADRP X22, 0xFFFFFFFFFD55C000
	0x0363BC28 MOV X19, X31
	0x0363BC2C MOV W21, W31
	0x0363BC30 ADD X22, X22, 0x357
	0x0363BC34 ADRP X23, 0xDA5000
	0x0363BC38 MOVZ W24, 0x1
	0x0363BC3C MOV X25, X19
	0x0363BC40 MOV X19, X0
	0x0363BC44 LDR W8, [X19 + 0x10]
	0x0363BC48 SUB W8, W8, 0x3
	0x0363BC4C CMP W8, 0x26
	0x0363BC50 B.HI 0x363BD14
	0x0363BC54 ADR X9, 0x10
	0x0363BC58 LDRB W10, [X22, X8, LSL]
	0x0363BC5C ADD X9, X9, X10, 0x2, LSL
	0x0363BC60 BR X9
	0x0363BC64 MOV X0, X19
	0x0363BC68 MOV W1, W31
	0x0363BC6C BL 0x363BE48
	0x0363BC70 MOV X19, X0
	0x0363BC74 MOV X25, X31
	0x0363BC78 CBNZ X0, 0x363BC44
	0x0363BC7C B 0x363BDF8
	0x0363BC80 LDRB W8, [X23 + 0x57B]
	0x0363BC84 TBNZ X8, 0x0, 0x363BC94
	0x0363BC88 MOV X0, X20
	0x0363BC8C BL 0x1C16CF4
	0x0363BC90 STRB W24, [X23 + 0x57B]
	0x0363BC94 LDR X8, [X19 + 0x18]
	0x0363BC98 CBZ X8, 0x363BCB0
	0x0363BC9C LDR W8, [X8 + 0x18]
	0x0363BCA0 CMP W8, 0x1
	0x0363BCA4 B.LT 0x363BCB0
	0x0363BCA8 MOV W21, W31
	0x0363BCAC B 0x363BCCC
	0x0363BCB0 CBZ X25, 0x363BD14
	0x0363BCB4 LDRB W8, [X23 + 0x57B]
	0x0363BCB8 TBNZ X8, 0x0, 0x363BCC8
	0x0363BCBC MOV X0, X20
	0x0363BCC0 BL 0x1C16CF4
	0x0363BCC4 STRB W24, [X23 + 0x57B]
	0x0363BCC8 MOV X19, X25
	0x0363BCCC LDR X8, [X19 + 0x18]
	0x0363BCD0 CBZ X8, 0x363BCD8
	0x0363BCD4 LDR W8, [X8 + 0x18]
	0x0363BCD8 CMP W21, W8
	0x0363BCDC B.GE 0x363BD14
	0x0363BCE0 MOV X0, X19
	0x0363BCE4 MOV W1, W21
	0x0363BCE8 ADD W25, W21, 0x1
	0x0363BCEC BL 0x363BE48
	0x0363BCF0 MOV W21, W25
	0x0363BCF4 CBNZ X0, 0x363BC3C
	0x0363BCF8 B 0x363BDF8
	0x0363BCFC LDR W1, [X19 + 0x2C]
	0x0363BD00 MOVZ W9, 0x423E
	0x0363BD04 MOVK W9, 0xF0000
	0x0363BD08 SUB W8, W1, 0x1
	0x0363BD0C CMP W8, W9
	0x0363BD10 B.LS 0x363BDA8
	0x0363BD14 ADRP X19, 0xB01000
	0x0363BD18 LDR X19, [X19 + 0x2F0]
	0x0363BD1C LDR X0, [X19]
	0x0363BD20 LDR W8, [X0 + 0xE0]
	0x0363BD24 CBNZ W8, 0x363BD2C
	0x0363BD28 BL 0x1C16DFC
	0x0363BD2C ADRP X20, 0xDA5000
	0x0363BD30 LDRB W8, [X20 + 0x5BF]
	0x0363BD34 CBNZ W8, 0x363BD4C
	0x0363BD38 ADRP X0, 0xB01000
	0x0363BD3C LDR X0, [X0 + 0x2F0]
	0x0363BD40 BL 0x1C16CF4
	0x0363BD44 MOVZ W8, 0x1
	0x0363BD48 STRB W8, [X20 + 0x5BF]
	0x0363BD4C LDR X0, [X19]
	0x0363BD50 LDR W8, [X0 + 0xE0]
	0x0363BD54 CBNZ W8, 0x363BD60
	0x0363BD58 BL 0x1C16DFC
	0x0363BD5C LDR X0, [X19]
	0x0363BD60 LDR X8, [X0 + 0xB8]
	0x0363BD64 LDP X9, X1, [X8]
	0x0363BD68 AND X8, X9, 0xFFFFFFFF
	0x0363BD6C B 0x363BDDC
	0x0363BD70 ADRP X8, 0xABA000
	0x0363BD74 LDR X8, [X8 + 0x170]
	0x0363BD78 ADD X20, X19, 0x28
	0x0363BD7C LDR X0, [X8]
	0x0363BD80 LDR W8, [X0 + 0xE0]
	0x0363BD84 CBNZ W8, 0x363BD8C
	0x0363BD88 BL 0x1C16DFC
	0x0363BD8C MOV X0, X20
	0x0363BD90 MOV X1, X31
	0x0363BD94 BL 0x330A76C
	0x0363BD98 B 0x363BDCC
	0x0363BD9C LDR W9, [X19 + 0x34]
	0x0363BDA0 LDR X1, [X19 + 0x20]
	0x0363BDA4 B 0x363BDD4
	0x0363BDA8 ADRP X8, 0xABA000
	0x0363BDAC LDR X8, [X8 + 0x278]
	0x0363BDB0 LDR X8, [X8]
	0x0363BDB4 LDR X8, [X8 + 0xB8]
	0x0363BDB8 LDR X0, [X8]
	0x0363BDBC CBZ X0, 0x363BDF8
	0x0363BDC0 LDRH W2, [X19 + 0x28]
	0x0363BDC4 MOV X3, X31
	0x0363BDC8 BL 0x3228A68
	0x0363BDCC LDR W9, [X19 + 0x34]
	0x0363BDD0 MOV X1, X0
	0x0363BDD4 MOV X8, X31
	0x0363BDD8 AND X9, X9, 0x1
	0x0363BDDC LDP X20, X19, [X31 + 0x30]
	0x0363BDE0 LDP X22, X21, [X31 + 0x20]
	0x0363BDE4 LDP X24, X23, [X31 + 0x10]
	0x0363BDE8 AND X9, X9, 0xFF
	0x0363BDEC ORR X0, X8, X9, 0x0
	0x0363BDF0 LDP X30, X25, [X31], #0x40
	0x0363BDF4 RET
	0x0363BDF8 BL 0x1C16F20
	0x0363BDFC STR X30, [X31 - 0x20]!
	0x0363BE00 STP X20, X19, [X31 + 0x10]
	0x0363BE04 ADRP X20, 0xDA5000
	0x0363BE08 LDRB W8, [X20 + 0x57B]
	0x0363BE0C MOV X19, X0
	0x0363BE10 TBNZ X8, 0x0, 0x363BE28
	0x0363BE14 ADRP X0, 0xB01000
	0x0363BE18 LDR X0, [X0 + 0x2D0]
	0x0363BE1C BL 0x1C16CF4
	0x0363BE20 MOVZ W8, 0x1
	0x0363BE24 STRB W8, [X20 + 0x57B]
	0x0363BE28 LDR X8, [X19 + 0x18]
	0x0363BE2C CBZ X8, 0x363BE38
	0x0363BE30 LDR W0, [X8 + 0x18]
	0x0363BE34 B 0x363BE3C
	0x0363BE38 MOV W0, W31
	0x0363BE3C LDP X20, X19, [X31 + 0x10]
	0x0363BE40 LDR X30, [X31], #0x20
	0x0363BE44 RET
	0x0363BE48 STP X30, X21, [X31 - 0x20]!
	0x0363BE4C STP X20, X19, [X31 + 0x10]
	0x0363BE50 ADRP X21, 0xDA5000
	0x0363BE54 LDRB W8, [X21 + 0x57A]
	0x0363BE58 MOV W19, W1
	0x0363BE5C MOV X20, X0
	0x0363BE60 TBNZ X8, 0x0, 0x363BE78
	0x0363BE64 ADRP X0, 0xB01000
	0x0363BE68 LDR X0, [X0 + 0x2D8]
	0x0363BE6C BL 0x1C16CF4
	0x0363BE70 MOVZ W8, 0x1
	0x0363BE74 STRB W8, [X21 + 0x57A]
	0x0363BE78 LDR X0, [X20 + 0x18]
	0x0363BE7C CBZ X0, 0x363BE9C
	0x0363BE80 ADRP X8, 0xB01000
	0x0363BE84 LDR X8, [X8 + 0x2D8]
	0x0363BE88 MOV W1, W19
	0x0363BE8C LDP X20, X19, [X31 + 0x10]
	0x0363BE90 LDR X2, [X8]
	0x0363BE94 LDP X30, X21, [X31], #0x20
	0x0363BE98 B 0x301BCCC
	0x0363BE9C BL 0x1C16F20
	0x0363BEA0 STR X30, [X31 - 0x50]!
	0x0363BEA4 STP X26, X25, [X31 + 0x10]
	0x0363BEA8 STP X24, X23, [X31 + 0x20]
	0x0363BEAC STP X22, X21, [X31 + 0x30]
	0x0363BEB0 STP X20, X19, [X31 + 0x40]
	0x0363BEB4 CBZ X0, 0x363BF98
	0x0363BEB8 LDR X22, [X0 + 0x10]
	0x0363BEBC CBZ X22, 0x363BF98
	0x0363BEC0 ADRP X19, 0xB01000
	0x0363BEC4 LDR X19, [X19 + 0x2D0]
	0x0363BEC8 ADRP X23, 0xFFFFFFFFFD55C000
	0x0363BECC MOV X21, X31
	0x0363BED0 MOV W20, W31
	0x0363BED4 ADD X23, X23, 0x37E
	0x0363BED8 ADRP X24, 0xDA5000
	0x0363BEDC MOVZ W25, 0x1
	0x0363BEE0 LDR W0, [X22 + 0x10]
	0x0363BEE4 SUB W8, W0, 0xE
	0x0363BEE8 CMP W8, 0x1B
	0x0363BEEC B.HI 0x363BFB4
	0x0363BEF0 ADR X9, 0x10
	0x0363BEF4 LDRB W10, [X23, X8, LSL]
	0x0363BEF8 ADD X9, X9, X10, 0x2, LSL
	0x0363BEFC BR X9
	0x0363BF00 MOV X0, X22
	0x0363BF04 MOV W1, W31
	0x0363BF08 BL 0x363BE48
	0x0363BF0C MOV X22, X0
	0x0363BF10 MOV X21, X31
	0x0363BF14 CBNZ X0, 0x363BEE0
	0x0363BF18 B 0x363BF98
	0x0363BF1C LDRB W8, [X24 + 0x57B]
	0x0363BF20 TBNZ X8, 0x0, 0x363BF30
	0x0363BF24 MOV X0, X19
	0x0363BF28 BL 0x1C16CF4
	0x0363BF2C STRB W25, [X24 + 0x57B]
	0x0363BF30 LDR X8, [X22 + 0x18]
	0x0363BF34 CBZ X8, 0x363BF50
	0x0363BF38 LDR W8, [X8 + 0x18]
	0x0363BF3C CMP W8, 0x1
	0x0363BF40 B.LT 0x363BF50
	0x0363BF44 MOV W20, W31
	0x0363BF48 MOV X21, X22
	0x0363BF4C B 0x363BF54
	0x0363BF50 CBZ X21, 0x363BFB4
	0x0363BF54 LDRB W8, [X24 + 0x57B]
	0x0363BF58 TBNZ X8, 0x0, 0x363BF68
	0x0363BF5C MOV X0, X19
	0x0363BF60 BL 0x1C16CF4
	0x0363BF64 STRB W25, [X24 + 0x57B]
	0x0363BF68 LDR X8, [X21 + 0x18]
	0x0363BF6C CBZ X8, 0x363BF74
	0x0363BF70 LDR W8, [X8 + 0x18]
	0x0363BF74 CMP W20, W8
	0x0363BF78 B.GE 0x363BFB4
	0x0363BF7C MOV X0, X21
	0x0363BF80 MOV W1, W20
	0x0363BF84 ADD W26, W20, 0x1
	0x0363BF88 BL 0x363BE48
	0x0363BF8C MOV X22, X0
	0x0363BF90 MOV W20, W26
	0x0363BF94 CBNZ X0, 0x363BEE0
	0x0363BF98 BL 0x1C16F20
	0x0363BF9C LDP X20, X19, [X31 + 0x40]
	0x0363BFA0 LDP X22, X21, [X31 + 0x30]
	0x0363BFA4 LDP X24, X23, [X31 + 0x20]
	0x0363BFA8 LDP X26, X25, [X31 + 0x10]
	0x0363BFAC LDR X30, [X31], #0x50
	0x0363BFB0 B 0x363BFD0
	0x0363BFB4 LDP X20, X19, [X31 + 0x40]
	0x0363BFB8 LDP X22, X21, [X31 + 0x30]
	0x0363BFBC LDP X24, X23, [X31 + 0x20]
	0x0363BFC0 LDP X26, X25, [X31 + 0x10]
	0x0363BFC4 MOV W0, W31
	0x0363BFC8 LDR X30, [X31], #0x50
	0x0363BFCC RET
	0x0363BFD0 SUB W8, W0, 0xE
	0x0363BFD4 CMP W8, 0x7
	0x0363BFD8 B.HI 0x363C000
	0x0363BFDC ADRP X9, 0xFFFFFFFFFD55C000
	0x0363BFE0 ADD X9, X9, 0x39A
	0x0363BFE4 ADR X10, 0x14
	0x0363BFE8 LDRB W11, [X9, X8, LSL]
	0x0363BFEC ADD X10, X10, X11, 0x2, LSL
	0x0363BFF0 MOVZ W0, 0x8
	0x0363BFF4 BR X10
	0x0363BFF8 MOVZ W0, 0x2
	0x0363BFFC RET
	0x0363C000 CMP W0, 0x29
	0x0363C004 B.NE 0x363C010
	0x0363C008 MOVZ W0, 0x80
	0x0363C00C RET
	0x0363C010 MOV W0, W31
	0x0363C014 RET
	0x0363C018 MOVZ W0, 0x40
	0x0363C01C RET
	0x0363C020 MOVZ W0, 0x1
	0x0363C024 RET
	0x0363C028 MOVZ W0, 0x4
	0x0363C02C RET
	0x0363C030 MOVZ W0, 0x10
	0x0363C034 RET
	0x0363C038 MOVZ W0, 0x20
	0x0363C03C RET
	0x0363C040 STR X30, [X31 - 0x30]!
	0x0363C044 STP X22, X21, [X31 + 0x10]
	0x0363C048 STP X20, X19, [X31 + 0x20]
	0x0363C04C ADRP X21, 0xDA4000
	0x0363C050 ADRP X22, 0xB00000
	0x0363C054 LDRB W8, [X21 + 0x55F]
	0x0363C058 LDR X22, [X22 + 0x2F8]
	0x0363C05C MOV W19, W1
	0x0363C060 MOV X20, X0
	0x0363C064 TBNZ X8, 0x0, 0x363C07C
	0x0363C068 ADRP X0, 0xB00000
	0x0363C06C LDR X0, [X0 + 0x2F8]
	0x0363C070 BL 0x1C16CF4
	0x0363C074 MOVZ W8, 0x1
	0x0363C078 STRB W8, [X21 + 0x55F]
	0x0363C07C LDR X21, [X22]
	0x0363C080 LDRSW X22, [X20 + 0x20]
	0x0363C084 LDR X0, [X21 + 0x20]
	0x0363C088 LDRB W8, [X0 + 0x135]
	0x0363C08C TBNZ X8, 0x0, 0x363C094
	0x0363C090 BL 0x1C5C684
	0x0363C094 LDR W8, [X20 + 0x10]
	0x0363C098 CMP W22, W8
	0x0363C09C B.LT 0x363C0C8
	0x0363C0A0 LDR X0, [X21 + 0x20]
	0x0363C0A4 ADD X21, X20, 0x8
	0x0363C0A8 LDRB W8, [X0 + 0x135]
	0x0363C0AC TBNZ X8, 0x0, 0x363C0B4
	0x0363C0B0 BL 0x1C5C684
	0x0363C0B4 LDR X8, [X0 + 0xC0]
	0x0363C0B8 MOV X0, X21
	0x0363C0BC LDR X1, [X8 + 0x38]
	0x0363C0C0 BL 0x278D43C
	0x0363C0C4 LDR W8, [X20 + 0x10]
	0x0363C0C8 CMP W22, W8
	0x0363C0CC B.CS 0x363C0F0
	0x0363C0D0 LDR X8, [X20 + 0x8]
	0x0363C0D4 ADD W9, W22, 0x1
	0x0363C0D8 STR W19, [X8, X22, LSL #2]
	0x0363C0DC STR W9, [X20 + 0x20]
	0x0363C0E0 LDP X20, X19, [X31 + 0x20]
	0x0363C0E4 LDP X22, X21, [X31 + 0x10]
	0x0363C0E8 LDR X30, [X31], #0x30
	0x0363C0EC RET
	0x0363C0F0 BL 0x1C16F28
	0x0363C0F4 STR X30, [X31 - 0x20]!
	0x0363C0F8 STP X20, X19, [X31 + 0x10]
	0x0363C0FC ADRP X20, 0xDA4000
	0x0363C100 LDRB W8, [X20 + 0x560]
	0x0363C104 MOV X19, X0
	0x0363C108 TBNZ X8, 0x0, 0x363C120
	0x0363C10C ADRP X0, 0xB00000
	0x0363C110 LDR X0, [X0 + 0x2E0]
	0x0363C114 BL 0x1C16CF4
	0x0363C118 MOVZ W8, 0x1
	0x0363C11C STRB W8, [X20 + 0x560]
	0x0363C120 LDR W8, [X19 + 0x20]
	0x0363C124 LDP X20, X19, [X31 + 0x10]
	0x0363C128 CMP W8, 0x0
	0x0363C12C CSET W0, EQ
	0x0363C130 LDR X30, [X31], #0x20
	0x0363C134 RET
	0x0363C138 STR X30, [X31 - 0x20]!
	0x0363C13C STP X20, X19, [X31 + 0x10]
	0x0363C140 ADRP X20, 0xDA4000
	0x0363C144 LDRB W8, [X20 + 0x561]
	0x0363C148 MOV X19, X0
	0x0363C14C TBNZ X8, 0x0, 0x363C164
	0x0363C150 ADRP X0, 0xB00000
	0x0363C154 LDR X0, [X0 + 0x300]
	0x0363C158 BL 0x1C16CF4
	0x0363C15C MOVZ W8, 0x1
	0x0363C160 STRB W8, [X20 + 0x561]
	0x0363C164 LDR W8, [X19 + 0x20]
	0x0363C168 LDR W9, [X19 + 0x10]
	0x0363C16C SUB W8, W8, 0x1
	0x0363C170 CMP W8, W9
	0x0363C174 STR W8, [X19 + 0x20]
	0x0363C178 B.CS 0x363C190
	0x0363C17C LDR X9, [X19 + 0x8]
	0x0363C180 LDP X20, X19, [X31 + 0x10]
	0x0363C184 LDR W0, [X9, W8, SXTW]
	0x0363C188 LDR X30, [X31], #0x20
	0x0363C18C RET
	0x0363C190 BL 0x1C16F28
	0x0363C194 STP X30, X21, [X31 - 0x20]!
	0x0363C198 STP X20, X19, [X31 + 0x10]
	0x0363C19C ADRP X21, 0xDA4000
	0x0363C1A0 LDRB W8, [X21 + 0x562]
	0x0363C1A4 MOV X19, X1
	0x0363C1A8 MOV X20, X0
	0x0363C1AC TBNZ X8, 0x0, 0x363C1C4
	0x0363C1B0 ADRP X0, 0xB00000
	0x0363C1B4 LDR X0, [X0 + 0x308]
	0x0363C1B8 BL 0x1C16CF4
	0x0363C1BC MOVZ W8, 0x1
	0x0363C1C0 STRB W8, [X21 + 0x562]
	0x0363C1C4 LDR X0, [X20]
	0x0363C1C8 CBZ X0, 0x363C234
	0x0363C1CC ADRP X9, 0xB00000
	0x0363C1D0 LDR X9, [X9 + 0x308]
	0x0363C1D4 LDR W10, [X0 + 0x1C]
	0x0363C1D8 LDR X8, [X0 + 0x10]
	0x0363C1DC LDR X9, [X9]
	0x0363C1E0 ADD W10, W10, 0x1
	0x0363C1E4 STR W10, [X0 + 0x1C]
	0x0363C1E8 CBZ X8, 0x363C234
	0x0363C1EC LDRSW X10, [X0 + 0x18]
	0x0363C1F0 LDR W11, [X8 + 0x18]
	0x0363C1F4 CMP W10, W11
	0x0363C1F8 B.CS 0x363C218
	0x0363C1FC ADD W9, W10, 0x1
	0x0363C200 ADD X8, X8, X10, 0x3, LSL
	0x0363C204 STR W9, [X0 + 0x18]
	0x0363C208 STR X19, [X8 + 0x20]
	0x0363C20C LDP X20, X19, [X31 + 0x10]
	0x0363C210 LDP X30, X21, [X31], #0x20
	0x0363C214 RET
	0x0363C218 LDR X8, [X9 + 0x20]
	0x0363C21C MOV X1, X19
	0x0363C220 LDP X20, X19, [X31 + 0x10]
	0x0363C224 LDR X8, [X8 + 0xC0]
	0x0363C228 LDR X2, [X8 + 0x70]
	0x0363C22C LDP X30, X21, [X31], #0x20
	0x0363C230 B 0x301BF90
	0x0363C234 BL 0x1C16F20
	0x0363C238 STR X30, [X31 - 0x20]!
	0x0363C23C STP X20, X19, [X31 + 0x10]
	0x0363C240 ADRP X20, 0xDA4000
	0x0363C244 LDRB W8, [X20 + 0x563]
	0x0363C248 MOV X19, X0
	0x0363C24C TBNZ X8, 0x0, 0x363C264
	0x0363C250 ADRP X0, 0xB00000
	0x0363C254 LDR X0, [X0 + 0x310]
	0x0363C258 BL 0x1C16CF4
	0x0363C25C MOVZ W8, 0x1
	0x0363C260 STRB W8, [X20 + 0x563]
	0x0363C264 LDR X8, [X19]
	0x0363C268 CBZ X8, 0x363C284
	0x0363C26C LDR W8, [X8 + 0x18]
	0x0363C270 LDP X20, X19, [X31 + 0x10]
	0x0363C274 CMP W8, 0x0
	0x0363C278 CSET W0, EQ
	0x0363C27C LDR X30, [X31], #0x20
	0x0363C280 RET
	0x0363C284 BL 0x1C16F20
	0x0363C288 STR X30, [X31 - 0x20]!
	0x0363C28C STP X20, X19, [X31 + 0x10]
	0x0363C290 ADRP X20, 0xDA4000
	0x0363C294 LDRB W8, [X20 + 0x564]
	0x0363C298 MOV X19, X0
	0x0363C29C TBNZ X8, 0x0, 0x363C2C0
	0x0363C2A0 ADRP X0, 0xB00000
	0x0363C2A4 LDR X0, [X0 + 0x318]
	0x0363C2A8 BL 0x1C16CF4
	0x0363C2AC ADRP X0, 0xB00000
	0x0363C2B0 LDR X0, [X0 + 0x310]
	0x0363C2B4 BL 0x1C16CF4
	0x0363C2B8 MOVZ W8, 0x1
	0x0363C2BC STRB W8, [X20 + 0x564]
	0x0363C2C0 MOV X0, X19
	0x0363C2C4 BL 0x363C304
	0x0363C2C8 LDR X8, [X19]
	0x0363C2CC CBZ X8, 0x363C300
	0x0363C2D0 ADRP X9, 0xB00000
	0x0363C2D4 LDR X9, [X9 + 0x318]
	0x0363C2D8 LDR W10, [X8 + 0x18]
	0x0363C2DC MOV X19, X0
	0x0363C2E0 MOV X0, X8
	0x0363C2E4 LDR X2, [X9]
	0x0363C2E8 SUB W1, W10, 0x1
	0x0363C2EC BL 0x301DA48
	0x0363C2F0 MOV X0, X19
	0x0363C2F4 LDP X20, X19, [X31 + 0x10]
	0x0363C2F8 LDR X30, [X31], #0x20
	0x0363C2FC RET
	0x0363C300 BL 0x1C16F20
	0x0363C304 STR X30, [X31 - 0x20]!
	0x0363C308 STP X20, X19, [X31 + 0x10]
	0x0363C30C ADRP X20, 0xDA4000
	0x0363C310 LDRB W8, [X20 + 0x565]
	0x0363C314 MOV X19, X0
	0x0363C318 TBNZ X8, 0x0, 0x363C33C
	0x0363C31C ADRP X0, 0xB00000
	0x0363C320 LDR X0, [X0 + 0x310]
	0x0363C324 BL 0x1C16CF4
	0x0363C328 ADRP X0, 0xB00000
	0x0363C32C LDR X0, [X0 + 0x320]
	0x0363C330 BL 0x1C16CF4
	0x0363C334 MOVZ W8, 0x1
	0x0363C338 STRB W8, [X20 + 0x565]
	0x0363C33C LDR X0, [X19]
	0x0363C340 CBZ X0, 0x363C364
	0x0363C344 ADRP X8, 0xB00000
	0x0363C348 LDR X8, [X8 + 0x320]
	0x0363C34C LDR W9, [X0 + 0x18]
	0x0363C350 LDP X20, X19, [X31 + 0x10]
	0x0363C354 LDR X2, [X8]
	0x0363C358 SUB W1, W9, 0x1
	0x0363C35C LDR X30, [X31], #0x20
	0x0363C360 B 0x301BCCC
	0x0363C364 BL 0x1C16F20
	0x0363C368 SUB X31, X31, 0x40
	0x0363C36C STP X30, X23, [X31 + 0x10]
	0x0363C370 STP X22, X21, [X31 + 0x20]
	0x0363C374 STP X20, X19, [X31 + 0x30]
	0x0363C378 ADRP X20, 0xDA4000
	0x0363C37C LDRB W8, [X20 + 0x568]
	0x0363C380 MOV W22, W3
	0x0363C384 MOV X21, X2
	0x0363C388 MOV W23, W1
	0x0363C38C MOV X19, X0
	0x0363C390 STR W1, [X31 + 0xC]
	0x0363C394 TBNZ X8, 0x0, 0x363C3B8
	0x0363C398 ADRP X0, 0xB00000
	0x0363C39C LDR X0, [X0 + 0x328]
	0x0363C3A0 BL 0x1C16CF4
	0x0363C3A4 ADRP X0, 0xB00000
	0x0363C3A8 LDR X0, [X0 + 0x330]
	0x0363C3AC BL 0x1C16CF4
	0x0363C3B0 MOVZ W8, 0x1
	0x0363C3B4 STRB W8, [X20 + 0x568]
	0x0363C3B8 CMP W23, 0xD
	0x0363C3BC B.LE 0x363C3CC
	0x0363C3C0 MOV W8, W31
	0x0363C3C4 MOV W20, W31
	0x0363C3C8 B 0x363C3DC
	0x0363C3CC CBZ X21, 0x363C6E0
	0x0363C3D0 LDR W8, [X21 + 0x34]
	0x0363C3D4 AND W20, W8, 0x1
	0x0363C3D8 UBFM W8, W8, 0x6, 0x6
	0x0363C3DC SUB W9, W23, 0x3
	0x0363C3E0 CMP W9, 0x5F
	0x0363C3E4 B.HI 0x363C588
	0x0363C3E8 ADRP X10, 0xFFFFFFFFFD55B000
	0x0363C3EC ADD X10, X10, 0x3A2
	0x0363C3F0 ADR X11, 0x10
	0x0363C3F4 LDRB W12, [X10, X9, LSL]
	0x0363C3F8 ADD X11, X11, X12, 0x2, LSL
	0x0363C3FC BR X11
	0x0363C400 ADRP X8, 0xB00000
	0x0363C404 LDR X8, [X8 + 0x328]
	0x0363C408 LDR X0, [X8]
	0x0363C40C BL 0x1C16F10
	0x0363C410 MOVZ W1, 0x1
	0x0363C414 MOV X20, X0
	0x0363C418 BL 0x363C770
	0x0363C41C MOV X0, X19
	0x0363C420 MOV X1, X20
	0x0363C424 B 0x363C608
	0x0363C428 CBZ X21, 0x363C6E0
	0x0363C42C ADRP X8, 0xB00000
	0x0363C430 LDR W23, [X21 + 0x2C]
	0x0363C434 LDR X8, [X8 + 0x328]
	0x0363C438 LDRH W21, [X21 + 0x28]
	0x0363C43C LDR X0, [X8]
	0x0363C440 BL 0x1C16F10
	0x0363C444 CMP W23, 0x0
	0x0363C448 MOV X22, X0
	0x0363C44C CSET W3, EQ
	0x0363C450 MOV W1, W21
	0x0363C454 MOV W2, W31
	0x0363C458 B 0x363C5F8
	0x0363C45C CBZ X21, 0x363C6E0
	0x0363C460 ADRP X8, 0xB00000
	0x0363C464 LDR W23, [X21 + 0x2C]
	0x0363C468 LDR X8, [X8 + 0x328]
	0x0363C46C LDRH W21, [X21 + 0x28]
	0x0363C470 LDR X0, [X8]
	0x0363C474 BL 0x1C16F10
	0x0363C478 CMP W23, 0x0
	0x0363C47C MOV X22, X0
	0x0363C480 CSET W3, EQ
	0x0363C484 MOVZ W2, 0x1
	0x0363C488 MOV W1, W21
	0x0363C48C B 0x363C5F8
	0x0363C490 CBZ X21, 0x363C6E0
	0x0363C494 ADRP X8, 0xB00000
	0x0363C498 LDR X22, [X21 + 0x20]
	0x0363C49C LDR W23, [X21 + 0x2C]
	0x0363C4A0 LDR X8, [X8 + 0x328]
	0x0363C4A4 LDR X0, [X8]
	0x0363C4A8 BL 0x1C16F10
	0x0363C4AC CMP W23, 0x0
	0x0363C4B0 CSET W2, EQ
	0x0363C4B4 MOV X1, X22
	0x0363C4B8 MOV W3, W20
	0x0363C4BC MOV X21, X0
	0x0363C4C0 BL 0x363C98C
	0x0363C4C4 MOV X0, X19
	0x0363C4C8 MOV X1, X21
	0x0363C4CC B 0x363C608
	0x0363C4D0 CBZ X21, 0x363C6E0
	0x0363C4D4 ADRP X8, 0xB00000
	0x0363C4D8 LDR X8, [X8 + 0x328]
	0x0363C4DC LDRH W21, [X21 + 0x28]
	0x0363C4E0 LDR X0, [X8]
	0x0363C4E4 BL 0x1C16F10
	0x0363C4E8 CMP W23, 0xA
	0x0363C4EC MOV X22, X0
	0x0363C4F0 CSET W2, EQ
	0x0363C4F4 MOV W1, W21
	0x0363C4F8 B 0x363C5F4
	0x0363C4FC MOVZ W8, 0x1
	0x0363C500 STRB W8, [X19 + 0x29]
	0x0363C504 B 0x363C400
	0x0363C508 CBZ X21, 0x363C6E0
	0x0363C50C ADRP X8, 0xB00000
	0x0363C510 LDR X21, [X21 + 0x20]
	0x0363C514 LDR X8, [X8 + 0x328]
	0x0363C518 LDR X0, [X8]
	0x0363C51C BL 0x1C16F10
	0x0363C520 MOV X1, X21
	0x0363C524 MOV W2, W31
	0x0363C528 MOV W3, W20
	0x0363C52C MOV X22, X0
	0x0363C530 BL 0x363C98C
	0x0363C534 B 0x363C600
	0x0363C538 CBZ X21, 0x363C6E0
	0x0363C53C LDR X0, [X21 + 0x20]
	0x0363C540 CBZ X0, 0x363C6E0
	0x0363C544 LDR W9, [X0 + 0x10]
	0x0363C548 CBZ W9, 0x363C400
	0x0363C54C TBZ X8, 0x0, 0x363C5C4
	0x0363C550 SUB W1, W9, 0x1
	0x0363C554 B 0x363C5C8
	0x0363C558 ADRP X8, 0xB00000
	0x0363C55C LDR X8, [X8 + 0x328]
	0x0363C560 LDR X0, [X8]
	0x0363C564 BL 0x1C16F10
	0x0363C568 ADRP X8, 0xB00000
	0x0363C56C LDR X8, [X8 + 0x330]
	0x0363C570 MOVZ W2, 0x1
	0x0363C574 MOV W3, W31
	0x0363C578 MOV X20, X0
	0x0363C57C LDR X1, [X8]
	0x0363C580 BL 0x363C98C
	0x0363C584 B 0x363C41C

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Subtract X31, X31, 1520
	014 Move X23, 0xDAA000
	015 Move X25, 0xB05000
	016 Move X22, 0xB05000
	017 Move X21, 0xAE6000
	018 Move X19, 0xB05000
	019 Move X20, 0xB05000
	020 Move X29, 0xB05000
	021 Move X28, 0xB05000
	022 Move X27, 0xB05000
	023 Move X26, 0xB05000
	024 Move X24, 0xB05000
	025 Move X12, 0xB05000
	026 Move X10, 0xB05000
	027 Move X11, 0xABE000
	028 Move X25, [X25+2432]
	029 Move X22, [X22+2272]
	030 Move X21, [X21+88]
	031 Move X19, [X19+2440]
	032 Move X20, [X20+2448]
	033 Move X29, [X29+2456]
	034 Move X28, [X28+2464]
	035 Move X27, [X27+2472]
	036 Move X26, [X26+2480]
	037 Move W8, [X23+1366]
	038 Move X24, [X24+2488]
	039 Move X12, [X12+2496]
	040 Move X10, [X10+2504]
	041 Move X11, [X11+1744]
	042 Move TEMP, X8
	043 And TEMP, TEMP, 1
	044 Compare TEMP, 1
	045 JumpIfEqual {998}
	046 Move X0, 0xABE000
	047 Move X0, [X0+2064]
	048 Move X25, X10
	049 Call 0x1C17CF4
	050 Move X0, 0xB05000
	051 Move X0, [X0+2512]
	052 Call 0x1C17CF4
	053 Move X0, 0xABE000
	054 Move X0, [X0+1744]
	055 Call 0x1C17CF4
	056 Move X0, 0xB05000
	057 Move X0, [X0+2520]
	058 Call 0x1C17CF4
	059 Move X0, 0xB05000
	060 Move X0, [X0+2272]
	061 Call 0x1C17CF4
	062 Move X0, 0xACA000
	063 Move X0, [X0+3632]
	064 Call 0x1C17CF4
	065 Move X0, 0xABD000
	066 Move X0, [X0+2760]
	067 Call 0x1C17CF4
	068 Move X0, 0xB05000
	069 Move X0, [X0+2528]
	070 Call 0x1C17CF4
	071 Move X0, 0xABE000
	072 Move X0, [X0+4064]
	073 Call 0x1C17CF4
	074 Move X0, 0xB05000
	075 Move X0, [X0+2536]
	076 Call 0x1C17CF4
	077 Move X0, 0xB05000
	078 Move X0, [X0+2544]
	079 Call 0x1C17CF4
	080 Move X0, 0xB05000
	081 Move X0, [X0+2552]
	082 Call 0x1C17CF4
	083 Move X0, 0xB05000
	084 Move X0, [X0+2560]
	085 Call 0x1C17CF4
	086 Move X0, 0xB05000
	087 Move X0, [X0+2568]
	088 Call 0x1C17CF4
	089 Move X0, 0xB05000
	090 Move X0, [X0+2576]
	091 Call 0x1C17CF4
	092 Move X0, 0xB05000
	093 Move X0, [X0+2584]
	094 Call 0x1C17CF4
	095 Move X0, 0xB05000
	096 Move X0, [X0+2592]
	097 Call 0x1C17CF4
	098 Move X0, 0xB05000
	099 Move X0, [X0+2600]
	100 Call 0x1C17CF4
	101 Move X0, 0xAEE000
	102 Move X0, [X0+464]
	103 Call 0x1C17CF4
	104 Move X0, 0xB05000
	105 Move X0, [X0+2608]
	106 Call 0x1C17CF4
	107 Move X0, 0xB05000
	108 Move X0, [X0+2616]
	109 Call 0x1C17CF4
	110 Move X0, 0xB05000
	111 Move X0, [X0+2624]
	112 Call 0x1C17CF4
	113 Move X0, 0xB05000
	114 Move X0, [X0+2632]
	115 Call 0x1C17CF4
	116 Move X0, 0xB05000
	117 Move X0, [X0+2640]
	118 Call 0x1C17CF4
	119 Move X0, 0xB05000
	120 Move X0, [X0+2648]
	121 Call 0x1C17CF4
	122 Move X0, 0xB05000
	123 Move X0, [X0+2656]
	124 Call 0x1C17CF4
	125 Move X0, 0xB05000
	126 Move X0, [X0+2664]
	127 Call 0x1C17CF4
	128 Move X0, 0xB05000
	129 Move X0, [X0+2672]
	130 Call 0x1C17CF4
	131 Move X0, 0xB05000
	132 Move X0, [X0+2680]
	133 Call 0x1C17CF4
	134 Move X0, 0xB05000
	135 Move X0, [X0+2688]
	136 Call 0x1C17CF4
	137 Move X0, 0xB05000
	138 Move X0, [X0+2696]
	139 Call 0x1C17CF4
	140 Move X0, 0xB05000
	141 Move X0, [X0+2704]
	142 Call 0x1C17CF4
	143 Move X0, 0xB05000
	144 Move X0, [X0+2712]
	145 Call 0x1C17CF4
	146 Move X0, 0xB05000
	147 Move X0, [X0+2720]
	148 Call 0x1C17CF4
	149 Move X0, 0xB05000
	150 Move X0, [X0+2728]
	151 Call 0x1C17CF4
	152 Move X0, 0xB05000
	153 Move X0, [X0+2736]
	154 Call 0x1C17CF4
	155 Move X0, 0xB05000
	156 Move X0, [X0+2744]
	157 Call 0x1C17CF4
	158 Move X0, 0xB05000
	159 Move X0, [X0+2752]
	160 Call 0x1C17CF4
	161 Move X0, 0xB05000
	162 Move X0, [X0+2760]
	163 Call 0x1C17CF4
	164 Move X0, 0xB05000
	165 Move X0, [X0+2768]
	166 Call 0x1C17CF4
	167 Move X0, 0xB05000
	168 Move X0, [X0+2776]
	169 Call 0x1C17CF4
	170 Move X0, 0xB05000
	171 Move X0, [X0+2784]
	172 Call 0x1C17CF4
	173 Move X0, 0xB05000
	174 Move X0, [X0+2792]
	175 Call 0x1C17CF4
	176 Move X0, 0xB05000
	177 Move X0, [X0+2800]
	178 Call 0x1C17CF4
	179 Move X0, 0xB05000
	180 Move X0, [X0+2808]
	181 Call 0x1C17CF4
	182 Move X0, 0xB05000
	183 Move X0, [X0+2816]
	184 Call 0x1C17CF4
	185 Move X0, 0xB05000
	186 Move X0, [X0+2824]
	187 Call 0x1C17CF4
	188 Move X0, 0xB05000
	189 Move X0, [X0+2832]
	190 Call 0x1C17CF4
	191 Move X0, 0xB05000
	192 Move X0, [X0+2840]
	193 Call 0x1C17CF4
	194 Move X0, 0xB05000
	195 Move X0, [X0+2848]
	196 Call 0x1C17CF4
	197 Move X0, 0xB05000
	198 Move X0, [X0+2856]
	199 Call 0x1C17CF4
	200 Move X0, 0xB05000
	201 Move X0, [X0+2864]
	202 Call 0x1C17CF4
	203 Move X0, 0xB05000
	204 Move X0, [X0+2872]
	205 Call 0x1C17CF4
	206 Move X0, 0xB05000
	207 Move X0, [X0+2880]
	208 Call 0x1C17CF4
	209 Move X0, 0xB05000
	210 Move X0, [X0+2888]
	211 Call 0x1C17CF4
	212 Move X0, 0xB05000
	213 Move X0, [X0+2896]
	214 Call 0x1C17CF4
	215 Move X0, 0xB05000
	216 Move X0, [X0+2904]
	217 Call 0x1C17CF4
	218 Move X0, 0xAF2000
	219 Move X0, [X0+1088]
	220 Call 0x1C17CF4
	221 Move X0, 0xB05000
	222 Move X0, [X0+2456]
	223 Call 0x1C17CF4
	224 Move X0, 0xAE9000
	225 Move X0, [X0+184]
	226 Call 0x1C17CF4
	227 Move X0, 0xB05000
	228 Move X0, [X0+2912]
	229 Call 0x1C17CF4
	230 Move X0, 0xB05000
	231 Move X0, [X0+2920]
	232 Call 0x1C17CF4
	233 Move X0, 0xB05000
	234 Move X0, [X0+2928]
	235 Call 0x1C17CF4
	236 Move X0, 0xB05000
	237 Move X0, [X0+2936]
	238 Call 0x1C17CF4
	239 Move X0, 0xB05000
	240 Move X0, [X0+2944]
	241 Call 0x1C17CF4
	242 Move X0, 0xB05000
	243 Move X0, [X0+2952]
	244 Call 0x1C17CF4
	245 Move X0, 0xB05000
	246 Move X0, [X0+2960]
	247 Call 0x1C17CF4
	248 Move X0, 0xB05000
	249 Move X0, [X0+2968]
	250 Call 0x1C17CF4
	251 Move X0, 0xB05000
	252 Move X0, [X0+2976]
	253 Call 0x1C17CF4
	254 Move X0, 0xB05000
	255 Move X0, [X0+2984]
	256 Call 0x1C17CF4
	257 Move X0, 0xB05000
	258 Move X0, [X0+2992]
	259 Call 0x1C17CF4
	260 Move X0, 0xB05000
	261 Move X0, [X0+3000]
	262 Call 0x1C17CF4
	263 Move X0, 0xB05000
	264 Move X0, [X0+3008]
	265 Call 0x1C17CF4
	266 Move X0, 0xB05000
	267 Move X0, [X0+3016]
	268 Call 0x1C17CF4
	269 Move X0, 0xB05000
	270 Move X0, [X0+3024]
	271 Call 0x1C17CF4
	272 Move X0, 0xB05000
	273 Move X0, [X0+3032]
	274 Call 0x1C17CF4
	275 Move X0, 0xB05000
	276 Move X0, [X0+3040]
	277 Call 0x1C17CF4
	278 Move X0, 0xB05000
	279 Move X0, [X0+3048]
	280 Call 0x1C17CF4
	281 Move X0, 0xB05000
	282 Move X0, [X0+3056]
	283 Call 0x1C17CF4
	284 Move X0, 0xB05000
	285 Move X0, [X0+3064]
	286 Call 0x1C17CF4
	287 Move X0, 0xB05000
	288 Move X0, [X0+3072]
	289 Call 0x1C17CF4
	290 Move X0, 0xB05000
	291 Move X0, [X0+1176]
	292 Call 0x1C17CF4
	293 Move X0, 0xB05000
	294 Move X0, [X0+3080]
	295 Call 0x1C17CF4
	296 Move X0, 0xB05000
	297 Move X0, [X0+3088]
	298 Call 0x1C17CF4
	299 Move X0, 0xB05000
	300 Move X0, [X0+3096]
	301 Call 0x1C17CF4
	302 Move X0, 0xB05000
	303 Move X0, [X0+3104]
	304 Call 0x1C17CF4
	305 Move X0, 0xB05000
	306 Move X0, [X0+3112]
	307 Call 0x1C17CF4
	308 Move X0, 0xB05000
	309 Move X0, [X0+3120]
	310 Call 0x1C17CF4
	311 Move X0, 0xB05000
	312 Move X0, [X0+3128]
	313 Call 0x1C17CF4
	314 Move X0, 0xB05000
	315 Move X0, [X0+3136]
	316 Call 0x1C17CF4
	317 Move X0, 0xB05000
	318 Move X0, [X0+3144]
	319 Call 0x1C17CF4
	320 Move X0, 0xB05000
	321 Move X0, [X0+3152]
	322 Call 0x1C17CF4
	323 Move X0, 0xB05000
	324 Move X0, [X0+3160]
	325 Call 0x1C17CF4
	326 Move X0, 0xB05000
	327 Move X0, [X0+3168]
	328 Call 0x1C17CF4
	329 Move X0, 0xB05000
	330 Move X0, [X0+3176]
	331 Call 0x1C17CF4
	332 Move X0, 0xB05000
	333 Move X0, [X0+3184]
	334 Call 0x1C17CF4
	335 Move X0, 0xB05000
	336 Move X0, [X0+3192]
	337 Call 0x1C17CF4
	338 Move X0, 0xB05000
	339 Move X0, [X0+3200]
	340 Call 0x1C17CF4
	341 Move X0, 0xB05000
	342 Move X0, [X0+3208]
	343 Call 0x1C17CF4
	344 Move X0, 0xB05000
	345 Move X0, [X0+3216]
	346 Call 0x1C17CF4
	347 Move X0, 0xB05000
	348 Move X0, [X0+3224]
	349 Call 0x1C17CF4
	350 Move X0, 0xB05000
	351 Move X0, [X0+3232]
	352 Call 0x1C17CF4
	353 Move X0, 0xB05000
	354 Move X0, [X0+3240]
	355 Call 0x1C17CF4
	356 Move X0, 0xB05000
	357 Move X0, [X0+3248]
	358 Call 0x1C17CF4
	359 Move X0, 0xB05000
	360 Move X0, [X0+3256]
	361 Call 0x1C17CF4
	362 Move X0, 0xB05000
	363 Move X0, [X0+3264]
	364 Call 0x1C17CF4
	365 Move X0, 0xB05000
	366 Move X0, [X0+3272]
	367 Call 0x1C17CF4
	368 Move X0, 0xB05000
	369 Move X0, [X0+3280]
	370 Call 0x1C17CF4
	371 Move X0, 0xB05000
	372 Move X0, [X0+3288]
	373 Call 0x1C17CF4
	374 Move X0, 0xB05000
	375 Move X0, [X0+3296]
	376 Call 0x1C17CF4
	377 Move X0, 0xB05000
	378 Move X0, [X0+3304]
	379 Call 0x1C17CF4
	380 Move X0, 0xB05000
	381 Move X0, [X0+3312]
	382 Call 0x1C17CF4
	383 Move X0, 0xB05000
	384 Move X0, [X0+3320]
	385 Call 0x1C17CF4
	386 Move X0, 0xB05000
	387 Move X0, [X0+3328]
	388 Call 0x1C17CF4
	389 Move X0, 0xB05000
	390 Move X0, [X0+3336]
	391 Call 0x1C17CF4
	392 Move X0, 0xB05000
	393 Move X0, [X0+3344]
	394 Call 0x1C17CF4
	395 Move X0, 0xB05000
	396 Move X0, [X0+3352]
	397 Call 0x1C17CF4
	398 Move X0, 0xB05000
	399 Move X0, [X0+3360]
	400 Call 0x1C17CF4
	401 Move X0, 0xB05000
	402 Move X0, [X0+2448]
	403 Call 0x1C17CF4
	404 Move X0, 0xB05000
	405 Move X0, [X0+3368]
	406 Call 0x1C17CF4
	407 Move X0, 0xB05000
	408 Move X0, [X0+3376]
	409 Call 0x1C17CF4
	410 Move X0, 0xB05000
	411 Move X0, [X0+3384]
	412 Call 0x1C17CF4
	413 Move X0, 0xB05000
	414 Move X0, [X0+3392]
	415 Call 0x1C17CF4
	416 Move X0, 0xB05000
	417 Move X0, [X0+2472]
	418 Call 0x1C17CF4
	419 Move X0, 0xB05000
	420 Move X0, [X0+3400]
	421 Call 0x1C17CF4
	422 Move X0, 0xB05000
	423 Move X0, [X0+3408]
	424 Call 0x1C17CF4
	425 Move X0, 0xB05000
	426 Move X0, [X0+3416]
	427 Call 0x1C17CF4
	428 Move X0, 0xB05000
	429 Move X0, [X0+3424]
	430 Call 0x1C17CF4
	431 Move X0, 0xB05000
	432 Move X0, [X0+3432]
	433 Call 0x1C17CF4
	434 Move X0, 0xB05000
	435 Move X0, [X0+3440]
	436 Call 0x1C17CF4
	437 Move X0, 0xB05000
	438 Move X0, [X0+3448]
	439 Call 0x1C17CF4
	440 Move X0, 0xB05000
	441 Move X0, [X0+3456]
	442 Call 0x1C17CF4
	443 Move X0, 0xB05000
	444 Move X0, [X0+3464]
	445 Call 0x1C17CF4
	446 Move X0, 0xB05000
	447 Move X0, [X0+3472]
	448 Call 0x1C17CF4
	449 Move X0, 0xB05000
	450 Move X0, [X0+3480]
	451 Call 0x1C17CF4
	452 Move X0, 0xB05000
	453 Move X0, [X0+3488]
	454 Call 0x1C17CF4
	455 Move X0, 0xB05000
	456 Move X0, [X0+3496]
	457 Call 0x1C17CF4
	458 Move X0, 0xB05000
	459 Move X0, [X0+3504]
	460 Call 0x1C17CF4
	461 Move X0, 0xB05000
	462 Move X0, [X0+3512]
	463 Call 0x1C17CF4
	464 Move X0, 0xB05000
	465 Move X0, [X0+3520]
	466 Call 0x1C17CF4
	467 Move X0, 0xB05000
	468 Move X0, [X0+3528]
	469 Call 0x1C17CF4
	470 Move X0, 0xB05000
	471 Move X0, [X0+3536]
	472 Call 0x1C17CF4
	473 Move X0, 0xB05000
	474 Move X0, [X0+3544]
	475 Call 0x1C17CF4
	476 Move X0, 0xB05000
	477 Move X0, [X0+2496]
	478 Call 0x1C17CF4
	479 Move X0, 0xB05000
	480 Move X0, [X0+3552]
	481 Call 0x1C17CF4
	482 Move X0, 0xB05000
	483 Move X0, [X0+3560]
	484 Call 0x1C17CF4
	485 Move X0, 0xB05000
	486 Move X0, [X0+3568]
	487 Call 0x1C17CF4
	488 Move X0, 0xB05000
	489 Move X0, [X0+3576]
	490 Call 0x1C17CF4
	491 Move X0, 0xB05000
	492 Move X0, [X0+3584]
	493 Call 0x1C17CF4
	494 Move X0, 0xB05000
	495 Move X0, [X0+3592]
	496 Call 0x1C17CF4
	497 Move X0, 0xB05000
	498 Move X0, [X0+3600]
	499 Call 0x1C17CF4
	500 Move X0, 0xB05000
	501 Move X0, [X0+3608]
	502 Call 0x1C17CF4
	503 Move X0, 0xB05000
	504 Move X0, [X0+3616]
	505 Call 0x1C17CF4
	506 Move X0, 0xB05000
	507 Move X0, [X0+3624]
	508 Call 0x1C17CF4
	509 Move X0, 0xB05000
	510 Move X0, [X0+3632]
	511 Call 0x1C17CF4
	512 Move X0, 0xB05000
	513 Move X0, [X0+3640]
	514 Call 0x1C17CF4
	515 Move X0, 0xB05000
	516 Move X0, [X0+3648]
	517 Call 0x1C17CF4
	518 Move X0, 0xB05000
	519 Move X0, [X0+3656]
	520 Call 0x1C17CF4
	521 Move X0, 0xB05000
	522 Move X0, [X0+3664]
	523 Call 0x1C17CF4
	524 Move X0, 0xB05000
	525 Move X0, [X0+3672]
	526 Call 0x1C17CF4
	527 Move X0, 0xB05000
	528 Move X0, [X0+3680]
	529 Call 0x1C17CF4
	530 Move X0, 0xB05000
	531 Move X0, [X0+3688]
	532 Call 0x1C17CF4
	533 Move X0, 0xB05000
	534 Move X0, [X0+3696]
	535 Call 0x1C17CF4
	536 Move X0, 0xB05000
	537 Move X0, [X0+3704]
	538 Call 0x1C17CF4
	539 Move X0, 0xB05000
	540 Move X0, [X0+3712]
	541 Call 0x1C17CF4
	542 Move X0, 0xB05000
	543 Move X0, [X0+3720]
	544 Call 0x1C17CF4
	545 Move X0, 0xB05000
	546 Move X0, [X0+3728]
	547 Call 0x1C17CF4
	548 Move X0, 0xB05000
	549 Move X0, [X0+3736]
	550 Call 0x1C17CF4
	551 Move X0, 0xB05000
	552 Move X0, [X0+3744]
	553 Call 0x1C17CF4
	554 Move X0, 0xB05000
	555 Move X0, [X0+3752]
	556 Call 0x1C17CF4
	557 Move X0, 0xB03000
	558 Move X0, [X0+3104]
	559 Call 0x1C17CF4
	560 Move X0, 0xB05000
	561 Move X0, [X0+3760]
	562 Call 0x1C17CF4
	563 Move X0, 0xB05000
	564 Move X0, [X0+3768]
	565 Call 0x1C17CF4
	566 Move X0, 0xB05000
	567 Move X0, [X0+3776]
	568 Call 0x1C17CF4
	569 Move X0, 0xB05000
	570 Move X0, [X0+3784]
	571 Call 0x1C17CF4
	572 Move X0, 0xB05000
	573 Move X0, [X0+3792]
	574 Call 0x1C17CF4
	575 Move X0, 0xB05000
	576 Move X0, [X0+3800]
	577 Call 0x1C17CF4
	578 Move X0, 0xB05000
	579 Move X0, [X0+3808]
	580 Call 0x1C17CF4
	581 Move X0, 0xB05000
	582 Move X0, [X0+3816]
	583 Call 0x1C17CF4
	584 Move X0, 0xB05000
	585 Move X0, [X0+3824]
	586 Call 0x1C17CF4
	587 Move X0, 0xB05000
	588 Move X0, [X0+3832]
	589 Call 0x1C17CF4
	590 Move X0, 0xB05000
	591 Move X0, [X0+3840]
	592 Call 0x1C17CF4
	593 Move X0, 0xB05000
	594 Move X0, [X0+3848]
	595 Call 0x1C17CF4
	596 Move X0, 0xB05000
	597 Move X0, [X0+3856]
	598 Call 0x1C17CF4
	599 Move X0, 0xB05000
	600 Move X0, [X0+3864]
	601 Call 0x1C17CF4
	602 Move X0, 0xB05000
	603 Move X0, [X0+3872]
	604 Call 0x1C17CF4
	605 Move X0, 0xB05000
	606 Move X0, [X0+3880]
	607 Call 0x1C17CF4
	608 Move X0, 0xB05000
	609 Move X0, [X0+3888]
	610 Call 0x1C17CF4
	611 Move X0, 0xB05000
	612 Move X0, [X0+3896]
	613 Call 0x1C17CF4
	614 Move X0, 0xB05000
	615 Move X0, [X0+3904]
	616 Call 0x1C17CF4
	617 Move X0, 0xB05000
	618 Move X0, [X0+3912]
	619 Call 0x1C17CF4
	620 Move X0, 0xB05000
	621 Move X0, [X0+3920]
	622 Call 0x1C17CF4
	623 Move X0, 0xB05000
	624 Move X0, [X0+3928]
	625 Call 0x1C17CF4
	626 Move X0, 0xB05000
	627 Move X0, [X0+3936]
	628 Call 0x1C17CF4
	629 Move X0, 0xB05000
	630 Move X0, [X0+3944]
	631 Call 0x1C17CF4
	632 Move X0, 0xB05000
	633 Move X0, [X0+3952]
	634 Call 0x1C17CF4
	635 Move X0, 0xB05000
	636 Move X0, [X0+3960]
	637 Call 0x1C17CF4
	638 Move X0, 0xB05000
	639 Move X0, [X0+3968]
	640 Call 0x1C17CF4
	641 Move X0, 0xB05000
	642 Move X0, [X0+3976]
	643 Call 0x1C17CF4
	644 Move X0, 0xB05000
	645 Move X0, [X0+3984]
	646 Call 0x1C17CF4
	647 Move X0, 0xB05000
	648 Move X0, [X0+3992]
	649 Call 0x1C17CF4
	650 Move X0, 0xB05000
	651 Move X0, [X0+4000]
	652 Call 0x1C17CF4
	653 Move X0, 0xB05000
	654 Move X0, [X0+4008]
	655 Call 0x1C17CF4
	656 Move X0, 0xB05000
	657 Move X0, [X0+4016]
	658 Call 0x1C17CF4
	659 Move X0, 0xB05000
	660 Move X0, [X0+4024]
	661 Call 0x1C17CF4
	662 Move X0, 0xB05000
	663 Move X0, [X0+4032]
	664 Call 0x1C17CF4
	665 Move X0, 0xB05000
	666 Move X0, [X0+4040]
	667 Call 0x1C17CF4
	668 Move X0, 0xB05000
	669 Move X0, [X0+4048]
	670 Call 0x1C17CF4
	671 Move X0, 0xB05000
	672 Move X0, [X0+4056]
	673 Call 0x1C17CF4
	674 Move X0, 0xB05000
	675 Move X0, [X0+4064]
	676 Call 0x1C17CF4
	677 Move X0, 0xAE6000
	678 Move X0, [X0+88]
	679 Call 0x1C17CF4
	680 Move X0, 0xB05000
	681 Move X0, [X0+4072]
	682 Call 0x1C17CF4
	683 Move X0, 0xB05000
	684 Move X0, [X0+4080]
	685 Call 0x1C17CF4
	686 Move X0, 0xB05000
	687 Move X0, [X0+4088]
	688 Call 0x1C17CF4
	689 Move X0, 0xB06000
	690 Move X0, [X0]
	691 Call 0x1C17CF4
	692 Move X0, 0xB06000
	693 Move X0, [X0+8]
	694 Call 0x1C17CF4
	695 Move X0, 0xB06000
	696 Move X0, [X0+16]
	697 Call 0x1C17CF4
	698 Move X0, 0xB06000
	699 Move X0, [X0+24]
	700 Call 0x1C17CF4
	701 Move X0, 0xB06000
	702 Move X0, [X0+32]
	703 Call 0x1C17CF4
	704 Move X0, 0xB06000
	705 Move X0, [X0+40]
	706 Call 0x1C17CF4
	707 Move X0, 0xB05000
	708 Move X0, [X0+2384]
	709 Call 0x1C17CF4
	710 Move X0, 0xB06000
	711 Move X0, [X0+48]
	712 Call 0x1C17CF4
	713 Move X0, 0xB06000
	714 Move X0, [X0+56]
	715 Call 0x1C17CF4
	716 Move X0, 0xB06000
	717 Move X0, [X0+64]
	718 Call 0x1C17CF4
	719 Move X0, 0xB06000
	720 Move X0, [X0+72]
	721 Call 0x1C17CF4
	722 Move X0, 0xB06000
	723 Move X0, [X0+80]
	724 Call 0x1C17CF4
	725 Move X0, 0xB06000
	726 Move X0, [X0+88]
	727 Call 0x1C17CF4
	728 Move X0, 0xB06000
	729 Move X0, [X0+96]
	730 Call 0x1C17CF4
	731 Move X0, 0xB05000
	732 Move X0, [X0+2432]
	733 Call 0x1C17CF4
	734 Move X0, 0xB06000
	735 Move X0, [X0+104]
	736 Call 0x1C17CF4
	737 Move X0, 0xB06000
	738 Move X0, [X0+112]
	739 Call 0x1C17CF4
	740 Move X0, 0xB06000
	741 Move X0, [X0+120]
	742 Call 0x1C17CF4
	743 Move X0, 0xB06000
	744 Move X0, [X0+128]
	745 Call 0x1C17CF4
	746 Move X0, 0xB06000
	747 Move X0, [X0+136]
	748 Call 0x1C17CF4
	749 Move X0, 0xB06000
	750 Move X0, [X0+144]
	751 Call 0x1C17CF4
	752 Move X0, 0xB06000
	753 Move X0, [X0+152]
	754 Call 0x1C17CF4
	755 Move X0, 0xB06000
	756 Move X0, [X0+160]
	757 Call 0x1C17CF4
	758 Move X0, 0xB06000
	759 Move X0, [X0+168]
	760 Call 0x1C17CF4
	761 Move X0, 0xB06000
	762 Move X0, [X0+176]
	763 Call 0x1C17CF4
	764 Move X0, 0xB06000
	765 Move X0, [X0+184]
	766 Call 0x1C17CF4
	767 Move X0, 0xB06000
	768 Move X0, [X0+192]
	769 Call 0x1C17CF4
	770 Move X0, 0xB06000
	771 Move X0, [X0+200]
	772 Call 0x1C17CF4
	773 Move X0, 0xB06000
	774 Move X0, [X0+208]
	775 Call 0x1C17CF4
	776 Move X0, 0xB06000
	777 Move X0, [X0+216]
	778 Call 0x1C17CF4
	779 Move X0, 0xB06000
	780 Move X0, [X0+224]
	781 Call 0x1C17CF4
	782 Move X0, 0xB03000
	783 Move X0, [X0+3520]
	784 Call 0x1C17CF4
	785 Move X0, 0xB06000
	786 Move X0, [X0+232]
	787 Call 0x1C17CF4
	788 Move X0, 0xB06000
	789 Move X0, [X0+240]
	790 Call 0x1C17CF4
	791 Move X0, 0xB06000
	792 Move X0, [X0+248]
	793 Call 0x1C17CF4
	794 Move X0, 0xB05000
	795 Move X0, [X0+2464]
	796 Call 0x1C17CF4
	797 Move X0, 0xB06000
	798 Move X0, [X0+256]
	799 Call 0x1C17CF4
	800 Move X0, 0xB06000
	801 Move X0, [X0+264]
	802 Call 0x1C17CF4
	803 Move X0, 0xB05000
	804 Move X0, [X0+272]
	805 Call 0x1C17CF4
	806 Move X0, 0xB05000
	807 Move X0, [X0+280]
	808 Call 0x1C17CF4
	809 Move X0, 0xB05000
	810 Move X0, [X0+288]
	811 Call 0x1C17CF4
	812 Move X0, 0xB05000
	813 Move X0, [X0+296]
	814 Call 0x1C17CF4
	815 Move X0, 0xB04000
	816 Move X0, [X0+2488]
	817 Call 0x1C17CF4
	818 Move X0, 0xB05000
	819 Move X0, [X0+304]
	820 Call 0x1C17CF4
	821 Move X0, 0xB05000
	822 Move X0, [X0+312]
	823 Call 0x1C17CF4
	824 Move X0, 0xB05000
	825 Move X0, [X0+320]
	826 Call 0x1C17CF4
	827 Move X0, 0xB05000
	828 Move X0, [X0+328]
	829 Call 0x1C17CF4
	830 Move X0, 0xB05000
	831 Move X0, [X0+336]
	832 Call 0x1C17CF4
	833 Move X0, 0xB05000
	834 Move X0, [X0+344]
	835 Call 0x1C17CF4
	836 Move X0, 0xB05000
	837 Move X0, [X0+352]
	838 Call 0x1C17CF4
	839 Move X0, 0xB05000
	840 Move X0, [X0+360]
	841 Call 0x1C17CF4
	842 Move X0, 0xB05000
	843 Move X0, [X0+368]
	844 Call 0x1C17CF4
	845 Move X0, 0xB05000
	846 Move X0, [X0+376]
	847 Call 0x1C17CF4
	848 Move X0, 0xB04000
	849 Move X0, [X0+2504]
	850 Call 0x1C17CF4
	851 Move X0, 0xB05000
	852 Move X0, [X0+384]
	853 Call 0x1C17CF4
	854 Move X0, 0xB05000
	855 Move X0, [X0+392]
	856 Call 0x1C17CF4
	857 Move X0, 0xB05000
	858 Move X0, [X0+400]
	859 Call 0x1C17CF4
	860 Move X0, 0xB05000
	861 Move X0, [X0+408]
	862 Call 0x1C17CF4
	863 Move X0, 0xB05000
	864 Move X0, [X0+416]
	865 Call 0x1C17CF4
	866 Move X0, 0xB05000
	867 Move X0, [X0+424]
	868 Call 0x1C17CF4
	869 Move X0, 0xB05000
	870 Move X0, [X0+432]
	871 Call 0x1C17CF4
	872 Move X0, 0xB05000
	873 Move X0, [X0+440]
	874 Call 0x1C17CF4
	875 Move X0, 0xAED000
	876 Move X0, [X0+488]
	877 Call 0x1C17CF4
	878 Move X0, 0xB05000
	879 Move X0, [X0+448]
	880 Call 0x1C17CF4
	881 Move X0, 0xB05000
	882 Move X0, [X0+456]
	883 Call 0x1C17CF4
	884 Move X0, 0xB05000
	885 Move X0, [X0+464]
	886 Call 0x1C17CF4
	887 Move X0, 0xB05000
	888 Move X0, [X0+472]
	889 Call 0x1C17CF4
	890 Move X0, 0xB05000
	891 Move X0, [X0+480]
	892 Call 0x1C17CF4
	893 Move X0, 0xB05000
	894 Move X0, [X0+488]
	895 Call 0x1C17CF4
	896 Move X0, 0xAC7000
	897 Move X0, [X0+856]
	898 Call 0x1C17CF4
	899 Move X0, 0xB04000
	900 Move X0, [X0+2480]
	901 Call 0x1C17CF4
	902 Move X0, 0xB05000
	903 Move X0, [X0+496]
	904 Call 0x1C17CF4
	905 Move X0, 0xB04000
	906 Move X0, [X0+2280]
	907 Call 0x1C17CF4
	908 Move X0, 0xB05000
	909 Move X0, [X0+504]
	910 Call 0x1C17CF4
	911 Move X0, 0xB05000
	912 Move X0, [X0+512]
	913 Call 0x1C17CF4
	914 Move X0, 0xB05000
	915 Move X0, [X0+520]
	916 Call 0x1C17CF4
	917 Move X0, 0xB05000
	918 Move X0, [X0+528]
	919 Call 0x1C17CF4
	920 Move X0, 0xB05000
	921 Move X0, [X0+536]
	922 Call 0x1C17CF4
	923 Move X0, 0xB04000
	924 Move X0, [X0+2288]
	925 Call 0x1C17CF4
	926 Move X0, 0xB05000
	927 Move X0, [X0+544]
	928 Call 0x1C17CF4
	929 Move X0, 0xB05000
	930 Move X0, [X0+552]
	931 Call 0x1C17CF4
	932 Move X0, 0xB05000
	933 Move X0, [X0+560]
	934 Call 0x1C17CF4
	935 Move X0, 0xB05000
	936 Move X0, [X0+568]
	937 Call 0x1C17CF4
	938 Move X0, 0xB05000
	939 Move X0, [X0+576]
	940 Call 0x1C17CF4
	941 Move X0, 0xB05000
	942 Move X0, [X0+584]
	943 Call 0x1C17CF4
	944 Move X0, 0xB04000
	945 Move X0, [X0+2296]
	946 Call 0x1C17CF4
	947 Move X0, 0xB05000
	948 Move X0, [X0+592]
	949 Call 0x1C17CF4
	950 Move X0, 0xB05000
	951 Move X0, [X0+600]
	952 Call 0x1C17CF4
	953 Move X0, 0xB05000
	954 Move X0, [X0+608]
	955 Call 0x1C17CF4
	956 Move X0, 0xB05000
	957 Move X0, [X0+616]
	958 Call 0x1C17CF4
	959 Move X0, 0xB05000
	960 Move X0, [X0+624]
	961 Call 0x1C17CF4
	962 Move X0, 0xB05000
	963 Move X0, [X0+632]
	964 Call 0x1C17CF4
	965 Move X0, 0xB05000
	966 Move X0, [X0+640]
	967 Call 0x1C17CF4
	968 Move X0, 0xB05000
	969 Move X0, [X0+648]
	970 Call 0x1C17CF4
	971 Move X0, 0xAEB000
	972 Move X0, [X0+4016]
	973 Call 0x1C17CF4
	974 Move X0, 0xB05000
	975 Move X0, [X0+656]
	976 Call 0x1C17CF4
	977 Move X0, 0xB05000
	978 Move X0, [X0+664]
	979 Call 0x1C17CF4
	980 Move X0, 0xB04000
	981 Move X0, [X0+2440]
	982 Call 0x1C17CF4
	983 Move X0, 0xB05000
	984 Move X0, [X0+672]
	985 Call 0x1C17CF4
	986 Move X0, 0xB05000
	987 Move X0, [X0+680]
	988 Call 0x1C17CF4
	989 Move X12, 0xB04000
	990 Move X10, X25
	991 Move X11, 0xABD000
	992 Move X25, 0xB04000
	993 Move X12, [X12+2496]
	994 Move X11, [X11+1744]
	995 Move X25, [X25+2432]
	996 Move W8, 1
	997 Move [X23+1366], W8
	998 Move X8, [X22]
	999 Move X9, [X25]
	1000 Move X8, [X8+184]
	1001 Move [X8], X9
	1002 Move X8, [X22]
	1003 Move X13, [X21]
	1004 Move X9, [X19]
	1005 Move X8, [X8+184]
	1006 Move [X8+8], X13
	1007 Move [X8+16], X9
	1008 Move X13, [X20]
	1009 Move X9, [X29]
	1010 Move [X8+24], X13
	1011 Move [X8+32], X9
	1012 Move X13, [X28]
	1013 Move X9, [X27]
	1014 Move [X8+40], X13
	1015 Move [X8+48], X9
	1016 Move X13, [X26]
	1017 Move X9, [X24]
	1018 Move [X8+56], X13
	1019 Move [X8+64], X9
	1020 Move X13, [X12]
	1021 Move X9, [X10]
	1022 Move [X8+72], X13
	1023 Move [X8+80], X9
	1024 Move X0, [X11]
	1025 Call 0x1C17F10
	1026 Move X8, 0xB04000
	1027 Move X8, [X8+2512]
	1028 Move W1, 38
	1029 Move X19, X0
	1030 Move X2, [X8]
	1031 Call Dictionary`2<Object, Object>..ctor, X0, X1
	1032 Compare X19, 0
	1033 JumpIfEqual {5143}
	1034 Move X8, 0xB04000
	1035 Move X9, 0xB04000
	1036 Move X20, 0xABD000
	1037 Move X8, [X8+3792]
	1038 Move X9, [X9+2688]
	1039 Move X20, [X20+2064]
	1040 Move X23, 0xB05000
	1041 Move X24, 0xB05000
	1042 Move X22, 0xB04000
	1043 Move X29, 0xB04000
	1044 Move X27, 0xB04000
	1045 Move X28, 0xB04000
	1046 Move X26, 0xB04000
	1047 Move X23, [X23+408]
	1048 Move X24, [X24+160]
	1049 Move X22, [X22+2952]
	1050 Move X29, [X29+3128]
	1051 Move X27, [X27+3464]
	1052 Move X28, [X28+3952]
	1053 Move X26, [X26+3688]
	1054 Move X1, [X8]
	1055 Move X2, [X9]
	1056 Move X3, [X20]
	1057 Move X21, 0xABC000
	1058 Move X21, [X21+2760]
	1059 Move X0, X19
	1060 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	1061 Move X1, [X23]
	1062 Move X2, [X24]
	1063 Move X3, [X20]
	1064 Move X0, X19
	1065 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	1066 Move X1, [X22]
	1067 Move X2, [X29]
	1068 Move X3, [X20]
	1069 Move X0, X19
	1070 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	1071 Move X1, [X27]
	1072 Move X2, [X28]
	1073 Move X3, [X20]
	1074 Move X0, X19
	1075 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	1076 Move X8, 0xB04000
	1077 Move X8, [X8+3360]
	1078 Move X2, [X26]
	1079 Move X3, [X20]
	1080 Move X0, X19
	1081 Move X1, [X8]
	1082 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	1083 Move X8, 0xB02000
	1084 Move X8, [X8+3520]
	1085 Move X0, X19
	1086 Move X1, [X8]
	1087 Move X8, 0xB04000
	1088 Move X8, [X8+4024]
	1089 Move X3, [X20]
	1090 Move X2, [X8]
	1091 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	1092 Move X8, 0xB04000
	1093 Move X8, [X8+2288]
	1094 Move X0, X19
	1095 Move X1, [X8]
	1096 Move X8, 0xB04000
	1097 Move X8, [X8+4016]
	1098 Move X3, [X20]
	1099 Move X2, [X8]
	1100 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	1101 Move X8, 0xB04000
	1102 Move X8, [X8+3400]
	1103 Move X0, X19
	1104 Move X1, [X8]
	1105 Move X8, 0xB04000
	1106 Move X8, [X8+3392]
	1107 Move X3, [X20]
	1108 Move X2, [X8]
	1109 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	1110 Move X8, 0xB04000
	1111 Move X8, [X8+3456]
	1112 Move X0, X19
	1113 Move X1, [X8]
	1114 Move X8, 0xB04000
	1115 Move X8, [X8+3656]
	1116 Move X3, [X20]
	1117 Move X2, [X8]
	1118 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	1119 Move X8, 0xB04000
	1120 Move X8, [X8+2280]
	1121 Move X0, X19
	1122 Move X1, [X8]
	1123 Move X8, 0xB04000
	1124 Move X8, [X8+3600]
	1125 Move X3, [X20]
	1126 Move X2, [X8]
	1127 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	1128 Move X8, 0xB04000
	1129 Move X8, [X8+2296]
	1130 Move X0, X19
	1131 Move X1, [X8]
	1132 Move X8, 0xB04000
	1133 Move X8, [X8+2640]
	1134 Move X3, [X20]
	1135 Move X2, [X8]
	1136 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	1137 Move X8, 0xB02000
	1138 Move X8, [X8+3104]
	1139 Move X0, X19
	1140 Move X1, [X8]
	1141 Move X8, 0xB04000
	1142 Move X8, [X8+3112]
	1143 Move X3, [X20]
	1144 Move X2, [X8]
	1145 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	1146 Move X8, 0xB04000
	1147 Move X1, [X25]
	1148 Move X8, [X8+3496]
	1149 Move X3, [X20]
	1150 Move X0, X19
	1151 Move X2, [X8]
	1152 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	1153 Move X8, 0xB05000
	1154 Move X8, [X8+440]
	1155 Move X0, X19
	1156 Move X1, [X8]
	1157 Move X8, 0xB05000
	1158 Move X8, [X8+632]
	1159 Move X3, [X20]
	1160 Move X2, [X8]
	1161 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	1162 Move X8, 0xB04000
	1163 Move X8, [X8+2784]
	1164 Move X0, X19
	1165 Move X1, [X8]
	1166 Move X8, 0xB04000
	1167 Move X8, [X8+2568]
	1168 Move X3, [X20]
	1169 Move X2, [X8]
	1170 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	1171 Move X8, 0xB04000
	1172 Move X8, [X8+2976]
	1173 Move X0, X19
	1174 Move X1, [X8]
	1175 Move X8, 0xB04000
	1176 Move X8, [X8+2824]
	1177 Move X3, [X20]
	1178 Move X2, [X8]
	1179 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	1180 Move X8, 0xAED000
	1181 Move X8, [X8+488]
	1182 Move X0, X19
	1183 Move X1, [X8]
	1184 Move X8, 0xB05000
	1185 Move X8, [X8+288]
	1186 Move X3, [X20]
	1187 Move X2, [X8]
	1188 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	1189 Move X8, 0xB04000
	1190 Move X8, [X8+2384]
	1191 Move X0, X19
	1192 Move X1, [X8]
	1193 Move X8, 0xAE8000
	1194 Move X8, [X8+184]
	1195 Move X3, [X20]
	1196 Move X2, [X8]
	1197 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	1198 Move X8, 0xB04000
	1199 Move X8, [X8+2672]
	1200 Move X0, X19
	1201 Move X1, [X8]
	1202 Move X8, 0xABD000
	1203 Move X8, [X8+4064]
	1204 Move X3, [X20]
	1205 Move X2, [X8]
	1206 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	1207 Move X8, 0xB05000
	1208 Move X8, [X8+528]
	1209 Move X0, X19
	1210 Move X1, [X8]
	1211 Move X8, 0xB04000
	1212 Move X8, [X8+3088]
	1213 Move X3, [X20]
	1214 Move X2, [X8]
	1215 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	1216 Move X8, 0xAC7000
	1217 Move X8, [X8+856]
	1218 Move X0, X19
	1219 Move X1, [X8]
	1220 Move X8, 0xB05000
	1221 Move X8, [X8+576]
	1222 Move X3, [X20]
	1223 Move X2, [X8]
	1224 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	1225 Move X8, 0xB04000
	1226 Move X8, [X8+3024]
	1227 Move X0, X19
	1228 Move X1, [X8]
	1229 Move X8, 0xB04000
	1230 Move X8, [X8+3072]
	1231 Move X3, [X20]
	1232 Move X2, [X8]
	1233 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	1234 Move X8, 0xB05000
	1235 Move X8, [X8+560]
	1236 Move X0, X19
	1237 Move X1, [X8]
	1238 Move X8, 0xB04000
	1239 Move X8, [X8+3984]
	1240 Move X3, [X20]
	1241 Move X2, [X8]
	1242 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	1243 Move X8, 0xB04000
	1244 Move X8, [X8+3728]
	1245 Move X0, X19
	1246 Move X1, [X8]
	1247 Move X8, 0xB04000
	1248 Move X8, [X8+4032]
	1249 Move X3, [X20]
	1250 Move X2, [X8]
	1251 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	1252 Move X8, 0xB04000
	1253 Move X8, [X8+3776]
	1254 Move X0, X19
	1255 Move X1, [X8]
	1256 Move X8, 0xB05000
	1257 Move X8, [X8+272]
	1258 Move X3, [X20]
	1259 Move X2, [X8]
	1260 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	1261 Move X8, 0xB04000
	1262 Move X8, [X8+2792]
	1263 Move X0, X19
	1264 Move X1, [X8]
	1265 Move X8, 0xB05000
	1266 Move X8, [X8+200]
	1267 Move X3, [X20]
	1268 Move X2, [X8]
	1269 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	1270 Move X8, 0xB04000
	1271 Move X8, [X8+3016]
	1272 Move X0, X19
	1273 Move X1, [X8]
	1274 Move X8, 0xB05000
	1275 Move X8, [X8+232]
	1276 Move X3, [X20]
	1277 Move X2, [X8]
	1278 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	1279 Move X8, 0xB05000
	1280 Move X8, [X8+120]
	1281 Move X0, X19
	1282 Move X1, [X8]
	1283 Move X8, 0xB04000
	1284 Move X8, [X8+2736]
	1285 Move X3, [X20]
	1286 Move X2, [X8]
	1287 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	1288 Move X8, 0xAEB000
	1289 Move X8, [X8+4016]
	1290 Move X0, X19
	1291 Move X1, [X8]
	1292 Move X8, 0xB04000
	1293 Move X8, [X8+3568]
	1294 Move X3, [X20]
	1295 Move X2, [X8]
	1296 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	1297 Move X8, 0xB04000
	1298 Move X8, [X8+3832]
	1299 Move X0, X19
	1300 Move X1, [X8]
	1301 Move X8, 0xB05000
	1302 Move X8, [X8+328]
	1303 Move X3, [X20]
	1304 Move X2, [X8]
	1305 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	1306 Move X8, 0xB05000
	1307 Move X8, [X8+344]
	1308 Move X0, X19
	1309 Move X1, [X8]
	1310 Move X8, 0xB04000
	1311 Move X8, [X8+4040]
	1312 Move X3, [X20]
	1313 Move X2, [X8]
	1314 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	1315 Move X8, 0xB04000
	1316 Move X8, [X8+3536]
	1317 Move X0, X19
	1318 Move X1, [X8]
	1319 Move X8, 0xB05000
	1320 Move X8, [X8+208]
	1321 Move X3, [X20]
	1322 Move X2, [X8]
	1323 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	1324 Move X8, 0xB04000
	1325 Move X8, [X8+3552]
	1326 Move X0, X19
	1327 Move X1, [X8]
	1328 Move X8, 0xB04000
	1329 Move X8, [X8+3248]
	1330 Move X3, [X20]
	1331 Move X2, [X8]
	1332 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	1333 Move X8, 0xAED000
	1334 Move X8, [X8+464]
	1335 Move X0, X19
	1336 Move X1, [X8]
	1337 Move X8, 0xB04000
	1338 Move X8, [X8+2760]
	1339 Move X3, [X20]
	1340 Move X2, [X8]
	1341 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	1342 Move X8, 0xB04000
	1343 Move X8, [X8+2616]
	1344 Move X0, X19
	1345 Move X1, [X8]
	1346 Move X8, 0xB05000
	1347 Move X8, [X8+424]
	1348 Move X3, [X20]
	1349 Move X2, [X8]
	1350 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	1351 Move X8, 0xB04000
	1352 Move X8, [X8+3336]
	1353 Move X0, X19
	1354 Move X1, [X8]
	1355 Move X8, 0xB05000
	1356 Move X8, [X8+88]
	1357 Move X3, [X20]
	1358 Move X2, [X8]
	1359 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	1360 Move X8, 0xB05000
	1361 Move X8, [X8+304]
	1362 Move X0, X19
	1363 Move X1, [X8]
	1364 Move X8, 0xB05000
	1365 Move X8, [X8+448]
	1366 Move X3, [X20]
	1367 Move X2, [X8]
	1368 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	1369 Move X8, 0xAF1000
	1370 Move X8, [X8+1088]
	1371 Move X0, X19
	1372 Move X1, [X8]
	1373 Move X8, 0xB04000
	1374 Move X8, [X8+3184]
	1375 Move X3, [X20]
	1376 Move X2, [X8]
	1377 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	1378 Move X23, 0xB04000
	1379 Move X23, [X23+2272]
	1380 Move W1, 112
	1381 Move X8, [X23]
	1382 Move X8, [X8+184]
	1383 Move [X8+88], X19
	1384 Move X8, 0xAC9000
	1385 Move X8, [X8+3632]
	1386 Move X0, [X8]
	1387 Call 0x1C17D6C
	1388 Move X8, [X21]
	1389 Move X19, X0
	1390 Move W1, 2
	1391 Move X0, X8
	1392 Call 0x1C17D6C
	1393 Compare X0, 0
	1394 JumpIfEqual {5143}
	1395 Move W8, [X0+24]
	1396 Compare W8, 0
	1397 JumpIfEqual {5142}
	1398 Move X9, 0xB04000
	1399 Move X9, [X9+2744]
	1400 NotImplemented "Instruction CMP not yet implemented."
	1401 Move X9, [X9]
	1402 Move [X0+32], X9
	1403 Move X8, 0xB04000
	1404 Move X8, [X8+3168]
	1405 Move X8, [X8]
	1406 Move [X0+40], X8
	1407 Compare X19, 0
	1408 JumpIfEqual {5143}
	1409 Move X22, X19
	1410 Add X22, X22, 24
	1411 Move W8, [X22]
	1412 Compare W8, 0
	1413 JumpIfEqual {5142}
	1414 Move [X19+32], X0
	1415 Move X0, [X21]
	1416 Move W1, 2
	1417 Call 0x1C17D6C
	1418 Compare X0, 0
	1419 JumpIfEqual {5143}
	1420 Move W8, [X0+24]
	1421 Compare W8, 0
	1422 JumpIfEqual {5142}
	1423 Move X9, 0xB05000
	1424 Move X9, [X9+456]
	1425 NotImplemented "Instruction CMP not yet implemented."
	1426 Move X9, [X9]
	1427 Move [X0+32], X9
	1428 Move X8, 0xB05000
	1429 Move X8, [X8]
	1430 Move X8, [X8]
	1431 Move [X0+40], X8
	1432 Move W8, [X22]
	1433 NotImplemented "Instruction CMP not yet implemented."
	1434 Move [X19+40], X0
	1435 Move X0, [X21]
	1436 Move W1, 2
	1437 Call 0x1C17D6C
	1438 Compare X0, 0
	1439 JumpIfEqual {5143}
	1440 Move W8, [X0+24]
	1441 Compare W8, 0
	1442 JumpIfEqual {5142}
	1443 Move X9, 0xB04000
	1444 Move X9, [X9+3432]
	1445 NotImplemented "Instruction CMP not yet implemented."
	1446 Move X9, [X9]
	1447 Move [X0+32], X9
	1448 Move X8, 0xB04000
	1449 Move X8, [X8+3632]
	1450 Move X8, [X8]
	1451 Move [X0+40], X8
	1452 Move W8, [X22]
	1453 NotImplemented "Instruction CMP not yet implemented."
	1454 Move [X19+48], X0
	1455 Move X0, [X21]
	1456 Move W1, 2
	1457 Call 0x1C17D6C
	1458 Compare X0, 0
	1459 JumpIfEqual {5143}
	1460 Move W8, [X0+24]
	1461 Compare W8, 0
	1462 JumpIfEqual {5142}
	1463 Move X9, 0xB04000
	1464 Move X9, [X9+3704]
	1465 NotImplemented "Instruction CMP not yet implemented."
	1466 Move X9, [X9]
	1467 Move [X0+32], X9
	1468 Move X8, 0xB05000
	1469 Move X8, [X8+488]
	1470 Move X8, [X8]
	1471 Move [X0+40], X8
	1472 Move W8, [X22]
	1473 NotImplemented "Instruction CMP not yet implemented."
	1474 Move [X19+56], X0
	1475 Move X0, [X21]
	1476 Move W1, 2
	1477 Call 0x1C17D6C
	1478 Compare X0, 0
	1479 JumpIfEqual {5143}
	1480 Move W8, [X0+24]
	1481 Compare W8, 0
	1482 JumpIfEqual {5142}
	1483 Move X9, 0xB05000
	1484 Move X9, [X9+520]
	1485 NotImplemented "Instruction CMP not yet implemented."
	1486 Move X9, [X9]
	1487 Move [X0+32], X9
	1488 Move X8, 0xB04000
	1489 Move X8, [X8+3504]
	1490 Move X8, [X8]
	1491 Move [X0+40], X8
	1492 Move W8, [X22]
	1493 NotImplemented "Instruction CMP not yet implemented."
	1494 Move [X19+64], X0
	1495 Move X0, [X21]
	1496 Move W1, 2
	1497 Call 0x1C17D6C
	1498 Compare X0, 0
	1499 JumpIfEqual {5143}
	1500 Move W8, [X0+24]
	1501 Compare W8, 0
	1502 JumpIfEqual {5142}
	1503 Move X9, 0xB05000
	1504 Move X9, [X9+552]
	1505 NotImplemented "Instruction CMP not yet implemented."
	1506 Move X9, [X9]
	1507 Move [X0+32], X9
	1508 Move X8, 0xB04000
	1509 Move X8, [X8+3976]
	1510 Move X8, [X8]
	1511 Move [X0+40], X8
	1512 Move W8, [X22]
	1513 NotImplemented "Instruction CMP not yet implemented."
	1514 Move [X19+72], X0
	1515 Move X0, [X21]
	1516 Move W1, 2
	1517 Call 0x1C17D6C
	1518 Compare X0, 0
	1519 JumpIfEqual {5143}
	1520 Move W8, [X0+24]
	1521 Compare W8, 0
	1522 JumpIfEqual {5142}
	1523 Move X9, 0xB05000
	1524 Move X9, [X9+352]
	1525 NotImplemented "Instruction CMP not yet implemented."
	1526 Move X9, [X9]
	1527 Move [X0+32], X9
	1528 Move X8, 0xB04000
	1529 Move X8, [X8+3592]
	1530 Move X8, [X8]
	1531 Move [X0+40], X8
	1532 Move W8, [X22]
	1533 NotImplemented "Instruction CMP not yet implemented."
	1534 Move [X19+80], X0
	1535 Move X0, [X21]
	1536 Move W1, 2
	1537 Call 0x1C17D6C
	1538 Compare X0, 0
	1539 JumpIfEqual {5143}
	1540 Move W8, [X0+24]
	1541 Compare W8, 0
	1542 JumpIfEqual {5142}
	1543 Move X9, 0xB04000
	1544 Move X9, [X9+2648]
	1545 NotImplemented "Instruction CMP not yet implemented."
	1546 Move X9, [X9]
	1547 Move [X0+32], X9
	1548 Move X8, 0xB04000
	1549 Move X8, [X8+2992]
	1550 Move X8, [X8]
	1551 Move [X0+40], X8
	1552 Move W8, [X22]
	1553 NotImplemented "Instruction CMP not yet implemented."
	1554 Move [X19+88], X0
	1555 Move X0, [X21]
	1556 Move W1, 2
	1557 Call 0x1C17D6C
	1558 Compare X0, 0
	1559 JumpIfEqual {5143}
	1560 Move W8, [X0+24]
	1561 Compare W8, 0
	1562 JumpIfEqual {5142}
	1563 Move X9, 0xB04000
	1564 Move X9, [X9+2816]
	1565 NotImplemented "Instruction CMP not yet implemented."
	1566 Move X9, [X9]
	1567 Move [X0+32], X9
	1568 Move X8, 0xB04000
	1569 Move X8, [X8+2728]
	1570 Move X8, [X8]
	1571 Move [X0+40], X8
	1572 Move W8, [X22]
	1573 NotImplemented "Instruction CMP not yet implemented."
	1574 Move [X19+96], X0
	1575 Move X0, [X21]
	1576 Move W1, 2
	1577 Call 0x1C17D6C
	1578 Compare X0, 0
	1579 JumpIfEqual {5143}
	1580 Move W8, [X0+24]
	1581 Compare W8, 0
	1582 JumpIfEqual {5142}
	1583 Move X9, 0xB04000
	1584 Move X9, [X9+3808]
	1585 NotImplemented "Instruction CMP not yet implemented."
	1586 Move X9, [X9]
	1587 Move [X0+32], X9
	1588 Move X8, 0xB04000
	1589 Move X8, [X8+3488]
	1590 Move X8, [X8]
	1591 Move [X0+40], X8
	1592 Move W8, [X22]
	1593 NotImplemented "Instruction CMP not yet implemented."
	1594 Move [X19+104], X0
	1595 Move X0, [X21]
	1596 Move W1, 2
	1597 Call 0x1C17D6C
	1598 Compare X0, 0
	1599 JumpIfEqual {5143}
	1600 Move W8, [X0+24]
	1601 Compare W8, 0
	1602 JumpIfEqual {5142}
	1603 Move X9, 0xB04000
	1604 Move X9, [X9+2880]
	1605 NotImplemented "Instruction CMP not yet implemented."
	1606 Move X9, [X9]
	1607 Move [X0+32], X9
	1608 Move X8, 0xB04000
	1609 Move X8, [X8+3608]
	1610 Move X8, [X8]
	1611 Move [X0+40], X8
	1612 Move W8, [X22]
	1613 NotImplemented "Instruction CMP not yet implemented."
	1614 Move [X19+112], X0
	1615 Move X0, [X21]
	1616 Move W1, 2
	1617 Call 0x1C17D6C
	1618 Compare X0, 0
	1619 JumpIfEqual {5143}
	1620 Move W8, [X0+24]
	1621 Compare W8, 0
	1622 JumpIfEqual {5142}
	1623 Move X9, 0xB04000
	1624 Move X9, [X9+2960]
	1625 NotImplemented "Instruction CMP not yet implemented."
	1626 Move X9, [X9]
	1627 Move [X0+32], X9
	1628 Move X8, 0xB05000
	1629 Move X8, [X8+376]
	1630 Move X8, [X8]
	1631 Move [X0+40], X8
	1632 Move W8, [X22]
	1633 NotImplemented "Instruction CMP not yet implemented."
	1634 Move [X19+120], X0
	1635 Move X0, [X21]
	1636 Move W1, 2
	1637 Call 0x1C17D6C
	1638 Compare X0, 0
	1639 JumpIfEqual {5143}
	1640 Move W8, [X0+24]
	1641 Compare W8, 0
	1642 JumpIfEqual {5142}
	1643 Move X9, 0xB04000
	1644 Move X9, [X9+2840]
	1645 NotImplemented "Instruction CMP not yet implemented."
	1646 Move X9, [X9]
	1647 Move [X0+32], X9
	1648 Move X8, 0xB04000
	1649 Move X8, [X8+3264]
	1650 Move X8, [X8]
	1651 Move [X0+40], X8
	1652 Move W8, [X22]
	1653 NotImplemented "Instruction CMP not yet implemented."
	1654 Move [X19+128], X0
	1655 Move X0, [X21]
	1656 Move W1, 2
	1657 Call 0x1C17D6C
	1658 Compare X0, 0
	1659 JumpIfEqual {5143}
	1660 Move W8, [X0+24]
	1661 Compare W8, 0
	1662 JumpIfEqual {5142}
	1663 Move X9, 0xB04000
	1664 Move X9, [X9+2848]
	1665 NotImplemented "Instruction CMP not yet implemented."
	1666 Move X9, [X9]
	1667 Move [X0+32], X9
	1668 Move X8, 0xB05000
	1669 Move X8, [X8+168]
	1670 Move X8, [X8]
	1671 Move [X0+40], X8
	1672 Move W8, [X22]
	1673 NotImplemented "Instruction CMP not yet implemented."
	1674 Move [X19+136], X0
	1675 Move X0, [X21]
	1676 Move W1, 2
	1677 Call 0x1C17D6C
	1678 Compare X0, 0
	1679 JumpIfEqual {5143}
	1680 Move W8, [X0+24]
	1681 Compare W8, 0
	1682 JumpIfEqual {5142}
	1683 Move X9, 0xB05000
	1684 Move X9, [X9+536]
	1685 NotImplemented "Instruction CMP not yet implemented."
	1686 Move X9, [X9]
	1687 Move [X0+32], X9
	1688 Move X8, 0xB04000
	1689 Move X8, [X8+3240]
	1690 Move X8, [X8]
	1691 Move [X0+40], X8
	1692 Move W8, [X22]
	1693 NotImplemented "Instruction CMP not yet implemented."
	1694 Move [X19+144], X0
	1695 Move X0, [X21]
	1696 Move W1, 2
	1697 Call 0x1C17D6C
	1698 Compare X0, 0
	1699 JumpIfEqual {5143}
	1700 Move W8, [X0+24]
	1701 Compare W8, 0
	1702 JumpIfEqual {5142}
	1703 Move X9, 0xB04000
	1704 Move X9, [X9+2680]
	1705 NotImplemented "Instruction CMP not yet implemented."
	1706 Move X9, [X9]
	1707 Move [X0+32], X9
	1708 Move X8, 0xB05000
	1709 Move X8, [X8+40]
	1710 Move X8, [X8]
	1711 Move [X0+40], X8
	1712 Move W8, [X22]
	1713 NotImplemented "Instruction CMP not yet implemented."
	1714 Move [X19+152], X0
	1715 Move X0, [X21]
	1716 Move W1, 2
	1717 Call 0x1C17D6C
	1718 Compare X0, 0
	1719 JumpIfEqual {5143}
	1720 Move W8, [X0+24]
	1721 Compare W8, 0
	1722 JumpIfEqual {5142}
	1723 Move X9, 0xB05000
	1724 Move X9, [X9+48]
	1725 NotImplemented "Instruction CMP not yet implemented."
	1726 Move X9, [X9]
	1727 Move [X0+32], X9
	1728 Move X8, 0xB04000
	1729 Move X8, [X8+2544]
	1730 Move X8, [X8]
	1731 Move [X0+40], X8
	1732 Move W8, [X22]
	1733 NotImplemented "Instruction CMP not yet implemented."
	1734 Move [X19+160], X0
	1735 Move X0, [X21]
	1736 Move W1, 2
	1737 Call 0x1C17D6C
	1738 Compare X0, 0
	1739 JumpIfEqual {5143}
	1740 Move W8, [X0+24]
	1741 Compare W8, 0
	1742 JumpIfEqual {5142}
	1743 Move X9, 0xB04000
	1744 Move X9, [X9+3320]
	1745 NotImplemented "Instruction CMP not yet implemented."
	1746 Move X9, [X9]
	1747 Move [X0+32], X9
	1748 Move X8, 0xB04000
	1749 Move X8, [X8+3512]
	1750 Move X8, [X8]
	1751 Move [X0+40], X8
	1752 Move W8, [X22]
	1753 NotImplemented "Instruction CMP not yet implemented."
	1754 Move [X19+168], X0
	1755 Move X0, [X21]
	1756 Move W1, 2
	1757 Call 0x1C17D6C
	1758 Compare X0, 0
	1759 JumpIfEqual {5143}
	1760 Move W8, [X0+24]
	1761 Compare W8, 0
	1762 JumpIfEqual {5142}
	1763 Move X9, 0xB05000
	1764 Move X9, [X9+176]
	1765 NotImplemented "Instruction CMP not yet implemented."
	1766 Move X9, [X9]
	1767 Move [X0+32], X9
	1768 Move X8, 0xB04000
	1769 Move X8, [X8+3288]
	1770 Move X8, [X8]
	1771 Move [X0+40], X8
	1772 Move W8, [X22]
	1773 NotImplemented "Instruction CMP not yet implemented."
	1774 Move [X19+176], X0
	1775 Move X0, [X21]
	1776 Move W1, 2
	1777 Call 0x1C17D6C
	1778 Compare X0, 0
	1779 JumpIfEqual {5143}
	1780 Move W8, [X0+24]
	1781 Compare W8, 0
	1782 JumpIfEqual {5142}
	1783 Move X9, 0xB04000
	1784 Move X9, [X9+3280]
	1785 NotImplemented "Instruction CMP not yet implemented."
	1786 Move X9, [X9]
	1787 Move [X0+32], X9
	1788 Move X8, 0xB05000
	1789 Move X8, [X8+24]
	1790 Move X8, [X8]
	1791 Move [X0+40], X8
	1792 Move W8, [X22]
	1793 NotImplemented "Instruction CMP not yet implemented."
	1794 Move [X19+184], X0
	1795 Move X0, [X21]
	1796 Move W1, 2
	1797 Call 0x1C17D6C
	1798 Compare X0, 0
	1799 JumpIfEqual {5143}
	1800 Move W8, [X0+24]
	1801 Compare W8, 0
	1802 JumpIfEqual {5142}
	1803 Move X9, 0xB05000
	1804 Move X9, [X9+360]
	1805 NotImplemented "Instruction CMP not yet implemented."
	1806 Move X9, [X9]
	1807 Move [X0+32], X9
	1808 Move X8, 0xB04000
	1809 Move X8, [X8+3096]
	1810 Move X8, [X8]
	1811 Move [X0+40], X8
	1812 Move W8, [X22]
	1813 NotImplemented "Instruction CMP not yet implemented."
	1814 Move [X19+192], X0
	1815 Move X0, [X21]
	1816 Move W1, 2
	1817 Call 0x1C17D6C
	1818 Compare X0, 0
	1819 JumpIfEqual {5143}
	1820 Move W8, [X0+24]
	1821 Compare W8, 0
	1822 JumpIfEqual {5142}
	1823 Move X9, 0xB04000
	1824 Move X9, [X9+3896]
	1825 NotImplemented "Instruction CMP not yet implemented."
	1826 Move X9, [X9]
	1827 Move [X0+32], X9
	1828 Move X8, 0xB04000
	1829 Move X8, [X8+2528]
	1830 Move X8, [X8]
	1831 Move [X0+40], X8
	1832 Move W8, [X22]
	1833 NotImplemented "Instruction CMP not yet implemented."
	1834 Move [X19+200], X0
	1835 Move X0, [X21]
	1836 Move W1, 2
	1837 Call 0x1C17D6C
	1838 Compare X0, 0
	1839 JumpIfEqual {5143}
	1840 Move W8, [X0+24]
	1841 Compare W8, 0
	1842 JumpIfEqual {5142}
	1843 Move X9, 0xB03000
	1844 Move X9, [X9+3192]
	1845 NotImplemented "Instruction CMP not yet implemented."
	1846 Move X9, [X9]
	1847 Move [X0+32], X9
	1848 Move X8, 0xB03000
	1849 Move X8, [X8+2720]
	1850 Move X8, [X8]
	1851 Move [X0+40], X8
	1852 Move W8, [X22]
	1853 NotImplemented "Instruction CMP not yet implemented."
	1854 Move [X19+208], X0
	1855 Move X0, [X21]
	1856 Move W1, 2
	1857 Call 0x1C17D6C
	1858 Compare X0, 0
	1859 JumpIfEqual {5143}
	1860 Move W8, [X0+24]
	1861 Compare W8, 0
	1862 JumpIfEqual {5142}
	1863 Move X9, 0xB04000
	1864 Move X9, [X9+416]
	1865 NotImplemented "Instruction CMP not yet implemented."
	1866 Move X9, [X9]
	1867 Move [X0+32], X9
	1868 Move X20, 0xB04000
	1869 Move X20, [X20+104]
	1870 Move X8, [X20]
	1871 Move [X0+40], X8
	1872 Move W8, [X22]
	1873 NotImplemented "Instruction CMP not yet implemented."
	1874 Move [X19+216], X0
	1875 Move X0, [X21]
	1876 Move W1, 2
	1877 Call 0x1C17D6C
	1878 Compare X0, 0
	1879 JumpIfEqual {5143}
	1880 Move W8, [X0+24]
	1881 Compare W8, 0
	1882 JumpIfEqual {5142}
	1883 Move X9, 0xB03000
	1884 Move X9, [X9+2608]
	1885 NotImplemented "Instruction CMP not yet implemented."
	1886 Move X9, [X9]
	1887 Move [X0+32], X9
	1888 Move X8, 0xB04000
	1889 Move X8, [X8+296]
	1890 Move X8, [X8]
	1891 Move [X0+40], X8
	1892 Move W8, [X22]
	1893 NotImplemented "Instruction CMP not yet implemented."
	1894 Move [X19+224], X0
	1895 Move X0, [X21]
	1896 Move W1, 2
	1897 Call 0x1C17D6C
	1898 Compare X0, 0
	1899 JumpIfEqual {5143}
	1900 Move W8, [X0+24]
	1901 Compare W8, 0
	1902 JumpIfEqual {5142}
	1903 Move X9, 0xB03000
	1904 Move X9, [X9+3768]
	1905 NotImplemented "Instruction CMP not yet implemented."
	1906 Move X9, [X9]
	1907 Move [X0+32], X9
	1908 Move X8, [X20]
	1909 Move [X0+40], X8
	1910 Move W8, [X22]
	1911 NotImplemented "Instruction CMP not yet implemented."
	1912 Move [X19+232], X0
	1913 Move X0, [X21]
	1914 Move W1, 2
	1915 Call 0x1C17D6C
	1916 Compare X0, 0
	1917 JumpIfEqual {5143}
	1918 Move W8, [X0+24]
	1919 Compare W8, 0
	1920 JumpIfEqual {5142}
	1921 Move X9, 0xB03000
	1922 Move X9, [X9+3520]
	1923 NotImplemented "Instruction CMP not yet implemented."
	1924 Move X9, [X9]
	1925 Move [X0+32], X9
	1926 Move X8, 0xB04000
	1927 Move X8, [X8+184]
	1928 Move X8, [X8]
	1929 Move [X0+40], X8
	1930 Move W8, [X22]
	1931 NotImplemented "Instruction CMP not yet implemented."
	1932 Move [X19+240], X0
	1933 Move X0, [X21]
	1934 Move W1, 2
	1935 Call 0x1C17D6C
	1936 Compare X0, 0
	1937 JumpIfEqual {5143}
	1938 Move W8, [X0+24]
	1939 Compare W8, 0
	1940 JumpIfEqual {5142}
	1941 Move X9, 0xB03000
	1942 Move X9, [X9+3720]
	1943 NotImplemented "Instruction CMP not yet implemented."
	1944 Move X9, [X9]
	1945 Move [X0+32], X9
	1946 Move X8, 0xB03000
	1947 Move X8, [X8+3384]
	1948 Move X8, [X8]
	1949 Move [X0+40], X8
	1950 Move W8, [X22]
	1951 NotImplemented "Instruction CMP not yet implemented."
	1952 Move [X19+248], X0
	1953 Move X0, [X21]
	1954 Move W1, 2
	1955 Call 0x1C17D6C
	1956 Compare X0, 0
	1957 JumpIfEqual {5143}
	1958 Move W8, [X0+24]
	1959 Compare W8, 0
	1960 JumpIfEqual {5142}
	1961 Move X9, 0xB03000
	1962 Move X9, [X9+2768]
	1963 NotImplemented "Instruction CMP not yet implemented."
	1964 Move X9, [X9]
	1965 Move [X0+32], X9
	1966 Move X8, 0xB03000
	1967 Move X8, [X8+2808]
	1968 Move X8, [X8]
	1969 Move [X0+40], X8
	1970 Move W8, [X22]
	1971 NotImplemented "Instruction CMP not yet implemented."
	1972 Move [X19+256], X0
	1973 Move X0, [X21]
	1974 Move W1, 2
	1975 Call 0x1C17D6C
	1976 Compare X0, 0
	1977 JumpIfEqual {5143}
	1978 Move W8, [X0+24]
	1979 Compare W8, 0
	1980 JumpIfEqual {5142}
	1981 Move X9, 0xB03000
	1982 Move X9, [X9+3008]
	1983 NotImplemented "Instruction CMP not yet implemented."
	1984 Move X9, [X9]
	1985 Move [X0+32], X9
	1986 Move X8, 0xB03000
	1987 Move X8, [X8+2904]
	1988 Move X8, [X8]
	1989 Move [X0+40], X8
	1990 Move W8, [X22]
	1991 NotImplemented "Instruction CMP not yet implemented."
	1992 Move [X19+264], X0
	1993 Move X0, [X21]
	1994 Move W1, 2
	1995 Call 0x1C17D6C
	1996 Compare X0, 0
	1997 JumpIfEqual {5143}
	1998 Move W8, [X0+24]
	1999 Compare W8, 0
	2000 JumpIfEqual {5142}
	2001 Move X9, 0xB03000
	2002 Move X9, [X9+4000]
	2003 NotImplemented "Instruction CMP not yet implemented."
	2004 Move X9, [X9]
	2005 Move [X0+32], X9
	2006 Move X8, 0xB04000
	2007 Move X8, [X8+504]
	2008 Move X8, [X8]
	2009 Move [X0+40], X8
	2010 Move W8, [X22]
	2011 NotImplemented "Instruction CMP not yet implemented."
	2012 Move [X19+272], X0
	2013 Move X0, [X21]
	2014 Move W1, 2
	2015 Call 0x1C17D6C
	2016 Compare X0, 0
	2017 JumpIfEqual {5143}
	2018 Move W8, [X0+24]
	2019 Compare W8, 0
	2020 JumpIfEqual {5142}
	2021 Move X9, 0xB03000
	2022 Move X9, [X9+3176]
	2023 NotImplemented "Instruction CMP not yet implemented."
	2024 Move X9, [X9]
	2025 Move [X0+32], X9
	2026 Move X8, 0xB04000
	2027 Move X8, [X8+584]
	2028 Move X8, [X8]
	2029 Move [X0+40], X8
	2030 Move W8, [X22]
	2031 NotImplemented "Instruction CMP not yet implemented."
	2032 Move [X19+280], X0
	2033 Move X0, [X21]
	2034 Move W1, 2
	2035 Call 0x1C17D6C
	2036 Compare X0, 0
	2037 JumpIfEqual {5143}
	2038 Move W8, [X0+24]
	2039 Compare W8, 0
	2040 JumpIfEqual {5142}
	2041 Move X9, 0xB03000
	2042 Move X9, [X9+2912]
	2043 NotImplemented "Instruction CMP not yet implemented."
	2044 Move X9, [X9]
	2045 Move [X0+32], X9
	2046 Move X8, 0xB03000
	2047 Move X8, [X8+3328]
	2048 Move X8, [X8]
	2049 Move [X0+40], X8
	2050 Move W8, [X22]
	2051 NotImplemented "Instruction CMP not yet implemented."
	2052 Move [X19+288], X0
	2053 Move X0, [X21]
	2054 Move W1, 2
	2055 Call 0x1C17D6C
	2056 Compare X0, 0
	2057 JumpIfEqual {5143}
	2058 Move W8, [X0+24]
	2059 Compare W8, 0
	2060 JumpIfEqual {5142}
	2061 Move X9, 0xB04000
	2062 Move X9, [X9+224]
	2063 NotImplemented "Instruction CMP not yet implemented."
	2064 Move X9, [X9]
	2065 Move [X0+32], X9
	2066 Move X8, 0xB04000
	2067 Move X8, [X8+264]
	2068 Move X8, [X8]
	2069 Move [X0+40], X8
	2070 Move W8, [X22]
	2071 NotImplemented "Instruction CMP not yet implemented."
	2072 Move [X19+296], X0
	2073 Move X0, [X21]
	2074 Move W1, 2
	2075 Call 0x1C17D6C
	2076 Compare X0, 0
	2077 JumpIfEqual {5143}
	2078 Move W8, [X0+24]
	2079 Compare W8, 0
	2080 JumpIfEqual {5142}
	2081 Move X9, 0xB03000
	2082 Move X9, [X9+3048]
	2083 NotImplemented "Instruction CMP not yet implemented."
	2084 Move X9, [X9]
	2085 Move [X0+32], X9
	2086 Move X8, 0xB03000
	2087 Move X8, [X8+3760]
	2088 Move X8, [X8]
	2089 Move [X0+40], X8
	2090 Move W8, [X22]
	2091 NotImplemented "Instruction CMP not yet implemented."
	2092 Move [X19+304], X0
	2093 Move X0, [X21]
	2094 Move W1, 2
	2095 Call 0x1C17D6C
	2096 Compare X0, 0
	2097 JumpIfEqual {5143}
	2098 Move W8, [X0+24]
	2099 Compare W8, 0
	2100 JumpIfEqual {5142}
	2101 Move X9, 0xB03000
	2102 Move X9, [X9+3272]
	2103 NotImplemented "Instruction CMP not yet implemented."
	2104 Move X9, [X9]
	2105 Move [X0+32], X9
	2106 Move X8, 0xB03000
	2107 Move X8, [X8+3624]
	2108 Move X8, [X8]
	2109 Move [X0+40], X8
	2110 Move W8, [X22]
	2111 NotImplemented "Instruction CMP not yet implemented."
	2112 Move [X19+312], X0
	2113 Move X0, [X21]
	2114 Move W1, 2
	2115 Call 0x1C17D6C
	2116 Compare X0, 0
	2117 JumpIfEqual {5143}
	2118 Move W8, [X0+24]
	2119 Compare W8, 0
	2120 JumpIfEqual {5142}
	2121 Move X9, 0xB03000
	2122 Move X9, [X9+3376]
	2123 NotImplemented "Instruction CMP not yet implemented."
	2124 Move X9, [X9]
	2125 Move [X0+32], X9
	2126 Move X8, 0xB04000
	2127 Move X8, [X8+400]
	2128 Move X8, [X8]
	2129 Move [X0+40], X8
	2130 Move W8, [X22]
	2131 NotImplemented "Instruction CMP not yet implemented."
	2132 Move [X19+320], X0
	2133 Move X0, [X21]
	2134 Move W1, 2
	2135 Call 0x1C17D6C
	2136 Compare X0, 0
	2137 JumpIfEqual {5143}
	2138 Move W8, [X0+24]
	2139 Compare W8, 0
	2140 JumpIfEqual {5142}
	2141 Move X9, 0xB03000
	2142 Move X9, [X9+3304]
	2143 NotImplemented "Instruction CMP not yet implemented."
	2144 Move X9, [X9]
	2145 Move [X0+32], X9
	2146 Move X8, 0xB03000
	2147 Move X8, [X8+3080]
	2148 Move X8, [X8]
	2149 Move [X0+40], X8
	2150 Move W8, [X22]
	2151 NotImplemented "Instruction CMP not yet implemented."
	2152 Move [X19+328], X0
	2153 Move X0, [X21]
	2154 Move W1, 2
	2155 Call 0x1C17D6C
	2156 Compare X0, 0
	2157 JumpIfEqual {5143}
	2158 Move W8, [X0+24]
	2159 Compare W8, 0
	2160 JumpIfEqual {5142}
	2161 Move X9, 0xB03000
	2162 Move X9, [X9+2776]
	2163 NotImplemented "Instruction CMP not yet implemented."
	2164 Move X9, [X9]
	2165 Move [X0+32], X9
	2166 Move X20, 0xB03000
	2167 Move X20, [X20+3120]
	2168 Move X8, [X20]
	2169 Move [X0+40], X8
	2170 Move W8, [X22]
	2171 NotImplemented "Instruction CMP not yet implemented."
	2172 Move [X19+336], X0
	2173 Move X0, [X21]
	2174 Move W1, 2
	2175 Call 0x1C17D6C
	2176 Compare X0, 0
	2177 JumpIfEqual {5143}
	2178 Move W8, [X0+24]
	2179 Compare W8, 0
	2180 JumpIfEqual {5142}
	2181 Move X9, 0xB03000
	2182 Move X9, [X9+3152]
	2183 NotImplemented "Instruction CMP not yet implemented."
	2184 Move X9, [X9]
	2185 Move [X0+32], X9
	2186 Move X8, 0xB04000
	2187 Move X8, [X8+136]
	2188 Move X8, [X8]
	2189 Move [X0+40], X8
	2190 Move W8, [X22]
	2191 NotImplemented "Instruction CMP not yet implemented."
	2192 Move [X19+344], X0
	2193 Move X0, [X21]
	2194 Move W1, 2
	2195 Call 0x1C17D6C
	2196 Compare X0, 0
	2197 JumpIfEqual {5143}
	2198 Move W8, [X0+24]
	2199 Compare W8, 0
	2200 JumpIfEqual {5142}
	2201 Move X9, 0xB04000
	2202 Move X9, [X9+680]
	2203 NotImplemented "Instruction CMP not yet implemented."
	2204 Move X9, [X9]
	2205 Move [X0+32], X9
	2206 Move X8, [X20]
	2207 Move [X0+40], X8
	2208 Move W8, [X22]
	2209 NotImplemented "Instruction CMP not yet implemented."
	2210 Move [X19+352], X0
	2211 Move X0, [X21]
	2212 Move W1, 2
	2213 Call 0x1C17D6C
	2214 Compare X0, 0
	2215 JumpIfEqual {5143}
	2216 Move W8, [X0+24]
	2217 Compare W8, 0
	2218 JumpIfEqual {5142}
	2219 Move X9, 0xB03000
	2220 Move X9, [X9+3416]
	2221 NotImplemented "Instruction CMP not yet implemented."
	2222 Move X9, [X9]
	2223 Move [X0+32], X9
	2224 Move X8, 0xB04000
	2225 Move X8, [X8+312]
	2226 Move X8, [X8]
	2227 Move [X0+40], X8
	2228 Move W8, [X22]
	2229 NotImplemented "Instruction CMP not yet implemented."
	2230 Move [X19+360], X0
	2231 Move X0, [X21]
	2232 Move W1, 2
	2233 Call 0x1C17D6C
	2234 Compare X0, 0
	2235 JumpIfEqual {5143}
	2236 Move W8, [X0+24]
	2237 Compare W8, 0
	2238 JumpIfEqual {5142}
	2239 Move X9, 0xB03000
	2240 Move X9, [X9+2752]
	2241 NotImplemented "Instruction CMP not yet implemented."
	2242 Move X9, [X9]
	2243 Move [X0+32], X9
	2244 Move X8, 0xB03000
	2245 Move X8, [X8+4048]
	2246 Move X8, [X8]
	2247 Move [X0+40], X8
	2248 Move W8, [X22]
	2249 NotImplemented "Instruction CMP not yet implemented."
	2250 Move [X19+368], X0
	2251 Move X0, [X21]
	2252 Move W1, 2
	2253 Call 0x1C17D6C
	2254 Compare X0, 0
	2255 JumpIfEqual {5143}
	2256 Move W8, [X0+24]
	2257 Compare W8, 0
	2258 JumpIfEqual {5142}
	2259 Move X9, 0xB03000
	2260 Move X9, [X9+3584]
	2261 NotImplemented "Instruction CMP not yet implemented."
	2262 Move X9, [X9]
	2263 Move [X0+32], X9
	2264 Move X8, 0xB03000
	2265 Move X8, [X8+2632]
	2266 Move X8, [X8]
	2267 Move [X0+40], X8
	2268 Move W8, [X22]
	2269 NotImplemented "Instruction CMP not yet implemented."
	2270 Move [X19+376], X0
	2271 Move X0, [X21]
	2272 Move W1, 2
	2273 Call 0x1C17D6C
	2274 Compare X0, 0
	2275 JumpIfEqual {5143}
	2276 Move W8, [X0+24]
	2277 Compare W8, 0
	2278 JumpIfEqual {5142}
	2279 Move X9, 0xB03000
	2280 Move X9, [X9+3064]
	2281 NotImplemented "Instruction CMP not yet implemented."
	2282 Move X9, [X9]
	2283 Move [X0+32], X9
	2284 Move X8, 0xB03000
	2285 Move X8, [X8+3904]
	2286 Move X8, [X8]
	2287 Move [X0+40], X8
	2288 Move W8, [X22]
	2289 NotImplemented "Instruction CMP not yet implemented."
	2290 Move [X19+384], X0
	2291 Move X0, [X21]
	2292 Move W1, 2
	2293 Call 0x1C17D6C
	2294 Compare X0, 0
	2295 JumpIfEqual {5143}
	2296 Move W8, [X0+24]
	2297 Compare W8, 0
	2298 JumpIfEqual {5142}
	2299 Move X9, 0xB04000
	2300 Move X9, [X9+216]
	2301 NotImplemented "Instruction CMP not yet implemented."
	2302 Move X9, [X9]
	2303 Move [X0+32], X9
	2304 Move X8, 0xB04000
	2305 Move X8, [X8+656]
	2306 Move X8, [X8]
	2307 Move [X0+40], X8
	2308 Move W8, [X22]
	2309 NotImplemented "Instruction CMP not yet implemented."
	2310 Move [X19+392], X0
	2311 Move X0, [X21]
	2312 Move W1, 2
	2313 Call 0x1C17D6C
	2314 Compare X0, 0
	2315 JumpIfEqual {5143}
	2316 Move W8, [X0+24]
	2317 Compare W8, 0
	2318 JumpIfEqual {5142}
	2319 Move X9, 0xB03000
	2320 Move X9, [X9+3928]
	2321 NotImplemented "Instruction CMP not yet implemented."
	2322 Move X9, [X9]
	2323 Move [X0+32], X9
	2324 Move X8, 0xB03000
	2325 Move X8, [X8+2928]
	2326 Move X8, [X8]
	2327 Move [X0+40], X8
	2328 Move W8, [X22]
	2329 NotImplemented "Instruction CMP not yet implemented."
	2330 Move [X19+400], X0
	2331 Move X0, [X21]
	2332 Move W1, 2
	2333 Call 0x1C17D6C
	2334 Compare X0, 0
	2335 JumpIfEqual {5143}
	2336 Move W8, [X0+24]
	2337 Compare W8, 0
	2338 JumpIfEqual {5142}
	2339 Move X9, 0xB04000
	2340 Move X9, [X9+544]
	2341 NotImplemented "Instruction CMP not yet implemented."
	2342 Move X9, [X9]
	2343 Move [X0+32], X9
	2344 Move X8, 0xB03000
	2345 Move X8, [X8+3944]
	2346 Move X8, [X8]
	2347 Move [X0+40], X8
	2348 Move W8, [X22]
	2349 NotImplemented "Instruction CMP not yet implemented."
	2350 Move [X19+408], X0
	2351 Move X0, [X21]
	2352 Move W1, 2
	2353 Call 0x1C17D6C
	2354 Compare X0, 0
	2355 JumpIfEqual {5143}
	2356 Move W8, [X0+24]
	2357 Compare W8, 0
	2358 JumpIfEqual {5142}
	2359 Move X9, 0xB03000
	2360 Move X9, [X9+4072]
	2361 NotImplemented "Instruction CMP not yet implemented."
	2362 Move X9, [X9]
	2363 Move [X0+32], X9
	2364 Move X8, 0xB03000
	2365 Move X8, [X8+2936]
	2366 Move X8, [X8]
	2367 Move [X0+40], X8
	2368 Move W8, [X22]
	2369 NotImplemented "Instruction CMP not yet implemented."
	2370 Move [X19+416], X0
	2371 Move X0, [X21]
	2372 Move W1, 2
	2373 Call 0x1C17D6C
	2374 Compare X0, 0
	2375 JumpIfEqual {5143}
	2376 Move W8, [X0+24]
	2377 Compare W8, 0
	2378 JumpIfEqual {5142}
	2379 Move X9, 0xB03000
	2380 Move X9, [X9+3848]
	2381 NotImplemented "Instruction CMP not yet implemented."
	2382 Move X9, [X9]
	2383 Move [X0+32], X9
	2384 Move X8, 0xB03000
	2385 Move X8, [X8+1176]
	2386 Move X8, [X8]
	2387 Move [X0+40], X8
	2388 Move W8, [X22]
	2389 NotImplemented "Instruction CMP not yet implemented."
	2390 Move [X19+424], X0
	2391 Move X0, [X21]
	2392 Move W1, 2
	2393 Call 0x1C17D6C
	2394 Compare X0, 0
	2395 JumpIfEqual {5143}
	2396 Move W8, [X0+24]
	2397 Compare W8, 0
	2398 JumpIfEqual {5142}
	2399 Move X9, 0xB03000
	2400 Move X9, [X9+3576]
	2401 NotImplemented "Instruction CMP not yet implemented."
	2402 Move X9, [X9]
	2403 Move [X0+32], X9
	2404 Move X8, 0xB04000
	2405 Move X8, [X8+472]
	2406 Move X8, [X8]
	2407 Move [X0+40], X8
	2408 Move W8, [X22]
	2409 NotImplemented "Instruction CMP not yet implemented."
	2410 Move [X19+432], X0
	2411 Move X0, [X21]
	2412 Move W1, 2
	2413 Call 0x1C17D6C
	2414 Compare X0, 0
	2415 JumpIfEqual {5143}
	2416 Move W8, [X0+24]
	2417 Compare W8, 0
	2418 JumpIfEqual {5142}
	2419 Move X9, 0xB03000
	2420 Move X9, [X9+2552]
	2421 NotImplemented "Instruction CMP not yet implemented."
	2422 Move X9, [X9]
	2423 Move [X0+32], X9
	2424 Move X8, 0xB03000
	2425 Move X8, [X8+3880]
	2426 Move X8, [X8]
	2427 Move [X0+40], X8
	2428 Move W8, [X22]
	2429 NotImplemented "Instruction CMP not yet implemented."
	2430 Move [X19+440], X0
	2431 Move X0, [X21]
	2432 Move W1, 2
	2433 Call 0x1C17D6C
	2434 Compare X0, 0
	2435 JumpIfEqual {5143}
	2436 Move W8, [X0+24]
	2437 Compare W8, 0
	2438 JumpIfEqual {5142}
	2439 Move X9, 0xB03000
	2440 Move X9, [X9+3224]
	2441 NotImplemented "Instruction CMP not yet implemented."
	2442 Move X9, [X9]
	2443 Move [X0+32], X9
	2444 Move X8, 0xB03000
	2445 Move X8, [X8+3256]
	2446 Move X8, [X8]
	2447 Move [X0+40], X8
	2448 Move W8, [X22]
	2449 NotImplemented "Instruction CMP not yet implemented."
	2450 Move [X19+448], X0
	2451 Move X0, [X21]
	2452 Move W1, 2
	2453 Call 0x1C17D6C
	2454 Compare X0, 0
	2455 JumpIfEqual {5143}
	2456 Move W8, [X0+24]
	2457 Compare W8, 0
	2458 JumpIfEqual {5142}
	2459 Move X9, 0xB03000
	2460 Move X9, [X9+3960]
	2461 NotImplemented "Instruction CMP not yet implemented."
	2462 Move X9, [X9]
	2463 Move [X0+32], X9
	2464 Move X8, 0xB04000
	2465 Move X8, [X8+496]
	2466 Move X8, [X8]
	2467 Move [X0+40], X8
	2468 Move W8, [X22]
	2469 NotImplemented "Instruction CMP not yet implemented."
	2470 Move [X19+456], X0
	2471 Move X0, [X21]
	2472 Move W1, 2
	2473 Call 0x1C17D6C
	2474 Compare X0, 0
	2475 JumpIfEqual {5143}
	2476 Move W8, [X0+24]
	2477 Compare W8, 0
	2478 JumpIfEqual {5142}
	2479 Move X9, 0xB04000
	2480 Move X9, [X9+608]
	2481 NotImplemented "Instruction CMP not yet implemented."
	2482 Move X9, [X9]
	2483 Move [X0+32], X9
	2484 Move X8, 0xB03000
	2485 Move X8, [X8+2872]
	2486 Move X8, [X8]
	2487 Move [X0+40], X8
	2488 Move W8, [X22]
	2489 NotImplemented "Instruction CMP not yet implemented."
	2490 Move [X19+464], X0
	2491 Move X0, [X21]
	2492 Move W1, 2
	2493 Call 0x1C17D6C
	2494 Compare X0, 0
	2495 JumpIfEqual {5143}
	2496 Move W8, [X0+24]
	2497 Compare W8, 0
	2498 JumpIfEqual {5142}
	2499 Move X9, 0xB04000
	2500 Move X9, [X9+480]
	2501 NotImplemented "Instruction CMP not yet implemented."
	2502 Move X9, [X9]
	2503 Move [X0+32], X9
	2504 Move X8, 0xB04000
	2505 Move X8, [X8+512]
	2506 Move X8, [X8]
	2507 Move [X0+40], X8
	2508 Move W8, [X22]
	2509 NotImplemented "Instruction CMP not yet implemented."
	2510 Move [X19+472], X0
	2511 Move X0, [X21]
	2512 Move W1, 2
	2513 Call 0x1C17D6C
	2514 Compare X0, 0
	2515 JumpIfEqual {5143}
	2516 Move W8, [X0+24]
	2517 Compare W8, 0
	2518 JumpIfEqual {5142}
	2519 Move X9, 0xB03000
	2520 Move X9, [X9+3544]
	2521 NotImplemented "Instruction CMP not yet implemented."
	2522 Move X9, [X9]
	2523 Move [X0+32], X9
	2524 Move X8, 0xB04000
	2525 Move X8, [X8+80]
	2526 Move X8, [X8]
	2527 Move [X0+40], X8
	2528 Move W8, [X22]
	2529 NotImplemented "Instruction CMP not yet implemented."
	2530 Move [X19+480], X0
	2531 Move X0, [X21]
	2532 Move W1, 2
	2533 Call 0x1C17D6C
	2534 Compare X0, 0
	2535 JumpIfEqual {5143}
	2536 Move W8, [X0+24]
	2537 Compare W8, 0
	2538 JumpIfEqual {5142}
	2539 Move X9, 0xB04000
	2540 Move X9, [X9+432]
	2541 NotImplemented "Instruction CMP not yet implemented."
	2542 Move X9, [X9]
	2543 Move [X0+32], X9
	2544 Move X8, 0xB03000
	2545 Move X8, [X8+2856]
	2546 Move X8, [X8]
	2547 Move [X0+40], X8
	2548 Move W8, [X22]
	2549 NotImplemented "Instruction CMP not yet implemented."
	2550 Move [X19+488], X0
	2551 Move X0, [X21]
	2552 Move W1, 2
	2553 Call 0x1C17D6C
	2554 Compare X0, 0
	2555 JumpIfEqual {5143}
	2556 Move W8, [X0+24]
	2557 Compare W8, 0
	2558 JumpIfEqual {5142}
	2559 Move X9, 0xB03000
	2560 Move X9, [X9+2864]
	2561 NotImplemented "Instruction CMP not yet implemented."
	2562 Move X9, [X9]
	2563 Move [X0+32], X9
	2564 Move X8, 0xB03000
	2565 Move X8, [X8+3352]
	2566 Move X8, [X8]
	2567 Move [X0+40], X8
	2568 Move W8, [X22]
	2569 NotImplemented "Instruction CMP not yet implemented."
	2570 Move [X19+496], X0
	2571 Move X0, [X21]
	2572 Move W1, 2
	2573 Call 0x1C17D6C
	2574 Compare X0, 0
	2575 JumpIfEqual {5143}
	2576 Move W8, [X0+24]
	2577 Compare W8, 0
	2578 JumpIfEqual {5142}
	2579 Move X9, 0xB03000
	2580 Move X9, [X9+3528]
	2581 NotImplemented "Instruction CMP not yet implemented."
	2582 Move X9, [X9]
	2583 Move [X0+32], X9
	2584 Move X8, 0xB03000
	2585 Move X8, [X8+2712]
	2586 Move X8, [X8]
	2587 Move [X0+40], X8
	2588 Move W8, [X22]
	2589 NotImplemented "Instruction CMP not yet implemented."
	2590 Move [X19+504], X0
	2591 Move X0, [X21]
	2592 Move W1, 2
	2593 Call 0x1C17D6C
	2594 Compare X0, 0
	2595 JumpIfEqual {5143}
	2596 Move W8, [X0+24]
	2597 Compare W8, 0
	2598 JumpIfEqual {5142}
	2599 Move X9, 0xB03000
	2600 Move X9, [X9+4064]
	2601 NotImplemented "Instruction CMP not yet implemented."
	2602 Move X9, [X9]
	2603 Move [X0+32], X9
	2604 Move X8, 0xB03000
	2605 Move X8, [X8+3968]
	2606 Move X8, [X8]
	2607 Move [X0+40], X8
	2608 Move W8, [X22]
	2609 NotImplemented "Instruction CMP not yet implemented."
	2610 Move [X19+512], X0
	2611 Move X0, [X21]
	2612 Move W1, 2
	2613 Call 0x1C17D6C
	2614 Compare X0, 0
	2615 JumpIfEqual {5143}
	2616 Move W8, [X0+24]
	2617 Compare W8, 0
	2618 JumpIfEqual {5142}
	2619 Move X9, 0xB03000
	2620 Move X9, [X9+3408]
	2621 NotImplemented "Instruction CMP not yet implemented."
	2622 Move X9, [X9]
	2623 Move [X0+32], X9
	2624 Move X8, 0xB03000
	2625 Move X8, [X8+3696]
	2626 Move X8, [X8]
	2627 Move [X0+40], X8
	2628 Move W8, [X22]
	2629 NotImplemented "Instruction CMP not yet implemented."
	2630 Move [X19+520], X0
	2631 Move X0, [X21]
	2632 Move W1, 2
	2633 Call 0x1C17D6C
	2634 Compare X0, 0
	2635 JumpIfEqual {5143}
	2636 Move W8, [X0+24]
	2637 Compare W8, 0
	2638 JumpIfEqual {5142}
	2639 Move X9, 0xB03000
	2640 Move X9, [X9+3056]
	2641 NotImplemented "Instruction CMP not yet implemented."
	2642 Move X9, [X9]
	2643 Move [X0+32], X9
	2644 Move X8, 0xB03000
	2645 Move X8, [X8+2800]
	2646 Move X8, [X8]
	2647 Move [X0+40], X8
	2648 Move W8, [X22]
	2649 NotImplemented "Instruction CMP not yet implemented."
	2650 Move [X19+528], X0
	2651 Move X0, [X21]
	2652 Move W1, 2
	2653 Call 0x1C17D6C
	2654 Compare X0, 0
	2655 JumpIfEqual {5143}
	2656 Move W8, [X0+24]
	2657 Compare W8, 0
	2658 JumpIfEqual {5142}
	2659 Move X9, 0xB03000
	2660 Move X9, [X9+3648]
	2661 NotImplemented "Instruction CMP not yet implemented."
	2662 Move X9, [X9]
	2663 Move [X0+32], X9
	2664 Move X8, 0xB03000
	2665 Move X8, [X8+2624]
	2666 Move X8, [X8]
	2667 Move [X0+40], X8
	2668 Move W8, [X22]
	2669 NotImplemented "Instruction CMP not yet implemented."
	2670 Move [X19+536], X0
	2671 Move X0, [X21]
	2672 Move W1, 2
	2673 Call 0x1C17D6C
	2674 Compare X0, 0
	2675 JumpIfEqual {5143}
	2676 Move W8, [X0+24]
	2677 Compare W8, 0
	2678 JumpIfEqual {5142}
	2679 Move X9, 0xB03000
	2680 Move X9, [X9+2944]
	2681 NotImplemented "Instruction CMP not yet implemented."
	2682 Move X9, [X9]
	2683 Move [X0+32], X9
	2684 Move X8, 0xB04000
	2685 Move X8, [X8+648]
	2686 Move X8, [X8]
	2687 Move [X0+40], X8
	2688 Move W8, [X22]
	2689 NotImplemented "Instruction CMP not yet implemented."
	2690 Move [X19+544], X0
	2691 Move X0, [X21]
	2692 Move W1, 2
	2693 Call 0x1C17D6C
	2694 Compare X0, 0
	2695 JumpIfEqual {5143}
	2696 Move W8, [X0+24]
	2697 Compare W8, 0
	2698 JumpIfEqual {5142}
	2699 Move X9, 0xB04000
	2700 Move X9, [X9+672]
	2701 NotImplemented "Instruction CMP not yet implemented."
	2702 Move X9, [X9]
	2703 Move [X0+32], X9
	2704 Move X8, 0xB03000
	2705 Move X8, [X8+3920]
	2706 Move X8, [X8]
	2707 Move [X0+40], X8
	2708 Move W8, [X22]
	2709 NotImplemented "Instruction CMP not yet implemented."
	2710 Move [X19+552], X0
	2711 Move X0, [X21]
	2712 Move W1, 2
	2713 Call 0x1C17D6C
	2714 Compare X0, 0
	2715 JumpIfEqual {5143}
	2716 Move W8, [X0+24]
	2717 Compare W8, 0
	2718 JumpIfEqual {5142}
	2719 Move X9, 0xB04000
	2720 Move X9, [X9+152]
	2721 NotImplemented "Instruction CMP not yet implemented."
	2722 Move X9, [X9]
	2723 Move [X0+32], X9
	2724 Move X8, 0xB03000
	2725 Move X8, [X8+3640]
	2726 Move X8, [X8]
	2727 Move [X0+40], X8
	2728 Move W8, [X22]
	2729 NotImplemented "Instruction CMP not yet implemented."
	2730 Move [X19+560], X0
	2731 Move X0, [X21]
	2732 Move W1, 2
	2733 Call 0x1C17D6C
	2734 Compare X0, 0
	2735 JumpIfEqual {5143}
	2736 Move W8, [X0+24]
	2737 Compare W8, 0
	2738 JumpIfEqual {5142}
	2739 Move X9, 0xB04000
	2740 Move X9, [X9+128]
	2741 NotImplemented "Instruction CMP not yet implemented."
	2742 Move X9, [X9]
	2743 Move [X0+32], X9
	2744 Move X8, 0xB03000
	2745 Move X8, [X8+4088]
	2746 Move X8, [X8]
	2747 Move [X0+40], X8
	2748 Move W8, [X22]
	2749 NotImplemented "Instruction CMP not yet implemented."
	2750 Move [X19+568], X0
	2751 Move X0, [X21]
	2752 Move W1, 2
	2753 Call 0x1C17D6C
	2754 Compare X0, 0
	2755 JumpIfEqual {5143}
	2756 Move W8, [X0+24]
	2757 Compare W8, 0
	2758 JumpIfEqual {5142}
	2759 Move X9, 0xB03000
	2760 Move X9, [X9+3864]
	2761 NotImplemented "Instruction CMP not yet implemented."
	2762 Move X9, [X9]
	2763 Move [X0+32], X9
	2764 Move X8, 0xB03000
	2765 Move X8, [X8+3216]
	2766 Move X8, [X8]
	2767 Move [X0+40], X8
	2768 Move W8, [X22]
	2769 NotImplemented "Instruction CMP not yet implemented."
	2770 Move [X19+576], X0
	2771 Move X0, [X21]
	2772 Move W1, 2
	2773 Call 0x1C17D6C
	2774 Compare X0, 0
	2775 JumpIfEqual {5143}
	2776 Move W8, [X0+24]
	2777 Compare W8, 0
	2778 JumpIfEqual {5142}
	2779 Move X9, 0xB03000
	2780 Move X9, [X9+2984]
	2781 NotImplemented "Instruction CMP not yet implemented."
	2782 Move X9, [X9]
	2783 Move [X0+32], X9
	2784 Move X8, 0xB03000
	2785 Move X8, [X8+3480]
	2786 Move X8, [X8]
	2787 Move [X0+40], X8
	2788 Move W8, [X22]
	2789 NotImplemented "Instruction CMP not yet implemented."
	2790 Move [X19+584], X0
	2791 Move X0, [X21]
	2792 Move W1, 2
	2793 Call 0x1C17D6C
	2794 Compare X0, 0
	2795 JumpIfEqual {5143}
	2796 Move W8, [X0+24]
	2797 Compare W8, 0
	2798 JumpIfEqual {5142}
	2799 Move X9, 0xB04000
	2800 Move X9, [X9+368]
	2801 NotImplemented "Instruction CMP not yet implemented."
	2802 Move X9, [X9]
	2803 Move [X0+32], X9
	2804 Move X8, 0xB03000
	2805 Move X8, [X8+3872]
	2806 Move X8, [X8]
	2807 Move [X0+40], X8
	2808 Move W8, [X22]
	2809 NotImplemented "Instruction CMP not yet implemented."
	2810 Move [X19+592], X0
	2811 Move X0, [X21]
	2812 Move W1, 2
	2813 Call 0x1C17D6C
	2814 Compare X0, 0
	2815 JumpIfEqual {5143}
	2816 Move W8, [X0+24]
	2817 Compare W8, 0
	2818 JumpIfEqual {5142}
	2819 Move X9, 0xB03000
	2820 Move X9, [X9+3856]
	2821 NotImplemented "Instruction CMP not yet implemented."
	2822 Move X9, [X9]
	2823 Move [X0+32], X9
	2824 Move X8, 0xB03000
	2825 Move X8, [X8+3440]
	2826 Move X8, [X8]
	2827 Move [X0+40], X8
	2828 Move W8, [X22]
	2829 NotImplemented "Instruction CMP not yet implemented."
	2830 Move [X19+600], X0
	2831 Move X0, [X21]
	2832 Move W1, 2
	2833 Call 0x1C17D6C
	2834 Compare X0, 0
	2835 JumpIfEqual {5143}
	2836 Move W8, [X0+24]
	2837 Compare W8, 0
	2838 JumpIfEqual {5142}
	2839 Move X9, 0xB03000
	2840 Move X9, [X9+2696]
	2841 NotImplemented "Instruction CMP not yet implemented."
	2842 Move X9, [X9]
	2843 Move [X0+32], X9
	2844 Move X8, 0xB04000
	2845 Move X8, [X8+72]
	2846 Move X8, [X8]
	2847 Move [X0+40], X8
	2848 Move W8, [X22]
	2849 NotImplemented "Instruction CMP not yet implemented."
	2850 Move [X19+608], X0
	2851 Move X0, [X21]
	2852 Move W1, 2
	2853 Call 0x1C17D6C
	2854 Compare X0, 0
	2855 JumpIfEqual {5143}
	2856 Move W8, [X0+24]
	2857 Compare W8, 0
	2858 JumpIfEqual {5142}
	2859 Move X9, 0xB03000
	2860 Move X9, [X9+3160]
	2861 NotImplemented "Instruction CMP not yet implemented."
	2862 Move X9, [X9]
	2863 Move [X0+32], X9
	2864 Move X8, 0xB02000
	2865 Move X8, [X8+4008]
	2866 Move X8, [X8]
	2867 Move [X0+40], X8
	2868 Move W8, [X22]
	2869 NotImplemented "Instruction CMP not yet implemented."
	2870 Move [X19+616], X0
	2871 Move X0, [X21]
	2872 Move W1, 2
	2873 Call 0x1C17D6C
	2874 Compare X0, 0
	2875 JumpIfEqual {5143}
	2876 Move W8, [X0+24]
	2877 Compare W8, 0
	2878 JumpIfEqual {5142}
	2879 Move X9, 0xB02000
	2880 Move X9, [X9+3368]
	2881 NotImplemented "Instruction CMP not yet implemented."
	2882 Move X9, [X9]
	2883 Move [X0+32], X9
	2884 Move X8, 0xB02000
	2885 Move X8, [X8+3888]
	2886 Move X8, [X8]
	2887 Move [X0+40], X8
	2888 Move W8, [X22]
	2889 NotImplemented "Instruction CMP not yet implemented."
	2890 Move [X19+624], X0
	2891 Move X0, [X21]
	2892 Move W1, 2
	2893 Call 0x1C17D6C
	2894 Compare X0, 0
	2895 JumpIfEqual {5143}
	2896 Move W8, [X0+24]
	2897 Compare W8, 0
	2898 JumpIfEqual {5142}
	2899 Move X9, 0xB02000
	2900 Move X9, [X9+3200]
	2901 NotImplemented "Instruction CMP not yet implemented."
	2902 Move X9, [X9]
	2903 Move [X0+32], X9
	2904 Move X8, 0xB03000
	2905 Move X8, [X8+280]
	2906 Move X8, [X8]
	2907 Move [X0+40], X8
	2908 Move W8, [X22]
	2909 NotImplemented "Instruction CMP not yet implemented."
	2910 Move [X19+632], X0
	2911 Move X0, [X21]
	2912 Move W1, 2
	2913 Call 0x1C17D6C
	2914 Compare X0, 0
	2915 JumpIfEqual {5143}
	2916 Move W8, [X0+24]
	2917 Compare W8, 0
	2918 JumpIfEqual {5142}
	2919 Move X9, 0xB03000
	2920 Move X9, [X9+384]
	2921 NotImplemented "Instruction CMP not yet implemented."
	2922 Move X9, [X9]
	2923 Move [X0+32], X9
	2924 Move X8, 0xB03000
	2925 Move X8, [X8+640]
	2926 Move X8, [X8]
	2927 Move [X0+40], X8
	2928 Move W8, [X22]
	2929 NotImplemented "Instruction CMP not yet implemented."
	2930 Move [X19+640], X0
	2931 Move X0, [X21]
	2932 Move W1, 2
	2933 Call 0x1C17D6C
	2934 Compare X0, 0
	2935 JumpIfEqual {5143}
	2936 Move W8, [X0+24]
	2937 Compare W8, 0
	2938 JumpIfEqual {5142}
	2939 Move X9, 0xB02000
	2940 Move X9, [X9+3736]
	2941 NotImplemented "Instruction CMP not yet implemented."
	2942 Move X9, [X9]
	2943 Move [X0+32], X9
	2944 Move X8, 0xB02000
	2945 Move X8, [X8+3616]
	2946 Move X8, [X8]
	2947 Move [X0+40], X8
	2948 Move W8, [X22]
	2949 NotImplemented "Instruction CMP not yet implemented."
	2950 Move [X19+648], X0
	2951 Move X0, [X21]
	2952 Move W1, 2
	2953 Call 0x1C17D6C
	2954 Compare X0, 0
	2955 JumpIfEqual {5143}
	2956 Move W8, [X0+24]
	2957 Compare W8, 0
	2958 JumpIfEqual {5142}
	2959 Move X9, 0xB03000
	2960 Move X9, [X9+16]
	2961 NotImplemented "Instruction CMP not yet implemented."
	2962 Move X9, [X9]
	2963 Move [X0+32], X9
	2964 Move X8, 0xB03000
	2965 Move X8, [X8+144]
	2966 Move X8, [X8]
	2967 Move [X0+40], X8
	2968 Move W8, [X22]
	2969 NotImplemented "Instruction CMP not yet implemented."
	2970 Move [X19+656], X0
	2971 Move X0, [X21]
	2972 Move W1, 2
	2973 Call 0x1C17D6C
	2974 Compare X0, 0
	2975 JumpIfEqual {5143}
	2976 Move W8, [X0+24]
	2977 Compare W8, 0
	2978 JumpIfEqual {5142}
	2979 Move X9, 0xB03000
	2980 Move X9, [X9+320]
	2981 NotImplemented "Instruction CMP not yet implemented."
	2982 Move X9, [X9]
	2983 Move [X0+32], X9
	2984 Move X8, 0xB02000
	2985 Move X8, [X8+2656]
	2986 Move X8, [X8]
	2987 Move [X0+40], X8
	2988 Move W8, [X22]
	2989 NotImplemented "Instruction CMP not yet implemented."
	2990 Move [X19+664], X0
	2991 Move X0, [X21]
	2992 Move W1, 2
	2993 Call 0x1C17D6C
	2994 Compare X0, 0
	2995 JumpIfEqual {5143}
	2996 Move W8, [X0+24]
	2997 Compare W8, 0
	2998 JumpIfEqual {5142}
	2999 Move X9, 0xB02000
	3000 Move X9, [X9+3664]
	3001 NotImplemented "Instruction CMP not yet implemented."
	3002 Move X9, [X9]
	3003 Move [X0+32], X9
	3004 Move X8, 0xB02000
	3005 Move X8, [X8+2896]
	3006 Move X8, [X8]
	3007 Move [X0+40], X8
	3008 Move W8, [X22]
	3009 NotImplemented "Instruction CMP not yet implemented."
	3010 Move [X19+672], X0
	3011 Move X0, [X21]
	3012 Move W1, 2
	3013 Call 0x1C17D6C
	3014 Compare X0, 0
	3015 JumpIfEqual {5143}
	3016 Move W8, [X0+24]
	3017 Compare W8, 0
	3018 JumpIfEqual {5142}
	3019 Move X9, 0xB02000
	3020 Move X9, [X9+3448]
	3021 NotImplemented "Instruction CMP not yet implemented."
	3022 Move X9, [X9]
	3023 Move [X0+32], X9
	3024 Move X8, 0xB02000
	3025 Move X8, [X8+3000]
	3026 Move X8, [X8]
	3027 Move [X0+40], X8
	3028 Move W8, [X22]
	3029 NotImplemented "Instruction CMP not yet implemented."
	3030 Move [X19+680], X0
	3031 Move X0, [X21]
	3032 Move W1, 2
	3033 Call 0x1C17D6C
	3034 Compare X0, 0
	3035 JumpIfEqual {5143}
	3036 Move W8, [X0+24]
	3037 Compare W8, 0
	3038 JumpIfEqual {5142}
	3039 Move X9, 0xB03000
	3040 Move X9, [X9+64]
	3041 NotImplemented "Instruction CMP not yet implemented."
	3042 Move X9, [X9]
	3043 Move [X0+32], X9
	3044 Move X8, 0xB03000
	3045 Move X8, [X8+664]
	3046 Move X8, [X8]
	3047 Move [X0+40], X8
	3048 Move W8, [X22]
	3049 NotImplemented "Instruction CMP not yet implemented."
	3050 Move [X19+688], X0
	3051 Move X0, [X21]
	3052 Move W1, 2
	3053 Call 0x1C17D6C
	3054 Compare X0, 0
	3055 JumpIfEqual {5143}
	3056 Move W8, [X0+24]
	3057 Compare W8, 0
	3058 JumpIfEqual {5142}
	3059 Move X9, 0xB03000
	3060 Move X9, [X9+248]
	3061 NotImplemented "Instruction CMP not yet implemented."
	3062 Move X9, [X9]
	3063 Move [X0+32], X9
	3064 Move X20, 0xB02000
	3065 Move X20, [X20+2592]
	3066 Move X8, [X20]
	3067 Move [X0+40], X8
	3068 Move W8, [X22]
	3069 NotImplemented "Instruction CMP not yet implemented."
	3070 Move [X19+696], X0
	3071 Move X0, [X21]
	3072 Move W1, 2
	3073 Call 0x1C17D6C
	3074 Compare X0, 0
	3075 JumpIfEqual {5143}
	3076 Move W8, [X0+24]
	3077 Compare W8, 0
	3078 JumpIfEqual {5142}
	3079 Move X9, 0xB03000
	3080 Move X9, [X9+592]
	3081 NotImplemented "Instruction CMP not yet implemented."
	3082 Move X9, [X9]
	3083 Move [X0+32], X9
	3084 Move X8, [X20]
	3085 Move [X0+40], X8
	3086 Move W8, [X22]
	3087 NotImplemented "Instruction CMP not yet implemented."
	3088 Move [X19+704], X0
	3089 Move X0, [X21]
	3090 Move W1, 2
	3091 Call 0x1C17D6C
	3092 Compare X0, 0
	3093 JumpIfEqual {5143}
	3094 Move W8, [X0+24]
	3095 Compare W8, 0
	3096 JumpIfEqual {5142}
	3097 Move X9, 0xB02000
	3098 Move X9, [X9+4056]
	3099 NotImplemented "Instruction CMP not yet implemented."
	3100 Move X9, [X9]
	3101 Move [X0+32], X9
	3102 Move X8, 0xB02000
	3103 Move X8, [X8+3208]
	3104 Move X8, [X8]
	3105 Move [X0+40], X8
	3106 Move W8, [X22]
	3107 NotImplemented "Instruction CMP not yet implemented."
	3108 Move [X19+712], X0
	3109 Move X0, [X21]
	3110 Move W1, 2
	3111 Call 0x1C17D6C
	3112 Compare X0, 0
	3113 JumpIfEqual {5143}
	3114 Move W8, [X0+24]
	3115 Compare W8, 0
	3116 JumpIfEqual {5142}
	3117 Move X9, 0xB02000
	3118 Move X9, [X9+3784]
	3119 NotImplemented "Instruction CMP not yet implemented."
	3120 Move X9, [X9]
	3121 Move [X0+32], X9
	3122 Move X8, 0xB02000
	3123 Move X8, [X8+3232]
	3124 Move X8, [X8]
	3125 Move [X0+40], X8
	3126 Move W8, [X22]
	3127 NotImplemented "Instruction CMP not yet implemented."
	3128 Move [X19+720], X0
	3129 Move X0, [X21]
	3130 Move W1, 2
	3131 Call 0x1C17D6C
	3132 Compare X0, 0
	3133 JumpIfEqual {5143}
	3134 Move W8, [X0+24]
	3135 Compare W8, 0
	3136 JumpIfEqual {5142}
	3137 Move X9, 0xB03000
	3138 Move X9, [X9+392]
	3139 NotImplemented "Instruction CMP not yet implemented."
	3140 Move X9, [X9]
	3141 Move [X0+32], X9
	3142 Move X8, 0xB02000
	3143 Move X8, [X8+3032]
	3144 Move X8, [X8]
	3145 Move [X0+40], X8
	3146 Move W8, [X22]
	3147 NotImplemented "Instruction CMP not yet implemented."
	3148 Move [X19+728], X0
	3149 Move X0, [X21]
	3150 Move W1, 2
	3151 Call 0x1C17D6C
	3152 Compare X0, 0
	3153 JumpIfEqual {5143}
	3154 Move W8, [X0+24]
	3155 Compare W8, 0
	3156 JumpIfEqual {5142}
	3157 Move X9, 0xB02000
	3158 Move X9, [X9+3136]
	3159 NotImplemented "Instruction CMP not yet implemented."
	3160 Move X9, [X9]
	3161 Move [X0+32], X9
	3162 Move X8, 0xB02000
	3163 Move X8, [X8+3040]
	3164 Move X8, [X8]
	3165 Move [X0+40], X8
	3166 Move W8, [X22]
	3167 NotImplemented "Instruction CMP not yet implemented."
	3168 Move [X19+736], X0
	3169 Move X0, [X21]
	3170 Move W1, 2
	3171 Call 0x1C17D6C
	3172 Compare X0, 0
	3173 JumpIfEqual {5143}
	3174 Move W8, [X0+24]
	3175 Compare W8, 0
	3176 JumpIfEqual {5142}
	3177 Move X9, 0xB02000
	3178 Move X9, [X9+2536]
	3179 NotImplemented "Instruction CMP not yet implemented."
	3180 Move X9, [X9]
	3181 Move [X0+32], X9
	3182 Move X8, 0xB02000
	3183 Move X8, [X8+3840]
	3184 Move X8, [X8]
	3185 Move [X0+40], X8
	3186 Move W8, [X22]
	3187 NotImplemented "Instruction CMP not yet implemented."
	3188 Move [X19+744], X0
	3189 Move X0, [X21]
	3190 Move W1, 2
	3191 Call 0x1C17D6C
	3192 Compare X0, 0
	3193 JumpIfEqual {5143}
	3194 Move W8, [X0+24]
	3195 Compare W8, 0
	3196 JumpIfEqual {5142}
	3197 Move X9, 0xB02000
	3198 Move X9, [X9+3712]
	3199 NotImplemented "Instruction CMP not yet implemented."
	3200 Move X9, [X9]
	3201 Move [X0+32], X9
	3202 Move X8, 0xB03000
	3203 Move X8, [X8+336]
	3204 Move X8, [X8]
	3205 Move [X0+40], X8
	3206 Move W8, [X22]
	3207 NotImplemented "Instruction CMP not yet implemented."
	3208 Move [X19+752], X0
	3209 Move X0, [X21]
	3210 Move W1, 2
	3211 Call 0x1C17D6C
	3212 Compare X0, 0
	3213 JumpIfEqual {5143}
	3214 Move W8, [X0+24]
	3215 Compare W8, 0
	3216 JumpIfEqual {5142}
	3217 Move X9, 0xB03000
	3218 Move X9, [X9+192]
	3219 NotImplemented "Instruction CMP not yet implemented."
	3220 Move X9, [X9]
	3221 Move [X0+32], X9
	3222 Move X8, 0xB02000
	3223 Move X8, [X8+3936]
	3224 Move X8, [X8]
	3225 Move [X0+40], X8
	3226 Move W8, [X22]
	3227 NotImplemented "Instruction CMP not yet implemented."
	3228 Move [X19+760], X0
	3229 Move X0, [X21]
	3230 Move W1, 2
	3231 Call 0x1C17D6C
	3232 Compare X0, 0
	3233 JumpIfEqual {5143}
	3234 Move W8, [X0+24]
	3235 Compare W8, 0
	3236 JumpIfEqual {5142}
	3237 Move X9, 0xB02000
	3238 Move X9, [X9+3824]
	3239 NotImplemented "Instruction CMP not yet implemented."
	3240 Move X9, [X9]
	3241 Move [X0+32], X9
	3242 Move X8, 0xB03000
	3243 Move X8, [X8+568]
	3244 Move X8, [X8]
	3245 Move [X0+40], X8
	3246 Move W8, [X22]
	3247 NotImplemented "Instruction CMP not yet implemented."
	3248 Move [X19+768], X0
	3249 Move X0, [X21]
	3250 Move W1, 2
	3251 Call 0x1C17D6C
	3252 Compare X0, 0
	3253 JumpIfEqual {5143}
	3254 Move W8, [X0+24]
	3255 Compare W8, 0
	3256 JumpIfEqual {5142}
	3257 Move X9, 0xB02000
	3258 Move X9, [X9+2576]
	3259 NotImplemented "Instruction CMP not yet implemented."
	3260 Move X9, [X9]
	3261 Move [X0+32], X9
	3262 Move X8, 0xB02000
	3263 Move X8, [X8+3472]
	3264 Move X8, [X8]
	3265 Move [X0+40], X8
	3266 Move W8, [X22]
	3267 NotImplemented "Instruction CMP not yet implemented."
	3268 Move [X19+776], X0
	3269 Move X0, [X21]
	3270 Move W1, 2
	3271 Call 0x1C17D6C
	3272 Compare X0, 0
	3273 JumpIfEqual {5143}
	3274 Move W8, [X0+24]
	3275 Compare W8, 0
	3276 JumpIfEqual {5142}
	3277 Move X9, 0xB02000
	3278 Move X9, [X9+2968]
	3279 NotImplemented "Instruction CMP not yet implemented."
	3280 Move X9, [X9]
	3281 Move [X0+32], X9
	3282 Move X8, 0xB02000
	3283 Move X8, [X8+3104]
	3284 Move X8, [X8]
	3285 Move [X0+40], X8
	3286 Move W8, [X22]
	3287 NotImplemented "Instruction CMP not yet implemented."
	3288 Move [X19+784], X0
	3289 Move X0, [X21]
	3290 Move W1, 2
	3291 Call 0x1C17D6C
	3292 Compare X0, 0
	3293 JumpIfEqual {5143}
	3294 Move W8, [X0+24]
	3295 Compare W8, 0
	3296 JumpIfEqual {5142}
	3297 Move X9, 0xB02000
	3298 Move X9, [X9+3744]
	3299 NotImplemented "Instruction CMP not yet implemented."
	3300 Move X9, [X9]
	3301 Move [X0+32], X9
	3302 Move X8, 0xB03000
	3303 Move X8, [X8+624]
	3304 Move X8, [X8]
	3305 Move [X0+40], X8
	3306 Move W8, [X22]
	3307 NotImplemented "Instruction CMP not yet implemented."
	3308 Move [X19+792], X0
	3309 Move X0, [X21]
	3310 Move W1, 2
	3311 Call 0x1C17D6C
	3312 Compare X0, 0
	3313 JumpIfEqual {5143}
	3314 Move W8, [X0+24]
	3315 Compare W8, 0
	3316 JumpIfEqual {5142}
	3317 Move X9, 0xB02000
	3318 Move X9, [X9+3680]
	3319 NotImplemented "Instruction CMP not yet implemented."
	3320 Move X9, [X9]
	3321 Move [X0+32], X9
	3322 Move X8, 0xB02000
	3323 Move X8, [X8+3560]
	3324 Move X8, [X8]
	3325 Move [X0+40], X8
	3326 Move W8, [X22]
	3327 NotImplemented "Instruction CMP not yet implemented."
	3328 Move [X19+800], X0
	3329 Move X0, [X21]
	3330 Move W1, 2
	3331 Call 0x1C17D6C
	3332 Compare X0, 0
	3333 JumpIfEqual {5143}
	3334 Move W8, [X0+24]
	3335 Compare W8, 0
	3336 JumpIfEqual {5142}
	3337 Move X9, 0xB02000
	3338 Move X9, [X9+2888]
	3339 NotImplemented "Instruction CMP not yet implemented."
	3340 Move X9, [X9]
	3341 Move [X0+32], X9
	3342 Move X8, 0xB02000
	3343 Move X8, [X8+2832]
	3344 Move X8, [X8]
	3345 Move [X0+40], X8
	3346 Move W8, [X22]
	3347 NotImplemented "Instruction CMP not yet implemented."
	3348 Move [X19+808], X0
	3349 Move X0, [X21]
	3350 Move W1, 2
	3351 Call 0x1C17D6C
	3352 Compare X0, 0
	3353 JumpIfEqual {5143}
	3354 Move W8, [X0+24]
	3355 Compare W8, 0
	3356 JumpIfEqual {5142}
	3357 Move X9, 0xB02000
	3358 Move X9, [X9+2664]
	3359 NotImplemented "Instruction CMP not yet implemented."
	3360 Move X9, [X9]
	3361 Move [X0+32], X9
	3362 Move X8, 0xB02000
	3363 Move X8, [X8+2600]
	3364 Move X8, [X8]
	3365 Move [X0+40], X8
	3366 Move W8, [X22]
	3367 NotImplemented "Instruction CMP not yet implemented."
	3368 Move [X19+816], X0
	3369 Move X0, [X21]
	3370 Move W1, 2
	3371 Call 0x1C17D6C
	3372 Compare X0, 0
	3373 JumpIfEqual {5143}
	3374 Move W8, [X0+24]
	3375 Compare W8, 0
	3376 JumpIfEqual {5142}
	3377 Move X9, 0xB03000
	3378 Move X9, [X9+240]
	3379 NotImplemented "Instruction CMP not yet implemented."
	3380 Move X9, [X9]
	3381 Move [X0+32], X9
	3382 Move X8, 0xB02000
	3383 Move X8, [X8+3312]
	3384 Move X8, [X8]
	3385 Move [X0+40], X8
	3386 Move W8, [X22]
	3387 NotImplemented "Instruction CMP not yet implemented."
	3388 Move [X19+824], X0
	3389 Move X0, [X21]
	3390 Move W1, 2
	3391 Call 0x1C17D6C
	3392 Compare X0, 0
	3393 JumpIfEqual {5143}
	3394 Move W8, [X0+24]
	3395 Compare W8, 0
	3396 JumpIfEqual {5142}
	3397 Move X9, 0xB02000
	3398 Move X9, [X9+3800]
	3399 NotImplemented "Instruction CMP not yet implemented."
	3400 Move X9, [X9]
	3401 Move [X0+32], X9
	3402 Move X8, 0xB03000
	3403 Move X8, [X8+96]
	3404 Move X8, [X8]
	3405 Move [X0+40], X8
	3406 Move W8, [X22]
	3407 NotImplemented "Instruction CMP not yet implemented."
	3408 Move [X19+832], X0
	3409 Move X0, [X21]
	3410 Move W1, 2
	3411 Call 0x1C17D6C
	3412 Compare X0, 0
	3413 JumpIfEqual {5143}
	3414 Move W8, [X0+24]
	3415 Compare W8, 0
	3416 JumpIfEqual {5142}
	3417 Move X9, 0xB02000
	3418 Move X9, [X9+2584]
	3419 NotImplemented "Instruction CMP not yet implemented."
	3420 Move X9, [X9]
	3421 Move [X0+32], X9
	3422 Move X8, 0xB02000
	3423 Move X8, [X8+2920]
	3424 Move X8, [X8]
	3425 Move [X0+40], X8
	3426 Move W8, [X22]
	3427 NotImplemented "Instruction CMP not yet implemented."
	3428 Move [X19+840], X0
	3429 Move X0, [X21]
	3430 Move W1, 2
	3431 Call 0x1C17D6C
	3432 Compare X0, 0
	3433 JumpIfEqual {5143}
	3434 Move W8, [X0+24]
	3435 Compare W8, 0
	3436 JumpIfEqual {5142}
	3437 Move X9, 0xB03000
	3438 Move X9, [X9+8]
	3439 NotImplemented "Instruction CMP not yet implemented."
	3440 Move X9, [X9]
	3441 Move [X0+32], X9
	3442 Move X8, 0xB02000
	3443 Move X8, [X8+4080]
	3444 Move X8, [X8]
	3445 Move [X0+40], X8
	3446 Move W8, [X22]
	3447 NotImplemented "Instruction CMP not yet implemented."
	3448 Move [X19+848], X0
	3449 Move X0, [X21]
	3450 Move W1, 2
	3451 Call 0x1C17D6C
	3452 Compare X0, 0
	3453 JumpIfEqual {5143}
	3454 Move W8, [X0+24]
	3455 Compare W8, 0
	3456 JumpIfEqual {5142}
	3457 Move X9, 0xB03000
	3458 Move X9, [X9+56]
	3459 NotImplemented "Instruction CMP not yet implemented."
	3460 Move X9, [X9]
	3461 Move [X0+32], X9
	3462 Move X8, 0xB02000
	3463 Move X8, [X8+3992]
	3464 Move X8, [X8]
	3465 Move [X0+40], X8
	3466 Move W8, [X22]
	3467 NotImplemented "Instruction CMP not yet implemented."
	3468 Move [X19+856], X0
	3469 Move X0, [X21]
	3470 Move W1, 2
	3471 Call 0x1C17D6C
	3472 Compare X0, 0
	3473 JumpIfEqual {5143}
	3474 Move W8, [X0+24]
	3475 Compare W8, 0
	3476 JumpIfEqual {5142}
	3477 Move X9, 0xB02000
	3478 Move X9, [X9+3296]
	3479 NotImplemented "Instruction CMP not yet implemented."
	3480 Move X9, [X9]
	3481 Move [X0+32], X9
	3482 Move X8, 0xB02000
	3483 Move X8, [X8+2560]
	3484 Move X8, [X8]
	3485 Move [X0+40], X8
	3486 Move W8, [X22]
	3487 NotImplemented "Instruction CMP not yet implemented."
	3488 Move [X19+864], X0
	3489 Move X0, [X21]
	3490 Move W1, 2
	3491 Call 0x1C17D6C
	3492 Compare X0, 0
	3493 JumpIfEqual {5143}
	3494 Move W8, [X0+24]
	3495 Compare W8, 0
	3496 JumpIfEqual {5142}
	3497 Move X9, 0xB02000
	3498 Move X9, [X9+3912]
	3499 NotImplemented "Instruction CMP not yet implemented."
	3500 Move X9, [X9]
	3501 Move [X0+32], X9
	3502 Move X8, 0xB02000
	3503 Move X8, [X8+2704]
	3504 Move X8, [X8]
	3505 Move [X0+40], X8
	3506 Move W8, [X22]
	3507 NotImplemented "Instruction CMP not yet implemented."
	3508 Move [X19+872], X0
	3509 Move X0, [X21]
	3510 Move W1, 2
	3511 Call 0x1C17D6C
	3512 Compare X0, 0
	3513 JumpIfEqual {5143}
	3514 Move W8, [X0+24]
	3515 Compare W8, 0
	3516 JumpIfEqual {5142}
	3517 Move X9, 0xB02000
	3518 Move X9, [X9+3144]
	3519 NotImplemented "Instruction CMP not yet implemented."
	3520 Move X9, [X9]
	3521 Move [X0+32], X9
	3522 Move X8, 0xB03000
	3523 Move X8, [X8+256]
	3524 Move X8, [X8]
	3525 Move [X0+40], X8
	3526 Move W8, [X22]
	3527 NotImplemented "Instruction CMP not yet implemented."
	3528 Move [X19+880], X0
	3529 Move X0, [X21]
	3530 Move W1, 2
	3531 Call 0x1C17D6C
	3532 Compare X0, 0
	3533 JumpIfEqual {5143}
	3534 Move W8, [X0+24]
	3535 Compare W8, 0
	3536 JumpIfEqual {5142}
	3537 Move X9, 0xB02000
	3538 Move X9, [X9+3344]
	3539 NotImplemented "Instruction CMP not yet implemented."
	3540 Move X9, [X9]
	3541 Move [X0+32], X9
	3542 Move X8, 0xB03000
	3543 Move X8, [X8+616]
	3544 Move X8, [X8]
	3545 Move [X0+40], X8
	3546 Move W8, [X22]
	3547 NotImplemented "Instruction CMP not yet implemented."
	3548 Move [X19+888], X0
	3549 Move X0, [X21]
	3550 Move W1, 2
	3551 Call 0x1C17D6C
	3552 Compare X0, 0
	3553 JumpIfEqual {5143}
	3554 Move W8, [X0+24]
	3555 Compare W8, 0
	3556 JumpIfEqual {5142}
	3557 Move X9, 0xB03000
	3558 Move X9, [X9+600]
	3559 NotImplemented "Instruction CMP not yet implemented."
	3560 Move X9, [X9]
	3561 Move [X0+32], X9
	3562 Move X8, 0xB02000
	3563 Move X8, [X8+3816]
	3564 Move X8, [X8]
	3565 Move [X0+40], X8
	3566 Move W8, [X22]
	3567 NotImplemented "Instruction CMP not yet implemented."
	3568 Move [X19+896], X0
	3569 Move X0, [X21]
	3570 Move W1, 2
	3571 Call 0x1C17D6C
	3572 Compare X0, 0
	3573 JumpIfEqual {5143}
	3574 Move W8, [X0+24]
	3575 Compare W8, 0
	3576 JumpIfEqual {5142}
	3577 Move X9, 0xB03000
	3578 Move X9, [X9+464]
	3579 NotImplemented "Instruction CMP not yet implemented."
	3580 Move X9, [X9]
	3581 Move [X0+32], X9
	3582 Move X8, 0xB02000
	3583 Move X8, [X8+3672]
	3584 Move X8, [X8]
	3585 Move [X0+40], X8
	3586 Move W8, [X22]
	3587 NotImplemented "Instruction CMP not yet implemented."
	3588 Move [X19+904], X0
	3589 Move X0, [X21]
	3590 Move W1, 2
	3591 Call 0x1C17D6C
	3592 Compare X0, 0
	3593 JumpIfEqual {5143}
	3594 Move W8, [X0+24]
	3595 Compare W8, 0
	3596 JumpIfEqual {5142}
	3597 Move X9, 0xB03000
	3598 Move X9, [X9+112]
	3599 NotImplemented "Instruction CMP not yet implemented."
	3600 Move X9, [X9]
	3601 Move [X0+32], X9
	3602 Move X8, 0xB03000
	3603 Move X8, [X8+32]
	3604 Move X8, [X8]
	3605 Move [X0+40], X8
	3606 Move W8, [X22]
	3607 NotImplemented "Instruction CMP not yet implemented."
	3608 Move [X19+912], X0
	3609 Move X0, [X21]
	3610 Move W1, 2
	3611 Call 0x1C17D6C
	3612 Compare X0, 0
	3613 JumpIfEqual {5143}
	3614 Move W8, [X0+24]
	3615 Compare W8, 0
	3616 JumpIfEqual {5142}
	3617 Move X9, 0xB02000
	3618 Move X9, [X9+3424]
	3619 NotImplemented "Instruction CMP not yet implemented."
	3620 Move X9, [X9]
	3621 Move [X0+32], X9
	3622 Move X8, 0xB02000
	3623 Move X8, [X8+3752]
	3624 Move X8, [X8]
	3625 Move [X0+40], X8
	3626 Move W8, [X22]
	3627 NotImplemented "Instruction CMP not yet implemented."
	3628 Move [X19+920], X0
	3629 Move X8, [X23]
	3630 Move X9, 0xB02000
	3631 Move W1, 94
	3632 Move X8, [X8+184]
	3633 Move X9, [X9+2520]
	3634 Move [X8+96], X19
	3635 Move X0, [X9]
	3636 Call 0x1C17D6C
	3637 Move X19, X0
	3638 Add X0, X31, 1504
	3639 Move W1, 65
	3640 Move W2, 90
	3641 Move W3, 1
	3642 Move W4, 32
	3643 Move X5, X31
	3644 Move [X31+1512], W31
	3645 Move [X31+1504], X31
	3646 Call LowerCaseMapping..ctor, X0, X1, X2, X3, X4
	3647 Compare X19, 0
	3648 JumpIfEqual {5143}
	3649 Move W8, [X19+24]
	3650 Compare W8, 0
	3651 JumpIfEqual {5142}
	3652 Move X8, [X31+1504]
	3653 Move W9, [X31+1512]
	3654 Add X0, X31, 1488
	3655 Move W1, 192
	3656 Move W2, 222
	3657 Move W3, 1
	3658 Move W4, 32
	3659 Move X5, X31
	3660 Move [X19+32], X8
	3661 Move [X19+40], W9
	3662 Move [X31+1496], W31
	3663 Move [X31+1488], X31
	3664 Call LowerCaseMapping..ctor, X0, X1, X2, X3, X4
	3665 Move W8, [X19+24]
	3666 NotImplemented "Instruction CMP not yet implemented."
	3667 Move X8, [X31+1488]
	3668 Move W9, [X31+1496]
	3669 Add X0, X31, 1472
	3670 Move W1, 256
	3671 Move W2, 302
	3672 Move W3, 2
	3673 Move W4, W31
	3674 Move X5, X31
	3675 Move [X19+44], X8
	3676 Move [X19+52], W9
	3677 Move [X31+1480], W31
	3678 Move [X31+1472], X31
	3679 Call LowerCaseMapping..ctor, X0, X1, X2, X3, X4
	3680 Move W8, [X19+24]
	3681 NotImplemented "Instruction CMP not yet implemented."
	3682 Move X8, [X31+1472]
	3683 Move W9, [X31+1480]
	3684 Add X0, X31, 1456
	3685 Move W1, 304
	3686 Move W2, 304
	3687 Move W4, 105
	3688 Move W3, W31
	3689 Move X5, X31
	3690 Move [X19+56], X8
	3691 Move [X19+64], W9
	3692 Move [X31+1464], W31
	3693 Move [X31+1456], X31
	3694 Call LowerCaseMapping..ctor, X0, X1, X2, X3, X4
	3695 Move W8, [X19+24]
	3696 NotImplemented "Instruction CMP not yet implemented."
	3697 Move X8, [X31+1456]
	3698 Move W9, [X31+1464]
	3699 Add X0, X31, 1440
	3700 Move W1, 306
	3701 Move W2, 310
	3702 Move W3, 2
	3703 Move W4, W31
	3704 Move X5, X31
	3705 Move [X19+68], X8
	3706 Move [X19+76], W9
	3707 Move [X31+1448], W31
	3708 Move [X31+1440], X31
	3709 Call LowerCaseMapping..ctor, X0, X1, X2, X3, X4
	3710 Move W8, [X19+24]
	3711 NotImplemented "Instruction CMP not yet implemented."
	3712 Move X8, [X31+1440]
	3713 Move W9, [X31+1448]
	3714 Add X0, X31, 1424
	3715 Move W1, 313
	3716 Move W2, 327
	3717 Move W3, 3
	3718 Move W4, W31
	3719 Move X5, X31
	3720 Move [X19+80], X8
	3721 Move [X19+88], W9
	3722 Move [X31+1432], W31
	3723 Move [X31+1424], X31
	3724 Call LowerCaseMapping..ctor, X0, X1, X2, X3, X4
	3725 Move W8, [X19+24]
	3726 NotImplemented "Instruction CMP not yet implemented."
	3727 Move X8, [X31+1424]
	3728 Move W9, [X31+1432]
	3729 Add X0, X31, 1408
	3730 Move W1, 330
	3731 Move W2, 374
	3732 Move W3, 2
	3733 Move W4, W31
	3734 Move X5, X31
	3735 Move [X19+92], X8
	3736 Move [X19+100], W9
	3737 Move [X31+1416], W31
	3738 Move [X31+1408], X31
	3739 Call LowerCaseMapping..ctor, X0, X1, X2, X3, X4
	3740 Move W8, [X19+24]
	3741 NotImplemented "Instruction CMP not yet implemented."
	3742 Move X8, [X31+1408]
	3743 Move W9, [X31+1416]
	3744 Add X0, X31, 1392
	3745 Move W1, 376
	3746 Move W2, 376
	3747 Move W4, 255
	3748 Move W3, W31
	3749 Move X5, X31
	3750 Move [X19+104], X8
	3751 Move [X19+112], W9
	3752 Move [X31+1400], W31
	3753 Move [X31+1392], X31
	3754 Call LowerCaseMapping..ctor, X0, X1, X2, X3, X4
	3755 Move W8, [X19+24]
	3756 NotImplemented "Instruction CMP not yet implemented."
	3757 Move X8, [X31+1392]
	3758 Move W9, [X31+1400]
	3759 Add X0, X31, 1376
	3760 Move W1, 377
	3761 Move W2, 381
	3762 Move W3, 3
	3763 Move W4, W31
	3764 Move X5, X31
	3765 Move [X19+116], X8
	3766 Move [X19+124], W9
	3767 Move [X31+1384], W31
	3768 Move [X31+1376], X31
	3769 Call LowerCaseMapping..ctor, X0, X1, X2, X3, X4
	3770 Move W8, [X19+24]
	3771 NotImplemented "Instruction CMP not yet implemented."
	3772 Move X8, [X31+1376]
	3773 Move W9, [X31+1384]
	3774 Add X0, X31, 1360
	3775 Move W1, 385
	3776 Move W2, 385
	3777 Move W4, 595
	3778 Move W3, W31
	3779 Move X5, X31
	3780 Move [X19+128], X8
	3781 Move [X19+136], W9
	3782 Move [X31+1368], W31
	3783 Move [X31+1360], X31
	3784 Call LowerCaseMapping..ctor, X0, X1, X2, X3, X4
	3785 Move W8, [X19+24]
	3786 NotImplemented "Instruction CMP not yet implemented."
	3787 Move X8, [X31+1360]
	3788 Move W9, [X31+1368]
	3789 Add X0, X31, 1344
	3790 Move W1, 386
	3791 Move W2, 388
	3792 Move W3, 2
	3793 Move W4, W31
	3794 Move X5, X31
	3795 Move [X19+140], X8
	3796 Move [X19+148], W9
	3797 Move [X31+1352], W31
	3798 Move [X31+1344], X31
	3799 Call LowerCaseMapping..ctor, X0, X1, X2, X3, X4
	3800 Move W8, [X19+24]
	3801 NotImplemented "Instruction CMP not yet implemented."
	3802 Move X8, [X31+1344]
	3803 Move W9, [X31+1352]
	3804 Add X0, X31, 1328
	3805 Move W1, 390
	3806 Move W2, 390
	3807 Move W4, 596
	3808 Move W3, W31
	3809 Move X5, X31
	3810 Move [X19+152], X8
	3811 Move [X19+160], W9
	3812 Move [X31+1336], W31
	3813 Move [X31+1328], X31
	3814 Call LowerCaseMapping..ctor, X0, X1, X2, X3, X4
	3815 Move W8, [X19+24]
	3816 NotImplemented "Instruction CMP not yet implemented."
	3817 Move X8, [X31+1328]
	3818 Move W9, [X31+1336]
	3819 Add X0, X31, 1312
	3820 Move W1, 391
	3821 Move W2, 391
	3822 Move W4, 392
	3823 Move W3, W31
	3824 Move X5, X31
	3825 Move [X19+164], X8
	3826 Move [X19+172], W9
	3827 Move [X31+1320], W31
	3828 Move [X31+1312], X31
	3829 Call LowerCaseMapping..ctor, X0, X1, X2, X3, X4
	3830 Move W8, [X19+24]
	3831 NotImplemented "Instruction CMP not yet implemented."
	3832 Move X8, [X31+1312]
	3833 Move W9, [X31+1320]
	3834 Add X0, X31, 1296
	3835 Move W1, 393
	3836 Move W2, 394
	3837 Move W3, 1
	3838 Move W4, 205
	3839 Move X5, X31
	3840 Move [X19+176], X8
	3841 Move [X19+184], W9
	3842 Move [X31+1304], W31
	3843 Move [X31+1296], X31
	3844 Call LowerCaseMapping..ctor, X0, X1, X2, X3, X4
	3845 Move W8, [X19+24]
	3846 NotImplemented "Instruction CMP not yet implemented."
	3847 Move X8, [X31+1296]
	3848 Move W9, [X31+1304]
	3849 Add X0, X31, 1280
	3850 Move W1, 395
	3851 Move W2, 395
	3852 Move W4, 396
	3853 Move W3, W31
	3854 Move X5, X31
	3855 Move [X19+188], X8
	3856 Move [X19+196], W9
	3857 Move [X31+1288], W31
	3858 Move [X31+1280], X31
	3859 Call LowerCaseMapping..ctor, X0, X1, X2, X3, X4
	3860 Move W8, [X19+24]
	3861 NotImplemented "Instruction CMP not yet implemented."
	3862 Move X8, [X31+1280]
	3863 Move W9, [X31+1288]
	3864 Add X0, X31, 1264
	3865 Move W1, 398
	3866 Move W2, 398
	3867 Move W4, 477
	3868 Move W3, W31
	3869 Move X5, X31
	3870 Move [X19+200], X8
	3871 Move [X19+208], W9
	3872 Move [X31+1272], W31
	3873 Move [X31+1264], X31
	3874 Call LowerCaseMapping..ctor, X0, X1, X2, X3, X4
	3875 Move W8, [X19+24]
	3876 NotImplemented "Instruction CMP not yet implemented."
	3877 Move X8, [X31+1264]
	3878 Move W9, [X31+1272]
	3879 Add X0, X31, 1248
	3880 Move W1, 399
	3881 Move W2, 399
	3882 Move W4, 601
	3883 Move W3, W31
	3884 Move X5, X31
	3885 Move [X19+212], X8
	3886 Move [X19+220], W9
	3887 Move [X31+1256], W31
	3888 Move [X31+1248], X31
	3889 Call LowerCaseMapping..ctor, X0, X1, X2, X3, X4
	3890 Move W8, [X19+24]
	3891 NotImplemented "Instruction CMP not yet implemented."
	3892 Move X8, [X31+1248]
	3893 Move W9, [X31+1256]
	3894 Add X0, X31, 1232
	3895 Move W1, 400
	3896 Move W2, 400
	3897 Move W4, 603
	3898 Move W3, W31
	3899 Move X5, X31
	3900 Move [X19+224], X8
	3901 Move [X19+232], W9
	3902 Move [X31+1240], W31
	3903 Move [X31+1232], X31
	3904 Call LowerCaseMapping..ctor, X0, X1, X2, X3, X4
	3905 Move W8, [X19+24]
	3906 NotImplemented "Instruction CMP not yet implemented."
	3907 Move X8, [X31+1232]
	3908 Move W9, [X31+1240]
	3909 Add X0, X31, 1216
	3910 Move W1, 401
	3911 Move W2, 401
	3912 Move W4, 402
	3913 Move W3, W31
	3914 Move X5, X31
	3915 Move [X19+236], X8
	3916 Move [X19+244], W9
	3917 Move [X31+1224], W31
	3918 Move [X31+1216], X31
	3919 Call LowerCaseMapping..ctor, X0, X1, X2, X3, X4
	3920 Move W8, [X19+24]
	3921 NotImplemented "Instruction CMP not yet implemented."
	3922 Move X8, [X31+1216]
	3923 Move W9, [X31+1224]
	3924 Add X0, X31, 1200
	3925 Move W1, 403
	3926 Move W2, 403
	3927 Move W4, 608
	3928 Move W3, W31
	3929 Move X5, X31
	3930 Move [X19+248], X8
	3931 Move [X19+256], W9
	3932 Move [X31+1208], W31
	3933 Move [X31+1200], X31
	3934 Call LowerCaseMapping..ctor, X0, X1, X2, X3, X4
	3935 Move W8, [X19+24]
	3936 NotImplemented "Instruction CMP not yet implemented."
	3937 Move X8, [X31+1200]
	3938 Move W9, [X31+1208]
	3939 Add X10, X19, 260
	3940 Add X0, X31, 1184
	3941 Move W1, 404
	3942 Move W2, 404
	3943 Move W4, 611
	3944 Move W3, W31
	3945 Move X5, X31
	3946 Move [X10], X8
	3947 Move [X19+268], W9
	3948 Move [X31+1192], W31
	3949 Move [X31+1184], X31
	3950 Call LowerCaseMapping..ctor, X0, X1, X2, X3, X4
	3951 Move W8, [X19+24]
	3952 NotImplemented "Instruction CMP not yet implemented."
	3953 Move X8, [X31+1184]
	3954 Move W9, [X31+1192]
	3955 Add X0, X31, 1168
	3956 Move W1, 406
	3957 Move W2, 406
	3958 Move W4, 617
	3959 Move W3, W31
	3960 Move X5, X31
	3961 Move [X19+272], X8
	3962 Move [X19+280], W9
	3963 Move [X31+1176], W31
	3964 Move [X31+1168], X31
	3965 Call LowerCaseMapping..ctor, X0, X1, X2, X3, X4
	3966 Move W8, [X19+24]
	3967 NotImplemented "Instruction CMP not yet implemented."
	3968 Move X8, [X31+1168]
	3969 Move W9, [X31+1176]
	3970 Add X10, X19, 284
	3971 Add X0, X31, 1152
	3972 Move W1, 407
	3973 Move W2, 407
	3974 Move W4, 616
	3975 Move W3, W31
	3976 Move X5, X31
	3977 Move [X10], X8
	3978 Move [X10+8], W9
	3979 Move [X31+1160], W31
	3980 Move [X31+1152], X31
	3981 Call LowerCaseMapping..ctor, X0, X1, X2, X3, X4
	3982 Move W8, [X19+24]
	3983 NotImplemented "Instruction CMP not yet implemented."
	3984 Move X8, [X31+1152]
	3985 Move W9, [X31+1160]
	3986 Add X0, X31, 1136
	3987 Move W1, 408
	3988 Move W2, 408
	3989 Move W4, 409
	3990 Move W3, W31
	3991 Move X5, X31
	3992 Move [X19+296], X8
	3993 Move [X19+304], W9
	3994 Move [X31+1144], W31
	3995 Move [X31+1136], X31
	3996 Call LowerCaseMapping..ctor, X0, X1, X2, X3, X4
	3997 Move W8, [X19+24]
	3998 NotImplemented "Instruction CMP not yet implemented."
	3999 Move X8, [X31+1136]
	4000 Move W9, [X31+1144]
	4001 Add X10, X19, 308
	4002 Add X0, X31, 1120
	4003 Move W1, 412
	4004 Move W2, 412
	4005 Move W4, 623
	4006 Move W3, W31
	4007 Move X5, X31
	4008 Move [X10], X8
	4009 Move [X10+8], W9
	4010 Move [X31+1128], W31
	4011 Move [X31+1120], X31
	4012 Call LowerCaseMapping..ctor, X0, X1, X2, X3, X4
	4013 Move W8, [X19+24]
	4014 NotImplemented "Instruction CMP not yet implemented."
	4015 Move X8, [X31+1120]
	4016 Move W9, [X31+1128]
	4017 Add X0, X31, 1104
	4018 Move W1, 413
	4019 Move W2, 413
	4020 Move W4, 626
	4021 Move W3, W31
	4022 Move X5, X31
	4023 Move [X19+320], X8
	4024 Move [X19+328], W9
	4025 Move [X31+1112], W31
	4026 Move [X31+1104], X31
	4027 Call LowerCaseMapping..ctor, X0, X1, X2, X3, X4
	4028 Move W8, [X19+24]
	4029 NotImplemented "Instruction CMP not yet implemented."
	4030 Move X8, [X31+1104]
	4031 Move W9, [X31+1112]
	4032 Add X10, X19, 332
	4033 Add X0, X31, 1088
	4034 Move W1, 415
	4035 Move W2, 415
	4036 Move W4, 629
	4037 Move W3, W31
	4038 Move X5, X31
	4039 Move [X10], X8
	4040 Move [X10+8], W9
	4041 Move [X31+1096], W31
	4042 Move [X31+1088], X31
	4043 Call LowerCaseMapping..ctor, X0, X1, X2, X3, X4
	4044 Move W8, [X19+24]
	4045 NotImplemented "Instruction CMP not yet implemented."
	4046 Move X8, [X31+1088]
	4047 Move W9, [X31+1096]
	4048 Add X0, X31, 1072
	4049 Move W1, 416
	4050 Move W2, 420
	4051 Move W3, 2
	4052 Move W4, W31
	4053 Move X5, X31
	4054 Move [X19+344], X8
	4055 Move [X19+352], W9
	4056 Move [X31+1080], W31
	4057 Move [X31+1072], X31
	4058 Call LowerCaseMapping..ctor, X0, X1, X2, X3, X4
	4059 Move W8, [X19+24]
	4060 NotImplemented "Instruction CMP not yet implemented."
	4061 Move X8, [X31+1072]
	4062 Move W9, [X31+1080]
	4063 Add X10, X19, 356
	4064 Add X0, X31, 1056
	4065 Move W1, 423
	4066 Move W2, 423
	4067 Move W4, 424
	4068 Move W3, W31
	4069 Move X5, X31
	4070 Move [X10], X8
	4071 Move [X10+8], W9
	4072 Move [X31+1064], W31
	4073 Move [X31+1056], X31
	4074 Call LowerCaseMapping..ctor, X0, X1, X2, X3, X4
	4075 Move W8, [X19+24]
	4076 NotImplemented "Instruction CMP not yet implemented."
	4077 Move X8, [X31+1056]
	4078 Move W9, [X31+1064]
	4079 Add X0, X31, 1040
	4080 Move W1, 425
	4081 Move W2, 425
	4082 Move W4, 643
	4083 Move W3, W31
	4084 Move X5, X31
	4085 Move [X19+368], X8
	4086 Move [X19+376], W9
	4087 Move [X31+1048], W31
	4088 Move [X31+1040], X31
	4089 Call LowerCaseMapping..ctor, X0, X1, X2, X3, X4
	4090 Move W8, [X19+24]
	4091 NotImplemented "Instruction CMP not yet implemented."
	4092 Move X8, [X31+1040]
	4093 Move W9, [X31+1048]
	4094 Add X10, X19, 380
	4095 Add X0, X31, 1024
	4096 Move W1, 428
	4097 Move W2, 428
	4098 Move W4, 429
	4099 Move W3, W31
	4100 Move X5, X31
	4101 Move [X10], X8
	4102 Move [X10+8], W9
	4103 Move [X31+1032], W31
	4104 Move [X31+1024], X31
	4105 Call LowerCaseMapping..ctor, X0, X1, X2, X3, X4
	4106 Move W8, [X19+24]
	4107 NotImplemented "Instruction CMP not yet implemented."
	4108 Move X8, [X31+1024]
	4109 Move W9, [X31+1032]
	4110 Add X0, X31, 1008
	4111 Move W1, 430
	4112 Move W2, 430
	4113 Move W4, 648
	4114 Move W3, W31
	4115 Move X5, X31
	4116 Move [X19+392], X8
	4117 Move [X19+400], W9
	4118 Move [X31+1016], W31
	4119 Move [X31+1008], X31
	4120 Call LowerCaseMapping..ctor, X0, X1, X2, X3, X4
	4121 Move W8, [X19+24]
	4122 NotImplemented "Instruction CMP not yet implemented."
	4123 Move X8, [X31+1008]
	4124 Move W9, [X31+1016]
	4125 Add X10, X19, 404
	4126 Add X0, X31, 992
	4127 Move W1, 431
	4128 Move W2, 431
	4129 Move W4, 432
	4130 Move W3, W31
	4131 Move X5, X31
	4132 Move [X10], X8
	4133 Move [X10+8], W9
	4134 Move [X31+1000], W31
	4135 Move [X31+992], X31
	4136 Call LowerCaseMapping..ctor, X0, X1, X2, X3, X4
	4137 Move W8, [X19+24]
	4138 NotImplemented "Instruction CMP not yet implemented."
	4139 Move X8, [X31+992]
	4140 Move W9, [X31+1000]
	4141 Add X0, X31, 976
	4142 Move W1, 433
	4143 Move W2, 434
	4144 Move W3, 1
	4145 Move W4, 217
	4146 Move X5, X31
	4147 Move [X19+416], X8
	4148 Move [X19+424], W9
	4149 Move [X31+984], W31
	4150 Move [X31+976], X31
	4151 Call LowerCaseMapping..ctor, X0, X1, X2, X3, X4
	4152 Move W8, [X19+24]
	4153 NotImplemented "Instruction CMP not yet implemented."
	4154 Move X8, [X31+976]
	4155 Move W9, [X31+984]
	4156 Add X10, X19, 428
	4157 Add X0, X31, 960
	4158 Move W1, 435
	4159 Move W2, 437
	4160 Move W3, 3
	4161 Move W4, W31
	4162 Move X5, X31
	4163 Move [X10], X8
	4164 Move [X10+8], W9
	4165 Move [X31+968], W31
	4166 Move [X31+960], X31
	4167 Call LowerCaseMapping..ctor, X0, X1, X2, X3, X4
	4168 Move W8, [X19+24]
	4169 NotImplemented "Instruction CMP not yet implemented."
	4170 Move X8, [X31+960]
	4171 Move W9, [X31+968]
	4172 Add X0, X31, 944
	4173 Move W1, 439
	4174 Move W2, 439
	4175 Move W4, 658
	4176 Move W3, W31
	4177 Move X5, X31
	4178 Move [X19+440], X8
	4179 Move [X19+448], W9
	4180 Move [X31+952], W31
	4181 Move [X31+944], X31
	4182 Call LowerCaseMapping..ctor, X0, X1, X2, X3, X4
	4183 Move W8, [X19+24]
	4184 NotImplemented "Instruction CMP not yet implemented."
	4185 Move X8, [X31+944]
	4186 Move W9, [X31+952]
	4187 Add X10, X19, 452
	4188 Add X0, X31, 928
	4189 Move W1, 440
	4190 Move W2, 440
	4191 Move W4, 441
	4192 Move W3, W31
	4193 Move X5, X31
	4194 Move [X10], X8
	4195 Move [X10+8], W9
	4196 Move [X31+936], W31
	4197 Move [X31+928], X31
	4198 Call LowerCaseMapping..ctor, X0, X1, X2, X3, X4
	4199 Move W8, [X19+24]
	4200 NotImplemented "Instruction CMP not yet implemented."
	4201 Move X8, [X31+928]
	4202 Move W9, [X31+936]
	4203 Add X0, X31, 912
	4204 Move W1, 444
	4205 Move W2, 444
	4206 Move W4, 445
	4207 Move W3, W31
	4208 Move X5, X31
	4209 Move [X19+464], X8
	4210 Move [X19+472], W9
	4211 Move [X31+920], W31
	4212 Move [X31+912], X31
	4213 Call LowerCaseMapping..ctor, X0, X1, X2, X3, X4
	4214 Move W8, [X19+24]
	4215 NotImplemented "Instruction CMP not yet implemented."
	4216 Move X8, [X31+912]
	4217 Move W9, [X31+920]
	4218 Add X10, X19, 476
	4219 Add X0, X31, 896
	4220 Move W1, 452
	4221 Move W2, 453
	4222 Move W4, 454
	4223 Move W3, W31
	4224 Move X5, X31
	4225 Move [X10], X8
	4226 Move [X10+8], W9
	4227 Move [X31+904], W31
	4228 Move [X31+896], X31
	4229 Call LowerCaseMapping..ctor, X0, X1, X2, X3, X4
	4230 Move W8, [X19+24]
	4231 NotImplemented "Instruction CMP not yet implemented."
	4232 Move X8, [X31+896]
	4233 Move W9, [X31+904]
	4234 Add X0, X31, 880
	4235 Move W1, 455
	4236 Move W2, 456
	4237 Move W4, 457
	4238 Move W3, W31
	4239 Move X5, X31
	4240 Move [X19+488], X8
	4241 Move [X19+496], W9
	4242 Move [X31+888], W31
	4243 Move [X31+880], X31
	4244 Call LowerCaseMapping..ctor, X0, X1, X2, X3, X4
	4245 Move W8, [X19+24]
	4246 NotImplemented "Instruction CMP not yet implemented."
	4247 Move X8, [X31+880]
	4248 Move W9, [X31+888]
	4249 Add X10, X19, 500
	4250 Add X0, X31, 864
	4251 Move W1, 458
	4252 Move W2, 459
	4253 Move W4, 460
	4254 Move W3, W31
	4255 Move X5, X31
	4256 Move [X10], X8
	4257 Move [X10+8], W9
	4258 Move [X31+872], W31
	4259 Move [X31+864], X31
	4260 Call LowerCaseMapping..ctor, X0, X1, X2, X3, X4
	4261 Move W8, [X19+24]
	4262 NotImplemented "Instruction CMP not yet implemented."
	4263 Move X8, [X31+864]
	4264 Move W9, [X31+872]
	4265 Add X0, X31, 848
	4266 Move W1, 461
	4267 Move W2, 475
	4268 Move W3, 3
	4269 Move W4, W31
	4270 Move X5, X31
	4271 Move [X19+512], X8
	4272 Move [X19+520], W9
	4273 Move [X31+856], W31
	4274 Move [X31+848], X31
	4275 Call LowerCaseMapping..ctor, X0, X1, X2, X3, X4
	4276 Move W8, [X19+24]
	4277 NotImplemented "Instruction CMP not yet implemented."
	4278 Move X8, [X31+848]
	4279 Move W9, [X31+856]
	4280 Add X10, X19, 524
	4281 Add X0, X31, 832
	4282 Move W1, 478
	4283 Move W2, 494
	4284 Move W3, 2
	4285 Move W4, W31
	4286 Move X5, X31
	4287 Move [X10], X8
	4288 Move [X10+8], W9
	4289 Move [X31+840], W31
	4290 Move [X31+832], X31
	4291 Call LowerCaseMapping..ctor, X0, X1, X2, X3, X4
	4292 Move W8, [X19+24]
	4293 NotImplemented "Instruction CMP not yet implemented."
	4294 Move X8, [X31+832]
	4295 Move W9, [X31+840]
	4296 Add X0, X31, 816
	4297 Move W1, 497
	4298 Move W2, 498
	4299 Move W4, 499
	4300 Move W3, W31
	4301 Move X5, X31
	4302 Move [X19+536], X8
	4303 Move [X19+544], W9
	4304 Move [X31+824], W31
	4305 Move [X31+816], X31
	4306 Call LowerCaseMapping..ctor, X0, X1, X2, X3, X4
	4307 Move W8, [X19+24]
	4308 NotImplemented "Instruction CMP not yet implemented."
	4309 Move X8, [X31+816]
	4310 Move W9, [X31+824]
	4311 Add X10, X19, 548
	4312 Add X0, X31, 800
	4313 Move W1, 500
	4314 Move W2, 500
	4315 Move W4, 501
	4316 Move W3, W31
	4317 Move X5, X31
	4318 Move [X10], X8
	4319 Move [X10+8], W9
	4320 Move [X31+808], W31
	4321 Move [X31+800], X31
	4322 Call LowerCaseMapping..ctor, X0, X1, X2, X3, X4
	4323 Move W8, [X19+24]
	4324 NotImplemented "Instruction CMP not yet implemented."
	4325 Move X8, [X31+800]
	4326 Move W9, [X31+808]
	4327 Add X0, X31, 784
	4328 Move W1, 506
	4329 Move W2, 534
	4330 Move W3, 2
	4331 Move W4, W31
	4332 Move X5, X31
	4333 Move [X19+560], X8
	4334 Move [X19+568], W9
	4335 Move [X31+792], W31
	4336 Move [X31+784], X31
	4337 Call LowerCaseMapping..ctor, X0, X1, X2, X3, X4
	4338 Move W8, [X19+24]
	4339 NotImplemented "Instruction CMP not yet implemented."
	4340 Move X8, [X31+784]
	4341 Move W9, [X31+792]
	4342 Add X10, X19, 572
	4343 Add X0, X31, 768
	4344 Move W1, 902
	4345 Move W2, 902
	4346 Move W4, 940
	4347 Move W3, W31
	4348 Move X5, X31
	4349 Move [X10], X8
	4350 Move [X10+8], W9
	4351 Move [X31+776], W31
	4352 Move [X31+768], X31
	4353 Call LowerCaseMapping..ctor, X0, X1, X2, X3, X4
	4354 Move W8, [X19+24]
	4355 NotImplemented "Instruction CMP not yet implemented."
	4356 Move X8, [X31+768]
	4357 Move W9, [X31+776]
	4358 Add X0, X31, 752
	4359 Move W1, 904
	4360 Move W2, 906
	4361 Move W3, 1
	4362 Move W4, 37
	4363 Move X5, X31
	4364 Move [X19+584], X8
	4365 Move [X19+592], W9
	4366 Move [X31+760], W31
	4367 Move [X31+752], X31
	4368 Call LowerCaseMapping..ctor, X0, X1, X2, X3, X4
	4369 Move W8, [X19+24]
	4370 NotImplemented "Instruction CMP not yet implemented."
	4371 Move X8, [X31+752]
	4372 Move W9, [X31+760]
	4373 Add X10, X19, 596
	4374 Add X0, X31, 736
	4375 Move W1, 908
	4376 Move W2, 908
	4377 Move W4, 972
	4378 Move W3, W31
	4379 Move X5, X31
	4380 Move [X10], X8
	4381 Move [X10+8], W9
	4382 Move [X31+744], W31
	4383 Move [X31+736], X31
	4384 Call LowerCaseMapping..ctor, X0, X1, X2, X3, X4
	4385 Move W8, [X19+24]
	4386 NotImplemented "Instruction CMP not yet implemented."
	4387 Move X8, [X31+736]
	4388 Move W9, [X31+744]
	4389 Add X0, X31, 720
	4390 Move W1, 910
	4391 Move W2, 911
	4392 Move W3, 1
	4393 Move W4, 63
	4394 Move X5, X31
	4395 Move [X19+608], X8
	4396 Move [X19+616], W9
	4397 Move [X31+728], W31
	4398 Move [X31+720], X31
	4399 Call LowerCaseMapping..ctor, X0, X1, X2, X3, X4
	4400 Move W8, [X19+24]
	4401 NotImplemented "Instruction CMP not yet implemented."
	4402 Move X8, [X31+720]
	4403 Move W9, [X31+728]
	4404 Add X10, X19, 620
	4405 Add X0, X31, 704
	4406 Move W1, 913
	4407 Move W2, 939
	4408 Move W3, 1
	4409 Move W4, 32
	4410 Move X5, X31
	4411 Move [X10], X8
	4412 Move [X10+8], W9
	4413 Move [X31+712], W31
	4414 Move [X31+704], X31
	4415 Call LowerCaseMapping..ctor, X0, X1, X2, X3, X4
	4416 Move W8, [X19+24]
	4417 NotImplemented "Instruction CMP not yet implemented."
	4418 Move X8, [X31+704]
	4419 Move W9, [X31+712]
	4420 Add X0, X31, 688
	4421 Move W1, 994
	4422 Move W2, 1006
	4423 Move W3, 2
	4424 Move W4, W31
	4425 Move X5, X31
	4426 Move [X19+632], X8
	4427 Move [X19+640], W9
	4428 Move [X31+696], W31
	4429 Move [X31+688], X31
	4430 Call LowerCaseMapping..ctor, X0, X1, X2, X3, X4
	4431 Move W8, [X19+24]
	4432 NotImplemented "Instruction CMP not yet implemented."
	4433 Move X8, [X31+688]
	4434 Move W9, [X31+696]
	4435 Add X10, X19, 644
	4436 Add X0, X31, 672
	4437 Move W1, 1025
	4438 Move W2, 1039
	4439 Move W3, 1
	4440 Move W4, 80
	4441 Move X5, X31
	4442 Move [X10], X8
	4443 Move [X10+8], W9
	4444 Move [X31+680], W31
	4445 Move [X31+672], X31
	4446 Call LowerCaseMapping..ctor, X0, X1, X2, X3, X4
	4447 Move W8, [X19+24]
	4448 NotImplemented "Instruction CMP not yet implemented."
	4449 Move X8, [X31+672]
	4450 Move W9, [X31+680]
	4451 Add X0, X31, 656
	4452 Move W1, 1040
	4453 Move W2, 1071
	4454 Move W3, 1
	4455 Move W4, 32
	4456 Move X5, X31
	4457 Move [X19+656], X8
	4458 Move [X19+664], W9
	4459 Move [X31+664], W31
	4460 Move [X31+656], X31
	4461 Call LowerCaseMapping..ctor, X0, X1, X2, X3, X4
	4462 Move W8, [X19+24]
	4463 NotImplemented "Instruction CMP not yet implemented."
	4464 Move X8, [X31+656]
	4465 Move W9, [X31+664]
	4466 Add X10, X19, 668
	4467 Add X0, X31, 640
	4468 Move W1, 1120
	4469 Move W2, 1152
	4470 Move W3, 2
	4471 Move W4, W31
	4472 Move X5, X31
	4473 Move [X10], X8
	4474 Move [X10+8], W9
	4475 Move [X31+648], W31
	4476 Move [X31+640], X31
	4477 Call LowerCaseMapping..ctor, X0, X1, X2, X3, X4
	4478 Move W8, [X19+24]
	4479 NotImplemented "Instruction CMP not yet implemented."
	4480 Move X8, [X31+640]
	4481 Move W9, [X31+648]
	4482 Add X0, X31, 624
	4483 Move W1, 1168
	4484 Move W2, 1214
	4485 Move W3, 2
	4486 Move W4, W31
	4487 Move X5, X31
	4488 Move [X19+680], X8
	4489 Move [X19+688], W9
	4490 Move [X31+632], W31
	4491 Move [X31+624], X31
	4492 Call LowerCaseMapping..ctor, X0, X1, X2, X3, X4
	4493 Move W8, [X19+24]
	4494 NotImplemented "Instruction CMP not yet implemented."
	4495 Move X8, [X31+624]
	4496 Move W9, [X31+632]
	4497 Add X10, X19, 692
	4498 Add X0, X31, 608
	4499 Move W1, 1217
	4500 Move W2, 1219
	4501 Move W3, 3
	4502 Move W4, W31
	4503 Move X5, X31
	4504 Move [X10], X8
	4505 Move [X10+8], W9
	4506 Move [X31+616], W31
	4507 Move [X31+608], X31
	4508 Call LowerCaseMapping..ctor, X0, X1, X2, X3, X4
	4509 Move W8, [X19+24]
	4510 NotImplemented "Instruction CMP not yet implemented."
	4511 Move X8, [X31+608]
	4512 Move W9, [X31+616]
	4513 Add X0, X31, 592
	4514 Move W1, 1223
	4515 Move W2, 1223
	4516 Move W4, 1224
	4517 Move W3, W31
	4518 Move X5, X31
	4519 Move [X19+704], X8
	4520 Move [X19+712], W9
	4521 Move [X31+600], W31
	4522 Move [X31+592], X31
	4523 Call LowerCaseMapping..ctor, X0, X1, X2, X3, X4
	4524 Move W8, [X19+24]
	4525 NotImplemented "Instruction CMP not yet implemented."
	4526 Move X8, [X31+592]
	4527 Move W9, [X31+600]
	4528 Add X10, X19, 716
	4529 Add X0, X31, 576
	4530 Move W1, 1227
	4531 Move W2, 1227
	4532 Move W4, 1228
	4533 Move W3, W31
	4534 Move X5, X31
	4535 Move [X10], X8
	4536 Move [X10+8], W9
	4537 Move [X31+584], W31
	4538 Move [X31+576], X31
	4539 Call LowerCaseMapping..ctor, X0, X1, X2, X3, X4
	4540 Move W8, [X19+24]
	4541 NotImplemented "Instruction CMP not yet implemented."
	4542 Move X8, [X31+576]
	4543 Move W9, [X31+584]
	4544 Add X0, X31, 560
	4545 Move W1, 1232
	4546 Move W2, 1258
	4547 Move W3, 2
	4548 Move W4, W31
	4549 Move X5, X31
	4550 Move [X19+728], X8
	4551 Move [X19+736], W9
	4552 Move [X31+568], W31
	4553 Move [X31+560], X31
	4554 Call LowerCaseMapping..ctor, X0, X1, X2, X3, X4
	4555 Move W8, [X19+24]
	4556 NotImplemented "Instruction CMP not yet implemented."
	4557 Move X8, [X31+560]
	4558 Move W9, [X31+568]
	4559 Add X10, X19, 740
	4560 Add X0, X31, 544
	4561 Move W1, 1262
	4562 Move W2, 1268
	4563 Move W3, 2
	4564 Move W4, W31
	4565 Move X5, X31
	4566 Move [X10], X8
	4567 Move [X10+8], W9
	4568 Move [X31+552], W31
	4569 Move [X31+544], X31
	4570 Call LowerCaseMapping..ctor, X0, X1, X2, X3, X4
	4571 Move W8, [X19+24]
	4572 NotImplemented "Instruction CMP not yet implemented."
	4573 Move X8, [X31+544]
	4574 Move W9, [X31+552]
	4575 Add X0, X31, 528
	4576 Move W1, 1272
	4577 Move W2, 1272
	4578 Move W4, 1273
	4579 Move W3, W31
	4580 Move X5, X31
	4581 Move [X19+752], X8
	4582 Move [X19+760], W9
	4583 Move [X31+536], W31
	4584 Move [X31+528], X31
	4585 Call LowerCaseMapping..ctor, X0, X1, X2, X3, X4
	4586 Move W8, [X19+24]
	4587 NotImplemented "Instruction CMP not yet implemented."
	4588 Move X8, [X31+528]
	4589 Move W9, [X31+536]
	4590 Add X10, X19, 764
	4591 Add X0, X31, 512
	4592 Move W1, 1329
	4593 Move W2, 1366
	4594 Move W3, 1
	4595 Move W4, 48
	4596 Move X5, X31
	4597 Move [X10], X8
	4598 Move [X10+8], W9
	4599 Move [X31+520], W31
	4600 Move [X31+512], X31
	4601 Call LowerCaseMapping..ctor, X0, X1, X2, X3, X4
	4602 Move W8, [X19+24]
	4603 NotImplemented "Instruction CMP not yet implemented."
	4604 Move X8, [X31+512]
	4605 Move W9, [X31+520]
	4606 Add X0, X31, 496
	4607 Move W1, 0x10A0
	4608 Move W2, 0x10C5
	4609 Move W3, 1
	4610 Move W4, 48
	4611 Move X5, X31
	4612 Move [X19+776], X8
	4613 Move [X19+784], W9
	4614 Move [X31+504], W31
	4615 Move [X31+496], X31
	4616 Call LowerCaseMapping..ctor, X0, X1, X2, X3, X4
	4617 Move W8, [X19+24]
	4618 NotImplemented "Instruction CMP not yet implemented."
	4619 Move X8, [X31+496]
	4620 Move W9, [X31+504]
	4621 Add X10, X19, 788
	4622 Add X0, X31, 480
	4623 Move W1, 0x1E00
	4624 Move W2, 0x1EF8
	4625 Move W3, 2
	4626 Move W4, W31
	4627 Move X5, X31
	4628 Move [X10], X8
	4629 Move [X10+8], W9
	4630 Move [X31+488], W31
	4631 Move [X31+480], X31
	4632 Call LowerCaseMapping..ctor, X0, X1, X2, X3, X4
	4633 Move W8, [X19+24]
	4634 NotImplemented "Instruction CMP not yet implemented."
	4635 Move X8, [X31+480]
	4636 Move W9, [X31+488]
	4637 Add X0, X31, 464
	4638 Move W1, 0x1F08
	4639 Move W2, 0x1F0F
	4640 Move W3, 1
	4641 Move TEMP, 7
	4642 Not TEMP
	4643 Move W4, TEMP
	4644 Move X5, X31
	4645 Move [X19+800], X8
	4646 Move [X19+808], W9
	4647 Move [X31+472], W31
	4648 Move [X31+464], X31
	4649 Call LowerCaseMapping..ctor, X0, X1, X2, X3, X4
	4650 Move W8, [X19+24]
	4651 NotImplemented "Instruction CMP not yet implemented."
	4652 Move X8, [X31+464]
	4653 Move W9, [X31+472]
	4654 Add X10, X19, 812
	4655 Add X0, X31, 448
	4656 Move W1, 0x1F18
	4657 Move W2, 0x1F1F
	4658 Move W3, 1
	4659 Move TEMP, 7
	4660 Not TEMP
	4661 Move W4, TEMP
	4662 Move X5, X31
	4663 Move [X10], X8
	4664 Move [X10+8], W9
	4665 Move [X31+456], W31
	4666 Move [X31+448], X31
	4667 Call LowerCaseMapping..ctor, X0, X1, X2, X3, X4
	4668 Move W8, [X19+24]
	4669 NotImplemented "Instruction CMP not yet implemented."
	4670 Move X8, [X31+448]
	4671 Move W9, [X31+456]
	4672 Add X0, X31, 432
	4673 Move W1, 0x1F28
	4674 Move W2, 0x1F2F
	4675 Move W3, 1
	4676 Move TEMP, 7
	4677 Not TEMP
	4678 Move W4, TEMP
	4679 Move X5, X31
	4680 Move [X19+824], X8
	4681 Move [X19+832], W9
	4682 Move [X31+440], W31
	4683 Move [X31+432], X31
	4684 Call LowerCaseMapping..ctor, X0, X1, X2, X3, X4
	4685 Move W8, [X19+24]
	4686 NotImplemented "Instruction CMP not yet implemented."
	4687 Move X8, [X31+432]
	4688 Move W9, [X31+440]
	4689 Add X10, X19, 836
	4690 Add X0, X31, 416
	4691 Move W1, 0x1F38
	4692 Move W2, 0x1F3F
	4693 Move W3, 1
	4694 Move TEMP, 7
	4695 Not TEMP
	4696 Move W4, TEMP
	4697 Move X5, X31
	4698 Move [X10], X8
	4699 Move [X10+8], W9
	4700 Move [X31+424], W31
	4701 Move [X31+416], X31
	4702 Call LowerCaseMapping..ctor, X0, X1, X2, X3, X4
	4703 Move W8, [X19+24]
	4704 NotImplemented "Instruction CMP not yet implemented."
	4705 Move X8, [X31+416]
	4706 Move W9, [X31+424]
	4707 Add X0, X31, 400
	4708 Move W1, 0x1F48
	4709 Move W2, 0x1F4D
	4710 Move W3, 1
	4711 Move TEMP, 7
	4712 Not TEMP
	4713 Move W4, TEMP
	4714 Move X5, X31
	4715 Move [X19+848], X8
	4716 Move [X19+856], W9
	4717 Move [X31+408], W31
	4718 Move [X31+400], X31
	4719 Call LowerCaseMapping..ctor, X0, X1, X2, X3, X4
	4720 Move W8, [X19+24]
	4721 NotImplemented "Instruction CMP not yet implemented."
	4722 Move X8, [X31+400]
	4723 Move W9, [X31+408]
	4724 Add X10, X19, 860
	4725 Add X0, X31, 384
	4726 Move W1, 0x1F59
	4727 Move W2, 0x1F59
	4728 Move W4, 0x1F51
	4729 Move W3, W31
	4730 Move X5, X31
	4731 Move [X10], X8
	4732 Move [X10+8], W9
	4733 Move [X31+392], W31
	4734 Move [X31+384], X31
	4735 Call LowerCaseMapping..ctor, X0, X1, X2, X3, X4
	4736 Move W8, [X19+24]
	4737 NotImplemented "Instruction CMP not yet implemented."
	4738 Move X8, [X31+384]
	4739 Move W9, [X31+392]
	4740 Add X0, X31, 368
	4741 Move W1, 0x1F5B
	4742 Move W2, 0x1F5B
	4743 Move W4, 0x1F53
	4744 Move W3, W31
	4745 Move X5, X31
	4746 Move [X19+872], X8
	4747 Move [X19+880], W9
	4748 Move [X31+376], W31
	4749 Move [X31+368], X31
	4750 Call LowerCaseMapping..ctor, X0, X1, X2, X3, X4
	4751 Move W8, [X19+24]
	4752 NotImplemented "Instruction CMP not yet implemented."
	4753 Move X8, [X31+368]
	4754 Move W9, [X31+376]
	4755 Add X10, X19, 884
	4756 Add X0, X31, 352
	4757 Move W1, 0x1F5D
	4758 Move W2, 0x1F5D
	4759 Move W4, 0x1F55
	4760 Move W3, W31
	4761 Move X5, X31
	4762 Move [X10], X8
	4763 Move [X10+8], W9
	4764 Move [X31+360], W31
	4765 Move [X31+352], X31
	4766 Call LowerCaseMapping..ctor, X0, X1, X2, X3, X4
	4767 Move W8, [X19+24]
	4768 NotImplemented "Instruction CMP not yet implemented."
	4769 Move X8, [X31+352]
	4770 Move W9, [X31+360]
	4771 Add X0, X31, 336
	4772 Move W1, 0x1F5F
	4773 Move W2, 0x1F5F
	4774 Move W4, 0x1F57
	4775 Move W3, W31
	4776 Move X5, X31
	4777 Move [X19+896], X8
	4778 Move [X19+904], W9
	4779 Move [X31+344], W31
	4780 Move [X31+336], X31
	4781 Call LowerCaseMapping..ctor, X0, X1, X2, X3, X4
	4782 Move W8, [X19+24]
	4783 NotImplemented "Instruction CMP not yet implemented."
	4784 Move X8, [X31+336]
	4785 Move W9, [X31+344]
	4786 Add X10, X19, 908
	4787 Add X0, X31, 320
	4788 Move W1, 0x1F68
	4789 Move W2, 0x1F6F
	4790 Move W3, 1
	4791 Move TEMP, 7
	4792 Not TEMP
	4793 Move W4, TEMP
	4794 Move X5, X31
	4795 Move [X10], X8
	4796 Move [X10+8], W9
	4797 Move [X31+328], W31
	4798 Move [X31+320], X31
	4799 Call LowerCaseMapping..ctor, X0, X1, X2, X3, X4
	4800 Move W8, [X19+24]
	4801 NotImplemented "Instruction CMP not yet implemented."
	4802 Move X8, [X31+320]
	4803 Move W9, [X31+328]
	4804 Add X0, X31, 304
	4805 Move W1, 0x1F88
	4806 Move W2, 0x1F8F
	4807 Move W3, 1
	4808 Move TEMP, 7
	4809 Not TEMP
	4810 Move W4, TEMP
	4811 Move X5, X31
	4812 Move [X19+920], X8
	4813 Move [X19+928], W9
	4814 Move [X31+312], W31
	4815 Move [X31+304], X31
	4816 Call LowerCaseMapping..ctor, X0, X1, X2, X3, X4
	4817 Move W8, [X19+24]
	4818 NotImplemented "Instruction CMP not yet implemented."
	4819 Move X8, [X31+304]
	4820 Move W9, [X31+312]
	4821 Add X10, X19, 932
	4822 Add X0, X31, 288
	4823 Move W1, 0x1F98
	4824 Move W2, 0x1F9F
	4825 Move W3, 1
	4826 Move TEMP, 7
	4827 Not TEMP
	4828 Move W4, TEMP
	4829 Move X5, X31
	4830 Move [X10], X8
	4831 Move [X10+8], W9
	4832 Move [X31+296], W31
	4833 Move [X31+288], X31
	4834 Call LowerCaseMapping..ctor, X0, X1, X2, X3, X4
	4835 Move W8, [X19+24]
	4836 NotImplemented "Instruction CMP not yet implemented."
	4837 Move X8, [X31+288]
	4838 Move W9, [X31+296]
	4839 Add X0, X31, 272
	4840 Move W1, 0x1FA8
	4841 Move W2, 0x1FAF
	4842 Move W3, 1
	4843 Move TEMP, 7
	4844 Not TEMP
	4845 Move W4, TEMP
	4846 Move X5, X31
	4847 Move [X19+944], X8
	4848 Move [X19+952], W9
	4849 Move [X31+280], W31
	4850 Move [X31+272], X31
	4851 Call LowerCaseMapping..ctor, X0, X1, X2, X3, X4
	4852 Move W8, [X19+24]
	4853 NotImplemented "Instruction CMP not yet implemented."
	4854 Move X8, [X31+272]
	4855 Move W9, [X31+280]
	4856 Add X10, X19, 956
	4857 Add X0, X31, 256
	4858 Move W1, 0x1FB8
	4859 Move W2, 0x1FB9
	4860 Move W3, 1
	4861 Move TEMP, 7
	4862 Not TEMP
	4863 Move W4, TEMP
	4864 Move X5, X31
	4865 Move [X10], X8
	4866 Move [X10+8], W9
	4867 Move [X31+264], W31
	4868 Move [X31+256], X31
	4869 Call LowerCaseMapping..ctor, X0, X1, X2, X3, X4
	4870 Move W8, [X19+24]
	4871 NotImplemented "Instruction CMP not yet implemented."
	4872 Move X8, [X31+256]
	4873 Move W9, [X31+264]
	4874 Add X0, X31, 240
	4875 Move W1, 0x1FBA
	4876 Move W2, 0x1FBB
	4877 Move W3, 1
	4878 Move TEMP, 73
	4879 Not TEMP
	4880 Move W4, TEMP
	4881 Move X5, X31
	4882 Move [X19+968], X8
	4883 Move [X19+976], W9
	4884 Move [X31+248], W31
	4885 Move [X31+240], X31
	4886 Call LowerCaseMapping..ctor, X0, X1, X2, X3, X4
	4887 Move W8, [X19+24]
	4888 NotImplemented "Instruction CMP not yet implemented."
	4889 Move X8, [X31+240]
	4890 Move W9, [X31+248]
	4891 Add X10, X19, 980
	4892 Add X0, X31, 224
	4893 Move W1, 0x1FBC
	4894 Move W2, 0x1FBC
	4895 Move W4, 0x1FB3
	4896 Move W3, W31
	4897 Move X5, X31
	4898 Move [X10], X8
	4899 Move [X10+8], W9
	4900 Move [X31+232], W31
	4901 Move [X31+224], X31
	4902 Call LowerCaseMapping..ctor, X0, X1, X2, X3, X4
	4903 Move W8, [X19+24]
	4904 NotImplemented "Instruction CMP not yet implemented."
	4905 Move X8, [X31+224]
	4906 Move W9, [X31+232]
	4907 Add X0, X31, 208
	4908 Move W1, 0x1FC8
	4909 Move W2, 0x1FCB
	4910 Move W3, 1
	4911 Move TEMP, 85
	4912 Not TEMP
	4913 Move W4, TEMP
	4914 Move X5, X31
	4915 Move [X19+992], X8
	4916 Move [X19+1000], W9
	4917 Move [X31+216], W31
	4918 Move [X31+208], X31
	4919 Call LowerCaseMapping..ctor, X0, X1, X2, X3, X4
	4920 Move W8, [X19+24]
	4921 NotImplemented "Instruction CMP not yet implemented."
	4922 Move X8, [X31+208]
	4923 Move W9, [X31+216]
	4924 Add X10, X19, 1004
	4925 Add X0, X31, 192
	4926 Move W1, 0x1FCC
	4927 Move W2, 0x1FCC
	4928 Move W4, 0x1FC3
	4929 Move W3, W31
	4930 Move X5, X31
	4931 Move [X10], X8
	4932 Move [X10+8], W9
	4933 Move [X31+200], W31
	4934 Move [X31+192], X31
	4935 Call LowerCaseMapping..ctor, X0, X1, X2, X3, X4
	4936 Move W8, [X19+24]
	4937 NotImplemented "Instruction CMP not yet implemented."
	4938 Move X8, [X31+192]
	4939 Move W9, [X31+200]
	4940 Add X0, X31, 176
	4941 Move W1, 0x1FD8
	4942 Move W2, 0x1FD9
	4943 Move W3, 1
	4944 Move TEMP, 7
	4945 Not TEMP
	4946 Move W4, TEMP
	4947 Move X5, X31
	4948 Move [X19+1016], X8
	4949 Move [X19+1024], W9
	4950 Move [X31+184], W31
	4951 Move [X31+176], X31
	4952 Call LowerCaseMapping..ctor, X0, X1, X2, X3, X4
	4953 Move W8, [X19+24]
	4954 NotImplemented "Instruction CMP not yet implemented."
	4955 Move X8, [X31+176]
	4956 Move W9, [X31+184]
	4957 Add X10, X19, 1028
	4958 Add X0, X31, 160
	4959 Move W1, 0x1FDA
	4960 Move W2, 0x1FDB
	4961 Move W3, 1
	4962 Move TEMP, 99
	4963 Not TEMP
	4964 Move W4, TEMP
	4965 Move X5, X31
	4966 Move [X10], X8
	4967 Move [X10+8], W9
	4968 Move [X31+168], W31
	4969 Move [X31+160], X31
	4970 Call LowerCaseMapping..ctor, X0, X1, X2, X3, X4
	4971 Move W8, [X19+24]
	4972 NotImplemented "Instruction CMP not yet implemented."
	4973 Move X8, [X31+160]
	4974 Move W9, [X31+168]
	4975 Add X0, X31, 144
	4976 Move W1, 0x1FE8
	4977 Move W2, 0x1FE9
	4978 Move W3, 1
	4979 Move TEMP, 7
	4980 Not TEMP
	4981 Move W4, TEMP
	4982 Move X5, X31
	4983 Move [X19+1040], X8
	4984 Move [X19+1048], W9
	4985 Move [X31+152], W31
	4986 Move [X31+144], X31
	4987 Call LowerCaseMapping..ctor, X0, X1, X2, X3, X4
	4988 Move W8, [X19+24]
	4989 NotImplemented "Instruction CMP not yet implemented."
	4990 Move X8, [X31+144]
	4991 Move W9, [X31+152]
	4992 Add X10, X19, 1052
	4993 Add X0, X31, 128
	4994 Move W1, 0x1FEA
	4995 Move W2, 0x1FEB
	4996 Move W3, 1
	4997 Move TEMP, 111
	4998 Not TEMP
	4999 Move W4, TEMP
	5000 Move X5, X31
	5001 Move [X10], X8
	5002 Move [X10+8], W9
	5003 Move [X31+136], W31
	5004 Move [X31+128], X31
	5005 Call LowerCaseMapping..ctor, X0, X1, X2, X3, X4
	5006 Move W8, [X19+24]
	5007 NotImplemented "Instruction CMP not yet implemented."
	5008 Move X8, [X31+128]
	5009 Move W9, [X31+136]
	5010 Add X0, X31, 112
	5011 Move W1, 0x1FEC
	5012 Move W2, 0x1FEC
	5013 Move W4, 0x1FE5
	5014 Move W3, W31
	5015 Move X5, X31
	5016 Move [X19+1064], X8
	5017 Move [X19+1072], W9
	5018 Move [X31+120], W31
	5019 Move [X31+112], X31
	5020 Call LowerCaseMapping..ctor, X0, X1, X2, X3, X4
	5021 Move W8, [X19+24]
	5022 NotImplemented "Instruction CMP not yet implemented."
	5023 Move X8, [X31+112]
	5024 Move W9, [X31+120]
	5025 Add X10, X19, 1076
	5026 Add X0, X31, 96
	5027 Move W1, 0x1FF8
	5028 Move W2, 0x1FF9
	5029 Move W3, 1
	5030 Move TEMP, 127
	5031 Not TEMP
	5032 Move W4, TEMP
	5033 Move X5, X31
	5034 Move [X10], X8
	5035 Move [X10+8], W9
	5036 Move [X31+104], W31
	5037 Move [X31+96], X31
	5038 Call LowerCaseMapping..ctor, X0, X1, X2, X3, X4
	5039 Move W8, [X19+24]
	5040 NotImplemented "Instruction CMP not yet implemented."
	5041 Move X8, [X31+96]
	5042 Move W9, [X31+104]
	5043 Add X0, X31, 80
	5044 Move W1, 0x1FFA
	5045 Move W2, 0x1FFB
	5046 Move W3, 1
	5047 Move TEMP, 125
	5048 Not TEMP
	5049 Move W4, TEMP
	5050 Move X5, X31
	5051 Move [X19+1088], X8
	5052 Move [X19+1096], W9
	5053 Move [X31+88], W31
	5054 Move [X31+80], X31
	5055 Call LowerCaseMapping..ctor, X0, X1, X2, X3, X4
	5056 Move W8, [X19+24]
	5057 NotImplemented "Instruction CMP not yet implemented."
	5058 Move X8, [X31+80]
	5059 Move W9, [X31+88]
	5060 Add X10, X19, 1100
	5061 Add X0, X31, 64
	5062 Move W1, 0x1FFC
	5063 Move W2, 0x1FFC
	5064 Move W4, 0x1FF3
	5065 Move W3, W31
	5066 Move X5, X31
	5067 Move [X10], X8
	5068 Move [X10+8], W9
	5069 Move [X31+72], W31
	5070 Move [X31+64], X31
	5071 Call LowerCaseMapping..ctor, X0, X1, X2, X3, X4
	5072 Move W8, [X19+24]
	5073 NotImplemented "Instruction CMP not yet implemented."
	5074 Move X8, [X31+64]
	5075 Move W9, [X31+72]
	5076 Add X0, X31, 48
	5077 Move W1, 0x2160
	5078 Move W2, 0x216F
	5079 Move W3, 1
	5080 Move W4, 16
	5081 Move X5, X31
	5082 Move [X19+1112], X8
	5083 Move [X19+1120], W9
	5084 Move [X31+56], W31
	5085 Move [X31+48], X31
	5086 Call LowerCaseMapping..ctor, X0, X1, X2, X3, X4
	5087 Move W8, [X19+24]
	5088 NotImplemented "Instruction CMP not yet implemented."
	5089 Move X8, [X31+48]
	5090 Move W9, [X31+56]
	5091 Add X10, X19, 1124
	5092 Add X0, X31, 32
	5093 Move W1, 0x24B6
	5094 Move W2, 0x24D0
	5095 Move W3, 1
	5096 Move W4, 26
	5097 Move X5, X31
	5098 Move [X10], X8
	5099 Move [X10+8], W9
	5100 Move [X31+40], W31
	5101 Move [X31+32], X31
	5102 Call LowerCaseMapping..ctor, X0, X1, X2, X3, X4
	5103 Move W8, [X19+24]
	5104 NotImplemented "Instruction CMP not yet implemented."
	5105 Move X8, [X31+32]
	5106 Move W9, [X31+40]
	5107 Add X0, X31, 16
	5108 Move W1, 0xFF21
	5109 Move W2, 0xFF3A
	5110 Move W3, 1
	5111 Move W4, 32
	5112 Move X5, X31
	5113 Move [X19+1136], X8
	5114 Move [X19+1144], W9
	5115 Move [X31+24], W31
	5116 Move [X31+16], X31
	5117 Call LowerCaseMapping..ctor, X0, X1, X2, X3, X4
	5118 Move W8, [X19+24]
	5119 NotImplemented "Instruction CMP not yet implemented."
	5120 Move X8, [X31+16]
	5121 Move W9, [X31+24]
	5122 Add X10, X19, 1148
	5123 Move [X10], X8
	5124 Move [X10+8], W9
	5125 Move X8, [X23]
	5126 Move X8, [X8+184]
	5127 Move [X8+104], X19
	5128 Add X31, X31, 1520
	5129 Move X20, [X31+80]
	5130 Move X19, [X31+88]
	5131 Move X22, [X31+64]
	5132 Move X21, [X31+72]
	5133 Move X24, [X31+48]
	5134 Move X23, [X31+56]
	5135 Move X26, [X31+32]
	5136 Move X25, [X31+40]
	5137 Move X28, [X31+16]
	5138 Move X27, [X31+24]
	5139 Move X29, [X31+96]
	5140 Move X30, [X31+104]
	5141 Return 
	5142 Call 0x1C17F28
	5143 Call 0x1C17F20
	5144 Subtract X31, X31, 128
	5145 Move [X31+96], X30
	5146 Move [X31+104], X21
	5147 Move [X31+112], X20
	5148 Move [X31+120], X19
	5149 Move X21, 0xDA5000
	5150 Move W8, [X21+1367]
	5151 Move X19, X1
	5152 Move X20, X0
	5153 Compare W8, 0
	5154 JumpIfNotEqual {5163}
	5155 Move X0, 0xB00000
	5156 Move X0, [X0+2048]
	5157 Call 0x1C17CF4
	5158 Move X0, 0xAC0000
	5159 Move X0, [X0+1536]
	5160 Call 0x1C17CF4
	5161 Move W8, 1
	5162 Move [X21+1367], W8
	5163 Move X21, 0xAC0000
	5164 Move X21, [X21+1536]
	5165 Move X0, [X21]
	5166 Move W8, [X0+224]
	5167 Compare W8, 0
	5168 JumpIfNotEqual {5171}
	5169 Call 0x1C17DFC
	5170 Move X0, [X21]
	5171 Move X8, [X0+184]
	5172 Move W9, [X8+16]
	5173 NotImplemented "Instruction CMP not yet implemented."
	5174 Move X8, [X20+16]
	5175 Move V0, [X20]
	5176 Move [X31+80], X8
	5177 Move [X31+4], V0
	5178 Move W8, [X0+224]
	5179 Compare W8, 0
	5180 JumpIfNotEqual {5182}
	5181 Call 0x1C17DFC
	5182 Move V0, [X31+4]
	5183 Move X8, [X31+80]
	5184 Add X0, X31, 0
	5185 Move X1, X19
	5186 Move [X31], V0
	5187 Move [X31+16], X8
	5188 Call Regex.TryGetCacheValueSmall, X0, X1
	5189 Move W9, [X0+224]
	5190 Compare W9, 0
	5191 JumpIfNotEqual {5195}
	5192 Call 0x1C17DFC
	5193 Move X8, [X21]
	5194 Move X8, [X8+184]
	5195 Move X0, [X8+8]
	5196 Move X8, [X20+16]
	5197 Move V0, [X20]
	5198 Move [X31+48], X8
	5199 Move [X31+2], V0
	5200 Compare X0, 0
	5201 JumpIfEqual {5219}
	5202 Move X8, 0xB00000
	5203 Move X8, [X8+2048]
	5204 Move V0, [X31+2]
	5205 Move X9, [X31+48]
	5206 Add X1, X31, 64
	5207 Move X3, [X8]
	5208 Move X2, X19
	5209 Move [X31+4], V0
	5210 Move [X31+80], X9
	5211 Call Dictionary`2<CachedCodeEntryKey, Object>.TryGetValue, X0, X1, X2
	5212 Move X20, [X31+112]
	5213 Move X19, [X31+120]
	5214 Move X30, [X31+96]
	5215 Move X21, [X31+104]
	5216 And W0, W0, 1
	5217 Add X31, X31, 128
	5218 Return 
	5219 Call 0x1C17F20

