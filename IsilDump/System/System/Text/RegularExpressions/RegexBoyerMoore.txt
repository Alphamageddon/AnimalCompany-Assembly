Type: System.Text.RegularExpressions.RegexBoyerMoore

Method: System.Void .ctor(System.String pattern, System.Boolean caseInsensitive, System.Boolean rightToLeft, System.Globalization.CultureInfo culture)

Disassembly:
	0x03634844 ADRP X0, 0xB07000
	0x03634848 LDR X0, [X0 + 0x8E8]
	0x0363484C BL 0x1C16CF4
	0x03634850 ADRP X0, 0xB07000
	0x03634854 LDR X0, [X0 + 0x8F0]
	0x03634858 BL 0x1C16CF4
	0x0363485C ADRP X0, 0xB07000
	0x03634860 LDR X0, [X0 + 0x8F8]
	0x03634864 BL 0x1C16CF4
	0x03634868 MOVZ W8, 0x1
	0x0363486C STRB W8, [X25 + 0x53F]
	0x03634870 LDR X0, [X24]
	0x03634874 STR X31, [X31 + 0x8]
	0x03634878 LDR W8, [X0 + 0xE0]
	0x0363487C CBNZ W8, 0x3634888
	0x03634880 BL 0x1C16DFC
	0x03634884 LDR X0, [X24]
	0x03634888 LDR X8, [X0 + 0xB8]
	0x0363488C LDR X0, [X8 + 0x58]
	0x03634890 CBZ X0, 0x36349F0
	0x03634894 ADRP X8, 0xAF4000
	0x03634898 LDR X8, [X8 + 0x4F8]
	0x0363489C ADD X2, X31, 0x8
	0x036348A0 MOV X1, X21
	0x036348A4 LDR X3, [X8]
	0x036348A8 BL 0x2AA6B2C
	0x036348AC TBZ X0, 0x0, 0x36348E0
	0x036348B0 LDR X0, [X24]
	0x036348B4 LDR W8, [X0 + 0xE0]
	0x036348B8 CBNZ W8, 0x36348C0
	0x036348BC BL 0x1C16DFC
	0x036348C0 CBZ X21, 0x36349F0
	0x036348C4 LDR X8, [X24]
	0x036348C8 MOV X0, X21
	0x036348CC MOV X2, X31
	0x036348D0 LDR X8, [X8 + 0xB8]
	0x036348D4 LDR X1, [X8]
	0x036348D8 BL 0x322693C
	0x036348DC TBZ X0, 0x0, 0x3634910
	0x036348E0 LDR X0, [X24]
	0x036348E4 LDR W8, [X0 + 0xE0]
	0x036348E8 CBNZ W8, 0x36348F0
	0x036348EC BL 0x1C16DFC
	0x036348F0 AND W1, W20, 0x1
	0x036348F4 MOV X0, X21
	0x036348F8 MOV X2, X22
	0x036348FC BL 0x3634A7C
	0x03634900 MOV X1, X0
	0x03634904 MOV X0, X19
	0x03634908 BL 0x36345B8
	0x0363490C B 0x36349D8
	0x03634910 TBZ X23, 0x0, 0x36349A0
	0x03634914 ADRP X8, 0xB07000
	0x03634918 LDR X8, [X8 + 0x8F0]
	0x0363491C MOV X0, X21
	0x03634920 MOV X2, X31
	0x03634924 LDR X1, [X8]
	0x03634928 BL 0x322693C
	0x0363492C TBNZ X0, 0x0, 0x3634968
	0x03634930 ADRP X8, 0xB07000
	0x03634934 LDR X8, [X8 + 0x8F8]
	0x03634938 MOV X0, X21
	0x0363493C MOV X2, X31
	0x03634940 LDR X1, [X8]
	0x03634944 BL 0x322693C
	0x03634948 TBNZ X0, 0x0, 0x3634968
	0x0363494C ADRP X8, 0xB07000
	0x03634950 LDR X8, [X8 + 0x8E8]
	0x03634954 MOV X0, X21
	0x03634958 MOV X2, X31
	0x0363495C LDR X1, [X8]
	0x03634960 BL 0x322693C
	0x03634964 TBZ X0, 0x0, 0x36349A0
	0x03634968 LDR X0, [X24]
	0x0363496C LDR W8, [X0 + 0xE0]
	0x03634970 CBNZ W8, 0x363497C
	0x03634974 BL 0x1C16DFC
	0x03634978 LDR X0, [X24]
	0x0363497C LDR X8, [X0 + 0xB8]
	0x03634980 LDR X0, [X8 + 0x58]
	0x03634984 CBZ X0, 0x36349F0
	0x03634988 LDR X1, [X8]
	0x0363498C ADRP X8, 0xAEF000
	0x03634990 LDR X8, [X8 + 0xAF0]
	0x03634994 LDR X2, [X8]
	0x03634998 BL 0x2AA5018
	0x0363499C STR X0, [X31 + 0x8]
	0x036349A0 TBZ X20, 0x0, 0x36349C4
	0x036349A4 LDR X0, [X24]
	0x036349A8 LDR X20, [X31 + 0x8]
	0x036349AC LDR W8, [X0 + 0xE0]
	0x036349B0 CBNZ W8, 0x36349B8
	0x036349B4 BL 0x1C16DFC
	0x036349B8 MOV X0, X20
	0x036349BC BL 0x36349F4
	0x036349C0 STR X0, [X31 + 0x8]
	0x036349C4 LDR X0, [X19 + 0x18]
	0x036349C8 CBZ X0, 0x36349F0
	0x036349CC LDR X1, [X31 + 0x8]
	0x036349D0 MOV X2, X31
	0x036349D4 BL 0x32333E0
	0x036349D8 LDP X20, X19, [X31 + 0x40]
	0x036349DC LDP X22, X21, [X31 + 0x30]
	0x036349E0 LDP X24, X23, [X31 + 0x20]
	0x036349E4 LDP X30, X25, [X31 + 0x10]
	0x036349E8 ADD X31, X31, 0x50
	0x036349EC RET
	0x036349F0 BL 0x1C16F20
	0x036349F4 STP X30, X21, [X31 - 0x20]!
	0x036349F8 STP X20, X19, [X31 + 0x10]
	0x036349FC CBZ X0, 0x3634A6C
	0x03634A00 MOV X19, X0
	0x03634A04 LDR W0, [X0 + 0x10]
	0x03634A08 MOV X1, X31
	0x03634A0C BL 0x3235A9C
	0x03634A10 LDR W8, [X19 + 0x10]
	0x03634A14 MOV X20, X0
	0x03634A18 CMP W8, 0x1
	0x03634A1C B.LT 0x3634A58
	0x03634A20 MOV W21, W31
	0x03634A24 MOV X0, X19
	0x03634A28 MOV W1, W21
	0x03634A2C MOV X2, X31
	0x03634A30 BL 0x3222A1C
	0x03634A34 CBZ X20, 0x3634A78
	0x03634A38 SUB W1, W31, W0
	0x03634A3C MOV X0, X20
	0x03634A40 MOV X2, X31
	0x03634A44 BL 0x3233D30
	0x03634A48 LDR W8, [X19 + 0x10]
	0x03634A4C ADD W21, W21, 0x1
	0x03634A50 CMP W21, W8
	0x03634A54 B.LT 0x3634A24
	0x03634A58 MOV X0, X20
	0x03634A5C LDP X20, X19, [X31 + 0x10]
	0x03634A60 MOV X1, X31
	0x03634A64 LDP X30, X21, [X31], #0x20
	0x03634A68 B 0x3235BE8
	0x03634A6C LDP X20, X19, [X31 + 0x10]
	0x03634A70 LDP X30, X21, [X31], #0x20
	0x03634A74 RET
	0x03634A78 BL 0x1C16F20
	0x03634A7C STR X30, [X31 - 0x50]!
	0x03634A80 STP X26, X25, [X31 + 0x10]
	0x03634A84 STP X24, X23, [X31 + 0x20]
	0x03634A88 STP X22, X21, [X31 + 0x30]
	0x03634A8C STP X20, X19, [X31 + 0x40]
	0x03634A90 ADRP X23, 0xDAC000
	0x03634A94 ADRP X22, 0xB07000
	0x03634A98 LDRB W8, [X23 + 0x555]
	0x03634A9C LDR X22, [X22 + 0x8E0]
	0x03634AA0 MOV X20, X2
	0x03634AA4 MOV W19, W1
	0x03634AA8 MOV X21, X0
	0x03634AAC TBNZ X8, 0x0, 0x3634AD0
	0x03634AB0 ADRP X0, 0xB07000
	0x03634AB4 LDR X0, [X0 + 0x8E0]
	0x03634AB8 BL 0x1C16CF4
	0x03634ABC ADRP X0, 0xB07000
	0x03634AC0 LDR X0, [X0 + 0x900]
	0x03634AC4 BL 0x1C16CF4
	0x03634AC8 MOVZ W8, 0x1
	0x03634ACC STRB W8, [X23 + 0x555]
	0x03634AD0 LDR X0, [X22]
	0x03634AD4 LDR W8, [X0 + 0xE0]
	0x03634AD8 CBNZ W8, 0x3634AE4
	0x03634ADC BL 0x1C16DFC
	0x03634AE0 LDR X0, [X22]
	0x03634AE4 LDR X8, [X0 + 0xB8]
	0x03634AE8 LDR X8, [X8 + 0x60]
	0x03634AEC CBZ X8, 0x3634CD4
	0x03634AF0 LDR W23, [X8 + 0x18]
	0x03634AF4 CBZ W23, 0x3634B88
	0x03634AF8 MOV W24, W31
	0x03634AFC LDR X0, [X22]
	0x03634B00 ADD W9, W24, W23
	0x03634B04 CMP W9, 0x0
	0x03634B08 CINC W25, W9, LT
	0x03634B0C LDR W8, [X0 + 0xE0]
	0x03634B10 CBNZ W8, 0x3634B1C
	0x03634B14 BL 0x1C16DFC
	0x03634B18 LDR X0, [X22]
	0x03634B1C LDR X8, [X0 + 0xB8]
	0x03634B20 LDR X8, [X8 + 0x60]
	0x03634B24 CBZ X8, 0x3634CD4
	0x03634B28 LDR W9, [X8 + 0x18]
	0x03634B2C SBFM W25, W25, 0x1, 0x1F
	0x03634B30 CMP W25, W9
	0x03634B34 B.CS 0x3634CD0
	0x03634B38 SXTW X26, W25
	0x03634B3C ADD X8, X8, X26, 0x3, LSL
	0x03634B40 LDR X8, [X8 + 0x20]
	0x03634B44 CBZ X8, 0x3634CD4
	0x03634B48 LDR W9, [X8 + 0x18]
	0x03634B4C CBZ W9, 0x3634CD0
	0x03634B50 LDR X1, [X8 + 0x20]
	0x03634B54 MOVZ W2, 0x4
	0x03634B58 MOV X0, X21
	0x03634B5C MOV X3, X31
	0x03634B60 BL 0x322590C
	0x03634B64 TBNZ X0, 0x1F, 0x3634B7C
	0x03634B68 CBZ W0, 0x3634BFC
	0x03634B6C ADD W24, W25, 0x1
	0x03634B70 CMP W24, W23
	0x03634B74 B.NE 0x3634AFC
	0x03634B78 B 0x3634B88
	0x03634B7C CMP W24, W25
	0x03634B80 MOV W23, W25
	0x03634B84 B.NE 0x3634AFC
	0x03634B88 ADRP X0, 0xB07000
	0x03634B8C LDR X0, [X0 + 0x908]
	0x03634B90 BL 0x1C16D08
	0x03634B94 MOV X1, X21
	0x03634B98 MOV X2, X31
	0x03634B9C BL 0x32094D4
	0x03634BA0 MOV X19, X0
	0x03634BA4 ADRP X0, 0xB07000
	0x03634BA8 LDR X0, [X0 + 0x910]
	0x03634BAC BL 0x1C16D08
	0x03634BB0 MOV X1, X20
	0x03634BB4 MOV X2, X19
	0x03634BB8 MOV X3, X31
	0x03634BBC BL 0x320A264
	0x03634BC0 MOV X19, X0
	0x03634BC4 ADRP X0, 0xAC7000
	0x03634BC8 LDR X0, [X0 + 0x578]
	0x03634BCC BL 0x1C16D08
	0x03634BD0 BL 0x1C16F10
	0x03634BD4 MOV X1, X19
	0x03634BD8 MOV X2, X31
	0x03634BDC MOV X20, X0
	0x03634BE0 BL 0x3314A68
	0x03634BE4 ADRP X0, 0xB07000
	0x03634BE8 LDR X0, [X0 + 0x918]
	0x03634BEC BL 0x1C16D08
	0x03634BF0 MOV X1, X0
	0x03634BF4 MOV X0, X20
	0x03634BF8 BL 0x1C16DEC
	0x03634BFC LDR X0, [X22]
	0x03634C00 LDR W8, [X0 + 0xE0]
	0x03634C04 CBNZ W8, 0x3634C10
	0x03634C08 BL 0x1C16DFC
	0x03634C0C LDR X0, [X22]
	0x03634C10 LDR X8, [X0 + 0xB8]
	0x03634C14 LDR X8, [X8 + 0x60]
	0x03634C18 CBZ X8, 0x3634CD4
	0x03634C1C LDR W9, [X8 + 0x18]
	0x03634C20 CMP W25, W9
	0x03634C24 B.CS 0x3634CD0
	0x03634C28 ADD X8, X8, X26, 0x3, LSL
	0x03634C2C LDR X8, [X8 + 0x20]
	0x03634C30 CBZ X8, 0x3634CD4
	0x03634C34 LDR W9, [X8 + 0x18]
	0x03634C38 CMP W9, 0x1
	0x03634C3C B.LS 0x3634CD0
	0x03634C40 LDR X20, [X8 + 0x28]
	0x03634C44 TBZ X19, 0x0, 0x3634C90
	0x03634C48 CBZ X20, 0x3634CD4
	0x03634C4C MOV X0, X20
	0x03634C50 MOV W1, W31
	0x03634C54 MOV X2, X31
	0x03634C58 BL 0x3222A1C
	0x03634C5C ANDS W31, W0, 0xFFFF
	0x03634C60 B.EQ 0x3634CAC
	0x03634C64 ADRP X8, 0xB07000
	0x03634C68 LDR X8, [X8 + 0x900]
	0x03634C6C MOV X1, X20
	0x03634C70 LDP X20, X19, [X31 + 0x40]
	0x03634C74 LDP X22, X21, [X31 + 0x30]
	0x03634C78 LDR X0, [X8]
	0x03634C7C LDP X24, X23, [X31 + 0x20]
	0x03634C80 LDP X26, X25, [X31 + 0x10]
	0x03634C84 MOV X2, X31
	0x03634C88 LDR X30, [X31], #0x50
	0x03634C8C B 0x321B938
	0x03634C90 MOV X0, X20
	0x03634C94 LDP X20, X19, [X31 + 0x40]
	0x03634C98 LDP X22, X21, [X31 + 0x30]
	0x03634C9C LDP X24, X23, [X31 + 0x20]
	0x03634CA0 LDP X26, X25, [X31 + 0x10]
	0x03634CA4 LDR X30, [X31], #0x50
	0x03634CA8 RET
	0x03634CAC MOV X0, X20
	0x03634CB0 LDP X20, X19, [X31 + 0x40]
	0x03634CB4 LDP X22, X21, [X31 + 0x30]
	0x03634CB8 LDP X24, X23, [X31 + 0x20]
	0x03634CBC LDP X26, X25, [X31 + 0x10]
	0x03634CC0 MOVZ W1, 0x1
	0x03634CC4 MOV X2, X31
	0x03634CC8 LDR X30, [X31], #0x50
	0x03634CCC B 0x322B484
	0x03634CD0 BL 0x1C16F28
	0x03634CD4 BL 0x1C16F20

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X24, 0xDAD000
	015 Move W8, [X24+1338]
	016 Move X22, X4
	017 Move W21, W3
	018 Move W23, W2
	019 Move X20, X1
	020 Move X19, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {33}
	025 Move X0, 0xAF8000
	026 Move X0, [X0+3488]
	027 Call 0x1C17CF4
	028 Move X0, 0xAC1000
	029 Move X0, [X0+3672]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X24+1338], W8
	033 Move X0, X19
	034 Move X1, X31
	035 Call Object..ctor, X0
	036 Move TEMP, X23
	037 And TEMP, TEMP, 1
	038 Compare TEMP, 1
	039 JumpIfNotEqual {82}
	040 Compare X20, 0
	041 JumpIfEqual {313}
	042 Move W0, [X20+16]
	043 Move X1, X31
	044 Call StringBuilderCache.Acquire, X0
	045 Move W8, [X20+16]
	046 Move X24, X0
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Compare X22, 0
	049 JumpIfEqual {313}
	050 Move W25, W31
	051 Move X8, [X22]
	052 Move X0, X22
	053 Move X9, [X8+472]
	054 Move X1, [X8+480]
	055 NotImplemented "Instruction BLR not yet implemented."
	056 Move X26, X0
	057 Move X0, X20
	058 Move W1, W25
	059 Move X2, X31
	060 Call String.get_Chars, X0, X1
	061 Compare X26, 0
	062 JumpIfEqual {313}
	063 Move X8, [X26]
	064 Move W1, W0
	065 Move X0, X26
	066 Move X9, [X8+424]
	067 Move X2, [X8+432]
	068 NotImplemented "Instruction BLR not yet implemented."
	069 Compare X24, 0
	070 JumpIfEqual {313}
	071 Move W1, W0
	072 Move X0, X24
	073 Move X2, X31
	074 Call StringBuilder.Append, X0, X1
	075 Move W8, [X20+16]
	076 Add W25, W25, 1
	077 NotImplemented "Instruction CMP not yet implemented."
	078 Move X0, X24
	079 Move X1, X31
	080 Call StringBuilderCache.GetStringAndRelease, X0
	081 Move X20, X0
	082 And W8, W23, 1
	083 And W9, W21, 1
	084 Move [X19+40], X20
	085 Move [X19+56], W9
	086 Move [X19+57], W8
	087 Move [X19+64], X22
	088 Compare X20, 0
	089 JumpIfEqual {313}
	090 Move X9, 0xAC1000
	091 Move X9, [X9+3672]
	092 Move W1, [X20+16]
	093 And W31, W21, 1
	094 Move TEMP, 0
	095 Not TEMP
	096 Move W8, TEMP
	097 Move X0, [X9]
	098 NotImplemented "Instruction CSNEG not yet implemented."
	099 Subtract W8, W1, 1
	100 NotImplemented "Instruction CSEL not yet implemented."
	101 NotImplemented "Instruction CSINV not yet implemented."
	102 Call 0x1C17D6C
	103 Move [X19+16], X0
	104 Move X0, X20
	105 Move W1, W21
	106 Move X2, X31
	107 Call String.get_Chars, X0, X1
	108 Move X8, [X19+16]
	109 Compare X8, 0
	110 JumpIfEqual {313}
	111 Move W9, [X8+24]
	112 NotImplemented "Instruction CMP not yet implemented."
	113 Subtract W29, W21, W27
	114 Add X8, X8, W21
	115 NotImplemented "Instruction CMP not yet implemented."
	116 Move [X8+32], W27
	117 Move W22, W0
	118 Subtract W8, W31, W28
	119 Move W23, W29
	120 Move [X31], W0
	121 Move [X31+4], W8
	122 Move [X31+8], X19
	123 Move X0, X20
	124 Move W1, W23
	125 Move X2, X31
	126 Call String.get_Chars, X0, X1
	127 And W8, W0, 0xFFFF
	128 NotImplemented "Instruction CMP not yet implemented."
	129 Move W8, [X31+4]
	130 Move W19, W28
	131 Move W26, W31
	132 Add W28, W8, W23
	133 Add W24, W21, W26
	134 Move X0, X20
	135 Move W1, W24
	136 Move X2, X31
	137 Add W25, W23, W26
	138 Call String.get_Chars, X0, X1
	139 And W22, W0, 0xFFFF
	140 Move X0, X20
	141 Move W1, W25
	142 Move X2, X31
	143 Call String.get_Chars, X0, X1
	144 NotImplemented "Instruction CMP not yet implemented."
	145 Subtract W26, W26, W27
	146 Add W31, W28, W26
	147 Add W24, W21, W26
	148 Move W28, W19
	149 Move W25, W19
	150 Move W28, W19
	151 Move X19, [X31+8]
	152 Move X8, [X19+16]
	153 Compare X8, 0
	154 JumpIfEqual {313}
	155 Move W9, [X8+24]
	156 Move W22, [X31]
	157 NotImplemented "Instruction CMP not yet implemented."
	158 Add X8, X8, W24
	159 Add X8, X8, 32
	160 Move W9, [X8]
	161 Compare W9, 0
	162 JumpIfNotEqual {165}
	163 Subtract W9, W24, W25
	164 Move [X8], W9
	165 Subtract W23, W23, W27
	166 NotImplemented "Instruction CMP not yet implemented."
	167 NotImplemented "Instruction CMP not yet implemented."
	168 Move X8, [X19+16]
	169 Compare X8, 0
	170 JumpIfEqual {313}
	171 Move W9, [X8+24]
	172 NotImplemented "Instruction CMP not yet implemented."
	173 Add X10, X8, W29
	174 Add X10, X10, 32
	175 Move W11, [X10]
	176 Compare W11, 0
	177 JumpIfNotEqual {179}
	178 Move [X10], W27
	179 Subtract W29, W29, W27
	180 NotImplemented "Instruction CMP not yet implemented."
	181 Move X8, 0xAC1000
	182 Move X8, [X8+3672]
	183 Move W1, 128
	184 Move X0, [X8]
	185 Call 0x1C17D6C
	186 Move [X19+24], X0
	187 Compare X0, 0
	188 JumpIfEqual {313}
	189 Move W9, [X0+24]
	190 Move X8, X31
	191 Subtract W24, W21, W28
	192 Add X10, X0, 32
	193 NotImplemented "Instruction CMP not yet implemented."
	194 Move [X10], W24
	195 Add X8, X8, 1
	196 NotImplemented "Instruction CMP not yet implemented."
	197 Move X8, -45371392
	198 Move V0, [X8+920]
	199 NotImplemented "Instruction CMP not yet implemented."
	200 Move [X19+48], D0
	201 Move W22, W21
	202 Move X0, X20
	203 Move W1, W22
	204 Move X2, X31
	205 Call String.get_Chars, X0, X1
	206 And W29, W0, 0xFFFF
	207 NotImplemented "Instruction CMP not yet implemented."
	208 Move X0, [X19+32]
	209 Compare X0, 0
	210 JumpIfNotEqual {219}
	211 Move X8, 0xAF8000
	212 Move X8, [X8+3488]
	213 Move W1, 256
	214 Move X0, [X8]
	215 Call 0x1C17D6C
	216 Move [X19+32], X0
	217 Compare X0, 0
	218 JumpIfEqual {313}
	219 Move W8, [X0+24]
	220 Move W26, W29
	221 ShiftRight W26, 8
	222 And W26, W26, 0x7FFFFFFF
	223 NotImplemented "Instruction CMP not yet implemented."
	224 Move W25, W26
	225 Add X8, X0, X25
	226 Move X8, [X8+32]
	227 Compare X8, 0
	228 JumpIfNotEqual {269}
	229 Move X8, 0xAC1000
	230 Move X8, [X8+3672]
	231 Move W1, 256
	232 Move X0, [X8]
	233 Call 0x1C17D6C
	234 Compare X0, 0
	235 JumpIfEqual {313}
	236 Move W8, [X0+24]
	237 Move X23, X0
	238 Move X9, X8
	239 ShiftRight X9, 32
	240 And X9, X9, 0x7FFFFFFF
	241 NotImplemented "Instruction CMP not yet implemented."
	242 Move X9, X31
	243 Move X10, W8
	244 Add X11, X23, 32
	245 NotImplemented "Instruction CMP not yet implemented."
	246 Move [X11], W24
	247 Add X9, X9, 1
	248 NotImplemented "Instruction CMP not yet implemented."
	249 Compare W26, 0
	250 JumpIfNotEqual {259}
	251 Move X0, [X19+24]
	252 Move W4, 128
	253 Move W1, W31
	254 Move X2, X23
	255 Move W3, W31
	256 Move X5, X31
	257 Call Array.Copy, X0, X1, X2, X3, X4
	258 Move [X19+24], X23
	259 Move X8, [X19+32]
	260 Compare X8, 0
	261 JumpIfEqual {313}
	262 Move W9, [X8+24]
	263 NotImplemented "Instruction CMP not yet implemented."
	264 Add X8, X8, X25
	265 Move [X8+32], X23
	266 Move X0, [X19+32]
	267 Compare X0, 0
	268 JumpIfEqual {313}
	269 Move W8, [X0+24]
	270 NotImplemented "Instruction CMP not yet implemented."
	271 Add X8, X0, X25
	272 Move X8, [X8+32]
	273 Compare X8, 0
	274 JumpIfEqual {313}
	275 Move W10, [X8+24]
	276 And W9, W29, 255
	277 NotImplemented "Instruction CMP not yet implemented."
	278 Add X8, X8, W9
	279 Move W8, [X19+48]
	280 NotImplemented "Instruction CMP not yet implemented."
	281 Move [X19+48], W29
	282 Move W8, [X19+52]
	283 NotImplemented "Instruction CMP not yet implemented."
	284 Move [X19+52], W29
	285 Move X8, [X19+24]
	286 Compare X8, 0
	287 JumpIfEqual {313}
	288 Move W9, [X8+24]
	289 NotImplemented "Instruction CMP not yet implemented."
	290 Add X8, X8, W29
	291 Add X8, X8, 32
	292 Move W9, [X8]
	293 NotImplemented "Instruction CMP not yet implemented."
	294 Subtract W9, W21, W22
	295 Move [X8], W9
	296 Subtract W22, W22, W27
	297 NotImplemented "Instruction CMP not yet implemented."
	298 Move X20, [X31+96]
	299 Move X19, [X31+104]
	300 Move X22, [X31+80]
	301 Move X21, [X31+88]
	302 Move X24, [X31+64]
	303 Move X23, [X31+72]
	304 Move X26, [X31+48]
	305 Move X25, [X31+56]
	306 Move X28, [X31+32]
	307 Move X27, [X31+40]
	308 Move X29, [X31+16]
	309 Move X30, [X31+24]
	310 Add X31, X31, 112
	311 Return 
	312 Call 0x1C17F28
	313 Call 0x1C17F20

Method: System.Boolean MatchPattern(System.String text, System.Int32 index)

Disassembly:
	0x03634CD8 STR X30, [X31 - 0x10]!
	0x03634CDC LDR X0, [X0 + 0x18]
	0x03634CE0 CBZ X0, 0x3634CF0
	0x03634CE4 MOV X2, X31
	0x03634CE8 LDR X30, [X31], #0x10
	0x03634CEC B 0x32333E0
	0x03634CF0 BL 0x1C16F20
	0x03634CF4 SUB X31, X31, 0x50
	0x03634CF8 STP X30, X25, [X31 + 0x10]
	0x03634CFC STP X24, X23, [X31 + 0x20]
	0x03634D00 STP X22, X21, [X31 + 0x30]
	0x03634D04 STP X20, X19, [X31 + 0x40]
	0x03634D08 ADRP X21, 0xDAC000
	0x03634D0C LDRB W8, [X21 + 0x540]
	0x03634D10 MOV X19, X1
	0x03634D14 MOV X20, X0
	0x03634D18 TBNZ X8, 0x0, 0x3634D48
	0x03634D1C ADRP X0, 0xB07000
	0x03634D20 LDR X0, [X0 + 0x8D0]
	0x03634D24 BL 0x1C16CF4
	0x03634D28 ADRP X0, 0xB07000
	0x03634D2C LDR X0, [X0 + 0x8D8]
	0x03634D30 BL 0x1C16CF4
	0x03634D34 ADRP X0, 0xB07000
	0x03634D38 LDR X0, [X0 + 0x920]
	0x03634D3C BL 0x1C16CF4
	0x03634D40 MOVZ W8, 0x1
	0x03634D44 STRB W8, [X21 + 0x540]
	0x03634D48 LDR X0, [X20 + 0x10]
	0x03634D4C STRB W31, [X20 + 0x20]
	0x03634D50 CBZ X0, 0x3634E14
	0x03634D54 LDR W8, [X0 + 0x18]
	0x03634D58 SUBS W23, W8, 0x1
	0x03634D5C B.LT 0x3634E18
	0x03634D60 ADRP X24, 0xB07000
	0x03634D64 ADRP X25, 0xB07000
	0x03634D68 LDR X24, [X24 + 0x8D8]
	0x03634D6C LDR X25, [X25 + 0x920]
	0x03634D70 MOV W21, W31
	0x03634D74 LDR X2, [X24]
	0x03634D78 MOV W1, W21
	0x03634D7C BL 0x31344AC
	0x03634D80 MOV X22, X0
	0x03634D84 EOR W8, W22, W22, 0x10
	0x03634D88 ANDS X31, X8, 0xFFFF
	0x03634D8C B.EQ 0x3634DA4
	0x03634D90 UBFM X2, X22, 0x10, 0x3F
	0x03634D94 MOV X0, X20
	0x03634D98 MOV W1, W22
	0x03634D9C BL 0x3634E30
	0x03634DA0 B 0x3634E00
	0x03634DA4 CBZ X19, 0x3634E14
	0x03634DA8 LDR X8, [X19]
	0x03634DAC MOV X0, X19
	0x03634DB0 LDP X9, X1, [X8 + 0x1D8]
	0x03634DB4 BLR X9
	0x03634DB8 CBZ X0, 0x3634E14
	0x03634DBC LDR X8, [X0]
	0x03634DC0 MOV W1, W22
	0x03634DC4 LDP X9, X2, [X8 + 0x1A8]
	0x03634DC8 BLR X9
	0x03634DCC LDR X22, [X20 + 0x10]
	0x03634DD0 MOV W1, W0
	0x03634DD4 ADD X0, X31, 0xC
	0x03634DD8 MOV W2, W1
	0x03634DDC MOV X3, X31
	0x03634DE0 STR W31, [X31 + 0xC]
	0x03634DE4 BL 0x363B668
	0x03634DE8 CBZ X22, 0x3634E14
	0x03634DEC LDR W2, [X31 + 0xC]
	0x03634DF0 LDR X3, [X25]
	0x03634DF4 MOV X0, X22
	0x03634DF8 MOV W1, W21

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move W8, [X0+57]
	010 Move W19, W2
	011 Move X21, X0
	012 Move X20, X1
	013 Compare W8, 0
	014 JumpIfEqual {25}
	015 Compare X20, 0
	016 JumpIfEqual {76}
	017 Move X8, [X21+40]
	018 Compare X8, 0
	019 JumpIfEqual {76}
	020 Move W9, [X20+16]
	021 Move W8, [X8+16]
	022 Subtract W9, W9, W19
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Move W0, W31
	025 Move X0, [X21+40]
	026 Compare X0, 0
	027 JumpIfEqual {76}
	028 Move W4, [X0+16]
	029 Move W1, W31
	030 Move X2, X20
	031 Move W3, W19
	032 Move X5, X31
	033 Call String.CompareOrdinal, X0, X1, X2, X3, X4
	034 NotImplemented "Instruction CMP not yet implemented."
	035 NotImplemented "Instruction CSET not yet implemented."
	036 Move X0, [X21+64]
	037 Compare X0, 0
	038 JumpIfEqual {76}
	039 Move X8, [X0]
	040 Move X9, [X8+472]
	041 Move X1, [X8+480]
	042 NotImplemented "Instruction BLR not yet implemented."
	043 Move X8, [X21+40]
	044 Compare X8, 0
	045 JumpIfEqual {76}
	046 Move X22, X0
	047 Move W23, W31
	048 Move W25, [X8+16]
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Add W1, W19, W23
	051 Move X0, X20
	052 Move X2, X31
	053 Call String.get_Chars, X0, X1
	054 Compare X22, 0
	055 JumpIfEqual {76}
	056 Move X8, [X22]
	057 Move W1, W0
	058 Move X0, X22
	059 Move X9, [X8+424]
	060 Move X2, [X8+432]
	061 NotImplemented "Instruction BLR not yet implemented."
	062 Move X8, [X21+40]
	063 Compare X8, 0
	064 JumpIfEqual {76}
	065 Move W24, W0
	066 Move X0, X8
	067 Move W1, W23
	068 Move X2, X31
	069 Call String.get_Chars, X0, X1
	070 And W8, W24, 0xFFFF
	071 NotImplemented "Instruction CMP not yet implemented."
	072 Move X8, [X21+40]
	073 Add W23, W23, 1
	074 Compare X8, 0
	075 JumpIfNotEqual {48}
	076 Call 0x1C17F20
	077 NotImplemented "Instruction CMP not yet implemented."
	078 NotImplemented "Instruction CSET not yet implemented."
	079 Move X20, [X31+48]
	080 Move X19, [X31+56]
	081 Move X22, [X31+32]
	082 Move X21, [X31+40]
	083 Move X24, [X31+16]
	084 Move X23, [X31+24]
	085 Move X30, [X31+64]
	086 Move X25, [X31+72]
	087 Return X0

Method: System.Boolean IsMatch(System.String text, System.Int32 index, System.Int32 beglimit, System.Int32 endlimit)

Disassembly:
	0x03634DFC BL 0x3134500
	0x03634E00 CMP W23, W21
	0x03634E04 B.EQ 0x3634E18
	0x03634E08 LDR X0, [X20 + 0x10]
	0x03634E0C ADD W21, W21, 0x1
	0x03634E10 CBNZ X0, 0x3634D74
	0x03634E14 BL 0x1C16F20
	0x03634E18 LDP X20, X19, [X31 + 0x40]
	0x03634E1C LDP X22, X21, [X31 + 0x30]
	0x03634E20 LDP X24, X23, [X31 + 0x20]
	0x03634E24 LDP X30, X25, [X31 + 0x10]
	0x03634E28 ADD X31, X31, 0x50
	0x03634E2C RET
	0x03634E30 STP X30, X27, [X31 - 0x50]!
	0x03634E34 STP X26, X25, [X31 + 0x10]
	0x03634E38 STP X24, X23, [X31 + 0x20]
	0x03634E3C STP X22, X21, [X31 + 0x30]
	0x03634E40 STP X20, X19, [X31 + 0x40]
	0x03634E44 ADRP X23, 0xDAC000
	0x03634E48 ADRP X22, 0xB07000
	0x03634E4C LDRB W8, [X23 + 0x541]
	0x03634E50 LDR X22, [X22 + 0x8E0]
	0x03634E54 MOV W19, W2
	0x03634E58 MOV W20, W1
	0x03634E5C MOV X21, X0
	0x03634E60 TBNZ X8, 0x0, 0x3634E78
	0x03634E64 ADRP X0, 0xB07000

ISIL:
	001 Move [X31-16], X30
	002 Move W8, [X0+56]
	003 Compare W8, 0
	004 JumpIfEqual {13}
	005 NotImplemented "Instruction CMP not yet implemented."
	006 Move X8, [X0+40]
	007 Compare X8, 0
	008 JumpIfEqual {26}
	009 Move W8, [X8+16]
	010 Subtract W9, W2, W3
	011 NotImplemented "Instruction CMP not yet implemented."
	012 Subtract W2, W2, W8
	013 NotImplemented "Instruction CMP not yet implemented."
	014 Move X8, [X0+40]
	015 Compare X8, 0
	016 JumpIfEqual {26}
	017 Move W8, [X8+16]
	018 Subtract W9, W4, W2
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Move W0, W31
	021 Move X30, [X31+16]
	022 Return X0
	023 Move X30, [X31+16]
	024 Call RegexBoyerMoore.MatchPattern, X0, X1, X2
	025 Return X0
	026 Call 0x1C17F20

Method: System.Int32 Scan(System.String text, System.Int32 index, System.Int32 beglimit, System.Int32 endlimit)

Disassembly:
	0x03634E68 LDR X0, [X0 + 0x8E0]
	0x03634E6C BL 0x1C16CF4
	0x03634E70 MOVZ W8, 0x1
	0x03634E74 STRB W8, [X23 + 0x541]
	0x03634E78 LDR X0, [X22]
	0x03634E7C LDR W8, [X0 + 0xE0]
	0x03634E80 CBNZ W8, 0x3634E8C
	0x03634E84 BL 0x1C16DFC
	0x03634E88 LDR X0, [X22]
	0x03634E8C LDR X8, [X0 + 0xB8]
	0x03634E90 LDR X8, [X8 + 0x68]
	0x03634E94 CBZ X8, 0x3635058
	0x03634E98 LDR W24, [X8 + 0x18]
	0x03634E9C CMP W24, 0x1
	0x03634EA0 B.LT 0x3634F04
	0x03634EA4 MOV W23, W31
	0x03634EA8 MOVZ W25, 0xC
	0x03634EAC LDR W8, [X0 + 0xE0]
	0x03634EB0 ADD W9, W23, W24
	0x03634EB4 CMP W9, 0x0
	0x03634EB8 CINC W26, W9, LT
	0x03634EBC CBNZ W8, 0x3634EC8
	0x03634EC0 BL 0x1C16DFC
	0x03634EC4 LDR X0, [X22]
	0x03634EC8 LDR X8, [X0 + 0xB8]
	0x03634ECC LDR X8, [X8 + 0x68]
	0x03634ED0 CBZ X8, 0x3635058
	0x03634ED4 LDR W10, [X8 + 0x18]
	0x03634ED8 SBFM W9, W26, 0x1, 0x1F
	0x03634EDC CMP W9, W10
	0x03634EE0 B.CS 0x363505C
	0x03634EE4 SMADDL X8, X9, X25, X8
	0x03634EE8 LDRH W8, [X8 + 0x22]
	0x03634EEC CMP W8, W20, UXTH
	0x03634EF0 CSEL W24, W24, W9, CC
	0x03634EF4 CSINC W23, W23, W9, CS
	0x03634EF8 CMP W23, W24
	0x03634EFC B.LT 0x3634EAC
	0x03634F00 B 0x3634F08
	0x03634F04 MOV W23, W31
	0x03634F08 LDR W8, [X0 + 0xE0]
	0x03634F0C CBNZ W8, 0x3634F18
	0x03634F10 BL 0x1C16DFC
	0x03634F14 LDR X0, [X22]
	0x03634F18 LDR X8, [X0 + 0xB8]
	0x03634F1C LDR X8, [X8 + 0x68]
	0x03634F20 CBZ X8, 0x3635058
	0x03634F24 LDR W8, [X8 + 0x18]
	0x03634F28 CMP W23, W8
	0x03634F2C B.GE 0x3635040
	0x03634F30 ADRP X27, 0xFFFFFFFFFD4F9000
	0x03634F34 AND W24, W19, 0xFFFF
	0x03634F38 AND W25, W20, 0xFFFF
	0x03634F3C MOVZ W26, 0xC
	0x03634F40 ADD X27, X27, 0x984
	0x03634F44 LDR W8, [X0 + 0xE0]
	0x03634F48 CBNZ W8, 0x3634F54
	0x03634F4C BL 0x1C16DFC
	0x03634F50 LDR X0, [X22]
	0x03634F54 LDR X8, [X0 + 0xB8]
	0x03634F58 LDR X8, [X8 + 0x68]
	0x03634F5C CBZ X8, 0x3635058
	0x03634F60 LDR W9, [X8 + 0x18]
	0x03634F64 CMP W23, W9
	0x03634F68 B.GE 0x3635040
	0x03634F6C LDR W9, [X0 + 0xE0]
	0x03634F70 CBNZ W9, 0x3634F88
	0x03634F74 BL 0x1C16DFC
	0x03634F78 LDR X0, [X22]
	0x03634F7C LDR X8, [X0 + 0xB8]
	0x03634F80 LDR X8, [X8 + 0x68]
	0x03634F84 CBZ X8, 0x3635058
	0x03634F88 LDR W9, [X8 + 0x18]
	0x03634F8C CMP W23, W9
	0x03634F90 B.CS 0x363505C
	0x03634F94 SXTW X9, W23
	0x03634F98 MADD X8, X9, X26, X8
	0x03634F9C LDR X9, [X8 + 0x20]
	0x03634FA0 AND W11, W9, 0xFFFF
	0x03634FA4 CMP W11, W24
	0x03634FA8 B.HI 0x3635040
	0x03634FAC UBFM X12, X9, 0x10, 0x3F
	0x03634FB0 CMP W11, W25
	0x03634FB4 UBFM X10, X9, 0x20, 0x3F
	0x03634FB8 CSEL W1, W20, W9, CC
	0x03634FBC CMP W24, W12, UXTH
	0x03634FC0 CSEL W2, W19, W12, CC
	0x03634FC4 CMP W10, 0x3
	0x03634FC8 B.HI 0x3635014
	0x03634FCC LDR W8, [X8 + 0x28]
	0x03634FD0 ADR X9, 0x10
	0x03634FD4 LDRB W11, [X27, X10, LSL]
	0x03634FD8 ADD X9, X9, X11, 0x2, LSL
	0x03634FDC BR X9
	0x03634FE0 MOV W2, W8
	0x03634FE4 MOV W1, W8
	0x03634FE8 B 0x3635014
	0x03634FEC ADD W1, W1, W8
	0x03634FF0 ADD W2, W2, W8
	0x03634FF4 B 0x3635014
	0x03634FF8 ORR W1, W1, 0x1
	0x03634FFC ORR W2, W2, 0x1
	0x03635000 B 0x3635014
	0x03635004 AND W8, W1, 0x1
	0x03635008 AND W9, W2, 0x1
	0x0363500C ADD W1, W8, W1
	0x03635010 ADD W2, W9, W2
	0x03635014 AND W8, W2, 0xFFFF
	0x03635018 CMP W8, W19, UXTH
	0x0363501C B.HI 0x363502C
	0x03635020 AND W8, W1, 0xFFFF
	0x03635024 CMP W8, W20, UXTH
	0x03635028 B.CS 0x3635038
	0x0363502C MOV X0, X21
	0x03635030 BL 0x3634284
	0x03635034 LDR X0, [X22]
	0x03635038 ADD W23, W23, 0x1
	0x0363503C B 0x3634F44
	0x03635040 LDP X20, X19, [X31 + 0x40]
	0x03635044 LDP X22, X21, [X31 + 0x30]
	0x03635048 LDP X24, X23, [X31 + 0x20]
	0x0363504C LDP X26, X25, [X31 + 0x10]
	0x03635050 LDP X30, X27, [X31], #0x50
	0x03635054 RET
	0x03635058 BL 0x1C16F20
	0x0363505C BL 0x1C16F28
	0x03635060 STR X30, [X31 - 0x30]!
	0x03635064 STP X22, X21, [X31 + 0x10]
	0x03635068 STP X20, X19, [X31 + 0x20]
	0x0363506C ADRP X22, 0xDAB000
	0x03635070 LDRB W8, [X22 + 0x542]
	0x03635074 MOV W21, W2
	0x03635078 MOV W20, W1
	0x0363507C MOV X19, X0
	0x03635080 TBNZ X8, 0x0, 0x36350B0
	0x03635084 ADRP X0, 0xB06000
	0x03635088 LDR X0, [X0 + 0x8E0]
	0x0363508C BL 0x1C16CF4
	0x03635090 ADRP X0, 0xB06000
	0x03635094 LDR X0, [X0 + 0x928]
	0x03635098 BL 0x1C16CF4
	0x0363509C ADRP X0, 0xB06000
	0x036350A0 LDR X0, [X0 + 0x930]
	0x036350A4 BL 0x1C16CF4
	0x036350A8 MOVZ W8, 0x1
	0x036350AC STRB W8, [X22 + 0x542]
	0x036350B0 TBZ X21, 0x0, 0x36350C4
	0x036350B4 TBZ X20, 0x0, 0x36350E8
	0x036350B8 ADRP X8, 0xB06000
	0x036350BC LDR X8, [X8 + 0x930]
	0x036350C0 B 0x36350D0
	0x036350C4 TBZ X20, 0x0, 0x3635118
	0x036350C8 ADRP X8, 0xB06000
	0x036350CC LDR X8, [X8 + 0x928]
	0x036350D0 LDR X1, [X8]
	0x036350D4 MOV X0, X19
	0x036350D8 LDP X20, X19, [X31 + 0x20]
	0x036350DC LDP X22, X21, [X31 + 0x10]
	0x036350E0 LDR X30, [X31], #0x30
	0x036350E4 B 0x36345B8
	0x036350E8 ADRP X20, 0xB06000
	0x036350EC LDR X20, [X20 + 0x8E0]
	0x036350F0 LDR X0, [X20]
	0x036350F4 LDR W8, [X0 + 0xE0]
	0x036350F8 CBNZ W8, 0x3635100
	0x036350FC BL 0x1C16DFC
	0x03635100 LDR X0, [X19 + 0x18]
	0x03635104 CBZ X0, 0x3635158
	0x03635108 LDR X8, [X20]
	0x0363510C LDR X8, [X8 + 0xB8]
	0x03635110 LDR X1, [X8 + 0x20]
	0x03635114 B 0x3635144
	0x03635118 ADRP X20, 0xB06000
	0x0363511C LDR X20, [X20 + 0x8E0]
	0x03635120 LDR X0, [X20]
	0x03635124 LDR W8, [X0 + 0xE0]
	0x03635128 CBNZ W8, 0x3635130
	0x0363512C BL 0x1C16DFC
	0x03635130 LDR X0, [X19 + 0x18]
	0x03635134 CBZ X0, 0x3635158
	0x03635138 LDR X8, [X20]
	0x0363513C LDR X8, [X8 + 0xB8]
	0x03635140 LDR X1, [X8 + 0x18]
	0x03635144 LDP X20, X19, [X31 + 0x20]
	0x03635148 LDP X22, X21, [X31 + 0x10]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X21, X0
	015 Move X0, [X0+40]
	016 Move [X31+12], W3
	017 Compare X0, 0
	018 JumpIfEqual {205}
	019 Move W8, [X21+56]
	020 Move W27, [X0+16]
	021 Move W25, W4
	022 Move X22, X1
	023 Compare W8, 0
	024 JumpIfEqual {32}
	025 Move W23, W31
	026 Subtract W19, W27, 1
	027 Subtract W24, W2, W27
	028 Subtract W27, W31, W27
	029 Move TEMP, 0
	030 Not TEMP
	031 Move W28, TEMP
	032 Subtract W23, W27, 1
	033 Move W19, W31
	034 Add W24, W23, W2
	035 Move W28, 1
	036 Move W1, W23
	037 Move X2, X31
	038 Call String.get_Chars, X0, X1
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Move [X31+8], W0
	041 Move W8, [X31+12]
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Compare X22, 0
	044 JumpIfEqual {205}
	045 Subtract W8, W31, W28
	046 Subtract W29, W23, W28
	047 Subtract W20, W23, W19
	048 Move [X31], W8
	049 Move [X31+4], W25
	050 Move X0, X22
	051 Move W1, W24
	052 Move X2, X31
	053 Call String.get_Chars, X0, X1
	054 Move W8, [X21+57]
	055 Move W26, W0
	056 Compare W8, 0
	057 JumpIfEqual {73}
	058 Move X0, [X21+64]
	059 Compare X0, 0
	060 JumpIfEqual {205}
	061 Move X8, [X0]
	062 Move X9, [X8+472]
	063 Move X1, [X8+480]
	064 NotImplemented "Instruction BLR not yet implemented."
	065 Compare X0, 0
	066 JumpIfEqual {205}
	067 Move X8, [X0]
	068 Move W1, W26
	069 Move X9, [X8+424]
	070 Move X2, [X8+432]
	071 NotImplemented "Instruction BLR not yet implemented."
	072 Move W26, W0
	073 Move W8, [X31+8]
	074 And W9, W26, 0xFFFF
	075 NotImplemented "Instruction CMP not yet implemented."
	076 Move W8, [X31]
	077 Move W25, W31
	078 Add W19, W8, W24
	079 Add W31, W20, W25
	080 Add W1, W19, W25
	081 Move X0, X22
	082 Move X2, X31
	083 Call String.get_Chars, X0, X1
	084 Move W8, [X21+57]
	085 Move W26, W0
	086 Compare W8, 0
	087 JumpIfEqual {103}
	088 Move X0, [X21+64]
	089 Compare X0, 0
	090 JumpIfEqual {205}
	091 Move X8, [X0]
	092 Move X9, [X8+472]
	093 Move X1, [X8+480]
	094 NotImplemented "Instruction BLR not yet implemented."
	095 Compare X0, 0
	096 JumpIfEqual {205}
	097 Move X8, [X0]
	098 Move W1, W26
	099 Move X9, [X8+424]
	100 Move X2, [X8+432]
	101 NotImplemented "Instruction BLR not yet implemented."
	102 Move W26, W0
	103 Move X0, [X21+40]
	104 Compare X0, 0
	105 JumpIfEqual {205}
	106 Add W1, W29, W25
	107 Move X2, X31
	108 Call String.get_Chars, X0, X1
	109 And W9, W26, 0xFFFF
	110 NotImplemented "Instruction CMP not yet implemented."
	111 Subtract W25, W25, W28
	112 Move X8, [X21+16]
	113 Compare X8, 0
	114 JumpIfEqual {205}
	115 Move W11, [X8+24]
	116 Add W10, W23, W25
	117 NotImplemented "Instruction CMP not yet implemented."
	118 Add X8, X8, W10
	119 Move W8, [X8+32]
	120 And W31, W9, 0xFF80
	121 Move X10, [X21+32]
	122 Compare X10, 0
	123 JumpIfEqual {180}
	124 Move W12, [X10+24]
	125 Move W11, W9
	126 ShiftRight W11, 8
	127 And W11, W11, 0x7FFFFFFF
	128 NotImplemented "Instruction CMP not yet implemented."
	129 Add X10, X10, W11
	130 Move X10, [X10+32]
	131 Compare X10, 0
	132 JumpIfEqual {180}
	133 Move W11, [X10+24]
	134 And W9, W9, 255
	135 NotImplemented "Instruction CMP not yet implemented."
	136 Add X9, X10, W9
	137 NotImplemented "Instruction CMP not yet implemented."
	138 Move X10, [X21+32]
	139 Move W8, W27
	140 Compare X10, 0
	141 JumpIfEqual {180}
	142 Move W11, [X10+24]
	143 Move W8, W9
	144 ShiftRight W8, 8
	145 And W8, W8, 0x7FFFFFFF
	146 NotImplemented "Instruction CMP not yet implemented."
	147 Add X8, X10, W8
	148 Move X10, [X8+32]
	149 Move W8, W27
	150 Compare X10, 0
	151 JumpIfEqual {180}
	152 Move W11, [X10+24]
	153 And W8, W9, 255
	154 NotImplemented "Instruction CMP not yet implemented."
	155 Add X8, X10, W8
	156 Move X8, [X21+24]
	157 Compare X8, 0
	158 JumpIfEqual {205}
	159 Move W10, [X8+24]
	160 NotImplemented "Instruction CMP not yet implemented."
	161 Add X8, X8, W9
	162 Move W8, [X8+32]
	163 Move X10, [X21+24]
	164 Compare X10, 0
	165 JumpIfEqual {205}
	166 Move W11, [X10+24]
	167 NotImplemented "Instruction CMP not yet implemented."
	168 Add X9, X10, W26
	169 Add X9, X9, 32
	170 Move W9, [X9]
	171 Move W10, [X21+56]
	172 Add W9, W9, W25
	173 NotImplemented "Instruction CMP not yet implemented."
	174 NotImplemented "Instruction CSET not yet implemented."
	175 NotImplemented "Instruction CSET not yet implemented."
	176 NotImplemented "Instruction CMP not yet implemented."
	177 NotImplemented "Instruction CSEL not yet implemented."
	178 NotImplemented "Instruction CMP not yet implemented."
	179 NotImplemented "Instruction CSEL not yet implemented."
	180 Add W24, W8, W24
	181 Move W8, [X31+4]
	182 NotImplemented "Instruction CMP not yet implemented."
	183 Move W8, [X31+12]
	184 NotImplemented "Instruction CMP not yet implemented."
	185 Move TEMP, 0
	186 Not TEMP
	187 Move W0, TEMP
	188 Move W8, [X21+56]
	189 Add W8, W8, W24
	190 Add W0, W8, W25
	191 Move X20, [X31+96]
	192 Move X19, [X31+104]
	193 Move X22, [X31+80]
	194 Move X21, [X31+88]
	195 Move X24, [X31+64]
	196 Move X23, [X31+72]
	197 Move X26, [X31+48]
	198 Move X25, [X31+56]
	199 Move X28, [X31+32]
	200 Move X27, [X31+40]
	201 Move X29, [X31+16]
	202 Move X30, [X31+24]
	203 Add X31, X31, 112
	204 Return X0
	205 Call 0x1C17F20
	206 Call 0x1C17F28

