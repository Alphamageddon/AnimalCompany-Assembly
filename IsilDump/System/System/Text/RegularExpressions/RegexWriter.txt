Type: System.Text.RegularExpressions.RegexWriter

Method: System.Void .ctor(System.Span`1<System.Int32> emittedSpan, System.Span`1<System.Int32> intStackSpan)

Disassembly:
	0x03647EE4 MOV W2, W31
	0x03647EE8 STR W25, [X8, X9, LSL #2]
	0x03647EEC STR W23, [X19 + 0x38]
	0x03647EF0 BL 0x36475E8
	0x03647EF4 LDR W2, [X19 + 0x18]
	0x03647EF8 MOV X0, X19
	0x03647EFC MOV W1, W21
	0x03647F00 BL 0x3648150
	0x03647F04 MOVZ W1, 0x24
	0x03647F08 MOV X0, X19
	0x03647F0C BL 0x36481B4
	0x03647F10 CBZ X20, 0x36480C8
	0x03647F14 LDR X8, [X20 + 0x18]
	0x03647F18 CBZ X8, 0x36480C8
	0x03647F1C LDR W8, [X8 + 0x18]
	0x03647F20 CMP W8, 0x1
	0x03647F24 B.GT 0x36480B0
	0x03647F28 B 0x3648070
	0x03647F2C CMP W21, 0x2
	0x03647F30 B.EQ 0x3648070
	0x03647F34 CMP W21, 0x1
	0x03647F38 B.EQ 0x3647F94
	0x03647F3C CBNZ W21, 0x36480B0
	0x03647F40 MOVZ W1, 0x21
	0x03647F44 MOV X0, X19
	0x03647F48 BL 0x36481B4
	0x03647F4C MOVZ W1, 0x24
	0x03647F50 B 0x36477D0
	0x03647F54 CMP W21, 0x1
	0x03647F58 B.LT 0x36480B0
	0x03647F5C LDR W8, [X19 + 0x38]
	0x03647F60 LDR W9, [X19 + 0x28]
	0x03647F64 SUB W8, W8, 0x1
	0x03647F68 CMP W8, W9
	0x03647F6C STR W8, [X19 + 0x38]
	0x03647F70 B.CS 0x364814C
	0x03647F74 LDR X9, [X19 + 0x20]
	0x03647F78 LDR W2, [X19 + 0x18]
	0x03647F7C MOV X0, X19
	0x03647F80 LDR W1, [X9, W8, SXTW]
	0x03647F84 BL 0x3648150
	0x03647F88 SUBS W21, W21, 0x1
	0x03647F8C B.NE 0x3647F5C
	0x03647F90 B 0x36480B0
	0x03647F94 LDR W23, [X19 + 0x38]
	0x03647F98 LDR W8, [X19 + 0x28]
	0x03647F9C SUB W24, W23, 0x1
	0x03647FA0 CMP W24, W8
	0x03647FA4 STR W24, [X19 + 0x38]
	0x03647FA8 B.CS 0x364814C
	0x03647FAC ADRP X9, 0xAF5000
	0x03647FB0 LDR X9, [X9 + 0x2F8]
	0x03647FB4 LDR W25, [X19 + 0x18]
	0x03647FB8 LDR X22, [X9]
	0x03647FBC LDR X9, [X19 + 0x20]
	0x03647FC0 LDR X0, [X22 + 0x20]
	0x03647FC4 LDR W21, [X9, W24, SXTW]
	0x03647FC8 LDRB W9, [X0 + 0x135]
	0x03647FCC TBNZ X9, 0x0, 0x3647FD8
	0x03647FD0 BL 0x1C5C684
	0x03647FD4 LDR W8, [X19 + 0x28]
	0x03647FD8 CMP W24, W8
	0x03647FDC B.LT 0x3648008
	0x03647FE0 LDR X0, [X22 + 0x20]
	0x03647FE4 ADD X22, X19, 0x20
	0x03647FE8 LDRB W8, [X0 + 0x135]
	0x03647FEC TBNZ X8, 0x0, 0x3647FF4
	0x03647FF0 BL 0x1C5C684
	0x03647FF4 LDR X8, [X0 + 0xC0]
	0x03647FF8 MOV X0, X22
	0x03647FFC LDR X1, [X8 + 0x38]
	0x03648000 BL 0x278D43C
	0x03648004 LDR W8, [X19 + 0x28]
	0x03648008 CMP W24, W8
	0x0364800C B.CS 0x364814C
	0x03648010 LDR X8, [X19 + 0x20]
	0x03648014 SXTW X9, W24
	0x03648018 MOVZ W1, 0x26
	0x0364801C MOV X0, X19
	0x03648020 MOV W2, W31
	0x03648024 STR W25, [X8, X9, LSL #2]

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+64], X29
	003 Move [X31+72], X30
	004 Move [X31+80], X28
	005 Move [X31+88], X27
	006 Move [X31+96], X26
	007 Move [X31+104], X25
	008 Move [X31+112], X24
	009 Move [X31+120], X23
	010 Move [X31+128], X22
	011 Move [X31+136], X21
	012 Move [X31+144], X20
	013 Move [X31+152], X19
	014 Move X29, 0xD9A000
	015 Move X28, 0xAF6000
	016 Move X27, 0xAAF000
	017 Move X26, 0xAAF000
	018 Move X25, 0xAAE000
	019 Move X24, 0xAAE000
	020 Move W8, [X29+1460]
	021 Move X28, [X28+704]
	022 Move X27, [X27+2840]
	023 Move X26, [X26+2848]
	024 Move X25, [X25+464]
	025 Move X24, [X24+448]
	026 Move X20, X4
	027 Move X21, X3
	028 Move X22, X2
	029 Move X23, X1
	030 Move X19, X0
	031 Move TEMP, X8
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfEqual {52}
	035 Move X0, 0xAAF000
	036 Move X0, [X0+2848]
	037 Call 0x1C17CF4
	038 Move X0, 0xAAF000
	039 Move X0, [X0+2840]
	040 Call 0x1C17CF4
	041 Move X0, 0xAAE000
	042 Move X0, [X0+448]
	043 Call 0x1C17CF4
	044 Move X0, 0xAAE000
	045 Move X0, [X0+464]
	046 Call 0x1C17CF4
	047 Move X0, 0xAF6000
	048 Move X0, [X0+704]
	049 Call 0x1C17CF4
	050 Move W8, 1
	051 Move [X29+1460], W8
	052 Move X3, [X28]
	053 NotImplemented "Instruction MOVI not yet implemented."
	054 Add X0, X31, 32
	055 Move X1, X23
	056 Move X2, X22
	057 Move [X31+32], V0
	058 Move [X31+40], V0
	059 Call 0x278E208, X0, X1
	060 Move V1, [X31+32]
	061 Move V0, [X31+48]
	062 Add X0, X31, 0
	063 Move X1, X21
	064 Move X2, X20
	065 Move [X19], V1
	066 Move [X19+8], V0
	067 Move X3, [X28]
	068 NotImplemented "Instruction MOVI not yet implemented."
	069 Move [X31], V0
	070 Move [X31+8], V0
	071 Call 0x278E208, X0, X1
	072 Move V1, [X31]
	073 Move V0, [X31+16]
	074 Move [X19+32], V1
	075 Move [X19+40], V0
	076 Move X0, [X27]
	077 Call 0x1C17F10
	078 Move X1, [X26]
	079 Move X20, X0
	080 Call Dictionary`2<Object, Int32>..ctor, X0
	081 Move [X19+64], X20
	082 Move X0, [X25]
	083 Call 0x1C17F10
	084 Move X1, [X24]
	085 Move X20, X0
	086 Call List`1<Object>..ctor, X0
	087 Move [X19+72], X20
	088 Move [X19+80], X31
	089 Move [X19+88], W31
	090 Move X20, [X31+144]
	091 Move X19, [X31+152]
	092 Move X22, [X31+128]
	093 Move X21, [X31+136]
	094 Move X24, [X31+112]
	095 Move X23, [X31+120]
	096 Move X26, [X31+96]
	097 Move X25, [X31+104]
	098 Move X28, [X31+80]
	099 Move X27, [X31+88]
	100 Move X29, [X31+64]
	101 Move X30, [X31+72]
	102 Add X31, X31, 160
	103 Return 

Method: System.Text.RegularExpressions.RegexCode Write(System.Text.RegularExpressions.RegexTree tree)

Disassembly:
	0x03648028 STR W23, [X19 + 0x38]
	0x0364802C BL 0x36475E8
	0x03648030 LDR W2, [X19 + 0x18]
	0x03648034 MOV X0, X19
	0x03648038 MOV W1, W21
	0x0364803C BL 0x3648150
	0x03648040 MOVZ W1, 0x21
	0x03648044 MOV X0, X19
	0x03648048 BL 0x36481B4
	0x0364804C MOVZ W1, 0x24
	0x03648050 MOV X0, X19
	0x03648054 BL 0x36481B4
	0x03648058 CBZ X20, 0x36480C8
	0x0364805C LDR X8, [X20 + 0x18]
	0x03648060 CBZ X8, 0x36480C8
	0x03648064 LDR W8, [X8 + 0x18]
	0x03648068 CMP W8, 0x2
	0x0364806C B.GT 0x36480B0
	0x03648070 LDR W8, [X19 + 0x38]
	0x03648074 LDR W9, [X19 + 0x28]
	0x03648078 SUB W8, W8, 0x1
	0x0364807C CMP W8, W9
	0x03648080 STR W8, [X19 + 0x38]
	0x03648084 B.CS 0x364814C
	0x03648088 LDR X9, [X19 + 0x20]
	0x0364808C LDR W2, [X19 + 0x18]
	0x03648090 MOV X0, X19
	0x03648094 LDR W1, [X9, W8, SXTW]
	0x03648098 LDP X20, X19, [X31 + 0x40]
	0x0364809C LDP X22, X21, [X31 + 0x30]
	0x036480A0 LDP X24, X23, [X31 + 0x20]
	0x036480A4 LDP X30, X25, [X31 + 0x10]
	0x036480A8 ADD X31, X31, 0x50
	0x036480AC B 0x3648150
	0x036480B0 LDP X20, X19, [X31 + 0x40]
	0x036480B4 LDP X22, X21, [X31 + 0x30]
	0x036480B8 LDP X24, X23, [X31 + 0x20]
	0x036480BC LDP X30, X25, [X31 + 0x10]
	0x036480C0 ADD X31, X31, 0x50
	0x036480C4 RET
	0x036480C8 BL 0x1C16F20
	0x036480CC ADRP X0, 0xAAD000
	0x036480D0 LDR X0, [X0 + 0xC48]
	0x036480D4 BL 0x1C16D08
	0x036480D8 BL 0x19903D0
	0x036480DC MOV X0, X31
	0x036480E0 BL 0x33387A0
	0x036480E4 MOV X1, X0
	0x036480E8 ADD X0, X31, 0xC
	0x036480EC MOV X2, X31
	0x036480F0 BL 0x337B824
	0x036480F4 MOV X19, X0
	0x036480F8 ADRP X0, 0xAF4000
	0x036480FC LDR X0, [X0 + 0x338]
	0x03648100 BL 0x1C16D08
	0x03648104 MOV X1, X19
	0x03648108 MOV X2, X31

ISIL:
	001 Move [X31-48], X29
	002 Move [X31-40], X30
	003 Move [X31+16], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Add X29, X31, 0
	007 Subtract X31, X31, 112
	008 NotImplemented "Instruction MRS not yet implemented."
	009 Move X8, [X21+40]
	010 Move X20, 0xD99000
	011 Move X19, X0
	012 Move [X29-8], X8
	013 Move W8, [X20+1461]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0xADB000
	019 Move X0, [X0+352]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X20+1461], W8
	023 NotImplemented "Instruction MOVI not yet implemented."
	024 Subtract X20, X31, 224
	025 Move [X29-48], V0
	026 Move [X29-40], V0
	027 Move [X29-80], V0
	028 Move [X29-72], V0
	029 Move [X29-112], V0
	030 Move [X29-104], V0
	031 Add X31, X20, 0
	032 Move W2, 224
	033 Move X0, X20
	034 Move W1, W31
	035 Call 0x3EB2B10
	036 Add X8, X31, 0
	037 Subtract X3, X8, 128
	038 Add X31, X3, 0
	039 NotImplemented "Instruction MOVI not yet implemented."
	040 Subtract X0, X29, 112
	041 Move W2, 56
	042 Move W4, 32
	043 Move X1, X20
	044 Move [X8-32], V0
	045 Move [X8-24], V0
	046 Move [X8-64], V0
	047 Move [X8-56], V0
	048 Move [X8-96], V0
	049 Move [X8-88], V0
	050 Move [X8-128], V0
	051 Move [X8-120], V0
	052 Call RegexWriter..ctor, X0, X1, X2
	053 Subtract X0, X29, 112
	054 Move X1, X19
	055 Call RegexWriter.RegexCodeFromRegexTree, X0, X1
	056 Move X19, X0
	057 Subtract X0, X29, 112
	058 Call RegexWriter.Dispose, X0
	059 Move X8, [X21+40]
	060 NotImplemented "Instruction LDUR not yet implemented."
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Move X0, X19
	063 Add X31, X29, 0
	064 Move X20, [X31+32]
	065 Move X19, [X31+40]
	066 Move X21, [X31+16]
	067 Move X29, [X31+48]
	068 Move X30, [X31+56]
	069 Return X0
	070 Call 0x3EB2B20

Method: System.Void Dispose()

Disassembly:
	0x03648594 CBZ X20, 0x36485EC
	0x03648598 ADRP X21, 0xAAB000
	0x0364859C LDR X21, [X21 + 0x758]
	0x036485A0 ADD X1, X31, 0xC
	0x036485A4 STR W19, [X31 + 0xC]
	0x036485A8 LDR X0, [X21]
	0x036485AC BL 0x1C16E04
	0x036485B0 LDR X8, [X20]
	0x036485B4 MOV X1, X0
	0x036485B8 MOV X0, X20
	0x036485BC LDR X9, [X8 + 0x2D8]
	0x036485C0 LDR X2, [X8 + 0x2E0]
	0x036485C4 BLR X9
	0x036485C8 CBZ X0, 0x3648600
	0x036485CC LDR X8, [X0]
	0x036485D0 LDR X1, [X21]
	0x036485D4 LDR X8, [X8 + 0x40]
	0x036485D8 LDR X9, [X1 + 0x40]
	0x036485DC CMP X8, X9
	0x036485E0 B.NE 0x3648604
	0x036485E4 BL 0x1C16E08

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xD99000
	006 Move X20, 0xAF5000
	007 Move W8, [X21+1462]
	008 Move X20, [X20+744]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xAF5000
	015 Move X0, [X0+744]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+1462], W8
	019 Move X1, [X20]
	020 Move X0, X19
	021 Call 0x3649634
	022 Move X1, [X20]
	023 Add X0, X19, 32
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X30, [X31+32]
	027 Move X21, [X31+40]
	028 Call 0x3649634
	029 Return 

Method: System.Text.RegularExpressions.RegexCode RegexCodeFromRegexTree(System.Text.RegularExpressions.RegexTree tree)

Disassembly:
	0x0364810C BL 0x32094D4
	0x03648110 MOV X19, X0
	0x03648114 ADRP X0, 0xAB3000
	0x03648118 LDR X0, [X0 + 0x578]
	0x0364811C BL 0x1C16D08
	0x03648120 BL 0x1C16F10
	0x03648124 MOV X1, X19
	0x03648128 MOV X2, X31
	0x0364812C MOV X20, X0
	0x03648130 BL 0x3314A68
	0x03648134 ADRP X0, 0xAF4000
	0x03648138 LDR X0, [X0 + 0x620]
	0x0364813C BL 0x1C16D08
	0x03648140 MOV X1, X0
	0x03648144 MOV X0, X20
	0x03648148 BL 0x1C16DEC
	0x0364814C BL 0x1C16F28
	0x03648150 STP X30, X23, [X31 - 0x30]!
	0x03648154 STP X22, X21, [X31 + 0x10]
	0x03648158 STP X20, X19, [X31 + 0x20]
	0x0364815C ADRP X23, 0xD98000
	0x03648160 ADRP X22, 0xAF4000
	0x03648164 LDRB W8, [X23 + 0x5B8]
	0x03648168 LDR X22, [X22 + 0x628]
	0x0364816C MOV W19, W2
	0x03648170 MOV W21, W1
	0x03648174 MOV X20, X0
	0x03648178 TBNZ X8, 0x0, 0x3648190
	0x0364817C ADRP X0, 0xAF4000
	0x03648180 LDR X0, [X0 + 0x628]
	0x03648184 BL 0x1C16CF4
	0x03648188 MOVZ W8, 0x1
	0x0364818C STRB W8, [X23 + 0x5B8]
	0x03648190 LDR X2, [X22]
	0x03648194 ADD W1, W21, 0x1
	0x03648198 MOV X0, X20
	0x0364819C BL 0x278D220
	0x036481A0 STR W19, [X0]
	0x036481A4 LDP X20, X19, [X31 + 0x20]
	0x036481A8 LDP X22, X21, [X31 + 0x10]
	0x036481AC LDP X30, X23, [X31], #0x30
	0x036481B0 RET
	0x036481B4 STR X30, [X31 - 0x30]!
	0x036481B8 STP X22, X21, [X31 + 0x10]
	0x036481BC STP X20, X19, [X31 + 0x20]
	0x036481C0 ADRP X21, 0xD98000
	0x036481C4 LDRB W8, [X21 + 0x5B9]
	0x036481C8 MOV W19, W1
	0x036481CC MOV X20, X0
	0x036481D0 TBNZ X8, 0x0, 0x36481E8
	0x036481D4 ADRP X0, 0xAF4000
	0x036481D8 LDR X0, [X0 + 0x2F8]
	0x036481DC BL 0x1C16CF4
	0x036481E0 MOVZ W8, 0x1
	0x036481E4 STRB W8, [X21 + 0x5B9]
	0x036481E8 ADRP X21, 0xAF4000
	0x036481EC LDR X21, [X21 + 0x2F8]
	0x036481F0 MOV W0, W19
	0x036481F4 BL 0x363B744
	0x036481F8 TBZ X0, 0x0, 0x3648208
	0x036481FC LDR W8, [X20 + 0x58]
	0x03648200 ADD W8, W8, 0x1
	0x03648204 STR W8, [X20 + 0x58]
	0x03648208 LDR X22, [X21]
	0x0364820C LDRSW X21, [X20 + 0x18]
	0x03648210 LDR X0, [X22 + 0x20]
	0x03648214 LDRB W8, [X0 + 0x135]
	0x03648218 TBNZ X8, 0x0, 0x3648220
	0x0364821C BL 0x1C5C684
	0x03648220 LDR W8, [X20 + 0x8]
	0x03648224 CMP W21, W8
	0x03648228 B.LT 0x3648250
	0x0364822C LDR X0, [X22 + 0x20]
	0x03648230 LDRB W8, [X0 + 0x135]
	0x03648234 TBNZ X8, 0x0, 0x364823C
	0x03648238 BL 0x1C5C684
	0x0364823C LDR X8, [X0 + 0xC0]
	0x03648240 MOV X0, X20
	0x03648244 LDR X1, [X8 + 0x38]
	0x03648248 BL 0x278D43C
	0x0364824C LDR W8, [X20 + 0x8]
	0x03648250 CMP W21, W8
	0x03648254 B.CS 0x3648278
	0x03648258 LDR X8, [X20]
	0x0364825C ADD W9, W21, 0x1
	0x03648260 STR W19, [X8, X21, LSL #2]
	0x03648264 STR W9, [X20 + 0x18]
	0x03648268 LDP X20, X19, [X31 + 0x20]
	0x0364826C LDP X22, X21, [X31 + 0x10]
	0x03648270 LDR X30, [X31], #0x30
	0x03648274 RET
	0x03648278 BL 0x1C16F28
	0x0364827C STP X30, X25, [X31 - 0x40]!
	0x03648280 STP X24, X23, [X31 + 0x10]
	0x03648284 STP X22, X21, [X31 + 0x20]
	0x03648288 STP X20, X19, [X31 + 0x30]
	0x0364828C ADRP X23, 0xD98000
	0x03648290 LDRB W8, [X23 + 0x5BB]
	0x03648294 MOV W19, W3
	0x03648298 MOV W21, W2
	0x0364829C MOV W22, W1
	0x036482A0 MOV X20, X0
	0x036482A4 TBNZ X8, 0x0, 0x36482BC
	0x036482A8 ADRP X0, 0xAF4000
	0x036482AC LDR X0, [X0 + 0x2F8]
	0x036482B0 BL 0x1C16CF4
	0x036482B4 MOVZ W8, 0x1
	0x036482B8 STRB W8, [X23 + 0x5BB]
	0x036482BC ADRP X24, 0xAF4000
	0x036482C0 LDR X24, [X24 + 0x2F8]
	0x036482C4 MOV W0, W22
	0x036482C8 BL 0x363B744
	0x036482CC TBZ X0, 0x0, 0x36482DC
	0x036482D0 LDR W8, [X20 + 0x58]
	0x036482D4 ADD W8, W8, 0x1
	0x036482D8 STR W8, [X20 + 0x58]
	0x036482DC LDR X25, [X24]
	0x036482E0 LDRSW X23, [X20 + 0x18]
	0x036482E4 LDR X0, [X25 + 0x20]
	0x036482E8 LDRB W8, [X0 + 0x135]
	0x036482EC TBNZ X8, 0x0, 0x36482F4
	0x036482F0 BL 0x1C5C684
	0x036482F4 LDR W8, [X20 + 0x8]
	0x036482F8 CMP W23, W8
	0x036482FC B.LT 0x3648324
	0x03648300 LDR X0, [X25 + 0x20]
	0x03648304 LDRB W8, [X0 + 0x135]
	0x03648308 TBNZ X8, 0x0, 0x3648310
	0x0364830C BL 0x1C5C684
	0x03648310 LDR X8, [X0 + 0xC0]
	0x03648314 MOV X0, X20
	0x03648318 LDR X1, [X8 + 0x38]
	0x0364831C BL 0x278D43C
	0x03648320 LDR W8, [X20 + 0x8]
	0x03648324 CMP W23, W8
	0x03648328 B.CS 0x3648408
	0x0364832C LDR X8, [X20]
	0x03648330 ADD W25, W23, 0x1
	0x03648334 STR W22, [X8, X23, LSL #2]
	0x03648338 STR W25, [X20 + 0x18]
	0x0364833C LDR X22, [X24]
	0x03648340 LDR X0, [X22 + 0x20]
	0x03648344 LDRB W8, [X0 + 0x135]
	0x03648348 TBNZ X8, 0x0, 0x3648350
	0x0364834C BL 0x1C5C684
	0x03648350 LDR W8, [X20 + 0x8]
	0x03648354 CMP W25, W8
	0x03648358 B.LT 0x3648380
	0x0364835C LDR X0, [X22 + 0x20]
	0x03648360 LDRB W8, [X0 + 0x135]
	0x03648364 TBNZ X8, 0x0, 0x364836C
	0x03648368 BL 0x1C5C684
	0x0364836C LDR X8, [X0 + 0xC0]
	0x03648370 MOV X0, X20
	0x03648374 LDR X1, [X8 + 0x38]
	0x03648378 BL 0x278D43C
	0x0364837C LDR W8, [X20 + 0x8]
	0x03648380 CMP W25, W8
	0x03648384 B.CS 0x3648408
	0x03648388 LDR X8, [X20]
	0x0364838C ADD W22, W23, 0x2
	0x03648390 STR W21, [X8, W25, SXTW]
	0x03648394 STR W22, [X20 + 0x18]
	0x03648398 LDR X21, [X24]
	0x0364839C LDR X0, [X21 + 0x20]
	0x036483A0 LDRB W8, [X0 + 0x135]
	0x036483A4 TBNZ X8, 0x0, 0x36483AC
	0x036483A8 BL 0x1C5C684
	0x036483AC LDR W8, [X20 + 0x8]
	0x036483B0 CMP W22, W8
	0x036483B4 B.LT 0x36483DC
	0x036483B8 LDR X0, [X21 + 0x20]
	0x036483BC LDRB W8, [X0 + 0x135]
	0x036483C0 TBNZ X8, 0x0, 0x36483C8
	0x036483C4 BL 0x1C5C684
	0x036483C8 LDR X8, [X0 + 0xC0]
	0x036483CC MOV X0, X20
	0x036483D0 LDR X1, [X8 + 0x38]
	0x036483D4 BL 0x278D43C
	0x036483D8 LDR W8, [X20 + 0x8]
	0x036483DC CMP W22, W8
	0x036483E0 B.CS 0x3648408
	0x036483E4 LDR X8, [X20]
	0x036483E8 ADD W9, W23, 0x3
	0x036483EC LDP X24, X23, [X31 + 0x10]
	0x036483F0 STR W19, [X8, W22, SXTW]
	0x036483F4 STR W9, [X20 + 0x18]
	0x036483F8 LDP X20, X19, [X31 + 0x30]
	0x036483FC LDP X22, X21, [X31 + 0x20]
	0x03648400 LDP X30, X25, [X31], #0x40
	0x03648404 RET
	0x03648408 BL 0x1C16F28
	0x0364840C SUB X31, X31, 0x30
	0x03648410 STP X30, X21, [X31 + 0x10]
	0x03648414 STP X20, X19, [X31 + 0x20]
	0x03648418 ADRP X21, 0xD98000
	0x0364841C LDRB W8, [X21 + 0x5BC]
	0x03648420 MOV X19, X1
	0x03648424 MOV X20, X0
	0x03648428 TBNZ X8, 0x0, 0x3648470
	0x0364842C ADRP X0, 0xADC000
	0x03648430 LDR X0, [X0 + 0xF40]
	0x03648434 BL 0x1C16CF4
	0x03648438 ADRP X0, 0xAB0000
	0x0364843C LDR X0, [X0 + 0x7A8]
	0x03648440 BL 0x1C16CF4
	0x03648444 ADRP X0, 0xAAC000
	0x03648448 LDR X0, [X0 + 0x1B8]
	0x0364844C BL 0x1C16CF4
	0x03648450 ADRP X0, 0xAAC000
	0x03648454 LDR X0, [X0 + 0x1C8]
	0x03648458 BL 0x1C16CF4
	0x0364845C ADRP X0, 0xAAD000
	0x03648460 LDR X0, [X0 + 0x278]
	0x03648464 BL 0x1C16CF4
	0x03648468 MOVZ W8, 0x1
	0x0364846C STRB W8, [X21 + 0x5BC]
	0x03648470 STR W31, [X31 + 0xC]
	0x03648474 CBNZ X19, 0x364848C
	0x03648478 ADRP X8, 0xAAD000
	0x0364847C LDR X8, [X8 + 0x278]
	0x03648480 LDR X8, [X8]
	0x03648484 LDR X8, [X8 + 0xB8]
	0x03648488 LDR X19, [X8]
	0x0364848C LDR X0, [X20 + 0x40]
	0x03648490 CBZ X0, 0x3648550
	0x03648494 ADRP X8, 0xADC000
	0x03648498 LDR X8, [X8 + 0xF40]
	0x0364849C ADD X2, X31, 0xC
	0x036484A0 MOV X1, X19
	0x036484A4 LDR X3, [X8]
	0x036484A8 BL 0x2AA09F8
	0x036484AC TBNZ X0, 0x0, 0x364853C
	0x036484B0 LDR X8, [X20 + 0x48]
	0x036484B4 CBZ X8, 0x3648550
	0x036484B8 LDR W2, [X8 + 0x18]
	0x036484BC STR W2, [X31 + 0xC]
	0x036484C0 LDR X0, [X20 + 0x40]
	0x036484C4 CBZ X0, 0x3648550
	0x036484C8 ADRP X8, 0xAB0000
	0x036484CC LDR X8, [X8 + 0x7A8]
	0x036484D0 MOV X1, X19
	0x036484D4 LDR X3, [X8]
	0x036484D8 BL 0x2A9EF88
	0x036484DC LDR X0, [X20 + 0x48]
	0x036484E0 CBZ X0, 0x3648550
	0x036484E4 ADRP X9, 0xAAC000
	0x036484E8 LDR X9, [X9 + 0x1B8]
	0x036484EC LDR W10, [X0 + 0x1C]
	0x036484F0 LDR X8, [X0 + 0x10]
	0x036484F4 LDR X9, [X9]
	0x036484F8 ADD W10, W10, 0x1
	0x036484FC STR W10, [X0 + 0x1C]
	0x03648500 CBZ X8, 0x3648550
	0x03648504 LDRSW X10, [X0 + 0x18]
	0x03648508 LDR W11, [X8 + 0x18]
	0x0364850C CMP W10, W11
	0x03648510 B.CS 0x3648528
	0x03648514 ADD W9, W10, 0x1
	0x03648518 ADD X8, X8, X10, 0x3, LSL
	0x0364851C STR W9, [X0 + 0x18]
	0x03648520 STR X19, [X8 + 0x20]
	0x03648524 B 0x364853C
	0x03648528 LDR X8, [X9 + 0x20]
	0x0364852C MOV X1, X19
	0x03648530 LDR X8, [X8 + 0xC0]
	0x03648534 LDR X2, [X8 + 0x70]
	0x03648538 BL 0x301BF90
	0x0364853C LDR W0, [X31 + 0xC]
	0x03648540 LDP X20, X19, [X31 + 0x20]
	0x03648544 LDP X30, X21, [X31 + 0x10]
	0x03648548 ADD X31, X31, 0x30
	0x0364854C RET
	0x03648550 BL 0x1C16F20
	0x03648554 SUB X31, X31, 0x30
	0x03648558 STP X30, X21, [X31 + 0x10]
	0x0364855C STP X20, X19, [X31 + 0x20]
	0x03648560 ADRP X21, 0xD98000
	0x03648564 LDRB W8, [X21 + 0x5BD]
	0x03648568 MOV W19, W1
	0x0364856C MOV X20, X0
	0x03648570 TBNZ X8, 0x0, 0x3648588
	0x03648574 ADRP X0, 0xAAB000
	0x03648578 LDR X0, [X0 + 0x758]
	0x0364857C BL 0x1C16CF4
	0x03648580 MOVZ W8, 0x1
	0x03648584 STRB W8, [X21 + 0x5BD]
	0x03648588 ADDS W31, W19, 0x1
	0x0364858C B.EQ 0x36485EC
	0x03648590 LDR X20, [X20 + 0x50]

ISIL:
	001 Subtract X31, X31, 240
	002 Move [X31+144], X29
	003 Move [X31+152], X30
	004 Move [X31+160], X28
	005 Move [X31+168], X27
	006 Move [X31+176], X26
	007 Move [X31+184], X25
	008 Move [X31+192], X24
	009 Move [X31+200], X23
	010 Move [X31+208], X22
	011 Move [X31+216], X21
	012 Move [X31+224], X20
	013 Move [X31+232], X19
	014 Move X21, 0xD99000
	015 Move W8, [X21+1463]
	016 Move X20, X1
	017 Move X19, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {60}
	022 Move X0, 0xAAE000
	023 Move X0, [X0+3144]
	024 Call 0x1C17CF4
	025 Move X0, 0xAAC000
	026 Move X0, [X0+1880]
	027 Call 0x1C17CF4
	028 Move X0, 0xAF5000
	029 Move X0, [X0+720]
	030 Call 0x1C17CF4
	031 Move X0, 0xAF5000
	032 Move X0, [X0+728]
	033 Call 0x1C17CF4
	034 Move X0, 0xAF5000
	035 Move X0, [X0+1536]
	036 Call 0x1C17CF4
	037 Move X0, 0xAF5000
	038 Move X0, [X0+1544]
	039 Call 0x1C17CF4
	040 Move X0, 0xAF5000
	041 Move X0, [X0+1552]
	042 Call 0x1C17CF4
	043 Move X0, 0xAF5000
	044 Move X0, [X0+752]
	045 Call 0x1C17CF4
	046 Move X0, 0xAF5000
	047 Move X0, [X0+760]
	048 Call 0x1C17CF4
	049 Move X0, 0xAF5000
	050 Move X0, [X0+1560]
	051 Call 0x1C17CF4
	052 Move X0, 0xAF5000
	053 Move X0, [X0+768]
	054 Call 0x1C17CF4
	055 Move X0, 0xAF5000
	056 Move X0, [X0+736]
	057 Call 0x1C17CF4
	058 Move W8, 1
	059 Move [X21+1463], W8
	060 Move [X31+112], X31
	061 Move [X31+120], X31
	062 Move [X31+128], X31
	063 Move [X31+96], X31
	064 Move [X31+104], X31
	065 Compare X20, 0
	066 JumpIfEqual {320}
	067 Move X8, [X20+32]
	068 Move W9, [X20+40]
	069 Compare X8, 0
	070 JumpIfEqual {73}
	071 Move X21, [X8+24]
	072 NotImplemented "Instruction CMP not yet implemented."
	073 Move [X19+80], X31
	074 Move W21, W9
	075 Move X10, [X20+24]
	076 And X9, X21, 0
	077 NotImplemented "Instruction CMP not yet implemented."
	078 Move [X19+80], X10
	079 Move X25, 0xAAC000
	080 Move X25, [X25+1880]
	081 Move X24, X31
	082 NotImplemented "Instruction CMP not yet implemented."
	083 Add X8, X8, X24
	084 Move W8, [X8+32]
	085 Move X0, [X25]
	086 Move X22, [X19+80]
	087 Add X1, X31, 64
	088 Move [X31+64], W8
	089 Call 0x1C17E04
	090 Move X23, X0
	091 Move X0, [X25]
	092 Add X1, X31, 92
	093 Move [X31+92], W24
	094 Call 0x1C17E04
	095 Compare X22, 0
	096 JumpIfEqual {320}
	097 Move X8, [X22]
	098 Move X2, X0
	099 Move X0, X22
	100 Move X1, X23
	101 Move X9, [X8+744]
	102 Move X3, [X8+752]
	103 NotImplemented "Instruction BLR not yet implemented."
	104 Move X8, [X20+32]
	105 Compare X8, 0
	106 JumpIfEqual {320}
	107 Move W9, [X8+24]
	108 Add X24, X24, 1
	109 NotImplemented "Instruction CMP not yet implemented."
	110 Move X22, [X20+16]
	111 Move W1, 23
	112 Move X0, X19
	113 Move W2, W31
	114 Call RegexWriter.Emit, X0, X1, X2
	115 Compare X22, 0
	116 JumpIfEqual {320}
	117 Move X27, 0xAF5000
	118 Move X28, 0xAF5000
	119 Move X26, 0xAF5000
	120 Move X27, [X27+728]
	121 Move X28, [X28+760]
	122 Move X26, [X26+752]
	123 Move W24, W31
	124 Add X23, X19, 32
	125 Move X8, [X22+24]
	126 Compare X8, 0
	127 JumpIfEqual {175}
	128 Move W8, [X8+24]
	129 NotImplemented "Instruction CMP not yet implemented."
	130 Move W8, [X22+16]
	131 Move X0, X19
	132 Move X2, X22
	133 Move W3, W24
	134 Or W1, W8, 64
	135 Call RegexWriter.EmitFragment, X0, X1, X2, X3
	136 Move X0, [X22+24]
	137 Compare X0, 0
	138 JumpIfEqual {320}
	139 Move X2, [X27]
	140 Move W1, W24
	141 Call List`1<Object>.get_Item, X0, X1
	142 Move X25, [X28]
	143 NotImplemented "Instruction LDRSW not yet implemented."
	144 Move X22, X0
	145 Move X8, [X25+32]
	146 Move W9, [X8+309]
	147 Move TEMP, X9
	148 And TEMP, TEMP, 1
	149 Compare TEMP, 1
	150 JumpIfEqual {153}
	151 Move X0, X8
	152 Call 0x1C5D684
	153 Move W8, [X19+40]
	154 NotImplemented "Instruction CMP not yet implemented."
	155 Move X0, [X25+32]
	156 Move W8, [X0+309]
	157 Move TEMP, X8
	158 And TEMP, TEMP, 1
	159 Compare TEMP, 1
	160 JumpIfEqual {162}
	161 Call 0x1C5D684
	162 Move X8, [X0+192]
	163 Move X0, X23
	164 Move X1, [X8+56]
	165 Call 0x278E43C, X0
	166 Move W8, [X19+40]
	167 NotImplemented "Instruction CMP not yet implemented."
	168 Move X8, [X19+32]
	169 Add W9, W29, 1
	170 Move [X8], W24
	171 Move W24, W31
	172 Move [X19+56], W9
	173 Compare X22, 0
	174 JumpIfNotEqual {125}
	175 Move W1, [X22+16]
	176 Move X0, X19
	177 Move X2, X22
	178 Move W3, W31
	179 Call RegexWriter.EmitFragment, X0, X1, X2, X3
	180 Move W8, [X19+56]
	181 Compare W8, 0
	182 JumpIfEqual {201}
	183 Move W9, [X19+40]
	184 Subtract W8, W8, 1
	185 Move [X19+56], W8
	186 NotImplemented "Instruction CMP not yet implemented."
	187 Move X22, [X22+56]
	188 Compare X22, 0
	189 JumpIfEqual {320}
	190 Move X9, [X19+32]
	191 Move W10, [X22+16]
	192 Move X0, X19
	193 Move X2, X22
	194 Move W24, [X9]
	195 Or W1, W10, 128
	196 Move W3, W24
	197 Call RegexWriter.EmitFragment, X0, X1, X2, X3
	198 Add W24, W24, 1
	199 Compare X22, 0
	200 JumpIfNotEqual {125}
	201 Move W2, [X19+24]
	202 Move X0, X19
	203 Move W1, W31
	204 Call RegexWriter.PatchJump, X0, X1, X2
	205 Move W1, 40
	206 Move X0, X19
	207 Call RegexWriter.Emit, X0, X1
	208 Add X8, X31, 64
	209 Move X0, X20
	210 Call RegexFCD.FirstChars, X0
	211 Move V0, [X31+4]
	212 Move X8, [X31+80]
	213 Move X0, X20
	214 Move [X31+7], V0
	215 Move [X31+128], X8
	216 Call RegexFCD.Prefix, X0
	217 Move X8, 0xAAE000
	218 Move X8, [X8+3144]
	219 Move X24, X0
	220 Move W22, [X20+64]
	221 Move X23, X1
	222 Move X0, [X8]
	223 Move W8, [X0+224]
	224 Compare W8, 0
	225 JumpIfNotEqual {227}
	226 Call 0x1C17DFC
	227 Move X0, X31
	228 Move TEMP, X22
	229 And TEMP, TEMP, 512
	230 Compare TEMP, 512
	231 JumpIfEqual {233}
	232 Call CultureInfo.get_CurrentCulture
	233 Call CultureInfo.get_InvariantCulture
	234 Move X25, X0
	235 Move X0, [X26]
	236 Move W8, [X0+224]
	237 Compare W8, 0
	238 JumpIfNotEqual {240}
	239 Call 0x1C17DFC
	240 Compare X23, 0
	241 JumpIfEqual {320}
	242 Move W8, [X23+16]
	243 Move W22, W22
	244 ShiftRight W22, 6
	245 And W22, W22, 63
	246 NotImplemented "Instruction CMP not yet implemented."
	247 Move X0, [X26]
	248 Move W8, [X0+224]
	249 Compare W8, 0
	250 JumpIfNotEqual {252}
	251 Call 0x1C17DFC
	252 Move X8, 0xAF5000
	253 Move X8, [X8+1544]
	254 And W31, W24, 255
	255 NotImplemented "Instruction CSET not yet implemented."
	256 Move X0, [X8]
	257 Call 0x1C17F10
	258 Move X1, X23
	259 Move W2, W26
	260 Move W3, W22
	261 Move X4, X25
	262 Move X5, X31
	263 Move X24, X0
	264 Call RegexBoyerMoore..ctor, X0, X1, X2, X3, X4
	265 Move X24, X31
	266 Move X0, X20
	267 Call RegexFCD.Anchors, X0
	268 Move X8, 0xAF5000
	269 Move X8, [X8+1560]
	270 Move W20, W0
	271 Move X0, X19
	272 Move X1, [X8]
	273 Call 0x278E2CC, X0
	274 Move X8, 0xAF5000
	275 Move X8, [X8+1536]
	276 Move [X31+96], X0
	277 Move [X31+104], X1
	278 Add X0, X31, 96
	279 Move X8, [X8]
	280 Move X1, X8
	281 Call ReadOnlySpan`1<Int32>.ToArray, X0
	282 Move X9, 0xAF5000
	283 Move W25, [X19+88]
	284 Move X26, [X19+72]
	285 Move X19, [X19+80]
	286 Move X8, [X31+128]
	287 Move V0, [X31+7]
	288 Move X9, [X9+1552]
	289 Move X23, X0
	290 Move [X31+48], X8
	291 Move [X31+2], V0
	292 Move X0, [X9]
	293 Call 0x1C17F10
	294 Add X7, X31, 32
	295 Move X1, X23
	296 Move X2, X26
	297 Move W3, W25
	298 Move X4, X19
	299 Move W5, W21
	300 Move X6, X24
	301 Move X27, X0
	302 Move [X31+8], W22
	303 Move [X31], W20
	304 Call RegexCode..ctor, X0, X1, X2, X3, X4, X5, X6, X7, X8, X9
	305 Move X0, X27
	306 Move X20, [X31+224]
	307 Move X19, [X31+232]
	308 Move X22, [X31+208]
	309 Move X21, [X31+216]
	310 Move X24, [X31+192]
	311 Move X23, [X31+200]
	312 Move X26, [X31+176]
	313 Move X25, [X31+184]
	314 Move X28, [X31+160]
	315 Move X27, [X31+168]
	316 Move X29, [X31+144]
	317 Move X30, [X31+152]
	318 Add X31, X31, 240
	319 Return X0
	320 Call 0x1C17F20
	321 Call 0x1C17F28

Method: System.Void PatchJump(System.Int32 offset, System.Int32 jumpDest)

Disassembly:
	0x03649150 LDR X26, [X26 + 0xE18]
	0x03649154 LDR X27, [X27 + 0x638]
	0x03649158 LDR X8, [X22]
	0x0364915C LDR X1, [X26]
	0x03649160 LDRH W9, [X8 + 0x12E]
	0x03649164 CBZ X9, 0x3649188
	0x03649168 LDR X10, [X8 + 0xB0]
	0x0364916C ADD X10, X10, 0x8
	0x03649170 LDUR X11, [X10 - 0x8]
	0x03649174 CMP X11, X1
	0x03649178 B.EQ 0x3649198
	0x0364917C SUBS X9, X9, 0x1
	0x03649180 ADD X10, X10, 0x10
	0x03649184 B.NE 0x3649170
	0x03649188 MOV X0, X22
	0x0364918C MOV W2, W31
	0x03649190 BL 0x1C5C788
	0x03649194 B 0x36491A4
	0x03649198 LDRSW X9, [X10]
	0x0364919C ADD X8, X8, X9, 0x4, LSL
	0x036491A0 ADD X0, X8, 0x138
	0x036491A4 LDP X8, X1, [X0]
	0x036491A8 MOV X0, X22
	0x036491AC BLR X8
	0x036491B0 TBZ X0, 0x0, 0x364928C

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0xD98000
	008 Move X22, 0xAF4000
	009 Move W8, [X23+1464]
	010 Move X22, [X22+1576]
	011 Move W19, W2
	012 Move W21, W1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0xAF4000
	019 Move X0, [X0+1576]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X23+1464], W8
	023 Move X2, [X22]
	024 Add W1, W21, 1
	025 Move X0, X20
	026 Call 0x278E220, X0, X1
	027 Move [X0], W19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X30, [X31+48]
	033 Move X23, [X31+56]
	034 Return 

Method: System.Void Emit(System.Int32 op)

Disassembly:
	0x036491B4 LDR X8, [X22]
	0x036491B8 LDR X1, [X26]
	0x036491BC LDRH W9, [X8 + 0x12E]
	0x036491C0 CBZ X9, 0x36491E4
	0x036491C4 LDR X10, [X8 + 0xB0]
	0x036491C8 ADD X10, X10, 0x8
	0x036491CC LDUR X11, [X10 - 0x8]
	0x036491D0 CMP X11, X1
	0x036491D4 B.EQ 0x36491F4
	0x036491D8 SUBS X9, X9, 0x1
	0x036491DC ADD X10, X10, 0x10
	0x036491E0 B.NE 0x36491CC
	0x036491E4 MOVZ W2, 0x1
	0x036491E8 MOV X0, X22
	0x036491EC BL 0x1C5C788
	0x036491F0 B 0x3649204
	0x036491F4 LDR W9, [X10]
	0x036491F8 ADD W9, W9, 0x1
	0x036491FC ADD X8, X8, W9, 0x4, SXTW
	0x03649200 ADD X0, X8, 0x138
	0x03649204 LDP X8, X1, [X0]
	0x03649208 MOV X0, X22
	0x0364920C BLR X8
	0x03649210 MOV X23, X0
	0x03649214 CBZ X0, 0x364962C
	0x03649218 LDR X8, [X23]
	0x0364921C LDR X1, [X27]
	0x03649220 LDRB W10, [X8 + 0x130]
	0x03649224 LDRB W9, [X1 + 0x130]
	0x03649228 CMP W10, W9
	0x0364922C B.CC 0x3649620
	0x03649230 LDR X8, [X8 + 0xC8]
	0x03649234 ADD X8, X8, X9, 0x3, LSL
	0x03649238 LDUR X8, [X8 - 0x8]
	0x0364923C CMP X8, X1
	0x03649240 B.NE 0x3649620
	0x03649244 LDR X8, [X23]
	0x03649248 LDR X9, [X8 + 0x208]
	0x0364924C LDR X3, [X8 + 0x210]
	0x03649250 MOV X0, X23
	0x03649254 MOV X1, X20
	0x03649258 MOV X2, X19
	0x0364925C BLR X9
	0x03649260 LDR X0, [X25]
	0x03649264 LDR W8, [X0 + 0xE0]
	0x03649268 CBNZ W8, 0x3649270
	0x0364926C BL 0x1C16DFC
	0x03649270 BL 0x3649DD0
	0x03649274 TBZ X0, 0x0, 0x3649158
	0x03649278 LDR X8, [X23]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xD98000
	007 Move W8, [X21+1465]
	008 Move W19, W1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xAF4000
	015 Move X0, [X0+760]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+1465], W8
	019 Move X21, 0xAF4000
	020 Move X21, [X21+760]
	021 Move W0, W19
	022 Call RegexCode.OpcodeBacktracks, X0
	023 Move TEMP, X0
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfNotEqual {30}
	027 Move W8, [X20+88]
	028 Add W8, W8, 1
	029 Move [X20+88], W8
	030 Move X22, [X21]
	031 NotImplemented "Instruction LDRSW not yet implemented."
	032 Move X0, [X22+32]
	033 Move W8, [X0+309]
	034 Move TEMP, X8
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfEqual {39}
	038 Call 0x1C5D684
	039 Move W8, [X20+8]
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Move X0, [X22+32]
	042 Move W8, [X0+309]
	043 Move TEMP, X8
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfEqual {48}
	047 Call 0x1C5D684
	048 Move X8, [X0+192]
	049 Move X0, X20
	050 Move X1, [X8+56]
	051 Call 0x278E43C, X0
	052 Move W8, [X20+8]
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Move X8, [X20]
	055 Add W9, W21, 1
	056 Move [X8], W19
	057 Move [X20+24], W9
	058 Move X20, [X31+32]
	059 Move X19, [X31+40]
	060 Move X22, [X31+16]
	061 Move X21, [X31+24]
	062 Move X30, [X31+48]
	063 Return 
	064 Call 0x1C17F28

Method: System.Void Emit(System.Int32 op, System.Int32 opd1)

Disassembly:
	0x036485E8 LDR W19, [X0]
	0x036485EC MOV W0, W19
	0x036485F0 LDP X20, X19, [X31 + 0x20]
	0x036485F4 LDP X30, X21, [X31 + 0x10]
	0x036485F8 ADD X31, X31, 0x30
	0x036485FC RET
	0x03648600 BL 0x1C16F20
	0x03648604 BL 0x1C171E0
	0x03648608 STP X30, X21, [X31 - 0x20]!
	0x0364860C STP X20, X19, [X31 + 0x10]
	0x03648610 MOV X20, X1
	0x03648614 MOV X1, X31
	0x03648618 MOV X19, X2
	0x0364861C MOV X21, X0
	0x03648620 BL 0x33A51F0
	0x03648624 STP X20, X19, [X21 + 0x10]
	0x03648628 LDP X20, X19, [X31 + 0x10]
	0x0364862C LDP X30, X21, [X31], #0x20
	0x03648630 RET
	0x03648634 STR X30, [X31 - 0x20]!
	0x03648638 STP X20, X19, [X31 + 0x10]
	0x0364863C LDR X8, [X0 + 0x10]
	0x03648640 CBZ X8, 0x364870C
	0x03648644 MOV X19, X0
	0x03648648 LDR X0, [X1 + 0x20]
	0x0364864C MOV X20, X1
	0x03648650 LDRB W8, [X0 + 0x135]
	0x03648654 TBNZ X8, 0x0, 0x364865C
	0x03648658 BL 0x1C5C684
	0x0364865C LDR X8, [X0 + 0xC0]
	0x03648660 LDR X0, [X8 + 0x70]
	0x03648664 LDRB W8, [X0 + 0x135]
	0x03648668 TBNZ X8, 0x0, 0x3648670
	0x0364866C BL 0x1C5C684
	0x03648670 LDR W8, [X0 + 0xE0]
	0x03648674 CBNZ W8, 0x364867C
	0x03648678 BL 0x1C16DFC
	0x0364867C LDR X0, [X20 + 0x20]
	0x03648680 LDRB W8, [X0 + 0x135]
	0x03648684 TBNZ X8, 0x0, 0x364868C
	0x03648688 BL 0x1C5C684
	0x0364868C LDR X8, [X0 + 0xC0]
	0x03648690 LDR X20, [X8 + 0x68]
	0x03648694 LDR X0, [X20 + 0x20]
	0x03648698 LDRB W8, [X0 + 0x135]
	0x0364869C TBNZ X8, 0x0, 0x36486A4
	0x036486A0 BL 0x1C5C684
	0x036486A4 LDR X8, [X0 + 0xC0]
	0x036486A8 LDR X0, [X8 + 0x8]
	0x036486AC LDRB W8, [X0 + 0x135]
	0x036486B0 TBNZ X8, 0x0, 0x36486B8
	0x036486B4 BL 0x1C5C684
	0x036486B8 LDR W8, [X0 + 0xE0]
	0x036486BC CBNZ W8, 0x36486C4
	0x036486C0 BL 0x1C16DFC
	0x036486C4 LDR X0, [X20 + 0x20]
	0x036486C8 LDRB W8, [X0 + 0x135]
	0x036486CC TBNZ X8, 0x0, 0x36486D4
	0x036486D0 BL 0x1C5C684
	0x036486D4 LDR X8, [X0 + 0xC0]
	0x036486D8 LDR X0, [X8 + 0x8]
	0x036486DC LDRB W8, [X0 + 0x135]
	0x036486E0 TBNZ X8, 0x0, 0x36486E8
	0x036486E4 BL 0x1C5C684
	0x036486E8 LDR X8, [X0 + 0xB8]
	0x036486EC LDR X0, [X8]
	0x036486F0 CBZ X0, 0x3648718
	0x036486F4 LDR X8, [X0]
	0x036486F8 LDR X1, [X19 + 0x10]
	0x036486FC MOV W2, W31
	0x03648700 LDP X9, X3, [X8 + 0x188]
	0x03648704 BLR X9
	0x03648708 STR X31, [X19 + 0x10]
	0x0364870C LDP X20, X19, [X31 + 0x10]
	0x03648710 LDR X30, [X31], #0x20
	0x03648714 RET

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0xD99000
	009 Move W8, [X22+1466]
	010 Move W19, W2
	011 Move W21, W1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0xAF5000
	018 Move X0, [X0+760]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X22+1466], W8
	022 Move X23, 0xAF5000
	023 Move X23, [X23+760]
	024 Move W0, W21
	025 Call RegexCode.OpcodeBacktracks, X0
	026 Move TEMP, X0
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfNotEqual {33}
	030 Move W8, [X20+88]
	031 Add W8, W8, 1
	032 Move [X20+88], W8
	033 Move X24, [X23]
	034 NotImplemented "Instruction LDRSW not yet implemented."
	035 Move X0, [X24+32]
	036 Move W8, [X0+309]
	037 Move TEMP, X8
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfEqual {42}
	041 Call 0x1C5D684
	042 Move W8, [X20+8]
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Move X0, [X24+32]
	045 Move W8, [X0+309]
	046 Move TEMP, X8
	047 And TEMP, TEMP, 1
	048 Compare TEMP, 1
	049 JumpIfEqual {51}
	050 Call 0x1C5D684
	051 Move X8, [X0+192]
	052 Move X0, X20
	053 Move X1, [X8+56]
	054 Call 0x278E43C, X0
	055 Move W8, [X20+8]
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Move X8, [X20]
	058 Add W24, W22, 1
	059 Move [X8], W21
	060 Move [X20+24], W24
	061 Move X21, [X23]
	062 Move X0, [X21+32]
	063 Move W8, [X0+309]
	064 Move TEMP, X8
	065 And TEMP, TEMP, 1
	066 Compare TEMP, 1
	067 JumpIfEqual {69}
	068 Call 0x1C5D684
	069 Move W8, [X20+8]
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Move X0, [X21+32]
	072 Move W8, [X0+309]
	073 Move TEMP, X8
	074 And TEMP, TEMP, 1
	075 Compare TEMP, 1
	076 JumpIfEqual {78}
	077 Call 0x1C5D684
	078 Move X8, [X0+192]
	079 Move X0, X20
	080 Move X1, [X8+56]
	081 Call 0x278E43C, X0
	082 Move W8, [X20+8]
	083 NotImplemented "Instruction CMP not yet implemented."
	084 Move X8, [X20]
	085 Add W9, W22, 2
	086 Move X22, [X31+32]
	087 Move X21, [X31+40]
	088 Move [X8], W19
	089 Move [X20+24], W9
	090 Move X20, [X31+48]
	091 Move X19, [X31+56]
	092 Move X24, [X31+16]
	093 Move X23, [X31+24]
	094 Move X30, [X31+64]
	095 Return 
	096 Call 0x1C17F28

Method: System.Void Emit(System.Int32 op, System.Int32 opd1, System.Int32 opd2)

Disassembly:
	0x0364927C LDP X9, X1, [X8 + 0x1C8]
	0x03649280 MOV X0, X23
	0x03649284 BLR X9
	0x03649288 B 0x3649158
	0x0364928C MOV X23, X31
	0x03649290 MOV W27, W31
	0x03649294 MOVZ W26, 0x5
	0x03649298 LDR X1, [X24]
	0x0364929C MOV X0, X22
	0x036492A0 BL 0x1C16E00
	0x036492A4 MOV X22, X0
	0x036492A8 CBZ X0, 0x3649304
	0x036492AC LDR X8, [X22]
	0x036492B0 LDR X1, [X24]
	0x036492B4 LDRH W9, [X8 + 0x12E]
	0x036492B8 CBZ X9, 0x36492DC
	0x036492BC LDR X10, [X8 + 0xB0]
	0x036492C0 ADD X10, X10, 0x8
	0x036492C4 LDUR X11, [X10 - 0x8]
	0x036492C8 CMP X11, X1
	0x036492CC B.EQ 0x36492EC
	0x036492D0 SUBS X9, X9, 0x1
	0x036492D4 ADD X10, X10, 0x10
	0x036492D8 B.NE 0x36492C4
	0x036492DC MOV X0, X22
	0x036492E0 MOV W2, W31
	0x036492E4 BL 0x1C5C788
	0x036492E8 B 0x36492F8
	0x036492EC LDRSW X9, [X10]
	0x036492F0 ADD X8, X8, X9, 0x4, LSL
	0x036492F4 ADD X0, X8, 0x138
	0x036492F8 LDP X8, X1, [X0]
	0x036492FC MOV X0, X22
	0x03649300 BLR X8
	0x03649304 CBNZ X23, 0x3649684
	0x03649308 MOV X22, X31
	0x0364930C TBZ X27, 0x0, 0x3649318
	0x03649310 MOV W26, W31
	0x03649314 MOV X23, X22
	0x03649318 LDRB W8, [X31 + 0x1C]
	0x0364931C CBZ W8, 0x364932C
	0x03649320 MOV X0, X21
	0x03649324 MOV X1, X31
	0x03649328 BL 0x33E14E4
	0x0364932C CBNZ X23, 0x3649670
	0x03649330 CBNZ W26, 0x36495F8
	0x03649334 LDR X0, [X25]
	0x03649338 LDR W8, [X0 + 0xE0]
	0x0364933C CBNZ W8, 0x3649344
	0x03649340 BL 0x1C16DFC
	0x03649344 BL 0x36498C4
	0x03649348 CBZ X0, 0x3649638
	0x0364934C LDR X0, [X0 + 0x10]
	0x03649350 CBZ X0, 0x3649638
	0x03649354 LDR X8, [X0]
	0x03649358 LDR X9, [X8 + 0x388]
	0x0364935C LDR X1, [X8 + 0x390]
	0x03649360 BLR X9
	0x03649364 MOV X21, X0
	0x03649368 CBZ X0, 0x3649664
	0x0364936C ADRP X26, 0xAAA000
	0x03649370 ADRP X27, 0xAF3000
	0x03649374 LDR X26, [X26 + 0xE18]
	0x03649378 LDR X27, [X27 + 0x638]
	0x0364937C LDR X8, [X21]
	0x03649380 LDR X1, [X26]
	0x03649384 LDRH W9, [X8 + 0x12E]
	0x03649388 CBZ X9, 0x36493AC
	0x0364938C LDR X10, [X8 + 0xB0]
	0x03649390 ADD X10, X10, 0x8
	0x03649394 LDUR X11, [X10 - 0x8]
	0x03649398 CMP X11, X1
	0x0364939C B.EQ 0x36493BC
	0x036493A0 SUBS X9, X9, 0x1
	0x036493A4 ADD X10, X10, 0x10
	0x036493A8 B.NE 0x3649394
	0x036493AC MOV X0, X21
	0x036493B0 MOV W2, W31
	0x036493B4 BL 0x1C5C788
	0x036493B8 B 0x36493C8
	0x036493BC LDRSW X9, [X10]
	0x036493C0 ADD X8, X8, X9, 0x4, LSL
	0x036493C4 ADD X0, X8, 0x138
	0x036493C8 LDP X8, X1, [X0]
	0x036493CC MOV X0, X21
	0x036493D0 BLR X8
	0x036493D4 TBZ X0, 0x0, 0x3649584
	0x036493D8 LDR X8, [X21]
	0x036493DC LDR X1, [X26]
	0x036493E0 LDRH W9, [X8 + 0x12E]
	0x036493E4 CBZ X9, 0x3649408
	0x036493E8 LDR X10, [X8 + 0xB0]
	0x036493EC ADD X10, X10, 0x8
	0x036493F0 LDUR X11, [X10 - 0x8]
	0x036493F4 CMP X11, X1
	0x036493F8 B.EQ 0x3649418
	0x036493FC SUBS X9, X9, 0x1
	0x03649400 ADD X10, X10, 0x10
	0x03649404 B.NE 0x36493F0
	0x03649408 MOVZ W2, 0x1

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X23, 0xD98000
	010 Move W8, [X23+1467]
	011 Move W19, W3
	012 Move W21, W2
	013 Move W22, W1
	014 Move X20, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {24}
	019 Move X0, 0xAF4000
	020 Move X0, [X0+760]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X23+1467], W8
	024 Move X24, 0xAF4000
	025 Move X24, [X24+760]
	026 Move W0, W22
	027 Call RegexCode.OpcodeBacktracks, X0
	028 Move TEMP, X0
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfNotEqual {35}
	032 Move W8, [X20+88]
	033 Add W8, W8, 1
	034 Move [X20+88], W8
	035 Move X25, [X24]
	036 NotImplemented "Instruction LDRSW not yet implemented."
	037 Move X0, [X25+32]
	038 Move W8, [X0+309]
	039 Move TEMP, X8
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfEqual {44}
	043 Call 0x1C5D684
	044 Move W8, [X20+8]
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Move X0, [X25+32]
	047 Move W8, [X0+309]
	048 Move TEMP, X8
	049 And TEMP, TEMP, 1
	050 Compare TEMP, 1
	051 JumpIfEqual {53}
	052 Call 0x1C5D684
	053 Move X8, [X0+192]
	054 Move X0, X20
	055 Move X1, [X8+56]
	056 Call 0x278E43C, X0
	057 Move W8, [X20+8]
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Move X8, [X20]
	060 Add W25, W23, 1
	061 Move [X8], W22
	062 Move [X20+24], W25
	063 Move X22, [X24]
	064 Move X0, [X22+32]
	065 Move W8, [X0+309]
	066 Move TEMP, X8
	067 And TEMP, TEMP, 1
	068 Compare TEMP, 1
	069 JumpIfEqual {71}
	070 Call 0x1C5D684
	071 Move W8, [X20+8]
	072 NotImplemented "Instruction CMP not yet implemented."
	073 Move X0, [X22+32]
	074 Move W8, [X0+309]
	075 Move TEMP, X8
	076 And TEMP, TEMP, 1
	077 Compare TEMP, 1
	078 JumpIfEqual {80}
	079 Call 0x1C5D684
	080 Move X8, [X0+192]
	081 Move X0, X20
	082 Move X1, [X8+56]
	083 Call 0x278E43C, X0
	084 Move W8, [X20+8]
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Move X8, [X20]
	087 Add W22, W23, 2
	088 Move [X8], W21
	089 Move [X20+24], W22
	090 Move X21, [X24]
	091 Move X0, [X21+32]
	092 Move W8, [X0+309]
	093 Move TEMP, X8
	094 And TEMP, TEMP, 1
	095 Compare TEMP, 1
	096 JumpIfEqual {98}
	097 Call 0x1C5D684
	098 Move W8, [X20+8]
	099 NotImplemented "Instruction CMP not yet implemented."
	100 Move X0, [X21+32]
	101 Move W8, [X0+309]
	102 Move TEMP, X8
	103 And TEMP, TEMP, 1
	104 Compare TEMP, 1
	105 JumpIfEqual {107}
	106 Call 0x1C5D684
	107 Move X8, [X0+192]
	108 Move X0, X20
	109 Move X1, [X8+56]
	110 Call 0x278E43C, X0
	111 Move W8, [X20+8]
	112 NotImplemented "Instruction CMP not yet implemented."
	113 Move X8, [X20]
	114 Add W9, W23, 3
	115 Move X24, [X31+16]
	116 Move X23, [X31+24]
	117 Move [X8], W19
	118 Move [X20+24], W9
	119 Move X20, [X31+48]
	120 Move X19, [X31+56]
	121 Move X22, [X31+32]
	122 Move X21, [X31+40]
	123 Move X30, [X31+64]
	124 Move X25, [X31+72]
	125 Return 
	126 Call 0x1C17F28

Method: System.Int32 StringCode(System.String str)

Disassembly:
	0x0364940C MOV X0, X21
	0x03649410 BL 0x1C5C788
	0x03649414 B 0x3649428
	0x03649418 LDR W9, [X10]
	0x0364941C ADD W9, W9, 0x1
	0x03649420 ADD X8, X8, W9, 0x4, SXTW
	0x03649424 ADD X0, X8, 0x138
	0x03649428 LDP X8, X1, [X0]
	0x0364942C MOV X0, X21
	0x03649430 BLR X8
	0x03649434 MOV X22, X0
	0x03649438 CBZ X0, 0x3649628
	0x0364943C LDR X8, [X22]
	0x03649440 LDR X1, [X27]
	0x03649444 LDRB W10, [X8 + 0x130]
	0x03649448 LDRB W9, [X1 + 0x130]
	0x0364944C CMP W10, W9
	0x03649450 B.CC 0x3649618
	0x03649454 LDR X8, [X8 + 0xC8]
	0x03649458 ADD X8, X8, X9, 0x3, LSL
	0x0364945C LDUR X8, [X8 - 0x8]
	0x03649460 CMP X8, X1
	0x03649464 B.NE 0x3649618
	0x03649468 LDR X8, [X22]
	0x0364946C LDP X9, X1, [X8 + 0x1A8]
	0x03649470 MOV X0, X22
	0x03649474 BLR X9
	0x03649478 TBNZ X0, 0x0, 0x3649500
	0x0364947C STRB W31, [X31 + 0x1C]
	0x03649480 ADD X1, X31, 0x1C
	0x03649484 MOV X0, X22
	0x03649488 MOV X2, X31
	0x0364948C BL 0x33DE64C
	0x03649490 LDR X8, [X22]
	0x03649494 LDR X9, [X8 + 0x208]
	0x03649498 LDR X3, [X8 + 0x210]
	0x0364949C MOV X0, X22
	0x036494A0 MOV X1, X20
	0x036494A4 MOV X2, X19
	0x036494A8 BLR X9
	0x036494AC LDR X0, [X25]
	0x036494B0 LDR W8, [X0 + 0xE0]
	0x036494B4 CBNZ W8, 0x36494BC
	0x036494B8 BL 0x1C16DFC
	0x036494BC BL 0x3649DD0
	0x036494C0 TBZ X0, 0x0, 0x36494D4
	0x036494C4 LDR X8, [X22]
	0x036494C8 LDP X9, X1, [X8 + 0x1C8]
	0x036494CC MOV X0, X22
	0x036494D0 BLR X9
	0x036494D4 MOV X23, X31
	0x036494D8 MOVZ W28, 0x6
	0x036494DC LDRB W8, [X31 + 0x1C]
	0x036494E0 CBZ W8, 0x36494F0
	0x036494E4 MOV X0, X22
	0x036494E8 MOV X1, X31
	0x036494EC BL 0x33E14E4
	0x036494F0 CBNZ X23, 0x3649630
	0x036494F4 CMP W28, 0x6
	0x036494F8 B.EQ 0x364937C
	0x036494FC CBNZ W28, 0x3649584
	0x03649500 LDR X8, [X22]
	0x03649504 LDR X9, [X8 + 0x208]
	0x03649508 LDR X3, [X8 + 0x210]
	0x0364950C MOV X0, X22
	0x03649510 MOV X1, X20
	0x03649514 MOV X2, X19
	0x03649518 BLR X9
	0x0364951C LDR X0, [X25]
	0x03649520 LDR W8, [X0 + 0xE0]
	0x03649524 CBNZ W8, 0x364952C
	0x03649528 BL 0x1C16DFC
	0x0364952C BL 0x3649DD0
	0x03649530 TBZ X0, 0x0, 0x364937C
	0x03649534 LDR X8, [X22]
	0x03649538 LDP X9, X1, [X8 + 0x1C8]
	0x0364953C MOV X0, X22
	0x03649540 BLR X9
	0x03649544 B 0x364937C
	0x03649548 B 0x3649554
	0x0364954C B 0x3649554
	0x03649550 B 0x3649554

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xD98000
	007 Move W8, [X21+1468]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {31}
	014 Move X0, 0xADC000
	015 Move X0, [X0+3904]
	016 Call 0x1C17CF4
	017 Move X0, 0xAB0000
	018 Move X0, [X0+1960]
	019 Call 0x1C17CF4
	020 Move X0, 0xAAC000
	021 Move X0, [X0+440]
	022 Call 0x1C17CF4
	023 Move X0, 0xAAC000
	024 Move X0, [X0+456]
	025 Call 0x1C17CF4
	026 Move X0, 0xAAD000
	027 Move X0, [X0+632]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X21+1468], W8
	031 Move [X31+12], W31
	032 Compare X19, 0
	033 JumpIfNotEqual {39}
	034 Move X8, 0xAAD000
	035 Move X8, [X8+632]
	036 Move X8, [X8]
	037 Move X8, [X8+184]
	038 Move X19, [X8]
	039 Move X0, [X20+64]
	040 Compare X0, 0
	041 JumpIfEqual {96}
	042 Move X8, 0xADC000
	043 Move X8, [X8+3904]
	044 Add X2, X31, 12
	045 Move X1, X19
	046 Move X3, [X8]
	047 Call Dictionary`2<Object, Int32>.TryGetValue, X0, X1, X2
	048 Move TEMP, X0
	049 And TEMP, TEMP, 1
	050 Compare TEMP, 1
	051 JumpIfEqual {89}
	052 Move X8, [X20+72]
	053 Compare X8, 0
	054 JumpIfEqual {96}
	055 Move W2, [X8+24]
	056 Move [X31+12], W2
	057 Move X0, [X20+64]
	058 Compare X0, 0
	059 JumpIfEqual {96}
	060 Move X8, 0xAB0000
	061 Move X8, [X8+1960]
	062 Move X1, X19
	063 Move X3, [X8]
	064 Call Dictionary`2<Object, Int32>.set_Item, X0, X1, X2
	065 Move X0, [X20+72]
	066 Compare X0, 0
	067 JumpIfEqual {96}
	068 Move X9, 0xAAC000
	069 Move X9, [X9+440]
	070 Move W10, [X0+28]
	071 Move X8, [X0+16]
	072 Move X9, [X9]
	073 Add W10, W10, 1
	074 Move [X0+28], W10
	075 Compare X8, 0
	076 JumpIfEqual {96}
	077 NotImplemented "Instruction LDRSW not yet implemented."
	078 Move W11, [X8+24]
	079 NotImplemented "Instruction CMP not yet implemented."
	080 Add W9, W10, 1
	081 Add X8, X8, X10
	082 Move [X0+24], W9
	083 Move [X8+32], X19
	084 Move X8, [X9+32]
	085 Move X1, X19
	086 Move X8, [X8+192]
	087 Move X2, [X8+112]
	088 Call List`1<Object>.AddWithResize, X0, X1
	089 Move W0, [X31+12]
	090 Move X20, [X31+32]
	091 Move X19, [X31+40]
	092 Move X30, [X31+16]
	093 Move X21, [X31+24]
	094 Add X31, X31, 48
	095 Return X0
	096 Call 0x1C17F20

Method: System.Int32 MapCapnum(System.Int32 capnum)

Disassembly:
	0x03649554 MOV X23, X1
	0x03649558 CMP W23, 0x1
	0x0364955C STR X0, [X31 + 0x8]
	0x03649560 B.NE 0x364963C
	0x03649564 LDR X0, [X31 + 0x8]
	0x03649568 BL 0x3EB1AD0
	0x0364956C LDR X8, [X0]
	0x03649570 STR X8, [X31]
	0x03649574 BL 0x3EB1AE0
	0x03649578 LDR X23, [X31]
	0x0364957C MOV W28, W31
	0x03649580 B 0x36494DC
	0x03649584 MOV X19, X31
	0x03649588 LDR X1, [X24]
	0x0364958C MOV X0, X21
	0x03649590 BL 0x1C16E00
	0x03649594 CBZ X0, 0x36495F4
	0x03649598 LDR X8, [X0]
	0x0364959C LDR X1, [X24]
	0x036495A0 MOV X20, X0
	0x036495A4 LDRH W9, [X8 + 0x12E]
	0x036495A8 CBZ X9, 0x36495CC
	0x036495AC LDR X10, [X8 + 0xB0]
	0x036495B0 ADD X10, X10, 0x8
	0x036495B4 LDUR X11, [X10 - 0x8]
	0x036495B8 CMP X11, X1
	0x036495BC B.EQ 0x36495DC
	0x036495C0 SUBS X9, X9, 0x1
	0x036495C4 ADD X10, X10, 0x10
	0x036495C8 B.NE 0x36495B4
	0x036495CC MOV X0, X20
	0x036495D0 MOV W2, W31
	0x036495D4 BL 0x1C5C788
	0x036495D8 B 0x36495E8
	0x036495DC LDRSW X9, [X10]
	0x036495E0 ADD X8, X8, X9, 0x4, LSL
	0x036495E4 ADD X0, X8, 0x138
	0x036495E8 LDP X8, X1, [X0]
	0x036495EC MOV X0, X20
	0x036495F0 BLR X8
	0x036495F4 CBNZ X19, 0x3649668
	0x036495F8 LDP X20, X19, [X31 + 0x60]
	0x036495FC LDP X22, X21, [X31 + 0x50]
	0x03649600 LDP X24, X23, [X31 + 0x40]
	0x03649604 LDP X26, X25, [X31 + 0x30]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xD98000
	007 Move W8, [X21+1469]
	008 Move W19, W1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xAAB000
	015 Move X0, [X0+1880]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+1469], W8
	019 Add W31, W19, 1
	020 Move X20, [X20+80]
	021 Compare X20, 0
	022 JumpIfEqual {44}
	023 Move X21, 0xAAB000
	024 Move X21, [X21+1880]
	025 Add X1, X31, 12
	026 Move [X31+12], W19
	027 Move X0, [X21]
	028 Call 0x1C17E04
	029 Move X8, [X20]
	030 Move X1, X0
	031 Move X0, X20
	032 Move X9, [X8+728]
	033 Move X2, [X8+736]
	034 NotImplemented "Instruction BLR not yet implemented."
	035 Compare X0, 0
	036 JumpIfEqual {51}
	037 Move X8, [X0]
	038 Move X1, [X21]
	039 Move X8, [X8+64]
	040 Move X9, [X1+64]
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Call 0x1C17E08
	043 Move W19, [X0]
	044 Move W0, W19
	045 Move X20, [X31+32]
	046 Move X19, [X31+40]
	047 Move X30, [X31+16]
	048 Move X21, [X31+24]
	049 Add X31, X31, 48
	050 Return X0
	051 Call 0x1C17F20
	052 Call 0x1C181E0

Method: System.Void EmitFragment(System.Int32 nodetype, System.Text.RegularExpressions.RegexNode node, System.Int32 curIndex)

Disassembly:
	0x03648718 BL 0x1C16F20
	0x0364871C STP X30, X21, [X31 - 0x20]!
	0x03648720 STP X20, X19, [X31 + 0x10]
	0x03648724 ADRP X20, 0xD98000
	0x03648728 ADRP X21, 0xAF4000
	0x0364872C LDRB W8, [X20 + 0x5C1]
	0x03648730 LDR X21, [X21 + 0x630]
	0x03648734 MOV X19, X0
	0x03648738 TBNZ X8, 0x0, 0x3648750
	0x0364873C ADRP X0, 0xAF4000
	0x03648740 LDR X0, [X0 + 0x630]
	0x03648744 BL 0x1C16CF4
	0x03648748 MOVZ W8, 0x1
	0x0364874C STRB W8, [X20 + 0x5C1]
	0x03648750 LDR X0, [X21]
	0x03648754 LDR W8, [X0 + 0xE0]
	0x03648758 CBNZ W8, 0x3648760
	0x0364875C BL 0x1C16DFC
	0x03648760 MOV X0, X19
	0x03648764 LDP X20, X19, [X31 + 0x10]
	0x03648768 LDP X30, X21, [X31], #0x20
	0x0364876C B 0x3648770
	0x03648770 SUB X31, X31, 0x70
	0x03648774 STP X30, X27, [X31 + 0x20]
	0x03648778 STP X26, X25, [X31 + 0x30]
	0x0364877C STP X24, X23, [X31 + 0x40]
	0x03648780 STP X22, X21, [X31 + 0x50]
	0x03648784 STP X20, X19, [X31 + 0x60]
	0x03648788 ADRP X20, 0xD98000
	0x0364878C ADRP X24, 0xAF4000
	0x03648790 LDRB W8, [X20 + 0x5C9]
	0x03648794 LDR X24, [X24 + 0x630]
	0x03648798 MOV X19, X0
	0x0364879C TBNZ X8, 0x0, 0x36487D8
	0x036487A0 ADRP X0, 0xAAB000
	0x036487A4 LDR X0, [X0 + 0xE00]
	0x036487A8 BL 0x1C16CF4
	0x036487AC ADRP X0, 0xAAB000
	0x036487B0 LDR X0, [X0 + 0xE18]
	0x036487B4 BL 0x1C16CF4
	0x036487B8 ADRP X0, 0xAF4000
	0x036487BC LDR X0, [X0 + 0x630]
	0x036487C0 BL 0x1C16CF4
	0x036487C4 ADRP X0, 0xAF4000
	0x036487C8 LDR X0, [X0 + 0x638]
	0x036487CC BL 0x1C16CF4
	0x036487D0 MOVZ W8, 0x1
	0x036487D4 STRB W8, [X20 + 0x5C9]
	0x036487D8 LDR X0, [X24]
	0x036487DC STRB W31, [X31 + 0x1C]
	0x036487E0 LDR W8, [X0 + 0xE0]
	0x036487E4 CBNZ W8, 0x36487EC
	0x036487E8 BL 0x1C16DFC
	0x036487EC ADRP X23, 0xAAB000
	0x036487F0 LDR X23, [X23 + 0xE00]
	0x036487F4 BL 0x3649E30
	0x036487F8 TBZ X0, 0x0, 0x3648A48
	0x036487FC LDR X0, [X24]
	0x03648800 LDR W8, [X0 + 0xE0]
	0x03648804 CBNZ W8, 0x3648810
	0x03648808 BL 0x1C16DFC
	0x0364880C LDR X0, [X24]
	0x03648810 LDR X8, [X0 + 0xB8]
	0x03648814 LDR X20, [X8 + 0x18]
	0x03648818 STRB W31, [X31 + 0x1C]
	0x0364881C ADD X1, X31, 0x1C
	0x03648820 MOV X0, X20
	0x03648824 MOV X2, X31
	0x03648828 BL 0x33DE64C
	0x0364882C LDR X0, [X24]
	0x03648830 LDR W8, [X0 + 0xE0]
	0x03648834 CBNZ W8, 0x364883C
	0x03648838 BL 0x1C16DFC
	0x0364883C BL 0x36498C4
	0x03648840 CBZ X0, 0x3648D78
	0x03648844 LDR X0, [X0 + 0x10]
	0x03648848 CBZ X0, 0x3648D7C
	0x0364884C LDR X8, [X0]
	0x03648850 LDR X1, [X8 + 0x390]
	0x03648854 LDR X9, [X8 + 0x388]
	0x03648858 BLR X9
	0x0364885C MOV X21, X0
	0x03648860 CBZ X0, 0x3648D80
	0x03648864 ADRP X25, 0xAAB000
	0x03648868 ADRP X26, 0xAF4000
	0x0364886C LDR X25, [X25 + 0xE18]
	0x03648870 LDR X26, [X26 + 0x638]
	0x03648874 LDR X8, [X21]
	0x03648878 LDR X1, [X25]
	0x0364887C LDRH W9, [X8 + 0x12E]
	0x03648880 CBZ X9, 0x36488A4
	0x03648884 LDR X10, [X8 + 0xB0]
	0x03648888 ADD X10, X10, 0x8
	0x0364888C LDUR X11, [X10 - 0x8]
	0x03648890 CMP X11, X1
	0x03648894 B.EQ 0x36488B4
	0x03648898 SUBS X9, X9, 0x1
	0x0364889C ADD X10, X10, 0x10
	0x036488A0 B.NE 0x364888C
	0x036488A4 MOV X0, X21
	0x036488A8 MOV W2, W31
	0x036488AC BL 0x1C5C788
	0x036488B0 B 0x36488C0
	0x036488B4 LDRSW X9, [X10]
	0x036488B8 ADD X8, X8, X9, 0x4, LSL
	0x036488BC ADD X0, X8, 0x138
	0x036488C0 LDP X8, X1, [X0]
	0x036488C4 MOV X0, X21
	0x036488C8 BLR X8
	0x036488CC TBZ X0, 0x0, 0x36489A0
	0x036488D0 LDR X8, [X21]
	0x036488D4 LDR X1, [X25]
	0x036488D8 LDRH W9, [X8 + 0x12E]
	0x036488DC CBZ X9, 0x3648900
	0x036488E0 LDR X10, [X8 + 0xB0]
	0x036488E4 ADD X10, X10, 0x8
	0x036488E8 LDUR X11, [X10 - 0x8]
	0x036488EC CMP X11, X1
	0x036488F0 B.EQ 0x3648910
	0x036488F4 SUBS X9, X9, 0x1
	0x036488F8 ADD X10, X10, 0x10
	0x036488FC B.NE 0x36488E8
	0x03648900 MOVZ W2, 0x1
	0x03648904 MOV X0, X21
	0x03648908 BL 0x1C5C788
	0x0364890C B 0x3648920
	0x03648910 LDR W9, [X10]
	0x03648914 ADD W9, W9, 0x1
	0x03648918 ADD X8, X8, W9, 0x4, SXTW
	0x0364891C ADD X0, X8, 0x138
	0x03648920 LDP X8, X1, [X0]
	0x03648924 MOV X0, X21
	0x03648928 BLR X8
	0x0364892C MOV X22, X0
	0x03648930 CBZ X0, 0x3648D2C
	0x03648934 LDR X8, [X22]
	0x03648938 LDR X1, [X26]
	0x0364893C LDRB W10, [X8 + 0x130]
	0x03648940 LDRB W9, [X1 + 0x130]
	0x03648944 CMP W10, W9
	0x03648948 B.CC 0x3648D20
	0x0364894C LDR X8, [X8 + 0xC8]
	0x03648950 ADD X8, X8, X9, 0x3, LSL
	0x03648954 LDUR X8, [X8 - 0x8]
	0x03648958 CMP X8, X1
	0x0364895C B.NE 0x3648D20
	0x03648960 LDR X8, [X22]
	0x03648964 LDP X9, X2, [X8 + 0x1F8]
	0x03648968 MOV X0, X22
	0x0364896C MOV X1, X19
	0x03648970 BLR X9
	0x03648974 LDR X0, [X24]
	0x03648978 LDR W8, [X0 + 0xE0]
	0x0364897C CBNZ W8, 0x3648984
	0x03648980 BL 0x1C16DFC
	0x03648984 BL 0x3649DD0
	0x03648988 TBZ X0, 0x0, 0x3648874
	0x0364898C LDR X8, [X22]
	0x03648990 LDP X9, X1, [X8 + 0x1C8]
	0x03648994 MOV X0, X22
	0x03648998 BLR X9
	0x0364899C B 0x3648874
	0x036489A0 MOV X22, X31
	0x036489A4 MOV W26, W31
	0x036489A8 MOVZ W25, 0x5
	0x036489AC LDR X1, [X23]
	0x036489B0 MOV X0, X21
	0x036489B4 BL 0x1C16E00
	0x036489B8 MOV X21, X0
	0x036489BC CBZ X0, 0x3648A18
	0x036489C0 LDR X8, [X21]
	0x036489C4 LDR X1, [X23]
	0x036489C8 LDRH W9, [X8 + 0x12E]
	0x036489CC CBZ X9, 0x36489F0
	0x036489D0 LDR X10, [X8 + 0xB0]
	0x036489D4 ADD X10, X10, 0x8
	0x036489D8 LDUR X11, [X10 - 0x8]
	0x036489DC CMP X11, X1
	0x036489E0 B.EQ 0x3648A00
	0x036489E4 SUBS X9, X9, 0x1
	0x036489E8 ADD X10, X10, 0x10
	0x036489EC B.NE 0x36489D8
	0x036489F0 MOV X0, X21
	0x036489F4 MOV W2, W31
	0x036489F8 BL 0x1C5C788
	0x036489FC B 0x3648A0C
	0x03648A00 LDRSW X9, [X10]
	0x03648A04 ADD X8, X8, X9, 0x4, LSL
	0x03648A08 ADD X0, X8, 0x138
	0x03648A0C LDP X8, X1, [X0]
	0x03648A10 MOV X0, X21
	0x03648A14 BLR X8
	0x03648A18 CBNZ X22, 0x3648D84
	0x03648A1C MOV X21, X31
	0x03648A20 TBZ X26, 0x0, 0x3648A2C
	0x03648A24 MOV W25, W31
	0x03648A28 MOV X22, X21
	0x03648A2C LDRB W8, [X31 + 0x1C]
	0x03648A30 CBZ W8, 0x3648A40
	0x03648A34 MOV X0, X20
	0x03648A38 MOV X1, X31
	0x03648A3C BL 0x33E14E4
	0x03648A40 CBNZ X22, 0x3648D70
	0x03648A44 CBNZ W25, 0x3648CFC
	0x03648A48 LDR X0, [X24]
	0x03648A4C LDR W8, [X0 + 0xE0]
	0x03648A50 CBNZ W8, 0x3648A58
	0x03648A54 BL 0x1C16DFC
	0x03648A58 BL 0x36498C4
	0x03648A5C CBZ X0, 0x3648D38
	0x03648A60 LDR X0, [X0 + 0x10]
	0x03648A64 CBZ X0, 0x3648D38
	0x03648A68 LDR X8, [X0]
	0x03648A6C LDR X9, [X8 + 0x388]
	0x03648A70 LDR X1, [X8 + 0x390]
	0x03648A74 BLR X9
	0x03648A78 MOV X20, X0
	0x03648A7C CBZ X0, 0x3648D64
	0x03648A80 ADRP X25, 0xAAB000
	0x03648A84 ADRP X26, 0xAF4000
	0x03648A88 LDR X25, [X25 + 0xE18]
	0x03648A8C LDR X26, [X26 + 0x638]
	0x03648A90 LDR X8, [X20]
	0x03648A94 LDR X1, [X25]
	0x03648A98 LDRH W9, [X8 + 0x12E]
	0x03648A9C CBZ X9, 0x3648AC0
	0x03648AA0 LDR X10, [X8 + 0xB0]
	0x03648AA4 ADD X10, X10, 0x8
	0x03648AA8 LDUR X11, [X10 - 0x8]
	0x03648AAC CMP X11, X1
	0x03648AB0 B.EQ 0x3648AD0
	0x03648AB4 SUBS X9, X9, 0x1
	0x03648AB8 ADD X10, X10, 0x10
	0x03648ABC B.NE 0x3648AA8
	0x03648AC0 MOV X0, X20
	0x03648AC4 MOV W2, W31
	0x03648AC8 BL 0x1C5C788
	0x03648ACC B 0x3648ADC
	0x03648AD0 LDRSW X9, [X10]
	0x03648AD4 ADD X8, X8, X9, 0x4, LSL
	0x03648AD8 ADD X0, X8, 0x138
	0x03648ADC LDP X8, X1, [X0]
	0x03648AE0 MOV X0, X20
	0x03648AE4 BLR X8
	0x03648AE8 TBZ X0, 0x0, 0x3648C88
	0x03648AEC LDR X8, [X20]
	0x03648AF0 LDR X1, [X25]
	0x03648AF4 LDRH W9, [X8 + 0x12E]
	0x03648AF8 CBZ X9, 0x3648B1C
	0x03648AFC LDR X10, [X8 + 0xB0]
	0x03648B00 ADD X10, X10, 0x8
	0x03648B04 LDUR X11, [X10 - 0x8]
	0x03648B08 CMP X11, X1
	0x03648B0C B.EQ 0x3648B2C
	0x03648B10 SUBS X9, X9, 0x1
	0x03648B14 ADD X10, X10, 0x10
	0x03648B18 B.NE 0x3648B04
	0x03648B1C MOVZ W2, 0x1
	0x03648B20 MOV X0, X20
	0x03648B24 BL 0x1C5C788
	0x03648B28 B 0x3648B3C
	0x03648B2C LDR W9, [X10]
	0x03648B30 ADD W9, W9, 0x1
	0x03648B34 ADD X8, X8, W9, 0x4, SXTW
	0x03648B38 ADD X0, X8, 0x138
	0x03648B3C LDP X8, X1, [X0]
	0x03648B40 MOV X0, X20
	0x03648B44 BLR X8
	0x03648B48 MOV X21, X0
	0x03648B4C CBZ X0, 0x3648D28
	0x03648B50 LDR X8, [X21]
	0x03648B54 LDR X1, [X26]
	0x03648B58 LDRB W10, [X8 + 0x130]
	0x03648B5C LDRB W9, [X1 + 0x130]
	0x03648B60 CMP W10, W9
	0x03648B64 B.CC 0x3648D18
	0x03648B68 LDR X8, [X8 + 0xC8]
	0x03648B6C ADD X8, X8, X9, 0x3, LSL
	0x03648B70 LDUR X8, [X8 - 0x8]
	0x03648B74 CMP X8, X1
	0x03648B78 B.NE 0x3648D18
	0x03648B7C LDR X8, [X21]
	0x03648B80 LDP X9, X1, [X8 + 0x1A8]
	0x03648B84 MOV X0, X21
	0x03648B88 BLR X9
	0x03648B8C TBNZ X0, 0x0, 0x3648C0C
	0x03648B90 STRB W31, [X31 + 0x1C]
	0x03648B94 ADD X1, X31, 0x1C
	0x03648B98 MOV X0, X21
	0x03648B9C MOV X2, X31
	0x03648BA0 BL 0x33DE64C
	0x03648BA4 LDR X8, [X21]
	0x03648BA8 LDP X9, X2, [X8 + 0x1F8]
	0x03648BAC MOV X0, X21
	0x03648BB0 MOV X1, X19
	0x03648BB4 BLR X9
	0x03648BB8 LDR X0, [X24]
	0x03648BBC LDR W8, [X0 + 0xE0]
	0x03648BC0 CBNZ W8, 0x3648BC8
	0x03648BC4 BL 0x1C16DFC
	0x03648BC8 BL 0x3649DD0
	0x03648BCC TBZ X0, 0x0, 0x3648BE0
	0x03648BD0 LDR X8, [X21]
	0x03648BD4 LDP X9, X1, [X8 + 0x1C8]
	0x03648BD8 MOV X0, X21
	0x03648BDC BLR X9
	0x03648BE0 MOV X22, X31
	0x03648BE4 MOVZ W27, 0x6
	0x03648BE8 LDRB W8, [X31 + 0x1C]
	0x03648BEC CBZ W8, 0x3648BFC
	0x03648BF0 MOV X0, X21
	0x03648BF4 MOV X1, X31
	0x03648BF8 BL 0x33E14E4
	0x03648BFC CBNZ X22, 0x3648D30
	0x03648C00 CMP W27, 0x6
	0x03648C04 B.EQ 0x3648A90
	0x03648C08 CBNZ W27, 0x3648C88
	0x03648C0C LDR X8, [X21]
	0x03648C10 LDP X9, X2, [X8 + 0x1F8]
	0x03648C14 MOV X0, X21
	0x03648C18 MOV X1, X19
	0x03648C1C BLR X9
	0x03648C20 LDR X0, [X24]
	0x03648C24 LDR W8, [X0 + 0xE0]
	0x03648C28 CBNZ W8, 0x3648C30
	0x03648C2C BL 0x1C16DFC
	0x03648C30 BL 0x3649DD0
	0x03648C34 TBZ X0, 0x0, 0x3648A90
	0x03648C38 LDR X8, [X21]
	0x03648C3C LDP X9, X1, [X8 + 0x1C8]
	0x03648C40 MOV X0, X21
	0x03648C44 BLR X9
	0x03648C48 B 0x3648A90
	0x03648C4C B 0x3648C58
	0x03648C50 B 0x3648C58
	0x03648C54 B 0x3648C58
	0x03648C58 MOV X22, X1
	0x03648C5C CMP W22, 0x1
	0x03648C60 STR X0, [X31 + 0x10]
	0x03648C64 B.NE 0x3648D3C
	0x03648C68 LDR X0, [X31 + 0x10]
	0x03648C6C BL 0x3EB1AD0
	0x03648C70 LDR X8, [X0]
	0x03648C74 STR X8, [X31 + 0x8]
	0x03648C78 BL 0x3EB1AE0
	0x03648C7C LDR X22, [X31 + 0x8]
	0x03648C80 MOV W27, W31
	0x03648C84 B 0x3648BE8
	0x03648C88 MOV X19, X31
	0x03648C8C LDR X1, [X23]
	0x03648C90 MOV X0, X20
	0x03648C94 BL 0x1C16E00
	0x03648C98 CBZ X0, 0x3648CF8
	0x03648C9C LDR X8, [X0]
	0x03648CA0 LDR X1, [X23]
	0x03648CA4 MOV X20, X0
	0x03648CA8 LDRH W9, [X8 + 0x12E]
	0x03648CAC CBZ X9, 0x3648CD0
	0x03648CB0 LDR X10, [X8 + 0xB0]
	0x03648CB4 ADD X10, X10, 0x8
	0x03648CB8 LDUR X11, [X10 - 0x8]
	0x03648CBC CMP X11, X1
	0x03648CC0 B.EQ 0x3648CE0
	0x03648CC4 SUBS X9, X9, 0x1
	0x03648CC8 ADD X10, X10, 0x10
	0x03648CCC B.NE 0x3648CB8
	0x03648CD0 MOV X0, X20
	0x03648CD4 MOV W2, W31
	0x03648CD8 BL 0x1C5C788
	0x03648CDC B 0x3648CEC
	0x03648CE0 LDRSW X9, [X10]
	0x03648CE4 ADD X8, X8, X9, 0x4, LSL
	0x03648CE8 ADD X0, X8, 0x138
	0x03648CEC LDP X8, X1, [X0]
	0x03648CF0 MOV X0, X20
	0x03648CF4 BLR X8
	0x03648CF8 CBNZ X19, 0x3648D68
	0x03648CFC LDP X20, X19, [X31 + 0x60]
	0x03648D00 LDP X22, X21, [X31 + 0x50]
	0x03648D04 LDP X24, X23, [X31 + 0x40]
	0x03648D08 LDP X26, X25, [X31 + 0x30]
	0x03648D0C LDP X30, X27, [X31 + 0x20]
	0x03648D10 ADD X31, X31, 0x70
	0x03648D14 RET
	0x03648D18 MOV X0, X21
	0x03648D1C BL 0x1C171E0
	0x03648D20 MOV X0, X22
	0x03648D24 BL 0x1C171E0
	0x03648D28 BL 0x1C16F20
	0x03648D2C BL 0x1C16F20
	0x03648D30 MOV X0, X22
	0x03648D34 BL 0x1C16F18
	0x03648D38 BL 0x1C16F20
	0x03648D3C STR X31, [X31 + 0x8]
	0x03648D40 LDRB W8, [X31 + 0x1C]
	0x03648D44 CBZ W8, 0x3648D54
	0x03648D48 MOV X0, X21
	0x03648D4C MOV X1, X31
	0x03648D50 BL 0x33E14E4
	0x03648D54 LDP X8, X0, [X31 + 0x8]
	0x03648D58 CBZ X8, 0x3648EE8
	0x03648D5C LDR X0, [X31 + 0x8]
	0x03648D60 BL 0x1C16F18
	0x03648D64 BL 0x1C16F20
	0x03648D68 MOV X0, X19
	0x03648D6C BL 0x1C16F18
	0x03648D70 MOV X0, X22
	0x03648D74 BL 0x1C16F18
	0x03648D78 BL 0x1C16F20
	0x03648D7C BL 0x1C16F20
	0x03648D80 BL 0x1C16F20
	0x03648D84 MOV X0, X22
	0x03648D88 BL 0x1C16F18
	0x03648D8C MOV X22, X1
	0x03648D90 STR X0, [X31 + 0x10]
	0x03648D94 B 0x3648D40
	0x03648D98 B 0x3648DF0
	0x03648D9C B 0x3648EE4
	0x03648DA0 B 0x3648DAC
	0x03648DA4 B 0x3648DAC
	0x03648DA8 B 0x3648DAC
	0x03648DAC STP X1, X0, [X31 + 0x8]
	0x03648DB0 B 0x3648E88
	0x03648DB4 B 0x3648EE4
	0x03648DB8 B 0x3648EE4
	0x03648DBC B 0x3648DF0
	0x03648DC0 B 0x3648EE4
	0x03648DC4 B 0x3648EE4
	0x03648DC8 B 0x3648DF0
	0x03648DCC B 0x3648DF0
	0x03648DD0 B 0x3648EE4
	0x03648DD4 B 0x3648EE4
	0x03648DD8 B 0x3648EE4
	0x03648DDC B 0x3648DF0
	0x03648DE0 B 0x3648DF0
	0x03648DE4 B 0x3648DF0
	0x03648DE8 B 0x3648EE4
	0x03648DEC B 0x3648EE4
	0x03648DF0 CMP W1, 0x1
	0x03648DF4 B.NE 0x3648E10
	0x03648DF8 BL 0x3EB1AD0
	0x03648DFC LDR X22, [X0]
	0x03648E00 BL 0x3EB1AE0
	0x03648E04 MOV W25, W31
	0x03648E08 MOVZ W26, 0x1
	0x03648E0C B 0x36489AC
	0x03648E10 STP X1, X0, [X31 + 0x8]
	0x03648E14 MOV X22, X31
	0x03648E18 LDR X1, [X23]
	0x03648E1C MOV X0, X21
	0x03648E20 BL 0x1C16E00
	0x03648E24 MOV X21, X0
	0x03648E28 CBZ X0, 0x3648E84
	0x03648E2C LDR X8, [X21]
	0x03648E30 LDR X1, [X23]
	0x03648E34 LDRH W9, [X8 + 0x12E]
	0x03648E38 CBZ X9, 0x3648E5C
	0x03648E3C LDR X10, [X8 + 0xB0]
	0x03648E40 ADD X10, X10, 0x8
	0x03648E44 LDUR X11, [X10 - 0x8]
	0x03648E48 CMP X11, X1
	0x03648E4C B.EQ 0x3648E6C
	0x03648E50 SUBS X9, X9, 0x1
	0x03648E54 ADD X10, X10, 0x10
	0x03648E58 B.NE 0x3648E44
	0x03648E5C MOV X0, X21
	0x03648E60 MOV W2, W31
	0x03648E64 BL 0x1C5C788
	0x03648E68 B 0x3648E78
	0x03648E6C LDRSW X9, [X10]
	0x03648E70 ADD X8, X8, X9, 0x4, LSL
	0x03648E74 ADD X0, X8, 0x138
	0x03648E78 LDP X8, X1, [X0]
	0x03648E7C MOV X0, X21
	0x03648E80 BLR X8
	0x03648E84 CBNZ X22, 0x3648EB0
	0x03648E88 LDR X8, [X31 + 0x8]
	0x03648E8C CMP W8, 0x1
	0x03648E90 B.NE 0x3648EA8
	0x03648E94 LDR X0, [X31 + 0x10]
	0x03648E98 BL 0x3EB1AD0
	0x03648E9C LDR X21, [X0]
	0x03648EA0 BL 0x3EB1AE0
	0x03648EA4 B 0x3648A24
	0x03648EA8 MOV X21, X31
	0x03648EAC B 0x3648EC4
	0x03648EB0 MOV X0, X22
	0x03648EB4 BL 0x1C16F18
	0x03648EB8 STP X1, X0, [X31 + 0x8]
	0x03648EBC B 0x3648E18
	0x03648EC0 STR X0, [X31 + 0x10]
	0x03648EC4 LDRB W8, [X31 + 0x1C]
	0x03648EC8 CBZ W8, 0x3648ED8
	0x03648ECC MOV X0, X20
	0x03648ED0 MOV X1, X31
	0x03648ED4 BL 0x33E14E4
	0x03648ED8 CBZ X21, 0x3648F80
	0x03648EDC MOV X0, X21
	0x03648EE0 BL 0x1C16F18
	0x03648EE4 MOV X22, X1
	0x03648EE8 CMP W22, 0x1
	0x03648EEC B.NE 0x3648F00
	0x03648EF0 BL 0x3EB1AD0
	0x03648EF4 LDR X19, [X0]
	0x03648EF8 BL 0x3EB1AE0
	0x03648EFC B 0x3648C8C
	0x03648F00 STR X0, [X31 + 0x10]
	0x03648F04 MOV X19, X31
	0x03648F08 B 0x3648F10
	0x03648F0C STR X0, [X31 + 0x10]
	0x03648F10 LDR X1, [X23]
	0x03648F14 MOV X0, X20
	0x03648F18 BL 0x1C16E00
	0x03648F1C MOV X20, X0
	0x03648F20 CBZ X0, 0x3648F7C
	0x03648F24 LDR X8, [X20]
	0x03648F28 LDR X1, [X23]
	0x03648F2C LDRH W9, [X8 + 0x12E]
	0x03648F30 CBZ X9, 0x3648F54
	0x03648F34 LDR X10, [X8 + 0xB0]
	0x03648F38 ADD X10, X10, 0x8
	0x03648F3C LDUR X11, [X10 - 0x8]
	0x03648F40 CMP X11, X1
	0x03648F44 B.EQ 0x3648F64
	0x03648F48 SUBS X9, X9, 0x1
	0x03648F4C ADD X10, X10, 0x10
	0x03648F50 B.NE 0x3648F3C
	0x03648F54 MOV X0, X20
	0x03648F58 MOV W2, W31
	0x03648F5C BL 0x1C5C788
	0x03648F60 B 0x3648F70
	0x03648F64 LDRSW X9, [X10]
	0x03648F68 ADD X8, X8, X9, 0x4, LSL
	0x03648F6C ADD X0, X8, 0x138
	0x03648F70 LDP X8, X1, [X0]
	0x03648F74 MOV X0, X20
	0x03648F78 BLR X8
	0x03648F7C CBNZ X19, 0x3648F88
	0x03648F80 LDR X0, [X31 + 0x10]
	0x03648F84 BL 0x1D2C690
	0x03648F88 MOV X0, X19
	0x03648F8C BL 0x1C16F18
	0x03648F90 BL 0x1990590
	0x03648F94 STP X30, X21, [X31 - 0x20]!
	0x03648F98 STP X20, X19, [X31 + 0x10]
	0x03648F9C ADRP X20, 0xD98000
	0x03648FA0 ADRP X21, 0xAF4000
	0x03648FA4 LDRB W8, [X20 + 0x5C2]
	0x03648FA8 LDR X21, [X21 + 0x630]
	0x03648FAC MOV X19, X0
	0x03648FB0 TBNZ X8, 0x0, 0x3648FC8
	0x03648FB4 ADRP X0, 0xAF4000
	0x03648FB8 LDR X0, [X0 + 0x630]
	0x03648FBC BL 0x1C16CF4
	0x03648FC0 MOVZ W8, 0x1
	0x03648FC4 STRB W8, [X20 + 0x5C2]
	0x03648FC8 LDR X0, [X21]
	0x03648FCC LDR W8, [X0 + 0xE0]
	0x03648FD0 CBNZ W8, 0x3648FD8
	0x03648FD4 BL 0x1C16DFC
	0x03648FD8 MOV X0, X19
	0x03648FDC LDP X20, X19, [X31 + 0x10]
	0x03648FE0 LDP X30, X21, [X31], #0x20
	0x03648FE4 B 0x3648770
	0x03648FE8 STR X30, [X31 - 0x30]!
	0x03648FEC STP X22, X21, [X31 + 0x10]
	0x03648FF0 STP X20, X19, [X31 + 0x20]
	0x03648FF4 ADRP X21, 0xD98000
	0x03648FF8 ADRP X22, 0xAF4000
	0x03648FFC LDRB W8, [X21 + 0x5C3]
	0x03649000 B 0x3EB190C
	0x03649004 MOV X19, X1
	0x03649008 MOV X20, X0
	0x0364900C TBNZ X8, 0x0, 0x3649024
	0x03649010 ADRP X0, 0xAF3000
	0x03649014 LDR X0, [X0 + 0x630]
	0x03649018 BL 0x1C16CF4
	0x0364901C MOVZ W8, 0x1
	0x03649020 STRB W8, [X21 + 0x5C3]
	0x03649024 LDR X0, [X22]
	0x03649028 LDR W8, [X0 + 0xE0]
	0x0364902C CBNZ W8, 0x3649034
	0x03649030 BL 0x1C16DFC
	0x03649034 MOV X0, X20
	0x03649038 MOV X1, X19
	0x0364903C LDP X20, X19, [X31 + 0x20]
	0x03649040 LDP X22, X21, [X31 + 0x10]
	0x03649044 LDR X30, [X31], #0x30
	0x03649048 B 0x364904C
	0x0364904C SUB X31, X31, 0x70
	0x03649050 STR X30, [X31 + 0x10]
	0x03649054 STP X28, X27, [X31 + 0x20]
	0x03649058 STP X26, X25, [X31 + 0x30]
	0x0364905C STP X24, X23, [X31 + 0x40]
	0x03649060 STP X22, X21, [X31 + 0x50]
	0x03649064 STP X20, X19, [X31 + 0x60]
	0x03649068 ADRP X21, 0xD97000
	0x0364906C ADRP X25, 0xAF3000
	0x03649070 LDRB W8, [X21 + 0x5CA]
	0x03649074 LDR X25, [X25 + 0x630]
	0x03649078 MOV X19, X1
	0x0364907C MOV X20, X0
	0x03649080 TBNZ X8, 0x0, 0x36490BC
	0x03649084 ADRP X0, 0xAAA000
	0x03649088 LDR X0, [X0 + 0xE00]
	0x0364908C BL 0x1C16CF4
	0x03649090 ADRP X0, 0xAAA000
	0x03649094 LDR X0, [X0 + 0xE18]
	0x03649098 BL 0x1C16CF4
	0x0364909C ADRP X0, 0xAF3000
	0x036490A0 LDR X0, [X0 + 0x630]
	0x036490A4 BL 0x1C16CF4
	0x036490A8 ADRP X0, 0xAF3000
	0x036490AC LDR X0, [X0 + 0x638]
	0x036490B0 BL 0x1C16CF4
	0x036490B4 MOVZ W8, 0x1
	0x036490B8 STRB W8, [X21 + 0x5CA]
	0x036490BC LDR X0, [X25]
	0x036490C0 STRB W31, [X31 + 0x1C]
	0x036490C4 LDR W8, [X0 + 0xE0]
	0x036490C8 CBNZ W8, 0x36490D0
	0x036490CC BL 0x1C16DFC
	0x036490D0 ADRP X24, 0xAAA000
	0x036490D4 LDR X24, [X24 + 0xE00]
	0x036490D8 BL 0x3649E30
	0x036490DC TBZ X0, 0x0, 0x3649334
	0x036490E0 LDR X0, [X25]
	0x036490E4 LDR W8, [X0 + 0xE0]
	0x036490E8 CBNZ W8, 0x36490F4
	0x036490EC BL 0x1C16DFC
	0x036490F0 LDR X0, [X25]
	0x036490F4 LDR X8, [X0 + 0xB8]
	0x036490F8 LDR X21, [X8 + 0x18]
	0x036490FC STRB W31, [X31 + 0x1C]
	0x03649100 ADD X1, X31, 0x1C
	0x03649104 MOV X0, X21
	0x03649108 MOV X2, X31
	0x0364910C BL 0x33DE64C
	0x03649110 LDR X0, [X25]
	0x03649114 LDR W8, [X0 + 0xE0]
	0x03649118 CBNZ W8, 0x3649120
	0x0364911C BL 0x1C16DFC
	0x03649120 BL 0x36498C4
	0x03649124 CBZ X0, 0x3649678
	0x03649128 LDR X0, [X0 + 0x10]
	0x0364912C CBZ X0, 0x364967C
	0x03649130 LDR X8, [X0]
	0x03649134 LDR X1, [X8 + 0x390]
	0x03649138 LDR X9, [X8 + 0x388]
	0x0364913C BLR X9
	0x03649140 MOV X22, X0
	0x03649144 CBZ X0, 0x3649680
	0x03649148 ADRP X26, 0xAAA000
	0x0364914C ADRP X27, 0xAF3000

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X23, 0xD99000
	011 Move W8, [X23+1470]
	012 Move W21, W3
	013 Move X20, X2
	014 Move W22, W1
	015 Move X19, X0
	016 Move [X31+12], W1
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {35}
	021 Move X0, 0xAF5000
	022 Move X0, [X0+720]
	023 Call 0x1C17CF4
	024 Move X0, 0xAF5000
	025 Move X0, [X0+760]
	026 Call 0x1C17CF4
	027 Move X0, 0xAF5000
	028 Move X0, [X0+768]
	029 Call 0x1C17CF4
	030 Move X0, 0xAF5000
	031 Move X0, [X0+736]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X23+1470], W8
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move W23, W31
	037 Compare X20, 0
	038 JumpIfEqual {660}
	039 Move W8, [X20+52]
	040 And W23, W8, 64
	041 NotImplemented "Instruction BFM not yet implemented."
	042 Subtract W8, W22, 3
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Move X9, -44761088
	045 Add X9, X9, 1270
	046 NotImplemented "Instruction ADR not yet implemented."
	047 NotImplemented "Instruction LDRH not yet implemented."
	048 Add X10, X10, X11
	049 CallNoReturn X10
	050 Compare X20, 0
	051 JumpIfEqual {660}
	052 Move W1, [X20+16]
	053 Move X0, X19
	054 Move X20, [X31+64]
	055 Move X19, [X31+72]
	056 Move X22, [X31+48]
	057 Move X21, [X31+56]
	058 Move X24, [X31+32]
	059 Move X23, [X31+40]
	060 Move X30, [X31+16]
	061 Move X25, [X31+24]
	062 Add X31, X31, 80
	063 Call RegexWriter.Emit, X0, X1
	064 Return 
	065 Compare X20, 0
	066 JumpIfEqual {660}
	067 Move W3, [X20+44]
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Move W8, [X20+16]
	070 NotImplemented "Instruction CMP not yet implemented."
	071 NotImplemented "Instruction CMP not yet implemented."
	072 Move W8, W31
	073 Compare X20, 0
	074 JumpIfEqual {660}
	075 Move W8, [X20+44]
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Move X1, [X20+32]
	078 Move X0, X19
	079 Call RegexWriter.StringCode, X0, X1
	080 Move W3, [X20+44]
	081 Move W2, W0
	082 Or W1, W23, 2
	083 Move X0, X19
	084 Call RegexWriter.Emit, X0, X1, X2, X3
	085 Move W8, [X20+44]
	086 Move W9, [X20+48]
	087 NotImplemented "Instruction CMP not yet implemented."
	088 Move X1, [X20+32]
	089 Move W21, [X20+16]
	090 Move X0, X19
	091 Call RegexWriter.StringCode, X0, X1
	092 Move W8, [X20+48]
	093 Move TEMP, 0x80000000
	094 Not TEMP
	095 Move W3, TEMP
	096 Move W2, W0
	097 Or W1, W21, W23
	098 NotImplemented "Instruction CMP not yet implemented."
	099 Move W9, [X20+44]
	100 Subtract W3, W8, W9
	101 Compare X20, 0
	102 JumpIfEqual {660}
	103 Move W8, [X20+16]
	104 NotImplemented "Instruction LDRH not yet implemented."
	105 Or W1, W8, W23
	106 Compare X20, 0
	107 JumpIfEqual {660}
	108 Move W8, [X20+44]
	109 Move W9, [X20+48]
	110 Move TEMP, 0x80000000
	111 Not TEMP
	112 Move W10, TEMP
	113 NotImplemented "Instruction CMP not yet implemented."
	114 NotImplemented "Instruction CMP not yet implemented."
	115 NotImplemented "Instruction CMP not yet implemented."
	116 Move W8, 30
	117 NotImplemented "Instruction CINC not yet implemented."
	118 Move X0, X19
	119 Call RegexWriter.Emit, X0, X1
	120 Compare X20, 0
	121 JumpIfEqual {660}
	122 Move X1, [X20+32]
	123 Move W21, [X20+16]
	124 Move X0, X19
	125 Call RegexWriter.StringCode, X0, X1
	126 Compare X20, 0
	127 JumpIfEqual {660}
	128 Move W1, [X20+44]
	129 Move W21, [X20+16]
	130 Move X0, X19
	131 Call RegexWriter.MapCapnum, X0, X1
	132 Or W1, W21, W23
	133 Move W2, W0
	134 Move X0, X19
	135 Subtract W8, W22, 152
	136 NotImplemented "Instruction CMP not yet implemented."
	137 Move X9, -44761088
	138 Add X9, X9, 1462
	139 NotImplemented "Instruction ADR not yet implemented."
	140 NotImplemented "Instruction LDRH not yet implemented."
	141 Add X10, X10, X11
	142 CallNoReturn X10
	143 Compare X20, 0
	144 JumpIfEqual {660}
	145 Move W8, [X20+48]
	146 Move W21, [X19+24]
	147 Move TEMP, 0x80000000
	148 Not TEMP
	149 Move W9, TEMP
	150 NotImplemented "Instruction CMP not yet implemented."
	151 Move W9, [X20+44]
	152 NotImplemented "Instruction CMP not yet implemented."
	153 Move W8, [X19+56]
	154 Move W9, [X19+40]
	155 Subtract W8, W8, 1
	156 NotImplemented "Instruction CMP not yet implemented."
	157 Move [X19+56], W8
	158 Move X9, [X19+32]
	159 Subtract W1, W22, 130
	160 Move X0, X19
	161 Move W2, [X9]
	162 Call RegexWriter.Emit, X0, X1, X2
	163 Compare X20, 0
	164 JumpIfEqual {660}
	165 Move X8, [X20+24]
	166 Compare X8, 0
	167 JumpIfEqual {660}
	168 Move W8, [X8+24]
	169 Subtract W8, W8, 1
	170 NotImplemented "Instruction CMP not yet implemented."
	171 Move W1, 34
	172 Move X0, X19
	173 Call RegexWriter.Emit, X0, X1
	174 Move W1, 31
	175 Move W1, 34
	176 Move W1, 34
	177 Compare W21, 0
	178 JumpIfNotEqual {650}
	179 Move W1, 34
	180 Move X0, X19
	181 Call RegexWriter.Emit, X0, X1
	182 Move X8, 0xAF5000
	183 Move X8, [X8+760]
	184 Move W22, [X19+24]
	185 NotImplemented "Instruction LDRSW not yet implemented."
	186 Move X21, [X8]
	187 Move X0, [X21+32]
	188 Move W8, [X0+309]
	189 Move TEMP, X8
	190 And TEMP, TEMP, 1
	191 Compare TEMP, 1
	192 JumpIfEqual {194}
	193 Call 0x1C5D684
	194 Move W8, [X19+40]
	195 NotImplemented "Instruction CMP not yet implemented."
	196 Move X0, [X21+32]
	197 Add X21, X19, 32
	198 Move W8, [X0+309]
	199 Move TEMP, X8
	200 And TEMP, TEMP, 1
	201 Compare TEMP, 1
	202 JumpIfEqual {204}
	203 Call 0x1C5D684
	204 Move X8, [X0+192]
	205 Move X0, X21
	206 Move X1, [X8+56]
	207 Call 0x278E43C, X0
	208 Move W8, [X19+40]
	209 NotImplemented "Instruction CMP not yet implemented."
	210 Move X8, [X19+32]
	211 Add W9, W23, 1
	212 Move W1, 23
	213 Move X0, X19
	214 Move W2, W31
	215 Move [X8], W22
	216 Move [X19+56], W9
	217 Call RegexWriter.Emit, X0, X1, X2
	218 Compare X20, 0
	219 JumpIfEqual {660}
	220 Move W1, [X20+44]
	221 Move X0, X19
	222 Call RegexWriter.MapCapnum, X0, X1
	223 Move W2, W0
	224 Move W1, 37
	225 Move X0, X19
	226 Call RegexWriter.Emit, X0, X1, X2
	227 Compare W21, 0
	228 JumpIfNotEqual {650}
	229 Move W1, 34
	230 Move X0, X19
	231 Call RegexWriter.Emit, X0, X1
	232 Move W1, 31
	233 Move X0, X19
	234 Call RegexWriter.Emit, X0, X1
	235 Move X8, 0xAF5000
	236 Move X8, [X8+760]
	237 Move W21, [X19+24]
	238 NotImplemented "Instruction LDRSW not yet implemented."
	239 Move X20, [X8]
	240 Move X0, [X20+32]
	241 Move W8, [X0+309]
	242 Move TEMP, X8
	243 And TEMP, TEMP, 1
	244 Compare TEMP, 1
	245 JumpIfEqual {247}
	246 Call 0x1C5D684
	247 Move W8, [X19+40]
	248 NotImplemented "Instruction CMP not yet implemented."
	249 Move X0, [X20+32]
	250 Add X20, X19, 32
	251 Move W8, [X0+309]
	252 Move TEMP, X8
	253 And TEMP, TEMP, 1
	254 Compare TEMP, 1
	255 JumpIfEqual {257}
	256 Call 0x1C5D684
	257 Move X8, [X0+192]
	258 Move X0, X20
	259 Move X1, [X8+56]
	260 Call 0x278E43C, X0
	261 Move W8, [X19+40]
	262 NotImplemented "Instruction CMP not yet implemented."
	263 Move X8, [X19+32]
	264 Add W9, W22, 1
	265 Move W1, 23
	266 Move X0, X19
	267 Move [X8], W21
	268 Move [X19+56], W9
	269 Move W2, W31
	270 Move X20, [X31+64]
	271 Move X19, [X31+72]
	272 Move X22, [X31+48]
	273 Move X21, [X31+56]
	274 Move X24, [X31+32]
	275 Move X23, [X31+40]
	276 Move X30, [X31+16]
	277 Move X25, [X31+24]
	278 Add X31, X31, 80
	279 Call RegexWriter.Emit, X0, X1, X2
	280 Return 
	281 Move W9, 1
	282 NotImplemented "Instruction CMP not yet implemented."
	283 Move W10, 26
	284 Subtract W8, W9, W8
	285 NotImplemented "Instruction CINC not yet implemented."
	286 NotImplemented "Instruction CSEL not yet implemented."
	287 Move X0, X19
	288 Call RegexWriter.Emit, X0, X1, X2
	289 Move W8, [X20+44]
	290 Compare W8, 0
	291 JumpIfNotEqual {328}
	292 Move X8, 0xAF5000
	293 Move X8, [X8+760]
	294 Move W21, [X19+24]
	295 NotImplemented "Instruction LDRSW not yet implemented."
	296 Move X20, [X8]
	297 Move X0, [X20+32]
	298 Move W8, [X0+309]
	299 Move TEMP, X8
	300 And TEMP, TEMP, 1
	301 Compare TEMP, 1
	302 JumpIfEqual {304}
	303 Call 0x1C5D684
	304 Move W8, [X19+40]
	305 NotImplemented "Instruction CMP not yet implemented."
	306 Move X0, [X20+32]
	307 Add X20, X19, 32
	308 Move W8, [X0+309]
	309 Move TEMP, X8
	310 And TEMP, TEMP, 1
	311 Compare TEMP, 1
	312 JumpIfEqual {314}
	313 Call 0x1C5D684
	314 Move X8, [X0+192]
	315 Move X0, X20
	316 Move X1, [X8+56]
	317 Call 0x278E43C, X0
	318 Move W8, [X19+40]
	319 NotImplemented "Instruction CMP not yet implemented."
	320 Move X8, [X19+32]
	321 Add W9, W22, 1
	322 Move W1, 38
	323 Move X0, X19
	324 Move W2, W31
	325 Move [X8], W21
	326 Move [X19+56], W9
	327 Call RegexWriter.Emit, X0, X1, X2
	328 Move X8, 0xAF5000
	329 Move X8, [X8+760]
	330 Move W21, [X19+24]
	331 NotImplemented "Instruction LDRSW not yet implemented."
	332 Move X20, [X8]
	333 Move X0, [X20+32]
	334 Move W8, [X0+309]
	335 Move TEMP, X8
	336 And TEMP, TEMP, 1
	337 Compare TEMP, 1
	338 JumpIfEqual {340}
	339 Call 0x1C5D684
	340 Move W8, [X19+40]
	341 NotImplemented "Instruction CMP not yet implemented."
	342 Move X0, [X20+32]
	343 Add X20, X19, 32
	344 Move W8, [X0+309]
	345 Move TEMP, X8
	346 And TEMP, TEMP, 1
	347 Compare TEMP, 1
	348 JumpIfEqual {350}
	349 Call 0x1C5D684
	350 Move X8, [X0+192]
	351 Move X0, X20
	352 Move X1, [X8+56]
	353 Call 0x278E43C, X0
	354 Move W8, [X19+40]
	355 NotImplemented "Instruction CMP not yet implemented."
	356 Move X8, [X19+32]
	357 Add W9, W22, 1
	358 Move [X8], W21
	359 Move [X19+56], W9
	360 Move W8, 1
	361 NotImplemented "Instruction LDRH not yet implemented."
	362 Or W1, W8, W23
	363 Move X0, X19
	364 Call RegexWriter.Emit, X0, X1, X2, X3
	365 Move W3, [X20+44]
	366 Move W8, [X20+48]
	367 Subtract W9, W8, W3
	368 Move W10, [X20+16]
	369 NotImplemented "Instruction LDRH not yet implemented."
	370 Move TEMP, 0x80000000
	371 Not TEMP
	372 Move W11, TEMP
	373 NotImplemented "Instruction CMP not yet implemented."
	374 Or W1, W10, W23
	375 NotImplemented "Instruction CSEL not yet implemented."
	376 Move X0, X19
	377 Move X20, [X31+64]
	378 Move X19, [X31+72]
	379 Move X22, [X31+48]
	380 Move X21, [X31+56]
	381 Move X24, [X31+32]
	382 Move X23, [X31+40]
	383 Move X30, [X31+16]
	384 Move X25, [X31+24]
	385 Add X31, X31, 80
	386 Call RegexWriter.Emit, X0, X1, X2, X3
	387 Return 
	388 Move W9, [X19+56]
	389 Move W10, [X19+40]
	390 Subtract W9, W9, 1
	391 NotImplemented "Instruction CMP not yet implemented."
	392 Move [X19+56], W9
	393 Move X10, [X19+32]
	394 Move TEMP, 0x80000000
	395 Not TEMP
	396 Move W3, TEMP
	397 NotImplemented "Instruction CMP not yet implemented."
	398 Subtract W1, W22, 126
	399 Move W2, [X10]
	400 Move W9, [X20+44]
	401 Subtract W3, W8, W9
	402 Move X0, X19
	403 Call RegexWriter.Emit, X0, X1, X2, X3
	404 Move W8, [X20+44]
	405 Compare W8, 0
	406 JumpIfNotEqual {650}
	407 Move W8, [X19+56]
	408 Move W9, [X19+40]
	409 Subtract W8, W8, 1
	410 NotImplemented "Instruction CMP not yet implemented."
	411 Move [X19+56], W8
	412 Move X9, [X19+32]
	413 Move X0, X19
	414 Move W2, W21
	415 Compare X20, 0
	416 JumpIfEqual {660}
	417 Move X8, [X20+24]
	418 Compare X8, 0
	419 JumpIfEqual {660}
	420 Move W8, [X8+24]
	421 Subtract W8, W8, 1
	422 NotImplemented "Instruction CMP not yet implemented."
	423 Move W22, [X19+56]
	424 Move W8, [X19+40]
	425 Subtract W23, W22, 1
	426 NotImplemented "Instruction CMP not yet implemented."
	427 Move [X19+56], W23
	428 Move X9, 0xAF5000
	429 Move X9, [X9+760]
	430 Move W24, [X19+24]
	431 Move X21, [X9]
	432 Move X9, [X19+32]
	433 Move X0, [X21+32]
	434 Move W20, [X9]
	435 Move W9, [X0+309]
	436 Move TEMP, X9
	437 And TEMP, TEMP, 1
	438 Compare TEMP, 1
	439 JumpIfEqual {442}
	440 Call 0x1C5D684
	441 Move W8, [X19+40]
	442 NotImplemented "Instruction CMP not yet implemented."
	443 Move X0, [X21+32]
	444 Add X21, X19, 32
	445 Move W8, [X0+309]
	446 Move TEMP, X8
	447 And TEMP, TEMP, 1
	448 Compare TEMP, 1
	449 JumpIfEqual {451}
	450 Call 0x1C5D684
	451 Move X8, [X0+192]
	452 Move X0, X21
	453 Move X1, [X8+56]
	454 Call 0x278E43C, X0
	455 Move W8, [X19+40]
	456 NotImplemented "Instruction CMP not yet implemented."
	457 Move X8, [X19+32]
	458 Move X9, W23
	459 Move W1, 38
	460 Move X0, X19
	461 Move W2, W31
	462 Move [X8], W24
	463 Move [X19+56], W22
	464 Call RegexWriter.Emit, X0, X1, X2
	465 Move W2, [X19+24]
	466 Move X0, X19
	467 Move W1, W20
	468 Compare X20, 0
	469 JumpIfEqual {660}
	470 Move W1, [X20+44]
	471 Move X0, X19
	472 Call RegexWriter.MapCapnum, X0, X1
	473 Move W1, [X20+48]
	474 Move W20, W0
	475 Move X0, X19
	476 Call RegexWriter.MapCapnum, X0, X1
	477 Move W1, 32
	478 Move W3, W0
	479 Move X0, X19
	480 Move W2, W20
	481 Move W1, 35
	482 Move X0, X19
	483 Call RegexWriter.Emit, X0, X1
	484 Move W8, [X19+56]
	485 Move W9, [X19+40]
	486 Subtract W8, W8, 1
	487 NotImplemented "Instruction CMP not yet implemented."
	488 Move [X19+56], W8
	489 Move X9, [X19+32]
	490 Move W2, [X19+24]
	491 Move X0, X19
	492 Move W1, [X9]
	493 Call RegexWriter.PatchJump, X0, X1, X2
	494 NotImplemented "Instruction CMP not yet implemented."
	495 Compare W21, 0
	496 JumpIfNotEqual {650}
	497 Move W23, [X19+56]
	498 Move W8, [X19+40]
	499 Subtract W24, W23, 1
	500 NotImplemented "Instruction CMP not yet implemented."
	501 Move [X19+56], W24
	502 Move X9, 0xAF5000
	503 Move X9, [X9+760]
	504 Move W25, [X19+24]
	505 Move X22, [X9]
	506 Move X9, [X19+32]
	507 Move X0, [X22+32]
	508 Move W21, [X9]
	509 Move W9, [X0+309]
	510 Move TEMP, X9
	511 And TEMP, TEMP, 1
	512 Compare TEMP, 1
	513 JumpIfEqual {516}
	514 Call 0x1C5D684
	515 Move W8, [X19+40]
	516 NotImplemented "Instruction CMP not yet implemented."
	517 Move X0, [X22+32]
	518 Add X22, X19, 32
	519 Move W8, [X0+309]
	520 Move TEMP, X8
	521 And TEMP, TEMP, 1
	522 Compare TEMP, 1
	523 JumpIfEqual {525}
	524 Call 0x1C5D684
	525 Move X8, [X0+192]
	526 Move X0, X22
	527 Move X1, [X8+56]
	528 Call 0x278E43C, X0
	529 Move W8, [X19+40]
	530 NotImplemented "Instruction CMP not yet implemented."
	531 Move X8, [X19+32]
	532 Move X9, W24
	533 Move W1, 38
	534 Move X0, X19
	535 Move W2, W31
	536 Move [X8], W25
	537 Move [X19+56], W23
	538 Call RegexWriter.Emit, X0, X1, X2
	539 Move W2, [X19+24]
	540 Move X0, X19
	541 Move W1, W21
	542 Call RegexWriter.PatchJump, X0, X1, X2
	543 Move W1, 36
	544 Move X0, X19
	545 Call RegexWriter.Emit, X0, X1
	546 Compare X20, 0
	547 JumpIfEqual {660}
	548 Move X8, [X20+24]
	549 Compare X8, 0
	550 JumpIfEqual {660}
	551 Move W8, [X8+24]
	552 NotImplemented "Instruction CMP not yet implemented."
	553 NotImplemented "Instruction CMP not yet implemented."
	554 NotImplemented "Instruction CMP not yet implemented."
	555 Compare W21, 0
	556 JumpIfNotEqual {650}
	557 Move W1, 33
	558 Move X0, X19
	559 Call RegexWriter.Emit, X0, X1
	560 Move W1, 36
	561 NotImplemented "Instruction CMP not yet implemented."
	562 Move W8, [X19+56]
	563 Move W9, [X19+40]
	564 Subtract W8, W8, 1
	565 NotImplemented "Instruction CMP not yet implemented."
	566 Move [X19+56], W8
	567 Move X9, [X19+32]
	568 Move W2, [X19+24]
	569 Move X0, X19
	570 Move W1, [X9]
	571 Call RegexWriter.PatchJump, X0, X1, X2
	572 Subtract W21, W21, 1
	573 Move W23, [X19+56]
	574 Move W8, [X19+40]
	575 Subtract W24, W23, 1
	576 NotImplemented "Instruction CMP not yet implemented."
	577 Move [X19+56], W24
	578 Move X9, 0xAF5000
	579 Move X9, [X9+760]
	580 Move W25, [X19+24]
	581 Move X22, [X9]
	582 Move X9, [X19+32]
	583 Move X0, [X22+32]
	584 Move W21, [X9]
	585 Move W9, [X0+309]
	586 Move TEMP, X9
	587 And TEMP, TEMP, 1
	588 Compare TEMP, 1
	589 JumpIfEqual {592}
	590 Call 0x1C5D684
	591 Move W8, [X19+40]
	592 NotImplemented "Instruction CMP not yet implemented."
	593 Move X0, [X22+32]
	594 Add X22, X19, 32
	595 Move W8, [X0+309]
	596 Move TEMP, X8
	597 And TEMP, TEMP, 1
	598 Compare TEMP, 1
	599 JumpIfEqual {601}
	600 Call 0x1C5D684
	601 Move X8, [X0+192]
	602 Move X0, X22
	603 Move X1, [X8+56]
	604 Call 0x278E43C, X0
	605 Move W8, [X19+40]
	606 NotImplemented "Instruction CMP not yet implemented."
	607 Move X8, [X19+32]
	608 Move X9, W24
	609 Move W1, 38
	610 Move X0, X19
	611 Move W2, W31
	612 Move [X8], W25
	613 Move [X19+56], W23
	614 Call RegexWriter.Emit, X0, X1, X2
	615 Move W2, [X19+24]
	616 Move X0, X19
	617 Move W1, W21
	618 Call RegexWriter.PatchJump, X0, X1, X2
	619 Move W1, 33
	620 Move X0, X19
	621 Call RegexWriter.Emit, X0, X1
	622 Move W1, 36
	623 Move X0, X19
	624 Call RegexWriter.Emit, X0, X1
	625 Compare X20, 0
	626 JumpIfEqual {660}
	627 Move X8, [X20+24]
	628 Compare X8, 0
	629 JumpIfEqual {660}
	630 Move W8, [X8+24]
	631 NotImplemented "Instruction CMP not yet implemented."
	632 Move W8, [X19+56]
	633 Move W9, [X19+40]
	634 Subtract W8, W8, 1
	635 NotImplemented "Instruction CMP not yet implemented."
	636 Move [X19+56], W8
	637 Move X9, [X19+32]
	638 Move W2, [X19+24]
	639 Move X0, X19
	640 Move W1, [X9]
	641 Move X20, [X31+64]
	642 Move X19, [X31+72]
	643 Move X22, [X31+48]
	644 Move X21, [X31+56]
	645 Move X24, [X31+32]
	646 Move X23, [X31+40]
	647 Move X30, [X31+16]
	648 Move X25, [X31+24]
	649 Add X31, X31, 80
	650 Move X20, [X31+64]
	651 Move X19, [X31+72]
	652 Move X22, [X31+48]
	653 Move X21, [X31+56]
	654 Move X24, [X31+32]
	655 Move X23, [X31+40]
	656 Move X30, [X31+16]
	657 Move X25, [X31+24]
	658 Add X31, X31, 80
	659 Return 
	660 Call 0x1C17F20
	661 Move X0, 0xAAD000
	662 Move X0, [X0+3144]
	663 Call 0x1C17D08
	664 Call 0x19913D0
	665 Move X0, X31
	666 Call CultureInfo.get_CurrentCulture
	667 Move X1, X0
	668 Add X0, X31, 12
	669 Move X2, X31
	670 Call Int32.ToString, X0, X1
	671 Move X19, X0
	672 Move X0, 0xAF4000
	673 Move X0, [X0+824]
	674 Call 0x1C17D08
	675 Move X1, X19
	676 Move X2, X31
	677 Call SR.Format, X0, X1
	678 Move X19, X0
	679 Move X0, 0xAB3000
	680 Move X0, [X0+1400]
	681 Call 0x1C17D08
	682 Call 0x1C17F10
	683 Move X1, X19
	684 Move X2, X31
	685 Move X20, X0
	686 Call ArgumentException..ctor, X0, X1
	687 Move X0, 0xAF4000
	688 Move X0, [X0+1568]
	689 Call 0x1C17D08
	690 Move X1, X0
	691 Move X0, X20
	692 Call 0x1C17DEC
	693 Call 0x1C17F28

