Type: System.Text.RegularExpressions.RegexFCD

Method: System.Void .ctor(System.Span`1<System.Int32> intStack)

Disassembly:
	0x0363C774 STP X22, X21, [X31 + 0x10]
	0x0363C778 STP X20, X19, [X31 + 0x20]
	0x0363C77C ADRP X22, 0xDA4000
	0x0363C780 ADRP X21, 0xAFF000
	0x0363C784 LDRB W8, [X22 + 0x569]
	0x0363C788 LDR X21, [X21 + 0x8E0]
	0x0363C78C MOV W20, W1
	0x0363C790 MOV X19, X0
	0x0363C794 TBNZ X8, 0x0, 0x363C7AC
	0x0363C798 ADRP X0, 0xAFF000
	0x0363C79C LDR X0, [X0 + 0x8E0]
	0x0363C7A0 BL 0x1C16CF4
	0x0363C7A4 MOVZ W8, 0x1
	0x0363C7A8 STRB W8, [X22 + 0x569]
	0x0363C7AC MOV X0, X19
	0x0363C7B0 MOV X1, X31
	0x0363C7B4 AND W22, W20, 0x1
	0x0363C7B8 BL 0x33BDD8C
	0x0363C7BC LDR X0, [X21]
	0x0363C7C0 BL 0x1C16F10
	0x0363C7C4 MOV X1, X31
	0x0363C7C8 MOV X20, X0
	0x0363C7CC BL 0x363414C
	0x0363C7D0 STR X20, [X19 + 0x10]
	0x0363C7D4 STRB W22, [X19 + 0x18]
	0x0363C7D8 LDP X20, X19, [X31 + 0x20]
	0x0363C7DC LDP X22, X21, [X31 + 0x10]
	0x0363C7E0 LDR X30, [X31], #0x30
	0x0363C7E4 RET
	0x0363C7E8 STP X30, X21, [X31 - 0x20]!
	0x0363C7EC STP X20, X19, [X31 + 0x10]
	0x0363C7F0 MOV X20, X0
	0x0363C7F4 LDR X0, [X0 + 0x10]
	0x0363C7F8 CBZ X0, 0x363C890
	0x0363C7FC MOV X19, X1
	0x0363C800 MOV X1, X31
	0x0363C804 MOV W21, W2
	0x0363C808 BL 0x3634250
	0x0363C80C TBZ X0, 0x0, 0x363C844
	0x0363C810 CBZ X19, 0x363C890
	0x0363C814 LDR X0, [X19 + 0x10]
	0x0363C818 CBZ X0, 0x363C890
	0x0363C81C MOV X1, X31
	0x0363C820 BL 0x3634250
	0x0363C824 TBZ X0, 0x0, 0x363C844
	0x0363C828 TBZ X21, 0x0, 0x363C84C
	0x0363C82C LDRB W8, [X20 + 0x18]
	0x0363C830 CBZ W8, 0x363C880
	0x0363C834 LDRB W8, [X19 + 0x18]
	0x0363C838 CBNZ W8, 0x363C85C
	0x0363C83C STRB W31, [X20 + 0x18]
	0x0363C840 B 0x363C85C
	0x0363C844 MOV W0, W31

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+32], X30
	003 Move [X31+40], X25
	004 Move [X31+48], X24
	005 Move [X31+56], X23
	006 Move [X31+64], X22
	007 Move [X31+72], X21
	008 Move [X31+80], X20
	009 Move [X31+88], X19
	010 Move X24, 0xDA5000
	011 Move X25, 0xB01000
	012 Move X22, 0xB01000
	013 Move X23, 0xB01000
	014 Move W8, [X24+1372]
	015 Move X25, [X25+688]
	016 Move X22, [X22+696]
	017 Move X23, [X23+704]
	018 Move X20, X2
	019 Move X21, X1
	020 Move X19, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {36}
	025 Move X0, 0xB01000
	026 Move X0, [X0+696]
	027 Call 0x1C17CF4
	028 Move X0, 0xB01000
	029 Move X0, [X0+688]
	030 Call 0x1C17CF4
	031 Move X0, 0xB01000
	032 Move X0, [X0+704]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X24+1372], W8
	036 Move X0, [X25]
	037 Call 0x1C17F10
	038 Move X2, [X22]
	039 Move W1, 32
	040 Move X22, X0
	041 Call List`1<Object>..ctor, X0, X1
	042 Move [X19], X22
	043 Move X3, [X23]
	044 NotImplemented "Instruction MOVI not yet implemented."
	045 Add X0, X31, 0
	046 Move X1, X21
	047 Move X2, X20
	048 Move [X31], V0
	049 Move [X31+8], V0
	050 Call 0x278E208, X0, X1
	051 Move V1, [X31]
	052 Move V0, [X31+16]
	053 Move [X19+42], W31
	054 NotImplemented "Instruction STRH not yet implemented."
	055 Move X22, [X31+64]
	056 Move X21, [X31+72]
	057 Move [X19+24], V0
	058 Move [X19+8], V1
	059 Move X20, [X31+80]
	060 Move X19, [X31+88]
	061 Move X24, [X31+48]
	062 Move X23, [X31+56]
	063 Move X30, [X31+32]
	064 Move X25, [X31+40]
	065 Add X31, X31, 96
	066 Return 

Method: System.Nullable`1<System.Text.RegularExpressions.RegexPrefix> FirstChars(System.Text.RegularExpressions.RegexTree t)

Disassembly:
	0x0363C848 B 0x363C884
	0x0363C84C LDRB W8, [X19 + 0x18]
	0x0363C850 CBZ W8, 0x363C85C
	0x0363C854 MOVZ W8, 0x1
	0x0363C858 STRB W8, [X20 + 0x18]
	0x0363C85C LDRB W8, [X20 + 0x19]
	0x0363C860 LDRB W9, [X19 + 0x19]
	0x0363C864 LDR X0, [X20 + 0x10]
	0x0363C868 ORR W8, W9, W8, 0x0
	0x0363C86C STRB W8, [X20 + 0x19]
	0x0363C870 CBZ X0, 0x363C890
	0x0363C874 LDR X1, [X19 + 0x10]
	0x0363C878 MOV X2, X31
	0x0363C87C BL 0x36343A0
	0x0363C880 MOVZ W0, 0x1
	0x0363C884 LDP X20, X19, [X31 + 0x10]
	0x0363C888 LDP X30, X21, [X31], #0x20
	0x0363C88C RET
	0x0363C890 BL 0x1C16F20
	0x0363C894 STP X30, X25, [X31 - 0x40]!
	0x0363C898 STP X24, X23, [X31 + 0x10]
	0x0363C89C STP X22, X21, [X31 + 0x20]
	0x0363C8A0 STP X20, X19, [X31 + 0x30]
	0x0363C8A4 ADRP X25, 0xDA4000
	0x0363C8A8 ADRP X23, 0xAFF000
	0x0363C8AC LDRB W8, [X25 + 0x56A]
	0x0363C8B0 LDR X23, [X23 + 0x8E0]
	0x0363C8B4 MOV W19, W4
	0x0363C8B8 MOV W21, W3
	0x0363C8BC MOV W24, W2
	0x0363C8C0 MOV W22, W1
	0x0363C8C4 MOV X20, X0
	0x0363C8C8 TBNZ X8, 0x0, 0x363C8E0
	0x0363C8CC ADRP X0, 0xAFF000
	0x0363C8D0 LDR X0, [X0 + 0x8E0]
	0x0363C8D4 BL 0x1C16CF4
	0x0363C8D8 MOVZ W8, 0x1
	0x0363C8DC STRB W8, [X25 + 0x56A]
	0x0363C8E0 MOV X0, X20
	0x0363C8E4 MOV X1, X31
	0x0363C8E8 BL 0x33BDD8C
	0x0363C8EC LDR X0, [X23]
	0x0363C8F0 BL 0x1C16F10
	0x0363C8F4 MOV X1, X31
	0x0363C8F8 MOV X23, X0
	0x0363C8FC BL 0x363414C
	0x0363C900 STR X23, [X20 + 0x10]
	0x0363C904 TBZ X24, 0x0, 0x363C94C
	0x0363C908 ANDS W31, W22, 0xFFFF
	0x0363C90C B.EQ 0x363C938
	0x0363C910 CBZ X23, 0x363C988
	0x0363C914 ORN W8, W31, W22, 0x0
	0x0363C918 SUB W2, W22, 0x1
	0x0363C91C MOV X0, X23
	0x0363C920 MOV W1, W31
	0x0363C924 MOV X3, X31
	0x0363C928 AND W24, W8, 0xFFFF
	0x0363C92C BL 0x3634284
	0x0363C930 CBZ W24, 0x363C964
	0x0363C934 LDR X23, [X20 + 0x10]
	0x0363C938 CBZ X23, 0x363C988
	0x0363C93C ADD W1, W22, 0x1
	0x0363C940 MOVZ W2, 0xFFFF
	0x0363C944 MOV X0, X23
	0x0363C948 B 0x363C95C
	0x0363C94C CBZ X23, 0x363C988
	0x0363C950 MOV X0, X23
	0x0363C954 MOV W1, W22
	0x0363C958 MOV W2, W22
	0x0363C95C MOV X3, X31
	0x0363C960 BL 0x3634284
	0x0363C964 AND W8, W21, 0x1
	0x0363C968 AND W9, W19, 0x1
	0x0363C96C STRB W9, [X20 + 0x19]
	0x0363C970 STRB W8, [X20 + 0x18]
	0x0363C974 LDP X20, X19, [X31 + 0x30]
	0x0363C978 LDP X22, X21, [X31 + 0x20]
	0x0363C97C LDP X24, X23, [X31 + 0x10]
	0x0363C980 LDP X30, X25, [X31], #0x40
	0x0363C984 RET
	0x0363C988 BL 0x1C16F20
	0x0363C98C STR X30, [X31 - 0x40]!
	0x0363C990 STP X24, X23, [X31 + 0x10]
	0x0363C994 STP X22, X21, [X31 + 0x20]
	0x0363C998 STP X20, X19, [X31 + 0x30]

ISIL:
	001 Move [X31-48], X29
	002 Move [X31-40], X30
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Add X29, X31, 0
	008 Subtract X31, X31, 64
	009 NotImplemented "Instruction MRS not yet implemented."
	010 Move X9, [X22+40]
	011 Move X21, 0xDA5000
	012 Move X20, X0
	013 Move X19, X8
	014 Move [X29-8], X9
	015 Move W9, [X21+1373]
	016 Move TEMP, X9
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {31}
	020 Move X0, 0xABA000
	021 Move X0, [X0+3144]
	022 Call 0x1C17CF4
	023 Move X0, 0xB01000
	024 Move X0, [X0+712]
	025 Call 0x1C17CF4
	026 Move X0, 0xAE7000
	027 Move X0, [X0+352]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X21+1373], W8
	031 Add X8, X31, 0
	032 NotImplemented "Instruction MOVI not yet implemented."
	033 Subtract X1, X8, 128
	034 Move [X29-48], V0
	035 Move [X29-40], V0
	036 Move [X29-64], V0
	037 Add X31, X1, 0
	038 Subtract X0, X29, 64
	039 Move W2, 32
	040 Move [X8-32], V0
	041 Move [X8-24], V0
	042 Move [X8-64], V0
	043 Move [X8-56], V0
	044 Move [X8-96], V0
	045 Move [X8-88], V0
	046 Move [X8-128], V0
	047 Move [X8-120], V0
	048 Call RegexFCD..ctor, X0, X1
	049 Subtract X0, X29, 64
	050 Move X1, X20
	051 Call RegexFCD.RegexFCFromRegexTree, X0, X1
	052 Move X21, X0
	053 Subtract X0, X29, 64
	054 Call RegexFCD.Dispose, X0
	055 Compare X21, 0
	056 JumpIfEqual {60}
	057 Move W8, [X21+24]
	058 Compare W8, 0
	059 JumpIfEqual {63}
	060 Move [X19], X31
	061 Move [X19+8], X31
	062 Move [X19+16], X31
	063 Compare X20, 0
	064 JumpIfEqual {104}
	065 Move X8, 0xABA000
	066 Move X8, [X8+3144]
	067 Move W20, [X20+64]
	068 Move X0, [X8]
	069 Move W8, [X0+224]
	070 Compare W8, 0
	071 JumpIfNotEqual {73}
	072 Call 0x1C17DFC
	073 Move X0, X31
	074 Move TEMP, X20
	075 And TEMP, TEMP, 512
	076 Compare TEMP, 512
	077 JumpIfEqual {79}
	078 Call CultureInfo.get_CurrentCulture
	079 Call CultureInfo.get_InvariantCulture
	080 Move X1, X0
	081 Move X0, X21
	082 Call RegexFC.GetFirstChars, X0, X1
	083 Move X8, 0xB01000
	084 Move W1, [X21+25]
	085 Move X8, [X8+712]
	086 Move X2, X0
	087 Move X0, X19
	088 Move [X19+8], X31
	089 Move [X19+16], X31
	090 Move X3, [X8]
	091 Move [X19], X31
	092 Call Nullable`1<RegexPrefix>..ctor, X0, X1
	093 Move X8, [X22+40]
	094 NotImplemented "Instruction LDUR not yet implemented."
	095 NotImplemented "Instruction CMP not yet implemented."
	096 Add X31, X29, 0
	097 Move X20, [X31+32]
	098 Move X19, [X31+40]
	099 Move X22, [X31+16]
	100 Move X21, [X31+24]
	101 Move X29, [X31+48]
	102 Move X30, [X31+56]
	103 Return X0
	104 Call 0x1C17F20
	105 Call 0x3EB2B20

Method: System.Text.RegularExpressions.RegexPrefix Prefix(System.Text.RegularExpressions.RegexTree tree)

Disassembly:
	0x0363CBC4 B 0x3646D0C
	0x0363CBC8 LDP X30, X19, [X31], #0x10
	0x0363CBCC RET
	0x0363CBD0 STR W1, [X0 + 0x28]
	0x0363CBD4 RET
	0x0363CBD8 STR X30, [X31 - 0x10]!
	0x0363CBDC LDR X8, [X0 + 0x30]
	0x0363CBE0 CBZ X8, 0x363CBF8
	0x0363CBE4 LDR W8, [X8 + 0x18]
	0x0363CBE8 SUB W8, W8, W1
	0x0363CBEC STR W8, [X0 + 0x38]
	0x0363CBF0 LDR X30, [X31], #0x10
	0x0363CBF4 RET
	0x0363CBF8 BL 0x1C16F20
	0x0363CBFC LDR W0, [X0 + 0x18]
	0x0363CC00 RET
	0x0363CC04 LDR W0, [X0 + 0x28]
	0x0363CC08 RET
	0x0363CC0C STR X30, [X31 - 0x10]!
	0x0363CC10 LDR X8, [X0 + 0x30]
	0x0363CC14 CBZ X8, 0x363CC2C
	0x0363CC18 LDR W9, [X0 + 0x38]
	0x0363CC1C LDR W8, [X8 + 0x18]
	0x0363CC20 SUB W0, W8, W9
	0x0363CC24 LDR X30, [X31], #0x10
	0x0363CC28 RET
	0x0363CC2C BL 0x1C16F20
	0x0363CC30 STR X30, [X31 - 0x10]!
	0x0363CC34 LDR W9, [X0 + 0x38]
	0x0363CC38 LDR X8, [X0 + 0x30]
	0x0363CC3C SUB W9, W9, 0x1
	0x0363CC40 STR W9, [X0 + 0x38]
	0x0363CC44 CBZ X8, 0x363CC68
	0x0363CC48 LDR W10, [X8 + 0x18]
	0x0363CC4C CMP W9, W10
	0x0363CC50 B.CS 0x363CC6C
	0x0363CC54 LDR W10, [X0 + 0x94]
	0x0363CC58 ADD X8, X8, W9, 0x2, SXTW
	0x0363CC5C STR W10, [X8 + 0x20]
	0x0363CC60 LDR X30, [X31], #0x10
	0x0363CC64 RET
	0x0363CC68 BL 0x1C16F20
	0x0363CC6C BL 0x1C16F28
	0x0363CC70 STR X30, [X31 - 0x10]!
	0x0363CC74 LDR W9, [X0 + 0x38]
	0x0363CC78 LDR X8, [X0 + 0x30]
	0x0363CC7C SUB W9, W9, 0x1
	0x0363CC80 STR W9, [X0 + 0x38]
	0x0363CC84 CBZ X8, 0x363CCC8
	0x0363CC88 LDR W10, [X8 + 0x18]
	0x0363CC8C CMP W9, W10
	0x0363CC90 B.CS 0x363CCC4
	0x0363CC94 ADD X9, X8, W9, 0x2, SXTW
	0x0363CC98 STR W1, [X9 + 0x20]
	0x0363CC9C LDR W9, [X0 + 0x38]
	0x0363CCA0 SUB W9, W9, 0x1
	0x0363CCA4 CMP W9, W10
	0x0363CCA8 STR W9, [X0 + 0x38]
	0x0363CCAC B.CS 0x363CCC4
	0x0363CCB0 LDR W10, [X0 + 0x94]
	0x0363CCB4 ADD X8, X8, W9, 0x2, SXTW
	0x0363CCB8 STR W10, [X8 + 0x20]
	0x0363CCBC LDR X30, [X31], #0x10
	0x0363CCC0 RET
	0x0363CCC4 BL 0x1C16F28
	0x0363CCC8 BL 0x1C16F20
	0x0363CCCC STR X30, [X31 - 0x10]!
	0x0363CCD0 LDR W9, [X0 + 0x38]
	0x0363CCD4 LDR X8, [X0 + 0x30]
	0x0363CCD8 SUB W10, W9, 0x1
	0x0363CCDC STR W10, [X0 + 0x38]
	0x0363CCE0 CBZ X8, 0x363CD40
	0x0363CCE4 LDR W9, [X8 + 0x18]
	0x0363CCE8 CMP W10, W9
	0x0363CCEC B.CS 0x363CD3C
	0x0363CCF0 ADD X10, X8, W10, 0x2, SXTW
	0x0363CCF4 STR W1, [X10 + 0x20]
	0x0363CCF8 LDR W10, [X0 + 0x38]
	0x0363CCFC SUB W10, W10, 0x1
	0x0363CD00 CMP W10, W9
	0x0363CD04 STR W10, [X0 + 0x38]
	0x0363CD08 B.CS 0x363CD3C
	0x0363CD0C ADD X10, X8, W10, 0x2, SXTW
	0x0363CD10 STR W2, [X10 + 0x20]
	0x0363CD14 LDR W10, [X0 + 0x38]
	0x0363CD18 SUB W10, W10, 0x1
	0x0363CD1C CMP W10, W9
	0x0363CD20 STR W10, [X0 + 0x38]
	0x0363CD24 B.CS 0x363CD3C
	0x0363CD28 LDR W9, [X0 + 0x94]
	0x0363CD2C ADD X8, X8, W10, 0x2, SXTW
	0x0363CD30 STR W9, [X8 + 0x20]
	0x0363CD34 LDR X30, [X31], #0x10
	0x0363CD38 RET
	0x0363CD3C BL 0x1C16F28
	0x0363CD40 BL 0x1C16F20
	0x0363CD44 STR X30, [X31 - 0x10]!
	0x0363CD48 LDR W9, [X0 + 0x38]
	0x0363CD4C LDR X8, [X0 + 0x30]
	0x0363CD50 SUB W10, W9, 0x1
	0x0363CD54 STR W10, [X0 + 0x38]
	0x0363CD58 CBZ X8, 0x363CDD4
	0x0363CD5C LDR W9, [X8 + 0x18]
	0x0363CD60 CMP W10, W9
	0x0363CD64 B.CS 0x363CDD0
	0x0363CD68 ADD X10, X8, W10, 0x2, SXTW
	0x0363CD6C STR W1, [X10 + 0x20]
	0x0363CD70 LDR W10, [X0 + 0x38]
	0x0363CD74 SUB W10, W10, 0x1
	0x0363CD78 CMP W10, W9
	0x0363CD7C STR W10, [X0 + 0x38]
	0x0363CD80 B.CS 0x363CDD0
	0x0363CD84 ADD X10, X8, W10, 0x2, SXTW
	0x0363CD88 STR W2, [X10 + 0x20]
	0x0363CD8C LDR W10, [X0 + 0x38]
	0x0363CD90 SUB W10, W10, 0x1
	0x0363CD94 CMP W10, W9
	0x0363CD98 STR W10, [X0 + 0x38]
	0x0363CD9C B.CS 0x363CDD0
	0x0363CDA0 ADD X10, X8, W10, 0x2, SXTW
	0x0363CDA4 STR W3, [X10 + 0x20]
	0x0363CDA8 LDR W10, [X0 + 0x38]
	0x0363CDAC SUB W10, W10, 0x1
	0x0363CDB0 CMP W10, W9
	0x0363CDB4 STR W10, [X0 + 0x38]
	0x0363CDB8 B.CS 0x363CDD0
	0x0363CDBC LDR W9, [X0 + 0x94]
	0x0363CDC0 ADD X8, X8, W10, 0x2, SXTW
	0x0363CDC4 STR W9, [X8 + 0x20]
	0x0363CDC8 LDR X30, [X31], #0x10
	0x0363CDCC RET
	0x0363CDD0 BL 0x1C16F28
	0x0363CDD4 BL 0x1C16F20
	0x0363CDD8 STR X30, [X31 - 0x10]!
	0x0363CDDC LDR W9, [X0 + 0x38]
	0x0363CDE0 LDR X8, [X0 + 0x30]
	0x0363CDE4 SUB W9, W9, 0x1
	0x0363CDE8 STR W9, [X0 + 0x38]
	0x0363CDEC CBZ X8, 0x363CE34
	0x0363CDF0 LDR W10, [X8 + 0x18]
	0x0363CDF4 CMP W9, W10
	0x0363CDF8 B.CS 0x363CE30

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X20, 0xDA5000
	010 Move W8, [X20+1374]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {27}
	016 Move X0, 0xABA000
	017 Move X0, [X0+368]
	018 Call 0x1C17CF4
	019 Move X0, 0xB01000
	020 Move X0, [X0+752]
	021 Call 0x1C17CF4
	022 Move X0, 0xABA000
	023 Move X0, [X0+632]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X20+1374], W8
	027 Compare X19, 0
	028 JumpIfEqual {162}
	029 Move X0, [X19+16]
	030 Compare X0, 0
	031 JumpIfEqual {162}
	032 Move X20, 0xB01000
	033 Move X20, [X20+720]
	034 Move X22, -44711936
	035 Move X19, X31
	036 Move W21, W31
	037 Add X22, X22, 855
	038 Move X23, 0xDA5000
	039 Move W24, 1
	040 Move X25, X19
	041 Move X19, X0
	042 Move W8, [X19+16]
	043 Subtract W8, W8, 3
	044 NotImplemented "Instruction CMP not yet implemented."
	045 NotImplemented "Instruction ADR not yet implemented."
	046 Move W10, [X22]
	047 Add X9, X9, X10
	048 CallNoReturn X9
	049 Move X0, X19
	050 Move W1, W31
	051 Call RegexNode.Child, X0, X1
	052 Move X19, X0
	053 Move X25, X31
	054 Compare X0, 0
	055 JumpIfNotEqual {42}
	056 Move W8, [X23+1403]
	057 Move TEMP, X8
	058 And TEMP, TEMP, 1
	059 Compare TEMP, 1
	060 JumpIfEqual {64}
	061 Move X0, X20
	062 Call 0x1C17CF4
	063 Move [X23+1403], W24
	064 Move X8, [X19+24]
	065 Compare X8, 0
	066 JumpIfEqual {70}
	067 Move W8, [X8+24]
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Move W21, W31
	070 Compare X25, 0
	071 JumpIfEqual {98}
	072 Move W8, [X23+1403]
	073 Move TEMP, X8
	074 And TEMP, TEMP, 1
	075 Compare TEMP, 1
	076 JumpIfEqual {80}
	077 Move X0, X20
	078 Call 0x1C17CF4
	079 Move [X23+1403], W24
	080 Move X19, X25
	081 Move X8, [X19+24]
	082 Compare X8, 0
	083 JumpIfEqual {85}
	084 Move W8, [X8+24]
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Move X0, X19
	087 Move W1, W21
	088 Add W25, W21, 1
	089 Call RegexNode.Child, X0, X1
	090 Move W21, W25
	091 Compare X0, 0
	092 JumpIfNotEqual {40}
	093 Move W1, [X19+44]
	094 Move W9, 0x423E
	095 NotImplemented "Instruction MOVK not yet implemented."
	096 Subtract W8, W1, 1
	097 NotImplemented "Instruction CMP not yet implemented."
	098 Move X19, 0xB01000
	099 Move X19, [X19+752]
	100 Move X0, [X19]
	101 Move W8, [X0+224]
	102 Compare W8, 0
	103 JumpIfNotEqual {105}
	104 Call 0x1C17DFC
	105 Move X20, 0xDA5000
	106 Move W8, [X20+1471]
	107 Compare W8, 0
	108 JumpIfNotEqual {114}
	109 Move X0, 0xB01000
	110 Move X0, [X0+752]
	111 Call 0x1C17CF4
	112 Move W8, 1
	113 Move [X20+1471], W8
	114 Move X0, [X19]
	115 Move W8, [X0+224]
	116 Compare W8, 0
	117 JumpIfNotEqual {120}
	118 Call 0x1C17DFC
	119 Move X0, [X19]
	120 Move X8, [X0+184]
	121 Move X9, [X8]
	122 Move X1, [X8+8]
	123 And X8, X9, 0xFFFFFFFF
	124 Move X8, 0xABA000
	125 Move X8, [X8+368]
	126 Add X20, X19, 40
	127 Move X0, [X8]
	128 Move W8, [X0+224]
	129 Compare W8, 0
	130 JumpIfNotEqual {132}
	131 Call 0x1C17DFC
	132 Move X0, X20
	133 Move X1, X31
	134 Call Char.ToString, X0
	135 Move W9, [X19+52]
	136 Move X1, [X19+32]
	137 Move X8, 0xABA000
	138 Move X8, [X8+632]
	139 Move X8, [X8]
	140 Move X8, [X8+184]
	141 Move X0, [X8]
	142 Compare X0, 0
	143 JumpIfEqual {162}
	144 NotImplemented "Instruction LDRH not yet implemented."
	145 Move X3, X31
	146 Call String.PadRight, X0, X1, X2
	147 Move W9, [X19+52]
	148 Move X1, X0
	149 Move X8, X31
	150 And X9, X9, 1
	151 Move X20, [X31+48]
	152 Move X19, [X31+56]
	153 Move X22, [X31+32]
	154 Move X21, [X31+40]
	155 Move X24, [X31+16]
	156 Move X23, [X31+24]
	157 And X9, X9, 255
	158 Or X0, X8, X9
	159 Move X30, [X31+64]
	160 Move X25, [X31+72]
	161 Return X0
	162 Call 0x1C17F20

Method: System.Int32 Anchors(System.Text.RegularExpressions.RegexTree tree)

Disassembly:
	0x0363CEA0 STR W9, [X8 + 0x20]
	0x0363CEA4 LDR X30, [X31], #0x10
	0x0363CEA8 RET
	0x0363CEAC BL 0x1C16F28
	0x0363CEB0 BL 0x1C16F20
	0x0363CEB4 STR X30, [X31 - 0x20]!
	0x0363CEB8 STP X20, X19, [X31 + 0x10]
	0x0363CEBC LDRSW X8, [X0 + 0x38]
	0x0363CEC0 LDR X9, [X0 + 0x30]
	0x0363CEC4 ADD W10, W8, 0x1
	0x0363CEC8 STR W10, [X0 + 0x38]
	0x0363CECC CBZ X9, 0x363CFA0
	0x0363CED0 LDR W10, [X9 + 0x18]
	0x0363CED4 CMP W8, W10
	0x0363CED8 B.CS 0x363CFA4
	0x0363CEDC ADD X8, X9, X8, 0x2, LSL
	0x0363CEE0 LDR W20, [X8 + 0x20]
	0x0363CEE4 MOV X19, X0
	0x0363CEE8 TBNZ X20, 0x1F, 0x363CF30
	0x0363CEEC LDR X8, [X19 + 0x80]
	0x0363CEF0 CBZ X8, 0x363CFA0
	0x0363CEF4 LDR X8, [X8 + 0x10]
	0x0363CEF8 CBZ X8, 0x363CFA0
	0x0363CEFC LDR W9, [X8 + 0x18]
	0x0363CF00 CMP W20, W9
	0x0363CF04 B.CS 0x363CFA4
	0x0363CF08 ADD X8, X8, X20, 0x2, LSL
	0x0363CF0C LDR W8, [X8 + 0x20]
	0x0363CF10 MOVN W9, 0x2C0
	0x0363CF14 UBFM W10, W8, 0x9, 0x9
	0x0363CF18 UBFM W11, W8, 0x6, 0x6
	0x0363CF1C AND W8, W8, W9, 0x0
	0x0363CF20 MOVZ W9, 0x80
	0x0363CF24 STRB W10, [X19 + 0x99]
	0x0363CF28 STRB W11, [X19 + 0x98]
	0x0363CF2C B 0x363CF74
	0x0363CF30 LDR X8, [X19 + 0x80]
	0x0363CF34 CBZ X8, 0x363CFA0
	0x0363CF38 LDR X8, [X8 + 0x10]
	0x0363CF3C CBZ X8, 0x363CFA0
	0x0363CF40 LDR W9, [X8 + 0x18]
	0x0363CF44 SUB W20, W31, W20
	0x0363CF48 CMP W20, W9
	0x0363CF4C B.CS 0x363CFA4
	0x0363CF50 ADD X8, X8, W20, 0x2, SXTW
	0x0363CF54 LDR W8, [X8 + 0x20]
	0x0363CF58 MOVN W9, 0x340
	0x0363CF5C UBFM W10, W8, 0x9, 0x9
	0x0363CF60 UBFM W11, W8, 0x6, 0x6
	0x0363CF64 AND W8, W8, W9, 0x0
	0x0363CF68 STRB W10, [X19 + 0x99]
	0x0363CF6C STRB W11, [X19 + 0x98]
	0x0363CF70 MOVZ W9, 0x100
	0x0363CF74 LDR W10, [X19 + 0x94]
	0x0363CF78 ORR W8, W8, W9, 0x0
	0x0363CF7C STR W8, [X19 + 0x90]
	0x0363CF80 CMP W20, W10
	0x0363CF84 B.GE 0x363CF90
	0x0363CF88 MOV X0, X19
	0x0363CF8C BL 0x363CB88
	0x0363CF90 STR W20, [X19 + 0x94]
	0x0363CF94 LDP X20, X19, [X31 + 0x10]
	0x0363CF98 LDR X30, [X31], #0x20
	0x0363CF9C RET
	0x0363CFA0 BL 0x1C16F20
	0x0363CFA4 BL 0x1C16F28
	0x0363CFA8 LDR W8, [X0 + 0x38]
	0x0363CFAC ADD W8, W8, 0x1
	0x0363CFB0 STR W8, [X0 + 0x38]
	0x0363CFB4 RET
	0x0363CFB8 LDR W8, [X0 + 0x38]
	0x0363CFBC ADD W8, W8, W1
	0x0363CFC0 STR W8, [X0 + 0x38]
	0x0363CFC4 RET
	0x0363CFC8 STR X30, [X31 - 0x10]!
	0x0363CFCC LDR X8, [X0 + 0x30]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Compare X0, 0
	011 JumpIfEqual {75}
	012 Move X22, [X0+16]
	013 Compare X22, 0
	014 JumpIfEqual {75}
	015 Move X19, 0xB01000
	016 Move X19, [X19+720]
	017 Move X23, -44711936
	018 Move X21, X31
	019 Move W20, W31
	020 Add X23, X23, 894
	021 Move X24, 0xDA5000
	022 Move W25, 1
	023 Move W0, [X22+16]
	024 Subtract W8, W0, 14
	025 NotImplemented "Instruction CMP not yet implemented."
	026 NotImplemented "Instruction ADR not yet implemented."
	027 Move W10, [X23]
	028 Add X9, X9, X10
	029 CallNoReturn X9
	030 Move X0, X22
	031 Move W1, W31
	032 Call RegexNode.Child, X0, X1
	033 Move X22, X0
	034 Move X21, X31
	035 Compare X0, 0
	036 JumpIfNotEqual {23}
	037 Move W8, [X24+1403]
	038 Move TEMP, X8
	039 And TEMP, TEMP, 1
	040 Compare TEMP, 1
	041 JumpIfEqual {45}
	042 Move X0, X19
	043 Call 0x1C17CF4
	044 Move [X24+1403], W25
	045 Move X8, [X22+24]
	046 Compare X8, 0
	047 JumpIfEqual {52}
	048 Move W8, [X8+24]
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Move W20, W31
	051 Move X21, X22
	052 Compare X21, 0
	053 JumpIfEqual {85}
	054 Move W8, [X24+1403]
	055 Move TEMP, X8
	056 And TEMP, TEMP, 1
	057 Compare TEMP, 1
	058 JumpIfEqual {62}
	059 Move X0, X19
	060 Call 0x1C17CF4
	061 Move [X24+1403], W25
	062 Move X8, [X21+24]
	063 Compare X8, 0
	064 JumpIfEqual {66}
	065 Move W8, [X8+24]
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Move X0, X21
	068 Move W1, W20
	069 Add W26, W20, 1
	070 Call RegexNode.Child, X0, X1
	071 Move X22, X0
	072 Move W20, W26
	073 Compare X0, 0
	074 JumpIfNotEqual {23}
	075 Call 0x1C17F20
	076 Move X20, [X31+64]
	077 Move X19, [X31+72]
	078 Move X22, [X31+48]
	079 Move X21, [X31+56]
	080 Move X24, [X31+32]
	081 Move X23, [X31+40]
	082 Move X26, [X31+16]
	083 Move X25, [X31+24]
	084 Move X30, [X31+80]
	085 Move X20, [X31+64]
	086 Move X19, [X31+72]
	087 Move X22, [X31+48]
	088 Move X21, [X31+56]
	089 Move X24, [X31+32]
	090 Move X23, [X31+40]
	091 Move X26, [X31+16]
	092 Move X25, [X31+24]
	093 Move W0, W31
	094 Move X30, [X31+80]
	095 Return X0

Method: System.Int32 AnchorFromType(System.Int32 type)

Disassembly:
	0x0363CFD0 CBZ X8, 0x363CFF8
	0x0363CFD4 LDR W9, [X0 + 0x38]
	0x0363CFD8 LDR W10, [X8 + 0x18]
	0x0363CFDC SUB W9, W9, 0x1
	0x0363CFE0 CMP W9, W10
	0x0363CFE4 B.CS 0x363CFFC
	0x0363CFE8 ADD X8, X8, W9, 0x2, SXTW
	0x0363CFEC LDR W0, [X8 + 0x20]
	0x0363CFF0 LDR X30, [X31], #0x10
	0x0363CFF4 RET
	0x0363CFF8 BL 0x1C16F20
	0x0363CFFC BL 0x1C16F28
	0x0363D000 STR X30, [X31 - 0x10]!
	0x0363D004 LDR X8, [X0 + 0x30]
	0x0363D008 CBZ X8, 0x363D034
	0x0363D00C LDR W9, [X0 + 0x38]
	0x0363D010 LDR W10, [X8 + 0x18]
	0x0363D014 ORN W11, W31, W1, 0x0
	0x0363D018 ADD W9, W9, W11
	0x0363D01C CMP W9, W10
	0x0363D020 B.CS 0x363D038
	0x0363D024 ADD X8, X8, W9, 0x2, SXTW
	0x0363D028 LDR W0, [X8 + 0x20]
	0x0363D02C LDR X30, [X31], #0x10
	0x0363D030 RET
	0x0363D034 BL 0x1C16F20
	0x0363D038 BL 0x1C16F28
	0x0363D03C STR X30, [X31 - 0x10]!

ISIL:
	001 Subtract W8, W0, 14
	002 NotImplemented "Instruction CMP not yet implemented."
	003 Move X9, -44711936
	004 Add X9, X9, 922
	005 NotImplemented "Instruction ADR not yet implemented."
	006 Move W11, [X9]
	007 Add X10, X10, X11
	008 Move W0, 8
	009 CallNoReturn X10
	010 Move W0, 2
	011 Return X0
	012 NotImplemented "Instruction CMP not yet implemented."
	013 Move W0, 128
	014 Return X0
	015 Move W0, W31
	016 Return X0
	017 Move W0, 64
	018 Return X0
	019 Move W0, 1
	020 Return X0
	021 Move W0, 4
	022 Return X0
	023 Move W0, 16
	024 Return X0
	025 Move W0, 32
	026 Return X0

Method: System.Void PushInt(System.Int32 i)

Disassembly:
	0x0363D040 LDR W9, [X0 + 0x48]
	0x0363D044 LDR X8, [X0 + 0x40]
	0x0363D048 SUB W9, W9, 0x1
	0x0363D04C STR W9, [X0 + 0x48]
	0x0363D050 CBZ X8, 0x363D070
	0x0363D054 LDR W10, [X8 + 0x18]
	0x0363D058 CMP W9, W10
	0x0363D05C B.CS 0x363D074
	0x0363D060 ADD X8, X8, W9, 0x2, SXTW
	0x0363D064 STR W1, [X8 + 0x20]
	0x0363D068 LDR X30, [X31], #0x10
	0x0363D06C RET
	0x0363D070 BL 0x1C16F20
	0x0363D074 BL 0x1C16F28
	0x0363D078 STR X30, [X31 - 0x10]!
	0x0363D07C LDR W9, [X0 + 0x48]
	0x0363D080 LDR X8, [X0 + 0x40]
	0x0363D084 SUB W9, W9, 0x1
	0x0363D088 STR W9, [X0 + 0x48]
	0x0363D08C CBZ X8, 0x363D0CC
	0x0363D090 LDR W10, [X8 + 0x18]
	0x0363D094 CMP W9, W10
	0x0363D098 B.CS 0x363D0C8
	0x0363D09C ADD X9, X8, W9, 0x2, SXTW
	0x0363D0A0 STR W1, [X9 + 0x20]
	0x0363D0A4 LDR W9, [X0 + 0x48]
	0x0363D0A8 SUB W9, W9, 0x1
	0x0363D0AC CMP W9, W10
	0x0363D0B0 STR W9, [X0 + 0x48]
	0x0363D0B4 B.CS 0x363D0C8
	0x0363D0B8 ADD X8, X8, W9, 0x2, SXTW
	0x0363D0BC STR W2, [X8 + 0x20]
	0x0363D0C0 LDR X30, [X31], #0x10
	0x0363D0C4 RET
	0x0363D0C8 BL 0x1C16F28
	0x0363D0CC BL 0x1C16F20
	0x0363D0D0 LDR W8, [X0 + 0x48]
	0x0363D0D4 ADD W8, W8, 0x1
	0x0363D0D8 STR W8, [X0 + 0x48]
	0x0363D0DC RET
	0x0363D0E0 LDR W8, [X0 + 0x48]
	0x0363D0E4 ADD W8, W8, W1
	0x0363D0E8 STR W8, [X0 + 0x48]
	0x0363D0EC RET
	0x0363D0F0 STR X30, [X31 - 0x10]!

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xDA4000
	007 Move X22, 0xB00000
	008 Move W8, [X21+1375]
	009 Move X22, [X22+760]
	010 Move W19, W1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xB00000
	017 Move X0, [X0+760]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+1375], W8
	021 Move X21, [X22]
	022 NotImplemented "Instruction LDRSW not yet implemented."
	023 Move X0, [X21+32]
	024 Move W8, [X0+309]
	025 Move TEMP, X8
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {30}
	029 Call 0x1C5D684
	030 Move W8, [X20+16]
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move X0, [X21+32]
	033 Add X21, X20, 8
	034 Move W8, [X0+309]
	035 Move TEMP, X8
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfEqual {40}
	039 Call 0x1C5D684
	040 Move X8, [X0+192]
	041 Move X0, X21
	042 Move X1, [X8+56]
	043 Call 0x278E43C, X0
	044 Move W8, [X20+16]
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Move X8, [X20+8]
	047 Add W9, W22, 1
	048 Move [X8], W19
	049 Move [X20+32], W9
	050 Move X20, [X31+32]
	051 Move X19, [X31+40]
	052 Move X22, [X31+16]
	053 Move X21, [X31+24]
	054 Move X30, [X31+48]
	055 Return 
	056 Call 0x1C17F28

Method: System.Boolean IntIsEmpty()

Disassembly:
	0x0363D0F4 LDR X8, [X0 + 0x40]
	0x0363D0F8 CBZ X8, 0x363D120
	0x0363D0FC LDR W9, [X0 + 0x48]
	0x0363D100 LDR W10, [X8 + 0x18]
	0x0363D104 SUB W9, W9, 0x1
	0x0363D108 CMP W9, W10
	0x0363D10C B.CS 0x363D124
	0x0363D110 ADD X8, X8, W9, 0x2, SXTW
	0x0363D114 LDR W0, [X8 + 0x20]
	0x0363D118 LDR X30, [X31], #0x10
	0x0363D11C RET
	0x0363D120 BL 0x1C16F20
	0x0363D124 BL 0x1C16F28
	0x0363D128 STR X30, [X31 - 0x10]!
	0x0363D12C LDR X8, [X0 + 0x40]
	0x0363D130 CBZ X8, 0x363D15C
	0x0363D134 LDR W9, [X0 + 0x48]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xDA4000
	005 Move W8, [X20+1376]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xB00000
	012 Move X0, [X0+736]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+1376], W8
	016 Move W8, [X19+32]
	017 Move X20, [X31+16]
	018 Move X19, [X31+24]
	019 NotImplemented "Instruction CMP not yet implemented."
	020 NotImplemented "Instruction CSET not yet implemented."
	021 Move X30, [X31+32]
	022 Return X0

Method: System.Int32 PopInt()

Disassembly:
	0x0363D138 LDR W10, [X8 + 0x18]
	0x0363D13C ORN W11, W31, W1, 0x0
	0x0363D140 ADD W9, W9, W11
	0x0363D144 CMP W9, W10
	0x0363D148 B.CS 0x363D160
	0x0363D14C ADD X8, X8, W9, 0x2, SXTW
	0x0363D150 LDR W0, [X8 + 0x20]
	0x0363D154 LDR X30, [X31], #0x10
	0x0363D158 RET
	0x0363D15C BL 0x1C16F20
	0x0363D160 BL 0x1C16F28
	0x0363D164 LDR W0, [X0 + 0x90]
	0x0363D168 RET
	0x0363D16C STR X30, [X31 - 0x10]!
	0x0363D170 LDR X8, [X0 + 0x80]
	0x0363D174 CBZ X8, 0x363D1A8
	0x0363D178 LDR X8, [X8 + 0x10]
	0x0363D17C CBZ X8, 0x363D1A8
	0x0363D180 LDR W9, [X0 + 0x94]
	0x0363D184 LDR W10, [X8 + 0x18]
	0x0363D188 ADD W9, W1, W9
	0x0363D18C ADD W9, W9, 0x1
	0x0363D190 CMP W9, W10

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xDA4000
	005 Move W8, [X20+1377]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xB00000
	012 Move X0, [X0+768]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+1377], W8
	016 Move W8, [X19+32]
	017 Move W9, [X19+16]
	018 Subtract W8, W8, 1
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Move [X19+32], W8
	021 Move X9, [X19+8]
	022 Move X20, [X31+16]
	023 Move X19, [X31+24]
	024 Move W0, [X9]
	025 Move X30, [X31+32]
	026 Return X0
	027 Call 0x1C17F28

Method: System.Void PushFC(System.Text.RegularExpressions.RegexFC fc)

Disassembly:
	0x0363D194 B.CS 0x363D1AC
	0x0363D198 ADD X8, X8, W9, 0x2, SXTW
	0x0363D19C LDR W0, [X8 + 0x20]
	0x0363D1A0 LDR X30, [X31], #0x10
	0x0363D1A4 RET
	0x0363D1A8 BL 0x1C16F20
	0x0363D1AC BL 0x1C16F28
	0x0363D1B0 LDR W8, [X0 + 0x28]
	0x0363D1B4 LDR W9, [X0 + 0x10]
	0x0363D1B8 SUB W0, W8, W9
	0x0363D1BC RET
	0x0363D1C0 LDR W8, [X0 + 0x14]
	0x0363D1C4 LDR W9, [X0 + 0x28]
	0x0363D1C8 SUB W0, W8, W9
	0x0363D1CC RET
	0x0363D1D0 LDRB W8, [X0 + 0x98]
	0x0363D1D4 CMP W8, 0x0
	0x0363D1D8 MOVZ W8, 0x1
	0x0363D1DC CSNEG W0, W8, W8, EQ
	0x0363D1E0 RET
	0x0363D1E4 LDRB W8, [X0 + 0x98]
	0x0363D1E8 MOVZ W9, 0x10
	0x0363D1EC MOVZ W10, 0x28
	0x0363D1F0 MOVZ W11, 0x14
	0x0363D1F4 CMP W8, 0x0
	0x0363D1F8 CSEL X8, X10, X9, EQ
	0x0363D1FC CSEL X9, X11, X10, EQ
	0x0363D200 LDR W9, [X0, X9, LSL]
	0x0363D204 LDR W8, [X0, X8, LSL]
	0x0363D208 SUB W0, W9, W8
	0x0363D20C RET
	0x0363D210 STR X30, [X31 - 0x20]!
	0x0363D214 STP X20, X19, [X31 + 0x10]
	0x0363D218 MOV X19, X0
	0x0363D21C LDRB W8, [X0 + 0x98]
	0x0363D220 LDR X0, [X0 + 0x20]
	0x0363D224 LDR W1, [X19 + 0x28]
	0x0363D228 CBZ W8, 0x363D23C
	0x0363D22C SUB W1, W1, 0x1
	0x0363D230 STR W1, [X19 + 0x28]
	0x0363D234 CBNZ X0, 0x363D248

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xDA4000
	006 Move W8, [X21+1378]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xB00000
	014 Move X0, [X0+776]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+1378], W8
	018 Move X0, [X20]
	019 Compare X0, 0
	020 JumpIfEqual {52}
	021 Move X9, 0xB00000
	022 Move X9, [X9+776]
	023 Move W10, [X0+28]
	024 Move X8, [X0+16]
	025 Move X9, [X9]
	026 Add W10, W10, 1
	027 Move [X0+28], W10
	028 Compare X8, 0
	029 JumpIfEqual {52}
	030 NotImplemented "Instruction LDRSW not yet implemented."
	031 Move W11, [X8+24]
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Add W9, W10, 1
	034 Add X8, X8, X10
	035 Move [X0+24], W9
	036 Move [X8+32], X19
	037 Move X20, [X31+16]
	038 Move X19, [X31+24]
	039 Move X30, [X31+32]
	040 Move X21, [X31+40]
	041 Return 
	042 Move X8, [X9+32]
	043 Move X1, X19
	044 Move X20, [X31+16]
	045 Move X19, [X31+24]
	046 Move X8, [X8+192]
	047 Move X2, [X8+112]
	048 Move X30, [X31+32]
	049 Move X21, [X31+40]
	050 Call List`1<Object>.AddWithResize, X0, X1
	051 Return 
	052 Call 0x1C17F20

Method: System.Boolean FCIsEmpty()

Disassembly:
	0x0363D238 B 0x363D29C
	0x0363D23C ADD W8, W1, 0x1
	0x0363D240 STR W8, [X19 + 0x28]
	0x0363D244 CBZ X0, 0x363D29C
	0x0363D248 MOV X2, X31
	0x0363D24C BL 0x3222A1C
	0x0363D250 LDRB W8, [X19 + 0x99]
	0x0363D254 MOV W20, W0
	0x0363D258 CBZ W8, 0x363D28C
	0x0363D25C LDR X0, [X19 + 0x88]
	0x0363D260 CBZ X0, 0x363D29C
	0x0363D264 LDR X8, [X0]
	0x0363D268 LDP X9, X1, [X8 + 0x1D8]
	0x0363D26C BLR X9
	0x0363D270 CBZ X0, 0x363D29C
	0x0363D274 LDR X8, [X0]
	0x0363D278 MOV W1, W20
	0x0363D27C LDP X20, X19, [X31 + 0x10]
	0x0363D280 LDP X3, X2, [X8 + 0x1A8]
	0x0363D284 LDR X30, [X31], #0x20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xDA4000
	005 Move W8, [X20+1379]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xB00000
	012 Move X0, [X0+784]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+1379], W8
	016 Move X8, [X19]
	017 Compare X8, 0
	018 JumpIfEqual {26}
	019 Move W8, [X8+24]
	020 Move X20, [X31+16]
	021 Move X19, [X31+24]
	022 NotImplemented "Instruction CMP not yet implemented."
	023 NotImplemented "Instruction CSET not yet implemented."
	024 Move X30, [X31+32]
	025 Return X0
	026 Call 0x1C17F20

Method: System.Text.RegularExpressions.RegexFC PopFC()

Disassembly:
	0x0363D288 BR X3
	0x0363D28C MOV W0, W20
	0x0363D290 LDP X20, X19, [X31 + 0x10]
	0x0363D294 LDR X30, [X31], #0x20
	0x0363D298 RET
	0x0363D29C BL 0x1C16F20
	0x0363D2A0 STR X30, [X31 - 0x40]!
	0x0363D2A4 STP X24, X23, [X31 + 0x10]
	0x0363D2A8 STP X22, X21, [X31 + 0x20]
	0x0363D2AC STP X20, X19, [X31 + 0x30]
	0x0363D2B0 LDRB W8, [X0 + 0x98]
	0x0363D2B4 LDR W20, [X0 + 0x28]
	0x0363D2B8 MOV X19, X0
	0x0363D2BC MOV X21, X1
	0x0363D2C0 CBZ W8, 0x363D2E0
	0x0363D2C4 CBZ X21, 0x363D408
	0x0363D2C8 LDR W9, [X19 + 0x10]
	0x0363D2CC LDR W8, [X21 + 0x10]
	0x0363D2D0 SUB W9, W20, W9
	0x0363D2D4 CMP W9, W8
	0x0363D2D8 B.GE 0x363D2FC
	0x0363D2DC B 0x363D3D4
	0x0363D2E0 CBZ X21, 0x363D408
	0x0363D2E4 LDR W9, [X19 + 0x14]
	0x0363D2E8 LDR W8, [X21 + 0x10]
	0x0363D2EC SUB W9, W9, W20
	0x0363D2F0 CMP W9, W8
	0x0363D2F4 B.LT 0x363D3D4
	0x0363D2F8 ADD W20, W8, W20
	0x0363D2FC LDRB W9, [X19 + 0x99]
	0x0363D300 CBZ W9, 0x363D388

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xDA4000
	005 Move W8, [X20+1380]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0xB00000
	012 Move X0, [X0+792]
	013 Call 0x1C17CF4
	014 Move X0, 0xB00000
	015 Move X0, [X0+784]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1380], W8
	019 Move X0, X19
	020 Call RegexFCD.TopFC, X0
	021 Move X8, [X19]
	022 Compare X8, 0
	023 JumpIfEqual {37}
	024 Move X9, 0xB00000
	025 Move X9, [X9+792]
	026 Move W10, [X8+24]
	027 Move X19, X0
	028 Move X0, X8
	029 Move X2, [X9]
	030 Subtract W1, W10, 1
	031 Call List`1<Object>.RemoveAt, X0, X1
	032 Move X0, X19
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move X30, [X31+32]
	036 Return X0
	037 Call 0x1C17F20

Method: System.Text.RegularExpressions.RegexFC TopFC()

Disassembly:
	0x0363D304 SUB W22, W8, 0x1
	0x0363D308 ADDS W31, W22, 0x1
	0x0363D30C B.EQ 0x363D3DC
	0x0363D310 MOV X0, X21
	0x0363D314 MOV W1, W22
	0x0363D318 MOV X2, X31
	0x0363D31C BL 0x3222A1C
	0x0363D320 LDR X8, [X19 + 0x88]
	0x0363D324 CBZ X8, 0x363D408
	0x0363D328 LDR X9, [X8]
	0x0363D32C MOV W23, W0
	0x0363D330 MOV X0, X8
	0x0363D334 LDP X10, X1, [X9 + 0x1D8]
	0x0363D338 BLR X10
	0x0363D33C LDR X8, [X19 + 0x20]
	0x0363D340 CBZ X8, 0x363D408
	0x0363D344 SUB W20, W20, 0x1
	0x0363D348 MOV X24, X0
	0x0363D34C MOV X0, X8
	0x0363D350 MOV W1, W20
	0x0363D354 MOV X2, X31
	0x0363D358 BL 0x3222A1C
	0x0363D35C CBZ X24, 0x363D408
	0x0363D360 LDR X8, [X24]
	0x0363D364 MOV W1, W0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xDA4000
	005 Move W8, [X20+1381]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0xB00000
	012 Move X0, [X0+784]
	013 Call 0x1C17CF4
	014 Move X0, 0xB00000
	015 Move X0, [X0+800]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1381], W8
	019 Move X0, [X19]
	020 Compare X0, 0
	021 JumpIfEqual {32}
	022 Move X8, 0xB00000
	023 Move X8, [X8+800]
	024 Move W9, [X0+24]
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X2, [X8]
	028 Subtract W1, W9, 1
	029 Move X30, [X31+32]
	030 Call List`1<Object>.get_Item, X0, X1
	031 Return X0
	032 Call 0x1C17F20

Method: System.Void Dispose()

Disassembly:
	0x0363CB34 LDR X8, [X19 + 0x80]
	0x0363CB38 CBZ X8, 0x363CB80
	0x0363CB3C LDR X8, [X8 + 0x10]
	0x0363CB40 CBZ X8, 0x363CB80
	0x0363CB44 LDR W9, [X8 + 0x18]
	0x0363CB48 CMP W9, W20
	0x0363CB4C B.LS 0x363CB84
	0x0363CB50 ADD X8, X8, W20, 0x2, SXTW
	0x0363CB54 LDR W8, [X8 + 0x20]
	0x0363CB58 MOVN W9, 0x240
	0x0363CB5C UBFM W10, W8, 0x9, 0x9
	0x0363CB60 UBFM W11, W8, 0x6, 0x6
	0x0363CB64 AND W8, W8, W9, 0x0
	0x0363CB68 STRB W10, [X19 + 0x99]
	0x0363CB6C STRB W11, [X19 + 0x98]
	0x0363CB70 STP W8, W20, [X19 + 0x90]
	0x0363CB74 LDP X20, X19, [X31 + 0x10]
	0x0363CB78 LDR X30, [X31], #0x20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xDA5000
	006 Move X20, 0xB01000
	007 Move W8, [X21+1382]
	008 Move X20, [X20+744]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xB01000
	015 Move X0, [X0+744]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+1382], W8
	019 Move X1, [X20]
	020 Add X0, X19, 8
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move X30, [X31+32]
	024 Move X21, [X31+40]
	025 Call 0x3649634
	026 Return 

Method: System.Text.RegularExpressions.RegexFC RegexFCFromRegexTree(System.Text.RegularExpressions.RegexTree tree)

Disassembly:
	0x0363C99C ADRP X24, 0xDA4000
	0x0363C9A0 ADRP X23, 0xAFF000
	0x0363C9A4 LDRB W8, [X24 + 0x56B]
	0x0363C9A8 LDR X23, [X23 + 0x8E0]
	0x0363C9AC MOV W19, W3
	0x0363C9B0 MOV W22, W2
	0x0363C9B4 MOV X21, X1
	0x0363C9B8 MOV X20, X0
	0x0363C9BC TBNZ X8, 0x0, 0x363C9D4
	0x0363C9C0 ADRP X0, 0xAFF000
	0x0363C9C4 LDR X0, [X0 + 0x8E0]
	0x0363C9C8 BL 0x1C16CF4
	0x0363C9CC MOVZ W8, 0x1
	0x0363C9D0 STRB W8, [X24 + 0x56B]
	0x0363C9D4 MOV X0, X20
	0x0363C9D8 MOV X1, X31
	0x0363C9DC BL 0x33BDD8C
	0x0363C9E0 LDR X0, [X23]
	0x0363C9E4 LDR W8, [X0 + 0xE0]
	0x0363C9E8 CBNZ W8, 0x363C9F0
	0x0363C9EC BL 0x1C16DFC
	0x0363C9F0 MOV X0, X21
	0x0363C9F4 MOV X1, X31
	0x0363C9F8 AND W22, W22, 0x1
	0x0363C9FC BL 0x3635CFC
	0x0363CA00 AND W8, W19, 0x1
	0x0363CA04 STR X0, [X20 + 0x10]
	0x0363CA08 STRB W22, [X20 + 0x18]
	0x0363CA0C STRB W8, [X20 + 0x19]
	0x0363CA10 LDP X20, X19, [X31 + 0x30]
	0x0363CA14 LDP X22, X21, [X31 + 0x20]
	0x0363CA18 LDP X24, X23, [X31 + 0x10]
	0x0363CA1C LDR X30, [X31], #0x40
	0x0363CA20 RET
	0x0363CA24 LDRB W0, [X0 + 0x19]
	0x0363CA28 RET
	0x0363CA2C AND W8, W1, 0x1
	0x0363CA30 STRB W8, [X0 + 0x19]
	0x0363CA34 RET
	0x0363CA38 STP X30, X21, [X31 - 0x20]!
	0x0363CA3C STP X20, X19, [X31 + 0x10]
	0x0363CA40 MOV X20, X1
	0x0363CA44 MOV X1, X31
	0x0363CA48 MOV X19, X2
	0x0363CA4C MOV X21, X0
	0x0363CA50 BL 0x33BDD8C
	0x0363CA54 STP X20, X19, [X21 + 0x80]
	0x0363CA58 LDP X20, X19, [X31 + 0x10]
	0x0363CA5C LDP X30, X21, [X31], #0x20
	0x0363CA60 RET
	0x0363CA64 MOV X1, X31
	0x0363CA68 B 0x33BDD8C
	0x0363CA6C STR X30, [X31 - 0x10]!
	0x0363CA70 LDR X8, [X0 + 0x80]
	0x0363CA74 CBZ X8, 0x363CA88
	0x0363CA78 LDR W8, [X8 + 0x20]
	0x0363CA7C STR W8, [X0 + 0x5C]
	0x0363CA80 LDR X30, [X31], #0x10
	0x0363CA84 RET
	0x0363CA88 BL 0x1C16F20
	0x0363CA8C STR X30, [X31 - 0x10]!
	0x0363CA90 LDR W8, [X0 + 0x94]
	0x0363CA94 LDR X9, [X0 + 0x80]
	0x0363CA98 ADD W8, W1, W8
	0x0363CA9C ADD W8, W8, 0x1
	0x0363CAA0 STR W8, [X0 + 0x94]
	0x0363CAA4 CBZ X9, 0x363CAE8
	0x0363CAA8 LDR X9, [X9 + 0x10]
	0x0363CAAC CBZ X9, 0x363CAE8
	0x0363CAB0 LDR W10, [X9 + 0x18]
	0x0363CAB4 CMP W8, W10
	0x0363CAB8 B.CS 0x363CAEC
	0x0363CABC ADD X8, X9, W8, 0x2, SXTW
	0x0363CAC0 LDR W8, [X8 + 0x20]
	0x0363CAC4 MOVN W9, 0x240
	0x0363CAC8 UBFM W10, W8, 0x9, 0x9
	0x0363CACC UBFM W11, W8, 0x6, 0x6
	0x0363CAD0 AND W8, W8, W9, 0x0
	0x0363CAD4 STRB W10, [X0 + 0x99]
	0x0363CAD8 STRB W11, [X0 + 0x98]
	0x0363CADC STR W8, [X0 + 0x90]
	0x0363CAE0 LDR X30, [X31], #0x10
	0x0363CAE4 RET
	0x0363CAE8 BL 0x1C16F20
	0x0363CAEC BL 0x1C16F28
	0x0363CAF0 UBFM W8, W1, 0x9, 0x9
	0x0363CAF4 MOVN W10, 0x240
	0x0363CAF8 UBFM W9, W1, 0x6, 0x6
	0x0363CAFC STRB W8, [X0 + 0x99]
	0x0363CB00 AND W8, W1, W10, 0x0
	0x0363CB04 STRB W9, [X0 + 0x98]
	0x0363CB08 STR W8, [X0 + 0x90]
	0x0363CB0C RET
	0x0363CB10 STR X30, [X31 - 0x20]!
	0x0363CB14 STP X20, X19, [X31 + 0x10]
	0x0363CB18 LDR W8, [X0 + 0x94]
	0x0363CB1C MOV X19, X0
	0x0363CB20 MOV W20, W1
	0x0363CB24 CMP W8, W1
	0x0363CB28 B.LE 0x363CB34
	0x0363CB2C MOV X0, X19
	0x0363CB30 BL 0x363CB88

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X21, 0xDA5000
	010 Move W8, [X21+1383]
	011 Move X20, X1
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0xB01000
	018 Move X0, [X0+720]
	019 Call 0x1C17CF4
	020 Move X0, 0xB01000
	021 Move X0, [X0+728]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+1383], W8
	025 Compare X20, 0
	026 JumpIfEqual {107}
	027 Move X21, [X20+16]
	028 Compare X21, 0
	029 JumpIfEqual {107}
	030 Move X23, 0xB01000
	031 Move X20, 0xB01000
	032 Move X23, [X23+728]
	033 Move X20, [X20+736]
	034 Move W22, W31
	035 Move X24, 0xDA5000
	036 Move W25, 1
	037 Move X8, [X21+24]
	038 Compare X8, 0
	039 JumpIfEqual {59}
	040 Move W8, [X8+24]
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Move W8, [X19+40]
	043 Compare W8, 0
	044 JumpIfNotEqual {64}
	045 Move W8, [X21+16]
	046 Move X0, X19
	047 Move X2, X21
	048 Move W3, W22
	049 Or W1, W8, 64
	050 Call RegexFCD.CalculateFC, X0, X1, X2, X3
	051 Move W8, [X19+41]
	052 Compare W8, 0
	053 JumpIfEqual {94}
	054 Move [X19+41], W31
	055 Move X8, [X21+24]
	056 Add W22, W22, 1
	057 Compare X8, 0
	058 JumpIfNotEqual {40}
	059 Move W1, [X21+16]
	060 Move X0, X19
	061 Move X2, X21
	062 Move W3, W31
	063 Call RegexFCD.CalculateFC, X0, X1, X2, X3
	064 Move [X19+40], W31
	065 Move W8, [X24+1376]
	066 Move TEMP, X8
	067 And TEMP, TEMP, 1
	068 Compare TEMP, 1
	069 JumpIfEqual {73}
	070 Move X0, X20
	071 Call 0x1C17CF4
	072 Move [X24+1376], W25
	073 Move W8, [X19+32]
	074 Compare W8, 0
	075 JumpIfEqual {108}
	076 Move X0, X19
	077 Call RegexFCD.PopInt, X0
	078 Move X21, [X21+56]
	079 Compare X21, 0
	080 JumpIfEqual {107}
	081 Move W8, [X21+16]
	082 Move W22, W0
	083 Move X0, X19
	084 Move X2, X21
	085 Or W1, W8, 128
	086 Move W3, W22
	087 Call RegexFCD.CalculateFC, X0, X1, X2, X3
	088 Move W8, [X19+42]
	089 Compare W8, 0
	090 JumpIfNotEqual {114}
	091 Add W22, W22, 1
	092 Compare X21, 0
	093 JumpIfNotEqual {37}
	094 Move X0, [X21+24]
	095 Compare X0, 0
	096 JumpIfEqual {107}
	097 Move X2, [X23]
	098 Move W1, W22
	099 Call List`1<Object>.get_Item, X0, X1
	100 Move X21, X0
	101 Move X0, X19
	102 Move W1, W22
	103 Call RegexFCD.PushInt, X0, X1
	104 Move W22, W31
	105 Compare X21, 0
	106 JumpIfNotEqual {37}
	107 Call 0x1C17F20
	108 Move X0, X19
	109 Call RegexFCD.FCIsEmpty, X0
	110 Move TEMP, X0
	111 And TEMP, TEMP, 1
	112 Compare TEMP, 1
	113 JumpIfNotEqual {124}
	114 Move X20, [X31+48]
	115 Move X19, [X31+56]
	116 Move X22, [X31+32]
	117 Move X21, [X31+40]
	118 Move X24, [X31+16]
	119 Move X23, [X31+24]
	120 Move X0, X31
	121 Move X30, [X31+64]
	122 Move X25, [X31+72]
	123 Return X0
	124 Move X0, X19
	125 Move X20, [X31+48]
	126 Move X19, [X31+56]
	127 Move X22, [X31+32]
	128 Move X21, [X31+40]
	129 Move X24, [X31+16]
	130 Move X23, [X31+24]
	131 Move X30, [X31+64]
	132 Move X25, [X31+72]
	133 Call RegexFCD.PopFC, X0
	134 Return X0

Method: System.Void SkipChild()

Disassembly:
	0x0363D764 LDR X8, [X19 + 0x80]
	0x0363D768 CBNZ X8, 0x363D680
	0x0363D76C B 0x363D98C

ISIL:
	001 Move W8, 1
	002 Move [X0+41], W8
	003 Return 

Method: System.Void CalculateFC(System.Int32 NodeType, System.Text.RegularExpressions.RegexNode node, System.Int32 CurIndex)

Disassembly:
	0x0363D368 MOV X0, X24
	0x0363D36C LDP X9, X2, [X8 + 0x1A8]
	0x0363D370 BLR X9
	0x0363D374 AND W8, W23, 0xFFFF
	0x0363D378 CMP W8, W0, UXTH
	0x0363D37C SUB W22, W22, 0x1
	0x0363D380 B.EQ 0x363D308
	0x0363D384 B 0x363D3D4
	0x0363D388 SUB W22, W8, 0x1
	0x0363D38C ADDS W31, W22, 0x1
	0x0363D390 B.EQ 0x363D3DC
	0x0363D394 MOV X0, X21
	0x0363D398 MOV W1, W22
	0x0363D39C MOV X2, X31
	0x0363D3A0 BL 0x3222A1C
	0x0363D3A4 LDR X8, [X19 + 0x20]
	0x0363D3A8 CBZ X8, 0x363D408
	0x0363D3AC SUB W20, W20, 0x1
	0x0363D3B0 MOV W23, W0
	0x0363D3B4 MOV X0, X8
	0x0363D3B8 MOV W1, W20
	0x0363D3BC MOV X2, X31
	0x0363D3C0 BL 0x3222A1C
	0x0363D3C4 AND W8, W23, 0xFFFF
	0x0363D3C8 CMP W8, W0, UXTH
	0x0363D3CC SUB W22, W22, 0x1
	0x0363D3D0 B.EQ 0x363D38C
	0x0363D3D4 MOV W0, W31
	0x0363D3D8 B 0x363D3F4
	0x0363D3DC LDRB W8, [X19 + 0x98]
	0x0363D3E0 CBNZ W8, 0x363D3EC
	0x0363D3E4 LDR W8, [X21 + 0x10]
	0x0363D3E8 ADD W20, W8, W20
	0x0363D3EC MOVZ W0, 0x1
	0x0363D3F0 STR W20, [X19 + 0x28]
	0x0363D3F4 LDP X20, X19, [X31 + 0x30]
	0x0363D3F8 LDP X22, X21, [X31 + 0x20]
	0x0363D3FC LDP X24, X23, [X31 + 0x10]
	0x0363D400 LDR X30, [X31], #0x40
	0x0363D404 RET
	0x0363D408 BL 0x1C16F20
	0x0363D40C STP X30, X25, [X31 - 0x40]!
	0x0363D410 STP X24, X23, [X31 + 0x10]
	0x0363D414 STP X22, X21, [X31 + 0x20]
	0x0363D418 STP X20, X19, [X31 + 0x30]
	0x0363D41C LDRB W8, [X0 + 0x98]
	0x0363D420 MOV W20, W2
	0x0363D424 MOV X19, X0
	0x0363D428 CBZ W8, 0x363D444
	0x0363D42C LDR W21, [X19 + 0x28]
	0x0363D430 LDR W8, [X19 + 0x10]
	0x0363D434 SUB W8, W21, W8
	0x0363D438 CMP W8, W20
	0x0363D43C B.GE 0x363D45C
	0x0363D440 B 0x363D570
	0x0363D444 LDR W9, [X19 + 0x14]
	0x0363D448 LDR W8, [X19 + 0x28]
	0x0363D44C SUB W9, W9, W8
	0x0363D450 CMP W9, W20
	0x0363D454 B.LT 0x363D570
	0x0363D458 ADD W21, W8, W20
	0x0363D45C LDRB W8, [X19 + 0x99]
	0x0363D460 CBZ W8, 0x363D520
	0x0363D464 SUB W24, W1, 0x1
	0x0363D468 MOV W25, W20
	0x0363D46C CBZ W25, 0x363D578
	0x0363D470 LDR X0, [X19 + 0x88]
	0x0363D474 CBZ X0, 0x363D5A4
	0x0363D478 LDR X8, [X0]
	0x0363D47C LDP X9, X1, [X8 + 0x1D8]
	0x0363D480 BLR X9
	0x0363D484 LDR X8, [X19 + 0x20]
	0x0363D488 CBZ X8, 0x363D5A4
	0x0363D48C MOV X22, X0
	0x0363D490 ADD W1, W24, W25
	0x0363D494 MOV X0, X8
	0x0363D498 MOV X2, X31
	0x0363D49C BL 0x3222A1C
	0x0363D4A0 CBZ X22, 0x363D5A4
	0x0363D4A4 LDR X8, [X22]
	0x0363D4A8 MOV W1, W0
	0x0363D4AC MOV X0, X22
	0x0363D4B0 LDP X9, X2, [X8 + 0x1A8]
	0x0363D4B4 BLR X9
	0x0363D4B8 LDR X8, [X19 + 0x88]
	0x0363D4BC CBZ X8, 0x363D5A4
	0x0363D4C0 LDR X9, [X8]
	0x0363D4C4 MOV W22, W0
	0x0363D4C8 MOV X0, X8
	0x0363D4CC LDP X10, X1, [X9 + 0x1D8]
	0x0363D4D0 BLR X10
	0x0363D4D4 LDR X8, [X19 + 0x20]
	0x0363D4D8 CBZ X8, 0x363D5A4
	0x0363D4DC SUB W21, W21, 0x1
	0x0363D4E0 MOV X23, X0
	0x0363D4E4 MOV X0, X8
	0x0363D4E8 MOV W1, W21
	0x0363D4EC MOV X2, X31
	0x0363D4F0 BL 0x3222A1C
	0x0363D4F4 CBZ X23, 0x363D5A4
	0x0363D4F8 LDR X8, [X23]
	0x0363D4FC MOV W1, W0
	0x0363D500 MOV X0, X23
	0x0363D504 SUB W25, W25, 0x1
	0x0363D508 LDP X9, X2, [X8 + 0x1A8]
	0x0363D50C BLR X9
	0x0363D510 AND W8, W22, 0xFFFF
	0x0363D514 CMP W8, W0, UXTH
	0x0363D518 B.EQ 0x363D46C
	0x0363D51C B 0x363D570
	0x0363D520 SUB W23, W1, 0x1
	0x0363D524 MOV W24, W20
	0x0363D528 CBZ W24, 0x363D578
	0x0363D52C LDR X0, [X19 + 0x20]
	0x0363D530 CBZ X0, 0x363D5A4
	0x0363D534 ADD W1, W23, W24
	0x0363D538 MOV X2, X31
	0x0363D53C BL 0x3222A1C
	0x0363D540 LDR X8, [X19 + 0x20]
	0x0363D544 CBZ X8, 0x363D5A4
	0x0363D548 SUB W21, W21, 0x1
	0x0363D54C MOV W22, W0
	0x0363D550 MOV X0, X8
	0x0363D554 MOV W1, W21
	0x0363D558 MOV X2, X31
	0x0363D55C SUB W24, W24, 0x1
	0x0363D560 BL 0x3222A1C
	0x0363D564 AND W8, W22, 0xFFFF
	0x0363D568 CMP W8, W0, UXTH
	0x0363D56C B.EQ 0x363D528
	0x0363D570 MOV W0, W31
	0x0363D574 B 0x363D590
	0x0363D578 LDRB W8, [X19 + 0x98]
	0x0363D57C MOVZ W0, 0x1
	0x0363D580 CMP W8, 0x0
	0x0363D584 CSEL W8, W20, W31, EQ
	0x0363D588 ADD W8, W8, W21
	0x0363D58C STR W8, [X19 + 0x28]
	0x0363D590 LDP X20, X19, [X31 + 0x30]
	0x0363D594 LDP X22, X21, [X31 + 0x20]
	0x0363D598 LDP X24, X23, [X31 + 0x10]
	0x0363D59C LDP X30, X25, [X31], #0x40
	0x0363D5A0 RET
	0x0363D5A4 BL 0x1C16F20
	0x0363D5A8 STR X30, [X31 - 0x10]!
	0x0363D5AC CBZ X0, 0x363D5D4
	0x0363D5B0 LDRB W8, [X0 + 0x98]
	0x0363D5B4 LDR W9, [X0 + 0x28]
	0x0363D5B8 CMP W8, 0x0
	0x0363D5BC MOVN W8, 0x0
	0x0363D5C0 CSNEG W8, W8, W8, EQ
	0x0363D5C4 ADD W8, W8, W9
	0x0363D5C8 STR W8, [X0 + 0x28]
	0x0363D5CC LDR X30, [X31], #0x10
	0x0363D5D0 RET
	0x0363D5D4 BL 0x1C16F20
	0x0363D5D8 STR X30, [X31 - 0x10]!
	0x0363D5DC LDR X0, [X0 + 0x20]
	0x0363D5E0 CBZ X0, 0x363D5F0
	0x0363D5E4 MOV X2, X31
	0x0363D5E8 LDR X30, [X31], #0x10
	0x0363D5EC B 0x3222A1C
	0x0363D5F0 BL 0x1C16F20
	0x0363D5F4 STP X30, X23, [X31 - 0x30]!
	0x0363D5F8 STP X22, X21, [X31 + 0x10]
	0x0363D5FC STP X20, X19, [X31 + 0x20]
	0x0363D600 ADRP X20, 0xDA3000
	0x0363D604 LDRB W8, [X20 + 0x56C]
	0x0363D608 MOV X19, X0
	0x0363D60C TBNZ X8, 0x0, 0x363D648
	0x0363D610 ADRP X0, 0xAFF000
	0x0363D614 LDR X0, [X0 + 0x348]
	0x0363D618 BL 0x1C16CF4
	0x0363D61C ADRP X0, 0xAFF000
	0x0363D620 LDR X0, [X0 + 0x350]
	0x0363D624 BL 0x1C16CF4
	0x0363D628 ADRP X0, 0xAFE000
	0x0363D62C LDR X0, [X0 + 0x8E0]
	0x0363D630 BL 0x1C16CF4
	0x0363D634 ADRP X0, 0xAFF000
	0x0363D638 LDR X0, [X0 + 0x2F0]
	0x0363D63C BL 0x1C16CF4
	0x0363D640 MOVZ W8, 0x1
	0x0363D644 STRB W8, [X20 + 0x56C]
	0x0363D648 LDR X8, [X19 + 0x80]
	0x0363D64C CBZ X8, 0x363D98C
	0x0363D650 LDR W9, [X8 + 0x58]
	0x0363D654 MOVZ W10, 0x35
	0x0363D658 ANDS W31, W9, W10, 0x0
	0x0363D65C B.EQ 0x363D6B0
	0x0363D660 LDRB W10, [X8 + 0x5C]
	0x0363D664 CBZ W10, 0x363D700
	0x0363D668 TBZ X9, 0x5, 0x363D67C
	0x0363D66C LDR W10, [X19 + 0x28]
	0x0363D670 LDR W11, [X19 + 0x14]
	0x0363D674 CMP W10, W11
	0x0363D678 B.LT 0x363D770
	0x0363D67C TBNZ X9, 0x4, 0x363D730
	0x0363D680 LDR W9, [X8 + 0x58]
	0x0363D684 TBZ X9, 0x2, 0x363D698
	0x0363D688 LDR W10, [X19 + 0x28]
	0x0363D68C LDR W11, [X19 + 0x18]
	0x0363D690 CMP W10, W11
	0x0363D694 B.LT 0x363D770
	0x0363D698 TBZ X9, 0x0, 0x363D7F0
	0x0363D69C LDR W10, [X19 + 0x28]
	0x0363D6A0 LDR W9, [X19 + 0x10]
	0x0363D6A4 CMP W10, W9
	0x0363D6A8 B.GT 0x363D7EC
	0x0363D6AC B 0x363D7F0
	0x0363D6B0 LDR X0, [X8 + 0x50]
	0x0363D6B4 CBZ X0, 0x363D780
	0x0363D6B8 LDR X1, [X19 + 0x20]
	0x0363D6BC LDR W2, [X19 + 0x28]
	0x0363D6C0 LDP W3, W4, [X19 + 0x10]
	0x0363D6C4 MOV X5, X31
	0x0363D6C8 BL 0x3633E68
	0x0363D6CC ADDS W31, W0, 0x1
	0x0363D6D0 STR W0, [X19 + 0x28]
	0x0363D6D4 B.NE 0x363D978
	0x0363D6D8 LDR X8, [X19 + 0x80]
	0x0363D6DC CBZ X8, 0x363D98C
	0x0363D6E0 LDRB W8, [X8 + 0x5C]
	0x0363D6E4 MOVZ W9, 0x10
	0x0363D6E8 MOV W0, W31
	0x0363D6EC CMP W8, 0x0
	0x0363D6F0 MOVZ W8, 0x14
	0x0363D6F4 CSEL X8, X8, X9, EQ
	0x0363D6F8 LDR W8, [X19, X8, LSL]
	0x0363D6FC B 0x363D778
	0x0363D700 TBZ X9, 0x0, 0x363D714
	0x0363D704 LDR W10, [X19 + 0x28]
	0x0363D708 LDR W11, [X19 + 0x10]
	0x0363D70C CMP W10, W11
	0x0363D710 B.GT 0x363D728
	0x0363D714 TBZ X9, 0x2, 0x363D7B8
	0x0363D718 LDR W10, [X19 + 0x28]
	0x0363D71C LDR W11, [X19 + 0x18]
	0x0363D720 CMP W10, W11
	0x0363D724 B.LE 0x363D7B8
	0x0363D728 LDR W8, [X19 + 0x14]
	0x0363D72C B 0x363D774
	0x0363D730 LDR W9, [X19 + 0x14]
	0x0363D734 LDR W1, [X19 + 0x28]
	0x0363D738 SUB W9, W9, 0x1
	0x0363D73C CMP W1, W9
	0x0363D740 B.LT 0x363D770
	0x0363D744 B.NE 0x363D680
	0x0363D748 LDR X0, [X19 + 0x20]
	0x0363D74C CBZ X0, 0x363D98C
	0x0363D750 MOV X2, X31
	0x0363D754 BL 0x3222A1C
	0x0363D758 AND W8, W0, 0xFFFF
	0x0363D75C CMP W8, 0xA
	0x0363D760 B.NE 0x363D770

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0xDA4000
	009 Move W8, [X20+1384]
	010 Move W22, W3
	011 Move X21, X2
	012 Move W23, W1
	013 Move X19, X0
	014 Move [X31+12], W1
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0xB00000
	020 Move X0, [X0+808]
	021 Call 0x1C17CF4
	022 Move X0, 0xB00000
	023 Move X0, [X0+816]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X20+1384], W8
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Move W8, W31
	029 Move W20, W31
	030 Compare X21, 0
	031 JumpIfEqual {242}
	032 Move W8, [X21+52]
	033 And W20, W8, 1
	034 Move W8, W8
	035 ShiftRight W8, 6
	036 And W8, W8, 63
	037 Subtract W9, W23, 3
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Move X10, -44716032
	040 Add X10, X10, 930
	041 NotImplemented "Instruction ADR not yet implemented."
	042 Move W12, [X10]
	043 Add X11, X11, X12
	044 CallNoReturn X11
	045 Move X8, 0xB00000
	046 Move X8, [X8+808]
	047 Move X0, [X8]
	048 Call 0x1C17F10
	049 Move W1, 1
	050 Move X20, X0
	051 Call RegexFC..ctor, X0, X1
	052 Move X0, X19
	053 Move X1, X20
	054 Compare X21, 0
	055 JumpIfEqual {242}
	056 Move X8, 0xB00000
	057 Move W23, [X21+44]
	058 Move X8, [X8+808]
	059 NotImplemented "Instruction LDRH not yet implemented."
	060 Move X0, [X8]
	061 Call 0x1C17F10
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Move X22, X0
	064 NotImplemented "Instruction CSET not yet implemented."
	065 Move W1, W21
	066 Move W2, W31
	067 Compare X21, 0
	068 JumpIfEqual {242}
	069 Move X8, 0xB00000
	070 Move W23, [X21+44]
	071 Move X8, [X8+808]
	072 NotImplemented "Instruction LDRH not yet implemented."
	073 Move X0, [X8]
	074 Call 0x1C17F10
	075 NotImplemented "Instruction CMP not yet implemented."
	076 Move X22, X0
	077 NotImplemented "Instruction CSET not yet implemented."
	078 Move W2, 1
	079 Move W1, W21
	080 Compare X21, 0
	081 JumpIfEqual {242}
	082 Move X8, 0xB00000
	083 Move X22, [X21+32]
	084 Move W23, [X21+44]
	085 Move X8, [X8+808]
	086 Move X0, [X8]
	087 Call 0x1C17F10
	088 NotImplemented "Instruction CMP not yet implemented."
	089 NotImplemented "Instruction CSET not yet implemented."
	090 Move X1, X22
	091 Move W3, W20
	092 Move X21, X0
	093 Call RegexFC..ctor, X0, X1, X2, X3
	094 Move X0, X19
	095 Move X1, X21
	096 Compare X21, 0
	097 JumpIfEqual {242}
	098 Move X8, 0xB00000
	099 Move X8, [X8+808]
	100 NotImplemented "Instruction LDRH not yet implemented."
	101 Move X0, [X8]
	102 Call 0x1C17F10
	103 NotImplemented "Instruction CMP not yet implemented."
	104 Move X22, X0
	105 NotImplemented "Instruction CSET not yet implemented."
	106 Move W1, W21
	107 Move W8, 1
	108 Move [X19+41], W8
	109 Compare X21, 0
	110 JumpIfEqual {242}
	111 Move X8, 0xB00000
	112 Move X21, [X21+32]
	113 Move X8, [X8+808]
	114 Move X0, [X8]
	115 Call 0x1C17F10
	116 Move X1, X21
	117 Move W2, W31
	118 Move W3, W20
	119 Move X22, X0
	120 Call RegexFC..ctor, X0, X1, X2, X3
	121 Compare X21, 0
	122 JumpIfEqual {242}
	123 Move X0, [X21+32]
	124 Compare X0, 0
	125 JumpIfEqual {242}
	126 Move W9, [X0+16]
	127 Compare W9, 0
	128 JumpIfEqual {45}
	129 Move TEMP, X8
	130 And TEMP, TEMP, 1
	131 Compare TEMP, 1
	132 JumpIfNotEqual {159}
	133 Subtract W1, W9, 1
	134 Move X8, 0xB00000
	135 Move X8, [X8+808]
	136 Move X0, [X8]
	137 Call 0x1C17F10
	138 Move X8, 0xB00000
	139 Move X8, [X8+816]
	140 Move W2, 1
	141 Move W3, W31
	142 Move X20, X0
	143 Move X1, [X8]
	144 Call RegexFC..ctor, X0, X1, X2, X3
	145 Subtract W8, W23, 152
	146 NotImplemented "Instruction CMP not yet implemented."
	147 Move X9, -44716032
	148 Add X9, X9, 1026
	149 NotImplemented "Instruction ADR not yet implemented."
	150 Move W11, [X9]
	151 Add X10, X10, X11
	152 CallNoReturn X10
	153 Compare W22, 0
	154 JumpIfNotEqual {221}
	155 Compare W22, 0
	156 JumpIfNotEqual {234}
	157 Move W8, 1
	158 Move [X19+41], W8
	159 Move W1, W31
	160 Move X2, X31
	161 Call String.get_Chars, X0, X1
	162 Move X8, 0xB00000
	163 Move X8, [X8+808]
	164 Move W21, W0
	165 Move X8, [X8]
	166 Move X0, X8
	167 Call 0x1C17F10
	168 Move X22, X0
	169 Move W1, W21
	170 Move W2, W31
	171 Move W3, W31
	172 Move W4, W20
	173 Call RegexFC..ctor, X0, X1, X2, X3, X4
	174 Move X0, X19
	175 Move X1, X22
	176 Move X20, [X31+48]
	177 Move X19, [X31+56]
	178 Move X22, [X31+32]
	179 Move X21, [X31+40]
	180 Move X30, [X31+16]
	181 Move X23, [X31+24]
	182 Add X31, X31, 64
	183 Call RegexFCD.PushFC, X0, X1
	184 Return 
	185 Compare X21, 0
	186 JumpIfEqual {242}
	187 Move W8, [X21+44]
	188 Compare W8, 0
	189 JumpIfNotEqual {234}
	190 Move X0, X19
	191 Call RegexFCD.TopFC, X0
	192 Compare X0, 0
	193 JumpIfEqual {242}
	194 Move W8, 1
	195 Move [X0+24], W8
	196 Compare W22, 0
	197 JumpIfEqual {211}
	198 Move X0, X19
	199 Call RegexFCD.PopFC, X0
	200 Move X20, X0
	201 Move X0, X19
	202 Call RegexFCD.TopFC, X0
	203 Compare X0, 0
	204 JumpIfEqual {242}
	205 Move W2, 1
	206 Move X1, X20
	207 Call RegexFC.AddFC, X0, X1, X2
	208 NotImplemented "Instruction ORN not yet implemented."
	209 And W8, W8, 1
	210 Move [X19+42], W8
	211 Move X0, X19
	212 Call RegexFCD.TopFC, X0
	213 Compare X0, 0
	214 JumpIfEqual {242}
	215 Move W8, [X0+24]
	216 Compare W8, 0
	217 JumpIfNotEqual {234}
	218 Move W8, 1
	219 Move [X19+40], W8
	220 NotImplemented "Instruction CMP not yet implemented."
	221 Move X0, X19
	222 Call RegexFCD.PopFC, X0
	223 Move X20, X0
	224 Move X0, X19
	225 Call RegexFCD.TopFC, X0
	226 Compare X0, 0
	227 JumpIfEqual {242}
	228 Move X1, X20
	229 Move W2, W31
	230 Call RegexFC.AddFC, X0, X1, X2
	231 NotImplemented "Instruction ORN not yet implemented."
	232 And W8, W8, 1
	233 Move [X19+42], W8
	234 Move X20, [X31+48]
	235 Move X19, [X31+56]
	236 Move X22, [X31+32]
	237 Move X21, [X31+40]
	238 Move X30, [X31+16]
	239 Move X23, [X31+24]
	240 Add X31, X31, 64
	241 Return 
	242 Call 0x1C17F20
	243 Move X0, 0xAB9000
	244 Move X0, [X0+3144]
	245 Call 0x1C17D08
	246 Call 0x19913D0
	247 Move X0, X31
	248 Call CultureInfo.get_CurrentCulture
	249 Move X1, X0
	250 Add X0, X31, 12
	251 Move X2, X31
	252 Call Int32.ToString, X0, X1
	253 Move X19, X0
	254 Move X0, 0xB00000
	255 Move X0, [X0+824]
	256 Call 0x1C17D08
	257 Move X1, X19
	258 Move X2, X31
	259 Call SR.Format, X0, X1
	260 Move X19, X0
	261 Move X0, 0xABF000
	262 Move X0, [X0+1400]
	263 Call 0x1C17D08
	264 Call 0x1C17F10
	265 Move X1, X19
	266 Move X2, X31
	267 Move X20, X0
	268 Call ArgumentException..ctor, X0, X1
	269 Move X0, 0xB00000
	270 Move X0, [X0+832]
	271 Call 0x1C17D08
	272 Move X1, X0
	273 Move X0, X20
	274 Call 0x1C17DEC

