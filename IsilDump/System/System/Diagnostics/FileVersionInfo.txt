Type: System.Diagnostics.FileVersionInfo

Method: System.Void .ctor()

Disassembly:
	0x0364C4E8 MOV X1, X31
	0x0364C4EC MOV W22, W4
	0x0364C4F0 MOV W21, W3
	0x0364C4F4 MOV X23, X2
	0x0364C4F8 MOV X19, X0
	0x0364C4FC BL 0x33BDD8C
	0x0364C500 TBNZ X21, 0x1F, 0x364C578
	0x0364C504 CMP W22, 0x2
	0x0364C508 B.LT 0x364C578
	0x0364C50C CBZ X23, 0x364C5C0
	0x0364C510 LDR W8, [X23 + 0x18]
	0x0364C514 SUB W8, W8, W21
	0x0364C518 CMP W8, W22
	0x0364C51C B.LT 0x364C578

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X1, X31
	004 Move X19, X0
	005 Call Object..ctor, X0
	006 NotImplemented "Instruction MOVI not yet implemented."
	007 Move [X19+125], X31
	008 Move [X19+96], V0
	009 Move [X19+104], V0
	010 Move [X19+64], V0
	011 Move [X19+72], V0
	012 Move [X19+32], V0
	013 Move [X19+40], V0
	014 Move [X19+1], V0
	015 Move [X19+136], V0
	016 Move [X19+152], V0
	017 Move X30, [X31+16]
	018 Move X19, [X31+24]
	019 Return 

Method: System.String get_FileName()

Disassembly:
	0x0364C520 ADD W8, W22, W21
	0x0364C524 MOV X0, X19

ISIL:
	001 Move X0, [X0+40]
	002 Return X0

Method: System.String get_ProductVersion()

Disassembly:
	0x0364C528 MOV W1, W20
	0x0364C52C STR X23, [X19 + 0x10]

ISIL:
	001 Move X0, [X0+112]
	002 Return X0

Method: System.Void GetVersionInfo_icall(System.Char* fileName, System.Int32 fileName_length)

Disassembly:
	0x0364C530 STP W8, W21, [X19 + 0x18]

ISIL:
	001 Call 0x1C51CA0
	002 Return 

Method: System.Void GetVersionInfo_internal(System.String fileName)

Disassembly:
	0x0364C534 BL 0x364C5C4
	0x0364C538 STR W31, [X31 + 0xC]
	0x0364C53C LDR X0, [X19 + 0x10]
	0x0364C540 LDP W2, W1, [X19 + 0x18]
	0x0364C544 ADD X3, X31, 0xC
	0x0364C548 BL 0x364C82C
	0x0364C54C LDR W8, [X19 + 0x1C]
	0x0364C550 LDR W9, [X31 + 0xC]
	0x0364C554 LDP X22, X21, [X31 + 0x20]
	0x0364C558 LDP X30, X23, [X31 + 0x10]
	0x0364C55C ADD W8, W9, W8
	0x0364C560 ADD W9, W8, W0
	0x0364C564 STP W8, W0, [X19 + 0x1C]
	0x0364C568 STR W9, [X19 + 0x18]
	0x0364C56C LDP X20, X19, [X31 + 0x30]
	0x0364C570 ADD X31, X31, 0x40
	0x0364C574 RET

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X0
	005 Compare X1, 0
	006 JumpIfEqual {20}
	007 Move X0, X31
	008 Move X20, X1
	009 Call RuntimeHelpers.get_OffsetToStringData
	010 Move W2, [X20+16]
	011 Add X1, X20, W0
	012 Compare X19, 0
	013 JumpIfEqual {23}
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 Call 0x1C51CA0
	019 Return 
	020 Move W2, W31
	021 Compare X19, 0
	022 JumpIfNotEqual {14}
	023 Call 0x1C17F20

Method: System.Diagnostics.FileVersionInfo GetVersionInfo(System.String fileName)

Disassembly:
	0x0364C578 ADRP X0, 0xAD4000
	0x0364C57C LDR X0, [X0 + 0xCE0]
	0x0364C580 BL 0x1C16D08
	0x0364C584 BL 0x1C16F10
	0x0364C588 MOV X19, X0
	0x0364C58C ADRP X0, 0xAED000
	0x0364C590 LDR X0, [X0 + 0xF30]
	0x0364C594 BL 0x1C16D08
	0x0364C598 MOV X1, X0
	0x0364C59C MOV X0, X19
	0x0364C5A0 MOV X2, X31
	0x0364C5A4 BL 0x3252170
	0x0364C5A8 ADRP X0, 0xAF0000
	0x0364C5AC LDR X0, [X0 + 0x738]
	0x0364C5B0 BL 0x1C16D08
	0x0364C5B4 MOV X1, X0
	0x0364C5B8 MOV X0, X19
	0x0364C5BC BL 0x1C16DEC
	0x0364C5C0 BL 0x1C16F20
	0x0364C5C4 STP X30, X19, [X31 - 0x10]!
	0x0364C5C8 LDP W8, W2, [X0 + 0x18]
	0x0364C5CC CMP W2, W8
	0x0364C5D0 B.GE 0x364C5FC
	0x0364C5D4 LDR X8, [X0 + 0x10]
	0x0364C5D8 MOV X19, X0
	0x0364C5DC MOV W0, W1
	0x0364C5E0 MOV X1, X8
	0x0364C5E4 BL 0x364D184
	0x0364C5E8 LDR W8, [X19 + 0x1C]
	0x0364C5EC ADD W8, W8, 0x1
	0x0364C5F0 STR W8, [X19 + 0x1C]
	0x0364C5F4 LDP X30, X19, [X31], #0x10
	0x0364C5F8 RET
	0x0364C5FC ADRP X0, 0xAD4000
	0x0364C600 LDR X0, [X0 + 0xCE0]
	0x0364C604 BL 0x1C16D08
	0x0364C608 BL 0x1C16F10
	0x0364C60C MOV X19, X0
	0x0364C610 ADRP X0, 0xAED000
	0x0364C614 LDR X0, [X0 + 0xF30]
	0x0364C618 BL 0x1C16D08
	0x0364C61C MOV X1, X0
	0x0364C620 MOV X0, X19
	0x0364C624 MOV X2, X31
	0x0364C628 BL 0x3252170
	0x0364C62C ADRP X0, 0xAF0000
	0x0364C630 LDR X0, [X0 + 0x740]
	0x0364C634 BL 0x1C16D08
	0x0364C638 MOV X1, X0
	0x0364C63C MOV X0, X19
	0x0364C640 BL 0x1C16DEC
	0x0364C644 SUB X31, X31, 0x20
	0x0364C648 STP X30, X19, [X31 + 0x10]
	0x0364C64C MOV X19, X0
	0x0364C650 STR W31, [X31 + 0xC]
	0x0364C654 LDR X0, [X0 + 0x10]
	0x0364C658 LDP W2, W1, [X19 + 0x18]
	0x0364C65C ADD X3, X31, 0xC
	0x0364C660 BL 0x364C82C
	0x0364C664 LDR W8, [X19 + 0x1C]
	0x0364C668 LDR W9, [X31 + 0xC]
	0x0364C66C ADD W8, W9, W8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xD95000
	006 Move X21, 0xACF000
	007 Move W8, [X20+1505]
	008 Move X21, [X21+464]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0xAF1000
	015 Move X0, [X0+1712]
	016 Call 0x1C17CF4
	017 Move X0, 0xACF000
	018 Move X0, [X0+464]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X20+1505], W8
	022 Move X0, [X21]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Move X0, X19
	028 Move X1, X31
	029 Call Path.GetFullPath, X0
	030 Move X1, X31
	031 Call File.Exists, X0
	032 Move TEMP, X0
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfNotEqual {63}
	036 Move X8, 0xAF1000
	037 Move X8, [X8+1712]
	038 Move X0, [X8]
	039 Call 0x1C17F10
	040 Move X1, X31
	041 Move X20, X0
	042 Call Object..ctor, X0
	043 NotImplemented "Instruction MOVI not yet implemented."
	044 Move X0, X20
	045 Move X1, X19
	046 Move [X20+125], X31
	047 Move [X20+96], V0
	048 Move [X20+104], V0
	049 Move [X20+64], V0
	050 Move [X20+72], V0
	051 Move [X20+32], V0
	052 Move [X20+40], V0
	053 Move [X20+1], V0
	054 Move [X20+136], V0
	055 Move [X20+152], V0
	056 Call FileVersionInfo.GetVersionInfo_internal, X0, X1
	057 Move X0, X20
	058 Move X20, [X31+16]
	059 Move X19, [X31+24]
	060 Move X30, [X31+32]
	061 Move X21, [X31+40]
	062 Return X0
	063 Move X0, 0xAD6000
	064 Move X0, [X0+1952]
	065 Call 0x1C17D08
	066 Call 0x1C17F10
	067 Move X1, X19
	068 Move X2, X31
	069 Move X20, X0
	070 Call FileNotFoundException..ctor, X0, X1
	071 Move X0, 0xAF1000
	072 Move X0, [X0+1720]
	073 Call 0x1C17D08
	074 Move X1, X0
	075 Move X0, X20
	076 Call 0x1C17DEC

Method: System.Void AppendFormat(System.Text.StringBuilder sb, System.String format, System.Object[] args)

Disassembly:
	0x0364C670 STR W8, [X19 + 0x1C]
	0x0364C674 LDP X30, X19, [X31 + 0x10]
	0x0364C678 ADD X31, X31, 0x20
	0x0364C67C RET
	0x0364C680 LDP W9, W8, [X0 + 0x18]

ISIL:
	001 Compare X0, 0
	002 JumpIfEqual {6}
	003 Move X3, X31
	004 Call StringBuilder.AppendFormat, X0, X1, X2
	005 Return 
	006 Move [X31-16], X30
	007 Call 0x1C17F20

Method: System.String ToString()

Disassembly:
	0x0364C684 CMP W8, W9
	0x0364C688 CSET W0, LT
	0x0364C68C RET
	0x0364C690 STP X30, X19, [X31 - 0x10]!
	0x0364C694 LDP W9, W8, [X0 + 0x18]
	0x0364C698 SXTW X8, W8
	0x0364C69C CMP W8, W9
	0x0364C6A0 B.GE 0x364C6D4
	0x0364C6A4 LDR X9, [X0 + 0x10]
	0x0364C6A8 CBZ X9, 0x364C71C
	0x0364C6AC LDR W10, [X9 + 0x18]
	0x0364C6B0 CMP W8, W10
	0x0364C6B4 B.CS 0x364C720
	0x0364C6B8 ADD X8, X9, X8
	0x0364C6BC LDRB W0, [X8 + 0x20]
	0x0364C6C0 ORN W8, W31, W0, 0x0
	0x0364C6C4 ANDS W31, W8, 0x1F
	0x0364C6C8 B.EQ 0x364C6D4
	0x0364C6CC LDP X30, X19, [X31], #0x10
	0x0364C6D0 RET
	0x0364C6D4 ADRP X0, 0xAD4000
	0x0364C6D8 LDR X0, [X0 + 0xCE0]
	0x0364C6DC BL 0x1C16D08
	0x0364C6E0 BL 0x1C16F10
	0x0364C6E4 MOV X19, X0
	0x0364C6E8 ADRP X0, 0xAED000
	0x0364C6EC LDR X0, [X0 + 0xF30]
	0x0364C6F0 BL 0x1C16D08
	0x0364C6F4 MOV X1, X0
	0x0364C6F8 MOV X0, X19
	0x0364C6FC MOV X2, X31
	0x0364C700 BL 0x3252170
	0x0364C704 ADRP X0, 0xAF0000
	0x0364C708 LDR X0, [X0 + 0x748]
	0x0364C70C BL 0x1C16D08
	0x0364C710 MOV X1, X0
	0x0364C714 MOV X0, X19
	0x0364C718 BL 0x1C16DEC
	0x0364C71C BL 0x1C16F20
	0x0364C720 BL 0x1C16F28
	0x0364C724 SUB X31, X31, 0x20
	0x0364C728 STP X30, X19, [X31 + 0x10]
	0x0364C72C MOV X19, X0
	0x0364C730 BL 0x364C690
	0x0364C734 MOV W1, W0
	0x0364C738 MOV X0, X19
	0x0364C73C BL 0x364C5C4
	0x0364C740 STR W31, [X31 + 0xC]
	0x0364C744 LDR X0, [X19 + 0x10]
	0x0364C748 LDP W2, W1, [X19 + 0x18]
	0x0364C74C ADD X3, X31, 0xC
	0x0364C750 BL 0x364C82C
	0x0364C754 LDR W8, [X19 + 0x1C]
	0x0364C758 LDR W9, [X31 + 0xC]
	0x0364C75C ADD W8, W9, W8
	0x0364C760 ADD W8, W8, W0
	0x0364C764 STR W8, [X19 + 0x1C]
	0x0364C768 LDP X30, X19, [X31 + 0x10]
	0x0364C76C ADD X31, X31, 0x20
	0x0364C770 RET
	0x0364C774 SUB X31, X31, 0x30
	0x0364C778 STP X30, X21, [X31 + 0x10]
	0x0364C77C STP X20, X19, [X31 + 0x20]
	0x0364C780 ADRP X21, 0xD94000
	0x0364C784 ADRP X20, 0xAA7000
	0x0364C788 LDRB W8, [X21 + 0x5EC]
	0x0364C78C LDR X20, [X20 + 0x618]
	0x0364C790 MOV X19, X0
	0x0364C794 TBNZ X8, 0x0, 0x364C7AC
	0x0364C798 ADRP X0, 0xAA7000
	0x0364C79C LDR X0, [X0 + 0x618]
	0x0364C7A0 BL 0x1C16CF4
	0x0364C7A4 MOVZ W8, 0x1
	0x0364C7A8 STRB W8, [X21 + 0x5EC]
	0x0364C7AC MOV X0, X19
	0x0364C7B0 STR W31, [X31 + 0xC]
	0x0364C7B4 BL 0x364C690
	0x0364C7B8 LDP W2, W8, [X19 + 0x18]
	0x0364C7BC LDR X0, [X19 + 0x10]
	0x0364C7C0 ADD X3, X31, 0xC
	0x0364C7C4 ADD W1, W8, 0x1
	0x0364C7C8 BL 0x364C82C
	0x0364C7CC LDR W9, [X31 + 0xC]
	0x0364C7D0 LDR X8, [X20]
	0x0364C7D4 ADD W9, W0, W9
	0x0364C7D8 ADD W20, W9, 0x1
	0x0364C7DC MOV X0, X8
	0x0364C7E0 MOV W1, W20
	0x0364C7E4 BL 0x1C16D6C
	0x0364C7E8 LDR X8, [X19 + 0x10]
	0x0364C7EC LDR W1, [X19 + 0x1C]
	0x0364C7F0 MOV X21, X0
	0x0364C7F4 MOV X2, X21
	0x0364C7F8 MOV X0, X8
	0x0364C7FC MOV W3, W31
	0x0364C800 MOV W4, W20
	0x0364C804 MOV X5, X31
	0x0364C808 BL 0x33A8A9C
	0x0364C80C LDR W8, [X19 + 0x1C]
	0x0364C810 MOV X0, X21
	0x0364C814 LDP X30, X21, [X31 + 0x10]
	0x0364C818 ADD W8, W8, W20
	0x0364C81C STR W8, [X19 + 0x1C]
	0x0364C820 LDP X20, X19, [X31 + 0x20]
	0x0364C824 ADD X31, X31, 0x30
	0x0364C828 RET
	0x0364C82C STP X30, X19, [X31 - 0x10]!
	0x0364C830 SUBS W9, W2, W1
	0x0364C834 B.LE 0x364C904
	0x0364C838 CBZ X0, 0x364C94C
	0x0364C83C LDR W12, [X0 + 0x18]
	0x0364C840 CMP W12, W1
	0x0364C844 B.LS 0x364C900
	0x0364C848 ADD X8, X0, W1, SXTW
	0x00000000 INVALID
	0x0364C850 AND W8, W10, 0xFF
	0x0364C854 TBNZ X10, 0x1F, 0x364C874
	0x0364C858 ORN W10, W31, W1, 0x0
	0x0364C85C ADD W10, W10, W2
	0x0364C860 MOVZ W9, 0x1
	0x0364C864 CMP W10, W8
	0x0364C868 STR W9, [X3]
	0x0364C86C B.GE 0x364C8F4
	0x0364C870 B 0x364C904
	0x0364C874 AND W11, W8, 0x7F
	0x0364C878 CMP W11, 0x5
	0x0364C87C B.CS 0x364C904
	0x0364C880 ADD W10, W11, 0x1
	0x0364C884 CMP W9, W11
	0x0364C888 STR W10, [X3]
	0x0364C88C B.LE 0x364C904
	0x0364C890 CBZ W11, 0x364C904
	0x0364C894 ADD W8, W10, W1
	0x0364C898 ADD W13, W1, 0x1
	0x0364C89C CMP W13, W8
	0x0364C8A0 B.GE 0x364C8E4
	0x0364C8A4 SXTW X8, W1
	0x0364C8A8 ORN W15, W31, W1, 0x0
	0x0364C8AC ADD X8, X8, X0
	0x0364C8B0 MOV W14, W31
	0x0364C8B4 SUB W13, W11, 0x1
	0x0364C8B8 ADD W12, W15, W12
	0x0364C8BC ADD X15, X8, 0x21
	0x0364C8C0 CMP W12, W13
	0x0364C8C4 B.LS 0x364C900
	0x0364C8C8 LDRB W8, [X15], #0x1
	0x0364C8CC SUBS W11, W11, 0x1
	0x0364C8D0 BFM W8, W14, 0x18, 0x17
	0x0364C8D4 MOV W14, W8
	0x0364C8D8 B.NE 0x364C8C0
	0x0364C8DC TBZ X8, 0x1F, 0x364C8E8
	0x0364C8E0 B 0x364C904
	0x0364C8E4 MOV W8, W31
	0x0364C8E8 SUB W9, W9, W10
	0x0364C8EC CMP W8, W9
	0x0364C8F0 B.GT 0x364C904
	0x0364C8F4 MOV W0, W8
	0x0364C8F8 LDP X30, X19, [X31], #0x10
	0x0364C8FC RET
	0x0364C900 BL 0x1C16F28
	0x0364C904 ADRP X0, 0xAD4000
	0x0364C908 LDR X0, [X0 + 0xCE0]
	0x0364C90C BL 0x1C16D08
	0x0364C910 BL 0x1C16F10
	0x0364C914 MOV X19, X0
	0x0364C918 ADRP X0, 0xAED000
	0x0364C91C LDR X0, [X0 + 0xF30]
	0x0364C920 BL 0x1C16D08
	0x0364C924 MOV X1, X0
	0x0364C928 MOV X0, X19
	0x0364C92C MOV X2, X31
	0x0364C930 BL 0x3252170
	0x0364C934 ADRP X0, 0xAF0000
	0x0364C938 LDR X0, [X0 + 0x750]
	0x0364C93C BL 0x1C16D08
	0x0364C940 MOV X1, X0
	0x0364C944 MOV X0, X19
	0x0364C948 BL 0x1C16DEC
	0x0364C94C BL 0x1C16F20
	0x0364C950 SUB X31, X31, 0x20
	0x0364C954 STP X30, X19, [X31 + 0x10]
	0x0364C958 MOVZ W1, 0x1
	0x0364C95C MOV X19, X0
	0x0364C960 BL 0x364C5C4
	0x0364C964 STR W31, [X31 + 0xC]
	0x0364C968 LDR X0, [X19 + 0x10]
	0x0364C96C LDP W2, W1, [X19 + 0x18]
	0x0364C970 ADD X3, X31, 0xC
	0x0364C974 BL 0x364C82C
	0x0364C978 LDR W8, [X19 + 0x1C]
	0x0364C97C LDR W9, [X31 + 0xC]
	0x0364C980 CMP W0, 0x1
	0x0364C984 ADD W8, W9, W8
	0x0364C988 STR W8, [X19 + 0x1C]
	0x0364C98C B.NE 0x364C9C8
	0x0364C990 LDR X9, [X19 + 0x10]
	0x0364C994 CBZ X9, 0x364CA10
	0x0364C998 LDR W10, [X9 + 0x18]
	0x0364C99C CMP W8, W10
	0x0364C9A0 B.CS 0x364CA14
	0x0364C9A4 ADD X9, X9, W8, SXTW
	0x0364C9A8 LDRB W9, [X9 + 0x20]
	0x0364C9AC ADD W8, W8, 0x1
	0x0364C9B0 STR W8, [X19 + 0x1C]
	0x0364C9B4 LDP X30, X19, [X31 + 0x10]
	0x0364C9B8 CMP W9, 0x0
	0x0364C9BC CSET W0, NE
	0x0364C9C0 ADD X31, X31, 0x20
	0x0364C9C4 RET
	0x0364C9C8 ADRP X0, 0xAD4000
	0x0364C9CC LDR X0, [X0 + 0xCE0]
	0x0364C9D0 BL 0x1C16D08
	0x0364C9D4 BL 0x1C16F10
	0x0364C9D8 MOV X19, X0
	0x0364C9DC ADRP X0, 0xAED000
	0x0364C9E0 LDR X0, [X0 + 0xF30]
	0x0364C9E4 BL 0x1C16D08
	0x0364C9E8 MOV X1, X0
	0x0364C9EC MOV X0, X19
	0x0364C9F0 MOV X2, X31
	0x0364C9F4 BL 0x3252170
	0x0364C9F8 ADRP X0, 0xAF0000
	0x0364C9FC LDR X0, [X0 + 0x758]
	0x0364CA00 BL 0x1C16D08
	0x0364CA04 MOV X1, X0
	0x0364CA08 MOV X0, X19
	0x0364CA0C BL 0x1C16DEC
	0x0364CA10 BL 0x1C16F20
	0x0364CA14 BL 0x1C16F28
	0x0364CA18 SUB X31, X31, 0x40
	0x0364CA1C STR X30, [X31 + 0x10]
	0x0364CA20 STP X22, X21, [X31 + 0x20]
	0x0364CA24 STP X20, X19, [X31 + 0x30]
	0x0364CA28 ADRP X22, 0xD94000
	0x0364CA2C ADRP X21, 0xAD4000
	0x0364CA30 ADRP X20, 0xAE8000
	0x0364CA34 LDRB W8, [X22 + 0x5ED]
	0x0364CA38 LDR X21, [X21 + 0xBD0]
	0x0364CA3C LDR X20, [X20 + 0x940]
	0x0364CA40 MOV X19, X0
	0x0364CA44 TBNZ X8, 0x0, 0x364CA68
	0x0364CA48 ADRP X0, 0xAD4000
	0x0364CA4C LDR X0, [X0 + 0xBD0]
	0x0364CA50 BL 0x1C16CF4
	0x0364CA54 ADRP X0, 0xAE8000
	0x0364CA58 LDR X0, [X0 + 0x940]
	0x0364CA5C BL 0x1C16CF4
	0x0364CA60 MOVZ W8, 0x1
	0x0364CA64 STRB W8, [X22 + 0x5ED]
	0x0364CA68 MOVZ W1, 0x2
	0x0364CA6C MOV X0, X19
	0x0364CA70 BL 0x364C5C4
	0x0364CA74 MOV X0, X19
	0x0364CA78 BL 0x364CAE8
	0x0364CA7C LDR X1, [X21]
	0x0364CA80 MOV X19, X0
	0x0364CA84 BL 0x21465E8
	0x0364CA88 ADD X0, X31, 0x0
	0x0364CA8C MOV X1, X19
	0x0364CA90 MOV X2, X31
	0x0364CA94 STP X31, X31, [X31]
	0x0364CA98 BL 0x360B6B4
	0x0364CA9C LDR X0, [X20]
	0x0364CAA0 LDR W8, [X0 + 0xE0]
	0x0364CAA4 CBNZ W8, 0x364CAAC
	0x0364CAA8 BL 0x1C16DFC
	0x0364CAAC LDP X0, X1, [X31]
	0x0364CAB0 MOV X2, X31
	0x0364CAB4 BL 0x360DD58
	0x0364CAB8 LDP X20, X19, [X31 + 0x30]
	0x0364CABC LDP X22, X21, [X31 + 0x20]
	0x0364CAC0 LDR X30, [X31 + 0x10]
	0x0364CAC4 ADD X31, X31, 0x40
	0x0364CAC8 RET
	0x0364CACC STP X30, X19, [X31 - 0x10]!
	0x0364CAD0 MOVZ W1, 0x2
	0x0364CAD4 MOV X19, X0
	0x0364CAD8 BL 0x364C5C4
	0x0364CADC MOV X0, X19
	0x0364CAE0 LDP X30, X19, [X31], #0x10
	0x0364CAE4 B 0x364CAE8
	0x0364CAE8 SUB X31, X31, 0x30
	0x0364CAEC STP X30, X21, [X31 + 0x10]
	0x0364CAF0 STP X20, X19, [X31 + 0x20]
	0x0364CAF4 ADRP X21, 0xD94000
	0x0364CAF8 ADRP X20, 0xAA7000
	0x0364CAFC LDRB W8, [X21 + 0x5F5]
	0x0364CB00 LDR X20, [X20 + 0x618]
	0x0364CB04 MOV X19, X0
	0x0364CB08 TBNZ X8, 0x0, 0x364CB20
	0x0364CB0C ADRP X0, 0xAA7000
	0x0364CB10 LDR X0, [X0 + 0x618]
	0x0364CB14 BL 0x1C16CF4
	0x0364CB18 MOVZ W8, 0x1
	0x0364CB1C STRB W8, [X21 + 0x5F5]
	0x0364CB20 STR W31, [X31 + 0xC]
	0x0364CB24 LDR X0, [X19 + 0x10]
	0x0364CB28 LDP W2, W1, [X19 + 0x18]
	0x0364CB2C ADD X3, X31, 0xC
	0x0364CB30 BL 0x364C82C
	0x0364CB34 LDR W8, [X19 + 0x1C]
	0x0364CB38 LDR W9, [X31 + 0xC]
	0x0364CB3C ADD W8, W9, W8
	0x0364CB40 STR W8, [X19 + 0x1C]
	0x0364CB44 LDR X8, [X20]
	0x0364CB48 MOV W20, W0
	0x0364CB4C MOV W1, W20
	0x0364CB50 MOV X0, X8
	0x0364CB54 BL 0x1C16D6C
	0x0364CB58 LDR X8, [X19 + 0x10]
	0x0364CB5C LDR W1, [X19 + 0x1C]
	0x0364CB60 MOV X21, X0
	0x0364CB64 MOV X2, X21
	0x0364CB68 MOV X0, X8
	0x0364CB6C MOV W3, W31
	0x0364CB70 MOV W4, W20
	0x0364CB74 MOV X5, X31
	0x0364CB78 BL 0x33A8A9C
	0x0364CB7C LDR W8, [X19 + 0x1C]
	0x0364CB80 MOV X0, X21
	0x0364CB84 LDP X30, X21, [X31 + 0x10]
	0x0364CB88 ADD W8, W8, W20
	0x0364CB8C STR W8, [X19 + 0x1C]
	0x0364CB90 LDP X20, X19, [X31 + 0x20]
	0x0364CB94 ADD X31, X31, 0x30
	0x0364CB98 RET
	0x0364CB9C SUB X31, X31, 0x30
	0x0364CBA0 STP X30, X21, [X31 + 0x10]
	0x0364CBA4 STP X20, X19, [X31 + 0x20]
	0x0364CBA8 ADRP X20, 0xD94000
	0x0364CBAC LDRB W8, [X20 + 0x5EE]
	0x0364CBB0 MOV X19, X0
	0x0364CBB4 TBNZ X8, 0x0, 0x364CBCC
	0x0364CBB8 ADRP X0, 0xAA7000
	0x0364CBBC LDR X0, [X0 + 0x618]
	0x0364CBC0 BL 0x1C16CF4
	0x0364CBC4 MOVZ W8, 0x1
	0x0364CBC8 STRB W8, [X20 + 0x5EE]
	0x0364CBCC MOVZ W1, 0x3
	0x0364CBD0 MOV X0, X19
	0x0364CBD4 BL 0x364C5C4
	0x0364CBD8 STR W31, [X31 + 0xC]
	0x0364CBDC LDR X0, [X19 + 0x10]
	0x0364CBE0 LDP W2, W1, [X19 + 0x18]
	0x0364CBE4 ADD X3, X31, 0xC
	0x0364CBE8 BL 0x364C82C
	0x0364CBEC LDR W8, [X19 + 0x1C]
	0x0364CBF0 LDR W9, [X31 + 0xC]
	0x0364CBF4 CMP W0, 0x0
	0x0364CBF8 ADD W8, W9, W8
	0x0364CBFC STR W8, [X19 + 0x1C]
	0x0364CC00 B.LE 0x364CC90
	0x0364CC04 LDR X9, [X19 + 0x10]
	0x0364CC08 CBZ X9, 0x364CCD8
	0x0364CC0C LDR W10, [X9 + 0x18]
	0x0364CC10 CMP W8, W10
	0x0364CC14 B.CS 0x364CCDC
	0x0364CC18 ADD X9, X9, W8, SXTW
	0x0364CC1C LDRB W9, [X9 + 0x20]
	0x0364CC20 CMP W9, 0x8
	0x0364CC24 B.CS 0x364CC90
	0x0364CC28 ADRP X9, 0xAA7000
	0x0364CC2C LDR X9, [X9 + 0x618]
	0x0364CC30 ADD W8, W8, 0x1
	0x0364CC34 STR W8, [X19 + 0x1C]
	0x0364CC38 SUB W20, W0, 0x1
	0x0364CC3C LDR X8, [X9]
	0x0364CC40 MOV W1, W20
	0x0364CC44 MOV X0, X8
	0x0364CC48 BL 0x1C16D6C
	0x0364CC4C LDR X8, [X19 + 0x10]
	0x0364CC50 LDR W1, [X19 + 0x1C]
	0x0364CC54 MOV X21, X0
	0x0364CC58 MOV X2, X21
	0x0364CC5C MOV X0, X8
	0x0364CC60 MOV W3, W31
	0x0364CC64 MOV W4, W20
	0x0364CC68 MOV X5, X31
	0x0364CC6C BL 0x33A8A9C
	0x0364CC70 LDR W8, [X19 + 0x1C]
	0x0364CC74 MOV X0, X21
	0x0364CC78 LDP X30, X21, [X31 + 0x10]
	0x0364CC7C ADD W8, W8, W20
	0x0364CC80 STR W8, [X19 + 0x1C]
	0x0364CC84 LDP X20, X19, [X31 + 0x20]
	0x0364CC88 ADD X31, X31, 0x30
	0x0364CC8C RET
	0x0364CC90 ADRP X0, 0xAD4000
	0x0364CC94 LDR X0, [X0 + 0xCE0]
	0x0364CC98 BL 0x1C16D08
	0x0364CC9C BL 0x1C16F10
	0x0364CCA0 MOV X19, X0
	0x0364CCA4 ADRP X0, 0xAED000
	0x0364CCA8 LDR X0, [X0 + 0xF30]
	0x0364CCAC BL 0x1C16D08
	0x0364CCB0 MOV X1, X0
	0x0364CCB4 MOV X0, X19
	0x0364CCB8 MOV X2, X31
	0x0364CCBC BL 0x3252170
	0x0364CCC0 ADRP X0, 0xAF0000
	0x0364CCC4 LDR X0, [X0 + 0x760]
	0x0364CCC8 BL 0x1C16D08
	0x0364CCCC MOV X1, X0
	0x0364CCD0 MOV X0, X19
	0x0364CCD4 BL 0x1C16DEC
	0x0364CCD8 BL 0x1C16F20
	0x0364CCDC BL 0x1C16F28
	0x0364CCE0 STP X30, X19, [X31 - 0x10]!
	0x0364CCE4 MOVZ W1, 0x4
	0x0364CCE8 MOV X19, X0
	0x0364CCEC BL 0x364C5C4
	0x0364CCF0 MOV X0, X19
	0x0364CCF4 LDP X30, X19, [X31], #0x10
	0x0364CCF8 B 0x364CAE8
	0x0364CCFC SUB X31, X31, 0x70
	0x0364CD00 STP X30, X27, [X31 + 0x20]
	0x0364CD04 STP X26, X25, [X31 + 0x30]
	0x0364CD08 STP X24, X23, [X31 + 0x40]
	0x0364CD0C STP X22, X21, [X31 + 0x50]
	0x0364CD10 STP X20, X19, [X31 + 0x60]
	0x0364CD14 ADRP X20, 0xD94000
	0x0364CD18 LDRB W8, [X20 + 0x5EF]
	0x0364CD1C MOV X19, X0
	0x0364CD20 TBNZ X8, 0x0, 0x364CD44
	0x0364CD24 ADRP X0, 0xAE8000
	0x0364CD28 LDR X0, [X0 + 0x940]
	0x0364CD2C BL 0x1C16CF4
	0x0364CD30 ADRP X0, 0xAA7000
	0x0364CD34 LDR X0, [X0 + 0x8F0]
	0x0364CD38 BL 0x1C16CF4
	0x0364CD3C MOVZ W8, 0x1
	0x0364CD40 STRB W8, [X20 + 0x5EF]
	0x0364CD44 MOVZ W1, 0x6
	0x0364CD48 MOV X0, X19
	0x0364CD4C STP X31, X31, [X31 + 0x10]
	0x0364CD50 BL 0x364C5C4
	0x0364CD54 STR W31, [X31]
	0x0364CD58 LDR X0, [X19 + 0x10]
	0x0364CD5C LDP W2, W1, [X19 + 0x18]
	0x0364CD60 ADD X3, X31, 0x0
	0x0364CD64 BL 0x364C82C
	0x0364CD68 LDR W8, [X19 + 0x1C]
	0x0364CD6C LDR W9, [X31]
	0x0364CD70 CMP W0, 0x0
	0x0364CD74 ADD W8, W9, W8
	0x0364CD78 STR W8, [X19 + 0x1C]
	0x0364CD7C B.LE 0x364CF7C
	0x0364CD80 ADRP X8, 0xAA7000
	0x0364CD84 LDR X8, [X8 + 0x8F0]
	0x0364CD88 MOV W20, W0
	0x0364CD8C LDR X0, [X8]
	0x0364CD90 BL 0x1C16F10
	0x0364CD94 UBFM W1, W20, 0x1E, 0x1D
	0x0364CD98 MOV X2, X31
	0x0364CD9C MOV X21, X0
	0x0364CDA0 BL 0x3231B28
	0x0364CDA4 LDR X8, [X19 + 0x10]
	0x0364CDA8 CBZ X8, 0x364CF74
	0x0364CDAC LDRSW X9, [X19 + 0x1C]
	0x0364CDB0 LDR W10, [X8 + 0x18]
	0x0364CDB4 CMP W9, W10
	0x0364CDB8 B.CS 0x364CF78
	0x0364CDBC CBZ X21, 0x364CF74
	0x0364CDC0 ADD X8, X8, X9
	0x0364CDC4 LDRB W8, [X8 + 0x20]
	0x0364CDC8 ADRP X25, 0xAE8000
	0x0364CDCC MOVZ W9, 0xCCCD
	0x0364CDD0 LDR X25, [X25 + 0x940]
	0x0364CDD4 MOVK W9, 0xCCCC0000
	0x0364CDD8 AND W10, W8, 0xFF
	0x0364CDDC UMADDL X9, X10, X9, X31
	0x0364CDE0 UBFM X1, X9, 0x25, 0x3F
	0x0364CDE4 MOVZ W9, 0x28
	0x0364CDE8 MOV X0, X21
	0x0364CDEC MOV X2, X31
	0x0364CDF0 MSUB W22, W1, W9, W8
	0x0364CDF4 BL 0x3233D80
	0x0364CDF8 MOVZ W1, 0x2E
	0x0364CDFC MOV X0, X21
	0x0364CE00 MOV X2, X31
	0x0364CE04 BL 0x3233D30
	0x0364CE08 MOV X0, X21
	0x0364CE0C MOV W1, W22
	0x0364CE10 MOV X2, X31
	0x0364CE14 BL 0x3233D80
	0x0364CE18 LDR X0, [X25]
	0x0364CE1C LDR W8, [X0 + 0xE0]
	0x0364CE20 CBNZ W8, 0x364CE28
	0x0364CE24 BL 0x1C16DFC
	0x0364CE28 ADD X0, X31, 0x10
	0x0364CE2C MOV W1, W31
	0x0364CE30 MOV X2, X31
	0x0364CE34 BL 0x360B520
	0x0364CE38 CMP W20, 0x2
	0x0364CE3C B.LT 0x364CF3C
	0x0364CE40 MOVZ W22, 0x1
	0x0364CE44 MOVZ W26, 0x1
	0x0364CE48 LDR X8, [X19 + 0x10]
	0x0364CE4C CBZ X8, 0x364CF74
	0x0364CE50 LDR W9, [X19 + 0x1C]
	0x0364CE54 LDR W10, [X8 + 0x18]
	0x0364CE58 ADD W9, W26, W9
	0x0364CE5C CMP W9, W10
	0x0364CE60 B.CS 0x364CF78
	0x0364CE64 ADD X8, X8, W9, SXTW
	0x00000000 INVALID
	0x0364CE6C TBZ X22, 0x0, 0x364CE80
	0x0364CE70 MOVZ W1, 0x2E
	0x0364CE74 MOV X0, X21
	0x0364CE78 MOV X2, X31
	0x0364CE7C BL 0x3233D30
	0x0364CE80 LDR X0, [X25]
	0x0364CE84 LDP X22, X23, [X31 + 0x10]
	0x0364CE88 LDR W8, [X0 + 0xE0]
	0x0364CE8C CBNZ W8, 0x364CE94
	0x0364CE90 BL 0x1C16DFC
	0x0364CE94 MOVZ W2, 0x7
	0x0364CE98 MOV X0, X22
	0x0364CE9C MOV X1, X23
	0x0364CEA0 MOV X3, X31
	0x0364CEA4 AND W24, W27, 0x7F
	0x0364CEA8 BL 0x360DE30
	0x0364CEAC MOV X22, X0
	0x0364CEB0 MOV X23, X1
	0x0364CEB4 STP X0, X1, [X31 + 0x10]
	0x0364CEB8 MOV W0, W24
	0x0364CEBC MOV X1, X31
	0x0364CEC0 BL 0x360DD08
	0x0364CEC4 MOV X2, X0
	0x0364CEC8 MOV X3, X1
	0x0364CECC MOV X0, X22
	0x0364CED0 MOV X1, X23
	0x0364CED4 MOV X4, X31
	0x0364CED8 BL 0x360E460
	0x0364CEDC CMP W27, 0x0
	0x0364CEE0 CSET W22, GE
	0x0364CEE4 STP X0, X1, [X31 + 0x10]
	0x0364CEE8 TBNZ X27, 0x1F, 0x364CF30
	0x0364CEEC LDR V0, [X31 + 0x1]
	0x0364CEF0 LDR X0, [X25]
	0x0364CEF4 ADD X1, X31, 0x0
	0x0364CEF8 STR V0, [X31]
	0x0364CEFC BL 0x1C16E04
	0x0364CF00 MOV X1, X0
	0x0364CF04 MOV X0, X21
	0x0364CF08 MOV X2, X31
	0x0364CF0C BL 0x3233F90
	0x0364CF10 LDR X0, [X25]
	0x0364CF14 LDR W8, [X0 + 0xE0]
	0x0364CF18 CBNZ W8, 0x364CF20
	0x0364CF1C BL 0x1C16DFC
	0x0364CF20 MOV W0, W31
	0x0364CF24 MOV X1, X31
	0x0364CF28 BL 0x360DD30
	0x0364CF2C STP X0, X1, [X31 + 0x10]
	0x0364CF30 ADD W26, W26, 0x1
	0x0364CF34 CMP W20, W26
	0x0364CF38 B.NE 0x364CE48
	0x0364CF3C LDR W8, [X19 + 0x1C]
	0x0364CF40 MOV X0, X21
	0x0364CF44 ADD W8, W8, W20
	0x0364CF48 STR W8, [X19 + 0x1C]
	0x0364CF4C LDR X8, [X21]
	0x0364CF50 LDP X9, X1, [X8 + 0x168]
	0x0364CF54 BLR X9
	0x0364CF58 LDP X20, X19, [X31 + 0x60]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+32], X24
	004 Move [X31+40], X23
	005 Move [X31+48], X22
	006 Move [X31+56], X21
	007 Move [X31+64], X20
	008 Move [X31+72], X19
	009 Move X20, 0xD95000
	010 Move X21, 0xAA8000
	011 Move X23, 0xAA8000
	012 Move W8, [X20+1506]
	013 Move X21, [X21+2288]
	014 Move X23, [X23+2512]
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {70}
	020 Move X0, 0xAA8000
	021 Move X0, [X0+2904]
	022 Call 0x1C17CF4
	023 Move X0, 0xAA8000
	024 Move X0, [X0+2512]
	025 Call 0x1C17CF4
	026 Move X0, 0xAA8000
	027 Move X0, [X0+2288]
	028 Call 0x1C17CF4
	029 Move X0, 0xAF1000
	030 Move X0, [X0+1728]
	031 Call 0x1C17CF4
	032 Move X0, 0xAF1000
	033 Move X0, [X0+1736]
	034 Call 0x1C17CF4
	035 Move X0, 0xAF1000
	036 Move X0, [X0+1744]
	037 Call 0x1C17CF4
	038 Move X0, 0xAF1000
	039 Move X0, [X0+1752]
	040 Call 0x1C17CF4
	041 Move X0, 0xAF1000
	042 Move X0, [X0+1760]
	043 Call 0x1C17CF4
	044 Move X0, 0xAF1000
	045 Move X0, [X0+1768]
	046 Call 0x1C17CF4
	047 Move X0, 0xAF1000
	048 Move X0, [X0+1776]
	049 Call 0x1C17CF4
	050 Move X0, 0xAF1000
	051 Move X0, [X0+1784]
	052 Call 0x1C17CF4
	053 Move X0, 0xAF1000
	054 Move X0, [X0+1792]
	055 Call 0x1C17CF4
	056 Move X0, 0xAF1000
	057 Move X0, [X0+1800]
	058 Call 0x1C17CF4
	059 Move X0, 0xAF1000
	060 Move X0, [X0+1808]
	061 Call 0x1C17CF4
	062 Move X0, 0xAF1000
	063 Move X0, [X0+1816]
	064 Call 0x1C17CF4
	065 Move X0, 0xAF1000
	066 Move X0, [X0+1824]
	067 Call 0x1C17CF4
	068 Move W8, 1
	069 Move [X20+1506], W8
	070 Move X0, [X21]
	071 Call 0x1C17F10
	072 Move X1, X31
	073 Move X20, X0
	074 Call StringBuilder..ctor, X0
	075 Move X0, [X23]
	076 Move W1, 2
	077 Call 0x1C17D6C
	078 Compare X0, 0
	079 JumpIfEqual {642}
	080 Move X22, [X19+40]
	081 Move X21, X0
	082 Compare X22, 0
	083 JumpIfEqual {90}
	084 Move X8, [X21]
	085 Move X0, X22
	086 Move X1, [X8+64]
	087 Call 0x1C17E00
	088 Compare X0, 0
	089 JumpIfEqual {639}
	090 Move W8, [X21+24]
	091 Compare W8, 0
	092 JumpIfEqual {638}
	093 Move X0, X31
	094 Move [X21+32], X22
	095 Call Environment.get_NewLine
	096 Move X22, X0
	097 Compare X0, 0
	098 JumpIfEqual {105}
	099 Move X8, [X21]
	100 Move X0, X22
	101 Move X1, [X8+64]
	102 Call 0x1C17E00
	103 Compare X0, 0
	104 JumpIfEqual {639}
	105 Move W8, [X21+24]
	106 NotImplemented "Instruction CMP not yet implemented."
	107 Move [X21+40], X22
	108 Compare X20, 0
	109 JumpIfEqual {642}
	110 Move X8, 0xAF1000
	111 Move X8, [X8+1736]
	112 Move X0, X20
	113 Move X2, X21
	114 Move X3, X31
	115 Move X1, [X8]
	116 Call StringBuilder.AppendFormat, X0, X1, X2
	117 Move X0, [X23]
	118 Move W1, 2
	119 Call 0x1C17D6C
	120 Compare X0, 0
	121 JumpIfEqual {642}
	122 Move X22, [X19+56]
	123 Move X21, X0
	124 Compare X22, 0
	125 JumpIfEqual {132}
	126 Move X8, [X21]
	127 Move X0, X22
	128 Move X1, [X8+64]
	129 Call 0x1C17E00
	130 Compare X0, 0
	131 JumpIfEqual {639}
	132 Move W8, [X21+24]
	133 Compare W8, 0
	134 JumpIfEqual {638}
	135 Move X0, X31
	136 Move [X21+32], X22
	137 Call Environment.get_NewLine
	138 Move X22, X0
	139 Compare X0, 0
	140 JumpIfEqual {147}
	141 Move X8, [X21]
	142 Move X0, X22
	143 Move X1, [X8+64]
	144 Call 0x1C17E00
	145 Compare X0, 0
	146 JumpIfEqual {639}
	147 Move W8, [X21+24]
	148 NotImplemented "Instruction CMP not yet implemented."
	149 Move X8, 0xAF1000
	150 Move X8, [X8+1776]
	151 Move [X21+40], X22
	152 Move X0, X20
	153 Move X2, X21
	154 Move X1, [X8]
	155 Move X3, X31
	156 Call StringBuilder.AppendFormat, X0, X1, X2
	157 Move X0, [X23]
	158 Move W1, 2
	159 Call 0x1C17D6C
	160 Compare X0, 0
	161 JumpIfEqual {642}
	162 Move X22, [X19+88]
	163 Move X21, X0
	164 Compare X22, 0
	165 JumpIfEqual {172}
	166 Move X8, [X21]
	167 Move X0, X22
	168 Move X1, [X8+64]
	169 Call 0x1C17E00
	170 Compare X0, 0
	171 JumpIfEqual {639}
	172 Move W8, [X21+24]
	173 Compare W8, 0
	174 JumpIfEqual {638}
	175 Move X0, X31
	176 Move [X21+32], X22
	177 Call Environment.get_NewLine
	178 Move X22, X0
	179 Compare X0, 0
	180 JumpIfEqual {187}
	181 Move X8, [X21]
	182 Move X0, X22
	183 Move X1, [X8+64]
	184 Call 0x1C17E00
	185 Compare X0, 0
	186 JumpIfEqual {639}
	187 Move W8, [X21+24]
	188 NotImplemented "Instruction CMP not yet implemented."
	189 Move X8, 0xAF1000
	190 Move X8, [X8+1824]
	191 Move [X21+40], X22
	192 Move X0, X20
	193 Move X2, X21
	194 Move X1, [X8]
	195 Move X3, X31
	196 Call StringBuilder.AppendFormat, X0, X1, X2
	197 Move X0, [X23]
	198 Move W1, 2
	199 Call 0x1C17D6C
	200 Compare X0, 0
	201 JumpIfEqual {642}
	202 Move X22, [X19+48]
	203 Move X21, X0
	204 Compare X22, 0
	205 JumpIfEqual {212}
	206 Move X8, [X21]
	207 Move X0, X22
	208 Move X1, [X8+64]
	209 Call 0x1C17E00
	210 Compare X0, 0
	211 JumpIfEqual {639}
	212 Move W8, [X21+24]
	213 Compare W8, 0
	214 JumpIfEqual {638}
	215 Move X0, X31
	216 Move [X21+32], X22
	217 Call Environment.get_NewLine
	218 Move X22, X0
	219 Compare X0, 0
	220 JumpIfEqual {227}
	221 Move X8, [X21]
	222 Move X0, X22
	223 Move X1, [X8+64]
	224 Call 0x1C17E00
	225 Compare X0, 0
	226 JumpIfEqual {639}
	227 Move W8, [X21+24]
	228 NotImplemented "Instruction CMP not yet implemented."
	229 Move X8, 0xAF1000
	230 Move X8, [X8+1752]
	231 Move [X21+40], X22
	232 Move X0, X20
	233 Move X2, X21
	234 Move X1, [X8]
	235 Move X3, X31
	236 Call StringBuilder.AppendFormat, X0, X1, X2
	237 Move X0, [X23]
	238 Move W1, 2
	239 Call 0x1C17D6C
	240 Compare X0, 0
	241 JumpIfEqual {642}
	242 Move X22, [X19+32]
	243 Move X21, X0
	244 Compare X22, 0
	245 JumpIfEqual {252}
	246 Move X8, [X21]
	247 Move X0, X22
	248 Move X1, [X8+64]
	249 Call 0x1C17E00
	250 Compare X0, 0
	251 JumpIfEqual {639}
	252 Move W8, [X21+24]
	253 Compare W8, 0
	254 JumpIfEqual {638}
	255 Move X0, X31
	256 Move [X21+32], X22
	257 Call Environment.get_NewLine
	258 Move X22, X0
	259 Compare X0, 0
	260 JumpIfEqual {267}
	261 Move X8, [X21]
	262 Move X0, X22
	263 Move X1, [X8+64]
	264 Call 0x1C17E00
	265 Compare X0, 0
	266 JumpIfEqual {639}
	267 Move W8, [X21+24]
	268 NotImplemented "Instruction CMP not yet implemented."
	269 Move X8, 0xAF1000
	270 Move X8, [X8+1784]
	271 Move [X21+40], X22
	272 Move X0, X20
	273 Move X2, X21
	274 Move X1, [X8]
	275 Move X3, X31
	276 Call StringBuilder.AppendFormat, X0, X1, X2
	277 Move X0, [X23]
	278 Move W1, 2
	279 Call 0x1C17D6C
	280 Compare X0, 0
	281 JumpIfEqual {642}
	282 Move X22, [X19+104]
	283 Move X21, X0
	284 Compare X22, 0
	285 JumpIfEqual {292}
	286 Move X8, [X21]
	287 Move X0, X22
	288 Move X1, [X8+64]
	289 Call 0x1C17E00
	290 Compare X0, 0
	291 JumpIfEqual {639}
	292 Move W8, [X21+24]
	293 Compare W8, 0
	294 JumpIfEqual {638}
	295 Move X0, X31
	296 Move [X21+32], X22
	297 Call Environment.get_NewLine
	298 Move X22, X0
	299 Compare X0, 0
	300 JumpIfEqual {307}
	301 Move X8, [X21]
	302 Move X0, X22
	303 Move X1, [X8+64]
	304 Call 0x1C17E00
	305 Compare X0, 0
	306 JumpIfEqual {639}
	307 Move W8, [X21+24]
	308 NotImplemented "Instruction CMP not yet implemented."
	309 Move X8, 0xAF1000
	310 Move X8, [X8+1792]
	311 Move [X21+40], X22
	312 Move X0, X20
	313 Move X2, X21
	314 Move X1, [X8]
	315 Move X3, X31
	316 Call StringBuilder.AppendFormat, X0, X1, X2
	317 Move X0, [X23]
	318 Move W1, 2
	319 Call 0x1C17D6C
	320 Compare X0, 0
	321 JumpIfEqual {642}
	322 Move X22, [X19+112]
	323 Move X21, X0
	324 Compare X22, 0
	325 JumpIfEqual {332}
	326 Move X8, [X21]
	327 Move X0, X22
	328 Move X1, [X8+64]
	329 Call 0x1C17E00
	330 Compare X0, 0
	331 JumpIfEqual {639}
	332 Move W8, [X21+24]
	333 Compare W8, 0
	334 JumpIfEqual {638}
	335 Move X0, X31
	336 Move [X21+32], X22
	337 Call Environment.get_NewLine
	338 Move X22, X0
	339 Compare X0, 0
	340 JumpIfEqual {347}
	341 Move X8, [X21]
	342 Move X0, X22
	343 Move X1, [X8+64]
	344 Call 0x1C17E00
	345 Compare X0, 0
	346 JumpIfEqual {639}
	347 Move W8, [X21+24]
	348 NotImplemented "Instruction CMP not yet implemented."
	349 Move X8, 0xAF1000
	350 Move X8, [X8+1728]
	351 Move [X21+40], X22
	352 Move X24, 0xAA8000
	353 Move X0, X20
	354 Move X1, [X8]
	355 Move X24, [X24+2904]
	356 Move X2, X21
	357 Move X3, X31
	358 Call StringBuilder.AppendFormat, X0, X1, X2
	359 Move X0, [X23]
	360 Move W1, 2
	361 Call 0x1C17D6C
	362 Move X21, X0
	363 Move W8, [X19+128]
	364 Move X0, [X24]
	365 Add X1, X31, 28
	366 Move [X31+28], W8
	367 Call 0x1C17E04
	368 Compare X21, 0
	369 JumpIfEqual {642}
	370 Move X22, X0
	371 Compare X0, 0
	372 JumpIfEqual {379}
	373 Move X8, [X21]
	374 Move X0, X22
	375 Move X1, [X8+64]
	376 Call 0x1C17E00
	377 Compare X0, 0
	378 JumpIfEqual {639}
	379 Move W8, [X21+24]
	380 Compare W8, 0
	381 JumpIfEqual {638}
	382 Move X0, X31
	383 Move [X21+32], X22
	384 Call Environment.get_NewLine
	385 Move X22, X0
	386 Compare X0, 0
	387 JumpIfEqual {394}
	388 Move X8, [X21]
	389 Move X0, X22
	390 Move X1, [X8+64]
	391 Call 0x1C17E00
	392 Compare X0, 0
	393 JumpIfEqual {639}
	394 Move W8, [X21+24]
	395 NotImplemented "Instruction CMP not yet implemented."
	396 Move X8, 0xAF1000
	397 Move X8, [X8+1760]
	398 Move [X21+40], X22
	399 Move X0, X20
	400 Move X2, X21
	401 Move X1, [X8]
	402 Move X3, X31
	403 Call StringBuilder.AppendFormat, X0, X1, X2
	404 Move X0, [X23]
	405 Move W1, 2
	406 Call 0x1C17D6C
	407 Move X21, X0
	408 Move W8, [X19+129]
	409 Move X0, [X24]
	410 Add X1, X31, 24
	411 Move [X31+24], W8
	412 Call 0x1C17E04
	413 Compare X21, 0
	414 JumpIfEqual {642}
	415 Move X22, X0
	416 Compare X0, 0
	417 JumpIfEqual {424}
	418 Move X8, [X21]
	419 Move X0, X22
	420 Move X1, [X8+64]
	421 Call 0x1C17E00
	422 Compare X0, 0
	423 JumpIfEqual {639}
	424 Move W8, [X21+24]
	425 Compare W8, 0
	426 JumpIfEqual {638}
	427 Move X0, X31
	428 Move [X21+32], X22
	429 Call Environment.get_NewLine
	430 Move X22, X0
	431 Compare X0, 0
	432 JumpIfEqual {439}
	433 Move X8, [X21]
	434 Move X0, X22
	435 Move X1, [X8+64]
	436 Call 0x1C17E00
	437 Compare X0, 0
	438 JumpIfEqual {639}
	439 Move W8, [X21+24]
	440 NotImplemented "Instruction CMP not yet implemented."
	441 Move X8, 0xAF1000
	442 Move X8, [X8+1800]
	443 Move [X21+40], X22
	444 Move X0, X20
	445 Move X2, X21
	446 Move X1, [X8]
	447 Move X3, X31
	448 Call StringBuilder.AppendFormat, X0, X1, X2
	449 Move X0, [X23]
	450 Move W1, 2
	451 Call 0x1C17D6C
	452 Move X21, X0
	453 Move W8, [X19+130]
	454 Move X0, [X24]
	455 Add X1, X31, 12
	456 Move [X31+12], W8
	457 Call 0x1C17E04
	458 Compare X21, 0
	459 JumpIfEqual {642}
	460 Move X22, X0
	461 Compare X0, 0
	462 JumpIfEqual {469}
	463 Move X8, [X21]
	464 Move X0, X22
	465 Move X1, [X8+64]
	466 Call 0x1C17E00
	467 Compare X0, 0
	468 JumpIfEqual {639}
	469 Move W8, [X21+24]
	470 Compare W8, 0
	471 JumpIfEqual {638}
	472 Move X0, X31
	473 Move [X21+32], X22
	474 Call Environment.get_NewLine
	475 Move X22, X0
	476 Compare X0, 0
	477 JumpIfEqual {484}
	478 Move X8, [X21]
	479 Move X0, X22
	480 Move X1, [X8+64]
	481 Call 0x1C17E00
	482 Compare X0, 0
	483 JumpIfEqual {639}
	484 Move W8, [X21+24]
	485 NotImplemented "Instruction CMP not yet implemented."
	486 Move X8, 0xAF1000
	487 Move X8, [X8+1816]
	488 Move [X21+40], X22
	489 Move X0, X20
	490 Move X2, X21
	491 Move X1, [X8]
	492 Move X3, X31
	493 Call StringBuilder.AppendFormat, X0, X1, X2
	494 Move X0, [X23]
	495 Move W1, 2
	496 Call 0x1C17D6C
	497 Move X21, X0
	498 Move W8, [X19+131]
	499 Move X0, [X24]
	500 Add X1, X31, 8
	501 Move [X31+8], W8
	502 Call 0x1C17E04
	503 Compare X21, 0
	504 JumpIfEqual {642}
	505 Move X22, X0
	506 Compare X0, 0
	507 JumpIfEqual {514}
	508 Move X8, [X21]
	509 Move X0, X22
	510 Move X1, [X8+64]
	511 Call 0x1C17E00
	512 Compare X0, 0
	513 JumpIfEqual {639}
	514 Move W8, [X21+24]
	515 Compare W8, 0
	516 JumpIfEqual {638}
	517 Move X0, X31
	518 Move [X21+32], X22
	519 Call Environment.get_NewLine
	520 Move X22, X0
	521 Compare X0, 0
	522 JumpIfEqual {529}
	523 Move X8, [X21]
	524 Move X0, X22
	525 Move X1, [X8+64]
	526 Call 0x1C17E00
	527 Compare X0, 0
	528 JumpIfEqual {639}
	529 Move W8, [X21+24]
	530 NotImplemented "Instruction CMP not yet implemented."
	531 Move X8, 0xAF1000
	532 Move X8, [X8+1744]
	533 Move [X21+40], X22
	534 Move X0, X20
	535 Move X2, X21
	536 Move X1, [X8]
	537 Move X3, X31
	538 Call StringBuilder.AppendFormat, X0, X1, X2
	539 Move X0, [X23]
	540 Move W1, 2
	541 Call 0x1C17D6C
	542 Move X21, X0
	543 Move W8, [X19+132]
	544 Move X0, [X24]
	545 Add X1, X31, 4
	546 Move [X31+4], W8
	547 Call 0x1C17E04
	548 Compare X21, 0
	549 JumpIfEqual {642}
	550 Move X22, X0
	551 Compare X0, 0
	552 JumpIfEqual {559}
	553 Move X8, [X21]
	554 Move X0, X22
	555 Move X1, [X8+64]
	556 Call 0x1C17E00
	557 Compare X0, 0
	558 JumpIfEqual {639}
	559 Move W8, [X21+24]
	560 Compare W8, 0
	561 JumpIfEqual {638}
	562 Move X0, X31
	563 Move [X21+32], X22
	564 Call Environment.get_NewLine
	565 Move X22, X0
	566 Compare X0, 0
	567 JumpIfEqual {574}
	568 Move X8, [X21]
	569 Move X0, X22
	570 Move X1, [X8+64]
	571 Call 0x1C17E00
	572 Compare X0, 0
	573 JumpIfEqual {639}
	574 Move W8, [X21+24]
	575 NotImplemented "Instruction CMP not yet implemented."
	576 Move X8, 0xAF1000
	577 Move X8, [X8+1808]
	578 Move [X21+40], X22
	579 Move X0, X20
	580 Move X2, X21
	581 Move X1, [X8]
	582 Move X3, X31
	583 Call StringBuilder.AppendFormat, X0, X1, X2
	584 Move X0, [X23]
	585 Move W1, 2
	586 Call 0x1C17D6C
	587 Compare X0, 0
	588 JumpIfEqual {642}
	589 Move X19, [X19+64]
	590 Move X21, X0
	591 Compare X19, 0
	592 JumpIfEqual {599}
	593 Move X8, [X21]
	594 Move X0, X19
	595 Move X1, [X8+64]
	596 Call 0x1C17E00
	597 Compare X0, 0
	598 JumpIfEqual {639}
	599 Move W8, [X21+24]
	600 Compare W8, 0
	601 JumpIfEqual {638}
	602 Move X0, X31
	603 Move [X21+32], X19
	604 Call Environment.get_NewLine
	605 Move X19, X0
	606 Compare X0, 0
	607 JumpIfEqual {614}
	608 Move X8, [X21]
	609 Move X0, X19
	610 Move X1, [X8+64]
	611 Call 0x1C17E00
	612 Compare X0, 0
	613 JumpIfEqual {639}
	614 Move W8, [X21+24]
	615 NotImplemented "Instruction CMP not yet implemented."
	616 Move X8, 0xAF1000
	617 Move X8, [X8+1768]
	618 Move [X21+40], X19
	619 Move X0, X20
	620 Move X2, X21
	621 Move X1, [X8]
	622 Move X3, X31
	623 Call StringBuilder.AppendFormat, X0, X1, X2
	624 Move X8, [X20]
	625 Move X0, X20
	626 Move X9, [X8+360]
	627 Move X1, [X8+368]
	628 NotImplemented "Instruction BLR not yet implemented."
	629 Move X20, [X31+64]
	630 Move X19, [X31+72]
	631 Move X22, [X31+48]
	632 Move X21, [X31+56]
	633 Move X24, [X31+32]
	634 Move X23, [X31+40]
	635 Move X30, [X31+16]
	636 Add X31, X31, 80
	637 Return X0
	638 Call 0x1C17F28
	639 Call 0x1C17F44
	640 Move X1, X31
	641 Call 0x1C17DEC
	642 Call 0x1C17F20

