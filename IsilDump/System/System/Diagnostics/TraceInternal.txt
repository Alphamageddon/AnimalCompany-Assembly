Type: System.Diagnostics.TraceInternal

Method: System.Diagnostics.TraceListenerCollection get_Listeners()

Disassembly:
	0x0364A8C4 LDR X0, [X0 + 0x638]
	0x0364A8C8 BL 0x1C16CF4
	0x0364A8CC MOVZ W8, 0x1
	0x0364A8D0 STRB W8, [X19 + 0x5D6]
	0x0364A8D4 CBZ X20, 0x364A998
	0x0364A8D8 ADRP X8, 0xAF2000
	0x0364A8DC LDR X8, [X8 + 0x638]
	0x0364A8E0 LDR X9, [X20]
	0x0364A8E4 LDR X8, [X8]
	0x0364A8E8 LDRB W11, [X9 + 0x130]
	0x0364A8EC LDRB W10, [X8 + 0x130]
	0x0364A8F0 CMP W11, W10
	0x0364A8F4 B.CC 0x364A998
	0x0364A8F8 LDR X9, [X9 + 0xC8]
	0x0364A8FC ADD X9, X9, X10, 0x3, LSL
	0x0364A900 LDUR X9, [X9 - 0x8]
	0x0364A904 CMP X9, X8
	0x0364A908 B.NE 0x364A998
	0x0364A90C ADRP X19, 0xAF2000
	0x0364A910 LDR X19, [X19 + 0x630]
	0x0364A914 MOV X1, X20
	0x0364A918 BL 0x364A2C8
	0x0364A91C LDR X0, [X19]
	0x0364A920 LDR W8, [X0 + 0xE0]
	0x0364A924 CBNZ W8, 0x364A930
	0x0364A928 BL 0x1C16DFC
	0x0364A92C LDR X0, [X19]
	0x0364A930 LDR X8, [X0 + 0xB8]
	0x0364A934 LDR X19, [X8 + 0x18]
	0x0364A938 STRB W31, [X31 + 0xC]
	0x0364A93C ADD X1, X31, 0xC
	0x0364A940 MOV X0, X19
	0x0364A944 MOV X2, X31
	0x0364A948 BL 0x33DE64C
	0x0364A94C LDR X0, [X22 + 0x10]
	0x0364A950 CBZ X0, 0x364AA04
	0x0364A954 LDR X8, [X0]
	0x0364A958 LDR X9, [X8 + 0x3A8]
	0x0364A95C LDR X3, [X8 + 0x3B0]
	0x0364A960 MOV W1, W21
	0x0364A964 MOV X2, X20
	0x0364A968 BLR X9
	0x0364A96C MOV X20, X31
	0x0364A970 LDRB W8, [X31 + 0xC]
	0x0364A974 CBZ W8, 0x364A984
	0x0364A978 MOV X0, X19
	0x0364A97C MOV X1, X31
	0x0364A980 BL 0x33E14E4
	0x0364A984 CBNZ X20, 0x364A9FC
	0x0364A988 LDP X20, X19, [X31 + 0x20]
	0x0364A98C LDP X22, X21, [X31 + 0x10]
	0x0364A990 LDR X30, [X31], #0x30
	0x0364A994 RET
	0x0364A998 ADRP X0, 0xAF2000
	0x0364A99C LDR X0, [X0 + 0x678]
	0x0364A9A0 BL 0x1C16D08
	0x0364A9A4 MOV X1, X31
	0x0364A9A8 BL 0x320A1E4
	0x0364A9AC MOV X19, X0
	0x0364A9B0 ADRP X0, 0xAB1000
	0x0364A9B4 LDR X0, [X0 + 0x578]
	0x0364A9B8 BL 0x1C16D08
	0x0364A9BC BL 0x1C16F10
	0x0364A9C0 MOV X20, X0
	0x0364A9C4 ADRP X0, 0xAB3000
	0x0364A9C8 LDR X0, [X0 + 0xEC8]
	0x0364A9CC BL 0x1C16D08
	0x0364A9D0 MOV X2, X0
	0x0364A9D4 MOV X0, X20
	0x0364A9D8 MOV X1, X19
	0x0364A9DC MOV X3, X31
	0x0364A9E0 BL 0x330E16C
	0x0364A9E4 ADRP X0, 0xAF2000
	0x0364A9E8 LDR X0, [X0 + 0x690]
	0x0364A9EC BL 0x1C16D08
	0x0364A9F0 MOV X1, X0
	0x0364A9F4 MOV X0, X20
	0x0364A9F8 BL 0x1C16DEC
	0x0364A9FC MOV X0, X20
	0x0364AA00 BL 0x1C16F18
	0x0364AA04 BL 0x1C16F20
	0x0364AA08 B 0x364AA0C
	0x0364AA0C MOV X21, X0
	0x0364AA10 CMP W1, 0x1
	0x0364AA14 B.NE 0x364AA2C
	0x0364AA18 MOV X0, X21
	0x0364AA1C BL 0x3EB1AD0
	0x0364AA20 LDR X20, [X0]
	0x0364AA24 BL 0x3EB1AE0
	0x0364AA28 B 0x364A970
	0x0364AA2C MOV X20, X31
	0x0364AA30 B 0x364AA38
	0x0364AA34 MOV X21, X0
	0x0364AA38 LDRB W8, [X31 + 0xC]
	0x0364AA3C CBZ W8, 0x364AA4C
	0x0364AA40 MOV X0, X19
	0x0364AA44 MOV X1, X31
	0x0364AA48 BL 0x33E14E4
	0x0364AA4C CBNZ X20, 0x364AA58
	0x0364AA50 MOV X0, X21
	0x0364AA54 BL 0x1D2C690
	0x0364AA58 MOV X0, X20
	0x0364AA5C BL 0x1C16F18
	0x0364AA60 BL 0x1990590
	0x0364AA64 STR X30, [X31 - 0x30]!
	0x0364AA68 STP X22, X21, [X31 + 0x10]
	0x0364AA6C STP X20, X19, [X31 + 0x20]
	0x0364AA70 ADRP X22, 0xD96000
	0x0364AA74 ADRP X19, 0xAF2000
	0x0364AA78 LDRB W8, [X22 + 0x5D7]
	0x0364AA7C LDR X19, [X19 + 0x630]
	0x0364AA80 MOV X20, X1
	0x0364AA84 MOV X21, X0
	0x0364AA88 TBNZ X8, 0x0, 0x364AAA0
	0x0364AA8C ADRP X0, 0xAF2000
	0x0364AA90 LDR X0, [X0 + 0x630]
	0x0364AA94 BL 0x1C16CF4
	0x0364AA98 MOVZ W8, 0x1
	0x0364AA9C STRB W8, [X22 + 0x5D7]
	0x0364AAA0 LDR X0, [X19]
	0x0364AAA4 LDR W8, [X0 + 0xE0]
	0x0364AAA8 CBNZ W8, 0x364AAB4
	0x0364AAAC BL 0x1C16DFC
	0x0364AAB0 LDR X0, [X19]
	0x0364AAB4 LDR X8, [X0 + 0xB8]
	0x0364AAB8 LDR X19, [X8 + 0x18]
	0x0364AABC STRB W31, [X31 + 0xC]
	0x0364AAC0 ADD X1, X31, 0xC
	0x0364AAC4 MOV X0, X19
	0x0364AAC8 MOV X2, X31
	0x0364AACC BL 0x33DE64C
	0x0364AAD0 LDR X0, [X21 + 0x10]
	0x0364AAD4 CBZ X0, 0x364AB20
	0x0364AAD8 LDR X8, [X0]
	0x0364AADC LDR X9, [X8 + 0x3C8]
	0x0364AAE0 LDR X2, [X8 + 0x3D0]
	0x0364AAE4 MOV X1, X20
	0x0364AAE8 BLR X9
	0x0364AAEC MOV X20, X31
	0x0364AAF0 LDRB W8, [X31 + 0xC]
	0x0364AAF4 CBZ W8, 0x364AB04
	0x0364AAF8 MOV X0, X19
	0x0364AAFC MOV X1, X31
	0x0364AB00 BL 0x33E14E4
	0x0364AB04 CBNZ X20, 0x364AB18

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, 0xD97000
	007 Move X22, 0xAF3000
	008 Move W8, [X19+1476]
	009 Move X22, [X22+1584]
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {25}
	014 Move X0, 0xAF3000
	015 Move X0, [X0+1600]
	016 Call 0x1C17CF4
	017 Move X0, 0xAF3000
	018 Move X0, [X0+1584]
	019 Call 0x1C17CF4
	020 Move X0, 0xAF3000
	021 Move X0, [X0+1608]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X19+1476], W8
	025 Move X0, [X22]
	026 Move [X31+12], W31
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {32}
	030 Call 0x1C17DFC
	031 Move X0, [X22]
	032 Move X8, [X0+184]
	033 Move X19, [X8+8]
	034 Call 0x1C17D44
	035 Compare X19, 0
	036 JumpIfNotEqual {114}
	037 Move X0, [X22]
	038 Move W8, [X0+224]
	039 Compare W8, 0
	040 JumpIfNotEqual {43}
	041 Call 0x1C17DFC
	042 Move X0, [X22]
	043 Move X8, [X0+184]
	044 Move X19, [X8+24]
	045 Move [X31+12], W31
	046 Add X1, X31, 12
	047 Move X0, X19
	048 Move X2, X31
	049 Call Monitor.Enter, X0, X1
	050 Move X0, [X22]
	051 Move W8, [X0+224]
	052 Compare W8, 0
	053 JumpIfNotEqual {56}
	054 Call 0x1C17DFC
	055 Move X0, [X22]
	056 Move X8, [X0+184]
	057 Move X20, [X8+8]
	058 Call 0x1C17D44
	059 Compare X20, 0
	060 JumpIfNotEqual {105}
	061 Move X8, 0xAF3000
	062 Move X8, [X8+1608]
	063 Move X0, [X8]
	064 Call 0x1C17F10
	065 Move X20, X0
	066 Call TraceListenerCollection..ctor, X0
	067 Move X0, [X22]
	068 Move W8, [X0+224]
	069 Compare W8, 0
	070 JumpIfNotEqual {72}
	071 Call 0x1C17DFC
	072 Call 0x1C17D44
	073 Move X8, [X22]
	074 Move X8, [X8+184]
	075 Move [X8+8], X20
	076 Move X8, 0xAF3000
	077 Move X8, [X8+1600]
	078 Move X0, [X8]
	079 Call 0x1C17F10
	080 Move X20, X0
	081 Call DefaultTraceListener..ctor, X0
	082 Move X0, [X22]
	083 Call 0x1C17D0C
	084 Compare X20, 0
	085 JumpIfEqual {132}
	086 Move W8, [X0]
	087 NotImplemented "Instruction BIC not yet implemented."
	088 Move [X20+24], W8
	089 Move X8, [X22]
	090 Move X8, [X8+184]
	091 Move W21, [X8+20]
	092 Call 0x1C17D44
	093 Move X0, X20
	094 Move W1, W21
	095 Call TraceListener.set_IndentSize, X0, X1
	096 Move X8, [X22]
	097 Move X8, [X8+184]
	098 Move X21, [X8+8]
	099 Call 0x1C17D44
	100 Compare X21, 0
	101 JumpIfEqual {133}
	102 Move X0, X21
	103 Move X1, X20
	104 Call TraceListenerCollection.Add, X0, X1
	105 Move X20, X31
	106 Move W8, [X31+12]
	107 Compare W8, 0
	108 JumpIfEqual {112}
	109 Move X0, X19
	110 Move X1, X31
	111 Call Monitor.Exit, X0
	112 Compare X20, 0
	113 JumpIfNotEqual {130}
	114 Move X0, [X22]
	115 Move W8, [X0+224]
	116 Compare W8, 0
	117 JumpIfNotEqual {120}
	118 Call 0x1C17DFC
	119 Move X0, [X22]
	120 Move X8, [X0+184]
	121 Move X19, [X8+8]
	122 Call 0x1C17D44
	123 Move X0, X19
	124 Move X20, [X31+32]
	125 Move X19, [X31+40]
	126 Move X22, [X31+16]
	127 Move X21, [X31+24]
	128 Move X30, [X31+48]
	129 Return X0
	130 Move X0, X20
	131 Call 0x1C17F18
	132 Call 0x1C17F20
	133 Call 0x1C17F20
	134 Move X21, X0
	135 NotImplemented "Instruction CMP not yet implemented."
	136 Move X0, X21
	137 Call 0x3EB2AD0
	138 Move X20, [X0]
	139 Call 0x3EB2AE0
	140 Move X20, X31
	141 Move X21, X0
	142 Move W8, [X31+12]
	143 Compare W8, 0
	144 JumpIfEqual {148}
	145 Move X0, X19
	146 Move X1, X31
	147 Call Monitor.Exit, X0
	148 Compare X20, 0
	149 JumpIfNotEqual {152}
	150 Move X0, X21
	151 Call 0x1D2D690
	152 Move X0, X20
	153 Call 0x1C17F18
	154 Call 0x1991590

Method: System.Boolean get_AutoFlush()

Disassembly:
	0x0364ADD0 ADRP X8, 0xAA9000
	0x0364ADD4 LDR X8, [X8 + 0x988]
	0x0364ADD8 LDR X0, [X8]
	0x0364ADDC LDR X8, [X21]
	0x0364ADE0 LDR X8, [X8 + 0xB8]
	0x0364ADE4 STP X0, X19, [X8 + 0x8]
	0x0364ADE8 LDP X20, X19, [X31 + 0x10]
	0x0364ADEC LDP X30, X21, [X31], #0x20
	0x0364ADF0 RET
	0x0364ADF4 STP X30, X21, [X31 - 0x20]!
	0x0364ADF8 STP X20, X19, [X31 + 0x10]
	0x0364ADFC ADRP X21, 0xD96000
	0x0364AE00 LDRB W8, [X21 + 0x5DA]
	0x0364AE04 MOV X20, X1
	0x0364AE08 MOV X19, X0
	0x0364AE0C TBNZ X8, 0x0, 0x364AE24
	0x0364AE10 ADRP X0, 0xAA9000
	0x0364AE14 LDR X0, [X0 + 0x988]
	0x0364AE18 BL 0x1C16CF4
	0x0364AE1C MOVZ W8, 0x1
	0x0364AE20 STRB W8, [X21 + 0x5DA]
	0x0364AE24 CBZ X19, 0x364AE6C
	0x0364AE28 CBZ X20, 0x364AE6C
	0x0364AE2C LDR W9, [X19 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xD97000
	005 Move X19, 0xAF3000
	006 Move W8, [X20+1477]
	007 Move X19, [X19+1584]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xAF3000
	013 Move X0, [X0+1584]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+1477], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move W19, [X8+16]
	025 Call 0x1C17D44
	026 Move W0, W19
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X30, [X31+32]
	030 Return X0

Method: System.Boolean get_UseGlobalLock()

Disassembly:
	0x0364AE30 LDR W8, [X20 + 0x10]
	0x0364AE34 CMP W9, W8
	0x0364AE38 B.LE 0x364AE54
	0x0364AE3C MOV X0, X19
	0x0364AE40 LDP X20, X19, [X31 + 0x10]
	0x0364AE44 ADD W1, W8, 0x1
	0x0364AE48 MOV X2, X31
	0x0364AE4C LDP X30, X21, [X31], #0x20
	0x0364AE50 B 0x322B484
	0x0364AE54 ADRP X8, 0xAA9000
	0x0364AE58 LDR X8, [X8 + 0x988]
	0x0364AE5C LDP X20, X19, [X31 + 0x10]
	0x0364AE60 LDR X0, [X8]
	0x0364AE64 LDP X30, X21, [X31], #0x20
	0x0364AE68 RET
	0x0364AE6C BL 0x1C16F20
	0x0364AE70 LDR X0, [X0 + 0x38]
	0x0364AE74 RET
	0x0364AE78 B 0x1C50C08
	0x0364AE7C STR X30, [X31 - 0x30]!
	0x0364AE80 STP X22, X21, [X31 + 0x10]
	0x0364AE84 STP X20, X19, [X31 + 0x20]
	0x0364AE88 ADRP X22, 0xD96000
	0x0364AE8C ADRP X21, 0xAF2000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xD97000
	005 Move X19, 0xAF3000
	006 Move W8, [X20+1478]
	007 Move X19, [X19+1584]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xAF3000
	013 Move X0, [X0+1584]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+1478], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move W19, [X8+17]
	025 Call 0x1C17D44
	026 Move W0, W19
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X30, [X31+32]
	030 Return X0

Method: System.Int32 get_IndentLevel()

Disassembly:
	0x0364AE90 LDRB W8, [X22 + 0x5DC]
	0x0364AE94 LDR X21, [X21 + 0x640]
	0x0364AE98 MOV X19, X1
	0x0364AE9C MOV X20, X0
	0x0364AEA0 TBNZ X8, 0x0, 0x364AEB8
	0x0364AEA4 ADRP X0, 0xAF2000
	0x0364AEA8 LDR X0, [X0 + 0x640]
	0x0364AEAC BL 0x1C16CF4
	0x0364AEB0 MOVZ W8, 0x1
	0x0364AEB4 STRB W8, [X22 + 0x5DC]
	0x0364AEB8 LDR X8, [X21]
	0x0364AEBC LDR W9, [X8 + 0xE0]
	0x0364AEC0 CBNZ W9, 0x364AED0
	0x0364AEC4 MOV X0, X8
	0x0364AEC8 BL 0x1C16DFC
	0x0364AECC LDR X8, [X21]
	0x0364AED0 LDR X9, [X8 + 0xB8]
	0x0364AED4 LDRB W9, [X9]
	0x0364AED8 CBZ W9, 0x364AF14
	0x0364AEDC CBZ X19, 0x364AEF0
	0x0364AEE0 MOV X0, X31
	0x0364AEE4 BL 0x32C1424

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xD97000
	005 Move X19, 0xAF3000
	006 Move W8, [X20+1479]
	007 Move X19, [X19+1584]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xAF3000
	013 Move X0, [X0+1584]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+1479], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Call 0x1C17D0C
	024 Move W0, [X0]
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Return X0

Method: System.Int32 get_IndentSize()

Disassembly:
	0x0364AEE8 LDR X8, [X21]
	0x0364AEEC ADD X19, X19, W0, SXTW
	0x0364AEF0 LDR W9, [X8 + 0xE0]
	0x0364AEF4 CBNZ W9, 0x364AF00
	0x0364AEF8 MOV X0, X8
	0x0364AEFC BL 0x1C16DFC
	0x0364AF00 MOV X0, X19
	0x0364AF04 LDP X20, X19, [X31 + 0x20]
	0x0364AF08 LDP X22, X21, [X31 + 0x10]
	0x0364AF0C LDR X30, [X31], #0x30
	0x0364AF10 B 0x1C50C08
	0x0364AF14 MOV X0, X20
	0x0364AF18 MOV X1, X19
	0x0364AF1C LDP X20, X19, [X31 + 0x20]
	0x0364AF20 LDP X22, X21, [X31 + 0x10]
	0x0364AF24 LDR X30, [X31], #0x30
	0x0364AF28 B 0x364AF2C
	0x0364AF2C STR X30, [X31 - 0x30]!
	0x0364AF30 STP X22, X21, [X31 + 0x10]
	0x0364AF34 STP X20, X19, [X31 + 0x20]
	0x0364AF38 ADRP X20, 0xD96000
	0x0364AF3C ADRP X21, 0xAF2000
	0x0364AF40 LDRB W8, [X20 + 0x5DD]
	0x0364AF44 LDR X21, [X21 + 0x640]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xD97000
	005 Move X19, 0xAF3000
	006 Move W8, [X20+1480]
	007 Move X19, [X19+1584]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xAF3000
	013 Move X0, [X0+1584]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+1480], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move W19, [X8+20]
	025 Call 0x1C17D44
	026 Move W0, W19
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X30, [X31+32]
	030 Return X0

Method: System.Void InitializeSettings()

Disassembly:
	0x0364AB08 LDP X20, X19, [X31 + 0x20]

ISIL:
	001 Return 

Method: System.Void WriteLine(System.String message)

Disassembly:
	0x03649770 ADD X8, X8, X9, 0x4, LSL
	0x03649774 ADD X0, X8, 0x138
	0x03649778 LDP X8, X1, [X0]
	0x0364977C MOV X0, X22
	0x03649780 BLR X8
	0x03649784 CBNZ X23, 0x36497B0
	0x03649788 LDR X8, [X31]
	0x0364978C CMP W8, 0x1
	0x03649790 B.NE 0x36497A8
	0x03649794 LDR X0, [X31 + 0x8]
	0x03649798 BL 0x3EB1AD0
	0x0364979C LDR X22, [X0]
	0x036497A0 BL 0x3EB1AE0
	0x036497A4 B 0x3649310
	0x036497A8 MOV X22, X31
	0x036497AC B 0x36497C4
	0x036497B0 MOV X0, X23
	0x036497B4 BL 0x1C16F18
	0x036497B8 STP X1, X0, [X31]
	0x036497BC B 0x3649718
	0x036497C0 STR X0, [X31 + 0x8]
	0x036497C4 LDRB W8, [X31 + 0x1C]
	0x036497C8 CBZ W8, 0x36497D8
	0x036497CC MOV X0, X21
	0x036497D0 MOV X1, X31
	0x036497D4 BL 0x33E14E4
	0x036497D8 CBZ X22, 0x3649880
	0x036497DC MOV X0, X22
	0x036497E0 BL 0x1C16F18
	0x036497E4 MOV X23, X1
	0x036497E8 CMP W23, 0x1
	0x036497EC B.NE 0x3649800
	0x036497F0 BL 0x3EB1AD0
	0x036497F4 LDR X19, [X0]
	0x036497F8 BL 0x3EB1AE0
	0x036497FC B 0x3649588
	0x03649800 STR X0, [X31 + 0x8]
	0x03649804 MOV X19, X31
	0x03649808 B 0x3649810
	0x0364980C STR X0, [X31 + 0x8]
	0x03649810 LDR X1, [X24]
	0x03649814 MOV X0, X21
	0x03649818 BL 0x1C16E00
	0x0364981C MOV X20, X0
	0x03649820 CBZ X0, 0x364987C
	0x03649824 LDR X8, [X20]
	0x03649828 LDR X1, [X24]
	0x0364982C LDRH W9, [X8 + 0x12E]
	0x03649830 CBZ X9, 0x3649854
	0x03649834 LDR X10, [X8 + 0xB0]
	0x03649838 ADD X10, X10, 0x8
	0x0364983C LDUR X11, [X10 - 0x8]
	0x03649840 CMP X11, X1
	0x03649844 B.EQ 0x3649864
	0x03649848 SUBS X9, X9, 0x1
	0x0364984C ADD X10, X10, 0x10
	0x03649850 B.NE 0x364983C
	0x03649854 MOV X0, X20
	0x03649858 MOV W2, W31
	0x0364985C BL 0x1C5C788
	0x03649860 B 0x3649870
	0x03649864 LDRSW X9, [X10]
	0x03649868 ADD X8, X8, X9, 0x4, LSL
	0x0364986C ADD X0, X8, 0x138
	0x03649870 LDP X8, X1, [X0]
	0x03649874 MOV X0, X20
	0x03649878 BLR X8
	0x0364987C CBNZ X19, 0x3649888
	0x03649880 LDR X0, [X31 + 0x8]
	0x03649884 BL 0x1D2C690
	0x03649888 MOV X0, X19
	0x0364988C BL 0x1C16F18
	0x03649890 BL 0x1990590
	0x03649894 SUB X31, X31, 0x20
	0x03649898 LDR X8, [X0]
	0x0364989C MOV X6, X31
	0x036498A0 MOV X7, X31
	0x036498A4 LDP X9, X8, [X8 + 0x178]
	0x036498A8 STR X31, [X31]
	0x036498AC STP X8, X30, [X31 + 0x8]
	0x036498B0 BLR X9
	0x036498B4 LDR X30, [X31 + 0x10]
	0x036498B8 AND W0, W0, 0x1
	0x036498BC ADD X31, X31, 0x20
	0x036498C0 RET
	0x036498C4 STR X30, [X31 - 0x30]!
	0x036498C8 STP X22, X21, [X31 + 0x10]
	0x036498CC STP X20, X19, [X31 + 0x20]
	0x036498D0 ADRP X19, 0xD97000
	0x036498D4 ADRP X22, 0xAF3000
	0x036498D8 LDRB W8, [X19 + 0x5C4]
	0x036498DC LDR X22, [X22 + 0x630]
	0x036498E0 TBNZ X8, 0x0, 0x3649910
	0x036498E4 ADRP X0, 0xAF3000
	0x036498E8 LDR X0, [X0 + 0x640]
	0x036498EC BL 0x1C16CF4
	0x036498F0 ADRP X0, 0xAF3000
	0x036498F4 LDR X0, [X0 + 0x630]
	0x036498F8 BL 0x1C16CF4
	0x036498FC ADRP X0, 0xAF3000
	0x03649900 LDR X0, [X0 + 0x648]
	0x03649904 BL 0x1C16CF4
	0x03649908 MOVZ W8, 0x1
	0x0364990C STRB W8, [X19 + 0x5C4]
	0x03649910 LDR X0, [X22]
	0x03649914 STRB W31, [X31 + 0xC]
	0x03649918 LDR W8, [X0 + 0xE0]
	0x0364991C CBNZ W8, 0x3649928
	0x03649920 BL 0x1C16DFC
	0x03649924 LDR X0, [X22]
	0x03649928 LDR X8, [X0 + 0xB8]
	0x0364992C LDR X19, [X8 + 0x8]
	0x03649930 BL 0x1C16D44
	0x03649934 CBNZ X19, 0x3649A4C
	0x03649938 LDR X0, [X22]
	0x0364993C LDR W8, [X0 + 0xE0]
	0x03649940 CBNZ W8, 0x364994C
	0x03649944 BL 0x1C16DFC
	0x03649948 LDR X0, [X22]
	0x0364994C LDR X8, [X0 + 0xB8]
	0x03649950 LDR X19, [X8 + 0x18]
	0x03649954 STRB W31, [X31 + 0xC]
	0x03649958 ADD X1, X31, 0xC
	0x0364995C MOV X0, X19
	0x03649960 MOV X2, X31
	0x03649964 BL 0x33DE64C
	0x03649968 LDR X0, [X22]
	0x0364996C LDR W8, [X0 + 0xE0]
	0x03649970 CBNZ W8, 0x364997C
	0x03649974 BL 0x1C16DFC
	0x03649978 LDR X0, [X22]
	0x0364997C LDR X8, [X0 + 0xB8]
	0x03649980 LDR X20, [X8 + 0x8]
	0x03649984 BL 0x1C16D44
	0x03649988 CBNZ X20, 0x3649A30
	0x0364998C ADRP X8, 0xAF3000
	0x03649990 LDR X8, [X8 + 0x648]
	0x03649994 LDR X0, [X8]
	0x03649998 BL 0x1C16F10
	0x0364999C MOV X20, X0
	0x036499A0 BL 0x3649B0C
	0x036499A4 LDR X0, [X22]
	0x036499A8 LDR W8, [X0 + 0xE0]
	0x036499AC CBNZ W8, 0x36499B4
	0x036499B0 BL 0x1C16DFC
	0x036499B4 BL 0x1C16D44
	0x036499B8 LDR X8, [X22]
	0x036499BC LDR X8, [X8 + 0xB8]
	0x036499C0 STR X20, [X8 + 0x8]
	0x036499C4 ADRP X8, 0xAF3000
	0x036499C8 LDR X8, [X8 + 0x640]
	0x036499CC LDR X0, [X8]
	0x036499D0 BL 0x1C16F10
	0x036499D4 MOV X20, X0
	0x036499D8 BL 0x3649B74
	0x036499DC LDR X0, [X22]
	0x036499E0 BL 0x1C16D0C
	0x036499E4 CBZ X20, 0x3649A88
	0x036499E8 LDR W8, [X0]
	0x036499EC BIC W8, W8, W8, 0x1F
	0x036499F0 STR W8, [X20 + 0x18]
	0x036499F4 LDR X8, [X22]
	0x036499F8 LDR X8, [X8 + 0xB8]
	0x036499FC LDR W21, [X8 + 0x14]
	0x03649A00 BL 0x1C16D44
	0x03649A04 MOV X0, X20
	0x03649A08 MOV W1, W21
	0x03649A0C BL 0x3649BF4
	0x03649A10 LDR X8, [X22]
	0x03649A14 LDR X8, [X8 + 0xB8]
	0x03649A18 LDR X21, [X8 + 0x8]
	0x03649A1C BL 0x1C16D44
	0x03649A20 CBZ X21, 0x3649A8C
	0x03649A24 MOV X0, X21
	0x03649A28 MOV X1, X20
	0x03649A2C BL 0x3649C9C
	0x03649A30 MOV X20, X31
	0x03649A34 LDRB W8, [X31 + 0xC]
	0x03649A38 CBZ W8, 0x3649A48
	0x03649A3C MOV X0, X19
	0x03649A40 MOV X1, X31
	0x03649A44 BL 0x33E14E4
	0x03649A48 CBNZ X20, 0x3649A80
	0x03649A4C LDR X0, [X22]
	0x03649A50 LDR W8, [X0 + 0xE0]
	0x03649A54 CBNZ W8, 0x3649A60
	0x03649A58 BL 0x1C16DFC
	0x03649A5C LDR X0, [X22]
	0x03649A60 LDR X8, [X0 + 0xB8]
	0x03649A64 LDR X19, [X8 + 0x8]
	0x03649A68 BL 0x1C16D44
	0x03649A6C MOV X0, X19
	0x03649A70 LDP X20, X19, [X31 + 0x20]
	0x03649A74 LDP X22, X21, [X31 + 0x10]
	0x03649A78 LDR X30, [X31], #0x30
	0x03649A7C RET
	0x03649A80 MOV X0, X20
	0x03649A84 BL 0x1C16F18
	0x03649A88 BL 0x1C16F20
	0x03649A8C BL 0x1C16F20
	0x03649A90 B 0x3649AB0
	0x03649A94 B 0x3649AB0
	0x03649A98 B 0x3649AB0
	0x03649A9C B 0x3649AB0
	0x03649AA0 B 0x3649AB0
	0x03649AA4 B 0x3649AB0
	0x03649AA8 B 0x3649AB0
	0x03649AAC B 0x3649AB0
	0x03649AB0 MOV X21, X0
	0x03649AB4 CMP W1, 0x1
	0x03649AB8 B.NE 0x3649AD0
	0x03649ABC MOV X0, X21
	0x03649AC0 BL 0x3EB1AD0
	0x03649AC4 LDR X20, [X0]
	0x03649AC8 BL 0x3EB1AE0
	0x03649ACC B 0x3649A34
	0x03649AD0 MOV X20, X31
	0x03649AD4 B 0x3649ADC
	0x03649AD8 MOV X21, X0
	0x03649ADC LDRB W8, [X31 + 0xC]
	0x03649AE0 CBZ W8, 0x3649AF0
	0x03649AE4 MOV X0, X19
	0x03649AE8 MOV X1, X31
	0x03649AEC BL 0x33E14E4
	0x03649AF0 CBNZ X20, 0x3649AFC
	0x03649AF4 MOV X0, X21
	0x03649AF8 BL 0x1D2C690
	0x03649AFC MOV X0, X20
	0x03649B00 BL 0x1C16F18
	0x03649B04 BL 0x1990590
	0x03649B08 RET
	0x03649B0C STP X30, X21, [X31 - 0x20]!
	0x03649B10 STP X20, X19, [X31 + 0x10]
	0x03649B14 ADRP X21, 0xD97000
	0x03649B18 ADRP X20, 0xAD7000
	0x03649B1C LDRB W8, [X21 + 0x5CF]
	0x03649B20 LDR X20, [X20 + 0xBA0]
	0x03649B24 MOV X19, X0
	0x03649B28 TBNZ X8, 0x0, 0x3649B40
	0x03649B2C ADRP X0, 0xAD7000
	0x03649B30 LDR X0, [X0 + 0xBA0]
	0x03649B34 BL 0x1C16CF4
	0x03649B38 MOVZ W8, 0x1
	0x03649B3C STRB W8, [X21 + 0x5CF]
	0x03649B40 MOV X0, X19
	0x03649B44 MOV X1, X31
	0x03649B48 BL 0x33BDD8C
	0x03649B4C LDR X0, [X20]
	0x03649B50 BL 0x1C16F10
	0x03649B54 MOVZ W1, 0x1
	0x03649B58 MOV X2, X31
	0x03649B5C MOV X20, X0
	0x03649B60 BL 0x3358210
	0x03649B64 STR X20, [X19 + 0x10]
	0x03649B68 LDP X20, X19, [X31 + 0x10]
	0x03649B6C LDP X30, X21, [X31], #0x20
	0x03649B70 RET
	0x03649B74 STP X30, X21, [X31 - 0x20]!
	0x03649B78 STP X20, X19, [X31 + 0x10]
	0x03649B7C ADRP X20, 0xD97000
	0x03649B80 ADRP X21, 0xAD2000
	0x03649B84 LDRB W8, [X20 + 0x5DB]
	0x03649B88 LDR X21, [X21 + 0x68]
	0x03649B8C MOV X19, X0
	0x03649B90 TBNZ X8, 0x0, 0x3649BA8
	0x03649B94 ADRP X0, 0xAD2000
	0x03649B98 LDR X0, [X0 + 0x68]
	0x03649B9C BL 0x1C16CF4
	0x03649BA0 MOVZ W8, 0x1
	0x03649BA4 STRB W8, [X20 + 0x5DB]
	0x03649BA8 LDR X20, [X21]
	0x03649BAC MOVZ W8, 0x4
	0x03649BB0 STR W8, [X19 + 0x1C]
	0x03649BB4 MOVZ W8, 0x1
	0x03649BB8 MOV X0, X19
	0x03649BBC MOV X1, X31
	0x03649BC0 STRB W8, [X19 + 0x20]
	0x03649BC4 BL 0x33C011C
	0x03649BC8 STR X20, [X19 + 0x28]
	0x03649BCC LDP X20, X19, [X31 + 0x10]
	0x03649BD0 LDP X30, X21, [X31], #0x20
	0x03649BD4 RET
	0x03649BD8 STR X30, [X31 - 0x10]!
	0x03649BDC CBZ X0, 0x3649BF0
	0x03649BE0 BIC W8, W1, W1, 0x1F
	0x03649BE4 STR W8, [X0 + 0x18]
	0x03649BE8 LDR X30, [X31], #0x10
	0x03649BEC RET
	0x03649BF0 BL 0x1C16F20
	0x03649BF4 SUB X31, X31, 0x30
	0x03649BF8 STP X30, X21, [X31 + 0x10]
	0x03649BFC STP X20, X19, [X31 + 0x20]
	0x03649C00 TBNZ X1, 0x1F, 0x3649C18
	0x03649C04 LDP X20, X19, [X31 + 0x20]
	0x03649C08 LDP X30, X21, [X31 + 0x10]
	0x03649C0C STR W1, [X0 + 0x1C]
	0x03649C10 ADD X31, X31, 0x30
	0x03649C14 RET
	0x03649C18 STR W1, [X31 + 0xC]
	0x03649C1C ADRP X0, 0xAAA000
	0x03649C20 LDR X0, [X0 + 0x758]
	0x03649C24 BL 0x1C16D08
	0x03649C28 ADD X1, X31, 0xC
	0x03649C2C BL 0x1C16E04
	0x03649C30 MOV X19, X0
	0x03649C34 ADRP X0, 0xAF3000
	0x03649C38 LDR X0, [X0 + 0x650]
	0x03649C3C BL 0x1C16D08
	0x03649C40 MOV X1, X31
	0x03649C44 BL 0x320A1E4
	0x03649C48 MOV X20, X0
	0x03649C4C ADRP X0, 0xAB2000
	0x03649C50 LDR X0, [X0 + 0x760]
	0x03649C54 BL 0x1C16D08
	0x03649C58 BL 0x1C16F10
	0x03649C5C MOV X21, X0
	0x03649C60 ADRP X0, 0xAF3000
	0x03649C64 LDR X0, [X0 + 0x658]
	0x03649C68 BL 0x1C16D08
	0x03649C6C MOV X1, X0
	0x03649C70 MOV X0, X21
	0x03649C74 MOV X2, X19
	0x03649C78 MOV X3, X20
	0x03649C7C MOV X4, X31
	0x03649C80 BL 0x3312C8C
	0x03649C84 ADRP X0, 0xAF3000
	0x03649C88 LDR X0, [X0 + 0x660]
	0x03649C8C BL 0x1C16D08
	0x03649C90 MOV X1, X0
	0x03649C94 MOV X0, X21
	0x03649C98 BL 0x1C16DEC
	0x03649C9C STR X30, [X31 - 0x30]!
	0x03649CA0 STP X22, X21, [X31 + 0x10]
	0x03649CA4 STP X20, X19, [X31 + 0x20]
	0x03649CA8 ADRP X22, 0xD97000
	0x03649CAC ADRP X19, 0xAF3000
	0x03649CB0 LDRB W8, [X22 + 0x5D0]
	0x03649CB4 LDR X19, [X19 + 0x630]
	0x03649CB8 MOV X20, X1
	0x03649CBC MOV X21, X0
	0x03649CC0 TBNZ X8, 0x0, 0x3649CD8
	0x03649CC4 ADRP X0, 0xAF3000
	0x03649CC8 LDR X0, [X0 + 0x630]
	0x03649CCC BL 0x1C16CF4
	0x03649CD0 MOVZ W8, 0x1
	0x03649CD4 STRB W8, [X22 + 0x5D0]
	0x03649CD8 MOV X1, X20
	0x03649CDC BL 0x364A2C8
	0x03649CE0 LDR X0, [X19]
	0x03649CE4 LDR W8, [X0 + 0xE0]
	0x03649CE8 CBNZ W8, 0x3649CF4
	0x03649CEC BL 0x1C16DFC
	0x03649CF0 LDR X0, [X19]
	0x03649CF4 LDR X8, [X0 + 0xB8]
	0x03649CF8 LDR X19, [X8 + 0x18]
	0x03649CFC STRB W31, [X31 + 0xC]
	0x03649D00 ADD X1, X31, 0xC
	0x03649D04 MOV X0, X19
	0x03649D08 MOV X2, X31
	0x03649D0C BL 0x33DE64C
	0x03649D10 LDR X0, [X21 + 0x10]
	0x03649D14 CBZ X0, 0x3649D68
	0x03649D18 LDR X8, [X0]
	0x03649D1C LDR X9, [X8 + 0x308]
	0x03649D20 LDR X2, [X8 + 0x310]
	0x03649D24 MOV X1, X20
	0x03649D28 BLR X9
	0x03649D2C MOV W21, W0
	0x03649D30 MOV X20, X31
	0x03649D34 LDRB W8, [X31 + 0xC]
	0x03649D38 CBZ W8, 0x3649D48
	0x03649D3C MOV X0, X19
	0x03649D40 MOV X1, X31
	0x03649D44 BL 0x33E14E4
	0x03649D48 CBNZ X20, 0x3649D60
	0x03649D4C MOV W0, W21
	0x03649D50 LDP X20, X19, [X31 + 0x20]
	0x03649D54 LDP X22, X21, [X31 + 0x10]
	0x03649D58 LDR X30, [X31], #0x30
	0x03649D5C RET
	0x03649D60 MOV X0, X20
	0x03649D64 BL 0x1C16F18
	0x03649D68 BL 0x1C16F20
	0x03649D6C B 0x3649D74
	0x03649D70 B 0x3649D74
	0x03649D74 MOV X21, X0
	0x03649D78 CMP W1, 0x1
	0x03649D7C B.NE 0x3649D98
	0x03649D80 MOV X0, X21
	0x03649D84 BL 0x3EB1AD0
	0x03649D88 LDR X20, [X0]
	0x03649D8C BL 0x3EB1AE0
	0x03649D90 MOV W21, W31
	0x03649D94 B 0x3649D34
	0x03649D98 MOV X20, X31
	0x03649D9C B 0x3649DA4
	0x03649DA0 MOV X21, X0
	0x03649DA4 LDRB W8, [X31 + 0xC]
	0x03649DA8 CBZ W8, 0x3649DB8
	0x03649DAC MOV X0, X19
	0x03649DB0 MOV X1, X31
	0x03649DB4 BL 0x33E14E4
	0x03649DB8 CBNZ X20, 0x3649DC4
	0x03649DBC MOV X0, X21
	0x03649DC0 BL 0x1D2C690
	0x03649DC4 MOV X0, X20
	0x03649DC8 BL 0x1C16F18
	0x03649DCC BL 0x1990590
	0x03649DD0 STR X30, [X31 - 0x20]!
	0x03649DD4 STP X20, X19, [X31 + 0x10]
	0x03649DD8 ADRP X20, 0xD97000
	0x03649DDC ADRP X19, 0xAF3000
	0x03649DE0 LDRB W8, [X20 + 0x5C5]
	0x03649DE4 LDR X19, [X19 + 0x630]
	0x03649DE8 TBNZ X8, 0x0, 0x3649E00
	0x03649DEC ADRP X0, 0xAF3000
	0x03649DF0 LDR X0, [X0 + 0x630]
	0x03649DF4 BL 0x1C16CF4
	0x03649DF8 MOVZ W8, 0x1
	0x03649DFC STRB W8, [X20 + 0x5C5]
	0x03649E00 LDR X0, [X19]
	0x03649E04 LDR W8, [X0 + 0xE0]
	0x03649E08 CBNZ W8, 0x3649E14
	0x03649E0C BL 0x1C16DFC
	0x03649E10 LDR X0, [X19]
	0x03649E14 LDR X8, [X0 + 0xB8]
	0x03649E18 LDRB W19, [X8 + 0x10]
	0x03649E1C BL 0x1C16D44
	0x03649E20 MOV W0, W19
	0x03649E24 LDP X20, X19, [X31 + 0x10]
	0x03649E28 LDR X30, [X31], #0x20
	0x03649E2C RET
	0x03649E30 STR X30, [X31 - 0x20]!
	0x03649E34 STP X20, X19, [X31 + 0x10]
	0x03649E38 ADRP X20, 0xD97000
	0x03649E3C ADRP X19, 0xAF3000
	0x03649E40 LDRB W8, [X20 + 0x5C6]
	0x03649E44 LDR X19, [X19 + 0x630]
	0x03649E48 TBNZ X8, 0x0, 0x3649E60
	0x03649E4C ADRP X0, 0xAF3000
	0x03649E50 LDR X0, [X0 + 0x630]
	0x03649E54 BL 0x1C16CF4
	0x03649E58 MOVZ W8, 0x1
	0x03649E5C STRB W8, [X20 + 0x5C6]
	0x03649E60 LDR X0, [X19]
	0x03649E64 LDR W8, [X0 + 0xE0]
	0x03649E68 CBNZ W8, 0x3649E74
	0x03649E6C BL 0x1C16DFC
	0x03649E70 LDR X0, [X19]
	0x03649E74 LDR X8, [X0 + 0xB8]
	0x03649E78 LDRB W19, [X8 + 0x11]
	0x03649E7C BL 0x1C16D44
	0x03649E80 MOV W0, W19
	0x03649E84 LDP X20, X19, [X31 + 0x10]
	0x03649E88 LDR X30, [X31], #0x20
	0x03649E8C RET
	0x03649E90 STR X30, [X31 - 0x20]!
	0x03649E94 STP X20, X19, [X31 + 0x10]
	0x03649E98 ADRP X20, 0xD97000
	0x03649E9C ADRP X19, 0xAF3000
	0x03649EA0 LDRB W8, [X20 + 0x5C7]
	0x03649EA4 LDR X19, [X19 + 0x630]
	0x03649EA8 TBNZ X8, 0x0, 0x3649EC0
	0x03649EAC ADRP X0, 0xAF3000
	0x03649EB0 LDR X0, [X0 + 0x630]
	0x03649EB4 BL 0x1C16CF4
	0x03649EB8 MOVZ W8, 0x1
	0x03649EBC STRB W8, [X20 + 0x5C7]
	0x03649EC0 LDR X0, [X19]
	0x03649EC4 LDR W8, [X0 + 0xE0]
	0x03649EC8 CBNZ W8, 0x3649ED4
	0x03649ECC BL 0x1C16DFC
	0x03649ED0 LDR X0, [X19]
	0x03649ED4 BL 0x1C16D0C
	0x03649ED8 LDR W0, [X0]
	0x03649EDC LDP X20, X19, [X31 + 0x10]
	0x03649EE0 LDR X30, [X31], #0x20
	0x03649EE4 RET
	0x03649EE8 STR X30, [X31 - 0x20]!
	0x03649EEC STP X20, X19, [X31 + 0x10]
	0x03649EF0 ADRP X20, 0xD97000
	0x03649EF4 ADRP X19, 0xAF3000
	0x03649EF8 LDRB W8, [X20 + 0x5C8]
	0x03649EFC LDR X19, [X19 + 0x630]
	0x03649F00 TBNZ X8, 0x0, 0x3649F18
	0x03649F04 ADRP X0, 0xAF3000
	0x03649F08 LDR X0, [X0 + 0x630]
	0x03649F0C BL 0x1C16CF4
	0x03649F10 MOVZ W8, 0x1
	0x03649F14 STRB W8, [X20 + 0x5C8]
	0x03649F18 LDR X0, [X19]
	0x03649F1C LDR W8, [X0 + 0xE0]
	0x03649F20 CBNZ W8, 0x3649F2C
	0x03649F24 BL 0x1C16DFC
	0x03649F28 LDR X0, [X19]
	0x03649F2C LDR X8, [X0 + 0xB8]
	0x03649F30 LDR W19, [X8 + 0x14]
	0x03649F34 BL 0x1C16D44
	0x03649F38 MOV W0, W19
	0x03649F3C LDP X20, X19, [X31 + 0x10]
	0x03649F40 LDR X30, [X31], #0x20
	0x03649F44 RET
	0x03649F48 STR X30, [X31 - 0x10]!
	0x03649F4C LDR X0, [X0 + 0x10]
	0x03649F50 CBZ X0, 0x3649F68
	0x03649F54 LDR X8, [X0]
	0x03649F58 LDR X2, [X8 + 0x388]
	0x03649F5C LDR X1, [X8 + 0x390]
	0x03649F60 LDR X30, [X31], #0x10
	0x03649F64 BR X2
	0x03649F68 BL 0x1C16F20
	0x03649F6C STP X30, X21, [X31 - 0x20]!
	0x03649F70 STP X20, X19, [X31 + 0x10]
	0x03649F74 ADRP X21, 0xD97000
	0x03649F78 ADRP X20, 0xAF3000
	0x03649F7C ADRP X19, 0xAB0000
	0x03649F80 LDRB W8, [X21 + 0x5CB]
	0x03649F84 LDR X20, [X20 + 0x630]
	0x03649F88 LDR X19, [X19 + 0xCC0]
	0x03649F8C TBNZ X8, 0x0, 0x3649FB0
	0x03649F90 ADRP X0, 0xAB0000

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+32], X30
	003 Move [X31+40], X27
	004 Move [X31+48], X26
	005 Move [X31+56], X25
	006 Move [X31+64], X24
	007 Move [X31+72], X23
	008 Move [X31+80], X22
	009 Move [X31+88], X21
	010 Move [X31+96], X20
	011 Move [X31+104], X19
	012 Move X20, 0xD98000
	013 Move X24, 0xAF4000
	014 Move W8, [X20+1481]
	015 Move X24, [X24+1584]
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {35}
	021 Move X0, 0xAAB000
	022 Move X0, [X0+3584]
	023 Call 0x1C17CF4
	024 Move X0, 0xAAB000
	025 Move X0, [X0+3608]
	026 Call 0x1C17CF4
	027 Move X0, 0xAF4000
	028 Move X0, [X0+1584]
	029 Call 0x1C17CF4
	030 Move X0, 0xAF4000
	031 Move X0, [X0+1592]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X20+1481], W8
	035 Move X0, [X24]
	036 Move [X31+28], W31
	037 Move W8, [X0+224]
	038 Compare W8, 0
	039 JumpIfNotEqual {41}
	040 Call 0x1C17DFC
	041 Move X23, 0xAAB000
	042 Move X23, [X23+3584]
	043 Call TraceInternal.get_UseGlobalLock
	044 Move TEMP, X0
	045 And TEMP, TEMP, 1
	046 Compare TEMP, 1
	047 JumpIfNotEqual {212}
	048 Move X0, [X24]
	049 Move W8, [X0+224]
	050 Compare W8, 0
	051 JumpIfNotEqual {54}
	052 Call 0x1C17DFC
	053 Move X0, [X24]
	054 Move X8, [X0+184]
	055 Move X20, [X8+24]
	056 Move [X31+28], W31
	057 Add X1, X31, 28
	058 Move X0, X20
	059 Move X2, X31
	060 Call Monitor.Enter, X0, X1
	061 Move X0, [X24]
	062 Move W8, [X0+224]
	063 Compare W8, 0
	064 JumpIfNotEqual {66}
	065 Call 0x1C17DFC
	066 Call TraceInternal.get_Listeners
	067 Compare X0, 0
	068 JumpIfEqual {441}
	069 Move X0, [X0+16]
	070 Compare X0, 0
	071 JumpIfEqual {442}
	072 Move X8, [X0]
	073 Move X1, [X8+912]
	074 Move X9, [X8+904]
	075 NotImplemented "Instruction BLR not yet implemented."
	076 Move X21, X0
	077 Compare X0, 0
	078 JumpIfEqual {443}
	079 Move X25, 0xAAB000
	080 Move X26, 0xAF4000
	081 Move X25, [X25+3608]
	082 Move X26, [X26+1592]
	083 Move X8, [X21]
	084 Move X1, [X25]
	085 NotImplemented "Instruction LDRH not yet implemented."
	086 Compare X9, 0
	087 JumpIfEqual {94}
	088 Move X10, [X8+176]
	089 Add X10, X10, 8
	090 NotImplemented "Instruction LDUR not yet implemented."
	091 NotImplemented "Instruction CMP not yet implemented."
	092 Subtract X9, X9, 1
	093 Add X10, X10, 16
	094 Move X0, X21
	095 Move W2, W31
	096 Call 0x1C5D788
	097 NotImplemented "Instruction LDRSW not yet implemented."
	098 Add X8, X8, X9
	099 Add X0, X8, 312
	100 Move X8, [X0]
	101 Move X1, [X0+8]
	102 Move X0, X21
	103 NotImplemented "Instruction BLR not yet implemented."
	104 Move TEMP, X0
	105 And TEMP, TEMP, 1
	106 Compare TEMP, 1
	107 JumpIfNotEqual {163}
	108 Move X8, [X21]
	109 Move X1, [X25]
	110 NotImplemented "Instruction LDRH not yet implemented."
	111 Compare X9, 0
	112 JumpIfEqual {119}
	113 Move X10, [X8+176]
	114 Add X10, X10, 8
	115 NotImplemented "Instruction LDUR not yet implemented."
	116 NotImplemented "Instruction CMP not yet implemented."
	117 Subtract X9, X9, 1
	118 Add X10, X10, 16
	119 Move W2, 1
	120 Move X0, X21
	121 Call 0x1C5D788
	122 Move W9, [X10]
	123 Add W9, W9, 1
	124 Add X8, X8, W9
	125 Add X0, X8, 312
	126 Move X8, [X0]
	127 Move X1, [X0+8]
	128 Move X0, X21
	129 NotImplemented "Instruction BLR not yet implemented."
	130 Move X22, X0
	131 Compare X0, 0
	132 JumpIfEqual {419}
	133 Move X8, [X22]
	134 Move X1, [X26]
	135 Move W10, [X8+304]
	136 Move W9, [X1+304]
	137 NotImplemented "Instruction CMP not yet implemented."
	138 Move X8, [X8+200]
	139 Add X8, X8, X9
	140 NotImplemented "Instruction LDUR not yet implemented."
	141 NotImplemented "Instruction CMP not yet implemented."
	142 Move X8, [X22]
	143 Move X9, [X8+504]
	144 Move X2, [X8+512]
	145 Move X0, X22
	146 Move X1, X19
	147 NotImplemented "Instruction BLR not yet implemented."
	148 Move X0, [X24]
	149 Move W8, [X0+224]
	150 Compare W8, 0
	151 JumpIfNotEqual {153}
	152 Call 0x1C17DFC
	153 Call TraceInternal.get_AutoFlush
	154 Move TEMP, X0
	155 And TEMP, TEMP, 1
	156 Compare TEMP, 1
	157 JumpIfNotEqual {83}
	158 Move X8, [X22]
	159 Move X9, [X8+456]
	160 Move X1, [X8+464]
	161 Move X0, X22
	162 NotImplemented "Instruction BLR not yet implemented."
	163 Move X22, X31
	164 Move W26, W31
	165 Move W25, 5
	166 Move X1, [X23]
	167 Move X0, X21
	168 Call 0x1C17E00
	169 Move X21, X0
	170 Compare X0, 0
	171 JumpIfEqual {193}
	172 Move X8, [X21]
	173 Move X1, [X23]
	174 NotImplemented "Instruction LDRH not yet implemented."
	175 Compare X9, 0
	176 JumpIfEqual {183}
	177 Move X10, [X8+176]
	178 Add X10, X10, 8
	179 NotImplemented "Instruction LDUR not yet implemented."
	180 NotImplemented "Instruction CMP not yet implemented."
	181 Subtract X9, X9, 1
	182 Add X10, X10, 16
	183 Move X0, X21
	184 Move W2, W31
	185 Call 0x1C5D788
	186 NotImplemented "Instruction LDRSW not yet implemented."
	187 Add X8, X8, X9
	188 Add X0, X8, 312
	189 Move X8, [X0]
	190 Move X1, [X0+8]
	191 Move X0, X21
	192 NotImplemented "Instruction BLR not yet implemented."
	193 Compare X22, 0
	194 JumpIfNotEqual {444}
	195 Move X21, X31
	196 Move TEMP, X26
	197 And TEMP, TEMP, 1
	198 Compare TEMP, 1
	199 JumpIfNotEqual {202}
	200 Move W25, W31
	201 Move X22, X21
	202 Move W8, [X31+28]
	203 Compare W8, 0
	204 JumpIfEqual {208}
	205 Move X0, X20
	206 Move X1, X31
	207 Call Monitor.Exit, X0
	208 Compare X22, 0
	209 JumpIfNotEqual {439}
	210 Compare W25, 0
	211 JumpIfNotEqual {402}
	212 Move X0, [X24]
	213 Move W8, [X0+224]
	214 Compare W8, 0
	215 JumpIfNotEqual {217}
	216 Call 0x1C17DFC
	217 Call TraceInternal.get_Listeners
	218 Compare X0, 0
	219 JumpIfEqual {422}
	220 Move X0, [X0+16]
	221 Compare X0, 0
	222 JumpIfEqual {422}
	223 Move X8, [X0]
	224 Move X9, [X8+904]
	225 Move X1, [X8+912]
	226 NotImplemented "Instruction BLR not yet implemented."
	227 Move X20, X0
	228 Compare X0, 0
	229 JumpIfEqual {436}
	230 Move X25, 0xAAB000
	231 Move X26, 0xAF4000
	232 Move X25, [X25+3608]
	233 Move X26, [X26+1592]
	234 Move X8, [X20]
	235 Move X1, [X25]
	236 NotImplemented "Instruction LDRH not yet implemented."
	237 Compare X9, 0
	238 JumpIfEqual {245}
	239 Move X10, [X8+176]
	240 Add X10, X10, 8
	241 NotImplemented "Instruction LDUR not yet implemented."
	242 NotImplemented "Instruction CMP not yet implemented."
	243 Subtract X9, X9, 1
	244 Add X10, X10, 16
	245 Move X0, X20
	246 Move W2, W31
	247 Call 0x1C5D788
	248 NotImplemented "Instruction LDRSW not yet implemented."
	249 Add X8, X8, X9
	250 Add X0, X8, 312
	251 Move X8, [X0]
	252 Move X1, [X0+8]
	253 Move X0, X20
	254 NotImplemented "Instruction BLR not yet implemented."
	255 Move TEMP, X0
	256 And TEMP, TEMP, 1
	257 Compare TEMP, 1
	258 JumpIfNotEqual {372}
	259 Move X8, [X20]
	260 Move X1, [X25]
	261 NotImplemented "Instruction LDRH not yet implemented."
	262 Compare X9, 0
	263 JumpIfEqual {270}
	264 Move X10, [X8+176]
	265 Add X10, X10, 8
	266 NotImplemented "Instruction LDUR not yet implemented."
	267 NotImplemented "Instruction CMP not yet implemented."
	268 Subtract X9, X9, 1
	269 Add X10, X10, 16
	270 Move W2, 1
	271 Move X0, X20
	272 Call 0x1C5D788
	273 Move W9, [X10]
	274 Add W9, W9, 1
	275 Add X8, X8, W9
	276 Add X0, X8, 312
	277 Move X8, [X0]
	278 Move X1, [X0+8]
	279 Move X0, X20
	280 NotImplemented "Instruction BLR not yet implemented."
	281 Move X21, X0
	282 Compare X0, 0
	283 JumpIfEqual {418}
	284 Move X8, [X21]
	285 Move X1, [X26]
	286 Move W10, [X8+304]
	287 Move W9, [X1+304]
	288 NotImplemented "Instruction CMP not yet implemented."
	289 Move X8, [X8+200]
	290 Add X8, X8, X9
	291 NotImplemented "Instruction LDUR not yet implemented."
	292 NotImplemented "Instruction CMP not yet implemented."
	293 Move X8, [X21]
	294 Move X9, [X8+424]
	295 Move X1, [X8+432]
	296 Move X0, X21
	297 NotImplemented "Instruction BLR not yet implemented."
	298 Move TEMP, X0
	299 And TEMP, TEMP, 1
	300 Compare TEMP, 1
	301 JumpIfEqual {341}
	302 Move [X31+28], W31
	303 Add X1, X31, 28
	304 Move X0, X21
	305 Move X2, X31
	306 Call Monitor.Enter, X0, X1
	307 Move X8, [X21]
	308 Move X9, [X8+504]
	309 Move X2, [X8+512]
	310 Move X0, X21
	311 Move X1, X19
	312 NotImplemented "Instruction BLR not yet implemented."
	313 Move X0, [X24]
	314 Move W8, [X0+224]
	315 Compare W8, 0
	316 JumpIfNotEqual {318}
	317 Call 0x1C17DFC
	318 Call TraceInternal.get_AutoFlush
	319 Move TEMP, X0
	320 And TEMP, TEMP, 1
	321 Compare TEMP, 1
	322 JumpIfNotEqual {328}
	323 Move X8, [X21]
	324 Move X9, [X8+456]
	325 Move X1, [X8+464]
	326 Move X0, X21
	327 NotImplemented "Instruction BLR not yet implemented."
	328 Move X22, X31
	329 Move W27, 6
	330 Move W8, [X31+28]
	331 Compare W8, 0
	332 JumpIfEqual {336}
	333 Move X0, X21
	334 Move X1, X31
	335 Call Monitor.Exit, X0
	336 Compare X22, 0
	337 JumpIfNotEqual {420}
	338 NotImplemented "Instruction CMP not yet implemented."
	339 Compare W27, 0
	340 JumpIfNotEqual {372}
	341 Move X8, [X21]
	342 Move X9, [X8+504]
	343 Move X2, [X8+512]
	344 Move X0, X21
	345 Move X1, X19
	346 NotImplemented "Instruction BLR not yet implemented."
	347 Move X0, [X24]
	348 Move W8, [X0+224]
	349 Compare W8, 0
	350 JumpIfNotEqual {352}
	351 Call 0x1C17DFC
	352 Call TraceInternal.get_AutoFlush
	353 Move TEMP, X0
	354 And TEMP, TEMP, 1
	355 Compare TEMP, 1
	356 JumpIfNotEqual {234}
	357 Move X8, [X21]
	358 Move X9, [X8+456]
	359 Move X1, [X8+464]
	360 Move X0, X21
	361 NotImplemented "Instruction BLR not yet implemented."
	362 Move X22, X1
	363 NotImplemented "Instruction CMP not yet implemented."
	364 Move [X31+16], X0
	365 Move X0, [X31+16]
	366 Call 0x3EB2AD0
	367 Move X8, [X0]
	368 Move [X31+8], X8
	369 Call 0x3EB2AE0
	370 Move X22, [X31+8]
	371 Move W27, W31
	372 Move X19, X31
	373 Move X1, [X23]
	374 Move X0, X20
	375 Call 0x1C17E00
	376 Compare X0, 0
	377 JumpIfEqual {400}
	378 Move X8, [X0]
	379 Move X1, [X23]
	380 Move X20, X0
	381 NotImplemented "Instruction LDRH not yet implemented."
	382 Compare X9, 0
	383 JumpIfEqual {390}
	384 Move X10, [X8+176]
	385 Add X10, X10, 8
	386 NotImplemented "Instruction LDUR not yet implemented."
	387 NotImplemented "Instruction CMP not yet implemented."
	388 Subtract X9, X9, 1
	389 Add X10, X10, 16
	390 Move X0, X20
	391 Move W2, W31
	392 Call 0x1C5D788
	393 NotImplemented "Instruction LDRSW not yet implemented."
	394 Add X8, X8, X9
	395 Add X0, X8, 312
	396 Move X8, [X0]
	397 Move X1, [X0+8]
	398 Move X0, X20
	399 NotImplemented "Instruction BLR not yet implemented."
	400 Compare X19, 0
	401 JumpIfNotEqual {437}
	402 Move X20, [X31+96]
	403 Move X19, [X31+104]
	404 Move X22, [X31+80]
	405 Move X21, [X31+88]
	406 Move X24, [X31+64]
	407 Move X23, [X31+72]
	408 Move X26, [X31+48]
	409 Move X25, [X31+56]
	410 Move X30, [X31+32]
	411 Move X27, [X31+40]
	412 Add X31, X31, 112
	413 Return 
	414 Move X0, X21
	415 Call 0x1C181E0
	416 Move X0, X22
	417 Call 0x1C181E0
	418 Call 0x1C17F20
	419 Call 0x1C17F20
	420 Move X0, X22
	421 Call 0x1C17F18
	422 Call 0x1C17F20
	423 Move [X31+8], X31
	424 Move W8, [X31+28]
	425 Compare W8, 0
	426 JumpIfEqual {430}
	427 Move X0, X21
	428 Move X1, X31
	429 Call Monitor.Exit, X0
	430 Move X8, [X31+8]
	431 Move X0, [X31+16]
	432 Compare X8, 0
	433 JumpIfEqual {511}
	434 Move X0, [X31+8]
	435 Call 0x1C17F18
	436 Call 0x1C17F20
	437 Move X0, X19
	438 Call 0x1C17F18
	439 Move X0, X22
	440 Call 0x1C17F18
	441 Call 0x1C17F20
	442 Call 0x1C17F20
	443 Call 0x1C17F20
	444 Move X0, X22
	445 Call 0x1C17F18
	446 Move X22, X1
	447 Move [X31+16], X0
	448 Move [X31+8], X1
	449 Move [X31+16], X0
	450 NotImplemented "Instruction CMP not yet implemented."
	451 Call 0x3EB2AD0
	452 Move X22, [X0]
	453 Call 0x3EB2AE0
	454 Move W25, W31
	455 Move W26, 1
	456 Move [X31+8], X1
	457 Move [X31+16], X0
	458 Move X22, X31
	459 Move X1, [X23]
	460 Move X0, X21
	461 Call 0x1C17E00
	462 Move X21, X0
	463 Compare X0, 0
	464 JumpIfEqual {486}
	465 Move X8, [X21]
	466 Move X1, [X23]
	467 NotImplemented "Instruction LDRH not yet implemented."
	468 Compare X9, 0
	469 JumpIfEqual {476}
	470 Move X10, [X8+176]
	471 Add X10, X10, 8
	472 NotImplemented "Instruction LDUR not yet implemented."
	473 NotImplemented "Instruction CMP not yet implemented."
	474 Subtract X9, X9, 1
	475 Add X10, X10, 16
	476 Move X0, X21
	477 Move W2, W31
	478 Call 0x1C5D788
	479 NotImplemented "Instruction LDRSW not yet implemented."
	480 Add X8, X8, X9
	481 Add X0, X8, 312
	482 Move X8, [X0]
	483 Move X1, [X0+8]
	484 Move X0, X21
	485 NotImplemented "Instruction BLR not yet implemented."
	486 Compare X22, 0
	487 JumpIfNotEqual {495}
	488 Move X8, [X31+8]
	489 NotImplemented "Instruction CMP not yet implemented."
	490 Move X0, [X31+16]
	491 Call 0x3EB2AD0
	492 Move X21, [X0]
	493 Call 0x3EB2AE0
	494 Move X21, X31
	495 Move X0, X22
	496 Call 0x1C17F18
	497 Move [X31+8], X1
	498 Move [X31+16], X0
	499 Move [X31+16], X0
	500 Move W8, [X31+28]
	501 Compare W8, 0
	502 JumpIfEqual {506}
	503 Move X0, X20
	504 Move X1, X31
	505 Call Monitor.Exit, X0
	506 Compare X21, 0
	507 JumpIfEqual {547}
	508 Move X0, X21
	509 Call 0x1C17F18
	510 Move X22, X1
	511 NotImplemented "Instruction CMP not yet implemented."
	512 Call 0x3EB2AD0
	513 Move X19, [X0]
	514 Call 0x3EB2AE0
	515 Move [X31+16], X0
	516 Move X19, X31
	517 Move [X31+16], X0
	518 Move X1, [X23]
	519 Move X0, X20
	520 Call 0x1C17E00
	521 Move X20, X0
	522 Compare X0, 0
	523 JumpIfEqual {545}
	524 Move X8, [X20]
	525 Move X1, [X23]
	526 NotImplemented "Instruction LDRH not yet implemented."
	527 Compare X9, 0
	528 JumpIfEqual {535}
	529 Move X10, [X8+176]
	530 Add X10, X10, 8
	531 NotImplemented "Instruction LDUR not yet implemented."
	532 NotImplemented "Instruction CMP not yet implemented."
	533 Subtract X9, X9, 1
	534 Add X10, X10, 16
	535 Move X0, X20
	536 Move W2, W31
	537 Call 0x1C5D788
	538 NotImplemented "Instruction LDRSW not yet implemented."
	539 Add X8, X8, X9
	540 Add X0, X8, 312
	541 Move X8, [X0]
	542 Move X1, [X0+8]
	543 Move X0, X20
	544 NotImplemented "Instruction BLR not yet implemented."
	545 Compare X19, 0
	546 JumpIfNotEqual {549}
	547 Move X0, [X31+16]
	548 Call 0x1D2D690
	549 Move X0, X19
	550 Call 0x1C17F18
	551 Call 0x1991590

Method: System.Void WriteLine(System.String message, System.String category)

Disassembly:
	0x0364A04C ADRP X0, 0xAB0000
	0x0364A050 LDR X0, [X0 + 0xC10]
	0x0364A054 BL 0x1C16CF4
	0x0364A058 MOVZ W8, 0x1
	0x0364A05C STRB W8, [X21 + 0x5CC]
	0x0364A060 LDR X8, [X19]
	0x0364A064 MOVZ W1, 0x1
	0x0364A068 MOV X0, X19
	0x0364A06C LDP X9, X2, [X8 + 0x1B8]
	0x0364A070 BLR X9
	0x0364A074 LDR X0, [X20]
	0x0364A078 LDR W8, [X0 + 0xE0]
	0x0364A07C CBNZ W8, 0x364A084
	0x0364A080 BL 0x1C16DFC
	0x0364A084 MOV X0, X19
	0x0364A088 LDP X20, X19, [X31 + 0x10]
	0x0364A08C MOV X1, X31
	0x0364A090 LDP X30, X21, [X31], #0x20
	0x0364A094 B 0x33B3E9C
	0x0364A098 RET
	0x0364A09C RET
	0x0364A0A0 LDR X0, [X0 + 0x30]
	0x0364A0A4 RET
	0x0364A0A8 LDRB W0, [X0 + 0x20]
	0x0364A0AC RET
	0x0364A0B0 AND W8, W1, 0x1
	0x0364A0B4 STRB W8, [X0 + 0x20]
	0x0364A0B8 RET
	0x0364A0BC STP X30, X23, [X31 - 0x30]!
	0x0364A0C0 STP X22, X21, [X31 + 0x10]
	0x0364A0C4 STP X20, X19, [X31 + 0x20]
	0x0364A0C8 ADRP X20, 0xD96000
	0x0364A0CC LDRB W8, [X20 + 0x5CD]
	0x0364A0D0 MOV X19, X0
	0x0364A0D4 TBNZ X8, 0x0, 0x364A0F8
	0x0364A0D8 ADRP X0, 0xAA9000
	0x0364A0DC LDR X0, [X0 + 0xDD8]
	0x0364A0E0 BL 0x1C16CF4
	0x0364A0E4 ADRP X0, 0xAD2000
	0x0364A0E8 LDR X0, [X0 + 0xC0]
	0x0364A0EC BL 0x1C16CF4
	0x0364A0F0 MOVZ W8, 0x1
	0x0364A0F4 STRB W8, [X20 + 0x5CD]
	0x0364A0F8 LDR W8, [X19 + 0x18]
	0x0364A0FC STRB W31, [X19 + 0x20]
	0x0364A100 CMP W8, 0x1
	0x0364A104 B.LT 0x364A180
	0x0364A108 ADRP X21, 0xAD2000
	0x0364A10C ADRP X22, 0xAA9000
	0x0364A110 LDR X21, [X21 + 0xC0]
	0x0364A114 LDR X22, [X22 + 0xDD8]
	0x0364A118 MOV W20, W31
	0x0364A11C LDR W8, [X19 + 0x1C]
	0x0364A120 CMP W8, 0x4
	0x0364A124 B.NE 0x364A140
	0x0364A128 LDR X8, [X19]
	0x0364A12C LDR X1, [X21]
	0x0364A130 MOV X0, X19
	0x0364A134 LDP X9, X2, [X8 + 0x1D8]
	0x0364A138 BLR X9
	0x0364A13C B 0x364A170
	0x0364A140 CMP W8, 0x1
	0x0364A144 B.LT 0x364A170
	0x0364A148 MOV W23, W31
	0x0364A14C LDR X8, [X19]
	0x0364A150 LDR X1, [X22]
	0x0364A154 MOV X0, X19
	0x0364A158 LDP X9, X2, [X8 + 0x1D8]
	0x0364A15C BLR X9
	0x0364A160 LDR W8, [X19 + 0x1C]
	0x0364A164 ADD W23, W23, 0x1
	0x0364A168 CMP W23, W8
	0x0364A16C B.LT 0x364A14C
	0x0364A170 LDR W8, [X19 + 0x18]
	0x0364A174 ADD W20, W20, 0x1
	0x0364A178 CMP W20, W8
	0x0364A17C B.LT 0x364A11C
	0x0364A180 LDP X20, X19, [X31 + 0x20]
	0x0364A184 LDP X22, X21, [X31 + 0x10]
	0x0364A188 LDP X30, X23, [X31], #0x30
	0x0364A18C RET
	0x0364A190 SUB X31, X31, 0x40
	0x0364A194 STR X30, [X31 + 0x10]
	0x0364A198 STP X22, X21, [X31 + 0x20]
	0x0364A19C STP X20, X19, [X31 + 0x30]
	0x0364A1A0 ADRP X22, 0xD96000
	0x0364A1A4 LDRB W8, [X22 + 0x5CE]
	0x0364A1A8 MOV X21, X2
	0x0364A1AC MOV X20, X1
	0x0364A1B0 MOV X19, X0
	0x0364A1B4 TBNZ X8, 0x0, 0x364A1E4
	0x0364A1B8 ADRP X0, 0xAAB000
	0x0364A1BC LDR X0, [X0 + 0x278]
	0x0364A1C0 BL 0x1C16CF4
	0x0364A1C4 ADRP X0, 0xAAD000
	0x0364A1C8 LDR X0, [X0 + 0x928]
	0x0364A1CC BL 0x1C16CF4
	0x0364A1D0 ADRP X0, 0xAA9000
	0x0364A1D4 LDR X0, [X0 + 0x988]
	0x0364A1D8 BL 0x1C16CF4
	0x0364A1DC MOVZ W8, 0x1
	0x0364A1E0 STRB W8, [X22 + 0x5CE]
	0x0364A1E4 LDR X0, [X19 + 0x30]
	0x0364A1E8 CBZ X0, 0x364A224
	0x0364A1EC ADRP X9, 0xAA9000
	0x0364A1F0 LDR X8, [X0]
	0x0364A1F4 LDR X9, [X9 + 0x988]
	0x0364A1F8 MOVZ W3, 0x10
	0x0364A1FC MOV X1, X31
	0x0364A200 MOV W4, W31
	0x0364A204 LDR X2, [X9]
	0x0364A208 LDP X9, X8, [X8 + 0x178]
	0x0364A20C MOV X5, X20
	0x0364A210 MOV X6, X31
	0x0364A214 MOV X7, X31
	0x0364A218 STP X31, X8, [X31]
	0x0364A21C BLR X9
	0x0364A220 TBZ X0, 0x0, 0x364A26C
	0x0364A224 CBZ X21, 0x364A280
	0x0364A228 ADRP X8, 0xAAD000
	0x0364A22C LDR X8, [X8 + 0x928]
	0x0364A230 LDR X1, [X8]
	0x0364A234 CBNZ X20, 0x364A24C
	0x0364A238 ADRP X8, 0xAAB000
	0x0364A23C LDR X8, [X8 + 0x278]
	0x0364A240 LDR X8, [X8]
	0x0364A244 LDR X8, [X8 + 0xB8]
	0x0364A248 LDR X20, [X8]
	0x0364A24C MOV X0, X21
	0x0364A250 MOV X2, X20
	0x0364A254 MOV X3, X31
	0x0364A258 BL 0x32274B8
	0x0364A25C LDR X8, [X19]
	0x0364A260 MOV X1, X0
	0x0364A264 MOV X0, X19
	0x0364A268 B 0x364A28C
	0x0364A26C LDP X20, X19, [X31 + 0x30]
	0x0364A270 LDP X22, X21, [X31 + 0x20]
	0x0364A274 LDR X30, [X31 + 0x10]
	0x0364A278 ADD X31, X31, 0x40
	0x0364A27C RET
	0x0364A280 LDR X8, [X19]
	0x0364A284 MOV X0, X19
	0x0364A288 MOV X1, X20
	0x0364A28C LDP X3, X2, [X8 + 0x1F8]
	0x0364A290 LDP X20, X19, [X31 + 0x30]
	0x0364A294 LDP X22, X21, [X31 + 0x20]
	0x0364A298 LDR X30, [X31 + 0x10]
	0x0364A29C ADD X31, X31, 0x40
	0x0364A2A0 BR X3
	0x0364A2A4 STR X30, [X31 - 0x10]!
	0x0364A2A8 LDR X0, [X0 + 0x10]
	0x0364A2AC CBZ X0, 0x364A2C4
	0x0364A2B0 LDR X8, [X0]
	0x0364A2B4 LDR X2, [X8 + 0x298]
	0x0364A2B8 LDR X1, [X8 + 0x2A0]
	0x0364A2BC LDR X30, [X31], #0x10
	0x0364A2C0 BR X2
	0x0364A2C4 BL 0x1C16F20
	0x0364A2C8 STP X30, X21, [X31 - 0x20]!
	0x0364A2CC STP X20, X19, [X31 + 0x10]
	0x0364A2D0 ADRP X20, 0xD96000
	0x0364A2D4 LDRB W8, [X20 + 0x5D2]
	0x0364A2D8 MOV X19, X1
	0x0364A2DC TBNZ X8, 0x0, 0x364A2F4
	0x0364A2E0 ADRP X0, 0xAF2000
	0x0364A2E4 LDR X0, [X0 + 0x630]
	0x0364A2E8 BL 0x1C16CF4
	0x0364A2EC MOVZ W8, 0x1
	0x0364A2F0 STRB W8, [X20 + 0x5D2]
	0x0364A2F4 CBZ X19, 0x364A370
	0x0364A2F8 ADRP X20, 0xAF2000
	0x0364A2FC LDR X20, [X20 + 0x630]
	0x0364A300 LDR X0, [X20]
	0x0364A304 LDR W8, [X0 + 0xE0]
	0x0364A308 CBNZ W8, 0x364A310
	0x0364A30C BL 0x1C16DFC
	0x0364A310 BL 0x3649EE8
	0x0364A314 MOV W1, W0
	0x0364A318 MOV X0, X19
	0x0364A31C BL 0x3649BF4
	0x0364A320 ADRP X21, 0xD96000
	0x0364A324 LDRB W8, [X21 + 0x6B9]
	0x0364A328 CBNZ W8, 0x364A340
	0x0364A32C ADRP X0, 0xAF2000
	0x0364A330 LDR X0, [X0 + 0x630]
	0x0364A334 BL 0x1C16CF4
	0x0364A338 MOVZ W8, 0x1
	0x0364A33C STRB W8, [X21 + 0x6B9]
	0x0364A340 LDR X0, [X20]
	0x0364A344 LDR W8, [X0 + 0xE0]
	0x0364A348 CBNZ W8, 0x364A354
	0x0364A34C BL 0x1C16DFC
	0x0364A350 LDR X0, [X20]
	0x0364A354 BL 0x1C16D0C
	0x0364A358 LDR W8, [X0]
	0x0364A35C BIC W8, W8, W8, 0x1F
	0x0364A360 STR W8, [X19 + 0x18]
	0x0364A364 LDP X20, X19, [X31 + 0x10]
	0x0364A368 LDP X30, X21, [X31], #0x20
	0x0364A36C RET
	0x0364A370 ADRP X0, 0xAAE000
	0x0364A374 LDR X0, [X0 + 0x528]
	0x0364A378 BL 0x1C16D08
	0x0364A37C BL 0x1C16F10
	0x0364A380 MOV X19, X0
	0x0364A384 ADRP X0, 0xAF2000
	0x0364A388 LDR X0, [X0 + 0x668]
	0x0364A38C BL 0x1C16D08
	0x0364A390 MOV X1, X0
	0x0364A394 MOV X0, X19
	0x0364A398 MOV X2, X31
	0x0364A39C BL 0x330E100
	0x0364A3A0 ADRP X0, 0xAF2000
	0x0364A3A4 LDR X0, [X0 + 0x670]
	0x0364A3A8 BL 0x1C16D08
	0x0364A3AC MOV X1, X0
	0x0364A3B0 MOV X0, X19
	0x0364A3B4 BL 0x1C16DEC
	0x0364A3B8 STP X30, X21, [X31 - 0x20]!
	0x0364A3BC STP X20, X19, [X31 + 0x10]
	0x0364A3C0 ADRP X20, 0xD96000
	0x0364A3C4 ADRP X21, 0xAD6000
	0x0364A3C8 LDRB W8, [X20 + 0x5D1]
	0x0364A3CC LDR X21, [X21 + 0xBA0]
	0x0364A3D0 MOV X19, X0
	0x0364A3D4 TBNZ X8, 0x0, 0x364A3EC
	0x0364A3D8 ADRP X0, 0xAD6000
	0x0364A3DC LDR X0, [X0 + 0xBA0]
	0x0364A3E0 BL 0x1C16CF4
	0x0364A3E4 MOVZ W8, 0x1
	0x0364A3E8 STRB W8, [X20 + 0x5D1]
	0x0364A3EC LDR X0, [X21]
	0x0364A3F0 BL 0x1C16F10
	0x0364A3F4 MOV X1, X31
	0x0364A3F8 MOV X20, X0
	0x0364A3FC BL 0x3351F5C
	0x0364A400 STR X20, [X19 + 0x10]
	0x0364A404 LDP X20, X19, [X31 + 0x10]
	0x0364A408 LDP X30, X21, [X31], #0x20
	0x0364A40C RET
	0x0364A410 STR X30, [X31 - 0x30]!
	0x0364A414 STP X22, X21, [X31 + 0x10]
	0x0364A418 STP X20, X19, [X31 + 0x20]
	0x0364A41C ADRP X22, 0xD96000
	0x0364A420 ADRP X19, 0xAF2000
	0x0364A424 LDRB W8, [X22 + 0x5D3]
	0x0364A428 LDR X19, [X19 + 0x630]
	0x0364A42C MOV W20, W1
	0x0364A430 MOV X21, X0
	0x0364A434 TBNZ X8, 0x0, 0x364A44C
	0x0364A438 ADRP X0, 0xAF2000
	0x0364A43C LDR X0, [X0 + 0x630]
	0x0364A440 BL 0x1C16CF4
	0x0364A444 MOVZ W8, 0x1
	0x0364A448 STRB W8, [X22 + 0x5D3]
	0x0364A44C LDR X0, [X19]
	0x0364A450 LDR W8, [X0 + 0xE0]
	0x0364A454 CBNZ W8, 0x364A460
	0x0364A458 BL 0x1C16DFC
	0x0364A45C LDR X0, [X19]
	0x0364A460 LDR X8, [X0 + 0xB8]
	0x0364A464 LDR X19, [X8 + 0x18]
	0x0364A468 STRB W31, [X31 + 0xC]
	0x0364A46C ADD X1, X31, 0xC
	0x0364A470 MOV X0, X19
	0x0364A474 MOV X2, X31
	0x0364A478 BL 0x33DE64C
	0x0364A47C LDR X0, [X21 + 0x10]
	0x0364A480 CBZ X0, 0x364A4CC
	0x0364A484 LDR X8, [X0]
	0x0364A488 LDR X9, [X8 + 0x3D8]
	0x0364A48C LDR X2, [X8 + 0x3E0]
	0x0364A490 MOV W1, W20
	0x0364A494 BLR X9
	0x0364A498 MOV X20, X31
	0x0364A49C LDRB W8, [X31 + 0xC]
	0x0364A4A0 CBZ W8, 0x364A4B0
	0x0364A4A4 MOV X0, X19
	0x0364A4A8 MOV X1, X31
	0x0364A4AC BL 0x33E14E4
	0x0364A4B0 CBNZ X20, 0x364A4C4
	0x0364A4B4 LDP X20, X19, [X31 + 0x20]
	0x0364A4B8 LDP X22, X21, [X31 + 0x10]
	0x0364A4BC LDR X30, [X31], #0x30
	0x0364A4C0 RET
	0x0364A4C4 MOV X0, X20
	0x0364A4C8 BL 0x1C16F18
	0x0364A4CC BL 0x1C16F20
	0x0364A4D0 B 0x364A4D4
	0x0364A4D4 MOV X21, X0
	0x0364A4D8 CMP W1, 0x1
	0x0364A4DC B.NE 0x364A4F4
	0x0364A4E0 MOV X0, X21
	0x0364A4E4 BL 0x3EB1AD0
	0x0364A4E8 LDR X20, [X0]
	0x0364A4EC BL 0x3EB1AE0
	0x0364A4F0 B 0x364A49C
	0x0364A4F4 MOV X20, X31
	0x0364A4F8 B 0x364A500
	0x0364A4FC MOV X21, X0
	0x0364A500 LDRB W8, [X31 + 0xC]
	0x0364A504 CBZ W8, 0x364A514
	0x0364A508 MOV X0, X19
	0x0364A50C MOV X1, X31
	0x0364A510 BL 0x33E14E4
	0x0364A514 CBNZ X20, 0x364A520
	0x0364A518 MOV X0, X21
	0x0364A51C BL 0x1D2C690
	0x0364A520 MOV X0, X20
	0x0364A524 BL 0x1C16F18
	0x0364A528 BL 0x1990590
	0x0364A52C STR X30, [X31 - 0x10]!
	0x0364A530 LDR X0, [X0 + 0x10]
	0x0364A534 CBZ X0, 0x364A54C
	0x0364A538 LDR X8, [X0]
	0x0364A53C LDR X3, [X8 + 0x2E8]
	0x0364A540 LDR X2, [X8 + 0x2F0]
	0x0364A544 LDR X30, [X31], #0x10
	0x0364A548 BR X3
	0x0364A54C BL 0x1C16F20
	0x0364A550 STR X30, [X31 - 0x30]!
	0x0364A554 STP X22, X21, [X31 + 0x10]
	0x0364A558 STP X20, X19, [X31 + 0x20]
	0x0364A55C ADRP X22, 0xD96000
	0x0364A560 LDRB W8, [X22 + 0x5D4]
	0x0364A564 MOV X19, X2
	0x0364A568 MOV W20, W1
	0x0364A56C MOV X21, X0
	0x0364A570 TBNZ X8, 0x0, 0x364A588
	0x0364A574 ADRP X0, 0xAF2000
	0x0364A578 LDR X0, [X0 + 0x638]
	0x0364A57C BL 0x1C16CF4
	0x0364A580 MOVZ W8, 0x1
	0x0364A584 STRB W8, [X22 + 0x5D4]
	0x0364A588 CBZ X19, 0x364A5F4
	0x0364A58C ADRP X8, 0xAF2000
	0x0364A590 LDR X8, [X8 + 0x638]
	0x0364A594 LDR X9, [X19]
	0x0364A598 LDR X8, [X8]
	0x0364A59C LDRB W11, [X9 + 0x130]
	0x0364A5A0 LDRB W10, [X8 + 0x130]
	0x0364A5A4 CMP W11, W10
	0x0364A5A8 B.CC 0x364A5F4
	0x0364A5AC LDR X9, [X9 + 0xC8]
	0x0364A5B0 ADD X9, X9, X10, 0x3, LSL
	0x0364A5B4 LDUR X9, [X9 - 0x8]
	0x0364A5B8 CMP X9, X8
	0x0364A5BC B.NE 0x364A5F4
	0x0364A5C0 MOV X1, X19
	0x0364A5C4 BL 0x364A2C8
	0x0364A5C8 LDR X0, [X21 + 0x10]
	0x0364A5CC CBZ X0, 0x364A658
	0x0364A5D0 LDR X8, [X0]
	0x0364A5D4 MOV W1, W20
	0x0364A5D8 MOV X2, X19
	0x0364A5DC LDP X20, X19, [X31 + 0x20]
	0x0364A5E0 LDR X4, [X8 + 0x2F8]
	0x0364A5E4 LDR X3, [X8 + 0x300]
	0x0364A5E8 LDP X22, X21, [X31 + 0x10]
	0x0364A5EC LDR X30, [X31], #0x30
	0x0364A5F0 BR X4
	0x0364A5F4 ADRP X0, 0xAF2000
	0x0364A5F8 LDR X0, [X0 + 0x678]
	0x0364A5FC BL 0x1C16D08
	0x0364A600 MOV X1, X31
	0x0364A604 BL 0x320A1E4
	0x0364A608 MOV X19, X0
	0x0364A60C ADRP X0, 0xAB1000
	0x0364A610 LDR X0, [X0 + 0x578]
	0x0364A614 BL 0x1C16D08
	0x0364A618 BL 0x1C16F10
	0x0364A61C MOV X20, X0
	0x0364A620 ADRP X0, 0xAB3000
	0x0364A624 LDR X0, [X0 + 0xEC8]
	0x0364A628 BL 0x1C16D08
	0x0364A62C MOV X2, X0
	0x0364A630 MOV X0, X20
	0x0364A634 MOV X1, X19
	0x0364A638 MOV X3, X31
	0x0364A63C BL 0x330E16C
	0x0364A640 ADRP X0, 0xAF2000
	0x0364A644 LDR X0, [X0 + 0x680]
	0x0364A648 BL 0x1C16D08
	0x0364A64C MOV X1, X0
	0x0364A650 MOV X0, X20
	0x0364A654 BL 0x1C16DEC
	0x0364A658 BL 0x1C16F20
	0x0364A65C MOV W0, W31
	0x0364A660 RET
	0x0364A664 MOV W0, W31
	0x0364A668 RET
	0x0364A66C SUB X31, X31, 0x30
	0x0364A670 STP X30, X21, [X31 + 0x10]
	0x0364A674 STP X20, X19, [X31 + 0x20]
	0x0364A678 ADRP X19, 0xD96000
	0x0364A67C LDRB W8, [X19 + 0x5D5]
	0x0364A680 MOV X20, X1
	0x0364A684 MOV X21, X0
	0x0364A688 TBNZ X8, 0x0, 0x364A6AC
	0x0364A68C ADRP X0, 0xAF2000
	0x0364A690 LDR X0, [X0 + 0x630]
	0x0364A694 BL 0x1C16CF4
	0x0364A698 ADRP X0, 0xAF2000
	0x0364A69C LDR X0, [X0 + 0x638]
	0x0364A6A0 BL 0x1C16CF4
	0x0364A6A4 MOVZ W8, 0x1
	0x0364A6A8 STRB W8, [X19 + 0x5D5]
	0x0364A6AC CBZ X20, 0x364A774
	0x0364A6B0 ADRP X8, 0xAF2000
	0x0364A6B4 LDR X8, [X8 + 0x638]
	0x0364A6B8 LDR X9, [X20]
	0x0364A6BC LDR X8, [X8]
	0x0364A6C0 LDRB W11, [X9 + 0x130]
	0x0364A6C4 LDRB W10, [X8 + 0x130]
	0x0364A6C8 CMP W11, W10
	0x0364A6CC B.CC 0x364A774
	0x0364A6D0 LDR X9, [X9 + 0xC8]
	0x0364A6D4 ADD X9, X9, X10, 0x3, LSL
	0x0364A6D8 LDUR X9, [X9 - 0x8]
	0x0364A6DC CMP X9, X8
	0x0364A6E0 B.NE 0x364A774
	0x0364A6E4 ADRP X19, 0xAF2000
	0x0364A6E8 LDR X19, [X19 + 0x630]
	0x0364A6EC MOV X1, X20
	0x0364A6F0 BL 0x364A2C8
	0x0364A6F4 LDR X0, [X19]
	0x0364A6F8 LDR W8, [X0 + 0xE0]
	0x0364A6FC CBNZ W8, 0x364A708
	0x0364A700 BL 0x1C16DFC
	0x0364A704 LDR X0, [X19]
	0x0364A708 LDR X8, [X0 + 0xB8]
	0x0364A70C LDR X19, [X8 + 0x18]
	0x0364A710 STRB W31, [X31 + 0xC]
	0x0364A714 ADD X1, X31, 0xC
	0x0364A718 MOV X0, X19
	0x0364A71C MOV X2, X31
	0x0364A720 BL 0x33DE64C
	0x0364A724 LDR X0, [X21 + 0x10]
	0x0364A728 CBZ X0, 0x364A7E0
	0x0364A72C LDR X8, [X0]
	0x0364A730 LDR X9, [X8 + 0x308]
	0x0364A734 LDR X2, [X8 + 0x310]
	0x0364A738 MOV X1, X20
	0x0364A73C BLR X9
	0x0364A740 MOV W21, W0
	0x0364A744 MOV X20, X31
	0x0364A748 LDRB W8, [X31 + 0xC]
	0x0364A74C CBZ W8, 0x364A75C
	0x0364A750 MOV X0, X19
	0x0364A754 MOV X1, X31
	0x0364A758 BL 0x33E14E4
	0x0364A75C CBNZ X20, 0x364A7D8
	0x0364A760 MOV W0, W21
	0x0364A764 LDP X20, X19, [X31 + 0x20]
	0x0364A768 LDP X30, X21, [X31 + 0x10]
	0x0364A76C ADD X31, X31, 0x30
	0x0364A770 RET
	0x0364A774 ADRP X0, 0xAF2000
	0x0364A778 LDR X0, [X0 + 0x678]
	0x0364A77C BL 0x1C16D08
	0x0364A780 MOV X1, X31
	0x0364A784 BL 0x320A1E4
	0x0364A788 MOV X19, X0
	0x0364A78C ADRP X0, 0xAB1000
	0x0364A790 LDR X0, [X0 + 0x578]
	0x0364A794 BL 0x1C16D08
	0x0364A798 BL 0x1C16F10
	0x0364A79C MOV X20, X0
	0x0364A7A0 ADRP X0, 0xAB3000
	0x0364A7A4 LDR X0, [X0 + 0xEC8]
	0x0364A7A8 BL 0x1C16D08
	0x0364A7AC MOV X2, X0
	0x0364A7B0 MOV X0, X20
	0x0364A7B4 MOV X1, X19
	0x0364A7B8 MOV X3, X31
	0x0364A7BC BL 0x330E16C
	0x0364A7C0 ADRP X0, 0xAF2000
	0x0364A7C4 LDR X0, [X0 + 0x688]
	0x0364A7C8 BL 0x1C16D08
	0x0364A7CC MOV X1, X0
	0x0364A7D0 MOV X0, X20
	0x0364A7D4 BL 0x1C16DEC
	0x0364A7D8 MOV X0, X20
	0x0364A7DC BL 0x1C16F18
	0x0364A7E0 BL 0x1C16F20
	0x0364A7E4 B 0x364A7EC
	0x0364A7E8 B 0x364A7EC
	0x0364A7EC MOV X21, X0
	0x0364A7F0 CMP W1, 0x1
	0x0364A7F4 B.NE 0x364A810
	0x0364A7F8 MOV X0, X21
	0x0364A7FC BL 0x3EB1AD0
	0x0364A800 LDR X20, [X0]
	0x0364A804 BL 0x3EB1AE0
	0x0364A808 MOV W21, W31
	0x0364A80C B 0x364A748
	0x0364A810 MOV X20, X31
	0x0364A814 B 0x364A81C
	0x0364A818 MOV X21, X0
	0x0364A81C LDRB W8, [X31 + 0xC]
	0x0364A820 CBZ W8, 0x364A830
	0x0364A824 MOV X0, X19
	0x0364A828 MOV X1, X31
	0x0364A82C BL 0x33E14E4
	0x0364A830 CBNZ X20, 0x364A83C
	0x0364A834 MOV X0, X21
	0x0364A838 BL 0x1D2C690
	0x0364A83C MOV X0, X20
	0x0364A840 BL 0x1C16F18
	0x0364A844 BL 0x1990590
	0x0364A848 STR X30, [X31 - 0x10]!
	0x0364A84C LDR X0, [X0 + 0x10]
	0x0364A850 CBZ X0, 0x364A868
	0x0364A854 LDR X8, [X0]
	0x0364A858 LDR X3, [X8 + 0x348]
	0x0364A85C LDR X2, [X8 + 0x350]
	0x0364A860 LDR X30, [X31], #0x10
	0x0364A864 BR X3
	0x0364A868 BL 0x1C16F20
	0x0364A86C STR X30, [X31 - 0x10]!
	0x0364A870 LDR X0, [X0 + 0x10]
	0x0364A874 CBZ X0, 0x364A88C
	0x0364A878 LDR X8, [X0]
	0x0364A87C LDR X3, [X8 + 0x398]
	0x0364A880 LDR X2, [X8 + 0x3A0]
	0x0364A884 LDR X30, [X31], #0x10
	0x0364A888 BR X3
	0x0364A88C BL 0x1C16F20
	0x0364A890 STR X30, [X31 - 0x30]!

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X30
	003 Move [X31+32], X28
	004 Move [X31+40], X27
	005 Move [X31+48], X26
	006 Move [X31+56], X25
	007 Move [X31+64], X24
	008 Move [X31+72], X23
	009 Move [X31+80], X22
	010 Move [X31+88], X21
	011 Move [X31+96], X20
	012 Move [X31+104], X19
	013 Move X21, 0xD97000
	014 Move X25, 0xAF3000
	015 Move W8, [X21+1482]
	016 Move X25, [X25+1584]
	017 Move X19, X1
	018 Move X20, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {37}
	023 Move X0, 0xAAA000
	024 Move X0, [X0+3584]
	025 Call 0x1C17CF4
	026 Move X0, 0xAAA000
	027 Move X0, [X0+3608]
	028 Call 0x1C17CF4
	029 Move X0, 0xAF3000
	030 Move X0, [X0+1584]
	031 Call 0x1C17CF4
	032 Move X0, 0xAF3000
	033 Move X0, [X0+1592]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X21+1482], W8
	037 Move X0, [X25]
	038 Move [X31+28], W31
	039 Move W8, [X0+224]
	040 Compare W8, 0
	041 JumpIfNotEqual {43}
	042 Call 0x1C17DFC
	043 Move X24, 0xAAA000
	044 Move X24, [X24+3584]
	045 Call TraceInternal.get_UseGlobalLock
	046 Move TEMP, X0
	047 And TEMP, TEMP, 1
	048 Compare TEMP, 1
	049 JumpIfNotEqual {215}
	050 Move X0, [X25]
	051 Move W8, [X0+224]
	052 Compare W8, 0
	053 JumpIfNotEqual {56}
	054 Call 0x1C17DFC
	055 Move X0, [X25]
	056 Move X8, [X0+184]
	057 Move X21, [X8+24]
	058 Move [X31+28], W31
	059 Add X1, X31, 28
	060 Move X0, X21
	061 Move X2, X31
	062 Call Monitor.Enter, X0, X1
	063 Move X0, [X25]
	064 Move W8, [X0+224]
	065 Compare W8, 0
	066 JumpIfNotEqual {68}
	067 Call 0x1C17DFC
	068 Call TraceInternal.get_Listeners
	069 Compare X0, 0
	070 JumpIfEqual {447}
	071 Move X0, [X0+16]
	072 Compare X0, 0
	073 JumpIfEqual {448}
	074 Move X8, [X0]
	075 Move X1, [X8+912]
	076 Move X9, [X8+904]
	077 NotImplemented "Instruction BLR not yet implemented."
	078 Move X22, X0
	079 Compare X0, 0
	080 JumpIfEqual {449}
	081 Move X26, 0xAAA000
	082 Move X27, 0xAF3000
	083 Move X26, [X26+3608]
	084 Move X27, [X27+1592]
	085 Move X8, [X22]
	086 Move X1, [X26]
	087 NotImplemented "Instruction LDRH not yet implemented."
	088 Compare X9, 0
	089 JumpIfEqual {96}
	090 Move X10, [X8+176]
	091 Add X10, X10, 8
	092 NotImplemented "Instruction LDUR not yet implemented."
	093 NotImplemented "Instruction CMP not yet implemented."
	094 Subtract X9, X9, 1
	095 Add X10, X10, 16
	096 Move X0, X22
	097 Move W2, W31
	098 Call 0x1C5D788
	099 NotImplemented "Instruction LDRSW not yet implemented."
	100 Add X8, X8, X9
	101 Add X0, X8, 312
	102 Move X8, [X0]
	103 Move X1, [X0+8]
	104 Move X0, X22
	105 NotImplemented "Instruction BLR not yet implemented."
	106 Move TEMP, X0
	107 And TEMP, TEMP, 1
	108 Compare TEMP, 1
	109 JumpIfNotEqual {166}
	110 Move X8, [X22]
	111 Move X1, [X26]
	112 NotImplemented "Instruction LDRH not yet implemented."
	113 Compare X9, 0
	114 JumpIfEqual {121}
	115 Move X10, [X8+176]
	116 Add X10, X10, 8
	117 NotImplemented "Instruction LDUR not yet implemented."
	118 NotImplemented "Instruction CMP not yet implemented."
	119 Subtract X9, X9, 1
	120 Add X10, X10, 16
	121 Move W2, 1
	122 Move X0, X22
	123 Call 0x1C5D788
	124 Move W9, [X10]
	125 Add W9, W9, 1
	126 Add X8, X8, W9
	127 Add X0, X8, 312
	128 Move X8, [X0]
	129 Move X1, [X0+8]
	130 Move X0, X22
	131 NotImplemented "Instruction BLR not yet implemented."
	132 Move X23, X0
	133 Compare X0, 0
	134 JumpIfEqual {425}
	135 Move X8, [X23]
	136 Move X1, [X27]
	137 Move W10, [X8+304]
	138 Move W9, [X1+304]
	139 NotImplemented "Instruction CMP not yet implemented."
	140 Move X8, [X8+200]
	141 Add X8, X8, X9
	142 NotImplemented "Instruction LDUR not yet implemented."
	143 NotImplemented "Instruction CMP not yet implemented."
	144 Move X8, [X23]
	145 Move X9, [X8+520]
	146 Move X3, [X8+528]
	147 Move X0, X23
	148 Move X1, X20
	149 Move X2, X19
	150 NotImplemented "Instruction BLR not yet implemented."
	151 Move X0, [X25]
	152 Move W8, [X0+224]
	153 Compare W8, 0
	154 JumpIfNotEqual {156}
	155 Call 0x1C17DFC
	156 Call TraceInternal.get_AutoFlush
	157 Move TEMP, X0
	158 And TEMP, TEMP, 1
	159 Compare TEMP, 1
	160 JumpIfNotEqual {85}
	161 Move X8, [X23]
	162 Move X9, [X8+456]
	163 Move X1, [X8+464]
	164 Move X0, X23
	165 NotImplemented "Instruction BLR not yet implemented."
	166 Move X23, X31
	167 Move W27, W31
	168 Move W26, 5
	169 Move X1, [X24]
	170 Move X0, X22
	171 Call 0x1C17E00
	172 Move X22, X0
	173 Compare X0, 0
	174 JumpIfEqual {196}
	175 Move X8, [X22]
	176 Move X1, [X24]
	177 NotImplemented "Instruction LDRH not yet implemented."
	178 Compare X9, 0
	179 JumpIfEqual {186}
	180 Move X10, [X8+176]
	181 Add X10, X10, 8
	182 NotImplemented "Instruction LDUR not yet implemented."
	183 NotImplemented "Instruction CMP not yet implemented."
	184 Subtract X9, X9, 1
	185 Add X10, X10, 16
	186 Move X0, X22
	187 Move W2, W31
	188 Call 0x1C5D788
	189 NotImplemented "Instruction LDRSW not yet implemented."
	190 Add X8, X8, X9
	191 Add X0, X8, 312
	192 Move X8, [X0]
	193 Move X1, [X0+8]
	194 Move X0, X22
	195 NotImplemented "Instruction BLR not yet implemented."
	196 Compare X23, 0
	197 JumpIfNotEqual {450}
	198 Move X22, X31
	199 Move TEMP, X27
	200 And TEMP, TEMP, 1
	201 Compare TEMP, 1
	202 JumpIfNotEqual {205}
	203 Move W26, W31
	204 Move X23, X22
	205 Move W8, [X31+28]
	206 Compare W8, 0
	207 JumpIfEqual {211}
	208 Move X0, X21
	209 Move X1, X31
	210 Call Monitor.Exit, X0
	211 Compare X23, 0
	212 JumpIfNotEqual {445}
	213 Compare W26, 0
	214 JumpIfNotEqual {407}
	215 Move X0, [X25]
	216 Move W8, [X0+224]
	217 Compare W8, 0
	218 JumpIfNotEqual {220}
	219 Call 0x1C17DFC
	220 Call TraceInternal.get_Listeners
	221 Compare X0, 0
	222 JumpIfEqual {428}
	223 Move X0, [X0+16]
	224 Compare X0, 0
	225 JumpIfEqual {428}
	226 Move X8, [X0]
	227 Move X9, [X8+904]
	228 Move X1, [X8+912]
	229 NotImplemented "Instruction BLR not yet implemented."
	230 Move X21, X0
	231 Compare X0, 0
	232 JumpIfEqual {442}
	233 Move X26, 0xAAA000
	234 Move X27, 0xAF3000
	235 Move X26, [X26+3608]
	236 Move X27, [X27+1592]
	237 Move X8, [X21]
	238 Move X1, [X26]
	239 NotImplemented "Instruction LDRH not yet implemented."
	240 Compare X9, 0
	241 JumpIfEqual {248}
	242 Move X10, [X8+176]
	243 Add X10, X10, 8
	244 NotImplemented "Instruction LDUR not yet implemented."
	245 NotImplemented "Instruction CMP not yet implemented."
	246 Subtract X9, X9, 1
	247 Add X10, X10, 16
	248 Move X0, X21
	249 Move W2, W31
	250 Call 0x1C5D788
	251 NotImplemented "Instruction LDRSW not yet implemented."
	252 Add X8, X8, X9
	253 Add X0, X8, 312
	254 Move X8, [X0]
	255 Move X1, [X0+8]
	256 Move X0, X21
	257 NotImplemented "Instruction BLR not yet implemented."
	258 Move TEMP, X0
	259 And TEMP, TEMP, 1
	260 Compare TEMP, 1
	261 JumpIfNotEqual {377}
	262 Move X8, [X21]
	263 Move X1, [X26]
	264 NotImplemented "Instruction LDRH not yet implemented."
	265 Compare X9, 0
	266 JumpIfEqual {273}
	267 Move X10, [X8+176]
	268 Add X10, X10, 8
	269 NotImplemented "Instruction LDUR not yet implemented."
	270 NotImplemented "Instruction CMP not yet implemented."
	271 Subtract X9, X9, 1
	272 Add X10, X10, 16
	273 Move W2, 1
	274 Move X0, X21
	275 Call 0x1C5D788
	276 Move W9, [X10]
	277 Add W9, W9, 1
	278 Add X8, X8, W9
	279 Add X0, X8, 312
	280 Move X8, [X0]
	281 Move X1, [X0+8]
	282 Move X0, X21
	283 NotImplemented "Instruction BLR not yet implemented."
	284 Move X22, X0
	285 Compare X0, 0
	286 JumpIfEqual {424}
	287 Move X8, [X22]
	288 Move X1, [X27]
	289 Move W10, [X8+304]
	290 Move W9, [X1+304]
	291 NotImplemented "Instruction CMP not yet implemented."
	292 Move X8, [X8+200]
	293 Add X8, X8, X9
	294 NotImplemented "Instruction LDUR not yet implemented."
	295 NotImplemented "Instruction CMP not yet implemented."
	296 Move X8, [X22]
	297 Move X9, [X8+424]
	298 Move X1, [X8+432]
	299 Move X0, X22
	300 NotImplemented "Instruction BLR not yet implemented."
	301 Move TEMP, X0
	302 And TEMP, TEMP, 1
	303 Compare TEMP, 1
	304 JumpIfEqual {345}
	305 Move [X31+28], W31
	306 Add X1, X31, 28
	307 Move X0, X22
	308 Move X2, X31
	309 Call Monitor.Enter, X0, X1
	310 Move X8, [X22]
	311 Move X9, [X8+520]
	312 Move X3, [X8+528]
	313 Move X0, X22
	314 Move X1, X20
	315 Move X2, X19
	316 NotImplemented "Instruction BLR not yet implemented."
	317 Move X0, [X25]
	318 Move W8, [X0+224]
	319 Compare W8, 0
	320 JumpIfNotEqual {322}
	321 Call 0x1C17DFC
	322 Call TraceInternal.get_AutoFlush
	323 Move TEMP, X0
	324 And TEMP, TEMP, 1
	325 Compare TEMP, 1
	326 JumpIfNotEqual {332}
	327 Move X8, [X22]
	328 Move X9, [X8+456]
	329 Move X1, [X8+464]
	330 Move X0, X22
	331 NotImplemented "Instruction BLR not yet implemented."
	332 Move X23, X31
	333 Move W28, 6
	334 Move W8, [X31+28]
	335 Compare W8, 0
	336 JumpIfEqual {340}
	337 Move X0, X22
	338 Move X1, X31
	339 Call Monitor.Exit, X0
	340 Compare X23, 0
	341 JumpIfNotEqual {426}
	342 NotImplemented "Instruction CMP not yet implemented."
	343 Compare W28, 0
	344 JumpIfNotEqual {377}
	345 Move X8, [X22]
	346 Move X9, [X8+520]
	347 Move X3, [X8+528]
	348 Move X0, X22
	349 Move X1, X20
	350 Move X2, X19
	351 NotImplemented "Instruction BLR not yet implemented."
	352 Move X0, [X25]
	353 Move W8, [X0+224]
	354 Compare W8, 0
	355 JumpIfNotEqual {357}
	356 Call 0x1C17DFC
	357 Call TraceInternal.get_AutoFlush
	358 Move TEMP, X0
	359 And TEMP, TEMP, 1
	360 Compare TEMP, 1
	361 JumpIfNotEqual {237}
	362 Move X8, [X22]
	363 Move X9, [X8+456]
	364 Move X1, [X8+464]
	365 Move X0, X22
	366 NotImplemented "Instruction BLR not yet implemented."
	367 Move X23, X1
	368 NotImplemented "Instruction CMP not yet implemented."
	369 Move [X31+8], X0
	370 Move X0, [X31+8]
	371 Call 0x3EB2AD0
	372 Move X8, [X0]
	373 Move [X31], X8
	374 Call 0x3EB2AE0
	375 Move X23, [X31]
	376 Move W28, W31
	377 Move X19, X31
	378 Move X1, [X24]
	379 Move X0, X21
	380 Call 0x1C17E00
	381 Compare X0, 0
	382 JumpIfEqual {405}
	383 Move X8, [X0]
	384 Move X1, [X24]
	385 Move X20, X0
	386 NotImplemented "Instruction LDRH not yet implemented."
	387 Compare X9, 0
	388 JumpIfEqual {395}
	389 Move X10, [X8+176]
	390 Add X10, X10, 8
	391 NotImplemented "Instruction LDUR not yet implemented."
	392 NotImplemented "Instruction CMP not yet implemented."
	393 Subtract X9, X9, 1
	394 Add X10, X10, 16
	395 Move X0, X20
	396 Move W2, W31
	397 Call 0x1C5D788
	398 NotImplemented "Instruction LDRSW not yet implemented."
	399 Add X8, X8, X9
	400 Add X0, X8, 312
	401 Move X8, [X0]
	402 Move X1, [X0+8]
	403 Move X0, X20
	404 NotImplemented "Instruction BLR not yet implemented."
	405 Compare X19, 0
	406 JumpIfNotEqual {443}
	407 Move X20, [X31+96]
	408 Move X19, [X31+104]
	409 Move X22, [X31+80]
	410 Move X21, [X31+88]
	411 Move X24, [X31+64]
	412 Move X23, [X31+72]
	413 Move X26, [X31+48]
	414 Move X25, [X31+56]
	415 Move X28, [X31+32]
	416 Move X27, [X31+40]
	417 Move X30, [X31+16]
	418 Add X31, X31, 112
	419 Return 
	420 Move X0, X22
	421 Call 0x1C181E0
	422 Move X0, X23
	423 Call 0x1C181E0
	424 Call 0x1C17F20
	425 Call 0x1C17F20
	426 Move X0, X23
	427 Call 0x1C17F18
	428 Call 0x1C17F20
	429 Move [X31], X31
	430 Move W8, [X31+28]
	431 Compare W8, 0
	432 JumpIfEqual {436}
	433 Move X0, X22
	434 Move X1, X31
	435 Call Monitor.Exit, X0
	436 Move X8, [X31]
	437 Move X0, [X31+8]
	438 Compare X8, 0
	439 JumpIfEqual {517}
	440 Move X0, [X31]
	441 Call 0x1C17F18
	442 Call 0x1C17F20
	443 Move X0, X19
	444 Call 0x1C17F18
	445 Move X0, X23
	446 Call 0x1C17F18
	447 Call 0x1C17F20
	448 Call 0x1C17F20
	449 Call 0x1C17F20
	450 Move X0, X23
	451 Call 0x1C17F18
	452 Move X23, X1
	453 Move [X31+8], X0
	454 Move [X31], X1
	455 Move [X31+8], X0
	456 NotImplemented "Instruction CMP not yet implemented."
	457 Call 0x3EB2AD0
	458 Move X23, [X0]
	459 Call 0x3EB2AE0
	460 Move W26, W31
	461 Move W27, 1
	462 Move [X31], X1
	463 Move [X31+8], X0
	464 Move X23, X31
	465 Move X1, [X24]
	466 Move X0, X22
	467 Call 0x1C17E00
	468 Move X22, X0
	469 Compare X0, 0
	470 JumpIfEqual {492}
	471 Move X8, [X22]
	472 Move X1, [X24]
	473 NotImplemented "Instruction LDRH not yet implemented."
	474 Compare X9, 0
	475 JumpIfEqual {482}
	476 Move X10, [X8+176]
	477 Add X10, X10, 8
	478 NotImplemented "Instruction LDUR not yet implemented."
	479 NotImplemented "Instruction CMP not yet implemented."
	480 Subtract X9, X9, 1
	481 Add X10, X10, 16
	482 Move X0, X22
	483 Move W2, W31
	484 Call 0x1C5D788
	485 NotImplemented "Instruction LDRSW not yet implemented."
	486 Add X8, X8, X9
	487 Add X0, X8, 312
	488 Move X8, [X0]
	489 Move X1, [X0+8]
	490 Move X0, X22
	491 NotImplemented "Instruction BLR not yet implemented."
	492 Compare X23, 0
	493 JumpIfNotEqual {501}
	494 Move X8, [X31]
	495 NotImplemented "Instruction CMP not yet implemented."
	496 Move X0, [X31+8]
	497 Call 0x3EB2AD0
	498 Move X22, [X0]
	499 Call 0x3EB2AE0
	500 Move X22, X31
	501 Move X0, X23
	502 Call 0x1C17F18
	503 Move [X31], X1
	504 Move [X31+8], X0
	505 Move [X31+8], X0
	506 Move W8, [X31+28]
	507 Compare W8, 0
	508 JumpIfEqual {512}
	509 Move X0, X21
	510 Move X1, X31
	511 Call Monitor.Exit, X0
	512 Compare X22, 0
	513 JumpIfEqual {553}
	514 Move X0, X22
	515 Call 0x1C17F18
	516 Move X23, X1
	517 NotImplemented "Instruction CMP not yet implemented."
	518 Call 0x3EB2AD0
	519 Move X19, [X0]
	520 Call 0x3EB2AE0
	521 Move [X31+8], X0
	522 Move X19, X31
	523 Move [X31+8], X0
	524 Move X1, [X24]
	525 Move X0, X21
	526 Call 0x1C17E00
	527 Move X20, X0
	528 Compare X0, 0
	529 JumpIfEqual {551}
	530 Move X8, [X20]
	531 Move X1, [X24]
	532 NotImplemented "Instruction LDRH not yet implemented."
	533 Compare X9, 0
	534 JumpIfEqual {541}
	535 Move X10, [X8+176]
	536 Add X10, X10, 8
	537 NotImplemented "Instruction LDUR not yet implemented."
	538 NotImplemented "Instruction CMP not yet implemented."
	539 Subtract X9, X9, 1
	540 Add X10, X10, 16
	541 Move X0, X20
	542 Move W2, W31
	543 Call 0x1C5D788
	544 NotImplemented "Instruction LDRSW not yet implemented."
	545 Add X8, X8, X9
	546 Add X0, X8, 312
	547 Move X8, [X0]
	548 Move X1, [X0+8]
	549 Move X0, X20
	550 NotImplemented "Instruction BLR not yet implemented."
	551 Compare X19, 0
	552 JumpIfNotEqual {555}
	553 Move X0, [X31+8]
	554 Call 0x1D2D690
	555 Move X0, X19
	556 Call 0x1C17F18
	557 Call 0x1991590

Method: System.Void .cctor()

Disassembly:
	0x0364AF6C LDR X0, [X0 + 0x698]
	0x0364AF70 BL 0x1C16CF4
	0x0364AF74 ADRP X0, 0xAF2000
	0x0364AF78 LDR X0, [X0 + 0x6A8]
	0x0364AF7C BL 0x1C16CF4
	0x0364AF80 MOVZ W8, 0x1
	0x0364AF84 STRB W8, [X20 + 0x5DD]
	0x0364AF88 LDR X0, [X21]
	0x0364AF8C ADRP X22, 0xAF2000
	0x0364AF90 LDR W8, [X0 + 0xE0]
	0x0364AF94 LDR X22, [X22 + 0x6A8]
	0x0364AF98 CBNZ W8, 0x364AFA4
	0x0364AF9C BL 0x1C16DFC
	0x0364AFA0 LDR X0, [X21]
	0x0364AFA4 LDR X8, [X0 + 0xB8]
	0x0364AFA8 LDR X1, [X22]
	0x0364AFAC MOV X2, X31
	0x0364AFB0 LDR X20, [X8 + 0x10]
	0x0364AFB4 MOV X0, X20
	0x0364AFB8 BL 0x321BA08
	0x0364AFBC TBZ X0, 0x0, 0x364B038
	0x0364AFC0 ADRP X20, 0xAB1000
	0x0364AFC4 LDR X20, [X20 + 0x958]
	0x0364AFC8 LDR X0, [X20]
	0x0364AFCC LDR W8, [X0 + 0xE0]
	0x0364AFD0 CBNZ W8, 0x364AFD8
	0x0364AFD4 BL 0x1C16DFC
	0x0364AFD8 ADRP X21, 0xD8E000
	0x0364AFDC LDRB W8, [X21 + 0xFA7]
	0x0364AFE0 CBNZ W8, 0x364AFF8
	0x0364AFE4 ADRP X0, 0xAB1000
	0x0364AFE8 LDR X0, [X0 + 0x958]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xD97000
	006 Move X20, 0xAF3000
	007 Move X19, 0xAB0000
	008 Move W8, [X21+1483]
	009 Move X20, [X20+1584]
	010 Move X19, [X19+3264]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0xAB0000
	016 Move X0, [X0+3264]
	017 Call 0x1C17CF4
	018 Move X0, 0xAF3000
	019 Move X0, [X0+1584]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X21+1483], W8
	023 Call 0x1C17D44
	024 Move X8, [X20]
	025 Move X8, [X8+184]
	026 Move [X8], X31
	027 Move X0, [X19]
	028 Call 0x1C17F10
	029 Move X1, X31
	030 Move X19, X0
	031 Call Object..ctor, X0
	032 Move X8, [X20]
	033 Move X8, [X8+184]
	034 Move [X8+24], X19
	035 Move X20, [X31+16]
	036 Move X19, [X31+24]
	037 Move X30, [X31+32]
	038 Move X21, [X31+40]
	039 Return 

