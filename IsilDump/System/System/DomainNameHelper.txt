Type: System.DomainNameHelper

Method: System.String ParseCanonicalName(System.String str, System.Int32 start, System.Int32 end, ref System.Boolean loopback)

Disassembly:
	0x0362DEC0 ADRP X1, 0x887000
	0x0362DEC4 ADD X1, X1, 0xE58
	0x0362DEC8 MOV X2, X31
	0x0362DECC BL 0x3EB1B00
	0x0362DED0 B 0x362DF8C
	0x0362DED4 B 0x362DED8
	0x0362DED8 MOV X28, X0
	0x0362DEDC BL 0x3EB1AE0
	0x0362DEE0 B 0x362DF94
	0x0362DEE4 B 0x362DEE8
	0x0362DEE8 MOV X28, X0
	0x0362DEEC CMP W1, 0x1
	0x0362DEF0 B.NE 0x362DF94
	0x0362DEF4 MOV X0, X28
	0x0362DEF8 BL 0x3EB1AD0
	0x0362DEFC MOV X19, X0
	0x0362DF00 ADRP X0, 0xACE000
	0x0362DF04 LDR X0, [X0 + 0x578]
	0x0362DF08 BL 0x1C16D08
	0x0362DF0C LDR X8, [X19]
	0x0362DF10 LDR X1, [X8]
	0x0362DF14 BL 0x1C17270
	0x0362DF18 TBZ X0, 0x0, 0x362DF6C
	0x0362DF1C BL 0x3EB1AE0
	0x0362DF20 ADRP X0, 0xB0E000
	0x0362DF24 LDR X0, [X0 + 0x648]
	0x0362DF28 BL 0x1C16D08
	0x0362DF2C MOV X1, X31
	0x0362DF30 BL 0x320A1E4
	0x0362DF34 MOV X19, X0
	0x0362DF38 ADRP X0, 0xB0E000
	0x0362DF3C LDR X0, [X0 + 0xD8]
	0x0362DF40 BL 0x1C16D08
	0x0362DF44 BL 0x1C16F10
	0x0362DF48 MOV X1, X19
	0x0362DF4C MOV X20, X0
	0x0362DF50 BL 0x3628F6C
	0x0362DF54 ADRP X0, 0xB0E000
	0x0362DF58 LDR X0, [X0 + 0x658]
	0x0362DF5C BL 0x1C16D08
	0x0362DF60 MOV X1, X0
	0x0362DF64 MOV X0, X20
	0x0362DF68 BL 0x1C16DEC
	0x0362DF6C MOVZ W0, 0x8
	0x0362DF70 BL 0x3EB1AF0
	0x0362DF74 LDR X8, [X19]
	0x0362DF78 STR X8, [X0]
	0x0362DF7C ADRP X1, 0x887000
	0x0362DF80 ADD X1, X1, 0xE58
	0x0362DF84 MOV X2, X31
	0x0362DF88 BL 0x3EB1B00
	0x0362DF8C MOV X28, X0
	0x0362DF90 BL 0x3EB1AE0
	0x0362DF94 MOV X0, X28
	0x0362DF98 BL 0x1D2C690
	0x0362DF9C BL 0x1990590
	0x0362DFA0 B 0x362CEC0
	0x0362DFA4 STP X29, X30, [X31 - 0x60]!
	0x0362DFA8 STP X28, X27, [X31 + 0x10]
	0x0362DFAC STP X26, X25, [X31 + 0x20]
	0x0362DFB0 STP X24, X23, [X31 + 0x30]
	0x0362DFB4 STP X22, X21, [X31 + 0x40]
	0x0362DFB8 STP X20, X19, [X31 + 0x50]
	0x0362DFBC ADRP X23, 0xDB3000
	0x0362DFC0 LDRB W8, [X23 + 0x501]
	0x0362DFC4 MOV W22, W3
	0x0362DFC8 MOV X19, X2
	0x0362DFCC MOV W21, W1
	0x0362DFD0 MOV X20, X0
	0x0362DFD4 TBNZ X8, 0x0, 0x362DFEC
	0x0362DFD8 ADRP X0, 0xAC8000
	0x0362DFDC LDR X0, [X0 + 0x170]
	0x0362DFE0 BL 0x1C16CF4
	0x0362DFE4 MOVZ W8, 0x1
	0x0362DFE8 STRB W8, [X23 + 0x501]
	0x0362DFEC LDRH W24, [X19]
	0x0362DFF0 MOV W0, W31
	0x0362DFF4 CMP W24, W21, UXTH
	0x0362DFF8 B.EQ 0x362E258
	0x0362DFFC AND W8, W21, 0xFFFF
	0x0362E000 CMP W24, W8
	0x0362E004 B.LS 0x362E258
	0x0362E008 ADRP X25, 0xAC7000
	0x0362E00C LDR X25, [X25 + 0x170]
	0x0362E010 MOV W8, W31
	0x0362E014 MOV W26, W21
	0x0362E018 AND X28, X26, 0xFFFF
	0x0362E01C LDRH W23, [X20, X28, LSL #1]
	0x0362E020 MOV W27, W8
	0x0362E024 CMP W23, 0x2F
	0x0362E028 B.EQ 0x362E0C4
	0x0362E02C CMP W23, 0x5C
	0x0362E030 B.EQ 0x362E0C4
	0x0362E034 TBZ X22, 0x0, 0x362E048
	0x0362E038 CMP W23, 0x39
	0x0362E03C B.GT 0x362E054
	0x0362E040 CMP W23, 0x23
	0x0362E044 B.EQ 0x362E0C4
	0x0362E048 CMP W23, 0x2E
	0x0362E04C B.NE 0x362E064
	0x0362E050 B 0x362E208
	0x0362E054 CMP W23, 0x3A

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0xDB4000
	008 Move W8, [X23+1276]
	009 Move X19, X3
	010 Move W21, W2
	011 Move W20, W1
	012 Move X22, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {28}
	017 Move X0, 0xAC9000
	018 Move X0, [X0+3144]
	019 Call 0x1C17CF4
	020 Move X0, 0xB0F000
	021 Move X0, [X0+1064]
	022 Call 0x1C17CF4
	023 Move X0, 0xB0F000
	024 Move X0, [X0+1600]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X23+1276], W8
	028 Subtract W23, W21, 1
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Compare X22, 0
	031 JumpIfEqual {117}
	032 Move X0, X22
	033 Move W1, W23
	034 Move X2, X31
	035 Call String.get_Chars, X0, X1
	036 And W8, W0, 0xFFFF
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move X0, X22
	039 Move W1, W23
	040 Move X2, X31
	041 Call String.get_Chars, X0, X1
	042 And W8, W0, 0xFFFF
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Move X0, X22
	045 Move W1, W23
	046 Move X2, X31
	047 Call String.get_Chars, X0, X1
	048 And W8, W0, 0xFFFF
	049 NotImplemented "Instruction CMP not yet implemented."
	050 NotImplemented "Instruction CSEL not yet implemented."
	051 Subtract W23, W23, 1
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Compare X22, 0
	054 JumpIfEqual {117}
	055 Subtract W2, W21, W20
	056 Move X0, X22
	057 Move W1, W20
	058 Move X3, X31
	059 Call String.Substring, X0, X1, X2
	060 Move X23, X0
	061 Move X20, 0xB0F000
	062 Move X20, [X20+1064]
	063 Move X0, X23
	064 Move X2, X31
	065 Move X1, [X20]
	066 Call String.op_Equality, X0, X1
	067 Move TEMP, X0
	068 And TEMP, TEMP, 1
	069 Compare TEMP, 1
	070 JumpIfEqual {81}
	071 Move X8, 0xB0F000
	072 Move X8, [X8+1600]
	073 Move X0, X23
	074 Move X2, X31
	075 Move X1, [X8]
	076 Call String.op_Equality, X0, X1
	077 Move TEMP, X0
	078 And TEMP, TEMP, 1
	079 Compare TEMP, 1
	080 JumpIfNotEqual {84}
	081 Move W8, 1
	082 Move [X19], W8
	083 Move X23, [X20]
	084 Move X20, [X31+32]
	085 Move X19, [X31+40]
	086 Move X22, [X31+16]
	087 Move X21, [X31+24]
	088 Move X0, X23
	089 Move X30, [X31+48]
	090 Move X23, [X31+56]
	091 Return X0
	092 Subtract W2, W21, W20
	093 Move X0, X22
	094 Move W1, W20
	095 Move X3, X31
	096 Call String.Substring, X0, X1, X2
	097 Move X8, 0xAC8000
	098 Move X8, [X8+3144]
	099 Move X23, X0
	100 Move X8, [X8]
	101 Move W9, [X8+224]
	102 Compare W9, 0
	103 JumpIfNotEqual {106}
	104 Move X0, X8
	105 Call 0x1C17DFC
	106 Move X0, X31
	107 Call CultureInfo.get_InvariantCulture
	108 Compare X23, 0
	109 JumpIfEqual {117}
	110 Move X1, X0
	111 Move X0, X23
	112 Move X2, X31
	113 Call String.ToLower, X0, X1
	114 Move X23, X0
	115 Compare X0, 0
	116 JumpIfNotEqual {61}
	117 Call 0x1C17F20

Method: System.Boolean IsValid(System.Char* name, System.UInt16 pos, ref System.Int32 returnedEnd, ref System.Boolean notCanonical, System.Boolean notImplicitFile)

Disassembly:
	0x0362E058 B.EQ 0x362E0C4
	0x0362E05C CMP W23, 0x3F
	0x0362E060 B.EQ 0x362E0C4
	0x0362E064 LDR X0, [X25]
	0x0362E068 LDR W8, [X0 + 0xE0]
	0x0362E06C CBNZ W8, 0x362E074
	0x0362E070 BL 0x1C16DFC
	0x0362E074 MOV W0, W23
	0x0362E078 MOV X1, X31
	0x0362E07C BL 0x331A888
	0x0362E080 TBZ X0, 0x0, 0x362E08C
	0x0362E084 MOVZ W8, 0x1
	0x0362E088 B 0x362E0B4
	0x0362E08C LDRH W9, [X20, X28, LSL #1]
	0x0362E090 MOVZ W8, 0x1
	0x0362E094 CMP W9, 0x2D
	0x0362E098 B.EQ 0x362E0B4
	0x0362E09C CMP W9, 0x5F
	0x0362E0A0 B.EQ 0x362E0B4
	0x0362E0A4 SUB W8, W9, 0x30
	0x0362E0A8 CMP W8, 0x9
	0x0362E0AC MOV W8, W27
	0x0362E0B0 B.HI 0x362E240
	0x0362E0B4 ADD W26, W26, 0x1
	0x0362E0B8 CMP W24, W26, UXTH
	0x0362E0BC B.HI 0x362E018
	0x0362E0C0 B 0x362E0CC
	0x0362E0C4 MOV W8, W27
	0x0362E0C8 MOV W24, W26
	0x0362E0CC TBZ X8, 0x0, 0x362E240
	0x0362E0D0 AND W8, W26, 0xFFFF
	0x0362E0D4 CMP W8, W24, UXTH
	0x0362E0D8 B.CS 0x362E1F4
	0x0362E0DC MOV W8, W26
	0x0362E0E0 MOVZ X12, 0x400
	0x0362E0E4 AND X26, X8, 0xFFFF
	0x0362E0E8 AND X27, X21, 0xFFFF
	0x0362E0EC AND X28, X24, 0xFFFF
	0x0362E0F0 ADD X29, X20, W8, 0x1, UXTH
	0x0362E0F4 MOVZ W11, 0x1
	0x0362E0F8 MOVK X12, 0x10000000
	0x0362E0FC MOVZ W8, 0x1
	0x0362E100 LDRH W23, [X29]
	0x0362E104 CMP W23, 0x2F
	0x0362E108 B.EQ 0x362E214
	0x0362E10C CMP W23, 0x5C
	0x0362E110 B.EQ 0x362E214
	0x0362E114 TBZ X22, 0x0, 0x362E150
	0x0362E118 SUB W9, W23, 0x23
	0x0362E11C CMP W9, 0x3C
	0x0362E120 B.HI 0x362E198
	0x0362E124 LSLV X10, X11, X9
	0x0362E128 ANDS X31, X10, X12, 0x0
	0x0362E12C B.NE 0x362E18C
	0x0362E130 CMP X9, 0xB
	0x0362E134 B.EQ 0x362E168
	0x0362E138 MOVZ W10, 0x1
	0x0362E13C LSLV X9, X11, X9
	0x0362E140 MOVK W10, 0x10800000
	0x0362E144 ANDS X31, X9, X10, 0x0
	0x0362E148 B.EQ 0x362E198
	0x0362E14C B 0x362E214
	0x0362E150 CMP W23, 0x2D
	0x0362E154 B.EQ 0x362E18C
	0x0362E158 CMP W23, 0x5F
	0x0362E15C B.EQ 0x362E18C
	0x0362E160 CMP W23, 0x2E
	0x0362E164 B.NE 0x362E198
	0x0362E168 TBZ X8, 0x0, 0x362E240
	0x0362E16C CMP X26, X27
	0x0362E170 B.LS 0x362E1DC
	0x0362E174 LDURH W9, [X29 - 0x2]
	0x0362E178 MOV W8, W31
	0x0362E17C MOV W0, W31
	0x0362E180 CMP W9, 0x2E
	0x0362E184 B.NE 0x362E1E0
	0x0362E188 B 0x362E258
	0x0362E18C TBZ X8, 0x0, 0x362E240
	0x0362E190 MOVZ W8, 0x1
	0x0362E194 B 0x362E1E0
	0x0362E198 LDR X0, [X25]
	0x0362E19C LDR W8, [X0 + 0xE0]
	0x0362E1A0 CBNZ W8, 0x362E1A8
	0x0362E1A4 BL 0x1C16DFC
	0x0362E1A8 MOV W0, W23
	0x0362E1AC MOV X1, X31
	0x0362E1B0 BL 0x331A888
	0x0362E1B4 TBNZ X0, 0x0, 0x362E1C8
	0x0362E1B8 LDRH W8, [X29]
	0x0362E1BC SUB W8, W8, 0x30
	0x0362E1C0 CMP W8, 0x9
	0x0362E1C4 B.HI 0x362E240
	0x0362E1C8 MOVZ X12, 0x400
	0x0362E1CC MOVZ W8, 0x1
	0x0362E1D0 MOVZ W11, 0x1
	0x0362E1D4 MOVK X12, 0x10000000

ISIL:
	001 NotImplemented "Instruction LDRSW not yet implemented."
	002 Add X10, X0, W1
	003 Add X8, X0, X8
	004 NotImplemented "Instruction CMP not yet implemented."
	005 Move X9, X8
	006 Move X12, 8
	007 Move W11, 1
	008 NotImplemented "Instruction MOVK not yet implemented."
	009 Move X9, X10
	010 NotImplemented "Instruction LDRH not yet implemented."
	011 NotImplemented "Instruction CMP not yet implemented."
	012 NotImplemented "Instruction CMP not yet implemented."
	013 NotImplemented "Instruction CMP not yet implemented."
	014 Move TEMP, X4
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfNotEqual {22}
	018 NotImplemented "Instruction CMP not yet implemented."
	019 Move W13, W13
	020 NotImplemented "Instruction LSLV not yet implemented."
	021 And X31, X13, X12
	022 Add X9, X9, 2
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Move X9, X8
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move W8, W31
	027 Move W0, W8
	028 Return X0
	029 Move W11, 1
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move X12, X10
	032 Move X12, X10
	033 NotImplemented "Instruction LDRH not yet implemented."
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Add X12, X12, 2
	036 NotImplemented "Instruction CMP not yet implemented."
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move W8, W31
	039 Subtract X13, X12, X10
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Move X8, X10
	042 NotImplemented "Instruction LDRH not yet implemented."
	043 Subtract W14, W13, 97
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Subtract W14, W13, 48
	046 And W14, W14, 0xFFFF
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Subtract W13, W13, 65
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Move [X3], W11
	051 NotImplemented "Instruction CMP not yet implemented."
	052 NotImplemented "Instruction LDRH not yet implemented."
	053 Subtract W13, W10, 97
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Subtract W13, W10, 48
	056 And W13, W13, 0xFFFF
	057 NotImplemented "Instruction CMP not yet implemented."
	058 NotImplemented "Instruction CMP not yet implemented."
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Subtract W10, W10, 65
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Move [X3], W11
	063 Add X8, X8, 2
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Add X10, X8, 2
	066 Add X10, X10, 4
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Subtract X8, X9, X0
	069 NotImplemented "Instruction CMP not yet implemented."
	070 NotImplemented "Instruction CINC not yet implemented."
	071 Move W8, W8
	072 ShiftRight W8, 1
	073 And W8, W8, 0xFFFF
	074 Move [X2], W8
	075 Move W8, 1

Method: System.Boolean IsValidByIri(System.Char* name, System.UInt16 pos, ref System.Int32 returnedEnd, ref System.Boolean notCanonical, System.Boolean notImplicitFile)

Disassembly:
	0x0362E288 MOV X19, X0
	0x0362E28C MOV X20, X2
	0x0362E290 STR X8, [X0 + 0x10]
	0x0362E294 LDRB W22, [X2 + 0x52]
	0x0362E298 STR X0, [X0 + 0x40]
	0x0362E29C MOV X0, X2
	0x0362E2A0 MOV X21, X1
	0x0362E2A4 BL 0x1C16D84
	0x0362E2A8 TBZ X0, 0x0, 0x362E2C0
	0x0362E2AC CMP W22, 0x1
	0x0362E2B0 B.NE 0x362E2C8
	0x0362E2B4 ADRP X8, 0xFFFFFFFFFE597000
	0x0362E2B8 ADD X8, X8, 0x97C
	0x0362E2BC B 0x362E33C
	0x0362E2C0 CBZ W22, 0x362E2DC
	0x0362E2C4 CBZ X21, 0x362E35C
	0x0362E2C8 LDR X8, [X19 + 0x10]
	0x0362E2CC LDR X9, [X19 + 0x20]
	0x0362E2D0 STR X8, [X19 + 0x18]
	0x0362E2D4 STR X9, [X19 + 0x40]
	0x0362E2D8 B 0x362E340
	0x0362E2DC LDRB W8, [X19 + 0x70]
	0x0362E2E0 CBZ W8, 0x362E30C
	0x0362E2E4 MOV X0, X20
	0x0362E2E8 BL 0x1C16D7C
	0x0362E2EC MOV W21, W0
	0x0362E2F0 MOV X0, X20
	0x0362E2F4 BL 0x1C17238
	0x0362E2F8 TBZ X21, 0x0, 0x362E318
	0x0362E2FC TBZ X0, 0x0, 0x362E328
	0x0362E300 ADRP X8, 0xFFFFFFFFFE597000
	0x0362E304 ADD X8, X8, 0xA78
	0x0362E308 B 0x362E33C
	0x0362E30C ADRP X8, 0xFFFFFFFFFE597000
	0x0362E310 ADD X8, X8, 0x95C
	0x0362E314 B 0x362E33C
	0x0362E318 TBZ X0, 0x0, 0x362E334
	0x0362E31C ADRP X8, 0xFFFFFFFFFE597000
	0x0362E320 ADD X8, X8, 0x9B8
	0x0362E324 B 0x362E33C
	0x0362E328 ADRP X8, 0xFFFFFFFFFE597000
	0x0362E32C ADD X8, X8, 0xA3C
	0x0362E330 B 0x362E33C
	0x0362E334 ADRP X8, 0xFFFFFFFFFE597000
	0x0362E338 ADD X8, X8, 0x98C
	0x0362E33C STR X8, [X19 + 0x18]
	0x0362E340 ADRP X8, 0xFFFFFFFFFE597000
	0x0362E344 ADD X8, X8, 0x914
	0x0362E348 STR X8, [X19 + 0x38]
	0x0362E34C LDP X20, X19, [X31 + 0x20]
	0x0362E350 LDP X22, X21, [X31 + 0x10]
	0x0362E354 LDR X30, [X31], #0x30
	0x0362E358 RET
	0x0362E35C ADRP X1, 0xFFFFFFFFFD4ED000
	0x0362E360 ADD X1, X1, 0xEE3
	0x0362E364 MOV X0, X31
	0x0362E368 BL 0x1C16F3C
	0x0362E36C MOV X1, X31
	0x0362E370 BL 0x1C16DEC
	0x0362E374 LDR X8, [X0 + 0x40]
	0x0362E378 LDR X3, [X0 + 0x18]
	0x0362E37C LDR X2, [X0 + 0x28]
	0x0362E380 MOV X0, X8
	0x0362E384 BR X3
	0x0362E388 MOV X1, X31
	0x0362E38C B 0x33BDD8C
	0x0362E390 MOV X8, X0
	0x0362E394 LDR X0, [X0 + 0x20]
	0x0362E398 STP X1, X2, [X8 + 0x10]
	0x0362E39C STRH W31, [X8 + 0x28]
	0x0362E3A0 CBZ X0, 0x362E3AC
	0x0362E3A4 MOV X1, X31
	0x0362E3A8 B 0x33E207C
	0x0362E3AC RET
	0x0362E3B0 STP X30, X21, [X31 - 0x20]!
	0x0362E3B4 STP X20, X19, [X31 + 0x10]
	0x0362E3B8 MOV X20, X1
	0x0362E3BC MOV X1, X31
	0x0362E3C0 MOV X19, X2
	0x0362E3C4 MOV X21, X0
	0x0362E3C8 BL 0x33BDD8C
	0x0362E3CC STP X20, X19, [X21 + 0x10]
	0x0362E3D0 LDP X20, X19, [X31 + 0x10]
	0x0362E3D4 LDP X30, X21, [X31], #0x20
	0x0362E3D8 RET
	0x0362E3DC LDR X0, [X0 + 0x10]
	0x0362E3E0 RET
	0x0362E3E4 LDR X0, [X0 + 0x18]
	0x0362E3E8 RET
	0x0362E3EC SUB X31, X31, 0x30
	0x0362E3F0 STP X30, X21, [X31 + 0x10]
	0x0362E3F4 STP X20, X19, [X31 + 0x20]
	0x0362E3F8 ADRP X20, 0xDB2000
	0x0362E3FC LDRB W8, [X20 + 0x502]
	0x0362E400 MOV X19, X0
	0x0362E404 TBNZ X8, 0x0, 0x362E41C
	0x0362E408 ADRP X0, 0xAF6000
	0x0362E40C LDR X0, [X0 + 0x7C8]
	0x0362E410 BL 0x1C16CF4
	0x0362E414 MOVZ W8, 0x1
	0x0362E418 STRB W8, [X20 + 0x502]
	0x0362E41C STRB W31, [X31 + 0xC]
	0x0362E420 ADD X1, X31, 0xC
	0x0362E424 MOV X0, X19
	0x0362E428 MOV X2, X31
	0x0362E42C BL 0x33DE64C
	0x0362E430 LDR X21, [X19 + 0x20]
	0x0362E434 CBZ X21, 0x362E440
	0x0362E438 MOV X20, X31
	0x0362E43C B 0x362E470
	0x0362E440 ADRP X8, 0xAF6000
	0x0362E444 LDRB W20, [X19 + 0x29]
	0x0362E448 LDR X8, [X8 + 0x7C8]
	0x0362E44C LDR X0, [X8]
	0x0362E450 BL 0x1C16F10
	0x0362E454 CMP W20, 0x0
	0x0362E458 MOV X21, X0
	0x0362E45C CSET W1, NE
	0x0362E460 MOV X2, X31
	0x0362E464 BL 0x33DCD78
	0x0362E468 MOV X20, X31
	0x0362E46C STR X21, [X19 + 0x20]
	0x0362E470 LDRB W8, [X31 + 0xC]
	0x0362E474 CBZ W8, 0x362E484

ISIL:
	001 NotImplemented "Instruction LDRSW not yet implemented."
	002 Add X9, X0, W1
	003 Add X10, X0, X8
	004 NotImplemented "Instruction CMP not yet implemented."
	005 Move X8, X10
	006 Move X12, 8
	007 Move W11, 1
	008 NotImplemented "Instruction MOVK not yet implemented."
	009 Move X8, X9
	010 NotImplemented "Instruction LDRH not yet implemented."
	011 NotImplemented "Instruction CMP not yet implemented."
	012 NotImplemented "Instruction CMP not yet implemented."
	013 Move TEMP, X4
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfNotEqual {21}
	017 NotImplemented "Instruction CMP not yet implemented."
	018 Move W13, W13
	019 NotImplemented "Instruction LSLV not yet implemented."
	020 And X31, X13, X12
	021 Add X8, X8, 2
	022 NotImplemented "Instruction CMP not yet implemented."
	023 Move X8, X10
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move W0, W31
	026 Return X0
	027 Move W10, 0xFF0D
	028 Move W11, 0x3002
	029 Move W12, 1
	030 Move W13, 0xFF0E
	031 Move W14, 0xFF61
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move W16, W31
	034 Move W17, W31
	035 Move X15, X9
	036 NotImplemented "Instruction LDRH not yet implemented."
	037 NotImplemented "Instruction CMP not yet implemented."
	038 NotImplemented "Instruction CMP not yet implemented."
	039 NotImplemented "Instruction CMP not yet implemented."
	040 NotImplemented "Instruction CMP not yet implemented."
	041 NotImplemented "Instruction CMP not yet implemented."
	042 NotImplemented "Instruction CMP not yet implemented."
	043 NotImplemented "Instruction CINC not yet implemented."
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Add X15, X15, 2
	046 NotImplemented "Instruction CSET not yet implemented."
	047 Add W16, W4, W16
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Or W17, W17, W1
	050 Move W17, W31
	051 Move W16, W31
	052 Move X15, X9
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Add W1, W16, 4
	055 And W31, W17, 1
	056 NotImplemented "Instruction CSEL not yet implemented."
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Move X16, X9
	059 NotImplemented "Instruction LDRH not yet implemented."
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Subtract W1, W17, 97
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Subtract W1, W17, 48
	064 And W1, W1, 0xFFFF
	065 NotImplemented "Instruction CMP not yet implemented."
	066 Subtract W17, W17, 65
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Move [X3], W12
	069 NotImplemented "Instruction CMP not yet implemented."
	070 NotImplemented "Instruction LDRH not yet implemented."
	071 NotImplemented "Instruction CMP not yet implemented."
	072 Add X16, X16, 2
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Subtract W17, W9, 97
	075 NotImplemented "Instruction CMP not yet implemented."
	076 Subtract W17, W9, 48
	077 And W17, W17, 0xFFFF
	078 NotImplemented "Instruction CMP not yet implemented."
	079 NotImplemented "Instruction CMP not yet implemented."
	080 NotImplemented "Instruction CMP not yet implemented."
	081 Subtract W9, W9, 65
	082 NotImplemented "Instruction CMP not yet implemented."
	083 Move [X3], W12
	084 Add X9, X9, 4
	085 Add X9, X16, 2
	086 NotImplemented "Instruction CMP not yet implemented."
	087 Subtract X8, X8, X0
	088 NotImplemented "Instruction CMP not yet implemented."
	089 NotImplemented "Instruction CINC not yet implemented."
	090 Move W8, W8
	091 ShiftRight W8, 1
	092 And W8, W8, 0xFFFF
	093 Move W0, 1
	094 Move [X2], W8
	095 Return X0

Method: System.String IdnEquivalent(System.String hostname)

Disassembly:
	0x0362E478 MOV X0, X19
	0x0362E47C MOV X1, X31
	0x0362E480 BL 0x33E14E4
	0x0362E484 CBNZ X20, 0x362E49C
	0x0362E488 MOV X0, X21
	0x0362E48C LDP X20, X19, [X31 + 0x20]
	0x0362E490 LDP X30, X21, [X31 + 0x10]
	0x0362E494 ADD X31, X31, 0x30
	0x0362E498 RET
	0x0362E49C MOV X0, X20
	0x0362E4A0 BL 0x1C16F18
	0x0362E4A4 B 0x362E4A8
	0x0362E4A8 MOV X21, X0
	0x0362E4AC CMP W1, 0x1
	0x0362E4B0 B.NE 0x362E4CC
	0x0362E4B4 MOV X0, X21
	0x0362E4B8 BL 0x3EB1AD0
	0x0362E4BC LDR X20, [X0]
	0x0362E4C0 BL 0x3EB1AE0

ISIL:
	001 Subtract X31, X31, 32
	002 Move [X31+16], X30
	003 Move [X31+24], X19
	004 Move W8, 1
	005 Move [X31+12], W8
	006 Move [X31+8], W31
	007 Compare X0, 0
	008 JumpIfEqual {22}
	009 Move X19, X0
	010 Move X0, X31
	011 Call RuntimeHelpers.get_OffsetToStringData
	012 Move W2, [X19+16]
	013 Add X0, X19, W0
	014 Add X3, X31, 12
	015 Add X4, X31, 8
	016 Move W1, W31
	017 Call DomainNameHelper.IdnEquivalent, X0, X1, X2, X3, X4
	018 Move X30, [X31+16]
	019 Move X19, [X31+24]
	020 Add X31, X31, 32
	021 Return X0
	022 Call 0x1C17F20

Method: System.String IdnEquivalent(System.Char* hostname, System.Int32 start, System.Int32 end, ref System.Boolean allAscii, ref System.Boolean atLeastOneValidIdn)

Disassembly:
	0x0362E4C4 MOV X21, X31
	0x0362E4C8 B 0x362E470
	0x0362E4CC MOV X20, X31
	0x0362E4D0 B 0x362E4D8
	0x0362E4D4 MOV X21, X0
	0x0362E4D8 LDRB W8, [X31 + 0xC]
	0x0362E4DC CBZ W8, 0x362E4EC
	0x0362E4E0 MOV X0, X19
	0x0362E4E4 MOV X1, X31
	0x0362E4E8 BL 0x33E14E4
	0x0362E4EC CBNZ X20, 0x362E4F8
	0x0362E4F0 MOV X0, X21
	0x0362E4F4 BL 0x1D2C690
	0x0362E4F8 MOV X0, X20
	0x0362E4FC BL 0x1C16F18
	0x0362E500 BL 0x1990590
	0x0362E504 LDRB W0, [X0 + 0x28]
	0x0362E508 RET
	0x0362E50C AND W8, W1, 0x1
	0x0362E510 STRB W8, [X0 + 0x28]
	0x0362E514 RET
	0x0362E518 LDRB W0, [X0 + 0x29]
	0x0362E51C RET
	0x0362E520 SUB X31, X31, 0x30
	0x0362E524 STP X30, X21, [X31 + 0x10]
	0x0362E528 STP X20, X19, [X31 + 0x20]
	0x0362E52C MOV W20, W1
	0x0362E530 MOV X19, X0
	0x0362E534 AND W8, W1, 0x1
	0x0362E538 STRB W8, [X0 + 0x29]
	0x0362E53C STRB W31, [X31 + 0xC]
	0x0362E540 ADD X1, X31, 0xC
	0x0362E544 MOV X2, X31
	0x0362E548 BL 0x33DE64C
	0x0362E54C TBZ X20, 0x0, 0x362E568
	0x0362E550 LDR X0, [X19 + 0x20]
	0x0362E554 CBZ X0, 0x362E568
	0x0362E558 MOV X1, X31
	0x0362E55C BL 0x33DE66C
	0x0362E560 MOV X20, X31
	0x0362E564 B 0x362E56C
	0x0362E568 MOV X20, X31
	0x0362E56C LDRB W8, [X31 + 0xC]
	0x0362E570 CBZ W8, 0x362E580
	0x0362E574 MOV X0, X19
	0x0362E578 MOV X1, X31
	0x0362E57C BL 0x33E14E4
	0x0362E580 CBNZ X20, 0x362E594
	0x0362E584 LDP X20, X19, [X31 + 0x20]
	0x0362E588 LDP X30, X21, [X31 + 0x10]
	0x0362E58C ADD X31, X31, 0x30
	0x0362E590 RET
	0x0362E594 MOV X0, X20
	0x0362E598 BL 0x1C16F18
	0x0362E59C B 0x362E5A0
	0x0362E5A0 MOV X21, X0
	0x0362E5A4 CMP W1, 0x1
	0x0362E5A8 B.NE 0x362E5C0
	0x0362E5AC MOV X0, X21
	0x0362E5B0 BL 0x3EB1AD0
	0x0362E5B4 LDR X20, [X0]
	0x0362E5B8 BL 0x3EB1AE0
	0x0362E5BC B 0x362E56C
	0x0362E5C0 MOV X20, X31
	0x0362E5C4 B 0x362E5CC
	0x0362E5C8 MOV X21, X0
	0x0362E5CC LDRB W8, [X31 + 0xC]
	0x0362E5D0 CBZ W8, 0x362E5E0
	0x0362E5D4 MOV X0, X19
	0x0362E5D8 MOV X1, X31
	0x0362E5DC BL 0x33E14E4
	0x0362E5E0 CBNZ X20, 0x362E5EC
	0x0362E5E4 MOV X0, X21
	0x0362E5E8 BL 0x1D2C690
	0x0362E5EC MOV X0, X20
	0x0362E5F0 BL 0x1C16F18
	0x0362E5F4 BL 0x1990590
	0x0362E5F8 STR X30, [X31 - 0x30]!
	0x0362E5FC STP X22, X21, [X31 + 0x10]
	0x0362E600 STP X20, X19, [X31 + 0x20]
	0x0362E604 MOV W21, W1
	0x0362E608 MOV X1, X31
	0x0362E60C MOV X19, X3
	0x0362E610 MOV X20, X2
	0x0362E614 MOV X22, X0
	0x0362E618 BL 0x33BDD8C
	0x0362E61C STR W21, [X22 + 0x10]
	0x0362E620 STP X20, X19, [X22 + 0x18]
	0x0362E624 LDP X20, X19, [X31 + 0x20]
	0x0362E628 LDP X22, X21, [X31 + 0x10]
	0x0362E62C LDR X30, [X31], #0x30
	0x0362E630 RET
	0x0362E634 STR X30, [X31 - 0x10]!
	0x0362E638 LDR X8, [X0 + 0x18]
	0x0362E63C CBZ X8, 0x362E658
	0x0362E640 LDR X1, [X0 + 0x20]
	0x0362E644 LDR X3, [X8 + 0x18]
	0x0362E648 LDR X0, [X8 + 0x40]
	0x0362E64C LDR X2, [X8 + 0x28]
	0x0362E650 LDR X30, [X31], #0x10
	0x0362E654 BR X3
	0x0362E658 BL 0x1C16F20
	0x0362E65C RET
	0x0362E660 STR X30, [X31 - 0x10]!
	0x0362E664 LDR X0, [X0 + 0x20]
	0x0362E668 CBZ X0, 0x362E67C
	0x0362E66C LDR X8, [X0]
	0x0362E670 LDP X2, X1, [X8 + 0x1B8]
	0x0362E674 LDR X30, [X31], #0x10
	0x0362E678 BR X2
	0x0362E67C BL 0x1C16F20
	0x0362E680 B 0x1C95530
	0x0362E684 MOV X1, X31
	0x0362E688 B 0x3660240
	0x0362E68C STR X30, [X31 - 0x30]!
	0x0362E690 STP X22, X21, [X31 + 0x10]
	0x0362E694 STP X20, X19, [X31 + 0x20]
	0x0362E698 ADRP X22, 0xDB2000
	0x0362E69C ADRP X20, 0xAED000
	0x0362E6A0 ADRP X21, 0xAC5000
	0x0362E6A4 LDRB W8, [X22 + 0x503]
	0x0362E6A8 LDR X20, [X20 + 0xB60]
	0x0362E6AC LDR X21, [X21 + 0x6C0]
	0x0362E6B0 MOV X19, X1
	0x0362E6B4 TBNZ X8, 0x0, 0x362E6E4
	0x0362E6B8 ADRP X0, 0xAED000
	0x0362E6BC LDR X0, [X0 + 0xB60]
	0x0362E6C0 BL 0x1C16CF4
	0x0362E6C4 ADRP X0, 0xAC5000
	0x0362E6C8 LDR X0, [X0 + 0x6C0]
	0x0362E6CC BL 0x1C16CF4
	0x0362E6D0 ADRP X0, 0xB0D000
	0x0362E6D4 LDR X0, [X0 + 0x660]
	0x0362E6D8 BL 0x1C16CF4
	0x0362E6DC MOVZ W8, 0x1
	0x0362E6E0 STRB W8, [X22 + 0x503]
	0x0362E6E4 LDR X0, [X21]
	0x0362E6E8 LDR X20, [X20]
	0x0362E6EC LDR W8, [X0 + 0xE0]
	0x0362E6F0 CBNZ W8, 0x362E6F8
	0x0362E6F4 BL 0x1C16DFC
	0x0362E6F8 MOV X0, X20
	0x0362E6FC MOV X1, X31
	0x0362E700 BL 0x338C698
	0x0362E704 MOV X1, X0
	0x0362E708 MOV X0, X19
	0x0362E70C MOV X2, X31
	0x0362E710 BL 0x3395194
	0x0362E714 TBZ X0, 0x0, 0x362E72C
	0x0362E718 LDP X20, X19, [X31 + 0x20]
	0x0362E71C LDP X22, X21, [X31 + 0x10]
	0x0362E720 MOVZ W0, 0x1
	0x0362E724 LDR X30, [X31], #0x30
	0x0362E728 RET
	0x0362E72C ADRP X8, 0xB0D000
	0x0362E730 LDR X0, [X21]
	0x0362E734 LDR X8, [X8 + 0x660]
	0x0362E738 LDR W9, [X0 + 0xE0]
	0x0362E73C LDR X20, [X8]
	0x0362E740 CBNZ W9, 0x362E748
	0x0362E744 BL 0x1C16DFC
	0x0362E748 MOV X0, X20
	0x0362E74C MOV X1, X31

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X19, 0xDB3000
	015 Move W8, [X19+1277]
	016 Move X21, X3
	017 Move W20, W2
	018 Move W22, W1
	019 Move X23, X0
	020 Move [X31], X4
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {30}
	025 Move X0, 0xAFC000
	026 Move X0, [X0+4016]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X19+1277], W8
	030 Add X4, X31, 8
	031 Move X0, X23
	032 Move W1, W22
	033 Move W2, W20
	034 Move X3, X21
	035 Move [X31+8], X31
	036 Call DomainNameHelper.IdnEquivalent, X0, X1, X2, X3, X4
	037 Move X20, X0
	038 Compare X0, 0
	039 JumpIfEqual {142}
	040 Move W8, [X21]
	041 Move X9, [X31+8]
	042 NotImplemented "Instruction CMP not yet implemented."
	043 NotImplemented "Instruction CSEL not yet implemented."
	044 Compare X19, 0
	045 JumpIfEqual {160}
	046 Move X0, X31
	047 Call RuntimeHelpers.get_OffsetToStringData
	048 Move W27, [X19+16]
	049 Move W24, W31
	050 Add X21, X19, W0
	051 Move W28, 0xFF0D
	052 Move W22, 0xFF0E
	053 Move W26, 0xFF61
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Move W25, W31
	056 Move W8, 1
	057 Move W29, W24
	058 Move W23, W29
	059 NotImplemented "Instruction LDRH not yet implemented."
	060 Move TEMP, X8
	061 And TEMP, TEMP, 1
	062 Compare TEMP, 1
	063 JumpIfNotEqual {73}
	064 Add W8, W23, 3
	065 NotImplemented "Instruction CMP not yet implemented."
	066 Move X0, X21
	067 Move W1, W23
	068 Call DomainNameHelper.IsIdnAce, X0, X1
	069 Move TEMP, X0
	070 And TEMP, TEMP, 1
	071 Compare TEMP, 1
	072 JumpIfEqual {82}
	073 NotImplemented "Instruction CMP not yet implemented."
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Move W8, 0x3002
	076 NotImplemented "Instruction CMP not yet implemented."
	077 NotImplemented "Instruction CMP not yet implemented."
	078 NotImplemented "Instruction CMP not yet implemented."
	079 Add W23, W23, 1
	080 NotImplemented "Instruction CMP not yet implemented."
	081 Move W8, W31
	082 Add W29, W23, 4
	083 Move W8, W31
	084 NotImplemented "Instruction CMP not yet implemented."
	085 Move W25, 1
	086 Move W19, W31
	087 Move W23, W29
	088 Move W19, W31
	089 Move W23, W24
	090 Move W19, 1
	091 Move TEMP, X25
	092 And TEMP, TEMP, 1
	093 Compare TEMP, 1
	094 JumpIfNotEqual {122}
	095 Move X8, 0xAFC000
	096 Move X8, [X8+4016]
	097 Move X0, [X8]
	098 Call 0x1C17F10
	099 Move X25, X0
	100 Move X1, X31
	101 Call IdnMapping..ctor, X0
	102 Subtract W3, W23, W24
	103 Move X0, X31
	104 Move X1, X21
	105 Move W2, W24
	106 Move X4, X31
	107 Call String.CreateString, X0, X1, X2, X3
	108 Move X1, X0
	109 Compare X25, 0
	110 JumpIfEqual {124}
	111 Move X0, X25
	112 Move X2, X31
	113 Call IdnMapping.GetUnicode, X0, X1
	114 Add W8, W29, 1
	115 NotImplemented "Instruction CMP not yet implemented."
	116 Move W19, W31
	117 NotImplemented "Instruction CSINC not yet implemented."
	118 Move TEMP, X25
	119 And TEMP, TEMP, 1
	120 Compare TEMP, 1
	121 JumpIfEqual {95}
	122 Add W24, W23, W19
	123 NotImplemented "Instruction CMP not yet implemented."
	124 Call 0x1C17F20
	125 Move X24, X0
	126 NotImplemented "Instruction CMP not yet implemented."
	127 Move X0, X24
	128 Call 0x3EB2AD0
	129 Move X24, X0
	130 Move X0, 0xACE000
	131 Move X0, [X0+1400]
	132 Call 0x1C17D08
	133 Move X8, [X24]
	134 Move X1, [X8]
	135 Call 0x1C18270
	136 Move TEMP, X0
	137 And TEMP, TEMP, 1
	138 Compare TEMP, 1
	139 JumpIfNotEqual {161}
	140 Call 0x3EB2AE0
	141 Move W8, 1
	142 Move W8, W31
	143 Move X9, [X31]
	144 Move [X9], W8
	145 Move X0, X20
	146 Move X20, [X31+96]
	147 Move X19, [X31+104]
	148 Move X22, [X31+80]
	149 Move X21, [X31+88]
	150 Move X24, [X31+64]
	151 Move X23, [X31+72]
	152 Move X26, [X31+48]
	153 Move X25, [X31+56]
	154 Move X28, [X31+32]
	155 Move X27, [X31+40]
	156 Move X29, [X31+16]
	157 Move X30, [X31+24]
	158 Add X31, X31, 112
	159 Return X0
	160 Call 0x1C17F20
	161 Move W0, 8
	162 Call 0x3EB2AF0
	163 Move X8, [X24]
	164 Move [X0], X8
	165 Move X1, 0x887000
	166 Add X1, X1, 3672
	167 Move X2, X31
	168 Call 0x3EB2B00
	169 Move X24, X0
	170 Call 0x3EB2AE0
	171 Move X0, X24
	172 Call 0x1D2D690
	173 Call 0x1991590

Method: System.String IdnEquivalent(System.Char* hostname, System.Int32 start, System.Int32 end, ref System.Boolean allAscii, ref System.String bidiStrippedHost)

Disassembly:
	0x0362E750 BL 0x338C698
	0x0362E754 MOV X1, X0
	0x0362E758 MOV X0, X19
	0x0362E75C LDP X20, X19, [X31 + 0x20]
	0x0362E760 LDP X22, X21, [X31 + 0x10]
	0x0362E764 MOV X2, X31
	0x0362E768 LDR X30, [X31], #0x30
	0x0362E76C B 0x3395194
	0x0362E770 STR X30, [X31 - 0x30]!
	0x0362E774 STP X22, X21, [X31 + 0x10]
	0x0362E778 STP X20, X19, [X31 + 0x20]
	0x0362E77C LDR X8, [X2 + 0x8]
	0x0362E780 STP X1, X2, [X0 + 0x20]
	0x0362E784 MOV X19, X0
	0x0362E788 MOV X20, X2
	0x0362E78C STR X8, [X0 + 0x10]
	0x0362E790 LDRB W22, [X2 + 0x52]
	0x0362E794 STR X0, [X0 + 0x40]
	0x0362E798 MOV X0, X2
	0x0362E79C MOV X21, X1
	0x0362E7A0 BL 0x1C16D84
	0x0362E7A4 TBZ X0, 0x0, 0x362E7BC
	0x0362E7A8 CMP W22, 0x2
	0x0362E7AC B.NE 0x362E7F8
	0x0362E7B0 ADRP X8, 0xFFFFFFFFFE597000
	0x0362E7B4 ADD X8, X8, 0xBE8
	0x0362E7B8 B 0x362E83C
	0x0362E7BC CMP W22, 0x1
	0x0362E7C0 B.NE 0x362E7F4
	0x0362E7C4 LDRB W8, [X19 + 0x70]
	0x0362E7C8 CBZ W8, 0x362E80C
	0x0362E7CC MOV X0, X20
	0x0362E7D0 BL 0x1C16D7C
	0x0362E7D4 MOV W21, W0
	0x0362E7D8 MOV X0, X20
	0x0362E7DC BL 0x1C17238
	0x0362E7E0 TBZ X21, 0x0, 0x362E818
	0x0362E7E4 TBZ X0, 0x0, 0x362E828
	0x0362E7E8 ADRP X8, 0xFFFFFFFFFE597000
	0x0362E7EC ADD X8, X8, 0xD04
	0x0362E7F0 B 0x362E83C
	0x0362E7F4 CBZ X21, 0x362E85C
	0x0362E7F8 LDR X8, [X19 + 0x10]
	0x0362E7FC LDR X9, [X19 + 0x20]
	0x0362E800 STR X8, [X19 + 0x18]
	0x0362E804 STR X9, [X19 + 0x40]
	0x0362E808 B 0x362E840
	0x0362E80C ADRP X8, 0xFFFFFFFFFE597000
	0x0362E810 ADD X8, X8, 0xBC4
	0x0362E814 B 0x362E83C
	0x0362E818 TBZ X0, 0x0, 0x362E834
	0x0362E81C ADRP X8, 0xFFFFFFFFFE597000
	0x0362E820 ADD X8, X8, 0xC2C
	0x0362E824 B 0x362E83C
	0x0362E828 ADRP X8, 0xFFFFFFFFFE597000
	0x0362E82C ADD X8, X8, 0xCB8
	0x0362E830 B 0x362E83C
	0x0362E834 ADRP X8, 0xFFFFFFFFFE597000
	0x0362E838 ADD X8, X8, 0xBFC
	0x0362E83C STR X8, [X19 + 0x18]
	0x0362E840 ADRP X8, 0xFFFFFFFFFE597000
	0x0362E844 ADD X8, X8, 0xB6C
	0x0362E848 STR X8, [X19 + 0x38]
	0x0362E84C LDP X20, X19, [X31 + 0x20]
	0x0362E850 LDP X22, X21, [X31 + 0x10]
	0x0362E854 LDR X30, [X31], #0x30
	0x0362E858 RET
	0x0362E85C ADRP X1, 0xFFFFFFFFFD4ED000
	0x0362E860 ADD X1, X1, 0xEE3
	0x0362E864 MOV X0, X31
	0x0362E868 BL 0x1C16F3C
	0x0362E86C MOV X1, X31
	0x0362E870 BL 0x1C16DEC
	0x0362E874 LDR X8, [X0 + 0x40]
	0x0362E878 LDR X4, [X0 + 0x18]
	0x0362E87C LDR X3, [X0 + 0x28]
	0x0362E880 MOV X0, X8
	0x0362E884 BR X4
	0x0362E888 STP X30, X21, [X31 - 0x20]!
	0x0362E88C STP X20, X19, [X31 + 0x10]
	0x0362E890 ADRP X21, 0xDB2000
	0x0362E894 ADRP X20, 0xB0D000
	0x0362E898 LDRB W8, [X21 + 0x504]
	0x0362E89C LDR X20, [X20 + 0x668]
	0x0362E8A0 MOV X19, X0
	0x0362E8A4 TBNZ X8, 0x0, 0x362E8D4
	0x0362E8A8 ADRP X0, 0xB0D000
	0x0362E8AC LDR X0, [X0 + 0x668]
	0x0362E8B0 BL 0x1C16CF4
	0x0362E8B4 ADRP X0, 0xACD000
	0x0362E8B8 LDR X0, [X0 + 0xC78]
	0x0362E8BC BL 0x1C16CF4
	0x0362E8C0 ADRP X0, 0xB0D000
	0x0362E8C4 LDR X0, [X0 + 0x670]
	0x0362E8C8 BL 0x1C16CF4
	0x0362E8CC MOVZ W8, 0x1
	0x0362E8D0 STRB W8, [X21 + 0x504]
	0x0362E8D4 LDR X0, [X20]
	0x0362E8D8 ADRP X21, 0xACD000
	0x0362E8DC ADRP X20, 0xB0D000
	0x0362E8E0 LDR W8, [X0 + 0xE0]
	0x0362E8E4 LDR X21, [X21 + 0xC78]
	0x0362E8E8 LDR X20, [X20 + 0x670]
	0x0362E8EC CBNZ W8, 0x362E8F4
	0x0362E8F0 BL 0x1C16DFC
	0x0362E8F4 MOV X0, X19
	0x0362E8F8 MOV X1, X31
	0x0362E8FC BL 0x36614E4
	0x0362E900 MOVZ X8, 0x40590000
	0x0362E904 MOVZ W9, 0x1
	0x0362E908 STRB W31, [X19 + 0x30]
	0x0362E90C STR X8, [X19 + 0x28]
	0x0362E910 STRB W9, [X19 + 0x40]
	0x0362E914 STURH W31, [X19 + 0x31]
	0x0362E918 LDR X0, [X21]
	0x0362E91C BL 0x1C16F10
	0x0362E920 LDR X2, [X20]
	0x0362E924 MOV X1, X19
	0x0362E928 MOV X3, X31
	0x0362E92C MOV X20, X0
	0x0362E930 BL 0x33ECC14
	0x0362E934 STR X20, [X19 + 0x60]
	0x0362E938 LDP X20, X19, [X31 + 0x10]
	0x0362E93C LDP X30, X21, [X31], #0x20
	0x0362E940 RET

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0xDB3000
	009 Move W8, [X22+1278]
	010 Move X19, X4
	011 Move X23, X3
	012 Move W24, W2
	013 Move W20, W1
	014 Move X21, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0xAFC000
	020 Move X0, [X0+4016]
	021 Call 0x1C17CF4
	022 Move X0, 0xAC8000
	023 Move X0, [X0+2600]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X22+1278], W8
	027 Subtract W22, W24, W20
	028 Move W8, 1
	029 Move [X23], W8
	030 Add X8, X21, W20
	031 NotImplemented "Instruction LDRH not yet implemented."
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Subtract W24, W24, 1
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Add X8, X8, 2
	036 Move X0, X31
	037 Move X1, X21
	038 Move W2, W20
	039 Move W3, W22
	040 Move X4, X31
	041 Call String.CreateString, X0, X1, X2, X3
	042 Compare X0, 0
	043 JumpIfEqual {82}
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X1, X31
	051 Move X30, [X31+64]
	052 Call String.ToLowerInvariant, X0
	053 Return X0
	054 Move X0, X31
	055 Move [X23], W31
	056 Move X8, 0xAFC000
	057 Move X8, [X8+4016]
	058 Move X0, [X8]
	059 Call 0x1C17F10
	060 Move X1, X31
	061 Move X23, X0
	062 Call IdnMapping..ctor, X0
	063 Move X8, 0xAC8000
	064 Move X8, [X8+2600]
	065 Move X0, [X8]
	066 Move W8, [X0+224]
	067 Compare W8, 0
	068 JumpIfNotEqual {70}
	069 Call 0x1C17DFC
	070 Move X0, X21
	071 Move W1, W20
	072 Move W2, W22
	073 Move X3, X31
	074 Call Uri.StripBidiControlCharacter, X0, X1, X2
	075 Move [X19], X0
	076 Compare X23, 0
	077 JumpIfEqual {90}
	078 Move X1, X0
	079 Move X0, X23
	080 Move X2, X31
	081 Call IdnMapping.GetAscii, X0, X1
	082 Move X20, [X31+48]
	083 Move X19, [X31+56]
	084 Move X22, [X31+32]
	085 Move X21, [X31+40]
	086 Move X24, [X31+16]
	087 Move X23, [X31+24]
	088 Move X30, [X31+64]
	089 Return X0
	090 Call 0x1C17F20
	091 Move X19, X0
	092 NotImplemented "Instruction CMP not yet implemented."
	093 Move X0, X19
	094 Call 0x3EB2AD0
	095 Move X19, X0
	096 Move X0, 0xACE000
	097 Move X0, [X0+1400]
	098 Call 0x1C17D08
	099 Move X8, [X19]
	100 Move X1, [X8]
	101 Call 0x1C18270
	102 Move TEMP, X0
	103 And TEMP, TEMP, 1
	104 Compare TEMP, 1
	105 JumpIfNotEqual {126}
	106 Call 0x3EB2AE0
	107 Move X0, 0xB0E000
	108 Move X0, [X0+1608]
	109 Call 0x1C17D08
	110 Move X1, X31
	111 Call SR.GetString, X0
	112 Move X19, X0
	113 Move X0, 0xB0E000
	114 Move X0, [X0+216]
	115 Call 0x1C17D08
	116 Call 0x1C17F10
	117 Move X1, X19
	118 Move X20, X0
	119 Call UriFormatException..ctor, X0, X1
	120 Move X0, 0xB0E000
	121 Move X0, [X0+1616]
	122 Call 0x1C17D08
	123 Move X1, X0
	124 Move X0, X20
	125 Call 0x1C17DEC
	126 Move W0, 8
	127 Call 0x3EB2AF0
	128 Move X8, [X19]
	129 Move [X0], X8
	130 Move X1, 0x887000
	131 Add X1, X1, 3672
	132 Move X2, X31
	133 Call 0x3EB2B00
	134 Move X19, X0
	135 Call 0x3EB2AE0
	136 Move X0, X19
	137 Call 0x1D2D690
	138 Call 0x1991590

Method: System.Boolean IsIdnAce(System.String input, System.Int32 index)

Disassembly:
	0x0362E990 ADRP X0, 0xAC5000
	0x0362E994 LDR X0, [X0 + 0x9D0]
	0x0362E998 BL 0x1C16D08
	0x0362E99C MOVZ W1, 0x2
	0x0362E9A0 BL 0x1C16D6C
	0x0362E9A4 MOV X19, X0
	0x0362E9A8 BL 0x19903C0
	0x0362E9AC ADRP X20, 0xB0D000
	0x0362E9B0 LDR X20, [X20 + 0x678]
	0x0362E9B4 MOV X0, X20
	0x0362E9B8 BL 0x1C16D08
	0x0362E9BC MOV X1, X0
	0x0362E9C0 MOV X0, X19
	0x0362E9C4 BL 0x19980B4
	0x0362E9C8 MOV X0, X20
	0x0362E9CC BL 0x1C16D08
	0x0362E9D0 MOV X2, X0
	0x0362E9D4 MOV X0, X19
	0x0362E9D8 MOV X1, X31
	0x0362E9DC BL 0x1993444
	0x0362E9E0 STR D8, [X31 + 0x8]
	0x0362E9E4 ADRP X0, 0xAC8000
	0x0362E9E8 LDR X0, [X0 + 0x978]
	0x0362E9EC BL 0x1C16D08
	0x0362E9F0 ADD X1, X31, 0x8
	0x0362E9F4 BL 0x1C16E04
	0x0362E9F8 MOV X20, X0
	0x0362E9FC MOV X0, X19
	0x0362EA00 BL 0x19903C0
	0x0362EA04 MOV X0, X19
	0x0362EA08 MOV X1, X20
	0x0362EA0C BL 0x19980B4
	0x0362EA10 MOVZ W1, 0x1
	0x0362EA14 MOV X0, X19
	0x0362EA18 MOV X2, X20
	0x0362EA1C BL 0x1993444
	0x0362EA20 ADRP X0, 0xB0D000
	0x0362EA24 LDR X0, [X0 + 0x680]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Compare X0, 0
	005 JumpIfEqual {36}
	006 Move X2, X31
	007 Move W20, W1
	008 Move X19, X0
	009 Call String.get_Chars, X0, X1
	010 And W8, W0, 0xFFFF
	011 NotImplemented "Instruction CMP not yet implemented."
	012 Add W1, W20, 1
	013 Move X0, X19
	014 Move X2, X31
	015 Call String.get_Chars, X0, X1
	016 And W8, W0, 0xFFFF
	017 NotImplemented "Instruction CMP not yet implemented."
	018 Add W1, W20, 2
	019 Move X0, X19
	020 Move X2, X31
	021 Call String.get_Chars, X0, X1
	022 And W8, W0, 0xFFFF
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Add W1, W20, 3
	025 Move X0, X19
	026 Move X2, X31
	027 Call String.get_Chars, X0, X1
	028 And W8, W0, 0xFFFF
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move W0, 1
	031 Move W0, W31
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X30, [X31+32]
	035 Return X0
	036 Call 0x1C17F20

Method: System.Boolean IsIdnAce(System.Char* input, System.Int32 index)

Disassembly:
	0x0362E944 SUB X31, X31, 0x30
	0x0362E948 STR D8, [X31 + 0x10]
	0x0362E94C STR X30, [X31 + 0x18]
	0x0362E950 STP X20, X19, [X31 + 0x20]
	0x0362E954 MOV V8.16B, V0.16B
	0x0362E958 MOV X19, X0
	0x0362E95C BL 0x362E888
	0x0362E960 FCMP D8, 0x0
	0x0362E964 B.LS 0x362E990
	0x0362E968 MOVZ W0, 0x1
	0x0362E96C MOV V0.16B, V8.16B
	0x0362E970 BL 0x362EA74
	0x0362E974 SCVTF D0, W0
	0x0362E978 STR D0, [X19 + 0x28]
	0x0362E97C LDP X20, X19, [X31 + 0x20]
	0x0362E980 LDR X30, [X31 + 0x18]
	0x0362E984 LDR V8, [X31 + 0x10]
	0x0362E988 ADD X31, X31, 0x30
	0x0362E98C RET

ISIL:
	001 NotImplemented "Instruction LDRH not yet implemented."
	002 NotImplemented "Instruction CMP not yet implemented."
	003 Add W8, W1, 1
	004 NotImplemented "Instruction LDRH not yet implemented."
	005 NotImplemented "Instruction CMP not yet implemented."
	006 Add W8, W1, 2
	007 NotImplemented "Instruction LDRH not yet implemented."
	008 NotImplemented "Instruction CMP not yet implemented."
	009 Add W8, W1, 3
	010 NotImplemented "Instruction LDRH not yet implemented."
	011 NotImplemented "Instruction CMP not yet implemented."
	012 Move W0, 1
	013 Return X0
	014 Move W0, W31
	015 Return X0

Method: System.String UnicodeEquivalent(System.String idnHost, System.Char* hostname, System.Int32 start, System.Int32 end)

Disassembly:
	0x0362EA28 BL 0x1C16D08
	0x0362EA2C MOV X1, X19
	0x0362EA30 MOV X2, X31
	0x0362EA34 BL 0x320A16C
	0x0362EA38 MOV X19, X0
	0x0362EA3C ADRP X0, 0xACD000
	0x0362EA40 LDR X0, [X0 + 0x578]
	0x0362EA44 BL 0x1C16D08
	0x0362EA48 BL 0x1C16F10
	0x0362EA4C MOV X1, X19
	0x0362EA50 MOV X2, X31
	0x0362EA54 MOV X20, X0
	0x0362EA58 BL 0x3314A68
	0x0362EA5C ADRP X0, 0xB0D000
	0x0362EA60 LDR X0, [X0 + 0x688]
	0x0362EA64 BL 0x1C16D08
	0x0362EA68 MOV X1, X0
	0x0362EA6C MOV X0, X20
	0x0362EA70 BL 0x1C16DEC
	0x0362EA74 STR D8, [X31 - 0x30]!
	0x0362EA78 STP X30, X21, [X31 + 0x10]
	0x0362EA7C STP X20, X19, [X31 + 0x20]
	0x0362EA80 ADRP X20, 0xDB2000
	0x0362EA84 ADRP X21, 0xAC5000
	0x0362EA88 LDRB W8, [X20 + 0x506]
	0x0362EA8C LDR X21, [X21 + 0x5A8]
	0x0362EA90 MOV W19, W0
	0x0362EA94 MOV V8.16B, V0.16B
	0x0362EA98 TBNZ X8, 0x0, 0x362EAB0
	0x0362EA9C ADRP X0, 0xAC5000
	0x0362EAA0 LDR X0, [X0 + 0x5A8]
	0x0362EAA4 BL 0x1C16CF4
	0x0362EAA8 MOVZ W8, 0x1
	0x0362EAAC STRB W8, [X20 + 0x506]
	0x0362EAB0 LDR X0, [X21]
	0x0362EAB4 LDR W8, [X0 + 0xE0]
	0x0362EAB8 CBNZ W8, 0x362EAC0
	0x0362EABC BL 0x1C16DFC
	0x0362EAC0 ADRP X8, 0xFFFFFFFFFD4BF000
	0x0362EAC4 LDR V1, [X8 + 0xAB8]
	0x0362EAC8 FRINTP D0, D8
	0x0362EACC FCMP D0, D1
	0x0362EAD0 B.GT 0x362EB04
	0x0362EAD4 FCMP D0, 0x0
	0x0362EAD8 B.LS 0x362EB04
	0x0362EADC MOVZ X8, 0x7FF00000
	0x0362EAE0 LDP X20, X19, [X31 + 0x20]
	0x0362EAE4 LDP X30, X21, [X31 + 0x10]
	0x0362EAE8 FMOV D1, X8
	0x0362EAEC FCVTZS W9, D0
	0x0362EAF0 FCMP D0, D1
	0x0362EAF4 MOVZ W8, 0x80000000
	0x0362EAF8 CSEL W0, W8, W9, EQ
	0x0362EAFC LDR V8, [X31], #0x30
	0x0362EB00 RET
	0x0362EB04 ADRP X0, 0xAC5000
	0x0362EB08 LDR X0, [X0 + 0x9D0]
	0x0362EB0C MOV W20, W19
	0x0362EB10 BL 0x1C16D08
	0x0362EB14 MOVZ W1, 0x2
	0x0362EB18 BL 0x1C16D6C
	0x0362EB1C CBNZ X0, 0x362EB24
	0x0362EB20 BL 0x1C16F20
	0x0362EB24 MOV X19, X0
	0x0362EB28 ADRP X0, 0xB0D000
	0x0362EB2C LDR X0, [X0 + 0x678]
	0x0362EB30 BL 0x1C16D08
	0x0362EB34 CBZ X0, 0x362EB54
	0x0362EB38 LDR X8, [X19]
	0x0362EB3C LDR X1, [X8 + 0x40]
	0x0362EB40 BL 0x1C16E00

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0xDB3000
	009 Move X24, 0xAFC000
	010 Move W8, [X23+1279]
	011 Move X24, [X24+4016]
	012 Move W19, W3
	013 Move W20, W2
	014 Move X21, X1
	015 Move X22, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0xAFC000
	021 Move X0, [X0+4016]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X23+1279], W8
	025 Move X0, [X24]
	026 Call 0x1C17F10
	027 Move X1, X31
	028 Move X23, X0
	029 Call IdnMapping..ctor, X0
	030 Compare X23, 0
	031 JumpIfEqual {44}
	032 Move X0, X23
	033 Move X1, X22
	034 Move X2, X31
	035 Call IdnMapping.GetUnicode, X0, X1
	036 Move X20, [X31+48]
	037 Move X19, [X31+56]
	038 Move X22, [X31+32]
	039 Move X21, [X31+40]
	040 Move X24, [X31+16]
	041 Move X23, [X31+24]
	042 Move X30, [X31+64]
	043 Return X0
	044 Call 0x1C17F20
	045 Move X22, X0
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Move X0, X22
	048 Call 0x3EB2AD0
	049 Move X22, X0
	050 Move X0, 0xACE000
	051 Move X0, [X0+1400]
	052 Call 0x1C17D08
	053 Move X8, [X22]
	054 Move X1, [X8]
	055 Call 0x1C18270
	056 Move TEMP, X0
	057 And TEMP, TEMP, 1
	058 Compare TEMP, 1
	059 JumpIfNotEqual {69}
	060 Call 0x3EB2AE0
	061 Move W8, 1
	062 Add X3, X31, 12
	063 Add X4, X31, 12
	064 Move X0, X21
	065 Move W1, W20
	066 Move W2, W19
	067 Move [X31+12], W8
	068 Call DomainNameHelper.UnicodeEquivalent, X0, X1, X2, X3, X4
	069 Move W0, 8
	070 Call 0x3EB2AF0
	071 Move X8, [X22]
	072 Move [X0], X8
	073 Move X1, 0x887000
	074 Add X1, X1, 3672
	075 Move X2, X31
	076 Call 0x3EB2B00
	077 Move X22, X0
	078 Call 0x3EB2AE0
	079 Move X0, X22
	080 Call 0x1D2D690
	081 Call 0x1991590

Method: System.String UnicodeEquivalent(System.Char* hostname, System.Int32 start, System.Int32 end, ref System.Boolean allAscii, ref System.Boolean atLeastOneValidIdn)

Disassembly:
	0x0362EB44 CBNZ X0, 0x362EB54
	0x0362EB48 BL 0x1C16F44
	0x0362EB4C MOV X1, X31
	0x0362EB50 BL 0x1C16DEC
	0x0362EB54 ADRP X0, 0xB0D000
	0x0362EB58 LDR X0, [X0 + 0x678]
	0x0362EB5C BL 0x1C16D08
	0x0362EB60 LDR W8, [X19 + 0x18]
	0x0362EB64 CBNZ W8, 0x362EB6C
	0x0362EB68 BL 0x1C16F28
	0x0362EB6C STR X0, [X19 + 0x20]
	0x0362EB70 TBZ X20, 0x0, 0x362EBF4
	0x0362EB74 STR D8, [X31 + 0x8]
	0x0362EB78 ADRP X0, 0xAC8000
	0x0362EB7C LDR X0, [X0 + 0x978]
	0x0362EB80 BL 0x1C16D08
	0x0362EB84 ADD X1, X31, 0x8
	0x0362EB88 BL 0x1C16E04
	0x0362EB8C MOV X20, X0
	0x0362EB90 MOV X0, X19
	0x0362EB94 BL 0x19903C0
	0x0362EB98 MOV X0, X19
	0x0362EB9C MOV X1, X20
	0x0362EBA0 BL 0x19980B4
	0x0362EBA4 MOVZ W1, 0x1
	0x0362EBA8 MOV X0, X19
	0x0362EBAC MOV X2, X20
	0x0362EBB0 BL 0x1993444
	0x0362EBB4 ADRP X0, 0xB0D000
	0x0362EBB8 LDR X0, [X0 + 0x680]
	0x0362EBBC BL 0x1C16D08
	0x0362EBC0 MOV X1, X19
	0x0362EBC4 MOV X2, X31
	0x0362EBC8 BL 0x320A16C
	0x0362EBCC MOV X19, X0
	0x0362EBD0 ADRP X0, 0xACD000
	0x0362EBD4 LDR X0, [X0 + 0x578]
	0x0362EBD8 BL 0x1C16D08
	0x0362EBDC BL 0x1C16F10
	0x0362EBE0 MOV X1, X19
	0x0362EBE4 MOV X2, X31
	0x0362EBE8 MOV X20, X0
	0x0362EBEC BL 0x3314A68
	0x0362EBF0 B 0x362EC70
	0x0362EBF4 STR D8, [X31 + 0x8]
	0x0362EBF8 ADRP X0, 0xAC8000
	0x0362EBFC LDR X0, [X0 + 0x978]
	0x0362EC00 BL 0x1C16D08
	0x0362EC04 ADD X1, X31, 0x8
	0x0362EC08 BL 0x1C16E04
	0x0362EC0C MOV X20, X0
	0x0362EC10 MOV X0, X19
	0x0362EC14 BL 0x19903C0
	0x0362EC18 MOV X0, X19
	0x0362EC1C MOV X1, X20
	0x0362EC20 BL 0x19980B4
	0x0362EC24 MOVZ W1, 0x1
	0x0362EC28 MOV X0, X19
	0x0362EC2C MOV X2, X20
	0x0362EC30 BL 0x1993444
	0x0362EC34 ADRP X0, 0xB0D000
	0x0362EC38 LDR X0, [X0 + 0x680]
	0x0362EC3C BL 0x1C16D08
	0x0362EC40 MOV X1, X19
	0x0362EC44 MOV X2, X31
	0x0362EC48 BL 0x320A16C
	0x0362EC4C MOV X19, X0
	0x0362EC50 ADRP X0, 0xACD000
	0x0362EC54 LDR X0, [X0 + 0x760]
	0x0362EC58 BL 0x1C16D08
	0x0362EC5C BL 0x1C16F10
	0x0362EC60 MOV X1, X19
	0x0362EC64 MOV X2, X31
	0x0362EC68 MOV X20, X0
	0x0362EC6C BL 0x3316014
	0x0362EC70 ADRP X0, 0xB0D000
	0x0362EC74 LDR X0, [X0 + 0x690]
	0x0362EC78 BL 0x1C16D08
	0x0362EC7C MOV X1, X0
	0x0362EC80 MOV X0, X20
	0x0362EC84 BL 0x1C16DEC
	0x0362EC88 STR X30, [X31 - 0x40]!
	0x0362EC8C STP X24, X23, [X31 + 0x10]
	0x0362EC90 STP X22, X21, [X31 + 0x20]
	0x0362EC94 STP X20, X19, [X31 + 0x30]
	0x0362EC98 ADRP X22, 0xDB2000
	0x0362EC9C LDRB W8, [X22 + 0x505]
	0x0362ECA0 MOV W20, W1
	0x0362ECA4 MOV X19, X0
	0x0362ECA8 AND W21, W1, 0x1
	0x0362ECAC TBNZ X8, 0x0, 0x362ECD0
	0x0362ECB0 ADRP X0, 0xACB000
	0x0362ECB4 LDR X0, [X0 + 0xCC0]
	0x0362ECB8 BL 0x1C16CF4
	0x0362ECBC ADRP X0, 0xACD000
	0x0362ECC0 LDR X0, [X0 + 0xC80]
	0x0362ECC4 BL 0x1C16CF4
	0x0362ECC8 MOVZ W8, 0x1
	0x0362ECCC STRB W8, [X22 + 0x505]
	0x0362ECD0 MOV X0, X19
	0x0362ECD4 MOV X1, X31
	0x0362ECD8 BL 0x3661304
	0x0362ECDC TBZ X0, 0x0, 0x362ECEC
	0x0362ECE0 STRB W21, [X19 + 0x32]
	0x0362ECE4 STRB W21, [X19 + 0x30]
	0x0362ECE8 B 0x362ED08
	0x0362ECEC LDRB W8, [X19 + 0x31]
	0x0362ECF0 CBZ W8, 0x362ECFC
	0x0362ECF4 STRB W21, [X19 + 0x32]
	0x0362ECF8 B 0x362ED08
	0x0362ECFC LDRB W8, [X19 + 0x30]
	0x0362ED00 CMP W8, W21
	0x0362ED04 B.NE 0x362ED1C
	0x0362ED08 LDP X20, X19, [X31 + 0x30]
	0x0362ED0C LDP X22, X21, [X31 + 0x20]
	0x0362ED10 LDP X24, X23, [X31 + 0x10]
	0x0362ED14 LDR X30, [X31], #0x40
	0x0362ED18 RET
	0x0362ED1C TBZ X20, 0x0, 0x362ED44
	0x0362ED20 LDR X8, [X19 + 0x58]
	0x0362ED24 STRB W21, [X19 + 0x30]
	0x0362ED28 CBZ X8, 0x362ED60
	0x0362ED2C MOV X0, X19
	0x0362ED30 LDP X20, X19, [X31 + 0x30]
	0x0362ED34 LDP X22, X21, [X31 + 0x20]
	0x0362ED38 LDP X24, X23, [X31 + 0x10]
	0x0362ED3C LDR X30, [X31], #0x40
	0x0362ED40 B 0x362EE40
	0x0362ED44 LDR X0, [X19 + 0x58]
	0x0362ED48 CBZ X0, 0x362ECE4
	0x0362ED4C MOV X1, X31
	0x0362ED50 STR X31, [X19 + 0x68]
	0x0362ED54 BL 0x33EBF78
	0x0362ED58 STR X31, [X19 + 0x58]
	0x0362ED5C B 0x362ECE4
	0x0362ED60 LDRB W8, [X19 + 0x50]
	0x0362ED64 CBNZ W8, 0x362EDE0
	0x0362ED68 LDR V0, [X19 + 0x28]
	0x0362ED6C MOV W0, W31
	0x0362ED70 BL 0x362EA74
	0x0362ED74 ADRP X8, 0xACB000
	0x0362ED78 LDR X8, [X8 + 0xCC0]
	0x0362ED7C MOV W20, W0
	0x0362ED80 LDR X8, [X8]
	0x0362ED84 MOV X0, X8
	0x0362ED88 BL 0x1C16F10
	0x0362ED8C MOV X1, X31
	0x0362ED90 MOV X21, X0
	0x0362ED94 BL 0x33BDD8C
	0x0362ED98 STR X21, [X19 + 0x68]
	0x0362ED9C ADRP X9, 0xACD000
	0x0362EDA0 LDR X22, [X19 + 0x60]
	0x0362EDA4 LDRB W8, [X19 + 0x40]
	0x0362EDA8 LDR X9, [X9 + 0xC80]
	0x0362EDAC CMP W8, 0x0
	0x0362EDB0 LDR X0, [X9]
	0x0362EDB4 CSINV W23, W20, W31, NE
	0x0362EDB8 BL 0x1C16F10
	0x0362EDBC MOV X1, X22
	0x0362EDC0 MOV X2, X21
	0x0362EDC4 MOV W3, W20
	0x0362EDC8 MOV W4, W23
	0x0362EDCC MOV X5, X31
	0x0362EDD0 MOV X24, X0
	0x0362EDD4 BL 0x33EBB48
	0x0362EDD8 STR X24, [X19 + 0x58]
	0x0362EDDC B 0x362ED08
	0x0362EDE0 MOV X0, X19
	0x0362EDE4 MOV X1, X31
	0x0362EDE8 BL 0x33BE520
	0x0362EDEC MOV X19, X0
	0x0362EDF0 BL 0x19903C0
	0x0362EDF4 LDR X8, [X19]
	0x0362EDF8 MOV X0, X19
	0x0362EDFC LDP X9, X1, [X8 + 0x1A8]
	0x0362EE00 BLR X9
	0x0362EE04 MOV X19, X0
	0x0362EE08 ADRP X0, 0xAEE000
	0x0362EE0C LDR X0, [X0 + 0x4B8]
	0x0362EE10 BL 0x1C16D08
	0x0362EE14 BL 0x1C16F10
	0x0362EE18 MOV X1, X19
	0x0362EE1C MOV X2, X31
	0x0362EE20 MOV X20, X0
	0x0362EE24 BL 0x338C448
	0x0362EE28 ADRP X0, 0xB0D000
	0x0362EE2C LDR X0, [X0 + 0x698]
	0x0362EE30 BL 0x1C16D08
	0x0362EE34 MOV X1, X0
	0x0362EE38 MOV X0, X20
	0x0362EE3C BL 0x1C16DEC
	0x0362EE40 STP X30, X19, [X31 - 0x10]!
	0x0362EE44 LDR V0, [X0 + 0x28]
	0x0362EE48 MOV X19, X0
	0x0362EE4C MOV W0, W31
	0x0362EE50 BL 0x362EA74
	0x0362EE54 LDR X8, [X19 + 0x58]
	0x0362EE58 CBZ X8, 0x362EE7C
	0x0362EE5C LDRB W9, [X19 + 0x40]
	0x0362EE60 MOV W1, W0
	0x0362EE64 MOV X3, X31
	0x0362EE68 CMP W9, 0x0
	0x0362EE6C CSINV W2, W0, W31, NE
	0x0362EE70 MOV X0, X8
	0x0362EE74 LDP X30, X19, [X31], #0x10
	0x0362EE78 B 0x33EBEA0
	0x0362EE7C BL 0x1C16F20
	0x0362EE80 STP X30, X21, [X31 - 0x20]!
	0x0362EE84 STP X20, X19, [X31 + 0x10]
	0x0362EE88 ADRP X21, 0xDB2000
	0x0362EE8C LDRB W8, [X21 + 0x507]
	0x0362EE90 MOV X20, X1
	0x0362EE94 MOV X19, X0
	0x0362EE98 TBNZ X8, 0x0, 0x362EEB0
	0x0362EE9C ADRP X0, 0xAF0000
	0x0362EEA0 LDR X0, [X0 + 0xEE8]
	0x0362EEA4 BL 0x1C16CF4
	0x0362EEA8 MOVZ W8, 0x1
	0x0362EEAC STRB W8, [X21 + 0x507]
	0x0362EEB0 LDR X0, [X19 + 0x38]
	0x0362EEB4 MOV X1, X20
	0x0362EEB8 MOV X2, X31
	0x0362EEBC BL 0x33C0DE4
	0x0362EEC0 CBZ X0, 0x362EEF0
	0x0362EEC4 ADRP X8, 0xAF0000
	0x0362EEC8 LDR X8, [X8 + 0xEE8]
	0x0362EECC LDR X1, [X8]
	0x0362EED0 LDR X8, [X0]
	0x0362EED4 CMP X8, X1
	0x0362EED8 B.NE 0x362EEEC
	0x0362EEDC STR X0, [X19 + 0x38]
	0x0362EEE0 LDR X8, [X0]
	0x0362EEE4 CMP X8, X1
	0x0362EEE8 B.EQ 0x362EEF4
	0x0362EEEC BL 0x1C171E0
	0x0362EEF0 STR X0, [X19 + 0x38]
	0x0362EEF4 LDP X20, X19, [X31 + 0x10]
	0x0362EEF8 LDP X30, X21, [X31], #0x20
	0x0362EEFC RET
	0x0362EF00 STP X30, X21, [X31 - 0x20]!
	0x0362EF04 STP X20, X19, [X31 + 0x10]
	0x0362EF08 ADRP X21, 0xDB2000
	0x0362EF0C LDRB W8, [X21 + 0x508]
	0x0362EF10 MOV X20, X1
	0x0362EF14 MOV X19, X0
	0x0362EF18 TBNZ X8, 0x0, 0x362EF30
	0x0362EF1C ADRP X0, 0xAF0000
	0x0362EF20 LDR X0, [X0 + 0xEE8]
	0x0362EF24 BL 0x1C16CF4
	0x0362EF28 MOVZ W8, 0x1
	0x0362EF2C STRB W8, [X21 + 0x508]
	0x0362EF30 LDR X0, [X19 + 0x38]
	0x0362EF34 MOV X1, X20
	0x0362EF38 MOV X2, X31
	0x0362EF3C BL 0x33C0FDC
	0x0362EF40 CBZ X0, 0x362EF70
	0x0362EF44 ADRP X8, 0xAF0000
	0x0362EF48 LDR X8, [X8 + 0xEE8]
	0x0362EF4C LDR X1, [X8]
	0x0362EF50 LDR X8, [X0]
	0x0362EF54 CMP X8, X1
	0x0362EF58 B.NE 0x362EF6C
	0x0362EF5C STR X0, [X19 + 0x38]
	0x0362EF60 LDR X8, [X0]
	0x0362EF64 CMP X8, X1
	0x0362EF68 B.EQ 0x362EF74
	0x0362EF6C BL 0x1C171E0
	0x0362EF70 STR X0, [X19 + 0x38]
	0x0362EF74 LDP X20, X19, [X31 + 0x10]
	0x0362EF78 LDP X30, X21, [X31], #0x20
	0x0362EF7C RET
	0x0362EF80 STP X30, X23, [X31 - 0x30]!
	0x0362EF84 STP X22, X21, [X31 + 0x10]
	0x0362EF88 STP X20, X19, [X31 + 0x20]
	0x0362EF8C ADRP X20, 0xDB2000
	0x0362EF90 LDRB W8, [X20 + 0x509]
	0x0362EF94 MOV X19, X0
	0x0362EF98 TBNZ X8, 0x0, 0x362EFD4
	0x0362EF9C ADRP X0, 0xB0D000

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move [X31], X4
	015 Move X19, 0xDB3000
	016 Move X21, 0xAFC000
	017 Move W8, [X19+1280]
	018 Move X21, [X21+4016]
	019 Move X20, X3
	020 Move W24, W2
	021 Move W22, W1
	022 Move X23, X0
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {38}
	027 Move X0, 0xAFC000
	028 Move X0, [X0+4016]
	029 Call 0x1C17CF4
	030 Move X0, 0xAC8000
	031 Move X0, [X0+2600]
	032 Call 0x1C17CF4
	033 Move X0, 0xACF000
	034 Move X0, [X0+1936]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X19+1280], W8
	038 Move X0, [X21]
	039 Call 0x1C17F10
	040 Move X1, X31
	041 Move [X31+8], X0
	042 Call IdnMapping..ctor, X0
	043 Move W8, 1
	044 Move [X20], W8
	045 Move X8, [X31]
	046 Move X25, X31
	047 Subtract W24, W24, W22
	048 Move [X8], W31
	049 Move X8, 0xAC8000
	050 Move X8, [X8+2600]
	051 Move X0, [X8]
	052 Move W8, [X0+224]
	053 Compare W8, 0
	054 JumpIfNotEqual {56}
	055 Call 0x1C17DFC
	056 Move X0, X23
	057 Move W1, W22
	058 Move W2, W24
	059 Move X3, X31
	060 Call Uri.StripBidiControlCharacter, X0, X1, X2
	061 Compare X0, 0
	062 JumpIfEqual {236}
	063 Move W29, [X0+16]
	064 Move X22, X0
	065 Move W26, W31
	066 Move X25, X31
	067 Move W23, 0xFF0D
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Move W27, W31
	070 Move W21, W31
	071 Move W19, 1
	072 Move W24, W26
	073 Move W28, 1
	074 Move X0, X22
	075 Move W1, W24
	076 Move X2, X31
	077 Call String.get_Chars, X0, X1
	078 Move TEMP, X21
	079 And TEMP, TEMP, 1
	080 Compare TEMP, 1
	081 JumpIfNotEqual {94}
	082 And W8, W0, 0xFFFF
	083 NotImplemented "Instruction CMP not yet implemented."
	084 Xor W9, W28, 1
	085 Move TEMP, X9
	086 And TEMP, TEMP, 1
	087 Compare TEMP, 1
	088 JumpIfEqual {91}
	089 Move W28, W31
	090 Move [X20], W31
	091 NotImplemented "Instruction CMP not yet implemented."
	092 NotImplemented "Instruction CMP not yet implemented."
	093 Move W9, 0x3002
	094 Add W8, W24, 3
	095 NotImplemented "Instruction CMP not yet implemented."
	096 And W8, W0, 0xFFFF
	097 NotImplemented "Instruction CMP not yet implemented."
	098 Move X0, X22
	099 Move W1, W24
	100 Call DomainNameHelper.IsIdnAce, X0, X1
	101 Or W27, W27, W0
	102 Move W9, 0xFF0E
	103 NotImplemented "Instruction CMP not yet implemented."
	104 Move W9, 0xFF61
	105 NotImplemented "Instruction CMP not yet implemented."
	106 Add W24, W24, 1
	107 NotImplemented "Instruction CMP not yet implemented."
	108 NotImplemented "Instruction CSET not yet implemented."
	109 NotImplemented "Instruction CMP not yet implemented."
	110 Move W21, 1
	111 Move W24, W29
	112 Move TEMP, X28
	113 And TEMP, TEMP, 1
	114 Compare TEMP, 1
	115 JumpIfNotEqual {164}
	116 Move TEMP, X27
	117 And TEMP, TEMP, 1
	118 Compare TEMP, 1
	119 JumpIfNotEqual {154}
	120 Subtract W27, W24, W26
	121 Move X0, X22
	122 Move W1, W26
	123 Move W2, W27
	124 Move X3, X31
	125 Call String.Substring, X0, X1, X2
	126 Move X1, X0
	127 Move X0, [X31+8]
	128 Compare X0, 0
	129 JumpIfEqual {201}
	130 Move X2, X31
	131 Call IdnMapping.GetUnicode, X0, X1
	132 Move X1, X0
	133 Move X0, X25
	134 Move X2, X31
	135 Call String.Concat, X0, X1
	136 Move X28, X0
	137 Move TEMP, X19
	138 And TEMP, TEMP, 1
	139 Compare TEMP, 1
	140 JumpIfNotEqual {148}
	141 Move X8, 0xACF000
	142 Move X8, [X8+1936]
	143 Move X1, [X8]
	144 Move X0, X28
	145 Move X2, X31
	146 Call String.Concat, X0, X1
	147 Move X28, X0
	148 Move X8, [X31]
	149 Move W9, 1
	150 Move X25, X28
	151 Move [X8], W9
	152 Move W19, W31
	153 Move W24, W26
	154 Subtract W27, W24, W26
	155 Move X0, X22
	156 Move W1, W26
	157 Move W2, W27
	158 Move X3, X31
	159 Call String.Substring, X0, X1, X2
	160 Compare X0, 0
	161 JumpIfEqual {236}
	162 Move X1, X31
	163 Call String.ToLowerInvariant, X0
	164 Subtract W2, W24, W26
	165 Move X0, X22
	166 Move W1, W26
	167 Move X3, X31
	168 Call String.Substring, X0, X1, X2
	169 Move X21, [X31+8]
	170 Compare X21, 0
	171 JumpIfEqual {237}
	172 Move X1, X0
	173 Move X0, X21
	174 Move X2, X31
	175 Call IdnMapping.GetAscii, X0, X1
	176 Move X1, X0
	177 Move X0, X21
	178 Move X2, X31
	179 Call IdnMapping.GetUnicode, X0, X1
	180 Move X1, X0
	181 Move X0, X25
	182 Move X2, X31
	183 Call String.Concat, X0, X1
	184 Move X25, X0
	185 Move TEMP, X19
	186 And TEMP, TEMP, 1
	187 Compare TEMP, 1
	188 JumpIfNotEqual {197}
	189 Move X8, 0xACF000
	190 Move X8, [X8+1936]
	191 Move X0, X25
	192 Move X2, X31
	193 Move X1, [X8]
	194 Call String.Concat, X0, X1
	195 Move X25, X0
	196 Move W19, 1
	197 Move W19, W31
	198 And W8, W19, 1
	199 Add W26, W24, W8
	200 NotImplemented "Instruction CMP not yet implemented."
	201 Call 0x1C17F20
	202 Move X25, X28
	203 Move X28, X0
	204 Move W19, 1
	205 Move X28, X0
	206 NotImplemented "Instruction CMP not yet implemented."
	207 Move X0, X28
	208 Call 0x3EB2AD0
	209 Move X28, X0
	210 Move X0, 0xACE000
	211 Move X0, [X0+1400]
	212 Call 0x1C17D08
	213 Move X8, [X28]
	214 Move X1, [X8]
	215 Call 0x1C18270
	216 Move TEMP, X0
	217 And TEMP, TEMP, 1
	218 Compare TEMP, 1
	219 JumpIfNotEqual {238}
	220 Call 0x3EB2AE0
	221 Move X0, X25
	222 Move X20, [X31+96]
	223 Move X19, [X31+104]
	224 Move X22, [X31+80]
	225 Move X21, [X31+88]
	226 Move X24, [X31+64]
	227 Move X23, [X31+72]
	228 Move X26, [X31+48]
	229 Move X25, [X31+56]
	230 Move X28, [X31+32]
	231 Move X27, [X31+40]
	232 Move X29, [X31+16]
	233 Move X30, [X31+24]
	234 Add X31, X31, 112
	235 Return X0
	236 Call 0x1C17F20
	237 Call 0x1C17F20
	238 Move W0, 8
	239 Call 0x3EB2AF0
	240 Move X8, [X28]
	241 Move [X0], X8
	242 Move X1, 0x887000
	243 Add X1, X1, 3672
	244 Move X2, X31
	245 Call 0x3EB2B00
	246 Move X28, X0
	247 Call 0x3EB2AE0
	248 Move X28, X0
	249 NotImplemented "Instruction CMP not yet implemented."
	250 Move X0, X28
	251 Call 0x3EB2AD0
	252 Move X19, X0
	253 Move X0, 0xACE000
	254 Move X0, [X0+1400]
	255 Call 0x1C17D08
	256 Move X8, [X19]
	257 Move X1, [X8]
	258 Call 0x1C18270
	259 Move TEMP, X0
	260 And TEMP, TEMP, 1
	261 Compare TEMP, 1
	262 JumpIfNotEqual {283}
	263 Call 0x3EB2AE0
	264 Move X0, 0xB0E000
	265 Move X0, [X0+1608]
	266 Call 0x1C17D08
	267 Move X1, X31
	268 Call SR.GetString, X0
	269 Move X19, X0
	270 Move X0, 0xB0E000
	271 Move X0, [X0+216]
	272 Call 0x1C17D08
	273 Call 0x1C17F10
	274 Move X1, X19
	275 Move X20, X0
	276 Call UriFormatException..ctor, X0, X1
	277 Move X0, 0xB0E000
	278 Move X0, [X0+1624]
	279 Call 0x1C17D08
	280 Move X1, X0
	281 Move X0, X20
	282 Call 0x1C17DEC
	283 Move W0, 8
	284 Call 0x3EB2AF0
	285 Move X8, [X19]
	286 Move [X0], X8
	287 Move X1, 0x887000
	288 Add X1, X1, 3672
	289 Move X2, X31
	290 Call 0x3EB2B00
	291 Move X28, X0
	292 Call 0x3EB2AE0
	293 Move X0, X28
	294 Call 0x1D2D690
	295 Call 0x1991590

Method: System.Boolean IsASCIILetterOrDigit(System.Char character, ref System.Boolean notCanonical)

Disassembly:
	0x0362E1D8 B 0x362E1E0
	0x0362E1DC MOV W8, W31
	0x0362E1E0 ADD X26, X26, 0x1
	0x0362E1E4 CMP X28, X26
	0x0362E1E8 ADD X29, X29, 0x2
	0x0362E1EC B.NE 0x362E100
	0x0362E1F0 B 0x362E218
	0x0362E1F4 CMP W8, W21, UXTH
	0x0362E1F8 B.LS 0x362E24C
	0x0362E1FC MOVZ W8, 0x1
	0x0362E200 AND X26, X26, 0xFFFF
	0x0362E204 B 0x362E224
	0x0362E208 TBZ X27, 0x0, 0x362E240
	0x0362E20C ADD W26, W26, 0x1
	0x0362E210 B 0x362E0D0
	0x0362E214 MOV W24, W26
	0x0362E218 AND W9, W24, 0xFFFF
	0x0362E21C CMP W9, W21, UXTH
	0x0362E220 B.LS 0x362E248

ISIL:
	001 Subtract W9, W0, 97
	002 And W9, W9, 0xFFFF
	003 Move W8, W0
	004 NotImplemented "Instruction CMP not yet implemented."
	005 Move W0, 1
	006 Subtract W9, W8, 48
	007 And W9, W9, 0xFFFF
	008 NotImplemented "Instruction CMP not yet implemented."
	009 Subtract W8, W8, 65
	010 And W8, W8, 0xFFFF
	011 NotImplemented "Instruction CMP not yet implemented."
	012 Move W0, W31
	013 Return X0
	014 Move W0, 1
	015 Move [X1], W0
	016 Return X0

Method: System.Boolean IsValidDomainLabelCharacter(System.Char character, ref System.Boolean notCanonical)

Disassembly:
	0x0362E224 TBNZ X8, 0x0, 0x362E24C
	0x0362E228 MOV X8, INVALID
	0x0362E22C ADD X8, X8, X26, 0x20, LSL
	0x0362E230 SBFM X8, X8, 0x1F, 0x3F
	0x0362E234 LDRH W8, [X8, X20, LSL]
	0x0362E238 CMP W8, 0x2E
	0x0362E23C B.EQ 0x362E24C
	0x0362E240 MOV W0, W31
	0x0362E244 B 0x362E258
	0x0362E248 TBZ X8, 0x0, 0x362E240
	0x0362E24C AND W8, W24, 0xFFFF
	0x0362E250 MOVZ W0, 0x1
	0x0362E254 STR W8, [X19]
	0x0362E258 LDP X20, X19, [X31 + 0x50]
	0x0362E25C LDP X22, X21, [X31 + 0x40]
	0x0362E260 LDP X24, X23, [X31 + 0x30]
	0x0362E264 LDP X26, X25, [X31 + 0x20]
	0x0362E268 LDP X28, X27, [X31 + 0x10]
	0x0362E26C LDP X29, X30, [X31], #0x60
	0x0362E270 RET
	0x0362E274 STR X30, [X31 - 0x30]!
	0x0362E278 STP X22, X21, [X31 + 0x10]
	0x0362E27C STP X20, X19, [X31 + 0x20]
	0x0362E280 LDR X8, [X2 + 0x8]
	0x0362E284 STP X1, X2, [X0 + 0x20]

ISIL:
	001 Subtract W9, W0, 97
	002 And W9, W9, 0xFFFF
	003 Move W8, W0
	004 NotImplemented "Instruction CMP not yet implemented."
	005 Move W0, 1
	006 Subtract W9, W8, 48
	007 And W9, W9, 0xFFFF
	008 NotImplemented "Instruction CMP not yet implemented."
	009 And W9, W8, 0xFFFF
	010 NotImplemented "Instruction CMP not yet implemented."
	011 Move W0, 1
	012 NotImplemented "Instruction CMP not yet implemented."
	013 Subtract W8, W8, 65
	014 And W8, W8, 0xFFFF
	015 NotImplemented "Instruction CMP not yet implemented."
	016 Move W0, W31
	017 Return X0
	018 Move W0, 1
	019 Move [X1], W0
	020 Return X0

