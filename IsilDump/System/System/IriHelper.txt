Type: System.IriHelper

Method: System.Boolean CheckIriUnicodeRange(System.Char unicode, System.Boolean isQuery)

Disassembly:
	0x0362A068 RET
	0x0362A06C BL 0x1C16F28
	0x0362A070 BL 0x1C16F20
	0x0362A074 BL 0x1C16F30
	0x0362A078 ADRP X8, 0xB11000
	0x0362A07C LDR X8, [X8 + 0x560]
	0x0362A080 LDR X1, [X8]
	0x0362A084 BL 0x1C16DEC
	0x0362A088 MOV X0, X27
	0x0362A08C BL 0x1C171E0
	0x0362A090 SUB W9, W0, 0x30
	0x0362A094 AND W8, W9, 0xFFFF
	0x0362A098 CMP W8, 0xA
	0x0362A09C B.CC 0x362A0C4
	0x0362A0A0 AND W8, W0, 0xFFFF
	0x0362A0A4 SUB W10, W8, 0x41
	0x0362A0A8 CMP W10, 0x25
	0x0362A0AC MOVZ W8, 0xFFFF
	0x0362A0B0 B.HI 0x362A144
	0x0362A0B4 MOVZ W11, 0x1
	0x0362A0B8 LSLV X10, X11, X10
	0x0362A0BC ANDS X31, X10, 0x3F0000003F

ISIL:
	001 Subtract W8, W0, 160
	002 Move W8, W8
	003 ShiftRight W8, 5
	004 And W8, W8, 0x7FFF
	005 NotImplemented "Instruction CMP not yet implemented."
	006 Move W8, 1
	007 Add W9, W0, 1792
	008 And W9, W9, 0xFFFF
	009 NotImplemented "Instruction CMP not yet implemented."
	010 Add W8, W0, 528
	011 And W8, W8, 0xFFFF
	012 NotImplemented "Instruction CMP not yet implemented."
	013 NotImplemented "Instruction CSET not yet implemented."
	014 Move TEMP, X1
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfNotEqual {25}
	018 Add W8, W0, 0x2000
	019 Move W8, W8
	020 ShiftRight W8, 8
	021 And W8, W8, 0x7FFF
	022 NotImplemented "Instruction CMP not yet implemented."
	023 NotImplemented "Instruction CSET not yet implemented."
	024 Return X0
	025 Move W0, W8
	026 Return X0

Method: System.Boolean CheckIriUnicodeRange(System.Char highSurr, System.Char lowSurr, ref System.Boolean surrogatePair, System.Boolean isQuery)

Disassembly:
	0x0362A0C0 B.EQ 0x362A144
	0x0362A0C4 AND W8, W0, 0xFFFF
	0x0362A0C8 MOVZ W11, 0xF9F
	0x0362A0CC MOVZ W12, 0xFBF
	0x0362A0D0 CMP W8, 0x47
	0x0362A0D4 CSEL W11, W12, W11, CC
	0x0362A0D8 SUB W10, W1, 0x30
	0x0362A0DC CMP W8, 0x3A
	0x0362A0E0 ADD W8, W0, W11
	0x0362A0E4 AND W13, W10, 0xFFFF
	0x0362A0E8 ADD W8, W8, 0xA
	0x0362A0EC CSEL W9, W9, W8, CC
	0x0362A0F0 CMP W13, 0xA
	0x0362A0F4 B.CC 0x362A11C
	0x0362A0F8 AND W8, W1, 0xFFFF
	0x0362A0FC SUB W11, W8, 0x41
	0x0362A100 CMP W11, 0x25
	0x0362A104 MOVZ W8, 0xFFFF
	0x0362A108 B.HI 0x362A144
	0x0362A10C MOVZ W12, 0x1
	0x0362A110 LSLV X11, X12, X11
	0x0362A114 ANDS X31, X11, 0x3F0000003F
	0x0362A118 B.EQ 0x362A144
	0x0362A11C AND W8, W1, 0xFFFF
	0x0362A120 MOVN W11, 0x60
	0x0362A124 MOVN W12, 0x40
	0x0362A128 CMP W8, 0x47
	0x0362A12C CSEL W11, W12, W11, CC
	0x0362A130 ADD W11, W1, W11
	0x0362A134 ADD W11, W11, 0xA
	0x0362A138 CMP W8, 0x3A
	0x0362A13C CSEL W8, W10, W11, CC
	0x0362A140 ADD W8, W8, W9, 0x4, LSL
	0x0362A144 MOV W0, W8
	0x0362A148 RET
	0x0362A14C AND W8, W0, 0xFFFF
	0x0362A150 CMP W8, 0x20
	0x0362A154 MOVZ W8, 0x1
	0x0362A158 B.CC 0x362A1D0
	0x0362A15C SUB W9, W0, 0x7F
	0x0362A160 AND W9, W9, 0xFFFF
	0x0362A164 CMP W9, 0x21
	0x0362A168 B.CC 0x362A1D0
	0x0362A16C SUB W8, W0, 0x3B
	0x0362A170 MOVZ W9, 0xFFFD
	0x0362A174 AND W8, W8, 0xFFFF
	0x0362A178 SUB W10, W0, 0x23
	0x0362A17C AND W11, W0, W9, 0x0
	0x0362A180 CMP W8, 0x6
	0x0362A184 AND W12, W10, 0xFFFF
	0x0362A188 CSET W9, CC
	0x0362A18C CMP W11, 0x3C
	0x0362A190 CSET W10, NE
	0x0362A194 CMP W12, 0x4
	0x0362A198 MOVZ W8, 0x1
	0x0362A19C B.CC 0x362A1D0
	0x0362A1A0 AND W9, W9, W10, 0x0
	0x0362A1A4 TBNZ X9, 0x0, 0x362A1D0
	0x0362A1A8 SUB W8, W0, 0x2B
	0x0362A1AC AND W9, W8, 0xFFFF
	0x0362A1B0 CMP W9, 0x31
	0x0362A1B4 B.HI 0x362A1CC
	0x0362A1B8 MOVZ X9, 0x13
	0x0362A1BC MOVK X9, 0x20000
	0x0362A1C0 LSRV X8, X9, X8
	0x0362A1C4 AND W0, W8, 0x1
	0x0362A1C8 RET
	0x0362A1CC MOV W8, W31
	0x0362A1D0 MOV W0, W8
	0x0362A1D4 RET
	0x0362A1D8 SUB X31, X31, 0xB0
	0x0362A1DC STP X29, X30, [X31 + 0x50]
	0x0362A1E0 STP X28, X27, [X31 + 0x60]
	0x0362A1E4 STP X26, X25, [X31 + 0x70]
	0x0362A1E8 STP X24, X23, [X31 + 0x80]
	0x0362A1EC STP X22, X21, [X31 + 0x90]
	0x0362A1F0 STP X20, X19, [X31 + 0xA0]
	0x0362A1F4 ADRP X19, 0xDB6000
	0x0362A1F8 LDRB W8, [X19 + 0x4EF]
	0x0362A1FC MOV W23, W6
	0x0362A200 MOV X20, X5
	0x0362A204 MOV W28, W4
	0x0362A208 MOV X21, X2
	0x0362A20C MOV X22, X1
	0x0362A210 STR W7, [X31 + 0x10]
	0x0362A214 STR X0, [X31 + 0x18]
	0x0362A218 STR X3, [X31 + 0x30]
	0x0362A21C TBNZ X8, 0x0, 0x362A250
	0x0362A220 ADRP X0, 0xACB000
	0x0362A224 LDR X0, [X0 + 0x170]
	0x0362A228 BL 0x1C16CF4
	0x0362A22C ADRP X0, 0xB11000
	0x0362A230 LDR X0, [X0 + 0x58]
	0x0362A234 BL 0x1C16CF4
	0x0362A238 ADRP X0, 0xACB000
	0x0362A23C LDR X0, [X0 + 0xA28]
	0x0362A240 BL 0x1C16CF4
	0x0362A244 LDR X3, [X31 + 0x30]
	0x0362A248 MOVZ W8, 0x1
	0x0362A24C STRB W8, [X19 + 0x4EF]
	0x0362A250 CBZ X3, 0x362A264
	0x0362A254 LDR W8, [X3 + 0x18]
	0x0362A258 CBZ W8, 0x362A264
	0x0362A25C ADD X29, X3, 0x20
	0x0362A260 B 0x362A268
	0x0362A264 MOV X29, X31
	0x0362A268 STR W23, [X31 + 0x8]
	0x0362A26C ADRP X26, 0xB11000
	0x0362A270 LDR X26, [X26 + 0x58]
	0x0362A274 CMP W28, 0x1
	0x0362A278 MOV W24, W31
	0x0362A27C B.LT 0x362A634
	0x0362A280 LDRB W8, [X31 + 0xB0]
	0x0362A284 MOV W27, W31
	0x0362A288 STR W28, [X31 + 0x14]
	0x0362A28C STR X29, [X31 + 0x20]
	0x0362A290 STR W8, [X31 + 0x3C]
	0x0362A294 LDR W8, [X31 + 0x10]
	0x0362A298 EOR W8, W8, 0x1
	0x0362A29C STR W8, [X31 + 0xC]
	0x0362A2A0 ADRP X8, 0xACB000
	0x0362A2A4 LDR X8, [X8 + 0x170]
	0x0362A2A8 LDRH W19, [X29, W27, SXTW]
	0x0362A2AC LDR X0, [X8]
	0x0362A2B0 LDR W8, [X0 + 0xE0]
	0x0362A2B4 CBNZ W8, 0x362A2BC
	0x0362A2B8 BL 0x1C16DFC
	0x0362A2BC MOV W0, W19
	0x0362A2C0 MOV X1, X31
	0x0362A2C4 BL 0x331BFEC
	0x0362A2C8 MOV W19, W0
	0x0362A2CC MOV X0, X31
	0x0362A2D0 BL 0x3241948
	0x0362A2D4 CBZ X0, 0x362A6B0
	0x0362A2D8 LDR X8, [X0]
	0x0362A2DC LDR X1, [X31 + 0x30]
	0x0362A2E0 ANDS W31, W19, 0x1
	0x0362A2E4 MOV W2, W27
	0x0362A2E8 LDR X9, [X8 + 0x248]
	0x0362A2EC LDR X4, [X8 + 0x250]
	0x0362A2F0 MOVZ W8, 0x1
	0x0362A2F4 CINC W3, W8, NE
	0x0362A2F8 STR W19, [X31 + 0x48]
	0x0362A2FC BLR X9
	0x0362A300 CBZ X0, 0x362A6B0
	0x0362A304 SXTW X8, W27
	0x0362A308 LDR W25, [X0 + 0x18]
	0x0362A30C STR X8, [X31 + 0x40]
	0x0362A310 LDR W8, [X31 + 0x3C]
	0x0362A314 MOV X29, X0
	0x0362A318 TBZ X8, 0x0, 0x362A374
	0x0362A31C LDR W8, [X31 + 0x48]
	0x0362A320 TBZ X8, 0x0, 0x362A540
	0x0362A324 LDR X8, [X31 + 0x30]
	0x0362A328 STRB W31, [X31 + 0x4C]
	0x0362A32C CBZ X8, 0x362A6B0
	0x0362A330 LDR W9, [X8 + 0x18]
	0x0362A334 CMP W27, W9
	0x0362A338 B.CS 0x362A6AC
	0x0362A33C ADD W8, W27, 0x1
	0x0362A340 CMP W8, W9
	0x0362A344 B.CS 0x362A6AC
	0x0362A348 LDR X9, [X31 + 0x30]
	0x0362A34C ADD X2, X31, 0x4C
	0x0362A350 ADD X9, X9, 0x20
	0x0362A354 LDRH W1, [X9, W8, SXTW]
	0x0362A358 LDR X8, [X31 + 0x40]
	0x0362A35C LDRH W0, [X9, X8, LSL #1]
	0x0362A360 LDR W8, [X31 + 0x10]
	0x0362A364 AND W3, W8, 0x1
	0x0362A368 BL 0x36290C0
	0x0362A36C STR W0, [X31 + 0x2C]
	0x0362A370 B 0x362A378
	0x0362A374 STR W31, [X31 + 0x2C]
	0x0362A378 CBZ X20, 0x362A6B0
	0x0362A37C LDR X8, [X20 + 0x18]
	0x0362A380 CMP W24, W8
	0x0362A384 B.CS 0x362A6AC
	0x0362A388 LDR X9, [X29 + 0x18]
	0x0362A38C CBZ W9, 0x362A6AC
	0x0362A390 ADD X10, X20, W24, SXTW
	0x0362A394 LDRB W19, [X10 + 0x20]
	0x0362A398 LDRB W10, [X29 + 0x20]
	0x0362A39C CMP W19, W10
	0x0362A3A0 B.NE 0x362A3FC
	0x0362A3A4 CMP W25, 0x1
	0x0362A3A8 B.LT 0x362A480
	0x0362A3AC SUBS W11, W8, W24
	0x0362A3B0 MOV W10, W31
	0x0362A3B4 CSEL W11, W31, W11, CC
	0x0362A3B8 MOVN W23, 0x0
	0x0362A3BC CMP W11, W10
	0x0362A3C0 B.EQ 0x362A6AC
	0x0362A3C4 CMP W9, W10
	0x0362A3C8 B.EQ 0x362A6AC
	0x0362A3CC ADD W12, W24, W10
	0x0362A3D0 ADD X13, X29, W10, SXTW
	0x0362A3D4 ADD X12, X20, W12, SXTW
	0x0362A3D8 LDRB W12, [X12 + 0x20]
	0x0362A3DC LDRB W13, [X13 + 0x20]
	0x0362A3E0 CMP W12, W13
	0x0362A3E4 B.NE 0x362A424
	0x0362A3E8 ADD W10, W10, 0x1
	0x0362A3EC CMP W25, W10
	0x0362A3F0 ADD W23, W23, 0x1
	0x0362A3F4 B.NE 0x362A3BC
	0x0362A3F8 B 0x362A480
	0x0362A3FC LDR X0, [X26]
	0x0362A400 LDR W8, [X0 + 0xE0]
	0x0362A404 CBNZ W8, 0x362A40C
	0x0362A408 BL 0x1C16DFC
	0x0362A40C MOV W0, W19
	0x0362A410 MOV X1, X22
	0x0362A414 MOV X2, X21
	0x0362A418 ADD W24, W24, 0x1
	0x0362A41C BL 0x362A6B4
	0x0362A420 B 0x362A37C
	0x0362A424 CMP W10, 0x1
	0x0362A428 B.LT 0x362A37C
	0x0362A42C CMP W24, W8
	0x0362A430 B.CS 0x362A6AC
	0x0362A434 LDR X0, [X26]
	0x0362A438 ADD X8, X20, W24, SXTW
	0x0362A43C LDRB W19, [X8 + 0x20]
	0x0362A440 LDR W9, [X0 + 0xE0]
	0x0362A444 CBNZ W9, 0x362A44C
	0x0362A448 BL 0x1C16DFC
	0x0362A44C MOV W0, W19
	0x0362A450 MOV X1, X22
	0x0362A454 MOV X2, X21
	0x0362A458 BL 0x362A6B4
	0x0362A45C CBZ W23, 0x362A478
	0x0362A460 LDR W8, [X20 + 0x18]
	0x0362A464 ADD W24, W24, 0x1
	0x0362A468 SUB W23, W23, 0x1
	0x0362A46C CMP W24, W8
	0x0362A470 B.CC 0x362A434
	0x0362A474 B 0x362A6AC
	0x0362A478 ADD W24, W24, 0x1
	0x0362A47C B 0x362A37C
	0x0362A480 LDR W8, [X31 + 0x3C]
	0x0362A484 TBZ X8, 0x0, 0x362A504
	0x0362A488 LDR W8, [X31 + 0x2C]
	0x0362A48C TBZ X8, 0x0, 0x362A5C0
	0x0362A490 ADRP X8, 0xACB000
	0x0362A494 LDR X8, [X8 + 0xA28]
	0x0362A498 LDR X9, [X31 + 0x20]
	0x0362A49C LDR X10, [X31 + 0x40]
	0x0362A4A0 LDR X0, [X8]
	0x0362A4A4 LDRH W19, [X9, X10, LSL #1]
	0x0362A4A8 LDR W8, [X0 + 0xE0]
	0x0362A4AC CBNZ W8, 0x362A4B4
	0x0362A4B0 BL 0x1C16DFC
	0x0362A4B4 MOV W0, W19
	0x0362A4B8 MOV X1, X31
	0x0362A4BC BL 0x36236A8
	0x0362A4C0 TBNZ X0, 0x0, 0x362A610
	0x0362A4C4 LDRSW X9, [X21]
	0x0362A4C8 LDP X11, X29, [X31 + 0x18]
	0x0362A4CC LDR X10, [X31 + 0x40]
	0x0362A4D0 ADD W8, W9, 0x1
	0x0362A4D4 STR W8, [X21]
	0x0362A4D8 LDRH W10, [X29, X10, LSL #1]
	0x0362A4DC STRH W10, [X11, X9, LSL #1]
	0x0362A4E0 LDR W10, [X31 + 0x48]
	0x0362A4E4 TBZ X10, 0x0, 0x362A4FC
	0x0362A4E8 ADD W9, W9, 0x2
	0x0362A4EC STR W9, [X21]
	0x0362A4F0 ADD W27, W27, 0x1
	0x0362A4F4 LDRH W9, [X29, W27, SXTW]
	0x0362A4F8 STRH W9, [X11, W8, SXTW]
	0x0362A4FC LDR W28, [X31 + 0x14]
	0x0362A500 B 0x362A624
	0x0362A504 LDRSW X9, [X21]
	0x0362A508 LDP X11, X29, [X31 + 0x18]
	0x0362A50C LDR X10, [X31 + 0x40]
	0x0362A510 ADD W8, W9, 0x1
	0x0362A514 STR W8, [X21]
	0x0362A518 LDRH W10, [X29, X10, LSL #1]
	0x0362A51C STRH W10, [X11, X9, LSL #1]
	0x0362A520 LDR W10, [X31 + 0x48]
	0x0362A524 TBZ X10, 0x0, 0x362A624
	0x0362A528 ADD W9, W9, 0x2
	0x0362A52C STR W9, [X21]
	0x0362A530 ADD W27, W27, 0x1
	0x0362A534 LDRH W9, [X29, W27, SXTW]
	0x0362A538 STRH W9, [X11, W8, SXTW]
	0x0362A53C B 0x362A624
	0x0362A540 LDR X9, [X31 + 0x30]
	0x0362A544 CBZ X9, 0x362A6B0
	0x0362A548 LDR W8, [X9 + 0x18]
	0x0362A54C CMP W27, W8
	0x0362A550 B.CS 0x362A6AC
	0x0362A554 LDR X8, [X31 + 0x40]
	0x0362A558 ADD X8, X9, X8, 0x1, LSL
	0x0362A55C LDRH W8, [X8 + 0x20]
	0x0362A560 SUB W9, W8, 0xA0
	0x0362A564 UBFM W9, W9, 0x5, 0xF
	0x0362A568 CMP W9, 0x6BB
	0x0362A56C MOVZ W9, 0x1
	0x0362A570 STR W9, [X31 + 0x2C]
	0x0362A574 B.CC 0x362A378
	0x0362A578 ADD W9, W8, 0x700
	0x0362A57C AND W9, W9, 0xFFFF
	0x0362A580 CMP W9, 0x4D0
	0x0362A584 B.CC 0x362A378
	0x0362A588 ADD W9, W8, 0x210
	0x0362A58C AND W9, W9, 0xFFFF
	0x0362A590 CMP W9, 0x200
	0x0362A594 LDR W9, [X31 + 0xC]
	0x0362A598 CSET W10, CC
	0x0362A59C STR W10, [X31 + 0x2C]
	0x0362A5A0 ORR W9, W10, W9, 0x0
	0x0362A5A4 TBNZ X9, 0x0, 0x362A378
	0x0362A5A8 ADD W8, W8, 0x2000
	0x0362A5AC UBFM W8, W8, 0x8, 0xF
	0x0362A5B0 CMP W8, 0x19
	0x0362A5B4 CSET W8, CC
	0x0362A5B8 STR W8, [X31 + 0x2C]
	0x0362A5BC B 0x362A378
	0x0362A5C0 AND X8, X9, 0x0
	0x0362A5C4 CMP W8, 0x1
	0x0362A5C8 B.LT 0x362A610
	0x0362A5CC MOV X23, X31
	0x0362A5D0 ADD X28, X29, 0x20
	0x0362A5D4 CMP X23, W8, UXTW
	0x0362A5D8 B.CS 0x362A6AC
	0x0362A5DC LDR X0, [X26]
	0x0362A5E0 LDRB W19, [X28, X23, LSL]
	0x0362A5E4 LDR W8, [X0 + 0xE0]
	0x0362A5E8 CBNZ W8, 0x362A5F0
	0x0362A5EC BL 0x1C16DFC
	0x0362A5F0 MOV W0, W19
	0x0362A5F4 MOV X1, X22
	0x0362A5F8 MOV X2, X21
	0x0362A5FC BL 0x362A6B4
	0x0362A600 LDR W8, [X29 + 0x18]
	0x0362A604 ADD X23, X23, 0x1
	0x0362A608 CMP X23, W8, SXTW
	0x0362A60C B.LT 0x362A5D4
	0x0362A610 LDR W8, [X31 + 0x48]
	0x0362A614 LDR W28, [X31 + 0x14]
	0x0362A618 LDR X29, [X31 + 0x20]
	0x0362A61C AND W8, W8, 0x1
	0x0362A620 ADD W27, W27, W8
	0x0362A624 ADD W27, W27, 0x1
	0x0362A628 CMP W27, W28
	0x0362A62C ADD W24, W24, W25
	0x0362A630 B.LT 0x362A2A0
	0x0362A634 LDR W25, [X31 + 0x8]
	0x0362A638 CMP W24, W25
	0x0362A63C B.GE 0x362A68C
	0x0362A640 CBZ X20, 0x362A6B0
	0x0362A644 ADD X8, X20, W24, SXTW
	0x0362A648 ADD X23, X8, 0x20
	0x0362A64C LDR W8, [X20 + 0x18]
	0x0362A650 CMP W24, W8
	0x0362A654 B.CS 0x362A6AC
	0x0362A658 LDR X0, [X26]
	0x0362A65C LDRB W19, [X23]
	0x0362A660 LDR W8, [X0 + 0xE0]
	0x0362A664 CBNZ W8, 0x362A66C
	0x0362A668 BL 0x1C16DFC
	0x0362A66C MOV W0, W19
	0x0362A670 MOV X1, X22
	0x0362A674 MOV X2, X21
	0x0362A678 BL 0x362A6B4
	0x0362A67C ADD W24, W24, 0x1
	0x0362A680 CMP W25, W24
	0x0362A684 ADD X23, X23, 0x1
	0x0362A688 B.NE 0x362A64C
	0x0362A68C LDP X20, X19, [X31 + 0xA0]
	0x0362A690 LDP X22, X21, [X31 + 0x90]
	0x0362A694 LDP X24, X23, [X31 + 0x80]
	0x0362A698 LDP X26, X25, [X31 + 0x70]
	0x0362A69C LDP X28, X27, [X31 + 0x60]
	0x0362A6A0 LDP X29, X30, [X31 + 0x50]
	0x0362A6A4 ADD X31, X31, 0xB0
	0x0362A6A8 RET
	0x0362A6AC BL 0x1C16F28
	0x0362A6B0 BL 0x1C16F20
	0x0362A6B4 STP X30, X23, [X31 - 0x30]!
	0x0362A6B8 STP X22, X21, [X31 + 0x10]
	0x0362A6BC STP X20, X19, [X31 + 0x20]
	0x0362A6C0 ADRP X22, 0xDB6000
	0x0362A6C4 LDRB W8, [X22 + 0x4F0]
	0x0362A6C8 MOV X20, X2
	0x0362A6CC MOV X19, X1
	0x0362A6D0 MOV W21, W0
	0x0362A6D4 TBNZ X8, 0x0, 0x362A6EC
	0x0362A6D8 ADRP X0, 0xB11000
	0x0362A6DC LDR X0, [X0 + 0x58]
	0x0362A6E0 BL 0x1C16CF4
	0x0362A6E4 MOVZ W8, 0x1
	0x0362A6E8 STRB W8, [X22 + 0x4F0]
	0x0362A6EC LDRSW X8, [X20]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0xDB7000
	009 Move X23, 0xACC000
	010 Move W8, [X24+1255]
	011 Move X23, [X23+368]
	012 Move W19, W3
	013 Move X22, X2
	014 Move W20, W1
	015 Move W21, W0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {124}
	020 Move X0, 0xAD3000
	021 Move X0, [X0+2264]
	022 Call 0x1C17CF4
	023 Move X0, 0xACC000
	024 Move X0, [X0+368]
	025 Call 0x1C17CF4
	026 Move X0, 0xB12000
	027 Move X0, [X0+1120]
	028 Call 0x1C17CF4
	029 Move X0, 0xB12000
	030 Move X0, [X0+1128]
	031 Call 0x1C17CF4
	032 Move X0, 0xB12000
	033 Move X0, [X0+1136]
	034 Call 0x1C17CF4
	035 Move X0, 0xB12000
	036 Move X0, [X0+1144]
	037 Call 0x1C17CF4
	038 Move X0, 0xB12000
	039 Move X0, [X0+1152]
	040 Call 0x1C17CF4
	041 Move X0, 0xB12000
	042 Move X0, [X0+1160]
	043 Call 0x1C17CF4
	044 Move X0, 0xB12000
	045 Move X0, [X0+1168]
	046 Call 0x1C17CF4
	047 Move X0, 0xB12000
	048 Move X0, [X0+1176]
	049 Call 0x1C17CF4
	050 Move X0, 0xB12000
	051 Move X0, [X0+1184]
	052 Call 0x1C17CF4
	053 Move X0, 0xB12000
	054 Move X0, [X0+1192]
	055 Call 0x1C17CF4
	056 Move X0, 0xB12000
	057 Move X0, [X0+1200]
	058 Call 0x1C17CF4
	059 Move X0, 0xB12000
	060 Move X0, [X0+1208]
	061 Call 0x1C17CF4
	062 Move X0, 0xB12000
	063 Move X0, [X0+1216]
	064 Call 0x1C17CF4
	065 Move X0, 0xB12000
	066 Move X0, [X0+1224]
	067 Call 0x1C17CF4
	068 Move X0, 0xB12000
	069 Move X0, [X0+1232]
	070 Call 0x1C17CF4
	071 Move X0, 0xB12000
	072 Move X0, [X0+1240]
	073 Call 0x1C17CF4
	074 Move X0, 0xB12000
	075 Move X0, [X0+1248]
	076 Call 0x1C17CF4
	077 Move X0, 0xB12000
	078 Move X0, [X0+1256]
	079 Call 0x1C17CF4
	080 Move X0, 0xB12000
	081 Move X0, [X0+1264]
	082 Call 0x1C17CF4
	083 Move X0, 0xB12000
	084 Move X0, [X0+1272]
	085 Call 0x1C17CF4
	086 Move X0, 0xB12000
	087 Move X0, [X0+1280]
	088 Call 0x1C17CF4
	089 Move X0, 0xB12000
	090 Move X0, [X0+1288]
	091 Call 0x1C17CF4
	092 Move X0, 0xB12000
	093 Move X0, [X0+1296]
	094 Call 0x1C17CF4
	095 Move X0, 0xB12000
	096 Move X0, [X0+1304]
	097 Call 0x1C17CF4
	098 Move X0, 0xB12000
	099 Move X0, [X0+1312]
	100 Call 0x1C17CF4
	101 Move X0, 0xB12000
	102 Move X0, [X0+1320]
	103 Call 0x1C17CF4
	104 Move X0, 0xB12000
	105 Move X0, [X0+1328]
	106 Call 0x1C17CF4
	107 Move X0, 0xB12000
	108 Move X0, [X0+1336]
	109 Call 0x1C17CF4
	110 Move X0, 0xB12000
	111 Move X0, [X0+1344]
	112 Call 0x1C17CF4
	113 Move X0, 0xB12000
	114 Move X0, [X0+1352]
	115 Call 0x1C17CF4
	116 Move X0, 0xB12000
	117 Move X0, [X0+1360]
	118 Call 0x1C17CF4
	119 Move X0, 0xB12000
	120 Move X0, [X0+1368]
	121 Call 0x1C17CF4
	122 Move W8, 1
	123 Move [X24+1255], W8
	124 Move [X22], W31
	125 Move X0, [X23]
	126 Move W8, [X0+224]
	127 Compare W8, 0
	128 JumpIfNotEqual {130}
	129 Call 0x1C17DFC
	130 Move W0, W21
	131 Move W1, W20
	132 Move X2, X31
	133 Call Char.IsSurrogatePair, X0, X1
	134 Move TEMP, X0
	135 And TEMP, TEMP, 1
	136 Compare TEMP, 1
	137 JumpIfNotEqual {433}
	138 Move X8, 0xAD3000
	139 Move X8, [X8+2264]
	140 Move W9, 1
	141 Move [X22], W9
	142 Move W1, 2
	143 Move X0, [X8]
	144 Call 0x1C17D6C
	145 Compare X0, 0
	146 JumpIfEqual {444}
	147 Move W8, [X0+24]
	148 Move X1, X0
	149 Compare W8, 0
	150 JumpIfEqual {443}
	151 NotImplemented "Instruction CMP not yet implemented."
	152 NotImplemented "Instruction STRH not yet implemented."
	153 Move X0, X31
	154 Move X2, X31
	155 NotImplemented "Instruction STRH not yet implemented."
	156 Call String.CreateString, X0, X1
	157 Move X8, 0xB12000
	158 Move X8, [X8+1152]
	159 Move X2, X31
	160 Move X20, X0
	161 Move X1, [X8]
	162 Call String.CompareOrdinal, X0, X1
	163 Move TEMP, X0
	164 And TEMP, TEMP, -2147483648
	165 Compare TEMP, -2147483648
	166 JumpIfEqual {174}
	167 Move X8, 0xB12000
	168 Move X8, [X8+1232]
	169 Move X0, X20
	170 Move X2, X31
	171 Move X1, [X8]
	172 Call String.CompareOrdinal, X0, X1
	173 NotImplemented "Instruction CMP not yet implemented."
	174 Move X8, 0xB12000
	175 Move X8, [X8+1296]
	176 Move X0, X20
	177 Move X2, X31
	178 Move X1, [X8]
	179 Call String.CompareOrdinal, X0, X1
	180 Move TEMP, X0
	181 And TEMP, TEMP, -2147483648
	182 Compare TEMP, -2147483648
	183 JumpIfEqual {191}
	184 Move X8, 0xB12000
	185 Move X8, [X8+1216]
	186 Move X0, X20
	187 Move X2, X31
	188 Move X1, [X8]
	189 Call String.CompareOrdinal, X0, X1
	190 NotImplemented "Instruction CMP not yet implemented."
	191 Move X8, 0xB12000
	192 Move X8, [X8+1272]
	193 Move X0, X20
	194 Move X2, X31
	195 Move X1, [X8]
	196 Call String.CompareOrdinal, X0, X1
	197 Move TEMP, X0
	198 And TEMP, TEMP, -2147483648
	199 Compare TEMP, -2147483648
	200 JumpIfEqual {208}
	201 Move X8, 0xB12000
	202 Move X8, [X8+1144]
	203 Move X0, X20
	204 Move X2, X31
	205 Move X1, [X8]
	206 Call String.CompareOrdinal, X0, X1
	207 NotImplemented "Instruction CMP not yet implemented."
	208 Move X8, 0xB12000
	209 Move X8, [X8+1312]
	210 Move X0, X20
	211 Move X2, X31
	212 Move X1, [X8]
	213 Call String.CompareOrdinal, X0, X1
	214 Move TEMP, X0
	215 And TEMP, TEMP, -2147483648
	216 Compare TEMP, -2147483648
	217 JumpIfEqual {225}
	218 Move X8, 0xB12000
	219 Move X8, [X8+1224]
	220 Move X0, X20
	221 Move X2, X31
	222 Move X1, [X8]
	223 Call String.CompareOrdinal, X0, X1
	224 NotImplemented "Instruction CMP not yet implemented."
	225 Move X8, 0xB12000
	226 Move X8, [X8+1328]
	227 Move X0, X20
	228 Move X2, X31
	229 Move X1, [X8]
	230 Call String.CompareOrdinal, X0, X1
	231 Move TEMP, X0
	232 And TEMP, TEMP, -2147483648
	233 Compare TEMP, -2147483648
	234 JumpIfEqual {242}
	235 Move X8, 0xB12000
	236 Move X8, [X8+1280]
	237 Move X0, X20
	238 Move X2, X31
	239 Move X1, [X8]
	240 Call String.CompareOrdinal, X0, X1
	241 NotImplemented "Instruction CMP not yet implemented."
	242 Move X8, 0xB12000
	243 Move X8, [X8+1240]
	244 Move X0, X20
	245 Move X2, X31
	246 Move X1, [X8]
	247 Call String.CompareOrdinal, X0, X1
	248 Move TEMP, X0
	249 And TEMP, TEMP, -2147483648
	250 Compare TEMP, -2147483648
	251 JumpIfEqual {259}
	252 Move X8, 0xB12000
	253 Move X8, [X8+1264]
	254 Move X0, X20
	255 Move X2, X31
	256 Move X1, [X8]
	257 Call String.CompareOrdinal, X0, X1
	258 NotImplemented "Instruction CMP not yet implemented."
	259 Move X8, 0xB12000
	260 Move X8, [X8+1136]
	261 Move X0, X20
	262 Move X2, X31
	263 Move X1, [X8]
	264 Call String.CompareOrdinal, X0, X1
	265 Move TEMP, X0
	266 And TEMP, TEMP, -2147483648
	267 Compare TEMP, -2147483648
	268 JumpIfEqual {276}
	269 Move X8, 0xB12000
	270 Move X8, [X8+1208]
	271 Move X0, X20
	272 Move X2, X31
	273 Move X1, [X8]
	274 Call String.CompareOrdinal, X0, X1
	275 NotImplemented "Instruction CMP not yet implemented."
	276 Move X8, 0xB12000
	277 Move X8, [X8+1320]
	278 Move X0, X20
	279 Move X2, X31
	280 Move X1, [X8]
	281 Call String.CompareOrdinal, X0, X1
	282 Move TEMP, X0
	283 And TEMP, TEMP, -2147483648
	284 Compare TEMP, -2147483648
	285 JumpIfEqual {293}
	286 Move X8, 0xB12000
	287 Move X8, [X8+1128]
	288 Move X0, X20
	289 Move X2, X31
	290 Move X1, [X8]
	291 Call String.CompareOrdinal, X0, X1
	292 NotImplemented "Instruction CMP not yet implemented."
	293 Move X8, 0xB12000
	294 Move X8, [X8+1344]
	295 Move X0, X20
	296 Move X2, X31
	297 Move X1, [X8]
	298 Call String.CompareOrdinal, X0, X1
	299 Move TEMP, X0
	300 And TEMP, TEMP, -2147483648
	301 Compare TEMP, -2147483648
	302 JumpIfEqual {310}
	303 Move X8, 0xB12000
	304 Move X8, [X8+1288]
	305 Move X0, X20
	306 Move X2, X31
	307 Move X1, [X8]
	308 Call String.CompareOrdinal, X0, X1
	309 NotImplemented "Instruction CMP not yet implemented."
	310 Move X8, 0xB12000
	311 Move X8, [X8+1360]
	312 Move X0, X20
	313 Move X2, X31
	314 Move X1, [X8]
	315 Call String.CompareOrdinal, X0, X1
	316 Move TEMP, X0
	317 And TEMP, TEMP, -2147483648
	318 Compare TEMP, -2147483648
	319 JumpIfEqual {327}
	320 Move X8, 0xB12000
	321 Move X8, [X8+1160]
	322 Move X0, X20
	323 Move X2, X31
	324 Move X1, [X8]
	325 Call String.CompareOrdinal, X0, X1
	326 NotImplemented "Instruction CMP not yet implemented."
	327 Move X8, 0xB12000
	328 Move X8, [X8+1256]
	329 Move X0, X20
	330 Move X2, X31
	331 Move X1, [X8]
	332 Call String.CompareOrdinal, X0, X1
	333 Move TEMP, X0
	334 And TEMP, TEMP, -2147483648
	335 Compare TEMP, -2147483648
	336 JumpIfEqual {344}
	337 Move X8, 0xB12000
	338 Move X8, [X8+1192]
	339 Move X0, X20
	340 Move X2, X31
	341 Move X1, [X8]
	342 Call String.CompareOrdinal, X0, X1
	343 NotImplemented "Instruction CMP not yet implemented."
	344 Move X8, 0xB12000
	345 Move X8, [X8+1248]
	346 Move X0, X20
	347 Move X2, X31
	348 Move X1, [X8]
	349 Call String.CompareOrdinal, X0, X1
	350 Move TEMP, X0
	351 And TEMP, TEMP, -2147483648
	352 Compare TEMP, -2147483648
	353 JumpIfEqual {361}
	354 Move X8, 0xB12000
	355 Move X8, [X8+1120]
	356 Move X0, X20
	357 Move X2, X31
	358 Move X1, [X8]
	359 Call String.CompareOrdinal, X0, X1
	360 NotImplemented "Instruction CMP not yet implemented."
	361 Move X8, 0xB12000
	362 Move X8, [X8+1168]
	363 Move X0, X20
	364 Move X2, X31
	365 Move X1, [X8]
	366 Call String.CompareOrdinal, X0, X1
	367 Move TEMP, X0
	368 And TEMP, TEMP, -2147483648
	369 Compare TEMP, -2147483648
	370 JumpIfEqual {378}
	371 Move X8, 0xB12000
	372 Move X8, [X8+1200]
	373 Move X0, X20
	374 Move X2, X31
	375 Move X1, [X8]
	376 Call String.CompareOrdinal, X0, X1
	377 NotImplemented "Instruction CMP not yet implemented."
	378 Move X8, 0xB12000
	379 Move X8, [X8+1352]
	380 Move X0, X20
	381 Move X2, X31
	382 Move X1, [X8]
	383 Call String.CompareOrdinal, X0, X1
	384 Move TEMP, X0
	385 And TEMP, TEMP, -2147483648
	386 Compare TEMP, -2147483648
	387 JumpIfEqual {395}
	388 Move X8, 0xB12000
	389 Move X8, [X8+1304]
	390 Move X0, X20
	391 Move X2, X31
	392 Move X1, [X8]
	393 Call String.CompareOrdinal, X0, X1
	394 NotImplemented "Instruction CMP not yet implemented."
	395 Move TEMP, X19
	396 And TEMP, TEMP, 1
	397 Compare TEMP, 1
	398 JumpIfNotEqual {433}
	399 Move X8, 0xB12000
	400 Move X8, [X8+1176]
	401 Move X0, X20
	402 Move X2, X31
	403 Move X1, [X8]
	404 Call String.CompareOrdinal, X0, X1
	405 Move TEMP, X0
	406 And TEMP, TEMP, -2147483648
	407 Compare TEMP, -2147483648
	408 JumpIfEqual {416}
	409 Move X8, 0xB12000
	410 Move X8, [X8+1368]
	411 Move X0, X20
	412 Move X2, X31
	413 Move X1, [X8]
	414 Call String.CompareOrdinal, X0, X1
	415 NotImplemented "Instruction CMP not yet implemented."
	416 Move X8, 0xB12000
	417 Move X8, [X8+1184]
	418 Move X0, X20
	419 Move X2, X31
	420 Move X1, [X8]
	421 Call String.CompareOrdinal, X0, X1
	422 Move TEMP, X0
	423 And TEMP, TEMP, -2147483648
	424 Compare TEMP, -2147483648
	425 JumpIfEqual {433}
	426 Move X8, 0xB12000
	427 Move X8, [X8+1336]
	428 Move X0, X20
	429 Move X2, X31
	430 Move X1, [X8]
	431 Call String.CompareOrdinal, X0, X1
	432 NotImplemented "Instruction CMP not yet implemented."
	433 Move W0, W31
	434 Move W0, 1
	435 Move X20, [X31+48]
	436 Move X19, [X31+56]
	437 Move X22, [X31+32]
	438 Move X21, [X31+40]
	439 Move X24, [X31+16]
	440 Move X23, [X31+24]
	441 Move X30, [X31+64]
	442 Return X0
	443 Call 0x1C17F28
	444 Call 0x1C17F20

Method: System.Boolean CheckIsReserved(System.Char ch, System.UriComponents component)

Disassembly:
	0x0362A6F0 ADD W22, W8, 0x1
	0x0362A6F4 STR W22, [X20]
	0x0362A6F8 CBZ X19, 0x362A7B8
	0x0362A6FC LDR W9, [X19 + 0x18]
	0x0362A700 CMP W8, W9
	0x0362A704 B.CS 0x362A7B4
	0x0362A708 ADRP X23, 0xB11000
	0x0362A70C LDR X23, [X23 + 0x58]
	0x0362A710 ADD X9, X19, X8, 0x1, LSL
	0x0362A714 MOVZ W10, 0x25
	0x0362A718 ADD W8, W8, 0x2
	0x0362A71C STRH W10, [X9 + 0x20]
	0x0362A720 STR W8, [X20]
	0x0362A724 LDR X0, [X23]
	0x0362A728 LDR W8, [X0 + 0xE0]
	0x0362A72C CBNZ W8, 0x362A738
	0x0362A730 BL 0x1C16DFC
	0x0362A734 LDR X0, [X23]
	0x0362A738 LDR X8, [X0 + 0xB8]
	0x0362A73C LDR X8, [X8]
	0x0362A740 CBZ X8, 0x362A7B8
	0x0362A744 LDR W10, [X8 + 0x18]
	0x0362A748 AND W11, W21, 0xFFFF
	0x0362A74C UBFM W12, W11, 0x4, 0x7
	0x0362A750 CMP W12, W10
	0x0362A754 B.CS 0x362A7B4
	0x0362A758 LDR W9, [X19 + 0x18]
	0x0362A75C CMP W22, W9
	0x0362A760 B.CS 0x362A7B4
	0x0362A764 ADD X12, X8, W12, 0x1, UXTW
	0x0362A768 LDRH W12, [X12 + 0x20]
	0x0362A76C ADD X13, X19, W22, 0x1, SXTW
	0x0362A770 AND W11, W11, 0xF
	0x0362A774 CMP W11, W10
	0x0362A778 STRH W12, [X13 + 0x20]
	0x0362A77C LDRSW X12, [X20]
	0x0362A780 ADD W13, W12, 0x1
	0x0362A784 STR W13, [X20]
	0x0362A788 B.CS 0x362A7B4
	0x0362A78C CMP W12, W9
	0x0362A790 B.CS 0x362A7B4
	0x0362A794 ADD X8, X8, W11, 0x1, UXTW
	0x0362A798 LDRH W8, [X8 + 0x20]
	0x0362A79C ADD X9, X19, X12, 0x1, LSL
	0x0362A7A0 LDP X20, X19, [X31 + 0x20]
	0x0362A7A4 LDP X22, X21, [X31 + 0x10]
	0x0362A7A8 STRH W8, [X9 + 0x20]
	0x0362A7AC LDP X30, X23, [X31], #0x30
	0x0362A7B0 RET
	0x0362A7B4 BL 0x1C16F28
	0x0362A7B8 BL 0x1C16F20
	0x0362A7BC MOV X1, X31
	0x0362A7C0 B 0x33BDD8C
	0x0362A7C4 MOV X1, X31
	0x0362A7C8 B 0x33BDD8C
	0x0362A7CC MOV X1, X31
	0x0362A7D0 B 0x3367444
	0x0362A7D4 MOV X4, X31
	0x0362A7D8 B 0x33674E8
	0x0362A7DC MOV X4, X31
	0x0362A7E0 B 0x33B3620
	0x0362A7E4 SUB X31, X31, 0x70
	0x0362A7E8 STP X29, X30, [X31 + 0x10]
	0x0362A7EC STP X28, X27, [X31 + 0x20]
	0x0362A7F0 STP X26, X25, [X31 + 0x30]
	0x0362A7F4 STP X24, X23, [X31 + 0x40]
	0x0362A7F8 STP X22, X21, [X31 + 0x50]
	0x0362A7FC STP X20, X19, [X31 + 0x60]
	0x0362A800 ADRP X20, 0xDB6000
	0x0362A804 LDRB W8, [X20 + 0x4EA]
	0x0362A808 MOV W21, W4
	0x0362A80C MOV W23, W3
	0x0362A810 MOV X22, X2
	0x0362A814 MOV W19, W1
	0x0362A818 STR X0, [X31 + 0x8]
	0x0362A81C TBNZ X8, 0x0, 0x362A840
	0x0362A820 ADRP X0, 0xACB000
	0x0362A824 LDR X0, [X0 + 0x170]
	0x0362A828 BL 0x1C16CF4
	0x0362A82C ADRP X0, 0xACB000
	0x0362A830 LDR X0, [X0 + 0xC48]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xDB7000
	006 Move W8, [X21+1256]
	007 Move W20, W1
	008 Move W19, W0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xACC000
	014 Move X0, [X0+2600]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+1256], W8
	018 Subtract W8, W20, 1
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Move W9, 1
	021 NotImplemented "Instruction LSLV not yet implemented."
	022 Or X9, X31, -9223372034707292160
	023 NotImplemented "Instruction MOVK not yet implemented."
	024 And X31, X8, X9
	025 NotImplemented "Instruction CMP not yet implemented."
	026 NotImplemented "Instruction CMP not yet implemented."
	027 NotImplemented "Instruction CMP not yet implemented."
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Subtract W8, W19, 35
	030 And W9, W8, 0xFFFF
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move X9, 1
	033 NotImplemented "Instruction CMP not yet implemented."
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Subtract W8, W19, 35
	036 And W9, W8, 0xFFFF
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move X9, 0x1001
	039 NotImplemented "Instruction MOVK not yet implemented."
	040 NotImplemented "Instruction MOVK not yet implemented."
	041 Or X9, X9, 0xFFFFFF
	042 Compare W20, 0
	043 JumpIfNotEqual {72}
	044 Move X8, 0xACC000
	045 Move X8, [X8+2600]
	046 Move X0, [X8]
	047 Move W8, [X0+224]
	048 Compare W8, 0
	049 JumpIfNotEqual {51}
	050 Call 0x1C17DFC
	051 Move W0, W19
	052 Move X20, [X31+16]
	053 Move X19, [X31+24]
	054 Move X1, X31
	055 Move X30, [X31+32]
	056 Move X21, [X31+40]
	057 Call Uri.IsGenDelim, X0
	058 Return X0
	059 Subtract W8, W19, 35
	060 And W9, W8, 0xFFFF
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Move X9, 0x1001
	063 NotImplemented "Instruction MOVK not yet implemented."
	064 Subtract W8, W19, 35
	065 And W9, W8, 0xFFFF
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Move X9, 0x1001
	068 NotImplemented "Instruction MOVK not yet implemented."
	069 NotImplemented "Instruction MOVK not yet implemented."
	070 NotImplemented "Instruction LSRV not yet implemented."
	071 And W0, W8, 1
	072 Move W0, W31
	073 Move X20, [X31+16]
	074 Move X19, [X31+24]
	075 Move X30, [X31+32]
	076 Move X21, [X31+40]
	077 Return X0

Method: System.String EscapeUnescapeIri(System.Char* pInput, System.Int32 start, System.Int32 end, System.UriComponents component)

Disassembly:
	0x0362A834 BL 0x1C16CF4
	0x0362A838 MOVZ W8, 0x1
	0x0362A83C STRB W8, [X20 + 0x4EA]
	0x0362A840 ANDS W31, W19, 0xFFFF
	0x0362A844 MOV W26, W31
	0x0362A848 B.EQ 0x362A96C
	0x0362A84C ANDS W31, W23, 0xFFFF
	0x0362A850 B.EQ 0x362A96C
	0x0362A854 SUB W8, W23, 0x1
	0x0362A858 SUB W9, W19, 0x1
	0x0362A85C AND W8, W8, 0xFFFF
	0x0362A860 LDR X20, [X31 + 0x8]
	0x0362A864 CMP W8, W9, UXTH
	0x0362A868 CSEL W8, W23, W19, CC
	0x0362A86C MOV X27, X31
	0x0362A870 MOV W26, W31
	0x0362A874 MOVZ W28, 0x1
	0x0362A878 AND X29, X8, 0xFFFF
	0x0362A87C LDRH W24, [X20]
	0x0362A880 LDRH W23, [X22]
	0x0362A884 CMP W24, 0x2F
	0x0362A888 B.EQ 0x362A928
	0x0362A88C CMP W24, 0x23
	0x0362A890 MOVZ W0, 0x1
	0x0362A894 B.EQ 0x362A9C0
	0x0362A898 CMP W24, 0x3F
	0x0362A89C B.EQ 0x362A9C0
	0x0362A8A0 CMP W23, 0x23
	0x0362A8A4 B.EQ 0x362A968
	0x0362A8A8 CMP W23, 0x3F
	0x0362A8AC B.EQ 0x362A968
	0x0362A8B0 TBZ X21, 0x0, 0x362A940
	0x0362A8B4 ADRP X8, 0xACB000
	0x0362A8B8 LDR X8, [X8 + 0xC48]
	0x0362A8BC LDR X0, [X8]
	0x0362A8C0 LDR W8, [X0 + 0xE0]
	0x0362A8C4 CBNZ W8, 0x362A8CC
	0x0362A8C8 BL 0x1C16DFC
	0x0362A8CC MOV X0, X31
	0x0362A8D0 BL 0x3338524
	0x0362A8D4 ADRP X8, 0xACB000
	0x0362A8D8 LDR X8, [X8 + 0x170]
	0x0362A8DC MOV X25, X0
	0x0362A8E0 LDR X8, [X8]
	0x0362A8E4 LDR W9, [X8 + 0xE0]
	0x0362A8E8 CBNZ W9, 0x362A8F4
	0x0362A8EC MOV X0, X8
	0x0362A8F0 BL 0x1C16DFC
	0x0362A8F4 MOV W0, W24
	0x0362A8F8 MOV X1, X25
	0x0362A8FC MOV X2, X31
	0x0362A900 BL 0x331ADB0
	0x0362A904 AND W24, W0, 0xFFFF
	0x0362A908 MOV X0, X31
	0x0362A90C BL 0x3338524
	0x0362A910 MOV X1, X0
	0x0362A914 MOV W0, W23
	0x0362A918 MOV X2, X31
	0x0362A91C BL 0x331ADB0
	0x0362A920 CMP W24, W0, UXTH
	0x0362A924 B 0x362A944
	0x0362A928 CMP W23, 0x2F
	0x0362A92C CSET W8, EQ
	0x0362A930 AND W8, W28, W8, 0x0
	0x0362A934 TBZ X8, 0x0, 0x362A9BC
	0x0362A938 MOVZ W28, 0x1
	0x0362A93C B 0x362A94C
	0x0362A940 CMP W24, W23
	0x0362A944 CSET W8, EQ
	0x0362A948 AND W28, W28, W8, 0x0
	0x0362A94C ADD X27, X27, 0x1
	0x0362A950 ADD W26, W26, 0x1
	0x0362A954 ADD X20, X20, 0x2
	0x0362A958 CMP X29, X27
	0x0362A95C ADD X22, X22, 0x2
	0x0362A960 B.NE 0x362A87C
	0x0362A964 B 0x362A96C
	0x0362A968 MOV W26, W27
	0x0362A96C AND W8, W26, 0xFFFF
	0x0362A970 CMP W8, W19, UXTH
	0x0362A974 B.CS 0x362A9B4
	0x0362A978 LDR X8, [X31 + 0x8]
	0x0362A97C AND X9, X19, 0xFFFF
	0x0362A980 SUB X9, X9, W26, UXTH
	0x0362A984 MOVZ W0, 0x1
	0x0362A988 ADD X8, X8, W26, 0x1, UXTH
	0x0362A98C LDRH W10, [X8]
	0x0362A990 CMP W10, 0x23
	0x0362A994 B.EQ 0x362A9C0
	0x0362A998 CMP W10, 0x2F
	0x0362A99C B.EQ 0x362A9BC
	0x0362A9A0 CMP W10, 0x3F
	0x0362A9A4 B.EQ 0x362A9C0
	0x0362A9A8 SUBS X9, X9, 0x1
	0x0362A9AC ADD X8, X8, 0x2
	0x0362A9B0 B.NE 0x362A98C
	0x0362A9B4 MOVZ W0, 0x1
	0x0362A9B8 B 0x362A9C0
	0x0362A9BC MOV W0, W31
	0x0362A9C0 LDP X20, X19, [X31 + 0x60]
	0x0362A9C4 LDP X22, X21, [X31 + 0x50]
	0x0362A9C8 LDP X24, X23, [X31 + 0x40]
	0x0362A9CC LDP X26, X25, [X31 + 0x30]
	0x0362A9D0 LDP X28, X27, [X31 + 0x20]
	0x0362A9D4 LDP X29, X30, [X31 + 0x10]
	0x0362A9D8 ADD X31, X31, 0x70
	0x0362A9DC RET
	0x0362A9E0 STP X29, X30, [X31 - 0x60]!
	0x0362A9E4 STP X28, X27, [X31 + 0x10]
	0x0362A9E8 STP X26, X25, [X31 + 0x20]
	0x0362A9EC STP X24, X23, [X31 + 0x30]
	0x0362A9F0 STP X22, X21, [X31 + 0x40]
	0x0362A9F4 STP X20, X19, [X31 + 0x50]
	0x0362A9F8 ADD X29, X31, 0x0
	0x0362A9FC SUB X31, X31, 0x40
	0x0362AA00 STP W7, W6, [X29 - 0x20]
	0x0362AA04 STUR W5, [X29 - 0x24]
	0x0362AA08 MRS X23, 0xC000
	0x0362AA0C LDR X8, [X23 + 0x28]
	0x0362AA10 ADRP X22, 0xDB6000
	0x0362AA14 MOV X19, X4
	0x0362AA18 MOV X20, X3
	0x0362AA1C STUR X8, [X29 - 0x8]
	0x0362AA20 LDRB W8, [X22 + 0x4EB]
	0x0362AA24 MOV W26, W2
	0x0362AA28 MOV W24, W1
	0x0362AA2C MOV X21, X0
	0x0362AA30 TBNZ X8, 0x0, 0x362AA54
	0x0362AA34 ADRP X0, 0xAC9000
	0x0362AA38 LDR X0, [X0 + 0x5A8]
	0x0362AA3C BL 0x1C16CF4
	0x0362AA40 ADRP X0, 0xB11000
	0x0362AA44 LDR X0, [X0 + 0x58]
	0x0362AA48 BL 0x1C16CF4
	0x0362AA4C MOVZ W8, 0x1
	0x0362AA50 STRB W8, [X22 + 0x4EB]
	0x0362AA54 SUB W8, W26, W24
	0x0362AA58 MOVZ W9, 0xFFF0
	0x0362AA5C CMP W8, W9
	0x0362AA60 B.GE 0x362AEE4
	0x0362AA64 SUB X27, X31, 0xA0
	0x0362AA68 ADD X31, X27, 0x0
	0x0362AA6C MOVZ W2, 0xA0
	0x0362AA70 MOV X0, X27
	0x0362AA74 MOV W1, W31
	0x0362AA78 BL 0x3EB1B10
	0x0362AA7C CBZ X21, 0x362AA8C
	0x0362AA80 MOV X0, X31
	0x0362AA84 BL 0x32C1424
	0x0362AA88 ADD X21, X21, W0, SXTW
	0x0362AA8C CMP W26, W24
	0x0362AA90 B.LE 0x362AE5C
	0x0362AA94 LDRH W8, [X29 + 0x60]
	0x0362AA98 STUR X23, [X29 - 0x30]
	0x0362AA9C ADRP X23, 0xB11000
	0x0362AAA0 MOV W28, W24
	0x0362AAA4 STUR W8, [X29 - 0x18]
	0x0362AAA8 LDR X23, [X23 + 0x58]
	0x0362AAAC STUR W24, [X29 - 0x34]
	0x0362AAB0 STUR W26, [X29 - 0x14]
	0x0362AAB4 ADD X22, X21, W28, 0x1, SXTW
	0x0362AAB8 LDRH W25, [X22]
	0x0362AABC CMP W25, 0x80
	0x0362AAC0 B.CS 0x362ABC0
	0x0362AAC4 LDUR W8, [X29 - 0x18]
	0x0362AAC8 AND W8, W8, 0xFFFF
	0x0362AACC CMP W8, 0x25
	0x0362AAD0 B.NE 0x362AC28
	0x0362AAD4 CMP W25, 0x25
	0x0362AAD8 B.NE 0x362AC28
	0x0362AADC LDR X0, [X23]
	0x0362AAE0 LDR W8, [X0 + 0xE0]
	0x0362AAE4 CBNZ W8, 0x362AAEC
	0x0362AAE8 BL 0x1C16DFC
	0x0362AAEC MOVZ W3, 0x3
	0x0362AAF0 MOVZ W4, 0x78
	0x0362AAF4 MOV X0, X21
	0x0362AAF8 MOV X1, X20
	0x0362AAFC MOV W2, W28
	0x0362AB00 MOV X5, X19
	0x0362AB04 MOV W6, W24
	0x0362AB08 BL 0x362AEF4
	0x0362AB0C ADD W25, W28, 0x2
	0x0362AB10 CMP W25, W26
	0x0362AB14 MOV X20, X0
	0x0362AB18 B.GE 0x362AC80
	0x0362AB1C LDR X0, [X23]
	0x0362AB20 ADD W26, W28, 0x1
	0x0362AB24 LDRH W22, [X21, W26, SXTW]
	0x0362AB28 LDRH W24, [X21, W25, SXTW]
	0x0362AB2C LDR W8, [X0 + 0xE0]
	0x0362AB30 CBNZ W8, 0x362AB38
	0x0362AB34 BL 0x1C16DFC
	0x0362AB38 MOV W0, W22
	0x0362AB3C MOV W1, W24
	0x0362AB40 BL 0x362A090
	0x0362AB44 ORN W8, W31, W0, 0x0
	0x0362AB48 ANDS W31, W8, 0xFFFF
	0x0362AB4C B.EQ 0x362AC80
	0x0362AB50 LDRSW X8, [X19]
	0x0362AB54 ADD W9, W8, 0x1
	0x0362AB58 STR W9, [X19]
	0x0362AB5C CBZ X20, 0x362AEDC
	0x0362AB60 LDR W10, [X20 + 0x18]
	0x0362AB64 CMP W8, W10
	0x0362AB68 B.CS 0x362AEE0
	0x0362AB6C ADD X12, X20, X8, 0x1, LSL
	0x0362AB70 ADD W11, W8, 0x2
	0x0362AB74 CMP W9, W10
	0x0362AB78 MOVZ W13, 0x25
	0x0362AB7C STRH W13, [X12 + 0x20]
	0x0362AB80 STR W11, [X19]
	0x0362AB84 B.CS 0x362AEE0
	0x0362AB88 SXTW X12, W26
	0x0362AB8C LDRH W12, [X21, X12, LSL #1]
	0x0362AB90 ADD X9, X20, W9, 0x1, SXTW
	0x0362AB94 ADD W8, W8, 0x3
	0x0362AB98 CMP W11, W10
	0x0362AB9C STRH W12, [X9 + 0x20]
	0x0362ABA0 STR W8, [X19]
	0x0362ABA4 B.CS 0x362AEE0
	0x0362ABA8 SXTW X8, W25
	0x0362ABAC LDRH W8, [X21, X8, LSL #1]
	0x0362ABB0 ADD X9, X20, W11, 0x1, SXTW
	0x0362ABB4 MOV W28, W25
	0x0362ABB8 STRH W8, [X9 + 0x20]
	0x0362ABBC B 0x362ACA0
	0x0362ABC0 ADRP X8, 0xAC9000
	0x0362ABC4 LDR X8, [X8 + 0x5A8]
	0x0362ABC8 LDR X0, [X8]
	0x0362ABCC LDR W8, [X0 + 0xE0]
	0x0362ABD0 CBNZ W8, 0x362ABD8
	0x0362ABD4 BL 0x1C16DFC
	0x0362ABD8 SUB W25, W26, W28
	0x0362ABDC MOVZ W1, 0x27
	0x0362ABE0 MOV W0, W25
	0x0362ABE4 MOV X2, X31
	0x0362ABE8 STUR W24, [X29 - 0xC]
	0x0362ABEC BL 0x337EE94
	0x0362ABF0 UBFM W8, W0, 0x10, 0xF
	0x0362ABF4 CMP W8, 0x10000
	0x0362ABF8 B.LE 0x362AC74
	0x0362ABFC SXTH W9, W0
	0x0362AC00 MOVZ W8, 0x1
	0x0362AC04 ADD W10, W8, W28
	0x0362AC08 LDRH W10, [X21, W10, SXTW]
	0x0362AC0C CMP W10, 0x7F
	0x0362AC10 B.LS 0x362ACA8
	0x0362AC14 ADD W24, W8, 0x1
	0x0362AC18 CMP W9, W24, SXTH
	0x0362AC1C SXTH W8, W24
	0x0362AC20 B.GT 0x362AC04
	0x0362AC24 B 0x362ACAC
	0x0362AC28 LDUR W8, [X29 - 0x1C]
	0x0362AC2C CMP W25, W8, UXTH
	0x0362AC30 B.EQ 0x362ADB8
	0x0362AC34 LDUR W8, [X29 - 0x20]
	0x0362AC38 CMP W25, W8, UXTH
	0x0362AC3C B.EQ 0x362ADB8
	0x0362AC40 LDUR W8, [X29 - 0x18]
	0x0362AC44 CMP W25, W8, UXTH
	0x0362AC48 B.EQ 0x362AE00
	0x0362AC4C LDR X0, [X23]
	0x0362AC50 LDR W8, [X0 + 0xE0]
	0x0362AC54 CBNZ W8, 0x362AC5C
	0x0362AC58 BL 0x1C16DFC
	0x0362AC5C LDUR W8, [X29 - 0x24]
	0x0362AC60 TBZ X8, 0x0, 0x362ADAC
	0x0362AC64 MOV W0, W25
	0x0362AC68 BL 0x362B100
	0x0362AC6C TBZ X0, 0x0, 0x362ADB8
	0x0362AC70 B 0x362AE00
	0x0362AC74 MOVZ W24, 0x1
	0x0362AC78 MOVZ W8, 0x1
	0x0362AC7C B 0x362ACAC
	0x0362AC80 LDR X0, [X23]
	0x0362AC84 LDR W8, [X0 + 0xE0]
	0x0362AC88 CBNZ W8, 0x362AC90
	0x0362AC8C BL 0x1C16DFC
	0x0362AC90 MOVZ W0, 0x25
	0x0362AC94 MOV X1, X20
	0x0362AC98 MOV X2, X19
	0x0362AC9C BL 0x362A6B4
	0x0362ACA0 LDUR W26, [X29 - 0x14]
	0x0362ACA4 B 0x362ADFC
	0x0362ACA8 MOV W24, W8
	0x0362ACAC SUB W10, W28, 0x1
	0x0362ACB0 ADD W9, W10, W8
	0x0362ACB4 LDRH W9, [X21, W9, SXTW]
	0x0362ACB8 STUR W10, [X29 - 0x10]
	0x0362ACBC UBFM W9, W9, 0xA, 0x1F
	0x0362ACC0 CMP W9, 0x36
	0x0362ACC4 B.NE 0x362ACE0
	0x0362ACC8 AND W9, W24, 0xFFFF
	0x0362ACCC CMP W9, 0x1
	0x0362ACD0 B.EQ 0x362AE90
	0x0362ACD4 CMP W25, W8
	0x0362ACD8 B.EQ 0x362AE90
	0x0362ACDC ADD W24, W24, 0x1
	0x0362ACE0 LDR X0, [X23]
	0x0362ACE4 LDR W8, [X0 + 0xE0]
	0x0362ACE8 CBNZ W8, 0x362ACF0
	0x0362ACEC BL 0x1C16DFC
	0x0362ACF0 LDUR W6, [X29 - 0xC]
	0x0362ACF4 ADD W8, W24, W24, 0x1, LSL
	0x0362ACF8 UBFM W3, W8, 0x1E, 0x1D
	0x0362ACFC MOVZ W4, 0x1E0
	0x0362AD00 MOV X0, X21
	0x0362AD04 MOV X1, X20
	0x0362AD08 MOV W2, W28
	0x0362AD0C MOV X5, X19
	0x0362AD10 BL 0x362AEF4
	0x0362AD14 MOV X20, X0
	0x0362AD18 MOV X0, X31
	0x0362AD1C BL 0x3241948
	0x0362AD20 CBZ X0, 0x362AEDC
	0x0362AD24 LDR X8, [X0]
	0x0362AD28 SXTH W24, W24
	0x0362AD2C MOVZ W4, 0xA0
	0x0362AD30 MOV X1, X22
	0x0362AD34 LDR X9, [X8 + 0x298]
	0x0362AD38 LDR X5, [X8 + 0x2A0]
	0x0362AD3C MOV W2, W24
	0x0362AD40 MOV X3, X27
	0x0362AD44 BLR X9
	0x0362AD48 ANDS W31, W0, 0xFFFF
	0x0362AD4C B.EQ 0x362AE90
	0x0362AD50 UBFM W8, W0, 0x10, 0xF
	0x0362AD54 CMP W8, 0x1
	0x0362AD58 B.LT 0x362AD98
	0x0362AD5C MOV W26, W31
	0x0362AD60 SXTH W25, W0
	0x0362AD64 LDR X0, [X23]
	0x0362AD68 LDRB W22, [X27, W26, SXTW]
	0x0362AD6C LDR W8, [X0 + 0xE0]
	0x0362AD70 CBNZ W8, 0x362AD78
	0x0362AD74 BL 0x1C16DFC
	0x0362AD78 MOV W0, W22
	0x0362AD7C MOV X1, X20
	0x0362AD80 MOV X2, X19
	0x0362AD84 BL 0x362A6B4
	0x0362AD88 ADD W8, W26, 0x1
	0x0362AD8C SXTH W26, W8
	0x0362AD90 CMP W26, W25
	0x0362AD94 B.LT 0x362AD64
	0x0362AD98 LDP W26, W8, [X29 - 0x14]
	0x0362AD9C ADD W8, W8, W24
	0x0362ADA0 ADD W24, W28, W24
	0x0362ADA4 MOV W28, W8
	0x0362ADA8 B 0x362AE00
	0x0362ADAC MOV W0, W25
	0x0362ADB0 BL 0x362B020
	0x0362ADB4 TBNZ X0, 0x0, 0x362AE00
	0x0362ADB8 LDR X0, [X23]
	0x0362ADBC LDR W8, [X0 + 0xE0]
	0x0362ADC0 CBNZ W8, 0x362ADC8
	0x0362ADC4 BL 0x1C16DFC
	0x0362ADC8 MOVZ W3, 0x3
	0x0362ADCC MOVZ W4, 0x78
	0x0362ADD0 MOV X0, X21
	0x0362ADD4 MOV X1, X20
	0x0362ADD8 MOV W2, W28
	0x0362ADDC MOV X5, X19
	0x0362ADE0 MOV W6, W24
	0x0362ADE4 BL 0x362AEF4
	0x0362ADE8 MOV X20, X0
	0x0362ADEC MOV W0, W25
	0x0362ADF0 MOV X1, X20
	0x0362ADF4 MOV X2, X19
	0x0362ADF8 BL 0x362A6B4
	0x0362ADFC ADD W24, W28, 0x1
	0x0362AE00 ADD W28, W28, 0x1
	0x0362AE04 CMP W28, W26
	0x0362AE08 B.LT 0x362AAB4
	0x0362AE0C CMP W24, W28
	0x0362AE10 B.EQ 0x362AE58
	0x0362AE14 LDUR W8, [X29 - 0x34]
	0x0362AE18 CMP W24, W8
	0x0362AE1C B.NE 0x362AE24
	0x0362AE20 CBZ X20, 0x362AE58
	0x0362AE24 LDR X0, [X23]
	0x0362AE28 LDR W8, [X0 + 0xE0]
	0x0362AE2C CBNZ W8, 0x362AE34
	0x0362AE30 BL 0x1C16DFC
	0x0362AE34 MOV X0, X21
	0x0362AE38 MOV X1, X20
	0x0362AE3C MOV W2, W28
	0x0362AE40 MOV W3, W31
	0x0362AE44 MOV W4, W31
	0x0362AE48 MOV X5, X19
	0x0362AE4C MOV W6, W24
	0x0362AE50 BL 0x362AEF4
	0x0362AE54 MOV X20, X0
	0x0362AE58 LDUR X23, [X29 - 0x30]
	0x0362AE5C LDR X8, [X23 + 0x28]
	0x0362AE60 LDUR X9, [X29 - 0x8]
	0x0362AE64 CMP X8, X9
	0x0362AE68 B.NE 0x362AEF0
	0x0362AE6C MOV X0, X20
	0x0362AE70 ADD X31, X29, 0x0
	0x0362AE74 LDP X20, X19, [X31 + 0x50]
	0x0362AE78 LDP X22, X21, [X31 + 0x40]
	0x0362AE7C LDP X24, X23, [X31 + 0x30]
	0x0362AE80 LDP X26, X25, [X31 + 0x20]
	0x0362AE84 LDP X28, X27, [X31 + 0x10]
	0x0362AE88 LDP X29, X30, [X31], #0x60
	0x0362AE8C RET
	0x0362AE90 ADRP X0, 0xB11000
	0x0362AE94 LDR X0, [X0 + 0x568]
	0x0362AE98 BL 0x1C16D08
	0x0362AE9C MOV X1, X31
	0x0362AEA0 BL 0x320A1E4
	0x0362AEA4 MOV X19, X0
	0x0362AEA8 ADRP X0, 0xB11000
	0x0362AEAC LDR X0, [X0 + 0xD8]
	0x0362AEB0 BL 0x1C16D08
	0x0362AEB4 BL 0x1C16F10
	0x0362AEB8 MOV X1, X19
	0x0362AEBC MOV X20, X0
	0x0362AEC0 BL 0x3628F6C
	0x0362AEC4 ADRP X0, 0xB11000
	0x0362AEC8 LDR X0, [X0 + 0x570]
	0x0362AECC BL 0x1C16D08
	0x0362AED0 MOV X1, X0
	0x0362AED4 MOV X0, X20
	0x0362AED8 BL 0x1C16DEC
	0x0362AEDC BL 0x1C16F20
	0x0362AEE0 BL 0x1C16F28
	0x0362AEE4 ADRP X0, 0xB11000
	0x0362AEE8 LDR X0, [X0 + 0x128]
	0x0362AEEC B 0x362AE98
	0x0362AEF0 BL 0x3EB1B20
	0x0362AEF4 STR X30, [X31 - 0x50]!
	0x0362AEF8 STP X26, X25, [X31 + 0x10]
	0x0362AEFC STP X24, X23, [X31 + 0x20]
	0x0362AF00 STP X22, X21, [X31 + 0x30]
	0x0362AF04 STP X20, X19, [X31 + 0x40]
	0x0362AF08 ADRP X26, 0xDB6000
	0x0362AF0C LDRB W8, [X26 + 0x4EC]
	0x0362AF10 MOV W21, W6
	0x0362AF14 MOV X19, X5
	0x0362AF18 MOV W24, W4
	0x0362AF1C MOV W25, W3
	0x0362AF20 MOV W20, W2
	0x0362AF24 MOV X23, X1
	0x0362AF28 MOV X22, X0
	0x0362AF2C TBNZ X8, 0x0, 0x362AF44
	0x0362AF30 ADRP X0, 0xAD2000
	0x0362AF34 LDR X0, [X0 + 0x8D8]
	0x0362AF38 BL 0x1C16CF4
	0x0362AF3C MOVZ W8, 0x1
	0x0362AF40 STRB W8, [X26 + 0x4EC]
	0x0362AF44 LDR W8, [X19]
	0x0362AF48 CBZ X23, 0x362AF64
	0x0362AF4C LDR W9, [X23 + 0x18]
	0x0362AF50 ADD W10, W20, W25, SXTH
	0x0362AF54 SUB W10, W10, W21
	0x0362AF58 ADD W10, W10, W8
	0x0362AF5C CMP W10, W9
	0x0362AF60 B.LE 0x362AFB0
	0x0362AF64 ADRP X9, 0xAD2000
	0x0362AF68 LDR X9, [X9 + 0x8D8]
	0x0362AF6C LDR X0, [X9]
	0x0362AF70 ADD W9, W20, W24, SXTH
	0x0362AF74 SUB W9, W9, W21
	0x0362AF78 ADD W1, W9, W8
	0x0362AF7C BL 0x1C16D6C
	0x0362AF80 MOV X24, X0
	0x0362AF84 CBZ X23, 0x362AFAC
	0x0362AF88 LDR W8, [X19]
	0x0362AF8C CBZ W8, 0x362AFAC
	0x0362AF90 UBFM W4, W8, 0x1F, 0x1E
	0x0362AF94 MOV X0, X23
	0x0362AF98 MOV W1, W31
	0x0362AF9C MOV X2, X24
	0x0362AFA0 MOV W3, W31
	0x0362AFA4 MOV X5, X31
	0x0362AFA8 BL 0x33A8A9C
	0x0362AFAC MOV X23, X24
	0x0362AFB0 CMP W21, W20
	0x0362AFB4 B.EQ 0x362AFF0
	0x0362AFB8 LDR W8, [X19]
	0x0362AFBC ADD W9, W8, 0x1
	0x0362AFC0 CBZ X23, 0x362B00C
	0x0362AFC4 LDR W10, [X23 + 0x18]
	0x0362AFC8 CMP W8, W10
	0x0362AFCC B.CS 0x362B014
	0x0362AFD0 LDRH W10, [X22, W21, SXTW]
	0x0362AFD4 ADD W21, W21, 0x1
	0x0362AFD8 ADD X8, X23, W8, 0x1, SXTW
	0x0362AFDC CMP W20, W21
	0x0362AFE0 STRH W10, [X8 + 0x20]
	0x0362AFE4 MOV W8, W9
	0x0362AFE8 B.NE 0x362AFBC
	0x0362AFEC STR W9, [X19]
	0x0362AFF0 MOV X0, X23
	0x0362AFF4 LDP X20, X19, [X31 + 0x40]
	0x0362AFF8 LDP X22, X21, [X31 + 0x30]
	0x0362AFFC LDP X24, X23, [X31 + 0x20]
	0x0362B000 LDP X26, X25, [X31 + 0x10]
	0x0362B004 LDR X30, [X31], #0x50
	0x0362B008 RET
	0x0362B00C STR W9, [X19]
	0x0362B010 BL 0x1C16F20
	0x0362B014 ADD W8, W8, 0x1
	0x0362B018 STR W8, [X19]
	0x0362B01C BL 0x1C16F28
	0x0362B020 STP X30, X21, [X31 - 0x20]!
	0x0362B024 STP X20, X19, [X31 + 0x10]
	0x0362B028 ADRP X21, 0xDB5000
	0x0362B02C ADRP X20, 0xACA000
	0x0362B030 LDRB W8, [X21 + 0x4F2]
	0x0362B034 LDR X20, [X20 + 0xA28]
	0x0362B038 MOV W19, W0
	0x0362B03C TBNZ X8, 0x0, 0x362B078
	0x0362B040 ADRP X0, 0xB10000
	0x0362B044 LDR X0, [X0 + 0x48]
	0x0362B048 BL 0x1C16CF4
	0x0362B04C ADRP X0, 0xACA000
	0x0362B050 LDR X0, [X0 + 0xA28]
	0x0362B054 BL 0x1C16CF4
	0x0362B058 ADRP X0, 0xB10000
	0x0362B05C LDR X0, [X0 + 0x578]
	0x0362B060 BL 0x1C16CF4
	0x0362B064 ADRP X0, 0xB10000
	0x0362B068 LDR X0, [X0 + 0x580]
	0x0362B06C BL 0x1C16CF4
	0x0362B070 MOVZ W8, 0x1
	0x0362B074 STRB W8, [X21 + 0x4F2]
	0x0362B078 LDR X0, [X20]
	0x0362B07C LDR W8, [X0 + 0xE0]
	0x0362B080 CBNZ W8, 0x362B088
	0x0362B084 BL 0x1C16DFC
	0x0362B088 MOV W0, W19
	0x0362B08C MOV X1, X31

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+48], X29
	003 Move [X31+56], X30
	004 Move [X31+64], X28
	005 Move [X31+72], X27
	006 Move [X31+80], X26
	007 Move [X31+88], X25
	008 Move [X31+96], X24
	009 Move [X31+104], X23
	010 Move [X31+112], X22
	011 Move [X31+120], X21
	012 Move [X31+128], X20
	013 Move [X31+136], X19
	014 Move [X31+24], W3
	015 Move X19, 0xDB7000
	016 Move X22, 0xAD3000
	017 Move W8, [X19+1257]
	018 Move X22, [X22+2264]
	019 Move W20, W2
	020 Move W25, W1
	021 Move X21, X0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {58}
	026 Move X0, 0xACA000
	027 Move X0, [X0+1560]
	028 Call 0x1C17CF4
	029 Move X0, 0xAD3000
	030 Move X0, [X0+2264]
	031 Call 0x1C17CF4
	032 Move X0, 0xACC000
	033 Move X0, [X0+368]
	034 Call 0x1C17CF4
	035 Move X0, 0xAF9000
	036 Move X0, [X0+1608]
	037 Call 0x1C17CF4
	038 Move X0, 0xAF9000
	039 Move X0, [X0+872]
	040 Call 0x1C17CF4
	041 Move X0, 0xAF9000
	042 Move X0, [X0+1016]
	043 Call 0x1C17CF4
	044 Move X0, 0xB12000
	045 Move X0, [X0+1376]
	046 Call 0x1C17CF4
	047 Move X0, 0xB12000
	048 Move X0, [X0+88]
	049 Call 0x1C17CF4
	050 Move X0, 0xACC000
	051 Move X0, [X0+2600]
	052 Call 0x1C17CF4
	053 Move X0, 0xACA000
	054 Move X0, [X0+2440]
	055 Call 0x1C17CF4
	056 Move W8, 1
	057 Move [X19+1257], W8
	058 Move X0, [X22]
	059 Subtract W1, W20, W25
	060 Move [X31+36], W31
	061 Call 0x1C17D6C
	062 Move W1, 3
	063 Move X2, X31
	064 Move X22, X0
	065 Call GCHandle.Alloc, X0, X1
	066 Move [X31+40], X0
	067 Add X0, X31, 40
	068 Move X1, X31
	069 Call GCHandle.AddrOfPinnedObject, X0
	070 Move X1, X31
	071 Call IntPtr.op_Explicit, X0
	072 NotImplemented "Instruction CMP not yet implemented."
	073 Move [X31+36], W31
	074 Move X24, X0
	075 Move X23, X31
	076 Move [X31+28], W31
	077 Move [X31+32], W31
	078 Add X26, X21, W25
	079 NotImplemented "Instruction LDRH not yet implemented."
	080 NotImplemented "Instruction CMP not yet implemented."
	081 Add W19, W25, 2
	082 NotImplemented "Instruction CMP not yet implemented."
	083 Move X8, 0xB12000
	084 Move X8, [X8+88]
	085 Move X29, X23
	086 Add W23, W25, 1
	087 NotImplemented "Instruction LDRH not yet implemented."
	088 Move X0, [X8]
	089 NotImplemented "Instruction LDRH not yet implemented."
	090 Move W8, [X0+224]
	091 Compare W8, 0
	092 JumpIfNotEqual {94}
	093 Call 0x1C17DFC
	094 Move W0, W27
	095 Move W1, W28
	096 Call UriHelper.EscapedAscii, X0, X1
	097 And W8, W0, 0xFFFF
	098 NotImplemented "Instruction CMP not yet implemented."
	099 Move W9, 0xFFFF
	100 NotImplemented "Instruction CMP not yet implemented."
	101 Move W1, [X31+24]
	102 Move W27, W0
	103 Call IriHelper.CheckIsReserved, X0, X1
	104 Move TEMP, X0
	105 And TEMP, TEMP, 1
	106 Compare TEMP, 1
	107 JumpIfNotEqual {230}
	108 NotImplemented "Instruction LDRSW not yet implemented."
	109 NotImplemented "Instruction LDRH not yet implemented."
	110 Move X10, W23
	111 Add W11, W8, 1
	112 NotImplemented "Instruction STRH not yet implemented."
	113 NotImplemented "Instruction LDRH not yet implemented."
	114 Add W12, W8, 3
	115 Move X10, W19
	116 Add W8, W8, 2
	117 NotImplemented "Instruction STRH not yet implemented."
	118 Move [X31+36], W12
	119 NotImplemented "Instruction LDRH not yet implemented."
	120 NotImplemented "Instruction STRH not yet implemented."
	121 Move X23, X29
	122 NotImplemented "Instruction CMP not yet implemented."
	123 NotImplemented "Instruction LDRSW not yet implemented."
	124 Add W9, W8, 1
	125 Move [X31+36], W9
	126 NotImplemented "Instruction STRH not yet implemented."
	127 NotImplemented "Instruction LDRSW not yet implemented."
	128 Add W9, W8, 1
	129 Move [X31+36], W9
	130 Move W9, 37
	131 Move X8, 0xACC000
	132 Move X8, [X8+368]
	133 Move X0, [X8]
	134 Move W8, [X0+224]
	135 Compare W8, 0
	136 JumpIfNotEqual {138}
	137 Call 0x1C17DFC
	138 Move W0, W27
	139 Move X1, X31
	140 Call Char.IsHighSurrogate, X0
	141 Move TEMP, X0
	142 And TEMP, TEMP, 1
	143 Compare TEMP, 1
	144 JumpIfNotEqual {168}
	145 Add W19, W25, 1
	146 NotImplemented "Instruction CMP not yet implemented."
	147 Move W8, [X31+24]
	148 NotImplemented "Instruction LDRH not yet implemented."
	149 Add X2, X31, 32
	150 Move W0, W27
	151 NotImplemented "Instruction CMP not yet implemented."
	152 NotImplemented "Instruction CSET not yet implemented."
	153 Call IriHelper.CheckIriUnicodeRange, X0, X1, X2, X3
	154 Move TEMP, X0
	155 And TEMP, TEMP, 1
	156 Compare TEMP, 1
	157 JumpIfNotEqual {210}
	158 NotImplemented "Instruction LDRSW not yet implemented."
	159 NotImplemented "Instruction LDRH not yet implemented."
	160 Move W10, W19
	161 Move X10, W10
	162 NotImplemented "Instruction STRH not yet implemented."
	163 Add W9, W8, 2
	164 Move [X31+36], W9
	165 NotImplemented "Instruction LDRH not yet implemented."
	166 Add W8, W8, 1
	167 NotImplemented "Instruction STRH not yet implemented."
	168 Subtract W8, W27, 160
	169 Move W8, W8
	170 ShiftRight W8, 5
	171 And W8, W8, 0x7FFF
	172 NotImplemented "Instruction CMP not yet implemented."
	173 Add W8, W27, 1792
	174 And W8, W8, 0xFFFF
	175 NotImplemented "Instruction CMP not yet implemented."
	176 Move W8, [X31+24]
	177 NotImplemented "Instruction CMP not yet implemented."
	178 Add W8, W27, 528
	179 And W9, W8, 0xFFFF
	180 NotImplemented "Instruction CMP not yet implemented."
	181 Add W8, W27, 0x2000
	182 Move W8, W8
	183 ShiftRight W8, 8
	184 And W8, W8, 0x7FFF
	185 NotImplemented "Instruction CMP not yet implemented."
	186 Move X8, 0xACC000
	187 Move X8, [X8+2600]
	188 Move X0, [X8]
	189 Move W8, [X0+224]
	190 Compare W8, 0
	191 JumpIfNotEqual {193}
	192 Call 0x1C17DFC
	193 Move W0, W27
	194 Move X1, X31
	195 Call Uri.IsBidiControlCharacter, X0
	196 Move TEMP, X0
	197 And TEMP, TEMP, 1
	198 Compare TEMP, 1
	199 JumpIfEqual {205}
	200 NotImplemented "Instruction LDRSW not yet implemented."
	201 Add W9, W8, 1
	202 Move [X31+36], W9
	203 NotImplemented "Instruction LDRH not yet implemented."
	204 NotImplemented "Instruction STRH not yet implemented."
	205 Move W19, W25
	206 Add W25, W19, 1
	207 NotImplemented "Instruction CMP not yet implemented."
	208 And W8, W8, 0xFFFF
	209 NotImplemented "Instruction CMP not yet implemented."
	210 Move W8, [X31+28]
	211 NotImplemented "Instruction CMP not yet implemented."
	212 Compare X22, 0
	213 JumpIfEqual {544}
	214 Move W8, [X22+24]
	215 Move W9, 0xFFA6
	216 NotImplemented "Instruction MOVK not yet implemented."
	217 NotImplemented "Instruction CMP not yet implemented."
	218 Move X9, 0xAD3000
	219 Move X9, [X9+2264]
	220 Add W1, W8, 90
	221 Move X0, [X9]
	222 Call 0x1C17D6C
	223 Move X22, X0
	224 Compare X0, 0
	225 JumpIfEqual {322}
	226 Move W8, [X22+24]
	227 Compare W8, 0
	228 JumpIfEqual {321}
	229 Add X0, X22, 32
	230 Move X8, 0xB12000
	231 Move X8, [X8+88]
	232 Move X0, [X8]
	233 Move W8, [X0+224]
	234 Compare W8, 0
	235 JumpIfNotEqual {237}
	236 Call 0x1C17DFC
	237 And W8, W27, 0xFFFF
	238 NotImplemented "Instruction CMP not yet implemented."
	239 Subtract W8, W27, 127
	240 And W8, W8, 0xFFFF
	241 NotImplemented "Instruction CMP not yet implemented."
	242 Subtract W8, W27, 59
	243 Move W9, 0xFFFD
	244 And W8, W8, 0xFFFF
	245 And W9, W27, W9
	246 Subtract W10, W27, 35
	247 NotImplemented "Instruction CMP not yet implemented."
	248 And W10, W10, 0xFFFF
	249 NotImplemented "Instruction CSET not yet implemented."
	250 NotImplemented "Instruction CMP not yet implemented."
	251 NotImplemented "Instruction CSET not yet implemented."
	252 NotImplemented "Instruction CMP not yet implemented."
	253 And W8, W8, W9
	254 Move TEMP, X8
	255 And TEMP, TEMP, 1
	256 Compare TEMP, 1
	257 JumpIfEqual {108}
	258 And W8, W27, 0xFFFF
	259 Subtract W9, W8, 43
	260 NotImplemented "Instruction CMP not yet implemented."
	261 Move W10, 1
	262 NotImplemented "Instruction LSLV not yet implemented."
	263 Move X10, 19
	264 NotImplemented "Instruction MOVK not yet implemented."
	265 And X31, X9, X10
	266 NotImplemented "Instruction CMP not yet implemented."
	267 Move X23, X29
	268 Compare X29, 0
	269 JumpIfNotEqual {278}
	270 Move X8, 0xACA000
	271 Move X8, [X8+1560]
	272 Subtract W1, W20, W25
	273 Move X0, [X8]
	274 Call 0x1C17D6C
	275 Move X23, X0
	276 Compare X0, 0
	277 JumpIfEqual {544}
	278 Move X29, 0xACA000
	279 Move W8, [X23+24]
	280 Move X29, [X29+2440]
	281 Compare W8, 0
	282 JumpIfEqual {543}
	283 Add W8, W25, 3
	284 NotImplemented "Instruction CMP not yet implemented."
	285 Move [X23+32], W27
	286 Move X28, X23
	287 Move W23, 1
	288 Move W19, W25
	289 Add W8, W19, 3
	290 NotImplemented "Instruction LDRH not yet implemented."
	291 NotImplemented "Instruction CMP not yet implemented."
	292 Add W8, W19, 5
	293 NotImplemented "Instruction CMP not yet implemented."
	294 Move X9, 0xB12000
	295 Move X9, [X9+88]
	296 NotImplemented "Instruction LDRH not yet implemented."
	297 Move X0, [X9]
	298 Add W9, W19, 4
	299 NotImplemented "Instruction LDRH not yet implemented."
	300 Move W9, [X0+224]
	301 Compare W9, 0
	302 JumpIfNotEqual {304}
	303 Call 0x1C17DFC
	304 Move W0, W26
	305 Move W1, W27
	306 Call UriHelper.EscapedAscii, X0, X1
	307 Subtract W8, W0, 128
	308 Move W9, 0xFF7E
	309 NotImplemented "Instruction CMP not yet implemented."
	310 Move W8, [X28+24]
	311 NotImplemented "Instruction CMP not yet implemented."
	312 Move X9, X28
	313 Add W26, W23, 1
	314 Add W8, W19, 3
	315 Add W10, W19, 6
	316 Add X9, X28, W23
	317 NotImplemented "Instruction CMP not yet implemented."
	318 Move W19, W8
	319 Move W23, W26
	320 Move [X9+32], W0
	321 Move X0, X31
	322 Move W8, [X31+36]
	323 Move X1, X24
	324 Move X3, X31
	325 Move W2, W8
	326 ShiftRight W2, 31
	327 And W2, W2, 0x3FFFFFFF
	328 Call Buffer.Memcpy, X0, X1, X2
	329 Add X0, X31, 40
	330 Move X1, X31
	331 Call GCHandle.get_IsAllocated, X0
	332 Move TEMP, X0
	333 And TEMP, TEMP, 1
	334 Compare TEMP, 1
	335 JumpIfNotEqual {339}
	336 Add X0, X31, 40
	337 Move X1, X31
	338 Call GCHandle.Free, X0
	339 Move W8, [X31+28]
	340 Move W1, 3
	341 Move X0, X22
	342 Move X2, X31
	343 Add W8, W8, 90
	344 Move [X31+28], W8
	345 Call GCHandle.Alloc, X0, X1
	346 Move [X31+40], X0
	347 Add X0, X31, 40
	348 Move X1, X31
	349 Call GCHandle.AddrOfPinnedObject, X0
	350 Move X1, X31
	351 Call IntPtr.op_Explicit, X0
	352 Move X24, X0
	353 Move X8, 0xACA000
	354 Move X8, [X8+1560]
	355 Move W1, 4
	356 Move X0, [X8]
	357 Call 0x1C17D6C
	358 Move X27, X0
	359 Compare X0, 0
	360 JumpIfEqual {365}
	361 Move W8, [X27+24]
	362 Compare W8, 0
	363 JumpIfEqual {365}
	364 Add X28, X27, 32
	365 Move X28, X31
	366 Move X0, X31
	367 Call Encoding.get_UTF8
	368 Compare X0, 0
	369 JumpIfEqual {544}
	370 Move X8, [X0]
	371 Move W9, [X31+32]
	372 Move W4, 4
	373 Move X1, X26
	374 Move X10, [X8+664]
	375 Move X5, [X8+672]
	376 NotImplemented "Instruction CMP not yet implemented."
	377 Move W8, 1
	378 NotImplemented "Instruction CINC not yet implemented."
	379 Move X3, X28
	380 NotImplemented "Instruction BLR not yet implemented."
	381 Move W9, [X31+28]
	382 Subtract W8, W0, W0
	383 NotImplemented "Instruction CMP not yet implemented."
	384 Add W9, W8, W9
	385 Move [X31+28], W9
	386 Compare X27, 0
	387 JumpIfEqual {544}
	388 Move X29, X23
	389 Move X19, X31
	390 Move W23, W0
	391 Add X28, X27, 32
	392 Move W8, [X27+24]
	393 NotImplemented "Instruction CMP not yet implemented."
	394 Move X8, 0xB12000
	395 Move X8, [X8+88]
	396 Move W26, [X28]
	397 Move X0, [X8]
	398 Move W8, [X0+224]
	399 Compare W8, 0
	400 JumpIfNotEqual {402}
	401 Call 0x1C17DFC
	402 Add X2, X31, 36
	403 Move W0, W26
	404 Move X1, X22
	405 Call UriHelper.EscapeAsciiChar, X0, X1, X2
	406 Add X19, X19, 1
	407 NotImplemented "Instruction CMP not yet implemented."
	408 Move W19, W25
	409 NotImplemented "Instruction LDRSW not yet implemented."
	410 Add W9, W8, 1
	411 Move [X31+36], W9
	412 NotImplemented "Instruction STRH not yet implemented."
	413 Move W26, 1
	414 Move W26, W23
	415 Move W8, W19
	416 Add W19, W8, 2
	417 Move X23, X28
	418 Move X0, X31
	419 Call Encoding.get_UTF8
	420 Compare X0, 0
	421 JumpIfEqual {544}
	422 Move X8, [X0]
	423 Move X9, [X8+488]
	424 Move X1, [X8+496]
	425 NotImplemented "Instruction BLR not yet implemented."
	426 Move X27, X0
	427 Compare X0, 0
	428 JumpIfEqual {440}
	429 Move X9, 0xAF9000
	430 Move X8, [X27]
	431 Move X9, [X9+1016]
	432 Move W10, [X8+304]
	433 Move X1, [X9]
	434 Move W9, [X1+304]
	435 NotImplemented "Instruction CMP not yet implemented."
	436 Move X8, [X8+200]
	437 Add X8, X8, X9
	438 NotImplemented "Instruction LDUR not yet implemented."
	439 NotImplemented "Instruction CMP not yet implemented."
	440 Move X8, 0xAF9000
	441 Move X8, [X8+872]
	442 Move X0, [X8]
	443 Call 0x1C17F10
	444 Move X1, [X29]
	445 Move X2, X31
	446 Move X28, X0
	447 Call EncoderReplacementFallback..ctor, X0, X1
	448 Compare X27, 0
	449 JumpIfEqual {544}
	450 Move X0, X27
	451 Move X1, X28
	452 Move X2, X31
	453 Call Encoding.set_EncoderFallback, X0, X1
	454 Move X8, 0xAF9000
	455 Move X8, [X8+1608]
	456 Move X0, [X8]
	457 Call 0x1C17F10
	458 Move X1, [X29]
	459 Move X2, X31
	460 Move X28, X0
	461 Call DecoderReplacementFallback..ctor, X0, X1
	462 Move X0, X27
	463 Move X1, X28
	464 Move X2, X31
	465 Call Encoding.set_DecoderFallback, X0, X1
	466 Move X8, 0xAD3000
	467 Move X8, [X8+2264]
	468 Move W1, [X23+24]
	469 Move X0, [X8]
	470 Call 0x1C17D6C
	471 Move X8, [X27]
	472 Move X28, X0
	473 Move X0, X27
	474 Move X1, X23
	475 Move X9, [X8+744]
	476 Move X6, [X8+752]
	477 Move W2, W31
	478 Move W3, W26
	479 Move X4, X28
	480 Move W5, W31
	481 NotImplemented "Instruction BLR not yet implemented."
	482 Compare W0, 0
	483 JumpIfEqual {505}
	484 Move X8, 0xB12000
	485 Move X8, [X8+88]
	486 Move W27, W0
	487 Move X0, [X8]
	488 Move W8, [X0+224]
	489 Compare W8, 0
	490 JumpIfNotEqual {492}
	491 Call 0x1C17DFC
	492 Move W8, [X31+24]
	493 Add X2, X31, 36
	494 Move X0, X24
	495 Move X1, X22
	496 NotImplemented "Instruction CMP not yet implemented."
	497 NotImplemented "Instruction CSET not yet implemented."
	498 Move W8, 1
	499 Move X3, X28
	500 Move W4, W27
	501 Move X5, X23
	502 Move W6, W26
	503 Move [X31], W8
	504 Call UriHelper.MatchUTF8Sequence, X0, X1, X2, X3, X4, X5, X6, X7, X8
	505 NotImplemented "Instruction CMP not yet implemented."
	506 Move W8, [X31+36]
	507 NotImplemented "Instruction LDRH not yet implemented."
	508 Add W25, W25, 1
	509 NotImplemented "Instruction CMP not yet implemented."
	510 NotImplemented "Instruction STRH not yet implemented."
	511 Add W8, W8, 1
	512 Move [X31+36], W8
	513 Add X0, X31, 40
	514 Move X1, X31
	515 Call GCHandle.get_IsAllocated, X0
	516 Move TEMP, X0
	517 And TEMP, TEMP, 1
	518 Compare TEMP, 1
	519 JumpIfNotEqual {523}
	520 Add X0, X31, 40
	521 Move X1, X31
	522 Call GCHandle.Free, X0
	523 Move W3, [X31+36]
	524 Move X0, X31
	525 Move X1, X22
	526 Move W2, W31
	527 Move X4, X31
	528 Call String.CreateString, X0, X1, X2, X3
	529 Move X20, [X31+128]
	530 Move X19, [X31+136]
	531 Move X22, [X31+112]
	532 Move X21, [X31+120]
	533 Move X24, [X31+96]
	534 Move X23, [X31+104]
	535 Move X26, [X31+80]
	536 Move X25, [X31+88]
	537 Move X28, [X31+64]
	538 Move X27, [X31+72]
	539 Move X29, [X31+48]
	540 Move X30, [X31+56]
	541 Add X31, X31, 144
	542 Return X0
	543 Call 0x1C17F28
	544 Call 0x1C17F20
	545 Call 0x1C17F30
	546 Move X8, 0xB11000
	547 Move X8, [X8+1376]
	548 Move X1, [X8]
	549 Call 0x1C17DEC
	550 Move X0, X27
	551 Call 0x1C181E0

