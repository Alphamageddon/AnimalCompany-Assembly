Type: System.Timers.Timer

Method: System.Void .ctor()

Disassembly:
	0x0362F888 BL 0x1C5C6E0
	0x0362F88C LDR X8, [X19 + 0x38]
	0x0362F890 LDR X0, [X8 + 0x10]
	0x0362F894 LDRB W8, [X0 + 0x135]
	0x0362F898 TBNZ X8, 0x0, 0x362F8A0
	0x0362F89C BL 0x1C5C684
	0x0362F8A0 LDR W8, [X0 + 0xE0]
	0x0362F8A4 CBNZ W8, 0x362F8AC
	0x0362F8A8 BL 0x1C16DFC
	0x0362F8AC LDR X8, [X19 + 0x38]
	0x0362F8B0 ADRP X22, 0xB0C000
	0x0362F8B4 LDR X0, [X8 + 0x10]
	0x0362F8B8 LDRB W8, [X0 + 0x135]
	0x0362F8BC LDR X22, [X22 + 0x6D0]
	0x0362F8C0 TBNZ X8, 0x0, 0x362F8C8
	0x0362F8C4 BL 0x1C5C684
	0x0362F8C8 LDR X8, [X20]
	0x0362F8CC LDR X9, [X0 + 0xB8]
	0x0362F8D0 LDR X0, [X22]
	0x0362F8D4 LDR X8, [X8 + 0xB8]
	0x0362F8D8 LDR X20, [X9]
	0x0362F8DC LDR X23, [X8]
	0x0362F8E0 BL 0x1C16F10
	0x0362F8E4 MOV X1, X31
	0x0362F8E8 MOV X19, X0
	0x0362F8EC BL 0x33BDD8C
	0x0362F8F0 STP X31, X21, [X19 + 0x10]
	0x0362F8F4 STR X20, [X19 + 0x20]
	0x0362F8F8 STR W31, [X19 + 0x28]
	0x0362F8FC STR X23, [X19 + 0x38]
	0x0362F900 LDR X8, [X22]
	0x0362F904 LDP X22, X21, [X31 + 0x10]
	0x0362F908 LDR X8, [X8 + 0xB8]
	0x0362F90C STR X19, [X8]
	0x0362F910 LDP X20, X19, [X31 + 0x20]
	0x0362F914 LDP X30, X23, [X31], #0x30
	0x0362F918 RET
	0x0362F91C STR X30, [X31 - 0x20]!
	0x0362F920 STP X20, X19, [X31 + 0x10]
	0x0362F924 ADRP X19, 0xDB1000
	0x0362F928 ADRP X20, 0xB0C000
	0x0362F92C LDRB W8, [X19 + 0x50E]
	0x0362F930 LDR X20, [X20 + 0x6D8]
	0x0362F934 TBNZ X8, 0x0, 0x362F94C
	0x0362F938 ADRP X0, 0xB0C000
	0x0362F93C LDR X0, [X0 + 0x6D8]
	0x0362F940 BL 0x1C16CF4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xDB2000
	006 Move X20, 0xB0D000
	007 Move W8, [X21+1284]
	008 Move X20, [X20+1640]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {25}
	014 Move X0, 0xB0D000
	015 Move X0, [X0+1640]
	016 Call 0x1C17CF4
	017 Move X0, 0xACD000
	018 Move X0, [X0+3192]
	019 Call 0x1C17CF4
	020 Move X0, 0xB0D000
	021 Move X0, [X0+1648]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+1284], W8
	025 Move X0, [X20]
	026 Move X21, 0xACD000
	027 Move X20, 0xB0D000
	028 Move W8, [X0+224]
	029 Move X21, [X21+3192]
	030 Move X20, [X20+1648]
	031 Compare W8, 0
	032 JumpIfNotEqual {34}
	033 Call 0x1C17DFC
	034 Move X0, X19
	035 Move X1, X31
	036 Call Component..ctor, X0
	037 Move X8, 0x40590000
	038 Move W9, 1
	039 Move [X19+48], W31
	040 Move [X19+40], X8
	041 Move [X19+64], W9
	042 NotImplemented "Instruction STURH not yet implemented."
	043 Move X0, [X21]
	044 Call 0x1C17F10
	045 Move X2, [X20]
	046 Move X1, X19
	047 Move X3, X31
	048 Move X20, X0
	049 Call TimerCallback..ctor, X0, X1, X2
	050 Move [X19+96], X20
	051 Move X20, [X31+16]
	052 Move X19, [X31+24]
	053 Move X30, [X31+32]
	054 Move X21, [X31+40]
	055 Return 

Method: System.Void .ctor(System.Double interval)

Disassembly:
	0x0362F944 MOVZ W8, 0x1
	0x0362F948 STRB W8, [X19 + 0x50E]
	0x0362F94C LDR X0, [X20]
	0x0362F950 BL 0x1C16D9C
	0x0362F954 STP X30, X21, [X31 - 0x20]!
	0x0362F958 STP X20, X19, [X31 + 0x10]
	0x0362F95C MOV X20, X1
	0x0362F960 MOV X1, X31
	0x0362F964 MOV X19, X2
	0x0362F968 MOV X21, X0
	0x0362F96C BL 0x33BDD8C
	0x0362F970 STP X20, X19, [X21 + 0x10]
	0x0362F974 LDP X20, X19, [X31 + 0x10]
	0x0362F978 LDP X30, X21, [X31], #0x20
	0x0362F97C RET
	0x0362F980 MOVZ W0, 0x1
	0x0362F984 RET
	0x0362F988 STR X30, [X31 - 0x10]!
	0x0362F98C LDR X8, [X0 + 0x10]
	0x0362F990 CBZ X8, 0x362F9A8
	0x0362F994 LDR X8, [X8 + 0x68]
	0x0362F998 CBZ X8, 0x362F9A8
	0x0362F99C LDR W0, [X8 + 0x18]
	0x0362F9A0 LDR X30, [X31], #0x10
	0x0362F9A4 RET
	0x0362F9A8 BL 0x1C16F20
	0x0362F9AC B 0x362F9B0
	0x0362F9B0 STR X30, [X31 - 0x30]!
	0x0362F9B4 STP X22, X21, [X31 + 0x10]
	0x0362F9B8 STP X20, X19, [X31 + 0x20]
	0x0362F9BC ADRP X21, 0xDB1000
	0x0362F9C0 LDRB W8, [X21 + 0x512]
	0x0362F9C4 MOV W20, W1
	0x0362F9C8 MOV X19, X0
	0x0362F9CC TBNZ X8, 0x0, 0x362F9FC
	0x0362F9D0 ADRP X0, 0xB0C000
	0x0362F9D4 LDR X0, [X0 + 0x6D0]
	0x0362F9D8 BL 0x1C16CF4
	0x0362F9DC ADRP X0, 0xB0C000
	0x0362F9E0 LDR X0, [X0 + 0x6E0]
	0x0362F9E4 BL 0x1C16CF4
	0x0362F9E8 ADRP X0, 0xAC4000
	0x0362F9EC LDR X0, [X0 + 0x758]
	0x0362F9F0 BL 0x1C16CF4
	0x0362F9F4 MOVZ W8, 0x1
	0x0362F9F8 STRB W8, [X21 + 0x512]
	0x0362F9FC STR W31, [X31 + 0xC]
	0x0362FA00 LDR X21, [X19 + 0x18]
	0x0362FA04 CBZ X21, 0x362FA4C
	0x0362FA08 ADRP X8, 0xAC4000
	0x0362FA0C LDR X8, [X8 + 0x758]
	0x0362FA10 ADRP X22, 0xB0C000
	0x0362FA14 ADD X1, X31, 0x8
	0x0362FA18 LDR X0, [X8]
	0x0362FA1C LDR X22, [X22 + 0x6E0]
	0x0362FA20 STR W20, [X31 + 0x8]
	0x0362FA24 BL 0x1C16E04
	0x0362FA28 LDR X3, [X22]
	0x0362FA2C MOV X1, X0
	0x0362FA30 ADD X2, X31, 0xC
	0x0362FA34 MOV X0, X21
	0x0362FA38 BL 0x21EBB50
	0x0362FA3C TBZ X0, 0x0, 0x362FA7C
	0x0362FA40 LDR W1, [X31 + 0xC]
	0x0362FA44 MOV X0, X19
	0x0362FA48 B 0x362FA74
	0x0362FA4C LDR X8, [X19 + 0x10]
	0x0362FA50 CBZ X8, 0x362FAB0
	0x0362FA54 LDR X8, [X8 + 0x68]
	0x0362FA58 CBZ X8, 0x362FAB0
	0x0362FA5C TBNZ X20, 0x1F, 0x362FA7C
	0x0362FA60 LDR W8, [X8 + 0x18]
	0x0362FA64 CMP W8, W20
	0x0362FA68 B.LE 0x362FA7C
	0x0362FA6C MOV X0, X19
	0x0362FA70 MOV W1, W20

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], D8
	003 Move [X31+24], X30
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move V8, V0
	007 Move X19, X0
	008 Call Timer..ctor, X0
	009 NotImplemented "Instruction FCMP not yet implemented."
	010 Move W0, 1
	011 Move V0, V8
	012 Call Timer.CalculateRoundedInterval, V0, X0
	013 NotImplemented "Instruction SCVTF not yet implemented."
	014 Move [X19+40], D0
	015 Move X20, [X31+32]
	016 Move X19, [X31+40]
	017 Move X30, [X31+24]
	018 Move V8, [X31+16]
	019 Add X31, X31, 48
	020 Return 
	021 Move X0, 0xAC5000
	022 Move X0, [X0+2512]
	023 Call 0x1C17D08
	024 Move W1, 2
	025 Call 0x1C17D6C
	026 Move X19, X0
	027 Call 0x19913C0
	028 Move X20, 0xB0D000
	029 Move X20, [X20+1656]
	030 Move X0, X20
	031 Call 0x1C17D08
	032 Move X1, X0
	033 Move X0, X19
	034 Call 0x19990B4
	035 Move X0, X20
	036 Call 0x1C17D08
	037 Move X2, X0
	038 Move X0, X19
	039 Move X1, X31
	040 Call 0x1994444
	041 Move [X31+8], D8
	042 Move X0, 0xAC8000
	043 Move X0, [X0+2424]
	044 Call 0x1C17D08
	045 Add X1, X31, 8
	046 Call 0x1C17E04
	047 Move X20, X0
	048 Move X0, X19
	049 Call 0x19913C0
	050 Move X0, X19
	051 Move X1, X20
	052 Call 0x19990B4
	053 Move W1, 1
	054 Move X0, X19
	055 Move X2, X20
	056 Call 0x1994444
	057 Move X0, 0xB0D000
	058 Move X0, [X0+1664]
	059 Call 0x1C17D08
	060 Move X1, X19
	061 Move X2, X31
	062 Call SR.GetString, X0, X1
	063 Move X19, X0
	064 Move X0, 0xACD000
	065 Move X0, [X0+1400]
	066 Call 0x1C17D08
	067 Call 0x1C17F10
	068 Move X1, X19
	069 Move X2, X31
	070 Move X20, X0
	071 Call ArgumentException..ctor, X0, X1
	072 Move X0, 0xB0D000
	073 Move X0, [X0+1672]
	074 Call 0x1C17D08
	075 Move X1, X0
	076 Move X0, X20
	077 Call 0x1C17DEC

Method: System.Void set_Enabled(System.Boolean value)

Disassembly:
	0x0362FC88 STP X20, X19, [X31 + 0x10]
	0x0362FC8C ADRP X20, 0xDB1000
	0x0362FC90 ADRP X21, 0xB0C000
	0x0362FC94 LDRB W8, [X20 + 0x510]
	0x0362FC98 LDR X21, [X21 + 0x6F0]
	0x0362FC9C MOV X19, X0
	0x0362FCA0 TBNZ X8, 0x0, 0x362FCB8
	0x0362FCA4 ADRP X0, 0xB0C000
	0x0362FCA8 LDR X0, [X0 + 0x6F0]
	0x0362FCAC BL 0x1C16CF4
	0x0362FCB0 MOVZ W8, 0x1
	0x0362FCB4 STRB W8, [X20 + 0x510]
	0x0362FCB8 LDR X0, [X21]
	0x0362FCBC BL 0x1C16F10
	0x0362FCC0 MOV X1, X31
	0x0362FCC4 MOV X20, X0
	0x0362FCC8 BL 0x33BDD8C
	0x0362FCCC MOVN W8, 0x0
	0x0362FCD0 STR X19, [X20 + 0x10]
	0x0362FCD4 STR W8, [X20 + 0x18]
	0x0362FCD8 MOV X0, X20
	0x0362FCDC LDP X20, X19, [X31 + 0x10]
	0x0362FCE0 LDP X30, X21, [X31], #0x20
	0x0362FCE4 RET
	0x0362FCE8 STR X30, [X31 - 0x20]!
	0x0362FCEC STP X20, X19, [X31 + 0x10]
	0x0362FCF0 MOV X19, X1
	0x0362FCF4 MOV X1, X31
	0x0362FCF8 MOV X20, X0
	0x0362FCFC BL 0x33BDD8C
	0x0362FD00 MOVN W8, 0x0
	0x0362FD04 STR X19, [X20 + 0x10]
	0x0362FD08 STR W8, [X20 + 0x18]
	0x0362FD0C LDP X20, X19, [X31 + 0x10]
	0x0362FD10 LDR X30, [X31], #0x20
	0x0362FD14 RET
	0x0362FD18 STP X30, X21, [X31 - 0x20]!
	0x0362FD1C STP X20, X19, [X31 + 0x10]
	0x0362FD20 ADRP X20, 0xDB1000
	0x0362FD24 ADRP X21, 0xB0C000
	0x0362FD28 LDRB W8, [X20 + 0x511]
	0x0362FD2C LDR X21, [X21 + 0x6F0]
	0x0362FD30 MOV X19, X0
	0x0362FD34 TBNZ X8, 0x0, 0x362FD4C
	0x0362FD38 ADRP X0, 0xB0C000
	0x0362FD3C LDR X0, [X0 + 0x6F0]
	0x0362FD40 BL 0x1C16CF4
	0x0362FD44 MOVZ W8, 0x1
	0x0362FD48 STRB W8, [X20 + 0x511]
	0x0362FD4C LDR X0, [X21]
	0x0362FD50 BL 0x1C16F10
	0x0362FD54 MOV X1, X31
	0x0362FD58 MOV X20, X0
	0x0362FD5C BL 0x33BDD8C
	0x0362FD60 MOVN W8, 0x0
	0x0362FD64 STR X19, [X20 + 0x10]
	0x0362FD68 STR W8, [X20 + 0x18]
	0x0362FD6C MOV X0, X20
	0x0362FD70 LDP X20, X19, [X31 + 0x10]
	0x0362FD74 LDP X30, X21, [X31], #0x20
	0x0362FD78 RET
	0x0362FD7C STP X29, X30, [X31 - 0x60]!
	0x0362FD80 STP X28, X27, [X31 + 0x10]
	0x0362FD84 STP X26, X25, [X31 + 0x20]
	0x0362FD88 STP X24, X23, [X31 + 0x30]
	0x0362FD8C STP X22, X21, [X31 + 0x40]
	0x0362FD90 STP X20, X19, [X31 + 0x50]
	0x0362FD94 ADRP X21, 0xDB1000
	0x0362FD98 LDRB W8, [X21 + 0x513]
	0x0362FD9C MOV W19, W1
	0x0362FDA0 MOV X20, X0
	0x0362FDA4 TBNZ X8, 0x0, 0x362FDC8
	0x0362FDA8 ADRP X0, 0xB0C000
	0x0362FDAC LDR X0, [X0 + 0x6F8]
	0x0362FDB0 BL 0x1C16CF4
	0x0362FDB4 ADRP X0, 0xB0C000
	0x0362FDB8 LDR X0, [X0 + 0x6D0]
	0x0362FDBC BL 0x1C16CF4
	0x0362FDC0 MOVZ W8, 0x1
	0x0362FDC4 STRB W8, [X21 + 0x513]
	0x0362FDC8 CBZ W19, 0x362FDF0
	0x0362FDCC LDR X0, [X20 + 0x20]
	0x0362FDD0 CBZ X0, 0x362FE14
	0x0362FDD4 LDR W9, [X0 + 0x18]
	0x0362FDD8 SUB W8, W19, 0x1
	0x0362FDDC CMP W8, W9
	0x0362FDE0 B.CS 0x362FF28
	0x0362FDE4 ADD X8, X0, W8, 0x3, SXTW
	0x0362FDE8 ADD X8, X8, 0x20
	0x0362FDEC B 0x362FDF4
	0x0362FDF0 ADD X8, X20, 0x10
	0x0362FDF4 LDR X0, [X8]
	0x0362FDF8 LDP X20, X19, [X31 + 0x50]
	0x0362FDFC LDP X22, X21, [X31 + 0x40]
	0x0362FE00 LDP X24, X23, [X31 + 0x30]
	0x0362FE04 LDP X26, X25, [X31 + 0x20]
	0x0362FE08 LDP X28, X27, [X31 + 0x10]
	0x0362FE0C LDP X29, X30, [X31], #0x60
	0x0362FE10 RET
	0x0362FE14 LDR X8, [X20 + 0x10]
	0x0362FE18 CBZ X8, 0x362FF24
	0x0362FE1C LDR X8, [X8 + 0x68]
	0x0362FE20 CBZ X8, 0x362FF24
	0x0362FE24 ADRP X9, 0xB0C000
	0x0362FE28 LDR X9, [X9 + 0x6F8]
	0x0362FE2C LDR W8, [X8 + 0x18]
	0x0362FE30 LDR X0, [X9]
	0x0362FE34 SUB W1, W8, 0x1
	0x0362FE38 BL 0x1C16D6C
	0x0362FE3C STR X0, [X20 + 0x20]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0xDB2000
	009 Move W8, [X22+1285]
	010 Move W20, W1
	011 Move X19, X0
	012 And W21, W1, 1
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0xACB000
	018 Move X0, [X0+3264]
	019 Call 0x1C17CF4
	020 Move X0, 0xACD000
	021 Move X0, [X0+3200]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X22+1285], W8
	025 Move X0, X19
	026 Move X1, X31
	027 Call Component.get_DesignMode, X0
	028 Move TEMP, X0
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfNotEqual {34}
	032 Move [X19+50], W21
	033 Move [X19+48], W21
	034 Move W8, [X19+49]
	035 Compare W8, 0
	036 JumpIfEqual {38}
	037 Move [X19+50], W21
	038 Move W8, [X19+48]
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Move X20, [X31+48]
	041 Move X19, [X31+56]
	042 Move X22, [X31+32]
	043 Move X21, [X31+40]
	044 Move X24, [X31+16]
	045 Move X23, [X31+24]
	046 Move X30, [X31+64]
	047 Return 
	048 Move TEMP, X20
	049 And TEMP, TEMP, 1
	050 Compare TEMP, 1
	051 JumpIfNotEqual {64}
	052 Move X8, [X19+88]
	053 Move [X19+48], W21
	054 Compare X8, 0
	055 JumpIfEqual {71}
	056 Move X0, X19
	057 Move X20, [X31+48]
	058 Move X19, [X31+56]
	059 Move X22, [X31+32]
	060 Move X21, [X31+40]
	061 Move X24, [X31+16]
	062 Move X23, [X31+24]
	063 Move X30, [X31+64]
	064 Move X0, [X19+88]
	065 Compare X0, 0
	066 JumpIfEqual {33}
	067 Move X1, X31
	068 Move [X19+104], X31
	069 Call Timer.Dispose, X0
	070 Move [X19+88], X31
	071 Move W8, [X19+80]
	072 Compare W8, 0
	073 JumpIfNotEqual {103}
	074 Move V0, [X19+40]
	075 Move W0, W31
	076 Call Timer.CalculateRoundedInterval, V0, X0
	077 Move X8, 0xACB000
	078 Move X8, [X8+3264]
	079 Move W20, W0
	080 Move X8, [X8]
	081 Move X0, X8
	082 Call 0x1C17F10
	083 Move X1, X31
	084 Move X21, X0
	085 Call Object..ctor, X0
	086 Move [X19+104], X21
	087 Move X9, 0xACD000
	088 Move X22, [X19+96]
	089 Move W8, [X19+64]
	090 Move X9, [X9+3200]
	091 NotImplemented "Instruction CMP not yet implemented."
	092 Move X0, [X9]
	093 NotImplemented "Instruction CSINV not yet implemented."
	094 Call 0x1C17F10
	095 Move X1, X22
	096 Move X2, X21
	097 Move W3, W20
	098 Move W4, W23
	099 Move X5, X31
	100 Move X24, X0
	101 Call Timer..ctor, X0, X1, X2, X3, X4
	102 Move [X19+88], X24
	103 Move X0, X19
	104 Move X1, X31
	105 Call "il2cpp_vm_object_is_inst", X0
	106 Move X19, X0
	107 Call 0x19913C0
	108 Move X8, [X19]
	109 Move X0, X19
	110 Move X9, [X8+424]
	111 Move X1, [X8+432]
	112 NotImplemented "Instruction BLR not yet implemented."
	113 Move X19, X0
	114 Move X0, 0xAEE000
	115 Move X0, [X0+1208]
	116 Call 0x1C17D08
	117 Call 0x1C17F10
	118 Move X1, X19
	119 Move X2, X31
	120 Move X20, X0
	121 Call ObjectDisposedException..ctor, X0, X1
	122 Move X0, 0xB0D000
	123 Move X0, [X0+1688]
	124 Call 0x1C17D08
	125 Move X1, X0
	126 Move X0, X20
	127 Call 0x1C17DEC

Method: System.Int32 CalculateRoundedInterval(System.Double interval, System.Boolean argumentCheck = False)

Disassembly:
	0x0362FA74 BL 0x362FD7C
	0x0362FA78 B 0x362FAA0
	0x0362FA7C ADRP X19, 0xB0C000
	0x0362FA80 LDR X19, [X19 + 0x6D0]
	0x0362FA84 LDR X0, [X19]
	0x0362FA88 LDR W8, [X0 + 0xE0]
	0x0362FA8C CBNZ W8, 0x362FA98
	0x0362FA90 BL 0x1C16DFC
	0x0362FA94 LDR X0, [X19]
	0x0362FA98 LDR X8, [X0 + 0xB8]
	0x0362FA9C LDR X0, [X8]
	0x0362FAA0 LDP X20, X19, [X31 + 0x20]
	0x0362FAA4 LDP X22, X21, [X31 + 0x10]
	0x0362FAA8 LDR X30, [X31], #0x30
	0x0362FAAC RET
	0x0362FAB0 BL 0x1C16F20
	0x0362FAB4 STP X30, X21, [X31 - 0x20]!
	0x0362FAB8 STP X20, X19, [X31 + 0x10]
	0x0362FABC ADRP X21, 0xDB1000
	0x0362FAC0 LDRB W8, [X21 + 0x50F]
	0x0362FAC4 MOV X20, X1
	0x0362FAC8 MOV X19, X0
	0x0362FACC TBNZ X8, 0x0, 0x362FAE4
	0x0362FAD0 ADRP X0, 0xB0C000
	0x0362FAD4 LDR X0, [X0 + 0x6D0]
	0x0362FAD8 BL 0x1C16CF4
	0x0362FADC MOVZ W8, 0x1
	0x0362FAE0 STRB W8, [X21 + 0x50F]
	0x0362FAE4 LDR X8, [X19 + 0x10]
	0x0362FAE8 CBZ X8, 0x362FB40
	0x0362FAEC LDR X0, [X8 + 0x48]
	0x0362FAF0 CBZ X0, 0x362FB10
	0x0362FAF4 MOV X1, X20
	0x0362FAF8 BL 0x362FB44
	0x0362FAFC MOV W1, W0
	0x0362FB00 MOV X0, X19
	0x0362FB04 LDP X20, X19, [X31 + 0x10]
	0x0362FB08 LDP X30, X21, [X31], #0x20
	0x0362FB0C B 0x362F9B0
	0x0362FB10 ADRP X19, 0xB0C000
	0x0362FB14 LDR X19, [X19 + 0x6D0]
	0x0362FB18 LDR X0, [X19]
	0x0362FB1C LDR W8, [X0 + 0xE0]
	0x0362FB20 CBNZ W8, 0x362FB2C
	0x0362FB24 BL 0x1C16DFC
	0x0362FB28 LDR X0, [X19]
	0x0362FB2C LDR X8, [X0 + 0xB8]
	0x0362FB30 LDP X20, X19, [X31 + 0x10]
	0x0362FB34 LDR X0, [X8]
	0x0362FB38 LDP X30, X21, [X31], #0x20
	0x0362FB3C RET
	0x0362FB40 BL 0x1C16F20
	0x0362FB44 SUB X31, X31, 0x40
	0x0362FB48 STP X30, X23, [X31 + 0x10]
	0x0362FB4C STP X22, X21, [X31 + 0x20]
	0x0362FB50 STP X20, X19, [X31 + 0x30]
	0x0362FB54 ADRP X21, 0xDB1000
	0x0362FB58 LDRB W8, [X21 + 0x536]
	0x0362FB5C MOV X19, X1
	0x0362FB60 MOV X20, X0
	0x0362FB64 TBNZ X8, 0x0, 0x362FB7C
	0x0362FB68 ADRP X0, 0xB0C000
	0x0362FB6C LDR X0, [X0 + 0x6E0]
	0x0362FB70 BL 0x1C16CF4
	0x0362FB74 MOVZ W8, 0x1
	0x0362FB78 STRB W8, [X21 + 0x536]
	0x0362FB7C MOVN W8, 0x0
	0x0362FB80 STR W8, [X31 + 0xC]
	0x0362FB84 CBZ X19, 0x362FC3C
	0x0362FB88 LDR X0, [X20 + 0x38]
	0x0362FB8C CBZ X0, 0x362FBB8
	0x0362FB90 ADRP X8, 0xB0C000
	0x0362FB94 LDR X8, [X8 + 0x6E0]
	0x0362FB98 ADD X2, X31, 0xC
	0x0362FB9C MOV X1, X19
	0x0362FBA0 LDR X3, [X8]
	0x0362FBA4 BL 0x21EBB50
	0x0362FBA8 LDR W8, [X31 + 0xC]
	0x0362FBAC ANDS W31, W0, 0x1
	0x0362FBB0 CSINV W0, W8, W31, NE
	0x0362FBB4 B 0x362FC28
	0x0362FBB8 LDR W8, [X19 + 0x10]
	0x0362FBBC CMP W8, 0x1
	0x0362FBC0 B.LT 0x362FC18
	0x0362FBC4 MOV W22, W31
	0x0362FBC8 MOV W21, W31
	0x0362FBCC MOVZ W23, 0xA
	0x0362FBD0 MOV X0, X19
	0x0362FBD4 MOV W1, W21
	0x0362FBD8 MOV X2, X31
	0x0362FBDC BL 0x3222A1C
	0x0362FBE0 SUB W8, W0, 0x30
	0x0362FBE4 AND W8, W8, 0xFFFF
	0x0362FBE8 CMP W8, 0x9
	0x0362FBEC B.HI 0x362FC10
	0x0362FBF0 LDR W8, [X19 + 0x10]
	0x0362FBF4 MUL W9, W22, W23
	0x0362FBF8 ADD W9, W9, W0, UXTH
	0x0362FBFC ADD W21, W21, 0x1
	0x0362FC00 CMP W21, W8
	0x0362FC04 SUB W22, W9, 0x30
	0x0362FC08 B.LT 0x362FBD0
	0x0362FC0C TBZ X22, 0x1F, 0x362FC1C
	0x0362FC10 MOVN W0, 0x0
	0x0362FC14 B 0x362FC28
	0x0362FC18 MOV W22, W31
	0x0362FC1C LDR W8, [X20 + 0x48]
	0x0362FC20 CMP W22, W8
	0x0362FC24 CSINV W0, W22, W31, LT
	0x0362FC28 LDP X20, X19, [X31 + 0x30]
	0x0362FC2C LDP X22, X21, [X31 + 0x20]
	0x0362FC30 LDP X30, X23, [X31 + 0x10]
	0x0362FC34 ADD X31, X31, 0x40
	0x0362FC38 RET
	0x0362FC3C ADRP X0, 0xAC9000
	0x0362FC40 LDR X0, [X0 + 0x528]
	0x0362FC44 BL 0x1C16D08
	0x0362FC48 BL 0x1C16F10
	0x0362FC4C MOV X19, X0
	0x0362FC50 ADRP X0, 0xACC000
	0x0362FC54 LDR X0, [X0 + 0x588]
	0x0362FC58 BL 0x1C16D08
	0x0362FC5C MOV X1, X0
	0x0362FC60 MOV X0, X19
	0x0362FC64 MOV X2, X31
	0x0362FC68 BL 0x330E100
	0x0362FC6C ADRP X0, 0xB0C000
	0x0362FC70 LDR X0, [X0 + 0x6E8]
	0x0362FC74 BL 0x1C16D08
	0x0362FC78 MOV X1, X0
	0x0362FC7C MOV X0, X19
	0x0362FC80 BL 0x1C16DEC
	0x0362FC84 STP X30, X21, [X31 - 0x20]!

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xDB2000
	007 Move X21, 0xAC5000
	008 Move W8, [X20+1286]
	009 Move X21, [X21+1448]
	010 Move W19, W0
	011 Move V8, V0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xAC5000
	017 Move X0, [X0+1448]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X20+1286], W8
	021 Move X0, [X21]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move X8, -45355008
	027 Move V1, [X8+2744]
	028 NotImplemented "Instruction FRINTP not yet implemented."
	029 NotImplemented "Instruction FCMP not yet implemented."
	030 NotImplemented "Instruction FCMP not yet implemented."
	031 Move X8, 0x7FF00000
	032 Move X20, [X31+32]
	033 Move X19, [X31+40]
	034 Move X30, [X31+16]
	035 Move X21, [X31+24]
	036 Move D1, X8
	037 NotImplemented "Instruction FCVTZS not yet implemented."
	038 NotImplemented "Instruction FCMP not yet implemented."
	039 Move W8, 0x80000000
	040 NotImplemented "Instruction CSEL not yet implemented."
	041 Move V8, [X31+48]
	042 Return X0
	043 Move X0, 0xAC5000
	044 Move X0, [X0+2512]
	045 Move W20, W19
	046 Call 0x1C17D08
	047 Move W1, 2
	048 Call 0x1C17D6C
	049 Compare X0, 0
	050 JumpIfNotEqual {52}
	051 Call 0x1C17F20
	052 Move X19, X0
	053 Move X0, 0xB0D000
	054 Move X0, [X0+1656]
	055 Call 0x1C17D08
	056 Compare X0, 0
	057 JumpIfEqual {66}
	058 Move X8, [X19]
	059 Move X1, [X8+64]
	060 Call 0x1C17E00
	061 Compare X0, 0
	062 JumpIfNotEqual {66}
	063 Call 0x1C17F44
	064 Move X1, X31
	065 Call 0x1C17DEC
	066 Move X0, 0xB0D000
	067 Move X0, [X0+1656]
	068 Call 0x1C17D08
	069 Move W8, [X19+24]
	070 Compare W8, 0
	071 JumpIfNotEqual {73}
	072 Call 0x1C17F28
	073 Move [X19+32], X0
	074 Move TEMP, X20
	075 And TEMP, TEMP, 1
	076 Compare TEMP, 1
	077 JumpIfNotEqual {109}
	078 Move [X31+8], D8
	079 Move X0, 0xAC8000
	080 Move X0, [X0+2424]
	081 Call 0x1C17D08
	082 Add X1, X31, 8
	083 Call 0x1C17E04
	084 Move X20, X0
	085 Move X0, X19
	086 Call 0x19913C0
	087 Move X0, X19
	088 Move X1, X20
	089 Call 0x19990B4
	090 Move W1, 1
	091 Move X0, X19
	092 Move X2, X20
	093 Call 0x1994444
	094 Move X0, 0xB0D000
	095 Move X0, [X0+1664]
	096 Call 0x1C17D08
	097 Move X1, X19
	098 Move X2, X31
	099 Call SR.GetString, X0, X1
	100 Move X19, X0
	101 Move X0, 0xACD000
	102 Move X0, [X0+1400]
	103 Call 0x1C17D08
	104 Call 0x1C17F10
	105 Move X1, X19
	106 Move X2, X31
	107 Move X20, X0
	108 Call ArgumentException..ctor, X0, X1
	109 Move [X31+8], D8
	110 Move X0, 0xAC8000
	111 Move X0, [X0+2424]
	112 Call 0x1C17D08
	113 Add X1, X31, 8
	114 Call 0x1C17E04
	115 Move X20, X0
	116 Move X0, X19
	117 Call 0x19913C0
	118 Move X0, X19
	119 Move X1, X20
	120 Call 0x19990B4
	121 Move W1, 1
	122 Move X0, X19
	123 Move X2, X20
	124 Call 0x1994444
	125 Move X0, 0xB0D000
	126 Move X0, [X0+1664]
	127 Call 0x1C17D08
	128 Move X1, X19
	129 Move X2, X31
	130 Call SR.GetString, X0, X1
	131 Move X19, X0
	132 Move X0, 0xACD000
	133 Move X0, [X0+1888]
	134 Call 0x1C17D08
	135 Call 0x1C17F10
	136 Move X1, X19
	137 Move X2, X31
	138 Move X20, X0
	139 Call ArgumentOutOfRangeException..ctor, X0, X1
	140 Move X0, 0xB0D000
	141 Move X0, [X0+1680]
	142 Call 0x1C17D08
	143 Move X1, X0
	144 Move X0, X20
	145 Call 0x1C17DEC

Method: System.Void UpdateTimer()

Disassembly:
	0x0362FE40 CBZ X0, 0x362FF24
	0x0362FE44 ADRP X28, 0xB0C000
	0x0362FE48 LDR X28, [X28 + 0x6D0]
	0x0362FE4C MOV X27, X31
	0x0362FE50 LDRSW X8, [X0 + 0x18]
	0x0362FE54 CMP X27, X8
	0x0362FE58 B.GE 0x362FDD4
	0x0362FE5C LDR X8, [X20 + 0x10]
	0x0362FE60 CBZ X8, 0x362FF24
	0x0362FE64 LDR X0, [X8 + 0x48]
	0x0362FE68 CBZ X0, 0x362FF24
	0x0362FE6C ADD X21, X27, 0x1
	0x0362FE70 MOV W1, W21
	0x0362FE74 BL 0x362FF38
	0x0362FE78 LDR X8, [X20 + 0x10]
	0x0362FE7C CBZ X8, 0x362FF24

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move V0, [X0+40]
	004 Move X19, X0
	005 Move W0, W31
	006 Call Timer.CalculateRoundedInterval, V0, X0
	007 Move X8, [X19+88]
	008 Compare X8, 0
	009 JumpIfEqual {20}
	010 Move W9, [X19+64]
	011 Move W1, W0
	012 Move X3, X31
	013 NotImplemented "Instruction CMP not yet implemented."
	014 NotImplemented "Instruction CSINV not yet implemented."
	015 Move X0, X8
	016 Move X30, [X31+16]
	017 Move X19, [X31+24]
	018 Call Timer.Change, X0, X1, X2
	019 Return 
	020 Call 0x1C17F20

Method: System.Void add_Elapsed(System.Timers.ElapsedEventHandler value)

Disassembly:
	0x0362FE80 LDR X9, [X8 + 0x60]
	0x0362FE84 CBZ X9, 0x362FF24
	0x0362FE88 LDR W10, [X9 + 0x18]
	0x0362FE8C CMP X21, X10
	0x0362FE90 B.CS 0x362FF28
	0x0362FE94 LDR X10, [X8 + 0x68]
	0x0362FE98 CBZ X10, 0x362FF24
	0x0362FE9C LDR W11, [X10 + 0x18]
	0x0362FEA0 CMP X21, X11
	0x0362FEA4 B.CS 0x362FF28
	0x0362FEA8 MOV X22, X0
	0x0362FEAC LDR X24, [X8 + 0x18]
	0x0362FEB0 ADD X8, X9, X27, 0x3, LSL
	0x0362FEB4 ADD X9, X10, X27, 0x2, LSL
	0x0362FEB8 LDR X0, [X28]
	0x0362FEBC LDR X29, [X20 + 0x20]
	0x0362FEC0 LDR X25, [X8 + 0x28]
	0x0362FEC4 LDR W26, [X9 + 0x24]
	0x0362FEC8 BL 0x1C16F10
	0x0362FECC MOV X1, X24
	0x0362FED0 MOV X2, X25
	0x0362FED4 MOV W3, W26
	0x0362FED8 MOV X4, X22
	0x0362FEDC MOV X23, X0
	0x0362FEE0 BL 0x362F76C
	0x0362FEE4 CBZ X29, 0x362FF24
	0x0362FEE8 CBZ X23, 0x362FF00
	0x0362FEEC LDR X8, [X29]
	0x0362FEF0 MOV X0, X23
	0x0362FEF4 LDR X1, [X8 + 0x40]
	0x0362FEF8 BL 0x1C16E00
	0x0362FEFC CBZ X0, 0x362FF2C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xDB2000
	006 Move W8, [X21+1287]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xAF0000
	014 Move X0, [X0+3816]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+1287], W8
	018 Move X0, [X19+56]
	019 Move X1, X20
	020 Move X2, X31
	021 Call Delegate.Combine, X0, X1
	022 Compare X0, 0
	023 JumpIfEqual {33}
	024 Move X8, 0xAF0000
	025 Move X8, [X8+3816]
	026 Move X1, [X8]
	027 Move X8, [X0]
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Move [X19+56], X0
	030 Move X8, [X0]
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Call 0x1C181E0
	033 Move [X19+56], X0
	034 Move X20, [X31+16]
	035 Move X19, [X31+24]
	036 Move X30, [X31+32]
	037 Move X21, [X31+40]
	038 Return 

Method: System.Void remove_Elapsed(System.Timers.ElapsedEventHandler value)

Disassembly:
	0x0362FF00 LDR W9, [X29 + 0x18]
	0x0362FF04 SUB X8, X21, 0x1
	0x0362FF08 CMP X8, X9
	0x0362FF0C B.CS 0x362FF28
	0x0362FF10 ADD X9, X29, X27, 0x3, LSL
	0x0362FF14 STR X23, [X9 + 0x20]
	0x0362FF18 LDR X0, [X20 + 0x20]
	0x0362FF1C ADD X27, X8, 0x1
	0x0362FF20 CBNZ X0, 0x362FE50
	0x0362FF24 BL 0x1C16F20
	0x0362FF28 BL 0x1C16F28
	0x0362FF2C BL 0x1C16F44
	0x0362FF30 MOV X1, X31
	0x0362FF34 BL 0x1C16DEC
	0x0362FF38 SUB X31, X31, 0x30
	0x0362FF3C STP X30, X21, [X31 + 0x10]
	0x0362FF40 STP X20, X19, [X31 + 0x20]
	0x0362FF44 ADRP X21, 0xDB1000
	0x0362FF48 LDRB W8, [X21 + 0x535]
	0x0362FF4C MOV W20, W1
	0x0362FF50 MOV X19, X0
	0x0362FF54 STR W1, [X31 + 0xC]
	0x0362FF58 TBNZ X8, 0x0, 0x362FF94
	0x0362FF5C ADRP X0, 0xAC6000
	0x0362FF60 LDR X0, [X0 + 0xC48]
	0x0362FF64 BL 0x1C16CF4
	0x0362FF68 ADRP X0, 0xB0C000
	0x0362FF6C LDR X0, [X0 + 0x6E0]
	0x0362FF70 BL 0x1C16CF4
	0x0362FF74 ADRP X0, 0xAC4000
	0x0362FF78 LDR X0, [X0 + 0x758]
	0x0362FF7C BL 0x1C16CF4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xDB2000
	006 Move W8, [X21+1288]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xAF0000
	014 Move X0, [X0+3816]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+1288], W8
	018 Move X0, [X19+56]
	019 Move X1, X20
	020 Move X2, X31
	021 Call Delegate.Remove, X0, X1
	022 Compare X0, 0
	023 JumpIfEqual {33}
	024 Move X8, 0xAF0000
	025 Move X8, [X8+3816]
	026 Move X1, [X8]
	027 Move X8, [X0]
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Move [X19+56], X0
	030 Move X8, [X0]
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Call 0x1C181E0
	033 Move [X19+56], X0
	034 Move X20, [X31+16]
	035 Move X19, [X31+24]
	036 Move X30, [X31+32]
	037 Move X21, [X31+40]
	038 Return 

Method: System.ComponentModel.ISynchronizeInvoke get_SynchronizingObject()

Disassembly:
	0x0362FF80 ADRP X0, 0xAC6000
	0x0362FF84 LDR X0, [X0 + 0x278]
	0x0362FF88 BL 0x1C16CF4
	0x0362FF8C MOVZ W8, 0x1
	0x0362FF90 STRB W8, [X21 + 0x535]
	0x0362FF94 LDR X8, [X19 + 0x40]
	0x0362FF98 CBZ X8, 0x3630008
	0x0362FF9C LDR X21, [X19 + 0x30]
	0x0362FFA0 CBZ X21, 0x362FFE0
	0x0362FFA4 ADRP X8, 0xAC4000
	0x0362FFA8 LDR X8, [X8 + 0x758]
	0x0362FFAC ADD X1, X31, 0x8
	0x0362FFB0 STR W20, [X31 + 0x8]
	0x0362FFB4 LDR X0, [X8]
	0x0362FFB8 BL 0x1C16E04
	0x0362FFBC ADRP X8, 0xB0C000
	0x0362FFC0 LDR X8, [X8 + 0x6E0]
	0x0362FFC4 MOV X1, X0
	0x0362FFC8 ADD X2, X31, 0xC
	0x0362FFCC MOV X0, X21
	0x0362FFD0 LDR X3, [X8]
	0x0362FFD4 BL 0x21EBB50
	0x0362FFD8 TBZ X0, 0x0, 0x363004C
	0x0362FFDC LDR W20, [X31 + 0xC]
	0x0362FFE0 TBNZ X20, 0x1F, 0x363004C
	0x0362FFE4 LDR X8, [X19 + 0x40]
	0x0362FFE8 CBZ X8, 0x3630070
	0x0362FFEC LDR W9, [X8 + 0x18]
	0x0362FFF0 CMP W20, W9
	0x0362FFF4 B.GE 0x363004C
	0x0362FFF8 B.CS 0x3630074
	0x0362FFFC ADD X8, X8, W20, 0x3, UXTW
	0x03630000 LDR X0, [X8 + 0x20]
	0x03630004 B 0x3630060
	0x03630008 TBNZ X20, 0x1F, 0x363004C
	0x0363000C LDR W8, [X19 + 0x48]
	0x03630010 CMP W8, W20
	0x03630014 B.LE 0x363004C
	0x03630018 ADRP X8, 0xAC5000
	0x0363001C LDR X8, [X8 + 0xC48]
	0x03630020 LDR X0, [X8]
	0x03630024 LDR W8, [X0 + 0xE0]
	0x03630028 CBNZ W8, 0x3630030
	0x0363002C BL 0x1C16DFC
	0x03630030 MOV X0, X31
	0x03630034 BL 0x3338524
	0x03630038 MOV X1, X0
	0x0363003C ADD X0, X31, 0xC
	0x03630040 MOV X2, X31
	0x03630044 BL 0x337B824
	0x03630048 B 0x3630060
	0x0363004C ADRP X8, 0xAC5000
	0x03630050 LDR X8, [X8 + 0x278]
	0x03630054 LDR X8, [X8]
	0x03630058 LDR X8, [X8 + 0xB8]
	0x0363005C LDR X0, [X8]
	0x03630060 LDP X20, X19, [X31 + 0x20]
	0x03630064 LDP X30, X21, [X31 + 0x10]
	0x03630068 ADD X31, X31, 0x30
	0x0363006C RET
	0x03630070 BL 0x1C16F20
	0x03630074 BL 0x1C16F28
	0x03630078 MOV W0, W31
	0x0363007C RET
	0x03630080 LDR X0, [X0 + 0x10]
	0x03630084 RET
	0x03630088 STP X30, X23, [X31 - 0x30]!
	0x0363008C STP X22, X21, [X31 + 0x10]
	0x03630090 STP X20, X19, [X31 + 0x20]
	0x03630094 CBZ X1, 0x36300FC
	0x03630098 MOV W19, W2
	0x0363009C MOV X20, X1
	0x036300A0 MOV X21, X0
	0x036300A4 BL 0x362F988
	0x036300A8 CMP W0, 0x1
	0x036300AC B.LT 0x36300EC
	0x036300B0 MOV W22, W31
	0x036300B4 MOV X0, X21
	0x036300B8 MOV W1, W22
	0x036300BC ADD W23, W19, W22
	0x036300C0 BL 0x362F9B0
	0x036300C4 MOV X1, X0
	0x036300C8 MOV X0, X20
	0x036300CC MOV W2, W23
	0x036300D0 MOV X3, X31
	0x036300D4 BL 0x339F798
	0x036300D8 MOV X0, X21
	0x036300DC ADD W22, W22, 0x1
	0x036300E0 BL 0x362F988
	0x036300E4 CMP W22, W0
	0x036300E8 B.LT 0x36300B4
	0x036300EC LDP X20, X19, [X31 + 0x20]
	0x036300F0 LDP X22, X21, [X31 + 0x10]
	0x036300F4 LDP X30, X23, [X31], #0x30
	0x036300F8 RET
	0x036300FC ADRP X0, 0xAC8000
	0x03630100 LDR X0, [X0 + 0x528]
	0x03630104 BL 0x1C16D08
	0x03630108 BL 0x1C16F10
	0x0363010C MOV X19, X0
	0x03630110 ADRP X0, 0xAEB000
	0x03630114 LDR X0, [X0 + 0x640]
	0x03630118 BL 0x1C16D08
	0x0363011C MOV X1, X0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0xDB2000
	008 Move W8, [X20+1289]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {28}
	014 Move X0, 0xB0D000
	015 Move X0, [X0+1696]
	016 Call 0x1C17CF4
	017 Move X0, 0xB0D000
	018 Move X0, [X0+1704]
	019 Call 0x1C17CF4
	020 Move X0, 0xB0D000
	021 Move X0, [X0+1712]
	022 Call 0x1C17CF4
	023 Move X0, 0xAC5000
	024 Move X0, [X0+1728]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X20+1289], W8
	028 Move X8, [X19+72]
	029 Compare X8, 0
	030 JumpIfNotEqual {111}
	031 Move X0, X19
	032 Move X1, X31
	033 Call Component.get_DesignMode, X0
	034 Move TEMP, X0
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfNotEqual {111}
	038 Move X8, 0xAC5000
	039 Move X8, [X8+1728]
	040 Move X0, [X8]
	041 Move X8, 0xB0D000
	042 Move X8, [X8+1696]
	043 Move W9, [X0+224]
	044 Move X20, [X8]
	045 Compare W9, 0
	046 JumpIfNotEqual {48}
	047 Call 0x1C17DFC
	048 Move X0, X20
	049 Move X1, X31
	050 Call Type.GetTypeFromHandle, X0
	051 Move X8, [X19]
	052 Move X1, X0
	053 Move X0, X19
	054 Move X9, [X8+456]
	055 Move X2, [X8+464]
	056 NotImplemented "Instruction BLR not yet implemented."
	057 Compare X0, 0
	058 JumpIfEqual {111}
	059 Move X23, 0xB0C000
	060 Move X23, [X23+1704]
	061 Move X21, X0
	062 Move X22, [X23]
	063 Move X1, X22
	064 Call 0x1C17E00
	065 Compare X0, 0
	066 JumpIfEqual {119}
	067 Move X8, [X0]
	068 Move X1, [X23]
	069 Move X20, X0
	070 NotImplemented "Instruction LDRH not yet implemented."
	071 Compare X9, 0
	072 JumpIfEqual {79}
	073 Move X10, [X8+176]
	074 Add X10, X10, 8
	075 NotImplemented "Instruction LDUR not yet implemented."
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Subtract X9, X9, 1
	078 Add X10, X10, 16
	079 Move X0, X20
	080 Move W2, W31
	081 Call 0x1C5D788
	082 NotImplemented "Instruction LDRSW not yet implemented."
	083 Add X8, X8, X9
	084 Add X0, X8, 312
	085 Move X8, [X0]
	086 Move X1, [X0+8]
	087 Move X0, X20
	088 NotImplemented "Instruction BLR not yet implemented."
	089 Compare X0, 0
	090 JumpIfEqual {111}
	091 Move X22, 0xB0C000
	092 Move X22, [X22+1712]
	093 Move X20, X0
	094 Move X1, [X22]
	095 Call 0x1C17E00
	096 Compare X0, 0
	097 JumpIfEqual {111}
	098 Move X21, [X22]
	099 Move X0, X20
	100 Move X1, X21
	101 Call 0x1C17E00
	102 Compare X0, 0
	103 JumpIfEqual {122}
	104 Move [X19+72], X0
	105 Move X21, [X22]
	106 Move X0, X20
	107 Move X1, X21
	108 Call 0x1C17E00
	109 Compare X0, 0
	110 JumpIfEqual {122}
	111 Move X0, [X19+72]
	112 Move X20, [X31+32]
	113 Move X19, [X31+40]
	114 Move X22, [X31+16]
	115 Move X21, [X31+24]
	116 Move X30, [X31+48]
	117 Move X23, [X31+56]
	118 Return X0
	119 Move X0, X21
	120 Move X1, X22
	121 Call 0x1C181E0
	122 Move X0, X20
	123 Move X1, X21
	124 Call 0x1C181E0

Method: System.Void Close()

Disassembly:
	0x03630120 MOV X0, X19
	0x03630124 MOV X2, X31
	0x03630128 BL 0x330E100
	0x0363012C ADRP X0, 0xB0B000
	0x03630130 LDR X0, [X0 + 0x700]
	0x03630134 BL 0x1C16D08
	0x03630138 MOV X1, X0
	0x0363013C MOV X0, X19
	0x03630140 BL 0x1C16DEC
	0x03630144 STP X30, X23, [X31 - 0x30]!
	0x03630148 STP X22, X21, [X31 + 0x10]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, [X0+88]
	005 Move [X19+50], W31
	006 NotImplemented "Instruction STRH not yet implemented."
	007 Compare X0, 0
	008 JumpIfEqual {12}
	009 Move X1, X31
	010 Call Timer.Dispose, X0
	011 Move [X19+88], X31
	012 Move X30, [X31+16]
	013 Move X19, [X31+24]
	014 Return 

Method: System.Void Dispose(System.Boolean disposing)

Disassembly:
	0x0363014C STP X20, X19, [X31 + 0x20]
	0x03630150 CBZ X1, 0x3630240
	0x03630154 MOV W19, W2
	0x03630158 TBNZ X2, 0x1F, 0x363020C
	0x0363015C LDR W8, [X1 + 0x18]
	0x03630160 MOV X20, X1
	0x03630164 CMP W8, W19
	0x03630168 B.LT 0x363020C
	0x0363016C MOV X21, X0
	0x03630170 BL 0x362F988
	0x03630174 LDR W8, [X20 + 0x18]
	0x03630178 SUB W8, W8, W19
	0x0363017C CMP W8, W0
	0x03630180 B.LT 0x3630274
	0x03630184 MOV X0, X21
	0x03630188 BL 0x362F988
	0x0363018C CMP W0, 0x1
	0x03630190 B.LT 0x36301EC
	0x03630194 MOV W22, W31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X0
	005 Move X0, [X0+88]
	006 Move W20, W1
	007 Move [X19+50], W31
	008 NotImplemented "Instruction STRH not yet implemented."
	009 Compare X0, 0
	010 JumpIfEqual {14}
	011 Move X1, X31
	012 Call Timer.Dispose, X0
	013 Move [X19+88], X31
	014 Move W8, 1
	015 And W1, W20, 1
	016 Move [X19+80], W8
	017 Move X0, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X2, X31
	021 Move X30, [X31+32]
	022 Call Component.Dispose, X0, X1
	023 Return 

Method: System.Void MyTimerCallback(System.Object state)

Disassembly:
	0x03630198 MOV X0, X21
	0x0363019C MOV W1, W22
	0x036301A0 BL 0x362F9B0
	0x036301A4 MOV X23, X0
	0x036301A8 CBZ X0, 0x36301C0
	0x036301AC LDR X8, [X20]
	0x036301B0 MOV X0, X23
	0x036301B4 LDR X1, [X8 + 0x40]
	0x036301B8 BL 0x1C16E00
	0x036301BC CBZ X0, 0x3630200
	0x036301C0 LDR W9, [X20 + 0x18]
	0x036301C4 ADD W8, W19, W22
	0x036301C8 CMP W8, W9
	0x036301CC B.CS 0x36301FC
	0x036301D0 ADD X8, X20, W8, 0x3, SXTW
	0x036301D4 MOV X0, X21
	0x036301D8 STR X23, [X8 + 0x20]
	0x036301DC ADD W22, W22, 0x1
	0x036301E0 BL 0x362F988
	0x036301E4 CMP W22, W0
	0x036301E8 B.LT 0x3630198
	0x036301EC LDP X20, X19, [X31 + 0x20]
	0x036301F0 LDP X22, X21, [X31 + 0x10]
	0x036301F4 LDP X30, X23, [X31], #0x30
	0x036301F8 RET
	0x036301FC BL 0x1C16F28
	0x03630200 BL 0x1C16F44
	0x03630204 MOV X1, X31
	0x03630208 BL 0x1C16DEC
	0x0363020C ADRP X0, 0xACB000
	0x03630210 LDR X0, [X0 + 0x760]
	0x03630214 BL 0x1C16D08
	0x03630218 BL 0x1C16F10
	0x0363021C MOV X19, X0
	0x03630220 ADRP X0, 0xAED000
	0x03630224 LDR X0, [X0 + 0x2B0]
	0x03630228 BL 0x1C16D08
	0x0363022C MOV X1, X0
	0x03630230 MOV X0, X19
	0x03630234 MOV X2, X31
	0x03630238 BL 0x3316014
	0x0363023C B 0x36302A4
	0x03630240 ADRP X0, 0xAC8000
	0x03630244 LDR X0, [X0 + 0x528]
	0x03630248 BL 0x1C16D08
	0x0363024C BL 0x1C16F10
	0x03630250 MOV X19, X0
	0x03630254 ADRP X0, 0xAEB000
	0x03630258 LDR X0, [X0 + 0x640]
	0x0363025C BL 0x1C16D08
	0x03630260 MOV X1, X0
	0x03630264 MOV X0, X19
	0x03630268 MOV X2, X31
	0x0363026C BL 0x330E100
	0x03630270 B 0x36302A4
	0x03630274 ADRP X0, 0xACB000
	0x03630278 LDR X0, [X0 + 0x578]
	0x0363027C BL 0x1C16D08
	0x03630280 BL 0x1C16F10
	0x03630284 MOV X19, X0
	0x03630288 ADRP X0, 0xAEC000
	0x0363028C LDR X0, [X0 + 0x318]
	0x03630290 BL 0x1C16D08
	0x03630294 MOV X1, X0
	0x03630298 MOV X0, X19
	0x0363029C MOV X2, X31
	0x036302A0 BL 0x3314A68
	0x036302A4 ADRP X0, 0xB0B000
	0x036302A8 LDR X0, [X0 + 0x708]
	0x036302AC BL 0x1C16D08
	0x036302B0 MOV X1, X0
	0x036302B4 MOV X0, X19
	0x036302B8 BL 0x1C16DEC
	0x036302BC STR X30, [X31 - 0x30]!
	0x036302C0 STP X22, X21, [X31 + 0x10]
	0x036302C4 STP X20, X19, [X31 + 0x20]
	0x036302C8 ADRP X21, 0xDB0000
	0x036302CC ADRP X22, 0xB0B000
	0x036302D0 LDRB W8, [X21 + 0x514]
	0x036302D4 LDR X22, [X22 + 0x710]
	0x036302D8 MOV X19, X1
	0x036302DC MOV X20, X0
	0x036302E0 TBNZ X8, 0x0, 0x36302F8
	0x036302E4 ADRP X0, 0xB0B000
	0x036302E8 LDR X0, [X0 + 0x710]
	0x036302EC BL 0x1C16CF4
	0x036302F0 MOVZ W8, 0x1
	0x036302F4 STRB W8, [X21 + 0x514]
	0x036302F8 LDR X0, [X22]
	0x036302FC BL 0x211B0E8
	0x03630300 MOV X21, X0
	0x03630304 MOV X0, X20
	0x03630308 BL 0x362F988
	0x0363030C CMP W0, 0x1
	0x03630310 B.LT 0x3630358
	0x03630314 MOV W22, W31
	0x03630318 MOV X0, X20
	0x0363031C MOV W1, W22
	0x03630320 BL 0x362F9B0
	0x03630324 CBZ X21, 0x3630370
	0x03630328 LDR X8, [X21]
	0x0363032C MOV X1, X0
	0x03630330 MOV X0, X21
	0x03630334 MOV X2, X19
	0x03630338 LDP X9, X3, [X8 + 0x1B8]
	0x0363033C BLR X9
	0x03630340 TBNZ X0, 0x0, 0x363035C
	0x03630344 MOV X0, X20
	0x03630348 ADD W22, W22, 0x1
	0x0363034C BL 0x362F988
	0x03630350 CMP W22, W0
	0x03630354 B.LT 0x3630318
	0x03630358 MOVN W22, 0x0
	0x0363035C MOV W0, W22
	0x03630360 LDP X20, X19, [X31 + 0x20]
	0x03630364 LDP X22, X21, [X31 + 0x10]
	0x03630368 LDR X30, [X31], #0x30
	0x0363036C RET
	0x03630370 BL 0x1C16F20
	0x03630374 STP X30, X19, [X31 - 0x10]!
	0x03630378 ADRP X0, 0xAC3000
	0x0363037C LDR X0, [X0 + 0xB40]
	0x03630380 BL 0x1C16D08
	0x03630384 BL 0x1C16F10
	0x03630388 MOV X19, X0
	0x0363038C ADRP X0, 0xAED000
	0x03630390 LDR X0, [X0 + 0x68]
	0x03630394 BL 0x1C16D08
	0x03630398 MOV X1, X0
	0x0363039C MOV X0, X19
	0x036303A0 MOV X2, X31
	0x036303A4 BL 0x3379A44
	0x036303A8 ADRP X0, 0xB0B000
	0x036303AC LDR X0, [X0 + 0x718]
	0x036303B0 BL 0x1C16D08
	0x036303B4 MOV X1, X0
	0x036303B8 MOV X0, X19
	0x036303BC BL 0x1C16DEC
	0x036303C0 STP X30, X19, [X31 - 0x10]!
	0x036303C4 ADRP X0, 0xAC3000
	0x036303C8 LDR X0, [X0 + 0xB40]
	0x036303CC BL 0x1C16D08
	0x036303D0 BL 0x1C16F10
	0x036303D4 MOV X19, X0
	0x036303D8 ADRP X0, 0xAED000
	0x036303DC LDR X0, [X0 + 0x68]
	0x036303E0 BL 0x1C16D08
	0x036303E4 MOV X1, X0
	0x036303E8 MOV X0, X19
	0x036303EC MOV X2, X31
	0x036303F0 BL 0x3379A44
	0x036303F4 ADRP X0, 0xB0B000
	0x036303F8 LDR X0, [X0 + 0x720]
	0x036303FC BL 0x1C16D08
	0x03630400 MOV X1, X0
	0x03630404 MOV X0, X19
	0x03630408 BL 0x1C16DEC
	0x0363040C B 0x362F9B0
	0x03630410 STP X30, X19, [X31 - 0x10]!
	0x03630414 ADRP X0, 0xAC3000
	0x03630418 LDR X0, [X0 + 0xB40]
	0x0363041C BL 0x1C16D08
	0x03630420 BL 0x1C16F10
	0x03630424 MOV X19, X0
	0x03630428 ADRP X0, 0xAED000
	0x0363042C LDR X0, [X0 + 0x68]
	0x03630430 BL 0x1C16D08
	0x03630434 MOV X1, X0
	0x03630438 MOV X0, X19
	0x0363043C MOV X2, X31
	0x03630440 BL 0x3379A44
	0x03630444 ADRP X0, 0xB0B000
	0x03630448 LDR X0, [X0 + 0x728]
	0x0363044C BL 0x1C16D08
	0x03630450 MOV X1, X0
	0x03630454 MOV X0, X19
	0x03630458 BL 0x1C16DEC
	0x0363045C STP X30, X19, [X31 - 0x10]!
	0x03630460 ADRP X0, 0xAC3000
	0x03630464 LDR X0, [X0 + 0xB40]
	0x03630468 BL 0x1C16D08
	0x0363046C BL 0x1C16F10
	0x03630470 MOV X19, X0
	0x03630474 ADRP X0, 0xAED000
	0x03630478 LDR X0, [X0 + 0x68]
	0x0363047C BL 0x1C16D08
	0x03630480 MOV X1, X0
	0x03630484 MOV X0, X19
	0x03630488 MOV X2, X31
	0x0363048C BL 0x3379A44
	0x03630490 ADRP X0, 0xB0B000
	0x03630494 LDR X0, [X0 + 0x730]
	0x03630498 BL 0x1C16D08
	0x0363049C MOV X1, X0
	0x036304A0 MOV X0, X19
	0x036304A4 BL 0x1C16DEC
	0x036304A8 STP X30, X19, [X31 - 0x10]!

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0xDB1000
	009 Move W8, [X21+1290]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {30}
	016 Move X0, 0xAC5000
	017 Move X0, [X0+2544]
	018 Call 0x1C17CF4
	019 Move X0, 0xB0C000
	020 Move X0, [X0+1720]
	021 Call 0x1C17CF4
	022 Move X0, 0xB0C000
	023 Move X0, [X0+1712]
	024 Call 0x1C17CF4
	025 Move X0, 0xAC4000
	026 Move X0, [X0+2512]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X21+1290], W8
	030 Move X8, [X20+104]
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move W8, [X20+64]
	033 Compare W8, 0
	034 JumpIfNotEqual {36}
	035 Move [X20+48], W31
	036 Move X8, 0xAC5000
	037 Move X8, [X8+2544]
	038 Move X0, [X8]
	039 Move W8, [X0+224]
	040 Compare W8, 0
	041 JumpIfNotEqual {43}
	042 Call 0x1C17DFC
	043 Move X0, X31
	044 Call DateTime.get_Now
	045 Move X8, 0xB0C000
	046 Move X8, [X8+1720]
	047 Move X19, X0
	048 Move X8, [X8]
	049 Move X0, X8
	050 Call 0x1C17F10
	051 Move X1, X19
	052 Move X21, X0
	053 Call ElapsedEventArgs..ctor, X0, X1
	054 Move X19, [X20+56]
	055 Compare X19, 0
	056 JumpIfEqual {159}
	057 Move X0, X20
	058 Call Timer.get_SynchronizingObject, X0
	059 Compare X0, 0
	060 JumpIfEqual {143}
	061 Move X0, X20
	062 Call Timer.get_SynchronizingObject, X0
	063 Move X22, X0
	064 Compare X0, 0
	065 JumpIfEqual {167}
	066 Move X24, 0xB0C000
	067 Move X8, [X22]
	068 Move X24, [X24+1712]
	069 NotImplemented "Instruction LDRH not yet implemented."
	070 Move X1, [X24]
	071 Compare X9, 0
	072 JumpIfEqual {79}
	073 Move X10, [X8+176]
	074 Add X10, X10, 8
	075 NotImplemented "Instruction LDUR not yet implemented."
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Subtract X9, X9, 1
	078 Add X10, X10, 16
	079 Move X0, X22
	080 Move W2, W31
	081 Call 0x1C5D788
	082 NotImplemented "Instruction LDRSW not yet implemented."
	083 Add X8, X8, X9
	084 Add X0, X8, 312
	085 Move X8, [X0]
	086 Move X1, [X0+8]
	087 Move X0, X22
	088 NotImplemented "Instruction BLR not yet implemented."
	089 Move TEMP, X0
	090 And TEMP, TEMP, 1
	091 Compare TEMP, 1
	092 JumpIfNotEqual {143}
	093 Move X0, X20
	094 Call Timer.get_SynchronizingObject, X0
	095 Move X8, 0xAC4000
	096 Move X8, [X8+2512]
	097 Move X22, X0
	098 Move X0, [X8]
	099 Move W1, 2
	100 Call 0x1C17D6C
	101 Move X23, X0
	102 Compare X0, 0
	103 JumpIfEqual {168}
	104 Compare X20, 0
	105 JumpIfEqual {112}
	106 Move X8, [X23]
	107 Move X1, [X8+64]
	108 Move X0, X20
	109 Call 0x1C17E00
	110 Compare X0, 0
	111 JumpIfEqual {172}
	112 Move W8, [X23+24]
	113 Compare W8, 0
	114 JumpIfEqual {169}
	115 Move [X23+32], X20
	116 Compare X21, 0
	117 JumpIfEqual {125}
	118 Move X8, [X23]
	119 Move X1, [X8+64]
	120 Move X0, X21
	121 Call 0x1C17E00
	122 Compare X0, 0
	123 JumpIfEqual {175}
	124 Move W8, [X23+24]
	125 NotImplemented "Instruction CMP not yet implemented."
	126 Move [X23+40], X21
	127 Compare X22, 0
	128 JumpIfEqual {171}
	129 Move X8, [X22]
	130 Move X1, [X24]
	131 NotImplemented "Instruction LDRH not yet implemented."
	132 Compare X9, 0
	133 JumpIfEqual {140}
	134 Move X10, [X8+176]
	135 Add X10, X10, 8
	136 NotImplemented "Instruction LDUR not yet implemented."
	137 NotImplemented "Instruction CMP not yet implemented."
	138 Subtract X9, X9, 1
	139 Add X10, X10, 16
	140 Move W2, 1
	141 Move X0, X22
	142 Call 0x1C5D788
	143 Move X0, [X19+64]
	144 Move X8, [X19+24]
	145 Move X3, [X19+40]
	146 Move X1, X20
	147 Move X2, X21
	148 NotImplemented "Instruction BLR not yet implemented."
	149 Move W9, [X10]
	150 Add W9, W9, 1
	151 Add X8, X8, W9
	152 Add X0, X8, 312
	153 Move X8, [X0]
	154 Move X3, [X0+8]
	155 Move X0, X22
	156 Move X1, X19
	157 Move X2, X23
	158 NotImplemented "Instruction BLR not yet implemented."
	159 Move X20, [X31+48]
	160 Move X19, [X31+56]
	161 Move X22, [X31+32]
	162 Move X21, [X31+40]
	163 Move X24, [X31+16]
	164 Move X23, [X31+24]
	165 Move X30, [X31+64]
	166 Return 
	167 Call 0x1C17F20
	168 Call 0x1C17F20
	169 Call 0x1C17F28
	170 Call 0x1C17F28
	171 Call 0x1C17F20
	172 Call 0x1C17F44
	173 Move X1, X31
	174 Call 0x1C17DEC
	175 Call 0x1C17F44
	176 Move X1, X31
	177 Call 0x1C17DEC
	178 Move X19, X0
	179 NotImplemented "Instruction CMP not yet implemented."
	180 Move X0, X19
	181 Call 0x3EB2AD0
	182 Move X19, X0
	183 Move X0, 0xACA000
	184 Move X0, [X0+3264]
	185 Call 0x1C17D08
	186 Move X8, [X19]
	187 Move X1, [X8]
	188 Call 0x1C18270
	189 Move TEMP, X0
	190 And TEMP, TEMP, 1
	191 Compare TEMP, 1
	192 JumpIfNotEqual {202}
	193 Move X20, [X31+48]
	194 Move X19, [X31+56]
	195 Move X22, [X31+32]
	196 Move X21, [X31+40]
	197 Move X24, [X31+16]
	198 Move X23, [X31+24]
	199 Move X30, [X31+64]
	200 Call 0x3EB2AE0
	201 Return 
	202 Move W0, 8
	203 Call 0x3EB2AF0
	204 Move X8, [X19]
	205 Move [X0], X8
	206 Move X1, 0x885000
	207 Add X1, X1, 3672
	208 Move X2, X31
	209 Call 0x3EB2B00
	210 Move X19, X0
	211 Call 0x3EB2AE0
	212 Move X0, X19
	213 Call 0x1D2D690
	214 Call 0x1991590

