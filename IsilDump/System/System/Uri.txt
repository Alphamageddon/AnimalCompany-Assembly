Type: System.Uri

Method: System.Boolean get_IsImplicitFile()

Disassembly:
	0x03618D84 MOV X2, X31
	0x03618D88 BL 0x321B938
	0x03618D8C B 0x3618DA0

ISIL:
	001 Move W8, [X0+51]
	002 Move W0, W8
	003 ShiftRight W0, 5
	004 And W0, W0, 31
	005 Return X0

Method: System.Boolean get_IsUncOrDosPath()

Disassembly:
	0x03618D90 MOV X0, X21
	0x03618D94 MOV X1, X20
	0x03618D98 MOV X2, X31
	0x03618D9C BL 0x321B938

ISIL:
	001 Move W8, [X0+51]
	002 And W31, W8, 24
	003 NotImplemented "Instruction CSET not yet implemented."
	004 Return X0

Method: System.Boolean get_IsDosPath()

Disassembly:
	0x03618DA0 STR X0, [X19 + 0x10]
	0x03618DA4 CBZ X0, 0x361884C
	0x03618DA8 LDR W20, [X0 + 0x10]

ISIL:
	001 Move W8, [X0+51]
	002 Move W0, W8
	003 ShiftRight W0, 3
	004 And W0, W0, 7
	005 Return X0

Method: System.Boolean get_IsUncPath()

Disassembly:
	0x03618DAC MOV W21, W22
	0x03618DB0 LDR X8, [X19 + 0x38]
	0x03618DB4 CBZ X8, 0x361884C

ISIL:
	001 Move W8, [X0+51]
	002 Move W0, W8
	003 ShiftRight W0, 4
	004 And W0, W0, 15
	005 Return X0

Method: System.Uri/Flags get_HostType()

Disassembly:
	0x03618DB8 LDRH W26, [X31 + 0x8]
	0x03618DBC STRH W26, [X8 + 0x32]
	0x03618DC0 LDR X22, [X19 + 0x10]

ISIL:
	001 Move X8, [X0+48]
	002 And X0, X8, 0x7FFFF
	003 Return X0

Method: System.UriParser get_Syntax()

Disassembly:
	0x03618DC4 CBZ X22, 0x3618DD4
	0x03618DC8 MOV X0, X31

ISIL:
	001 Move X0, [X0+32]
	002 Return X0

Method: System.Boolean get_IsNotAbsoluteUri()

Disassembly:
	0x03618DCC BL 0x32C1424
	0x03618DD0 ADD X22, X22, W0, SXTW
	0x03618DD4 CMP W26, W20, UXTH
	0x03618DD8 B.CS 0x3618E50

ISIL:
	001 Move X8, [X0+32]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 NotImplemented "Instruction CSET not yet implemented."
	004 Return X0

Method: System.Boolean IriParsingStatic(System.UriParser syntax)

Disassembly:
	0x03618DDC LDRH W8, [X22, X26, LSL #1]
	0x03618DE0 CMP W8, 0x3F
	0x03618DE4 B.NE 0x3618E50
	0x03618DE8 ANDS W31, W24, 0x40
	0x03618DEC MOVZ W9, 0x23
	0x03618DF0 MOVN W10, 0x1
	0x03618DF4 ADD W8, W26, 0x1
	0x03618DF8 CSEL W4, W10, W9, EQ
	0x03618DFC ADD X2, X31, 0x8
	0x03618E00 MOV X0, X19
	0x03618E04 MOV X1, X22
	0x03618E08 MOV W3, W20
	0x03618E0C STRH W8, [X31 + 0x8]
	0x03618E10 BL 0x3620708
	0x03618E14 ORR X8, X23, 0x3F
	0x03618E18 ANDS W31, W0, 0x2
	0x03618E1C MOVZ W9, 0x11
	0x03618E20 LDRB W11, [X19 + 0x40]
	0x03618E24 CSEL X8, X8, X23, EQ
	0x03618E28 MOVZ W10, 0x5B
	0x03618E2C AND W9, W0, W9, 0x0
	0x03618E30 AND W10, W0, W10, 0x0
	0x03618E34 CMP W9, 0x1
	0x03618E38 ORR X9, X8, 0xFFF
	0x03618E3C CSEL X8, X8, X9, EQ
	0x03618E40 CMP W10, 0xA
	0x03618E44 CCMP W11, 0x0, 0x4, EQ
	0x03618E48 ORR X9, X8, 0x3FFFFFFFFFF
	0x03618E4C CSEL X23, X9, X8, NE
	0x03618E50 TBNZ X25, 0x0, 0x3618F2C
	0x03618E54 LDR X0, [X19 + 0x18]
	0x03618E58 CBZ X0, 0x361884C
	0x03618E5C LDR W8, [X0 + 0x10]
	0x03618E60 CMP W8, W21
	0x03618E64 B.LE 0x3618F2C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xDC9000
	006 Move X20, 0xADE000
	007 Move W8, [X21+1137]
	008 Move X20, [X20+2600]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xADE000
	015 Move X0, [X0+2600]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+1137], W8
	019 Move X0, [X20]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {25}
	023 Call 0x1C17DFC
	024 Move X0, [X20]
	025 Move X8, [X0+184]
	026 Move W20, [X8+112]
	027 Call 0x1C17D44
	028 Compare W20, 0
	029 JumpIfEqual {43}
	030 NotImplemented "Instruction CMP not yet implemented."
	031 NotImplemented "Instruction CSET not yet implemented."
	032 Compare X19, 0
	033 JumpIfEqual {43}
	034 Move W1, 0x10000000
	035 Move X0, X19
	036 Move X2, X31
	037 Call UriParser.InFact, X0, X1
	038 Move TEMP, X0
	039 And TEMP, TEMP, 1
	040 Compare TEMP, 1
	041 JumpIfNotEqual {43}
	042 Move W20, 1
	043 Move W0, W20
	044 Move X20, [X31+16]
	045 Move X19, [X31+24]
	046 Move X30, [X31+32]
	047 Move X21, [X31+40]
	048 Return X0

Method: System.Boolean get_AllowIdn()

Disassembly:
	0x03618E68 MOV W1, W21
	0x03618E6C MOV X2, X31
	0x03618E70 BL 0x3222A1C
	0x03618E74 AND W8, W0, 0xFFFF
	0x03618E78 CMP W8, 0x23
	0x03618E7C B.NE 0x3618F2C
	0x03618E80 ADD W8, W21, 0x1
	0x03618E84 STRH W8, [X31 + 0xC]
	0x03618E88 LDR X1, [X19 + 0x18]
	0x03618E8C CBZ X1, 0x361884C
	0x03618E90 LDR W3, [X1 + 0x10]
	0x03618E94 ADD X2, X31, 0xC
	0x03618E98 MOVZ W4, 0xFFFE
	0x03618E9C MOV X0, X19
	0x03618EA0 BL 0x3622650
	0x03618EA4 LDR X1, [X19 + 0x18]
	0x03618EA8 LDRH W3, [X31 + 0xC]
	0x03618EAC MOVZ W4, 0x40
	0x03618EB0 MOV W2, W21
	0x03618EB4 BL 0x36226A4
	0x03618EB8 ADRP X8, 0xB23000
	0x03618EBC LDR X8, [X8 + 0x48]
	0x03618EC0 MOV X20, X0
	0x03618EC4 LDR X8, [X8]
	0x03618EC8 LDR W9, [X8 + 0xE0]
	0x03618ECC CBNZ W9, 0x3618ED8
	0x03618ED0 MOV X0, X8
	0x03618ED4 BL 0x1C16DFC
	0x03618ED8 MOV X0, X31
	0x03618EDC BL 0x362BC9C
	0x03618EE0 LDR X21, [X19 + 0x10]
	0x03618EE4 TBZ X0, 0x0, 0x3618F10
	0x03618EE8 CBZ X20, 0x361905C
	0x03618EEC MOVZ W1, 0x1
	0x03618EF0 MOV X0, X20
	0x03618EF4 MOV X2, X31
	0x03618EF8 BL 0x322E3D0
	0x03618EFC MOV X1, X0
	0x03618F00 MOV X0, X21
	0x03618F04 MOV X2, X31
	0x03618F08 BL 0x321B938
	0x03618F0C B 0x3618F20
	0x03618F10 MOV X0, X21
	0x03618F14 MOV X1, X20
	0x03618F18 MOV X2, X31
	0x03618F1C BL 0x321B938
	0x03618F20 STR X0, [X19 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xDC9000
	006 Move W8, [X20+1138]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xADE000
	013 Move X0, [X0+2600]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+1138], W8
	017 Move X8, [X19+32]
	018 Compare X8, 0
	019 JumpIfEqual {25}
	020 Move W8, [X8+19]
	021 Move TEMP, X8
	022 And TEMP, TEMP, 4
	023 Compare TEMP, 4
	024 JumpIfEqual {31}
	025 Move W0, W31
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Return X0
	031 Move X20, 0xADE000
	032 Move X20, [X20+2600]
	033 Move X0, [X20]
	034 Move W8, [X0+224]
	035 Compare W8, 0
	036 JumpIfNotEqual {39}
	037 Call 0x1C17DFC
	038 Move X0, [X20]
	039 Move X8, [X0+184]
	040 Move W21, [X8+108]
	041 Call 0x1C17D44
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move W0, 1
	044 Move X0, [X20]
	045 Move W8, [X0+224]
	046 Compare W8, 0
	047 JumpIfNotEqual {50}
	048 Call 0x1C17DFC
	049 Move X0, [X20]
	050 Move X8, [X0+184]
	051 Move W20, [X8+108]
	052 Call 0x1C17D44
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Move W8, [X19+52]
	055 And W31, W8, 32
	056 NotImplemented "Instruction CSET not yet implemented."

Method: System.Boolean AllowIdnStatic(System.UriParser syntax, System.Uri/Flags flags)

Disassembly:
	0x03618F34 LDRH W22, [X31 + 0x8]
	0x03618F38 STRH W22, [X8 + 0x34]
	0x03618F3C LDR X21, [X19 + 0x10]
	0x03618F40 CBZ X21, 0x3618F50
	0x03618F44 MOV X0, X31
	0x03618F48 BL 0x32C1424
	0x03618F4C ADD X21, X21, W0, SXTW
	0x03618F50 CMP W22, W20, UXTH
	0x03618F54 B.CS 0x3618FC0
	0x03618F58 LDRH W8, [X21, X22, LSL #1]
	0x03618F5C CMP W8, 0x23
	0x03618F60 B.NE 0x3618FC0
	0x03618F64 ADD W8, W22, 0x1
	0x03618F68 ADD X2, X31, 0x8
	0x03618F6C MOVZ W4, 0xFFFE
	0x03618F70 MOV X0, X19
	0x03618F74 MOV X1, X21
	0x03618F78 MOV W3, W20
	0x03618F7C STRH W8, [X31 + 0x8]
	0x03618F80 BL 0x3620708
	0x03618F84 ORR X8, X23, 0x7F
	0x03618F88 ANDS W31, W0, 0x2
	0x03618F8C MOVZ W9, 0x11
	0x03618F90 LDRB W11, [X19 + 0x40]
	0x03618F94 CSEL X8, X8, X23, EQ
	0x03618F98 MOVZ W10, 0x5B
	0x03618F9C AND W9, W0, W9, 0x0
	0x03618FA0 AND W10, W0, W10, 0x0
	0x03618FA4 CMP W9, 0x1
	0x03618FA8 ORR X9, X8, 0x1FFF
	0x03618FAC CSEL X8, X8, X9, EQ
	0x03618FB0 CMP W10, 0xA
	0x03618FB4 CCMP W11, 0x0, 0x4, EQ
	0x03618FB8 ORR X9, X8, 0x7FFFFFFFFFF
	0x03618FBC CSEL X23, X9, X8, NE
	0x03618FC0 LDR X21, [X19 + 0x38]
	0x03618FC4 CBZ X21, 0x361884C
	0x03618FC8 LDRH W8, [X31 + 0x8]
	0x03618FCC STRH W8, [X21 + 0x36]
	0x03618FD0 STRB W31, [X31 + 0x4]
	0x03618FD4 ADD X1, X31, 0x4
	0x03618FD8 MOV X0, X21
	0x03618FDC MOV X2, X31
	0x03618FE0 BL 0x33DE64C
	0x03618FE4 LDR X8, [X19 + 0x30]
	0x03618FE8 MOV X22, X31
	0x03618FEC MOVZ W20, 0x50
	0x03618FF0 ORR X8, X23, X8, 0x0
	0x03618FF4 ORR X8, X8, 0xFFFFFFFF
	0x03618FF8 STR X8, [X19 + 0x30]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xDC9000
	006 Move W8, [X21+1139]
	007 Move X19, X2
	008 Move X20, X1
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xADE000
	014 Move X0, [X0+2600]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+1139], W8
	018 Compare X20, 0
	019 JumpIfEqual {25}
	020 Move W8, [X20+19]
	021 Move TEMP, X8
	022 And TEMP, TEMP, 4
	023 Compare TEMP, 4
	024 JumpIfEqual {31}
	025 Move W0, W31
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Return X0
	031 Move X20, 0xADE000
	032 Move X20, [X20+2600]
	033 Move X0, [X20]
	034 Move W8, [X0+224]
	035 Compare W8, 0
	036 JumpIfNotEqual {39}
	037 Call 0x1C17DFC
	038 Move X0, [X20]
	039 Move X8, [X0+184]
	040 Move W21, [X8+108]
	041 Call 0x1C17D44
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move W0, 1
	044 Move X0, [X20]
	045 Move W8, [X0+224]
	046 Compare W8, 0
	047 JumpIfNotEqual {50}
	048 Call 0x1C17DFC
	049 Move X0, [X20]
	050 Move X8, [X0+184]
	051 Move W21, [X8+108]
	052 Call 0x1C17D44
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Move X0, [X20]
	055 Move W8, [X0+224]
	056 Compare W8, 0
	057 JumpIfNotEqual {59}
	058 Call 0x1C17DFC
	059 And X31, X19, 0x3FFFFFFFFF
	060 NotImplemented "Instruction CSET not yet implemented."

Method: System.Boolean IsIntranet(System.String schemeHost)

Disassembly:
	0x03619008 MOV X1, X31
	0x0361900C BL 0x33E14E4

ISIL:
	001 Move W0, W31
	002 Return X0

Method: System.Boolean get_UserDrivenParsing()

Disassembly:
	0x03619010 CBNZ X22, 0x361904C
	0x03619014 CMP W20, 0x50
	0x03619018 B.EQ 0x3619020

ISIL:
	001 Move W8, [X0+51]
	002 And W0, W8, 1
	003 Return X0

Method: System.Void SetUserDrivenParsing()

Disassembly:
	0x0361901C CBNZ W20, 0x361902C
	0x03619020 LDR X8, [X19 + 0x30]
	0x03619024 ORR X8, X8, 0xFFFFFFFFF
	0x03619028 STR X8, [X19 + 0x30]
	0x0361902C LDP X20, X19, [X31 + 0x60]

ISIL:
	001 Move X8, [X0+48]
	002 And X8, X8, 0xFFFFF
	003 Or X8, X8, 0x1FFFFFF
	004 Move [X0+48], X8
	005 Return 

Method: System.UInt16 get_SecuredPathIndex()

Disassembly:
	0x03619030 LDP X22, X21, [X31 + 0x50]
	0x03619034 LDP X24, X23, [X31 + 0x40]
	0x03619038 LDP X26, X25, [X31 + 0x30]
	0x0361903C LDP X28, X27, [X31 + 0x20]
	0x03619040 LDP X29, X30, [X31 + 0x10]
	0x03619044 ADD X31, X31, 0x70
	0x03619048 RET
	0x0361904C MOV X0, X22
	0x03619050 BL 0x1C16F18
	0x03619054 BL 0x1C16F20
	0x03619058 BL 0x1C16F20
	0x0361905C BL 0x1C16F20
	0x03619060 B 0x3619088
	0x03619064 B 0x36190E0
	0x03619068 B 0x3619088
	0x0361906C B 0x3619088
	0x03619070 B 0x3619088
	0x03619074 B 0x3619088
	0x03619078 B 0x36190E0
	0x0361907C B 0x36190E0
	0x03619080 B 0x36190E0
	0x03619084 B 0x36190E0
	0x03619088 MOV X20, X0

ISIL:
	001 Move [X31-16], X30
	002 Move W8, [X0+51]
	003 Move TEMP, X8
	004 And TEMP, TEMP, 8
	005 Compare TEMP, 8
	006 JumpIfEqual {8}
	007 Move W0, W31
	008 Move X8, [X0+56]
	009 Compare X8, 0
	010 JumpIfEqual {24}
	011 Move X0, [X0+16]
	012 Compare X0, 0
	013 JumpIfEqual {24}
	014 NotImplemented "Instruction LDRH not yet implemented."
	015 Move X2, X31
	016 Call String.get_Chars, X0, X1
	017 And W8, W0, 0xFFFF
	018 NotImplemented "Instruction CMP not yet implemented."
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Move W0, 3
	021 Move W0, 2
	022 Move X30, [X31+16]
	023 Return X0
	024 Call 0x1C17F20

Method: System.Boolean NotAny(System.Uri/Flags flags)

Disassembly:
	0x03618F24 CBZ X0, 0x361884C
	0x03618F28 LDR W20, [X0 + 0x10]
	0x03618F2C LDR X8, [X19 + 0x38]
	0x03618F30 CBZ X8, 0x361884C

ISIL:
	001 Move X8, [X0+48]
	002 And X31, X8, X1
	003 NotImplemented "Instruction CSET not yet implemented."
	004 Return X0

Method: System.Boolean InFact(System.Uri/Flags flags)

Disassembly:
	0x0361908C CMP W1, 0x1
	0x03619090 B.NE 0x36191F8
	0x03619094 MOV X0, X20
	0x03619098 BL 0x3EB1AD0

ISIL:
	001 Move X8, [X0+48]
	002 And X31, X8, X1
	003 NotImplemented "Instruction CSET not yet implemented."
	004 Return X0

Method: System.Boolean StaticNotAny(System.Uri/Flags allFlags, System.Uri/Flags checkFlags)

Disassembly:
	0x03618FFC LDRB W8, [X31 + 0x4]
	0x03619000 CBZ W8, 0x3619010
	0x03619004 MOV X0, X21

ISIL:
	001 And X31, X1, X0
	002 NotImplemented "Instruction CSET not yet implemented."
	003 Return X0

Method: System.Boolean StaticInFact(System.Uri/Flags allFlags, System.Uri/Flags checkFlags)

Disassembly:
	0x0361909C MOV X19, X0
	0x036190A0 ADRP X0, 0xAE2000
	0x036190A4 LDR X0, [X0 + 0x578]

ISIL:
	001 And X31, X1, X0
	002 NotImplemented "Instruction CSET not yet implemented."
	003 Return X0

Method: System.Uri/UriInfo EnsureUriInfo()

Disassembly:
	0x036190A8 BL 0x1C16D08
	0x036190AC LDR X8, [X19]
	0x036190B0 LDR X1, [X8]
	0x036190B4 BL 0x1C17270
	0x036190B8 TBNZ X0, 0x0, 0x3619198
	0x036190BC MOVZ W0, 0x8
	0x036190C0 BL 0x3EB1AF0
	0x036190C4 LDR X8, [X19]
	0x036190C8 STR X8, [X0]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X1, [X0+48]
	004 Move X19, X0
	005 Move TEMP, X1
	006 And TEMP, TEMP, 0x40000000
	007 Compare TEMP, 0x40000000
	008 JumpIfEqual {11}
	009 Move X0, X19
	010 Call Uri.CreateUriInfo, X0, X1
	011 Move X0, [X19+56]
	012 Move X30, [X31+16]
	013 Move X19, [X31+24]
	014 Return X0

Method: System.Void EnsureParseRemaining()

Disassembly:
	0x03619654 MOV X21, X0
	0x03619658 B.NE 0x3619670
	0x0361965C MOV X0, X21
	0x03619660 BL 0x3EB1AD0

ISIL:
	001 Move W8, [X0+48]
	002 Move TEMP, X8
	003 And TEMP, TEMP, -2147483648
	004 Compare TEMP, -2147483648
	005 JumpIfEqual {6}
	006 Return 

Method: System.Void EnsureHostString(System.Boolean allowDnsOptimization)

Disassembly:
	0x0361A254 MOV X1, X21
	0x0361A258 BL 0x361A0D8
	0x0361A25C STR X31, [X31 + 0x18]
	0x0361A260 LDR X0, [X20 + 0x20]
	0x0361A264 CBZ X0, 0x361A354
	0x0361A268 MOV X1, X31
	0x0361A26C BL 0x362CE34
	0x0361A270 TBZ X0, 0x0, 0x361A2E4
	0x0361A274 ADRP X22, 0xADB000
	0x0361A278 LDR W8, [X19 + 0x30]
	0x0361A27C LDR X22, [X22 + 0xA28]
	0x0361A280 UBFM W8, W8, 0x13, 0x13
	0x0361A284 LDR X0, [X22]
	0x0361A288 STRB W8, [X31 + 0x4]
	0x0361A28C LDR W8, [X0 + 0xE0]
	0x0361A290 CBNZ W8, 0x361A298
	0x0361A294 BL 0x1C16DFC
	0x0361A298 ADD X2, X31, 0x18
	0x0361A29C ADD X3, X31, 0x4
	0x0361A2A0 ADD X4, X31, 0x8
	0x0361A2A4 MOV X0, X20
	0x0361A2A8 MOV X1, X19
	0x0361A2AC BL 0x3619BBC
	0x0361A2B0 LDR X21, [X31 + 0x8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X0+48]
	005 Move X19, X0
	006 Move W20, W1
	007 Move TEMP, X8
	008 And TEMP, TEMP, 0x40000000
	009 Compare TEMP, 0x40000000
	010 JumpIfEqual {14}
	011 Move X0, X19
	012 Move X1, X8
	013 Call Uri.CreateUriInfo, X0, X1
	014 Move X8, [X19+56]
	015 Compare X8, 0
	016 JumpIfEqual {37}
	017 Move X8, [X8+16]
	018 Compare X8, 0
	019 JumpIfEqual {24}
	020 Move X20, [X31+16]
	021 Move X19, [X31+24]
	022 Move X30, [X31+32]
	023 Return 
	024 Move TEMP, X20
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfNotEqual {33}
	028 Move W8, [X19+51]
	029 Move TEMP, X8
	030 And TEMP, TEMP, 2
	031 Compare TEMP, 2
	032 JumpIfEqual {20}
	033 Move X0, X19
	034 Move X20, [X31+16]
	035 Move X19, [X31+24]
	036 Move X30, [X31+32]
	037 Call 0x1C17F20

Method: System.Void .ctor(System.String uriString)

Disassembly:
	0x0361A6A8 B.CC 0x361A718
	0x0361A6AC AND X10, X21, 0xFFFF
	0x0361A6B0 ADD X8, X20, 0x2
	0x0361A6B4 MOVZ W9, 0x1
	0x0361A6B8 SUB X10, X10, 0x1
	0x0361A6BC MOVZ X11, 0x6800
	0x0361A6C0 LDRH W12, [X8]
	0x0361A6C4 SUB W13, W12, 0x61
	0x0361A6C8 CMP W13, 0x1A
	0x0361A6CC B.CC 0x361A70C
	0x0361A6D0 SUB W13, W12, 0x41
	0x0361A6D4 CMP W13, 0x19
	0x0361A6D8 B.LS 0x361A704
	0x0361A6DC SUB W13, W12, 0x30
	0x0361A6E0 CMP W13, 0xA
	0x0361A6E4 B.CC 0x361A70C
	0x0361A6E8 CMP W12, 0x2E
	0x0361A6EC B.HI 0x361A768
	0x0361A6F0 MOV W12, W12
	0x0361A6F4 LSLV X12, X9, X12
	0x0361A6F8 ANDS X31, X12, X11, 0x0
	0x0361A6FC B.NE 0x361A70C
	0x0361A700 B 0x361A768
	0x0361A704 ORR W12, W12, 0x20
	0x0361A708 STRH W12, [X8]
	0x0361A70C SUBS X10, X10, 0x1
	0x0361A710 ADD X8, X8, 0x2
	0x0361A714 B.NE 0x361A6C0
	0x0361A718 ADRP X21, 0xB21000
	0x0361A71C LDR X21, [X21 + 0x48]
	0x0361A720 MOV X0, X31
	0x0361A724 MOV X1, X20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X1
	005 Move X1, X31
	006 Move X20, X0
	007 Call Object..ctor, X0
	008 Compare X19, 0
	009 JumpIfEqual {17}
	010 Move X0, X20
	011 Move X1, X19
	012 Move X20, [X31+16]
	013 Move X19, [X31+24]
	014 Move W3, 1
	015 Move W2, W31
	016 Move X30, [X31+32]
	017 Move X0, 0xADF000
	018 Move X0, [X0+1320]
	019 Call 0x1C17D08
	020 Call 0x1C17F10
	021 Move X19, X0
	022 Move X0, 0xB22000
	023 Move X0, [X0+96]
	024 Call 0x1C17D08
	025 Move X1, X0
	026 Move X0, X19
	027 Move X2, X31
	028 Call ArgumentNullException..ctor, X0, X1
	029 Move X0, 0xB22000
	030 Move X0, [X0+104]
	031 Call 0x1C17D08
	032 Move X1, X0
	033 Move X0, X19
	034 Call 0x1C17DEC

Method: System.Void .ctor(System.String uriString, System.UriKind uriKind)

Disassembly:
	0x0361A8E0 MOV X0, X20
	0x0361A8E4 BL 0x361CF60
	0x0361A8E8 ANDS W31, W0, 0x1
	0x0361A8EC MOVZ W8, 0x10
	0x0361A8F0 MOVZ W9, 0x18
	0x0361A8F4 CSEL X8, X9, X8, NE
	0x0361A8F8 LDR X0, [X20, X8, LSL]
	0x0361A8FC CBZ X0, 0x361B0C0
	0x0361A900 ADD W2, W21, 0x1
	0x0361A904 TBNZ X22, 0x1D, 0x361A93C
	0x0361A908 MOVZ W1, 0x3A
	0x0361A90C MOV X3, X31
	0x0361A910 BL 0x322BDA8
	0x0361A914 MOV W21, W0
	0x0361A918 MOV X0, X20
	0x0361A91C BL 0x361CF60
	0x0361A920 ANDS W31, W0, 0x1
	0x0361A924 MOVZ W8, 0x10
	0x0361A928 MOVZ W9, 0x18
	0x0361A92C CSEL X8, X9, X8, NE
	0x0361A930 LDR X0, [X20, X8, LSL]
	0x0361A934 CBZ X0, 0x361B0C0
	0x0361A938 ADD W2, W21, 0x1
	0x0361A93C MOV W1, W31
	0x0361A940 MOV X3, X31
	0x0361A944 BL 0x3228DE4
	0x0361A948 B 0x361ADCC
	0x0361A94C MOVZ W1, 0x1
	0x0361A950 MOV X0, X19
	0x0361A954 MOV X2, X31
	0x0361A958 BL 0x3222A1C
	0x0361A95C AND W8, W0, 0xFFFF
	0x0361A960 CMP W8, 0x2F

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, X1
	006 Move X1, X31
	007 Move W19, W2
	008 Move X21, X0
	009 Call Object..ctor, X0
	010 Compare X20, 0
	011 JumpIfEqual {22}
	012 Move X1, X20
	013 Move W3, W19
	014 Move X20, [X31+16]
	015 Move X19, [X31+24]
	016 Move X0, X21
	017 Move W2, W31
	018 Move X30, [X31+32]
	019 Move X21, [X31+40]
	020 Call Uri.CreateThis, X0, X1, X2, X3
	021 Return 
	022 Move X0, 0xADF000
	023 Move X0, [X0+1320]
	024 Call 0x1C17D08
	025 Call 0x1C17F10
	026 Move X19, X0
	027 Move X0, 0xB22000
	028 Move X0, [X0+96]
	029 Call 0x1C17D08
	030 Move X1, X0
	031 Move X0, X19
	032 Move X2, X31
	033 Call ArgumentNullException..ctor, X0, X1
	034 Move X0, 0xB22000
	035 Move X0, [X0+136]
	036 Call 0x1C17D08
	037 Move X1, X0
	038 Move X0, X19
	039 Call 0x1C17DEC

Method: System.Void .ctor(System.Uri baseUri, System.String relativeUri)

Disassembly:
	0x0361A964 B.EQ 0x361A984
	0x0361A968 MOVZ W1, 0x1
	0x0361A96C MOV X0, X19
	0x0361A970 MOV X2, X31
	0x0361A974 BL 0x3222A1C
	0x0361A978 AND W8, W0, 0xFFFF
	0x0361A97C CMP W8, 0x5C
	0x0361A980 B.NE 0x361A8AC
	0x0361A984 ADRP X25, 0xADB000
	0x0361A988 LDR X25, [X25 + 0xA28]
	0x0361A98C LDR X23, [X20 + 0x20]
	0x0361A990 LDR X0, [X25]
	0x0361A994 LDR W8, [X0 + 0xE0]
	0x0361A998 CBNZ W8, 0x361A9A0
	0x0361A99C BL 0x1C16DFC
	0x0361A9A0 CBZ X23, 0x361B0C0
	0x0361A9A4 MOVZ W1, 0x2000
	0x0361A9A8 MOV X0, X23
	0x0361A9AC MOV X2, X31
	0x0361A9B0 BL 0x3629044
	0x0361A9B4 TBZ X0, 0x0, 0x361AA24
	0x0361A9B8 AND W8, W22, 0xFFFF
	0x0361A9BC CMP W8, 0x5C
	0x0361A9C0 B.EQ 0x361A9CC
	0x0361A9C4 CMP W8, 0x2F
	0x0361A9C8 B.NE 0x361AA24
	0x0361A9CC LDR W8, [X19 + 0x10]
	0x0361A9D0 CMP W8, 0x2
	0x0361A9D4 B.LT 0x361ABFC
	0x0361A9D8 MOVZ W1, 0x1
	0x0361A9DC MOV X0, X19
	0x0361A9E0 MOV X2, X31
	0x0361A9E4 BL 0x3222A1C
	0x0361A9E8 AND W8, W0, 0xFFFF
	0x0361A9EC CMP W8, 0x5C
	0x0361A9F0 B.EQ 0x361AA10
	0x0361A9F4 MOVZ W1, 0x1
	0x0361A9F8 MOV X0, X19
	0x0361A9FC MOV X2, X31
	0x0361AA00 BL 0x3222A1C
	0x0361AA04 AND W8, W0, 0xFFFF
	0x0361AA08 CMP W8, 0x2F
	0x0361AA0C B.NE 0x361ABFC
	0x0361AA10 LDRB W8, [X20 + 0x33]
	0x0361AA14 TBNZ X8, 0x5, 0x361B060
	0x0361AA18 ADRP X8, 0xB21000
	0x0361AA1C LDR X8, [X8 + 0xD0]
	0x0361AA20 B 0x361ADC8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, X1
	006 Move X1, X31
	007 Move X19, X2
	008 Move X21, X0
	009 Call Object..ctor, X0
	010 Compare X20, 0
	011 JumpIfEqual {25}
	012 Move X8, [X20+32]
	013 Compare X8, 0
	014 JumpIfEqual {37}
	015 Move X1, X20
	016 Move X2, X19
	017 Move X20, [X31+16]
	018 Move X19, [X31+24]
	019 Move X0, X21
	020 Move W3, W31
	021 Move X30, [X31+32]
	022 Move X21, [X31+40]
	023 Call Uri.CreateUri, X0, X1, X2, X3
	024 Return 
	025 Move X0, 0xADF000
	026 Move X0, [X0+1320]
	027 Call 0x1C17D08
	028 Call 0x1C17F10
	029 Move X19, X0
	030 Move X0, 0xB22000
	031 Move X0, [X0+144]
	032 Call 0x1C17D08
	033 Move X1, X0
	034 Move X0, X19
	035 Move X2, X31
	036 Call ArgumentNullException..ctor, X0, X1
	037 Move X0, 0xAE2000
	038 Move X0, [X0+1888]
	039 Call 0x1C17D08
	040 Call 0x1C17F10
	041 Move X19, X0
	042 Move X0, 0xB22000
	043 Move X0, [X0+144]
	044 Call 0x1C17D08
	045 Move X1, X0
	046 Move X0, X19
	047 Move X2, X31
	048 Call ArgumentOutOfRangeException..ctor, X0, X1
	049 Move X0, 0xB22000
	050 Move X0, [X0+152]
	051 Call 0x1C17D08
	052 Move X1, X0
	053 Move X0, X19
	054 Call 0x1C17DEC

Method: System.Void CreateUri(System.Uri baseUri, System.String relativeUri, System.Boolean dontEscape)

Disassembly:
	0x0361AA34 BL 0x3629044
	0x0361AA38 AND W8, W22, 0xFFFF
	0x0361AA3C CMP W8, 0x5C
	0x0361AA40 CSET W9, EQ
	0x0361AA44 CMP W8, 0x2F
	0x0361AA48 AND W23, W9, W0, 0x0
	0x0361AA4C B.EQ 0x361AAF8
	0x0361AA50 CBNZ W23, 0x361AAF8
	0x0361AA54 LDR X8, [X20 + 0x30]
	0x0361AA58 MOVZ W9, 0x8
	0x0361AA5C MOVK W9, 0x40000000
	0x0361AA60 MOVZ W10, 0x2
	0x0361AA64 ANDS X31, X8, 0x3FFFFFFF
	0x0361AA68 CSEL W2, W21, W10, EQ
	0x0361AA6C ADD W1, W9, 0x8
	0x0361AA70 MOV X0, X20
	0x0361AA74 BL 0x3620B04
	0x0361AA78 CBZ X0, 0x361B0C0
	0x0361AA7C ADRP X9, 0xAE2000
	0x0361AA80 LDR W23, [X0 + 0x10]
	0x0361AA84 LDR W8, [X19 + 0x10]
	0x0361AA88 LDR X9, [X9 + 0x8D8]
	0x0361AA8C MOV X24, X0
	0x0361AA90 ADD W1, W8, W23
	0x0361AA94 LDR X0, [X9]
	0x0361AA98 BL 0x1C16D6C
	0x0361AA9C CMP W23, 0x1
	0x0361AAA0 MOV X22, X0
	0x0361AAA4 B.LT 0x361ACBC
	0x0361AAA8 MOV X0, X24
	0x0361AAAC MOV W1, W31
	0x0361AAB0 MOV X2, X22
	0x0361AAB4 MOV W3, W31
	0x0361AAB8 MOV W4, W23
	0x0361AABC MOV X5, X31
	0x0361AAC0 BL 0x322D7E4
	0x0361AAC4 CMP W23, 0x0
	0x0361AAC8 B.LE 0x361ACB8
	0x0361AACC CBZ X22, 0x361B0C0
	0x0361AAD0 LDR W8, [X22 + 0x18]
	0x0361AAD4 SUB W23, W23, 0x1
	0x0361AAD8 CMP W23, W8
	0x0361AADC B.CS 0x361B0C4
	0x0361AAE0 ADD X8, X22, W23, 0x1, UXTW
	0x0361AAE4 LDRH W8, [X8 + 0x20]
	0x0361AAE8 CMP W8, 0x2F
	0x0361AAEC B.NE 0x361AAC4
	0x0361AAF0 ADD W23, W23, 0x1
	0x0361AAF4 B 0x361ACBC
	0x0361AAF8 LDR W8, [X19 + 0x10]
	0x0361AAFC CMP W8, 0x2
	0x0361AB00 B.LT 0x361AB38
	0x0361AB04 MOVZ W1, 0x1
	0x0361AB08 MOV X0, X19
	0x0361AB0C MOV X2, X31
	0x0361AB10 BL 0x3222A1C
	0x0361AB14 AND W8, W0, 0xFFFF
	0x0361AB18 CMP W8, 0x2F
	0x0361AB1C B.NE 0x361AB38
	0x0361AB20 MOV X0, X20
	0x0361AB24 BL 0x361CEF0
	0x0361AB28 ADRP X8, 0xAE2000
	0x0361AB2C LDR X8, [X8 + 0x988]
	0x0361AB30 LDR X1, [X8]
	0x0361AB34 B 0x361AFDC
	0x0361AB38 LDR X8, [X20 + 0x30]
	0x0361AB3C AND X8, X8, 0x7FFFF
	0x0361AB40 CMP X8, 0x10000
	0x0361AB44 B.NE 0x361AC68
	0x0361AB48 ADRP X8, 0xAD9000
	0x0361AB4C LDR X8, [X8 + 0xAC8]
	0x0361AB50 MOVZ W1, 0x5
	0x0361AB54 LDR X0, [X8]
	0x0361AB58 BL 0x1C16D6C
	0x0361AB5C MOV X22, X0
	0x0361AB60 MOVZ W1, 0x3
	0x0361AB64 MOV X0, X20
	0x0361AB68 MOV W2, W21
	0x0361AB6C BL 0x3620B04
	0x0361AB70 CBZ X22, 0x361B0C0
	0x0361AB74 LDR W8, [X22 + 0x18]
	0x0361AB78 CBZ W8, 0x361B0C4
	0x0361AB7C CMP W8, 0x1
	0x0361AB80 STR X0, [X22 + 0x20]
	0x0361AB84 B.EQ 0x361B0C4
	0x0361AB88 ADRP X8, 0xAD9000
	0x0361AB8C LDR X8, [X8 + 0xEC8]
	0x0361AB90 MOV X0, X20
	0x0361AB94 LDR X8, [X8]
	0x0361AB98 STR X8, [X22 + 0x28]
	0x0361AB9C BL 0x361CFA8
	0x0361ABA0 LDR W8, [X22 + 0x18]
	0x0361ABA4 CMP W8, 0x2
	0x0361ABA8 B.LS 0x361B0C4
	0x0361ABAC CMP W8, 0x3
	0x0361ABB0 STR X0, [X22 + 0x30]
	0x0361ABB4 B.EQ 0x361B0C4
	0x0361ABB8 ADRP X8, 0xAD9000

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+40], X23
	004 Move [X31+48], X22
	005 Move [X31+56], X21
	006 Move [X31+64], X20
	007 Move [X31+72], X19
	008 Move X23, 0xDC7000
	009 Move W8, [X23+1140]
	010 Move X21, X2
	011 Move X20, X1
	012 Move X19, X0
	013 And W22, W3, 1
	014 Move [X31+24], X2
	015 Move [X31+20], W22
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0xADC000
	021 Move X0, [X0+2600]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X23+1140], W8
	025 Move W3, 300
	026 Move X0, X19
	027 Move X1, X21
	028 Move W2, W22
	029 Move [X31+8], X31
	030 Call Uri.CreateThis, X0, X1, X2, X3
	031 Compare X20, 0
	032 JumpIfEqual {105}
	033 Move X0, [X20+32]
	034 Compare X0, 0
	035 JumpIfEqual {105}
	036 Move X1, X31
	037 Call UriParser.get_IsSimple, X0
	038 Move TEMP, X0
	039 And TEMP, TEMP, 1
	040 Compare TEMP, 1
	041 JumpIfNotEqual {69}
	042 Move X22, 0xADC000
	043 Move X22, [X22+2600]
	044 Move X0, [X22]
	045 Move W8, [X0+224]
	046 Compare W8, 0
	047 JumpIfNotEqual {49}
	048 Call 0x1C17DFC
	049 Add X2, X31, 24
	050 Add X3, X31, 20
	051 Add X4, X31, 8
	052 Move X0, X20
	053 Move X1, X19
	054 Call Uri.ResolveHelper, X0, X1, X2, X3, X4
	055 Move X21, [X31+8]
	056 Compare X21, 0
	057 JumpIfNotEqual {106}
	058 Move X20, X0
	059 Move X0, [X22]
	060 Move W8, [X0+224]
	061 Compare W8, 0
	062 JumpIfEqual {84}
	063 Compare X20, 0
	064 JumpIfEqual {87}
	065 NotImplemented "Instruction CMP not yet implemented."
	066 Move X0, X19
	067 Move X1, X20
	068 Call Uri.CreateThisFromUri, X0, X1
	069 Move [X31+20], W31
	070 Move X0, [X20+32]
	071 Compare X0, 0
	072 JumpIfEqual {105}
	073 Add X3, X31, 8
	074 Move X1, X20
	075 Move X2, X19
	076 Move X4, X31
	077 Call UriParser.InternalResolve, X0, X1, X2, X3
	078 Move X20, [X31+8]
	079 Move [X31+24], X0
	080 Compare X20, 0
	081 JumpIfNotEqual {112}
	082 Move X1, X0
	083 Move W2, W31
	084 Call 0x1C17DFC
	085 Compare X20, 0
	086 JumpIfNotEqual {65}
	087 Move W8, [X31+20]
	088 Move X1, [X31+24]
	089 NotImplemented "Instruction CMP not yet implemented."
	090 NotImplemented "Instruction CSET not yet implemented."
	091 Move W3, 1
	092 Move X0, X19
	093 Move [X19+32], X31
	094 Move [X19+48], X31
	095 Move [X19+56], X31
	096 Call Uri.CreateThis, X0, X1, X2, X3
	097 Move X20, [X31+64]
	098 Move X19, [X31+72]
	099 Move X22, [X31+48]
	100 Move X21, [X31+56]
	101 Move X30, [X31+32]
	102 Move X23, [X31+40]
	103 Add X31, X31, 80
	104 Return 
	105 Call 0x1C17F20
	106 Move X0, 0xB22000
	107 Move X0, [X0+160]
	108 Call 0x1C17D08
	109 Move X1, X0
	110 Move X0, X21
	111 Call 0x1C17DEC
	112 Move X0, 0xB22000
	113 Move X0, [X0+160]
	114 Call 0x1C17D08
	115 Move X1, X0
	116 Move X0, X20
	117 Call 0x1C17DEC

Method: System.Void .ctor(System.Uri baseUri, System.Uri relativeUri)

Disassembly:
	0x0361B1F8 ADRP X8, 0xB20000
	0x0361B1FC LDR X8, [X8 + 0x100]
	0x0361B200 B 0x361B224
	0x0361B204 ADRP X8, 0xB20000
	0x0361B208 LDR X8, [X8 + 0xF0]
	0x0361B20C B 0x361B224
	0x0361B210 ADRP X8, 0xB20000
	0x0361B214 LDR X8, [X8 + 0xE8]
	0x0361B218 B 0x361B224
	0x0361B21C ADRP X8, 0xB20000
	0x0361B220 LDR X8, [X8 + 0x108]
	0x0361B224 LDR X0, [X8]
	0x0361B228 MOV X1, X31
	0x0361B22C BL 0x320A1E4
	0x0361B230 ADRP X8, 0xB20000
	0x0361B234 LDR X8, [X8 + 0xD8]
	0x0361B238 MOV X19, X0
	0x0361B23C LDR X8, [X8]
	0x0361B240 MOV X0, X8
	0x0361B244 BL 0x1C16F10
	0x0361B248 MOV X1, X19
	0x0361B24C MOV X2, X31
	0x0361B250 MOV X20, X0
	0x0361B254 BL 0x3628F6C
	0x0361B258 MOV X0, X20
	0x0361B25C LDP X20, X19, [X31 + 0x10]
	0x0361B260 LDR X30, [X31], #0x20
	0x0361B264 RET
	0x0361B268 STP X30, X21, [X31 - 0x20]!
	0x0361B26C STP X20, X19, [X31 + 0x10]
	0x0361B270 ADRP X21, 0xDC5000
	0x0361B274 LDRB W8, [X21 + 0x478]
	0x0361B278 MOV X20, X1
	0x0361B27C MOV X19, X0
	0x0361B280 TBNZ X8, 0x0, 0x361B2A4
	0x0361B284 ADRP X0, 0xB20000
	0x0361B288 LDR X0, [X0 + 0x138]
	0x0361B28C BL 0x1C16CF4
	0x0361B290 ADRP X0, 0xB20000
	0x0361B294 LDR X0, [X0 + 0x140]
	0x0361B298 BL 0x1C16CF4
	0x0361B29C MOVZ W8, 0x1
	0x0361B2A0 STRB W8, [X21 + 0x478]
	0x0361B2A4 MOV X0, X19
	0x0361B2A8 MOV X1, X31
	0x0361B2AC BL 0x33BDD8C
	0x0361B2B0 CBZ X20, 0x361B31C
	0x0361B2B4 ADRP X8, 0xB20000
	0x0361B2B8 LDR X8, [X8 + 0x140]
	0x0361B2BC MOV X0, X20
	0x0361B2C0 MOV X2, X31
	0x0361B2C4 LDR X1, [X8]
	0x0361B2C8 BL 0x32A9F64
	0x0361B2CC CBZ X0, 0x361B31C
	0x0361B2D0 LDR W8, [X0 + 0x10]
	0x0361B2D4 MOV X1, X0
	0x0361B2D8 CBZ W8, 0x361B2E4
	0x0361B2DC MOVZ W3, 0x1
	0x0361B2E0 B 0x361B308
	0x0361B2E4 ADRP X8, 0xB20000
	0x0361B2E8 LDR X8, [X8 + 0x138]
	0x0361B2EC MOV X0, X20
	0x0361B2F0 MOV X2, X31
	0x0361B2F4 LDR X1, [X8]
	0x0361B2F8 BL 0x32A9F64
	0x0361B2FC CBZ X0, 0x361B320
	0x0361B300 MOV X1, X0
	0x0361B304 MOVZ W3, 0x2
	0x0361B308 MOV X0, X19
	0x0361B30C LDP X20, X19, [X31 + 0x10]
	0x0361B310 MOV W2, W31
	0x0361B314 LDP X30, X21, [X31], #0x20
	0x0361B318 B 0x3619728
	0x0361B31C BL 0x1C16F20
	0x0361B320 ADRP X0, 0xADD000
	0x0361B324 LDR X0, [X0 + 0x528]
	0x0361B328 BL 0x1C16D08
	0x0361B32C BL 0x1C16F10
	0x0361B330 MOV X19, X0
	0x0361B334 ADRP X0, 0xB20000
	0x0361B338 LDR X0, [X0 + 0x60]
	0x0361B33C BL 0x1C16D08
	0x0361B340 MOV X1, X0
	0x0361B344 MOV X0, X19
	0x0361B348 MOV X2, X31
	0x0361B34C BL 0x330E100
	0x0361B350 ADRP X0, 0xB20000
	0x0361B354 LDR X0, [X0 + 0x148]
	0x0361B358 BL 0x1C16D08
	0x0361B35C MOV X1, X0
	0x0361B360 MOV X0, X19
	0x0361B364 BL 0x1C16DEC
	0x0361B368 B 0x361B36C
	0x0361B36C STP X30, X21, [X31 - 0x20]!
	0x0361B370 STP X20, X19, [X31 + 0x10]
	0x0361B374 ADRP X21, 0xDC5000
	0x0361B378 LDRB W8, [X21 + 0x479]
	0x0361B37C MOV X19, X1
	0x0361B380 MOV X20, X0
	0x0361B384 TBNZ X8, 0x0, 0x361B3B4
	0x0361B388 ADRP X0, 0xADA000
	0x0361B38C LDR X0, [X0 + 0x278]
	0x0361B390 BL 0x1C16CF4
	0x0361B394 ADRP X0, 0xB20000
	0x0361B398 LDR X0, [X0 + 0x138]
	0x0361B39C BL 0x1C16CF4
	0x0361B3A0 ADRP X0, 0xB20000
	0x0361B3A4 LDR X0, [X0 + 0x140]
	0x0361B3A8 BL 0x1C16CF4
	0x0361B3AC MOVZ W8, 0x1
	0x0361B3B0 STRB W8, [X21 + 0x479]
	0x0361B3B4 LDR X8, [X20 + 0x20]
	0x0361B3B8 CBZ X8, 0x361B3DC
	0x0361B3BC MOVZ W1, 0x80000000
	0x0361B3C0 MOVZ W2, 0x1
	0x0361B3C4 MOV X0, X20
	0x0361B3C8 BL 0x3620B04
	0x0361B3CC CBZ X19, 0x361B440
	0x0361B3D0 ADRP X8, 0xB20000
	0x0361B3D4 LDR X8, [X8 + 0x140]
	0x0361B3D8 B 0x361B424
	0x0361B3DC CBZ X19, 0x361B440
	0x0361B3E0 ADRP X8, 0xADA000
	0x0361B3E4 LDR X8, [X8 + 0x278]
	0x0361B3E8 ADRP X9, 0xB20000
	0x0361B3EC MOV X0, X19
	0x0361B3F0 MOV X3, X31
	0x0361B3F4 LDR X8, [X8]
	0x0361B3F8 LDR X8, [X8 + 0xB8]
	0x0361B3FC LDR X9, [X9 + 0x140]
	0x0361B400 LDR X2, [X8]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+32], X22
	004 Move [X31+40], X21
	005 Move [X31+48], X20
	006 Move [X31+56], X19
	007 Move X22, 0xDC6000
	008 Move W8, [X22+1141]
	009 Move X21, X2
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xADB000
	017 Move X0, [X0+2600]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+1141], W8
	021 Move X0, X19
	022 Move X1, X31
	023 Move [X31+8], X31
	024 Call Object..ctor, X0
	025 Compare X20, 0
	026 JumpIfEqual {109}
	027 Move X8, [X20+32]
	028 Compare X8, 0
	029 JumpIfEqual {121}
	030 Move X0, X19
	031 Move X1, X21
	032 Call Uri.CreateThisFromUri, X0, X1
	033 Move [X31+24], X31
	034 Move X0, [X20+32]
	035 Compare X0, 0
	036 JumpIfEqual {108}
	037 Move X1, X31
	038 Call UriParser.get_IsSimple, X0
	039 Move TEMP, X0
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfNotEqual {75}
	043 Move X22, 0xADB000
	044 Move W8, [X19+48]
	045 Move X22, [X22+2600]
	046 Move W8, W8
	047 ShiftRight W8, 19
	048 And W8, W8, 0x7FFFF
	049 Move X0, [X22]
	050 Move [X31+4], W8
	051 Move W8, [X0+224]
	052 Compare W8, 0
	053 JumpIfNotEqual {55}
	054 Call 0x1C17DFC
	055 Add X2, X31, 24
	056 Add X3, X31, 4
	057 Add X4, X31, 8
	058 Move X0, X20
	059 Move X1, X19
	060 Call Uri.ResolveHelper, X0, X1, X2, X3, X4
	061 Move X21, [X31+8]
	062 Compare X21, 0
	063 JumpIfNotEqual {139}
	064 Move X20, X0
	065 Move X0, [X22]
	066 Move W8, [X0+224]
	067 Compare W8, 0
	068 JumpIfEqual {88}
	069 Compare X20, 0
	070 JumpIfEqual {91}
	071 NotImplemented "Instruction CMP not yet implemented."
	072 Move X0, X19
	073 Move X1, X20
	074 Call Uri.CreateThisFromUri, X0, X1
	075 Move X0, [X20+32]
	076 Compare X0, 0
	077 JumpIfEqual {108}
	078 Add X3, X31, 8
	079 Move X1, X20
	080 Move X2, X19
	081 Move X4, X31
	082 Call UriParser.InternalResolve, X0, X1, X2, X3
	083 Move X20, [X31+8]
	084 Compare X20, 0
	085 JumpIfNotEqual {145}
	086 Move X1, X0
	087 Move W2, W31
	088 Call 0x1C17DFC
	089 Compare X20, 0
	090 JumpIfNotEqual {71}
	091 Move W8, [X31+4]
	092 Move X1, [X31+24]
	093 NotImplemented "Instruction CMP not yet implemented."
	094 NotImplemented "Instruction CSET not yet implemented."
	095 Move W3, 1
	096 Move X0, X19
	097 Move [X19+32], X31
	098 Move [X19+48], X31
	099 Move [X19+56], X31
	100 Call Uri.CreateThis, X0, X1, X2, X3
	101 Move X20, [X31+48]
	102 Move X19, [X31+56]
	103 Move X22, [X31+32]
	104 Move X21, [X31+40]
	105 Move X30, [X31+16]
	106 Add X31, X31, 64
	107 Return 
	108 Call 0x1C17F20
	109 Move X0, 0xADE000
	110 Move X0, [X0+1320]
	111 Call 0x1C17D08
	112 Call 0x1C17F10
	113 Move X19, X0
	114 Move X0, 0xB21000
	115 Move X0, [X0+144]
	116 Call 0x1C17D08
	117 Move X1, X0
	118 Move X0, X19
	119 Move X2, X31
	120 Call ArgumentNullException..ctor, X0, X1
	121 Move X0, 0xAE1000
	122 Move X0, [X0+1888]
	123 Call 0x1C17D08
	124 Call 0x1C17F10
	125 Move X19, X0
	126 Move X0, 0xB21000
	127 Move X0, [X0+144]
	128 Call 0x1C17D08
	129 Move X1, X0
	130 Move X0, X19
	131 Move X2, X31
	132 Call ArgumentOutOfRangeException..ctor, X0, X1
	133 Move X0, 0xB21000
	134 Move X0, [X0+184]
	135 Call 0x1C17D08
	136 Move X1, X0
	137 Move X0, X19
	138 Call 0x1C17DEC
	139 Move X0, 0xB21000
	140 Move X0, [X0+184]
	141 Call 0x1C17D08
	142 Move X1, X0
	143 Move X0, X21
	144 Call 0x1C17DEC
	145 Move X0, 0xB21000
	146 Move X0, [X0+184]
	147 Call 0x1C17D08
	148 Move X1, X0
	149 Move X0, X20
	150 Call 0x1C17DEC

Method: System.ParsingError GetCombinedString(System.Uri baseUri, System.String relativeStr, System.Boolean dontEscape, ref System.String result)

Disassembly:
	0x0361B404 LDR X1, [X9]
	0x0361B408 BL 0x32A8BF0
	0x0361B40C MOVZ W1, 0x80000000
	0x0361B410 MOVZ W2, 0x1
	0x0361B414 MOV X0, X20
	0x0361B418 BL 0x3620B04
	0x0361B41C ADRP X8, 0xB20000
	0x0361B420 LDR X8, [X8 + 0x138]
	0x0361B424 MOV X2, X0
	0x0361B428 LDR X1, [X8]
	0x0361B42C MOV X0, X19
	0x0361B430 LDP X20, X19, [X31 + 0x10]
	0x0361B434 MOV X3, X31
	0x0361B438 LDP X30, X21, [X31], #0x20
	0x0361B43C B 0x32A8BF0
	0x0361B440 BL 0x1C16F20
	0x0361B444 B 0x3620B04
	0x0361B448 STR X30, [X31 - 0x20]!
	0x0361B44C STP X20, X19, [X31 + 0x10]
	0x0361B450 LDR X8, [X0 + 0x20]
	0x0361B454 CBZ X8, 0x361B4B4
	0x0361B458 MOV X19, X0
	0x0361B45C BL 0x361B508
	0x0361B460 LDRB W8, [X19 + 0x33]
	0x0361B464 MOV X19, X0
	0x0361B468 TBZ X8, 0x3, 0x361B4A4
	0x0361B46C CBZ X19, 0x361B504
	0x0361B470 MOV X0, X19
	0x0361B474 MOV W1, W31
	0x0361B478 MOV X2, X31
	0x0361B47C BL 0x3222A1C
	0x0361B480 AND W8, W0, 0xFFFF
	0x0361B484 CMP W8, 0x2F
	0x0361B488 B.NE 0x361B4A4
	0x0361B48C MOV X0, X19
	0x0361B490 LDP X20, X19, [X31 + 0x10]
	0x0361B494 MOVZ W1, 0x1
	0x0361B498 MOV X2, X31
	0x0361B49C LDR X30, [X31], #0x20
	0x0361B4A0 B 0x322B484
	0x0361B4A4 MOV X0, X19
	0x0361B4A8 LDP X20, X19, [X31 + 0x10]
	0x0361B4AC LDR X30, [X31], #0x20
	0x0361B4B0 RET
	0x0361B4B4 ADRP X0, 0xB20000
	0x0361B4B8 LDR X0, [X0 + 0x150]
	0x0361B4BC BL 0x1C16D08
	0x0361B4C0 MOV X1, X31
	0x0361B4C4 BL 0x320A1E4
	0x0361B4C8 MOV X19, X0
	0x0361B4CC ADRP X0, 0xAD8000
	0x0361B4D0 LDR X0, [X0 + 0x5B0]
	0x0361B4D4 BL 0x1C16D08
	0x0361B4D8 BL 0x1C16F10
	0x0361B4DC MOV X1, X19
	0x0361B4E0 MOV X2, X31
	0x0361B4E4 MOV X20, X0
	0x0361B4E8 BL 0x337DF1C
	0x0361B4EC ADRP X0, 0xB20000
	0x0361B4F0 LDR X0, [X0 + 0x158]
	0x0361B4F4 BL 0x1C16D08
	0x0361B4F8 MOV X1, X0
	0x0361B4FC MOV X0, X20
	0x0361B500 BL 0x1C16DEC
	0x0361B504 BL 0x1C16F20
	0x0361B508 STP X30, X21, [X31 - 0x20]!
	0x0361B50C STP X20, X19, [X31 + 0x10]
	0x0361B510 ADRP X20, 0xDC5000
	0x0361B514 LDRB W8, [X20 + 0x47A]
	0x0361B518 MOV X19, X0
	0x0361B51C TBNZ X8, 0x0, 0x361B534
	0x0361B520 ADRP X0, 0xB20000
	0x0361B524 LDR X0, [X0 + 0x160]
	0x0361B528 BL 0x1C16CF4
	0x0361B52C MOVZ W8, 0x1
	0x0361B530 STRB W8, [X20 + 0x47A]
	0x0361B534 LDR X1, [X19 + 0x30]
	0x0361B538 TBNZ X1, 0x1E, 0x361B544
	0x0361B53C MOV X0, X19
	0x0361B540 BL 0x36180CC
	0x0361B544 LDR X21, [X19 + 0x38]
	0x0361B548 CBZ X21, 0x361B5AC
	0x0361B54C LDR X20, [X21 + 0x40]
	0x0361B550 CBNZ X20, 0x361B578
	0x0361B554 ADRP X8, 0xB20000
	0x0361B558 LDR X8, [X8 + 0x160]
	0x0361B55C LDR X0, [X8]
	0x0361B560 BL 0x1C16F10
	0x0361B564 MOV X1, X31
	0x0361B568 MOV X20, X0
	0x0361B56C BL 0x362A7C4
	0x0361B570 STR X20, [X21 + 0x40]
	0x0361B574 CBZ X20, 0x361B5AC
	0x0361B578 LDR X0, [X20 + 0x10]
	0x0361B57C CBNZ X0, 0x361B5A0
	0x0361B580 MOVZ W1, 0x10
	0x0361B584 MOVK W1, 0x40000000
	0x0361B588 MOVZ W2, 0x1
	0x0361B58C MOV X0, X19
	0x0361B590 BL 0x3620B04
	0x0361B594 LDR X8, [X21 + 0x40]
	0x0361B598 CBZ X8, 0x361B5AC
	0x0361B59C STR X0, [X8 + 0x10]
	0x0361B5A0 LDP X20, X19, [X31 + 0x10]
	0x0361B5A4 LDP X30, X21, [X31], #0x20
	0x0361B5A8 RET
	0x0361B5AC BL 0x1C16F20
	0x0361B5B0 STP X30, X21, [X31 - 0x20]!
	0x0361B5B4 STP X20, X19, [X31 + 0x10]
	0x0361B5B8 ADRP X20, 0xDC5000
	0x0361B5BC LDRB W8, [X20 + 0x47B]
	0x0361B5C0 MOV X19, X0
	0x0361B5C4 TBNZ X8, 0x0, 0x361B5DC
	0x0361B5C8 ADRP X0, 0xB20000
	0x0361B5CC LDR X0, [X0 + 0x160]
	0x0361B5D0 BL 0x1C16CF4
	0x0361B5D4 MOVZ W8, 0x1
	0x0361B5D8 STRB W8, [X20 + 0x47B]
	0x0361B5DC LDR X8, [X19 + 0x20]
	0x0361B5E0 CBZ X8, 0x361B65C
	0x0361B5E4 LDR X1, [X19 + 0x30]
	0x0361B5E8 TBNZ X1, 0x1E, 0x361B5F4
	0x0361B5EC MOV X0, X19
	0x0361B5F0 BL 0x36180CC
	0x0361B5F4 LDR X21, [X19 + 0x38]
	0x0361B5F8 CBZ X21, 0x361B658
	0x0361B5FC LDR X20, [X21 + 0x40]
	0x0361B600 CBNZ X20, 0x361B628
	0x0361B604 ADRP X8, 0xB20000
	0x0361B608 LDR X8, [X8 + 0x160]
	0x0361B60C LDR X0, [X8]
	0x0361B610 BL 0x1C16F10
	0x0361B614 MOV X1, X31
	0x0361B618 MOV X20, X0
	0x0361B61C BL 0x362A7C4
	0x0361B620 STR X20, [X21 + 0x40]
	0x0361B624 CBZ X20, 0x361B658
	0x0361B628 LDR X0, [X20 + 0x28]
	0x0361B62C CBNZ X0, 0x361B64C
	0x0361B630 MOVZ W1, 0x7F
	0x0361B634 MOVZ W2, 0x1
	0x0361B638 MOV X0, X19
	0x0361B63C BL 0x3620B04
	0x0361B640 LDR X8, [X21 + 0x40]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X23, 0xDC6000
	011 Move W8, [X23+1142]
	012 Move X19, X3
	013 Move W22, W2
	014 Move X21, X1
	015 Move X20, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {28}
	020 Move X0, 0xADB000
	021 Move X0, [X0+632]
	022 Call 0x1C17CF4
	023 Move X0, 0xADB000
	024 Move X0, [X0+2600]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X23+1142], W8
	028 Compare X21, 0
	029 JumpIfEqual {151}
	030 Move W8, [X21+16]
	031 Move X26, 0xADB000
	032 Move X26, [X26+2600]
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move W23, 1
	035 Subtract W24, W23, 1
	036 Move X0, X21
	037 Move W1, W24
	038 Move X2, X31
	039 Call String.get_Chars, X0, X1
	040 And W8, W0, 0xFFFF
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Move X0, X21
	043 Move W1, W24
	044 Move X2, X31
	045 Call String.get_Chars, X0, X1
	046 And W8, W0, 0xFFFF
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Move X0, X21
	049 Move W1, W24
	050 Move X2, X31
	051 Call String.get_Chars, X0, X1
	052 And W8, W0, 0xFFFF
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Move X0, X21
	055 Move W1, W24
	056 Move X2, X31
	057 Call String.get_Chars, X0, X1
	058 And W8, W0, 0xFFFF
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Move X0, X21
	061 Move W1, W24
	062 Move X2, X31
	063 Call String.get_Chars, X0, X1
	064 And W8, W0, 0xFFFF
	065 NotImplemented "Instruction CMP not yet implemented."
	066 Move W8, [X21+16]
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Add W23, W23, 1
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Move X0, X21
	071 Move W1, W31
	072 Move W2, W24
	073 Move X3, X31
	074 Call String.Substring, X0, X1, X2
	075 Compare X0, 0
	076 JumpIfEqual {151}
	077 Move X24, X0
	078 Move X0, X31
	079 Call RuntimeHelpers.get_OffsetToStringData
	080 Move X8, [X26]
	081 Move [X31+8], X31
	082 Move W25, [X24+16]
	083 Add X24, X24, W0
	084 Move W9, [X8+224]
	085 Compare W9, 0
	086 JumpIfNotEqual {89}
	087 Move X0, X8
	088 Call 0x1C17DFC
	089 Add X2, X31, 8
	090 Move X0, X24
	091 Move W1, W25
	092 Call Uri.CheckSchemeSyntax, X0, X1, X2
	093 Compare W0, 0
	094 JumpIfEqual {132}
	095 Move W8, [X21+16]
	096 Compare W8, 0
	097 JumpIfEqual {111}
	098 Move X0, [X26]
	099 And W31, W22, 1
	100 Move W9, 3
	101 NotImplemented "Instruction CSINC not yet implemented."
	102 Move W8, [X0+224]
	103 Compare W8, 0
	104 JumpIfNotEqual {106}
	105 Call 0x1C17DFC
	106 Move X0, X20
	107 Move X1, X21
	108 Move W2, W22
	109 Call Uri.CombineUri, X0, X1, X2
	110 Move X21, X0
	111 Compare X20, 0
	112 JumpIfEqual {151}
	113 Move X0, X20
	114 Call Uri.get_OriginalStringSwitched, X0
	115 And W31, W0, 1
	116 Move W8, 16
	117 Move W9, 24
	118 NotImplemented "Instruction CSEL not yet implemented."
	119 Move X21, [X20]
	120 Move [X19], X21
	121 Move X20, [X31+64]
	122 Move X19, [X31+72]
	123 Move X22, [X31+48]
	124 Move X21, [X31+56]
	125 Move X24, [X31+32]
	126 Move X23, [X31+40]
	127 Move X26, [X31+16]
	128 Move X25, [X31+24]
	129 Move W0, W31
	130 Move X30, [X31+80]
	131 Return X0
	132 Compare X20, 0
	133 JumpIfEqual {151}
	134 Move X8, [X20+32]
	135 Move X9, [X31+8]
	136 NotImplemented "Instruction CMP not yet implemented."
	137 Move W8, [X21+16]
	138 NotImplemented "Instruction CMP not yet implemented."
	139 Move X0, X21
	140 Move W1, W23
	141 Move X2, X31
	142 Call String.Substring, X0, X1
	143 Move X21, X0
	144 Move X8, 0xADB000
	145 Move X8, [X8+632]
	146 Move X8, [X8]
	147 Move X8, [X8+184]
	148 Move X21, [X8]
	149 Compare X21, 0
	150 JumpIfNotEqual {95}
	151 Call 0x1C17F20

Method: System.UriFormatException GetException(System.ParsingError err)

Disassembly:
	0x0361C0C8 RET
	0x0361C0CC ADRP X0, 0xB1F000
	0x0361C0D0 LDR X0, [X0 + 0x150]
	0x0361C0D4 BL 0x1C16D08
	0x0361C0D8 MOV X1, X31
	0x0361C0DC BL 0x320A1E4
	0x0361C0E0 MOV X19, X0
	0x0361C0E4 ADRP X0, 0xAD7000
	0x0361C0E8 LDR X0, [X0 + 0x5B0]
	0x0361C0EC BL 0x1C16D08
	0x0361C0F0 BL 0x1C16F10
	0x0361C0F4 MOV X1, X19
	0x0361C0F8 MOV X2, X31
	0x0361C0FC MOV X20, X0
	0x0361C100 BL 0x337DF1C
	0x0361C104 ADRP X0, 0xB1F000
	0x0361C108 LDR X0, [X0 + 0x1A0]
	0x0361C10C BL 0x1C16D08
	0x0361C110 MOV X1, X0
	0x0361C114 MOV X0, X20
	0x0361C118 BL 0x1C16DEC
	0x0361C11C BL 0x1C16F20
	0x0361C120 STP X30, X23, [X31 - 0x30]!
	0x0361C124 STP X22, X21, [X31 + 0x10]
	0x0361C128 STP X20, X19, [X31 + 0x20]
	0x0361C12C ADRP X20, 0xDC4000
	0x0361C130 LDRB W8, [X20 + 0x47D]
	0x0361C134 MOV X19, X0
	0x0361C138 TBNZ X8, 0x0, 0x361C174
	0x0361C13C ADRP X0, 0xB04000
	0x0361C140 LDR X0, [X0 + 0xBA0]
	0x0361C144 BL 0x1C16CF4
	0x0361C148 ADRP X0, 0xAD7000
	0x0361C14C LDR X0, [X0 + 0xAC8]
	0x0361C150 BL 0x1C16CF4
	0x0361C154 ADRP X0, 0xAFF000
	0x0361C158 LDR X0, [X0 + 0xB60]
	0x0361C15C BL 0x1C16CF4
	0x0361C160 ADRP X0, 0xAD7000
	0x0361C164 LDR X0, [X0 + 0x6C0]
	0x0361C168 BL 0x1C16CF4
	0x0361C16C MOVZ W8, 0x1
	0x0361C170 STRB W8, [X20 + 0x47D]
	0x0361C174 LDR X8, [X19 + 0x20]
	0x0361C178 CBZ X8, 0x361C2C4
	0x0361C17C MOV X0, X19
	0x0361C180 BL 0x361B508
	0x0361C184 CBZ X0, 0x361C2C0
	0x0361C188 ADRP X23, 0xAD7000
	0x0361C18C LDR W8, [X0 + 0x10]
	0x0361C190 LDR X23, [X23 + 0xAC8]
	0x0361C194 MOV X20, X0
	0x0361C198 CBZ W8, 0x361C2A8
	0x0361C19C ADRP X8, 0xB04000
	0x0361C1A0 LDR X8, [X8 + 0xBA0]
	0x0361C1A4 LDR X0, [X8]
	0x0361C1A8 BL 0x1C16F10
	0x0361C1AC MOV X1, X31
	0x0361C1B0 MOV X19, X0
	0x0361C1B4 BL 0x3351F5C
	0x0361C1B8 LDR W8, [X20 + 0x10]
	0x0361C1BC CMP W8, 0x1
	0x0361C1C0 B.LT 0x361C234
	0x0361C1C4 MOV W22, W31
	0x0361C1C8 MOVZ W1, 0x2F
	0x0361C1CC MOV X0, X20
	0x0361C1D0 MOV W2, W22
	0x0361C1D4 MOV X3, X31
	0x0361C1D8 BL 0x322BDA8
	0x0361C1DC MOV W21, W0
	0x0361C1E0 ADDS W31, W0, 0x1
	0x0361C1E4 B.NE 0x361C1F0
	0x0361C1E8 LDR W8, [X20 + 0x10]
	0x0361C1EC SUB W21, W8, 0x1
	0x0361C1F0 SUB W8, W21, W22
	0x0361C1F4 ADD W2, W8, 0x1
	0x0361C1F8 MOV X0, X20
	0x0361C1FC MOV W1, W22
	0x0361C200 MOV X3, X31
	0x0361C204 BL 0x3228DE4
	0x0361C208 CBZ X19, 0x361C2C0
	0x0361C20C LDR X8, [X19]
	0x0361C210 MOV X1, X0
	0x0361C214 MOV X0, X19
	0x0361C218 LDR X9, [X8 + 0x308]
	0x0361C21C LDR X2, [X8 + 0x310]
	0x0361C220 BLR X9
	0x0361C224 LDR W8, [X20 + 0x10]
	0x0361C228 ADD W22, W21, 0x1
	0x0361C22C CMP W22, W8
	0x0361C230 B.LT 0x361C1C8
	0x0361C234 ADRP X8, 0xAD7000
	0x0361C238 LDR X8, [X8 + 0x6C0]
	0x0361C23C LDR X0, [X8]
	0x0361C240 ADRP X8, 0xAFF000
	0x0361C244 LDR X8, [X8 + 0xB60]
	0x0361C248 LDR W9, [X0 + 0xE0]
	0x0361C24C LDR X20, [X8]
	0x0361C250 CBNZ W9, 0x361C258
	0x0361C254 BL 0x1C16DFC
	0x0361C258 MOV X0, X20
	0x0361C25C MOV X1, X31
	0x0361C260 BL 0x338C698
	0x0361C264 CBZ X19, 0x361C2C0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xDC5000
	005 Move W8, [X20+1143]
	006 Move W19, W0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {49}
	011 Move X0, 0xB20000
	012 Move X0, [X0+216]
	013 Call 0x1C17CF4
	014 Move X0, 0xB20000
	015 Move X0, [X0+224]
	016 Call 0x1C17CF4
	017 Move X0, 0xB20000
	018 Move X0, [X0+232]
	019 Call 0x1C17CF4
	020 Move X0, 0xB20000
	021 Move X0, [X0+240]
	022 Call 0x1C17CF4
	023 Move X0, 0xB20000
	024 Move X0, [X0+248]
	025 Call 0x1C17CF4
	026 Move X0, 0xB20000
	027 Move X0, [X0+256]
	028 Call 0x1C17CF4
	029 Move X0, 0xB20000
	030 Move X0, [X0+264]
	031 Call 0x1C17CF4
	032 Move X0, 0xB20000
	033 Move X0, [X0+272]
	034 Call 0x1C17CF4
	035 Move X0, 0xB20000
	036 Move X0, [X0+280]
	037 Call 0x1C17CF4
	038 Move X0, 0xB20000
	039 Move X0, [X0+288]
	040 Call 0x1C17CF4
	041 Move X0, 0xB20000
	042 Move X0, [X0+296]
	043 Call 0x1C17CF4
	044 Move X0, 0xB20000
	045 Move X0, [X0+304]
	046 Call 0x1C17CF4
	047 Move W8, 1
	048 Move [X20+1143], W8
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Move X9, -44580864
	051 Move W8, W19
	052 Add X9, X9, 826
	053 NotImplemented "Instruction ADR not yet implemented."
	054 Move W11, [X9]
	055 Add X10, X10, X11
	056 CallNoReturn X10
	057 Move X8, 0xB20000
	058 Move X8, [X8+280]
	059 Move X0, X31
	060 Move X8, 0xB20000
	061 Move X8, [X8+224]
	062 Move X8, 0xB20000
	063 Move X8, [X8+304]
	064 Move X8, 0xB20000
	065 Move X8, [X8+272]
	066 Move X8, 0xB20000
	067 Move X8, [X8+288]
	068 Move X8, 0xB20000
	069 Move X8, [X8+296]
	070 Move X8, 0xB20000
	071 Move X8, [X8+248]
	072 Move X8, 0xB20000
	073 Move X8, [X8+256]
	074 Move X8, 0xB20000
	075 Move X8, [X8+240]
	076 Move X8, 0xB20000
	077 Move X8, [X8+232]
	078 Move X8, 0xB20000
	079 Move X8, [X8+264]
	080 Move X0, [X8]
	081 Move X1, X31
	082 Call SR.GetString, X0
	083 Move X8, 0xB20000
	084 Move X8, [X8+216]
	085 Move X19, X0
	086 Move X8, [X8]
	087 Move X0, X8
	088 Call 0x1C17F10
	089 Move X1, X19
	090 Move X2, X31
	091 Move X20, X0
	092 Call UriFormatException..ctor, X0, X1
	093 Move X0, X20
	094 Move X20, [X31+16]
	095 Move X19, [X31+24]
	096 Move X30, [X31+32]
	097 Return X0

Method: System.Void .ctor(System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext streamingContext)

Disassembly:
	0x0361C268 LDR X8, [X19]
	0x0361C26C MOV X1, X0
	0x0361C270 MOV X0, X19
	0x0361C274 LDR X9, [X8 + 0x408]
	0x0361C278 LDR X2, [X8 + 0x410]
	0x0361C27C BLR X9
	0x0361C280 CBZ X0, 0x361C298
	0x0361C284 LDR X20, [X23]
	0x0361C288 MOV X19, X0
	0x0361C28C MOV X1, X20
	0x0361C290 BL 0x1C16E00
	0x0361C294 CBZ X0, 0x361C314
	0x0361C298 LDP X20, X19, [X31 + 0x20]
	0x0361C29C LDP X22, X21, [X31 + 0x10]
	0x0361C2A0 LDP X30, X23, [X31], #0x30
	0x0361C2A4 RET
	0x0361C2A8 LDR X0, [X23]
	0x0361C2AC LDP X20, X19, [X31 + 0x20]
	0x0361C2B0 LDP X22, X21, [X31 + 0x10]
	0x0361C2B4 MOV W1, W31
	0x0361C2B8 LDP X30, X23, [X31], #0x30
	0x0361C2BC B 0x1C16D6C
	0x0361C2C0 BL 0x1C16F20
	0x0361C2C4 ADRP X0, 0xB1F000
	0x0361C2C8 LDR X0, [X0 + 0x150]
	0x0361C2CC BL 0x1C16D08
	0x0361C2D0 MOV X1, X31
	0x0361C2D4 BL 0x320A1E4
	0x0361C2D8 MOV X19, X0
	0x0361C2DC ADRP X0, 0xAD7000
	0x0361C2E0 LDR X0, [X0 + 0x5B0]
	0x0361C2E4 BL 0x1C16D08
	0x0361C2E8 BL 0x1C16F10
	0x0361C2EC MOV X1, X19
	0x0361C2F0 MOV X2, X31
	0x0361C2F4 MOV X20, X0
	0x0361C2F8 BL 0x337DF1C
	0x0361C2FC ADRP X0, 0xB1F000
	0x0361C300 LDR X0, [X0 + 0x1A8]
	0x0361C304 BL 0x1C16D08
	0x0361C308 MOV X1, X0
	0x0361C30C MOV X0, X20
	0x0361C310 BL 0x1C16DEC
	0x0361C314 MOV X0, X19
	0x0361C318 MOV X1, X20
	0x0361C31C BL 0x1C171E0
	0x0361C320 STR X30, [X31 - 0x20]!
	0x0361C324 STP X20, X19, [X31 + 0x10]
	0x0361C328 LDR X8, [X0 + 0x20]
	0x0361C32C CBZ X8, 0x361C344
	0x0361C330 LDRB W8, [X0 + 0x33]
	0x0361C334 LDP X20, X19, [X31 + 0x10]
	0x0361C338 UBFM W0, W8, 0x4, 0x4
	0x0361C33C LDR X30, [X31], #0x20
	0x0361C340 RET
	0x0361C344 ADRP X0, 0xB1F000
	0x0361C348 LDR X0, [X0 + 0x150]
	0x0361C34C BL 0x1C16D08
	0x0361C350 MOV X1, X31
	0x0361C354 BL 0x320A1E4
	0x0361C358 MOV X19, X0
	0x0361C35C ADRP X0, 0xAD7000
	0x0361C360 LDR X0, [X0 + 0x5B0]
	0x0361C364 BL 0x1C16D08

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xDC5000
	006 Move W8, [X21+1144]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0xB20000
	014 Move X0, [X0+312]
	015 Call 0x1C17CF4
	016 Move X0, 0xB20000
	017 Move X0, [X0+320]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+1144], W8
	021 Move X0, X19
	022 Move X1, X31
	023 Call Object..ctor, X0
	024 Compare X20, 0
	025 JumpIfEqual {57}
	026 Move X8, 0xB20000
	027 Move X8, [X8+320]
	028 Move X0, X20
	029 Move X2, X31
	030 Move X1, [X8]
	031 Call SerializationInfo.GetString, X0, X1
	032 Compare X0, 0
	033 JumpIfEqual {57}
	034 Move W8, [X0+16]
	035 Move X1, X0
	036 Compare W8, 0
	037 JumpIfEqual {39}
	038 Move W3, 1
	039 Move X8, 0xB20000
	040 Move X8, [X8+312]
	041 Move X0, X20
	042 Move X2, X31
	043 Move X1, [X8]
	044 Call SerializationInfo.GetString, X0, X1
	045 Compare X0, 0
	046 JumpIfEqual {58}
	047 Move X1, X0
	048 Move W3, 2
	049 Move X0, X19
	050 Move X20, [X31+16]
	051 Move X19, [X31+24]
	052 Move W2, W31
	053 Move X30, [X31+32]
	054 Move X21, [X31+40]
	055 Call Uri.CreateThis, X0, X1, X2, X3
	056 Return 
	057 Call 0x1C17F20
	058 Move X0, 0xADD000
	059 Move X0, [X0+1320]
	060 Call 0x1C17D08
	061 Call 0x1C17F10
	062 Move X19, X0
	063 Move X0, 0xB20000
	064 Move X0, [X0+96]
	065 Call 0x1C17D08
	066 Move X1, X0
	067 Move X0, X19
	068 Move X2, X31
	069 Call ArgumentNullException..ctor, X0, X1
	070 Move X0, 0xB20000
	071 Move X0, [X0+328]
	072 Call 0x1C17D08
	073 Move X1, X0
	074 Move X0, X19
	075 Call 0x1C17DEC

Method: System.Void System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext streamingContext)

Disassembly:
	0x0361C368 BL 0x1C16F10

ISIL:
No ISIL was generated
Method: System.Void GetObjectData(System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext streamingContext)

Disassembly:
	0x0361C36C MOV X1, X19
	0x0361C370 MOV X2, X31
	0x0361C374 MOV X20, X0
	0x0361C378 BL 0x337DF1C
	0x0361C37C ADRP X0, 0xB1F000
	0x0361C380 LDR X0, [X0 + 0x1B0]
	0x0361C384 BL 0x1C16D08
	0x0361C388 MOV X1, X0
	0x0361C38C MOV X0, X20
	0x0361C390 BL 0x1C16DEC
	0x0361C394 STR X30, [X31 - 0x20]!
	0x0361C398 STP X20, X19, [X31 + 0x10]
	0x0361C39C LDR X8, [X0 + 0x20]
	0x0361C3A0 CBZ X8, 0x361C3B8
	0x0361C3A4 LDP X20, X19, [X31 + 0x10]
	0x0361C3A8 MOVZ W1, 0x4
	0x0361C3AC MOVZ W2, 0x1
	0x0361C3B0 LDR X30, [X31], #0x20
	0x0361C3B4 B 0x3620B04
	0x0361C3B8 ADRP X0, 0xB1F000
	0x0361C3BC LDR X0, [X0 + 0x150]
	0x0361C3C0 BL 0x1C16D08
	0x0361C3C4 MOV X1, X31
	0x0361C3C8 BL 0x320A1E4
	0x0361C3CC MOV X19, X0
	0x0361C3D0 ADRP X0, 0xAD7000
	0x0361C3D4 LDR X0, [X0 + 0x5B0]
	0x0361C3D8 BL 0x1C16D08
	0x0361C3DC BL 0x1C16F10
	0x0361C3E0 MOV X1, X19
	0x0361C3E4 MOV X2, X31
	0x0361C3E8 MOV X20, X0
	0x0361C3EC BL 0x337DF1C
	0x0361C3F0 ADRP X0, 0xB1F000
	0x0361C3F4 LDR X0, [X0 + 0x1B8]
	0x0361C3F8 BL 0x1C16D08
	0x0361C3FC MOV X1, X0
	0x0361C400 MOV X0, X20
	0x0361C404 BL 0x1C16DEC
	0x0361C408 CBZ X0, 0x361C418
	0x0361C40C MOVZ W1, 0x2000
	0x0361C410 MOV X2, X31
	0x0361C414 B 0x3629044
	0x0361C418 STR X30, [X31 - 0x10]!
	0x0361C41C BL 0x1C16F20
	0x0361C420 STR X30, [X31 - 0x20]!
	0x0361C424 STP X20, X19, [X31 + 0x10]
	0x0361C428 ADRP X19, 0xDC4000
	0x0361C42C ADRP X20, 0xAD9000
	0x0361C430 LDRB W8, [X19 + 0x47E]
	0x0361C434 LDR X20, [X20 + 0xA28]
	0x0361C438 TBNZ X8, 0x0, 0x361C45C
	0x0361C43C ADRP X0, 0xADD000
	0x0361C440 LDR X0, [X0 + 0xCC0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xDC5000
	006 Move W8, [X21+1145]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {24}
	013 Move X0, 0xADA000
	014 Move X0, [X0+632]
	015 Call 0x1C17CF4
	016 Move X0, 0xB20000
	017 Move X0, [X0+312]
	018 Call 0x1C17CF4
	019 Move X0, 0xB20000
	020 Move X0, [X0+320]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X21+1145], W8
	024 Move X8, [X20+32]
	025 Compare X8, 0
	026 JumpIfEqual {35}
	027 Move W1, 0x80000000
	028 Move W2, 1
	029 Move X0, X20
	030 Call Uri.GetComponents, X0, X1, X2
	031 Compare X19, 0
	032 JumpIfEqual {64}
	033 Move X8, 0xB20000
	034 Move X8, [X8+320]
	035 Compare X19, 0
	036 JumpIfEqual {64}
	037 Move X8, 0xADA000
	038 Move X8, [X8+632]
	039 Move X9, 0xB20000
	040 Move X0, X19
	041 Move X3, X31
	042 Move X8, [X8]
	043 Move X8, [X8+184]
	044 Move X9, [X9+320]
	045 Move X2, [X8]
	046 Move X1, [X9]
	047 Call SerializationInfo.AddValue, X0, X1, X2
	048 Move W1, 0x80000000
	049 Move W2, 1
	050 Move X0, X20
	051 Call Uri.GetComponents, X0, X1, X2
	052 Move X8, 0xB20000
	053 Move X8, [X8+312]
	054 Move X2, X0
	055 Move X1, [X8]
	056 Move X0, X19
	057 Move X20, [X31+16]
	058 Move X19, [X31+24]
	059 Move X3, X31
	060 Move X30, [X31+32]
	061 Move X21, [X31+40]
	062 Call SerializationInfo.AddValue, X0, X1, X2
	063 Return 
	064 Call 0x1C17F20

Method: System.String get_AbsolutePath()

Disassembly:
	0x0361C448 ADRP X0, 0xAD9000
	0x0361C44C LDR X0, [X0 + 0xA28]
	0x0361C450 BL 0x1C16CF4
	0x0361C454 MOVZ W8, 0x1
	0x0361C458 STRB W8, [X19 + 0x47E]
	0x0361C45C LDR X0, [X20]
	0x0361C460 LDR W8, [X0 + 0xE0]
	0x0361C464 CBNZ W8, 0x361C470
	0x0361C468 BL 0x1C16DFC
	0x0361C46C LDR X0, [X20]
	0x0361C470 LDR X8, [X0 + 0xB8]
	0x0361C474 LDR X8, [X8 + 0x78]
	0x0361C478 CBNZ X8, 0x361C4C8
	0x0361C47C ADRP X8, 0xADD000
	0x0361C480 LDR X8, [X8 + 0xCC0]
	0x0361C484 LDR X0, [X8]
	0x0361C488 BL 0x1C16F10
	0x0361C48C MOV X1, X31
	0x0361C490 MOV X19, X0
	0x0361C494 BL 0x33BDD8C
	0x0361C498 LDR X0, [X20]
	0x0361C49C LDR W8, [X0 + 0xE0]
	0x0361C4A0 CBNZ W8, 0x361C4AC
	0x0361C4A4 BL 0x1C16DFC
	0x0361C4A8 LDR X0, [X20]
	0x0361C4AC LDR X8, [X0 + 0xB8]
	0x0361C4B0 MOV X1, X19
	0x0361C4B4 MOV X2, X31
	0x0361C4B8 MOV X3, X31
	0x0361C4BC ADD X0, X8, 0x78
	0x0361C4C0 BL 0x33EB118
	0x0361C4C4 LDR X0, [X20]
	0x0361C4C8 LDR W8, [X0 + 0xE0]
	0x0361C4CC CBNZ W8, 0x361C4D8
	0x0361C4D0 BL 0x1C16DFC
	0x0361C4D4 LDR X0, [X20]
	0x0361C4D8 LDR X8, [X0 + 0xB8]
	0x0361C4DC LDP X20, X19, [X31 + 0x10]
	0x0361C4E0 LDR X0, [X8 + 0x78]
	0x0361C4E4 LDR X30, [X31], #0x20
	0x0361C4E8 RET
	0x0361C4EC SUB X31, X31, 0x30
	0x0361C4F0 STP X30, X21, [X31 + 0x10]
	0x0361C4F4 STP X20, X19, [X31 + 0x20]
	0x0361C4F8 ADRP X19, 0xDC4000
	0x0361C4FC ADRP X21, 0xAD9000
	0x0361C500 LDRB W8, [X19 + 0x47F]
	0x0361C504 LDR X21, [X21 + 0xA28]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X0+32]
	005 Compare X8, 0
	006 JumpIfEqual {36}
	007 Move X19, X0
	008 Call Uri.get_PrivateAbsolutePath, X0
	009 Move W8, [X19+51]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 8
	013 Compare TEMP, 8
	014 JumpIfNotEqual {31}
	015 Compare X19, 0
	016 JumpIfEqual {56}
	017 Move X0, X19
	018 Move W1, W31
	019 Move X2, X31
	020 Call String.get_Chars, X0, X1
	021 And W8, W0, 0xFFFF
	022 NotImplemented "Instruction CMP not yet implemented."
	023 Move X0, X19
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move W1, 1
	027 Move X2, X31
	028 Move X30, [X31+32]
	029 Call String.Substring, X0, X1
	030 Return X0
	031 Move X0, X19
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X30, [X31+32]
	035 Return X0
	036 Move X0, 0xB20000
	037 Move X0, [X0+336]
	038 Call 0x1C17D08
	039 Move X1, X31
	040 Call SR.GetString, X0
	041 Move X19, X0
	042 Move X0, 0xAD8000
	043 Move X0, [X0+1456]
	044 Call 0x1C17D08
	045 Call 0x1C17F10
	046 Move X1, X19
	047 Move X2, X31
	048 Move X20, X0
	049 Call InvalidOperationException..ctor, X0, X1
	050 Move X0, 0xB20000
	051 Move X0, [X0+344]
	052 Call 0x1C17D08
	053 Move X1, X0
	054 Move X0, X20
	055 Call 0x1C17DEC
	056 Call 0x1C17F20

Method: System.String get_PrivateAbsolutePath()

Disassembly:
	0x0361C508 TBNZ X8, 0x0, 0x361C520
	0x0361C50C ADRP X0, 0xAD9000
	0x0361C510 LDR X0, [X0 + 0xA28]
	0x0361C514 BL 0x1C16CF4
	0x0361C518 MOVZ W8, 0x1
	0x0361C51C STRB W8, [X19 + 0x47F]
	0x0361C520 LDR X0, [X21]
	0x0361C524 LDR W8, [X0 + 0xE0]
	0x0361C528 CBNZ W8, 0x361C534
	0x0361C52C BL 0x1C16DFC
	0x0361C530 LDR X0, [X21]
	0x0361C534 LDR X8, [X0 + 0xB8]
	0x0361C538 LDRB W19, [X8 + 0x68]
	0x0361C53C BL 0x1C16D44
	0x0361C540 CBNZ W19, 0x361C5D0
	0x0361C544 LDR X0, [X21]
	0x0361C548 LDR W8, [X0 + 0xE0]
	0x0361C54C CBNZ W8, 0x361C554
	0x0361C550 BL 0x1C16DFC
	0x0361C554 BL 0x361C420
	0x0361C558 MOV X19, X0
	0x0361C55C STRB W31, [X31 + 0xC]
	0x0361C560 ADD X1, X31, 0xC
	0x0361C564 MOV X2, X31
	0x0361C568 BL 0x33DE64C
	0x0361C56C LDR X0, [X21]
	0x0361C570 LDR W8, [X0 + 0xE0]
	0x0361C574 CBNZ W8, 0x361C580
	0x0361C578 BL 0x1C16DFC
	0x0361C57C LDR X0, [X21]
	0x0361C580 LDR X8, [X0 + 0xB8]
	0x0361C584 LDRB W20, [X8 + 0x68]
	0x0361C588 BL 0x1C16D44
	0x0361C58C CBNZ W20, 0x361C5B4
	0x0361C590 LDR X0, [X21]
	0x0361C594 LDR W8, [X0 + 0xE0]
	0x0361C598 CBNZ W8, 0x361C5A4
	0x0361C59C BL 0x1C16DFC
	0x0361C5A0 LDR X0, [X21]
	0x0361C5A4 LDR X8, [X0 + 0xB8]
	0x0361C5A8 LDRB W20, [X8 + 0x69]
	0x0361C5AC BL 0x1C16D44

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xDC5000
	006 Move W8, [X20+1146]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xB20000
	013 Move X0, [X0+352]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+1146], W8
	017 Move X1, [X19+48]
	018 Move TEMP, X1
	019 And TEMP, TEMP, 0x40000000
	020 Compare TEMP, 0x40000000
	021 JumpIfEqual {24}
	022 Move X0, X19
	023 Call Uri.CreateUriInfo, X0, X1
	024 Move X21, [X19+56]
	025 Compare X21, 0
	026 JumpIfEqual {57}
	027 Move X20, [X21+64]
	028 Compare X20, 0
	029 JumpIfNotEqual {40}
	030 Move X8, 0xB20000
	031 Move X8, [X8+352]
	032 Move X0, [X8]
	033 Call 0x1C17F10
	034 Move X1, X31
	035 Move X20, X0
	036 Call MoreInfo..ctor, X0
	037 Move [X21+64], X20
	038 Compare X20, 0
	039 JumpIfEqual {57}
	040 Move X0, [X20+16]
	041 Compare X0, 0
	042 JumpIfNotEqual {52}
	043 Move W1, 16
	044 NotImplemented "Instruction MOVK not yet implemented."
	045 Move W2, 1
	046 Move X0, X19
	047 Call Uri.GetComponents, X0, X1, X2
	048 Move X8, [X21+64]
	049 Compare X8, 0
	050 JumpIfEqual {57}
	051 Move [X8+16], X0
	052 Move X20, [X31+16]
	053 Move X19, [X31+24]
	054 Move X30, [X31+32]
	055 Move X21, [X31+40]
	056 Return X0
	057 Call 0x1C17F20

Method: System.String get_AbsoluteUri()

Disassembly:
	0x0361C5B0 CBZ W20, 0x361C5E0
	0x0361C5B4 MOV X20, X31
	0x0361C5B8 LDRB W8, [X31 + 0xC]
	0x0361C5BC CBZ W8, 0x361C5CC
	0x0361C5C0 MOV X0, X19
	0x0361C5C4 MOV X1, X31
	0x0361C5C8 BL 0x33E14E4
	0x0361C5CC CBNZ X20, 0x361C61C
	0x0361C5D0 LDP X20, X19, [X31 + 0x20]
	0x0361C5D4 LDP X30, X21, [X31 + 0x10]
	0x0361C5D8 ADD X31, X31, 0x30
	0x0361C5DC RET
	0x0361C5E0 LDR X0, [X21]
	0x0361C5E4 LDR W8, [X0 + 0xE0]
	0x0361C5E8 CBNZ W8, 0x361C5F0
	0x0361C5EC BL 0x1C16DFC
	0x0361C5F0 BL 0x1C16D44
	0x0361C5F4 LDR X8, [X21]
	0x0361C5F8 MOVZ W9, 0x1
	0x0361C5FC LDR X8, [X8 + 0xB8]
	0x0361C600 STRB W9, [X8 + 0x68]
	0x0361C604 BL 0x1C16D44
	0x0361C608 LDR X8, [X21]
	0x0361C60C MOV X20, X31
	0x0361C610 LDR X8, [X8 + 0xB8]
	0x0361C614 STRB W31, [X8 + 0x69]
	0x0361C618 B 0x361C5B8
	0x0361C61C MOV X0, X20
	0x0361C620 BL 0x1C16F18
	0x0361C624 B 0x361C630
	0x0361C628 B 0x361C630
	0x0361C62C B 0x361C630
	0x0361C630 MOV X21, X0
	0x0361C634 CMP W1, 0x1
	0x0361C638 B.NE 0x361C650
	0x0361C63C MOV X0, X21
	0x0361C640 BL 0x3EB1AD0
	0x0361C644 LDR X20, [X0]
	0x0361C648 BL 0x3EB1AE0
	0x0361C64C B 0x361C5B8
	0x0361C650 MOV X20, X31
	0x0361C654 B 0x361C65C
	0x0361C658 MOV X21, X0
	0x0361C65C LDRB W8, [X31 + 0xC]
	0x0361C660 CBZ W8, 0x361C670
	0x0361C664 MOV X0, X19
	0x0361C668 MOV X1, X31
	0x0361C66C BL 0x33E14E4
	0x0361C670 CBNZ X20, 0x361C67C
	0x0361C674 MOV X0, X21
	0x0361C678 BL 0x1D2C690
	0x0361C67C MOV X0, X20
	0x0361C680 BL 0x1C16F18
	0x0361C684 BL 0x1990590
	0x0361C688 SUB X31, X31, 0x70
	0x0361C68C STP X29, X30, [X31 + 0x10]
	0x0361C690 STP X28, X27, [X31 + 0x20]
	0x0361C694 STP X26, X25, [X31 + 0x30]
	0x0361C698 STP X24, X23, [X31 + 0x40]
	0x0361C69C STP X22, X21, [X31 + 0x50]
	0x0361C6A0 STP X20, X19, [X31 + 0x60]
	0x0361C6A4 ADRP X19, 0xDC4000
	0x0361C6A8 LDRB W8, [X19 + 0x49D]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xDC5000
	006 Move W8, [X20+1147]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xB20000
	013 Move X0, [X0+352]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+1147], W8
	017 Move X8, [X19+32]
	018 Compare X8, 0
	019 JumpIfEqual {60}
	020 Move X1, [X19+48]
	021 Move TEMP, X1
	022 And TEMP, TEMP, 0x40000000
	023 Compare TEMP, 0x40000000
	024 JumpIfEqual {27}
	025 Move X0, X19
	026 Call Uri.CreateUriInfo, X0, X1
	027 Move X21, [X19+56]
	028 Compare X21, 0
	029 JumpIfEqual {59}
	030 Move X20, [X21+64]
	031 Compare X20, 0
	032 JumpIfNotEqual {43}
	033 Move X8, 0xB20000
	034 Move X8, [X8+352]
	035 Move X0, [X8]
	036 Call 0x1C17F10
	037 Move X1, X31
	038 Move X20, X0
	039 Call MoreInfo..ctor, X0
	040 Move [X21+64], X20
	041 Compare X20, 0
	042 JumpIfEqual {59}
	043 Move X0, [X20+40]
	044 Compare X0, 0
	045 JumpIfNotEqual {54}
	046 Move W1, 127
	047 Move W2, 1
	048 Move X0, X19
	049 Call Uri.GetComponents, X0, X1, X2
	050 Move X8, [X21+64]
	051 Compare X8, 0
	052 JumpIfEqual {59}
	053 Move [X8+40], X0
	054 Move X20, [X31+16]
	055 Move X19, [X31+24]
	056 Move X30, [X31+32]
	057 Move X21, [X31+40]
	058 Return X0
	059 Call 0x1C17F20
	060 Move X0, 0xB20000
	061 Move X0, [X0+336]
	062 Call 0x1C17D08
	063 Move X1, X31
	064 Call SR.GetString, X0
	065 Move X19, X0
	066 Move X0, 0xAD8000
	067 Move X0, [X0+1456]
	068 Call 0x1C17D08
	069 Call 0x1C17F10
	070 Move X1, X19
	071 Move X2, X31
	072 Move X20, X0
	073 Call InvalidOperationException..ctor, X0, X1
	074 Move X0, 0xB20000
	075 Move X0, [X0+360]
	076 Call 0x1C17D08
	077 Move X1, X0
	078 Move X0, X20
	079 Call 0x1C17DEC

Method: System.String get_LocalPath()

Disassembly:
	0x0361C6AC MOV X21, X3
	0x0361C6B0 MOV X24, X2
	0x0361C6B4 MOV W22, W1
	0x0361C6B8 MOV X20, X0
	0x0361C6BC TBNZ X8, 0x0, 0x361C6D4
	0x0361C6C0 ADRP X0, 0xB1F000
	0x0361C6C4 LDR X0, [X0 + 0x48]
	0x0361C6C8 BL 0x1C16CF4
	0x0361C6CC MOVZ W8, 0x1
	0x0361C6D0 STRB W8, [X19 + 0x49D]
	0x0361C6D4 LDRH W23, [X24]
	0x0361C6D8 SUB W9, W22, 0x1
	0x0361C6DC SUB W29, W23, 0x1
	0x0361C6E0 AND W8, W29, 0xFFFF
	0x0361C6E4 CMP W8, W9, UXTH
	0x0361C6E8 AND W9, W9, 0xFFFF
	0x0361C6EC STR W9, [X31 + 0x8]
	0x0361C6F0 B.NE 0x361C708
	0x0361C6F4 MOV W9, W31
	0x0361C6F8 MOV W25, W31
	0x0361C6FC MOV W28, W31
	0x0361C700 MOV W26, W31
	0x0361C704 B 0x361CA40
	0x0361C708 CBZ X20, 0x361CB58
	0x0361C70C MOV W26, W31
	0x0361C710 MOV W28, W31
	0x0361C714 MOV W25, W31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X0+32]
	005 Compare X8, 0
	006 JumpIfEqual {10}
	007 Move X20, [X31+16]
	008 Move X19, [X31+24]
	009 Move X30, [X31+32]
	010 Move X0, 0xB20000
	011 Move X0, [X0+336]
	012 Call 0x1C17D08
	013 Move X1, X31
	014 Call SR.GetString, X0
	015 Move X19, X0
	016 Move X0, 0xAD8000
	017 Move X0, [X0+1456]
	018 Call 0x1C17D08
	019 Call 0x1C17F10
	020 Move X1, X19
	021 Move X2, X31
	022 Move X20, X0
	023 Call InvalidOperationException..ctor, X0, X1
	024 Move X0, 0xB20000
	025 Move X0, [X0+368]
	026 Call 0x1C17D08
	027 Move X1, X0
	028 Move X0, X20
	029 Call 0x1C17DEC

Method: System.String get_Authority()

Disassembly:
	0x0361CD04 TBNZ X8, 0x0, 0x361CD1C
	0x0361CD08 ADRP X0, 0xB1F000
	0x0361CD0C LDR X0, [X0 + 0x160]
	0x0361CD10 BL 0x1C16CF4
	0x0361CD14 MOVZ W8, 0x1
	0x0361CD18 STRB W8, [X20 + 0x481]
	0x0361CD1C LDR X8, [X19 + 0x20]
	0x0361CD20 CBZ X8, 0x361CDA0
	0x0361CD24 LDR X1, [X19 + 0x30]
	0x0361CD28 TBNZ X1, 0x1E, 0x361CD34
	0x0361CD2C MOV X0, X19
	0x0361CD30 BL 0x36180CC
	0x0361CD34 LDR X21, [X19 + 0x38]
	0x0361CD38 CBZ X21, 0x361CD9C
	0x0361CD3C LDR X20, [X21 + 0x40]
	0x0361CD40 CBNZ X20, 0x361CD68
	0x0361CD44 ADRP X8, 0xB1F000
	0x0361CD48 LDR X8, [X8 + 0x160]
	0x0361CD4C LDR X0, [X8]
	0x0361CD50 BL 0x1C16F10
	0x0361CD54 MOV X1, X31
	0x0361CD58 MOV X20, X0
	0x0361CD5C BL 0x362A7C4
	0x0361CD60 STR X20, [X21 + 0x40]
	0x0361CD64 CBZ X20, 0x361CD9C
	0x0361CD68 LDR X0, [X20 + 0x18]
	0x0361CD6C CBNZ X0, 0x361CD90
	0x0361CD70 MOVZ W1, 0x20
	0x0361CD74 MOVK W1, 0x40000000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X0+32]
	005 Compare X8, 0
	006 JumpIfEqual {14}
	007 Move X20, [X31+16]
	008 Move X19, [X31+24]
	009 Move W1, 12
	010 Move W2, 1
	011 Move X30, [X31+32]
	012 Call Uri.GetComponents, X0, X1, X2
	013 Return X0
	014 Move X0, 0xB20000
	015 Move X0, [X0+336]
	016 Call 0x1C17D08
	017 Move X1, X31
	018 Call SR.GetString, X0
	019 Move X19, X0
	020 Move X0, 0xAD8000
	021 Move X0, [X0+1456]
	022 Call 0x1C17D08
	023 Call 0x1C17F10
	024 Move X1, X19
	025 Move X2, X31
	026 Move X20, X0
	027 Call InvalidOperationException..ctor, X0, X1
	028 Move X0, 0xB20000
	029 Move X0, [X0+376]
	030 Call 0x1C17D08
	031 Move X1, X0
	032 Move X0, X20
	033 Call 0x1C17DEC

Method: System.UriHostNameType get_HostNameType()

Disassembly:
	0x0361CD78 MOVZ W2, 0x1
	0x0361CD7C MOV X0, X19
	0x0361CD80 BL 0x3620B04
	0x0361CD84 LDR X8, [X21 + 0x40]
	0x0361CD88 CBZ X8, 0x361CD9C
	0x0361CD8C STR X0, [X8 + 0x18]
	0x0361CD90 LDP X20, X19, [X31 + 0x10]
	0x0361CD94 LDP X30, X21, [X31], #0x20
	0x0361CD98 RET
	0x0361CD9C BL 0x1C16F20
	0x0361CDA0 ADRP X0, 0xB1F000
	0x0361CDA4 LDR X0, [X0 + 0x150]
	0x0361CDA8 BL 0x1C16D08
	0x0361CDAC MOV X1, X31
	0x0361CDB0 BL 0x320A1E4
	0x0361CDB4 MOV X19, X0
	0x0361CDB8 ADRP X0, 0xAD7000
	0x0361CDBC LDR X0, [X0 + 0x5B0]
	0x0361CDC0 BL 0x1C16D08
	0x0361CDC4 BL 0x1C16F10
	0x0361CDC8 MOV X1, X19
	0x0361CDCC MOV X2, X31
	0x0361CDD0 MOV X20, X0
	0x0361CDD4 BL 0x337DF1C
	0x0361CDD8 ADRP X0, 0xB1F000
	0x0361CDDC LDR X0, [X0 + 0x1C8]
	0x0361CDE0 BL 0x1C16D08
	0x0361CDE4 MOV X1, X0
	0x0361CDE8 MOV X0, X20
	0x0361CDEC BL 0x1C16DEC
	0x0361CDF0 STP X30, X21, [X31 - 0x20]!
	0x0361CDF4 STP X20, X19, [X31 + 0x10]
	0x0361CDF8 ADRP X20, 0xDC4000
	0x0361CDFC LDRB W8, [X20 + 0x482]
	0x0361CE00 MOV X19, X0
	0x0361CE04 TBNZ X8, 0x0, 0x361CE1C
	0x0361CE08 ADRP X0, 0xB1F000
	0x0361CE0C LDR X0, [X0 + 0x160]
	0x0361CE10 BL 0x1C16CF4
	0x0361CE14 MOVZ W8, 0x1
	0x0361CE18 STRB W8, [X20 + 0x482]
	0x0361CE1C LDR X8, [X19 + 0x20]
	0x0361CE20 CBZ X8, 0x361CEA0
	0x0361CE24 LDR X1, [X19 + 0x30]
	0x0361CE28 TBNZ X1, 0x1E, 0x361CE34
	0x0361CE2C MOV X0, X19
	0x0361CE30 BL 0x36180CC
	0x0361CE34 LDR X21, [X19 + 0x38]
	0x0361CE38 CBZ X21, 0x361CE9C
	0x0361CE3C LDR X20, [X21 + 0x40]
	0x0361CE40 CBNZ X20, 0x361CE68
	0x0361CE44 ADRP X8, 0xB1F000
	0x0361CE48 LDR X8, [X8 + 0x160]
	0x0361CE4C LDR X0, [X8]
	0x0361CE50 BL 0x1C16F10
	0x0361CE54 MOV X1, X31
	0x0361CE58 MOV X20, X0
	0x0361CE5C BL 0x362A7C4
	0x0361CE60 STR X20, [X21 + 0x40]
	0x0361CE64 CBZ X20, 0x361CE9C
	0x0361CE68 LDR X0, [X20 + 0x20]
	0x0361CE6C CBNZ X0, 0x361CE90

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X0
	005 Move X0, [X0+32]
	006 Compare X0, 0
	007 JumpIfEqual {42}
	008 Move X1, X31
	009 Call UriParser.get_IsSimple, X0
	010 Move TEMP, X0
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfNotEqual {21}
	014 Move X1, [X19+48]
	015 Move TEMP, X1
	016 And TEMP, TEMP, 0x40000000
	017 Compare TEMP, 0x40000000
	018 JumpIfEqual {24}
	019 Move X0, X19
	020 Call Uri.CreateUriInfo, X0, X1
	021 Move X0, X19
	022 Move W1, W31
	023 Call Uri.EnsureHostString, X0, X1
	024 Move X8, [X19+48]
	025 And X8, X8, 0x7FFFF
	026 NotImplemented "Instruction CMP not yet implemented."
	027 NotImplemented "Instruction CMP not yet implemented."
	028 NotImplemented "Instruction CMP not yet implemented."
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move W0, 2
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move W0, 1
	033 NotImplemented "Instruction CMP not yet implemented."
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Move W0, W31
	036 Move W0, 3
	037 Move W0, 4
	038 Move X20, [X31+16]
	039 Move X19, [X31+24]
	040 Move X30, [X31+32]
	041 Return X0
	042 Move X0, 0xB20000
	043 Move X0, [X0+336]
	044 Call 0x1C17D08
	045 Move X1, X31
	046 Call SR.GetString, X0
	047 Move X19, X0
	048 Move X0, 0xAD8000
	049 Move X0, [X0+1456]
	050 Call 0x1C17D08
	051 Call 0x1C17F10
	052 Move X1, X19
	053 Move X2, X31
	054 Move X20, X0
	055 Call InvalidOperationException..ctor, X0, X1
	056 Move X0, 0xB20000
	057 Move X0, [X0+384]
	058 Call 0x1C17D08
	059 Move X1, X0
	060 Move X0, X20
	061 Call 0x1C17DEC

Method: System.Boolean get_IsDefaultPort()

Disassembly:
	0x0361CE70 MOVZ W1, 0x40
	0x0361CE74 MOVK W1, 0x40000000
	0x0361CE78 MOVZ W2, 0x1
	0x0361CE7C MOV X0, X19
	0x0361CE80 BL 0x3620B04
	0x0361CE84 LDR X8, [X21 + 0x40]
	0x0361CE88 CBZ X8, 0x361CE9C
	0x0361CE8C STR X0, [X8 + 0x20]
	0x0361CE90 LDP X20, X19, [X31 + 0x10]
	0x0361CE94 LDP X30, X21, [X31], #0x20
	0x0361CE98 RET
	0x0361CE9C BL 0x1C16F20
	0x0361CEA0 ADRP X0, 0xB1F000
	0x0361CEA4 LDR X0, [X0 + 0x150]
	0x0361CEA8 BL 0x1C16D08
	0x0361CEAC MOV X1, X31
	0x0361CEB0 BL 0x320A1E4
	0x0361CEB4 MOV X19, X0
	0x0361CEB8 ADRP X0, 0xAD7000
	0x0361CEBC LDR X0, [X0 + 0x5B0]
	0x0361CEC0 BL 0x1C16D08
	0x0361CEC4 BL 0x1C16F10
	0x0361CEC8 MOV X1, X19
	0x0361CECC MOV X2, X31
	0x0361CED0 MOV X20, X0
	0x0361CED4 BL 0x337DF1C
	0x0361CED8 ADRP X0, 0xB1F000
	0x0361CEDC LDR X0, [X0 + 0x1D0]
	0x0361CEE0 BL 0x1C16D08
	0x0361CEE4 MOV X1, X0
	0x0361CEE8 MOV X0, X20
	0x0361CEEC BL 0x1C16DEC
	0x0361CEF0 STR X30, [X31 - 0x20]!
	0x0361CEF4 STP X20, X19, [X31 + 0x10]
	0x0361CEF8 LDR X8, [X0 + 0x20]
	0x0361CEFC CBZ X8, 0x361CF10
	0x0361CF00 LDR X0, [X8 + 0x20]
	0x0361CF04 LDP X20, X19, [X31 + 0x10]
	0x0361CF08 LDR X30, [X31], #0x20
	0x0361CF0C RET
	0x0361CF10 ADRP X0, 0xB1F000
	0x0361CF14 LDR X0, [X0 + 0x150]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X0
	005 Move X0, [X0+32]
	006 Compare X0, 0
	007 JumpIfEqual {31}
	008 Move X1, X31
	009 Call UriParser.get_IsSimple, X0
	010 Move TEMP, X0
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfNotEqual {21}
	014 Move X1, [X19+48]
	015 Move TEMP, X1
	016 And TEMP, TEMP, 0x40000000
	017 Compare TEMP, 0x40000000
	018 JumpIfEqual {24}
	019 Move X0, X19
	020 Call Uri.CreateUriInfo, X0, X1
	021 Move X0, X19
	022 Move W1, W31
	023 Call Uri.EnsureHostString, X0, X1
	024 Move W8, [X19+50]
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 And W31, W8, 128
	028 NotImplemented "Instruction CSET not yet implemented."
	029 Move X30, [X31+32]
	030 Return X0
	031 Move X0, 0xB20000
	032 Move X0, [X0+336]
	033 Call 0x1C17D08
	034 Move X1, X31
	035 Call SR.GetString, X0
	036 Move X19, X0
	037 Move X0, 0xAD8000
	038 Move X0, [X0+1456]
	039 Call 0x1C17D08
	040 Call 0x1C17F10
	041 Move X1, X19
	042 Move X2, X31
	043 Move X20, X0
	044 Call InvalidOperationException..ctor, X0, X1
	045 Move X0, 0xB20000
	046 Move X0, [X0+392]
	047 Call 0x1C17D08
	048 Move X1, X0
	049 Move X0, X20
	050 Call 0x1C17DEC

Method: System.Boolean get_IsFile()

Disassembly:
	0x0361CF18 BL 0x1C16D08
	0x0361CF1C MOV X1, X31
	0x0361CF20 BL 0x320A1E4
	0x0361CF24 MOV X19, X0
	0x0361CF28 ADRP X0, 0xAD7000
	0x0361CF2C LDR X0, [X0 + 0x5B0]
	0x0361CF30 BL 0x1C16D08
	0x0361CF34 BL 0x1C16F10
	0x0361CF38 MOV X1, X19
	0x0361CF3C MOV X2, X31
	0x0361CF40 MOV X20, X0
	0x0361CF44 BL 0x337DF1C
	0x0361CF48 ADRP X0, 0xB1F000
	0x0361CF4C LDR X0, [X0 + 0x1D8]
	0x0361CF50 BL 0x1C16D08
	0x0361CF54 MOV X1, X0
	0x0361CF58 MOV X0, X20
	0x0361CF5C BL 0x1C16DEC
	0x0361CF60 STP X30, X19, [X31 - 0x10]!
	0x0361CF64 LDRB W8, [X0 + 0x40]
	0x0361CF68 MOV X19, X0
	0x0361CF6C CBZ W8, 0x361CF78
	0x0361CF70 LDRB W8, [X19 + 0x34]
	0x0361CF74 TBNZ X8, 0x1, 0x361CF94
	0x0361CF78 MOV X0, X19
	0x0361CF7C BL 0x3617E68
	0x0361CF80 TBZ X0, 0x0, 0x361CF9C
	0x0361CF84 LDR X8, [X19 + 0x30]
	0x0361CF88 TBNZ X8, 0x0, 0x361CF94
	0x0361CF8C UBFM X0, X8, 0x24, 0x24
	0x0361CF90 B 0x361CFA0
	0x0361CF94 MOVZ W0, 0x1
	0x0361CF98 B 0x361CFA0
	0x0361CF9C MOV W0, W31
	0x0361CFA0 LDP X30, X19, [X31], #0x10
	0x0361CFA4 RET
	0x0361CFA8 SUB X31, X31, 0x60
	0x0361CFAC STP X30, X23, [X31 + 0x30]
	0x0361CFB0 STP X22, X21, [X31 + 0x40]
	0x0361CFB4 STP X20, X19, [X31 + 0x50]
	0x0361CFB8 ADRP X20, 0xDC4000
	0x0361CFBC LDRB W8, [X20 + 0x483]
	0x0361CFC0 MOV X19, X0
	0x0361CFC4 TBNZ X8, 0x0, 0x361CFF4
	0x0361CFC8 ADRP X0, 0xAE0000
	0x0361CFCC LDR X0, [X0 + 0x8D8]
	0x0361CFD0 BL 0x1C16CF4
	0x0361CFD4 ADRP X0, 0xAD9000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xDC5000
	005 Move W8, [X20+1148]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xADA000
	012 Move X0, [X0+2600]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+1148], W8
	016 Move X8, [X19+32]
	017 Compare X8, 0
	018 JumpIfEqual {36}
	019 Move X20, 0xADA000
	020 Move X20, [X20+2600]
	021 Move X19, [X8+32]
	022 Move X0, [X20]
	023 Move W9, [X0+224]
	024 Compare W9, 0
	025 JumpIfNotEqual {28}
	026 Call 0x1C17DFC
	027 Move X0, [X20]
	028 Move X8, [X0+184]
	029 Move X8, [X8]
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 NotImplemented "Instruction CSET not yet implemented."
	034 Move X30, [X31+32]
	035 Return X0
	036 Move X0, 0xB20000
	037 Move X0, [X0+336]
	038 Call 0x1C17D08
	039 Move X1, X31
	040 Call SR.GetString, X0
	041 Move X19, X0
	042 Move X0, 0xAD8000
	043 Move X0, [X0+1456]
	044 Call 0x1C17D08
	045 Call 0x1C17F10
	046 Move X1, X19
	047 Move X2, X31
	048 Move X20, X0
	049 Call InvalidOperationException..ctor, X0, X1
	050 Move X0, 0xB20000
	051 Move X0, [X0+400]
	052 Call 0x1C17D08
	053 Move X1, X0
	054 Move X0, X20
	055 Call 0x1C17DEC

Method: System.Boolean get_IsLoopback()

Disassembly:
	0x0361CFD8 LDR X0, [X0 + 0x278]
	0x0361CFDC BL 0x1C16CF4
	0x0361CFE0 ADRP X0, 0xB1F000
	0x0361CFE4 LDR X0, [X0 + 0x58]
	0x0361CFE8 BL 0x1C16CF4
	0x0361CFEC MOVZ W8, 0x1
	0x0361CFF0 STRB W8, [X20 + 0x483]
	0x0361CFF4 STR W31, [X31 + 0x2C]
	0x0361CFF8 LDR X8, [X19 + 0x20]
	0x0361CFFC CBZ X8, 0x361D1A4
	0x0361D000 MOV X0, X19
	0x0361D004 BL 0x3617E68
	0x0361D008 TBZ X0, 0x0, 0x361D034
	0x0361D00C LDR X1, [X19 + 0x30]
	0x0361D010 MOVZ X8, 0x11
	0x0361D014 ANDS X31, X1, X8, 0x0
	0x0361D018 B.EQ 0x361D034
	0x0361D01C TBNZ X1, 0x1E, 0x361D028
	0x0361D020 MOV X0, X19
	0x0361D024 BL 0x36180CC
	0x0361D028 LDR X8, [X19 + 0x38]
	0x0361D02C CBNZ X8, 0x361D0C0
	0x0361D030 B 0x361D1A0
	0x0361D034 MOV X0, X19
	0x0361D038 MOV W1, W31
	0x0361D03C BL 0x3619254
	0x0361D040 LDR X8, [X19 + 0x38]
	0x0361D044 CBZ X8, 0x361D1A0
	0x0361D048 LDR X0, [X8 + 0x38]
	0x0361D04C MOV X1, X31
	0x0361D050 BL 0x32277A8
	0x0361D054 LDR X8, [X19 + 0x38]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X0+32]
	005 Compare X8, 0
	006 JumpIfEqual {18}
	007 Move W1, W31
	008 Move X19, X0
	009 Call Uri.EnsureHostString, X0, X1
	010 Move W8, [X19+50]
	011 Move X20, [X31+16]
	012 Move X19, [X31+24]
	013 Move W0, W8
	014 ShiftRight W0, 6
	015 And W0, W0, 63
	016 Move X30, [X31+32]
	017 Return X0
	018 Move X0, 0xB1F000
	019 Move X0, [X0+336]
	020 Call 0x1C17D08
	021 Move X1, X31
	022 Call SR.GetString, X0
	023 Move X19, X0
	024 Move X0, 0xAD7000
	025 Move X0, [X0+1456]
	026 Call 0x1C17D08
	027 Call 0x1C17F10
	028 Move X1, X19
	029 Move X2, X31
	030 Move X20, X0
	031 Call InvalidOperationException..ctor, X0, X1
	032 Move X0, 0xB1F000
	033 Move X0, [X0+408]
	034 Call 0x1C17D08
	035 Move X1, X0
	036 Move X0, X20
	037 Call 0x1C17DEC

Method: System.String get_PathAndQuery()

Disassembly:
	0x0361D058 CBZ X8, 0x361D1A0
	0x0361D05C TBZ X0, 0x0, 0x361D0C0
	0x0361D060 LDR X20, [X8 + 0x10]
	0x0361D064 CBZ X20, 0x361D1A0
	0x0361D068 LDR W1, [X20 + 0x10]
	0x0361D06C CBZ W1, 0x361D0C8
	0x0361D070 LDR X8, [X19 + 0x30]
	0x0361D074 AND X9, X8, 0x7FFFF
	0x0361D078 CMP X9, 0x50000
	0x0361D07C B.EQ 0x361D0E0
	0x0361D080 CMP X9, 0x10000
	0x0361D084 B.NE 0x361D17C
	0x0361D088 SUB W2, W1, 0x2
	0x0361D08C MOVZ W1, 0x1
	0x0361D090 MOV X0, X20
	0x0361D094 MOV X3, X31
	0x0361D098 BL 0x3228DE4
	0x0361D09C LDR X8, [X19 + 0x38]
	0x0361D0A0 CBZ X8, 0x361D1A0
	0x0361D0A4 LDR X1, [X8 + 0x18]
	0x0361D0A8 MOV X20, X0
	0x0361D0AC CBZ X1, 0x361D17C
	0x0361D0B0 MOV X0, X20
	0x0361D0B4 MOV X2, X31
	0x0361D0B8 BL 0x321B938
	0x0361D0BC B 0x361D178
	0x0361D0C0 LDR X20, [X8 + 0x38]
	0x0361D0C4 B 0x361D188
	0x0361D0C8 ADRP X8, 0xAD8000
	0x0361D0CC LDR X8, [X8 + 0x278]
	0x0361D0D0 LDR X8, [X8]
	0x0361D0D4 LDR X8, [X8 + 0xB8]
	0x0361D0D8 LDR X20, [X8]
	0x0361D0DC B 0x361D188
	0x0361D0E0 MOVZ W9, 0x104
	0x0361D0E4 ANDS X31, X8, X9, 0x0
	0x0361D0E8 B.EQ 0x361D17C
	0x0361D0EC ADRP X8, 0xADF000
	0x0361D0F0 LDR X8, [X8 + 0x8D8]
	0x0361D0F4 LDR X0, [X8]
	0x0361D0F8 BL 0x1C16D6C
	0x0361D0FC ADRP X8, 0xB1E000
	0x0361D100 LDR X8, [X8 + 0x58]
	0x0361D104 STR W31, [X31 + 0x2C]
	0x0361D108 LDR W22, [X20 + 0x10]
	0x0361D10C LDR X23, [X19 + 0x20]
	0x0361D110 LDR X8, [X8]
	0x0361D114 MOV X21, X0
	0x0361D118 LDR W9, [X8 + 0xE0]
	0x0361D11C CBNZ W9, 0x361D128

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X0+32]
	005 Compare X8, 0
	006 JumpIfEqual {38}
	007 Move W1, 48
	008 Move W2, 1
	009 Move X19, X0
	010 Call Uri.GetComponents, X0, X1, X2
	011 Move W8, [X19+51]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 8
	015 Compare TEMP, 8
	016 JumpIfNotEqual {33}
	017 Compare X19, 0
	018 JumpIfEqual {58}
	019 Move X0, X19
	020 Move W1, W31
	021 Move X2, X31
	022 Call String.get_Chars, X0, X1
	023 And W8, W0, 0xFFFF
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move X0, X19
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move W1, 1
	029 Move X2, X31
	030 Move X30, [X31+32]
	031 Call String.Substring, X0, X1
	032 Return X0
	033 Move X0, X19
	034 Move X20, [X31+16]
	035 Move X19, [X31+24]
	036 Move X30, [X31+32]
	037 Return X0
	038 Move X0, 0xB1F000
	039 Move X0, [X0+336]
	040 Call 0x1C17D08
	041 Move X1, X31
	042 Call SR.GetString, X0
	043 Move X19, X0
	044 Move X0, 0xAD7000
	045 Move X0, [X0+1456]
	046 Call 0x1C17D08
	047 Call 0x1C17F10
	048 Move X1, X19
	049 Move X2, X31
	050 Move X20, X0
	051 Call InvalidOperationException..ctor, X0, X1
	052 Move X0, 0xB1F000
	053 Move X0, [X0+416]
	054 Call 0x1C17D08
	055 Move X1, X0
	056 Move X0, X20
	057 Call 0x1C17DEC
	058 Call 0x1C17F20

Method: System.String[] get_Segments()

Disassembly:
	0x0361D120 MOV X0, X8
	0x0361D124 BL 0x1C16DFC
	0x0361D128 MOVZ W8, 0xA
	0x0361D12C ADD X4, X31, 0x2C
	0x0361D130 MOVZ W5, 0xFFFF
	0x0361D134 MOVZ W6, 0xFFFF
	0x0361D138 MOVZ W7, 0xFFFF
	0x0361D13C MOV X0, X20
	0x0361D140 MOV W1, W31
	0x0361D144 MOV W2, W22
	0x0361D148 MOV X3, X21
	0x0361D14C STR X31, [X31 + 0x18]
	0x0361D150 STRB W31, [X31 + 0x10]
	0x0361D154 STR X23, [X31 + 0x8]
	0x0361D158 STR W8, [X31]
	0x0361D15C BL 0x362B208
	0x0361D160 LDR W3, [X31 + 0x2C]
	0x0361D164 MOV X0, X31
	0x0361D168 MOV X1, X21
	0x0361D16C MOV W2, W31
	0x0361D170 MOV X4, X31
	0x0361D174 BL 0x322EAE4
	0x0361D178 MOV X20, X0
	0x0361D17C LDR X8, [X19 + 0x38]
	0x0361D180 CBZ X8, 0x361D1A0
	0x0361D184 STR X20, [X8 + 0x38]
	0x0361D188 MOV X0, X20
	0x0361D18C LDP X20, X19, [X31 + 0x50]
	0x0361D190 LDP X22, X21, [X31 + 0x40]
	0x0361D194 LDP X30, X23, [X31 + 0x30]
	0x0361D198 ADD X31, X31, 0x60
	0x0361D19C RET
	0x0361D1A0 BL 0x1C16F20
	0x0361D1A4 ADRP X0, 0xB1E000
	0x0361D1A8 LDR X0, [X0 + 0x150]
	0x0361D1AC BL 0x1C16D08
	0x0361D1B0 MOV X1, X31
	0x0361D1B4 BL 0x320A1E4
	0x0361D1B8 MOV X19, X0
	0x0361D1BC ADRP X0, 0xAD6000
	0x0361D1C0 LDR X0, [X0 + 0x5B0]
	0x0361D1C4 BL 0x1C16D08
	0x0361D1C8 BL 0x1C16F10
	0x0361D1CC MOV X1, X19
	0x0361D1D0 MOV X2, X31
	0x0361D1D4 MOV X20, X0
	0x0361D1D8 BL 0x337DF1C
	0x0361D1DC ADRP X0, 0xB1E000
	0x0361D1E0 LDR X0, [X0 + 0x1E0]
	0x0361D1E4 BL 0x1C16D08
	0x0361D1E8 MOV X1, X0
	0x0361D1EC MOV X0, X20
	0x0361D1F0 BL 0x1C16DEC
	0x0361D1F4 STP X30, X19, [X31 - 0x10]!
	0x0361D1F8 MOV X19, X0
	0x0361D1FC BL 0x361CFA8
	0x0361D200 LDR X8, [X19 + 0x30]
	0x0361D204 AND X8, X8, 0x7FFFF
	0x0361D208 CMP X8, 0x30000
	0x0361D20C B.NE 0x361D21C
	0x0361D210 MOV X1, X31
	0x0361D214 LDP X30, X19, [X31], #0x10
	0x0361D218 B 0x362D478
	0x0361D21C LDP X30, X19, [X31], #0x10
	0x0361D220 RET
	0x0361D224 LDRB W8, [X0 + 0x32]
	0x0361D228 UBFM W0, W8, 0x3, 0x3
	0x0361D22C RET
	0x0361D230 STR X30, [X31 - 0x20]!
	0x0361D234 STP X20, X19, [X31 + 0x10]
	0x0361D238 LDR X8, [X0 + 0x20]
	0x0361D23C CBZ X8, 0x361D254
	0x0361D240 LDP X20, X19, [X31 + 0x10]
	0x0361D244 MOVZ W1, 0x2
	0x0361D248 MOVZ W2, 0x1
	0x0361D24C LDR X30, [X31], #0x20
	0x0361D250 B 0x3620B04
	0x0361D254 ADRP X0, 0xB1E000
	0x0361D258 LDR X0, [X0 + 0x150]
	0x0361D25C BL 0x1C16D08
	0x0361D260 MOV X1, X31
	0x0361D264 BL 0x320A1E4
	0x0361D268 MOV X19, X0
	0x0361D26C ADRP X0, 0xAD6000
	0x0361D270 LDR X0, [X0 + 0x5B0]
	0x0361D274 BL 0x1C16D08
	0x0361D278 BL 0x1C16F10
	0x0361D27C MOV X1, X19
	0x0361D280 MOV X2, X31
	0x0361D284 MOV X20, X0
	0x0361D288 BL 0x337DF1C
	0x0361D28C ADRP X0, 0xB1E000
	0x0361D290 LDR X0, [X0 + 0x1E8]
	0x0361D294 BL 0x1C16D08
	0x0361D298 MOV X1, X0
	0x0361D29C MOV X0, X20
	0x0361D2A0 BL 0x1C16DEC
	0x0361D2A4 STR X30, [X31 - 0x20]!
	0x0361D2A8 STP X20, X19, [X31 + 0x10]
	0x0361D2AC ADRP X20, 0xDC3000
	0x0361D2B0 LDRB W8, [X20 + 0x484]
	0x0361D2B4 MOV X19, X0
	0x0361D2B8 TBNZ X8, 0x0, 0x361D2DC
	0x0361D2BC ADRP X0, 0xAD6000
	0x0361D2C0 LDR X0, [X0 + 0xEC8]
	0x0361D2C4 BL 0x1C16CF4
	0x0361D2C8 ADRP X0, 0xAD6000
	0x0361D2CC LDR X0, [X0 + 0x848]
	0x0361D2D0 BL 0x1C16CF4
	0x0361D2D4 MOVZ W8, 0x1
	0x0361D2D8 STRB W8, [X20 + 0x484]
	0x0361D2DC STRB W31, [X31 + 0x8]
	0x0361D2E0 CBZ X19, 0x361D4BC
	0x0361D2E4 LDR W8, [X19 + 0x10]
	0x0361D2E8 MOV W0, W31
	0x0361D2EC CBZ W8, 0x361D4C0
	0x0361D2F0 CMP W8, 0x8000
	0x0361D2F4 B.GE 0x361D4C0
	0x0361D2F8 MOV X0, X31
	0x0361D2FC STR W8, [X31 + 0xC]
	0x0361D300 BL 0x32C1424
	0x0361D304 ADD X20, X19, W0, SXTW
	0x0361D308 MOV X0, X19
	0x0361D30C MOV W1, W31
	0x0361D310 MOV X2, X31
	0x0361D314 BL 0x3222A1C
	0x0361D318 AND W8, W0, 0xFFFF
	0x0361D31C CMP W8, 0x5B

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0xDC4000
	008 Move W8, [X20+1149]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {28}
	014 Move X0, 0xB04000
	015 Move X0, [X0+2976]
	016 Call 0x1C17CF4
	017 Move X0, 0xAD7000
	018 Move X0, [X0+2760]
	019 Call 0x1C17CF4
	020 Move X0, 0xAFF000
	021 Move X0, [X0+2912]
	022 Call 0x1C17CF4
	023 Move X0, 0xAD7000
	024 Move X0, [X0+1728]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X20+1149], W8
	028 Move X8, [X19+32]
	029 Compare X8, 0
	030 JumpIfEqual {124}
	031 Move X0, X19
	032 Call Uri.get_PrivateAbsolutePath, X0
	033 Compare X0, 0
	034 JumpIfEqual {123}
	035 Move X23, 0xAD7000
	036 Move W8, [X0+16]
	037 Move X23, [X23+2760]
	038 Move X20, X0
	039 Compare W8, 0
	040 JumpIfEqual {113}
	041 Move X8, 0xB04000
	042 Move X8, [X8+2976]
	043 Move X0, [X8]
	044 Call 0x1C17F10
	045 Move X1, X31
	046 Move X19, X0
	047 Call ArrayList..ctor, X0
	048 Move W8, [X20+16]
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Move W22, W31
	051 Move W1, 47
	052 Move X0, X20
	053 Move W2, W22
	054 Move X3, X31
	055 Call String.IndexOf, X0, X1, X2
	056 Move W21, W0
	057 Add W31, W0, 1
	058 Move W8, [X20+16]
	059 Subtract W21, W8, 1
	060 Subtract W8, W21, W22
	061 Add W2, W8, 1
	062 Move X0, X20
	063 Move W1, W22
	064 Move X3, X31
	065 Call String.Substring, X0, X1, X2
	066 Compare X19, 0
	067 JumpIfEqual {123}
	068 Move X8, [X19]
	069 Move X1, X0
	070 Move X0, X19
	071 Move X9, [X8+776]
	072 Move X2, [X8+784]
	073 NotImplemented "Instruction BLR not yet implemented."
	074 Move W8, [X20+16]
	075 Add W22, W21, 1
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Move X8, 0xAD7000
	078 Move X8, [X8+1728]
	079 Move X0, [X8]
	080 Move X8, 0xAFF000
	081 Move X8, [X8+2912]
	082 Move W9, [X0+224]
	083 Move X20, [X8]
	084 Compare W9, 0
	085 JumpIfNotEqual {87}
	086 Call 0x1C17DFC
	087 Move X0, X20
	088 Move X1, X31
	089 Call Type.GetTypeFromHandle, X0
	090 Compare X19, 0
	091 JumpIfEqual {123}
	092 Move X8, [X19]
	093 Move X1, X0
	094 Move X0, X19
	095 Move X9, [X8+1032]
	096 Move X2, [X8+1040]
	097 NotImplemented "Instruction BLR not yet implemented."
	098 Compare X0, 0
	099 JumpIfEqual {106}
	100 Move X20, [X23]
	101 Move X19, X0
	102 Move X1, X20
	103 Call 0x1C17E00
	104 Compare X0, 0
	105 JumpIfEqual {144}
	106 Move X20, [X31+32]
	107 Move X19, [X31+40]
	108 Move X22, [X31+16]
	109 Move X21, [X31+24]
	110 Move X30, [X31+48]
	111 Move X23, [X31+56]
	112 Return X0
	113 Move X0, [X23]
	114 Move X20, [X31+32]
	115 Move X19, [X31+40]
	116 Move X22, [X31+16]
	117 Move X21, [X31+24]
	118 Move W1, W31
	119 Move X30, [X31+48]
	120 Move X23, [X31+56]
	121 Call 0x1C17D6C
	122 Return X0
	123 Call 0x1C17F20
	124 Move X0, 0xB1F000
	125 Move X0, [X0+336]
	126 Call 0x1C17D08
	127 Move X1, X31
	128 Call SR.GetString, X0
	129 Move X19, X0
	130 Move X0, 0xAD7000
	131 Move X0, [X0+1456]
	132 Call 0x1C17D08
	133 Call 0x1C17F10
	134 Move X1, X19
	135 Move X2, X31
	136 Move X20, X0
	137 Call InvalidOperationException..ctor, X0, X1
	138 Move X0, 0xB1F000
	139 Move X0, [X0+424]
	140 Call 0x1C17D08
	141 Move X1, X0
	142 Move X0, X20
	143 Call 0x1C17DEC
	144 Move X0, X19
	145 Move X1, X20
	146 Call 0x1C181E0

Method: System.Boolean get_IsUnc()

Disassembly:
	0x0361D320 B.NE 0x361D36C
	0x0361D324 LDR W8, [X19 + 0x10]
	0x0361D328 MOV X0, X19
	0x0361D32C MOV X2, X31
	0x0361D330 SUB W1, W8, 0x1
	0x0361D334 BL 0x3222A1C
	0x0361D338 AND W8, W0, 0xFFFF
	0x0361D33C CMP W8, 0x5D
	0x0361D340 B.NE 0x361D36C
	0x0361D344 ADD X2, X31, 0xC
	0x0361D348 MOVZ W1, 0x1
	0x0361D34C MOV X0, X20
	0x0361D350 MOV X3, X31
	0x0361D354 BL 0x3627CFC
	0x0361D358 TBZ X0, 0x0, 0x361D36C
	0x0361D35C LDR W8, [X31 + 0xC]
	0x0361D360 LDR W9, [X19 + 0x10]
	0x0361D364 CMP W8, W9
	0x0361D368 B.EQ 0x361D49C
	0x0361D36C LDR W8, [X19 + 0x10]
	0x0361D370 ADD X2, X31, 0xC
	0x0361D374 MOV X0, X20
	0x0361D378 MOV W1, W31
	0x0361D37C MOV W3, W31
	0x0361D380 MOV W4, W31
	0x0361D384 MOV W5, W31
	0x0361D388 MOV X6, X31
	0x0361D38C STR W8, [X31 + 0xC]
	0x0361D390 BL 0x35F4744

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X0+32]
	005 Compare X8, 0
	006 JumpIfEqual {15}
	007 Move W8, [X0+51]
	008 Move X20, [X31+16]
	009 Move X19, [X31+24]
	010 Move W0, W8
	011 ShiftRight W0, 4
	012 And W0, W0, 15
	013 Move X30, [X31+32]
	014 Return X0
	015 Move X0, 0xB1F000
	016 Move X0, [X0+336]
	017 Call 0x1C17D08
	018 Move X1, X31
	019 Call SR.GetString, X0
	020 Move X19, X0
	021 Move X0, 0xAD7000
	022 Move X0, [X0+1456]
	023 Call 0x1C17D08
	024 Call 0x1C17F10
	025 Move X1, X19
	026 Move X2, X31
	027 Move X20, X0
	028 Call InvalidOperationException..ctor, X0, X1
	029 Move X0, 0xB1F000
	030 Move X0, [X0+432]
	031 Call 0x1C17D08
	032 Move X1, X0
	033 Move X0, X20
	034 Call 0x1C17DEC

Method: System.String get_Host()

Disassembly:
	0x0361D394 TBZ X0, 0x0, 0x361D3B0
	0x0361D398 LDR W9, [X31 + 0xC]
	0x0361D39C LDR W8, [X19 + 0x10]
	0x0361D3A0 CMP W9, W8
	0x0361D3A4 B.NE 0x361D3B4
	0x0361D3A8 MOVZ W0, 0x3
	0x0361D3AC B 0x361D4C0
	0x0361D3B0 LDR W8, [X19 + 0x10]
	0x0361D3B4 ADD X2, X31, 0xC
	0x0361D3B8 ADD X3, X31, 0x8
	0x0361D3BC MOV X0, X20
	0x0361D3C0 MOV W1, W31
	0x0361D3C4 MOV W4, W31
	0x0361D3C8 MOV X5, X31
	0x0361D3CC STR W8, [X31 + 0xC]
	0x0361D3D0 STRB W31, [X31 + 0x8]
	0x0361D3D4 BL 0x362D058
	0x0361D3D8 TBZ X0, 0x0, 0x361D3F0
	0x0361D3DC LDR W9, [X31 + 0xC]
	0x0361D3E0 LDR W8, [X19 + 0x10]
	0x0361D3E4 CMP W9, W8
	0x0361D3E8 B.NE 0x361D3F4
	0x0361D3EC B 0x361D42C
	0x0361D3F0 LDR W8, [X19 + 0x10]
	0x0361D3F4 ADD X2, X31, 0xC
	0x0361D3F8 ADD X3, X31, 0x8
	0x0361D3FC MOV X0, X20
	0x0361D400 MOV W1, W31
	0x0361D404 MOV W4, W31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X0+32]
	005 Compare X8, 0
	006 JumpIfEqual {14}
	007 Move X20, [X31+16]
	008 Move X19, [X31+24]
	009 Move W1, 4
	010 Move W2, 1
	011 Move X30, [X31+32]
	012 Call Uri.GetComponents, X0, X1, X2
	013 Return X0
	014 Move X0, 0xB1F000
	015 Move X0, [X0+336]
	016 Call 0x1C17D08
	017 Move X1, X31
	018 Call SR.GetString, X0
	019 Move X19, X0
	020 Move X0, 0xAD7000
	021 Move X0, [X0+1456]
	022 Call 0x1C17D08
	023 Call 0x1C17F10
	024 Move X1, X19
	025 Move X2, X31
	026 Move X20, X0
	027 Call InvalidOperationException..ctor, X0, X1
	028 Move X0, 0xB1F000
	029 Move X0, [X0+440]
	030 Call 0x1C17D08
	031 Move X1, X0
	032 Move X0, X20
	033 Call 0x1C17DEC

Method: System.Boolean StaticIsFile(System.UriParser syntax)

Disassembly:
	0x0361D408 MOV X5, X31
	0x0361D40C STR W8, [X31 + 0xC]
	0x0361D410 STRB W31, [X31 + 0x8]
	0x0361D414 BL 0x362D288
	0x0361D418 TBZ X0, 0x0, 0x361D434
	0x0361D41C LDR W9, [X31 + 0xC]

ISIL:
	001 Compare X0, 0
	002 JumpIfEqual {7}
	003 Move W1, 0x2000
	004 Move X2, X31
	005 Call UriParser.InFact, X0, X1
	006 Return X0
	007 Move [X31-16], X30
	008 Call 0x1C17F20

Method: System.Object get_InitializeLock()

Disassembly:
	0x0361D420 LDR W8, [X19 + 0x10]
	0x0361D424 CMP W9, W8
	0x0361D428 B.NE 0x361D438
	0x0361D42C MOVZ W0, 0x2
	0x0361D430 B 0x361D4C0
	0x0361D434 LDR W8, [X19 + 0x10]
	0x0361D438 ADRP X9, 0xAD6000
	0x0361D43C ADRP X10, 0xAD6000
	0x0361D440 LDR X9, [X9 + 0xEC8]
	0x0361D444 LDR X10, [X10 + 0x848]
	0x0361D448 ADD W8, W8, 0x2
	0x0361D44C MOV X1, X19
	0x0361D450 LDR X0, [X9]
	0x0361D454 LDR X2, [X10]
	0x0361D458 MOV X3, X31
	0x0361D45C STR W8, [X31 + 0xC]
	0x0361D460 BL 0x32274B8
	0x0361D464 MOV X19, X0
	0x0361D468 CBZ X0, 0x361D4A4
	0x0361D46C MOV X0, X31
	0x0361D470 BL 0x32C1424
	0x0361D474 ADD X0, X19, W0, SXTW
	0x0361D478 ADD X2, X31, 0xC
	0x0361D47C MOVZ W1, 0x1
	0x0361D480 MOV X3, X31
	0x0361D484 BL 0x3627CFC
	0x0361D488 TBZ X0, 0x0, 0x361D4BC
	0x0361D48C LDR W8, [X31 + 0xC]
	0x0361D490 LDR W9, [X19 + 0x10]
	0x0361D494 CMP W8, W9
	0x0361D498 B.NE 0x361D4BC
	0x0361D49C MOVZ W0, 0x4
	0x0361D4A0 B 0x361D4C0
	0x0361D4A4 ADD X2, X31, 0xC
	0x0361D4A8 MOVZ W1, 0x1
	0x0361D4AC MOV X0, X19
	0x0361D4B0 MOV X3, X31
	0x0361D4B4 BL 0x3627CFC
	0x0361D4B8 TBNZ X0, 0x0, 0x361D4CC
	0x0361D4BC MOV W0, W31
	0x0361D4C0 LDP X20, X19, [X31 + 0x10]
	0x0361D4C4 LDR X30, [X31], #0x20
	0x0361D4C8 RET
	0x0361D4CC BL 0x1C16F20
	0x0361D4D0 SUB W8, W0, 0x23
	0x0361D4D4 AND W9, W8, 0xFFFF
	0x0361D4D8 CMP W9, 0x3A
	0x0361D4DC B.HI 0x361D4F8
	0x0361D4E0 MOVZ X9, 0x1001
	0x0361D4E4 MOVK X9, 0x30800000
	0x0361D4E8 MOVK X9, 0x5000000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0xDC4000
	005 Move X20, 0xAD9000
	006 Move W8, [X19+1150]
	007 Move X20, [X20+2600]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0xADD000
	013 Move X0, [X0+3264]
	014 Call 0x1C17CF4
	015 Move X0, 0xAD9000
	016 Move X0, [X0+2600]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X19+1150], W8
	020 Move X0, [X20]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {26}
	024 Call 0x1C17DFC
	025 Move X0, [X20]
	026 Move X8, [X0+184]
	027 Move X8, [X8+120]
	028 Compare X8, 0
	029 JumpIfNotEqual {50}
	030 Move X8, 0xADD000
	031 Move X8, [X8+3264]
	032 Move X0, [X8]
	033 Call 0x1C17F10
	034 Move X1, X31
	035 Move X19, X0
	036 Call Object..ctor, X0
	037 Move X0, [X20]
	038 Move W8, [X0+224]
	039 Compare W8, 0
	040 JumpIfNotEqual {43}
	041 Call 0x1C17DFC
	042 Move X0, [X20]
	043 Move X8, [X0+184]
	044 Move X1, X19
	045 Move X2, X31
	046 Move X3, X31
	047 Add X0, X8, 120
	048 Call Interlocked.CompareExchange, X0, X1, X2
	049 Move X0, [X20]
	050 Move W8, [X0+224]
	051 Compare W8, 0
	052 JumpIfNotEqual {55}
	053 Call 0x1C17DFC
	054 Move X0, [X20]
	055 Move X8, [X0+184]
	056 Move X20, [X31+16]
	057 Move X19, [X31+24]
	058 Move X0, [X8+120]
	059 Move X30, [X31+32]
	060 Return X0

Method: System.Void InitializeUriConfig()

Disassembly:
	0x0361D4EC LSRV X8, X9, X8
	0x0361D4F0 AND W0, W8, 0x1
	0x0361D4F4 RET
	0x0361D4F8 MOV W0, W31
	0x0361D4FC RET
	0x0361D500 STR X30, [X31 - 0x30]!
	0x0361D504 STP X22, X21, [X31 + 0x10]
	0x0361D508 STP X20, X19, [X31 + 0x20]
	0x0361D50C ADRP X20, 0xDC3000
	0x0361D510 LDRB W8, [X20 + 0x485]
	0x0361D514 MOV X19, X0
	0x0361D518 TBNZ X8, 0x0, 0x361D530
	0x0361D51C ADRP X0, 0xAD8000
	0x0361D520 LDR X0, [X0 + 0xA28]
	0x0361D524 BL 0x1C16CF4
	0x0361D528 MOVZ W8, 0x1
	0x0361D52C STRB W8, [X20 + 0x485]
	0x0361D530 CBZ X19, 0x361D62C
	0x0361D534 LDR W8, [X19 + 0x10]
	0x0361D538 CBZ W8, 0x361D62C
	0x0361D53C MOV X0, X19
	0x0361D540 MOV W1, W31
	0x0361D544 MOV X2, X31
	0x0361D548 BL 0x3222A1C
	0x0361D54C ADRP X22, 0xAD8000
	0x0361D550 LDR X22, [X22 + 0xA28]
	0x0361D554 MOV W20, W0
	0x0361D558 LDR X8, [X22]
	0x0361D55C LDR W9, [X8 + 0xE0]
	0x0361D560 CBNZ W9, 0x361D56C
	0x0361D564 MOV X0, X8
	0x0361D568 BL 0x1C16DFC
	0x0361D56C AND W8, W20, 0xFFFFFFDF
	0x0361D570 SUB W8, W8, 0x41
	0x0361D574 AND W8, W8, 0xFFFF
	0x0361D578 CMP W8, 0x19
	0x0361D57C B.HI 0x361D62C
	0x0361D580 LDR W8, [X19 + 0x10]
	0x0361D584 SUB W20, W8, 0x1
	0x0361D588 CMP W20, 0x1
	0x0361D58C B.LT 0x361D624
	0x0361D590 MOV X0, X19
	0x0361D594 MOV W1, W20
	0x0361D598 MOV X2, X31
	0x0361D59C BL 0x3222A1C
	0x0361D5A0 LDR X8, [X22]
	0x0361D5A4 MOV W21, W0
	0x0361D5A8 LDR W9, [X8 + 0xE0]
	0x0361D5AC CBNZ W9, 0x361D5B8
	0x0361D5B0 MOV X0, X8
	0x0361D5B4 BL 0x1C16DFC
	0x0361D5B8 MOV W0, W21
	0x0361D5BC BL 0x361D66C
	0x0361D5C0 TBNZ X0, 0x0, 0x361D618
	0x0361D5C4 MOV X0, X19
	0x0361D5C8 MOV W1, W20
	0x0361D5CC MOV X2, X31
	0x0361D5D0 BL 0x3222A1C
	0x0361D5D4 AND W8, W0, 0xFFFF
	0x0361D5D8 CMP W8, 0x2B
	0x0361D5DC B.EQ 0x361D618
	0x0361D5E0 MOV X0, X19
	0x0361D5E4 MOV W1, W20
	0x0361D5E8 MOV X2, X31
	0x0361D5EC BL 0x3222A1C
	0x0361D5F0 AND W8, W0, 0xFFFF
	0x0361D5F4 CMP W8, 0x2D
	0x0361D5F8 B.EQ 0x361D618
	0x0361D5FC MOV X0, X19
	0x0361D600 MOV W1, W20
	0x0361D604 MOV X2, X31
	0x0361D608 BL 0x3222A1C
	0x0361D60C AND W8, W0, 0xFFFF
	0x0361D610 CMP W8, 0x2E
	0x0361D614 B.NE 0x361D62C
	0x0361D618 SUB W20, W20, 0x1
	0x0361D61C CMP W20, 0x0
	0x0361D620 B.GT 0x361D590
	0x0361D624 MOVZ W0, 0x1
	0x0361D628 B 0x361D630
	0x0361D62C MOV W0, W31
	0x0361D630 LDP X20, X19, [X31 + 0x20]
	0x0361D634 LDP X22, X21, [X31 + 0x10]
	0x0361D638 LDR X30, [X31], #0x30
	0x0361D63C RET
	0x0361D640 SUB W8, W0, 0x61
	0x0361D644 AND W8, W8, 0xFFFF
	0x0361D648 CMP W8, 0x1A
	0x0361D64C B.CS 0x361D658
	0x0361D650 MOVZ W0, 0x1
	0x0361D654 RET
	0x0361D658 SUB W8, W0, 0x41
	0x0361D65C AND W8, W8, 0xFFFF
	0x0361D660 CMP W8, 0x1A
	0x0361D664 CSET W0, CC
	0x0361D668 RET
	0x0361D66C STP X30, X21, [X31 - 0x20]!
	0x0361D670 STP X20, X19, [X31 + 0x10]
	0x0361D674 ADRP X20, 0xDC3000
	0x0361D678 ADRP X21, 0xAD8000
	0x0361D67C LDRB W8, [X20 + 0x4A0]
	0x0361D680 LDR X21, [X21 + 0xA28]
	0x0361D684 MOV W19, W0

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, 0xDC4000
	007 Move X21, 0xAD9000
	008 Move W8, [X19+1151]
	009 Move X21, [X21+2600]
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xAD9000
	015 Move X0, [X0+2600]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X19+1151], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {25}
	023 Call 0x1C17DFC
	024 Move X0, [X21]
	025 Move X8, [X0+184]
	026 Move W19, [X8+104]
	027 Call 0x1C17D44
	028 Compare W19, 0
	029 JumpIfNotEqual {72}
	030 Move X0, [X21]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {35}
	034 Call 0x1C17DFC
	035 Call Uri.get_InitializeLock
	036 Move X19, X0
	037 Move [X31+12], W31
	038 Add X1, X31, 12
	039 Move X2, X31
	040 Call Monitor.Enter, X0, X1
	041 Move X0, [X21]
	042 Move W8, [X0+224]
	043 Compare W8, 0
	044 JumpIfNotEqual {47}
	045 Call 0x1C17DFC
	046 Move X0, [X21]
	047 Move X8, [X0+184]
	048 Move W20, [X8+104]
	049 Call 0x1C17D44
	050 Compare W20, 0
	051 JumpIfNotEqual {63}
	052 Move X0, [X21]
	053 Move W8, [X0+224]
	054 Compare W8, 0
	055 JumpIfNotEqual {58}
	056 Call 0x1C17DFC
	057 Move X0, [X21]
	058 Move X8, [X0+184]
	059 Move W20, [X8+105]
	060 Call 0x1C17D44
	061 Compare W20, 0
	062 JumpIfEqual {78}
	063 Move X20, X31
	064 Move W8, [X31+12]
	065 Compare W8, 0
	066 JumpIfEqual {70}
	067 Move X0, X19
	068 Move X1, X31
	069 Call Monitor.Exit, X0
	070 Compare X20, 0
	071 JumpIfNotEqual {93}
	072 Move X20, [X31+32]
	073 Move X19, [X31+40]
	074 Move X30, [X31+16]
	075 Move X21, [X31+24]
	076 Add X31, X31, 48
	077 Return 
	078 Move X0, [X21]
	079 Move W8, [X0+224]
	080 Compare W8, 0
	081 JumpIfNotEqual {83}
	082 Call 0x1C17DFC
	083 Call 0x1C17D44
	084 Move X8, [X21]
	085 Move W9, 1
	086 Move X8, [X8+184]
	087 Move [X8+104], W9
	088 Call 0x1C17D44
	089 Move X8, [X21]
	090 Move X20, X31
	091 Move X8, [X8+184]
	092 Move [X8+105], W31
	093 Move X0, X20
	094 Call 0x1C17F18
	095 Move X21, X0
	096 NotImplemented "Instruction CMP not yet implemented."
	097 Move X0, X21
	098 Call 0x3EB2AD0
	099 Move X20, [X0]
	100 Call 0x3EB2AE0
	101 Move X20, X31
	102 Move X21, X0
	103 Move W8, [X31+12]
	104 Compare W8, 0
	105 JumpIfEqual {109}
	106 Move X0, X19
	107 Move X1, X31
	108 Call Monitor.Exit, X0
	109 Compare X20, 0
	110 JumpIfNotEqual {113}
	111 Move X0, X21
	112 Call 0x1D2D690
	113 Move X0, X20
	114 Call 0x1C17F18
	115 Call 0x1991590

Method: System.String GetLocalPath()

Disassembly:
	0x0361C718 STR W31, [X31 + 0xC]
	0x0361C71C STR X21, [X31]
	0x0361C720 LDR W9, [X20 + 0x18]
	0x0361C724 CMP W8, W9
	0x0361C728 B.CS 0x361CB54
	0x0361C72C ADD X22, X20, W8, 0x1, UXTW
	0x0361C730 MOV W19, W23
	0x0361C734 MOV W23, W8
	0x0361C738 LDRH W8, [X22 + 0x20]!
	0x0361C73C CMP W8, 0x2F
	0x0361C740 B.EQ 0x361C778
	0x0361C744 CMP W8, 0x5C
	0x0361C748 B.NE 0x361C784
	0x0361C74C CBZ X21, 0x361CB58
	0x0361C750 MOVZ W1, 0x400000
	0x0361C754 MOV X0, X21
	0x0361C758 MOV X2, X31
	0x0361C75C BL 0x3629044
	0x0361C760 TBZ X0, 0x0, 0x361C7BC
	0x0361C764 LDR W8, [X20 + 0x18]
	0x0361C768 CMP W23, W8
	0x0361C76C B.CS 0x361CB54
	0x0361C770 MOVZ W8, 0x2F
	0x0361C774 STRH W8, [X22]
	0x0361C778 ADD W26, W26, 0x1
	0x0361C77C MOVZ W27, 0x1
	0x0361C780 B 0x361C7AC
	0x0361C784 AND W9, W26, 0xFFFF
	0x0361C788 CMP W9, 0x2
	0x0361C78C CSEL W28, W28, W19, CC
	0x0361C790 CMP W8, 0x2E
	0x0361C794 B.NE 0x361C7A4
	0x0361C798 MOV W26, W31
	0x0361C79C ADD W25, W25, 0x1
	0x0361C7A0 B 0x361C994
	0x0361C7A4 MOV W26, W31
	0x0361C7A8 MOV W27, W31
	0x0361C7AC ANDS W31, W25, 0xFFFF
	0x0361C7B0 B.EQ 0x361C91C
	0x0361C7B4 CBNZ X21, 0x361C7D8
	0x0361C7B8 B 0x361CB58
	0x0361C7BC AND W8, W26, 0xFFFF
	0x0361C7C0 CMP W8, 0x2
	0x0361C7C4 CSEL W28, W28, W19, CC
	0x0361C7C8 ANDS W31, W25, 0xFFFF
	0x0361C7CC MOV W26, W31
	0x0361C7D0 MOV W27, W31
	0x0361C7D4 B.EQ 0x361C9CC
	0x0361C7D8 MOVZ W1, 0x1000000
	0x0361C7DC MOV X0, X21
	0x0361C7E0 MOV X2, X31
	0x0361C7E4 BL 0x3629060
	0x0361C7E8 TBZ X0, 0x0, 0x361C800
	0x0361C7EC AND W8, W25, 0xFFFF
	0x0361C7F0 CMP W8, 0x2
	0x0361C7F4 B.LS 0x361C80C
	0x0361C7F8 MOVZ W19, 0x1
	0x0361C7FC B 0x361C874
	0x0361C800 MOV W9, W31
	0x0361C804 EOR W8, W27, 0x1
	0x0361C808 B 0x361C814
	0x0361C80C EOR W8, W27, 0x1
	0x0361C810 MOV W9, W8
	0x0361C814 CMP W9, 0x0
	0x0361C818 CSET W19, NE
	0x0361C81C CBNZ W9, 0x361C874
	0x0361C820 TBNZ X8, 0x0, 0x361C874
	0x0361C824 ADD W19, W23, 0x1
	0x0361C828 ADD W22, W19, W25, UXTH
	0x0361C82C CMP W22, W28, UXTH
	0x0361C830 B.NE 0x361C904
	0x0361C834 ADRP X8, 0xB1F000
	0x0361C838 LDR X8, [X8 + 0x48]
	0x0361C83C MOV X21, X24
	0x0361C840 LDR X0, [X8]
	0x0361C844 LDR W8, [X0 + 0xE0]
	0x0361C848 CBNZ W8, 0x361C850
	0x0361C84C BL 0x1C16DFC
	0x0361C850 MOV X0, X31
	0x0361C854 BL 0x362BC9C
	0x0361C858 AND W24, W25, 0xFFFF
	0x0361C85C CMP W24, 0x3
	0x0361C860 B.CC 0x361C9D4
	0x0361C864 TBNZ X0, 0x0, 0x361C9D4
	0x0361C868 MOV X24, X21
	0x0361C86C LDR X21, [X31]
	0x0361C870 B 0x361C91C
	0x0361C874 ADRP X8, 0xB1F000
	0x0361C878 LDR X8, [X8 + 0x48]
	0x0361C87C LDR X0, [X8]
	0x0361C880 LDR W8, [X0 + 0xE0]
	0x0361C884 CBNZ W8, 0x361C88C
	0x0361C888 BL 0x1C16DFC
	0x0361C88C MOV X0, X31
	0x0361C890 BL 0x362BC9C
	0x0361C894 LDR W9, [X31 + 0xC]
	0x0361C898 ANDS W31, W9, 0xFFFF
	0x0361C89C B.NE 0x361C920
	0x0361C8A0 TBZ X0, 0x0, 0x361C920
	0x0361C8A4 EOR W8, W19, 0x1
	0x0361C8A8 CBZ W8, 0x361C920
	0x0361C8AC ADD W19, W23, 0x1
	0x0361C8B0 ADD W22, W19, W25, UXTH
	0x0361C8B4 CMP W22, W28, UXTH
	0x0361C8B8 B.NE 0x361C9AC
	0x0361C8BC LDR W8, [X24]
	0x0361C8C0 AND W9, W22, 0xFFFF
	0x0361C8C4 SUB W8, W8, W22, UXTH
	0x0361C8C8 UBFM W3, W19, 0x1F, 0x1E
	0x0361C8CC UBFM W1, W9, 0x1F, 0x1E
	0x0361C8D0 UBFM W4, W8, 0x1F, 0x1E
	0x0361C8D4 MOV X0, X20
	0x0361C8D8 MOV X2, X20
	0x0361C8DC MOV X5, X31
	0x0361C8E0 BL 0x33A8A9C
	0x0361C8E4 LDR W8, [X24]
	0x0361C8E8 SUB W9, W19, W22, UXTH
	0x0361C8EC STR W31, [X31 + 0xC]
	0x0361C8F0 MOV W25, W31
	0x0361C8F4 ADD W8, W9, W8
	0x0361C8F8 MOV W28, W31
	0x0361C8FC STR W8, [X24]
	0x0361C900 B 0x361C994
	0x0361C904 ANDS W31, W28, 0xFFFF
	0x0361C908 B.NE 0x361C91C
	0x0361C90C LDR W8, [X24]
	0x0361C910 CMP W22, W8
	0x0361C914 B.EQ 0x361C834
	0x0361C918 MOV W28, W31
	0x0361C91C LDR W9, [X31 + 0xC]
	0x0361C920 CBZ W27, 0x361C980
	0x0361C924 ANDS W31, W9, 0xFFFF
	0x0361C928 B.EQ 0x361C988
	0x0361C92C LDR W8, [X24]
	0x0361C930 SUB W9, W9, 0x1
	0x0361C934 ADD W19, W28, 0x1
	0x0361C938 STR W9, [X31 + 0xC]
	0x0361C93C AND W9, W19, 0xFFFF
	0x0361C940 UBFM W1, W9, 0x1F, 0x1E
	0x0361C944 UBFM W9, W23, 0x1F, 0x1E
	0x0361C948 SUB W8, W8, W19, UXTH
	0x0361C94C ADD W3, W9, 0x2
	0x0361C950 UBFM W4, W8, 0x1F, 0x1E
	0x0361C954 MOV X0, X20
	0x0361C958 MOV X2, X20
	0x0361C95C MOV X5, X31
	0x0361C960 BL 0x33A8A9C
	0x0361C964 LDR W8, [X24]
	0x0361C968 SUB W9, W23, W19, UXTH
	0x0361C96C MOV W25, W31
	0x0361C970 ADD W8, W9, W8
	0x0361C974 ADD W8, W8, 0x1
	0x0361C978 STR W8, [X24]
	0x0361C97C B 0x361C990
	0x0361C980 MOV W25, W31
	0x0361C984 B 0x361C994
	0x0361C988 STR W31, [X31 + 0xC]
	0x0361C98C MOV W25, W31
	0x0361C990 MOV W28, W29
	0x0361C994 LDR W9, [X31 + 0x8]
	0x0361C998 SUB W29, W23, 0x1
	0x0361C99C AND W8, W29, 0xFFFF
	0x0361C9A0 CMP W8, W9
	0x0361C9A4 B.NE 0x361C720
	0x0361C9A8 B 0x361CA38
	0x0361C9AC ANDS W31, W28, 0xFFFF
	0x0361C9B0 B.NE 0x361C920
	0x0361C9B4 LDR W8, [X24]
	0x0361C9B8 CMP W22, W8
	0x0361C9BC MOV W8, W22
	0x0361C9C0 B.EQ 0x361C8C0
	0x0361C9C4 MOV W28, W31
	0x0361C9C8 B 0x361C920
	0x0361C9CC MOV W25, W26
	0x0361C9D0 B 0x361C994
	0x0361C9D4 LDR W8, [X21]
	0x0361C9D8 ANDS W31, W28, 0xFFFF
	0x0361C9DC CINC W22, W22, NE
	0x0361C9E0 AND W9, W22, 0xFFFF
	0x0361C9E4 SUB W8, W8, W22, UXTH
	0x0361C9E8 UBFM W1, W9, 0x1F, 0x1E
	0x0361C9EC UBFM W3, W19, 0x1F, 0x1E
	0x0361C9F0 UBFM W4, W8, 0x1F, 0x1E
	0x0361C9F4 MOV X0, X20
	0x0361C9F8 MOV X2, X20
	0x0361C9FC MOV X5, X31
	0x0361CA00 BL 0x33A8A9C
	0x0361CA04 LDR W8, [X21]
	0x0361CA08 SUB W9, W19, W22, UXTH
	0x0361CA0C CMP W24, 0x2
	0x0361CA10 MOV X24, X21
	0x0361CA14 ADD W8, W9, W8
	0x0361CA18 STR W8, [X21]
	0x0361CA1C LDR W8, [X31 + 0xC]
	0x0361CA20 LDR X21, [X31]
	0x0361CA24 MOV W25, W31
	0x0361CA28 MOV W28, W29
	0x0361CA2C CINC W8, W8, EQ
	0x0361CA30 STR W8, [X31 + 0xC]
	0x0361CA34 B 0x361C994
	0x0361CA38 LDRH W23, [X24]
	0x0361CA3C LDR W9, [X31 + 0xC]
	0x0361CA40 LDR W8, [X31 + 0x8]
	0x0361CA44 ADD W19, W8, 0x1
	0x0361CA48 CMP W23, W19, UXTH
	0x0361CA4C B.LS 0x361CB18
	0x0361CA50 CBZ X21, 0x361CB58
	0x0361CA54 MOVZ W1, 0x1000000
	0x0361CA58 MOV X0, X21
	0x0361CA5C MOV X2, X31
	0x0361CA60 MOV W22, W9
	0x0361CA64 BL 0x3629044
	0x0361CA68 AND W8, W26, 0xFFFF
	0x0361CA6C CMP W8, 0x1
	0x0361CA70 B.HI 0x361CB18
	0x0361CA74 TBZ X0, 0x0, 0x361CB18
	0x0361CA78 ANDS W31, W22, 0xFFFF
	0x0361CA7C AND W8, W19, 0xFFFF
	0x0361CA80 B.EQ 0x361CAA4
	0x0361CA84 CBZ X20, 0x361CB58
	0x0361CA88 LDR W9, [X20 + 0x18]
	0x0361CA8C CMP W8, W9
	0x0361CA90 B.CS 0x361CB54
	0x0361CA94 ADD X9, X20, W8, 0x1, UXTW
	0x0361CA98 LDRH W9, [X9 + 0x20]
	0x0361CA9C CMP W9, 0x2F
	0x0361CAA0 B.NE 0x361CAE0
	0x0361CAA4 ANDS W31, W25, 0xFFFF
	0x0361CAA8 B.EQ 0x361CB18
	0x0361CAAC AND W9, W25, 0xFFFF
	0x0361CAB0 ADD W10, W9, 0x1
	0x0361CAB4 CMP W10, W28, UXTH
	0x0361CAB8 B.NE 0x361CB3C
	0x0361CABC LDR W10, [X24]
	0x0361CAC0 ANDS W31, W28, 0xFFFF
	0x0361CAC4 CINC W19, W9, NE
	0x0361CAC8 UBFM W3, W8, 0x1F, 0x1E
	0x0361CACC AND W8, W19, 0xFFFF
	0x0361CAD0 SUB W9, W10, W19, UXTH
	0x0361CAD4 UBFM W1, W8, 0x1F, 0x1E
	0x0361CAD8 UBFM W4, W9, 0x1F, 0x1E
	0x0361CADC B 0x361CAFC
	0x0361CAE0 LDR W9, [X24]
	0x0361CAE4 ADD W19, W28, 0x1
	0x0361CAE8 AND W10, W19, 0xFFFF
	0x0361CAEC UBFM W3, W8, 0x1F, 0x1E
	0x0361CAF0 SUB W8, W9, W19, UXTH
	0x0361CAF4 UBFM W1, W10, 0x1F, 0x1E
	0x0361CAF8 UBFM W4, W8, 0x1F, 0x1E
	0x0361CAFC MOV X0, X20
	0x0361CB00 MOV X2, X20
	0x0361CB04 MOV X5, X31
	0x0361CB08 BL 0x33A8A9C
	0x0361CB0C LDR W8, [X24]
	0x0361CB10 SUB W8, W8, W19, UXTH
	0x0361CB14 STR W8, [X24]
	0x0361CB18 MOV X0, X20
	0x0361CB1C LDP X20, X19, [X31 + 0x60]
	0x0361CB20 LDP X22, X21, [X31 + 0x50]
	0x0361CB24 LDP X24, X23, [X31 + 0x40]
	0x0361CB28 LDP X26, X25, [X31 + 0x30]
	0x0361CB2C LDP X28, X27, [X31 + 0x20]
	0x0361CB30 LDP X29, X30, [X31 + 0x10]
	0x0361CB34 ADD X31, X31, 0x70
	0x0361CB38 RET
	0x0361CB3C ANDS W31, W28, 0xFFFF
	0x0361CB40 B.NE 0x361CB18
	0x0361CB44 LDR W11, [X24]
	0x0361CB48 CMP W10, W11
	0x0361CB4C B.EQ 0x361CAC0
	0x0361CB50 B 0x361CB18
	0x0361CB54 BL 0x1C16F28
	0x0361CB58 BL 0x1C16F20
	0x0361CB5C STR X30, [X31 - 0x40]!
	0x0361CB60 STP X24, X23, [X31 + 0x10]
	0x0361CB64 STP X22, X21, [X31 + 0x20]
	0x0361CB68 STP X20, X19, [X31 + 0x30]
	0x0361CB6C LDR X8, [X0 + 0x30]
	0x0361CB70 MOV W19, W2
	0x0361CB74 MOV W20, W1
	0x0361CB78 MOV X21, X0
	0x0361CB7C AND W22, W8, 0x7F
	0x0361CB80 TBZ X1, 0x4, 0x361CBD8
	0x0361CB84 ANDS X31, X8, 0xFFFF
	0x0361CB88 B.EQ 0x361CB94
	0x0361CB8C ORR W22, W22, 0x10
	0x0361CB90 B 0x361CBD8
	0x0361CB94 TBZ X8, 0x1B, 0x361CBD8
	0x0361CB98 LDR X8, [X21 + 0x38]
	0x0361CB9C CBZ X8, 0x361CC28
	0x0361CBA0 LDR X23, [X21 + 0x10]
	0x0361CBA4 LDRH W24, [X8 + 0x30]
	0x0361CBA8 MOV X0, X21
	0x0361CBAC BL 0x3618030
	0x0361CBB0 CBZ X23, 0x361CC28
	0x0361CBB4 ADD W8, W24, W0, UXTH
	0x0361CBB8 SUB W1, W8, 0x1
	0x0361CBBC MOV X0, X23
	0x0361CBC0 MOV X2, X31
	0x0361CBC4 BL 0x3222A1C
	0x0361CBC8 AND W8, W0, 0xFFFF
	0x0361CBCC ORR W9, W22, 0x10
	0x0361CBD0 CMP W8, 0x7C
	0x0361CBD4 CSEL W22, W9, W22, EQ
	0x0361CBD8 ANDS W31, W22, W20, 0x0
	0x0361CBDC B.EQ 0x361CC04
	0x0361CBE0 MOV X0, X21
	0x0361CBE4 MOV W1, W20
	0x0361CBE8 MOV W2, W22
	0x0361CBEC MOV W3, W19
	0x0361CBF0 LDP X20, X19, [X31 + 0x30]
	0x0361CBF4 LDP X22, X21, [X31 + 0x20]
	0x0361CBF8 LDP X24, X23, [X31 + 0x10]
	0x0361CBFC LDR X30, [X31], #0x40
	0x0361CC00 B 0x362132C
	0x0361CC04 MOV X0, X21
	0x0361CC08 MOV W1, W20
	0x0361CC0C BL 0x3620D94
	0x0361CC10 CBZ X0, 0x361CBE0
	0x0361CC14 LDP X20, X19, [X31 + 0x30]
	0x0361CC18 LDP X22, X21, [X31 + 0x20]
	0x0361CC1C LDP X24, X23, [X31 + 0x10]
	0x0361CC20 LDR X30, [X31], #0x40
	0x0361CC24 RET
	0x0361CC28 BL 0x1C16F20
	0x0361CC2C STR X30, [X31 - 0x20]!
	0x0361CC30 STP X20, X19, [X31 + 0x10]
	0x0361CC34 MOV X19, X0
	0x0361CC38 LDR X0, [X0 + 0x20]
	0x0361CC3C CBZ X0, 0x361CC9C
	0x0361CC40 MOV X1, X31
	0x0361CC44 BL 0x362CE34
	0x0361CC48 TBZ X0, 0x0, 0x361CC60
	0x0361CC4C LDR X1, [X19 + 0x30]
	0x0361CC50 TBNZ X1, 0x1E, 0x361CC6C
	0x0361CC54 MOV X0, X19
	0x0361CC58 BL 0x36180CC
	0x0361CC5C B 0x361CC6C
	0x0361CC60 MOV X0, X19
	0x0361CC64 MOV W1, W31
	0x0361CC68 BL 0x3619254
	0x0361CC6C LDRB W8, [X19 + 0x32]
	0x0361CC70 TBNZ X8, 0x7, 0x361CC84
	0x0361CC74 LDR X8, [X19 + 0x20]
	0x0361CC78 CBZ X8, 0x361CCEC
	0x0361CC7C LDR W0, [X8 + 0x1C]
	0x0361CC80 B 0x361CC90
	0x0361CC84 LDR X8, [X19 + 0x38]
	0x0361CC88 CBZ X8, 0x361CCEC
	0x0361CC8C LDRH W0, [X8 + 0x2E]
	0x0361CC90 LDP X20, X19, [X31 + 0x10]
	0x0361CC94 LDR X30, [X31], #0x20
	0x0361CC98 RET
	0x0361CC9C ADRP X0, 0xB1F000
	0x0361CCA0 LDR X0, [X0 + 0x150]
	0x0361CCA4 BL 0x1C16D08
	0x0361CCA8 MOV X1, X31
	0x0361CCAC BL 0x320A1E4
	0x0361CCB0 MOV X19, X0
	0x0361CCB4 ADRP X0, 0xAD7000
	0x0361CCB8 LDR X0, [X0 + 0x5B0]
	0x0361CCBC BL 0x1C16D08
	0x0361CCC0 BL 0x1C16F10
	0x0361CCC4 MOV X1, X19
	0x0361CCC8 MOV X2, X31
	0x0361CCCC MOV X20, X0
	0x0361CCD0 BL 0x337DF1C
	0x0361CCD4 ADRP X0, 0xB1F000
	0x0361CCD8 LDR X0, [X0 + 0x1C0]
	0x0361CCDC BL 0x1C16D08
	0x0361CCE0 MOV X1, X0
	0x0361CCE4 MOV X0, X20
	0x0361CCE8 BL 0x1C16DEC
	0x0361CCEC BL 0x1C16F20
	0x0361CCF0 STP X30, X21, [X31 - 0x20]!
	0x0361CCF4 STP X20, X19, [X31 + 0x10]
	0x0361CCF8 ADRP X20, 0xDC4000
	0x0361CCFC LDRB W8, [X20 + 0x481]
	0x0361CD00 MOV X19, X0

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+48], X30
	003 Move [X31+56], X27
	004 Move [X31+64], X26
	005 Move [X31+72], X25
	006 Move [X31+80], X24
	007 Move [X31+88], X23
	008 Move [X31+96], X22
	009 Move [X31+104], X21
	010 Move [X31+112], X20
	011 Move [X31+120], X19
	012 Move X20, 0xDC5000
	013 Move W8, [X20+1152]
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {36}
	019 Move X0, 0xAE1000
	020 Move X0, [X0+2264]
	021 Call 0x1C17CF4
	022 Move X0, 0xB20000
	023 Move X0, [X0+88]
	024 Call 0x1C17CF4
	025 Move X0, 0xADA000
	026 Move X0, [X0+2600]
	027 Call 0x1C17CF4
	028 Move X0, 0xB20000
	029 Move X0, [X0+192]
	030 Call 0x1C17CF4
	031 Move X0, 0xAE1000
	032 Move X0, [X0+2440]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X20+1152], W8
	036 Move [X31+44], W31
	037 Move W8, [X19+48]
	038 Move TEMP, X8
	039 And TEMP, TEMP, -2147483648
	040 Compare TEMP, -2147483648
	041 JumpIfEqual {44}
	042 Move X0, X19
	043 Call Uri.ParseRemaining, X0
	044 Move X8, [X19+56]
	045 Compare X8, 0
	046 JumpIfEqual {428}
	047 NotImplemented "Instruction LDRH not yet implemented."
	048 NotImplemented "Instruction LDRH not yet implemented."
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Move X0, X19
	051 Call Uri.get_IsFile, X0
	052 Move TEMP, X0
	053 And TEMP, TEMP, 1
	054 Compare TEMP, 1
	055 JumpIfNotEqual {81}
	056 Move X0, X19
	057 Call Uri.get_OriginalStringSwitched, X0
	058 And W31, W0, 1
	059 Move W8, 16
	060 Move W9, 24
	061 NotImplemented "Instruction CSEL not yet implemented."
	062 Move X0, [X19]
	063 Compare X0, 0
	064 JumpIfEqual {428}
	065 Move X8, 0xB20000
	066 Move X8, [X8+192]
	067 Move W2, 4
	068 Move X3, X31
	069 Move X1, [X8]
	070 Call String.StartsWith, X0, X1, X2
	071 Move TEMP, X0
	072 And TEMP, TEMP, 1
	073 Compare TEMP, 1
	074 JumpIfNotEqual {81}
	075 Move X0, X19
	076 Call Uri.get_IsLoopback, X0
	077 Move TEMP, X0
	078 And TEMP, TEMP, 1
	079 Compare TEMP, 1
	080 JumpIfNotEqual {252}
	081 Move W23, W31
	082 Move X20, [X19+48]
	083 Move X24, 0xADA000
	084 Move X24, [X24+2600]
	085 And X31, X20, 0x1FFFFFFF
	086 Move X0, [X24]
	087 Move W8, [X0+224]
	088 Compare W8, 0
	089 JumpIfNotEqual {92}
	090 Call 0x1C17DFC
	091 Move X0, [X24]
	092 Move X8, [X0+184]
	093 Move W9, [X8+114]
	094 Move W8, 1
	095 Compare W9, 0
	096 JumpIfNotEqual {100}
	097 Move W9, [X19+48]
	098 NotImplemented "Instruction BIC not yet implemented."
	099 Move W8, W31
	100 Or W8, W8, W23
	101 Compare W8, 0
	102 JumpIfEqual {127}
	103 Move X0, X19
	104 Move W1, W31
	105 Call Uri.EnsureHostString, X0, X1
	106 Move TEMP, X23
	107 And TEMP, TEMP, 1
	108 Compare TEMP, 1
	109 JumpIfEqual {132}
	110 Move X9, [X19+48]
	111 Move W8, 0x2014
	112 And X8, X9, X8
	113 Compare X8, 0
	114 JumpIfNotEqual {132}
	115 Move X8, [X19+56]
	116 Compare X8, 0
	117 JumpIfEqual {428}
	118 Move TEMP, X9
	119 And TEMP, TEMP, 0x10000000
	120 Compare TEMP, 0x10000000
	121 JumpIfEqual {190}
	122 NotImplemented "Instruction LDRH not yet implemented."
	123 Move TEMP, X9
	124 And TEMP, TEMP, 0x20000000
	125 Compare TEMP, 0x20000000
	126 JumpIfEqual {196}
	127 Move W1, 16
	128 NotImplemented "Instruction MOVK not yet implemented."
	129 Move W2, 2
	130 Move X0, X19
	131 Call Uri.GetUnescapedParts, X0, X1, X2
	132 Move [X31+44], W31
	133 Move X8, [X19+56]
	134 Compare X8, 0
	135 JumpIfEqual {428}
	136 Move X22, [X8+16]
	137 Compare X22, 0
	138 JumpIfEqual {428}
	139 Move X9, X20
	140 ShiftRight X9, 28
	141 And X9, X9, 0xFFFFFFF
	142 Or W23, W23, W9
	143 Move X9, 0xAE1000
	144 NotImplemented "Instruction LDRH not yet implemented."
	145 Move W10, [X22+16]
	146 NotImplemented "Instruction LDRH not yet implemented."
	147 Move X9, [X9+2264]
	148 Move X0, [X9]
	149 Subtract W9, W10, W21
	150 Add W8, W9, W8
	151 Add W1, W8, 3
	152 Call 0x1C17D6C
	153 Move X20, X0
	154 Compare W23, 0
	155 JumpIfEqual {234}
	156 Compare X20, 0
	157 JumpIfEqual {428}
	158 Move W8, [X20+24]
	159 Compare W8, 0
	160 JumpIfEqual {427}
	161 Move W9, 92
	162 NotImplemented "Instruction CMP not yet implemented."
	163 NotImplemented "Instruction STRH not yet implemented."
	164 NotImplemented "Instruction STRH not yet implemented."
	165 Move X8, 0xB20000
	166 Move X8, [X8+88]
	167 Move X0, [X8]
	168 Move W8, 2
	169 Move [X31+44], W8
	170 Move W23, [X22+16]
	171 Move W8, [X0+224]
	172 Move X25, [X19+32]
	173 Compare W8, 0
	174 JumpIfNotEqual {176}
	175 Call 0x1C17DFC
	176 Add X4, X31, 44
	177 Move W5, 0xFFFF
	178 Move W6, 0xFFFF
	179 Move W7, 0xFFFF
	180 Move X0, X22
	181 Move W1, W31
	182 Move W2, W23
	183 Move X3, X20
	184 Move [X31+24], X31
	185 Move [X31+16], W31
	186 Move [X31+8], X25
	187 Move [X31], W31
	188 Call UriHelper.UnescapeString, X0, X1, X2, X3, X4, X5, X6, X7, X8, X9, X10
	189 Move W25, [X31+44]
	190 NotImplemented "Instruction LDRH not yet implemented."
	191 Subtract W20, W10, 2
	192 Move TEMP, X9
	193 And TEMP, TEMP, 0x20000000
	194 Compare TEMP, 0x20000000
	195 JumpIfNotEqual {204}
	196 NotImplemented "Instruction LDRH not yet implemented."
	197 Move W11, 2
	198 NotImplemented "Instruction BIC not yet implemented."
	199 NotImplemented "Instruction CMP not yet implemented."
	200 NotImplemented "Instruction LDRH not yet implemented."
	201 NotImplemented "Instruction LDRH not yet implemented."
	202 NotImplemented "Instruction CMP not yet implemented."
	203 Move X20, [X19+16]
	204 Move X0, [X19+16]
	205 Move TEMP, X9
	206 And TEMP, TEMP, 0x8000000
	207 Compare TEMP, 0x8000000
	208 JumpIfNotEqual {359}
	209 Compare X0, 0
	210 JumpIfEqual {428}
	211 Move W1, W20
	212 Move X2, X31
	213 Call String.get_Chars, X0, X1
	214 And W8, W0, 0xFFFF
	215 NotImplemented "Instruction CMP not yet implemented."
	216 Move X0, [X19+16]
	217 Compare X0, 0
	218 JumpIfEqual {428}
	219 Move W1, W20
	220 Move X2, X31
	221 Call String.get_Chars, X0, X1
	222 And W8, W0, 0xFFFF
	223 NotImplemented "Instruction CMP not yet implemented."
	224 Move X8, [X19+56]
	225 Compare X8, 0
	226 JumpIfEqual {428}
	227 Move X0, [X19+16]
	228 Compare X0, 0
	229 JumpIfEqual {428}
	230 NotImplemented "Instruction LDRH not yet implemented."
	231 NotImplemented "Instruction ORN not yet implemented."
	232 Add W1, W20, 1
	233 Add W2, W8, W9
	234 Move X0, [X19+16]
	235 Compare X0, 0
	236 JumpIfEqual {428}
	237 Move W1, W21
	238 Move X2, X31
	239 Call String.get_Chars, X0, X1
	240 And W8, W0, 0xFFFF
	241 NotImplemented "Instruction CMP not yet implemented."
	242 Move X0, [X19+16]
	243 Compare X0, 0
	244 JumpIfEqual {428}
	245 Move W1, W21
	246 Move X2, X31
	247 Call String.get_Chars, X0, X1
	248 And W8, W0, 0xFFFF
	249 NotImplemented "Instruction CMP not yet implemented."
	250 Move W25, W31
	251 Add W21, W21, 1
	252 Move X8, [X19+56]
	253 Compare X8, 0
	254 JumpIfEqual {428}
	255 NotImplemented "Instruction LDRH not yet implemented."
	256 Move W21, 16
	257 Move W22, 24
	258 NotImplemented "Instruction LDRH not yet implemented."
	259 NotImplemented "Instruction CMP not yet implemented."
	260 NotImplemented "Instruction CSET not yet implemented."
	261 Move X0, X19
	262 Call Uri.get_OriginalStringSwitched, X0
	263 And W31, W0, 1
	264 NotImplemented "Instruction CSEL not yet implemented."
	265 Move X0, [X19]
	266 Compare X0, 0
	267 JumpIfEqual {428}
	268 Move W1, W20
	269 Move X2, X31
	270 Call String.get_Chars, X0, X1
	271 And W8, W0, 0xFFFF
	272 NotImplemented "Instruction CMP not yet implemented."
	273 Move X8, [X19+56]
	274 Add W20, W20, 1
	275 Compare X8, 0
	276 JumpIfNotEqual {258}
	277 Move W25, W31
	278 Move X9, [X19+48]
	279 Move X8, [X19+56]
	280 Move W10, 10
	281 And X31, X9, 0x3FFFFFFF
	282 NotImplemented "Instruction CSEL not yet implemented."
	283 And X31, X9, 31
	284 NotImplemented "Instruction CSEL not yet implemented."
	285 Compare X8, 0
	286 JumpIfEqual {428}
	287 Move X9, 0xB20000
	288 Move X9, [X9+88]
	289 Move X23, [X19+16]
	290 NotImplemented "Instruction LDRH not yet implemented."
	291 Move X27, [X19+32]
	292 Move X0, [X9]
	293 Move W8, [X0+224]
	294 Compare W8, 0
	295 JumpIfNotEqual {297}
	296 Call 0x1C17DFC
	297 Move W8, 1
	298 Add X4, X31, 44
	299 Move W5, 0xFFFF
	300 Move W6, 0xFFFF
	301 Move W7, 0xFFFF
	302 Move X0, X23
	303 Move W1, W21
	304 Move W2, W22
	305 Move X3, X20
	306 Move [X31+24], X31
	307 Move [X31+8], X27
	308 Move [X31+16], W8
	309 Move [X31], W26
	310 Call UriHelper.UnescapeString, X0, X1, X2, X3, X4, X5, X6, X7, X8, X9, X10
	311 Compare X20, 0
	312 JumpIfEqual {428}
	313 Move W8, [X20+24]
	314 NotImplemented "Instruction CMP not yet implemented."
	315 NotImplemented "Instruction LDRH not yet implemented."
	316 NotImplemented "Instruction CMP not yet implemented."
	317 Move W8, 58
	318 NotImplemented "Instruction STRH not yet implemented."
	319 Move X8, [X19+48]
	320 Move TEMP, X8
	321 And TEMP, TEMP, 0x2000
	322 Compare TEMP, 0x2000
	323 JumpIfNotEqual {338}
	324 Move X0, [X24]
	325 Move X19, [X19+32]
	326 Add W10, W25, 2
	327 And X31, X8, 0xFFFFFFF
	328 Move W9, [X0+224]
	329 NotImplemented "Instruction CSEL not yet implemented."
	330 Compare W9, 0
	331 JumpIfNotEqual {333}
	332 Call 0x1C17DFC
	333 Add X2, X31, 44
	334 Move X0, X20
	335 Move W1, W21
	336 Move X3, X19
	337 Call Uri.Compress, X0, X1, X2, X3
	338 Move W3, [X31+44]
	339 And W8, W3, 0xFFFF
	340 Move W10, [X20+24]
	341 Move W9, W31
	342 Move W11, 92
	343 NotImplemented "Instruction CMP not yet implemented."
	344 Add X12, X20, W9
	345 NotImplemented "Instruction LDRH not yet implemented."
	346 NotImplemented "Instruction CMP not yet implemented."
	347 NotImplemented "Instruction STRH not yet implemented."
	348 Add W9, W9, 1
	349 NotImplemented "Instruction CMP not yet implemented."
	350 Move X0, X31
	351 Move X1, X20
	352 Move W2, W31
	353 Move X4, X31
	354 Call String.CreateString, X0, X1, X2, X3
	355 Move X8, [X19+56]
	356 Compare X8, 0
	357 JumpIfEqual {428}
	358 Move X0, [X19+16]
	359 Compare X0, 0
	360 JumpIfEqual {428}
	361 NotImplemented "Instruction LDRH not yet implemented."
	362 Move W1, W20
	363 Subtract W2, W8, W20
	364 Move X3, X31
	365 Call String.Substring, X0, X1, X2
	366 Move X20, X0
	367 Move W8, [X19+51]
	368 Move TEMP, X8
	369 And TEMP, TEMP, 8
	370 Compare TEMP, 8
	371 JumpIfNotEqual {394}
	372 Compare X20, 0
	373 JumpIfEqual {428}
	374 Move W1, 1
	375 Move X0, X20
	376 Move X2, X31
	377 Call String.get_Chars, X0, X1
	378 And W8, W0, 0xFFFF
	379 NotImplemented "Instruction CMP not yet implemented."
	380 Move W1, 1
	381 Move W2, 1
	382 Move X0, X20
	383 Move X3, X31
	384 Call String.Remove, X0, X1, X2
	385 Compare X0, 0
	386 JumpIfEqual {428}
	387 Move X8, 0xAE1000
	388 Move X8, [X8+2440]
	389 Move W1, 1
	390 Move X3, X31
	391 Move X2, [X8]
	392 Call String.Insert, X0, X1, X2
	393 Move X20, X0
	394 Compare X20, 0
	395 JumpIfEqual {428}
	396 Move W8, [X20+16]
	397 NotImplemented "Instruction CMP not yet implemented."
	398 Move W19, W31
	399 Move X0, X20
	400 Move W1, W19
	401 Move X2, X31
	402 Call String.get_Chars, X0, X1
	403 And W8, W0, 0xFFFF
	404 NotImplemented "Instruction CMP not yet implemented."
	405 Move W8, [X20+16]
	406 Add W19, W19, 1
	407 NotImplemented "Instruction CMP not yet implemented."
	408 Move W1, 47
	409 Move W2, 92
	410 Move X0, X20
	411 Move X3, X31
	412 Call String.Replace, X0, X1, X2
	413 Move X20, X0
	414 Move X0, X20
	415 Move X20, [X31+112]
	416 Move X19, [X31+120]
	417 Move X22, [X31+96]
	418 Move X21, [X31+104]
	419 Move X24, [X31+80]
	420 Move X23, [X31+88]
	421 Move X26, [X31+64]
	422 Move X25, [X31+72]
	423 Move X30, [X31+48]
	424 Move X27, [X31+56]
	425 Add X31, X31, 128
	426 Return X0
	427 Call 0x1C17F28
	428 Call 0x1C17F20

Method: System.Int32 get_Port()

Disassembly:
	0x0361DC2C LDP X22, X21, [X31 + 0x10]
	0x0361DC30 LDR X30, [X31], #0x30
	0x0361DC34 B 0x361CB5C
	0x0361DC38 BL 0x1C16F20
	0x0361DC3C ADRP X0, 0xADE000
	0x0361DC40 LDR X0, [X0 + 0x760]
	0x0361DC44 BL 0x1C16D08
	0x0361DC48 BL 0x1C16F10
	0x0361DC4C MOV X19, X0
	0x0361DC50 ADRP X0, 0xB1E000
	0x0361DC54 LDR X0, [X0 + 0x200]
	0x0361DC58 BL 0x1C16D08
	0x0361DC5C MOV X1, X0
	0x0361DC60 MOV X0, X19
	0x0361DC64 MOV X2, X31
	0x0361DC68 BL 0x3316014
	0x0361DC6C ADRP X0, 0xB1E000
	0x0361DC70 LDR X0, [X0 + 0x208]
	0x0361DC74 BL 0x1C16D08
	0x0361DC78 MOV X1, X0
	0x0361DC7C MOV X0, X19
	0x0361DC80 BL 0x1C16DEC
	0x0361DC84 CMP X0, X1
	0x0361DC88 B.EQ 0x361DCB0
	0x0361DC8C MOV X8, X0
	0x0361DC90 MOV W0, W31
	0x0361DC94 CBZ X8, 0x361DCB4
	0x0361DC98 CBZ X1, 0x361DCB4
	0x0361DC9C LDR X9, [X1]
	0x0361DCA0 MOV X0, X1
	0x0361DCA4 MOV X1, X8
	0x0361DCA8 LDP X3, X2, [X9 + 0x138]
	0x0361DCAC BR X3
	0x0361DCB0 MOVZ W0, 0x1
	0x0361DCB4 RET
	0x0361DCB8 SUB X31, X31, 0x60
	0x0361DCBC STP X30, X27, [X31 + 0x10]
	0x0361DCC0 STP X26, X25, [X31 + 0x20]
	0x0361DCC4 STP X24, X23, [X31 + 0x30]
	0x0361DCC8 STP X22, X21, [X31 + 0x40]
	0x0361DCCC STP X20, X19, [X31 + 0x50]
	0x0361DCD0 ADRP X21, 0xDC3000
	0x0361DCD4 LDRB W8, [X21 + 0x487]
	0x0361DCD8 MOV X20, X1
	0x0361DCDC MOV X19, X0
	0x0361DCE0 TBNZ X8, 0x0, 0x361DD10
	0x0361DCE4 ADRP X0, 0xB1E000
	0x0361DCE8 LDR X0, [X0 + 0x160]
	0x0361DCEC BL 0x1C16CF4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X0
	005 Move X0, [X0+32]
	006 Compare X0, 0
	007 JumpIfEqual {41}
	008 Move X1, X31
	009 Call UriParser.get_IsSimple, X0
	010 Move TEMP, X0
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfNotEqual {21}
	014 Move X1, [X19+48]
	015 Move TEMP, X1
	016 And TEMP, TEMP, 0x40000000
	017 Compare TEMP, 0x40000000
	018 JumpIfEqual {24}
	019 Move X0, X19
	020 Call Uri.CreateUriInfo, X0, X1
	021 Move X0, X19
	022 Move W1, W31
	023 Call Uri.EnsureHostString, X0, X1
	024 Move W8, [X19+50]
	025 Move TEMP, X8
	026 And TEMP, TEMP, 128
	027 Compare TEMP, 128
	028 JumpIfEqual {33}
	029 Move X8, [X19+32]
	030 Compare X8, 0
	031 JumpIfEqual {61}
	032 Move W0, [X8+28]
	033 Move X8, [X19+56]
	034 Compare X8, 0
	035 JumpIfEqual {61}
	036 NotImplemented "Instruction LDRH not yet implemented."
	037 Move X20, [X31+16]
	038 Move X19, [X31+24]
	039 Move X30, [X31+32]
	040 Return X0
	041 Move X0, 0xB1F000
	042 Move X0, [X0+336]
	043 Call 0x1C17D08
	044 Move X1, X31
	045 Call SR.GetString, X0
	046 Move X19, X0
	047 Move X0, 0xAD7000
	048 Move X0, [X0+1456]
	049 Call 0x1C17D08
	050 Call 0x1C17F10
	051 Move X1, X19
	052 Move X2, X31
	053 Move X20, X0
	054 Call InvalidOperationException..ctor, X0, X1
	055 Move X0, 0xB1F000
	056 Move X0, [X0+448]
	057 Call 0x1C17D08
	058 Move X1, X0
	059 Move X0, X20
	060 Call 0x1C17DEC
	061 Call 0x1C17F20

Method: System.String get_Query()

Disassembly:
	0x0361DCF0 ADRP X0, 0xAD8000
	0x0361DCF4 LDR X0, [X0 + 0x278]
	0x0361DCF8 BL 0x1C16CF4
	0x0361DCFC ADRP X0, 0xAD8000
	0x0361DD00 LDR X0, [X0 + 0xA28]
	0x0361DD04 BL 0x1C16CF4
	0x0361DD08 MOVZ W8, 0x1
	0x0361DD0C STRB W8, [X21 + 0x487]
	0x0361DD10 CBZ X20, 0x361DD6C
	0x0361DD14 CMP X19, X20
	0x0361DD18 B.EQ 0x361DE0C
	0x0361DD1C ADRP X9, 0xAD8000
	0x0361DD20 LDR X9, [X9 + 0xA28]
	0x0361DD24 LDR X8, [X20]
	0x0361DD28 LDR X0, [X9]
	0x0361DD2C LDRB W10, [X8 + 0x130]
	0x0361DD30 LDRB W9, [X0 + 0x130]
	0x0361DD34 CMP W10, W9
	0x0361DD38 B.CC 0x361DD50
	0x0361DD3C LDR X10, [X8 + 0xC8]
	0x0361DD40 ADD X9, X10, X9, 0x3, LSL
	0x0361DD44 LDUR X9, [X9 - 0x8]
	0x0361DD48 CMP X9, X0
	0x0361DD4C B.EQ 0x361DDA4
	0x0361DD50 ADRP X9, 0xAD8000
	0x0361DD54 LDR X9, [X9 + 0x278]
	0x0361DD58 STR X31, [X31 + 0x8]
	0x0361DD5C LDR X9, [X9]
	0x0361DD60 CMP X8, X9
	0x0361DD64 CSEL X20, X20, X31, EQ
	0x0361DD68 B.EQ 0x361DD74
	0x0361DD6C MOV W0, W31
	0x0361DD70 B 0x361DE10
	0x0361DD74 LDR W8, [X0 + 0xE0]
	0x0361DD78 CBNZ W8, 0x361DD80
	0x0361DD7C BL 0x1C16DFC
	0x0361DD80 ADD X2, X31, 0x8
	0x0361DD84 MOV X0, X20
	0x0361DD88 MOV W1, W31
	0x0361DD8C BL 0x361E23C
	0x0361DD90 MOV W8, W0
	0x0361DD94 MOV W0, W31
	0x0361DD98 TBZ X8, 0x0, 0x361DE10
	0x0361DD9C LDR X20, [X31 + 0x8]
	0x0361DDA0 B 0x361DDA8
	0x0361DDA4 STR X20, [X31 + 0x8]
	0x0361DDA8 CBZ X20, 0x361E238
	0x0361DDAC LDR X21, [X19 + 0x10]
	0x0361DDB0 LDR X1, [X20 + 0x10]
	0x0361DDB4 CMP X21, X1
	0x0361DDB8 B.EQ 0x361DE0C
	0x0361DDBC LDR X8, [X19 + 0x20]
	0x0361DDC0 LDR X9, [X20 + 0x20]
	0x0361DDC4 CMP X8, 0x0
	0x0361DDC8 CSET W10, EQ
	0x0361DDCC CMP X9, 0x0
	0x0361DDD0 CSET W9, NE
	0x0361DDD4 CMP W10, W9
	0x0361DDD8 B.EQ 0x361DD6C
	0x0361DDDC CBZ X8, 0x361DE30
	0x0361DDE0 LDR X8, [X19 + 0x30]
	0x0361DDE4 TBZ X8, 0x1F, 0x361DDF0
	0x0361DDE8 LDR W9, [X20 + 0x30]
	0x0361DDEC TBNZ X9, 0x1F, 0x361DEF8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xDC4000
	006 Move W8, [X20+1153]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xB1F000
	013 Move X0, [X0+352]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+1153], W8
	017 Move X8, [X19+32]
	018 Compare X8, 0
	019 JumpIfEqual {61}
	020 Move X1, [X19+48]
	021 Move TEMP, X1
	022 And TEMP, TEMP, 0x40000000
	023 Compare TEMP, 0x40000000
	024 JumpIfEqual {27}
	025 Move X0, X19
	026 Call Uri.CreateUriInfo, X0, X1
	027 Move X21, [X19+56]
	028 Compare X21, 0
	029 JumpIfEqual {60}
	030 Move X20, [X21+64]
	031 Compare X20, 0
	032 JumpIfNotEqual {43}
	033 Move X8, 0xB1F000
	034 Move X8, [X8+352]
	035 Move X0, [X8]
	036 Call 0x1C17F10
	037 Move X1, X31
	038 Move X20, X0
	039 Call MoreInfo..ctor, X0
	040 Move [X21+64], X20
	041 Compare X20, 0
	042 JumpIfEqual {60}
	043 Move X0, [X20+24]
	044 Compare X0, 0
	045 JumpIfNotEqual {55}
	046 Move W1, 32
	047 NotImplemented "Instruction MOVK not yet implemented."
	048 Move W2, 1
	049 Move X0, X19
	050 Call Uri.GetComponents, X0, X1, X2
	051 Move X8, [X21+64]
	052 Compare X8, 0
	053 JumpIfEqual {60}
	054 Move [X8+24], X0
	055 Move X20, [X31+16]
	056 Move X19, [X31+24]
	057 Move X30, [X31+32]
	058 Move X21, [X31+40]
	059 Return X0
	060 Call 0x1C17F20
	061 Move X0, 0xB1F000
	062 Move X0, [X0+336]
	063 Call 0x1C17D08
	064 Move X1, X31
	065 Call SR.GetString, X0
	066 Move X19, X0
	067 Move X0, 0xAD7000
	068 Move X0, [X0+1456]
	069 Call 0x1C17D08
	070 Call 0x1C17F10
	071 Move X1, X19
	072 Move X2, X31
	073 Move X20, X0
	074 Call InvalidOperationException..ctor, X0, X1
	075 Move X0, 0xB1F000
	076 Move X0, [X0+456]
	077 Call 0x1C17D08
	078 Move X1, X0
	079 Move X0, X20
	080 Call 0x1C17DEC

Method: System.String get_Fragment()

Disassembly:
	0x0361DDF0 ANDS X31, X8, 0x1FFFFFFF
	0x0361DDF4 B.EQ 0x361DE7C
	0x0361DDF8 MOVZ W2, 0x5
	0x0361DDFC MOV X0, X21
	0x0361DE00 MOV X3, X31
	0x0361DE04 BL 0x322590C
	0x0361DE08 CBNZ W0, 0x361DEF8
	0x0361DE0C MOVZ W0, 0x1
	0x0361DE10 LDP X20, X19, [X31 + 0x50]
	0x0361DE14 LDP X22, X21, [X31 + 0x40]
	0x0361DE18 LDP X24, X23, [X31 + 0x30]
	0x0361DE1C LDP X26, X25, [X31 + 0x20]
	0x0361DE20 LDP X30, X27, [X31 + 0x10]
	0x0361DE24 AND W0, W0, 0x1
	0x0361DE28 ADD X31, X31, 0x60
	0x0361DE2C RET
	0x0361DE30 MOV X0, X19
	0x0361DE34 BL 0x361CF60
	0x0361DE38 ANDS W31, W0, 0x1
	0x0361DE3C MOVZ W8, 0x10
	0x0361DE40 MOVZ W9, 0x18
	0x0361DE44 CSEL X8, X9, X8, NE
	0x0361DE48 LDR X19, [X19, X8, LSL]
	0x0361DE4C MOV X0, X20
	0x0361DE50 BL 0x361CF60
	0x0361DE54 CBZ X19, 0x361E238
	0x0361DE58 ANDS W31, W0, 0x1
	0x0361DE5C MOVZ W8, 0x10
	0x0361DE60 MOVZ W9, 0x18
	0x0361DE64 CSEL X8, X9, X8, NE
	0x0361DE68 LDR X1, [X20, X8, LSL]
	0x0361DE6C MOV X0, X19
	0x0361DE70 MOV X2, X31
	0x0361DE74 BL 0x322693C
	0x0361DE78 B 0x361DE10
	0x0361DE7C CBZ X21, 0x361E238
	0x0361DE80 CBZ X1, 0x361E238
	0x0361DE84 LDR W8, [X21 + 0x10]
	0x0361DE88 LDR W9, [X1 + 0x10]
	0x0361DE8C CMP W8, W9
	0x0361DE90 B.NE 0x361DEF8
	0x0361DE94 MOV X0, X31
	0x0361DE98 BL 0x32C1424
	0x0361DE9C LDR X23, [X20 + 0x10]
	0x0361DEA0 MOV W22, W0
	0x0361DEA4 CBZ X23, 0x361DEB4
	0x0361DEA8 MOV X0, X31
	0x0361DEAC BL 0x32C1424
	0x0361DEB0 ADD X23, X23, W0, SXTW
	0x0361DEB4 LDR X8, [X19 + 0x10]
	0x0361DEB8 CBZ X8, 0x361E238
	0x0361DEBC LDR W8, [X8 + 0x10]
	0x0361DEC0 ADD X10, X21, W22, SXTW
	0x0361DEC4 SUB W9, W8, 0x1
	0x0361DEC8 MOV W11, W9
	0x0361DECC TBNZ X11, 0x1F, 0x361DEE8
	0x0361DED0 LDRH W12, [X10, W11, UXTW]
	0x0361DED4 LDRH W13, [X23, W11, UXTW]
	0x0361DED8 SUB W11, W11, 0x1
	0x0361DEDC CMP W12, W13
	0x0361DEE0 B.EQ 0x361DECC
	0x0361DEE4 B 0x361DEF8
	0x0361DEE8 ADDS W31, W9, 0x2
	0x0361DEEC MOVZ W0, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xDC4000
	006 Move W8, [X20+1154]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xB1F000
	013 Move X0, [X0+352]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+1154], W8
	017 Move X8, [X19+32]
	018 Compare X8, 0
	019 JumpIfEqual {61}
	020 Move X1, [X19+48]
	021 Move TEMP, X1
	022 And TEMP, TEMP, 0x40000000
	023 Compare TEMP, 0x40000000
	024 JumpIfEqual {27}
	025 Move X0, X19
	026 Call Uri.CreateUriInfo, X0, X1
	027 Move X21, [X19+56]
	028 Compare X21, 0
	029 JumpIfEqual {60}
	030 Move X20, [X21+64]
	031 Compare X20, 0
	032 JumpIfNotEqual {43}
	033 Move X8, 0xB1F000
	034 Move X8, [X8+352]
	035 Move X0, [X8]
	036 Call 0x1C17F10
	037 Move X1, X31
	038 Move X20, X0
	039 Call MoreInfo..ctor, X0
	040 Move [X21+64], X20
	041 Compare X20, 0
	042 JumpIfEqual {60}
	043 Move X0, [X20+32]
	044 Compare X0, 0
	045 JumpIfNotEqual {55}
	046 Move W1, 64
	047 NotImplemented "Instruction MOVK not yet implemented."
	048 Move W2, 1
	049 Move X0, X19
	050 Call Uri.GetComponents, X0, X1, X2
	051 Move X8, [X21+64]
	052 Compare X8, 0
	053 JumpIfEqual {60}
	054 Move [X8+32], X0
	055 Move X20, [X31+16]
	056 Move X19, [X31+24]
	057 Move X30, [X31+32]
	058 Move X21, [X31+40]
	059 Return X0
	060 Call 0x1C17F20
	061 Move X0, 0xB1F000
	062 Move X0, [X0+336]
	063 Call 0x1C17D08
	064 Move X1, X31
	065 Call SR.GetString, X0
	066 Move X19, X0
	067 Move X0, 0xAD7000
	068 Move X0, [X0+1456]
	069 Call 0x1C17D08
	070 Call 0x1C17F10
	071 Move X1, X19
	072 Move X2, X31
	073 Move X20, X0
	074 Call InvalidOperationException..ctor, X0, X1
	075 Move X0, 0xB1F000
	076 Move X0, [X0+464]
	077 Call 0x1C17D08
	078 Move X1, X0
	079 Move X0, X20
	080 Call 0x1C17DEC

Method: System.String get_Scheme()

Disassembly:
	0x0361DEF0 B.GT 0x361DE10
	0x0361DEF4 CBZ W8, 0x361DE10
	0x0361DEF8 LDR X1, [X19 + 0x30]
	0x0361DEFC TBNZ X1, 0x1E, 0x361DF08
	0x0361DF00 MOV X0, X19
	0x0361DF04 BL 0x36180CC
	0x0361DF08 CBZ X20, 0x361E238
	0x0361DF0C LDR X1, [X20 + 0x30]
	0x0361DF10 TBNZ X1, 0x1E, 0x361DF1C
	0x0361DF14 MOV X0, X20
	0x0361DF18 BL 0x36180CC
	0x0361DF1C LDRB W8, [X19 + 0x33]
	0x0361DF20 TBNZ X8, 0x0, 0x361DFC0
	0x0361DF24 LDRB W8, [X20 + 0x33]
	0x0361DF28 TBNZ X8, 0x0, 0x361DFC0
	0x0361DF2C LDR X0, [X19 + 0x20]
	0x0361DF30 CBZ X0, 0x361E238
	0x0361DF34 MOV X1, X31
	0x0361DF38 BL 0x362CE34
	0x0361DF3C TBZ X0, 0x0, 0x361DFC0
	0x0361DF40 LDR X0, [X20 + 0x20]
	0x0361DF44 CBZ X0, 0x361E238
	0x0361DF48 MOV X1, X31
	0x0361DF4C BL 0x362CE34
	0x0361DF50 TBZ X0, 0x0, 0x361DFC0
	0x0361DF54 LDRB W8, [X19 + 0x33]
	0x0361DF58 TBZ X8, 0x1, 0x361DF64
	0x0361DF5C LDRB W8, [X20 + 0x33]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X0+32]
	005 Compare X8, 0
	006 JumpIfEqual {12}
	007 Move X0, [X8+32]
	008 Move X20, [X31+16]
	009 Move X19, [X31+24]
	010 Move X30, [X31+32]
	011 Return X0
	012 Move X0, 0xB1F000
	013 Move X0, [X0+336]
	014 Call 0x1C17D08
	015 Move X1, X31
	016 Call SR.GetString, X0
	017 Move X19, X0
	018 Move X0, 0xAD7000
	019 Move X0, [X0+1456]
	020 Call 0x1C17D08
	021 Call 0x1C17F10
	022 Move X1, X19
	023 Move X2, X31
	024 Move X20, X0
	025 Call InvalidOperationException..ctor, X0, X1
	026 Move X0, 0xB1F000
	027 Move X0, [X0+472]
	028 Call 0x1C17D08
	029 Move X1, X0
	030 Move X0, X20
	031 Call 0x1C17DEC

Method: System.Boolean get_OriginalStringSwitched()

Disassembly:
	0x0361DF60 TBNZ X8, 0x1, 0x361E110
	0x0361DF64 MOV X0, X19
	0x0361DF68 MOV W1, W31
	0x0361DF6C BL 0x3619254
	0x0361DF70 MOV X0, X20
	0x0361DF74 MOV W1, W31
	0x0361DF78 BL 0x3619254
	0x0361DF7C LDR X9, [X19 + 0x38]
	0x0361DF80 CBZ X9, 0x361E238
	0x0361DF84 LDR X8, [X20 + 0x38]
	0x0361DF88 CBZ X8, 0x361E238
	0x0361DF8C LDR X0, [X9 + 0x10]
	0x0361DF90 CBZ X0, 0x361E238
	0x0361DF94 LDR X1, [X8 + 0x10]
	0x0361DF98 MOV X2, X31
	0x0361DF9C BL 0x322693C
	0x0361DFA0 TBZ X0, 0x0, 0x361DD6C
	0x0361DFA4 MOV X0, X19

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move W8, [X0+64]
	004 Move X19, X0
	005 Compare W8, 0
	006 JumpIfEqual {12}
	007 Move W8, [X19+52]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 2
	010 Compare TEMP, 2
	011 JumpIfEqual {26}
	012 Move X0, X19
	013 Call Uri.get_AllowIdn, X0
	014 Move TEMP, X0
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfNotEqual {27}
	018 Move X8, [X19+48]
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {26}
	023 Move X0, X8
	024 ShiftRight X0, 36
	025 And X0, X0, 15
	026 Move W0, 1
	027 Move W0, W31
	028 Move X30, [X31+16]
	029 Move X19, [X31+24]
	030 Return X0

Method: System.String get_OriginalString()

Disassembly:
	0x0361B77C MOVZ W8, 0x1
	0x0361B780 STRB W8, [X20 + 0x480]
	0x0361B784 STR W31, [X31 + 0x2C]
	0x0361B788 LDR W8, [X19 + 0x30]
	0x0361B78C TBNZ X8, 0x1F, 0x361B798
	0x0361B790 MOV X0, X19
	0x0361B794 BL 0x3618664
	0x0361B798 LDR X8, [X19 + 0x38]
	0x0361B79C CBZ X8, 0x361BD00
	0x0361B7A0 LDRH W9, [X8 + 0x2C]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Call Uri.get_OriginalStringSwitched, X0
	005 And W31, W0, 1
	006 Move W8, 16
	007 Move W9, 24
	008 NotImplemented "Instruction CSEL not yet implemented."
	009 Move X0, [X19]
	010 Move X30, [X31+16]
	011 Move X19, [X31+24]
	012 Return X0

Method: System.String get_DnsSafeHost()

Disassembly:
	0x0361DFA8 BL 0x361CC2C
	0x0361DFAC MOV W21, W0
	0x0361DFB0 MOV X0, X20
	0x0361DFB4 BL 0x361CC2C
	0x0361DFB8 CMP W21, W0
	0x0361DFBC B.NE 0x361DD6C
	0x0361DFC0 LDR X24, [X19 + 0x38]
	0x0361DFC4 CBZ X24, 0x361E238
	0x0361DFC8 LDR X21, [X24 + 0x40]
	0x0361DFCC LDR X25, [X20 + 0x38]
	0x0361DFD0 CBNZ X21, 0x361DFF4
	0x0361DFD4 ADRP X8, 0xB1E000
	0x0361DFD8 LDR X8, [X8 + 0x160]
	0x0361DFDC LDR X0, [X8]
	0x0361DFE0 BL 0x1C16F10
	0x0361DFE4 MOV X1, X31
	0x0361DFE8 MOV X21, X0
	0x0361DFEC BL 0x362A7C4
	0x0361DFF0 STR X21, [X24 + 0x40]
	0x0361DFF4 CBZ X25, 0x361E238
	0x0361DFF8 LDR X22, [X25 + 0x40]
	0x0361DFFC CBNZ X22, 0x361E024
	0x0361E000 ADRP X8, 0xB1D000
	0x0361E004 LDR X8, [X8 + 0x160]
	0x0361E008 LDR X0, [X8]
	0x0361E00C BL 0x1C16F10
	0x0361E010 MOV X1, X31
	0x0361E014 MOV X22, X0
	0x0361E018 BL 0x362A7C4
	0x0361E01C STR X22, [X25 + 0x40]
	0x0361E020 LDR X21, [X24 + 0x40]
	0x0361E024 CBZ X21, 0x361E238
	0x0361E028 LDR X21, [X21 + 0x38]
	0x0361E02C CBNZ X21, 0x361E054
	0x0361E030 MOVZ W1, 0x3D
	0x0361E034 MOVZ W2, 0x3
	0x0361E038 MOV X0, X19
	0x0361E03C BL 0x3620B04
	0x0361E040 LDR X8, [X24 + 0x40]
	0x0361E044 CBZ X8, 0x361E238
	0x0361E048 STR X0, [X8 + 0x38]
	0x0361E04C LDR X22, [X25 + 0x40]
	0x0361E050 MOV X21, X0
	0x0361E054 CBZ X22, 0x361E238
	0x0361E058 LDR X23, [X22 + 0x38]
	0x0361E05C CBNZ X23, 0x361E080
	0x0361E060 MOVZ W1, 0x3D
	0x0361E064 MOVZ W2, 0x3
	0x0361E068 MOV X0, X20
	0x0361E06C BL 0x3620B04
	0x0361E070 LDR X22, [X25 + 0x40]
	0x0361E074 CBZ X22, 0x361E238
	0x0361E078 MOV X23, X0
	0x0361E07C STR X0, [X22 + 0x38]
	0x0361E080 LDRB W8, [X19 + 0x33]
	0x0361E084 ANDS W31, W8, 0x18
	0x0361E088 B.EQ 0x361E0B4
	0x0361E08C LDR X8, [X24 + 0x40]
	0x0361E090 CBZ X8, 0x361E238
	0x0361E094 LDR X0, [X8 + 0x38]
	0x0361E098 LDR X1, [X22 + 0x38]
	0x0361E09C MOVZ W2, 0x5
	0x0361E0A0 MOV X3, X31
	0x0361E0A4 BL 0x322590C
	0x0361E0A8 CMP W0, 0x0
	0x0361E0AC CSET W0, EQ
	0x0361E0B0 B 0x361DE10
	0x0361E0B4 CBZ X21, 0x361E238
	0x0361E0B8 CBZ X23, 0x361E238
	0x0361E0BC LDR W8, [X21 + 0x10]
	0x0361E0C0 LDR W9, [X23 + 0x10]
	0x0361E0C4 CMP W8, W9
	0x0361E0C8 B.NE 0x361DD6C
	0x0361E0CC MOV X0, X31
	0x0361E0D0 BL 0x32C1424
	0x0361E0D4 ADD X19, X21, W0, SXTW
	0x0361E0D8 MOV X0, X31
	0x0361E0DC BL 0x32C1424
	0x0361E0E0 LDRSW X9, [X21 + 0x10]
	0x0361E0E4 ADD X10, X23, W0, SXTW
	0x0361E0E8 ADD X8, X19, X9, 0x1, LSL
	0x0361E0EC ADD X9, X10, X9, 0x1, LSL
	0x0361E0F0 CMP X8, X19
	0x0361E0F4 CSET W0, EQ
	0x0361E0F8 B.EQ 0x361DE10
	0x0361E0FC LDRH W10, [X8 - 0x2]!
	0x0361E100 LDRH W11, [X9 - 0x2]!
	0x0361E104 CMP W10, W11
	0x0361E108 B.EQ 0x361E0F0
	0x0361E10C B 0x361DE10
	0x0361E110 LDR X8, [X19 + 0x38]
	0x0361E114 CBZ X8, 0x361E238
	0x0361E118 LDR X10, [X20 + 0x38]
	0x0361E11C CBZ X10, 0x361E238
	0x0361E120 LDRH W9, [X8 + 0x2C]
	0x0361E124 LDRH W11, [X8 + 0x30]
	0x0361E128 LDRH W25, [X10 + 0x2C]
	0x0361E12C LDRH W26, [X10 + 0x30]
	0x0361E130 LDR X21, [X20 + 0x10]
	0x0361E134 SUB W10, W11, W9
	0x0361E138 SUB W13, W9, W25
	0x0361E13C SUB W12, W26, W25
	0x0361E140 ADD W13, W13, W26
	0x0361E144 CMP W10, W12
	0x0361E148 CSEL W10, W13, W11, GT
	0x0361E14C CMP W9, W10, UXTH
	0x0361E150 MOV W22, W9
	0x0361E154 B.CS 0x361E1E0
	0x0361E158 AND W27, W10, 0xFFFF
	0x0361E15C STR W10, [X31 + 0x4]
	0x0361E160 LDR X0, [X19 + 0x10]
	0x0361E164 CBZ X0, 0x361E238
	0x0361E168 MOV W1, W22
	0x0361E16C MOV X2, X31
	0x0361E170 BL 0x3222A1C
	0x0361E174 CBZ X21, 0x361E238
	0x0361E178 AND W23, W25, 0xFFFF
	0x0361E17C MOV W24, W0
	0x0361E180 MOV X0, X21
	0x0361E184 MOV W1, W23
	0x0361E188 MOV X2, X31
	0x0361E18C BL 0x3222A1C
	0x0361E190 AND W8, W24, 0xFFFF
	0x0361E194 CMP W8, W0, UXTH
	0x0361E198 B.NE 0x361DD6C
	0x0361E19C MOV X0, X21
	0x0361E1A0 MOV W1, W23
	0x0361E1A4 MOV X2, X31
	0x0361E1A8 BL 0x3222A1C
	0x0361E1AC AND W8, W0, 0xFFFF
	0x0361E1B0 CMP W8, 0x3A
	0x0361E1B4 B.EQ 0x361E1D4
	0x0361E1B8 ADD W22, W22, 0x1
	0x0361E1BC CMP W27, W22
	0x0361E1C0 ADD W25, W25, 0x1
	0x0361E1C4 B.NE 0x361E160
	0x0361E1C8 LDR W9, [X31 + 0x4]
	0x0361E1CC MOV W22, W27
	0x0361E1D0 B 0x361E1D8
	0x0361E1D4 MOV W9, W22
	0x0361E1D8 LDR X8, [X19 + 0x38]
	0x0361E1DC CBZ X8, 0x361E238
	0x0361E1E0 LDRH W8, [X8 + 0x30]
	0x0361E1E4 CMP W8, W9, UXTH
	0x0361E1E8 B.LS 0x361E20C
	0x0361E1EC LDR X0, [X19 + 0x10]
	0x0361E1F0 CBZ X0, 0x361E238

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+48], X30
	003 Move [X31+56], X23
	004 Move [X31+64], X22
	005 Move [X31+72], X21
	006 Move [X31+80], X20
	007 Move [X31+88], X19
	008 Move X20, 0xDC4000
	009 Move W8, [X20+1155]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {26}
	015 Move X0, 0xAE0000
	016 Move X0, [X0+2264]
	017 Call 0x1C17CF4
	018 Move X0, 0xAD9000
	019 Move X0, [X0+632]
	020 Call 0x1C17CF4
	021 Move X0, 0xB1F000
	022 Move X0, [X0+88]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X20+1155], W8
	026 Move [X31+44], W31
	027 Move X8, [X19+32]
	028 Compare X8, 0
	029 JumpIfEqual {148}
	030 Move X0, X19
	031 Call Uri.get_AllowIdn, X0
	032 Move TEMP, X0
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfNotEqual {48}
	036 Move X1, [X19+48]
	037 Move X8, 17
	038 And X31, X1, X8
	039 Move TEMP, X1
	040 And TEMP, TEMP, 0x40000000
	041 Compare TEMP, 0x40000000
	042 JumpIfEqual {45}
	043 Move X0, X19
	044 Call Uri.CreateUriInfo, X0, X1
	045 Move X8, [X19+56]
	046 Compare X8, 0
	047 JumpIfNotEqual {89}
	048 Move X0, X19
	049 Move W1, W31
	050 Call Uri.EnsureHostString, X0, X1
	051 Move X8, [X19+56]
	052 Compare X8, 0
	053 JumpIfEqual {147}
	054 Move X0, [X8+56]
	055 Move X1, X31
	056 Call String.IsNullOrEmpty, X0
	057 Move X8, [X19+56]
	058 Compare X8, 0
	059 JumpIfEqual {147}
	060 Move TEMP, X0
	061 And TEMP, TEMP, 1
	062 Compare TEMP, 1
	063 JumpIfNotEqual {89}
	064 Move X20, [X8+16]
	065 Compare X20, 0
	066 JumpIfEqual {147}
	067 Move W1, [X20+16]
	068 Compare W1, 0
	069 JumpIfEqual {90}
	070 Move X8, [X19+48]
	071 And X9, X8, 0x7FFFF
	072 NotImplemented "Instruction CMP not yet implemented."
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Subtract W2, W1, 2
	075 Move W1, 1
	076 Move X0, X20
	077 Move X3, X31
	078 Call String.Substring, X0, X1, X2
	079 Move X8, [X19+56]
	080 Compare X8, 0
	081 JumpIfEqual {147}
	082 Move X1, [X8+24]
	083 Move X20, X0
	084 Compare X1, 0
	085 JumpIfEqual {134}
	086 Move X0, X20
	087 Move X2, X31
	088 Call String.Concat, X0, X1
	089 Move X20, [X8+56]
	090 Move X8, 0xAD8000
	091 Move X8, [X8+632]
	092 Move X8, [X8]
	093 Move X8, [X8+184]
	094 Move X20, [X8]
	095 Move W9, 260
	096 And X31, X8, X9
	097 Move X8, 0xADF000
	098 Move X8, [X8+2264]
	099 Move X0, [X8]
	100 Call 0x1C17D6C
	101 Move X8, 0xB1E000
	102 Move X8, [X8+88]
	103 Move [X31+44], W31
	104 Move W22, [X20+16]
	105 Move X23, [X19+32]
	106 Move X8, [X8]
	107 Move X21, X0
	108 Move W9, [X8+224]
	109 Compare W9, 0
	110 JumpIfNotEqual {113}
	111 Move X0, X8
	112 Call 0x1C17DFC
	113 Move W8, 10
	114 Add X4, X31, 44
	115 Move W5, 0xFFFF
	116 Move W6, 0xFFFF
	117 Move W7, 0xFFFF
	118 Move X0, X20
	119 Move W1, W31
	120 Move W2, W22
	121 Move X3, X21
	122 Move [X31+24], X31
	123 Move [X31+16], W31
	124 Move [X31+8], X23
	125 Move [X31], W8
	126 Call UriHelper.UnescapeString, X0, X1, X2, X3, X4, X5, X6, X7, X8, X9, X10
	127 Move W3, [X31+44]
	128 Move X0, X31
	129 Move X1, X21
	130 Move W2, W31
	131 Move X4, X31
	132 Call String.CreateString, X0, X1, X2, X3
	133 Move X20, X0
	134 Move X8, [X19+56]
	135 Compare X8, 0
	136 JumpIfEqual {147}
	137 Move [X8+56], X20
	138 Move X0, X20
	139 Move X20, [X31+80]
	140 Move X19, [X31+88]
	141 Move X22, [X31+64]
	142 Move X21, [X31+72]
	143 Move X30, [X31+48]
	144 Move X23, [X31+56]
	145 Add X31, X31, 96
	146 Return X0
	147 Call 0x1C17F20
	148 Move X0, 0xB1E000
	149 Move X0, [X0+336]
	150 Call 0x1C17D08
	151 Move X1, X31
	152 Call SR.GetString, X0
	153 Move X19, X0
	154 Move X0, 0xAD6000
	155 Move X0, [X0+1456]
	156 Call 0x1C17D08
	157 Call 0x1C17F10
	158 Move X1, X19
	159 Move X2, X31
	160 Move X20, X0
	161 Call InvalidOperationException..ctor, X0, X1
	162 Move X0, 0xB1E000
	163 Move X0, [X0+480]
	164 Call 0x1C17D08
	165 Move X1, X0
	166 Move X0, X20
	167 Call 0x1C17DEC

Method: System.String get_IdnHost()

Disassembly:
	0x0361E1F4 MOV W1, W22
	0x0361E1F8 MOV X2, X31
	0x0361E1FC BL 0x3222A1C
	0x0361E200 AND W8, W0, 0xFFFF
	0x0361E204 CMP W8, 0x3A
	0x0361E208 B.NE 0x361DD6C
	0x0361E20C AND W1, W25, 0xFFFF
	0x0361E210 CMP W1, W26
	0x0361E214 B.CS 0x361DFA4
	0x0361E218 CBZ X21, 0x361E238
	0x0361E21C MOV X0, X21
	0x0361E220 MOV X2, X31

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Call Uri.get_DnsSafeHost, X0
	005 Move X8, [X19+48]
	006 And X8, X8, 0x7FFFF
	007 NotImplemented "Instruction CMP not yet implemented."
	008 Move X1, X31
	009 Move X30, [X31+16]
	010 Move X19, [X31+24]
	011 Call DomainNameHelper.IdnEquivalent, X0
	012 Return X0
	013 Move X30, [X31+16]
	014 Move X19, [X31+24]
	015 Return X0

Method: System.Boolean get_IsAbsoluteUri()

Disassembly:
	0x0361AA24 LDR X0, [X20 + 0x20]
	0x0361AA28 CBZ X0, 0x361B0C0
	0x0361AA2C MOVZ W1, 0x400000
	0x0361AA30 MOV X2, X31

ISIL:
	001 Move X8, [X0+32]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 NotImplemented "Instruction CSET not yet implemented."
	004 Return X0

Method: System.Boolean get_UserEscaped()

Disassembly:
	0x0361E224 BL 0x3222A1C
	0x0361E228 AND W8, W0, 0xFFFF
	0x0361E22C CMP W8, 0x3A

ISIL:
	001 Move W8, [X0+50]
	002 Move W0, W8
	003 ShiftRight W0, 3
	004 And W0, W0, 7
	005 Return X0

Method: System.String get_UserInfo()

Disassembly:
	0x0361E230 B.NE 0x361DD6C
	0x0361E234 B 0x361DFA4
	0x0361E238 BL 0x1C16F20
	0x0361E23C STR X30, [X31 - 0x30]!
	0x0361E240 STP X22, X21, [X31 + 0x10]
	0x0361E244 STP X20, X19, [X31 + 0x20]
	0x0361E248 ADRP X22, 0xDC2000
	0x0361E24C LDRB W8, [X22 + 0x4A6]
	0x0361E250 MOV X19, X2
	0x0361E254 MOV W20, W1
	0x0361E258 MOV X21, X0
	0x0361E25C TBNZ X8, 0x0, 0x361E274
	0x0361E260 ADRP X0, 0xAD7000
	0x0361E264 LDR X0, [X0 + 0xA28]
	0x0361E268 BL 0x1C16CF4
	0x0361E26C MOVZ W8, 0x1
	0x0361E270 STRB W8, [X22 + 0x4A6]
	0x0361E274 CBZ X21, 0x361E2D8
	0x0361E278 ADRP X22, 0xAD7000
	0x0361E27C LDR X22, [X22 + 0xA28]
	0x0361E280 STR X31, [X31 + 0x8]
	0x0361E284 LDR X0, [X22]
	0x0361E288 LDR W8, [X0 + 0xE0]
	0x0361E28C CBNZ W8, 0x361E294
	0x0361E290 BL 0x1C16DFC
	0x0361E294 ADD X3, X31, 0x8
	0x0361E298 MOV X0, X21
	0x0361E29C MOV W1, W31
	0x0361E2A0 MOV W2, W20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X0+32]
	005 Compare X8, 0
	006 JumpIfEqual {14}
	007 Move X20, [X31+16]
	008 Move X19, [X31+24]
	009 Move W1, 2
	010 Move W2, 1
	011 Move X30, [X31+32]
	012 Call Uri.GetComponents, X0, X1, X2
	013 Return X0
	014 Move X0, 0xB1E000
	015 Move X0, [X0+336]
	016 Call 0x1C17D08
	017 Move X1, X31
	018 Call SR.GetString, X0
	019 Move X19, X0
	020 Move X0, 0xAD6000
	021 Move X0, [X0+1456]
	022 Call 0x1C17D08
	023 Call 0x1C17F10
	024 Move X1, X19
	025 Move X2, X31
	026 Move X20, X0
	027 Call InvalidOperationException..ctor, X0, X1
	028 Move X0, 0xB1E000
	029 Move X0, [X0+488]
	030 Call 0x1C17D08
	031 Move X1, X0
	032 Move X0, X20
	033 Call 0x1C17DEC

Method: System.UriHostNameType CheckHostName(System.String name)

Disassembly:
	0x0361E2A4 BL 0x3623F70
	0x0361E2A8 STR X0, [X19]
	0x0361E2AC LDR X8, [X31 + 0x8]
	0x0361E2B0 MOV X20, X0
	0x0361E2B4 MOV W0, W31
	0x0361E2B8 CBNZ X8, 0x361E2E0
	0x0361E2BC LDR X0, [X22]
	0x0361E2C0 LDR W8, [X0 + 0xE0]
	0x0361E2C4 CBNZ W8, 0x361E2CC
	0x0361E2C8 BL 0x1C16DFC
	0x0361E2CC CMP X20, 0x0
	0x0361E2D0 CSET W0, NE
	0x0361E2D4 B 0x361E2E0
	0x0361E2D8 MOV W0, W31
	0x0361E2DC STR X31, [X19]
	0x0361E2E0 LDP X20, X19, [X31 + 0x20]
	0x0361E2E4 LDP X22, X21, [X31 + 0x10]
	0x0361E2E8 LDR X30, [X31], #0x30
	0x0361E2EC RET
	0x0361E2F0 STR X30, [X31 - 0x30]!
	0x0361E2F4 STP X22, X21, [X31 + 0x10]
	0x0361E2F8 STP X20, X19, [X31 + 0x20]
	0x0361E2FC ADRP X21, 0xDC2000
	0x0361E300 ADRP X22, 0xADE000
	0x0361E304 ADRP X20, 0xB1D000
	0x0361E308 LDRB W8, [X21 + 0x488]
	0x0361E30C LDR X22, [X22 + 0x8D8]
	0x0361E310 LDR X20, [X20 + 0x210]
	0x0361E314 MOV X19, X0
	0x0361E318 TBNZ X8, 0x0, 0x361E33C
	0x0361E31C ADRP X0, 0xADE000
	0x0361E320 LDR X0, [X0 + 0x8D8]
	0x0361E324 BL 0x1C16CF4
	0x0361E328 ADRP X0, 0xB1D000
	0x0361E32C LDR X0, [X0 + 0x210]
	0x0361E330 BL 0x1C16CF4
	0x0361E334 MOVZ W8, 0x1
	0x0361E338 STRB W8, [X21 + 0x488]
	0x0361E33C LDR X0, [X22]
	0x0361E340 MOVZ W1, 0x5
	0x0361E344 BL 0x1C16D6C
	0x0361E348 LDR X1, [X20]
	0x0361E34C MOV X2, X31
	0x0361E350 MOV X20, X0
	0x0361E354 BL 0x32C5BD8
	0x0361E358 CBZ X19, 0x361E3A4
	0x0361E35C MOV X0, X19
	0x0361E360 MOV X1, X20
	0x0361E364 MOV X2, X31
	0x0361E368 BL 0x322BE8C
	0x0361E36C TBNZ X0, 0x1F, 0x361E390
	0x0361E370 MOV W1, W0
	0x0361E374 MOV X0, X19
	0x0361E378 MOV X2, X31
	0x0361E37C BL 0x3222A1C
	0x0361E380 AND W8, W0, 0xFFFF
	0x0361E384 CMP W8, 0x3A
	0x0361E388 CSET W0, EQ
	0x0361E38C B 0x361E394
	0x0361E390 MOV W0, W31
	0x0361E394 LDP X20, X19, [X31 + 0x20]
	0x0361E398 LDP X22, X21, [X31 + 0x10]
	0x0361E39C LDR X30, [X31], #0x30
	0x0361E3A0 RET
	0x0361E3A4 BL 0x1C16F20
	0x0361E3A8 SUB X31, X31, 0x30
	0x0361E3AC STR X30, [X31 + 0x10]
	0x0361E3B0 STP X20, X19, [X31 + 0x20]
	0x0361E3B4 ADRP X20, 0xDC2000
	0x0361E3B8 LDRB W8, [X20 + 0x489]
	0x0361E3BC MOV X19, X0
	0x0361E3C0 TBNZ X8, 0x0, 0x361E3E4
	0x0361E3C4 ADRP X0, 0xAD7000
	0x0361E3C8 LDR X0, [X0 + 0x278]
	0x0361E3CC BL 0x1C16CF4
	0x0361E3D0 ADRP X0, 0xB1D000
	0x0361E3D4 LDR X0, [X0 + 0x58]
	0x0361E3D8 BL 0x1C16CF4
	0x0361E3DC MOVZ W8, 0x1
	0x0361E3E0 STRB W8, [X20 + 0x489]
	0x0361E3E4 CBZ X19, 0x361E45C
	0x0361E3E8 ADRP X8, 0xB1D000
	0x0361E3EC LDR X8, [X8 + 0x58]
	0x0361E3F0 STR W31, [X31 + 0x1C]
	0x0361E3F4 LDR W20, [X19 + 0x10]
	0x0361E3F8 LDR X0, [X8]
	0x0361E3FC LDR W8, [X0 + 0xE0]
	0x0361E400 CBNZ W8, 0x361E408
	0x0361E404 BL 0x1C16DFC
	0x0361E408 MOVZ W8, 0x25
	0x0361E40C ADD X4, X31, 0x1C
	0x0361E410 MOVZ W5, 0x1
	0x0361E414 MOVZ W6, 0x3F
	0x0361E418 MOVZ W7, 0x23
	0x0361E41C MOV X0, X19
	0x0361E420 MOV W1, W31
	0x0361E424 MOV W2, W20
	0x0361E428 MOV X3, X31
	0x0361E42C STR X31, [X31 + 0x8]
	0x0361E430 STRH W8, [X31]
	0x0361E434 BL 0x362A9E0
	0x0361E438 CBZ X0, 0x361E470
	0x0361E43C LDR W3, [X31 + 0x1C]
	0x0361E440 MOV X1, X0
	0x0361E444 MOV X0, X31
	0x0361E448 MOV W2, W31
	0x0361E44C MOV X4, X31
	0x0361E450 BL 0x322EAE4
	0x0361E454 MOV X19, X0
	0x0361E458 B 0x361E470
	0x0361E45C ADRP X8, 0xAD7000
	0x0361E460 LDR X8, [X8 + 0x278]
	0x0361E464 LDR X8, [X8]
	0x0361E468 LDR X8, [X8 + 0xB8]
	0x0361E46C LDR X19, [X8]
	0x0361E470 MOV X0, X19
	0x0361E474 LDP X20, X19, [X31 + 0x20]
	0x0361E478 LDR X30, [X31 + 0x10]
	0x0361E47C ADD X31, X31, 0x30
	0x0361E480 RET
	0x0361E484 STR X30, [X31 - 0x30]!
	0x0361E488 STP X22, X21, [X31 + 0x10]
	0x0361E48C STP X20, X19, [X31 + 0x20]
	0x0361E490 ADRP X22, 0xDC2000
	0x0361E494 LDRB W8, [X22 + 0x48A]
	0x0361E498 MOV X20, X2
	0x0361E49C MOV X19, X1
	0x0361E4A0 MOV X21, X0
	0x0361E4A4 TBNZ X8, 0x0, 0x361E4BC
	0x0361E4A8 ADRP X0, 0xAD7000
	0x0361E4AC LDR X0, [X0 + 0xA28]
	0x0361E4B0 BL 0x1C16CF4
	0x0361E4B4 MOVZ W8, 0x1
	0x0361E4B8 STRB W8, [X22 + 0x48A]
	0x0361E4BC CBZ X21, 0x361E554
	0x0361E4C0 LDR W22, [X21 + 0x10]
	0x0361E4C4 CBZ W22, 0x361E534
	0x0361E4C8 MOVZ W8, 0xFFEF
	0x0361E4CC CMP W22, W8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xDC3000
	005 Move W8, [X20+1156]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0xAD6000
	012 Move X0, [X0+3784]
	013 Call 0x1C17CF4
	014 Move X0, 0xAD6000
	015 Move X0, [X0+2120]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1156], W8
	019 Move [X31+8], W31
	020 Compare X19, 0
	021 JumpIfEqual {148}
	022 Move W8, [X19+16]
	023 Move W0, W31
	024 Compare W8, 0
	025 JumpIfEqual {149}
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move X0, X31
	028 Move [X31+12], W8
	029 Call RuntimeHelpers.get_OffsetToStringData
	030 Add X20, X19, W0
	031 Move X0, X19
	032 Move W1, W31
	033 Move X2, X31
	034 Call String.get_Chars, X0, X1
	035 And W8, W0, 0xFFFF
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move W8, [X19+16]
	038 Move X0, X19
	039 Move X2, X31
	040 Subtract W1, W8, 1
	041 Call String.get_Chars, X0, X1
	042 And W8, W0, 0xFFFF
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Add X2, X31, 12
	045 Move W1, 1
	046 Move X0, X20
	047 Move X3, X31
	048 Call IPv6AddressHelper.IsValid, X0, X1, X2
	049 Move TEMP, X0
	050 And TEMP, TEMP, 1
	051 Compare TEMP, 1
	052 JumpIfNotEqual {56}
	053 Move W8, [X31+12]
	054 Move W9, [X19+16]
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Move W8, [X19+16]
	057 Add X2, X31, 12
	058 Move X0, X20
	059 Move W1, W31
	060 Move W3, W31
	061 Move W4, W31
	062 Move W5, W31
	063 Move X6, X31
	064 Move [X31+12], W8
	065 Call IPv4AddressHelper.IsValid, X0, X1, X2, X3, X4, X5
	066 Move TEMP, X0
	067 And TEMP, TEMP, 1
	068 Compare TEMP, 1
	069 JumpIfNotEqual {74}
	070 Move W9, [X31+12]
	071 Move W8, [X19+16]
	072 NotImplemented "Instruction CMP not yet implemented."
	073 Move W0, 3
	074 Move W8, [X19+16]
	075 Add X2, X31, 12
	076 Add X3, X31, 8
	077 Move X0, X20
	078 Move W1, W31
	079 Move W4, W31
	080 Move X5, X31
	081 Move [X31+12], W8
	082 Move [X31+8], W31
	083 Call DomainNameHelper.IsValid, X0, X1, X2, X3, X4
	084 Move TEMP, X0
	085 And TEMP, TEMP, 1
	086 Compare TEMP, 1
	087 JumpIfNotEqual {91}
	088 Move W9, [X31+12]
	089 Move W8, [X19+16]
	090 NotImplemented "Instruction CMP not yet implemented."
	091 Move W8, [X19+16]
	092 Add X2, X31, 12
	093 Add X3, X31, 8
	094 Move X0, X20
	095 Move W1, W31
	096 Move W4, W31
	097 Move X5, X31
	098 Move [X31+12], W8
	099 Move [X31+8], W31
	100 Call DomainNameHelper.IsValidByIri, X0, X1, X2, X3, X4
	101 Move TEMP, X0
	102 And TEMP, TEMP, 1
	103 Compare TEMP, 1
	104 JumpIfNotEqual {109}
	105 Move W9, [X31+12]
	106 Move W8, [X19+16]
	107 NotImplemented "Instruction CMP not yet implemented."
	108 Move W0, 2
	109 Move W8, [X19+16]
	110 Move X9, 0xAD6000
	111 Move X10, 0xAD6000
	112 Move X9, [X9+3784]
	113 Move X10, [X10+2120]
	114 Add W8, W8, 2
	115 Move X1, X19
	116 Move X0, [X9]
	117 Move X2, [X10]
	118 Move X3, X31
	119 Move [X31+12], W8
	120 Call String.Concat, X0, X1, X2
	121 Move X19, X0
	122 Compare X0, 0
	123 JumpIfEqual {139}
	124 Move X0, X31
	125 Call RuntimeHelpers.get_OffsetToStringData
	126 Add X0, X19, W0
	127 Add X2, X31, 12
	128 Move W1, 1
	129 Move X3, X31
	130 Call IPv6AddressHelper.IsValid, X0, X1, X2
	131 Move TEMP, X0
	132 And TEMP, TEMP, 1
	133 Compare TEMP, 1
	134 JumpIfNotEqual {148}
	135 Move W8, [X31+12]
	136 Move W9, [X19+16]
	137 NotImplemented "Instruction CMP not yet implemented."
	138 Move W0, 4
	139 Add X2, X31, 12
	140 Move W1, 1
	141 Move X0, X19
	142 Move X3, X31
	143 Call IPv6AddressHelper.IsValid, X0, X1, X2
	144 Move TEMP, X0
	145 And TEMP, TEMP, 1
	146 Compare TEMP, 1
	147 JumpIfEqual {153}
	148 Move W0, W31
	149 Move X20, [X31+16]
	150 Move X19, [X31+24]
	151 Move X30, [X31+32]
	152 Return X0
	153 Call 0x1C17F20

Method: System.Boolean IsGenDelim(System.Char ch)

Disassembly:
	0x0361E4D0 B.GT 0x361E53C
	0x0361E4D4 MOV X0, X31
	0x0361E4D8 BL 0x32C1424
	0x0361E4DC ADRP X8, 0xAD7000
	0x0361E4E0 LDR X8, [X8 + 0xA28]
	0x0361E4E4 STR W31, [X31 + 0xC]
	0x0361E4E8 ADD X21, X21, W0, SXTW
	0x0361E4EC LDR X8, [X8]
	0x0361E4F0 LDR W9, [X8 + 0xE0]
	0x0361E4F4 CBNZ W9, 0x361E500
	0x0361E4F8 MOV X0, X8
	0x0361E4FC BL 0x1C16DFC

ISIL:
	001 Subtract W8, W0, 35
	002 And W9, W8, 0xFFFF
	003 NotImplemented "Instruction CMP not yet implemented."
	004 Move X9, 0x1001
	005 NotImplemented "Instruction MOVK not yet implemented."
	006 NotImplemented "Instruction MOVK not yet implemented."
	007 NotImplemented "Instruction LSRV not yet implemented."
	008 And W0, W8, 1
	009 Return X0
	010 Move W0, W31
	011 Return X0

Method: System.Boolean CheckSchemeName(System.String schemeName)

Disassembly:
	0x0361E500 ADD X2, X31, 0xC
	0x0361E504 MOV X0, X21
	0x0361E508 MOV W1, W22
	0x0361E50C MOV X3, X19
	0x0361E510 MOV X4, X20
	0x0361E514 BL 0x361E558
	0x0361E518 LDR W8, [X31 + 0xC]
	0x0361E51C CBNZ W8, 0x361E540
	0x0361E520 LDR X9, [X19]
	0x0361E524 AND X10, X0, 0xFFFF
	0x0361E528 ORR X9, X9, X10, 0x0
	0x0361E52C STR X9, [X19]
	0x0361E530 B 0x361E540
	0x0361E534 MOVZ W8, 0x4
	0x0361E538 B 0x361E540
	0x0361E53C MOVZ W8, 0x6
	0x0361E540 LDP X20, X19, [X31 + 0x20]
	0x0361E544 LDP X22, X21, [X31 + 0x10]
	0x0361E548 MOV W0, W8
	0x0361E54C LDR X30, [X31], #0x30
	0x0361E550 RET
	0x0361E554 BL 0x1C16F20
	0x0361E558 STP X29, X30, [X31 - 0x60]!
	0x0361E55C STP X28, X27, [X31 + 0x10]
	0x0361E560 STP X26, X25, [X31 + 0x20]
	0x0361E564 STP X24, X23, [X31 + 0x30]
	0x0361E568 STP X22, X21, [X31 + 0x40]
	0x0361E56C STP X20, X19, [X31 + 0x50]
	0x0361E570 ADD X29, X31, 0x0
	0x0361E574 SUB X31, X31, 0x30
	0x0361E578 STP X2, X4, [X29 - 0x18]
	0x0361E57C STUR X3, [X29 - 0x20]
	0x0361E580 MRS X27, 0xC000
	0x0361E584 LDR X8, [X27 + 0x28]
	0x0361E588 ADRP X19, 0xDC2000
	0x0361E58C MOV W24, W1
	0x0361E590 MOV X21, X0
	0x0361E594 STUR X8, [X29 - 0x8]
	0x0361E598 LDRB W8, [X19 + 0x494]
	0x0361E59C TBNZ X8, 0x0, 0x361E5CC
	0x0361E5A0 ADRP X0, 0xB1D000
	0x0361E5A4 LDR X0, [X0 + 0x48]
	0x0361E5A8 BL 0x1C16CF4
	0x0361E5AC ADRP X0, 0xB1D000
	0x0361E5B0 LDR X0, [X0 + 0x218]
	0x0361E5B4 BL 0x1C16CF4
	0x0361E5B8 ADRP X0, 0xAD7000
	0x0361E5BC LDR X0, [X0 + 0xA28]
	0x0361E5C0 BL 0x1C16CF4
	0x0361E5C4 MOVZ W8, 0x1
	0x0361E5C8 STRB W8, [X19 + 0x494]
	0x0361E5CC ADRP X26, 0xAD7000
	0x0361E5D0 LDR X26, [X26 + 0xA28]
	0x0361E5D4 ANDS W25, W24, 0xFFFF
	0x0361E5D8 B.EQ 0x361E660
	0x0361E5DC SUB W8, W24, 0x1
	0x0361E5E0 AND W8, W8, 0xFFFF
	0x0361E5E4 MOVZ X22, 0x2600
	0x0361E5E8 MOV X28, X27
	0x0361E5EC MOV W27, W25
	0x0361E5F0 MOV W19, W31
	0x0361E5F4 MOVZ W20, 0x1
	0x0361E5F8 ADD W23, W8, 0x1
	0x0361E5FC MOVK X22, 0x1
	0x0361E600 LDR X0, [X26]
	0x0361E604 AND X8, X19, 0xFFFF
	0x0361E608 LDRH W25, [X21, X8, LSL #1]
	0x0361E60C LDR W9, [X0 + 0xE0]
	0x0361E610 CBNZ W9, 0x361E618
	0x0361E614 BL 0x1C16DFC
	0x0361E618 CMP W25, 0x20
	0x0361E61C B.HI 0x361E66C
	0x0361E620 CMP W25, 0x20
	0x0361E624 B.HI 0x361E66C
	0x0361E628 MOV W8, W25
	0x0361E62C LSLV X8, X20, X8
	0x0361E630 ANDS X31, X8, X22, 0x0
	0x0361E634 B.EQ 0x361E66C
	0x0361E638 ADD W19, W19, 0x1
	0x0361E63C AND W8, W19, 0xFFFF

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xDC3000
	007 Move W8, [X20+1157]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xAD8000
	014 Move X0, [X0+2600]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X20+1157], W8
	018 Compare X19, 0
	019 JumpIfEqual {81}
	020 Move W8, [X19+16]
	021 Compare W8, 0
	022 JumpIfEqual {81}
	023 Move X0, X19
	024 Move W1, W31
	025 Move X2, X31
	026 Call String.get_Chars, X0, X1
	027 Move X22, 0xAD8000
	028 Move X22, [X22+2600]
	029 Move W20, W0
	030 Move X8, [X22]
	031 Move W9, [X8+224]
	032 Compare W9, 0
	033 JumpIfNotEqual {36}
	034 Move X0, X8
	035 Call 0x1C17DFC
	036 And W8, W20, 0xFFFFFFDF
	037 Subtract W8, W8, 65
	038 And W8, W8, 0xFFFF
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Move W8, [X19+16]
	041 Subtract W20, W8, 1
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X0, X19
	044 Move W1, W20
	045 Move X2, X31
	046 Call String.get_Chars, X0, X1
	047 Move X8, [X22]
	048 Move W21, W0
	049 Move W9, [X8+224]
	050 Compare W9, 0
	051 JumpIfNotEqual {54}
	052 Move X0, X8
	053 Call 0x1C17DFC
	054 Move W0, W21
	055 Call Uri.IsAsciiLetterOrDigit, X0
	056 Move TEMP, X0
	057 And TEMP, TEMP, 1
	058 Compare TEMP, 1
	059 JumpIfEqual {78}
	060 Move X0, X19
	061 Move W1, W20
	062 Move X2, X31
	063 Call String.get_Chars, X0, X1
	064 And W8, W0, 0xFFFF
	065 NotImplemented "Instruction CMP not yet implemented."
	066 Move X0, X19
	067 Move W1, W20
	068 Move X2, X31
	069 Call String.get_Chars, X0, X1
	070 And W8, W0, 0xFFFF
	071 NotImplemented "Instruction CMP not yet implemented."
	072 Move X0, X19
	073 Move W1, W20
	074 Move X2, X31
	075 Call String.get_Chars, X0, X1
	076 And W8, W0, 0xFFFF
	077 NotImplemented "Instruction CMP not yet implemented."
	078 Subtract W20, W20, 1
	079 NotImplemented "Instruction CMP not yet implemented."
	080 Move W0, 1
	081 Move W0, W31
	082 Move X20, [X31+32]
	083 Move X19, [X31+40]
	084 Move X22, [X31+16]
	085 Move X21, [X31+24]
	086 Move X30, [X31+48]
	087 Return X0

Method: System.Boolean IsHexDigit(System.Char character)

Disassembly:
	0x0361E6E8 ADD W19, W23, 0x2
	0x0361E6EC CMP W19, W22, UXTH
	0x0361E6F0 B.HI 0x361E734
	0x0361E6F4 AND W8, W28, 0xFFFF
	0x0361E6F8 CMP W8, W24, UXTH
	0x0361E6FC B.EQ 0x361E734
	0x0361E700 CMP W0, 0x4
	0x0361E704 B.NE 0x361E734
	0x0361E708 LDR X0, [X26]
	0x0361E70C LDR W8, [X0 + 0xE0]
	0x0361E710 CBNZ W8, 0x361E718
	0x0361E714 BL 0x1C16DFC
	0x0361E718 LDUR X2, [X29 - 0x10]
	0x0361E71C ADD X0, X21, W20, 0x1, UXTH
	0x0361E720 SUB W1, W28, W20

ISIL:
	001 Subtract W8, W0, 48
	002 And W8, W8, 0xFFFF
	003 NotImplemented "Instruction CMP not yet implemented."
	004 Subtract W8, W0, 65
	005 And W8, W8, 0xFFFF
	006 NotImplemented "Instruction CMP not yet implemented."
	007 Subtract W8, W0, 97
	008 And W8, W8, 0xFFFF
	009 NotImplemented "Instruction CMP not yet implemented."
	010 NotImplemented "Instruction CSET not yet implemented."
	011 Return X0
	012 Move W0, 1
	013 Return X0

Method: System.Int32 FromHex(System.Char digit)

Disassembly:
	0x0361E724 BL 0x36226F4
	0x0361E728 TBZ X0, 0x0, 0x361E734
	0x0361E72C ADD W20, W28, 0x1
	0x0361E730 B 0x361E9A8
	0x0361E734 CMP W19, W25
	0x0361E738 B.CS 0x361E998
	0x0361E73C AND W8, W28, 0xFFFF
	0x0361E740 CMP W8, W20, UXTH
	0x0361E744 B.EQ 0x361E998
	0x0361E748 UBFM W8, W23, 0x1F, 0x1E
	0x0361E74C STUR W25, [X29 - 0x2C]
	0x0361E750 ADD X25, X8, 0x2
	0x0361E754 STUR X27, [X29 - 0x28]
	0x0361E758 LDRH W27, [X21, X25, LSL]
	0x0361E75C CMP W27, 0x7C
	0x0361E760 B.EQ 0x361E76C
	0x0361E764 CMP W27, 0x3A
	0x0361E768 B.NE 0x361E808
	0x0361E76C LDR X0, [X26]
	0x0361E770 MOV W8, W20
	0x0361E774 AND X8, X8, 0xFFFF
	0x0361E778 LDRH W22, [X21, X8, LSL #1]
	0x0361E77C LDR W9, [X0 + 0xE0]
	0x0361E780 CBNZ W9, 0x361E788
	0x0361E784 BL 0x1C16DFC
	0x0361E788 AND W8, W22, 0xFFFFFFDF
	0x0361E78C SUB W8, W8, 0x41
	0x0361E790 AND W8, W8, 0xFFFF
	0x0361E794 CMP W8, 0x19
	0x0361E798 B.HI 0x361E7F4
	0x0361E79C LDRH W8, [X21, W19, UXTW]
	0x0361E7A0 CMP W8, 0x5C
	0x0361E7A4 B.EQ 0x361E7B0
	0x0361E7A8 CMP W8, 0x2F
	0x0361E7AC B.NE 0x361E8E4
	0x0361E7B0 LDP X27, X10, [X29 - 0x28]
	0x0361E7B4 MOVZ W9, 0x28100000
	0x0361E7B8 ADRP X19, 0xB1D000
	0x0361E7BC LDR X8, [X10]
	0x0361E7C0 ORR X8, X8, X9, 0x0
	0x0361E7C4 STR X8, [X10]
	0x0361E7C8 LDR X19, [X19 + 0x48]
	0x0361E7CC LDR X0, [X19]

ISIL:
	001 Subtract W8, W0, 48
	002 And W8, W8, 0xFFFF
	003 NotImplemented "Instruction CMP not yet implemented."
	004 And W8, W0, 0xFFFF
	005 Subtract W9, W8, 65
	006 NotImplemented "Instruction CMP not yet implemented."
	007 Move W10, 1
	008 NotImplemented "Instruction LSLV not yet implemented."
	009 And X31, X9, 0x3F0000003F
	010 NotImplemented "Instruction CMP not yet implemented."
	011 Subtract W0, W8, 48
	012 Return X0
	013 And W9, W0, 0xFFFF
	014 Move TEMP, 96
	015 Not TEMP
	016 Move W10, TEMP
	017 NotImplemented "Instruction CMP not yet implemented."
	018 Move TEMP, 64
	019 Not TEMP
	020 Move W9, TEMP
	021 NotImplemented "Instruction CSEL not yet implemented."
	022 Add W8, W8, W9
	023 Add W0, W8, 10
	024 Return X0
	025 Move [X31-16], X30
	026 Move [X31-8], X19
	027 Move X0, 0xADE000
	028 Move X0, [X0+1400]
	029 Call 0x1C17D08
	030 Call 0x1C17F10
	031 Move X19, X0
	032 Move X0, 0xB1E000
	033 Move X0, [X0+496]
	034 Call 0x1C17D08
	035 Move X1, X0
	036 Move X0, X19
	037 Move X2, X31
	038 Call ArgumentException..ctor, X0, X1
	039 Move X0, 0xB1E000
	040 Move X0, [X0+504]
	041 Call 0x1C17D08
	042 Move X1, X0
	043 Move X0, X19
	044 Call 0x1C17DEC

Method: System.Int32 GetHashCode()

Disassembly:
	0x0361E7D0 LDR W8, [X0 + 0xE0]
	0x0361E7D4 CBNZ W8, 0x361E7E0
	0x0361E7D8 BL 0x1C16DFC
	0x0361E7DC LDR X0, [X19]
	0x0361E7E0 LDR X8, [X0 + 0xB8]
	0x0361E7E4 LDUR X9, [X29 - 0x10]
	0x0361E7E8 LDR X8, [X8 + 0x38]
	0x0361E7EC STR X8, [X9]
	0x0361E7F0 B 0x361E9A8
	0x0361E7F4 CMP W27, 0x3A
	0x0361E7F8 MOVZ W8, 0x1
	0x0361E7FC MOV W20, W31
	0x0361E800 CINC W8, W8, EQ
	0x0361E804 B 0x361E8F8
	0x0361E808 MOV W8, W20
	0x0361E80C AND X9, X8, 0xFFFF
	0x0361E810 LDRH W8, [X21, X9, LSL #1]
	0x0361E814 CMP W8, 0x5C
	0x0361E818 B.EQ 0x361E850
	0x0361E81C CMP W8, 0x2F
	0x0361E820 B.NE 0x361E908
	0x0361E824 LDR X0, [X26]
	0x0361E828 LDR W8, [X0 + 0xE0]
	0x0361E82C CBNZ W8, 0x361E840
	0x0361E830 MOV X27, X9
	0x0361E834 BL 0x1C16DFC
	0x0361E838 LDR X0, [X26]
	0x0361E83C MOV X9, X27
	0x0361E840 LDR X8, [X0 + 0xB8]
	0x0361E844 LDRB W8, [X8 + 0x72]
	0x0361E848 CBZ W8, 0x361E904
	0x0361E84C LDRH W27, [X21, X25, LSL]
	0x0361E850 LDUR W22, [X29 - 0x2C]
	0x0361E854 CMP W27, 0x5C
	0x0361E858 B.EQ 0x361E864
	0x0361E85C CMP W27, 0x2F
	0x0361E860 B.NE 0x361E8F0
	0x0361E864 LDUR X10, [X29 - 0x20]
	0x0361E868 MOVZ W9, 0x30100000
	0x0361E86C ADRP X20, 0xB1D000
	0x0361E870 LDR X8, [X10]
	0x0361E874 ORR X8, X8, X9, 0x0
	0x0361E878 STR X8, [X10]
	0x0361E87C LDR X20, [X20 + 0x48]
	0x0361E880 LDR X0, [X20]
	0x0361E884 LDR W8, [X0 + 0xE0]
	0x0361E888 CBNZ W8, 0x361E894
	0x0361E88C BL 0x1C16DFC
	0x0361E890 LDR X0, [X20]
	0x0361E894 LDR X8, [X0 + 0xB8]
	0x0361E898 LDUR X27, [X29 - 0x28]
	0x0361E89C LDUR X10, [X29 - 0x10]
	0x0361E8A0 MOV W20, W19
	0x0361E8A4 LDR X9, [X8 + 0x38]
	0x0361E8A8 AND W8, W19, 0xFFFF
	0x0361E8AC CMP W8, W22
	0x0361E8B0 STR X9, [X10]
	0x0361E8B4 B.CS 0x361E9A8
	0x0361E8B8 MOV W20, W19
	0x0361E8BC LDRH W9, [X21, W8, UXTW]
	0x0361E8C0 CMP W9, 0x2F
	0x0361E8C4 B.EQ 0x361E8D0
	0x0361E8C8 CMP W9, 0x5C
	0x0361E8CC B.NE 0x361E9A8
	0x0361E8D0 ADD W20, W8, 0x1
	0x0361E8D4 AND W8, W20, 0xFFFF
	0x0361E8D8 CMP W8, W22
	0x0361E8DC B.CC 0x361E8BC
	0x0361E8E0 B 0x361E9A8
	0x0361E8E4 MOV W20, W31
	0x0361E8E8 MOVZ W8, 0x7
	0x0361E8EC B 0x361E8F8
	0x0361E8F0 MOV W20, W31
	0x0361E8F4 MOVZ W8, 0x1
	0x0361E8F8 LDUR X9, [X29 - 0x18]
	0x0361E8FC LDUR X27, [X29 - 0x28]
	0x0361E900 B 0x361E9A4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xDC3000
	006 Move W8, [X20+1158]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0xB1E000
	013 Move X0, [X0+352]
	014 Call 0x1C17CF4
	015 Move X0, 0xAD8000
	016 Move X0, [X0+2600]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+1158], W8
	020 Move X8, [X19+32]
	021 Compare X8, 0
	022 JumpIfEqual {78}
	023 Move X1, [X19+48]
	024 Move TEMP, X1
	025 And TEMP, TEMP, 0x40000000
	026 Compare TEMP, 0x40000000
	027 JumpIfEqual {30}
	028 Move X0, X19
	029 Call Uri.CreateUriInfo, X0, X1
	030 Move X21, [X19+56]
	031 Compare X21, 0
	032 JumpIfEqual {97}
	033 Move X20, [X21+64]
	034 Compare X20, 0
	035 JumpIfNotEqual {46}
	036 Move X8, 0xB1E000
	037 Move X8, [X8+352]
	038 Move X0, [X8]
	039 Call 0x1C17F10
	040 Move X1, X31
	041 Move X20, X0
	042 Call MoreInfo..ctor, X0
	043 Move [X21+64], X20
	044 Compare X20, 0
	045 JumpIfEqual {97}
	046 Move W0, [X20+48]
	047 Compare W0, 0
	048 JumpIfNotEqual {73}
	049 Move X20, [X20+56]
	050 Compare X20, 0
	051 JumpIfNotEqual {57}
	052 Move W1, 61
	053 Move W2, 3
	054 Move X0, X19
	055 Call Uri.GetComponents, X0, X1, X2
	056 Move X20, X0
	057 Move X8, 0xAD8000
	058 Move X8, [X8+2600]
	059 Move X0, [X8]
	060 Move W8, [X0+224]
	061 Compare W8, 0
	062 JumpIfNotEqual {64}
	063 Call 0x1C17DFC
	064 Move X0, X20
	065 Call Uri.CalculateCaseInsensitiveHashCode, X0
	066 Move X8, [X21+64]
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Move W9, 0x1000000
	069 NotImplemented "Instruction CSEL not yet implemented."
	070 Compare X8, 0
	071 JumpIfEqual {97}
	072 Move [X8+48], W0
	073 Move X20, [X31+16]
	074 Move X19, [X31+24]
	075 Move X30, [X31+32]
	076 Move X21, [X31+40]
	077 Return X0
	078 Move X0, X19
	079 Call Uri.get_OriginalStringSwitched, X0
	080 Move X8, 0xAD8000
	081 Move X8, [X8+2600]
	082 And W31, W0, 1
	083 Move W9, 24
	084 Move X0, [X8]
	085 Move W8, 16
	086 NotImplemented "Instruction CSEL not yet implemented."
	087 Move X19, [X19]
	088 Move W9, [X0+224]
	089 Compare W9, 0
	090 JumpIfNotEqual {92}
	091 Call 0x1C17DFC
	092 Move X0, X19
	093 Move X20, [X31+16]
	094 Move X19, [X31+24]
	095 Move X30, [X31+32]
	096 Move X21, [X31+40]
	097 Call 0x1C17F20

Method: System.String ToString()

Disassembly:
	0x0361E9A4 STR W8, [X9]
	0x0361E9A8 LDR X8, [X27 + 0x28]
	0x0361E9AC LDUR X9, [X29 - 0x8]
	0x0361E9B0 CMP X8, X9
	0x0361E9B4 B.NE 0x361EAB0
	0x0361E9B8 MOV W0, W20
	0x0361E9BC ADD X31, X29, 0x0
	0x0361E9C0 LDP X20, X19, [X31 + 0x50]
	0x0361E9C4 LDP X22, X21, [X31 + 0x40]
	0x0361E9C8 LDP X24, X23, [X31 + 0x30]
	0x0361E9CC LDP X26, X25, [X31 + 0x20]
	0x0361E9D0 LDP X28, X27, [X31 + 0x10]
	0x0361E9D4 LDP X29, X30, [X31], #0x60
	0x0361E9D8 RET
	0x0361E9DC LDUR X10, [X29 - 0x20]
	0x0361E9E0 MOVZ W9, 0x20100000
	0x0361E9E4 B 0x361E7B8
	0x0361E9E8 AND W8, W22, 0xFFFF
	0x0361E9EC SUB W8, W8, W23
	0x0361E9F0 CMP W8, 0x401
	0x0361E9F4 B.GE 0x361EA1C
	0x0361E9F8 SBFM X2, X8, 0x3F, 0x1F
	0x0361E9FC MOV X19, X9
	0x0361EA00 CBZ W8, 0x361EA28
	0x0361EA04 ADD X9, X2, 0xF
	0x0361EA08 ADD X8, X31, 0x0
	0x0361EA0C AND X9, X9, 0xFFFFFFFF
	0x0361EA10 SUB X23, X8, X9
	0x0361EA14 ADD X31, X23, 0x0
	0x0361EA18 B 0x361EA2C
	0x0361EA1C MOV W20, W31
	0x0361EA20 MOVZ W8, 0x5
	0x0361EA24 B 0x361E9A0
	0x0361EA28 MOV X23, X31
	0x0361EA2C MOV X0, X23
	0x0361EA30 MOV W1, W31
	0x0361EA34 BL 0x3EB1B10
	0x0361EA38 AND W8, W28, 0xFFFF
	0x0361EA3C CMP W8, W20, UXTH
	0x0361EA40 MOV W24, W31
	0x0361EA44 B.LS 0x361EA70
	0x0361EA48 SUB W24, W28, W20
	0x0361EA4C ADD X8, X21, X19, 0x1, LSL
	0x0361EA50 MOVZ W9, 0x1
	0x0361EA54 MOV X10, X23
	0x0361EA58 LDRH W11, [X8], #0x2
	0x0361EA5C AND W12, W24, 0xFFFF
	0x0361EA60 CMP W12, W9, UXTH
	0x0361EA64 ADD X9, X9, 0x1
	0x0361EA68 STRH W11, [X10], #0x2
	0x0361EA6C B.NE 0x361EA58

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X0+32]
	005 Move X19, X0
	006 Compare X8, 0
	007 JumpIfEqual {37}
	008 Move X1, [X19+48]
	009 Move TEMP, X1
	010 And TEMP, TEMP, 0x40000000
	011 Compare TEMP, 0x40000000
	012 JumpIfEqual {15}
	013 Move X0, X19
	014 Call Uri.CreateUriInfo, X0, X1
	015 Move X8, [X19+56]
	016 Compare X8, 0
	017 JumpIfEqual {67}
	018 Move X8, [X8+32]
	019 Compare X8, 0
	020 JumpIfNotEqual {58}
	021 Move X0, [X19+32]
	022 Compare X0, 0
	023 JumpIfEqual {67}
	024 Move X1, X31
	025 Call UriParser.get_IsSimple, X0
	026 Move X20, [X19+56]
	027 Move W1, 127
	028 Move TEMP, X0
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfNotEqual {52}
	032 Move W2, 0x7FFF
	033 Move X0, X19
	034 Call Uri.GetComponentsHelper, X0, X1, X2
	035 Compare X20, 0
	036 JumpIfNotEqual {57}
	037 Move W8, [X19+64]
	038 Compare W8, 0
	039 JumpIfEqual {45}
	040 Move W8, [X19+52]
	041 Move TEMP, X8
	042 And TEMP, TEMP, 2
	043 Compare TEMP, 2
	044 JumpIfEqual {51}
	045 Move X0, X19
	046 Call Uri.get_OriginalStringSwitched, X0
	047 Add X8, X19, 16
	048 Add X9, X19, 24
	049 And W31, W0, 1
	050 NotImplemented "Instruction CSEL not yet implemented."
	051 Add X8, X19, 16
	052 Move W2, 3
	053 Move X0, X19
	054 Call Uri.GetComponents, X0, X1, X2
	055 Compare X20, 0
	056 JumpIfEqual {67}
	057 Move [X20+32], X0
	058 Move X8, [X19+56]
	059 Compare X8, 0
	060 JumpIfEqual {67}
	061 Add X8, X8, 32
	062 Move X0, [X8]
	063 Move X20, [X31+16]
	064 Move X19, [X31+24]
	065 Move X30, [X31+32]
	066 Return X0
	067 Call 0x1C17F20

Method: System.Boolean op_Equality(System.Uri uri1, System.Uri uri2)

Disassembly:
	0x0361EC84 CMP W24, W22, UXTH
	0x0361EC88 AND W26, W22, 0xFFFF
	0x0361EC8C B.NE 0x361EC48
	0x0361EC90 AND W8, W22, 0xFFFF
	0x0361EC94 ADD W22, W8, 0x1
	0x0361EC98 LDR X0, [X19 + 0x20]
	0x0361EC9C CBZ X0, 0x361F1C4
	0x0361ECA0 MOVZ W1, 0x80
	0x0361ECA4 MOVK W1, 0x100000
	0x0361ECA8 MOV X2, X31
	0x0361ECAC BL 0x362CAF0
	0x0361ECB0 TBZ X0, 0x0, 0x361ED44
	0x0361ECB4 LDRB W8, [X20 + 0x3]

ISIL:
	001 NotImplemented "Instruction CMP not yet implemented."
	002 Move X8, X0
	003 Move W0, W31
	004 Compare X8, 0
	005 JumpIfEqual {15}
	006 Compare X1, 0
	007 JumpIfEqual {15}
	008 Move X9, [X1]
	009 Move X0, X1
	010 Move X1, X8
	011 Move X3, [X9+312]
	012 Move X2, [X9+320]
	013 CallNoReturn X3
	014 Move W0, 1
	015 Return X0

Method: System.Boolean op_Inequality(System.Uri uri1, System.Uri uri2)

Disassembly:
	0x0361B090 MOVZ W1, 0x3
	0x0361B094 MOV X0, X22
	0x0361B098 MOV X3, X20
	0x0361B09C BL 0x361C688
	0x0361B0A0 LDR W8, [X31 + 0xC]
	0x0361B0A4 MOVZ W2, 0x1
	0x0361B0A8 MOV X0, X31
	0x0361B0AC MOV X1, X22
	0x0361B0B0 SUB W3, W8, 0x1
	0x0361B0B4 MOV X4, X31
	0x0361B0B8 BL 0x322EAE4
	0x0361B0BC B 0x361ADCC
	0x0361B0C0 BL 0x1C16F20
	0x0361B0C4 BL 0x1C16F28
	0x0361B0C8 STR X30, [X31 - 0x20]!
	0x0361B0CC STP X20, X19, [X31 + 0x10]
	0x0361B0D0 ADRP X20, 0xDC5000
	0x0361B0D4 LDRB W8, [X20 + 0x477]

ISIL:
	001 NotImplemented "Instruction CMP not yet implemented."
	002 Move X8, X0
	003 Move W9, 1
	004 Compare X0, 0
	005 JumpIfEqual {18}
	006 Compare X1, 0
	007 JumpIfEqual {18}
	008 Move [X31-16], X30
	009 Move X9, [X1]
	010 Move X0, X1
	011 Move X1, X8
	012 Move X10, [X9+312]
	013 Move X2, [X9+320]
	014 NotImplemented "Instruction BLR not yet implemented."
	015 Xor W9, W0, 1
	016 Move X30, [X31+16]
	017 Move W9, W31
	018 And W0, W9, 1
	019 Return X0

Method: System.Boolean Equals(System.Object comparand)

Disassembly:
	0x0361ECB8 TBNZ X8, 0x5, 0x361ED44
	0x0361ECBC ADD W8, W24, 0x1
	0x0361ECC0 CMP W8, W22, UXTH
	0x0361ECC4 B.CS 0x361ED44
	0x0361ECC8 AND W28, W22, 0xFFFF
	0x0361ECCC CMP W28, W24
	0x0361ECD0 B.LS 0x361ED08
	0x0361ECD4 MOV W27, W24
	0x0361ECD8 AND X8, X27, 0xFFFF
	0x0361ECDC LDRH W8, [X21, X8, LSL #1]
	0x0361ECE0 CMP W8, 0x5C
	0x0361ECE4 B.EQ 0x361ECF0
	0x0361ECE8 CMP W8, 0x2F
	0x0361ECEC B.NE 0x361ED18
	0x0361ECF0 ADD W25, W27, 0x1
	0x0361ECF4 CMP W28, W25, UXTH
	0x0361ECF8 AND W27, W25, 0xFFFF
	0x0361ECFC B.HI 0x361ECD8
	0x0361ED00 MOV W29, W31
	0x0361ED04 B 0x361ED20
	0x0361ED08 MOV W29, W31
	0x0361ED0C MOV W25, W23
	0x0361ED10 MOV W27, W24
	0x0361ED14 B 0x361ED20
	0x0361ED18 MOVZ W29, 0x1
	0x0361ED1C MOV W25, W27
	0x0361ED20 LDR X0, [X19 + 0x20]
	0x0361ED24 CBZ X0, 0x361F1C4
	0x0361ED28 MOVZ W1, 0x2000
	0x0361ED2C MOV X2, X31
	0x0361ED30 BL 0x3629044
	0x0361ED34 SUB W26, W27, W24
	0x0361ED38 CMP W26, 0x4
	0x0361ED3C B.LT 0x361EFFC
	0x0361ED40 TBNZ X0, 0x0, 0x361EFFC
	0x0361ED44 LDRB W8, [X20 + 0x3]
	0x0361ED48 ANDS W31, W8, 0x18
	0x0361ED4C B.EQ 0x361EDF8
	0x0361ED50 LDR X9, [X20]
	0x0361ED54 TBNZ X9, 0x1B, 0x361EDD0
	0x0361ED58 STR W31, [X31 + 0x14]
	0x0361ED5C LDR X6, [X19 + 0x20]
	0x0361ED60 ADD X4, X31, 0x14
	0x0361ED64 ADD X7, X31, 0x18
	0x0361ED68 MOV X0, X19
	0x0361ED6C MOV X1, X21
	0x0361ED70 MOV W2, W23
	0x0361ED74 MOV W3, W22
	0x0361ED78 MOV X5, X20
	0x0361ED7C BL 0x361F200
	0x0361ED80 LDR W8, [X31 + 0x14]
	0x0361ED84 CBNZ W8, 0x361EF6C
	0x0361ED88 AND W8, W22, 0xFFFF
	0x0361ED8C MOV W23, W0
	0x0361ED90 CMP W8, W0, UXTH
	0x0361ED94 B.LS 0x361EF10
	0x0361ED98 AND X22, X23, 0xFFFF
	0x0361ED9C LDRH W8, [X21, X22, LSL #1]
	0x0361EDA0 CMP W8, 0x5C
	0x0361EDA4 B.NE 0x361EF18
	0x0361EDA8 LDRB W8, [X20 + 0x3]
	0x0361EDAC TBNZ X8, 0x5, 0x361EF18
	0x0361EDB0 LDR X0, [X19 + 0x20]
	0x0361EDB4 CBZ X0, 0x361F1C4
	0x0361EDB8 MOVZ W1, 0x100000
	0x0361EDBC MOV X2, X31
	0x0361EDC0 BL 0x3629060
	0x0361EDC4 TBZ X0, 0x0, 0x361EF18
	0x0361EDC8 MOVZ W8, 0xB
	0x0361EDCC B 0x361EF6C
	0x0361EDD0 ANDS X31, X9, 0x1FFFFF
	0x0361EDD4 MOVZ W10, 0x50000
	0x0361EDD8 MOVZ W11, 0x70000
	0x0361EDDC AND X12, X23, 0xFFFF
	0x0361EDE0 CSEL X10, X11, X10, EQ
	0x0361EDE4 ORR X9, X9, X12, 0x0
	0x0361EDE8 ORR X9, X9, X10, 0x0
	0x0361EDEC MOV W8, W31
	0x0361EDF0 STR X9, [X20]
	0x0361EDF4 B 0x361EF6C
	0x0361EDF8 ADRP X25, 0xAD7000
	0x0361EDFC LDR X25, [X25 + 0xA28]
	0x0361EE00 LDR X0, [X25]
	0x0361EE04 LDR W8, [X0 + 0xE0]
	0x0361EE08 CBNZ W8, 0x361EE14
	0x0361EE0C BL 0x1C16DFC
	0x0361EE10 LDR X0, [X25]
	0x0361EE14 LDR X8, [X0 + 0xB8]
	0x0361EE18 LDRB W8, [X8 + 0x72]
	0x0361EE1C CBZ W8, 0x361EEF8
	0x0361EE20 AND W8, W23, 0xFFFF
	0x0361EE24 ADD W24, W8, 0x2
	0x0361EE28 CMP W24, W22, UXTH
	0x0361EE2C B.LS 0x361EE50
	0x0361EE30 LDR X0, [X19 + 0x20]
	0x0361EE34 CBZ X0, 0x361F1C4
	0x0361EE38 MOVZ W1, 0x1
	0x0361EE3C MOV X2, X31
	0x0361EE40 BL 0x3629044
	0x0361EE44 TBZ X0, 0x0, 0x361EF90
	0x0361EE48 MOVZ W8, 0x3
	0x0361EE4C B 0x361EF6C
	0x0361EE50 LDR X0, [X19 + 0x20]
	0x0361EE54 CBZ X0, 0x361F1C4
	0x0361EE58 MOV W9, W23
	0x0361EE5C UBFM W8, W8, 0x1F, 0x1E
	0x0361EE60 AND X28, X9, 0xFFFF
	0x0361EE64 ADD X8, X8, X21
	0x0361EE68 LDRH W26, [X21, X28, LSL #1]
	0x0361EE6C LDRH W27, [X8 + 0x2]
	0x0361EE70 MOVZ W1, 0x1
	0x0361EE74 MOV X2, X31
	0x0361EE78 BL 0x3629044
	0x0361EE7C TBZ X0, 0x0, 0x361EFBC
	0x0361EE80 LDR X0, [X25]
	0x0361EE84 LDR W8, [X0 + 0xE0]
	0x0361EE88 CBNZ W8, 0x361EE94
	0x0361EE8C BL 0x1C16DFC
	0x0361EE90 LDR X0, [X25]
	0x0361EE94 LDR X8, [X0 + 0xB8]
	0x0361EE98 LDRB W9, [X8 + 0x72]
	0x0361EE9C CBZ W9, 0x361EEC0
	0x0361EEA0 CMP W26, 0x5C
	0x0361EEA4 B.EQ 0x361EEB0
	0x0361EEA8 CMP W26, 0x2F
	0x0361EEAC B.NE 0x361EEC0
	0x0361EEB0 CMP W27, 0x2F
	0x0361EEB4 B.EQ 0x361EEF0
	0x0361EEB8 CMP W27, 0x5C
	0x0361EEBC B.EQ 0x361EEF0
	0x0361EEC0 LDR W8, [X0 + 0xE0]
	0x0361EEC4 CBNZ W8, 0x361EED8
	0x0361EEC8 BL 0x1C16DFC
	0x0361EECC LDR X8, [X25]
	0x0361EED0 LDR X8, [X8 + 0xB8]
	0x0361EED4 LDRB W9, [X8 + 0x72]
	0x0361EED8 CMP W27, 0x2F
	0x0361EEDC MOVZ W8, 0x3
	0x0361EEE0 B.NE 0x361EF6C
	0x0361EEE4 CMP W26, 0x2F
	0x0361EEE8 B.NE 0x361EF6C
	0x0361EEEC CBNZ W9, 0x361EF6C
	0x0361EEF0 LDR X8, [X20]
	0x0361EEF4 B 0x361EFEC
	0x0361EEF8 LDR X8, [X20]
	0x0361EEFC MOVZ X9, 0x20000000
	0x0361EF00 MOVK X9, 0x1000
	0x0361EF04 ANDS X31, X8, X9, 0x0
	0x0361EF08 B.NE 0x361ED50
	0x0361EF0C B 0x361EE20
	0x0361EF10 MOV W8, W23
	0x0361EF14 AND X22, X8, 0xFFFF
	0x0361EF18 LDR X8, [X20]
	0x0361EF1C ORR X8, X8, X22, 0x0
	0x0361EF20 STR X8, [X20]
	0x0361EF24 ADRP X20, 0xAD7000
	0x0361EF28 LDR X20, [X20 + 0xA28]
	0x0361EF2C LDR X0, [X20]
	0x0361EF30 LDR W8, [X0 + 0xE0]
	0x0361EF34 CBNZ W8, 0x361EF40
	0x0361EF38 BL 0x1C16DFC
	0x0361EF3C LDR X0, [X20]
	0x0361EF40 LDR X8, [X0 + 0xB8]
	0x0361EF44 LDR W20, [X8 + 0x6C]
	0x0361EF48 BL 0x1C16D44
	0x0361EF4C CBNZ W20, 0x361EF58
	0x0361EF50 LDRB W8, [X19 + 0x40]
	0x0361EF54 CBZ W8, 0x361EF6C
	0x0361EF58 LDR X1, [X31 + 0x18]
	0x0361EF5C MOV X0, X19
	0x0361EF60 MOV W2, W23
	0x0361EF64 BL 0x3620028
	0x0361EF68 MOV W8, W31
	0x0361EF6C LDP X20, X19, [X31 + 0x70]
	0x0361EF70 LDP X22, X21, [X31 + 0x60]
	0x0361EF74 LDP X24, X23, [X31 + 0x50]
	0x0361EF78 LDP X26, X25, [X31 + 0x40]
	0x0361EF7C LDP X28, X27, [X31 + 0x30]
	0x0361EF80 LDP X29, X30, [X31 + 0x20]
	0x0361EF84 MOV W0, W8
	0x0361EF88 ADD X31, X31, 0x80
	0x0361EF8C RET
	0x0361EF90 LDR X0, [X19 + 0x20]
	0x0361EF94 CBZ X0, 0x361F1C4
	0x0361EF98 MOVZ W1, 0x4000
	0x0361EF9C MOV X2, X31
	0x0361EFA0 BL 0x3629060
	0x0361EFA4 TBZ X0, 0x0, 0x361ED50
	0x0361EFA8 LDR X9, [X20]
	0x0361EFAC AND X10, X23, 0xFFFF
	0x0361EFB0 MOV W8, W31
	0x0361EFB4 ORR X9, X9, X10, 0x0
	0x0361EFB8 B 0x361F180
	0x0361EFBC LDR X0, [X19 + 0x20]
	0x0361EFC0 CBZ X0, 0x361F1C4
	0x0361EFC4 MOVZ W1, 0x2
	0x0361EFC8 MOV X2, X31
	0x0361EFCC BL 0x3629044
	0x0361EFD0 TBZ X0, 0x0, 0x361F15C
	0x0361EFD4 LDR X8, [X20]
	0x0361EFD8 TBNZ X8, 0x14, 0x361EFEC
	0x0361EFDC CMP W26, 0x2F
	0x0361EFE0 B.NE 0x361F15C
	0x0361EFE4 CMP W27, 0x2F
	0x0361EFE8 B.NE 0x361F15C
	0x0361EFEC ORR X8, X8, 0x1FFFFF
	0x0361EFF0 MOV W23, W24
	0x0361EFF4 STR X8, [X20]
	0x0361EFF8 B 0x361ED50
	0x0361EFFC CMP W26, 0x2
	0x0361F000 B.LT 0x361F010
	0x0361F004 LDR X8, [X20]
	0x0361F008 ORR X8, X8, 0x1FFFFF
	0x0361F00C STR X8, [X20]
	0x0361F010 ADD W8, W27, 0x1
	0x0361F014 CMP W8, W28
	0x0361F018 B.CS 0x361F0D8
	0x0361F01C LDRH W8, [X21, W8, UXTW]
	0x0361F020 CMP W8, 0x7C
	0x0361F024 B.EQ 0x361F030
	0x0361F028 CMP W8, 0x3A
	0x0361F02C B.NE 0x361F0D8
	0x0361F030 ADRP X8, 0xAD6000
	0x0361F034 LDR X8, [X8 + 0xA28]
	0x0361F038 LDR X0, [X8]
	0x0361F03C AND X8, X25, 0xFFFF
	0x0361F040 LDRH W8, [X21, X8, LSL #1]
	0x0361F044 LDR W9, [X0 + 0xE0]
	0x0361F048 CBNZ W9, 0x361F058
	0x0361F04C STR W8, [X31 + 0x10]
	0x0361F050 BL 0x1C16DFC
	0x0361F054 LDR W8, [X31 + 0x10]
	0x0361F058 AND W8, W8, 0xFFFFFFDF
	0x0361F05C SUB W8, W8, 0x41
	0x0361F060 AND W8, W8, 0xFFFF
	0x0361F064 CMP W8, 0x19
	0x0361F068 B.HI 0x361F0D8
	0x0361F06C ADD W8, W27, 0x2
	0x0361F070 CMP W8, W28
	0x0361F074 B.CS 0x361F188
	0x0361F078 LDRH W8, [X21, W8, UXTW]
	0x0361F07C CMP W8, 0x2F
	0x0361F080 B.EQ 0x361F08C
	0x0361F084 CMP W8, 0x5C
	0x0361F088 B.NE 0x361F188
	0x0361F08C LDR X8, [X19 + 0x30]
	0x0361F090 LDR X0, [X19 + 0x20]
	0x0361F094 ORR X8, X8, 0xFFFFFFF
	0x0361F098 STR X8, [X19 + 0x30]
	0x0361F09C CBZ X0, 0x361F1C4
	0x0361F0A0 MOVZ W1, 0x1
	0x0361F0A4 MOV X2, X31
	0x0361F0A8 BL 0x3629044
	0x0361F0AC TBZ X0, 0x0, 0x361F0BC
	0x0361F0B0 LDR X8, [X20]
	0x0361F0B4 ORR X8, X8, 0x1FFFFF
	0x0361F0B8 STR X8, [X20]
	0x0361F0BC CMP W27, W24
	0x0361F0C0 CSET W8, NE
	0x0361F0C4 CMP W26, 0x2
	0x0361F0C8 CSET W9, NE
	0x0361F0CC AND W8, W8, W9, 0x0
	0x0361F0D0 SUB W23, W25, W8
	0x0361F0D4 B 0x361ED44
	0x0361F0D8 LDR X0, [X19 + 0x20]
	0x0361F0DC CBZ X0, 0x361F1C4
	0x0361F0E0 MOVZ W1, 0x2000
	0x0361F0E4 MOV X2, X31
	0x0361F0E8 BL 0x3629044
	0x0361F0EC CMP W26, 0x3
	0x0361F0F0 CSET W8, EQ
	0x0361F0F4 EOR W9, W29, 0x1
	0x0361F0F8 ORR W8, W9, W8, 0x0
	0x0361F0FC TBNZ X8, 0x0, 0x361ED44
	0x0361F100 TBZ X0, 0x0, 0x361ED44
	0x0361F104 CMP W26, 0x2
	0x0361F108 B.LT 0x361ED44
	0x0361F10C MOV W8, W25
	0x0361F110 AND X8, X8, 0xFFFF
	0x0361F114 LDRH W8, [X21, X8, LSL #1]
	0x0361F118 CMP W8, 0x23
	0x0361F11C B.EQ 0x361ED44
	0x0361F120 CMP W8, 0x3F
	0x0361F124 B.EQ 0x361ED44
	0x0361F128 ADRP X24, 0xAD6000
	0x0361F12C LDR X24, [X24 + 0xA28]
	0x0361F130 LDR X0, [X24]
	0x0361F134 LDR W8, [X0 + 0xE0]
	0x0361F138 CBNZ W8, 0x361F144
	0x0361F13C BL 0x1C16DFC
	0x0361F140 LDR X0, [X24]
	0x0361F144 LDR X8, [X0 + 0xB8]
	0x0361F148 LDRB W8, [X8 + 0x72]
	0x0361F14C CBZ W8, 0x361F1A8
	0x0361F150 LDR X8, [X20]
	0x0361F154 ORR X8, X8, 0x1FFFFFFF
	0x0361F158 B 0x361F1B8
	0x0361F15C LDR X0, [X19 + 0x20]
	0x0361F160 CBZ X0, 0x361F1C4
	0x0361F164 MOVZ W1, 0x4000
	0x0361F168 MOV X2, X31
	0x0361F16C BL 0x3629060
	0x0361F170 TBZ X0, 0x0, 0x361ED50
	0x0361F174 LDR X9, [X20]
	0x0361F178 MOV W8, W31
	0x0361F17C ORR X9, X9, X28, 0x0
	0x0361F180 ORR X9, X9, 0x7FFFF
	0x0361F184 B 0x361EDF0
	0x0361F188 LDR X0, [X19 + 0x20]
	0x0361F18C CBZ X0, 0x361F1C4
	0x0361F190 MOVZ W1, 0x2000
	0x0361F194 MOV X2, X31
	0x0361F198 BL 0x3629044
	0x0361F19C TBZ X0, 0x0, 0x361ED44
	0x0361F1A0 MOVZ W8, 0x7
	0x0361F1A4 B 0x361EF6C
	0x0361F1A8 CMP W26, 0x4
	0x0361F1AC B.LT 0x361ED44
	0x0361F1B0 LDR X8, [X20]
	0x0361F1B4 ORR X8, X8, 0x1FFFFFFFFFFF
	0x0361F1B8 MOV W23, W25
	0x0361F1BC STR X8, [X20]
	0x0361F1C0 B 0x361ED44
	0x0361F1C4 BL 0x1C16F20
	0x0361F1C8 AND W8, W0, 0xFFFF
	0x0361F1CC CMP W8, 0x20
	0x0361F1D0 B.HI 0x361F1F8
	0x0361F1D4 SUB W8, W0, 0x9
	0x0361F1D8 AND W9, W8, 0xFFFF
	0x0361F1DC CMP W9, 0x17
	0x0361F1E0 B.HI 0x361F1F8
	0x0361F1E4 MOVZ W9, 0x13
	0x0361F1E8 MOVK W9, 0x800000
	0x0361F1EC LSRV W8, W9, W8
	0x0361F1F0 AND W0, W8, 0x1
	0x0361F1F4 RET
	0x0361F1F8 MOV W0, W31
	0x0361F1FC RET
	0x0361F200 SUB X31, X31, 0xF0
	0x0361F204 STP X29, X30, [X31 + 0x90]
	0x0361F208 STP X28, X27, [X31 + 0xA0]
	0x0361F20C STP X26, X25, [X31 + 0xB0]
	0x0361F210 STP X24, X23, [X31 + 0xC0]
	0x0361F214 STP X22, X21, [X31 + 0xD0]
	0x0361F218 STP X20, X19, [X31 + 0xE0]
	0x0361F21C ADRP X19, 0xDC1000
	0x0361F220 LDRB W8, [X19 + 0x497]
	0x0361F224 MOV X29, X7
	0x0361F228 MOV X24, X6
	0x0361F22C MOV X20, X5
	0x0361F230 MOV X22, X4
	0x0361F234 MOV W26, W3
	0x0361F238 MOV W23, W2

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+16], X30
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X21, 0xDC3000
	013 Move W8, [X21+1159]
	014 Move X20, X1
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {31}
	020 Move X0, 0xB1E000
	021 Move X0, [X0+352]
	022 Call 0x1C17CF4
	023 Move X0, 0xAD8000
	024 Move X0, [X0+632]
	025 Call 0x1C17CF4
	026 Move X0, 0xAD8000
	027 Move X0, [X0+2600]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X21+1159], W8
	031 Compare X20, 0
	032 JumpIfEqual {51}
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move X9, 0xAD8000
	035 Move X9, [X9+2600]
	036 Move X8, [X20]
	037 Move X0, [X9]
	038 Move W10, [X8+304]
	039 Move W9, [X0+304]
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Move X10, [X8+200]
	042 Add X9, X10, X9
	043 NotImplemented "Instruction LDUR not yet implemented."
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Move X9, 0xAD8000
	046 Move X9, [X9+632]
	047 Move [X31+8], X31
	048 Move X9, [X9]
	049 NotImplemented "Instruction CMP not yet implemented."
	050 NotImplemented "Instruction CSEL not yet implemented."
	051 Move W0, W31
	052 Move W8, [X0+224]
	053 Compare W8, 0
	054 JumpIfNotEqual {56}
	055 Call 0x1C17DFC
	056 Add X2, X31, 8
	057 Move X0, X20
	058 Move W1, W31
	059 Call Uri.TryCreate, X0, X1, X2
	060 Move W8, W0
	061 Move W0, W31
	062 Move TEMP, X8
	063 And TEMP, TEMP, 1
	064 Compare TEMP, 1
	065 JumpIfNotEqual {100}
	066 Move X20, [X31+8]
	067 Move [X31+8], X20
	068 Compare X20, 0
	069 JumpIfEqual {411}
	070 Move X21, [X19+16]
	071 Move X1, [X20+16]
	072 NotImplemented "Instruction CMP not yet implemented."
	073 Move X8, [X19+32]
	074 Move X9, [X20+32]
	075 NotImplemented "Instruction CMP not yet implemented."
	076 NotImplemented "Instruction CSET not yet implemented."
	077 NotImplemented "Instruction CMP not yet implemented."
	078 NotImplemented "Instruction CSET not yet implemented."
	079 NotImplemented "Instruction CMP not yet implemented."
	080 Compare X8, 0
	081 JumpIfEqual {113}
	082 Move X8, [X19+48]
	083 Move TEMP, X8
	084 And TEMP, TEMP, -2147483648
	085 Compare TEMP, -2147483648
	086 JumpIfNotEqual {92}
	087 Move W9, [X20+48]
	088 Move TEMP, X9
	089 And TEMP, TEMP, -2147483648
	090 Compare TEMP, -2147483648
	091 JumpIfEqual {167}
	092 And X31, X8, 0x1FFFFFFF
	093 Move W2, 5
	094 Move X0, X21
	095 Move X3, X31
	096 Call String.Compare, X0, X1, X2
	097 Compare W0, 0
	098 JumpIfNotEqual {167}
	099 Move W0, 1
	100 Move X20, [X31+80]
	101 Move X19, [X31+88]
	102 Move X22, [X31+64]
	103 Move X21, [X31+72]
	104 Move X24, [X31+48]
	105 Move X23, [X31+56]
	106 Move X26, [X31+32]
	107 Move X25, [X31+40]
	108 Move X30, [X31+16]
	109 Move X27, [X31+24]
	110 And W0, W0, 1
	111 Add X31, X31, 96
	112 Return X0
	113 Move X0, X19
	114 Call Uri.get_OriginalStringSwitched, X0
	115 And W31, W0, 1
	116 Move W8, 16
	117 Move W9, 24
	118 NotImplemented "Instruction CSEL not yet implemented."
	119 Move X19, [X19]
	120 Move X0, X20
	121 Call Uri.get_OriginalStringSwitched, X0
	122 Compare X19, 0
	123 JumpIfEqual {411}
	124 And W31, W0, 1
	125 Move W8, 16
	126 Move W9, 24
	127 NotImplemented "Instruction CSEL not yet implemented."
	128 Move X1, [X20]
	129 Move X0, X19
	130 Move X2, X31
	131 Call String.Equals, X0, X1
	132 Compare X21, 0
	133 JumpIfEqual {411}
	134 Compare X1, 0
	135 JumpIfEqual {411}
	136 Move W8, [X21+16]
	137 Move W9, [X1+16]
	138 NotImplemented "Instruction CMP not yet implemented."
	139 Move X0, X31
	140 Call RuntimeHelpers.get_OffsetToStringData
	141 Move X23, [X20+16]
	142 Move W22, W0
	143 Compare X23, 0
	144 JumpIfEqual {148}
	145 Move X0, X31
	146 Call RuntimeHelpers.get_OffsetToStringData
	147 Add X23, X23, W0
	148 Move X8, [X19+16]
	149 Compare X8, 0
	150 JumpIfEqual {411}
	151 Move W8, [X8+16]
	152 Add X10, X21, W22
	153 Subtract W9, W8, 1
	154 Move W11, W9
	155 Move TEMP, X11
	156 And TEMP, TEMP, -2147483648
	157 Compare TEMP, -2147483648
	158 JumpIfEqual {163}
	159 NotImplemented "Instruction LDRH not yet implemented."
	160 NotImplemented "Instruction LDRH not yet implemented."
	161 Subtract W11, W11, 1
	162 NotImplemented "Instruction CMP not yet implemented."
	163 Add W31, W9, 2
	164 Move W0, 1
	165 Compare W8, 0
	166 JumpIfEqual {100}
	167 Move X1, [X19+48]
	168 Move TEMP, X1
	169 And TEMP, TEMP, 0x40000000
	170 Compare TEMP, 0x40000000
	171 JumpIfEqual {174}
	172 Move X0, X19
	173 Call Uri.CreateUriInfo, X0, X1
	174 Compare X20, 0
	175 JumpIfEqual {411}
	176 Move X1, [X20+48]
	177 Move TEMP, X1
	178 And TEMP, TEMP, 0x40000000
	179 Compare TEMP, 0x40000000
	180 JumpIfEqual {183}
	181 Move X0, X20
	182 Call Uri.CreateUriInfo, X0, X1
	183 Move W8, [X19+51]
	184 Move TEMP, X8
	185 And TEMP, TEMP, 1
	186 Compare TEMP, 1
	187 JumpIfEqual {249}
	188 Move W8, [X20+51]
	189 Move TEMP, X8
	190 And TEMP, TEMP, 1
	191 Compare TEMP, 1
	192 JumpIfEqual {249}
	193 Move X0, [X19+32]
	194 Compare X0, 0
	195 JumpIfEqual {411}
	196 Move X1, X31
	197 Call UriParser.get_IsSimple, X0
	198 Move TEMP, X0
	199 And TEMP, TEMP, 1
	200 Compare TEMP, 1
	201 JumpIfNotEqual {249}
	202 Move X0, [X20+32]
	203 Compare X0, 0
	204 JumpIfEqual {411}
	205 Move X1, X31
	206 Call UriParser.get_IsSimple, X0
	207 Move TEMP, X0
	208 And TEMP, TEMP, 1
	209 Compare TEMP, 1
	210 JumpIfNotEqual {249}
	211 Move W8, [X19+51]
	212 Move TEMP, X8
	213 And TEMP, TEMP, 2
	214 Compare TEMP, 2
	215 JumpIfNotEqual {221}
	216 Move W8, [X20+51]
	217 Move TEMP, X8
	218 And TEMP, TEMP, 2
	219 Compare TEMP, 2
	220 JumpIfEqual {340}
	221 Move X0, X19
	222 Move W1, W31
	223 Call Uri.EnsureHostString, X0, X1
	224 Move X0, X20
	225 Move W1, W31
	226 Call Uri.EnsureHostString, X0, X1
	227 Move X9, [X19+56]
	228 Compare X9, 0
	229 JumpIfEqual {411}
	230 Move X8, [X20+56]
	231 Compare X8, 0
	232 JumpIfEqual {411}
	233 Move X0, [X9+16]
	234 Compare X0, 0
	235 JumpIfEqual {411}
	236 Move X1, [X8+16]
	237 Move X2, X31
	238 Call String.Equals, X0, X1
	239 Move TEMP, X0
	240 And TEMP, TEMP, 1
	241 Compare TEMP, 1
	242 JumpIfNotEqual {51}
	243 Move X0, X19
	244 Call Uri.get_Port, X0
	245 Move W21, W0
	246 Move X0, X20
	247 Call Uri.get_Port, X0
	248 NotImplemented "Instruction CMP not yet implemented."
	249 Move X24, [X19+56]
	250 Compare X24, 0
	251 JumpIfEqual {411}
	252 Move X21, [X24+64]
	253 Move X25, [X20+56]
	254 Compare X21, 0
	255 JumpIfNotEqual {264}
	256 Move X8, 0xB1E000
	257 Move X8, [X8+352]
	258 Move X0, [X8]
	259 Call 0x1C17F10
	260 Move X1, X31
	261 Move X21, X0
	262 Call MoreInfo..ctor, X0
	263 Move [X24+64], X21
	264 Compare X25, 0
	265 JumpIfEqual {411}
	266 Move X22, [X25+64]
	267 Compare X22, 0
	268 JumpIfNotEqual {278}
	269 Move X8, 0xB1D000
	270 Move X8, [X8+352]
	271 Move X0, [X8]
	272 Call 0x1C17F10
	273 Move X1, X31
	274 Move X22, X0
	275 Call MoreInfo..ctor, X0
	276 Move [X25+64], X22
	277 Move X21, [X24+64]
	278 Compare X21, 0
	279 JumpIfEqual {411}
	280 Move X21, [X21+56]
	281 Compare X21, 0
	282 JumpIfNotEqual {293}
	283 Move W1, 61
	284 Move W2, 3
	285 Move X0, X19
	286 Call Uri.GetComponents, X0, X1, X2
	287 Move X8, [X24+64]
	288 Compare X8, 0
	289 JumpIfEqual {411}
	290 Move [X8+56], X0
	291 Move X22, [X25+64]
	292 Move X21, X0
	293 Compare X22, 0
	294 JumpIfEqual {411}
	295 Move X23, [X22+56]
	296 Compare X23, 0
	297 JumpIfNotEqual {307}
	298 Move W1, 61
	299 Move W2, 3
	300 Move X0, X20
	301 Call Uri.GetComponents, X0, X1, X2
	302 Move X22, [X25+64]
	303 Compare X22, 0
	304 JumpIfEqual {411}
	305 Move X23, X0
	306 Move [X22+56], X0
	307 Move W8, [X19+51]
	308 And W31, W8, 24
	309 Move X8, [X24+64]
	310 Compare X8, 0
	311 JumpIfEqual {411}
	312 Move X0, [X8+56]
	313 Move X1, [X22+56]
	314 Move W2, 5
	315 Move X3, X31
	316 Call String.Compare, X0, X1, X2
	317 NotImplemented "Instruction CMP not yet implemented."
	318 NotImplemented "Instruction CSET not yet implemented."
	319 Compare X21, 0
	320 JumpIfEqual {411}
	321 Compare X23, 0
	322 JumpIfEqual {411}
	323 Move W8, [X21+16]
	324 Move W9, [X23+16]
	325 NotImplemented "Instruction CMP not yet implemented."
	326 Move X0, X31
	327 Call RuntimeHelpers.get_OffsetToStringData
	328 Add X19, X21, W0
	329 Move X0, X31
	330 Call RuntimeHelpers.get_OffsetToStringData
	331 NotImplemented "Instruction LDRSW not yet implemented."
	332 Add X10, X23, W0
	333 Add X8, X19, X9
	334 Add X9, X10, X9
	335 NotImplemented "Instruction CMP not yet implemented."
	336 NotImplemented "Instruction CSET not yet implemented."
	337 NotImplemented "Instruction LDRH not yet implemented."
	338 NotImplemented "Instruction LDRH not yet implemented."
	339 NotImplemented "Instruction CMP not yet implemented."
	340 Move X8, [X19+56]
	341 Compare X8, 0
	342 JumpIfEqual {411}
	343 Move X10, [X20+56]
	344 Compare X10, 0
	345 JumpIfEqual {411}
	346 NotImplemented "Instruction LDRH not yet implemented."
	347 NotImplemented "Instruction LDRH not yet implemented."
	348 NotImplemented "Instruction LDRH not yet implemented."
	349 NotImplemented "Instruction LDRH not yet implemented."
	350 Move X21, [X20+16]
	351 Subtract W10, W11, W9
	352 Subtract W13, W9, W25
	353 Subtract W12, W26, W25
	354 Add W13, W13, W26
	355 NotImplemented "Instruction CMP not yet implemented."
	356 NotImplemented "Instruction CSEL not yet implemented."
	357 NotImplemented "Instruction CMP not yet implemented."
	358 Move W22, W9
	359 And W27, W10, 0xFFFF
	360 Move [X31+4], W10
	361 Move X0, [X19+16]
	362 Compare X0, 0
	363 JumpIfEqual {411}
	364 Move W1, W22
	365 Move X2, X31
	366 Call String.get_Chars, X0, X1
	367 Compare X21, 0
	368 JumpIfEqual {411}
	369 And W23, W25, 0xFFFF
	370 Move W24, W0
	371 Move X0, X21
	372 Move W1, W23
	373 Move X2, X31
	374 Call String.get_Chars, X0, X1
	375 And W8, W24, 0xFFFF
	376 NotImplemented "Instruction CMP not yet implemented."
	377 Move X0, X21
	378 Move W1, W23
	379 Move X2, X31
	380 Call String.get_Chars, X0, X1
	381 And W8, W0, 0xFFFF
	382 NotImplemented "Instruction CMP not yet implemented."
	383 Add W22, W22, 1
	384 NotImplemented "Instruction CMP not yet implemented."
	385 Add W25, W25, 1
	386 Move W9, [X31+4]
	387 Move W22, W27
	388 Move W9, W22
	389 Move X8, [X19+56]
	390 Compare X8, 0
	391 JumpIfEqual {411}
	392 NotImplemented "Instruction LDRH not yet implemented."
	393 NotImplemented "Instruction CMP not yet implemented."
	394 Move X0, [X19+16]
	395 Compare X0, 0
	396 JumpIfEqual {411}
	397 Move W1, W22
	398 Move X2, X31
	399 Call String.get_Chars, X0, X1
	400 And W8, W0, 0xFFFF
	401 NotImplemented "Instruction CMP not yet implemented."
	402 And W1, W25, 0xFFFF
	403 NotImplemented "Instruction CMP not yet implemented."
	404 Compare X21, 0
	405 JumpIfEqual {411}
	406 Move X0, X21
	407 Move X2, X31
	408 Call String.get_Chars, X0, X1
	409 And W8, W0, 0xFFFF
	410 NotImplemented "Instruction CMP not yet implemented."
	411 Call 0x1C17F20

Method: System.Boolean CheckForColonInFirstPathSegment(System.String uriString)

Disassembly:
	0x0361F2F0 LDR X8, [X20]
	0x0361F2F4 LDR W10, [X31 + 0x6C]
	0x0361F2F8 LDR W28, [X24 + 0x10]
	0x0361F2FC AND X9, X8, 0x3FFFFFFFF
	0x0361F300 UBFM X8, X8, 0x22, 0x3F
	0x0361F304 STR X9, [X31 + 0x58]
	0x0361F308 UBFM X9, X9, 0x21, 0x3F
	0x0361F30C ORN W8, W31, W8, 0x0
	0x0361F310 AND W9, W10, W9, 0x0
	0x0361F314 AND W27, W8, 0x1
	0x0361F318 ANDS W19, W9, W27, 0x0
	0x0361F31C AND W8, W23, 0xFFFF
	0x0361F320 STR W9, [X31 + 0x54]
	0x0361F324 STR W8, [X31 + 0x68]
	0x0361F328 B.EQ 0x361F34C
	0x0361F32C LDR X8, [X31 + 0x60]
	0x0361F330 LDR X0, [X8 + 0x18]
	0x0361F334 CBZ X0, 0x361FF18
	0x0361F338 LDR W2, [X31 + 0x68]
	0x0361F33C MOV W1, W31
	0x0361F340 MOV X3, X31
	0x0361F344 BL 0x3228DE4
	0x0361F348 STR X0, [X29]
	0x0361F34C AND W8, W23, 0xFFFF
	0x0361F350 CMP W8, W26, UXTH
	0x0361F354 B.NE 0x361F394
	0x0361F358 MOVZ W1, 0x80
	0x0361F35C MOV X0, X24
	0x0361F360 MOV X2, X31
	0x0361F364 BL 0x3629044
	0x0361F368 TBZ X0, 0x0, 0x361F4C4
	0x0361F36C LDR X21, [X20]
	0x0361F370 AND X8, X21, 0xFFFFFFFFFFFFFFF
	0x0361F374 STR X8, [X20]
	0x0361F378 ADRP X8, 0xAD6000
	0x0361F37C LDR X8, [X8 + 0xA28]
	0x0361F380 LDR X0, [X8]
	0x0361F384 LDR W8, [X0 + 0xE0]
	0x0361F388 CBZ W8, 0x361F47C
	0x0361F38C TBNZ X21, 0x1D, 0x361F484
	0x0361F390 B 0x361F4D4
	0x0361F394 LDR X9, [X31 + 0x70]
	0x0361F398 AND X8, X23, 0xFFFF
	0x0361F39C LDRH W21, [X9, X8, LSL #1]
	0x0361F3A0 CMP W21, 0x3E
	0x0361F3A4 B.GT 0x361F3BC

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xDC2000
	007 Move X22, 0xADE000
	008 Move X20, 0xB1D000
	009 Move W8, [X21+1160]
	010 Move X22, [X22+2264]
	011 Move X20, [X20+528]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0xADE000
	018 Move X0, [X0+2264]
	019 Call 0x1C17CF4
	020 Move X0, 0xB1D000
	021 Move X0, [X0+528]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+1160], W8
	025 Move X0, [X22]
	026 Move W1, 5
	027 Call 0x1C17D6C
	028 Move X1, [X20]
	029 Move X2, X31
	030 Move X20, X0
	031 Call RuntimeHelpers.InitializeArray, X0, X1
	032 Compare X19, 0
	033 JumpIfEqual {56}
	034 Move X0, X19
	035 Move X1, X20
	036 Move X2, X31
	037 Call String.IndexOfAny, X0, X1
	038 Move TEMP, X0
	039 And TEMP, TEMP, -2147483648
	040 Compare TEMP, -2147483648
	041 JumpIfEqual {49}
	042 Move W1, W0
	043 Move X0, X19
	044 Move X2, X31
	045 Call String.get_Chars, X0, X1
	046 And W8, W0, 0xFFFF
	047 NotImplemented "Instruction CMP not yet implemented."
	048 NotImplemented "Instruction CSET not yet implemented."
	049 Move W0, W31
	050 Move X20, [X31+32]
	051 Move X19, [X31+40]
	052 Move X22, [X31+16]
	053 Move X21, [X31+24]
	054 Move X30, [X31+48]
	055 Return X0
	056 Call 0x1C17F20

Method: System.String InternalEscapeString(System.String rawString)

Disassembly:
	0x0361F3A8 CMP W21, 0x23
	0x0361F3AC B.EQ 0x361F358
	0x0361F3B0 CMP W21, 0x2F
	0x0361F3B4 B.EQ 0x361F358
	0x0361F3B8 B 0x361F3F8
	0x0361F3BC CMP W21, 0x3F
	0x0361F3C0 B.EQ 0x361F358
	0x0361F3C4 CMP W21, 0x5C
	0x0361F3C8 B.NE 0x361F3F8
	0x0361F3CC ADRP X8, 0xAD6000
	0x0361F3D0 LDR X8, [X8 + 0xA28]
	0x0361F3D4 LDR X0, [X8]
	0x0361F3D8 LDR W8, [X0 + 0xE0]
	0x0361F3DC CBNZ W8, 0x361F3E4
	0x0361F3E0 BL 0x1C16DFC
	0x0361F3E4 MOVZ W1, 0x2000
	0x0361F3E8 MOV X0, X24
	0x0361F3EC MOV X2, X31
	0x0361F3F0 BL 0x3629044
	0x0361F3F4 TBNZ X0, 0x0, 0x361F358
	0x0361F3F8 STP X31, X29, [X31 + 0x40]
	0x0361F3FC TBZ X28, 0x2, 0x361F518
	0x0361F400 AND W8, W26, 0xFFFF
	0x0361F404 CMP W8, W23, UXTH
	0x0361F408 B.LS 0x361F518
	0x0361F40C LDR W8, [X31 + 0x68]
	0x0361F410 MOVZ X10, 0x1001
	0x0361F414 MOVK X10, 0x10000000
	0x0361F418 STR X22, [X31 + 0x38]
	0x0361F41C SUB W8, W8, W25
	0x0361F420 MOVN W22, 0x0
	0x0361F424 MOVZ W9, 0x1
	0x0361F428 MOVK X10, 0x2000000
	0x0361F42C MOV W29, W23
	0x0361F430 CMP W8, W22
	0x0361F434 B.EQ 0x361F520
	0x0361F438 LDR X12, [X31 + 0x70]
	0x0361F43C AND X11, X29, 0xFFFF
	0x0361F440 LDRH W11, [X12, X11, LSL #1]
	0x0361F444 SUB W11, W11, 0x23
	0x0361F448 CMP W11, 0x39
	0x0361F44C B.HI 0x361F464
	0x0361F450 LSLV X12, X9, X11
	0x0361F454 ANDS X31, X12, X10, 0x0
	0x0361F458 B.NE 0x361F520
	0x0361F45C CMP X11, 0x1D
	0x0361F460 B.EQ 0x361F910
	0x0361F464 ADD W29, W29, 0x1
	0x0361F468 AND W11, W29, 0xFFFF
	0x0361F46C CMP W11, W26, UXTH
	0x0361F470 SUB W22, W22, 0x1
	0x0361F474 B.CC 0x361F430
	0x0361F478 B 0x361F524
	0x0361F47C BL 0x1C16DFC
	0x0361F480 TBZ X21, 0x1D, 0x361F4D4

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+32], X20
	004 Move [X31+40], X19
	005 Move X20, 0xDC2000
	006 Move W8, [X20+1161]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0xAD7000
	013 Move X0, [X0+632]
	014 Call 0x1C17CF4
	015 Move X0, 0xB1D000
	016 Move X0, [X0+88]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+1161], W8
	020 Compare X19, 0
	021 JumpIfEqual {52}
	022 Move X8, 0xB1D000
	023 Move X8, [X8+88]
	024 Move [X31+28], W31
	025 Move W20, [X19+16]
	026 Move X0, [X8]
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move W8, 37
	032 Add X4, X31, 28
	033 Move W5, 1
	034 Move W6, 63
	035 Move W7, 35
	036 Move X0, X19
	037 Move W1, W31
	038 Move W2, W20
	039 Move X3, X31
	040 Move [X31+8], X31
	041 NotImplemented "Instruction STRH not yet implemented."
	042 Call UriHelper.EscapeString, X0, X1, X2, X3, X4, X5, X6, X7, X8
	043 Compare X0, 0
	044 JumpIfEqual {57}
	045 Move W3, [X31+28]
	046 Move X1, X0
	047 Move X0, X31
	048 Move W2, W31
	049 Move X4, X31
	050 Call String.CreateString, X0, X1, X2, X3
	051 Move X19, X0
	052 Move X8, 0xAD7000
	053 Move X8, [X8+632]
	054 Move X8, [X8]
	055 Move X8, [X8+184]
	056 Move X19, [X8]
	057 Move X0, X19
	058 Move X20, [X31+32]
	059 Move X19, [X31+40]
	060 Move X30, [X31+16]
	061 Add X31, X31, 48
	062 Return X0

Method: System.ParsingError ParseScheme(System.String uriString, ref System.Uri/Flags flags, ref System.UriParser syntax)

Disassembly:
	0x0361F484 LDR X9, [X31 + 0x70]
	0x0361F488 MOV W8, W23
	0x0361F48C AND X8, X8, 0xFFFF
	0x0361F490 LDRH W8, [X9, X8, LSL #1]
	0x0361F494 CMP W8, 0x2F
	0x0361F498 B.NE 0x361F4C4
	0x0361F49C ADRP X21, 0xAD6000
	0x0361F4A0 LDR X21, [X21 + 0xA28]
	0x0361F4A4 LDR X0, [X21]
	0x0361F4A8 LDR W8, [X0 + 0xE0]
	0x0361F4AC CBNZ W8, 0x361F4B8
	0x0361F4B0 BL 0x1C16DFC
	0x0361F4B4 LDR X0, [X21]
	0x0361F4B8 LDR X8, [X0 + 0xB8]
	0x0361F4BC LDRB W8, [X8 + 0x72]
	0x0361F4C0 CBZ W8, 0x361F4D4
	0x0361F4C4 MOVZ W8, 0x8
	0x0361F4C8 STR W8, [X22]
	0x0361F4CC CBNZ W19, 0x361F4E8
	0x0361F4D0 B 0x361F4F4
	0x0361F4D4 LDR X8, [X20]
	0x0361F4D8 MOVZ W9, 0x50000
	0x0361F4DC ORR X8, X8, X9, 0x0
	0x0361F4E0 STR X8, [X20]
	0x0361F4E4 CBZ W19, 0x361F4F4
	0x0361F4E8 LDR X8, [X20]
	0x0361F4EC ORR X8, X8, 0x7FFFFFFFF
	0x0361F4F0 STR X8, [X20]
	0x0361F4F4 MOV W0, W23
	0x0361F4F8 LDP X20, X19, [X31 + 0xE0]
	0x0361F4FC LDP X22, X21, [X31 + 0xD0]
	0x0361F500 LDP X24, X23, [X31 + 0xC0]
	0x0361F504 LDP X26, X25, [X31 + 0xB0]
	0x0361F508 LDP X28, X27, [X31 + 0xA0]
	0x0361F50C LDP X29, X30, [X31 + 0x90]
	0x0361F510 ADD X31, X31, 0xF0
	0x0361F514 RET
	0x0361F518 MOV W29, W23
	0x0361F51C B 0x361F52C
	0x0361F520 MOV W29, W23
	0x0361F524 STR X31, [X31 + 0x40]
	0x0361F528 LDR X22, [X31 + 0x38]
	0x0361F52C MOVZ W8, 0x1
	0x0361F530 BIC W8, W8, W28, 0x11
	0x0361F534 CMP W21, 0x5B
	0x0361F538 STRB W8, [X31 + 0x84]
	0x0361F53C B.NE 0x361F5FC
	0x0361F540 MOVZ W1, 0x800
	0x0361F544 MOV X0, X24
	0x0361F548 MOV X2, X31
	0x0361F54C BL 0x3629044
	0x0361F550 TBZ X0, 0x0, 0x361F6AC
	0x0361F554 LDR X0, [X31 + 0x70]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xDC2000
	007 Move W8, [X22+1162]
	008 Move X20, X2
	009 Move X19, X1
	010 Move X21, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0xAD7000
	016 Move X0, [X0+2600]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+1162], W8
	020 Compare X21, 0
	021 JumpIfEqual {61}
	022 Move W22, [X21+16]
	023 Compare W22, 0
	024 JumpIfEqual {52}
	025 Move W8, 0xFFEF
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move X0, X31
	028 Call RuntimeHelpers.get_OffsetToStringData
	029 Move X8, 0xAD7000
	030 Move X8, [X8+2600]
	031 Move [X31+12], W31
	032 Add X21, X21, W0
	033 Move X8, [X8]
	034 Move W9, [X8+224]
	035 Compare W9, 0
	036 JumpIfNotEqual {39}
	037 Move X0, X8
	038 Call 0x1C17DFC
	039 Add X2, X31, 12
	040 Move X0, X21
	041 Move W1, W22
	042 Move X3, X19
	043 Move X4, X20
	044 Call Uri.ParseSchemeCheckImplicitFile, X0, X1, X2, X3, X4
	045 Move W8, [X31+12]
	046 Compare W8, 0
	047 JumpIfNotEqual {54}
	048 Move X9, [X19]
	049 And X10, X0, 0xFFFF
	050 Or X9, X9, X10
	051 Move [X19], X9
	052 Move W8, 4
	053 Move W8, 6
	054 Move X20, [X31+32]
	055 Move X19, [X31+40]
	056 Move X22, [X31+16]
	057 Move X21, [X31+24]
	058 Move W0, W8
	059 Move X30, [X31+48]
	060 Return X0
	061 Call 0x1C17F20

Method: System.UriFormatException ParseMinimal()

Disassembly:
	0x0361FAB4 MOV X1, X0
	0x0361FAB8 MOV X0, X29
	0x0361FABC MOV X2, X31
	0x0361FAC0 BL 0x321B938
	0x0361FAC4 STR X0, [X19]
	0x0361FAC8 LDR X8, [X20]
	0x0361FACC MOVZ W9, 0x1
	0x0361FAD0 ORR X8, X8, 0x7FFFFFFFF
	0x0361FAD4 STR X8, [X20]
	0x0361FAD8 STRB W9, [X31 + 0x88]
	0x0361FADC LDR W8, [X31 + 0x8C]
	0x0361FAE0 CMP W8, W25
	0x0361FAE4 B.GE 0x361FB40
	0x0361FAE8 LDR X10, [X31 + 0x70]
	0x0361FAEC SXTW X9, W8
	0x0361FAF0 LDRH W9, [X10, X9, LSL #1]
	0x0361FAF4 CMP W9, 0x5C
	0x0361FAF8 B.NE 0x361FB40
	0x0361FAFC LDRB W9, [X20 + 0x2]
	0x0361FB00 LDR X21, [X31 + 0x48]
	0x0361FB04 ANDS W31, W9, 0x7
	0x0361FB08 B.EQ 0x361FB44
	0x0361FB0C ADRP X8, 0xAD6000
	0x0361FB10 LDR X8, [X8 + 0xA28]
	0x0361FB14 LDR X0, [X8]
	0x0361FB18 LDR W8, [X0 + 0xE0]
	0x0361FB1C CBNZ W8, 0x361FB24
	0x0361FB20 BL 0x1C16DFC
	0x0361FB24 MOVZ W1, 0x2000
	0x0361FB28 MOV X0, X24
	0x0361FB2C MOV X2, X31
	0x0361FB30 BL 0x3629044

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xDC2000
	005 Move W8, [X20+1163]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xAD7000
	012 Move X0, [X0+2600]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+1163], W8
	016 Move X0, X19
	017 Call Uri.PrivateParseMinimal, X0
	018 Compare W0, 0
	019 JumpIfEqual {37}
	020 Move X8, [X19+48]
	021 Move X9, 0xAD7000
	022 Move X9, [X9+2600]
	023 Move W20, W0
	024 Or X8, X8, 0x7FFFFFF
	025 Move [X19+48], X8
	026 Move X0, [X9]
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move W0, W20
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X30, [X31+32]
	035 Call Uri.GetException, X0
	036 Return X0
	037 Move X20, [X31+16]
	038 Move X19, [X31+24]
	039 Move X0, X31
	040 Move X30, [X31+32]
	041 Return X0

Method: System.ParsingError PrivateParseMinimal()

Disassembly:
	0x0361FB34 TBZ X0, 0x0, 0x361FBD8
	0x0361FB38 LDR W8, [X31 + 0x8C]
	0x0361FB3C B 0x361FB44
	0x0361FB40 LDR X21, [X31 + 0x48]
	0x0361FB44 CMP W8, W25
	0x0361FB48 B.GE 0x361FC7C
	0x0361FB4C LDR X9, [X31 + 0x70]
	0x0361FB50 LDRH W8, [X9, W8, SXTW]
	0x0361FB54 CMP W8, 0x3A
	0x0361FB58 B.NE 0x361FC7C
	0x0361FB5C MOVZ W1, 0x8
	0x0361FB60 MOV X0, X24
	0x0361FB64 MOV X2, X31
	0x0361FB68 BL 0x3629044
	0x0361FB6C TBZ X0, 0x0, 0x361FC00
	0x0361FB70 LDR W27, [X31 + 0x8C]
	0x0361FB74 MOV W8, W31
	0x0361FB78 MOVZ W9, 0xA
	0x0361FB7C MOV W19, W27
	0x0361FB80 ADD W23, W19, 0x1
	0x0361FB84 AND W19, W23, 0xFFFF
	0x0361FB88 CMP W19, W25
	0x0361FB8C B.CS 0x361FC34
	0x0361FB90 LDR X10, [X31 + 0x70]
	0x0361FB94 LDRH W10, [X10, W19, UXTW]
	0x0361FB98 SUB W11, W10, 0x30
	0x0361FB9C CMP W11, 0x9
	0x0361FBA0 B.HI 0x361FC10
	0x0361FBA4 MUL W8, W8, W9
	0x0361FBA8 ADD W8, W8, W11, UXTH
	0x0361FBAC CMP W8, 0x10000
	0x0361FBB0 B.LT 0x361FB80
	0x0361FBB4 MOVZ W1, 0x1000
	0x0361FBB8 MOV X0, X24
	0x0361FBBC MOV X2, X31
	0x0361FBC0 BL 0x3629044
	0x0361FBC4 TBZ X0, 0x0, 0x361FF0C
	0x0361FBC8 LDR X8, [X20]
	0x0361FBCC AND X8, X8, 0xFFFFFFFFFFFF
	0x0361FBD0 STR X8, [X20]
	0x0361FBD4 B 0x361FC34
	0x0361FBD8 MOVZ W1, 0x10000
	0x0361FBDC MOV X0, X24
	0x0361FBE0 MOV X2, X31
	0x0361FBE4 BL 0x3629044
	0x0361FBE8 TBZ X0, 0x0, 0x361FC00
	0x0361FBEC MOVZ W8, 0x8
	0x0361FBF0 STR W8, [X22]
	0x0361FBF4 LDR X8, [X20]
	0x0361FBF8 ORR X8, X8, 0x7FFFF
	0x0361FBFC B 0x361FE50
	0x0361FC00 LDR X8, [X20]
	0x0361FC04 AND X8, X8, 0xFFFFFFFFFFFF
	0x0361FC08 STR X8, [X20]
	0x0361FC0C B 0x361FC7C
	0x0361FC10 CMP W10, 0x3F
	0x0361FC14 B.HI 0x361FEE4
	0x0361FC18 MOV W8, W10
	0x0361FC1C MOVZ W9, 0x1
	0x0361FC20 LSLV X8, X9, X8
	0x0361FC24 MOVZ X9, 0x8008
	0x0361FC28 MOVK X9, 0x80000000
	0x0361FC2C ANDS X31, X8, X9, 0x0
	0x0361FC30 B.EQ 0x361FEE4
	0x0361FC34 LDRB W8, [X31 + 0x88]
	0x0361FC38 LDR W9, [X31 + 0x54]
	0x0361FC3C ANDS W31, W9, W8, 0x0
	0x0361FC40 B.EQ 0x361FC7C
	0x0361FC44 LDR X8, [X31 + 0x48]
	0x0361FC48 LDR X1, [X31 + 0x70]
	0x0361FC4C SUB W3, W19, W27
	0x0361FC50 MOV X0, X31
	0x0361FC54 LDR X29, [X8]
	0x0361FC58 MOV W2, W27
	0x0361FC5C MOV X4, X31
	0x0361FC60 BL 0x322EAD4
	0x0361FC64 LDR X21, [X31 + 0x48]
	0x0361FC68 MOV X1, X0
	0x0361FC6C MOV X0, X29
	0x0361FC70 MOV X2, X31
	0x0361FC74 BL 0x321B938
	0x0361FC78 STR X0, [X21]
	0x0361FC7C LDR X8, [X20]
	0x0361FC80 ANDS X31, X8, 0x7FFFF
	0x0361FC84 B.NE 0x361FEB8
	0x0361FC88 AND X8, X8, 0x1FFFFFFFFFFFFF
	0x0361FC8C MOVZ W1, 0x1000
	0x0361FC90 MOV X0, X24
	0x0361FC94 MOV X2, X31
	0x0361FC98 AND X23, X23, 0xFFFF
	0x0361FC9C STR X8, [X20]
	0x0361FCA0 BL 0x3629044
	0x0361FCA4 TBZ X0, 0x0, 0x361FD38
	0x0361FCA8 LDR X8, [X20]
	0x0361FCAC MOVZ W9, 0x50000
	0x0361FCB0 CMP W23, W26, UXTH
	0x0361FCB4 ORR X8, X8, X9, 0x0
	0x0361FCB8 STR X8, [X20]
	0x0361FCBC STR W23, [X31 + 0x8C]
	0x0361FCC0 B.CS 0x361FD0C
	0x0361FCC4 LDR X9, [X31 + 0x70]
	0x0361FCC8 MOVZ X11, 0x8008
	0x0361FCCC AND X8, X26, 0xFFFF
	0x0361FCD0 MOVZ W10, 0x1
	0x0361FCD4 ADD X9, X9, X23, 0x1, LSL
	0x0361FCD8 MOVK X11, 0x80000000
	0x0361FCDC LDRH W12, [X9]
	0x0361FCE0 CMP W12, 0x3F
	0x0361FCE4 B.HI 0x361FCF4
	0x0361FCE8 LSLV X12, X10, X12
	0x0361FCEC ANDS X31, X12, X11, 0x0
	0x0361FCF0 B.NE 0x361FD0C
	0x0361FCF4 ADD X23, X23, 0x1
	0x0361FCF8 CMP X8, X23
	0x0361FCFC ADD X9, X9, 0x2
	0x0361FD00 STR W23, [X31 + 0x8C]
	0x0361FD04 B.NE 0x361FCDC
	0x0361FD08 MOV W23, W25
	0x0361FD0C LDP X8, X0, [X31 + 0x58]
	0x0361FD10 LDR X1, [X31 + 0x70]
	0x0361FD14 LDP W2, W4, [X31 + 0x68]
	0x0361FD18 MOV W3, W23
	0x0361FD1C CMP X8, 0x0
	0x0361FD20 CSET W5, NE
	0x0361FD24 MOV X6, X24
	0x0361FD28 MOV X7, X20
	0x0361FD2C STP X21, X22, [X31]
	0x0361FD30 BL 0x3622FC4
	0x0361FD34 B 0x361FEB8
	0x0361FD38 MOVZ W1, 0x10000
	0x0361FD3C MOV X0, X24
	0x0361FD40 MOV X2, X31
	0x0361FD44 BL 0x3629044
	0x0361FD48 TBZ X0, 0x0, 0x361FE58
	0x0361FD4C CMP W23, W26, UXTH
	0x0361FD50 STR W23, [X31 + 0x8C]
	0x0361FD54 B.CS 0x361FDCC
	0x0361FD58 LDR X9, [X31 + 0x70]
	0x0361FD5C AND X11, X26, 0xFFFF
	0x0361FD60 MOVZ X12, 0x8008
	0x0361FD64 MOV X8, X31
	0x0361FD68 MOV W13, W31
	0x0361FD6C ADD X9, X9, X23, 0x1, LSL
	0x0361FD70 MOVZ W10, 0x1
	0x0361FD74 SUB X11, X11, X23
	0x0361FD78 MOVK X12, 0x80000000
	0x0361FD7C TBZ X13, 0x0, 0x361FD98
	0x0361FD80 LDRH W13, [X9]
	0x0361FD84 CMP W13, 0x3F
	0x0361FD88 B.HI 0x361FD98
	0x0361FD8C LSLV X13, X10, X13
	0x0361FD90 ANDS X31, X13, X12, 0x0
	0x0361FD94 B.NE 0x361FDCC
	0x0361FD98 CMP X8, 0x2
	0x0361FD9C B.EQ 0x361FE6C
	0x0361FDA0 LDRH W13, [X9]
	0x0361FDA4 CMP W13, 0x2E
	0x0361FDA8 B.NE 0x361FE6C
	0x0361FDAC ADD W13, W23, W8
	0x0361FDB0 ADD X8, X8, 0x1
	0x0361FDB4 ADD W13, W13, 0x1
	0x0361FDB8 ADD X9, X9, 0x2
	0x0361FDBC CMP X11, X8
	0x0361FDC0 STR W13, [X31 + 0x8C]
	0x0361FDC4 MOVZ W13, 0x1
	0x0361FDC8 B.NE 0x361FD7C
	0x0361FDCC LDR X19, [X20]
	0x0361FDD0 MOVZ W8, 0x50000
	0x0361FDD4 ORR X8, X19, X8, 0x0
	0x0361FDD8 STR X8, [X20]
	0x0361FDDC LDR W8, [X31 + 0x54]
	0x0361FDE0 CBZ W8, 0x361FEB8
	0x0361FDE4 ADRP X8, 0xAD6000
	0x0361FDE8 LDR X8, [X8 + 0xA28]
	0x0361FDEC LDR X0, [X8]
	0x0361FDF0 LDR W8, [X0 + 0xE0]
	0x0361FDF4 CBNZ W8, 0x361FDFC
	0x0361FDF8 BL 0x1C16DFC
	0x0361FDFC TBNZ X19, 0x0, 0x361FEB8
	0x0361FE00 LDR W8, [X31 + 0x8C]
	0x0361FE04 LDR X1, [X31 + 0x70]
	0x0361FE08 MOV X0, X31
	0x0361FE0C MOV W2, W23
	0x0361FE10 SUB W3, W8, W23
	0x0361FE14 MOV X4, X31
	0x0361FE18 MOV X19, X22
	0x0361FE1C BL 0x322EAD4
	0x0361FE20 CBZ X0, 0x361FF1C
	0x0361FE24 LDR X22, [X21]
	0x0361FE28 MOVZ W1, 0x1
	0x0361FE2C MOV X2, X31
	0x0361FE30 BL 0x322E3D0
	0x0361FE34 MOV X1, X0
	0x0361FE38 MOV X0, X22
	0x0361FE3C MOV X2, X31
	0x0361FE40 BL 0x321B938
	0x0361FE44 STR X0, [X21]
	0x0361FE48 LDR X8, [X20]
	0x0361FE4C ORR X8, X8, 0x7FFFFFFFF
	0x0361FE50 STR X8, [X20]
	0x0361FE54 B 0x361FEB8
	0x0361FE58 MOVZ W1, 0x1
	0x0361FE5C MOV X0, X24
	0x0361FE60 MOV X2, X31
	0x0361FE64 BL 0x3629044
	0x0361FE68 TBZ X0, 0x0, 0x361FE80
	0x0361FE6C MOVZ W8, 0x8
	0x0361FE70 STR W8, [X22]
	0x0361FE74 LDR X8, [X20]
	0x0361FE78 ORR X8, X8, 0x7FFFF
	0x0361FE7C B 0x361F4F0
	0x0361FE80 MOVZ W1, 0x4000
	0x0361FE84 MOV X0, X24
	0x0361FE88 MOV X2, X31
	0x0361FE8C BL 0x3629044
	0x0361FE90 TBZ X0, 0x0, 0x361FEB8
	0x0361FE94 ADRP X8, 0xB1C000
	0x0361FE98 LDR X8, [X8 + 0x48]
	0x0361FE9C LDR X0, [X8]
	0x0361FEA0 LDR W8, [X0 + 0xE0]
	0x0361FEA4 CBNZ W8, 0x361FEAC
	0x0361FEA8 BL 0x1C16DFC
	0x0361FEAC MOV X0, X31
	0x0361FEB0 BL 0x362BC9C
	0x0361FEB4 TBZ X0, 0x0, 0x361FE6C
	0x0361FEB8 LDR W23, [X31 + 0x8C]
	0x0361FEBC B 0x361F4F4
	0x0361FEC0 LDR W8, [X31 + 0x68]
	0x0361FEC4 STR X31, [X31 + 0x40]
	0x0361FEC8 SUB W29, W8, W22
	0x0361FECC LDR X22, [X31 + 0x38]
	0x0361FED0 LDR X9, [X31 + 0x70]
	0x0361FED4 UBFM W8, W29, 0x1F, 0x1E
	0x0361FED8 AND X8, X8, 0x1FFFF
	0x0361FEDC LDRH W21, [X8, X9, LSL]
	0x0361FEE0 B 0x361F52C
	0x0361FEE4 MOVZ W1, 0x1000
	0x0361FEE8 MOV X0, X24
	0x0361FEEC MOV X2, X31
	0x0361FEF0 BL 0x3629044
	0x0361FEF4 TBZ X0, 0x0, 0x361FF0C
	0x0361FEF8 MOVZ W1, 0x10000
	0x0361FEFC MOV X0, X24
	0x0361FF00 MOV X2, X31
	0x0361FF04 BL 0x3629060
	0x0361FF08 TBNZ X0, 0x0, 0x361FBC8
	0x0361FF0C MOVZ W8, 0xA
	0x0361FF10 STR W8, [X22]
	0x0361FF14 B 0x361F4F4
	0x0361FF18 BL 0x1C16F20
	0x0361FF1C BL 0x1C16F20
	0x0361FF20 BL 0x1C16F20
	0x0361FF24 B 0x361FFAC
	0x0361FF28 B 0x361FFAC
	0x0361FF2C B 0x361FFAC
	0x0361FF30 B 0x361FF38
	0x0361FF34 B 0x361FF38
	0x0361FF38 MOV X20, X0
	0x0361FF3C CMP W1, 0x1
	0x0361FF40 B.NE 0x362001C
	0x0361FF44 MOV X0, X20
	0x0361FF48 BL 0x3EB1AD0
	0x0361FF4C MOV X20, X0
	0x0361FF50 ADRP X0, 0xADC000
	0x0361FF54 LDR X0, [X0 + 0x578]
	0x0361FF58 BL 0x1C16D08
	0x0361FF5C LDR X8, [X20]
	0x0361FF60 LDR X1, [X8]
	0x0361FF64 BL 0x1C17270
	0x0361FF68 TBZ X0, 0x0, 0x361FF7C
	0x0361FF6C BL 0x3EB1AE0
	0x0361FF70 MOVZ W8, 0x1
	0x0361FF74 STR W8, [X19]
	0x0361FF78 B 0x361F4F4
	0x0361FF7C MOVZ W0, 0x8
	0x0361FF80 BL 0x3EB1AF0
	0x0361FF84 LDR X8, [X20]
	0x0361FF88 STR X8, [X0]
	0x0361FF8C ADRP X1, 0x895000
	0x0361FF90 ADD X1, X1, 0xE58
	0x0361FF94 MOV X2, X31
	0x0361FF98 BL 0x3EB1B00
	0x0361FF9C B 0x3620014
	0x0361FFA0 MOV X20, X0
	0x0361FFA4 BL 0x3EB1AE0
	0x0361FFA8 B 0x362001C
	0x0361FFAC MOV X20, X0
	0x0361FFB0 CMP W1, 0x1
	0x0361FFB4 B.NE 0x362001C
	0x0361FFB8 MOV X0, X20
	0x0361FFBC BL 0x3EB1AD0
	0x0361FFC0 MOV X20, X0
	0x0361FFC4 ADRP X0, 0xADC000
	0x0361FFC8 LDR X0, [X0 + 0x578]
	0x0361FFCC BL 0x1C16D08
	0x0361FFD0 LDR X8, [X20]
	0x0361FFD4 LDR X1, [X8]
	0x0361FFD8 BL 0x1C17270
	0x0361FFDC TBZ X0, 0x0, 0x361FFF4
	0x0361FFE0 BL 0x3EB1AE0
	0x0361FFE4 LDR X9, [X31 + 0x38]
	0x0361FFE8 MOVZ W8, 0x1
	0x0361FFEC STR W8, [X9]
	0x0361FFF0 B 0x361F4F4
	0x0361FFF4 MOVZ W0, 0x8
	0x0361FFF8 BL 0x3EB1AF0
	0x0361FFFC LDR X8, [X20]
	0x03620000 STR X8, [X0]
	0x03620004 ADRP X1, 0x894000
	0x03620008 ADD X1, X1, 0xE58
	0x0362000C MOV X2, X31
	0x03620010 BL 0x3EB1B00
	0x03620014 MOV X20, X0
	0x03620018 BL 0x3EB1AE0
	0x0362001C MOV X0, X20
	0x03620020 BL 0x1D2C690
	0x03620024 BL 0x1990590
	0x03620028 STP X30, X21, [X31 - 0x20]!
	0x0362002C STP X20, X19, [X31 + 0x10]
	0x03620030 MOV W20, W2
	0x03620034 MOV X19, X0
	0x03620038 CBZ X1, 0x3620040
	0x0362003C STR X1, [X19 + 0x10]
	0x03620040 LDRB W8, [X19 + 0x40]
	0x03620044 CBNZ W8, 0x362006C
	0x03620048 MOV X0, X19
	0x0362004C BL 0x3617E68
	0x03620050 TBZ X0, 0x0, 0x3620064
	0x03620054 LDR X8, [X19 + 0x30]
	0x03620058 MOVZ X9, 0x11
	0x0362005C ANDS X31, X8, X9, 0x0
	0x03620060 B.NE 0x3620088
	0x03620064 LDRB W8, [X19 + 0x40]
	0x03620068 CBZ W8, 0x36200EC
	0x0362006C LDRB W8, [X19 + 0x34]
	0x03620070 TBNZ X8, 0x1, 0x36200D4
	0x03620074 MOV X0, X19
	0x03620078 BL 0x3617E68
	0x0362007C TBZ X0, 0x0, 0x36200D4
	0x03620080 LDR X8, [X19 + 0x30]
	0x03620084 TBZ X8, 0x0, 0x36200D4
	0x03620088 LDR X21, [X19 + 0x10]
	0x0362008C AND X8, X8, 0xFFFFFFFF
	0x03620090 STR X8, [X19 + 0x30]
	0x03620094 CBZ X21, 0x36200F8
	0x03620098 LDRSW X9, [X21 + 0x10]
	0x0362009C LDR X0, [X19 + 0x18]
	0x036200A0 ORR X8, X8, X9, 0x0
	0x036200A4 STR X8, [X19 + 0x30]
	0x036200A8 CBZ X0, 0x36200F8
	0x036200AC LDR W8, [X0 + 0x10]
	0x036200B0 AND W1, W20, 0xFFFF
	0x036200B4 MOV X3, X31
	0x036200B8 SUB W2, W8, W20, UXTH
	0x036200BC BL 0x3228DE4
	0x036200C0 MOV X1, X0
	0x036200C4 MOV X0, X21
	0x036200C8 MOV X2, X31
	0x036200CC BL 0x321B938
	0x036200D0 STR X0, [X19 + 0x10]
	0x036200D4 LDRB W8, [X19 + 0x40]
	0x036200D8 CBZ W8, 0x36200EC
	0x036200DC LDR X8, [X19 + 0x30]
	0x036200E0 TBZ X8, 0x0, 0x36200EC
	0x036200E4 ORR X8, X8, 0x7FFFFFFFFF
	0x036200E8 STR X8, [X19 + 0x30]
	0x036200EC LDP X20, X19, [X31 + 0x10]
	0x036200F0 LDP X30, X21, [X31], #0x20
	0x036200F4 RET
	0x036200F8 BL 0x1C16F20
	0x036200FC SUB X31, X31, 0x60
	0x03620100 STR X30, [X31 + 0x20]
	0x03620104 STP X24, X23, [X31 + 0x30]
	0x03620108 STP X22, X21, [X31 + 0x40]
	0x0362010C STP X20, X19, [X31 + 0x50]
	0x03620110 ADRP X20, 0xDC0000
	0x03620114 LDRB W8, [X20 + 0x490]
	0x03620118 MOV X19, X0
	0x0362011C TBNZ X8, 0x0, 0x3620134
	0x03620120 ADRP X0, 0xAD5000
	0x03620124 LDR X0, [X0 + 0xA28]
	0x03620128 BL 0x1C16CF4
	0x0362012C MOVZ W8, 0x1
	0x03620130 STRB W8, [X20 + 0x490]
	0x03620134 STR X31, [X31 + 0x18]
	0x03620138 LDR X8, [X19 + 0x38]
	0x0362013C CBZ X8, 0x36204F4
	0x03620140 LDR X8, [X8 + 0x10]
	0x03620144 CBNZ X8, 0x3620308
	0x03620148 LDR X0, [X19 + 0x20]
	0x0362014C CBZ X0, 0x36204F4
	0x03620150 MOVZ W2, 0x4
	0x03620154 MOVZ W3, 0x1
	0x03620158 MOV X1, X19
	0x0362015C MOV X4, X31
	0x03620160 BL 0x362CEA8
	0x03620164 LDR X8, [X19 + 0x38]
	0x03620168 CBZ X8, 0x36204F4
	0x0362016C LDR X8, [X8 + 0x10]
	0x03620170 MOV X20, X0
	0x03620174 CBNZ X8, 0x3620214
	0x03620178 CBZ X20, 0x36204F4
	0x0362017C LDR W8, [X20 + 0x10]
	0x03620180 MOVZ W9, 0xFFF0
	0x03620184 CMP W8, W9
	0x03620188 B.GE 0x36204F8
	0x0362018C STR W31, [X31 + 0x2C]
	0x03620190 LDR X8, [X19 + 0x30]
	0x03620194 MOV X0, X31
	0x03620198 AND X8, X8, 0xFFFFFFFFFFFF
	0x0362019C STR X8, [X31 + 0x18]
	0x036201A0 BL 0x32C1424
	0x036201A4 STR X31, [X31 + 0x10]
	0x036201A8 LDR W3, [X20 + 0x10]
	0x036201AC LDR X6, [X19 + 0x20]
	0x036201B0 ADD X1, X20, W0, SXTW
	0x036201B4 ADD X4, X31, 0x2C
	0x036201B8 ADD X5, X31, 0x18
	0x036201BC ADD X7, X31, 0x10
	0x036201C0 MOV X0, X19
	0x036201C4 MOV W2, W31

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+32], X29
	003 Move [X31+40], X30
	004 Move [X31+48], X28
	005 Move [X31+56], X27
	006 Move [X31+64], X26
	007 Move [X31+72], X25
	008 Move [X31+80], X24
	009 Move [X31+88], X23
	010 Move [X31+96], X22
	011 Move [X31+104], X21
	012 Move [X31+112], X20
	013 Move [X31+120], X19
	014 Move X20, 0xDC2000
	015 Move W8, [X20+1164]
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {26}
	021 Move X0, 0xAD7000
	022 Move X0, [X0+2600]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X20+1164], W8
	026 Move [X31+20], W31
	027 Move X20, X19
	028 Add X20, X20, 48
	029 Move X23, [X20]
	030 NotImplemented "Instruction LDUR not yet implemented."
	031 Compare X8, 0
	032 JumpIfEqual {464}
	033 NotImplemented "Instruction LDRH not yet implemented."
	034 Move [X31+24], X31
	035 Move W11, [X19+64]
	036 Move TEMP, 0xFFFF
	037 Not TEMP
	038 Move X8, TEMP
	039 NotImplemented "Instruction MOVK not yet implemented."
	040 And X31, X23, 0x7FFFFFFFF
	041 Move W9, 16
	042 Move W10, 24
	043 And X8, X23, X8
	044 NotImplemented "Instruction CSEL not yet implemented."
	045 Move [X19+48], X8
	046 NotImplemented "Instruction CMP not yet implemented."
	047 And X8, X23, 0x3FFFFFFFF
	048 NotImplemented "Instruction CCMP not yet implemented."
	049 NotImplemented "Instruction CSEL not yet implemented."
	050 Move X21, [X19]
	051 And W24, W23, 0xFFFF
	052 Compare X21, 0
	053 JumpIfEqual {57}
	054 Move X0, X31
	055 Call RuntimeHelpers.get_OffsetToStringData
	056 Add X21, X21, W0
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Move X25, 0xAD7000
	059 Move X25, [X25+2600]
	060 Subtract X26, X22, 1
	061 NotImplemented "Instruction LDRH not yet implemented."
	062 Move X0, [X25]
	063 Move W8, [X0+224]
	064 Compare W8, 0
	065 JumpIfNotEqual {67}
	066 Call 0x1C17DFC
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Move W8, W27
	069 Move W9, 1
	070 NotImplemented "Instruction LSLV not yet implemented."
	071 Move X9, 0x2600
	072 NotImplemented "Instruction MOVK not yet implemented."
	073 And X31, X8, X9
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Move W22, W26
	076 Move X28, 0x2600
	077 Move W27, 1
	078 NotImplemented "Instruction MOVK not yet implemented."
	079 Move X0, [X25]
	080 Subtract W22, W26, 1
	081 Move W8, W22
	082 ShiftRight W8, 31
	083 And W8, W8, 0x3FFFFFFF
	084 And X8, X8, 0x1FFFF
	085 Move W9, [X0+224]
	086 NotImplemented "Instruction LDRH not yet implemented."
	087 Compare W9, 0
	088 JumpIfNotEqual {90}
	089 Call 0x1C17DFC
	090 NotImplemented "Instruction CMP not yet implemented."
	091 Move W8, W26
	092 NotImplemented "Instruction LSLV not yet implemented."
	093 And X31, X8, X28
	094 NotImplemented "Instruction CMP not yet implemented."
	095 And W26, W22, 0xFFFF
	096 And W8, W22, 0xFFFF
	097 Add W22, W8, 1
	098 Move X0, [X19+32]
	099 Compare X0, 0
	100 JumpIfEqual {464}
	101 Move W1, 128
	102 NotImplemented "Instruction MOVK not yet implemented."
	103 Move X2, X31
	104 Call UriParser.IsAllSet, X0, X1
	105 Move TEMP, X0
	106 And TEMP, TEMP, 1
	107 Compare TEMP, 1
	108 JumpIfNotEqual {144}
	109 Move W8, [X20+3]
	110 Move TEMP, X8
	111 And TEMP, TEMP, 32
	112 Compare TEMP, 32
	113 JumpIfEqual {144}
	114 Add W8, W24, 1
	115 NotImplemented "Instruction CMP not yet implemented."
	116 And W28, W22, 0xFFFF
	117 NotImplemented "Instruction CMP not yet implemented."
	118 Move W27, W24
	119 And X8, X27, 0xFFFF
	120 NotImplemented "Instruction LDRH not yet implemented."
	121 NotImplemented "Instruction CMP not yet implemented."
	122 NotImplemented "Instruction CMP not yet implemented."
	123 Add W25, W27, 1
	124 NotImplemented "Instruction CMP not yet implemented."
	125 And W27, W25, 0xFFFF
	126 Move W29, W31
	127 Move W29, W31
	128 Move W25, W23
	129 Move W27, W24
	130 Move W29, 1
	131 Move W25, W27
	132 Move X0, [X19+32]
	133 Compare X0, 0
	134 JumpIfEqual {464}
	135 Move W1, 0x2000
	136 Move X2, X31
	137 Call UriParser.InFact, X0, X1
	138 Subtract W26, W27, W24
	139 NotImplemented "Instruction CMP not yet implemented."
	140 Move TEMP, X0
	141 And TEMP, TEMP, 1
	142 Compare TEMP, 1
	143 JumpIfEqual {345}
	144 Move W8, [X20+3]
	145 And W31, W8, 24
	146 Move X9, [X20]
	147 Move TEMP, X9
	148 And TEMP, TEMP, 0x8000000
	149 Compare TEMP, 0x8000000
	150 JumpIfEqual {186}
	151 Move [X31+20], W31
	152 Move X6, [X19+32]
	153 Add X4, X31, 20
	154 Add X7, X31, 24
	155 Move X0, X19
	156 Move X1, X21
	157 Move W2, W23
	158 Move W3, W22
	159 Move X5, X20
	160 Call Uri.CheckAuthorityHelper, X0, X1, X2, X3, X4, X5, X6, X7
	161 Move W8, [X31+20]
	162 Compare W8, 0
	163 JumpIfNotEqual {296}
	164 And W8, W22, 0xFFFF
	165 Move W23, W0
	166 NotImplemented "Instruction CMP not yet implemented."
	167 And X22, X23, 0xFFFF
	168 NotImplemented "Instruction LDRH not yet implemented."
	169 NotImplemented "Instruction CMP not yet implemented."
	170 Move W8, [X20+3]
	171 Move TEMP, X8
	172 And TEMP, TEMP, 32
	173 Compare TEMP, 32
	174 JumpIfEqual {272}
	175 Move X0, [X19+32]
	176 Compare X0, 0
	177 JumpIfEqual {464}
	178 Move W1, 0x100000
	179 Move X2, X31
	180 Call UriParser.NotAny, X0, X1
	181 Move TEMP, X0
	182 And TEMP, TEMP, 1
	183 Compare TEMP, 1
	184 JumpIfNotEqual {272}
	185 Move W8, 11
	186 And X31, X9, 0x1FFFFF
	187 Move W10, 0x50000
	188 Move W11, 0x70000
	189 And X12, X23, 0xFFFF
	190 NotImplemented "Instruction CSEL not yet implemented."
	191 Or X9, X9, X12
	192 Or X9, X9, X10
	193 Move W8, W31
	194 Move [X20], X9
	195 Move X25, 0xAD7000
	196 Move X25, [X25+2600]
	197 Move X0, [X25]
	198 Move W8, [X0+224]
	199 Compare W8, 0
	200 JumpIfNotEqual {203}
	201 Call 0x1C17DFC
	202 Move X0, [X25]
	203 Move X8, [X0+184]
	204 Move W8, [X8+114]
	205 Compare W8, 0
	206 JumpIfEqual {266}
	207 And W8, W23, 0xFFFF
	208 Add W24, W8, 2
	209 NotImplemented "Instruction CMP not yet implemented."
	210 Move X0, [X19+32]
	211 Compare X0, 0
	212 JumpIfEqual {464}
	213 Move W1, 1
	214 Move X2, X31
	215 Call UriParser.InFact, X0, X1
	216 Move TEMP, X0
	217 And TEMP, TEMP, 1
	218 Compare TEMP, 1
	219 JumpIfNotEqual {311}
	220 Move W8, 3
	221 Move X0, [X19+32]
	222 Compare X0, 0
	223 JumpIfEqual {464}
	224 Move W9, W23
	225 Move W8, W8
	226 ShiftRight W8, 31
	227 And W8, W8, 0x3FFFFFFF
	228 And X28, X9, 0xFFFF
	229 Add X8, X8, X21
	230 NotImplemented "Instruction LDRH not yet implemented."
	231 NotImplemented "Instruction LDRH not yet implemented."
	232 Move W1, 1
	233 Move X2, X31
	234 Call UriParser.InFact, X0, X1
	235 Move TEMP, X0
	236 And TEMP, TEMP, 1
	237 Compare TEMP, 1
	238 JumpIfNotEqual {325}
	239 Move X0, [X25]
	240 Move W8, [X0+224]
	241 Compare W8, 0
	242 JumpIfNotEqual {245}
	243 Call 0x1C17DFC
	244 Move X0, [X25]
	245 Move X8, [X0+184]
	246 Move W9, [X8+114]
	247 Compare W9, 0
	248 JumpIfEqual {253}
	249 NotImplemented "Instruction CMP not yet implemented."
	250 NotImplemented "Instruction CMP not yet implemented."
	251 NotImplemented "Instruction CMP not yet implemented."
	252 NotImplemented "Instruction CMP not yet implemented."
	253 Move W8, [X0+224]
	254 Compare W8, 0
	255 JumpIfNotEqual {260}
	256 Call 0x1C17DFC
	257 Move X8, [X25]
	258 Move X8, [X8+184]
	259 Move W9, [X8+114]
	260 NotImplemented "Instruction CMP not yet implemented."
	261 Move W8, 3
	262 NotImplemented "Instruction CMP not yet implemented."
	263 Compare W9, 0
	264 JumpIfNotEqual {296}
	265 Move X8, [X20]
	266 Move X8, [X20]
	267 Move X9, 0x20000000
	268 NotImplemented "Instruction MOVK not yet implemented."
	269 And X31, X8, X9
	270 Move W8, W23
	271 And X22, X8, 0xFFFF
	272 Move X8, [X20]
	273 Or X8, X8, X22
	274 Move [X20], X8
	275 Move X20, 0xAD7000
	276 Move X20, [X20+2600]
	277 Move X0, [X20]
	278 Move W8, [X0+224]
	279 Compare W8, 0
	280 JumpIfNotEqual {283}
	281 Call 0x1C17DFC
	282 Move X0, [X20]
	283 Move X8, [X0+184]
	284 Move W20, [X8+108]
	285 Call 0x1C17D44
	286 Compare W20, 0
	287 JumpIfNotEqual {291}
	288 Move W8, [X19+64]
	289 Compare W8, 0
	290 JumpIfEqual {296}
	291 Move X1, [X31+24]
	292 Move X0, X19
	293 Move W2, W23
	294 Call Uri.PrivateParseMinimalIri, X0, X1, X2
	295 Move W8, W31
	296 Move X20, [X31+112]
	297 Move X19, [X31+120]
	298 Move X22, [X31+96]
	299 Move X21, [X31+104]
	300 Move X24, [X31+80]
	301 Move X23, [X31+88]
	302 Move X26, [X31+64]
	303 Move X25, [X31+72]
	304 Move X28, [X31+48]
	305 Move X27, [X31+56]
	306 Move X29, [X31+32]
	307 Move X30, [X31+40]
	308 Move W0, W8
	309 Add X31, X31, 128
	310 Return X0
	311 Move X0, [X19+32]
	312 Compare X0, 0
	313 JumpIfEqual {464}
	314 Move W1, 0x4000
	315 Move X2, X31
	316 Call UriParser.NotAny, X0, X1
	317 Move TEMP, X0
	318 And TEMP, TEMP, 1
	319 Compare TEMP, 1
	320 JumpIfNotEqual {146}
	321 Move X9, [X20]
	322 And X10, X23, 0xFFFF
	323 Move W8, W31
	324 Or X9, X9, X10
	325 Move X0, [X19+32]
	326 Compare X0, 0
	327 JumpIfEqual {464}
	328 Move W1, 2
	329 Move X2, X31
	330 Call UriParser.InFact, X0, X1
	331 Move TEMP, X0
	332 And TEMP, TEMP, 1
	333 Compare TEMP, 1
	334 JumpIfNotEqual {434}
	335 Move X8, [X20]
	336 Move TEMP, X8
	337 And TEMP, TEMP, 0x100000
	338 Compare TEMP, 0x100000
	339 JumpIfEqual {342}
	340 NotImplemented "Instruction CMP not yet implemented."
	341 NotImplemented "Instruction CMP not yet implemented."
	342 Or X8, X8, 0x1FFFFF
	343 Move W23, W24
	344 Move [X20], X8
	345 NotImplemented "Instruction CMP not yet implemented."
	346 Move X8, [X20]
	347 Or X8, X8, 0x1FFFFF
	348 Move [X20], X8
	349 Add W8, W27, 1
	350 NotImplemented "Instruction CMP not yet implemented."
	351 NotImplemented "Instruction LDRH not yet implemented."
	352 NotImplemented "Instruction CMP not yet implemented."
	353 NotImplemented "Instruction CMP not yet implemented."
	354 Move X8, 0xAD6000
	355 Move X8, [X8+2600]
	356 Move X0, [X8]
	357 And X8, X25, 0xFFFF
	358 NotImplemented "Instruction LDRH not yet implemented."
	359 Move W9, [X0+224]
	360 Compare W9, 0
	361 JumpIfNotEqual {365}
	362 Move [X31+16], W8
	363 Call 0x1C17DFC
	364 Move W8, [X31+16]
	365 And W8, W8, 0xFFFFFFDF
	366 Subtract W8, W8, 65
	367 And W8, W8, 0xFFFF
	368 NotImplemented "Instruction CMP not yet implemented."
	369 Add W8, W27, 2
	370 NotImplemented "Instruction CMP not yet implemented."
	371 NotImplemented "Instruction LDRH not yet implemented."
	372 NotImplemented "Instruction CMP not yet implemented."
	373 NotImplemented "Instruction CMP not yet implemented."
	374 Move X8, [X19+48]
	375 Move X0, [X19+32]
	376 Or X8, X8, 0xFFFFFFF
	377 Move [X19+48], X8
	378 Compare X0, 0
	379 JumpIfEqual {464}
	380 Move W1, 1
	381 Move X2, X31
	382 Call UriParser.InFact, X0, X1
	383 Move TEMP, X0
	384 And TEMP, TEMP, 1
	385 Compare TEMP, 1
	386 JumpIfNotEqual {390}
	387 Move X8, [X20]
	388 Or X8, X8, 0x1FFFFF
	389 Move [X20], X8
	390 NotImplemented "Instruction CMP not yet implemented."
	391 NotImplemented "Instruction CSET not yet implemented."
	392 NotImplemented "Instruction CMP not yet implemented."
	393 NotImplemented "Instruction CSET not yet implemented."
	394 And W8, W8, W9
	395 Subtract W23, W25, W8
	396 Move X0, [X19+32]
	397 Compare X0, 0
	398 JumpIfEqual {464}
	399 Move W1, 0x2000
	400 Move X2, X31
	401 Call UriParser.InFact, X0, X1
	402 NotImplemented "Instruction CMP not yet implemented."
	403 NotImplemented "Instruction CSET not yet implemented."
	404 Xor W9, W29, 1
	405 Or W8, W9, W8
	406 Move TEMP, X8
	407 And TEMP, TEMP, 1
	408 Compare TEMP, 1
	409 JumpIfEqual {144}
	410 Move TEMP, X0
	411 And TEMP, TEMP, 1
	412 Compare TEMP, 1
	413 JumpIfNotEqual {144}
	414 NotImplemented "Instruction CMP not yet implemented."
	415 Move W8, W25
	416 And X8, X8, 0xFFFF
	417 NotImplemented "Instruction LDRH not yet implemented."
	418 NotImplemented "Instruction CMP not yet implemented."
	419 NotImplemented "Instruction CMP not yet implemented."
	420 Move X24, 0xAD6000
	421 Move X24, [X24+2600]
	422 Move X0, [X24]
	423 Move W8, [X0+224]
	424 Compare W8, 0
	425 JumpIfNotEqual {428}
	426 Call 0x1C17DFC
	427 Move X0, [X24]
	428 Move X8, [X0+184]
	429 Move W8, [X8+114]
	430 Compare W8, 0
	431 JumpIfEqual {459}
	432 Move X8, [X20]
	433 Or X8, X8, 0x1FFFFFFF
	434 Move X0, [X19+32]
	435 Compare X0, 0
	436 JumpIfEqual {464}
	437 Move W1, 0x4000
	438 Move X2, X31
	439 Call UriParser.NotAny, X0, X1
	440 Move TEMP, X0
	441 And TEMP, TEMP, 1
	442 Compare TEMP, 1
	443 JumpIfNotEqual {146}
	444 Move X9, [X20]
	445 Move W8, W31
	446 Or X9, X9, X28
	447 Or X9, X9, 0x7FFFF
	448 Move X0, [X19+32]
	449 Compare X0, 0
	450 JumpIfEqual {464}
	451 Move W1, 0x2000
	452 Move X2, X31
	453 Call UriParser.InFact, X0, X1
	454 Move TEMP, X0
	455 And TEMP, TEMP, 1
	456 Compare TEMP, 1
	457 JumpIfNotEqual {144}
	458 Move W8, 7
	459 NotImplemented "Instruction CMP not yet implemented."
	460 Move X8, [X20]
	461 Or X8, X8, 0x1FFFFFFFFFFF
	462 Move W23, W25
	463 Move [X20], X8
	464 Call 0x1C17F20

Method: System.Void PrivateParseMinimalIri(System.String newHost, System.UInt16 idx)

Disassembly:
	0x03621028 SUB W8, W9, W8
	0x0362102C CMP W1, W8, UXTH
	0x03621030 B.CS 0x362120C
	0x03621034 LDR X0, [X19 + 0x10]
	0x03621038 CBZ X0, 0x3621328
	0x0362103C AND W8, W8, 0xFFFF
	0x03621040 B 0x3621244
	0x03621044 LDR X8, [X19 + 0x38]
	0x03621048 CBZ X8, 0x3621328
	0x0362104C LDR W9, [X19 + 0x30]
	0x03621050 LDRH W20, [X8 + 0x30]
	0x03621054 MOVZ W10, 0x8
	0x03621058 MOVK W10, 0x800000
	0x0362105C ANDS W31, W9, W10, 0x0
	0x03621060 B.EQ 0x3621094
	0x03621064 LDR X0, [X19 + 0x10]
	0x03621068 CBZ X0, 0x3621328
	0x0362106C AND W8, W20, 0xFFFF
	0x03621070 SUB W20, W8, 0x1
	0x03621074 AND W1, W20, 0xFFFF
	0x03621078 MOV X2, X31
	0x0362107C BL 0x3222A1C
	0x03621080 AND W8, W0, 0xFFFF
	0x03621084 CMP W8, 0x3A
	0x03621088 B.NE 0x3621064
	0x0362108C LDR X8, [X19 + 0x38]
	0x03621090 CBZ X8, 0x3621328
	0x03621094 LDRH W1, [X8 + 0x2C]
	0x03621098 AND W8, W20, 0xFFFF
	0x0362109C SUBS W2, W8, W1
	0x036210A0 B.EQ 0x362120C
	0x036210A4 LDR X0, [X19 + 0x10]
	0x036210A8 CBNZ X0, 0x36212C4
	0x036210AC B 0x3621328
	0x036210B0 LDR X8, [X19 + 0x38]
	0x036210B4 CBZ X8, 0x3621328
	0x036210B8 LDR X0, [X19 + 0x10]
	0x036210BC LDRB W9, [X19 + 0x32]
	0x036210C0 LDRH W1, [X8 + 0x28]
	0x036210C4 TBNZ X9, 0x5, 0x36212D4
	0x036210C8 CBZ X0, 0x3621328
	0x036210CC LDRH W8, [X8 + 0x30]
	0x036210D0 B 0x3621244
	0x036210D4 LDR X8, [X19 + 0x38]
	0x036210D8 CBZ X8, 0x3621328
	0x036210DC LDR X0, [X19 + 0x10]
	0x036210E0 CBZ X0, 0x3621328
	0x036210E4 LDRH W9, [X8 + 0x30]
	0x036210E8 B 0x36212BC
	0x036210EC CMP W20, 0x10
	0x036210F0 B.NE 0x36211E4
	0x036210F4 LDRB W8, [X19 + 0x32]
	0x036210F8 TBZ X8, 0x4, 0x36211E4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move W20, W2
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfEqual {10}
	009 Move [X19+16], X1
	010 Move W8, [X19+64]
	011 Compare W8, 0
	012 JumpIfNotEqual {25}
	013 Move X0, X19
	014 Call Uri.get_AllowIdn, X0
	015 Move TEMP, X0
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfNotEqual {22}
	019 Move X8, [X19+48]
	020 Move X9, 17
	021 And X31, X8, X9
	022 Move W8, [X19+64]
	023 Compare W8, 0
	024 JumpIfEqual {72}
	025 Move W8, [X19+52]
	026 Move TEMP, X8
	027 And TEMP, TEMP, 2
	028 Compare TEMP, 2
	029 JumpIfEqual {62}
	030 Move X0, X19
	031 Call Uri.get_AllowIdn, X0
	032 Move TEMP, X0
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfNotEqual {62}
	036 Move X8, [X19+48]
	037 Move TEMP, X8
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfNotEqual {62}
	041 Move X21, [X19+16]
	042 And X8, X8, 0xFFFFFFFF
	043 Move [X19+48], X8
	044 Compare X21, 0
	045 JumpIfEqual {77}
	046 NotImplemented "Instruction LDRSW not yet implemented."
	047 Move X0, [X19+24]
	048 Or X8, X8, X9
	049 Move [X19+48], X8
	050 Compare X0, 0
	051 JumpIfEqual {77}
	052 Move W8, [X0+16]
	053 And W1, W20, 0xFFFF
	054 Move X3, X31
	055 Subtract W2, W8, W20
	056 Call String.Substring, X0, X1, X2
	057 Move X1, X0
	058 Move X0, X21
	059 Move X2, X31
	060 Call String.Concat, X0, X1
	061 Move [X19+16], X0
	062 Move W8, [X19+64]
	063 Compare W8, 0
	064 JumpIfEqual {72}
	065 Move X8, [X19+48]
	066 Move TEMP, X8
	067 And TEMP, TEMP, 1
	068 Compare TEMP, 1
	069 JumpIfNotEqual {72}
	070 Or X8, X8, 0x7FFFFFFFFF
	071 Move [X19+48], X8
	072 Move X20, [X31+16]
	073 Move X19, [X31+24]
	074 Move X30, [X31+32]
	075 Move X21, [X31+40]
	076 Return 
	077 Call 0x1C17F20

Method: System.Void CreateUriInfo(System.Uri/Flags cF)

Disassembly:
	0x036190CC ADRP X1, 0x89B000
	0x036190D0 ADD X1, X1, 0xE58
	0x036190D4 MOV X2, X31
	0x036190D8 BL 0x3EB1B00
	0x036190DC B 0x36191F0
	0x036190E0 MOV X20, X0
	0x036190E4 CMP W1, 0x1
	0x036190E8 B.NE 0x36191F8
	0x036190EC MOV X0, X20
	0x036190F0 BL 0x3EB1AD0
	0x036190F4 MOV X19, X0
	0x036190F8 ADRP X0, 0xAE2000
	0x036190FC LDR X0, [X0 + 0x578]
	0x03619100 BL 0x1C16D08
	0x03619104 LDR X8, [X19]
	0x03619108 LDR X1, [X8]
	0x0361910C BL 0x1C17270
	0x03619110 TBNZ X0, 0x0, 0x3619198
	0x03619114 MOVZ W0, 0x8
	0x03619118 BL 0x3EB1AF0
	0x0361911C LDR X8, [X19]
	0x03619120 STR X8, [X0]
	0x03619124 ADRP X1, 0x89B000
	0x03619128 ADD X1, X1, 0xE58
	0x0361912C MOV X2, X31
	0x03619130 BL 0x3EB1B00
	0x03619134 B 0x36191F0
	0x03619138 MOV X20, X0
	0x0361913C BL 0x3EB1AE0
	0x03619140 B 0x36191F8
	0x03619144 MOV X20, X0
	0x03619148 BL 0x3EB1AE0
	0x0361914C B 0x36191F8
	0x03619150 B 0x3619164
	0x03619154 B 0x3619164
	0x03619158 B 0x3619164
	0x0361915C B 0x3619164
	0x03619160 B 0x3619164
	0x03619164 MOV X20, X0
	0x03619168 CMP W1, 0x1
	0x0361916C B.NE 0x36191F8
	0x03619170 MOV X0, X20
	0x03619174 BL 0x3EB1AD0
	0x03619178 MOV X19, X0
	0x0361917C ADRP X0, 0xAE2000
	0x03619180 LDR X0, [X0 + 0x578]
	0x03619184 BL 0x1C16D08
	0x03619188 LDR X8, [X19]
	0x0361918C LDR X1, [X8]
	0x03619190 BL 0x1C17270
	0x03619194 TBZ X0, 0x0, 0x36191D0
	0x03619198 BL 0x3EB1AE0
	0x0361919C ADRP X0, 0xADC000
	0x036191A0 LDR X0, [X0 + 0xA28]
	0x036191A4 BL 0x1C16D08
	0x036191A8 BL 0x19903D0
	0x036191AC MOVZ W0, 0x1
	0x036191B0 BL 0x361B0C8
	0x036191B4 MOV X19, X0
	0x036191B8 ADRP X0, 0xB22000
	0x036191BC LDR X0, [X0 + 0x50]
	0x036191C0 BL 0x1C16D08
	0x036191C4 MOV X1, X0
	0x036191C8 MOV X0, X19
	0x036191CC BL 0x1C16DEC
	0x036191D0 MOVZ W0, 0x8
	0x036191D4 BL 0x3EB1AF0
	0x036191D8 LDR X8, [X19]
	0x036191DC STR X8, [X0]
	0x036191E0 ADRP X1, 0x89B000
	0x036191E4 ADD X1, X1, 0xE58
	0x036191E8 MOV X2, X31
	0x036191EC BL 0x3EB1B00
	0x036191F0 MOV X20, X0
	0x036191F4 BL 0x3EB1AE0
	0x036191F8 MOV X0, X20
	0x036191FC BL 0x1D2C690
	0x03619200 CMP W1, 0x1
	0x03619204 MOV X20, X0
	0x03619208 B.NE 0x3619224
	0x0361920C MOV X0, X20
	0x03619210 BL 0x3EB1AD0
	0x03619214 LDR X22, [X0]
	0x03619218 BL 0x3EB1AE0
	0x0361921C MOV W20, W31
	0x03619220 B 0x3618FFC
	0x03619224 MOV X22, X31
	0x03619228 B 0x3619230
	0x0361922C MOV X20, X0
	0x03619230 LDRB W8, [X31 + 0x4]
	0x03619234 CBZ W8, 0x3619244
	0x03619238 MOV X0, X21
	0x0361923C MOV X1, X31
	0x03619240 BL 0x33E14E4
	0x03619244 CBZ X22, 0x36191F8
	0x03619248 MOV X0, X22
	0x0361924C BL 0x1C16F18
	0x03619250 BL 0x1990590
	0x03619254 STR X30, [X31 - 0x20]!
	0x03619258 STP X20, X19, [X31 + 0x10]
	0x0361925C LDR X8, [X0 + 0x30]
	0x03619260 MOV X19, X0
	0x03619264 MOV W20, W1
	0x03619268 TBNZ X8, 0x1E, 0x3619278
	0x0361926C MOV X0, X19
	0x03619270 MOV X1, X8
	0x03619274 BL 0x36180CC
	0x03619278 LDR X8, [X19 + 0x38]
	0x0361927C CBZ X8, 0x36192B0
	0x03619280 LDR X8, [X8 + 0x10]
	0x03619284 CBZ X8, 0x3619294
	0x03619288 LDP X20, X19, [X31 + 0x10]
	0x0361928C LDR X30, [X31], #0x20
	0x03619290 RET
	0x03619294 TBZ X20, 0x0, 0x36192A0
	0x03619298 LDRB W8, [X19 + 0x33]
	0x0361929C TBNZ X8, 0x1, 0x3619288
	0x036192A0 MOV X0, X19
	0x036192A4 LDP X20, X19, [X31 + 0x10]
	0x036192A8 LDR X30, [X31], #0x20
	0x036192AC B 0x36192B4
	0x036192B0 BL 0x1C16F20
	0x036192B4 SUB X31, X31, 0x60
	0x036192B8 STP X30, X23, [X31 + 0x30]
	0x036192BC STP X22, X21, [X31 + 0x40]
	0x036192C0 STP X20, X19, [X31 + 0x50]
	0x036192C4 ADRP X20, 0xDC7000
	0x036192C8 LDRB W8, [X20 + 0x48E]
	0x036192CC MOV X19, X0
	0x036192D0 TBNZ X8, 0x0, 0x36192F4
	0x036192D4 ADRP X0, 0xB22000
	0x036192D8 LDR X0, [X0 + 0x58]
	0x036192DC BL 0x1C16CF4
	0x036192E0 ADRP X0, 0xADC000
	0x036192E4 LDR X0, [X0 + 0xA28]
	0x036192E8 BL 0x1C16CF4
	0x036192EC MOVZ W8, 0x1
	0x036192F0 STRB W8, [X20 + 0x48E]
	0x036192F4 STRB W31, [X31 + 0x24]
	0x036192F8 STR W31, [X31 + 0x1C]
	0x036192FC LDR X0, [X19 + 0x20]
	0x03619300 CBZ X0, 0x36195E8
	0x03619304 MOV X1, X31
	0x03619308 BL 0x362CE34
	0x0361930C TBNZ X0, 0x0, 0x3619384
	0x03619310 LDR X20, [X19 + 0x38]
	0x03619314 STRB W31, [X31 + 0x24]
	0x03619318 ADD X1, X31, 0x24
	0x0361931C MOV X0, X20
	0x03619320 MOV X2, X31
	0x03619324 BL 0x33DE64C
	0x03619328 LDR X8, [X19 + 0x30]
	0x0361932C TBNZ X8, 0x1A, 0x3619358
	0x03619330 ORR X8, X8, 0x7FFFFFF
	0x03619334 STR X8, [X19 + 0x30]
	0x03619338 MOV X0, X19
	0x0361933C BL 0x36200FC
	0x03619340 LDR X8, [X19 + 0x30]
	0x03619344 MOV X22, X31
	0x03619348 MOVZ W21, 0x4
	0x0361934C AND X8, X8, 0x3FFFFFFFFFFFFFF
	0x03619350 STR X8, [X19 + 0x30]
	0x03619354 B 0x3619360
	0x03619358 MOV X22, X31
	0x0361935C MOVZ W21, 0x2
	0x03619360 LDRB W8, [X31 + 0x24]
	0x03619364 CBZ W8, 0x3619374
	0x03619368 MOV X0, X20
	0x0361936C MOV X1, X31
	0x03619370 BL 0x33E14E4
	0x03619374 CBNZ X22, 0x36195F4
	0x03619378 ORR W8, W21, 0x2
	0x0361937C CMP W8, 0x2
	0x03619380 B.NE 0x3619558
	0x03619384 LDR X8, [X19 + 0x30]
	0x03619388 STR X8, [X31 + 0x28]
	0x0361938C LDR X8, [X19 + 0x38]
	0x03619390 CBZ X8, 0x36195E8
	0x03619394 ADRP X9, 0xADC000
	0x03619398 LDR X9, [X9 + 0xA28]
	0x0361939C LDR X22, [X19 + 0x10]
	0x036193A0 LDRH W20, [X8 + 0x2C]
	0x036193A4 LDRH W23, [X8 + 0x30]
	0x036193A8 LDR X0, [X9]
	0x036193AC ADD X21, X8, 0x18
	0x036193B0 LDR W9, [X0 + 0xE0]
	0x036193B4 CBNZ W9, 0x36193BC
	0x036193B8 BL 0x1C16DFC
	0x036193BC ADD X3, X31, 0x28
	0x036193C0 MOV X0, X22
	0x036193C4 MOV W1, W20
	0x036193C8 MOV W2, W23
	0x036193CC MOV X4, X21
	0x036193D0 BL 0x362052C
	0x036193D4 CBZ X0, 0x36195E8
	0x036193D8 LDR W9, [X0 + 0x10]
	0x036193DC MOV X20, X0
	0x036193E0 CBZ W9, 0x361950C
	0x036193E4 LDR X8, [X19 + 0x30]
	0x036193E8 AND X10, X8, 0x7FFFF
	0x036193EC CMP X10, 0x50000
	0x036193F0 B.NE 0x36194E8
	0x036193F4 MOV X0, X31
	0x036193F8 STRH W31, [X31 + 0x20]
	0x036193FC BL 0x32C1424
	0x03619400 LDR W3, [X20 + 0x10]
	0x03619404 ADD X1, X20, W0, SXTW
	0x03619408 ADD X2, X31, 0x20
	0x0361940C MOVZ W4, 0xFFFF
	0x03619410 MOV X0, X19
	0x03619414 BL 0x3620708
	0x03619418 LDR X8, [X19 + 0x30]
	0x0361941C TBNZ X0, 0x1, 0x3619434
	0x03619420 TBNZ X0, 0x5, 0x3619428
	0x03619424 TBNZ X8, 0x1D, 0x3619434
	0x03619428 LDR X9, [X31 + 0x28]
	0x0361942C ORR X9, X9, 0x7
	0x03619430 STR X9, [X31 + 0x28]
	0x03619434 MOVZ W9, 0x21
	0x03619438 ANDS X31, X8, 0x3FFFFFFF
	0x0361943C AND W9, W0, W9, 0x0
	0x03619440 AND W10, W0, 0x10
	0x03619444 CCMP W9, 0x0, 0x4, NE
	0x03619448 CSEL W9, W0, W10, EQ
	0x0361944C MOVZ W10, 0x11
	0x03619450 AND W9, W9, W10, 0x0
	0x03619454 CMP W9, 0x1
	0x03619458 B.EQ 0x361950C
	0x0361945C LDR X9, [X31 + 0x28]
	0x03619460 ORR X9, X9, 0x1FF
	0x03619464 STR X9, [X31 + 0x28]
	0x03619468 TBNZ X8, 0x13, 0x361950C
	0x0361946C ADRP X9, 0xB22000
	0x03619470 LDR X9, [X9 + 0x58]
	0x03619474 STR W31, [X31 + 0x1C]
	0x03619478 LDR W21, [X20 + 0x10]
	0x0361947C ANDS X31, X8, 0x3FFFFFFF
	0x03619480 LDR X0, [X9]
	0x03619484 MOVZ W8, 0x25
	0x03619488 CSINV W22, W8, W31, EQ
	0x0361948C LDR W9, [X0 + 0xE0]
	0x03619490 CBNZ W9, 0x3619498
	0x03619494 BL 0x1C16DFC
	0x03619498 ADD X4, X31, 0x1C
	0x0361949C MOVZ W5, 0x1
	0x036194A0 MOVZ W6, 0x3F
	0x036194A4 MOVZ W7, 0x23
	0x036194A8 MOV X0, X20
	0x036194AC MOV W1, W31
	0x036194B0 MOV W2, W21
	0x036194B4 MOV X3, X31
	0x036194B8 STR X31, [X31 + 0x8]
	0x036194BC STRH W22, [X31]
	0x036194C0 BL 0x362A9E0
	0x036194C4 CBZ X0, 0x361950C
	0x036194C8 LDR W3, [X31 + 0x1C]
	0x036194CC MOV X1, X0
	0x036194D0 MOV X0, X31
	0x036194D4 MOV W2, W31
	0x036194D8 MOV X4, X31
	0x036194DC BL 0x322EAE4
	0x036194E0 MOV X20, X0
	0x036194E4 B 0x361950C
	0x036194E8 TBNZ X8, 0x19, 0x361950C
	0x036194EC LDR X8, [X19 + 0x38]
	0x036194F0 CBZ X8, 0x36195E8
	0x036194F4 LDR X10, [X8 + 0x18]
	0x036194F8 CBZ X10, 0x361956C
	0x036194FC LDR X8, [X31 + 0x28]
	0x03619500 MOVZ W9, 0x104
	0x03619504 ORR X8, X8, X9, 0x0
	0x03619508 STR X8, [X31 + 0x28]
	0x0361950C LDR X22, [X19 + 0x38]
	0x03619510 CBZ X22, 0x36195E8
	0x03619514 STR X20, [X22 + 0x10]
	0x03619518 STRB W31, [X31 + 0x24]
	0x0361951C ADD X1, X31, 0x24
	0x03619520 MOV X0, X22
	0x03619524 MOV X2, X31
	0x03619528 BL 0x33DE64C
	0x0361952C LDR X8, [X19 + 0x30]
	0x03619530 LDR X9, [X31 + 0x28]
	0x03619534 MOV X20, X31
	0x03619538 ORR X8, X9, X8, 0x0
	0x0361953C STR X8, [X19 + 0x30]
	0x03619540 LDRB W8, [X31 + 0x24]
	0x03619544 CBZ W8, 0x3619554
	0x03619548 MOV X0, X22
	0x0361954C MOV X1, X31
	0x03619550 BL 0x33E14E4
	0x03619554 CBNZ X20, 0x36195EC
	0x03619558 LDP X20, X19, [X31 + 0x50]
	0x0361955C LDP X22, X21, [X31 + 0x40]
	0x03619560 LDP X30, X23, [X31 + 0x30]
	0x03619564 ADD X31, X31, 0x60
	0x03619568 RET
	0x0361956C CMP W9, 0x1
	0x03619570 B.LT 0x361950C
	0x03619574 MOV W21, W31
	0x03619578 LDRH W9, [X8 + 0x2C]
	0x0361957C LDRH W8, [X8 + 0x36]
	0x03619580 ADD W9, W21, W9
	0x03619584 CMP W9, W8
	0x03619588 B.CS 0x36194FC
	0x0361958C MOV X0, X20
	0x03619590 MOV W1, W21
	0x03619594 MOV X2, X31
	0x03619598 BL 0x3222A1C
	0x0361959C LDR X8, [X19 + 0x38]
	0x036195A0 CBZ X8, 0x36195E8
	0x036195A4 MOV W22, W0
	0x036195A8 LDR X0, [X19 + 0x10]
	0x036195AC CBZ X0, 0x36195E8
	0x036195B0 LDRH W8, [X8 + 0x2C]
	0x036195B4 MOV X2, X31
	0x036195B8 ADD W1, W21, W8
	0x036195BC BL 0x3222A1C
	0x036195C0 AND W8, W22, 0xFFFF
	0x036195C4 CMP W8, W0, UXTH
	0x036195C8 B.NE 0x36194FC
	0x036195CC LDR W8, [X20 + 0x10]
	0x036195D0 ADD W9, W21, 0x1
	0x036195D4 AND W21, W9, 0xFFFF
	0x036195D8 CMP W21, W8
	0x036195DC B.GE 0x361950C
	0x036195E0 LDR X8, [X19 + 0x38]
	0x036195E4 CBNZ X8, 0x3619578
	0x036195E8 BL 0x1C16F20
	0x036195EC MOV X0, X20
	0x036195F0 BL 0x1C16F18
	0x036195F4 MOV X0, X22
	0x036195F8 BL 0x1C16F18
	0x036195FC B 0x3619600
	0x03619600 MOV X21, X0
	0x03619604 CMP W1, 0x1
	0x03619608 B.NE 0x3619624
	0x0361960C MOV X0, X21
	0x03619610 BL 0x3EB1AD0
	0x03619614 LDR X22, [X0]
	0x03619618 BL 0x3EB1AE0
	0x0361961C MOV W21, W31
	0x03619620 B 0x3619360
	0x03619624 MOV X22, X31
	0x03619628 B 0x3619630
	0x0361962C MOV X21, X0
	0x03619630 LDRB W8, [X31 + 0x24]
	0x03619634 CBZ W8, 0x3619644
	0x03619638 MOV X0, X20
	0x0361963C MOV X1, X31
	0x03619640 BL 0x33E14E4
	0x03619644 CBZ X22, 0x3619694
	0x03619648 MOV X0, X22
	0x0361964C BL 0x1C16F18
	0x03619650 CMP W1, 0x1

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X20, 0xDC8000
	011 Move X22, 0xB23000
	012 Move W8, [X20+1165]
	013 Move X22, [X22+64]
	014 Move X21, X1
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {28}
	020 Move X0, 0xB23000
	021 Move X0, [X0+64]
	022 Call 0x1C17CF4
	023 Move X0, 0xADD000
	024 Move X0, [X0+2600]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X20+1165], W8
	028 Move X0, [X22]
	029 Call 0x1C17F10
	030 Move X1, X31
	031 Move X20, X0
	032 Call UriInfo..ctor, X0
	033 Compare X20, 0
	034 JumpIfEqual {101}
	035 Move X0, [X19+16]
	036 Compare X0, 0
	037 JumpIfEqual {101}
	038 Move W8, [X0+16]
	039 NotImplemented "Instruction STRH not yet implemented."
	040 Move W9, [X19+51]
	041 Move TEMP, X9
	042 And TEMP, TEMP, 1
	043 Compare TEMP, 1
	044 JumpIfEqual {199}
	045 Move TEMP, X21
	046 And TEMP, TEMP, 0x20000000
	047 Compare TEMP, 0x20000000
	048 JumpIfEqual {69}
	049 Move X8, [X19+32]
	050 Compare X8, 0
	051 JumpIfEqual {101}
	052 Move X8, [X8+32]
	053 Compare X8, 0
	054 JumpIfEqual {101}
	055 NotImplemented "Instruction LDRH not yet implemented."
	056 And W1, W23, 0xFFFF
	057 Move X2, X31
	058 Add W22, W1, 1
	059 Call String.get_Chars, X0, X1
	060 And W8, W0, 0xFFFF
	061 NotImplemented "Instruction CMP not yet implemented."
	062 NotImplemented "Instruction LDRH not yet implemented."
	063 Move W23, W22
	064 Add W8, W8, 1
	065 NotImplemented "Instruction STRH not yet implemented."
	066 Move X0, [X19+16]
	067 Compare X0, 0
	068 JumpIfNotEqual {56}
	069 And W31, W8, 0xFFFF
	070 Move X24, 0xADD000
	071 Move X24, [X24+2600]
	072 Move X26, 0x2600
	073 Move W22, W31
	074 Move W25, 1
	075 NotImplemented "Instruction MOVK not yet implemented."
	076 Move W1, W22
	077 Move X2, X31
	078 Call String.get_Chars, X0, X1
	079 Move X8, [X24]
	080 Move W23, W0
	081 Move W9, [X8+224]
	082 Compare W9, 0
	083 JumpIfNotEqual {86}
	084 Move X0, X8
	085 Call 0x1C17DFC
	086 And W8, W23, 0xFFFF
	087 NotImplemented "Instruction CMP not yet implemented."
	088 NotImplemented "Instruction CMP not yet implemented."
	089 And X8, X23, 0xFFFF
	090 NotImplemented "Instruction LSLV not yet implemented."
	091 And X31, X8, X26
	092 NotImplemented "Instruction LDRH not yet implemented."
	093 NotImplemented "Instruction LDRH not yet implemented."
	094 Add W22, W22, 1
	095 Add W8, W8, 1
	096 NotImplemented "Instruction CMP not yet implemented."
	097 NotImplemented "Instruction STRH not yet implemented."
	098 Move X0, [X19+16]
	099 Compare X0, 0
	100 JumpIfNotEqual {76}
	101 Call 0x1C17F20
	102 Move TEMP, X21
	103 And TEMP, TEMP, 0x100000
	104 Compare TEMP, 0x100000
	105 JumpIfNotEqual {163}
	106 Move X0, [X19+16]
	107 Compare X0, 0
	108 JumpIfEqual {101}
	109 And W22, W22, 0xFFFF
	110 Move W1, W22
	111 Move X2, X31
	112 Call String.get_Chars, X0, X1
	113 And W8, W0, 0xFFFF
	114 NotImplemented "Instruction CMP not yet implemented."
	115 Move X0, [X19+16]
	116 Compare X0, 0
	117 JumpIfEqual {101}
	118 Add W1, W22, 1
	119 Move X2, X31
	120 Call String.get_Chars, X0, X1
	121 And W8, W0, 0xFFFF
	122 NotImplemented "Instruction CMP not yet implemented."
	123 Move W24, 1
	124 Move W22, W31
	125 Move X8, 0xADD000
	126 Move X8, [X8+2600]
	127 Move X0, [X8]
	128 Move W8, [X0+224]
	129 Compare W8, 0
	130 JumpIfEqual {135}
	131 Move TEMP, X21
	132 And TEMP, TEMP, 0x10000000
	133 Compare TEMP, 0x10000000
	134 JumpIfEqual {140}
	135 Call 0x1C17DFC
	136 Move TEMP, X21
	137 And TEMP, TEMP, 0x10000000
	138 Compare TEMP, 0x10000000
	139 JumpIfNotEqual {163}
	140 Add W22, W22, 2
	141 And W23, W22, 0xFFFF
	142 NotImplemented "Instruction CMP not yet implemented."
	143 And W24, W21, 0xFFFF
	144 Move X0, [X19+16]
	145 Compare X0, 0
	146 JumpIfEqual {101}
	147 Move W1, W23
	148 Move X2, X31
	149 Call String.get_Chars, X0, X1
	150 And W8, W0, 0xFFFF
	151 NotImplemented "Instruction CMP not yet implemented."
	152 Move X0, [X19+16]
	153 Compare X0, 0
	154 JumpIfEqual {101}
	155 Move W1, W23
	156 Move X2, X31
	157 Call String.get_Chars, X0, X1
	158 And W8, W0, 0xFFFF
	159 NotImplemented "Instruction CMP not yet implemented."
	160 Add W22, W23, 1
	161 And W23, W22, 0xFFFF
	162 NotImplemented "Instruction CMP not yet implemented."
	163 Move W24, W31
	164 Move X8, [X19+32]
	165 Compare X8, 0
	166 JumpIfEqual {101}
	167 Move W8, [X8+28]
	168 Add W31, W8, 1
	169 NotImplemented "Instruction STRH not yet implemented."
	170 NotImplemented "Instruction ORN not yet implemented."
	171 And X31, X8, 0x7FFFF
	172 Move X8, 0xADD000
	173 Move X8, [X8+2600]
	174 Move X0, [X8]
	175 Move W8, [X0+224]
	176 Compare W8, 0
	177 JumpIfEqual {189}
	178 Move TEMP, X21
	179 And TEMP, TEMP, 0x8000000
	180 Compare TEMP, 0x8000000
	181 JumpIfEqual {194}
	182 NotImplemented "Instruction STRH not yet implemented."
	183 Move X8, [X19+48]
	184 And X8, X8, 0x7FFFF
	185 NotImplemented "Instruction CMP not yet implemented."
	186 NotImplemented "Instruction STRH not yet implemented."
	187 NotImplemented "Instruction STRH not yet implemented."
	188 And X21, X21, 0xFFFFFFFF
	189 Call 0x1C17DFC
	190 Move TEMP, X21
	191 And TEMP, TEMP, 0x8000000
	192 Compare TEMP, 0x8000000
	193 JumpIfNotEqual {182}
	194 NotImplemented "Instruction STRH not yet implemented."
	195 NotImplemented "Instruction STRH not yet implemented."
	196 NotImplemented "Instruction STRH not yet implemented."
	197 And X21, X21, 0xFFFFFFFF
	198 NotImplemented "Instruction BFM not yet implemented."
	199 Move X8, [X19+40]
	200 Move [X20+56], X8
	201 Move X22, [X19+16]
	202 Move [X31+12], W31
	203 Add X1, X31, 12
	204 Move X0, X22
	205 Move X2, X31
	206 Call Monitor.Enter, X0, X1
	207 Move X8, [X19+48]
	208 Move TEMP, X8
	209 And TEMP, TEMP, 0x40000000
	210 Compare TEMP, 0x40000000
	211 JumpIfEqual {218}
	212 And X8, X8, 0xFFFFFFFF
	213 Or X8, X21, X8
	214 Or X8, X8, 0x7FFFFFFF
	215 Move X23, X31
	216 Move [X19+48], X8
	217 Move [X19+56], X20
	218 Move X23, X31
	219 Move W8, [X31+12]
	220 Compare W8, 0
	221 JumpIfEqual {225}
	222 Move X0, X22
	223 Move X1, X31
	224 Call Monitor.Exit, X0
	225 Compare X23, 0
	226 JumpIfNotEqual {353}
	227 Move X20, [X31+64]
	228 Move X19, [X31+72]
	229 Move X22, [X31+48]
	230 Move X21, [X31+56]
	231 Move X24, [X31+32]
	232 Move X23, [X31+40]
	233 Move X26, [X31+16]
	234 Move X25, [X31+24]
	235 Move X30, [X31+80]
	236 Return 
	237 Move TEMP, X21
	238 And TEMP, TEMP, 0x200000
	239 Compare TEMP, 0x200000
	240 JumpIfNotEqual {250}
	241 Move X0, [X19+16]
	242 Compare X0, 0
	243 JumpIfEqual {101}
	244 And W1, W22, 0xFFFF
	245 Move X2, X31
	246 Call String.get_Chars, X0, X1
	247 And W8, W0, 0xFFFF
	248 NotImplemented "Instruction CMP not yet implemented."
	249 Add W22, W22, 1
	250 NotImplemented "Instruction STRH not yet implemented."
	251 NotImplemented "Instruction STRH not yet implemented."
	252 Move TEMP, X21
	253 And TEMP, TEMP, 1
	254 Compare TEMP, 1
	255 JumpIfEqual {285}
	256 NotImplemented "Instruction LDRH not yet implemented."
	257 Move W24, W31
	258 Move X8, 0x18000000
	259 NotImplemented "Instruction MOVK not yet implemented."
	260 And X31, X21, X8
	261 Add W22, W23, 3
	262 And W25, W21, 0xFFFF
	263 NotImplemented "Instruction CMP not yet implemented."
	264 And W23, W22, 0xFFFF
	265 Move X0, [X19+16]
	266 Compare X0, 0
	267 JumpIfEqual {101}
	268 Move W1, W23
	269 Move X2, X31
	270 Call String.get_Chars, X0, X1
	271 And W8, W0, 0xFFFF
	272 NotImplemented "Instruction CMP not yet implemented."
	273 Move X0, [X19+16]
	274 Compare X0, 0
	275 JumpIfEqual {101}
	276 Move W1, W23
	277 Move X2, X31
	278 Call String.get_Chars, X0, X1
	279 And W8, W0, 0xFFFF
	280 NotImplemented "Instruction CMP not yet implemented."
	281 Add W22, W22, 1
	282 And W23, W22, 0xFFFF
	283 NotImplemented "Instruction CMP not yet implemented."
	284 Move W24, 1
	285 Move X8, [X19+24]
	286 Compare X8, 0
	287 JumpIfEqual {101}
	288 Move W8, [X8+16]
	289 NotImplemented "Instruction STRH not yet implemented."
	290 Move TEMP, 0xFFFF
	291 Not TEMP
	292 Move X9, TEMP
	293 NotImplemented "Instruction MOVK not yet implemented."
	294 And W25, W21, 0xFFFF
	295 And X22, X21, X9
	296 NotImplemented "Instruction CMP not yet implemented."
	297 NotImplemented "Instruction BFM not yet implemented."
	298 And X31, X21, 0x7FFFFFFFFF
	299 Move W8, 24
	300 Move W9, 16
	301 NotImplemented "Instruction CSEL not yet implemented."
	302 Move X23, [X19]
	303 Compare X23, 0
	304 JumpIfEqual {308}
	305 Move X0, X31
	306 Call RuntimeHelpers.get_OffsetToStringData
	307 Add X23, X23, W0
	308 Move W8, W21
	309 ShiftRight W8, 31
	310 And W8, W8, 0x3FFFFFFF
	311 And X8, X8, 0x1FFFF
	312 NotImplemented "Instruction LDRH not yet implemented."
	313 NotImplemented "Instruction CMP not yet implemented."
	314 NotImplemented "Instruction LDRH not yet implemented."
	315 Add W8, W25, 1
	316 And W10, W8, 0xFFFF
	317 NotImplemented "Instruction CMP not yet implemented."
	318 NotImplemented "Instruction LDRH not yet implemented."
	319 NotImplemented "Instruction CMP not yet implemented."
	320 NotImplemented "Instruction CMP not yet implemented."
	321 NotImplemented "Instruction CMP not yet implemented."
	322 Move X21, X22
	323 NotImplemented "Instruction CMP not yet implemented."
	324 NotImplemented "Instruction CMP not yet implemented."
	325 Move W8, 520
	326 Or X22, X22, X8
	327 Add W8, W10, 1
	328 Subtract W12, W11, 48
	329 And W11, W8, 0xFFFF
	330 NotImplemented "Instruction CMP not yet implemented."
	331 And W10, W12, 0xFFFF
	332 Move X14, 0x8008
	333 Move W12, 10
	334 Move W13, 1
	335 NotImplemented "Instruction MOVK not yet implemented."
	336 NotImplemented "Instruction LDRH not yet implemented."
	337 NotImplemented "Instruction CMP not yet implemented."
	338 NotImplemented "Instruction LSLV not yet implemented."
	339 And X31, X16, X14
	340 Add W8, W11, 1
	341 Subtract W15, W15, 48
	342 Multiply W10, W10, W12
	343 And W11, W8, 0xFFFF
	344 NotImplemented "Instruction CMP not yet implemented."
	345 Add W10, W10, W15
	346 NotImplemented "Instruction LDRH not yet implemented."
	347 NotImplemented "Instruction CMP not yet implemented."
	348 Move W9, 520
	349 Or X21, X22, X9
	350 NotImplemented "Instruction STRH not yet implemented."
	351 Or X21, X22, 0xFFFFFF
	352 NotImplemented "Instruction STRH not yet implemented."
	353 Move X0, X23
	354 Call 0x1C17F18
	355 NotImplemented "Instruction CMP not yet implemented."
	356 Move X19, X0
	357 Move X0, X19
	358 Call 0x3EB2AD0
	359 Move X23, [X0]
	360 Call 0x3EB2AE0
	361 Move X23, X31
	362 Move X19, X0
	363 Move W8, [X31+12]
	364 Compare W8, 0
	365 JumpIfEqual {369}
	366 Move X0, X22
	367 Move X1, X31
	368 Call Monitor.Exit, X0
	369 Compare X23, 0
	370 JumpIfNotEqual {373}
	371 Move X0, X19
	372 Call 0x1D2D690
	373 Move X0, X23
	374 Call 0x1C17F18
	375 Call 0x1991590

Method: System.Void CreateHostString()

Disassembly:
	0x0361A2B4 CBNZ X21, 0x361A3D4
	0x0361A2B8 MOV X20, X0
	0x0361A2BC LDR X0, [X22]
	0x0361A2C0 LDR W8, [X0 + 0xE0]
	0x0361A2C4 CBZ W8, 0x361A314
	0x0361A2C8 CBZ X20, 0x361A31C
	0x0361A2CC CMP X20, X19
	0x0361A2D0 B.EQ 0x361A340
	0x0361A2D4 MOV X0, X19
	0x0361A2D8 MOV X1, X20
	0x0361A2DC BL 0x361A0D8
	0x0361A2E0 B 0x361A340
	0x0361A2E4 LDR X0, [X20 + 0x20]
	0x0361A2E8 CBZ X0, 0x361A354
	0x0361A2EC ADD X3, X31, 0x8
	0x0361A2F0 MOV X1, X20
	0x0361A2F4 MOV X2, X19
	0x0361A2F8 MOV X4, X31
	0x0361A2FC BL 0x362CE90
	0x0361A300 LDR X20, [X31 + 0x8]
	0x0361A304 CBNZ X20, 0x361A3EC
	0x0361A308 MOV X1, X0
	0x0361A30C MOV W2, W31
	0x0361A310 B 0x361A32C
	0x0361A314 BL 0x1C16DFC
	0x0361A318 CBNZ X20, 0x361A2CC
	0x0361A31C LDRB W8, [X31 + 0x4]
	0x0361A320 LDR X1, [X31 + 0x18]
	0x0361A324 CMP W8, 0x0
	0x0361A328 CSET W2, NE
	0x0361A32C MOVZ W3, 0x1
	0x0361A330 MOV X0, X19
	0x0361A334 STR X31, [X19 + 0x20]
	0x0361A338 STP X31, X31, [X19 + 0x30]
	0x0361A33C BL 0x3619728
	0x0361A340 LDP X20, X19, [X31 + 0x30]
	0x0361A344 LDP X22, X21, [X31 + 0x20]
	0x0361A348 LDR X30, [X31 + 0x10]
	0x0361A34C ADD X31, X31, 0x40
	0x0361A350 RET
	0x0361A354 BL 0x1C16F20
	0x0361A358 ADRP X0, 0xADE000
	0x0361A35C LDR X0, [X0 + 0x528]
	0x0361A360 BL 0x1C16D08
	0x0361A364 BL 0x1C16F10
	0x0361A368 MOV X19, X0
	0x0361A36C ADRP X0, 0xB21000
	0x0361A370 LDR X0, [X0 + 0x90]
	0x0361A374 BL 0x1C16D08
	0x0361A378 MOV X1, X0
	0x0361A37C MOV X0, X19
	0x0361A380 MOV X2, X31
	0x0361A384 BL 0x330E100
	0x0361A388 B 0x361A3BC
	0x0361A38C ADRP X0, 0xAE1000
	0x0361A390 LDR X0, [X0 + 0x760]
	0x0361A394 BL 0x1C16D08
	0x0361A398 BL 0x1C16F10
	0x0361A39C MOV X19, X0
	0x0361A3A0 ADRP X0, 0xB21000
	0x0361A3A4 LDR X0, [X0 + 0x90]
	0x0361A3A8 BL 0x1C16D08
	0x0361A3AC MOV X1, X0
	0x0361A3B0 MOV X0, X19
	0x0361A3B4 MOV X2, X31
	0x0361A3B8 BL 0x3316014
	0x0361A3BC ADRP X0, 0xB21000
	0x0361A3C0 LDR X0, [X0 + 0xB8]
	0x0361A3C4 BL 0x1C16D08
	0x0361A3C8 MOV X1, X0
	0x0361A3CC MOV X0, X19
	0x0361A3D0 BL 0x1C16DEC
	0x0361A3D4 ADRP X0, 0xB21000
	0x0361A3D8 LDR X0, [X0 + 0xB8]
	0x0361A3DC BL 0x1C16D08
	0x0361A3E0 MOV X1, X0
	0x0361A3E4 MOV X0, X21
	0x0361A3E8 BL 0x1C16DEC
	0x0361A3EC ADRP X0, 0xB21000
	0x0361A3F0 LDR X0, [X0 + 0xB8]
	0x0361A3F4 BL 0x1C16D08
	0x0361A3F8 MOV X1, X0
	0x0361A3FC MOV X0, X20
	0x0361A400 BL 0x1C16DEC
	0x0361A404 STR X30, [X31 - 0x50]!
	0x0361A408 STP X26, X25, [X31 + 0x10]
	0x0361A40C STP X24, X23, [X31 + 0x20]
	0x0361A410 STP X22, X21, [X31 + 0x30]
	0x0361A414 STP X20, X19, [X31 + 0x40]
	0x0361A418 ADRP X23, 0xDC6000
	0x0361A41C LDRB W8, [X23 + 0x476]
	0x0361A420 MOV X19, X3
	0x0361A424 MOV W22, W2
	0x0361A428 MOV X21, X1
	0x0361A42C MOV X20, X0
	0x0361A430 TBNZ X8, 0x0, 0x361A454
	0x0361A434 ADRP X0, 0xADB000
	0x0361A438 LDR X0, [X0 + 0x278]
	0x0361A43C BL 0x1C16CF4
	0x0361A440 ADRP X0, 0xADB000
	0x0361A444 LDR X0, [X0 + 0xA28]
	0x0361A448 BL 0x1C16CF4
	0x0361A44C MOVZ W8, 0x1
	0x0361A450 STRB W8, [X23 + 0x476]
	0x0361A454 CBZ X21, 0x361A640
	0x0361A458 LDR W8, [X21 + 0x10]
	0x0361A45C ADRP X26, 0xADB000
	0x0361A460 LDR X26, [X26 + 0xA28]
	0x0361A464 CMP W8, 0x1
	0x0361A468 B.LT 0x361A574
	0x0361A46C MOVZ W23, 0x1
	0x0361A470 SUB W24, W23, 0x1
	0x0361A474 MOV X0, X21
	0x0361A478 MOV W1, W24
	0x0361A47C MOV X2, X31
	0x0361A480 BL 0x3222A1C
	0x0361A484 AND W8, W0, 0xFFFF
	0x0361A488 CMP W8, 0x2F
	0x0361A48C B.EQ 0x361A574
	0x0361A490 MOV X0, X21
	0x0361A494 MOV W1, W24
	0x0361A498 MOV X2, X31
	0x0361A49C BL 0x3222A1C
	0x0361A4A0 AND W8, W0, 0xFFFF
	0x0361A4A4 CMP W8, 0x5C
	0x0361A4A8 B.EQ 0x361A574
	0x0361A4AC MOV X0, X21
	0x0361A4B0 MOV W1, W24
	0x0361A4B4 MOV X2, X31
	0x0361A4B8 BL 0x3222A1C
	0x0361A4BC AND W8, W0, 0xFFFF
	0x0361A4C0 CMP W8, 0x3F
	0x0361A4C4 B.EQ 0x361A574
	0x0361A4C8 MOV X0, X21
	0x0361A4CC MOV W1, W24
	0x0361A4D0 MOV X2, X31
	0x0361A4D4 BL 0x3222A1C
	0x0361A4D8 AND W8, W0, 0xFFFF
	0x0361A4DC CMP W8, 0x23
	0x0361A4E0 B.EQ 0x361A574
	0x0361A4E4 MOV X0, X21
	0x0361A4E8 MOV W1, W24
	0x0361A4EC MOV X2, X31
	0x0361A4F0 BL 0x3222A1C
	0x0361A4F4 AND W8, W0, 0xFFFF
	0x0361A4F8 CMP W8, 0x3A
	0x0361A4FC B.EQ 0x361A514
	0x0361A500 LDR W8, [X21 + 0x10]
	0x0361A504 CMP W23, W8
	0x0361A508 ADD W23, W23, 0x1
	0x0361A50C B.LT 0x361A470
	0x0361A510 B 0x361A574
	0x0361A514 CMP W24, 0x2
	0x0361A518 B.LT 0x361A574
	0x0361A51C MOV X0, X21
	0x0361A520 MOV W1, W31
	0x0361A524 MOV W2, W24
	0x0361A528 MOV X3, X31
	0x0361A52C BL 0x3228DE4
	0x0361A530 CBZ X0, 0x361A640
	0x0361A534 MOV X24, X0
	0x0361A538 MOV X0, X31
	0x0361A53C BL 0x32C1424
	0x0361A540 LDR X8, [X26]
	0x0361A544 STR X31, [X31 + 0x8]
	0x0361A548 LDR W25, [X24 + 0x10]
	0x0361A54C ADD X24, X24, W0, SXTW
	0x0361A550 LDR W9, [X8 + 0xE0]
	0x0361A554 CBNZ W9, 0x361A560
	0x0361A558 MOV X0, X8
	0x0361A55C BL 0x1C16DFC
	0x0361A560 ADD X2, X31, 0x8
	0x0361A564 MOV X0, X24
	0x0361A568 MOV W1, W25
	0x0361A56C BL 0x361A644
	0x0361A570 CBZ W0, 0x361A5F0
	0x0361A574 LDR W8, [X21 + 0x10]
	0x0361A578 CBZ W8, 0x361A5B0
	0x0361A57C LDR X0, [X26]
	0x0361A580 ANDS W31, W22, 0x1
	0x0361A584 MOVZ W9, 0x3
	0x0361A588 CSINC W22, W9, W31, EQ
	0x0361A58C LDR W8, [X0 + 0xE0]
	0x0361A590 CBNZ W8, 0x361A598
	0x0361A594 BL 0x1C16DFC
	0x0361A598 MOV X0, X20
	0x0361A59C MOV X1, X21
	0x0361A5A0 MOV W2, W22
	0x0361A5A4 BL 0x361A7A4
	0x0361A5A8 MOV X21, X0
	0x0361A5AC B 0x361A5D0
	0x0361A5B0 CBZ X20, 0x361A640
	0x0361A5B4 MOV X0, X20
	0x0361A5B8 BL 0x361CF60
	0x0361A5BC ANDS W31, W0, 0x1
	0x0361A5C0 MOVZ W8, 0x10
	0x0361A5C4 MOVZ W9, 0x18
	0x0361A5C8 CSEL X8, X9, X8, NE
	0x0361A5CC LDR X21, [X20, X8, LSL]
	0x0361A5D0 STR X21, [X19]
	0x0361A5D4 LDP X20, X19, [X31 + 0x40]
	0x0361A5D8 LDP X22, X21, [X31 + 0x30]
	0x0361A5DC LDP X24, X23, [X31 + 0x20]
	0x0361A5E0 LDP X26, X25, [X31 + 0x10]
	0x0361A5E4 MOV W0, W31
	0x0361A5E8 LDR X30, [X31], #0x50
	0x0361A5EC RET
	0x0361A5F0 CBZ X20, 0x361A640
	0x0361A5F4 LDR X8, [X20 + 0x20]
	0x0361A5F8 LDR X9, [X31 + 0x8]
	0x0361A5FC CMP X8, X9
	0x0361A600 B.NE 0x361A5D0
	0x0361A604 LDR W8, [X21 + 0x10]
	0x0361A608 CMP W23, W8
	0x0361A60C B.GE 0x361A628
	0x0361A610 MOV X0, X21
	0x0361A614 MOV W1, W23
	0x0361A618 MOV X2, X31
	0x0361A61C BL 0x322B484
	0x0361A620 MOV X21, X0
	0x0361A624 B 0x361A63C
	0x0361A628 ADRP X8, 0xADB000
	0x0361A62C LDR X8, [X8 + 0x278]
	0x0361A630 LDR X8, [X8]
	0x0361A634 LDR X8, [X8 + 0xB8]
	0x0361A638 LDR X21, [X8]
	0x0361A63C CBNZ X21, 0x361A574
	0x0361A640 BL 0x1C16F20
	0x0361A644 STR X30, [X31 - 0x30]!
	0x0361A648 STP X22, X21, [X31 + 0x10]
	0x0361A64C STP X20, X19, [X31 + 0x20]
	0x0361A650 ADRP X22, 0xDC6000
	0x0361A654 LDRB W8, [X22 + 0x496]
	0x0361A658 MOV X19, X2
	0x0361A65C MOV W21, W1
	0x0361A660 MOV X20, X0
	0x0361A664 TBNZ X8, 0x0, 0x361A67C
	0x0361A668 ADRP X0, 0xB21000
	0x0361A66C LDR X0, [X0 + 0x48]
	0x0361A670 BL 0x1C16CF4
	0x0361A674 MOVZ W8, 0x1
	0x0361A678 STRB W8, [X22 + 0x496]
	0x0361A67C LDRH W8, [X20]
	0x0361A680 SUB W9, W8, 0x61
	0x0361A684 CMP W9, 0x1A
	0x0361A688 B.CC 0x361A6A0
	0x0361A68C SUB W9, W8, 0x41
	0x0361A690 CMP W9, 0x19
	0x0361A694 B.HI 0x361A768
	0x0361A698 ORR W8, W8, 0x20
	0x0361A69C STRH W8, [X20]
	0x0361A6A0 AND W3, W21, 0xFFFF
	0x0361A6A4 CMP W3, 0x2

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+48], X30
	003 Move [X31+56], X23
	004 Move [X31+64], X22
	005 Move [X31+72], X21
	006 Move [X31+80], X20
	007 Move [X31+88], X19
	008 Move X20, 0xDC7000
	009 Move W8, [X20+1166]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0xB22000
	016 Move X0, [X0+88]
	017 Call 0x1C17CF4
	018 Move X0, 0xADC000
	019 Move X0, [X0+2600]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X20+1166], W8
	023 Move [X31+36], W31
	024 Move [X31+28], W31
	025 Move X0, [X19+32]
	026 Compare X0, 0
	027 JumpIfEqual {244}
	028 Move X1, X31
	029 Call UriParser.get_IsSimple, X0
	030 Move TEMP, X0
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfEqual {66}
	034 Move X20, [X19+56]
	035 Move [X31+36], W31
	036 Add X1, X31, 36
	037 Move X0, X20
	038 Move X2, X31
	039 Call Monitor.Enter, X0, X1
	040 Move X8, [X19+48]
	041 Move TEMP, X8
	042 And TEMP, TEMP, 0x4000000
	043 Compare TEMP, 0x4000000
	044 JumpIfEqual {54}
	045 Or X8, X8, 0x7FFFFFF
	046 Move [X19+48], X8
	047 Move X0, X19
	048 Call Uri.GetHostViaCustomSyntax, X0
	049 Move X8, [X19+48]
	050 Move X22, X31
	051 Move W21, 4
	052 And X8, X8, 0x3FFFFFFFFFFFFFF
	053 Move [X19+48], X8
	054 Move X22, X31
	055 Move W21, 2
	056 Move W8, [X31+36]
	057 Compare W8, 0
	058 JumpIfEqual {62}
	059 Move X0, X20
	060 Move X1, X31
	061 Call Monitor.Exit, X0
	062 Compare X22, 0
	063 JumpIfNotEqual {247}
	064 Or W8, W21, 2
	065 NotImplemented "Instruction CMP not yet implemented."
	066 Move X8, [X19+48]
	067 Move [X31+40], X8
	068 Move X8, [X19+56]
	069 Compare X8, 0
	070 JumpIfEqual {244}
	071 Move X9, 0xADC000
	072 Move X9, [X9+2600]
	073 Move X22, [X19+16]
	074 NotImplemented "Instruction LDRH not yet implemented."
	075 NotImplemented "Instruction LDRH not yet implemented."
	076 Move X0, [X9]
	077 Add X21, X8, 24
	078 Move W9, [X0+224]
	079 Compare W9, 0
	080 JumpIfNotEqual {82}
	081 Call 0x1C17DFC
	082 Add X3, X31, 40
	083 Move X0, X22
	084 Move W1, W20
	085 Move W2, W23
	086 Move X4, X21
	087 Call Uri.CreateHostStringHelper, X0, X1, X2, X3, X4
	088 Compare X0, 0
	089 JumpIfEqual {244}
	090 Move W9, [X0+16]
	091 Move X20, X0
	092 Compare W9, 0
	093 JumpIfEqual {184}
	094 Move X8, [X19+48]
	095 And X10, X8, 0x7FFFF
	096 NotImplemented "Instruction CMP not yet implemented."
	097 Move X0, X31
	098 NotImplemented "Instruction STRH not yet implemented."
	099 Call RuntimeHelpers.get_OffsetToStringData
	100 Move W3, [X20+16]
	101 Add X1, X20, W0
	102 Add X2, X31, 32
	103 Move W4, 0xFFFF
	104 Move X0, X19
	105 Call Uri.CheckCanonical, X0, X1, X2, X3, X4
	106 Move X8, [X19+48]
	107 Move TEMP, X0
	108 And TEMP, TEMP, 2
	109 Compare TEMP, 2
	110 JumpIfEqual {122}
	111 Move TEMP, X0
	112 And TEMP, TEMP, 32
	113 Compare TEMP, 32
	114 JumpIfEqual {119}
	115 Move TEMP, X8
	116 And TEMP, TEMP, 0x20000000
	117 Compare TEMP, 0x20000000
	118 JumpIfEqual {122}
	119 Move X9, [X31+40]
	120 Or X9, X9, 7
	121 Move [X31+40], X9
	122 Move W9, 33
	123 And X31, X8, 0x3FFFFFFF
	124 And W9, W0, W9
	125 And W10, W0, 16
	126 NotImplemented "Instruction CCMP not yet implemented."
	127 NotImplemented "Instruction CSEL not yet implemented."
	128 Move W10, 17
	129 And W9, W9, W10
	130 NotImplemented "Instruction CMP not yet implemented."
	131 Move X9, [X31+40]
	132 Or X9, X9, 511
	133 Move [X31+40], X9
	134 Move TEMP, X8
	135 And TEMP, TEMP, 0x80000
	136 Compare TEMP, 0x80000
	137 JumpIfEqual {184}
	138 Move X9, 0xB22000
	139 Move X9, [X9+88]
	140 Move [X31+28], W31
	141 Move W21, [X20+16]
	142 And X31, X8, 0x3FFFFFFF
	143 Move X0, [X9]
	144 Move W8, 37
	145 NotImplemented "Instruction CSINV not yet implemented."
	146 Move W9, [X0+224]
	147 Compare W9, 0
	148 JumpIfNotEqual {150}
	149 Call 0x1C17DFC
	150 Add X4, X31, 28
	151 Move W5, 1
	152 Move W6, 63
	153 Move W7, 35
	154 Move X0, X20
	155 Move W1, W31
	156 Move W2, W21
	157 Move X3, X31
	158 Move [X31+8], X31
	159 NotImplemented "Instruction STRH not yet implemented."
	160 Call UriHelper.EscapeString, X0, X1, X2, X3, X4, X5, X6, X7, X8
	161 Compare X0, 0
	162 JumpIfEqual {184}
	163 Move W3, [X31+28]
	164 Move X1, X0
	165 Move X0, X31
	166 Move W2, W31
	167 Move X4, X31
	168 Call String.CreateString, X0, X1, X2, X3
	169 Move X20, X0
	170 Move TEMP, X8
	171 And TEMP, TEMP, 0x2000000
	172 Compare TEMP, 0x2000000
	173 JumpIfEqual {184}
	174 Move X8, [X19+56]
	175 Compare X8, 0
	176 JumpIfEqual {244}
	177 Move X10, [X8+24]
	178 Compare X10, 0
	179 JumpIfEqual {214}
	180 Move X8, [X31+40]
	181 Move W9, 260
	182 Or X8, X8, X9
	183 Move [X31+40], X8
	184 Move X22, [X19+56]
	185 Compare X22, 0
	186 JumpIfEqual {244}
	187 Move [X22+16], X20
	188 Move [X31+36], W31
	189 Add X1, X31, 36
	190 Move X0, X22
	191 Move X2, X31
	192 Call Monitor.Enter, X0, X1
	193 Move X8, [X19+48]
	194 Move X9, [X31+40]
	195 Move X20, X31
	196 Or X8, X9, X8
	197 Move [X19+48], X8
	198 Move W8, [X31+36]
	199 Compare W8, 0
	200 JumpIfEqual {204}
	201 Move X0, X22
	202 Move X1, X31
	203 Call Monitor.Exit, X0
	204 Compare X20, 0
	205 JumpIfNotEqual {245}
	206 Move X20, [X31+80]
	207 Move X19, [X31+88]
	208 Move X22, [X31+64]
	209 Move X21, [X31+72]
	210 Move X30, [X31+48]
	211 Move X23, [X31+56]
	212 Add X31, X31, 96
	213 Return 
	214 NotImplemented "Instruction CMP not yet implemented."
	215 Move W21, W31
	216 NotImplemented "Instruction LDRH not yet implemented."
	217 NotImplemented "Instruction LDRH not yet implemented."
	218 Add W9, W21, W9
	219 NotImplemented "Instruction CMP not yet implemented."
	220 Move X0, X20
	221 Move W1, W21
	222 Move X2, X31
	223 Call String.get_Chars, X0, X1
	224 Move X8, [X19+56]
	225 Compare X8, 0
	226 JumpIfEqual {244}
	227 Move W22, W0
	228 Move X0, [X19+16]
	229 Compare X0, 0
	230 JumpIfEqual {244}
	231 NotImplemented "Instruction LDRH not yet implemented."
	232 Move X2, X31
	233 Add W1, W21, W8
	234 Call String.get_Chars, X0, X1
	235 And W8, W22, 0xFFFF
	236 NotImplemented "Instruction CMP not yet implemented."
	237 Move W8, [X20+16]
	238 Add W9, W21, 1
	239 And W21, W9, 0xFFFF
	240 NotImplemented "Instruction CMP not yet implemented."
	241 Move X8, [X19+56]
	242 Compare X8, 0
	243 JumpIfNotEqual {216}
	244 Call 0x1C17F20
	245 Move X0, X20
	246 Call 0x1C17F18
	247 Move X0, X22
	248 Call 0x1C17F18
	249 Move X21, X0
	250 NotImplemented "Instruction CMP not yet implemented."
	251 Move X0, X21
	252 Call 0x3EB2AD0
	253 Move X22, [X0]
	254 Call 0x3EB2AE0
	255 Move W21, W31
	256 Move X22, X31
	257 Move X21, X0
	258 Move W8, [X31+36]
	259 Compare W8, 0
	260 JumpIfEqual {264}
	261 Move X0, X20
	262 Move X1, X31
	263 Call Monitor.Exit, X0
	264 Compare X22, 0
	265 JumpIfEqual {284}
	266 Move X0, X22
	267 Call 0x1C17F18
	268 NotImplemented "Instruction CMP not yet implemented."
	269 Move X21, X0
	270 Move X0, X21
	271 Call 0x3EB2AD0
	272 Move X20, [X0]
	273 Call 0x3EB2AE0
	274 Move X20, X31
	275 Move X21, X0
	276 Move W8, [X31+36]
	277 Compare W8, 0
	278 JumpIfEqual {282}
	279 Move X0, X22
	280 Move X1, X31
	281 Call Monitor.Exit, X0
	282 Compare X20, 0
	283 JumpIfNotEqual {286}
	284 Move X0, X21
	285 Call 0x1D2D690
	286 Move X0, X20
	287 Call 0x1C17F18
	288 Call 0x1991590

Method: System.String CreateHostStringHelper(System.String str, System.UInt16 idx, System.UInt16 end, ref System.Uri/Flags flags, ref System.String scopeId)

Disassembly:
	0x0362152C MOVZ W11, 0x3A
	0x03621530 STRH W11, [X10 + 0x20]
	0x03621534 LDRB W10, [X20 + 0x32]
	0x03621538 TBZ X10, 0x4, 0x3621450
	0x0362153C CMP W25, W9
	0x03621540 B.CS 0x3621F6C
	0x03621544 ADD W10, W8, 0x2
	0x03621548 ADD X12, X19, W25, 0x1, SXTW
	0x0362154C MOVZ W11, 0x2F
	0x03621550 ADD W25, W8, 0x3
	0x03621554 CMP W10, W9
	0x03621558 STRH W11, [X12 + 0x20]
	0x0362155C STR W25, [X31 + 0x2C]
	0x03621560 B.CS 0x3621F6C
	0x03621564 ADD X8, X19, W10, 0x1, SXTW
	0x03621568 STRH W11, [X8 + 0x20]
	0x0362156C B 0x3621450
	0x03621570 CMP W21, 0x3
	0x03621574 B.EQ 0x362164C
	0x03621578 CMP W21, 0x2
	0x0362157C B.EQ 0x36215F0
	0x03621580 CMP W21, 0x1
	0x03621584 B.NE 0x36216F8
	0x03621588 LDR X26, [X20 + 0x10]
	0x0362158C LDR X9, [X20 + 0x38]
	0x03621590 TBNZ X8, 0x13, 0x3621F20
	0x03621594 CBZ X9, 0x3621F68
	0x03621598 ADRP X8, 0xB1A000
	0x0362159C LDR X8, [X8 + 0x58]
	0x036215A0 LDRH W25, [X9 + 0x2A]
	0x036215A4 LDRH W27, [X9 + 0x2C]
	0x036215A8 LDR X0, [X8]
	0x036215AC LDR W8, [X0 + 0xE0]
	0x036215B0 CBNZ W8, 0x36215B8
	0x036215B4 BL 0x1C16DFC
	0x036215B8 MOVZ W8, 0x25
	0x036215BC ADD X4, X31, 0x2C
	0x036215C0 MOVZ W5, 0x1
	0x036215C4 MOVZ W6, 0x3F
	0x036215C8 MOVZ W7, 0x23
	0x036215CC MOV X0, X26
	0x036215D0 MOV W1, W25
	0x036215D4 MOV W2, W27
	0x036215D8 MOV X3, X19
	0x036215DC STR X31, [X31 + 0x8]
	0x036215E0 STRH W8, [X31]
	0x036215E4 BL 0x362A9E0
	0x036215E8 MOV X19, X0
	0x036215EC B 0x3621768
	0x036215F0 LDR X8, [X20 + 0x38]
	0x036215F4 CBZ X8, 0x3621F68
	0x036215F8 ADRP X9, 0xB1A000
	0x036215FC LDR X9, [X9 + 0x58]
	0x03621600 MOV X29, X28
	0x03621604 LDR X25, [X20 + 0x10]
	0x03621608 LDRH W26, [X8 + 0x2A]
	0x0362160C LDR X0, [X9]
	0x03621610 LDRH W27, [X8 + 0x2C]
	0x03621614 LDR X28, [X20 + 0x20]
	0x03621618 LDR W8, [X0 + 0xE0]
	0x0362161C CBNZ W8, 0x3621624
	0x03621620 BL 0x1C16DFC
	0x03621624 MOVZ W8, 0xA
	0x03621628 STR X31, [X31 + 0x18]
	0x0362162C STRB W31, [X31 + 0x10]
	0x03621630 STR X28, [X31 + 0x8]
	0x03621634 ADD X4, X31, 0x2C
	0x03621638 MOVZ W5, 0xFFFF
	0x0362163C MOVZ W6, 0xFFFF
	0x03621640 MOVZ W7, 0xFFFF
	0x03621644 STR W8, [X31]
	0x03621648 B 0x362174C
	0x0362164C LDR X9, [X20 + 0x38]
	0x03621650 CBZ X9, 0x3621F68
	0x03621654 ADRP X11, 0xB1A000
	0x03621658 LDRH W10, [X9 + 0x2C]
	0x0362165C LDR X11, [X11 + 0x58]
	0x03621660 LDR X25, [X20 + 0x10]
	0x03621664 LDRH W26, [X9 + 0x2A]
	0x03621668 LDR X28, [X20 + 0x20]
	0x0362166C LDR X0, [X11]
	0x03621670 ANDS X31, X8, 0xFFFFF
	0x03621674 MOVZ W8, 0x2
	0x03621678 SUB W27, W10, 0x1
	0x0362167C LDR W9, [X0 + 0xE0]
	0x03621680 CINC W29, W8, EQ
	0x03621684 CBNZ W9, 0x362168C
	0x03621688 BL 0x1C16DFC
	0x0362168C ADD X4, X31, 0x2C
	0x03621690 MOVZ W5, 0x40
	0x03621694 MOVZ W6, 0x2F
	0x03621698 MOVZ W7, 0x5C
	0x0362169C MOV X0, X25
	0x036216A0 MOV W1, W26
	0x036216A4 MOV W2, W27
	0x036216A8 MOV X3, X19
	0x036216AC STR X31, [X31 + 0x18]
	0x036216B0 STRB W31, [X31 + 0x10]
	0x036216B4 STR X28, [X31 + 0x8]
	0x036216B8 STR W29, [X31]
	0x036216BC BL 0x362B208
	0x036216C0 LDRSW X8, [X31 + 0x2C]
	0x036216C4 ADD W9, W8, 0x1
	0x036216C8 STR W9, [X31 + 0x2C]
	0x036216CC CBZ X0, 0x3621F68
	0x036216D0 LDR W9, [X0 + 0x18]
	0x036216D4 ADRP X28, 0xAD4000
	0x036216D8 LDR X28, [X28 + 0x278]
	0x036216DC MOV X19, X0
	0x036216E0 CMP W8, W9
	0x036216E4 B.CS 0x3621F6C
	0x036216E8 ADD X8, X19, X8, 0x1, LSL
	0x036216EC MOVZ W9, 0x40
	0x036216F0 STRH W9, [X8 + 0x20]
	0x036216F4 B 0x3621768
	0x036216F8 LDR X8, [X20 + 0x38]
	0x036216FC CBZ X8, 0x3621F68
	0x03621700 ADRP X9, 0xB1A000
	0x03621704 LDR X9, [X9 + 0x58]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0xDC0000
	009 Move W8, [X24+1167]
	010 Move X23, X4
	011 Move X19, X3
	012 Move W21, W2
	013 Move W22, W1
	014 Move X20, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0xAD5000
	020 Move X0, [X0+632]
	021 Call 0x1C17CF4
	022 Move X0, 0xAD5000
	023 Move X0, [X0+2600]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X24+1167], W8
	027 Move [X31+12], W31
	028 Move X24, [X19]
	029 And X8, X24, 0x7FFFF
	030 NotImplemented "Instruction CMP not yet implemented."
	031 NotImplemented "Instruction CMP not yet implemented."
	032 NotImplemented "Instruction CMP not yet implemented."
	033 NotImplemented "Instruction CMP not yet implemented."
	034 And W1, W22, 0xFFFF
	035 And W2, W21, 0xFFFF
	036 Add X3, X31, 12
	037 Move X0, X20
	038 Move X4, X31
	039 Call DomainNameHelper.ParseCanonicalName, X0, X1, X2, X3
	040 NotImplemented "Instruction CMP not yet implemented."
	041 NotImplemented "Instruction CMP not yet implemented."
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X8, 0xAD5000
	044 Move X8, [X8+632]
	045 Move X8, [X8]
	046 Move X8, [X8+184]
	047 Move X0, [X8]
	048 And W1, W22, 0xFFFF
	049 Add X2, X31, 12
	050 Move X0, X20
	051 Move X3, X23
	052 Move X4, X31
	053 Call IPv6AddressHelper.ParseCanonicalName, X0, X1, X2, X3
	054 And W1, W22, 0xFFFF
	055 And W2, W21, 0xFFFF
	056 Add X3, X31, 12
	057 Move X0, X20
	058 Move X4, X31
	059 Call IPv4AddressHelper.ParseCanonicalName, X0, X1, X2, X3
	060 And W1, W22, 0xFFFF
	061 And W2, W21, 0xFFFF
	062 Add X3, X31, 12
	063 Move X0, X20
	064 Move X4, X31
	065 Call UncNameHelper.ParseCanonicalName, X0, X1, X2, X3
	066 Move X8, 0xAD5000
	067 Move X8, [X8+2600]
	068 Move X0, [X8]
	069 Move W8, [X0+224]
	070 Compare W8, 0
	071 JumpIfEqual {84}
	072 Move TEMP, X24
	073 And TEMP, TEMP, 0x8000000
	074 Compare TEMP, 0x8000000
	075 JumpIfEqual {89}
	076 Compare X20, 0
	077 JumpIfEqual {126}
	078 And W8, W21, 0xFFFF
	079 And W1, W22, 0xFFFF
	080 Subtract W2, W8, W22
	081 Move X0, X20
	082 Move X3, X31
	083 Call String.Substring, X0, X1, X2
	084 Call 0x1C17DFC
	085 Move TEMP, X24
	086 And TEMP, TEMP, 0x8000000
	087 Compare TEMP, 0x8000000
	088 JumpIfNotEqual {76}
	089 Move X8, 0xAD5000
	090 Move X8, [X8+632]
	091 Move X8, [X8]
	092 Move X8, [X8+184]
	093 Move X0, [X8]
	094 Compare X0, 0
	095 JumpIfEqual {126}
	096 Move W8, [X0+16]
	097 Compare W8, 0
	098 JumpIfEqual {102}
	099 Move W8, [X31+12]
	100 Compare W8, 0
	101 JumpIfEqual {105}
	102 Move X8, [X19]
	103 Or X8, X8, 0x7FFFFF
	104 Move [X19], X8
	105 Move X20, [X31+48]
	106 Move X19, [X31+56]
	107 Move X22, [X31+32]
	108 Move X21, [X31+40]
	109 Move X24, [X31+16]
	110 Move X23, [X31+24]
	111 Move X30, [X31+64]
	112 Return X0
	113 Move X0, 0xAD5000
	114 Move X0, [X0+2600]
	115 Call 0x1C17D08
	116 Call 0x19913D0
	117 Move W0, 8
	118 Call Uri.GetException, X0
	119 Move X19, X0
	120 Move X0, 0xB1B000
	121 Move X0, [X0+560]
	122 Call 0x1C17D08
	123 Move X1, X0
	124 Move X0, X19
	125 Call 0x1C17DEC
	126 Call 0x1C17F20

Method: System.Void GetHostViaCustomSyntax()

Disassembly:
	0x036210FC LDR X8, [X19 + 0x38]
	0x03621100 CBZ X8, 0x3621328
	0x03621104 LDRH W9, [X8 + 0x36]
	0x03621108 LDRH W1, [X8 + 0x30]
	0x0362110C CMP W9, W1
	0x03621110 B.LS 0x36211E4
	0x03621114 LDR X0, [X19 + 0x10]
	0x03621118 CBZ X0, 0x3621328
	0x0362111C MOV X2, X31
	0x03621120 BL 0x3222A1C
	0x03621124 AND W8, W0, 0xFFFF
	0x03621128 CMP W8, 0x2F
	0x0362112C B.NE 0x36211E4
	0x03621130 LDR X8, [X19 + 0x38]
	0x03621134 CBZ X8, 0x3621328
	0x03621138 LDRH W9, [X8 + 0x30]
	0x0362113C ADD W9, W9, 0x1
	0x03621140 B 0x36211F0
	0x03621144 TBNZ X8, 0x17, 0x362124C
	0x03621148 LDR X8, [X19 + 0x20]
	0x0362114C CBZ X8, 0x3621328
	0x03621150 LDR W8, [X8 + 0x1C]
	0x03621154 ADDS W31, W8, 0x1
	0x03621158 B.EQ 0x362124C
	0x0362115C LDR X8, [X19 + 0x38]
	0x03621160 CBZ X8, 0x3621328
	0x03621164 LDR X0, [X19 + 0x10]
	0x03621168 CBZ X0, 0x3621328
	0x0362116C LDRH W9, [X8 + 0x30]
	0x03621170 LDRH W1, [X8 + 0x2C]
	0x03621174 SUB W2, W9, W1
	0x03621178 MOV X3, X31
	0x0362117C BL 0x3228DE4
	0x03621180 LDR X8, [X19 + 0x38]
	0x03621184 CBZ X8, 0x3621328
	0x03621188 ADRP X9, 0xAD4000
	0x0362118C LDR X9, [X9 + 0xC48]
	0x03621190 MOV X19, X0
	0x03621194 ADD X20, X8, 0x2E
	0x03621198 LDR X0, [X9]
	0x0362119C LDR W9, [X0 + 0xE0]
	0x036211A0 CBNZ W9, 0x36211A8
	0x036211A4 BL 0x1C16DFC
	0x036211A8 MOV X0, X31
	0x036211AC BL 0x3338524
	0x036211B0 MOV X1, X0
	0x036211B4 MOV X0, X20
	0x036211B8 MOV X2, X31
	0x036211BC BL 0x3398D7C
	0x036211C0 ADRP X8, 0xADB000
	0x036211C4 LDR X8, [X8 + 0x988]
	0x036211C8 MOV X2, X0
	0x036211CC MOV X0, X19
	0x036211D0 LDP X20, X19, [X31 + 0x10]
	0x036211D4 LDR X1, [X8]
	0x036211D8 MOV X3, X31
	0x036211DC LDP X30, X21, [X31], #0x20
	0x036211E0 B 0x32274B8
	0x036211E4 LDR X8, [X19 + 0x38]
	0x036211E8 CBZ X8, 0x3621328
	0x036211EC LDRH W9, [X8 + 0x30]
	0x036211F0 LDRH W8, [X8 + 0x32]
	0x036211F4 AND W1, W9, 0xFFFF
	0x036211F8 CMP W1, W8
	0x036211FC B.CS 0x362120C
	0x03621200 LDR X0, [X19 + 0x10]
	0x03621204 CBNZ X0, 0x3621244
	0x03621208 B 0x3621328
	0x0362120C ADRP X8, 0xAD4000
	0x03621210 LDR X8, [X8 + 0x278]
	0x03621214 LDR X8, [X8]
	0x03621218 LDR X8, [X8 + 0xB8]
	0x0362121C LDR X0, [X8]
	0x03621220 LDP X20, X19, [X31 + 0x10]
	0x03621224 LDP X30, X21, [X31], #0x20
	0x03621228 RET
	0x0362122C CBZ X0, 0x3621328
	0x03621230 LDRH W9, [X8 + 0x34]
	0x03621234 LDR W10, [X0 + 0x10]
	0x03621238 CMP W10, W9
	0x0362123C B.EQ 0x3621220
	0x03621240 LDRH W8, [X8 + 0x34]
	0x03621244 SUB W2, W8, W1
	0x03621248 B 0x36212C4
	0x0362124C LDR X8, [X19 + 0x38]
	0x03621250 CBZ X8, 0x3621328
	0x03621254 LDR X0, [X19 + 0x10]
	0x03621258 CBZ X0, 0x3621328
	0x0362125C LDRH W9, [X8 + 0x30]
	0x03621260 LDRH W1, [X8 + 0x2C]
	0x03621264 B 0x36212C0
	0x03621268 LDR X8, [X19 + 0x38]
	0x0362126C CBZ X8, 0x3621328
	0x03621270 LDR X0, [X19 + 0x10]
	0x03621274 CBZ X0, 0x3621328
	0x03621278 LDRH W9, [X8 + 0x2A]
	0x0362127C LDRH W1, [X8 + 0x28]
	0x03621280 MOV X3, X31
	0x03621284 SUB W2, W9, W1
	0x03621288 BL 0x3228DE4
	0x0362128C LDR X8, [X19 + 0x38]
	0x03621290 CBZ X8, 0x3621328
	0x03621294 MOV X20, X0
	0x03621298 LDR X0, [X19 + 0x10]
	0x0362129C CBZ X0, 0x3621328
	0x036212A0 LDRH W9, [X8 + 0x34]
	0x036212A4 B 0x3621300
	0x036212A8 LDR X8, [X19 + 0x38]
	0x036212AC CBZ X8, 0x3621328
	0x036212B0 LDR X0, [X19 + 0x10]
	0x036212B4 CBZ X0, 0x3621328
	0x036212B8 LDRH W9, [X8 + 0x2A]
	0x036212BC LDRH W1, [X8 + 0x28]
	0x036212C0 SUB W2, W9, W1
	0x036212C4 LDP X20, X19, [X31 + 0x10]
	0x036212C8 MOV X3, X31
	0x036212CC LDP X30, X21, [X31], #0x20
	0x036212D0 B 0x3228DE4
	0x036212D4 CBZ X0, 0x3621328
	0x036212D8 LDRH W8, [X8 + 0x2A]
	0x036212DC MOV X3, X31
	0x036212E0 SUB W2, W8, W1
	0x036212E4 BL 0x3228DE4
	0x036212E8 LDR X8, [X19 + 0x38]
	0x036212EC CBZ X8, 0x3621328
	0x036212F0 MOV X20, X0
	0x036212F4 LDR X0, [X19 + 0x10]
	0x036212F8 CBZ X0, 0x3621328
	0x036212FC LDRH W9, [X8 + 0x30]
	0x03621300 LDRH W1, [X8 + 0x2C]
	0x03621304 MOV X3, X31
	0x03621308 SUB W2, W9, W1
	0x0362130C BL 0x3228DE4
	0x03621310 MOV X1, X0
	0x03621314 MOV X0, X20
	0x03621318 LDP X20, X19, [X31 + 0x10]
	0x0362131C MOV X2, X31
	0x03621320 LDP X30, X21, [X31], #0x20
	0x03621324 B 0x321B938
	0x03621328 BL 0x1C16F20
	0x0362132C SUB X31, X31, 0x90
	0x03621330 STP X29, X30, [X31 + 0x30]
	0x03621334 STP X28, X27, [X31 + 0x40]
	0x03621338 STP X26, X25, [X31 + 0x50]
	0x0362133C STP X24, X23, [X31 + 0x60]
	0x03621340 STP X22, X21, [X31 + 0x70]
	0x03621344 STP X20, X19, [X31 + 0x80]
	0x03621348 ADRP X19, 0xDBF000
	0x0362134C LDRB W8, [X19 + 0x491]
	0x03621350 MOV W21, W3
	0x03621354 MOV W22, W2
	0x03621358 MOV W23, W1
	0x0362135C MOV X20, X0
	0x03621360 TBNZ X8, 0x0, 0x36213A8
	0x03621364 ADRP X0, 0xADB000
	0x03621368 LDR X0, [X0 + 0x8D8]
	0x0362136C BL 0x1C16CF4
	0x03621370 ADRP X0, 0xAD4000
	0x03621374 LDR X0, [X0 + 0xC48]
	0x03621378 BL 0x1C16CF4
	0x0362137C ADRP X0, 0xAD4000
	0x03621380 LDR X0, [X0 + 0x278]
	0x03621384 BL 0x1C16CF4
	0x03621388 ADRP X0, 0xB1A000
	0x0362138C LDR X0, [X0 + 0x58]
	0x03621390 BL 0x1C16CF4
	0x03621394 ADRP X0, 0xB1A000
	0x03621398 LDR X0, [X0 + 0x48]
	0x0362139C BL 0x1C16CF4
	0x036213A0 MOVZ W8, 0x1
	0x036213A4 STRB W8, [X19 + 0x491]
	0x036213A8 ADRP X28, 0xAD4000
	0x036213AC LDR X28, [X28 + 0x278]
	0x036213B0 MOV X0, X20
	0x036213B4 MOV W1, W31
	0x036213B8 STRB W31, [X31 + 0x28]
	0x036213BC STRB W31, [X31 + 0x24]
	0x036213C0 BL 0x3619254
	0x036213C4 TBNZ X23, 0x2, 0x36213DC
	0x036213C8 LDR X8, [X20 + 0x38]
	0x036213CC CBZ X8, 0x3621F68
	0x036213D0 LDR X9, [X28]
	0x036213D4 LDR X9, [X9 + 0xB8]
	0x036213D8 B 0x36213E8
	0x036213DC LDR X8, [X20 + 0x38]
	0x036213E0 CBZ X8, 0x3621F68
	0x036213E4 ADD X9, X8, 0x10
	0x036213E8 LDR X24, [X9]
	0x036213EC CMP W21, 0x1
	0x036213F0 MOVZ W9, 0xC
	0x036213F4 CSINC W9, W9, W31, EQ
	0x036213F8 CBZ X24, 0x3621F68
	0x036213FC LDR X10, [X20 + 0x20]
	0x03621400 CBZ X10, 0x3621F68
	0x03621404 LDR X10, [X10 + 0x20]
	0x03621408 CBZ X10, 0x3621F68
	0x0362140C LDRH W11, [X8 + 0x36]
	0x03621410 LDRH W8, [X8 + 0x2A]
	0x03621414 ADRP X12, 0xADB000
	0x03621418 LDR X12, [X12 + 0x8D8]
	0x0362141C LDR W13, [X24 + 0x10]
	0x03621420 LDR W10, [X10 + 0x10]
	0x03621424 SUB W8, W11, W8
	0x03621428 MUL W8, W8, W9
	0x0362142C LDR X0, [X12]
	0x03621430 ADD W8, W8, W13
	0x03621434 ADD W8, W8, W10
	0x03621438 ADD W1, W8, 0x4
	0x0362143C BL 0x1C16D6C
	0x03621440 MOV X19, X0
	0x03621444 MOV W25, W31
	0x03621448 STR W31, [X31 + 0x2C]
	0x0362144C TBNZ X23, 0x0, 0x36214C8
	0x03621450 TBZ X23, 0x1, 0x362177C
	0x03621454 LDR X8, [X20 + 0x30]
	0x03621458 TBZ X8, 0x15, 0x362177C
	0x0362145C TBNZ X22, 0x1, 0x3621570
	0x03621460 LDR X8, [X20 + 0x38]
	0x03621464 CBZ X8, 0x3621F68
	0x03621468 ADRP X9, 0xB1A000
	0x0362146C LDR X9, [X9 + 0x58]
	0x03621470 LDR X25, [X20 + 0x10]
	0x03621474 LDRH W26, [X8 + 0x2A]
	0x03621478 LDRH W27, [X8 + 0x2C]
	0x0362147C LDR X0, [X9]
	0x03621480 LDR X29, [X20 + 0x20]
	0x03621484 LDR W8, [X0 + 0xE0]
	0x03621488 CBNZ W8, 0x3621490
	0x0362148C BL 0x1C16DFC
	0x03621490 ADD X4, X31, 0x2C
	0x03621494 MOVZ W5, 0xFFFF
	0x03621498 MOVZ W6, 0xFFFF
	0x0362149C MOVZ W7, 0xFFFF
	0x036214A0 MOV X0, X25
	0x036214A4 MOV W1, W26
	0x036214A8 MOV W2, W27
	0x036214AC MOV X3, X19
	0x036214B0 STR X31, [X31 + 0x18]
	0x036214B4 STRB W31, [X31 + 0x10]
	0x036214B8 STR X29, [X31 + 0x8]
	0x036214BC STR W31, [X31]
	0x036214C0 BL 0x362B208
	0x036214C4 B 0x3621768
	0x036214C8 LDR X8, [X20 + 0x20]
	0x036214CC CBZ X8, 0x3621F68
	0x036214D0 LDR X0, [X8 + 0x20]
	0x036214D4 CBZ X0, 0x3621F68
	0x036214D8 LDR W4, [X0 + 0x10]
	0x036214DC MOV W1, W31
	0x036214E0 MOV X2, X19
	0x036214E4 MOV W3, W31
	0x036214E8 MOV X5, X31
	0x036214EC BL 0x322D7E4
	0x036214F0 LDR X8, [X20 + 0x20]
	0x036214F4 CBZ X8, 0x3621F68
	0x036214F8 LDR X8, [X8 + 0x20]
	0x036214FC CBZ X8, 0x3621F68
	0x03621500 LDRSW X8, [X8 + 0x10]
	0x03621504 CMP W23, 0x1
	0x03621508 STR W8, [X31 + 0x2C]
	0x0362150C B.EQ 0x362177C
	0x03621510 ADD W25, W8, 0x1
	0x03621514 STR W25, [X31 + 0x2C]
	0x03621518 CBZ X19, 0x3621F68
	0x0362151C LDR W9, [X19 + 0x18]
	0x03621520 CMP W8, W9
	0x03621524 B.CS 0x3621F6C
	0x03621528 ADD X10, X19, X8, 0x1, LSL

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+32], X30
	003 Move [X31+48], X24
	004 Move [X31+56], X23
	005 Move [X31+64], X22
	006 Move [X31+72], X21
	007 Move [X31+80], X20
	008 Move [X31+88], X19
	009 Move X20, 0xDC0000
	010 Move W8, [X20+1168]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xAD5000
	017 Move X0, [X0+2600]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X20+1168], W8
	021 Move [X31+24], X31
	022 Move X8, [X19+56]
	023 Compare X8, 0
	024 JumpIfEqual {268}
	025 Move X8, [X8+16]
	026 Compare X8, 0
	027 JumpIfNotEqual {142}
	028 Move X0, [X19+32]
	029 Compare X0, 0
	030 JumpIfEqual {268}
	031 Move W2, 4
	032 Move W3, 1
	033 Move X1, X19
	034 Move X4, X31
	035 Call UriParser.InternalGetComponents, X0, X1, X2, X3
	036 Move X8, [X19+56]
	037 Compare X8, 0
	038 JumpIfEqual {268}
	039 Move X8, [X8+16]
	040 Move X20, X0
	041 Compare X8, 0
	042 JumpIfNotEqual {81}
	043 Compare X20, 0
	044 JumpIfEqual {268}
	045 Move W8, [X20+16]
	046 Move W9, 0xFFF0
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Move [X31+44], W31
	049 Move X8, [X19+48]
	050 Move X0, X31
	051 And X8, X8, 0xFFFFFFFFFFFF
	052 Move [X31+24], X8
	053 Call RuntimeHelpers.get_OffsetToStringData
	054 Move [X31+16], X31
	055 Move W3, [X20+16]
	056 Move X6, [X19+32]
	057 Add X1, X20, W0
	058 Add X4, X31, 44
	059 Add X5, X31, 24
	060 Add X7, X31, 16
	061 Move X0, X19
	062 Move W2, W31
	063 Call Uri.CheckAuthorityHelper, X0, X1, X2, X3, X4, X5, X6, X7
	064 Move W21, [X20+16]
	065 And W8, W0, 0xFFFF
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Move X8, [X31+24]
	068 Or X8, X8, 0x7FFFF
	069 Move [X31+24], X8
	070 Move W8, [X31+44]
	071 Compare W8, 0
	072 JumpIfNotEqual {76}
	073 Move W8, [X31+24]
	074 NotImplemented "Instruction ORN not yet implemented."
	075 And X31, X8, 0x7FFFF
	076 Move X8, [X19+48]
	077 And X9, X8, 0xFFFFFFFFFFFF
	078 Move W8, 0x50000
	079 Or X8, X9, X8
	080 Move [X19+48], X8
	081 Move X0, [X19+32]
	082 Compare X0, 0
	083 JumpIfEqual {268}
	084 Move W2, 128
	085 Move W3, 1
	086 Move X1, X19
	087 Move X4, X31
	088 Call UriParser.InternalGetComponents, X0, X1, X2, X3
	089 Compare X0, 0
	090 JumpIfEqual {113}
	091 Move W8, [X0+16]
	092 Move X21, X0
	093 Compare W8, 0
	094 JumpIfEqual {113}
	095 NotImplemented "Instruction CMP not yet implemented."
	096 Move W23, W31
	097 Move W22, W31
	098 Move W24, 10
	099 Move X0, X21
	100 Move W1, W22
	101 Move X2, X31
	102 Call String.get_Chars, X0, X1
	103 Subtract W8, W0, 48
	104 And W8, W8, 0xFFFF
	105 NotImplemented "Instruction CMP not yet implemented."
	106 Multiply W8, W23, W24
	107 Add W8, W8, W0
	108 Subtract W23, W8, 48
	109 NotImplemented "Instruction CMP not yet implemented."
	110 Move W8, [X21+16]
	111 Add W22, W22, 1
	112 NotImplemented "Instruction CMP not yet implemented."
	113 Move X9, [X19+48]
	114 Move X8, [X19+56]
	115 Move W10, 520
	116 And X9, X9, 0x7FFFFFFFFFFFFF
	117 Or X9, X9, X10
	118 Move [X19+48], X9
	119 Compare X8, 0
	120 JumpIfEqual {268}
	121 NotImplemented "Instruction STRH not yet implemented."
	122 Move W23, W31
	123 Move X8, [X19+56]
	124 Compare X8, 0
	125 JumpIfEqual {268}
	126 NotImplemented "Instruction LDRH not yet implemented."
	127 NotImplemented "Instruction CMP not yet implemented."
	128 Move X9, [X19+32]
	129 Compare X9, 0
	130 JumpIfEqual {268}
	131 Move W9, [X9+28]
	132 Move X10, [X19+48]
	133 Move W11, 520
	134 NotImplemented "Instruction CMP not yet implemented."
	135 And X9, X10, 0x7FFFFFFFFFFFFF
	136 NotImplemented "Instruction CSET not yet implemented."
	137 Or X9, X9, X10
	138 Or X9, X9, X11
	139 Move [X19+48], X9
	140 NotImplemented "Instruction STRH not yet implemented."
	141 Move [X8+16], X20
	142 Move X20, [X31+80]
	143 Move X19, [X31+88]
	144 Move X22, [X31+64]
	145 Move X21, [X31+72]
	146 Move X24, [X31+48]
	147 Move X23, [X31+56]
	148 Move X30, [X31+32]
	149 Add X31, X31, 96
	150 Return 
	151 Move X8, [X19+56]
	152 Compare X8, 0
	153 JumpIfEqual {268}
	154 Move X9, 0xAD5000
	155 Move X9, [X9+2600]
	156 Add X22, X8, 24
	157 Move X0, [X9]
	158 Move W9, [X0+224]
	159 Compare W9, 0
	160 JumpIfNotEqual {162}
	161 Call 0x1C17DFC
	162 Add X3, X31, 24
	163 Move X0, X20
	164 Move W1, W31
	165 Move W2, W21
	166 Move X4, X22
	167 Call Uri.CreateHostStringHelper, X0, X1, X2, X3, X4
	168 Compare X0, 0
	169 JumpIfEqual {268}
	170 Move W8, [X0+16]
	171 Move X20, X0
	172 NotImplemented "Instruction CMP not yet implemented."
	173 Move W21, W31
	174 Move X8, [X19+56]
	175 Compare X8, 0
	176 JumpIfEqual {268}
	177 NotImplemented "Instruction LDRH not yet implemented."
	178 NotImplemented "Instruction LDRH not yet implemented."
	179 Add W9, W21, W9
	180 NotImplemented "Instruction CMP not yet implemented."
	181 Move X0, X20
	182 Move W1, W21
	183 Move X2, X31
	184 Call String.get_Chars, X0, X1
	185 Move X8, [X19+56]
	186 Compare X8, 0
	187 JumpIfEqual {268}
	188 Move W22, W0
	189 Move X0, [X19+16]
	190 Compare X0, 0
	191 JumpIfEqual {268}
	192 NotImplemented "Instruction LDRH not yet implemented."
	193 Move X2, X31
	194 Add W1, W21, W8
	195 Call String.get_Chars, X0, X1
	196 And W8, W22, 0xFFFF
	197 NotImplemented "Instruction CMP not yet implemented."
	198 Move W8, [X20+16]
	199 Add W9, W21, 1
	200 And W21, W9, 0xFFFF
	201 NotImplemented "Instruction CMP not yet implemented."
	202 Move X8, [X19+48]
	203 Move X8, [X19+48]
	204 Move W9, 260
	205 Or X8, X8, X9
	206 Move X9, [X31+24]
	207 And X8, X8, 0xFFFFFFFFFFFF
	208 And X9, X9, 0x7FFFF
	209 Move X0, 0xAD3000
	210 Move X0, [X0+2512]
	211 Call 0x1C17D08
	212 Move W1, 2
	213 Call 0x1C17D6C
	214 Move X19, [X19+32]
	215 Move X20, X0
	216 Move X0, X19
	217 Call 0x19913C0
	218 Move X0, X19
	219 Move X1, X31
	220 Call "il2cpp_vm_object_is_inst", X0
	221 Move X19, X0
	222 Call 0x19913C0
	223 Move X8, [X19]
	224 Move X0, X19
	225 Move X9, [X8+744]
	226 Move X1, [X8+752]
	227 NotImplemented "Instruction BLR not yet implemented."
	228 Move X19, X0
	229 Move X0, X20
	230 Call 0x19913C0
	231 Move X0, X20
	232 Move X1, X19
	233 Call 0x19990B4
	234 Move X0, X20
	235 Move X1, X31
	236 Move X2, X19
	237 Call 0x1994444
	238 Move X0, X20
	239 Call 0x19913C0
	240 Move X0, X20
	241 Move X1, X21
	242 Call 0x19990B4
	243 Move W1, 1
	244 Move X0, X20
	245 Move X2, X21
	246 Call 0x1994444
	247 Move X0, 0xB1B000
	248 Move X0, [X0+544]
	249 Call 0x1C17D08
	250 Move X1, X20
	251 Move X2, X31
	252 Call SR.GetString, X0, X1
	253 Move X19, X0
	254 Move X0, 0xB1B000
	255 Move X0, [X0+216]
	256 Call 0x1C17D08
	257 Call 0x1C17F10
	258 Move X1, X19
	259 Move X2, X31
	260 Move X20, X0
	261 Call UriFormatException..ctor, X0, X1
	262 Move X0, 0xB1B000
	263 Move X0, [X0+552]
	264 Call 0x1C17D08
	265 Move X1, X0
	266 Move X0, X20
	267 Call 0x1C17DEC
	268 Call 0x1C17F20
	269 Move X0, 0xAD5000
	270 Move X0, [X0+2600]
	271 Call 0x1C17D08
	272 Call 0x19913D0
	273 Move W0, 6
	274 Call Uri.GetException, X0
	275 Move X19, X0
	276 Move X0, 0xB1B000
	277 Move X0, [X0+552]
	278 Call 0x1C17D08
	279 Move X1, X0
	280 Move X0, X19
	281 Call 0x1C17DEC

Method: System.String GetParts(System.UriComponents uriParts, System.UriFormat formatAs)

Disassembly:
	0x0361C444 BL 0x1C16CF4

ISIL:
	001 Call Uri.GetComponents, X0, X1, X2
	002 Return X0

Method: System.String GetEscapedParts(System.UriComponents uriParts)

Disassembly:
	0x03621CCC MOV X0, X31
	0x03621CD0 MOV X1, X19
	0x03621CD4 B 0x3621EF8
	0x03621CD8 CMP W21, 0x2
	0x03621CDC B.EQ 0x3621D78
	0x03621CE0 MOVZ W8, 0x7FFF
	0x03621CE4 CMP W21, W8
	0x03621CE8 B.NE 0x3621DC4
	0x03621CEC ADRP X8, 0xB1A000
	0x03621CF0 LDR X8, [X8 + 0x58]
	0x03621CF4 LDR X26, [X20 + 0x10]
	0x03621CF8 LDR X28, [X20 + 0x20]
	0x03621CFC LDR X0, [X8]
	0x03621D00 LDRB W8, [X20 + 0x32]
	0x03621D04 LDR W9, [X0 + 0xE0]
	0x03621D08 ANDS W31, W8, 0x8
	0x03621D0C MOVZ W8, 0x6
	0x03621D10 B 0x3621DE8
	0x03621D14 CMP W21, 0x2
	0x03621D18 B.EQ 0x3621E38
	0x03621D1C MOVZ W8, 0x7FFF
	0x03621D20 CMP W21, W8
	0x03621D24 B.NE 0x3621E80
	0x03621D28 ADRP X8, 0xB1A000
	0x03621D2C LDR X8, [X8 + 0x58]
	0x03621D30 LDR X21, [X20 + 0x10]
	0x03621D34 LDR X22, [X20 + 0x20]
	0x03621D38 LDR X0, [X8]
	0x03621D3C LDRB W8, [X20 + 0x32]
	0x03621D40 LDR W9, [X0 + 0xE0]
	0x03621D44 ANDS W31, W8, 0x8
	0x03621D48 MOVZ W8, 0x6
	0x03621D4C B 0x3621EA4
	0x03621D50 ANDS X31, X8, 0xFFFFF
	0x03621D54 MOVZ W8, 0x2
	0x03621D58 CINC W26, W8, EQ
	0x03621D5C B 0x3621794
	0x03621D60 ADRP X8, 0xB1A000
	0x03621D64 LDR X8, [X8 + 0x58]
	0x03621D68 B 0x3621AB0
	0x03621D6C ADRP X8, 0xB1A000
	0x03621D70 LDR X8, [X8 + 0x58]
	0x03621D74 B 0x3621BEC
	0x03621D78 ADRP X8, 0xB1A000
	0x03621D7C LDR X8, [X8 + 0x58]
	0x03621D80 LDR X26, [X20 + 0x10]
	0x03621D84 LDR X27, [X20 + 0x20]
	0x03621D88 LDR X0, [X8]
	0x03621D8C LDR W8, [X0 + 0xE0]
	0x03621D90 CBNZ W8, 0x3621D98

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X8, [X0+48]
	008 Move W19, W1
	009 Move X20, X0
	010 Move X9, X8
	011 ShiftRight X9, 6
	012 And X9, X9, 0x7FFFFFFF
	013 And W21, W9, 254
	014 NotImplemented "Instruction BFM not yet implemented."
	015 Move TEMP, X1
	016 And TEMP, TEMP, 16
	017 Compare TEMP, 16
	018 JumpIfNotEqual {43}
	019 And X31, X8, 0xFFFF
	020 Or W21, W21, 16
	021 Move TEMP, X8
	022 And TEMP, TEMP, 0x8000000
	023 Compare TEMP, 0x8000000
	024 JumpIfNotEqual {43}
	025 Move X8, [X20+56]
	026 Compare X8, 0
	027 JumpIfEqual {68}
	028 Move X22, [X20+16]
	029 NotImplemented "Instruction LDRH not yet implemented."
	030 Move X0, X20
	031 Call Uri.get_SecuredPathIndex, X0
	032 Compare X22, 0
	033 JumpIfEqual {68}
	034 Add W8, W23, W0
	035 Subtract W1, W8, 1
	036 Move X0, X22
	037 Move X2, X31
	038 Call String.get_Chars, X0, X1
	039 And W8, W0, 0xFFFF
	040 Or W9, W21, 16
	041 NotImplemented "Instruction CMP not yet implemented."
	042 NotImplemented "Instruction CSEL not yet implemented."
	043 And W31, W21, W19
	044 Move X0, X20
	045 Move W1, W19
	046 Move W2, W21
	047 Move X20, [X31+32]
	048 Move X19, [X31+40]
	049 Move X22, [X31+16]
	050 Move X21, [X31+24]
	051 Move W3, 1
	052 Move X30, [X31+48]
	053 Move X23, [X31+56]
	054 Call Uri.ReCreateParts, X0, X1, X2, X3
	055 Return X0
	056 Move X0, X20
	057 Move W1, W19
	058 Call Uri.GetUriPartsFromUserString, X0, X1
	059 Compare X0, 0
	060 JumpIfEqual {44}
	061 Move X20, [X31+32]
	062 Move X19, [X31+40]
	063 Move X22, [X31+16]
	064 Move X21, [X31+24]
	065 Move X30, [X31+48]
	066 Move X23, [X31+56]
	067 Return X0
	068 Call 0x1C17F20

Method: System.String GetUnescapedParts(System.UriComponents uriParts, System.UriFormat formatAs)

Disassembly:
	0x0361DB5C LDR W9, [X0 + 0xE0]
	0x0361DB60 CBNZ W9, 0x361DB68
	0x0361DB64 BL 0x1C16DFC
	0x0361DB68 MOV X0, X31
	0x0361DB6C BL 0x3338524
	0x0361DB70 MOV X1, X0
	0x0361DB74 MOV X0, X19
	0x0361DB78 LDP X20, X19, [X31 + 0x20]
	0x0361DB7C LDP X22, X21, [X31 + 0x10]
	0x0361DB80 MOV X2, X31
	0x0361DB84 LDR X30, [X31], #0x30
	0x0361DB88 B 0x3398D7C
	0x0361DB8C UBFM W8, W21, 0x4, 0x1F
	0x0361DB90 AND W8, W8, 0x8
	0x0361DB94 ORR W1, W22, W8, 0x0
	0x0361DB98 CMP W1, 0x4
	0x0361DB9C B.NE 0x361DBEC
	0x0361DBA0 CMP W20, 0x1
	0x0361DBA4 B.EQ 0x361DBB8
	0x0361DBA8 LDRH W8, [X19 + 0x30]
	0x0361DBAC MOVZ W9, 0x104
	0x0361DBB0 ANDS W31, W8, W9, 0x0
	0x0361DBB4 B.NE 0x361DC08
	0x0361DBB8 MOV X0, X19
	0x0361DBBC MOV W1, W31
	0x0361DBC0 BL 0x3619254
	0x0361DBC4 LDR X8, [X19 + 0x38]
	0x0361DBC8 CBZ X8, 0x361DC38
	0x0361DBCC LDR X0, [X8 + 0x10]
	0x0361DBD0 B 0x361DAC8
	0x0361DBD4 ADRP X8, 0xAD8000
	0x0361DBD8 LDR X8, [X8 + 0x278]
	0x0361DBDC LDR X8, [X8]
	0x0361DBE0 LDR X8, [X8 + 0xB8]
	0x0361DBE4 LDR X0, [X8]
	0x0361DBE8 B 0x361DAC8
	0x0361DBEC CMP W20, 0x1
	0x0361DBF0 B.NE 0x361DC08
	0x0361DBF4 MOV X0, X19
	0x0361DBF8 LDP X20, X19, [X31 + 0x20]
	0x0361DBFC LDP X22, X21, [X31 + 0x10]
	0x0361DC00 LDR X30, [X31], #0x30
	0x0361DC04 B 0x3620CCC
	0x0361DC08 SUB W8, W20, 0x2
	0x0361DC0C CMP W8, 0x2
	0x0361DC10 B.CC 0x361DC20
	0x0361DC14 MOVZ W8, 0x7FFF
	0x0361DC18 CMP W20, W8
	0x0361DC1C B.NE 0x361DC3C
	0x0361DC20 MOV X0, X19
	0x0361DC24 MOV W2, W20
	0x0361DC28 LDP X20, X19, [X31 + 0x20]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X8, [X0+48]
	009 Move W19, W2
	010 Move W20, W1
	011 Move X21, X0
	012 And W22, W8, 127
	013 Move TEMP, X1
	014 And TEMP, TEMP, 16
	015 Compare TEMP, 16
	016 JumpIfNotEqual {41}
	017 And X31, X8, 0xFFFF
	018 Or W22, W22, 16
	019 Move TEMP, X8
	020 And TEMP, TEMP, 0x8000000
	021 Compare TEMP, 0x8000000
	022 JumpIfNotEqual {41}
	023 Move X8, [X21+56]
	024 Compare X8, 0
	025 JumpIfEqual {68}
	026 Move X23, [X21+16]
	027 NotImplemented "Instruction LDRH not yet implemented."
	028 Move X0, X21
	029 Call Uri.get_SecuredPathIndex, X0
	030 Compare X23, 0
	031 JumpIfEqual {68}
	032 Add W8, W24, W0
	033 Subtract W1, W8, 1
	034 Move X0, X23
	035 Move X2, X31
	036 Call String.get_Chars, X0, X1
	037 And W8, W0, 0xFFFF
	038 Or W9, W22, 16
	039 NotImplemented "Instruction CMP not yet implemented."
	040 NotImplemented "Instruction CSEL not yet implemented."
	041 And W31, W22, W20
	042 Move X0, X21
	043 Move W1, W20
	044 Move W2, W22
	045 Move W3, W19
	046 Move X20, [X31+48]
	047 Move X19, [X31+56]
	048 Move X22, [X31+32]
	049 Move X21, [X31+40]
	050 Move X24, [X31+16]
	051 Move X23, [X31+24]
	052 Move X30, [X31+64]
	053 Call Uri.ReCreateParts, X0, X1, X2, X3
	054 Return X0
	055 Move X0, X21
	056 Move W1, W20
	057 Call Uri.GetUriPartsFromUserString, X0, X1
	058 Compare X0, 0
	059 JumpIfEqual {42}
	060 Move X20, [X31+48]
	061 Move X19, [X31+56]
	062 Move X22, [X31+32]
	063 Move X21, [X31+40]
	064 Move X24, [X31+16]
	065 Move X23, [X31+24]
	066 Move X30, [X31+64]
	067 Return X0
	068 Call 0x1C17F20

Method: System.String ReCreateParts(System.UriComponents parts, System.UInt16 nonCanonical, System.UriFormat formatAs)

Disassembly:
	0x0362232C LDR X0, [X21 + 0x20]
	0x03622330 CBZ X0, 0x3622648
	0x03622334 MOVZ W1, 0x400000
	0x03622338 MOV X2, X31
	0x0362233C BL 0x3629044
	0x03622340 TBZ X0, 0x0, 0x3622390
	0x03622344 LDRB W8, [X21 + 0x31]
	0x03622348 TBZ X8, 0x7, 0x3622390
	0x0362234C LDRSW X8, [X20]
	0x03622350 LDRSW X9, [X31 + 0x2C]
	0x03622354 CMP W8, W9
	0x03622358 B.GE 0x3622390
	0x0362235C CBZ X19, 0x3622648
	0x03622360 LDR W10, [X19 + 0x18]
	0x03622364 ADD X11, X19, 0x20
	0x03622368 MOVZ W12, 0x2F
	0x0362236C CMP W8, W10
	0x03622370 B.CS 0x362264C
	0x03622374 LDRH W13, [X11, X8, LSL #1]
	0x03622378 CMP W13, 0x5C
	0x0362237C B.NE 0x3622384
	0x03622380 STRH W12, [X11, X8, LSL #1]
	0x03622384 ADD X8, X8, 0x1
	0x03622388 CMP X8, X9
	0x0362238C B.LT 0x362236C
	0x03622390 CMP W22, 0x1
	0x03622394 B.NE 0x36224A8
	0x03622398 B 0x36224B0
	0x0362239C ADRP X8, 0xAD3000
	0x036223A0 LDR X8, [X8 + 0xA28]
	0x036223A4 LDR W24, [X20]
	0x036223A8 LDR X23, [X21 + 0x20]
	0x036223AC LDR X0, [X8]
	0x036223B0 LDR W8, [X0 + 0xE0]
	0x036223B4 CBNZ W8, 0x36223BC
	0x036223B8 BL 0x1C16DFC
	0x036223BC ADD W1, W26, W24
	0x036223C0 ADD X2, X31, 0x2C
	0x036223C4 MOV X0, X19
	0x036223C8 MOV X3, X23
	0x036223CC BL 0x361C688
	0x036223D0 CBZ X19, 0x3622648
	0x036223D4 LDRSW X2, [X20]
	0x036223D8 LDR W8, [X19 + 0x18]
	0x036223DC CMP W2, W8
	0x036223E0 B.CS 0x362264C
	0x036223E4 ADD X8, X19, X2, 0x1, LSL
	0x036223E8 LDRH W9, [X8 + 0x20]!
	0x036223EC CMP W9, 0x5C
	0x036223F0 B.NE 0x36223FC
	0x036223F4 MOVZ W9, 0x2F
	0x036223F8 STRH W9, [X8]
	0x036223FC CMP W22, 0x1
	0x03622400 B.NE 0x36224A8
	0x03622404 LDR X8, [X21 + 0x30]
	0x03622408 MOVZ W9, 0x400
	0x0362240C MOVK W9, 0x80000
	0x03622410 AND X8, X8, X9, 0x0
	0x03622414 CMP X8, 0x400
	0x03622418 B.NE 0x36224B0
	0x0362241C LDR W8, [X31 + 0x2C]
	0x03622420 MOV X0, X31
	0x03622424 MOV X1, X19
	0x03622428 MOV X4, X31
	0x0362242C SUB W3, W8, W2
	0x03622430 BL 0x322EAE4
	0x03622434 ADRP X9, 0xB19000
	0x03622438 LDR W8, [X31 + 0x2C]
	0x0362243C LDR X9, [X9 + 0x58]
	0x03622440 MOV X22, X0
	0x03622444 LDRB W10, [X21 + 0x33]
	0x03622448 LDR X0, [X9]
	0x0362244C LDR W9, [X20]
	0x03622450 ANDS W31, W10, 0x20
	0x03622454 LDR W11, [X0 + 0xE0]
	0x03622458 SUB W21, W8, W9
	0x0362245C MOVZ W8, 0x25
	0x03622460 CSINV W23, W8, W31, EQ
	0x03622464 CBNZ W11, 0x362246C
	0x03622468 BL 0x1C16DFC
	0x0362246C MOVZ W5, 0x1
	0x03622470 MOVZ W6, 0x3F
	0x03622474 MOVZ W7, 0x23
	0x03622478 MOV X0, X22
	0x0362247C MOV W1, W31
	0x03622480 MOV W2, W21
	0x03622484 MOV X3, X19
	0x03622488 MOV X4, X20
	0x0362248C STR X31, [X31 + 0x8]
	0x03622490 STRH W23, [X31]
	0x03622494 BL 0x362A9E0
	0x03622498 LDR W8, [X20]
	0x0362249C MOV X19, X0
	0x036224A0 STR W8, [X31 + 0x2C]
	0x036224A4 B 0x36224B0
	0x036224A8 LDR X8, [X21 + 0x30]
	0x036224AC TBNZ X8, 0x4, 0x36224BC
	0x036224B0 LDR W8, [X31 + 0x2C]
	0x036224B4 STR W8, [X20]
	0x036224B8 B 0x36225C0
	0x036224BC CMP W22, 0x2
	0x036224C0 B.EQ 0x36224E8
	0x036224C4 MOVZ W9, 0x7FFF
	0x036224C8 CMP W22, W9
	0x036224CC B.NE 0x36224F8
	0x036224D0 ANDS X31, X8, 0xFFFFF
	0x036224D4 MOVZ W9, 0x6
	0x036224D8 MOVZ W10, 0x5
	0x036224DC CINC W9, W9, EQ
	0x036224E0 AND W10, W9, W10, 0x0
	0x036224E4 B 0x3622508
	0x036224E8 ANDS X31, X8, 0x3FFFFFFF
	0x036224EC MOVZ W8, 0xA
	0x036224F0 CSEL W25, W8, W31, EQ
	0x036224F4 B 0x3622510
	0x036224F8 ANDS X31, X8, 0xFFFFF
	0x036224FC MOVZ W9, 0x2
	0x03622500 CINC W9, W9, EQ
	0x03622504 AND W10, W9, 0x1
	0x03622508 ANDS X31, X8, 0x3FFFFFFF
	0x0362250C CSEL W25, W9, W10, EQ
	0x03622510 CBZ X19, 0x3622648
	0x03622514 ADRP X8, 0xADA000
	0x03622518 LDR X8, [X8 + 0x8D8]
	0x0362251C LDR W1, [X19 + 0x18]
	0x03622520 LDR X0, [X8]
	0x03622524 BL 0x1C16D6C
	0x03622528 LDR W8, [X31 + 0x2C]
	0x0362252C MOV X22, X0
	0x03622530 MOV X0, X19
	0x03622534 MOV W1, W31
	0x03622538 UBFM W4, W8, 0x1F, 0x1E
	0x0362253C MOV X2, X22
	0x03622540 MOV W3, W31
	0x03622544 MOV X5, X31
	0x03622548 BL 0x33A8A9C
	0x0362254C CBZ X22, 0x3622564
	0x03622550 LDR W8, [X22 + 0x18]
	0x03622554 CBZ W8, 0x3622560
	0x03622558 ADD X22, X22, 0x20
	0x0362255C B 0x3622564
	0x03622560 MOV X22, X31
	0x03622564 ADRP X8, 0xB19000
	0x03622568 LDR X8, [X8 + 0x58]
	0x0362256C LDR W24, [X20]
	0x03622570 LDR W23, [X31 + 0x2C]
	0x03622574 LDR X21, [X21 + 0x20]
	0x03622578 LDR X0, [X8]
	0x0362257C LDR W8, [X0 + 0xE0]
	0x03622580 CBNZ W8, 0x3622588
	0x03622584 BL 0x1C16DFC
	0x03622588 MOVZ W5, 0x3F
	0x0362258C MOVZ W6, 0x23
	0x03622590 MOVZ W7, 0xFFFF
	0x03622594 MOV X0, X22
	0x03622598 MOV W1, W24
	0x0362259C MOV W2, W23
	0x036225A0 MOV X3, X19
	0x036225A4 MOV X4, X20
	0x036225A8 STR X31, [X31 + 0x18]
	0x036225AC STRB W31, [X31 + 0x10]
	0x036225B0 STR X21, [X31 + 0x8]
	0x036225B4 STR W25, [X31]
	0x036225B8 BL 0x362B2E8
	0x036225BC MOV X19, X0
	0x036225C0 MOV X0, X19
	0x036225C4 LDP X20, X19, [X31 + 0x70]
	0x036225C8 LDP X22, X21, [X31 + 0x60]
	0x036225CC LDP X24, X23, [X31 + 0x50]
	0x036225D0 LDP X26, X25, [X31 + 0x40]
	0x036225D4 LDP X30, X27, [X31 + 0x30]
	0x036225D8 ADD X31, X31, 0x80
	0x036225DC RET
	0x036225E0 MOV X23, X31
	0x036225E4 LDR X0, [X21 + 0x20]
	0x036225E8 CBZ X0, 0x3622648
	0x036225EC LDR W24, [X20]
	0x036225F0 MOVZ W1, 0x400000
	0x036225F4 MOV X2, X31
	0x036225F8 BL 0x3629044
	0x036225FC ADRP X9, 0xAD3000
	0x03622600 LDR X9, [X9 + 0xA28]
	0x03622604 MOV W8, W0
	0x03622608 ANDS W31, W8, 0x1
	0x0362260C MOVZ W8, 0x5C
	0x03622610 LDR X0, [X9]
	0x03622614 CSINV W25, W8, W31, NE
	0x03622618 LDR W9, [X0 + 0xE0]
	0x0362261C CBNZ W9, 0x3622624
	0x03622620 BL 0x1C16DFC
	0x03622624 ADD X2, X31, 0x2C
	0x03622628 MOVZ W3, 0x2E
	0x0362262C MOVZ W4, 0x2F
	0x03622630 MOV X0, X23
	0x03622634 MOV W1, W24
	0x03622638 MOV W5, W25
	0x0362263C BL 0x3623480
	0x03622640 CBNZ W26, 0x36222F0
	0x03622644 B 0x3622324
	0x03622648 BL 0x1C16F20
	0x0362264C BL 0x1C16F28
	0x03622650 STP X30, X23, [X31 - 0x30]!
	0x03622654 STP X22, X21, [X31 + 0x10]
	0x03622658 STP X20, X19, [X31 + 0x20]
	0x0362265C MOV W19, W4
	0x03622660 MOV W20, W3
	0x03622664 MOV X21, X2
	0x03622668 MOV X22, X1
	0x0362266C MOV X23, X0
	0x03622670 CBZ X1, 0x3622680
	0x03622674 MOV X0, X31
	0x03622678 BL 0x32C1424
	0x0362267C ADD X22, X22, W0, SXTW
	0x03622680 MOV X1, X22
	0x03622684 MOV X2, X21
	0x03622688 MOV W3, W20
	0x0362268C MOV W4, W19
	0x03622690 LDP X20, X19, [X31 + 0x20]
	0x03622694 LDP X22, X21, [X31 + 0x10]
	0x03622698 MOV X0, X23
	0x0362269C LDP X30, X23, [X31], #0x30
	0x036226A0 B 0x36233E8
	0x036226A4 STR X30, [X31 - 0x30]!
	0x036226A8 STP X22, X21, [X31 + 0x10]
	0x036226AC STP X20, X19, [X31 + 0x20]
	0x036226B0 MOV W19, W4
	0x036226B4 MOV W20, W3
	0x036226B8 MOV W21, W2
	0x036226BC MOV X22, X1
	0x036226C0 CBZ X1, 0x36226D0
	0x036226C4 MOV X0, X31
	0x036226C8 BL 0x32C1424
	0x036226CC ADD X22, X22, W0, SXTW
	0x036226D0 MOV X0, X22
	0x036226D4 MOV W1, W21
	0x036226D8 MOV W2, W20
	0x036226DC MOV W3, W19
	0x036226E0 LDP X20, X19, [X31 + 0x20]
	0x036226E4 LDP X22, X21, [X31 + 0x10]
	0x036226E8 MOV X4, X31
	0x036226EC LDR X30, [X31], #0x30
	0x036226F0 B 0x3629834
	0x036226F4 STR X30, [X31 - 0x30]!
	0x036226F8 STP X22, X21, [X31 + 0x10]
	0x036226FC STP X20, X19, [X31 + 0x20]
	0x03622700 ADRP X22, 0xDBE000
	0x03622704 LDRB W8, [X22 + 0x495]
	0x03622708 MOV X19, X2
	0x0362270C MOV W21, W1
	0x03622710 MOV X20, X0
	0x03622714 TBNZ X8, 0x0, 0x362272C
	0x03622718 ADRP X0, 0xB19000
	0x0362271C LDR X0, [X0 + 0x48]
	0x03622720 BL 0x1C16CF4
	0x03622724 MOVZ W8, 0x1
	0x03622728 STRB W8, [X22 + 0x495]
	0x0362272C LDR X8, [X20]
	0x03622730 AND W9, W21, 0xFFFF
	0x03622734 CMP W9, 0x2
	0x03622738 B.NE 0x3622784
	0x0362273C ORR W9, W31, 0xFFDFFFDF
	0x03622740 AND X8, X8, X9, 0x0
	0x03622744 MOVZ W9, 0x57
	0x03622748 MOVK W9, 0x530000
	0x0362274C CMP X8, X9
	0x03622750 B.NE 0x3622C5C
	0x03622754 ADRP X20, 0xB19000
	0x03622758 LDR X20, [X20 + 0x48]
	0x0362275C LDR X0, [X20]
	0x03622760 LDR W8, [X0 + 0xE0]
	0x03622764 CBNZ W8, 0x3622770
	0x03622768 BL 0x1C16DFC
	0x0362276C LDR X0, [X20]
	0x03622770 LDR X8, [X0 + 0xB8]
	0x03622774 LDR X8, [X8 + 0x20]
	0x03622778 MOVZ W0, 0x1
	0x0362277C STR X8, [X19]
	0x03622780 B 0x3622C60
	0x03622784 MOVZ X9, 0x67
	0x03622788 MOVK X9, 0x6F0000
	0x0362278C MOVK X9, 0x70
	0x03622790 ORR X8, X8, 0x20002000200020
	0x03622794 MOVK X9, 0x680000
	0x03622798 CMP X8, X9
	0x0362279C B.LE 0x362283C
	0x036227A0 MOVZ X9, 0x6C
	0x036227A4 MOVK X9, 0x640000
	0x036227A8 MOVK X9, 0x61
	0x036227AC MOVK X9, 0x700000
	0x036227B0 CMP X8, X9
	0x036227B4 B.LE 0x36228E8
	0x036227B8 MOVZ X9, 0x6E
	0x036227BC MOVK X9, 0x6E0000
	0x036227C0 MOVK X9, 0x74
	0x036227C4 MOVK X9, 0x700000
	0x036227C8 CMP X8, X9
	0x036227CC B.EQ 0x3622ACC
	0x036227D0 MOVZ X9, 0x6E
	0x036227D4 MOVK X9, 0x650000
	0x036227D8 MOVK X9, 0x77
	0x036227DC MOVK X9, 0x730000
	0x036227E0 CMP X8, X9
	0x036227E4 B.EQ 0x36229E0
	0x036227E8 MOVZ X9, 0x68
	0x036227EC MOVK X9, 0x740000
	0x036227F0 MOVK X9, 0x74
	0x036227F4 MOVK X9, 0x700000
	0x036227F8 CMP X8, X9
	0x036227FC B.NE 0x3622C5C
	0x03622800 AND W8, W21, 0xFFFF
	0x03622804 CMP W8, 0x5
	0x03622808 B.EQ 0x3622BDC
	0x0362280C CMP W8, 0x4
	0x03622810 B.NE 0x3622C5C
	0x03622814 ADRP X20, 0xB19000
	0x03622818 LDR X20, [X20 + 0x48]
	0x0362281C LDR X0, [X20]
	0x03622820 LDR W8, [X0 + 0xE0]
	0x03622824 CBNZ W8, 0x3622830
	0x03622828 BL 0x1C16DFC
	0x0362282C LDR X0, [X20]
	0x03622830 LDR X8, [X0 + 0xB8]
	0x03622834 LDR X8, [X8 + 0x10]
	0x03622838 B 0x3622778
	0x0362283C MOVZ X9, 0x77
	0x03622840 MOVK X9, 0x730000
	0x03622844 MOVK X9, 0x73
	0x03622848 MOVK X9, 0x3A0000
	0x0362284C CMP X8, X9
	0x03622850 B.LE 0x3622964
	0x03622854 MOVZ X9, 0x75
	0x03622858 MOVK X9, 0x750000
	0x0362285C MOVK X9, 0x69
	0x03622860 MOVK X9, 0x640000
	0x03622864 CMP X8, X9
	0x03622868 B.EQ 0x3622B00
	0x0362286C MOVZ X9, 0x66
	0x03622870 MOVK X9, 0x690000
	0x03622874 MOVK X9, 0x6C
	0x03622878 MOVK X9, 0x650000
	0x0362287C CMP X8, X9
	0x03622880 B.EQ 0x3622A14
	0x03622884 MOVZ X9, 0x67
	0x03622888 MOVK X9, 0x6F0000
	0x0362288C MOVK X9, 0x70
	0x03622890 MOVK X9, 0x680000
	0x03622894 CMP X8, X9
	0x03622898 B.NE 0x3622C5C
	0x0362289C AND W8, W21, 0xFFFF
	0x036228A0 CMP W8, 0x6
	0x036228A4 B.NE 0x3622C5C
	0x036228A8 LDR W8, [X20 + 0x8]
	0x036228AC MOVZ W9, 0x45
	0x036228B0 MOVK W9, 0x520000
	0x036228B4 AND W8, W8, 0xFFDFFFDF
	0x036228B8 CMP W8, W9
	0x036228BC B.NE 0x3622C5C
	0x036228C0 ADRP X20, 0xB19000
	0x036228C4 LDR X20, [X20 + 0x48]
	0x036228C8 LDR X0, [X20]
	0x036228CC LDR W8, [X0 + 0xE0]
	0x036228D0 CBNZ W8, 0x36228DC
	0x036228D4 BL 0x1C16DFC
	0x036228D8 LDR X0, [X20]
	0x036228DC LDR X8, [X0 + 0xB8]
	0x036228E0 LDR X8, [X8 + 0x40]
	0x036228E4 B 0x3622778
	0x036228E8 MOVZ X9, 0x6D
	0x036228EC MOVK X9, 0x610000
	0x036228F0 MOVK X9, 0x69
	0x036228F4 MOVK X9, 0x6C0000
	0x036228F8 CMP X8, X9
	0x036228FC B.EQ 0x3622B34
	0x03622900 MOVZ X9, 0x74
	0x03622904 MOVK X9, 0x650000
	0x03622908 MOVK X9, 0x6C
	0x0362290C MOVK X9, 0x6E0000
	0x03622910 CMP X8, X9
	0x03622914 B.EQ 0x3622A48
	0x03622918 MOVZ X9, 0x6C
	0x0362291C MOVK X9, 0x640000
	0x03622920 MOVK X9, 0x61
	0x03622924 MOVK X9, 0x700000
	0x03622928 CMP X8, X9
	0x0362292C B.NE 0x3622C5C
	0x03622930 AND W8, W21, 0xFFFF
	0x03622934 CMP W8, 0x4
	0x03622938 B.NE 0x3622C5C
	0x0362293C ADRP X20, 0xB19000
	0x03622940 LDR X20, [X20 + 0x48]
	0x03622944 LDR X0, [X20]
	0x03622948 LDR W8, [X0 + 0xE0]
	0x0362294C CBNZ W8, 0x3622958
	0x03622950 BL 0x1C16DFC
	0x03622954 LDR X0, [X20]
	0x03622958 LDR X8, [X0 + 0xB8]
	0x0362295C LDR X8, [X8 + 0x70]
	0x03622960 B 0x3622778
	0x03622964 MOVZ X9, 0x6E
	0x03622968 MOVK X9, 0x650000
	0x0362296C MOVK X9, 0x74
	0x03622970 MOVK X9, 0x2E0000
	0x03622974 CMP X8, X9
	0x03622978 B.EQ 0x3622B80
	0x0362297C MOVZ X9, 0x66
	0x03622980 MOVK X9, 0x740000
	0x03622984 MOVK X9, 0x70
	0x03622988 MOVK X9, 0x3A0000
	0x0362298C CMP X8, X9
	0x03622990 B.EQ 0x3622A98
	0x03622994 MOVZ X9, 0x77
	0x03622998 MOVK X9, 0x730000
	0x0362299C MOVK X9, 0x73
	0x036229A0 MOVK X9, 0x3A0000
	0x036229A4 CMP X8, X9
	0x036229A8 B.NE 0x3622C5C
	0x036229AC AND W8, W21, 0xFFFF
	0x036229B0 CMP W8, 0x3
	0x036229B4 B.NE 0x3622C5C
	0x036229B8 ADRP X20, 0xB19000
	0x036229BC LDR X20, [X20 + 0x48]
	0x036229C0 LDR X0, [X20]
	0x036229C4 LDR W8, [X0 + 0xE0]
	0x036229C8 CBNZ W8, 0x36229D4
	0x036229CC BL 0x1C16DFC
	0x036229D0 LDR X0, [X20]
	0x036229D4 LDR X8, [X0 + 0xB8]
	0x036229D8 LDR X8, [X8 + 0x28]
	0x036229DC B 0x3622778
	0x036229E0 AND W8, W21, 0xFFFF
	0x036229E4 CMP W8, 0x4
	0x036229E8 B.NE 0x3622C5C
	0x036229EC ADRP X20, 0xB19000
	0x036229F0 LDR X20, [X20 + 0x48]
	0x036229F4 LDR X0, [X20]
	0x036229F8 LDR W8, [X0 + 0xE0]
	0x036229FC CBNZ W8, 0x3622A08
	0x03622A00 BL 0x1C16DFC
	0x03622A04 LDR X0, [X20]
	0x03622A08 LDR X8, [X0 + 0xB8]
	0x03622A0C LDR X8, [X8 + 0x50]
	0x03622A10 B 0x3622778
	0x03622A14 AND W8, W21, 0xFFFF
	0x03622A18 CMP W8, 0x4
	0x03622A1C B.NE 0x3622C5C
	0x03622A20 ADRP X20, 0xB19000
	0x03622A24 LDR X20, [X20 + 0x48]
	0x03622A28 LDR X0, [X20]
	0x03622A2C LDR W8, [X0 + 0xE0]
	0x03622A30 CBNZ W8, 0x3622A3C
	0x03622A34 BL 0x1C16DFC
	0x03622A38 LDR X0, [X20]
	0x03622A3C LDR X8, [X0 + 0xB8]
	0x03622A40 LDR X8, [X8 + 0x38]
	0x03622A44 B 0x3622778
	0x03622A48 AND W8, W21, 0xFFFF
	0x03622A4C CMP W8, 0x6
	0x03622A50 B.NE 0x3622C5C
	0x03622A54 LDR W8, [X20 + 0x8]
	0x03622A58 MOVZ W9, 0x45
	0x03622A5C MOVK W9, 0x520000
	0x03622A60 ADD W9, W9, 0x20000
	0x03622A64 AND W8, W8, 0xFFDFFFDF
	0x03622A68 CMP W8, W9
	0x03622A6C B.NE 0x3622C5C
	0x03622A70 ADRP X20, 0xB19000
	0x03622A74 LDR X20, [X20 + 0x48]
	0x03622A78 LDR X0, [X20]
	0x03622A7C LDR W8, [X0 + 0xE0]
	0x03622A80 CBNZ W8, 0x3622A8C
	0x03622A84 BL 0x1C16DFC
	0x03622A88 LDR X0, [X20]
	0x03622A8C LDR X8, [X0 + 0xB8]
	0x03622A90 LDR X8, [X8 + 0x68]
	0x03622A94 B 0x3622778
	0x03622A98 AND W8, W21, 0xFFFF
	0x03622A9C CMP W8, 0x3
	0x03622AA0 B.NE 0x3622C5C
	0x03622AA4 ADRP X20, 0xB19000
	0x03622AA8 LDR X20, [X20 + 0x48]
	0x03622AAC LDR X0, [X20]
	0x03622AB0 LDR W8, [X0 + 0xE0]
	0x03622AB4 CBNZ W8, 0x3622AC0
	0x03622AB8 BL 0x1C16DFC
	0x03622ABC LDR X0, [X20]
	0x03622AC0 LDR X8, [X0 + 0xB8]
	0x03622AC4 LDR X8, [X8 + 0x30]
	0x03622AC8 B 0x3622778
	0x03622ACC AND W8, W21, 0xFFFF
	0x03622AD0 CMP W8, 0x4
	0x03622AD4 B.NE 0x3622C5C
	0x03622AD8 ADRP X20, 0xB19000
	0x03622ADC LDR X20, [X20 + 0x48]
	0x03622AE0 LDR X0, [X20]
	0x03622AE4 LDR W8, [X0 + 0xE0]
	0x03622AE8 CBNZ W8, 0x3622AF4
	0x03622AEC BL 0x1C16DFC
	0x03622AF0 LDR X0, [X20]
	0x03622AF4 LDR X8, [X0 + 0xB8]
	0x03622AF8 LDR X8, [X8 + 0x48]
	0x03622AFC B 0x3622778
	0x03622B00 AND W8, W21, 0xFFFF
	0x03622B04 CMP W8, 0x4
	0x03622B08 B.NE 0x3622C5C
	0x03622B0C ADRP X20, 0xB19000
	0x03622B10 LDR X20, [X20 + 0x48]
	0x03622B14 LDR X0, [X20]
	0x03622B18 LDR W8, [X0 + 0xE0]
	0x03622B1C CBNZ W8, 0x3622B28
	0x03622B20 BL 0x1C16DFC
	0x03622B24 LDR X0, [X20]
	0x03622B28 LDR X8, [X0 + 0xB8]
	0x03622B2C LDR X8, [X8 + 0x60]
	0x03622B30 B 0x3622778
	0x03622B34 AND W8, W21, 0xFFFF
	0x03622B38 CMP W8, 0x6
	0x03622B3C B.NE 0x3622C5C
	0x03622B40 LDR W8, [X20 + 0x8]
	0x03622B44 MOVZ W9, 0x54
	0x03622B48 MOVK W9, 0x4F0000
	0x03622B4C AND W8, W8, 0xFFDFFFDF
	0x03622B50 CMP W8, W9
	0x03622B54 B.NE 0x3622C5C
	0x03622B58 ADRP X20, 0xB19000
	0x03622B5C LDR X20, [X20 + 0x48]
	0x03622B60 LDR X0, [X20]
	0x03622B64 LDR W8, [X0 + 0xE0]
	0x03622B68 CBNZ W8, 0x3622B74
	0x03622B6C BL 0x1C16DFC
	0x03622B70 LDR X0, [X20]
	0x03622B74 LDR X8, [X0 + 0xB8]
	0x03622B78 LDR X8, [X8 + 0x58]
	0x03622B7C B 0x3622778
	0x03622B80 AND W8, W21, 0xFFFF
	0x03622B84 CMP W8, 0x7
	0x03622B88 B.EQ 0x3622C14
	0x03622B8C CMP W8, 0x8
	0x03622B90 B.NE 0x3622C5C
	0x03622B94 LDR X8, [X20 + 0x8]
	0x03622B98 MOVZ X9, 0x50
	0x03622B9C MOVK X9, 0x490000
	0x03622BA0 MOVK X9, 0x50
	0x03622BA4 AND X8, X8, 0xFFDFFFDFFFDFFFDF
	0x03622BA8 MOVK X9, 0x450000
	0x03622BAC CMP X8, X9
	0x03622BB0 B.NE 0x3622C5C
	0x03622BB4 ADRP X20, 0xB19000
	0x03622BB8 LDR X20, [X20 + 0x48]
	0x03622BBC LDR X0, [X20]
	0x03622BC0 LDR W8, [X0 + 0xE0]
	0x03622BC4 CBNZ W8, 0x3622BD0
	0x03622BC8 BL 0x1C16DFC
	0x03622BCC LDR X0, [X20]
	0x03622BD0 LDR X8, [X0 + 0xB8]
	0x03622BD4 LDR X8, [X8 + 0x80]
	0x03622BD8 B 0x3622778
	0x03622BDC LDRH W8, [X20 + 0x8]
	0x03622BE0 AND W8, W8, 0xFFFFFFDF
	0x03622BE4 CMP W8, 0x53
	0x03622BE8 B.NE 0x3622C5C
	0x03622BEC ADRP X20, 0xB19000
	0x03622BF0 LDR X20, [X20 + 0x48]
	0x03622BF4 LDR X0, [X20]
	0x03622BF8 LDR W8, [X0 + 0xE0]
	0x03622BFC CBNZ W8, 0x3622C08
	0x03622C00 BL 0x1C16DFC
	0x03622C04 LDR X0, [X20]
	0x03622C08 LDR X8, [X0 + 0xB8]
	0x03622C0C LDR X8, [X8 + 0x18]
	0x03622C10 B 0x3622778
	0x03622C14 LDR X8, [X20 + 0x8]
	0x03622C18 MOVZ X9, 0x54
	0x03622C1C MOVK X9, 0x430000
	0x03622C20 MOVK X9, 0x50
	0x03622C24 AND X8, X8, 0xFFDFFFDFFFDFFFDF
	0x03622C28 MOVK X9, 0x1A0000
	0x03622C2C CMP X8, X9
	0x03622C30 B.NE 0x3622C5C
	0x03622C34 ADRP X20, 0xB19000
	0x03622C38 LDR X20, [X20 + 0x48]
	0x03622C3C LDR X0, [X20]
	0x03622C40 LDR W8, [X0 + 0xE0]
	0x03622C44 CBNZ W8, 0x3622C50
	0x03622C48 BL 0x1C16DFC
	0x03622C4C LDR X0, [X20]
	0x03622C50 LDR X8, [X0 + 0xB8]
	0x03622C54 LDR X8, [X8 + 0x78]
	0x03622C58 B 0x3622778
	0x03622C5C MOV W0, W31
	0x03622C60 LDP X20, X19, [X31 + 0x20]
	0x03622C64 LDP X22, X21, [X31 + 0x10]
	0x03622C68 LDR X30, [X31], #0x30
	0x03622C6C RET
	0x03622C70 SUB X31, X31, 0x80
	0x03622C74 STP X29, X30, [X31 + 0x20]
	0x03622C78 STP X28, X27, [X31 + 0x30]
	0x03622C7C STP X26, X25, [X31 + 0x40]
	0x03622C80 STP X24, X23, [X31 + 0x50]
	0x03622C84 STP X22, X21, [X31 + 0x60]
	0x03622C88 STP X20, X19, [X31 + 0x70]
	0x03622C8C STR W5, [X31 + 0xC]
	0x03622C90 ADRP X29, 0xDBE000
	0x03622C94 ADRP X28, 0xAD3000
	0x03622C98 LDRB W8, [X29 + 0x498]
	0x03622C9C LDR X27, [X31 + 0x88]
	0x03622CA0 LDR X28, [X28 + 0xA28]
	0x03622CA4 MOV X26, X7
	0x03622CA8 MOV W20, W6
	0x03622CAC MOV W22, W4
	0x03622CB0 MOV W23, W3
	0x03622CB4 MOV W24, W2
	0x03622CB8 MOV X25, X1
	0x03622CBC MOV X21, X0
	0x03622CC0 TBNZ X8, 0x0, 0x3622CD8
	0x03622CC4 ADRP X0, 0xAD3000
	0x03622CC8 LDR X0, [X0 + 0xA28]
	0x03622CCC BL 0x1C16CF4
	0x03622CD0 MOVZ W8, 0x1
	0x03622CD4 STRB W8, [X29 + 0x498]
	0x03622CD8 STRB W31, [X31 + 0x1C]
	0x03622CDC STRB W31, [X31 + 0x18]
	0x03622CE0 LDR X8, [X27]
	0x03622CE4 ORR X8, X8, 0x3FFFF
	0x03622CE8 STR X8, [X27]
	0x03622CEC LDR X0, [X28]
	0x03622CF0 LDR W8, [X0 + 0xE0]
	0x03622CF4 CBNZ W8, 0x3622D00
	0x03622CF8 BL 0x1C16DFC
	0x03622CFC LDR X0, [X28]
	0x03622D00 LDR X8, [X0 + 0xB8]
	0x03622D04 LDP X9, X29, [X31 + 0x90]
	0x03622D08 LDR W19, [X8 + 0x6C]
	0x03622D0C STR X9, [X31 + 0x10]
	0x03622D10 BL 0x1C16D44
	0x03622D14 CMP W19, 0x1
	0x03622D18 B.NE 0x3622D34
	0x03622D1C MOV X0, X31
	0x03622D20 MOV X1, X25
	0x03622D24 MOV W2, W31
	0x03622D28 MOV W3, W23
	0x03622D2C MOV X4, X31
	0x03622D30 BL 0x322EAD4
	0x03622D34 LDR X2, [X27]
	0x03622D38 MOV X1, X26
	0x03622D3C BL 0x3617F34
	0x03622D40 TBZ X0, 0x0, 0x3622DD8
	0x03622D44 AND W26, W24, 0xFFFF
	0x03622D48 MOVZ W8, 0x1
	0x03622D4C ADD X3, X31, 0x1C
	0x03622D50 ADD X4, X31, 0x18
	0x03622D54 MOV X0, X25
	0x03622D58 MOV W1, W26
	0x03622D5C MOV W2, W23
	0x03622D60 MOV X5, X31
	0x03622D64 STRB W31, [X31 + 0x18]
	0x03622D68 STRB W8, [X31 + 0x1C]
	0x03622D6C BL 0x362D4C4
	0x03622D70 MOV X1, X25
	0x03622D74 MOV W2, W26
	0x03622D78 MOV W3, W23
	0x03622D7C MOV X4, X31
	0x03622D80 MOV X24, X0
	0x03622D84 BL 0x362DA28
	0x03622D88 LDRB W8, [X31 + 0x1C]
	0x03622D8C MOV X23, X0
	0x03622D90 CBNZ W8, 0x3622DA0
	0x03622D94 LDR X9, [X27]
	0x03622D98 ORR X9, X9, 0x1FFFFFFFFF
	0x03622D9C STR X9, [X27]
	0x03622DA0 LDRB W9, [X31 + 0x18]
	0x03622DA4 CBZ W9, 0x3622DB4
	0x03622DA8 LDR X10, [X27]
	0x03622DAC ORR X10, X10, 0x1FFFFFFFF
	0x03622DB0 STR X10, [X27]
	0x03622DB4 LDR X25, [X31 + 0x80]
	0x03622DB8 ANDS W31, W9, W8, 0x0
	0x03622DBC B.EQ 0x3622E20
	0x03622DC0 LDR X0, [X28]
	0x03622DC4 LDR X26, [X27]
	0x03622DC8 LDR W8, [X0 + 0xE0]
	0x03622DCC CBZ W8, 0x3622E18
	0x03622DD0 TBNZ X26, 0x0, 0x3622E20
	0x03622DD4 B 0x3622E74
	0x03622DD8 TBZ X20, 0x0, 0x3622F14
	0x03622DDC LDR X0, [X28]
	0x03622DE0 LDR W8, [X0 + 0xE0]
	0x03622DE4 CBNZ W8, 0x3622DEC
	0x03622DE8 BL 0x1C16DFC
	0x03622DEC AND W1, W24, 0xFFFF
	0x03622DF0 SUB W2, W23, W24, UXTH
	0x03622DF4 MOV X0, X25
	0x03622DF8 BL 0x3623288
	0x03622DFC LDR X19, [X29]
	0x03622E00 CBZ X0, 0x3622E40
	0x03622E04 MOVZ W1, 0x1
	0x03622E08 MOV X2, X31
	0x03622E0C BL 0x322E3D0
	0x03622E10 MOV X1, X0
	0x03622E14 B 0x3622E44
	0x03622E18 BL 0x1C16DFC
	0x03622E1C TBZ X26, 0x0, 0x3622E74
	0x03622E20 LDR W8, [X31 + 0xC]
	0x03622E24 TBNZ X8, 0x0, 0x3622ED0
	0x03622E28 LDR X0, [X28]
	0x03622E2C LDR X26, [X27]
	0x03622E30 LDR W8, [X0 + 0xE0]
	0x03622E34 CBZ W8, 0x3622E54
	0x03622E38 TBZ X26, 0x0, 0x3622E5C
	0x03622E3C B 0x3622E74
	0x03622E40 MOV X1, X31
	0x03622E44 MOV X0, X19
	0x03622E48 MOV X2, X31
	0x03622E4C BL 0x321B938
	0x03622E50 B 0x3622F04
	0x03622E54 BL 0x1C16DFC
	0x03622E58 TBNZ X26, 0x0, 0x3622E74
	0x03622E5C LDR X0, [X28]
	0x03622E60 LDR X26, [X27]
	0x03622E64 LDR W8, [X0 + 0xE0]
	0x03622E68 CBNZ W8, 0x3622E70
	0x03622E6C BL 0x1C16DFC
	0x03622E70 TBZ X26, 0x0, 0x3622ED0
	0x03622E74 LDR X0, [X21 + 0x10]
	0x03622E78 STR X0, [X21 + 0x18]
	0x03622E7C CBZ X0, 0x3622F40
	0x03622E80 MOV W1, W31
	0x03622E84 MOV W2, W22
	0x03622E88 MOV X3, X31
	0x03622E8C BL 0x3228DE4
	0x03622E90 LDR X8, [X28]
	0x03622E94 LDR X26, [X27]
	0x03622E98 MOV X22, X0
	0x03622E9C LDR W9, [X8 + 0xE0]
	0x03622EA0 CBNZ W9, 0x3622EAC
	0x03622EA4 MOV X0, X8
	0x03622EA8 BL 0x1C16DFC
	0x03622EAC UBFM X8, X26, 0x16, 0x15
	0x03622EB0 AND X1, X25, X8, 0x3F
	0x03622EB4 MOV X0, X22
	0x03622EB8 MOV X2, X31
	0x03622EBC BL 0x321B938
	0x03622EC0 LDR X9, [X31 + 0x10]
	0x03622EC4 MOVZ W8, 0x1
	0x03622EC8 STR X0, [X29]
	0x03622ECC STRB W8, [X9]
	0x03622ED0 LDRB W8, [X31 + 0x1C]
	0x03622ED4 CBZ W8, 0x3622EF0
	0x03622ED8 LDRB W8, [X31 + 0x18]
	0x03622EDC CBNZ W8, 0x3622EF0
	0x03622EE0 TBZ X20, 0x0, 0x3622F14
	0x03622EE4 LDR W8, [X31 + 0xC]
	0x03622EE8 TBNZ X8, 0x0, 0x3622EF4
	0x03622EEC B 0x3622F14
	0x03622EF0 STR X24, [X21 + 0x28]
	0x03622EF4 LDR X0, [X29]
	0x03622EF8 MOV X1, X23
	0x03622EFC MOV X2, X31
	0x03622F00 BL 0x321B938
	0x03622F04 STR X0, [X29]
	0x03622F08 LDR X9, [X31 + 0x10]
	0x03622F0C MOVZ W8, 0x1
	0x03622F10 STRB W8, [X9]
	0x03622F14 LDR X8, [X27]
	0x03622F18 LDP X20, X19, [X31 + 0x70]
	0x03622F1C LDP X22, X21, [X31 + 0x60]
	0x03622F20 LDP X24, X23, [X31 + 0x50]
	0x03622F24 ORR X8, X8, 0x7FFFFFFFF
	0x03622F28 STR X8, [X27]
	0x03622F2C LDP X26, X25, [X31 + 0x40]
	0x03622F30 LDP X28, X27, [X31 + 0x30]
	0x03622F34 LDP X29, X30, [X31 + 0x20]
	0x03622F38 ADD X31, X31, 0x80
	0x03622F3C RET
	0x03622F40 BL 0x1C16F20
	0x03622F44 B 0x3622F48
	0x03622F48 MOV X19, X0
	0x03622F4C CMP W1, 0x1
	0x03622F50 B.NE 0x3622FB8
	0x03622F54 MOV X0, X19
	0x03622F58 BL 0x3EB1AD0
	0x03622F5C MOV X19, X0
	0x03622F60 ADRP X0, 0xAD9000
	0x03622F64 LDR X0, [X0 + 0x578]
	0x03622F68 BL 0x1C16D08
	0x03622F6C LDR X8, [X19]
	0x03622F70 LDR X1, [X8]
	0x03622F74 BL 0x1C17270
	0x03622F78 TBZ X0, 0x0, 0x3622F90
	0x03622F7C LDR X19, [X31 + 0xA0]
	0x03622F80 BL 0x3EB1AE0
	0x03622F84 MOVZ W8, 0x8
	0x03622F88 STR W8, [X19]
	0x03622F8C B 0x3622F08
	0x03622F90 MOVZ W0, 0x8
	0x03622F94 BL 0x3EB1AF0
	0x03622F98 LDR X8, [X19]
	0x03622F9C STR X8, [X0]
	0x03622FA0 ADRP X1, 0x892000
	0x03622FA4 ADD X1, X1, 0xE58
	0x03622FA8 MOV X2, X31
	0x03622FAC BL 0x3EB1B00
	0x03622FB0 MOV X19, X0
	0x03622FB4 BL 0x3EB1AE0
	0x03622FB8 MOV X0, X19
	0x03622FBC BL 0x1D2C690
	0x03622FC0 BL 0x1990590
	0x03622FC4 SUB X31, X31, 0x70
	0x03622FC8 STR X30, [X31 + 0x10]
	0x03622FCC STP X28, X27, [X31 + 0x20]
	0x03622FD0 STP X26, X25, [X31 + 0x30]
	0x03622FD4 STP X24, X23, [X31 + 0x40]
	0x03622FD8 STP X22, X21, [X31 + 0x50]
	0x03622FDC STP X20, X19, [X31 + 0x60]

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+48], X29
	003 Move [X31+56], X30
	004 Move [X31+64], X28
	005 Move [X31+72], X27
	006 Move [X31+80], X26
	007 Move [X31+88], X25
	008 Move [X31+96], X24
	009 Move [X31+104], X23
	010 Move [X31+112], X22
	011 Move [X31+120], X21
	012 Move [X31+128], X20
	013 Move [X31+136], X19
	014 Move X19, 0xDBF000
	015 Move W8, [X19+1169]
	016 Move W21, W3
	017 Move W22, W2
	018 Move W23, W1
	019 Move X20, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {41}
	024 Move X0, 0xADB000
	025 Move X0, [X0+2264]
	026 Call 0x1C17CF4
	027 Move X0, 0xAD4000
	028 Move X0, [X0+3144]
	029 Call 0x1C17CF4
	030 Move X0, 0xAD4000
	031 Move X0, [X0+632]
	032 Call 0x1C17CF4
	033 Move X0, 0xB1A000
	034 Move X0, [X0+88]
	035 Call 0x1C17CF4
	036 Move X0, 0xB1A000
	037 Move X0, [X0+72]
	038 Call 0x1C17CF4
	039 Move W8, 1
	040 Move [X19+1169], W8
	041 Move X28, 0xAD4000
	042 Move X28, [X28+632]
	043 Move X0, X20
	044 Move W1, W31
	045 Move [X31+40], W31
	046 Move [X31+36], W31
	047 Call Uri.EnsureHostString, X0, X1
	048 Move TEMP, X23
	049 And TEMP, TEMP, 4
	050 Compare TEMP, 4
	051 JumpIfEqual {57}
	052 Move X8, [X20+56]
	053 Compare X8, 0
	054 JumpIfEqual {883}
	055 Move X9, [X28]
	056 Move X9, [X9+184]
	057 Move X8, [X20+56]
	058 Compare X8, 0
	059 JumpIfEqual {883}
	060 Add X9, X8, 16
	061 Move X24, [X9]
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Move W9, 12
	064 NotImplemented "Instruction CSINC not yet implemented."
	065 Compare X24, 0
	066 JumpIfEqual {883}
	067 Move X10, [X20+32]
	068 Compare X10, 0
	069 JumpIfEqual {883}
	070 Move X10, [X10+32]
	071 Compare X10, 0
	072 JumpIfEqual {883}
	073 NotImplemented "Instruction LDRH not yet implemented."
	074 NotImplemented "Instruction LDRH not yet implemented."
	075 Move X12, 0xADB000
	076 Move X12, [X12+2264]
	077 Move W13, [X24+16]
	078 Move W10, [X10+16]
	079 Subtract W8, W11, W8
	080 Multiply W8, W8, W9
	081 Move X0, [X12]
	082 Add W8, W8, W13
	083 Add W8, W8, W10
	084 Add W1, W8, 4
	085 Call 0x1C17D6C
	086 Move X19, X0
	087 Move W25, W31
	088 Move [X31+44], W31
	089 Move TEMP, X23
	090 And TEMP, TEMP, 1
	091 Compare TEMP, 1
	092 JumpIfEqual {133}
	093 Move TEMP, X23
	094 And TEMP, TEMP, 2
	095 Compare TEMP, 2
	096 JumpIfNotEqual {313}
	097 Move X8, [X20+48]
	098 Move TEMP, X8
	099 And TEMP, TEMP, 0x200000
	100 Compare TEMP, 0x200000
	101 JumpIfNotEqual {313}
	102 Move TEMP, X22
	103 And TEMP, TEMP, 2
	104 Compare TEMP, 2
	105 JumpIfEqual {178}
	106 Move X8, [X20+56]
	107 Compare X8, 0
	108 JumpIfEqual {883}
	109 Move X9, 0xB1A000
	110 Move X9, [X9+88]
	111 Move X25, [X20+16]
	112 NotImplemented "Instruction LDRH not yet implemented."
	113 NotImplemented "Instruction LDRH not yet implemented."
	114 Move X0, [X9]
	115 Move X29, [X20+32]
	116 Move W8, [X0+224]
	117 Compare W8, 0
	118 JumpIfNotEqual {120}
	119 Call 0x1C17DFC
	120 Add X4, X31, 44
	121 Move W5, 0xFFFF
	122 Move W6, 0xFFFF
	123 Move W7, 0xFFFF
	124 Move X0, X25
	125 Move W1, W26
	126 Move W2, W27
	127 Move X3, X19
	128 Move [X31+24], X31
	129 Move [X31+16], W31
	130 Move [X31+8], X29
	131 Move [X31], W31
	132 Call UriHelper.UnescapeString, X0, X1, X2, X3, X4, X5, X6, X7, X8, X9, X10
	133 Move X8, [X20+32]
	134 Compare X8, 0
	135 JumpIfEqual {883}
	136 Move X0, [X8+32]
	137 Compare X0, 0
	138 JumpIfEqual {883}
	139 Move W4, [X0+16]
	140 Move W1, W31
	141 Move X2, X19
	142 Move W3, W31
	143 Move X5, X31
	144 Call String.CopyTo, X0, X1, X2, X3, X4
	145 Move X8, [X20+32]
	146 Compare X8, 0
	147 JumpIfEqual {883}
	148 Move X8, [X8+32]
	149 Compare X8, 0
	150 JumpIfEqual {883}
	151 NotImplemented "Instruction LDRSW not yet implemented."
	152 NotImplemented "Instruction CMP not yet implemented."
	153 Move [X31+44], W8
	154 Add W25, W8, 1
	155 Move [X31+44], W25
	156 Compare X19, 0
	157 JumpIfEqual {883}
	158 Move W9, [X19+24]
	159 NotImplemented "Instruction CMP not yet implemented."
	160 Add X10, X19, X8
	161 Move W11, 58
	162 NotImplemented "Instruction STRH not yet implemented."
	163 Move W10, [X20+50]
	164 Move TEMP, X10
	165 And TEMP, TEMP, 16
	166 Compare TEMP, 16
	167 JumpIfNotEqual {93}
	168 NotImplemented "Instruction CMP not yet implemented."
	169 Add W10, W8, 2
	170 Add X12, X19, W25
	171 Move W11, 47
	172 Add W25, W8, 3
	173 NotImplemented "Instruction CMP not yet implemented."
	174 NotImplemented "Instruction STRH not yet implemented."
	175 Move [X31+44], W25
	176 Add X8, X19, W10
	177 NotImplemented "Instruction STRH not yet implemented."
	178 NotImplemented "Instruction CMP not yet implemented."
	179 NotImplemented "Instruction CMP not yet implemented."
	180 NotImplemented "Instruction CMP not yet implemented."
	181 Move X26, [X20+16]
	182 Move X9, [X20+56]
	183 Move TEMP, X8
	184 And TEMP, TEMP, 0x80000
	185 Compare TEMP, 0x80000
	186 JumpIfEqual {863}
	187 Compare X9, 0
	188 JumpIfEqual {883}
	189 Move X8, 0xB1A000
	190 Move X8, [X8+88]
	191 NotImplemented "Instruction LDRH not yet implemented."
	192 NotImplemented "Instruction LDRH not yet implemented."
	193 Move X0, [X8]
	194 Move W8, [X0+224]
	195 Compare W8, 0
	196 JumpIfNotEqual {198}
	197 Call 0x1C17DFC
	198 Move W8, 37
	199 Add X4, X31, 44
	200 Move W5, 1
	201 Move W6, 63
	202 Move W7, 35
	203 Move X0, X26
	204 Move W1, W25
	205 Move W2, W27
	206 Move X3, X19
	207 Move [X31+8], X31
	208 NotImplemented "Instruction STRH not yet implemented."
	209 Call UriHelper.EscapeString, X0, X1, X2, X3, X4, X5, X6, X7, X8
	210 Move X19, X0
	211 Move X8, [X20+56]
	212 Compare X8, 0
	213 JumpIfEqual {883}
	214 Move X9, 0xB1A000
	215 Move X9, [X9+88]
	216 Move X29, X28
	217 Move X25, [X20+16]
	218 NotImplemented "Instruction LDRH not yet implemented."
	219 Move X0, [X9]
	220 NotImplemented "Instruction LDRH not yet implemented."
	221 Move X28, [X20+32]
	222 Move W8, [X0+224]
	223 Compare W8, 0
	224 JumpIfNotEqual {226}
	225 Call 0x1C17DFC
	226 Move W8, 10
	227 Move [X31+24], X31
	228 Move [X31+16], W31
	229 Move [X31+8], X28
	230 Add X4, X31, 44
	231 Move W5, 0xFFFF
	232 Move W6, 0xFFFF
	233 Move W7, 0xFFFF
	234 Move [X31], W8
	235 Move X9, [X20+56]
	236 Compare X9, 0
	237 JumpIfEqual {883}
	238 Move X11, 0xB1A000
	239 NotImplemented "Instruction LDRH not yet implemented."
	240 Move X11, [X11+88]
	241 Move X25, [X20+16]
	242 NotImplemented "Instruction LDRH not yet implemented."
	243 Move X28, [X20+32]
	244 Move X0, [X11]
	245 And X31, X8, 0xFFFFF
	246 Move W8, 2
	247 Subtract W27, W10, 1
	248 Move W9, [X0+224]
	249 NotImplemented "Instruction CINC not yet implemented."
	250 Compare W9, 0
	251 JumpIfNotEqual {253}
	252 Call 0x1C17DFC
	253 Add X4, X31, 44
	254 Move W5, 64
	255 Move W6, 47
	256 Move W7, 92
	257 Move X0, X25
	258 Move W1, W26
	259 Move W2, W27
	260 Move X3, X19
	261 Move [X31+24], X31
	262 Move [X31+16], W31
	263 Move [X31+8], X28
	264 Move [X31], W29
	265 Call UriHelper.UnescapeString, X0, X1, X2, X3, X4, X5, X6, X7, X8, X9, X10
	266 NotImplemented "Instruction LDRSW not yet implemented."
	267 Add W9, W8, 1
	268 Move [X31+44], W9
	269 Compare X0, 0
	270 JumpIfEqual {883}
	271 Move W9, [X0+24]
	272 Move X28, 0xAD4000
	273 Move X28, [X28+632]
	274 Move X19, X0
	275 NotImplemented "Instruction CMP not yet implemented."
	276 Add X8, X19, X8
	277 Move W9, 64
	278 NotImplemented "Instruction STRH not yet implemented."
	279 Move X8, [X20+56]
	280 Compare X8, 0
	281 JumpIfEqual {883}
	282 Move X9, 0xB1A000
	283 Move X9, [X9+88]
	284 Move X29, X28
	285 Move X25, [X20+16]
	286 NotImplemented "Instruction LDRH not yet implemented."
	287 Move X0, [X9]
	288 NotImplemented "Instruction LDRH not yet implemented."
	289 Move X28, [X20+32]
	290 Move W8, [X0+224]
	291 Compare W8, 0
	292 JumpIfNotEqual {294}
	293 Call 0x1C17DFC
	294 Add X4, X31, 44
	295 Move W5, 0xFFFF
	296 Move W6, 0xFFFF
	297 Move W7, 0xFFFF
	298 Move [X31+24], X31
	299 Move [X31+16], W31
	300 Move [X31+8], X28
	301 Move [X31], W31
	302 Move X0, X25
	303 Move W1, W26
	304 Move W2, W27
	305 Move X3, X19
	306 Call UriHelper.UnescapeString, X0, X1, X2, X3, X4, X5, X6, X7, X8, X9, X10
	307 Move X19, X0
	308 Move X28, X29
	309 NotImplemented "Instruction CMP not yet implemented."
	310 Move W8, [X31+44]
	311 Subtract W8, W8, 1
	312 Move [X31+44], W8
	313 Move TEMP, X23
	314 And TEMP, TEMP, 4
	315 Compare TEMP, 4
	316 JumpIfNotEqual {401}
	317 Move W8, [X24+16]
	318 Compare W8, 0
	319 JumpIfEqual {401}
	320 NotImplemented "Instruction CMP not yet implemented."
	321 Move W26, W31
	322 Move TEMP, X23
	323 And TEMP, TEMP, 256
	324 Compare TEMP, 256
	325 JumpIfNotEqual {340}
	326 Move X0, X31
	327 Call RuntimeHelpers.get_OffsetToStringData
	328 Move [X31+40], W31
	329 Move [X31+36], W31
	330 Move W2, [X24+16]
	331 Add X0, X24, W0
	332 Add X3, X31, 40
	333 Add X4, X31, 36
	334 Move W1, W31
	335 Move X5, X31
	336 Call DomainNameHelper.UnicodeEquivalent, X0, X1, X2, X3, X4
	337 Move X24, X0
	338 Compare X0, 0
	339 JumpIfEqual {883}
	340 Move X8, 0xB1A000
	341 Move X8, [X8+88]
	342 Move W25, [X24+16]
	343 Move X27, [X20+32]
	344 Move X0, [X8]
	345 Move W8, [X0+224]
	346 Compare W8, 0
	347 JumpIfNotEqual {349}
	348 Call 0x1C17DFC
	349 Add X4, X31, 44
	350 Move W5, 47
	351 Move W6, 63
	352 Move W7, 35
	353 Move X0, X24
	354 Move W1, W31
	355 Move W2, W25
	356 Move X3, X19
	357 Move [X31+24], X31
	358 Move [X31+16], W31
	359 Move [X31+8], X27
	360 Move [X31], W26
	361 Call UriHelper.UnescapeString, X0, X1, X2, X3, X4, X5, X6, X7, X8, X9, X10
	362 Move X19, X0
	363 Move TEMP, X23
	364 And TEMP, TEMP, -2147483648
	365 Compare TEMP, -2147483648
	366 JumpIfNotEqual {401}
	367 Move X8, [X20+48]
	368 And X8, X8, 0x7FFFF
	369 NotImplemented "Instruction CMP not yet implemented."
	370 Move X8, [X20+56]
	371 Compare X8, 0
	372 JumpIfEqual {883}
	373 Move X0, [X8+24]
	374 Compare X0, 0
	375 JumpIfEqual {401}
	376 Move W8, [X31+44]
	377 Move W4, [X0+16]
	378 Move W1, W31
	379 Move X2, X19
	380 Subtract W3, W8, 1
	381 Move X5, X31
	382 Call String.CopyTo, X0, X1, X2, X3, X4
	383 Move X8, [X20+56]
	384 Compare X8, 0
	385 JumpIfEqual {883}
	386 Move X8, [X8+24]
	387 Compare X8, 0
	388 JumpIfEqual {883}
	389 Move W9, [X31+44]
	390 Move W8, [X8+16]
	391 Add W8, W8, W9
	392 Move [X31+44], W8
	393 Compare X19, 0
	394 JumpIfEqual {883}
	395 Move W9, [X19+24]
	396 Subtract W8, W8, 1
	397 NotImplemented "Instruction CMP not yet implemented."
	398 Add X8, X19, W8
	399 Move W9, 93
	400 NotImplemented "Instruction STRH not yet implemented."
	401 Move TEMP, X23
	402 And TEMP, TEMP, 8
	403 Compare TEMP, 8
	404 JumpIfNotEqual {501}
	405 Move X8, [X20+48]
	406 Move TEMP, X22
	407 And TEMP, TEMP, 8
	408 Compare TEMP, 8
	409 JumpIfEqual {448}
	410 Move TEMP, X8
	411 And TEMP, TEMP, 0x800000
	412 Compare TEMP, 0x800000
	413 JumpIfNotEqual {452}
	414 Move X8, [X20+56]
	415 Compare X8, 0
	416 JumpIfEqual {883}
	417 NotImplemented "Instruction LDRH not yet implemented."
	418 Move X0, [X20+16]
	419 Compare X0, 0
	420 JumpIfEqual {883}
	421 And W8, W25, 0xFFFF
	422 Subtract W25, W8, 1
	423 And W24, W25, 0xFFFF
	424 Move W1, W24
	425 Move X2, X31
	426 Call String.get_Chars, X0, X1
	427 And W8, W0, 0xFFFF
	428 NotImplemented "Instruction CMP not yet implemented."
	429 Move X8, [X20+56]
	430 Compare X8, 0
	431 JumpIfEqual {883}
	432 Move X0, [X20+16]
	433 Compare X0, 0
	434 JumpIfEqual {883}
	435 NotImplemented "Instruction LDRH not yet implemented."
	436 Move W3, [X31+44]
	437 Move W1, W24
	438 Move X2, X19
	439 Subtract W4, W8, W24
	440 Move X5, X31
	441 Call String.CopyTo, X0, X1, X2, X3, X4
	442 Move X8, [X20+56]
	443 Compare X8, 0
	444 JumpIfEqual {883}
	445 Move W9, [X31+44]
	446 NotImplemented "Instruction LDRH not yet implemented."
	447 Subtract W9, W9, W24
	448 Move TEMP, X8
	449 And TEMP, TEMP, 0x800000
	450 Compare TEMP, 0x800000
	451 JumpIfEqual {461}
	452 Move TEMP, X23
	453 And TEMP, TEMP, 128
	454 Compare TEMP, 128
	455 JumpIfNotEqual {501}
	456 Move X8, [X20+32]
	457 Compare X8, 0
	458 JumpIfEqual {883}
	459 Move W8, [X8+28]
	460 Add W31, W8, 1
	461 NotImplemented "Instruction LDRSW not yet implemented."
	462 Add W9, W8, 1
	463 Move [X31+44], W9
	464 Compare X19, 0
	465 JumpIfEqual {883}
	466 Move W9, [X19+24]
	467 NotImplemented "Instruction CMP not yet implemented."
	468 Add X8, X19, X8
	469 Move W9, 58
	470 NotImplemented "Instruction STRH not yet implemented."
	471 Move X8, [X20+56]
	472 Compare X8, 0
	473 JumpIfEqual {883}
	474 Move X9, 0xAD4000
	475 Move X9, [X9+3144]
	476 Add X24, X8, 46
	477 Move X0, [X9]
	478 Move W9, [X0+224]
	479 Compare W9, 0
	480 JumpIfNotEqual {482}
	481 Call 0x1C17DFC
	482 Move X0, X31
	483 Call CultureInfo.get_InvariantCulture
	484 Move X1, X0
	485 Move X0, X24
	486 Move X2, X31
	487 Call UInt16.ToString, X0, X1
	488 Compare X0, 0
	489 JumpIfEqual {883}
	490 Move W3, [X31+44]
	491 Move W4, [X0+16]
	492 Move W1, W31
	493 Move X2, X19
	494 Move X5, X31
	495 Move X24, X0
	496 Call String.CopyTo, X0, X1, X2, X3, X4
	497 Move W8, [X31+44]
	498 Move W9, [X24+16]
	499 Add W8, W9, W8
	500 Move [X31+44], W8
	501 Move TEMP, X23
	502 And TEMP, TEMP, 16
	503 Compare TEMP, 16
	504 JumpIfNotEqual {536}
	505 Add X2, X31, 44
	506 Move X0, X20
	507 Move X1, X19
	508 Move W3, W21
	509 Call Uri.GetCanonicalPath, X0, X1, X2, X3
	510 NotImplemented "Instruction CMP not yet implemented."
	511 Move X19, X0
	512 Move W8, [X20+50]
	513 Move W3, [X31+44]
	514 Move W2, W31
	515 Move TEMP, X8
	516 And TEMP, TEMP, 16
	517 Compare TEMP, 16
	518 JumpIfNotEqual {531}
	519 Compare W3, 0
	520 JumpIfEqual {531}
	521 Compare X19, 0
	522 JumpIfEqual {883}
	523 Move W8, [X19+24]
	524 Compare W8, 0
	525 JumpIfEqual {884}
	526 NotImplemented "Instruction LDRH not yet implemented."
	527 NotImplemented "Instruction CMP not yet implemented."
	528 Subtract W3, W3, 1
	529 Move W2, 1
	530 Move [X31+44], W3
	531 Compare W3, 0
	532 JumpIfNotEqual {714}
	533 Move X8, [X28]
	534 Move X8, [X8+184]
	535 Move X0, [X8]
	536 Move TEMP, X23
	537 And TEMP, TEMP, 32
	538 Compare TEMP, 32
	539 JumpIfNotEqual {626}
	540 Move X9, [X20+56]
	541 Compare X9, 0
	542 JumpIfEqual {883}
	543 NotImplemented "Instruction LDRH not yet implemented."
	544 NotImplemented "Instruction LDRH not yet implemented."
	545 NotImplemented "Instruction CMP not yet implemented."
	546 NotImplemented "Instruction CMP not yet implemented."
	547 NotImplemented "Instruction LDRSW not yet implemented."
	548 Add W10, W9, 1
	549 Move [X31+44], W10
	550 Compare X19, 0
	551 JumpIfEqual {883}
	552 Move W10, [X19+24]
	553 NotImplemented "Instruction CMP not yet implemented."
	554 Add X9, X19, X9
	555 Move W10, 63
	556 NotImplemented "Instruction STRH not yet implemented."
	557 Add W25, W8, 1
	558 Move TEMP, X22
	559 And TEMP, TEMP, 32
	560 Compare TEMP, 32
	561 JumpIfEqual {599}
	562 Move X8, 0xB1A000
	563 Move X8, [X8+88]
	564 Move X26, [X20+16]
	565 Move X0, [X8]
	566 Move W8, [X0+224]
	567 Move X27, [X20+32]
	568 Compare W8, 0
	569 JumpIfNotEqual {571}
	570 Call 0x1C17DFC
	571 Move W8, 1
	572 Add X4, X31, 44
	573 Move W5, 0xFFFF
	574 Move W6, 0xFFFF
	575 Move W7, 0xFFFF
	576 Move X0, X26
	577 Move W1, W25
	578 Move W2, W24
	579 Move X3, X19
	580 Move [X31+24], X31
	581 Move [X31+8], X27
	582 Move [X31+16], W8
	583 Move [X31], W31
	584 Call UriHelper.UnescapeString, X0, X1, X2, X3, X4, X5, X6, X7, X8, X9, X10
	585 Move TEMP, X23
	586 And TEMP, TEMP, 64
	587 Compare TEMP, 64
	588 JumpIfEqual {630}
	589 Move W26, W31
	590 Move TEMP, X22
	591 And TEMP, TEMP, 4
	592 Compare TEMP, 4
	593 JumpIfNotEqual {322}
	594 Move X8, [X20+48]
	595 And X9, X8, 0x7FFFF
	596 NotImplemented "Instruction CMP not yet implemented."
	597 NotImplemented "Instruction CMP not yet implemented."
	598 Move W26, 10
	599 NotImplemented "Instruction CMP not yet implemented."
	600 Move W8, [X20+50]
	601 Move X26, [X20+16]
	602 Move TEMP, X8
	603 And TEMP, TEMP, 8
	604 Compare TEMP, 8
	605 JumpIfEqual {743}
	606 Move X8, 0xB1A000
	607 Move X8, [X8+88]
	608 Move X0, [X8]
	609 Move W8, [X0+224]
	610 Compare W8, 0
	611 JumpIfNotEqual {613}
	612 Call 0x1C17DFC
	613 Move W8, 37
	614 Add X4, X31, 44
	615 Move W5, 1
	616 Move W6, 35
	617 Move W7, 0xFFFF
	618 Move X0, X26
	619 Move W1, W25
	620 Move W2, W24
	621 Move X3, X19
	622 Move [X31+8], X31
	623 NotImplemented "Instruction STRH not yet implemented."
	624 Call UriHelper.EscapeString, X0, X1, X2, X3, X4, X5, X6, X7, X8
	625 Move X19, X0
	626 Move TEMP, X23
	627 And TEMP, TEMP, 64
	628 Compare TEMP, 64
	629 JumpIfNotEqual {843}
	630 Move X9, [X20+56]
	631 Compare X9, 0
	632 JumpIfEqual {883}
	633 NotImplemented "Instruction LDRH not yet implemented."
	634 NotImplemented "Instruction LDRH not yet implemented."
	635 NotImplemented "Instruction CMP not yet implemented."
	636 NotImplemented "Instruction CMP not yet implemented."
	637 NotImplemented "Instruction LDRSW not yet implemented."
	638 Add W10, W9, 1
	639 Move [X31+44], W10
	640 Compare X19, 0
	641 JumpIfEqual {883}
	642 Move W10, [X19+24]
	643 NotImplemented "Instruction CMP not yet implemented."
	644 Add X9, X19, X9
	645 Move W10, 35
	646 NotImplemented "Instruction STRH not yet implemented."
	647 Add W23, W8, 1
	648 Move TEMP, X22
	649 And TEMP, TEMP, 64
	650 Compare TEMP, 64
	651 JumpIfEqual {674}
	652 Move X8, 0xB1A000
	653 Move X8, [X8+88]
	654 Move X21, [X20+16]
	655 Move X0, [X8]
	656 Move W8, [X0+224]
	657 Move X20, [X20+32]
	658 Compare W8, 0
	659 JumpIfNotEqual {661}
	660 Call 0x1C17DFC
	661 Add X4, X31, 44
	662 Move W5, 0xFFFF
	663 Move W6, 0xFFFF
	664 Move W7, 0xFFFF
	665 Move X0, X21
	666 Move W1, W23
	667 Move W2, W24
	668 Move X3, X19
	669 Move [X31+24], X31
	670 Move [X31+16], W31
	671 Move [X31+8], X20
	672 Move [X31], W31
	673 Call UriHelper.UnescapeString, X0, X1, X2, X3, X4, X5, X6, X7, X8, X9, X10
	674 NotImplemented "Instruction CMP not yet implemented."
	675 Move W8, [X20+50]
	676 Move X21, [X20+16]
	677 Move TEMP, X8
	678 And TEMP, TEMP, 8
	679 Compare TEMP, 8
	680 JumpIfEqual {745}
	681 Move X8, 0xB1A000
	682 Move X8, [X8+72]
	683 Move X0, [X8]
	684 Move W8, [X0+224]
	685 Compare W8, 0
	686 JumpIfNotEqual {688}
	687 Call 0x1C17DFC
	688 Move X0, X31
	689 Call UriParser.get_ShouldUseLegacyV2Quirks
	690 Move X9, 0xB1A000
	691 Move X9, [X9+88]
	692 Move W8, W0
	693 And W31, W8, 1
	694 Move W8, 35
	695 Move X0, [X9]
	696 NotImplemented "Instruction CSINV not yet implemented."
	697 Move W9, [X0+224]
	698 Compare W9, 0
	699 JumpIfNotEqual {701}
	700 Call 0x1C17DFC
	701 Move W8, 37
	702 Add X4, X31, 44
	703 Move W5, 1
	704 Move W7, 0xFFFF
	705 Move X0, X21
	706 Move W1, W23
	707 Move W2, W24
	708 Move X3, X19
	709 Move W6, W20
	710 Move [X31+8], X31
	711 NotImplemented "Instruction STRH not yet implemented."
	712 Call UriHelper.EscapeString, X0, X1, X2, X3, X4, X5, X6, X7, X8
	713 Move W2, W31
	714 Move X0, X31
	715 Move X1, X19
	716 NotImplemented "Instruction CMP not yet implemented."
	717 Move W8, 0x7FFF
	718 NotImplemented "Instruction CMP not yet implemented."
	719 Move X8, 0xB1A000
	720 Move X8, [X8+88]
	721 Move X26, [X20+16]
	722 Move X28, [X20+32]
	723 Move X0, [X8]
	724 Move W8, [X20+50]
	725 Move W9, [X0+224]
	726 And W31, W8, 8
	727 Move W8, 6
	728 NotImplemented "Instruction CMP not yet implemented."
	729 Move W8, 0x7FFF
	730 NotImplemented "Instruction CMP not yet implemented."
	731 Move X8, 0xB1A000
	732 Move X8, [X8+88]
	733 Move X21, [X20+16]
	734 Move X22, [X20+32]
	735 Move X0, [X8]
	736 Move W8, [X20+50]
	737 Move W9, [X0+224]
	738 And W31, W8, 8
	739 Move W8, 6
	740 And X31, X8, 0xFFFFF
	741 Move W8, 2
	742 NotImplemented "Instruction CINC not yet implemented."
	743 Move X8, 0xB1A000
	744 Move X8, [X8+88]
	745 Move X8, 0xB1A000
	746 Move X8, [X8+88]
	747 Move X8, 0xB1A000
	748 Move X8, [X8+88]
	749 Move X26, [X20+16]
	750 Move X27, [X20+32]
	751 Move X0, [X8]
	752 Move W8, [X0+224]
	753 Compare W8, 0
	754 JumpIfNotEqual {756}
	755 Call 0x1C17DFC
	756 Move W8, 1
	757 Move W9, 10
	758 Move [X31+24], X31
	759 Move [X31+8], X27
	760 Add X4, X31, 44
	761 Move [X31+16], W8
	762 Move W5, 35
	763 Move W6, 0xFFFF
	764 Move W7, 0xFFFF
	765 Move [X31], W9
	766 Move X8, 0xB1A000
	767 Move X8, [X8+88]
	768 Move X26, [X20+16]
	769 Move X28, [X20+32]
	770 Move X0, [X8]
	771 Move W8, [X20+50]
	772 Move W9, [X0+224]
	773 And W31, W8, 8
	774 Move W8, 2
	775 NotImplemented "Instruction CINC not yet implemented."
	776 Compare W9, 0
	777 JumpIfNotEqual {779}
	778 Call 0x1C17DFC
	779 Move W8, 1
	780 Add X4, X31, 44
	781 Move W5, 35
	782 Move W6, 0xFFFF
	783 Move W7, 0xFFFF
	784 Move [X31+24], X31
	785 Move [X31+8], X28
	786 Move [X31+16], W8
	787 Move [X31], W27
	788 Move X0, X26
	789 Move W1, W25
	790 Move W2, W24
	791 Move X3, X19
	792 Call UriHelper.UnescapeString, X0, X1, X2, X3, X4, X5, X6, X7, X8, X9, X10
	793 Move X19, X0
	794 Move TEMP, X23
	795 And TEMP, TEMP, 64
	796 Compare TEMP, 64
	797 JumpIfEqual {630}
	798 Move X8, 0xB1A000
	799 Move X8, [X8+88]
	800 Move X21, [X20+16]
	801 Move X20, [X20+32]
	802 Move X0, [X8]
	803 Move W8, [X0+224]
	804 Compare W8, 0
	805 JumpIfNotEqual {807}
	806 Call 0x1C17DFC
	807 Move W8, 10
	808 Move [X31+24], X31
	809 Move [X31+16], W31
	810 Move [X31+8], X20
	811 Add X4, X31, 44
	812 Move W5, 35
	813 Move W6, 0xFFFF
	814 Move W7, 0xFFFF
	815 Move [X31], W8
	816 Move X8, 0xB1A000
	817 Move X8, [X8+88]
	818 Move X21, [X20+16]
	819 Move X22, [X20+32]
	820 Move X0, [X8]
	821 Move W8, [X20+50]
	822 Move W9, [X0+224]
	823 And W31, W8, 8
	824 Move W8, 2
	825 NotImplemented "Instruction CINC not yet implemented."
	826 Compare W9, 0
	827 JumpIfNotEqual {829}
	828 Call 0x1C17DFC
	829 Add X4, X31, 44
	830 Move W5, 35
	831 Move W6, 0xFFFF
	832 Move W7, 0xFFFF
	833 Move [X31+24], X31
	834 Move [X31+16], W31
	835 Move [X31+8], X22
	836 Move [X31], W20
	837 Move X0, X21
	838 Move W1, W23
	839 Move W2, W24
	840 Move X3, X19
	841 Call UriHelper.UnescapeString, X0, X1, X2, X3, X4, X5, X6, X7, X8, X9, X10
	842 Move X19, X0
	843 Move W3, [X31+44]
	844 Move X0, X31
	845 Move X1, X19
	846 Move W2, W31
	847 Move X4, X31
	848 Call String.CreateString, X0, X1, X2, X3
	849 Move X20, [X31+128]
	850 Move X19, [X31+136]
	851 Move X22, [X31+112]
	852 Move X21, [X31+120]
	853 Move X24, [X31+96]
	854 Move X23, [X31+104]
	855 Move X26, [X31+80]
	856 Move X25, [X31+88]
	857 Move X28, [X31+64]
	858 Move X27, [X31+72]
	859 Move X29, [X31+48]
	860 Move X30, [X31+56]
	861 Add X31, X31, 144
	862 Return X0
	863 Compare X9, 0
	864 JumpIfEqual {883}
	865 Compare X26, 0
	866 JumpIfEqual {883}
	867 NotImplemented "Instruction LDRH not yet implemented."
	868 NotImplemented "Instruction LDRH not yet implemented."
	869 Move X0, X26
	870 Move X2, X19
	871 Move W3, W25
	872 Subtract W4, W8, W1
	873 Move X5, X31
	874 Call String.CopyTo, X0, X1, X2, X3, X4
	875 Move X8, [X20+56]
	876 Compare X8, 0
	877 JumpIfEqual {883}
	878 NotImplemented "Instruction LDRH not yet implemented."
	879 NotImplemented "Instruction LDRH not yet implemented."
	880 Add W9, W25, W9
	881 Subtract W8, W9, W8
	882 Move [X31+44], W8
	883 Call 0x1C17F20
	884 Call 0x1C17F28
	885 NotImplemented "Instruction CMP not yet implemented."
	886 Move X25, X0
	887 Move X0, X25
	888 Call 0x3EB2AD0
	889 Move X25, X0
	890 Move X0, 0xB1A000
	891 Move X0, [X0+216]
	892 Call 0x1C17D08
	893 Move X8, [X25]
	894 Move X1, [X8]
	895 Call 0x1C18270
	896 Move TEMP, X0
	897 And TEMP, TEMP, 1
	898 Compare TEMP, 1
	899 JumpIfNotEqual {901}
	900 Call 0x3EB2AE0
	901 Move W0, 8
	902 Call 0x3EB2AF0
	903 Move X8, [X25]
	904 Move [X0], X8
	905 Move X1, 0x893000
	906 Add X1, X1, 3672
	907 Move X2, X31
	908 Call 0x3EB2B00
	909 Move X25, X0
	910 Call 0x3EB2AE0
	911 Move X0, X25
	912 Call 0x1D2D690
	913 Call 0x1991590

Method: System.String GetUriPartsFromUserString(System.UriComponents uriParts)

Disassembly:
	0x03621D94 BL 0x1C16DFC
	0x03621D98 MOVZ W8, 0x1
	0x03621D9C MOVZ W9, 0xA
	0x03621DA0 STR X31, [X31 + 0x18]
	0x03621DA4 STR X27, [X31 + 0x8]
	0x03621DA8 ADD X4, X31, 0x2C
	0x03621DAC STRB W8, [X31 + 0x10]
	0x03621DB0 MOVZ W5, 0x23
	0x03621DB4 MOVZ W6, 0xFFFF
	0x03621DB8 MOVZ W7, 0xFFFF
	0x03621DBC STR W9, [X31]
	0x03621DC0 B 0x3621E18
	0x03621DC4 ADRP X8, 0xB1A000
	0x03621DC8 LDR X8, [X8 + 0x58]
	0x03621DCC LDR X26, [X20 + 0x10]
	0x03621DD0 LDR X28, [X20 + 0x20]
	0x03621DD4 LDR X0, [X8]
	0x03621DD8 LDRB W8, [X20 + 0x32]
	0x03621DDC LDR W9, [X0 + 0xE0]
	0x03621DE0 ANDS W31, W8, 0x8
	0x03621DE4 MOVZ W8, 0x2
	0x03621DE8 CINC W27, W8, EQ
	0x03621DEC CBNZ W9, 0x3621DF4
	0x03621DF0 BL 0x1C16DFC
	0x03621DF4 MOVZ W8, 0x1
	0x03621DF8 ADD X4, X31, 0x2C
	0x03621DFC MOVZ W5, 0x23
	0x03621E00 MOVZ W6, 0xFFFF
	0x03621E04 MOVZ W7, 0xFFFF
	0x03621E08 STR X31, [X31 + 0x18]
	0x03621E0C STR X28, [X31 + 0x8]
	0x03621E10 STRB W8, [X31 + 0x10]
	0x03621E14 STR W27, [X31]
	0x03621E18 MOV X0, X26
	0x03621E1C MOV W1, W25
	0x03621E20 MOV W2, W24
	0x03621E24 MOV X3, X19
	0x03621E28 BL 0x362B208
	0x03621E2C MOV X19, X0
	0x03621E30 TBNZ X23, 0x6, 0x3621B90
	0x03621E34 B 0x3621EE8
	0x03621E38 ADRP X8, 0xB1A000
	0x03621E3C LDR X8, [X8 + 0x58]
	0x03621E40 LDR X21, [X20 + 0x10]
	0x03621E44 LDR X20, [X20 + 0x20]
	0x03621E48 LDR X0, [X8]
	0x03621E4C LDR W8, [X0 + 0xE0]
	0x03621E50 CBNZ W8, 0x3621E58
	0x03621E54 BL 0x1C16DFC
	0x03621E58 MOVZ W8, 0xA
	0x03621E5C STR X31, [X31 + 0x18]
	0x03621E60 STRB W31, [X31 + 0x10]
	0x03621E64 STR X20, [X31 + 0x8]
	0x03621E68 ADD X4, X31, 0x2C
	0x03621E6C MOVZ W5, 0x23
	0x03621E70 MOVZ W6, 0xFFFF
	0x03621E74 MOVZ W7, 0xFFFF
	0x03621E78 STR W8, [X31]
	0x03621E7C B 0x3621ED0
	0x03621E80 ADRP X8, 0xB1A000
	0x03621E84 LDR X8, [X8 + 0x58]
	0x03621E88 LDR X21, [X20 + 0x10]
	0x03621E8C LDR X22, [X20 + 0x20]
	0x03621E90 LDR X0, [X8]
	0x03621E94 LDRB W8, [X20 + 0x32]
	0x03621E98 LDR W9, [X0 + 0xE0]
	0x03621E9C ANDS W31, W8, 0x8
	0x03621EA0 MOVZ W8, 0x2
	0x03621EA4 CINC W20, W8, EQ
	0x03621EA8 CBNZ W9, 0x3621EB0
	0x03621EAC BL 0x1C16DFC
	0x03621EB0 ADD X4, X31, 0x2C
	0x03621EB4 MOVZ W5, 0x23
	0x03621EB8 MOVZ W6, 0xFFFF
	0x03621EBC MOVZ W7, 0xFFFF
	0x03621EC0 STR X31, [X31 + 0x18]
	0x03621EC4 STRB W31, [X31 + 0x10]
	0x03621EC8 STR X22, [X31 + 0x8]
	0x03621ECC STR W20, [X31]
	0x03621ED0 MOV X0, X21
	0x03621ED4 MOV W1, W23
	0x03621ED8 MOV W2, W24
	0x03621EDC MOV X3, X19
	0x03621EE0 BL 0x362B208
	0x03621EE4 MOV X19, X0
	0x03621EE8 LDR W3, [X31 + 0x2C]
	0x03621EEC MOV X0, X31
	0x03621EF0 MOV X1, X19
	0x03621EF4 MOV W2, W31
	0x03621EF8 MOV X4, X31
	0x03621EFC BL 0x322EAE4
	0x03621F00 LDP X20, X19, [X31 + 0x80]
	0x03621F04 LDP X22, X21, [X31 + 0x70]
	0x03621F08 LDP X24, X23, [X31 + 0x60]
	0x03621F0C LDP X26, X25, [X31 + 0x50]
	0x03621F10 LDP X28, X27, [X31 + 0x40]
	0x03621F14 LDP X29, X30, [X31 + 0x30]
	0x03621F18 ADD X31, X31, 0x90
	0x03621F1C RET
	0x03621F20 CBZ X9, 0x3621F68
	0x03621F24 CBZ X26, 0x3621F68
	0x03621F28 LDRH W8, [X9 + 0x2C]
	0x03621F2C LDRH W1, [X9 + 0x2A]
	0x03621F30 MOV X0, X26
	0x03621F34 MOV X2, X19
	0x03621F38 MOV W3, W25
	0x03621F3C SUB W4, W8, W1
	0x03621F40 MOV X5, X31
	0x03621F44 BL 0x322D7E4
	0x03621F48 LDR X8, [X20 + 0x38]
	0x03621F4C CBZ X8, 0x3621F68
	0x03621F50 LDRH W9, [X8 + 0x2C]
	0x03621F54 LDRH W8, [X8 + 0x2A]
	0x03621F58 ADD W9, W25, W9
	0x03621F5C SUB W8, W9, W8
	0x03621F60 STR W8, [X31 + 0x2C]
	0x03621F64 B 0x3621768
	0x03621F68 BL 0x1C16F20
	0x03621F6C BL 0x1C16F28
	0x03621F70 CMP W1, 0x1
	0x03621F74 MOV X25, X0
	0x03621F78 B.NE 0x3621FD4
	0x03621F7C MOV X0, X25
	0x03621F80 BL 0x3EB1AD0
	0x03621F84 MOV X25, X0
	0x03621F88 ADRP X0, 0xB1A000
	0x03621F8C LDR X0, [X0 + 0xD8]
	0x03621F90 BL 0x1C16D08
	0x03621F94 LDR X8, [X25]
	0x03621F98 LDR X1, [X8]
	0x03621F9C BL 0x1C17270
	0x03621FA0 TBZ X0, 0x0, 0x3621FAC
	0x03621FA4 BL 0x3EB1AE0
	0x03621FA8 B 0x36217CC
	0x03621FAC MOVZ W0, 0x8
	0x03621FB0 BL 0x3EB1AF0
	0x03621FB4 LDR X8, [X25]
	0x03621FB8 STR X8, [X0]
	0x03621FBC ADRP X1, 0x893000
	0x03621FC0 ADD X1, X1, 0xE58
	0x03621FC4 MOV X2, X31
	0x03621FC8 BL 0x3EB1B00
	0x03621FCC MOV X25, X0
	0x03621FD0 BL 0x3EB1AE0
	0x03621FD4 MOV X0, X25
	0x03621FD8 BL 0x1D2C690
	0x03621FDC BL 0x1990590
	0x03621FE0 SUB X31, X31, 0x80
	0x03621FE4 STP X30, X27, [X31 + 0x30]
	0x03621FE8 STP X26, X25, [X31 + 0x40]
	0x03621FEC STP X24, X23, [X31 + 0x50]
	0x03621FF0 STP X22, X21, [X31 + 0x60]
	0x03621FF4 STP X20, X19, [X31 + 0x70]
	0x03621FF8 ADRP X23, 0xDBF000
	0x03621FFC LDRB W8, [X23 + 0x49B]
	0x03622000 MOV W22, W3
	0x03622004 MOV X20, X2
	0x03622008 MOV X19, X1
	0x0362200C MOV X21, X0
	0x03622010 TBNZ X8, 0x0, 0x362204C
	0x03622014 ADRP X0, 0xADA000
	0x03622018 LDR X0, [X0 + 0x8D8]
	0x0362201C BL 0x1C16CF4
	0x03622020 ADRP X0, 0xB19000
	0x03622024 LDR X0, [X0 + 0x58]
	0x03622028 BL 0x1C16CF4
	0x0362202C ADRP X0, 0xAD3000
	0x03622030 LDR X0, [X0 + 0xA28]
	0x03622034 BL 0x1C16CF4
	0x03622038 ADRP X0, 0xADA000
	0x0362203C LDR X0, [X0 + 0x988]
	0x03622040 BL 0x1C16CF4
	0x03622044 MOVZ W8, 0x1
	0x03622048 STRB W8, [X23 + 0x49B]
	0x0362204C LDRB W8, [X21 + 0x31]
	0x03622050 TBZ X8, 0x6, 0x362207C
	0x03622054 LDRSW X8, [X20]
	0x03622058 ADD W9, W8, 0x1
	0x0362205C STR W9, [X20]
	0x03622060 CBZ X19, 0x3622648
	0x03622064 LDR W9, [X19 + 0x18]
	0x03622068 CMP W8, W9
	0x0362206C B.CS 0x362264C
	0x03622070 ADD X8, X19, X8, 0x1, LSL
	0x03622074 MOVZ W9, 0x2F
	0x03622078 STRH W9, [X8 + 0x20]
	0x0362207C LDR X8, [X21 + 0x38]
	0x03622080 CBZ X8, 0x3622648
	0x03622084 LDRH W9, [X8 + 0x30]
	0x03622088 LDRH W8, [X8 + 0x32]
	0x0362208C CMP W9, W8
	0x03622090 B.EQ 0x36225C0
	0x03622094 LDR W23, [X20]
	0x03622098 MOV X0, X21
	0x0362209C STR W23, [X31 + 0x2C]
	0x036220A0 BL 0x3618030
	0x036220A4 CMP W22, 0x1
	0x036220A8 AND W26, W0, 0xFFFF
	0x036220AC B.NE 0x36221C0
	0x036220B0 LDR X8, [X21 + 0x30]
	0x036220B4 TBNZ X8, 0xD, 0x3622214
	0x036220B8 MOVZ W9, 0x400
	0x036220BC LDR X24, [X21 + 0x10]
	0x036220C0 MOVK W9, 0x80000
	0x036220C4 AND X8, X8, X9, 0x0
	0x036220C8 CMP X8, 0x400
	0x036220CC B.NE 0x36222A4
	0x036220D0 CBZ W26, 0x3622150
	0x036220D4 LDR X8, [X21 + 0x38]
	0x036220D8 CBZ X8, 0x3622648
	0x036220DC CBZ X24, 0x3622648
	0x036220E0 LDRH W8, [X8 + 0x30]
	0x036220E4 SUB W23, W26, 0x1
	0x036220E8 MOV X0, X24
	0x036220EC MOV X2, X31
	0x036220F0 ADD W1, W23, W8
	0x036220F4 BL 0x3222A1C
	0x036220F8 AND W8, W0, 0xFFFF
	0x036220FC CMP W8, 0x7C
	0x03622100 B.NE 0x3622150
	0x03622104 LDR X8, [X21 + 0x38]
	0x03622108 CBZ X8, 0x3622648
	0x0362210C LDRH W8, [X8 + 0x30]
	0x03622110 MOVZ W2, 0x1
	0x03622114 MOV X0, X24
	0x03622118 MOV X3, X31
	0x0362211C ADD W1, W23, W8
	0x03622120 BL 0x3228B90
	0x03622124 LDR X8, [X21 + 0x38]
	0x03622128 CBZ X8, 0x3622648
	0x0362212C CBZ X0, 0x3622648
	0x03622130 ADRP X9, 0xADA000
	0x03622134 LDRH W8, [X8 + 0x30]
	0x03622138 LDR X9, [X9 + 0x988]
	0x0362213C MOV X3, X31
	0x03622140 ADD W1, W23, W8
	0x03622144 LDR X2, [X9]
	0x03622148 BL 0x3227EBC
	0x0362214C MOV X24, X0
	0x03622150 LDR X8, [X21 + 0x38]
	0x03622154 CBZ X8, 0x3622648
	0x03622158 ADRP X9, 0xB19000
	0x0362215C LDR X9, [X9 + 0x58]
	0x03622160 LDRH W23, [X8 + 0x30]
	0x03622164 LDRH W25, [X8 + 0x32]
	0x03622168 MOVZ W8, 0x25
	0x0362216C LDR X0, [X9]
	0x03622170 LDRB W9, [X21 + 0x33]
	0x03622174 LDR W10, [X0 + 0xE0]
	0x03622178 ANDS W31, W9, 0x20
	0x0362217C CSINV W27, W8, W31, EQ
	0x03622180 CBNZ W10, 0x3622188
	0x03622184 BL 0x1C16DFC
	0x03622188 ADD X4, X31, 0x2C
	0x0362218C MOVZ W5, 0x1
	0x03622190 MOVZ W6, 0x3F
	0x03622194 MOVZ W7, 0x23
	0x03622198 MOV X0, X24
	0x0362219C MOV W1, W23
	0x036221A0 MOV W2, W25
	0x036221A4 MOV X3, X19
	0x036221A8 STR X31, [X31 + 0x8]
	0x036221AC STRH W27, [X31]
	0x036221B0 BL 0x362A9E0
	0x036221B4 MOV X19, X0
	0x036221B8 CBNZ W26, 0x36222F0
	0x036221BC B 0x3622324
	0x036221C0 LDR X8, [X21 + 0x38]
	0x036221C4 CBZ X8, 0x3622648
	0x036221C8 LDR X0, [X21 + 0x10]
	0x036221CC CBZ X0, 0x3622648
	0x036221D0 LDRH W9, [X8 + 0x32]
	0x036221D4 LDRH W1, [X8 + 0x30]
	0x036221D8 MOV X2, X19
	0x036221DC MOV W3, W23
	0x036221E0 MOV X5, X31
	0x036221E4 SUB W4, W9, W1
	0x036221E8 BL 0x322D7E4
	0x036221EC LDR X8, [X21 + 0x38]
	0x036221F0 CBZ X8, 0x3622648
	0x036221F4 LDRH W9, [X8 + 0x32]
	0x036221F8 LDRH W8, [X8 + 0x30]
	0x036221FC ADD W9, W23, W9
	0x03622200 SUB W8, W9, W8
	0x03622204 STR W8, [X31 + 0x2C]
	0x03622208 LDRB W8, [X21 + 0x31]
	0x0362220C TBNZ X8, 0x5, 0x362225C
	0x03622210 B 0x36222EC
	0x03622214 LDR X8, [X21 + 0x38]
	0x03622218 CBZ X8, 0x3622648
	0x0362221C LDR X0, [X21 + 0x10]
	0x03622220 CBZ X0, 0x3622648
	0x03622224 LDRH W9, [X8 + 0x32]
	0x03622228 LDRH W1, [X8 + 0x30]
	0x0362222C MOV X2, X19
	0x03622230 MOV W3, W23
	0x03622234 MOV X5, X31
	0x03622238 SUB W4, W9, W1
	0x0362223C BL 0x322D7E4
	0x03622240 LDR X8, [X21 + 0x38]
	0x03622244 CBZ X8, 0x3622648
	0x03622248 LDRH W9, [X8 + 0x32]
	0x0362224C LDRH W8, [X8 + 0x30]
	0x03622250 ADD W9, W23, W9
	0x03622254 SUB W8, W9, W8
	0x03622258 STR W8, [X31 + 0x2C]
	0x0362225C LDR X0, [X21 + 0x20]
	0x03622260 CBZ X0, 0x3622648
	0x03622264 MOVZ W1, 0x2000000
	0x03622268 MOV X2, X31
	0x0362226C BL 0x3629044
	0x03622270 TBZ X0, 0x0, 0x36222EC
	0x03622274 LDR X8, [X21 + 0x30]
	0x03622278 MOVZ W9, 0x10
	0x0362227C MOVK W9, 0x20000000
	0x03622280 AND X8, X8, X9, 0x0
	0x03622284 CMP X8, 0x10
	0x03622288 B.NE 0x36222EC
	0x0362228C CBZ X19, 0x36225E0
	0x03622290 LDR W8, [X19 + 0x18]
	0x03622294 ADD X9, X19, 0x20
	0x03622298 CMP W8, 0x0
	0x0362229C CSEL X23, X31, X9, EQ
	0x036222A0 B 0x36225E4
	0x036222A4 LDR X8, [X21 + 0x38]
	0x036222A8 CBZ X8, 0x3622648
	0x036222AC CBZ X24, 0x3622648
	0x036222B0 LDRH W9, [X8 + 0x32]
	0x036222B4 LDRH W1, [X8 + 0x30]
	0x036222B8 MOV X0, X24
	0x036222BC MOV X2, X19
	0x036222C0 MOV W3, W23
	0x036222C4 SUB W4, W9, W1
	0x036222C8 MOV X5, X31
	0x036222CC BL 0x322D7E4
	0x036222D0 LDR X8, [X21 + 0x38]
	0x036222D4 CBZ X8, 0x3622648
	0x036222D8 LDRH W9, [X8 + 0x32]
	0x036222DC LDRH W8, [X8 + 0x30]
	0x036222E0 ADD W9, W23, W9
	0x036222E4 SUB W8, W9, W8
	0x036222E8 STR W8, [X31 + 0x2C]
	0x036222EC CBZ W26, 0x3622324
	0x036222F0 CBZ X19, 0x3622648
	0x036222F4 LDR W8, [X20]
	0x036222F8 LDR W9, [X19 + 0x18]
	0x036222FC ADD W8, W26, W8
	0x03622300 SUB W8, W8, 0x1
	0x03622304 CMP W8, W9
	0x03622308 B.CS 0x362264C
	0x0362230C ADD X8, X19, W8, 0x1, SXTW
	0x03622310 LDRH W9, [X8 + 0x20]!
	0x03622314 CMP W9, 0x7C
	0x03622318 B.NE 0x3622324
	0x0362231C MOVZ W9, 0x3A
	0x03622320 STRH W9, [X8]
	0x03622324 LDRB W8, [X21 + 0x31]
	0x03622328 TBNZ X8, 0x5, 0x362239C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xDC0000
	006 Move W8, [X21+1170]
	007 Move W20, W1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {24}
	013 Move X0, 0xAD5000
	014 Move X0, [X0+3144]
	015 Call 0x1C17CF4
	016 Move X0, 0xAD5000
	017 Move X0, [X0+632]
	018 Call 0x1C17CF4
	019 Move X0, 0xADC000
	020 Move X0, [X0+2440]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X21+1170], W8
	024 And W8, W20, 0xBFFFFFFF
	025 NotImplemented "Instruction CMP not yet implemented."
	026 NotImplemented "Instruction CMP not yet implemented."
	027 NotImplemented "Instruction CMP not yet implemented."
	028 NotImplemented "Instruction CMP not yet implemented."
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move X8, [X19+48]
	031 NotImplemented "Instruction CMP not yet implemented."
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move X0, X31
	034 NotImplemented "Instruction CMP not yet implemented."
	035 NotImplemented "Instruction CMP not yet implemented."
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move X8, [X19+56]
	038 Compare X8, 0
	039 JumpIfEqual {401}
	040 NotImplemented "Instruction LDRH not yet implemented."
	041 NotImplemented "Instruction LDRH not yet implemented."
	042 NotImplemented "Instruction CMP not yet implemented."
	043 NotImplemented "Instruction CMP not yet implemented."
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Move W8, [X19+50]
	046 Move TEMP, X8
	047 And TEMP, TEMP, 32
	048 Compare TEMP, 32
	049 JumpIfEqual {133}
	050 Move X8, [X19+56]
	051 Compare X8, 0
	052 JumpIfEqual {401}
	053 NotImplemented "Instruction LDRH not yet implemented."
	054 Move X0, [X19+16]
	055 Compare W1, 0
	056 JumpIfEqual {159}
	057 Compare X0, 0
	058 JumpIfNotEqual {164}
	059 Subtract W8, W8, 1
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Move X0, X31
	062 Move X9, -44601344
	063 Add X9, X9, 839
	064 NotImplemented "Instruction ADR not yet implemented."
	065 Move W11, [X9]
	066 Add X10, X10, X11
	067 CallNoReturn X10
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Move X8, [X19+32]
	070 Compare X8, 0
	071 JumpIfEqual {401}
	072 Move X0, [X8+32]
	073 Move X0, X31
	074 NotImplemented "Instruction CMP not yet implemented."
	075 NotImplemented "Instruction CMP not yet implemented."
	076 Move X8, [X19+56]
	077 Compare X8, 0
	078 JumpIfEqual {401}
	079 Move X0, [X19+16]
	080 Compare X0, 0
	081 JumpIfEqual {401}
	082 NotImplemented "Instruction LDRH not yet implemented."
	083 Move X8, [X19+56]
	084 Compare X8, 0
	085 JumpIfEqual {401}
	086 Move X0, [X19+16]
	087 Compare X0, 0
	088 JumpIfEqual {401}
	089 NotImplemented "Instruction LDRH not yet implemented."
	090 NotImplemented "Instruction LDRH not yet implemented."
	091 Move X8, [X19+48]
	092 Move TEMP, X8
	093 And TEMP, TEMP, 0x200000
	094 Compare TEMP, 0x200000
	095 JumpIfEqual {254}
	096 Move TEMP, X8
	097 And TEMP, TEMP, 0x800000
	098 Compare TEMP, 0x800000
	099 JumpIfEqual {113}
	100 Move X8, [X19+32]
	101 Compare X8, 0
	102 JumpIfEqual {401}
	103 Move W8, [X8+28]
	104 Add W31, W8, 1
	105 Move X8, [X19+56]
	106 Compare X8, 0
	107 JumpIfEqual {401}
	108 Move X0, [X19+16]
	109 Compare X0, 0
	110 JumpIfEqual {401}
	111 NotImplemented "Instruction LDRH not yet implemented."
	112 NotImplemented "Instruction LDRH not yet implemented."
	113 Move X8, [X19+56]
	114 Compare X8, 0
	115 JumpIfEqual {401}
	116 NotImplemented "Instruction LDRH not yet implemented."
	117 NotImplemented "Instruction LDRH not yet implemented."
	118 Subtract W2, W9, W1
	119 Move W8, [X19+50]
	120 Move TEMP, X8
	121 And TEMP, TEMP, 32
	122 Compare TEMP, 32
	123 JumpIfEqual {339}
	124 Move X8, [X19+56]
	125 Compare X8, 0
	126 JumpIfEqual {401}
	127 NotImplemented "Instruction LDRH not yet implemented."
	128 Move X0, [X19+16]
	129 Compare W1, 0
	130 JumpIfEqual {324}
	131 Compare X0, 0
	132 JumpIfNotEqual {329}
	133 Move X8, [X19+56]
	134 Compare X8, 0
	135 JumpIfEqual {401}
	136 Move X0, [X19+16]
	137 Compare X0, 0
	138 JumpIfEqual {401}
	139 NotImplemented "Instruction LDRH not yet implemented."
	140 NotImplemented "Instruction LDRH not yet implemented."
	141 Move X3, X31
	142 Subtract W2, W9, W1
	143 Call String.Substring, X0, X1, X2
	144 Move X8, [X19+56]
	145 Compare X8, 0
	146 JumpIfEqual {401}
	147 Move X20, X0
	148 Move X0, [X19+16]
	149 Compare X0, 0
	150 JumpIfEqual {401}
	151 NotImplemented "Instruction LDRH not yet implemented."
	152 Move X8, [X19+56]
	153 Compare X8, 0
	154 JumpIfEqual {401}
	155 NotImplemented "Instruction LDRH not yet implemented."
	156 NotImplemented "Instruction LDRH not yet implemented."
	157 NotImplemented "Instruction CMP not yet implemented."
	158 NotImplemented "Instruction CINC not yet implemented."
	159 Compare X0, 0
	160 JumpIfEqual {401}
	161 NotImplemented "Instruction LDRH not yet implemented."
	162 Move W10, [X0+16]
	163 NotImplemented "Instruction CMP not yet implemented."
	164 NotImplemented "Instruction LDRH not yet implemented."
	165 Move W8, [X19+50]
	166 Move TEMP, X8
	167 And TEMP, TEMP, 32
	168 Compare TEMP, 32
	169 JumpIfNotEqual {314}
	170 Move X8, [X19+56]
	171 Compare X8, 0
	172 JumpIfEqual {401}
	173 NotImplemented "Instruction LDRH not yet implemented."
	174 NotImplemented "Instruction LDRH not yet implemented."
	175 NotImplemented "Instruction CMP not yet implemented."
	176 NotImplemented "Instruction CSET not yet implemented."
	177 Subtract W8, W9, W8
	178 NotImplemented "Instruction CMP not yet implemented."
	179 Move X0, [X19+16]
	180 Compare X0, 0
	181 JumpIfEqual {401}
	182 And W8, W8, 0xFFFF
	183 Move X8, [X19+56]
	184 Compare X8, 0
	185 JumpIfEqual {401}
	186 Move W9, [X19+48]
	187 NotImplemented "Instruction LDRH not yet implemented."
	188 Move W10, 8
	189 NotImplemented "Instruction MOVK not yet implemented."
	190 And W31, W9, W10
	191 Move X0, [X19+16]
	192 Compare X0, 0
	193 JumpIfEqual {401}
	194 And W8, W20, 0xFFFF
	195 Subtract W20, W8, 1
	196 And W1, W20, 0xFFFF
	197 Move X2, X31
	198 Call String.get_Chars, X0, X1
	199 And W8, W0, 0xFFFF
	200 NotImplemented "Instruction CMP not yet implemented."
	201 Move X8, [X19+56]
	202 Compare X8, 0
	203 JumpIfEqual {401}
	204 NotImplemented "Instruction LDRH not yet implemented."
	205 And W8, W20, 0xFFFF
	206 Subtract W2, W8, W1
	207 Move X0, [X19+16]
	208 Compare X0, 0
	209 JumpIfNotEqual {367}
	210 Move X8, [X19+56]
	211 Compare X8, 0
	212 JumpIfEqual {401}
	213 Move X0, [X19+16]
	214 Move W9, [X19+50]
	215 NotImplemented "Instruction LDRH not yet implemented."
	216 Move TEMP, X9
	217 And TEMP, TEMP, 32
	218 Compare TEMP, 32
	219 JumpIfEqual {374}
	220 Compare X0, 0
	221 JumpIfEqual {401}
	222 NotImplemented "Instruction LDRH not yet implemented."
	223 Move X8, [X19+56]
	224 Compare X8, 0
	225 JumpIfEqual {401}
	226 Move X0, [X19+16]
	227 Compare X0, 0
	228 JumpIfEqual {401}
	229 NotImplemented "Instruction LDRH not yet implemented."
	230 NotImplemented "Instruction CMP not yet implemented."
	231 Move W8, [X19+50]
	232 Move TEMP, X8
	233 And TEMP, TEMP, 16
	234 Compare TEMP, 16
	235 JumpIfNotEqual {304}
	236 Move X8, [X19+56]
	237 Compare X8, 0
	238 JumpIfEqual {401}
	239 NotImplemented "Instruction LDRH not yet implemented."
	240 NotImplemented "Instruction LDRH not yet implemented."
	241 NotImplemented "Instruction CMP not yet implemented."
	242 Move X0, [X19+16]
	243 Compare X0, 0
	244 JumpIfEqual {401}
	245 Move X2, X31
	246 Call String.get_Chars, X0, X1
	247 And W8, W0, 0xFFFF
	248 NotImplemented "Instruction CMP not yet implemented."
	249 Move X8, [X19+56]
	250 Compare X8, 0
	251 JumpIfEqual {401}
	252 NotImplemented "Instruction LDRH not yet implemented."
	253 Add W9, W9, 1
	254 Move TEMP, X8
	255 And TEMP, TEMP, 0x800000
	256 Compare TEMP, 0x800000
	257 JumpIfEqual {331}
	258 Move X8, [X19+32]
	259 Compare X8, 0
	260 JumpIfEqual {401}
	261 Move W8, [X8+28]
	262 Add W31, W8, 1
	263 Move X8, [X19+56]
	264 Compare X8, 0
	265 JumpIfEqual {401}
	266 Move X0, [X19+16]
	267 Compare X0, 0
	268 JumpIfEqual {401}
	269 NotImplemented "Instruction LDRH not yet implemented."
	270 NotImplemented "Instruction LDRH not yet implemented."
	271 Subtract W2, W9, W1
	272 Move X3, X31
	273 Call String.Substring, X0, X1, X2
	274 Move X8, [X19+56]
	275 Compare X8, 0
	276 JumpIfEqual {401}
	277 Move X9, 0xAD4000
	278 Move X9, [X9+3144]
	279 Move X19, X0
	280 Add X20, X8, 46
	281 Move X0, [X9]
	282 Move W9, [X0+224]
	283 Compare W9, 0
	284 JumpIfNotEqual {286}
	285 Call 0x1C17DFC
	286 Move X0, X31
	287 Call CultureInfo.get_InvariantCulture
	288 Move X1, X0
	289 Move X0, X20
	290 Move X2, X31
	291 Call UInt16.ToString, X0, X1
	292 Move X8, 0xADB000
	293 Move X8, [X8+2440]
	294 Move X2, X0
	295 Move X0, X19
	296 Move X20, [X31+16]
	297 Move X19, [X31+24]
	298 Move X1, [X8]
	299 Move X3, X31
	300 Move X30, [X31+32]
	301 Move X21, [X31+40]
	302 Call String.Concat, X0, X1, X2
	303 Return X0
	304 Move X8, [X19+56]
	305 Compare X8, 0
	306 JumpIfEqual {401}
	307 NotImplemented "Instruction LDRH not yet implemented."
	308 NotImplemented "Instruction LDRH not yet implemented."
	309 And W1, W9, 0xFFFF
	310 NotImplemented "Instruction CMP not yet implemented."
	311 Move X0, [X19+16]
	312 Compare X0, 0
	313 JumpIfNotEqual {330}
	314 Move X8, 0xAD4000
	315 Move X8, [X8+632]
	316 Move X8, [X8]
	317 Move X8, [X8+184]
	318 Move X0, [X8]
	319 Move X20, [X31+16]
	320 Move X19, [X31+24]
	321 Move X30, [X31+32]
	322 Move X21, [X31+40]
	323 Return X0
	324 Compare X0, 0
	325 JumpIfEqual {401}
	326 NotImplemented "Instruction LDRH not yet implemented."
	327 Move W10, [X0+16]
	328 NotImplemented "Instruction CMP not yet implemented."
	329 NotImplemented "Instruction LDRH not yet implemented."
	330 Subtract W2, W8, W1
	331 Move X8, [X19+56]
	332 Compare X8, 0
	333 JumpIfEqual {401}
	334 Move X0, [X19+16]
	335 Compare X0, 0
	336 JumpIfEqual {401}
	337 NotImplemented "Instruction LDRH not yet implemented."
	338 NotImplemented "Instruction LDRH not yet implemented."
	339 Move X8, [X19+56]
	340 Compare X8, 0
	341 JumpIfEqual {401}
	342 Move X0, [X19+16]
	343 Compare X0, 0
	344 JumpIfEqual {401}
	345 NotImplemented "Instruction LDRH not yet implemented."
	346 NotImplemented "Instruction LDRH not yet implemented."
	347 Move X3, X31
	348 Subtract W2, W9, W1
	349 Call String.Substring, X0, X1, X2
	350 Move X8, [X19+56]
	351 Compare X8, 0
	352 JumpIfEqual {401}
	353 Move X20, X0
	354 Move X0, [X19+16]
	355 Compare X0, 0
	356 JumpIfEqual {401}
	357 NotImplemented "Instruction LDRH not yet implemented."
	358 Move X8, [X19+56]
	359 Compare X8, 0
	360 JumpIfEqual {401}
	361 Move X0, [X19+16]
	362 Compare X0, 0
	363 JumpIfEqual {401}
	364 NotImplemented "Instruction LDRH not yet implemented."
	365 NotImplemented "Instruction LDRH not yet implemented."
	366 Subtract W2, W9, W1
	367 Move X20, [X31+16]
	368 Move X19, [X31+24]
	369 Move X3, X31
	370 Move X30, [X31+32]
	371 Move X21, [X31+40]
	372 Call String.Substring, X0, X1, X2
	373 Return X0
	374 Compare X0, 0
	375 JumpIfEqual {401}
	376 NotImplemented "Instruction LDRH not yet implemented."
	377 Move X3, X31
	378 Subtract W2, W8, W1
	379 Call String.Substring, X0, X1, X2
	380 Move X8, [X19+56]
	381 Compare X8, 0
	382 JumpIfEqual {401}
	383 Move X20, X0
	384 Move X0, [X19+16]
	385 Compare X0, 0
	386 JumpIfEqual {401}
	387 NotImplemented "Instruction LDRH not yet implemented."
	388 NotImplemented "Instruction LDRH not yet implemented."
	389 Move X3, X31
	390 Subtract W2, W9, W1
	391 Call String.Substring, X0, X1, X2
	392 Move X1, X0
	393 Move X0, X20
	394 Move X20, [X31+16]
	395 Move X19, [X31+24]
	396 Move X2, X31
	397 Move X30, [X31+32]
	398 Move X21, [X31+40]
	399 Call String.Concat, X0, X1
	400 Return X0
	401 Call 0x1C17F20

Method: System.Void ParseRemaining()

Disassembly:
	0x03619664 LDR X20, [X0]
	0x03619668 BL 0x3EB1AE0
	0x0361966C B 0x3619540
	0x03619670 MOV X20, X31
	0x03619674 B 0x361967C
	0x03619678 MOV X21, X0
	0x0361967C LDRB W8, [X31 + 0x24]
	0x03619680 CBZ W8, 0x3619690
	0x03619684 MOV X0, X22
	0x03619688 MOV X1, X31
	0x0361968C BL 0x33E14E4
	0x03619690 CBNZ X20, 0x361969C
	0x03619694 MOV X0, X21
	0x03619698 BL 0x1D2C690
	0x0361969C MOV X0, X20
	0x036196A0 BL 0x1C16F18
	0x036196A4 BL 0x1990590
	0x036196A8 STR X30, [X31 - 0x20]!
	0x036196AC STP X20, X19, [X31 + 0x10]
	0x036196B0 MOV X19, X1
	0x036196B4 MOV X1, X31
	0x036196B8 MOV X20, X0
	0x036196BC BL 0x33BDD8C
	0x036196C0 CBZ X19, 0x36196E0
	0x036196C4 MOV X0, X20
	0x036196C8 MOV X1, X19
	0x036196CC LDP X20, X19, [X31 + 0x10]
	0x036196D0 MOVZ W3, 0x1
	0x036196D4 MOV W2, W31
	0x036196D8 LDR X30, [X31], #0x20
	0x036196DC B 0x3619728
	0x036196E0 ADRP X0, 0xADF000
	0x036196E4 LDR X0, [X0 + 0x528]
	0x036196E8 BL 0x1C16D08
	0x036196EC BL 0x1C16F10
	0x036196F0 MOV X19, X0
	0x036196F4 ADRP X0, 0xB22000
	0x036196F8 LDR X0, [X0 + 0x60]
	0x036196FC BL 0x1C16D08
	0x03619700 MOV X1, X0
	0x03619704 MOV X0, X19
	0x03619708 MOV X2, X31
	0x0361970C BL 0x330E100
	0x03619710 ADRP X0, 0xB22000
	0x03619714 LDR X0, [X0 + 0x68]
	0x03619718 BL 0x1C16D08
	0x0361971C MOV X1, X0
	0x03619720 MOV X0, X19
	0x03619724 BL 0x1C16DEC
	0x03619728 SUB X31, X31, 0x40
	0x0361972C STP X30, X23, [X31 + 0x10]
	0x03619730 STP X22, X21, [X31 + 0x20]
	0x03619734 STP X20, X19, [X31 + 0x30]
	0x03619738 ADRP X23, 0xDC7000
	0x0361973C LDRB W8, [X23 + 0x4A2]
	0x03619740 MOV W19, W3
	0x03619744 MOV W22, W2
	0x03619748 MOV X21, X1
	0x0361974C MOV X20, X0
	0x03619750 TBNZ X8, 0x0, 0x3619774
	0x03619754 ADRP X0, 0xADC000
	0x03619758 LDR X0, [X0 + 0x278]
	0x0361975C BL 0x1C16CF4
	0x03619760 ADRP X0, 0xADC000
	0x03619764 LDR X0, [X0 + 0xA28]
	0x03619768 BL 0x1C16CF4
	0x0361976C MOVZ W8, 0x1
	0x03619770 STRB W8, [X23 + 0x4A2]
	0x03619774 CMP W19, 0x3
	0x03619778 STR X31, [X31 + 0x8]
	0x0361977C B.CC 0x3619788
	0x03619780 CMP W19, 0x12C
	0x03619784 B.NE 0x3619834
	0x03619788 CBNZ X21, 0x36197A0
	0x0361978C ADRP X8, 0xADC000
	0x03619790 LDR X8, [X8 + 0x278]
	0x03619794 LDR X8, [X8]
	0x03619798 LDR X8, [X8 + 0xB8]
	0x0361979C LDR X21, [X8]
	0x036197A0 CBZ X20, 0x3619818
	0x036197A4 ADRP X8, 0xADC000
	0x036197A8 LDR X8, [X8 + 0xA28]
	0x036197AC STR X21, [X20 + 0x10]
	0x036197B0 TBZ X22, 0x0, 0x36197C0
	0x036197B4 LDR X9, [X20 + 0x30]
	0x036197B8 ORR X9, X9, 0xFFFFF
	0x036197BC STR X9, [X20 + 0x30]
	0x036197C0 LDR X0, [X8]
	0x036197C4 ADD X23, X20, 0x30
	0x036197C8 ADD X22, X20, 0x20
	0x036197CC LDR W8, [X0 + 0xE0]
	0x036197D0 CBNZ W8, 0x36197D8
	0x036197D4 BL 0x1C16DFC
	0x036197D8 MOV X0, X21
	0x036197DC MOV X1, X23
	0x036197E0 MOV X2, X22
	0x036197E4 BL 0x361E484
	0x036197E8 MOV W1, W0
	0x036197EC ADD X3, X31, 0x8
	0x036197F0 MOV X0, X20
	0x036197F4 MOV W2, W19
	0x036197F8 BL 0x36236D8
	0x036197FC LDR X19, [X31 + 0x8]
	0x03619800 CBNZ X19, 0x361981C
	0x03619804 LDP X20, X19, [X31 + 0x30]
	0x03619808 LDP X22, X21, [X31 + 0x20]
	0x0361980C LDP X30, X23, [X31 + 0x10]
	0x03619810 ADD X31, X31, 0x40
	0x03619814 RET
	0x03619818 BL 0x1C16F20
	0x0361981C ADRP X0, 0xB22000
	0x03619820 LDR X0, [X0 + 0x70]
	0x03619824 BL 0x1C16D08
	0x03619828 MOV X1, X0
	0x0361982C MOV X0, X19
	0x03619830 BL 0x1C16DEC
	0x03619834 ADRP X0, 0xADA000
	0x03619838 LDR X0, [X0 + 0x9D0]
	0x0361983C BL 0x1C16D08
	0x03619840 MOVZ W1, 0x1
	0x03619844 BL 0x1C16D6C
	0x03619848 MOV X20, X0
	0x0361984C STR W19, [X31 + 0x4]
	0x03619850 ADRP X0, 0xB22000
	0x03619854 LDR X0, [X0 + 0x78]
	0x03619858 BL 0x1C16D08
	0x0361985C ADD X1, X31, 0x4
	0x03619860 BL 0x1C16E04
	0x03619864 MOV X19, X0
	0x03619868 MOV X0, X20
	0x0361986C BL 0x19903C0
	0x03619870 MOV X0, X20
	0x03619874 MOV X1, X19
	0x03619878 BL 0x19980B4
	0x0361987C MOV X0, X20
	0x03619880 MOV X1, X31
	0x03619884 MOV X2, X19
	0x03619888 BL 0x1993444
	0x0361988C ADRP X0, 0xB22000
	0x03619890 LDR X0, [X0 + 0x80]
	0x03619894 BL 0x1C16D08
	0x03619898 MOV X1, X20
	0x0361989C MOV X2, X31
	0x036198A0 BL 0x320A16C
	0x036198A4 MOV X19, X0
	0x036198A8 ADRP X0, 0xAE2000
	0x036198AC LDR X0, [X0 + 0x578]
	0x036198B0 BL 0x1C16D08
	0x036198B4 BL 0x1C16F10
	0x036198B8 MOV X1, X19
	0x036198BC MOV X2, X31
	0x036198C0 MOV X20, X0
	0x036198C4 BL 0x3314A68
	0x036198C8 ADRP X0, 0xB22000
	0x036198CC LDR X0, [X0 + 0x70]
	0x036198D0 BL 0x1C16D08
	0x036198D4 MOV X1, X0
	0x036198D8 MOV X0, X20
	0x036198DC BL 0x1C16DEC
	0x036198E0 STP X30, X21, [X31 - 0x20]!
	0x036198E4 STP X20, X19, [X31 + 0x10]
	0x036198E8 MOV X20, X1
	0x036198EC MOV X1, X31
	0x036198F0 MOV W19, W2
	0x036198F4 MOV X21, X0
	0x036198F8 BL 0x33BDD8C
	0x036198FC CBZ X20, 0x361991C
	0x03619900 MOV X1, X20
	0x03619904 MOV W3, W19
	0x03619908 LDP X20, X19, [X31 + 0x10]
	0x0361990C MOV X0, X21
	0x03619910 MOV W2, W31
	0x03619914 LDP X30, X21, [X31], #0x20
	0x03619918 B 0x3619728
	0x0361991C ADRP X0, 0xADF000
	0x03619920 LDR X0, [X0 + 0x528]
	0x03619924 BL 0x1C16D08
	0x03619928 BL 0x1C16F10
	0x0361992C MOV X19, X0
	0x03619930 ADRP X0, 0xB22000
	0x03619934 LDR X0, [X0 + 0x60]
	0x03619938 BL 0x1C16D08
	0x0361993C MOV X1, X0
	0x03619940 MOV X0, X19
	0x03619944 MOV X2, X31
	0x03619948 BL 0x330E100
	0x0361994C ADRP X0, 0xB22000
	0x03619950 LDR X0, [X0 + 0x88]
	0x03619954 BL 0x1C16D08
	0x03619958 MOV X1, X0
	0x0361995C MOV X0, X19
	0x03619960 BL 0x1C16DEC
	0x03619964 STP X30, X21, [X31 - 0x20]!
	0x03619968 STP X20, X19, [X31 + 0x10]
	0x0361996C MOV X20, X1
	0x03619970 MOV X1, X31
	0x03619974 MOV X19, X2
	0x03619978 MOV X21, X0
	0x0361997C BL 0x33BDD8C
	0x03619980 CBZ X20, 0x36199A8
	0x03619984 LDR X8, [X20 + 0x20]
	0x03619988 CBZ X8, 0x36199DC
	0x0361998C MOV X1, X20
	0x03619990 MOV X2, X19
	0x03619994 LDP X20, X19, [X31 + 0x10]
	0x03619998 MOV X0, X21
	0x0361999C MOV W3, W31
	0x036199A0 LDP X30, X21, [X31], #0x20
	0x036199A4 B 0x3619A34
	0x036199A8 ADRP X0, 0xADF000
	0x036199AC LDR X0, [X0 + 0x528]
	0x036199B0 BL 0x1C16D08
	0x036199B4 BL 0x1C16F10
	0x036199B8 MOV X19, X0
	0x036199BC ADRP X0, 0xB22000
	0x036199C0 LDR X0, [X0 + 0x90]
	0x036199C4 BL 0x1C16D08
	0x036199C8 MOV X1, X0
	0x036199CC MOV X0, X19
	0x036199D0 MOV X2, X31
	0x036199D4 BL 0x330E100
	0x036199D8 B 0x3619A0C
	0x036199DC ADRP X0, 0xAE2000
	0x036199E0 LDR X0, [X0 + 0x760]
	0x036199E4 BL 0x1C16D08
	0x036199E8 BL 0x1C16F10
	0x036199EC MOV X19, X0
	0x036199F0 ADRP X0, 0xB22000
	0x036199F4 LDR X0, [X0 + 0x90]
	0x036199F8 BL 0x1C16D08
	0x036199FC MOV X1, X0
	0x03619A00 MOV X0, X19
	0x03619A04 MOV X2, X31
	0x03619A08 BL 0x3316014
	0x03619A0C ADRP X0, 0xB22000
	0x03619A10 LDR X0, [X0 + 0x98]
	0x03619A14 BL 0x1C16D08
	0x03619A18 MOV X1, X0
	0x03619A1C MOV X0, X19
	0x03619A20 BL 0x1C16DEC
	0x03619A24 LDR X8, [X0 + 0x20]
	0x03619A28 CMP X8, 0x0
	0x03619A2C CSET W0, NE
	0x03619A30 RET
	0x03619A34 SUB X31, X31, 0x50
	0x03619A38 STP X30, X23, [X31 + 0x20]
	0x03619A3C STP X22, X21, [X31 + 0x30]
	0x03619A40 STP X20, X19, [X31 + 0x40]
	0x03619A44 ADRP X23, 0xDC7000
	0x03619A48 LDRB W8, [X23 + 0x474]
	0x03619A4C MOV X21, X2
	0x03619A50 MOV X20, X1
	0x03619A54 MOV X19, X0
	0x03619A58 AND W22, W3, 0x1
	0x03619A5C STR X2, [X31 + 0x18]
	0x03619A60 STRB W22, [X31 + 0x14]
	0x03619A64 TBNZ X8, 0x0, 0x3619A7C
	0x03619A68 ADRP X0, 0xADC000
	0x03619A6C LDR X0, [X0 + 0xA28]
	0x03619A70 BL 0x1C16CF4
	0x03619A74 MOVZ W8, 0x1
	0x03619A78 STRB W8, [X23 + 0x474]
	0x03619A7C MOVZ W3, 0x12C
	0x03619A80 MOV X0, X19
	0x03619A84 MOV X1, X21
	0x03619A88 MOV W2, W22
	0x03619A8C STR X31, [X31 + 0x8]
	0x03619A90 BL 0x3619728
	0x03619A94 CBZ X20, 0x3619B88
	0x03619A98 LDR X0, [X20 + 0x20]
	0x03619A9C CBZ X0, 0x3619B88
	0x03619AA0 MOV X1, X31
	0x03619AA4 BL 0x362CE34
	0x03619AA8 TBZ X0, 0x0, 0x3619B10
	0x03619AAC ADRP X22, 0xADC000
	0x03619AB0 LDR X22, [X22 + 0xA28]
	0x03619AB4 LDR X0, [X22]
	0x03619AB8 LDR W8, [X0 + 0xE0]
	0x03619ABC CBNZ W8, 0x3619AC4
	0x03619AC0 BL 0x1C16DFC
	0x03619AC4 ADD X2, X31, 0x18
	0x03619AC8 ADD X3, X31, 0x14
	0x03619ACC ADD X4, X31, 0x8
	0x03619AD0 MOV X0, X20
	0x03619AD4 MOV X1, X19
	0x03619AD8 BL 0x3619BBC
	0x03619ADC LDR X21, [X31 + 0x8]
	0x03619AE0 CBNZ X21, 0x3619B8C
	0x03619AE4 MOV X20, X0
	0x03619AE8 LDR X0, [X22]
	0x03619AEC LDR W8, [X0 + 0xE0]
	0x03619AF0 CBZ W8, 0x3619B48
	0x03619AF4 CBZ X20, 0x3619B50
	0x03619AF8 CMP X20, X19
	0x03619AFC B.EQ 0x3619B74
	0x03619B00 MOV X0, X19
	0x03619B04 MOV X1, X20
	0x03619B08 BL 0x361A0D8
	0x03619B0C B 0x3619B74
	0x03619B10 STRB W31, [X31 + 0x14]
	0x03619B14 LDR X0, [X20 + 0x20]
	0x03619B18 CBZ X0, 0x3619B88
	0x03619B1C ADD X3, X31, 0x8
	0x03619B20 MOV X1, X20
	0x03619B24 MOV X2, X19
	0x03619B28 MOV X4, X31
	0x03619B2C BL 0x362CE90
	0x03619B30 LDR X20, [X31 + 0x8]
	0x03619B34 STR X0, [X31 + 0x18]
	0x03619B38 CBNZ X20, 0x3619BA4
	0x03619B3C MOV X1, X0
	0x03619B40 MOV W2, W31
	0x03619B44 B 0x3619B60
	0x03619B48 BL 0x1C16DFC
	0x03619B4C CBNZ X20, 0x3619AF8
	0x03619B50 LDRB W8, [X31 + 0x14]
	0x03619B54 LDR X1, [X31 + 0x18]
	0x03619B58 CMP W8, 0x0
	0x03619B5C CSET W2, NE
	0x03619B60 MOVZ W3, 0x1
	0x03619B64 MOV X0, X19
	0x03619B68 STR X31, [X19 + 0x20]
	0x03619B6C STP X31, X31, [X19 + 0x30]
	0x03619B70 BL 0x3619728
	0x03619B74 LDP X20, X19, [X31 + 0x40]
	0x03619B78 LDP X22, X21, [X31 + 0x30]
	0x03619B7C LDP X30, X23, [X31 + 0x20]
	0x03619B80 ADD X31, X31, 0x50
	0x03619B84 RET
	0x03619B88 BL 0x1C16F20
	0x03619B8C ADRP X0, 0xB22000
	0x03619B90 LDR X0, [X0 + 0xA0]
	0x03619B94 BL 0x1C16D08
	0x03619B98 MOV X1, X0
	0x03619B9C MOV X0, X21
	0x03619BA0 BL 0x1C16DEC
	0x03619BA4 ADRP X0, 0xB22000
	0x03619BA8 LDR X0, [X0 + 0xA0]
	0x03619BAC BL 0x1C16D08
	0x03619BB0 MOV X1, X0
	0x03619BB4 MOV X0, X20
	0x03619BB8 BL 0x1C16DEC
	0x03619BBC STR X30, [X31 - 0x40]!
	0x03619BC0 STP X24, X23, [X31 + 0x10]
	0x03619BC4 STP X22, X21, [X31 + 0x20]
	0x03619BC8 STP X20, X19, [X31 + 0x30]
	0x03619BCC ADRP X24, 0xDC7000
	0x03619BD0 LDRB W8, [X24 + 0x4AE]
	0x03619BD4 MOV X22, X4
	0x03619BD8 MOV X21, X3
	0x03619BDC MOV X19, X2
	0x03619BE0 MOV X23, X1
	0x03619BE4 MOV X20, X0
	0x03619BE8 TBNZ X8, 0x0, 0x3619C3C
	0x03619BEC ADRP X0, 0xADC000
	0x03619BF0 LDR X0, [X0 + 0x278]
	0x03619BF4 BL 0x1C16CF4
	0x03619BF8 ADRP X0, 0xADC000
	0x03619BFC LDR X0, [X0 + 0xA28]
	0x03619C00 BL 0x1C16CF4
	0x03619C04 ADRP X0, 0xB22000
	0x03619C08 LDR X0, [X0 + 0xA8]
	0x03619C0C BL 0x1C16CF4
	0x03619C10 ADRP X0, 0xB1A000
	0x03619C14 LDR X0, [X0 + 0xB48]
	0x03619C18 BL 0x1C16CF4
	0x03619C1C ADRP X0, 0xAE3000
	0x03619C20 LDR X0, [X0 + 0x988]
	0x03619C24 BL 0x1C16CF4
	0x03619C28 ADRP X0, 0xB22000
	0x03619C2C LDR X0, [X0 + 0xB0]
	0x03619C30 BL 0x1C16CF4
	0x03619C34 MOVZ W8, 0x1
	0x03619C38 STRB W8, [X24 + 0x4AE]
	0x03619C3C STR X31, [X22]
	0x03619C40 CBZ X23, 0x3619CE0
	0x03619C44 LDR X8, [X23 + 0x20]
	0x03619C48 CBZ X8, 0x3619CB4
	0x03619C4C ADRP X22, 0xADC000
	0x03619C50 LDR X22, [X22 + 0xA28]
	0x03619C54 LDR X0, [X22]
	0x03619C58 LDR W8, [X0 + 0xE0]
	0x03619C5C CBNZ W8, 0x3619C68
	0x03619C60 BL 0x1C16DFC
	0x03619C64 LDR X0, [X22]
	0x03619C68 LDR X8, [X0 + 0xB8]
	0x03619C6C LDRB W8, [X8 + 0x72]
	0x03619C70 CBNZ W8, 0x361A068
	0x03619C74 MOV X0, X23
	0x03619C78 BL 0x361CF60
	0x03619C7C ANDS W31, W0, 0x1
	0x03619C80 MOVZ W8, 0x10
	0x03619C84 MOVZ W9, 0x18
	0x03619C88 CSEL X8, X9, X8, NE
	0x03619C8C LDR X0, [X23, X8, LSL]
	0x03619C90 CBZ X0, 0x361A08C
	0x03619C94 MOV W1, W31
	0x03619C98 MOV X2, X31
	0x03619C9C BL 0x3222A1C
	0x03619CA0 AND W8, W0, 0xFFFF
	0x03619CA4 CMP W8, 0x2F
	0x03619CA8 B.NE 0x361A068
	0x03619CAC LDRB W8, [X23 + 0x33]
	0x03619CB0 TBZ X8, 0x5, 0x361A068
	0x03619CB4 MOV X0, X23
	0x03619CB8 BL 0x361CF60
	0x03619CBC ANDS W31, W0, 0x1
	0x03619CC0 MOVZ W8, 0x10
	0x03619CC4 MOVZ W9, 0x18
	0x03619CC8 LDR W10, [X23 + 0x30]
	0x03619CCC CSEL X8, X9, X8, NE
	0x03619CD0 LDR X22, [X23, X8, LSL]
	0x03619CD4 UBFM W8, W10, 0x13, 0x13
	0x03619CD8 STRB W8, [X21]
	0x03619CDC B 0x3619CF4
	0x03619CE0 ADRP X8, 0xADC000
	0x03619CE4 LDR X8, [X8 + 0x278]
	0x03619CE8 LDR X8, [X8]
	0x03619CEC LDR X8, [X8 + 0xB8]
	0x03619CF0 LDR X22, [X8]
	0x03619CF4 CBZ X22, 0x361A08C
	0x03619CF8 LDR W8, [X22 + 0x10]
	0x03619CFC CMP W8, 0x1
	0x03619D00 B.LT 0x3619DF4
	0x03619D04 MOV X0, X22
	0x03619D08 MOV W1, W31
	0x03619D0C MOV X2, X31
	0x03619D10 BL 0x3222A1C
	0x03619D14 ADRP X24, 0xADC000
	0x03619D18 LDR X24, [X24 + 0xA28]
	0x03619D1C MOV W23, W0
	0x03619D20 LDR X8, [X24]
	0x03619D24 LDR W9, [X8 + 0xE0]
	0x03619D28 CBNZ W9, 0x3619D34
	0x03619D2C MOV X0, X8
	0x03619D30 BL 0x1C16DFC
	0x03619D34 AND W8, W23, 0xFFFF
	0x03619D38 CMP W8, 0x20
	0x03619D3C B.LS 0x3619DA0
	0x03619D40 LDR W8, [X22 + 0x10]
	0x03619D44 MOV X0, X22
	0x03619D48 MOV X2, X31
	0x03619D4C SUB W1, W8, 0x1
	0x03619D50 BL 0x3222A1C
	0x03619D54 LDR X8, [X24]
	0x03619D58 MOV W23, W0
	0x03619D5C LDR W9, [X8 + 0xE0]
	0x03619D60 CBNZ W9, 0x3619D6C
	0x03619D64 MOV X0, X8
	0x03619D68 BL 0x1C16DFC
	0x03619D6C AND W8, W23, 0xFFFF
	0x03619D70 CMP W8, 0x20
	0x03619D74 B.HI 0x3619DF4
	0x03619D78 CMP W8, 0x20
	0x03619D7C B.HI 0x3619DF4
	0x03619D80 AND X8, X23, 0xFFFF
	0x03619D84 MOVZ W9, 0x1
	0x03619D88 LSLV X8, X9, X8
	0x03619D8C MOVZ X9, 0x2600
	0x03619D90 MOVK X9, 0x1
	0x03619D94 ANDS X31, X8, X9, 0x0
	0x03619D98 B.NE 0x3619DC4
	0x03619D9C B 0x3619DF4
	0x03619DA0 CMP W8, 0x20
	0x03619DA4 B.HI 0x3619D40
	0x03619DA8 AND X8, X23, 0xFFFF
	0x03619DAC MOVZ W9, 0x1
	0x03619DB0 LSLV X8, X9, X8
	0x03619DB4 MOVZ X9, 0x2600
	0x03619DB8 MOVK X9, 0x1
	0x03619DBC ANDS X31, X8, X9, 0x0
	0x03619DC0 B.EQ 0x3619D40
	0x03619DC4 LDR X0, [X24]
	0x03619DC8 LDR W8, [X0 + 0xE0]
	0x03619DCC CBNZ W8, 0x3619DD8
	0x03619DD0 BL 0x1C16DFC
	0x03619DD4 LDR X0, [X24]
	0x03619DD8 LDR X8, [X0 + 0xB8]
	0x03619DDC MOV X0, X22
	0x03619DE0 MOV X2, X31
	0x03619DE4 LDR X1, [X8 + 0x88]
	0x03619DE8 BL 0x322BBA0
	0x03619DEC MOV X22, X0
	0x03619DF0 CBZ X0, 0x361A08C
	0x03619DF4 LDR W8, [X22 + 0x10]
	0x03619DF8 CBZ W8, 0x361A040
	0x03619DFC MOV X0, X22
	0x03619E00 MOV W1, W31
	0x03619E04 MOV X2, X31
	0x03619E08 BL 0x3222A1C
	0x03619E0C AND W8, W0, 0xFFFF
	0x03619E10 CMP W8, 0x23
	0x03619E14 B.NE 0x3619E44
	0x03619E18 CBZ X20, 0x361A08C
	0x03619E1C LDRB W8, [X20 + 0x33]
	0x03619E20 TBNZ X8, 0x5, 0x3619E44
	0x03619E24 LDR X0, [X20 + 0x20]
	0x03619E28 CBZ X0, 0x361A08C
	0x03619E2C MOVZ W1, 0x40
	0x03619E30 MOV X2, X31
	0x03619E34 BL 0x3629044
	0x03619E38 TBZ X0, 0x0, 0x3619E44
	0x03619E3C MOVZ W1, 0x3F
	0x03619E40 B 0x3619E88
	0x03619E44 MOV X0, X22
	0x03619E48 MOV W1, W31
	0x03619E4C MOV X2, X31
	0x03619E50 BL 0x3222A1C
	0x03619E54 AND W8, W0, 0xFFFF
	0x03619E58 CMP W8, 0x3F
	0x03619E5C B.NE 0x3619EA4
	0x03619E60 CBZ X20, 0x361A08C
	0x03619E64 LDRB W8, [X20 + 0x33]
	0x03619E68 TBNZ X8, 0x5, 0x3619EA4
	0x03619E6C LDR X0, [X20 + 0x20]
	0x03619E70 CBZ X0, 0x361A08C
	0x03619E74 MOVZ W1, 0x20
	0x03619E78 MOV X2, X31
	0x03619E7C BL 0x3629044
	0x03619E80 TBZ X0, 0x0, 0x3619EA4
	0x03619E84 MOVZ W1, 0x1F
	0x03619E88 MOVZ W2, 0x1
	0x03619E8C MOV X0, X20
	0x03619E90 BL 0x3620B04
	0x03619E94 MOV X1, X22
	0x03619E98 MOV X2, X31
	0x03619E9C BL 0x321B938
	0x03619EA0 B 0x361A060
	0x03619EA4 LDR W8, [X22 + 0x10]
	0x03619EA8 CMP W8, 0x3
	0x03619EAC B.LT 0x3619FF4
	0x03619EB0 MOVZ W1, 0x1
	0x03619EB4 MOV X0, X22
	0x03619EB8 MOV X2, X31
	0x03619EBC BL 0x3222A1C
	0x03619EC0 AND W8, W0, 0xFFFF
	0x03619EC4 CMP W8, 0x3A
	0x03619EC8 B.EQ 0x3619EE8
	0x03619ECC MOVZ W1, 0x1
	0x03619ED0 MOV X0, X22
	0x03619ED4 MOV X2, X31
	0x03619ED8 BL 0x3222A1C
	0x03619EDC AND W8, W0, 0xFFFF
	0x03619EE0 CMP W8, 0x7C
	0x03619EE4 B.NE 0x3619FF4
	0x03619EE8 MOV X0, X22
	0x03619EEC MOV W1, W31
	0x03619EF0 MOV X2, X31
	0x03619EF4 BL 0x3222A1C
	0x03619EF8 ADRP X8, 0xADC000
	0x03619EFC LDR X8, [X8 + 0xA28]
	0x03619F00 MOV W23, W0
	0x03619F04 LDR X8, [X8]
	0x03619F08 LDR W9, [X8 + 0xE0]
	0x03619F0C CBNZ W9, 0x3619F18
	0x03619F10 MOV X0, X8
	0x03619F14 BL 0x1C16DFC
	0x03619F18 AND W8, W23, 0xFFFFFFDF
	0x03619F1C SUB W8, W8, 0x41
	0x03619F20 AND W8, W8, 0xFFFF
	0x03619F24 CMP W8, 0x19
	0x03619F28 B.HI 0x3619FF4
	0x03619F2C MOVZ W1, 0x2
	0x03619F30 MOV X0, X22
	0x03619F34 MOV X2, X31
	0x03619F38 BL 0x3222A1C
	0x03619F3C AND W8, W0, 0xFFFF
	0x03619F40 CMP W8, 0x5C
	0x03619F44 B.EQ 0x3619F64
	0x03619F48 MOVZ W1, 0x2
	0x03619F4C MOV X0, X22
	0x03619F50 MOV X2, X31
	0x03619F54 BL 0x3222A1C
	0x03619F58 AND W8, W0, 0xFFFF
	0x03619F5C CMP W8, 0x2F
	0x03619F60 B.NE 0x3619FF4
	0x03619F64 CBZ X20, 0x361A08C
	0x03619F68 LDRB W8, [X20 + 0x33]
	0x03619F6C TBNZ X8, 0x5, 0x361A080
	0x03619F70 LDR X0, [X20 + 0x20]
	0x03619F74 CBZ X0, 0x361A08C
	0x03619F78 MOVZ W1, 0x100000
	0x03619F7C MOV X2, X31
	0x03619F80 BL 0x3629044
	0x03619F84 TBZ X0, 0x0, 0x3619FF4
	0x03619F88 LDR X0, [X20 + 0x20]
	0x03619F8C CBZ X0, 0x361A08C
	0x03619F90 LDR X21, [X20 + 0x30]
	0x03619F94 MOVZ W1, 0x200000
	0x03619F98 MOV X2, X31
	0x03619F9C BL 0x3629044
	0x03619FA0 ADRP X8, 0xB1A000
	0x03619FA4 ADRP X9, 0xB22000
	0x03619FA8 ADRP X10, 0xAE3000
	0x03619FAC ADRP X11, 0xB22000
	0x03619FB0 LDR X8, [X8 + 0xB48]
	0x03619FB4 LDR X9, [X9 + 0xA8]
	0x03619FB8 LDR X10, [X10 + 0x988]
	0x03619FBC LDR X11, [X11 + 0xB0]
	0x03619FC0 ANDS W31, W0, 0x1
	0x03619FC4 CSEL X8, X9, X8, NE
	0x03619FC8 MOV X0, X20
	0x03619FCC CSEL X9, X11, X10, NE
	0x03619FD0 ANDS X31, X21, 0x1FFFFF
	0x03619FD4 CSEL X8, X9, X8, EQ
	0x03619FD8 LDR X21, [X8]
	0x03619FDC BL 0x361CEF0
	0x03619FE0 MOV X1, X21
	0x03619FE4 MOV X2, X22
	0x03619FE8 MOV X3, X31
	0x03619FEC BL 0x32274B8
	0x03619FF0 B 0x361A060
	0x03619FF4 ADRP X8, 0xADC000
	0x03619FF8 LDR X8, [X8 + 0xA28]
	0x03619FFC LDRB W21, [X21]
	0x0361A000 LDR X0, [X8]
	0x0361A004 LDR W8, [X0 + 0xE0]
	0x0361A008 CBNZ W8, 0x361A010
	0x0361A00C BL 0x1C16DFC
	0x0361A010 CMP W21, 0x0
	0x0361A014 CSET W2, NE
	0x0361A018 MOV X0, X20
	0x0361A01C MOV X1, X22
	0x0361A020 MOV X3, X19
	0x0361A024 BL 0x361A404
	0x0361A028 CBZ X20, 0x361A08C
	0x0361A02C LDR X8, [X19]
	0x0361A030 LDR X9, [X20 + 0x10]
	0x0361A034 CMP X8, X9
	0x0361A038 CSEL X23, X20, X31, EQ
	0x0361A03C B 0x361A068
	0x0361A040 CBZ X20, 0x361A08C
	0x0361A044 LDR X8, [X20 + 0x30]
	0x0361A048 MOVZ W1, 0x7F
	0x0361A04C MOV X0, X20
	0x0361A050 ANDS X31, X8, 0xFFFFF
	0x0361A054 MOVZ W8, 0x3
	0x0361A058 CSINC W2, W8, W31, EQ
	0x0361A05C BL 0x3620B04
	0x0361A060 MOV X23, X31
	0x0361A064 STR X0, [X19]
	0x0361A068 MOV X0, X23
	0x0361A06C LDP X20, X19, [X31 + 0x30]
	0x0361A070 LDP X22, X21, [X31 + 0x20]
	0x0361A074 LDP X24, X23, [X31 + 0x10]
	0x0361A078 LDR X30, [X31], #0x40
	0x0361A07C RET
	0x0361A080 MOV X23, X31
	0x0361A084 STR X22, [X19]
	0x0361A088 B 0x361A068
	0x0361A08C BL 0x1C16F20
	0x0361A090 CMP X0, X1
	0x0361A094 B.EQ 0x361A0CC
	0x0361A098 MOV X8, X0
	0x0361A09C MOVZ W9, 0x1
	0x0361A0A0 CBZ X0, 0x361A0D0
	0x0361A0A4 CBZ X1, 0x361A0D0
	0x0361A0A8 STR X30, [X31 - 0x10]!
	0x0361A0AC LDR X9, [X1]
	0x0361A0B0 MOV X0, X1
	0x0361A0B4 MOV X1, X8
	0x0361A0B8 LDP X10, X2, [X9 + 0x138]
	0x0361A0BC BLR X10
	0x0361A0C0 EOR W9, W0, 0x1
	0x0361A0C4 LDR X30, [X31], #0x10
	0x0361A0C8 B 0x361A0D0
	0x0361A0CC MOV W9, W31
	0x0361A0D0 AND W0, W9, 0x1
	0x0361A0D4 RET
	0x0361A0D8 STP X30, X21, [X31 - 0x20]!
	0x0361A0DC STP X20, X19, [X31 + 0x10]
	0x0361A0E0 STR X31, [X0 + 0x38]
	0x0361A0E4 CBZ X1, 0x361A1F4
	0x0361A0E8 LDR X8, [X1 + 0x30]
	0x0361A0EC MOV X20, X1
	0x0361A0F0 MOV X19, X0
	0x0361A0F4 STR X8, [X0 + 0x30]
	0x0361A0F8 TBZ X8, 0x1E, 0x361A19C
	0x0361A0FC MOVN X9, 0xFFFF
	0x0361A100 MOVK X9, 0x3FFF0000
	0x0361A104 AND X9, X8, X9, 0x0
	0x0361A108 STR X9, [X19 + 0x30]
	0x0361A10C LDR X9, [X20 + 0x38]
	0x0361A110 CBZ X9, 0x361A1F4
	0x0361A114 LDRH W21, [X9 + 0x30]
	0x0361A118 TBZ X8, 0x17, 0x361A18C
	0x0361A11C LDR X0, [X20 + 0x10]
	0x0361A120 CBZ X0, 0x361A1F4
	0x0361A124 MOV W1, W21
	0x0361A128 MOV X2, X31
	0x0361A12C BL 0x3222A1C
	0x0361A130 AND W8, W0, 0xFFFF
	0x0361A134 CMP W8, 0x3A
	0x0361A138 B.EQ 0x361A160
	0x0361A13C LDR X8, [X20 + 0x38]
	0x0361A140 CBZ X8, 0x361A1F4
	0x0361A144 LDRH W8, [X8 + 0x2C]
	0x0361A148 CMP W21, W8
	0x0361A14C B.LE 0x361A160
	0x0361A150 LDR X0, [X20 + 0x10]
	0x0361A154 SUB W21, W21, 0x1
	0x0361A158 CBNZ X0, 0x361A124
	0x0361A15C B 0x361A1F4
	0x0361A160 LDR X0, [X20 + 0x10]
	0x0361A164 CBZ X0, 0x361A1F4
	0x0361A168 MOV W1, W21
	0x0361A16C MOV X2, X31
	0x0361A170 BL 0x3222A1C
	0x0361A174 AND W8, W0, 0xFFFF
	0x0361A178 CMP W8, 0x3A
	0x0361A17C B.EQ 0x361A18C
	0x0361A180 LDR X8, [X20 + 0x38]
	0x0361A184 CBZ X8, 0x361A1F4
	0x0361A188 LDRH W21, [X8 + 0x30]
	0x0361A18C LDR X8, [X19 + 0x30]
	0x0361A190 SXTW X9, W21
	0x0361A194 ORR X8, X8, X9, 0x0
	0x0361A198 STR X8, [X19 + 0x30]
	0x0361A19C LDR X8, [X20 + 0x20]
	0x0361A1A0 MOV X0, X20
	0x0361A1A4 STR X8, [X19 + 0x20]
	0x0361A1A8 LDR X8, [X20 + 0x10]
	0x0361A1AC STR X8, [X19 + 0x10]
	0x0361A1B0 LDRB W8, [X20 + 0x40]
	0x0361A1B4 STRB W8, [X19 + 0x40]
	0x0361A1B8 BL 0x361CF60
	0x0361A1BC TBZ X0, 0x0, 0x361A1C8
	0x0361A1C0 LDR X8, [X20 + 0x18]
	0x0361A1C4 STR X8, [X19 + 0x18]
	0x0361A1C8 MOV X0, X20
	0x0361A1CC BL 0x3617E68
	0x0361A1D0 TBZ X0, 0x0, 0x361A1E8
	0x0361A1D4 LDRB W8, [X20 + 0x34]
	0x0361A1D8 ANDS W31, W8, 0x11111111
	0x0361A1DC B.EQ 0x361A1E8
	0x0361A1E0 LDR X8, [X20 + 0x28]
	0x0361A1E4 STR X8, [X19 + 0x28]
	0x0361A1E8 LDP X20, X19, [X31 + 0x10]
	0x0361A1EC LDP X30, X21, [X31], #0x20
	0x0361A1F0 RET
	0x0361A1F4 BL 0x1C16F20
	0x0361A1F8 SUB X31, X31, 0x40
	0x0361A1FC STR X30, [X31 + 0x10]
	0x0361A200 STP X22, X21, [X31 + 0x20]
	0x0361A204 STP X20, X19, [X31 + 0x30]
	0x0361A208 ADRP X22, 0xDC6000
	0x0361A20C LDRB W8, [X22 + 0x475]
	0x0361A210 MOV X21, X2
	0x0361A214 MOV X20, X1
	0x0361A218 MOV X19, X0
	0x0361A21C TBNZ X8, 0x0, 0x361A234
	0x0361A220 ADRP X0, 0xADB000
	0x0361A224 LDR X0, [X0 + 0xA28]
	0x0361A228 BL 0x1C16CF4
	0x0361A22C MOVZ W8, 0x1
	0x0361A230 STRB W8, [X22 + 0x475]
	0x0361A234 MOV X0, X19
	0x0361A238 MOV X1, X31
	0x0361A23C STR X31, [X31 + 0x8]
	0x0361A240 BL 0x33BDD8C
	0x0361A244 CBZ X20, 0x361A358
	0x0361A248 LDR X8, [X20 + 0x20]
	0x0361A24C CBZ X8, 0x361A38C
	0x0361A250 MOV X0, X19

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X20, 0xDC8000
	015 Move W8, [X20+1171]
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {32}
	021 Move X0, 0xADD000
	022 Move X0, [X0+632]
	023 Call 0x1C17CF4
	024 Move X0, 0xB23000
	025 Move X0, [X0+72]
	026 Call 0x1C17CF4
	027 Move X0, 0xADD000
	028 Move X0, [X0+2600]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X20+1171], W8
	032 NotImplemented "Instruction STRH not yet implemented."
	033 Move [X31+4], W31
	034 Move X1, [X19+48]
	035 Move TEMP, X1
	036 And TEMP, TEMP, 0x40000000
	037 Compare TEMP, 0x40000000
	038 JumpIfEqual {42}
	039 Move X0, X19
	040 Call Uri.CreateUriInfo, X0, X1
	041 Move X1, [X19+48]
	042 Move TEMP, X1
	043 And TEMP, TEMP, 0x1000000
	044 Compare TEMP, 0x1000000
	045 JumpIfEqual {144}
	046 Move W9, [X19+64]
	047 Move X10, 10
	048 Move X8, [X19+56]
	049 Move X11, 2
	050 And X10, X1, X10
	051 NotImplemented "Instruction CMP not yet implemented."
	052 NotImplemented "Instruction CSET not yet implemented."
	053 NotImplemented "Instruction CMP not yet implemented."
	054 NotImplemented "Instruction CSET not yet implemented."
	055 Compare X8, 0
	056 JumpIfEqual {143}
	057 NotImplemented "Instruction LDRH not yet implemented."
	058 NotImplemented "Instruction STRH not yet implemented."
	059 Move X21, [X19+16]
	060 Compare X21, 0
	061 JumpIfEqual {143}
	062 Move X8, [X19+32]
	063 Compare X8, 0
	064 JumpIfEqual {143}
	065 NotImplemented "Instruction LDRH not yet implemented."
	066 Move W24, [X8+16]
	067 Move X0, X31
	068 Call RuntimeHelpers.get_OffsetToStringData
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Add X21, X21, W0
	071 Move X26, 0xADD000
	072 Move X26, [X26+2600]
	073 Subtract X22, X20, 1
	074 NotImplemented "Instruction LDRH not yet implemented."
	075 Move X0, [X26]
	076 Move W8, [X0+224]
	077 Compare W8, 0
	078 JumpIfNotEqual {80}
	079 Call 0x1C17DFC
	080 NotImplemented "Instruction CMP not yet implemented."
	081 Move W8, W28
	082 Move W9, 1
	083 NotImplemented "Instruction LSLV not yet implemented."
	084 Move X9, 0x2600
	085 NotImplemented "Instruction MOVK not yet implemented."
	086 And X31, X8, X9
	087 NotImplemented "Instruction CMP not yet implemented."
	088 Move X28, 0x2600
	089 Move W20, 1
	090 NotImplemented "Instruction MOVK not yet implemented."
	091 And W8, W22, 0xFFFF
	092 Move X0, [X26]
	093 Subtract W22, W8, 1
	094 Move W8, W22
	095 ShiftRight W8, 31
	096 And W8, W8, 0x3FFFFFFF
	097 And X8, X8, 0x1FFFF
	098 Move W9, [X0+224]
	099 NotImplemented "Instruction LDRH not yet implemented."
	100 Compare W9, 0
	101 JumpIfNotEqual {103}
	102 Call 0x1C17DFC
	103 NotImplemented "Instruction CMP not yet implemented."
	104 Move W8, W29
	105 NotImplemented "Instruction LSLV not yet implemented."
	106 And X31, X8, X28
	107 NotImplemented "Instruction CMP not yet implemented."
	108 And W8, W22, 0xFFFF
	109 Add W20, W8, 1
	110 Move X8, [X19+48]
	111 Move TEMP, X8
	112 And TEMP, TEMP, 0x20000000
	113 Compare TEMP, 0x20000000
	114 JumpIfEqual {146}
	115 Move X9, [X19+32]
	116 Compare X9, 0
	117 JumpIfEqual {143}
	118 Move X10, [X9+32]
	119 Compare X10, 0
	120 JumpIfEqual {143}
	121 NotImplemented "Instruction LDRH not yet implemented."
	122 Compare W28, 0
	123 JumpIfEqual {152}
	124 Move X26, X31
	125 Move W22, W31
	126 Move X0, [X9+32]
	127 Compare X0, 0
	128 JumpIfEqual {143}
	129 Move W1, W22
	130 Move X2, X31
	131 Call String.get_Chars, X0, X1
	132 Add X8, X27, W22
	133 NotImplemented "Instruction LDRH not yet implemented."
	134 Add W9, W22, 1
	135 And W22, W9, 0xFFFF
	136 NotImplemented "Instruction CMP not yet implemented."
	137 NotImplemented "Instruction CSET not yet implemented."
	138 NotImplemented "Instruction CMP not yet implemented."
	139 Or X26, X26, X8
	140 Move X9, [X19+32]
	141 Compare X9, 0
	142 JumpIfNotEqual {126}
	143 Call 0x1C17F20
	144 Move X21, [X19+56]
	145 Move X23, X31
	146 Move W26, 1
	147 Move X8, [X19+48]
	148 Move TEMP, X8
	149 And TEMP, TEMP, 0x100000
	150 Compare TEMP, 0x100000
	151 JumpIfEqual {158}
	152 Move X26, X31
	153 Move W22, W31
	154 Move TEMP, X8
	155 And TEMP, TEMP, 0x100000
	156 Compare TEMP, 0x100000
	157 JumpIfNotEqual {171}
	158 Add X9, X27, W22
	159 Add W10, W9, 3
	160 NotImplemented "Instruction CMP not yet implemented."
	161 Add X10, X21, X9
	162 NotImplemented "Instruction LDRH not yet implemented."
	163 NotImplemented "Instruction CMP not yet implemented."
	164 Move X9, X9
	165 ShiftRight X9, 63
	166 And X9, X9, 0x3FFFFFFF
	167 Add X9, X21, W9
	168 NotImplemented "Instruction LDRH not yet implemented."
	169 NotImplemented "Instruction CMP not yet implemented."
	170 Or X26, X26, 1
	171 Move TEMP, X8
	172 And TEMP, TEMP, 0x200000
	173 Compare TEMP, 0x200000
	174 JumpIfNotEqual {201}
	175 Move X8, [X19+56]
	176 Compare X8, 0
	177 JumpIfEqual {143}
	178 NotImplemented "Instruction LDRH not yet implemented."
	179 Add X2, X31, 8
	180 Move W4, 64
	181 Move X0, X19
	182 NotImplemented "Instruction STRH not yet implemented."
	183 NotImplemented "Instruction LDRH not yet implemented."
	184 Move X1, X21
	185 Call Uri.CheckCanonical, X0, X1, X2, X3, X4
	186 NotImplemented "Instruction ORN not yet implemented."
	187 Move W8, 17
	188 And W10, W10, 2
	189 Move W11, [X19+64]
	190 Move W9, 91
	191 And W8, W0, W8
	192 Or X10, X26, X10
	193 And W9, W0, W9
	194 NotImplemented "Instruction CMP not yet implemented."
	195 Or X8, X10, 255
	196 NotImplemented "Instruction CSEL not yet implemented."
	197 NotImplemented "Instruction CMP not yet implemented."
	198 NotImplemented "Instruction CCMP not yet implemented."
	199 Or X9, X8, 0xFFFFFFFFFF
	200 NotImplemented "Instruction CSEL not yet implemented."
	201 Move X8, [X19+56]
	202 Compare X8, 0
	203 JumpIfEqual {143}
	204 NotImplemented "Instruction LDRH not yet implemented."
	205 Or W25, W25, W23
	206 NotImplemented "Instruction STRH not yet implemented."
	207 NotImplemented "Instruction STRH not yet implemented."
	208 Move TEMP, X25
	209 And TEMP, TEMP, 1
	210 Compare TEMP, 1
	211 JumpIfNotEqual {215}
	212 Move X23, [X19+16]
	213 Compare X23, 0
	214 JumpIfNotEqual {346}
	215 Move X9, [X19+48]
	216 Move TEMP, X9
	217 And TEMP, TEMP, 0x8000000
	218 Compare TEMP, 0x8000000
	219 JumpIfNotEqual {251}
	220 Move TEMP, X9
	221 And TEMP, TEMP, 0x20000000
	222 Compare TEMP, 0x20000000
	223 JumpIfEqual {245}
	224 Move X8, [X19+32]
	225 Compare X8, 0
	226 JumpIfEqual {143}
	227 Move X22, 0xADD000
	228 Move X22, [X22+2600]
	229 Move X20, [X8+32]
	230 Move X0, [X22]
	231 Move W9, [X0+224]
	232 Compare W9, 0
	233 JumpIfNotEqual {236}
	234 Call 0x1C17DFC
	235 Move X0, [X22]
	236 Move X8, [X0+184]
	237 Move X0, X20
	238 Move X2, X31
	239 Move X1, [X8+96]
	240 Call String.Concat, X0, X1
	241 Move X8, [X19+56]
	242 Move [X19+16], X0
	243 Compare X8, 0
	244 JumpIfNotEqual {252}
	245 Move X9, 0xADD000
	246 Move X9, [X9+632]
	247 Move X9, [X9]
	248 Move X9, [X9+184]
	249 Move X9, [X9]
	250 Move [X19+16], X9
	251 Move X0, [X19+16]
	252 Compare X0, 0
	253 JumpIfEqual {143}
	254 NotImplemented "Instruction LDRH not yet implemented."
	255 NotImplemented "Instruction STRH not yet implemented."
	256 NotImplemented "Instruction STRH not yet implemented."
	257 Move X20, [X19+24]
	258 Compare X20, 0
	259 JumpIfEqual {143}
	260 Move W22, [X20+16]
	261 And W31, W24, 96
	262 Move W4, 0xFFFF
	263 Move X8, [X19+48]
	264 Move TEMP, X8
	265 And TEMP, TEMP, 0x20000000
	266 Compare TEMP, 0x20000000
	267 JumpIfEqual {299}
	268 Move X0, [X19+32]
	269 Compare X0, 0
	270 JumpIfEqual {143}
	271 Move W1, 32
	272 Move X2, X31
	273 Call UriParser.InFact, X0, X1
	274 Move TEMP, X0
	275 And TEMP, TEMP, 1
	276 Compare TEMP, 1
	277 JumpIfNotEqual {279}
	278 Move W4, 63
	279 Move W23, W0
	280 Move X0, [X19+32]
	281 Compare X0, 0
	282 JumpIfEqual {143}
	283 Move W1, 64
	284 Move X2, X31
	285 Call UriParser.InFact, X0, X1
	286 And W31, W0, 1
	287 Move TEMP, 1
	288 Not TEMP
	289 Move W8, TEMP
	290 Move W9, 35
	291 NotImplemented "Instruction CSEL not yet implemented."
	292 NotImplemented "Instruction CMP not yet implemented."
	293 NotImplemented "Instruction CSET not yet implemented."
	294 NotImplemented "Instruction BIC not yet implemented."
	295 Move TEMP, X8
	296 And TEMP, TEMP, 1
	297 Compare TEMP, 1
	298 JumpIfNotEqual {143}
	299 Add X2, X31, 12
	300 Move X0, X19
	301 Move X1, X20
	302 Move W3, W22
	303 Call Uri.FindEndOfComponent, X0, X1, X2, X3, X4
	304 NotImplemented "Instruction LDRH not yet implemented."
	305 Move X1, [X19+24]
	306 Move W4, 16
	307 Move W2, W21
	308 Move W3, W22
	309 Call Uri.EscapeUnescapeIri, X0, X1, X2, X3, X4
	310 Move X8, 0xB23000
	311 Move X8, [X8+72]
	312 Move X20, X0
	313 Move X8, [X8]
	314 Move W9, [X8+224]
	315 Compare W9, 0
	316 JumpIfNotEqual {319}
	317 Move X0, X8
	318 Call 0x1C17DFC
	319 Move X0, X31
	320 Call UriParser.get_ShouldUseLegacyV2Quirks
	321 Move X21, [X19+16]
	322 Move TEMP, X0
	323 And TEMP, TEMP, 1
	324 Compare TEMP, 1
	325 JumpIfNotEqual {336}
	326 Compare X20, 0
	327 JumpIfEqual {763}
	328 Move W1, 1
	329 Move X0, X20
	330 Move X2, X31
	331 Call String.Normalize, X0, X1
	332 Move X1, X0
	333 Move X0, X21
	334 Move X2, X31
	335 Call String.Concat, X0, X1
	336 Move X0, X21
	337 Move X1, X20
	338 Move X2, X31
	339 Call String.Concat, X0, X1
	340 Move X23, X0
	341 Move [X19+16], X0
	342 Compare X0, 0
	343 JumpIfEqual {143}
	344 Move W20, [X23+16]
	345 Move W21, W22
	346 Move X0, X31
	347 Call RuntimeHelpers.get_OffsetToStringData
	348 Add X23, X23, W0
	349 And W31, W24, 96
	350 Move W4, 0xFFFF
	351 Move X8, [X19+48]
	352 Move TEMP, X8
	353 And TEMP, TEMP, 0x20000000
	354 Compare TEMP, 0x20000000
	355 JumpIfEqual {379}
	356 Move TEMP, X24
	357 And TEMP, TEMP, 32
	358 Compare TEMP, 32
	359 JumpIfEqual {378}
	360 Move X0, [X19+32]
	361 Compare X0, 0
	362 JumpIfEqual {143}
	363 Move W1, 64
	364 Move X2, X31
	365 Call UriParser.InFact, X0, X1
	366 And W31, W0, 1
	367 Move TEMP, 1
	368 Not TEMP
	369 Move W8, TEMP
	370 Move W9, 35
	371 NotImplemented "Instruction CSEL not yet implemented."
	372 Compare X19, 0
	373 JumpIfEqual {143}
	374 Move TEMP, X24
	375 And TEMP, TEMP, 32
	376 Compare TEMP, 32
	377 JumpIfNotEqual {379}
	378 Move W4, 63
	379 Add X2, X31, 8
	380 Move X0, X19
	381 Move X1, X23
	382 Move W3, W20
	383 Call Uri.CheckCanonical, X0, X1, X2, X3, X4
	384 Move X8, [X19+48]
	385 Move W22, W0
	386 Move TEMP, X24
	387 And TEMP, TEMP, 0x200000
	388 Compare TEMP, 0x200000
	389 JumpIfNotEqual {403}
	390 Move TEMP, X8
	391 And TEMP, TEMP, 0x100000
	392 Compare TEMP, 0x100000
	393 JumpIfNotEqual {403}
	394 Move X9, [X19+56]
	395 Compare X9, 0
	396 JumpIfEqual {143}
	397 NotImplemented "Instruction LDRH not yet implemented."
	398 NotImplemented "Instruction CMP not yet implemented."
	399 NotImplemented "Instruction LDRH not yet implemented."
	400 NotImplemented "Instruction CMP not yet implemented."
	401 NotImplemented "Instruction CMP not yet implemented."
	402 Or X26, X26, 0x7FFF
	403 Move TEMP, X8
	404 And TEMP, TEMP, 0x8000000
	405 Compare TEMP, 0x8000000
	406 JumpIfEqual {428}
	407 Move TEMP, X8
	408 And TEMP, TEMP, 0x100000
	409 Compare TEMP, 0x100000
	410 JumpIfEqual {417}
	411 And W8, W22, 16
	412 Or X9, X26, 2047
	413 Move W8, W8
	414 ShiftRight W8, 4
	415 And W8, W8, 0x7FFFFFFF
	416 NotImplemented "Instruction CSEL not yet implemented."
	417 And W31, W24, 0xC00000
	418 Move X0, [X19+32]
	419 Compare X0, 0
	420 JumpIfEqual {143}
	421 Move W1, 0x2000000
	422 Move X2, X31
	423 Call UriParser.InFact, X0, X1
	424 Move TEMP, X0
	425 And TEMP, TEMP, 1
	426 Compare TEMP, 1
	427 JumpIfNotEqual {411}
	428 Move TEMP, X22
	429 And TEMP, TEMP, 128
	430 Compare TEMP, 128
	431 JumpIfEqual {433}
	432 Move W0, W31
	433 Move X0, [X19+32]
	434 Compare X0, 0
	435 JumpIfEqual {143}
	436 Move W1, 0x2000000
	437 Move X2, X31
	438 Call UriParser.InFact, X0, X1
	439 Move W8, 1040
	440 Or X8, X26, X8
	441 And W31, W0, 1
	442 NotImplemented "Instruction CSEL not yet implemented."
	443 And W31, W24, 0x400000
	444 Move W8, 1040
	445 NotImplemented "Instruction CSET not yet implemented."
	446 And W31, W22, 16
	447 Or X10, X26, X8
	448 NotImplemented "Instruction CSET not yet implemented."
	449 Or W8, W9, W8
	450 Xor W9, W8, 1
	451 NotImplemented "Instruction CMP not yet implemented."
	452 Or W8, W0, W9
	453 NotImplemented "Instruction CSEL not yet implemented."
	454 Move TEMP, X24
	455 And TEMP, TEMP, 0x800000
	456 Compare TEMP, 0x800000
	457 JumpIfNotEqual {463}
	458 And X31, X9, 2047
	459 And W10, W22, 4
	460 NotImplemented "Instruction CCMP not yet implemented."
	461 Or X10, X9, 0x3FFF
	462 NotImplemented "Instruction CSEL not yet implemented."
	463 Or X10, X9, 0xFFFF
	464 And W31, W22, 16
	465 NotImplemented "Instruction CSEL not yet implemented."
	466 Move X11, [X19+48]
	467 And X10, X11, 0x3FFFFFFF
	468 Move TEMP, X22
	469 And TEMP, TEMP, 2
	470 Compare TEMP, 2
	471 JumpIfEqual {485}
	472 Compare X10, 0
	473 JumpIfNotEqual {476}
	474 Or X9, X9, 31
	475 Move W8, 1
	476 Move TEMP, X22
	477 And TEMP, TEMP, 32
	478 Compare TEMP, 32
	479 JumpIfEqual {474}
	480 Move TEMP, X11
	481 And TEMP, TEMP, 0x80000
	482 Compare TEMP, 0x80000
	483 JumpIfEqual {474}
	484 Move W10, 1
	485 NotImplemented "Instruction CMP not yet implemented."
	486 Move W10, 33
	487 And W10, W22, W10
	488 And W11, W22, 0xFFFFFFFE
	489 Move W12, [X19+64]
	490 NotImplemented "Instruction CCMP not yet implemented."
	491 NotImplemented "Instruction CSEL not yet implemented."
	492 Or X11, X9, 2047
	493 And W31, W10, 1
	494 NotImplemented "Instruction CSEL not yet implemented."
	495 Compare W12, 0
	496 JumpIfEqual {505}
	497 Move W9, 75
	498 And W9, W10, W9
	499 NotImplemented "Instruction CMP not yet implemented."
	500 Xor W8, W8, 1
	501 NotImplemented "Instruction CSET not yet implemented."
	502 Or X10, X23, 0x1FFFFFFFFFF
	503 And W31, W9, W8
	504 NotImplemented "Instruction CSEL not yet implemented."
	505 Move TEMP, X25
	506 And TEMP, TEMP, 1
	507 Compare TEMP, 1
	508 JumpIfEqual {575}
	509 Move X0, [X19+24]
	510 Compare X0, 0
	511 JumpIfEqual {143}
	512 Move W8, [X0+16]
	513 NotImplemented "Instruction CMP not yet implemented."
	514 Move W1, W21
	515 Move X2, X31
	516 Call String.get_Chars, X0, X1
	517 And W8, W0, 0xFFFF
	518 NotImplemented "Instruction CMP not yet implemented."
	519 Add W8, W21, 1
	520 NotImplemented "Instruction STRH not yet implemented."
	521 Move X1, [X19+24]
	522 Compare X1, 0
	523 JumpIfEqual {143}
	524 Move W3, [X1+16]
	525 And W31, W24, 64
	526 Move W8, 35
	527 Move TEMP, 1
	528 Not TEMP
	529 Move W9, TEMP
	530 NotImplemented "Instruction CSEL not yet implemented."
	531 Add X2, X31, 12
	532 Move X0, X19
	533 Call Uri.FindEndOfComponent, X0, X1, X2, X3, X4
	534 NotImplemented "Instruction LDRH not yet implemented."
	535 Move X1, [X19+24]
	536 Move W4, 32
	537 Move W2, W21
	538 Move W3, W22
	539 Call Uri.EscapeUnescapeIri, X0, X1, X2, X3, X4
	540 Move X8, 0xB23000
	541 Move X8, [X8+72]
	542 Move X20, X0
	543 Move X8, [X8]
	544 Move W9, [X8+224]
	545 Compare W9, 0
	546 JumpIfNotEqual {549}
	547 Move X0, X8
	548 Call 0x1C17DFC
	549 Move X0, X31
	550 Call UriParser.get_ShouldUseLegacyV2Quirks
	551 Move X21, [X19+16]
	552 Move TEMP, X0
	553 And TEMP, TEMP, 1
	554 Compare TEMP, 1
	555 JumpIfNotEqual {566}
	556 Compare X20, 0
	557 JumpIfEqual {764}
	558 Move W1, 1
	559 Move X0, X20
	560 Move X2, X31
	561 Call String.Normalize, X0, X1
	562 Move X1, X0
	563 Move X0, X21
	564 Move X2, X31
	565 Call String.Concat, X0, X1
	566 Move X0, X21
	567 Move X1, X20
	568 Move X2, X31
	569 Call String.Concat, X0, X1
	570 Move [X19+16], X0
	571 Compare X0, 0
	572 JumpIfEqual {143}
	573 Move W20, [X0+16]
	574 Move W21, W22
	575 Move X8, [X19+56]
	576 Compare X8, 0
	577 JumpIfEqual {143}
	578 NotImplemented "Instruction LDRH not yet implemented."
	579 NotImplemented "Instruction STRH not yet implemented."
	580 Move X22, [X19+16]
	581 Compare X22, 0
	582 JumpIfEqual {586}
	583 Move X0, X31
	584 Call RuntimeHelpers.get_OffsetToStringData
	585 Add X22, X22, W0
	586 NotImplemented "Instruction CMP not yet implemented."
	587 NotImplemented "Instruction LDRH not yet implemented."
	588 NotImplemented "Instruction CMP not yet implemented."
	589 And W31, W24, 64
	590 Move W9, 35
	591 Move TEMP, 1
	592 Not TEMP
	593 Move W10, TEMP
	594 Add W8, W26, 1
	595 NotImplemented "Instruction CSEL not yet implemented."
	596 Add X2, X31, 8
	597 Move X0, X19
	598 Move X1, X22
	599 Move W3, W20
	600 NotImplemented "Instruction STRH not yet implemented."
	601 Call Uri.CheckCanonical, X0, X1, X2, X3, X4
	602 Or X8, X23, 63
	603 And W31, W0, 2
	604 Move W9, 17
	605 Move W11, [X19+64]
	606 NotImplemented "Instruction CSEL not yet implemented."
	607 Move W10, 91
	608 And W9, W0, W9
	609 And W10, W0, W10
	610 NotImplemented "Instruction CMP not yet implemented."
	611 Or X9, X8, 4095
	612 NotImplemented "Instruction CSEL not yet implemented."
	613 NotImplemented "Instruction CMP not yet implemented."
	614 NotImplemented "Instruction CCMP not yet implemented."
	615 Or X9, X8, 0x3FFFFFFFFFF
	616 NotImplemented "Instruction CSEL not yet implemented."
	617 Move TEMP, X25
	618 And TEMP, TEMP, 1
	619 Compare TEMP, 1
	620 JumpIfEqual {680}
	621 Move X0, [X19+24]
	622 Compare X0, 0
	623 JumpIfEqual {143}
	624 Move W8, [X0+16]
	625 NotImplemented "Instruction CMP not yet implemented."
	626 Move W1, W21
	627 Move X2, X31
	628 Call String.get_Chars, X0, X1
	629 And W8, W0, 0xFFFF
	630 NotImplemented "Instruction CMP not yet implemented."
	631 Add W8, W21, 1
	632 NotImplemented "Instruction STRH not yet implemented."
	633 Move X1, [X19+24]
	634 Compare X1, 0
	635 JumpIfEqual {143}
	636 Move W3, [X1+16]
	637 Add X2, X31, 12
	638 Move W4, 0xFFFE
	639 Move X0, X19
	640 Call Uri.FindEndOfComponent, X0, X1, X2, X3, X4
	641 Move X1, [X19+24]
	642 NotImplemented "Instruction LDRH not yet implemented."
	643 Move W4, 64
	644 Move W2, W21
	645 Call Uri.EscapeUnescapeIri, X0, X1, X2, X3, X4
	646 Move X8, 0xB23000
	647 Move X8, [X8+72]
	648 Move X20, X0
	649 Move X8, [X8]
	650 Move W9, [X8+224]
	651 Compare W9, 0
	652 JumpIfNotEqual {655}
	653 Move X0, X8
	654 Call 0x1C17DFC
	655 Move X0, X31
	656 Call UriParser.get_ShouldUseLegacyV2Quirks
	657 Move X21, [X19+16]
	658 Move TEMP, X0
	659 And TEMP, TEMP, 1
	660 Compare TEMP, 1
	661 JumpIfNotEqual {672}
	662 Compare X20, 0
	663 JumpIfEqual {765}
	664 Move W1, 1
	665 Move X0, X20
	666 Move X2, X31
	667 Call String.Normalize, X0, X1
	668 Move X1, X0
	669 Move X0, X21
	670 Move X2, X31
	671 Call String.Concat, X0, X1
	672 Move X0, X21
	673 Move X1, X20
	674 Move X2, X31
	675 Call String.Concat, X0, X1
	676 Move [X19+16], X0
	677 Compare X0, 0
	678 JumpIfEqual {143}
	679 Move W20, [X0+16]
	680 Move X8, [X19+56]
	681 Compare X8, 0
	682 JumpIfEqual {143}
	683 NotImplemented "Instruction LDRH not yet implemented."
	684 NotImplemented "Instruction STRH not yet implemented."
	685 Move X21, [X19+16]
	686 Compare X21, 0
	687 JumpIfEqual {691}
	688 Move X0, X31
	689 Call RuntimeHelpers.get_OffsetToStringData
	690 Add X21, X21, W0
	691 NotImplemented "Instruction CMP not yet implemented."
	692 NotImplemented "Instruction LDRH not yet implemented."
	693 NotImplemented "Instruction CMP not yet implemented."
	694 Add W8, W22, 1
	695 Add X2, X31, 8
	696 Move W4, 0xFFFE
	697 Move X0, X19
	698 Move X1, X21
	699 Move W3, W20
	700 NotImplemented "Instruction STRH not yet implemented."
	701 Call Uri.CheckCanonical, X0, X1, X2, X3, X4
	702 Or X8, X23, 127
	703 And W31, W0, 2
	704 Move W9, 17
	705 Move W11, [X19+64]
	706 NotImplemented "Instruction CSEL not yet implemented."
	707 Move W10, 91
	708 And W9, W0, W9
	709 And W10, W0, W10
	710 NotImplemented "Instruction CMP not yet implemented."
	711 Or X9, X8, 0x1FFF
	712 NotImplemented "Instruction CSEL not yet implemented."
	713 NotImplemented "Instruction CMP not yet implemented."
	714 NotImplemented "Instruction CCMP not yet implemented."
	715 Or X9, X8, 0x7FFFFFFFFFF
	716 NotImplemented "Instruction CSEL not yet implemented."
	717 Move X21, [X19+56]
	718 Compare X21, 0
	719 JumpIfEqual {143}
	720 NotImplemented "Instruction LDRH not yet implemented."
	721 NotImplemented "Instruction STRH not yet implemented."
	722 Move [X31+4], W31
	723 Add X1, X31, 4
	724 Move X0, X21
	725 Move X2, X31
	726 Call Monitor.Enter, X0, X1
	727 Move X8, [X19+48]
	728 Move X22, X31
	729 Move W20, 80
	730 Or X8, X23, X8
	731 Or X8, X8, 0xFFFFFFFF
	732 Move [X19+48], X8
	733 Move W8, [X31+4]
	734 Compare W8, 0
	735 JumpIfEqual {739}
	736 Move X0, X21
	737 Move X1, X31
	738 Call Monitor.Exit, X0
	739 Compare X22, 0
	740 JumpIfNotEqual {761}
	741 NotImplemented "Instruction CMP not yet implemented."
	742 Compare W20, 0
	743 JumpIfNotEqual {747}
	744 Move X8, [X19+48]
	745 Or X8, X8, 0xFFFFFFFFF
	746 Move [X19+48], X8
	747 Move X20, [X31+96]
	748 Move X19, [X31+104]
	749 Move X22, [X31+80]
	750 Move X21, [X31+88]
	751 Move X24, [X31+64]
	752 Move X23, [X31+72]
	753 Move X26, [X31+48]
	754 Move X25, [X31+56]
	755 Move X28, [X31+32]
	756 Move X27, [X31+40]
	757 Move X29, [X31+16]
	758 Move X30, [X31+24]
	759 Add X31, X31, 112
	760 Return 
	761 Move X0, X22
	762 Call 0x1C17F18
	763 Call 0x1C17F20
	764 Call 0x1C17F20
	765 Call 0x1C17F20
	766 Move X20, X0
	767 NotImplemented "Instruction CMP not yet implemented."
	768 Move X0, X20
	769 Call 0x3EB2AD0
	770 Move X19, X0
	771 Move X0, 0xAE2000
	772 Move X0, [X0+1400]
	773 Call 0x1C17D08
	774 Move X8, [X19]
	775 Move X1, [X8]
	776 Call 0x1C18270
	777 Move TEMP, X0
	778 And TEMP, TEMP, 1
	779 Compare TEMP, 1
	780 JumpIfEqual {831}
	781 Move W0, 8
	782 Call 0x3EB2AF0
	783 Move X8, [X19]
	784 Move [X0], X8
	785 Move X1, 0x89B000
	786 Add X1, X1, 3672
	787 Move X2, X31
	788 Call 0x3EB2B00
	789 Move X20, X0
	790 NotImplemented "Instruction CMP not yet implemented."
	791 Move X0, X20
	792 Call 0x3EB2AD0
	793 Move X19, X0
	794 Move X0, 0xAE2000
	795 Move X0, [X0+1400]
	796 Call 0x1C17D08
	797 Move X8, [X19]
	798 Move X1, [X8]
	799 Call 0x1C18270
	800 Move TEMP, X0
	801 And TEMP, TEMP, 1
	802 Compare TEMP, 1
	803 JumpIfEqual {831}
	804 Move W0, 8
	805 Call 0x3EB2AF0
	806 Move X8, [X19]
	807 Move [X0], X8
	808 Move X1, 0x89B000
	809 Add X1, X1, 3672
	810 Move X2, X31
	811 Call 0x3EB2B00
	812 Move X20, X0
	813 Call 0x3EB2AE0
	814 Move X20, X0
	815 Call 0x3EB2AE0
	816 Move X20, X0
	817 NotImplemented "Instruction CMP not yet implemented."
	818 Move X0, X20
	819 Call 0x3EB2AD0
	820 Move X19, X0
	821 Move X0, 0xAE2000
	822 Move X0, [X0+1400]
	823 Call 0x1C17D08
	824 Move X8, [X19]
	825 Move X1, [X8]
	826 Call 0x1C18270
	827 Move TEMP, X0
	828 And TEMP, TEMP, 1
	829 Compare TEMP, 1
	830 JumpIfNotEqual {845}
	831 Call 0x3EB2AE0
	832 Move X0, 0xADC000
	833 Move X0, [X0+2600]
	834 Call 0x1C17D08
	835 Call 0x19913D0
	836 Move W0, 1
	837 Call Uri.GetException, X0
	838 Move X19, X0
	839 Move X0, 0xB22000
	840 Move X0, [X0+80]
	841 Call 0x1C17D08
	842 Move X1, X0
	843 Move X0, X19
	844 Call 0x1C17DEC
	845 Move W0, 8
	846 Call 0x3EB2AF0
	847 Move X8, [X19]
	848 Move [X0], X8
	849 Move X1, 0x89B000
	850 Add X1, X1, 3672
	851 Move X2, X31
	852 Call 0x3EB2B00
	853 Move X20, X0
	854 Call 0x3EB2AE0
	855 Move X0, X20
	856 Call 0x1D2D690
	857 NotImplemented "Instruction CMP not yet implemented."
	858 Move X20, X0
	859 Move X0, X20
	860 Call 0x3EB2AD0
	861 Move X22, [X0]
	862 Call 0x3EB2AE0
	863 Move W20, W31
	864 Move X22, X31
	865 Move X20, X0
	866 Move W8, [X31+4]
	867 Compare W8, 0
	868 JumpIfEqual {872}
	869 Move X0, X21
	870 Move X1, X31
	871 Call Monitor.Exit, X0
	872 Compare X22, 0
	873 JumpIfEqual {855}
	874 Move X0, X22
	875 Call 0x1C17F18
	876 Call 0x1991590

Method: System.UInt16 ParseSchemeCheckImplicitFile(System.Char* uriString, System.UInt16 length, ref System.ParsingError err, ref System.Uri/Flags flags, ref System.UriParser syntax)

Disassembly:
	0x0361F558 AND W21, W29, 0xFFFF
	0x0361F55C ADD W1, W21, 0x1
	0x0361F560 ADD X2, X31, 0x8C
	0x0361F564 MOV X3, X31
	0x0361F568 BL 0x3627CFC
	0x0361F56C TBZ X0, 0x0, 0x361F6AC
	0x0361F570 LDR X8, [X20]
	0x0361F574 MOV W28, W21
	0x0361F578 ADRP X21, 0xAD6000
	0x0361F57C ORR X8, X8, 0x1FFFF
	0x0361F580 STR X8, [X20]
	0x0361F584 LDR X21, [X21 + 0xA28]
	0x0361F588 LDR X0, [X21]
	0x0361F58C LDR W8, [X0 + 0xE0]
	0x0361F590 CBNZ W8, 0x361F59C
	0x0361F594 BL 0x1C16DFC
	0x0361F598 LDR X0, [X21]
	0x0361F59C LDR X8, [X0 + 0xB8]
	0x0361F5A0 LDRB W21, [X8 + 0x68]
	0x0361F5A4 BL 0x1C16D44
	0x0361F5A8 CBNZ W21, 0x361FA8C
	0x0361F5AC ADRP X27, 0xAD6000
	0x0361F5B0 LDR X27, [X27 + 0xA28]
	0x0361F5B4 LDR X0, [X27]
	0x0361F5B8 LDR W8, [X0 + 0xE0]
	0x0361F5BC CBNZ W8, 0x361F5C4
	0x0361F5C0 BL 0x1C16DFC
	0x0361F5C4 BL 0x361C4EC
	0x0361F5C8 LDR X8, [X27]
	0x0361F5CC LDR X8, [X8 + 0xB8]
	0x0361F5D0 LDRB W21, [X8 + 0x70]
	0x0361F5D4 BL 0x1C16D44
	0x0361F5D8 CBZ W21, 0x361FA7C
	0x0361F5DC LDR X0, [X27]
	0x0361F5E0 LDR W8, [X0 + 0xE0]
	0x0361F5E4 CBNZ W8, 0x361F5EC
	0x0361F5E8 BL 0x1C16DFC
	0x0361F5EC MOV X0, X24
	0x0361F5F0 BL 0x3617DDC
	0x0361F5F4 AND W8, W0, 0x1
	0x0361F5F8 B 0x361FA80
	0x0361F5FC SUB W8, W21, 0x30
	0x0361F600 CMP W8, 0x9
	0x0361F604 B.HI 0x361F6AC
	0x0361F608 MOVZ W1, 0x400
	0x0361F60C MOV X0, X24
	0x0361F610 MOV X2, X31
	0x0361F614 BL 0x3629044
	0x0361F618 TBZ X0, 0x0, 0x361F6AC
	0x0361F61C ADRP X8, 0xAD6000
	0x0361F620 LDR X8, [X8 + 0xA28]
	0x0361F624 LDR X21, [X20]
	0x0361F628 LDR X0, [X8]
	0x0361F62C LDR W8, [X0 + 0xE0]
	0x0361F630 CBNZ W8, 0x361F638
	0x0361F634 BL 0x1C16DFC
	0x0361F638 ANDS X31, X21, 0x3FFFFFFF
	0x0361F63C CSET W8, EQ
	0x0361F640 MOVZ W1, 0x10000
	0x0361F644 MOV X0, X24
	0x0361F648 MOV X2, X31
	0x0361F64C STR W8, [X31 + 0x38]
	0x0361F650 BL 0x3629044
	0x0361F654 AND W5, W0, 0x1
	0x0361F658 LDR X0, [X31 + 0x70]
	0x0361F65C LDR W4, [X31 + 0x38]
	0x0361F660 AND W21, W29, 0xFFFF
	0x0361F664 ADD X2, X31, 0x8C
	0x0361F668 MOV W1, W21
	0x0361F66C MOV W3, W31
	0x0361F670 MOV X6, X31
	0x0361F674 BL 0x35F4744
	0x0361F678 TBZ X0, 0x0, 0x361F6AC
	0x0361F67C LDR X8, [X20]
	0x0361F680 ORR X8, X8, 0x3FFFF
	0x0361F684 STR X8, [X20]
	0x0361F688 CBZ W19, 0x361FADC
	0x0361F68C LDR X19, [X31 + 0x48]
	0x0361F690 LDR W8, [X31 + 0x8C]
	0x0361F694 LDR X1, [X31 + 0x70]
	0x0361F698 MOV X0, X31
	0x0361F69C LDR X29, [X19]
	0x0361F6A0 SUB W3, W8, W21
	0x0361F6A4 MOV W2, W21
	0x0361F6A8 B 0x361FAAC
	0x0361F6AC LDR W8, [X31 + 0x6C]
	0x0361F6B0 CBNZ W8, 0x361F804
	0x0361F6B4 TBZ X28, 0x9, 0x361F804
	0x0361F6B8 ADRP X8, 0xAD6000
	0x0361F6BC LDR X8, [X8 + 0xA28]
	0x0361F6C0 LDR X19, [X20]
	0x0361F6C4 LDR X0, [X8]
	0x0361F6C8 LDR W8, [X0 + 0xE0]
	0x0361F6CC CBNZ W8, 0x361F6D4
	0x0361F6D0 BL 0x1C16DFC
	0x0361F6D4 LDR X0, [X31 + 0x70]
	0x0361F6D8 ANDS X31, X19, 0x3FFFFFFF
	0x0361F6DC CSET W4, EQ
	0x0361F6E0 ADD X2, X31, 0x8C
	0x0361F6E4 ADD X3, X31, 0x84
	0x0361F6E8 MOV W1, W29
	0x0361F6EC MOV X5, X31
	0x0361F6F0 BL 0x362D058
	0x0361F6F4 TBZ X0, 0x0, 0x361F804
	0x0361F6F8 LDR X8, [X20]
	0x0361F6FC ORR X9, X8, 0x3FFFF
	0x0361F700 STR X9, [X20]
	0x0361F704 LDRB W9, [X31 + 0x84]
	0x0361F708 CBNZ W9, 0x361F718
	0x0361F70C MOVZ W9, 0x2030000
	0x0361F710 ORR X8, X8, X9, 0x0
	0x0361F714 STR X8, [X20]
	0x0361F718 ADRP X19, 0xAD6000
	0x0361F71C LDR X19, [X19 + 0xA28]
	0x0361F720 LDR X0, [X19]
	0x0361F724 LDR W8, [X0 + 0xE0]
	0x0361F728 CBNZ W8, 0x361F734
	0x0361F72C BL 0x1C16DFC
	0x0361F730 LDR X0, [X19]
	0x0361F734 LDR X8, [X0 + 0xB8]
	0x0361F738 LDR W19, [X8 + 0x6C]
	0x0361F73C BL 0x1C16D44
	0x0361F740 CBZ W19, 0x361FADC
	0x0361F744 ADRP X19, 0xAD6000
	0x0361F748 LDR X19, [X19 + 0xA28]
	0x0361F74C LDR X0, [X19]
	0x0361F750 LDR W8, [X0 + 0xE0]
	0x0361F754 CBNZ W8, 0x361F760
	0x0361F758 BL 0x1C16DFC
	0x0361F75C LDR X0, [X19]
	0x0361F760 LDR X8, [X0 + 0xB8]
	0x0361F764 LDR W19, [X8 + 0x6C]
	0x0361F768 BL 0x1C16D44
	0x0361F76C CMP W19, 0x1
	0x0361F770 B.NE 0x361F78C
	0x0361F774 LDR W3, [X31 + 0x8C]
	0x0361F778 LDR X1, [X31 + 0x70]
	0x0361F77C MOV X0, X31
	0x0361F780 MOV W2, W31
	0x0361F784 MOV X4, X31
	0x0361F788 BL 0x322EAD4
	0x0361F78C LDR X2, [X20]
	0x0361F790 MOV X1, X24
	0x0361F794 BL 0x3617F34
	0x0361F798 TBZ X0, 0x0, 0x361FADC
	0x0361F79C LDR W2, [X31 + 0x8C]
	0x0361F7A0 LDR X0, [X31 + 0x70]
	0x0361F7A4 AND W29, W29, 0xFFFF
	0x0361F7A8 MOVZ W8, 0x1
	0x0361F7AC ADD X3, X31, 0x80
	0x0361F7B0 ADD X4, X31, 0x7C
	0x0361F7B4 MOV W1, W29
	0x0361F7B8 MOV X5, X31
	0x0361F7BC STRB W8, [X31 + 0x80]
	0x0361F7C0 STRB W31, [X31 + 0x7C]
	0x0361F7C4 BL 0x362DB44
	0x0361F7C8 LDRB W8, [X31 + 0x7C]
	0x0361F7CC CBZ W8, 0x361FA6C
	0x0361F7D0 ADRP X8, 0xAD6000
	0x0361F7D4 LDR X8, [X8 + 0xA28]
	0x0361F7D8 MOV X21, X0
	0x0361F7DC LDR X19, [X20]
	0x0361F7E0 LDR X0, [X8]
	0x0361F7E4 LDR W8, [X0 + 0xE0]
	0x0361F7E8 CBNZ W8, 0x361F7F0
	0x0361F7EC BL 0x1C16DFC
	0x0361F7F0 TBNZ X19, 0x0, 0x361F9F0
	0x0361F7F4 LDR X8, [X31 + 0x60]
	0x0361F7F8 LDR X0, [X8 + 0x10]
	0x0361F7FC STR X0, [X8 + 0x18]
	0x0361F800 B 0x361F9F8
	0x0361F804 TBZ X28, 0x9, 0x361F8B4
	0x0361F808 MOVZ W1, 0x10000000
	0x0361F80C MOV X0, X24
	0x0361F810 MOV X2, X31
	0x0361F814 BL 0x3629044
	0x0361F818 ANDS W31, W0, W27, 0x0
	0x0361F81C B.NE 0x361F834
	0x0361F820 MOVZ W1, 0x4000000
	0x0361F824 MOV X0, X24
	0x0361F828 MOV X2, X31
	0x0361F82C BL 0x3629044
	0x0361F830 TBZ X0, 0x0, 0x361F8B4
	0x0361F834 ADRP X8, 0xAD6000
	0x0361F838 LDR X8, [X8 + 0xA28]
	0x0361F83C LDR X19, [X20]
	0x0361F840 LDR X0, [X8]
	0x0361F844 LDR W8, [X0 + 0xE0]
	0x0361F848 CBNZ W8, 0x361F850
	0x0361F84C BL 0x1C16DFC
	0x0361F850 LDR X0, [X31 + 0x70]
	0x0361F854 ANDS X31, X19, 0x3FFFFFFF
	0x0361F858 CSET W4, EQ
	0x0361F85C ADD X2, X31, 0x8C
	0x0361F860 ADD X3, X31, 0x84
	0x0361F864 MOV W1, W29
	0x0361F868 MOV X5, X31
	0x0361F86C BL 0x362D288
	0x0361F870 TBZ X0, 0x0, 0x361F8B4
	0x0361F874 LDP X8, X0, [X31 + 0x58]
	0x0361F878 LDR W3, [X31 + 0x8C]
	0x0361F87C LDR X9, [X31 + 0x48]
	0x0361F880 LDR X1, [X31 + 0x70]
	0x0361F884 CMP X8, 0x0
	0x0361F888 ADD X8, X31, 0x88
	0x0361F88C STP X20, X8, [X31 + 0x8]
	0x0361F890 LDR X8, [X31 + 0x40]
	0x0361F894 LDP W4, W5, [X31 + 0x68]
	0x0361F898 CSET W6, NE
	0x0361F89C MOV W2, W29
	0x0361F8A0 MOV X7, X24
	0x0361F8A4 STP X9, X22, [X31 + 0x18]
	0x0361F8A8 STR X8, [X31]
	0x0361F8AC BL 0x3622C70
	0x0361F8B0 B 0x361FADC
	0x0361F8B4 TBZ X28, 0x8, 0x361FADC
	0x0361F8B8 ADRP X8, 0xAD6000
	0x0361F8BC LDR X8, [X8 + 0xA28]
	0x0361F8C0 LDR X19, [X20]
	0x0361F8C4 LDR X0, [X8]
	0x0361F8C8 LDR W8, [X0 + 0xE0]
	0x0361F8CC CBNZ W8, 0x361F8D4
	0x0361F8D0 BL 0x1C16DFC
	0x0361F8D4 LDR X0, [X31 + 0x70]
	0x0361F8D8 ANDS X31, X19, 0x3FFFFFFF
	0x0361F8DC CSET W3, EQ
	0x0361F8E0 ADD X2, X31, 0x8C
	0x0361F8E4 MOV W1, W29
	0x0361F8E8 MOV X4, X31
	0x0361F8EC BL 0x362DFA4
	0x0361F8F0 TBZ X0, 0x0, 0x361FADC
	0x0361F8F4 LDR W8, [X31 + 0x8C]
	0x0361F8F8 SUB W8, W8, W29, UXTH
	0x0361F8FC CMP W8, 0x100
	0x0361F900 B.GT 0x361FADC
	0x0361F904 LDR X8, [X20]
	0x0361F908 ORR X8, X8, 0x7FFFF
	0x0361F90C B 0x361FA74
	0x0361F910 LDR X8, [X20]
	0x0361F914 ORR X8, X8, 0x3FFFFF
	0x0361F918 STR X8, [X20]
	0x0361F91C LDR W8, [X31 + 0x6C]
	0x0361F920 CBNZ W8, 0x361F950
	0x0361F924 ADRP X21, 0xAD6000
	0x0361F928 LDR X21, [X21 + 0xA28]
	0x0361F92C LDR X0, [X21]
	0x0361F930 LDR W8, [X0 + 0xE0]
	0x0361F934 CBNZ W8, 0x361F940
	0x0361F938 BL 0x1C16DFC
	0x0361F93C LDR X0, [X21]
	0x0361F940 LDR X8, [X0 + 0xB8]
	0x0361F944 LDR W21, [X8 + 0x6C]
	0x0361F948 BL 0x1C16D44
	0x0361F94C CBZ W21, 0x361FEC0
	0x0361F950 LDR W2, [X31 + 0x68]
	0x0361F954 SUB W29, W2, W22
	0x0361F958 CBZ W19, 0x361F9D4
	0x0361F95C LDR X0, [X31 + 0x70]
	0x0361F960 MOVZ W3, 0x2
	0x0361F964 MOV W1, W2
	0x0361F968 MOV W2, W29
	0x0361F96C MOV X4, X31
	0x0361F970 BL 0x3629834
	0x0361F974 ADRP X8, 0xB1C000
	0x0361F978 LDR X8, [X8 + 0x48]
	0x0361F97C STR X0, [X31 + 0x40]
	0x0361F980 LDR X8, [X8]
	0x0361F984 LDR W9, [X8 + 0xE0]
	0x0361F988 CBNZ W9, 0x361F994
	0x0361F98C MOV X0, X8
	0x0361F990 BL 0x1C16DFC
	0x0361F994 LDR X22, [X31 + 0x38]
	0x0361F998 MOV X0, X31
	0x0361F99C BL 0x362BC9C
	0x0361F9A0 TBZ X0, 0x0, 0x361F9BC
	0x0361F9A4 LDR X0, [X31 + 0x40]
	0x0361F9A8 CBZ X0, 0x361FF20
	0x0361F9AC MOVZ W1, 0x1
	0x0361F9B0 MOV X2, X31
	0x0361F9B4 BL 0x322E3D0
	0x0361F9B8 STR X0, [X31 + 0x40]
	0x0361F9BC LDP X1, X21, [X31 + 0x40]
	0x0361F9C0 MOV X2, X31
	0x0361F9C4 LDR X0, [X21]
	0x0361F9C8 BL 0x321B938
	0x0361F9CC STR X0, [X21]
	0x0361F9D0 B 0x361FED0
	0x0361F9D4 LDR X1, [X31 + 0x70]
	0x0361F9D8 SUB W3, W31, W22
	0x0361F9DC MOV X0, X31
	0x0361F9E0 MOV X4, X31
	0x0361F9E4 BL 0x322EAD4
	0x0361F9E8 STR X0, [X31 + 0x40]
	0x0361F9EC B 0x361FECC
	0x0361F9F0 LDR X8, [X31 + 0x60]
	0x0361F9F4 LDR X0, [X8 + 0x18]
	0x0361F9F8 LDR X8, [X20]
	0x0361F9FC LDR X19, [X31 + 0x40]
	0x0361FA00 ORR X8, X8, 0x1FFFFFFFF
	0x0361FA04 STR X8, [X20]
	0x0361FA08 CBZ X0, 0x361FF18
	0x0361FA0C LDR W2, [X31 + 0x68]
	0x0361FA10 MOV W1, W31
	0x0361FA14 MOV X3, X31
	0x0361FA18 BL 0x3228DE4
	0x0361FA1C MOV X1, X19
	0x0361FA20 MOV X2, X21
	0x0361FA24 MOV X3, X31
	0x0361FA28 BL 0x32274B8
	0x0361FA2C LDR X8, [X31 + 0x48]
	0x0361FA30 LDR X1, [X31 + 0x70]
	0x0361FA34 MOV W2, W29
	0x0361FA38 MOV X4, X31
	0x0361FA3C STR X0, [X8]
	0x0361FA40 LDR X8, [X20]
	0x0361FA44 MOV X0, X31
	0x0361FA48 ORR X8, X8, 0x3FFFFFF
	0x0361FA4C STR X8, [X20]
	0x0361FA50 LDR W8, [X31 + 0x8C]
	0x0361FA54 SUB W3, W8, W29
	0x0361FA58 BL 0x322EAD4
	0x0361FA5C LDR X8, [X31 + 0x60]
	0x0361FA60 STR X0, [X8 + 0x28]
	0x0361FA64 MOVZ W8, 0x1
	0x0361FA68 STRB W8, [X31 + 0x88]
	0x0361FA6C LDR X8, [X20]
	0x0361FA70 ORR X8, X8, 0x7FFFFFFFF
	0x0361FA74 STR X8, [X20]
	0x0361FA78 B 0x361FADC
	0x0361FA7C MOV W8, W31
	0x0361FA80 LDR X9, [X31 + 0x60]
	0x0361FA84 CBZ X9, 0x361FF18
	0x0361FA88 STRB W8, [X9 + 0x40]
	0x0361FA8C CBZ W19, 0x361FADC
	0x0361FA90 LDR X19, [X31 + 0x48]
	0x0361FA94 LDR W8, [X31 + 0x8C]
	0x0361FA98 LDR X1, [X31 + 0x70]
	0x0361FA9C MOV W2, W28
	0x0361FAA0 LDR X29, [X19]
	0x0361FAA4 SUB W3, W8, W28
	0x0361FAA8 MOV X0, X31
	0x0361FAAC MOV X4, X31
	0x0361FAB0 BL 0x322EAD4

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Add X29, X31, 0
	014 Subtract X31, X31, 48
	015 Move [X29-24], X2
	016 Move [X29-16], X4
	017 Move [X29-32], X3
	018 NotImplemented "Instruction MRS not yet implemented."
	019 Move X8, [X27+40]
	020 Move X19, 0xDC2000
	021 Move W24, W1
	022 Move X21, X0
	023 Move [X29-8], X8
	024 Move W8, [X19+1172]
	025 Move TEMP, X8
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {40}
	029 Move X0, 0xB1D000
	030 Move X0, [X0+72]
	031 Call 0x1C17CF4
	032 Move X0, 0xB1D000
	033 Move X0, [X0+536]
	034 Call 0x1C17CF4
	035 Move X0, 0xAD7000
	036 Move X0, [X0+2600]
	037 Call 0x1C17CF4
	038 Move W8, 1
	039 Move [X19+1172], W8
	040 Move X26, 0xAD7000
	041 Move X26, [X26+2600]
	042 And W25, W24, 0xFFFF
	043 Subtract W8, W24, 1
	044 And W8, W8, 0xFFFF
	045 Move X22, 0x2600
	046 Move X28, X27
	047 Move W27, W25
	048 Move W19, W31
	049 Move W20, 1
	050 Add W23, W8, 1
	051 NotImplemented "Instruction MOVK not yet implemented."
	052 Move X0, [X26]
	053 And X8, X19, 0xFFFF
	054 NotImplemented "Instruction LDRH not yet implemented."
	055 Move W9, [X0+224]
	056 Compare W9, 0
	057 JumpIfNotEqual {59}
	058 Call 0x1C17DFC
	059 NotImplemented "Instruction CMP not yet implemented."
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Move W8, W25
	062 NotImplemented "Instruction LSLV not yet implemented."
	063 And X31, X8, X22
	064 Add W19, W19, 1
	065 And W8, W19, 0xFFFF
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Move W20, W24
	068 Move W8, W24
	069 Move W22, W24
	070 Move W25, W27
	071 Move X27, X28
	072 Move W20, W31
	073 Move W19, W31
	074 Move W20, W19
	075 Move W25, W27
	076 Move X27, X28
	077 And W8, W20, 0xFFFF
	078 NotImplemented "Instruction CMP not yet implemented."
	079 Move W8, W20
	080 And X8, X8, 0xFFFF
	081 NotImplemented "Instruction LDRH not yet implemented."
	082 NotImplemented "Instruction CMP not yet implemented."
	083 Move W23, W19
	084 Move W28, W20
	085 Move W22, W20
	086 Move W22, W20
	087 Add W22, W22, 1
	088 And W8, W22, 0xFFFF
	089 NotImplemented "Instruction CMP not yet implemented."
	090 And X8, X22, 0xFFFF
	091 NotImplemented "Instruction LDRH not yet implemented."
	092 NotImplemented "Instruction CMP not yet implemented."
	093 Move W23, W19
	094 Move W28, W22
	095 Move W23, W19
	096 Move W28, W24
	097 Move X0, X31
	098 Call IntPtr.get_Size
	099 Add W19, W23, 2
	100 NotImplemented "Instruction CMP not yet implemented."
	101 And W8, W28, 0xFFFF
	102 NotImplemented "Instruction CMP not yet implemented."
	103 NotImplemented "Instruction CMP not yet implemented."
	104 Move X0, [X26]
	105 Move W8, [X0+224]
	106 Compare W8, 0
	107 JumpIfNotEqual {109}
	108 Call 0x1C17DFC
	109 NotImplemented "Instruction LDUR not yet implemented."
	110 Add X0, X21, W20
	111 Subtract W1, W28, W20
	112 Call Uri.CheckKnownSchemes, X0, X1, X2
	113 Move TEMP, X0
	114 And TEMP, TEMP, 1
	115 Compare TEMP, 1
	116 JumpIfNotEqual {118}
	117 Add W20, W28, 1
	118 NotImplemented "Instruction CMP not yet implemented."
	119 And W8, W28, 0xFFFF
	120 NotImplemented "Instruction CMP not yet implemented."
	121 Move W8, W23
	122 ShiftRight W8, 31
	123 And W8, W8, 0x3FFFFFFF
	124 Move [X29-44], W25
	125 Add X25, X8, 2
	126 Move [X29-40], X27
	127 NotImplemented "Instruction LDRH not yet implemented."
	128 NotImplemented "Instruction CMP not yet implemented."
	129 NotImplemented "Instruction CMP not yet implemented."
	130 Move X0, [X26]
	131 Move W8, W20
	132 And X8, X8, 0xFFFF
	133 NotImplemented "Instruction LDRH not yet implemented."
	134 Move W9, [X0+224]
	135 Compare W9, 0
	136 JumpIfNotEqual {138}
	137 Call 0x1C17DFC
	138 And W8, W22, 0xFFFFFFDF
	139 Subtract W8, W8, 65
	140 And W8, W8, 0xFFFF
	141 NotImplemented "Instruction CMP not yet implemented."
	142 NotImplemented "Instruction LDRH not yet implemented."
	143 NotImplemented "Instruction CMP not yet implemented."
	144 NotImplemented "Instruction CMP not yet implemented."
	145 Move X27, [X29-40]
	146 Move X10, [X29-32]
	147 Move W9, 0x28100000
	148 Move X19, 0xB1D000
	149 Move X8, [X10]
	150 Or X8, X8, X9
	151 Move [X10], X8
	152 Move X19, [X19+72]
	153 Move X0, [X19]
	154 Move W8, [X0+224]
	155 Compare W8, 0
	156 JumpIfNotEqual {159}
	157 Call 0x1C17DFC
	158 Move X0, [X19]
	159 Move X8, [X0+184]
	160 NotImplemented "Instruction LDUR not yet implemented."
	161 Move X8, [X8+56]
	162 Move [X9], X8
	163 NotImplemented "Instruction CMP not yet implemented."
	164 Move W8, 1
	165 Move W20, W31
	166 NotImplemented "Instruction CINC not yet implemented."
	167 Move W8, W20
	168 And X9, X8, 0xFFFF
	169 NotImplemented "Instruction LDRH not yet implemented."
	170 NotImplemented "Instruction CMP not yet implemented."
	171 NotImplemented "Instruction CMP not yet implemented."
	172 Move X0, [X26]
	173 Move W8, [X0+224]
	174 Compare W8, 0
	175 JumpIfNotEqual {180}
	176 Move X27, X9
	177 Call 0x1C17DFC
	178 Move X0, [X26]
	179 Move X9, X27
	180 Move X8, [X0+184]
	181 Move W8, [X8+114]
	182 Compare W8, 0
	183 JumpIfEqual {222}
	184 NotImplemented "Instruction LDRH not yet implemented."
	185 NotImplemented "Instruction LDUR not yet implemented."
	186 NotImplemented "Instruction CMP not yet implemented."
	187 NotImplemented "Instruction CMP not yet implemented."
	188 NotImplemented "Instruction LDUR not yet implemented."
	189 Move W9, 0x30100000
	190 Move X20, 0xB1D000
	191 Move X8, [X10]
	192 Or X8, X8, X9
	193 Move [X10], X8
	194 Move X20, [X20+72]
	195 Move X0, [X20]
	196 Move W8, [X0+224]
	197 Compare W8, 0
	198 JumpIfNotEqual {201}
	199 Call 0x1C17DFC
	200 Move X0, [X20]
	201 Move X8, [X0+184]
	202 NotImplemented "Instruction LDUR not yet implemented."
	203 NotImplemented "Instruction LDUR not yet implemented."
	204 Move W20, W19
	205 Move X9, [X8+56]
	206 And W8, W19, 0xFFFF
	207 NotImplemented "Instruction CMP not yet implemented."
	208 Move [X10], X9
	209 Move W20, W19
	210 NotImplemented "Instruction LDRH not yet implemented."
	211 NotImplemented "Instruction CMP not yet implemented."
	212 NotImplemented "Instruction CMP not yet implemented."
	213 Add W20, W8, 1
	214 And W8, W20, 0xFFFF
	215 NotImplemented "Instruction CMP not yet implemented."
	216 Move W20, W31
	217 Move W8, 7
	218 Move W20, W31
	219 Move W8, 1
	220 NotImplemented "Instruction LDUR not yet implemented."
	221 NotImplemented "Instruction LDUR not yet implemented."
	222 NotImplemented "Instruction LDRH not yet implemented."
	223 NotImplemented "Instruction LDUR not yet implemented."
	224 NotImplemented "Instruction CMP not yet implemented."
	225 NotImplemented "Instruction CMP not yet implemented."
	226 And W31, W20, 0xFFFF
	227 Subtract W8, W23, 1
	228 NotImplemented "Instruction LDRH not yet implemented."
	229 NotImplemented "Instruction CMP not yet implemented."
	230 NotImplemented "Instruction LDRH not yet implemented."
	231 NotImplemented "Instruction CMP not yet implemented."
	232 NotImplemented "Instruction LDRH not yet implemented."
	233 NotImplemented "Instruction CMP not yet implemented."
	234 NotImplemented "Instruction LDUR not yet implemented."
	235 Move W9, 0x20100000
	236 Move X20, 0xB1D000
	237 Move X8, [X10]
	238 Or X8, X8, X9
	239 Move [X10], X8
	240 Move X20, [X20+72]
	241 Move X0, [X20]
	242 Move W8, [X0+224]
	243 Compare W8, 0
	244 JumpIfNotEqual {247}
	245 Call 0x1C17DFC
	246 Move X0, [X20]
	247 Move X8, [X0+184]
	248 NotImplemented "Instruction LDUR not yet implemented."
	249 Move W20, W19
	250 And W8, W28, 0xFFFF
	251 NotImplemented "Instruction CMP not yet implemented."
	252 Move W20, W31
	253 Move W8, 1
	254 NotImplemented "Instruction LDUR not yet implemented."
	255 Move [X9], W8
	256 Move X8, [X27+40]
	257 NotImplemented "Instruction LDUR not yet implemented."
	258 NotImplemented "Instruction CMP not yet implemented."
	259 Move W0, W20
	260 Add X31, X29, 0
	261 Move X20, [X31+80]
	262 Move X19, [X31+88]
	263 Move X22, [X31+64]
	264 Move X21, [X31+72]
	265 Move X24, [X31+48]
	266 Move X23, [X31+56]
	267 Move X26, [X31+32]
	268 Move X25, [X31+40]
	269 Move X28, [X31+16]
	270 Move X27, [X31+24]
	271 Move X29, [X31+96]
	272 Move X30, [X31+104]
	273 Return X0
	274 NotImplemented "Instruction LDUR not yet implemented."
	275 Move W9, 0x20100000
	276 And W8, W22, 0xFFFF
	277 Subtract W8, W8, W23
	278 NotImplemented "Instruction CMP not yet implemented."
	279 NotImplemented "Instruction SBFM not yet implemented."
	280 Move X19, X9
	281 Compare W8, 0
	282 JumpIfEqual {290}
	283 Add X9, X2, 15
	284 Add X8, X31, 0
	285 And X9, X9, 0xFFFFFFFF
	286 Subtract X23, X8, X9
	287 Add X31, X23, 0
	288 Move W20, W31
	289 Move W8, 5
	290 Move X23, X31
	291 Move X0, X23
	292 Move W1, W31
	293 Call 0x3EB2B10
	294 And W8, W28, 0xFFFF
	295 NotImplemented "Instruction CMP not yet implemented."
	296 Move W24, W31
	297 Subtract W24, W28, W20
	298 Add X8, X21, X19
	299 Move W9, 1
	300 Move X10, X23
	301 NotImplemented "Instruction LDRH not yet implemented."
	302 And W12, W24, 0xFFFF
	303 NotImplemented "Instruction CMP not yet implemented."
	304 Add X9, X9, 1
	305 NotImplemented "Instruction STRH not yet implemented."
	306 Move X0, [X26]
	307 Move W8, [X0+224]
	308 Compare W8, 0
	309 JumpIfNotEqual {311}
	310 Call 0x1C17DFC
	311 NotImplemented "Instruction LDUR not yet implemented."
	312 Move X0, X23
	313 Move W1, W24
	314 Call Uri.CheckSchemeSyntax, X0, X1, X2
	315 NotImplemented "Instruction LDUR not yet implemented."
	316 NotImplemented "Instruction CMP not yet implemented."
	317 Move [X8], W0
	318 Move X8, [X27+40]
	319 NotImplemented "Instruction LDUR not yet implemented."
	320 NotImplemented "Instruction CSINC not yet implemented."
	321 NotImplemented "Instruction CMP not yet implemented."
	322 Call 0x3EB2B20

Method: System.Boolean CheckKnownSchemes(System.Int64* lptr, System.UInt16 nChars, ref System.UriParser syntax)

Disassembly:
	0x036236F4 MOV W22, W2
	0x036236F8 MOV W21, W1
	0x036236FC MOV X20, X0
	0x03623700 TBNZ X8, 0x0, 0x3623724
	0x03623704 ADRP X0, 0xB18000
	0x03623708 LDR X0, [X0 + 0x48]
	0x0362370C BL 0x1C16CF4
	0x03623710 ADRP X0, 0xAD2000
	0x03623714 LDR X0, [X0 + 0xA28]
	0x03623718 BL 0x1C16CF4
	0x0362371C MOVZ W8, 0x1
	0x03623720 STRB W8, [X23 + 0x4A3]
	0x03623724 ADRP X23, 0xAD2000
	0x03623728 LDR X23, [X23 + 0xA28]
	0x0362372C CBZ W21, 0x362375C
	0x03623730 CMP W21, 0x5
	0x03623734 B.LT 0x3623764
	0x03623738 STR X31, [X20 + 0x10]
	0x0362373C LDR X0, [X23]
	0x03623740 LDR W8, [X0 + 0xE0]
	0x03623744 CBNZ W8, 0x362374C
	0x03623748 BL 0x1C16DFC
	0x0362374C MOV W0, W21
	0x03623750 BL 0x361B0C8
	0x03623754 STR X0, [X19]
	0x03623758 B 0x3623AEC
	0x0362375C LDRB W8, [X20 + 0x33]
	0x03623760 TBNZ X8, 0x5, 0x36237F8
	0x03623764 LDR X0, [X23]
	0x03623768 LDR W8, [X0 + 0xE0]
	0x0362376C CBNZ W8, 0x3623778
	0x03623770 BL 0x1C16DFC
	0x03623774 LDR X0, [X23]
	0x03623778 LDR X8, [X0 + 0xB8]
	0x0362377C LDRB W24, [X8 + 0x68]
	0x03623780 BL 0x1C16D44
	0x03623784 CBNZ W24, 0x36237A8
	0x03623788 LDR X1, [X20 + 0x10]
	0x0362378C BL 0x3623BA0
	0x03623790 TBZ X0, 0x0, 0x36237A8
	0x03623794 LDR X0, [X23]
	0x03623798 LDR W8, [X0 + 0xE0]
	0x0362379C CBNZ W8, 0x36237A4
	0x036237A0 BL 0x1C16DFC
	0x036237A4 BL 0x361C4EC
	0x036237A8 LDR X0, [X23]
	0x036237AC LDR W8, [X0 + 0xE0]
	0x036237B0 CBNZ W8, 0x36237BC
	0x036237B4 BL 0x1C16DFC
	0x036237B8 LDR X0, [X23]
	0x036237BC LDR X8, [X0 + 0xB8]
	0x036237C0 LDRB W24, [X8 + 0x70]
	0x036237C4 BL 0x1C16D44
	0x036237C8 CBZ W24, 0x36237EC
	0x036237CC LDR X0, [X20 + 0x20]
	0x036237D0 CBZ X0, 0x362381C
	0x036237D4 MOVZ W1, 0x10000000
	0x036237D8 MOV X2, X31
	0x036237DC BL 0x3629044
	0x036237E0 AND W8, W0, 0x1
	0x036237E4 CBNZ X20, 0x3623824
	0x036237E8 B 0x3623B00
	0x036237EC MOV W8, W31
	0x036237F0 CBNZ X20, 0x3623824
	0x036237F4 B 0x3623B00
	0x036237F8 CBZ W22, 0x36239B8
	0x036237FC LDR X8, [X20 + 0x30]
	0x03623800 CMP W22, 0x1
	0x03623804 B.EQ 0x3623998
	0x03623808 TBNZ X8, 0x1B, 0x3623998
	0x0362380C CMP W22, 0x2
	0x03623810 B.NE 0x3623A64
	0x03623814 LDR X8, [X20 + 0x30]
	0x03623818 B 0x36239A4
	0x0362381C MOVZ W8, 0x1
	0x03623820 CBZ X20, 0x3623B00
	0x03623824 STRB W8, [X20 + 0x40]
	0x03623828 CBZ W8, 0x3623860
	0x0362382C LDR X1, [X20 + 0x10]
	0x03623830 BL 0x3623C84
	0x03623834 TBNZ X0, 0x0, 0x3623844
	0x03623838 LDR X1, [X20 + 0x10]
	0x0362383C BL 0x3623DAC
	0x03623840 TBZ X0, 0x0, 0x3623860
	0x03623844 LDR X8, [X20 + 0x30]
	0x03623848 LDR X9, [X20 + 0x10]
	0x0362384C MOVZ W24, 0x1
	0x03623850 ORR X8, X8, 0x3FFFFFFFF
	0x03623854 STR X9, [X20 + 0x18]
	0x03623858 STR X8, [X20 + 0x30]
	0x0362385C B 0x3623864
	0x03623860 MOV W24, W31
	0x03623864 LDR X0, [X20 + 0x20]
	0x03623868 CBZ X0, 0x36238AC
	0x0362386C MOV X1, X31
	0x03623870 BL 0x362CE34
	0x03623874 TBZ X0, 0x0, 0x3623938
	0x03623878 MOV X0, X20
	0x0362387C BL 0x361EB34
	0x03623880 CBZ W0, 0x3623A08
	0x03623884 MOV W21, W0
	0x03623888 CMP W22, 0x1
	0x0362388C B.EQ 0x3623A44
	0x03623890 CMP W21, 0x4
	0x03623894 B.GT 0x3623A44
	0x03623898 STR X31, [X20 + 0x20]
	0x0362389C STR X31, [X19]
	0x036238A0 LDR X8, [X20 + 0x30]
	0x036238A4 AND X8, X8, 0xFFFFF
	0x036238A8 B 0x3623ABC
	0x036238AC CBZ W21, 0x3623738
	0x036238B0 CMP W22, 0x1
	0x036238B4 B.EQ 0x3623738
	0x036238B8 STR X31, [X19]
	0x036238BC LDR X8, [X20 + 0x30]
	0x036238C0 LDRB W9, [X20 + 0x40]
	0x036238C4 MOVZ X10, 0x80000
	0x036238C8 MOVK X10, 0x2
	0x036238CC AND X8, X8, X10, 0x0
	0x036238D0 ANDS W31, W24, W9, 0x0
	0x036238D4 STR X8, [X20 + 0x30]
	0x036238D8 B.EQ 0x3623AEC
	0x036238DC LDR X1, [X20 + 0x18]
	0x036238E0 CBZ X1, 0x3623B00
	0x036238E4 LDR W3, [X1 + 0x10]
	0x036238E8 MOV W2, W31
	0x036238EC MOV W4, W31
	0x036238F0 BL 0x36226A4
	0x036238F4 STR X0, [X20 + 0x10]
	0x036238F8 ADRP X8, 0xB18000
	0x036238FC LDR X8, [X8 + 0x48]
	0x03623900 LDR X0, [X8]
	0x03623904 LDR W8, [X0 + 0xE0]
	0x03623908 CBNZ W8, 0x3623910
	0x0362390C BL 0x1C16DFC
	0x03623910 MOV X0, X31
	0x03623914 BL 0x362BC9C
	0x03623918 TBZ X0, 0x0, 0x3623AEC
	0x0362391C LDR X0, [X20 + 0x10]
	0x03623920 CBZ X0, 0x3623B04
	0x03623924 MOVZ W1, 0x1
	0x03623928 MOV X2, X31
	0x0362392C BL 0x322E3D0
	0x03623930 STR X0, [X20 + 0x10]
	0x03623934 B 0x3623AEC
	0x03623938 LDR X0, [X20 + 0x20]
	0x0362393C CBZ X0, 0x3623B00
	0x03623940 MOV X1, X31
	0x03623944 BL 0x362CE40
	0x03623948 LDR X8, [X20 + 0x30]
	0x0362394C STR X0, [X20 + 0x20]
	0x03623950 ORR X8, X8, 0x1FFFFFF
	0x03623954 STR X8, [X20 + 0x30]
	0x03623958 CBZ X0, 0x3623B00
	0x0362395C MOV X1, X20
	0x03623960 MOV X2, X19
	0x03623964 MOV X3, X31
	0x03623968 BL 0x362CE84
	0x0362396C LDR X8, [X19]
	0x03623970 CBZ X8, 0x3623A18
	0x03623974 CMP W22, 0x1
	0x03623978 B.EQ 0x3623AEC
	0x0362397C CBZ W21, 0x3623AEC
	0x03623980 STR X31, [X20 + 0x20]
	0x03623984 STR X31, [X19]
	0x03623988 LDR X8, [X20 + 0x30]
	0x0362398C AND X8, X8, 0xFFFFF
	0x03623990 STR X8, [X20 + 0x30]
	0x03623994 B 0x3623AEC
	0x03623998 TBZ X8, 0x1B, 0x3623764
	0x0362399C CMP W22, 0x2
	0x036239A0 B.NE 0x3623764
	0x036239A4 AND X8, X8, 0xFFFFF
	0x036239A8 STR X31, [X20 + 0x20]
	0x036239AC STR X8, [X20 + 0x30]
	0x036239B0 STR X31, [X19]
	0x036239B4 B 0x3623AEC
	0x036239B8 LDR X0, [X20 + 0x10]
	0x036239BC CBZ X0, 0x3623B00
	0x036239C0 LDR W8, [X0 + 0x10]
	0x036239C4 CMP W8, 0x1
	0x036239C8 B.LT 0x36237FC
	0x036239CC MOV W1, W31
	0x036239D0 MOV X2, X31
	0x036239D4 BL 0x3222A1C
	0x036239D8 AND W8, W0, 0xFFFF
	0x036239DC CMP W8, 0x2F
	0x036239E0 B.NE 0x36237FC
	0x036239E4 LDR X0, [X23]
	0x036239E8 LDR W8, [X0 + 0xE0]
	0x036239EC CBNZ W8, 0x36239F8
	0x036239F0 BL 0x1C16DFC
	0x036239F4 LDR X0, [X23]
	0x036239F8 LDR X8, [X0 + 0xB8]
	0x036239FC LDRB W8, [X8 + 0x71]
	0x03623A00 CBNZ W8, 0x36237FC
	0x03623A04 B 0x3623764
	0x03623A08 CMP W22, 0x2
	0x03623A0C B.EQ 0x3623A2C
	0x03623A10 STR X31, [X19]
	0x03623A14 B 0x3623AC0
	0x03623A18 LDR X8, [X20 + 0x30]
	0x03623A1C CBNZ W21, 0x3623AB4
	0x03623A20 TBNZ X8, 0x1A, 0x3623AB4
	0x03623A24 CMP W22, 0x2
	0x03623A28 B.NE 0x3623AC0
	0x03623A2C LDR X0, [X23]
	0x03623A30 LDR W8, [X0 + 0xE0]
	0x03623A34 CBNZ W8, 0x3623A3C
	0x03623A38 BL 0x1C16DFC
	0x03623A3C MOVZ W0, 0xC
	0x03623A40 B 0x3623A58
	0x03623A44 LDR X0, [X23]
	0x03623A48 LDR W8, [X0 + 0xE0]
	0x03623A4C CBNZ W8, 0x3623A54
	0x03623A50 BL 0x1C16DFC
	0x03623A54 MOV W0, W21
	0x03623A58 BL 0x361B0C8
	0x03623A5C STR X0, [X19]
	0x03623A60 B 0x3623AC0
	0x03623A64 LDR X0, [X20 + 0x10]
	0x03623A68 CBZ X0, 0x3623B00
	0x03623A6C LDR W8, [X0 + 0x10]
	0x03623A70 CMP W8, 0x2
	0x03623A74 B.LT 0x3623764
	0x03623A78 MOV W1, W31
	0x03623A7C MOV X2, X31
	0x03623A80 BL 0x3222A1C
	0x03623A84 AND W8, W0, 0xFFFF
	0x03623A88 CMP W8, 0x5C
	0x03623A8C B.NE 0x3623814
	0x03623A90 LDR X0, [X20 + 0x10]
	0x03623A94 CBZ X0, 0x3623B00
	0x03623A98 MOVZ W1, 0x1
	0x03623A9C MOV X2, X31
	0x03623AA0 BL 0x3222A1C
	0x03623AA4 AND W8, W0, 0xFFFF
	0x03623AA8 CMP W8, 0x5C
	0x03623AAC B.EQ 0x3623764
	0x03623AB0 B 0x3623814
	0x03623AB4 AND X8, X8, 0xFFFFF
	0x03623AB8 ORR X8, X8, 0x1FFFFFF
	0x03623ABC STR X8, [X20 + 0x30]
	0x03623AC0 LDRB W8, [X20 + 0x40]
	0x03623AC4 ANDS W31, W24, W8, 0x0
	0x03623AC8 B.EQ 0x3623AEC
	0x03623ACC LDR W8, [X20 + 0x30]
	0x03623AD0 TBNZ X8, 0x1F, 0x3623AEC
	0x03623AD4 MOV X0, X20
	0x03623AD8 LDP X20, X19, [X31 + 0x30]
	0x03623ADC LDP X22, X21, [X31 + 0x20]
	0x03623AE0 LDP X24, X23, [X31 + 0x10]
	0x03623AE4 LDR X30, [X31], #0x40
	0x03623AE8 B 0x3618664
	0x03623AEC LDP X20, X19, [X31 + 0x30]
	0x03623AF0 LDP X22, X21, [X31 + 0x20]
	0x03623AF4 LDP X24, X23, [X31 + 0x10]
	0x03623AF8 LDR X30, [X31], #0x40
	0x03623AFC RET
	0x03623B00 BL 0x1C16F20
	0x03623B04 BL 0x1C16F20
	0x03623B08 B 0x3623B14
	0x03623B0C B 0x3623B14
	0x03623B10 B 0x3623B14
	0x03623B14 MOV X20, X0
	0x03623B18 CMP W1, 0x1
	0x03623B1C B.NE 0x3623B94
	0x03623B20 MOV X0, X20
	0x03623B24 BL 0x3EB1AD0
	0x03623B28 MOV X20, X0
	0x03623B2C ADRP X0, 0xAD8000
	0x03623B30 LDR X0, [X0 + 0x578]
	0x03623B34 BL 0x1C16D08
	0x03623B38 LDR X8, [X20]
	0x03623B3C LDR X1, [X8]
	0x03623B40 BL 0x1C17270
	0x03623B44 TBZ X0, 0x0, 0x3623B6C
	0x03623B48 BL 0x3EB1AE0
	0x03623B4C ADRP X0, 0xAD2000
	0x03623B50 LDR X0, [X0 + 0xA28]
	0x03623B54 BL 0x1C16D08
	0x03623B58 LDR W8, [X0 + 0xE0]
	0x03623B5C CBNZ W8, 0x3623B64
	0x03623B60 BL 0x1C16DFC
	0x03623B64 MOVZ W0, 0x1
	0x03623B68 B 0x3623750
	0x03623B6C MOVZ W0, 0x8
	0x03623B70 BL 0x3EB1AF0
	0x03623B74 LDR X8, [X20]
	0x03623B78 STR X8, [X0]
	0x03623B7C ADRP X1, 0x891000
	0x03623B80 ADD X1, X1, 0xE58
	0x03623B84 MOV X2, X31
	0x03623B88 BL 0x3EB1B00
	0x03623B8C MOV X20, X0
	0x03623B90 BL 0x3EB1AE0
	0x03623B94 MOV X0, X20
	0x03623B98 BL 0x1D2C690
	0x03623B9C BL 0x1990590
	0x03623BA0 STR X30, [X31 - 0x20]!
	0x03623BA4 STP X20, X19, [X31 + 0x10]
	0x03623BA8 CBZ X1, 0x3623C80
	0x03623BAC LDR W20, [X1 + 0x10]
	0x03623BB0 MOV X0, X31
	0x03623BB4 MOV X19, X1
	0x03623BB8 BL 0x32C1424
	0x03623BBC CMP W20, 0x1
	0x03623BC0 B.LT 0x3623C6C
	0x03623BC4 ADD X8, X19, W0, SXTW
	0x03623BC8 LDRH W14, [X8]
	0x03623BCC MOVZ W9, 0x1
	0x03623BD0 CMP W14, 0x7F
	0x03623BD4 B.HI 0x3623C70
	0x03623BD8 CMP W14, 0x25
	0x03623BDC B.EQ 0x3623C70
	0x03623BE0 SXTW X9, W0
	0x03623BE4 ADD X9, X19, X9
	0x03623BE8 MOVZ W10, 0x1
	0x03623BEC MOVZ X11, 0x2
	0x03623BF0 MOVZ X12, 0x1
	0x03623BF4 ADD X13, X9, 0x2
	0x03623BF8 MOVZ W9, 0x1
	0x03623BFC AND W14, W14, 0xFFFF
	0x03623C00 CMP W14, 0x78
	0x03623C04 B.NE 0x3623C3C
	0x03623C08 ADD X14, X10, 0x2
	0x03623C0C CMP W14, W20
	0x03623C10 B.GE 0x3623C3C
	0x03623C14 LDRH W15, [X13]
	0x03623C18 CMP W15, 0x6E
	0x03623C1C B.NE 0x3623C3C
	0x03623C20 SBFM X15, X11, 0x1F, 0x3F
	0x03623C24 LDRH W15, [X15, X8, LSL]
	0x03623C28 CMP W15, 0x2D
	0x03623C2C B.NE 0x3623C3C
	0x03623C30 LDRH W14, [X8, W14, SXTW]
	0x03623C34 CMP W14, 0x2D
	0x03623C38 B.EQ 0x3623C70
	0x03623C3C CMP X10, X20
	0x03623C40 CSET W9, CC
	0x03623C44 CMP X20, X10
	0x03623C48 B.EQ 0x3623C70
	0x03623C4C LDRH W14, [X13], #0x2
	0x03623C50 CMP W14, 0x7F
	0x03623C54 B.HI 0x3623C70
	0x03623C58 ADD X10, X10, 0x1
	0x03623C5C CMP W14, 0x25
	0x03623C60 ADD X11, X11, X12
	0x03623C64 B.NE 0x3623BFC
	0x03623C68 B 0x3623C70
	0x03623C6C MOV W9, W31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xDBE000
	007 Move W8, [X22+1173]
	008 Move X19, X2
	009 Move W21, W1
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0xB19000
	016 Move X0, [X0+72]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+1173], W8
	020 Move X8, [X20]
	021 And W9, W21, 0xFFFF
	022 NotImplemented "Instruction CMP not yet implemented."
	023 Or W9, W31, 0xFFDFFFDF
	024 And X8, X8, X9
	025 Move W9, 87
	026 NotImplemented "Instruction MOVK not yet implemented."
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Move X20, 0xB19000
	029 Move X20, [X20+72]
	030 Move X0, [X20]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {36}
	034 Call 0x1C17DFC
	035 Move X0, [X20]
	036 Move X8, [X0+184]
	037 Move X8, [X8+32]
	038 Move W0, 1
	039 Move [X19], X8
	040 Move X9, 103
	041 NotImplemented "Instruction MOVK not yet implemented."
	042 NotImplemented "Instruction MOVK not yet implemented."
	043 Or X8, X8, 0x20002000200020
	044 NotImplemented "Instruction MOVK not yet implemented."
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Move X9, 108
	047 NotImplemented "Instruction MOVK not yet implemented."
	048 NotImplemented "Instruction MOVK not yet implemented."
	049 NotImplemented "Instruction MOVK not yet implemented."
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Move X9, 110
	052 NotImplemented "Instruction MOVK not yet implemented."
	053 NotImplemented "Instruction MOVK not yet implemented."
	054 NotImplemented "Instruction MOVK not yet implemented."
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Move X9, 110
	057 NotImplemented "Instruction MOVK not yet implemented."
	058 NotImplemented "Instruction MOVK not yet implemented."
	059 NotImplemented "Instruction MOVK not yet implemented."
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Move X9, 104
	062 NotImplemented "Instruction MOVK not yet implemented."
	063 NotImplemented "Instruction MOVK not yet implemented."
	064 NotImplemented "Instruction MOVK not yet implemented."
	065 NotImplemented "Instruction CMP not yet implemented."
	066 And W8, W21, 0xFFFF
	067 NotImplemented "Instruction CMP not yet implemented."
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Move X20, 0xB19000
	070 Move X20, [X20+72]
	071 Move X0, [X20]
	072 Move W8, [X0+224]
	073 Compare W8, 0
	074 JumpIfNotEqual {77}
	075 Call 0x1C17DFC
	076 Move X0, [X20]
	077 Move X8, [X0+184]
	078 Move X8, [X8+16]
	079 Move X9, 119
	080 NotImplemented "Instruction MOVK not yet implemented."
	081 NotImplemented "Instruction MOVK not yet implemented."
	082 NotImplemented "Instruction MOVK not yet implemented."
	083 NotImplemented "Instruction CMP not yet implemented."
	084 Move X9, 117
	085 NotImplemented "Instruction MOVK not yet implemented."
	086 NotImplemented "Instruction MOVK not yet implemented."
	087 NotImplemented "Instruction MOVK not yet implemented."
	088 NotImplemented "Instruction CMP not yet implemented."
	089 Move X9, 102
	090 NotImplemented "Instruction MOVK not yet implemented."
	091 NotImplemented "Instruction MOVK not yet implemented."
	092 NotImplemented "Instruction MOVK not yet implemented."
	093 NotImplemented "Instruction CMP not yet implemented."
	094 Move X9, 103
	095 NotImplemented "Instruction MOVK not yet implemented."
	096 NotImplemented "Instruction MOVK not yet implemented."
	097 NotImplemented "Instruction MOVK not yet implemented."
	098 NotImplemented "Instruction CMP not yet implemented."
	099 And W8, W21, 0xFFFF
	100 NotImplemented "Instruction CMP not yet implemented."
	101 Move W8, [X20+8]
	102 Move W9, 69
	103 NotImplemented "Instruction MOVK not yet implemented."
	104 And W8, W8, 0xFFDFFFDF
	105 NotImplemented "Instruction CMP not yet implemented."
	106 Move X20, 0xB19000
	107 Move X20, [X20+72]
	108 Move X0, [X20]
	109 Move W8, [X0+224]
	110 Compare W8, 0
	111 JumpIfNotEqual {114}
	112 Call 0x1C17DFC
	113 Move X0, [X20]
	114 Move X8, [X0+184]
	115 Move X8, [X8+64]
	116 Move X9, 109
	117 NotImplemented "Instruction MOVK not yet implemented."
	118 NotImplemented "Instruction MOVK not yet implemented."
	119 NotImplemented "Instruction MOVK not yet implemented."
	120 NotImplemented "Instruction CMP not yet implemented."
	121 Move X9, 116
	122 NotImplemented "Instruction MOVK not yet implemented."
	123 NotImplemented "Instruction MOVK not yet implemented."
	124 NotImplemented "Instruction MOVK not yet implemented."
	125 NotImplemented "Instruction CMP not yet implemented."
	126 Move X9, 108
	127 NotImplemented "Instruction MOVK not yet implemented."
	128 NotImplemented "Instruction MOVK not yet implemented."
	129 NotImplemented "Instruction MOVK not yet implemented."
	130 NotImplemented "Instruction CMP not yet implemented."
	131 And W8, W21, 0xFFFF
	132 NotImplemented "Instruction CMP not yet implemented."
	133 Move X20, 0xB19000
	134 Move X20, [X20+72]
	135 Move X0, [X20]
	136 Move W8, [X0+224]
	137 Compare W8, 0
	138 JumpIfNotEqual {141}
	139 Call 0x1C17DFC
	140 Move X0, [X20]
	141 Move X8, [X0+184]
	142 Move X8, [X8+112]
	143 Move X9, 110
	144 NotImplemented "Instruction MOVK not yet implemented."
	145 NotImplemented "Instruction MOVK not yet implemented."
	146 NotImplemented "Instruction MOVK not yet implemented."
	147 NotImplemented "Instruction CMP not yet implemented."
	148 Move X9, 102
	149 NotImplemented "Instruction MOVK not yet implemented."
	150 NotImplemented "Instruction MOVK not yet implemented."
	151 NotImplemented "Instruction MOVK not yet implemented."
	152 NotImplemented "Instruction CMP not yet implemented."
	153 Move X9, 119
	154 NotImplemented "Instruction MOVK not yet implemented."
	155 NotImplemented "Instruction MOVK not yet implemented."
	156 NotImplemented "Instruction MOVK not yet implemented."
	157 NotImplemented "Instruction CMP not yet implemented."
	158 And W8, W21, 0xFFFF
	159 NotImplemented "Instruction CMP not yet implemented."
	160 Move X20, 0xB19000
	161 Move X20, [X20+72]
	162 Move X0, [X20]
	163 Move W8, [X0+224]
	164 Compare W8, 0
	165 JumpIfNotEqual {168}
	166 Call 0x1C17DFC
	167 Move X0, [X20]
	168 Move X8, [X0+184]
	169 Move X8, [X8+40]
	170 And W8, W21, 0xFFFF
	171 NotImplemented "Instruction CMP not yet implemented."
	172 Move X20, 0xB19000
	173 Move X20, [X20+72]
	174 Move X0, [X20]
	175 Move W8, [X0+224]
	176 Compare W8, 0
	177 JumpIfNotEqual {180}
	178 Call 0x1C17DFC
	179 Move X0, [X20]
	180 Move X8, [X0+184]
	181 Move X8, [X8+80]
	182 And W8, W21, 0xFFFF
	183 NotImplemented "Instruction CMP not yet implemented."
	184 Move X20, 0xB19000
	185 Move X20, [X20+72]
	186 Move X0, [X20]
	187 Move W8, [X0+224]
	188 Compare W8, 0
	189 JumpIfNotEqual {192}
	190 Call 0x1C17DFC
	191 Move X0, [X20]
	192 Move X8, [X0+184]
	193 Move X8, [X8+56]
	194 And W8, W21, 0xFFFF
	195 NotImplemented "Instruction CMP not yet implemented."
	196 Move W8, [X20+8]
	197 Move W9, 69
	198 NotImplemented "Instruction MOVK not yet implemented."
	199 Add W9, W9, 0x20000
	200 And W8, W8, 0xFFDFFFDF
	201 NotImplemented "Instruction CMP not yet implemented."
	202 Move X20, 0xB19000
	203 Move X20, [X20+72]
	204 Move X0, [X20]
	205 Move W8, [X0+224]
	206 Compare W8, 0
	207 JumpIfNotEqual {210}
	208 Call 0x1C17DFC
	209 Move X0, [X20]
	210 Move X8, [X0+184]
	211 Move X8, [X8+104]
	212 And W8, W21, 0xFFFF
	213 NotImplemented "Instruction CMP not yet implemented."
	214 Move X20, 0xB19000
	215 Move X20, [X20+72]
	216 Move X0, [X20]
	217 Move W8, [X0+224]
	218 Compare W8, 0
	219 JumpIfNotEqual {222}
	220 Call 0x1C17DFC
	221 Move X0, [X20]
	222 Move X8, [X0+184]
	223 Move X8, [X8+48]
	224 And W8, W21, 0xFFFF
	225 NotImplemented "Instruction CMP not yet implemented."
	226 Move X20, 0xB19000
	227 Move X20, [X20+72]
	228 Move X0, [X20]
	229 Move W8, [X0+224]
	230 Compare W8, 0
	231 JumpIfNotEqual {234}
	232 Call 0x1C17DFC
	233 Move X0, [X20]
	234 Move X8, [X0+184]
	235 Move X8, [X8+72]
	236 And W8, W21, 0xFFFF
	237 NotImplemented "Instruction CMP not yet implemented."
	238 Move X20, 0xB19000
	239 Move X20, [X20+72]
	240 Move X0, [X20]
	241 Move W8, [X0+224]
	242 Compare W8, 0
	243 JumpIfNotEqual {246}
	244 Call 0x1C17DFC
	245 Move X0, [X20]
	246 Move X8, [X0+184]
	247 Move X8, [X8+96]
	248 And W8, W21, 0xFFFF
	249 NotImplemented "Instruction CMP not yet implemented."
	250 Move W8, [X20+8]
	251 Move W9, 84
	252 NotImplemented "Instruction MOVK not yet implemented."
	253 And W8, W8, 0xFFDFFFDF
	254 NotImplemented "Instruction CMP not yet implemented."
	255 Move X20, 0xB19000
	256 Move X20, [X20+72]
	257 Move X0, [X20]
	258 Move W8, [X0+224]
	259 Compare W8, 0
	260 JumpIfNotEqual {263}
	261 Call 0x1C17DFC
	262 Move X0, [X20]
	263 Move X8, [X0+184]
	264 Move X8, [X8+88]
	265 And W8, W21, 0xFFFF
	266 NotImplemented "Instruction CMP not yet implemented."
	267 NotImplemented "Instruction CMP not yet implemented."
	268 Move X8, [X20+8]
	269 Move X9, 80
	270 NotImplemented "Instruction MOVK not yet implemented."
	271 NotImplemented "Instruction MOVK not yet implemented."
	272 And X8, X8, -9007336695791649
	273 NotImplemented "Instruction MOVK not yet implemented."
	274 NotImplemented "Instruction CMP not yet implemented."
	275 Move X20, 0xB19000
	276 Move X20, [X20+72]
	277 Move X0, [X20]
	278 Move W8, [X0+224]
	279 Compare W8, 0
	280 JumpIfNotEqual {283}
	281 Call 0x1C17DFC
	282 Move X0, [X20]
	283 Move X8, [X0+184]
	284 Move X8, [X8+128]
	285 NotImplemented "Instruction LDRH not yet implemented."
	286 And W8, W8, 0xFFFFFFDF
	287 NotImplemented "Instruction CMP not yet implemented."
	288 Move X20, 0xB19000
	289 Move X20, [X20+72]
	290 Move X0, [X20]
	291 Move W8, [X0+224]
	292 Compare W8, 0
	293 JumpIfNotEqual {296}
	294 Call 0x1C17DFC
	295 Move X0, [X20]
	296 Move X8, [X0+184]
	297 Move X8, [X8+24]
	298 Move X8, [X20+8]
	299 Move X9, 84
	300 NotImplemented "Instruction MOVK not yet implemented."
	301 NotImplemented "Instruction MOVK not yet implemented."
	302 And X8, X8, -9007336695791649
	303 NotImplemented "Instruction MOVK not yet implemented."
	304 NotImplemented "Instruction CMP not yet implemented."
	305 Move X20, 0xB19000
	306 Move X20, [X20+72]
	307 Move X0, [X20]
	308 Move W8, [X0+224]
	309 Compare W8, 0
	310 JumpIfNotEqual {313}
	311 Call 0x1C17DFC
	312 Move X0, [X20]
	313 Move X8, [X0+184]
	314 Move X8, [X8+120]
	315 Move W0, W31
	316 Move X20, [X31+32]
	317 Move X19, [X31+40]
	318 Move X22, [X31+16]
	319 Move X21, [X31+24]
	320 Move X30, [X31+48]
	321 Return X0

Method: System.ParsingError CheckSchemeSyntax(System.Char* ptr, System.UInt16 length, ref System.UriParser syntax)

Disassembly:
	0x0361B644 CBZ X8, 0x361B658
	0x0361B648 STR X0, [X8 + 0x28]
	0x0361B64C LDP X20, X19, [X31 + 0x10]
	0x0361B650 LDP X30, X21, [X31], #0x20
	0x0361B654 RET
	0x0361B658 BL 0x1C16F20
	0x0361B65C ADRP X0, 0xB20000
	0x0361B660 LDR X0, [X0 + 0x150]
	0x0361B664 BL 0x1C16D08
	0x0361B668 MOV X1, X31
	0x0361B66C BL 0x320A1E4
	0x0361B670 MOV X19, X0
	0x0361B674 ADRP X0, 0xAD8000
	0x0361B678 LDR X0, [X0 + 0x5B0]
	0x0361B67C BL 0x1C16D08
	0x0361B680 BL 0x1C16F10
	0x0361B684 MOV X1, X19
	0x0361B688 MOV X2, X31
	0x0361B68C MOV X20, X0
	0x0361B690 BL 0x337DF1C
	0x0361B694 ADRP X0, 0xB20000
	0x0361B698 LDR X0, [X0 + 0x168]
	0x0361B69C BL 0x1C16D08
	0x0361B6A0 MOV X1, X0
	0x0361B6A4 MOV X0, X20
	0x0361B6A8 BL 0x1C16DEC
	0x0361B6AC STR X30, [X31 - 0x20]!
	0x0361B6B0 STP X20, X19, [X31 + 0x10]
	0x0361B6B4 LDR X8, [X0 + 0x20]
	0x0361B6B8 CBZ X8, 0x361B6C8
	0x0361B6BC LDP X20, X19, [X31 + 0x10]
	0x0361B6C0 LDR X30, [X31], #0x20
	0x0361B6C4 B 0x361B718
	0x0361B6C8 ADRP X0, 0xB20000
	0x0361B6CC LDR X0, [X0 + 0x150]
	0x0361B6D0 BL 0x1C16D08
	0x0361B6D4 MOV X1, X31
	0x0361B6D8 BL 0x320A1E4
	0x0361B6DC MOV X19, X0
	0x0361B6E0 ADRP X0, 0xAD8000
	0x0361B6E4 LDR X0, [X0 + 0x5B0]
	0x0361B6E8 BL 0x1C16D08
	0x0361B6EC BL 0x1C16F10
	0x0361B6F0 MOV X1, X19
	0x0361B6F4 MOV X2, X31
	0x0361B6F8 MOV X20, X0
	0x0361B6FC BL 0x337DF1C
	0x0361B700 ADRP X0, 0xB20000
	0x0361B704 LDR X0, [X0 + 0x170]
	0x0361B708 BL 0x1C16D08
	0x0361B70C MOV X1, X0
	0x0361B710 MOV X0, X20
	0x0361B714 BL 0x1C16DEC
	0x0361B718 SUB X31, X31, 0x80
	0x0361B71C STP X30, X27, [X31 + 0x30]
	0x0361B720 STP X26, X25, [X31 + 0x40]
	0x0361B724 STP X24, X23, [X31 + 0x50]
	0x0361B728 STP X22, X21, [X31 + 0x60]
	0x0361B72C STP X20, X19, [X31 + 0x70]
	0x0361B730 ADRP X20, 0xDC5000
	0x0361B734 LDRB W8, [X20 + 0x480]
	0x0361B738 MOV X19, X0
	0x0361B73C TBNZ X8, 0x0, 0x361B784
	0x0361B740 ADRP X0, 0xAE1000
	0x0361B744 LDR X0, [X0 + 0x8D8]
	0x0361B748 BL 0x1C16CF4
	0x0361B74C ADRP X0, 0xB20000
	0x0361B750 LDR X0, [X0 + 0x58]
	0x0361B754 BL 0x1C16CF4
	0x0361B758 ADRP X0, 0xADA000
	0x0361B75C LDR X0, [X0 + 0xA28]
	0x0361B760 BL 0x1C16CF4
	0x0361B764 ADRP X0, 0xB20000
	0x0361B768 LDR X0, [X0 + 0xC0]
	0x0361B76C BL 0x1C16CF4
	0x0361B770 ADRP X0, 0xAE1000
	0x0361B774 LDR X0, [X0 + 0x988]
	0x0361B778 BL 0x1C16CF4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xDC6000
	007 Move W8, [X22+1174]
	008 Move X19, X2
	009 Move W21, W1
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0xB21000
	016 Move X0, [X0+72]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+1174], W8
	020 NotImplemented "Instruction LDRH not yet implemented."
	021 Subtract W9, W8, 97
	022 NotImplemented "Instruction CMP not yet implemented."
	023 Subtract W9, W8, 65
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Or W8, W8, 32
	026 NotImplemented "Instruction STRH not yet implemented."
	027 And W3, W21, 0xFFFF
	028 NotImplemented "Instruction CMP not yet implemented."
	029 And X10, X21, 0xFFFF
	030 Add X8, X20, 2
	031 Move W9, 1
	032 Subtract X10, X10, 1
	033 Move X11, 0x6800
	034 NotImplemented "Instruction LDRH not yet implemented."
	035 Subtract W13, W12, 97
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Subtract W13, W12, 65
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Subtract W13, W12, 48
	040 NotImplemented "Instruction CMP not yet implemented."
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Move W12, W12
	043 NotImplemented "Instruction LSLV not yet implemented."
	044 And X31, X12, X11
	045 Or W12, W12, 32
	046 NotImplemented "Instruction STRH not yet implemented."
	047 Subtract X10, X10, 1
	048 Add X8, X8, 2
	049 Move X21, 0xB21000
	050 Move X21, [X21+72]
	051 Move X0, X31
	052 Move X1, X20
	053 Move W2, W31
	054 Move X4, X31
	055 Call String.CreateString, X0, X1, X2, X3
	056 Move X8, [X21]
	057 Move X20, X0
	058 Move W9, [X8+224]
	059 Compare W9, 0
	060 JumpIfNotEqual {63}
	061 Move X0, X8
	062 Call 0x1C17DFC
	063 Move X0, X20
	064 Move X1, X31
	065 Call UriParser.FindOrFetchAsUnknownV1Syntax, X0
	066 Move X8, X0
	067 Move W0, W31
	068 Move [X19], X8
	069 Move W0, 2
	070 Move X20, [X31+32]
	071 Move X19, [X31+40]
	072 Move X22, [X31+16]
	073 Move X21, [X31+24]
	074 Move X30, [X31+48]
	075 Return X0

Method: System.UInt16 CheckAuthorityHelper(System.Char* pString, System.UInt16 idx, System.UInt16 length, ref System.ParsingError err, ref System.Uri/Flags flags, System.UriParser syntax, ref System.String newHost)

Disassembly:
	0x03620200 LDR X8, [X19 + 0x30]
	0x03620204 AND X9, X8, 0xFFFFFFFFFFFF
	0x03620208 MOVZ W8, 0x50000
	0x0362020C ORR X8, X9, X8, 0x0
	0x03620210 STR X8, [X19 + 0x30]
	0x03620214 LDR X0, [X19 + 0x20]
	0x03620218 CBZ X0, 0x36204F4
	0x0362021C MOVZ W2, 0x80
	0x03620220 MOVZ W3, 0x1
	0x03620224 MOV X1, X19
	0x03620228 MOV X4, X31
	0x0362022C BL 0x362CEA8
	0x03620230 CBZ X0, 0x362029C
	0x03620234 LDR W8, [X0 + 0x10]
	0x03620238 MOV X21, X0
	0x0362023C CBZ W8, 0x362029C
	0x03620240 CMP W8, 0x1
	0x03620244 B.LT 0x36202BC
	0x03620248 MOV W23, W31
	0x0362024C MOV W22, W31
	0x03620250 MOVZ W24, 0xA
	0x03620254 MOV X0, X21
	0x03620258 MOV W1, W22
	0x0362025C MOV X2, X31
	0x03620260 BL 0x3222A1C
	0x03620264 SUB W8, W0, 0x30
	0x03620268 AND W8, W8, 0xFFFF
	0x0362026C CMP W8, 0x9
	0x03620270 B.HI 0x3620408
	0x03620274 MUL W8, W23, W24
	0x03620278 ADD W8, W8, W0, UXTH
	0x0362027C SUB W23, W8, 0x30
	0x03620280 CMP W23, 0x10000
	0x03620284 B.GE 0x3620408
	0x03620288 LDR W8, [X21 + 0x10]
	0x0362028C ADD W22, W22, 0x1
	0x03620290 CMP W22, W8
	0x03620294 B.LT 0x3620254
	0x03620298 B 0x36202C0
	0x0362029C LDP X9, X8, [X19 + 0x30]
	0x036202A0 MOVZ W10, 0x208
	0x036202A4 AND X9, X9, 0x7FFFFFFFFFFFFF
	0x036202A8 ORR X9, X9, X10, 0x0
	0x036202AC STR X9, [X19 + 0x30]
	0x036202B0 CBZ X8, 0x36204F4
	0x036202B4 STRH W31, [X8 + 0x2E]
	0x036202B8 B 0x3620304
	0x036202BC MOV W23, W31
	0x036202C0 LDR X8, [X19 + 0x38]
	0x036202C4 CBZ X8, 0x36204F4
	0x036202C8 LDRH W9, [X8 + 0x2E]
	0x036202CC CMP W23, W9
	0x036202D0 B.EQ 0x3620304
	0x036202D4 LDR X9, [X19 + 0x20]
	0x036202D8 CBZ X9, 0x36204F4
	0x036202DC LDR W9, [X9 + 0x1C]
	0x036202E0 LDR X10, [X19 + 0x30]
	0x036202E4 MOVZ W11, 0x208
	0x036202E8 CMP W23, W9
	0x036202EC AND X9, X10, 0x7FFFFFFFFFFFFF
	0x036202F0 CSET W10, NE
	0x036202F4 ORR X9, X9, X10, 0x17
	0x036202F8 ORR X9, X9, X11, 0x0
	0x036202FC STR X9, [X19 + 0x30]
	0x03620300 STRH W23, [X8 + 0x2E]
	0x03620304 STR X20, [X8 + 0x10]
	0x03620308 LDP X20, X19, [X31 + 0x50]
	0x0362030C LDP X22, X21, [X31 + 0x40]
	0x03620310 LDP X24, X23, [X31 + 0x30]
	0x03620314 LDR X30, [X31 + 0x20]
	0x03620318 ADD X31, X31, 0x60
	0x0362031C RET
	0x03620320 LDR X8, [X19 + 0x38]
	0x03620324 CBZ X8, 0x36204F4
	0x03620328 ADRP X9, 0xAD5000
	0x0362032C LDR X9, [X9 + 0xA28]
	0x03620330 ADD X22, X8, 0x18
	0x03620334 LDR X0, [X9]
	0x03620338 LDR W9, [X0 + 0xE0]
	0x0362033C CBNZ W9, 0x3620344
	0x03620340 BL 0x1C16DFC
	0x03620344 ADD X3, X31, 0x18
	0x03620348 MOV X0, X20
	0x0362034C MOV W1, W31
	0x03620350 MOV W2, W21
	0x03620354 MOV X4, X22
	0x03620358 BL 0x362052C
	0x0362035C CBZ X0, 0x36204F4
	0x03620360 LDR W8, [X0 + 0x10]
	0x03620364 MOV X20, X0
	0x03620368 CMP W8, 0x1
	0x0362036C B.LT 0x36203E4
	0x03620370 MOV W21, W31
	0x03620374 LDR X8, [X19 + 0x38]
	0x03620378 CBZ X8, 0x36204F4
	0x0362037C LDRH W9, [X8 + 0x2C]
	0x03620380 LDRH W8, [X8 + 0x36]
	0x03620384 ADD W9, W21, W9
	0x03620388 CMP W9, W8
	0x0362038C B.CS 0x36203EC
	0x03620390 MOV X0, X20
	0x03620394 MOV W1, W21
	0x03620398 MOV X2, X31
	0x0362039C BL 0x3222A1C
	0x036203A0 LDR X8, [X19 + 0x38]
	0x036203A4 CBZ X8, 0x36204F4
	0x036203A8 MOV W22, W0
	0x036203AC LDR X0, [X19 + 0x10]
	0x036203B0 CBZ X0, 0x36204F4
	0x036203B4 LDRH W8, [X8 + 0x2C]
	0x036203B8 MOV X2, X31
	0x036203BC ADD W1, W21, W8
	0x036203C0 BL 0x3222A1C
	0x036203C4 AND W8, W22, 0xFFFF
	0x036203C8 CMP W8, W0, UXTH
	0x036203CC B.NE 0x36203EC
	0x036203D0 LDR W8, [X20 + 0x10]
	0x036203D4 ADD W9, W21, 0x1
	0x036203D8 AND W21, W9, 0xFFFF
	0x036203DC CMP W21, W8
	0x036203E0 B.LT 0x3620374
	0x036203E4 LDR X8, [X19 + 0x30]
	0x036203E8 B 0x36203F8
	0x036203EC LDR X8, [X19 + 0x30]
	0x036203F0 MOVZ W9, 0x104
	0x036203F4 ORR X8, X8, X9, 0x0
	0x036203F8 LDR X9, [X31 + 0x18]
	0x036203FC AND X8, X8, 0xFFFFFFFFFFFF
	0x03620400 AND X9, X9, 0x7FFFF
	0x03620404 B 0x362020C
	0x03620408 ADRP X0, 0xAD3000
	0x0362040C LDR X0, [X0 + 0x9D0]
	0x03620410 BL 0x1C16D08
	0x03620414 MOVZ W1, 0x2
	0x03620418 BL 0x1C16D6C
	0x0362041C LDR X19, [X19 + 0x20]
	0x03620420 MOV X20, X0
	0x03620424 MOV X0, X19
	0x03620428 BL 0x19903C0
	0x0362042C MOV X0, X19
	0x03620430 MOV X1, X31
	0x03620434 BL 0x33BE520
	0x03620438 MOV X19, X0
	0x0362043C BL 0x19903C0
	0x03620440 LDR X8, [X19]
	0x03620444 MOV X0, X19
	0x03620448 LDR X9, [X8 + 0x2E8]
	0x0362044C LDR X1, [X8 + 0x2F0]
	0x03620450 BLR X9
	0x03620454 MOV X19, X0
	0x03620458 MOV X0, X20
	0x0362045C BL 0x19903C0
	0x03620460 MOV X0, X20
	0x03620464 MOV X1, X19
	0x03620468 BL 0x19980B4
	0x0362046C MOV X0, X20
	0x03620470 MOV X1, X31
	0x03620474 MOV X2, X19
	0x03620478 BL 0x1993444
	0x0362047C MOV X0, X20
	0x03620480 BL 0x19903C0
	0x03620484 MOV X0, X20
	0x03620488 MOV X1, X21
	0x0362048C BL 0x19980B4
	0x03620490 MOVZ W1, 0x1
	0x03620494 MOV X0, X20
	0x03620498 MOV X2, X21
	0x0362049C BL 0x1993444
	0x036204A0 ADRP X0, 0xB1B000
	0x036204A4 LDR X0, [X0 + 0x220]
	0x036204A8 BL 0x1C16D08
	0x036204AC MOV X1, X20
	0x036204B0 MOV X2, X31
	0x036204B4 BL 0x320A16C
	0x036204B8 MOV X19, X0
	0x036204BC ADRP X0, 0xB1B000
	0x036204C0 LDR X0, [X0 + 0xD8]
	0x036204C4 BL 0x1C16D08
	0x036204C8 BL 0x1C16F10
	0x036204CC MOV X1, X19
	0x036204D0 MOV X2, X31
	0x036204D4 MOV X20, X0
	0x036204D8 BL 0x3628F6C
	0x036204DC ADRP X0, 0xB1B000
	0x036204E0 LDR X0, [X0 + 0x228]
	0x036204E4 BL 0x1C16D08
	0x036204E8 MOV X1, X0
	0x036204EC MOV X0, X20
	0x036204F0 BL 0x1C16DEC
	0x036204F4 BL 0x1C16F20
	0x036204F8 ADRP X0, 0xAD5000
	0x036204FC LDR X0, [X0 + 0xA28]
	0x03620500 BL 0x1C16D08
	0x03620504 BL 0x19903D0
	0x03620508 MOVZ W0, 0x6
	0x0362050C BL 0x361B0C8
	0x03620510 MOV X19, X0
	0x03620514 ADRP X0, 0xB1B000
	0x03620518 LDR X0, [X0 + 0x228]
	0x0362051C BL 0x1C16D08
	0x03620520 MOV X1, X0
	0x03620524 MOV X0, X19
	0x03620528 BL 0x1C16DEC
	0x0362052C STR X30, [X31 - 0x40]!
	0x03620530 STP X24, X23, [X31 + 0x10]
	0x03620534 STP X22, X21, [X31 + 0x20]
	0x03620538 STP X20, X19, [X31 + 0x30]
	0x0362053C ADRP X24, 0xDC0000
	0x03620540 LDRB W8, [X24 + 0x48F]
	0x03620544 MOV X23, X4
	0x03620548 MOV X19, X3
	0x0362054C MOV W21, W2
	0x03620550 MOV W22, W1
	0x03620554 MOV X20, X0
	0x03620558 TBNZ X8, 0x0, 0x362057C
	0x0362055C ADRP X0, 0xAD5000
	0x03620560 LDR X0, [X0 + 0x278]
	0x03620564 BL 0x1C16CF4
	0x03620568 ADRP X0, 0xAD5000
	0x0362056C LDR X0, [X0 + 0xA28]
	0x03620570 BL 0x1C16CF4
	0x03620574 MOVZ W8, 0x1
	0x03620578 STRB W8, [X24 + 0x48F]
	0x0362057C STRB W31, [X31 + 0xC]
	0x03620580 LDR X24, [X19]
	0x03620584 AND X8, X24, 0x7FFFF
	0x03620588 CMP X8, 0x30000
	0x0362058C B.HI 0x36205C4
	0x03620590 CMP X8, 0x10000
	0x03620594 B.EQ 0x36205F4
	0x03620598 CMP X8, 0x20000
	0x0362059C B.EQ 0x3620610
	0x036205A0 CMP X8, 0x30000
	0x036205A4 B.NE 0x36206D0
	0x036205A8 AND W1, W22, 0xFFFF
	0x036205AC AND W2, W21, 0xFFFF
	0x036205B0 ADD X3, X31, 0xC
	0x036205B4 MOV X0, X20
	0x036205B8 MOV X4, X31
	0x036205BC BL 0x362CEC0
	0x036205C0 B 0x36206A8
	0x036205C4 CMP X8, 0x40000
	0x036205C8 B.EQ 0x362062C
	0x036205CC CMP X8, 0x50000
	0x036205D0 B.EQ 0x3620648
	0x036205D4 CMP X8, 0x70000
	0x036205D8 B.NE 0x36206D0
	0x036205DC ADRP X8, 0xAD5000
	0x036205E0 LDR X8, [X8 + 0x278]
	0x036205E4 LDR X8, [X8]
	0x036205E8 LDR X8, [X8 + 0xB8]
	0x036205EC LDR X0, [X8]
	0x036205F0 B 0x36206A8
	0x036205F4 AND W1, W22, 0xFFFF
	0x036205F8 ADD X2, X31, 0xC
	0x036205FC MOV X0, X20
	0x03620600 MOV X3, X23
	0x03620604 MOV X4, X31
	0x03620608 BL 0x36273AC
	0x0362060C B 0x36206A8
	0x03620610 AND W1, W22, 0xFFFF
	0x03620614 AND W2, W21, 0xFFFF
	0x03620618 ADD X3, X31, 0xC
	0x0362061C MOV X0, X20
	0x03620620 MOV X4, X31
	0x03620624 BL 0x35F4BB4
	0x03620628 B 0x36206A8
	0x0362062C AND W1, W22, 0xFFFF
	0x03620630 AND W2, W21, 0xFFFF
	0x03620634 ADD X3, X31, 0xC
	0x03620638 MOV X0, X20
	0x0362063C MOV X4, X31
	0x03620640 BL 0x362DFA0
	0x03620644 B 0x36206A8
	0x03620648 ADRP X8, 0xAD5000
	0x0362064C LDR X8, [X8 + 0xA28]
	0x03620650 LDR X0, [X8]
	0x03620654 LDR W8, [X0 + 0xE0]
	0x03620658 CBZ W8, 0x3620680
	0x0362065C TBNZ X24, 0x1B, 0x3620688
	0x03620660 CBZ X20, 0x3620704
	0x03620664 AND W8, W21, 0xFFFF
	0x03620668 AND W1, W22, 0xFFFF
	0x0362066C SUB W2, W8, W22, UXTH
	0x03620670 MOV X0, X20
	0x03620674 MOV X3, X31
	0x03620678 BL 0x3228DE4
	0x0362067C B 0x362069C
	0x03620680 BL 0x1C16DFC
	0x03620684 TBZ X24, 0x1B, 0x3620660
	0x03620688 ADRP X8, 0xAD5000
	0x0362068C LDR X8, [X8 + 0x278]
	0x03620690 LDR X8, [X8]
	0x03620694 LDR X8, [X8 + 0xB8]
	0x03620698 LDR X0, [X8]
	0x0362069C CBZ X0, 0x3620704
	0x036206A0 LDR W8, [X0 + 0x10]
	0x036206A4 CBZ W8, 0x36206B0
	0x036206A8 LDRB W8, [X31 + 0xC]
	0x036206AC CBZ W8, 0x36206BC
	0x036206B0 LDR X8, [X19]
	0x036206B4 ORR X8, X8, 0x7FFFFF
	0x036206B8 STR X8, [X19]
	0x036206BC LDP X20, X19, [X31 + 0x30]
	0x036206C0 LDP X22, X21, [X31 + 0x20]
	0x036206C4 LDP X24, X23, [X31 + 0x10]
	0x036206C8 LDR X30, [X31], #0x40
	0x036206CC RET
	0x036206D0 ADRP X0, 0xAD5000
	0x036206D4 LDR X0, [X0 + 0xA28]
	0x036206D8 BL 0x1C16D08
	0x036206DC BL 0x19903D0
	0x036206E0 MOVZ W0, 0x8
	0x036206E4 BL 0x361B0C8
	0x036206E8 MOV X19, X0
	0x036206EC ADRP X0, 0xB1B000
	0x036206F0 LDR X0, [X0 + 0x230]
	0x036206F4 BL 0x1C16D08
	0x036206F8 MOV X1, X0
	0x036206FC MOV X0, X19
	0x03620700 BL 0x1C16DEC
	0x03620704 BL 0x1C16F20
	0x03620708 SUB X31, X31, 0x70
	0x0362070C STP X29, X30, [X31 + 0x10]
	0x03620710 STP X28, X27, [X31 + 0x20]
	0x03620714 STP X26, X25, [X31 + 0x30]
	0x03620718 STP X24, X23, [X31 + 0x40]
	0x0362071C STP X22, X21, [X31 + 0x50]
	0x03620720 STP X20, X19, [X31 + 0x60]
	0x03620724 ADRP X24, 0xDC0000
	0x03620728 LDRB W8, [X24 + 0x49A]
	0x0362072C MOV W20, W4
	0x03620730 MOV W21, W3
	0x03620734 MOV X19, X2
	0x03620738 MOV X22, X1
	0x0362073C MOV X23, X0
	0x03620740 TBNZ X8, 0x0, 0x3620764
	0x03620744 ADRP X0, 0xAD5000
	0x03620748 LDR X0, [X0 + 0x170]
	0x0362074C BL 0x1C16CF4
	0x03620750 ADRP X0, 0xB1B000
	0x03620754 LDR X0, [X0 + 0x58]
	0x03620758 BL 0x1C16CF4
	0x0362075C MOVZ W8, 0x1
	0x03620760 STRB W8, [X24 + 0x49A]
	0x03620764 STRB W31, [X31 + 0xC]
	0x03620768 LDRH W27, [X19]
	0x0362076C CMP W27, W21, UXTH
	0x03620770 B.CS 0x3620AB4
	0x03620774 MOV W26, W31
	0x03620778 MOV W29, W31
	0x0362077C MOV W25, W31
	0x03620780 AND W8, W21, 0xFFFF
	0x03620784 STR W8, [X31 + 0x8]
	0x03620788 AND X8, X27, 0xFFFF
	0x0362078C LDRH W24, [X22, X8, LSL #1]
	0x03620790 CMP W24, 0x20
	0x03620794 B.CC 0x3620950
	0x03620798 SUB W8, W24, 0x7F
	0x0362079C AND W8, W8, 0xFFFF
	0x036207A0 CMP W8, 0x20
	0x036207A4 B.LS 0x3620950
	0x036207A8 CMP W24, 0x7B
	0x036207AC AND W28, W27, 0xFFFF
	0x036207B0 B.CC 0x362082C
	0x036207B4 CMP W24, 0x7E
	0x036207B8 B.EQ 0x362082C
	0x036207BC LDRB W8, [X23 + 0x40]
	0x036207C0 CBZ W8, 0x3620958
	0x036207C4 ADRP X8, 0xAD5000
	0x036207C8 LDR X8, [X8 + 0x170]
	0x036207CC LDR X0, [X8]
	0x036207D0 LDR W8, [X0 + 0xE0]
	0x036207D4 CBNZ W8, 0x36207DC
	0x036207D8 BL 0x1C16DFC
	0x036207DC MOV W0, W24
	0x036207E0 MOV X1, X31
	0x036207E4 BL 0x331BFEC
	0x036207E8 TBZ X0, 0x0, 0x36208B4
	0x036207EC LDR W9, [X31 + 0x8]
	0x036207F0 ADD W8, W28, 0x1
	0x036207F4 CMP W8, W9
	0x036207F8 B.CS 0x36209B4
	0x036207FC STRB W31, [X31 + 0xC]
	0x03620800 LDRH W1, [X22, W8, UXTW]
	0x03620804 ADD X2, X31, 0xC
	0x03620808 MOVZ W3, 0x1
	0x0362080C MOV W0, W24
	0x03620810 MOV X4, X31
	0x03620814 MOVZ W29, 0x1
	0x03620818 BL 0x36290C0
	0x0362081C TBNZ X0, 0x0, 0x36208CC
	0x03620820 MOVZ W8, 0x48
	0x03620824 ORR W26, W26, W8, 0x0
	0x03620828 B 0x362095C
	0x0362082C CMP W24, W20, UXTH
	0x03620830 B.EQ 0x3620AC0
	0x03620834 AND W8, W20, 0xFFFF
	0x03620838 CMP W8, 0x3F
	0x0362083C B.NE 0x3620864
	0x03620840 CMP W24, 0x23
	0x03620844 B.NE 0x3620864
	0x03620848 LDR X0, [X23 + 0x20]
	0x0362084C CBZ X0, 0x3620930
	0x03620850 MOVZ W1, 0x40
	0x03620854 MOV X2, X31
	0x03620858 BL 0x3629044
	0x0362085C TBZ X0, 0x0, 0x3620930
	0x03620860 B 0x3620AC0
	0x03620864 CMP W24, 0x2E
	0x03620868 B.LE 0x36208D4
	0x0362086C CMP W24, 0x2F
	0x03620870 B.EQ 0x3620970
	0x03620874 CMP W24, 0x5C
	0x03620878 B.EQ 0x3620970
	0x0362087C CMP W24, 0x3F
	0x03620880 B.NE 0x36209C0
	0x03620884 LDRB W8, [X23 + 0x33]
	0x03620888 TBNZ X8, 0x5, 0x3620950
	0x0362088C LDR X0, [X23 + 0x20]
	0x03620890 CBZ X0, 0x362095C
	0x03620894 MOVZ W1, 0x20
	0x03620898 MOV X2, X31
	0x0362089C BL 0x3629044
	0x036208A0 MOVZ W8, 0xFFFE
	0x036208A4 CMP W8, W20, UXTH
	0x036208A8 B.EQ 0x362095C
	0x036208AC TBZ X0, 0x0, 0x3620950
	0x036208B0 B 0x362095C
	0x036208B4 MOVZ W1, 0x1
	0x036208B8 MOV W0, W24
	0x036208BC MOV X2, X31
	0x036208C0 MOVZ W29, 0x1
	0x036208C4 BL 0x3629068
	0x036208C8 TBZ X0, 0x0, 0x3620820
	0x036208CC ORR W26, W26, 0x8
	0x036208D0 B 0x3620958
	0x036208D4 CMP W24, 0x23
	0x036208D8 B.EQ 0x3620930
	0x036208DC CMP W24, 0x2E
	0x036208E0 B.NE 0x36209C0
	0x036208E4 LDR W9, [X31 + 0x8]
	0x036208E8 ADD W8, W28, 0x1
	0x036208EC CMP W8, W9
	0x036208F0 B.NE 0x36208F8
	0x036208F4 TBZ X26, 0x2, 0x36209AC
	0x036208F8 UBFM W8, W28, 0x1F, 0x1E
	0x036208FC ADD X8, X8, X22
	0x03620900 LDRH W8, [X8 + 0x2]
	0x03620904 SUB W8, W8, 0x23
	0x03620908 CMP W8, 0x39
	0x0362090C B.HI 0x362095C
	0x03620910 MOVZ W9, 0x1
	0x03620914 LSLV X8, X9, X8
	0x03620918 MOVZ X9, 0x1801
	0x0362091C MOVK X9, 0x10000000
	0x03620920 MOVK X9, 0x2000000
	0x03620924 ANDS X31, X8, X9, 0x0
	0x03620928 B.NE 0x36209AC
	0x0362092C B 0x362095C
	0x03620930 LDRB W8, [X23 + 0x33]
	0x03620934 TBNZ X8, 0x5, 0x3620950
	0x03620938 LDR X0, [X23 + 0x20]
	0x0362093C CBZ X0, 0x3620958
	0x03620940 MOVZ W1, 0x40
	0x03620944 MOV X2, X31
	0x03620948 BL 0x3629044
	0x0362094C TBNZ X0, 0x0, 0x3620958
	0x03620950 ORR W26, W26, 0x20
	0x03620954 MOVZ W25, 0x1
	0x03620958 MOVZ W29, 0x1
	0x0362095C ADD W27, W27, 0x1
	0x03620960 AND W8, W27, 0xFFFF
	0x03620964 CMP W8, W21, UXTH
	0x03620968 B.CC 0x3620788
	0x0362096C B 0x3620AC0
	0x03620970 AND W8, W26, 0x10
	0x03620974 CMP W24, 0x5C
	0x03620978 CCMP W8, 0x0, 0x0, EQ
	0x0362097C ORR W8, W26, 0x10
	0x03620980 CSEL W26, W8, W26, EQ
	0x03620984 TBNZ X26, 0x2, 0x362095C
	0x03620988 LDR W9, [X31 + 0x8]
	0x0362098C ADD W8, W28, 0x1
	0x03620990 CMP W8, W9
	0x03620994 B.EQ 0x362095C
	0x03620998 LDRH W8, [X22, W8, UXTW]
	0x0362099C CMP W8, 0x5C
	0x036209A0 B.EQ 0x36209AC
	0x036209A4 CMP W8, 0x2F
	0x036209A8 B.NE 0x362095C
	0x036209AC ORR W26, W26, 0x4
	0x036209B0 B 0x362095C
	0x036209B4 MOVZ W8, 0x48
	0x036209B8 ORR W26, W26, W8, 0x0
	0x036209BC B 0x3620958
	0x036209C0 TBZ X29, 0x0, 0x3620A44
	0x036209C4 CMP W24, 0x25
	0x036209C8 B.NE 0x362095C
	0x036209CC LDR W8, [X31 + 0x8]
	0x036209D0 ADD W24, W28, 0x2
	0x036209D4 CMP W24, W8
	0x036209D8 B.CS 0x3620954
	0x036209DC ADRP X8, 0xB1B000
	0x036209E0 LDR X8, [X8 + 0x58]
	0x036209E4 LDRH W25, [X22, W24, UXTW]
	0x036209E8 LDR X0, [X8]
	0x036209EC UBFM W8, W28, 0x1F, 0x1E
	0x036209F0 ADD X8, X8, X22
	0x036209F4 LDRH W28, [X8 + 0x2]
	0x036209F8 LDR W8, [X0 + 0xE0]
	0x036209FC CBNZ W8, 0x3620A04
	0x03620A00 BL 0x1C16DFC
	0x03620A04 MOV W0, W28
	0x03620A08 MOV W1, W25
	0x03620A0C MOV X2, X31
	0x03620A10 BL 0x362A090
	0x03620A14 AND W8, W0, 0xFFFF
	0x03620A18 SUB W9, W8, 0x2E
	0x03620A1C CMP W9, 0x2E
	0x03620A20 B.HI 0x3620A9C
	0x03620A24 MOVZ W10, 0x1
	0x03620A28 LSLV X9, X10, X9
	0x03620A2C MOVZ X10, 0x3
	0x03620A30 MOVK X10, 0x4000
	0x03620A34 ANDS X31, X9, X10, 0x0
	0x03620A38 B.EQ 0x3620A9C
	0x03620A3C ORR W26, W26, 0x80
	0x03620A40 B 0x3620AA8
	0x03620A44 CMP W24, 0x23
	0x03620A48 CSET W8, CC
	0x03620A4C CMP W24, 0x21
	0x03620A50 CSET W9, NE
	0x03620A54 AND W8, W8, W9, 0x0
	0x03620A58 TBNZ X8, 0x0, 0x3620958
	0x03620A5C SUB W8, W24, 0x5B
	0x03620A60 AND W8, W8, 0xFFFF
	0x03620A64 CMP W8, 0x4
	0x03620A68 B.CC 0x3620958
	0x03620A6C CMP W24, 0x3D
	0x03620A70 B.GT 0x3620A88
	0x03620A74 CMP W24, 0x25
	0x03620A78 B.EQ 0x36209CC
	0x03620A7C CMP W24, 0x3C
	0x03620A80 B.EQ 0x3620958
	0x03620A84 B 0x362095C
	0x03620A88 CMP W24, 0x3E
	0x03620A8C B.EQ 0x3620958
	0x03620A90 CMP W24, 0x60
	0x03620A94 B.EQ 0x3620958
	0x03620A98 B 0x362095C
	0x03620A9C MOVZ W9, 0xFFFF
	0x03620AA0 CMP W8, W9
	0x03620AA4 B.EQ 0x3620954
	0x03620AA8 MOVZ W25, 0x1
	0x03620AAC MOV W27, W24
	0x03620AB0 B 0x362095C
	0x03620AB4 MOV W26, W31
	0x03620AB8 MOVZ W8, 0x3
	0x03620ABC B 0x3620ADC
	0x03620AC0 ORN W8, W31, W29, 0x0
	0x03620AC4 ANDS W31, W29, 0x1
	0x03620AC8 MOVZ W9, 0x2
	0x03620ACC AND W8, W8, 0x1
	0x03620AD0 CINC W9, W9, EQ
	0x03620AD4 ANDS W31, W25, 0x1
	0x03620AD8 CSEL W8, W8, W9, NE
	0x03620ADC ORR W0, W8, W26, 0x0
	0x03620AE0 STRH W27, [X19]
	0x03620AE4 LDP X20, X19, [X31 + 0x60]
	0x03620AE8 LDP X22, X21, [X31 + 0x50]
	0x03620AEC LDP X24, X23, [X31 + 0x40]
	0x03620AF0 LDP X26, X25, [X31 + 0x30]
	0x03620AF4 LDP X28, X27, [X31 + 0x20]
	0x03620AF8 LDP X29, X30, [X31 + 0x10]
	0x03620AFC ADD X31, X31, 0x70
	0x03620B00 RET
	0x03620B04 SUB X31, X31, 0x30
	0x03620B08 STP X30, X21, [X31 + 0x10]
	0x03620B0C STP X20, X19, [X31 + 0x20]
	0x03620B10 ORR W8, W31, 0x80000001
	0x03620B14 MOV W20, W1
	0x03620B18 CMP W1, W8
	0x03620B1C B.CS 0x3620BAC
	0x03620B20 MOV W19, W2
	0x03620B24 CMP W2, 0x4
	0x03620B28 B.CS 0x3620C30
	0x03620B2C MOV X21, X0
	0x03620B30 LDR X0, [X0 + 0x20]
	0x03620B34 CBZ X0, 0x3620B60
	0x03620B38 MOV X1, X31
	0x03620B3C BL 0x362CE34
	0x03620B40 TBZ X0, 0x0, 0x3620B84
	0x03620B44 MOV X0, X21
	0x03620B48 MOV W1, W20
	0x03620B4C MOV W2, W19
	0x03620B50 LDP X20, X19, [X31 + 0x20]
	0x03620B54 LDP X30, X21, [X31 + 0x10]
	0x03620B58 ADD X31, X31, 0x30
	0x03620B5C B 0x361DA70
	0x03620B60 MOVZ W8, 0x80000000
	0x03620B64 CMP W20, W8
	0x03620B68 B.NE 0x3620C78
	0x03620B6C MOV X0, X21
	0x03620B70 MOV W1, W19
	0x03620B74 LDP X20, X19, [X31 + 0x20]
	0x03620B78 LDP X30, X21, [X31 + 0x10]
	0x03620B7C ADD X31, X31, 0x30
	0x03620B80 B 0x362441C
	0x03620B84 LDR X0, [X21 + 0x20]
	0x03620B88 CBZ X0, 0x3620CC8
	0x03620B8C MOV X1, X21
	0x03620B90 MOV W2, W20
	0x03620B94 MOV W3, W19
	0x03620B98 LDP X20, X19, [X31 + 0x20]
	0x03620B9C LDP X30, X21, [X31 + 0x10]
	0x03620BA0 MOV X4, X31
	0x03620BA4 ADD X31, X31, 0x30
	0x03620BA8 B 0x362CEA8
	0x03620BAC STR W20, [X31 + 0xC]
	0x03620BB0 ADRP X0, 0xB1B000
	0x03620BB4 LDR X0, [X0 + 0x238]
	0x03620BB8 BL 0x1C16D08
	0x03620BBC ADD X1, X31, 0xC
	0x03620BC0 BL 0x1C16E04
	0x03620BC4 MOV X19, X0
	0x03620BC8 ADRP X0, 0xB1B000
	0x03620BCC LDR X0, [X0 + 0x240]
	0x03620BD0 BL 0x1C16D08
	0x03620BD4 MOV X1, X31
	0x03620BD8 BL 0x320A1E4
	0x03620BDC MOV X20, X0
	0x03620BE0 ADRP X0, 0xADB000
	0x03620BE4 LDR X0, [X0 + 0x760]
	0x03620BE8 BL 0x1C16D08
	0x03620BEC BL 0x1C16F10
	0x03620BF0 MOV X21, X0
	0x03620BF4 ADRP X0, 0xB1B000
	0x03620BF8 LDR X0, [X0 + 0x248]
	0x03620BFC BL 0x1C16D08
	0x03620C00 MOV X1, X0
	0x03620C04 MOV X0, X21
	0x03620C08 MOV X2, X19
	0x03620C0C MOV X3, X20
	0x03620C10 MOV X4, X31
	0x03620C14 BL 0x3312C8C
	0x03620C18 ADRP X0, 0xB1B000
	0x03620C1C LDR X0, [X0 + 0x250]
	0x03620C20 BL 0x1C16D08
	0x03620C24 MOV X1, X0
	0x03620C28 MOV X0, X21
	0x03620C2C BL 0x1C16DEC
	0x03620C30 ADRP X0, 0xADB000
	0x03620C34 LDR X0, [X0 + 0x760]
	0x03620C38 BL 0x1C16D08
	0x03620C3C BL 0x1C16F10
	0x03620C40 MOV X19, X0
	0x03620C44 ADRP X0, 0xB02000
	0x03620C48 LDR X0, [X0 + 0xA0]
	0x03620C4C BL 0x1C16D08
	0x03620C50 MOV X1, X0
	0x03620C54 MOV X0, X19
	0x03620C58 MOV X2, X31
	0x03620C5C BL 0x3316014
	0x03620C60 ADRP X0, 0xB1B000
	0x03620C64 LDR X0, [X0 + 0x250]
	0x03620C68 BL 0x1C16D08
	0x03620C6C MOV X1, X0
	0x03620C70 MOV X0, X19
	0x03620C74 BL 0x1C16DEC
	0x03620C78 ADRP X0, 0xB1B000
	0x03620C7C LDR X0, [X0 + 0x150]
	0x03620C80 BL 0x1C16D08
	0x03620C84 MOV X1, X31
	0x03620C88 BL 0x320A1E4
	0x03620C8C MOV X19, X0
	0x03620C90 ADRP X0, 0xAD3000
	0x03620C94 LDR X0, [X0 + 0x5B0]
	0x03620C98 BL 0x1C16D08
	0x03620C9C BL 0x1C16F10
	0x03620CA0 MOV X1, X19
	0x03620CA4 MOV X2, X31
	0x03620CA8 MOV X20, X0
	0x03620CAC BL 0x337DF1C
	0x03620CB0 ADRP X0, 0xB1B000
	0x03620CB4 LDR X0, [X0 + 0x250]
	0x03620CB8 BL 0x1C16D08
	0x03620CBC MOV X1, X0
	0x03620CC0 MOV X0, X20
	0x03620CC4 BL 0x1C16DEC
	0x03620CC8 BL 0x1C16F20
	0x03620CCC STP X30, X23, [X31 - 0x30]!
	0x03620CD0 STP X22, X21, [X31 + 0x10]
	0x03620CD4 STP X20, X19, [X31 + 0x20]
	0x03620CD8 LDR X8, [X0 + 0x30]
	0x03620CDC MOV W19, W1
	0x03620CE0 MOV X20, X0
	0x03620CE4 UBFM X9, X8, 0x6, 0x1F
	0x03620CE8 AND W21, W9, 0xFE
	0x03620CEC BFM W21, W8, 0x0, 0x0
	0x03620CF0 TBZ X1, 0x4, 0x3620D48
	0x03620CF4 ANDS X31, X8, 0xFFFF
	0x03620CF8 B.EQ 0x3620D04
	0x03620CFC ORR W21, W21, 0x10
	0x03620D00 B 0x3620D48
	0x03620D04 TBZ X8, 0x1B, 0x3620D48
	0x03620D08 LDR X8, [X20 + 0x38]
	0x03620D0C CBZ X8, 0x3620D90
	0x03620D10 LDR X22, [X20 + 0x10]
	0x03620D14 LDRH W23, [X8 + 0x30]
	0x03620D18 MOV X0, X20
	0x03620D1C BL 0x3618030
	0x03620D20 CBZ X22, 0x3620D90
	0x03620D24 ADD W8, W23, W0, UXTH
	0x03620D28 SUB W1, W8, 0x1
	0x03620D2C MOV X0, X22
	0x03620D30 MOV X2, X31
	0x03620D34 BL 0x3222A1C
	0x03620D38 AND W8, W0, 0xFFFF
	0x03620D3C ORR W9, W21, 0x10
	0x03620D40 CMP W8, 0x7C
	0x03620D44 CSEL W21, W9, W21, EQ
	0x03620D48 ANDS W31, W21, W19, 0x0
	0x03620D4C B.EQ 0x3620D70
	0x03620D50 MOV X0, X20
	0x03620D54 MOV W1, W19
	0x03620D58 MOV W2, W21
	0x03620D5C LDP X20, X19, [X31 + 0x20]
	0x03620D60 LDP X22, X21, [X31 + 0x10]
	0x03620D64 MOVZ W3, 0x1
	0x03620D68 LDP X30, X23, [X31], #0x30
	0x03620D6C B 0x362132C
	0x03620D70 MOV X0, X20
	0x03620D74 MOV W1, W19
	0x03620D78 BL 0x3620D94
	0x03620D7C CBZ X0, 0x3620D50
	0x03620D80 LDP X20, X19, [X31 + 0x20]
	0x03620D84 LDP X22, X21, [X31 + 0x10]
	0x03620D88 LDP X30, X23, [X31], #0x30
	0x03620D8C RET
	0x03620D90 BL 0x1C16F20
	0x03620D94 STP X30, X21, [X31 - 0x20]!
	0x03620D98 STP X20, X19, [X31 + 0x10]
	0x03620D9C ADRP X21, 0xDC0000
	0x03620DA0 LDRB W8, [X21 + 0x492]
	0x03620DA4 MOV W20, W1
	0x03620DA8 MOV X19, X0
	0x03620DAC TBNZ X8, 0x0, 0x3620DDC
	0x03620DB0 ADRP X0, 0xAD5000
	0x03620DB4 LDR X0, [X0 + 0xC48]
	0x03620DB8 BL 0x1C16CF4
	0x03620DBC ADRP X0, 0xAD5000
	0x03620DC0 LDR X0, [X0 + 0x278]
	0x03620DC4 BL 0x1C16CF4
	0x03620DC8 ADRP X0, 0xADC000
	0x03620DCC LDR X0, [X0 + 0x988]
	0x03620DD0 BL 0x1C16CF4
	0x03620DD4 MOVZ W8, 0x1
	0x03620DD8 STRB W8, [X21 + 0x492]
	0x03620DDC AND W8, W20, 0xBFFFFFFF
	0x03620DE0 CMP W8, 0x40
	0x03620DE4 B.LE 0x3620E10
	0x03620DE8 CMP W8, 0x7D
	0x03620DEC B.LE 0x3620E54
	0x03620DF0 CMP W8, 0x7F
	0x03620DF4 B.EQ 0x3620E6C
	0x03620DF8 CMP W8, 0x84
	0x03620DFC B.EQ 0x3620F14
	0x03620E00 CMP W8, 0x86
	0x03620E04 B.NE 0x3620EC8
	0x03620E08 LDR X8, [X19 + 0x30]
	0x03620E0C B 0x3620F1C
	0x03620E10 CMP W8, 0x10
	0x03620E14 B.LE 0x3620E88
	0x03620E18 CMP W8, 0x3C
	0x03620E1C MOV X0, X31
	0x03620E20 B.LE 0x3620ED0
	0x03620E24 CMP W8, 0x3D
	0x03620E28 B.EQ 0x3620F6C
	0x03620E2C CMP W8, 0x3F
	0x03620E30 B.EQ 0x3620F74
	0x03620E34 CMP W8, 0x40
	0x03620E38 B.NE 0x3621220
	0x03620E3C LDR X8, [X19 + 0x38]
	0x03620E40 CBZ X8, 0x3621328
	0x03620E44 LDRH W9, [X8 + 0x34]
	0x03620E48 LDRH W8, [X8 + 0x36]
	0x03620E4C CMP W20, 0x40
	0x03620E50 B 0x3620FE4
	0x03620E54 CMP W8, 0x70
	0x03620E58 B.EQ 0x3620EF8
	0x03620E5C CMP W8, 0x7D
	0x03620E60 B.NE 0x3620EC8
	0x03620E64 LDRB W8, [X19 + 0x32]
	0x03620E68 TBNZ X8, 0x5, 0x3620F90
	0x03620E6C LDR X8, [X19 + 0x38]
	0x03620E70 CBZ X8, 0x3621328
	0x03620E74 LDRH W1, [X8 + 0x28]
	0x03620E78 LDR X0, [X19 + 0x10]
	0x03620E7C CBZ W1, 0x3620FEC
	0x03620E80 CBNZ X0, 0x3621000
	0x03620E84 B 0x3621328
	0x03620E88 SUB W8, W8, 0x1
	0x03620E8C CMP W8, 0xF
	0x03620E90 MOV X0, X31
	0x03620E94 B.HI 0x3621220
	0x03620E98 ADRP X9, 0xFFFFFFFFFD577000
	0x03620E9C ADD X9, X9, 0x347
	0x03620EA0 ADR X10, 0x10
	0x03620EA4 LDRB W11, [X9, X8, LSL]
	0x03620EA8 ADD X10, X10, X11, 0x2, LSL
	0x03620EAC BR X10
	0x03620EB0 CMP W20, 0x1
	0x03620EB4 B.NE 0x36212A8
	0x03620EB8 LDR X8, [X19 + 0x20]
	0x03620EBC CBZ X8, 0x3621328
	0x03620EC0 LDR X0, [X8 + 0x20]
	0x03620EC4 B 0x3621220
	0x03620EC8 MOV X0, X31
	0x03620ECC B 0x3621220
	0x03620ED0 CMP W8, 0x20
	0x03620ED4 B.EQ 0x3620FD0
	0x03620ED8 CMP W8, 0x30
	0x03620EDC B.NE 0x3621220
	0x03620EE0 LDR X8, [X19 + 0x38]
	0x03620EE4 CBZ X8, 0x3621328
	0x03620EE8 LDR X0, [X19 + 0x10]
	0x03620EEC CBZ X0, 0x3621328
	0x03620EF0 LDRH W9, [X8 + 0x34]
	0x03620EF4 B 0x3620F0C
	0x03620EF8 LDR X8, [X19 + 0x38]
	0x03620EFC CBZ X8, 0x3621328
	0x03620F00 LDR X0, [X19 + 0x10]
	0x03620F04 CBZ X0, 0x3621328
	0x03620F08 LDRH W9, [X8 + 0x36]
	0x03620F0C LDRH W1, [X8 + 0x30]
	0x03620F10 B 0x36212C0
	0x03620F14 LDR X8, [X19 + 0x30]
	0x03620F18 TBNZ X8, 0x15, 0x3621144
	0x03620F1C TBNZ X8, 0x17, 0x3620F50
	0x03620F20 LDR X8, [X19 + 0x20]
	0x03620F24 CBZ X8, 0x3621328
	0x03620F28 LDR W8, [X8 + 0x1C]
	0x03620F2C ADDS W31, W8, 0x1
	0x03620F30 B.EQ 0x3620F50
	0x03620F34 LDR X8, [X19 + 0x38]
	0x03620F38 CBZ X8, 0x3621328
	0x03620F3C LDR X0, [X19 + 0x10]
	0x03620F40 CBZ X0, 0x3621328
	0x03620F44 LDRH W9, [X8 + 0x30]
	0x03620F48 LDRH W1, [X8 + 0x2A]
	0x03620F4C B 0x3621174
	0x03620F50 LDR X8, [X19 + 0x38]
	0x03620F54 CBZ X8, 0x3621328
	0x03620F58 LDRH W9, [X8 + 0x30]
	0x03620F5C LDRH W1, [X8 + 0x2A]
	0x03620F60 SUBS W2, W9, W1
	0x03620F64 B.NE 0x36210A4
	0x03620F68 B 0x362120C
	0x03620F6C LDRB W8, [X19 + 0x32]
	0x03620F70 TBNZ X8, 0x5, 0x3621268
	0x03620F74 LDR X8, [X19 + 0x38]
	0x03620F78 CBZ X8, 0x3621328
	0x03620F7C LDRH W1, [X8 + 0x28]
	0x03620F80 LDR X0, [X19 + 0x10]
	0x03620F84 CBZ W1, 0x362122C
	0x03620F88 CBNZ X0, 0x3621240
	0x03620F8C B 0x3621328
	0x03620F90 LDR X8, [X19 + 0x38]
	0x03620F94 CBZ X8, 0x3621328
	0x03620F98 LDR X0, [X19 + 0x10]
	0x03620F9C CBZ X0, 0x3621328
	0x03620FA0 LDRH W9, [X8 + 0x2A]
	0x03620FA4 LDRH W1, [X8 + 0x28]
	0x03620FA8 MOV X3, X31
	0x03620FAC SUB W2, W9, W1
	0x03620FB0 BL 0x3228DE4
	0x03620FB4 LDR X8, [X19 + 0x38]
	0x03620FB8 CBZ X8, 0x3621328
	0x03620FBC MOV X20, X0
	0x03620FC0 LDR X0, [X19 + 0x10]
	0x03620FC4 CBZ X0, 0x3621328
	0x03620FC8 LDRH W9, [X8 + 0x36]
	0x03620FCC B 0x3621300
	0x03620FD0 LDR X8, [X19 + 0x38]
	0x03620FD4 CBZ X8, 0x3621328
	0x03620FD8 LDRH W9, [X8 + 0x32]
	0x03620FDC LDRH W8, [X8 + 0x34]
	0x03620FE0 CMP W20, 0x20
	0x03620FE4 CINC W9, W9, EQ
	0x03620FE8 B 0x36211F4
	0x03620FEC CBZ X0, 0x3621328
	0x03620FF0 LDRH W9, [X8 + 0x36]
	0x03620FF4 LDR W10, [X0 + 0x10]
	0x03620FF8 CMP W10, W9
	0x03620FFC B.EQ 0x3621220
	0x03621000 LDRH W8, [X8 + 0x36]
	0x03621004 B 0x3621244
	0x03621008 LDRB W8, [X19 + 0x32]
	0x0362100C TBZ X8, 0x5, 0x362120C
	0x03621010 LDR X8, [X19 + 0x38]
	0x03621014 CBZ X8, 0x3621328
	0x03621018 LDRH W9, [X8 + 0x2C]
	0x0362101C LDRH W1, [X8 + 0x2A]
	0x03621020 CMP W20, 0x2
	0x03621024 CSET W8, EQ

ISIL:
	001 Subtract X31, X31, 240
	002 Move [X31+144], X29
	003 Move [X31+152], X30
	004 Move [X31+160], X28
	005 Move [X31+168], X27
	006 Move [X31+176], X26
	007 Move [X31+184], X25
	008 Move [X31+192], X24
	009 Move [X31+200], X23
	010 Move [X31+208], X22
	011 Move [X31+216], X21
	012 Move [X31+224], X20
	013 Move [X31+232], X19
	014 Move X19, 0xDC1000
	015 Move W8, [X19+1175]
	016 Move X29, X7
	017 Move X24, X6
	018 Move X20, X5
	019 Move X22, X4
	020 Move W26, W3
	021 Move W23, W2
	022 Move [X31+112], X1
	023 Move [X31+96], X0
	024 Move TEMP, X8
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {36}
	028 Move X0, 0xB1C000
	029 Move X0, [X0+72]
	030 Call 0x1C17CF4
	031 Move X0, 0xAD6000
	032 Move X0, [X0+2600]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X19+1175], W8
	036 And W25, W26, 0xFFFF
	037 Move [X31+132], W31
	038 Move [X31+128], W31
	039 Move [X31+124], W31
	040 Move [X31+140], W25
	041 Move [X29], X31
	042 Move X8, 0xAD6000
	043 Move X8, [X8+2600]
	044 Move [X31+136], W31
	045 Move X0, [X8]
	046 Move W8, [X0+224]
	047 Compare W8, 0
	048 JumpIfNotEqual {53}
	049 Call 0x1C17DFC
	050 Move X8, 0xAD6000
	051 Move X8, [X8+2600]
	052 Move X0, [X8]
	053 Move X8, [X0+184]
	054 Move W19, [X8+112]
	055 Call 0x1C17D44
	056 Compare W19, 0
	057 JumpIfEqual {71}
	058 Move X8, 0xAD6000
	059 Move X8, [X8+2600]
	060 Move X0, [X8]
	061 Move W8, [X0+224]
	062 Compare W8, 0
	063 JumpIfNotEqual {65}
	064 Call 0x1C17DFC
	065 Move X0, X24
	066 Call Uri.IriParsingStatic, X0
	067 And W8, W0, 1
	068 Move [X31+108], W8
	069 Compare X24, 0
	070 JumpIfNotEqual {74}
	071 Move [X31+108], W31
	072 Compare X24, 0
	073 JumpIfEqual {945}
	074 Move X8, [X20]
	075 Move W10, [X31+108]
	076 Move W28, [X24+16]
	077 And X9, X8, 0x3FFFFFFFF
	078 Move X8, X8
	079 ShiftRight X8, 34
	080 And X8, X8, 0x7FFFFFFF
	081 Move [X31+88], X9
	082 Move X9, X9
	083 ShiftRight X9, 33
	084 And X9, X9, 0x7FFFFFFF
	085 NotImplemented "Instruction ORN not yet implemented."
	086 And W9, W10, W9
	087 And W27, W8, 1
	088 And W19, W9, W27
	089 And W8, W23, 0xFFFF
	090 Move [X31+84], W9
	091 Move [X31+104], W8
	092 Move X8, [X31+96]
	093 Move X0, [X8+24]
	094 Compare X0, 0
	095 JumpIfEqual {945}
	096 Move W2, [X31+104]
	097 Move W1, W31
	098 Move X3, X31
	099 Call String.Substring, X0, X1, X2
	100 Move [X29], X0
	101 And W8, W23, 0xFFFF
	102 NotImplemented "Instruction CMP not yet implemented."
	103 Move W1, 128
	104 Move X0, X24
	105 Move X2, X31
	106 Call UriParser.InFact, X0, X1
	107 Move TEMP, X0
	108 And TEMP, TEMP, 1
	109 Compare TEMP, 1
	110 JumpIfNotEqual {201}
	111 Move X21, [X20]
	112 And X8, X21, 0xFFFFFFFFFFFFFFF
	113 Move [X20], X8
	114 Move X8, 0xAD6000
	115 Move X8, [X8+2600]
	116 Move X0, [X8]
	117 Move W8, [X0+224]
	118 Compare W8, 0
	119 JumpIfEqual {179}
	120 Move TEMP, X21
	121 And TEMP, TEMP, 0x20000000
	122 Compare TEMP, 0x20000000
	123 JumpIfEqual {184}
	124 Move X9, [X31+112]
	125 And X8, X23, 0xFFFF
	126 NotImplemented "Instruction LDRH not yet implemented."
	127 NotImplemented "Instruction CMP not yet implemented."
	128 NotImplemented "Instruction CMP not yet implemented."
	129 NotImplemented "Instruction CMP not yet implemented."
	130 NotImplemented "Instruction CMP not yet implemented."
	131 NotImplemented "Instruction CMP not yet implemented."
	132 Move X8, 0xAD6000
	133 Move X8, [X8+2600]
	134 Move X0, [X8]
	135 Move W8, [X0+224]
	136 Compare W8, 0
	137 JumpIfNotEqual {139}
	138 Call 0x1C17DFC
	139 Move W1, 0x2000
	140 Move X0, X24
	141 Move X2, X31
	142 Call UriParser.InFact, X0, X1
	143 Move TEMP, X0
	144 And TEMP, TEMP, 1
	145 Compare TEMP, 1
	146 JumpIfEqual {103}
	147 Move [X31+64], X31
	148 Move [X31+72], X29
	149 Move TEMP, X28
	150 And TEMP, TEMP, 4
	151 Compare TEMP, 4
	152 JumpIfNotEqual {229}
	153 And W8, W26, 0xFFFF
	154 NotImplemented "Instruction CMP not yet implemented."
	155 Move W8, [X31+104]
	156 Move X10, 0x1001
	157 NotImplemented "Instruction MOVK not yet implemented."
	158 Move [X31+56], X22
	159 Subtract W8, W8, W25
	160 Move TEMP, 0
	161 Not TEMP
	162 Move W22, TEMP
	163 Move W9, 1
	164 NotImplemented "Instruction MOVK not yet implemented."
	165 Move W29, W23
	166 NotImplemented "Instruction CMP not yet implemented."
	167 Move X12, [X31+112]
	168 And X11, X29, 0xFFFF
	169 NotImplemented "Instruction LDRH not yet implemented."
	170 Subtract W11, W11, 35
	171 NotImplemented "Instruction CMP not yet implemented."
	172 NotImplemented "Instruction LSLV not yet implemented."
	173 And X31, X12, X10
	174 NotImplemented "Instruction CMP not yet implemented."
	175 Add W29, W29, 1
	176 And W11, W29, 0xFFFF
	177 NotImplemented "Instruction CMP not yet implemented."
	178 Subtract W22, W22, 1
	179 Call 0x1C17DFC
	180 Move TEMP, X21
	181 And TEMP, TEMP, 0x20000000
	182 Compare TEMP, 0x20000000
	183 JumpIfNotEqual {205}
	184 Move X9, [X31+112]
	185 Move W8, W23
	186 And X8, X8, 0xFFFF
	187 NotImplemented "Instruction LDRH not yet implemented."
	188 NotImplemented "Instruction CMP not yet implemented."
	189 Move X21, 0xAD6000
	190 Move X21, [X21+2600]
	191 Move X0, [X21]
	192 Move W8, [X0+224]
	193 Compare W8, 0
	194 JumpIfNotEqual {197}
	195 Call 0x1C17DFC
	196 Move X0, [X21]
	197 Move X8, [X0+184]
	198 Move W8, [X8+114]
	199 Compare W8, 0
	200 JumpIfEqual {205}
	201 Move W8, 8
	202 Move [X22], W8
	203 Compare W19, 0
	204 JumpIfNotEqual {211}
	205 Move X8, [X20]
	206 Move W9, 0x50000
	207 Or X8, X8, X9
	208 Move [X20], X8
	209 Compare W19, 0
	210 JumpIfEqual {214}
	211 Move X8, [X20]
	212 Or X8, X8, 0x7FFFFFFFF
	213 Move [X20], X8
	214 Move W0, W23
	215 Move X20, [X31+224]
	216 Move X19, [X31+232]
	217 Move X22, [X31+208]
	218 Move X21, [X31+216]
	219 Move X24, [X31+192]
	220 Move X23, [X31+200]
	221 Move X26, [X31+176]
	222 Move X25, [X31+184]
	223 Move X28, [X31+160]
	224 Move X27, [X31+168]
	225 Move X29, [X31+144]
	226 Move X30, [X31+152]
	227 Add X31, X31, 240
	228 Return X0
	229 Move W29, W23
	230 Move W29, W23
	231 Move [X31+64], X31
	232 Move X22, [X31+56]
	233 Move W8, 1
	234 NotImplemented "Instruction BIC not yet implemented."
	235 NotImplemented "Instruction CMP not yet implemented."
	236 Move [X31+132], W8
	237 Move W1, 2048
	238 Move X0, X24
	239 Move X2, X31
	240 Call UriParser.InFact, X0, X1
	241 Move TEMP, X0
	242 And TEMP, TEMP, 1
	243 Compare TEMP, 1
	244 JumpIfNotEqual {344}
	245 Move X0, [X31+112]
	246 And W21, W29, 0xFFFF
	247 Add W1, W21, 1
	248 Add X2, X31, 140
	249 Move X3, X31
	250 Call IPv6AddressHelper.IsValid, X0, X1, X2
	251 Move TEMP, X0
	252 And TEMP, TEMP, 1
	253 Compare TEMP, 1
	254 JumpIfNotEqual {344}
	255 Move X8, [X20]
	256 Move W28, W21
	257 Move X21, 0xAD6000
	258 Or X8, X8, 0x1FFFF
	259 Move [X20], X8
	260 Move X21, [X21+2600]
	261 Move X0, [X21]
	262 Move W8, [X0+224]
	263 Compare W8, 0
	264 JumpIfNotEqual {267}
	265 Call 0x1C17DFC
	266 Move X0, [X21]
	267 Move X8, [X0+184]
	268 Move W21, [X8+104]
	269 Call 0x1C17D44
	270 Compare W21, 0
	271 JumpIfNotEqual {636}
	272 Move X27, 0xAD6000
	273 Move X27, [X27+2600]
	274 Move X0, [X27]
	275 Move W8, [X0+224]
	276 Compare W8, 0
	277 JumpIfNotEqual {279}
	278 Call 0x1C17DFC
	279 Call Uri.InitializeUriConfig
	280 Move X8, [X27]
	281 Move X8, [X8+184]
	282 Move W21, [X8+112]
	283 Call 0x1C17D44
	284 Compare W21, 0
	285 JumpIfEqual {631}
	286 Move X0, [X27]
	287 Move W8, [X0+224]
	288 Compare W8, 0
	289 JumpIfNotEqual {291}
	290 Call 0x1C17DFC
	291 Move X0, X24
	292 Call Uri.IriParsingStatic, X0
	293 And W8, W0, 1
	294 Subtract W8, W21, 48
	295 NotImplemented "Instruction CMP not yet implemented."
	296 Move W1, 1024
	297 Move X0, X24
	298 Move X2, X31
	299 Call UriParser.InFact, X0, X1
	300 Move TEMP, X0
	301 And TEMP, TEMP, 1
	302 Compare TEMP, 1
	303 JumpIfNotEqual {344}
	304 Move X8, 0xAD6000
	305 Move X8, [X8+2600]
	306 Move X21, [X20]
	307 Move X0, [X8]
	308 Move W8, [X0+224]
	309 Compare W8, 0
	310 JumpIfNotEqual {312}
	311 Call 0x1C17DFC
	312 And X31, X21, 0x3FFFFFFF
	313 NotImplemented "Instruction CSET not yet implemented."
	314 Move W1, 0x10000
	315 Move X0, X24
	316 Move X2, X31
	317 Move [X31+56], W8
	318 Call UriParser.InFact, X0, X1
	319 And W5, W0, 1
	320 Move X0, [X31+112]
	321 Move W4, [X31+56]
	322 And W21, W29, 0xFFFF
	323 Add X2, X31, 140
	324 Move W1, W21
	325 Move W3, W31
	326 Move X6, X31
	327 Call IPv4AddressHelper.IsValid, X0, X1, X2, X3, X4, X5
	328 Move TEMP, X0
	329 And TEMP, TEMP, 1
	330 Compare TEMP, 1
	331 JumpIfNotEqual {344}
	332 Move X8, [X20]
	333 Or X8, X8, 0x3FFFF
	334 Move [X20], X8
	335 Compare W19, 0
	336 JumpIfEqual {657}
	337 Move X19, [X31+72]
	338 Move W8, [X31+140]
	339 Move X1, [X31+112]
	340 Move X0, X31
	341 Move X29, [X19]
	342 Subtract W3, W8, W21
	343 Move W2, W21
	344 Move W8, [X31+108]
	345 Compare W8, 0
	346 JumpIfNotEqual {448}
	347 Move TEMP, X28
	348 And TEMP, TEMP, 512
	349 Compare TEMP, 512
	350 JumpIfNotEqual {448}
	351 Move X8, 0xAD6000
	352 Move X8, [X8+2600]
	353 Move X19, [X20]
	354 Move X0, [X8]
	355 Move W8, [X0+224]
	356 Compare W8, 0
	357 JumpIfNotEqual {359}
	358 Call 0x1C17DFC
	359 Move X0, [X31+112]
	360 And X31, X19, 0x3FFFFFFF
	361 NotImplemented "Instruction CSET not yet implemented."
	362 Add X2, X31, 140
	363 Add X3, X31, 132
	364 Move W1, W29
	365 Move X5, X31
	366 Call DomainNameHelper.IsValid, X0, X1, X2, X3, X4
	367 Move TEMP, X0
	368 And TEMP, TEMP, 1
	369 Compare TEMP, 1
	370 JumpIfNotEqual {448}
	371 Move X8, [X20]
	372 Or X9, X8, 0x3FFFF
	373 Move [X20], X9
	374 Move W9, [X31+132]
	375 Compare W9, 0
	376 JumpIfNotEqual {380}
	377 Move W9, 0x2030000
	378 Or X8, X8, X9
	379 Move [X20], X8
	380 Move X19, 0xAD6000
	381 Move X19, [X19+2600]
	382 Move X0, [X19]
	383 Move W8, [X0+224]
	384 Compare W8, 0
	385 JumpIfNotEqual {388}
	386 Call 0x1C17DFC
	387 Move X0, [X19]
	388 Move X8, [X0+184]
	389 Move W19, [X8+108]
	390 Call 0x1C17D44
	391 Compare W19, 0
	392 JumpIfEqual {657}
	393 Move X19, 0xAD6000
	394 Move X19, [X19+2600]
	395 Move X0, [X19]
	396 Move W8, [X0+224]
	397 Compare W8, 0
	398 JumpIfNotEqual {401}
	399 Call 0x1C17DFC
	400 Move X0, [X19]
	401 Move X8, [X0+184]
	402 Move W19, [X8+108]
	403 Call 0x1C17D44
	404 NotImplemented "Instruction CMP not yet implemented."
	405 Move W3, [X31+140]
	406 Move X1, [X31+112]
	407 Move X0, X31
	408 Move W2, W31
	409 Move X4, X31
	410 Call String.CreateString, X0, X1, X2, X3
	411 Move X2, [X20]
	412 Move X1, X24
	413 Call Uri.AllowIdnStatic, X0, X1, X2
	414 Move TEMP, X0
	415 And TEMP, TEMP, 1
	416 Compare TEMP, 1
	417 JumpIfNotEqual {657}
	418 Move W2, [X31+140]
	419 Move X0, [X31+112]
	420 And W29, W29, 0xFFFF
	421 Move W8, 1
	422 Add X3, X31, 128
	423 Add X4, X31, 124
	424 Move W1, W29
	425 Move X5, X31
	426 Move [X31+128], W8
	427 Move [X31+124], W31
	428 Call DomainNameHelper.UnicodeEquivalent, X0, X1, X2, X3, X4
	429 Move W8, [X31+124]
	430 Compare W8, 0
	431 JumpIfEqual {628}
	432 Move X8, 0xAD6000
	433 Move X8, [X8+2600]
	434 Move X21, X0
	435 Move X19, [X20]
	436 Move X0, [X8]
	437 Move W8, [X0+224]
	438 Compare W8, 0
	439 JumpIfNotEqual {441}
	440 Call 0x1C17DFC
	441 Move TEMP, X19
	442 And TEMP, TEMP, 1
	443 Compare TEMP, 1
	444 JumpIfEqual {596}
	445 Move X8, [X31+96]
	446 Move X0, [X8+16]
	447 Move [X8+24], X0
	448 Move TEMP, X28
	449 And TEMP, TEMP, 512
	450 Compare TEMP, 512
	451 JumpIfNotEqual {504}
	452 Move W1, 0x10000000
	453 Move X0, X24
	454 Move X2, X31
	455 Call UriParser.InFact, X0, X1
	456 And W31, W0, W27
	457 Move W1, 0x4000000
	458 Move X0, X24
	459 Move X2, X31
	460 Call UriParser.InFact, X0, X1
	461 Move TEMP, X0
	462 And TEMP, TEMP, 1
	463 Compare TEMP, 1
	464 JumpIfNotEqual {504}
	465 Move X8, 0xAD6000
	466 Move X8, [X8+2600]
	467 Move X19, [X20]
	468 Move X0, [X8]
	469 Move W8, [X0+224]
	470 Compare W8, 0
	471 JumpIfNotEqual {473}
	472 Call 0x1C17DFC
	473 Move X0, [X31+112]
	474 And X31, X19, 0x3FFFFFFF
	475 NotImplemented "Instruction CSET not yet implemented."
	476 Add X2, X31, 140
	477 Add X3, X31, 132
	478 Move W1, W29
	479 Move X5, X31
	480 Call DomainNameHelper.IsValidByIri, X0, X1, X2, X3, X4
	481 Move TEMP, X0
	482 And TEMP, TEMP, 1
	483 Compare TEMP, 1
	484 JumpIfNotEqual {504}
	485 Move X8, [X31+88]
	486 Move X0, [X31+96]
	487 Move W3, [X31+140]
	488 Move X9, [X31+72]
	489 Move X1, [X31+112]
	490 NotImplemented "Instruction CMP not yet implemented."
	491 Add X8, X31, 136
	492 Move [X31+8], X20
	493 Move [X31+16], X8
	494 Move X8, [X31+64]
	495 Move W4, [X31+104]
	496 Move W5, [X31+108]
	497 NotImplemented "Instruction CSET not yet implemented."
	498 Move W2, W29
	499 Move X7, X24
	500 Move [X31+24], X9
	501 Move [X31+32], X22
	502 Move [X31], X8
	503 Call Uri.CheckAuthorityHelperHandleDnsIri, X0, X1, X2, X3, X4, X5, X6, X7, X8, X9, X10, X11, X12
	504 Move TEMP, X28
	505 And TEMP, TEMP, 256
	506 Compare TEMP, 256
	507 JumpIfNotEqual {657}
	508 Move X8, 0xAD6000
	509 Move X8, [X8+2600]
	510 Move X19, [X20]
	511 Move X0, [X8]
	512 Move W8, [X0+224]
	513 Compare W8, 0
	514 JumpIfNotEqual {516}
	515 Call 0x1C17DFC
	516 Move X0, [X31+112]
	517 And X31, X19, 0x3FFFFFFF
	518 NotImplemented "Instruction CSET not yet implemented."
	519 Add X2, X31, 140
	520 Move W1, W29
	521 Move X4, X31
	522 Call UncNameHelper.IsValid, X0, X1, X2, X3
	523 Move TEMP, X0
	524 And TEMP, TEMP, 1
	525 Compare TEMP, 1
	526 JumpIfNotEqual {657}
	527 Move W8, [X31+140]
	528 Subtract W8, W8, W29
	529 NotImplemented "Instruction CMP not yet implemented."
	530 Move X8, [X20]
	531 Or X8, X8, 0x7FFFF
	532 Move X8, [X20]
	533 Or X8, X8, 0x3FFFFF
	534 Move [X20], X8
	535 Move W8, [X31+108]
	536 Compare W8, 0
	537 JumpIfNotEqual {551}
	538 Move X21, 0xAD6000
	539 Move X21, [X21+2600]
	540 Move X0, [X21]
	541 Move W8, [X0+224]
	542 Compare W8, 0
	543 JumpIfNotEqual {546}
	544 Call 0x1C17DFC
	545 Move X0, [X21]
	546 Move X8, [X0+184]
	547 Move W21, [X8+108]
	548 Call 0x1C17D44
	549 Compare W21, 0
	550 JumpIfEqual {917}
	551 Move W2, [X31+104]
	552 Subtract W29, W2, W22
	553 Compare W19, 0
	554 JumpIfEqual {590}
	555 Move X0, [X31+112]
	556 Move W3, 2
	557 Move W1, W2
	558 Move W2, W29
	559 Move X4, X31
	560 Call IriHelper.EscapeUnescapeIri, X0, X1, X2, X3
	561 Move X8, 0xB1C000
	562 Move X8, [X8+72]
	563 Move [X31+64], X0
	564 Move X8, [X8]
	565 Move W9, [X8+224]
	566 Compare W9, 0
	567 JumpIfNotEqual {570}
	568 Move X0, X8
	569 Call 0x1C17DFC
	570 Move X22, [X31+56]
	571 Move X0, X31
	572 Call UriParser.get_ShouldUseLegacyV2Quirks
	573 Move TEMP, X0
	574 And TEMP, TEMP, 1
	575 Compare TEMP, 1
	576 JumpIfNotEqual {584}
	577 Move X0, [X31+64]
	578 Compare X0, 0
	579 JumpIfEqual {947}
	580 Move W1, 1
	581 Move X2, X31
	582 Call String.Normalize, X0, X1
	583 Move [X31+64], X0
	584 Move X1, [X31+64]
	585 Move X21, [X31+72]
	586 Move X2, X31
	587 Move X0, [X21]
	588 Call String.Concat, X0, X1
	589 Move [X21], X0
	590 Move X1, [X31+112]
	591 Subtract W3, W31, W22
	592 Move X0, X31
	593 Move X4, X31
	594 Call String.CreateString, X0, X1, X2, X3
	595 Move [X31+64], X0
	596 Move X8, [X31+96]
	597 Move X0, [X8+24]
	598 Move X8, [X20]
	599 Move X19, [X31+64]
	600 Or X8, X8, 0x1FFFFFFFF
	601 Move [X20], X8
	602 Compare X0, 0
	603 JumpIfEqual {945}
	604 Move W2, [X31+104]
	605 Move W1, W31
	606 Move X3, X31
	607 Call String.Substring, X0, X1, X2
	608 Move X1, X19
	609 Move X2, X21
	610 Move X3, X31
	611 Call String.Concat, X0, X1, X2
	612 Move X8, [X31+72]
	613 Move X1, [X31+112]
	614 Move W2, W29
	615 Move X4, X31
	616 Move [X8], X0
	617 Move X8, [X20]
	618 Move X0, X31
	619 Or X8, X8, 0x3FFFFFF
	620 Move [X20], X8
	621 Move W8, [X31+140]
	622 Subtract W3, W8, W29
	623 Call String.CreateString, X0, X1, X2, X3
	624 Move X8, [X31+96]
	625 Move [X8+40], X0
	626 Move W8, 1
	627 Move [X31+136], W8
	628 Move X8, [X20]
	629 Or X8, X8, 0x7FFFFFFFF
	630 Move [X20], X8
	631 Move W8, W31
	632 Move X9, [X31+96]
	633 Compare X9, 0
	634 JumpIfEqual {945}
	635 Move [X9+64], W8
	636 Compare W19, 0
	637 JumpIfEqual {657}
	638 Move X19, [X31+72]
	639 Move W8, [X31+140]
	640 Move X1, [X31+112]
	641 Move W2, W28
	642 Move X29, [X19]
	643 Subtract W3, W8, W28
	644 Move X0, X31
	645 Move X4, X31
	646 Call String.CreateString, X0, X1, X2, X3
	647 Move X1, X0
	648 Move X0, X29
	649 Move X2, X31
	650 Call String.Concat, X0, X1
	651 Move [X19], X0
	652 Move X8, [X20]
	653 Move W9, 1
	654 Or X8, X8, 0x7FFFFFFFF
	655 Move [X20], X8
	656 Move [X31+136], W9
	657 Move W8, [X31+140]
	658 NotImplemented "Instruction CMP not yet implemented."
	659 Move X10, [X31+112]
	660 Move X9, W8
	661 NotImplemented "Instruction LDRH not yet implemented."
	662 NotImplemented "Instruction CMP not yet implemented."
	663 Move W9, [X20+2]
	664 Move X21, [X31+72]
	665 And W31, W9, 7
	666 Move X8, 0xAD6000
	667 Move X8, [X8+2600]
	668 Move X0, [X8]
	669 Move W8, [X0+224]
	670 Compare W8, 0
	671 JumpIfNotEqual {673}
	672 Call 0x1C17DFC
	673 Move W1, 0x2000
	674 Move X0, X24
	675 Move X2, X31
	676 Call UriParser.InFact, X0, X1
	677 Move TEMP, X0
	678 And TEMP, TEMP, 1
	679 Compare TEMP, 1
	680 JumpIfNotEqual {720}
	681 Move W8, [X31+140]
	682 Move X21, [X31+72]
	683 NotImplemented "Instruction CMP not yet implemented."
	684 Move X9, [X31+112]
	685 NotImplemented "Instruction LDRH not yet implemented."
	686 NotImplemented "Instruction CMP not yet implemented."
	687 Move W1, 8
	688 Move X0, X24
	689 Move X2, X31
	690 Call UriParser.InFact, X0, X1
	691 Move TEMP, X0
	692 And TEMP, TEMP, 1
	693 Compare TEMP, 1
	694 JumpIfNotEqual {732}
	695 Move W27, [X31+140]
	696 Move W8, W31
	697 Move W9, 10
	698 Move W19, W27
	699 Add W23, W19, 1
	700 And W19, W23, 0xFFFF
	701 NotImplemented "Instruction CMP not yet implemented."
	702 Move X10, [X31+112]
	703 NotImplemented "Instruction LDRH not yet implemented."
	704 Subtract W11, W10, 48
	705 NotImplemented "Instruction CMP not yet implemented."
	706 Multiply W8, W8, W9
	707 Add W8, W8, W11
	708 NotImplemented "Instruction CMP not yet implemented."
	709 Move W1, 4096
	710 Move X0, X24
	711 Move X2, X31
	712 Call UriParser.InFact, X0, X1
	713 Move TEMP, X0
	714 And TEMP, TEMP, 1
	715 Compare TEMP, 1
	716 JumpIfNotEqual {943}
	717 Move X8, [X20]
	718 And X8, X8, 0xFFFFFFFFFFFF
	719 Move [X20], X8
	720 Move W1, 0x10000
	721 Move X0, X24
	722 Move X2, X31
	723 Call UriParser.InFact, X0, X1
	724 Move TEMP, X0
	725 And TEMP, TEMP, 1
	726 Compare TEMP, 1
	727 JumpIfNotEqual {732}
	728 Move W8, 8
	729 Move [X22], W8
	730 Move X8, [X20]
	731 Or X8, X8, 0x7FFFF
	732 Move X8, [X20]
	733 And X8, X8, 0xFFFFFFFFFFFF
	734 Move [X20], X8
	735 NotImplemented "Instruction CMP not yet implemented."
	736 Move W8, W10
	737 Move W9, 1
	738 NotImplemented "Instruction LSLV not yet implemented."
	739 Move X9, 0x8008
	740 NotImplemented "Instruction MOVK not yet implemented."
	741 And X31, X8, X9
	742 Move W8, [X31+136]
	743 Move W9, [X31+84]
	744 And W31, W9, W8
	745 Move X8, [X31+72]
	746 Move X1, [X31+112]
	747 Subtract W3, W19, W27
	748 Move X0, X31
	749 Move X29, [X8]
	750 Move W2, W27
	751 Move X4, X31
	752 Call String.CreateString, X0, X1, X2, X3
	753 Move X21, [X31+72]
	754 Move X1, X0
	755 Move X0, X29
	756 Move X2, X31
	757 Call String.Concat, X0, X1
	758 Move [X21], X0
	759 Move X8, [X20]
	760 And X31, X8, 0x7FFFF
	761 And X8, X8, 0x1FFFFFFFFFFFFF
	762 Move W1, 4096
	763 Move X0, X24
	764 Move X2, X31
	765 And X23, X23, 0xFFFF
	766 Move [X20], X8
	767 Call UriParser.InFact, X0, X1
	768 Move TEMP, X0
	769 And TEMP, TEMP, 1
	770 Compare TEMP, 1
	771 JumpIfNotEqual {806}
	772 Move X8, [X20]
	773 Move W9, 0x50000
	774 NotImplemented "Instruction CMP not yet implemented."
	775 Or X8, X8, X9
	776 Move [X20], X8
	777 Move [X31+140], W23
	778 Move X9, [X31+112]
	779 Move X11, 0x8008
	780 And X8, X26, 0xFFFF
	781 Move W10, 1
	782 Add X9, X9, X23
	783 NotImplemented "Instruction MOVK not yet implemented."
	784 NotImplemented "Instruction LDRH not yet implemented."
	785 NotImplemented "Instruction CMP not yet implemented."
	786 NotImplemented "Instruction LSLV not yet implemented."
	787 And X31, X12, X11
	788 Add X23, X23, 1
	789 NotImplemented "Instruction CMP not yet implemented."
	790 Add X9, X9, 2
	791 Move [X31+140], W23
	792 Move W23, W25
	793 Move X8, [X31+88]
	794 Move X0, [X31+96]
	795 Move X1, [X31+112]
	796 Move W2, [X31+104]
	797 Move W4, [X31+108]
	798 Move W3, W23
	799 NotImplemented "Instruction CMP not yet implemented."
	800 NotImplemented "Instruction CSET not yet implemented."
	801 Move X6, X24
	802 Move X7, X20
	803 Move [X31], X21
	804 Move [X31+8], X22
	805 Call Uri.CheckAuthorityHelperHandleAnyHostIri, X0, X1, X2, X3, X4, X5, X6, X7, X8, X9
	806 Move W1, 0x10000
	807 Move X0, X24
	808 Move X2, X31
	809 Call UriParser.InFact, X0, X1
	810 Move TEMP, X0
	811 And TEMP, TEMP, 1
	812 Compare TEMP, 1
	813 JumpIfNotEqual {883}
	814 NotImplemented "Instruction CMP not yet implemented."
	815 Move [X31+140], W23
	816 Move X9, [X31+112]
	817 And X11, X26, 0xFFFF
	818 Move X12, 0x8008
	819 Move X8, X31
	820 Move W13, W31
	821 Add X9, X9, X23
	822 Move W10, 1
	823 Subtract X11, X11, X23
	824 NotImplemented "Instruction MOVK not yet implemented."
	825 Move TEMP, X13
	826 And TEMP, TEMP, 1
	827 Compare TEMP, 1
	828 JumpIfNotEqual {833}
	829 NotImplemented "Instruction LDRH not yet implemented."
	830 NotImplemented "Instruction CMP not yet implemented."
	831 NotImplemented "Instruction LSLV not yet implemented."
	832 And X31, X13, X12
	833 NotImplemented "Instruction CMP not yet implemented."
	834 NotImplemented "Instruction LDRH not yet implemented."
	835 NotImplemented "Instruction CMP not yet implemented."
	836 Add W13, W23, W8
	837 Add X8, X8, 1
	838 Add W13, W13, 1
	839 Add X9, X9, 2
	840 NotImplemented "Instruction CMP not yet implemented."
	841 Move [X31+140], W13
	842 Move W13, 1
	843 Move X19, [X20]
	844 Move W8, 0x50000
	845 Or X8, X19, X8
	846 Move [X20], X8
	847 Move W8, [X31+84]
	848 Compare W8, 0
	849 JumpIfEqual {916}
	850 Move X8, 0xAD6000
	851 Move X8, [X8+2600]
	852 Move X0, [X8]
	853 Move W8, [X0+224]
	854 Compare W8, 0
	855 JumpIfNotEqual {857}
	856 Call 0x1C17DFC
	857 Move TEMP, X19
	858 And TEMP, TEMP, 1
	859 Compare TEMP, 1
	860 JumpIfEqual {916}
	861 Move W8, [X31+140]
	862 Move X1, [X31+112]
	863 Move X0, X31
	864 Move W2, W23
	865 Subtract W3, W8, W23
	866 Move X4, X31
	867 Move X19, X22
	868 Call String.CreateString, X0, X1, X2, X3
	869 Compare X0, 0
	870 JumpIfEqual {946}
	871 Move X22, [X21]
	872 Move W1, 1
	873 Move X2, X31
	874 Call String.Normalize, X0, X1
	875 Move X1, X0
	876 Move X0, X22
	877 Move X2, X31
	878 Call String.Concat, X0, X1
	879 Move [X21], X0
	880 Move X8, [X20]
	881 Or X8, X8, 0x7FFFFFFFF
	882 Move [X20], X8
	883 Move W1, 1
	884 Move X0, X24
	885 Move X2, X31
	886 Call UriParser.InFact, X0, X1
	887 Move TEMP, X0
	888 And TEMP, TEMP, 1
	889 Compare TEMP, 1
	890 JumpIfNotEqual {895}
	891 Move W8, 8
	892 Move [X22], W8
	893 Move X8, [X20]
	894 Or X8, X8, 0x7FFFF
	895 Move W1, 0x4000
	896 Move X0, X24
	897 Move X2, X31
	898 Call UriParser.InFact, X0, X1
	899 Move TEMP, X0
	900 And TEMP, TEMP, 1
	901 Compare TEMP, 1
	902 JumpIfNotEqual {916}
	903 Move X8, 0xB1C000
	904 Move X8, [X8+72]
	905 Move X0, [X8]
	906 Move W8, [X0+224]
	907 Compare W8, 0
	908 JumpIfNotEqual {910}
	909 Call 0x1C17DFC
	910 Move X0, X31
	911 Call UriParser.get_ShouldUseLegacyV2Quirks
	912 Move TEMP, X0
	913 And TEMP, TEMP, 1
	914 Compare TEMP, 1
	915 JumpIfNotEqual {891}
	916 Move W23, [X31+140]
	917 Move W8, [X31+104]
	918 Move [X31+64], X31
	919 Subtract W29, W8, W22
	920 Move X22, [X31+56]
	921 Move X9, [X31+112]
	922 Move W8, W29
	923 ShiftRight W8, 31
	924 And W8, W8, 0x3FFFFFFF
	925 And X8, X8, 0x1FFFF
	926 NotImplemented "Instruction LDRH not yet implemented."
	927 Move W1, 4096
	928 Move X0, X24
	929 Move X2, X31
	930 Call UriParser.InFact, X0, X1
	931 Move TEMP, X0
	932 And TEMP, TEMP, 1
	933 Compare TEMP, 1
	934 JumpIfNotEqual {943}
	935 Move W1, 0x10000
	936 Move X0, X24
	937 Move X2, X31
	938 Call UriParser.NotAny, X0, X1
	939 Move TEMP, X0
	940 And TEMP, TEMP, 1
	941 Compare TEMP, 1
	942 JumpIfEqual {717}
	943 Move W8, 10
	944 Move [X22], W8
	945 Call 0x1C17F20
	946 Call 0x1C17F20
	947 Call 0x1C17F20
	948 Move X20, X0
	949 NotImplemented "Instruction CMP not yet implemented."
	950 Move X0, X20
	951 Call 0x3EB2AD0
	952 Move X20, X0
	953 Move X0, 0xADC000
	954 Move X0, [X0+1400]
	955 Call 0x1C17D08
	956 Move X8, [X20]
	957 Move X1, [X8]
	958 Call 0x1C18270
	959 Move TEMP, X0
	960 And TEMP, TEMP, 1
	961 Compare TEMP, 1
	962 JumpIfNotEqual {966}
	963 Call 0x3EB2AE0
	964 Move W8, 1
	965 Move [X19], W8
	966 Move W0, 8
	967 Call 0x3EB2AF0
	968 Move X8, [X20]
	969 Move [X0], X8
	970 Move X1, 0x895000
	971 Add X1, X1, 3672
	972 Move X2, X31
	973 Call 0x3EB2B00
	974 Move X20, X0
	975 Call 0x3EB2AE0
	976 Move X20, X0
	977 NotImplemented "Instruction CMP not yet implemented."
	978 Move X0, X20
	979 Call 0x3EB2AD0
	980 Move X20, X0
	981 Move X0, 0xADC000
	982 Move X0, [X0+1400]
	983 Call 0x1C17D08
	984 Move X8, [X20]
	985 Move X1, [X8]
	986 Call 0x1C18270
	987 Move TEMP, X0
	988 And TEMP, TEMP, 1
	989 Compare TEMP, 1
	990 JumpIfNotEqual {995}
	991 Call 0x3EB2AE0
	992 Move X9, [X31+56]
	993 Move W8, 1
	994 Move [X9], W8
	995 Move W0, 8
	996 Call 0x3EB2AF0
	997 Move X8, [X20]
	998 Move [X0], X8
	999 Move X1, 0x894000
	1000 Add X1, X1, 3672
	1001 Move X2, X31
	1002 Call 0x3EB2B00
	1003 Move X20, X0
	1004 Call 0x3EB2AE0
	1005 Move X0, X20
	1006 Call 0x1D2D690
	1007 Call 0x1991590

Method: System.Void CheckAuthorityHelperHandleDnsIri(System.Char* pString, System.UInt16 start, System.Int32 end, System.Int32 startInput, System.Boolean iriParsing, System.Boolean hasUnicode, System.UriParser syntax, System.String userInfoString, ref System.Uri/Flags flags, ref System.Boolean justNormalized, ref System.String newHost, ref System.ParsingError err)

Disassembly:
	0x03623C70 LDP X20, X19, [X31 + 0x10]
	0x03623C74 AND W0, W9, 0x1
	0x03623C78 LDR X30, [X31], #0x20
	0x03623C7C RET
	0x03623C80 BL 0x1C16F20
	0x03623C84 SUB X31, X31, 0x50
	0x03623C88 STP X30, X21, [X31 + 0x30]
	0x03623C8C STP X20, X19, [X31 + 0x40]
	0x03623C90 ADRP X20, 0xDBD000
	0x03623C94 LDRB W8, [X20 + 0x4A4]
	0x03623C98 MOV X19, X1
	0x03623C9C TBNZ X8, 0x0, 0x3623CC0
	0x03623CA0 ADRP X0, 0xAD9000
	0x03623CA4 LDR X0, [X0 + 0x8D8]
	0x03623CA8 BL 0x1C16CF4
	0x03623CAC ADRP X0, 0xB18000
	0x03623CB0 LDR X0, [X0 + 0x58]
	0x03623CB4 BL 0x1C16CF4
	0x03623CB8 MOVZ W8, 0x1
	0x03623CBC STRB W8, [X20 + 0x4A4]
	0x03623CC0 CBZ X19, 0x3623DA8
	0x03623CC4 ADRP X8, 0xAD9000
	0x03623CC8 LDR X8, [X8 + 0x8D8]
	0x03623CCC LDR W1, [X19 + 0x10]
	0x03623CD0 ADRP X20, 0xB18000
	0x03623CD4 LDR X0, [X8]
	0x03623CD8 LDR X20, [X20 + 0x58]
	0x03623CDC BL 0x1C16D6C
	0x03623CE0 LDR X8, [X20]
	0x03623CE4 STR W31, [X31 + 0x2C]
	0x03623CE8 LDR W21, [X19 + 0x10]
	0x03623CEC MOV X20, X0
	0x03623CF0 LDR W9, [X8 + 0xE0]
	0x03623CF4 CBNZ W9, 0x3623D00
	0x03623CF8 MOV X0, X8
	0x03623CFC BL 0x1C16DFC
	0x03623D00 MOVZ W8, 0xA
	0x03623D04 ADD X4, X31, 0x2C
	0x03623D08 MOVZ W5, 0xFFFF
	0x03623D0C MOVZ W6, 0xFFFF
	0x03623D10 MOVZ W7, 0xFFFF
	0x03623D14 MOV X0, X19
	0x03623D18 MOV W1, W31
	0x03623D1C MOV W2, W21
	0x03623D20 MOV X3, X20
	0x03623D24 STR X31, [X31 + 0x18]
	0x03623D28 STRB W31, [X31 + 0x10]
	0x03623D2C STR X31, [X31 + 0x8]
	0x03623D30 STR W8, [X31]
	0x03623D34 BL 0x362B208
	0x03623D38 LDR W8, [X31 + 0x2C]
	0x03623D3C CMP W8, 0x1
	0x03623D40 B.LT 0x3623D8C
	0x03623D44 CBZ X0, 0x3623DA8
	0x03623D48 LDR W10, [X0 + 0x18]
	0x03623D4C CMP W8, 0x1
	0x03623D50 MOV X9, X31
	0x03623D54 CSINC W11, W8, W31, GT
	0x03623D58 ADD X12, X0, 0x20
	0x03623D5C MOVZ W13, 0x1
	0x03623D60 CMP W9, W10
	0x03623D64 B.CS 0x3623DA4
	0x03623D68 LDRH W14, [X12, X9, LSL #1]
	0x03623D6C CMP W14, 0x7F
	0x03623D70 B.HI 0x3623D90
	0x03623D74 ADD X9, X9, 0x1
	0x03623D78 CMP W9, W8
	0x03623D7C CSET W13, LT
	0x03623D80 CMP W11, W9
	0x03623D84 B.NE 0x3623D60
	0x03623D88 B 0x3623D90
	0x03623D8C MOV W13, W31
	0x03623D90 LDP X20, X19, [X31 + 0x40]
	0x03623D94 LDP X30, X21, [X31 + 0x30]
	0x03623D98 AND W0, W13, 0x1
	0x03623D9C ADD X31, X31, 0x50
	0x03623DA0 RET
	0x03623DA4 BL 0x1C16F28
	0x03623DA8 BL 0x1C16F20
	0x03623DAC STP X29, X30, [X31 - 0x60]!
	0x03623DB0 STP X28, X27, [X31 + 0x10]
	0x03623DB4 STP X26, X25, [X31 + 0x20]
	0x03623DB8 STP X24, X23, [X31 + 0x30]
	0x03623DBC STP X22, X21, [X31 + 0x40]
	0x03623DC0 STP X20, X19, [X31 + 0x50]
	0x03623DC4 ADRP X20, 0xDBD000
	0x03623DC8 LDRB W8, [X20 + 0x4A5]
	0x03623DCC MOV X19, X1
	0x03623DD0 TBNZ X8, 0x0, 0x3623DF4
	0x03623DD4 ADRP X0, 0xB18000
	0x03623DD8 LDR X0, [X0 + 0x58]
	0x03623DDC BL 0x1C16CF4
	0x03623DE0 ADRP X0, 0xAD2000
	0x03623DE4 LDR X0, [X0 + 0xA28]
	0x03623DE8 BL 0x1C16CF4
	0x03623DEC MOVZ W8, 0x1
	0x03623DF0 STRB W8, [X20 + 0x4A5]
	0x03623DF4 CBZ X19, 0x3623F6C
	0x03623DF8 MOV X0, X31
	0x03623DFC BL 0x32C1424
	0x03623E00 LDR W8, [X19 + 0x10]
	0x03623E04 SUB W8, W8, 0x2
	0x03623E08 CMP W8, 0x0
	0x03623E0C CSET W24, GT
	0x03623E10 CMP W8, 0x1
	0x03623E14 B.LT 0x3623F4C
	0x03623E18 ADRP X23, 0xAD2000
	0x03623E1C LDR X23, [X23 + 0xA28]
	0x03623E20 ADD X25, X19, W0, SXTW
	0x03623E24 MOV X22, X31
	0x03623E28 MOVZ X27, 0x2
	0x03623E2C MOVZ W28, 0x1
	0x03623E30 MOVZ X29, 0x1
	0x03623E34 MOV X26, X25
	0x03623E38 LDRH W8, [X26]
	0x03623E3C CMP W8, 0x25
	0x03623E40 B.NE 0x3623F2C
	0x03623E44 LDR X0, [X23]
	0x03623E48 LDRH W20, [X26 + 0x2]
	0x03623E4C LDR W8, [X0 + 0xE0]
	0x03623E50 CBNZ W8, 0x3623E58
	0x03623E54 BL 0x1C16DFC
	0x03623E58 SUB W8, W20, 0x30
	0x03623E5C CMP W8, 0xA
	0x03623E60 B.CC 0x3623E7C
	0x03623E64 SUB W8, W20, 0x41
	0x03623E68 CMP W8, 0x25
	0x03623E6C B.HI 0x3623F2C
	0x03623E70 LSLV X8, X28, X8
	0x03623E74 ANDS X31, X8, 0x3F0000003F
	0x03623E78 B.EQ 0x3623F2C
	0x03623E7C LDR X0, [X23]
	0x03623E80 SBFM X21, X27, 0x1F, 0x3F
	0x03623E84 LDRH W20, [X21, X25, LSL]
	0x03623E88 LDR W8, [X0 + 0xE0]
	0x03623E8C CBNZ W8, 0x3623E94
	0x03623E90 BL 0x1C16DFC
	0x03623E94 SUB W8, W20, 0x30
	0x03623E98 CMP W8, 0xA
	0x03623E9C B.CC 0x3623EB8
	0x03623EA0 SUB W8, W20, 0x41
	0x03623EA4 CMP W8, 0x25
	0x03623EA8 B.HI 0x3623F2C
	0x03623EAC LSLV X8, X28, X8
	0x03623EB0 ANDS X31, X8, 0x3F0000003F
	0x03623EB4 B.EQ 0x3623F2C
	0x03623EB8 LDRH W20, [X26 + 0x2]
	0x03623EBC AND W8, W20, 0xFFF8
	0x03623EC0 CMP W8, 0x30
	0x03623EC4 B.NE 0x3623F2C
	0x03623EC8 ADRP X8, 0xB18000
	0x03623ECC LDR X8, [X8 + 0x58]
	0x03623ED0 LDRH W21, [X25, X21, LSL]
	0x03623ED4 LDR X0, [X8]
	0x03623ED8 LDR W8, [X0 + 0xE0]
	0x03623EDC CBNZ W8, 0x3623EE4
	0x03623EE0 BL 0x1C16DFC
	0x03623EE4 MOV W0, W20
	0x03623EE8 MOV W1, W21
	0x03623EEC MOV X2, X31
	0x03623EF0 BL 0x362A090
	0x03623EF4 ORN W8, W31, W0, 0x0
	0x03623EF8 ANDS W31, W8, 0xFFFF
	0x03623EFC B.EQ 0x3623F2C
	0x03623F00 ADRP X8, 0xB18000
	0x03623F04 LDR X8, [X8 + 0x58]
	0x03623F08 MOV W20, W0
	0x03623F0C LDR X0, [X8]
	0x03623F10 LDR W8, [X0 + 0xE0]
	0x03623F14 CBNZ W8, 0x3623F1C
	0x03623F18 BL 0x1C16DFC
	0x03623F1C MOV W0, W20
	0x03623F20 MOV X1, X31
	0x03623F24 BL 0x362BCFC
	0x03623F28 TBNZ X0, 0x0, 0x3623F4C
	0x03623F2C LDR W8, [X19 + 0x10]
	0x03623F30 ADD X22, X22, 0x1
	0x03623F34 ADD X26, X26, 0x2
	0x03623F38 ADD X27, X27, X29
	0x03623F3C SUB W8, W8, 0x2
	0x03623F40 CMP X22, W8, SXTW
	0x03623F44 CSET W24, LT
	0x03623F48 B.LT 0x3623E38
	0x03623F4C AND W0, W24, 0x1
	0x03623F50 LDP X20, X19, [X31 + 0x50]
	0x03623F54 LDP X22, X21, [X31 + 0x40]
	0x03623F58 LDP X24, X23, [X31 + 0x30]
	0x03623F5C LDP X26, X25, [X31 + 0x20]
	0x03623F60 LDP X28, X27, [X31 + 0x10]
	0x03623F64 LDP X29, X30, [X31], #0x60
	0x03623F68 RET
	0x03623F6C BL 0x1C16F20
	0x03623F70 SUB X31, X31, 0x60
	0x03623F74 STP X30, X25, [X31 + 0x20]
	0x03623F78 STP X24, X23, [X31 + 0x30]
	0x03623F7C STP X22, X21, [X31 + 0x40]
	0x03623F80 STP X20, X19, [X31 + 0x50]
	0x03623F84 ADRP X23, 0xDBD000
	0x03623F88 LDRB W8, [X23 + 0x4AD]
	0x03623F8C MOV X19, X3
	0x03623F90 MOV W21, W2
	0x03623F94 MOV W22, W1
	0x03623F98 MOV X20, X0
	0x03623F9C TBNZ X8, 0x0, 0x3623FB4
	0x03623FA0 ADRP X0, 0xAD2000
	0x03623FA4 LDR X0, [X0 + 0xA28]
	0x03623FA8 BL 0x1C16CF4
	0x03623FAC MOVZ W8, 0x1
	0x03623FB0 STRB W8, [X23 + 0x4AD]
	0x03623FB4 CMP W21, 0x3
	0x03623FB8 STR X31, [X31 + 0x18]
	0x03623FBC B.CC 0x3623FC8
	0x03623FC0 CMP W21, 0x12C

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+32], X29
	003 Move [X31+40], X30
	004 Move [X31+48], X28
	005 Move [X31+56], X27
	006 Move [X31+64], X26
	007 Move [X31+72], X25
	008 Move [X31+80], X24
	009 Move [X31+88], X23
	010 Move [X31+96], X22
	011 Move [X31+104], X21
	012 Move [X31+112], X20
	013 Move [X31+120], X19
	014 Move [X31+12], W5
	015 Move X29, 0xDBE000
	016 Move X28, 0xAD3000
	017 Move W8, [X29+1176]
	018 Move X27, [X31+136]
	019 Move X28, [X28+2600]
	020 Move X26, X7
	021 Move W20, W6
	022 Move W22, W4
	023 Move W23, W3
	024 Move W24, W2
	025 Move X25, X1
	026 Move X21, X0
	027 Move TEMP, X8
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfEqual {36}
	031 Move X0, 0xAD3000
	032 Move X0, [X0+2600]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X29+1176], W8
	036 Move [X31+28], W31
	037 Move [X31+24], W31
	038 Move X8, [X27]
	039 Or X8, X8, 0x3FFFF
	040 Move [X27], X8
	041 Move X0, [X28]
	042 Move W8, [X0+224]
	043 Compare W8, 0
	044 JumpIfNotEqual {47}
	045 Call 0x1C17DFC
	046 Move X0, [X28]
	047 Move X8, [X0+184]
	048 Move X9, [X31+144]
	049 Move X29, [X31+152]
	050 Move W19, [X8+108]
	051 Move [X31+16], X9
	052 Call 0x1C17D44
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Move X0, X31
	055 Move X1, X25
	056 Move W2, W31
	057 Move W3, W23
	058 Move X4, X31
	059 Call String.CreateString, X0, X1, X2, X3
	060 Move X2, [X27]
	061 Move X1, X26
	062 Call Uri.AllowIdnStatic, X0, X1, X2
	063 Move TEMP, X0
	064 And TEMP, TEMP, 1
	065 Compare TEMP, 1
	066 JumpIfNotEqual {108}
	067 And W26, W24, 0xFFFF
	068 Move W8, 1
	069 Add X3, X31, 28
	070 Add X4, X31, 24
	071 Move X0, X25
	072 Move W1, W26
	073 Move W2, W23
	074 Move X5, X31
	075 Move [X31+24], W31
	076 Move [X31+28], W8
	077 Call DomainNameHelper.IdnEquivalent, X0, X1, X2, X3, X4
	078 Move X1, X25
	079 Move W2, W26
	080 Move W3, W23
	081 Move X4, X31
	082 Move X24, X0
	083 Call DomainNameHelper.UnicodeEquivalent, X0, X1, X2, X3
	084 Move W8, [X31+28]
	085 Move X23, X0
	086 Compare W8, 0
	087 JumpIfNotEqual {91}
	088 Move X9, [X27]
	089 Or X9, X9, 0x1FFFFFFFFF
	090 Move [X27], X9
	091 Move W9, [X31+24]
	092 Compare W9, 0
	093 JumpIfEqual {97}
	094 Move X10, [X27]
	095 Or X10, X10, 0x1FFFFFFFF
	096 Move [X27], X10
	097 Move X25, [X31+128]
	098 And W31, W9, W8
	099 Move X0, [X28]
	100 Move X26, [X27]
	101 Move W8, [X0+224]
	102 Compare W8, 0
	103 JumpIfEqual {128}
	104 Move TEMP, X26
	105 And TEMP, TEMP, 1
	106 Compare TEMP, 1
	107 JumpIfEqual {133}
	108 Move TEMP, X20
	109 And TEMP, TEMP, 1
	110 Compare TEMP, 1
	111 JumpIfNotEqual {217}
	112 Move X0, [X28]
	113 Move W8, [X0+224]
	114 Compare W8, 0
	115 JumpIfNotEqual {117}
	116 Call 0x1C17DFC
	117 And W1, W24, 0xFFFF
	118 Subtract W2, W23, W24
	119 Move X0, X25
	120 Call Uri.StripBidiControlCharacter, X0, X1, X2
	121 Move X19, [X29]
	122 Compare X0, 0
	123 JumpIfEqual {147}
	124 Move W1, 1
	125 Move X2, X31
	126 Call String.Normalize, X0, X1
	127 Move X1, X0
	128 Call 0x1C17DFC
	129 Move TEMP, X26
	130 And TEMP, TEMP, 1
	131 Compare TEMP, 1
	132 JumpIfNotEqual {166}
	133 Move W8, [X31+12]
	134 Move TEMP, X8
	135 And TEMP, TEMP, 1
	136 Compare TEMP, 1
	137 JumpIfEqual {193}
	138 Move X0, [X28]
	139 Move X26, [X27]
	140 Move W8, [X0+224]
	141 Compare W8, 0
	142 JumpIfEqual {151}
	143 Move TEMP, X26
	144 And TEMP, TEMP, 1
	145 Compare TEMP, 1
	146 JumpIfNotEqual {156}
	147 Move X1, X31
	148 Move X0, X19
	149 Move X2, X31
	150 Call String.Concat, X0, X1
	151 Call 0x1C17DFC
	152 Move TEMP, X26
	153 And TEMP, TEMP, 1
	154 Compare TEMP, 1
	155 JumpIfEqual {166}
	156 Move X0, [X28]
	157 Move X26, [X27]
	158 Move W8, [X0+224]
	159 Compare W8, 0
	160 JumpIfNotEqual {162}
	161 Call 0x1C17DFC
	162 Move TEMP, X26
	163 And TEMP, TEMP, 1
	164 Compare TEMP, 1
	165 JumpIfNotEqual {193}
	166 Move X0, [X21+16]
	167 Move [X21+24], X0
	168 Compare X0, 0
	169 JumpIfEqual {234}
	170 Move W1, W31
	171 Move W2, W22
	172 Move X3, X31
	173 Call String.Substring, X0, X1, X2
	174 Move X8, [X28]
	175 Move X26, [X27]
	176 Move X22, X0
	177 Move W9, [X8+224]
	178 Compare W9, 0
	179 JumpIfNotEqual {182}
	180 Move X0, X8
	181 Call 0x1C17DFC
	182 Move X8, X26
	183 ShiftRight X8, 22
	184 And X8, X8, 0x1FFFFF
	185 And X1, X25, X8
	186 Move X0, X22
	187 Move X2, X31
	188 Call String.Concat, X0, X1
	189 Move X9, [X31+16]
	190 Move W8, 1
	191 Move [X29], X0
	192 Move [X9], W8
	193 Move W8, [X31+28]
	194 Compare W8, 0
	195 JumpIfEqual {208}
	196 Move W8, [X31+24]
	197 Compare W8, 0
	198 JumpIfNotEqual {208}
	199 Move TEMP, X20
	200 And TEMP, TEMP, 1
	201 Compare TEMP, 1
	202 JumpIfNotEqual {217}
	203 Move W8, [X31+12]
	204 Move TEMP, X8
	205 And TEMP, TEMP, 1
	206 Compare TEMP, 1
	207 JumpIfEqual {209}
	208 Move [X21+40], X24
	209 Move X0, [X29]
	210 Move X1, X23
	211 Move X2, X31
	212 Call String.Concat, X0, X1
	213 Move [X29], X0
	214 Move X9, [X31+16]
	215 Move W8, 1
	216 Move [X9], W8
	217 Move X8, [X27]
	218 Move X20, [X31+112]
	219 Move X19, [X31+120]
	220 Move X22, [X31+96]
	221 Move X21, [X31+104]
	222 Move X24, [X31+80]
	223 Move X23, [X31+88]
	224 Or X8, X8, 0x7FFFFFFFF
	225 Move [X27], X8
	226 Move X26, [X31+64]
	227 Move X25, [X31+72]
	228 Move X28, [X31+48]
	229 Move X27, [X31+56]
	230 Move X29, [X31+32]
	231 Move X30, [X31+40]
	232 Add X31, X31, 128
	233 Return 
	234 Call 0x1C17F20
	235 Move X19, X0
	236 NotImplemented "Instruction CMP not yet implemented."
	237 Move X0, X19
	238 Call 0x3EB2AD0
	239 Move X19, X0
	240 Move X0, 0xAD9000
	241 Move X0, [X0+1400]
	242 Call 0x1C17D08
	243 Move X8, [X19]
	244 Move X1, [X8]
	245 Call 0x1C18270
	246 Move TEMP, X0
	247 And TEMP, TEMP, 1
	248 Compare TEMP, 1
	249 JumpIfNotEqual {254}
	250 Move X19, [X31+160]
	251 Call 0x3EB2AE0
	252 Move W8, 8
	253 Move [X19], W8
	254 Move W0, 8
	255 Call 0x3EB2AF0
	256 Move X8, [X19]
	257 Move [X0], X8
	258 Move X1, 0x892000
	259 Add X1, X1, 3672
	260 Move X2, X31
	261 Call 0x3EB2B00
	262 Move X19, X0
	263 Call 0x3EB2AE0
	264 Move X0, X19
	265 Call 0x1D2D690
	266 Call 0x1991590

Method: System.Void CheckAuthorityHelperHandleAnyHostIri(System.Char* pString, System.Int32 startInput, System.Int32 end, System.Boolean iriParsing, System.Boolean hasUnicode, System.UriParser syntax, ref System.Uri/Flags flags, ref System.String newHost, ref System.ParsingError err)

Disassembly:
	0x03623FC4 B.NE 0x36240A8
	0x03623FC8 ADRP X23, 0xAD2000
	0x03623FCC LDR X23, [X23 + 0xA28]
	0x03623FD0 STP X31, X31, [X31 + 0x10]
	0x03623FD4 LDR X0, [X23]
	0x03623FD8 LDR W8, [X0 + 0xE0]
	0x03623FDC CBNZ W8, 0x3623FE4
	0x03623FE0 BL 0x1C16DFC
	0x03623FE4 ADD X1, X31, 0x10
	0x03623FE8 ADD X2, X31, 0x18
	0x03623FEC MOV X0, X20
	0x03623FF0 BL 0x361E484
	0x03623FF4 TBZ X22, 0x0, 0x3624004
	0x03623FF8 LDR X8, [X31 + 0x10]
	0x03623FFC ORR X8, X8, 0xFFFFF
	0x03624000 STR X8, [X31 + 0x10]
	0x03624004 CBZ W0, 0x3624048
	0x03624008 CMP W21, 0x1
	0x0362400C MOV X21, X31
	0x03624010 B.EQ 0x362408C
	0x03624014 CMP W0, 0x4
	0x03624018 B.GT 0x362408C
	0x0362401C LDR X0, [X23]
	0x03624020 LDR X19, [X31 + 0x10]
	0x03624024 BL 0x1C16F10
	0x03624028 MOV X1, X31
	0x0362402C MOV X21, X0
	0x03624030 AND X19, X19, 0xFFFFF
	0x03624034 BL 0x33BDD8C
	0x03624038 STR X19, [X21 + 0x30]
	0x0362403C STR X31, [X21 + 0x20]
	0x03624040 STR X20, [X21 + 0x10]
	0x03624044 B 0x362408C
	0x03624048 LDR X0, [X23]
	0x0362404C LDP X24, X25, [X31 + 0x10]
	0x03624050 BL 0x1C16F10
	0x03624054 MOV X1, X31
	0x03624058 MOV X22, X0
	0x0362405C BL 0x33BDD8C
	0x03624060 STR X24, [X22 + 0x30]
	0x03624064 STR X25, [X22 + 0x20]
	0x03624068 STR X20, [X22 + 0x10]
	0x0362406C MOV X0, X22
	0x03624070 MOV W1, W31
	0x03624074 MOV W2, W21
	0x03624078 MOV X3, X19
	0x0362407C BL 0x36236D8
	0x03624080 LDR X8, [X19]
	0x03624084 CMP X8, 0x0
	0x03624088 CSEL X21, X22, X31, EQ
	0x0362408C MOV X0, X21
	0x03624090 LDP X20, X19, [X31 + 0x50]
	0x03624094 LDP X22, X21, [X31 + 0x40]
	0x03624098 LDP X24, X23, [X31 + 0x30]
	0x0362409C LDP X30, X25, [X31 + 0x20]
	0x036240A0 ADD X31, X31, 0x60
	0x036240A4 RET
	0x036240A8 ADRP X0, 0xACF000
	0x036240AC LDR X0, [X0 + 0x9D0]
	0x036240B0 BL 0x1C16D08
	0x036240B4 MOVZ W1, 0x1
	0x036240B8 BL 0x1C16D6C
	0x036240BC MOV X19, X0
	0x036240C0 STR W21, [X31 + 0xC]
	0x036240C4 ADRP X0, 0xB17000
	0x036240C8 LDR X0, [X0 + 0x78]
	0x036240CC BL 0x1C16D08
	0x036240D0 ADD X1, X31, 0xC
	0x036240D4 BL 0x1C16E04
	0x036240D8 MOV X20, X0
	0x036240DC MOV X0, X19
	0x036240E0 BL 0x19903C0
	0x036240E4 MOV X0, X19
	0x036240E8 MOV X1, X20
	0x036240EC BL 0x19980B4
	0x036240F0 MOV X0, X19
	0x036240F4 MOV X1, X31
	0x036240F8 MOV X2, X20
	0x036240FC BL 0x1993444
	0x03624100 ADRP X0, 0xB17000
	0x03624104 LDR X0, [X0 + 0x80]
	0x03624108 BL 0x1C16D08
	0x0362410C MOV X1, X19
	0x03624110 MOV X2, X31
	0x03624114 BL 0x320A16C
	0x03624118 MOV X19, X0
	0x0362411C ADRP X0, 0xAD7000
	0x03624120 LDR X0, [X0 + 0x578]
	0x03624124 BL 0x1C16D08
	0x03624128 BL 0x1C16F10
	0x0362412C MOV X1, X19
	0x03624130 MOV X2, X31
	0x03624134 MOV X20, X0
	0x03624138 BL 0x3314A68
	0x0362413C ADRP X0, 0xB17000
	0x03624140 LDR X0, [X0 + 0x258]
	0x03624144 BL 0x1C16D08
	0x03624148 MOV X1, X0
	0x0362414C MOV X0, X20
	0x03624150 BL 0x1C16DEC
	0x03624154 CMP W1, 0x1
	0x03624158 MOV X20, X0
	0x0362415C B.NE 0x36241C4
	0x03624160 MOV X0, X20
	0x03624164 BL 0x3EB1AD0
	0x03624168 MOV X20, X0
	0x0362416C ADRP X0, 0xB17000
	0x03624170 LDR X0, [X0 + 0xD8]
	0x03624174 BL 0x1C16D08
	0x03624178 LDR X8, [X20]
	0x0362417C LDR X1, [X8]
	0x03624180 BL 0x1C17270
	0x03624184 TBZ X0, 0x0, 0x362419C
	0x03624188 LDR X20, [X20]
	0x0362418C BL 0x3EB1AE0
	0x03624190 MOV X21, X31
	0x03624194 STR X20, [X19]
	0x03624198 B 0x362408C
	0x0362419C MOVZ W0, 0x8
	0x036241A0 BL 0x3EB1AF0
	0x036241A4 LDR X8, [X20]
	0x036241A8 STR X8, [X0]
	0x036241AC ADRP X1, 0x890000
	0x036241B0 ADD X1, X1, 0xE58
	0x036241B4 MOV X2, X31
	0x036241B8 BL 0x3EB1B00
	0x036241BC MOV X20, X0
	0x036241C0 BL 0x3EB1AE0
	0x036241C4 MOV X0, X20
	0x036241C8 BL 0x1D2C690
	0x036241CC BL 0x1990590
	0x036241D0 SUB X31, X31, 0x40
	0x036241D4 STP X30, X23, [X31 + 0x10]
	0x036241D8 STP X22, X21, [X31 + 0x20]
	0x036241DC STP X20, X19, [X31 + 0x30]
	0x036241E0 ADRP X23, 0xDBC000
	0x036241E4 ADRP X22, 0xAD1000
	0x036241E8 LDRB W8, [X23 + 0x4A7]
	0x036241EC LDR X22, [X22 + 0xA28]
	0x036241F0 MOV X19, X2
	0x036241F4 MOV X21, X1
	0x036241F8 MOV X20, X0
	0x036241FC TBNZ X8, 0x0, 0x3624214
	0x03624200 ADRP X0, 0xAD1000
	0x03624204 LDR X0, [X0 + 0xA28]
	0x03624208 BL 0x1C16CF4
	0x0362420C MOVZ W8, 0x1
	0x03624210 STRB W8, [X23 + 0x4A7]
	0x03624214 LDR X0, [X22]
	0x03624218 STR X31, [X31 + 0x8]
	0x0362421C LDR W8, [X0 + 0xE0]
	0x03624220 CBNZ W8, 0x3624228
	0x03624224 BL 0x1C16DFC
	0x03624228 ADD X2, X31, 0x8
	0x0362422C MOVZ W1, 0x12C
	0x03624230 MOV X0, X21
	0x03624234 BL 0x361E23C
	0x03624238 TBZ X0, 0x0, 0x3624258
	0x0362423C LDR X21, [X31 + 0x8]
	0x03624240 CBZ X21, 0x362429C
	0x03624244 LDR X8, [X21 + 0x20]
	0x03624248 CBZ X8, 0x3624264
	0x0362424C STR X21, [X19]
	0x03624250 MOVZ W0, 0x1
	0x03624254 B 0x3624284
	0x03624258 MOV W0, W31
	0x0362425C STR X31, [X19]
	0x03624260 B 0x3624284
	0x03624264 LDR X0, [X22]
	0x03624268 LDR W8, [X0 + 0xE0]
	0x0362426C CBNZ W8, 0x3624274
	0x03624270 BL 0x1C16DFC
	0x03624274 MOV X0, X20
	0x03624278 MOV X1, X21
	0x0362427C MOV X2, X19
	0x03624280 BL 0x36242A0
	0x03624284 LDP X20, X19, [X31 + 0x30]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X30
	003 Move [X31+32], X28
	004 Move [X31+40], X27
	005 Move [X31+48], X26
	006 Move [X31+56], X25
	007 Move [X31+64], X24
	008 Move [X31+72], X23
	009 Move [X31+80], X22
	010 Move [X31+88], X21
	011 Move [X31+96], X20
	012 Move [X31+104], X19
	013 Move X28, 0xDBE000
	014 Move X27, 0xAD3000
	015 Move W8, [X28+1177]
	016 Move X27, [X27+2600]
	017 Move X19, X7
	018 Move X25, X6
	019 Move W24, W5
	020 Move W26, W4
	021 Move W21, W3
	022 Move W22, W2
	023 Move X23, X1
	024 Move X20, X0
	025 Move TEMP, X8
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {34}
	029 Move X0, 0xAD2000
	030 Move X0, [X0+2600]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X28+1177], W8
	034 Move X0, [X27]
	035 Move [X31+28], W31
	036 Move [X31+24], W31
	037 Move [X31+8], X31
	038 Move W8, [X0+224]
	039 Move X27, [X19]
	040 Compare W8, 0
	041 JumpIfEqual {46}
	042 Move TEMP, X27
	043 And TEMP, TEMP, 1
	044 Compare TEMP, 1
	045 JumpIfNotEqual {51}
	046 Call 0x1C17DFC
	047 Move TEMP, X27
	048 And TEMP, TEMP, 1
	049 Compare TEMP, 1
	050 JumpIfEqual {168}
	051 Move X2, [X19]
	052 Move X1, X25
	053 Call Uri.AllowIdnStatic, X0, X1, X2
	054 And W27, W26, W24
	055 Move TEMP, X27
	056 And TEMP, TEMP, 1
	057 Compare TEMP, 1
	058 JumpIfEqual {63}
	059 Move TEMP, X0
	060 And TEMP, TEMP, 1
	061 Compare TEMP, 1
	062 JumpIfNotEqual {168}
	063 Move X26, [X31+112]
	064 Subtract W3, W21, W22
	065 Move X0, X31
	066 Move X1, X23
	067 Move W2, W22
	068 Move X4, X31
	069 Call String.CreateString, X0, X1, X2, X3
	070 Move X2, [X19]
	071 Move X1, X25
	072 Move X24, X0
	073 Call Uri.AllowIdnStatic, X0, X1, X2
	074 Move TEMP, X0
	075 And TEMP, TEMP, 1
	076 Compare TEMP, 1
	077 JumpIfNotEqual {127}
	078 Move W8, 1
	079 Add X3, X31, 28
	080 Add X4, X31, 24
	081 Move X0, X23
	082 Move W1, W22
	083 Move W2, W21
	084 Move X5, X31
	085 Move [X31+28], W8
	086 Move [X31+24], W31
	087 Call DomainNameHelper.UnicodeEquivalent, X0, X1, X2, X3, X4
	088 Move W8, [X31+28]
	089 Move W9, [X31+24]
	090 Move X25, X0
	091 NotImplemented "Instruction CMP not yet implemented."
	092 NotImplemented "Instruction CSET not yet implemented."
	093 And W31, W9, W8
	094 NotImplemented "Instruction CSET not yet implemented."
	095 And W10, W10, W11
	096 Or W10, W27, W10
	097 Move TEMP, X10
	098 And TEMP, TEMP, 1
	099 Compare TEMP, 1
	100 JumpIfEqual {115}
	101 Move X0, [X20+16]
	102 Move [X20+24], X0
	103 Compare X0, 0
	104 JumpIfEqual {182}
	105 Move W1, W31
	106 Move W2, W22
	107 Move X3, X31
	108 Call String.Substring, X0, X1, X2
	109 Move [X26], X0
	110 Move X8, [X19]
	111 Or X8, X8, 0x3FFFFFFFF
	112 Move [X19], X8
	113 Move W9, [X31+24]
	114 Move W8, [X31+28]
	115 Compare W9, 0
	116 JumpIfNotEqual {139}
	117 Compare W8, 0
	118 JumpIfEqual {139}
	119 Move TEMP, X27
	120 And TEMP, TEMP, 1
	121 Compare TEMP, 1
	122 JumpIfNotEqual {165}
	123 Move X0, [X26]
	124 Move X1, X24
	125 Move X2, X31
	126 Call String.Concat, X0, X1
	127 Compare X24, 0
	128 JumpIfEqual {181}
	129 Move X20, [X26]
	130 Move W1, 1
	131 Move X0, X24
	132 Move X2, X31
	133 Call String.Normalize, X0, X1
	134 Move X1, X0
	135 Move X0, X20
	136 Move X2, X31
	137 Call String.Concat, X0, X1
	138 Move [X26], X0
	139 Move X0, [X26]
	140 Move X1, X25
	141 Move X2, X31
	142 Call String.Concat, X0, X1
	143 Move [X26], X0
	144 Add X3, X31, 28
	145 Add X4, X31, 8
	146 Move X0, X23
	147 Move W1, W22
	148 Move W2, W21
	149 Move X5, X31
	150 Move [X31+8], X31
	151 Call DomainNameHelper.IdnEquivalent, X0, X1, X2, X3, X4
	152 Move [X20+40], X0
	153 Move W8, [X31+24]
	154 Compare W8, 0
	155 JumpIfEqual {159}
	156 Move X8, [X19]
	157 Or X8, X8, 0x1FFFFFFFF
	158 Move [X19], X8
	159 Move W8, [X31+28]
	160 Compare W8, 0
	161 JumpIfNotEqual {165}
	162 Move X8, [X19]
	163 Or X8, X8, 0x1FFFFFFFFF
	164 Move [X19], X8
	165 Move X8, [X19]
	166 Or X8, X8, 0x7FFFFFFFF
	167 Move [X19], X8
	168 Move X20, [X31+96]
	169 Move X19, [X31+104]
	170 Move X22, [X31+80]
	171 Move X21, [X31+88]
	172 Move X24, [X31+64]
	173 Move X23, [X31+72]
	174 Move X26, [X31+48]
	175 Move X25, [X31+56]
	176 Move X28, [X31+32]
	177 Move X27, [X31+40]
	178 Move X30, [X31+16]
	179 Add X31, X31, 112
	180 Return 
	181 Call 0x1C17F20
	182 Call 0x1C17F20
	183 Move X20, X0
	184 NotImplemented "Instruction CMP not yet implemented."
	185 Move X0, X20
	186 Call 0x3EB2AD0
	187 Move X20, X0
	188 Move X0, 0xAD8000
	189 Move X0, [X0+1400]
	190 Call 0x1C17D08
	191 Move X8, [X20]
	192 Move X1, [X8]
	193 Call 0x1C18270
	194 Move TEMP, X0
	195 And TEMP, TEMP, 1
	196 Compare TEMP, 1
	197 JumpIfNotEqual {202}
	198 Move X20, [X31+120]
	199 Call 0x3EB2AE0
	200 Move W8, 8
	201 Move [X20], W8
	202 Move W0, 8
	203 Call 0x3EB2AF0
	204 Move X8, [X20]
	205 Move [X0], X8
	206 Move X1, 0x891000
	207 Add X1, X1, 3672
	208 Move X2, X31
	209 Call 0x3EB2B00
	210 Move X20, X0
	211 Call 0x3EB2AE0
	212 Move X0, X20
	213 Call 0x1D2D690
	214 Call 0x1991590

Method: System.Void FindEndOfComponent(System.String input, ref System.UInt16 idx, System.UInt16 end, System.Char delim)

Disassembly:
	0x03623650 SUB W8, W9, W8
	0x03623654 B 0x3623678
	0x03623658 LDRH W8, [X26 + 0x2]
	0x0362365C SUB X9, X26, X25
	0x03623660 STRH W8, [X25 + 0x2]
	0x03623664 LDR W8, [X19]
	0x03623668 CMP X9, 0x0
	0x0362366C CINC X9, X9, LT
	0x03623670 UBFM X9, X9, 0x1, 0x3F
	0x03623674 SUB W8, W8, W9
	0x03623678 STR W8, [X19]
	0x0362367C LDP X20, X19, [X31 + 0x60]
	0x03623680 LDP X22, X21, [X31 + 0x50]
	0x03623684 LDP X24, X23, [X31 + 0x40]
	0x03623688 LDP X26, X25, [X31 + 0x30]
	0x0362368C LDP X28, X27, [X31 + 0x20]
	0x03623690 LDP X29, X30, [X31 + 0x10]
	0x03623694 ADD X31, X31, 0x70
	0x03623698 RET
	0x0362369C LDRB W8, [X0 + 0x32]
	0x036236A0 UBFM W0, W8, 0x4, 0x4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move W19, W4
	008 Move W20, W3
	009 Move X21, X2
	010 Move X22, X1
	011 Move X23, X0
	012 Compare X1, 0
	013 JumpIfEqual {17}
	014 Move X0, X31
	015 Call RuntimeHelpers.get_OffsetToStringData
	016 Add X22, X22, W0
	017 Move X1, X22
	018 Move X2, X21
	019 Move W3, W20
	020 Move W4, W19
	021 Move X20, [X31+32]
	022 Move X19, [X31+40]
	023 Move X22, [X31+16]
	024 Move X21, [X31+24]
	025 Move X0, X23
	026 Move X30, [X31+48]
	027 Move X23, [X31+56]
	028 Call Uri.FindEndOfComponent, X0, X1, X2, X3, X4
	029 Return 

Method: System.Void FindEndOfComponent(System.Char* str, ref System.UInt16 idx, System.UInt16 end, System.Char delim)

Disassembly:
	0x036243E8 BL 0x1C16DFC
	0x036243EC CMP W21, 0x0
	0x036243F0 CSET W1, NE
	0x036243F4 ADD X3, X31, 0x18
	0x036243F8 MOVZ W2, 0x1
	0x036243FC MOV X0, X20
	0x03624400 BL 0x3623F70
	0x03624404 STR X0, [X19]
	0x03624408 LDR X8, [X31 + 0x18]
	0x0362440C CBNZ X8, 0x3624378
	0x03624410 MOV X20, X0
	0x03624414 B 0x3624398
	0x03624418 BL 0x1C16F20
	0x0362441C SUB X31, X31, 0x50
	0x03624420 STP X30, X21, [X31 + 0x30]
	0x03624424 STP X20, X19, [X31 + 0x40]
	0x03624428 ADRP X21, 0xDBC000
	0x0362442C LDRB W8, [X21 + 0x4AF]
	0x03624430 MOV W20, W1
	0x03624434 MOV X19, X0
	0x03624438 TBNZ X8, 0x0, 0x3624474
	0x0362443C ADRP X0, 0xAD8000
	0x03624440 LDR X0, [X0 + 0x8D8]
	0x03624444 BL 0x1C16CF4
	0x03624448 ADRP X0, 0xAD1000
	0x0362444C LDR X0, [X0 + 0x278]
	0x03624450 BL 0x1C16CF4
	0x03624454 ADRP X0, 0xB17000
	0x03624458 LDR X0, [X0 + 0x58]
	0x0362445C BL 0x1C16CF4
	0x03624460 ADRP X0, 0xAD1000
	0x03624464 LDR X0, [X0 + 0xA28]
	0x03624468 BL 0x1C16CF4
	0x0362446C MOVZ W8, 0x1
	0x03624470 STRB W8, [X21 + 0x4AF]
	0x03624474 CMP W20, 0x3
	0x03624478 STR X31, [X31 + 0x28]
	0x0362447C B.EQ 0x36244F8

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 NotImplemented "Instruction LDRH not yet implemented."
	009 Move X19, X2
	010 NotImplemented "Instruction CMP not yet implemented."
	011 Move W21, W4
	012 Move W20, W3
	013 Move X22, X1
	014 Move X23, X0
	015 And X8, X24, 0xFFFF
	016 NotImplemented "Instruction LDRH not yet implemented."
	017 NotImplemented "Instruction CMP not yet implemented."
	018 And W9, W21, 0xFFFF
	019 NotImplemented "Instruction CMP not yet implemented."
	020 NotImplemented "Instruction CMP not yet implemented."
	021 Move X0, [X23+32]
	022 Compare X0, 0
	023 JumpIfEqual {31}
	024 Move W1, 64
	025 Move X2, X31
	026 Call UriParser.InFact, X0, X1
	027 Move TEMP, X0
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfEqual {35}
	031 Add W24, W24, 1
	032 And W8, W24, 0xFFFF
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move W24, W20
	035 NotImplemented "Instruction STRH not yet implemented."
	036 Move X20, [X31+48]
	037 Move X19, [X31+56]
	038 Move X22, [X31+32]
	039 Move X21, [X31+40]
	040 Move X24, [X31+16]
	041 Move X23, [X31+24]
	042 Move X30, [X31+64]
	043 Return 

Method: System.Uri/Check CheckCanonical(System.Char* str, ref System.UInt16 idx, System.UInt16 end, System.Char delim)

Disassembly:
	0x03621708 MOV X29, X28
	0x0362170C LDR X25, [X20 + 0x10]
	0x03621710 LDRH W26, [X8 + 0x2A]
	0x03621714 LDR X0, [X9]
	0x03621718 LDRH W27, [X8 + 0x2C]
	0x0362171C LDR X28, [X20 + 0x20]
	0x03621720 LDR W8, [X0 + 0xE0]
	0x03621724 CBNZ W8, 0x362172C
	0x03621728 BL 0x1C16DFC
	0x0362172C ADD X4, X31, 0x2C
	0x03621730 MOVZ W5, 0xFFFF
	0x03621734 MOVZ W6, 0xFFFF
	0x03621738 MOVZ W7, 0xFFFF
	0x0362173C STR X31, [X31 + 0x18]
	0x03621740 STRB W31, [X31 + 0x10]
	0x03621744 STR X28, [X31 + 0x8]
	0x03621748 STR W31, [X31]
	0x0362174C MOV X0, X25
	0x03621750 MOV W1, W26
	0x03621754 MOV W2, W27
	0x03621758 MOV X3, X19
	0x0362175C BL 0x362B208
	0x03621760 MOV X19, X0
	0x03621764 MOV X28, X29
	0x03621768 CMP W23, 0x2
	0x0362176C B.NE 0x362177C
	0x03621770 LDR W8, [X31 + 0x2C]
	0x03621774 SUB W8, W8, 0x1
	0x03621778 STR W8, [X31 + 0x2C]
	0x0362177C TBZ X23, 0x2, 0x36218A4
	0x03621780 LDR W8, [X24 + 0x10]
	0x03621784 CBZ W8, 0x36218A4
	0x03621788 CMP W21, 0x1
	0x0362178C B.NE 0x3621B04
	0x03621790 MOV W26, W31
	0x03621794 TBZ X23, 0x8, 0x36217CC
	0x03621798 MOV X0, X31
	0x0362179C BL 0x32C1424
	0x036217A0 STRB W31, [X31 + 0x28]
	0x036217A4 STRB W31, [X31 + 0x24]
	0x036217A8 LDR W2, [X24 + 0x10]
	0x036217AC ADD X0, X24, W0, SXTW
	0x036217B0 ADD X3, X31, 0x28
	0x036217B4 ADD X4, X31, 0x24
	0x036217B8 MOV W1, W31
	0x036217BC MOV X5, X31
	0x036217C0 BL 0x362DB44
	0x036217C4 MOV X24, X0
	0x036217C8 CBZ X0, 0x3621F68
	0x036217CC ADRP X8, 0xB1A000
	0x036217D0 LDR X8, [X8 + 0x58]
	0x036217D4 LDR W25, [X24 + 0x10]
	0x036217D8 LDR X27, [X20 + 0x20]
	0x036217DC LDR X0, [X8]
	0x036217E0 LDR W8, [X0 + 0xE0]
	0x036217E4 CBNZ W8, 0x36217EC
	0x036217E8 BL 0x1C16DFC
	0x036217EC ADD X4, X31, 0x2C
	0x036217F0 MOVZ W5, 0x2F
	0x036217F4 MOVZ W6, 0x3F
	0x036217F8 MOVZ W7, 0x23
	0x036217FC MOV X0, X24
	0x03621800 MOV W1, W31
	0x03621804 MOV W2, W25
	0x03621808 MOV X3, X19
	0x0362180C STR X31, [X31 + 0x18]
	0x03621810 STRB W31, [X31 + 0x10]
	0x03621814 STR X27, [X31 + 0x8]
	0x03621818 STR W26, [X31]
	0x0362181C BL 0x362B208
	0x03621820 MOV X19, X0
	0x03621824 TBZ X23, 0x1F, 0x36218A4
	0x03621828 LDR X8, [X20 + 0x30]
	0x0362182C AND X8, X8, 0x7FFFF
	0x03621830 CMP X8, 0x10000
	0x03621834 B.NE 0x36218A4
	0x03621838 LDR X8, [X20 + 0x38]
	0x0362183C CBZ X8, 0x3621F68
	0x03621840 LDR X0, [X8 + 0x18]
	0x03621844 CBZ X0, 0x36218A4
	0x03621848 LDR W8, [X31 + 0x2C]
	0x0362184C LDR W4, [X0 + 0x10]
	0x03621850 MOV W1, W31
	0x03621854 MOV X2, X19
	0x03621858 SUB W3, W8, 0x1
	0x0362185C MOV X5, X31
	0x03621860 BL 0x322D7E4
	0x03621864 LDR X8, [X20 + 0x38]
	0x03621868 CBZ X8, 0x3621F68
	0x0362186C LDR X8, [X8 + 0x18]
	0x03621870 CBZ X8, 0x3621F68
	0x03621874 LDR W9, [X31 + 0x2C]
	0x03621878 LDR W8, [X8 + 0x10]
	0x0362187C ADD W8, W8, W9
	0x03621880 STR W8, [X31 + 0x2C]
	0x03621884 CBZ X19, 0x3621F68
	0x03621888 LDR W9, [X19 + 0x18]
	0x0362188C SUB W8, W8, 0x1
	0x03621890 CMP W8, W9
	0x03621894 B.CS 0x3621F6C
	0x03621898 ADD X8, X19, W8, 0x1, SXTW
	0x0362189C MOVZ W9, 0x5D
	0x036218A0 STRH W9, [X8 + 0x20]
	0x036218A4 TBZ X23, 0x3, 0x36219E0
	0x036218A8 LDR X8, [X20 + 0x30]
	0x036218AC TBNZ X22, 0x3, 0x3621930
	0x036218B0 TBZ X8, 0x17, 0x3621934
	0x036218B4 LDR X8, [X20 + 0x38]
	0x036218B8 CBZ X8, 0x3621F68
	0x036218BC LDRH W25, [X8 + 0x30]
	0x036218C0 LDR X0, [X20 + 0x10]
	0x036218C4 CBZ X0, 0x3621F68
	0x036218C8 AND W8, W25, 0xFFFF
	0x036218CC SUB W25, W8, 0x1
	0x036218D0 AND W24, W25, 0xFFFF
	0x036218D4 MOV W1, W24
	0x036218D8 MOV X2, X31
	0x036218DC BL 0x3222A1C
	0x036218E0 AND W8, W0, 0xFFFF
	0x036218E4 CMP W8, 0x3A
	0x036218E8 B.NE 0x36218C0
	0x036218EC LDR X8, [X20 + 0x38]
	0x036218F0 CBZ X8, 0x3621F68
	0x036218F4 LDR X0, [X20 + 0x10]
	0x036218F8 CBZ X0, 0x3621F68
	0x036218FC LDRH W8, [X8 + 0x30]
	0x03621900 LDR W3, [X31 + 0x2C]
	0x03621904 MOV W1, W24
	0x03621908 MOV X2, X19
	0x0362190C SUB W4, W8, W24
	0x03621910 MOV X5, X31
	0x03621914 BL 0x322D7E4
	0x03621918 LDR X8, [X20 + 0x38]
	0x0362191C CBZ X8, 0x3621F68
	0x03621920 LDR W9, [X31 + 0x2C]
	0x03621924 LDRH W8, [X8 + 0x30]
	0x03621928 SUB W9, W9, W24
	0x0362192C B 0x36219D8
	0x03621930 TBNZ X8, 0x17, 0x362194C
	0x03621934 TBZ X23, 0x7, 0x36219E0
	0x03621938 LDR X8, [X20 + 0x20]
	0x0362193C CBZ X8, 0x3621F68
	0x03621940 LDR W8, [X8 + 0x1C]
	0x03621944 ADDS W31, W8, 0x1
	0x03621948 B.EQ 0x36219E0
	0x0362194C LDRSW X8, [X31 + 0x2C]
	0x03621950 ADD W9, W8, 0x1
	0x03621954 STR W9, [X31 + 0x2C]
	0x03621958 CBZ X19, 0x3621F68
	0x0362195C LDR W9, [X19 + 0x18]
	0x03621960 CMP W8, W9
	0x03621964 B.CS 0x3621F6C
	0x03621968 ADD X8, X19, X8, 0x1, LSL
	0x0362196C MOVZ W9, 0x3A
	0x03621970 STRH W9, [X8 + 0x20]
	0x03621974 LDR X8, [X20 + 0x38]
	0x03621978 CBZ X8, 0x3621F68
	0x0362197C ADRP X9, 0xAD4000
	0x03621980 LDR X9, [X9 + 0xC48]
	0x03621984 ADD X24, X8, 0x2E
	0x03621988 LDR X0, [X9]
	0x0362198C LDR W9, [X0 + 0xE0]
	0x03621990 CBNZ W9, 0x3621998
	0x03621994 BL 0x1C16DFC
	0x03621998 MOV X0, X31
	0x0362199C BL 0x3338524
	0x036219A0 MOV X1, X0
	0x036219A4 MOV X0, X24
	0x036219A8 MOV X2, X31
	0x036219AC BL 0x3398D7C
	0x036219B0 CBZ X0, 0x3621F68
	0x036219B4 LDR W3, [X31 + 0x2C]
	0x036219B8 LDR W4, [X0 + 0x10]
	0x036219BC MOV W1, W31
	0x036219C0 MOV X2, X19
	0x036219C4 MOV X5, X31
	0x036219C8 MOV X24, X0
	0x036219CC BL 0x322D7E4
	0x036219D0 LDR W8, [X31 + 0x2C]
	0x036219D4 LDR W9, [X24 + 0x10]
	0x036219D8 ADD W8, W9, W8
	0x036219DC STR W8, [X31 + 0x2C]
	0x036219E0 TBZ X23, 0x4, 0x3621A50
	0x036219E4 ADD X2, X31, 0x2C
	0x036219E8 MOV X0, X20
	0x036219EC MOV X1, X19
	0x036219F0 MOV W3, W21
	0x036219F4 BL 0x3621FE0
	0x036219F8 CMP W23, 0x10
	0x036219FC MOV X19, X0
	0x03621A00 B.NE 0x3621A50
	0x03621A04 LDRB W8, [X20 + 0x32]
	0x03621A08 LDR W3, [X31 + 0x2C]
	0x03621A0C MOV W2, W31
	0x03621A10 TBZ X8, 0x4, 0x3621A3C
	0x03621A14 CBZ W3, 0x3621A3C
	0x03621A18 CBZ X19, 0x3621F68
	0x03621A1C LDR W8, [X19 + 0x18]
	0x03621A20 CBZ W8, 0x3621F6C
	0x03621A24 LDRH W8, [X19 + 0x20]
	0x03621A28 CMP W8, 0x2F
	0x03621A2C B.NE 0x3621CC8
	0x03621A30 SUB W3, W3, 0x1
	0x03621A34 MOVZ W2, 0x1
	0x03621A38 STR W3, [X31 + 0x2C]
	0x03621A3C CBNZ W3, 0x3621CCC
	0x03621A40 LDR X8, [X28]
	0x03621A44 LDR X8, [X8 + 0xB8]
	0x03621A48 LDR X0, [X8]
	0x03621A4C B 0x3621F00
	0x03621A50 TBZ X23, 0x5, 0x3621B8C
	0x03621A54 LDR X9, [X20 + 0x38]
	0x03621A58 CBZ X9, 0x3621F68
	0x03621A5C LDRH W8, [X9 + 0x32]
	0x03621A60 LDRH W24, [X9 + 0x34]
	0x03621A64 CMP W8, W24
	0x03621A68 B.CS 0x3621B8C
	0x03621A6C CMP W23, 0x20
	0x03621A70 B.EQ 0x3621A9C
	0x03621A74 LDRSW X9, [X31 + 0x2C]
	0x03621A78 ADD W10, W9, 0x1
	0x03621A7C STR W10, [X31 + 0x2C]
	0x03621A80 CBZ X19, 0x3621F68
	0x03621A84 LDR W10, [X19 + 0x18]
	0x03621A88 CMP W9, W10
	0x03621A8C B.CS 0x3621F6C
	0x03621A90 ADD X9, X19, X9, 0x1, LSL
	0x03621A94 MOVZ W10, 0x3F
	0x03621A98 STRH W10, [X9 + 0x20]
	0x03621A9C ADD W25, W8, 0x1
	0x03621AA0 TBNZ X22, 0x5, 0x3621B2C
	0x03621AA4 ADRP X8, 0xB1A000
	0x03621AA8 LDR X8, [X8 + 0x58]
	0x03621AAC LDR X26, [X20 + 0x10]
	0x03621AB0 LDR X0, [X8]
	0x03621AB4 LDR W8, [X0 + 0xE0]
	0x03621AB8 LDR X27, [X20 + 0x20]
	0x03621ABC CBNZ W8, 0x3621AC4
	0x03621AC0 BL 0x1C16DFC
	0x03621AC4 MOVZ W8, 0x1
	0x03621AC8 ADD X4, X31, 0x2C
	0x03621ACC MOVZ W5, 0xFFFF
	0x03621AD0 MOVZ W6, 0xFFFF
	0x03621AD4 MOVZ W7, 0xFFFF
	0x03621AD8 MOV X0, X26
	0x03621ADC MOV W1, W25
	0x03621AE0 MOV W2, W24
	0x03621AE4 MOV X3, X19
	0x03621AE8 STR X31, [X31 + 0x18]
	0x03621AEC STR X27, [X31 + 0x8]
	0x03621AF0 STRB W8, [X31 + 0x10]
	0x03621AF4 STR W31, [X31]
	0x03621AF8 BL 0x362B208
	0x03621AFC TBNZ X23, 0x6, 0x3621B90
	0x03621B00 B 0x3621EE8

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X24, 0xDC0000
	015 Move W8, [X24+1178]
	016 Move W20, W4
	017 Move W21, W3
	018 Move X19, X2
	019 Move X22, X1
	020 Move X23, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {33}
	025 Move X0, 0xAD5000
	026 Move X0, [X0+368]
	027 Call 0x1C17CF4
	028 Move X0, 0xB1B000
	029 Move X0, [X0+88]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X24+1178], W8
	033 Move [X31+12], W31
	034 NotImplemented "Instruction LDRH not yet implemented."
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move W26, W31
	037 Move W29, W31
	038 Move W25, W31
	039 And W8, W21, 0xFFFF
	040 Move [X31+8], W8
	041 And X8, X27, 0xFFFF
	042 NotImplemented "Instruction LDRH not yet implemented."
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Subtract W8, W24, 127
	045 And W8, W8, 0xFFFF
	046 NotImplemented "Instruction CMP not yet implemented."
	047 NotImplemented "Instruction CMP not yet implemented."
	048 And W28, W27, 0xFFFF
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Move W8, [X23+64]
	051 Compare W8, 0
	052 JumpIfEqual {168}
	053 Move X8, 0xAD5000
	054 Move X8, [X8+368]
	055 Move X0, [X8]
	056 Move W8, [X0+224]
	057 Compare W8, 0
	058 JumpIfNotEqual {60}
	059 Call 0x1C17DFC
	060 Move W0, W24
	061 Move X1, X31
	062 Call Char.IsHighSurrogate, X0
	063 Move TEMP, X0
	064 And TEMP, TEMP, 1
	065 Compare TEMP, 1
	066 JumpIfNotEqual {119}
	067 Move W9, [X31+8]
	068 Add W8, W28, 1
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Move [X31+12], W31
	071 NotImplemented "Instruction LDRH not yet implemented."
	072 Add X2, X31, 12
	073 Move W3, 1
	074 Move W0, W24
	075 Move X4, X31
	076 Move W29, 1
	077 Call IriHelper.CheckIriUnicodeRange, X0, X1, X2, X3
	078 Move TEMP, X0
	079 And TEMP, TEMP, 1
	080 Compare TEMP, 1
	081 JumpIfEqual {128}
	082 Move W8, 72
	083 Or W26, W26, W8
	084 NotImplemented "Instruction CMP not yet implemented."
	085 And W8, W20, 0xFFFF
	086 NotImplemented "Instruction CMP not yet implemented."
	087 NotImplemented "Instruction CMP not yet implemented."
	088 Move X0, [X23+32]
	089 Compare X0, 0
	090 JumpIfEqual {151}
	091 Move W1, 64
	092 Move X2, X31
	093 Call UriParser.InFact, X0, X1
	094 Move TEMP, X0
	095 And TEMP, TEMP, 1
	096 Compare TEMP, 1
	097 JumpIfNotEqual {151}
	098 NotImplemented "Instruction CMP not yet implemented."
	099 NotImplemented "Instruction CMP not yet implemented."
	100 NotImplemented "Instruction CMP not yet implemented."
	101 NotImplemented "Instruction CMP not yet implemented."
	102 Move W8, [X23+51]
	103 Move TEMP, X8
	104 And TEMP, TEMP, 32
	105 Compare TEMP, 32
	106 JumpIfEqual {166}
	107 Move X0, [X23+32]
	108 Compare X0, 0
	109 JumpIfEqual {169}
	110 Move W1, 32
	111 Move X2, X31
	112 Call UriParser.InFact, X0, X1
	113 Move W8, 0xFFFE
	114 NotImplemented "Instruction CMP not yet implemented."
	115 Move TEMP, X0
	116 And TEMP, TEMP, 1
	117 Compare TEMP, 1
	118 JumpIfNotEqual {166}
	119 Move W1, 1
	120 Move W0, W24
	121 Move X2, X31
	122 Move W29, 1
	123 Call IriHelper.CheckIriUnicodeRange, X0, X1
	124 Move TEMP, X0
	125 And TEMP, TEMP, 1
	126 Compare TEMP, 1
	127 JumpIfNotEqual {82}
	128 Or W26, W26, 8
	129 NotImplemented "Instruction CMP not yet implemented."
	130 NotImplemented "Instruction CMP not yet implemented."
	131 Move W9, [X31+8]
	132 Add W8, W28, 1
	133 NotImplemented "Instruction CMP not yet implemented."
	134 Move TEMP, X26
	135 And TEMP, TEMP, 4
	136 Compare TEMP, 4
	137 JumpIfNotEqual {187}
	138 Move W8, W28
	139 ShiftRight W8, 31
	140 And W8, W8, 0x3FFFFFFF
	141 Add X8, X8, X22
	142 NotImplemented "Instruction LDRH not yet implemented."
	143 Subtract W8, W8, 35
	144 NotImplemented "Instruction CMP not yet implemented."
	145 Move W9, 1
	146 NotImplemented "Instruction LSLV not yet implemented."
	147 Move X9, 0x1801
	148 NotImplemented "Instruction MOVK not yet implemented."
	149 NotImplemented "Instruction MOVK not yet implemented."
	150 And X31, X8, X9
	151 Move W8, [X23+51]
	152 Move TEMP, X8
	153 And TEMP, TEMP, 32
	154 Compare TEMP, 32
	155 JumpIfEqual {166}
	156 Move X0, [X23+32]
	157 Compare X0, 0
	158 JumpIfEqual {168}
	159 Move W1, 64
	160 Move X2, X31
	161 Call UriParser.InFact, X0, X1
	162 Move TEMP, X0
	163 And TEMP, TEMP, 1
	164 Compare TEMP, 1
	165 JumpIfEqual {168}
	166 Or W26, W26, 32
	167 Move W25, 1
	168 Move W29, 1
	169 Add W27, W27, 1
	170 And W8, W27, 0xFFFF
	171 NotImplemented "Instruction CMP not yet implemented."
	172 And W8, W26, 16
	173 NotImplemented "Instruction CMP not yet implemented."
	174 NotImplemented "Instruction CCMP not yet implemented."
	175 Or W8, W26, 16
	176 NotImplemented "Instruction CSEL not yet implemented."
	177 Move TEMP, X26
	178 And TEMP, TEMP, 4
	179 Compare TEMP, 4
	180 JumpIfEqual {169}
	181 Move W9, [X31+8]
	182 Add W8, W28, 1
	183 NotImplemented "Instruction CMP not yet implemented."
	184 NotImplemented "Instruction LDRH not yet implemented."
	185 NotImplemented "Instruction CMP not yet implemented."
	186 NotImplemented "Instruction CMP not yet implemented."
	187 Or W26, W26, 4
	188 Move W8, 72
	189 Or W26, W26, W8
	190 Move TEMP, X29
	191 And TEMP, TEMP, 1
	192 Compare TEMP, 1
	193 JumpIfNotEqual {224}
	194 NotImplemented "Instruction CMP not yet implemented."
	195 Move W8, [X31+8]
	196 Add W24, W28, 2
	197 NotImplemented "Instruction CMP not yet implemented."
	198 Move X8, 0xB1B000
	199 Move X8, [X8+88]
	200 NotImplemented "Instruction LDRH not yet implemented."
	201 Move X0, [X8]
	202 Move W8, W28
	203 ShiftRight W8, 31
	204 And W8, W8, 0x3FFFFFFF
	205 Add X8, X8, X22
	206 NotImplemented "Instruction LDRH not yet implemented."
	207 Move W8, [X0+224]
	208 Compare W8, 0
	209 JumpIfNotEqual {211}
	210 Call 0x1C17DFC
	211 Move W0, W28
	212 Move W1, W25
	213 Move X2, X31
	214 Call UriHelper.EscapedAscii, X0, X1
	215 And W8, W0, 0xFFFF
	216 Subtract W9, W8, 46
	217 NotImplemented "Instruction CMP not yet implemented."
	218 Move W10, 1
	219 NotImplemented "Instruction LSLV not yet implemented."
	220 Move X10, 3
	221 NotImplemented "Instruction MOVK not yet implemented."
	222 And X31, X9, X10
	223 Or W26, W26, 128
	224 NotImplemented "Instruction CMP not yet implemented."
	225 NotImplemented "Instruction CSET not yet implemented."
	226 NotImplemented "Instruction CMP not yet implemented."
	227 NotImplemented "Instruction CSET not yet implemented."
	228 And W8, W8, W9
	229 Move TEMP, X8
	230 And TEMP, TEMP, 1
	231 Compare TEMP, 1
	232 JumpIfEqual {168}
	233 Subtract W8, W24, 91
	234 And W8, W8, 0xFFFF
	235 NotImplemented "Instruction CMP not yet implemented."
	236 NotImplemented "Instruction CMP not yet implemented."
	237 NotImplemented "Instruction CMP not yet implemented."
	238 NotImplemented "Instruction CMP not yet implemented."
	239 NotImplemented "Instruction CMP not yet implemented."
	240 NotImplemented "Instruction CMP not yet implemented."
	241 Move W9, 0xFFFF
	242 NotImplemented "Instruction CMP not yet implemented."
	243 Move W25, 1
	244 Move W27, W24
	245 Move W26, W31
	246 Move W8, 3
	247 NotImplemented "Instruction ORN not yet implemented."
	248 And W31, W29, 1
	249 Move W9, 2
	250 And W8, W8, 1
	251 NotImplemented "Instruction CINC not yet implemented."
	252 And W31, W25, 1
	253 NotImplemented "Instruction CSEL not yet implemented."
	254 Or W0, W8, W26
	255 NotImplemented "Instruction STRH not yet implemented."
	256 Move X20, [X31+96]
	257 Move X19, [X31+104]
	258 Move X22, [X31+80]
	259 Move X21, [X31+88]
	260 Move X24, [X31+64]
	261 Move X23, [X31+72]
	262 Move X26, [X31+48]
	263 Move X25, [X31+56]
	264 Move X28, [X31+32]
	265 Move X27, [X31+40]
	266 Move X29, [X31+16]
	267 Move X30, [X31+24]
	268 Add X31, X31, 112
	269 Return X0

Method: System.Char[] GetCanonicalPath(System.Char[] dest, ref System.Int32 pos, System.UriFormat formatAs)

Disassembly:
	0x03622FE0 ADRP X28, 0xDBE000
	0x03622FE4 ADRP X27, 0xAD3000
	0x03622FE8 LDRB W8, [X28 + 0x499]
	0x03622FEC LDR X27, [X27 + 0xA28]
	0x03622FF0 MOV X19, X7
	0x03622FF4 MOV X25, X6
	0x03622FF8 MOV W24, W5
	0x03622FFC MOV W26, W4
	0x03623000 MOV W21, W3
	0x03623004 MOV W22, W2
	0x03623008 MOV X23, X1
	0x0362300C MOV X20, X0
	0x03623010 TBNZ X8, 0x0, 0x3623028
	0x03623014 ADRP X0, 0xAD2000
	0x03623018 LDR X0, [X0 + 0xA28]
	0x0362301C BL 0x1C16CF4
	0x03623020 MOVZ W8, 0x1
	0x03623024 STRB W8, [X28 + 0x499]
	0x03623028 LDR X0, [X27]
	0x0362302C STRB W31, [X31 + 0x1C]
	0x03623030 STRB W31, [X31 + 0x18]
	0x03623034 STR X31, [X31 + 0x8]
	0x03623038 LDR W8, [X0 + 0xE0]
	0x0362303C LDR X27, [X19]
	0x03623040 CBZ W8, 0x362304C
	0x03623044 TBZ X27, 0x0, 0x3623054
	0x03623048 B 0x36231DC
	0x0362304C BL 0x1C16DFC
	0x03623050 TBNZ X27, 0x0, 0x36231DC
	0x03623054 LDR X2, [X19]
	0x03623058 MOV X1, X25
	0x0362305C BL 0x3617F34
	0x03623060 AND W27, W26, W24, 0x0
	0x03623064 TBNZ X27, 0x0, 0x362306C
	0x03623068 TBZ X0, 0x0, 0x36231DC
	0x0362306C LDR X26, [X31 + 0x70]
	0x03623070 SUB W3, W21, W22
	0x03623074 MOV X0, X31
	0x03623078 MOV X1, X23
	0x0362307C MOV W2, W22
	0x03623080 MOV X4, X31
	0x03623084 BL 0x322EAD4
	0x03623088 LDR X2, [X19]
	0x0362308C MOV X1, X25
	0x03623090 MOV X24, X0
	0x03623094 BL 0x3617F34
	0x03623098 TBZ X0, 0x0, 0x3623140
	0x0362309C MOVZ W8, 0x1
	0x036230A0 ADD X3, X31, 0x1C
	0x036230A4 ADD X4, X31, 0x18
	0x036230A8 MOV X0, X23
	0x036230AC MOV W1, W22
	0x036230B0 MOV W2, W21
	0x036230B4 MOV X5, X31
	0x036230B8 STRB W8, [X31 + 0x1C]
	0x036230BC STRB W31, [X31 + 0x18]
	0x036230C0 BL 0x362DB44
	0x036230C4 LDRB W8, [X31 + 0x1C]
	0x036230C8 LDRB W9, [X31 + 0x18]
	0x036230CC MOV X25, X0
	0x036230D0 CMP W8, 0x0
	0x036230D4 CSET W10, NE
	0x036230D8 ANDS W31, W9, W8, 0x0
	0x036230DC CSET W11, EQ
	0x036230E0 AND W10, W10, W11, 0x0
	0x036230E4 ORR W10, W27, W10, 0x0
	0x036230E8 TBNZ X10, 0x0, 0x3623120
	0x036230EC LDR X0, [X20 + 0x10]
	0x036230F0 STR X0, [X20 + 0x18]
	0x036230F4 CBZ X0, 0x3623200
	0x036230F8 MOV W1, W31
	0x036230FC MOV W2, W22
	0x03623100 MOV X3, X31
	0x03623104 BL 0x3228DE4
	0x03623108 STR X0, [X26]
	0x0362310C LDR X8, [X19]
	0x03623110 ORR X8, X8, 0x3FFFFFFFF
	0x03623114 STR X8, [X19]
	0x03623118 LDRB W9, [X31 + 0x18]
	0x0362311C LDRB W8, [X31 + 0x1C]
	0x03623120 CBNZ W9, 0x3623170
	0x03623124 CBZ W8, 0x3623170
	0x03623128 TBZ X27, 0x0, 0x36231D0
	0x0362312C LDR X0, [X26]
	0x03623130 MOV X1, X24
	0x03623134 MOV X2, X31
	0x03623138 BL 0x321B938
	0x0362313C B 0x3623168
	0x03623140 CBZ X24, 0x36231FC
	0x03623144 LDR X20, [X26]
	0x03623148 MOVZ W1, 0x1
	0x0362314C MOV X0, X24
	0x03623150 MOV X2, X31
	0x03623154 BL 0x322E3D0
	0x03623158 MOV X1, X0
	0x0362315C MOV X0, X20
	0x03623160 MOV X2, X31
	0x03623164 BL 0x321B938
	0x03623168 STR X0, [X26]
	0x0362316C B 0x36231D0
	0x03623170 LDR X0, [X26]
	0x03623174 MOV X1, X25
	0x03623178 MOV X2, X31
	0x0362317C BL 0x321B938
	0x03623180 STR X0, [X26]
	0x03623184 ADD X3, X31, 0x1C
	0x03623188 ADD X4, X31, 0x8
	0x0362318C MOV X0, X23
	0x03623190 MOV W1, W22
	0x03623194 MOV W2, W21
	0x03623198 MOV X5, X31
	0x0362319C STR X31, [X31 + 0x8]
	0x036231A0 BL 0x362D750
	0x036231A4 STR X0, [X20 + 0x28]
	0x036231A8 LDRB W8, [X31 + 0x18]
	0x036231AC CBZ W8, 0x36231BC
	0x036231B0 LDR X8, [X19]
	0x036231B4 ORR X8, X8, 0x1FFFFFFFF
	0x036231B8 STR X8, [X19]
	0x036231BC LDRB W8, [X31 + 0x1C]
	0x036231C0 CBNZ W8, 0x36231D0
	0x036231C4 LDR X8, [X19]
	0x036231C8 ORR X8, X8, 0x1FFFFFFFFF
	0x036231CC STR X8, [X19]
	0x036231D0 LDR X8, [X19]
	0x036231D4 ORR X8, X8, 0x7FFFFFFFF
	0x036231D8 STR X8, [X19]
	0x036231DC LDP X20, X19, [X31 + 0x60]
	0x036231E0 LDP X22, X21, [X31 + 0x50]
	0x036231E4 LDP X24, X23, [X31 + 0x40]
	0x036231E8 LDP X26, X25, [X31 + 0x30]
	0x036231EC LDP X28, X27, [X31 + 0x20]
	0x036231F0 LDR X30, [X31 + 0x10]
	0x036231F4 ADD X31, X31, 0x70
	0x036231F8 RET
	0x036231FC BL 0x1C16F20
	0x03623200 BL 0x1C16F20
	0x03623204 B 0x362320C
	0x03623208 B 0x362320C
	0x0362320C MOV X20, X0
	0x03623210 CMP W1, 0x1
	0x03623214 B.NE 0x362327C
	0x03623218 MOV X0, X20
	0x0362321C BL 0x3EB1AD0
	0x03623220 MOV X20, X0
	0x03623224 ADRP X0, 0xAD8000
	0x03623228 LDR X0, [X0 + 0x578]
	0x0362322C BL 0x1C16D08
	0x03623230 LDR X8, [X20]
	0x03623234 LDR X1, [X8]
	0x03623238 BL 0x1C17270
	0x0362323C TBZ X0, 0x0, 0x3623254
	0x03623240 LDR X20, [X31 + 0x78]
	0x03623244 BL 0x3EB1AE0
	0x03623248 MOVZ W8, 0x8
	0x0362324C STR W8, [X20]
	0x03623250 B 0x36231D0
	0x03623254 MOVZ W0, 0x8
	0x03623258 BL 0x3EB1AF0
	0x0362325C LDR X8, [X20]
	0x03623260 STR X8, [X0]
	0x03623264 ADRP X1, 0x891000
	0x03623268 ADD X1, X1, 0xE58
	0x0362326C MOV X2, X31
	0x03623270 BL 0x3EB1B00
	0x03623274 MOV X20, X0
	0x03623278 BL 0x3EB1AE0
	0x0362327C MOV X0, X20
	0x03623280 BL 0x1D2C690
	0x03623284 BL 0x1990590
	0x03623288 STR X30, [X31 - 0x60]!
	0x0362328C STP X28, X27, [X31 + 0x10]
	0x03623290 STP X26, X25, [X31 + 0x20]
	0x03623294 STP X24, X23, [X31 + 0x30]
	0x03623298 STP X22, X21, [X31 + 0x40]
	0x0362329C STP X20, X19, [X31 + 0x50]
	0x036232A0 ADRP X21, 0xDBD000
	0x036232A4 LDRB W8, [X21 + 0x4A1]
	0x036232A8 MOV W23, W2
	0x036232AC MOV W19, W1
	0x036232B0 MOV X20, X0
	0x036232B4 TBNZ X8, 0x0, 0x36232E4
	0x036232B8 ADRP X0, 0xAD9000
	0x036232BC LDR X0, [X0 + 0x8D8]
	0x036232C0 BL 0x1C16CF4
	0x036232C4 ADRP X0, 0xAD2000
	0x036232C8 LDR X0, [X0 + 0xA28]
	0x036232CC BL 0x1C16CF4
	0x036232D0 ADRP X0, 0xAD0000
	0x036232D4 LDR X0, [X0 + 0x988]
	0x036232D8 BL 0x1C16CF4
	0x036232DC MOVZ W8, 0x1
	0x036232E0 STRB W8, [X21 + 0x4A1]
	0x036232E4 CMP W23, 0x0
	0x036232E8 B.LE 0x36233B8
	0x036232EC ADRP X8, 0xAD9000
	0x036232F0 LDR X8, [X8 + 0x8D8]
	0x036232F4 ADRP X24, 0xAD2000
	0x036232F8 MOV W1, W23
	0x036232FC LDR X0, [X8]
	0x03623300 LDR X24, [X24 + 0xA28]
	0x03623304 BL 0x1C16D6C
	0x03623308 ORR X27, X31, 0x1FFFFFFFF
	0x0362330C MOV X21, X0
	0x03623310 MOV W22, W31
	0x03623314 MOV W23, W23
	0x03623318 MOVN W25, 0x200D
	0x0362331C MOVZ W26, 0x1
	0x03623320 MOVK X27, 0x3
	0x03623324 LDRH W28, [X20, W19, SXTW]
	0x03623328 ADD W8, W28, W25
	0x0362332C CMP W8, 0x20
	0x03623330 B.LS 0x3623354
	0x03623334 CBZ X21, 0x36233E0
	0x03623338 LDR W8, [X21 + 0x18]
	0x0362333C CMP W22, W8
	0x03623340 B.CS 0x36233E4
	0x03623344 ADD X8, X21, W22, 0x1, SXTW
	0x03623348 ADD W22, W22, 0x1
	0x0362334C STRH W28, [X8 + 0x20]
	0x03623350 B 0x362337C
	0x03623354 LDR X0, [X24]
	0x03623358 LDR W8, [X0 + 0xE0]
	0x0362335C CBNZ W8, 0x3623364
	0x03623360 BL 0x1C16DFC
	0x03623364 ADD W8, W28, W25
	0x03623368 CMP W8, 0x20
	0x0362336C B.HI 0x3623334
	0x03623370 LSLV X8, X26, X8
	0x03623374 ANDS X31, X8, X27, 0x0
	0x03623378 B.EQ 0x3623334
	0x0362337C SUBS X23, X23, 0x1
	0x03623380 ADD W19, W19, 0x1
	0x03623384 B.NE 0x3623324
	0x03623388 MOV X1, X21
	0x0362338C MOV W3, W22
	0x03623390 LDP X20, X19, [X31 + 0x50]
	0x03623394 LDP X22, X21, [X31 + 0x40]
	0x03623398 LDP X24, X23, [X31 + 0x30]
	0x0362339C LDP X26, X25, [X31 + 0x20]
	0x036233A0 LDP X28, X27, [X31 + 0x10]
	0x036233A4 MOV X0, X31
	0x036233A8 MOV W2, W31
	0x036233AC MOV X4, X31
	0x036233B0 LDR X30, [X31], #0x60
	0x036233B4 B 0x322EAE4
	0x036233B8 ADRP X8, 0xAD0000
	0x036233BC LDR X8, [X8 + 0x988]
	0x036233C0 LDP X20, X19, [X31 + 0x50]
	0x036233C4 LDP X22, X21, [X31 + 0x40]
	0x036233C8 LDP X24, X23, [X31 + 0x30]
	0x036233CC LDR X0, [X8]
	0x036233D0 LDP X26, X25, [X31 + 0x20]
	0x036233D4 LDP X28, X27, [X31 + 0x10]
	0x036233D8 LDR X30, [X31], #0x60
	0x036233DC RET
	0x036233E0 BL 0x1C16F20
	0x036233E4 BL 0x1C16F28
	0x036233E8 STR X30, [X31 - 0x40]!
	0x036233EC STP X24, X23, [X31 + 0x10]
	0x036233F0 STP X22, X21, [X31 + 0x20]
	0x036233F4 STP X20, X19, [X31 + 0x30]
	0x036233F8 LDRH W24, [X2]
	0x036233FC MOV X19, X2
	0x03623400 CMP W24, W3, UXTH
	0x03623404 B.CS 0x3623468
	0x03623408 MOV W21, W4
	0x0362340C MOV W20, W3
	0x03623410 MOV X22, X1
	0x03623414 MOV X23, X0
	0x03623418 AND X8, X24, 0xFFFF
	0x0362341C LDRH W8, [X22, X8, LSL #1]
	0x03623420 CMP W8, W21, UXTH
	0x03623424 B.EQ 0x3623468
	0x03623428 AND W9, W21, 0xFFFF
	0x0362342C CMP W9, 0x3F
	0x03623430 B.NE 0x3623454
	0x03623434 CMP W8, 0x23
	0x03623438 B.NE 0x3623454
	0x0362343C LDR X0, [X23 + 0x20]
	0x03623440 CBZ X0, 0x3623454
	0x03623444 MOVZ W1, 0x40
	0x03623448 MOV X2, X31
	0x0362344C BL 0x3629044
	0x03623450 TBNZ X0, 0x0, 0x3623468
	0x03623454 ADD W24, W24, 0x1
	0x03623458 AND W8, W24, 0xFFFF
	0x0362345C CMP W8, W20, UXTH
	0x03623460 B.CC 0x3623418
	0x03623464 MOV W24, W20
	0x03623468 STRH W24, [X19]
	0x0362346C LDP X20, X19, [X31 + 0x30]
	0x03623470 LDP X22, X21, [X31 + 0x20]
	0x03623474 LDP X24, X23, [X31 + 0x10]
	0x03623478 LDR X30, [X31], #0x40
	0x0362347C RET
	0x03623480 SUB X31, X31, 0x70
	0x03623484 STP X29, X30, [X31 + 0x10]
	0x03623488 STP X28, X27, [X31 + 0x20]
	0x0362348C STP X26, X25, [X31 + 0x30]
	0x03623490 STP X24, X23, [X31 + 0x40]
	0x03623494 STP X22, X21, [X31 + 0x50]
	0x03623498 STP X20, X19, [X31 + 0x60]
	0x0362349C ADRP X25, 0xDBD000
	0x036234A0 LDRB W8, [X25 + 0x49C]
	0x036234A4 MOV W20, W5
	0x036234A8 MOV W21, W4
	0x036234AC MOV W22, W3
	0x036234B0 MOV X19, X2
	0x036234B4 MOV W23, W1
	0x036234B8 MOV X24, X0
	0x036234BC TBNZ X8, 0x0, 0x36234D4
	0x036234C0 ADRP X0, 0xB18000
	0x036234C4 LDR X0, [X0 + 0x58]
	0x036234C8 BL 0x1C16CF4
	0x036234CC MOVZ W8, 0x1
	0x036234D0 STRB W8, [X25 + 0x49C]
	0x036234D4 LDRSW X8, [X19]
	0x036234D8 SUB W9, W8, W23
	0x036234DC CMP W9, 0x3
	0x036234E0 B.LT 0x362367C
	0x036234E4 ADD X8, X24, X8, 0x1, LSL
	0x036234E8 SUB X27, X8, 0x4
	0x036234EC ADD X28, X24, W23, 0x1, SXTW
	0x036234F0 CMP X27, X28
	0x036234F4 STR X8, [X31 + 0x8]
	0x036234F8 B.LS 0x362367C
	0x036234FC ADRP X29, 0xB18000
	0x03623500 LDR X29, [X29 + 0x58]
	0x03623504 LDRH W8, [X28]
	0x03623508 ADD X25, X28, 0x2
	0x0362350C MOV X26, X25
	0x03623510 CMP W8, 0x25
	0x03623514 B.NE 0x3623564
	0x03623518 LDR X0, [X29]
	0x0362351C LDRH W23, [X28 + 0x2]
	0x03623520 LDRH W24, [X28 + 0x4]
	0x03623524 LDR W8, [X0 + 0xE0]
	0x03623528 CBNZ W8, 0x3623530
	0x0362352C BL 0x1C16DFC
	0x03623530 MOV W0, W23
	0x03623534 MOV W1, W24
	0x03623538 MOV X2, X31
	0x0362353C ADD X26, X28, 0x6
	0x03623540 BL 0x362A090
	0x03623544 AND W8, W0, 0xFFFF
	0x03623548 CMP W8, W20, UXTH
	0x0362354C B.EQ 0x3623574
	0x03623550 CMP W8, W22, UXTH
	0x03623554 B.EQ 0x3623574
	0x03623558 AND W8, W0, 0xFFFF
	0x0362355C CMP W8, W21, UXTH
	0x03623560 B.EQ 0x3623574
	0x03623564 CMP X27, X26
	0x03623568 MOV X28, X26
	0x0362356C B.HI 0x3623504
	0x03623570 B 0x362367C
	0x03623574 CMP X27, X26
	0x03623578 STRH W0, [X28]
	0x0362357C B.LS 0x362360C
	0x03623580 LDRH W8, [X26]
	0x03623584 ADD X28, X25, 0x2
	0x03623588 CMP W8, 0x25
	0x0362358C STRH W8, [X25]
	0x03623590 B.NE 0x36235F0
	0x03623594 LDRH W23, [X26 + 0x2]
	0x03623598 STRH W23, [X25 + 0x2]
	0x0362359C LDRH W24, [X26 + 0x4]
	0x036235A0 STRH W24, [X25 + 0x4]
	0x036235A4 LDR X0, [X29]
	0x036235A8 LDR W8, [X0 + 0xE0]
	0x036235AC CBNZ W8, 0x36235B4
	0x036235B0 BL 0x1C16DFC
	0x036235B4 MOV W0, W23
	0x036235B8 MOV W1, W24
	0x036235BC MOV X2, X31
	0x036235C0 ADD X26, X26, 0x6
	0x036235C4 BL 0x362A090
	0x036235C8 AND W8, W0, 0xFFFF
	0x036235CC CMP W8, W20, UXTH
	0x036235D0 B.EQ 0x36235F8
	0x036235D4 CMP W8, W22, UXTH
	0x036235D8 B.EQ 0x36235F8
	0x036235DC AND W8, W0, 0xFFFF
	0x036235E0 CMP W8, W21, UXTH
	0x036235E4 B.EQ 0x36235F8
	0x036235E8 ADD X25, X25, 0x6
	0x036235EC B 0x3623600
	0x036235F0 ADD X26, X26, 0x2
	0x036235F4 B 0x36235FC
	0x036235F8 STRH W0, [X25]
	0x036235FC MOV X25, X28
	0x03623600 CMP X27, X26
	0x03623604 B.HI 0x3623580
	0x03623608 CBZ X25, 0x362367C
	0x0362360C LDR X10, [X31 + 0x8]
	0x03623610 CMP X10, X26
	0x03623614 B.NE 0x3623624
	0x03623618 LDR W8, [X19]
	0x0362361C SUB X9, X10, X25
	0x03623620 B 0x3623668
	0x03623624 MOV X8, X26
	0x03623628 LDRH W9, [X8], #0x2
	0x0362362C CMP X8, X10
	0x03623630 STRH W9, [X25]
	0x03623634 B.NE 0x3623658
	0x03623638 ADD X8, X25, 0x2
	0x0362363C LDR W9, [X19]
	0x03623640 SUB X8, X10, X8
	0x03623644 CMP X8, 0x0
	0x03623648 CINC X8, X8, LT
	0x0362364C UBFM X8, X8, 0x1, 0x3F

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+48], X30
	003 Move [X31+56], X27
	004 Move [X31+64], X26
	005 Move [X31+72], X25
	006 Move [X31+80], X24
	007 Move [X31+88], X23
	008 Move [X31+96], X22
	009 Move [X31+104], X21
	010 Move [X31+112], X20
	011 Move [X31+120], X19
	012 Move X23, 0xDBF000
	013 Move W8, [X23+1179]
	014 Move W22, W3
	015 Move X20, X2
	016 Move X19, X1
	017 Move X21, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {36}
	022 Move X0, 0xADA000
	023 Move X0, [X0+2264]
	024 Call 0x1C17CF4
	025 Move X0, 0xB19000
	026 Move X0, [X0+88]
	027 Call 0x1C17CF4
	028 Move X0, 0xAD3000
	029 Move X0, [X0+2600]
	030 Call 0x1C17CF4
	031 Move X0, 0xADA000
	032 Move X0, [X0+2440]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X23+1179], W8
	036 Move W8, [X21+49]
	037 Move TEMP, X8
	038 And TEMP, TEMP, 64
	039 Compare TEMP, 64
	040 JumpIfNotEqual {51}
	041 NotImplemented "Instruction LDRSW not yet implemented."
	042 Add W9, W8, 1
	043 Move [X20], W9
	044 Compare X19, 0
	045 JumpIfEqual {457}
	046 Move W9, [X19+24]
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Add X8, X19, X8
	049 Move W9, 47
	050 NotImplemented "Instruction STRH not yet implemented."
	051 Move X8, [X21+56]
	052 Compare X8, 0
	053 JumpIfEqual {457}
	054 NotImplemented "Instruction LDRH not yet implemented."
	055 NotImplemented "Instruction LDRH not yet implemented."
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Move W23, [X20]
	058 Move X0, X21
	059 Move [X31+44], W23
	060 Call Uri.get_SecuredPathIndex, X0
	061 NotImplemented "Instruction CMP not yet implemented."
	062 And W26, W0, 0xFFFF
	063 Move X8, [X21+48]
	064 Move TEMP, X8
	065 And TEMP, TEMP, 0x2000
	066 Compare TEMP, 0x2000
	067 JumpIfEqual {166}
	068 Move W9, 1024
	069 Move X24, [X21+16]
	070 NotImplemented "Instruction MOVK not yet implemented."
	071 And X8, X8, X9
	072 NotImplemented "Instruction CMP not yet implemented."
	073 Compare W26, 0
	074 JumpIfEqual {110}
	075 Move X8, [X21+56]
	076 Compare X8, 0
	077 JumpIfEqual {457}
	078 Compare X24, 0
	079 JumpIfEqual {457}
	080 NotImplemented "Instruction LDRH not yet implemented."
	081 Subtract W23, W26, 1
	082 Move X0, X24
	083 Move X2, X31
	084 Add W1, W23, W8
	085 Call String.get_Chars, X0, X1
	086 And W8, W0, 0xFFFF
	087 NotImplemented "Instruction CMP not yet implemented."
	088 Move X8, [X21+56]
	089 Compare X8, 0
	090 JumpIfEqual {457}
	091 NotImplemented "Instruction LDRH not yet implemented."
	092 Move W2, 1
	093 Move X0, X24
	094 Move X3, X31
	095 Add W1, W23, W8
	096 Call String.Remove, X0, X1, X2
	097 Move X8, [X21+56]
	098 Compare X8, 0
	099 JumpIfEqual {457}
	100 Compare X0, 0
	101 JumpIfEqual {457}
	102 Move X9, 0xADA000
	103 NotImplemented "Instruction LDRH not yet implemented."
	104 Move X9, [X9+2440]
	105 Move X3, X31
	106 Add W1, W23, W8
	107 Move X2, [X9]
	108 Call String.Insert, X0, X1, X2
	109 Move X24, X0
	110 Move X8, [X21+56]
	111 Compare X8, 0
	112 JumpIfEqual {457}
	113 Move X9, 0xB19000
	114 Move X9, [X9+88]
	115 NotImplemented "Instruction LDRH not yet implemented."
	116 NotImplemented "Instruction LDRH not yet implemented."
	117 Move W8, 37
	118 Move X0, [X9]
	119 Move W9, [X21+51]
	120 Move W10, [X0+224]
	121 And W31, W9, 32
	122 NotImplemented "Instruction CSINV not yet implemented."
	123 Compare W10, 0
	124 JumpIfNotEqual {126}
	125 Call 0x1C17DFC
	126 Add X4, X31, 44
	127 Move W5, 1
	128 Move W6, 63
	129 Move W7, 35
	130 Move X0, X24
	131 Move W1, W23
	132 Move W2, W25
	133 Move X3, X19
	134 Move [X31+8], X31
	135 NotImplemented "Instruction STRH not yet implemented."
	136 Call UriHelper.EscapeString, X0, X1, X2, X3, X4, X5, X6, X7, X8
	137 Move X19, X0
	138 Compare W26, 0
	139 JumpIfNotEqual {231}
	140 Move X8, [X21+56]
	141 Compare X8, 0
	142 JumpIfEqual {457}
	143 Move X0, [X21+16]
	144 Compare X0, 0
	145 JumpIfEqual {457}
	146 NotImplemented "Instruction LDRH not yet implemented."
	147 NotImplemented "Instruction LDRH not yet implemented."
	148 Move X2, X19
	149 Move W3, W23
	150 Move X5, X31
	151 Subtract W4, W9, W1
	152 Call String.CopyTo, X0, X1, X2, X3, X4
	153 Move X8, [X21+56]
	154 Compare X8, 0
	155 JumpIfEqual {457}
	156 NotImplemented "Instruction LDRH not yet implemented."
	157 NotImplemented "Instruction LDRH not yet implemented."
	158 Add W9, W23, W9
	159 Subtract W8, W9, W8
	160 Move [X31+44], W8
	161 Move W8, [X21+49]
	162 Move TEMP, X8
	163 And TEMP, TEMP, 32
	164 Compare TEMP, 32
	165 JumpIfEqual {187}
	166 Move X8, [X21+56]
	167 Compare X8, 0
	168 JumpIfEqual {457}
	169 Move X0, [X21+16]
	170 Compare X0, 0
	171 JumpIfEqual {457}
	172 NotImplemented "Instruction LDRH not yet implemented."
	173 NotImplemented "Instruction LDRH not yet implemented."
	174 Move X2, X19
	175 Move W3, W23
	176 Move X5, X31
	177 Subtract W4, W9, W1
	178 Call String.CopyTo, X0, X1, X2, X3, X4
	179 Move X8, [X21+56]
	180 Compare X8, 0
	181 JumpIfEqual {457}
	182 NotImplemented "Instruction LDRH not yet implemented."
	183 NotImplemented "Instruction LDRH not yet implemented."
	184 Add W9, W23, W9
	185 Subtract W8, W9, W8
	186 Move [X31+44], W8
	187 Move X0, [X21+32]
	188 Compare X0, 0
	189 JumpIfEqual {457}
	190 Move W1, 0x2000000
	191 Move X2, X31
	192 Call UriParser.InFact, X0, X1
	193 Move TEMP, X0
	194 And TEMP, TEMP, 1
	195 Compare TEMP, 1
	196 JumpIfNotEqual {229}
	197 Move X8, [X21+48]
	198 Move W9, 16
	199 NotImplemented "Instruction MOVK not yet implemented."
	200 And X8, X8, X9
	201 NotImplemented "Instruction CMP not yet implemented."
	202 Compare X19, 0
	203 JumpIfEqual {429}
	204 Move W8, [X19+24]
	205 Add X9, X19, 32
	206 NotImplemented "Instruction CMP not yet implemented."
	207 NotImplemented "Instruction CSEL not yet implemented."
	208 Move X8, [X21+56]
	209 Compare X8, 0
	210 JumpIfEqual {457}
	211 Compare X24, 0
	212 JumpIfEqual {457}
	213 NotImplemented "Instruction LDRH not yet implemented."
	214 NotImplemented "Instruction LDRH not yet implemented."
	215 Move X0, X24
	216 Move X2, X19
	217 Move W3, W23
	218 Subtract W4, W9, W1
	219 Move X5, X31
	220 Call String.CopyTo, X0, X1, X2, X3, X4
	221 Move X8, [X21+56]
	222 Compare X8, 0
	223 JumpIfEqual {457}
	224 NotImplemented "Instruction LDRH not yet implemented."
	225 NotImplemented "Instruction LDRH not yet implemented."
	226 Add W9, W23, W9
	227 Subtract W8, W9, W8
	228 Move [X31+44], W8
	229 Compare W26, 0
	230 JumpIfEqual {243}
	231 Compare X19, 0
	232 JumpIfEqual {457}
	233 Move W8, [X20]
	234 Move W9, [X19+24]
	235 Add W8, W26, W8
	236 Subtract W8, W8, 1
	237 NotImplemented "Instruction CMP not yet implemented."
	238 Add X8, X19, W8
	239 NotImplemented "Instruction LDRH not yet implemented."
	240 NotImplemented "Instruction CMP not yet implemented."
	241 Move W9, 58
	242 NotImplemented "Instruction STRH not yet implemented."
	243 Move W8, [X21+49]
	244 Move TEMP, X8
	245 And TEMP, TEMP, 32
	246 Compare TEMP, 32
	247 JumpIfEqual {278}
	248 Move X0, [X21+32]
	249 Compare X0, 0
	250 JumpIfEqual {457}
	251 Move W1, 0x400000
	252 Move X2, X31
	253 Call UriParser.InFact, X0, X1
	254 Move TEMP, X0
	255 And TEMP, TEMP, 1
	256 Compare TEMP, 1
	257 JumpIfNotEqual {277}
	258 Move W8, [X21+49]
	259 Move TEMP, X8
	260 And TEMP, TEMP, 128
	261 Compare TEMP, 128
	262 JumpIfNotEqual {277}
	263 NotImplemented "Instruction LDRSW not yet implemented."
	264 NotImplemented "Instruction LDRSW not yet implemented."
	265 NotImplemented "Instruction CMP not yet implemented."
	266 Compare X19, 0
	267 JumpIfEqual {457}
	268 Move W10, [X19+24]
	269 Add X11, X19, 32
	270 Move W12, 47
	271 NotImplemented "Instruction CMP not yet implemented."
	272 NotImplemented "Instruction LDRH not yet implemented."
	273 NotImplemented "Instruction CMP not yet implemented."
	274 NotImplemented "Instruction STRH not yet implemented."
	275 Add X8, X8, 1
	276 NotImplemented "Instruction CMP not yet implemented."
	277 NotImplemented "Instruction CMP not yet implemented."
	278 Move X8, 0xAD3000
	279 Move X8, [X8+2600]
	280 Move W24, [X20]
	281 Move X23, [X21+32]
	282 Move X0, [X8]
	283 Move W8, [X0+224]
	284 Compare W8, 0
	285 JumpIfNotEqual {287}
	286 Call 0x1C17DFC
	287 Add W1, W26, W24
	288 Add X2, X31, 44
	289 Move X0, X19
	290 Move X3, X23
	291 Call Uri.Compress, X0, X1, X2, X3
	292 Compare X19, 0
	293 JumpIfEqual {457}
	294 NotImplemented "Instruction LDRSW not yet implemented."
	295 Move W8, [X19+24]
	296 NotImplemented "Instruction CMP not yet implemented."
	297 Add X8, X19, X2
	298 NotImplemented "Instruction LDRH not yet implemented."
	299 NotImplemented "Instruction CMP not yet implemented."
	300 Move W9, 47
	301 NotImplemented "Instruction STRH not yet implemented."
	302 NotImplemented "Instruction CMP not yet implemented."
	303 Move X8, [X21+48]
	304 Move W9, 1024
	305 NotImplemented "Instruction MOVK not yet implemented."
	306 And X8, X8, X9
	307 NotImplemented "Instruction CMP not yet implemented."
	308 Move W8, [X31+44]
	309 Move X0, X31
	310 Move X1, X19
	311 Move X4, X31
	312 Subtract W3, W8, W2
	313 Call String.CreateString, X0, X1, X2, X3
	314 Move X9, 0xB19000
	315 Move W8, [X31+44]
	316 Move X9, [X9+88]
	317 Move X22, X0
	318 Move W10, [X21+51]
	319 Move X0, [X9]
	320 Move W9, [X20]
	321 And W31, W10, 32
	322 Move W11, [X0+224]
	323 Subtract W21, W8, W9
	324 Move W8, 37
	325 NotImplemented "Instruction CSINV not yet implemented."
	326 Compare W11, 0
	327 JumpIfNotEqual {329}
	328 Call 0x1C17DFC
	329 Move W5, 1
	330 Move W6, 63
	331 Move W7, 35
	332 Move X0, X22
	333 Move W1, W31
	334 Move W2, W21
	335 Move X3, X19
	336 Move X4, X20
	337 Move [X31+8], X31
	338 NotImplemented "Instruction STRH not yet implemented."
	339 Call UriHelper.EscapeString, X0, X1, X2, X3, X4, X5, X6, X7, X8
	340 Move W8, [X20]
	341 Move X19, X0
	342 Move [X31+44], W8
	343 Move X8, [X21+48]
	344 Move TEMP, X8
	345 And TEMP, TEMP, 16
	346 Compare TEMP, 16
	347 JumpIfEqual {350}
	348 Move W8, [X31+44]
	349 Move [X20], W8
	350 NotImplemented "Instruction CMP not yet implemented."
	351 Move W9, 0x7FFF
	352 NotImplemented "Instruction CMP not yet implemented."
	353 And X31, X8, 0xFFFFF
	354 Move W9, 6
	355 Move W10, 5
	356 NotImplemented "Instruction CINC not yet implemented."
	357 And W10, W9, W10
	358 And X31, X8, 0x3FFFFFFF
	359 Move W8, 10
	360 NotImplemented "Instruction CSEL not yet implemented."
	361 And X31, X8, 0xFFFFF
	362 Move W9, 2
	363 NotImplemented "Instruction CINC not yet implemented."
	364 And W10, W9, 1
	365 And X31, X8, 0x3FFFFFFF
	366 NotImplemented "Instruction CSEL not yet implemented."
	367 Compare X19, 0
	368 JumpIfEqual {457}
	369 Move X8, 0xADA000
	370 Move X8, [X8+2264]
	371 Move W1, [X19+24]
	372 Move X0, [X8]
	373 Call 0x1C17D6C
	374 Move W8, [X31+44]
	375 Move X22, X0
	376 Move X0, X19
	377 Move W1, W31
	378 Move W4, W8
	379 ShiftRight W4, 31
	380 And W4, W4, 0x3FFFFFFF
	381 Move X2, X22
	382 Move W3, W31
	383 Move X5, X31
	384 Call Buffer.BlockCopy, X0, X1, X2, X3, X4
	385 Compare X22, 0
	386 JumpIfEqual {392}
	387 Move W8, [X22+24]
	388 Compare W8, 0
	389 JumpIfEqual {391}
	390 Add X22, X22, 32
	391 Move X22, X31
	392 Move X8, 0xB19000
	393 Move X8, [X8+88]
	394 Move W24, [X20]
	395 Move W23, [X31+44]
	396 Move X21, [X21+32]
	397 Move X0, [X8]
	398 Move W8, [X0+224]
	399 Compare W8, 0
	400 JumpIfNotEqual {402}
	401 Call 0x1C17DFC
	402 Move W5, 63
	403 Move W6, 35
	404 Move W7, 0xFFFF
	405 Move X0, X22
	406 Move W1, W24
	407 Move W2, W23
	408 Move X3, X19
	409 Move X4, X20
	410 Move [X31+24], X31
	411 Move [X31+16], W31
	412 Move [X31+8], X21
	413 Move [X31], W25
	414 Call UriHelper.UnescapeString, X0, X1, X2, X3, X4, X5, X6, X7, X8, X9, X10
	415 Move X19, X0
	416 Move X0, X19
	417 Move X20, [X31+112]
	418 Move X19, [X31+120]
	419 Move X22, [X31+96]
	420 Move X21, [X31+104]
	421 Move X24, [X31+80]
	422 Move X23, [X31+88]
	423 Move X26, [X31+64]
	424 Move X25, [X31+72]
	425 Move X30, [X31+48]
	426 Move X27, [X31+56]
	427 Add X31, X31, 128
	428 Return X0
	429 Move X23, X31
	430 Move X0, [X21+32]
	431 Compare X0, 0
	432 JumpIfEqual {457}
	433 Move W24, [X20]
	434 Move W1, 0x400000
	435 Move X2, X31
	436 Call UriParser.InFact, X0, X1
	437 Move X9, 0xAD3000
	438 Move X9, [X9+2600]
	439 Move W8, W0
	440 And W31, W8, 1
	441 Move W8, 92
	442 Move X0, [X9]
	443 NotImplemented "Instruction CSINV not yet implemented."
	444 Move W9, [X0+224]
	445 Compare W9, 0
	446 JumpIfNotEqual {448}
	447 Call 0x1C17DFC
	448 Add X2, X31, 44
	449 Move W3, 46
	450 Move W4, 47
	451 Move X0, X23
	452 Move W1, W24
	453 Move W5, W25
	454 Call Uri.UnescapeOnly, X0, X1, X2, X3, X4, X5
	455 Compare W26, 0
	456 JumpIfNotEqual {231}
	457 Call 0x1C17F20
	458 Call 0x1C17F28

Method: System.Void UnescapeOnly(System.Char* pch, System.Int32 start, ref System.Int32 end, System.Char ch1, System.Char ch2, System.Char ch3)

Disassembly:
	0x03624480 CMP W20, 0x2
	0x03624484 B.EQ 0x3624598
	0x03624488 CMP W20, 0x1
	0x0362448C B.NE 0x36245F0
	0x03624490 LDR X20, [X19 + 0x10]
	0x03624494 CBZ X20, 0x36245EC
	0x03624498 LDR W21, [X20 + 0x10]
	0x0362449C CBZ W21, 0x36245C0
	0x036244A0 ADRP X8, 0xB17000
	0x036244A4 LDR X8, [X8 + 0x58]
	0x036244A8 STR W31, [X31 + 0x2C]
	0x036244AC LDR X0, [X8]
	0x036244B0 LDR W8, [X0 + 0xE0]
	0x036244B4 CBNZ W8, 0x36244BC
	0x036244B8 BL 0x1C16DFC
	0x036244BC MOVZ W8, 0x25
	0x036244C0 ADD X4, X31, 0x2C
	0x036244C4 MOVZ W5, 0x1
	0x036244C8 MOVZ W6, 0xFFFF
	0x036244CC MOVZ W7, 0xFFFF
	0x036244D0 MOV X0, X20
	0x036244D4 MOV W1, W31
	0x036244D8 MOV W2, W21
	0x036244DC MOV X3, X31
	0x036244E0 STR X31, [X31 + 0x8]
	0x036244E4 STRH W8, [X31]
	0x036244E8 BL 0x362A9E0
	0x036244EC CBZ X0, 0x36245D8
	0x036244F0 LDR W3, [X31 + 0x2C]
	0x036244F4 B 0x3624580
	0x036244F8 LDR X8, [X19 + 0x10]
	0x036244FC CBZ X8, 0x36245EC
	0x03624500 LDR W1, [X8 + 0x10]
	0x03624504 CBZ W1, 0x36245C0
	0x03624508 ADRP X8, 0xAD8000
	0x0362450C LDR X8, [X8 + 0x8D8]
	0x03624510 LDR X0, [X8]
	0x03624514 BL 0x1C16D6C
	0x03624518 STR W31, [X31 + 0x28]
	0x0362451C LDR X20, [X19 + 0x10]
	0x03624520 CBZ X20, 0x36245EC
	0x03624524 ADRP X8, 0xB17000
	0x03624528 LDR X8, [X8 + 0x58]
	0x0362452C MOV X19, X0
	0x03624530 LDR W21, [X20 + 0x10]
	0x03624534 LDR X0, [X8]
	0x03624538 LDR W8, [X0 + 0xE0]
	0x0362453C CBNZ W8, 0x3624544
	0x03624540 BL 0x1C16DFC
	0x03624544 MOVZ W8, 0x3
	0x03624548 ADD X4, X31, 0x28
	0x0362454C MOVZ W5, 0xFFFF
	0x03624550 MOVZ W6, 0xFFFF
	0x03624554 MOVZ W7, 0xFFFF
	0x03624558 MOV X0, X20
	0x0362455C MOV W1, W31
	0x03624560 MOV W2, W21
	0x03624564 MOV X3, X19
	0x03624568 STR X31, [X31 + 0x18]
	0x0362456C STRB W31, [X31 + 0x10]
	0x03624570 STR X31, [X31 + 0x8]
	0x03624574 STR W8, [X31]
	0x03624578 BL 0x362B208
	0x0362457C LDR W3, [X31 + 0x28]
	0x03624580 MOV X1, X0
	0x03624584 MOV X0, X31
	0x03624588 MOV W2, W31
	0x0362458C MOV X4, X31
	0x03624590 BL 0x322EAE4
	0x03624594 B 0x36245DC
	0x03624598 ADRP X8, 0xAD1000
	0x0362459C LDR X8, [X8 + 0xA28]
	0x036245A0 LDR X19, [X19 + 0x10]
	0x036245A4 LDR X0, [X8]
	0x036245A8 LDR W8, [X0 + 0xE0]
	0x036245AC CBNZ W8, 0x36245B4
	0x036245B0 BL 0x1C16DFC
	0x036245B4 MOV X0, X19
	0x036245B8 BL 0x3624B80
	0x036245BC B 0x36245DC
	0x036245C0 ADRP X8, 0xAD1000
	0x036245C4 LDR X8, [X8 + 0x278]
	0x036245C8 LDR X8, [X8]
	0x036245CC LDR X8, [X8 + 0xB8]
	0x036245D0 LDR X0, [X8]
	0x036245D4 B 0x36245DC
	0x036245D8 LDR X0, [X19 + 0x10]
	0x036245DC LDP X20, X19, [X31 + 0x40]
	0x036245E0 LDP X30, X21, [X31 + 0x30]
	0x036245E4 ADD X31, X31, 0x50
	0x036245E8 RET
	0x036245EC BL 0x1C16F20
	0x036245F0 ADRP X0, 0xAD7000
	0x036245F4 LDR X0, [X0 + 0x760]
	0x036245F8 BL 0x1C16D08
	0x036245FC BL 0x1C16F10
	0x03624600 MOV X19, X0
	0x03624604 ADRP X0, 0xAFE000
	0x03624608 LDR X0, [X0 + 0xA0]
	0x0362460C BL 0x1C16D08
	0x03624610 MOV X1, X0
	0x03624614 MOV X0, X19
	0x03624618 MOV X2, X31
	0x0362461C BL 0x3316014
	0x03624620 ADRP X0, 0xB17000
	0x03624624 LDR X0, [X0 + 0x260]
	0x03624628 BL 0x1C16D08
	0x0362462C MOV X1, X0
	0x03624630 MOV X0, X19
	0x03624634 BL 0x1C16DEC
	0x03624638 STP X30, X19, [X31 - 0x10]!
	0x0362463C MOV X19, X0
	0x03624640 LDR X0, [X0 + 0x20]
	0x03624644 CBZ X0, 0x3624654
	0x03624648 MOV X1, X31
	0x0362464C BL 0x362CE34
	0x03624650 TBZ X0, 0x0, 0x3624660
	0x03624654 MOV X0, X19
	0x03624658 LDP X30, X19, [X31], #0x10
	0x0362465C B 0x362467C
	0x03624660 LDR X0, [X19 + 0x20]
	0x03624664 CBZ X0, 0x3624678
	0x03624668 MOV X1, X19
	0x0362466C MOV X2, X31
	0x03624670 LDP X30, X19, [X31], #0x10
	0x03624674 B 0x362CEB4
	0x03624678 BL 0x1C16F20
	0x0362467C STR X30, [X31 - 0x30]!
	0x03624680 STP X22, X21, [X31 + 0x10]
	0x03624684 STP X20, X19, [X31 + 0x20]
	0x03624688 ADRP X20, 0xDBC000
	0x0362468C LDRB W8, [X20 + 0x4AA]
	0x03624690 MOV X19, X0
	0x03624694 TBNZ X8, 0x0, 0x36246B8
	0x03624698 ADRP X0, 0xB17000

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X25, 0xDBD000
	015 Move W8, [X25+1180]
	016 Move W20, W5
	017 Move W21, W4
	018 Move W22, W3
	019 Move X19, X2
	020 Move W23, W1
	021 Move X24, X0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {31}
	026 Move X0, 0xB18000
	027 Move X0, [X0+88]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X25+1180], W8
	031 NotImplemented "Instruction LDRSW not yet implemented."
	032 Subtract W9, W8, W23
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Add X8, X24, X8
	035 Subtract X27, X8, 4
	036 Add X28, X24, W23
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move [X31+8], X8
	039 Move X29, 0xB18000
	040 Move X29, [X29+88]
	041 NotImplemented "Instruction LDRH not yet implemented."
	042 Add X25, X28, 2
	043 Move X26, X25
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Move X0, [X29]
	046 NotImplemented "Instruction LDRH not yet implemented."
	047 NotImplemented "Instruction LDRH not yet implemented."
	048 Move W8, [X0+224]
	049 Compare W8, 0
	050 JumpIfNotEqual {52}
	051 Call 0x1C17DFC
	052 Move W0, W23
	053 Move W1, W24
	054 Move X2, X31
	055 Add X26, X28, 6
	056 Call UriHelper.EscapedAscii, X0, X1
	057 And W8, W0, 0xFFFF
	058 NotImplemented "Instruction CMP not yet implemented."
	059 NotImplemented "Instruction CMP not yet implemented."
	060 And W8, W0, 0xFFFF
	061 NotImplemented "Instruction CMP not yet implemented."
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Move X28, X26
	064 NotImplemented "Instruction CMP not yet implemented."
	065 NotImplemented "Instruction STRH not yet implemented."
	066 NotImplemented "Instruction LDRH not yet implemented."
	067 Add X28, X25, 2
	068 NotImplemented "Instruction CMP not yet implemented."
	069 NotImplemented "Instruction STRH not yet implemented."
	070 NotImplemented "Instruction LDRH not yet implemented."
	071 NotImplemented "Instruction STRH not yet implemented."
	072 NotImplemented "Instruction LDRH not yet implemented."
	073 NotImplemented "Instruction STRH not yet implemented."
	074 Move X0, [X29]
	075 Move W8, [X0+224]
	076 Compare W8, 0
	077 JumpIfNotEqual {79}
	078 Call 0x1C17DFC
	079 Move W0, W23
	080 Move W1, W24
	081 Move X2, X31
	082 Add X26, X26, 6
	083 Call UriHelper.EscapedAscii, X0, X1
	084 And W8, W0, 0xFFFF
	085 NotImplemented "Instruction CMP not yet implemented."
	086 NotImplemented "Instruction CMP not yet implemented."
	087 And W8, W0, 0xFFFF
	088 NotImplemented "Instruction CMP not yet implemented."
	089 Add X25, X25, 6
	090 Add X26, X26, 2
	091 NotImplemented "Instruction STRH not yet implemented."
	092 Move X25, X28
	093 NotImplemented "Instruction CMP not yet implemented."
	094 Compare X25, 0
	095 JumpIfEqual {124}
	096 Move X10, [X31+8]
	097 NotImplemented "Instruction CMP not yet implemented."
	098 Move W8, [X19]
	099 Subtract X9, X10, X25
	100 Move X8, X26
	101 NotImplemented "Instruction LDRH not yet implemented."
	102 NotImplemented "Instruction CMP not yet implemented."
	103 NotImplemented "Instruction STRH not yet implemented."
	104 Add X8, X25, 2
	105 Move W9, [X19]
	106 Subtract X8, X10, X8
	107 NotImplemented "Instruction CMP not yet implemented."
	108 NotImplemented "Instruction CINC not yet implemented."
	109 Move X8, X8
	110 ShiftRight X8, 1
	111 And X8, X8, 0x7FFFFFFF
	112 Subtract W8, W9, W8
	113 NotImplemented "Instruction LDRH not yet implemented."
	114 Subtract X9, X26, X25
	115 NotImplemented "Instruction STRH not yet implemented."
	116 Move W8, [X19]
	117 NotImplemented "Instruction CMP not yet implemented."
	118 NotImplemented "Instruction CINC not yet implemented."
	119 Move X9, X9
	120 ShiftRight X9, 1
	121 And X9, X9, 0x7FFFFFFF
	122 Subtract W8, W8, W9
	123 Move [X19], W8
	124 Move X20, [X31+96]
	125 Move X19, [X31+104]
	126 Move X22, [X31+80]
	127 Move X21, [X31+88]
	128 Move X24, [X31+64]
	129 Move X23, [X31+72]
	130 Move X26, [X31+48]
	131 Move X25, [X31+56]
	132 Move X28, [X31+32]
	133 Move X27, [X31+40]
	134 Move X29, [X31+16]
	135 Move X30, [X31+24]
	136 Add X31, X31, 112
	137 Return 

Method: System.Char[] Compress(System.Char[] dest, System.UInt16 start, ref System.Int32 destLength, System.UriParser syntax)

Disassembly:
	0x0361D688 TBNZ X8, 0x0, 0x361D6A0
	0x0361D68C ADRP X0, 0xAD8000
	0x0361D690 LDR X0, [X0 + 0xA28]
	0x0361D694 BL 0x1C16CF4
	0x0361D698 MOVZ W8, 0x1
	0x0361D69C STRB W8, [X20 + 0x4A0]
	0x0361D6A0 LDR X0, [X21]
	0x0361D6A4 LDR W8, [X0 + 0xE0]
	0x0361D6A8 CBNZ W8, 0x361D6B0
	0x0361D6AC BL 0x1C16DFC
	0x0361D6B0 AND W8, W19, 0xFFFFFFDF
	0x0361D6B4 SUB W8, W8, 0x41
	0x0361D6B8 AND W8, W8, 0xFFFF
	0x0361D6BC CMP W8, 0x1A
	0x0361D6C0 B.CS 0x361D6CC
	0x0361D6C4 MOVZ W0, 0x1
	0x0361D6C8 B 0x361D6DC
	0x0361D6CC SUB W8, W19, 0x30
	0x0361D6D0 AND W8, W8, 0xFFFF
	0x0361D6D4 CMP W8, 0xA
	0x0361D6D8 CSET W0, CC
	0x0361D6DC LDP X20, X19, [X31 + 0x10]
	0x0361D6E0 LDP X30, X21, [X31], #0x20
	0x0361D6E4 RET
	0x0361D6E8 SUB W8, W0, 0x30
	0x0361D6EC AND W8, W8, 0xFFFF
	0x0361D6F0 CMP W8, 0xA
	0x0361D6F4 B.CC 0x361D71C
	0x0361D6F8 SUB W8, W0, 0x41
	0x0361D6FC AND W8, W8, 0xFFFF
	0x0361D700 CMP W8, 0x6
	0x0361D704 B.CC 0x361D71C
	0x0361D708 SUB W8, W0, 0x61
	0x0361D70C AND W8, W8, 0xFFFF
	0x0361D710 CMP W8, 0x6
	0x0361D714 CSET W0, CC
	0x0361D718 RET
	0x0361D71C MOVZ W0, 0x1
	0x0361D720 RET
	0x0361D724 SUB W8, W0, 0x30
	0x0361D728 AND W8, W8, 0xFFFF
	0x0361D72C CMP W8, 0xA
	0x0361D730 AND W8, W0, 0xFFFF
	0x0361D734 B.CC 0x361D754
	0x0361D738 SUB W9, W8, 0x41
	0x0361D73C CMP W9, 0x25
	0x0361D740 B.HI 0x361D784
	0x0361D744 MOVZ W10, 0x1
	0x0361D748 LSLV X9, X10, X9
	0x0361D74C ANDS X31, X9, 0x3F0000003F
	0x0361D750 B.EQ 0x361D784
	0x0361D754 CMP W8, 0x3A
	0x0361D758 B.CS 0x361D764
	0x0361D75C SUB W0, W8, 0x30
	0x0361D760 RET
	0x0361D764 AND W9, W0, 0xFFFF
	0x0361D768 MOVN W10, 0x60
	0x0361D76C CMP W9, 0x47
	0x0361D770 MOVN W9, 0x40
	0x0361D774 CSEL W9, W9, W10, CC
	0x0361D778 ADD W8, W8, W9
	0x0361D77C ADD W0, W8, 0xA
	0x0361D780 RET
	0x0361D784 STP X30, X19, [X31 - 0x10]!
	0x0361D788 ADRP X0, 0xADE000
	0x0361D78C LDR X0, [X0 + 0x578]
	0x0361D790 BL 0x1C16D08
	0x0361D794 BL 0x1C16F10
	0x0361D798 MOV X19, X0
	0x0361D79C ADRP X0, 0xB1E000
	0x0361D7A0 LDR X0, [X0 + 0x1F0]
	0x0361D7A4 BL 0x1C16D08
	0x0361D7A8 MOV X1, X0
	0x0361D7AC MOV X0, X19
	0x0361D7B0 MOV X2, X31
	0x0361D7B4 BL 0x3314A68
	0x0361D7B8 ADRP X0, 0xB1E000
	0x0361D7BC LDR X0, [X0 + 0x1F8]
	0x0361D7C0 BL 0x1C16D08
	0x0361D7C4 MOV X1, X0
	0x0361D7C8 MOV X0, X19
	0x0361D7CC BL 0x1C16DEC
	0x0361D7D0 STP X30, X21, [X31 - 0x20]!
	0x0361D7D4 STP X20, X19, [X31 + 0x10]
	0x0361D7D8 ADRP X20, 0xDC3000
	0x0361D7DC LDRB W8, [X20 + 0x486]
	0x0361D7E0 MOV X19, X0
	0x0361D7E4 TBNZ X8, 0x0, 0x361D808
	0x0361D7E8 ADRP X0, 0xB1E000
	0x0361D7EC LDR X0, [X0 + 0x160]
	0x0361D7F0 BL 0x1C16CF4
	0x0361D7F4 ADRP X0, 0xAD8000
	0x0361D7F8 LDR X0, [X0 + 0xA28]
	0x0361D7FC BL 0x1C16CF4
	0x0361D800 MOVZ W8, 0x1
	0x0361D804 STRB W8, [X20 + 0x486]
	0x0361D808 LDR X8, [X19 + 0x20]
	0x0361D80C CBZ X8, 0x361D8BC
	0x0361D810 LDR X1, [X19 + 0x30]
	0x0361D814 TBNZ X1, 0x1E, 0x361D820
	0x0361D818 MOV X0, X19
	0x0361D81C BL 0x36180CC
	0x0361D820 LDR X21, [X19 + 0x38]
	0x0361D824 CBZ X21, 0x361D900
	0x0361D828 LDR X20, [X21 + 0x40]
	0x0361D82C CBNZ X20, 0x361D854
	0x0361D830 ADRP X8, 0xB1E000
	0x0361D834 LDR X8, [X8 + 0x160]
	0x0361D838 LDR X0, [X8]
	0x0361D83C BL 0x1C16F10
	0x0361D840 MOV X1, X31
	0x0361D844 MOV X20, X0
	0x0361D848 BL 0x362A7C4
	0x0361D84C STR X20, [X21 + 0x40]
	0x0361D850 CBZ X20, 0x361D900
	0x0361D854 LDR W0, [X20 + 0x30]
	0x0361D858 CBNZ W0, 0x361D8B0
	0x0361D85C LDR X20, [X20 + 0x38]
	0x0361D860 CBNZ X20, 0x361D878
	0x0361D864 MOVZ W1, 0x3D
	0x0361D868 MOVZ W2, 0x3
	0x0361D86C MOV X0, X19
	0x0361D870 BL 0x3620B04
	0x0361D874 MOV X20, X0
	0x0361D878 ADRP X8, 0xAD8000
	0x0361D87C LDR X8, [X8 + 0xA28]
	0x0361D880 LDR X0, [X8]
	0x0361D884 LDR W8, [X0 + 0xE0]
	0x0361D888 CBNZ W8, 0x361D890
	0x0361D88C BL 0x1C16DFC
	0x0361D890 MOV X0, X20
	0x0361D894 BL 0x361D904
	0x0361D898 LDR X8, [X21 + 0x40]
	0x0361D89C CMP W0, 0x0
	0x0361D8A0 MOVZ W9, 0x1000000
	0x0361D8A4 CSEL W0, W9, W0, EQ
	0x0361D8A8 CBZ X8, 0x361D900
	0x0361D8AC STR W0, [X8 + 0x30]
	0x0361D8B0 LDP X20, X19, [X31 + 0x10]
	0x0361D8B4 LDP X30, X21, [X31], #0x20
	0x0361D8B8 RET
	0x0361D8BC MOV X0, X19
	0x0361D8C0 BL 0x361CF60
	0x0361D8C4 ADRP X8, 0xAD8000
	0x0361D8C8 LDR X8, [X8 + 0xA28]
	0x0361D8CC ANDS W31, W0, 0x1
	0x0361D8D0 MOVZ W9, 0x18
	0x0361D8D4 LDR X0, [X8]
	0x0361D8D8 MOVZ W8, 0x10
	0x0361D8DC CSEL X8, X9, X8, NE
	0x0361D8E0 LDR X19, [X19, X8, LSL]
	0x0361D8E4 LDR W9, [X0 + 0xE0]
	0x0361D8E8 CBNZ W9, 0x361D8F0
	0x0361D8EC BL 0x1C16DFC
	0x0361D8F0 MOV X0, X19
	0x0361D8F4 LDP X20, X19, [X31 + 0x10]
	0x0361D8F8 LDP X30, X21, [X31], #0x20
	0x0361D8FC B 0x361D904
	0x0361D900 BL 0x1C16F20
	0x0361D904 STP X30, X21, [X31 - 0x20]!
	0x0361D908 STP X20, X19, [X31 + 0x10]
	0x0361D90C ADRP X21, 0xDC3000
	0x0361D910 ADRP X20, 0xAE3000
	0x0361D914 LDRB W8, [X21 + 0x49E]
	0x0361D918 LDR X20, [X20 + 0x2F0]
	0x0361D91C MOV X19, X0
	0x0361D920 TBNZ X8, 0x0, 0x361D938
	0x0361D924 ADRP X0, 0xAE3000
	0x0361D928 LDR X0, [X0 + 0x2F0]
	0x0361D92C BL 0x1C16CF4
	0x0361D930 MOVZ W8, 0x1
	0x0361D934 STRB W8, [X21 + 0x49E]
	0x0361D938 LDR X0, [X20]
	0x0361D93C LDR W8, [X0 + 0xE0]
	0x0361D940 CBNZ W8, 0x361D948
	0x0361D944 BL 0x1C16DFC
	0x0361D948 ADRP X21, 0xDC3000
	0x0361D94C LDRB W8, [X21 + 0x4B3]
	0x0361D950 CBNZ W8, 0x361D968
	0x0361D954 ADRP X0, 0xAE3000
	0x0361D958 LDR X0, [X0 + 0x2F0]
	0x0361D95C BL 0x1C16CF4
	0x0361D960 MOVZ W8, 0x1
	0x0361D964 STRB W8, [X21 + 0x4B3]
	0x0361D968 LDR X0, [X20]
	0x0361D96C LDR W8, [X0 + 0xE0]
	0x0361D970 CBNZ W8, 0x361D97C
	0x0361D974 BL 0x1C16DFC
	0x0361D978 LDR X0, [X20]
	0x0361D97C LDR X8, [X0 + 0xB8]
	0x0361D980 LDR X0, [X8 + 0x8]
	0x0361D984 CBZ X0, 0x361D9A0
	0x0361D988 LDR X8, [X0]
	0x0361D98C MOV X1, X19
	0x0361D990 LDP X20, X19, [X31 + 0x10]
	0x0361D994 LDP X3, X2, [X8 + 0x1F8]
	0x0361D998 LDP X30, X21, [X31], #0x20
	0x0361D99C BR X3
	0x0361D9A0 BL 0x1C16F20
	0x0361D9A4 STR X30, [X31 - 0x20]!
	0x0361D9A8 STP X20, X19, [X31 + 0x10]
	0x0361D9AC LDR X8, [X0 + 0x20]
	0x0361D9B0 MOV X19, X0
	0x0361D9B4 CBZ X8, 0x361DA08
	0x0361D9B8 LDR X1, [X19 + 0x30]
	0x0361D9BC TBNZ X1, 0x1E, 0x361D9C8
	0x0361D9C0 MOV X0, X19
	0x0361D9C4 BL 0x36180CC
	0x0361D9C8 LDR X8, [X19 + 0x38]
	0x0361D9CC CBZ X8, 0x361DA6C
	0x0361D9D0 LDR X8, [X8 + 0x20]
	0x0361D9D4 CBNZ X8, 0x361DA50
	0x0361D9D8 LDR X0, [X19 + 0x20]
	0x0361D9DC CBZ X0, 0x361DA6C
	0x0361D9E0 MOV X1, X31
	0x0361D9E4 BL 0x362CE34
	0x0361D9E8 LDR X20, [X19 + 0x38]
	0x0361D9EC MOVZ W1, 0x7F
	0x0361D9F0 TBZ X0, 0x0, 0x361DA3C
	0x0361D9F4 MOVZ W2, 0x7FFF
	0x0361D9F8 MOV X0, X19
	0x0361D9FC BL 0x361DA70
	0x0361DA00 CBNZ X20, 0x361DA4C
	0x0361DA04 B 0x361DA6C
	0x0361DA08 LDRB W8, [X19 + 0x40]
	0x0361DA0C CBZ W8, 0x361DA18
	0x0361DA10 LDRB W8, [X19 + 0x34]
	0x0361DA14 TBNZ X8, 0x1, 0x361DA34
	0x0361DA18 MOV X0, X19
	0x0361DA1C BL 0x361CF60
	0x0361DA20 ADD X8, X19, 0x10
	0x0361DA24 ADD X9, X19, 0x18
	0x0361DA28 ANDS W31, W0, 0x1
	0x0361DA2C CSEL X8, X9, X8, NE
	0x0361DA30 B 0x361DA5C
	0x0361DA34 ADD X8, X19, 0x10
	0x0361DA38 B 0x361DA5C
	0x0361DA3C MOVZ W2, 0x3
	0x0361DA40 MOV X0, X19
	0x0361DA44 BL 0x3620B04
	0x0361DA48 CBZ X20, 0x361DA6C
	0x0361DA4C STR X0, [X20 + 0x20]
	0x0361DA50 LDR X8, [X19 + 0x38]
	0x0361DA54 CBZ X8, 0x361DA6C
	0x0361DA58 ADD X8, X8, 0x20
	0x0361DA5C LDR X0, [X8]
	0x0361DA60 LDP X20, X19, [X31 + 0x10]
	0x0361DA64 LDR X30, [X31], #0x20
	0x0361DA68 RET
	0x0361DA6C BL 0x1C16F20
	0x0361DA70 STR X30, [X31 - 0x30]!
	0x0361DA74 STP X22, X21, [X31 + 0x10]
	0x0361DA78 STP X20, X19, [X31 + 0x20]
	0x0361DA7C ADRP X22, 0xDC3000
	0x0361DA80 LDRB W8, [X22 + 0x4B0]
	0x0361DA84 MOV W20, W2
	0x0361DA88 MOV W21, W1
	0x0361DA8C MOV X19, X0
	0x0361DA90 TBNZ X8, 0x0, 0x361DAB4
	0x0361DA94 ADRP X0, 0xAD8000
	0x0361DA98 LDR X0, [X0 + 0xC48]
	0x0361DA9C BL 0x1C16CF4
	0x0361DAA0 ADRP X0, 0xAD8000
	0x0361DAA4 LDR X0, [X0 + 0x278]
	0x0361DAA8 BL 0x1C16CF4
	0x0361DAAC MOVZ W8, 0x1
	0x0361DAB0 STRB W8, [X22 + 0x4B0]
	0x0361DAB4 CMP W21, 0x1
	0x0361DAB8 B.NE 0x361DAD8
	0x0361DABC LDR X8, [X19 + 0x20]
	0x0361DAC0 CBZ X8, 0x361DC38
	0x0361DAC4 LDR X0, [X8 + 0x20]
	0x0361DAC8 LDP X20, X19, [X31 + 0x20]
	0x0361DACC LDP X22, X21, [X31 + 0x10]
	0x0361DAD0 LDR X30, [X31], #0x30
	0x0361DAD4 RET
	0x0361DAD8 LDR W8, [X19 + 0x30]
	0x0361DADC ORR W9, W21, 0x7F
	0x0361DAE0 CMP W21, 0x0
	0x0361DAE4 CSEL W21, W21, W9, GE
	0x0361DAE8 TBNZ X8, 0x1F, 0x361DAF4
	0x0361DAEC MOV X0, X19
	0x0361DAF0 BL 0x3618664
	0x0361DAF4 UBFM W8, W21, 0x6, 0x1F
	0x0361DAF8 AND W8, W8, 0x4
	0x0361DAFC ORR W22, W8, W21, 0x0
	0x0361DB00 TBZ X22, 0x2, 0x361DB10
	0x0361DB04 MOVZ W1, 0x1
	0x0361DB08 MOV X0, X19
	0x0361DB0C BL 0x3619254
	0x0361DB10 CMP W22, 0x80
	0x0361DB14 B.EQ 0x361DB20
	0x0361DB18 CMP W22, 0x8
	0x0361DB1C B.NE 0x361DB8C
	0x0361DB20 LDRB W8, [X19 + 0x32]
	0x0361DB24 TBNZ X8, 0x7, 0x361DB44
	0x0361DB28 CMP W22, 0x80
	0x0361DB2C B.NE 0x361DBD4
	0x0361DB30 LDR X8, [X19 + 0x20]
	0x0361DB34 CBZ X8, 0x361DC38
	0x0361DB38 LDR W8, [X8 + 0x1C]
	0x0361DB3C ADDS W31, W8, 0x1
	0x0361DB40 B.EQ 0x361DBD4
	0x0361DB44 LDR X8, [X19 + 0x38]
	0x0361DB48 CBZ X8, 0x361DC38
	0x0361DB4C ADRP X9, 0xAD8000
	0x0361DB50 LDR X9, [X9 + 0xC48]
	0x0361DB54 ADD X19, X8, 0x2E
	0x0361DB58 LDR X0, [X9]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X19, 0xDC4000
	015 Move W8, [X19+1181]
	016 Move X21, X3
	017 Move X24, X2
	018 Move W22, W1
	019 Move X20, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {29}
	024 Move X0, 0xB1F000
	025 Move X0, [X0+72]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X19+1181], W8
	029 NotImplemented "Instruction LDRH not yet implemented."
	030 Subtract W9, W22, 1
	031 Subtract W29, W23, 1
	032 And W8, W29, 0xFFFF
	033 NotImplemented "Instruction CMP not yet implemented."
	034 And W9, W9, 0xFFFF
	035 Move [X31+8], W9
	036 Move W9, W31
	037 Move W25, W31
	038 Move W28, W31
	039 Move W26, W31
	040 Compare X20, 0
	041 JumpIfEqual {338}
	042 Move W26, W31
	043 Move W28, W31
	044 Move W25, W31
	045 Move [X31+12], W31
	046 Move [X31], X21
	047 Move W9, [X20+24]
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Add X22, X20, W8
	050 Move W19, W23
	051 Move W23, W8
	052 NotImplemented "Instruction LDRH not yet implemented."
	053 NotImplemented "Instruction CMP not yet implemented."
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Compare X21, 0
	056 JumpIfEqual {338}
	057 Move W1, 0x400000
	058 Move X0, X21
	059 Move X2, X31
	060 Call UriParser.InFact, X0, X1
	061 Move TEMP, X0
	062 And TEMP, TEMP, 1
	063 Compare TEMP, 1
	064 JumpIfNotEqual {82}
	065 Move W8, [X20+24]
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Move W8, 47
	068 NotImplemented "Instruction STRH not yet implemented."
	069 Add W26, W26, 1
	070 Move W27, 1
	071 And W9, W26, 0xFFFF
	072 NotImplemented "Instruction CMP not yet implemented."
	073 NotImplemented "Instruction CSEL not yet implemented."
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Move W26, W31
	076 Add W25, W25, 1
	077 Move W26, W31
	078 Move W27, W31
	079 And W31, W25, 0xFFFF
	080 Compare X21, 0
	081 JumpIfNotEqual {88}
	082 And W8, W26, 0xFFFF
	083 NotImplemented "Instruction CMP not yet implemented."
	084 NotImplemented "Instruction CSEL not yet implemented."
	085 And W31, W25, 0xFFFF
	086 Move W26, W31
	087 Move W27, W31
	088 Move W1, 0x1000000
	089 Move X0, X21
	090 Move X2, X31
	091 Call UriParser.NotAny, X0, X1
	092 Move TEMP, X0
	093 And TEMP, TEMP, 1
	094 Compare TEMP, 1
	095 JumpIfNotEqual {99}
	096 And W8, W25, 0xFFFF
	097 NotImplemented "Instruction CMP not yet implemented."
	098 Move W19, 1
	099 Move W9, W31
	100 Xor W8, W27, 1
	101 Xor W8, W27, 1
	102 Move W9, W8
	103 NotImplemented "Instruction CMP not yet implemented."
	104 NotImplemented "Instruction CSET not yet implemented."
	105 Compare W9, 0
	106 JumpIfNotEqual {132}
	107 Move TEMP, X8
	108 And TEMP, TEMP, 1
	109 Compare TEMP, 1
	110 JumpIfEqual {132}
	111 Add W19, W23, 1
	112 Add W22, W19, W25
	113 NotImplemented "Instruction CMP not yet implemented."
	114 Move X8, 0xB1F000
	115 Move X8, [X8+72]
	116 Move X21, X24
	117 Move X0, [X8]
	118 Move W8, [X0+224]
	119 Compare W8, 0
	120 JumpIfNotEqual {122}
	121 Call 0x1C17DFC
	122 Move X0, X31
	123 Call UriParser.get_ShouldUseLegacyV2Quirks
	124 And W24, W25, 0xFFFF
	125 NotImplemented "Instruction CMP not yet implemented."
	126 Move TEMP, X0
	127 And TEMP, TEMP, 1
	128 Compare TEMP, 1
	129 JumpIfEqual {224}
	130 Move X24, X21
	131 Move X21, [X31]
	132 Move X8, 0xB1F000
	133 Move X8, [X8+72]
	134 Move X0, [X8]
	135 Move W8, [X0+224]
	136 Compare W8, 0
	137 JumpIfNotEqual {139}
	138 Call 0x1C17DFC
	139 Move X0, X31
	140 Call UriParser.get_ShouldUseLegacyV2Quirks
	141 Move W9, [X31+12]
	142 And W31, W9, 0xFFFF
	143 Move TEMP, X0
	144 And TEMP, TEMP, 1
	145 Compare TEMP, 1
	146 JumpIfNotEqual {181}
	147 Xor W8, W19, 1
	148 Compare W8, 0
	149 JumpIfEqual {181}
	150 Add W19, W23, 1
	151 Add W22, W19, W25
	152 NotImplemented "Instruction CMP not yet implemented."
	153 Move W8, [X24]
	154 And W9, W22, 0xFFFF
	155 Subtract W8, W8, W22
	156 Move W3, W19
	157 ShiftRight W3, 31
	158 And W3, W3, 0x3FFFFFFF
	159 Move W1, W9
	160 ShiftRight W1, 31
	161 And W1, W1, 0x3FFFFFFF
	162 Move W4, W8
	163 ShiftRight W4, 31
	164 And W4, W4, 0x3FFFFFFF
	165 Move X0, X20
	166 Move X2, X20
	167 Move X5, X31
	168 Call Buffer.BlockCopy, X0, X1, X2, X3, X4
	169 Move W8, [X24]
	170 Subtract W9, W19, W22
	171 Move [X31+12], W31
	172 Move W25, W31
	173 Add W8, W9, W8
	174 Move W28, W31
	175 Move [X24], W8
	176 And W31, W28, 0xFFFF
	177 Move W8, [X24]
	178 NotImplemented "Instruction CMP not yet implemented."
	179 Move W28, W31
	180 Move W9, [X31+12]
	181 Compare W27, 0
	182 JumpIfEqual {210}
	183 And W31, W9, 0xFFFF
	184 Move W8, [X24]
	185 Subtract W9, W9, 1
	186 Add W19, W28, 1
	187 Move [X31+12], W9
	188 And W9, W19, 0xFFFF
	189 Move W1, W9
	190 ShiftRight W1, 31
	191 And W1, W1, 0x3FFFFFFF
	192 Move W9, W23
	193 ShiftRight W9, 31
	194 And W9, W9, 0x3FFFFFFF
	195 Subtract W8, W8, W19
	196 Add W3, W9, 2
	197 Move W4, W8
	198 ShiftRight W4, 31
	199 And W4, W4, 0x3FFFFFFF
	200 Move X0, X20
	201 Move X2, X20
	202 Move X5, X31
	203 Call Buffer.BlockCopy, X0, X1, X2, X3, X4
	204 Move W8, [X24]
	205 Subtract W9, W23, W19
	206 Move W25, W31
	207 Add W8, W9, W8
	208 Add W8, W8, 1
	209 Move [X24], W8
	210 Move W25, W31
	211 Move [X31+12], W31
	212 Move W25, W31
	213 Move W28, W29
	214 Move W9, [X31+8]
	215 Subtract W29, W23, 1
	216 And W8, W29, 0xFFFF
	217 NotImplemented "Instruction CMP not yet implemented."
	218 And W31, W28, 0xFFFF
	219 Move W8, [X24]
	220 NotImplemented "Instruction CMP not yet implemented."
	221 Move W8, W22
	222 Move W28, W31
	223 Move W25, W26
	224 Move W8, [X21]
	225 And W31, W28, 0xFFFF
	226 NotImplemented "Instruction CINC not yet implemented."
	227 And W9, W22, 0xFFFF
	228 Subtract W8, W8, W22
	229 Move W1, W9
	230 ShiftRight W1, 31
	231 And W1, W1, 0x3FFFFFFF
	232 Move W3, W19
	233 ShiftRight W3, 31
	234 And W3, W3, 0x3FFFFFFF
	235 Move W4, W8
	236 ShiftRight W4, 31
	237 And W4, W4, 0x3FFFFFFF
	238 Move X0, X20
	239 Move X2, X20
	240 Move X5, X31
	241 Call Buffer.BlockCopy, X0, X1, X2, X3, X4
	242 Move W8, [X21]
	243 Subtract W9, W19, W22
	244 NotImplemented "Instruction CMP not yet implemented."
	245 Move X24, X21
	246 Add W8, W9, W8
	247 Move [X21], W8
	248 Move W8, [X31+12]
	249 Move X21, [X31]
	250 Move W25, W31
	251 Move W28, W29
	252 NotImplemented "Instruction CINC not yet implemented."
	253 Move [X31+12], W8
	254 NotImplemented "Instruction LDRH not yet implemented."
	255 Move W9, [X31+12]
	256 Move W8, [X31+8]
	257 Add W19, W8, 1
	258 NotImplemented "Instruction CMP not yet implemented."
	259 Compare X21, 0
	260 JumpIfEqual {338}
	261 Move W1, 0x1000000
	262 Move X0, X21
	263 Move X2, X31
	264 Move W22, W9
	265 Call UriParser.InFact, X0, X1
	266 And W8, W26, 0xFFFF
	267 NotImplemented "Instruction CMP not yet implemented."
	268 Move TEMP, X0
	269 And TEMP, TEMP, 1
	270 Compare TEMP, 1
	271 JumpIfNotEqual {319}
	272 And W31, W22, 0xFFFF
	273 And W8, W19, 0xFFFF
	274 Compare X20, 0
	275 JumpIfEqual {338}
	276 Move W9, [X20+24]
	277 NotImplemented "Instruction CMP not yet implemented."
	278 Add X9, X20, W8
	279 NotImplemented "Instruction LDRH not yet implemented."
	280 NotImplemented "Instruction CMP not yet implemented."
	281 And W31, W25, 0xFFFF
	282 And W9, W25, 0xFFFF
	283 Add W10, W9, 1
	284 NotImplemented "Instruction CMP not yet implemented."
	285 Move W10, [X24]
	286 And W31, W28, 0xFFFF
	287 NotImplemented "Instruction CINC not yet implemented."
	288 Move W3, W8
	289 ShiftRight W3, 31
	290 And W3, W3, 0x3FFFFFFF
	291 And W8, W19, 0xFFFF
	292 Subtract W9, W10, W19
	293 Move W1, W8
	294 ShiftRight W1, 31
	295 And W1, W1, 0x3FFFFFFF
	296 Move W4, W9
	297 ShiftRight W4, 31
	298 And W4, W4, 0x3FFFFFFF
	299 Move W9, [X24]
	300 Add W19, W28, 1
	301 And W10, W19, 0xFFFF
	302 Move W3, W8
	303 ShiftRight W3, 31
	304 And W3, W3, 0x3FFFFFFF
	305 Subtract W8, W9, W19
	306 Move W1, W10
	307 ShiftRight W1, 31
	308 And W1, W1, 0x3FFFFFFF
	309 Move W4, W8
	310 ShiftRight W4, 31
	311 And W4, W4, 0x3FFFFFFF
	312 Move X0, X20
	313 Move X2, X20
	314 Move X5, X31
	315 Call Buffer.BlockCopy, X0, X1, X2, X3, X4
	316 Move W8, [X24]
	317 Subtract W8, W8, W19
	318 Move [X24], W8
	319 Move X0, X20
	320 Move X20, [X31+96]
	321 Move X19, [X31+104]
	322 Move X22, [X31+80]
	323 Move X21, [X31+88]
	324 Move X24, [X31+64]
	325 Move X23, [X31+72]
	326 Move X26, [X31+48]
	327 Move X25, [X31+56]
	328 Move X28, [X31+32]
	329 Move X27, [X31+40]
	330 Move X29, [X31+16]
	331 Move X30, [X31+24]
	332 Add X31, X31, 112
	333 Return X0
	334 And W31, W28, 0xFFFF
	335 Move W11, [X24]
	336 NotImplemented "Instruction CMP not yet implemented."
	337 Call 0x1C17F28
	338 Call 0x1C17F20

Method: System.Int32 CalculateCaseInsensitiveHashCode(System.String text)

Disassembly:
	0x0361E904 LDRH W8, [X21, X9, LSL #1]
	0x0361E908 LDUR X27, [X29 - 0x28]
	0x0361E90C CMP W8, 0x5C
	0x0361E910 B.EQ 0x361E998
	0x0361E914 CMP W8, 0x2F
	0x0361E918 B.NE 0x361E98C
	0x0361E91C ANDS W31, W20, 0xFFFF
	0x0361E920 B.EQ 0x361E9DC
	0x0361E924 SUB W8, W23, 0x1
	0x0361E928 LDRH W8, [X21, W8, SXTW]
	0x0361E92C CMP W8, 0x3A
	0x0361E930 B.NE 0x361E9DC
	0x0361E934 LDRH W8, [X21, X25, LSL]
	0x0361E938 CMP W8, 0x2F
	0x0361E93C B.NE 0x361E98C
	0x0361E940 LDRH W8, [X21, W19, UXTW]
	0x0361E944 CMP W8, 0x2F
	0x0361E948 B.NE 0x361E98C
	0x0361E94C LDUR X10, [X29 - 0x20]
	0x0361E950 MOVZ W9, 0x20100000
	0x0361E954 ADRP X20, 0xB1D000
	0x0361E958 LDR X8, [X10]
	0x0361E95C ORR X8, X8, X9, 0x0
	0x0361E960 STR X8, [X10]
	0x0361E964 LDR X20, [X20 + 0x48]
	0x0361E968 LDR X0, [X20]
	0x0361E96C LDR W8, [X0 + 0xE0]
	0x0361E970 CBNZ W8, 0x361E97C
	0x0361E974 BL 0x1C16DFC
	0x0361E978 LDR X0, [X20]
	0x0361E97C LDR X8, [X0 + 0xB8]
	0x0361E980 LDUR X9, [X29 - 0x10]
	0x0361E984 MOV W20, W19
	0x0361E988 B 0x361E7E8
	0x0361E98C AND W8, W28, 0xFFFF
	0x0361E990 CMP W8, W24, UXTH
	0x0361E994 B.NE 0x361E9E8
	0x0361E998 MOV W20, W31
	0x0361E99C MOVZ W8, 0x1
	0x0361E9A0 LDUR X9, [X29 - 0x18]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xDC3000
	006 Move X20, 0xAE3000
	007 Move W8, [X21+1182]
	008 Move X20, [X20+752]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xAE3000
	015 Move X0, [X0+752]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+1182], W8
	019 Move X0, [X20]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X21, 0xDC3000
	025 Move W8, [X21+1203]
	026 Compare W8, 0
	027 JumpIfNotEqual {33}
	028 Move X0, 0xAE3000
	029 Move X0, [X0+752]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X21+1203], W8
	033 Move X0, [X20]
	034 Move W8, [X0+224]
	035 Compare W8, 0
	036 JumpIfNotEqual {39}
	037 Call 0x1C17DFC
	038 Move X0, [X20]
	039 Move X8, [X0+184]
	040 Move X0, [X8+8]
	041 Compare X0, 0
	042 JumpIfEqual {52}
	043 Move X8, [X0]
	044 Move X1, X19
	045 Move X20, [X31+16]
	046 Move X19, [X31+24]
	047 Move X3, [X8+504]
	048 Move X2, [X8+512]
	049 Move X30, [X31+32]
	050 Move X21, [X31+40]
	051 CallNoReturn X3
	052 Call 0x1C17F20

Method: System.String CombineUri(System.Uri basePart, System.String relativePart, System.UriFormat uriFormat)

Disassembly:
	0x0361B7A4 LDRH W8, [X8 + 0x30]
	0x0361B7A8 CMP W9, W8
	0x0361B7AC B.EQ 0x361B804
	0x0361B7B0 MOV X0, X19
	0x0361B7B4 BL 0x361BF18
	0x0361B7B8 TBZ X0, 0x0, 0x361B804
	0x0361B7BC MOV X0, X19
	0x0361B7C0 BL 0x361CF60
	0x0361B7C4 ANDS W31, W0, 0x1
	0x0361B7C8 MOVZ W8, 0x10
	0x0361B7CC MOVZ W9, 0x18
	0x0361B7D0 CSEL X8, X9, X8, NE
	0x0361B7D4 LDR X0, [X19, X8, LSL]
	0x0361B7D8 CBZ X0, 0x361BD00
	0x0361B7DC ADRP X8, 0xB20000
	0x0361B7E0 LDR X8, [X8 + 0xC0]
	0x0361B7E4 MOVZ W2, 0x4
	0x0361B7E8 MOV X3, X31
	0x0361B7EC LDR X1, [X8]
	0x0361B7F0 BL 0x3226FBC
	0x0361B7F4 TBZ X0, 0x0, 0x361B804
	0x0361B7F8 MOV X0, X19
	0x0361B7FC BL 0x361BFD8
	0x0361B800 TBZ X0, 0x0, 0x361BA64
	0x0361B804 MOV W23, W31
	0x0361B808 LDR X20, [X19 + 0x30]
	0x0361B80C ADRP X24, 0xADA000
	0x0361B810 LDR X24, [X24 + 0xA28]
	0x0361B814 ANDS X31, X20, 0x1FFFFFFF
	0x0361B818 B.EQ 0x361B84C
	0x0361B81C LDR X0, [X24]
	0x0361B820 LDR W8, [X0 + 0xE0]
	0x0361B824 CBNZ W8, 0x361B830
	0x0361B828 BL 0x1C16DFC
	0x0361B82C LDR X0, [X24]
	0x0361B830 LDR X8, [X0 + 0xB8]
	0x0361B834 LDRB W9, [X8 + 0x72]
	0x0361B838 MOVZ W8, 0x1
	0x0361B83C CBNZ W9, 0x361B850
	0x0361B840 LDR W9, [X19 + 0x30]
	0x0361B844 BIC W8, W8, W9, 0x1C
	0x0361B848 B 0x361B850
	0x0361B84C MOV W8, W31
	0x0361B850 ORR W8, W8, W23, 0x0
	0x0361B854 CBZ W8, 0x361B890
	0x0361B858 MOV X0, X19
	0x0361B85C MOV W1, W31
	0x0361B860 BL 0x3619254
	0x0361B864 TBNZ X23, 0x0, 0x361B8A8
	0x0361B868 LDR X9, [X19 + 0x30]
	0x0361B86C MOVZ W8, 0x2014
	0x0361B870 AND X8, X9, X8, 0x0
	0x0361B874 CBNZ X8, 0x361B8A8
	0x0361B878 LDR X8, [X19 + 0x38]
	0x0361B87C CBZ X8, 0x361BD00
	0x0361B880 TBNZ X9, 0x1C, 0x361B978
	0x0361B884 LDRH W20, [X8 + 0x30]
	0x0361B888 TBNZ X9, 0x1D, 0x361B984
	0x0361B88C B 0x361B9B0
	0x0361B890 MOVZ W1, 0x10
	0x0361B894 MOVK W1, 0x40000000
	0x0361B898 MOVZ W2, 0x2
	0x0361B89C MOV X0, X19
	0x0361B8A0 BL 0x361CB5C
	0x0361B8A4 B 0x361BCD8
	0x0361B8A8 STR W31, [X31 + 0x2C]
	0x0361B8AC LDR X8, [X19 + 0x38]
	0x0361B8B0 CBZ X8, 0x361BD00
	0x0361B8B4 LDR X22, [X8 + 0x10]
	0x0361B8B8 CBZ X22, 0x361BD00
	0x0361B8BC UBFM X9, X20, 0x1C, 0x1C
	0x0361B8C0 ORR W23, W23, W9, 0x0
	0x0361B8C4 ADRP X9, 0xAE1000
	0x0361B8C8 LDRH W21, [X8 + 0x30]
	0x0361B8CC LDR W10, [X22 + 0x10]
	0x0361B8D0 LDRH W8, [X8 + 0x34]
	0x0361B8D4 LDR X9, [X9 + 0x8D8]
	0x0361B8D8 LDR X0, [X9]
	0x0361B8DC SUB W9, W10, W21
	0x0361B8E0 ADD W8, W9, W8
	0x0361B8E4 ADD W1, W8, 0x3
	0x0361B8E8 BL 0x1C16D6C
	0x0361B8EC MOV X20, X0
	0x0361B8F0 CBZ W23, 0x361BA18
	0x0361B8F4 CBZ X20, 0x361BD00
	0x0361B8F8 LDR W8, [X20 + 0x18]
	0x0361B8FC CBZ W8, 0x361BCFC
	0x0361B900 MOVZ W9, 0x5C
	0x0361B904 CMP W8, 0x1
	0x0361B908 STRH W9, [X20 + 0x20]
	0x0361B90C B.EQ 0x361BCFC
	0x0361B910 STRH W9, [X20 + 0x22]
	0x0361B914 ADRP X8, 0xB20000
	0x0361B918 LDR X8, [X8 + 0x58]
	0x0361B91C LDR X0, [X8]
	0x0361B920 MOVZ W8, 0x2
	0x0361B924 STR W8, [X31 + 0x2C]
	0x0361B928 LDR W23, [X22 + 0x10]
	0x0361B92C LDR W8, [X0 + 0xE0]
	0x0361B930 LDR X25, [X19 + 0x20]
	0x0361B934 CBNZ W8, 0x361B93C
	0x0361B938 BL 0x1C16DFC
	0x0361B93C ADD X4, X31, 0x2C
	0x0361B940 MOVZ W5, 0xFFFF
	0x0361B944 MOVZ W6, 0xFFFF
	0x0361B948 MOVZ W7, 0xFFFF
	0x0361B94C MOV X0, X22
	0x0361B950 MOV W1, W31
	0x0361B954 MOV W2, W23
	0x0361B958 MOV X3, X20
	0x0361B95C STR X31, [X31 + 0x18]
	0x0361B960 STRB W31, [X31 + 0x10]
	0x0361B964 STR X25, [X31 + 0x8]
	0x0361B968 STR W31, [X31]
	0x0361B96C BL 0x362B208
	0x0361B970 LDR W25, [X31 + 0x2C]
	0x0361B974 B 0x361BACC
	0x0361B978 LDRH W10, [X8 + 0x2C]
	0x0361B97C SUB W20, W10, 0x2
	0x0361B980 TBZ X9, 0x1D, 0x361B9B0
	0x0361B984 LDRH W10, [X8 + 0x2C]
	0x0361B988 MOVZ W11, 0x2
	0x0361B98C BIC W11, W11, W9, 0x1A
	0x0361B990 CMP W11, W10
	0x0361B994 B.NE 0x361B9B0
	0x0361B998 LDRH W10, [X8 + 0x32]
	0x0361B99C LDRH W11, [X8 + 0x36]
	0x0361B9A0 CMP W10, W11
	0x0361B9A4 B.NE 0x361B9B0
	0x0361B9A8 LDR X20, [X19 + 0x10]
	0x0361B9AC B 0x361BC24
	0x0361B9B0 LDR X0, [X19 + 0x10]
	0x0361B9B4 TBZ X9, 0x1B, 0x361BC08
	0x0361B9B8 CBZ X0, 0x361BD00
	0x0361B9BC MOV W1, W20
	0x0361B9C0 MOV X2, X31
	0x0361B9C4 BL 0x3222A1C
	0x0361B9C8 AND W8, W0, 0xFFFF
	0x0361B9CC CMP W8, 0x2F
	0x0361B9D0 B.EQ 0x361B9F4
	0x0361B9D4 LDR X0, [X19 + 0x10]
	0x0361B9D8 CBZ X0, 0x361BD00
	0x0361B9DC MOV W1, W20
	0x0361B9E0 MOV X2, X31
	0x0361B9E4 BL 0x3222A1C
	0x0361B9E8 AND W8, W0, 0xFFFF
	0x0361B9EC CMP W8, 0x5C
	0x0361B9F0 B.NE 0x361BBFC
	0x0361B9F4 LDR X8, [X19 + 0x38]
	0x0361B9F8 CBZ X8, 0x361BD00
	0x0361B9FC LDR X0, [X19 + 0x10]
	0x0361BA00 CBZ X0, 0x361BD00
	0x0361BA04 LDRH W8, [X8 + 0x32]
	0x0361BA08 ORN W9, W31, W20, 0x0
	0x0361BA0C ADD W1, W20, 0x1
	0x0361BA10 ADD W2, W8, W9
	0x0361BA14 B 0x361BC18
	0x0361BA18 LDR X0, [X19 + 0x10]
	0x0361BA1C CBZ X0, 0x361BD00
	0x0361BA20 MOV W1, W21
	0x0361BA24 MOV X2, X31
	0x0361BA28 BL 0x3222A1C
	0x0361BA2C AND W8, W0, 0xFFFF
	0x0361BA30 CMP W8, 0x2F
	0x0361BA34 B.EQ 0x361BA58
	0x0361BA38 LDR X0, [X19 + 0x10]
	0x0361BA3C CBZ X0, 0x361BD00
	0x0361BA40 MOV W1, W21
	0x0361BA44 MOV X2, X31
	0x0361BA48 BL 0x3222A1C
	0x0361BA4C AND W8, W0, 0xFFFF
	0x0361BA50 CMP W8, 0x5C
	0x0361BA54 B.NE 0x361BAC8
	0x0361BA58 MOV W25, W31
	0x0361BA5C ADD W21, W21, 0x1
	0x0361BA60 B 0x361BACC
	0x0361BA64 LDR X8, [X19 + 0x38]
	0x0361BA68 CBZ X8, 0x361BD00
	0x0361BA6C LDRH W20, [X8 + 0x2C]
	0x0361BA70 MOVZ W21, 0x10
	0x0361BA74 MOVZ W22, 0x18
	0x0361BA78 LDRH W8, [X8 + 0x30]
	0x0361BA7C CMP W20, W8
	0x0361BA80 CSET W23, CC
	0x0361BA84 B.CS 0x361B808
	0x0361BA88 MOV X0, X19
	0x0361BA8C BL 0x361CF60
	0x0361BA90 ANDS W31, W0, 0x1
	0x0361BA94 CSEL X8, X22, X21, NE
	0x0361BA98 LDR X0, [X19, X8, LSL]
	0x0361BA9C CBZ X0, 0x361BD00
	0x0361BAA0 MOV W1, W20
	0x0361BAA4 MOV X2, X31
	0x0361BAA8 BL 0x3222A1C
	0x0361BAAC AND W8, W0, 0xFFFF
	0x0361BAB0 CMP W8, 0x2F
	0x0361BAB4 B.NE 0x361B808
	0x0361BAB8 LDR X8, [X19 + 0x38]
	0x0361BABC ADD W20, W20, 0x1
	0x0361BAC0 CBNZ X8, 0x361BA78
	0x0361BAC4 B 0x361BD00
	0x0361BAC8 MOV W25, W31
	0x0361BACC LDP X9, X8, [X19 + 0x30]
	0x0361BAD0 MOVZ W10, 0xA
	0x0361BAD4 ANDS X31, X9, 0x3FFFFFFF
	0x0361BAD8 CSEL W10, W10, W31, EQ
	0x0361BADC ANDS X31, X9, 0x1F
	0x0361BAE0 CSEL W26, W31, W10, EQ
	0x0361BAE4 CBZ X8, 0x361BD00
	0x0361BAE8 ADRP X9, 0xB20000
	0x0361BAEC LDR X9, [X9 + 0x58]
	0x0361BAF0 LDR X23, [X19 + 0x10]
	0x0361BAF4 LDRH W22, [X8 + 0x32]
	0x0361BAF8 LDR X27, [X19 + 0x20]
	0x0361BAFC LDR X0, [X9]
	0x0361BB00 LDR W8, [X0 + 0xE0]
	0x0361BB04 CBNZ W8, 0x361BB0C
	0x0361BB08 BL 0x1C16DFC
	0x0361BB0C MOVZ W8, 0x1
	0x0361BB10 ADD X4, X31, 0x2C
	0x0361BB14 MOVZ W5, 0xFFFF
	0x0361BB18 MOVZ W6, 0xFFFF
	0x0361BB1C MOVZ W7, 0xFFFF
	0x0361BB20 MOV X0, X23
	0x0361BB24 MOV W1, W21
	0x0361BB28 MOV W2, W22
	0x0361BB2C MOV X3, X20
	0x0361BB30 STR X31, [X31 + 0x18]
	0x0361BB34 STR X27, [X31 + 0x8]
	0x0361BB38 STRB W8, [X31 + 0x10]
	0x0361BB3C STR W26, [X31]
	0x0361BB40 BL 0x362B208
	0x0361BB44 CBZ X20, 0x361BD00
	0x0361BB48 LDR W8, [X20 + 0x18]
	0x0361BB4C CMP W8, 0x1
	0x0361BB50 B.LS 0x361BCFC
	0x0361BB54 LDRH W8, [X20 + 0x22]
	0x0361BB58 CMP W8, 0x7C
	0x0361BB5C B.NE 0x361BB68
	0x0361BB60 MOVZ W8, 0x3A
	0x0361BB64 STRH W8, [X20 + 0x22]
	0x0361BB68 LDR X8, [X19 + 0x30]
	0x0361BB6C TBZ X8, 0xD, 0x361BBA4
	0x0361BB70 LDR X0, [X24]
	0x0361BB74 LDR X19, [X19 + 0x20]
	0x0361BB78 ADD W10, W25, 0x2
	0x0361BB7C ANDS X31, X8, 0xFFFFFFF
	0x0361BB80 LDR W9, [X0 + 0xE0]
	0x0361BB84 CSEL W21, W25, W10, EQ
	0x0361BB88 CBNZ W9, 0x361BB90
	0x0361BB8C BL 0x1C16DFC
	0x0361BB90 ADD X2, X31, 0x2C
	0x0361BB94 MOV X0, X20
	0x0361BB98 MOV W1, W21
	0x0361BB9C MOV X3, X19
	0x0361BBA0 BL 0x361C688
	0x0361BBA4 LDR W3, [X31 + 0x2C]
	0x0361BBA8 ANDS W8, W3, 0xFFFF
	0x0361BBAC B.EQ 0x361BBE4
	0x0361BBB0 LDR W10, [X20 + 0x18]
	0x0361BBB4 MOV W9, W31
	0x0361BBB8 MOVZ W11, 0x5C
	0x0361BBBC CMP W10, W9, UXTH
	0x0361BBC0 B.LS 0x361BCFC
	0x0361BBC4 ADD X12, X20, W9, 0x1, UXTH
	0x0361BBC8 LDRH W13, [X12 + 0x20]!
	0x0361BBCC CMP W13, 0x2F
	0x0361BBD0 B.NE 0x361BBD8
	0x0361BBD4 STRH W11, [X12]
	0x0361BBD8 ADD W9, W9, 0x1
	0x0361BBDC CMP W8, W9, UXTH
	0x0361BBE0 B.HI 0x361BBBC
	0x0361BBE4 MOV X0, X31
	0x0361BBE8 MOV X1, X20
	0x0361BBEC MOV W2, W31
	0x0361BBF0 MOV X4, X31
	0x0361BBF4 BL 0x322EAE4
	0x0361BBF8 B 0x361BCD8
	0x0361BBFC LDR X8, [X19 + 0x38]
	0x0361BC00 CBZ X8, 0x361BD00
	0x0361BC04 LDR X0, [X19 + 0x10]
	0x0361BC08 CBZ X0, 0x361BD00
	0x0361BC0C LDRH W8, [X8 + 0x32]
	0x0361BC10 MOV W1, W20
	0x0361BC14 SUB W2, W8, W20
	0x0361BC18 MOV X3, X31
	0x0361BC1C BL 0x3228DE4
	0x0361BC20 MOV X20, X0
	0x0361BC24 LDRB W8, [X19 + 0x33]
	0x0361BC28 TBZ X8, 0x3, 0x361BC80
	0x0361BC2C CBZ X20, 0x361BD00
	0x0361BC30 MOVZ W1, 0x1
	0x0361BC34 MOV X0, X20
	0x0361BC38 MOV X2, X31
	0x0361BC3C BL 0x3222A1C
	0x0361BC40 AND W8, W0, 0xFFFF
	0x0361BC44 CMP W8, 0x7C
	0x0361BC48 B.NE 0x361BC84
	0x0361BC4C MOVZ W1, 0x1
	0x0361BC50 MOVZ W2, 0x1
	0x0361BC54 MOV X0, X20
	0x0361BC58 MOV X3, X31
	0x0361BC5C BL 0x3228B90
	0x0361BC60 CBZ X0, 0x361BD00
	0x0361BC64 ADRP X8, 0xAE1000
	0x0361BC68 LDR X8, [X8 + 0x988]
	0x0361BC6C MOVZ W1, 0x1
	0x0361BC70 MOV X3, X31
	0x0361BC74 LDR X2, [X8]
	0x0361BC78 BL 0x3227EBC
	0x0361BC7C MOV X20, X0
	0x0361BC80 CBZ X20, 0x361BD00
	0x0361BC84 LDR W8, [X20 + 0x10]
	0x0361BC88 CMP W8, 0x1
	0x0361BC8C B.LT 0x361BCDC
	0x0361BC90 MOV W19, W31
	0x0361BC94 MOV X0, X20
	0x0361BC98 MOV W1, W19
	0x0361BC9C MOV X2, X31
	0x0361BCA0 BL 0x3222A1C
	0x0361BCA4 AND W8, W0, 0xFFFF
	0x0361BCA8 CMP W8, 0x2F
	0x0361BCAC B.EQ 0x361BCC4
	0x0361BCB0 LDR W8, [X20 + 0x10]
	0x0361BCB4 ADD W19, W19, 0x1
	0x0361BCB8 CMP W19, W8
	0x0361BCBC B.LT 0x361BC94
	0x0361BCC0 B 0x361BCDC
	0x0361BCC4 MOVZ W1, 0x2F
	0x0361BCC8 MOVZ W2, 0x5C
	0x0361BCCC MOV X0, X20
	0x0361BCD0 MOV X3, X31
	0x0361BCD4 BL 0x32296D0
	0x0361BCD8 MOV X20, X0
	0x0361BCDC MOV X0, X20
	0x0361BCE0 LDP X20, X19, [X31 + 0x70]
	0x0361BCE4 LDP X22, X21, [X31 + 0x60]
	0x0361BCE8 LDP X24, X23, [X31 + 0x50]
	0x0361BCEC LDP X26, X25, [X31 + 0x40]
	0x0361BCF0 LDP X30, X27, [X31 + 0x30]
	0x0361BCF4 ADD X31, X31, 0x80
	0x0361BCF8 RET
	0x0361BCFC BL 0x1C16F28
	0x0361BD00 BL 0x1C16F20
	0x0361BD04 STR X30, [X31 - 0x20]!
	0x0361BD08 STP X20, X19, [X31 + 0x10]
	0x0361BD0C LDR X8, [X0 + 0x20]
	0x0361BD10 CBZ X8, 0x361BD28
	0x0361BD14 LDP X20, X19, [X31 + 0x10]
	0x0361BD18 MOVZ W1, 0xC
	0x0361BD1C MOVZ W2, 0x1
	0x0361BD20 LDR X30, [X31], #0x20
	0x0361BD24 B 0x3620B04
	0x0361BD28 ADRP X0, 0xB20000
	0x0361BD2C LDR X0, [X0 + 0x150]
	0x0361BD30 BL 0x1C16D08
	0x0361BD34 MOV X1, X31
	0x0361BD38 BL 0x320A1E4
	0x0361BD3C MOV X19, X0
	0x0361BD40 ADRP X0, 0xAD8000
	0x0361BD44 LDR X0, [X0 + 0x5B0]
	0x0361BD48 BL 0x1C16D08
	0x0361BD4C BL 0x1C16F10
	0x0361BD50 MOV X1, X19
	0x0361BD54 MOV X2, X31
	0x0361BD58 MOV X20, X0
	0x0361BD5C BL 0x337DF1C
	0x0361BD60 ADRP X0, 0xB20000
	0x0361BD64 LDR X0, [X0 + 0x178]
	0x0361BD68 BL 0x1C16D08
	0x0361BD6C MOV X1, X0
	0x0361BD70 MOV X0, X20
	0x0361BD74 BL 0x1C16DEC
	0x0361BD78 STR X30, [X31 - 0x20]!
	0x0361BD7C STP X20, X19, [X31 + 0x10]
	0x0361BD80 MOV X19, X0
	0x0361BD84 LDR X0, [X0 + 0x20]
	0x0361BD88 CBZ X0, 0x361BE20
	0x0361BD8C MOV X1, X31
	0x0361BD90 BL 0x362CE34
	0x0361BD94 TBZ X0, 0x0, 0x361BDAC
	0x0361BD98 LDR X1, [X19 + 0x30]
	0x0361BD9C TBNZ X1, 0x1E, 0x361BDB8
	0x0361BDA0 MOV X0, X19
	0x0361BDA4 BL 0x36180CC
	0x0361BDA8 B 0x361BDB8
	0x0361BDAC MOV X0, X19
	0x0361BDB0 MOV W1, W31
	0x0361BDB4 BL 0x3619254
	0x0361BDB8 LDR X8, [X19 + 0x30]
	0x0361BDBC AND X8, X8, 0x7FFFF
	0x0361BDC0 CMP X8, 0x30000
	0x0361BDC4 B.HI 0x361BDE8
	0x0361BDC8 CMP X8, 0x10000
	0x0361BDCC B.EQ 0x361BE10
	0x0361BDD0 CMP X8, 0x20000
	0x0361BDD4 B.EQ 0x361BE08
	0x0361BDD8 CMP X8, 0x30000
	0x0361BDDC B.NE 0x361BE00
	0x0361BDE0 MOVZ W0, 0x2
	0x0361BDE4 B 0x361BE14
	0x0361BDE8 CMP X8, 0x40000
	0x0361BDEC MOVZ W0, 0x1
	0x0361BDF0 B.EQ 0x361BE14
	0x0361BDF4 CMP X8, 0x50000
	0x0361BDF8 B.EQ 0x361BE14
	0x0361BDFC CMP X8, 0x70000
	0x0361BE00 MOV W0, W31
	0x0361BE04 B 0x361BE14
	0x0361BE08 MOVZ W0, 0x3
	0x0361BE0C B 0x361BE14
	0x0361BE10 MOVZ W0, 0x4
	0x0361BE14 LDP X20, X19, [X31 + 0x10]
	0x0361BE18 LDR X30, [X31], #0x20
	0x0361BE1C RET
	0x0361BE20 ADRP X0, 0xB20000
	0x0361BE24 LDR X0, [X0 + 0x150]
	0x0361BE28 BL 0x1C16D08
	0x0361BE2C MOV X1, X31
	0x0361BE30 BL 0x320A1E4
	0x0361BE34 MOV X19, X0
	0x0361BE38 ADRP X0, 0xAD8000
	0x0361BE3C LDR X0, [X0 + 0x5B0]
	0x0361BE40 BL 0x1C16D08
	0x0361BE44 BL 0x1C16F10
	0x0361BE48 MOV X1, X19
	0x0361BE4C MOV X2, X31
	0x0361BE50 MOV X20, X0
	0x0361BE54 BL 0x337DF1C
	0x0361BE58 ADRP X0, 0xB20000
	0x0361BE5C LDR X0, [X0 + 0x180]
	0x0361BE60 BL 0x1C16D08
	0x0361BE64 MOV X1, X0
	0x0361BE68 MOV X0, X20
	0x0361BE6C BL 0x1C16DEC
	0x0361BE70 STR X30, [X31 - 0x20]!
	0x0361BE74 STP X20, X19, [X31 + 0x10]
	0x0361BE78 MOV X19, X0
	0x0361BE7C LDR X0, [X0 + 0x20]
	0x0361BE80 CBZ X0, 0x361BEC8
	0x0361BE84 MOV X1, X31
	0x0361BE88 BL 0x362CE34
	0x0361BE8C TBZ X0, 0x0, 0x361BEA4
	0x0361BE90 LDR X1, [X19 + 0x30]
	0x0361BE94 TBNZ X1, 0x1E, 0x361BEB0
	0x0361BE98 MOV X0, X19
	0x0361BE9C BL 0x36180CC
	0x0361BEA0 B 0x361BEB0
	0x0361BEA4 MOV X0, X19
	0x0361BEA8 MOV W1, W31
	0x0361BEAC BL 0x3619254
	0x0361BEB0 LDRB W8, [X19 + 0x32]
	0x0361BEB4 LDP X20, X19, [X31 + 0x10]
	0x0361BEB8 ANDS W31, W8, 0x80
	0x0361BEBC CSET W0, EQ
	0x0361BEC0 LDR X30, [X31], #0x20
	0x0361BEC4 RET
	0x0361BEC8 ADRP X0, 0xB20000
	0x0361BECC LDR X0, [X0 + 0x150]
	0x0361BED0 BL 0x1C16D08
	0x0361BED4 MOV X1, X31
	0x0361BED8 BL 0x320A1E4
	0x0361BEDC MOV X19, X0
	0x0361BEE0 ADRP X0, 0xAD8000
	0x0361BEE4 LDR X0, [X0 + 0x5B0]
	0x0361BEE8 BL 0x1C16D08
	0x0361BEEC BL 0x1C16F10
	0x0361BEF0 MOV X1, X19
	0x0361BEF4 MOV X2, X31
	0x0361BEF8 MOV X20, X0
	0x0361BEFC BL 0x337DF1C
	0x0361BF00 ADRP X0, 0xB20000
	0x0361BF04 LDR X0, [X0 + 0x188]
	0x0361BF08 BL 0x1C16D08
	0x0361BF0C MOV X1, X0
	0x0361BF10 MOV X0, X20
	0x0361BF14 BL 0x1C16DEC
	0x0361BF18 STR X30, [X31 - 0x20]!
	0x0361BF1C STP X20, X19, [X31 + 0x10]
	0x0361BF20 ADRP X20, 0xDC5000
	0x0361BF24 LDRB W8, [X20 + 0x47C]
	0x0361BF28 MOV X19, X0
	0x0361BF2C TBNZ X8, 0x0, 0x361BF44
	0x0361BF30 ADRP X0, 0xADA000
	0x0361BF34 LDR X0, [X0 + 0xA28]
	0x0361BF38 BL 0x1C16CF4
	0x0361BF3C MOVZ W8, 0x1
	0x0361BF40 STRB W8, [X20 + 0x47C]
	0x0361BF44 LDR X8, [X19 + 0x20]
	0x0361BF48 CBZ X8, 0x361BF88
	0x0361BF4C ADRP X20, 0xADA000
	0x0361BF50 LDR X20, [X20 + 0xA28]
	0x0361BF54 LDR X19, [X8 + 0x20]
	0x0361BF58 LDR X0, [X20]
	0x0361BF5C LDR W9, [X0 + 0xE0]
	0x0361BF60 CBNZ W9, 0x361BF6C
	0x0361BF64 BL 0x1C16DFC
	0x0361BF68 LDR X0, [X20]
	0x0361BF6C LDR X8, [X0 + 0xB8]
	0x0361BF70 LDR X8, [X8]
	0x0361BF74 CMP X19, X8
	0x0361BF78 LDP X20, X19, [X31 + 0x10]
	0x0361BF7C CSET W0, EQ
	0x0361BF80 LDR X30, [X31], #0x20
	0x0361BF84 RET
	0x0361BF88 ADRP X0, 0xB20000
	0x0361BF8C LDR X0, [X0 + 0x150]
	0x0361BF90 BL 0x1C16D08
	0x0361BF94 MOV X1, X31
	0x0361BF98 BL 0x320A1E4
	0x0361BF9C MOV X19, X0
	0x0361BFA0 ADRP X0, 0xAD8000
	0x0361BFA4 LDR X0, [X0 + 0x5B0]
	0x0361BFA8 BL 0x1C16D08
	0x0361BFAC BL 0x1C16F10
	0x0361BFB0 MOV X1, X19
	0x0361BFB4 MOV X2, X31
	0x0361BFB8 MOV X20, X0
	0x0361BFBC BL 0x337DF1C
	0x0361BFC0 ADRP X0, 0xB20000
	0x0361BFC4 LDR X0, [X0 + 0x190]
	0x0361BFC8 BL 0x1C16D08
	0x0361BFCC MOV X1, X0
	0x0361BFD0 MOV X0, X20
	0x0361BFD4 BL 0x1C16DEC
	0x0361BFD8 STR X30, [X31 - 0x20]!
	0x0361BFDC STP X20, X19, [X31 + 0x10]
	0x0361BFE0 LDR X8, [X0 + 0x20]
	0x0361BFE4 CBZ X8, 0x361C008
	0x0361BFE8 MOV W1, W31
	0x0361BFEC MOV X19, X0
	0x0361BFF0 BL 0x3619254
	0x0361BFF4 LDRB W8, [X19 + 0x32]
	0x0361BFF8 LDP X20, X19, [X31 + 0x10]
	0x0361BFFC UBFM W0, W8, 0x6, 0x6
	0x0361C000 LDR X30, [X31], #0x20
	0x0361C004 RET
	0x0361C008 ADRP X0, 0xB1F000
	0x0361C00C LDR X0, [X0 + 0x150]
	0x0361C010 BL 0x1C16D08
	0x0361C014 MOV X1, X31
	0x0361C018 BL 0x320A1E4
	0x0361C01C MOV X19, X0
	0x0361C020 ADRP X0, 0xAD7000
	0x0361C024 LDR X0, [X0 + 0x5B0]
	0x0361C028 BL 0x1C16D08
	0x0361C02C BL 0x1C16F10
	0x0361C030 MOV X1, X19
	0x0361C034 MOV X2, X31
	0x0361C038 MOV X20, X0
	0x0361C03C BL 0x337DF1C
	0x0361C040 ADRP X0, 0xB1F000
	0x0361C044 LDR X0, [X0 + 0x198]
	0x0361C048 BL 0x1C16D08
	0x0361C04C MOV X1, X0
	0x0361C050 MOV X0, X20
	0x0361C054 BL 0x1C16DEC
	0x0361C058 STR X30, [X31 - 0x20]!
	0x0361C05C STP X20, X19, [X31 + 0x10]
	0x0361C060 LDR X8, [X0 + 0x20]
	0x0361C064 CBZ X8, 0x361C0CC
	0x0361C068 MOVZ W1, 0x30
	0x0361C06C MOVZ W2, 0x1
	0x0361C070 MOV X19, X0
	0x0361C074 BL 0x3620B04
	0x0361C078 LDRB W8, [X19 + 0x33]
	0x0361C07C MOV X19, X0
	0x0361C080 TBZ X8, 0x3, 0x361C0BC
	0x0361C084 CBZ X19, 0x361C11C
	0x0361C088 MOV X0, X19
	0x0361C08C MOV W1, W31
	0x0361C090 MOV X2, X31
	0x0361C094 BL 0x3222A1C
	0x0361C098 AND W8, W0, 0xFFFF
	0x0361C09C CMP W8, 0x2F
	0x0361C0A0 B.NE 0x361C0BC
	0x0361C0A4 MOV X0, X19
	0x0361C0A8 LDP X20, X19, [X31 + 0x10]
	0x0361C0AC MOVZ W1, 0x1
	0x0361C0B0 MOV X2, X31
	0x0361C0B4 LDR X30, [X31], #0x20
	0x0361C0B8 B 0x322B484
	0x0361C0BC MOV X0, X19
	0x0361C0C0 LDP X20, X19, [X31 + 0x10]
	0x0361C0C4 LDR X30, [X31], #0x20

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X22, 0xDC6000
	011 Move W8, [X22+1183]
	012 Move W21, W2
	013 Move X19, X1
	014 Move X20, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {57}
	019 Move X0, 0xAE2000
	020 Move X0, [X0+2264]
	021 Call 0x1C17CF4
	022 Move X0, 0xAD9000
	023 Move X0, [X0+2760]
	024 Call 0x1C17CF4
	025 Move X0, 0xADB000
	026 Move X0, [X0+632]
	027 Call 0x1C17CF4
	028 Move X0, 0xADB000
	029 Move X0, [X0+2600]
	030 Call 0x1C17CF4
	031 Move X0, 0xB21000
	032 Move X0, [X0+192]
	033 Call 0x1C17CF4
	034 Move X0, 0xB21000
	035 Move X0, [X0+200]
	036 Call 0x1C17CF4
	037 Move X0, 0xADA000
	038 Move X0, [X0+3784]
	039 Call 0x1C17CF4
	040 Move X0, 0xAE2000
	041 Move X0, [X0+2440]
	042 Call 0x1C17CF4
	043 Move X0, 0xB21000
	044 Move X0, [X0+208]
	045 Call 0x1C17CF4
	046 Move X0, 0xAD9000
	047 Move X0, [X0+3784]
	048 Call 0x1C17CF4
	049 Move X0, 0xAD9000
	050 Move X0, [X0+2120]
	051 Call 0x1C17CF4
	052 Move X0, 0xB0D000
	053 Move X0, [X0+1192]
	054 Call 0x1C17CF4
	055 Move W8, 1
	056 Move [X22+1183], W8
	057 Compare X19, 0
	058 JumpIfEqual {603}
	059 Move X0, X19
	060 Move W1, W31
	061 Move X2, X31
	062 Call String.get_Chars, X0, X1
	063 Compare X20, 0
	064 JumpIfEqual {603}
	065 Move W8, [X20+51]
	066 Move W22, W0
	067 Move TEMP, X8
	068 And TEMP, TEMP, 8
	069 Compare TEMP, 8
	070 JumpIfNotEqual {133}
	071 And W8, W22, 0xFFFF
	072 NotImplemented "Instruction CMP not yet implemented."
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Move W8, [X19+16]
	075 NotImplemented "Instruction CMP not yet implemented."
	076 Move X0, X20
	077 Call Uri.get_OriginalStringSwitched, X0
	078 And W31, W0, 1
	079 Move W8, 16
	080 Move W9, 24
	081 NotImplemented "Instruction CSEL not yet implemented."
	082 Move X0, [X20]
	083 Compare X0, 0
	084 JumpIfEqual {603}
	085 Move W1, 58
	086 Move X2, X31
	087 Call String.IndexOf, X0, X1
	088 Move X22, [X20+48]
	089 Move W21, W0
	090 Move X0, X20
	091 Call Uri.get_OriginalStringSwitched, X0
	092 And W31, W0, 1
	093 Move W8, 16
	094 Move W9, 24
	095 NotImplemented "Instruction CSEL not yet implemented."
	096 Move X0, [X20]
	097 Compare X0, 0
	098 JumpIfEqual {603}
	099 Add W2, W21, 1
	100 Move TEMP, X22
	101 And TEMP, TEMP, 0x20000000
	102 Compare TEMP, 0x20000000
	103 JumpIfEqual {118}
	104 Move W1, 58
	105 Move X3, X31
	106 Call String.IndexOf, X0, X1, X2
	107 Move W21, W0
	108 Move X0, X20
	109 Call Uri.get_OriginalStringSwitched, X0
	110 And W31, W0, 1
	111 Move W8, 16
	112 Move W9, 24
	113 NotImplemented "Instruction CSEL not yet implemented."
	114 Move X0, [X20]
	115 Compare X0, 0
	116 JumpIfEqual {603}
	117 Add W2, W21, 1
	118 Move W1, W31
	119 Move X3, X31
	120 Call String.Substring, X0, X1, X2
	121 Move W1, 1
	122 Move X0, X19
	123 Move X2, X31
	124 Call String.get_Chars, X0, X1
	125 And W8, W0, 0xFFFF
	126 NotImplemented "Instruction CMP not yet implemented."
	127 Move W1, 1
	128 Move X0, X19
	129 Move X2, X31
	130 Call String.get_Chars, X0, X1
	131 And W8, W0, 0xFFFF
	132 NotImplemented "Instruction CMP not yet implemented."
	133 Move X25, 0xADB000
	134 Move X25, [X25+2600]
	135 Move X23, [X20+32]
	136 Move X0, [X25]
	137 Move W8, [X0+224]
	138 Compare W8, 0
	139 JumpIfNotEqual {141}
	140 Call 0x1C17DFC
	141 Compare X23, 0
	142 JumpIfEqual {603}
	143 Move W1, 0x2000
	144 Move X0, X23
	145 Move X2, X31
	146 Call UriParser.InFact, X0, X1
	147 Move TEMP, X0
	148 And TEMP, TEMP, 1
	149 Compare TEMP, 1
	150 JumpIfNotEqual {175}
	151 And W8, W22, 0xFFFF
	152 NotImplemented "Instruction CMP not yet implemented."
	153 NotImplemented "Instruction CMP not yet implemented."
	154 Move W8, [X19+16]
	155 NotImplemented "Instruction CMP not yet implemented."
	156 Move W1, 1
	157 Move X0, X19
	158 Move X2, X31
	159 Call String.get_Chars, X0, X1
	160 And W8, W0, 0xFFFF
	161 NotImplemented "Instruction CMP not yet implemented."
	162 Move W1, 1
	163 Move X0, X19
	164 Move X2, X31
	165 Call String.get_Chars, X0, X1
	166 And W8, W0, 0xFFFF
	167 NotImplemented "Instruction CMP not yet implemented."
	168 Move W8, [X20+51]
	169 Move TEMP, X8
	170 And TEMP, TEMP, 32
	171 Compare TEMP, 32
	172 JumpIfEqual {575}
	173 Move X8, 0xB21000
	174 Move X8, [X8+208]
	175 Move X0, [X20+32]
	176 Compare X0, 0
	177 JumpIfEqual {603}
	178 Move W1, 0x400000
	179 Move X2, X31
	180 Call UriParser.InFact, X0, X1
	181 And W8, W22, 0xFFFF
	182 NotImplemented "Instruction CMP not yet implemented."
	183 NotImplemented "Instruction CSET not yet implemented."
	184 NotImplemented "Instruction CMP not yet implemented."
	185 And W23, W9, W0
	186 Compare W23, 0
	187 JumpIfNotEqual {226}
	188 Move X8, [X20+48]
	189 Move W9, 8
	190 NotImplemented "Instruction MOVK not yet implemented."
	191 Move W10, 2
	192 And X31, X8, 0x3FFFFFFF
	193 NotImplemented "Instruction CSEL not yet implemented."
	194 Add W1, W9, 8
	195 Move X0, X20
	196 Call Uri.GetComponents, X0, X1, X2
	197 Compare X0, 0
	198 JumpIfEqual {603}
	199 Move X9, 0xAE2000
	200 Move W23, [X0+16]
	201 Move W8, [X19+16]
	202 Move X9, [X9+2264]
	203 Move X24, X0
	204 Add W1, W8, W23
	205 Move X0, [X9]
	206 Call 0x1C17D6C
	207 NotImplemented "Instruction CMP not yet implemented."
	208 Move X22, X0
	209 Move X0, X24
	210 Move W1, W31
	211 Move X2, X22
	212 Move W3, W31
	213 Move W4, W23
	214 Move X5, X31
	215 Call String.CopyTo, X0, X1, X2, X3, X4
	216 NotImplemented "Instruction CMP not yet implemented."
	217 Compare X22, 0
	218 JumpIfEqual {603}
	219 Move W8, [X22+24]
	220 Subtract W23, W23, 1
	221 NotImplemented "Instruction CMP not yet implemented."
	222 Add X8, X22, W23
	223 NotImplemented "Instruction LDRH not yet implemented."
	224 NotImplemented "Instruction CMP not yet implemented."
	225 Add W23, W23, 1
	226 Move W8, [X19+16]
	227 NotImplemented "Instruction CMP not yet implemented."
	228 Move W1, 1
	229 Move X0, X19
	230 Move X2, X31
	231 Call String.get_Chars, X0, X1
	232 And W8, W0, 0xFFFF
	233 NotImplemented "Instruction CMP not yet implemented."
	234 Move X0, X20
	235 Call Uri.get_Scheme, X0
	236 Move X8, 0xAE2000
	237 Move X8, [X8+2440]
	238 Move X1, [X8]
	239 Move X8, [X20+48]
	240 And X8, X8, 0x7FFFF
	241 NotImplemented "Instruction CMP not yet implemented."
	242 Move X8, 0xAD9000
	243 Move X8, [X8+2760]
	244 Move W1, 5
	245 Move X0, [X8]
	246 Call 0x1C17D6C
	247 Move X22, X0
	248 Move W1, 3
	249 Move X0, X20
	250 Move W2, W21
	251 Call Uri.GetComponents, X0, X1, X2
	252 Compare X22, 0
	253 JumpIfEqual {603}
	254 Move W8, [X22+24]
	255 Compare W8, 0
	256 JumpIfEqual {604}
	257 NotImplemented "Instruction CMP not yet implemented."
	258 Move [X22+32], X0
	259 Move X8, 0xAD9000
	260 Move X8, [X8+3784]
	261 Move X0, X20
	262 Move X8, [X8]
	263 Move [X22+40], X8
	264 Call Uri.get_DnsSafeHost, X0
	265 Move W8, [X22+24]
	266 NotImplemented "Instruction CMP not yet implemented."
	267 NotImplemented "Instruction CMP not yet implemented."
	268 Move [X22+48], X0
	269 Move X8, 0xAD9000
	270 Move X8, [X8+2120]
	271 Move W1, 8
	272 NotImplemented "Instruction MOVK not yet implemented."
	273 Move X0, X20
	274 Move X8, [X8]
	275 Move W2, W21
	276 Move [X22+56], X8
	277 Call Uri.GetComponents, X0, X1, X2
	278 Move W8, [X22+24]
	279 NotImplemented "Instruction CMP not yet implemented."
	280 Move [X22+64], X0
	281 Move X0, X22
	282 Move X1, X31
	283 Call String.Concat, X0
	284 Move X0, X20
	285 Call Uri.get_IsUnc, X0
	286 Move TEMP, X0
	287 And TEMP, TEMP, 1
	288 Compare TEMP, 1
	289 JumpIfNotEqual {402}
	290 Move W8, 8
	291 NotImplemented "Instruction MOVK not yet implemented."
	292 Add W1, W8, 8
	293 Move W2, 2
	294 Move X0, X20
	295 Call Uri.GetComponents, X0, X1, X2
	296 Compare X0, 0
	297 JumpIfEqual {603}
	298 Move W8, [X0+16]
	299 Move X22, X0
	300 NotImplemented "Instruction CMP not yet implemented."
	301 Move W23, 1
	302 Move X0, X22
	303 Move W1, W23
	304 Move X2, X31
	305 Call String.get_Chars, X0, X1
	306 And W8, W0, 0xFFFF
	307 NotImplemented "Instruction CMP not yet implemented."
	308 Move W8, [X22+16]
	309 Add W23, W23, 1
	310 NotImplemented "Instruction CMP not yet implemented."
	311 Move W1, 15
	312 Move X0, X20
	313 Move W2, W21
	314 Call Uri.GetComponents, X0, X1, X2
	315 Move X20, X0
	316 Compare W23, 0
	317 JumpIfEqual {330}
	318 Move W1, 1
	319 Move X0, X19
	320 Move X2, X31
	321 Call String.Substring, X0, X1
	322 Move X8, 0xADA000
	323 Move X8, [X8+3784]
	324 Move X1, X0
	325 Move X2, X31
	326 Move X8, [X8]
	327 Move X0, X8
	328 Call String.Concat, X0, X1
	329 Move X19, X0
	330 Move X0, X20
	331 Move W23, W31
	332 Move W4, [X19+16]
	333 Move X0, X19
	334 Move W1, W31
	335 Move X2, X22
	336 Move W3, W23
	337 Move X5, X31
	338 Call String.CopyTo, X0, X1, X2, X3, X4
	339 Move X0, [X20+32]
	340 Compare X0, 0
	341 JumpIfEqual {603}
	342 Move W1, 32
	343 Move X2, X31
	344 Call UriParser.InFact, X0, X1
	345 Move W9, [X20+51]
	346 And W31, W0, 1
	347 Move W8, 0xFFFF
	348 Move W10, 63
	349 Move W24, W0
	350 NotImplemented "Instruction CSEL not yet implemented."
	351 Move TEMP, X9
	352 And TEMP, TEMP, 32
	353 Compare TEMP, 32
	354 JumpIfEqual {366}
	355 Move X0, [X20+32]
	356 Compare X0, 0
	357 JumpIfEqual {603}
	358 Move W1, 64
	359 Move X2, X31
	360 Call UriParser.InFact, X0, X1
	361 And W31, W0, 1
	362 Move W8, 0xFFFF
	363 Move W9, 35
	364 Xor W11, W0, 1
	365 NotImplemented "Instruction CSEL not yet implemented."
	366 Move W11, 1
	367 Move X9, 0xADB000
	368 Move X9, [X9+632]
	369 Move W10, [X19+16]
	370 NotImplemented "Instruction ORN not yet implemented."
	371 Move X9, [X9]
	372 Move X9, [X9+184]
	373 Move X9, [X9]
	374 Move TEMP, X11
	375 And TEMP, TEMP, 1
	376 Compare TEMP, 1
	377 JumpIfNotEqual {401}
	378 NotImplemented "Instruction CMP not yet implemented."
	379 Compare X22, 0
	380 JumpIfEqual {603}
	381 Move W11, [X22+24]
	382 Move W12, W23
	383 Move X24, X31
	384 Move X10, W10
	385 Move X13, X12
	386 ShiftRight X13, 32
	387 And X13, X13, 0x7FFFFFFF
	388 Move X14, 1
	389 Add X15, X12, X24
	390 NotImplemented "Instruction CMP not yet implemented."
	391 Add X15, X22, X13
	392 NotImplemented "Instruction LDRH not yet implemented."
	393 NotImplemented "Instruction CMP not yet implemented."
	394 NotImplemented "Instruction CMP not yet implemented."
	395 Add X24, X24, 1
	396 NotImplemented "Instruction CMP not yet implemented."
	397 Add X13, X13, X14
	398 Compare W24, 0
	399 JumpIfEqual {416}
	400 Move W10, W24
	401 Move X19, X9
	402 Move X8, 0xB21000
	403 Move X8, [X8+192]
	404 Move X0, [X8]
	405 Move X1, X19
	406 Move X2, X31
	407 Call String.Concat, X0, X1
	408 Compare W24, 0
	409 JumpIfEqual {416}
	410 Move X0, X19
	411 Move W1, W24
	412 Move X2, X31
	413 Call String.Substring, X0, X1
	414 Move X19, X0
	415 Move W10, W24
	416 Move W10, W31
	417 Add W8, W10, W23
	418 Move [X31+12], W8
	419 Move X8, [X20+48]
	420 And X9, X8, 0x7FFFF
	421 NotImplemented "Instruction CMP not yet implemented."
	422 Move TEMP, X8
	423 And TEMP, TEMP, 0x20000000
	424 Compare TEMP, 0x20000000
	425 JumpIfEqual {475}
	426 Move X8, 0xAD9000
	427 Move X8, [X8+2760]
	428 Move W1, 5
	429 Move X0, [X8]
	430 Call 0x1C17D6C
	431 Move X23, X0
	432 Move W1, 3
	433 Move X0, X20
	434 Move W2, W21
	435 Call Uri.GetComponents, X0, X1, X2
	436 Compare X23, 0
	437 JumpIfEqual {603}
	438 Move W8, [X23+24]
	439 Compare W8, 0
	440 JumpIfEqual {604}
	441 NotImplemented "Instruction CMP not yet implemented."
	442 Move [X23+32], X0
	443 Move X8, 0xAD9000
	444 Move X8, [X8+3784]
	445 Move X0, X20
	446 Move X8, [X8]
	447 Move [X23+40], X8
	448 Call Uri.get_DnsSafeHost, X0
	449 Move W8, [X23+24]
	450 NotImplemented "Instruction CMP not yet implemented."
	451 NotImplemented "Instruction CMP not yet implemented."
	452 Move [X23+48], X0
	453 Move X8, 0xAD9000
	454 Move X8, [X8+2120]
	455 Move W1, 8
	456 NotImplemented "Instruction MOVK not yet implemented."
	457 Move X0, X20
	458 Move X8, [X8]
	459 Move W2, W21
	460 Move [X23+56], X8
	461 Call Uri.GetComponents, X0, X1, X2
	462 Move W8, [X23+24]
	463 NotImplemented "Instruction CMP not yet implemented."
	464 Move [X23+64], X0
	465 Move X0, X23
	466 Move X1, X31
	467 Call String.Concat, X0
	468 Move TEMP, X8
	469 And TEMP, TEMP, 0x20000000
	470 Compare TEMP, 0x20000000
	471 JumpIfEqual {487}
	472 Move W1, 15
	473 Move X0, X20
	474 Move W2, W21
	475 Move X0, X20
	476 Call Uri.get_DnsSafeHost, X0
	477 Move X8, 0xB21000
	478 Move X8, [X8+200]
	479 Move X9, 0xAD9000
	480 Move X9, [X9+2120]
	481 Move X1, X0
	482 Move X8, [X8]
	483 Move X3, X31
	484 Move X2, [X9]
	485 Move X0, X8
	486 Call String.Concat, X0, X1, X2
	487 Move X0, [X25]
	488 Move W8, [X0+224]
	489 Compare W8, 0
	490 JumpIfNotEqual {493}
	491 Call 0x1C17DFC
	492 Move X0, [X25]
	493 Move X8, [X0+184]
	494 Move W8, [X8+114]
	495 Compare W8, 0
	496 JumpIfEqual {513}
	497 Move W8, [X20+51]
	498 Move TEMP, X8
	499 And TEMP, TEMP, 8
	500 Compare TEMP, 8
	501 JumpIfEqual {586}
	502 Move W1, 4
	503 Move W2, 2
	504 Move X0, X20
	505 Call Uri.GetComponents, X0, X1, X2
	506 Move X8, 0xB0D000
	507 Move X8, [X8+1192]
	508 Move X1, X0
	509 Move X2, X31
	510 Move X8, [X8]
	511 Move X0, X8
	512 Call String.Concat, X0, X1
	513 Move W1, 4
	514 Move W2, 2
	515 Move X0, X20
	516 Call Uri.GetComponents, X0, X1, X2
	517 Move X21, X0
	518 Move X0, X20
	519 Call Uri.get_SecuredPathIndex, X0
	520 Move X8, [X25]
	521 Move X20, [X20+32]
	522 Move W23, W0
	523 Move W9, [X8+224]
	524 Compare W9, 0
	525 JumpIfNotEqual {528}
	526 Move X0, X8
	527 Call 0x1C17DFC
	528 Add X2, X31, 12
	529 Move X0, X22
	530 Move W1, W23
	531 Move X3, X20
	532 Call Uri.Compress, X0, X1, X2, X3
	533 Move W3, [X31+12]
	534 Move X0, X31
	535 Move X1, X22
	536 Move W2, W31
	537 Move X4, X31
	538 Call String.CreateString, X0, X1, X2, X3
	539 Move X1, X0
	540 Move X0, X21
	541 Move X2, X19
	542 Move X3, X31
	543 Call String.Concat, X0, X1, X2
	544 Move X0, X22
	545 Move W1, W31
	546 Move W2, W23
	547 Move X3, X31
	548 Call String.Substring, X0, X1, X2
	549 Move X22, X0
	550 Move W8, [X20+51]
	551 Move TEMP, X8
	552 And TEMP, TEMP, 32
	553 Compare TEMP, 32
	554 JumpIfEqual {561}
	555 Move W1, 4
	556 Move X0, X20
	557 Move W2, W21
	558 Call Uri.GetComponents, X0, X1, X2
	559 Move X8, 0xB20000
	560 Move X8, [X8+192]
	561 Move W1, 4
	562 Move W2, 2
	563 Move X0, X20
	564 Call Uri.GetComponents, X0, X1, X2
	565 Move X8, 0xB0C000
	566 Move X8, [X8+1192]
	567 Move X8, [X8]
	568 Move X1, X0
	569 Move X2, X22
	570 Move X3, X19
	571 Move X0, X8
	572 Move X4, X31
	573 Call String.Concat, X0, X1, X2, X3
	574 Move X19, X0
	575 Move X0, X19
	576 Move X20, [X31+64]
	577 Move X19, [X31+72]
	578 Move X22, [X31+48]
	579 Move X21, [X31+56]
	580 Move X24, [X31+32]
	581 Move X23, [X31+40]
	582 Move X26, [X31+16]
	583 Move X25, [X31+24]
	584 Move X30, [X31+80]
	585 Return X0
	586 Move W8, [X0+224]
	587 Move X20, [X20+32]
	588 Compare W8, 0
	589 JumpIfNotEqual {591}
	590 Call 0x1C17DFC
	591 Add X2, X31, 12
	592 Move W1, 3
	593 Move X0, X22
	594 Move X3, X20
	595 Call Uri.Compress, X0, X1, X2, X3
	596 Move W8, [X31+12]
	597 Move W2, 1
	598 Move X0, X31
	599 Move X1, X22
	600 Subtract W3, W8, 1
	601 Move X4, X31
	602 Call String.CreateString, X0, X1, X2, X3
	603 Call 0x1C17F20
	604 Call 0x1C17F28

Method: System.Boolean get_HasAuthority()

Disassembly:
	0x0362469C LDR X0, [X0 + 0x48]
	0x036246A0 BL 0x1C16CF4
	0x036246A4 ADRP X0, 0xAD1000

ISIL:
	001 Move W8, [X0+50]
	002 Move W0, W8
	003 ShiftRight W0, 4
	004 And W0, W0, 15
	005 Return X0

Method: System.Boolean IsLWS(System.Char ch)

Disassembly:
	0x036201C8 BL 0x361F200
	0x036201CC LDR W21, [X20 + 0x10]
	0x036201D0 AND W8, W0, 0xFFFF
	0x036201D4 CMP W8, W21, UXTH
	0x036201D8 B.EQ 0x36201E8
	0x036201DC LDR X8, [X31 + 0x18]
	0x036201E0 ORR X8, X8, 0x7FFFF
	0x036201E4 STR X8, [X31 + 0x18]
	0x036201E8 LDR W8, [X31 + 0x2C]
	0x036201EC CBNZ W8, 0x3620200
	0x036201F0 LDR W8, [X31 + 0x18]
	0x036201F4 ORN W8, W31, W8, 0x0
	0x036201F8 ANDS X31, X8, 0x7FFFF
	0x036201FC B.NE 0x3620320

ISIL:
	001 And W8, W0, 0xFFFF
	002 NotImplemented "Instruction CMP not yet implemented."
	003 Subtract W8, W0, 9
	004 And W9, W8, 0xFFFF
	005 NotImplemented "Instruction CMP not yet implemented."
	006 Move W9, 19
	007 NotImplemented "Instruction MOVK not yet implemented."
	008 NotImplemented "Instruction LSRV not yet implemented."
	009 And W0, W8, 1
	010 Return X0
	011 Move W0, W31
	012 Return X0

Method: System.Boolean IsAsciiLetter(System.Char character)

Disassembly:
	0x0361E640 CMP W8, W24, UXTH
	0x0361E644 B.CC 0x361E600
	0x0361E648 MOV W20, W24
	0x0361E64C MOV W8, W24
	0x0361E650 MOV W22, W24
	0x0361E654 MOV W25, W27
	0x0361E658 MOV X27, X28
	0x0361E65C B 0x361E6DC
	0x0361E660 MOV W20, W31
	0x0361E664 MOV W19, W31
	0x0361E668 B 0x361E678

ISIL:
	001 Subtract W8, W0, 97
	002 And W8, W8, 0xFFFF
	003 NotImplemented "Instruction CMP not yet implemented."
	004 Move W0, 1
	005 Return X0
	006 Subtract W8, W0, 65
	007 And W8, W8, 0xFFFF
	008 NotImplemented "Instruction CMP not yet implemented."
	009 NotImplemented "Instruction CSET not yet implemented."
	010 Return X0

Method: System.Boolean IsAsciiLetterOrDigit(System.Char character)

Disassembly:
	0x0361E66C MOV W20, W19
	0x0361E670 MOV W25, W27
	0x0361E674 MOV X27, X28
	0x0361E678 AND W8, W20, 0xFFFF
	0x0361E67C CMP W8, W24, UXTH
	0x0361E680 B.CS 0x361E698
	0x0361E684 MOV W8, W20
	0x0361E688 AND X8, X8, 0xFFFF
	0x0361E68C LDRH W8, [X21, X8, LSL #1]
	0x0361E690 CMP W8, 0x3A
	0x0361E694 B.NE 0x361E6A8
	0x0361E698 MOV W23, W19
	0x0361E69C MOV W28, W20
	0x0361E6A0 MOV W22, W20
	0x0361E6A4 B 0x361E6E0
	0x0361E6A8 MOV W22, W20
	0x0361E6AC ADD W22, W22, 0x1
	0x0361E6B0 AND W8, W22, 0xFFFF
	0x0361E6B4 CMP W8, W24, UXTH
	0x0361E6B8 B.CS 0x361E6D8
	0x0361E6BC AND X8, X22, 0xFFFF
	0x0361E6C0 LDRH W8, [X21, X8, LSL #1]
	0x0361E6C4 CMP W8, 0x3A
	0x0361E6C8 B.NE 0x361E6AC
	0x0361E6CC MOV W23, W19
	0x0361E6D0 MOV W28, W22
	0x0361E6D4 B 0x361E6E0
	0x0361E6D8 MOV W23, W19
	0x0361E6DC MOV W28, W24
	0x0361E6E0 MOV X0, X31
	0x0361E6E4 BL 0x33C67AC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xDC3000
	006 Move X21, 0xAD8000
	007 Move W8, [X20+1184]
	008 Move X21, [X21+2600]
	009 Move W19, W0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xAD8000
	015 Move X0, [X0+2600]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1184], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 And W8, W19, 0xFFFFFFDF
	025 Subtract W8, W8, 65
	026 And W8, W8, 0xFFFF
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Move W0, 1
	029 Subtract W8, W19, 48
	030 And W8, W8, 0xFFFF
	031 NotImplemented "Instruction CMP not yet implemented."
	032 NotImplemented "Instruction CSET not yet implemented."
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move X30, [X31+32]
	036 Move X21, [X31+40]
	037 Return X0

Method: System.Boolean IsBidiControlCharacter(System.Char ch)

Disassembly:
	0x036246A8 LDR X0, [X0 + 0xA28]
	0x036246AC BL 0x1C16CF4
	0x036246B0 MOVZ W8, 0x1
	0x036246B4 STRB W8, [X20 + 0x4AA]
	0x036246B8 LDRB W8, [X19 + 0x33]
	0x036246BC TBNZ X8, 0x0, 0x3624A24
	0x036246C0 LDR X20, [X19 + 0x10]
	0x036246C4 CBZ X20, 0x36246D4
	0x036246C8 MOV X0, X31
	0x036246CC BL 0x32C1424
	0x036246D0 ADD X20, X20, W0, SXTW
	0x036246D4 STRH W31, [X31 + 0xC]

ISIL:
	001 Move TEMP, 0x200D
	002 Not TEMP
	003 Move W8, TEMP
	004 Add W8, W0, W8
	005 And W9, W8, 0xFFFF
	006 NotImplemented "Instruction CMP not yet implemented."
	007 Or X9, X31, 0x1FFFFFFFF
	008 NotImplemented "Instruction MOVK not yet implemented."
	009 NotImplemented "Instruction LSRV not yet implemented."
	010 And W0, W8, 1
	011 Return X0
	012 Move W0, W31
	013 Return X0

Method: System.String StripBidiControlCharacter(System.Char* strToClean, System.Int32 start, System.Int32 length)

Disassembly:
	0x03624288 LDP X22, X21, [X31 + 0x20]
	0x0362428C LDP X30, X23, [X31 + 0x10]
	0x03624290 AND W0, W0, 0x1
	0x03624294 ADD X31, X31, 0x40
	0x03624298 RET
	0x0362429C BL 0x1C16F20
	0x036242A0 SUB X31, X31, 0x40
	0x036242A4 STR X30, [X31 + 0x10]
	0x036242A8 STP X22, X21, [X31 + 0x20]
	0x036242AC STP X20, X19, [X31 + 0x30]
	0x036242B0 ADRP X22, 0xDBC000
	0x036242B4 LDRB W8, [X22 + 0x4A8]
	0x036242B8 MOV X19, X2
	0x036242BC MOV X20, X1
	0x036242C0 MOV X21, X0
	0x036242C4 TBNZ X8, 0x0, 0x36242DC
	0x036242C8 ADRP X0, 0xAD1000
	0x036242CC LDR X0, [X0 + 0xA28]
	0x036242D0 BL 0x1C16CF4
	0x036242D4 MOVZ W8, 0x1
	0x036242D8 STRB W8, [X22 + 0x4A8]
	0x036242DC MOV W0, W31
	0x036242E0 STR X31, [X31 + 0x18]
	0x036242E4 STR X31, [X19]
	0x036242E8 CBZ X21, 0x362437C
	0x036242EC CBZ X20, 0x362437C
	0x036242F0 LDR X0, [X21 + 0x20]
	0x036242F4 CBZ X0, 0x362437C
	0x036242F8 MOV X1, X31
	0x036242FC STR X31, [X31 + 0x8]
	0x03624300 BL 0x362CE34
	0x03624304 TBZ X0, 0x0, 0x362434C
	0x03624308 ADRP X9, 0xAD1000
	0x0362430C LDR W8, [X20 + 0x30]
	0x03624310 LDR X9, [X9 + 0xA28]
	0x03624314 UBFM W8, W8, 0x13, 0x13
	0x03624318 LDR X0, [X9]
	0x0362431C STRB W8, [X31 + 0x4]
	0x03624320 LDR W8, [X0 + 0xE0]
	0x03624324 CBNZ W8, 0x362432C
	0x03624328 BL 0x1C16DFC
	0x0362432C ADD X2, X31, 0x8
	0x03624330 ADD X3, X31, 0x4
	0x03624334 ADD X4, X31, 0x18
	0x03624338 MOV X0, X21
	0x0362433C MOV X1, X20
	0x03624340 BL 0x3619BBC
	0x03624344 STR X0, [X19]
	0x03624348 B 0x3624370
	0x0362434C STRB W31, [X31 + 0x4]
	0x03624350 LDR X0, [X21 + 0x20]
	0x03624354 CBZ X0, 0x3624418
	0x03624358 ADD X3, X31, 0x18
	0x0362435C MOV X1, X21
	0x03624360 MOV X2, X20
	0x03624364 MOV X4, X31
	0x03624368 BL 0x362CE90
	0x0362436C STR X0, [X31 + 0x8]
	0x03624370 LDR X8, [X31 + 0x18]
	0x03624374 CBZ X8, 0x3624390
	0x03624378 MOV W0, W31
	0x0362437C LDP X20, X19, [X31 + 0x30]
	0x03624380 LDP X22, X21, [X31 + 0x20]
	0x03624384 LDR X30, [X31 + 0x10]
	0x03624388 ADD X31, X31, 0x40
	0x0362438C RET
	0x03624390 LDR X20, [X19]
	0x03624394 CBZ X20, 0x36243CC
	0x03624398 ADRP X8, 0xAD1000
	0x0362439C LDR X8, [X8 + 0xA28]
	0x036243A0 LDR X0, [X8]
	0x036243A4 LDR W8, [X0 + 0xE0]
	0x036243A8 CBNZ W8, 0x36243B0
	0x036243AC BL 0x1C16DFC
	0x036243B0 CBZ X20, 0x3624378
	0x036243B4 LDR X8, [X19]
	0x036243B8 CBZ X8, 0x3624418
	0x036243BC LDR X8, [X8 + 0x20]
	0x036243C0 CMP X8, 0x0
	0x036243C4 CSET W0, NE
	0x036243C8 B 0x362437C
	0x036243CC ADRP X8, 0xAD1000
	0x036243D0 LDR X8, [X8 + 0xA28]
	0x036243D4 LDR X20, [X31 + 0x8]
	0x036243D8 LDRB W21, [X31 + 0x4]
	0x036243DC LDR X0, [X8]
	0x036243E0 LDR W8, [X0 + 0xE0]
	0x036243E4 CBNZ W8, 0x36243EC

ISIL:
	001 Move [X31-96], X30
	002 Move [X31+16], X28
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X21, 0xDBD000
	013 Move W8, [X21+1185]
	014 Move W23, W2
	015 Move W19, W1
	016 Move X20, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {32}
	021 Move X0, 0xAD9000
	022 Move X0, [X0+2264]
	023 Call 0x1C17CF4
	024 Move X0, 0xAD2000
	025 Move X0, [X0+2600]
	026 Call 0x1C17CF4
	027 Move X0, 0xAD0000
	028 Move X0, [X0+2440]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X21+1185], W8
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move X8, 0xAD9000
	034 Move X8, [X8+2264]
	035 Move X24, 0xAD2000
	036 Move W1, W23
	037 Move X0, [X8]
	038 Move X24, [X24+2600]
	039 Call 0x1C17D6C
	040 Or X27, X31, 0x1FFFFFFFF
	041 Move X21, X0
	042 Move W22, W31
	043 Move W23, W23
	044 Move TEMP, 0x200D
	045 Not TEMP
	046 Move W25, TEMP
	047 Move W26, 1
	048 NotImplemented "Instruction MOVK not yet implemented."
	049 NotImplemented "Instruction LDRH not yet implemented."
	050 Add W8, W28, W25
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Compare X21, 0
	053 JumpIfEqual {103}
	054 Move W8, [X21+24]
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Add X8, X21, W22
	057 Add W22, W22, 1
	058 NotImplemented "Instruction STRH not yet implemented."
	059 Move X0, [X24]
	060 Move W8, [X0+224]
	061 Compare W8, 0
	062 JumpIfNotEqual {64}
	063 Call 0x1C17DFC
	064 Add W8, W28, W25
	065 NotImplemented "Instruction CMP not yet implemented."
	066 NotImplemented "Instruction LSLV not yet implemented."
	067 And X31, X8, X27
	068 Subtract X23, X23, 1
	069 Add W19, W19, 1
	070 Move X1, X21
	071 Move W3, W22
	072 Move X20, [X31+80]
	073 Move X19, [X31+88]
	074 Move X22, [X31+64]
	075 Move X21, [X31+72]
	076 Move X24, [X31+48]
	077 Move X23, [X31+56]
	078 Move X26, [X31+32]
	079 Move X25, [X31+40]
	080 Move X28, [X31+16]
	081 Move X27, [X31+24]
	082 Move X0, X31
	083 Move W2, W31
	084 Move X4, X31
	085 Move X30, [X31+96]
	086 Call String.CreateString, X0, X1, X2, X3
	087 Return X0
	088 Move X8, 0xAD0000
	089 Move X8, [X8+2440]
	090 Move X20, [X31+80]
	091 Move X19, [X31+88]
	092 Move X22, [X31+64]
	093 Move X21, [X31+72]
	094 Move X24, [X31+48]
	095 Move X23, [X31+56]
	096 Move X0, [X8]
	097 Move X26, [X31+32]
	098 Move X25, [X31+40]
	099 Move X28, [X31+16]
	100 Move X27, [X31+24]
	101 Move X30, [X31+96]
	102 Return X0
	103 Call 0x1C17F20
	104 Call 0x1C17F28

Method: System.Void CreateThis(System.String uri, System.Boolean dontEscape, System.UriKind uriKind)

Disassembly:
	0x0361A728 MOV W2, W31
	0x0361A72C MOV X4, X31
	0x0361A730 BL 0x322EAD4
	0x0361A734 LDR X8, [X21]
	0x0361A738 MOV X20, X0
	0x0361A73C LDR W9, [X8 + 0xE0]
	0x0361A740 CBNZ W9, 0x361A74C
	0x0361A744 MOV X0, X8
	0x0361A748 BL 0x1C16DFC
	0x0361A74C MOV X0, X20
	0x0361A750 MOV X1, X31
	0x0361A754 BL 0x362CB64
	0x0361A758 MOV X8, X0
	0x0361A75C MOV W0, W31
	0x0361A760 STR X8, [X19]
	0x0361A764 B 0x361A76C
	0x0361A768 MOVZ W0, 0x2
	0x0361A76C LDP X20, X19, [X31 + 0x20]
	0x0361A770 LDP X22, X21, [X31 + 0x10]
	0x0361A774 LDR X30, [X31], #0x30
	0x0361A778 RET
	0x0361A77C STP X30, X19, [X31 - 0x10]!
	0x0361A780 MOV X19, X0
	0x0361A784 BL 0x361CF60
	0x0361A788 ANDS W31, W0, 0x1
	0x0361A78C MOVZ W8, 0x10
	0x0361A790 MOVZ W9, 0x18
	0x0361A794 CSEL X8, X9, X8, NE
	0x0361A798 LDR X0, [X19, X8, LSL]
	0x0361A79C LDP X30, X19, [X31], #0x10
	0x0361A7A0 RET
	0x0361A7A4 STR X30, [X31 - 0x50]!
	0x0361A7A8 STP X26, X25, [X31 + 0x10]
	0x0361A7AC STP X24, X23, [X31 + 0x20]
	0x0361A7B0 STP X22, X21, [X31 + 0x30]
	0x0361A7B4 STP X20, X19, [X31 + 0x40]
	0x0361A7B8 ADRP X22, 0xDC6000
	0x0361A7BC LDRB W8, [X22 + 0x49F]
	0x0361A7C0 MOV W21, W2
	0x0361A7C4 MOV X19, X1
	0x0361A7C8 MOV X20, X0
	0x0361A7CC TBNZ X8, 0x0, 0x361A868
	0x0361A7D0 ADRP X0, 0xAE2000
	0x0361A7D4 LDR X0, [X0 + 0x8D8]
	0x0361A7D8 BL 0x1C16CF4
	0x0361A7DC ADRP X0, 0xAD9000
	0x0361A7E0 LDR X0, [X0 + 0xAC8]
	0x0361A7E4 BL 0x1C16CF4
	0x0361A7E8 ADRP X0, 0xADB000
	0x0361A7EC LDR X0, [X0 + 0x278]
	0x0361A7F0 BL 0x1C16CF4
	0x0361A7F4 ADRP X0, 0xADB000
	0x0361A7F8 LDR X0, [X0 + 0xA28]
	0x0361A7FC BL 0x1C16CF4
	0x0361A800 ADRP X0, 0xB21000
	0x0361A804 LDR X0, [X0 + 0xC0]
	0x0361A808 BL 0x1C16CF4
	0x0361A80C ADRP X0, 0xB21000
	0x0361A810 LDR X0, [X0 + 0xC8]
	0x0361A814 BL 0x1C16CF4
	0x0361A818 ADRP X0, 0xADA000
	0x0361A81C LDR X0, [X0 + 0xEC8]
	0x0361A820 BL 0x1C16CF4
	0x0361A824 ADRP X0, 0xAE2000
	0x0361A828 LDR X0, [X0 + 0x988]
	0x0361A82C BL 0x1C16CF4
	0x0361A830 ADRP X0, 0xB21000
	0x0361A834 LDR X0, [X0 + 0xD0]
	0x0361A838 BL 0x1C16CF4
	0x0361A83C ADRP X0, 0xAD9000
	0x0361A840 LDR X0, [X0 + 0xEC8]
	0x0361A844 BL 0x1C16CF4
	0x0361A848 ADRP X0, 0xAD9000
	0x0361A84C LDR X0, [X0 + 0x848]
	0x0361A850 BL 0x1C16CF4
	0x0361A854 ADRP X0, 0xB0D000
	0x0361A858 LDR X0, [X0 + 0x4A8]
	0x0361A85C BL 0x1C16CF4
	0x0361A860 MOVZ W8, 0x1
	0x0361A864 STRB W8, [X22 + 0x49F]
	0x0361A868 CBZ X19, 0x361B0C0
	0x0361A86C MOV X0, X19
	0x0361A870 MOV W1, W31
	0x0361A874 MOV X2, X31
	0x0361A878 BL 0x3222A1C
	0x0361A87C CBZ X20, 0x361B0C0
	0x0361A880 LDRB W8, [X20 + 0x33]
	0x0361A884 MOV W22, W0
	0x0361A888 TBZ X8, 0x3, 0x361A984
	0x0361A88C AND W8, W22, 0xFFFF
	0x0361A890 CMP W8, 0x5C
	0x0361A894 B.EQ 0x361A8A0
	0x0361A898 CMP W8, 0x2F
	0x0361A89C B.NE 0x361A984
	0x0361A8A0 LDR W8, [X19 + 0x10]
	0x0361A8A4 CMP W8, 0x1
	0x0361A8A8 B.NE 0x361A94C
	0x0361A8AC MOV X0, X20
	0x0361A8B0 BL 0x361CF60
	0x0361A8B4 ANDS W31, W0, 0x1
	0x0361A8B8 MOVZ W8, 0x10
	0x0361A8BC MOVZ W9, 0x18
	0x0361A8C0 CSEL X8, X9, X8, NE
	0x0361A8C4 LDR X0, [X20, X8, LSL]
	0x0361A8C8 CBZ X0, 0x361B0C0
	0x0361A8CC MOVZ W1, 0x3A
	0x0361A8D0 MOV X2, X31
	0x0361A8D4 BL 0x322BD98
	0x0361A8D8 LDR X22, [X20 + 0x30]
	0x0361A8DC MOV W21, W0

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0xDC7000
	009 Move W8, [X23+1186]
	010 Move W19, W3
	011 Move W22, W2
	012 Move X21, X1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0xADC000
	019 Move X0, [X0+632]
	020 Call 0x1C17CF4
	021 Move X0, 0xADC000
	022 Move X0, [X0+2600]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X23+1186], W8
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move [X31+8], X31
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Compare X21, 0
	030 JumpIfNotEqual {36}
	031 Move X8, 0xADC000
	032 Move X8, [X8+632]
	033 Move X8, [X8]
	034 Move X8, [X8+184]
	035 Move X21, [X8]
	036 Compare X20, 0
	037 JumpIfEqual {75}
	038 Move X8, 0xADC000
	039 Move X8, [X8+2600]
	040 Move [X20+16], X21
	041 Move TEMP, X22
	042 And TEMP, TEMP, 1
	043 Compare TEMP, 1
	044 JumpIfNotEqual {48}
	045 Move X9, [X20+48]
	046 Or X9, X9, 0xFFFFF
	047 Move [X20+48], X9
	048 Move X0, [X8]
	049 Add X23, X20, 48
	050 Add X22, X20, 32
	051 Move W8, [X0+224]
	052 Compare W8, 0
	053 JumpIfNotEqual {55}
	054 Call 0x1C17DFC
	055 Move X0, X21
	056 Move X1, X23
	057 Move X2, X22
	058 Call Uri.ParseScheme, X0, X1, X2
	059 Move W1, W0
	060 Add X3, X31, 8
	061 Move X0, X20
	062 Move W2, W19
	063 Call Uri.InitializeUri, X0, X1, X2, X3
	064 Move X19, [X31+8]
	065 Compare X19, 0
	066 JumpIfNotEqual {76}
	067 Move X20, [X31+48]
	068 Move X19, [X31+56]
	069 Move X22, [X31+32]
	070 Move X21, [X31+40]
	071 Move X30, [X31+16]
	072 Move X23, [X31+24]
	073 Add X31, X31, 64
	074 Return 
	075 Call 0x1C17F20
	076 Move X0, 0xB22000
	077 Move X0, [X0+112]
	078 Call 0x1C17D08
	079 Move X1, X0
	080 Move X0, X19
	081 Call 0x1C17DEC
	082 Move X0, 0xADA000
	083 Move X0, [X0+2512]
	084 Call 0x1C17D08
	085 Move W1, 1
	086 Call 0x1C17D6C
	087 Move X20, X0
	088 Move [X31+4], W19
	089 Move X0, 0xB22000
	090 Move X0, [X0+120]
	091 Call 0x1C17D08
	092 Add X1, X31, 4
	093 Call 0x1C17E04
	094 Move X19, X0
	095 Move X0, X20
	096 Call 0x19913C0
	097 Move X0, X20
	098 Move X1, X19
	099 Call 0x19990B4
	100 Move X0, X20
	101 Move X1, X31
	102 Move X2, X19
	103 Call 0x1994444
	104 Move X0, 0xB22000
	105 Move X0, [X0+128]
	106 Call 0x1C17D08
	107 Move X1, X20
	108 Move X2, X31
	109 Call SR.GetString, X0, X1
	110 Move X19, X0
	111 Move X0, 0xAE2000
	112 Move X0, [X0+1400]
	113 Call 0x1C17D08
	114 Call 0x1C17F10
	115 Move X1, X19
	116 Move X2, X31
	117 Move X20, X0
	118 Call ArgumentException..ctor, X0, X1
	119 Move X0, 0xB22000
	120 Move X0, [X0+112]
	121 Call 0x1C17D08
	122 Move X1, X0
	123 Move X0, X20
	124 Call 0x1C17DEC

Method: System.Void InitializeUri(System.ParsingError err, System.UriKind uriKind, out System.UriFormatException e)

Disassembly:
	0x036246D8 LDR X8, [X19 + 0x20]
	0x036246DC CBZ X8, 0x36248A8
	0x036246E0 LDR X8, [X19 + 0x30]
	0x036246E4 TBNZ X8, 0x1D, 0x36249A0
	0x036246E8 TBNZ X8, 0x1F, 0x36246F8
	0x036246EC MOV X0, X19
	0x036246F0 BL 0x3618664
	0x036246F4 LDR X8, [X19 + 0x30]
	0x036246F8 MOVZ W9, 0x1C80
	0x036246FC ANDS X31, X8, X9, 0x0
	0x03624700 B.EQ 0x3624754
	0x03624704 LDRB W9, [X19 + 0x40]
	0x03624708 CBZ W9, 0x36249A0
	0x0362470C MOVZ X9, 0x800
	0x03624710 MOVK X9, 0x200
	0x03624714 BICS X31, X9, X8, 0x0
	0x03624718 B.EQ 0x3624754
	0x0362471C AND X9, X8, 0x8000000080
	0x03624720 ORR X10, X31, 0x8000000080
	0x03624724 CMP X9, X10
	0x03624728 B.EQ 0x3624754
	0x0362472C MOVZ X9, 0x400
	0x03624730 MOVK X9, 0x100
	0x03624734 AND X10, X8, X9, 0x0
	0x03624738 CMP X10, X9
	0x0362473C B.EQ 0x3624754
	0x03624740 MOVZ X9, 0x1000
	0x03624744 MOVK X9, 0x400
	0x03624748 AND X10, X8, X9, 0x0
	0x0362474C CMP X10, X9
	0x03624750 B.NE 0x36249A0
	0x03624754 TBNZ X8, 0x14, 0x3624928
	0x03624758 TBZ X8, 0xE, 0x3624774
	0x0362475C LDR X9, [X19 + 0x38]
	0x03624760 CBZ X9, 0x3624AE0
	0x03624764 LDRH W10, [X9 + 0x32]
	0x03624768 LDRH W9, [X9 + 0x30]
	0x0362476C CMP W10, W9
	0x03624770 B.HI 0x36249A0
	0x03624774 TBNZ X8, 0xF, 0x36249A0
	0x03624778 TBZ X8, 0x1B, 0x36247BC
	0x0362477C LDR X8, [X19 + 0x38]
	0x03624780 CBZ X8, 0x3624AE0
	0x03624784 LDR X21, [X19 + 0x10]
	0x03624788 LDRH W22, [X8 + 0x30]
	0x0362478C MOV X0, X19
	0x03624790 BL 0x3618030
	0x03624794 CBZ X21, 0x3624AE0
	0x03624798 ADD W8, W22, W0, UXTH
	0x0362479C SUB W1, W8, 0x1
	0x036247A0 MOV X0, X21
	0x036247A4 MOV X2, X31
	0x036247A8 BL 0x3222A1C
	0x036247AC AND W8, W0, 0xFFFF
	0x036247B0 CMP W8, 0x7C
	0x036247B4 B.EQ 0x36249A0
	0x036247B8 LDR X8, [X19 + 0x30]
	0x036247BC TBNZ X8, 0x19, 0x3624820
	0x036247C0 AND X8, X8, 0x7FFFF
	0x036247C4 CMP X8, 0x10000
	0x036247C8 B.EQ 0x3624820
	0x036247CC LDR X8, [X19 + 0x38]
	0x036247D0 CBZ X8, 0x3624AE0
	0x036247D4 LDRH W9, [X8 + 0x2A]
	0x036247D8 ADD X2, X31, 0xC
	0x036247DC MOVZ W4, 0x2F
	0x036247E0 MOV X0, X19
	0x036247E4 STRH W9, [X31 + 0xC]
	0x036247E8 LDRH W3, [X8 + 0x30]
	0x036247EC MOV X1, X20
	0x036247F0 BL 0x3620708
	0x036247F4 MOVZ W8, 0x31
	0x036247F8 AND W8, W0, W8, 0x0
	0x036247FC CMP W8, 0x1
	0x03624800 B.EQ 0x3624820
	0x03624804 MOVZ W8, 0x4A
	0x03624808 AND W8, W0, W8, 0x0
	0x0362480C CMP W8, 0xA
	0x03624810 MOV W0, W31
	0x03624814 B.NE 0x36249A4
	0x03624818 LDRB W8, [X19 + 0x40]
	0x0362481C CBZ W8, 0x36249A4
	0x03624820 LDR W8, [X19 + 0x30]
	0x03624824 MOVZ W9, 0x1
	0x03624828 MOVK W9, 0x100000
	0x0362482C ORN W8, W31, W8, 0x0
	0x03624830 ANDS X31, X8, X9, 0x0
	0x03624834 B.NE 0x36248A0
	0x03624838 LDR X8, [X19 + 0x20]
	0x0362483C CBZ X8, 0x3624AE0
	0x03624840 LDR X8, [X8 + 0x20]
	0x03624844 CBZ X8, 0x3624AE0
	0x03624848 LDR W9, [X8 + 0x10]
	0x0362484C ADD W8, W9, 0x1
	0x03624850 STRH W8, [X31 + 0xC]
	0x03624854 AND X9, X9, 0xFFFF
	0x03624858 LDRH W9, [X20, X9, LSL #1]
	0x0362485C CMP W9, 0x3A
	0x03624860 MOV W9, W8
	0x03624864 B.NE 0x362484C
	0x03624868 LDR X9, [X19 + 0x10]
	0x0362486C CBZ X9, 0x3624AE0
	0x03624870 LDR W10, [X9 + 0x10]
	0x03624874 AND W9, W8, 0xFFFF
	0x03624878 ADD W9, W9, 0x1
	0x0362487C CMP W9, W10
	0x03624880 B.GE 0x36249A0
	0x03624884 AND X8, X8, 0xFFFF
	0x03624888 LDRH W8, [X20, X8, LSL #1]
	0x0362488C CMP W8, 0x2F
	0x03624890 B.NE 0x36249A0
	0x03624894 LDRH W8, [X20, W9, UXTW]
	0x03624898 CMP W8, 0x2F
	0x0362489C B.NE 0x36249A0
	0x036248A0 MOVZ W0, 0x1
	0x036248A4 B 0x36249A4
	0x036248A8 ADRP X8, 0xB17000
	0x036248AC LDR X8, [X8 + 0x48]
	0x036248B0 LDR X0, [X8]
	0x036248B4 LDR W8, [X0 + 0xE0]
	0x036248B8 CBNZ W8, 0x36248C0
	0x036248BC BL 0x1C16DFC
	0x036248C0 MOV X0, X31
	0x036248C4 BL 0x362BC9C
	0x036248C8 TBNZ X0, 0x0, 0x36248F4
	0x036248CC ADRP X8, 0xAD1000
	0x036248D0 LDR X8, [X8 + 0xA28]
	0x036248D4 LDR X21, [X19 + 0x10]
	0x036248D8 LDR X0, [X8]
	0x036248DC LDR W8, [X0 + 0xE0]
	0x036248E0 CBNZ W8, 0x36248E8
	0x036248E4 BL 0x1C16DFC
	0x036248E8 MOV X0, X21
	0x036248EC BL 0x361E2F0
	0x036248F0 TBNZ X0, 0x0, 0x36249A0
	0x036248F4 LDR X8, [X19 + 0x10]
	0x036248F8 CBZ X8, 0x3624AE0
	0x036248FC LDR W3, [X8 + 0x10]
	0x03624900 ADD X2, X31, 0xC
	0x03624904 MOVZ W4, 0xFFFE
	0x03624908 MOV X0, X19
	0x0362490C MOV X1, X20
	0x03624910 BL 0x3620708
	0x03624914 MOVZ W8, 0x11
	0x03624918 AND W8, W0, W8, 0x0
	0x0362491C CMP W8, 0x1
	0x03624920 CSET W0, EQ
	0x03624924 B 0x36249A4
	0x03624928 LDR X8, [X19 + 0x38]
	0x0362492C CBZ X8, 0x3624AE0
	0x03624930 LDR X9, [X19 + 0x20]
	0x03624934 CBZ X9, 0x3624AE0
	0x03624938 LDR X9, [X9 + 0x20]
	0x0362493C CBZ X9, 0x3624AE0
	0x03624940 LDRH W10, [X8 + 0x28]
	0x03624944 LDR W9, [X9 + 0x10]
	0x03624948 LDRH W8, [X8 + 0x2A]
	0x0362494C ADD W9, W10, W9
	0x03624950 ADD W22, W9, 0x2
	0x03624954 AND W21, W22, 0xFFFF
	0x03624958 CMP W21, W8
	0x0362495C B.CS 0x36249A0
	0x03624960 LDR X0, [X19 + 0x10]
	0x03624964 CBZ X0, 0x3624AE0
	0x03624968 SUB W1, W21, 0x1
	0x0362496C MOV X2, X31
	0x03624970 BL 0x3222A1C
	0x03624974 AND W8, W0, 0xFFFF
	0x03624978 CMP W8, 0x5C
	0x0362497C B.EQ 0x36249A0
	0x03624980 LDR X0, [X19 + 0x10]
	0x03624984 CBZ X0, 0x3624AE0
	0x03624988 MOV W1, W21
	0x0362498C MOV X2, X31
	0x03624990 BL 0x3222A1C
	0x03624994 AND W8, W0, 0xFFFF
	0x03624998 CMP W8, 0x5C
	0x0362499C B.NE 0x36249B4
	0x036249A0 MOV W0, W31
	0x036249A4 LDP X20, X19, [X31 + 0x20]
	0x036249A8 LDP X22, X21, [X31 + 0x10]
	0x036249AC LDR X30, [X31], #0x30
	0x036249B0 RET
	0x036249B4 LDR X8, [X19 + 0x30]
	0x036249B8 ANDS X31, X8, 0x1FFFFFFF
	0x036249BC B.EQ 0x3624758
	0x036249C0 LDR X9, [X19 + 0x38]
	0x036249C4 CBZ X9, 0x3624AE0
	0x036249C8 LDRH W9, [X9 + 0x2A]
	0x036249CC ADD W10, W22, 0x1
	0x036249D0 AND W21, W10, 0xFFFF
	0x036249D4 CMP W21, W9
	0x036249D8 B.CS 0x3624758
	0x036249DC LDR X0, [X19 + 0x10]
	0x036249E0 CBZ X0, 0x3624AE0
	0x036249E4 MOV W1, W21
	0x036249E8 MOV X2, X31
	0x036249EC BL 0x3222A1C
	0x036249F0 AND W8, W0, 0xFFFF
	0x036249F4 CMP W8, 0x2F
	0x036249F8 B.EQ 0x36249A0
	0x036249FC LDR X0, [X19 + 0x10]
	0x03624A00 CBZ X0, 0x3624AE0
	0x03624A04 MOV W1, W21
	0x03624A08 MOV X2, X31
	0x03624A0C BL 0x3222A1C
	0x03624A10 AND W8, W0, 0xFFFF
	0x03624A14 CMP W8, 0x5C
	0x03624A18 B.EQ 0x36249A0
	0x03624A1C LDR X8, [X19 + 0x30]
	0x03624A20 B 0x3624758
	0x03624A24 ADRP X0, 0xACF000
	0x03624A28 LDR X0, [X0 + 0x9D0]
	0x03624A2C BL 0x1C16D08
	0x03624A30 MOVZ W1, 0x1
	0x03624A34 BL 0x1C16D6C
	0x03624A38 MOV X20, X0
	0x03624A3C MOV X0, X19
	0x03624A40 MOV X1, X31
	0x03624A44 BL 0x33BE520
	0x03624A48 MOV X19, X0
	0x03624A4C BL 0x19903C0
	0x03624A50 LDR X8, [X19]
	0x03624A54 MOV X0, X19
	0x03624A58 LDR X9, [X8 + 0x2E8]
	0x03624A5C LDR X1, [X8 + 0x2F0]
	0x03624A60 BLR X9
	0x03624A64 MOV X19, X0
	0x03624A68 MOV X0, X20
	0x03624A6C BL 0x19903C0
	0x03624A70 MOV X0, X20
	0x03624A74 MOV X1, X19
	0x03624A78 BL 0x19980B4
	0x03624A7C MOV X0, X20
	0x03624A80 MOV X1, X31
	0x03624A84 MOV X2, X19
	0x03624A88 BL 0x1993444
	0x03624A8C ADRP X0, 0xB17000
	0x03624A90 LDR X0, [X0 + 0x268]
	0x03624A94 BL 0x1C16D08
	0x03624A98 MOV X1, X20
	0x03624A9C MOV X2, X31
	0x03624AA0 BL 0x320A16C
	0x03624AA4 MOV X19, X0
	0x03624AA8 ADRP X0, 0xACF000
	0x03624AAC LDR X0, [X0 + 0x5B0]
	0x03624AB0 BL 0x1C16D08
	0x03624AB4 BL 0x1C16F10
	0x03624AB8 MOV X1, X19
	0x03624ABC MOV X2, X31
	0x03624AC0 MOV X20, X0
	0x03624AC4 BL 0x337DF1C
	0x03624AC8 ADRP X0, 0xB17000
	0x03624ACC LDR X0, [X0 + 0x270]
	0x03624AD0 BL 0x1C16D08
	0x03624AD4 MOV X1, X0
	0x03624AD8 MOV X0, X20
	0x03624ADC BL 0x1C16DEC
	0x03624AE0 BL 0x1C16F20
	0x03624AE4 STR X30, [X31 - 0x30]!
	0x03624AE8 STP X22, X21, [X31 + 0x10]
	0x03624AEC STP X20, X19, [X31 + 0x20]
	0x03624AF0 ADRP X22, 0xDBC000
	0x03624AF4 ADRP X21, 0xAD1000
	0x03624AF8 LDRB W8, [X22 + 0x4A9]
	0x03624AFC LDR X21, [X21 + 0xA28]
	0x03624B00 MOV W20, W1
	0x03624B04 MOV X19, X0
	0x03624B08 TBNZ X8, 0x0, 0x3624B20
	0x03624B0C ADRP X0, 0xAD1000
	0x03624B10 LDR X0, [X0 + 0xA28]
	0x03624B14 BL 0x1C16CF4
	0x03624B18 MOVZ W8, 0x1
	0x03624B1C STRB W8, [X22 + 0x4A9]
	0x03624B20 LDR X0, [X21]
	0x03624B24 STR X31, [X31 + 0x8]
	0x03624B28 CMP W20, 0x0
	0x03624B2C MOVZ W9, 0x12C
	0x03624B30 LDR W8, [X0 + 0xE0]
	0x03624B34 CSEL W20, W9, W20, EQ
	0x03624B38 CBNZ W8, 0x3624B40
	0x03624B3C BL 0x1C16DFC
	0x03624B40 ADD X2, X31, 0x8
	0x03624B44 MOV X0, X19
	0x03624B48 MOV W1, W20
	0x03624B4C BL 0x361E23C
	0x03624B50 TBZ X0, 0x0, 0x3624B64
	0x03624B54 LDR X0, [X31 + 0x8]
	0x03624B58 CBZ X0, 0x3624B7C
	0x03624B5C BL 0x3624638
	0x03624B60 B 0x3624B68
	0x03624B64 MOV W0, W31
	0x03624B68 LDP X20, X19, [X31 + 0x20]
	0x03624B6C LDP X22, X21, [X31 + 0x10]
	0x03624B70 AND W0, W0, 0x1
	0x03624B74 LDR X30, [X31], #0x30
	0x03624B78 RET
	0x03624B7C BL 0x1C16F20
	0x03624B80 SUB X31, X31, 0x50
	0x03624B84 STP X30, X21, [X31 + 0x30]
	0x03624B88 STP X20, X19, [X31 + 0x40]
	0x03624B8C ADRP X20, 0xDBC000
	0x03624B90 LDRB W8, [X20 + 0x4AB]
	0x03624B94 MOV X19, X0
	0x03624B98 TBNZ X8, 0x0, 0x3624BC8
	0x03624B9C ADRP X0, 0xAD8000

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0xDBD000
	009 Move W8, [X23+1187]
	010 Move X19, X3
	011 Move W22, W2
	012 Move W21, W1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0xB18000
	019 Move X0, [X0+72]
	020 Call 0x1C17CF4
	021 Move X0, 0xAD2000
	022 Move X0, [X0+2600]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X23+1187], W8
	026 Move X23, 0xAD2000
	027 Move X23, [X23+2600]
	028 Compare W21, 0
	029 JumpIfEqual {40}
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move [X20+16], X31
	032 Move X0, [X23]
	033 Move W8, [X0+224]
	034 Compare W8, 0
	035 JumpIfNotEqual {37}
	036 Call 0x1C17DFC
	037 Move W0, W21
	038 Call Uri.GetException, X0
	039 Move [X19], X0
	040 Move W8, [X20+51]
	041 Move TEMP, X8
	042 And TEMP, TEMP, 32
	043 Compare TEMP, 32
	044 JumpIfEqual {91}
	045 Move X0, [X23]
	046 Move W8, [X0+224]
	047 Compare W8, 0
	048 JumpIfNotEqual {51}
	049 Call 0x1C17DFC
	050 Move X0, [X23]
	051 Move X8, [X0+184]
	052 Move W24, [X8+104]
	053 Call 0x1C17D44
	054 Compare W24, 0
	055 JumpIfNotEqual {68}
	056 Move X1, [X20+16]
	057 Call Uri.CheckForConfigLoad, X0, X1
	058 Move TEMP, X0
	059 And TEMP, TEMP, 1
	060 Compare TEMP, 1
	061 JumpIfNotEqual {68}
	062 Move X0, [X23]
	063 Move W8, [X0+224]
	064 Compare W8, 0
	065 JumpIfNotEqual {67}
	066 Call 0x1C17DFC
	067 Call Uri.InitializeUriConfig
	068 Move X0, [X23]
	069 Move W8, [X0+224]
	070 Compare W8, 0
	071 JumpIfNotEqual {74}
	072 Call 0x1C17DFC
	073 Move X0, [X23]
	074 Move X8, [X0+184]
	075 Move W24, [X8+112]
	076 Call 0x1C17D44
	077 Compare W24, 0
	078 JumpIfEqual {88}
	079 Move X0, [X20+32]
	080 Compare X0, 0
	081 JumpIfEqual {101}
	082 Move W1, 0x10000000
	083 Move X2, X31
	084 Call UriParser.InFact, X0, X1
	085 And W8, W0, 1
	086 Compare X20, 0
	087 JumpIfNotEqual {104}
	088 Move W8, W31
	089 Compare X20, 0
	090 JumpIfNotEqual {104}
	091 Compare W22, 0
	092 JumpIfEqual {220}
	093 Move X8, [X20+48]
	094 NotImplemented "Instruction CMP not yet implemented."
	095 Move TEMP, X8
	096 And TEMP, TEMP, 0x8000000
	097 Compare TEMP, 0x8000000
	098 JumpIfEqual {211}
	099 NotImplemented "Instruction CMP not yet implemented."
	100 Move X8, [X20+48]
	101 Move W8, 1
	102 Compare X20, 0
	103 JumpIfEqual {310}
	104 Move [X20+64], W8
	105 Compare W8, 0
	106 JumpIfEqual {125}
	107 Move X1, [X20+16]
	108 Call Uri.CheckForUnicode, X0, X1
	109 Move TEMP, X0
	110 And TEMP, TEMP, 1
	111 Compare TEMP, 1
	112 JumpIfEqual {119}
	113 Move X1, [X20+16]
	114 Call Uri.CheckForEscapedUnreserved, X0, X1
	115 Move TEMP, X0
	116 And TEMP, TEMP, 1
	117 Compare TEMP, 1
	118 JumpIfNotEqual {125}
	119 Move X8, [X20+48]
	120 Move X9, [X20+16]
	121 Move W24, 1
	122 Or X8, X8, 0x3FFFFFFFF
	123 Move [X20+24], X9
	124 Move [X20+48], X8
	125 Move W24, W31
	126 Move X0, [X20+32]
	127 Compare X0, 0
	128 JumpIfEqual {146}
	129 Move X1, X31
	130 Call UriParser.get_IsSimple, X0
	131 Move TEMP, X0
	132 And TEMP, TEMP, 1
	133 Compare TEMP, 1
	134 JumpIfNotEqual {185}
	135 Move X0, X20
	136 Call Uri.PrivateParseMinimal, X0
	137 Compare W0, 0
	138 JumpIfEqual {240}
	139 Move W21, W0
	140 NotImplemented "Instruction CMP not yet implemented."
	141 NotImplemented "Instruction CMP not yet implemented."
	142 Move [X20+32], X31
	143 Move [X19], X31
	144 Move X8, [X20+48]
	145 And X8, X8, 0xFFFFF
	146 Compare W21, 0
	147 JumpIfEqual {31}
	148 NotImplemented "Instruction CMP not yet implemented."
	149 Move [X19], X31
	150 Move X8, [X20+48]
	151 Move W9, [X20+64]
	152 Move X10, 0x80000
	153 NotImplemented "Instruction MOVK not yet implemented."
	154 And X8, X8, X10
	155 And W31, W24, W9
	156 Move [X20+48], X8
	157 Move X1, [X20+24]
	158 Compare X1, 0
	159 JumpIfEqual {310}
	160 Move W3, [X1+16]
	161 Move W2, W31
	162 Move W4, W31
	163 Call Uri.EscapeUnescapeIri, X0, X1, X2, X3, X4
	164 Move [X20+16], X0
	165 Move X8, 0xB18000
	166 Move X8, [X8+72]
	167 Move X0, [X8]
	168 Move W8, [X0+224]
	169 Compare W8, 0
	170 JumpIfNotEqual {172}
	171 Call 0x1C17DFC
	172 Move X0, X31
	173 Call UriParser.get_ShouldUseLegacyV2Quirks
	174 Move TEMP, X0
	175 And TEMP, TEMP, 1
	176 Compare TEMP, 1
	177 JumpIfNotEqual {302}
	178 Move X0, [X20+16]
	179 Compare X0, 0
	180 JumpIfEqual {311}
	181 Move W1, 1
	182 Move X2, X31
	183 Call String.Normalize, X0, X1
	184 Move [X20+16], X0
	185 Move X0, [X20+32]
	186 Compare X0, 0
	187 JumpIfEqual {310}
	188 Move X1, X31
	189 Call UriParser.InternalOnNewUri, X0
	190 Move X8, [X20+48]
	191 Move [X20+32], X0
	192 Or X8, X8, 0x1FFFFFF
	193 Move [X20+48], X8
	194 Compare X0, 0
	195 JumpIfEqual {310}
	196 Move X1, X20
	197 Move X2, X19
	198 Move X3, X31
	199 Call UriParser.InternalValidate, X0, X1, X2
	200 Move X8, [X19]
	201 Compare X8, 0
	202 JumpIfEqual {242}
	203 NotImplemented "Instruction CMP not yet implemented."
	204 Compare W21, 0
	205 JumpIfEqual {302}
	206 Move [X20+32], X31
	207 Move [X19], X31
	208 Move X8, [X20+48]
	209 And X8, X8, 0xFFFFF
	210 Move [X20+48], X8
	211 Move TEMP, X8
	212 And TEMP, TEMP, 0x8000000
	213 Compare TEMP, 0x8000000
	214 JumpIfNotEqual {45}
	215 NotImplemented "Instruction CMP not yet implemented."
	216 And X8, X8, 0xFFFFF
	217 Move [X20+32], X31
	218 Move [X20+48], X8
	219 Move [X19], X31
	220 Move X0, [X20+16]
	221 Compare X0, 0
	222 JumpIfEqual {310}
	223 Move W8, [X0+16]
	224 NotImplemented "Instruction CMP not yet implemented."
	225 Move W1, W31
	226 Move X2, X31
	227 Call String.get_Chars, X0, X1
	228 And W8, W0, 0xFFFF
	229 NotImplemented "Instruction CMP not yet implemented."
	230 Move X0, [X23]
	231 Move W8, [X0+224]
	232 Compare W8, 0
	233 JumpIfNotEqual {236}
	234 Call 0x1C17DFC
	235 Move X0, [X23]
	236 Move X8, [X0+184]
	237 Move W8, [X8+113]
	238 Compare W8, 0
	239 JumpIfNotEqual {93}
	240 NotImplemented "Instruction CMP not yet implemented."
	241 Move [X19], X31
	242 Move X8, [X20+48]
	243 Compare W21, 0
	244 JumpIfNotEqual {282}
	245 Move TEMP, X8
	246 And TEMP, TEMP, 0x4000000
	247 Compare TEMP, 0x4000000
	248 JumpIfEqual {282}
	249 NotImplemented "Instruction CMP not yet implemented."
	250 Move X0, [X23]
	251 Move W8, [X0+224]
	252 Compare W8, 0
	253 JumpIfNotEqual {255}
	254 Call 0x1C17DFC
	255 Move W0, 12
	256 Move X0, [X23]
	257 Move W8, [X0+224]
	258 Compare W8, 0
	259 JumpIfNotEqual {261}
	260 Call 0x1C17DFC
	261 Move W0, W21
	262 Call Uri.GetException, X0
	263 Move [X19], X0
	264 Move X0, [X20+16]
	265 Compare X0, 0
	266 JumpIfEqual {310}
	267 Move W8, [X0+16]
	268 NotImplemented "Instruction CMP not yet implemented."
	269 Move W1, W31
	270 Move X2, X31
	271 Call String.get_Chars, X0, X1
	272 And W8, W0, 0xFFFF
	273 NotImplemented "Instruction CMP not yet implemented."
	274 Move X0, [X20+16]
	275 Compare X0, 0
	276 JumpIfEqual {310}
	277 Move W1, 1
	278 Move X2, X31
	279 Call String.get_Chars, X0, X1
	280 And W8, W0, 0xFFFF
	281 NotImplemented "Instruction CMP not yet implemented."
	282 And X8, X8, 0xFFFFF
	283 Or X8, X8, 0x1FFFFFF
	284 Move [X20+48], X8
	285 Move W8, [X20+64]
	286 And W31, W24, W8
	287 Move W8, [X20+48]
	288 Move TEMP, X8
	289 And TEMP, TEMP, -2147483648
	290 Compare TEMP, -2147483648
	291 JumpIfEqual {302}
	292 Move X0, X20
	293 Move X20, [X31+48]
	294 Move X19, [X31+56]
	295 Move X22, [X31+32]
	296 Move X21, [X31+40]
	297 Move X24, [X31+16]
	298 Move X23, [X31+24]
	299 Move X30, [X31+64]
	300 Call Uri.ParseRemaining, X0
	301 Return 
	302 Move X20, [X31+48]
	303 Move X19, [X31+56]
	304 Move X22, [X31+32]
	305 Move X21, [X31+40]
	306 Move X24, [X31+16]
	307 Move X23, [X31+24]
	308 Move X30, [X31+64]
	309 Return 
	310 Call 0x1C17F20
	311 Call 0x1C17F20
	312 Move X20, X0
	313 NotImplemented "Instruction CMP not yet implemented."
	314 Move X0, X20
	315 Call 0x3EB2AD0
	316 Move X20, X0
	317 Move X0, 0xAD8000
	318 Move X0, [X0+1400]
	319 Call 0x1C17D08
	320 Move X8, [X20]
	321 Move X1, [X8]
	322 Call 0x1C18270
	323 Move TEMP, X0
	324 And TEMP, TEMP, 1
	325 Compare TEMP, 1
	326 JumpIfNotEqual {336}
	327 Call 0x3EB2AE0
	328 Move X0, 0xAD2000
	329 Move X0, [X0+2600]
	330 Call 0x1C17D08
	331 Move W8, [X0+224]
	332 Compare W8, 0
	333 JumpIfNotEqual {335}
	334 Call 0x1C17DFC
	335 Move W0, 1
	336 Move W0, 8
	337 Call 0x3EB2AF0
	338 Move X8, [X20]
	339 Move [X0], X8
	340 Move X1, 0x891000
	341 Add X1, X1, 3672
	342 Move X2, X31
	343 Call 0x3EB2B00
	344 Move X20, X0
	345 Call 0x3EB2AE0
	346 Move X0, X20
	347 Call 0x1D2D690
	348 Call 0x1991590

Method: System.Boolean CheckForConfigLoad(System.String data)

Disassembly:
	0x03624BA0 LDR X0, [X0 + 0x8D8]
	0x03624BA4 BL 0x1C16CF4
	0x03624BA8 ADRP X0, 0xAD1000
	0x03624BAC LDR X0, [X0 + 0x278]
	0x03624BB0 BL 0x1C16CF4
	0x03624BB4 ADRP X0, 0xB17000
	0x03624BB8 LDR X0, [X0 + 0x58]
	0x03624BBC BL 0x1C16CF4
	0x03624BC0 MOVZ W8, 0x1
	0x03624BC4 STRB W8, [X20 + 0x4AB]
	0x03624BC8 CBZ X19, 0x3624CD8
	0x03624BCC LDR W8, [X19 + 0x10]
	0x03624BD0 CBZ W8, 0x3624C14
	0x03624BD4 MOV X0, X31
	0x03624BD8 BL 0x32C1424
	0x03624BDC LDRSW X1, [X19 + 0x10]
	0x03624BE0 CMP W1, 0x1
	0x03624BE4 B.LT 0x3624C2C
	0x03624BE8 SXTW X9, W0
	0x03624BEC MOV X8, X31
	0x03624BF0 ADD X9, X19, X9
	0x03624BF4 LDRH W10, [X9]
	0x03624BF8 CMP W10, 0x25
	0x03624BFC B.EQ 0x3624C30
	0x03624C00 ADD X8, X8, 0x1
	0x03624C04 CMP X8, X1
	0x03624C08 ADD X9, X9, 0x2
	0x03624C0C B.LT 0x3624BF4
	0x03624C10 B 0x3624C30
	0x03624C14 ADRP X8, 0xAD1000
	0x03624C18 LDR X8, [X8 + 0x278]
	0x03624C1C LDR X8, [X8]
	0x03624C20 LDR X8, [X8 + 0xB8]
	0x03624C24 LDR X19, [X8]
	0x03624C28 B 0x3624CC4
	0x03624C2C MOV W8, W31
	0x03624C30 CMP W8, W1
	0x03624C34 B.EQ 0x3624CC4
	0x03624C38 ADRP X8, 0xAD8000
	0x03624C3C LDR X8, [X8 + 0x8D8]
	0x03624C40 STR W31, [X31 + 0x2C]
	0x03624C44 LDR X0, [X8]
	0x03624C48 BL 0x1C16D6C
	0x03624C4C ADRP X8, 0xB17000
	0x03624C50 LDR X8, [X8 + 0x58]
	0x03624C54 LDR W21, [X19 + 0x10]
	0x03624C58 MOV X20, X0
	0x03624C5C LDR X8, [X8]
	0x03624C60 LDR W9, [X8 + 0xE0]
	0x03624C64 CBNZ W9, 0x3624C70
	0x03624C68 MOV X0, X8
	0x03624C6C BL 0x1C16DFC
	0x03624C70 MOVZ W8, 0xA
	0x03624C74 ADD X4, X31, 0x2C
	0x03624C78 MOVZ W5, 0xFFFF
	0x03624C7C MOVZ W6, 0xFFFF
	0x03624C80 MOVZ W7, 0xFFFF

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Compare X1, 0
	005 JumpIfEqual {48}
	006 Move W20, [X1+16]
	007 Move X0, X31
	008 Move X19, X1
	009 Call RuntimeHelpers.get_OffsetToStringData
	010 NotImplemented "Instruction CMP not yet implemented."
	011 Add X8, X19, W0
	012 NotImplemented "Instruction LDRH not yet implemented."
	013 Move W9, 1
	014 NotImplemented "Instruction CMP not yet implemented."
	015 NotImplemented "Instruction CMP not yet implemented."
	016 Move X9, W0
	017 Add X9, X19, X9
	018 Move W10, 1
	019 Move X11, 2
	020 Move X12, 1
	021 Add X13, X9, 2
	022 Move W9, 1
	023 And W14, W14, 0xFFFF
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Add X14, X10, 2
	026 NotImplemented "Instruction CMP not yet implemented."
	027 NotImplemented "Instruction LDRH not yet implemented."
	028 NotImplemented "Instruction CMP not yet implemented."
	029 NotImplemented "Instruction SBFM not yet implemented."
	030 NotImplemented "Instruction LDRH not yet implemented."
	031 NotImplemented "Instruction CMP not yet implemented."
	032 NotImplemented "Instruction LDRH not yet implemented."
	033 NotImplemented "Instruction CMP not yet implemented."
	034 NotImplemented "Instruction CMP not yet implemented."
	035 NotImplemented "Instruction CSET not yet implemented."
	036 NotImplemented "Instruction CMP not yet implemented."
	037 NotImplemented "Instruction LDRH not yet implemented."
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Add X10, X10, 1
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Add X11, X11, X12
	042 Move W9, W31
	043 Move X20, [X31+16]
	044 Move X19, [X31+24]
	045 And W0, W9, 1
	046 Move X30, [X31+32]
	047 Return X0
	048 Call 0x1C17F20

Method: System.Boolean CheckForUnicode(System.String data)

Disassembly:
	0x03624C84 MOV X0, X19
	0x03624C88 MOV W1, W31
	0x03624C8C MOV W2, W21
	0x03624C90 MOV X3, X20
	0x03624C94 STR X31, [X31 + 0x18]
	0x03624C98 STRB W31, [X31 + 0x10]
	0x03624C9C STR X31, [X31 + 0x8]
	0x03624CA0 STR W8, [X31]
	0x03624CA4 BL 0x362B208
	0x03624CA8 LDR W3, [X31 + 0x2C]
	0x03624CAC MOV X1, X0
	0x03624CB0 MOV X0, X31
	0x03624CB4 MOV W2, W31
	0x03624CB8 MOV X4, X31
	0x03624CBC BL 0x322EAE4
	0x03624CC0 MOV X19, X0
	0x03624CC4 MOV X0, X19
	0x03624CC8 LDP X20, X19, [X31 + 0x40]
	0x03624CCC LDP X30, X21, [X31 + 0x30]
	0x03624CD0 ADD X31, X31, 0x50
	0x03624CD4 RET
	0x03624CD8 ADRP X0, 0xAD4000
	0x03624CDC LDR X0, [X0 + 0x528]
	0x03624CE0 BL 0x1C16D08
	0x03624CE4 BL 0x1C16F10
	0x03624CE8 MOV X19, X0
	0x03624CEC ADRP X0, 0xB17000
	0x03624CF0 LDR X0, [X0 + 0x278]
	0x03624CF4 BL 0x1C16D08
	0x03624CF8 MOV X1, X0
	0x03624CFC MOV X0, X19
	0x03624D00 MOV X2, X31
	0x03624D04 BL 0x330E100
	0x03624D08 ADRP X0, 0xB17000
	0x03624D0C LDR X0, [X0 + 0x280]
	0x03624D10 BL 0x1C16D08
	0x03624D14 MOV X1, X0
	0x03624D18 MOV X0, X19
	0x03624D1C BL 0x1C16DEC
	0x03624D20 SUB X31, X31, 0x30
	0x03624D24 STR X30, [X31 + 0x10]
	0x03624D28 STP X20, X19, [X31 + 0x20]
	0x03624D2C ADRP X20, 0xDBC000
	0x03624D30 LDRB W8, [X20 + 0x4AC]
	0x03624D34 MOV X19, X0
	0x03624D38 TBNZ X8, 0x0, 0x3624D5C
	0x03624D3C ADRP X0, 0xAD1000
	0x03624D40 LDR X0, [X0 + 0x278]
	0x03624D44 BL 0x1C16CF4
	0x03624D48 ADRP X0, 0xB17000
	0x03624D4C LDR X0, [X0 + 0x58]
	0x03624D50 BL 0x1C16CF4
	0x03624D54 MOVZ W8, 0x1
	0x03624D58 STRB W8, [X20 + 0x4AC]
	0x03624D5C CBZ X19, 0x3624E00
	0x03624D60 LDR W20, [X19 + 0x10]
	0x03624D64 CBZ W20, 0x3624DD8
	0x03624D68 ADRP X8, 0xB17000
	0x03624D6C LDR X8, [X8 + 0x58]
	0x03624D70 STR W31, [X31 + 0x1C]
	0x03624D74 LDR X0, [X8]
	0x03624D78 LDR W8, [X0 + 0xE0]
	0x03624D7C CBNZ W8, 0x3624D84
	0x03624D80 BL 0x1C16DFC
	0x03624D84 MOVZ W8, 0xFFFF
	0x03624D88 ADD X4, X31, 0x1C
	0x03624D8C MOVZ W6, 0xFFFF
	0x03624D90 MOVZ W7, 0xFFFF
	0x03624D94 MOV X0, X19
	0x03624D98 MOV W1, W31
	0x03624D9C MOV W2, W20
	0x03624DA0 MOV X3, X31
	0x03624DA4 MOV W5, W31
	0x03624DA8 STR X31, [X31 + 0x8]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+56], X21
	004 Move [X31+64], X20
	005 Move [X31+72], X19
	006 Move X20, 0xDBD000
	007 Move W8, [X20+1188]
	008 Move X19, X1
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0xAD9000
	014 Move X0, [X0+2264]
	015 Call 0x1C17CF4
	016 Move X0, 0xB18000
	017 Move X0, [X0+88]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X20+1188], W8
	021 Compare X19, 0
	022 JumpIfEqual {79}
	023 Move X8, 0xAD9000
	024 Move X8, [X8+2264]
	025 Move W1, [X19+16]
	026 Move X20, 0xB18000
	027 Move X0, [X8]
	028 Move X20, [X20+88]
	029 Call 0x1C17D6C
	030 Move X8, [X20]
	031 Move [X31+44], W31
	032 Move W21, [X19+16]
	033 Move X20, X0
	034 Move W9, [X8+224]
	035 Compare W9, 0
	036 JumpIfNotEqual {39}
	037 Move X0, X8
	038 Call 0x1C17DFC
	039 Move W8, 10
	040 Add X4, X31, 44
	041 Move W5, 0xFFFF
	042 Move W6, 0xFFFF
	043 Move W7, 0xFFFF
	044 Move X0, X19
	045 Move W1, W31
	046 Move W2, W21
	047 Move X3, X20
	048 Move [X31+24], X31
	049 Move [X31+16], W31
	050 Move [X31+8], X31
	051 Move [X31], W8
	052 Call UriHelper.UnescapeString, X0, X1, X2, X3, X4, X5, X6, X7, X8, X9, X10
	053 Move W8, [X31+44]
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Compare X0, 0
	056 JumpIfEqual {79}
	057 Move W10, [X0+24]
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Move X9, X31
	060 NotImplemented "Instruction CSINC not yet implemented."
	061 Add X12, X0, 32
	062 Move W13, 1
	063 NotImplemented "Instruction CMP not yet implemented."
	064 NotImplemented "Instruction LDRH not yet implemented."
	065 NotImplemented "Instruction CMP not yet implemented."
	066 Add X9, X9, 1
	067 NotImplemented "Instruction CMP not yet implemented."
	068 NotImplemented "Instruction CSET not yet implemented."
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Move W13, W31
	071 Move X20, [X31+64]
	072 Move X19, [X31+72]
	073 Move X30, [X31+48]
	074 Move X21, [X31+56]
	075 And W0, W13, 1
	076 Add X31, X31, 80
	077 Return X0
	078 Call 0x1C17F28
	079 Call 0x1C17F20

Method: System.Boolean CheckForEscapedUnreserved(System.String data)

Disassembly:
	0x03624DAC STRH W8, [X31]
	0x03624DB0 BL 0x362A9E0
	0x03624DB4 CBZ X0, 0x3624DEC
	0x03624DB8 LDR W3, [X31 + 0x1C]
	0x03624DBC MOV X1, X0
	0x03624DC0 MOV X0, X31
	0x03624DC4 MOV W2, W31
	0x03624DC8 MOV X4, X31
	0x03624DCC BL 0x322EAE4
	0x03624DD0 MOV X19, X0
	0x03624DD4 B 0x3624DEC
	0x03624DD8 ADRP X8, 0xAD1000
	0x03624DDC LDR X8, [X8 + 0x278]
	0x03624DE0 LDR X8, [X8]
	0x03624DE4 LDR X8, [X8 + 0xB8]
	0x03624DE8 LDR X19, [X8]
	0x03624DEC MOV X0, X19
	0x03624DF0 LDP X20, X19, [X31 + 0x20]
	0x03624DF4 LDR X30, [X31 + 0x10]
	0x03624DF8 ADD X31, X31, 0x30
	0x03624DFC RET
	0x03624E00 ADRP X0, 0xAD4000
	0x03624E04 LDR X0, [X0 + 0x528]
	0x03624E08 BL 0x1C16D08
	0x03624E0C BL 0x1C16F10
	0x03624E10 MOV X19, X0
	0x03624E14 ADRP X0, 0xB17000
	0x03624E18 LDR X0, [X0 + 0x288]
	0x03624E1C BL 0x1C16D08
	0x03624E20 MOV X1, X0
	0x03624E24 MOV X0, X19
	0x03624E28 MOV X2, X31
	0x03624E2C BL 0x330E100
	0x03624E30 ADRP X0, 0xB17000
	0x03624E34 LDR X0, [X0 + 0x290]
	0x03624E38 BL 0x1C16D08
	0x03624E3C MOV X1, X0
	0x03624E40 MOV X0, X19
	0x03624E44 BL 0x1C16DEC
	0x03624E48 STR X30, [X31 - 0x30]!
	0x03624E4C STP X22, X21, [X31 + 0x10]
	0x03624E50 STP X20, X19, [X31 + 0x20]
	0x03624E54 MOV X21, X1
	0x03624E58 MOV X1, X31
	0x03624E5C MOV X19, X3
	0x03624E60 MOV X20, X2
	0x03624E64 MOV X22, X0
	0x03624E68 BL 0x33BDD8C
	0x03624E6C STR X21, [X22 + 0x30]
	0x03624E70 STR X20, [X22 + 0x20]
	0x03624E74 STR X19, [X22 + 0x10]
	0x03624E78 LDP X20, X19, [X31 + 0x20]
	0x03624E7C LDP X22, X21, [X31 + 0x10]
	0x03624E80 LDR X30, [X31], #0x30
	0x03624E84 RET
	0x03624E88 STR X30, [X31 - 0x20]!
	0x03624E8C STP X20, X19, [X31 + 0x10]
	0x03624E90 CBZ X1, 0x3624EF0
	0x03624E94 MOV X20, X0
	0x03624E98 LDR X0, [X0 + 0x20]
	0x03624E9C CBZ X0, 0x3624EC4
	0x03624EA0 MOV X19, X1
	0x03624EA4 MOV X1, X31
	0x03624EA8 BL 0x362CE34
	0x03624EAC TBZ X0, 0x0, 0x3624ED0
	0x03624EB0 MOV X0, X20
	0x03624EB4 MOV X1, X19
	0x03624EB8 LDP X20, X19, [X31 + 0x10]
	0x03624EBC LDR X30, [X31], #0x20
	0x03624EC0 B 0x3624F3C
	0x03624EC4 LDP X20, X19, [X31 + 0x10]
	0x03624EC8 LDR X30, [X31], #0x20
	0x03624ECC RET
	0x03624ED0 LDR X0, [X20 + 0x20]
	0x03624ED4 CBZ X0, 0x3624F38
	0x03624ED8 MOV X1, X20
	0x03624EDC MOV X2, X19
	0x03624EE0 LDP X20, X19, [X31 + 0x10]
	0x03624EE4 MOV X3, X31
	0x03624EE8 LDR X30, [X31], #0x20
	0x03624EEC B 0x362CE9C
	0x03624EF0 ADRP X0, 0xAD4000
	0x03624EF4 LDR X0, [X0 + 0x528]
	0x03624EF8 BL 0x1C16D08
	0x03624EFC BL 0x1C16F10
	0x03624F00 MOV X19, X0
	0x03624F04 ADRP X0, 0xAFF000
	0x03624F08 LDR X0, [X0 + 0xE18]
	0x03624F0C BL 0x1C16D08
	0x03624F10 MOV X1, X0
	0x03624F14 MOV X0, X19
	0x03624F18 MOV X2, X31
	0x03624F1C BL 0x330E100
	0x03624F20 ADRP X0, 0xB17000
	0x03624F24 LDR X0, [X0 + 0x298]
	0x03624F28 BL 0x1C16D08
	0x03624F2C MOV X1, X0
	0x03624F30 MOV X0, X19
	0x03624F34 BL 0x1C16DEC
	0x03624F38 BL 0x1C16F20
	0x03624F3C SUB X31, X31, 0x50
	0x03624F40 STP X30, X23, [X31 + 0x20]
	0x03624F44 STP X22, X21, [X31 + 0x30]
	0x03624F48 STP X20, X19, [X31 + 0x40]
	0x03624F4C ADRP X21, 0xDBC000
	0x03624F50 LDRB W8, [X21 + 0x4B1]
	0x03624F54 MOV X20, X1
	0x03624F58 MOV X19, X0
	0x03624F5C TBNZ X8, 0x0, 0x3624F80
	0x03624F60 ADRP X0, 0xB17000
	0x03624F64 LDR X0, [X0 + 0x58]
	0x03624F68 BL 0x1C16CF4
	0x03624F6C ADRP X0, 0xAD1000

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X20, 0xDBD000
	014 Move W8, [X20+1189]
	015 Move X19, X1
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {28}
	020 Move X0, 0xB18000
	021 Move X0, [X0+88]
	022 Call 0x1C17CF4
	023 Move X0, 0xAD2000
	024 Move X0, [X0+2600]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X20+1189], W8
	028 Compare X19, 0
	029 JumpIfEqual {125}
	030 Move X0, X31
	031 Call RuntimeHelpers.get_OffsetToStringData
	032 Move W8, [X19+16]
	033 Subtract W8, W8, 2
	034 NotImplemented "Instruction CMP not yet implemented."
	035 NotImplemented "Instruction CSET not yet implemented."
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move X23, 0xAD2000
	038 Move X23, [X23+2600]
	039 Add X25, X19, W0
	040 Move X22, X31
	041 Move X27, 2
	042 Move W28, 1
	043 Move X29, 1
	044 Move X26, X25
	045 NotImplemented "Instruction LDRH not yet implemented."
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Move X0, [X23]
	048 NotImplemented "Instruction LDRH not yet implemented."
	049 Move W8, [X0+224]
	050 Compare W8, 0
	051 JumpIfNotEqual {53}
	052 Call 0x1C17DFC
	053 Subtract W8, W20, 48
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Subtract W8, W20, 65
	056 NotImplemented "Instruction CMP not yet implemented."
	057 NotImplemented "Instruction LSLV not yet implemented."
	058 And X31, X8, 0x3F0000003F
	059 Move X0, [X23]
	060 NotImplemented "Instruction SBFM not yet implemented."
	061 NotImplemented "Instruction LDRH not yet implemented."
	062 Move W8, [X0+224]
	063 Compare W8, 0
	064 JumpIfNotEqual {66}
	065 Call 0x1C17DFC
	066 Subtract W8, W20, 48
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Subtract W8, W20, 65
	069 NotImplemented "Instruction CMP not yet implemented."
	070 NotImplemented "Instruction LSLV not yet implemented."
	071 And X31, X8, 0x3F0000003F
	072 NotImplemented "Instruction LDRH not yet implemented."
	073 And W8, W20, 0xFFF8
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Move X8, 0xB18000
	076 Move X8, [X8+88]
	077 NotImplemented "Instruction LDRH not yet implemented."
	078 Move X0, [X8]
	079 Move W8, [X0+224]
	080 Compare W8, 0
	081 JumpIfNotEqual {83}
	082 Call 0x1C17DFC
	083 Move W0, W20
	084 Move W1, W21
	085 Move X2, X31
	086 Call UriHelper.EscapedAscii, X0, X1
	087 NotImplemented "Instruction ORN not yet implemented."
	088 And W31, W8, 0xFFFF
	089 Move X8, 0xB18000
	090 Move X8, [X8+88]
	091 Move W20, W0
	092 Move X0, [X8]
	093 Move W8, [X0+224]
	094 Compare W8, 0
	095 JumpIfNotEqual {97}
	096 Call 0x1C17DFC
	097 Move W0, W20
	098 Move X1, X31
	099 Call UriHelper.Is3986Unreserved, X0
	100 Move TEMP, X0
	101 And TEMP, TEMP, 1
	102 Compare TEMP, 1
	103 JumpIfEqual {111}
	104 Move W8, [X19+16]
	105 Add X22, X22, 1
	106 Add X26, X26, 2
	107 Add X27, X27, X29
	108 Subtract W8, W8, 2
	109 NotImplemented "Instruction CMP not yet implemented."
	110 NotImplemented "Instruction CSET not yet implemented."
	111 And W0, W24, 1
	112 Move X20, [X31+80]
	113 Move X19, [X31+88]
	114 Move X22, [X31+64]
	115 Move X21, [X31+72]
	116 Move X24, [X31+48]
	117 Move X23, [X31+56]
	118 Move X26, [X31+32]
	119 Move X25, [X31+40]
	120 Move X28, [X31+16]
	121 Move X27, [X31+24]
	122 Move X29, [X31+96]
	123 Move X30, [X31+104]
	124 Return X0
	125 Call 0x1C17F20

Method: System.Boolean TryCreate(System.String uriString, System.UriKind uriKind, out System.Uri result)

Disassembly:
	0x0361F23C STR X1, [X31 + 0x70]
	0x0361F240 STR X0, [X31 + 0x60]
	0x0361F244 TBNZ X8, 0x0, 0x361F268
	0x0361F248 ADRP X0, 0xB1C000
	0x0361F24C LDR X0, [X0 + 0x48]
	0x0361F250 BL 0x1C16CF4
	0x0361F254 ADRP X0, 0xAD6000
	0x0361F258 LDR X0, [X0 + 0xA28]
	0x0361F25C BL 0x1C16CF4
	0x0361F260 MOVZ W8, 0x1
	0x0361F264 STRB W8, [X19 + 0x497]
	0x0361F268 AND W25, W26, 0xFFFF
	0x0361F26C STRB W31, [X31 + 0x84]
	0x0361F270 STRB W31, [X31 + 0x80]
	0x0361F274 STRB W31, [X31 + 0x7C]
	0x0361F278 STR W25, [X31 + 0x8C]
	0x0361F27C STR X31, [X29]
	0x0361F280 ADRP X8, 0xAD6000
	0x0361F284 LDR X8, [X8 + 0xA28]
	0x0361F288 STRB W31, [X31 + 0x88]
	0x0361F28C LDR X0, [X8]
	0x0361F290 LDR W8, [X0 + 0xE0]
	0x0361F294 CBNZ W8, 0x361F2A8
	0x0361F298 BL 0x1C16DFC
	0x0361F29C ADRP X8, 0xAD6000
	0x0361F2A0 LDR X8, [X8 + 0xA28]
	0x0361F2A4 LDR X0, [X8]
	0x0361F2A8 LDR X8, [X0 + 0xB8]
	0x0361F2AC LDRB W19, [X8 + 0x70]
	0x0361F2B0 BL 0x1C16D44
	0x0361F2B4 CBZ W19, 0x361F2E8
	0x0361F2B8 ADRP X8, 0xAD6000
	0x0361F2BC LDR X8, [X8 + 0xA28]
	0x0361F2C0 LDR X0, [X8]
	0x0361F2C4 LDR W8, [X0 + 0xE0]
	0x0361F2C8 CBNZ W8, 0x361F2D0
	0x0361F2CC BL 0x1C16DFC
	0x0361F2D0 MOV X0, X24
	0x0361F2D4 BL 0x3617DDC
	0x0361F2D8 AND W8, W0, 0x1
	0x0361F2DC STR W8, [X31 + 0x6C]
	0x0361F2E0 CBNZ X24, 0x361F2F0
	0x0361F2E4 B 0x361FF18
	0x0361F2E8 STR W31, [X31 + 0x6C]
	0x0361F2EC CBZ X24, 0x361FF18

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xDC2000
	007 Move W8, [X22+1190]
	008 Move X19, X2
	009 Move W20, W1
	010 Move X21, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0xAD7000
	016 Move X0, [X0+2600]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+1190], W8
	020 Compare X21, 0
	021 JumpIfEqual {48}
	022 Move X22, 0xAD7000
	023 Move X22, [X22+2600]
	024 Move [X31+8], X31
	025 Move X0, [X22]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 Add X3, X31, 8
	031 Move X0, X21
	032 Move W1, W31
	033 Move W2, W20
	034 Call Uri.CreateHelper, X0, X1, X2, X3
	035 Move [X19], X0
	036 Move X8, [X31+8]
	037 Move X20, X0
	038 Move W0, W31
	039 Compare X8, 0
	040 JumpIfNotEqual {50}
	041 Move X0, [X22]
	042 Move W8, [X0+224]
	043 Compare W8, 0
	044 JumpIfNotEqual {46}
	045 Call 0x1C17DFC
	046 NotImplemented "Instruction CMP not yet implemented."
	047 NotImplemented "Instruction CSET not yet implemented."
	048 Move W0, W31
	049 Move [X19], X31
	050 Move X20, [X31+32]
	051 Move X19, [X31+40]
	052 Move X22, [X31+16]
	053 Move X21, [X31+24]
	054 Move X30, [X31+48]
	055 Return X0

Method: System.Boolean TryCreate(System.Uri baseUri, System.String relativeUri, out System.Uri result)

Disassembly:
	0x036251D0 BL 0x1C16CF4
	0x036251D4 MOVZ W8, 0x1
	0x036251D8 STRB W8, [X20 + 0x4B2]
	0x036251DC LDR X0, [X19]
	0x036251E0 LDR W8, [X0 + 0xE0]
	0x036251E4 CBNZ W8, 0x36251F0
	0x036251E8 BL 0x1C16DFC
	0x036251EC LDR X0, [X19]
	0x036251F0 LDR X8, [X0 + 0xB8]
	0x036251F4 LDR X8, [X8 + 0x38]
	0x036251F8 CBZ X8, 0x3625428
	0x036251FC ADRP X20, 0xAD0000
	0x03625200 LDR X20, [X20 + 0xA28]
	0x03625204 LDR X8, [X8 + 0x20]
	0x03625208 LDR X9, [X20]
	0x0362520C LDR X9, [X9 + 0xB8]
	0x03625210 STR X8, [X9]
	0x03625214 LDR X8, [X19]
	0x03625218 LDR X9, [X8 + 0xB8]
	0x0362521C LDR X10, [X9 + 0x30]
	0x03625220 CBZ X10, 0x3625428
	0x03625224 LDR X8, [X20]
	0x03625228 LDR X10, [X10 + 0x20]
	0x0362522C LDR X8, [X8 + 0xB8]
	0x03625230 STR X10, [X8 + 0x8]
	0x03625234 LDR X10, [X9 + 0x40]
	0x03625238 CBZ X10, 0x3625428
	0x0362523C LDR X10, [X10 + 0x20]
	0x03625240 STR X10, [X8 + 0x10]
	0x03625244 LDR X10, [X9 + 0x10]
	0x03625248 CBZ X10, 0x3625428
	0x0362524C LDR X10, [X10 + 0x20]
	0x03625250 STR X10, [X8 + 0x18]
	0x03625254 LDR X10, [X9 + 0x18]
	0x03625258 CBZ X10, 0x3625428
	0x0362525C LDR X10, [X10 + 0x20]
	0x03625260 STR X10, [X8 + 0x20]
	0x03625264 LDR X10, [X9 + 0x20]
	0x03625268 CBZ X10, 0x3625428
	0x0362526C LDR X10, [X10 + 0x20]
	0x03625270 STR X10, [X8 + 0x28]
	0x03625274 LDR X10, [X9 + 0x28]
	0x03625278 CBZ X10, 0x3625428
	0x0362527C LDR X10, [X10 + 0x20]
	0x03625280 STR X10, [X8 + 0x30]
	0x03625284 LDR X10, [X9 + 0x58]
	0x03625288 CBZ X10, 0x3625428
	0x0362528C LDR X10, [X10 + 0x20]
	0x03625290 STR X10, [X8 + 0x38]
	0x03625294 LDR X10, [X9 + 0x50]
	0x03625298 CBZ X10, 0x3625428
	0x0362529C LDR X10, [X10 + 0x20]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0xDBC000
	009 Move X22, 0xAD1000
	010 Move W8, [X23+1191]
	011 Move X22, [X22+2600]
	012 Move X19, X2
	013 Move X21, X1
	014 Move X20, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {24}
	019 Move X0, 0xAD1000
	020 Move X0, [X0+2600]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X23+1191], W8
	024 Move X0, [X22]
	025 Move [X31+8], X31
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 Add X2, X31, 8
	031 Move W1, 300
	032 Move X0, X21
	033 Call Uri.TryCreate, X0, X1, X2
	034 Move TEMP, X0
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfNotEqual {46}
	038 Move X21, [X31+8]
	039 Compare X21, 0
	040 JumpIfEqual {66}
	041 Move X8, [X21+32]
	042 Compare X8, 0
	043 JumpIfEqual {48}
	044 Move [X19], X21
	045 Move W0, 1
	046 Move W0, W31
	047 Move [X19], X31
	048 Move X0, [X22]
	049 Move W8, [X0+224]
	050 Compare W8, 0
	051 JumpIfNotEqual {53}
	052 Call 0x1C17DFC
	053 Move X0, X20
	054 Move X1, X21
	055 Move X2, X19
	056 Call Uri.TryCreate, X0, X1, X2
	057 Move X20, [X31+48]
	058 Move X19, [X31+56]
	059 Move X22, [X31+32]
	060 Move X21, [X31+40]
	061 Move X30, [X31+16]
	062 Move X23, [X31+24]
	063 And W0, W0, 1
	064 Add X31, X31, 64
	065 Return X0
	066 Call 0x1C17F20

Method: System.Boolean TryCreate(System.Uri baseUri, System.Uri relativeUri, out System.Uri result)

Disassembly:
	0x036252A0 STR X10, [X8 + 0x40]
	0x036252A4 LDR X10, [X9 + 0x48]
	0x036252A8 CBZ X10, 0x3625428
	0x036252AC LDR X10, [X10 + 0x20]
	0x036252B0 STR X10, [X8 + 0x48]
	0x036252B4 LDR X10, [X9 + 0x78]
	0x036252B8 CBZ X10, 0x3625428
	0x036252BC LDR X10, [X10 + 0x20]
	0x036252C0 STR X10, [X8 + 0x50]
	0x036252C4 LDR X9, [X9 + 0x80]
	0x036252C8 CBZ X9, 0x3625428
	0x036252CC ADRP X10, 0xB0E000
	0x036252D0 ADRP X19, 0xB16000
	0x036252D4 ADRP X25, 0xAD8000
	0x036252D8 LDR X10, [X10 + 0xB48]
	0x036252DC LDR X19, [X19 + 0x2B8]
	0x036252E0 LDR X25, [X25 + 0xFF8]
	0x036252E4 LDR X9, [X9 + 0x20]
	0x036252E8 ADRP X26, 0xB16000
	0x036252EC ADRP X27, 0xAD9000
	0x036252F0 ADRP X24, 0xAF5000
	0x036252F4 LDR X26, [X26 + 0x2B0]
	0x036252F8 LDR X27, [X27]
	0x036252FC LDR X24, [X24 + 0x1D0]
	0x03625300 STR X9, [X8 + 0x58]
	0x03625304 LDR X9, [X10]
	0x03625308 ADRP X22, 0xAD7000
	0x0362530C ADRP X23, 0xB16000
	0x03625310 ADRP X21, 0xB16000
	0x03625314 LDR X22, [X22 + 0x8D8]
	0x03625318 LDR X23, [X23 + 0x2A0]
	0x0362531C LDR X21, [X21 + 0x2A8]
	0x03625320 STR X9, [X8 + 0x60]
	0x03625324 BL 0x1C16D44
	0x03625328 LDR X8, [X20]
	0x0362532C MOV X1, X31
	0x03625330 LDR X8, [X8 + 0xB8]
	0x03625334 STR W31, [X8 + 0x6C]
	0x03625338 LDR X0, [X19]
	0x0362533C BL 0x33C19D0
	0x03625340 LDR X1, [X25]
	0x03625344 MOV X2, X31
	0x03625348 BL 0x321BA08
	0x0362534C MOV W19, W0
	0x03625350 BL 0x1C16D44
	0x03625354 LDR X8, [X20]
	0x03625358 ORN W9, W31, W19, 0x0
	0x0362535C AND W9, W9, 0x1
	0x03625360 MOV X1, X31
	0x03625364 LDR X8, [X8 + 0xB8]
	0x03625368 STRB W9, [X8 + 0x70]
	0x0362536C LDR X0, [X26]
	0x03625370 BL 0x33C19D0
	0x03625374 LDR X1, [X27]
	0x03625378 MOV X2, X31
	0x0362537C BL 0x321BA08
	0x03625380 LDR X8, [X20]
	0x03625384 AND W9, W0, 0x1
	0x03625388 LDR X8, [X8 + 0xB8]
	0x0362538C STRB W9, [X8 + 0x71]
	0x03625390 LDR X0, [X24]
	0x03625394 LDR W9, [X0 + 0xE0]
	0x03625398 CBNZ W9, 0x36253AC
	0x0362539C BL 0x1C16DFC
	0x036253A0 LDR X8, [X20]
	0x036253A4 LDR X0, [X24]
	0x036253A8 LDR X8, [X8 + 0xB8]
	0x036253AC LDR X9, [X0 + 0xB8]
	0x036253B0 MOVZ W1, 0x10
	0x036253B4 LDRH W9, [X9 + 0xA]
	0x036253B8 CMP W9, 0x5C
	0x036253BC CSET W9, EQ
	0x036253C0 STRB W9, [X8 + 0x72]
	0x036253C4 LDR X0, [X22]
	0x036253C8 BL 0x1C16D6C
	0x036253CC LDR X1, [X23]
	0x036253D0 MOV X2, X31
	0x036253D4 MOV X19, X0
	0x036253D8 BL 0x32C5BD8
	0x036253DC LDR X8, [X20]
	0x036253E0 MOVZ W1, 0x4
	0x036253E4 LDR X8, [X8 + 0xB8]
	0x036253E8 STR X19, [X8 + 0x80]
	0x036253EC LDR X0, [X22]
	0x036253F0 BL 0x1C16D6C
	0x036253F4 LDR X1, [X21]
	0x036253F8 MOV X2, X31
	0x036253FC MOV X19, X0
	0x03625400 BL 0x32C5BD8
	0x03625404 LDR X8, [X20]
	0x03625408 LDP X22, X21, [X31 + 0x30]
	0x0362540C LDP X24, X23, [X31 + 0x20]
	0x03625410 LDP X26, X25, [X31 + 0x10]
	0x03625414 LDR X8, [X8 + 0xB8]
	0x03625418 STR X19, [X8 + 0x88]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+32], X22
	004 Move [X31+40], X21
	005 Move [X31+48], X20
	006 Move [X31+56], X19
	007 Move X22, 0xDBC000
	008 Move W8, [X22+1192]
	009 Move X19, X2
	010 Move X20, X1
	011 Move X21, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xAD1000
	017 Move X0, [X0+2600]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+1192], W8
	021 Move W0, W31
	022 Move [X31+24], X31
	023 Move [X19], X31
	024 Compare X21, 0
	025 JumpIfEqual {71}
	026 Compare X20, 0
	027 JumpIfEqual {71}
	028 Move X0, [X21+32]
	029 Compare X0, 0
	030 JumpIfEqual {71}
	031 Move X1, X31
	032 Move [X31+8], X31
	033 Call UriParser.get_IsSimple, X0
	034 Move TEMP, X0
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfNotEqual {57}
	038 Move X9, 0xAD1000
	039 Move W8, [X20+48]
	040 Move X9, [X9+2600]
	041 Move W8, W8
	042 ShiftRight W8, 19
	043 And W8, W8, 0x7FFFF
	044 Move X0, [X9]
	045 Move [X31+4], W8
	046 Move W8, [X0+224]
	047 Compare W8, 0
	048 JumpIfNotEqual {50}
	049 Call 0x1C17DFC
	050 Add X2, X31, 8
	051 Add X3, X31, 4
	052 Add X4, X31, 24
	053 Move X0, X21
	054 Move X1, X20
	055 Call Uri.ResolveHelper, X0, X1, X2, X3, X4
	056 Move [X19], X0
	057 Move [X31+4], W31
	058 Move X0, [X21+32]
	059 Compare X0, 0
	060 JumpIfEqual {116}
	061 Add X3, X31, 24
	062 Move X1, X21
	063 Move X2, X20
	064 Move X4, X31
	065 Call UriParser.InternalResolve, X0, X1, X2, X3
	066 Move [X31+8], X0
	067 Move X8, [X31+24]
	068 Compare X8, 0
	069 JumpIfEqual {78}
	070 Move W0, W31
	071 Move X20, [X31+48]
	072 Move X19, [X31+56]
	073 Move X22, [X31+32]
	074 Move X21, [X31+40]
	075 Move X30, [X31+16]
	076 Add X31, X31, 64
	077 Return X0
	078 Move X20, [X19]
	079 Compare X20, 0
	080 JumpIfEqual {96}
	081 Move X8, 0xAD1000
	082 Move X8, [X8+2600]
	083 Move X0, [X8]
	084 Move W8, [X0+224]
	085 Compare W8, 0
	086 JumpIfNotEqual {88}
	087 Call 0x1C17DFC
	088 Compare X20, 0
	089 JumpIfEqual {70}
	090 Move X8, [X19]
	091 Compare X8, 0
	092 JumpIfEqual {116}
	093 Move X8, [X8+32]
	094 NotImplemented "Instruction CMP not yet implemented."
	095 NotImplemented "Instruction CSET not yet implemented."
	096 Move X8, 0xAD1000
	097 Move X8, [X8+2600]
	098 Move X20, [X31+8]
	099 Move W21, [X31+4]
	100 Move X0, [X8]
	101 Move W8, [X0+224]
	102 Compare W8, 0
	103 JumpIfNotEqual {105}
	104 Call 0x1C17DFC
	105 NotImplemented "Instruction CMP not yet implemented."
	106 NotImplemented "Instruction CSET not yet implemented."
	107 Add X3, X31, 24
	108 Move W2, 1
	109 Move X0, X20
	110 Call Uri.CreateHelper, X0, X1, X2, X3
	111 Move [X19], X0
	112 Move X8, [X31+24]
	113 Compare X8, 0
	114 JumpIfNotEqual {70}
	115 Move X20, X0
	116 Call 0x1C17F20

Method: System.String GetComponents(System.UriComponents components, System.UriFormat format)

Disassembly:
	0x03621B04 MOV W26, W31
	0x03621B08 TBZ X22, 0x2, 0x3621794
	0x03621B0C LDR X8, [X20 + 0x30]
	0x03621B10 AND X9, X8, 0x7FFFF
	0x03621B14 CMP X9, 0x50000
	0x03621B18 B.NE 0x3621794
	0x03621B1C CMP W21, 0x2
	0x03621B20 B.NE 0x3621D50
	0x03621B24 MOVZ W26, 0xA
	0x03621B28 B 0x3621794
	0x03621B2C CMP W21, 0x1
	0x03621B30 B.NE 0x3621CD8
	0x03621B34 LDRB W8, [X20 + 0x32]
	0x03621B38 LDR X26, [X20 + 0x10]
	0x03621B3C TBNZ X8, 0x3, 0x3621D60
	0x03621B40 ADRP X8, 0xB1A000
	0x03621B44 LDR X8, [X8 + 0x58]
	0x03621B48 LDR X0, [X8]
	0x03621B4C LDR W8, [X0 + 0xE0]
	0x03621B50 CBNZ W8, 0x3621B58
	0x03621B54 BL 0x1C16DFC
	0x03621B58 MOVZ W8, 0x25
	0x03621B5C ADD X4, X31, 0x2C
	0x03621B60 MOVZ W5, 0x1
	0x03621B64 MOVZ W6, 0x23
	0x03621B68 MOVZ W7, 0xFFFF
	0x03621B6C MOV X0, X26
	0x03621B70 MOV W1, W25
	0x03621B74 MOV W2, W24
	0x03621B78 MOV X3, X19
	0x03621B7C STR X31, [X31 + 0x8]
	0x03621B80 STRH W8, [X31]
	0x03621B84 BL 0x362A9E0
	0x03621B88 MOV X19, X0
	0x03621B8C TBZ X23, 0x6, 0x3621EE8
	0x03621B90 LDR X9, [X20 + 0x38]
	0x03621B94 CBZ X9, 0x3621F68
	0x03621B98 LDRH W8, [X9 + 0x34]
	0x03621B9C LDRH W24, [X9 + 0x36]
	0x03621BA0 CMP W8, W24
	0x03621BA4 B.CS 0x3621EE8
	0x03621BA8 CMP W23, 0x40
	0x03621BAC B.EQ 0x3621BD8
	0x03621BB0 LDRSW X9, [X31 + 0x2C]
	0x03621BB4 ADD W10, W9, 0x1
	0x03621BB8 STR W10, [X31 + 0x2C]
	0x03621BBC CBZ X19, 0x3621F68
	0x03621BC0 LDR W10, [X19 + 0x18]
	0x03621BC4 CMP W9, W10
	0x03621BC8 B.CS 0x3621F6C
	0x03621BCC ADD X9, X19, X9, 0x1, LSL
	0x03621BD0 MOVZ W10, 0x23
	0x03621BD4 STRH W10, [X9 + 0x20]
	0x03621BD8 ADD W23, W8, 0x1
	0x03621BDC TBNZ X22, 0x6, 0x3621C38
	0x03621BE0 ADRP X8, 0xB1A000
	0x03621BE4 LDR X8, [X8 + 0x58]
	0x03621BE8 LDR X21, [X20 + 0x10]
	0x03621BEC LDR X0, [X8]
	0x03621BF0 LDR W8, [X0 + 0xE0]
	0x03621BF4 LDR X20, [X20 + 0x20]
	0x03621BF8 CBNZ W8, 0x3621C00
	0x03621BFC BL 0x1C16DFC
	0x03621C00 ADD X4, X31, 0x2C
	0x03621C04 MOVZ W5, 0xFFFF
	0x03621C08 MOVZ W6, 0xFFFF
	0x03621C0C MOVZ W7, 0xFFFF
	0x03621C10 MOV X0, X21
	0x03621C14 MOV W1, W23
	0x03621C18 MOV W2, W24
	0x03621C1C MOV X3, X19
	0x03621C20 STR X31, [X31 + 0x18]
	0x03621C24 STRB W31, [X31 + 0x10]
	0x03621C28 STR X20, [X31 + 0x8]
	0x03621C2C STR W31, [X31]
	0x03621C30 BL 0x362B208
	0x03621C34 B 0x3621EE8
	0x03621C38 CMP W21, 0x1
	0x03621C3C B.NE 0x3621D14
	0x03621C40 LDRB W8, [X20 + 0x32]
	0x03621C44 LDR X21, [X20 + 0x10]
	0x03621C48 TBNZ X8, 0x3, 0x3621D6C
	0x03621C4C ADRP X8, 0xB1A000
	0x03621C50 LDR X8, [X8 + 0x48]
	0x03621C54 LDR X0, [X8]
	0x03621C58 LDR W8, [X0 + 0xE0]
	0x03621C5C CBNZ W8, 0x3621C64
	0x03621C60 BL 0x1C16DFC
	0x03621C64 MOV X0, X31
	0x03621C68 BL 0x362BC9C
	0x03621C6C ADRP X9, 0xB1A000
	0x03621C70 LDR X9, [X9 + 0x58]
	0x03621C74 MOV W8, W0
	0x03621C78 ANDS W31, W8, 0x1
	0x03621C7C MOVZ W8, 0x23
	0x03621C80 LDR X0, [X9]
	0x03621C84 CSINV W20, W8, W31, NE
	0x03621C88 LDR W9, [X0 + 0xE0]
	0x03621C8C CBNZ W9, 0x3621C94
	0x03621C90 BL 0x1C16DFC
	0x03621C94 MOVZ W8, 0x25
	0x03621C98 ADD X4, X31, 0x2C
	0x03621C9C MOVZ W5, 0x1
	0x03621CA0 MOVZ W7, 0xFFFF
	0x03621CA4 MOV X0, X21
	0x03621CA8 MOV W1, W23
	0x03621CAC MOV W2, W24
	0x03621CB0 MOV X3, X19
	0x03621CB4 MOV W6, W20
	0x03621CB8 STR X31, [X31 + 0x8]
	0x03621CBC STRH W8, [X31]
	0x03621CC0 BL 0x362A9E0
	0x03621CC4 B 0x3621EE4
	0x03621CC8 MOV W2, W31

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Or W8, W31, 0x80000001
	007 Move W20, W1
	008 NotImplemented "Instruction CMP not yet implemented."
	009 Move W19, W2
	010 NotImplemented "Instruction CMP not yet implemented."
	011 Move X21, X0
	012 Move X0, [X0+32]
	013 Compare X0, 0
	014 JumpIfEqual {31}
	015 Move X1, X31
	016 Call UriParser.get_IsSimple, X0
	017 Move TEMP, X0
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfNotEqual {42}
	021 Move X0, X21
	022 Move W1, W20
	023 Move W2, W19
	024 Move X20, [X31+32]
	025 Move X19, [X31+40]
	026 Move X30, [X31+16]
	027 Move X21, [X31+24]
	028 Add X31, X31, 48
	029 Call Uri.GetComponentsHelper, X0, X1, X2
	030 Return X0
	031 Move W8, 0x80000000
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move X0, X21
	034 Move W1, W19
	035 Move X20, [X31+32]
	036 Move X19, [X31+40]
	037 Move X30, [X31+16]
	038 Move X21, [X31+24]
	039 Add X31, X31, 48
	040 Call Uri.GetRelativeSerializationString, X0, X1
	041 Return X0
	042 Move X0, [X21+32]
	043 Compare X0, 0
	044 JumpIfEqual {127}
	045 Move X1, X21
	046 Move W2, W20
	047 Move W3, W19
	048 Move X20, [X31+32]
	049 Move X19, [X31+40]
	050 Move X30, [X31+16]
	051 Move X21, [X31+24]
	052 Move X4, X31
	053 Add X31, X31, 48
	054 Call UriParser.InternalGetComponents, X0, X1, X2, X3
	055 Return X0
	056 Move [X31+12], W20
	057 Move X0, 0xB1B000
	058 Move X0, [X0+568]
	059 Call 0x1C17D08
	060 Add X1, X31, 12
	061 Call 0x1C17E04
	062 Move X19, X0
	063 Move X0, 0xB1B000
	064 Move X0, [X0+576]
	065 Call 0x1C17D08
	066 Move X1, X31
	067 Call SR.GetString, X0
	068 Move X20, X0
	069 Move X0, 0xADB000
	070 Move X0, [X0+1888]
	071 Call 0x1C17D08
	072 Call 0x1C17F10
	073 Move X21, X0
	074 Move X0, 0xB1B000
	075 Move X0, [X0+584]
	076 Call 0x1C17D08
	077 Move X1, X0
	078 Move X0, X21
	079 Move X2, X19
	080 Move X3, X20
	081 Move X4, X31
	082 Call ArgumentOutOfRangeException..ctor, X0, X1, X2, X3
	083 Move X0, 0xB1B000
	084 Move X0, [X0+592]
	085 Call 0x1C17D08
	086 Move X1, X0
	087 Move X0, X21
	088 Call 0x1C17DEC
	089 Move X0, 0xADB000
	090 Move X0, [X0+1888]
	091 Call 0x1C17D08
	092 Call 0x1C17F10
	093 Move X19, X0
	094 Move X0, 0xB02000
	095 Move X0, [X0+160]
	096 Call 0x1C17D08
	097 Move X1, X0
	098 Move X0, X19
	099 Move X2, X31
	100 Call ArgumentOutOfRangeException..ctor, X0, X1
	101 Move X0, 0xB1B000
	102 Move X0, [X0+592]
	103 Call 0x1C17D08
	104 Move X1, X0
	105 Move X0, X19
	106 Call 0x1C17DEC
	107 Move X0, 0xB1B000
	108 Move X0, [X0+336]
	109 Call 0x1C17D08
	110 Move X1, X31
	111 Call SR.GetString, X0
	112 Move X19, X0
	113 Move X0, 0xAD3000
	114 Move X0, [X0+1456]
	115 Call 0x1C17D08
	116 Call 0x1C17F10
	117 Move X1, X19
	118 Move X2, X31
	119 Move X20, X0
	120 Call InvalidOperationException..ctor, X0, X1
	121 Move X0, 0xB1B000
	122 Move X0, [X0+592]
	123 Call 0x1C17D08
	124 Move X1, X0
	125 Move X0, X20
	126 Call 0x1C17DEC
	127 Call 0x1C17F20

Method: System.Boolean IsWellFormedOriginalString()

Disassembly:
	0x03625638 ADRP X0, 0xB14000
	0x0362563C LDR X0, [X0 + 0x788]
	0x03625640 BL 0x1C16CF4
	0x03625644 MOVZ W8, 0x1
	0x03625648 STRB W8, [X19 + 0x4B4]
	0x0362564C MOV X0, X31
	0x03625650 BL 0x31FD670
	0x03625654 CBZ X0, 0x362568C
	0x03625658 ADRP X9, 0xB14000
	0x0362565C LDR X9, [X9 + 0x788]
	0x03625660 LDR X8, [X0]
	0x03625664 LDR X1, [X9]
	0x03625668 LDRB W10, [X8 + 0x130]
	0x0362566C LDRB W9, [X1 + 0x130]
	0x03625670 CMP W10, W9
	0x03625674 B.CC 0x3625694
	0x03625678 LDR X8, [X8 + 0xC8]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, [X0+32]
	005 Compare X0, 0
	006 JumpIfEqual {13}
	007 Move X1, X31
	008 Call UriParser.get_IsSimple, X0
	009 Move TEMP, X0
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfNotEqual {16}
	013 Move X0, X19
	014 Move X30, [X31+16]
	015 Move X19, [X31+24]
	016 Move X0, [X19+32]
	017 Compare X0, 0
	018 JumpIfEqual {25}
	019 Move X1, X19
	020 Move X2, X31
	021 Move X30, [X31+16]
	022 Move X19, [X31+24]
	023 Call UriParser.InternalIsWellFormedOriginalString, X0, X1
	024 Return X0
	025 Call 0x1C17F20

Method: System.Boolean IsWellFormedUriString(System.String uriString, System.UriKind uriKind)

Disassembly:
	0x03625AE4 MOV X1, X20
	0x03625AE8 MOV X2, X21
	0x03625AEC LDP X9, X5, [X8 + 0x1E8]
	0x03625AF0 MOV X4, X19
	0x03625AF4 BLR X9
	0x03625AF8 STR X0, [X20 + 0x58]
	0x03625AFC LDP X20, X19, [X31 + 0x30]
	0x03625B00 LDP X22, X21, [X31 + 0x20]
	0x03625B04 LDP X24, X23, [X31 + 0x10]
	0x03625B08 LDR X30, [X31], #0x40
	0x03625B0C RET
	0x03625B10 MOV X0, X23
	0x03625B14 BL 0x1C171E0
	0x03625B18 BL 0x1C16F20
	0x03625B1C MOV X1, X31
	0x03625B20 B 0x33BDD8C
	0x03625B24 STP X30, X23, [X31 - 0x30]!
	0x03625B28 STP X22, X21, [X31 + 0x10]
	0x03625B2C STP X20, X19, [X31 + 0x20]
	0x03625B30 MOV W22, W4
	0x03625B34 MOV W19, W3
	0x03625B38 MOV X20, X2
	0x03625B3C MOV X21, X1
	0x03625B40 MOV X23, X0
	0x03625B44 BL 0x36255A8
	0x03625B48 LDR X0, [X23 + 0x58]
	0x03625B4C CBZ X0, 0x3625B74
	0x03625B50 AND W4, W22, 0x1
	0x03625B54 MOV X1, X21
	0x03625B58 MOV X2, X20
	0x03625B5C MOV W3, W19
	0x03625B60 LDP X20, X19, [X31 + 0x20]
	0x03625B64 LDP X22, X21, [X31 + 0x10]
	0x03625B68 MOV X5, X31
	0x03625B6C LDP X30, X23, [X31], #0x30
	0x03625B70 B 0x35EACF4
	0x03625B74 BL 0x1C16F20
	0x03625B78 STP X30, X25, [X31 - 0x40]!
	0x03625B7C STP X24, X23, [X31 + 0x10]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xDBC000
	007 Move X21, 0xAD1000
	008 Move W8, [X22+1193]
	009 Move X21, [X21+2600]
	010 Move W20, W1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xAD1000
	017 Move X0, [X0+2600]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+1193], W8
	021 Move X0, [X21]
	022 Move [X31+8], X31
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Move W9, 300
	025 Move W8, [X0+224]
	026 NotImplemented "Instruction CSEL not yet implemented."
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 Add X2, X31, 8
	031 Move X0, X19
	032 Move W1, W20
	033 Call Uri.TryCreate, X0, X1, X2
	034 Move TEMP, X0
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfNotEqual {42}
	038 Move X0, [X31+8]
	039 Compare X0, 0
	040 JumpIfEqual {50}
	041 Call Uri.IsWellFormedOriginalString, X0
	042 Move W0, W31
	043 Move X20, [X31+32]
	044 Move X19, [X31+40]
	045 Move X22, [X31+16]
	046 Move X21, [X31+24]
	047 And W0, W0, 1
	048 Move X30, [X31+48]
	049 Return X0
	050 Call 0x1C17F20

Method: System.Boolean InternalIsWellFormedOriginalString()

Disassembly:
	0x0362567C ADD X8, X8, X9, 0x3, LSL
	0x03625680 LDUR X8, [X8 - 0x8]
	0x03625684 CMP X8, X1
	0x03625688 B.NE 0x3625694
	0x0362568C LDP X30, X19, [X31], #0x10
	0x03625690 RET
	0x03625694 BL 0x1C171E0
	0x03625698 MOV W2, W31
	0x0362569C B 0x36256A0
	0x036256A0 STP X30, X21, [X31 - 0x20]!
	0x036256A4 STP X20, X19, [X31 + 0x10]
	0x036256A8 AND W21, W2, 0x1
	0x036256AC MOV W2, W21
	0x036256B0 MOV X3, X31
	0x036256B4 MOV X20, X1
	0x036256B8 MOV X19, X0
	0x036256BC BL 0x36DDEF8
	0x036256C0 BL 0x3625628
	0x036256C4 STR X0, [X19 + 0x38]
	0x036256C8 MOV X0, X31
	0x036256CC BL 0x31FD854
	0x036256D0 LDR X8, [X19 + 0x38]
	0x036256D4 STR X0, [X19 + 0x40]
	0x036256D8 CBZ X8, 0x362570C
	0x036256DC LDR X9, [X8]
	0x036256E0 MOV X4, X0
	0x036256E4 MOV X0, X8
	0x036256E8 MOV X1, X19
	0x036256EC LDP X10, X5, [X9 + 0x1E8]
	0x036256F0 MOV X2, X20
	0x036256F4 MOV W3, W21
	0x036256F8 BLR X10
	0x036256FC STR X0, [X19 + 0x58]
	0x03625700 LDP X20, X19, [X31 + 0x10]
	0x03625704 LDP X30, X21, [X31], #0x20
	0x03625708 RET
	0x0362570C BL 0x1C16F20
	0x03625710 AND W2, W2, 0x1
	0x03625714 MOV X4, X31
	0x03625718 B 0x362571C
	0x0362571C STP X30, X23, [X31 - 0x30]!
	0x03625720 STP X22, X21, [X31 + 0x10]
	0x03625724 STP X20, X19, [X31 + 0x20]
	0x03625728 AND W21, W2, 0x1
	0x0362572C MOV X23, X3
	0x03625730 MOV W2, W21
	0x03625734 MOV X3, X31
	0x03625738 MOV X22, X4
	0x0362573C MOV X20, X1
	0x03625740 MOV X19, X0
	0x03625744 BL 0x36DDEF8
	0x03625748 BL 0x3625628
	0x0362574C STR X0, [X19 + 0x38]
	0x03625750 MOV X0, X31
	0x03625754 BL 0x31FD854
	0x03625758 STR X0, [X19 + 0x40]
	0x0362575C MOV X0, X19
	0x03625760 MOV X1, X23
	0x03625764 BL 0x36257B0
	0x03625768 MOV X0, X19
	0x0362576C MOV X1, X22
	0x03625770 BL 0x3625888
	0x03625774 LDR X0, [X19 + 0x38]
	0x03625778 CBZ X0, 0x36257AC
	0x0362577C LDR X8, [X0]
	0x03625780 LDR X4, [X19 + 0x40]
	0x03625784 MOV X1, X19
	0x03625788 MOV X2, X20
	0x0362578C LDP X9, X5, [X8 + 0x1E8]
	0x03625790 MOV W3, W21
	0x03625794 BLR X9
	0x03625798 STR X0, [X19 + 0x58]
	0x0362579C LDP X20, X19, [X31 + 0x20]
	0x036257A0 LDP X22, X21, [X31 + 0x10]
	0x036257A4 LDP X30, X23, [X31], #0x30
	0x036257A8 RET
	0x036257AC BL 0x1C16F20
	0x036257B0 STR X30, [X31 - 0x20]!
	0x036257B4 STP X20, X19, [X31 + 0x10]
	0x036257B8 MOV X19, X0
	0x036257BC LDR X0, [X0 + 0x48]
	0x036257C0 CBZ X0, 0x362585C
	0x036257C4 CBZ X1, 0x36257D4
	0x036257C8 MOV X2, X31
	0x036257CC BL 0x33C6118
	0x036257D0 TBNZ X0, 0x0, 0x36257F4
	0x036257D4 LDR X8, [X19 + 0x40]
	0x036257D8 CBZ X8, 0x3625884
	0x036257DC LDR X8, [X8 + 0x10]
	0x036257E0 LDRB W9, [X19 + 0x60]
	0x036257E4 CMP X8, 0x0
	0x036257E8 CSET W8, NE
	0x036257EC ANDS W31, W8, W9, 0x0
	0x036257F0 B.EQ 0x3625878
	0x036257F4 ADRP X0, 0xB16000
	0x036257F8 LDR X0, [X0 + 0x2D0]
	0x036257FC BL 0x1C16D08
	0x03625800 MOV X19, X0
	0x03625804 ADRP X0, 0xB16000
	0x03625808 LDR X0, [X0 + 0x2D8]
	0x0362580C BL 0x1C16D08
	0x03625810 MOV X1, X0
	0x03625814 MOV X0, X19
	0x03625818 MOV X2, X31
	0x0362581C BL 0x32094D4
	0x03625820 MOV X19, X0
	0x03625824 ADRP X0, 0xACE000
	0x03625828 LDR X0, [X0 + 0x5B0]
	0x0362582C BL 0x1C16D08
	0x03625830 BL 0x1C16F10
	0x03625834 MOV X1, X19
	0x03625838 MOV X2, X31
	0x0362583C MOV X20, X0
	0x03625840 BL 0x337DF1C
	0x03625844 ADRP X0, 0xB16000
	0x03625848 LDR X0, [X0 + 0x2E0]
	0x0362584C BL 0x1C16D08
	0x03625850 MOV X1, X0
	0x03625854 MOV X0, X20
	0x03625858 BL 0x1C16DEC
	0x0362585C LDR X20, [X19 + 0x40]
	0x03625860 STR X1, [X19 + 0x48]
	0x03625864 MOV X0, X1
	0x03625868 MOV X1, X31
	0x0362586C BL 0x35EF16C
	0x03625870 CBZ X20, 0x3625884
	0x03625874 STR X0, [X20 + 0x10]
	0x03625878 LDP X20, X19, [X31 + 0x10]
	0x0362587C LDR X30, [X31], #0x20
	0x03625880 RET
	0x03625884 BL 0x1C16F20
	0x03625888 STR X30, [X31 - 0x30]!
	0x0362588C STP X22, X21, [X31 + 0x10]
	0x03625890 STP X20, X19, [X31 + 0x20]
	0x03625894 ADRP X21, 0xDBB000
	0x03625898 ADRP X22, 0xB16000
	0x0362589C LDRB W8, [X21 + 0x4B6]
	0x036258A0 LDR X22, [X22 + 0x2E8]
	0x036258A4 MOV X20, X1
	0x036258A8 MOV X19, X0
	0x036258AC TBNZ X8, 0x0, 0x36258DC
	0x036258B0 ADRP X0, 0xB15000
	0x036258B4 LDR X0, [X0 + 0x170]
	0x036258B8 BL 0x1C16CF4
	0x036258BC ADRP X0, 0xB16000
	0x036258C0 LDR X0, [X0 + 0x2F0]
	0x036258C4 BL 0x1C16CF4
	0x036258C8 ADRP X0, 0xB16000
	0x036258CC LDR X0, [X0 + 0x2E8]
	0x036258D0 BL 0x1C16CF4
	0x036258D4 MOVZ W8, 0x1
	0x036258D8 STRB W8, [X21 + 0x4B6]
	0x036258DC LDR X0, [X22]
	0x036258E0 BL 0x1C16F10
	0x036258E4 MOV X1, X31
	0x036258E8 MOV X21, X0
	0x036258EC BL 0x33BDD8C
	0x036258F0 CBZ X21, 0x36259F0
	0x036258F4 STP X20, X19, [X21 + 0x10]
	0x036258F8 LDR X0, [X19 + 0x50]
	0x036258FC CBZ X0, 0x3625994
	0x03625900 CBZ X20, 0x3625914
	0x03625904 MOV X1, X20
	0x03625908 MOV X2, X31
	0x0362590C BL 0x33C6118
	0x03625910 TBNZ X0, 0x0, 0x362592C
	0x03625914 LDRB W8, [X19 + 0x60]
	0x03625918 CBZ W8, 0x36259E0
	0x0362591C LDR X8, [X19 + 0x40]
	0x03625920 CBZ X8, 0x36259F0
	0x03625924 LDR X8, [X8 + 0x18]
	0x03625928 CBZ X8, 0x36259E0
	0x0362592C ADRP X0, 0xB16000
	0x03625930 LDR X0, [X0 + 0x2D0]
	0x03625934 BL 0x1C16D08
	0x03625938 MOV X19, X0
	0x0362593C ADRP X0, 0xB16000
	0x03625940 LDR X0, [X0 + 0x2F8]
	0x03625944 BL 0x1C16D08
	0x03625948 MOV X1, X0
	0x0362594C MOV X0, X19
	0x03625950 MOV X2, X31
	0x03625954 BL 0x32094D4
	0x03625958 MOV X19, X0
	0x0362595C ADRP X0, 0xACE000
	0x03625960 LDR X0, [X0 + 0x5B0]
	0x03625964 BL 0x1C16D08
	0x03625968 BL 0x1C16F10
	0x0362596C MOV X1, X19
	0x03625970 MOV X2, X31
	0x03625974 MOV X20, X0
	0x03625978 BL 0x337DF1C
	0x0362597C ADRP X0, 0xB16000
	0x03625980 LDR X0, [X0 + 0x300]
	0x03625984 BL 0x1C16D08
	0x03625988 MOV X1, X0
	0x0362598C MOV X0, X20
	0x03625990 BL 0x1C16DEC
	0x03625994 LDR X22, [X19 + 0x40]
	0x03625998 STR X20, [X19 + 0x50]
	0x0362599C CBZ X20, 0x36259D8
	0x036259A0 ADRP X8, 0xB15000
	0x036259A4 LDR X8, [X8 + 0x170]
	0x036259A8 LDR X0, [X8]
	0x036259AC BL 0x1C16F10
	0x036259B0 ADRP X8, 0xB16000
	0x036259B4 LDR X8, [X8 + 0x2F0]
	0x036259B8 MOV X1, X21
	0x036259BC MOV X3, X31
	0x036259C0 MOV X19, X0
	0x036259C4 LDR X2, [X8]
	0x036259C8 BL 0x31FD5B4
	0x036259CC CBZ X22, 0x36259F0
	0x036259D0 STR X19, [X22 + 0x18]
	0x036259D4 B 0x36259E0
	0x036259D8 CBZ X22, 0x36259F0
	0x036259DC STR X31, [X22 + 0x18]
	0x036259E0 LDP X20, X19, [X31 + 0x20]
	0x036259E4 LDP X22, X21, [X31 + 0x10]
	0x036259E8 LDR X30, [X31], #0x30
	0x036259EC RET
	0x036259F0 BL 0x1C16F20
	0x036259F4 STR X30, [X31 - 0x40]!
	0x036259F8 STP X24, X23, [X31 + 0x10]
	0x036259FC STP X22, X21, [X31 + 0x20]
	0x03625A00 STP X20, X19, [X31 + 0x30]
	0x03625A04 ADRP X24, 0xDBB000
	0x03625A08 LDRB W8, [X24 + 0x4B5]
	0x03625A0C MOV X19, X4
	0x03625A10 MOV X23, X3
	0x03625A14 MOV W22, W2
	0x03625A18 MOV X21, X1
	0x03625A1C MOV X20, X0
	0x03625A20 TBNZ X8, 0x0, 0x3625A38
	0x03625A24 ADRP X0, 0xB14000
	0x03625A28 LDR X0, [X0 + 0x788]
	0x03625A2C BL 0x1C16CF4
	0x03625A30 MOVZ W8, 0x1
	0x03625A34 STRB W8, [X24 + 0x4B5]
	0x03625A38 AND W2, W22, 0x1
	0x03625A3C MOV X0, X20
	0x03625A40 MOV X1, X21
	0x03625A44 MOV X3, X31
	0x03625A48 BL 0x36DDEF8
	0x03625A4C CBZ X23, 0x3625AB0
	0x03625A50 ADRP X8, 0xB14000
	0x03625A54 LDR X8, [X8 + 0x788]
	0x03625A58 LDR X9, [X23]
	0x03625A5C LDR X1, [X8]
	0x03625A60 LDRB W10, [X9 + 0x130]
	0x03625A64 LDRB W8, [X1 + 0x130]
	0x03625A68 CMP W10, W8
	0x03625A6C B.CC 0x3625B10
	0x03625A70 LDR X10, [X9 + 0xC8]
	0x03625A74 SUB X9, X8, 0x1
	0x03625A78 LDR X10, [X10, X9, LSL #3]
	0x03625A7C CMP X10, X1
	0x03625A80 B.NE 0x3625B10
	0x03625A84 STR X23, [X20 + 0x38]
	0x03625A88 LDR X10, [X23]
	0x03625A8C LDRB W11, [X10 + 0x130]
	0x03625A90 CMP W11, W8
	0x03625A94 B.CC 0x3625B10
	0x03625A98 LDR X8, [X10 + 0xC8]
	0x03625A9C LDR X8, [X8, X9, LSL #3]
	0x03625AA0 CMP X8, X1
	0x03625AA4 B.NE 0x3625B10
	0x03625AA8 CBNZ X19, 0x3625AB8
	0x03625AAC B 0x3625B18
	0x03625AB0 STR X23, [X20 + 0x38]
	0x03625AB4 CBZ X19, 0x3625B18
	0x03625AB8 MOV X0, X19
	0x03625ABC MOV X1, X31
	0x03625AC0 BL 0x31FD86C
	0x03625AC4 MOV X8, X0
	0x03625AC8 LDR X0, [X20 + 0x38]
	0x03625ACC STR X8, [X20 + 0x40]
	0x03625AD0 MOVZ W8, 0x1
	0x03625AD4 STRB W8, [X20 + 0x60]
	0x03625AD8 CBZ X0, 0x3625B18
	0x03625ADC LDR X8, [X0]
	0x03625AE0 AND W3, W22, 0x1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xDBC000
	007 Move W8, [X20+1194]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0xB17000
	014 Move X0, [X0+72]
	015 Call 0x1C17CF4
	016 Move X0, 0xAD1000
	017 Move X0, [X0+2600]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X20+1194], W8
	021 Move W8, [X19+51]
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {269}
	026 Move X20, [X19+16]
	027 Compare X20, 0
	028 JumpIfEqual {32}
	029 Move X0, X31
	030 Call RuntimeHelpers.get_OffsetToStringData
	031 Add X20, X20, W0
	032 NotImplemented "Instruction STRH not yet implemented."
	033 Move X8, [X19+32]
	034 Compare X8, 0
	035 JumpIfEqual {164}
	036 Move X8, [X19+48]
	037 Move TEMP, X8
	038 And TEMP, TEMP, 0x20000000
	039 Compare TEMP, 0x20000000
	040 JumpIfEqual {236}
	041 Move TEMP, X8
	042 And TEMP, TEMP, -2147483648
	043 Compare TEMP, -2147483648
	044 JumpIfEqual {48}
	045 Move X0, X19
	046 Call Uri.ParseRemaining, X0
	047 Move X8, [X19+48]
	048 Move W9, 0x1C80
	049 And X31, X8, X9
	050 Move W9, [X19+64]
	051 Compare W9, 0
	052 JumpIfEqual {236}
	053 Move X9, 2048
	054 NotImplemented "Instruction MOVK not yet implemented."
	055 NotImplemented "Instruction BICS not yet implemented."
	056 And X9, X8, 0x8000000080
	057 Or X10, X31, 0x8000000080
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Move X9, 1024
	060 NotImplemented "Instruction MOVK not yet implemented."
	061 And X10, X8, X9
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Move X9, 4096
	064 NotImplemented "Instruction MOVK not yet implemented."
	065 And X10, X8, X9
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Move TEMP, X8
	068 And TEMP, TEMP, 0x100000
	069 Compare TEMP, 0x100000
	070 JumpIfEqual {204}
	071 Move TEMP, X8
	072 And TEMP, TEMP, 0x4000
	073 Compare TEMP, 0x4000
	074 JumpIfNotEqual {81}
	075 Move X9, [X19+56]
	076 Compare X9, 0
	077 JumpIfEqual {316}
	078 NotImplemented "Instruction LDRH not yet implemented."
	079 NotImplemented "Instruction LDRH not yet implemented."
	080 NotImplemented "Instruction CMP not yet implemented."
	081 Move TEMP, X8
	082 And TEMP, TEMP, 0x8000
	083 Compare TEMP, 0x8000
	084 JumpIfEqual {236}
	085 Move TEMP, X8
	086 And TEMP, TEMP, 0x8000000
	087 Compare TEMP, 0x8000000
	088 JumpIfNotEqual {106}
	089 Move X8, [X19+56]
	090 Compare X8, 0
	091 JumpIfEqual {316}
	092 Move X21, [X19+16]
	093 NotImplemented "Instruction LDRH not yet implemented."
	094 Move X0, X19
	095 Call Uri.get_SecuredPathIndex, X0
	096 Compare X21, 0
	097 JumpIfEqual {316}
	098 Add W8, W22, W0
	099 Subtract W1, W8, 1
	100 Move X0, X21
	101 Move X2, X31
	102 Call String.get_Chars, X0, X1
	103 And W8, W0, 0xFFFF
	104 NotImplemented "Instruction CMP not yet implemented."
	105 Move X8, [X19+48]
	106 Move TEMP, X8
	107 And TEMP, TEMP, 0x2000000
	108 Compare TEMP, 0x2000000
	109 JumpIfEqual {133}
	110 And X8, X8, 0x7FFFF
	111 NotImplemented "Instruction CMP not yet implemented."
	112 Move X8, [X19+56]
	113 Compare X8, 0
	114 JumpIfEqual {316}
	115 NotImplemented "Instruction LDRH not yet implemented."
	116 Add X2, X31, 12
	117 Move W4, 47
	118 Move X0, X19
	119 NotImplemented "Instruction STRH not yet implemented."
	120 NotImplemented "Instruction LDRH not yet implemented."
	121 Move X1, X20
	122 Call Uri.CheckCanonical, X0, X1, X2, X3, X4
	123 Move W8, 49
	124 And W8, W0, W8
	125 NotImplemented "Instruction CMP not yet implemented."
	126 Move W8, 74
	127 And W8, W0, W8
	128 NotImplemented "Instruction CMP not yet implemented."
	129 Move W0, W31
	130 Move W8, [X19+64]
	131 Compare W8, 0
	132 JumpIfEqual {237}
	133 Move W8, [X19+48]
	134 Move W9, 1
	135 NotImplemented "Instruction MOVK not yet implemented."
	136 NotImplemented "Instruction ORN not yet implemented."
	137 And X31, X8, X9
	138 Move X8, [X19+32]
	139 Compare X8, 0
	140 JumpIfEqual {316}
	141 Move X8, [X8+32]
	142 Compare X8, 0
	143 JumpIfEqual {316}
	144 Move W9, [X8+16]
	145 Add W8, W9, 1
	146 NotImplemented "Instruction STRH not yet implemented."
	147 And X9, X9, 0xFFFF
	148 NotImplemented "Instruction LDRH not yet implemented."
	149 NotImplemented "Instruction CMP not yet implemented."
	150 Move W9, W8
	151 Move X9, [X19+16]
	152 Compare X9, 0
	153 JumpIfEqual {316}
	154 Move W10, [X9+16]
	155 And W9, W8, 0xFFFF
	156 Add W9, W9, 1
	157 NotImplemented "Instruction CMP not yet implemented."
	158 And X8, X8, 0xFFFF
	159 NotImplemented "Instruction LDRH not yet implemented."
	160 NotImplemented "Instruction CMP not yet implemented."
	161 NotImplemented "Instruction LDRH not yet implemented."
	162 NotImplemented "Instruction CMP not yet implemented."
	163 Move W0, 1
	164 Move X8, 0xB17000
	165 Move X8, [X8+72]
	166 Move X0, [X8]
	167 Move W8, [X0+224]
	168 Compare W8, 0
	169 JumpIfNotEqual {171}
	170 Call 0x1C17DFC
	171 Move X0, X31
	172 Call UriParser.get_ShouldUseLegacyV2Quirks
	173 Move TEMP, X0
	174 And TEMP, TEMP, 1
	175 Compare TEMP, 1
	176 JumpIfEqual {191}
	177 Move X8, 0xAD1000
	178 Move X8, [X8+2600]
	179 Move X21, [X19+16]
	180 Move X0, [X8]
	181 Move W8, [X0+224]
	182 Compare W8, 0
	183 JumpIfNotEqual {185}
	184 Call 0x1C17DFC
	185 Move X0, X21
	186 Call Uri.CheckForColonInFirstPathSegment, X0
	187 Move TEMP, X0
	188 And TEMP, TEMP, 1
	189 Compare TEMP, 1
	190 JumpIfEqual {236}
	191 Move X8, [X19+16]
	192 Compare X8, 0
	193 JumpIfEqual {316}
	194 Move W3, [X8+16]
	195 Add X2, X31, 12
	196 Move W4, 0xFFFE
	197 Move X0, X19
	198 Move X1, X20
	199 Call Uri.CheckCanonical, X0, X1, X2, X3, X4
	200 Move W8, 17
	201 And W8, W0, W8
	202 NotImplemented "Instruction CMP not yet implemented."
	203 NotImplemented "Instruction CSET not yet implemented."
	204 Move X8, [X19+56]
	205 Compare X8, 0
	206 JumpIfEqual {316}
	207 Move X9, [X19+32]
	208 Compare X9, 0
	209 JumpIfEqual {316}
	210 Move X9, [X9+32]
	211 Compare X9, 0
	212 JumpIfEqual {316}
	213 NotImplemented "Instruction LDRH not yet implemented."
	214 Move W9, [X9+16]
	215 NotImplemented "Instruction LDRH not yet implemented."
	216 Add W9, W10, W9
	217 Add W22, W9, 2
	218 And W21, W22, 0xFFFF
	219 NotImplemented "Instruction CMP not yet implemented."
	220 Move X0, [X19+16]
	221 Compare X0, 0
	222 JumpIfEqual {316}
	223 Subtract W1, W21, 1
	224 Move X2, X31
	225 Call String.get_Chars, X0, X1
	226 And W8, W0, 0xFFFF
	227 NotImplemented "Instruction CMP not yet implemented."
	228 Move X0, [X19+16]
	229 Compare X0, 0
	230 JumpIfEqual {316}
	231 Move W1, W21
	232 Move X2, X31
	233 Call String.get_Chars, X0, X1
	234 And W8, W0, 0xFFFF
	235 NotImplemented "Instruction CMP not yet implemented."
	236 Move W0, W31
	237 Move X20, [X31+32]
	238 Move X19, [X31+40]
	239 Move X22, [X31+16]
	240 Move X21, [X31+24]
	241 Move X30, [X31+48]
	242 Return X0
	243 Move X8, [X19+48]
	244 And X31, X8, 0x1FFFFFFF
	245 Move X9, [X19+56]
	246 Compare X9, 0
	247 JumpIfEqual {316}
	248 NotImplemented "Instruction LDRH not yet implemented."
	249 Add W10, W22, 1
	250 And W21, W10, 0xFFFF
	251 NotImplemented "Instruction CMP not yet implemented."
	252 Move X0, [X19+16]
	253 Compare X0, 0
	254 JumpIfEqual {316}
	255 Move W1, W21
	256 Move X2, X31
	257 Call String.get_Chars, X0, X1
	258 And W8, W0, 0xFFFF
	259 NotImplemented "Instruction CMP not yet implemented."
	260 Move X0, [X19+16]
	261 Compare X0, 0
	262 JumpIfEqual {316}
	263 Move W1, W21
	264 Move X2, X31
	265 Call String.get_Chars, X0, X1
	266 And W8, W0, 0xFFFF
	267 NotImplemented "Instruction CMP not yet implemented."
	268 Move X8, [X19+48]
	269 Move X0, 0xACF000
	270 Move X0, [X0+2512]
	271 Call 0x1C17D08
	272 Move W1, 1
	273 Call 0x1C17D6C
	274 Move X20, X0
	275 Move X0, X19
	276 Move X1, X31
	277 Call "il2cpp_vm_object_is_inst", X0
	278 Move X19, X0
	279 Call 0x19913C0
	280 Move X8, [X19]
	281 Move X0, X19
	282 Move X9, [X8+744]
	283 Move X1, [X8+752]
	284 NotImplemented "Instruction BLR not yet implemented."
	285 Move X19, X0
	286 Move X0, X20
	287 Call 0x19913C0
	288 Move X0, X20
	289 Move X1, X19
	290 Call 0x19990B4
	291 Move X0, X20
	292 Move X1, X31
	293 Move X2, X19
	294 Call 0x1994444
	295 Move X0, 0xB17000
	296 Move X0, [X0+616]
	297 Call 0x1C17D08
	298 Move X1, X20
	299 Move X2, X31
	300 Call SR.GetString, X0, X1
	301 Move X19, X0
	302 Move X0, 0xACF000
	303 Move X0, [X0+1456]
	304 Call 0x1C17D08
	305 Call 0x1C17F10
	306 Move X1, X19
	307 Move X2, X31
	308 Move X20, X0
	309 Call InvalidOperationException..ctor, X0, X1
	310 Move X0, 0xB17000
	311 Move X0, [X0+624]
	312 Call 0x1C17D08
	313 Move X1, X0
	314 Move X0, X20
	315 Call 0x1C17DEC
	316 Call 0x1C17F20

Method: System.String UnescapeDataString(System.String stringToUnescape)

Disassembly:
	0x03625B80 STP X22, X21, [X31 + 0x20]
	0x03625B84 STP X20, X19, [X31 + 0x30]
	0x03625B88 MOV X19, X6
	0x03625B8C MOV X20, X5
	0x03625B90 MOV W24, W4
	0x03625B94 MOV W21, W3
	0x03625B98 MOV X22, X2
	0x03625B9C MOV X23, X1
	0x03625BA0 MOV X25, X0
	0x03625BA4 BL 0x36255A8
	0x03625BA8 LDR X0, [X25 + 0x58]
	0x03625BAC CBZ X0, 0x3625BE8
	0x03625BB0 AND W4, W24, 0x1
	0x03625BB4 MOV X1, X23
	0x03625BB8 MOV X2, X22
	0x03625BBC MOV W3, W21
	0x03625BC0 MOV X5, X31
	0x03625BC4 BL 0x35EB25C
	0x03625BC8 MOV X1, X20
	0x03625BCC MOV X2, X19
	0x03625BD0 LDP X20, X19, [X31 + 0x30]
	0x03625BD4 LDP X22, X21, [X31 + 0x20]
	0x03625BD8 LDP X24, X23, [X31 + 0x10]
	0x03625BDC MOV X3, X31
	0x03625BE0 LDP X30, X25, [X31], #0x40
	0x03625BE4 B 0x33ED028
	0x03625BE8 BL 0x1C16F20
	0x03625BEC MOV X0, X1
	0x03625BF0 MOV X1, X31
	0x03625BF4 B 0x33ED2B0
	0x03625BF8 STP X30, X23, [X31 - 0x30]!
	0x03625BFC STP X22, X21, [X31 + 0x10]
	0x03625C00 STP X20, X19, [X31 + 0x20]
	0x03625C04 MOV W21, W4
	0x03625C08 MOV W19, W3
	0x03625C0C MOV W22, W2
	0x03625C10 MOV X20, X1
	0x03625C14 MOV X23, X0
	0x03625C18 BL 0x36255A8
	0x03625C1C LDR X0, [X23 + 0x58]
	0x03625C20 CBZ X0, 0x3625C48
	0x03625C24 AND W2, W22, 0x1
	0x03625C28 AND W4, W21, 0x1
	0x03625C2C MOV X1, X20
	0x03625C30 MOV W3, W19
	0x03625C34 LDP X20, X19, [X31 + 0x20]
	0x03625C38 LDP X22, X21, [X31 + 0x10]
	0x03625C3C MOV X5, X31
	0x03625C40 LDP X30, X23, [X31], #0x30
	0x03625C44 B 0x35EB020
	0x03625C48 BL 0x1C16F20
	0x03625C4C STP X30, X23, [X31 - 0x30]!
	0x03625C50 STP X22, X21, [X31 + 0x10]
	0x03625C54 STP X20, X19, [X31 + 0x20]
	0x03625C58 MOV W22, W4
	0x03625C5C MOV W19, W3
	0x03625C60 MOV X20, X2
	0x03625C64 MOV X21, X1
	0x03625C68 MOV X23, X0
	0x03625C6C BL 0x36255A8
	0x03625C70 LDR X0, [X23 + 0x58]
	0x03625C74 CBZ X0, 0x3625C9C
	0x03625C78 AND W4, W22, 0x1
	0x03625C7C MOV X1, X21
	0x03625C80 MOV X2, X20
	0x03625C84 MOV W3, W19
	0x03625C88 LDP X20, X19, [X31 + 0x20]
	0x03625C8C LDP X22, X21, [X31 + 0x10]
	0x03625C90 MOV X5, X31
	0x03625C94 LDP X30, X23, [X31], #0x30
	0x03625C98 B 0x35EB25C
	0x03625C9C BL 0x1C16F20
	0x03625CA0 STP X30, X19, [X31 - 0x10]!
	0x03625CA4 MOV X19, X0
	0x03625CA8 BL 0x36255A8
	0x03625CAC LDR X0, [X19 + 0x58]
	0x03625CB0 CBZ X0, 0x3625CC8
	0x03625CB4 LDR X8, [X0]
	0x03625CB8 LDR X2, [X8 + 0x3B8]
	0x03625CBC LDR X1, [X8 + 0x3C0]
	0x03625CC0 LDP X30, X19, [X31], #0x10
	0x03625CC4 BR X2
	0x03625CC8 BL 0x1C16F20
	0x03625CCC STP X30, X19, [X31 - 0x10]!
	0x03625CD0 MOV X19, X0
	0x03625CD4 BL 0x36255A8
	0x03625CD8 LDR X0, [X19 + 0x58]
	0x03625CDC CBZ X0, 0x3625CEC
	0x03625CE0 MOV X1, X31
	0x03625CE4 LDP X30, X19, [X31], #0x10
	0x03625CE8 B 0x35EBD1C
	0x03625CEC BL 0x1C16F20
	0x03625CF0 MOV W0, W31
	0x03625CF4 RET
	0x03625CF8 LDR X0, [X0 + 0x58]
	0x03625CFC CBZ X0, 0x3625D0C
	0x03625D00 LDR X8, [X0]
	0x03625D04 LDP X2, X1, [X8 + 0x1A8]
	0x03625D08 BR X2
	0x03625D0C RET
	0x03625D10 STR X30, [X31 - 0x10]!
	0x03625D14 LDR X0, [X0 + 0x28]
	0x03625D18 CBZ X0, 0x3625D2C
	0x03625D1C LDR X8, [X0]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+56], X21
	004 Move [X31+64], X20
	005 Move [X31+72], X19
	006 Move X20, 0xDBC000
	007 Move W8, [X20+1195]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {24}
	013 Move X0, 0xAD8000
	014 Move X0, [X0+2264]
	015 Call 0x1C17CF4
	016 Move X0, 0xAD1000
	017 Move X0, [X0+632]
	018 Call 0x1C17CF4
	019 Move X0, 0xB17000
	020 Move X0, [X0+88]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X20+1195], W8
	024 Compare X19, 0
	025 JumpIfEqual {91}
	026 Move W8, [X19+16]
	027 Compare W8, 0
	028 JumpIfEqual {41}
	029 Move X0, X31
	030 Call RuntimeHelpers.get_OffsetToStringData
	031 NotImplemented "Instruction LDRSW not yet implemented."
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move X9, W0
	034 Move X8, X31
	035 Add X9, X19, X9
	036 NotImplemented "Instruction LDRH not yet implemented."
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Add X8, X8, 1
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Add X9, X9, 2
	041 Move X8, 0xAD1000
	042 Move X8, [X8+632]
	043 Move X8, [X8]
	044 Move X8, [X8+184]
	045 Move X19, [X8]
	046 Move W8, W31
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Move X8, 0xAD8000
	049 Move X8, [X8+2264]
	050 Move [X31+44], W31
	051 Move X0, [X8]
	052 Call 0x1C17D6C
	053 Move X8, 0xB17000
	054 Move X8, [X8+88]
	055 Move W21, [X19+16]
	056 Move X20, X0
	057 Move X8, [X8]
	058 Move W9, [X8+224]
	059 Compare W9, 0
	060 JumpIfNotEqual {63}
	061 Move X0, X8
	062 Call 0x1C17DFC
	063 Move W8, 10
	064 Add X4, X31, 44
	065 Move W5, 0xFFFF
	066 Move W6, 0xFFFF
	067 Move W7, 0xFFFF
	068 Move X0, X19
	069 Move W1, W31
	070 Move W2, W21
	071 Move X3, X20
	072 Move [X31+24], X31
	073 Move [X31+16], W31
	074 Move [X31+8], X31
	075 Move [X31], W8
	076 Call UriHelper.UnescapeString, X0, X1, X2, X3, X4, X5, X6, X7, X8, X9, X10
	077 Move W3, [X31+44]
	078 Move X1, X0
	079 Move X0, X31
	080 Move W2, W31
	081 Move X4, X31
	082 Call String.CreateString, X0, X1, X2, X3
	083 Move X19, X0
	084 Move X0, X19
	085 Move X20, [X31+64]
	086 Move X19, [X31+72]
	087 Move X30, [X31+48]
	088 Move X21, [X31+56]
	089 Add X31, X31, 80
	090 Return X0
	091 Move X0, 0xAD4000
	092 Move X0, [X0+1320]
	093 Call 0x1C17D08
	094 Call 0x1C17F10
	095 Move X19, X0
	096 Move X0, 0xB17000
	097 Move X0, [X0+632]
	098 Call 0x1C17D08
	099 Move X1, X0
	100 Move X0, X19
	101 Move X2, X31
	102 Call ArgumentNullException..ctor, X0, X1
	103 Move X0, 0xB17000
	104 Move X0, [X0+640]
	105 Call 0x1C17D08
	106 Move X1, X0
	107 Move X0, X19
	108 Call 0x1C17DEC

Method: System.String EscapeDataString(System.String stringToEscape)

Disassembly:
	0x03625D20 LDP X2, X1, [X8 + 0x1C8]
	0x03625D24 LDR X30, [X31], #0x10
	0x03625D28 BR X2
	0x03625D2C BL 0x1C16F20
	0x03625D30 LDR X0, [X0 + 0x58]
	0x03625D34 CBZ X0, 0x3625D44
	0x03625D38 LDR X8, [X0]
	0x03625D3C LDP X2, X1, [X8 + 0x1D8]
	0x03625D40 BR X2
	0x03625D44 RET
	0x03625D48 STP X30, X19, [X31 - 0x10]!
	0x03625D4C MOV X19, X0
	0x03625D50 BL 0x36255A8
	0x03625D54 LDR X0, [X19 + 0x58]
	0x03625D58 CBZ X0, 0x3625D70
	0x03625D5C LDR X8, [X0]
	0x03625D60 LDR X2, [X8 + 0x218]
	0x03625D64 LDR X1, [X8 + 0x220]
	0x03625D68 LDP X30, X19, [X31], #0x10
	0x03625D6C BR X2
	0x03625D70 BL 0x1C16F20
	0x03625D74 STR X30, [X31 - 0x20]!
	0x03625D78 STP X20, X19, [X31 + 0x10]
	0x03625D7C MOV W19, W1
	0x03625D80 MOV X20, X0
	0x03625D84 BL 0x36255A8
	0x03625D88 LDR X0, [X20 + 0x58]
	0x03625D8C CBZ X0, 0x3625DAC
	0x03625D90 LDR X8, [X0]
	0x03625D94 MOV W1, W19
	0x03625D98 LDP X20, X19, [X31 + 0x10]
	0x03625D9C LDR X3, [X8 + 0x228]
	0x03625DA0 LDR X2, [X8 + 0x230]
	0x03625DA4 LDR X30, [X31], #0x20
	0x03625DA8 BR X3
	0x03625DAC BL 0x1C16F20
	0x03625DB0 STP X30, X19, [X31 - 0x10]!
	0x03625DB4 MOV X19, X0
	0x03625DB8 BL 0x36255A8
	0x03625DBC LDR X0, [X19 + 0x58]
	0x03625DC0 CBZ X0, 0x3625DD8
	0x03625DC4 LDR X8, [X0]
	0x03625DC8 LDR X2, [X8 + 0x238]
	0x03625DCC LDR X1, [X8 + 0x240]
	0x03625DD0 LDP X30, X19, [X31], #0x10
	0x03625DD4 BR X2
	0x03625DD8 BL 0x1C16F20
	0x03625DDC STR X30, [X31 - 0x20]!
	0x03625DE0 STP X20, X19, [X31 + 0x10]
	0x03625DE4 MOV W19, W1
	0x03625DE8 MOV X20, X0
	0x03625DEC BL 0x36255A8
	0x03625DF0 LDR X0, [X20 + 0x58]
	0x03625DF4 CBZ X0, 0x3625E14
	0x03625DF8 LDR X8, [X0]
	0x03625DFC MOV W1, W19
	0x03625E00 LDP X20, X19, [X31 + 0x10]
	0x03625E04 LDR X3, [X8 + 0x248]
	0x03625E08 LDR X2, [X8 + 0x250]
	0x03625E0C LDR X30, [X31], #0x20
	0x03625E10 BR X3
	0x03625E14 BL 0x1C16F20
	0x03625E18 STP X30, X19, [X31 - 0x10]!
	0x03625E1C MOV X19, X0
	0x03625E20 BL 0x36255A8
	0x03625E24 LDR X0, [X19 + 0x58]
	0x03625E28 CBZ X0, 0x3625E3C
	0x03625E2C LDR X8, [X0]
	0x03625E30 LDP X2, X1, [X8 + 0x1E8]
	0x03625E34 LDP X30, X19, [X31], #0x10
	0x03625E38 BR X2
	0x03625E3C BL 0x1C16F20
	0x03625E40 STP X30, X19, [X31 - 0x10]!
	0x03625E44 MOV X19, X0

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+32], X20
	004 Move [X31+40], X19
	005 Move X20, 0xDBC000
	006 Move W8, [X20+1196]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0xAD1000
	013 Move X0, [X0+632]
	014 Call 0x1C17CF4
	015 Move X0, 0xB17000
	016 Move X0, [X0+88]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+1196], W8
	020 Compare X19, 0
	021 JumpIfEqual {65}
	022 Move W20, [X19+16]
	023 Compare W20, 0
	024 JumpIfEqual {54}
	025 Move X8, 0xB17000
	026 Move X8, [X8+88]
	027 Move [X31+28], W31
	028 Move X0, [X8]
	029 Move W8, [X0+224]
	030 Compare W8, 0
	031 JumpIfNotEqual {33}
	032 Call 0x1C17DFC
	033 Move W8, 0xFFFF
	034 Add X4, X31, 28
	035 Move W6, 0xFFFF
	036 Move W7, 0xFFFF
	037 Move X0, X19
	038 Move W1, W31
	039 Move W2, W20
	040 Move X3, X31
	041 Move W5, W31
	042 Move [X31+8], X31
	043 NotImplemented "Instruction STRH not yet implemented."
	044 Call UriHelper.EscapeString, X0, X1, X2, X3, X4, X5, X6, X7, X8
	045 Compare X0, 0
	046 JumpIfEqual {59}
	047 Move W3, [X31+28]
	048 Move X1, X0
	049 Move X0, X31
	050 Move W2, W31
	051 Move X4, X31
	052 Call String.CreateString, X0, X1, X2, X3
	053 Move X19, X0
	054 Move X8, 0xAD1000
	055 Move X8, [X8+632]
	056 Move X8, [X8]
	057 Move X8, [X8+184]
	058 Move X19, [X8]
	059 Move X0, X19
	060 Move X20, [X31+32]
	061 Move X19, [X31+40]
	062 Move X30, [X31+16]
	063 Add X31, X31, 48
	064 Return X0
	065 Move X0, 0xAD4000
	066 Move X0, [X0+1320]
	067 Call 0x1C17D08
	068 Call 0x1C17F10
	069 Move X19, X0
	070 Move X0, 0xB17000
	071 Move X0, [X0+648]
	072 Call 0x1C17D08
	073 Move X1, X0
	074 Move X0, X19
	075 Move X2, X31
	076 Call ArgumentNullException..ctor, X0, X1
	077 Move X0, 0xB17000
	078 Move X0, [X0+656]
	079 Call 0x1C17D08
	080 Move X1, X0
	081 Move X0, X19
	082 Call 0x1C17DEC

Method: System.String EscapeUnescapeIri(System.String input, System.Int32 start, System.Int32 end, System.UriComponents component)

Disassembly:
	0x036236A4 RET
	0x036236A8 MOVN W8, 0x200D
	0x036236AC ADD W8, W0, W8
	0x036236B0 AND W9, W8, 0xFFFF
	0x036236B4 CMP W9, 0x20
	0x036236B8 B.HI 0x36236D0
	0x036236BC ORR X9, X31, 0x1FFFFFFFF
	0x036236C0 MOVK X9, 0x3
	0x036236C4 LSRV X8, X9, X8
	0x036236C8 AND W0, W8, 0x1
	0x036236CC RET
	0x036236D0 MOV W0, W31
	0x036236D4 RET
	0x036236D8 STR X30, [X31 - 0x40]!
	0x036236DC STP X24, X23, [X31 + 0x10]
	0x036236E0 STP X22, X21, [X31 + 0x20]
	0x036236E4 STP X20, X19, [X31 + 0x30]
	0x036236E8 ADRP X23, 0xDBD000
	0x036236EC LDRB W8, [X23 + 0x4A3]
	0x036236F0 MOV X19, X3

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move W19, W4
	007 Move W20, W3
	008 Move W21, W2
	009 Move X22, X1
	010 Compare X1, 0
	011 JumpIfEqual {15}
	012 Move X0, X31
	013 Call RuntimeHelpers.get_OffsetToStringData
	014 Add X22, X22, W0
	015 Move X0, X22
	016 Move W1, W21
	017 Move W2, W20
	018 Move W3, W19
	019 Move X20, [X31+32]
	020 Move X19, [X31+40]
	021 Move X22, [X31+16]
	022 Move X21, [X31+24]
	023 Move X4, X31
	024 Move X30, [X31+48]
	025 Call IriHelper.EscapeUnescapeIri, X0, X1, X2, X3
	026 Return X0

Method: System.Void .ctor(System.Uri/Flags flags, System.UriParser uriParser, System.String uri)

Disassembly:
	0x03625E48 BL 0x36255A8
	0x03625E4C LDR X0, [X19 + 0x58]
	0x03625E50 CBZ X0, 0x3625E64
	0x03625E54 LDR X8, [X0]
	0x03625E58 LDP X2, X1, [X8 + 0x1F8]
	0x03625E5C LDP X30, X19, [X31], #0x10
	0x03625E60 BR X2
	0x03625E64 BL 0x1C16F20
	0x03625E68 STR X30, [X31 - 0x20]!
	0x03625E6C STP X20, X19, [X31 + 0x10]
	0x03625E70 ADRP X0, 0xB16000
	0x03625E74 LDR X0, [X0 + 0x308]
	0x03625E78 BL 0x1C16D08
	0x03625E7C MOV X1, X31
	0x03625E80 BL 0x320A1E4
	0x03625E84 MOV X19, X0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, X1
	007 Move X1, X31
	008 Move X19, X3
	009 Move X20, X2
	010 Move X22, X0
	011 Call Object..ctor, X0
	012 Move [X22+48], X21
	013 Move [X22+32], X20
	014 Move [X22+16], X19
	015 Move X20, [X31+32]
	016 Move X19, [X31+40]
	017 Move X22, [X31+16]
	018 Move X21, [X31+24]
	019 Move X30, [X31+48]
	020 Return 

Method: System.Uri CreateHelper(System.String uriString, System.Boolean dontEscape, System.UriKind uriKind, ref System.UriFormatException e)

Disassembly:
	0x03624F70 LDR X0, [X0 + 0xA28]
	0x03624F74 BL 0x1C16CF4
	0x03624F78 MOVZ W8, 0x1
	0x03624F7C STRB W8, [X21 + 0x4B1]
	0x03624F80 STR X31, [X31 + 0x10]
	0x03624F84 LDR X8, [X19 + 0x20]
	0x03624F88 CBZ X8, 0x3625048
	0x03624F8C LDRB W8, [X19 + 0x33]
	0x03624F90 TBNZ X8, 0x0, 0x3625048
	0x03624F94 CBZ X20, 0x3625124
	0x03624F98 LDR X8, [X20 + 0x20]
	0x03624F9C CBZ X8, 0x3625008
	0x03624FA0 LDR X8, [X19 + 0x20]
	0x03624FA4 CBZ X8, 0x3625124
	0x03624FA8 CBZ X20, 0x3625124
	0x03624FAC LDR X9, [X20 + 0x20]
	0x03624FB0 CBZ X9, 0x3625124
	0x03624FB4 LDR X0, [X8 + 0x20]
	0x03624FB8 LDR X1, [X9 + 0x20]
	0x03624FBC MOV X2, X31
	0x03624FC0 BL 0x3226EF8
	0x03624FC4 TBNZ X0, 0x0, 0x3625048
	0x03624FC8 MOVZ W1, 0x3F
	0x03624FCC MOVZ W2, 0x3
	0x03624FD0 MOV X0, X19
	0x03624FD4 BL 0x3620B04
	0x03624FD8 MOV X22, X0
	0x03624FDC MOVZ W1, 0x3F
	0x03624FE0 MOVZ W2, 0x3
	0x03624FE4 MOV X0, X20
	0x03624FE8 BL 0x3620B04
	0x03624FEC MOV X23, X0
	0x03624FF0 CBZ X22, 0x36250AC
	0x03624FF4 MOV X0, X31
	0x03624FF8 BL 0x32C1424
	0x03624FFC CBZ X23, 0x3625124
	0x03625000 ADD X21, X22, W0, SXTW
	0x03625004 B 0x36250B4
	0x03625008 ADRP X21, 0xAD0000
	0x0362500C LDR X21, [X21 + 0xA28]
	0x03625010 STR X31, [X31 + 0x18]
	0x03625014 STRB W31, [X31 + 0xC]
	0x03625018 LDR X0, [X21]
	0x0362501C LDR W8, [X0 + 0xE0]
	0x03625020 CBNZ W8, 0x3625028
	0x03625024 BL 0x1C16DFC
	0x03625028 ADD X2, X31, 0x18
	0x0362502C ADD X3, X31, 0xC
	0x03625030 ADD X4, X31, 0x10
	0x03625034 MOV X0, X19
	0x03625038 MOV X1, X20
	0x0362503C BL 0x3619BBC
	0x03625040 LDR X8, [X31 + 0x10]
	0x03625044 CBZ X8, 0x3625064
	0x03625048 MOV W0, W31
	0x0362504C LDP X20, X19, [X31 + 0x40]
	0x03625050 LDP X22, X21, [X31 + 0x30]
	0x03625054 LDP X30, X23, [X31 + 0x20]
	0x03625058 AND W0, W0, 0x1
	0x0362505C ADD X31, X31, 0x50
	0x03625060 RET
	0x03625064 MOV X20, X0
	0x03625068 CBNZ X0, 0x3624FA0
	0x0362506C LDR X0, [X21]
	0x03625070 LDR X20, [X31 + 0x18]
	0x03625074 LDRB W21, [X31 + 0xC]
	0x03625078 LDR W8, [X0 + 0xE0]
	0x0362507C CBNZ W8, 0x3625084
	0x03625080 BL 0x1C16DFC
	0x03625084 CMP W21, 0x0
	0x03625088 CSET W1, NE
	0x0362508C ADD X3, X31, 0x10
	0x03625090 MOVZ W2, 0x1
	0x03625094 MOV X0, X20
	0x03625098 BL 0x3623F70
	0x0362509C LDR X8, [X31 + 0x10]
	0x036250A0 CBNZ X8, 0x3625048
	0x036250A4 MOV X20, X0
	0x036250A8 B 0x3624FA0
	0x036250AC MOV X21, X22
	0x036250B0 CBZ X23, 0x3625124
	0x036250B4 MOV X0, X31
	0x036250B8 BL 0x32C1424
	0x036250BC CBZ X22, 0x3625124
	0x036250C0 LDRB W8, [X19 + 0x33]
	0x036250C4 LDR W22, [X22 + 0x10]
	0x036250C8 LDR W19, [X23 + 0x10]
	0x036250CC ADD X23, X23, W0, SXTW
	0x036250D0 ANDS W31, W8, 0x18
	0x036250D4 B.EQ 0x36250E0
	0x036250D8 MOVZ W20, 0x1
	0x036250DC B 0x36250EC
	0x036250E0 LDRB W8, [X20 + 0x33]
	0x036250E4 ANDS W31, W8, 0x18
	0x036250E8 CSET W20, NE
	0x036250EC ADRP X8, 0xB16000
	0x036250F0 LDR X8, [X8 + 0x58]
	0x036250F4 LDR X0, [X8]
	0x036250F8 LDR W8, [X0 + 0xE0]
	0x036250FC CBNZ W8, 0x3625104
	0x03625100 BL 0x1C16DFC
	0x03625104 MOV X0, X21
	0x03625108 MOV W1, W22
	0x0362510C MOV X2, X23
	0x03625110 MOV W3, W19
	0x03625114 MOV W4, W20
	0x03625118 MOV X5, X31
	0x0362511C BL 0x362A7E4
	0x03625120 B 0x362504C
	0x03625124 BL 0x1C16F20
	0x03625128 STP X30, X27, [X31 - 0x50]!
	0x0362512C STP X26, X25, [X31 + 0x10]
	0x03625130 STP X24, X23, [X31 + 0x20]
	0x03625134 STP X22, X21, [X31 + 0x30]
	0x03625138 STP X20, X19, [X31 + 0x40]
	0x0362513C ADRP X20, 0xDBB000
	0x03625140 ADRP X19, 0xB16000
	0x03625144 LDRB W8, [X20 + 0x4B2]
	0x03625148 LDR X19, [X19 + 0x48]
	0x0362514C TBNZ X8, 0x0, 0x36251DC
	0x03625150 ADRP X0, 0xAD7000
	0x03625154 LDR X0, [X0 + 0x8D8]
	0x03625158 BL 0x1C16CF4
	0x0362515C ADRP X0, 0xAF5000
	0x03625160 LDR X0, [X0 + 0x1D0]
	0x03625164 BL 0x1C16CF4
	0x03625168 ADRP X0, 0xB16000
	0x0362516C LDR X0, [X0 + 0x2A0]
	0x03625170 BL 0x1C16CF4
	0x03625174 ADRP X0, 0xB16000
	0x03625178 LDR X0, [X0 + 0x2A8]
	0x0362517C BL 0x1C16CF4
	0x03625180 ADRP X0, 0xB16000
	0x03625184 LDR X0, [X0 + 0x48]
	0x03625188 BL 0x1C16CF4
	0x0362518C ADRP X0, 0xAD0000
	0x03625190 LDR X0, [X0 + 0xA28]
	0x03625194 BL 0x1C16CF4
	0x03625198 ADRP X0, 0xB0E000
	0x0362519C LDR X0, [X0 + 0xB48]
	0x036251A0 BL 0x1C16CF4
	0x036251A4 ADRP X0, 0xB16000
	0x036251A8 LDR X0, [X0 + 0x2B0]
	0x036251AC BL 0x1C16CF4
	0x036251B0 ADRP X0, 0xAD8000
	0x036251B4 LDR X0, [X0 + 0xFF8]
	0x036251B8 BL 0x1C16CF4
	0x036251BC ADRP X0, 0xAD9000
	0x036251C0 LDR X0, [X0]
	0x036251C4 BL 0x1C16CF4
	0x036251C8 ADRP X0, 0xB16000
	0x036251CC LDR X0, [X0 + 0x2B8]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+32], X30
	003 Move [X31+40], X25
	004 Move [X31+48], X24
	005 Move [X31+56], X23
	006 Move [X31+64], X22
	007 Move [X31+72], X21
	008 Move [X31+80], X20
	009 Move [X31+88], X19
	010 Move X23, 0xDBD000
	011 Move W8, [X23+1197]
	012 Move X19, X3
	013 Move W21, W2
	014 Move W22, W1
	015 Move X20, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0xAD2000
	021 Move X0, [X0+2600]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X23+1197], W8
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move [X31+24], X31
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Move X23, 0xAD2000
	029 Move X23, [X23+2600]
	030 Move [X31+16], X31
	031 Move [X31+24], X31
	032 Move X0, [X23]
	033 Move W8, [X0+224]
	034 Compare W8, 0
	035 JumpIfNotEqual {37}
	036 Call 0x1C17DFC
	037 Add X1, X31, 16
	038 Add X2, X31, 24
	039 Move X0, X20
	040 Call Uri.ParseScheme, X0, X1, X2
	041 Move TEMP, X22
	042 And TEMP, TEMP, 1
	043 Compare TEMP, 1
	044 JumpIfNotEqual {48}
	045 Move X8, [X31+16]
	046 Or X8, X8, 0xFFFFF
	047 Move [X31+16], X8
	048 Compare W0, 0
	049 JumpIfEqual {63}
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Move X21, X31
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Move X0, [X23]
	054 Move X19, [X31+16]
	055 Call 0x1C17F10
	056 Move X1, X31
	057 Move X21, X0
	058 And X19, X19, 0xFFFFF
	059 Call Object..ctor, X0
	060 Move [X21+48], X19
	061 Move [X21+32], X31
	062 Move [X21+16], X20
	063 Move X0, [X23]
	064 Move X24, [X31+16]
	065 Move X25, [X31+24]
	066 Call 0x1C17F10
	067 Move X1, X31
	068 Move X22, X0
	069 Call Object..ctor, X0
	070 Move [X22+48], X24
	071 Move [X22+32], X25
	072 Move [X22+16], X20
	073 Move X0, X22
	074 Move W1, W31
	075 Move W2, W21
	076 Move X3, X19
	077 Call Uri.InitializeUri, X0, X1, X2, X3
	078 Move X8, [X19]
	079 NotImplemented "Instruction CMP not yet implemented."
	080 NotImplemented "Instruction CSEL not yet implemented."
	081 Move X0, X21
	082 Move X20, [X31+80]
	083 Move X19, [X31+88]
	084 Move X22, [X31+64]
	085 Move X21, [X31+72]
	086 Move X24, [X31+48]
	087 Move X23, [X31+56]
	088 Move X30, [X31+32]
	089 Move X25, [X31+40]
	090 Add X31, X31, 96
	091 Return X0
	092 Move X0, 0xACF000
	093 Move X0, [X0+2512]
	094 Call 0x1C17D08
	095 Move W1, 1
	096 Call 0x1C17D6C
	097 Move X19, X0
	098 Move [X31+12], W21
	099 Move X0, 0xB17000
	100 Move X0, [X0+120]
	101 Call 0x1C17D08
	102 Add X1, X31, 12
	103 Call 0x1C17E04
	104 Move X20, X0
	105 Move X0, X19
	106 Call 0x19913C0
	107 Move X0, X19
	108 Move X1, X20
	109 Call 0x19990B4
	110 Move X0, X19
	111 Move X1, X31
	112 Move X2, X20
	113 Call 0x1994444
	114 Move X0, 0xB17000
	115 Move X0, [X0+128]
	116 Call 0x1C17D08
	117 Move X1, X19
	118 Move X2, X31
	119 Call SR.GetString, X0, X1
	120 Move X19, X0
	121 Move X0, 0xAD7000
	122 Move X0, [X0+1400]
	123 Call 0x1C17D08
	124 Call 0x1C17F10
	125 Move X1, X19
	126 Move X2, X31
	127 Move X20, X0
	128 Call ArgumentException..ctor, X0, X1
	129 Move X0, 0xB17000
	130 Move X0, [X0+600]
	131 Call 0x1C17D08
	132 Move X1, X0
	133 Move X0, X20
	134 Call 0x1C17DEC
	135 NotImplemented "Instruction CMP not yet implemented."
	136 Move X20, X0
	137 Move X0, X20
	138 Call 0x3EB2AD0
	139 Move X20, X0
	140 Move X0, 0xB17000
	141 Move X0, [X0+216]
	142 Call 0x1C17D08
	143 Move X8, [X20]
	144 Move X1, [X8]
	145 Call 0x1C18270
	146 Move TEMP, X0
	147 And TEMP, TEMP, 1
	148 Compare TEMP, 1
	149 JumpIfNotEqual {154}
	150 Move X20, [X20]
	151 Call 0x3EB2AE0
	152 Move X21, X31
	153 Move [X19], X20
	154 Move W0, 8
	155 Call 0x3EB2AF0
	156 Move X8, [X20]
	157 Move [X0], X8
	158 Move X1, 0x890000
	159 Add X1, X1, 3672
	160 Move X2, X31
	161 Call 0x3EB2B00
	162 Move X20, X0
	163 Call 0x3EB2AE0
	164 Move X0, X20
	165 Call 0x1D2D690
	166 Call 0x1991590

Method: System.Uri ResolveHelper(System.Uri baseUri, System.Uri relativeUri, ref System.String newUriString, ref System.Boolean userEscaped, out System.UriFormatException e)

Disassembly:
	0x0361ABBC LDR X8, [X8 + 0x848]
	0x0361ABC0 MOVZ W1, 0x8
	0x0361ABC4 MOVK W1, 0x40000000
	0x0361ABC8 MOV X0, X20
	0x0361ABCC LDR X8, [X8]
	0x0361ABD0 MOV W2, W21
	0x0361ABD4 STR X8, [X22 + 0x38]
	0x0361ABD8 BL 0x3620B04
	0x0361ABDC LDR W8, [X22 + 0x18]
	0x0361ABE0 CMP W8, 0x4
	0x0361ABE4 B.LS 0x361B0C4
	0x0361ABE8 STR X0, [X22 + 0x40]
	0x0361ABEC MOV X0, X22
	0x0361ABF0 MOV X1, X31
	0x0361ABF4 BL 0x32278CC
	0x0361ABF8 B 0x361AC78
	0x0361ABFC MOV X0, X20
	0x0361AC00 BL 0x361C320
	0x0361AC04 TBZ X0, 0x0, 0x361ADC0
	0x0361AC08 MOVZ W8, 0x8
	0x0361AC0C MOVK W8, 0x40000000
	0x0361AC10 ADD W1, W8, 0x8
	0x0361AC14 MOVZ W2, 0x2
	0x0361AC18 MOV X0, X20
	0x0361AC1C BL 0x3620B04
	0x0361AC20 CBZ X0, 0x361B0C0
	0x0361AC24 LDR W8, [X0 + 0x10]
	0x0361AC28 MOV X22, X0
	0x0361AC2C CMP W8, 0x2
	0x0361AC30 B.LT 0x361B004
	0x0361AC34 MOVZ W23, 0x1
	0x0361AC38 MOV X0, X22
	0x0361AC3C MOV W1, W23
	0x0361AC40 MOV X2, X31
	0x0361AC44 BL 0x3222A1C
	0x0361AC48 AND W8, W0, 0xFFFF
	0x0361AC4C CMP W8, 0x2F
	0x0361AC50 B.EQ 0x361AFEC
	0x0361AC54 LDR W8, [X22 + 0x10]
	0x0361AC58 ADD W23, W23, 0x1
	0x0361AC5C CMP W23, W8
	0x0361AC60 B.LT 0x361AC38
	0x0361AC64 B 0x361B004
	0x0361AC68 MOVZ W1, 0xF
	0x0361AC6C MOV X0, X20
	0x0361AC70 MOV W2, W21
	0x0361AC74 BL 0x3620B04
	0x0361AC78 MOV X20, X0
	0x0361AC7C CBZ W23, 0x361ACB0
	0x0361AC80 MOVZ W1, 0x1
	0x0361AC84 MOV X0, X19
	0x0361AC88 MOV X2, X31
	0x0361AC8C BL 0x322B484
	0x0361AC90 ADRP X8, 0xADA000
	0x0361AC94 LDR X8, [X8 + 0xEC8]
	0x0361AC98 MOV X1, X0
	0x0361AC9C MOV X2, X31
	0x0361ACA0 LDR X8, [X8]
	0x0361ACA4 MOV X0, X8
	0x0361ACA8 BL 0x321B938
	0x0361ACAC MOV X19, X0
	0x0361ACB0 MOV X0, X20
	0x0361ACB4 B 0x361ADCC
	0x0361ACB8 MOV W23, W31
	0x0361ACBC LDR W4, [X19 + 0x10]
	0x0361ACC0 MOV X0, X19
	0x0361ACC4 MOV W1, W31
	0x0361ACC8 MOV X2, X22
	0x0361ACCC MOV W3, W23
	0x0361ACD0 MOV X5, X31
	0x0361ACD4 BL 0x322D7E4
	0x0361ACD8 LDR X0, [X20 + 0x20]
	0x0361ACDC CBZ X0, 0x361B0C0
	0x0361ACE0 MOVZ W1, 0x20
	0x0361ACE4 MOV X2, X31
	0x0361ACE8 BL 0x3629044
	0x0361ACEC LDRB W9, [X20 + 0x33]
	0x0361ACF0 ANDS W31, W0, 0x1
	0x0361ACF4 MOVZ W8, 0xFFFF
	0x0361ACF8 MOVZ W10, 0x3F
	0x0361ACFC MOV W24, W0
	0x0361AD00 CSEL W26, W10, W8, NE
	0x0361AD04 TBNZ X9, 0x5, 0x361AD34
	0x0361AD08 LDR X0, [X20 + 0x20]
	0x0361AD0C CBZ X0, 0x361B0C0
	0x0361AD10 MOVZ W1, 0x40
	0x0361AD14 MOV X2, X31
	0x0361AD18 BL 0x3629044
	0x0361AD1C ANDS W31, W0, 0x1
	0x0361AD20 MOVZ W8, 0xFFFF
	0x0361AD24 MOVZ W9, 0x23
	0x0361AD28 EOR W11, W0, 0x1
	0x0361AD2C CSEL W8, W9, W8, NE
	0x0361AD30 B 0x361AD38
	0x0361AD34 MOVZ W11, 0x1
	0x0361AD38 ADRP X9, 0xADB000
	0x0361AD3C LDR X9, [X9 + 0x278]
	0x0361AD40 LDR W10, [X19 + 0x10]
	0x0361AD44 ORN W11, W24, W11, 0x0
	0x0361AD48 LDR X9, [X9]
	0x0361AD4C LDR X9, [X9 + 0xB8]
	0x0361AD50 LDR X9, [X9]
	0x0361AD54 TBZ X11, 0x0, 0x361ADB8
	0x0361AD58 CMP W10, 0x1
	0x0361AD5C B.LT 0x361ADFC
	0x0361AD60 CBZ X22, 0x361B0C0
	0x0361AD64 LDR W11, [X22 + 0x18]
	0x0361AD68 MOV W12, W23
	0x0361AD6C MOV X24, X31
	0x0361AD70 SXTW X10, W10
	0x0361AD74 UBFM X13, X12, 0x20, 0x1F
	0x0361AD78 MOVZ X14, 0x1
	0x0361AD7C ADD X15, X12, X24
	0x0361AD80 CMP X15, X11
	0x0361AD84 B.CS 0x361B0C4
	0x0361AD88 ADD X15, X22, X13, 0x1F, ASR
	0x0361AD8C LDRH W15, [X15 + 0x20]
	0x0361AD90 CMP W26, W15
	0x0361AD94 B.EQ 0x361ADDC
	0x0361AD98 CMP W8, W15
	0x0361AD9C B.EQ 0x361ADDC
	0x0361ADA0 ADD X24, X24, 0x1
	0x0361ADA4 CMP X24, X10
	0x0361ADA8 ADD X13, X13, X14
	0x0361ADAC B.LT 0x361AD7C
	0x0361ADB0 CBZ W24, 0x361ADFC
	0x0361ADB4 MOV W10, W24
	0x0361ADB8 MOV X19, X9
	0x0361ADBC B 0x361AE00
	0x0361ADC0 ADRP X8, 0xB21000
	0x0361ADC4 LDR X8, [X8 + 0xC0]
	0x0361ADC8 LDR X0, [X8]
	0x0361ADCC MOV X1, X19
	0x0361ADD0 MOV X2, X31
	0x0361ADD4 BL 0x321B938
	0x0361ADD8 B 0x361B05C
	0x0361ADDC CBZ W24, 0x361ADFC
	0x0361ADE0 MOV X0, X19
	0x0361ADE4 MOV W1, W24
	0x0361ADE8 MOV X2, X31
	0x0361ADEC BL 0x322B484
	0x0361ADF0 MOV X19, X0
	0x0361ADF4 MOV W10, W24
	0x0361ADF8 B 0x361AE00
	0x0361ADFC MOV W10, W31
	0x0361AE00 ADD W8, W10, W23
	0x0361AE04 STR W8, [X31 + 0xC]
	0x0361AE08 LDR X8, [X20 + 0x30]
	0x0361AE0C AND X9, X8, 0x7FFFF
	0x0361AE10 CMP X9, 0x10000
	0x0361AE14 B.NE 0x361AED0
	0x0361AE18 TBNZ X8, 0x1D, 0x361AEE4
	0x0361AE1C ADRP X8, 0xAD9000
	0x0361AE20 LDR X8, [X8 + 0xAC8]
	0x0361AE24 MOVZ W1, 0x5
	0x0361AE28 LDR X0, [X8]
	0x0361AE2C BL 0x1C16D6C
	0x0361AE30 MOV X23, X0
	0x0361AE34 MOVZ W1, 0x3
	0x0361AE38 MOV X0, X20
	0x0361AE3C MOV W2, W21
	0x0361AE40 BL 0x3620B04
	0x0361AE44 CBZ X23, 0x361B0C0
	0x0361AE48 LDR W8, [X23 + 0x18]
	0x0361AE4C CBZ W8, 0x361B0C4
	0x0361AE50 CMP W8, 0x1
	0x0361AE54 STR X0, [X23 + 0x20]
	0x0361AE58 B.EQ 0x361B0C4
	0x0361AE5C ADRP X8, 0xAD9000
	0x0361AE60 LDR X8, [X8 + 0xEC8]
	0x0361AE64 MOV X0, X20
	0x0361AE68 LDR X8, [X8]
	0x0361AE6C STR X8, [X23 + 0x28]
	0x0361AE70 BL 0x361CFA8
	0x0361AE74 LDR W8, [X23 + 0x18]
	0x0361AE78 CMP W8, 0x2
	0x0361AE7C B.LS 0x361B0C4
	0x0361AE80 CMP W8, 0x3
	0x0361AE84 STR X0, [X23 + 0x30]
	0x0361AE88 B.EQ 0x361B0C4
	0x0361AE8C ADRP X8, 0xAD9000
	0x0361AE90 LDR X8, [X8 + 0x848]
	0x0361AE94 MOVZ W1, 0x8
	0x0361AE98 MOVK W1, 0x40000000
	0x0361AE9C MOV X0, X20
	0x0361AEA0 LDR X8, [X8]
	0x0361AEA4 MOV W2, W21
	0x0361AEA8 STR X8, [X23 + 0x38]
	0x0361AEAC BL 0x3620B04
	0x0361AEB0 LDR W8, [X23 + 0x18]
	0x0361AEB4 CMP W8, 0x4
	0x0361AEB8 B.LS 0x361B0C4
	0x0361AEBC STR X0, [X23 + 0x40]
	0x0361AEC0 MOV X0, X23
	0x0361AEC4 MOV X1, X31
	0x0361AEC8 BL 0x32278CC
	0x0361AECC B 0x361AF80
	0x0361AED0 TBNZ X8, 0x1D, 0x361AF18
	0x0361AED4 MOVZ W1, 0xF
	0x0361AED8 MOV X0, X20
	0x0361AEDC MOV W2, W21
	0x0361AEE0 B 0x361AF7C
	0x0361AEE4 MOV X0, X20
	0x0361AEE8 BL 0x361CFA8
	0x0361AEEC ADRP X8, 0xB21000
	0x0361AEF0 LDR X8, [X8 + 0xC8]
	0x0361AEF4 ADRP X9, 0xAD9000
	0x0361AEF8 LDR X9, [X9 + 0x848]
	0x0361AEFC MOV X1, X0
	0x0361AF00 LDR X8, [X8]
	0x0361AF04 MOV X3, X31
	0x0361AF08 LDR X2, [X9]
	0x0361AF0C MOV X0, X8
	0x0361AF10 BL 0x32274B8
	0x0361AF14 B 0x361AF80
	0x0361AF18 LDR X0, [X25]
	0x0361AF1C LDR W8, [X0 + 0xE0]
	0x0361AF20 CBNZ W8, 0x361AF2C
	0x0361AF24 BL 0x1C16DFC
	0x0361AF28 LDR X0, [X25]
	0x0361AF2C LDR X8, [X0 + 0xB8]
	0x0361AF30 LDRB W8, [X8 + 0x72]
	0x0361AF34 CBZ W8, 0x361AF70
	0x0361AF38 LDRB W8, [X20 + 0x33]
	0x0361AF3C TBNZ X8, 0x3, 0x361B07C
	0x0361AF40 MOVZ W1, 0x4
	0x0361AF44 MOVZ W2, 0x2
	0x0361AF48 MOV X0, X20
	0x0361AF4C BL 0x3620B04
	0x0361AF50 ADRP X8, 0xB0D000
	0x0361AF54 LDR X8, [X8 + 0x4A8]
	0x0361AF58 MOV X1, X0
	0x0361AF5C MOV X2, X31
	0x0361AF60 LDR X8, [X8]
	0x0361AF64 MOV X0, X8
	0x0361AF68 BL 0x321B938
	0x0361AF6C B 0x361AF80
	0x0361AF70 MOVZ W1, 0x4
	0x0361AF74 MOVZ W2, 0x2
	0x0361AF78 MOV X0, X20
	0x0361AF7C BL 0x3620B04
	0x0361AF80 MOV X21, X0
	0x0361AF84 MOV X0, X20
	0x0361AF88 BL 0x3618030
	0x0361AF8C LDR X8, [X25]
	0x0361AF90 LDR X20, [X20 + 0x20]
	0x0361AF94 MOV W23, W0
	0x0361AF98 LDR W9, [X8 + 0xE0]
	0x0361AF9C CBNZ W9, 0x361AFA8
	0x0361AFA0 MOV X0, X8
	0x0361AFA4 BL 0x1C16DFC
	0x0361AFA8 ADD X2, X31, 0xC
	0x0361AFAC MOV X0, X22
	0x0361AFB0 MOV W1, W23
	0x0361AFB4 MOV X3, X20
	0x0361AFB8 BL 0x361C688
	0x0361AFBC LDR W3, [X31 + 0xC]
	0x0361AFC0 MOV X0, X31
	0x0361AFC4 MOV X1, X22
	0x0361AFC8 MOV W2, W31
	0x0361AFCC MOV X4, X31
	0x0361AFD0 BL 0x322EAE4
	0x0361AFD4 MOV X1, X0
	0x0361AFD8 MOV X0, X21
	0x0361AFDC MOV X2, X19
	0x0361AFE0 MOV X3, X31
	0x0361AFE4 BL 0x32274B8
	0x0361AFE8 B 0x361B05C
	0x0361AFEC MOV X0, X22
	0x0361AFF0 MOV W1, W31
	0x0361AFF4 MOV W2, W23
	0x0361AFF8 MOV X3, X31
	0x0361AFFC BL 0x3228DE4
	0x0361B000 MOV X22, X0
	0x0361B004 LDRB W8, [X20 + 0x33]
	0x0361B008 TBNZ X8, 0x5, 0x361B028
	0x0361B00C MOVZ W1, 0x4
	0x0361B010 MOV X0, X20
	0x0361B014 MOV W2, W21
	0x0361B018 BL 0x3620B04
	0x0361B01C ADRP X8, 0xB20000
	0x0361B020 LDR X8, [X8 + 0xC0]
	0x0361B024 B 0x361B040
	0x0361B028 MOVZ W1, 0x4
	0x0361B02C MOVZ W2, 0x2
	0x0361B030 MOV X0, X20
	0x0361B034 BL 0x3620B04
	0x0361B038 ADRP X8, 0xB0C000
	0x0361B03C LDR X8, [X8 + 0x4A8]
	0x0361B040 LDR X8, [X8]
	0x0361B044 MOV X1, X0
	0x0361B048 MOV X2, X22
	0x0361B04C MOV X3, X19
	0x0361B050 MOV X0, X8
	0x0361B054 MOV X4, X31
	0x0361B058 BL 0x32277C4
	0x0361B05C MOV X19, X0
	0x0361B060 MOV X0, X19
	0x0361B064 LDP X20, X19, [X31 + 0x40]
	0x0361B068 LDP X22, X21, [X31 + 0x30]
	0x0361B06C LDP X24, X23, [X31 + 0x20]
	0x0361B070 LDP X26, X25, [X31 + 0x10]
	0x0361B074 LDR X30, [X31], #0x50
	0x0361B078 RET
	0x0361B07C LDR W8, [X0 + 0xE0]
	0x0361B080 LDR X20, [X20 + 0x20]
	0x0361B084 CBNZ W8, 0x361B08C
	0x0361B088 BL 0x1C16DFC
	0x0361B08C ADD X2, X31, 0xC

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0xDC7000
	009 Move W8, [X24+1198]
	010 Move X22, X4
	011 Move X21, X3
	012 Move X19, X2
	013 Move X23, X1
	014 Move X20, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {39}
	019 Move X0, 0xADC000
	020 Move X0, [X0+632]
	021 Call 0x1C17CF4
	022 Move X0, 0xADC000
	023 Move X0, [X0+2600]
	024 Call 0x1C17CF4
	025 Move X0, 0xB22000
	026 Move X0, [X0+168]
	027 Call 0x1C17CF4
	028 Move X0, 0xB1A000
	029 Move X0, [X0+2888]
	030 Call 0x1C17CF4
	031 Move X0, 0xAE3000
	032 Move X0, [X0+2440]
	033 Call 0x1C17CF4
	034 Move X0, 0xB22000
	035 Move X0, [X0+176]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X24+1198], W8
	039 Move [X22], X31
	040 Compare X23, 0
	041 JumpIfEqual {88}
	042 Move X8, [X23+32]
	043 Compare X8, 0
	044 JumpIfEqual {76}
	045 Move X22, 0xADC000
	046 Move X22, [X22+2600]
	047 Move X0, [X22]
	048 Move W8, [X0+224]
	049 Compare W8, 0
	050 JumpIfNotEqual {53}
	051 Call 0x1C17DFC
	052 Move X0, [X22]
	053 Move X8, [X0+184]
	054 Move W8, [X8+114]
	055 Compare W8, 0
	056 JumpIfNotEqual {329}
	057 Move X0, X23
	058 Call Uri.get_OriginalStringSwitched, X0
	059 And W31, W0, 1
	060 Move W8, 16
	061 Move W9, 24
	062 NotImplemented "Instruction CSEL not yet implemented."
	063 Move X0, [X23]
	064 Compare X0, 0
	065 JumpIfEqual {340}
	066 Move W1, W31
	067 Move X2, X31
	068 Call String.get_Chars, X0, X1
	069 And W8, W0, 0xFFFF
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Move W8, [X23+51]
	072 Move TEMP, X8
	073 And TEMP, TEMP, 32
	074 Compare TEMP, 32
	075 JumpIfNotEqual {329}
	076 Move X0, X23
	077 Call Uri.get_OriginalStringSwitched, X0
	078 And W31, W0, 1
	079 Move W8, 16
	080 Move W9, 24
	081 Move W10, [X23+48]
	082 NotImplemented "Instruction CSEL not yet implemented."
	083 Move X22, [X23]
	084 Move W8, W10
	085 ShiftRight W8, 19
	086 And W8, W8, 0x7FFFF
	087 Move [X21], W8
	088 Move X8, 0xADC000
	089 Move X8, [X8+632]
	090 Move X8, [X8]
	091 Move X8, [X8+184]
	092 Move X22, [X8]
	093 Compare X22, 0
	094 JumpIfEqual {340}
	095 Move W8, [X22+16]
	096 NotImplemented "Instruction CMP not yet implemented."
	097 Move X0, X22
	098 Move W1, W31
	099 Move X2, X31
	100 Call String.get_Chars, X0, X1
	101 Move X24, 0xADC000
	102 Move X24, [X24+2600]
	103 Move W23, W0
	104 Move X8, [X24]
	105 Move W9, [X8+224]
	106 Compare W9, 0
	107 JumpIfNotEqual {110}
	108 Move X0, X8
	109 Call 0x1C17DFC
	110 And W8, W23, 0xFFFF
	111 NotImplemented "Instruction CMP not yet implemented."
	112 Move W8, [X22+16]
	113 Move X0, X22
	114 Move X2, X31
	115 Subtract W1, W8, 1
	116 Call String.get_Chars, X0, X1
	117 Move X8, [X24]
	118 Move W23, W0
	119 Move W9, [X8+224]
	120 Compare W9, 0
	121 JumpIfNotEqual {124}
	122 Move X0, X8
	123 Call 0x1C17DFC
	124 And W8, W23, 0xFFFF
	125 NotImplemented "Instruction CMP not yet implemented."
	126 NotImplemented "Instruction CMP not yet implemented."
	127 And X8, X23, 0xFFFF
	128 Move W9, 1
	129 NotImplemented "Instruction LSLV not yet implemented."
	130 Move X9, 0x2600
	131 NotImplemented "Instruction MOVK not yet implemented."
	132 And X31, X8, X9
	133 NotImplemented "Instruction CMP not yet implemented."
	134 And X8, X23, 0xFFFF
	135 Move W9, 1
	136 NotImplemented "Instruction LSLV not yet implemented."
	137 Move X9, 0x2600
	138 NotImplemented "Instruction MOVK not yet implemented."
	139 And X31, X8, X9
	140 Move X0, [X24]
	141 Move W8, [X0+224]
	142 Compare W8, 0
	143 JumpIfNotEqual {146}
	144 Call 0x1C17DFC
	145 Move X0, [X24]
	146 Move X8, [X0+184]
	147 Move X0, X22
	148 Move X2, X31
	149 Move X1, [X8+136]
	150 Call String.Trim, X0, X1
	151 Move X22, X0
	152 Compare X0, 0
	153 JumpIfEqual {340}
	154 Move W8, [X22+16]
	155 Compare W8, 0
	156 JumpIfEqual {318}
	157 Move X0, X22
	158 Move W1, W31
	159 Move X2, X31
	160 Call String.get_Chars, X0, X1
	161 And W8, W0, 0xFFFF
	162 NotImplemented "Instruction CMP not yet implemented."
	163 Compare X20, 0
	164 JumpIfEqual {340}
	165 Move W8, [X20+51]
	166 Move TEMP, X8
	167 And TEMP, TEMP, 32
	168 Compare TEMP, 32
	169 JumpIfEqual {181}
	170 Move X0, [X20+32]
	171 Compare X0, 0
	172 JumpIfEqual {340}
	173 Move W1, 64
	174 Move X2, X31
	175 Call UriParser.InFact, X0, X1
	176 Move TEMP, X0
	177 And TEMP, TEMP, 1
	178 Compare TEMP, 1
	179 JumpIfNotEqual {181}
	180 Move W1, 63
	181 Move X0, X22
	182 Move W1, W31
	183 Move X2, X31
	184 Call String.get_Chars, X0, X1
	185 And W8, W0, 0xFFFF
	186 NotImplemented "Instruction CMP not yet implemented."
	187 Compare X20, 0
	188 JumpIfEqual {340}
	189 Move W8, [X20+51]
	190 Move TEMP, X8
	191 And TEMP, TEMP, 32
	192 Compare TEMP, 32
	193 JumpIfEqual {211}
	194 Move X0, [X20+32]
	195 Compare X0, 0
	196 JumpIfEqual {340}
	197 Move W1, 32
	198 Move X2, X31
	199 Call UriParser.InFact, X0, X1
	200 Move TEMP, X0
	201 And TEMP, TEMP, 1
	202 Compare TEMP, 1
	203 JumpIfNotEqual {211}
	204 Move W1, 31
	205 Move W2, 1
	206 Move X0, X20
	207 Call Uri.GetComponents, X0, X1, X2
	208 Move X1, X22
	209 Move X2, X31
	210 Call String.Concat, X0, X1
	211 Move W8, [X22+16]
	212 NotImplemented "Instruction CMP not yet implemented."
	213 Move W1, 1
	214 Move X0, X22
	215 Move X2, X31
	216 Call String.get_Chars, X0, X1
	217 And W8, W0, 0xFFFF
	218 NotImplemented "Instruction CMP not yet implemented."
	219 Move W1, 1
	220 Move X0, X22
	221 Move X2, X31
	222 Call String.get_Chars, X0, X1
	223 And W8, W0, 0xFFFF
	224 NotImplemented "Instruction CMP not yet implemented."
	225 Move X0, X22
	226 Move W1, W31
	227 Move X2, X31
	228 Call String.get_Chars, X0, X1
	229 Move X8, 0xADC000
	230 Move X8, [X8+2600]
	231 Move W23, W0
	232 Move X8, [X8]
	233 Move W9, [X8+224]
	234 Compare W9, 0
	235 JumpIfNotEqual {238}
	236 Move X0, X8
	237 Call 0x1C17DFC
	238 And W8, W23, 0xFFFFFFDF
	239 Subtract W8, W8, 65
	240 And W8, W8, 0xFFFF
	241 NotImplemented "Instruction CMP not yet implemented."
	242 Move W1, 2
	243 Move X0, X22
	244 Move X2, X31
	245 Call String.get_Chars, X0, X1
	246 And W8, W0, 0xFFFF
	247 NotImplemented "Instruction CMP not yet implemented."
	248 Move W1, 2
	249 Move X0, X22
	250 Move X2, X31
	251 Call String.get_Chars, X0, X1
	252 And W8, W0, 0xFFFF
	253 NotImplemented "Instruction CMP not yet implemented."
	254 Compare X20, 0
	255 JumpIfEqual {340}
	256 Move W8, [X20+51]
	257 Move TEMP, X8
	258 And TEMP, TEMP, 32
	259 Compare TEMP, 32
	260 JumpIfEqual {338}
	261 Move X0, [X20+32]
	262 Compare X0, 0
	263 JumpIfEqual {340}
	264 Move W1, 0x100000
	265 Move X2, X31
	266 Call UriParser.InFact, X0, X1
	267 Move TEMP, X0
	268 And TEMP, TEMP, 1
	269 Compare TEMP, 1
	270 JumpIfNotEqual {298}
	271 Move X0, [X20+32]
	272 Compare X0, 0
	273 JumpIfEqual {340}
	274 Move X21, [X20+48]
	275 Move W1, 0x200000
	276 Move X2, X31
	277 Call UriParser.InFact, X0, X1
	278 Move X8, 0xB1A000
	279 Move X9, 0xB22000
	280 Move X10, 0xAE3000
	281 Move X11, 0xB22000
	282 Move X8, [X8+2888]
	283 Move X9, [X9+168]
	284 Move X10, [X10+2440]
	285 Move X11, [X11+176]
	286 And W31, W0, 1
	287 NotImplemented "Instruction CSEL not yet implemented."
	288 Move X0, X20
	289 NotImplemented "Instruction CSEL not yet implemented."
	290 And X31, X21, 0x1FFFFF
	291 NotImplemented "Instruction CSEL not yet implemented."
	292 Move X21, [X8]
	293 Call Uri.get_Scheme, X0
	294 Move X1, X21
	295 Move X2, X22
	296 Move X3, X31
	297 Call String.Concat, X0, X1, X2
	298 Move X8, 0xADC000
	299 Move X8, [X8+2600]
	300 Move W21, [X21]
	301 Move X0, [X8]
	302 Move W8, [X0+224]
	303 Compare W8, 0
	304 JumpIfNotEqual {306}
	305 Call 0x1C17DFC
	306 NotImplemented "Instruction CMP not yet implemented."
	307 NotImplemented "Instruction CSET not yet implemented."
	308 Move X0, X20
	309 Move X1, X22
	310 Move X3, X19
	311 Call Uri.GetCombinedString, X0, X1, X2, X3
	312 Compare X20, 0
	313 JumpIfEqual {340}
	314 Move X8, [X19]
	315 Move X9, [X20+16]
	316 NotImplemented "Instruction CMP not yet implemented."
	317 NotImplemented "Instruction CSEL not yet implemented."
	318 Compare X20, 0
	319 JumpIfEqual {340}
	320 Move X8, [X20+48]
	321 Move W1, 127
	322 Move X0, X20
	323 And X31, X8, 0xFFFFF
	324 Move W8, 3
	325 NotImplemented "Instruction CSINC not yet implemented."
	326 Call Uri.GetComponents, X0, X1, X2
	327 Move X23, X31
	328 Move [X19], X0
	329 Move X0, X23
	330 Move X20, [X31+48]
	331 Move X19, [X31+56]
	332 Move X22, [X31+32]
	333 Move X21, [X31+40]
	334 Move X24, [X31+16]
	335 Move X23, [X31+24]
	336 Move X30, [X31+64]
	337 Return X0
	338 Move X23, X31
	339 Move [X19], X22
	340 Call 0x1C17F20

Method: System.String GetRelativeSerializationString(System.UriFormat format)

Disassembly:
	0x0362541C LDP X20, X19, [X31 + 0x40]
	0x03625420 LDP X30, X27, [X31], #0x50
	0x03625424 RET
	0x03625428 BL 0x1C16F20
	0x0362542C STP X30, X21, [X31 - 0x20]!
	0x03625430 STP X20, X19, [X31 + 0x10]
	0x03625434 LDR X8, [X2 + 0x8]
	0x03625438 STP X1, X2, [X0 + 0x20]
	0x0362543C MOV X19, X0
	0x03625440 MOV X20, X1
	0x03625444 STR X8, [X0 + 0x10]
	0x03625448 LDRB W21, [X2 + 0x52]
	0x0362544C STR X0, [X0 + 0x40]
	0x03625450 MOV X0, X2
	0x03625454 BL 0x1C16D84
	0x03625458 TBZ X0, 0x0, 0x3625470
	0x0362545C CMP W21, 0x4
	0x03625460 B.NE 0x362548C
	0x03625464 ADRP X8, 0xFFFFFFFFFE5A0000
	0x03625468 ADD X8, X8, 0x878
	0x0362546C B 0x3625480
	0x03625470 CMP W21, 0x3
	0x03625474 B.NE 0x3625488
	0x03625478 ADRP X8, 0xFFFFFFFFFE5A0000
	0x0362547C ADD X8, X8, 0x84C
	0x03625480 STR X8, [X19 + 0x18]
	0x03625484 B 0x362549C
	0x03625488 CBZ X20, 0x36254B4
	0x0362548C LDR X8, [X19 + 0x10]
	0x03625490 LDR X9, [X19 + 0x20]
	0x03625494 STR X8, [X19 + 0x18]
	0x03625498 STR X9, [X19 + 0x40]
	0x0362549C ADRP X8, 0xFFFFFFFFFE5A0000
	0x036254A0 ADD X8, X8, 0x7D4
	0x036254A4 STR X8, [X19 + 0x38]
	0x036254A8 LDP X20, X19, [X31 + 0x10]
	0x036254AC LDP X30, X21, [X31], #0x20
	0x036254B0 RET
	0x036254B4 ADRP X1, 0xFFFFFFFFFD4F6000
	0x036254B8 ADD X1, X1, 0xEE3
	0x036254BC MOV X0, X31
	0x036254C0 BL 0x1C16F3C
	0x036254C4 MOV X1, X31
	0x036254C8 BL 0x1C16DEC
	0x036254CC LDR X8, [X0 + 0x40]
	0x036254D0 LDR X6, [X0 + 0x18]
	0x036254D4 LDR X5, [X0 + 0x28]
	0x036254D8 MOV X0, X8
	0x036254DC BR X6
	0x036254E0 STP X30, X21, [X31 - 0x20]!
	0x036254E4 STP X20, X19, [X31 + 0x10]
	0x036254E8 LDR X8, [X2 + 0x8]
	0x036254EC STP X1, X2, [X0 + 0x20]
	0x036254F0 MOV X19, X0
	0x036254F4 MOV X20, X1
	0x036254F8 STR X8, [X0 + 0x10]
	0x036254FC LDRB W21, [X2 + 0x52]
	0x03625500 STR X0, [X0 + 0x40]
	0x03625504 MOV X0, X2
	0x03625508 BL 0x1C16D84
	0x0362550C TBZ X0, 0x0, 0x3625524
	0x03625510 CMP W21, 0x1
	0x03625514 B.NE 0x362552C
	0x03625518 ADRP X8, 0xFFFFFFFFFE5A0000
	0x0362551C ADD X8, X8, 0x904
	0x03625520 B 0x3625548
	0x03625524 CBZ W21, 0x3625540
	0x03625528 CBZ X20, 0x3625564
	0x0362552C LDR X8, [X19 + 0x10]
	0x03625530 LDR X9, [X19 + 0x20]
	0x03625534 STR X8, [X19 + 0x18]
	0x03625538 STR X9, [X19 + 0x40]
	0x0362553C B 0x362554C
	0x03625540 ADRP X8, 0xFFFFFFFFFE5A0000
	0x03625544 ADD X8, X8, 0x8E4
	0x03625548 STR X8, [X19 + 0x18]
	0x0362554C ADRP X8, 0xFFFFFFFFFE5A0000
	0x03625550 ADD X8, X8, 0x894
	0x03625554 STR X8, [X19 + 0x38]
	0x03625558 LDP X20, X19, [X31 + 0x10]
	0x0362555C LDP X30, X21, [X31], #0x20
	0x03625560 RET
	0x03625564 ADRP X1, 0xFFFFFFFFFD4F6000
	0x03625568 ADD X1, X1, 0xEE3
	0x0362556C MOV X0, X31
	0x03625570 BL 0x1C16F3C
	0x03625574 MOV X1, X31
	0x03625578 BL 0x1C16DEC
	0x0362557C LDR X8, [X0 + 0x40]
	0x03625580 LDR X3, [X0 + 0x18]
	0x03625584 LDR X2, [X0 + 0x28]
	0x03625588 MOV X0, X8
	0x0362558C BR X3
	0x03625590 STP X30, X19, [X31 - 0x10]!
	0x03625594 MOV X19, X0
	0x03625598 BL 0x36255A8
	0x0362559C LDR X0, [X19 + 0x58]
	0x036255A0 LDP X30, X19, [X31], #0x10
	0x036255A4 RET
	0x036255A8 STP X30, X19, [X31 - 0x10]!
	0x036255AC LDR X8, [X0 + 0x58]
	0x036255B0 CBZ X8, 0x36255BC
	0x036255B4 LDP X30, X19, [X31], #0x10
	0x036255B8 RET
	0x036255BC ADRP X0, 0xAF7000
	0x036255C0 LDR X0, [X0 + 0x4B8]
	0x036255C4 BL 0x1C16D08
	0x036255C8 BL 0x1C16F10
	0x036255CC MOV X19, X0
	0x036255D0 ADRP X0, 0xB16000
	0x036255D4 LDR X0, [X0 + 0x2C0]
	0x036255D8 BL 0x1C16D08
	0x036255DC MOV X1, X0
	0x036255E0 MOV X0, X19
	0x036255E4 MOV X2, X31
	0x036255E8 BL 0x338C448
	0x036255EC ADRP X0, 0xB16000
	0x036255F0 LDR X0, [X0 + 0x2C8]
	0x036255F4 BL 0x1C16D08
	0x036255F8 MOV X1, X0
	0x036255FC MOV X0, X19
	0x03625600 BL 0x1C16DEC
	0x03625604 STP X30, X19, [X31 - 0x10]!
	0x03625608 MOV X19, X0
	0x0362560C BL 0x36255A8
	0x03625610 LDR X8, [X19 + 0x58]
	0x03625614 CBZ X8, 0x3625624
	0x03625618 LDR X0, [X8 + 0xA0]
	0x0362561C LDP X30, X19, [X31], #0x10
	0x03625620 RET
	0x03625624 BL 0x1C16F20
	0x03625628 STP X30, X19, [X31 - 0x10]!
	0x0362562C ADRP X19, 0xDBB000
	0x03625630 LDRB W8, [X19 + 0x4B4]
	0x03625634 TBNZ X8, 0x0, 0x362564C

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+56], X21
	004 Move [X31+64], X20
	005 Move [X31+72], X19
	006 Move X21, 0xDBC000
	007 Move W8, [X21+1199]
	008 Move W20, W1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {28}
	014 Move X0, 0xAD8000
	015 Move X0, [X0+2264]
	016 Call 0x1C17CF4
	017 Move X0, 0xAD1000
	018 Move X0, [X0+632]
	019 Call 0x1C17CF4
	020 Move X0, 0xB17000
	021 Move X0, [X0+88]
	022 Call 0x1C17CF4
	023 Move X0, 0xAD1000
	024 Move X0, [X0+2600]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X21+1199], W8
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Move [X31+40], X31
	030 NotImplemented "Instruction CMP not yet implemented."
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move X20, [X19+16]
	033 Compare X20, 0
	034 JumpIfEqual {126}
	035 Move W21, [X20+16]
	036 Compare W21, 0
	037 JumpIfEqual {114}
	038 Move X8, 0xB17000
	039 Move X8, [X8+88]
	040 Move [X31+44], W31
	041 Move X0, [X8]
	042 Move W8, [X0+224]
	043 Compare W8, 0
	044 JumpIfNotEqual {46}
	045 Call 0x1C17DFC
	046 Move W8, 37
	047 Add X4, X31, 44
	048 Move W5, 1
	049 Move W6, 0xFFFF
	050 Move W7, 0xFFFF
	051 Move X0, X20
	052 Move W1, W31
	053 Move W2, W21
	054 Move X3, X31
	055 Move [X31+8], X31
	056 NotImplemented "Instruction STRH not yet implemented."
	057 Call UriHelper.EscapeString, X0, X1, X2, X3, X4, X5, X6, X7, X8
	058 Compare X0, 0
	059 JumpIfEqual {119}
	060 Move W3, [X31+44]
	061 Move X8, [X19+16]
	062 Compare X8, 0
	063 JumpIfEqual {126}
	064 Move W1, [X8+16]
	065 Compare W1, 0
	066 JumpIfEqual {114}
	067 Move X8, 0xAD8000
	068 Move X8, [X8+2264]
	069 Move X0, [X8]
	070 Call 0x1C17D6C
	071 Move [X31+40], W31
	072 Move X20, [X19+16]
	073 Compare X20, 0
	074 JumpIfEqual {126}
	075 Move X8, 0xB17000
	076 Move X8, [X8+88]
	077 Move X19, X0
	078 Move W21, [X20+16]
	079 Move X0, [X8]
	080 Move W8, [X0+224]
	081 Compare W8, 0
	082 JumpIfNotEqual {84}
	083 Call 0x1C17DFC
	084 Move W8, 3
	085 Add X4, X31, 40
	086 Move W5, 0xFFFF
	087 Move W6, 0xFFFF
	088 Move W7, 0xFFFF
	089 Move X0, X20
	090 Move W1, W31
	091 Move W2, W21
	092 Move X3, X19
	093 Move [X31+24], X31
	094 Move [X31+16], W31
	095 Move [X31+8], X31
	096 Move [X31], W8
	097 Call UriHelper.UnescapeString, X0, X1, X2, X3, X4, X5, X6, X7, X8, X9, X10
	098 Move W3, [X31+40]
	099 Move X1, X0
	100 Move X0, X31
	101 Move W2, W31
	102 Move X4, X31
	103 Call String.CreateString, X0, X1, X2, X3
	104 Move X8, 0xAD1000
	105 Move X8, [X8+2600]
	106 Move X19, [X19+16]
	107 Move X0, [X8]
	108 Move W8, [X0+224]
	109 Compare W8, 0
	110 JumpIfNotEqual {112}
	111 Call 0x1C17DFC
	112 Move X0, X19
	113 Call Uri.UnescapeDataString, X0
	114 Move X8, 0xAD1000
	115 Move X8, [X8+632]
	116 Move X8, [X8]
	117 Move X8, [X8+184]
	118 Move X0, [X8]
	119 Move X0, [X19+16]
	120 Move X20, [X31+64]
	121 Move X19, [X31+72]
	122 Move X30, [X31+48]
	123 Move X21, [X31+56]
	124 Add X31, X31, 80
	125 Return X0
	126 Call 0x1C17F20
	127 Move X0, 0xAD7000
	128 Move X0, [X0+1888]
	129 Call 0x1C17D08
	130 Call 0x1C17F10
	131 Move X19, X0
	132 Move X0, 0xAFE000
	133 Move X0, [X0+160]
	134 Call 0x1C17D08
	135 Move X1, X0
	136 Move X0, X19
	137 Move X2, X31
	138 Call ArgumentOutOfRangeException..ctor, X0, X1
	139 Move X0, 0xB17000
	140 Move X0, [X0+608]
	141 Call 0x1C17D08
	142 Move X1, X0
	143 Move X0, X19
	144 Call 0x1C17DEC

Method: System.String GetComponentsHelper(System.UriComponents uriComponents, System.UriFormat uriFormat)

Disassembly:
	0x0361EA70 LDR X0, [X26]
	0x0361EA74 LDR W8, [X0 + 0xE0]
	0x0361EA78 CBNZ W8, 0x361EA80
	0x0361EA7C BL 0x1C16DFC
	0x0361EA80 LDUR X2, [X29 - 0x10]
	0x0361EA84 MOV X0, X23
	0x0361EA88 MOV W1, W24
	0x0361EA8C BL 0x361A644
	0x0361EA90 LDUR X8, [X29 - 0x18]
	0x0361EA94 CMP W0, 0x0
	0x0361EA98 STR W0, [X8]
	0x0361EA9C LDR X8, [X27 + 0x28]
	0x0361EAA0 LDUR X9, [X29 - 0x8]
	0x0361EAA4 CSINC W0, W31, W28, NE
	0x0361EAA8 CMP X8, X9
	0x0361EAAC B.EQ 0x361E9BC
	0x0361EAB0 BL 0x3EB1B20
	0x0361EAB4 STR X30, [X31 - 0x20]!
	0x0361EAB8 STP X20, X19, [X31 + 0x10]
	0x0361EABC ADRP X20, 0xDC2000
	0x0361EAC0 LDRB W8, [X20 + 0x48B]
	0x0361EAC4 MOV X19, X0
	0x0361EAC8 TBNZ X8, 0x0, 0x361EAE0
	0x0361EACC ADRP X0, 0xAD7000
	0x0361EAD0 LDR X0, [X0 + 0xA28]
	0x0361EAD4 BL 0x1C16CF4
	0x0361EAD8 MOVZ W8, 0x1
	0x0361EADC STRB W8, [X20 + 0x48B]
	0x0361EAE0 MOV X0, X19
	0x0361EAE4 BL 0x361EB34
	0x0361EAE8 CBZ W0, 0x361EB24
	0x0361EAEC LDR X8, [X19 + 0x30]
	0x0361EAF0 ADRP X9, 0xAD7000
	0x0361EAF4 LDR X9, [X9 + 0xA28]
	0x0361EAF8 MOV W20, W0
	0x0361EAFC ORR X8, X8, 0x7FFFFFF
	0x0361EB00 STR X8, [X19 + 0x30]
	0x0361EB04 LDR X0, [X9]
	0x0361EB08 LDR W8, [X0 + 0xE0]
	0x0361EB0C CBNZ W8, 0x361EB14
	0x0361EB10 BL 0x1C16DFC
	0x0361EB14 MOV W0, W20
	0x0361EB18 LDP X20, X19, [X31 + 0x10]
	0x0361EB1C LDR X30, [X31], #0x20
	0x0361EB20 B 0x361B0C8
	0x0361EB24 LDP X20, X19, [X31 + 0x10]
	0x0361EB28 MOV X0, X31
	0x0361EB2C LDR X30, [X31], #0x20
	0x0361EB30 RET
	0x0361EB34 SUB X31, X31, 0x80
	0x0361EB38 STP X29, X30, [X31 + 0x20]
	0x0361EB3C STP X28, X27, [X31 + 0x30]
	0x0361EB40 STP X26, X25, [X31 + 0x40]
	0x0361EB44 STP X24, X23, [X31 + 0x50]
	0x0361EB48 STP X22, X21, [X31 + 0x60]
	0x0361EB4C STP X20, X19, [X31 + 0x70]
	0x0361EB50 ADRP X20, 0xDC2000
	0x0361EB54 LDRB W8, [X20 + 0x48C]
	0x0361EB58 MOV X19, X0
	0x0361EB5C TBNZ X8, 0x0, 0x361EB74
	0x0361EB60 ADRP X0, 0xAD7000
	0x0361EB64 LDR X0, [X0 + 0xA28]
	0x0361EB68 BL 0x1C16CF4
	0x0361EB6C MOVZ W8, 0x1
	0x0361EB70 STRB W8, [X20 + 0x48C]
	0x0361EB74 STR W31, [X31 + 0x14]
	0x0361EB78 MOV X20, X19
	0x0361EB7C LDR X23, [X20 + 0x30]!
	0x0361EB80 LDUR X8, [X20 - 0x20]
	0x0361EB84 CBZ X8, 0x361F1C4
	0x0361EB88 LDRH W22, [X8 + 0x10]
	0x0361EB8C STR X31, [X31 + 0x18]
	0x0361EB90 LDRB W11, [X19 + 0x40]
	0x0361EB94 MOVN X8, 0xFFFF
	0x0361EB98 MOVK X8, 0xFEFF0000
	0x0361EB9C ANDS X31, X23, 0x7FFFFFFFF
	0x0361EBA0 MOVZ W9, 0x10
	0x0361EBA4 MOVZ W10, 0x18
	0x0361EBA8 AND X8, X23, X8, 0x0
	0x0361EBAC CSEL X10, X10, X9, EQ
	0x0361EBB0 STR X8, [X19 + 0x30]
	0x0361EBB4 CMP W11, 0x0
	0x0361EBB8 AND X8, X23, 0x3FFFFFFFF
	0x0361EBBC CCMP X8, 0x0, 0x4, NE
	0x0361EBC0 CSEL X8, X9, X10, EQ
	0x0361EBC4 LDR X21, [X19, X8, LSL]
	0x0361EBC8 AND W24, W23, 0xFFFF
	0x0361EBCC CBZ X21, 0x361EBDC
	0x0361EBD0 MOV X0, X31
	0x0361EBD4 BL 0x32C1424
	0x0361EBD8 ADD X21, X21, W0, SXTW
	0x0361EBDC CMP W22, W24
	0x0361EBE0 B.LS 0x361EC98
	0x0361EBE4 ADRP X25, 0xAD7000
	0x0361EBE8 LDR X25, [X25 + 0xA28]
	0x0361EBEC SUB X26, X22, 0x1
	0x0361EBF0 LDRH W27, [X21, X26, LSL #1]
	0x0361EBF4 LDR X0, [X25]
	0x0361EBF8 LDR W8, [X0 + 0xE0]
	0x0361EBFC CBNZ W8, 0x361EC04
	0x0361EC00 BL 0x1C16DFC
	0x0361EC04 CMP W27, 0x20
	0x0361EC08 B.HI 0x361EC98
	0x0361EC0C B.HI 0x361EC98
	0x0361EC10 MOV W8, W27
	0x0361EC14 MOVZ W9, 0x1
	0x0361EC18 LSLV X8, X9, X8
	0x0361EC1C MOVZ X9, 0x2600
	0x0361EC20 MOVK X9, 0x1
	0x0361EC24 ANDS X31, X8, X9, 0x0
	0x0361EC28 B.EQ 0x361EC98
	0x0361EC2C CMP W24, W26
	0x0361EC30 B.NE 0x361EC3C
	0x0361EC34 MOV W22, W26
	0x0361EC38 B 0x361EC90
	0x0361EC3C MOVZ X28, 0x2600
	0x0361EC40 MOVZ W27, 0x1
	0x0361EC44 MOVK X28, 0x1
	0x0361EC48 LDR X0, [X25]
	0x0361EC4C SUB W22, W26, 0x1
	0x0361EC50 UBFM W8, W22, 0x1F, 0x1E
	0x0361EC54 AND X8, X8, 0x1FFFF
	0x0361EC58 LDR W9, [X0 + 0xE0]
	0x0361EC5C LDRH W26, [X8, X21, LSL]
	0x0361EC60 CBNZ W9, 0x361EC68
	0x0361EC64 BL 0x1C16DFC
	0x0361EC68 CMP W26, 0x20
	0x0361EC6C B.HI 0x361EC90
	0x0361EC70 B.HI 0x361EC90
	0x0361EC74 MOV W8, W26
	0x0361EC78 LSLV X8, X27, X8
	0x0361EC7C ANDS X31, X8, X28, 0x0
	0x0361EC80 B.EQ 0x361EC90

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xDC3000
	007 Move W8, [X22+1200]
	008 Move W20, W2
	009 Move W21, W1
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0xAD8000
	016 Move X0, [X0+3144]
	017 Call 0x1C17CF4
	018 Move X0, 0xAD8000
	019 Move X0, [X0+632]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+1200], W8
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Move X8, [X19+32]
	025 Compare X8, 0
	026 JumpIfEqual {136}
	027 Move X0, [X8+32]
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X30, [X31+48]
	033 Return X0
	034 Move W8, [X19+48]
	035 Or W9, W21, 127
	036 NotImplemented "Instruction CMP not yet implemented."
	037 NotImplemented "Instruction CSEL not yet implemented."
	038 Move TEMP, X8
	039 And TEMP, TEMP, -2147483648
	040 Compare TEMP, -2147483648
	041 JumpIfEqual {44}
	042 Move X0, X19
	043 Call Uri.ParseRemaining, X0
	044 Move W8, W21
	045 ShiftRight W8, 6
	046 And W8, W8, 0x7FFFFFFF
	047 And W8, W8, 4
	048 Or W22, W8, W21
	049 Move TEMP, X22
	050 And TEMP, TEMP, 4
	051 Compare TEMP, 4
	052 JumpIfNotEqual {56}
	053 Move W1, 1
	054 Move X0, X19
	055 Call Uri.EnsureHostString, X0, X1
	056 NotImplemented "Instruction CMP not yet implemented."
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Move W8, [X19+50]
	059 Move TEMP, X8
	060 And TEMP, TEMP, 128
	061 Compare TEMP, 128
	062 JumpIfEqual {69}
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Move X8, [X19+32]
	065 Compare X8, 0
	066 JumpIfEqual {136}
	067 Move W8, [X8+28]
	068 Add W31, W8, 1
	069 Move X8, [X19+56]
	070 Compare X8, 0
	071 JumpIfEqual {136}
	072 Move X9, 0xAD8000
	073 Move X9, [X9+3144]
	074 Add X19, X8, 46
	075 Move X0, [X9]
	076 Move W9, [X0+224]
	077 Compare W9, 0
	078 JumpIfNotEqual {80}
	079 Call 0x1C17DFC
	080 Move X0, X31
	081 Call CultureInfo.get_InvariantCulture
	082 Move X1, X0
	083 Move X0, X19
	084 Move X20, [X31+32]
	085 Move X19, [X31+40]
	086 Move X22, [X31+16]
	087 Move X21, [X31+24]
	088 Move X2, X31
	089 Move X30, [X31+48]
	090 Call UInt16.ToString, X0, X1
	091 Return X0
	092 Move W8, W21
	093 ShiftRight W8, 4
	094 And W8, W8, 0x7FFFFFFF
	095 And W8, W8, 8
	096 Or W1, W22, W8
	097 NotImplemented "Instruction CMP not yet implemented."
	098 NotImplemented "Instruction CMP not yet implemented."
	099 NotImplemented "Instruction LDRH not yet implemented."
	100 Move W9, 260
	101 And W31, W8, W9
	102 Move X0, X19
	103 Move W1, W31
	104 Call Uri.EnsureHostString, X0, X1
	105 Move X8, [X19+56]
	106 Compare X8, 0
	107 JumpIfEqual {136}
	108 Move X0, [X8+16]
	109 Move X8, 0xAD8000
	110 Move X8, [X8+632]
	111 Move X8, [X8]
	112 Move X8, [X8+184]
	113 Move X0, [X8]
	114 NotImplemented "Instruction CMP not yet implemented."
	115 Move X0, X19
	116 Move X20, [X31+32]
	117 Move X19, [X31+40]
	118 Move X22, [X31+16]
	119 Move X21, [X31+24]
	120 Move X30, [X31+48]
	121 Call Uri.GetEscapedParts, X0, X1
	122 Return X0
	123 Subtract W8, W20, 2
	124 NotImplemented "Instruction CMP not yet implemented."
	125 Move W8, 0x7FFF
	126 NotImplemented "Instruction CMP not yet implemented."
	127 Move X0, X19
	128 Move W2, W20
	129 Move X20, [X31+32]
	130 Move X19, [X31+40]
	131 Move X22, [X31+16]
	132 Move X21, [X31+24]
	133 Move X30, [X31+48]
	134 Call Uri.GetUnescapedParts, X0, X1, X2
	135 Return X0
	136 Call 0x1C17F20
	137 Move X0, 0xADE000
	138 Move X0, [X0+1888]
	139 Call 0x1C17D08
	140 Call 0x1C17F10
	141 Move X19, X0
	142 Move X0, 0xB1E000
	143 Move X0, [X0+512]
	144 Call 0x1C17D08
	145 Move X1, X0
	146 Move X0, X19
	147 Move X2, X31
	148 Call ArgumentOutOfRangeException..ctor, X0, X1
	149 Move X0, 0xB1E000
	150 Move X0, [X0+520]
	151 Call 0x1C17D08
	152 Move X1, X0
	153 Move X0, X19
	154 Call 0x1C17DEC

Method: System.Boolean IsBaseOf(System.Uri uri)

Disassembly:
	0x03625E88 ADRP X0, 0xACE000
	0x03625E8C LDR X0, [X0 + 0xB40]
	0x03625E90 BL 0x1C16D08
	0x03625E94 BL 0x1C16F10
	0x03625E98 MOV X1, X19
	0x03625E9C MOV X2, X31
	0x03625EA0 MOV X20, X0
	0x03625EA4 BL 0x3379A44
	0x03625EA8 ADRP X0, 0xB16000
	0x03625EAC LDR X0, [X0 + 0x310]
	0x03625EB0 BL 0x1C16D08
	0x03625EB4 MOV X1, X0
	0x03625EB8 MOV X0, X20
	0x03625EBC BL 0x1C16DEC
	0x03625EC0 STR X30, [X31 - 0x20]!
	0x03625EC4 STP X20, X19, [X31 + 0x10]
	0x03625EC8 MOV X19, X1
	0x03625ECC MOV X20, X0
	0x03625ED0 BL 0x36255A8
	0x03625ED4 LDR X0, [X20 + 0x58]
	0x03625ED8 CBZ X0, 0x3625EF8
	0x03625EDC LDR X8, [X0]
	0x03625EE0 MOV X1, X19
	0x03625EE4 LDP X20, X19, [X31 + 0x10]
	0x03625EE8 LDR X3, [X8 + 0x348]
	0x03625EEC LDR X2, [X8 + 0x350]
	0x03625EF0 LDR X30, [X31], #0x20
	0x03625EF4 BR X3
	0x03625EF8 BL 0x1C16F20
	0x03625EFC STR X30, [X31 - 0x20]!
	0x03625F00 STP X20, X19, [X31 + 0x10]
	0x03625F04 ADRP X0, 0xB16000
	0x03625F08 LDR X0, [X0 + 0x308]
	0x03625F0C BL 0x1C16D08
	0x03625F10 MOV X1, X31
	0x03625F14 BL 0x320A1E4
	0x03625F18 MOV X19, X0
	0x03625F1C ADRP X0, 0xACE000
	0x03625F20 LDR X0, [X0 + 0xB40]
	0x03625F24 BL 0x1C16D08
	0x03625F28 BL 0x1C16F10
	0x03625F2C MOV X1, X19
	0x03625F30 MOV X2, X31
	0x03625F34 MOV X20, X0
	0x03625F38 BL 0x3379A44

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Compare X1, 0
	005 JumpIfEqual {37}
	006 Move X20, X0
	007 Move X0, [X0+32]
	008 Compare X0, 0
	009 JumpIfEqual {22}
	010 Move X19, X1
	011 Move X1, X31
	012 Call UriParser.get_IsSimple, X0
	013 Move TEMP, X0
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfNotEqual {26}
	017 Move X0, X20
	018 Move X1, X19
	019 Move X20, [X31+16]
	020 Move X19, [X31+24]
	021 Move X30, [X31+32]
	022 Move X20, [X31+16]
	023 Move X19, [X31+24]
	024 Move X30, [X31+32]
	025 Return X0
	026 Move X0, [X20+32]
	027 Compare X0, 0
	028 JumpIfEqual {55}
	029 Move X1, X20
	030 Move X2, X19
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X3, X31
	034 Move X30, [X31+32]
	035 Call UriParser.InternalIsBaseOf, X0, X1, X2
	036 Return X0
	037 Move X0, 0xAD4000
	038 Move X0, [X0+1320]
	039 Call 0x1C17D08
	040 Call 0x1C17F10
	041 Move X19, X0
	042 Move X0, 0xAFF000
	043 Move X0, [X0+3608]
	044 Call 0x1C17D08
	045 Move X1, X0
	046 Move X0, X19
	047 Move X2, X31
	048 Call ArgumentNullException..ctor, X0, X1
	049 Move X0, 0xB17000
	050 Move X0, [X0+664]
	051 Call 0x1C17D08
	052 Move X1, X0
	053 Move X0, X19
	054 Call 0x1C17DEC
	055 Call 0x1C17F20

Method: System.Boolean IsBaseOfHelper(System.Uri uriLink)

Disassembly:
	0x03625F3C ADRP X0, 0xB16000
	0x03625F40 LDR X0, [X0 + 0x318]
	0x03625F44 BL 0x1C16D08
	0x03625F48 MOV X1, X0
	0x03625F4C MOV X0, X20
	0x03625F50 BL 0x1C16DEC
	0x03625F54 STR X30, [X31 - 0x10]!
	0x03625F58 LDR X0, [X0 + 0x28]
	0x03625F5C CBZ X0, 0x3625F74
	0x03625F60 LDR X8, [X0]
	0x03625F64 LDR X3, [X8 + 0x2A8]
	0x03625F68 LDR X2, [X8 + 0x2B0]
	0x03625F6C LDR X30, [X31], #0x10
	0x03625F70 BR X3
	0x03625F74 BL 0x1C16F20
	0x03625F78 STR X30, [X31 - 0x10]!
	0x03625F7C LDR X0, [X0 + 0x28]
	0x03625F80 CBZ X0, 0x3625F98
	0x03625F84 LDR X8, [X0]
	0x03625F88 LDR X2, [X8 + 0x298]
	0x03625F8C LDR X1, [X8 + 0x2A0]
	0x03625F90 LDR X30, [X31], #0x10
	0x03625F94 BR X2
	0x03625F98 BL 0x1C16F20
	0x03625F9C STP X30, X21, [X31 - 0x20]!
	0x03625FA0 STP X20, X19, [X31 + 0x10]
	0x03625FA4 MOV X19, X0
	0x03625FA8 LDR X0, [X0 + 0x58]
	0x03625FAC MOV W20, W1
	0x03625FB0 CBZ X0, 0x3625FC4
	0x03625FB4 TBZ X20, 0x0, 0x3625FC4
	0x03625FB8 MOV X1, X31
	0x03625FBC BL 0x32F02B8
	0x03625FC0 STR X31, [X19 + 0x58]
	0x03625FC4 AND W1, W20, 0x1
	0x03625FC8 MOV X0, X19
	0x03625FCC LDP X20, X19, [X31 + 0x10]
	0x03625FD0 MOV X2, X31
	0x03625FD4 LDP X30, X21, [X31], #0x20
	0x03625FD8 B 0x36DE090
	0x03625FDC CMP W1, 0x1
	0x03625FE0 MOV X21, X0
	0x03625FE4 B.NE 0x3626018
	0x03625FE8 MOV X0, X21
	0x03625FEC BL 0x3EB1AD0
	0x03625FF0 LDR X20, [X0]
	0x03625FF4 BL 0x3EB1AE0
	0x03625FF8 MOVZ W1, 0x1
	0x03625FFC MOV X0, X19
	0x03626000 MOV X2, X31
	0x03626004 BL 0x36DE090
	0x03626008 CBNZ X20, 0x3626020
	0x0362600C LDP X20, X19, [X31 + 0x10]
	0x03626010 LDP X30, X21, [X31], #0x20
	0x03626014 RET
	0x03626018 MOV X20, X31
	0x0362601C B 0x362602C
	0x03626020 MOV X0, X20
	0x03626024 BL 0x1C16F18
	0x03626028 MOV X21, X0
	0x0362602C MOVZ W1, 0x1
	0x03626030 MOV X0, X19
	0x03626034 MOV X2, X31
	0x03626038 BL 0x36DE090
	0x0362603C CBNZ X20, 0x3626048
	0x03626040 MOV X0, X21
	0x03626044 BL 0x1D2C690
	0x03626048 MOV X0, X20
	0x0362604C BL 0x1C16F18
	0x03626050 BL 0x1990590
	0x03626054 STR X30, [X31 - 0x30]!
	0x03626058 STP X22, X21, [X31 + 0x10]
	0x0362605C STP X20, X19, [X31 + 0x20]
	0x03626060 MOV W19, W3
	0x03626064 MOV W20, W2
	0x03626068 MOV X21, X1
	0x0362606C MOV X22, X0
	0x03626070 BL 0x36255A8
	0x03626074 LDR X0, [X22 + 0x58]
	0x03626078 CBZ X0, 0x36260A4
	0x0362607C LDR X8, [X0]
	0x03626080 MOV X1, X21
	0x03626084 MOV W2, W20
	0x03626088 MOV W3, W19
	0x0362608C LDR X5, [X8 + 0x358]
	0x03626090 LDR X4, [X8 + 0x360]
	0x03626094 LDP X20, X19, [X31 + 0x20]
	0x03626098 LDP X22, X21, [X31 + 0x10]
	0x0362609C LDR X30, [X31], #0x30
	0x036260A0 BR X5
	0x036260A4 BL 0x1C16F20
	0x036260A8 STR X30, [X31 - 0x30]!
	0x036260AC STP X22, X21, [X31 + 0x10]
	0x036260B0 STP X20, X19, [X31 + 0x20]
	0x036260B4 MOV W19, W3
	0x036260B8 MOV W20, W2
	0x036260BC MOV X21, X1
	0x036260C0 MOV X22, X0
	0x036260C4 BL 0x36255A8
	0x036260C8 LDR X0, [X22 + 0x58]
	0x036260CC CBZ X0, 0x36260F8
	0x036260D0 LDR X8, [X0]
	0x036260D4 MOV X1, X21
	0x036260D8 MOV W2, W20
	0x036260DC MOV W3, W19
	0x036260E0 LDR X5, [X8 + 0x388]
	0x036260E4 LDR X4, [X8 + 0x390]
	0x036260E8 LDP X20, X19, [X31 + 0x20]
	0x036260EC LDP X22, X21, [X31 + 0x10]
	0x036260F0 LDR X30, [X31], #0x30
	0x036260F4 BR X5
	0x036260F8 BL 0x1C16F20
	0x036260FC STP X30, X23, [X31 - 0x30]!
	0x03626100 STP X22, X21, [X31 + 0x10]
	0x03626104 STP X20, X19, [X31 + 0x20]
	0x03626108 MOV X19, X4
	0x0362610C MOV W20, W3
	0x03626110 MOV W21, W2
	0x03626114 MOV X22, X1
	0x03626118 MOV X23, X0
	0x0362611C BL 0x36255A8
	0x03626120 LDR X0, [X23 + 0x58]
	0x03626124 CBZ X0, 0x3626154

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+40], X23
	004 Move [X31+48], X22
	005 Move [X31+56], X21
	006 Move [X31+64], X20
	007 Move [X31+72], X19
	008 Move X21, 0xDBC000
	009 Move W8, [X21+1201]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xB17000
	017 Move X0, [X0+88]
	018 Call 0x1C17CF4
	019 Move X0, 0xAD1000
	020 Move X0, [X0+2600]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X21+1201], W8
	024 Move [X31+16], X31
	025 Move X8, [X19+32]
	026 Compare X8, 0
	027 JumpIfEqual {89}
	028 Move W8, [X19+51]
	029 Move TEMP, X8
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfEqual {89}
	033 Compare X20, 0
	034 JumpIfEqual {149}
	035 Move X8, [X20+32]
	036 Compare X8, 0
	037 JumpIfEqual {71}
	038 Move X8, [X19+32]
	039 Compare X8, 0
	040 JumpIfEqual {149}
	041 Compare X20, 0
	042 JumpIfEqual {149}
	043 Move X9, [X20+32]
	044 Compare X9, 0
	045 JumpIfEqual {149}
	046 Move X0, [X8+32]
	047 Move X1, [X9+32]
	048 Move X2, X31
	049 Call String.op_Inequality, X0, X1
	050 Move TEMP, X0
	051 And TEMP, TEMP, 1
	052 Compare TEMP, 1
	053 JumpIfEqual {89}
	054 Move W1, 63
	055 Move W2, 3
	056 Move X0, X19
	057 Call Uri.GetComponents, X0, X1, X2
	058 Move X22, X0
	059 Move W1, 63
	060 Move W2, 3
	061 Move X0, X20
	062 Call Uri.GetComponents, X0, X1, X2
	063 Move X23, X0
	064 Compare X22, 0
	065 JumpIfEqual {119}
	066 Move X0, X31
	067 Call RuntimeHelpers.get_OffsetToStringData
	068 Compare X23, 0
	069 JumpIfEqual {149}
	070 Add X21, X22, W0
	071 Move X21, 0xAD0000
	072 Move X21, [X21+2600]
	073 Move [X31+24], X31
	074 Move [X31+12], W31
	075 Move X0, [X21]
	076 Move W8, [X0+224]
	077 Compare W8, 0
	078 JumpIfNotEqual {80}
	079 Call 0x1C17DFC
	080 Add X2, X31, 24
	081 Add X3, X31, 12
	082 Add X4, X31, 16
	083 Move X0, X19
	084 Move X1, X20
	085 Call Uri.ResolveHelper, X0, X1, X2, X3, X4
	086 Move X8, [X31+16]
	087 Compare X8, 0
	088 JumpIfEqual {99}
	089 Move W0, W31
	090 Move X20, [X31+64]
	091 Move X19, [X31+72]
	092 Move X22, [X31+48]
	093 Move X21, [X31+56]
	094 Move X30, [X31+32]
	095 Move X23, [X31+40]
	096 And W0, W0, 1
	097 Add X31, X31, 80
	098 Return X0
	099 Move X20, X0
	100 Compare X0, 0
	101 JumpIfNotEqual {38}
	102 Move X0, [X21]
	103 Move X20, [X31+24]
	104 Move W21, [X31+12]
	105 Move W8, [X0+224]
	106 Compare W8, 0
	107 JumpIfNotEqual {109}
	108 Call 0x1C17DFC
	109 NotImplemented "Instruction CMP not yet implemented."
	110 NotImplemented "Instruction CSET not yet implemented."
	111 Add X3, X31, 16
	112 Move W2, 1
	113 Move X0, X20
	114 Call Uri.CreateHelper, X0, X1, X2, X3
	115 Move X8, [X31+16]
	116 Compare X8, 0
	117 JumpIfNotEqual {89}
	118 Move X20, X0
	119 Move X21, X22
	120 Compare X23, 0
	121 JumpIfEqual {149}
	122 Move X0, X31
	123 Call RuntimeHelpers.get_OffsetToStringData
	124 Compare X22, 0
	125 JumpIfEqual {149}
	126 Move W8, [X19+51]
	127 Move W22, [X22+16]
	128 Move W19, [X23+16]
	129 Add X23, X23, W0
	130 And W31, W8, 24
	131 Move W20, 1
	132 Move W8, [X20+51]
	133 And W31, W8, 24
	134 NotImplemented "Instruction CSET not yet implemented."
	135 Move X8, 0xB16000
	136 Move X8, [X8+88]
	137 Move X0, [X8]
	138 Move W8, [X0+224]
	139 Compare W8, 0
	140 JumpIfNotEqual {142}
	141 Call 0x1C17DFC
	142 Move X0, X21
	143 Move W1, W22
	144 Move X2, X23
	145 Move W3, W19
	146 Move W4, W20
	147 Move X5, X31
	148 Call UriHelper.TestForSubPath, X0, X1, X2, X3, X4
	149 Call 0x1C17F20

Method: System.Void CreateThisFromUri(System.Uri otherUri)

Disassembly:
	0x0361B0D8 MOV W19, W0
	0x0361B0DC TBNZ X8, 0x0, 0x361B178
	0x0361B0E0 ADRP X0, 0xB20000
	0x0361B0E4 LDR X0, [X0 + 0xD8]
	0x0361B0E8 BL 0x1C16CF4
	0x0361B0EC ADRP X0, 0xB20000
	0x0361B0F0 LDR X0, [X0 + 0xE0]
	0x0361B0F4 BL 0x1C16CF4
	0x0361B0F8 ADRP X0, 0xB20000
	0x0361B0FC LDR X0, [X0 + 0xE8]
	0x0361B100 BL 0x1C16CF4
	0x0361B104 ADRP X0, 0xB20000
	0x0361B108 LDR X0, [X0 + 0xF0]
	0x0361B10C BL 0x1C16CF4
	0x0361B110 ADRP X0, 0xB20000
	0x0361B114 LDR X0, [X0 + 0xF8]
	0x0361B118 BL 0x1C16CF4
	0x0361B11C ADRP X0, 0xB20000
	0x0361B120 LDR X0, [X0 + 0x100]
	0x0361B124 BL 0x1C16CF4
	0x0361B128 ADRP X0, 0xB20000
	0x0361B12C LDR X0, [X0 + 0x108]
	0x0361B130 BL 0x1C16CF4
	0x0361B134 ADRP X0, 0xB20000
	0x0361B138 LDR X0, [X0 + 0x110]
	0x0361B13C BL 0x1C16CF4
	0x0361B140 ADRP X0, 0xB20000
	0x0361B144 LDR X0, [X0 + 0x118]
	0x0361B148 BL 0x1C16CF4
	0x0361B14C ADRP X0, 0xB20000
	0x0361B150 LDR X0, [X0 + 0x120]
	0x0361B154 BL 0x1C16CF4
	0x0361B158 ADRP X0, 0xB20000
	0x0361B15C LDR X0, [X0 + 0x128]
	0x0361B160 BL 0x1C16CF4
	0x0361B164 ADRP X0, 0xB20000
	0x0361B168 LDR X0, [X0 + 0x130]
	0x0361B16C BL 0x1C16CF4
	0x0361B170 MOVZ W8, 0x1
	0x0361B174 STRB W8, [X20 + 0x477]
	0x0361B178 CMP W19, 0xC
	0x0361B17C B.HI 0x361B19C
	0x0361B180 ADRP X9, 0xFFFFFFFFFD57C000
	0x0361B184 MOV W8, W19
	0x0361B188 ADD X9, X9, 0x33A
	0x0361B18C ADR X10, 0x10
	0x0361B190 LDRB W11, [X9, X8, LSL]
	0x0361B194 ADD X10, X10, X11, 0x2, LSL
	0x0361B198 BR X10
	0x0361B19C ADRP X8, 0xB20000
	0x0361B1A0 LDR X8, [X8 + 0x118]
	0x0361B1A4 B 0x361B224
	0x0361B1A8 MOV X0, X31
	0x0361B1AC B 0x361B25C
	0x0361B1B0 ADRP X8, 0xB20000
	0x0361B1B4 LDR X8, [X8 + 0xE0]
	0x0361B1B8 B 0x361B224
	0x0361B1BC ADRP X8, 0xB20000
	0x0361B1C0 LDR X8, [X8 + 0x130]
	0x0361B1C4 B 0x361B224
	0x0361B1C8 ADRP X8, 0xB20000
	0x0361B1CC LDR X8, [X8 + 0x110]
	0x0361B1D0 B 0x361B224
	0x0361B1D4 ADRP X8, 0xB20000
	0x0361B1D8 LDR X8, [X8 + 0x120]
	0x0361B1DC B 0x361B224
	0x0361B1E0 ADRP X8, 0xB20000
	0x0361B1E4 LDR X8, [X8 + 0x128]
	0x0361B1E8 B 0x361B224
	0x0361B1EC ADRP X8, 0xB20000
	0x0361B1F0 LDR X8, [X8 + 0xF8]
	0x0361B1F4 B 0x361B224

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move [X0+56], X31
	006 Compare X1, 0
	007 JumpIfEqual {92}
	008 Move X8, [X1+48]
	009 Move X20, X1
	010 Move X19, X0
	011 Move [X0+48], X8
	012 Move TEMP, X8
	013 And TEMP, TEMP, 0x40000000
	014 Compare TEMP, 0x40000000
	015 JumpIfNotEqual {63}
	016 Move TEMP, 0xFFFF
	017 Not TEMP
	018 Move X9, TEMP
	019 NotImplemented "Instruction MOVK not yet implemented."
	020 And X9, X8, X9
	021 Move [X19+48], X9
	022 Move X9, [X20+56]
	023 Compare X9, 0
	024 JumpIfEqual {92}
	025 NotImplemented "Instruction LDRH not yet implemented."
	026 Move TEMP, X8
	027 And TEMP, TEMP, 0x800000
	028 Compare TEMP, 0x800000
	029 JumpIfNotEqual {59}
	030 Move X0, [X20+16]
	031 Compare X0, 0
	032 JumpIfEqual {92}
	033 Move W1, W21
	034 Move X2, X31
	035 Call String.get_Chars, X0, X1
	036 And W8, W0, 0xFFFF
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move X8, [X20+56]
	039 Compare X8, 0
	040 JumpIfEqual {92}
	041 NotImplemented "Instruction LDRH not yet implemented."
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X0, [X20+16]
	044 Subtract W21, W21, 1
	045 Compare X0, 0
	046 JumpIfNotEqual {33}
	047 Move X0, [X20+16]
	048 Compare X0, 0
	049 JumpIfEqual {92}
	050 Move W1, W21
	051 Move X2, X31
	052 Call String.get_Chars, X0, X1
	053 And W8, W0, 0xFFFF
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Move X8, [X20+56]
	056 Compare X8, 0
	057 JumpIfEqual {92}
	058 NotImplemented "Instruction LDRH not yet implemented."
	059 Move X8, [X19+48]
	060 Move X9, W21
	061 Or X8, X8, X9
	062 Move [X19+48], X8
	063 Move X8, [X20+32]
	064 Move X0, X20
	065 Move [X19+32], X8
	066 Move X8, [X20+16]
	067 Move [X19+16], X8
	068 Move W8, [X20+64]
	069 Move [X19+64], W8
	070 Call Uri.get_OriginalStringSwitched, X0
	071 Move TEMP, X0
	072 And TEMP, TEMP, 1
	073 Compare TEMP, 1
	074 JumpIfNotEqual {77}
	075 Move X8, [X20+24]
	076 Move [X19+24], X8
	077 Move X0, X20
	078 Call Uri.get_AllowIdn, X0
	079 Move TEMP, X0
	080 And TEMP, TEMP, 1
	081 Compare TEMP, 1
	082 JumpIfNotEqual {87}
	083 Move W8, [X20+52]
	084 And W31, W8, 0x11111111
	085 Move X8, [X20+40]
	086 Move [X19+40], X8
	087 Move X20, [X31+16]
	088 Move X19, [X31+24]
	089 Move X30, [X31+32]
	090 Move X21, [X31+40]
	091 Return 
	092 Call 0x1C17F20

Method: System.Void .cctor()

Disassembly:
	0x03626128 LDR X8, [X0]
	0x0362612C MOV X1, X22
	0x03626130 MOV W2, W21
	0x03626134 MOV W3, W20
	0x03626138 LDR X6, [X8 + 0x2D8]
	0x0362613C LDR X5, [X8 + 0x2E0]
	0x03626140 MOV X4, X19
	0x03626144 LDP X20, X19, [X31 + 0x20]
	0x03626148 LDP X22, X21, [X31 + 0x10]
	0x0362614C LDP X30, X23, [X31], #0x30
	0x03626150 BR X6
	0x03626154 BL 0x1C16F20
	0x03626158 STP X30, X23, [X31 - 0x30]!
	0x0362615C STP X22, X21, [X31 + 0x10]
	0x03626160 STP X20, X19, [X31 + 0x20]
	0x03626164 MOV X19, X4
	0x03626168 MOV W20, W3
	0x0362616C MOV W21, W2
	0x03626170 MOV X22, X1
	0x03626174 MOV X23, X0
	0x03626178 BL 0x36255A8
	0x0362617C LDR X0, [X23 + 0x58]
	0x03626180 CBZ X0, 0x36261B0
	0x03626184 LDR X8, [X0]
	0x03626188 MOV X1, X22
	0x0362618C MOV W2, W21
	0x03626190 MOV W3, W20
	0x03626194 LDR X6, [X8 + 0x318]
	0x03626198 LDR X5, [X8 + 0x320]
	0x0362619C MOV X4, X19
	0x036261A0 LDP X20, X19, [X31 + 0x20]
	0x036261A4 LDP X22, X21, [X31 + 0x10]
	0x036261A8 LDP X30, X23, [X31], #0x30
	0x036261AC BR X6
	0x036261B0 BL 0x1C16F20
	0x036261B4 STR X30, [X31 - 0x40]!
	0x036261B8 STP X24, X23, [X31 + 0x10]
	0x036261BC STP X22, X21, [X31 + 0x20]
	0x036261C0 STP X20, X19, [X31 + 0x30]
	0x036261C4 MOV X19, X5
	0x036261C8 MOV X20, X4
	0x036261CC MOV W21, W3
	0x036261D0 MOV W22, W2
	0x036261D4 MOV X23, X1
	0x036261D8 MOV X24, X0
	0x036261DC BL 0x36255A8
	0x036261E0 LDR X0, [X24 + 0x58]
	0x036261E4 CBZ X0, 0x362621C
	0x036261E8 MOV X1, X23
	0x036261EC MOV W2, W22
	0x036261F0 MOV W3, W21
	0x036261F4 MOV X4, X31
	0x036261F8 BL 0x32F0BD8
	0x036261FC MOV X1, X20
	0x03626200 MOV X2, X19
	0x03626204 LDP X20, X19, [X31 + 0x30]
	0x03626208 LDP X22, X21, [X31 + 0x20]
	0x0362620C LDP X24, X23, [X31 + 0x10]
	0x03626210 MOV X3, X31
	0x03626214 LDR X30, [X31], #0x40
	0x03626218 B 0x33ED028
	0x0362621C BL 0x1C16F20
	0x03626220 STP X30, X21, [X31 - 0x20]!
	0x03626224 STP X20, X19, [X31 + 0x10]
	0x03626228 ADRP X20, 0xDBA000
	0x0362622C ADRP X21, 0xAFC000
	0x03626230 LDRB W8, [X20 + 0x4B7]
	0x03626234 LDR X21, [X21 + 0xDC0]
	0x03626238 MOV X19, X1
	0x0362623C TBNZ X8, 0x0, 0x3626254
	0x03626240 ADRP X0, 0xAFC000
	0x03626244 LDR X0, [X0 + 0xDC0]
	0x03626248 BL 0x1C16CF4
	0x0362624C MOVZ W8, 0x1
	0x03626250 STRB W8, [X20 + 0x4B7]
	0x03626254 LDR X1, [X21]
	0x03626258 MOV X0, X19
	0x0362625C LDP X20, X19, [X31 + 0x10]
	0x03626260 LDP X30, X21, [X31], #0x20
	0x03626264 B 0x229BB30
	0x03626268 STR X30, [X31 - 0x40]!
	0x0362626C STP X24, X23, [X31 + 0x10]
	0x03626270 STP X22, X21, [X31 + 0x20]
	0x03626274 STP X20, X19, [X31 + 0x30]
	0x03626278 MOV X19, X5
	0x0362627C MOV X20, X4
	0x03626280 MOV W21, W3
	0x03626284 MOV W22, W2
	0x03626288 MOV X23, X1
	0x0362628C MOV X24, X0
	0x03626290 BL 0x36255A8
	0x03626294 LDR X0, [X24 + 0x58]
	0x03626298 CBZ X0, 0x36262D0
	0x0362629C MOV X1, X23
	0x036262A0 MOV W2, W22
	0x036262A4 MOV W3, W21
	0x036262A8 MOV X4, X31
	0x036262AC BL 0x32F1690
	0x036262B0 MOV X1, X20
	0x036262B4 MOV X2, X19
	0x036262B8 LDP X20, X19, [X31 + 0x30]
	0x036262BC LDP X22, X21, [X31 + 0x20]
	0x036262C0 LDP X24, X23, [X31 + 0x10]
	0x036262C4 MOV X3, X31
	0x036262C8 LDR X30, [X31], #0x40
	0x036262CC B 0x33ED028
	0x036262D0 BL 0x1C16F20
	0x036262D4 MOV X0, X1
	0x036262D8 MOV X1, X31
	0x036262DC B 0x33ED2B0
	0x036262E0 STR X30, [X31 - 0x10]!
	0x036262E4 LDR X8, [X0 + 0x10]
	0x036262E8 CBZ X8, 0x3626314
	0x036262EC MOV X5, X4
	0x036262F0 MOV X4, X3
	0x036262F4 MOV X3, X2
	0x036262F8 MOV X2, X1
	0x036262FC LDR X1, [X0 + 0x18]
	0x03626300 LDR X7, [X8 + 0x18]
	0x03626304 LDR X0, [X8 + 0x40]
	0x03626308 LDR X6, [X8 + 0x28]
	0x0362630C LDR X30, [X31], #0x10
	0x03626310 BR X7
	0x03626314 BL 0x1C16F20
	0x03626318 STR X30, [X31 - 0x30]!
	0x0362631C STP X22, X21, [X31 + 0x10]
	0x03626320 STP X20, X19, [X31 + 0x20]
	0x03626324 CBZ X0, 0x362637C
	0x03626328 LDR W8, [X0 + 0x10]
	0x0362632C MOVZ W20, 0x9DC5
	0x03626330 MOV X19, X0
	0x03626334 MOVK W20, 0x811C0000
	0x03626338 CMP W8, 0x1
	0x0362633C B.LT 0x3626380
	0x03626340 MOVZ W22, 0x193
	0x03626344 MOV W21, W31
	0x03626348 MOVK W22, 0x1000000
	0x0362634C MOV X0, X19
	0x03626350 MOV W1, W21
	0x03626354 MOV X2, X31
	0x03626358 BL 0x3222A1C
	0x0362635C LDR W8, [X19 + 0x10]
	0x03626360 AND W9, W0, 0xFFFF
	0x03626364 EOR W9, W20, W9, 0x0
	0x03626368 ADD W21, W21, 0x1
	0x0362636C CMP W21, W8
	0x03626370 MUL W20, W9, W22
	0x03626374 B.LT 0x362634C
	0x03626378 B 0x3626380
	0x0362637C MOV W20, W31
	0x03626380 MOV W0, W20
	0x03626384 LDP X20, X19, [X31 + 0x20]
	0x03626388 LDP X22, X21, [X31 + 0x10]
	0x0362638C LDR X30, [X31], #0x30
	0x03626390 RET
	0x03626394 STR X30, [X31 - 0x20]!
	0x03626398 STP X20, X19, [X31 + 0x10]
	0x0362639C ADRP X19, 0xDBA000
	0x036263A0 ADRP X20, 0xB15000
	0x036263A4 LDRB W8, [X19 + 0x4B8]
	0x036263A8 LDR X20, [X20 + 0x320]
	0x036263AC TBNZ X8, 0x0, 0x36263C4
	0x036263B0 ADRP X0, 0xB15000
	0x036263B4 LDR X0, [X0 + 0x320]
	0x036263B8 BL 0x1C16CF4
	0x036263BC MOVZ W8, 0x1
	0x036263C0 STRB W8, [X19 + 0x4B8]
	0x036263C4 LDR X0, [X20]
	0x036263C8 BL 0x1C16D9C
	0x036263CC STR X30, [X31 - 0x20]!
	0x036263D0 STP X20, X19, [X31 + 0x10]
	0x036263D4 ADRP X19, 0xDBA000
	0x036263D8 ADRP X20, 0xB15000
	0x036263DC LDRB W8, [X19 + 0x4B9]
	0x036263E0 LDR X20, [X20 + 0x328]
	0x036263E4 TBNZ X8, 0x0, 0x36263FC
	0x036263E8 ADRP X0, 0xB15000
	0x036263EC LDR X0, [X0 + 0x328]
	0x036263F0 BL 0x1C16CF4
	0x036263F4 MOVZ W8, 0x1
	0x036263F8 STRB W8, [X19 + 0x4B9]
	0x036263FC LDR X0, [X20]
	0x03626400 BL 0x1C16D9C
	0x03626404 STR X30, [X31 - 0x20]!
	0x03626408 STP X20, X19, [X31 + 0x10]
	0x0362640C ADRP X19, 0xDBA000
	0x03626410 ADRP X20, 0xB15000
	0x03626414 LDRB W8, [X19 + 0x4BA]
	0x03626418 LDR X20, [X20 + 0x330]
	0x0362641C TBNZ X8, 0x0, 0x3626434
	0x03626420 ADRP X0, 0xB15000
	0x03626424 LDR X0, [X0 + 0x330]
	0x03626428 BL 0x1C16CF4

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X20, 0xDBB000
	012 Move X19, 0xB16000
	013 Move W8, [X20+1202]
	014 Move X19, [X19+72]
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {54}
	019 Move X0, 0xAD7000
	020 Move X0, [X0+2264]
	021 Call 0x1C17CF4
	022 Move X0, 0xAF5000
	023 Move X0, [X0+464]
	024 Call 0x1C17CF4
	025 Move X0, 0xB16000
	026 Move X0, [X0+672]
	027 Call 0x1C17CF4
	028 Move X0, 0xB16000
	029 Move X0, [X0+680]
	030 Call 0x1C17CF4
	031 Move X0, 0xB16000
	032 Move X0, [X0+72]
	033 Call 0x1C17CF4
	034 Move X0, 0xAD0000
	035 Move X0, [X0+2600]
	036 Call 0x1C17CF4
	037 Move X0, 0xB0E000
	038 Move X0, [X0+2888]
	039 Call 0x1C17CF4
	040 Move X0, 0xB16000
	041 Move X0, [X0+688]
	042 Call 0x1C17CF4
	043 Move X0, 0xAD8000
	044 Move X0, [X0+4088]
	045 Call 0x1C17CF4
	046 Move X0, 0xAD9000
	047 Move X0, [X0]
	048 Call 0x1C17CF4
	049 Move X0, 0xB16000
	050 Move X0, [X0+696]
	051 Call 0x1C17CF4
	052 Move W8, 1
	053 Move [X20+1202], W8
	054 Move X0, [X19]
	055 Move W8, [X0+224]
	056 Compare W8, 0
	057 JumpIfNotEqual {60}
	058 Call 0x1C17DFC
	059 Move X0, [X19]
	060 Move X8, [X0+184]
	061 Move X8, [X8+56]
	062 Compare X8, 0
	063 JumpIfEqual {220}
	064 Move X20, 0xAD0000
	065 Move X20, [X20+2600]
	066 Move X8, [X8+32]
	067 Move X9, [X20]
	068 Move X9, [X9+184]
	069 Move [X9], X8
	070 Move X8, [X19]
	071 Move X9, [X8+184]
	072 Move X10, [X9+48]
	073 Compare X10, 0
	074 JumpIfEqual {220}
	075 Move X8, [X20]
	076 Move X10, [X10+32]
	077 Move X8, [X8+184]
	078 Move [X8+8], X10
	079 Move X10, [X9+64]
	080 Compare X10, 0
	081 JumpIfEqual {220}
	082 Move X10, [X10+32]
	083 Move [X8+16], X10
	084 Move X10, [X9+16]
	085 Compare X10, 0
	086 JumpIfEqual {220}
	087 Move X10, [X10+32]
	088 Move [X8+24], X10
	089 Move X10, [X9+24]
	090 Compare X10, 0
	091 JumpIfEqual {220}
	092 Move X10, [X10+32]
	093 Move [X8+32], X10
	094 Move X10, [X9+32]
	095 Compare X10, 0
	096 JumpIfEqual {220}
	097 Move X10, [X10+32]
	098 Move [X8+40], X10
	099 Move X10, [X9+40]
	100 Compare X10, 0
	101 JumpIfEqual {220}
	102 Move X10, [X10+32]
	103 Move [X8+48], X10
	104 Move X10, [X9+88]
	105 Compare X10, 0
	106 JumpIfEqual {220}
	107 Move X10, [X10+32]
	108 Move [X8+56], X10
	109 Move X10, [X9+80]
	110 Compare X10, 0
	111 JumpIfEqual {220}
	112 Move X10, [X10+32]
	113 Move [X8+64], X10
	114 Move X10, [X9+72]
	115 Compare X10, 0
	116 JumpIfEqual {220}
	117 Move X10, [X10+32]
	118 Move [X8+72], X10
	119 Move X10, [X9+120]
	120 Compare X10, 0
	121 JumpIfEqual {220}
	122 Move X10, [X10+32]
	123 Move [X8+80], X10
	124 Move X9, [X9+128]
	125 Compare X9, 0
	126 JumpIfEqual {220}
	127 Move X10, 0xB0E000
	128 Move X19, 0xB16000
	129 Move X25, 0xAD8000
	130 Move X10, [X10+2888]
	131 Move X19, [X19+696]
	132 Move X25, [X25+4088]
	133 Move X9, [X9+32]
	134 Move X26, 0xB16000
	135 Move X27, 0xAD9000
	136 Move X24, 0xAF5000
	137 Move X26, [X26+688]
	138 Move X27, [X27]
	139 Move X24, [X24+464]
	140 Move [X8+88], X9
	141 Move X9, [X10]
	142 Move X22, 0xAD7000
	143 Move X23, 0xB16000
	144 Move X21, 0xB16000
	145 Move X22, [X22+2264]
	146 Move X23, [X23+672]
	147 Move X21, [X21+680]
	148 Move [X8+96], X9
	149 Call 0x1C17D44
	150 Move X8, [X20]
	151 Move X1, X31
	152 Move X8, [X8+184]
	153 Move [X8+108], W31
	154 Move X0, [X19]
	155 Call Environment.GetEnvironmentVariable, X0
	156 Move X1, [X25]
	157 Move X2, X31
	158 Call String.op_Equality, X0, X1
	159 Move W19, W0
	160 Call 0x1C17D44
	161 Move X8, [X20]
	162 NotImplemented "Instruction ORN not yet implemented."
	163 And W9, W9, 1
	164 Move X1, X31
	165 Move X8, [X8+184]
	166 Move [X8+112], W9
	167 Move X0, [X26]
	168 Call Environment.GetEnvironmentVariable, X0
	169 Move X1, [X27]
	170 Move X2, X31
	171 Call String.op_Equality, X0, X1
	172 Move X8, [X20]
	173 And W9, W0, 1
	174 Move X8, [X8+184]
	175 Move [X8+113], W9
	176 Move X0, [X24]
	177 Move W9, [X0+224]
	178 Compare W9, 0
	179 JumpIfNotEqual {184}
	180 Call 0x1C17DFC
	181 Move X8, [X20]
	182 Move X0, [X24]
	183 Move X8, [X8+184]
	184 Move X9, [X0+184]
	185 Move W1, 16
	186 NotImplemented "Instruction LDRH not yet implemented."
	187 NotImplemented "Instruction CMP not yet implemented."
	188 NotImplemented "Instruction CSET not yet implemented."
	189 Move [X8+114], W9
	190 Move X0, [X22]
	191 Call 0x1C17D6C
	192 Move X1, [X23]
	193 Move X2, X31
	194 Move X19, X0
	195 Call RuntimeHelpers.InitializeArray, X0, X1
	196 Move X8, [X20]
	197 Move W1, 4
	198 Move X8, [X8+184]
	199 Move [X8+128], X19
	200 Move X0, [X22]
	201 Call 0x1C17D6C
	202 Move X1, [X21]
	203 Move X2, X31
	204 Move X19, X0
	205 Call RuntimeHelpers.InitializeArray, X0, X1
	206 Move X8, [X20]
	207 Move X22, [X31+48]
	208 Move X21, [X31+56]
	209 Move X24, [X31+32]
	210 Move X23, [X31+40]
	211 Move X26, [X31+16]
	212 Move X25, [X31+24]
	213 Move X8, [X8+184]
	214 Move [X8+136], X19
	215 Move X20, [X31+64]
	216 Move X19, [X31+72]
	217 Move X30, [X31+80]
	218 Move X27, [X31+88]
	219 Return 
	220 Call 0x1C17F20

