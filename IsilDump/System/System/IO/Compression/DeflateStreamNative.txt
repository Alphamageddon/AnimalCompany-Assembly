Type: System.IO.Compression.DeflateStreamNative

Method: System.Void .ctor()

Disassembly:
	0x0366A394 STRB W8, [X20 + 0x748]
	0x0366A398 LDR X0, [X19]

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.IO.Compression.DeflateStreamNative Create(System.IO.Stream compressedStream, System.IO.Compression.CompressionMode mode, System.Boolean gzip)

Disassembly:
	0x03668C98 ADRP X8, 0xFFFFFFFFFE55E000
	0x03668C9C ADD X8, X8, 0x214
	0x03668CA0 B 0x3668CB4
	0x03668CA4 CMP W21, 0x2
	0x03668CA8 B.NE 0x3668CBC
	0x03668CAC ADRP X8, 0xFFFFFFFFFE55E000
	0x03668CB0 ADD X8, X8, 0x1EC
	0x03668CB4 STR X8, [X19 + 0x18]
	0x03668CB8 B 0x3668CD0
	0x03668CBC CBZ X20, 0x3668CE8
	0x03668CC0 LDR X8, [X19 + 0x10]
	0x03668CC4 LDR X9, [X19 + 0x20]
	0x03668CC8 STR X8, [X19 + 0x18]
	0x03668CCC STR X9, [X19 + 0x40]
	0x03668CD0 ADRP X8, 0xFFFFFFFFFE55E000
	0x03668CD4 ADD X8, X8, 0x18C
	0x03668CD8 STR X8, [X19 + 0x38]
	0x03668CDC LDP X20, X19, [X31 + 0x10]
	0x03668CE0 LDP X30, X21, [X31], #0x20
	0x03668CE4 RET
	0x03668CE8 ADRP X1, 0xFFFFFFFFFD4B3000
	0x03668CEC ADD X1, X1, 0xEE3
	0x03668CF0 MOV X0, X31
	0x03668CF4 BL 0x1C16F3C
	0x03668CF8 MOV X1, X31
	0x03668CFC BL 0x1C16DEC
	0x03668D00 SUB X31, X31, 0x60
	0x03668D04 STR X30, [X31 + 0x20]
	0x03668D08 STP X24, X23, [X31 + 0x30]
	0x03668D0C STP X22, X21, [X31 + 0x40]
	0x03668D10 STP X20, X19, [X31 + 0x50]
	0x03668D14 ADRP X24, 0xD78000
	0x03668D18 STP W3, W2, [X31 + 0x28]
	0x03668D1C ADRP X23, 0xA8B000
	0x03668D20 LDRB W8, [X24 + 0x725]
	0x03668D24 LDR X23, [X23 + 0x758]
	0x03668D28 MOV X19, X5
	0x03668D2C MOV X20, X4
	0x03668D30 MOV X22, X1
	0x03668D34 MOV X21, X0
	0x03668D38 TBNZ X8, 0x0, 0x3668D50
	0x03668D3C ADRP X0, 0xA8B000
	0x03668D40 LDR X0, [X0 + 0x758]
	0x03668D44 BL 0x1C16CF4
	0x03668D48 MOVZ W8, 0x1
	0x03668D4C STRB W8, [X24 + 0x725]
	0x03668D50 LDR X0, [X23]
	0x03668D54 ADD X1, X31, 0x2C
	0x03668D58 STP X31, X31, [X31 + 0x10]
	0x03668D5C STP X22, X31, [X31]
	0x03668D60 BL 0x1C16E04
	0x03668D64 LDR X8, [X23]
	0x03668D68 STR X0, [X31 + 0x8]
	0x03668D6C ADD X1, X31, 0x28
	0x03668D70 MOV X0, X8
	0x03668D74 BL 0x1C16E04
	0x03668D78 STR X0, [X31 + 0x10]
	0x03668D7C ADD X1, X31, 0x0
	0x03668D80 MOV X0, X21
	0x03668D84 MOV X2, X20
	0x03668D88 MOV X3, X19
	0x03668D8C BL 0x1C16CB0
	0x03668D90 LDP X20, X19, [X31 + 0x50]
	0x03668D94 LDP X22, X21, [X31 + 0x40]
	0x03668D98 LDP X24, X23, [X31 + 0x30]
	0x03668D9C LDR X30, [X31 + 0x20]
	0x03668DA0 ADD X31, X31, 0x60
	0x03668DA4 RET
	0x03668DA8 STR X30, [X31 - 0x20]!
	0x03668DAC STP X20, X19, [X31 + 0x10]
	0x03668DB0 ADRP X20, 0xD78000
	0x03668DB4 LDRB W8, [X20 + 0x722]
	0x03668DB8 MOV X19, X1
	0x03668DBC TBNZ X8, 0x0, 0x3668DE0
	0x03668DC0 ADRP X0, 0xABF000
	0x03668DC4 LDR X0, [X0 + 0x610]
	0x03668DC8 BL 0x1C16CF4
	0x03668DCC ADRP X0, 0xAD5000

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0xD79000
	009 Move X23, 0xAD6000
	010 Move W8, [X22+1830]
	011 Move X23, [X23+848]
	012 Move W21, W2
	013 Move W20, W1
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {33}
	019 Move X0, 0xAD6000
	020 Move X0, [X0+856]
	021 Call 0x1C17CF4
	022 Move X0, 0xAD6000
	023 Move X0, [X0+864]
	024 Call 0x1C17CF4
	025 Move X0, 0xAD6000
	026 Move X0, [X0+848]
	027 Call 0x1C17CF4
	028 Move X0, 0xAD6000
	029 Move X0, [X0+872]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X22+1830], W8
	033 Move X0, [X23]
	034 Call 0x1C17F10
	035 Move X1, X31
	036 Move X22, X0
	037 Call Object..ctor, X0
	038 Move X0, X22
	039 Move X1, X31
	040 Call GCHandle.Alloc, X0
	041 Compare X22, 0
	042 JumpIfEqual {92}
	043 Move X8, 0xAD6000
	044 Move X8, [X8+872]
	045 Move [X22+40], X0
	046 Move X23, 0xAD6000
	047 Move X24, 0xAD6000
	048 Move X0, [X8]
	049 Move X23, [X23+864]
	050 Move X24, [X24+856]
	051 Call 0x1C17F10
	052 NotImplemented "Instruction CMP not yet implemented."
	053 NotImplemented "Instruction CSEL not yet implemented."
	054 Move X2, [X8]
	055 Move X1, X31
	056 Move X23, X0
	057 Call UnmanagedReadOrWrite..ctor, X0, X1, X2
	058 Move X0, [X22+40]
	059 Move X1, X31
	060 Move [X22+16], X23
	061 Call GCHandle.ToIntPtr, X0
	062 Move X3, X0
	063 And W1, W21, 1
	064 Move W0, W20
	065 Move X2, X23
	066 Call DeflateStreamNative.CreateZStream, X0, X1, X2, X3
	067 Move [X22+32], X0
	068 Compare X0, 0
	069 JumpIfEqual {92}
	070 Move X8, [X0]
	071 Move X9, [X8+392]
	072 Move X1, [X8+400]
	073 NotImplemented "Instruction BLR not yet implemented."
	074 Move TEMP, X0
	075 And TEMP, TEMP, 1
	076 Compare TEMP, 1
	077 JumpIfNotEqual {82}
	078 Move W1, 1
	079 Move X0, X22
	080 Call DeflateStreamNative.Dispose, X0, X1
	081 Move X22, X31
	082 Move [X22+24], X19
	083 Move X0, X22
	084 Move X20, [X31+48]
	085 Move X19, [X31+56]
	086 Move X22, [X31+32]
	087 Move X21, [X31+40]
	088 Move X24, [X31+16]
	089 Move X23, [X31+24]
	090 Move X30, [X31+64]
	091 Return X0
	092 Call 0x1C17F20

Method: System.Void Finalize()

Disassembly:
	0x0366A4CC ADRP X22, 0xAD3000
	0x0366A4D0 LDRB W8, [X23 + 0x740]
	0x0366A4D4 LDR X22, [X22 + 0x468]
	0x0366A4D8 MOV X19, X2
	0x0366A4DC MOV X20, X1
	0x0366A4E0 MOV X21, X0
	0x0366A4E4 TBNZ X8, 0x0, 0x366A4FC
	0x0366A4E8 ADRP X0, 0xAD3000
	0x0366A4EC LDR X0, [X0 + 0x468]
	0x0366A4F0 BL 0x1C16CF4
	0x0366A4F4 MOVZ W8, 0x1
	0x0366A4F8 STRB W8, [X23 + 0x740]
	0x0366A4FC LDR X0, [X22]
	0x0366A500 LDR W8, [X0 + 0xE0]
	0x0366A504 CBNZ W8, 0x366A50C
	0x0366A508 BL 0x1C16DFC
	0x0366A50C BL 0x366A368
	0x0366A510 TBZ X0, 0x0, 0x366A578
	0x0366A514 LDR X0, [X22]
	0x0366A518 LDR W8, [X0 + 0xE0]
	0x0366A51C CBNZ W8, 0x366A528
	0x0366A520 BL 0x1C16DFC
	0x0366A524 LDR X0, [X22]
	0x0366A528 LDR X8, [X0 + 0xB8]
	0x0366A52C MOV X0, X21
	0x0366A530 LDR X22, [X8]
	0x0366A534 BL 0x366B318
	0x0366A538 MOV X21, X0
	0x0366A53C MOV X0, X20
	0x0366A540 BL 0x366B8BC
	0x0366A544 CBZ X0, 0x366A588
	0x0366A548 LDR X8, [X0]
	0x0366A54C LDP X9, X1, [X8 + 0x168]
	0x0366A550 BLR X9
	0x0366A554 CBZ X22, 0x366A588
	0x0366A558 MOV X3, X0
	0x0366A55C MOV X0, X22
	0x0366A560 MOV X1, X21

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, X0
	006 Move W1, W31
	007 Call DeflateStreamNative.Dispose, X0, X1
	008 Move X0, X19
	009 Move X20, [X31+16]
	010 Move X19, [X31+24]
	011 Move X1, X31
	012 Move X30, [X31+32]
	013 Move X21, [X31+40]
	014 Call Object.Finalize, X0
	015 Return 
	016 NotImplemented "Instruction CMP not yet implemented."
	017 Move X21, X0
	018 Move X0, X21
	019 Call 0x3EB2AD0
	020 Move X20, [X0]
	021 Call 0x3EB2AE0
	022 Move X0, X19
	023 Move X1, X31
	024 Call Object.Finalize, X0
	025 Compare X20, 0
	026 JumpIfNotEqual {33}
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Return 
	032 Move X20, X31
	033 Move X0, X20
	034 Call 0x1C17F18
	035 Move X21, X0
	036 Move X0, X19
	037 Move X1, X31
	038 Call Object.Finalize, X0
	039 Compare X20, 0
	040 JumpIfNotEqual {43}
	041 Move X0, X21
	042 Call 0x1D2D690
	043 Move X0, X20
	044 Call 0x1C17F18
	045 Call 0x1991590

Method: System.Void Dispose(System.Boolean disposing)

Disassembly:
	0x03668F2C BL 0x1C16CF4
	0x03668F30 ADRP X0, 0xAD5000
	0x03668F34 LDR X0, [X0 + 0x3D8]
	0x03668F38 BL 0x1C16CF4
	0x03668F3C MOVZ W8, 0x1
	0x03668F40 STRB W8, [X20 + 0x723]
	0x03668F44 CBZ X19, 0x3669004
	0x03668F48 ADRP X9, 0xABF000
	0x03668F4C LDR X9, [X9 + 0x610]
	0x03668F50 LDR X8, [X19]
	0x03668F54 LDR X9, [X9]
	0x03668F58 LDRB W11, [X8 + 0x130]
	0x03668F5C LDRB W10, [X9 + 0x130]
	0x03668F60 CMP W11, W10
	0x03668F64 B.CC 0x3668FBC
	0x03668F68 LDR X11, [X8 + 0xC8]
	0x03668F6C ADD X10, X11, X10, 0x3, LSL
	0x03668F70 LDUR X10, [X10 - 0x8]
	0x03668F74 CMP X10, X9
	0x03668F78 B.NE 0x3668FBC
	0x03668F7C LDR X9, [X8 + 0x238]
	0x03668F80 LDR X1, [X8 + 0x240]
	0x03668F84 MOV X0, X19
	0x03668F88 BLR X9
	0x03668F8C CBZ X0, 0x3668FBC
	0x03668F90 ADRP X8, 0xAD5000
	0x03668F94 LDR X8, [X8 + 0x3D8]
	0x03668F98 LDR X9, [X0]
	0x03668F9C LDR X8, [X8]
	0x03668FA0 CMP X9, X8
	0x03668FA4 B.NE 0x3668FBC
	0x03668FA8 MOV X0, X19
	0x03668FAC LDP X20, X19, [X31 + 0x10]
	0x03668FB0 MOV X1, X31
	0x03668FB4 LDR X30, [X31], #0x20
	0x03668FB8 B 0x1C16CB4
	0x03668FBC ADRP X0, 0xA93000
	0x03668FC0 LDR X0, [X0 + 0x578]
	0x03668FC4 BL 0x1C16D08
	0x03668FC8 BL 0x1C16F10
	0x03668FCC MOV X19, X0
	0x03668FD0 ADRP X0, 0xABF000
	0x03668FD4 LDR X0, [X0 + 0x618]
	0x03668FD8 BL 0x1C16D08
	0x03668FDC MOV X20, X0
	0x03668FE0 ADRP X0, 0xAB6000
	0x03668FE4 LDR X0, [X0 + 0xDD0]
	0x03668FE8 BL 0x1C16D08
	0x03668FEC MOV X2, X0
	0x03668FF0 MOV X0, X19
	0x03668FF4 MOV X1, X20
	0x03668FF8 MOV X3, X31
	0x03668FFC BL 0x330E16C
	0x03669000 B 0x3669034
	0x03669004 ADRP X0, 0xA8F000
	0x03669008 LDR X0, [X0 + 0x528]
	0x0366900C BL 0x1C16D08
	0x03669010 BL 0x1C16F10
	0x03669014 MOV X19, X0
	0x03669018 ADRP X0, 0xAB5000
	0x0366901C LDR X0, [X0 + 0xDD0]
	0x03669020 BL 0x1C16D08
	0x03669024 MOV X1, X0
	0x03669028 MOV X0, X19
	0x0366902C MOV X2, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xD79000
	006 Move W8, [X21+1831]
	007 Move W20, W1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0xA93000
	014 Move X0, [X0+3088]
	015 Call 0x1C17CF4
	016 Move X0, 0xABB000
	017 Move X0, [X0+3344]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+1831], W8
	021 Move TEMP, X20
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfNotEqual {28}
	025 Move W8, [X19+48]
	026 Compare W8, 0
	027 JumpIfEqual {77}
	028 Move X20, 0xABB000
	029 Move X20, [X20+3344]
	030 Move X0, [X20]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {36}
	034 Call 0x1C17DFC
	035 Move X0, [X20]
	036 Move X8, [X0+184]
	037 Move X8, [X8]
	038 Move [X19+24], X8
	039 Move X0, [X19+32]
	040 Move [X19+56], X31
	041 Compare X0, 0
	042 JumpIfEqual {56}
	043 Move X8, [X0]
	044 Move X9, [X8+392]
	045 Move X1, [X8+400]
	046 NotImplemented "Instruction BLR not yet implemented."
	047 Move TEMP, X0
	048 And TEMP, TEMP, 1
	049 Compare TEMP, 1
	050 JumpIfEqual {56}
	051 Move X0, [X19+32]
	052 Compare X0, 0
	053 JumpIfEqual {89}
	054 Move X1, X31
	055 Call SafeHandle.Dispose, X0
	056 Add X19, X19, 40
	057 Move X0, X19
	058 Move X1, X31
	059 Call GCHandle.get_IsAllocated, X0
	060 Move TEMP, X0
	061 And TEMP, TEMP, 1
	062 Compare TEMP, 1
	063 JumpIfNotEqual {72}
	064 Move X0, X19
	065 Move X20, [X31+16]
	066 Move X19, [X31+24]
	067 Move X1, X31
	068 Move X30, [X31+32]
	069 Move X21, [X31+40]
	070 Call GCHandle.Free, X0
	071 Return 
	072 Move X20, [X31+16]
	073 Move X19, [X31+24]
	074 Move X30, [X31+32]
	075 Move X21, [X31+40]
	076 Return 
	077 Move W8, 1
	078 Move [X19+48], W8
	079 Move X8, 0xA92000
	080 Move X8, [X8+3088]
	081 Move X0, [X8]
	082 Move W8, [X0+224]
	083 Compare W8, 0
	084 JumpIfNotEqual {86}
	085 Call 0x1C17DFC
	086 Move X0, X19
	087 Move X1, X31
	088 Call GC.SuppressFinalize, X0
	089 Call 0x1C17F20

Method: System.Void Flush()

Disassembly:
	0x036695FC LDR X0, [X0 + 0x428]
	0x03669600 ADD W8, W20, 0xB
	0x03669604 CMP W8, 0x9
	0x03669608 B.HI 0x3669690
	0x0366960C ADRP X9, 0xFFFFFFFFFD52E000
	0x03669610 ADD X9, X9, 0x730
	0x03669614 ADR X10, 0x10
	0x03669618 LDRB W11, [X9, X8, LSL]
	0x0366961C ADD X10, X10, X11, 0x2, LSL
	0x03669620 BR X10
	0x03669624 ADRP X0, 0xAD4000
	0x03669628 LDR X0, [X0 + 0x430]
	0x0366962C B 0x3669690
	0x03669630 MOV X19, X0
	0x03669634 ADRP X0, 0xAD4000
	0x03669638 LDR X0, [X0 + 0x438]
	0x0366963C BL 0x1C16D08
	0x03669640 MOV X1, X0
	0x03669644 MOV X0, X19
	0x03669648 BL 0x1C16DEC
	0x0366964C ADRP X0, 0xAD4000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xD78000
	006 Move X20, 0xAD5000
	007 Move W8, [X21+1832]
	008 Move X20, [X20+944]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xAD5000
	015 Move X0, [X0+944]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+1832], W8
	019 Move X0, [X19+32]
	020 Call DeflateStreamNative.Flush, X0
	021 Move X2, [X20]
	022 Move W1, W0
	023 Move X0, X19
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X30, [X31+32]
	027 Move X21, [X31+40]
	028 Call DeflateStreamNative.CheckResult, X0, X1, X2
	029 Return 

Method: System.Int32 ReadZStream(System.IntPtr buffer, System.Int32 length)

Disassembly:
	0x03669078 ADRP X0, 0xAD4000
	0x0366907C LDR X0, [X0 + 0x3F8]
	0x03669080 BL 0x1C16D08
	0x03669084 MOV X1, X0
	0x03669088 MOV X0, X19
	0x0366908C BL 0x1C16DEC
	0x03669090 STP X30, X19, [X31 - 0x10]!
	0x03669094 ADRP X0, 0xA8A000
	0x03669098 LDR X0, [X0 + 0xB40]
	0x0366909C BL 0x1C16D08
	0x036690A0 BL 0x1C16F10
	0x036690A4 MOV X1, X31
	0x036690A8 MOV X19, X0
	0x036690AC BL 0x3380310
	0x036690B0 ADRP X0, 0xAD4000
	0x036690B4 LDR X0, [X0 + 0x400]
	0x036690B8 BL 0x1C16D08
	0x036690BC MOV X1, X0
	0x036690C0 MOV X0, X19
	0x036690C4 BL 0x1C16DEC
	0x036690C8 STR X30, [X31 - 0x10]!
	0x036690CC LDRB W8, [X0 + 0x35]
	0x036690D0 CBNZ W8, 0x36690DC
	0x036690D4 LDR W8, [X0 + 0x30]
	0x036690D8 CBZ W8, 0x36690E8
	0x036690DC MOV W0, W31
	0x036690E0 LDR X30, [X31], #0x10
	0x036690E4 RET
	0x036690E8 LDR X0, [X0 + 0x28]
	0x036690EC CBZ X0, 0x3669100

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0xD78000
	008 Move X22, 0xAD5000
	009 Move W8, [X23+1833]
	010 Move X22, [X22+880]
	011 Move W20, W2
	012 Move X21, X1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0xAD5000
	019 Move X0, [X0+880]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X23+1833], W8
	023 Move X0, [X19+32]
	024 Move X1, X21
	025 Move W2, W20
	026 Call DeflateStreamNative.ReadZStream, X0, X1, X2
	027 Move X2, [X22]
	028 Move W20, W0
	029 Move X0, X19
	030 Move W1, W20
	031 Call DeflateStreamNative.CheckResult, X0, X1, X2
	032 Move W0, W20
	033 Move X20, [X31+32]
	034 Move X19, [X31+40]
	035 Move X22, [X31+16]
	036 Move X21, [X31+24]
	037 Move X30, [X31+48]
	038 Move X23, [X31+56]
	039 Return X0

Method: System.Void WriteZStream(System.IntPtr buffer, System.Int32 length)

Disassembly:
	0x03669304 BL 0x1C16CF4
	0x03669308 MOVZ W8, 0x1
	0x0366930C STRB W8, [X22 + 0x72D]
	0x03669310 MOV X0, X21
	0x03669314 MOV X1, X31
	0x03669318 BL 0x32C097C
	0x0366931C STR X0, [X31 + 0x8]
	0x03669320 ADD X0, X31, 0x8
	0x03669324 MOV X1, X31
	0x03669328 BL 0x32C05F4
	0x0366932C CBZ X0, 0x3669368
	0x03669330 ADRP X8, 0xAD4000
	0x03669334 LDR X8, [X8 + 0x350]
	0x03669338 LDR X9, [X0]
	0x0366933C LDR X8, [X8]
	0x03669340 LDRB W11, [X9 + 0x130]
	0x03669344 LDRB W10, [X8 + 0x130]
	0x03669348 CMP W11, W10
	0x0366934C B.CC 0x3669368
	0x03669350 LDR X9, [X9 + 0xC8]
	0x03669354 ADD X9, X9, X10, 0x3, LSL
	0x03669358 LDUR X9, [X9 - 0x8]
	0x0366935C CMP X9, X8
	0x03669360 CSEL X0, X0, X31, EQ
	0x03669364 B.EQ 0x366937C
	0x03669368 MOVN W0, 0x0
	0x0366936C LDP X20, X19, [X31 + 0x20]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0xD78000
	008 Move X22, 0xAD5000
	009 Move W8, [X23+1834]
	010 Move X22, [X22+912]
	011 Move W20, W2
	012 Move X21, X1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0xAD5000
	019 Move X0, [X0+912]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X23+1834], W8
	023 Move X0, [X19+32]
	024 Move X1, X21
	025 Move W2, W20
	026 Call DeflateStreamNative.WriteZStream, X0, X1, X2
	027 Move X2, [X22]
	028 Move W1, W0
	029 Move X0, X19
	030 Move X20, [X31+32]
	031 Move X19, [X31+40]
	032 Move X22, [X31+16]
	033 Move X21, [X31+24]
	034 Move X30, [X31+48]
	035 Move X23, [X31+56]
	036 Call DeflateStreamNative.CheckResult, X0, X1, X2
	037 Return 

Method: System.Int32 UnmanagedRead(System.IntPtr buffer, System.Int32 length, System.IntPtr data)

Disassembly:
	0x0366A21C MOV X0, X8
	0x0366A220 BL 0x1C16DFC
	0x0366A224 LDR X2, [X23]
	0x0366A228 MOV X0, X19
	0x0366A22C MOV X1, X20
	0x0366A230 BL 0x366A3CC
	0x0366A234 MOV X0, X19
	0x0366A238 MOV X1, X31
	0x0366A23C BL 0x3686F78
	0x0366A240 MOV W20, W0
	0x0366A244 TBZ X0, 0x0, 0x366A298
	0x0366A248 LDR X0, [X24]
	0x0366A24C LDR W8, [X0 + 0xE0]
	0x0366A250 CBNZ W8, 0x366A258
	0x0366A254 BL 0x1C16DFC
	0x0366A258 BL 0x366A368
	0x0366A25C TBZ X0, 0x0, 0x366A288
	0x0366A260 LDR X0, [X24]
	0x0366A264 LDR W8, [X0 + 0xE0]
	0x0366A268 CBNZ W8, 0x366A270
	0x0366A26C BL 0x1C16DFC
	0x0366A270 ADRP X8, 0xAD3000
	0x0366A274 LDR X8, [X8 + 0x4B0]
	0x0366A278 LDR X2, [X23]
	0x0366A27C MOV X0, X19
	0x0366A280 LDR X1, [X8]
	0x0366A284 BL 0x366A4BC
	0x0366A288 MOV X0, X19
	0x0366A28C MOV X1, X31
	0x0366A290 MOV X2, X31
	0x0366A294 BL 0x36871C0
	0x0366A298 AND W0, W20, 0x1
	0x0366A29C LDP X20, X19, [X31 + 0x40]
	0x0366A2A0 LDP X22, X21, [X31 + 0x30]
	0x0366A2A4 LDP X24, X23, [X31 + 0x20]
	0x0366A2A8 LDP X26, X25, [X31 + 0x10]
	0x0366A2AC LDR X30, [X31], #0x50
	0x0366A2B0 RET
	0x0366A2B4 BL 0x1C16F20
	0x0366A2B8 BL 0x1C16F28
	0x0366A2BC BL 0x1C16F44
	0x0366A2C0 MOV X1, X31
	0x0366A2C4 BL 0x1C16DEC
	0x0366A2C8 STP X30, X21, [X31 - 0x20]!
	0x0366A2CC STP X20, X19, [X31 + 0x10]
	0x0366A2D0 ADRP X21, 0xD76000
	0x0366A2D4 ADRP X20, 0xAD3000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xD77000
	007 Move W8, [X22+1835]
	008 Move X21, X2
	009 Move W19, W1
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0xAD4000
	016 Move X0, [X0+848]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+1835], W8
	020 Move X0, X21
	021 Move X1, X31
	022 Call GCHandle.FromIntPtr, X0
	023 Move [X31+8], X0
	024 Add X0, X31, 8
	025 Move X1, X31
	026 Call GCHandle.get_Target, X0
	027 Compare X0, 0
	028 JumpIfEqual {41}
	029 Move X8, 0xAD4000
	030 Move X8, [X8+848]
	031 Move X9, [X0]
	032 Move X8, [X8]
	033 Move W11, [X9+304]
	034 Move W10, [X8+304]
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move X9, [X9+200]
	037 Add X9, X9, X10
	038 NotImplemented "Instruction LDUR not yet implemented."
	039 NotImplemented "Instruction CMP not yet implemented."
	040 NotImplemented "Instruction CSEL not yet implemented."
	041 Move TEMP, 0
	042 Not TEMP
	043 Move W0, TEMP
	044 Move X20, [X31+32]
	045 Move X19, [X31+40]
	046 Move X22, [X31+16]
	047 Move X21, [X31+24]
	048 Move X30, [X31+48]
	049 Return X0
	050 Compare X0, 0
	051 JumpIfEqual {55}
	052 Move X1, X20
	053 Move W2, W19
	054 Call DeflateStreamNative.UnmanagedRead, X0, X1, X2
	055 Call 0x1C17F20

Method: System.Int32 UnmanagedRead(System.IntPtr buffer, System.Int32 length)

Disassembly:
	0x0366A7EC LDR X8, [X8 + 0x4C8]
	0x0366A7F0 MOV X1, X22
	0x0366A7F4 MOV X3, X31
	0x0366A7F8 MOV X20, X0
	0x0366A7FC LDR X2, [X8]
	0x0366A800 BL 0x33E1224
	0x0366A804 LDR X8, [X23]
	0x0366A808 LDR X8, [X8 + 0xB8]
	0x0366A80C STR X20, [X8 + 0x8]
	0x0366A810 ADRP X8, 0xAB1000
	0x0366A814 LDR X8, [X8 + 0x580]
	0x0366A818 LDR X0, [X8]
	0x0366A81C LDR W8, [X0 + 0xE0]
	0x0366A820 CBNZ W8, 0x366A828
	0x0366A824 BL 0x1C16DFC
	0x0366A828 MOV X0, X21
	0x0366A82C MOV X1, X20
	0x0366A830 MOV X2, X19
	0x0366A834 MOV X3, X31
	0x0366A838 BL 0x33E1324
	0x0366A83C LDP X20, X19, [X31 + 0x40]
	0x0366A840 LDP X22, X21, [X31 + 0x30]
	0x0366A844 LDP X24, X23, [X31 + 0x20]
	0x0366A848 LDR X30, [X31 + 0x10]
	0x0366A84C ADD X31, X31, 0x50
	0x0366A850 RET
	0x0366A854 BL 0x1C16F28
	0x0366A858 BL 0x1C16F44
	0x0366A85C MOV X1, X31
	0x0366A860 BL 0x1C16DEC
	0x0366A864 BL 0x1C16F20
	0x0366A868 STP X30, X21, [X31 - 0x20]!
	0x0366A86C STP X20, X19, [X31 + 0x10]
	0x0366A870 ADRP X21, 0xD76000
	0x0366A874 ADRP X20, 0xAD3000
	0x0366A878 LDRB W8, [X21 + 0x734]
	0x0366A87C LDR X20, [X20 + 0x468]
	0x0366A880 MOV X19, X0
	0x0366A884 TBNZ X8, 0x0, 0x366A8B4
	0x0366A888 ADRP X0, 0xAD3000
	0x0366A88C LDR X0, [X0 + 0x468]
	0x0366A890 BL 0x1C16CF4
	0x0366A894 ADRP X0, 0xAD3000
	0x0366A898 LDR X0, [X0 + 0x4E8]
	0x0366A89C BL 0x1C16CF4
	0x0366A8A0 ADRP X0, 0xAD3000
	0x0366A8A4 LDR X0, [X0 + 0x4F0]
	0x0366A8A8 BL 0x1C16CF4
	0x0366A8AC MOVZ W8, 0x1
	0x0366A8B0 STRB W8, [X21 + 0x734]
	0x0366A8B4 LDR X0, [X20]
	0x0366A8B8 LDR W8, [X0 + 0xE0]
	0x0366A8BC CBNZ W8, 0x366A8C4
	0x0366A8C0 BL 0x1C16DFC
	0x0366A8C4 BL 0x366A368
	0x0366A8C8 TBZ X0, 0x0, 0x366A8FC
	0x0366A8CC LDR X0, [X20]
	0x0366A8D0 ADRP X21, 0xAD3000
	0x0366A8D4 ADRP X20, 0xAD3000
	0x0366A8D8 LDR W8, [X0 + 0xE0]
	0x0366A8DC LDR X21, [X21 + 0x4F0]
	0x0366A8E0 LDR X20, [X20 + 0x4E8]
	0x0366A8E4 CBNZ W8, 0x366A8EC
	0x0366A8E8 BL 0x1C16DFC
	0x0366A8EC LDR X1, [X21]
	0x0366A8F0 LDR X2, [X20]
	0x0366A8F4 MOV X0, X19
	0x0366A8F8 BL 0x366A4BC
	0x0366A8FC MOV X0, X19
	0x0366A900 LDP X20, X19, [X31 + 0x10]
	0x0366A904 MOV X1, X31
	0x0366A908 MOV X2, X31
	0x0366A90C LDP X30, X21, [X31], #0x20
	0x0366A910 B 0x36871C0
	0x0366A914 STR X30, [X31 - 0x20]!
	0x0366A918 STP X20, X19, [X31 + 0x10]
	0x0366A91C ADRP X19, 0xD76000
	0x0366A920 ADRP X20, 0xAD3000
	0x0366A924 LDRB W8, [X19 + 0x735]
	0x0366A928 LDR X20, [X20 + 0x4D0]
	0x0366A92C TBNZ X8, 0x0, 0x366A944
	0x0366A930 ADRP X0, 0xAD3000
	0x0366A934 LDR X0, [X0 + 0x4D0]
	0x0366A938 BL 0x1C16CF4
	0x0366A93C MOVZ W8, 0x1
	0x0366A940 STRB W8, [X19 + 0x735]
	0x0366A944 LDR X0, [X20]
	0x0366A948 BL 0x1C16F10
	0x0366A94C MOV X1, X31
	0x0366A950 MOV X19, X0
	0x0366A954 BL 0x33BDD8C
	0x0366A958 LDR X8, [X20]
	0x0366A95C LDR X8, [X8 + 0xB8]
	0x0366A960 STR X19, [X8]
	0x0366A964 LDP X20, X19, [X31 + 0x10]
	0x0366A968 LDR X30, [X31], #0x20
	0x0366A96C RET
	0x0366A970 MOV X1, X31
	0x0366A974 B 0x33BDD8C
	0x0366A978 STR X30, [X31 - 0x20]!
	0x0366A97C STP X20, X19, [X31 + 0x10]
	0x0366A980 ADRP X20, 0xD76000
	0x0366A984 LDRB W8, [X20 + 0x736]
	0x0366A988 MOV X19, X1
	0x0366A98C TBNZ X8, 0x0, 0x366A9A4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xD77000
	007 Move W8, [X22+1836]
	008 Move W21, W2
	009 Move X20, X1
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {26}
	015 Move X0, 0xA8A000
	016 Move X0, [X0+1560]
	017 Call 0x1C17CF4
	018 Move X0, 0xAB2000
	019 Move X0, [X0+2128]
	020 Call 0x1C17CF4
	021 Move X0, 0xA8A000
	022 Move X0, [X0+1448]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X22+1836], W8
	026 Move X22, [X19+56]
	027 Compare X22, 0
	028 JumpIfNotEqual {38}
	029 Move X8, 0xA8A000
	030 Move X8, [X8+1560]
	031 Move W1, 4096
	032 Move X0, [X8]
	033 Call 0x1C17D6C
	034 Move X22, X0
	035 Move [X19+56], X0
	036 Compare X0, 0
	037 JumpIfEqual {84}
	038 Move X8, 0xA8A000
	039 Move X8, [X8+1448]
	040 Move X0, [X8]
	041 Move W8, [X0+224]
	042 Compare W8, 0
	043 JumpIfNotEqual {45}
	044 Call 0x1C17DFC
	045 Move W1, [X22+24]
	046 Move W0, W21
	047 Move X2, X31
	048 Call Math.Min, X0, X1
	049 Move X8, [X19+24]
	050 Compare X8, 0
	051 JumpIfEqual {83}
	052 Move X9, [X8]
	053 Move X1, [X19+56]
	054 Move W3, W0
	055 Move X10, [X9+856]
	056 Move X4, [X9+864]
	057 Move X0, X8
	058 Move W2, W31
	059 NotImplemented "Instruction BLR not yet implemented."
	060 Move W21, W0
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Move X8, 0xAB2000
	063 Move X8, [X8+2128]
	064 Move X19, [X19+56]
	065 Move X0, [X8]
	066 Move W8, [X0+224]
	067 Compare W8, 0
	068 JumpIfNotEqual {70}
	069 Call 0x1C17DFC
	070 Move X0, X19
	071 Move W1, W31
	072 Move X2, X20
	073 Move W3, W21
	074 Move X4, X31
	075 Call Marshal.Copy, X0, X1, X2, X3
	076 Move W0, W21
	077 Move X20, [X31+32]
	078 Move X19, [X31+40]
	079 Move X22, [X31+16]
	080 Move X21, [X31+24]
	081 Move X30, [X31+48]
	082 Return X0
	083 Call 0x1C17F20
	084 Call 0x1C17F20
	085 Move X20, X0
	086 NotImplemented "Instruction CMP not yet implemented."
	087 Move X0, X20
	088 Call 0x3EB2AD0
	089 Move X20, X0
	090 Move X0, 0xA8A000
	091 Move X0, [X0+2000]
	092 Call 0x1C17D08
	093 Move X8, [X20]
	094 Move X1, [X8]
	095 Call 0x1C18270
	096 Move TEMP, X0
	097 And TEMP, TEMP, 1
	098 Compare TEMP, 1
	099 JumpIfNotEqual {106}
	100 Move X20, [X20]
	101 Call 0x3EB2AE0
	102 Move [X19+64], X20
	103 Move TEMP, 11
	104 Not TEMP
	105 Move W21, TEMP
	106 Move W0, 8
	107 Call 0x3EB2AF0
	108 Move X8, [X20]
	109 Move [X0], X8
	110 Move X1, 0x84B000
	111 Add X1, X1, 3672
	112 Move X2, X31
	113 Call 0x3EB2B00
	114 Move X20, X0
	115 Call 0x3EB2AE0
	116 Move X0, X20
	117 Call 0x1D2D690
	118 Call 0x1991590

Method: System.Int32 UnmanagedWrite(System.IntPtr buffer, System.Int32 length, System.IntPtr data)

Disassembly:
	0x0366A2D8 LDRB W8, [X21 + 0x731]
	0x0366A2DC LDR X20, [X20 + 0x468]
	0x0366A2E0 MOV X19, X0
	0x0366A2E4 TBNZ X8, 0x0, 0x366A308
	0x0366A2E8 ADRP X0, 0xAD3000
	0x0366A2EC LDR X0, [X0 + 0x468]
	0x0366A2F0 BL 0x1C16CF4
	0x0366A2F4 ADRP X0, 0xAD3000
	0x0366A2F8 LDR X0, [X0 + 0x4C0]
	0x0366A2FC BL 0x1C16CF4
	0x0366A300 MOVZ W8, 0x1
	0x0366A304 STRB W8, [X21 + 0x731]
	0x0366A308 MOV X0, X19
	0x0366A30C MOV X1, X31
	0x0366A310 BL 0x36873F4
	0x0366A314 LDR X0, [X20]
	0x0366A318 LDR W8, [X0 + 0xE0]
	0x0366A31C CBNZ W8, 0x366A324
	0x0366A320 BL 0x1C16DFC
	0x0366A324 BL 0x366A368
	0x0366A328 TBZ X0, 0x0, 0x366A35C
	0x0366A32C LDR X0, [X20]
	0x0366A330 ADRP X20, 0xAD3000
	0x0366A334 LDR W8, [X0 + 0xE0]
	0x0366A338 LDR X20, [X20 + 0x4C0]
	0x0366A33C CBNZ W8, 0x366A344
	0x0366A340 BL 0x1C16DFC
	0x0366A344 LDR X2, [X20]
	0x0366A348 MOV X0, X19
	0x0366A34C LDP X20, X19, [X31 + 0x10]
	0x0366A350 MOV X1, X31
	0x0366A354 LDP X30, X21, [X31], #0x20
	0x0366A358 B 0x366A3CC
	0x0366A35C LDP X20, X19, [X31 + 0x10]
	0x0366A360 LDP X30, X21, [X31], #0x20
	0x0366A364 RET
	0x0366A368 STR X30, [X31 - 0x20]!
	0x0366A36C STP X20, X19, [X31 + 0x10]
	0x0366A370 ADRP X20, 0xD76000
	0x0366A374 ADRP X19, 0xAD3000
	0x0366A378 LDRB W8, [X20 + 0x748]
	0x0366A37C LDR X19, [X19 + 0x468]
	0x0366A380 TBNZ X8, 0x0, 0x366A398
	0x0366A384 ADRP X0, 0xAD3000
	0x0366A388 LDR X0, [X0 + 0x468]
	0x0366A38C BL 0x1C16CF4
	0x0366A390 MOVZ W8, 0x1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xD77000
	007 Move W8, [X22+1837]
	008 Move X21, X2
	009 Move W19, W1
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0xAD4000
	016 Move X0, [X0+848]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+1837], W8
	020 Move X0, X21
	021 Move X1, X31
	022 Call GCHandle.FromIntPtr, X0
	023 Move [X31+8], X0
	024 Add X0, X31, 8
	025 Move X1, X31
	026 Call GCHandle.get_Target, X0
	027 Compare X0, 0
	028 JumpIfEqual {41}
	029 Move X8, 0xAD4000
	030 Move X8, [X8+848]
	031 Move X9, [X0]
	032 Move X8, [X8]
	033 Move W11, [X9+304]
	034 Move W10, [X8+304]
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move X9, [X9+200]
	037 Add X9, X9, X10
	038 NotImplemented "Instruction LDUR not yet implemented."
	039 NotImplemented "Instruction CMP not yet implemented."
	040 NotImplemented "Instruction CSEL not yet implemented."
	041 Move TEMP, 0
	042 Not TEMP
	043 Move W0, TEMP
	044 Move X20, [X31+32]
	045 Move X19, [X31+40]
	046 Move X22, [X31+16]
	047 Move X21, [X31+24]
	048 Move X30, [X31+48]
	049 Return X0
	050 Compare X0, 0
	051 JumpIfEqual {55}
	052 Move X1, X20
	053 Move W2, W19
	054 Call DeflateStreamNative.UnmanagedWrite, X0, X1, X2
	055 Call 0x1C17F20

Method: System.Int32 UnmanagedWrite(System.IntPtr buffer, System.Int32 length)

Disassembly:
	0x0366A990 ADRP X0, 0xAD3000
	0x0366A994 LDR X0, [X0 + 0x4F8]
	0x0366A998 BL 0x1C16CF4
	0x0366A99C MOVZ W8, 0x1
	0x0366A9A0 STRB W8, [X20 + 0x736]
	0x0366A9A4 CBZ X19, 0x366A9F4
	0x0366A9A8 ADRP X9, 0xAD3000
	0x0366A9AC LDR X9, [X9 + 0x4F8]
	0x0366A9B0 LDR X8, [X19]
	0x0366A9B4 LDR X1, [X9]
	0x0366A9B8 LDRB W10, [X8 + 0x130]
	0x0366A9BC LDRB W9, [X1 + 0x130]
	0x0366A9C0 CMP W10, W9
	0x0366A9C4 B.CC 0x366A9EC
	0x0366A9C8 LDR X8, [X8 + 0xC8]
	0x0366A9CC ADD X8, X8, X9, 0x3, LSL
	0x0366A9D0 LDUR X8, [X8 - 0x8]
	0x0366A9D4 CMP X8, X1
	0x0366A9D8 B.NE 0x366A9EC
	0x0366A9DC MOV X0, X19
	0x0366A9E0 LDP X20, X19, [X31 + 0x10]
	0x0366A9E4 LDR X30, [X31], #0x20
	0x0366A9E8 B 0x366A868
	0x0366A9EC MOV X0, X19
	0x0366A9F0 BL 0x1C171E0
	0x0366A9F4 BL 0x1C16F20
	0x0366A9F8 B 0x366A9FC
	0x0366A9FC STR X30, [X31 - 0x20]!
	0x0366AA00 STP X20, X19, [X31 + 0x10]
	0x0366AA04 ADRP X20, 0xD76000
	0x0366AA08 LDRB W8, [X20 + 0x737]
	0x0366AA0C MOV W19, W0
	0x0366AA10 TBNZ X8, 0x0, 0x366ACEC
	0x0366AA14 ADRP X0, 0xAD3000
	0x0366AA18 LDR X0, [X0 + 0x500]
	0x0366AA1C BL 0x1C16CF4
	0x0366AA20 ADRP X0, 0xAD3000
	0x0366AA24 LDR X0, [X0 + 0x508]
	0x0366AA28 BL 0x1C16CF4
	0x0366AA2C ADRP X0, 0xAD3000
	0x0366AA30 LDR X0, [X0 + 0x510]
	0x0366AA34 BL 0x1C16CF4
	0x0366AA38 ADRP X0, 0xAD3000
	0x0366AA3C LDR X0, [X0 + 0x518]
	0x0366AA40 BL 0x1C16CF4
	0x0366AA44 ADRP X0, 0xAD3000
	0x0366AA48 LDR X0, [X0 + 0x520]
	0x0366AA4C BL 0x1C16CF4
	0x0366AA50 ADRP X0, 0xAD3000
	0x0366AA54 LDR X0, [X0 + 0x528]
	0x0366AA58 BL 0x1C16CF4
	0x0366AA5C ADRP X0, 0xAD3000
	0x0366AA60 LDR X0, [X0 + 0x530]
	0x0366AA64 BL 0x1C16CF4
	0x0366AA68 ADRP X0, 0xAD3000
	0x0366AA6C LDR X0, [X0 + 0x538]
	0x0366AA70 BL 0x1C16CF4
	0x0366AA74 ADRP X0, 0xAD3000
	0x0366AA78 LDR X0, [X0 + 0x540]
	0x0366AA7C BL 0x1C16CF4
	0x0366AA80 ADRP X0, 0xAD3000
	0x0366AA84 LDR X0, [X0 + 0x548]
	0x0366AA88 BL 0x1C16CF4
	0x0366AA8C ADRP X0, 0xAD3000
	0x0366AA90 LDR X0, [X0 + 0x550]
	0x0366AA94 BL 0x1C16CF4
	0x0366AA98 ADRP X0, 0xAD3000
	0x0366AA9C LDR X0, [X0 + 0x558]
	0x0366AAA0 BL 0x1C16CF4
	0x0366AAA4 ADRP X0, 0xAD3000
	0x0366AAA8 LDR X0, [X0 + 0x560]
	0x0366AAAC BL 0x1C16CF4
	0x0366AAB0 ADRP X0, 0xAD3000
	0x0366AAB4 LDR X0, [X0 + 0x568]
	0x0366AAB8 BL 0x1C16CF4
	0x0366AABC ADRP X0, 0xAD3000
	0x0366AAC0 LDR X0, [X0 + 0x570]
	0x0366AAC4 BL 0x1C16CF4
	0x0366AAC8 ADRP X0, 0xAD3000
	0x0366AACC LDR X0, [X0 + 0x578]
	0x0366AAD0 BL 0x1C16CF4
	0x0366AAD4 ADRP X0, 0xAD3000
	0x0366AAD8 LDR X0, [X0 + 0x580]
	0x0366AADC BL 0x1C16CF4
	0x0366AAE0 ADRP X0, 0xAD3000
	0x0366AAE4 LDR X0, [X0 + 0x588]
	0x0366AAE8 BL 0x1C16CF4
	0x0366AAEC ADRP X0, 0xAD3000
	0x0366AAF0 LDR X0, [X0 + 0x590]
	0x0366AAF4 BL 0x1C16CF4
	0x0366AAF8 ADRP X0, 0xAD3000
	0x0366AAFC LDR X0, [X0 + 0x598]
	0x0366AB00 BL 0x1C16CF4
	0x0366AB04 ADRP X0, 0xAD3000
	0x0366AB08 LDR X0, [X0 + 0x5A0]
	0x0366AB0C BL 0x1C16CF4
	0x0366AB10 ADRP X0, 0xAD3000
	0x0366AB14 LDR X0, [X0 + 0x5A8]
	0x0366AB18 BL 0x1C16CF4
	0x0366AB1C ADRP X0, 0xAD3000
	0x0366AB20 LDR X0, [X0 + 0x5B0]
	0x0366AB24 BL 0x1C16CF4
	0x0366AB28 ADRP X0, 0xAD3000
	0x0366AB2C LDR X0, [X0 + 0x5B8]
	0x0366AB30 BL 0x1C16CF4
	0x0366AB34 ADRP X0, 0xAD3000
	0x0366AB38 LDR X0, [X0 + 0x5C0]
	0x0366AB3C BL 0x1C16CF4
	0x0366AB40 ADRP X0, 0xAD3000
	0x0366AB44 LDR X0, [X0 + 0x5C8]
	0x0366AB48 BL 0x1C16CF4
	0x0366AB4C ADRP X0, 0xAD3000
	0x0366AB50 LDR X0, [X0 + 0x5D0]
	0x0366AB54 BL 0x1C16CF4
	0x0366AB58 ADRP X0, 0xAD3000
	0x0366AB5C LDR X0, [X0 + 0x5D8]
	0x0366AB60 BL 0x1C16CF4

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X22, 0xD77000
	012 Move W8, [X22+1838]
	013 Move W20, W2
	014 Move X21, X1
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {31}
	020 Move X0, 0xA8A000
	021 Move X0, [X0+1560]
	022 Call 0x1C17CF4
	023 Move X0, 0xAB2000
	024 Move X0, [X0+2128]
	025 Call 0x1C17CF4
	026 Move X0, 0xA8A000
	027 Move X0, [X0+1448]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X22+1838], W8
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move X25, 0xA8A000
	033 Move X26, 0xA8A000
	034 Move X27, 0xAB2000
	035 Move X25, [X25+1560]
	036 Move X26, [X26+1448]
	037 Move X27, [X27+2128]
	038 Move W22, W31
	039 Move X23, [X19+56]
	040 Compare X23, 0
	041 JumpIfNotEqual {49}
	042 Move X0, [X25]
	043 Move W1, 4096
	044 Call 0x1C17D6C
	045 Move X23, X0
	046 Move [X19+56], X0
	047 Compare X0, 0
	048 JumpIfEqual {100}
	049 Move X0, [X26]
	050 Move W8, [X0+224]
	051 Compare W8, 0
	052 JumpIfNotEqual {54}
	053 Call 0x1C17DFC
	054 Move W1, [X23+24]
	055 Move W0, W20
	056 Move X2, X31
	057 Call Math.Min, X0, X1
	058 Move X8, [X27]
	059 Move X24, [X19+56]
	060 Move W23, W0
	061 Move W9, [X8+224]
	062 Compare W9, 0
	063 JumpIfNotEqual {66}
	064 Move X0, X8
	065 Call 0x1C17DFC
	066 Move X0, X21
	067 Move X1, X24
	068 Move W2, W31
	069 Move W3, W23
	070 Move X4, X31
	071 Call Marshal.Copy, X0, X1, X2, X3
	072 Move X0, [X19+24]
	073 Compare X0, 0
	074 JumpIfEqual {99}
	075 Move X8, [X0]
	076 Move X1, [X19+56]
	077 Move X9, [X8+904]
	078 Move X4, [X8+912]
	079 Move W2, W31
	080 Move W3, W23
	081 NotImplemented "Instruction BLR not yet implemented."
	082 Subtract W20, W20, W23
	083 Add X21, X21, W23
	084 NotImplemented "Instruction CMP not yet implemented."
	085 Add W22, W23, W22
	086 Move W22, W31
	087 Move W0, W22
	088 Move X20, [X31+64]
	089 Move X19, [X31+72]
	090 Move X22, [X31+48]
	091 Move X21, [X31+56]
	092 Move X24, [X31+32]
	093 Move X23, [X31+40]
	094 Move X26, [X31+16]
	095 Move X25, [X31+24]
	096 Move X30, [X31+80]
	097 Move X27, [X31+88]
	098 Return X0
	099 Call 0x1C17F20
	100 Call 0x1C17F20
	101 Move X20, X0
	102 NotImplemented "Instruction CMP not yet implemented."
	103 Move X0, X20
	104 Call 0x3EB2AD0
	105 Move X20, X0
	106 Move X0, 0xA8A000
	107 Move X0, [X0+2000]
	108 Call 0x1C17D08
	109 Move X8, [X20]
	110 Move X1, [X8]
	111 Call 0x1C18270
	112 Move TEMP, X0
	113 And TEMP, TEMP, 1
	114 Compare TEMP, 1
	115 JumpIfNotEqual {122}
	116 Move X20, [X20]
	117 Call 0x3EB2AE0
	118 Move [X19+64], X20
	119 Move TEMP, 11
	120 Not TEMP
	121 Move W22, TEMP
	122 Move W0, 8
	123 Call 0x3EB2AF0
	124 Move X8, [X20]
	125 Move [X0], X8
	126 Move X1, 0x84B000
	127 Add X1, X1, 3672
	128 Move X2, X31
	129 Call 0x3EB2B00
	130 Move X20, X0
	131 Call 0x3EB2AE0
	132 Move X0, X20
	133 Call 0x1D2D690
	134 Call 0x1991590

Method: System.Void CheckResult(System.Int32 result, System.String where)

Disassembly:
	0x0366A5C8 ADRP X0, 0xABB000
	0x0366A5CC LDR X0, [X0 + 0x948]
	0x0366A5D0 BL 0x1C16CF4
	0x0366A5D4 ADRP X0, 0xAB1000
	0x0366A5D8 LDR X0, [X0 + 0x580]
	0x0366A5DC BL 0x1C16CF4
	0x0366A5E0 ADRP X0, 0xAB2000
	0x0366A5E4 LDR X0, [X0 + 0xF20]
	0x0366A5E8 BL 0x1C16CF4
	0x0366A5EC ADRP X0, 0xAD3000
	0x0366A5F0 LDR X0, [X0 + 0x468]
	0x0366A5F4 BL 0x1C16CF4
	0x0366A5F8 ADRP X0, 0xA89000
	0x0366A5FC LDR X0, [X0 + 0x9D0]
	0x0366A600 BL 0x1C16CF4
	0x0366A604 ADRP X0, 0xAD3000
	0x0366A608 LDR X0, [X0 + 0x4C8]
	0x0366A60C BL 0x1C16CF4
	0x0366A610 ADRP X0, 0xAD3000
	0x0366A614 LDR X0, [X0 + 0x4D0]
	0x0366A618 BL 0x1C16CF4
	0x0366A61C ADRP X0, 0xAD3000
	0x0366A620 LDR X0, [X0 + 0x4D8]
	0x0366A624 BL 0x1C16CF4
	0x0366A628 ADRP X0, 0xAD3000
	0x0366A62C LDR X0, [X0 + 0x4E0]
	0x0366A630 BL 0x1C16CF4
	0x0366A634 MOVZ W8, 0x1
	0x0366A638 STRB W8, [X21 + 0x733]
	0x0366A63C LDR X0, [X23]
	0x0366A640 LDR W8, [X0 + 0xE0]
	0x0366A644 CBNZ W8, 0x366A64C
	0x0366A648 BL 0x1C16DFC
	0x0366A64C BL 0x366A368
	0x0366A650 TBZ X0, 0x0, 0x366A74C
	0x0366A654 ADRP X8, 0xA89000
	0x0366A658 LDR X8, [X8 + 0x9D0]
	0x0366A65C ADRP X22, 0xA89000
	0x0366A660 MOVZ W1, 0x2
	0x0366A664 LDR X0, [X8]
	0x0366A668 LDR X22, [X22 + 0xB58]
	0x0366A66C BL 0x1C16D6C
	0x0366A670 LDR X24, [X19 + 0x40]
	0x0366A674 MOV X21, X0
	0x0366A678 BL 0x1C16D44
	0x0366A67C LDR X0, [X22]
	0x0366A680 CMP X24, 0x0
	0x0366A684 CSET W8, NE
	0x0366A688 ADD X1, X31, 0x1C
	0x0366A68C STRB W8, [X31 + 0x1C]
	0x0366A690 BL 0x1C16E04
	0x0366A694 CBZ X21, 0x366A864
	0x0366A698 MOV X22, X0
	0x0366A69C CBZ X0, 0x366A6B4
	0x0366A6A0 LDR X8, [X21]
	0x0366A6A4 MOV X0, X22
	0x0366A6A8 LDR X1, [X8 + 0x40]
	0x0366A6AC BL 0x1C16E00
	0x0366A6B0 CBZ X0, 0x366A858
	0x0366A6B4 LDR W8, [X21 + 0x18]
	0x0366A6B8 CBZ W8, 0x366A854
	0x0366A6BC STR X22, [X21 + 0x20]
	0x0366A6C0 ADRP X8, 0xAB2000
	0x0366A6C4 LDR X8, [X8 + 0xF20]
	0x0366A6C8 ADD X1, X31, 0x8
	0x0366A6CC STR X20, [X31 + 0x8]
	0x0366A6D0 LDR X0, [X8]
	0x0366A6D4 BL 0x1C16E04
	0x0366A6D8 MOV X22, X0
	0x0366A6DC CBZ X0, 0x366A6F4
	0x0366A6E0 LDR X8, [X21]
	0x0366A6E4 MOV X0, X22
	0x0366A6E8 LDR X1, [X8 + 0x40]
	0x0366A6EC BL 0x1C16E00
	0x0366A6F0 CBZ X0, 0x366A858

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move TEMP, X1
	005 And TEMP, TEMP, -2147483648
	006 Compare TEMP, -2147483648
	007 JumpIfEqual {12}
	008 Move X20, [X31+16]
	009 Move X19, [X31+24]
	010 Move X30, [X31+32]
	011 Return 
	012 Move W20, W1
	013 Add X0, X0, 64
	014 Move X1, X31
	015 Move [X31+8], X2
	016 Call 0x1C252E8
	017 Compare X0, 0
	018 JumpIfNotEqual {31}
	019 Move X0, 0xAD4000
	020 Move X0, [X0+1064]
	021 Add W8, W20, 11
	022 NotImplemented "Instruction CMP not yet implemented."
	023 Move X9, -44900352
	024 Add X9, X9, 1840
	025 NotImplemented "Instruction ADR not yet implemented."
	026 Move W11, [X9]
	027 Add X10, X10, X11
	028 CallNoReturn X10
	029 Move X0, 0xAD4000
	030 Move X0, [X0+1072]
	031 Move X19, X0
	032 Move X0, 0xAD4000
	033 Move X0, [X0+1080]
	034 Call 0x1C17D08
	035 Move X1, X0
	036 Move X0, X19
	037 Call 0x1C17DEC
	038 Move X0, 0xAD4000
	039 Move X0, [X0+1088]
	040 Move X0, 0xAB7000
	041 Move X0, [X0+3200]
	042 Move X0, 0xAD4000
	043 Move X0, [X0+1096]
	044 Move X0, 0xAD4000
	045 Move X0, [X0+1104]
	046 Move X0, 0xAD4000
	047 Move X0, [X0+1112]
	048 Move X0, 0xAD4000
	049 Move X0, [X0+1120]
	050 Call 0x1C17D08
	051 Move X19, X0
	052 Move X0, 0xA8A000
	053 Move X0, [X0+3544]
	054 Call 0x1C17D08
	055 Move X2, [X31+8]
	056 Move X1, X0
	057 Move X0, X19
	058 Move X3, X31
	059 Call String.Concat, X0, X1, X2
	060 Move X19, X0
	061 Move X0, 0xAB8000
	062 Move X0, [X0+1960]
	063 Call 0x1C17D08
	064 Call 0x1C17F10
	065 Move X1, X19
	066 Move X2, X31
	067 Move X20, X0
	068 Call IOException..ctor, X0, X1
	069 Move X0, 0xAD4000
	070 Move X0, [X0+1080]
	071 Call 0x1C17D08
	072 Move X1, X0
	073 Move X0, X20
	074 Call 0x1C17DEC

Method: System.IO.Compression.DeflateStreamNative/SafeDeflateStreamHandle CreateZStream(System.IO.Compression.CompressionMode compress, System.Boolean gzip, System.IO.Compression.DeflateStreamNative/UnmanagedReadOrWrite feeder, System.IntPtr data)

Disassembly:
	0x0366A428 BL 0x366A368
	0x0366A42C TBZ X0, 0x0, 0x366A498
	0x0366A430 LDR X0, [X23]
	0x0366A434 LDR W8, [X0 + 0xE0]
	0x0366A438 CBNZ W8, 0x366A444
	0x0366A43C BL 0x1C16DFC
	0x0366A440 LDR X0, [X23]
	0x0366A444 LDR X8, [X0 + 0xB8]
	0x0366A448 MOV X0, X21
	0x0366A44C LDR X22, [X8]
	0x0366A450 BL 0x366B318
	0x0366A454 MOV X21, X0
	0x0366A458 CBZ X20, 0x366A4A8
	0x0366A45C LDR X0, [X23]
	0x0366A460 LDR W8, [X0 + 0xE0]
	0x0366A464 CBNZ W8, 0x366A46C
	0x0366A468 BL 0x1C16DFC
	0x0366A46C MOV X0, X20
	0x0366A470 BL 0x366B400
	0x0366A474 MOV X3, X0
	0x0366A478 CBZ X22, 0x366A4B8
	0x0366A47C MOV X0, X22
	0x0366A480 MOV X1, X21
	0x0366A484 MOV X2, X19
	0x0366A488 LDP X20, X19, [X31 + 0x20]
	0x0366A48C LDP X22, X21, [X31 + 0x10]
	0x0366A490 LDP X30, X23, [X31], #0x30
	0x0366A494 B 0x366BF28
	0x0366A498 LDP X20, X19, [X31 + 0x20]
	0x0366A49C LDP X22, X21, [X31 + 0x10]
	0x0366A4A0 LDP X30, X23, [X31], #0x30
	0x0366A4A4 RET
	0x0366A4A8 ADRP X8, 0xA89000
	0x0366A4AC LDR X8, [X8 + 0x988]
	0x0366A4B0 LDR X3, [X8]
	0x0366A4B4 CBNZ X22, 0x366A47C
	0x0366A4B8 BL 0x1C16F20
	0x0366A4BC STP X30, X23, [X31 - 0x30]!
	0x0366A4C0 STP X22, X21, [X31 + 0x10]
	0x0366A4C4 STP X20, X19, [X31 + 0x20]
	0x0366A4C8 ADRP X23, 0xD76000

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0xD77000
	009 Move X23, 0xAD4000
	010 Move W8, [X24+1839]
	011 Move X23, [X23+1056]
	012 Move X19, X3
	013 Move X22, X2
	014 Move W21, W1
	015 Move W20, W0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0xAD4000
	021 Move X0, [X0+1056]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X24+1839], W8
	025 Move X0, X22
	026 Call 0x1C18294
	027 Move X2, X0
	028 And W1, W21, 1
	029 Move W0, W20
	030 Move X3, X19
	031 Call 0x3EB2DF0
	032 Move X8, [X23]
	033 Move X19, X0
	034 Move X0, X8
	035 Call 0x1C17F10
	036 Move W2, 1
	037 Move X1, X31
	038 Move X3, X31
	039 Move X20, X0
	040 Call SafeHandle..ctor, X0, X1, X2
	041 Move [X20+16], X19
	042 Move X0, X20
	043 Move X20, [X31+48]
	044 Move X19, [X31+56]
	045 Move X22, [X31+32]
	046 Move X21, [X31+40]
	047 Move X24, [X31+16]
	048 Move X23, [X31+24]
	049 Move X30, [X31+64]
	050 Return X0

Method: System.Int32 CloseZStream(System.IntPtr stream)

Disassembly:
	0x0366AB74 LDR X0, [X0 + 0x5E8]

ISIL:
	001 Call 0x3EB2E30
	002 Return X0

Method: System.Int32 Flush(System.IO.Compression.DeflateStreamNative/SafeDeflateStreamHandle stream)

Disassembly:
	0x0366A564 MOV X2, X19
	0x0366A568 LDP X20, X19, [X31 + 0x20]
	0x0366A56C LDP X22, X21, [X31 + 0x10]
	0x0366A570 LDP X30, X23, [X31], #0x30
	0x0366A574 B 0x366BF28
	0x0366A578 LDP X20, X19, [X31 + 0x20]
	0x0366A57C LDP X22, X21, [X31 + 0x10]
	0x0366A580 LDP X30, X23, [X31], #0x30
	0x0366A584 RET
	0x0366A588 BL 0x1C16F20
	0x0366A58C SUB X31, X31, 0x50
	0x0366A590 STR X30, [X31 + 0x10]
	0x0366A594 STP X24, X23, [X31 + 0x20]
	0x0366A598 STP X22, X21, [X31 + 0x30]
	0x0366A59C STP X20, X19, [X31 + 0x40]
	0x0366A5A0 ADRP X21, 0xD76000
	0x0366A5A4 ADRP X23, 0xAD3000
	0x0366A5A8 LDRB W8, [X21 + 0x733]
	0x0366A5AC LDR X23, [X23 + 0x468]
	0x0366A5B0 MOV X20, X1
	0x0366A5B4 MOV X19, X0
	0x0366A5B8 TBNZ X8, 0x0, 0x366A63C
	0x0366A5BC ADRP X0, 0xA89000
	0x0366A5C0 LDR X0, [X0 + 0xB58]
	0x0366A5C4 BL 0x1C16CF4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Compare X0, 0
	005 JumpIfEqual {25}
	006 Add X1, X31, 12
	007 Move X2, X31
	008 Move X19, X0
	009 Move [X31+12], W31
	010 Call SafeHandle.DangerousAddRef, X0, X1
	011 Move X0, [X19+16]
	012 Call 0x3EB2E00
	013 Move W8, [X31+12]
	014 Move W20, W0
	015 Compare W8, 0
	016 JumpIfEqual {20}
	017 Move X0, X19
	018 Move X1, X31
	019 Call SafeHandle.DangerousRelease, X0
	020 Move W0, W20
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move X30, [X31+32]
	024 Return X0
	025 Move X0, -45412352
	026 Add X0, X0, 40
	027 Call 0x1C17F40
	028 Move X1, X31
	029 Call 0x1C17DEC

Method: System.Int32 ReadZStream(System.IO.Compression.DeflateStreamNative/SafeDeflateStreamHandle stream, System.IntPtr buffer, System.Int32 length)

Disassembly:
	0x0366A6F4 LDR W8, [X21 + 0x18]
	0x0366A6F8 CMP W8, 0x1
	0x0366A6FC B.LS 0x366A854
	0x0366A700 STR X22, [X21 + 0x28]
	0x0366A704 ADRP X8, 0xAD3000
	0x0366A708 LDR X8, [X8 + 0x4D8]
	0x0366A70C MOV X1, X21
	0x0366A710 MOV X2, X31
	0x0366A714 LDR X0, [X8]
	0x0366A718 BL 0x32C2F6C
	0x0366A71C LDR X8, [X23]
	0x0366A720 MOV X21, X0
	0x0366A724 LDR W9, [X8 + 0xE0]
	0x0366A728 CBNZ W9, 0x366A734
	0x0366A72C MOV X0, X8
	0x0366A730 BL 0x1C16DFC
	0x0366A734 ADRP X8, 0xAD3000
	0x0366A738 LDR X8, [X8 + 0x4E0]
	0x0366A73C MOV X0, X19
	0x0366A740 MOV X1, X21
	0x0366A744 LDR X2, [X8]
	0x0366A748 BL 0x366A3CC
	0x0366A74C LDRB W8, [X19 + 0x50]
	0x0366A750 TBNZ X8, 0x3, 0x366A768
	0x0366A754 MOV X0, X19
	0x0366A758 MOV X1, X20
	0x0366A75C MOV X2, X31
	0x0366A760 BL 0x36871C0
	0x0366A764 B 0x366A83C
	0x0366A768 MOV X0, X19
	0x0366A76C MOV X1, X31

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Compare X0, 0
	007 JumpIfEqual {33}
	008 Move W20, W2
	009 Move X21, X1
	010 Add X1, X31, 12
	011 Move X2, X31
	012 Move X19, X0
	013 Move [X31+12], W31
	014 Call SafeHandle.DangerousAddRef, X0, X1
	015 Move X0, [X19+16]
	016 Move X1, X21
	017 Move W2, W20
	018 Call 0x3EB2E10
	019 Move W8, [X31+12]
	020 Move W20, W0
	021 Compare W8, 0
	022 JumpIfEqual {26}
	023 Move X0, X19
	024 Move X1, X31
	025 Call SafeHandle.DangerousRelease, X0
	026 Move W0, W20
	027 Move X20, [X31+32]
	028 Move X19, [X31+40]
	029 Move X30, [X31+16]
	030 Move X21, [X31+24]
	031 Add X31, X31, 48
	032 Return X0
	033 Move X0, -45412352
	034 Add X0, X0, 40
	035 Call 0x1C17F40
	036 Move X1, X31
	037 Call 0x1C17DEC

Method: System.Int32 WriteZStream(System.IO.Compression.DeflateStreamNative/SafeDeflateStreamHandle stream, System.IntPtr buffer, System.Int32 length)

Disassembly:
	0x0366A770 BL 0x3686F78
	0x0366A774 TBNZ X0, 0x0, 0x366A83C
	0x0366A778 LDR X21, [X19 + 0x40]
	0x0366A77C BL 0x1C16D44
	0x0366A780 MOV X0, X20
	0x0366A784 MOV X1, X31
	0x0366A788 MOV X2, X31
	0x0366A78C BL 0x33C5D2C
	0x0366A790 CBZ X21, 0x366A754
	0x0366A794 TBNZ X0, 0x0, 0x366A754
	0x0366A798 ADRP X23, 0xAD3000
	0x0366A79C LDR X23, [X23 + 0x4D0]
	0x0366A7A0 LDR X0, [X23]
	0x0366A7A4 LDR W8, [X0 + 0xE0]
	0x0366A7A8 CBNZ W8, 0x366A7B4
	0x0366A7AC BL 0x1C16DFC
	0x0366A7B0 LDR X0, [X23]
	0x0366A7B4 LDR X8, [X0 + 0xB8]
	0x0366A7B8 LDR X20, [X8 + 0x8]
	0x0366A7BC CBNZ X20, 0x366A810
	0x0366A7C0 LDR W8, [X0 + 0xE0]
	0x0366A7C4 CBNZ W8, 0x366A7D0
	0x0366A7C8 BL 0x1C16DFC
	0x0366A7CC LDR X0, [X23]
	0x0366A7D0 ADRP X9, 0xABB000
	0x0366A7D4 LDR X8, [X0 + 0xB8]
	0x0366A7D8 LDR X9, [X9 + 0x948]
	0x0366A7DC LDR X22, [X8]
	0x0366A7E0 LDR X0, [X9]
	0x0366A7E4 BL 0x1C16F10
	0x0366A7E8 ADRP X8, 0xAD3000

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Compare X0, 0
	007 JumpIfEqual {33}
	008 Move W20, W2
	009 Move X21, X1
	010 Add X1, X31, 12
	011 Move X2, X31
	012 Move X19, X0
	013 Move [X31+12], W31
	014 Call SafeHandle.DangerousAddRef, X0, X1
	015 Move X0, [X19+16]
	016 Move X1, X21
	017 Move W2, W20
	018 Call 0x3EB2E20
	019 Move W8, [X31+12]
	020 Move W20, W0
	021 Compare W8, 0
	022 JumpIfEqual {26}
	023 Move X0, X19
	024 Move X1, X31
	025 Call SafeHandle.DangerousRelease, X0
	026 Move W0, W20
	027 Move X20, [X31+32]
	028 Move X19, [X31+40]
	029 Move X30, [X31+16]
	030 Move X21, [X31+24]
	031 Add X31, X31, 48
	032 Return X0
	033 Move X0, -45412352
	034 Add X0, X0, 40
	035 Call 0x1C17F40
	036 Move X1, X31
	037 Call 0x1C17DEC

