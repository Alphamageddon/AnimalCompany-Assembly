Type: System.IO.Compression.DeflateStream/WriteMethod

Method: System.Void .ctor(System.Object object, System.IntPtr method)

Disassembly:
	0x03669C60 MOVZ W8, 0x2
	0x03669C64 STRB W8, [X19 + 0x50]
	0x03669C68 TBZ X20, 0x0, 0x3669C78
	0x03669C6C LDRB W8, [X19 + 0x50]
	0x03669C70 ORR W8, W8, 0x1
	0x03669C74 STRB W8, [X19 + 0x50]
	0x03669C78 LDP X20, X19, [X31 + 0x10]
	0x03669C7C LDP X30, X21, [X31], #0x20
	0x03669C80 RET
	0x03669C84 STR X30, [X31 - 0x30]!
	0x03669C88 STP X22, X21, [X31 + 0x10]
	0x03669C8C STP X20, X19, [X31 + 0x20]
	0x03669C90 MOV W20, W3
	0x03669C94 MOV W22, W2
	0x03669C98 MOV W21, W1
	0x03669C9C MOV X1, X4
	0x03669CA0 MOV X2, X5
	0x03669CA4 MOV X3, X6
	0x03669CA8 MOV X4, X31
	0x03669CAC MOV X19, X0
	0x03669CB0 BL 0x367A54C
	0x03669CB4 TBNZ X22, 0x0, 0x3669CDC
	0x03669CB8 TBNZ X21, 0x0, 0x3669CE8
	0x03669CBC TBZ X20, 0x0, 0x3669CCC
	0x03669CC0 LDRB W8, [X19 + 0x50]
	0x03669CC4 ORR W8, W8, 0x4
	0x03669CC8 STRB W8, [X19 + 0x50]
	0x03669CCC LDP X20, X19, [X31 + 0x20]
	0x03669CD0 LDP X22, X21, [X31 + 0x10]
	0x03669CD4 LDR X30, [X31], #0x30
	0x03669CD8 RET
	0x03669CDC MOVZ W8, 0x2
	0x03669CE0 STRB W8, [X19 + 0x50]
	0x03669CE4 TBZ X21, 0x0, 0x3669CBC
	0x03669CE8 LDRB W8, [X19 + 0x50]
	0x03669CEC ORR W8, W8, 0x1
	0x03669CF0 STRB W8, [X19 + 0x50]
	0x03669CF4 TBNZ X20, 0x0, 0x3669CC0
	0x03669CF8 B 0x3669CCC
	0x03669CFC MOVZ W1, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X2+8]
	006 Move [X0+32], X1
	007 Move [X0+40], X2
	008 Move X19, X0
	009 Move X20, X1
	010 Move [X0+16], X8
	011 Move W21, [X2+82]
	012 Move [X0+64], X0
	013 Move X0, X2
	014 Call 0x1C17D84
	015 Move TEMP, X0
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfNotEqual {22}
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Move X8, -27926528
	021 Add X8, X8, 532
	022 NotImplemented "Instruction CMP not yet implemented."
	023 Move X8, -27926528
	024 Add X8, X8, 492
	025 Move [X19+24], X8
	026 Compare X20, 0
	027 JumpIfEqual {40}
	028 Move X8, [X19+16]
	029 Move X9, [X19+32]
	030 Move [X19+24], X8
	031 Move [X19+64], X9
	032 Move X8, -27926528
	033 Add X8, X8, 396
	034 Move [X19+56], X8
	035 Move X20, [X31+16]
	036 Move X19, [X31+24]
	037 Move X30, [X31+32]
	038 Move X21, [X31+40]
	039 Return 
	040 Move X1, -45404160
	041 Add X1, X1, 3811
	042 Move X0, X31
	043 Call 0x1C17F3C
	044 Move X1, X31
	045 Call 0x1C17DEC

Method: System.Void Invoke(System.Byte[] array, System.Int32 offset, System.Int32 count)

Disassembly:
	0x0366A208 BL 0x32C2F6C
	0x0366A20C LDR X8, [X24]
	0x0366A210 MOV X20, X0
	0x0366A214 LDR W9, [X8 + 0xE0]
	0x0366A218 CBNZ W9, 0x366A224

ISIL:
	001 Move X8, [X0+64]
	002 Move X5, [X0+24]
	003 Move X4, [X0+40]
	004 Move X0, X8
	005 CallNoReturn X5

Method: System.IAsyncResult BeginInvoke(System.Byte[] array, System.Int32 offset, System.Int32 count, System.AsyncCallback callback, System.Object object)

Disassembly:
	0x03669D00 B 0x3669D04
	0x03669D04 STP X30, X21, [X31 - 0x20]!
	0x03669D08 STP X20, X19, [X31 + 0x10]
	0x03669D0C ADRP X21, 0xD77000
	0x03669D10 LDRB W8, [X21 + 0x730]
	0x03669D14 MOV W20, W1
	0x03669D18 MOV X19, X0
	0x03669D1C TBNZ X8, 0x0, 0x3669D58
	0x03669D20 ADRP X0, 0xAD4000
	0x03669D24 LDR X0, [X0 + 0x468]
	0x03669D28 BL 0x1C16CF4
	0x03669D2C ADRP X0, 0xA90000
	0x03669D30 LDR X0, [X0 + 0xCC0]
	0x03669D34 BL 0x1C16CF4
	0x03669D38 ADRP X0, 0xAD4000
	0x03669D3C LDR X0, [X0 + 0x470]
	0x03669D40 BL 0x1C16CF4
	0x03669D44 ADRP X0, 0xAD4000
	0x03669D48 LDR X0, [X0 + 0x478]
	0x03669D4C BL 0x1C16CF4
	0x03669D50 MOVZ W8, 0x1
	0x03669D54 STRB W8, [X21 + 0x730]
	0x03669D58 MOV X0, X19
	0x03669D5C MOV X1, X31
	0x03669D60 BL 0x3678424
	0x03669D64 TBZ X0, 0x0, 0x3669DA0
	0x03669D68 ADRP X8, 0xAD4000
	0x03669D6C LDR X8, [X8 + 0x468]
	0x03669D70 LDR X0, [X8]
	0x03669D74 LDR W8, [X0 + 0xE0]
	0x03669D78 CBNZ W8, 0x3669D80
	0x03669D7C BL 0x1C16DFC
	0x03669D80 ADRP X8, 0xAD4000
	0x03669D84 ADRP X9, 0xAD4000
	0x03669D88 LDR X8, [X8 + 0x478]
	0x03669D8C LDR X9, [X9 + 0x470]
	0x03669D90 MOV X0, X19
	0x03669D94 LDR X1, [X8]
	0x03669D98 LDR X2, [X9]
	0x03669D9C BL 0x3669DF0
	0x03669DA0 TBZ X20, 0x0, 0x3669DC4
	0x03669DA4 ADRP X8, 0xA90000

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+32], X30
	003 Move [X31+48], X24
	004 Move [X31+56], X23
	005 Move [X31+64], X22
	006 Move [X31+72], X21
	007 Move [X31+80], X20
	008 Move [X31+88], X19
	009 Move X24, 0xD78000
	010 Move [X31+40], W3
	011 Move [X31+44], W2
	012 Move X23, 0xA8B000
	013 Move W8, [X24+1829]
	014 Move X23, [X23+1880]
	015 Move X19, X5
	016 Move X20, X4
	017 Move X22, X1
	018 Move X21, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {28}
	023 Move X0, 0xA8B000
	024 Move X0, [X0+1880]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X24+1829], W8
	028 Move X0, [X23]
	029 Add X1, X31, 44
	030 Move [X31+16], X31
	031 Move [X31+24], X31
	032 Move [X31], X22
	033 Move [X31+8], X31
	034 Call 0x1C17E04
	035 Move X8, [X23]
	036 Move [X31+8], X0
	037 Add X1, X31, 40
	038 Move X0, X8
	039 Call 0x1C17E04
	040 Move [X31+16], X0
	041 Add X1, X31, 0
	042 Move X0, X21
	043 Move X2, X20
	044 Move X3, X19
	045 Call 0x1C17CB0
	046 Move X20, [X31+80]
	047 Move X19, [X31+88]
	048 Move X22, [X31+64]
	049 Move X21, [X31+72]
	050 Move X24, [X31+48]
	051 Move X23, [X31+56]
	052 Move X30, [X31+32]
	053 Add X31, X31, 96
	054 Return X0

Method: System.Void EndInvoke(System.IAsyncResult result)

Disassembly:
	0x0366A04C CBNZ W8, 0x366A054
	0x0366A050 BL 0x1C16DFC
	0x0366A054 ADRP X8, 0xAD3000

ISIL:
	001 Move X0, X1
	002 Move X1, X31
	003 Call 0x1C17CB4
	004 Return 

