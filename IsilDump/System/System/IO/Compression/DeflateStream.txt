Type: System.IO.Compression.DeflateStream

Method: System.Void .ctor(System.IO.Stream stream, System.IO.Compression.CompressionMode mode)

Disassembly:
	0x03668B20 MOV X2, X31
	0x03668B24 MOV X20, X0
	0x03668B28 BL 0x338C448

ISIL:
	001 Move W3, W31
	002 Move W4, W31

Method: System.Void .ctor(System.IO.Stream stream, System.IO.Compression.CompressionMode mode, System.Boolean leaveOpen)

Disassembly:
	0x03668C8C TBZ X0, 0x0, 0x3668CA4
	0x03668C90 CMP W21, 0x3
	0x03668C94 B.NE 0x3668CC0

ISIL:
	001 And W3, W3, 1
	002 Move W4, W31
	003 Call DeflateStream..ctor, X0, X1, X2, X3, X4
	004 Return 

Method: System.Void .ctor(System.IO.Stream stream, System.IO.Compression.CompressionMode mode, System.Boolean leaveOpen, System.Int32 windowsBits)

Disassembly:
	0x03667FFC MOVZ W8, 0x1
	0x03668000 STRB W8, [X19 + 0x30]
	0x03668004 ADRP X8, 0xA92000

ISIL:
	001 And W3, W3, 1
	002 Move W4, 1
	003 Call DeflateStream..ctor, X0, X1, X2, X3, X4
	004 Return 

Method: System.Void .ctor(System.IO.Stream compressedStream, System.IO.Compression.CompressionMode mode, System.Boolean leaveOpen, System.Boolean gzip)

Disassembly:
	0x03668B2C ADRP X0, 0xAD5000
	0x03668B30 LDR X0, [X0 + 0x3E0]
	0x03668B34 BL 0x1C16D08
	0x03668B38 MOV X1, X0
	0x03668B3C MOV X0, X20
	0x03668B40 BL 0x1C16DEC
	0x03668B44 ADRP X0, 0xA8B000
	0x03668B48 LDR X0, [X0 + 0x5B0]
	0x03668B4C BL 0x1C16D08
	0x03668B50 BL 0x1C16F10
	0x03668B54 MOV X19, X0
	0x03668B58 ADRP X0, 0xABF000
	0x03668B5C LDR X0, [X0 + 0x648]
	0x03668B60 BL 0x1C16D08
	0x03668B64 MOV X1, X0
	0x03668B68 MOV X0, X19
	0x03668B6C MOV X2, X31
	0x03668B70 BL 0x337DF1C
	0x03668B74 B 0x3668C44
	0x03668B78 ADRP X0, 0xA90000
	0x03668B7C LDR X0, [X0 + 0x528]
	0x03668B80 BL 0x1C16D08
	0x03668B84 BL 0x1C16F10
	0x03668B88 MOV X19, X0
	0x03668B8C ADRP X0, 0xAB3000
	0x03668B90 LDR X0, [X0 + 0x640]
	0x03668B94 BL 0x1C16D08
	0x03668B98 MOV X1, X0
	0x03668B9C MOV X0, X19
	0x03668BA0 MOV X2, X31
	0x03668BA4 BL 0x330E100
	0x03668BA8 B 0x3668C44
	0x03668BAC ADRP X0, 0xA93000
	0x03668BB0 LDR X0, [X0 + 0x760]
	0x03668BB4 BL 0x1C16D08
	0x03668BB8 BL 0x1C16F10
	0x03668BBC MOV X19, X0
	0x03668BC0 ADRP X0, 0xAB3000
	0x03668BC4 LDR X0, [X0 + 0x648]
	0x03668BC8 B 0x3668BE8
	0x03668BCC ADRP X0, 0xA93000
	0x03668BD0 LDR X0, [X0 + 0x760]
	0x03668BD4 BL 0x1C16D08
	0x03668BD8 BL 0x1C16F10
	0x03668BDC MOV X19, X0
	0x03668BE0 ADRP X0, 0xABA000
	0x03668BE4 LDR X0, [X0 + 0xD90]
	0x03668BE8 BL 0x1C16D08
	0x03668BEC MOV X20, X0
	0x03668BF0 ADRP X0, 0xABF000
	0x03668BF4 LDR X0, [X0 + 0x5F8]
	0x03668BF8 BL 0x1C16D08
	0x03668BFC MOV X2, X0
	0x03668C00 MOV X0, X19
	0x03668C04 MOV X1, X20
	0x03668C08 MOV X3, X31
	0x03668C0C BL 0x3311888
	0x03668C10 B 0x3668C44
	0x03668C14 ADRP X0, 0xA93000
	0x03668C18 LDR X0, [X0 + 0x578]
	0x03668C1C BL 0x1C16D08
	0x03668C20 BL 0x1C16F10
	0x03668C24 MOV X19, X0
	0x03668C28 ADRP X0, 0xAD5000
	0x03668C2C LDR X0, [X0 + 0x3A0]
	0x03668C30 BL 0x1C16D08
	0x03668C34 MOV X1, X0
	0x03668C38 MOV X0, X19
	0x03668C3C MOV X2, X31
	0x03668C40 BL 0x3314A68
	0x03668C44 ADRP X0, 0xAD5000
	0x03668C48 LDR X0, [X0 + 0x3E0]
	0x03668C4C BL 0x1C16D08
	0x03668C50 MOV X1, X0
	0x03668C54 MOV X0, X19
	0x03668C58 BL 0x1C16DEC
	0x03668C5C BL 0x1C16F20
	0x03668C60 STP X30, X21, [X31 - 0x20]!
	0x03668C64 STP X20, X19, [X31 + 0x10]
	0x03668C68 LDR X8, [X2 + 0x8]
	0x03668C6C STP X1, X2, [X0 + 0x20]
	0x03668C70 MOV X19, X0
	0x03668C74 MOV X20, X1
	0x03668C78 STR X8, [X0 + 0x10]
	0x03668C7C LDRB W21, [X2 + 0x52]
	0x03668C80 STR X0, [X0 + 0x40]
	0x03668C84 MOV X0, X2
	0x03668C88 BL 0x1C16D84

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X24, 0xD79000
	010 Move X25, 0xABB000
	011 Move W8, [X24+1820]
	012 Move X25, [X25+3344]
	013 Move W22, W4
	014 Move W20, W3
	015 Move W19, W2
	016 Move X23, X1
	017 Move X21, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {27}
	022 Move X0, 0xABB000
	023 Move X0, [X0+3344]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X24+1820], W8
	027 Move X0, [X25]
	028 Move W8, [X0+224]
	029 Compare W8, 0
	030 JumpIfNotEqual {32}
	031 Call 0x1C17DFC
	032 Move X0, X21
	033 Move X1, X31
	034 Call Stream..ctor, X0
	035 Compare X23, 0
	036 JumpIfEqual {58}
	037 NotImplemented "Instruction CMP not yet implemented."
	038 And W2, W22, 1
	039 Move X0, X23
	040 Move W1, W19
	041 Move [X21+40], X23
	042 Call DeflateStreamNative.Create, X0, X1, X2
	043 Move [X21+56], X0
	044 Compare X0, 0
	045 JumpIfEqual {82}
	046 And W8, W20, 1
	047 Move [X21+48], W19
	048 Move [X21+52], W8
	049 Move X20, [X31+48]
	050 Move X19, [X31+56]
	051 Move X22, [X31+32]
	052 Move X21, [X31+40]
	053 Move X24, [X31+16]
	054 Move X23, [X31+24]
	055 Move X30, [X31+64]
	056 Move X25, [X31+72]
	057 Return 
	058 Move X0, 0xA91000
	059 Move X0, [X0+1320]
	060 Call 0x1C17D08
	061 Call 0x1C17F10
	062 Move X19, X0
	063 Move X0, 0xAD6000
	064 Move X0, [X0+824]
	065 Call 0x1C17D08
	066 Move X1, X0
	067 Move X0, X19
	068 Move X2, X31
	069 Call ArgumentNullException..ctor, X0, X1
	070 Move X0, 0xA94000
	071 Move X0, [X0+1400]
	072 Call 0x1C17D08
	073 Call 0x1C17F10
	074 Move X19, X0
	075 Move X0, 0xABD000
	076 Move X0, [X0+104]
	077 Call 0x1C17D08
	078 Move X1, X0
	079 Move X0, X19
	080 Move X2, X31
	081 Call ArgumentException..ctor, X0, X1
	082 Move X0, 0xA95000
	083 Move X0, [X0+1880]
	084 Call 0x1C17D08
	085 Call 0x1C17F10
	086 Move X19, X0
	087 Move X0, 0xAD6000
	088 Move X0, [X0+832]
	089 Call 0x1C17D08
	090 Move X1, X0
	091 Move X0, X19
	092 Move X2, X31
	093 Call NotImplementedException..ctor, X0, X1
	094 Move X0, 0xAD6000
	095 Move X0, [X0+840]
	096 Call 0x1C17D08
	097 Move X1, X0
	098 Move X0, X19
	099 Call 0x1C17DEC

Method: System.Void Finalize()

Disassembly:
	0x03668DD0 LDR X0, [X0 + 0x3C0]
	0x03668DD4 BL 0x1C16CF4
	0x03668DD8 MOVZ W8, 0x1
	0x03668DDC STRB W8, [X20 + 0x722]
	0x03668DE0 CBZ X19, 0x3668E9C
	0x03668DE4 ADRP X9, 0xABF000
	0x03668DE8 LDR X9, [X9 + 0x610]
	0x03668DEC LDR X8, [X19]
	0x03668DF0 LDR X9, [X9]
	0x03668DF4 LDRB W11, [X8 + 0x130]
	0x03668DF8 LDRB W10, [X9 + 0x130]
	0x03668DFC CMP W11, W10
	0x03668E00 B.CC 0x3668E54
	0x03668E04 LDR X11, [X8 + 0xC8]
	0x03668E08 ADD X10, X11, X10, 0x3, LSL
	0x03668E0C LDUR X10, [X10 - 0x8]
	0x03668E10 CMP X10, X9
	0x03668E14 B.NE 0x3668E54
	0x03668E18 LDR X9, [X8 + 0x238]
	0x03668E1C LDR X1, [X8 + 0x240]
	0x03668E20 MOV X0, X19
	0x03668E24 BLR X9
	0x03668E28 CBZ X0, 0x3668E54
	0x03668E2C ADRP X8, 0xAD5000
	0x03668E30 LDR X8, [X8 + 0x3C0]
	0x03668E34 LDR X9, [X0]
	0x03668E38 LDR X8, [X8]
	0x03668E3C CMP X9, X8
	0x03668E40 B.NE 0x3668E54
	0x03668E44 MOV X1, X19
	0x03668E48 LDP X20, X19, [X31 + 0x10]
	0x03668E4C LDR X30, [X31], #0x20
	0x03668E50 B 0x3668EE4
	0x03668E54 ADRP X0, 0xA93000
	0x03668E58 LDR X0, [X0 + 0x578]
	0x03668E5C BL 0x1C16D08
	0x03668E60 BL 0x1C16F10
	0x03668E64 MOV X19, X0
	0x03668E68 ADRP X0, 0xABF000
	0x03668E6C LDR X0, [X0 + 0x618]
	0x03668E70 BL 0x1C16D08

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X0]
	006 Move X19, X0
	007 Move X9, [X8+648]
	008 Move X2, [X8+656]
	009 Move W1, W31
	010 NotImplemented "Instruction BLR not yet implemented."
	011 Move X0, X19
	012 Move X20, [X31+16]
	013 Move X19, [X31+24]
	014 Move X1, X31
	015 Move X30, [X31+32]
	016 Move X21, [X31+40]
	017 Call Object.Finalize, X0
	018 Return 
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Move X21, X0
	021 Move X0, X21
	022 Call 0x3EB2AD0
	023 Move X20, [X0]
	024 Call 0x3EB2AE0
	025 Move X0, X19
	026 Move X1, X31
	027 Call Object.Finalize, X0
	028 Compare X20, 0
	029 JumpIfNotEqual {36}
	030 Move X20, [X31+16]
	031 Move X19, [X31+24]
	032 Move X30, [X31+32]
	033 Move X21, [X31+40]
	034 Return 
	035 Move X20, X31
	036 Move X0, X20
	037 Call 0x1C17F18
	038 Move X21, X0
	039 Move X0, X19
	040 Move X1, X31
	041 Call Object.Finalize, X0
	042 Compare X20, 0
	043 JumpIfNotEqual {46}
	044 Move X0, X21
	045 Call 0x1D2D690
	046 Move X0, X20
	047 Call 0x1C17F18
	048 Call 0x1991590

Method: System.Void Dispose(System.Boolean disposing)

Disassembly:
	0x03668E74 MOV X20, X0
	0x03668E78 ADRP X0, 0xAB6000
	0x03668E7C LDR X0, [X0 + 0xDD0]
	0x03668E80 BL 0x1C16D08
	0x03668E84 MOV X2, X0
	0x03668E88 MOV X0, X19
	0x03668E8C MOV X1, X20
	0x03668E90 MOV X3, X31
	0x03668E94 BL 0x330E16C
	0x03668E98 B 0x3668ECC
	0x03668E9C ADRP X0, 0xA90000
	0x03668EA0 LDR X0, [X0 + 0x528]
	0x03668EA4 BL 0x1C16D08
	0x03668EA8 BL 0x1C16F10
	0x03668EAC MOV X19, X0
	0x03668EB0 ADRP X0, 0xAB6000
	0x03668EB4 LDR X0, [X0 + 0xDD0]
	0x03668EB8 BL 0x1C16D08
	0x03668EBC MOV X1, X0
	0x03668EC0 MOV X0, X19
	0x03668EC4 MOV X2, X31
	0x03668EC8 BL 0x330E100
	0x03668ECC ADRP X0, 0xAD5000
	0x03668ED0 LDR X0, [X0 + 0x3E8]
	0x03668ED4 BL 0x1C16D08
	0x03668ED8 MOV X1, X0
	0x03668EDC MOV X0, X19
	0x03668EE0 BL 0x1C16DEC
	0x03668EE4 STR X30, [X31 - 0x10]!
	0x03668EE8 MOV X0, X1
	0x03668EEC MOV X1, X31
	0x03668EF0 BL 0x1C16CB4
	0x03668EF4 CBZ X0, 0x3668F08
	0x03668EF8 BL 0x1C16E08
	0x03668EFC LDR W0, [X0]
	0x03668F00 LDR X30, [X31], #0x10
	0x03668F04 RET
	0x03668F08 BL 0x1C16F20
	0x03668F0C STR X30, [X31 - 0x20]!
	0x03668F10 STP X20, X19, [X31 + 0x10]
	0x03668F14 ADRP X20, 0xD78000
	0x03668F18 LDRB W8, [X20 + 0x723]
	0x03668F1C MOV X19, X1
	0x03668F20 TBNZ X8, 0x0, 0x3668F44
	0x03668F24 ADRP X0, 0xABF000
	0x03668F28 LDR X0, [X0 + 0x610]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xD79000
	006 Move W8, [X21+1821]
	007 Move W19, W1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xA93000
	014 Move X0, [X0+3088]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+1821], W8
	018 Move TEMP, X19
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfNotEqual {32}
	022 Move X8, 0xA93000
	023 Move X8, [X8+3088]
	024 Move X0, [X8]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Move X0, X20
	030 Move X1, X31
	031 Call GC.SuppressFinalize, X0
	032 Move X0, [X20+56]
	033 Compare X0, 0
	034 JumpIfEqual {37}
	035 And W1, W19, 1
	036 Call DeflateStreamNative.Dispose, X0, X1
	037 Move TEMP, X19
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfNotEqual {57}
	041 Move W8, [X20+53]
	042 Compare W8, 0
	043 JumpIfNotEqual {57}
	044 Move W8, [X20+52]
	045 Move W9, 1
	046 Move [X20+53], W9
	047 Compare W8, 0
	048 JumpIfNotEqual {57}
	049 Move X0, [X20+40]
	050 Compare X0, 0
	051 JumpIfEqual {56}
	052 Move X8, [X0]
	053 Move X9, [X8+632]
	054 Move X1, [X8+640]
	055 NotImplemented "Instruction BLR not yet implemented."
	056 Move [X20+40], X31
	057 And W1, W19, 1
	058 Move X0, X20
	059 Move X20, [X31+16]
	060 Move X19, [X31+24]
	061 Move X2, X31
	062 Move X30, [X31+32]
	063 Move X21, [X31+40]
	064 Call Stream.Dispose, X0, X1
	065 Return 

Method: System.Int32 ReadInternal(System.Byte[] array, System.Int32 offset, System.Int32 count)

Disassembly:
	0x03669030 BL 0x330E100
	0x03669034 ADRP X0, 0xAD4000
	0x03669038 LDR X0, [X0 + 0x3F0]
	0x0366903C BL 0x1C16D08
	0x03669040 MOV X1, X0
	0x03669044 MOV X0, X19
	0x03669048 BL 0x1C16DEC
	0x0366904C MOV X0, X1
	0x03669050 MOV X1, X31
	0x03669054 B 0x1C16CB4
	0x03669058 STP X30, X19, [X31 - 0x10]!
	0x0366905C ADRP X0, 0xA8A000
	0x03669060 LDR X0, [X0 + 0xB40]
	0x03669064 BL 0x1C16D08
	0x03669068 BL 0x1C16F10
	0x0366906C MOV X1, X31
	0x03669070 MOV X19, X0
	0x03669074 BL 0x3380310

ISIL:
	001 Move [X31-16], X30
	002 Compare W3, 0
	003 JumpIfEqual {17}
	004 Compare X1, 0
	005 JumpIfEqual {10}
	006 Move W8, [X1+24]
	007 Compare W8, 0
	008 JumpIfEqual {10}
	009 Add X8, X1, 32
	010 Move X8, X31
	011 Move X0, [X0+56]
	012 Compare X0, 0
	013 JumpIfEqual {20}
	014 Add X1, X8, W2
	015 Move W2, W3
	016 Move X30, [X31+16]
	017 Move W0, W31
	018 Move X30, [X31+16]
	019 Return X0
	020 Call 0x1C17F20

Method: System.Threading.Tasks.ValueTask`1<System.Int32> ReadAsyncMemory(System.Memory`1<System.Byte> destination, System.Threading.CancellationToken cancellationToken)

Disassembly:
	0x0366897C MOV X19, X5
	0x03668980 MOV X20, X4

ISIL:
	001 Move X4, X31
	002 Call Stream.ReadAsync, X0, X1, X2
	003 Return X0

Method: System.Int32 ReadCore(System.Span`1<System.Byte> destination)

Disassembly:
	0x03668438 BL 0x1C16D08
	0x0366843C MOV X1, X0
	0x03668440 MOV X0, X20
	0x03668444 BL 0x1C16DEC
	0x03668448 ADRP X0, 0xA90000
	0x0366844C LDR X0, [X0 + 0x528]
	0x03668450 BL 0x1C16D08
	0x03668454 BL 0x1C16F10
	0x03668458 MOV X19, X0
	0x0366845C ADRP X0, 0xAB3000
	0x03668460 LDR X0, [X0 + 0x640]
	0x03668464 BL 0x1C16D08
	0x03668468 MOV X1, X0
	0x0366846C MOV X0, X19
	0x03668470 MOV X2, X31
	0x03668474 BL 0x330E100
	0x03668478 B 0x3668534
	0x0366847C ADRP X0, 0xA93000
	0x03668480 LDR X0, [X0 + 0x760]
	0x03668484 BL 0x1C16D08
	0x03668488 BL 0x1C16F10
	0x0366848C MOV X19, X0
	0x03668490 ADRP X0, 0xABA000
	0x03668494 LDR X0, [X0 + 0xD90]
	0x03668498 B 0x36684B8
	0x0366849C ADRP X0, 0xA93000
	0x036684A0 LDR X0, [X0 + 0x760]
	0x036684A4 BL 0x1C16D08
	0x036684A8 BL 0x1C16F10
	0x036684AC MOV X19, X0
	0x036684B0 ADRP X0, 0xAB3000
	0x036684B4 LDR X0, [X0 + 0x648]
	0x036684B8 BL 0x1C16D08
	0x036684BC MOV X1, X0
	0x036684C0 MOV X0, X19
	0x036684C4 MOV X2, X31
	0x036684C8 BL 0x3316014
	0x036684CC B 0x3668534
	0x036684D0 ADRP X0, 0xA8B000
	0x036684D4 LDR X0, [X0 + 0xB40]
	0x036684D8 BL 0x1C16D08
	0x036684DC BL 0x1C16F10
	0x036684E0 MOV X19, X0
	0x036684E4 ADRP X0, 0xABF000
	0x036684E8 LDR X0, [X0 + 0x5B8]
	0x036684EC BL 0x1C16D08
	0x036684F0 MOV X1, X0
	0x036684F4 MOV X0, X19
	0x036684F8 MOV X2, X31
	0x036684FC BL 0x3379A44
	0x03668500 B 0x3668534
	0x03668504 ADRP X0, 0xA93000
	0x03668508 LDR X0, [X0 + 0x578]
	0x0366850C BL 0x1C16D08
	0x03668510 BL 0x1C16F10
	0x03668514 MOV X19, X0
	0x03668518 ADRP X0, 0xAD5000
	0x0366851C LDR X0, [X0 + 0x3A0]
	0x03668520 BL 0x1C16D08
	0x03668524 MOV X1, X0
	0x03668528 MOV X0, X19
	0x0366852C MOV X2, X31
	0x03668530 BL 0x3314A68
	0x03668534 ADRP X0, 0xAD5000
	0x03668538 LDR X0, [X0 + 0x398]
	0x0366853C BL 0x1C16D08
	0x03668540 MOV X1, X0
	0x03668544 MOV X0, X19
	0x03668548 BL 0x1C16DEC
	0x0366854C STR X30, [X31 - 0x20]!

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0xD79000
	009 Move X22, 0xA8C000
	010 Move W8, [X23+1822]
	011 Move X22, [X22+1560]
	012 Move X19, X2
	013 Move X20, X1
	014 Move X21, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {33}
	019 Move X0, 0xA8C000
	020 Move X0, [X0+1560]
	021 Call 0x1C17CF4
	022 Move X0, 0xAD6000
	023 Move X0, [X0+800]
	024 Call 0x1C17CF4
	025 Move X0, 0xAB7000
	026 Move X0, [X0+744]
	027 Call 0x1C17CF4
	028 Move X0, 0xABB000
	029 Move X0, [X0+2344]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X23+1822], W8
	033 Move X0, [X22]
	034 Move W1, W19
	035 Move [X31], X31
	036 Move [X31+8], X31
	037 Call 0x1C17D6C
	038 Compare X0, 0
	039 JumpIfEqual {82}
	040 Move X8, [X21]
	041 Move W3, [X0+24]
	042 Move X23, 0xAD6000
	043 Move X22, X0
	044 Move X9, [X8+856]
	045 Move X4, [X8+864]
	046 Move X23, [X23+800]
	047 Move X0, X21
	048 Move X1, X22
	049 Move W2, W31
	050 NotImplemented "Instruction BLR not yet implemented."
	051 Move X8, [X23]
	052 Move W21, W0
	053 Move X9, [X8+56]
	054 Compare X9, 0
	055 JumpIfNotEqual {58}
	056 Move X0, X8
	057 Call 0x1C5D6E0
	058 Move W8, [X22+24]
	059 Move X23, 0xAB7000
	060 Move X23, [X23+744]
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Move X0, X31
	063 Call ThrowHelper.ThrowArgumentOutOfRangeException
	064 Move X3, [X23]
	065 Add X8, X22, 32
	066 Move W9, W21
	067 Add X0, X31, 0
	068 Move X1, X20
	069 Move X2, X19
	070 Move [X31], X8
	071 Move [X31+8], X9
	072 Call 0x25FBF94, X0, X1
	073 Move W0, W21
	074 Move X20, [X31+48]
	075 Move X19, [X31+56]
	076 Move X22, [X31+32]
	077 Move X21, [X31+40]
	078 Move X30, [X31+16]
	079 Move X23, [X31+24]
	080 Add X31, X31, 64
	081 Return X0
	082 Call 0x1C17F20

Method: System.Int32 Read(System.Byte[] array, System.Int32 offset, System.Int32 count)

Disassembly:
	0x036690F0 LDR X8, [X0]
	0x036690F4 LDP X2, X1, [X8 + 0x1A8]
	0x036690F8 LDR X30, [X31], #0x10
	0x036690FC BR X2
	0x03669100 BL 0x1C16F20
	0x03669104 MOV W0, W31
	0x03669108 RET
	0x0366910C STR X30, [X31 - 0x10]!
	0x03669110 LDRB W8, [X0 + 0x35]
	0x03669114 CBNZ W8, 0x366913C
	0x03669118 LDR W8, [X0 + 0x30]
	0x0366911C CMP W8, 0x1
	0x03669120 B.NE 0x366913C
	0x03669124 LDR X0, [X0 + 0x28]
	0x03669128 CBZ X0, 0x3669148
	0x0366912C LDR X8, [X0]
	0x03669130 LDP X2, X1, [X8 + 0x1D8]
	0x03669134 LDR X30, [X31], #0x10
	0x03669138 BR X2
	0x0366913C MOV W0, W31
	0x03669140 LDR X30, [X31], #0x10
	0x03669144 RET
	0x03669148 BL 0x1C16F20
	0x0366914C STP X30, X19, [X31 - 0x10]!
	0x03669150 ADRP X0, 0xA8A000
	0x03669154 LDR X0, [X0 + 0xB40]
	0x03669158 BL 0x1C16D08
	0x0366915C BL 0x1C16F10
	0x03669160 MOV X1, X31
	0x03669164 MOV X19, X0
	0x03669168 BL 0x3380310
	0x0366916C ADRP X0, 0xAD4000
	0x03669170 LDR X0, [X0 + 0x408]
	0x03669174 BL 0x1C16D08
	0x03669178 MOV X1, X0
	0x0366917C MOV X0, X19
	0x03669180 BL 0x1C16DEC
	0x03669184 STP X30, X19, [X31 - 0x10]!
	0x03669188 ADRP X0, 0xA8A000
	0x0366918C LDR X0, [X0 + 0xB40]
	0x03669190 BL 0x1C16D08
	0x03669194 BL 0x1C16F10
	0x03669198 MOV X1, X31
	0x0366919C MOV X19, X0
	0x036691A0 BL 0x3380310
	0x036691A4 ADRP X0, 0xAD4000
	0x036691A8 LDR X0, [X0 + 0x410]
	0x036691AC BL 0x1C16D08
	0x036691B0 MOV X1, X0
	0x036691B4 MOV X0, X19
	0x036691B8 BL 0x1C16DEC
	0x036691BC STP X30, X19, [X31 - 0x10]!
	0x036691C0 ADRP X0, 0xA8A000
	0x036691C4 LDR X0, [X0 + 0xB40]
	0x036691C8 BL 0x1C16D08
	0x036691CC BL 0x1C16F10
	0x036691D0 MOV X1, X31
	0x036691D4 MOV X19, X0
	0x036691D8 BL 0x3380310
	0x036691DC ADRP X0, 0xAD4000
	0x036691E0 LDR X0, [X0 + 0x418]
	0x036691E4 BL 0x1C16D08
	0x036691E8 MOV X1, X0
	0x036691EC MOV X0, X19
	0x036691F0 BL 0x1C16DEC
	0x036691F4 LDR X8, [X0 + 0x40]
	0x036691F8 LDR X5, [X0 + 0x18]
	0x036691FC LDR X4, [X0 + 0x28]
	0x03669200 MOV X0, X8
	0x03669204 BR X5
	0x03669208 LDR X8, [X0 + 0x40]
	0x0366920C LDR X5, [X0 + 0x18]
	0x03669210 LDR X4, [X0 + 0x28]
	0x03669214 MOV X0, X8
	0x03669218 BR X5
	0x0366921C STR X30, [X31 - 0x30]!
	0x03669220 STP X22, X21, [X31 + 0x10]
	0x03669224 STP X20, X19, [X31 + 0x20]
	0x03669228 ADRP X22, 0xD77000
	0x0366922C LDRB W8, [X22 + 0x72B]
	0x03669230 MOV X21, X2
	0x03669234 MOV W19, W1
	0x03669238 MOV X20, X0
	0x0366923C TBNZ X8, 0x0, 0x3669254
	0x03669240 ADRP X0, 0xAD4000
	0x03669244 LDR X0, [X0 + 0x350]
	0x03669248 BL 0x1C16CF4
	0x0366924C MOVZ W8, 0x1
	0x03669250 STRB W8, [X22 + 0x72B]
	0x03669254 MOV X0, X21
	0x03669258 MOV X1, X31
	0x0366925C BL 0x32C097C
	0x03669260 STR X0, [X31 + 0x8]
	0x03669264 ADD X0, X31, 0x8
	0x03669268 MOV X1, X31
	0x0366926C BL 0x32C05F4
	0x03669270 CBZ X0, 0x36692AC
	0x03669274 ADRP X8, 0xAD4000
	0x03669278 LDR X8, [X8 + 0x350]
	0x0366927C LDR X9, [X0]
	0x03669280 LDR X8, [X8]
	0x03669284 LDRB W11, [X9 + 0x130]
	0x03669288 LDRB W10, [X8 + 0x130]
	0x0366928C CMP W11, W10
	0x03669290 B.CC 0x36692AC
	0x03669294 LDR X9, [X9 + 0xC8]
	0x03669298 ADD X9, X9, X10, 0x3, LSL
	0x0366929C LDUR X9, [X9 - 0x8]
	0x036692A0 CMP X9, X8
	0x036692A4 CSEL X0, X0, X31, EQ
	0x036692A8 B.EQ 0x36692C0
	0x036692AC MOVN W0, 0x0
	0x036692B0 LDP X20, X19, [X31 + 0x20]
	0x036692B4 LDP X22, X21, [X31 + 0x10]
	0x036692B8 LDR X30, [X31], #0x30
	0x036692BC RET

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move W8, [X0+53]
	007 Move X21, X0
	008 Compare W8, 0
	009 JumpIfNotEqual {44}
	010 Move X22, X1
	011 Compare X1, 0
	012 JumpIfEqual {69}
	013 Move X8, [X21]
	014 Move X0, X21
	015 Move W19, W3
	016 Move W20, W2
	017 Move X9, [X8+424]
	018 Move X1, [X8+432]
	019 NotImplemented "Instruction BLR not yet implemented."
	020 Move TEMP, X0
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfNotEqual {81}
	024 Or W8, W19, W20
	025 Move TEMP, X8
	026 And TEMP, TEMP, -2147483648
	027 Compare TEMP, -2147483648
	028 JumpIfEqual {93}
	029 Move W8, [X22+24]
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Add W9, W19, W20
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move X0, X21
	034 Move X1, X22
	035 Move W2, W20
	036 Move W3, W19
	037 Move X20, [X31+32]
	038 Move X19, [X31+40]
	039 Move X22, [X31+16]
	040 Move X21, [X31+24]
	041 Move X30, [X31+48]
	042 Call DeflateStream.ReadInternal, X0, X1, X2, X3
	043 Return X0
	044 Move X0, X21
	045 Move X1, X31
	046 Call "il2cpp_vm_object_is_inst", X0
	047 Move X19, X0
	048 Call 0x19913C0
	049 Move X8, [X19]
	050 Move X0, X19
	051 Move X9, [X8+744]
	052 Move X1, [X8+752]
	053 NotImplemented "Instruction BLR not yet implemented."
	054 Move X19, X0
	055 Move X0, 0xAB4000
	056 Move X0, [X0+1208]
	057 Call 0x1C17D08
	058 Call 0x1C17F10
	059 Move X1, X19
	060 Move X2, X31
	061 Move X20, X0
	062 Call ObjectDisposedException..ctor, X0, X1
	063 Move X0, 0xAD5000
	064 Move X0, [X0+888]
	065 Call 0x1C17D08
	066 Move X1, X0
	067 Move X0, X20
	068 Call 0x1C17DEC
	069 Move X0, 0xA90000
	070 Move X0, [X0+1320]
	071 Call 0x1C17D08
	072 Call 0x1C17F10
	073 Move X19, X0
	074 Move X0, 0xAD5000
	075 Move X0, [X0+896]
	076 Call 0x1C17D08
	077 Move X1, X0
	078 Move X0, X19
	079 Move X2, X31
	080 Call ArgumentNullException..ctor, X0, X1
	081 Move X0, 0xA8B000
	082 Move X0, [X0+1456]
	083 Call 0x1C17D08
	084 Call 0x1C17F10
	085 Move X19, X0
	086 Move X0, 0xABA000
	087 Move X0, [X0+3464]
	088 Call 0x1C17D08
	089 Move X1, X0
	090 Move X0, X19
	091 Move X2, X31
	092 Call InvalidOperationException..ctor, X0, X1
	093 Move X0, 0xA93000
	094 Move X0, [X0+1400]
	095 Call 0x1C17D08
	096 Call 0x1C17F10
	097 Move X19, X0
	098 Move X0, 0xAD5000
	099 Move X0, [X0+904]
	100 Move X0, 0xA93000
	101 Move X0, [X0+1400]
	102 Call 0x1C17D08
	103 Call 0x1C17F10
	104 Move X19, X0
	105 Move X0, 0xABF000
	106 Move X0, [X0+1480]
	107 Move X0, 0xA93000
	108 Move X0, [X0+1400]
	109 Call 0x1C17D08
	110 Call 0x1C17F10
	111 Move X19, X0
	112 Move X0, 0xABF000
	113 Move X0, [X0+1488]
	114 Call 0x1C17D08
	115 Move X1, X0
	116 Move X0, X19
	117 Move X2, X31
	118 Call ArgumentException..ctor, X0, X1
	119 Move X0, 0xAD5000
	120 Move X0, [X0+888]
	121 Call 0x1C17D08
	122 Move X1, X0
	123 Move X0, X19
	124 Call 0x1C17DEC

Method: System.Void WriteInternal(System.Byte[] array, System.Int32 offset, System.Int32 count)

Disassembly:
	0x036692C0 CBZ X0, 0x36692D4
	0x036692C4 MOV X1, X20
	0x036692C8 MOV W2, W19
	0x036692CC BL 0x36697EC
	0x036692D0 B 0x36692B0
	0x036692D4 BL 0x1C16F20
	0x036692D8 STR X30, [X31 - 0x30]!
	0x036692DC STP X22, X21, [X31 + 0x10]
	0x036692E0 STP X20, X19, [X31 + 0x20]
	0x036692E4 ADRP X22, 0xD77000
	0x036692E8 LDRB W8, [X22 + 0x72D]
	0x036692EC MOV X21, X2
	0x036692F0 MOV W19, W1
	0x036692F4 MOV X20, X0
	0x036692F8 TBNZ X8, 0x0, 0x3669310
	0x036692FC ADRP X0, 0xAD4000
	0x03669300 LDR X0, [X0 + 0x350]

ISIL:
	001 Move [X31-16], X30
	002 Compare W3, 0
	003 JumpIfEqual {17}
	004 Compare X1, 0
	005 JumpIfEqual {10}
	006 Move W8, [X1+24]
	007 Compare W8, 0
	008 JumpIfEqual {10}
	009 Add X8, X1, 32
	010 Move X8, X31
	011 Move X0, [X0+56]
	012 Compare X0, 0
	013 JumpIfEqual {19}
	014 Add X1, X8, W2
	015 Move W2, W3
	016 Move X30, [X31+16]
	017 Move X30, [X31+16]
	018 Return 
	019 Call 0x1C17F20

Method: System.Threading.Tasks.ValueTask WriteAsyncMemory(System.ReadOnlyMemory`1<System.Byte> source, System.Threading.CancellationToken cancellationToken)

Disassembly:
	0x03668A80 CMP W9, W8
	0x03668A84 B.GT 0x3668C14

ISIL:
	001 Move X4, X31
	002 Call Stream.WriteAsync, X0, X1, X2
	003 Return X0

Method: System.Void WriteCore(System.ReadOnlySpan`1<System.Byte> source)

Disassembly:
	0x03668720 LDP X22, X21, [X31 + 0x20]
	0x03668724 LDP X24, X23, [X31 + 0x10]
	0x03668728 MOV X0, X25
	0x0366872C LDP X30, X25, [X31], #0x40
	0x03668730 B 0x3668954
	0x03668734 MOV X0, X24
	0x03668738 MOV X1, X31
	0x0366873C BL 0x33BE520
	0x03668740 MOV X19, X0
	0x03668744 BL 0x19903C0
	0x03668748 LDR X8, [X19]
	0x0366874C MOV X0, X19
	0x03668750 LDR X9, [X8 + 0x2E8]
	0x03668754 LDR X1, [X8 + 0x2F0]
	0x03668758 BLR X9
	0x0366875C MOV X19, X0
	0x03668760 ADRP X0, 0xAB4000
	0x03668764 LDR X0, [X0 + 0x4B8]
	0x03668768 BL 0x1C16D08
	0x0366876C BL 0x1C16F10
	0x03668770 MOV X1, X19
	0x03668774 MOV X2, X31
	0x03668778 MOV X20, X0
	0x0366877C BL 0x338C448
	0x03668780 ADRP X0, 0xAD5000
	0x03668784 LDR X0, [X0 + 0x3C8]
	0x03668788 BL 0x1C16D08
	0x0366878C MOV X1, X0
	0x03668790 MOV X0, X20
	0x03668794 BL 0x1C16DEC
	0x03668798 ADRP X0, 0xA8B000
	0x0366879C LDR X0, [X0 + 0xB40]
	0x036687A0 BL 0x1C16D08

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xD79000
	007 Move [X31], X1
	008 Move [X31+8], X2
	009 Move X21, 0xAD6000
	010 Move W8, [X20+1823]
	011 Move X21, [X21+808]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0xAD6000
	018 Move X0, [X0+808]
	019 Call 0x1C17CF4
	020 Move X0, 0xABB000
	021 Move X0, [X0+2752]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X20+1823], W8
	025 Move X1, [X21]
	026 Add X0, X31, 0
	027 Call 0x25BF934, X0
	028 Move X8, [X19]
	029 Move W3, [X31+8]
	030 Move X1, X0
	031 Move X0, X19
	032 Move X9, [X8+904]
	033 Move X4, [X8+912]
	034 Move W2, W31
	035 NotImplemented "Instruction BLR not yet implemented."
	036 Move X20, [X31+32]
	037 Move X19, [X31+40]
	038 Move X30, [X31+16]
	039 Move X21, [X31+24]
	040 Add X31, X31, 48
	041 Return 

Method: System.Void Write(System.Byte[] array, System.Int32 offset, System.Int32 count)

Disassembly:
	0x03669370 LDP X22, X21, [X31 + 0x10]
	0x03669374 LDR X30, [X31], #0x30
	0x03669378 RET
	0x0366937C CBZ X0, 0x3669390
	0x03669380 MOV X1, X20
	0x03669384 MOV W2, W19
	0x03669388 BL 0x3669990
	0x0366938C B 0x366936C
	0x03669390 BL 0x1C16F20
	0x03669394 MOV X1, X31
	0x03669398 B 0x33BDD8C
	0x0366939C STP X30, X21, [X31 - 0x20]!
	0x036693A0 STP X20, X19, [X31 + 0x10]
	0x036693A4 LDR X8, [X2 + 0x8]
	0x036693A8 STP X1, X2, [X0 + 0x20]
	0x036693AC MOV X19, X0
	0x036693B0 MOV X20, X1
	0x036693B4 STR X8, [X0 + 0x10]
	0x036693B8 LDRB W21, [X2 + 0x52]
	0x036693BC STR X0, [X0 + 0x40]
	0x036693C0 MOV X0, X2
	0x036693C4 BL 0x1C16D84
	0x036693C8 TBZ X0, 0x0, 0x36693E4
	0x036693CC CMP W21, 0x3
	0x036693D0 B.NE 0x36693E8
	0x036693D4 ADRP X8, 0xFFFFFFFFFE55D000
	0x036693D8 ADD X8, X8, 0x378
	0x036693DC STR X8, [X19 + 0x18]
	0x036693E0 B 0x36693F8
	0x036693E4 CBZ X20, 0x3669410
	0x036693E8 LDR X8, [X19 + 0x10]
	0x036693EC LDR X9, [X19 + 0x20]
	0x036693F0 STR X8, [X19 + 0x18]
	0x036693F4 STR X9, [X19 + 0x40]
	0x036693F8 ADRP X8, 0xFFFFFFFFFE55D000
	0x036693FC ADD X8, X8, 0x310
	0x03669400 STR X8, [X19 + 0x38]
	0x03669404 LDP X20, X19, [X31 + 0x10]
	0x03669408 LDP X30, X21, [X31], #0x20
	0x0366940C RET
	0x03669410 ADRP X1, 0xFFFFFFFFFD4B2000
	0x03669414 ADD X1, X1, 0xEE3
	0x03669418 MOV X0, X31
	0x0366941C BL 0x1C16F3C
	0x03669420 MOV X1, X31
	0x03669424 BL 0x1C16DEC
	0x03669428 STR X30, [X31 - 0x40]!
	0x0366942C STP X24, X23, [X31 + 0x10]
	0x03669430 STP X22, X21, [X31 + 0x20]
	0x03669434 STP X20, X19, [X31 + 0x30]
	0x03669438 ADRP X24, 0xD77000
	0x0366943C ADRP X23, 0xAD4000
	0x03669440 LDRB W8, [X24 + 0x72F]
	0x03669444 LDR X23, [X23 + 0x420]
	0x03669448 MOV X19, X3
	0x0366944C MOV X22, X2
	0x03669450 MOV W21, W1
	0x03669454 MOV W20, W0
	0x03669458 TBNZ X8, 0x0, 0x3669470
	0x0366945C ADRP X0, 0xAD4000
	0x03669460 LDR X0, [X0 + 0x420]
	0x03669464 BL 0x1C16CF4
	0x03669468 MOVZ W8, 0x1
	0x0366946C STRB W8, [X24 + 0x72F]
	0x03669470 MOV X0, X22
	0x03669474 BL 0x1C17294
	0x03669478 MOV X2, X0
	0x0366947C AND W1, W21, 0x1
	0x03669480 MOV W0, W20
	0x03669484 MOV X3, X19
	0x03669488 BL 0x3EB1DF0
	0x0366948C LDR X8, [X23]
	0x03669490 MOV X19, X0
	0x03669494 MOV X0, X8
	0x03669498 BL 0x1C16F10
	0x0366949C MOVZ W2, 0x1
	0x036694A0 MOV X1, X31
	0x036694A4 MOV X3, X31
	0x036694A8 MOV X20, X0
	0x036694AC BL 0x32C0158
	0x036694B0 STR X19, [X20 + 0x10]
	0x036694B4 MOV X0, X20
	0x036694B8 LDP X20, X19, [X31 + 0x30]
	0x036694BC LDP X22, X21, [X31 + 0x20]
	0x036694C0 LDP X24, X23, [X31 + 0x10]
	0x036694C4 LDR X30, [X31], #0x40
	0x036694C8 RET
	0x036694CC STP X30, X21, [X31 - 0x20]!
	0x036694D0 STP X20, X19, [X31 + 0x10]
	0x036694D4 MOV X19, X0
	0x036694D8 MOV W1, W31
	0x036694DC BL 0x3667F2C
	0x036694E0 MOV X0, X19
	0x036694E4 LDP X20, X19, [X31 + 0x10]
	0x036694E8 MOV X1, X31
	0x036694EC LDP X30, X21, [X31], #0x20
	0x036694F0 B 0x33CB4DC
	0x036694F4 CMP W1, 0x1
	0x036694F8 MOV X21, X0
	0x036694FC B.NE 0x366952C
	0x03669500 MOV X0, X21
	0x03669504 BL 0x3EB1AD0
	0x03669508 LDR X20, [X0]
	0x0366950C BL 0x3EB1AE0
	0x03669510 MOV X0, X19
	0x03669514 MOV X1, X31
	0x03669518 BL 0x33CB4DC
	0x0366951C CBNZ X20, 0x3669534
	0x03669520 LDP X20, X19, [X31 + 0x10]
	0x03669524 LDP X30, X21, [X31], #0x20
	0x03669528 RET
	0x0366952C MOV X20, X31
	0x03669530 B 0x3669540
	0x03669534 MOV X0, X20
	0x03669538 BL 0x1C16F18
	0x0366953C MOV X21, X0
	0x03669540 MOV X0, X19
	0x03669544 MOV X1, X31
	0x03669548 BL 0x33CB4DC

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move W8, [X0+53]
	007 Move X21, X0
	008 Compare W8, 0
	009 JumpIfNotEqual {46}
	010 Move X22, X1
	011 Compare X1, 0
	012 JumpIfEqual {71}
	013 Move W20, W2
	014 Move TEMP, X2
	015 And TEMP, TEMP, -2147483648
	016 Compare TEMP, -2147483648
	017 JumpIfEqual {83}
	018 Move W19, W3
	019 Move TEMP, X3
	020 And TEMP, TEMP, -2147483648
	021 Compare TEMP, -2147483648
	022 JumpIfEqual {90}
	023 Move X8, [X21]
	024 Move X0, X21
	025 Move X9, [X8+472]
	026 Move X1, [X8+480]
	027 NotImplemented "Instruction BLR not yet implemented."
	028 Move TEMP, X0
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfNotEqual {102}
	032 Move W8, [X22+24]
	033 Subtract W8, W8, W19
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Move X0, X21
	036 Move X1, X22
	037 Move W2, W20
	038 Move W3, W19
	039 Move X20, [X31+32]
	040 Move X19, [X31+40]
	041 Move X22, [X31+16]
	042 Move X21, [X31+24]
	043 Move X30, [X31+48]
	044 Call DeflateStream.WriteInternal, X0, X1, X2, X3
	045 Return 
	046 Move X0, X21
	047 Move X1, X31
	048 Call "il2cpp_vm_object_is_inst", X0
	049 Move X19, X0
	050 Call 0x19913C0
	051 Move X8, [X19]
	052 Move X0, X19
	053 Move X9, [X8+744]
	054 Move X1, [X8+752]
	055 NotImplemented "Instruction BLR not yet implemented."
	056 Move X19, X0
	057 Move X0, 0xAB4000
	058 Move X0, [X0+1208]
	059 Call 0x1C17D08
	060 Call 0x1C17F10
	061 Move X1, X19
	062 Move X2, X31
	063 Move X20, X0
	064 Call ObjectDisposedException..ctor, X0, X1
	065 Move X0, 0xAD5000
	066 Move X0, [X0+920]
	067 Call 0x1C17D08
	068 Move X1, X0
	069 Move X0, X20
	070 Call 0x1C17DEC
	071 Move X0, 0xA90000
	072 Move X0, [X0+1320]
	073 Call 0x1C17D08
	074 Call 0x1C17F10
	075 Move X19, X0
	076 Move X0, 0xAB3000
	077 Move X0, [X0+1600]
	078 Call 0x1C17D08
	079 Move X1, X0
	080 Move X0, X19
	081 Move X2, X31
	082 Call ArgumentNullException..ctor, X0, X1
	083 Move X0, 0xA93000
	084 Move X0, [X0+1888]
	085 Call 0x1C17D08
	086 Call 0x1C17F10
	087 Move X19, X0
	088 Move X0, 0xABA000
	089 Move X0, [X0+3472]
	090 Move X0, 0xA93000
	091 Move X0, [X0+1888]
	092 Call 0x1C17D08
	093 Call 0x1C17F10
	094 Move X19, X0
	095 Move X0, 0xAB3000
	096 Move X0, [X0+1608]
	097 Call 0x1C17D08
	098 Move X1, X0
	099 Move X0, X19
	100 Move X2, X31
	101 Call ArgumentOutOfRangeException..ctor, X0, X1
	102 Move X0, 0xA8B000
	103 Move X0, [X0+2880]
	104 Call 0x1C17D08
	105 Call 0x1C17F10
	106 Move X19, X0
	107 Move X0, 0xABF000
	108 Move X0, [X0+1464]
	109 Call 0x1C17D08
	110 Move X1, X0
	111 Move X0, X19
	112 Move X2, X31
	113 Call NotSupportedException..ctor, X0, X1
	114 Move X0, 0xA93000
	115 Move X0, [X0+1400]
	116 Call 0x1C17D08
	117 Call 0x1C17F10
	118 Move X19, X0
	119 Move X0, 0xAD5000
	120 Move X0, [X0+928]
	121 Call 0x1C17D08
	122 Move X1, X0
	123 Move X0, X19
	124 Move X2, X31
	125 Call ArgumentException..ctor, X0, X1
	126 Move X0, 0xAD5000
	127 Move X0, [X0+920]
	128 Call 0x1C17D08
	129 Move X1, X0
	130 Move X0, X19
	131 Call 0x1C17DEC

Method: System.Void Flush()

Disassembly:
	0x0366954C CBNZ X20, 0x3669558
	0x03669550 MOV X0, X21
	0x03669554 BL 0x1D2C690
	0x03669558 MOV X0, X20
	0x0366955C BL 0x1C16F18
	0x03669560 BL 0x1990590
	0x03669564 STR X30, [X31 - 0x20]!
	0x03669568 STP X20, X19, [X31 + 0x10]
	0x0366956C CBZ X0, 0x36695B4
	0x03669570 ADD X1, X31, 0xC
	0x03669574 MOV X2, X31
	0x03669578 MOV X19, X0
	0x0366957C STRB W31, [X31 + 0xC]
	0x03669580 BL 0x32BF948
	0x03669584 LDR X0, [X19 + 0x10]
	0x03669588 BL 0x3EB1E00
	0x0366958C LDRB W8, [X31 + 0xC]
	0x03669590 MOV W20, W0
	0x03669594 CBZ W8, 0x36695A4
	0x03669598 MOV X0, X19
	0x0366959C MOV X1, X31
	0x036695A0 BL 0x32BFAB4
	0x036695A4 MOV W0, W20
	0x036695A8 LDP X20, X19, [X31 + 0x10]
	0x036695AC LDR X30, [X31], #0x20
	0x036695B0 RET
	0x036695B4 ADRP X0, 0xFFFFFFFFFD4B1000
	0x036695B8 ADD X0, X0, 0x28
	0x036695BC BL 0x1C16F40
	0x036695C0 MOV X1, X31
	0x036695C4 BL 0x1C16DEC
	0x036695C8 STR X30, [X31 - 0x20]!
	0x036695CC STP X20, X19, [X31 + 0x10]
	0x036695D0 TBNZ X1, 0x1F, 0x36695E0
	0x036695D4 LDP X20, X19, [X31 + 0x10]
	0x036695D8 LDR X30, [X31], #0x20
	0x036695DC RET
	0x036695E0 MOV W20, W1
	0x036695E4 ADD X0, X0, 0x40
	0x036695E8 MOV X1, X31
	0x036695EC STR X2, [X31 + 0x8]
	0x036695F0 BL 0x1C242E8
	0x036695F4 CBNZ X0, 0x3669630
	0x036695F8 ADRP X0, 0xAD4000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W8, [X0+53]
	005 Move X19, X0
	006 Compare W8, 0
	007 JumpIfNotEqual {27}
	008 Move X8, [X19]
	009 Move X0, X19
	010 Move X9, [X8+472]
	011 Move X1, [X8+480]
	012 NotImplemented "Instruction BLR not yet implemented."
	013 Move TEMP, X0
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfNotEqual {23}
	017 Move X0, [X19+56]
	018 Compare X0, 0
	019 JumpIfEqual {52}
	020 Move X20, [X31+16]
	021 Move X19, [X31+24]
	022 Move X30, [X31+32]
	023 Move X20, [X31+16]
	024 Move X19, [X31+24]
	025 Move X30, [X31+32]
	026 Return 
	027 Move X0, X19
	028 Move X1, X31
	029 Call "il2cpp_vm_object_is_inst", X0
	030 Move X19, X0
	031 Call 0x19913C0
	032 Move X8, [X19]
	033 Move X0, X19
	034 Move X9, [X8+744]
	035 Move X1, [X8+752]
	036 NotImplemented "Instruction BLR not yet implemented."
	037 Move X19, X0
	038 Move X0, 0xAB4000
	039 Move X0, [X0+1208]
	040 Call 0x1C17D08
	041 Call 0x1C17F10
	042 Move X1, X19
	043 Move X2, X31
	044 Move X20, X0
	045 Call ObjectDisposedException..ctor, X0, X1
	046 Move X0, 0xAD5000
	047 Move X0, [X0+936]
	048 Call 0x1C17D08
	049 Move X1, X0
	050 Move X0, X20
	051 Call 0x1C17DEC
	052 Call 0x1C17F20

Method: System.IAsyncResult BeginRead(System.Byte[] array, System.Int32 offset, System.Int32 count, System.AsyncCallback asyncCallback, System.Object asyncState)

Disassembly:
	0x03669650 LDR X0, [X0 + 0x440]
	0x03669654 B 0x3669690
	0x03669658 ADRP X0, 0xAB7000
	0x0366965C LDR X0, [X0 + 0xC80]
	0x03669660 B 0x3669690
	0x03669664 ADRP X0, 0xAD4000
	0x03669668 LDR X0, [X0 + 0x448]
	0x0366966C B 0x3669690
	0x03669670 ADRP X0, 0xAD4000
	0x03669674 LDR X0, [X0 + 0x450]
	0x03669678 B 0x3669690
	0x0366967C ADRP X0, 0xAD4000
	0x03669680 LDR X0, [X0 + 0x458]
	0x03669684 B 0x3669690
	0x03669688 ADRP X0, 0xAD4000
	0x0366968C LDR X0, [X0 + 0x460]
	0x03669690 BL 0x1C16D08
	0x03669694 MOV X19, X0
	0x03669698 ADRP X0, 0xA8A000
	0x0366969C LDR X0, [X0 + 0xDD8]
	0x036696A0 BL 0x1C16D08
	0x036696A4 LDR X2, [X31 + 0x8]
	0x036696A8 MOV X1, X0
	0x036696AC MOV X0, X19
	0x036696B0 MOV X3, X31
	0x036696B4 BL 0x32274B8
	0x036696B8 MOV X19, X0
	0x036696BC ADRP X0, 0xAB8000
	0x036696C0 LDR X0, [X0 + 0x7A8]
	0x036696C4 BL 0x1C16D08
	0x036696C8 BL 0x1C16F10
	0x036696CC MOV X1, X19
	0x036696D0 MOV X2, X31
	0x036696D4 MOV X20, X0
	0x036696D8 BL 0x32E16BC
	0x036696DC ADRP X0, 0xAD4000
	0x036696E0 LDR X0, [X0 + 0x438]
	0x036696E4 BL 0x1C16D08
	0x036696E8 MOV X1, X0
	0x036696EC MOV X0, X20
	0x036696F0 BL 0x1C16DEC
	0x036696F4 SUB X31, X31, 0x30
	0x036696F8 STP X30, X21, [X31 + 0x10]
	0x036696FC STP X20, X19, [X31 + 0x20]
	0x03669700 CBZ X0, 0x366975C
	0x03669704 MOV W20, W2
	0x03669708 MOV X21, X1
	0x0366970C ADD X1, X31, 0xC
	0x03669710 MOV X2, X31
	0x03669714 MOV X19, X0
	0x03669718 STRB W31, [X31 + 0xC]
	0x0366971C BL 0x32BF948
	0x03669720 LDR X0, [X19 + 0x10]
	0x03669724 MOV X1, X21
	0x03669728 MOV W2, W20
	0x0366972C BL 0x3EB1E10
	0x03669730 LDRB W8, [X31 + 0xC]
	0x03669734 MOV W20, W0
	0x03669738 CBZ W8, 0x3669748
	0x0366973C MOV X0, X19
	0x03669740 MOV X1, X31
	0x03669744 BL 0x32BFAB4
	0x03669748 MOV W0, W20
	0x0366974C LDP X20, X19, [X31 + 0x20]
	0x03669750 LDP X30, X21, [X31 + 0x10]
	0x03669754 ADD X31, X31, 0x30
	0x03669758 RET
	0x0366975C ADRP X0, 0xFFFFFFFFFD4B1000
	0x03669760 ADD X0, X0, 0x28
	0x03669764 BL 0x1C16F40
	0x03669768 MOV X1, X31
	0x0366976C BL 0x1C16DEC
	0x03669770 SUB X31, X31, 0x30
	0x03669774 STP X30, X21, [X31 + 0x10]
	0x03669778 STP X20, X19, [X31 + 0x20]
	0x0366977C CBZ X0, 0x36697D8
	0x03669780 MOV W20, W2
	0x03669784 MOV X21, X1
	0x03669788 ADD X1, X31, 0xC
	0x0366978C MOV X2, X31
	0x03669790 MOV X19, X0
	0x03669794 STRB W31, [X31 + 0xC]
	0x03669798 BL 0x32BF948
	0x0366979C LDR X0, [X19 + 0x10]
	0x036697A0 MOV X1, X21
	0x036697A4 MOV W2, W20
	0x036697A8 BL 0x3EB1E20
	0x036697AC LDRB W8, [X31 + 0xC]
	0x036697B0 MOV W20, W0
	0x036697B4 CBZ W8, 0x36697C4
	0x036697B8 MOV X0, X19
	0x036697BC MOV X1, X31
	0x036697C0 BL 0x32BFAB4
	0x036697C4 MOV W0, W20
	0x036697C8 LDP X20, X19, [X31 + 0x20]
	0x036697CC LDP X30, X21, [X31 + 0x10]
	0x036697D0 ADD X31, X31, 0x30
	0x036697D4 RET
	0x036697D8 ADRP X0, 0xFFFFFFFFFD4B1000
	0x036697DC ADD X0, X0, 0x28
	0x036697E0 BL 0x1C16F40
	0x036697E4 MOV X1, X31
	0x036697E8 BL 0x1C16DEC
	0x036697EC STR X30, [X31 - 0x30]!
	0x036697F0 STP X22, X21, [X31 + 0x10]
	0x036697F4 STP X20, X19, [X31 + 0x20]
	0x036697F8 ADRP X22, 0xD77000
	0x036697FC LDRB W8, [X22 + 0x72C]
	0x03669800 MOV W21, W2
	0x03669804 MOV X20, X1
	0x03669808 MOV X19, X0
	0x0366980C TBNZ X8, 0x0, 0x366983C
	0x03669810 ADRP X0, 0xA8A000
	0x03669814 LDR X0, [X0 + 0x618]
	0x03669818 BL 0x1C16CF4
	0x0366981C ADRP X0, 0xAB2000
	0x03669820 LDR X0, [X0 + 0x850]
	0x03669824 BL 0x1C16CF4
	0x03669828 ADRP X0, 0xA8A000
	0x0366982C LDR X0, [X0 + 0x5A8]
	0x03669830 BL 0x1C16CF4
	0x03669834 MOVZ W8, 0x1
	0x03669838 STRB W8, [X22 + 0x72C]
	0x0366983C LDR X22, [X19 + 0x38]
	0x03669840 CBNZ X22, 0x3669864
	0x03669844 ADRP X8, 0xA8A000
	0x03669848 LDR X8, [X8 + 0x618]
	0x0366984C MOVZ W1, 0x1000
	0x03669850 LDR X0, [X8]
	0x03669854 BL 0x1C16D6C
	0x03669858 MOV X22, X0
	0x0366985C STR X0, [X19 + 0x38]
	0x03669860 CBZ X0, 0x366990C
	0x03669864 ADRP X8, 0xA8A000
	0x03669868 LDR X8, [X8 + 0x5A8]
	0x0366986C LDR X0, [X8]
	0x03669870 LDR W8, [X0 + 0xE0]
	0x03669874 CBNZ W8, 0x366987C
	0x03669878 BL 0x1C16DFC
	0x0366987C LDR W1, [X22 + 0x18]
	0x03669880 MOV W0, W21
	0x03669884 MOV X2, X31
	0x03669888 BL 0x337EE94
	0x0366988C LDR X8, [X19 + 0x18]
	0x03669890 CBZ X8, 0x3669908
	0x03669894 LDR X9, [X8]
	0x03669898 LDR X1, [X19 + 0x38]
	0x0366989C MOV W3, W0
	0x036698A0 LDR X10, [X9 + 0x358]
	0x036698A4 LDR X4, [X9 + 0x360]
	0x036698A8 MOV X0, X8
	0x036698AC MOV W2, W31
	0x036698B0 BLR X10

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X25, 0xD78000
	010 Move W8, [X25+1824]
	011 Move X19, X5
	012 Move X20, X4
	013 Move W21, W3
	014 Move W22, W2
	015 Move X23, X1
	016 Move X24, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {29}
	021 Move X0, 0xAD5000
	022 Move X0, [X0+952]
	023 Call 0x1C17CF4
	024 Move X0, 0xAD5000
	025 Move X0, [X0+960]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X25+1824], W8
	029 Move W8, [X24+53]
	030 Compare W8, 0
	031 JumpIfNotEqual {82}
	032 Move X8, [X24]
	033 Move X0, X24
	034 Move X9, [X8+424]
	035 Move X1, [X8+432]
	036 NotImplemented "Instruction BLR not yet implemented."
	037 Move TEMP, X0
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfNotEqual {107}
	041 Compare X23, 0
	042 JumpIfEqual {119}
	043 Move TEMP, X21
	044 And TEMP, TEMP, -2147483648
	045 Compare TEMP, -2147483648
	046 JumpIfEqual {131}
	047 Move TEMP, X22
	048 And TEMP, TEMP, -2147483648
	049 Compare TEMP, -2147483648
	050 JumpIfEqual {138}
	051 Move W8, [X23+24]
	052 Add W9, W21, W22
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Move X8, 0xAD5000
	055 Move X8, [X8+960]
	056 Move X25, 0xAD5000
	057 Move X0, [X8]
	058 Move X25, [X25+952]
	059 Call 0x1C17F10
	060 Move X2, [X25]
	061 Move X1, X24
	062 Move X25, X0
	063 Call ReadMethod..ctor, X0, X1, X2
	064 Compare X25, 0
	065 JumpIfEqual {173}
	066 Move X1, X23
	067 Move W2, W22
	068 Move W3, W21
	069 Move X4, X20
	070 Move X5, X19
	071 Move X20, [X31+48]
	072 Move X19, [X31+56]
	073 Move X22, [X31+32]
	074 Move X21, [X31+40]
	075 Move X24, [X31+16]
	076 Move X23, [X31+24]
	077 Move X0, X25
	078 Move X30, [X31+64]
	079 Move X25, [X31+72]
	080 Call ReadMethod.BeginInvoke, X0, X1, X2, X3, X4, X5
	081 Return X0
	082 Move X0, X24
	083 Move X1, X31
	084 Call "il2cpp_vm_object_is_inst", X0
	085 Move X19, X0
	086 Call 0x19913C0
	087 Move X8, [X19]
	088 Move X0, X19
	089 Move X9, [X8+744]
	090 Move X1, [X8+752]
	091 NotImplemented "Instruction BLR not yet implemented."
	092 Move X19, X0
	093 Move X0, 0xAB4000
	094 Move X0, [X0+1208]
	095 Call 0x1C17D08
	096 Call 0x1C17F10
	097 Move X1, X19
	098 Move X2, X31
	099 Move X20, X0
	100 Call ObjectDisposedException..ctor, X0, X1
	101 Move X0, 0xAD5000
	102 Move X0, [X0+968]
	103 Call 0x1C17D08
	104 Move X1, X0
	105 Move X0, X20
	106 Call 0x1C17DEC
	107 Move X0, 0xA8B000
	108 Move X0, [X0+2880]
	109 Call 0x1C17D08
	110 Call 0x1C17F10
	111 Move X19, X0
	112 Move X0, 0xABF000
	113 Move X0, [X0+1520]
	114 Call 0x1C17D08
	115 Move X1, X0
	116 Move X0, X19
	117 Move X2, X31
	118 Call NotSupportedException..ctor, X0, X1
	119 Move X0, 0xA90000
	120 Move X0, [X0+1320]
	121 Call 0x1C17D08
	122 Call 0x1C17F10
	123 Move X19, X0
	124 Move X0, 0xAB3000
	125 Move X0, [X0+1600]
	126 Call 0x1C17D08
	127 Move X1, X0
	128 Move X0, X19
	129 Move X2, X31
	130 Call ArgumentNullException..ctor, X0, X1
	131 Move X0, 0xA93000
	132 Move X0, [X0+1888]
	133 Call 0x1C17D08
	134 Call 0x1C17F10
	135 Move X19, X0
	136 Move X0, 0xAB3000
	137 Move X0, [X0+1608]
	138 Move X0, 0xA93000
	139 Move X0, [X0+1888]
	140 Call 0x1C17D08
	141 Call 0x1C17F10
	142 Move X19, X0
	143 Move X0, 0xABA000
	144 Move X0, [X0+3472]
	145 Call 0x1C17D08
	146 Move X20, X0
	147 Move X0, 0xABF000
	148 Move X0, [X0+1528]
	149 Call 0x1C17D08
	150 Move X2, X0
	151 Move X0, X19
	152 Move X1, X20
	153 Move X3, X31
	154 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	155 Move X0, 0xA93000
	156 Move X0, [X0+1400]
	157 Call 0x1C17D08
	158 Call 0x1C17F10
	159 Move X19, X0
	160 Move X0, 0xAD5000
	161 Move X0, [X0+928]
	162 Call 0x1C17D08
	163 Move X1, X0
	164 Move X0, X19
	165 Move X2, X31
	166 Call ArgumentException..ctor, X0, X1
	167 Move X0, 0xAD5000
	168 Move X0, [X0+968]
	169 Call 0x1C17D08
	170 Move X1, X0
	171 Move X0, X19
	172 Call 0x1C17DEC
	173 Call 0x1C17F20

Method: System.IAsyncResult BeginWrite(System.Byte[] array, System.Int32 offset, System.Int32 count, System.AsyncCallback asyncCallback, System.Object asyncState)

Disassembly:
	0x036699FC LDR X25, [X25 + 0x618]
	0x03669A00 LDR X26, [X26 + 0x5A8]
	0x03669A04 LDR X27, [X27 + 0x850]
	0x03669A08 MOV W22, W31
	0x03669A0C LDR X23, [X19 + 0x38]
	0x03669A10 CBNZ X23, 0x3669A2C
	0x03669A14 LDR X0, [X25]
	0x03669A18 MOVZ W1, 0x1000
	0x03669A1C BL 0x1C16D6C
	0x03669A20 MOV X23, X0
	0x03669A24 STR X0, [X19 + 0x38]
	0x03669A28 CBZ X0, 0x3669AE0
	0x03669A2C LDR X0, [X26]
	0x03669A30 LDR W8, [X0 + 0xE0]
	0x03669A34 CBNZ W8, 0x3669A3C
	0x03669A38 BL 0x1C16DFC
	0x03669A3C LDR W1, [X23 + 0x18]
	0x03669A40 MOV W0, W20
	0x03669A44 MOV X2, X31
	0x03669A48 BL 0x337EE94
	0x03669A4C LDR X8, [X27]
	0x03669A50 LDR X24, [X19 + 0x38]
	0x03669A54 MOV W23, W0
	0x03669A58 LDR W9, [X8 + 0xE0]
	0x03669A5C CBNZ W9, 0x3669A68
	0x03669A60 MOV X0, X8
	0x03669A64 BL 0x1C16DFC
	0x03669A68 MOV X0, X21
	0x03669A6C MOV X1, X24
	0x03669A70 MOV W2, W31
	0x03669A74 MOV W3, W23
	0x03669A78 MOV X4, X31
	0x03669A7C BL 0x32C0C8C
	0x03669A80 LDR X0, [X19 + 0x18]
	0x03669A84 CBZ X0, 0x3669ADC
	0x03669A88 LDR X8, [X0]
	0x03669A8C LDR X1, [X19 + 0x38]
	0x03669A90 LDR X9, [X8 + 0x388]
	0x03669A94 LDR X4, [X8 + 0x390]
	0x03669A98 MOV W2, W31
	0x03669A9C MOV W3, W23
	0x03669AA0 BLR X9
	0x03669AA4 SUB W20, W20, W23
	0x03669AA8 ADD X21, X21, W23, SXTW
	0x03669AAC CMP W20, 0x0
	0x03669AB0 ADD W22, W23, W22
	0x03669AB4 B.GT 0x3669A0C
	0x03669AB8 B 0x3669AC0
	0x03669ABC MOV W22, W31
	0x03669AC0 MOV W0, W22
	0x03669AC4 LDP X20, X19, [X31 + 0x40]
	0x03669AC8 LDP X22, X21, [X31 + 0x30]
	0x03669ACC LDP X24, X23, [X31 + 0x20]
	0x03669AD0 LDP X26, X25, [X31 + 0x10]
	0x03669AD4 LDP X30, X27, [X31], #0x50
	0x03669AD8 RET
	0x03669ADC BL 0x1C16F20
	0x03669AE0 BL 0x1C16F20
	0x03669AE4 B 0x3669AE8
	0x03669AE8 MOV X20, X0
	0x03669AEC CMP W1, 0x1
	0x03669AF0 B.NE 0x3669B58
	0x03669AF4 MOV X0, X20
	0x03669AF8 BL 0x3EB1AD0
	0x03669AFC MOV X20, X0
	0x03669B00 ADRP X0, 0xA8A000
	0x03669B04 LDR X0, [X0 + 0x7D0]
	0x03669B08 BL 0x1C16D08
	0x03669B0C LDR X8, [X20]
	0x03669B10 LDR X1, [X8]
	0x03669B14 BL 0x1C17270
	0x03669B18 TBZ X0, 0x0, 0x3669B30
	0x03669B1C LDR X20, [X20]
	0x03669B20 BL 0x3EB1AE0
	0x03669B24 STR X20, [X19 + 0x40]
	0x03669B28 MOVN W22, 0xB
	0x03669B2C B 0x3669AC0
	0x03669B30 MOVZ W0, 0x8
	0x03669B34 BL 0x3EB1AF0
	0x03669B38 LDR X8, [X20]
	0x03669B3C STR X8, [X0]
	0x03669B40 ADRP X1, 0x84B000
	0x03669B44 ADD X1, X1, 0xE58
	0x03669B48 MOV X2, X31
	0x03669B4C BL 0x3EB1B00
	0x03669B50 MOV X20, X0
	0x03669B54 BL 0x3EB1AE0
	0x03669B58 MOV X0, X20
	0x03669B5C BL 0x1D2C690
	0x03669B60 BL 0x1990590
	0x03669B64 MOVZ W2, 0x1
	0x03669B68 MOV X1, X31
	0x03669B6C MOV X3, X31
	0x03669B70 B 0x32C0158
	0x03669B74 B 0x3EB1E30
	0x03669B78 LDR X8, [X0 + 0x40]
	0x03669B7C LDR X5, [X0 + 0x18]
	0x03669B80 LDR X4, [X0 + 0x28]
	0x03669B84 MOV X0, X8
	0x03669B88 BR X5
	0x03669B8C LDR X0, [X0 + 0x10]
	0x03669B90 MOV X1, X31
	0x03669B94 MOV X2, X31
	0x03669B98 B 0x33BE5B0
	0x03669B9C STP X30, X19, [X31 - 0x10]!
	0x03669BA0 LDR X0, [X0 + 0x10]
	0x03669BA4 BL 0x3EB1E30
	0x03669BA8 MOVZ W0, 0x1
	0x03669BAC LDP X30, X19, [X31], #0x10
	0x03669BB0 RET
	0x03669BB4 CMP W1, 0x1
	0x03669BB8 MOV X19, X0
	0x03669BBC B.NE 0x3669C18
	0x03669BC0 MOV X0, X19
	0x03669BC4 BL 0x3EB1AD0
	0x03669BC8 MOV X19, X0
	0x03669BCC ADRP X0, 0xA90000
	0x03669BD0 LDR X0, [X0 + 0xCC0]
	0x03669BD4 BL 0x1C16D08
	0x03669BD8 LDR X8, [X19]
	0x03669BDC LDR X1, [X8]
	0x03669BE0 BL 0x1C17270
	0x03669BE4 TBZ X0, 0x0, 0x3669BF0
	0x03669BE8 BL 0x3EB1AE0
	0x03669BEC B 0x3669BA8
	0x03669BF0 MOVZ W0, 0x8
	0x03669BF4 BL 0x3EB1AF0
	0x03669BF8 LDR X8, [X19]
	0x03669BFC STR X8, [X0]
	0x03669C00 ADRP X1, 0x84B000
	0x03669C04 ADD X1, X1, 0xE58
	0x03669C08 MOV X2, X31
	0x03669C0C BL 0x3EB1B00
	0x03669C10 MOV X19, X0
	0x03669C14 BL 0x3EB1AE0
	0x03669C18 MOV X0, X19
	0x03669C1C BL 0x1D2C690
	0x03669C20 BL 0x1990590
	0x03669C24 RET
	0x03669C28 RET
	0x03669C2C MOV X4, X31
	0x03669C30 B 0x367A54C
	0x03669C34 STP X30, X21, [X31 - 0x20]!
	0x03669C38 STP X20, X19, [X31 + 0x10]
	0x03669C3C MOV W21, W2
	0x03669C40 MOV W20, W1
	0x03669C44 MOV X1, X3
	0x03669C48 MOV X2, X4
	0x03669C4C MOV X3, X5
	0x03669C50 MOV X4, X31
	0x03669C54 MOV X19, X0
	0x03669C58 BL 0x367A54C
	0x03669C5C TBZ X21, 0x0, 0x3669C68

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X25, 0xD78000
	010 Move W8, [X25+1825]
	011 Move X19, X5
	012 Move X20, X4
	013 Move W21, W3
	014 Move W22, W2
	015 Move X23, X1
	016 Move X24, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {29}
	021 Move X0, 0xAD5000
	022 Move X0, [X0+976]
	023 Call 0x1C17CF4
	024 Move X0, 0xAD5000
	025 Move X0, [X0+984]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X25+1825], W8
	029 Move W8, [X24+53]
	030 Compare W8, 0
	031 JumpIfNotEqual {82}
	032 Move X8, [X24]
	033 Move X0, X24
	034 Move X9, [X8+472]
	035 Move X1, [X8+480]
	036 NotImplemented "Instruction BLR not yet implemented."
	037 Move TEMP, X0
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfNotEqual {107}
	041 Compare X23, 0
	042 JumpIfEqual {119}
	043 Move TEMP, X21
	044 And TEMP, TEMP, -2147483648
	045 Compare TEMP, -2147483648
	046 JumpIfEqual {131}
	047 Move TEMP, X22
	048 And TEMP, TEMP, -2147483648
	049 Compare TEMP, -2147483648
	050 JumpIfEqual {138}
	051 Move W8, [X23+24]
	052 Add W9, W21, W22
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Move X8, 0xAD5000
	055 Move X8, [X8+984]
	056 Move X25, 0xAD5000
	057 Move X0, [X8]
	058 Move X25, [X25+976]
	059 Call 0x1C17F10
	060 Move X2, [X25]
	061 Move X1, X24
	062 Move X25, X0
	063 Call WriteMethod..ctor, X0, X1, X2
	064 Compare X25, 0
	065 JumpIfEqual {173}
	066 Move X1, X23
	067 Move W2, W22
	068 Move W3, W21
	069 Move X4, X20
	070 Move X5, X19
	071 Move X20, [X31+48]
	072 Move X19, [X31+56]
	073 Move X22, [X31+32]
	074 Move X21, [X31+40]
	075 Move X24, [X31+16]
	076 Move X23, [X31+24]
	077 Move X0, X25
	078 Move X30, [X31+64]
	079 Move X25, [X31+72]
	080 Call WriteMethod.BeginInvoke, X0, X1, X2, X3, X4, X5
	081 Return X0
	082 Move X0, X24
	083 Move X1, X31
	084 Call "il2cpp_vm_object_is_inst", X0
	085 Move X19, X0
	086 Call 0x19913C0
	087 Move X8, [X19]
	088 Move X0, X19
	089 Move X9, [X8+744]
	090 Move X1, [X8+752]
	091 NotImplemented "Instruction BLR not yet implemented."
	092 Move X19, X0
	093 Move X0, 0xAB4000
	094 Move X0, [X0+1208]
	095 Call 0x1C17D08
	096 Call 0x1C17F10
	097 Move X1, X19
	098 Move X2, X31
	099 Move X20, X0
	100 Call ObjectDisposedException..ctor, X0, X1
	101 Move X0, 0xAD5000
	102 Move X0, [X0+992]
	103 Call 0x1C17D08
	104 Move X1, X0
	105 Move X0, X20
	106 Call 0x1C17DEC
	107 Move X0, 0xA8B000
	108 Move X0, [X0+1456]
	109 Call 0x1C17D08
	110 Call 0x1C17F10
	111 Move X19, X0
	112 Move X0, 0xABF000
	113 Move X0, [X0+1608]
	114 Call 0x1C17D08
	115 Move X1, X0
	116 Move X0, X19
	117 Move X2, X31
	118 Call InvalidOperationException..ctor, X0, X1
	119 Move X0, 0xA90000
	120 Move X0, [X0+1320]
	121 Call 0x1C17D08
	122 Call 0x1C17F10
	123 Move X19, X0
	124 Move X0, 0xAB3000
	125 Move X0, [X0+1600]
	126 Call 0x1C17D08
	127 Move X1, X0
	128 Move X0, X19
	129 Move X2, X31
	130 Call ArgumentNullException..ctor, X0, X1
	131 Move X0, 0xA93000
	132 Move X0, [X0+1888]
	133 Call 0x1C17D08
	134 Call 0x1C17F10
	135 Move X19, X0
	136 Move X0, 0xAB3000
	137 Move X0, [X0+1608]
	138 Move X0, 0xA93000
	139 Move X0, [X0+1888]
	140 Call 0x1C17D08
	141 Call 0x1C17F10
	142 Move X19, X0
	143 Move X0, 0xABA000
	144 Move X0, [X0+3472]
	145 Call 0x1C17D08
	146 Move X20, X0
	147 Move X0, 0xABF000
	148 Move X0, [X0+1528]
	149 Call 0x1C17D08
	150 Move X2, X0
	151 Move X0, X19
	152 Move X1, X20
	153 Move X3, X31
	154 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	155 Move X0, 0xA93000
	156 Move X0, [X0+1400]
	157 Call 0x1C17D08
	158 Call 0x1C17F10
	159 Move X19, X0
	160 Move X0, 0xAD5000
	161 Move X0, [X0+928]
	162 Call 0x1C17D08
	163 Move X1, X0
	164 Move X0, X19
	165 Move X2, X31
	166 Call ArgumentException..ctor, X0, X1
	167 Move X0, 0xAD5000
	168 Move X0, [X0+992]
	169 Call 0x1C17D08
	170 Move X1, X0
	171 Move X0, X19
	172 Call 0x1C17DEC
	173 Call 0x1C17F20

Method: System.Int32 EndRead(System.IAsyncResult asyncResult)

Disassembly:
	0x03669DA8 LDR X8, [X8 + 0xCC0]
	0x03669DAC LDR X0, [X8]
	0x03669DB0 BL 0x1C16F10
	0x03669DB4 MOV X1, X31
	0x03669DB8 MOV X20, X0
	0x03669DBC BL 0x33BDD8C
	0x03669DC0 B 0x3669DC8
	0x03669DC4 MOV X20, X31
	0x03669DC8 CBZ X19, 0x3669DEC
	0x03669DCC LDRB W8, [X19 + 0x50]
	0x03669DD0 STR X20, [X19 + 0x48]
	0x03669DD4 MOV X0, X20
	0x03669DD8 ORR W8, W8, 0x8
	0x03669DDC STRB W8, [X19 + 0x50]
	0x03669DE0 LDP X20, X19, [X31 + 0x10]
	0x03669DE4 LDP X30, X21, [X31], #0x20
	0x03669DE8 RET
	0x03669DEC BL 0x1C16F20
	0x03669DF0 STP X30, X23, [X31 - 0x30]!
	0x03669DF4 STP X22, X21, [X31 + 0x10]
	0x03669DF8 STP X20, X19, [X31 + 0x20]
	0x03669DFC ADRP X23, 0xD77000
	0x03669E00 ADRP X22, 0xAD4000
	0x03669E04 LDRB W8, [X23 + 0x744]
	0x03669E08 LDR X22, [X22 + 0x468]
	0x03669E0C MOV X19, X2
	0x03669E10 MOV X20, X1
	0x03669E14 MOV X21, X0
	0x03669E18 TBNZ X8, 0x0, 0x3669E30
	0x03669E1C ADRP X0, 0xAD4000
	0x03669E20 LDR X0, [X0 + 0x468]
	0x03669E24 BL 0x1C16CF4
	0x03669E28 MOVZ W8, 0x1
	0x03669E2C STRB W8, [X23 + 0x744]
	0x03669E30 LDR X0, [X22]
	0x03669E34 LDR W8, [X0 + 0xE0]
	0x03669E38 CBNZ W8, 0x3669E40
	0x03669E3C BL 0x1C16DFC
	0x03669E40 BL 0x366A368
	0x03669E44 TBZ X0, 0x0, 0x3669EAC
	0x03669E48 LDR X0, [X22]
	0x03669E4C LDR W8, [X0 + 0xE0]
	0x03669E50 CBNZ W8, 0x3669E5C
	0x03669E54 BL 0x1C16DFC
	0x03669E58 LDR X0, [X22]
	0x03669E5C LDR X8, [X0 + 0xB8]
	0x03669E60 MOV X0, X21
	0x03669E64 LDR X22, [X8]
	0x03669E68 BL 0x366B318
	0x03669E6C MOV X21, X0
	0x03669E70 MOV X0, X20
	0x03669E74 BL 0x366B8BC
	0x03669E78 CBZ X0, 0x3669EBC
	0x03669E7C LDR X8, [X0]
	0x03669E80 LDP X9, X1, [X8 + 0x168]
	0x03669E84 BLR X9
	0x03669E88 CBZ X22, 0x3669EBC
	0x03669E8C MOV X3, X0
	0x03669E90 MOV X0, X22
	0x03669E94 MOV X1, X21
	0x03669E98 MOV X2, X19
	0x03669E9C LDP X20, X19, [X31 + 0x20]
	0x03669EA0 LDP X22, X21, [X31 + 0x10]
	0x03669EA4 LDP X30, X23, [X31], #0x30
	0x03669EA8 B 0x366C0F0
	0x03669EAC LDP X20, X19, [X31 + 0x20]
	0x03669EB0 LDP X22, X21, [X31 + 0x10]
	0x03669EB4 LDP X30, X23, [X31], #0x30
	0x03669EB8 RET
	0x03669EBC BL 0x1C16F20
	0x03669EC0 STR X30, [X31 - 0x10]!
	0x03669EC4 LDRB W8, [X0 + 0x50]
	0x03669EC8 AND W9, W8, 0x18
	0x03669ECC CMP W9, 0x8
	0x03669ED0 B.NE 0x3669EF0
	0x03669ED4 ORR W8, W8, 0x10
	0x03669ED8 ADD X1, X31, 0x8
	0x03669EDC MOV W2, W31
	0x03669EE0 STRB W8, [X0 + 0x50]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xD78000
	005 Move W8, [X20+1826]
	006 Move X19, X1
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0xABF000
	012 Move X0, [X0+1552]
	013 Call 0x1C17CF4
	014 Move X0, 0xAD5000
	015 Move X0, [X0+960]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1826], W8
	019 Compare X19, 0
	020 JumpIfEqual {64}
	021 Move X9, 0xABF000
	022 Move X9, [X9+1552]
	023 Move X8, [X19]
	024 Move X9, [X9]
	025 Move W11, [X8+304]
	026 Move W10, [X9+304]
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Move X11, [X8+200]
	029 Add X10, X11, X10
	030 NotImplemented "Instruction LDUR not yet implemented."
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move X9, [X8+568]
	033 Move X1, [X8+576]
	034 Move X0, X19
	035 NotImplemented "Instruction BLR not yet implemented."
	036 Compare X0, 0
	037 JumpIfEqual {47}
	038 Move X8, 0xAD5000
	039 Move X8, [X8+960]
	040 Move X9, [X0]
	041 Move X8, [X8]
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X1, X19
	044 Move X20, [X31+16]
	045 Move X19, [X31+24]
	046 Move X30, [X31+32]
	047 Move X0, 0xA93000
	048 Move X0, [X0+1400]
	049 Call 0x1C17D08
	050 Call 0x1C17F10
	051 Move X19, X0
	052 Move X0, 0xABF000
	053 Move X0, [X0+1560]
	054 Call 0x1C17D08
	055 Move X20, X0
	056 Move X0, 0xAB6000
	057 Move X0, [X0+3536]
	058 Call 0x1C17D08
	059 Move X2, X0
	060 Move X0, X19
	061 Move X1, X20
	062 Move X3, X31
	063 Call ArgumentException..ctor, X0, X1, X2
	064 Move X0, 0xA90000
	065 Move X0, [X0+1320]
	066 Call 0x1C17D08
	067 Call 0x1C17F10
	068 Move X19, X0
	069 Move X0, 0xAB6000
	070 Move X0, [X0+3536]
	071 Call 0x1C17D08
	072 Move X1, X0
	073 Move X0, X19
	074 Move X2, X31
	075 Call ArgumentNullException..ctor, X0, X1
	076 Move X0, 0xAD5000
	077 Move X0, [X0+1000]
	078 Call 0x1C17D08
	079 Move X1, X0
	080 Move X0, X19
	081 Call 0x1C17DEC

Method: System.Void EndWrite(System.IAsyncResult asyncResult)

Disassembly:
	0x03669F0C STP X22, X21, [X31 + 0x30]
	0x03669F10 STP X20, X19, [X31 + 0x40]
	0x03669F14 ADRP X22, 0xD77000
	0x03669F18 LDRB W8, [X22 + 0x732]
	0x03669F1C MOV W21, W2
	0x03669F20 MOV X20, X1
	0x03669F24 MOV X19, X0
	0x03669F28 TBNZ X8, 0x0, 0x3669FB8
	0x03669F2C ADRP X0, 0xAB2000
	0x03669F30 LDR X0, [X0 + 0x580]
	0x03669F34 BL 0x1C16CF4
	0x03669F38 ADRP X0, 0xAD4000
	0x03669F3C LDR X0, [X0 + 0x468]
	0x03669F40 BL 0x1C16CF4
	0x03669F44 ADRP X0, 0xA8A000
	0x03669F48 LDR X0, [X0 + 0x9D0]
	0x03669F4C BL 0x1C16CF4
	0x03669F50 ADRP X0, 0xAD4000
	0x03669F54 LDR X0, [X0 + 0x480]
	0x03669F58 BL 0x1C16CF4
	0x03669F5C ADRP X0, 0xAD4000
	0x03669F60 LDR X0, [X0 + 0x488]
	0x03669F64 BL 0x1C16CF4
	0x03669F68 ADRP X0, 0xAD4000
	0x03669F6C LDR X0, [X0 + 0x490]
	0x03669F70 BL 0x1C16CF4
	0x03669F74 ADRP X0, 0xAD4000
	0x03669F78 LDR X0, [X0 + 0x498]
	0x03669F7C BL 0x1C16CF4
	0x03669F80 ADRP X0, 0xAD4000
	0x03669F84 LDR X0, [X0 + 0x4A0]
	0x03669F88 BL 0x1C16CF4
	0x03669F8C ADRP X0, 0xAD4000
	0x03669F90 LDR X0, [X0 + 0x4A8]
	0x03669F94 BL 0x1C16CF4
	0x03669F98 ADRP X0, 0xAD4000
	0x03669F9C LDR X0, [X0 + 0x4B0]
	0x03669FA0 BL 0x1C16CF4
	0x03669FA4 ADRP X0, 0xAD4000
	0x03669FA8 LDR X0, [X0 + 0x4B8]
	0x03669FAC BL 0x1C16CF4
	0x03669FB0 MOVZ W8, 0x1
	0x03669FB4 STRB W8, [X22 + 0x732]
	0x03669FB8 ADRP X24, 0xAD4000
	0x03669FBC ADRP X23, 0xAD4000
	0x03669FC0 LDRB W8, [X19 + 0x50]
	0x03669FC4 LDR X24, [X24 + 0x468]
	0x03669FC8 LDR X23, [X23 + 0x4B8]
	0x03669FCC TBNZ X8, 0x3, 0x3669FF8
	0x03669FD0 LDR X0, [X24]
	0x03669FD4 ADRP X22, 0xAD4000
	0x03669FD8 LDR W8, [X0 + 0xE0]
	0x03669FDC LDR X22, [X22 + 0x488]
	0x03669FE0 CBNZ W8, 0x3669FE8
	0x03669FE4 BL 0x1C16DFC
	0x03669FE8 LDR X1, [X22]
	0x03669FEC LDR X2, [X23]
	0x03669FF0 MOV X0, X19
	0x03669FF4 BL 0x3669DF0
	0x03669FF8 LDR X25, [X19 + 0x20]
	0x03669FFC LDRB W26, [X19 + 0x50]
	0x0366A000 CMP X25, 0x0
	0x0366A004 CSET W8, EQ
	0x0366A008 ANDS W31, W26, 0x2
	0x0366A00C CSET W9, EQ
	0x0366A010 AND W22, W8, W9, 0x0
	0x0366A014 TBNZ X26, 0x0, 0x366A0B4
	0x0366A018 TBNZ X22, 0x0, 0x366A02C
	0x0366A01C MOV X0, X19
	0x0366A020 MOV X1, X31
	0x0366A024 BL 0x3678424
	0x0366A028 TBZ X0, 0x0, 0x366A110
	0x0366A02C LDR X0, [X24]
	0x0366A030 LDR W8, [X0 + 0xE0]
	0x0366A034 CBNZ W8, 0x366A03C
	0x0366A038 BL 0x1C16DFC
	0x0366A03C BL 0x366A368
	0x0366A040 TBZ X0, 0x0, 0x366A06C
	0x0366A044 LDR X0, [X24]
	0x0366A048 LDR W8, [X0 + 0xE0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xD78000
	005 Move W8, [X20+1827]
	006 Move X19, X1
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0xABF000
	012 Move X0, [X0+1552]
	013 Call 0x1C17CF4
	014 Move X0, 0xAD5000
	015 Move X0, [X0+984]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1827], W8
	019 Compare X19, 0
	020 JumpIfEqual {67}
	021 Move X9, 0xABF000
	022 Move X9, [X9+1552]
	023 Move X8, [X19]
	024 Move X9, [X9]
	025 Move W11, [X8+304]
	026 Move W10, [X9+304]
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Move X11, [X8+200]
	029 Add X10, X11, X10
	030 NotImplemented "Instruction LDUR not yet implemented."
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move X9, [X8+568]
	033 Move X1, [X8+576]
	034 Move X0, X19
	035 NotImplemented "Instruction BLR not yet implemented."
	036 Compare X0, 0
	037 JumpIfEqual {50}
	038 Move X8, 0xAD5000
	039 Move X8, [X8+984]
	040 Move X9, [X0]
	041 Move X8, [X8]
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X0, X19
	044 Move X20, [X31+16]
	045 Move X19, [X31+24]
	046 Move X1, X31
	047 Move X30, [X31+32]
	048 Call 0x1C17CB4
	049 Return 
	050 Move X0, 0xA93000
	051 Move X0, [X0+1400]
	052 Call 0x1C17D08
	053 Call 0x1C17F10
	054 Move X19, X0
	055 Move X0, 0xABF000
	056 Move X0, [X0+1560]
	057 Call 0x1C17D08
	058 Move X20, X0
	059 Move X0, 0xAB6000
	060 Move X0, [X0+3536]
	061 Call 0x1C17D08
	062 Move X2, X0
	063 Move X0, X19
	064 Move X1, X20
	065 Move X3, X31
	066 Call ArgumentException..ctor, X0, X1, X2
	067 Move X0, 0xA8F000
	068 Move X0, [X0+1320]
	069 Call 0x1C17D08
	070 Call 0x1C17F10
	071 Move X19, X0
	072 Move X0, 0xAB5000
	073 Move X0, [X0+3536]
	074 Call 0x1C17D08
	075 Move X1, X0
	076 Move X0, X19
	077 Move X2, X31
	078 Call ArgumentNullException..ctor, X0, X1
	079 Move X0, 0xAD4000
	080 Move X0, [X0+1008]
	081 Call 0x1C17D08
	082 Move X1, X0
	083 Move X0, X19
	084 Call 0x1C17DEC

Method: System.Int64 Seek(System.Int64 offset, System.IO.SeekOrigin origin)

Disassembly:
	0x0366A058 LDR X8, [X8 + 0x480]
	0x0366A05C LDR X2, [X23]
	0x0366A060 MOV X0, X19
	0x0366A064 LDR X1, [X8]
	0x0366A068 BL 0x366A4BC
	0x0366A06C STR X31, [X20]
	0x0366A070 LDR X8, [X19 + 0x20]
	0x0366A074 CBZ X8, 0x366A234
	0x0366A078 MOV X0, X19
	0x0366A07C MOV X1, X31
	0x0366A080 BL 0x3686F78
	0x0366A084 TBNZ X0, 0x0, 0x366A234
	0x0366A088 LDR X0, [X24]
	0x0366A08C LDR W8, [X0 + 0xE0]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0xA8A000
	004 Move X0, [X0+2880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X1, X31
	008 Move X19, X0
	009 Call NotSupportedException..ctor, X0
	010 Move X0, 0xAD4000
	011 Move X0, [X0+1016]
	012 Call 0x1C17D08
	013 Move X1, X0
	014 Move X0, X19
	015 Call 0x1C17DEC

Method: System.Void SetLength(System.Int64 value)

Disassembly:
	0x0366A090 CBNZ W8, 0x366A098
	0x0366A094 BL 0x1C16DFC
	0x0366A098 ADRP X8, 0xAD3000
	0x0366A09C LDR X8, [X8 + 0x498]
	0x0366A0A0 LDR X2, [X23]
	0x0366A0A4 MOV X0, X19
	0x0366A0A8 LDR X1, [X8]
	0x0366A0AC BL 0x3669DF0
	0x0366A0B0 B 0x366A234
	0x0366A0B4 MOV X0, X19
	0x0366A0B8 MOV X1, X31
	0x0366A0BC BL 0x3678424
	0x0366A0C0 TBNZ X0, 0x0, 0x366A018
	0x0366A0C4 CBNZ X25, 0x366A018

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0xA8A000
	004 Move X0, [X0+2880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X1, X31
	008 Move X19, X0
	009 Call NotSupportedException..ctor, X0
	010 Move X0, 0xAD4000
	011 Move X0, [X0+1024]
	012 Call 0x1C17D08
	013 Move X1, X0
	014 Move X0, X19
	015 Call 0x1C17DEC

Method: System.Boolean get_CanRead()

Disassembly:
	0x0366A0C8 TBNZ X26, 0x1, 0x366A018
	0x0366A0CC LDR X0, [X24]
	0x0366A0D0 LDR W8, [X0 + 0xE0]
	0x0366A0D4 CBNZ W8, 0x366A0DC
	0x0366A0D8 BL 0x1C16DFC
	0x0366A0DC BL 0x366A368
	0x0366A0E0 TBZ X0, 0x0, 0x366A018
	0x0366A0E4 LDR X0, [X24]
	0x0366A0E8 LDR W8, [X0 + 0xE0]
	0x0366A0EC CBNZ W8, 0x366A0F4
	0x0366A0F0 BL 0x1C16DFC
	0x0366A0F4 ADRP X8, 0xAD3000
	0x0366A0F8 LDR X8, [X8 + 0x4A0]
	0x0366A0FC LDR X2, [X23]
	0x0366A100 MOV X0, X19

ISIL:
	001 Move [X31-16], X30
	002 Move W8, [X0+53]
	003 Compare W8, 0
	004 JumpIfNotEqual {8}
	005 Move W8, [X0+48]
	006 Compare W8, 0
	007 JumpIfEqual {11}
	008 Move W0, W31
	009 Move X30, [X31+16]
	010 Return X0
	011 Move X0, [X0+40]
	012 Compare X0, 0
	013 JumpIfEqual {19}
	014 Move X8, [X0]
	015 Move X2, [X8+424]
	016 Move X1, [X8+432]
	017 Move X30, [X31+16]
	018 CallNoReturn X2
	019 Call 0x1C17F20

Method: System.Boolean get_CanSeek()

Disassembly:
	0x0366A104 LDR X1, [X8]
	0x0366A108 BL 0x366A4BC

ISIL:
	001 Move W0, W31
	002 Return X0

Method: System.Boolean get_CanWrite()

Disassembly:
	0x0366A10C B 0x366A018
	0x0366A110 LDR X0, [X24]
	0x0366A114 LDR W8, [X0 + 0xE0]
	0x0366A118 CBNZ W8, 0x366A120
	0x0366A11C BL 0x1C16DFC
	0x0366A120 BL 0x366A368
	0x0366A124 TBZ X0, 0x0, 0x366A150
	0x0366A128 LDR X0, [X24]
	0x0366A12C LDR W8, [X0 + 0xE0]
	0x0366A130 CBNZ W8, 0x366A138
	0x0366A134 BL 0x1C16DFC
	0x0366A138 ADRP X8, 0xAD3000
	0x0366A13C LDR X8, [X8 + 0x4A8]
	0x0366A140 LDR X2, [X23]
	0x0366A144 MOV X0, X19
	0x0366A148 LDR X1, [X8]

ISIL:
	001 Move [X31-16], X30
	002 Move W8, [X0+53]
	003 Compare W8, 0
	004 JumpIfNotEqual {15}
	005 Move W8, [X0+48]
	006 NotImplemented "Instruction CMP not yet implemented."
	007 Move X0, [X0+40]
	008 Compare X0, 0
	009 JumpIfEqual {18}
	010 Move X8, [X0]
	011 Move X2, [X8+472]
	012 Move X1, [X8+480]
	013 Move X30, [X31+16]
	014 CallNoReturn X2
	015 Move W0, W31
	016 Move X30, [X31+16]
	017 Return X0
	018 Call 0x1C17F20

Method: System.Int64 get_Length()

Disassembly:
	0x0366A14C BL 0x366A4BC
	0x0366A150 LDR X22, [X20]
	0x0366A154 CBNZ X22, 0x366A184
	0x0366A158 ADRP X8, 0xAB1000
	0x0366A15C LDR X8, [X8 + 0x580]
	0x0366A160 LDR X0, [X8]
	0x0366A164 LDR W8, [X0 + 0xE0]
	0x0366A168 CBNZ W8, 0x366A170
	0x0366A16C BL 0x1C16DFC
	0x0366A170 MOV X0, X31
	0x0366A174 BL 0x33DD730
	0x0366A178 MOV X22, X0
	0x0366A17C STR X0, [X20]
	0x0366A180 CBZ X0, 0x366A194

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0xA8A000
	004 Move X0, [X0+2880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X1, X31
	008 Move X19, X0
	009 Call NotSupportedException..ctor, X0
	010 Move X0, 0xAD4000
	011 Move X0, [X0+1032]
	012 Call 0x1C17D08
	013 Move X1, X0
	014 Move X0, X19
	015 Call 0x1C17DEC

Method: System.Int64 get_Position()

Disassembly:
	0x0366A184 BL 0x1C16D44
	0x0366A188 STR X22, [X19 + 0x40]
	0x0366A18C TBNZ X21, 0x0, 0x366A194
	0x0366A190 STR X31, [X20]
	0x0366A194 LDR X0, [X24]
	0x0366A198 LDR W8, [X0 + 0xE0]
	0x0366A19C CBNZ W8, 0x366A1A4
	0x0366A1A0 BL 0x1C16DFC
	0x0366A1A4 BL 0x366A368
	0x0366A1A8 TBZ X0, 0x0, 0x366A234
	0x0366A1AC ADRP X8, 0xA89000
	0x0366A1B0 LDR X8, [X8 + 0x9D0]
	0x0366A1B4 MOVZ W1, 0x1
	0x0366A1B8 LDR X0, [X8]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0xA8A000
	004 Move X0, [X0+2880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X1, X31
	008 Move X19, X0
	009 Call NotSupportedException..ctor, X0
	010 Move X0, 0xAD4000
	011 Move X0, [X0+1040]
	012 Call 0x1C17D08
	013 Move X1, X0
	014 Move X0, X19
	015 Call 0x1C17DEC

Method: System.Void set_Position(System.Int64 value)

Disassembly:
	0x0366A1BC BL 0x1C16D6C
	0x0366A1C0 LDR X21, [X19 + 0x40]
	0x0366A1C4 MOV X20, X0
	0x0366A1C8 BL 0x1C16D44
	0x0366A1CC CBZ X20, 0x366A2B4
	0x0366A1D0 CBZ X21, 0x366A1E8
	0x0366A1D4 LDR X8, [X20]
	0x0366A1D8 MOV X0, X21
	0x0366A1DC LDR X1, [X8 + 0x40]
	0x0366A1E0 BL 0x1C16E00
	0x0366A1E4 CBZ X0, 0x366A2BC
	0x0366A1E8 LDR W8, [X20 + 0x18]
	0x0366A1EC CBZ W8, 0x366A2B8
	0x0366A1F0 STR X21, [X20 + 0x20]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0xA8A000
	004 Move X0, [X0+2880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X1, X31
	008 Move X19, X0
	009 Call NotSupportedException..ctor, X0
	010 Move X0, 0xAD4000
	011 Move X0, [X0+1048]
	012 Call 0x1C17D08
	013 Move X1, X0
	014 Move X0, X19
	015 Call 0x1C17DEC

