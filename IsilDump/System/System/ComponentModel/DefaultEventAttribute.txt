Type: System.ComponentModel.DefaultEventAttribute

Method: System.Void .ctor(System.String name)

Disassembly:
	0x03661258 ADRP X21, 0xD7F000
	0x0366125C LDRB W8, [X21 + 0x6CB]
	0x03661260 MOV X19, X1
	0x03661264 MOV X20, X0
	0x03661268 TBNZ X8, 0x0, 0x3661280
	0x0366126C ADRP X0, 0xADB000
	0x03661270 LDR X0, [X0 + 0xEE8]
	0x03661274 BL 0x1C16CF4
	0x03661278 MOVZ W8, 0x1
	0x0366127C STRB W8, [X21 + 0x6CB]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X1
	005 Move X1, X31
	006 Move X20, X0
	007 Call Attribute..ctor, X0
	008 Move [X20+16], X19
	009 Move X20, [X31+16]
	010 Move X19, [X31+24]
	011 Move X30, [X31+32]
	012 Return 

Method: System.String get_Name()

Disassembly:
	0x03661280 LDR X20, [X20 + 0x18]
	0x03661284 CBZ X20, 0x36612D0

ISIL:
	001 Move X0, [X0+16]
	002 Return X0

Method: System.Boolean Equals(System.Object obj)

Disassembly:
	0x03661288 ADRP X10, 0xADB000
	0x0366128C LDR X8, [X20]
	0x03661290 LDR X10, [X10 + 0xEE8]
	0x03661294 LDRH W9, [X8 + 0x12E]
	0x03661298 LDR X1, [X10]
	0x0366129C CBZ X9, 0x36612C0
	0x036612A0 LDR X10, [X8 + 0xB0]
	0x036612A4 ADD X10, X10, 0x8
	0x036612A8 LDUR X11, [X10 - 0x8]
	0x036612AC CMP X11, X1
	0x036612B0 B.EQ 0x36612E0
	0x036612B4 SUBS X9, X9, 0x1
	0x036612B8 ADD X10, X10, 0x10
	0x036612BC B.NE 0x36612A8
	0x036612C0 MOV X0, X20
	0x036612C4 MOV W2, W31
	0x036612C8 BL 0x1C5C788
	0x036612CC B 0x36612EC
	0x036612D0 LDP X20, X19, [X31 + 0x10]
	0x036612D4 MOV X0, X31
	0x036612D8 LDP X30, X21, [X31], #0x20
	0x036612DC RET
	0x036612E0 LDRSW X9, [X10]
	0x036612E4 ADD X8, X8, X9, 0x4, LSL
	0x036612E8 ADD X0, X8, 0x138
	0x036612EC LDP X3, X2, [X0]
	0x036612F0 MOV X0, X20
	0x036612F4 MOV X1, X19
	0x036612F8 LDP X20, X19, [X31 + 0x10]
	0x036612FC LDP X30, X21, [X31], #0x20
	0x03661300 BR X3
	0x03661304 STR X30, [X31 - 0x20]!

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xD80000
	006 Move W8, [X21+1724]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xADC000
	014 Move X0, [X0+3632]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+1724], W8
	018 Compare X20, 0
	019 JumpIfEqual {26}
	020 Move X8, 0xADC000
	021 Move X8, [X8+3632]
	022 Move X9, [X20]
	023 Move X8, [X8]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 NotImplemented "Instruction CSEL not yet implemented."
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move W0, W31
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Return X0
	032 Compare X8, 0
	033 JumpIfEqual {43}
	034 Move X0, [X8+16]
	035 Move X1, [X19+16]
	036 Move X20, [X31+16]
	037 Move X19, [X31+24]
	038 Move X2, X31
	039 Move X30, [X31+32]
	040 Move X21, [X31+40]
	041 Call String.op_Equality, X0, X1
	042 Return X0
	043 Call 0x1C17F20

Method: System.Int32 GetHashCode()

Disassembly:
	0x03661308 STP X20, X19, [X31 + 0x10]
	0x0366130C ADRP X20, 0xD7F000

ISIL:
	001 Move X1, X31
	002 Call Attribute.GetHashCode, X0
	003 Return X0

Method: System.Void .cctor()

Disassembly:
	0x03661310 LDRB W8, [X20 + 0x6CC]
	0x03661314 MOV X19, X0
	0x03661318 TBNZ X8, 0x0, 0x3661330
	0x0366131C ADRP X0, 0xADB000
	0x03661320 LDR X0, [X0 + 0xEE0]
	0x03661324 BL 0x1C16CF4
	0x03661328 MOVZ W8, 0x1
	0x0366132C STRB W8, [X20 + 0x6CC]
	0x03661330 LDR X19, [X19 + 0x18]
	0x03661334 CBZ X19, 0x3661380
	0x03661338 ADRP X10, 0xADB000
	0x0366133C LDR X8, [X19]
	0x03661340 LDR X10, [X10 + 0xEE0]
	0x03661344 LDRH W9, [X8 + 0x12E]
	0x03661348 LDR X1, [X10]
	0x0366134C CBZ X9, 0x3661370
	0x03661350 LDR X10, [X8 + 0xB0]
	0x03661354 ADD X10, X10, 0x8
	0x03661358 LDUR X11, [X10 - 0x8]
	0x0366135C CMP X11, X1
	0x03661360 B.EQ 0x3661390
	0x03661364 SUBS X9, X9, 0x1
	0x03661368 ADD X10, X10, 0x10
	0x0366136C B.NE 0x3661358

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0xD80000
	005 Move X20, 0xADC000
	006 Move W8, [X19+1725]
	007 Move X20, [X20+3632]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xADC000
	013 Move X0, [X0+3632]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+1725], W8
	017 Move X0, [X20]
	018 Call 0x1C17F10
	019 Move X1, X31
	020 Move X19, X0
	021 Call Attribute..ctor, X0
	022 Move [X19+16], X31
	023 Move X8, [X20]
	024 Move X8, [X8+184]
	025 Move [X8], X19
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Return 

