Type: System.ComponentModel.DisplayNameAttribute

Method: System.Void .ctor()

Disassembly:
	0x03660EC0 MOV X0, X19
	0x03660EC4 MOV X1, X31
	0x03660EC8 BL 0x33CB4DC
	0x03660ECC CBNZ X20, 0x3660ED8
	0x03660ED0 MOV X0, X21
	0x03660ED4 BL 0x1D2C690
	0x03660ED8 MOV X0, X20
	0x03660EDC BL 0x1C16F18
	0x03660EE0 BL 0x1990590
	0x03660EE4 MOVZ W0, 0x1
	0x03660EE8 RET
	0x03660EEC STP X30, X21, [X31 - 0x20]!
	0x03660EF0 STP X20, X19, [X31 + 0x10]
	0x03660EF4 ADRP X21, 0xD80000
	0x03660EF8 ADRP X20, 0xA9A000
	0x03660EFC LDRB W8, [X21 + 0x6C9]
	0x03660F00 LDR X20, [X20 + 0xC10]
	0x03660F04 MOV X19, X0
	0x03660F08 TBNZ X8, 0x0, 0x3660F20
	0x03660F0C ADRP X0, 0xA9A000
	0x03660F10 LDR X0, [X0 + 0xC10]
	0x03660F14 BL 0x1C16CF4
	0x03660F18 MOVZ W8, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xD81000
	006 Move X21, 0xA96000
	007 Move W8, [X20+1718]
	008 Move X21, [X21+632]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xA96000
	015 Move X0, [X0+632]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1718], W8
	019 Move X8, [X21]
	020 Move X0, X19
	021 Move X1, X31
	022 Move X8, [X8+184]
	023 Move X20, [X8]
	024 Call Attribute..ctor, X0
	025 Move [X19+16], X20
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Return 

Method: System.Void .ctor(System.String displayName)

Disassembly:
	0x03660F1C STRB W8, [X21 + 0x6C9]
	0x03660F20 LDR X8, [X19]
	0x03660F24 MOVZ W1, 0x1
	0x03660F28 MOV X0, X19
	0x03660F2C LDP X9, X2, [X8 + 0x1B8]
	0x03660F30 BLR X9
	0x03660F34 LDR X0, [X20]
	0x03660F38 LDR W8, [X0 + 0xE0]
	0x03660F3C CBNZ W8, 0x3660F44
	0x03660F40 BL 0x1C16DFC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X1
	005 Move X1, X31
	006 Move X20, X0
	007 Call Attribute..ctor, X0
	008 Move [X20+16], X19
	009 Move X20, [X31+16]
	010 Move X19, [X31+24]
	011 Move X30, [X31+32]
	012 Return 

Method: System.String get_DisplayName()

Disassembly:
	0x03660F44 MOV X0, X19
	0x03660F48 LDP X20, X19, [X31 + 0x10]

ISIL:
	001 Move X0, [X0+16]
	002 Return X0

Method: System.String get_DisplayNameValue()

Disassembly:
	0x03660F4C MOV X1, X31
	0x03660F50 LDP X30, X21, [X31], #0x20

ISIL:
	001 Move X0, [X0+16]
	002 Return X0

Method: System.Void set_DisplayNameValue(System.String value)

Disassembly:
	0x03660F54 B 0x33B3E9C
	0x03660F58 SUB X31, X31, 0x30

ISIL:
	001 Move [X0+16], X1
	002 Return 

Method: System.Boolean Equals(System.Object obj)

Disassembly:
	0x03660F5C STP X30, X21, [X31 + 0x10]
	0x03660F60 STP X20, X19, [X31 + 0x20]
	0x03660F64 ADRP X21, 0xD80000
	0x03660F68 LDRB W8, [X21 + 0x6CA]
	0x03660F6C MOV W20, W1
	0x03660F70 MOV X19, X0
	0x03660F74 TBNZ X8, 0x0, 0x3660FBC
	0x03660F78 ADRP X0, 0xADB000
	0x03660F7C LDR X0, [X0 + 0x668]
	0x03660F80 BL 0x1C16CF4
	0x03660F84 ADRP X0, 0xABF000
	0x03660F88 LDR X0, [X0 + 0x158]
	0x03660F8C BL 0x1C16CF4
	0x03660F90 ADRP X0, 0xACC000
	0x03660F94 LDR X0, [X0 + 0x5E8]
	0x03660F98 BL 0x1C16CF4
	0x03660F9C ADRP X0, 0xADC000
	0x03660FA0 LDR X0, [X0 + 0xED8]
	0x03660FA4 BL 0x1C16CF4
	0x03660FA8 ADRP X0, 0xADC000
	0x03660FAC LDR X0, [X0 + 0xEE0]
	0x03660FB0 BL 0x1C16CF4
	0x03660FB4 MOVZ W8, 0x1
	0x03660FB8 STRB W8, [X21 + 0x6CA]
	0x03660FBC TBZ X20, 0x0, 0x36611B4
	0x03660FC0 STRB W31, [X31 + 0xC]
	0x03660FC4 ADD X1, X31, 0xC
	0x03660FC8 MOV X0, X19
	0x03660FCC MOV X2, X31
	0x03660FD0 BL 0x33DE64C
	0x03660FD4 LDR X20, [X19 + 0x18]
	0x03660FD8 CBZ X20, 0x366110C
	0x03660FDC ADRP X21, 0xADC000
	0x03660FE0 LDR X8, [X20]
	0x03660FE4 LDR X21, [X21 + 0xEE0]
	0x03660FE8 LDRH W9, [X8 + 0x12E]
	0x03660FEC LDR X1, [X21]
	0x03660FF0 CBZ X9, 0x3661014
	0x03660FF4 LDR X10, [X8 + 0xB0]
	0x03660FF8 ADD X10, X10, 0x8
	0x03660FFC LDUR X11, [X10 - 0x8]
	0x03661000 CMP X11, X1
	0x03661004 B.EQ 0x3661024
	0x03661008 SUBS X9, X9, 0x1
	0x0366100C ADD X10, X10, 0x10
	0x03661010 B.NE 0x3660FFC
	0x03661014 MOV X0, X20
	0x03661018 MOV W2, W31
	0x0366101C BL 0x1C5C788
	0x03661020 B 0x3661030
	0x03661024 LDRSW X9, [X10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xD81000
	006 Move W8, [X21+1719]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xADD000
	014 Move X0, [X0+3616]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+1719], W8
	018 NotImplemented "Instruction CMP not yet implemented."
	019 Compare X20, 0
	020 JumpIfEqual {33}
	021 Move X8, 0xADD000
	022 Move X8, [X8+3616]
	023 Move X9, [X20]
	024 Move X8, [X8]
	025 Move W11, [X9+304]
	026 Move W10, [X8+304]
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Move X9, [X9+200]
	029 Add X9, X9, X10
	030 NotImplemented "Instruction LDUR not yet implemented."
	031 NotImplemented "Instruction CMP not yet implemented."
	032 NotImplemented "Instruction CSEL not yet implemented."
	033 Move W0, W31
	034 Move W0, 1
	035 Move X20, [X31+16]
	036 Move X19, [X31+24]
	037 Move X30, [X31+32]
	038 Move X21, [X31+40]
	039 Return X0
	040 Compare X0, 0
	041 JumpIfEqual {61}
	042 Move X8, [X0]
	043 Move X9, [X8+376]
	044 Move X1, [X8+384]
	045 NotImplemented "Instruction BLR not yet implemented."
	046 Move X8, [X19]
	047 Move X20, X0
	048 Move X0, X19
	049 Move X9, [X8+376]
	050 Move X1, [X8+384]
	051 NotImplemented "Instruction BLR not yet implemented."
	052 Move X1, X0
	053 Move X0, X20
	054 Move X20, [X31+16]
	055 Move X19, [X31+24]
	056 Move X2, X31
	057 Move X30, [X31+32]
	058 Move X21, [X31+40]
	059 Call String.op_Equality, X0, X1
	060 Return X0
	061 Call 0x1C17F20

Method: System.Int32 GetHashCode()

Disassembly:
	0x03661028 ADD X8, X8, X9, 0x4, LSL
	0x0366102C ADD X0, X8, 0x138
	0x03661030 LDP X8, X1, [X0]
	0x03661034 MOV X0, X20
	0x03661038 BLR X8
	0x0366103C CBZ X0, 0x366110C
	0x03661040 LDR X20, [X19 + 0x18]
	0x03661044 CBZ X20, 0x36611CC
	0x03661048 LDR X8, [X20]
	0x0366104C LDR X1, [X21]

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0]
	003 Move X9, [X8+376]
	004 Move X1, [X8+384]
	005 NotImplemented "Instruction BLR not yet implemented."
	006 Compare X0, 0
	007 JumpIfEqual {13}
	008 Move X8, [X0]
	009 Move X2, [X8+344]
	010 Move X1, [X8+352]
	011 Move X30, [X31+16]
	012 CallNoReturn X2
	013 Call 0x1C17F20

Method: System.Void .cctor()

Disassembly:
	0x03661050 LDRH W9, [X8 + 0x12E]
	0x03661054 CBZ X9, 0x3661078
	0x03661058 LDR X10, [X8 + 0xB0]
	0x0366105C ADD X10, X10, 0x8
	0x03661060 LDUR X11, [X10 - 0x8]
	0x03661064 CMP X11, X1
	0x03661068 B.EQ 0x3661088
	0x0366106C SUBS X9, X9, 0x1
	0x03661070 ADD X10, X10, 0x10
	0x03661074 B.NE 0x3661060
	0x03661078 MOV X0, X20
	0x0366107C MOV W2, W31
	0x03661080 BL 0x1C5C788
	0x03661084 B 0x3661094
	0x03661088 LDRSW X9, [X10]
	0x0366108C ADD X8, X8, X9, 0x4, LSL
	0x03661090 ADD X0, X8, 0x138
	0x03661094 LDP X8, X1, [X0]
	0x03661098 MOV X0, X20
	0x0366109C BLR X8
	0x036610A0 MOV X20, X0
	0x036610A4 CBZ X0, 0x36611D0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0xD80000
	005 Move X20, 0xADC000
	006 Move W8, [X19+1720]
	007 Move X20, [X20+3616]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xADC000
	013 Move X0, [X0+3616]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+1720], W8
	017 Move X0, [X20]
	018 Call 0x1C17F10
	019 Move X19, X0
	020 Call DisplayNameAttribute..ctor, X0
	021 Move X8, [X20]
	022 Move X8, [X8+184]
	023 Move [X8], X19
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X30, [X31+32]
	027 Return 

