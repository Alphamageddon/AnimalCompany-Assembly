Type: System.ComponentModel.CategoryAttribute

Method: System.Void .ctor(System.String category)

Disassembly:
	0x036618D8 BL 0x1C16CF4
	0x036618DC ADRP X0, 0xADC000
	0x036618E0 LDR X0, [X0 + 0x48]
	0x036618E4 BL 0x1C16CF4
	0x036618E8 ADRP X0, 0xADC000
	0x036618EC LDR X0, [X0 + 0x50]
	0x036618F0 BL 0x1C16CF4
	0x036618F4 ADRP X0, 0xA93000
	0x036618F8 LDR X0, [X0 + 0x708]
	0x036618FC BL 0x1C16CF4
	0x03661900 ADRP X0, 0xADC000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X1
	005 Move X1, X31
	006 Move X20, X0
	007 Call Attribute..ctor, X0
	008 Move [X20+24], X19
	009 Move [X20+16], W31
	010 Move X20, [X31+16]
	011 Move X19, [X31+24]
	012 Move X30, [X31+32]
	013 Return 

Method: System.String get_Category()

Disassembly:
	0x03661904 LDR X0, [X0 + 0x58]
	0x03661908 BL 0x1C16CF4
	0x0366190C ADRP X0, 0xADC000
	0x03661910 LDR X0, [X0 + 0x60]
	0x03661914 BL 0x1C16CF4
	0x03661918 ADRP X0, 0xADC000
	0x0366191C LDR X0, [X0 + 0x68]
	0x03661920 BL 0x1C16CF4
	0x03661924 ADRP X0, 0xADC000
	0x03661928 LDR X0, [X0 + 0x70]
	0x0366192C BL 0x1C16CF4
	0x03661930 ADRP X0, 0xADC000
	0x03661934 LDR X0, [X0 + 0x78]
	0x03661938 BL 0x1C16CF4
	0x0366193C ADRP X0, 0xADC000
	0x03661940 LDR X0, [X0 + 0x80]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move W8, [X0+16]
	004 Move X19, X0
	005 Compare W8, 0
	006 JumpIfNotEqual {18}
	007 Move X8, [X19]
	008 Move W9, 1
	009 Move [X19+16], W9
	010 Move X1, [X19+24]
	011 Move X9, [X8+376]
	012 Move X2, [X8+384]
	013 Move X0, X19
	014 NotImplemented "Instruction BLR not yet implemented."
	015 Compare X0, 0
	016 JumpIfEqual {18}
	017 Move [X19+24], X0
	018 Move X0, [X19+24]
	019 Move X30, [X31+16]
	020 Move X19, [X31+24]
	021 Return X0

Method: System.Boolean Equals(System.Object obj)

Disassembly:
	0x03661944 BL 0x1C16CF4
	0x03661948 ADRP X0, 0xADC000
	0x0366194C LDR X0, [X0 + 0x88]
	0x03661950 BL 0x1C16CF4
	0x03661954 ADRP X0, 0xADC000
	0x03661958 LDR X0, [X0 + 0x90]
	0x0366195C BL 0x1C16CF4
	0x03661960 ADRP X0, 0xADC000
	0x03661964 LDR X0, [X0 + 0x98]
	0x03661968 BL 0x1C16CF4
	0x0366196C ADRP X0, 0xADC000
	0x03661970 LDR X0, [X0 + 0xA0]
	0x03661974 BL 0x1C16CF4
	0x03661978 ADRP X0, 0xADC000
	0x0366197C LDR X0, [X0 + 0xA8]
	0x03661980 BL 0x1C16CF4
	0x03661984 ADRP X0, 0xADC000
	0x03661988 LDR X0, [X0 + 0xB0]
	0x0366198C BL 0x1C16CF4
	0x03661990 ADRP X0, 0xADC000
	0x03661994 LDR X0, [X0 + 0xB8]
	0x03661998 BL 0x1C16CF4
	0x0366199C ADRP X0, 0xADC000
	0x036619A0 LDR X0, [X0 + 0xC0]
	0x036619A4 BL 0x1C16CF4
	0x036619A8 ADRP X0, 0xADC000
	0x036619AC LDR X0, [X0 + 0xC8]
	0x036619B0 BL 0x1C16CF4
	0x036619B4 ADRP X0, 0xADC000
	0x036619B8 LDR X0, [X0 + 0xD0]
	0x036619BC BL 0x1C16CF4
	0x036619C0 ADRP X0, 0xADC000
	0x036619C4 LDR X0, [X0 + 0xD8]
	0x036619C8 BL 0x1C16CF4
	0x036619CC ADRP X0, 0xADC000
	0x036619D0 LDR X0, [X0 + 0xE0]
	0x036619D4 BL 0x1C16CF4
	0x036619D8 ADRP X0, 0xADC000
	0x036619DC LDR X0, [X0 + 0xE8]
	0x036619E0 BL 0x1C16CF4
	0x036619E4 ADRP X0, 0xADC000
	0x036619E8 LDR X0, [X0 + 0xF0]
	0x036619EC BL 0x1C16CF4
	0x036619F0 ADRP X0, 0xADC000
	0x036619F4 LDR X0, [X0 + 0xF8]
	0x036619F8 BL 0x1C16CF4
	0x036619FC ADRP X0, 0xADC000
	0x03661A00 LDR X0, [X0 + 0x100]
	0x03661A04 BL 0x1C16CF4
	0x03661A08 ADRP X0, 0xADC000
	0x03661A0C LDR X0, [X0 + 0x108]
	0x03661A10 BL 0x1C16CF4
	0x03661A14 ADRP X0, 0xAC6000
	0x03661A18 LDR X0, [X0 + 0x560]
	0x03661A1C BL 0x1C16CF4
	0x03661A20 ADRP X0, 0xADC000
	0x03661A24 LDR X0, [X0 + 0x110]
	0x03661A28 BL 0x1C16CF4
	0x03661A2C ADRP X0, 0xADC000
	0x03661A30 LDR X0, [X0 + 0x118]
	0x03661A34 BL 0x1C16CF4
	0x03661A38 ADRP X0, 0xADC000
	0x03661A3C LDR X0, [X0 + 0x120]
	0x03661A40 BL 0x1C16CF4
	0x03661A44 ADRP X0, 0xADC000
	0x03661A48 LDR X0, [X0 + 0x128]
	0x03661A4C BL 0x1C16CF4
	0x03661A50 ADRP X0, 0xADC000
	0x03661A54 LDR X0, [X0 + 0x130]
	0x03661A58 BL 0x1C16CF4
	0x03661A5C ADRP X0, 0xADC000
	0x03661A60 LDR X0, [X0 + 0x138]
	0x03661A64 BL 0x1C16CF4
	0x03661A68 ADRP X0, 0xADC000
	0x03661A6C LDR X0, [X0 + 0x140]
	0x03661A70 BL 0x1C16CF4
	0x03661A74 ADRP X0, 0xADC000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xD80000
	006 Move W8, [X21+1735]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xADC000
	014 Move X0, [X0+3688]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+1735], W8
	018 NotImplemented "Instruction CMP not yet implemented."
	019 Compare X19, 0
	020 JumpIfEqual {32}
	021 Move X21, 0xADC000
	022 Move X21, [X21+3688]
	023 Move X9, [X19]
	024 Move X8, [X21]
	025 Move W11, [X9+304]
	026 Move W10, [X8+304]
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Move X9, [X9+200]
	029 Add X9, X9, X10
	030 NotImplemented "Instruction LDUR not yet implemented."
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move W0, W31
	033 Move W0, 1
	034 Move X20, [X31+16]
	035 Move X19, [X31+24]
	036 Move X30, [X31+32]
	037 Move X21, [X31+40]
	038 Return X0
	039 Move W8, [X20+16]
	040 Compare W8, 0
	041 JumpIfNotEqual {53}
	042 Move X8, [X20]
	043 Move W9, 1
	044 Move [X20+16], W9
	045 Move X1, [X20+24]
	046 Move X9, [X8+376]
	047 Move X2, [X8+384]
	048 Move X0, X20
	049 NotImplemented "Instruction BLR not yet implemented."
	050 Compare X0, 0
	051 JumpIfEqual {53}
	052 Move [X20+24], X0
	053 Move X8, [X19]
	054 Move X1, [X21]
	055 Move W10, [X8+304]
	056 Move W9, [X1+304]
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Move X10, [X8+200]
	059 Add X9, X10, X9
	060 NotImplemented "Instruction LDUR not yet implemented."
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Move W9, [X19+16]
	063 Move X20, [X20+24]
	064 Compare W9, 0
	065 JumpIfNotEqual {76}
	066 Move W9, 1
	067 Move [X19+16], W9
	068 Move X1, [X19+24]
	069 Move X9, [X8+376]
	070 Move X2, [X8+384]
	071 Move X0, X19
	072 NotImplemented "Instruction BLR not yet implemented."
	073 Compare X0, 0
	074 JumpIfEqual {76}
	075 Move [X19+24], X0
	076 Compare X20, 0
	077 JumpIfEqual {89}
	078 Move X1, [X19+24]
	079 Move X0, X20
	080 Move X20, [X31+16]
	081 Move X19, [X31+24]
	082 Move X2, X31
	083 Move X30, [X31+32]
	084 Move X21, [X31+40]
	085 Call String.Equals, X0, X1
	086 Return X0
	087 Move X0, X19
	088 Call 0x1C181E0
	089 Call 0x1C17F20

Method: System.Int32 GetHashCode()

Disassembly:
	0x03661A78 LDR X0, [X0 + 0x148]
	0x03661A7C BL 0x1C16CF4
	0x03661A80 ADRP X0, 0xADC000
	0x03661A84 LDR X0, [X0 + 0x150]
	0x03661A88 BL 0x1C16CF4
	0x03661A8C MOVZ W8, 0x1
	0x03661A90 STRB W8, [X20 + 0x6D5]
	0x03661A94 CMP W19, 0x78
	0x03661A98 B.LE 0x3661AE4
	0x03661A9C CMP W19, 0x10B
	0x03661AA0 B.LE 0x3661B10
	0x03661AA4 MOVZ W8, 0x1770
	0x03661AA8 CMP W19, W8
	0x03661AAC B.LE 0x3661B60
	0x03661AB0 MOVN W8, 0x2713
	0x03661AB4 ADD W8, W19, W8
	0x03661AB8 CMP W8, 0x6C
	0x03661ABC B.HI 0x3661EF8
	0x03661AC0 ADRP X9, 0xFFFFFFFFFD536000
	0x03661AC4 ADD X9, X9, 0x652

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move W8, [X0+16]
	004 Move X19, X0
	005 Compare W8, 0
	006 JumpIfNotEqual {18}
	007 Move X8, [X19]
	008 Move W9, 1
	009 Move [X19+16], W9
	010 Move X1, [X19+24]
	011 Move X9, [X8+376]
	012 Move X2, [X8+384]
	013 Move X0, X19
	014 NotImplemented "Instruction BLR not yet implemented."
	015 Compare X0, 0
	016 JumpIfEqual {18}
	017 Move [X19+24], X0
	018 Move X0, [X19+24]
	019 Compare X0, 0
	020 JumpIfEqual {27}
	021 Move X8, [X0]
	022 Move X2, [X8+344]
	023 Move X1, [X8+352]
	024 Move X30, [X31+16]
	025 Move X19, [X31+24]
	026 CallNoReturn X2
	027 Call 0x1C17F20

Method: System.String GetLocalizedString(System.String value)

Disassembly:
	0x03661AC8 ADR X10, 0x10
	0x03661ACC LDRH W11, [X9, X8, LSL #1]
	0x03661AD0 ADD X10, X10, X11, 0x2, LSL
	0x03661AD4 BR X10
	0x03661AD8 ADRP X8, 0xADC000
	0x03661ADC LDR X8, [X8 + 0xD8]
	0x03661AE0 B 0x3661C80
	0x03661AE4 CMP W19, 0x21
	0x03661AE8 B.LE 0x3661B34
	0x03661AEC CMP W19, 0x37
	0x03661AF0 B.LE 0x3661B80
	0x03661AF4 CMP W19, 0x57
	0x03661AF8 B.EQ 0x3661BC4
	0x03661AFC CMP W19, 0x78
	0x03661B00 B.NE 0x3661F2C
	0x03661B04 ADRP X8, 0xADC000
	0x03661B08 LDR X8, [X8 + 0x50]
	0x03661B0C B 0x3661C80
	0x03661B10 CMP W19, 0x7F
	0x03661B14 B.LE 0x3661B9C
	0x03661B18 CMP W19, 0xB7
	0x03661B1C B.EQ 0x3661BD0
	0x03661B20 CMP W19, 0x10B
	0x03661B24 B.NE 0x3661F2C
	0x03661B28 ADRP X8, 0xADC000
	0x03661B2C LDR X8, [X8 + 0x98]
	0x03661B30 B 0x3661C80
	0x03661B34 B.HI 0x3661F2C
	0x03661B38 ADRP X9, 0xFFFFFFFFFD536000
	0x03661B3C MOV W8, W19
	0x03661B40 ADD X9, X9, 0x630
	0x03661B44 ADR X10, 0x10
	0x03661B48 LDRB W11, [X9, X8, LSL]
	0x03661B4C ADD X10, X10, X11, 0x2, LSL
	0x03661B50 BR X10
	0x03661B54 ADRP X8, 0xADB000
	0x03661B58 LDR X8, [X8 + 0xF60]
	0x03661B5C B 0x3661C80
	0x03661B60 CMP W19, 0x3E3
	0x03661B64 B.EQ 0x3661BDC
	0x03661B68 MOVZ W8, 0x1770
	0x03661B6C CMP W19, W8
	0x03661B70 B.NE 0x3661F2C
	0x03661B74 ADRP X8, 0xAC6000
	0x03661B78 LDR X8, [X8 + 0x4F0]
	0x03661B7C B 0x3661C80
	0x03661B80 CMP W19, 0x32
	0x03661B84 B.EQ 0x3661BB8
	0x03661B88 CMP W19, 0x37
	0x03661B8C B.NE 0x3661F2C
	0x03661B90 ADRP X8, 0xADB000
	0x03661B94 LDR X8, [X8 + 0xF50]
	0x03661B98 B 0x3661C80
	0x03661B9C CMP W19, 0x7B
	0x03661BA0 B.EQ 0x3661BE8
	0x03661BA4 CMP W19, 0x7F
	0x03661BA8 B.NE 0x3661F2C
	0x03661BAC ADRP X8, 0xADB000
	0x03661BB0 LDR X8, [X8 + 0xFE8]
	0x03661BB4 B 0x3661C80
	0x03661BB8 ADRP X8, 0xADC000
	0x03661BBC LDR X8, [X8 + 0x78]
	0x03661BC0 B 0x3661C80
	0x03661BC4 ADRP X8, 0xAC6000
	0x03661BC8 LDR X8, [X8 + 0x508]
	0x03661BCC B 0x3661C80
	0x03661BD0 ADRP X8, 0xADC000
	0x03661BD4 LDR X8, [X8 + 0x130]
	0x03661BD8 B 0x3661C80
	0x03661BDC ADRP X8, 0xADB000
	0x03661BE0 LDR X8, [X8 + 0xFD0]
	0x03661BE4 B 0x3661C80
	0x03661BE8 ADRP X8, 0xADC000
	0x03661BEC LDR X8, [X8 + 0xA0]
	0x03661BF0 B 0x3661C80
	0x03661BF4 ADRP X8, 0xAC6000
	0x03661BF8 LDR X8, [X8 + 0x560]
	0x03661BFC B 0x3661C80
	0x03661C00 ADRP X8, 0xADB000
	0x03661C04 LDR X8, [X8 + 0xFB0]
	0x03661C08 B 0x3661C80
	0x03661C0C ADRP X8, 0xADB000
	0x03661C10 LDR X8, [X8 + 0xFD8]
	0x03661C14 B 0x3661C80
	0x03661C18 ADRP X8, 0xADB000
	0x03661C1C LDR X8, [X8 + 0xFB8]
	0x03661C20 B 0x3661C80
	0x03661C24 ADRP X8, 0xADC000
	0x03661C28 LDR X8, [X8 + 0xF0]
	0x03661C2C B 0x3661C80
	0x03661C30 ADRP X8, 0xADC000
	0x03661C34 LDR X8, [X8 + 0x18]
	0x03661C38 B 0x3661C80
	0x03661C3C ADRP X8, 0xADC000
	0x03661C40 LDR X8, [X8 + 0x70]
	0x03661C44 B 0x3661C80
	0x03661C48 ADRP X8, 0xADC000
	0x03661C4C LDR X8, [X8 + 0x108]
	0x03661C50 B 0x3661C80
	0x03661C54 ADRP X8, 0xADC000
	0x03661C58 LDR X8, [X8 + 0xF8]
	0x03661C5C B 0x3661C80
	0x03661C60 ADRP X8, 0xADB000
	0x03661C64 LDR X8, [X8 + 0xF28]
	0x03661C68 B 0x3661C80
	0x03661C6C ADRP X8, 0xADC000
	0x03661C70 LDR X8, [X8 + 0x150]
	0x03661C74 B 0x3661C80
	0x03661C78 ADRP X8, 0xADC000
	0x03661C7C LDR X8, [X8 + 0x138]
	0x03661C80 LDR X0, [X8]
	0x03661C84 B 0x3661F60
	0x03661C88 ADRP X8, 0xADC000
	0x03661C8C LDR X8, [X8 + 0x120]
	0x03661C90 B 0x3661C80
	0x03661C94 ADRP X8, 0xADC000
	0x03661C98 LDR X8, [X8 + 0xD0]
	0x03661C9C B 0x3661C80
	0x03661CA0 ADRP X8, 0xADB000
	0x03661CA4 LDR X8, [X8 + 0xF68]
	0x03661CA8 B 0x3661C80
	0x03661CAC ADRP X8, 0xADC000
	0x03661CB0 LDR X8, [X8 + 0xA8]
	0x03661CB4 B 0x3661C80
	0x03661CB8 ADRP X8, 0xADC000
	0x03661CBC LDR X8, [X8 + 0xC0]
	0x03661CC0 B 0x3661C80
	0x03661CC4 ADRP X8, 0xADC000
	0x03661CC8 LDR X8, [X8 + 0x148]
	0x03661CCC B 0x3661C80
	0x03661CD0 ADRP X8, 0xADC000
	0x03661CD4 LDR X8, [X8 + 0x88]
	0x03661CD8 B 0x3661C80
	0x03661CDC ADRP X8, 0xADB000
	0x03661CE0 LDR X8, [X8 + 0xF38]
	0x03661CE4 B 0x3661C80
	0x03661CE8 ADRP X8, 0xADC000
	0x03661CEC LDR X8, [X8 + 0x30]
	0x03661CF0 B 0x3661C80
	0x03661CF4 ADRP X8, 0xADB000
	0x03661CF8 LDR X8, [X8 + 0xFA8]
	0x03661CFC B 0x3661C80
	0x03661D00 ADRP X8, 0xADB000
	0x03661D04 LDR X8, [X8 + 0xF78]
	0x03661D08 B 0x3661C80
	0x03661D0C ADRP X8, 0xADB000
	0x03661D10 LDR X8, [X8 + 0xF80]
	0x03661D14 B 0x3661C80
	0x03661D18 ADRP X8, 0xADC000
	0x03661D1C LDR X8, [X8 + 0x48]
	0x03661D20 B 0x3661C80
	0x03661D24 ADRP X8, 0xADC000
	0x03661D28 LDR X8, [X8 + 0x20]
	0x03661D2C B 0x3661C80
	0x03661D30 ADRP X8, 0xADC000
	0x03661D34 LDR X8, [X8 + 0x40]
	0x03661D38 B 0x3661C80
	0x03661D3C ADRP X8, 0xADC000
	0x03661D40 LDR X8, [X8 + 0x90]
	0x03661D44 B 0x3661C80
	0x03661D48 ADRP X8, 0xADC000
	0x03661D4C LDR X8, [X8 + 0xE8]
	0x03661D50 B 0x3661C80
	0x03661D54 ADRP X8, 0xADB000
	0x03661D58 LDR X8, [X8 + 0xF90]
	0x03661D5C B 0x3661C80
	0x03661D60 ADRP X8, 0xADB000
	0x03661D64 LDR X8, [X8 + 0xF40]
	0x03661D68 B 0x3661C80
	0x03661D6C ADRP X8, 0xADB000
	0x03661D70 LDR X8, [X8 + 0xFF8]
	0x03661D74 B 0x3661C80
	0x03661D78 ADRP X8, 0xADB000
	0x03661D7C LDR X8, [X8 + 0xFA0]
	0x03661D80 B 0x3661C80
	0x03661D84 ADRP X8, 0xADB000
	0x03661D88 LDR X8, [X8 + 0xFF0]
	0x03661D8C B 0x3661C80
	0x03661D90 ADRP X8, 0xADC000
	0x03661D94 LDR X8, [X8 + 0x128]
	0x03661D98 B 0x3661C80
	0x03661D9C ADRP X8, 0xADC000
	0x03661DA0 LDR X8, [X8 + 0x8]
	0x03661DA4 B 0x3661C80
	0x03661DA8 ADRP X8, 0xADB000
	0x03661DAC LDR X8, [X8 + 0xFC8]
	0x03661DB0 B 0x3661C80
	0x03661DB4 ADRP X8, 0xADC000
	0x03661DB8 LDR X8, [X8 + 0x28]
	0x03661DBC B 0x3661C80
	0x03661DC0 ADRP X8, 0xADC000
	0x03661DC4 LDR X8, [X8 + 0x58]
	0x03661DC8 B 0x3661C80
	0x03661DCC ADRP X8, 0xADC000
	0x03661DD0 LDR X8, [X8 + 0x100]
	0x03661DD4 B 0x3661C80
	0x03661DD8 ADRP X8, 0xA93000
	0x03661DDC LDR X8, [X8 + 0x708]
	0x03661DE0 B 0x3661C80
	0x03661DE4 ADRP X8, 0xADB000
	0x03661DE8 LDR X8, [X8 + 0xF98]
	0x03661DEC B 0x3661C80
	0x03661DF0 ADRP X8, 0xADC000
	0x03661DF4 LDR X8, [X8 + 0xB0]
	0x03661DF8 B 0x3661C80
	0x03661DFC ADRP X8, 0xADC000
	0x03661E00 LDR X8, [X8 + 0x80]
	0x03661E04 B 0x3661C80
	0x03661E08 ADRP X8, 0xADC000
	0x03661E0C LDR X8, [X8 + 0xB8]
	0x03661E10 B 0x3661C80
	0x03661E14 ADRP X8, 0xADB000
	0x03661E18 LDR X8, [X8 + 0xF20]
	0x03661E1C B 0x3661C80
	0x03661E20 ADRP X8, 0xADC000
	0x03661E24 LDR X8, [X8 + 0x118]
	0x03661E28 B 0x3661C80
	0x03661E2C ADRP X8, 0xADB000
	0x03661E30 LDR X8, [X8 + 0xF30]
	0x03661E34 B 0x3661C80
	0x03661E38 ADRP X8, 0xADB000
	0x03661E3C LDR X8, [X8 + 0xEF0]
	0x03661E40 B 0x3661C80

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xD80000
	005 Move W8, [X20+1736]
	006 Move X19, X1
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {64}
	011 Move X0, 0xADC000
	012 Move X0, [X0+3696]
	013 Call 0x1C17CF4
	014 Move X0, 0xADC000
	015 Move X0, [X0+3704]
	016 Call 0x1C17CF4
	017 Move X0, 0xADC000
	018 Move X0, [X0+3712]
	019 Call 0x1C17CF4
	020 Move X0, 0xADC000
	021 Move X0, [X0+3720]
	022 Call 0x1C17CF4
	023 Move X0, 0xADC000
	024 Move X0, [X0+3728]
	025 Call 0x1C17CF4
	026 Move X0, 0xADC000
	027 Move X0, [X0+3736]
	028 Call 0x1C17CF4
	029 Move X0, 0xA97000
	030 Move X0, [X0+1128]
	031 Call 0x1C17CF4
	032 Move X0, 0xADC000
	033 Move X0, [X0+3744]
	034 Call 0x1C17CF4
	035 Move X0, 0xADC000
	036 Move X0, [X0+3752]
	037 Call 0x1C17CF4
	038 Move X0, 0xADC000
	039 Move X0, [X0+3760]
	040 Call 0x1C17CF4
	041 Move X0, 0xADC000
	042 Move X0, [X0+3768]
	043 Call 0x1C17CF4
	044 Move X0, 0xADC000
	045 Move X0, [X0+3776]
	046 Call 0x1C17CF4
	047 Move X0, 0xADC000
	048 Move X0, [X0+3784]
	049 Call 0x1C17CF4
	050 Move X0, 0xABF000
	051 Move X0, [X0+296]
	052 Call 0x1C17CF4
	053 Move X0, 0xABF000
	054 Move X0, [X0+240]
	055 Call 0x1C17CF4
	056 Move X0, 0xADC000
	057 Move X0, [X0+3792]
	058 Call 0x1C17CF4
	059 Move X0, 0xA93000
	060 Move X0, [X0+1992]
	061 Call 0x1C17CF4
	062 Move W8, 1
	063 Move [X20+1736], W8
	064 Move X0, X19
	065 Move X1, X31
	066 Call <PrivateImplementationDetails>.ComputeStringHash, X0
	067 Move W8, 0x6F10
	068 NotImplemented "Instruction MOVK not yet implemented."
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Move W8, 0x9B64
	071 NotImplemented "Instruction MOVK not yet implemented."
	072 NotImplemented "Instruction CMP not yet implemented."
	073 Move W8, 0xA447
	074 NotImplemented "Instruction MOVK not yet implemented."
	075 NotImplemented "Instruction CMP not yet implemented."
	076 Move W8, 0xA91F
	077 NotImplemented "Instruction MOVK not yet implemented."
	078 NotImplemented "Instruction CMP not yet implemented."
	079 Move W8, 0xA447
	080 NotImplemented "Instruction MOVK not yet implemented."
	081 NotImplemented "Instruction CMP not yet implemented."
	082 Move X20, 0xADC000
	083 Move X20, [X20+3776]
	084 Move W8, 0xB1B3
	085 NotImplemented "Instruction MOVK not yet implemented."
	086 NotImplemented "Instruction CMP not yet implemented."
	087 Move W8, 0x37A1
	088 NotImplemented "Instruction MOVK not yet implemented."
	089 NotImplemented "Instruction CMP not yet implemented."
	090 Move W8, 0xE0E7
	091 NotImplemented "Instruction MOVK not yet implemented."
	092 NotImplemented "Instruction CMP not yet implemented."
	093 Move X8, 0xADC000
	094 Move X8, [X8+3784]
	095 Move X0, X19
	096 Move X2, X31
	097 Move X1, [X8]
	098 Call String.op_Equality, X0, X1
	099 Move X8, 0xADC000
	100 Move X8, [X8+3728]
	101 Move X8, [X8]
	102 Move W8, 0x2D5E
	103 NotImplemented "Instruction MOVK not yet implemented."
	104 NotImplemented "Instruction CMP not yet implemented."
	105 Move W8, 0x8B9F
	106 NotImplemented "Instruction MOVK not yet implemented."
	107 NotImplemented "Instruction CMP not yet implemented."
	108 Move W8, 0x2D5E
	109 NotImplemented "Instruction MOVK not yet implemented."
	110 NotImplemented "Instruction CMP not yet implemented."
	111 Move X20, 0xADC000
	112 Move X20, [X20+3712]
	113 Move W8, 0x342A
	114 NotImplemented "Instruction MOVK not yet implemented."
	115 NotImplemented "Instruction CMP not yet implemented."
	116 Move W8, 0xC90C
	117 NotImplemented "Instruction MOVK not yet implemented."
	118 NotImplemented "Instruction CMP not yet implemented."
	119 Move W8, 0x342A
	120 NotImplemented "Instruction MOVK not yet implemented."
	121 NotImplemented "Instruction CMP not yet implemented."
	122 Move X20, 0xA97000
	123 Move X20, [X20+1128]
	124 Move W8, 0x8E11
	125 NotImplemented "Instruction MOVK not yet implemented."
	126 NotImplemented "Instruction CMP not yet implemented."
	127 Move W8, 0x9B64
	128 NotImplemented "Instruction MOVK not yet implemented."
	129 NotImplemented "Instruction CMP not yet implemented."
	130 Move X20, 0xADC000
	131 Move X20, [X20+3720]
	132 Move W8, 0x5EB0
	133 NotImplemented "Instruction MOVK not yet implemented."
	134 NotImplemented "Instruction CMP not yet implemented."
	135 Move W8, 0xB1B3
	136 NotImplemented "Instruction MOVK not yet implemented."
	137 NotImplemented "Instruction CMP not yet implemented."
	138 Move X20, 0xADC000
	139 Move X20, [X20+3752]
	140 Move W8, 0x79C5
	141 NotImplemented "Instruction MOVK not yet implemented."
	142 NotImplemented "Instruction CMP not yet implemented."
	143 Move W8, 0x6F10
	144 NotImplemented "Instruction MOVK not yet implemented."
	145 NotImplemented "Instruction CMP not yet implemented."
	146 Move X20, 0xADC000
	147 Move X20, [X20+3768]
	148 Move W8, 751
	149 NotImplemented "Instruction MOVK not yet implemented."
	150 NotImplemented "Instruction CMP not yet implemented."
	151 Move W8, 0x421F
	152 NotImplemented "Instruction MOVK not yet implemented."
	153 NotImplemented "Instruction CMP not yet implemented."
	154 Move X20, 0xADC000
	155 Move X20, [X20+3736]
	156 Move X20, 0xA93000
	157 Move X20, [X20+1992]
	158 Move X0, X19
	159 Move X2, X31
	160 Move X1, [X20]
	161 Call String.op_Equality, X0, X1
	162 Move X8, [X20]
	163 And W31, W0, 1
	164 NotImplemented "Instruction CSEL not yet implemented."
	165 Move X20, 0xADC000
	166 Move X20, [X20+3760]
	167 Move X20, 0xADC000
	168 Move X20, [X20+3792]
	169 Move X20, 0xABF000
	170 Move X20, [X20+240]
	171 Move X20, 0xADC000
	172 Move X20, [X20+3696]
	173 Move X20, 0xADC000
	174 Move X20, [X20+3704]
	175 Move X20, 0xABF000
	176 Move X20, [X20+296]
	177 Move X20, 0xADC000
	178 Move X20, [X20+3744]
	179 Move X1, [X20]
	180 Move X0, X19
	181 Move X2, X31
	182 Call String.op_Equality, X0, X1
	183 Move X8, [X20]
	184 And W31, W0, 1
	185 NotImplemented "Instruction CSEL not yet implemented."
	186 Move X0, X19
	187 Move X20, [X31+16]
	188 Move X19, [X31+24]
	189 Move X30, [X31+32]
	190 Return X0

