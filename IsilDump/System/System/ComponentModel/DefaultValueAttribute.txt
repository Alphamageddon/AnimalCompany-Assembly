Type: System.ComponentModel.DefaultValueAttribute

Method: System.Void .ctor(System.Boolean value)

Disassembly:
	0x03660458 LDR X0, [X20]
	0x0366045C BL 0x1C16F10
	0x03660460 MOV X1, X31
	0x03660464 MOV X19, X0
	0x03660468 BL 0x33A51F0
	0x0366046C STR X31, [X19 + 0x10]
	0x03660470 LDR X8, [X20]
	0x03660474 LDR X8, [X8 + 0xB8]
	0x03660478 STR X19, [X8]
	0x0366047C LDP X20, X19, [X31 + 0x10]
	0x03660480 LDR X30, [X31], #0x20
	0x03660484 RET
	0x03660488 STR X30, [X31 - 0x20]!
	0x0366048C STP X20, X19, [X31 + 0x10]
	0x03660490 AND W20, W1, 0x1
	0x03660494 MOV X1, X31
	0x03660498 MOV X19, X0
	0x0366049C BL 0x33A51F0
	0x036604A0 STRB W20, [X19 + 0x10]
	0x036604A4 LDP X20, X19, [X31 + 0x10]
	0x036604A8 LDR X30, [X31], #0x20
	0x036604AC RET
	0x036604B0 LDRB W0, [X0 + 0x10]
	0x036604B4 RET
	0x036604B8 STP X30, X21, [X31 - 0x20]!
	0x036604BC STP X20, X19, [X31 + 0x10]
	0x036604C0 ADRP X21, 0xD80000
	0x036604C4 LDRB W8, [X21 + 0x6C0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xD81000
	007 Move X21, 0xA94000
	008 Move W8, [X22+1704]
	009 Move X21, [X21+2904]
	010 Move W20, W1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xA94000
	017 Move X0, [X0+2904]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+1704], W8
	021 Move X0, X19
	022 Move X1, X31
	023 And W20, W20, 1
	024 Call Attribute..ctor, X0
	025 Move X0, [X21]
	026 Add X1, X31, 12
	027 Move [X31+12], W20
	028 Call 0x1C17E04
	029 Move [X19+16], X0
	030 Move X20, [X31+32]
	031 Move X19, [X31+40]
	032 Move X22, [X31+16]
	033 Move X21, [X31+24]
	034 Move X30, [X31+48]
	035 Return 

Method: System.Void .ctor(System.String value)

Disassembly:
	0x036604C8 MOV X20, X1
	0x036604CC MOV X19, X0
	0x036604D0 TBNZ X8, 0x0, 0x36604E8
	0x036604D4 ADRP X0, 0xADC000
	0x036604D8 LDR X0, [X0 + 0xE40]
	0x036604DC BL 0x1C16CF4
	0x036604E0 MOVZ W8, 0x1
	0x036604E4 STRB W8, [X21 + 0x6C0]
	0x036604E8 CMP X19, X20
	0x036604EC B.EQ 0x3660518

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X1
	005 Move X1, X31
	006 Move X20, X0
	007 Call Attribute..ctor, X0
	008 Move [X20+16], X19
	009 Move X20, [X31+16]
	010 Move X19, [X31+24]
	011 Move X30, [X31+32]
	012 Return 

Method: System.Object get_Value()

Disassembly:
	0x036604F0 CBZ X20, 0x3660510
	0x036604F4 ADRP X8, 0xADC000

ISIL:
	001 Move X0, [X0+16]
	002 Return X0

Method: System.Boolean Equals(System.Object obj)

Disassembly:
	0x036604F8 LDR X8, [X8 + 0xE40]
	0x036604FC LDR X9, [X20]
	0x03660500 LDR X8, [X8]
	0x03660504 CMP X9, X8
	0x03660508 CSEL X8, X20, X31, EQ
	0x0366050C B.EQ 0x3660520
	0x03660510 MOV W0, W31
	0x03660514 B 0x3660540
	0x03660518 MOVZ W0, 0x1
	0x0366051C B 0x3660540
	0x03660520 CBZ X8, 0x366054C
	0x03660524 LDRB W8, [X8 + 0x10]
	0x03660528 LDRB W9, [X19 + 0x10]
	0x0366052C CMP W8, 0x0
	0x03660530 CSET W8, EQ
	0x03660534 CMP W9, 0x0
	0x03660538 CSET W9, NE
	0x0366053C EOR W0, W8, W9, 0x0
	0x03660540 LDP X20, X19, [X31 + 0x10]
	0x03660544 LDP X30, X21, [X31], #0x20
	0x03660548 RET
	0x0366054C BL 0x1C16F20
	0x03660550 STR X30, [X31 - 0x30]!
	0x03660554 STP X22, X21, [X31 + 0x10]
	0x03660558 STP X20, X19, [X31 + 0x20]
	0x0366055C ADRP X22, 0xD80000
	0x03660560 ADRP X20, 0xADC000
	0x03660564 ADRP X21, 0xA93000
	0x03660568 LDRB W8, [X22 + 0x6C1]
	0x0366056C LDR X20, [X20 + 0xE48]
	0x03660570 LDR X21, [X21 + 0x6C0]
	0x03660574 MOV X19, X0
	0x03660578 TBNZ X8, 0x0, 0x366059C
	0x0366057C ADRP X0, 0xADC000
	0x03660580 LDR X0, [X0 + 0xE48]
	0x03660584 BL 0x1C16CF4
	0x03660588 ADRP X0, 0xA93000
	0x0366058C LDR X0, [X0 + 0x6C0]
	0x03660590 BL 0x1C16CF4
	0x03660594 MOVZ W8, 0x1
	0x03660598 STRB W8, [X22 + 0x6C1]
	0x0366059C LDR X0, [X21]
	0x036605A0 LDR X20, [X20]
	0x036605A4 LDR W8, [X0 + 0xE0]
	0x036605A8 CBNZ W8, 0x36605B0
	0x036605AC BL 0x1C16DFC
	0x036605B0 MOV X0, X20
	0x036605B4 MOV X1, X31
	0x036605B8 BL 0x338C698
	0x036605BC CBZ X0, 0x36605E8
	0x036605C0 LDR X8, [X0]
	0x036605C4 LDP X9, X1, [X8 + 0x158]
	0x036605C8 BLR X9
	0x036605CC LDRB W8, [X19 + 0x10]
	0x036605D0 LDP X20, X19, [X31 + 0x20]
	0x036605D4 LDP X22, X21, [X31 + 0x10]
	0x036605D8 SBFM W8, W8, 0x0, 0x0
	0x036605DC EOR W0, W0, W8, 0x0
	0x036605E0 LDR X30, [X31], #0x30
	0x036605E4 RET
	0x036605E8 BL 0x1C16F20
	0x036605EC STR X30, [X31 - 0x20]!
	0x036605F0 STP X20, X19, [X31 + 0x10]
	0x036605F4 ADRP X19, 0xD80000
	0x036605F8 ADRP X20, 0xADC000
	0x036605FC LDRB W8, [X19 + 0x6C2]
	0x03660600 LDR X20, [X20 + 0xE40]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xD81000
	006 Move W8, [X21+1705]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xADD000
	014 Move X0, [X0+3528]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+1705], W8
	018 NotImplemented "Instruction CMP not yet implemented."
	019 Compare X20, 0
	020 JumpIfEqual {33}
	021 Move X8, 0xADD000
	022 Move X8, [X8+3528]
	023 Move X9, [X20]
	024 Move X8, [X8]
	025 Move W11, [X9+304]
	026 Move W10, [X8+304]
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Move X9, [X9+200]
	029 Add X9, X9, X10
	030 NotImplemented "Instruction LDUR not yet implemented."
	031 NotImplemented "Instruction CMP not yet implemented."
	032 NotImplemented "Instruction CSEL not yet implemented."
	033 Move W0, W31
	034 Move W0, 1
	035 Move X20, [X31+16]
	036 Move X19, [X31+24]
	037 Move X30, [X31+32]
	038 Move X21, [X31+40]
	039 Return X0
	040 Move X8, [X19]
	041 Move X0, X19
	042 Move X9, [X8+376]
	043 Move X1, [X8+384]
	044 NotImplemented "Instruction BLR not yet implemented."
	045 Compare X0, 0
	046 JumpIfEqual {72}
	047 Move X8, [X19]
	048 Move X0, X19
	049 Move X9, [X8+376]
	050 Move X1, [X8+384]
	051 NotImplemented "Instruction BLR not yet implemented."
	052 Compare X20, 0
	053 JumpIfEqual {81}
	054 Move X8, [X20]
	055 Move X19, X0
	056 Move X0, X20
	057 Move X9, [X8+376]
	058 Move X1, [X8+384]
	059 NotImplemented "Instruction BLR not yet implemented."
	060 Compare X19, 0
	061 JumpIfEqual {81}
	062 Move X8, [X19]
	063 Move X1, X0
	064 Move X0, X19
	065 Move X20, [X31+16]
	066 Move X19, [X31+24]
	067 Move X3, [X8+312]
	068 Move X2, [X8+320]
	069 Move X30, [X31+32]
	070 Move X21, [X31+40]
	071 CallNoReturn X3
	072 Compare X20, 0
	073 JumpIfEqual {81}
	074 Move X8, [X20]
	075 Move X0, X20
	076 Move X9, [X8+376]
	077 Move X1, [X8+384]
	078 NotImplemented "Instruction BLR not yet implemented."
	079 NotImplemented "Instruction CMP not yet implemented."
	080 NotImplemented "Instruction CSET not yet implemented."
	081 Call 0x1C17F20

Method: System.Int32 GetHashCode()

Disassembly:
	0x03660604 TBNZ X8, 0x0, 0x366061C
	0x03660608 ADRP X0, 0xADC000

ISIL:
	001 Move X1, X31
	002 Call Attribute.GetHashCode, X0
	003 Return X0

