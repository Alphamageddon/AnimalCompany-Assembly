Type: System.ComponentModel.DescriptionAttribute

Method: System.Void .ctor()

Disassembly:
	0x036608D4 RET
	0x036608D8 STR X30, [X31 - 0x20]!
	0x036608DC STP X20, X19, [X31 + 0x10]
	0x036608E0 MOV X19, X1
	0x036608E4 MOV X1, X31
	0x036608E8 MOV X20, X0
	0x036608EC BL 0x33A51F0
	0x036608F0 STR X19, [X20 + 0x18]
	0x036608F4 STRB W31, [X20 + 0x10]
	0x036608F8 LDP X20, X19, [X31 + 0x10]
	0x036608FC LDR X30, [X31], #0x20
	0x03660900 RET
	0x03660904 STP X30, X19, [X31 - 0x10]!
	0x03660908 LDRB W8, [X0 + 0x10]
	0x0366090C MOV X19, X0
	0x03660910 CBNZ W8, 0x3660938
	0x03660914 LDR X8, [X19]
	0x03660918 MOVZ W9, 0x1
	0x0366091C STRB W9, [X19 + 0x10]
	0x03660920 LDR X1, [X19 + 0x18]
	0x03660924 LDP X9, X2, [X8 + 0x178]
	0x03660928 MOV X0, X19
	0x0366092C BLR X9

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xD81000
	006 Move X21, 0xA96000
	007 Move W8, [X20+1710]
	008 Move X21, [X21+632]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xA96000
	015 Move X0, [X0+632]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1710], W8
	019 Move X8, [X21]
	020 Move X0, X19
	021 Move X1, X31
	022 Move X8, [X8+184]
	023 Move X20, [X8]
	024 Call Attribute..ctor, X0
	025 Move [X19+16], X20
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Return 

Method: System.Void .ctor(System.String description)

Disassembly:
	0x03660930 CBZ X0, 0x3660938
	0x03660934 STR X0, [X19 + 0x18]
	0x03660938 LDR X0, [X19 + 0x18]
	0x0366093C LDP X30, X19, [X31], #0x10
	0x03660940 RET
	0x03660944 STP X30, X21, [X31 - 0x20]!
	0x03660948 STP X20, X19, [X31 + 0x10]
	0x0366094C ADRP X21, 0xD80000
	0x03660950 LDRB W8, [X21 + 0x6C7]
	0x03660954 MOV X19, X1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X1
	005 Move X1, X31
	006 Move X20, X0
	007 Call Attribute..ctor, X0
	008 Move [X20+16], X19
	009 Move X20, [X31+16]
	010 Move X19, [X31+24]
	011 Move X30, [X31+32]
	012 Return 

Method: System.String get_Description()

Disassembly:
	0x03660958 MOV X20, X0
	0x0366095C TBNZ X8, 0x0, 0x3660974

ISIL:
	001 Move X0, [X0+16]
	002 Return X0

Method: System.String get_DescriptionValue()

Disassembly:
	0x03660960 ADRP X0, 0xADC000
	0x03660964 LDR X0, [X0 + 0xE68]

ISIL:
	001 Move X0, [X0+16]
	002 Return X0

Method: System.Void set_DescriptionValue(System.String value)

Disassembly:
	0x03660968 BL 0x1C16CF4
	0x0366096C MOVZ W8, 0x1

ISIL:
	001 Move [X0+16], X1
	002 Return 

Method: System.Boolean Equals(System.Object obj)

Disassembly:
	0x03660970 STRB W8, [X21 + 0x6C7]
	0x03660974 CMP X20, X19
	0x03660978 B.EQ 0x36609BC
	0x0366097C CBZ X19, 0x36609B4
	0x03660980 ADRP X21, 0xADC000
	0x03660984 LDR X21, [X21 + 0xE68]
	0x03660988 LDR X9, [X19]
	0x0366098C LDR X8, [X21]
	0x03660990 LDRB W11, [X9 + 0x130]
	0x03660994 LDRB W10, [X8 + 0x130]
	0x03660998 CMP W11, W10
	0x0366099C B.CC 0x36609B4
	0x036609A0 LDR X9, [X9 + 0xC8]
	0x036609A4 ADD X9, X9, X10, 0x3, LSL
	0x036609A8 LDUR X9, [X9 - 0x8]
	0x036609AC CMP X9, X8
	0x036609B0 B.EQ 0x36609CC
	0x036609B4 MOV W0, W31
	0x036609B8 B 0x36609C0
	0x036609BC MOVZ W0, 0x1
	0x036609C0 LDP X20, X19, [X31 + 0x10]
	0x036609C4 LDP X30, X21, [X31], #0x20
	0x036609C8 RET
	0x036609CC LDRB W8, [X20 + 0x10]
	0x036609D0 CBNZ W8, 0x36609F8
	0x036609D4 LDR X8, [X20]
	0x036609D8 MOVZ W9, 0x1
	0x036609DC STRB W9, [X20 + 0x10]
	0x036609E0 LDR X1, [X20 + 0x18]
	0x036609E4 LDP X9, X2, [X8 + 0x178]
	0x036609E8 MOV X0, X20
	0x036609EC BLR X9
	0x036609F0 CBZ X0, 0x36609F8
	0x036609F4 STR X0, [X20 + 0x18]
	0x036609F8 LDR X8, [X19]
	0x036609FC LDR X1, [X21]
	0x03660A00 LDRB W10, [X8 + 0x130]
	0x03660A04 LDRB W9, [X1 + 0x130]
	0x03660A08 CMP W10, W9
	0x03660A0C B.CC 0x3660A6C
	0x03660A10 LDR X10, [X8 + 0xC8]
	0x03660A14 ADD X9, X10, X9, 0x3, LSL
	0x03660A18 LDUR X9, [X9 - 0x8]
	0x03660A1C CMP X9, X1
	0x03660A20 B.NE 0x3660A6C
	0x03660A24 LDRB W9, [X19 + 0x10]
	0x03660A28 LDR X20, [X20 + 0x18]
	0x03660A2C CBNZ W9, 0x3660A50
	0x03660A30 MOVZ W9, 0x1
	0x03660A34 STRB W9, [X19 + 0x10]
	0x03660A38 LDR X1, [X19 + 0x18]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xD81000
	006 Move W8, [X21+1711]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xADC000
	014 Move X0, [X0+1728]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+1711], W8
	018 NotImplemented "Instruction CMP not yet implemented."
	019 Compare X20, 0
	020 JumpIfEqual {33}
	021 Move X8, 0xADC000
	022 Move X8, [X8+1728]
	023 Move X9, [X20]
	024 Move X8, [X8]
	025 Move W11, [X9+304]
	026 Move W10, [X8+304]
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Move X9, [X9+200]
	029 Add X9, X9, X10
	030 NotImplemented "Instruction LDUR not yet implemented."
	031 NotImplemented "Instruction CMP not yet implemented."
	032 NotImplemented "Instruction CSEL not yet implemented."
	033 Move W0, W31
	034 Move W0, 1
	035 Move X20, [X31+16]
	036 Move X19, [X31+24]
	037 Move X30, [X31+32]
	038 Move X21, [X31+40]
	039 Return X0
	040 Compare X0, 0
	041 JumpIfEqual {61}
	042 Move X8, [X0]
	043 Move X9, [X8+376]
	044 Move X1, [X8+384]
	045 NotImplemented "Instruction BLR not yet implemented."
	046 Move X8, [X19]
	047 Move X20, X0
	048 Move X0, X19
	049 Move X9, [X8+376]
	050 Move X1, [X8+384]
	051 NotImplemented "Instruction BLR not yet implemented."
	052 Move X1, X0
	053 Move X0, X20
	054 Move X20, [X31+16]
	055 Move X19, [X31+24]
	056 Move X2, X31
	057 Move X30, [X31+32]
	058 Move X21, [X31+40]
	059 Call String.op_Equality, X0, X1
	060 Return X0
	061 Call 0x1C17F20

Method: System.Int32 GetHashCode()

Disassembly:
	0x03660A3C LDP X9, X2, [X8 + 0x178]
	0x03660A40 MOV X0, X19
	0x03660A44 BLR X9
	0x03660A48 CBZ X0, 0x3660A50
	0x03660A4C STR X0, [X19 + 0x18]
	0x03660A50 CBZ X20, 0x3660A74
	0x03660A54 LDR X1, [X19 + 0x18]
	0x03660A58 MOV X0, X20
	0x03660A5C LDP X20, X19, [X31 + 0x10]
	0x03660A60 MOV X2, X31

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0]
	003 Move X9, [X8+376]
	004 Move X1, [X8+384]
	005 NotImplemented "Instruction BLR not yet implemented."
	006 Compare X0, 0
	007 JumpIfEqual {13}
	008 Move X8, [X0]
	009 Move X2, [X8+344]
	010 Move X1, [X8+352]
	011 Move X30, [X31+16]
	012 CallNoReturn X2
	013 Call 0x1C17F20

Method: System.Void .cctor()

Disassembly:
	0x03660A64 LDP X30, X21, [X31], #0x20
	0x03660A68 B 0x322693C
	0x03660A6C MOV X0, X19
	0x03660A70 BL 0x1C171E0
	0x03660A74 BL 0x1C16F20
	0x03660A78 STP X30, X19, [X31 - 0x10]!
	0x03660A7C LDRB W8, [X0 + 0x10]
	0x03660A80 MOV X19, X0
	0x03660A84 CBNZ W8, 0x3660AAC
	0x03660A88 LDR X8, [X19]
	0x03660A8C MOVZ W9, 0x1
	0x03660A90 STRB W9, [X19 + 0x10]
	0x03660A94 LDR X1, [X19 + 0x18]
	0x03660A98 LDP X9, X2, [X8 + 0x178]
	0x03660A9C MOV X0, X19
	0x03660AA0 BLR X9
	0x03660AA4 CBZ X0, 0x3660AAC
	0x03660AA8 STR X0, [X19 + 0x18]
	0x03660AAC LDR X0, [X19 + 0x18]
	0x03660AB0 CBZ X0, 0x3660AC4
	0x03660AB4 LDR X8, [X0]
	0x03660AB8 LDP X2, X1, [X8 + 0x158]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0xD81000
	005 Move X20, 0xADC000
	006 Move W8, [X19+1712]
	007 Move X20, [X20+1728]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xADC000
	013 Move X0, [X0+1728]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+1712], W8
	017 Move X0, [X20]
	018 Call 0x1C17F10
	019 Move X19, X0
	020 Call DescriptionAttribute..ctor, X0
	021 Move X8, [X20]
	022 Move X8, [X8+184]
	023 Move [X8], X19
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X30, [X31+32]
	027 Return 

