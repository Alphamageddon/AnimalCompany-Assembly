Type: System.ComponentModel.DesignTimeVisibleAttribute

Method: System.Void .ctor(System.Boolean visible)

Disassembly:
	0x03661488 BLR X8
	0x0366148C MOV X20, X0
	0x03661490 MOV X0, X19
	0x03661494 MOV X1, X31
	0x03661498 BL 0x33BE520
	0x0366149C CBZ X0, 0x36614E0
	0x036614A0 LDR X8, [X0]
	0x036614A4 ADRP X19, 0xAC5000
	0x036614A8 ADRP X21, 0xA92000
	0x036614AC LDR X9, [X8 + 0x2E8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 And W20, W1, 1
	005 Move X1, X31
	006 Move X19, X0
	007 Call Attribute..ctor, X0
	008 Move [X19+16], W20
	009 Move X20, [X31+16]
	010 Move X19, [X31+24]
	011 Move X30, [X31+32]
	012 Return 

Method: System.Boolean get_Visible()

Disassembly:
	0x036614B0 LDR X1, [X8 + 0x2F0]
	0x036614B4 LDR X19, [X19 + 0x6D0]

ISIL:
	001 Move W0, [X0+16]
	002 Return X0

Method: System.Boolean Equals(System.Object obj)

Disassembly:
	0x036614B8 LDR X21, [X21 + 0x848]
	0x036614BC BLR X9
	0x036614C0 LDR X1, [X19]
	0x036614C4 LDR X3, [X21]
	0x036614C8 MOV X2, X0
	0x036614CC MOV X0, X20
	0x036614D0 LDP X20, X19, [X31 + 0x10]
	0x036614D4 MOV X4, X31
	0x036614D8 LDP X30, X21, [X31], #0x20
	0x036614DC B 0x32277C4
	0x036614E0 BL 0x1C16F20
	0x036614E4 MOV X1, X31
	0x036614E8 B 0x33C011C
	0x036614EC STP X30, X21, [X31 - 0x20]!
	0x036614F0 STP X20, X19, [X31 + 0x10]
	0x036614F4 ADRP X19, 0xD7F000
	0x036614F8 ADRP X21, 0xA98000
	0x036614FC ADRP X20, 0xADA000
	0x03661500 LDRB W8, [X19 + 0x6CE]
	0x03661504 LDR X21, [X21 + 0xCC0]
	0x03661508 LDR X20, [X20 + 0x668]
	0x0366150C TBNZ X8, 0x0, 0x3661530
	0x03661510 ADRP X0, 0xADA000
	0x03661514 LDR X0, [X0 + 0x668]
	0x03661518 BL 0x1C16CF4
	0x0366151C ADRP X0, 0xA98000
	0x03661520 LDR X0, [X0 + 0xCC0]
	0x03661524 BL 0x1C16CF4
	0x03661528 MOVZ W8, 0x1
	0x0366152C STRB W8, [X19 + 0x6CE]
	0x03661530 LDR X0, [X21]
	0x03661534 BL 0x1C16F10
	0x03661538 MOV X1, X31
	0x0366153C MOV X19, X0
	0x03661540 BL 0x33BDD8C
	0x03661544 LDR X8, [X20]
	0x03661548 LDR X8, [X8 + 0xB8]
	0x0366154C STR X19, [X8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xD80000
	006 Move W8, [X21+1728]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xADC000
	014 Move X0, [X0+3648]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+1728], W8
	018 NotImplemented "Instruction CMP not yet implemented."
	019 Compare X20, 0
	020 JumpIfEqual {27}
	021 Move X8, 0xADC000
	022 Move X8, [X8+3648]
	023 Move X9, [X20]
	024 Move X8, [X8]
	025 NotImplemented "Instruction CMP not yet implemented."
	026 NotImplemented "Instruction CSEL not yet implemented."
	027 Move W0, W31
	028 Move W0, 1
	029 Compare X8, 0
	030 JumpIfEqual {43}
	031 Move W8, [X8+16]
	032 Move W9, [X19+16]
	033 NotImplemented "Instruction CMP not yet implemented."
	034 NotImplemented "Instruction CSET not yet implemented."
	035 NotImplemented "Instruction CMP not yet implemented."
	036 NotImplemented "Instruction CSET not yet implemented."
	037 Xor W0, W8, W9
	038 Move X20, [X31+16]
	039 Move X19, [X31+24]
	040 Move X30, [X31+32]
	041 Move X21, [X31+40]
	042 Return X0
	043 Call 0x1C17F20

Method: System.Int32 GetHashCode()

Disassembly:
	0x03661550 LDP X20, X19, [X31 + 0x10]
	0x03661554 LDP X30, X21, [X31], #0x20
	0x03661558 RET
	0x0366155C STR X30, [X31 - 0x30]!
	0x03661560 STP X22, X21, [X31 + 0x10]
	0x03661564 STP X20, X19, [X31 + 0x20]
	0x03661568 ADRP X21, 0xD7F000
	0x0366156C ADRP X22, 0xADB000
	0x03661570 LDRB W8, [X21 + 0x6CF]
	0x03661574 LDR X22, [X22 + 0xE58]
	0x03661578 MOV X19, X1
	0x0366157C MOV X20, X0
	0x03661580 TBNZ X8, 0x0, 0x3661598
	0x03661584 ADRP X0, 0xADB000
	0x03661588 LDR X0, [X0 + 0xE58]
	0x0366158C BL 0x1C16CF4
	0x03661590 MOVZ W8, 0x1
	0x03661594 STRB W8, [X21 + 0x6CF]
	0x03661598 LDR X0, [X22]
	0x0366159C LDR W8, [X0 + 0xE0]
	0x036615A0 CBNZ W8, 0x36615A8
	0x036615A4 BL 0x1C16DFC
	0x036615A8 MOV X0, X20
	0x036615AC MOV X1, X31
	0x036615B0 BL 0x33BDD8C
	0x036615B4 STR X19, [X20 + 0x10]
	0x036615B8 LDP X20, X19, [X31 + 0x20]
	0x036615BC LDP X22, X21, [X31 + 0x10]
	0x036615C0 LDR X30, [X31], #0x30
	0x036615C4 RET
	0x036615C8 STR X30, [X31 - 0x20]!
	0x036615CC STP X20, X19, [X31 + 0x10]
	0x036615D0 MOV X19, X1
	0x036615D4 MOV X1, X31
	0x036615D8 MOV X20, X0
	0x036615DC BL 0x33BDD8C
	0x036615E0 STR X19, [X20 + 0x18]
	0x036615E4 LDP X20, X19, [X31 + 0x10]
	0x036615E8 LDR X30, [X31], #0x20

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xD80000
	007 Move X20, 0xADC000
	008 Move X21, 0xA93000
	009 Move W8, [X22+1729]
	010 Move X20, [X20+3656]
	011 Move X21, [X21+1728]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0xADC000
	018 Move X0, [X0+3656]
	019 Call 0x1C17CF4
	020 Move X0, 0xA93000
	021 Move X0, [X0+1728]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X22+1729], W8
	025 Move X0, [X21]
	026 Move X20, [X20]
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X0, X20
	032 Move X1, X31
	033 Call Type.GetTypeFromHandle, X0
	034 Compare X0, 0
	035 JumpIfEqual {49}
	036 Move X8, [X0]
	037 Move X9, [X8+344]
	038 Move X1, [X8+352]
	039 NotImplemented "Instruction BLR not yet implemented."
	040 Move W8, [X19+16]
	041 Move X20, [X31+32]
	042 Move X19, [X31+40]
	043 Move X22, [X31+16]
	044 Move X21, [X31+24]
	045 NotImplemented "Instruction SBFM not yet implemented."
	046 Xor W0, W0, W8
	047 Move X30, [X31+48]
	048 Return X0
	049 Call 0x1C17F20

Method: System.Void .cctor()

Disassembly:
	0x036615EC RET
	0x036615F0 STP X30, X21, [X31 - 0x20]!
	0x036615F4 STP X20, X19, [X31 + 0x10]
	0x036615F8 ADRP X20, 0xD7F000
	0x036615FC ADRP X21, 0xABA000
	0x03661600 LDRB W8, [X20 + 0x6D0]
	0x03661604 LDR X21, [X21 + 0x850]
	0x03661608 MOV X19, X0
	0x0366160C TBNZ X8, 0x0, 0x3661624
	0x03661610 ADRP X0, 0xABA000
	0x03661614 LDR X0, [X0 + 0x850]
	0x03661618 BL 0x1C16CF4
	0x0366161C MOVZ W8, 0x1
	0x03661620 STRB W8, [X20 + 0x6D0]
	0x03661624 LDR X0, [X21]
	0x03661628 LDR W8, [X0 + 0xE0]
	0x0366162C CBNZ W8, 0x3661634
	0x03661630 BL 0x1C16DFC
	0x03661634 MOV X0, X31
	0x03661638 BL 0x32C1324
	0x0366163C MOV W20, W0
	0x03661640 BL 0x366169C
	0x03661644 MOV X1, X0
	0x03661648 MOV X0, X19
	0x0366164C MOV X2, X31
	0x03661650 BL 0x32BF54C
	0x03661654 STR W20, [X19 + 0x8C]
	0x03661658 LDP X20, X19, [X31 + 0x10]
	0x0366165C LDP X30, X21, [X31], #0x20
	0x03661660 RET
	0x03661664 STR X30, [X31 - 0x20]!
	0x03661668 STP X20, X19, [X31 + 0x10]
	0x0366166C MOV X20, X0
	0x03661670 MOV W0, W1
	0x03661674 MOV W19, W1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0xD80000
	005 Move X20, 0xADC000
	006 Move W8, [X19+1730]
	007 Move X20, [X20+3648]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xADC000
	013 Move X0, [X0+3648]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+1730], W8
	017 Move X0, [X20]
	018 Call 0x1C17F10
	019 Move X1, X31
	020 Move X19, X0
	021 Call Attribute..ctor, X0
	022 Move W8, 1
	023 Move [X19+16], W8
	024 Move X8, [X20]
	025 Move X8, [X8+184]
	026 Move [X8], X19
	027 Move X0, [X20]
	028 Call 0x1C17F10
	029 Move X1, X31
	030 Move X19, X0
	031 Call Attribute..ctor, X0
	032 Move [X19+16], W31
	033 Move X8, [X20]
	034 Move X8, [X8+184]
	035 Move X9, [X8]
	036 Move [X8+8], X19
	037 Move [X8+16], X9
	038 Move X20, [X31+16]
	039 Move X19, [X31+24]
	040 Move X30, [X31+32]
	041 Return 

