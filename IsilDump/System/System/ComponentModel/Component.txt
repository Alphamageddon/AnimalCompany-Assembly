Type: System.ComponentModel.Component

Method: System.Void Finalize()

Disassembly:
	0x03661E44 ADRP X8, 0xADB000
	0x03661E48 LDR X8, [X8 + 0xF10]
	0x03661E4C B 0x3661C80
	0x03661E50 ADRP X8, 0xADB000
	0x03661E54 LDR X8, [X8 + 0xF00]
	0x03661E58 B 0x3661C80
	0x03661E5C ADRP X8, 0xADB000
	0x03661E60 LDR X8, [X8 + 0xFE0]
	0x03661E64 B 0x3661C80
	0x03661E68 ADRP X8, 0xADB000
	0x03661E6C LDR X8, [X8 + 0xF58]
	0x03661E70 B 0x3661C80
	0x03661E74 ADRP X8, 0xADB000
	0x03661E78 LDR X8, [X8 + 0xF18]
	0x03661E7C B 0x3661C80
	0x03661E80 ADRP X8, 0xADB000
	0x03661E84 LDR X8, [X8 + 0xF88]
	0x03661E88 B 0x3661C80
	0x03661E8C ADRP X8, 0xADB000
	0x03661E90 LDR X8, [X8 + 0xF70]
	0x03661E94 B 0x3661C80
	0x03661E98 ADRP X8, 0xADB000
	0x03661E9C LDR X8, [X8 + 0xF48]
	0x03661EA0 B 0x3661C80
	0x03661EA4 ADRP X8, 0xADC000
	0x03661EA8 LDR X8, [X8 + 0x68]
	0x03661EAC B 0x3661C80
	0x03661EB0 ADRP X8, 0xADC000
	0x03661EB4 LDR X8, [X8 + 0x110]
	0x03661EB8 B 0x3661C80
	0x03661EBC ADRP X8, 0xADC000
	0x03661EC0 LDR X8, [X8]
	0x03661EC4 B 0x3661C80
	0x03661EC8 ADRP X8, 0xADB000
	0x03661ECC LDR X8, [X8 + 0xF08]
	0x03661ED0 B 0x3661C80
	0x03661ED4 ADRP X8, 0xADC000
	0x03661ED8 LDR X8, [X8 + 0xC8]
	0x03661EDC B 0x3661C80
	0x03661EE0 ADRP X8, 0xADC000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X0]
	006 Move X19, X0
	007 Move X9, [X8+440]
	008 Move X2, [X8+448]
	009 Move W1, W31
	010 NotImplemented "Instruction BLR not yet implemented."
	011 Move X0, X19
	012 Move X20, [X31+16]
	013 Move X19, [X31+24]
	014 Move X1, X31
	015 Move X30, [X31+32]
	016 Move X21, [X31+40]
	017 Call Object.Finalize, X0
	018 Return 
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Move X21, X0
	021 Move X0, X21
	022 Call 0x3EB2AD0
	023 Move X20, [X0]
	024 Call 0x3EB2AE0
	025 Move X0, X19
	026 Move X1, X31
	027 Call Object.Finalize, X0
	028 Compare X20, 0
	029 JumpIfNotEqual {36}
	030 Move X20, [X31+16]
	031 Move X19, [X31+24]
	032 Move X30, [X31+32]
	033 Move X21, [X31+40]
	034 Return 
	035 Move X20, X31
	036 Move X0, X20
	037 Call 0x1C17F18
	038 Move X21, X0
	039 Move X0, X19
	040 Move X1, X31
	041 Call Object.Finalize, X0
	042 Compare X20, 0
	043 JumpIfNotEqual {46}
	044 Move X0, X21
	045 Call 0x1D2D690
	046 Move X0, X20
	047 Call 0x1C17F18
	048 Call 0x1991590

Method: System.Boolean get_CanRaiseEvents()

Disassembly:
	0x03661EE4 LDR X8, [X8 + 0x10]
	0x03661EE8 B 0x3661C80

ISIL:
	001 Move W0, 1
	002 Return X0

Method: System.Boolean get_CanRaiseEventsInternal()

Disassembly:
	0x03661104 MOV X1, X19
	0x03661108 BLR X8
	0x0366110C LDR X20, [X19 + 0x20]

ISIL:
	001 Move X8, [X0]
	002 Move X2, [X8+424]
	003 Move X1, [X8+432]
	004 CallNoReturn X2

Method: System.Void Dispose()

Disassembly:
	0x03661EEC ADRP X8, 0xADC000
	0x03661EF0 LDR X8, [X8 + 0x38]
	0x03661EF4 B 0x3661C80
	0x03661EF8 MOVN W8, 0x2AF8
	0x03661EFC ADD W8, W19, W8
	0x03661F00 CMP W8, 0x3
	0x03661F04 B.HI 0x3661F2C
	0x03661F08 ADRP X9, 0xFFFFFFFFFD536000
	0x03661F0C ADD X9, X9, 0x72C
	0x03661F10 ADR X10, 0x10
	0x03661F14 LDRB W11, [X9, X8, LSL]
	0x03661F18 ADD X10, X10, X11, 0x2, LSL
	0x03661F1C BR X10
	0x03661F20 ADRP X8, 0xADC000
	0x03661F24 LDR X8, [X8 + 0xE0]
	0x03661F28 B 0x3661C80
	0x03661F2C ADRP X8, 0xA92000
	0x03661F30 LDR X8, [X8 + 0x758]
	0x03661F34 ADD X1, X31, 0xC
	0x03661F38 STR W19, [X31 + 0xC]
	0x03661F3C LDR X0, [X8]
	0x03661F40 BL 0x1C16E04
	0x03661F44 ADRP X8, 0xADC000
	0x03661F48 LDR X8, [X8 + 0x60]
	0x03661F4C MOV X1, X0
	0x03661F50 MOV X2, X31
	0x03661F54 LDR X8, [X8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xD80000
	006 Move X20, 0xA9A000
	007 Move W8, [X21+1737]
	008 Move X20, [X20+3088]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xA9A000
	015 Move X0, [X0+3088]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+1737], W8
	019 Move X8, [X19]
	020 Move W1, 1
	021 Move X0, X19
	022 Move X9, [X8+440]
	023 Move X2, [X8+448]
	024 NotImplemented "Instruction BLR not yet implemented."
	025 Move X0, [X20]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 Move X0, X19
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X1, X31
	034 Move X30, [X31+32]
	035 Move X21, [X31+40]
	036 Call GC.SuppressFinalize, X0
	037 Return 

Method: System.Void Dispose(System.Boolean disposing)

Disassembly:
	0x03661F58 MOV X0, X8
	0x03661F5C BL 0x321EFD0
	0x03661F60 LDP X20, X19, [X31 + 0x10]
	0x03661F64 LDR X30, [X31], #0x20
	0x03661F68 RET
	0x03661F6C ADRP X8, 0xADB000
	0x03661F70 LDR X8, [X8 + 0xEF8]
	0x03661F74 B 0x3661C80
	0x03661F78 ADRP X8, 0xADC000
	0x03661F7C LDR X8, [X8 + 0x140]
	0x03661F80 B 0x3661C80
	0x03661F84 ADRP X8, 0xADB000
	0x03661F88 LDR X8, [X8 + 0xFC0]
	0x03661F8C B 0x3661C80
	0x03661F90 STR X30, [X31 - 0x20]!
	0x03661F94 STP X20, X19, [X31 + 0x10]
	0x03661F98 MOV W19, W1
	0x03661F9C MOV X1, X2
	0x03661FA0 MOV X2, X31
	0x03661FA4 MOV X20, X0
	0x03661FA8 BL 0x32BF54C
	0x03661FAC STR W19, [X20 + 0x8C]
	0x03661FB0 LDP X20, X19, [X31 + 0x10]
	0x03661FB4 LDR X30, [X31], #0x20
	0x03661FB8 RET
	0x03661FBC STR X30, [X31 - 0x30]!
	0x03661FC0 STP X22, X21, [X31 + 0x10]
	0x03661FC4 STP X20, X19, [X31 + 0x20]
	0x03661FC8 ADRP X21, 0xD7F000
	0x03661FCC ADRP X22, 0xABA000
	0x03661FD0 LDRB W8, [X21 + 0x6D1]
	0x03661FD4 LDR X22, [X22 + 0x850]
	0x03661FD8 MOV X20, X1
	0x03661FDC MOV X19, X0
	0x03661FE0 TBNZ X8, 0x0, 0x3661FF8
	0x03661FE4 ADRP X0, 0xABA000
	0x03661FE8 LDR X0, [X0 + 0x850]
	0x03661FEC BL 0x1C16CF4
	0x03661FF0 MOVZ W8, 0x1
	0x03661FF4 STRB W8, [X21 + 0x6D1]
	0x03661FF8 LDR X0, [X22]
	0x03661FFC LDR W8, [X0 + 0xE0]
	0x03662000 CBNZ W8, 0x3662008
	0x03662004 BL 0x1C16DFC
	0x03662008 MOV X0, X31
	0x0366200C BL 0x32C1324
	0x03662010 MOV W21, W0
	0x03662014 MOV X0, X19
	0x03662018 MOV X1, X20
	0x0366201C MOV X2, X31
	0x03662020 BL 0x32BF54C
	0x03662024 STR W21, [X19 + 0x8C]
	0x03662028 LDP X20, X19, [X31 + 0x20]
	0x0366202C LDP X22, X21, [X31 + 0x10]
	0x03662030 LDR X30, [X31], #0x30
	0x03662034 RET
	0x03662038 STP X30, X23, [X31 - 0x30]!
	0x0366203C STP X22, X21, [X31 + 0x10]
	0x03662040 STP X20, X19, [X31 + 0x20]
	0x03662044 ADRP X23, 0xD7E000
	0x03662048 ADRP X22, 0xAB9000
	0x0366204C LDRB W8, [X23 + 0x6D2]
	0x03662050 LDR X22, [X22 + 0x850]
	0x03662054 MOV X20, X2
	0x03662058 MOV X21, X1
	0x0366205C MOV X19, X0
	0x03662060 TBNZ X8, 0x0, 0x3662078
	0x03662064 ADRP X0, 0xAB9000
	0x03662068 LDR X0, [X0 + 0x850]
	0x0366206C BL 0x1C16CF4
	0x03662070 MOVZ W8, 0x1
	0x03662074 STRB W8, [X23 + 0x6D2]
	0x03662078 MOV X0, X19
	0x0366207C MOV X1, X21
	0x03662080 MOV X2, X20
	0x03662084 MOV X3, X31
	0x03662088 BL 0x32BF570
	0x0366208C LDR X0, [X22]
	0x03662090 LDR W8, [X0 + 0xE0]
	0x03662094 CBNZ W8, 0x366209C
	0x03662098 BL 0x1C16DFC
	0x0366209C MOV X0, X31
	0x036620A0 BL 0x32C1324
	0x036620A4 STR W0, [X19 + 0x8C]
	0x036620A8 LDP X20, X19, [X31 + 0x20]
	0x036620AC LDP X22, X21, [X31 + 0x10]
	0x036620B0 LDP X30, X23, [X31], #0x30
	0x036620B4 RET
	0x036620B8 STP X30, X23, [X31 - 0x30]!
	0x036620BC STP X22, X21, [X31 + 0x10]
	0x036620C0 STP X20, X19, [X31 + 0x20]
	0x036620C4 ADRP X23, 0xD7E000
	0x036620C8 LDRB W8, [X23 + 0x6D3]
	0x036620CC MOV X21, X3
	0x036620D0 MOV X22, X2
	0x036620D4 MOV X20, X1
	0x036620D8 MOV X19, X0
	0x036620DC TBNZ X8, 0x0, 0x36620F4
	0x036620E0 ADRP X0, 0xADB000
	0x036620E4 LDR X0, [X0 + 0x158]
	0x036620E8 BL 0x1C16CF4
	0x036620EC MOVZ W8, 0x1
	0x036620F0 STRB W8, [X23 + 0x6D3]
	0x036620F4 MOV X0, X19
	0x036620F8 MOV X1, X20
	0x036620FC MOV X2, X22
	0x03662100 MOV X3, X21
	0x03662104 MOV X4, X31
	0x03662108 BL 0x32BF594
	0x0366210C CBZ X20, 0x366213C
	0x03662110 ADRP X8, 0xADB000
	0x03662114 LDR X8, [X8 + 0x158]
	0x03662118 MOV X0, X20
	0x0366211C MOV X2, X31
	0x03662120 LDR X1, [X8]
	0x03662124 BL 0x32A9B08
	0x03662128 STR W0, [X19 + 0x8C]
	0x0366212C LDP X20, X19, [X31 + 0x20]
	0x03662130 LDP X22, X21, [X31 + 0x10]
	0x03662134 LDP X30, X23, [X31], #0x30
	0x03662138 RET
	0x0366213C BL 0x1C16F20
	0x03662140 LDR W0, [X0 + 0x8C]
	0x03662144 RET
	0x03662148 STP X30, X23, [X31 - 0x30]!
	0x0366214C STP X22, X21, [X31 + 0x10]
	0x03662150 STP X20, X19, [X31 + 0x20]
	0x03662154 ADRP X23, 0xD7E000
	0x03662158 LDRB W8, [X23 + 0x6D4]
	0x0366215C MOV X19, X3
	0x03662160 MOV X20, X2
	0x03662164 MOV X21, X1
	0x03662168 MOV X22, X0
	0x0366216C TBNZ X8, 0x0, 0x3662184
	0x03662170 ADRP X0, 0xADB000
	0x03662174 LDR X0, [X0 + 0x158]
	0x03662178 BL 0x1C16CF4
	0x0366217C MOVZ W8, 0x1
	0x03662180 STRB W8, [X23 + 0x6D4]
	0x03662184 CBZ X21, 0x36621C8
	0x03662188 ADRP X8, 0xADB000
	0x0366218C LDR X8, [X8 + 0x158]
	0x03662190 LDR W2, [X22 + 0x8C]
	0x03662194 MOV X0, X21
	0x03662198 MOV X3, X31
	0x0366219C LDR X1, [X8]
	0x036621A0 BL 0x32A8F28
	0x036621A4 MOV X0, X22
	0x036621A8 MOV X1, X21
	0x036621AC MOV X2, X20
	0x036621B0 MOV X3, X19
	0x036621B4 LDP X20, X19, [X31 + 0x20]
	0x036621B8 LDP X22, X21, [X31 + 0x10]
	0x036621BC MOV X4, X31
	0x036621C0 LDP X30, X23, [X31], #0x30
	0x036621C4 B 0x33B3620
	0x036621C8 ADRP X0, 0xA96000
	0x036621CC LDR X0, [X0 + 0x528]
	0x036621D0 BL 0x1C16D08
	0x036621D4 BL 0x1C16F10
	0x036621D8 MOV X19, X0
	0x036621DC ADRP X0, 0xABB000
	0x036621E0 LDR X0, [X0 + 0x2D8]
	0x036621E4 BL 0x1C16D08
	0x036621E8 MOV X1, X0
	0x036621EC MOV X0, X19
	0x036621F0 MOV X2, X31
	0x036621F4 BL 0x330E100
	0x036621F8 ADRP X0, 0xADB000
	0x036621FC LDR X0, [X0 + 0x160]
	0x03662200 BL 0x1C16D08
	0x03662204 MOV X1, X0
	0x03662208 MOV X0, X19
	0x0366220C BL 0x1C16DEC
	0x03662210 STR X30, [X31 - 0x30]!
	0x03662214 STP X22, X21, [X31 + 0x10]
	0x03662218 STP X20, X19, [X31 + 0x20]
	0x0366221C MOV X20, X1
	0x03662220 MOV X1, X31
	0x03662224 MOV X19, X2
	0x03662228 MOV X21, X0
	0x0366222C AND W22, W3, 0x1
	0x03662230 BL 0x33A51F0
	0x03662234 STP X20, X19, [X21 + 0x18]
	0x03662238 STRB W22, [X21 + 0x10]
	0x0366223C LDP X20, X19, [X31 + 0x20]
	0x03662240 LDP X22, X21, [X31 + 0x10]
	0x03662244 LDR X30, [X31], #0x30
	0x03662248 RET
	0x0366224C MOV X1, X31

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xD80000
	007 Move W8, [X21+1738]
	008 Move W20, W1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {31}
	014 Move X0, 0xADB000
	015 Move X0, [X0+1640]
	016 Call 0x1C17CF4
	017 Move X0, 0xABF000
	018 Move X0, [X0+344]
	019 Call 0x1C17CF4
	020 Move X0, 0xACC000
	021 Move X0, [X0+1512]
	022 Call 0x1C17CF4
	023 Move X0, 0xADC000
	024 Move X0, [X0+3800]
	025 Call 0x1C17CF4
	026 Move X0, 0xADC000
	027 Move X0, [X0+3808]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X21+1738], W8
	031 Move TEMP, X20
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfNotEqual {166}
	035 Move [X31+12], W31
	036 Add X1, X31, 12
	037 Move X0, X19
	038 Move X2, X31
	039 Call Monitor.Enter, X0, X1
	040 Move X20, [X19+24]
	041 Compare X20, 0
	042 JumpIfEqual {119}
	043 Move X21, 0xADC000
	044 Move X8, [X20]
	045 Move X21, [X21+3808]
	046 NotImplemented "Instruction LDRH not yet implemented."
	047 Move X1, [X21]
	048 Compare X9, 0
	049 JumpIfEqual {56}
	050 Move X10, [X8+176]
	051 Add X10, X10, 8
	052 NotImplemented "Instruction LDUR not yet implemented."
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Subtract X9, X9, 1
	055 Add X10, X10, 16
	056 Move X0, X20
	057 Move W2, W31
	058 Call 0x1C5D788
	059 NotImplemented "Instruction LDRSW not yet implemented."
	060 Add X8, X8, X9
	061 Add X0, X8, 312
	062 Move X8, [X0]
	063 Move X1, [X0+8]
	064 Move X0, X20
	065 NotImplemented "Instruction BLR not yet implemented."
	066 Compare X0, 0
	067 JumpIfEqual {119}
	068 Move X20, [X19+24]
	069 Compare X20, 0
	070 JumpIfEqual {174}
	071 Move X8, [X20]
	072 Move X1, [X21]
	073 NotImplemented "Instruction LDRH not yet implemented."
	074 Compare X9, 0
	075 JumpIfEqual {82}
	076 Move X10, [X8+176]
	077 Add X10, X10, 8
	078 NotImplemented "Instruction LDUR not yet implemented."
	079 NotImplemented "Instruction CMP not yet implemented."
	080 Subtract X9, X9, 1
	081 Add X10, X10, 16
	082 Move X0, X20
	083 Move W2, W31
	084 Call 0x1C5D788
	085 NotImplemented "Instruction LDRSW not yet implemented."
	086 Add X8, X8, X9
	087 Add X0, X8, 312
	088 Move X8, [X0]
	089 Move X1, [X0+8]
	090 Move X0, X20
	091 NotImplemented "Instruction BLR not yet implemented."
	092 Move X20, X0
	093 Compare X0, 0
	094 JumpIfEqual {175}
	095 Move X10, 0xADB000
	096 Move X8, [X20]
	097 Move X10, [X10+3800]
	098 NotImplemented "Instruction LDRH not yet implemented."
	099 Move X1, [X10]
	100 Compare X9, 0
	101 JumpIfEqual {108}
	102 Move X10, [X8+176]
	103 Add X10, X10, 8
	104 NotImplemented "Instruction LDUR not yet implemented."
	105 NotImplemented "Instruction CMP not yet implemented."
	106 Subtract X9, X9, 1
	107 Add X10, X10, 16
	108 Move X0, X20
	109 Move W2, W31
	110 Call 0x1C5D788
	111 NotImplemented "Instruction LDRSW not yet implemented."
	112 Add X8, X8, X9
	113 Add X0, X8, 312
	114 Move X8, [X0]
	115 Move X2, [X0+8]
	116 Move X0, X20
	117 Move X1, X19
	118 NotImplemented "Instruction BLR not yet implemented."
	119 Move X20, [X19+32]
	120 Compare X20, 0
	121 JumpIfEqual {158}
	122 Move X21, 0xADA000
	123 Move X21, [X21+1640]
	124 Move X0, [X21]
	125 Move W8, [X0+224]
	126 Compare W8, 0
	127 JumpIfNotEqual {130}
	128 Call 0x1C17DFC
	129 Move X0, [X21]
	130 Move X8, [X0+184]
	131 Move X1, [X8]
	132 Move X0, X20
	133 Call EventHandlerList.get_Item, X0, X1
	134 Move X20, X0
	135 Compare X0, 0
	136 JumpIfEqual {158}
	137 Move X8, 0xACB000
	138 Move X8, [X8+1512]
	139 Move X1, [X8]
	140 Move X8, [X20]
	141 NotImplemented "Instruction CMP not yet implemented."
	142 Move X21, 0xABE000
	143 Move X21, [X21+344]
	144 Move X0, [X21]
	145 Move W8, [X0+224]
	146 Compare W8, 0
	147 JumpIfNotEqual {150}
	148 Call 0x1C17DFC
	149 Move X0, [X21]
	150 Move X8, [X0+184]
	151 Move X0, [X20+64]
	152 Move X9, [X20+24]
	153 Move X3, [X20+40]
	154 Move X2, [X8]
	155 Move X1, X19
	156 NotImplemented "Instruction BLR not yet implemented."
	157 Move X20, X31
	158 Move W8, [X31+12]
	159 Compare W8, 0
	160 JumpIfEqual {164}
	161 Move X0, X19
	162 Move X1, X31
	163 Call Monitor.Exit, X0
	164 Compare X20, 0
	165 JumpIfNotEqual {172}
	166 Move X20, [X31+32]
	167 Move X19, [X31+40]
	168 Move X30, [X31+16]
	169 Move X21, [X31+24]
	170 Add X31, X31, 48
	171 Return 
	172 Move X0, X20
	173 Call 0x1C17F18
	174 Call 0x1C17F20
	175 Call 0x1C17F20
	176 Move X0, X20
	177 Call 0x1C181E0
	178 Move X21, X0
	179 NotImplemented "Instruction CMP not yet implemented."
	180 Move X0, X21
	181 Call 0x3EB2AD0
	182 Move X20, [X0]
	183 Call 0x3EB2AE0
	184 Move X20, X31
	185 Move X21, X0
	186 Move W8, [X31+12]
	187 Compare W8, 0
	188 JumpIfEqual {192}
	189 Move X0, X19
	190 Move X1, X31
	191 Call Monitor.Exit, X0
	192 Compare X20, 0
	193 JumpIfNotEqual {196}
	194 Move X0, X21
	195 Call 0x1D2D690
	196 Move X0, X20
	197 Call 0x1C17F18
	198 Call 0x1991590

Method: System.Object GetService(System.Type service)

Disassembly:
	0x03662250 B 0x33BDD8C
	0x03662254 STR X30, [X31 - 0x20]!
	0x03662258 STP X20, X19, [X31 + 0x10]
	0x0366225C MOV X19, X1
	0x03662260 MOV X1, X31
	0x03662264 MOV X20, X0
	0x03662268 BL 0x33BDD8C
	0x0366226C STR X19, [X20 + 0x20]
	0x03662270 LDP X20, X19, [X31 + 0x10]
	0x03662274 LDR X30, [X31], #0x20
	0x03662278 RET
	0x0366227C STR X30, [X31 - 0x40]!
	0x03662280 STP X24, X23, [X31 + 0x10]
	0x03662284 STP X22, X21, [X31 + 0x20]
	0x03662288 STP X20, X19, [X31 + 0x30]
	0x0366228C ADRP X21, 0xD7E000
	0x03662290 LDRB W8, [X21 + 0x6D6]
	0x03662294 MOV X19, X1
	0x03662298 MOV X20, X0
	0x0366229C TBNZ X8, 0x0, 0x36622B4
	0x036622A0 ADRP X0, 0xABB000
	0x036622A4 LDR X0, [X0 + 0x918]
	0x036622A8 BL 0x1C16CF4
	0x036622AC MOVZ W8, 0x1
	0x036622B0 STRB W8, [X21 + 0x6D6]
	0x036622B4 CBZ X19, 0x3662390
	0x036622B8 LDR X21, [X20 + 0x20]
	0x036622BC LDR X23, [X20 + 0x10]
	0x036622C0 CBZ X21, 0x366236C
	0x036622C4 CBZ X23, 0x3662370
	0x036622C8 ADRP X24, 0xABB000
	0x036622CC LDR X24, [X24 + 0x918]
	0x036622D0 LDR X8, [X21]
	0x036622D4 LDR X22, [X23 + 0x10]
	0x036622D8 LDR X1, [X24]
	0x036622DC LDRH W9, [X8 + 0x12E]
	0x036622E0 CBZ X9, 0x3662304
	0x036622E4 LDR X10, [X8 + 0xB0]
	0x036622E8 ADD X10, X10, 0x8
	0x036622EC LDUR X11, [X10 - 0x8]
	0x036622F0 CMP X11, X1
	0x036622F4 B.EQ 0x3662314
	0x036622F8 SUBS X9, X9, 0x1
	0x036622FC ADD X10, X10, 0x10
	0x03662300 B.NE 0x36622EC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xD7F000
	006 Move W8, [X21+1739]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xADB000
	014 Move X0, [X0+3816]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+1739], W8
	018 Move X20, [X20+24]
	019 Compare X20, 0
	020 JumpIfEqual {37}
	021 Move X10, 0xADB000
	022 Move X8, [X20]
	023 Move X10, [X10+3816]
	024 NotImplemented "Instruction LDRH not yet implemented."
	025 Move X1, [X10]
	026 Compare X9, 0
	027 JumpIfEqual {34}
	028 Move X10, [X8+176]
	029 Add X10, X10, 8
	030 NotImplemented "Instruction LDUR not yet implemented."
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Subtract X9, X9, 1
	033 Add X10, X10, 16
	034 Move X0, X20
	035 Move W2, W31
	036 Call 0x1C5D788
	037 Move X20, [X31+16]
	038 Move X19, [X31+24]
	039 Move X0, X31
	040 Move X30, [X31+32]
	041 Move X21, [X31+40]
	042 Return X0
	043 NotImplemented "Instruction LDRSW not yet implemented."
	044 Add X8, X8, X9
	045 Add X0, X8, 312
	046 Move X3, [X0]
	047 Move X2, [X0+8]
	048 Move X0, X20
	049 Move X1, X19
	050 Move X20, [X31+16]
	051 Move X19, [X31+24]
	052 Move X30, [X31+32]
	053 Move X21, [X31+40]
	054 CallNoReturn X3

Method: System.Boolean get_DesignMode()

Disassembly:
	0x03662304 MOV X0, X21
	0x03662308 MOV W2, W31
	0x0366230C BL 0x1C5C788
	0x03662310 B 0x3662320
	0x03662314 LDRSW X9, [X10]
	0x03662318 ADD X8, X8, X9, 0x4, LSL
	0x0366231C ADD X0, X8, 0x138
	0x03662320 LDP X8, X3, [X0]
	0x03662324 MOV X0, X21
	0x03662328 MOV X1, X22
	0x0366232C MOV X2, X19
	0x03662330 BLR X8
	0x03662334 CBZ W0, 0x3662378
	0x03662338 LDR X23, [X23 + 0x20]
	0x0366233C CBZ X23, 0x3662370
	0x03662340 LDR X21, [X20 + 0x20]
	0x03662344 CBNZ X21, 0x36622D0
	0x03662348 BL 0x1C16F20
	0x0366234C LDR X0, [X23 + 0x10]
	0x03662350 CBZ X0, 0x3662348
	0x03662354 LDR X8, [X0]
	0x03662358 MOV X1, X19
	0x0366235C LDP X9, X2, [X8 + 0x138]
	0x03662360 BLR X9
	0x03662364 TBNZ X0, 0x0, 0x3662378
	0x03662368 LDR X23, [X23 + 0x20]
	0x0366236C CBNZ X23, 0x366234C
	0x03662370 MOV X0, X31
	0x03662374 B 0x366237C
	0x03662378 LDR X0, [X23 + 0x18]
	0x0366237C LDP X20, X19, [X31 + 0x30]
	0x03662380 LDP X22, X21, [X31 + 0x20]
	0x03662384 LDP X24, X23, [X31 + 0x10]
	0x03662388 LDR X30, [X31], #0x40
	0x0366238C RET
	0x03662390 ADRP X0, 0xA96000
	0x03662394 LDR X0, [X0 + 0x528]
	0x03662398 BL 0x1C16D08
	0x0366239C BL 0x1C16F10
	0x036623A0 MOV X19, X0
	0x036623A4 ADRP X0, 0xABB000
	0x036623A8 LDR X0, [X0 + 0x70]
	0x036623AC BL 0x1C16D08
	0x036623B0 MOV X1, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xD7F000
	005 Move W8, [X20+1740]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xADB000
	012 Move X0, [X0+3808]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+1740], W8
	016 Move X19, [X19+24]
	017 Compare X19, 0
	018 JumpIfEqual {35}
	019 Move X10, 0xADB000
	020 Move X8, [X19]
	021 Move X10, [X10+3808]
	022 NotImplemented "Instruction LDRH not yet implemented."
	023 Move X1, [X10]
	024 Compare X9, 0
	025 JumpIfEqual {32}
	026 Move X10, [X8+176]
	027 Add X10, X10, 8
	028 NotImplemented "Instruction LDUR not yet implemented."
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Subtract X9, X9, 1
	031 Add X10, X10, 16
	032 Move W2, 1
	033 Move X0, X19
	034 Call 0x1C5D788
	035 Move X20, [X31+16]
	036 Move X19, [X31+24]
	037 Move W0, W31
	038 Move X30, [X31+32]
	039 Return X0
	040 Move W9, [X10]
	041 Add W9, W9, 1
	042 Add X8, X8, W9
	043 Add X0, X8, 312
	044 Move X2, [X0]
	045 Move X1, [X0+8]
	046 Move X0, X19
	047 Move X20, [X31+16]
	048 Move X19, [X31+24]
	049 Move X30, [X31+32]
	050 CallNoReturn X2

Method: System.String ToString()

Disassembly:
	0x036623B4 MOV X0, X19
	0x036623B8 MOV X2, X31
	0x036623BC BL 0x330E100
	0x036623C0 ADRP X0, 0xADB000
	0x036623C4 LDR X0, [X0 + 0x168]
	0x036623C8 BL 0x1C16D08
	0x036623CC MOV X1, X0
	0x036623D0 MOV X0, X19
	0x036623D4 BL 0x1C16DEC
	0x036623D8 STR X30, [X31 - 0x50]!
	0x036623DC STP X26, X25, [X31 + 0x10]
	0x036623E0 STP X24, X23, [X31 + 0x20]
	0x036623E4 STP X22, X21, [X31 + 0x30]
	0x036623E8 STP X20, X19, [X31 + 0x40]
	0x036623EC ADRP X22, 0xD7E000
	0x036623F0 LDRB W8, [X22 + 0x6D7]
	0x036623F4 MOV X20, X2
	0x036623F8 MOV X21, X1
	0x036623FC MOV X19, X0
	0x03662400 TBNZ X8, 0x0, 0x3662424
	0x03662404 ADRP X0, 0xADB000
	0x03662408 LDR X0, [X0 + 0x170]
	0x0366240C BL 0x1C16CF4
	0x03662410 ADRP X0, 0xABB000
	0x03662414 LDR X0, [X0 + 0x918]
	0x03662418 BL 0x1C16CF4
	0x0366241C MOVZ W8, 0x1
	0x03662420 STRB W8, [X22 + 0x6D7]
	0x03662424 CBZ X21, 0x3662550
	0x03662428 MOV X24, X19
	0x0366242C LDR X8, [X24 + 0x10]!
	0x03662430 LDR W9, [X24 + 0x8]
	0x03662434 ADD W9, W9, 0x1
	0x03662438 STR W9, [X24 + 0x8]
	0x0366243C CBZ X8, 0x36624E8
	0x03662440 ADRP X26, 0xABB000
	0x03662444 LDR X26, [X26 + 0x918]
	0x03662448 LDR X23, [X19 + 0x20]
	0x0366244C LDR X22, [X8 + 0x10]
	0x03662450 MOV X25, X8
	0x03662454 CBZ X23, 0x3662498
	0x03662458 LDR X8, [X23]
	0x0366245C LDR X1, [X26]
	0x03662460 LDRH W9, [X8 + 0x12E]
	0x03662464 CBZ X9, 0x3662488
	0x03662468 LDR X10, [X8 + 0xB0]
	0x0366246C ADD X10, X10, 0x8
	0x03662470 LDUR X11, [X10 - 0x8]
	0x03662474 CMP X11, X1
	0x03662478 B.EQ 0x36624B8
	0x0366247C SUBS X9, X9, 0x1
	0x03662480 ADD X10, X10, 0x10
	0x03662484 B.NE 0x3662470
	0x03662488 MOV X0, X23
	0x0366248C MOV W2, W31
	0x03662490 BL 0x1C5C788
	0x03662494 B 0x36624C4
	0x03662498 CBZ X22, 0x366254C
	0x0366249C LDR X8, [X22]
	0x036624A0 MOV X0, X22
	0x036624A4 MOV X1, X21
	0x036624A8 LDP X9, X2, [X8 + 0x138]
	0x036624AC BLR X9
	0x036624B0 TBZ X0, 0x0, 0x36624DC
	0x036624B4 B 0x3662530
	0x036624B8 LDRSW X9, [X10]
	0x036624BC ADD X8, X8, X9, 0x4, LSL
	0x036624C0 ADD X0, X8, 0x138
	0x036624C4 LDP X8, X3, [X0]
	0x036624C8 MOV X0, X23
	0x036624CC MOV X1, X22
	0x036624D0 MOV X2, X21
	0x036624D4 BLR X8
	0x036624D8 CBZ W0, 0x3662530
	0x036624DC LDR X8, [X25 + 0x20]
	0x036624E0 CBNZ X8, 0x3662448

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xD7F000
	006 Move W8, [X20+1741]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {23}
	012 Move X0, 0xADB000
	013 Move X0, [X0+3808]
	014 Call 0x1C17CF4
	015 Move X0, 0xAC5000
	016 Move X0, [X0+1744]
	017 Call 0x1C17CF4
	018 Move X0, 0xA92000
	019 Move X0, [X0+2120]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X20+1741], W8
	023 Move X20, [X19+24]
	024 Compare X20, 0
	025 JumpIfEqual {42}
	026 Move X10, 0xADB000
	027 Move X8, [X20]
	028 Move X10, [X10+3808]
	029 NotImplemented "Instruction LDRH not yet implemented."
	030 Move X1, [X10]
	031 Compare X9, 0
	032 JumpIfEqual {39}
	033 Move X10, [X8+176]
	034 Add X10, X10, 8
	035 NotImplemented "Instruction LDUR not yet implemented."
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Subtract X9, X9, 1
	038 Add X10, X10, 16
	039 Move W2, 2
	040 Move X0, X20
	041 Call 0x1C5D788
	042 Move X0, X19
	043 Move X1, X31
	044 Call "il2cpp_vm_object_is_inst", X0
	045 Compare X0, 0
	046 JumpIfEqual {88}
	047 Move X8, [X0]
	048 Move X20, [X31+16]
	049 Move X19, [X31+24]
	050 Move X2, [X8+744]
	051 Move X1, [X8+752]
	052 Move X30, [X31+32]
	053 Move X21, [X31+40]
	054 CallNoReturn X2
	055 Move W9, [X10]
	056 Add W9, W9, 2
	057 Add X8, X8, W9
	058 Add X0, X8, 312
	059 Move X8, [X0]
	060 Move X1, [X0+8]
	061 Move X0, X20
	062 NotImplemented "Instruction BLR not yet implemented."
	063 Move X20, X0
	064 Move X0, X19
	065 Move X1, X31
	066 Call "il2cpp_vm_object_is_inst", X0
	067 Compare X0, 0
	068 JumpIfEqual {88}
	069 Move X8, [X0]
	070 Move X19, 0xAC5000
	071 Move X21, 0xA92000
	072 Move X9, [X8+744]
	073 Move X1, [X8+752]
	074 Move X19, [X19+1744]
	075 Move X21, [X21+2120]
	076 NotImplemented "Instruction BLR not yet implemented."
	077 Move X1, [X19]
	078 Move X3, [X21]
	079 Move X2, X0
	080 Move X0, X20
	081 Move X20, [X31+16]
	082 Move X19, [X31+24]
	083 Move X4, X31
	084 Move X30, [X31+32]
	085 Move X21, [X31+40]
	086 Call String.Concat, X0, X1, X2, X3
	087 Return X0
	088 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x036624E4 B 0x36624EC
	0x036624E8 MOV X25, X31

ISIL:
	001 Move X1, X31
	002 Call MarshalByRefObject..ctor, X0
	003 Return 

Method: System.Void .cctor()

Disassembly:
	0x036624EC ADRP X8, 0xADB000
	0x036624F0 LDR X8, [X8 + 0x170]
	0x036624F4 LDR X0, [X8]
	0x036624F8 BL 0x1C16F10
	0x036624FC MOV X1, X31
	0x03662500 MOV X22, X0
	0x03662504 BL 0x33BDD8C
	0x03662508 CBZ X22, 0x366254C
	0x0366250C ADD X8, X25, 0x20
	0x03662510 CMP X25, 0x0
	0x03662514 CSEL X8, X24, X8, EQ
	0x03662518 STP X21, X20, [X22 + 0x10]
	0x0366251C STR X22, [X8]
	0x03662520 LDR W8, [X19 + 0x1C]
	0x03662524 ADD W8, W8, 0x1
	0x03662528 STR W8, [X19 + 0x1C]
	0x0366252C B 0x3662534
	0x03662530 STR X20, [X25 + 0x18]
	0x03662534 LDP X20, X19, [X31 + 0x40]
	0x03662538 LDP X22, X21, [X31 + 0x30]
	0x0366253C LDP X24, X23, [X31 + 0x20]
	0x03662540 LDP X26, X25, [X31 + 0x10]
	0x03662544 LDR X30, [X31], #0x50
	0x03662548 RET
	0x0366254C BL 0x1C16F20
	0x03662550 ADRP X0, 0xA96000
	0x03662554 LDR X0, [X0 + 0x528]
	0x03662558 BL 0x1C16D08

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, 0xD7F000
	006 Move X21, 0xA98000
	007 Move X20, 0xADA000
	008 Move W8, [X19+1742]
	009 Move X21, [X21+3264]
	010 Move X20, [X20+1640]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0xADA000
	016 Move X0, [X0+1640]
	017 Call 0x1C17CF4
	018 Move X0, 0xA98000
	019 Move X0, [X0+3264]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X19+1742], W8
	023 Move X0, [X21]
	024 Call 0x1C17F10
	025 Move X1, X31
	026 Move X19, X0
	027 Call Object..ctor, X0
	028 Move X8, [X20]
	029 Move X8, [X8+184]
	030 Move [X8], X19
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X30, [X31+32]
	034 Move X21, [X31+40]
	035 Return 

