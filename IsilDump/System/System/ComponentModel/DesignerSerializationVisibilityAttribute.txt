Type: System.ComponentModel.DesignerSerializationVisibilityAttribute

Method: System.Void .ctor(System.ComponentModel.DesignerSerializationVisibility visibility)

Disassembly:
	0x03660D04 MOVK W8, 0x2B1D0000
	0x03660D08 CMP W0, W8
	0x03660D0C B.NE 0x3660E34
	0x03660D10 ADRP X20, 0xADC000
	0x03660D14 LDR X20, [X20 + 0xE88]
	0x03660D18 B 0x3660E18
	0x03660D1C MOVZ W8, 0x5EB0
	0x03660D20 MOVK W8, 0xA77A0000
	0x03660D24 CMP W0, W8
	0x03660D28 B.EQ 0x3660DF8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W19, W1
	005 Move X1, X31
	006 Move X20, X0
	007 Call Attribute..ctor, X0
	008 Move [X20+16], W19
	009 Move X20, [X31+16]
	010 Move X19, [X31+24]
	011 Move X30, [X31+32]
	012 Return 

Method: System.ComponentModel.DesignerSerializationVisibility get_Visibility()

Disassembly:
	0x03660D2C MOVZ W8, 0xB1B3
	0x03660D30 MOVK W8, 0xBC570000

ISIL:
	001 Move W0, [X0+16]
	002 Return X0

Method: System.Boolean Equals(System.Object obj)

Disassembly:
	0x03660D34 CMP W0, W8
	0x03660D38 B.NE 0x3660E34
	0x03660D3C ADRP X20, 0xADC000
	0x03660D40 LDR X20, [X20 + 0xEA8]
	0x03660D44 B 0x3660E18
	0x03660D48 MOVZ W8, 0x79C5
	0x03660D4C MOVK W8, 0x3F520000
	0x03660D50 CMP W0, W8
	0x03660D54 B.EQ 0x3660E04
	0x03660D58 MOVZ W8, 0x6F10
	0x03660D5C MOVK W8, 0x69110000
	0x03660D60 CMP W0, W8
	0x03660D64 B.NE 0x3660E34
	0x03660D68 ADRP X20, 0xADC000
	0x03660D6C LDR X20, [X20 + 0xEB8]
	0x03660D70 B 0x3660E18
	0x03660D74 MOVZ W8, 0x2EF
	0x03660D78 MOVK W8, 0xE88D0000
	0x03660D7C CMP W0, W8
	0x03660D80 B.EQ 0x3660E10
	0x03660D84 MOVZ W8, 0x421F
	0x03660D88 MOVK W8, 0xF7880000
	0x03660D8C CMP W0, W8
	0x03660D90 B.NE 0x3660E34
	0x03660D94 ADRP X20, 0xADC000
	0x03660D98 LDR X20, [X20 + 0xE98]
	0x03660D9C B 0x3660E18
	0x03660DA0 ADRP X20, 0xA93000
	0x03660DA4 LDR X20, [X20 + 0x7C8]
	0x03660DA8 MOV X0, X19
	0x03660DAC MOV X2, X31
	0x03660DB0 LDR X1, [X20]
	0x03660DB4 BL 0x321BA08
	0x03660DB8 LDR X8, [X20]
	0x03660DBC ANDS W31, W0, 0x1
	0x03660DC0 CSEL X0, X8, X19, NE
	0x03660DC4 B 0x3660E38
	0x03660DC8 ADRP X20, 0xADC000
	0x03660DCC LDR X20, [X20 + 0xEB0]
	0x03660DD0 B 0x3660E18
	0x03660DD4 ADRP X20, 0xADC000
	0x03660DD8 LDR X20, [X20 + 0xED0]
	0x03660DDC B 0x3660E18
	0x03660DE0 ADRP X20, 0xABF000
	0x03660DE4 LDR X20, [X20 + 0xF0]
	0x03660DE8 B 0x3660E18
	0x03660DEC ADRP X20, 0xADC000
	0x03660DF0 LDR X20, [X20 + 0xE70]
	0x03660DF4 B 0x3660E18
	0x03660DF8 ADRP X20, 0xADC000
	0x03660DFC LDR X20, [X20 + 0xE78]
	0x03660E00 B 0x3660E18
	0x03660E04 ADRP X20, 0xABF000
	0x03660E08 LDR X20, [X20 + 0x128]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xD81000
	007 Move W8, [X21+1716]
	008 Move X20, X1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {28}
	014 Move X0, 0xADD000
	015 Move X0, [X0+3584]
	016 Call 0x1C17CF4
	017 Move X0, 0xADD000
	018 Move X0, [X0+3592]
	019 Call 0x1C17CF4
	020 Move X0, 0xADD000
	021 Move X0, [X0+3600]
	022 Call 0x1C17CF4
	023 Move X0, 0xADD000
	024 Move X0, [X0+3608]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X21+1716], W8
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Compare X20, 0
	030 JumpIfEqual {36}
	031 Move X8, 0xADD000
	032 Move X8, [X8+3584]
	033 Move X9, [X20]
	034 Move X8, [X8]
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move X8, X31
	037 Move W0, 1
	038 Move X8, 0xADD000
	039 Move W1, [X20+16]
	040 Move X8, [X8+3600]
	041 Add X0, X31, 8
	042 Move [X31+8], X31
	043 Move X2, [X8]
	044 Call Nullable`1<Int32Enum>..ctor, X0, X1
	045 Move X8, [X31+8]
	046 Move W9, [X19+16]
	047 Move X10, X8
	048 ShiftRight X10, 32
	049 And X10, X10, 0x7FFFFFFF
	050 And W31, W8, 255
	051 NotImplemented "Instruction CSET not yet implemented."
	052 NotImplemented "Instruction CMP not yet implemented."
	053 NotImplemented "Instruction CSET not yet implemented."
	054 And W0, W8, W9
	055 Move X20, [X31+32]
	056 Move X19, [X31+40]
	057 Move X30, [X31+16]
	058 Move X21, [X31+24]
	059 Add X31, X31, 48
	060 Return X0

Method: System.Int32 GetHashCode()

Disassembly:
	0x03660E0C B 0x3660E18
	0x03660E10 ADRP X20, 0xADC000

ISIL:
	001 Move X1, X31
	002 Call Attribute.GetHashCode, X0
	003 Return X0

Method: System.Void .cctor()

Disassembly:
	0x03660E14 LDR X20, [X20 + 0xEA0]
	0x03660E18 LDR X1, [X20]
	0x03660E1C MOV X0, X19
	0x03660E20 MOV X2, X31
	0x03660E24 BL 0x321BA08
	0x03660E28 LDR X8, [X20]
	0x03660E2C ANDS W31, W0, 0x1
	0x03660E30 CSEL X19, X8, X19, NE
	0x03660E34 MOV X0, X19
	0x03660E38 LDP X20, X19, [X31 + 0x10]
	0x03660E3C LDR X30, [X31], #0x20
	0x03660E40 RET
	0x03660E44 STP X30, X21, [X31 - 0x20]!
	0x03660E48 STP X20, X19, [X31 + 0x10]
	0x03660E4C LDR X8, [X0]
	0x03660E50 MOV X19, X0
	0x03660E54 LDP X9, X2, [X8 + 0x1B8]
	0x03660E58 MOV W1, W31
	0x03660E5C BLR X9
	0x03660E60 MOV X0, X19
	0x03660E64 LDP X20, X19, [X31 + 0x10]
	0x03660E68 MOV X1, X31
	0x03660E6C LDP X30, X21, [X31], #0x20
	0x03660E70 B 0x33CB4DC
	0x03660E74 CMP W1, 0x1
	0x03660E78 MOV X21, X0
	0x03660E7C B.NE 0x3660EAC
	0x03660E80 MOV X0, X21
	0x03660E84 BL 0x3EB1AD0
	0x03660E88 LDR X20, [X0]
	0x03660E8C BL 0x3EB1AE0
	0x03660E90 MOV X0, X19
	0x03660E94 MOV X1, X31
	0x03660E98 BL 0x33CB4DC
	0x03660E9C CBNZ X20, 0x3660EB4
	0x03660EA0 LDP X20, X19, [X31 + 0x10]
	0x03660EA4 LDP X30, X21, [X31], #0x20
	0x03660EA8 RET
	0x03660EAC MOV X20, X31
	0x03660EB0 B 0x3660EC0
	0x03660EB4 MOV X0, X20
	0x03660EB8 BL 0x1C16F18
	0x03660EBC MOV X21, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0xD81000
	005 Move X20, 0xADD000
	006 Move W8, [X19+1717]
	007 Move X20, [X20+3584]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xADD000
	013 Move X0, [X0+3584]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+1717], W8
	017 Move X0, [X20]
	018 Call 0x1C17F10
	019 Move X1, X31
	020 Move X19, X0
	021 Call Attribute..ctor, X0
	022 Move W8, 2
	023 Move [X19+16], W8
	024 Move X8, [X20]
	025 Move X8, [X8+184]
	026 Move [X8], X19
	027 Move X0, [X20]
	028 Call 0x1C17F10
	029 Move X1, X31
	030 Move X19, X0
	031 Call Attribute..ctor, X0
	032 Move [X19+16], W31
	033 Move X0, [X20]
	034 Move X8, [X0+184]
	035 Move [X8+8], X19
	036 Call 0x1C17F10
	037 Move X1, X31
	038 Move X19, X0
	039 Call Attribute..ctor, X0
	040 Move W8, 1
	041 Move [X19+16], W8
	042 Move X8, [X20]
	043 Move X8, [X8+184]
	044 Move [X8+16], X19
	045 Move [X8+24], X19
	046 Move X20, [X31+16]
	047 Move X19, [X31+24]
	048 Move X30, [X31+32]
	049 Return 

