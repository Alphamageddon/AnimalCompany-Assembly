Type: System.UriParser

Method: System.String get_SchemeName()

Disassembly:
	0x0362CE2C BL 0x1C16F18
	0x0362CE30 BL 0x1990590

ISIL:
	001 Move X0, [X0+32]
	002 Return X0

Method: System.Int32 get_DefaultPort()

Disassembly:
	0x0362CE34 LDRB W8, [X0 + 0x12]
	0x0362CE38 UBFM W0, W8, 0x1, 0x1

ISIL:
	001 Move W0, [X0+28]
	002 Return X0

Method: System.UriParser OnNewUri()

Disassembly:
	0x0362CE3C RET

ISIL:
	001 Return X0

Method: System.Void InitializeAndValidate(System.Uri uri, out System.UriFormatException parsingError)

Disassembly:
	0x0362CE40 STP X30, X19, [X31 - 0x10]!
	0x0362CE44 LDR X8, [X0]
	0x0362CE48 MOV X19, X0
	0x0362CE4C LDP X9, X1, [X8 + 0x178]
	0x0362CE50 BLR X9
	0x0362CE54 CMP X0, X19
	0x0362CE58 B.EQ 0x362CE78
	0x0362CE5C CBZ X0, 0x362CE80
	0x0362CE60 LDR X8, [X19 + 0x20]
	0x0362CE64 STR X8, [X0 + 0x20]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Compare X1, 0
	004 JumpIfEqual {13}
	005 Move X0, X1
	006 Move X1, X31
	007 Move X19, X2
	008 Call Uri.ParseMinimal, X0
	009 Move [X19], X0
	010 Move X30, [X31+16]
	011 Move X19, [X31+24]
	012 Return 
	013 Call 0x1C17F20

Method: System.String Resolve(System.Uri baseUri, System.Uri relativeUri, out System.UriFormatException parsingError)

Disassembly:
	0x0362CE68 LDR W8, [X19 + 0x1C]
	0x0362CE6C STR W8, [X0 + 0x1C]
	0x0362CE70 LDR W8, [X19 + 0x10]
	0x0362CE74 STR W8, [X0 + 0x10]
	0x0362CE78 LDP X30, X19, [X31], #0x10
	0x0362CE7C RET
	0x0362CE80 BL 0x1C16F20
	0x0362CE84 LDR X8, [X0]
	0x0362CE88 LDP X4, X3, [X8 + 0x188]
	0x0362CE8C BR X4
	0x0362CE90 LDR X8, [X0]
	0x0362CE94 LDP X5, X4, [X8 + 0x198]
	0x0362CE98 BR X5
	0x0362CE9C LDR X8, [X0]
	0x0362CEA0 LDP X4, X3, [X8 + 0x1A8]
	0x0362CEA4 BR X4
	0x0362CEA8 LDR X8, [X0]
	0x0362CEAC LDP X5, X4, [X8 + 0x1B8]
	0x0362CEB0 BR X5
	0x0362CEB4 LDR X8, [X0]
	0x0362CEB8 LDP X3, X2, [X8 + 0x1C8]
	0x0362CEBC BR X3
	0x0362CEC0 STP X30, X23, [X31 - 0x30]!
	0x0362CEC4 STP X22, X21, [X31 + 0x10]
	0x0362CEC8 STP X20, X19, [X31 + 0x20]
	0x0362CECC ADRP X23, 0xDB4000
	0x0362CED0 LDRB W8, [X23 + 0x4FC]
	0x0362CED4 MOV X19, X3
	0x0362CED8 MOV W21, W2
	0x0362CEDC MOV W20, W1
	0x0362CEE0 MOV X22, X0
	0x0362CEE4 TBNZ X8, 0x0, 0x362CF14
	0x0362CEE8 ADRP X0, 0xAC9000
	0x0362CEEC LDR X0, [X0 + 0xC48]
	0x0362CEF0 BL 0x1C16CF4
	0x0362CEF4 ADRP X0, 0xB0F000
	0x0362CEF8 LDR X0, [X0 + 0x428]
	0x0362CEFC BL 0x1C16CF4
	0x0362CF00 ADRP X0, 0xB0F000
	0x0362CF04 LDR X0, [X0 + 0x640]
	0x0362CF08 BL 0x1C16CF4
	0x0362CF0C MOVZ W8, 0x1
	0x0362CF10 STRB W8, [X23 + 0x4FC]
	0x0362CF14 SUB W23, W21, 0x1
	0x0362CF18 CMP W23, W20
	0x0362CF1C B.LT 0x362CF84
	0x0362CF20 CBZ X22, 0x362D054
	0x0362CF24 MOV X0, X22
	0x0362CF28 MOV W1, W23
	0x0362CF2C MOV X2, X31
	0x0362CF30 BL 0x3222A1C
	0x0362CF34 AND W8, W0, 0xFFFF
	0x0362CF38 CMP W8, 0x41
	0x0362CF3C B.CC 0x362CF5C
	0x0362CF40 MOV X0, X22
	0x0362CF44 MOV W1, W23
	0x0362CF48 MOV X2, X31
	0x0362CF4C BL 0x3222A1C
	0x0362CF50 AND W8, W0, 0xFFFF
	0x0362CF54 CMP W8, 0x5A
	0x0362CF58 B.LS 0x362CFF8
	0x0362CF5C MOV X0, X22
	0x0362CF60 MOV W1, W23
	0x0362CF64 MOV X2, X31
	0x0362CF68 BL 0x3222A1C
	0x0362CF6C AND W8, W0, 0xFFFF
	0x0362CF70 CMP W8, 0x3A
	0x0362CF74 CSEL W21, W23, W21, EQ
	0x0362CF78 SUB W23, W23, 0x1
	0x0362CF7C CMP W23, W20
	0x0362CF80 B.GE 0x362CF24
	0x0362CF84 CBZ X22, 0x362D054
	0x0362CF88 SUB W2, W21, W20
	0x0362CF8C MOV X0, X22
	0x0362CF90 MOV W1, W20
	0x0362CF94 MOV X3, X31
	0x0362CF98 BL 0x3228DE4
	0x0362CF9C MOV X23, X0
	0x0362CFA0 ADRP X20, 0xB0F000
	0x0362CFA4 LDR X20, [X20 + 0x428]
	0x0362CFA8 MOV X0, X23
	0x0362CFAC MOV X2, X31
	0x0362CFB0 LDR X1, [X20]
	0x0362CFB4 BL 0x321BA08
	0x0362CFB8 TBNZ X0, 0x0, 0x362CFD8
	0x0362CFBC ADRP X8, 0xB0F000
	0x0362CFC0 LDR X8, [X8 + 0x640]
	0x0362CFC4 MOV X0, X23
	0x0362CFC8 MOV X2, X31
	0x0362CFCC LDR X1, [X8]
	0x0362CFD0 BL 0x321BA08
	0x0362CFD4 TBZ X0, 0x0, 0x362CFE4
	0x0362CFD8 MOVZ W8, 0x1
	0x0362CFDC STRB W8, [X19]
	0x0362CFE0 LDR X23, [X20]
	0x0362CFE4 LDP X20, X19, [X31 + 0x20]
	0x0362CFE8 LDP X22, X21, [X31 + 0x10]
	0x0362CFEC MOV X0, X23
	0x0362CFF0 LDP X30, X23, [X31], #0x30
	0x0362CFF4 RET
	0x0362CFF8 SUB W2, W21, W20
	0x0362CFFC MOV X0, X22
	0x0362D000 MOV W1, W20
	0x0362D004 MOV X3, X31
	0x0362D008 BL 0x3228DE4
	0x0362D00C ADRP X8, 0xAC8000
	0x0362D010 LDR X8, [X8 + 0xC48]
	0x0362D014 MOV X23, X0
	0x0362D018 LDR X8, [X8]
	0x0362D01C LDR W9, [X8 + 0xE0]
	0x0362D020 CBNZ W9, 0x362D02C
	0x0362D024 MOV X0, X8
	0x0362D028 BL 0x1C16DFC
	0x0362D02C MOV X0, X31
	0x0362D030 BL 0x3338524
	0x0362D034 CBZ X23, 0x362D054
	0x0362D038 MOV X1, X0
	0x0362D03C MOV X0, X23
	0x0362D040 MOV X2, X31

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0xDB5000
	009 Move W8, [X23+1269]
	010 Move X19, X3
	011 Move X20, X2
	012 Move X21, X1
	013 Move X22, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0xACA000
	019 Move X0, [X0+2600]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X23+1269], W8
	023 Move [X31+8], X31
	024 Compare X21, 0
	025 JumpIfEqual {88}
	026 Move X0, X21
	027 Move X1, X31
	028 Call Uri.get_UserDrivenParsing, X0
	029 Move TEMP, X0
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfEqual {89}
	033 Move X0, X21
	034 Move X1, X31
	035 Call Uri.get_IsAbsoluteUri, X0
	036 Move TEMP, X0
	037 And TEMP, TEMP, 1
	038 Compare TEMP, 1
	039 JumpIfNotEqual {121}
	040 Move X22, 0xACA000
	041 Move X22, [X22+2600]
	042 Move [X31+8], X31
	043 Move [X31+4], W31
	044 Move X0, [X22]
	045 Move W8, [X0+224]
	046 Compare W8, 0
	047 JumpIfNotEqual {49}
	048 Call 0x1C17DFC
	049 Add X2, X31, 8
	050 Add X3, X31, 4
	051 Move X0, X21
	052 Move X1, X20
	053 Move X4, X19
	054 Move X5, X31
	055 Call Uri.ResolveHelper, X0, X1, X2, X3, X4
	056 Move X8, [X19]
	057 Move X20, X0
	058 Move X0, X31
	059 Compare X8, 0
	060 JumpIfNotEqual {80}
	061 Move X0, [X22]
	062 Move W8, [X0+224]
	063 Compare W8, 0
	064 JumpIfNotEqual {66}
	065 Call 0x1C17DFC
	066 Move X0, X20
	067 Move X1, X31
	068 Move X2, X31
	069 Call Uri.op_Inequality, X0, X1
	070 Move TEMP, X0
	071 And TEMP, TEMP, 1
	072 Compare TEMP, 1
	073 JumpIfNotEqual {79}
	074 Compare X20, 0
	075 JumpIfEqual {88}
	076 Move X0, X20
	077 Move X1, X31
	078 Call Uri.get_OriginalString, X0
	079 Move X0, [X31+8]
	080 Move X20, [X31+48]
	081 Move X19, [X31+56]
	082 Move X22, [X31+32]
	083 Move X21, [X31+40]
	084 Move X30, [X31+16]
	085 Move X23, [X31+24]
	086 Add X31, X31, 64
	087 Return X0
	088 Call 0x1C17F20
	089 Move X0, 0xAC8000
	090 Move X0, [X0+2512]
	091 Call 0x1C17D08
	092 Move W1, 1
	093 Call 0x1C17D6C
	094 Move X19, X0
	095 Move X0, X22
	096 Move X1, X31
	097 Call "il2cpp_vm_object_is_inst", X0
	098 Move X20, X0
	099 Call 0x19913C0
	100 Move X8, [X20]
	101 Move X0, X20
	102 Move X9, [X8+744]
	103 Move X1, [X8+752]
	104 NotImplemented "Instruction BLR not yet implemented."
	105 Move X20, X0
	106 Move X0, X19
	107 Call 0x19913C0
	108 Move X0, X19
	109 Move X1, X20
	110 Call 0x19990B4
	111 Move X0, X19
	112 Move X1, X31
	113 Move X2, X20
	114 Call 0x1994444
	115 Move X0, 0xB10000
	116 Move X0, [X0+616]
	117 Call 0x1C17D08
	118 Move X1, X19
	119 Move X2, X31
	120 Call SR.GetString, X0, X1
	121 Move X0, 0xB10000
	122 Move X0, [X0+336]
	123 Call 0x1C17D08
	124 Move X1, X31
	125 Call SR.GetString, X0
	126 Move X19, X0
	127 Move X0, 0xAC7000
	128 Move X0, [X0+1456]
	129 Call 0x1C17D08
	130 Call 0x1C17F10
	131 Move X1, X19
	132 Move X2, X31
	133 Move X20, X0
	134 Call InvalidOperationException..ctor, X0, X1
	135 Move X0, 0xB0F000
	136 Move X0, [X0+1448]
	137 Call 0x1C17D08
	138 Move X1, X0
	139 Move X0, X20
	140 Call 0x1C17DEC

Method: System.Boolean IsBaseOf(System.Uri baseUri, System.Uri relativeUri)

Disassembly:
	0x0362D044 BL 0x322B660
	0x0362D048 MOV X23, X0
	0x0362D04C CBNZ X0, 0x362CFA0
	0x0362D050 B 0x362CF84
	0x0362D054 BL 0x1C16F20
	0x0362D058 LDRSW X8, [X2]
	0x0362D05C ADD X10, X0, W1, 0x1, UXTH

ISIL:
	001 Compare X1, 0
	002 JumpIfEqual {8}
	003 Move X0, X1
	004 Move X1, X2
	005 Move X2, X31
	006 Call Uri.IsBaseOfHelper, X0, X1
	007 Return X0
	008 Move [X31-16], X30
	009 Call 0x1C17F20

Method: System.String GetComponents(System.Uri uri, System.UriComponents components, System.UriFormat format)

Disassembly:
	0x0362D060 ADD X8, X0, X8, 0x1, LSL
	0x0362D064 CMP X8, X10
	0x0362D068 MOV X9, X8
	0x0362D06C B.LS 0x362D0C8
	0x0362D070 MOVZ X12, 0x8
	0x0362D074 MOVZ W11, 0x1
	0x0362D078 MOVK X12, 0x84000000
	0x0362D07C MOV X9, X10
	0x0362D080 LDRH W13, [X9]
	0x0362D084 CMP W13, 0x7F
	0x0362D088 B.HI 0x362D0D0
	0x0362D08C CMP W13, 0x2F
	0x0362D090 B.EQ 0x362D0C8
	0x0362D094 CMP W13, 0x5C
	0x0362D098 B.EQ 0x362D0C8
	0x0362D09C TBZ X4, 0x0, 0x362D0B8
	0x0362D0A0 CMP W13, 0x3F
	0x0362D0A4 B.HI 0x362D0B8
	0x0362D0A8 MOV W13, W13
	0x0362D0AC LSLV X13, X11, X13
	0x0362D0B0 ANDS X31, X13, X12, 0x0
	0x0362D0B4 B.NE 0x362D0C8
	0x0362D0B8 ADD X9, X9, 0x2
	0x0362D0BC CMP X8, X9
	0x0362D0C0 B.HI 0x362D080
	0x0362D0C4 MOV X9, X8
	0x0362D0C8 CMP X10, X9
	0x0362D0CC B.NE 0x362D0DC
	0x0362D0D0 MOV W8, W31
	0x0362D0D4 MOV W0, W8
	0x0362D0D8 RET
	0x0362D0DC MOVZ W11, 0x1
	0x0362D0E0 CMP X10, X9
	0x0362D0E4 MOV X12, X10
	0x0362D0E8 B.CS 0x362D108
	0x0362D0EC MOV X12, X10
	0x0362D0F0 LDRH W8, [X12]
	0x0362D0F4 CMP W8, 0x2E
	0x0362D0F8 B.EQ 0x362D108
	0x0362D0FC ADD X12, X12, 0x2
	0x0362D100 CMP X9, X12
	0x0362D104 B.HI 0x362D0F0
	0x0362D108 CMP X10, X12
	0x0362D10C MOV W8, W31
	0x0362D110 B.EQ 0x362D0D4
	0x0362D114 SUB X13, X12, X10
	0x0362D118 CMP X13, 0x7F
	0x0362D11C B.GT 0x362D0D4
	0x0362D120 MOV X8, X10
	0x0362D124 LDRH W13, [X8], #0x2
	0x0362D128 SUB W14, W13, 0x61
	0x0362D12C CMP W14, 0x1A
	0x0362D130 B.CC 0x362D154
	0x0362D134 SUB W14, W13, 0x30
	0x0362D138 AND W14, W14, 0xFFFF
	0x0362D13C CMP W14, 0xA
	0x0362D140 B.CC 0x362D154
	0x0362D144 SUB W13, W13, 0x41
	0x0362D148 CMP W13, 0x19
	0x0362D14C B.HI 0x362D0D0
	0x0362D150 STRB W11, [X3]
	0x0362D154 CMP X8, X12
	0x0362D158 B.CS 0x362D1B0
	0x0362D15C LDRH W10, [X8]
	0x0362D160 SUB W13, W10, 0x61
	0x0362D164 CMP W13, 0x1A
	0x0362D168 B.CC 0x362D19C
	0x0362D16C SUB W13, W10, 0x30
	0x0362D170 AND W13, W13, 0xFFFF
	0x0362D174 CMP W13, 0xA
	0x0362D178 B.CC 0x362D19C
	0x0362D17C CMP W10, 0x2D
	0x0362D180 B.EQ 0x362D19C
	0x0362D184 CMP W10, 0x5F
	0x0362D188 B.EQ 0x362D19C
	0x0362D18C SUB W10, W10, 0x41
	0x0362D190 CMP W10, 0x19
	0x0362D194 B.HI 0x362D0D0
	0x0362D198 STRB W11, [X3]
	0x0362D19C ADD X8, X8, 0x2
	0x0362D1A0 CMP X8, X12
	0x0362D1A4 B.CC 0x362D15C
	0x0362D1A8 ADD X10, X8, 0x2
	0x0362D1AC B 0x362D1B4
	0x0362D1B0 ADD X10, X10, 0x4
	0x0362D1B4 CMP X10, X9
	0x0362D1B8 B.CC 0x362D0E0
	0x0362D1BC SUB X8, X9, X0
	0x0362D1C0 CMP X8, 0x0
	0x0362D1C4 CINC X8, X8, LT
	0x0362D1C8 UBFM W8, W8, 0x1, 0x10
	0x0362D1CC STR W8, [X2]
	0x0362D1D0 MOVZ W8, 0x1
	0x0362D1D4 B 0x362D0D4
	0x0362D1D8 SUB W9, W0, 0x61
	0x0362D1DC AND W9, W9, 0xFFFF
	0x0362D1E0 MOV W8, W0
	0x0362D1E4 CMP W9, 0x1A
	0x0362D1E8 MOVZ W0, 0x1
	0x0362D1EC B.CC 0x362D220
	0x0362D1F0 SUB W9, W8, 0x30
	0x0362D1F4 AND W9, W9, 0xFFFF
	0x0362D1F8 CMP W9, 0xA
	0x0362D1FC B.CC 0x362D220
	0x0362D200 SUB W8, W8, 0x41
	0x0362D204 AND W8, W8, 0xFFFF
	0x0362D208 CMP W8, 0x19
	0x0362D20C B.LS 0x362D218
	0x0362D210 MOV W0, W31
	0x0362D214 RET
	0x0362D218 MOVZ W0, 0x1
	0x0362D21C STRB W0, [X1]
	0x0362D220 RET
	0x0362D224 SUB W9, W0, 0x61
	0x0362D228 AND W9, W9, 0xFFFF
	0x0362D22C MOV W8, W0
	0x0362D230 CMP W9, 0x1A
	0x0362D234 MOVZ W0, 0x1
	0x0362D238 B.CC 0x362D284
	0x0362D23C SUB W9, W8, 0x30
	0x0362D240 AND W9, W9, 0xFFFF
	0x0362D244 CMP W9, 0xA
	0x0362D248 B.CC 0x362D284
	0x0362D24C AND W9, W8, 0xFFFF
	0x0362D250 CMP W9, 0x2D
	0x0362D254 MOVZ W0, 0x1
	0x0362D258 B.EQ 0x362D284
	0x0362D25C CMP W9, 0x5F
	0x0362D260 B.EQ 0x362D284
	0x0362D264 SUB W8, W8, 0x41
	0x0362D268 AND W8, W8, 0xFFFF
	0x0362D26C CMP W8, 0x19
	0x0362D270 B.LS 0x362D27C
	0x0362D274 MOV W0, W31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Or W8, W31, 0x80000001
	007 Move W20, W2
	008 NotImplemented "Instruction CMP not yet implemented."
	009 Move W19, W3
	010 NotImplemented "Instruction CMP not yet implemented."
	011 Move X22, X1
	012 Compare X1, 0
	013 JumpIfEqual {91}
	014 Move X21, X0
	015 Move X0, X22
	016 Move X1, X31
	017 Call Uri.get_UserDrivenParsing, X0
	018 Move TEMP, X0
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {92}
	022 Move X0, X22
	023 Move X1, X31
	024 Call Uri.get_IsAbsoluteUri, X0
	025 Move TEMP, X0
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfNotEqual {124}
	029 Move X0, X22
	030 Move W1, W20
	031 Move W2, W19
	032 Move X20, [X31+32]
	033 Move X19, [X31+40]
	034 Move X22, [X31+16]
	035 Move X21, [X31+24]
	036 Move X3, X31
	037 Move X30, [X31+48]
	038 Call Uri.GetComponentsHelper, X0, X1, X2
	039 Return X0
	040 Move [X31+12], W20
	041 Move X0, 0xB0F000
	042 Move X0, [X0+568]
	043 Call 0x1C17D08
	044 Add X1, X31, 12
	045 Call 0x1C17E04
	046 Move X19, X0
	047 Move X0, 0xB0F000
	048 Move X0, [X0+576]
	049 Call 0x1C17D08
	050 Move X1, X31
	051 Call SR.GetString, X0
	052 Move X20, X0
	053 Move X0, 0xACF000
	054 Move X0, [X0+1888]
	055 Call 0x1C17D08
	056 Call 0x1C17F10
	057 Move X21, X0
	058 Move X0, 0xB0F000
	059 Move X0, [X0+584]
	060 Call 0x1C17D08
	061 Move X1, X0
	062 Move X0, X21
	063 Move X2, X19
	064 Move X3, X20
	065 Move X4, X31
	066 Call ArgumentOutOfRangeException..ctor, X0, X1, X2, X3
	067 Move X0, 0xB0F000
	068 Move X0, [X0+1456]
	069 Call 0x1C17D08
	070 Move X1, X0
	071 Move X0, X21
	072 Call 0x1C17DEC
	073 Move X0, 0xACF000
	074 Move X0, [X0+1888]
	075 Call 0x1C17D08
	076 Call 0x1C17F10
	077 Move X19, X0
	078 Move X0, 0xAF6000
	079 Move X0, [X0+160]
	080 Call 0x1C17D08
	081 Move X1, X0
	082 Move X0, X19
	083 Move X2, X31
	084 Call ArgumentOutOfRangeException..ctor, X0, X1
	085 Move X0, 0xB0F000
	086 Move X0, [X0+1456]
	087 Call 0x1C17D08
	088 Move X1, X0
	089 Move X0, X19
	090 Call 0x1C17DEC
	091 Call 0x1C17F20
	092 Move X0, 0xAC7000
	093 Move X0, [X0+2512]
	094 Call 0x1C17D08
	095 Move W1, 1
	096 Call 0x1C17D6C
	097 Move X19, X0
	098 Move X0, X21
	099 Move X1, X31
	100 Call "il2cpp_vm_object_is_inst", X0
	101 Move X20, X0
	102 Call 0x19913C0
	103 Move X8, [X20]
	104 Move X0, X20
	105 Move X9, [X8+744]
	106 Move X1, [X8+752]
	107 NotImplemented "Instruction BLR not yet implemented."
	108 Move X20, X0
	109 Move X0, X19
	110 Call 0x19913C0
	111 Move X0, X19
	112 Move X1, X20
	113 Call 0x19990B4
	114 Move X0, X19
	115 Move X1, X31
	116 Move X2, X20
	117 Call 0x1994444
	118 Move X0, 0xB0F000
	119 Move X0, [X0+616]
	120 Call 0x1C17D08
	121 Move X1, X19
	122 Move X2, X31
	123 Call SR.GetString, X0, X1
	124 Move X0, 0xB0F000
	125 Move X0, [X0+336]
	126 Call 0x1C17D08
	127 Move X1, X31
	128 Call SR.GetString, X0
	129 Move X19, X0
	130 Move X0, 0xAC7000
	131 Move X0, [X0+1456]
	132 Call 0x1C17D08
	133 Call 0x1C17F10
	134 Move X1, X19
	135 Move X2, X31
	136 Move X20, X0
	137 Call InvalidOperationException..ctor, X0, X1
	138 Move X0, 0xB0F000
	139 Move X0, [X0+1456]
	140 Call 0x1C17D08
	141 Move X1, X0
	142 Move X0, X20
	143 Call 0x1C17DEC

Method: System.Boolean IsWellFormedOriginalString(System.Uri uri)

Disassembly:
	0x0362D278 RET
	0x0362D27C MOVZ W0, 0x1
	0x0362D280 STRB W0, [X1]
	0x0362D284 RET
	0x0362D288 LDRSW X8, [X2]
	0x0362D28C ADD X9, X0, W1, 0x1, UXTH

ISIL:
	001 Compare X1, 0
	002 JumpIfEqual {7}
	003 Move X0, X1
	004 Move X1, X31
	005 Call Uri.InternalIsWellFormedOriginalString, X0
	006 Return X0
	007 Move [X31-16], X30
	008 Call 0x1C17F20

Method: System.Boolean get_ShouldUseLegacyV2Quirks()

Disassembly:
	0x0362CC9C LDR W8, [X0 + 0xE0]
	0x0362CCA0 CBNZ W8, 0x362CCAC
	0x0362CCA4 BL 0x1C16DFC
	0x0362CCA8 LDR X0, [X22]
	0x0362CCAC LDR X8, [X0 + 0xB8]
	0x0362CCB0 LDR X0, [X8 + 0x8]
	0x0362CCB4 CBZ X0, 0x362CDBC
	0x0362CCB8 ADRP X8, 0xB0F000
	0x0362CCBC LDR X8, [X8 + 0x638]
	0x0362CCC0 LDR X1, [X8]
	0x0362CCC4 BL 0x2AA4E88
	0x0362CCC8 CMP W0, 0x200
	0x0362CCCC B.LT 0x362CD14
	0x0362CCD0 ADRP X8, 0xB0F000
	0x0362CCD4 LDR X8, [X8 + 0x5D0]
	0x0362CCD8 LDR X0, [X8]
	0x0362CCDC BL 0x1C16F10
	0x0362CCE0 ADRP X8, 0xB0F000
	0x0362CCE4 LDR X8, [X8 + 0x5C0]
	0x0362CCE8 MOV X21, X0
	0x0362CCEC LDR X2, [X8]
	0x0362CCF0 MOVZ W1, 0x19
	0x0362CCF4 BL 0x2AA481C
	0x0362CCF8 LDR X0, [X22]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xDB5000
	005 Move X19, 0xB10000
	006 Move W8, [X20+1270]
	007 Move X19, [X19+72]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xB10000
	013 Move X0, [X0+72]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+1270], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move W8, [X8+144]
	027 NotImplemented "Instruction CMP not yet implemented."
	028 NotImplemented "Instruction CSET not yet implemented."
	029 Move X30, [X31+32]
	030 Return X0

Method: System.Void .cctor()

Disassembly:
	0x0362D290 ADD X10, X0, X8, 0x1, LSL
	0x0362D294 CMP X10, X9
	0x0362D298 MOV X8, X10
	0x0362D29C B.LS 0x362D2F0
	0x0362D2A0 MOVZ X12, 0x8
	0x0362D2A4 MOVZ W11, 0x1
	0x0362D2A8 MOVK X12, 0x84000000
	0x0362D2AC MOV X8, X9
	0x0362D2B0 LDRH W13, [X8]
	0x0362D2B4 CMP W13, 0x2F
	0x0362D2B8 B.EQ 0x362D2F0
	0x0362D2BC CMP W13, 0x5C
	0x0362D2C0 B.EQ 0x362D2F0
	0x0362D2C4 TBZ X4, 0x0, 0x362D2E0
	0x0362D2C8 CMP W13, 0x3F
	0x0362D2CC B.HI 0x362D2E0
	0x0362D2D0 MOV W13, W13
	0x0362D2D4 LSLV X13, X11, X13
	0x0362D2D8 ANDS X31, X13, X12, 0x0
	0x0362D2DC B.NE 0x362D2F0
	0x0362D2E0 ADD X8, X8, 0x2
	0x0362D2E4 CMP X10, X8
	0x0362D2E8 B.HI 0x362D2B0
	0x0362D2EC MOV X8, X10
	0x0362D2F0 CMP X9, X8
	0x0362D2F4 B.NE 0x362D300
	0x0362D2F8 MOV W0, W31
	0x0362D2FC RET
	0x0362D300 MOVZ W10, 0xFF0D
	0x0362D304 MOVZ W11, 0x3002
	0x0362D308 MOVZ W12, 0x1
	0x0362D30C MOVZ W13, 0xFF0E
	0x0362D310 MOVZ W14, 0xFF61
	0x0362D314 CMP X9, X8
	0x0362D318 B.CS 0x362D380
	0x0362D31C MOV W16, W31
	0x0362D320 MOV W17, W31
	0x0362D324 MOV X15, X9
	0x0362D328 LDRH W1, [X15]
	0x0362D32C CMP W1, W10
	0x0362D330 B.GT 0x362D348
	0x0362D334 CMP W1, 0x2E
	0x0362D338 B.EQ 0x362D38C
	0x0362D33C CMP W1, W11
	0x0362D340 B.NE 0x362D358
	0x0362D344 B 0x362D38C
	0x0362D348 CMP W1, W13
	0x0362D34C B.EQ 0x362D38C
	0x0362D350 CMP W1, W14
	0x0362D354 B.EQ 0x362D38C
	0x0362D358 CMP W1, 0x100
	0x0362D35C CINC W4, W12, CS
	0x0362D360 CMP W1, 0x9F
	0x0362D364 ADD X15, X15, 0x2
	0x0362D368 CSET W1, HI
	0x0362D36C ADD W16, W4, W16
	0x0362D370 CMP X8, X15
	0x0362D374 ORR W17, W17, W1, 0x0
	0x0362D378 B.HI 0x362D328
	0x0362D37C B 0x362D38C
	0x0362D380 MOV W17, W31
	0x0362D384 MOV W16, W31
	0x0362D388 MOV X15, X9
	0x0362D38C CMP X9, X15
	0x0362D390 B.EQ 0x362D2F8
	0x0362D394 ADD W1, W16, 0x4
	0x0362D398 ANDS W31, W17, 0x1
	0x0362D39C CSEL W16, W1, W16, NE
	0x0362D3A0 CMP W16, 0x3F
	0x0362D3A4 B.GT 0x362D2F8
	0x0362D3A8 MOV X16, X9
	0x0362D3AC LDRH W17, [X16], #0x2
	0x0362D3B0 CMP W17, 0x9F
	0x0362D3B4 B.HI 0x362D3E4
	0x0362D3B8 SUB W1, W17, 0x61
	0x0362D3BC CMP W1, 0x1A
	0x0362D3C0 B.CC 0x362D3E4
	0x0362D3C4 SUB W1, W17, 0x30
	0x0362D3C8 AND W1, W1, 0xFFFF
	0x0362D3CC CMP W1, 0xA
	0x0362D3D0 B.CC 0x362D3E4
	0x0362D3D4 SUB W17, W17, 0x41
	0x0362D3D8 CMP W17, 0x19
	0x0362D3DC B.HI 0x362D2F8
	0x0362D3E0 STRB W12, [X3]
	0x0362D3E4 CMP X16, X15
	0x0362D3E8 B.CS 0x362D448
	0x0362D3EC LDRH W9, [X16]
	0x0362D3F0 CMP W9, 0xA0
	0x0362D3F4 B.CC 0x362D408
	0x0362D3F8 ADD X16, X16, 0x2
	0x0362D3FC CMP X16, X15
	0x0362D400 B.CC 0x362D3EC
	0x0362D404 B 0x362D450
	0x0362D408 SUB W17, W9, 0x61
	0x0362D40C CMP W17, 0x1A
	0x0362D410 B.CC 0x362D3F8
	0x0362D414 SUB W17, W9, 0x30
	0x0362D418 AND W17, W17, 0xFFFF
	0x0362D41C CMP W17, 0xA
	0x0362D420 B.CC 0x362D3F8
	0x0362D424 CMP W9, 0x2D
	0x0362D428 B.EQ 0x362D3F8
	0x0362D42C CMP W9, 0x5F
	0x0362D430 B.EQ 0x362D3F8
	0x0362D434 SUB W9, W9, 0x41
	0x0362D438 CMP W9, 0x19
	0x0362D43C B.HI 0x362D2F8
	0x0362D440 STRB W12, [X3]
	0x0362D444 B 0x362D3F8
	0x0362D448 ADD X9, X9, 0x4
	0x0362D44C B 0x362D454
	0x0362D450 ADD X9, X16, 0x2
	0x0362D454 CMP X9, X8
	0x0362D458 B.CC 0x362D314
	0x0362D45C SUB X8, X8, X0
	0x0362D460 CMP X8, 0x0
	0x0362D464 CINC X8, X8, LT
	0x0362D468 UBFM W8, W8, 0x1, 0x10
	0x0362D46C MOVZ W0, 0x1
	0x0362D470 STR W8, [X2]
	0x0362D474 RET
	0x0362D478 SUB X31, X31, 0x20
	0x0362D47C STP X30, X19, [X31 + 0x10]
	0x0362D480 MOVZ W8, 0x1
	0x0362D484 STRB W8, [X31 + 0xC]
	0x0362D488 STRB W31, [X31 + 0x8]
	0x0362D48C CBZ X0, 0x362D4C0
	0x0362D490 MOV X19, X0
	0x0362D494 MOV X0, X31
	0x0362D498 BL 0x32C1424
	0x0362D49C LDR W2, [X19 + 0x10]
	0x0362D4A0 ADD X0, X19, W0, SXTW
	0x0362D4A4 ADD X3, X31, 0xC
	0x0362D4A8 ADD X4, X31, 0x8
	0x0362D4AC MOV W1, W31
	0x0362D4B0 BL 0x362D4C4
	0x0362D4B4 LDP X30, X19, [X31 + 0x10]
	0x0362D4B8 ADD X31, X31, 0x20
	0x0362D4BC RET
	0x0362D4C0 BL 0x1C16F20
	0x0362D4C4 SUB X31, X31, 0x70
	0x0362D4C8 STP X29, X30, [X31 + 0x10]
	0x0362D4CC STP X28, X27, [X31 + 0x20]
	0x0362D4D0 STP X26, X25, [X31 + 0x30]
	0x0362D4D4 STP X24, X23, [X31 + 0x40]
	0x0362D4D8 STP X22, X21, [X31 + 0x50]
	0x0362D4DC STP X20, X19, [X31 + 0x60]
	0x0362D4E0 ADRP X19, 0xDB3000
	0x0362D4E4 LDRB W8, [X19 + 0x4FD]
	0x0362D4E8 MOV X21, X3
	0x0362D4EC MOV W20, W2
	0x0362D4F0 MOV W22, W1
	0x0362D4F4 MOV X23, X0
	0x0362D4F8 STR X4, [X31]
	0x0362D4FC TBNZ X8, 0x0, 0x362D514
	0x0362D500 ADRP X0, 0xAFC000
	0x0362D504 LDR X0, [X0 + 0xFB0]
	0x0362D508 BL 0x1C16CF4
	0x0362D50C MOVZ W8, 0x1
	0x0362D510 STRB W8, [X19 + 0x4FD]
	0x0362D514 ADD X4, X31, 0x8
	0x0362D518 MOV X0, X23
	0x0362D51C MOV W1, W22
	0x0362D520 MOV W2, W20
	0x0362D524 MOV X3, X21
	0x0362D528 STR X31, [X31 + 0x8]
	0x0362D52C BL 0x362D750
	0x0362D530 MOV X20, X0
	0x0362D534 CBZ X0, 0x362D6E4
	0x0362D538 LDRB W8, [X21]
	0x0362D53C LDR X9, [X31 + 0x8]
	0x0362D540 CMP W8, 0x0
	0x0362D544 CSEL X19, X9, X20, EQ
	0x0362D548 CBZ X19, 0x362D714
	0x0362D54C MOV X0, X31
	0x0362D550 BL 0x32C1424
	0x0362D554 LDR W27, [X19 + 0x10]
	0x0362D558 MOV W24, W31
	0x0362D55C ADD X21, X19, W0, SXTW
	0x0362D560 MOVZ W28, 0xFF0D
	0x0362D564 MOVZ W22, 0xFF0E
	0x0362D568 MOVZ W26, 0xFF61
	0x0362D56C CMP W24, W27
	0x0362D570 B.GE 0x362D60C
	0x0362D574 MOV W25, W31
	0x0362D578 MOVZ W8, 0x1
	0x0362D57C MOV W29, W24
	0x0362D580 MOV W23, W29
	0x0362D584 LDRH W19, [X21, W23, SXTW]
	0x0362D588 TBZ X8, 0x0, 0x362D5A8
	0x0362D58C ADD W8, W23, 0x3
	0x0362D590 CMP W8, W27
	0x0362D594 B.GE 0x362D5A8
	0x0362D598 MOV X0, X21
	0x0362D59C MOV W1, W23
	0x0362D5A0 BL 0x362D944
	0x0362D5A4 TBNZ X0, 0x0, 0x362D5EC
	0x0362D5A8 CMP W19, W28
	0x0362D5AC B.GT 0x362D5C8
	0x0362D5B0 CMP W19, 0x2E
	0x0362D5B4 B.EQ 0x362D618
	0x0362D5B8 MOVZ W8, 0x3002
	0x0362D5BC CMP W19, W8
	0x0362D5C0 B.NE 0x362D5D8
	0x0362D5C4 B 0x362D618
	0x0362D5C8 CMP W19, W22
	0x0362D5CC B.EQ 0x362D618
	0x0362D5D0 CMP W19, W26
	0x0362D5D4 B.EQ 0x362D618
	0x0362D5D8 ADD W23, W23, 0x1
	0x0362D5DC CMP W23, W27
	0x0362D5E0 MOV W8, W31
	0x0362D5E4 B.LT 0x362D584
	0x0362D5E8 B 0x362D66C
	0x0362D5EC ADD W29, W23, 0x4
	0x0362D5F0 MOV W8, W31
	0x0362D5F4 CMP W29, W27
	0x0362D5F8 MOVZ W25, 0x1
	0x0362D5FC B.LT 0x362D580
	0x0362D600 MOV W19, W31
	0x0362D604 MOV W23, W29
	0x0362D608 B 0x362D620
	0x0362D60C MOV W19, W31
	0x0362D610 MOV W23, W24
	0x0362D614 B 0x362D680
	0x0362D618 MOVZ W19, 0x1
	0x0362D61C TBZ X25, 0x0, 0x362D680
	0x0362D620 ADRP X8, 0xAFC000
	0x0362D624 LDR X8, [X8 + 0xFB0]
	0x0362D628 LDR X0, [X8]
	0x0362D62C BL 0x1C16F10
	0x0362D630 MOV X25, X0
	0x0362D634 MOV X1, X31
	0x0362D638 BL 0x334BC78
	0x0362D63C SUB W3, W23, W24
	0x0362D640 MOV X0, X31
	0x0362D644 MOV X1, X21
	0x0362D648 MOV W2, W24
	0x0362D64C MOV X4, X31
	0x0362D650 BL 0x322EAD4
	0x0362D654 MOV X1, X0
	0x0362D658 CBZ X25, 0x362D690
	0x0362D65C MOV X0, X25
	0x0362D660 MOV X2, X31
	0x0362D664 BL 0x334CE54
	0x0362D668 B 0x362D6DC
	0x0362D66C ADD W8, W29, 0x1
	0x0362D670 CMP W27, W8
	0x0362D674 MOV W19, W31
	0x0362D678 CSINC W23, W27, W29, GT
	0x0362D67C TBNZ X25, 0x0, 0x362D620
	0x0362D680 ADD W24, W23, W19
	0x0362D684 CMP W24, W27
	0x0362D688 B.LT 0x362D56C
	0x0362D68C B 0x362D6F0
	0x0362D690 BL 0x1C16F20
	0x0362D694 B 0x362D738
	0x0362D698 B 0x362D6A0
	0x0362D69C B 0x362D6A0
	0x0362D6A0 MOV X24, X0
	0x0362D6A4 CMP W1, 0x1
	0x0362D6A8 B.NE 0x362D744
	0x0362D6AC MOV X0, X24
	0x0362D6B0 BL 0x3EB1AD0
	0x0362D6B4 MOV X24, X0
	0x0362D6B8 ADRP X0, 0xACE000
	0x0362D6BC LDR X0, [X0 + 0x578]
	0x0362D6C0 BL 0x1C16D08
	0x0362D6C4 LDR X8, [X24]
	0x0362D6C8 LDR X1, [X8]
	0x0362D6CC BL 0x1C17270
	0x0362D6D0 TBZ X0, 0x0, 0x362D718
	0x0362D6D4 BL 0x3EB1AE0
	0x0362D6D8 B 0x362D680
	0x0362D6DC MOVZ W8, 0x1
	0x0362D6E0 B 0x362D6E8
	0x0362D6E4 MOV W8, W31
	0x0362D6E8 LDR X9, [X31]
	0x0362D6EC STRB W8, [X9]
	0x0362D6F0 MOV X0, X20
	0x0362D6F4 LDP X20, X19, [X31 + 0x60]
	0x0362D6F8 LDP X22, X21, [X31 + 0x50]
	0x0362D6FC LDP X24, X23, [X31 + 0x40]
	0x0362D700 LDP X26, X25, [X31 + 0x30]
	0x0362D704 LDP X28, X27, [X31 + 0x20]
	0x0362D708 LDP X29, X30, [X31 + 0x10]
	0x0362D70C ADD X31, X31, 0x70
	0x0362D710 RET
	0x0362D714 BL 0x1C16F20
	0x0362D718 MOVZ W0, 0x8
	0x0362D71C BL 0x3EB1AF0
	0x0362D720 LDR X8, [X24]
	0x0362D724 STR X8, [X0]
	0x0362D728 ADRP X1, 0x887000
	0x0362D72C ADD X1, X1, 0xE58
	0x0362D730 MOV X2, X31
	0x0362D734 BL 0x3EB1B00
	0x0362D738 B 0x362D73C
	0x0362D73C MOV X24, X0
	0x0362D740 BL 0x3EB1AE0
	0x0362D744 MOV X0, X24
	0x0362D748 BL 0x1D2C690
	0x0362D74C BL 0x1990590
	0x0362D750 STR X30, [X31 - 0x40]!
	0x0362D754 STP X24, X23, [X31 + 0x10]
	0x0362D758 STP X22, X21, [X31 + 0x20]
	0x0362D75C STP X20, X19, [X31 + 0x30]
	0x0362D760 ADRP X22, 0xDB3000
	0x0362D764 LDRB W8, [X22 + 0x4FE]
	0x0362D768 MOV X19, X4
	0x0362D76C MOV X23, X3
	0x0362D770 MOV W24, W2
	0x0362D774 MOV W20, W1
	0x0362D778 MOV X21, X0
	0x0362D77C TBNZ X8, 0x0, 0x362D7A0
	0x0362D780 ADRP X0, 0xAFC000
	0x0362D784 LDR X0, [X0 + 0xFB0]
	0x0362D788 BL 0x1C16CF4
	0x0362D78C ADRP X0, 0xAC8000
	0x0362D790 LDR X0, [X0 + 0xA28]
	0x0362D794 BL 0x1C16CF4
	0x0362D798 MOVZ W8, 0x1
	0x0362D79C STRB W8, [X22 + 0x4FE]
	0x0362D7A0 SUBS W22, W24, W20
	0x0362D7A4 B.LE 0x362D804
	0x0362D7A8 MOVZ W8, 0x1
	0x0362D7AC STRB W8, [X23]
	0x0362D7B0 ADD X8, X21, W20, 0x1, SXTW
	0x0362D7B4 LDRH W9, [X8]
	0x0362D7B8 CMP W9, 0x7F
	0x0362D7BC B.HI 0x362D80C
	0x0362D7C0 SUB W24, W24, 0x1
	0x0362D7C4 CMP W20, W24
	0x0362D7C8 ADD X8, X8, 0x2
	0x0362D7CC B.NE 0x362D7B4
	0x0362D7D0 MOV X0, X31
	0x0362D7D4 MOV X1, X21
	0x0362D7D8 MOV W2, W20
	0x0362D7DC MOV W3, W22
	0x0362D7E0 MOV X4, X31
	0x0362D7E4 BL 0x322EAD4
	0x0362D7E8 CBZ X0, 0x362D870
	0x0362D7EC LDP X20, X19, [X31 + 0x30]
	0x0362D7F0 LDP X22, X21, [X31 + 0x20]
	0x0362D7F4 LDP X24, X23, [X31 + 0x10]
	0x0362D7F8 MOV X1, X31
	0x0362D7FC LDR X30, [X31], #0x40
	0x0362D800 B 0x322B6E4
	0x0362D804 MOV X0, X31
	0x0362D808 B 0x362D870
	0x0362D80C STRB W31, [X23]
	0x0362D810 ADRP X8, 0xAFC000
	0x0362D814 LDR X8, [X8 + 0xFB0]
	0x0362D818 LDR X0, [X8]
	0x0362D81C BL 0x1C16F10
	0x0362D820 MOV X1, X31
	0x0362D824 MOV X23, X0
	0x0362D828 BL 0x334BC78
	0x0362D82C ADRP X8, 0xAC8000
	0x0362D830 LDR X8, [X8 + 0xA28]
	0x0362D834 LDR X0, [X8]
	0x0362D838 LDR W8, [X0 + 0xE0]
	0x0362D83C CBNZ W8, 0x362D844
	0x0362D840 BL 0x1C16DFC
	0x0362D844 MOV X0, X21
	0x0362D848 MOV W1, W20
	0x0362D84C MOV W2, W22
	0x0362D850 MOV X3, X31
	0x0362D854 BL 0x3623288
	0x0362D858 STR X0, [X19]
	0x0362D85C CBZ X23, 0x362D884
	0x0362D860 MOV X1, X0
	0x0362D864 MOV X0, X23
	0x0362D868 MOV X2, X31
	0x0362D86C BL 0x334BDDC
	0x0362D870 LDP X20, X19, [X31 + 0x30]
	0x0362D874 LDP X22, X21, [X31 + 0x20]
	0x0362D878 LDP X24, X23, [X31 + 0x10]
	0x0362D87C LDR X30, [X31], #0x40
	0x0362D880 RET
	0x0362D884 BL 0x1C16F20
	0x0362D888 B 0x362D88C
	0x0362D88C MOV X19, X0
	0x0362D890 CMP W1, 0x1
	0x0362D894 B.NE 0x362D938
	0x0362D898 MOV X0, X19
	0x0362D89C BL 0x3EB1AD0
	0x0362D8A0 MOV X19, X0
	0x0362D8A4 ADRP X0, 0xACE000
	0x0362D8A8 LDR X0, [X0 + 0x578]
	0x0362D8AC BL 0x1C16D08
	0x0362D8B0 LDR X8, [X19]
	0x0362D8B4 LDR X1, [X8]
	0x0362D8B8 BL 0x1C17270
	0x0362D8BC TBZ X0, 0x0, 0x362D910
	0x0362D8C0 BL 0x3EB1AE0
	0x0362D8C4 ADRP X0, 0xB0E000
	0x0362D8C8 LDR X0, [X0 + 0x648]
	0x0362D8CC BL 0x1C16D08
	0x0362D8D0 MOV X1, X31
	0x0362D8D4 BL 0x320A1E4
	0x0362D8D8 MOV X19, X0
	0x0362D8DC ADRP X0, 0xB0E000
	0x0362D8E0 LDR X0, [X0 + 0xD8]
	0x0362D8E4 BL 0x1C16D08
	0x0362D8E8 BL 0x1C16F10
	0x0362D8EC MOV X1, X19
	0x0362D8F0 MOV X20, X0
	0x0362D8F4 BL 0x3628F6C
	0x0362D8F8 ADRP X0, 0xB0E000
	0x0362D8FC LDR X0, [X0 + 0x650]
	0x0362D900 BL 0x1C16D08
	0x0362D904 MOV X1, X0
	0x0362D908 MOV X0, X20
	0x0362D90C BL 0x1C16DEC
	0x0362D910 MOVZ W0, 0x8
	0x0362D914 BL 0x3EB1AF0
	0x0362D918 LDR X8, [X19]
	0x0362D91C STR X8, [X0]
	0x0362D920 ADRP X1, 0x887000
	0x0362D924 ADD X1, X1, 0xE58
	0x0362D928 MOV X2, X31
	0x0362D92C BL 0x3EB1B00
	0x0362D930 MOV X19, X0
	0x0362D934 BL 0x3EB1AE0
	0x0362D938 MOV X0, X19
	0x0362D93C BL 0x1D2C690
	0x0362D940 BL 0x1990590
	0x0362D944 LDRH W8, [X0, W1, SXTW]
	0x0362D948 CMP W8, 0x78
	0x0362D94C B.NE 0x362D988
	0x0362D950 ADD W8, W1, 0x1
	0x0362D954 LDRH W8, [X0, W8, SXTW]
	0x0362D958 CMP W8, 0x6E
	0x0362D95C B.NE 0x362D988
	0x0362D960 ADD W8, W1, 0x2
	0x0362D964 LDRH W8, [X0, W8, SXTW]
	0x0362D968 CMP W8, 0x2D
	0x0362D96C B.NE 0x362D988
	0x0362D970 ADD W8, W1, 0x3
	0x0362D974 LDRH W8, [X0, W8, SXTW]
	0x0362D978 CMP W8, 0x2D
	0x0362D97C B.NE 0x362D988
	0x0362D980 MOVZ W0, 0x1
	0x0362D984 RET
	0x0362D988 MOV W0, W31
	0x0362D98C RET
	0x0362D990 STR X30, [X31 - 0x20]!
	0x0362D994 STP X20, X19, [X31 + 0x10]
	0x0362D998 CBZ X0, 0x362DA24
	0x0362D99C MOV X2, X31
	0x0362D9A0 MOV W20, W1
	0x0362D9A4 MOV X19, X0
	0x0362D9A8 BL 0x3222A1C
	0x0362D9AC AND W8, W0, 0xFFFF
	0x0362D9B0 CMP W8, 0x78
	0x0362D9B4 B.NE 0x362DA14
	0x0362D9B8 ADD W1, W20, 0x1
	0x0362D9BC MOV X0, X19
	0x0362D9C0 MOV X2, X31
	0x0362D9C4 BL 0x3222A1C
	0x0362D9C8 AND W8, W0, 0xFFFF
	0x0362D9CC CMP W8, 0x6E
	0x0362D9D0 B.NE 0x362DA14
	0x0362D9D4 ADD W1, W20, 0x2
	0x0362D9D8 MOV X0, X19
	0x0362D9DC MOV X2, X31
	0x0362D9E0 BL 0x3222A1C
	0x0362D9E4 AND W8, W0, 0xFFFF
	0x0362D9E8 CMP W8, 0x2D
	0x0362D9EC B.NE 0x362DA14
	0x0362D9F0 ADD W1, W20, 0x3
	0x0362D9F4 MOV X0, X19
	0x0362D9F8 MOV X2, X31
	0x0362D9FC BL 0x3222A1C
	0x0362DA00 AND W8, W0, 0xFFFF
	0x0362DA04 CMP W8, 0x2D
	0x0362DA08 B.NE 0x362DA14

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X20, 0xDB4000
	010 Move X19, 0xAF8000
	011 Move W8, [X20+1271]
	012 Move X19, [X19+2632]
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {85}
	017 Move X0, 0xAF8000
	018 Move X0, [X0+2632]
	019 Call 0x1C17CF4
	020 Move X0, 0xB0F000
	021 Move X0, [X0+1464]
	022 Call 0x1C17CF4
	023 Move X0, 0xB0F000
	024 Move X0, [X0+1472]
	025 Call 0x1C17CF4
	026 Move X0, 0xB0F000
	027 Move X0, [X0+1480]
	028 Call 0x1C17CF4
	029 Move X0, 0xB0F000
	030 Move X0, [X0+1488]
	031 Call 0x1C17CF4
	032 Move X0, 0xB0F000
	033 Move X0, [X0+72]
	034 Call 0x1C17CF4
	035 Move X0, 0xB0F000
	036 Move X0, [X0+1496]
	037 Call 0x1C17CF4
	038 Move X0, 0xB0F000
	039 Move X0, [X0+1504]
	040 Call 0x1C17CF4
	041 Move X0, 0xB04000
	042 Move X0, [X0+3560]
	043 Call 0x1C17CF4
	044 Move X0, 0xAD0000
	045 Move X0, [X0+936]
	046 Call 0x1C17CF4
	047 Move X0, 0xB03000
	048 Move X0, [X0+1512]
	049 Call 0x1C17CF4
	050 Move X0, 0xB0F000
	051 Move X0, [X0+1512]
	052 Call 0x1C17CF4
	053 Move X0, 0xB0F000
	054 Move X0, [X0+1520]
	055 Call 0x1C17CF4
	056 Move X0, 0xB0F000
	057 Move X0, [X0+1528]
	058 Call 0x1C17CF4
	059 Move X0, 0xB0F000
	060 Move X0, [X0+1536]
	061 Call 0x1C17CF4
	062 Move X0, 0xB0F000
	063 Move X0, [X0+1544]
	064 Call 0x1C17CF4
	065 Move X0, 0xB0F000
	066 Move X0, [X0+1552]
	067 Call 0x1C17CF4
	068 Move X0, 0xB0F000
	069 Move X0, [X0+1560]
	070 Call 0x1C17CF4
	071 Move X0, 0xB0F000
	072 Move X0, [X0+1568]
	073 Call 0x1C17CF4
	074 Move X0, 0xB0F000
	075 Move X0, [X0+1576]
	076 Call 0x1C17CF4
	077 Move X0, 0xB0F000
	078 Move X0, [X0+1584]
	079 Call 0x1C17CF4
	080 Move X0, 0xB05000
	081 Move X0, [X0+1224]
	082 Call 0x1C17CF4
	083 Move W8, 1
	084 Move [X20+1271], W8
	085 Move X0, [X19]
	086 Move X21, 0xB0F000
	087 Move X25, 0xB0F000
	088 Move X20, 0xB0F000
	089 Move X22, 0xB0F000
	090 Move X23, 0xB03000
	091 Move X21, [X21+72]
	092 Move W8, [X0+224]
	093 Move X25, [X25+1488]
	094 Move X20, [X20+1472]
	095 Move X22, [X22+1464]
	096 Move X23, [X23+1512]
	097 Compare W8, 0
	098 JumpIfNotEqual {101}
	099 Call 0x1C17DFC
	100 Move X0, [X19]
	101 Move X8, [X0+184]
	102 Move X9, [X21]
	103 Move W24, 3697
	104 Move W19, 3933
	105 Move W8, [X8]
	106 Move X9, [X9+184]
	107 NotImplemented "Instruction MOVK not yet implemented."
	108 NotImplemented "Instruction MOVK not yet implemented."
	109 NotImplemented "Instruction CMP not yet implemented."
	110 Move W8, 2
	111 NotImplemented "Instruction CINC not yet implemented."
	112 Move [X9+144], W8
	113 Call UriParser.get_ShouldUseLegacyV2Quirks
	114 Move X8, [X21]
	115 Move W10, 268
	116 Or W9, W19, 32
	117 Or W10, W24, W10
	118 Move X8, [X8+184]
	119 And W31, W0, 1
	120 NotImplemented "Instruction CSEL not yet implemented."
	121 Move [X8+148], W9
	122 Call UriParser.get_ShouldUseLegacyV2Quirks
	123 Move X8, [X21]
	124 Move W9, 0x2FD1
	125 NotImplemented "Instruction MOVK not yet implemented."
	126 Or W10, W9, 32
	127 Move X8, [X8+184]
	128 And W31, W0, 1
	129 NotImplemented "Instruction CSEL not yet implemented."
	130 Move [X8+152], W9
	131 Move X0, [X25]
	132 Call 0x1C17F10
	133 Move X2, [X20]
	134 Move W1, 25
	135 Move X19, X0
	136 Call Dictionary`2<Object, Object>..ctor, X0, X1
	137 Move X8, [X21]
	138 Move X8, [X8+184]
	139 Move [X8], X19
	140 Move X0, [X25]
	141 Call 0x1C17F10
	142 Move X2, [X20]
	143 Move W1, 25
	144 Move X19, X0
	145 Call Dictionary`2<Object, Object>..ctor, X0, X1
	146 Move X8, [X21]
	147 Move X8, [X8+184]
	148 Move [X8+8], X19
	149 Move X0, [X22]
	150 Move W20, [X8+148]
	151 Call 0x1C17F10
	152 Move X1, [X23]
	153 Move W2, 80
	154 Move W3, W20
	155 Move X19, X0
	156 Call BuiltInUriParser..ctor, X0, X1, X2, X3
	157 Move X8, [X21]
	158 Move X8, [X8+184]
	159 Move [X8+16], X19
	160 Compare X19, 0
	161 JumpIfEqual {536}
	162 Move X0, [X8]
	163 Compare X0, 0
	164 JumpIfEqual {536}
	165 Move X23, 0xB0F000
	166 Move X23, [X23+1480]
	167 Move X1, [X19+32]
	168 Move X2, X19
	169 Move X3, [X23]
	170 Call Dictionary`2<Object, Object>.set_Item, X0, X1, X2
	171 Move X8, [X21]
	172 Move X8, [X8+184]
	173 Move X8, [X8+16]
	174 Compare X8, 0
	175 JumpIfEqual {536}
	176 Move X0, [X22]
	177 Move X19, 0xB05000
	178 Move W20, [X8+16]
	179 Move X19, [X19+1224]
	180 Call 0x1C17F10
	181 Move X1, [X19]
	182 Move W2, 443
	183 Move W3, W20
	184 Move X19, X0
	185 Call BuiltInUriParser..ctor, X0, X1, X2, X3
	186 Move X8, [X21]
	187 Move X8, [X8+184]
	188 Move [X8+24], X19
	189 Compare X19, 0
	190 JumpIfEqual {536}
	191 Move X0, [X8]
	192 Compare X0, 0
	193 JumpIfEqual {536}
	194 Move X1, [X19+32]
	195 Move X3, [X23]
	196 Move X25, 0xAD0000
	197 Move X25, [X25+936]
	198 Move X2, X19
	199 Call Dictionary`2<Object, Object>.set_Item, X0, X1, X2
	200 Move X8, [X21]
	201 Move X0, [X22]
	202 Move X8, [X8+184]
	203 Move W20, [X8+148]
	204 Call 0x1C17F10
	205 Move X1, [X25]
	206 Move W2, 80
	207 Move W3, W20
	208 Move X19, X0
	209 Call BuiltInUriParser..ctor, X0, X1, X2, X3
	210 Move X8, [X21]
	211 Move X8, [X8+184]
	212 Move [X8+32], X19
	213 Compare X19, 0
	214 JumpIfEqual {536}
	215 Move X0, [X8]
	216 Compare X0, 0
	217 JumpIfEqual {536}
	218 Move X1, [X19+32]
	219 Move X3, [X23]
	220 Move X25, 0xB04000
	221 Move X25, [X25+3560]
	222 Move X2, X19
	223 Call Dictionary`2<Object, Object>.set_Item, X0, X1, X2
	224 Move X8, [X21]
	225 Move X0, [X22]
	226 Move X8, [X8+184]
	227 Move W20, [X8+148]
	228 Call 0x1C17F10
	229 Move X1, [X25]
	230 Move W2, 443
	231 Move W3, W20
	232 Move X19, X0
	233 Call BuiltInUriParser..ctor, X0, X1, X2, X3
	234 Move X8, [X21]
	235 Move X8, [X8+184]
	236 Move [X8+40], X19
	237 Compare X19, 0
	238 JumpIfEqual {536}
	239 Move X0, [X8]
	240 Compare X0, 0
	241 JumpIfEqual {536}
	242 Move X1, [X19+32]
	243 Move X3, [X23]
	244 Move X20, 0xB0F000
	245 Move X20, [X20+1536]
	246 Move X2, X19
	247 Call Dictionary`2<Object, Object>.set_Item, X0, X1, X2
	248 Move X0, [X22]
	249 Call 0x1C17F10
	250 Move X1, [X20]
	251 Move W3, 3933
	252 Move W2, 21
	253 NotImplemented "Instruction MOVK not yet implemented."
	254 Move X19, X0
	255 Call BuiltInUriParser..ctor, X0, X1, X2, X3
	256 Move X8, [X21]
	257 Move X8, [X8+184]
	258 Move [X8+48], X19
	259 Compare X19, 0
	260 JumpIfEqual {536}
	261 Move X0, [X8]
	262 Compare X0, 0
	263 JumpIfEqual {536}
	264 Move X1, [X19+32]
	265 Move X3, [X23]
	266 Move X25, 0xB0F000
	267 Move X25, [X25+1568]
	268 Move X2, X19
	269 Call Dictionary`2<Object, Object>.set_Item, X0, X1, X2
	270 Move X8, [X21]
	271 Move X0, [X22]
	272 Move X8, [X8+184]
	273 Move W20, [X8+152]
	274 Call 0x1C17F10
	275 Move X1, [X25]
	276 Move TEMP, 0
	277 Not TEMP
	278 Move W2, TEMP
	279 Move W3, W20
	280 Move X19, X0
	281 Call BuiltInUriParser..ctor, X0, X1, X2, X3
	282 Move X8, [X21]
	283 Move X8, [X8+184]
	284 Move [X8+56], X19
	285 Compare X19, 0
	286 JumpIfEqual {536}
	287 Move X0, [X8]
	288 Compare X0, 0
	289 JumpIfEqual {536}
	290 Move X1, [X19+32]
	291 Move X3, [X23]
	292 Move X20, 0xB0F000
	293 Move X20, [X20+1560]
	294 Move W25, 3933
	295 Move X2, X19
	296 NotImplemented "Instruction MOVK not yet implemented."
	297 Call Dictionary`2<Object, Object>.set_Item, X0, X1, X2
	298 Move X0, [X22]
	299 Call 0x1C17F10
	300 Move X1, [X20]
	301 Move W3, 3933
	302 Move W2, 70
	303 NotImplemented "Instruction MOVK not yet implemented."
	304 Move X19, X0
	305 Call BuiltInUriParser..ctor, X0, X1, X2, X3
	306 Move X8, [X21]
	307 Move X8, [X8+184]
	308 Move [X8+64], X19
	309 Compare X19, 0
	310 JumpIfEqual {536}
	311 Move X0, [X8]
	312 Compare X0, 0
	313 JumpIfEqual {536}
	314 Move X1, [X19+32]
	315 Move X3, [X23]
	316 Move X20, 0xB0F000
	317 Move X20, [X20+1552]
	318 Move X2, X19
	319 Call Dictionary`2<Object, Object>.set_Item, X0, X1, X2
	320 Move X0, [X22]
	321 Call 0x1C17F10
	322 Move X1, [X20]
	323 Move W3, 3933
	324 Move W2, 119
	325 NotImplemented "Instruction MOVK not yet implemented."
	326 Move X19, X0
	327 Call BuiltInUriParser..ctor, X0, X1, X2, X3
	328 Move X8, [X21]
	329 Move X8, [X8+184]
	330 Move [X8+72], X19
	331 Compare X19, 0
	332 JumpIfEqual {536}
	333 Move X0, [X8]
	334 Compare X0, 0
	335 JumpIfEqual {536}
	336 Move X1, [X19+32]
	337 Move X3, [X23]
	338 Move X20, 0xB0F000
	339 Move X20, [X20+1520]
	340 Move X2, X19
	341 Call Dictionary`2<Object, Object>.set_Item, X0, X1, X2
	342 Move X0, [X22]
	343 Call 0x1C17F10
	344 Move X1, [X20]
	345 Move W3, 80
	346 Move TEMP, 0
	347 Not TEMP
	348 Move W2, TEMP
	349 NotImplemented "Instruction MOVK not yet implemented."
	350 Move X19, X0
	351 Call BuiltInUriParser..ctor, X0, X1, X2, X3
	352 Move X8, [X21]
	353 Move X8, [X8+184]
	354 Move [X8+80], X19
	355 Compare X19, 0
	356 JumpIfEqual {536}
	357 Move X0, [X8]
	358 Compare X0, 0
	359 JumpIfEqual {536}
	360 Move X1, [X19+32]
	361 Move X3, [X23]
	362 Move X20, 0xB0F000
	363 Move X20, [X20+1584]
	364 Move X2, X19
	365 Call Dictionary`2<Object, Object>.set_Item, X0, X1, X2
	366 Move X0, [X22]
	367 Call 0x1C17F10
	368 Move X1, [X20]
	369 Move W3, 0x4FFC
	370 Move W2, 25
	371 NotImplemented "Instruction MOVK not yet implemented."
	372 Move X19, X0
	373 Call BuiltInUriParser..ctor, X0, X1, X2, X3
	374 Move X8, [X21]
	375 Move X8, [X8+184]
	376 Move [X8+88], X19
	377 Compare X19, 0
	378 JumpIfEqual {536}
	379 Move X0, [X8]
	380 Compare X0, 0
	381 JumpIfEqual {536}
	382 Move X1, [X19+32]
	383 Move X3, [X23]
	384 Move X2, X19
	385 Call Dictionary`2<Object, Object>.set_Item, X0, X1, X2
	386 Move X8, [X21]
	387 Move X8, [X8+184]
	388 Move X8, [X8+80]
	389 Compare X8, 0
	390 JumpIfEqual {536}
	391 Move X0, [X22]
	392 Move X19, 0xB0F000
	393 Move W20, [X8+16]
	394 Move X19, [X19+1528]
	395 Call 0x1C17F10
	396 Move X1, [X19]
	397 Move TEMP, 0
	398 Not TEMP
	399 Move W2, TEMP
	400 Move W3, W20
	401 Move X19, X0
	402 Call BuiltInUriParser..ctor, X0, X1, X2, X3
	403 Move X8, [X21]
	404 Move X8, [X8+184]
	405 Move [X8+96], X19
	406 Compare X19, 0
	407 JumpIfEqual {536}
	408 Move X0, [X8]
	409 Compare X0, 0
	410 JumpIfEqual {536}
	411 Move X1, [X19+32]
	412 Move X3, [X23]
	413 Move X20, 0xB0F000
	414 Move X20, [X20+1512]
	415 Move X2, X19
	416 Call Dictionary`2<Object, Object>.set_Item, X0, X1, X2
	417 Move X0, [X22]
	418 Call 0x1C17F10
	419 Move X1, [X20]
	420 Move W3, 3933
	421 Move W2, 23
	422 NotImplemented "Instruction MOVK not yet implemented."
	423 Move X19, X0
	424 Call BuiltInUriParser..ctor, X0, X1, X2, X3
	425 Move X8, [X21]
	426 Move X8, [X8+184]
	427 Move [X8+104], X19
	428 Compare X19, 0
	429 JumpIfEqual {536}
	430 Move X0, [X8]
	431 Compare X0, 0
	432 JumpIfEqual {536}
	433 Move X1, [X19+32]
	434 Move X3, [X23]
	435 Move X20, 0xB0F000
	436 Move X20, [X20+1544]
	437 Move X2, X19
	438 Call Dictionary`2<Object, Object>.set_Item, X0, X1, X2
	439 Move X0, [X22]
	440 Call 0x1C17F10
	441 Move X1, [X20]
	442 Add W3, W25, 160
	443 Move W2, 389
	444 Move X19, X0
	445 Call BuiltInUriParser..ctor, X0, X1, X2, X3
	446 Move X8, [X21]
	447 Move X8, [X8+184]
	448 Move [X8+112], X19
	449 Compare X19, 0
	450 JumpIfEqual {536}
	451 Move X0, [X8]
	452 Compare X0, 0
	453 JumpIfEqual {536}
	454 Move X1, [X19+32]
	455 Move X3, [X23]
	456 Move X20, 0xB0F000
	457 Move X20, [X20+1576]
	458 Move X2, X19
	459 Call Dictionary`2<Object, Object>.set_Item, X0, X1, X2
	460 Move X0, [X22]
	461 Call 0x1C17F10
	462 Move X1, [X20]
	463 Add W3, W24, 8
	464 Move W2, 808
	465 Move X19, X0
	466 Call BuiltInUriParser..ctor, X0, X1, X2, X3
	467 Move X8, [X21]
	468 Move X8, [X8+184]
	469 Move [X8+120], X19
	470 Compare X19, 0
	471 JumpIfEqual {536}
	472 Move X0, [X8]
	473 Compare X0, 0
	474 JumpIfEqual {536}
	475 Move X1, [X19+32]
	476 Move X3, [X23]
	477 Move X20, 0xB0F000
	478 Move X20, [X20+1504]
	479 Move X2, X19
	480 Call Dictionary`2<Object, Object>.set_Item, X0, X1, X2
	481 Move X0, [X22]
	482 Call 0x1C17F10
	483 Move X1, [X20]
	484 Move W3, 3697
	485 Move TEMP, 0
	486 Not TEMP
	487 Move W2, TEMP
	488 NotImplemented "Instruction MOVK not yet implemented."
	489 Move X19, X0
	490 Call BuiltInUriParser..ctor, X0, X1, X2, X3
	491 Move X8, [X21]
	492 Move X8, [X8+184]
	493 Move [X8+128], X19
	494 Compare X19, 0
	495 JumpIfEqual {536}
	496 Move X0, [X8]
	497 Compare X0, 0
	498 JumpIfEqual {536}
	499 Move X1, [X19+32]
	500 Move X3, [X23]
	501 Move X20, 0xB0F000
	502 Move X20, [X20+1496]
	503 Move X2, X19
	504 Call Dictionary`2<Object, Object>.set_Item, X0, X1, X2
	505 Move X0, [X22]
	506 Call 0x1C17F10
	507 Move X1, [X20]
	508 Move W3, 0x2FD1
	509 Move TEMP, 0
	510 Not TEMP
	511 Move W2, TEMP
	512 NotImplemented "Instruction MOVK not yet implemented."
	513 Move X19, X0
	514 Call BuiltInUriParser..ctor, X0, X1, X2, X3
	515 Move X8, [X21]
	516 Move X8, [X8+184]
	517 Move [X8+136], X19
	518 Compare X19, 0
	519 JumpIfEqual {536}
	520 Move X0, [X8]
	521 Compare X0, 0
	522 JumpIfEqual {536}
	523 Move X1, [X19+32]
	524 Move X3, [X23]
	525 Move X2, X19
	526 Move X20, [X31+48]
	527 Move X19, [X31+56]
	528 Move X22, [X31+32]
	529 Move X21, [X31+40]
	530 Move X24, [X31+16]
	531 Move X23, [X31+24]
	532 Move X30, [X31+64]
	533 Move X25, [X31+72]
	534 Call Dictionary`2<Object, Object>.set_Item, X0, X1, X2
	535 Return 
	536 Call 0x1C17F20

Method: System.UriSyntaxFlags get_Flags()

Disassembly:
	0x0362DA8C MOV X1, X22
	0x0362DA90 MOV X2, X31

ISIL:
	001 Move W0, [X0+16]
	002 Return X0

Method: System.Boolean NotAny(System.UriSyntaxFlags flags)

Disassembly:
	0x0362A060 LDP X29, X30, [X31 + 0x30]
	0x0362A064 ADD X31, X31, 0x90

ISIL:
	001 Move W2, W31
	002 Call UriParser.IsFullMatch, X0, X1, X2
	003 Return X0

Method: System.Boolean InFact(System.UriSyntaxFlags flags)

Disassembly:
	0x0362A044 MOV X4, X31
	0x0362A048 BL 0x322EAE4
	0x0362A04C LDP X20, X19, [X31 + 0x80]
	0x0362A050 LDP X22, X21, [X31 + 0x70]
	0x0362A054 LDP X24, X23, [X31 + 0x60]
	0x0362A058 LDP X26, X25, [X31 + 0x50]
	0x0362A05C LDP X28, X27, [X31 + 0x40]

ISIL:
	001 Move [X31-16], X30
	002 Move W2, W31
	003 Call UriParser.IsFullMatch, X0, X1, X2
	004 NotImplemented "Instruction ORN not yet implemented."
	005 And W0, W8, 1
	006 Move X30, [X31+16]
	007 Return X0

Method: System.Boolean IsAllSet(System.UriSyntaxFlags flags)

Disassembly:
	0x0362DAF0 ADD X3, X31, 0xC
	0x0362DAF4 ADD X4, X31, 0xC

ISIL:
	001 Move W2, W1
	002 Call UriParser.IsFullMatch, X0, X1, X2
	003 Return X0

Method: System.Boolean IsFullMatch(System.UriSyntaxFlags flags, System.UriSyntaxFlags expected)

Disassembly:
	0x0362DA94 BL 0x334CE54
	0x0362DA98 LDP X20, X19, [X31 + 0x30]
	0x0362DA9C LDP X22, X21, [X31 + 0x20]
	0x0362DAA0 LDP X24, X23, [X31 + 0x10]
	0x0362DAA4 LDR X30, [X31], #0x40
	0x0362DAA8 RET
	0x0362DAAC BL 0x1C16F20
	0x0362DAB0 B 0x362DAB4
	0x0362DAB4 MOV X22, X0
	0x0362DAB8 CMP W1, 0x1
	0x0362DABC B.NE 0x362DB38
	0x0362DAC0 MOV X0, X22
	0x0362DAC4 BL 0x3EB1AD0
	0x0362DAC8 MOV X22, X0
	0x0362DACC ADRP X0, 0xACE000
	0x0362DAD0 LDR X0, [X0 + 0x578]
	0x0362DAD4 BL 0x1C16D08
	0x0362DAD8 LDR X8, [X22]
	0x0362DADC LDR X1, [X8]
	0x0362DAE0 BL 0x1C17270
	0x0362DAE4 TBZ X0, 0x0, 0x362DB10
	0x0362DAE8 BL 0x3EB1AE0
	0x0362DAEC MOVZ W8, 0x1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move W19, W2
	007 Move W20, W1
	008 Move X21, X0
	009 Move TEMP, X1
	010 And TEMP, TEMP, 0x2000000
	011 Compare TEMP, 0x2000000
	012 JumpIfNotEqual {22}
	013 Move W22, [X21+24]
	014 Call 0x1C17D44
	015 Compare W22, 0
	016 JumpIfEqual {22}
	017 Move W22, [X21+16]
	018 Move W21, [X21+20]
	019 Call 0x1C17D44
	020 And W8, W22, 0xFDFFFFFF
	021 Or W8, W8, W21
	022 Move W8, [X21+16]
	023 And W8, W8, W20
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move X20, [X31+32]
	026 Move X19, [X31+40]
	027 Move X22, [X31+16]
	028 Move X21, [X31+24]
	029 NotImplemented "Instruction CSET not yet implemented."
	030 Move X30, [X31+48]
	031 Return X0

Method: System.Void .ctor(System.UriSyntaxFlags flags)

Disassembly:
	0x0362DAF8 MOV X0, X21
	0x0362DAFC MOV W1, W20
	0x0362DB00 MOV W2, W19
	0x0362DB04 STRB W8, [X31 + 0xC]
	0x0362DB08 BL 0x362DB44
	0x0362DB0C B 0x362DA98
	0x0362DB10 MOVZ W0, 0x8
	0x0362DB14 BL 0x3EB1AF0
	0x0362DB18 LDR X8, [X22]
	0x0362DB1C STR X8, [X0]
	0x0362DB20 ADRP X1, 0x887000
	0x0362DB24 ADD X1, X1, 0xE58
	0x0362DB28 MOV X2, X31
	0x0362DB2C BL 0x3EB1B00
	0x0362DB30 MOV X22, X0
	0x0362DB34 BL 0x3EB1AE0
	0x0362DB38 MOV X0, X22
	0x0362DB3C BL 0x1D2C690
	0x0362DB40 BL 0x1990590
	0x0362DB44 SUB X31, X31, 0x70
	0x0362DB48 STP X29, X30, [X31 + 0x10]
	0x0362DB4C STP X28, X27, [X31 + 0x20]
	0x0362DB50 STP X26, X25, [X31 + 0x30]
	0x0362DB54 STP X24, X23, [X31 + 0x40]
	0x0362DB58 STP X22, X21, [X31 + 0x50]
	0x0362DB5C STP X20, X19, [X31 + 0x60]
	0x0362DB60 STR X4, [X31]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xDB4000
	007 Move X21, 0xAC9000
	008 Move W8, [X22+1272]
	009 Move X21, [X21+632]
	010 Move W20, W1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xAC9000
	017 Move X0, [X0+632]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+1272], W8
	021 Move X0, X19
	022 Move X1, X31
	023 Call Object..ctor, X0
	024 Move [X19+16], W20
	025 Move X8, [X21]
	026 Move X22, [X31+16]
	027 Move X21, [X31+24]
	028 Move X8, [X8+184]
	029 Move X8, [X8]
	030 Move [X19+32], X8
	031 Move X20, [X31+32]
	032 Move X19, [X31+40]
	033 Move X30, [X31+48]
	034 Return 

Method: System.UriParser FindOrFetchAsUnknownV1Syntax(System.String lwrCaseScheme)

Disassembly:
	0x0362DB64 ADRP X19, 0xDB3000
	0x0362DB68 ADRP X21, 0xAFC000
	0x0362DB6C LDRB W8, [X19 + 0x500]
	0x0362DB70 LDR X21, [X21 + 0xFB0]
	0x0362DB74 MOV X20, X3
	0x0362DB78 MOV W24, W2
	0x0362DB7C MOV W22, W1
	0x0362DB80 MOV X23, X0
	0x0362DB84 TBNZ X8, 0x0, 0x362DBB4
	0x0362DB88 ADRP X0, 0xAFC000
	0x0362DB8C LDR X0, [X0 + 0xFB0]
	0x0362DB90 BL 0x1C16CF4
	0x0362DB94 ADRP X0, 0xAC8000
	0x0362DB98 LDR X0, [X0 + 0xA28]
	0x0362DB9C BL 0x1C16CF4
	0x0362DBA0 ADRP X0, 0xACF000
	0x0362DBA4 LDR X0, [X0 + 0x790]
	0x0362DBA8 BL 0x1C16CF4
	0x0362DBAC MOVZ W8, 0x1
	0x0362DBB0 STRB W8, [X19 + 0x500]
	0x0362DBB4 LDR X0, [X21]
	0x0362DBB8 BL 0x1C16F10
	0x0362DBBC MOV X1, X31
	0x0362DBC0 STR X0, [X31 + 0x8]
	0x0362DBC4 BL 0x334BC78
	0x0362DBC8 MOVZ W8, 0x1
	0x0362DBCC STRB W8, [X20]
	0x0362DBD0 LDR X8, [X31]
	0x0362DBD4 MOV X25, X31
	0x0362DBD8 SUBS W24, W24, W22
	0x0362DBDC STRB W31, [X8]
	0x0362DBE0 B.LE 0x362DE84
	0x0362DBE4 ADRP X8, 0xAC8000
	0x0362DBE8 LDR X8, [X8 + 0xA28]
	0x0362DBEC LDR X0, [X8]
	0x0362DBF0 LDR W8, [X0 + 0xE0]
	0x0362DBF4 CBNZ W8, 0x362DBFC
	0x0362DBF8 BL 0x1C16DFC
	0x0362DBFC MOV X0, X23
	0x0362DC00 MOV W1, W22
	0x0362DC04 MOV W2, W24
	0x0362DC08 MOV X3, X31
	0x0362DC0C BL 0x3623288
	0x0362DC10 CBZ X0, 0x362DEA8
	0x0362DC14 LDR W29, [X0 + 0x10]
	0x0362DC18 MOV X22, X0
	0x0362DC1C MOV W26, W31
	0x0362DC20 MOV X25, X31
	0x0362DC24 MOVZ W23, 0xFF0D
	0x0362DC28 CMP W26, W29
	0x0362DC2C B.GE 0x362DD68
	0x0362DC30 MOV W27, W31
	0x0362DC34 MOV W21, W31
	0x0362DC38 MOVZ W19, 0x1
	0x0362DC3C MOV W24, W26
	0x0362DC40 MOVZ W28, 0x1
	0x0362DC44 MOV X0, X22
	0x0362DC48 MOV W1, W24
	0x0362DC4C MOV X2, X31
	0x0362DC50 BL 0x3222A1C
	0x0362DC54 TBZ X21, 0x0, 0x362DC8C
	0x0362DC58 AND W8, W0, 0xFFFF
	0x0362DC5C CMP W8, 0x80
	0x0362DC60 B.CC 0x362DC74
	0x0362DC64 EOR W9, W28, 0x1
	0x0362DC68 TBNZ X9, 0x0, 0x362DC74
	0x0362DC6C MOV W28, W31
	0x0362DC70 STRB W31, [X20]
	0x0362DC74 CMP W8, W23
	0x0362DC78 B.GT 0x362DCB8
	0x0362DC7C CMP W8, 0x2E
	0x0362DC80 B.EQ 0x362DCEC
	0x0362DC84 MOVZ W9, 0x3002
	0x0362DC88 B 0x362DCC8
	0x0362DC8C ADD W8, W24, 0x3
	0x0362DC90 CMP W8, W29
	0x0362DC94 B.GE 0x362DC58
	0x0362DC98 AND W8, W0, 0xFFFF
	0x0362DC9C CMP W8, 0x78
	0x0362DCA0 B.NE 0x362DC58
	0x0362DCA4 MOV X0, X22
	0x0362DCA8 MOV W1, W24
	0x0362DCAC BL 0x362D990
	0x0362DCB0 ORR W27, W27, W0, 0x0
	0x0362DCB4 B 0x362DCD0
	0x0362DCB8 MOVZ W9, 0xFF0E
	0x0362DCBC CMP W8, W9
	0x0362DCC0 B.EQ 0x362DCEC
	0x0362DCC4 MOVZ W9, 0xFF61
	0x0362DCC8 CMP W8, W9
	0x0362DCCC B.EQ 0x362DCEC
	0x0362DCD0 ADD W24, W24, 0x1
	0x0362DCD4 CMP W24, W29
	0x0362DCD8 CSET W19, LT
	0x0362DCDC CMP W29, W24
	0x0362DCE0 MOVZ W21, 0x1
	0x0362DCE4 B.NE 0x362DC44
	0x0362DCE8 MOV W24, W29
	0x0362DCEC TBZ X28, 0x0, 0x362DD98
	0x0362DCF0 TBZ X27, 0x0, 0x362DD70
	0x0362DCF4 SUB W27, W24, W26
	0x0362DCF8 MOV X0, X22
	0x0362DCFC MOV W1, W26
	0x0362DD00 MOV W2, W27
	0x0362DD04 MOV X3, X31
	0x0362DD08 BL 0x3228DE4
	0x0362DD0C MOV X1, X0
	0x0362DD10 LDR X0, [X31 + 0x8]
	0x0362DD14 CBZ X0, 0x362DE28
	0x0362DD18 MOV X2, X31
	0x0362DD1C BL 0x334CE54
	0x0362DD20 MOV X1, X0
	0x0362DD24 MOV X0, X25
	0x0362DD28 MOV X2, X31
	0x0362DD2C BL 0x321B938
	0x0362DD30 MOV X28, X0
	0x0362DD34 TBZ X19, 0x0, 0x362DD54
	0x0362DD38 ADRP X8, 0xACF000
	0x0362DD3C LDR X8, [X8 + 0x790]
	0x0362DD40 LDR X1, [X8]
	0x0362DD44 MOV X0, X28
	0x0362DD48 MOV X2, X31
	0x0362DD4C BL 0x321B938
	0x0362DD50 MOV X28, X0
	0x0362DD54 LDR X8, [X31]
	0x0362DD58 MOVZ W9, 0x1
	0x0362DD5C MOV X25, X28
	0x0362DD60 STRB W9, [X8]
	0x0362DD64 B 0x362DE14
	0x0362DD68 MOV W19, W31
	0x0362DD6C MOV W24, W26
	0x0362DD70 SUB W27, W24, W26
	0x0362DD74 MOV X0, X22
	0x0362DD78 MOV W1, W26
	0x0362DD7C MOV W2, W27
	0x0362DD80 MOV X3, X31
	0x0362DD84 BL 0x3228DE4
	0x0362DD88 CBZ X0, 0x362DEA8
	0x0362DD8C MOV X1, X31
	0x0362DD90 BL 0x322B6E4
	0x0362DD94 B 0x362DDD4
	0x0362DD98 SUB W2, W24, W26
	0x0362DD9C MOV X0, X22
	0x0362DDA0 MOV W1, W26
	0x0362DDA4 MOV X3, X31
	0x0362DDA8 BL 0x3228DE4
	0x0362DDAC LDR X21, [X31 + 0x8]
	0x0362DDB0 CBZ X21, 0x362DEAC
	0x0362DDB4 MOV X1, X0
	0x0362DDB8 MOV X0, X21
	0x0362DDBC MOV X2, X31
	0x0362DDC0 BL 0x334BDDC
	0x0362DDC4 MOV X1, X0
	0x0362DDC8 MOV X0, X21
	0x0362DDCC MOV X2, X31
	0x0362DDD0 BL 0x334CE54
	0x0362DDD4 MOV X1, X0
	0x0362DDD8 MOV X0, X25
	0x0362DDDC MOV X2, X31
	0x0362DDE0 BL 0x321B938
	0x0362DDE4 MOV X25, X0
	0x0362DDE8 TBZ X19, 0x0, 0x362DE10
	0x0362DDEC ADRP X8, 0xACF000
	0x0362DDF0 LDR X8, [X8 + 0x790]
	0x0362DDF4 MOV X0, X25
	0x0362DDF8 MOV X2, X31
	0x0362DDFC LDR X1, [X8]
	0x0362DE00 BL 0x321B938
	0x0362DE04 MOV X25, X0
	0x0362DE08 MOVZ W19, 0x1
	0x0362DE0C B 0x362DE14
	0x0362DE10 MOV W19, W31
	0x0362DE14 AND W8, W19, 0x1
	0x0362DE18 ADD W26, W24, W8
	0x0362DE1C CMP W26, W29
	0x0362DE20 B.LT 0x362DC28
	0x0362DE24 B 0x362DE84
	0x0362DE28 BL 0x1C16F20
	0x0362DE2C B 0x362DED4
	0x0362DE30 MOV X25, X28

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+32], X22
	004 Move [X31+40], X21
	005 Move [X31+48], X20
	006 Move [X31+56], X19
	007 Move X20, 0xDB4000
	008 Move X22, 0xB0F000
	009 Move W8, [X20+1273]
	010 Move X22, [X22+72]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {39}
	016 Move X0, 0xB0F000
	017 Move X0, [X0+1464]
	018 Call 0x1C17CF4
	019 Move X0, 0xB0F000
	020 Move X0, [X0+1112]
	021 Call 0x1C17CF4
	022 Move X0, 0xB0F000
	023 Move X0, [X0+1472]
	024 Call 0x1C17CF4
	025 Move X0, 0xB0F000
	026 Move X0, [X0+1592]
	027 Call 0x1C17CF4
	028 Move X0, 0xB0F000
	029 Move X0, [X0+1480]
	030 Call 0x1C17CF4
	031 Move X0, 0xB0F000
	032 Move X0, [X0+1488]
	033 Call 0x1C17CF4
	034 Move X0, 0xB0F000
	035 Move X0, [X0+72]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X20+1273], W8
	039 Move X0, [X22]
	040 Move [X31+12], W31
	041 Move [X31+24], X31
	042 Move W8, [X0+224]
	043 Compare W8, 0
	044 JumpIfNotEqual {47}
	045 Call 0x1C17DFC
	046 Move X0, [X22]
	047 Move X8, [X0+184]
	048 Move X0, [X8]
	049 Compare X0, 0
	050 JumpIfEqual {170}
	051 Move X20, 0xB0F000
	052 Move X20, [X20+1112]
	053 Add X2, X31, 24
	054 Move X1, X19
	055 Move X3, [X20]
	056 Call Dictionary`2<Object, Object>.TryGetValue, X0, X1, X2
	057 Move X21, [X31+24]
	058 Compare X21, 0
	059 JumpIfNotEqual {162}
	060 Move X0, [X22]
	061 Move W8, [X0+224]
	062 Compare W8, 0
	063 JumpIfNotEqual {66}
	064 Call 0x1C17DFC
	065 Move X0, [X22]
	066 Move X8, [X0+184]
	067 Move X0, [X8+8]
	068 Compare X0, 0
	069 JumpIfEqual {170}
	070 Move X3, [X20]
	071 Add X2, X31, 24
	072 Move X1, X19
	073 Call Dictionary`2<Object, Object>.TryGetValue, X0, X1, X2
	074 Move X21, [X31+24]
	075 Compare X21, 0
	076 JumpIfNotEqual {162}
	077 Move X0, [X22]
	078 Move W8, [X0+224]
	079 Compare W8, 0
	080 JumpIfNotEqual {83}
	081 Call 0x1C17DFC
	082 Move X0, [X22]
	083 Move X8, [X0+184]
	084 Move X20, [X8]
	085 Move [X31+12], W31
	086 Add X1, X31, 12
	087 Move X0, X20
	088 Move X2, X31
	089 Call Monitor.Enter, X0, X1
	090 Move X0, [X22]
	091 Move W8, [X0+224]
	092 Compare W8, 0
	093 JumpIfNotEqual {96}
	094 Call 0x1C17DFC
	095 Move X0, [X22]
	096 Move X8, [X0+184]
	097 Move X0, [X8+8]
	098 Compare X0, 0
	099 JumpIfEqual {173}
	100 Move X8, 0xB0F000
	101 Move X8, [X8+1592]
	102 Move X1, [X8]
	103 Call Dictionary`2<Object, Object>.get_Count, X0
	104 NotImplemented "Instruction CMP not yet implemented."
	105 Move X8, 0xB0F000
	106 Move X8, [X8+1488]
	107 Move X0, [X8]
	108 Call 0x1C17F10
	109 Move X8, 0xB0F000
	110 Move X8, [X8+1472]
	111 Move X21, X0
	112 Move X2, [X8]
	113 Move W1, 25
	114 Call Dictionary`2<Object, Object>..ctor, X0, X1
	115 Move X0, [X22]
	116 Move W8, [X0+224]
	117 Compare W8, 0
	118 JumpIfNotEqual {121}
	119 Call 0x1C17DFC
	120 Move X0, [X22]
	121 Move X8, [X0+184]
	122 Move [X8+8], X21
	123 Move X8, 0xB0F000
	124 Move X8, [X8+1464]
	125 Move X0, [X8]
	126 Call 0x1C17F10
	127 Move X21, X0
	128 Move W3, 4094
	129 Move TEMP, 0
	130 Not TEMP
	131 Move W2, TEMP
	132 NotImplemented "Instruction MOVK not yet implemented."
	133 Move X1, X19
	134 Call BuiltInUriParser..ctor, X0, X1, X2, X3
	135 Move X0, [X22]
	136 Move [X31+24], X21
	137 Move W8, [X0+224]
	138 Compare W8, 0
	139 JumpIfNotEqual {142}
	140 Call 0x1C17DFC
	141 Move X0, [X22]
	142 Move X8, [X0+184]
	143 Move X0, [X8+8]
	144 Compare X0, 0
	145 JumpIfEqual {174}
	146 Move X8, 0xB0F000
	147 Move X2, [X31+24]
	148 Move X8, [X8+1480]
	149 Move X3, [X8]
	150 Move X1, X19
	151 Call Dictionary`2<Object, Object>.set_Item, X0, X1, X2
	152 Move X21, [X31+24]
	153 Move X19, X31
	154 Move W8, [X31+12]
	155 Compare W8, 0
	156 JumpIfEqual {160}
	157 Move X0, X20
	158 Move X1, X31
	159 Call Monitor.Exit, X0
	160 Compare X19, 0
	161 JumpIfNotEqual {171}
	162 Move X0, X21
	163 Move X20, [X31+48]
	164 Move X19, [X31+56]
	165 Move X22, [X31+32]
	166 Move X21, [X31+40]
	167 Move X30, [X31+16]
	168 Add X31, X31, 64
	169 Return X0
	170 Call 0x1C17F20
	171 Move X0, X19
	172 Call 0x1C17F18
	173 Call 0x1C17F20
	174 Call 0x1C17F20
	175 Move X21, X0
	176 NotImplemented "Instruction CMP not yet implemented."
	177 Move X0, X21
	178 Call 0x3EB2AD0
	179 Move X19, [X0]
	180 Call 0x3EB2AE0
	181 Move X21, X31
	182 Move X19, X31
	183 Move X21, X0
	184 Move W8, [X31+12]
	185 Compare W8, 0
	186 JumpIfEqual {190}
	187 Move X0, X20
	188 Move X1, X31
	189 Call Monitor.Exit, X0
	190 Compare X19, 0
	191 JumpIfNotEqual {194}
	192 Move X0, X21
	193 Call 0x1D2D690
	194 Move X0, X19
	195 Call 0x1C17F18
	196 Call 0x1991590

Method: System.UriParser GetSyntax(System.String lwrCaseScheme)

Disassembly:
	0x03629F74 MOV X1, X23
	0x03629F78 LDR X9, [X8 + 0x2E8]
	0x03629F7C LDR X6, [X8 + 0x2F0]
	0x03629F80 MOV W2, W31
	0x03629F84 MOV W3, W26
	0x03629F88 MOV X4, X28
	0x03629F8C MOV W5, W31
	0x03629F90 BLR X9
	0x03629F94 CBZ W0, 0x3629FEC
	0x03629F98 ADRP X8, 0xB12000
	0x03629F9C LDR X8, [X8 + 0x58]
	0x03629FA0 MOV W27, W0
	0x03629FA4 LDR X0, [X8]
	0x03629FA8 LDR W8, [X0 + 0xE0]
	0x03629FAC CBNZ W8, 0x3629FB4
	0x03629FB0 BL 0x1C16DFC
	0x03629FB4 LDR W8, [X31 + 0x18]
	0x03629FB8 ADD X2, X31, 0x24
	0x03629FBC MOV X0, X24
	0x03629FC0 MOV X1, X22
	0x03629FC4 CMP W8, 0x20
	0x03629FC8 CSET W7, EQ
	0x03629FCC MOVZ W8, 0x1
	0x03629FD0 MOV X3, X28
	0x03629FD4 MOV W4, W27
	0x03629FD8 MOV X5, X23
	0x03629FDC MOV W6, W26
	0x03629FE0 STRB W8, [X31]
	0x03629FE4 BL 0x362A1D8
	0x03629FE8 B 0x3629B38
	0x03629FEC CMP W25, W19
	0x03629FF0 B.GT 0x3629B38
	0x03629FF4 LDR W8, [X31 + 0x24]
	0x03629FF8 LDRH W9, [X21, W25, SXTW]
	0x03629FFC ADD W25, W25, 0x1
	0x0362A000 CMP W25, W19
	0x0362A004 STRH W9, [X24, W8, SXTW]
	0x0362A008 ADD W8, W8, 0x1
	0x0362A00C B.LE 0x3629FF8
	0x0362A010 STR W8, [X31 + 0x24]
	0x0362A014 B 0x3629B38
	0x0362A018 ADD X0, X31, 0x28
	0x0362A01C MOV X1, X31
	0x0362A020 BL 0x32C05E4
	0x0362A024 TBZ X0, 0x0, 0x362A034
	0x0362A028 ADD X0, X31, 0x28
	0x0362A02C MOV X1, X31
	0x0362A030 BL 0x32C0794
	0x0362A034 LDR W3, [X31 + 0x24]
	0x0362A038 MOV X0, X31
	0x0362A03C MOV X1, X22
	0x0362A040 MOV W2, W31

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xDB8000
	007 Move X20, 0xB13000
	008 Move W8, [X21+1274]
	009 Move X20, [X20+72]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0xB13000
	016 Move X0, [X0+1112]
	017 Call 0x1C17CF4
	018 Move X0, 0xB13000
	019 Move X0, [X0+72]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X21+1274], W8
	023 Move X0, [X20]
	024 Move [X31+8], X31
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {30}
	028 Call 0x1C17DFC
	029 Move X0, [X20]
	030 Move X8, [X0+184]
	031 Move X0, [X8]
	032 Compare X0, 0
	033 JumpIfEqual {64}
	034 Move X21, 0xB13000
	035 Move X21, [X21+1112]
	036 Add X2, X31, 8
	037 Move X1, X19
	038 Move X3, [X21]
	039 Call Dictionary`2<Object, Object>.TryGetValue, X0, X1, X2
	040 Move X0, [X31+8]
	041 Compare X0, 0
	042 JumpIfNotEqual {58}
	043 Move X0, [X20]
	044 Move W8, [X0+224]
	045 Compare W8, 0
	046 JumpIfNotEqual {49}
	047 Call 0x1C17DFC
	048 Move X0, [X20]
	049 Move X8, [X0+184]
	050 Move X0, [X8+8]
	051 Compare X0, 0
	052 JumpIfEqual {64}
	053 Move X3, [X21]
	054 Add X2, X31, 8
	055 Move X1, X19
	056 Call Dictionary`2<Object, Object>.TryGetValue, X0, X1, X2
	057 Move X0, [X31+8]
	058 Move X20, [X31+32]
	059 Move X19, [X31+40]
	060 Move X30, [X31+16]
	061 Move X21, [X31+24]
	062 Add X31, X31, 48
	063 Return X0
	064 Call 0x1C17F20

Method: System.Boolean get_IsSimple()

Disassembly:
	0x0362DE34 MOV X28, X0
	0x0362DE38 MOVZ W19, 0x1
	0x0362DE3C B 0x362DE4C

ISIL:
	001 Move W8, [X0+18]
	002 Move W0, W8
	003 ShiftRight W0, 1
	004 And W0, W0, 1
	005 Return X0

Method: System.UriParser InternalOnNewUri()

Disassembly:
	0x0362DE40 B 0x362DE48
	0x0362DE44 B 0x362DE48
	0x0362DE48 MOV X28, X0
	0x0362DE4C CMP W1, 0x1
	0x0362DE50 B.NE 0x362DF94
	0x0362DE54 MOV X0, X28
	0x0362DE58 BL 0x3EB1AD0
	0x0362DE5C MOV X28, X0
	0x0362DE60 ADRP X0, 0xACE000
	0x0362DE64 LDR X0, [X0 + 0x578]
	0x0362DE68 BL 0x1C16D08
	0x0362DE6C LDR X8, [X28]
	0x0362DE70 LDR X1, [X8]
	0x0362DE74 BL 0x1C17270
	0x0362DE78 TBZ X0, 0x0, 0x362DEB0
	0x0362DE7C BL 0x3EB1AE0
	0x0362DE80 B 0x362DD74

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0]
	004 Move X19, X0
	005 Move X9, [X8+376]
	006 Move X1, [X8+384]
	007 NotImplemented "Instruction BLR not yet implemented."
	008 NotImplemented "Instruction CMP not yet implemented."
	009 Compare X0, 0
	010 JumpIfEqual {20}
	011 Move X8, [X19+32]
	012 Move [X0+32], X8
	013 Move W8, [X19+28]
	014 Move [X0+28], W8
	015 Move W8, [X19+16]
	016 Move [X0+16], W8
	017 Move X30, [X31+16]
	018 Move X19, [X31+24]
	019 Return X0
	020 Call 0x1C17F20

Method: System.Void InternalValidate(System.Uri thisUri, out System.UriFormatException parsingError)

Disassembly:
	0x0362DE84 MOV X0, X25
	0x0362DE88 LDP X20, X19, [X31 + 0x60]
	0x0362DE8C LDP X22, X21, [X31 + 0x50]

ISIL:
	001 Move X8, [X0]
	002 Move X4, [X8+392]
	003 Move X3, [X8+400]
	004 CallNoReturn X4

Method: System.String InternalResolve(System.Uri thisBaseUri, System.Uri uriLink, out System.UriFormatException parsingError)

Disassembly:
	0x0362DE90 LDP X24, X23, [X31 + 0x40]
	0x0362DE94 LDP X26, X25, [X31 + 0x30]
	0x0362DE98 LDP X28, X27, [X31 + 0x20]

ISIL:
	001 Move X8, [X0]
	002 Move X5, [X8+408]
	003 Move X4, [X8+416]
	004 CallNoReturn X5

Method: System.Boolean InternalIsBaseOf(System.Uri thisBaseUri, System.Uri uriLink)

Disassembly:
	0x0362DE9C LDP X29, X30, [X31 + 0x10]
	0x0362DEA0 ADD X31, X31, 0x70
	0x0362DEA4 RET

ISIL:
	001 Move X8, [X0]
	002 Move X4, [X8+424]
	003 Move X3, [X8+432]
	004 CallNoReturn X4

Method: System.String InternalGetComponents(System.Uri thisUri, System.UriComponents uriComponents, System.UriFormat uriFormat)

Disassembly:
	0x0362DEA8 BL 0x1C16F20
	0x0362DEAC BL 0x1C16F20
	0x0362DEB0 MOVZ W0, 0x8

ISIL:
	001 Move X8, [X0]
	002 Move X5, [X8+440]
	003 Move X4, [X8+448]
	004 CallNoReturn X5

Method: System.Boolean InternalIsWellFormedOriginalString(System.Uri thisUri)

Disassembly:
	0x0362DEB4 BL 0x3EB1AF0
	0x0362DEB8 LDR X8, [X28]
	0x0362DEBC STR X8, [X0]

ISIL:
	001 Move X8, [X0]
	002 Move X3, [X8+456]
	003 Move X2, [X8+464]
	004 CallNoReturn X3

