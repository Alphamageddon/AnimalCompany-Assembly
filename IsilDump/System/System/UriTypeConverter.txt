Type: System.UriTypeConverter

Method: System.Void .ctor()

Disassembly:
	0x0362F684 MOV X1, X31
	0x0362F688 BL 0x339D764

ISIL:
	001 Move X1, X31
	002 Call TypeConverter..ctor, X0
	003 Return 

Method: System.Boolean CanConvert(System.Type type)

Disassembly:
	0x0362F68C MOV X0, X20
	0x0362F690 MOV X1, X31
	0x0362F694 BL 0x3225708
	0x0362F698 B 0x362F6CC
	0x0362F69C ADRP X0, 0xAEB000
	0x0362F6A0 LDR X0, [X0 + 0x290]
	0x0362F6A4 BL 0x1C16CF4
	0x0362F6A8 MOVZ W8, 0x1
	0x0362F6AC STRB W8, [X21 + 0x761]
	0x0362F6B0 CBNZ X20, 0x362F674
	0x0362F6B4 CBZ W19, 0x362F6C4
	0x0362F6B8 MOVZ W0, 0x18
	0x0362F6BC MOV X1, X31
	0x0362F6C0 BL 0x339D764
	0x0362F6C4 MOV X0, X31
	0x0362F6C8 MOV X19, X31
	0x0362F6CC MOV X1, X19
	0x0362F6D0 LDP X20, X19, [X31 + 0x10]
	0x0362F6D4 LDP X30, X21, [X31], #0x20
	0x0362F6D8 RET
	0x0362F6DC STP X30, X23, [X31 - 0x30]!
	0x0362F6E0 STP X22, X21, [X31 + 0x10]
	0x0362F6E4 STP X20, X19, [X31 + 0x20]
	0x0362F6E8 LDR X19, [X0 + 0x18]
	0x0362F6EC CBZ X19, 0x362F768
	0x0362F6F0 LDP W9, W21, [X0 + 0x10]
	0x0362F6F4 LDR W8, [X19 + 0x10]
	0x0362F6F8 ADRP X23, 0xDAA000
	0x0362F6FC LDRB W10, [X23 + 0x761]
	0x0362F700 ADD W20, W21, W9
	0x0362F704 SUB W22, W8, W9
	0x0362F708 CBNZ W10, 0x362F724
	0x0362F70C ADRP X0, 0xAEB000
	0x0362F710 LDR X0, [X0 + 0x290]
	0x0362F714 BL 0x1C16CF4
	0x0362F718 MOVZ W8, 0x1
	0x0362F71C STRB W8, [X23 + 0x761]
	0x0362F720 LDR W8, [X19 + 0x10]
	0x0362F724 SUBS W8, W8, W20
	0x0362F728 SUB W21, W22, W21
	0x0362F72C B.CC 0x362F738
	0x0362F730 CMP W8, W21
	0x0362F734 B.CS 0x362F744
	0x0362F738 MOVZ W0, 0x18
	0x0362F73C MOV X1, X31
	0x0362F740 BL 0x339D764
	0x0362F744 MOV X0, X19
	0x0362F748 MOV X1, X31
	0x0362F74C BL 0x3225708
	0x0362F750 ADD X0, X0, W20, 0x1, SXTW
	0x0362F754 MOV W1, W21
	0x0362F758 LDP X20, X19, [X31 + 0x20]
	0x0362F75C LDP X22, X21, [X31 + 0x10]
	0x0362F760 LDP X30, X23, [X31], #0x30
	0x0362F764 RET
	0x0362F768 BL 0x1C16F20
	0x0362F76C SUB X31, X31, 0x40

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xDB2000
	007 Move X20, 0xAED000
	008 Move X21, 0xAC5000
	009 Move W8, [X22+1283]
	010 Move X20, [X20+2912]
	011 Move X21, [X21+1728]
	012 Move X19, X1
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {28}
	017 Move X0, 0xAED000
	018 Move X0, [X0+2912]
	019 Call 0x1C17CF4
	020 Move X0, 0xAC5000
	021 Move X0, [X0+1728]
	022 Call 0x1C17CF4
	023 Move X0, 0xB0D000
	024 Move X0, [X0+1632]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X22+1283], W8
	028 Move X0, [X21]
	029 Move X20, [X20]
	030 Move W8, [X0+224]
	031 Compare W8, 0
	032 JumpIfNotEqual {34}
	033 Call 0x1C17DFC
	034 Move X0, X20
	035 Move X1, X31
	036 Call Type.GetTypeFromHandle, X0
	037 Move X1, X0
	038 Move X0, X19
	039 Move X2, X31
	040 Call Type.op_Equality, X0, X1
	041 Move TEMP, X0
	042 And TEMP, TEMP, 1
	043 Compare TEMP, 1
	044 JumpIfNotEqual {52}
	045 Move X20, [X31+32]
	046 Move X19, [X31+40]
	047 Move X22, [X31+16]
	048 Move X21, [X31+24]
	049 Move W0, 1
	050 Move X30, [X31+48]
	051 Return X0
	052 Move X8, 0xB0D000
	053 Move X0, [X21]
	054 Move X8, [X8+1632]
	055 Move W9, [X0+224]
	056 Move X20, [X8]
	057 Compare W9, 0
	058 JumpIfNotEqual {60}
	059 Call 0x1C17DFC
	060 Move X0, X20
	061 Move X1, X31
	062 Call Type.GetTypeFromHandle, X0
	063 Move X1, X0
	064 Move X0, X19
	065 Move X20, [X31+32]
	066 Move X19, [X31+40]
	067 Move X22, [X31+16]
	068 Move X21, [X31+24]
	069 Move X2, X31
	070 Move X30, [X31+48]
	071 Call Type.op_Equality, X0, X1
	072 Return X0

