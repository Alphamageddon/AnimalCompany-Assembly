Type: System.Collections.Generic.LinkedList`1

Method: System.Void .ctor()

Disassembly:
	0x02EEBAE4 TBZ X0, 0x0, 0x2EEBB3C
	0x02EEBAE8 BL 0x3EB1AE0

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Void .ctor(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context)

Disassembly:
	0x02EEBAEC ADRP X0, 0x1210000
	0x02EEBAF0 LDR X0, [X0 + 0x578]
	0x02EEBAF4 BL 0x1C16D08
	0x02EEBAF8 BL 0x1C16F10
	0x02EEBAFC MOV X20, X0
	0x02EEBB00 ADRP X0, 0x1231000
	0x02EEBB04 LDR X0, [X0 + 0x328]
	0x02EEBB08 BL 0x1C16D08
	0x02EEBB0C MOV X21, X0
	0x02EEBB10 ADRP X0, 0x1230000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X1
	005 Move X1, X31
	006 Move X20, X0
	007 Call Object..ctor, X0
	008 Move [X20+40], X19
	009 Move X20, [X31+16]
	010 Move X19, [X31+24]
	011 Move X30, [X31+32]
	012 Return 

Method: System.Int32 get_Count()

Disassembly:
	0x02EEBB14 LDR X0, [X0 + 0x640]
	0x02EEBB18 BL 0x1C16D08

ISIL:
	001 Move W0, [X0+24]
	002 Return X0

Method: System.Collections.Generic.LinkedListNode`1<T> get_First()

Disassembly:
	0x02EEBB1C MOV X2, X0
	0x02EEBB20 MOV X0, X20

ISIL:
	001 Move X0, [X0+16]
	002 Return X0

Method: System.Boolean System.Collections.Generic.ICollection<T>.get_IsReadOnly()

Disassembly:
	0x02EEBB24 MOV X1, X21
	0x02EEBB28 MOV X3, X31

ISIL:
	001 Move W0, W31
	002 Return X0

Method: System.Void System.Collections.Generic.ICollection<T>.Add(T value)

Disassembly:
	0x02EEBB2C BL 0x330E16C
	0x02EEBB30 MOV X0, X20
	0x02EEBB34 MOV X1, X19
	0x02EEBB38 BL 0x1C16DEC

ISIL:
	001 Move X8, [X3+32]
	002 Move X8, [X8+192]
	003 Move X3, [X8+24]
	004 Call 0x2EEBC80, X0, X1
	005 Return 

Method: System.Collections.Generic.LinkedListNode`1<T> AddBefore(System.Collections.Generic.LinkedListNode`1<T> node, T value)

Disassembly:
	0x02EEBB3C MOVZ W0, 0x8
	0x02EEBB40 BL 0x3EB1AF0
	0x02EEBB44 LDR X8, [X20]
	0x02EEBB48 STR X8, [X0]
	0x02EEBB4C ADRP X1, 0xFC9000
	0x02EEBB50 ADD X1, X1, 0xE58
	0x02EEBB54 MOV X2, X31
	0x02EEBB58 BL 0x3EB1B00
	0x02EEBB5C MOV X20, X0
	0x02EEBB60 BL 0x3EB1AE0
	0x02EEBB64 MOV X0, X20
	0x02EEBB68 BL 0x1D2C690
	0x02EEBB6C BL 0x1990590
	0x02EEBB70 SUB X31, X31, 0x70
	0x02EEBB74 STP X30, X19, [X31 + 0x60]
	0x02EEBB78 LDR X8, [X1 + 0x20]
	0x02EEBB7C MOVI V0.2D, 0x0
	0x02EEBB80 MOV X19, X1
	0x02EEBB84 MOV X1, X0
	0x02EEBB88 LDR X8, [X8 + 0xC0]
	0x02EEBB8C ADD X0, X31, 0x0
	0x02EEBB90 LDR X8, [X8 + 0xA0]
	0x02EEBB94 STP V0, V0, [X31 + 0x10]
	0x02EEBB98 STR V0, [X31]
	0x02EEBB9C LDR X8, [X8 + 0x20]
	0x02EEBBA0 LDR X8, [X8 + 0xC0]
	0x02EEBBA4 LDR X2, [X8 + 0x98]
	0x02EEBBA8 BL 0x2BB3BDC
	0x02EEBBAC LDP V1, V0, [X31 + 0x10]
	0x02EEBBB0 LDR V2, [X31]
	0x02EEBBB4 ADD X1, X31, 0x0
	0x02EEBBB8 STP V1, V0, [X31 + 0x40]
	0x02EEBBBC STP V0, V2, [X31 + 0x20]
	0x02EEBBC0 STP V2, V1, [X31]
	0x02EEBBC4 LDR X8, [X19 + 0x20]
	0x02EEBBC8 LDR X8, [X8 + 0xC0]
	0x02EEBBCC LDR X0, [X8 + 0x90]
	0x02EEBBD0 BL 0x1C16E04
	0x02EEBBD4 LDP X30, X19, [X31 + 0x60]
	0x02EEBBD8 ADD X31, X31, 0x70
	0x02EEBBDC RET
	0x02EEBBE0 MOV X1, X31

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X8, [X4+32]
	009 Move X22, X2
	010 Move X23, X4
	011 Move X21, X3
	012 Move X8, [X8+192]
	013 Move X19, X1
	014 Move X20, X0
	015 Move X2, [X8+32]
	016 Call 0x2EEC6E4, X0, X1
	017 Compare X19, 0
	018 JumpIfEqual {52}
	019 Move X8, [X23+32]
	020 Move X24, [X19+16]
	021 Move X8, [X8+192]
	022 Move X0, [X8+8]
	023 Move W8, [X0+309]
	024 Move TEMP, X8
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {29}
	028 Call 0x1C5D684
	029 Call 0x1C17F10
	030 Move X1, X31
	031 Move X23, X0
	032 Call Object..ctor, X0
	033 Move X0, X20
	034 Move X1, X19
	035 Move X2, X23
	036 Move [X23+16], X24
	037 Move [X23+40], X22
	038 Move [X23+48], X21
	039 Call 0x2EEC56C, X0, X1, X2
	040 Move X8, [X20+16]
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Move [X20+16], X23
	043 Move X0, X23
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return X0
	052 Call 0x1C17F20

Method: System.Collections.Generic.LinkedListNode`1<T> AddFirst(T value)

Disassembly:
	0x02EEBBE4 B 0x33BDD8C
	0x02EEBBE8 STR X30, [X31 - 0x20]!
	0x02EEBBEC STP X20, X19, [X31 + 0x10]
	0x02EEBBF0 MOV X19, X1
	0x02EEBBF4 MOV X1, X31
	0x02EEBBF8 MOV X20, X0
	0x02EEBBFC BL 0x33BDD8C
	0x02EEBC00 STR X19, [X20 + 0x28]
	0x02EEBC04 LDP X20, X19, [X31 + 0x10]
	0x02EEBC08 LDR X30, [X31], #0x20
	0x02EEBC0C RET
	0x02EEBC10 LDR W0, [X0 + 0x18]
	0x02EEBC14 RET
	0x02EEBC18 LDR X0, [X0 + 0x10]
	0x02EEBC1C RET
	0x02EEBC20 MOV W0, W31
	0x02EEBC24 RET
	0x02EEBC28 SUB X31, X31, 0x50
	0x02EEBC2C STR X30, [X31 + 0x40]
	0x02EEBC30 LDR X8, [X1 + 0x10]
	0x02EEBC34 LDR V0, [X1]
	0x02EEBC38 ADD X1, X31, 0x20
	0x02EEBC3C STR X8, [X31 + 0x10]
	0x02EEBC40 STR V0, [X31]
	0x02EEBC44 LDR X9, [X2 + 0x20]
	0x02EEBC48 LDR X9, [X9 + 0xC0]
	0x02EEBC4C LDR X2, [X9 + 0x18]
	0x02EEBC50 STR V0, [X31 + 0x2]
	0x02EEBC54 STR X8, [X31 + 0x30]
	0x02EEBC58 BL 0x2EEBDD8
	0x02EEBC5C LDR X30, [X31 + 0x40]
	0x02EEBC60 ADD X31, X31, 0x50
	0x02EEBC64 RET
	0x02EEBC68 SUB X31, X31, 0x50
	0x02EEBC6C STR X30, [X31 + 0x20]
	0x02EEBC70 STP X22, X21, [X31 + 0x30]
	0x02EEBC74 STP X20, X19, [X31 + 0x40]
	0x02EEBC78 LDR X8, [X3 + 0x20]
	0x02EEBC7C MOV X22, X2

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X3+32]
	007 Move X20, X2
	008 Move X21, X1
	009 Move X19, X0
	010 Move X8, [X8+192]
	011 Move X8, [X8+8]
	012 Move W9, [X8+309]
	013 Move TEMP, X9
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {20}
	017 Move X0, X8
	018 Call 0x1C5D684
	019 Move X8, X0
	020 Move X0, X8
	021 Call 0x1C17F10
	022 Move X1, X31
	023 Move X22, X0
	024 Call Object..ctor, X0
	025 Move [X22+16], X19
	026 Move [X22+40], X21
	027 Move [X22+48], X20
	028 Move X1, [X19+16]
	029 Compare X1, 0
	030 JumpIfEqual {35}
	031 Move X0, X19
	032 Move X2, X22
	033 Call 0x2EEC56C, X0, X1, X2
	034 Move [X19+16], X22
	035 Move [X22+24], X22
	036 Move [X22+32], X22
	037 Move V0, [X19+24]
	038 NotImplemented "Instruction MOVI not yet implemented."
	039 Move [X19+16], X22
	040 Add S0, S0, S1
	041 Move [X19+24], D0
	042 Move X0, X22
	043 Move X20, [X31+32]
	044 Move X19, [X31+40]
	045 Move X22, [X31+16]
	046 Move X21, [X31+24]
	047 Move X30, [X31+48]
	048 Return X0

Method: System.Collections.Generic.LinkedListNode`1<T> AddLast(T value)

Disassembly:
	0x02EEBC80 MOV X21, X3
	0x02EEBC84 MOV X19, X1
	0x02EEBC88 LDR X8, [X8 + 0xC0]
	0x02EEBC8C MOV X20, X0
	0x02EEBC90 LDR X2, [X8 + 0x20]
	0x02EEBC94 BL 0x2EEC938
	0x02EEBC98 CBZ X19, 0x2EEBD24
	0x02EEBC9C LDR X8, [X22 + 0x10]
	0x02EEBCA0 LDR V0, [X22]
	0x02EEBCA4 LDR X22, [X19 + 0x10]
	0x02EEBCA8 STR X8, [X31 + 0x10]
	0x02EEBCAC STR V0, [X31]
	0x02EEBCB0 LDR X8, [X21 + 0x20]
	0x02EEBCB4 LDR X8, [X8 + 0xC0]
	0x02EEBCB8 LDR X0, [X8 + 0x8]
	0x02EEBCBC LDRB W8, [X0 + 0x135]
	0x02EEBCC0 TBNZ X8, 0x0, 0x2EEBCC8
	0x02EEBCC4 BL 0x1C5C684
	0x02EEBCC8 BL 0x1C16F10
	0x02EEBCCC MOV X1, X31
	0x02EEBCD0 MOV X21, X0
	0x02EEBCD4 BL 0x33BDD8C
	0x02EEBCD8 STR X22, [X21 + 0x10]
	0x02EEBCDC LDR X8, [X31 + 0x10]
	0x02EEBCE0 LDR V0, [X31]
	0x02EEBCE4 MOV X0, X20
	0x02EEBCE8 MOV X1, X19
	0x02EEBCEC MOV X2, X21
	0x02EEBCF0 STR X8, [X21 + 0x38]
	0x02EEBCF4 STUR V0, [X21 + 0x28]
	0x02EEBCF8 BL 0x2EEC7C0
	0x02EEBCFC LDR X8, [X20 + 0x10]
	0x02EEBD00 CMP X19, X8
	0x02EEBD04 B.NE 0x2EEBD0C
	0x02EEBD08 STR X21, [X20 + 0x10]
	0x02EEBD0C MOV X0, X21
	0x02EEBD10 LDP X20, X19, [X31 + 0x40]
	0x02EEBD14 LDP X22, X21, [X31 + 0x30]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X3+32]
	007 Move X20, X2
	008 Move X21, X1
	009 Move X19, X0
	010 Move X8, [X8+192]
	011 Move X8, [X8+8]
	012 Move W9, [X8+309]
	013 Move TEMP, X9
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {20}
	017 Move X0, X8
	018 Call 0x1C5D684
	019 Move X8, X0
	020 Move X0, X8
	021 Call 0x1C17F10
	022 Move X1, X31
	023 Move X22, X0
	024 Call Object..ctor, X0
	025 Move [X22+16], X19
	026 Move [X22+40], X21
	027 Move [X22+48], X20
	028 Move X1, [X19+16]
	029 Compare X1, 0
	030 JumpIfEqual {34}
	031 Move X0, X19
	032 Move X2, X22
	033 Call 0x2EEC56C, X0, X1, X2
	034 Move [X22+24], X22
	035 Move [X22+32], X22
	036 Move V0, [X19+24]
	037 NotImplemented "Instruction MOVI not yet implemented."
	038 Move [X19+16], X22
	039 Add S0, S0, S1
	040 Move [X19+24], D0
	041 Move X0, X22
	042 Move X20, [X31+32]
	043 Move X19, [X31+40]
	044 Move X22, [X31+16]
	045 Move X21, [X31+24]
	046 Move X30, [X31+48]
	047 Return X0

Method: System.Void AddLast(System.Collections.Generic.LinkedListNode`1<T> node)

Disassembly:
	0x02EEBD18 LDR X30, [X31 + 0x20]
	0x02EEBD1C ADD X31, X31, 0x50
	0x02EEBD20 RET
	0x02EEBD24 BL 0x1C16F20
	0x02EEBD28 SUB X31, X31, 0x40
	0x02EEBD2C STR X30, [X31 + 0x20]
	0x02EEBD30 STP X20, X19, [X31 + 0x30]
	0x02EEBD34 LDR X8, [X1 + 0x10]
	0x02EEBD38 LDR V0, [X1]
	0x02EEBD3C MOV X19, X0
	0x02EEBD40 STR X8, [X31 + 0x10]
	0x02EEBD44 STR V0, [X31]
	0x02EEBD48 LDR X8, [X2 + 0x20]
	0x02EEBD4C LDR X8, [X8 + 0xC0]
	0x02EEBD50 LDR X8, [X8 + 0x8]
	0x02EEBD54 LDRB W9, [X8 + 0x135]
	0x02EEBD58 TBNZ X9, 0x0, 0x2EEBD68
	0x02EEBD5C MOV X0, X8
	0x02EEBD60 BL 0x1C5C684
	0x02EEBD64 MOV X8, X0
	0x02EEBD68 MOV X0, X8
	0x02EEBD6C BL 0x1C16F10
	0x02EEBD70 MOV X1, X31
	0x02EEBD74 MOV X20, X0
	0x02EEBD78 BL 0x33BDD8C
	0x02EEBD7C STR X19, [X20 + 0x10]
	0x02EEBD80 LDR X8, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X2+32]
	005 Move X19, X1
	006 Move X20, X0
	007 Move X8, [X8+192]
	008 Move X2, [X8+64]
	009 Call 0x2EEC64C, X0, X1
	010 Move X1, [X20+16]
	011 Compare X1, 0
	012 JumpIfEqual {18}
	013 Move X0, X20
	014 Move X2, X19
	015 Call 0x2EEC56C, X0, X1, X2
	016 Compare X19, 0
	017 JumpIfNotEqual {27}
	018 Compare X19, 0
	019 JumpIfEqual {32}
	020 Move [X19+24], X19
	021 Move [X19+32], X19
	022 Move V0, [X20+24]
	023 NotImplemented "Instruction MOVI not yet implemented."
	024 Move [X20+16], X19
	025 Add S0, S0, S1
	026 Move [X20+24], D0
	027 Move [X19+16], X20
	028 Move X20, [X31+16]
	029 Move X19, [X31+24]
	030 Move X30, [X31+32]
	031 Return 
	032 Call 0x1C17F20

Method: System.Void Clear()

Disassembly:
	0x02EEBD84 LDR V0, [X31]
	0x02EEBD88 STR X8, [X20 + 0x38]
	0x02EEBD8C STUR V0, [X20 + 0x28]
	0x02EEBD90 LDR X1, [X19 + 0x10]
	0x02EEBD94 CBZ X1, 0x2EEBDAC
	0x02EEBD98 MOV X0, X19
	0x02EEBD9C MOV X2, X20
	0x02EEBDA0 BL 0x2EEC7C0
	0x02EEBDA4 STR X20, [X19 + 0x10]
	0x02EEBDA8 B 0x2EEBDC4
	0x02EEBDAC STP X20, X20, [X20 + 0x18]
	0x02EEBDB0 LDR V0, [X19 + 0x18]
	0x02EEBDB4 MOVI V1.2S, 0x1
	0x02EEBDB8 STR X20, [X19 + 0x10]
	0x02EEBDBC ADD S0.2S, S0.2S, S1.2S
	0x02EEBDC0 STR D0, [X19 + 0x18]
	0x02EEBDC4 MOV X0, X20
	0x02EEBDC8 LDP X20, X19, [X31 + 0x30]
	0x02EEBDCC LDR X30, [X31 + 0x20]
	0x02EEBDD0 ADD X31, X31, 0x40
	0x02EEBDD4 RET
	0x02EEBDD8 SUB X31, X31, 0x40
	0x02EEBDDC STR X30, [X31 + 0x20]
	0x02EEBDE0 STP X20, X19, [X31 + 0x30]
	0x02EEBDE4 LDR X8, [X1 + 0x10]
	0x02EEBDE8 LDR V0, [X1]
	0x02EEBDEC MOV X19, X0

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+16]
	003 Compare X8, 0
	004 JumpIfEqual {25}
	005 Move X10, [X8+24]
	006 Compare X10, 0
	007 JumpIfEqual {21}
	008 Move X11, [X8+16]
	009 Compare X11, 0
	010 JumpIfEqual {32}
	011 Move X9, X10
	012 Move X10, [X11+16]
	013 NotImplemented "Instruction CMP not yet implemented."
	014 Move [X8+16], X31
	015 Move [X8+24], X31
	016 Move [X8+32], X31
	017 Move X10, [X9+24]
	018 Move X8, X9
	019 Compare X10, 0
	020 JumpIfNotEqual {8}
	021 Move X9, X8
	022 Move [X9+16], X31
	023 Move [X9+24], X31
	024 Move [X9+32], X31
	025 Move W8, [X0+28]
	026 Move [X0+16], X31
	027 Add W8, W8, 1
	028 Move [X0+24], W31
	029 Move [X0+28], W8
	030 Move X30, [X31+16]
	031 Return 
	032 Call 0x1C17F20

Method: System.Boolean Contains(T value)

Disassembly:
	0x02EEBDF0 STR X8, [X31 + 0x10]
	0x02EEBDF4 STR V0, [X31]
	0x02EEBDF8 LDR X8, [X2 + 0x20]
	0x02EEBDFC LDR X8, [X8 + 0xC0]
	0x02EEBE00 LDR X8, [X8 + 0x8]
	0x02EEBE04 LDRB W9, [X8 + 0x135]
	0x02EEBE08 TBNZ X9, 0x0, 0x2EEBE18
	0x02EEBE0C MOV X0, X8
	0x02EEBE10 BL 0x1C5C684

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X3+32]
	003 Move X8, [X8+192]
	004 Move X3, [X8+88]
	005 Call 0x2EEBFC8, X0, X1
	006 NotImplemented "Instruction CMP not yet implemented."
	007 NotImplemented "Instruction CSET not yet implemented."
	008 Move X30, [X31+16]
	009 Return X0

Method: System.Void CopyTo(T[] array, System.Int32 index)

Disassembly:
	0x02EEBE14 MOV X8, X0
	0x02EEBE18 MOV X0, X8
	0x02EEBE1C BL 0x1C16F10
	0x02EEBE20 MOV X1, X31
	0x02EEBE24 MOV X20, X0
	0x02EEBE28 BL 0x33BDD8C
	0x02EEBE2C STR X19, [X20 + 0x10]
	0x02EEBE30 LDR X8, [X31 + 0x10]
	0x02EEBE34 LDR V0, [X31]
	0x02EEBE38 STR X8, [X20 + 0x38]
	0x02EEBE3C STUR V0, [X20 + 0x28]
	0x02EEBE40 LDR X1, [X19 + 0x10]
	0x02EEBE44 CBZ X1, 0x2EEBE58
	0x02EEBE48 MOV X0, X19
	0x02EEBE4C MOV X2, X20
	0x02EEBE50 BL 0x2EEC7C0
	0x02EEBE54 B 0x2EEBE70
	0x02EEBE58 STP X20, X20, [X20 + 0x18]
	0x02EEBE5C LDR V0, [X19 + 0x18]
	0x02EEBE60 MOVI V1.2S, 0x1
	0x02EEBE64 STR X20, [X19 + 0x10]
	0x02EEBE68 ADD S0.2S, S0.2S, S1.2S
	0x02EEBE6C STR D0, [X19 + 0x18]
	0x02EEBE70 MOV X0, X20
	0x02EEBE74 LDP X20, X19, [X31 + 0x30]
	0x02EEBE78 LDR X30, [X31 + 0x20]
	0x02EEBE7C ADD X31, X31, 0x40
	0x02EEBE80 RET
	0x02EEBE84 STR X30, [X31 - 0x20]!
	0x02EEBE88 STP X20, X19, [X31 + 0x10]
	0x02EEBE8C LDR X8, [X2 + 0x20]
	0x02EEBE90 MOV X19, X1
	0x02EEBE94 MOV X20, X0
	0x02EEBE98 LDR X8, [X8 + 0xC0]
	0x02EEBE9C LDR X2, [X8 + 0x40]
	0x02EEBEA0 BL 0x2EEC8A0
	0x02EEBEA4 LDR X1, [X20 + 0x10]
	0x02EEBEA8 CBZ X1, 0x2EEBEC0
	0x02EEBEAC MOV X0, X20
	0x02EEBEB0 MOV X2, X19
	0x02EEBEB4 BL 0x2EEC7C0
	0x02EEBEB8 CBNZ X19, 0x2EEBEDC
	0x02EEBEBC B 0x2EEBEEC
	0x02EEBEC0 CBZ X19, 0x2EEBEEC
	0x02EEBEC4 STP X19, X19, [X19 + 0x18]
	0x02EEBEC8 LDR V0, [X20 + 0x18]
	0x02EEBECC MOVI V1.2S, 0x1
	0x02EEBED0 STR X19, [X20 + 0x10]
	0x02EEBED4 ADD S0.2S, S0.2S, S1.2S
	0x02EEBED8 STR D0, [X20 + 0x18]
	0x02EEBEDC STR X20, [X19 + 0x10]
	0x02EEBEE0 LDP X20, X19, [X31 + 0x10]
	0x02EEBEE4 LDR X30, [X31], #0x20
	0x02EEBEE8 RET
	0x02EEBEEC BL 0x1C16F20
	0x02EEBEF0 STR X30, [X31 - 0x10]!
	0x02EEBEF4 LDR X8, [X0 + 0x10]
	0x02EEBEF8 CBZ X8, 0x2EEBF40
	0x02EEBEFC LDR X10, [X8 + 0x18]
	0x02EEBF00 CBZ X10, 0x2EEBF34
	0x02EEBF04 LDR X11, [X8 + 0x10]
	0x02EEBF08 CBZ X11, 0x2EEBF58
	0x02EEBF0C MOV X9, X10
	0x02EEBF10 LDR X10, [X11 + 0x10]
	0x02EEBF14 CMP X9, X10
	0x02EEBF18 B.EQ 0x2EEBF34
	0x02EEBF1C STP X31, X31, [X8 + 0x10]
	0x02EEBF20 STR X31, [X8 + 0x20]
	0x02EEBF24 LDR X10, [X9 + 0x18]
	0x02EEBF28 MOV X8, X9
	0x02EEBF2C CBNZ X10, 0x2EEBF04
	0x02EEBF30 B 0x2EEBF38
	0x02EEBF34 MOV X9, X8
	0x02EEBF38 STP X31, X31, [X9 + 0x10]
	0x02EEBF3C STR X31, [X9 + 0x20]
	0x02EEBF40 LDR W8, [X0 + 0x1C]
	0x02EEBF44 STR X31, [X0 + 0x10]
	0x02EEBF48 ADD W8, W8, 0x1
	0x02EEBF4C STP W31, W8, [X0 + 0x18]
	0x02EEBF50 LDR X30, [X31], #0x10
	0x02EEBF54 RET
	0x02EEBF58 BL 0x1C16F20
	0x02EEBF5C SUB X31, X31, 0x50
	0x02EEBF60 STR X30, [X31 + 0x40]
	0x02EEBF64 LDR X8, [X1 + 0x10]
	0x02EEBF68 LDR V0, [X1]
	0x02EEBF6C ADD X1, X31, 0x20
	0x02EEBF70 STR X8, [X31 + 0x10]
	0x02EEBF74 STR V0, [X31]
	0x02EEBF78 LDR X9, [X2 + 0x20]
	0x02EEBF7C LDR X9, [X9 + 0xC0]
	0x02EEBF80 LDR X2, [X9 + 0x58]
	0x02EEBF84 STR V0, [X31 + 0x2]
	0x02EEBF88 STR X8, [X31 + 0x30]
	0x02EEBF8C BL 0x2EEC180
	0x02EEBF90 LDR X30, [X31 + 0x40]
	0x02EEBF94 CMP X0, 0x0
	0x02EEBF98 CSET W0, NE
	0x02EEBF9C ADD X31, X31, 0x50
	0x02EEBFA0 RET
	0x02EEBFA4 SUB X31, X31, 0x50
	0x02EEBFA8 STR X30, [X31 + 0x20]
	0x02EEBFAC STP X22, X21, [X31 + 0x30]
	0x02EEBFB0 STP X20, X19, [X31 + 0x40]
	0x02EEBFB4 CBZ X1, 0x2EEC048
	0x02EEBFB8 TBNZ X2, 0x1F, 0x2EEC080
	0x02EEBFBC LDR W8, [X1 + 0x18]
	0x02EEBFC0 SUBS W8, W8, W2
	0x02EEBFC4 B.LT 0x2EEC0D0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Compare X1, 0
	007 JumpIfEqual {38}
	008 Move TEMP, X2
	009 And TEMP, TEMP, -2147483648
	010 Compare TEMP, -2147483648
	011 JumpIfEqual {51}
	012 Move W8, [X1+24]
	013 Subtract W8, W8, W2
	014 Move W9, [X0+24]
	015 NotImplemented "Instruction CMP not yet implemented."
	016 Move X8, [X0+16]
	017 Compare X8, 0
	018 JumpIfEqual {30}
	019 Compare X8, 0
	020 JumpIfEqual {36}
	021 Move W9, [X1+24]
	022 NotImplemented "Instruction CMP not yet implemented."
	023 NotImplemented "Instruction LDUR not yet implemented."
	024 Add X9, X1, W2
	025 Add W2, W2, 1
	026 Move [X9+2], V0
	027 Move X8, [X8+24]
	028 Move X9, [X0+16]
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move X20, [X31+32]
	031 Move X19, [X31+40]
	032 Move X22, [X31+16]
	033 Move X21, [X31+24]
	034 Move X30, [X31+48]
	035 Return 
	036 Call 0x1C17F20
	037 Call 0x1C17F28
	038 Move X0, 0x120E000
	039 Move X0, [X0+1320]
	040 Move X19, X3
	041 Call 0x1C17D08
	042 Call 0x1C17F10
	043 Move X20, X0
	044 Move X0, 0x1231000
	045 Move X0, [X0+1600]
	046 Call 0x1C17D08
	047 Move X1, X0
	048 Move X0, X20
	049 Move X2, X31
	050 Call ArgumentNullException..ctor, X0, X1
	051 Move [X31+12], W2
	052 Move X0, 0x1209000
	053 Move X0, [X0+1880]
	054 Move X19, X3
	055 Call 0x1C17D08
	056 Add X1, X31, 12
	057 Call 0x1C17E04
	058 Move X20, X0
	059 Move X0, 0x1211000
	060 Move X0, [X0+1888]
	061 Call 0x1C17D08
	062 Call 0x1C17F10
	063 Move X21, X0
	064 Move X0, 0x1214000
	065 Move X0, [X0+304]
	066 Call 0x1C17D08
	067 Move X22, X0
	068 Move X0, 0x1231000
	069 Move X0, [X0+1648]
	070 Move [X31+8], W2
	071 Move X0, 0x1209000
	072 Move X0, [X0+1880]
	073 Move X19, X3
	074 Call 0x1C17D08
	075 Add X1, X31, 8
	076 Call 0x1C17E04
	077 Move X20, X0
	078 Move X0, 0x1211000
	079 Move X0, [X0+1888]
	080 Call 0x1C17D08
	081 Call 0x1C17F10
	082 Move X21, X0
	083 Move X0, 0x1214000
	084 Move X0, [X0+304]
	085 Call 0x1C17D08
	086 Move X22, X0
	087 Move X0, 0x1235000
	088 Move X0, [X0+272]
	089 Call 0x1C17D08
	090 Move X3, X0
	091 Move X0, X21
	092 Move X1, X22
	093 Move X2, X20
	094 Move X4, X31
	095 Call ArgumentOutOfRangeException..ctor, X0, X1, X2, X3
	096 Move X0, X21
	097 Move X0, 0x1211000
	098 Move X0, [X0+1400]
	099 Move X19, X3
	100 Call 0x1C17D08
	101 Call 0x1C17F10
	102 Move X20, X0
	103 Move X0, 0x1235000
	104 Move X0, [X0+280]
	105 Call 0x1C17D08
	106 Move X1, X0
	107 Move X0, X20
	108 Move X2, X31
	109 Call ArgumentException..ctor, X0, X1
	110 Move X0, X20
	111 Move X1, X19
	112 Call 0x1C17DEC

Method: System.Collections.Generic.LinkedListNode`1<T> Find(T value)

Disassembly:
	0x02EEBFC8 LDR W9, [X0 + 0x18]
	0x02EEBFCC CMP W8, W9
	0x02EEBFD0 B.LT 0x2EEC140
	0x02EEBFD4 LDR X8, [X0 + 0x10]
	0x02EEBFD8 CBZ X8, 0x2EEC02C
	0x02EEBFDC MOVZ W9, 0x18
	0x02EEBFE0 CBZ X8, 0x2EEC040
	0x02EEBFE4 LDR X10, [X8 + 0x38]
	0x02EEBFE8 LDUR V0, [X8 + 0x28]
	0x02EEBFEC STR X10, [X31 + 0x10]
	0x02EEBFF0 STR V0, [X31]
	0x02EEBFF4 LDR W10, [X1 + 0x18]
	0x02EEBFF8 CMP W2, W10
	0x02EEBFFC B.CS 0x2EEC044
	0x02EEC000 LDR X10, [X31 + 0x10]
	0x02EEC004 LDR V0, [X31]
	0x02EEC008 NOP
	0x02EEC00C SMADDL X11, X2, X9, X1
	0x02EEC010 ADD W2, W2, 0x1
	0x02EEC014 STR X10, [X11 + 0x30]
	0x02EEC018 STR V0, [X11 + 0x2]
	0x02EEC01C LDR X8, [X8 + 0x18]
	0x02EEC020 LDR X10, [X0 + 0x10]
	0x02EEC024 CMP X8, X10
	0x02EEC028 B.NE 0x2EEBFE0
	0x02EEC02C LDP X20, X19, [X31 + 0x40]
	0x02EEC030 LDP X22, X21, [X31 + 0x30]
	0x02EEC034 LDR X30, [X31 + 0x20]
	0x02EEC038 ADD X31, X31, 0x50
	0x02EEC03C RET
	0x02EEC040 BL 0x1C16F20
	0x02EEC044 BL 0x1C16F28
	0x02EEC048 ADRP X0, 0x120C000
	0x02EEC04C LDR X0, [X0 + 0x528]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X8, [X3+32]
	008 Move X21, X0
	009 Move X19, [X0+16]
	010 Move X20, X2
	011 Move X8, [X8+192]
	012 Move X22, X1
	013 Move X0, [X8+112]
	014 Call 0x21193BC
	015 Compare X19, 0
	016 JumpIfEqual {39}
	017 Move X23, X0
	018 Compare X19, 0
	019 JumpIfEqual {47}
	020 Compare X23, 0
	021 JumpIfEqual {47}
	022 Move X8, [X23]
	023 Move X1, [X19+40]
	024 Move X2, [X19+48]
	025 Move X0, X23
	026 Move X3, X22
	027 Move X9, [X8+440]
	028 Move X5, [X8+448]
	029 Move X4, X20
	030 NotImplemented "Instruction BLR not yet implemented."
	031 Move TEMP, X0
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfEqual {39}
	035 Move X19, [X19+24]
	036 Move X8, [X21+16]
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move X19, X31
	039 Move X0, X19
	040 Move X20, [X31+32]
	041 Move X19, [X31+40]
	042 Move X22, [X31+16]
	043 Move X21, [X31+24]
	044 Move X30, [X31+48]
	045 Move X23, [X31+56]
	046 Return X0
	047 Call 0x1C17F20

Method: System.Collections.Generic.LinkedList`1/Enumerator<T> GetEnumerator()

Disassembly:
	0x02EEC050 MOV X19, X3
	0x02EEC054 BL 0x1C16D08
	0x02EEC058 BL 0x1C16F10
	0x02EEC05C MOV X20, X0
	0x02EEC060 ADRP X0, 0x122F000
	0x02EEC064 LDR X0, [X0 + 0x640]
	0x02EEC068 BL 0x1C16D08
	0x02EEC06C MOV X1, X0
	0x02EEC070 MOV X0, X20

ISIL:
	001 NotImplemented "Instruction MOVI not yet implemented."
	002 Move [X8+16], V0
	003 Move [X8+24], V0
	004 Move [X8], V0
	005 Move X9, [X1+32]
	006 Move X1, X0
	007 Move X0, X8
	008 Move X9, [X9+192]
	009 Move X2, [X9+152]
	010 Call 0x2BB4BDC, X0, X1
	011 Return X0

Method: System.Collections.Generic.IEnumerator`1<T> System.Collections.Generic.IEnumerable<T>.GetEnumerator()

Disassembly:
	0x02EEC074 MOV X2, X31
	0x02EEC078 BL 0x330E100
	0x02EEC07C B 0x2EEC174
	0x02EEC080 STR W2, [X31 + 0x2C]
	0x02EEC084 ADRP X0, 0x1207000
	0x02EEC088 LDR X0, [X0 + 0x758]
	0x02EEC08C MOV X19, X3
	0x02EEC090 BL 0x1C16D08
	0x02EEC094 ADD X1, X31, 0x2C
	0x02EEC098 BL 0x1C16E04
	0x02EEC09C MOV X20, X0
	0x02EEC0A0 ADRP X0, 0x120F000
	0x02EEC0A4 LDR X0, [X0 + 0x760]
	0x02EEC0A8 BL 0x1C16D08
	0x02EEC0AC BL 0x1C16F10
	0x02EEC0B0 MOV X21, X0
	0x02EEC0B4 ADRP X0, 0x1212000
	0x02EEC0B8 LDR X0, [X0 + 0x130]
	0x02EEC0BC BL 0x1C16D08
	0x02EEC0C0 MOV X22, X0
	0x02EEC0C4 ADRP X0, 0x122F000
	0x02EEC0C8 LDR X0, [X0 + 0x670]
	0x02EEC0CC B 0x2EEC11C
	0x02EEC0D0 STR W2, [X31 + 0x2C]
	0x02EEC0D4 ADRP X0, 0x1207000
	0x02EEC0D8 LDR X0, [X0 + 0x758]
	0x02EEC0DC MOV X19, X3
	0x02EEC0E0 BL 0x1C16D08

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+96], X30
	003 Move [X31+104], X19
	004 Move X8, [X1+32]
	005 NotImplemented "Instruction MOVI not yet implemented."
	006 Move X19, X1
	007 Move X1, X0
	008 Move X8, [X8+192]
	009 Add X0, X31, 0
	010 Move X8, [X8+160]
	011 Move [X31+16], V0
	012 Move [X31+24], V0
	013 Move [X31], V0
	014 Move X8, [X8+32]
	015 Move X8, [X8+192]
	016 Move X2, [X8+152]
	017 Call 0x2BB4BDC, X0, X1
	018 Move V1, [X31+16]
	019 Move V0, [X31+32]
	020 Move V2, [X31]
	021 Add X1, X31, 0
	022 Move [X31+64], V1
	023 Move [X31+72], V0
	024 Move [X31+32], V0
	025 Move [X31+40], V2
	026 Move [X31], V2
	027 Move [X31+8], V1
	028 Move X8, [X19+32]
	029 Move X8, [X8+192]
	030 Move X0, [X8+144]
	031 Call 0x1C17E04
	032 Move X30, [X31+96]
	033 Move X19, [X31+104]
	034 Add X31, X31, 112
	035 Return X0

Method: System.Boolean Remove(T value)

Disassembly:
	0x02EEC0E4 ADD X1, X31, 0x2C
	0x02EEC0E8 BL 0x1C16E04
	0x02EEC0EC MOV X20, X0
	0x02EEC0F0 ADRP X0, 0x120F000
	0x02EEC0F4 LDR X0, [X0 + 0x760]
	0x02EEC0F8 BL 0x1C16D08
	0x02EEC0FC BL 0x1C16F10
	0x02EEC100 MOV X21, X0
	0x02EEC104 ADRP X0, 0x1212000
	0x02EEC108 LDR X0, [X0 + 0x130]
	0x02EEC10C BL 0x1C16D08
	0x02EEC110 MOV X22, X0
	0x02EEC114 ADRP X0, 0x1233000
	0x02EEC118 LDR X0, [X0 + 0x110]
	0x02EEC11C BL 0x1C16D08
	0x02EEC120 MOV X3, X0
	0x02EEC124 MOV X0, X21
	0x02EEC128 MOV X1, X22
	0x02EEC12C MOV X2, X20
	0x02EEC130 MOV X4, X31
	0x02EEC134 BL 0x3312C8C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X3+32]
	006 Move X19, X3
	007 Move X20, X0
	008 Move X8, [X8+192]
	009 Move X3, [X8+88]
	010 Call 0x2EEBFC8, X0, X1
	011 Move X21, X0
	012 Compare X0, 0
	013 JumpIfEqual {20}
	014 Move X8, [X19+32]
	015 Move X0, X20
	016 Move X1, X21
	017 Move X8, [X8+192]
	018 Move X2, [X8+176]
	019 Call 0x2EEC5DC, X0, X1
	020 Move X20, [X31+16]
	021 Move X19, [X31+24]
	022 NotImplemented "Instruction CMP not yet implemented."
	023 NotImplemented "Instruction CSET not yet implemented."
	024 Move X30, [X31+32]
	025 Move X21, [X31+40]
	026 Return X0

Method: System.Void Remove(System.Collections.Generic.LinkedListNode`1<T> node)

Disassembly:
	0x02EEC138 MOV X0, X21
	0x02EEC13C B 0x2EEC178
	0x02EEC140 ADRP X0, 0x120F000
	0x02EEC144 LDR X0, [X0 + 0x578]
	0x02EEC148 MOV X19, X3
	0x02EEC14C BL 0x1C16D08
	0x02EEC150 BL 0x1C16F10
	0x02EEC154 MOV X20, X0
	0x02EEC158 ADRP X0, 0x1233000
	0x02EEC15C LDR X0, [X0 + 0x118]
	0x02EEC160 BL 0x1C16D08
	0x02EEC164 MOV X1, X0
	0x02EEC168 MOV X0, X20
	0x02EEC16C MOV X2, X31
	0x02EEC170 BL 0x3314A68
	0x02EEC174 MOV X0, X20
	0x02EEC178 MOV X1, X19

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X2+32]
	006 Move X19, X2
	007 Move X20, X1
	008 Move X21, X0
	009 Move X8, [X8+192]
	010 Move X2, [X8+32]
	011 Call 0x2EEC6E4, X0, X1
	012 Move X8, [X19+32]
	013 Move X1, X20
	014 Move X20, [X31+16]
	015 Move X19, [X31+24]
	016 Move X0, X21
	017 Move X8, [X8+192]
	018 Move X2, [X8+176]
	019 Move X30, [X31+32]
	020 Move X21, [X31+40]
	021 Call 0x2EEC5DC, X0, X1
	022 Return 

Method: System.Void RemoveFirst()

Disassembly:
	0x02EEC17C BL 0x1C16DEC
	0x02EEC180 SUB X31, X31, 0xB0
	0x02EEC184 STR X30, [X31 + 0x80]
	0x02EEC188 STP X22, X21, [X31 + 0x90]
	0x02EEC18C STP X20, X19, [X31 + 0xA0]
	0x02EEC190 LDR X8, [X2 + 0x20]
	0x02EEC194 MOV X20, X0
	0x02EEC198 LDR X19, [X0 + 0x10]
	0x02EEC19C MOV X21, X1
	0x02EEC1A0 LDR X8, [X8 + 0xC0]
	0x02EEC1A4 LDR X0, [X8 + 0x70]
	0x02EEC1A8 BL 0x2EFB340
	0x02EEC1AC CBZ X19, 0x2EEC230
	0x02EEC1B0 MOV X22, X0
	0x02EEC1B4 CBZ X19, 0x2EEC248
	0x02EEC1B8 LDR X8, [X19 + 0x38]
	0x02EEC1BC LDUR V0, [X19 + 0x28]
	0x02EEC1C0 STR X8, [X31 + 0x30]
	0x02EEC1C4 STR V0, [X31 + 0x2]
	0x02EEC1C8 LDR X8, [X21 + 0x10]
	0x02EEC1CC LDR V0, [X21]
	0x02EEC1D0 STR X8, [X31 + 0x10]
	0x02EEC1D4 STR V0, [X31]
	0x02EEC1D8 CBZ X22, 0x2EEC248
	0x02EEC1DC LDR X8, [X22]
	0x02EEC1E0 LDR V0, [X31 + 0x2]
	0x02EEC1E4 LDR X9, [X31 + 0x30]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X0+16]
	005 Compare X8, 0
	006 JumpIfEqual {16}
	007 Move X9, [X1+32]
	008 Move X20, [X31+16]
	009 Move X19, [X31+24]
	010 Move X1, X8
	011 Move X9, [X9+192]
	012 Move X2, [X9+176]
	013 Move X30, [X31+32]
	014 Call 0x2EEC5DC, X0, X1
	015 Return 
	016 Move X0, 0x1208000
	017 Move X0, [X0+1456]
	018 Move X19, X1
	019 Call 0x1C17D08
	020 Call 0x1C17F10
	021 Move X20, X0
	022 Move X0, 0x1234000
	023 Move X0, [X0+288]
	024 Call 0x1C17D08
	025 Move X1, X0
	026 Move X0, X20
	027 Move X2, X31
	028 Call InvalidOperationException..ctor, X0, X1
	029 Move X0, X20
	030 Move X1, X19
	031 Call 0x1C17DEC

Method: System.Void GetObjectData(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context)

Disassembly:
	0x02EEC1E8 LDR V1, [X31]
	0x02EEC1EC LDR X10, [X31 + 0x10]
	0x02EEC1F0 LDR X11, [X8 + 0x1B8]
	0x02EEC1F4 STR V0, [X31 + 0x6]
	0x02EEC1F8 STR X9, [X31 + 0x70]
	0x02EEC1FC STR V1, [X31 + 0x4]
	0x02EEC200 STR X10, [X31 + 0x50]
	0x02EEC204 LDR X3, [X8 + 0x1C0]
	0x02EEC208 ADD X1, X31, 0x60
	0x02EEC20C ADD X2, X31, 0x40
	0x02EEC210 MOV X0, X22
	0x02EEC214 BLR X11
	0x02EEC218 TBNZ X0, 0x0, 0x2EEC230
	0x02EEC21C LDR X19, [X19 + 0x18]
	0x02EEC220 LDR X8, [X20 + 0x10]
	0x02EEC224 CMP X19, X8
	0x02EEC228 B.NE 0x2EEC1B4
	0x02EEC22C MOV X19, X31
	0x02EEC230 MOV X0, X19
	0x02EEC234 LDP X20, X19, [X31 + 0xA0]
	0x02EEC238 LDP X22, X21, [X31 + 0x90]
	0x02EEC23C LDR X30, [X31 + 0x80]
	0x02EEC240 ADD X31, X31, 0xB0
	0x02EEC244 RET
	0x02EEC248 BL 0x1C16F20
	0x02EEC24C MOVI V0.2D, 0x0
	0x02EEC250 STR X31, [X8 + 0x30]
	0x02EEC254 STP V0, V0, [X8 + 0x10]
	0x02EEC258 STR V0, [X8]
	0x02EEC25C LDR X9, [X1 + 0x20]
	0x02EEC260 MOV X1, X0
	0x02EEC264 MOV X0, X8
	0x02EEC268 LDR X9, [X9 + 0xC0]
	0x02EEC26C LDR X2, [X9 + 0x98]
	0x02EEC270 B 0x2BB434C
	0x02EEC274 SUB X31, X31, 0x90
	0x02EEC278 STP X30, X19, [X31 + 0x80]
	0x02EEC27C LDR X8, [X1 + 0x20]
	0x02EEC280 MOVI V0.2D, 0x0
	0x02EEC284 MOV X19, X1
	0x02EEC288 MOV X1, X0
	0x02EEC28C LDR X8, [X8 + 0xC0]
	0x02EEC290 ADD X0, X31, 0x0
	0x02EEC294 LDR X8, [X8 + 0xA0]
	0x02EEC298 STR X31, [X31 + 0x30]
	0x02EEC29C STP V0, V0, [X31 + 0x10]
	0x02EEC2A0 STR V0, [X31]
	0x02EEC2A4 LDR X8, [X8 + 0x20]
	0x02EEC2A8 LDR X8, [X8 + 0xC0]
	0x02EEC2AC LDR X2, [X8 + 0x98]
	0x02EEC2B0 BL 0x2BB434C
	0x02EEC2B4 LDR X8, [X31 + 0x30]
	0x02EEC2B8 LDP V1, V0, [X31 + 0x10]
	0x02EEC2BC LDR V2, [X31]
	0x02EEC2C0 ADD X1, X31, 0x0
	0x02EEC2C4 STR X8, [X31 + 0x70]
	0x02EEC2C8 STP V1, V0, [X31 + 0x50]
	0x02EEC2CC STR V2, [X31 + 0x4]
	0x02EEC2D0 STP V2, V1, [X31]
	0x02EEC2D4 STR V0, [X31 + 0x2]
	0x02EEC2D8 STR X8, [X31 + 0x30]
	0x02EEC2DC LDR X8, [X19 + 0x20]
	0x02EEC2E0 LDR X8, [X8 + 0xC0]
	0x02EEC2E4 LDR X0, [X8 + 0x90]
	0x02EEC2E8 BL 0x1C16E04
	0x02EEC2EC LDP X30, X19, [X31 + 0x80]
	0x02EEC2F0 ADD X31, X31, 0x90
	0x02EEC2F4 RET
	0x02EEC2F8 SUB X31, X31, 0x60
	0x02EEC2FC STP X30, X21, [X31 + 0x40]
	0x02EEC300 STP X20, X19, [X31 + 0x50]
	0x02EEC304 LDR X8, [X1 + 0x10]
	0x02EEC308 LDR V0, [X1]
	0x02EEC30C MOV X20, X2
	0x02EEC310 ADD X1, X31, 0x20
	0x02EEC314 STR X8, [X31 + 0x10]
	0x02EEC318 STR V0, [X31]
	0x02EEC31C LDR X9, [X2 + 0x20]
	0x02EEC320 MOV X19, X0
	0x02EEC324 LDR X9, [X9 + 0xC0]
	0x02EEC328 LDR X2, [X9 + 0x58]
	0x02EEC32C STR V0, [X31 + 0x2]
	0x02EEC330 STR X8, [X31 + 0x30]
	0x02EEC334 BL 0x2EEC180
	0x02EEC338 MOV X21, X0
	0x02EEC33C CBZ X0, 0x2EEC358
	0x02EEC340 LDR X8, [X20 + 0x20]
	0x02EEC344 MOV X0, X19
	0x02EEC348 MOV X1, X21
	0x02EEC34C LDR X8, [X8 + 0xC0]
	0x02EEC350 LDR X2, [X8 + 0xB0]
	0x02EEC354 BL 0x2EEC830
	0x02EEC358 CMP X21, 0x0
	0x02EEC35C LDP X20, X19, [X31 + 0x50]
	0x02EEC360 LDP X30, X21, [X31 + 0x40]
	0x02EEC364 CSET W0, NE
	0x02EEC368 ADD X31, X31, 0x60
	0x02EEC36C RET
	0x02EEC370 STP X30, X21, [X31 - 0x20]!
	0x02EEC374 STP X20, X19, [X31 + 0x10]
	0x02EEC378 LDR X8, [X2 + 0x20]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0x14F0000
	009 Move W8, [X22+2928]
	010 Move X19, X4
	011 Move X20, X1
	012 Move X21, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {31}
	017 Move X0, 0x1208000
	018 Move X0, [X0+1728]
	019 Call 0x1C17CF4
	020 Move X0, 0x1232000
	021 Move X0, [X0+712]
	022 Call 0x1C17CF4
	023 Move X0, 0x1234000
	024 Move X0, [X0+296]
	025 Call 0x1C17CF4
	026 Move X0, 0x1209000
	027 Move X0, [X0+672]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X22+2928], W8
	031 Compare X20, 0
	032 JumpIfEqual {106}
	033 Move X8, 0x1209000
	034 Move X8, [X8+672]
	035 Move W2, [X21+28]
	036 Move X22, 0x1232000
	037 Move X0, X20
	038 Move X1, [X8]
	039 Move X22, [X22+712]
	040 Move X3, X31
	041 Call SerializationInfo.AddValue, X0, X1, X2
	042 Move W2, [X21+24]
	043 Move X1, [X22]
	044 Move X0, X20
	045 Move X3, X31
	046 Call SerializationInfo.AddValue, X0, X1, X2
	047 Move W22, [X21+24]
	048 Compare W22, 0
	049 JumpIfEqual {98}
	050 Move X8, [X19+32]
	051 Move X24, 0x1208000
	052 Move X8, [X8+192]
	053 Move X0, [X8+184]
	054 Move W8, [X0+309]
	055 Move X24, [X24+1728]
	056 Move TEMP, X8
	057 And TEMP, TEMP, 1
	058 Compare TEMP, 1
	059 JumpIfEqual {61}
	060 Call 0x1C5D684
	061 Move X23, 0x1234000
	062 Move X23, [X23+296]
	063 Move W1, W22
	064 Call 0x1C17D6C
	065 Move X8, [X19+32]
	066 Move X22, X0
	067 Move X0, X21
	068 Move X1, X22
	069 Move X8, [X8+192]
	070 Move W2, W31
	071 Move X3, [X8+192]
	072 Call 0x2EEBE14, X0, X1, X2
	073 Move X8, [X19+32]
	074 Move X0, [X24]
	075 Move X8, [X8+192]
	076 Move W9, [X0+224]
	077 Move X19, [X8+200]
	078 Compare W9, 0
	079 JumpIfNotEqual {81}
	080 Call 0x1C17DFC
	081 Move X0, X19
	082 Move X1, X31
	083 Call Type.GetTypeFromHandle, X0
	084 Move X1, [X23]
	085 Move X3, X0
	086 Move X0, X20
	087 Move X2, X22
	088 Move X20, [X31+48]
	089 Move X19, [X31+56]
	090 Move X22, [X31+32]
	091 Move X21, [X31+40]
	092 Move X24, [X31+16]
	093 Move X23, [X31+24]
	094 Move X4, X31
	095 Move X30, [X31+64]
	096 Call SerializationInfo.AddValue, X0, X1, X2, X3
	097 Return 
	098 Move X20, [X31+48]
	099 Move X19, [X31+56]
	100 Move X22, [X31+32]
	101 Move X21, [X31+40]
	102 Move X24, [X31+16]
	103 Move X23, [X31+24]
	104 Move X30, [X31+64]
	105 Return 
	106 Move X0, 0x120D000
	107 Move X0, [X0+1320]
	108 Call 0x1C17D08
	109 Call 0x1C17F10
	110 Move X20, X0
	111 Move X0, 0x1232000
	112 Move X0, [X0+728]
	113 Call 0x1C17D08
	114 Move X1, X0
	115 Move X0, X20
	116 Move X2, X31
	117 Call ArgumentNullException..ctor, X0, X1
	118 Move X0, X20
	119 Move X1, X19
	120 Call 0x1C17DEC

Method: System.Void OnDeserialization(System.Object sender)

Disassembly:
	0x02EEC37C MOV X19, X2
	0x02EEC380 MOV X20, X1
	0x02EEC384 MOV X21, X0
	0x02EEC388 LDR X8, [X8 + 0xC0]
	0x02EEC38C LDR X2, [X8 + 0x20]
	0x02EEC390 BL 0x2EEC938
	0x02EEC394 LDR X8, [X19 + 0x20]
	0x02EEC398 MOV X1, X20
	0x02EEC39C LDP X20, X19, [X31 + 0x10]
	0x02EEC3A0 MOV X0, X21
	0x02EEC3A4 LDR X8, [X8 + 0xC0]
	0x02EEC3A8 LDR X2, [X8 + 0xB0]
	0x02EEC3AC LDP X30, X21, [X31], #0x20
	0x02EEC3B0 B 0x2EEC830
	0x02EEC3B4 STR X30, [X31 - 0x20]!
	0x02EEC3B8 STP X20, X19, [X31 + 0x10]
	0x02EEC3BC LDR X8, [X0 + 0x10]
	0x02EEC3C0 CBZ X8, 0x2EEC3E0
	0x02EEC3C4 LDR X9, [X1 + 0x20]
	0x02EEC3C8 LDP X20, X19, [X31 + 0x10]
	0x02EEC3CC MOV X1, X8
	0x02EEC3D0 LDR X9, [X9 + 0xC0]
	0x02EEC3D4 LDR X2, [X9 + 0xB0]
	0x02EEC3D8 LDR X30, [X31], #0x20
	0x02EEC3DC B 0x2EEC830
	0x02EEC3E0 ADRP X0, 0x1207000
	0x02EEC3E4 LDR X0, [X0 + 0x5B0]
	0x02EEC3E8 MOV X19, X1
	0x02EEC3EC BL 0x1C16D08
	0x02EEC3F0 BL 0x1C16F10
	0x02EEC3F4 MOV X20, X0
	0x02EEC3F8 ADRP X0, 0x1233000
	0x02EEC3FC LDR X0, [X0 + 0x120]
	0x02EEC400 BL 0x1C16D08
	0x02EEC404 MOV X1, X0
	0x02EEC408 MOV X0, X20
	0x02EEC40C MOV X2, X31
	0x02EEC410 BL 0x337DF1C
	0x02EEC414 MOV X0, X20
	0x02EEC418 MOV X1, X19
	0x02EEC41C BL 0x1C16DEC
	0x02EEC420 STR X30, [X31 - 0x40]!
	0x02EEC424 STP X24, X23, [X31 + 0x10]
	0x02EEC428 STP X22, X21, [X31 + 0x20]
	0x02EEC42C STP X20, X19, [X31 + 0x30]
	0x02EEC430 ADRP X22, 0x14EF000
	0x02EEC434 LDRB W8, [X22 + 0xB74]
	0x02EEC438 MOV X19, X4
	0x02EEC43C MOV X20, X1
	0x02EEC440 MOV X21, X0
	0x02EEC444 TBNZ X8, 0x0, 0x2EEC480
	0x02EEC448 ADRP X0, 0x1207000
	0x02EEC44C LDR X0, [X0 + 0x6C0]
	0x02EEC450 BL 0x1C16CF4
	0x02EEC454 ADRP X0, 0x1231000
	0x02EEC458 LDR X0, [X0 + 0x2C8]
	0x02EEC45C BL 0x1C16CF4
	0x02EEC460 ADRP X0, 0x1233000
	0x02EEC464 LDR X0, [X0 + 0x128]
	0x02EEC468 BL 0x1C16CF4
	0x02EEC46C ADRP X0, 0x1208000
	0x02EEC470 LDR X0, [X0 + 0x2A0]
	0x02EEC474 BL 0x1C16CF4
	0x02EEC478 MOVZ W8, 0x1
	0x02EEC47C STRB W8, [X22 + 0xB74]
	0x02EEC480 CBZ X20, 0x2EEC578
	0x02EEC484 ADRP X8, 0x1208000
	0x02EEC488 LDR X8, [X8 + 0x2A0]
	0x02EEC48C LDR W2, [X21 + 0x1C]
	0x02EEC490 ADRP X22, 0x1231000
	0x02EEC494 MOV X0, X20
	0x02EEC498 LDR X1, [X8]
	0x02EEC49C LDR X22, [X22 + 0x2C8]
	0x02EEC4A0 MOV X3, X31
	0x02EEC4A4 BL 0x32A8F28
	0x02EEC4A8 LDR W2, [X21 + 0x18]
	0x02EEC4AC LDR X1, [X22]
	0x02EEC4B0 MOV X0, X20
	0x02EEC4B4 MOV X3, X31
	0x02EEC4B8 BL 0x32A8F28
	0x02EEC4BC LDR W22, [X21 + 0x18]
	0x02EEC4C0 CBZ W22, 0x2EEC564
	0x02EEC4C4 LDR X8, [X19 + 0x20]
	0x02EEC4C8 ADRP X24, 0x1207000
	0x02EEC4CC LDR X8, [X8 + 0xC0]
	0x02EEC4D0 LDR X0, [X8 + 0xB8]
	0x02EEC4D4 LDRB W8, [X0 + 0x135]
	0x02EEC4D8 LDR X24, [X24 + 0x6C0]
	0x02EEC4DC TBNZ X8, 0x0, 0x2EEC4E4
	0x02EEC4E0 BL 0x1C5C684
	0x02EEC4E4 ADRP X23, 0x1233000
	0x02EEC4E8 LDR X23, [X23 + 0x128]
	0x02EEC4EC MOV W1, W22
	0x02EEC4F0 BL 0x1C16D6C
	0x02EEC4F4 LDR X8, [X19 + 0x20]
	0x02EEC4F8 MOV X22, X0
	0x02EEC4FC MOV X0, X21
	0x02EEC500 MOV X1, X22
	0x02EEC504 LDR X8, [X8 + 0xC0]
	0x02EEC508 MOV W2, W31
	0x02EEC50C LDR X3, [X8 + 0xC0]
	0x02EEC510 BL 0x2EEBFA4
	0x02EEC514 LDR X8, [X19 + 0x20]
	0x02EEC518 LDR X0, [X24]
	0x02EEC51C LDR X8, [X8 + 0xC0]
	0x02EEC520 LDR W9, [X0 + 0xE0]
	0x02EEC524 LDR X19, [X8 + 0xC8]
	0x02EEC528 CBNZ W9, 0x2EEC530
	0x02EEC52C BL 0x1C16DFC
	0x02EEC530 MOV X0, X19
	0x02EEC534 MOV X1, X31
	0x02EEC538 BL 0x338C698
	0x02EEC53C LDR X1, [X23]
	0x02EEC540 MOV X3, X0
	0x02EEC544 MOV X0, X20
	0x02EEC548 MOV X2, X22
	0x02EEC54C LDP X20, X19, [X31 + 0x30]
	0x02EEC550 LDP X22, X21, [X31 + 0x20]
	0x02EEC554 LDP X24, X23, [X31 + 0x10]
	0x02EEC558 MOV X4, X31
	0x02EEC55C LDR X30, [X31], #0x40
	0x02EEC560 B 0x32A89BC
	0x02EEC564 LDP X20, X19, [X31 + 0x30]
	0x02EEC568 LDP X22, X21, [X31 + 0x20]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x14F0000
	009 Move W8, [X21+2929]
	010 Move X19, X2
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {30}
	016 Move X0, 0x1208000
	017 Move X0, [X0+1728]
	018 Call 0x1C17CF4
	019 Move X0, 0x1232000
	020 Move X0, [X0+712]
	021 Call 0x1C17CF4
	022 Move X0, 0x1234000
	023 Move X0, [X0+296]
	024 Call 0x1C17CF4
	025 Move X0, 0x1209000
	026 Move X0, [X0+672]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X21+2929], W8
	030 Move X0, [X20+40]
	031 Compare X0, 0
	032 JumpIfEqual {113}
	033 Move X8, 0x1209000
	034 Move X8, [X8+672]
	035 Move X2, X31
	036 Move X1, [X8]
	037 Call SerializationInfo.GetInt32, X0, X1
	038 Move X8, [X20+40]
	039 Compare X8, 0
	040 JumpIfEqual {122}
	041 Move X9, 0x1232000
	042 Move X9, [X9+712]
	043 Move W21, W0
	044 Move X0, X8
	045 Move X2, X31
	046 Move X1, [X9]
	047 Call SerializationInfo.GetInt32, X0, X1
	048 Compare W0, 0
	049 JumpIfEqual {110}
	050 Move X9, 0x1208000
	051 Move X8, [X19+32]
	052 Move X9, [X9+1728]
	053 Move X22, [X20+40]
	054 Move X8, [X8+192]
	055 Move X0, [X9]
	056 Move X23, [X8+200]
	057 Move W9, [X0+224]
	058 Compare W9, 0
	059 JumpIfNotEqual {61}
	060 Call 0x1C17DFC
	061 Move X0, X23
	062 Move X1, X31
	063 Call Type.GetTypeFromHandle, X0
	064 Compare X22, 0
	065 JumpIfEqual {122}
	066 Move X8, 0x1234000
	067 Move X8, [X8+296]
	068 Move X2, X0
	069 Move X0, X22
	070 Move X3, X31
	071 Move X1, [X8]
	072 Call SerializationInfo.GetValue, X0, X1, X2
	073 Move X8, [X19+32]
	074 Move X24, X0
	075 Move X8, [X8+192]
	076 Move X23, [X8+96]
	077 Move W8, [X23+309]
	078 Move TEMP, X8
	079 And TEMP, TEMP, 1
	080 Compare TEMP, 1
	081 JumpIfEqual {85}
	082 Move X0, X23
	083 Call 0x1C5D684
	084 Move X23, X0
	085 Compare X24, 0
	086 JumpIfEqual {123}
	087 Move X0, X24
	088 Move X1, X23
	089 Call 0x1C17E00
	090 Compare X0, 0
	091 JumpIfEqual {138}
	092 Move X8, [X0+24]
	093 Move X22, X0
	094 NotImplemented "Instruction CMP not yet implemented."
	095 Move X23, X31
	096 And X8, X8, 0
	097 Add X24, X22, 40
	098 NotImplemented "Instruction CMP not yet implemented."
	099 Move X8, [X19+32]
	100 Move X1, [X24-8]
	101 Move X2, [X24]
	102 Move X0, X20
	103 Move X8, [X8+192]
	104 Move X3, [X8+24]
	105 Call 0x2EEBC80, X0, X1
	106 Move W8, [X22+24]
	107 Add X23, X23, 1
	108 Add X24, X24, 16
	109 NotImplemented "Instruction CMP not yet implemented."
	110 Move [X20+16], X31
	111 Move [X20+28], W21
	112 Move [X20+40], X31
	113 Move X20, [X31+48]
	114 Move X19, [X31+56]
	115 Move X22, [X31+32]
	116 Move X21, [X31+40]
	117 Move X24, [X31+16]
	118 Move X23, [X31+24]
	119 Move X30, [X31+64]
	120 Return 
	121 Call 0x1C17F28
	122 Call 0x1C17F20
	123 Move X0, 0x1232000
	124 Move X0, [X0+736]
	125 Call 0x1C17D08
	126 Call 0x1C17F10
	127 Move X20, X0
	128 Move X0, 0x1232000
	129 Move X0, [X0+760]
	130 Call 0x1C17D08
	131 Move X1, X0
	132 Move X0, X20
	133 Move X2, X31
	134 Call SerializationException..ctor, X0, X1
	135 Move X0, X20
	136 Move X1, X19
	137 Call 0x1C17DEC
	138 Move X0, X24
	139 Move X1, X23
	140 Call 0x1C181E0

Method: System.Void InternalInsertNodeBefore(System.Collections.Generic.LinkedListNode`1<T> node, System.Collections.Generic.LinkedListNode`1<T> newNode)

Disassembly:
	0x02EEC56C LDP X24, X23, [X31 + 0x10]
	0x02EEC570 LDR X30, [X31], #0x40
	0x02EEC574 RET
	0x02EEC578 ADRP X0, 0x120C000
	0x02EEC57C LDR X0, [X0 + 0x528]
	0x02EEC580 BL 0x1C16D08
	0x02EEC584 BL 0x1C16F10
	0x02EEC588 MOV X20, X0
	0x02EEC58C ADRP X0, 0x1231000
	0x02EEC590 LDR X0, [X0 + 0x2D8]
	0x02EEC594 BL 0x1C16D08
	0x02EEC598 MOV X1, X0
	0x02EEC59C MOV X0, X20
	0x02EEC5A0 MOV X2, X31
	0x02EEC5A4 BL 0x330E100
	0x02EEC5A8 MOV X0, X20
	0x02EEC5AC MOV X1, X19

ISIL:
	001 Move [X31-16], X30
	002 Compare X2, 0
	003 JumpIfEqual {20}
	004 Move [X2+24], X1
	005 Compare X1, 0
	006 JumpIfEqual {20}
	007 Move X8, [X1+32]
	008 Move [X2+32], X8
	009 Move X8, [X1+32]
	010 Compare X8, 0
	011 JumpIfEqual {20}
	012 Move [X8+24], X2
	013 Move [X1+32], X2
	014 Move V0, [X0+24]
	015 NotImplemented "Instruction MOVI not yet implemented."
	016 Add S0, S0, S1
	017 Move [X0+24], D0
	018 Move X30, [X31+16]
	019 Return 
	020 Call 0x1C17F20

Method: System.Void InternalInsertNodeToEmptyList(System.Collections.Generic.LinkedListNode`1<T> newNode)

Disassembly:
	0x02EEC5B0 BL 0x1C16DEC
	0x02EEC5B4 SUB X31, X31, 0x80
	0x02EEC5B8 STR X30, [X31 + 0x40]
	0x02EEC5BC STP X24, X23, [X31 + 0x50]
	0x02EEC5C0 STP X22, X21, [X31 + 0x60]
	0x02EEC5C4 STP X20, X19, [X31 + 0x70]
	0x02EEC5C8 ADRP X21, 0x14EF000
	0x02EEC5CC LDRB W8, [X21 + 0xB75]
	0x02EEC5D0 MOV X19, X2
	0x02EEC5D4 MOV X20, X0
	0x02EEC5D8 TBNZ X8, 0x0, 0x2EEC614

ISIL:
	001 Move [X31-16], X30
	002 Compare X1, 0
	003 JumpIfEqual {13}
	004 Move [X1+24], X1
	005 Move [X1+32], X1
	006 Move V0, [X0+24]
	007 NotImplemented "Instruction MOVI not yet implemented."
	008 Move [X0+16], X1
	009 Add S0, S0, S1
	010 Move [X0+24], D0
	011 Move X30, [X31+16]
	012 Return 
	013 Call 0x1C17F20

Method: System.Void InternalRemoveNode(System.Collections.Generic.LinkedListNode`1<T> node)

Disassembly:
	0x02EEC5DC ADRP X0, 0x1207000
	0x02EEC5E0 LDR X0, [X0 + 0x6C0]
	0x02EEC5E4 BL 0x1C16CF4
	0x02EEC5E8 ADRP X0, 0x1231000
	0x02EEC5EC LDR X0, [X0 + 0x2C8]
	0x02EEC5F0 BL 0x1C16CF4
	0x02EEC5F4 ADRP X0, 0x1233000
	0x02EEC5F8 LDR X0, [X0 + 0x128]
	0x02EEC5FC BL 0x1C16CF4
	0x02EEC600 ADRP X0, 0x1208000
	0x02EEC604 LDR X0, [X0 + 0x2A0]
	0x02EEC608 BL 0x1C16CF4
	0x02EEC60C MOVZ W8, 0x1
	0x02EEC610 STRB W8, [X21 + 0xB75]
	0x02EEC614 LDR X0, [X20 + 0x28]
	0x02EEC618 CBZ X0, 0x2EEC758
	0x02EEC61C ADRP X8, 0x1208000
	0x02EEC620 LDR X8, [X8 + 0x2A0]
	0x02EEC624 MOV X2, X31
	0x02EEC628 LDR X1, [X8]
	0x02EEC62C BL 0x32A9B08
	0x02EEC630 LDR X8, [X20 + 0x28]
	0x02EEC634 CBZ X8, 0x2EEC774
	0x02EEC638 ADRP X9, 0x1231000
	0x02EEC63C LDR X9, [X9 + 0x2C8]
	0x02EEC640 MOV W21, W0
	0x02EEC644 MOV X0, X8
	0x02EEC648 MOV X2, X31

ISIL:
	001 Move [X31-16], X30
	002 Compare X1, 0
	003 JumpIfEqual {29}
	004 Move X8, [X1+24]
	005 NotImplemented "Instruction CMP not yet implemented."
	006 Compare X8, 0
	007 JumpIfEqual {29}
	008 Move X9, [X1+32]
	009 Move [X8+32], X9
	010 Move X9, [X1+32]
	011 Compare X9, 0
	012 JumpIfEqual {29}
	013 Move [X9+24], X8
	014 Move X8, [X0+16]
	015 NotImplemented "Instruction CMP not yet implemented."
	016 Move X8, [X1+24]
	017 Move [X0+16], X8
	018 Move [X0+16], X31
	019 Move [X1+16], X31
	020 Move [X1+24], X31
	021 Move [X1+32], X31
	022 Move X8, -37736448
	023 Move V0, [X0+24]
	024 Move V1, [X8+1024]
	025 Add S0, S0, S1
	026 Move [X0+24], D0
	027 Move X30, [X31+16]
	028 Return 
	029 Call 0x1C17F20

Method: System.Void ValidateNewNode(System.Collections.Generic.LinkedListNode`1<T> node)

Disassembly:
	0x02EEC64C LDR X1, [X9]
	0x02EEC650 BL 0x32A9B08
	0x02EEC654 CBZ W0, 0x2EEC74C
	0x02EEC658 ADRP X9, 0x1207000
	0x02EEC65C LDR X8, [X19 + 0x20]
	0x02EEC660 LDR X9, [X9 + 0x6C0]
	0x02EEC664 LDR X22, [X20 + 0x28]
	0x02EEC668 LDR X8, [X8 + 0xC0]
	0x02EEC66C LDR X0, [X9]
	0x02EEC670 LDR X23, [X8 + 0xC8]
	0x02EEC674 LDR W9, [X0 + 0xE0]
	0x02EEC678 CBNZ W9, 0x2EEC680
	0x02EEC67C BL 0x1C16DFC
	0x02EEC680 MOV X0, X23
	0x02EEC684 MOV X1, X31
	0x02EEC688 BL 0x338C698
	0x02EEC68C CBZ X22, 0x2EEC774
	0x02EEC690 ADRP X8, 0x1233000
	0x02EEC694 LDR X8, [X8 + 0x128]
	0x02EEC698 MOV X2, X0
	0x02EEC69C MOV X0, X22
	0x02EEC6A0 MOV X3, X31
	0x02EEC6A4 LDR X1, [X8]
	0x02EEC6A8 BL 0x32A9678
	0x02EEC6AC LDR X8, [X19 + 0x20]
	0x02EEC6B0 MOV X24, X0
	0x02EEC6B4 LDR X8, [X8 + 0xC0]
	0x02EEC6B8 LDR X23, [X8 + 0x60]
	0x02EEC6BC LDRB W8, [X23 + 0x135]
	0x02EEC6C0 TBNZ X8, 0x0, 0x2EEC6D0
	0x02EEC6C4 MOV X0, X23
	0x02EEC6C8 BL 0x1C5C684
	0x02EEC6CC MOV X23, X0
	0x02EEC6D0 CBZ X24, 0x2EEC778
	0x02EEC6D4 MOV X0, X24
	0x02EEC6D8 MOV X1, X23
	0x02EEC6DC BL 0x1C16E00
	0x02EEC6E0 CBZ X0, 0x2EEC7B4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Compare X1, 0
	005 JumpIfEqual {13}
	006 Move X8, [X1+16]
	007 Compare X8, 0
	008 JumpIfNotEqual {26}
	009 Move X20, [X31+16]
	010 Move X19, [X31+24]
	011 Move X30, [X31+32]
	012 Return 
	013 Move X0, 0x120D000
	014 Move X0, [X0+1320]
	015 Move X19, X2
	016 Call 0x1C17D08
	017 Call 0x1C17F10
	018 Move X20, X0
	019 Move X0, 0x1234000
	020 Move X0, [X0+304]
	021 Call 0x1C17D08
	022 Move X1, X0
	023 Move X0, X20
	024 Move X2, X31
	025 Call ArgumentNullException..ctor, X0, X1
	026 Move X0, 0x1208000
	027 Move X0, [X0+1456]
	028 Move X19, X2
	029 Call 0x1C17D08
	030 Call 0x1C17F10
	031 Move X20, X0
	032 Move X0, 0x1234000
	033 Move X0, [X0+312]
	034 Call 0x1C17D08
	035 Move X1, X0
	036 Move X0, X20
	037 Move X2, X31
	038 Call InvalidOperationException..ctor, X0, X1
	039 Move X0, X20
	040 Move X1, X19
	041 Call 0x1C17DEC

Method: System.Void ValidateNode(System.Collections.Generic.LinkedListNode`1<T> node)

Disassembly:
	0x02EEC6E4 LDR X8, [X0 + 0x18]
	0x02EEC6E8 MOV X22, X0
	0x02EEC6EC CMP W8, 0x1
	0x02EEC6F0 B.LT 0x2EEC750
	0x02EEC6F4 MOV X23, X31
	0x02EEC6F8 AND X8, X8, 0x0
	0x02EEC6FC ADD X24, X22, 0x20
	0x02EEC700 CMP X23, W8, UXTW
	0x02EEC704 B.CS 0x2EEC770
	0x02EEC708 LDR X8, [X24 + 0x10]
	0x02EEC70C LDR V0, [X24], #0x18
	0x02EEC710 ADD X1, X31, 0x20
	0x02EEC714 MOV X0, X20
	0x02EEC718 STR X8, [X31 + 0x10]
	0x02EEC71C STR V0, [X31]
	0x02EEC720 LDR X9, [X19 + 0x20]
	0x02EEC724 LDR X9, [X9 + 0xC0]
	0x02EEC728 LDR X2, [X9 + 0x18]
	0x02EEC72C STR V0, [X31 + 0x2]
	0x02EEC730 STR X8, [X31 + 0x30]
	0x02EEC734 BL 0x2EEBDD8
	0x02EEC738 LDR W8, [X22 + 0x18]
	0x02EEC73C ADD X23, X23, 0x1
	0x02EEC740 CMP X23, W8, SXTW
	0x02EEC744 B.LT 0x2EEC700
	0x02EEC748 B 0x2EEC750
	0x02EEC74C STR X31, [X20 + 0x10]
	0x02EEC750 STR W21, [X20 + 0x1C]
	0x02EEC754 STR X31, [X20 + 0x28]
	0x02EEC758 LDP X20, X19, [X31 + 0x70]
	0x02EEC75C LDP X22, X21, [X31 + 0x60]
	0x02EEC760 LDP X24, X23, [X31 + 0x50]
	0x02EEC764 LDR X30, [X31 + 0x40]
	0x02EEC768 ADD X31, X31, 0x80
	0x02EEC76C RET
	0x02EEC770 BL 0x1C16F28
	0x02EEC774 BL 0x1C16F20
	0x02EEC778 ADRP X0, 0x1231000
	0x02EEC77C LDR X0, [X0 + 0x2E0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Compare X1, 0
	005 JumpIfEqual {12}
	006 Move X8, [X1+16]
	007 NotImplemented "Instruction CMP not yet implemented."
	008 Move X20, [X31+16]
	009 Move X19, [X31+24]
	010 Move X30, [X31+32]
	011 Return 
	012 Move X0, 0x120D000
	013 Move X0, [X0+1320]
	014 Move X19, X2
	015 Call 0x1C17D08
	016 Call 0x1C17F10
	017 Move X20, X0
	018 Move X0, 0x1234000
	019 Move X0, [X0+304]
	020 Call 0x1C17D08
	021 Move X1, X0
	022 Move X0, X20
	023 Move X2, X31
	024 Call ArgumentNullException..ctor, X0, X1
	025 Move X0, 0x1208000
	026 Move X0, [X0+1456]
	027 Move X19, X2
	028 Call 0x1C17D08
	029 Call 0x1C17F10
	030 Move X20, X0
	031 Move X0, 0x1234000
	032 Move X0, [X0+320]
	033 Call 0x1C17D08
	034 Move X1, X0
	035 Move X0, X20
	036 Move X2, X31
	037 Call InvalidOperationException..ctor, X0, X1
	038 Move X0, X20
	039 Move X1, X19
	040 Call 0x1C17DEC

Method: System.Boolean System.Collections.ICollection.get_IsSynchronized()

Disassembly:
	0x02EEC780 BL 0x1C16D08
	0x02EEC784 BL 0x1C16F10

ISIL:
	001 Move W0, W31
	002 Return X0

Method: System.Object System.Collections.ICollection.get_SyncRoot()

Disassembly:
	0x02EEC788 MOV X20, X0
	0x02EEC78C ADRP X0, 0x1231000
	0x02EEC790 LDR X0, [X0 + 0x2F8]
	0x02EEC794 BL 0x1C16D08
	0x02EEC798 MOV X1, X0
	0x02EEC79C MOV X0, X20
	0x02EEC7A0 MOV X2, X31
	0x02EEC7A4 BL 0x329F100
	0x02EEC7A8 MOV X0, X20
	0x02EEC7AC MOV X1, X19
	0x02EEC7B0 BL 0x1C16DEC
	0x02EEC7B4 MOV X0, X24
	0x02EEC7B8 MOV X1, X23
	0x02EEC7BC BL 0x1C171E0
	0x02EEC7C0 STR X30, [X31 - 0x10]!
	0x02EEC7C4 CBZ X2, 0x2EEC800
	0x02EEC7C8 STR X1, [X2 + 0x18]
	0x02EEC7CC CBZ X1, 0x2EEC800
	0x02EEC7D0 LDR X8, [X1 + 0x20]
	0x02EEC7D4 STR X8, [X2 + 0x20]
	0x02EEC7D8 LDR X8, [X1 + 0x20]
	0x02EEC7DC CBZ X8, 0x2EEC800
	0x02EEC7E0 STR X2, [X8 + 0x18]
	0x02EEC7E4 STR X2, [X1 + 0x20]
	0x02EEC7E8 LDR V0, [X0 + 0x18]
	0x02EEC7EC MOVI V1.2S, 0x1
	0x02EEC7F0 ADD S0.2S, S0.2S, S1.2S
	0x02EEC7F4 STR D0, [X0 + 0x18]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x14F0000
	005 Move W8, [X20+2930]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x120E000
	012 Move X0, [X0+3264]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2930], W8
	016 Add X19, X19, 32
	017 Move X0, [X19]
	018 Compare X0, 0
	019 JumpIfNotEqual {32}
	020 Move X8, 0x120E000
	021 Move X8, [X8+3264]
	022 Move X0, [X8]
	023 Call 0x1C17F10
	024 Move X1, X31
	025 Move X20, X0
	026 Call Object..ctor, X0
	027 Move X0, X19
	028 Move X1, X20
	029 Move X2, X31
	030 Call 0x1C25138
	031 Move X0, [X19]
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X30, [X31+32]
	035 Return X0

Method: System.Void System.Collections.ICollection.CopyTo(System.Array array, System.Int32 index)

Disassembly:
	0x02EEC7F8 LDR X30, [X31], #0x10
	0x02EEC7FC RET
	0x02EEC800 BL 0x1C16F20
	0x02EEC804 STR X30, [X31 - 0x10]!
	0x02EEC808 CBZ X1, 0x2EEC82C
	0x02EEC80C STP X1, X1, [X1 + 0x18]
	0x02EEC810 LDR V0, [X0 + 0x18]
	0x02EEC814 MOVI V1.2S, 0x1
	0x02EEC818 STR X1, [X0 + 0x10]
	0x02EEC81C ADD S0.2S, S0.2S, S1.2S
	0x02EEC820 STR D0, [X0 + 0x18]
	0x02EEC824 LDR X30, [X31], #0x10
	0x02EEC828 RET
	0x02EEC82C BL 0x1C16F20
	0x02EEC830 STR X30, [X31 - 0x10]!
	0x02EEC834 CBZ X1, 0x2EEC89C
	0x02EEC838 LDR X8, [X1 + 0x18]
	0x02EEC83C CMP X8, X1
	0x02EEC840 B.EQ 0x2EEC874
	0x02EEC844 CBZ X8, 0x2EEC89C
	0x02EEC848 LDR X9, [X1 + 0x20]
	0x02EEC84C STR X9, [X8 + 0x20]
	0x02EEC850 LDR X9, [X1 + 0x20]
	0x02EEC854 CBZ X9, 0x2EEC89C
	0x02EEC858 STR X8, [X9 + 0x18]
	0x02EEC85C LDR X8, [X0 + 0x10]
	0x02EEC860 CMP X8, X1
	0x02EEC864 B.NE 0x2EEC878
	0x02EEC868 LDR X8, [X1 + 0x18]
	0x02EEC86C STR X8, [X0 + 0x10]
	0x02EEC870 B 0x2EEC878
	0x02EEC874 STR X31, [X0 + 0x10]
	0x02EEC878 STP X31, X31, [X1 + 0x10]
	0x02EEC87C STR X31, [X1 + 0x20]
	0x02EEC880 ADRP X8, 0xFFFFFFFFFDC02000
	0x02EEC884 LDR V0, [X0 + 0x18]
	0x02EEC888 LDR V1, [X8 + 0x400]
	0x02EEC88C ADD S0.2S, S0.2S, S1.2S
	0x02EEC890 STR D0, [X0 + 0x18]
	0x02EEC894 LDR X30, [X31], #0x10
	0x02EEC898 RET
	0x02EEC89C BL 0x1C16F20
	0x02EEC8A0 STR X30, [X31 - 0x20]!
	0x02EEC8A4 STP X20, X19, [X31 + 0x10]
	0x02EEC8A8 CBZ X1, 0x2EEC8C0
	0x02EEC8AC LDR X8, [X1 + 0x10]
	0x02EEC8B0 CBNZ X8, 0x2EEC8F8
	0x02EEC8B4 LDP X20, X19, [X31 + 0x10]
	0x02EEC8B8 LDR X30, [X31], #0x20
	0x02EEC8BC RET
	0x02EEC8C0 ADRP X0, 0x120C000
	0x02EEC8C4 LDR X0, [X0 + 0x528]
	0x02EEC8C8 MOV X19, X2
	0x02EEC8CC BL 0x1C16D08
	0x02EEC8D0 BL 0x1C16F10
	0x02EEC8D4 MOV X20, X0
	0x02EEC8D8 ADRP X0, 0x1233000
	0x02EEC8DC LDR X0, [X0 + 0x130]
	0x02EEC8E0 BL 0x1C16D08
	0x02EEC8E4 MOV X1, X0
	0x02EEC8E8 MOV X0, X20
	0x02EEC8EC MOV X2, X31
	0x02EEC8F0 BL 0x330E100
	0x02EEC8F4 B 0x2EEC92C
	0x02EEC8F8 ADRP X0, 0x1207000
	0x02EEC8FC LDR X0, [X0 + 0x5B0]
	0x02EEC900 MOV X19, X2
	0x02EEC904 BL 0x1C16D08
	0x02EEC908 BL 0x1C16F10
	0x02EEC90C MOV X20, X0
	0x02EEC910 ADRP X0, 0x1233000
	0x02EEC914 LDR X0, [X0 + 0x138]
	0x02EEC918 BL 0x1C16D08
	0x02EEC91C MOV X1, X0
	0x02EEC920 MOV X0, X20
	0x02EEC924 MOV X2, X31
	0x02EEC928 BL 0x337DF1C
	0x02EEC92C MOV X0, X20
	0x02EEC930 MOV X1, X19
	0x02EEC934 BL 0x1C16DEC
	0x02EEC938 STR X30, [X31 - 0x20]!
	0x02EEC93C STP X20, X19, [X31 + 0x10]
	0x02EEC940 CBZ X1, 0x2EEC95C
	0x02EEC944 LDR X8, [X1 + 0x10]
	0x02EEC948 CMP X8, X0
	0x02EEC94C B.NE 0x2EEC994
	0x02EEC950 LDP X20, X19, [X31 + 0x10]
	0x02EEC954 LDR X30, [X31], #0x20
	0x02EEC958 RET
	0x02EEC95C ADRP X0, 0x120C000
	0x02EEC960 LDR X0, [X0 + 0x528]
	0x02EEC964 MOV X19, X2
	0x02EEC968 BL 0x1C16D08
	0x02EEC96C BL 0x1C16F10
	0x02EEC970 MOV X20, X0
	0x02EEC974 ADRP X0, 0x1233000
	0x02EEC978 LDR X0, [X0 + 0x130]
	0x02EEC97C BL 0x1C16D08
	0x02EEC980 MOV X1, X0
	0x02EEC984 MOV X0, X20
	0x02EEC988 MOV X2, X31
	0x02EEC98C BL 0x330E100
	0x02EEC990 B 0x2EEC9C8
	0x02EEC994 ADRP X0, 0x1207000
	0x02EEC998 LDR X0, [X0 + 0x5B0]
	0x02EEC99C MOV X19, X2
	0x02EEC9A0 BL 0x1C16D08
	0x02EEC9A4 BL 0x1C16F10
	0x02EEC9A8 MOV X20, X0
	0x02EEC9AC ADRP X0, 0x1233000
	0x02EEC9B0 LDR X0, [X0 + 0x140]
	0x02EEC9B4 BL 0x1C16D08
	0x02EEC9B8 MOV X1, X0
	0x02EEC9BC MOV X0, X20
	0x02EEC9C0 MOV X2, X31
	0x02EEC9C4 BL 0x337DF1C
	0x02EEC9C8 MOV X0, X20
	0x02EEC9CC MOV X1, X19
	0x02EEC9D0 BL 0x1C16DEC
	0x02EEC9D4 MOV W0, W31
	0x02EEC9D8 RET
	0x02EEC9DC STR X30, [X31 - 0x20]!
	0x02EEC9E0 STP X20, X19, [X31 + 0x10]
	0x02EEC9E4 ADRP X20, 0x14EF000
	0x02EEC9E8 LDRB W8, [X20 + 0xB76]
	0x02EEC9EC MOV X19, X0
	0x02EEC9F0 TBNZ X8, 0x0, 0x2EECA08
	0x02EEC9F4 ADRP X0, 0x120D000
	0x02EEC9F8 LDR X0, [X0 + 0xCC0]
	0x02EEC9FC BL 0x1C16CF4
	0x02EECA00 MOVZ W8, 0x1
	0x02EECA04 STRB W8, [X20 + 0xB76]
	0x02EECA08 LDR X0, [X19 + 0x20]!
	0x02EECA0C CBNZ X0, 0x2EECA40
	0x02EECA10 ADRP X8, 0x120D000
	0x02EECA14 LDR X8, [X8 + 0xCC0]
	0x02EECA18 LDR X0, [X8]
	0x02EECA1C BL 0x1C16F10
	0x02EECA20 MOV X1, X31
	0x02EECA24 MOV X20, X0
	0x02EECA28 BL 0x33BDD8C
	0x02EECA2C MOV X0, X19
	0x02EECA30 MOV X1, X20
	0x02EECA34 MOV X2, X31
	0x02EECA38 BL 0x1C24138
	0x02EECA3C LDR X0, [X19]
	0x02EECA40 LDP X20, X19, [X31 + 0x10]
	0x02EECA44 LDR X30, [X31], #0x20
	0x02EECA48 RET
	0x02EECA4C SUB X31, X31, 0x60
	0x02EECA50 STR X30, [X31 + 0x20]
	0x02EECA54 STP X24, X23, [X31 + 0x30]
	0x02EECA58 STP X22, X21, [X31 + 0x40]
	0x02EECA5C STP X20, X19, [X31 + 0x50]
	0x02EECA60 ADRP X23, 0x14EF000
	0x02EECA64 LDRB W8, [X23 + 0xB77]
	0x02EECA68 MOV X19, X3
	0x02EECA6C MOV W20, W2
	0x02EECA70 MOV X22, X1
	0x02EECA74 MOV X21, X0
	0x02EECA78 TBNZ X8, 0x0, 0x2EECA90
	0x02EECA7C ADRP X0, 0x1207000
	0x02EECA80 LDR X0, [X0 + 0x9D0]
	0x02EECA84 BL 0x1C16CF4
	0x02EECA88 MOVZ W8, 0x1
	0x02EECA8C STRB W8, [X23 + 0xB77]
	0x02EECA90 CBZ X22, 0x2EECBF4
	0x02EECA94 MOV X0, X22
	0x02EECA98 MOV X1, X31
	0x02EECA9C BL 0x339FCE4
	0x02EECAA0 CMP W0, 0x1
	0x02EECAA4 B.NE 0x2EECC28
	0x02EECAA8 MOV X0, X22
	0x02EECAAC MOV W1, W31
	0x02EECAB0 MOV X2, X31
	0x02EECAB4 BL 0x339FA30
	0x02EECAB8 CBNZ W0, 0x2EECC48
	0x02EECABC TBNZ X20, 0x1F, 0x2EECC68
	0x02EECAC0 MOV X0, X22
	0x02EECAC4 MOV X1, X31
	0x02EECAC8 BL 0x3395B7C
	0x02EECACC LDR W8, [X21 + 0x18]
	0x02EECAD0 SUB W9, W0, W20
	0x02EECAD4 CMP W9, W8
	0x02EECAD8 B.LT 0x2EECCD4
	0x02EECADC LDR X8, [X19 + 0x20]
	0x02EECAE0 LDR X8, [X8 + 0xC0]
	0x02EECAE4 LDR X1, [X8 + 0x60]
	0x02EECAE8 LDRB W8, [X1 + 0x135]
	0x02EECAEC TBNZ X8, 0x0, 0x2EECAFC
	0x02EECAF0 MOV X0, X1
	0x02EECAF4 BL 0x1C5C684
	0x02EECAF8 MOV X1, X0
	0x02EECAFC MOV X0, X22
	0x02EECB00 BL 0x1C16E00
	0x02EECB04 CBZ X0, 0x2EECB38
	0x02EECB08 LDR X8, [X19 + 0x20]
	0x02EECB0C MOV X1, X0
	0x02EECB10 MOV X0, X21
	0x02EECB14 MOV W2, W20
	0x02EECB18 LDR X8, [X8 + 0xC0]
	0x02EECB1C LDP X20, X19, [X31 + 0x50]
	0x02EECB20 LDP X22, X21, [X31 + 0x40]
	0x02EECB24 LDP X24, X23, [X31 + 0x30]
	0x02EECB28 LDR X3, [X8 + 0xC0]
	0x02EECB2C LDR X30, [X31 + 0x20]
	0x02EECB30 ADD X31, X31, 0x60
	0x02EECB34 B 0x2EEBFA4
	0x02EECB38 ADRP X8, 0x1207000
	0x02EECB3C LDR X8, [X8 + 0x9D0]
	0x02EECB40 MOV X0, X22
	0x02EECB44 LDR X1, [X8]
	0x02EECB48 BL 0x1C16E00
	0x02EECB4C CBZ X0, 0x2EECD48
	0x02EECB50 LDR X24, [X21 + 0x10]
	0x02EECB54 CBZ X24, 0x2EECBC8
	0x02EECB58 MOV X22, X0
	0x02EECB5C CBZ X24, 0x2EECBE0
	0x02EECB60 LDR X8, [X24 + 0x38]
	0x02EECB64 LDUR V0, [X24 + 0x28]
	0x02EECB68 STR X8, [X31 + 0x10]
	0x02EECB6C STR V0, [X31]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+32], X24
	004 Move [X31+40], X23
	005 Move [X31+48], X22
	006 Move [X31+56], X21
	007 Move [X31+64], X20
	008 Move [X31+72], X19
	009 Move X23, 0x14F0000
	010 Move W8, [X23+2931]
	011 Move X19, X3
	012 Move W20, W2
	013 Move X22, X1
	014 Move X21, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {24}
	019 Move X0, 0x1208000
	020 Move X0, [X0+2512]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X23+2931], W8
	024 Compare X22, 0
	025 JumpIfEqual {128}
	026 Move X0, X22
	027 Move X1, X31
	028 Call Array.get_Rank, X0
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move X0, X22
	031 Move W1, W31
	032 Move X2, X31
	033 Call Array.GetLowerBound, X0, X1
	034 Compare W0, 0
	035 JumpIfNotEqual {147}
	036 Move TEMP, X20
	037 And TEMP, TEMP, -2147483648
	038 Compare TEMP, -2147483648
	039 JumpIfEqual {154}
	040 Move X0, X22
	041 Move X1, X31
	042 Call Array.get_Length, X0
	043 Move W8, [X21+24]
	044 Subtract W9, W0, W20
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Move X8, [X19+32]
	047 Move X8, [X8+192]
	048 Move X1, [X8+96]
	049 Move W8, [X1+309]
	050 Move TEMP, X8
	051 And TEMP, TEMP, 1
	052 Compare TEMP, 1
	053 JumpIfEqual {57}
	054 Move X0, X1
	055 Call 0x1C5D684
	056 Move X1, X0
	057 Move X0, X22
	058 Call 0x1C17E00
	059 Compare X0, 0
	060 JumpIfEqual {77}
	061 Move X8, [X19+32]
	062 Move X1, X0
	063 Move X0, X21
	064 Move W2, W20
	065 Move X8, [X8+192]
	066 Move X20, [X31+64]
	067 Move X19, [X31+72]
	068 Move X22, [X31+48]
	069 Move X21, [X31+56]
	070 Move X24, [X31+32]
	071 Move X23, [X31+40]
	072 Move X3, [X8+192]
	073 Move X30, [X31+16]
	074 Add X31, X31, 80
	075 Call 0x2EEBE14, X0, X1, X2
	076 Return 
	077 Move X8, 0x1208000
	078 Move X8, [X8+2512]
	079 Move X0, X22
	080 Move X1, [X8]
	081 Call 0x1C17E00
	082 Compare X0, 0
	083 JumpIfEqual {208}
	084 Move X24, [X21+16]
	085 Compare X24, 0
	086 JumpIfEqual {114}
	087 Move X22, X0
	088 Compare X24, 0
	089 JumpIfEqual {123}
	090 NotImplemented "Instruction LDUR not yet implemented."
	091 Move [X31], V0
	092 Move X8, [X19+32]
	093 Move X8, [X8+192]
	094 Move X0, [X8+16]
	095 Add X1, X31, 0
	096 Call 0x1C17E04
	097 Move X23, X0
	098 Compare X0, 0
	099 JumpIfEqual {106}
	100 Move X8, [X22]
	101 Move X1, [X8+64]
	102 Move X0, X23
	103 Call 0x1C17E00
	104 Compare X0, 0
	105 JumpIfEqual {125}
	106 Move W8, [X22+24]
	107 NotImplemented "Instruction CMP not yet implemented."
	108 Add X8, X22, W20
	109 Move [X8+32], X23
	110 Move X24, [X24+24]
	111 Move X8, [X21+16]
	112 Add W20, W20, 1
	113 NotImplemented "Instruction CMP not yet implemented."
	114 Move X20, [X31+64]
	115 Move X19, [X31+72]
	116 Move X22, [X31+48]
	117 Move X21, [X31+56]
	118 Move X24, [X31+32]
	119 Move X23, [X31+40]
	120 Move X30, [X31+16]
	121 Add X31, X31, 80
	122 Return 
	123 Call 0x1C17F20
	124 Call 0x1C17F28
	125 Call 0x1C17F44
	126 Move X1, X31
	127 Call 0x1C17DEC
	128 Move X0, 0x120D000
	129 Move X0, [X0+1320]
	130 Call 0x1C17D08
	131 Call 0x1C17F10
	132 Move X20, X0
	133 Move X0, 0x1230000
	134 Move X0, [X0+1600]
	135 Call 0x1C17D08
	136 Move X1, X0
	137 Move X0, X20
	138 Move X2, X31
	139 Call ArgumentNullException..ctor, X0, X1
	140 Move X0, 0x1210000
	141 Move X0, [X0+1400]
	142 Call 0x1C17D08
	143 Call 0x1C17F10
	144 Move X20, X0
	145 Move X0, 0x1231000
	146 Move X0, [X0+776]
	147 Move X0, 0x1210000
	148 Move X0, [X0+1400]
	149 Call 0x1C17D08
	150 Call 0x1C17F10
	151 Move X20, X0
	152 Move X0, 0x1231000
	153 Move X0, [X0+784]
	154 Move [X31], W20
	155 Move X0, 0x1208000
	156 Move X0, [X0+1880]
	157 Call 0x1C17D08
	158 Add X1, X31, 0
	159 Call 0x1C17E04
	160 Move X20, X0
	161 Move X0, 0x1210000
	162 Move X0, [X0+1888]
	163 Call 0x1C17D08
	164 Call 0x1C17F10
	165 Move X21, X0
	166 Move X0, 0x1213000
	167 Move X0, [X0+304]
	168 Call 0x1C17D08
	169 Move X22, X0
	170 Move X0, 0x1230000
	171 Move X0, [X0+1648]
	172 Call 0x1C17D08
	173 Move X3, X0
	174 Move X0, X21
	175 Move X1, X22
	176 Move X2, X20
	177 Move X4, X31
	178 Call ArgumentOutOfRangeException..ctor, X0, X1, X2, X3
	179 Move X0, X21
	180 Move X0, 0x1210000
	181 Move X0, [X0+1400]
	182 Call 0x1C17D08
	183 Call 0x1C17F10
	184 Move X20, X0
	185 Move X0, 0x1234000
	186 Move X0, [X0+280]
	187 Call 0x1C17D08
	188 Move X1, X0
	189 Move X0, X20
	190 Move X2, X31
	191 Call ArgumentException..ctor, X0, X1
	192 Move X20, X0
	193 NotImplemented "Instruction CMP not yet implemented."
	194 Move X0, X20
	195 Call 0x3EB2AD0
	196 Move X20, X0
	197 Move X0, 0x1231000
	198 Move X0, [X0+800]
	199 Call 0x1C17D08
	200 Move X8, [X20]
	201 Move X1, [X8]
	202 Call 0x1C18270
	203 Move TEMP, X0
	204 And TEMP, TEMP, 1
	205 Compare TEMP, 1
	206 JumpIfNotEqual {228}
	207 Call 0x3EB2AE0
	208 Move X0, 0x1210000
	209 Move X0, [X0+1400]
	210 Call 0x1C17D08
	211 Call 0x1C17F10
	212 Move X20, X0
	213 Move X0, 0x1231000
	214 Move X0, [X0+808]
	215 Call 0x1C17D08
	216 Move X21, X0
	217 Move X0, 0x1230000
	218 Move X0, [X0+1600]
	219 Call 0x1C17D08
	220 Move X2, X0
	221 Move X0, X20
	222 Move X1, X21
	223 Move X3, X31
	224 Call ArgumentException..ctor, X0, X1, X2
	225 Move X0, X20
	226 Move X1, X19
	227 Call 0x1C17DEC
	228 Move W0, 8
	229 Call 0x3EB2AF0
	230 Move X8, [X20]
	231 Move [X0], X8
	232 Move X1, 0xFC9000
	233 Add X1, X1, 3672
	234 Move X2, X31
	235 Call 0x3EB2B00
	236 Move X20, X0
	237 Call 0x3EB2AE0
	238 Move X0, X20
	239 Call 0x1D2D690
	240 Call 0x1991590

Method: System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()

Disassembly:
	0x02EECB70 LDR X8, [X19 + 0x20]
	0x02EECB74 LDR X8, [X8 + 0xC0]
	0x02EECB78 LDR X0, [X8 + 0x10]
	0x02EECB7C ADD X1, X31, 0x0
	0x02EECB80 BL 0x1C16E04
	0x02EECB84 MOV X23, X0
	0x02EECB88 CBZ X0, 0x2EECBA0
	0x02EECB8C LDR X8, [X22]
	0x02EECB90 LDR X1, [X8 + 0x40]
	0x02EECB94 MOV X0, X23
	0x02EECB98 BL 0x1C16E00
	0x02EECB9C CBZ X0, 0x2EECBE8
	0x02EECBA0 LDR W8, [X22 + 0x18]
	0x02EECBA4 CMP W20, W8
	0x02EECBA8 B.CS 0x2EECBE4
	0x02EECBAC ADD X8, X22, W20, 0x3, SXTW
	0x02EECBB0 STR X23, [X8 + 0x20]
	0x02EECBB4 LDR X24, [X24 + 0x18]
	0x02EECBB8 LDR X8, [X21 + 0x10]
	0x02EECBBC ADD W20, W20, 0x1
	0x02EECBC0 CMP X24, X8
	0x02EECBC4 B.NE 0x2EECB5C
	0x02EECBC8 LDP X20, X19, [X31 + 0x50]
	0x02EECBCC LDP X22, X21, [X31 + 0x40]
	0x02EECBD0 LDP X24, X23, [X31 + 0x30]
	0x02EECBD4 LDR X30, [X31 + 0x20]
	0x02EECBD8 ADD X31, X31, 0x60
	0x02EECBDC RET

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+96], X30
	003 Move [X31+104], X19
	004 Move X8, [X1+32]
	005 NotImplemented "Instruction MOVI not yet implemented."
	006 Move X19, X1
	007 Move X1, X0
	008 Move X8, [X8+192]
	009 Add X0, X31, 0
	010 Move X8, [X8+160]
	011 Move [X31+16], V0
	012 Move [X31+24], V0
	013 Move [X31], V0
	014 Move X8, [X8+32]
	015 Move X8, [X8+192]
	016 Move X2, [X8+152]
	017 Call 0x2BB4BDC, X0, X1
	018 Move V1, [X31+16]
	019 Move V0, [X31+32]
	020 Move V2, [X31]
	021 Add X1, X31, 0
	022 Move [X31+64], V1
	023 Move [X31+72], V0
	024 Move [X31+32], V0
	025 Move [X31+40], V2
	026 Move [X31], V2
	027 Move [X31+8], V1
	028 Move X8, [X19+32]
	029 Move X8, [X8+192]
	030 Move X0, [X8+144]
	031 Call 0x1C17E04
	032 Move X30, [X31+96]
	033 Move X19, [X31+104]
	034 Add X31, X31, 112
	035 Return X0

