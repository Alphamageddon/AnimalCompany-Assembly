Type: System.Collections.Generic.SortedList`2/SortedListKeyEnumerator

Method: System.Void .ctor(System.Collections.Generic.SortedList`2<TKey, TValue> sortedList)

Disassembly:
	0x025EC19C LDP X20, X19, [X31 + 0x10]
	0x025EC1A0 CMP W8, W9
	0x025EC1A4 CSET W0, CC
	0x025EC1A8 LDR X30, [X31], #0x20
	0x025EC1AC RET
	0x025EC1B0 BL 0x1C16F20
	0x025EC1B4 ADRP X0, 0x1B07000
	0x025EC1B8 LDR X0, [X0 + 0x5B0]
	0x025EC1BC MOV X19, X1
	0x025EC1C0 BL 0x1C16D08
	0x025EC1C4 BL 0x1C16F10
	0x025EC1C8 MOV X20, X0
	0x025EC1CC ADRP X0, 0x1B31000
	0x025EC1D0 LDR X0, [X0 + 0x288]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, X1
	005 Move X1, X31
	006 Move X19, X0
	007 Call Object..ctor, X0
	008 Move [X19+16], X20
	009 Compare X20, 0
	010 JumpIfEqual {17}
	011 Move W8, [X20+36]
	012 Move [X19+28], W8
	013 Move X20, [X31+16]
	014 Move X19, [X31+24]
	015 Move X30, [X31+32]
	016 Return 
	017 Call 0x1C17F20

Method: System.Void Dispose()

Disassembly:
	0x025EC1D4 BL 0x1C16D08
	0x025EC1D8 MOV X1, X0
	0x025EC1DC MOV X0, X20

ISIL:
	001 Move [X0+24], W31
	002 Move [X0+32], W31
	003 Return 

Method: System.Boolean MoveNext()

Disassembly:
	0x025EC1E0 MOV X2, X31
	0x025EC1E4 BL 0x337DF1C
	0x025EC1E8 MOV X0, X20
	0x025EC1EC MOV X1, X19
	0x025EC1F0 BL 0x1C16DEC
	0x025EC1F4 BL 0x1C16F28
	0x025EC1F8 LDR X0, [X0 + 0x20]
	0x025EC1FC RET
	0x025EC200 STR X30, [X31 - 0x20]!
	0x025EC204 STP X20, X19, [X31 + 0x10]
	0x025EC208 LDR W8, [X0 + 0x18]
	0x025EC20C CBZ W8, 0x25EC238
	0x025EC210 LDR X9, [X0 + 0x10]
	0x025EC214 CBZ X9, 0x25EC278
	0x025EC218 LDR W9, [X9 + 0x20]
	0x025EC21C ADD W9, W9, 0x1
	0x025EC220 CMP W8, W9
	0x025EC224 B.EQ 0x25EC238
	0x025EC228 LDR X0, [X0 + 0x20]
	0x025EC22C LDP X20, X19, [X31 + 0x10]
	0x025EC230 LDR X30, [X31], #0x20
	0x025EC234 RET
	0x025EC238 ADRP X0, 0x1B07000
	0x025EC23C LDR X0, [X0 + 0x5B0]
	0x025EC240 MOV X19, X1
	0x025EC244 BL 0x1C16D08
	0x025EC248 BL 0x1C16F10
	0x025EC24C MOV X20, X0
	0x025EC250 ADRP X0, 0x1B31000
	0x025EC254 LDR X0, [X0 + 0x290]
	0x025EC258 BL 0x1C16D08
	0x025EC25C MOV X1, X0
	0x025EC260 MOV X0, X20
	0x025EC264 MOV X2, X31
	0x025EC268 BL 0x337DF1C
	0x025EC26C MOV X0, X20
	0x025EC270 MOV X1, X19
	0x025EC274 BL 0x1C16DEC
	0x025EC278 BL 0x1C16F20
	0x025EC27C STR X30, [X31 - 0x20]!
	0x025EC280 STP X20, X19, [X31 + 0x10]
	0x025EC284 LDR X8, [X0 + 0x10]
	0x025EC288 CBZ X8, 0x25EC2B0
	0x025EC28C LDR W9, [X0 + 0x1C]
	0x025EC290 LDR W8, [X8 + 0x24]
	0x025EC294 CMP W9, W8
	0x025EC298 B.NE 0x25EC2B4
	0x025EC29C LDP X20, X19, [X31 + 0x10]
	0x025EC2A0 STR W31, [X0 + 0x18]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X10, [X0+16]
	005 Compare X10, 0
	006 JumpIfEqual {32}
	007 Move W8, [X0+28]
	008 Move W9, [X10+36]
	009 NotImplemented "Instruction CMP not yet implemented."
	010 NotImplemented "Instruction LDRSW not yet implemented."
	011 Move W9, [X10+32]
	012 NotImplemented "Instruction CMP not yet implemented."
	013 Move X10, [X10+16]
	014 Compare X10, 0
	015 JumpIfEqual {32}
	016 Move W11, [X10+24]
	017 NotImplemented "Instruction CMP not yet implemented."
	018 Add X10, X10, X8
	019 Move W10, [X10+32]
	020 Add W11, W8, 1
	021 Move [X0+24], W11
	022 Move [X0+32], W10
	023 Add W10, W9, 1
	024 Move [X0+24], W10
	025 Move [X0+32], W31
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 NotImplemented "Instruction CMP not yet implemented."
	029 NotImplemented "Instruction CSET not yet implemented."
	030 Move X30, [X31+32]
	031 Return X0
	032 Call 0x1C17F20
	033 Move X0, 0x1B08000
	034 Move X0, [X0+1456]
	035 Move X19, X1
	036 Call 0x1C17D08
	037 Call 0x1C17F10
	038 Move X20, X0
	039 Move X0, 0x1B32000
	040 Move X0, [X0+648]
	041 Call 0x1C17D08
	042 Move X1, X0
	043 Move X0, X20
	044 Move X2, X31
	045 Call InvalidOperationException..ctor, X0, X1
	046 Move X0, X20
	047 Move X1, X19
	048 Call 0x1C17DEC
	049 Call 0x1C17F28

Method: TKey get_Current()

Disassembly:
	0x025EC2A4 STR X31, [X0 + 0x20]
	0x025EC2A8 LDR X30, [X31], #0x20

ISIL:
	001 Move W0, [X0+32]
	002 Return X0

Method: System.Object System.Collections.IEnumerator.get_Current()

Disassembly:
	0x025EC2AC RET
	0x025EC2B0 BL 0x1C16F20
	0x025EC2B4 ADRP X0, 0x1B07000
	0x025EC2B8 LDR X0, [X0 + 0x5B0]
	0x025EC2BC MOV X19, X1
	0x025EC2C0 BL 0x1C16D08
	0x025EC2C4 BL 0x1C16F10
	0x025EC2C8 MOV X20, X0
	0x025EC2CC ADRP X0, 0x1B31000
	0x025EC2D0 LDR X0, [X0 + 0x288]
	0x025EC2D4 BL 0x1C16D08
	0x025EC2D8 MOV X1, X0
	0x025EC2DC MOV X0, X20
	0x025EC2E0 MOV X2, X31
	0x025EC2E4 BL 0x337DF1C
	0x025EC2E8 MOV X0, X20
	0x025EC2EC MOV X1, X19
	0x025EC2F0 BL 0x1C16DEC
	0x025EC2F4 STR X30, [X31 - 0x20]!
	0x025EC2F8 STP X20, X19, [X31 + 0x10]
	0x025EC2FC MOV X20, X1
	0x025EC300 MOV X1, X31
	0x025EC304 MOV X19, X0
	0x025EC308 BL 0x33BDD8C
	0x025EC30C STR X20, [X19 + 0x10]
	0x025EC310 CBZ X20, 0x25EC328
	0x025EC314 LDR W8, [X20 + 0x24]
	0x025EC318 STR W8, [X19 + 0x1C]
	0x025EC31C LDP X20, X19, [X31 + 0x10]
	0x025EC320 LDR X30, [X31], #0x20
	0x025EC324 RET
	0x025EC328 BL 0x1C16F20
	0x025EC32C STR W31, [X0 + 0x18]
	0x025EC330 STR X31, [X0 + 0x20]
	0x025EC334 RET
	0x025EC338 STR X30, [X31 - 0x20]!
	0x025EC33C STP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W8, [X0+24]
	005 Compare W8, 0
	006 JumpIfEqual {24}
	007 Move X9, [X0+16]
	008 Compare X9, 0
	009 JumpIfEqual {40}
	010 Move W9, [X9+32]
	011 Add W9, W9, 1
	012 NotImplemented "Instruction CMP not yet implemented."
	013 Move X8, [X1+32]
	014 Move W9, [X0+32]
	015 Add X1, X31, 12
	016 Move X8, [X8+192]
	017 Move [X31+12], W9
	018 Move X0, [X8+16]
	019 Call 0x1C17E04
	020 Move X20, [X31+16]
	021 Move X19, [X31+24]
	022 Move X30, [X31+32]
	023 Return X0
	024 Move X0, 0x1B08000
	025 Move X0, [X0+1456]
	026 Move X19, X1
	027 Call 0x1C17D08
	028 Call 0x1C17F10
	029 Move X20, X0
	030 Move X0, 0x1B32000
	031 Move X0, [X0+656]
	032 Call 0x1C17D08
	033 Move X1, X0
	034 Move X0, X20
	035 Move X2, X31
	036 Call InvalidOperationException..ctor, X0, X1
	037 Move X0, X20
	038 Move X1, X19
	039 Call 0x1C17DEC
	040 Call 0x1C17F20

Method: System.Void System.Collections.IEnumerator.Reset()

Disassembly:
	0x025EC340 LDR X10, [X0 + 0x10]
	0x025EC344 CBZ X10, 0x25EC3B4
	0x025EC348 LDR W8, [X0 + 0x1C]
	0x025EC34C LDR W9, [X10 + 0x24]
	0x025EC350 CMP W8, W9
	0x025EC354 B.NE 0x25EC3B8
	0x025EC358 LDRSW X8, [X0 + 0x18]
	0x025EC35C LDR W9, [X10 + 0x20]
	0x025EC360 CMP W8, W9
	0x025EC364 B.CS 0x25EC394
	0x025EC368 LDR X10, [X10 + 0x18]
	0x025EC36C CBZ X10, 0x25EC3B4
	0x025EC370 LDR W11, [X10 + 0x18]
	0x025EC374 CMP W8, W11
	0x025EC378 B.CS 0x25EC3F8
	0x025EC37C ADD X10, X10, X8, 0x3, LSL
	0x025EC380 LDR X10, [X10 + 0x20]
	0x025EC384 ADD W11, W8, 0x1
	0x025EC388 STR W11, [X0 + 0x18]
	0x025EC38C STR X10, [X0 + 0x20]
	0x025EC390 B 0x25EC3A0
	0x025EC394 ADD W10, W9, 0x1
	0x025EC398 STR W10, [X0 + 0x18]
	0x025EC39C STR X31, [X0 + 0x20]
	0x025EC3A0 LDP X20, X19, [X31 + 0x10]
	0x025EC3A4 CMP W8, W9
	0x025EC3A8 CSET W0, CC
	0x025EC3AC LDR X30, [X31], #0x20
	0x025EC3B0 RET
	0x025EC3B4 BL 0x1C16F20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X0+16]
	005 Compare X8, 0
	006 JumpIfEqual {16}
	007 Move W9, [X0+28]
	008 Move W8, [X8+36]
	009 NotImplemented "Instruction CMP not yet implemented."
	010 Move X20, [X31+16]
	011 Move X19, [X31+24]
	012 Move [X0+24], W31
	013 Move [X0+32], W31
	014 Move X30, [X31+32]
	015 Return 
	016 Call 0x1C17F20
	017 Move X0, 0x1B08000
	018 Move X0, [X0+1456]
	019 Move X19, X1
	020 Call 0x1C17D08
	021 Call 0x1C17F10
	022 Move X20, X0
	023 Move X0, 0x1B32000
	024 Move X0, [X0+648]
	025 Call 0x1C17D08
	026 Move X1, X0
	027 Move X0, X20
	028 Move X2, X31
	029 Call InvalidOperationException..ctor, X0, X1
	030 Move X0, X20
	031 Move X1, X19
	032 Call 0x1C17DEC

