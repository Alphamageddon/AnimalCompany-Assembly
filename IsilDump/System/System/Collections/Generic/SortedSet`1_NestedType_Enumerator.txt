Type: System.Collections.Generic.SortedSet`1/Enumerator

Method: System.Void .ctor(System.Collections.Generic.SortedSet`1<T> set)

Disassembly:
	0x02BC5A54 LDP S0, S1, [X0 + 0x14]
	0x02BC5A58 LDP S2, S3, [X0 + 0x1C]
	0x02BC5A5C RET
	0x02BC5A60 SUB X31, X31, 0x30
	0x02BC5A64 STR X30, [X31 + 0x10]
	0x02BC5A68 STP X20, X19, [X31 + 0x20]
	0x02BC5A6C LDR X8, [X1 + 0x20]
	0x02BC5A70 MOV X19, X0
	0x02BC5A74 ADD X9, X8, 0x135
	0x02BC5A78 LDRH W9, [X9]
	0x02BC5A7C TBNZ X9, 0x0, 0x2BC5A98
	0x02BC5A80 MOV X0, X8
	0x02BC5A84 MOV X20, X1
	0x02BC5A88 BL 0x1C5C684
	0x02BC5A8C LDR X8, [X20 + 0x20]
	0x02BC5A90 ADD X9, X8, 0x135
	0x02BC5A94 LDRH W9, [X9]
	0x02BC5A98 LDUR V0, [X19 + 0x14]
	0x02BC5A9C STR V0, [X31]
	0x02BC5AA0 TBNZ X9, 0x0, 0x2BC5AB0
	0x02BC5AA4 MOV X0, X8
	0x02BC5AA8 BL 0x1C5C684
	0x02BC5AAC MOV X8, X0
	0x02BC5AB0 LDR X8, [X8 + 0xC0]
	0x02BC5AB4 ADD X1, X31, 0x0
	0x02BC5AB8 LDR X0, [X8 + 0x18]
	0x02BC5ABC BL 0x1C16E04
	0x02BC5AC0 LDP X20, X19, [X31 + 0x20]
	0x02BC5AC4 LDR X30, [X31 + 0x10]
	0x02BC5AC8 ADD X31, X31, 0x30
	0x02BC5ACC RET

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X2+32]
	006 Move X21, X2
	007 Move X19, X1
	008 Move X20, X0
	009 Move W9, [X8+309]
	010 Move TEMP, X9
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {17}
	014 Move X0, X8
	015 Call 0x1C5D684
	016 Move X8, X0
	017 Move X8, [X8+192]
	018 Move X0, [X8+16]
	019 Move W8, [X0+309]
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {25}
	024 Call 0x1C5D684
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Move X0, [X21+32]
	030 Move W8, [X0+309]
	031 Move TEMP, X8
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfEqual {36}
	035 Call 0x1C5D684
	036 Move X8, [X0+192]
	037 Move X0, X20
	038 Move X1, X19
	039 Move X20, [X31+16]
	040 Move X19, [X31+24]
	041 Move X3, [X8+8]
	042 Move W2, W31
	043 Move X30, [X31+32]
	044 Move X21, [X31+40]

Method: System.Void .ctor(System.Collections.Generic.SortedSet`1<T> set, System.Boolean reverse)

Disassembly:
	0x02BC5AD0 STR X30, [X31 - 0x10]!
	0x02BC5AD4 STR X1, [X0]
	0x02BC5AD8 STR W31, [X0 + 0x8]
	0x02BC5ADC CBZ X1, 0x2BC5AFC
	0x02BC5AE0 LDR W8, [X1 + 0x1C]
	0x02BC5AE4 MOVI V0.2D, 0x0
	0x02BC5AE8 STP V0, V0, [X0 + 0x10]
	0x02BC5AEC STR X31, [X0 + 0x30]
	0x02BC5AF0 STR W8, [X0 + 0xC]
	0x02BC5AF4 LDR X30, [X31], #0x10
	0x02BC5AF8 RET
	0x02BC5AFC BL 0x1C16F20
	0x02BC5B00 RET
	0x02BC5B04 STP X30, X19, [X31 - 0x10]!
	0x02BC5B08 LDR X9, [X0]
	0x02BC5B0C CBZ X9, 0x2BC5B94
	0x02BC5B10 LDR W8, [X0 + 0xC]
	0x02BC5B14 LDR W10, [X9 + 0x1C]
	0x02BC5B18 MOV X19, X0
	0x02BC5B1C CMP W8, W10
	0x02BC5B20 B.NE 0x2BC5B70
	0x02BC5B24 LDRSW X8, [X19 + 0x8]
	0x02BC5B28 LDR W10, [X9 + 0x18]
	0x02BC5B2C CMP W8, W10
	0x02BC5B30 B.CS 0x2BC5B70
	0x02BC5B34 LDR X9, [X9 + 0x10]
	0x02BC5B38 CBZ X9, 0x2BC5B94
	0x02BC5B3C LDR W10, [X9 + 0x18]
	0x02BC5B40 CMP W8, W10
	0x02BC5B44 B.CS 0x2BC5B98
	0x02BC5B48 MOVZ W10, 0x28
	0x02BC5B4C MADD X9, X8, X10, X9
	0x02BC5B50 LDR X10, [X9 + 0x40]
	0x02BC5B54 LDP V0, V1, [X9 + 0x20]
	0x02BC5B58 ADD W8, W8, 0x1
	0x02BC5B5C STR W8, [X19 + 0x8]
	0x02BC5B60 STR X10, [X19 + 0x30]
	0x02BC5B64 STP V0, V1, [X19 + 0x10]
	0x02BC5B68 MOVZ W0, 0x1
	0x02BC5B6C B 0x2BC5B8C
	0x02BC5B70 LDR X0, [X1 + 0x20]
	0x02BC5B74 LDRB W8, [X0 + 0x135]
	0x02BC5B78 TBNZ X8, 0x0, 0x2BC5B80
	0x02BC5B7C BL 0x1C5C684
	0x02BC5B80 MOV X0, X19
	0x02BC5B84 BL 0x2BC5B9C
	0x02BC5B88 MOV W0, W31
	0x02BC5B8C LDP X30, X19, [X31], #0x10
	0x02BC5B90 RET
	0x02BC5B94 BL 0x1C16F20
	0x02BC5B98 BL 0x1C16F28
	0x02BC5B9C STP X30, X19, [X31 - 0x10]!
	0x02BC5BA0 LDR X8, [X0]
	0x02BC5BA4 CBZ X8, 0x2BC5BF0
	0x02BC5BA8 LDR W9, [X0 + 0xC]
	0x02BC5BAC LDR W10, [X8 + 0x1C]
	0x02BC5BB0 MOV X19, X0
	0x02BC5BB4 CMP W9, W10
	0x02BC5BB8 B.EQ 0x2BC5BCC
	0x02BC5BBC MOV X0, X31
	0x02BC5BC0 BL 0x339E09C
	0x02BC5BC4 LDR X8, [X19]
	0x02BC5BC8 CBZ X8, 0x2BC5BF0
	0x02BC5BCC LDR W8, [X8 + 0x18]
	0x02BC5BD0 MOVI V0.2D, 0x0
	0x02BC5BD4 STP V0, V0, [X19 + 0x10]
	0x02BC5BD8 STR X31, [X19 + 0x30]
	0x02BC5BDC ADD W8, W8, 0x1
	0x02BC5BE0 STR W8, [X19 + 0x8]
	0x02BC5BE4 MOV W0, W31
	0x02BC5BE8 LDP X30, X19, [X31], #0x10
	0x02BC5BEC RET
	0x02BC5BF0 BL 0x1C16F20
	0x02BC5BF4 LDR X9, [X0 + 0x30]
	0x02BC5BF8 LDP V1, V0, [X0 + 0x10]
	0x02BC5BFC STR X9, [X8 + 0x20]
	0x02BC5C00 STP V1, V0, [X8]
	0x02BC5C04 RET
	0x02BC5C08 SUB X31, X31, 0x50
	0x02BC5C0C STR X30, [X31 + 0x30]
	0x02BC5C10 STP X20, X19, [X31 + 0x40]
	0x02BC5C14 LDR W8, [X0 + 0x8]
	0x02BC5C18 MOV X19, X0
	0x02BC5C1C MOV X20, X1
	0x02BC5C20 CBZ W8, 0x2BC5C3C
	0x02BC5C24 LDR X9, [X19]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move [X0], X1
	008 Compare X1, 0
	009 JumpIfEqual {122}
	010 Move X8, [X1]
	011 Move X22, X1
	012 Move X19, X0
	013 Move X0, X22
	014 Move X9, [X8+648]
	015 Move X1, [X8+656]
	016 Move X20, X3
	017 Move W21, W2
	018 NotImplemented "Instruction BLR not yet implemented."
	019 Move W8, [X22+36]
	020 Move [X19+8], W8
	021 Move X0, [X20+32]
	022 Move W8, [X0+309]
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {28}
	027 Call 0x1C5D684
	028 Move X8, [X0+192]
	029 Move X0, X22
	030 Move X1, [X8+40]
	031 Call 0x25F8180, X0
	032 Move X8, [X20+32]
	033 Add W22, W0, 1
	034 Move W9, [X8+309]
	035 Move TEMP, X9
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfEqual {42}
	039 Move X0, X8
	040 Call 0x1C5D684
	041 Move X8, X0
	042 Move X8, [X8+192]
	043 Move W0, W22
	044 Move X1, [X8+48]
	045 Call 0x25F98E4, X0
	046 Move X8, [X20+32]
	047 Move W22, W0
	048 Move W9, [X8+309]
	049 Move TEMP, X9
	050 And TEMP, TEMP, 1
	051 Compare TEMP, 1
	052 JumpIfEqual {56}
	053 Move X0, X8
	054 Call 0x1C5D684
	055 Move X8, X0
	056 Move X8, [X8+192]
	057 And W23, W21, 1
	058 Move X0, [X8+64]
	059 Move W8, [X0+309]
	060 Move TEMP, X8
	061 And TEMP, TEMP, 1
	062 Compare TEMP, 1
	063 JumpIfEqual {65}
	064 Call 0x1C5D684
	065 Call 0x1C17F10
	066 Move X21, X0
	067 Move X0, [X20+32]
	068 Move W22, W22
	069 ShiftRight W22, 31
	070 And W22, W22, 0x3FFFFFFF
	071 Move W8, [X0+309]
	072 Move TEMP, X8
	073 And TEMP, TEMP, 1
	074 Compare TEMP, 1
	075 JumpIfEqual {77}
	076 Call 0x1C5D684
	077 Move X8, [X0+192]
	078 Move X0, X21
	079 Move W1, W22
	080 Move X2, [X8+72]
	081 Call Stack`1<Object>..ctor, X0, X1
	082 Move [X19+16], X21
	083 Move [X19+24], X31
	084 Move [X19+32], W23
	085 Move X0, [X20+32]
	086 Move W8, [X0+309]
	087 Move TEMP, X8
	088 And TEMP, TEMP, 1
	089 Compare TEMP, 1
	090 JumpIfEqual {92}
	091 Call 0x1C5D684
	092 Move X8, [X0+192]
	093 Move X0, [X8+16]
	094 Move W8, [X0+309]
	095 Move TEMP, X8
	096 And TEMP, TEMP, 1
	097 Compare TEMP, 1
	098 JumpIfEqual {100}
	099 Call 0x1C5D684
	100 Move W8, [X0+224]
	101 Compare W8, 0
	102 JumpIfNotEqual {104}
	103 Call 0x1C17DFC
	104 Move X0, [X20+32]
	105 Move W8, [X0+309]
	106 Move TEMP, X8
	107 And TEMP, TEMP, 1
	108 Compare TEMP, 1
	109 JumpIfEqual {111}
	110 Call 0x1C5D684
	111 Move X8, [X0+192]
	112 Move X0, X19
	113 Move X20, [X31+32]
	114 Move X19, [X31+40]
	115 Move X22, [X31+16]
	116 Move X21, [X31+24]
	117 Move X1, [X8+88]
	118 Move X30, [X31+48]
	119 Move X23, [X31+56]
	120 Call 0x2BC5C90, X0
	121 Return 
	122 Call 0x1C17F20

Method: System.Void System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context)

Disassembly:
	0x02BC5C28 CBZ X9, 0x2BC5C9C
	0x02BC5C2C LDR W9, [X9 + 0x18]
	0x02BC5C30 ADD W9, W9, 0x1
	0x02BC5C34 CMP W8, W9
	0x02BC5C38 B.NE 0x2BC5C44
	0x02BC5C3C MOV X0, X31
	0x02BC5C40 BL 0x339E0E8
	0x02BC5C44 LDR X0, [X20 + 0x20]
	0x02BC5C48 ADD X8, X0, 0x135
	0x02BC5C4C LDRH W8, [X8]
	0x02BC5C50 TBNZ X8, 0x0, 0x2BC5C64
	0x02BC5C54 BL 0x1C5C684
	0x02BC5C58 LDR X0, [X20 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X0, 0x155A000
	005 Move X0, [X0+3152]
	006 Move X19, X4
	007 Call 0x1C17D08
	008 Call 0x1C17F10
	009 Move X1, X31
	010 Move X20, X0
	011 Call PlatformNotSupportedException..ctor, X0
	012 Move X0, X20
	013 Move X1, X19
	014 Call 0x1C17DEC

Method: System.Void System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System.Object sender)

Disassembly:
	0x02BC5C5C ADD X8, X0, 0x135
	0x02BC5C60 LDRH W8, [X8]
	0x02BC5C64 LDR X9, [X19 + 0x30]
	0x02BC5C68 LDP V1, V0, [X19 + 0x10]
	0x02BC5C6C STR X9, [X31 + 0x20]
	0x02BC5C70 STP V1, V0, [X31]
	0x02BC5C74 TBNZ X8, 0x0, 0x2BC5C7C
	0x02BC5C78 BL 0x1C5C684
	0x02BC5C7C LDR X8, [X0 + 0xC0]
	0x02BC5C80 ADD X1, X31, 0x0
	0x02BC5C84 LDR X0, [X8 + 0x10]
	0x02BC5C88 BL 0x1C16E04
	0x02BC5C8C LDP X20, X19, [X31 + 0x40]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X0, 0x155A000
	005 Move X0, [X0+3152]
	006 Move X19, X2
	007 Call 0x1C17D08
	008 Call 0x1C17F10
	009 Move X1, X31
	010 Move X20, X0
	011 Call PlatformNotSupportedException..ctor, X0
	012 Move X0, X20
	013 Move X1, X19
	014 Call 0x1C17DEC

Method: System.Void Initialize()

Disassembly:
	0x02BC5C90 LDR X30, [X31 + 0x30]
	0x02BC5C94 ADD X31, X31, 0x50
	0x02BC5C98 RET
	0x02BC5C9C BL 0x1C16F20
	0x02BC5CA0 STP X30, X19, [X31 - 0x10]!
	0x02BC5CA4 LDR X8, [X0]
	0x02BC5CA8 CBZ X8, 0x2BC5CE0
	0x02BC5CAC LDR W9, [X0 + 0xC]
	0x02BC5CB0 LDR W8, [X8 + 0x1C]
	0x02BC5CB4 MOV X19, X0
	0x02BC5CB8 CMP W9, W8
	0x02BC5CBC B.EQ 0x2BC5CC8
	0x02BC5CC0 MOV X0, X31
	0x02BC5CC4 BL 0x339E09C
	0x02BC5CC8 MOVI V0.2D, 0x0
	0x02BC5CCC STR W31, [X19 + 0x8]
	0x02BC5CD0 STP V0, V0, [X19 + 0x10]
	0x02BC5CD4 STR X31, [X19 + 0x30]
	0x02BC5CD8 LDP X30, X19, [X31], #0x10
	0x02BC5CDC RET
	0x02BC5CE0 BL 0x1C16F20
	0x02BC5CE4 STR X30, [X31 - 0x10]!
	0x02BC5CE8 STR X1, [X0]
	0x02BC5CEC STR W31, [X0 + 0x8]
	0x02BC5CF0 CBZ X1, 0x2BC5D10
	0x02BC5CF4 LDR W8, [X1 + 0x1C]
	0x02BC5CF8 MOVI V0.2D, 0x0
	0x02BC5CFC STP V0, V0, [X0 + 0x10]
	0x02BC5D00 STR X31, [X0 + 0x30]
	0x02BC5D04 STR W8, [X0 + 0xC]
	0x02BC5D08 LDR X30, [X31], #0x10
	0x02BC5D0C RET
	0x02BC5D10 BL 0x1C16F20
	0x02BC5D14 RET
	0x02BC5D18 STP X30, X19, [X31 - 0x10]!
	0x02BC5D1C LDR X9, [X0]
	0x02BC5D20 CBZ X9, 0x2BC5DA8
	0x02BC5D24 LDR W8, [X0 + 0xC]
	0x02BC5D28 LDR W10, [X9 + 0x1C]
	0x02BC5D2C MOV X19, X0
	0x02BC5D30 CMP W8, W10
	0x02BC5D34 B.NE 0x2BC5D84
	0x02BC5D38 LDRSW X8, [X19 + 0x8]
	0x02BC5D3C LDR W10, [X9 + 0x18]
	0x02BC5D40 CMP W8, W10
	0x02BC5D44 B.CS 0x2BC5D84
	0x02BC5D48 LDR X9, [X9 + 0x10]
	0x02BC5D4C CBZ X9, 0x2BC5DA8
	0x02BC5D50 LDR W10, [X9 + 0x18]
	0x02BC5D54 CMP W8, W10
	0x02BC5D58 B.CS 0x2BC5DAC
	0x02BC5D5C MOVZ W10, 0x28
	0x02BC5D60 MADD X9, X8, X10, X9
	0x02BC5D64 LDR X10, [X9 + 0x40]
	0x02BC5D68 LDP V0, V1, [X9 + 0x20]
	0x02BC5D6C ADD W8, W8, 0x1
	0x02BC5D70 STR W8, [X19 + 0x8]
	0x02BC5D74 STR X10, [X19 + 0x30]
	0x02BC5D78 STP V0, V1, [X19 + 0x10]
	0x02BC5D7C MOVZ W0, 0x1
	0x02BC5D80 B 0x2BC5DA0
	0x02BC5D84 LDR X0, [X1 + 0x20]
	0x02BC5D88 LDRB W8, [X0 + 0x135]
	0x02BC5D8C TBNZ X8, 0x0, 0x2BC5D94
	0x02BC5D90 BL 0x1C5C684
	0x02BC5D94 MOV X0, X19
	0x02BC5D98 BL 0x2BC5DB0
	0x02BC5D9C MOV W0, W31
	0x02BC5DA0 LDP X30, X19, [X31], #0x10
	0x02BC5DA4 RET
	0x02BC5DA8 BL 0x1C16F20
	0x02BC5DAC BL 0x1C16F28
	0x02BC5DB0 STP X30, X19, [X31 - 0x10]!
	0x02BC5DB4 LDR X8, [X0]
	0x02BC5DB8 CBZ X8, 0x2BC5E04
	0x02BC5DBC LDR W9, [X0 + 0xC]
	0x02BC5DC0 LDR W10, [X8 + 0x1C]
	0x02BC5DC4 MOV X19, X0
	0x02BC5DC8 CMP W9, W10
	0x02BC5DCC B.EQ 0x2BC5DE0
	0x02BC5DD0 MOV X0, X31
	0x02BC5DD4 BL 0x339E09C
	0x02BC5DD8 LDR X8, [X19]
	0x02BC5DDC CBZ X8, 0x2BC5E04

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X8, [X0]
	011 Move [X0+24], X31
	012 Compare X8, 0
	013 JumpIfEqual {118}
	014 Move X21, [X8+16]
	015 Compare X21, 0
	016 JumpIfEqual {108}
	017 Move X19, X1
	018 Move X20, X0
	019 Move W23, 32
	020 Move W24, 24
	021 Move X0, [X19+32]
	022 Move W25, [X20+32]
	023 Add X8, X0, 309
	024 NotImplemented "Instruction LDRH not yet implemented."
	025 Move TEMP, X8
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {34}
	029 Call 0x1C5D684
	030 Move X0, [X19+32]
	031 Move W22, [X20+32]
	032 Add X8, X0, 309
	033 NotImplemented "Instruction LDRH not yet implemented."
	034 Move W22, W25
	035 NotImplemented "Instruction CMP not yet implemented."
	036 NotImplemented "Instruction CSEL not yet implemented."
	037 Move X25, [X21]
	038 Move TEMP, X8
	039 And TEMP, TEMP, 1
	040 Compare TEMP, 1
	041 JumpIfEqual {46}
	042 Call 0x1C5D684
	043 Move X0, [X19+32]
	044 Add X8, X0, 309
	045 NotImplemented "Instruction LDRH not yet implemented."
	046 NotImplemented "Instruction CMP not yet implemented."
	047 NotImplemented "Instruction CSEL not yet implemented."
	048 Move X26, [X21]
	049 Move X22, [X20]
	050 Move TEMP, X8
	051 And TEMP, TEMP, 1
	052 Compare TEMP, 1
	053 JumpIfEqual {55}
	054 Call 0x1C5D684
	055 Compare X22, 0
	056 JumpIfEqual {118}
	057 Move X8, [X22]
	058 Move X1, [X21+16]
	059 Move X0, X22
	060 Move X9, [X8+664]
	061 Move X2, [X8+672]
	062 NotImplemented "Instruction BLR not yet implemented."
	063 Move TEMP, X0
	064 And TEMP, TEMP, 1
	065 Compare TEMP, 1
	066 JumpIfNotEqual {82}
	067 Move X22, [X20+16]
	068 Compare X22, 0
	069 JumpIfEqual {118}
	070 Move X0, [X19+32]
	071 Move W8, [X0+309]
	072 Move TEMP, X8
	073 And TEMP, TEMP, 1
	074 Compare TEMP, 1
	075 JumpIfEqual {77}
	076 Call 0x1C5D684
	077 Move X8, [X0+192]
	078 Move X0, X22
	079 Move X1, X21
	080 Move X2, [X8+136]
	081 Call Stack`1<Object>.Push, X0, X1
	082 Compare X25, 0
	083 JumpIfEqual {104}
	084 Move X0, [X19+32]
	085 Move X21, [X20]
	086 Move W8, [X0+309]
	087 Move TEMP, X8
	088 And TEMP, TEMP, 1
	089 Compare TEMP, 1
	090 JumpIfEqual {92}
	091 Call 0x1C5D684
	092 Compare X21, 0
	093 JumpIfEqual {118}
	094 Move X8, [X21]
	095 Move X1, [X25+16]
	096 Move X0, X21
	097 Move X9, [X8+664]
	098 Move X2, [X8+672]
	099 NotImplemented "Instruction BLR not yet implemented."
	100 Move TEMP, X0
	101 And TEMP, TEMP, 1
	102 Compare TEMP, 1
	103 JumpIfEqual {105}
	104 Move X25, X26
	105 Move X21, X25
	106 Compare X25, 0
	107 JumpIfNotEqual {21}
	108 Move X20, [X31+64]
	109 Move X19, [X31+72]
	110 Move X22, [X31+48]
	111 Move X21, [X31+56]
	112 Move X24, [X31+32]
	113 Move X23, [X31+40]
	114 Move X26, [X31+16]
	115 Move X25, [X31+24]
	116 Move X30, [X31+80]
	117 Return 
	118 Call 0x1C17F20

Method: System.Boolean MoveNext()

Disassembly:
	0x02BC5DE0 LDR W8, [X8 + 0x18]
	0x02BC5DE4 MOVI V0.2D, 0x0
	0x02BC5DE8 STP V0, V0, [X19 + 0x10]
	0x02BC5DEC STR X31, [X19 + 0x30]
	0x02BC5DF0 ADD W8, W8, 0x1
	0x02BC5DF4 STR W8, [X19 + 0x8]
	0x02BC5DF8 MOV W0, W31
	0x02BC5DFC LDP X30, X19, [X31], #0x10
	0x02BC5E00 RET
	0x02BC5E04 BL 0x1C16F20
	0x02BC5E08 LDR X9, [X0 + 0x30]
	0x02BC5E0C LDP V1, V0, [X0 + 0x10]
	0x02BC5E10 STR X9, [X8 + 0x20]
	0x02BC5E14 STP V1, V0, [X8]
	0x02BC5E18 RET
	0x02BC5E1C SUB X31, X31, 0x50
	0x02BC5E20 STR X30, [X31 + 0x30]
	0x02BC5E24 STP X20, X19, [X31 + 0x40]
	0x02BC5E28 LDR W8, [X0 + 0x8]
	0x02BC5E2C MOV X19, X0
	0x02BC5E30 MOV X20, X1
	0x02BC5E34 CBZ W8, 0x2BC5E50
	0x02BC5E38 LDR X9, [X19]
	0x02BC5E3C CBZ X9, 0x2BC5EB0
	0x02BC5E40 LDR W9, [X9 + 0x18]
	0x02BC5E44 ADD W9, W9, 0x1
	0x02BC5E48 CMP W8, W9
	0x02BC5E4C B.NE 0x2BC5E58
	0x02BC5E50 MOV X0, X31
	0x02BC5E54 BL 0x339E0E8
	0x02BC5E58 LDR X0, [X20 + 0x20]
	0x02BC5E5C ADD X8, X0, 0x135
	0x02BC5E60 LDRH W8, [X8]
	0x02BC5E64 TBNZ X8, 0x0, 0x2BC5E78
	0x02BC5E68 BL 0x1C5C684
	0x02BC5E6C LDR X0, [X20 + 0x20]
	0x02BC5E70 ADD X8, X0, 0x135
	0x02BC5E74 LDRH W8, [X8]
	0x02BC5E78 LDR X9, [X19 + 0x30]
	0x02BC5E7C LDP V1, V0, [X19 + 0x10]
	0x02BC5E80 STR X9, [X31 + 0x20]
	0x02BC5E84 STP V1, V0, [X31]
	0x02BC5E88 TBNZ X8, 0x0, 0x2BC5E90
	0x02BC5E8C BL 0x1C5C684
	0x02BC5E90 LDR X8, [X0 + 0xC0]
	0x02BC5E94 ADD X1, X31, 0x0
	0x02BC5E98 LDR X0, [X8 + 0x10]
	0x02BC5E9C BL 0x1C16E04
	0x02BC5EA0 LDP X20, X19, [X31 + 0x40]
	0x02BC5EA4 LDR X30, [X31 + 0x30]
	0x02BC5EA8 ADD X31, X31, 0x50
	0x02BC5EAC RET
	0x02BC5EB0 BL 0x1C16F20
	0x02BC5EB4 STP X30, X19, [X31 - 0x10]!
	0x02BC5EB8 LDR X8, [X0]
	0x02BC5EBC CBZ X8, 0x2BC5EF4
	0x02BC5EC0 LDR W9, [X0 + 0xC]
	0x02BC5EC4 LDR W8, [X8 + 0x1C]
	0x02BC5EC8 MOV X19, X0
	0x02BC5ECC CMP W9, W8
	0x02BC5ED0 B.EQ 0x2BC5EDC
	0x02BC5ED4 MOV X0, X31
	0x02BC5ED8 BL 0x339E09C
	0x02BC5EDC MOVI V0.2D, 0x0
	0x02BC5EE0 STR W31, [X19 + 0x8]
	0x02BC5EE4 STP V0, V0, [X19 + 0x10]
	0x02BC5EE8 STR X31, [X19 + 0x30]
	0x02BC5EEC LDP X30, X19, [X31], #0x10
	0x02BC5EF0 RET
	0x02BC5EF4 BL 0x1C16F20
	0x02BC5EF8 STR X30, [X31 - 0x10]!
	0x02BC5EFC STR X1, [X0]
	0x02BC5F00 STR W31, [X0 + 0x8]
	0x02BC5F04 CBZ X1, 0x2BC5F18
	0x02BC5F08 LDR W8, [X1 + 0x38]
	0x02BC5F0C STP W8, W31, [X0 + 0xC]
	0x02BC5F10 LDR X30, [X31], #0x10
	0x02BC5F14 RET
	0x02BC5F18 BL 0x1C16F20
	0x02BC5F1C RET
	0x02BC5F20 STR X30, [X31 - 0x20]!
	0x02BC5F24 STP X20, X19, [X31 + 0x10]
	0x02BC5F28 LDR X10, [X0]
	0x02BC5F2C CBZ X10, 0x2BC5FCC
	0x02BC5F30 LDR W8, [X0 + 0xC]
	0x02BC5F34 LDR W9, [X10 + 0x38]
	0x02BC5F38 CMP W8, W9
	0x02BC5F3C B.NE 0x2BC5FD0
	0x02BC5F40 LDR W8, [X0 + 0x8]
	0x02BC5F44 LDR W9, [X10 + 0x24]
	0x02BC5F48 CMP W8, W9
	0x02BC5F4C B.GE 0x2BC5F84
	0x02BC5F50 LDR X10, [X10 + 0x18]
	0x02BC5F54 CBZ X10, 0x2BC5FCC
	0x02BC5F58 LDR W11, [X10 + 0x18]
	0x02BC5F5C MOVZ W12, 0xC
	0x02BC5F60 CMP W8, W11
	0x02BC5F64 B.CS 0x2BC5FC8
	0x02BC5F68 SMADDL X13, X8, X12, X10
	0x02BC5F6C LDR W13, [X13 + 0x20]
	0x02BC5F70 TBZ X13, 0x1F, 0x2BC5F98
	0x02BC5F74 ADD W8, W8, 0x1
	0x02BC5F78 CMP W8, W9
	0x02BC5F7C STR W8, [X0 + 0x8]
	0x02BC5F80 B.LT 0x2BC5F60
	0x02BC5F84 MOV W8, W31
	0x02BC5F88 ADD W9, W9, 0x1
	0x02BC5F8C STR W9, [X0 + 0x8]
	0x02BC5F90 STR W31, [X0 + 0x10]
	0x02BC5F94 B 0x2BC5FB8
	0x02BC5F98 SXTW X9, W8
	0x02BC5F9C MOVZ W11, 0xC
	0x02BC5FA0 MADD X9, X9, X11, X10
	0x02BC5FA4 LDR W9, [X9 + 0x28]
	0x02BC5FA8 ADD W8, W8, 0x1
	0x02BC5FAC STR W8, [X0 + 0x8]
	0x02BC5FB0 MOVZ W8, 0x1
	0x02BC5FB4 STR W9, [X0 + 0x10]
	0x02BC5FB8 LDP X20, X19, [X31 + 0x10]
	0x02BC5FBC MOV W0, W8
	0x02BC5FC0 LDR X30, [X31], #0x20
	0x02BC5FC4 RET
	0x02BC5FC8 BL 0x1C16F28
	0x02BC5FCC BL 0x1C16F20
	0x02BC5FD0 ADRP X0, 0x152E000
	0x02BC5FD4 LDR X0, [X0 + 0x5B0]
	0x02BC5FD8 MOV X19, X1
	0x02BC5FDC BL 0x1C16D08
	0x02BC5FE0 BL 0x1C16F10
	0x02BC5FE4 MOV X20, X0
	0x02BC5FE8 ADRP X0, 0x1558000
	0x02BC5FEC LDR X0, [X0 + 0x288]
	0x02BC5FF0 BL 0x1C16D08
	0x02BC5FF4 MOV X1, X0
	0x02BC5FF8 MOV X0, X20
	0x02BC5FFC MOV X2, X31
	0x02BC6000 BL 0x337DF1C
	0x02BC6004 MOV X0, X20
	0x02BC6008 MOV X1, X19
	0x02BC600C BL 0x1C16DEC
	0x02BC6010 LDR W0, [X0 + 0x10]
	0x02BC6014 RET

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X20, X0
	012 Move X0, [X0]
	013 Compare X0, 0
	014 JumpIfEqual {175}
	015 Move X8, [X0]
	016 Move X19, X1
	017 Move X9, [X8+648]
	018 Move X1, [X8+656]
	019 NotImplemented "Instruction BLR not yet implemented."
	020 Move X8, [X20]
	021 Compare X8, 0
	022 JumpIfEqual {175}
	023 Move W9, [X20+8]
	024 Move W8, [X8+36]
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move X21, [X20+16]
	027 Compare X21, 0
	028 JumpIfEqual {175}
	029 Move X0, [X19+32]
	030 Move W8, [X0+309]
	031 Move TEMP, X8
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfEqual {36}
	035 Call 0x1C5D684
	036 Move W23, [X21+24]
	037 Compare W23, 0
	038 JumpIfEqual {161}
	039 Move X21, [X20+16]
	040 Compare X21, 0
	041 JumpIfEqual {175}
	042 Move X0, [X19+32]
	043 Move W8, [X0+309]
	044 Move TEMP, X8
	045 And TEMP, TEMP, 1
	046 Compare TEMP, 1
	047 JumpIfEqual {49}
	048 Call 0x1C5D684
	049 Move X8, [X0+192]
	050 Move X0, X21
	051 Move X1, [X8+152]
	052 Call Stack`1<Object>.Pop, X0
	053 Move [X20+24], X0
	054 Compare X0, 0
	055 JumpIfEqual {175}
	056 Move X21, X0
	057 Move X0, [X19+32]
	058 Move W22, [X20+32]
	059 Move W8, [X0+309]
	060 Move TEMP, X8
	061 And TEMP, TEMP, 1
	062 Compare TEMP, 1
	063 JumpIfEqual {65}
	064 Call 0x1C5D684
	065 NotImplemented "Instruction CMP not yet implemented."
	066 Move W8, 24
	067 Move W9, 32
	068 NotImplemented "Instruction CSEL not yet implemented."
	069 Move X21, [X21]
	070 Compare X21, 0
	071 JumpIfEqual {162}
	072 Move W24, 32
	073 Move W25, 24
	074 Move X0, [X19+32]
	075 Move W26, [X20+32]
	076 Add X8, X0, 309
	077 NotImplemented "Instruction LDRH not yet implemented."
	078 Move TEMP, X8
	079 And TEMP, TEMP, 1
	080 Compare TEMP, 1
	081 JumpIfEqual {87}
	082 Call 0x1C5D684
	083 Move X0, [X19+32]
	084 Move W22, [X20+32]
	085 Add X8, X0, 309
	086 NotImplemented "Instruction LDRH not yet implemented."
	087 Move W22, W26
	088 NotImplemented "Instruction CMP not yet implemented."
	089 NotImplemented "Instruction CSEL not yet implemented."
	090 Move X26, [X21]
	091 Move TEMP, X8
	092 And TEMP, TEMP, 1
	093 Compare TEMP, 1
	094 JumpIfEqual {99}
	095 Call 0x1C5D684
	096 Move X0, [X19+32]
	097 Add X8, X0, 309
	098 NotImplemented "Instruction LDRH not yet implemented."
	099 NotImplemented "Instruction CMP not yet implemented."
	100 NotImplemented "Instruction CSEL not yet implemented."
	101 Move X27, [X21]
	102 Move X22, [X20]
	103 Move TEMP, X8
	104 And TEMP, TEMP, 1
	105 Compare TEMP, 1
	106 JumpIfEqual {108}
	107 Call 0x1C5D684
	108 Compare X22, 0
	109 JumpIfEqual {175}
	110 Move X8, [X22]
	111 Move X1, [X21+16]
	112 Move X0, X22
	113 Move X9, [X8+664]
	114 Move X2, [X8+672]
	115 NotImplemented "Instruction BLR not yet implemented."
	116 Move TEMP, X0
	117 And TEMP, TEMP, 1
	118 Compare TEMP, 1
	119 JumpIfNotEqual {135}
	120 Move X22, [X20+16]
	121 Compare X22, 0
	122 JumpIfEqual {175}
	123 Move X0, [X19+32]
	124 Move W8, [X0+309]
	125 Move TEMP, X8
	126 And TEMP, TEMP, 1
	127 Compare TEMP, 1
	128 JumpIfEqual {130}
	129 Call 0x1C5D684
	130 Move X8, [X0+192]
	131 Move X0, X22
	132 Move X1, X21
	133 Move X2, [X8+136]
	134 Call Stack`1<Object>.Push, X0, X1
	135 Compare X27, 0
	136 JumpIfEqual {157}
	137 Move X0, [X19+32]
	138 Move X21, [X20]
	139 Move W8, [X0+309]
	140 Move TEMP, X8
	141 And TEMP, TEMP, 1
	142 Compare TEMP, 1
	143 JumpIfEqual {145}
	144 Call 0x1C5D684
	145 Compare X21, 0
	146 JumpIfEqual {175}
	147 Move X8, [X21]
	148 Move X1, [X27+16]
	149 Move X0, X21
	150 Move X9, [X8+664]
	151 Move X2, [X8+672]
	152 NotImplemented "Instruction BLR not yet implemented."
	153 Move TEMP, X0
	154 And TEMP, TEMP, 1
	155 Compare TEMP, 1
	156 JumpIfEqual {158}
	157 Move X27, X26
	158 Move X21, X27
	159 Compare X27, 0
	160 JumpIfNotEqual {74}
	161 Move [X20+24], X31
	162 NotImplemented "Instruction CMP not yet implemented."
	163 Move X20, [X31+64]
	164 Move X19, [X31+72]
	165 Move X22, [X31+48]
	166 Move X21, [X31+56]
	167 Move X24, [X31+32]
	168 Move X23, [X31+40]
	169 Move X26, [X31+16]
	170 Move X25, [X31+24]
	171 NotImplemented "Instruction CSET not yet implemented."
	172 Move X30, [X31+80]
	173 Move X27, [X31+88]
	174 Return X0
	175 Call 0x1C17F20
	176 Move X0, 0x152F000
	177 Move X0, [X0+1456]
	178 Call 0x1C17D08
	179 Call 0x1C17F10
	180 Move X20, X0
	181 Move X0, 0x1559000
	182 Move X0, [X0+648]
	183 Call 0x1C17D08
	184 Move X1, X0
	185 Move X0, X20
	186 Move X2, X31
	187 Call InvalidOperationException..ctor, X0, X1
	188 Move X0, X20
	189 Move X1, X19
	190 Call 0x1C17DEC

Method: System.Void Dispose()

Disassembly:
	0x02BC6018 STR X30, [X31 - 0x20]!

ISIL:
	001 Return 

Method: T get_Current()

Disassembly:
	0x02BC601C STP X20, X19, [X31 + 0x10]
	0x02BC6020 LDR W8, [X0 + 0x8]
	0x02BC6024 MOV X19, X1
	0x02BC6028 CBZ W8, 0x2BC6094
	0x02BC602C LDR X9, [X0]
	0x02BC6030 MOV X20, X0
	0x02BC6034 CBZ X9, 0x2BC60D0
	0x02BC6038 LDR W9, [X9 + 0x24]
	0x02BC603C ADD W9, W9, 0x1
	0x02BC6040 CMP W8, W9
	0x02BC6044 B.EQ 0x2BC6094
	0x02BC6048 LDR X0, [X19 + 0x20]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, [X0+24]
	004 Compare X19, 0
	005 JumpIfEqual {14}
	006 Move X0, [X1+32]
	007 Move W8, [X0+309]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {13}
	012 Call 0x1C5D684
	013 Move X0, [X19+16]
	014 Move X0, X31
	015 Move X30, [X31+16]
	016 Move X19, [X31+24]
	017 Return X0

Method: System.Object System.Collections.IEnumerator.get_Current()

Disassembly:
	0x02BC604C ADD X8, X0, 0x135
	0x02BC6050 LDRH W8, [X8]
	0x02BC6054 TBNZ X8, 0x0, 0x2BC6068
	0x02BC6058 BL 0x1C5C684
	0x02BC605C LDR X0, [X19 + 0x20]
	0x02BC6060 ADD X8, X0, 0x135
	0x02BC6064 LDRH W8, [X8]
	0x02BC6068 LDR W9, [X20 + 0x10]
	0x02BC606C STR W9, [X31 + 0x8]
	0x02BC6070 TBNZ X8, 0x0, 0x2BC6078
	0x02BC6074 BL 0x1C5C684
	0x02BC6078 LDR X8, [X0 + 0xC0]
	0x02BC607C ADD X1, X31, 0x8
	0x02BC6080 LDR X0, [X8 + 0x10]
	0x02BC6084 BL 0x1C16E04
	0x02BC6088 LDP X20, X19, [X31 + 0x10]
	0x02BC608C LDR X30, [X31], #0x20
	0x02BC6090 RET
	0x02BC6094 ADRP X0, 0x152D000
	0x02BC6098 LDR X0, [X0 + 0x5B0]
	0x02BC609C BL 0x1C16D08
	0x02BC60A0 BL 0x1C16F10
	0x02BC60A4 MOV X20, X0
	0x02BC60A8 ADRP X0, 0x1557000
	0x02BC60AC LDR X0, [X0 + 0x290]
	0x02BC60B0 BL 0x1C16D08
	0x02BC60B4 MOV X1, X0
	0x02BC60B8 MOV X0, X20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, [X0+24]
	005 Compare X19, 0
	006 JumpIfEqual {19}
	007 Move X0, [X1+32]
	008 Move W8, [X0+309]
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {14}
	013 Call 0x1C5D684
	014 Move X0, [X19+16]
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 Return X0
	019 Move X0, 0x152E000
	020 Move X0, [X0+1456]
	021 Move X19, X1
	022 Call 0x1C17D08
	023 Call 0x1C17F10
	024 Move X20, X0
	025 Move X0, 0x1558000
	026 Move X0, [X0+656]
	027 Call 0x1C17D08
	028 Move X1, X0
	029 Move X0, X20
	030 Move X2, X31
	031 Call InvalidOperationException..ctor, X0, X1
	032 Move X0, X20
	033 Move X1, X19
	034 Call 0x1C17DEC

Method: System.Void Reset()

Disassembly:
	0x02BC60BC MOV X2, X31
	0x02BC60C0 BL 0x337DF1C
	0x02BC60C4 MOV X0, X20
	0x02BC60C8 MOV X1, X19
	0x02BC60CC BL 0x1C16DEC
	0x02BC60D0 BL 0x1C16F20
	0x02BC60D4 STR X30, [X31 - 0x20]!
	0x02BC60D8 STP X20, X19, [X31 + 0x10]
	0x02BC60DC LDR X8, [X0]
	0x02BC60E0 CBZ X8, 0x2BC6108
	0x02BC60E4 LDR W9, [X0 + 0xC]
	0x02BC60E8 LDR W8, [X8 + 0x38]
	0x02BC60EC CMP W9, W8
	0x02BC60F0 B.NE 0x2BC610C
	0x02BC60F4 LDP X20, X19, [X31 + 0x10]
	0x02BC60F8 STR W31, [X0 + 0x8]
	0x02BC60FC STR W31, [X0 + 0x10]
	0x02BC6100 LDR X30, [X31], #0x20
	0x02BC6104 RET
	0x02BC6108 BL 0x1C16F20
	0x02BC610C ADRP X0, 0x152D000
	0x02BC6110 LDR X0, [X0 + 0x5B0]
	0x02BC6114 MOV X19, X1
	0x02BC6118 BL 0x1C16D08
	0x02BC611C BL 0x1C16F10
	0x02BC6120 MOV X20, X0
	0x02BC6124 ADRP X0, 0x1557000
	0x02BC6128 LDR X0, [X0 + 0x288]
	0x02BC612C BL 0x1C16D08
	0x02BC6130 MOV X1, X0
	0x02BC6134 MOV X0, X20
	0x02BC6138 MOV X2, X31
	0x02BC613C BL 0x337DF1C
	0x02BC6140 MOV X0, X20
	0x02BC6144 MOV X1, X19
	0x02BC6148 BL 0x1C16DEC
	0x02BC614C STR X30, [X31 - 0x10]!
	0x02BC6150 STR X1, [X0]
	0x02BC6154 STR W31, [X0 + 0x8]
	0x02BC6158 CBZ X1, 0x2BC616C
	0x02BC615C LDR W8, [X1 + 0x1C]
	0x02BC6160 STP W8, W31, [X0 + 0xC]
	0x02BC6164 LDR X30, [X31], #0x10
	0x02BC6168 RET
	0x02BC616C BL 0x1C16F20
	0x02BC6170 RET
	0x02BC6174 STP X30, X19, [X31 - 0x10]!
	0x02BC6178 LDR X9, [X0]
	0x02BC617C CBZ X9, 0x2BC61F8
	0x02BC6180 LDR W8, [X0 + 0xC]
	0x02BC6184 LDR W10, [X9 + 0x1C]
	0x02BC6188 MOV X19, X0
	0x02BC618C CMP W8, W10
	0x02BC6190 B.NE 0x2BC61D4
	0x02BC6194 LDRSW X8, [X19 + 0x8]
	0x02BC6198 LDR W10, [X9 + 0x18]
	0x02BC619C CMP W8, W10
	0x02BC61A0 B.CS 0x2BC61D4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X0]
	006 Compare X8, 0
	007 JumpIfEqual {62}
	008 Move W9, [X0+8]
	009 Move W8, [X8+36]
	010 Move X20, X0
	011 Move X19, X1
	012 NotImplemented "Instruction CMP not yet implemented."
	013 Move X21, [X20+16]
	014 Compare X21, 0
	015 JumpIfEqual {62}
	016 Move X0, [X19+32]
	017 Move W8, [X0+309]
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {23}
	022 Call 0x1C5D684
	023 Move X8, [X0+192]
	024 Move X0, X21
	025 Move X1, [X8+160]
	026 Call Stack`1<Object>.Clear, X0
	027 Move X0, [X19+32]
	028 Move W8, [X0+309]
	029 Move TEMP, X8
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfEqual {34}
	033 Call 0x1C5D684
	034 Move X8, [X0+192]
	035 Move X0, [X8+16]
	036 Move W8, [X0+309]
	037 Move TEMP, X8
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfEqual {42}
	041 Call 0x1C5D684
	042 Move W8, [X0+224]
	043 Compare W8, 0
	044 JumpIfNotEqual {46}
	045 Call 0x1C17DFC
	046 Move X0, [X19+32]
	047 Move W8, [X0+309]
	048 Move TEMP, X8
	049 And TEMP, TEMP, 1
	050 Compare TEMP, 1
	051 JumpIfEqual {53}
	052 Call 0x1C5D684
	053 Move X8, [X0+192]
	054 Move X0, X20
	055 Move X20, [X31+16]
	056 Move X19, [X31+24]
	057 Move X1, [X8+88]
	058 Move X30, [X31+32]
	059 Move X21, [X31+40]
	060 Call 0x2BC5C90, X0
	061 Return 
	062 Call 0x1C17F20
	063 Move X0, 0x152E000
	064 Move X0, [X0+1456]
	065 Call 0x1C17D08
	066 Call 0x1C17F10
	067 Move X20, X0
	068 Move X0, 0x1558000
	069 Move X0, [X0+648]
	070 Call 0x1C17D08
	071 Move X1, X0
	072 Move X0, X20
	073 Move X2, X31
	074 Call InvalidOperationException..ctor, X0, X1
	075 Move X0, X20
	076 Move X1, X19
	077 Call 0x1C17DEC

Method: System.Void System.Collections.IEnumerator.Reset()

Disassembly:
	0x02BC61A4 LDR X9, [X9 + 0x10]
	0x02BC61A8 CBZ X9, 0x2BC61F8
	0x02BC61AC LDR W10, [X9 + 0x18]
	0x02BC61B0 CMP W8, W10
	0x02BC61B4 B.CS 0x2BC61FC
	0x02BC61B8 ADD X9, X9, X8, 0x2, LSL
	0x02BC61BC LDR W9, [X9 + 0x20]
	0x02BC61C0 ADD W8, W8, 0x1
	0x02BC61C4 STR W8, [X19 + 0x8]
	0x02BC61C8 MOVZ W0, 0x1
	0x02BC61CC STR W9, [X19 + 0x10]
	0x02BC61D0 B 0x2BC61F0
	0x02BC61D4 LDR X0, [X1 + 0x20]
	0x02BC61D8 LDRB W8, [X0 + 0x135]
	0x02BC61DC TBNZ X8, 0x0, 0x2BC61E4
	0x02BC61E0 BL 0x1C5C684
	0x02BC61E4 MOV X0, X19
	0x02BC61E8 BL 0x2BC6200
	0x02BC61EC MOV W0, W31
	0x02BC61F0 LDP X30, X19, [X31], #0x10
	0x02BC61F4 RET
	0x02BC61F8 BL 0x1C16F20
	0x02BC61FC BL 0x1C16F28
	0x02BC6200 STP X30, X19, [X31 - 0x10]!
	0x02BC6204 LDR X8, [X0]
	0x02BC6208 CBZ X8, 0x2BC624C
	0x02BC620C LDR W9, [X0 + 0xC]
	0x02BC6210 LDR W10, [X8 + 0x1C]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X1+32]
	005 Move X20, X1
	006 Move X19, X0
	007 Move W9, [X8+309]
	008 Move TEMP, X9
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {15}
	012 Move X0, X8
	013 Call 0x1C5D684
	014 Move X8, X0
	015 Move X8, [X8+192]
	016 Move X0, [X8+16]
	017 Move W8, [X0+309]
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {23}
	022 Call 0x1C5D684
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Move X0, [X20+32]
	028 Move W8, [X0+309]
	029 Move TEMP, X8
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfEqual {34}
	033 Call 0x1C5D684
	034 Move X8, [X0+192]
	035 Move X0, X19
	036 Move X20, [X31+16]
	037 Move X19, [X31+24]
	038 Move X1, [X8+168]
	039 Move X30, [X31+32]
	040 Call 0x2BC60BC, X0
	041 Return 

Method: System.Void .cctor()

Disassembly:
	0x02BC6214 MOV X19, X0
	0x02BC6218 CMP W9, W10
	0x02BC621C B.EQ 0x2BC6230
	0x02BC6220 MOV X0, X31
	0x02BC6224 BL 0x339E09C
	0x02BC6228 LDR X8, [X19]
	0x02BC622C CBZ X8, 0x2BC624C
	0x02BC6230 LDR W8, [X8 + 0x18]
	0x02BC6234 STR W31, [X19 + 0x10]
	0x02BC6238 MOV W0, W31
	0x02BC623C ADD W8, W8, 0x1
	0x02BC6240 STR W8, [X19 + 0x8]
	0x02BC6244 LDP X30, X19, [X31], #0x10
	0x02BC6248 RET
	0x02BC624C BL 0x1C16F20
	0x02BC6250 LDR W0, [X0 + 0x10]
	0x02BC6254 RET
	0x02BC6258 STR X30, [X31 - 0x20]!
	0x02BC625C STP X20, X19, [X31 + 0x10]
	0x02BC6260 LDR W8, [X0 + 0x8]
	0x02BC6264 MOV X19, X0
	0x02BC6268 MOV X20, X1
	0x02BC626C CBZ W8, 0x2BC6288
	0x02BC6270 LDR X9, [X19]
	0x02BC6274 CBZ X9, 0x2BC62DC
	0x02BC6278 LDR W9, [X9 + 0x18]
	0x02BC627C ADD W9, W9, 0x1
	0x02BC6280 CMP W8, W9
	0x02BC6284 B.NE 0x2BC6290
	0x02BC6288 MOV X0, X31
	0x02BC628C BL 0x339E0E8
	0x02BC6290 LDR X0, [X20 + 0x20]
	0x02BC6294 ADD X8, X0, 0x135
	0x02BC6298 LDRH W8, [X8]
	0x02BC629C TBNZ X8, 0x0, 0x2BC62B0
	0x02BC62A0 BL 0x1C5C684
	0x02BC62A4 LDR X0, [X20 + 0x20]
	0x02BC62A8 ADD X8, X0, 0x135
	0x02BC62AC LDRH W8, [X8]
	0x02BC62B0 LDR W9, [X19 + 0x10]
	0x02BC62B4 STR W9, [X31 + 0x8]
	0x02BC62B8 TBNZ X8, 0x0, 0x2BC62C0
	0x02BC62BC BL 0x1C5C684
	0x02BC62C0 LDR X8, [X0 + 0xC0]
	0x02BC62C4 ADD X1, X31, 0x8
	0x02BC62C8 LDR X0, [X8 + 0x10]
	0x02BC62CC BL 0x1C16E04
	0x02BC62D0 LDP X20, X19, [X31 + 0x10]
	0x02BC62D4 LDR X30, [X31], #0x20
	0x02BC62D8 RET
	0x02BC62DC BL 0x1C16F20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X0
	005 Move X0, [X0+32]
	006 Move W8, [X0+309]
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {12}
	011 Call 0x1C5D684
	012 Move X8, [X0+192]
	013 Move X0, [X8+80]
	014 Move W8, [X0+309]
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {20}
	019 Call 0x1C5D684
	020 Call 0x1C17F10
	021 Move X8, [X19+32]
	022 Move X20, X0
	023 Move W9, [X8+309]
	024 Move TEMP, X9
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {31}
	028 Move X0, X8
	029 Call 0x1C5D684
	030 Move X8, X0
	031 Move X8, [X8+192]
	032 Move W2, 1
	033 Move X0, X20
	034 Move X1, X31
	035 Move X3, [X8+176]
	036 Call 0x2424E84, X0, X1, X2
	037 Move X0, [X19+32]
	038 Move W8, [X0+309]
	039 Move TEMP, X8
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfEqual {44}
	043 Call 0x1C5D684
	044 Move X8, [X0+192]
	045 Move X0, [X8+16]
	046 Move W8, [X0+309]
	047 Move TEMP, X8
	048 And TEMP, TEMP, 1
	049 Compare TEMP, 1
	050 JumpIfEqual {52}
	051 Call 0x1C5D684
	052 Move X8, [X0+184]
	053 Move [X8], X20
	054 Move X0, [X19+32]
	055 Move W8, [X0+309]
	056 Move TEMP, X8
	057 And TEMP, TEMP, 1
	058 Compare TEMP, 1
	059 JumpIfEqual {61}
	060 Call 0x1C5D684
	061 Move X8, [X0+192]
	062 Move X0, [X8+16]
	063 Move W8, [X0+309]
	064 Move TEMP, X8
	065 And TEMP, TEMP, 1
	066 Compare TEMP, 1
	067 JumpIfEqual {73}
	068 Move X20, [X31+16]
	069 Move X19, [X31+24]
	070 Move X30, [X31+32]
	071 Call 0x1C5D684
	072 Return 
	073 Move X20, [X31+16]
	074 Move X19, [X31+24]
	075 Move X30, [X31+32]
	076 Return 

