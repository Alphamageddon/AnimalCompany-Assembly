Type: System.Collections.Generic.SortedSet`1

Method: System.Void .ctor()

Disassembly:
	0x025F7F84 STP V0, V0, [X31]
	0x025F7F88 LDR X8, [X8 + 0x20]
	0x025F7F8C LDR X8, [X8 + 0xC0]
	0x025F7F90 LDR X2, [X8 + 0x1E8]
	0x025F7F94 BL 0x2BC4A54
	0x025F7F98 LDR X8, [X31 + 0x20]
	0x025F7F9C LDP V1, V0, [X31]
	0x025F7FA0 ADD X1, X31, 0x0
	0x025F7FA4 STR X8, [X31 + 0x50]
	0x025F7FA8 STP V1, V0, [X31 + 0x30]
	0x025F7FAC STP V1, V0, [X31]
	0x025F7FB0 STR X8, [X31 + 0x20]
	0x025F7FB4 LDR X8, [X19 + 0x20]
	0x025F7FB8 LDR X8, [X8 + 0xC0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X1
	005 Move X1, X31
	006 Move X20, X0
	007 Call Object..ctor, X0
	008 Move X8, [X19+32]
	009 Move X8, [X8+192]
	010 Move X0, [X8]
	011 Call Comparer`1<Object>.get_Default
	012 Move [X20+24], X0
	013 Move X20, [X31+16]
	014 Move X19, [X31+24]
	015 Move X30, [X31+32]
	016 Return 

Method: System.Void .ctor(System.Collections.Generic.IComparer`1<T> comparer)

Disassembly:
	0x025F7FBC LDR X0, [X8 + 0x1E0]
	0x025F7FC0 BL 0x1C16E04
	0x025F7FC4 LDP X30, X19, [X31 + 0x60]
	0x025F7FC8 ADD X31, X31, 0x70
	0x025F7FCC RET
	0x025F7FD0 SUB X31, X31, 0x70
	0x025F7FD4 STP X30, X19, [X31 + 0x60]
	0x025F7FD8 LDR X8, [X1 + 0x20]
	0x025F7FDC MOVI V0.2D, 0x0
	0x025F7FE0 MOV X19, X1
	0x025F7FE4 MOV X1, X0
	0x025F7FE8 LDR X8, [X8 + 0xC0]
	0x025F7FEC ADD X0, X31, 0x0
	0x025F7FF0 LDR X8, [X8 + 0x1F0]
	0x025F7FF4 STR X31, [X31 + 0x20]
	0x025F7FF8 STP V0, V0, [X31]
	0x025F7FFC LDR X8, [X8 + 0x20]
	0x025F8000 LDR X8, [X8 + 0xC0]
	0x025F8004 LDR X2, [X8 + 0x1E8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, X1
	006 Move X1, X31
	007 Move X21, X2
	008 Move X19, X0
	009 Call Object..ctor, X0
	010 Compare X20, 0
	011 JumpIfNotEqual {17}
	012 Move X8, [X21+32]
	013 Move X8, [X8+192]
	014 Move X0, [X8]
	015 Call Comparer`1<Object>.get_Default
	016 Move X20, X0
	017 Compare X19, 0
	018 JumpIfEqual {25}
	019 Move [X19+24], X20
	020 Move X20, [X31+16]
	021 Move X19, [X31+24]
	022 Move X30, [X31+32]
	023 Move X21, [X31+40]
	024 Return 
	025 Call 0x1C17F20

Method: System.Void .ctor(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context)

Disassembly:
	0x025F8008 BL 0x2BC4A54
	0x025F800C LDR X8, [X31 + 0x20]
	0x025F8010 LDP V1, V0, [X31]
	0x025F8014 ADD X1, X31, 0x0
	0x025F8018 STR X8, [X31 + 0x50]
	0x025F801C STP V1, V0, [X31 + 0x30]
	0x025F8020 STP V1, V0, [X31]
	0x025F8024 STR X8, [X31 + 0x20]
	0x025F8028 LDR X8, [X19 + 0x20]
	0x025F802C LDR X8, [X8 + 0xC0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X1
	005 Move X1, X31
	006 Move X20, X0
	007 Call Object..ctor, X0
	008 Move [X20+48], X19
	009 Move X20, [X31+16]
	010 Move X19, [X31+24]
	011 Move X30, [X31+32]
	012 Return 

Method: System.Boolean InOrderTreeWalk(System.Collections.Generic.TreeWalkPredicate`1<T> action)

Disassembly:
	0x025F8030 LDR X0, [X8 + 0x1E0]
	0x025F8034 BL 0x1C16E04
	0x025F8038 LDP X30, X19, [X31 + 0x60]
	0x025F803C ADD X31, X31, 0x70
	0x025F8040 RET
	0x025F8044 STR X30, [X31 - 0x40]!
	0x025F8048 STP X24, X23, [X31 + 0x10]
	0x025F804C STP X22, X21, [X31 + 0x20]
	0x025F8050 STP X20, X19, [X31 + 0x30]
	0x025F8054 CBZ X3, 0x25F8174
	0x025F8058 LDR X9, [X2]
	0x025F805C MOV X24, X2
	0x025F8060 CBZ X9, 0x25F8174
	0x025F8064 LDR X8, [X5 + 0x20]
	0x025F8068 LDR X10, [X9 + 0x20]
	0x025F806C LDR X11, [X3 + 0x20]
	0x025F8070 MOV X21, X5
	0x025F8074 LDR X8, [X8 + 0xC0]
	0x025F8078 CMP X10, X1
	0x025F807C CSET W12, EQ
	0x025F8080 CMP X11, X9
	0x025F8084 CSET W9, NE
	0x025F8088 MOV X20, X4
	0x025F808C MOV X19, X3
	0x025F8090 MOV X22, X0
	0x025F8094 CMP W9, W12
	0x025F8098 B.EQ 0x25F80B4
	0x025F809C CMP X10, X1
	0x025F80A0 B.EQ 0x25F80CC
	0x025F80A4 LDR X1, [X8 + 0x140]
	0x025F80A8 MOV X0, X19
	0x025F80AC BL 0x2424270
	0x025F80B0 B 0x25F80D8
	0x025F80B4 CMP X10, X1
	0x025F80B8 B.EQ 0x25F80E0
	0x025F80BC LDR X1, [X8 + 0x200]
	0x025F80C0 MOV X0, X19
	0x025F80C4 BL 0x2424298
	0x025F80C8 B 0x25F80EC
	0x025F80CC LDR X1, [X8 + 0x138]
	0x025F80D0 MOV X0, X19
	0x025F80D4 BL 0x242420C
	0x025F80D8 MOV X23, X0
	0x025F80DC B 0x25F80F4
	0x025F80E0 LDR X1, [X8 + 0x208]
	0x025F80E4 MOV X0, X19
	0x025F80E8 BL 0x2424234
	0x025F80EC MOV X23, X0
	0x025F80F0 STR X20, [X24]
	0x025F80F4 LDR X8, [X21 + 0x20]
	0x025F80F8 MOV X0, X19
	0x025F80FC LDR X8, [X8 + 0xC0]
	0x025F8100 LDR X1, [X8 + 0x128]
	0x025F8104 BL 0x2424098
	0x025F8108 CBZ X23, 0x25F8174
	0x025F810C LDR X8, [X21 + 0x20]
	0x025F8110 MOV X0, X23
	0x025F8114 LDR X8, [X8 + 0xC0]
	0x025F8118 LDR X1, [X8 + 0xC8]
	0x025F811C BL 0x2424090
	0x025F8120 CBZ X20, 0x25F815C
	0x025F8124 LDR X8, [X21 + 0x20]
	0x025F8128 MOV X0, X20
	0x025F812C MOV X1, X19
	0x025F8130 MOV X2, X23
	0x025F8134 LDR X8, [X8 + 0xC0]
	0x025F8138 LDP X20, X19, [X31 + 0x30]
	0x025F813C LDP X22, X21, [X31 + 0x20]
	0x025F8140 LDP X24, X23, [X31 + 0x10]
	0x025F8144 LDR X8, [X8 + 0x148]
	0x025F8148 LDR X8, [X8 + 0x20]
	0x025F814C LDR X8, [X8 + 0xC0]
	0x025F8150 LDR X3, [X8 + 0x210]
	0x025F8154 LDR X30, [X31], #0x40
	0x025F8158 B 0x2424304
	0x025F815C STR X23, [X22 + 0x10]
	0x025F8160 LDP X20, X19, [X31 + 0x30]
	0x025F8164 LDP X22, X21, [X31 + 0x20]
	0x025F8168 LDP X24, X23, [X31 + 0x10]
	0x025F816C LDR X30, [X31], #0x40
	0x025F8170 RET
	0x025F8174 BL 0x1C16F20
	0x025F8178 CBZ X1, 0x25F819C
	0x025F817C LDR X8, [X4 + 0x20]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X8, [X0+16]
	008 Compare X8, 0
	009 JumpIfEqual {98}
	010 Move X8, [X0]
	011 Move X20, X1
	012 Move X19, X2
	013 Move X22, X0
	014 Move X9, [X8+648]
	015 Move X1, [X8+656]
	016 NotImplemented "Instruction BLR not yet implemented."
	017 Move X8, [X19+32]
	018 Move W9, [X22+32]
	019 Move X8, [X8+192]
	020 Add W9, W9, 1
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Move W23, W31
	023 Move W9, W9
	024 ShiftRight W9, 1
	025 And W9, W9, 0x7FFFFFFF
	026 Add W23, W23, 2
	027 Compare W9, 0
	028 JumpIfNotEqual {23}
	029 Move W23, W31
	030 Move X0, [X8+72]
	031 Move W8, [X0+309]
	032 Move TEMP, X8
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfEqual {37}
	036 Call 0x1C5D684
	037 Call 0x1C17F10
	038 Move X8, [X19+32]
	039 Move W1, W23
	040 Move X21, X0
	041 Move X8, [X8+192]
	042 Move X2, [X8+80]
	043 Call Stack`1<Object>..ctor, X0, X1
	044 Move X22, [X22+16]
	045 Compare X22, 0
	046 JumpIfEqual {58}
	047 Compare X21, 0
	048 JumpIfEqual {107}
	049 Move X8, [X19+32]
	050 Move X0, X21
	051 Move X1, X22
	052 Move X8, [X8+192]
	053 Move X2, [X8+88]
	054 Call Stack`1<Object>.Push, X0, X1
	055 Move X22, [X22+24]
	056 Compare X22, 0
	057 JumpIfNotEqual {49}
	058 Compare X21, 0
	059 JumpIfEqual {107}
	060 Move W8, [X21+24]
	061 Compare W8, 0
	062 JumpIfEqual {98}
	063 Move X8, [X19+32]
	064 Move X0, X21
	065 Move X8, [X8+192]
	066 Move X1, [X8+104]
	067 Call Stack`1<Object>.Pop, X0
	068 Compare X20, 0
	069 JumpIfEqual {107}
	070 Move X23, X0
	071 Move X8, [X20+24]
	072 Move X0, [X20+64]
	073 Move X2, [X20+40]
	074 Move X1, X23
	075 NotImplemented "Instruction BLR not yet implemented."
	076 Move W22, W0
	077 Move TEMP, X0
	078 And TEMP, TEMP, 1
	079 Compare TEMP, 1
	080 JumpIfNotEqual {99}
	081 Compare X23, 0
	082 JumpIfEqual {107}
	083 Move X23, [X23+32]
	084 Compare X23, 0
	085 JumpIfEqual {95}
	086 Move X8, [X19+32]
	087 Move X0, X21
	088 Move X1, X23
	089 Move X8, [X8+192]
	090 Move X2, [X8+88]
	091 Call Stack`1<Object>.Push, X0, X1
	092 Move X23, [X23+24]
	093 Compare X23, 0
	094 JumpIfNotEqual {86}
	095 Move W8, [X21+24]
	096 Compare W8, 0
	097 JumpIfNotEqual {63}
	098 Move W22, 1
	099 And W0, W22, 1
	100 Move X20, [X31+32]
	101 Move X19, [X31+40]
	102 Move X22, [X31+16]
	103 Move X21, [X31+24]
	104 Move X30, [X31+48]
	105 Move X23, [X31+56]
	106 Return X0
	107 Call 0x1C17F20

Method: System.Int32 get_Count()

Disassembly:
	0x025F8180 MOV X0, X1
	0x025F8184 MOV X1, X2
	0x025F8188 MOV X2, X3
	0x025F818C LDR X8, [X8 + 0xC0]
	0x025F8190 LDR X8, [X8 + 0x210]
	0x025F8194 MOV X3, X8
	0x025F8198 B 0x2424304
	0x025F819C STR X3, [X0 + 0x10]
	0x025F81A0 RET

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0]
	004 Move X19, X0
	005 Move X9, [X8+648]
	006 Move X1, [X8+656]
	007 NotImplemented "Instruction BLR not yet implemented."
	008 Move W0, [X19+32]
	009 Move X30, [X31+16]
	010 Move X19, [X31+24]
	011 Return X0

Method: System.Boolean System.Collections.Generic.ICollection<T>.get_IsReadOnly()

Disassembly:
	0x025F81A4 STR X30, [X31 - 0x40]!
	0x025F81A8 STP X24, X23, [X31 + 0x10]

ISIL:
	001 Move W0, W31
	002 Return X0

Method: System.Boolean System.Collections.ICollection.get_IsSynchronized()

Disassembly:
	0x025F81AC STP X22, X21, [X31 + 0x20]
	0x025F81B0 STP X20, X19, [X31 + 0x30]

ISIL:
	001 Move W0, W31
	002 Return X0

Method: System.Object System.Collections.ICollection.get_SyncRoot()

Disassembly:
	0x025F81B4 MOV X22, X5
	0x025F81B8 MOV X19, X3
	0x025F81BC MOV X21, X2
	0x025F81C0 MOV X20, X1
	0x025F81C4 CMP X3, X1
	0x025F81C8 MOV X23, X0
	0x025F81CC B.EQ 0x25F8214
	0x025F81D0 CBZ X19, 0x25F8290
	0x025F81D4 LDR X0, [X19 + 0x20]
	0x025F81D8 MOV X24, X4
	0x025F81DC CBZ X0, 0x25F81F0
	0x025F81E0 LDR X8, [X22 + 0x20]
	0x025F81E4 LDR X8, [X8 + 0xC0]
	0x025F81E8 LDR X1, [X8 + 0xC8]
	0x025F81EC BL 0x2424090
	0x025F81F0 CMP X24, X20
	0x025F81F4 B.EQ 0x25F8228
	0x025F81F8 CBZ X24, 0x25F8290
	0x025F81FC LDR X8, [X19 + 0x20]
	0x025F8200 STR X8, [X24 + 0x18]
	0x025F8204 CBZ X20, 0x25F8290
	0x025F8208 LDR X8, [X20 + 0x20]
	0x025F820C STR X8, [X19 + 0x20]
	0x025F8210 B 0x25F822C
	0x025F8214 CBZ X19, 0x25F8290
	0x025F8218 LDR X19, [X19 + 0x18]
	0x025F821C CBZ X19, 0x25F823C
	0x025F8220 CBNZ X20, 0x25F8234
	0x025F8224 B 0x25F8290

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x1DE2000
	005 Move W8, [X20+4048]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x1B02000
	012 Move X0, [X0+3264]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+4048], W8
	016 Add X19, X19, 40
	017 Move X0, [X19]
	018 Compare X0, 0
	019 JumpIfNotEqual {33}
	020 Move X8, 0x1B02000
	021 Move X8, [X8+3264]
	022 Move X0, [X8]
	023 Call 0x1C17F10
	024 Move X1, X31
	025 Move X20, X0
	026 Call Object..ctor, X0
	027 Move X0, X19
	028 Move X1, X20
	029 Move X2, X31
	030 Move X3, X31
	031 Call Interlocked.CompareExchange, X0, X1, X2
	032 Move X0, [X19]
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move X30, [X31+32]
	036 Return X0

Method: System.Void VersionCheck()

Disassembly:
	0x025F8228 CBZ X20, 0x25F8290

ISIL:
	001 Return 

Method: System.Boolean IsWithinRange(T item)

Disassembly:
	0x025F822C LDR X8, [X20 + 0x18]
	0x025F8230 STR X8, [X19 + 0x18]

ISIL:
	001 Move W0, 1
	002 Return X0

Method: System.Boolean Add(T item)

Disassembly:
	0x025F8234 LDRB W8, [X20 + 0x28]
	0x025F8238 STRB W8, [X19 + 0x28]
	0x025F823C CBZ X21, 0x25F8278
	0x025F8240 LDR X8, [X22 + 0x20]

ISIL:
	001 Move X8, [X0]
	002 Move X3, [X8+696]
	003 Move X2, [X8+704]
	004 CallNoReturn X3

Method: System.Void System.Collections.Generic.ICollection<T>.Add(T item)

Disassembly:
	0x025F8244 MOV X0, X21
	0x025F8248 MOV X1, X20
	0x025F824C MOV X2, X19
	0x025F8250 LDR X8, [X8 + 0xC0]

ISIL:
	001 Move X8, [X0]
	002 Move X3, [X8+696]
	003 Move X2, [X8+704]
	004 CallNoReturn X3

Method: System.Boolean AddIfNotPresent(T item)

Disassembly:
	0x025F8254 LDP X20, X19, [X31 + 0x30]
	0x025F8258 LDP X22, X21, [X31 + 0x20]
	0x025F825C LDP X24, X23, [X31 + 0x10]
	0x025F8260 LDR X8, [X8 + 0x148]
	0x025F8264 LDR X8, [X8 + 0x20]
	0x025F8268 LDR X8, [X8 + 0xC0]
	0x025F826C LDR X3, [X8 + 0x210]
	0x025F8270 LDR X30, [X31], #0x40
	0x025F8274 B 0x2424304
	0x025F8278 STR X19, [X23 + 0x10]
	0x025F827C LDP X20, X19, [X31 + 0x30]
	0x025F8280 LDP X22, X21, [X31 + 0x20]
	0x025F8284 LDP X24, X23, [X31 + 0x10]
	0x025F8288 LDR X30, [X31], #0x40
	0x025F828C RET
	0x025F8290 BL 0x1C16F20
	0x025F8294 STR X30, [X31 - 0x50]!
	0x025F8298 STP X26, X25, [X31 + 0x10]
	0x025F829C STP X24, X23, [X31 + 0x20]
	0x025F82A0 STP X22, X21, [X31 + 0x30]
	0x025F82A4 STP X20, X19, [X31 + 0x40]
	0x025F82A8 LDR X19, [X0 + 0x10]
	0x025F82AC CBZ X19, 0x25F8360
	0x025F82B0 MOV X20, X2
	0x025F82B4 MOV X21, X0
	0x025F82B8 MOV X22, X1
	0x025F82BC MOVZ W25, 0x20
	0x025F82C0 MOVZ W26, 0x18
	0x025F82C4 LDR X23, [X21 + 0x18]
	0x025F82C8 CBZ X23, 0x25F837C
	0x025F82CC LDR X8, [X20 + 0x20]
	0x025F82D0 LDR X24, [X19 + 0x10]
	0x025F82D4 LDR X8, [X8 + 0xC0]
	0x025F82D8 LDR X1, [X8 + 0x20]
	0x025F82DC LDRB W8, [X1 + 0x135]
	0x025F82E0 TBNZ X8, 0x0, 0x25F82F0
	0x025F82E4 MOV X0, X1
	0x025F82E8 BL 0x1C5C684
	0x025F82EC MOV X1, X0
	0x025F82F0 LDR X8, [X23]
	0x025F82F4 LDRH W9, [X8 + 0x12E]
	0x025F82F8 CBZ X9, 0x25F831C
	0x025F82FC LDR X10, [X8 + 0xB0]
	0x025F8300 ADD X10, X10, 0x8
	0x025F8304 LDUR X11, [X10 - 0x8]
	0x025F8308 CMP X11, X1
	0x025F830C B.EQ 0x25F832C
	0x025F8310 SUBS X9, X9, 0x1
	0x025F8314 ADD X10, X10, 0x10
	0x025F8318 B.NE 0x25F8304
	0x025F831C MOV X0, X23
	0x025F8320 MOV W2, W31
	0x025F8324 BL 0x1C5C788
	0x025F8328 B 0x25F8338
	0x025F832C LDRSW X9, [X10]
	0x025F8330 ADD X8, X8, X9, 0x4, LSL
	0x025F8334 ADD X0, X8, 0x138
	0x025F8338 LDP X8, X3, [X0]
	0x025F833C MOV X0, X23
	0x025F8340 MOV X1, X22
	0x025F8344 MOV X2, X24
	0x025F8348 BLR X8
	0x025F834C CBZ W0, 0x25F8360
	0x025F8350 CMP W0, 0x0
	0x025F8354 CSEL X8, X26, X25, LT
	0x025F8358 LDR X19, [X19, X8, LSL]
	0x025F835C CBNZ X19, 0x25F82C4
	0x025F8360 MOV X0, X19
	0x025F8364 LDP X20, X19, [X31 + 0x40]
	0x025F8368 LDP X22, X21, [X31 + 0x30]
	0x025F836C LDP X24, X23, [X31 + 0x20]
	0x025F8370 LDP X26, X25, [X31 + 0x10]
	0x025F8374 LDR X30, [X31], #0x50
	0x025F8378 RET
	0x025F837C BL 0x1C16F20
	0x025F8380 LDR X8, [X0]
	0x025F8384 LDR X5, [X8 + 0x308]
	0x025F8388 LDR X4, [X8 + 0x310]
	0x025F838C BR X5
	0x025F8390 STR X30, [X31 - 0x50]!
	0x025F8394 STP X26, X25, [X31 + 0x10]
	0x025F8398 STP X24, X23, [X31 + 0x20]
	0x025F839C STP X22, X21, [X31 + 0x30]
	0x025F83A0 STP X20, X19, [X31 + 0x40]
	0x025F83A4 ADRP X22, 0x1DE1000
	0x025F83A8 LDRB W8, [X22 + 0xFD2]
	0x025F83AC MOV X19, X4
	0x025F83B0 MOV X20, X1
	0x025F83B4 MOV X21, X0
	0x025F83B8 TBNZ X8, 0x0, 0x25F8400
	0x025F83BC ADRP X0, 0x1AFB000
	0x025F83C0 LDR X0, [X0 + 0x6C0]
	0x025F83C4 BL 0x1C16CF4
	0x025F83C8 ADRP X0, 0x1B25000
	0x025F83CC LDR X0, [X0 + 0x2C0]
	0x025F83D0 BL 0x1C16CF4
	0x025F83D4 ADRP X0, 0x1B25000
	0x025F83D8 LDR X0, [X0 + 0x2C8]
	0x025F83DC BL 0x1C16CF4
	0x025F83E0 ADRP X0, 0x1B25000
	0x025F83E4 LDR X0, [X0 + 0x2D0]
	0x025F83E8 BL 0x1C16CF4
	0x025F83EC ADRP X0, 0x1AFC000
	0x025F83F0 LDR X0, [X0 + 0x2A0]
	0x025F83F4 BL 0x1C16CF4
	0x025F83F8 MOVZ W8, 0x1
	0x025F83FC STRB W8, [X22 + 0xFD2]
	0x025F8400 CBZ X20, 0x25F8588
	0x025F8404 ADRP X8, 0x1B25000
	0x025F8408 LDR X8, [X8 + 0x2C8]
	0x025F840C LDR W2, [X21 + 0x20]
	0x025F8410 ADRP X24, 0x1AFB000
	0x025F8414 ADRP X26, 0x1B25000
	0x025F8418 LDR X1, [X8]
	0x025F841C ADRP X25, 0x1AFC000
	0x025F8420 LDR X24, [X24 + 0x6C0]
	0x025F8424 LDR X26, [X26 + 0x2D0]
	0x025F8428 LDR X25, [X25 + 0x2A0]
	0x025F842C MOV X0, X20
	0x025F8430 MOV X3, X31
	0x025F8434 BL 0x32A8F28
	0x025F8438 LDR X8, [X19 + 0x20]
	0x025F843C LDR X0, [X24]
	0x025F8440 LDR X22, [X21 + 0x18]
	0x025F8444 LDR X8, [X8 + 0xC0]
	0x025F8448 LDR W9, [X0 + 0xE0]
	0x025F844C LDR X23, [X8 + 0x220]
	0x025F8450 CBNZ W9, 0x25F8458
	0x025F8454 BL 0x1C16DFC
	0x025F8458 MOV X0, X23
	0x025F845C MOV X1, X31
	0x025F8460 BL 0x338C698
	0x025F8464 LDR X1, [X26]
	0x025F8468 MOV X3, X0
	0x025F846C MOV X0, X20
	0x025F8470 MOV X2, X22
	0x025F8474 MOV X4, X31
	0x025F8478 BL 0x32A89BC
	0x025F847C LDR W2, [X21 + 0x24]
	0x025F8480 LDR X1, [X25]
	0x025F8484 MOV X0, X20
	0x025F8488 MOV X3, X31
	0x025F848C BL 0x32A8F28
	0x025F8490 LDR X8, [X21 + 0x10]
	0x025F8494 CBZ X8, 0x25F8570
	0x025F8498 LDR X8, [X21]
	0x025F849C MOV X0, X21
	0x025F84A0 LDR X9, [X8 + 0x288]
	0x025F84A4 LDR X1, [X8 + 0x290]
	0x025F84A8 BLR X9
	0x025F84AC LDR X8, [X19 + 0x20]
	0x025F84B0 LDR W22, [X21 + 0x20]
	0x025F84B4 LDR X8, [X8 + 0xC0]
	0x025F84B8 LDR X0, [X8 + 0x228]
	0x025F84BC LDRB W8, [X0 + 0x135]
	0x025F84C0 TBNZ X8, 0x0, 0x25F84C8
	0x025F84C4 BL 0x1C5C684
	0x025F84C8 ADRP X23, 0x1B25000
	0x025F84CC LDR X23, [X23 + 0x2C0]
	0x025F84D0 MOV W1, W22
	0x025F84D4 BL 0x1C16D6C
	0x025F84D8 LDR X8, [X19 + 0x20]
	0x025F84DC LDR X9, [X21]
	0x025F84E0 MOV X22, X0
	0x025F84E4 MOV X0, X21
	0x025F84E8 LDR X8, [X8 + 0xC0]
	0x025F84EC LDR X10, [X9 + 0x288]
	0x025F84F0 LDR X1, [X9 + 0x290]
	0x025F84F4 LDR X25, [X8 + 0x1D0]
	0x025F84F8 BLR X10
	0x025F84FC LDR X8, [X25 + 0x20]
	0x025F8500 LDR W3, [X21 + 0x20]
	0x025F8504 MOV X0, X21
	0x025F8508 MOV X1, X22
	0x025F850C LDR X8, [X8 + 0xC0]
	0x025F8510 MOV W2, W31
	0x025F8514 LDR X4, [X8 + 0x190]
	0x025F8518 BL 0x25F7948

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X8, [X0+16]
	015 Move X20, X2
	016 Move X19, X0
	017 Move X21, X1
	018 Compare X8, 0
	019 JumpIfEqual {167}
	020 Move [X31+8], X31
	021 Move W9, [X19+36]
	022 Move X24, X31
	023 Move X27, X31
	024 Move X22, X31
	025 Move W28, 32
	026 Add W9, W9, 1
	027 Move W29, 24
	028 Move [X19+36], W9
	029 Move X26, [X19+24]
	030 Compare X26, 0
	031 JumpIfEqual {212}
	032 Move X23, X8
	033 Move X8, [X20+32]
	034 Move X25, X22
	035 Move X22, X27
	036 Move X27, [X23+16]
	037 Move X8, [X8+192]
	038 Move X1, [X8+32]
	039 Move W8, [X1+309]
	040 Move TEMP, X8
	041 And TEMP, TEMP, 1
	042 Compare TEMP, 1
	043 JumpIfEqual {47}
	044 Move X0, X1
	045 Call 0x1C5D684
	046 Move X1, X0
	047 Move X8, [X26]
	048 NotImplemented "Instruction LDRH not yet implemented."
	049 Compare X9, 0
	050 JumpIfEqual {57}
	051 Move X10, [X8+176]
	052 Add X10, X10, 8
	053 NotImplemented "Instruction LDUR not yet implemented."
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Subtract X9, X9, 1
	056 Add X10, X10, 16
	057 Move X0, X26
	058 Move W2, W31
	059 Call 0x1C5D788
	060 NotImplemented "Instruction LDRSW not yet implemented."
	061 Add X8, X8, X9
	062 Add X0, X8, 312
	063 Move X8, [X0]
	064 Move X3, [X0+8]
	065 Move X0, X26
	066 Move X1, X21
	067 Move X2, X27
	068 NotImplemented "Instruction BLR not yet implemented."
	069 Compare W0, 0
	070 JumpIfEqual {190}
	071 Move X8, [X20+32]
	072 Move W26, W0
	073 Move X0, X23
	074 Move X8, [X8+192]
	075 Move X1, [X8+208]
	076 Call 0x242500C, X0
	077 Move TEMP, X0
	078 And TEMP, TEMP, 1
	079 Compare TEMP, 1
	080 JumpIfNotEqual {106}
	081 Move X8, [X20+32]
	082 Move X0, X23
	083 Move X8, [X8+192]
	084 Move X1, [X8+216]
	085 Call 0x242512C, X0
	086 Move X8, [X20+32]
	087 Move X0, X24
	088 Move X8, [X8+192]
	089 Move X1, [X8+224]
	090 Call 0x2424EB4, X0
	091 Move X27, X24
	092 Move TEMP, X0
	093 And TEMP, TEMP, 1
	094 Compare TEMP, 1
	095 JumpIfNotEqual {107}
	096 Move X8, [X20+32]
	097 Add X2, X31, 8
	098 Move X0, X19
	099 Move X1, X23
	100 Move X8, [X8+192]
	101 Move X3, X22
	102 Move X4, X25
	103 Move X5, [X8+240]
	104 Call 0x25F9044, X0, X1, X2, X3, X4
	105 Move X27, [X31+8]
	106 Move X27, X24
	107 NotImplemented "Instruction CMP not yet implemented."
	108 Move [X31+8], X23
	109 NotImplemented "Instruction CSEL not yet implemented."
	110 Move X8, [X23]
	111 Move X24, X23
	112 Compare X8, 0
	113 JumpIfNotEqual {29}
	114 Move X8, [X20+32]
	115 Move X8, [X8+192]
	116 Move X0, [X8+40]
	117 Move W8, [X0+309]
	118 Move TEMP, X8
	119 And TEMP, TEMP, 1
	120 Compare TEMP, 1
	121 JumpIfEqual {123}
	122 Call 0x1C5D684
	123 Call 0x1C17F10
	124 Move X8, [X20+32]
	125 Move W2, 1
	126 Move X1, X21
	127 Move X24, X0
	128 Move X8, [X8+192]
	129 Move X3, [X8+176]
	130 Call 0x2424E84, X0, X1, X2
	131 Compare X23, 0
	132 JumpIfEqual {212}
	133 Move X8, [X20+32]
	134 Add X9, X23, 24
	135 Add X10, X23, 32
	136 NotImplemented "Instruction CMP not yet implemented."
	137 Move X8, [X8+192]
	138 NotImplemented "Instruction CSEL not yet implemented."
	139 Move [X9], X24
	140 Move X0, X23
	141 Move X1, [X8+272]
	142 Call 0x2424F6C, X0
	143 Move TEMP, X0
	144 And TEMP, TEMP, 1
	145 Compare TEMP, 1
	146 JumpIfNotEqual {156}
	147 Move X8, [X20+32]
	148 Add X2, X31, 8
	149 Move X0, X19
	150 Move X1, X24
	151 Move X8, [X8+192]
	152 Move X3, X27
	153 Move X4, X22
	154 Move X5, [X8+240]
	155 Call 0x25F9044, X0, X1, X2, X3, X4
	156 Move X0, [X19+16]
	157 Compare X0, 0
	158 JumpIfEqual {212}
	159 Move X8, [X20+32]
	160 Move X8, [X8+192]
	161 Move X1, [X8+200]
	162 Call 0x2425090, X0
	163 Move W8, [X19+32]
	164 Move W0, 1
	165 Add W8, W8, 1
	166 Move [X19+32], W8
	167 Move X8, [X20+32]
	168 Move X8, [X8+192]
	169 Move X0, [X8+40]
	170 Move W8, [X0+309]
	171 Move TEMP, X8
	172 And TEMP, TEMP, 1
	173 Compare TEMP, 1
	174 JumpIfEqual {176}
	175 Call 0x1C5D684
	176 Call 0x1C17F10
	177 Move X8, [X20+32]
	178 Move X1, X21
	179 Move W2, W31
	180 Move X20, X0
	181 Move X8, [X8+192]
	182 Move X3, [X8+176]
	183 Call 0x2424E84, X0, X1, X2
	184 Move W8, [X19+36]
	185 Move W0, 1
	186 Move [X19+16], X20
	187 Add W8, W8, 1
	188 Move [X19+32], W0
	189 Move [X19+36], W8
	190 Move X0, [X19+16]
	191 Compare X0, 0
	192 JumpIfEqual {212}
	193 Move X8, [X20+32]
	194 Move X8, [X8+192]
	195 Move X1, [X8+200]
	196 Call 0x2425090, X0
	197 Move W0, W31
	198 Move X20, [X31+96]
	199 Move X19, [X31+104]
	200 Move X22, [X31+80]
	201 Move X21, [X31+88]
	202 Move X24, [X31+64]
	203 Move X23, [X31+72]
	204 Move X26, [X31+48]
	205 Move X25, [X31+56]
	206 Move X28, [X31+32]
	207 Move X27, [X31+40]
	208 Move X29, [X31+16]
	209 Move X30, [X31+24]
	210 Add X31, X31, 112
	211 Return X0
	212 Call 0x1C17F20

Method: System.Boolean Remove(T item)

Disassembly:
	0x025F851C LDR X8, [X19 + 0x20]
	0x025F8520 LDR X0, [X24]
	0x025F8524 LDR X8, [X8 + 0xC0]
	0x025F8528 LDR W9, [X0 + 0xE0]

ISIL:
	001 Move X8, [X0]
	002 Move X3, [X8+712]
	003 Move X2, [X8+720]
	004 CallNoReturn X3

Method: System.Boolean DoRemove(T item)

Disassembly:
	0x025F852C LDR X19, [X8 + 0x230]
	0x025F8530 CBNZ W9, 0x25F8538
	0x025F8534 BL 0x1C16DFC
	0x025F8538 MOV X0, X19
	0x025F853C MOV X1, X31
	0x025F8540 BL 0x338C698
	0x025F8544 LDR X1, [X23]
	0x025F8548 MOV X3, X0
	0x025F854C MOV X0, X20
	0x025F8550 MOV X2, X22
	0x025F8554 LDP X20, X19, [X31 + 0x40]
	0x025F8558 LDP X22, X21, [X31 + 0x30]
	0x025F855C LDP X24, X23, [X31 + 0x20]
	0x025F8560 LDP X26, X25, [X31 + 0x10]
	0x025F8564 MOV X4, X31
	0x025F8568 LDR X30, [X31], #0x50
	0x025F856C B 0x32A89BC
	0x025F8570 LDP X20, X19, [X31 + 0x40]
	0x025F8574 LDP X22, X21, [X31 + 0x30]
	0x025F8578 LDP X24, X23, [X31 + 0x20]
	0x025F857C LDP X26, X25, [X31 + 0x10]
	0x025F8580 LDR X30, [X31], #0x50
	0x025F8584 RET
	0x025F8588 ADRP X0, 0x1B00000
	0x025F858C LDR X0, [X0 + 0x528]
	0x025F8590 BL 0x1C16D08
	0x025F8594 BL 0x1C16F10
	0x025F8598 MOV X20, X0
	0x025F859C ADRP X0, 0x1B25000
	0x025F85A0 LDR X0, [X0 + 0x2D8]
	0x025F85A4 BL 0x1C16D08
	0x025F85A8 MOV X1, X0
	0x025F85AC MOV X0, X20
	0x025F85B0 MOV X2, X31
	0x025F85B4 BL 0x330E100
	0x025F85B8 MOV X0, X20
	0x025F85BC MOV X1, X19
	0x025F85C0 BL 0x1C16DEC
	0x025F85C4 LDR X8, [X0]
	0x025F85C8 LDR X3, [X8 + 0x318]
	0x025F85CC LDR X2, [X8 + 0x320]
	0x025F85D0 BR X3
	0x025F85D4 STR X30, [X31 - 0x40]!
	0x025F85D8 STP X24, X23, [X31 + 0x10]
	0x025F85DC STP X22, X21, [X31 + 0x20]
	0x025F85E0 STP X20, X19, [X31 + 0x30]
	0x025F85E4 ADRP X21, 0x1DE1000
	0x025F85E8 LDRB W8, [X21 + 0xFD3]
	0x025F85EC MOV X19, X2
	0x025F85F0 MOV X20, X0
	0x025F85F4 TBNZ X8, 0x0, 0x25F863C
	0x025F85F8 ADRP X0, 0x1AFB000
	0x025F85FC LDR X0, [X0 + 0x6C0]
	0x025F8600 BL 0x1C16CF4
	0x025F8604 ADRP X0, 0x1B25000
	0x025F8608 LDR X0, [X0 + 0x2C0]
	0x025F860C BL 0x1C16CF4
	0x025F8610 ADRP X0, 0x1B25000
	0x025F8614 LDR X0, [X0 + 0x2C8]
	0x025F8618 BL 0x1C16CF4
	0x025F861C ADRP X0, 0x1B25000
	0x025F8620 LDR X0, [X0 + 0x2D0]
	0x025F8624 BL 0x1C16CF4
	0x025F8628 ADRP X0, 0x1AFC000
	0x025F862C LDR X0, [X0 + 0x2A0]
	0x025F8630 BL 0x1C16CF4
	0x025F8634 MOVZ W8, 0x1
	0x025F8638 STRB W8, [X21 + 0xFD3]
	0x025F863C LDR X8, [X20 + 0x18]
	0x025F8640 CBNZ X8, 0x25F8834
	0x025F8644 LDR X21, [X20 + 0x30]
	0x025F8648 CBZ X21, 0x25F885C
	0x025F864C ADRP X23, 0x1AFB000
	0x025F8650 LDR X8, [X19 + 0x20]
	0x025F8654 LDR X23, [X23 + 0x6C0]
	0x025F8658 LDR X8, [X8 + 0xC0]
	0x025F865C LDR X0, [X23]
	0x025F8660 LDR X22, [X8 + 0x220]
	0x025F8664 LDR W9, [X0 + 0xE0]
	0x025F8668 CBNZ W9, 0x25F8670
	0x025F866C BL 0x1C16DFC
	0x025F8670 MOV X0, X22
	0x025F8674 MOV X1, X31
	0x025F8678 BL 0x338C698
	0x025F867C ADRP X8, 0x1B25000
	0x025F8680 LDR X8, [X8 + 0x2D0]
	0x025F8684 MOV X2, X0
	0x025F8688 MOV X0, X21
	0x025F868C MOV X3, X31
	0x025F8690 LDR X1, [X8]
	0x025F8694 BL 0x32A9678
	0x025F8698 LDR X8, [X19 + 0x20]
	0x025F869C MOV X21, X0
	0x025F86A0 LDR X8, [X8 + 0xC0]
	0x025F86A4 LDR X22, [X8 + 0x20]
	0x025F86A8 LDRB W8, [X22 + 0x135]
	0x025F86AC TBNZ X8, 0x0, 0x25F86BC
	0x025F86B0 MOV X0, X22
	0x025F86B4 BL 0x1C5C684
	0x025F86B8 MOV X22, X0
	0x025F86BC CBZ X21, 0x25F86D4
	0x025F86C0 MOV X0, X21
	0x025F86C4 MOV X1, X22
	0x025F86C8 BL 0x1C16E00
	0x025F86CC CBNZ X0, 0x25F86D8
	0x025F86D0 B 0x25F8850
	0x025F86D4 MOV X0, X31
	0x025F86D8 STR X0, [X20 + 0x18]
	0x025F86DC LDR X8, [X19 + 0x20]
	0x025F86E0 LDR X8, [X8 + 0xC0]
	0x025F86E4 LDR X22, [X8 + 0x20]
	0x025F86E8 LDRB W8, [X22 + 0x135]
	0x025F86EC TBNZ X8, 0x0, 0x25F86FC
	0x025F86F0 MOV X0, X22
	0x025F86F4 BL 0x1C5C684
	0x025F86F8 MOV X22, X0
	0x025F86FC CBZ X21, 0x25F8710
	0x025F8700 MOV X0, X21
	0x025F8704 MOV X1, X22
	0x025F8708 BL 0x1C16E00
	0x025F870C CBZ X0, 0x25F8850
	0x025F8710 LDR X0, [X20 + 0x30]
	0x025F8714 CBZ X0, 0x25F884C
	0x025F8718 ADRP X8, 0x1B25000
	0x025F871C LDR X8, [X8 + 0x2C8]
	0x025F8720 MOV X2, X31
	0x025F8724 LDR X1, [X8]
	0x025F8728 BL 0x32A9B08
	0x025F872C MOV W21, W0
	0x025F8730 CBZ W0, 0x25F8804
	0x025F8734 LDR X8, [X19 + 0x20]
	0x025F8738 LDR X0, [X23]
	0x025F873C LDR X22, [X20 + 0x30]
	0x025F8740 LDR X8, [X8 + 0xC0]
	0x025F8744 LDR W9, [X0 + 0xE0]
	0x025F8748 LDR X23, [X8 + 0x230]
	0x025F874C CBNZ W9, 0x25F8754
	0x025F8750 BL 0x1C16DFC
	0x025F8754 MOV X0, X23
	0x025F8758 MOV X1, X31
	0x025F875C BL 0x338C698
	0x025F8760 CBZ X22, 0x25F884C
	0x025F8764 ADRP X8, 0x1B25000
	0x025F8768 LDR X8, [X8 + 0x2C0]
	0x025F876C MOV X2, X0
	0x025F8770 MOV X0, X22
	0x025F8774 MOV X3, X31
	0x025F8778 LDR X1, [X8]
	0x025F877C BL 0x32A9678
	0x025F8780 LDR X8, [X19 + 0x20]
	0x025F8784 MOV X24, X0
	0x025F8788 LDR X8, [X8 + 0xC0]
	0x025F878C LDR X23, [X8 + 0x188]
	0x025F8790 LDRB W8, [X23 + 0x135]
	0x025F8794 TBNZ X8, 0x0, 0x25F87A4
	0x025F8798 MOV X0, X23
	0x025F879C BL 0x1C5C684
	0x025F87A0 MOV X23, X0
	0x025F87A4 CBZ X24, 0x25F889C
	0x025F87A8 MOV X0, X24
	0x025F87AC MOV X1, X23
	0x025F87B0 BL 0x1C16E00
	0x025F87B4 CBZ X0, 0x25F88D8
	0x025F87B8 LDR X8, [X0 + 0x18]
	0x025F87BC MOV X22, X0
	0x025F87C0 CMP W8, 0x1
	0x025F87C4 B.LT 0x25F8804
	0x025F87C8 MOV X23, X31
	0x025F87CC AND X8, X8, 0x0
	0x025F87D0 ADD X24, X22, 0x20
	0x025F87D4 CMP X23, W8, UXTW
	0x025F87D8 B.CS 0x25F8848
	0x025F87DC LDR X8, [X20]
	0x025F87E0 LDR X1, [X24, X23, LSL #3]
	0x025F87E4 MOV X0, X20
	0x025F87E8 LDR X9, [X8 + 0x2B8]
	0x025F87EC LDR X2, [X8 + 0x2C0]
	0x025F87F0 BLR X9
	0x025F87F4 LDR W8, [X22 + 0x18]
	0x025F87F8 ADD X23, X23, 0x1
	0x025F87FC CMP X23, W8, SXTW
	0x025F8800 B.LT 0x25F87D4
	0x025F8804 LDR X0, [X20 + 0x30]
	0x025F8808 CBZ X0, 0x25F884C
	0x025F880C ADRP X8, 0x1AFC000
	0x025F8810 LDR X8, [X8 + 0x2A0]
	0x025F8814 MOV X2, X31
	0x025F8818 LDR X1, [X8]
	0x025F881C BL 0x32A9B08
	0x025F8820 LDR W8, [X20 + 0x20]
	0x025F8824 STR W0, [X20 + 0x24]
	0x025F8828 CMP W8, W21
	0x025F882C B.NE 0x25F887C
	0x025F8830 STR X31, [X20 + 0x30]
	0x025F8834 LDP X20, X19, [X31 + 0x30]
	0x025F8838 LDP X22, X21, [X31 + 0x20]
	0x025F883C LDP X24, X23, [X31 + 0x10]
	0x025F8840 LDR X30, [X31], #0x40
	0x025F8844 RET
	0x025F8848 BL 0x1C16F28
	0x025F884C BL 0x1C16F20
	0x025F8850 MOV X0, X21
	0x025F8854 MOV X1, X22
	0x025F8858 BL 0x1C171E0
	0x025F885C ADRP X0, 0x1B25000
	0x025F8860 LDR X0, [X0 + 0x2E0]
	0x025F8864 BL 0x1C16D08
	0x025F8868 BL 0x1C16F10
	0x025F886C MOV X20, X0
	0x025F8870 ADRP X0, 0x1B25000
	0x025F8874 LDR X0, [X0 + 0x2E8]
	0x025F8878 B 0x25F88B8
	0x025F887C ADRP X0, 0x1B25000
	0x025F8880 LDR X0, [X0 + 0x2E0]
	0x025F8884 BL 0x1C16D08
	0x025F8888 BL 0x1C16F10
	0x025F888C MOV X20, X0
	0x025F8890 ADRP X0, 0x1B25000
	0x025F8894 LDR X0, [X0 + 0x2F0]
	0x025F8898 B 0x25F88B8
	0x025F889C ADRP X0, 0x1B25000
	0x025F88A0 LDR X0, [X0 + 0x2E0]
	0x025F88A4 BL 0x1C16D08
	0x025F88A8 BL 0x1C16F10
	0x025F88AC MOV X20, X0
	0x025F88B0 ADRP X0, 0x1B25000

ISIL:
	001 Move [X31-96], X30
	002 Move [X31+16], X28
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X8, [X0+16]
	013 Compare X8, 0
	014 JumpIfEqual {250}
	015 Move W9, [X0+36]
	016 Move X19, X2
	017 Move X20, X0
	018 Move X22, X1
	019 Move X21, X31
	020 Move X26, X31
	021 Move X24, X31
	022 Move X23, X31
	023 Move W28, W31
	024 Add W9, W9, 1
	025 Move [X0+36], W9
	026 Move X9, [X19+32]
	027 Move X0, X8
	028 Move X25, X21
	029 Move X21, X8
	030 Move X9, [X9+192]
	031 Move X1, [X9+288]
	032 Call 0x2424F7C, X0
	033 Move TEMP, X0
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfNotEqual {122}
	037 Move X8, [X19+32]
	038 Move X8, [X8+192]
	039 Compare X25, 0
	040 JumpIfEqual {63}
	041 Move X2, [X8+304]
	042 Move X0, X25
	043 Move X1, X21
	044 Call 0x2425110, X0, X1
	045 Compare X0, 0
	046 JumpIfEqual {264}
	047 Move X8, [X19+32]
	048 Move X27, X0
	049 Move X8, [X8+192]
	050 Move X1, [X8+272]
	051 Call 0x2424F6C, X0
	052 Move TEMP, X0
	053 And TEMP, TEMP, 1
	054 Compare TEMP, 1
	055 JumpIfNotEqual {108}
	056 Move X8, [X19+32]
	057 Move X9, [X25+32]
	058 Move X8, [X8+192]
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Move X1, [X8+320]
	061 Move X0, X25
	062 Call 0x2425270, X0
	063 Move X1, [X8+296]
	064 Move X0, X21
	065 Call 0x2425098, X0
	066 Move TEMP, X28
	067 And TEMP, TEMP, 1
	068 Compare TEMP, 1
	069 JumpIfEqual {126}
	070 Move X1, [X8+312]
	071 Move X0, X25
	072 Call 0x242520C, X0
	073 Move X8, [X19+32]
	074 Move X0, X25
	075 Move X8, [X8+192]
	076 Move X1, [X8+296]
	077 Call 0x2425098, X0
	078 Move X8, [X19+32]
	079 Move X0, X27
	080 Move X8, [X8+192]
	081 Move X1, [X8+200]
	082 Call 0x2425090, X0
	083 Compare X26, 0
	084 JumpIfEqual {95}
	085 Move X8, [X19+32]
	086 Move X0, X26
	087 Move X1, X25
	088 Move X2, X27
	089 Move X8, [X8+192]
	090 Move X8, [X8+328]
	091 Move X8, [X8+32]
	092 Move X8, [X8+192]
	093 Move X3, [X8+528]
	094 Call 0x2425304, X0, X1, X2
	095 Move [X20+16], X27
	096 Move X8, [X19+32]
	097 NotImplemented "Instruction CMP not yet implemented."
	098 Move X0, X25
	099 Move X1, X21
	100 Move X8, [X8+192]
	101 NotImplemented "Instruction CSEL not yet implemented."
	102 Move X2, [X8+304]
	103 Call 0x2425110, X0, X1
	104 Compare X0, 0
	105 JumpIfEqual {264}
	106 Move X26, X27
	107 Move X27, X0
	108 Move X8, [X19+32]
	109 Move X0, X27
	110 Move X8, [X8+192]
	111 Move X1, [X8+288]
	112 Call 0x2424F7C, X0
	113 Move X8, [X19+32]
	114 Move X8, [X8+192]
	115 Move TEMP, X0
	116 And TEMP, TEMP, 1
	117 Compare TEMP, 1
	118 JumpIfNotEqual {127}
	119 Move X1, [X8+336]
	120 Move X0, X25
	121 Call 0x24252D4, X0
	122 Move TEMP, X28
	123 And TEMP, TEMP, 1
	124 Compare TEMP, 1
	125 JumpIfNotEqual {172}
	126 Add X9, X21, 24
	127 Move X3, [X8+344]
	128 Move X0, X25
	129 Move X1, X21
	130 Move X2, X27
	131 Call 0x24250A4, X0, X1, X2
	132 Move X8, [X19+32]
	133 Move W1, W0
	134 Move X0, X25
	135 Move X8, [X8+192]
	136 Move X2, [X8+352]
	137 Call 0x242515C, X0, X1
	138 Compare X0, 0
	139 JumpIfEqual {264}
	140 Move X8, [X19+32]
	141 Move W9, [X25+40]
	142 Move X27, X0
	143 Move X8, [X8+192]
	144 Move [X0+40], W9
	145 Move X0, X25
	146 Move X1, [X8+200]
	147 Call 0x2425090, X0
	148 Move X8, [X19+32]
	149 Move X0, X21
	150 Move X8, [X8+192]
	151 Move X1, [X8+296]
	152 Call 0x2425098, X0
	153 Compare X26, 0
	154 JumpIfEqual {165}
	155 Move X8, [X19+32]
	156 Move X0, X26
	157 Move X1, X25
	158 Move X2, X27
	159 Move X8, [X8+192]
	160 Move X8, [X8+328]
	161 Move X8, [X8+32]
	162 Move X8, [X8+192]
	163 Move X3, [X8+528]
	164 Call 0x2425304, X0, X1, X2
	165 Move [X20+16], X27
	166 NotImplemented "Instruction CMP not yet implemented."
	167 NotImplemented "Instruction CSEL not yet implemented."
	168 Move TEMP, X28
	169 And TEMP, TEMP, 1
	170 Compare TEMP, 1
	171 JumpIfEqual {126}
	172 Move X26, [X20+24]
	173 Compare X26, 0
	174 JumpIfEqual {264}
	175 Move X8, [X19+32]
	176 Move X27, [X21+16]
	177 Move X8, [X8+192]
	178 Move X1, [X8+32]
	179 Move W8, [X1+309]
	180 Move TEMP, X8
	181 And TEMP, TEMP, 1
	182 Compare TEMP, 1
	183 JumpIfEqual {187}
	184 Move X0, X1
	185 Call 0x1C5D684
	186 Move X1, X0
	187 Move X8, [X26]
	188 NotImplemented "Instruction LDRH not yet implemented."
	189 Compare X9, 0
	190 JumpIfEqual {197}
	191 Move X10, [X8+176]
	192 Add X10, X10, 8
	193 NotImplemented "Instruction LDUR not yet implemented."
	194 NotImplemented "Instruction CMP not yet implemented."
	195 Subtract X9, X9, 1
	196 Add X10, X10, 16
	197 Move X0, X26
	198 Move W2, W31
	199 Call 0x1C5D788
	200 NotImplemented "Instruction LDRSW not yet implemented."
	201 Add X8, X8, X9
	202 Add X0, X8, 312
	203 Move X8, [X0]
	204 Move X3, [X0+8]
	205 Move X0, X26
	206 Move X1, X22
	207 Move X2, X27
	208 NotImplemented "Instruction BLR not yet implemented."
	209 NotImplemented "Instruction CMP not yet implemented."
	210 NotImplemented "Instruction CSET not yet implemented."
	211 Move X1, X21
	212 Move X2, X25
	213 Compare W0, 0
	214 JumpIfEqual {221}
	215 Move TEMP, X0
	216 And TEMP, TEMP, -2147483648
	217 Compare TEMP, -2147483648
	218 JumpIfEqual {126}
	219 Move X1, X24
	220 Move X2, X23
	221 Add X9, X21, 32
	222 Move X24, X1
	223 Move X23, X2
	224 Move W28, W8
	225 Move X8, [X9]
	226 Move X26, X25
	227 Compare X8, 0
	228 JumpIfNotEqual {26}
	229 Compare X24, 0
	230 JumpIfEqual {243}
	231 Move X8, [X19+32]
	232 Move X0, X20
	233 Move X1, X24
	234 Move X2, X23
	235 Move X8, [X8+192]
	236 Move X3, X21
	237 Move X4, X25
	238 Move X5, [X8+376]
	239 Call 0x25F91A4, X0, X1, X2, X3, X4
	240 Move W8, [X20+32]
	241 Subtract W8, W8, 1
	242 Move [X20+32], W8
	243 Move X0, [X20+16]
	244 Compare X0, 0
	245 JumpIfEqual {251}
	246 Move X8, [X19+32]
	247 Move X8, [X8+192]
	248 Move X1, [X8+200]
	249 Call 0x2425090, X0
	250 Move W28, W31
	251 And W0, W28, 1
	252 Move X20, [X31+80]
	253 Move X19, [X31+88]
	254 Move X22, [X31+64]
	255 Move X21, [X31+72]
	256 Move X24, [X31+48]
	257 Move X23, [X31+56]
	258 Move X26, [X31+32]
	259 Move X25, [X31+40]
	260 Move X28, [X31+16]
	261 Move X27, [X31+24]
	262 Move X30, [X31+96]
	263 Return X0
	264 Call 0x1C17F20

Method: System.Void Clear()

Disassembly:
	0x025F88B4 LDR X0, [X0 + 0x2F8]
	0x025F88B8 BL 0x1C16D08
	0x025F88BC MOV X1, X0
	0x025F88C0 MOV X0, X20
	0x025F88C4 MOV X2, X31

ISIL:
	001 Move W8, [X0+36]
	002 Move [X0+16], X31
	003 Add W8, W8, 1
	004 Move [X0+32], W31
	005 Move [X0+36], W8
	006 Return 

Method: System.Boolean Contains(T item)

Disassembly:
	0x025F88C8 BL 0x329F100
	0x025F88CC MOV X0, X20
	0x025F88D0 MOV X1, X19
	0x025F88D4 BL 0x1C16DEC
	0x025F88D8 MOV X0, X24
	0x025F88DC MOV X1, X23
	0x025F88E0 BL 0x1C171E0
	0x025F88E4 CMP W0, 0x1
	0x025F88E8 B.LT 0x25F8900

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0]
	003 Move X9, [X8+760]
	004 Move X2, [X8+768]
	005 NotImplemented "Instruction BLR not yet implemented."
	006 NotImplemented "Instruction CMP not yet implemented."
	007 NotImplemented "Instruction CSET not yet implemented."
	008 Move X30, [X31+16]
	009 Return X0

Method: System.Void CopyTo(T[] array, System.Int32 index)

Disassembly:
	0x025F88EC MOV W8, W31
	0x025F88F0 UBFM W0, W0, 0x1, 0x1F
	0x025F88F4 ADD W8, W8, 0x1
	0x025F88F8 CBNZ W0, 0x25F88F0
	0x025F88FC B 0x25F8904
	0x025F8900 MOV W8, W31
	0x025F8904 MOV W0, W8
	0x025F8908 RET
	0x025F890C STR X30, [X31 - 0x20]!
	0x025F8910 STP X20, X19, [X31 + 0x10]
	0x025F8914 MOV X19, X1
	0x025F8918 MOV X1, X31
	0x025F891C MOV X20, X0
	0x025F8920 BL 0x33BDD8C
	0x025F8924 LDR X8, [X19 + 0x20]
	0x025F8928 LDR X8, [X8 + 0xC0]
	0x025F892C LDR X0, [X8]
	0x025F8930 LDR X8, [X0]
	0x025F8934 BLR X8
	0x025F8938 STR X0, [X20 + 0x18]
	0x025F893C LDP X20, X19, [X31 + 0x10]
	0x025F8940 LDR X30, [X31], #0x20
	0x025F8944 RET

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X0]
	007 Move X22, X1
	008 Move X19, X3
	009 Move W20, W2
	010 Move X9, [X8+648]
	011 Move X8, [X8+656]
	012 Move X21, X0
	013 Move X1, X8
	014 NotImplemented "Instruction BLR not yet implemented."
	015 Move X8, [X19+32]
	016 Move W3, [X21+32]
	017 Move X0, X21
	018 Move X1, X22
	019 Move X8, [X8+192]
	020 Move W2, W20
	021 Move X20, [X31+32]
	022 Move X19, [X31+40]
	023 Move X22, [X31+16]
	024 Move X21, [X31+24]
	025 Move X4, [X8+400]
	026 Move X30, [X31+48]

Method: System.Void CopyTo(T[] array, System.Int32 index, System.Int32 count)

Disassembly:
	0x025F8948 STP X30, X21, [X31 - 0x20]!
	0x025F894C STP X20, X19, [X31 + 0x10]
	0x025F8950 MOV X20, X1
	0x025F8954 MOV X1, X31
	0x025F8958 MOV X21, X2
	0x025F895C MOV X19, X0
	0x025F8960 BL 0x33BDD8C
	0x025F8964 CBNZ X20, 0x25F8980
	0x025F8968 LDR X8, [X21 + 0x20]
	0x025F896C LDR X8, [X8 + 0xC0]
	0x025F8970 LDR X0, [X8]
	0x025F8974 LDR X8, [X0]
	0x025F8978 BLR X8
	0x025F897C MOV X20, X0
	0x025F8980 CBZ X19, 0x25F8994
	0x025F8984 STR X20, [X19 + 0x18]
	0x025F8988 LDP X20, X19, [X31 + 0x10]
	0x025F898C LDP X30, X21, [X31], #0x20
	0x025F8990 RET
	0x025F8994 BL 0x1C16F20
	0x025F8998 STR X30, [X31 - 0x20]!
	0x025F899C STP X20, X19, [X31 + 0x10]
	0x025F89A0 MOV X19, X1
	0x025F89A4 MOV X1, X31
	0x025F89A8 MOV X20, X0
	0x025F89AC BL 0x33BDD8C
	0x025F89B0 STR X19, [X20 + 0x30]
	0x025F89B4 LDP X20, X19, [X31 + 0x10]
	0x025F89B8 LDR X30, [X31], #0x20
	0x025F89BC RET
	0x025F89C0 SUB X31, X31, 0x40
	0x025F89C4 STP X30, X23, [X31 + 0x10]
	0x025F89C8 STP X22, X21, [X31 + 0x20]
	0x025F89CC STP X20, X19, [X31 + 0x30]
	0x025F89D0 LDR X8, [X0 + 0x10]
	0x025F89D4 CBZ X8, 0x25F8BA8
	0x025F89D8 LDR X8, [X2 + 0x20]
	0x025F89DC MOV X20, X1
	0x025F89E0 MOV X19, X2
	0x025F89E4 MOV X22, X0
	0x025F89E8 LDR X8, [X8 + 0xC0]
	0x025F89EC LDR X1, [X8 + 0x30]
	0x025F89F0 LDR X8, [X1]
	0x025F89F4 BLR X8
	0x025F89F8 LDR X8, [X19 + 0x20]
	0x025F89FC ADD W0, W0, 0x1
	0x025F8A00 LDR X8, [X8 + 0xC0]
	0x025F8A04 LDR X1, [X8 + 0x38]
	0x025F8A08 LDR X8, [X1]
	0x025F8A0C BLR X8
	0x025F8A10 LDR X8, [X19 + 0x20]
	0x025F8A14 MOV W23, W0
	0x025F8A18 LDR X8, [X8 + 0xC0]
	0x025F8A1C LDR X8, [X8 + 0x48]
	0x025F8A20 LDRB W9, [X8 + 0x135]
	0x025F8A24 TBNZ X9, 0x0, 0x25F8A34
	0x025F8A28 MOV X0, X8
	0x025F8A2C BL 0x1C5C684
	0x025F8A30 MOV X8, X0
	0x025F8A34 MOV X0, X8
	0x025F8A38 BL 0x1C16F10
	0x025F8A3C LDR X8, [X19 + 0x20]
	0x025F8A40 UBFM W1, W23, 0x1F, 0x1E
	0x025F8A44 MOV X21, X0
	0x025F8A48 LDR X8, [X8 + 0xC0]
	0x025F8A4C LDR X2, [X8 + 0x50]
	0x025F8A50 LDR X8, [X2]
	0x025F8A54 BLR X8
	0x025F8A58 LDR X22, [X22 + 0x10]
	0x025F8A5C CBZ X22, 0x25F8AAC
	0x025F8A60 CBZ X21, 0x25F8BC4
	0x025F8A64 LDR X8, [X19 + 0x20]
	0x025F8A68 ADD X3, X31, 0x8
	0x025F8A6C MOV X2, X21
	0x025F8A70 MOV X4, X22
	0x025F8A74 LDR X8, [X8 + 0xC0]
	0x025F8A78 LDR X1, [X8 + 0x58]
	0x025F8A7C LDR X0, [X1]
	0x025F8A80 STR X22, [X31 + 0x8]
	0x025F8A84 LDR X8, [X1 + 0x10]
	0x025F8A88 BLR X8
	0x025F8A8C LDR X8, [X19 + 0x20]
	0x025F8A90 MOV X0, X22
	0x025F8A94 LDR X8, [X8 + 0xC0]
	0x025F8A98 LDR X1, [X8 + 0x60]
	0x025F8A9C LDR X8, [X1]
	0x025F8AA0 BLR X8
	0x025F8AA4 MOV X22, X0
	0x025F8AA8 CBNZ X0, 0x25F8A64
	0x025F8AAC CBZ X21, 0x25F8BC4
	0x025F8AB0 LDR X8, [X19 + 0x20]
	0x025F8AB4 MOV X0, X21
	0x025F8AB8 LDR X8, [X8 + 0xC0]
	0x025F8ABC LDR X1, [X8 + 0x88]
	0x025F8AC0 LDR X8, [X1]
	0x025F8AC4 BLR X8
	0x025F8AC8 CBZ W0, 0x25F8BA8
	0x025F8ACC LDR X8, [X19 + 0x20]
	0x025F8AD0 ADD X4, X31, 0x8
	0x025F8AD4 MOV X2, X21
	0x025F8AD8 MOV X3, X31
	0x025F8ADC LDR X8, [X8 + 0xC0]
	0x025F8AE0 LDR X1, [X8 + 0x68]
	0x025F8AE4 LDR X0, [X1]
	0x025F8AE8 LDR X8, [X1 + 0x10]
	0x025F8AEC BLR X8
	0x025F8AF0 CBZ X20, 0x25F8BC4
	0x025F8AF4 LDR X8, [X19 + 0x20]
	0x025F8AF8 LDR X23, [X31 + 0x8]
	0x025F8AFC MOV X0, X20
	0x025F8B00 LDR X8, [X8 + 0xC0]
	0x025F8B04 MOV X1, X23
	0x025F8B08 LDR X2, [X8 + 0x78]
	0x025F8B0C LDR X8, [X2]
	0x025F8B10 BLR X8
	0x025F8B14 MOV W22, W0
	0x025F8B18 TBZ X0, 0x0, 0x25F8BAC
	0x025F8B1C CBZ X23, 0x25F8BC4
	0x025F8B20 LDR X8, [X19 + 0x20]
	0x025F8B24 MOV X0, X23
	0x025F8B28 LDR X8, [X8 + 0xC0]
	0x025F8B2C LDR X1, [X8 + 0x80]
	0x025F8B30 LDR X8, [X1]
	0x025F8B34 BLR X8
	0x025F8B38 CBZ X0, 0x25F8B88
	0x025F8B3C MOV X23, X0
	0x025F8B40 LDR X8, [X19 + 0x20]
	0x025F8B44 ADD X3, X31, 0x8
	0x025F8B48 MOV X2, X21
	0x025F8B4C MOV X4, X23
	0x025F8B50 LDR X8, [X8 + 0xC0]
	0x025F8B54 LDR X1, [X8 + 0x58]
	0x025F8B58 LDR X0, [X1]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X8, [X4+32]
	009 Move X19, X4
	010 Move W23, W3
	011 Move W22, W2
	012 Move X8, [X8+192]
	013 Move X24, X1
	014 Move X20, X0
	015 Move X8, [X8+408]
	016 Move W9, [X8+309]
	017 Move TEMP, X9
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {24}
	021 Move X0, X8
	022 Call 0x1C5D684
	023 Move X8, X0
	024 Move X0, X8
	025 Call 0x1C17F10
	026 Move X8, [X19+32]
	027 Move X21, X0
	028 Move X8, [X8+192]
	029 Move X1, [X8+416]
	030 Call 0x237B580, X0
	031 Compare X21, 0
	032 JumpIfEqual {81}
	033 Move [X21+16], W22
	034 Move [X21+20], W23
	035 Move [X21+24], X24
	036 Compare X24, 0
	037 JumpIfEqual {82}
	038 Move TEMP, X22
	039 And TEMP, TEMP, -2147483648
	040 Compare TEMP, -2147483648
	041 JumpIfEqual {94}
	042 Move TEMP, X23
	043 And TEMP, TEMP, -2147483648
	044 Compare TEMP, -2147483648
	045 JumpIfEqual {120}
	046 Move W8, [X24+24]
	047 Subtract W8, W8, W22
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Add W8, W23, W22
	050 Move [X21+20], W8
	051 Move X8, [X19+32]
	052 Move X8, [X8+192]
	053 Move X0, [X8+112]
	054 Move W8, [X0+309]
	055 Move TEMP, X8
	056 And TEMP, TEMP, 1
	057 Compare TEMP, 1
	058 JumpIfEqual {60}
	059 Call 0x1C5D684
	060 Call 0x1C17F10
	061 Move X8, [X19+32]
	062 Move X1, X21
	063 Move X19, X0
	064 Move X8, [X8+192]
	065 Move X2, [X8+424]
	066 Move X3, [X8+432]
	067 Call 0x2703220, X0, X1, X2
	068 Move X8, [X20]
	069 Move X0, X20
	070 Move X1, X19
	071 Move X20, [X31+48]
	072 Move X19, [X31+56]
	073 Move X3, [X8+632]
	074 Move X2, [X8+640]
	075 Move X22, [X31+32]
	076 Move X21, [X31+40]
	077 Move X24, [X31+16]
	078 Move X23, [X31+24]
	079 Move X30, [X31+64]
	080 CallNoReturn X3
	081 Call 0x1C17F20
	082 Move X0, 0x1B01000
	083 Move X0, [X0+1320]
	084 Call 0x1C17D08
	085 Call 0x1C17F10
	086 Move X20, X0
	087 Move X0, 0x1B24000
	088 Move X0, [X0+1600]
	089 Call 0x1C17D08
	090 Move X1, X0
	091 Move X0, X20
	092 Move X2, X31
	093 Call ArgumentNullException..ctor, X0, X1
	094 Move [X31+12], W22
	095 Move X0, 0x1AFC000
	096 Move X0, [X0+1880]
	097 Call 0x1C17D08
	098 Add X1, X31, 12
	099 Call 0x1C17E04
	100 Move X20, X0
	101 Move X0, 0x1B04000
	102 Move X0, [X0+1888]
	103 Call 0x1C17D08
	104 Call 0x1C17F10
	105 Move X21, X0
	106 Move X0, 0x1B07000
	107 Move X0, [X0+304]
	108 Call 0x1C17D08
	109 Move X22, X0
	110 Move X0, 0x1B24000
	111 Move X0, [X0+1648]
	112 Call 0x1C17D08
	113 Move X3, X0
	114 Move X0, X21
	115 Move X1, X22
	116 Move X2, X20
	117 Move X4, X31
	118 Call ArgumentOutOfRangeException..ctor, X0, X1, X2, X3
	119 Move X0, X21
	120 Move X0, 0x1B04000
	121 Move X0, [X0+1888]
	122 Call 0x1C17D08
	123 Call 0x1C17F10
	124 Move X20, X0
	125 Move X0, 0x1B24000
	126 Move X0, [X0+1608]
	127 Call 0x1C17D08
	128 Move X21, X0
	129 Move X0, 0x1B24000
	130 Move X0, [X0+1648]
	131 Call 0x1C17D08
	132 Move X2, X0
	133 Move X0, X20
	134 Move X1, X21
	135 Move X3, X31
	136 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	137 Move X0, 0x1B04000
	138 Move X0, [X0+1400]
	139 Call 0x1C17D08
	140 Call 0x1C17F10
	141 Move X20, X0
	142 Move X0, 0x1B25000
	143 Move X0, [X0+792]
	144 Call 0x1C17D08
	145 Move X1, X0
	146 Move X0, X20
	147 Move X2, X31
	148 Call ArgumentException..ctor, X0, X1
	149 Move X0, X20
	150 Move X1, X19
	151 Call 0x1C17DEC

Method: System.Void System.Collections.ICollection.CopyTo(System.Array array, System.Int32 index)

Disassembly:
	0x025F8B5C STR X23, [X31 + 0x8]
	0x025F8B60 LDR X8, [X1 + 0x10]
	0x025F8B64 BLR X8
	0x025F8B68 LDR X8, [X19 + 0x20]
	0x025F8B6C MOV X0, X23
	0x025F8B70 LDR X8, [X8 + 0xC0]
	0x025F8B74 LDR X1, [X8 + 0x60]
	0x025F8B78 LDR X8, [X1]
	0x025F8B7C BLR X8
	0x025F8B80 MOV X23, X0
	0x025F8B84 CBNZ X0, 0x25F8B40
	0x025F8B88 LDR X8, [X19 + 0x20]
	0x025F8B8C MOV X0, X21
	0x025F8B90 LDR X8, [X8 + 0xC0]
	0x025F8B94 LDR X1, [X8 + 0x88]
	0x025F8B98 LDR X8, [X1]
	0x025F8B9C BLR X8
	0x025F8BA0 CBNZ W0, 0x25F8ACC
	0x025F8BA4 B 0x25F8BAC
	0x025F8BA8 MOVZ W22, 0x1
	0x025F8BAC AND W0, W22, 0x1
	0x025F8BB0 LDP X20, X19, [X31 + 0x30]
	0x025F8BB4 LDP X22, X21, [X31 + 0x20]
	0x025F8BB8 LDP X30, X23, [X31 + 0x10]
	0x025F8BBC ADD X31, X31, 0x40
	0x025F8BC0 RET
	0x025F8BC4 BL 0x1C16F20
	0x025F8BC8 STP X30, X19, [X31 - 0x10]!
	0x025F8BCC LDR X8, [X0]
	0x025F8BD0 MOV X19, X0
	0x025F8BD4 LDR X9, [X8 + 0x288]
	0x025F8BD8 LDR X1, [X8 + 0x290]
	0x025F8BDC BLR X9
	0x025F8BE0 LDR W0, [X19 + 0x20]
	0x025F8BE4 LDP X30, X19, [X31], #0x10
	0x025F8BE8 RET
	0x025F8BEC MOV W0, W31
	0x025F8BF0 RET
	0x025F8BF4 MOV W0, W31
	0x025F8BF8 RET
	0x025F8BFC STR X30, [X31 - 0x20]!
	0x025F8C00 STP X20, X19, [X31 + 0x10]
	0x025F8C04 ADRP X20, 0x1DE1000
	0x025F8C08 LDRB W8, [X20 + 0xFD4]
	0x025F8C0C MOV X19, X0
	0x025F8C10 TBNZ X8, 0x0, 0x25F8C28
	0x025F8C14 ADRP X0, 0x1B01000
	0x025F8C18 LDR X0, [X0 + 0xCC0]
	0x025F8C1C BL 0x1C16CF4
	0x025F8C20 MOVZ W8, 0x1
	0x025F8C24 STRB W8, [X20 + 0xFD4]
	0x025F8C28 LDR X0, [X19 + 0x28]!
	0x025F8C2C CBNZ X0, 0x25F8C64
	0x025F8C30 ADRP X8, 0x1B01000
	0x025F8C34 LDR X8, [X8 + 0xCC0]
	0x025F8C38 LDR X0, [X8]
	0x025F8C3C BL 0x1C16F10
	0x025F8C40 MOV X1, X31
	0x025F8C44 MOV X20, X0
	0x025F8C48 BL 0x33BDD8C
	0x025F8C4C MOV X0, X19
	0x025F8C50 MOV X1, X20
	0x025F8C54 MOV X2, X31
	0x025F8C58 MOV X3, X31
	0x025F8C5C BL 0x33EB118
	0x025F8C60 LDR X0, [X19]
	0x025F8C64 LDP X20, X19, [X31 + 0x10]
	0x025F8C68 LDR X30, [X31], #0x20
	0x025F8C6C RET
	0x025F8C70 RET
	0x025F8C74 MOVZ W0, 0x1
	0x025F8C78 RET
	0x025F8C7C STP X29, X30, [X31 - 0x30]!
	0x025F8C80 STP X22, X21, [X31 + 0x10]
	0x025F8C84 STP X20, X19, [X31 + 0x20]
	0x025F8C88 ADD X29, X31, 0x0
	0x025F8C8C SUB X31, X31, 0x20
	0x025F8C90 MRS X21, 0xC000
	0x025F8C94 LDR X8, [X21 + 0x28]
	0x025F8C98 ADD X9, X31, 0x0
	0x025F8C9C MOV X19, X0
	0x025F8CA0 STUR X8, [X29 - 0x8]
	0x025F8CA4 STUR X1, [X29 - 0x20]
	0x025F8CA8 LDR X22, [X2 + 0x20]
	0x025F8CAC LDR X8, [X22 + 0xC0]
	0x025F8CB0 LDR X8, [X8 + 0x98]
	0x025F8CB4 LDR W2, [X8 + 0xFC]
	0x025F8CB8 ADD X10, X2, 0xF
	0x025F8CBC AND X10, X10, 0x1FFFFFFFF
	0x025F8CC0 SUB X20, X9, X10
	0x025F8CC4 ADD X31, X20, 0x0
	0x025F8CC8 LDR W8, [X8 + 0x28]
	0x025F8CCC MOV X0, X20
	0x025F8CD0 CMP W8, 0x0
	0x025F8CD4 SUB X8, X29, 0x20
	0x025F8CD8 CSEL X1, X1, X8, LT
	0x025F8CDC BL 0x3EB1AC0
	0x025F8CE0 LDR X8, [X22 + 0xC0]
	0x025F8CE4 LDR X8, [X8 + 0x98]
	0x025F8CE8 LDR W8, [X8 + 0x28]
	0x025F8CEC TBNZ X8, 0x1F, 0x25F8CF4
	0x025F8CF0 LDR X20, [X20]
	0x025F8CF4 LDR X8, [X19]
	0x025F8CF8 STUR X20, [X29 - 0x18]
	0x025F8CFC SUB X3, X29, 0x18
	0x025F8D00 SUB X4, X29, 0xC
	0x025F8D04 LDR X1, [X8 + 0x2C0]
	0x025F8D08 MOV X2, X19
	0x025F8D0C LDP X0, X8, [X1 + 0x8]
	0x025F8D10 BLR X8
	0x025F8D14 LDURB W8, [X29 - 0xC]
	0x025F8D18 LDR X9, [X21 + 0x28]
	0x025F8D1C LDUR X10, [X29 - 0x8]
	0x025F8D20 CMP W8, 0x0
	0x025F8D24 CSET W0, NE
	0x025F8D28 CMP X9, X10
	0x025F8D2C B.NE 0x25F8D44
	0x025F8D30 ADD X31, X29, 0x0
	0x025F8D34 LDP X20, X19, [X31 + 0x20]
	0x025F8D38 LDP X22, X21, [X31 + 0x10]
	0x025F8D3C LDP X29, X30, [X31], #0x30
	0x025F8D40 RET
	0x025F8D44 BL 0x3EB1B20
	0x025F8D48 STP X29, X30, [X31 - 0x30]!
	0x025F8D4C STP X22, X21, [X31 + 0x10]
	0x025F8D50 STP X20, X19, [X31 + 0x20]
	0x025F8D54 ADD X29, X31, 0x0
	0x025F8D58 SUB X31, X31, 0x20
	0x025F8D5C MRS X21, 0xC000
	0x025F8D60 LDR X8, [X21 + 0x28]
	0x025F8D64 ADD X9, X31, 0x0
	0x025F8D68 MOV X19, X0
	0x025F8D6C STUR X8, [X29 - 0x8]
	0x025F8D70 STUR X1, [X29 - 0x20]
	0x025F8D74 LDR X22, [X2 + 0x20]
	0x025F8D78 LDR X8, [X22 + 0xC0]
	0x025F8D7C LDR X8, [X8 + 0x98]
	0x025F8D80 LDR W2, [X8 + 0xFC]
	0x025F8D84 ADD X10, X2, 0xF
	0x025F8D88 AND X10, X10, 0x1FFFFFFFF
	0x025F8D8C SUB X20, X9, X10
	0x025F8D90 ADD X31, X20, 0x0
	0x025F8D94 LDR W8, [X8 + 0x28]
	0x025F8D98 MOV X0, X20
	0x025F8D9C CMP W8, 0x0
	0x025F8DA0 SUB X8, X29, 0x20
	0x025F8DA4 CSEL X1, X1, X8, LT
	0x025F8DA8 BL 0x3EB1AC0
	0x025F8DAC LDR X8, [X22 + 0xC0]
	0x025F8DB0 LDR X9, [X8 + 0x98]
	0x025F8DB4 LDR X1, [X8 + 0xA8]
	0x025F8DB8 LDR W8, [X9 + 0x28]
	0x025F8DBC LDR X0, [X1]
	0x025F8DC0 TBNZ X8, 0x1F, 0x25F8DC8
	0x025F8DC4 LDR X20, [X20]
	0x025F8DC8 STUR X20, [X29 - 0x18]
	0x025F8DCC LDR X8, [X1 + 0x10]
	0x025F8DD0 SUB X3, X29, 0x18
	0x025F8DD4 SUB X4, X29, 0xC
	0x025F8DD8 MOV X2, X19
	0x025F8DDC BLR X8
	0x025F8DE0 LDR X8, [X21 + 0x28]
	0x025F8DE4 LDUR X9, [X29 - 0x8]
	0x025F8DE8 CMP X8, X9
	0x025F8DEC B.NE 0x25F8E04
	0x025F8DF0 ADD X31, X29, 0x0
	0x025F8DF4 LDP X20, X19, [X31 + 0x20]
	0x025F8DF8 LDP X22, X21, [X31 + 0x10]
	0x025F8DFC LDP X29, X30, [X31], #0x30
	0x025F8E00 RET
	0x025F8E04 BL 0x3EB1B20
	0x025F8E08 STP X29, X30, [X31 - 0x60]!
	0x025F8E0C STP X28, X27, [X31 + 0x10]
	0x025F8E10 STP X26, X25, [X31 + 0x20]
	0x025F8E14 STP X24, X23, [X31 + 0x30]
	0x025F8E18 STP X22, X21, [X31 + 0x40]
	0x025F8E1C STP X20, X19, [X31 + 0x50]
	0x025F8E20 ADD X29, X31, 0x0
	0x025F8E24 SUB X31, X31, 0x50
	0x025F8E28 MRS X22, 0xC000
	0x025F8E2C LDR X8, [X22 + 0x28]
	0x025F8E30 MOV X20, X2
	0x025F8E34 MOV X19, X0
	0x025F8E38 STUR X8, [X29 - 0x8]
	0x025F8E3C LDR X23, [X2 + 0x20]
	0x025F8E40 LDR X8, [X23 + 0xC0]
	0x025F8E44 LDR X9, [X8 + 0x98]
	0x025F8E48 LDR W2, [X9 + 0xFC]
	0x025F8E4C ADD X9, X31, 0x0
	0x025F8E50 ADD X10, X2, 0xF
	0x025F8E54 AND X10, X10, 0x1FFFFFFFF
	0x025F8E58 SUB X21, X9, X10
	0x025F8E5C ADD X31, X21, 0x0
	0x025F8E60 ADD X9, X31, 0x0
	0x025F8E64 SUB X25, X9, X10
	0x025F8E68 ADD X31, X25, 0x0
	0x025F8E6C STP X31, X1, [X29 - 0x30]
	0x025F8E70 LDR X26, [X0 + 0x10]
	0x025F8E74 CBZ X26, 0x25F90C4
	0x025F8E78 STP X19, X31, [X29 - 0x38]
	0x025F8E7C LDR W9, [X19 + 0x24]
	0x025F8E80 MOV X28, X31
	0x025F8E84 MOV X27, X31
	0x025F8E88 STP X22, X21, [X29 - 0x48]
	0x025F8E8C ADD W9, W9, 0x1
	0x025F8E90 STR W9, [X19 + 0x24]
	0x025F8E94 LDR X8, [X8 + 0x98]
	0x025F8E98 LDUR X9, [X29 - 0x38]
	0x025F8E9C MOV X22, X28
	0x025F8EA0 LDUR X28, [X29 - 0x40]
	0x025F8EA4 LDR W8, [X8 + 0x28]
	0x025F8EA8 LDR X19, [X9 + 0x18]
	0x025F8EAC MOV X24, X1
	0x025F8EB0 MOV X0, X28
	0x025F8EB4 CMP W8, 0x0
	0x025F8EB8 SUB X8, X29, 0x28
	0x025F8EBC CSEL X1, X1, X8, LT
	0x025F8EC0 MOV X21, X2
	0x025F8EC4 BL 0x3EB1AC0
	0x025F8EC8 LDR X8, [X23 + 0xC0]
	0x025F8ECC SUB X3, X29, 0x20
	0x025F8ED0 MOV X2, X26
	0x025F8ED4 MOV X4, X25
	0x025F8ED8 LDR X1, [X8 + 0xB8]
	0x025F8EDC LDR X0, [X1]
	0x025F8EE0 STUR X25, [X29 - 0x20]
	0x025F8EE4 LDR X8, [X1 + 0x10]
	0x025F8EE8 BLR X8
	0x025F8EEC CBZ X19, 0x25F9290
	0x025F8EF0 LDR X8, [X20 + 0x20]
	0x025F8EF4 LDR X8, [X8 + 0xC0]
	0x025F8EF8 LDR X1, [X8 + 0x20]
	0x025F8EFC LDRB W9, [X1 + 0x135]
	0x025F8F00 TBNZ X9, 0x0, 0x25F8F18
	0x025F8F04 MOV X0, X1
	0x025F8F08 BL 0x1C5C684
	0x025F8F0C LDR X8, [X20 + 0x20]
	0x025F8F10 MOV X1, X0
	0x025F8F14 LDR X8, [X8 + 0xC0]
	0x025F8F18 LDR X8, [X8 + 0x98]
	0x025F8F1C MOV X23, X28
	0x025F8F20 MOV X9, X28
	0x025F8F24 MOV X28, X25
	0x025F8F28 LDR W8, [X8 + 0x28]
	0x025F8F2C TBNZ X8, 0x1F, 0x25F8F38
	0x025F8F30 LDR X23, [X9]
	0x025F8F34 LDR X28, [X25]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x1DE2000
	009 Move W8, [X21+4049]
	010 Move X19, X3
	011 Move W23, W2
	012 Move X22, X1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0x1AFC000
	019 Move X0, [X0+2512]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X21+4049], W8
	023 Move X8, [X19+32]
	024 Move X8, [X8+192]
	025 Move X0, [X8+448]
	026 Move W8, [X0+309]
	027 Move TEMP, X8
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfEqual {32}
	031 Call 0x1C5D684
	032 Call 0x1C17F10
	033 Move X8, [X19+32]
	034 Move X21, X0
	035 Move X8, [X8+192]
	036 Move X1, [X8+456]
	037 Call 0x237B888, X0
	038 Compare X21, 0
	039 JumpIfEqual {155}
	040 Move [X21+16], W23
	041 Compare X22, 0
	042 JumpIfEqual {156}
	043 Move X0, X22
	044 Move X1, X31
	045 Call Array.get_Rank, X0
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Move X0, X22
	048 Move W1, W31
	049 Move X2, X31
	050 Call Array.GetLowerBound, X0, X1
	051 Compare W0, 0
	052 JumpIfNotEqual {175}
	053 Move W8, [X21+16]
	054 Move TEMP, X8
	055 And TEMP, TEMP, -2147483648
	056 Compare TEMP, -2147483648
	057 JumpIfEqual {182}
	058 Move X0, X22
	059 Move X1, X31
	060 Call Array.get_Length, X0
	061 Move X8, [X20]
	062 Move W24, [X21+16]
	063 Move W23, W0
	064 Move X0, X20
	065 Move X9, [X8+648]
	066 Move X1, [X8+656]
	067 NotImplemented "Instruction BLR not yet implemented."
	068 Move W8, [X20+32]
	069 Subtract W9, W23, W24
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Move X8, [X19+32]
	072 Move X8, [X8+192]
	073 Move X1, [X8+392]
	074 Move W8, [X1+309]
	075 Move TEMP, X8
	076 And TEMP, TEMP, 1
	077 Compare TEMP, 1
	078 JumpIfEqual {82}
	079 Move X0, X1
	080 Call 0x1C5D684
	081 Move X1, X0
	082 Move X0, X22
	083 Call 0x1C17E00
	084 Compare X0, 0
	085 JumpIfEqual {112}
	086 Move X8, [X19+32]
	087 Move X9, [X20]
	088 Move W19, [X21+16]
	089 Move X23, X0
	090 Move X8, [X8+192]
	091 Move X10, [X9+648]
	092 Move X1, [X9+656]
	093 Move X0, X20
	094 Move X21, [X8+464]
	095 NotImplemented "Instruction BLR not yet implemented."
	096 Move X8, [X21+32]
	097 Move W3, [X20+32]
	098 Move X0, X20
	099 Move X1, X23
	100 Move X8, [X8+192]
	101 Move W2, W19
	102 Move X20, [X31+48]
	103 Move X19, [X31+56]
	104 Move X22, [X31+32]
	105 Move X21, [X31+40]
	106 Move X4, [X8+400]
	107 Move X24, [X31+16]
	108 Move X23, [X31+24]
	109 Move X30, [X31+64]
	110 Call 0x25F8948, X0, X1, X2, X3
	111 Return 
	112 Move X23, 0x1AFC000
	113 Move X23, [X23+2512]
	114 Move X0, X22
	115 Move X1, [X23]
	116 Call 0x1C17E00
	117 Move [X21+24], X0
	118 Move X1, [X23]
	119 Move X0, X22
	120 Call 0x1C17E00
	121 Move X8, [X21+24]
	122 Compare X8, 0
	123 JumpIfEqual {239}
	124 Move X8, [X19+32]
	125 Move X8, [X8+192]
	126 Move X0, [X8+112]
	127 Move W8, [X0+309]
	128 Move TEMP, X8
	129 And TEMP, TEMP, 1
	130 Compare TEMP, 1
	131 JumpIfEqual {133}
	132 Call 0x1C5D684
	133 Call 0x1C17F10
	134 Move X8, [X19+32]
	135 Move X22, X0
	136 Move X8, [X8+192]
	137 Move X2, [X8+472]
	138 Move X3, [X8+432]
	139 Move X1, X21
	140 Call 0x2703220, X0, X1, X2
	141 Move X8, [X20]
	142 Move X9, [X8+632]
	143 Move X2, [X8+640]
	144 Move X0, X20
	145 Move X1, X22
	146 NotImplemented "Instruction BLR not yet implemented."
	147 Move X20, [X31+48]
	148 Move X19, [X31+56]
	149 Move X22, [X31+32]
	150 Move X21, [X31+40]
	151 Move X24, [X31+16]
	152 Move X23, [X31+24]
	153 Move X30, [X31+64]
	154 Return 
	155 Call 0x1C17F20
	156 Move X0, 0x1B01000
	157 Move X0, [X0+1320]
	158 Call 0x1C17D08
	159 Call 0x1C17F10
	160 Move X20, X0
	161 Move X0, 0x1B24000
	162 Move X0, [X0+1600]
	163 Call 0x1C17D08
	164 Move X1, X0
	165 Move X0, X20
	166 Move X2, X31
	167 Call ArgumentNullException..ctor, X0, X1
	168 Move X0, 0x1B04000
	169 Move X0, [X0+1400]
	170 Call 0x1C17D08
	171 Call 0x1C17F10
	172 Move X20, X0
	173 Move X0, 0x1B25000
	174 Move X0, [X0+776]
	175 Move X0, 0x1B04000
	176 Move X0, [X0+1400]
	177 Call 0x1C17D08
	178 Call 0x1C17F10
	179 Move X20, X0
	180 Move X0, 0x1B25000
	181 Move X0, [X0+784]
	182 Move X0, X21
	183 Call 0x19913C0
	184 Move W8, [X21+16]
	185 Move X0, 0x1AFC000
	186 Move [X31+12], W8
	187 Move X0, [X0+1880]
	188 Call 0x1C17D08
	189 Add X1, X31, 12
	190 Call 0x1C17E04
	191 Move X20, X0
	192 Move X0, 0x1B04000
	193 Move X0, [X0+1888]
	194 Call 0x1C17D08
	195 Call 0x1C17F10
	196 Move X21, X0
	197 Move X0, 0x1B07000
	198 Move X0, [X0+304]
	199 Call 0x1C17D08
	200 Move X22, X0
	201 Move X0, 0x1B24000
	202 Move X0, [X0+1648]
	203 Call 0x1C17D08
	204 Move X3, X0
	205 Move X0, X21
	206 Move X1, X22
	207 Move X2, X20
	208 Move X4, X31
	209 Call ArgumentOutOfRangeException..ctor, X0, X1, X2, X3
	210 Move X0, X21
	211 Move X0, 0x1B04000
	212 Move X0, [X0+1400]
	213 Call 0x1C17D08
	214 Call 0x1C17F10
	215 Move X20, X0
	216 Move X0, 0x1B25000
	217 Move X0, [X0+792]
	218 Call 0x1C17D08
	219 Move X1, X0
	220 Move X0, X20
	221 Move X2, X31
	222 Call ArgumentException..ctor, X0, X1
	223 Move X20, X0
	224 NotImplemented "Instruction CMP not yet implemented."
	225 Move X0, X20
	226 Call 0x3EB2AD0
	227 Move X20, X0
	228 Move X0, 0x1B25000
	229 Move X0, [X0+800]
	230 Call 0x1C17D08
	231 Move X8, [X20]
	232 Move X1, [X8]
	233 Call 0x1C18270
	234 Move TEMP, X0
	235 And TEMP, TEMP, 1
	236 Compare TEMP, 1
	237 JumpIfNotEqual {259}
	238 Call 0x3EB2AE0
	239 Move X0, 0x1B04000
	240 Move X0, [X0+1400]
	241 Call 0x1C17D08
	242 Call 0x1C17F10
	243 Move X20, X0
	244 Move X0, 0x1B25000
	245 Move X0, [X0+808]
	246 Call 0x1C17D08
	247 Move X21, X0
	248 Move X0, 0x1B24000
	249 Move X0, [X0+1600]
	250 Call 0x1C17D08
	251 Move X2, X0
	252 Move X0, X20
	253 Move X1, X21
	254 Move X3, X31
	255 Call ArgumentException..ctor, X0, X1, X2
	256 Move X0, X20
	257 Move X1, X19
	258 Call 0x1C17DEC
	259 Move W0, 8
	260 Call 0x3EB2AF0
	261 Move X8, [X20]
	262 Move [X0], X8
	263 Move X1, 0x18BD000
	264 Add X1, X1, 3672
	265 Move X2, X31
	266 Call 0x3EB2B00
	267 Move X20, X0
	268 Call 0x3EB2AE0
	269 Move X0, X20
	270 Call 0x1D2D690
	271 Call 0x1991590

Method: System.Collections.Generic.SortedSet`1/Enumerator<T> GetEnumerator()

Disassembly:
	0x025F8F38 LDR X8, [X19]
	0x025F8F3C LDRH W9, [X8 + 0x12E]
	0x025F8F40 CBZ X9, 0x25F8F64
	0x025F8F44 LDR X10, [X8 + 0xB0]
	0x025F8F48 ADD X10, X10, 0x8
	0x025F8F4C LDUR X11, [X10 - 0x8]
	0x025F8F50 CMP X11, X1
	0x025F8F54 B.EQ 0x25F8F74
	0x025F8F58 SUBS X9, X9, 0x1

ISIL:
	001 NotImplemented "Instruction MOVI not yet implemented."
	002 Move [X8+32], X31
	003 Move [X8], V0
	004 Move [X8+8], V0
	005 Move X9, [X1+32]
	006 Move X1, X0
	007 Move X0, X8
	008 Move X9, [X9+192]
	009 Move X2, [X9+488]
	010 Call 0x2BC5A54, X0, X1
	011 Return X0

Method: System.Collections.Generic.IEnumerator`1<T> System.Collections.Generic.IEnumerable<T>.GetEnumerator()

Disassembly:
	0x025F8F5C ADD X10, X10, 0x10
	0x025F8F60 B.NE 0x25F8F4C
	0x025F8F64 MOV X0, X19
	0x025F8F68 MOV W2, W31
	0x025F8F6C BL 0x1C5C788
	0x025F8F70 B 0x25F8F80
	0x025F8F74 LDRSW X9, [X10]
	0x025F8F78 ADD X8, X8, X9, 0x4, LSL
	0x025F8F7C ADD X0, X8, 0x138
	0x025F8F80 STP X23, X28, [X29 - 0x20]
	0x025F8F84 LDR X1, [X0 + 0x8]
	0x025F8F88 SUB X3, X29, 0x20
	0x025F8F8C SUB X4, X29, 0xC
	0x025F8F90 MOV X2, X19
	0x025F8F94 LDP X0, X8, [X1 + 0x8]
	0x025F8F98 BLR X8
	0x025F8F9C LDUR W19, [X29 - 0xC]
	0x025F8FA0 CBZ W19, 0x25F90FC
	0x025F8FA4 LDR X8, [X20 + 0x20]
	0x025F8FA8 MOV X0, X26
	0x025F8FAC LDR X8, [X8 + 0xC0]
	0x025F8FB0 LDR X1, [X8 + 0xD0]
	0x025F8FB4 LDR X8, [X1]
	0x025F8FB8 BLR X8
	0x025F8FBC TBZ X0, 0x0, 0x25F901C
	0x025F8FC0 LDR X8, [X20 + 0x20]
	0x025F8FC4 MOV X0, X26
	0x025F8FC8 LDR X8, [X8 + 0xC0]
	0x025F8FCC LDR X1, [X8 + 0xD8]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+96], X30
	003 Move [X31+104], X19
	004 Move X8, [X1+32]
	005 NotImplemented "Instruction MOVI not yet implemented."
	006 Move X19, X1
	007 Move X1, X0
	008 Move X8, [X8+192]
	009 Add X0, X31, 0
	010 Move X8, [X8+496]
	011 Move [X31+32], X31
	012 Move [X31], V0
	013 Move [X31+8], V0
	014 Move X8, [X8+32]
	015 Move X8, [X8+192]
	016 Move X2, [X8+488]
	017 Call 0x2BC5A54, X0, X1
	018 Move X8, [X31+32]
	019 Move V1, [X31]
	020 Move V0, [X31+16]
	021 Add X1, X31, 0
	022 Move [X31+80], X8
	023 Move [X31+48], V1
	024 Move [X31+56], V0
	025 Move [X31], V1
	026 Move [X31+8], V0
	027 Move [X31+32], X8
	028 Move X8, [X19+32]
	029 Move X8, [X8+192]
	030 Move X0, [X8+480]
	031 Call 0x1C17E04
	032 Move X30, [X31+96]
	033 Move X19, [X31+104]
	034 Add X31, X31, 112
	035 Return X0

Method: System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()

Disassembly:
	0x025F8FD0 LDR X8, [X1]
	0x025F8FD4 BLR X8
	0x025F8FD8 LDR X8, [X20 + 0x20]
	0x025F8FDC LDUR X0, [X29 - 0x30]
	0x025F8FE0 LDR X8, [X8 + 0xC0]
	0x025F8FE4 LDR X1, [X8 + 0xE0]
	0x025F8FE8 LDR X8, [X1]
	0x025F8FEC BLR X8
	0x025F8FF0 TBZ X0, 0x0, 0x25F901C
	0x025F8FF4 LDR X8, [X20 + 0x20]
	0x025F8FF8 LDUR X0, [X29 - 0x38]
	0x025F8FFC SUB X2, X29, 0x30
	0x025F9000 MOV X1, X26
	0x025F9004 LDR X8, [X8 + 0xC0]
	0x025F9008 MOV X3, X22
	0x025F900C MOV X4, X27
	0x025F9010 LDR X5, [X8 + 0xF0]
	0x025F9014 LDR X8, [X5]
	0x025F9018 BLR X8
	0x025F901C LDUR X28, [X29 - 0x30]
	0x025F9020 STUR X26, [X29 - 0x30]
	0x025F9024 LDR X8, [X20 + 0x20]
	0x025F9028 LDR X8, [X8 + 0xC0]
	0x025F902C TBNZ X19, 0x1F, 0x25F9038
	0x025F9030 LDR X1, [X8 + 0x80]
	0x025F9034 B 0x25F903C
	0x025F9038 LDR X1, [X8 + 0x60]
	0x025F903C LDR X8, [X1]
	0x025F9040 MOV X0, X26

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+96], X30
	003 Move [X31+104], X19
	004 Move X8, [X1+32]
	005 NotImplemented "Instruction MOVI not yet implemented."
	006 Move X19, X1
	007 Move X1, X0
	008 Move X8, [X8+192]
	009 Add X0, X31, 0
	010 Move X8, [X8+496]
	011 Move [X31+32], X31
	012 Move [X31], V0
	013 Move [X31+8], V0
	014 Move X8, [X8+32]
	015 Move X8, [X8+192]
	016 Move X2, [X8+488]
	017 Call 0x2BC5A54, X0, X1
	018 Move X8, [X31+32]
	019 Move V1, [X31]
	020 Move V0, [X31+16]
	021 Add X1, X31, 0
	022 Move [X31+80], X8
	023 Move [X31+48], V1
	024 Move [X31+56], V0
	025 Move [X31], V1
	026 Move [X31+8], V0
	027 Move [X31+32], X8
	028 Move X8, [X19+32]
	029 Move X8, [X8+192]
	030 Move X0, [X8+480]
	031 Call 0x1C17E04
	032 Move X30, [X31+96]
	033 Move X19, [X31+104]
	034 Add X31, X31, 112
	035 Return X0

Method: System.Void InsertionBalance(System.Collections.Generic.SortedSet`1/Node<T> current, ref System.Collections.Generic.SortedSet`1/Node<T> parent, System.Collections.Generic.SortedSet`1/Node<T> grandParent, System.Collections.Generic.SortedSet`1/Node<T> greatGrandParent)

Disassembly:
	0x025F9044 BLR X8
	0x025F9048 LDR X23, [X20 + 0x20]
	0x025F904C MOV X26, X0
	0x025F9050 MOV X27, X22
	0x025F9054 MOV X1, X24
	0x025F9058 LDR X8, [X23 + 0xC0]
	0x025F905C MOV X2, X21
	0x025F9060 CBNZ X0, 0x25F8E94
	0x025F9064 LDR X8, [X8 + 0x98]
	0x025F9068 LDUR X0, [X29 - 0x40]
	0x025F906C LDR W8, [X8 + 0x28]
	0x025F9070 CMP W8, 0x0
	0x025F9074 SUB X8, X29, 0x28
	0x025F9078 CSEL X1, X1, X8, LT
	0x025F907C BL 0x3EB1AC0
	0x025F9080 LDR X8, [X23 + 0xC0]
	0x025F9084 LDR X0, [X8 + 0x28]
	0x025F9088 LDRB W8, [X0 + 0x135]
	0x025F908C TBNZ X8, 0x0, 0x25F9094
	0x025F9090 BL 0x1C5C684
	0x025F9094 BL 0x1C16F10
	0x025F9098 LDR X8, [X20 + 0x20]
	0x025F909C MOV X23, X0
	0x025F90A0 LDR X8, [X8 + 0xC0]
	0x025F90A4 LDR X9, [X8 + 0x98]
	0x025F90A8 LDR X1, [X8 + 0xB0]
	0x025F90AC LDR W9, [X9 + 0x28]
	0x025F90B0 LDR X8, [X1]
	0x025F90B4 TBNZ X9, 0x1F, 0x25F918C
	0x025F90B8 LDUR X11, [X29 - 0x40]
	0x025F90BC LDR X11, [X11]
	0x025F90C0 B 0x25F9190
	0x025F90C4 LDR X8, [X8 + 0x98]
	0x025F90C8 MOV X0, X21
	0x025F90CC LDR W8, [X8 + 0x28]
	0x025F90D0 CMP W8, 0x0
	0x025F90D4 SUB X8, X29, 0x28
	0x025F90D8 CSEL X1, X1, X8, LT
	0x025F90DC BL 0x3EB1AC0
	0x025F90E0 LDR X8, [X23 + 0xC0]
	0x025F90E4 LDR X0, [X8 + 0x28]
	0x025F90E8 LDRB W8, [X0 + 0x135]
	0x025F90EC TBNZ X8, 0x0, 0x25F9124
	0x025F90F0 MOV X23, X19
	0x025F90F4 BL 0x1C5C684
	0x025F90F8 B 0x25F9128
	0x025F90FC LDUR X8, [X29 - 0x38]
	0x025F9100 LDR X0, [X8 + 0x10]
	0x025F9104 CBZ X0, 0x25F9290
	0x025F9108 LDR X8, [X20 + 0x20]
	0x025F910C LDR X8, [X8 + 0xC0]
	0x025F9110 LDR X1, [X8 + 0xC8]
	0x025F9114 LDR X8, [X1]
	0x025F9118 BLR X8
	0x025F911C MOV W0, W31
	0x025F9120 B 0x25F925C
	0x025F9124 MOV X23, X19
	0x025F9128 BL 0x1C16F10
	0x025F912C LDR X8, [X20 + 0x20]
	0x025F9130 MOV X19, X0
	0x025F9134 LDR X8, [X8 + 0xC0]
	0x025F9138 LDR X9, [X8 + 0x98]
	0x025F913C LDR X1, [X8 + 0xB0]
	0x025F9140 LDR W9, [X9 + 0x28]
	0x025F9144 LDR X8, [X1]
	0x025F9148 TBNZ X9, 0x1F, 0x25F9150
	0x025F914C LDR X21, [X21]
	0x025F9150 SUB X9, X29, 0xC
	0x025F9154 STURB W31, [X29 - 0xC]
	0x025F9158 STP X21, X9, [X29 - 0x20]
	0x025F915C LDR X9, [X1 + 0x10]
	0x025F9160 SUB X3, X29, 0x20
	0x025F9164 SUB X4, X29, 0xC
	0x025F9168 MOV X0, X8
	0x025F916C MOV X2, X19
	0x025F9170 BLR X9
	0x025F9174 LDR W8, [X23 + 0x24]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Compare X3, 0
	009 JumpIfEqual {85}
	010 Move X9, [X2]
	011 Move X24, X2
	012 Compare X9, 0
	013 JumpIfEqual {85}
	014 Move X8, [X5+32]
	015 Move X10, [X9+32]
	016 Move X11, [X3+32]
	017 Move X21, X5
	018 Move X8, [X8+192]
	019 NotImplemented "Instruction CMP not yet implemented."
	020 NotImplemented "Instruction CSET not yet implemented."
	021 NotImplemented "Instruction CMP not yet implemented."
	022 NotImplemented "Instruction CSET not yet implemented."
	023 Move X20, X4
	024 Move X19, X3
	025 Move X22, X0
	026 NotImplemented "Instruction CMP not yet implemented."
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Move X1, [X8+320]
	029 Move X0, X19
	030 Call 0x2425270, X0
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move X1, [X8+512]
	033 Move X0, X19
	034 Call 0x2425298, X0
	035 Move X1, [X8+312]
	036 Move X0, X19
	037 Call 0x242520C, X0
	038 Move X23, X0
	039 Move X1, [X8+520]
	040 Move X0, X19
	041 Call 0x2425234, X0
	042 Move X23, X0
	043 Move [X24], X20
	044 Move X8, [X21+32]
	045 Move X0, X19
	046 Move X8, [X8+192]
	047 Move X1, [X8+296]
	048 Call 0x2425098, X0
	049 Compare X23, 0
	050 JumpIfEqual {85}
	051 Move X8, [X21+32]
	052 Move X0, X23
	053 Move X8, [X8+192]
	054 Move X1, [X8+200]
	055 Call 0x2425090, X0
	056 Compare X20, 0
	057 JumpIfEqual {76}
	058 Move X8, [X21+32]
	059 Move X0, X20
	060 Move X1, X19
	061 Move X2, X23
	062 Move X8, [X8+192]
	063 Move X20, [X31+48]
	064 Move X19, [X31+56]
	065 Move X22, [X31+32]
	066 Move X21, [X31+40]
	067 Move X24, [X31+16]
	068 Move X23, [X31+24]
	069 Move X8, [X8+328]
	070 Move X8, [X8+32]
	071 Move X8, [X8+192]
	072 Move X3, [X8+528]
	073 Move X30, [X31+64]
	074 Call 0x2425304, X0, X1, X2
	075 Return 
	076 Move [X22+16], X23
	077 Move X20, [X31+48]
	078 Move X19, [X31+56]
	079 Move X22, [X31+32]
	080 Move X21, [X31+40]
	081 Move X24, [X31+16]
	082 Move X23, [X31+24]
	083 Move X30, [X31+64]
	084 Return 
	085 Call 0x1C17F20

Method: System.Void ReplaceChildOrRoot(System.Collections.Generic.SortedSet`1/Node<T> parent, System.Collections.Generic.SortedSet`1/Node<T> child, System.Collections.Generic.SortedSet`1/Node<T> newChild)

Disassembly:
	0x025F9178 MOVZ W0, 0x1
	0x025F917C STR X19, [X23 + 0x10]
	0x025F9180 ADD W8, W8, 0x1
	0x025F9184 STP W0, W8, [X23 + 0x20]
	0x025F9188 B 0x25F9260
	0x025F918C LDUR X11, [X29 - 0x40]
	0x025F9190 MOVZ W9, 0x1
	0x025F9194 SUB X10, X29, 0xC
	0x025F9198 STURB W9, [X29 - 0xC]
	0x025F919C STP X11, X10, [X29 - 0x20]
	0x025F91A0 LDR X9, [X1 + 0x10]

ISIL:
	001 Compare X1, 0
	002 JumpIfEqual {12}
	003 Move X8, [X4+32]
	004 Move X0, X1
	005 Move X1, X2
	006 Move X2, X3
	007 Move X8, [X8+192]
	008 Move X8, [X8+528]
	009 Move X3, X8
	010 Call 0x2425304, X0, X1, X2
	011 Return 
	012 Move [X0+16], X3
	013 Return 

Method: System.Void ReplaceNode(System.Collections.Generic.SortedSet`1/Node<T> match, System.Collections.Generic.SortedSet`1/Node<T> parentOfMatch, System.Collections.Generic.SortedSet`1/Node<T> successor, System.Collections.Generic.SortedSet`1/Node<T> parentOfSuccessor)

Disassembly:
	0x025F91A4 SUB X3, X29, 0x20
	0x025F91A8 SUB X4, X29, 0xC
	0x025F91AC MOV X0, X8
	0x025F91B0 MOV X2, X23
	0x025F91B4 BLR X9
	0x025F91B8 LDUR X0, [X29 - 0x30]
	0x025F91BC CBZ X0, 0x25F9290
	0x025F91C0 LDR X8, [X20 + 0x20]
	0x025F91C4 CMP W19, 0x1
	0x025F91C8 LDR X8, [X8 + 0xC0]
	0x025F91CC B.LT 0x25F91D8
	0x025F91D0 LDR X2, [X8 + 0x100]
	0x025F91D4 B 0x25F91DC
	0x025F91D8 LDR X2, [X8 + 0x108]
	0x025F91DC LDR X8, [X2]
	0x025F91E0 MOV X1, X23
	0x025F91E4 BLR X8
	0x025F91E8 LDP X19, X0, [X29 - 0x38]
	0x025F91EC CBZ X0, 0x25F9290
	0x025F91F0 LDR X8, [X20 + 0x20]
	0x025F91F4 LDR X8, [X8 + 0xC0]
	0x025F91F8 LDR X1, [X8 + 0x110]
	0x025F91FC LDR X8, [X1]
	0x025F9200 BLR X8
	0x025F9204 TBZ X0, 0x0, 0x25F9230
	0x025F9208 LDR X8, [X20 + 0x20]
	0x025F920C SUB X2, X29, 0x30
	0x025F9210 MOV X0, X19
	0x025F9214 MOV X1, X23
	0x025F9218 LDR X8, [X8 + 0xC0]
	0x025F921C MOV X3, X28
	0x025F9220 MOV X4, X22
	0x025F9224 LDR X5, [X8 + 0xF0]
	0x025F9228 LDR X8, [X5]
	0x025F922C BLR X8
	0x025F9230 LDR X0, [X19 + 0x10]
	0x025F9234 CBZ X0, 0x25F9290
	0x025F9238 LDR X8, [X20 + 0x20]
	0x025F923C LDR X8, [X8 + 0xC0]
	0x025F9240 LDR X1, [X8 + 0xC8]
	0x025F9244 LDR X8, [X1]
	0x025F9248 BLR X8
	0x025F924C LDR W8, [X19 + 0x20]
	0x025F9250 MOVZ W0, 0x1
	0x025F9254 ADD W8, W8, 0x1
	0x025F9258 STR W8, [X19 + 0x20]
	0x025F925C LDUR X22, [X29 - 0x48]
	0x025F9260 LDR X8, [X22 + 0x28]
	0x025F9264 LDUR X9, [X29 - 0x8]
	0x025F9268 CMP X8, X9
	0x025F926C B.NE 0x25F9294
	0x025F9270 ADD X31, X29, 0x0
	0x025F9274 LDP X20, X19, [X31 + 0x50]
	0x025F9278 LDP X22, X21, [X31 + 0x40]
	0x025F927C LDP X24, X23, [X31 + 0x30]
	0x025F9280 LDP X26, X25, [X31 + 0x20]
	0x025F9284 LDP X28, X27, [X31 + 0x10]
	0x025F9288 LDP X29, X30, [X31], #0x60
	0x025F928C RET
	0x025F9290 BL 0x1C16F20

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, X5
	009 Move X19, X3
	010 Move X21, X2
	011 Move X20, X1
	012 NotImplemented "Instruction CMP not yet implemented."
	013 Move X23, X0
	014 Compare X19, 0
	015 JumpIfEqual {75}
	016 Move X0, [X19+32]
	017 Move X24, X4
	018 Compare X0, 0
	019 JumpIfEqual {24}
	020 Move X8, [X22+32]
	021 Move X8, [X8+192]
	022 Move X1, [X8+200]
	023 Call 0x2425090, X0
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Compare X24, 0
	026 JumpIfEqual {75}
	027 Move X8, [X19+32]
	028 Move [X24+24], X8
	029 Compare X20, 0
	030 JumpIfEqual {75}
	031 Move X8, [X20+32]
	032 Move [X19+32], X8
	033 Compare X19, 0
	034 JumpIfEqual {75}
	035 Move X19, [X19+24]
	036 Compare X19, 0
	037 JumpIfEqual {46}
	038 Compare X20, 0
	039 JumpIfNotEqual {44}
	040 Compare X20, 0
	041 JumpIfEqual {75}
	042 Move X8, [X20+24]
	043 Move [X19+24], X8
	044 Move W8, [X20+40]
	045 Move [X19+40], W8
	046 Compare X21, 0
	047 JumpIfEqual {66}
	048 Move X8, [X22+32]
	049 Move X0, X21
	050 Move X1, X20
	051 Move X2, X19
	052 Move X8, [X8+192]
	053 Move X20, [X31+48]
	054 Move X19, [X31+56]
	055 Move X22, [X31+32]
	056 Move X21, [X31+40]
	057 Move X24, [X31+16]
	058 Move X23, [X31+24]
	059 Move X8, [X8+328]
	060 Move X8, [X8+32]
	061 Move X8, [X8+192]
	062 Move X3, [X8+528]
	063 Move X30, [X31+64]
	064 Call 0x2425304, X0, X1, X2
	065 Return 
	066 Move [X23+16], X19
	067 Move X20, [X31+48]
	068 Move X19, [X31+56]
	069 Move X22, [X31+32]
	070 Move X21, [X31+40]
	071 Move X24, [X31+16]
	072 Move X23, [X31+24]
	073 Move X30, [X31+64]
	074 Return 
	075 Call 0x1C17F20

Method: System.Collections.Generic.SortedSet`1/Node<T> FindNode(T item)

Disassembly:
	0x025F9294 BL 0x3EB1B20
	0x025F9298 STP X29, X30, [X31 - 0x30]!
	0x025F929C STP X22, X21, [X31 + 0x10]
	0x025F92A0 STP X20, X19, [X31 + 0x20]
	0x025F92A4 ADD X29, X31, 0x0
	0x025F92A8 SUB X31, X31, 0x20
	0x025F92AC MRS X21, 0xC000
	0x025F92B0 LDR X8, [X21 + 0x28]
	0x025F92B4 ADD X9, X31, 0x0
	0x025F92B8 MOV X19, X0
	0x025F92BC STUR X8, [X29 - 0x8]
	0x025F92C0 STUR X1, [X29 - 0x20]
	0x025F92C4 LDR X22, [X2 + 0x20]
	0x025F92C8 LDR X8, [X22 + 0xC0]
	0x025F92CC LDR X8, [X8 + 0x98]
	0x025F92D0 LDR W2, [X8 + 0xFC]
	0x025F92D4 ADD X10, X2, 0xF
	0x025F92D8 AND X10, X10, 0x1FFFFFFFF
	0x025F92DC SUB X20, X9, X10
	0x025F92E0 ADD X31, X20, 0x0
	0x025F92E4 LDR W8, [X8 + 0x28]
	0x025F92E8 MOV X0, X20
	0x025F92EC CMP W8, 0x0
	0x025F92F0 SUB X8, X29, 0x20
	0x025F92F4 CSEL X1, X1, X8, LT
	0x025F92F8 BL 0x3EB1AC0
	0x025F92FC LDR X8, [X22 + 0xC0]
	0x025F9300 LDR X8, [X8 + 0x98]
	0x025F9304 LDR W8, [X8 + 0x28]
	0x025F9308 TBNZ X8, 0x1F, 0x25F9310
	0x025F930C LDR X20, [X20]
	0x025F9310 LDR X8, [X19]
	0x025F9314 STUR X20, [X29 - 0x18]
	0x025F9318 SUB X3, X29, 0x18
	0x025F931C SUB X4, X29, 0xC
	0x025F9320 LDR X1, [X8 + 0x2D0]
	0x025F9324 MOV X2, X19
	0x025F9328 LDP X0, X8, [X1 + 0x8]
	0x025F932C BLR X8
	0x025F9330 LDURB W8, [X29 - 0xC]
	0x025F9334 LDR X9, [X21 + 0x28]
	0x025F9338 LDUR X10, [X29 - 0x8]
	0x025F933C CMP W8, 0x0
	0x025F9340 CSET W0, NE
	0x025F9344 CMP X9, X10
	0x025F9348 B.NE 0x25F9360
	0x025F934C ADD X31, X29, 0x0
	0x025F9350 LDP X20, X19, [X31 + 0x20]
	0x025F9354 LDP X22, X21, [X31 + 0x10]
	0x025F9358 LDP X29, X30, [X31], #0x30
	0x025F935C RET
	0x025F9360 BL 0x3EB1B20
	0x025F9364 STP X29, X30, [X31 - 0x60]!
	0x025F9368 STP X28, X27, [X31 + 0x10]
	0x025F936C STP X26, X25, [X31 + 0x20]
	0x025F9370 STP X24, X23, [X31 + 0x30]
	0x025F9374 STP X22, X21, [X31 + 0x40]
	0x025F9378 STP X20, X19, [X31 + 0x50]
	0x025F937C ADD X29, X31, 0x0

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X19, [X0+16]
	011 Compare X19, 0
	012 JumpIfEqual {62}
	013 Move X20, X2
	014 Move X21, X0
	015 Move X22, X1
	016 Move W25, 32
	017 Move W26, 24
	018 Move X23, [X21+24]
	019 Compare X23, 0
	020 JumpIfEqual {73}
	021 Move X8, [X20+32]
	022 Move X24, [X19+16]
	023 Move X8, [X8+192]
	024 Move X1, [X8+32]
	025 Move W8, [X1+309]
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {33}
	030 Move X0, X1
	031 Call 0x1C5D684
	032 Move X1, X0
	033 Move X8, [X23]
	034 NotImplemented "Instruction LDRH not yet implemented."
	035 Compare X9, 0
	036 JumpIfEqual {43}
	037 Move X10, [X8+176]
	038 Add X10, X10, 8
	039 NotImplemented "Instruction LDUR not yet implemented."
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Subtract X9, X9, 1
	042 Add X10, X10, 16
	043 Move X0, X23
	044 Move W2, W31
	045 Call 0x1C5D788
	046 NotImplemented "Instruction LDRSW not yet implemented."
	047 Add X8, X8, X9
	048 Add X0, X8, 312
	049 Move X8, [X0]
	050 Move X3, [X0+8]
	051 Move X0, X23
	052 Move X1, X22
	053 Move X2, X24
	054 NotImplemented "Instruction BLR not yet implemented."
	055 Compare W0, 0
	056 JumpIfEqual {62}
	057 NotImplemented "Instruction CMP not yet implemented."
	058 NotImplemented "Instruction CSEL not yet implemented."
	059 Move X19, [X19]
	060 Compare X19, 0
	061 JumpIfNotEqual {18}
	062 Move X0, X19
	063 Move X20, [X31+64]
	064 Move X19, [X31+72]
	065 Move X22, [X31+48]
	066 Move X21, [X31+56]
	067 Move X24, [X31+32]
	068 Move X23, [X31+40]
	069 Move X26, [X31+16]
	070 Move X25, [X31+24]
	071 Move X30, [X31+80]
	072 Return X0
	073 Call 0x1C17F20

Method: System.Void System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context)

Disassembly:
	0x025F9380 SUB X31, X31, 0x50
	0x025F9384 MRS X11, 0xC000
	0x025F9388 LDR X8, [X11 + 0x28]
	0x025F938C MOV X19, X2

ISIL:
	001 Move X8, [X0]
	002 Move X5, [X8+776]
	003 Move X4, [X8+784]
	004 CallNoReturn X5

Method: System.Void GetObjectData(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context)

Disassembly:
	0x025F9390 MOV X12, X0
	0x025F9394 STUR X8, [X29 - 0x8]
	0x025F9398 STUR X1, [X29 - 0x40]
	0x025F939C STUR X1, [X29 - 0x28]
	0x025F93A0 LDR X8, [X19 + 0x20]!
	0x025F93A4 LDR X8, [X8 + 0xC0]
	0x025F93A8 LDR X9, [X8 + 0x98]
	0x025F93AC LDR W10, [X9 + 0xFC]
	0x025F93B0 ADD X9, X31, 0x0
	0x025F93B4 STUR X10, [X29 - 0x48]
	0x025F93B8 ADD X10, X10, 0xF
	0x025F93BC AND X10, X10, 0x1FFFFFFFF
	0x025F93C0 SUB X9, X9, X10
	0x025F93C4 STUR X9, [X29 - 0x30]
	0x025F93C8 ADD X31, X9, 0x0
	0x025F93CC ADD X9, X31, 0x0
	0x025F93D0 SUB X20, X9, X10
	0x025F93D4 ADD X31, X20, 0x0
	0x025F93D8 LDR X0, [X0 + 0x10]
	0x025F93DC CBZ X0, 0x25F981C
	0x025F93E0 LDR W9, [X12 + 0x24]
	0x025F93E4 MOV X23, X31
	0x025F93E8 MOV X26, X31
	0x025F93EC MOV X24, X31
	0x025F93F0 MOV X27, X31
	0x025F93F4 MOV W22, W31
	0x025F93F8 ADD W9, W9, 0x1
	0x025F93FC STUR X11, [X29 - 0x50]
	0x025F9400 STUR X12, [X29 - 0x38]
	0x025F9404 STR W9, [X12 + 0x24]
	0x025F9408 LDR X1, [X8 + 0x120]
	0x025F940C MOV X28, X23
	0x025F9410 MOV X23, X0
	0x025F9414 LDR X8, [X1]
	0x025F9418 BLR X8
	0x025F941C TBZ X0, 0x0, 0x25F9570
	0x025F9420 LDR X8, [X19]
	0x025F9424 LDR X8, [X8 + 0xC0]
	0x025F9428 CBZ X28, 0x25F9490
	0x025F942C LDR X2, [X8 + 0x130]
	0x025F9430 MOV X0, X28
	0x025F9434 MOV X1, X23
	0x025F9438 LDR X8, [X2]
	0x025F943C BLR X8
	0x025F9440 CBZ X0, 0x25F9854
	0x025F9444 LDR X8, [X19]
	0x025F9448 MOV X21, X0
	0x025F944C LDR X8, [X8 + 0xC0]
	0x025F9450 LDR X1, [X8 + 0x110]
	0x025F9454 LDR X8, [X1]
	0x025F9458 BLR X8
	0x025F945C TBZ X0, 0x0, 0x25F953C
	0x025F9460 LDR X8, [X19]
	0x025F9464 MOV X0, X28
	0x025F9468 LDR X8, [X8 + 0xC0]
	0x025F946C LDR X1, [X8 + 0x80]
	0x025F9470 LDR X8, [X1]
	0x025F9474 BLR X8
	0x025F9478 LDR X8, [X19]
	0x025F947C CMP X0, X21
	0x025F9480 LDR X8, [X8 + 0xC0]
	0x025F9484 B.EQ 0x25F94A8
	0x025F9488 LDR X1, [X8 + 0x140]
	0x025F948C B 0x25F94AC
	0x025F9490 LDR X1, [X8 + 0x128]
	0x025F9494 MOV X0, X23
	0x025F9498 LDR X8, [X1]
	0x025F949C BLR X8
	0x025F94A0 TBNZ X22, 0x0, 0x25F9574
	0x025F94A4 B 0x25F9664
	0x025F94A8 LDR X1, [X8 + 0x138]
	0x025F94AC LDR X8, [X1]
	0x025F94B0 MOV X0, X28
	0x025F94B4 BLR X8
	0x025F94B8 LDR X8, [X19]
	0x025F94BC MOV X0, X28
	0x025F94C0 LDR X8, [X8 + 0xC0]
	0x025F94C4 LDR X1, [X8 + 0x128]
	0x025F94C8 LDR X8, [X1]
	0x025F94CC BLR X8
	0x025F94D0 LDR X8, [X19]
	0x025F94D4 MOV X0, X21
	0x025F94D8 LDR X8, [X8 + 0xC0]
	0x025F94DC LDR X1, [X8 + 0xC8]
	0x025F94E0 LDR X8, [X1]
	0x025F94E4 BLR X8
	0x025F94E8 LDR X8, [X19]
	0x025F94EC LDUR X0, [X29 - 0x38]
	0x025F94F0 MOV X1, X26
	0x025F94F4 MOV X2, X28
	0x025F94F8 LDR X8, [X8 + 0xC0]
	0x025F94FC MOV X3, X21
	0x025F9500 LDR X4, [X8 + 0x148]
	0x025F9504 LDR X8, [X4]
	0x025F9508 BLR X8
	0x025F950C LDR X8, [X19]
	0x025F9510 CMP X28, X24
	0x025F9514 MOV X0, X28
	0x025F9518 MOV X1, X23
	0x025F951C LDR X8, [X8 + 0xC0]
	0x025F9520 CSEL X27, X21, X27, EQ
	0x025F9524 LDR X2, [X8 + 0x130]
	0x025F9528 LDR X8, [X2]
	0x025F952C BLR X8
	0x025F9530 CBZ X0, 0x25F9854
	0x025F9534 MOV X26, X21
	0x025F9538 MOV X21, X0
	0x025F953C LDR X8, [X19]
	0x025F9540 MOV X0, X21
	0x025F9544 LDR X8, [X8 + 0xC0]
	0x025F9548 LDR X1, [X8 + 0x120]
	0x025F954C LDR X8, [X1]
	0x025F9550 BLR X8
	0x025F9554 LDR X8, [X19]
	0x025F9558 LDR X8, [X8 + 0xC0]
	0x025F955C TBZ X0, 0x0, 0x25F9594
	0x025F9560 LDR X1, [X8 + 0x150]
	0x025F9564 MOV X0, X28
	0x025F9568 LDR X8, [X1]
	0x025F956C BLR X8
	0x025F9570 TBZ X22, 0x0, 0x25F9664
	0x025F9574 LDR X8, [X19]
	0x025F9578 LDR X8, [X8 + 0xC0]
	0x025F957C LDR X1, [X8 + 0x60]
	0x025F9580 MOV X0, X23
	0x025F9584 LDR X8, [X1]
	0x025F9588 BLR X8
	0x025F958C CBNZ X0, 0x25F97AC
	0x025F9590 B 0x25F97BC
	0x025F9594 LDR X3, [X8 + 0x158]
	0x025F9598 MOV X0, X28
	0x025F959C MOV X1, X23
	0x025F95A0 MOV X2, X21
	0x025F95A4 LDR X8, [X3]
	0x025F95A8 BLR X8
	0x025F95AC LDR X8, [X19]
	0x025F95B0 MOV W1, W0
	0x025F95B4 MOV X0, X28
	0x025F95B8 LDR X8, [X8 + 0xC0]
	0x025F95BC LDR X2, [X8 + 0x160]
	0x025F95C0 LDR X8, [X2]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X22, 0x1DE1000
	011 Move W8, [X22+4050]
	012 Move X19, X4
	013 Move X20, X1
	014 Move X21, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {36}
	019 Move X0, 0x1AFB000
	020 Move X0, [X0+1728]
	021 Call 0x1C17CF4
	022 Move X0, 0x1B25000
	023 Move X0, [X0+704]
	024 Call 0x1C17CF4
	025 Move X0, 0x1B25000
	026 Move X0, [X0+712]
	027 Call 0x1C17CF4
	028 Move X0, 0x1B25000
	029 Move X0, [X0+720]
	030 Call 0x1C17CF4
	031 Move X0, 0x1AFC000
	032 Move X0, [X0+672]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X22+4050], W8
	036 Compare X20, 0
	037 JumpIfEqual {150}
	038 Move X8, 0x1B25000
	039 Move X8, [X8+712]
	040 Move W2, [X21+32]
	041 Move X24, 0x1AFB000
	042 Move X26, 0x1B25000
	043 Move X1, [X8]
	044 Move X25, 0x1AFC000
	045 Move X24, [X24+1728]
	046 Move X26, [X26+720]
	047 Move X25, [X25+672]
	048 Move X0, X20
	049 Move X3, X31
	050 Call SerializationInfo.AddValue, X0, X1, X2
	051 Move X8, [X19+32]
	052 Move X0, [X24]
	053 Move X22, [X21+24]
	054 Move X8, [X8+192]
	055 Move W9, [X0+224]
	056 Move X23, [X8+544]
	057 Compare W9, 0
	058 JumpIfNotEqual {60}
	059 Call 0x1C17DFC
	060 Move X0, X23
	061 Move X1, X31
	062 Call Type.GetTypeFromHandle, X0
	063 Move X1, [X26]
	064 Move X3, X0
	065 Move X0, X20
	066 Move X2, X22
	067 Move X4, X31
	068 Call SerializationInfo.AddValue, X0, X1, X2, X3
	069 Move W2, [X21+36]
	070 Move X1, [X25]
	071 Move X0, X20
	072 Move X3, X31
	073 Call SerializationInfo.AddValue, X0, X1, X2
	074 Move X8, [X21+16]
	075 Compare X8, 0
	076 JumpIfEqual {140}
	077 Move X8, [X21]
	078 Move X0, X21
	079 Move X9, [X8+648]
	080 Move X1, [X8+656]
	081 NotImplemented "Instruction BLR not yet implemented."
	082 Move X8, [X19+32]
	083 Move W22, [X21+32]
	084 Move X8, [X8+192]
	085 Move X0, [X8+552]
	086 Move W8, [X0+309]
	087 Move TEMP, X8
	088 And TEMP, TEMP, 1
	089 Compare TEMP, 1
	090 JumpIfEqual {92}
	091 Call 0x1C5D684
	092 Move X23, 0x1B25000
	093 Move X23, [X23+704]
	094 Move W1, W22
	095 Call 0x1C17D6C
	096 Move X8, [X19+32]
	097 Move X9, [X21]
	098 Move X22, X0
	099 Move X0, X21
	100 Move X8, [X8+192]
	101 Move X10, [X9+648]
	102 Move X1, [X9+656]
	103 Move X25, [X8+464]
	104 NotImplemented "Instruction BLR not yet implemented."
	105 Move X8, [X25+32]
	106 Move W3, [X21+32]
	107 Move X0, X21
	108 Move X1, X22
	109 Move X8, [X8+192]
	110 Move W2, W31
	111 Move X4, [X8+400]
	112 Call 0x25F8948, X0, X1, X2, X3
	113 Move X8, [X19+32]
	114 Move X0, [X24]
	115 Move X8, [X8+192]
	116 Move W9, [X0+224]
	117 Move X19, [X8+560]
	118 Compare W9, 0
	119 JumpIfNotEqual {121}
	120 Call 0x1C17DFC
	121 Move X0, X19
	122 Move X1, X31
	123 Call Type.GetTypeFromHandle, X0
	124 Move X1, [X23]
	125 Move X3, X0
	126 Move X0, X20
	127 Move X2, X22
	128 Move X20, [X31+64]
	129 Move X19, [X31+72]
	130 Move X22, [X31+48]
	131 Move X21, [X31+56]
	132 Move X24, [X31+32]
	133 Move X23, [X31+40]
	134 Move X26, [X31+16]
	135 Move X25, [X31+24]
	136 Move X4, X31
	137 Move X30, [X31+80]
	138 Call SerializationInfo.AddValue, X0, X1, X2, X3
	139 Return 
	140 Move X20, [X31+64]
	141 Move X19, [X31+72]
	142 Move X22, [X31+48]
	143 Move X21, [X31+56]
	144 Move X24, [X31+32]
	145 Move X23, [X31+40]
	146 Move X26, [X31+16]
	147 Move X25, [X31+24]
	148 Move X30, [X31+80]
	149 Return 
	150 Move X0, 0x1B00000
	151 Move X0, [X0+1320]
	152 Call 0x1C17D08
	153 Call 0x1C17F10
	154 Move X20, X0
	155 Move X0, 0x1B25000
	156 Move X0, [X0+728]
	157 Call 0x1C17D08
	158 Move X1, X0
	159 Move X0, X20
	160 Move X2, X31
	161 Call ArgumentNullException..ctor, X0, X1
	162 Move X0, X20
	163 Move X1, X19
	164 Call 0x1C17DEC

Method: System.Void System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System.Object sender)

Disassembly:
	0x025F95C4 BLR X8
	0x025F95C8 LDR X8, [X19]
	0x025F95CC MOV X21, X0
	0x025F95D0 MOV X0, X28

ISIL:
	001 Move X8, [X0]
	002 Move X3, [X8+792]
	003 Move X2, [X8+800]
	004 CallNoReturn X3

Method: System.Void OnDeserialization(System.Object sender)

Disassembly:
	0x025F95D4 LDR X8, [X8 + 0xC0]
	0x025F95D8 LDR X1, [X8 + 0x168]
	0x025F95DC LDR X8, [X1]
	0x025F95E0 BLR X8
	0x025F95E4 CBZ X21, 0x25F9854
	0x025F95E8 LDR X8, [X19]
	0x025F95EC MOV W1, W0
	0x025F95F0 MOV X0, X21
	0x025F95F4 LDR X8, [X8 + 0xC0]
	0x025F95F8 LDR X2, [X8 + 0x170]
	0x025F95FC LDR X8, [X2]
	0x025F9600 BLR X8
	0x025F9604 LDR X8, [X19]
	0x025F9608 MOV X0, X28
	0x025F960C LDR X8, [X8 + 0xC0]
	0x025F9610 LDR X1, [X8 + 0xC8]
	0x025F9614 LDR X8, [X1]
	0x025F9618 BLR X8
	0x025F961C LDR X8, [X19]
	0x025F9620 MOV X0, X23
	0x025F9624 LDR X8, [X8 + 0xC0]
	0x025F9628 LDR X1, [X8 + 0x128]
	0x025F962C LDR X8, [X1]
	0x025F9630 BLR X8
	0x025F9634 LDR X8, [X19]
	0x025F9638 LDUR X0, [X29 - 0x38]
	0x025F963C MOV X1, X26
	0x025F9640 MOV X2, X28
	0x025F9644 LDR X8, [X8 + 0xC0]
	0x025F9648 MOV X3, X21
	0x025F964C LDR X4, [X8 + 0x148]
	0x025F9650 LDR X8, [X4]
	0x025F9654 BLR X8
	0x025F9658 CMP X28, X24
	0x025F965C CSEL X27, X21, X27, EQ
	0x025F9660 TBNZ X22, 0x0, 0x25F9574
	0x025F9664 LDR X25, [X19]
	0x025F9668 LDP X9, X0, [X29 - 0x38]
	0x025F966C LDR X8, [X25 + 0xC0]
	0x025F9670 LDR X21, [X9 + 0x18]
	0x025F9674 SUB X9, X29, 0x28
	0x025F9678 LDR X8, [X8 + 0x98]
	0x025F967C LDR W8, [X8 + 0x28]
	0x025F9680 CMP W8, 0x0
	0x025F9684 LDP X2, X8, [X29 - 0x48]
	0x025F9688 CSEL X1, X8, X9, LT
	0x025F968C BL 0x3EB1AC0
	0x025F9690 LDR X8, [X25 + 0xC0]
	0x025F9694 SUB X3, X29, 0x20
	0x025F9698 MOV X2, X23
	0x025F969C MOV X4, X20
	0x025F96A0 LDR X1, [X8 + 0xB8]
	0x025F96A4 LDR X0, [X1]
	0x025F96A8 STUR X20, [X29 - 0x20]
	0x025F96AC LDR X8, [X1 + 0x10]
	0x025F96B0 BLR X8
	0x025F96B4 CBZ X21, 0x25F9854
	0x025F96B8 LDR X8, [X19]
	0x025F96BC LDR X8, [X8 + 0xC0]
	0x025F96C0 LDR X1, [X8 + 0x20]
	0x025F96C4 LDRB W9, [X1 + 0x135]
	0x025F96C8 TBNZ X9, 0x0, 0x25F96E0
	0x025F96CC MOV X0, X1
	0x025F96D0 BL 0x1C5C684
	0x025F96D4 LDR X8, [X19]
	0x025F96D8 MOV X1, X0
	0x025F96DC LDR X8, [X8 + 0xC0]
	0x025F96E0 LDR X8, [X8 + 0x98]
	0x025F96E4 LDUR X9, [X29 - 0x30]
	0x025F96E8 MOV X25, X20
	0x025F96EC LDR W8, [X8 + 0x28]
	0x025F96F0 MOV X26, X9
	0x025F96F4 TBNZ X8, 0x1F, 0x25F9700
	0x025F96F8 LDR X26, [X9]
	0x025F96FC LDR X25, [X20]
	0x025F9700 LDR X8, [X21]
	0x025F9704 LDRH W9, [X8 + 0x12E]
	0x025F9708 CBZ X9, 0x25F972C
	0x025F970C LDR X10, [X8 + 0xB0]
	0x025F9710 ADD X10, X10, 0x8
	0x025F9714 LDUR X11, [X10 - 0x8]
	0x025F9718 CMP X11, X1
	0x025F971C B.EQ 0x25F973C
	0x025F9720 SUBS X9, X9, 0x1
	0x025F9724 ADD X10, X10, 0x10
	0x025F9728 B.NE 0x25F9714
	0x025F972C MOV X0, X21
	0x025F9730 MOV W2, W31
	0x025F9734 BL 0x1C5C788
	0x025F9738 B 0x25F9748
	0x025F973C LDRSW X9, [X10]
	0x025F9740 ADD X8, X8, X9, 0x4, LSL
	0x025F9744 ADD X0, X8, 0x138
	0x025F9748 STP X26, X25, [X29 - 0x20]
	0x025F974C LDR X1, [X0 + 0x8]
	0x025F9750 SUB X3, X29, 0x20
	0x025F9754 SUB X4, X29, 0xC
	0x025F9758 MOV X2, X21
	0x025F975C LDP X0, X8, [X1 + 0x8]
	0x025F9760 BLR X8
	0x025F9764 LDUR W9, [X29 - 0xC]
	0x025F9768 CMP W9, 0x0
	0x025F976C CSET W21, EQ
	0x025F9770 CBZ W9, 0x25F9784
	0x025F9774 LDR X8, [X19]
	0x025F9778 LDR X8, [X8 + 0xC0]
	0x025F977C TBZ X9, 0x1F, 0x25F9794
	0x025F9780 B 0x25F957C
	0x025F9784 LDR X8, [X19]
	0x025F9788 MOV X24, X23
	0x025F978C MOV X27, X28
	0x025F9790 LDR X8, [X8 + 0xC0]
	0x025F9794 LDR X1, [X8 + 0x80]
	0x025F9798 MOV X0, X23
	0x025F979C LDR X8, [X1]
	0x025F97A0 BLR X8
	0x025F97A4 MOV W22, W21
	0x025F97A8 CBZ X0, 0x25F97BC
	0x025F97AC LDR X8, [X19]
	0x025F97B0 MOV X26, X28
	0x025F97B4 LDR X8, [X8 + 0xC0]
	0x025F97B8 B 0x25F9408
	0x025F97BC LDUR X20, [X29 - 0x38]
	0x025F97C0 CBZ X24, 0x25F97F8
	0x025F97C4 LDR X8, [X19]
	0x025F97C8 MOV X0, X20
	0x025F97CC MOV X1, X24
	0x025F97D0 MOV X2, X27
	0x025F97D4 LDR X8, [X8 + 0xC0]
	0x025F97D8 MOV X3, X23
	0x025F97DC MOV X4, X28
	0x025F97E0 LDR X5, [X8 + 0x178]
	0x025F97E4 LDR X8, [X5]
	0x025F97E8 BLR X8
	0x025F97EC LDR W8, [X20 + 0x20]
	0x025F97F0 SUB W8, W8, 0x1
	0x025F97F4 STR W8, [X20 + 0x20]
	0x025F97F8 LDR X0, [X20 + 0x10]
	0x025F97FC CBZ X0, 0x25F9814
	0x025F9800 LDR X8, [X19]
	0x025F9804 LDR X8, [X8 + 0xC0]
	0x025F9808 LDR X1, [X8 + 0xC8]
	0x025F980C LDR X8, [X1]
	0x025F9810 BLR X8
	0x025F9814 LDUR X11, [X29 - 0x50]
	0x025F9818 B 0x25F9820
	0x025F981C MOV W22, W31
	0x025F9820 LDR X8, [X11 + 0x28]
	0x025F9824 LDUR X9, [X29 - 0x8]
	0x025F9828 CMP X8, X9
	0x025F982C B.NE 0x25F9858
	0x025F9830 AND W0, W22, 0x1
	0x025F9834 ADD X31, X29, 0x0
	0x025F9838 LDP X20, X19, [X31 + 0x50]
	0x025F983C LDP X22, X21, [X31 + 0x40]
	0x025F9840 LDP X24, X23, [X31 + 0x30]
	0x025F9844 LDP X26, X25, [X31 + 0x20]
	0x025F9848 LDP X28, X27, [X31 + 0x10]
	0x025F984C LDP X29, X30, [X31], #0x60
	0x025F9850 RET
	0x025F9854 BL 0x1C16F20
	0x025F9858 BL 0x3EB1B20
	0x025F985C LDR W8, [X0 + 0x24]
	0x025F9860 STR X31, [X0 + 0x10]
	0x025F9864 ADD W8, W8, 0x1
	0x025F9868 STP W31, W8, [X0 + 0x20]
	0x025F986C RET
	0x025F9870 STP X29, X30, [X31 - 0x30]!
	0x025F9874 STP X22, X21, [X31 + 0x10]
	0x025F9878 STP X20, X19, [X31 + 0x20]
	0x025F987C ADD X29, X31, 0x0
	0x025F9880 SUB X31, X31, 0x20
	0x025F9884 MRS X21, 0xC000
	0x025F9888 LDR X8, [X21 + 0x28]
	0x025F988C ADD X9, X31, 0x0
	0x025F9890 MOV X19, X0
	0x025F9894 STUR X8, [X29 - 0x8]
	0x025F9898 STUR X1, [X29 - 0x20]
	0x025F989C LDR X22, [X2 + 0x20]
	0x025F98A0 LDR X8, [X22 + 0xC0]
	0x025F98A4 LDR X8, [X8 + 0x98]
	0x025F98A8 LDR W2, [X8 + 0xFC]
	0x025F98AC ADD X10, X2, 0xF
	0x025F98B0 AND X10, X10, 0x1FFFFFFFF
	0x025F98B4 SUB X20, X9, X10
	0x025F98B8 ADD X31, X20, 0x0
	0x025F98BC LDR W8, [X8 + 0x28]
	0x025F98C0 MOV X0, X20
	0x025F98C4 CMP W8, 0x0
	0x025F98C8 SUB X8, X29, 0x20
	0x025F98CC CSEL X1, X1, X8, LT
	0x025F98D0 BL 0x3EB1AC0
	0x025F98D4 LDR X8, [X22 + 0xC0]
	0x025F98D8 LDR X8, [X8 + 0x98]
	0x025F98DC LDR W8, [X8 + 0x28]
	0x025F98E0 TBNZ X8, 0x1F, 0x25F98E8

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x1DE1000
	009 Move W8, [X21+4051]
	010 Move X19, X2
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {33}
	016 Move X0, 0x1AFB000
	017 Move X0, [X0+1728]
	018 Call 0x1C17CF4
	019 Move X0, 0x1B25000
	020 Move X0, [X0+704]
	021 Call 0x1C17CF4
	022 Move X0, 0x1B25000
	023 Move X0, [X0+712]
	024 Call 0x1C17CF4
	025 Move X0, 0x1B25000
	026 Move X0, [X0+720]
	027 Call 0x1C17CF4
	028 Move X0, 0x1AFC000
	029 Move X0, [X0+672]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X21+4051], W8
	033 Move X8, [X20+24]
	034 Compare X8, 0
	035 JumpIfNotEqual {177}
	036 Move X21, [X20+48]
	037 Compare X21, 0
	038 JumpIfEqual {190}
	039 Move X23, 0x1AFB000
	040 Move X8, [X19+32]
	041 Move X23, [X23+1728]
	042 Move X8, [X8+192]
	043 Move X0, [X23]
	044 Move X22, [X8+544]
	045 Move W9, [X0+224]
	046 Compare W9, 0
	047 JumpIfNotEqual {49}
	048 Call 0x1C17DFC
	049 Move X0, X22
	050 Move X1, X31
	051 Call Type.GetTypeFromHandle, X0
	052 Move X8, 0x1B25000
	053 Move X8, [X8+720]
	054 Move X2, X0
	055 Move X0, X21
	056 Move X3, X31
	057 Move X1, [X8]
	058 Call SerializationInfo.GetValue, X0, X1, X2
	059 Move X8, [X19+32]
	060 Move X21, X0
	061 Move X8, [X8+192]
	062 Move X22, [X8+32]
	063 Move W8, [X22+309]
	064 Move TEMP, X8
	065 And TEMP, TEMP, 1
	066 Compare TEMP, 1
	067 JumpIfEqual {71}
	068 Move X0, X22
	069 Call 0x1C5D684
	070 Move X22, X0
	071 Compare X21, 0
	072 JumpIfEqual {78}
	073 Move X0, X21
	074 Move X1, X22
	075 Call 0x1C17E00
	076 Compare X0, 0
	077 JumpIfNotEqual {79}
	078 Move X0, X31
	079 Move [X20+24], X0
	080 Move X8, [X19+32]
	081 Move X8, [X8+192]
	082 Move X22, [X8+32]
	083 Move W8, [X22+309]
	084 Move TEMP, X8
	085 And TEMP, TEMP, 1
	086 Compare TEMP, 1
	087 JumpIfEqual {91}
	088 Move X0, X22
	089 Call 0x1C5D684
	090 Move X22, X0
	091 Compare X21, 0
	092 JumpIfEqual {98}
	093 Move X0, X21
	094 Move X1, X22
	095 Call 0x1C17E00
	096 Compare X0, 0
	097 JumpIfEqual {187}
	098 Move X0, [X20+48]
	099 Compare X0, 0
	100 JumpIfEqual {186}
	101 Move X8, 0x1B25000
	102 Move X8, [X8+712]
	103 Move X2, X31
	104 Move X1, [X8]
	105 Call SerializationInfo.GetInt32, X0, X1
	106 Move W21, W0
	107 Compare W0, 0
	108 JumpIfEqual {165}
	109 Move X8, [X19+32]
	110 Move X0, [X23]
	111 Move X22, [X20+48]
	112 Move X8, [X8+192]
	113 Move W9, [X0+224]
	114 Move X23, [X8+560]
	115 Compare W9, 0
	116 JumpIfNotEqual {118}
	117 Call 0x1C17DFC
	118 Move X0, X23
	119 Move X1, X31
	120 Call Type.GetTypeFromHandle, X0
	121 Compare X22, 0
	122 JumpIfEqual {186}
	123 Move X8, 0x1B25000
	124 Move X8, [X8+704]
	125 Move X2, X0
	126 Move X0, X22
	127 Move X3, X31
	128 Move X1, [X8]
	129 Call SerializationInfo.GetValue, X0, X1, X2
	130 Move X8, [X19+32]
	131 Move X24, X0
	132 Move X8, [X8+192]
	133 Move X23, [X8+392]
	134 Move W8, [X23+309]
	135 Move TEMP, X8
	136 And TEMP, TEMP, 1
	137 Compare TEMP, 1
	138 JumpIfEqual {142}
	139 Move X0, X23
	140 Call 0x1C5D684
	141 Move X23, X0
	142 Compare X24, 0
	143 JumpIfEqual {204}
	144 Move X0, X24
	145 Move X1, X23
	146 Call 0x1C17E00
	147 Compare X0, 0
	148 JumpIfEqual {219}
	149 Move X8, [X0+24]
	150 Move X22, X0
	151 NotImplemented "Instruction CMP not yet implemented."
	152 Move X23, X31
	153 And X8, X8, 0
	154 Add X24, X22, 32
	155 NotImplemented "Instruction CMP not yet implemented."
	156 Move X8, [X20]
	157 Move X1, [X24]
	158 Move X0, X20
	159 Move X9, [X8+696]
	160 Move X2, [X8+704]
	161 NotImplemented "Instruction BLR not yet implemented."
	162 Move W8, [X22+24]
	163 Add X23, X23, 1
	164 NotImplemented "Instruction CMP not yet implemented."
	165 Move X0, [X20+48]
	166 Compare X0, 0
	167 JumpIfEqual {186}
	168 Move X8, 0x1AFC000
	169 Move X8, [X8+672]
	170 Move X2, X31
	171 Move X1, [X8]
	172 Call SerializationInfo.GetInt32, X0, X1
	173 Move W8, [X20+32]
	174 Move [X20+36], W0
	175 NotImplemented "Instruction CMP not yet implemented."
	176 Move [X20+48], X31
	177 Move X20, [X31+48]
	178 Move X19, [X31+56]
	179 Move X22, [X31+32]
	180 Move X21, [X31+40]
	181 Move X24, [X31+16]
	182 Move X23, [X31+24]
	183 Move X30, [X31+64]
	184 Return 
	185 Call 0x1C17F28
	186 Call 0x1C17F20
	187 Move X0, X21
	188 Move X1, X22
	189 Call 0x1C181E0
	190 Move X0, 0x1B25000
	191 Move X0, [X0+736]
	192 Call 0x1C17D08
	193 Call 0x1C17F10
	194 Move X20, X0
	195 Move X0, 0x1B25000
	196 Move X0, [X0+744]
	197 Move X0, 0x1B25000
	198 Move X0, [X0+736]
	199 Call 0x1C17D08
	200 Call 0x1C17F10
	201 Move X20, X0
	202 Move X0, 0x1B25000
	203 Move X0, [X0+752]
	204 Move X0, 0x1B25000
	205 Move X0, [X0+736]
	206 Call 0x1C17D08
	207 Call 0x1C17F10
	208 Move X20, X0
	209 Move X0, 0x1B25000
	210 Move X0, [X0+760]
	211 Call 0x1C17D08
	212 Move X1, X0
	213 Move X0, X20
	214 Move X2, X31
	215 Call SerializationException..ctor, X0, X1
	216 Move X0, X20
	217 Move X1, X19
	218 Call 0x1C17DEC
	219 Move X0, X24
	220 Move X1, X23
	221 Call 0x1C181E0

Method: System.Int32 Log2(System.Int32 value)

Disassembly:
	0x025F98E4 LDR X20, [X20]
	0x025F98E8 LDR X8, [X19]
	0x025F98EC STUR X20, [X29 - 0x18]
	0x025F98F0 SUB X3, X29, 0x18
	0x025F98F4 SUB X4, X29, 0x10
	0x025F98F8 LDR X1, [X8 + 0x300]
	0x025F98FC MOV X2, X19
	0x025F9900 LDP X0, X8, [X1 + 0x8]
	0x025F9904 BLR X8
	0x025F9908 LDUR X8, [X29 - 0x10]

ISIL:
	001 NotImplemented "Instruction CMP not yet implemented."
	002 Move W8, W31
	003 Move W0, W0
	004 ShiftRight W0, 1
	005 And W0, W0, 0x7FFFFFFF
	006 Add W8, W8, 1
	007 Compare W0, 0
	008 JumpIfNotEqual {3}
	009 Move W8, W31
	010 Move W0, W8
	011 Return X0

