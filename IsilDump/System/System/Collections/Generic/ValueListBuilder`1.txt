Type: System.Collections.Generic.ValueListBuilder`1

Method: System.Void .ctor(System.Span`1<T> initialSpan)

Disassembly:
	0x0278E208 LDRB W8, [X0 + 0x135]
	0x0278E20C TBNZ X8, 0x0, 0x278E214
	0x0278E210 BL 0x1C5C684
	0x0278E214 LDR X8, [X0 + 0xC0]

ISIL:
	001 Move [X0], X1
	002 Move [X0+8], X2
	003 Move [X0+16], X31
	004 Move [X0+24], W31
	005 Return 

Method: System.Int32 get_Length()

Disassembly:
	0x0278E218 LDR X0, [X8 + 0x70]
	0x0278E21C LDRB W8, [X0 + 0x135]

ISIL:
	001 Move W0, [X0+24]
	002 Return X0

Method: T get_Item(System.Int32 index)

Disassembly:
	0x0278E220 TBNZ X8, 0x0, 0x278E228
	0x0278E224 BL 0x1C5C684
	0x0278E228 LDR W8, [X0 + 0xE0]
	0x0278E22C CBNZ W8, 0x278E234
	0x0278E230 BL 0x1C16DFC
	0x0278E234 LDR X8, [X19 + 0x20]
	0x0278E238 ADD X9, X8, 0x135
	0x0278E23C LDRH W9, [X9]
	0x0278E240 TBNZ X9, 0x0, 0x278E270

ISIL:
	001 Move [X31-16], X30
	002 Move W8, [X0+8]
	003 NotImplemented "Instruction CMP not yet implemented."
	004 Move X8, [X0]
	005 Add X0, X8, W1
	006 Move X30, [X31+16]
	007 Return X0
	008 Call 0x1C17F28

Method: System.Void Append(T item)

Disassembly:
	0x0278E244 MOV X0, X8
	0x0278E248 BL 0x1C5C684
	0x0278E24C LDR X8, [X19 + 0x20]
	0x0278E250 ADD X9, X8, 0x135
	0x0278E254 LDRH W9, [X9]
	0x0278E258 B 0x278E274
	0x0278E25C LDP X20, X19, [X31 + 0x30]
	0x0278E260 LDP X22, X21, [X31 + 0x20]
	0x0278E264 LDP X24, X23, [X31 + 0x10]
	0x0278E268 LDR X30, [X31], #0x40
	0x0278E26C RET
	0x0278E270 MOV X0, X8
	0x0278E274 LDR X10, [X0 + 0xC0]
	0x0278E278 LDR X10, [X10 + 0x68]
	0x0278E27C LDR X19, [X10]
	0x0278E280 TBNZ X9, 0x0, 0x278E290
	0x0278E284 MOV X0, X8
	0x0278E288 BL 0x1C5C684
	0x0278E28C MOV X8, X0
	0x0278E290 LDR X8, [X8 + 0xC0]
	0x0278E294 LDR X0, [X8 + 0x68]
	0x0278E298 BLR X19
	0x0278E29C CBZ X0, 0x278E2C4
	0x0278E2A0 LDR X8, [X0]
	0x0278E2A4 MOV X1, X21
	0x0278E2A8 LDP X20, X19, [X31 + 0x30]
	0x0278E2AC LDP X22, X21, [X31 + 0x20]
	0x0278E2B0 LDP X4, X3, [X8 + 0x188]
	0x0278E2B4 LDP X24, X23, [X31 + 0x10]
	0x0278E2B8 MOV W2, W31
	0x0278E2BC LDR X30, [X31], #0x40
	0x0278E2C0 BR X4
	0x0278E2C4 BL 0x1C16F20
	0x0278E2C8 STP X29, X30, [X31 - 0x50]!

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, X0
	007 Move X0, [X2+32]
	008 NotImplemented "Instruction LDRSW not yet implemented."
	009 Move X21, X2
	010 Move W20, W1
	011 Move W8, [X0+309]
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {17}
	016 Call 0x1C5D684
	017 Move W8, [X19+8]
	018 NotImplemented "Instruction CMP not yet implemented."
	019 Move X0, [X21+32]
	020 Move W8, [X0+309]
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {26}
	025 Call 0x1C5D684
	026 Move X8, [X0+192]
	027 Move X0, X19
	028 Move X1, [X8+56]
	029 Call 0x278E43C, X0
	030 Move W8, [X19+8]
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move X8, [X19]
	033 Add W9, W22, 1
	034 Move [X8], W20
	035 Move [X19+24], W9
	036 Move X20, [X31+32]
	037 Move X19, [X31+40]
	038 Move X22, [X31+16]
	039 Move X21, [X31+24]
	040 Move X30, [X31+48]
	041 Return 
	042 Call 0x1C17F28

Method: System.ReadOnlySpan`1<T> AsSpan()

Disassembly:
	0x0278E2CC STR X25, [X31 + 0x10]
	0x0278E2D0 STP X24, X23, [X31 + 0x20]
	0x0278E2D4 STP X22, X21, [X31 + 0x30]
	0x0278E2D8 STP X20, X19, [X31 + 0x40]
	0x0278E2DC ADD X29, X31, 0x0
	0x0278E2E0 SUB X31, X31, 0x10
	0x0278E2E4 MRS X25, 0xC000
	0x0278E2E8 LDR X8, [X25 + 0x28]
	0x0278E2EC MOV X24, X2
	0x0278E2F0 MOV X19, X1
	0x0278E2F4 MOV X20, X0
	0x0278E2F8 STUR X8, [X29 - 0x8]
	0x0278E2FC LDR X8, [X2 + 0x20]
	0x0278E300 LDRB W9, [X8 + 0x135]
	0x0278E304 TBNZ X9, 0x0, 0x278E318
	0x0278E308 MOV X0, X8
	0x0278E30C BL 0x1C5C684
	0x0278E310 LDR X8, [X24 + 0x20]
	0x0278E314 B 0x278E31C
	0x0278E318 MOV X0, X8
	0x0278E31C LDR X9, [X0 + 0xC0]
	0x0278E320 LDR X9, [X9 + 0x48]
	0x0278E324 LDR W21, [X9 + 0xFC]
	0x0278E328 ADD X9, X31, 0x0
	0x0278E32C ADD X10, X21, 0xF
	0x0278E330 AND X10, X10, 0x1FFFFFFFF
	0x0278E334 SUB X22, X9, X10
	0x0278E338 ADD X31, X22, 0x0
	0x0278E33C LDR W9, [X20 + 0x18]
	0x0278E340 SUB W23, W9, 0x1
	0x0278E344 STR W23, [X20 + 0x18]
	0x0278E348 ADD X9, X8, 0x135
	0x0278E34C LDRH W9, [X9]
	0x0278E350 TBNZ X9, 0x0, 0x278E36C

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, X0
	007 Move X0, [X1+32]
	008 Move W19, [X21+24]
	009 Move X20, X1
	010 Move W8, [X0+309]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {16}
	015 Call 0x1C5D684
	016 Move X8, [X0+192]
	017 Move W9, [X21+8]
	018 Move X22, [X8+80]
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Move X0, X31
	021 Call ThrowHelper.ThrowArgumentOutOfRangeException
	022 Move X0, [X22+32]
	023 Move X21, [X21]
	024 Move W8, [X0+309]
	025 Move TEMP, X8
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {30}
	029 Call 0x1C5D684
	030 Move X0, [X20+32]
	031 Move W8, [X0+309]
	032 Move TEMP, X8
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfEqual {37}
	036 Call 0x1C5D684
	037 Move X8, [X0+192]
	038 Move X0, X21
	039 Move X1, X19
	040 Move X20, [X31+32]
	041 Move X19, [X31+40]
	042 Move X2, [X8+88]
	043 Move X22, [X31+16]
	044 Move X21, [X31+24]
	045 Move X30, [X31+48]
	046 Call Span`1<Int32>.op_Implicit, X0
	047 Return X0

Method: System.Void Dispose()

Disassembly:
	0x0278E354 MOV X0, X8
	0x0278E358 BL 0x1C5C684
	0x0278E35C LDR X8, [X24 + 0x20]
	0x0278E360 ADD X9, X8, 0x135
	0x0278E364 LDRH W9, [X9]
	0x0278E368 B 0x278E370
	0x0278E36C MOV X0, X8
	0x0278E370 LDR X10, [X0 + 0xC0]
	0x0278E374 LDR X10, [X10 + 0x18]
	0x0278E378 LDR X24, [X10]
	0x0278E37C TBNZ X9, 0x0, 0x278E38C
	0x0278E380 MOV X0, X8
	0x0278E384 BL 0x1C5C684
	0x0278E388 MOV X8, X0
	0x0278E38C LDR X8, [X8 + 0xC0]
	0x0278E390 MOV X0, X20
	0x0278E394 MOV W1, W23
	0x0278E398 LDR X2, [X8 + 0x18]
	0x0278E39C BLR X24
	0x0278E3A0 MOV X1, X0
	0x0278E3A4 MOV X0, X22
	0x0278E3A8 MOV X2, X21
	0x0278E3AC BL 0x3EB1AC0
	0x0278E3B0 MOV X0, X19
	0x0278E3B4 MOV X1, X22
	0x0278E3B8 MOV X2, X21
	0x0278E3BC BL 0x3EB1AC0
	0x0278E3C0 LDR X8, [X25 + 0x28]
	0x0278E3C4 LDUR X9, [X29 - 0x8]
	0x0278E3C8 CMP X8, X9
	0x0278E3CC B.NE 0x278E3EC
	0x0278E3D0 ADD X31, X29, 0x0
	0x0278E3D4 LDP X20, X19, [X31 + 0x40]
	0x0278E3D8 LDP X22, X21, [X31 + 0x30]
	0x0278E3DC LDP X24, X23, [X31 + 0x20]
	0x0278E3E0 LDR X25, [X31 + 0x10]
	0x0278E3E4 LDP X29, X30, [X31], #0x50
	0x0278E3E8 RET
	0x0278E3EC BL 0x3EB1B20
	0x0278E3F0 STP X1, X2, [X0]
	0x0278E3F4 STR X31, [X0 + 0x10]
	0x0278E3F8 STR W31, [X0 + 0x18]
	0x0278E3FC RET
	0x0278E400 LDR W0, [X0 + 0x18]
	0x0278E404 RET
	0x0278E408 STP X29, X30, [X31 - 0x50]!
	0x0278E40C STP X26, X25, [X31 + 0x10]
	0x0278E410 STP X24, X23, [X31 + 0x20]
	0x0278E414 STP X22, X21, [X31 + 0x30]
	0x0278E418 STP X20, X19, [X31 + 0x40]
	0x0278E41C ADD X29, X31, 0x0
	0x0278E420 SUB X31, X31, 0x10
	0x0278E424 MRS X26, 0xC000
	0x0278E428 LDR X8, [X26 + 0x28]
	0x0278E42C MOV X20, X2
	0x0278E430 MOV X21, X1
	0x0278E434 MOV X19, X0
	0x0278E438 STUR X8, [X29 - 0x8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X0+16]
	005 Compare X8, 0
	006 JumpIfEqual {82}
	007 Move X19, X0
	008 Move X0, [X1+32]
	009 Move X20, X1
	010 Move W8, [X0+309]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {16}
	015 Call 0x1C5D684
	016 Move X8, [X0+192]
	017 Move X0, [X8+112]
	018 Move W8, [X0+309]
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {24}
	023 Call 0x1C5D684
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Move X0, [X20+32]
	029 Move W8, [X0+309]
	030 Move TEMP, X8
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfEqual {35}
	034 Call 0x1C5D684
	035 Move X8, [X0+192]
	036 Move X20, [X8+104]
	037 Move X0, [X20+32]
	038 Move W8, [X0+309]
	039 Move TEMP, X8
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfEqual {44}
	043 Call 0x1C5D684
	044 Move X8, [X0+192]
	045 Move X0, [X8+8]
	046 Move W8, [X0+309]
	047 Move TEMP, X8
	048 And TEMP, TEMP, 1
	049 Compare TEMP, 1
	050 JumpIfEqual {52}
	051 Call 0x1C5D684
	052 Move W8, [X0+224]
	053 Compare W8, 0
	054 JumpIfNotEqual {56}
	055 Call 0x1C17DFC
	056 Move X0, [X20+32]
	057 Move W8, [X0+309]
	058 Move TEMP, X8
	059 And TEMP, TEMP, 1
	060 Compare TEMP, 1
	061 JumpIfEqual {63}
	062 Call 0x1C5D684
	063 Move X8, [X0+192]
	064 Move X0, [X8+8]
	065 Move W8, [X0+309]
	066 Move TEMP, X8
	067 And TEMP, TEMP, 1
	068 Compare TEMP, 1
	069 JumpIfEqual {71}
	070 Call 0x1C5D684
	071 Move X8, [X0+184]
	072 Move X0, [X8]
	073 Compare X0, 0
	074 JumpIfEqual {86}
	075 Move X8, [X0]
	076 Move X1, [X19+16]
	077 Move W2, W31
	078 Move X9, [X8+392]
	079 Move X3, [X8+400]
	080 NotImplemented "Instruction BLR not yet implemented."
	081 Move [X19+16], X31
	082 Move X20, [X31+16]
	083 Move X19, [X31+24]
	084 Move X30, [X31+32]
	085 Return 
	086 Call 0x1C17F20

Method: System.Void Grow()

Disassembly:
	0x0278E43C STUR X1, [X29 - 0x10]
	0x0278E440 LDR X8, [X2 + 0x20]
	0x0278E444 ADD X9, X8, 0x135
	0x0278E448 LDRH W9, [X9]
	0x0278E44C TBNZ X9, 0x0, 0x278E468
	0x0278E450 MOV X0, X8
	0x0278E454 BL 0x1C5C684
	0x0278E458 LDR X8, [X20 + 0x20]
	0x0278E45C ADD X9, X8, 0x135
	0x0278E460 LDRH W9, [X9]
	0x0278E464 B 0x278E46C
	0x0278E468 MOV X0, X8
	0x0278E46C LDR X10, [X0 + 0xC0]
	0x0278E470 LDR X10, [X10 + 0x48]
	0x0278E474 LDR W23, [X10 + 0xFC]
	0x0278E478 ADD X10, X31, 0x0
	0x0278E47C ADD X11, X23, 0xF
	0x0278E480 AND X11, X11, 0x1FFFFFFFF
	0x0278E484 SUB X24, X10, X11
	0x0278E488 ADD X31, X24, 0x0
	0x0278E48C LDR W22, [X19 + 0x18]
	0x0278E490 TBNZ X9, 0x0, 0x278E4AC
	0x0278E494 MOV X0, X8
	0x0278E498 BL 0x1C5C684
	0x0278E49C LDR X8, [X20 + 0x20]
	0x0278E4A0 ADD X9, X8, 0x135
	0x0278E4A4 LDRH W9, [X9]
	0x0278E4A8 B 0x278E4B0
	0x0278E4AC MOV X0, X8
	0x0278E4B0 LDR X10, [X0 + 0xC0]
	0x0278E4B4 LDR X10, [X10 + 0x18]
	0x0278E4B8 LDR X25, [X10]
	0x0278E4BC TBNZ X9, 0x0, 0x278E4CC
	0x0278E4C0 MOV X0, X8
	0x0278E4C4 BL 0x1C5C684
	0x0278E4C8 MOV X8, X0
	0x0278E4CC LDR X8, [X8 + 0xC0]
	0x0278E4D0 MOV X0, X19
	0x0278E4D4 LDR X1, [X8 + 0x18]
	0x0278E4D8 BLR X25
	0x0278E4DC CMP W22, W0
	0x0278E4E0 B.LT 0x278E53C
	0x0278E4E4 LDR X8, [X20 + 0x20]
	0x0278E4E8 ADD X9, X8, 0x135
	0x0278E4EC LDRH W9, [X9]
	0x0278E4F0 TBNZ X9, 0x0, 0x278E50C
	0x0278E4F4 MOV X0, X8
	0x0278E4F8 BL 0x1C5C684
	0x0278E4FC LDR X8, [X20 + 0x20]
	0x0278E500 ADD X9, X8, 0x135
	0x0278E504 LDRH W9, [X9]
	0x0278E508 B 0x278E510
	0x0278E50C MOV X0, X8
	0x0278E510 LDR X10, [X0 + 0xC0]
	0x0278E514 LDR X10, [X10 + 0x28]
	0x0278E518 LDR X25, [X10]
	0x0278E51C TBNZ X9, 0x0, 0x278E52C
	0x0278E520 MOV X0, X8
	0x0278E524 BL 0x1C5C684
	0x0278E528 MOV X8, X0
	0x0278E52C LDR X8, [X8 + 0xC0]
	0x0278E530 MOV X0, X19
	0x0278E534 LDR X1, [X8 + 0x28]
	0x0278E538 BLR X25
	0x0278E53C LDR X8, [X20 + 0x20]
	0x0278E540 ADD X9, X8, 0x135
	0x0278E544 LDRH W9, [X9]
	0x0278E548 TBNZ X9, 0x0, 0x278E564
	0x0278E54C MOV X0, X8
	0x0278E550 BL 0x1C5C684
	0x0278E554 LDR X8, [X20 + 0x20]
	0x0278E558 ADD X9, X8, 0x135
	0x0278E55C LDRH W9, [X9]
	0x0278E560 B 0x278E568
	0x0278E564 MOV X0, X8
	0x0278E568 LDR X10, [X0 + 0xC0]
	0x0278E56C LDR X10, [X10 + 0x38]
	0x0278E570 LDR X25, [X10]
	0x0278E574 TBNZ X9, 0x0, 0x278E584
	0x0278E578 MOV X0, X8
	0x0278E57C BL 0x1C5C684
	0x0278E580 MOV X8, X0
	0x0278E584 LDR X8, [X8 + 0xC0]
	0x0278E588 MOV X0, X19
	0x0278E58C MOV W1, W22
	0x0278E590 LDR X2, [X8 + 0x38]
	0x0278E594 BLR X25
	0x0278E598 LDR X8, [X20 + 0x20]
	0x0278E59C MOV X25, X0
	0x0278E5A0 LDRB W9, [X8 + 0x135]
	0x0278E5A4 TBNZ X9, 0x0, 0x278E5B4
	0x0278E5A8 MOV X0, X8
	0x0278E5AC BL 0x1C5C684
	0x0278E5B0 MOV X8, X0
	0x0278E5B4 LDR X8, [X8 + 0xC0]
	0x0278E5B8 MOV X0, X24
	0x0278E5BC MOV X2, X23
	0x0278E5C0 LDR X8, [X8 + 0x48]
	0x0278E5C4 LDR W8, [X8 + 0x28]
	0x0278E5C8 CMP W8, 0x0
	0x0278E5CC SUB X8, X29, 0x10
	0x0278E5D0 CSEL X1, X21, X8, LT
	0x0278E5D4 BL 0x3EB1AC0
	0x0278E5D8 MOV X0, X25
	0x0278E5DC MOV X1, X24
	0x0278E5E0 MOV X2, X23
	0x0278E5E4 BL 0x3EB1AC0
	0x0278E5E8 LDR X0, [X20 + 0x20]
	0x0278E5EC LDRB W8, [X0 + 0x135]
	0x0278E5F0 TBNZ X8, 0x0, 0x278E5F8
	0x0278E5F4 BL 0x1C5C684
	0x0278E5F8 LDR X8, [X0 + 0xC0]
	0x0278E5FC LDR X0, [X8 + 0x48]
	0x0278E600 LDRB W8, [X0 + 0x135]
	0x0278E604 TBNZ X8, 0x0, 0x278E60C
	0x0278E608 BL 0x1C5C684
	0x0278E60C ADD W8, W22, 0x1
	0x0278E610 STR W8, [X19 + 0x18]
	0x0278E614 LDR X8, [X26 + 0x28]
	0x0278E618 LDUR X9, [X29 - 0x8]
	0x0278E61C CMP X8, X9
	0x0278E620 B.NE 0x278E640
	0x0278E624 ADD X31, X29, 0x0
	0x0278E628 LDP X20, X19, [X31 + 0x40]
	0x0278E62C LDP X22, X21, [X31 + 0x30]
	0x0278E630 LDP X24, X23, [X31 + 0x20]
	0x0278E634 LDP X26, X25, [X31 + 0x10]
	0x0278E638 LDP X29, X30, [X31], #0x50
	0x0278E63C RET
	0x0278E640 BL 0x3EB1B20
	0x0278E644 STR X30, [X31 - 0x30]!
	0x0278E648 STP X22, X21, [X31 + 0x10]
	0x0278E64C STP X20, X19, [X31 + 0x20]
	0x0278E650 LDR X8, [X1 + 0x20]
	0x0278E654 LDR W21, [X0 + 0x18]
	0x0278E658 MOV X19, X1
	0x0278E65C MOV X20, X0
	0x0278E660 ADD X9, X8, 0x135
	0x0278E664 LDRH W9, [X9]
	0x0278E668 TBNZ X9, 0x0, 0x278E684
	0x0278E66C MOV X0, X8
	0x0278E670 BL 0x1C5C684
	0x0278E674 LDR X8, [X19 + 0x20]
	0x0278E678 ADD X9, X8, 0x135
	0x0278E67C LDRH W9, [X9]
	0x0278E680 B 0x278E688
	0x0278E684 MOV X0, X8
	0x0278E688 LDR X10, [X0 + 0xC0]
	0x0278E68C LDR X10, [X10 + 0x50]
	0x0278E690 LDR X22, [X10]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X8, [X1+32]
	008 Move X19, X1
	009 Move X20, X0
	010 Move W9, [X8+309]
	011 Move TEMP, X9
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {18}
	015 Move X0, X8
	016 Call 0x1C5D684
	017 Move X8, X0
	018 Move X8, [X8+192]
	019 Move X0, [X8+112]
	020 Move W8, [X0+309]
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {26}
	025 Call 0x1C5D684
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 Move X0, [X19+32]
	031 Move W8, [X0+309]
	032 Move TEMP, X8
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfEqual {37}
	036 Call 0x1C5D684
	037 Move X8, [X0+192]
	038 Move X21, [X8+104]
	039 Move X0, [X21+32]
	040 Move W8, [X0+309]
	041 Move TEMP, X8
	042 And TEMP, TEMP, 1
	043 Compare TEMP, 1
	044 JumpIfEqual {46}
	045 Call 0x1C5D684
	046 Move X8, [X0+192]
	047 Move X0, [X8+8]
	048 Move W8, [X0+309]
	049 Move TEMP, X8
	050 And TEMP, TEMP, 1
	051 Compare TEMP, 1
	052 JumpIfEqual {54}
	053 Call 0x1C5D684
	054 Move W8, [X0+224]
	055 Compare W8, 0
	056 JumpIfNotEqual {58}
	057 Call 0x1C17DFC
	058 Move X0, [X21+32]
	059 Move W8, [X0+309]
	060 Move TEMP, X8
	061 And TEMP, TEMP, 1
	062 Compare TEMP, 1
	063 JumpIfEqual {65}
	064 Call 0x1C5D684
	065 Move X8, [X0+192]
	066 Move X0, [X8+8]
	067 Move W8, [X0+309]
	068 Move TEMP, X8
	069 And TEMP, TEMP, 1
	070 Compare TEMP, 1
	071 JumpIfEqual {73}
	072 Call 0x1C5D684
	073 Move X8, [X19+32]
	074 Move X9, [X0+184]
	075 Move W10, [X8+309]
	076 Move X21, [X9]
	077 Move TEMP, X10
	078 And TEMP, TEMP, 1
	079 Compare TEMP, 1
	080 JumpIfEqual {83}
	081 Move X0, X8
	082 Call 0x1C5D684
	083 Compare X21, 0
	084 JumpIfEqual {225}
	085 Move X8, [X21]
	086 Move W9, [X20+8]
	087 Move X0, X21
	088 Move X10, [X8+376]
	089 Move X2, [X8+384]
	090 Move W1, W9
	091 ShiftRight W1, 31
	092 And W1, W1, 0x3FFFFFFF
	093 NotImplemented "Instruction BLR not yet implemented."
	094 Move X8, [X19+32]
	095 Move X22, X0
	096 Move W9, [X8+309]
	097 Move TEMP, X9
	098 And TEMP, TEMP, 1
	099 Compare TEMP, 1
	100 JumpIfEqual {104}
	101 Move X0, X8
	102 Call 0x1C5D684
	103 Move X8, X0
	104 Move X8, [X8+192]
	105 Move X0, X22
	106 Move X1, [X8+144]
	107 Call Span`1<Int32>.op_Implicit, X0
	108 Move X21, X0
	109 Move X0, [X19+32]
	110 Move X23, X1
	111 Move W8, [X0+309]
	112 Move TEMP, X8
	113 And TEMP, TEMP, 1
	114 Compare TEMP, 1
	115 JumpIfEqual {117}
	116 Call 0x1C5D684
	117 Move X8, [X0+192]
	118 Move X0, X20
	119 Move X1, X21
	120 Move X2, X23
	121 Move X3, [X8+152]
	122 Call Span`1<Int32>.TryCopyTo, X0, X1
	123 Move X21, [X20+16]
	124 Move [X20+16], X22
	125 Move X0, [X19+32]
	126 Move W8, [X0+309]
	127 Move TEMP, X8
	128 And TEMP, TEMP, 1
	129 Compare TEMP, 1
	130 JumpIfEqual {132}
	131 Call 0x1C5D684
	132 Move X8, [X0+192]
	133 Move X0, X22
	134 Move X1, [X8+144]
	135 Call Span`1<Int32>.op_Implicit, X0
	136 Move [X20], X0
	137 Move [X20+8], X1
	138 Compare X21, 0
	139 JumpIfEqual {218}
	140 Move X0, [X19+32]
	141 Move W8, [X0+309]
	142 Move TEMP, X8
	143 And TEMP, TEMP, 1
	144 Compare TEMP, 1
	145 JumpIfEqual {147}
	146 Call 0x1C5D684
	147 Move X8, [X0+192]
	148 Move X0, [X8+112]
	149 Move W8, [X0+309]
	150 Move TEMP, X8
	151 And TEMP, TEMP, 1
	152 Compare TEMP, 1
	153 JumpIfEqual {155}
	154 Call 0x1C5D684
	155 Move W8, [X0+224]
	156 Compare W8, 0
	157 JumpIfNotEqual {159}
	158 Call 0x1C17DFC
	159 Move X0, [X19+32]
	160 Move W8, [X0+309]
	161 Move TEMP, X8
	162 And TEMP, TEMP, 1
	163 Compare TEMP, 1
	164 JumpIfEqual {166}
	165 Call 0x1C5D684
	166 Move X8, [X0+192]
	167 Move X19, [X8+104]
	168 Move X0, [X19+32]
	169 Move W8, [X0+309]
	170 Move TEMP, X8
	171 And TEMP, TEMP, 1
	172 Compare TEMP, 1
	173 JumpIfEqual {175}
	174 Call 0x1C5D684
	175 Move X8, [X0+192]
	176 Move X0, [X8+8]
	177 Move W8, [X0+309]
	178 Move TEMP, X8
	179 And TEMP, TEMP, 1
	180 Compare TEMP, 1
	181 JumpIfEqual {183}
	182 Call 0x1C5D684
	183 Move W8, [X0+224]
	184 Compare W8, 0
	185 JumpIfNotEqual {187}
	186 Call 0x1C17DFC
	187 Move X0, [X19+32]
	188 Move W8, [X0+309]
	189 Move TEMP, X8
	190 And TEMP, TEMP, 1
	191 Compare TEMP, 1
	192 JumpIfEqual {194}
	193 Call 0x1C5D684
	194 Move X8, [X0+192]
	195 Move X0, [X8+8]
	196 Move W8, [X0+309]
	197 Move TEMP, X8
	198 And TEMP, TEMP, 1
	199 Compare TEMP, 1
	200 JumpIfEqual {202}
	201 Call 0x1C5D684
	202 Move X8, [X0+184]
	203 Move X0, [X8]
	204 Compare X0, 0
	205 JumpIfEqual {225}
	206 Move X8, [X0]
	207 Move X1, X21
	208 Move X20, [X31+32]
	209 Move X19, [X31+40]
	210 Move X22, [X31+16]
	211 Move X21, [X31+24]
	212 Move X4, [X8+392]
	213 Move X3, [X8+400]
	214 Move W2, W31
	215 Move X30, [X31+48]
	216 Move X23, [X31+56]
	217 CallNoReturn X4
	218 Move X20, [X31+32]
	219 Move X19, [X31+40]
	220 Move X22, [X31+16]
	221 Move X21, [X31+24]
	222 Move X30, [X31+48]
	223 Move X23, [X31+56]
	224 Return 
	225 Call 0x1C17F20

Method: T Pop()

Disassembly:
	0x0278E694 TBNZ X9, 0x0, 0x278E6A4
	0x0278E698 MOV X0, X8
	0x0278E69C BL 0x1C5C684
	0x0278E6A0 MOV X8, X0
	0x0278E6A4 LDR X8, [X8 + 0xC0]
	0x0278E6A8 MOV X0, X20
	0x0278E6AC MOV W1, W31
	0x0278E6B0 MOV W2, W21
	0x0278E6B4 LDR X3, [X8 + 0x50]
	0x0278E6B8 BLR X22
	0x0278E6BC LDR X8, [X19 + 0x20]
	0x0278E6C0 MOV X20, X0

ISIL:
	001 Move [X31-16], X30
	002 Move W8, [X0+24]
	003 Move W9, [X0+8]
	004 Subtract W8, W8, 1
	005 NotImplemented "Instruction CMP not yet implemented."
	006 Move [X0+24], W8
	007 Move X9, [X0]
	008 Move W0, [X9]
	009 Move X30, [X31+16]
	010 Return X0
	011 Call 0x1C17F28

