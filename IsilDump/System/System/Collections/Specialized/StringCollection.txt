Type: System.Collections.Specialized.StringCollection

Method: System.String get_Item(System.Int32 index)

Disassembly:
	0x03665918 MOV X1, X31
	0x0366591C MOV X29, X0
	0x03665920 BL 0x3626318
	0x03665924 CMP W0, W21
	0x03665928 B.HI 0x3665984
	0x0366592C CMP W0, W27
	0x03665930 B.HI 0x3665A34
	0x03665934 MOVZ W8, 0xF9D2
	0x03665938 MOVK W8, 0x351D0000
	0x0366593C CMP W0, W8
	0x03665940 ADRP X8, 0xAD8000
	0x03665944 LDR X8, [X8 + 0x260]
	0x03665948 B.EQ 0x3665AE0
	0x0366594C CMP W0, W27
	0x03665950 B.NE 0x3665D74
	0x03665954 LDR X1, [X8]
	0x03665958 MOV X0, X29
	0x0366595C MOV X2, X31
	0x03665960 MOV X20, X8
	0x03665964 BL 0x321BA08
	0x03665968 TBZ X0, 0x0, 0x3665D74
	0x0366596C LDR X1, [X20]
	0x03665970 MOV X0, X25
	0x03665974 MOV X2, X31
	0x03665978 BL 0x32A9988
	0x0366597C STR W0, [X31 + 0x1C]
	0x03665980 B 0x3665D74
	0x03665984 CMP W0, W28
	0x03665988 B.HI 0x3665A88
	0x0366598C MOVZ W8, 0x32ED
	0x03665990 MOVK W8, 0x602B0000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xD7C000
	006 Move W8, [X21+1777]
	007 Move W19, W1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xA91000
	014 Move X0, [X0+632]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+1777], W8
	018 Move X0, [X20+16]
	019 Compare X0, 0
	020 JumpIfEqual {38}
	021 Move X8, [X0]
	022 Move W1, W19
	023 Move X9, [X8+744]
	024 Move X2, [X8+752]
	025 NotImplemented "Instruction BLR not yet implemented."
	026 Compare X0, 0
	027 JumpIfEqual {33}
	028 Move X8, 0xA91000
	029 Move X8, [X8+632]
	030 Move X1, [X8]
	031 Move X8, [X0]
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move X30, [X31+32]
	036 Move X21, [X31+40]
	037 Return X0
	038 Call 0x1C17F20
	039 Call 0x1C181E0

Method: System.Void set_Item(System.Int32 index, System.String value)

Disassembly:
	0x03665994 CMP W0, W8
	0x03665998 B.EQ 0x3665B70
	0x0366599C CMP W0, W28
	0x036659A0 B.NE 0x3665D74
	0x036659A4 ADRP X8, 0xAD8000
	0x036659A8 LDR X8, [X8 + 0x258]
	0x036659AC MOV X0, X29
	0x036659B0 MOV X2, X31
	0x036659B4 LDR X1, [X8]

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+16]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move X8, [X0]
	006 Move X4, [X8+760]
	007 Move X3, [X8+768]
	008 Move X30, [X31+16]
	009 CallNoReturn X4
	010 Call 0x1C17F20

Method: System.Int32 get_Count()

Disassembly:
	0x036659B8 BL 0x321BA08
	0x036659BC TBZ X0, 0x0, 0x3665D74
	0x036659C0 ADRP X8, 0xA8E000
	0x036659C4 LDR X8, [X8 + 0x6C0]
	0x036659C8 ADRP X9, 0xAC5000
	0x036659CC LDR X0, [X8]
	0x036659D0 LDR W8, [X0 + 0xE0]
	0x036659D4 LDR X9, [X9 + 0x768]
	0x036659D8 LDR X20, [X9]

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+16]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move X8, [X0]
	006 Move X2, [X8+664]
	007 Move X1, [X8+672]
	008 Move X30, [X31+16]
	009 CallNoReturn X2
	010 Call 0x1C17F20

Method: System.Boolean System.Collections.IList.get_IsReadOnly()

Disassembly:
	0x036659DC CBNZ W8, 0x36659E4
	0x036659E0 BL 0x1C16DFC

ISIL:
	001 Move W0, W31
	002 Return X0

Method: System.Boolean System.Collections.IList.get_IsFixedSize()

Disassembly:
	0x036659E4 MOV X0, X20
	0x036659E8 MOV X1, X31

ISIL:
	001 Move W0, W31
	002 Return X0

Method: System.Int32 Add(System.String value)

Disassembly:
	0x036659EC BL 0x338C698
	0x036659F0 ADRP X8, 0xAD8000
	0x036659F4 LDR X8, [X8 + 0x258]
	0x036659F8 MOV X2, X0
	0x036659FC MOV X0, X25
	0x03665A00 MOV X3, X31
	0x03665A04 LDR X1, [X8]
	0x03665A08 BL 0x32A9678
	0x03665A0C CBZ X0, 0x3665D44

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+16]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move X8, [X0]
	006 Move X3, [X8+776]
	007 Move X2, [X8+784]
	008 Move X30, [X31+16]
	009 CallNoReturn X3
	010 Call 0x1C17F20

Method: System.Void Clear()

Disassembly:
	0x03665A10 ADRP X8, 0xAC5000
	0x03665A14 LDR X8, [X8 + 0x338]
	0x03665A18 MOV X29, X0
	0x03665A1C LDR X20, [X8]
	0x03665A20 MOV X1, X20
	0x03665A24 BL 0x1C16E00
	0x03665A28 STR X0, [X31 + 0x8]
	0x03665A2C CBNZ X0, 0x3665D74
	0x03665A30 B 0x3665EAC

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+16]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move X8, [X0]
	006 Move X2, [X8+808]
	007 Move X1, [X8+816]
	008 Move X30, [X31+16]
	009 CallNoReturn X2
	010 Call 0x1C17F20

Method: System.Boolean Contains(System.String value)

Disassembly:
	0x03665A34 MOVZ W8, 0x908B
	0x03665A38 MOVK W8, 0x49390000
	0x03665A3C CMP W0, W8
	0x03665A40 ADRP X8, 0xA8F000
	0x03665A44 LDR X8, [X8 + 0x2A0]
	0x03665A48 B.EQ 0x3665C00
	0x03665A4C CMP W0, W21
	0x03665A50 B.NE 0x3665D74
	0x03665A54 LDR X1, [X8]

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+16]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move X8, [X0]
	006 Move X3, [X8+840]
	007 Move X2, [X8+848]
	008 Move X30, [X31+16]
	009 CallNoReturn X3
	010 Call 0x1C17F20

Method: System.Void CopyTo(System.String[] array, System.Int32 index)

Disassembly:
	0x03665A58 MOV X0, X29
	0x03665A5C MOV X2, X31
	0x03665A60 MOV X20, X8
	0x03665A64 BL 0x321BA08
	0x03665A68 TBZ X0, 0x0, 0x3665D74
	0x03665A6C LDR X1, [X20]
	0x03665A70 MOV X0, X25
	0x03665A74 MOV X2, X31
	0x03665A78 BL 0x32A9B08

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+16]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move X8, [X0]
	006 Move X4, [X8+872]
	007 Move X3, [X8+880]
	008 Move X30, [X31+16]
	009 CallNoReturn X4
	010 Call 0x1C17F20

Method: System.Int32 IndexOf(System.String value)

Disassembly:
	0x03665A7C MOVZ W8, 0x1
	0x03665A80 STP W0, W8, [X31 + 0x14]
	0x03665A84 B 0x3665D74
	0x03665A88 ADRP X9, 0xAB8000
	0x03665A8C LDR X9, [X9 + 0x2C8]
	0x03665A90 MOVZ W8, 0x225B
	0x03665A94 MOVK W8, 0x8D4D0000
	0x03665A98 CMP W0, W8
	0x03665A9C B.EQ 0x3665CB4

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+16]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move X8, [X0]
	006 Move X3, [X8+920]
	007 Move X2, [X8+928]
	008 Move X30, [X31+16]
	009 CallNoReturn X3
	010 Call 0x1C17F20

Method: System.Void Insert(System.Int32 index, System.String value)

Disassembly:
	0x03665AA0 MOVZ W8, 0xB894
	0x03665AA4 MOVK W8, 0xE1E70000
	0x03665AA8 CMP W0, W8
	0x03665AAC B.NE 0x3665D74
	0x03665AB0 LDR X1, [X9]
	0x03665AB4 MOV X0, X29
	0x03665AB8 MOV X2, X31
	0x03665ABC MOV X20, X9
	0x03665AC0 BL 0x321BA08

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+16]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move X8, [X0]
	006 Move X4, [X8+936]
	007 Move X3, [X8+944]
	008 Move X30, [X31+16]
	009 CallNoReturn X4
	010 Call 0x1C17F20

Method: System.Boolean get_IsSynchronized()

Disassembly:
	0x03665AC4 TBZ X0, 0x0, 0x3665D74
	0x03665AC8 LDR X1, [X20]

ISIL:
	001 Move W0, W31
	002 Return X0

Method: System.Void Remove(System.String value)

Disassembly:
	0x03665ACC MOV X0, X25
	0x03665AD0 MOV X2, X31
	0x03665AD4 BL 0x32A9B08
	0x03665AD8 MOV W24, W0
	0x03665ADC B 0x3665D74
	0x03665AE0 ADRP X8, 0xAB8000
	0x03665AE4 LDR X8, [X8 + 0x2D0]
	0x03665AE8 MOV X0, X29
	0x03665AEC MOV X2, X31

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+16]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move X8, [X0]
	006 Move X3, [X8+968]
	007 Move X2, [X8+976]
	008 Move X30, [X31+16]
	009 CallNoReturn X3
	010 Call 0x1C17F20

Method: System.Void RemoveAt(System.Int32 index)

Disassembly:
	0x03665AF0 LDR X1, [X8]
	0x03665AF4 BL 0x321BA08
	0x03665AF8 TBZ X0, 0x0, 0x3665D74
	0x03665AFC ADRP X8, 0xA8E000
	0x03665B00 LDR X8, [X8 + 0x6C0]
	0x03665B04 ADRP X9, 0xAC5000
	0x03665B08 LDR X0, [X8]
	0x03665B0C LDR W8, [X0 + 0xE0]
	0x03665B10 LDR X9, [X9 + 0x758]

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+16]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move X8, [X0]
	006 Move X3, [X8+984]
	007 Move X2, [X8+992]
	008 Move X30, [X31+16]
	009 CallNoReturn X3
	010 Call 0x1C17F20

Method: System.Object get_SyncRoot()

Disassembly:
	0x03665B14 LDR X20, [X9]
	0x03665B18 CBNZ W8, 0x3665B20
	0x03665B1C BL 0x1C16DFC
	0x03665B20 MOV X0, X20
	0x03665B24 MOV X1, X31
	0x03665B28 BL 0x338C698
	0x03665B2C ADRP X8, 0xAB8000
	0x03665B30 LDR X8, [X8 + 0x2D0]
	0x03665B34 MOV X2, X0

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+16]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move X8, [X0]
	006 Move X2, [X8+728]
	007 Move X1, [X8+736]
	008 Move X30, [X31+16]
	009 CallNoReturn X2
	010 Call 0x1C17F20

Method: System.Object System.Collections.IList.get_Item(System.Int32 index)

Disassembly:
	0x03665B38 MOV X0, X25

ISIL:
	001 Call StringCollection.get_Item, X0, X1
	002 Return X0

Method: System.Void System.Collections.IList.set_Item(System.Int32 index, System.Object value)

Disassembly:
	0x03665B3C MOV X3, X31
	0x03665B40 LDR X1, [X8]
	0x03665B44 BL 0x32A9678
	0x03665B48 CBZ X0, 0x3665D4C
	0x03665B4C ADRP X8, 0xAB8000
	0x03665B50 LDR X8, [X8 + 0x918]
	0x03665B54 MOV X29, X0
	0x03665B58 LDR X20, [X8]
	0x03665B5C MOV X1, X20
	0x03665B60 BL 0x1C16E00
	0x03665B64 STR X0, [X31]
	0x03665B68 CBNZ X0, 0x3665D74
	0x03665B6C B 0x3665EAC
	0x03665B70 ADRP X8, 0xAC5000
	0x03665B74 LDR X8, [X8 + 0x770]
	0x03665B78 MOV X0, X29
	0x03665B7C MOV X2, X31
	0x03665B80 LDR X1, [X8]
	0x03665B84 BL 0x321BA08
	0x03665B88 TBZ X0, 0x0, 0x3665D74
	0x03665B8C ADRP X8, 0xA8E000
	0x03665B90 LDR X8, [X8 + 0x6C0]
	0x03665B94 ADRP X9, 0xAC0000
	0x03665B98 LDR X0, [X8]
	0x03665B9C LDR W8, [X0 + 0xE0]
	0x03665BA0 LDR X9, [X9 + 0x170]
	0x03665BA4 LDR X20, [X9]
	0x03665BA8 CBNZ W8, 0x3665BB0
	0x03665BAC BL 0x1C16DFC
	0x03665BB0 MOV X0, X20
	0x03665BB4 MOV X1, X31
	0x03665BB8 BL 0x338C698
	0x03665BBC ADRP X8, 0xAC5000
	0x03665BC0 LDR X8, [X8 + 0x770]
	0x03665BC4 MOV X2, X0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xD7C000
	007 Move W8, [X22+1778]
	008 Move X19, X2
	009 Move W20, W1
	010 Move X21, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0xA91000
	016 Move X0, [X0+632]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+1778], W8
	020 Compare X19, 0
	021 JumpIfEqual {27}
	022 Move X8, 0xA91000
	023 Move X8, [X8+632]
	024 Move X1, [X8]
	025 Move X8, [X19]
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move X0, [X21+16]
	028 Compare X0, 0
	029 JumpIfEqual {41}
	030 Move X8, [X0]
	031 Move W1, W20
	032 Move X2, X19
	033 Move X20, [X31+32]
	034 Move X19, [X31+40]
	035 Move X4, [X8+760]
	036 Move X3, [X8+768]
	037 Move X22, [X31+16]
	038 Move X21, [X31+24]
	039 Move X30, [X31+48]
	040 CallNoReturn X4
	041 Call 0x1C17F20
	042 Move X0, X19
	043 Call 0x1C181E0

Method: System.Int32 System.Collections.IList.Add(System.Object value)

Disassembly:
	0x03665BC8 MOV X0, X25
	0x03665BCC MOV X3, X31
	0x03665BD0 LDR X1, [X8]
	0x03665BD4 BL 0x32A9678
	0x03665BD8 CBZ X0, 0x3665D54
	0x03665BDC ADRP X8, 0xA8E000
	0x03665BE0 LDR X8, [X8 + 0xAC8]
	0x03665BE4 MOV X20, X0
	0x03665BE8 LDR X29, [X8]
	0x03665BEC MOV X1, X29
	0x03665BF0 BL 0x1C16E00
	0x03665BF4 MOV X22, X0
	0x03665BF8 CBNZ X0, 0x3665D74
	0x03665BFC B 0x3665EBC
	0x03665C00 ADRP X8, 0xAC5000
	0x03665C04 LDR X8, [X8 + 0x780]
	0x03665C08 MOV X0, X29
	0x03665C0C MOV X2, X31
	0x03665C10 LDR X1, [X8]
	0x03665C14 BL 0x321BA08
	0x03665C18 TBZ X0, 0x0, 0x3665D74
	0x03665C1C ADRP X8, 0xA8E000
	0x03665C20 LDR X8, [X8 + 0x6C0]
	0x03665C24 ADRP X9, 0xAC5000
	0x03665C28 MOV W27, W24
	0x03665C2C LDR X0, [X8]
	0x03665C30 LDR W8, [X0 + 0xE0]
	0x03665C34 LDR X9, [X9 + 0x760]
	0x03665C38 LDR X20, [X9]
	0x03665C3C CBNZ W8, 0x3665C44
	0x03665C40 BL 0x1C16DFC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xD7C000
	006 Move W8, [X21+1779]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xA91000
	014 Move X0, [X0+632]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+1779], W8
	018 Compare X19, 0
	019 JumpIfEqual {25}
	020 Move X8, 0xA91000
	021 Move X8, [X8+632]
	022 Move X1, [X8]
	023 Move X8, [X19]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move X0, [X20+16]
	026 Compare X0, 0
	027 JumpIfEqual {37}
	028 Move X8, [X0]
	029 Move X1, X19
	030 Move X20, [X31+16]
	031 Move X19, [X31+24]
	032 Move X3, [X8+776]
	033 Move X2, [X8+784]
	034 Move X30, [X31+32]
	035 Move X21, [X31+40]
	036 CallNoReturn X3
	037 Call 0x1C17F20
	038 Move X0, X19
	039 Call 0x1C181E0

Method: System.Boolean System.Collections.IList.Contains(System.Object value)

Disassembly:
	0x03665C44 MOV X0, X20
	0x03665C48 MOV X1, X31
	0x03665C4C BL 0x338C698
	0x03665C50 ADRP X8, 0xAC5000
	0x03665C54 LDR X8, [X8 + 0x780]
	0x03665C58 MOV X2, X0
	0x03665C5C MOV X0, X25
	0x03665C60 MOV X3, X31
	0x03665C64 LDR X1, [X8]
	0x03665C68 BL 0x32A9678
	0x03665C6C CBZ X0, 0x3665D5C
	0x03665C70 ADRP X24, 0xAB8000
	0x03665C74 LDR X24, [X24 + 0x900]
	0x03665C78 MOV X29, X0
	0x03665C7C LDR X20, [X24]
	0x03665C80 MOV X1, X20
	0x03665C84 BL 0x1C16E00
	0x03665C88 CBZ X0, 0x3665EAC
	0x03665C8C STR X0, [X19 + 0x20]
	0x03665C90 LDR X20, [X24]
	0x03665C94 MOV X0, X29
	0x03665C98 MOV X1, X20
	0x03665C9C BL 0x1C16E00
	0x03665CA0 MOV W24, W27
	0x03665CA4 MOVZ W27, 0xFBF7
	0x03665CA8 MOVK W27, 0x47B00000
	0x03665CAC CBNZ X0, 0x3665D74
	0x03665CB0 B 0x3665EAC
	0x03665CB4 ADRP X8, 0xAC5000
	0x03665CB8 LDR X8, [X8 + 0x778]
	0x03665CBC MOV X0, X29

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xD7C000
	006 Move W8, [X21+1780]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xA91000
	014 Move X0, [X0+632]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+1780], W8
	018 Compare X19, 0
	019 JumpIfEqual {25}
	020 Move X8, 0xA91000
	021 Move X8, [X8+632]
	022 Move X1, [X8]
	023 Move X8, [X19]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move X0, [X20+16]
	026 Compare X0, 0
	027 JumpIfEqual {37}
	028 Move X8, [X0]
	029 Move X1, X19
	030 Move X20, [X31+16]
	031 Move X19, [X31+24]
	032 Move X3, [X8+840]
	033 Move X2, [X8+848]
	034 Move X30, [X31+32]
	035 Move X21, [X31+40]
	036 CallNoReturn X3
	037 Call 0x1C17F20
	038 Move X0, X19
	039 Call 0x1C181E0

Method: System.Int32 System.Collections.IList.IndexOf(System.Object value)

Disassembly:
	0x03665CC0 MOV X2, X31
	0x03665CC4 LDR X1, [X8]
	0x03665CC8 BL 0x321BA08
	0x03665CCC TBZ X0, 0x0, 0x3665D74
	0x03665CD0 ADRP X8, 0xA8E000
	0x03665CD4 LDR X8, [X8 + 0x6C0]
	0x03665CD8 ADRP X9, 0xAC0000
	0x03665CDC LDR X0, [X8]
	0x03665CE0 LDR W8, [X0 + 0xE0]
	0x03665CE4 LDR X9, [X9 + 0x160]
	0x03665CE8 LDR X20, [X9]
	0x03665CEC CBNZ W8, 0x3665CF4
	0x03665CF0 BL 0x1C16DFC
	0x03665CF4 MOV X0, X20
	0x03665CF8 MOV X1, X31
	0x03665CFC BL 0x338C698
	0x03665D00 ADRP X8, 0xAC5000
	0x03665D04 LDR X8, [X8 + 0x778]
	0x03665D08 MOV X2, X0
	0x03665D0C MOV X0, X25
	0x03665D10 MOV X3, X31
	0x03665D14 LDR X1, [X8]
	0x03665D18 BL 0x32A9678
	0x03665D1C CBZ X0, 0x3665D70
	0x03665D20 ADRP X8, 0xA8E000
	0x03665D24 LDR X8, [X8 + 0x9D0]
	0x03665D28 MOV X20, X0
	0x03665D2C LDR X29, [X8]
	0x03665D30 MOV X1, X29
	0x03665D34 BL 0x1C16E00
	0x03665D38 MOV X23, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xD7C000
	006 Move W8, [X21+1781]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xA91000
	014 Move X0, [X0+632]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+1781], W8
	018 Compare X19, 0
	019 JumpIfEqual {25}
	020 Move X8, 0xA91000
	021 Move X8, [X8+632]
	022 Move X1, [X8]
	023 Move X8, [X19]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move X0, [X20+16]
	026 Compare X0, 0
	027 JumpIfEqual {37}
	028 Move X8, [X0]
	029 Move X1, X19
	030 Move X20, [X31+16]
	031 Move X19, [X31+24]
	032 Move X3, [X8+920]
	033 Move X2, [X8+928]
	034 Move X30, [X31+32]
	035 Move X21, [X31+40]
	036 CallNoReturn X3
	037 Call 0x1C17F20
	038 Move X0, X19
	039 Call 0x1C181E0

Method: System.Void System.Collections.IList.Insert(System.Int32 index, System.Object value)

Disassembly:
	0x03665D3C CBNZ X0, 0x3665D74
	0x03665D40 B 0x3665EBC
	0x03665D44 STR X31, [X31 + 0x8]
	0x03665D48 B 0x3665D74
	0x03665D4C STR X31, [X31]
	0x03665D50 B 0x3665D74
	0x03665D54 MOV X22, X31
	0x03665D58 B 0x3665D74
	0x03665D5C MOV W24, W27
	0x03665D60 MOVZ W27, 0xFBF7
	0x03665D64 STR X31, [X19 + 0x20]
	0x03665D68 MOVK W27, 0x47B00000
	0x03665D6C B 0x3665D74
	0x03665D70 MOV X23, X31
	0x03665D74 MOV X0, X26
	0x03665D78 MOV X1, X31
	0x03665D7C BL 0x3291B70
	0x03665D80 TBNZ X0, 0x0, 0x366590C
	0x03665D84 B 0x3665DA0
	0x03665D88 STR X31, [X31 + 0x18]
	0x03665D8C MOV W24, W31
	0x03665D90 MOV X22, X31
	0x03665D94 MOV X23, X31
	0x03665D98 STP X31, X31, [X31]
	0x03665D9C STR W31, [X31 + 0x14]
	0x03665DA0 LDR X8, [X19 + 0x20]
	0x03665DA4 CBNZ X8, 0x3665DD8
	0x03665DA8 LDP X25, X21, [X31]
	0x03665DAC CBZ X25, 0x3665E78
	0x03665DB0 CBZ X21, 0x3665E78
	0x03665DB4 ADRP X8, 0xAD8000
	0x03665DB8 LDR X8, [X8 + 0x250]
	0x03665DBC LDR X0, [X8]
	0x03665DC0 BL 0x1C16F10
	0x03665DC4 MOV X1, X31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xD7C000
	007 Move W8, [X22+1782]
	008 Move X19, X2
	009 Move W20, W1
	010 Move X21, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0xA91000
	016 Move X0, [X0+632]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+1782], W8
	020 Compare X19, 0
	021 JumpIfEqual {27}
	022 Move X8, 0xA91000
	023 Move X8, [X8+632]
	024 Move X1, [X8]
	025 Move X8, [X19]
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move X0, [X21+16]
	028 Compare X0, 0
	029 JumpIfEqual {41}
	030 Move X8, [X0]
	031 Move W1, W20
	032 Move X2, X19
	033 Move X20, [X31+32]
	034 Move X19, [X31+40]
	035 Move X4, [X8+936]
	036 Move X3, [X8+944]
	037 Move X22, [X31+16]
	038 Move X21, [X31+24]
	039 Move X30, [X31+48]
	040 CallNoReturn X4
	041 Call 0x1C17F20
	042 Move X0, X19
	043 Call 0x1C181E0

Method: System.Void System.Collections.IList.Remove(System.Object value)

Disassembly:
	0x03665DC8 MOV X20, X0
	0x03665DCC BL 0x33BDD8C
	0x03665DD0 STP X25, X21, [X20 + 0x10]
	0x03665DD4 STR X20, [X19 + 0x20]
	0x03665DD8 CBZ X23, 0x3665E78
	0x03665DDC CBZ X22, 0x3665E78
	0x03665DE0 MOV X0, X19
	0x03665DE4 MOV W1, W24
	0x03665DE8 BL 0x3664F98
	0x03665DEC CMP W24, 0x1
	0x03665DF0 B.LT 0x3665E38
	0x03665DF4 MOV X20, X31
	0x03665DF8 MOV W21, W24
	0x03665DFC ADD X24, X22, 0x20
	0x03665E00 ADD X25, X23, 0x20
	0x03665E04 LDR W8, [X22 + 0x18]
	0x03665E08 CMP X20, X8
	0x03665E0C B.CS 0x3665E74
	0x03665E10 LDR W8, [X23 + 0x18]
	0x03665E14 CMP X20, X8
	0x03665E18 B.CS 0x3665E74
	0x03665E1C LDR X1, [X24, X20, LSL #3]
	0x03665E20 LDR X2, [X25, X20, LSL #3]
	0x03665E24 MOV X0, X19
	0x03665E28 BL 0x3663F60
	0x03665E2C ADD X20, X20, 0x1
	0x03665E30 CMP X21, X20
	0x03665E34 B.NE 0x3665E04
	0x03665E38 LDR W8, [X31 + 0x1C]
	0x03665E3C AND W8, W8, 0x1
	0x03665E40 STRB W8, [X19 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xD7C000
	006 Move W8, [X21+1783]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xA91000
	014 Move X0, [X0+632]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+1783], W8
	018 Compare X19, 0
	019 JumpIfEqual {25}
	020 Move X8, 0xA91000
	021 Move X8, [X8+632]
	022 Move X1, [X8]
	023 Move X8, [X19]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move X0, [X20+16]
	026 Compare X0, 0
	027 JumpIfEqual {37}
	028 Move X8, [X0]
	029 Move X1, X19
	030 Move X20, [X31+16]
	031 Move X19, [X31+24]
	032 Move X3, [X8+968]
	033 Move X2, [X8+976]
	034 Move X30, [X31+32]
	035 Move X21, [X31+40]
	036 CallNoReturn X3
	037 Call 0x1C17F20
	038 Move X0, X19
	039 Call 0x1C181E0

Method: System.Void System.Collections.ICollection.CopyTo(System.Array array, System.Int32 index)

Disassembly:
	0x03665E44 LDR W8, [X31 + 0x18]
	0x03665E48 TBZ X8, 0x0, 0x3665E54
	0x03665E4C LDR W8, [X31 + 0x14]
	0x03665E50 STR W8, [X19 + 0x48]
	0x03665E54 LDP X20, X19, [X31 + 0x70]
	0x03665E58 LDP X22, X21, [X31 + 0x60]
	0x03665E5C LDP X24, X23, [X31 + 0x50]
	0x03665E60 LDP X26, X25, [X31 + 0x40]
	0x03665E64 LDP X28, X27, [X31 + 0x30]

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+16]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move X8, [X0]
	006 Move X4, [X8+872]
	007 Move X3, [X8+880]
	008 Move X30, [X31+16]
	009 CallNoReturn X4
	010 Call 0x1C17F20

Method: System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()

Disassembly:
	0x03665E68 LDP X29, X30, [X31 + 0x20]
	0x03665E6C ADD X31, X31, 0x80
	0x03665E70 RET
	0x03665E74 BL 0x1C16F28
	0x03665E78 ADRP X0, 0xAB8000
	0x03665E7C LDR X0, [X0 + 0x2E0]
	0x03665E80 BL 0x1C16D08
	0x03665E84 BL 0x1C16F10
	0x03665E88 MOV X1, X31

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+16]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move X8, [X0]
	006 Move X2, [X8+904]
	007 Move X1, [X8+912]
	008 Move X30, [X31+16]
	009 CallNoReturn X2
	010 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x03665E8C MOV X19, X0
	0x03665E90 BL 0x329F08C
	0x03665E94 ADRP X0, 0xAD8000
	0x03665E98 LDR X0, [X0 + 0x280]
	0x03665E9C BL 0x1C16D08
	0x03665EA0 MOV X1, X0
	0x03665EA4 MOV X0, X19
	0x03665EA8 BL 0x1C16DEC
	0x03665EAC MOV X0, X29
	0x03665EB0 MOV X1, X20
	0x03665EB4 BL 0x1C171E0
	0x03665EB8 BL 0x1C16F20
	0x03665EBC MOV X0, X20
	0x03665EC0 MOV X1, X29
	0x03665EC4 BL 0x1C171E0
	0x03665EC8 STP X30, X21, [X31 - 0x20]!
	0x03665ECC STP X20, X19, [X31 + 0x10]
	0x03665ED0 MOV X20, X1
	0x03665ED4 MOV X1, X31
	0x03665ED8 MOV X19, X2
	0x03665EDC MOV X21, X0
	0x03665EE0 BL 0x33BDD8C
	0x03665EE4 STP X20, X19, [X21 + 0x10]
	0x03665EE8 LDP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xD7C000
	006 Move X21, 0xABC000
	007 Move W8, [X20+1784]
	008 Move X21, [X21+2976]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xABC000
	015 Move X0, [X0+2976]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1784], W8
	019 Move X0, [X21]
	020 Call 0x1C17F10
	021 Move X1, X31
	022 Move X20, X0
	023 Call ArrayList..ctor, X0
	024 Move [X19+16], X20
	025 Move X0, X19
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X1, X31
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Call Object..ctor, X0
	032 Return 

