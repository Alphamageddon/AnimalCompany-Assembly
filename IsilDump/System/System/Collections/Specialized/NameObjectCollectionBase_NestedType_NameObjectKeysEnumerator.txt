Type: System.Collections.Specialized.NameObjectCollectionBase/NameObjectKeysEnumerator

Method: System.Void .ctor(System.Collections.Specialized.NameObjectCollectionBase coll)

Disassembly:
	0x03667040 LDR X8, [X0]
	0x03667044 LDP X2, X1, [X8 + 0x1B8]
	0x03667048 BR X2
	0x0366704C RET
	0x03667050 STP X30, X19, [X31 - 0x10]!
	0x03667054 ADRP X0, 0xA8C000
	0x03667058 LDR X0, [X0 + 0xB40]
	0x0366705C BL 0x1C16D08
	0x03667060 BL 0x1C16F10
	0x03667064 MOV X19, X0
	0x03667068 ADRP X0, 0xAD6000
	0x0366706C LDR X0, [X0 + 0x2E8]
	0x03667070 BL 0x1C16D08
	0x03667074 MOV X1, X0
	0x03667078 MOV X0, X19
	0x0366707C MOV X2, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, X1
	005 Move X1, X31
	006 Move X19, X0
	007 Call Object..ctor, X0
	008 Move [X19+24], X20
	009 Compare X20, 0
	010 JumpIfEqual {21}
	011 Move W8, [X20+72]
	012 Move TEMP, 0
	013 Not TEMP
	014 Move W9, TEMP
	015 Move [X19+16], W9
	016 Move [X19+32], W8
	017 Move X20, [X31+16]
	018 Move X19, [X31+24]
	019 Move X30, [X31+32]
	020 Return 
	021 Call 0x1C17F20

Method: System.Boolean MoveNext()

Disassembly:
	0x03667564 ADRP X25, 0xD79000
	0x03667568 ADRP X26, 0xA94000
	0x0366756C LDRB W8, [X25 + 0x718]
	0x03667570 LDR X26, [X26 + 0x7D8]
	0x03667574 MOV X19, X5
	0x03667578 MOV X20, X4
	0x0366757C MOV W21, W3
	0x03667580 MOV W22, W2
	0x03667584 MOV X23, X1
	0x03667588 MOV X24, X0
	0x0366758C TBNZ X8, 0x0, 0x36675A4
	0x03667590 ADRP X0, 0xA94000
	0x03667594 LDR X0, [X0 + 0x7D8]
	0x03667598 BL 0x1C16CF4
	0x0366759C MOVZ W8, 0x1
	0x036675A0 STRB W8, [X25 + 0x718]
	0x036675A4 LDR X0, [X26]
	0x036675A8 LDR W8, [X0 + 0xE0]
	0x036675AC CBNZ W8, 0x36675B4
	0x036675B0 BL 0x1C16DFC
	0x036675B4 MOV X0, X31
	0x036675B8 BL 0x33DD2A8
	0x036675BC LDR X8, [X24]
	0x036675C0 MOV X4, X0
	0x036675C4 MOV X0, X24
	0x036675C8 MOV X1, X23
	0x036675CC LDR X9, [X8 + 0x318]
	0x036675D0 LDR X5, [X8 + 0x320]
	0x036675D4 MOV W2, W22
	0x036675D8 MOV W3, W21
	0x036675DC BLR X9
	0x036675E0 MOV X1, X20
	0x036675E4 MOV X2, X19
	0x036675E8 LDP X20, X19, [X31 + 0x40]
	0x036675EC LDP X22, X21, [X31 + 0x30]
	0x036675F0 LDP X24, X23, [X31 + 0x20]
	0x036675F4 LDP X26, X25, [X31 + 0x10]
	0x036675F8 MOV X3, X31
	0x036675FC LDR X30, [X31], #0x50
	0x03667600 B 0x33ED028
	0x03667604 MOV X0, X1
	0x03667608 MOV X1, X31
	0x0366760C B 0x33ED2B0
	0x03667610 STR X30, [X31 - 0x10]!
	0x03667614 LDR X0, [X0 + 0x28]
	0x03667618 CBZ X0, 0x3667630
	0x0366761C LDR X8, [X0]
	0x03667620 LDR X5, [X8 + 0x388]
	0x03667624 LDR X4, [X8 + 0x390]
	0x03667628 LDR X30, [X31], #0x10
	0x0366762C BR X5
	0x03667630 BL 0x3667AD0
	0x03667634 STR X30, [X31 - 0x40]!
	0x03667638 STP X24, X23, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, X0
	006 Move X0, [X0+24]
	007 Compare X0, 0
	008 JumpIfEqual {37}
	009 Move W8, [X19+32]
	010 Move W9, [X0+72]
	011 NotImplemented "Instruction CMP not yet implemented."
	012 Move X8, [X0]
	013 Move W20, [X19+16]
	014 Move X9, [X8+536]
	015 Move X1, [X8+544]
	016 NotImplemented "Instruction BLR not yet implemented."
	017 Subtract W21, W0, 1
	018 NotImplemented "Instruction CMP not yet implemented."
	019 Move W8, [X19+16]
	020 Add W0, W8, 1
	021 Move X0, [X19+24]
	022 Compare X0, 0
	023 JumpIfEqual {37}
	024 Move X8, [X0]
	025 Move X9, [X8+536]
	026 Move X1, [X8+544]
	027 NotImplemented "Instruction BLR not yet implemented."
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Move [X19+16], W0
	030 Move X20, [X31+16]
	031 Move X19, [X31+24]
	032 NotImplemented "Instruction CSET not yet implemented."
	033 Move W0, W8
	034 Move X30, [X31+32]
	035 Move X21, [X31+40]
	036 Return X0
	037 Call 0x1C17F20
	038 Move X0, 0xAB7000
	039 Move X0, [X0+648]
	040 Call 0x1C17D08
	041 Move X1, X31
	042 Call SR.GetString, X0
	043 Move X19, X0
	044 Move X0, 0xA8D000
	045 Move X0, [X0+1456]
	046 Call 0x1C17D08
	047 Call 0x1C17F10
	048 Move X1, X19
	049 Move X2, X31
	050 Move X20, X0
	051 Call InvalidOperationException..ctor, X0, X1
	052 Move X0, 0xAD7000
	053 Move X0, [X0+688]
	054 Call 0x1C17D08
	055 Move X1, X0
	056 Move X0, X20
	057 Call 0x1C17DEC

Method: System.Void Reset()

Disassembly:
	0x0366763C STP X22, X21, [X31 + 0x20]
	0x03667640 STP X20, X19, [X31 + 0x30]
	0x03667644 ADRP X24, 0xD79000
	0x03667648 ADRP X22, 0xAD6000
	0x0366764C ADRP X23, 0xA8C000
	0x03667650 LDRB W8, [X24 + 0x719]
	0x03667654 LDR X22, [X22 + 0x318]
	0x03667658 LDR X23, [X23 + 0x6C0]
	0x0366765C MOV X19, X2
	0x03667660 MOV X20, X1
	0x03667664 MOV X21, X0
	0x03667668 TBNZ X8, 0x0, 0x366768C
	0x0366766C ADRP X0, 0xAD6000
	0x03667670 LDR X0, [X0 + 0x318]
	0x03667674 BL 0x1C16CF4
	0x03667678 ADRP X0, 0xA8C000
	0x0366767C LDR X0, [X0 + 0x6C0]
	0x03667680 BL 0x1C16CF4
	0x03667684 MOVZ W8, 0x1
	0x03667688 STRB W8, [X24 + 0x719]
	0x0366768C MOV X0, X21
	0x03667690 MOV X1, X31
	0x03667694 BL 0x33BE520
	0x03667698 LDR X8, [X23]
	0x0366769C LDR X23, [X22]
	0x036676A0 MOV X22, X0
	0x036676A4 LDR W9, [X8 + 0xE0]
	0x036676A8 CBNZ W9, 0x36676B4
	0x036676AC MOV X0, X8
	0x036676B0 BL 0x1C16DFC
	0x036676B4 MOV X0, X23
	0x036676B8 MOV X1, X31
	0x036676BC BL 0x338C698
	0x036676C0 MOV X1, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X0+24]
	005 Compare X8, 0
	006 JumpIfEqual {18}
	007 Move W9, [X0+32]
	008 Move W8, [X8+72]
	009 NotImplemented "Instruction CMP not yet implemented."
	010 Move X20, [X31+16]
	011 Move X19, [X31+24]
	012 Move TEMP, 0
	013 Not TEMP
	014 Move W8, TEMP
	015 Move [X0+16], W8
	016 Move X30, [X31+32]
	017 Return 
	018 Call 0x1C17F20
	019 Move X0, 0xAB7000
	020 Move X0, [X0+648]
	021 Call 0x1C17D08
	022 Move X1, X31
	023 Call SR.GetString, X0
	024 Move X19, X0
	025 Move X0, 0xA8D000
	026 Move X0, [X0+1456]
	027 Call 0x1C17D08
	028 Call 0x1C17F10
	029 Move X1, X19
	030 Move X2, X31
	031 Move X20, X0
	032 Call InvalidOperationException..ctor, X0, X1
	033 Move X0, 0xAD7000
	034 Move X0, [X0+696]
	035 Call 0x1C17D08
	036 Move X1, X0
	037 Move X0, X20
	038 Call 0x1C17DEC

Method: System.Object get_Current()

Disassembly:
	0x036676C4 MOV X0, X22
	0x036676C8 MOV X2, X31
	0x036676CC BL 0x3395F0C
	0x036676D0 TBZ X0, 0x0, 0x36676F8
	0x036676D4 MOV X0, X21
	0x036676D8 MOV X1, X20
	0x036676DC MOV X2, X19
	0x036676E0 LDP X20, X19, [X31 + 0x30]
	0x036676E4 LDP X22, X21, [X31 + 0x20]
	0x036676E8 LDP X24, X23, [X31 + 0x10]
	0x036676EC MOV X3, X31
	0x036676F0 LDR X30, [X31], #0x40
	0x036676F4 B 0x32F2000
	0x036676F8 LDR X0, [X21 + 0x28]
	0x036676FC CBZ X0, 0x366771C
	0x03667700 MOV X1, X20
	0x03667704 MOV X2, X19
	0x03667708 LDP X20, X19, [X31 + 0x30]
	0x0366770C LDP X22, X21, [X31 + 0x20]
	0x03667710 LDP X24, X23, [X31 + 0x10]
	0x03667714 LDR X30, [X31], #0x40
	0x03667718 B 0x3667720
	0x0366771C BL 0x3667AD0
	0x03667720 SUB X31, X31, 0x30
	0x03667724 STP X30, X21, [X31 + 0x10]
	0x03667728 STP X20, X19, [X31 + 0x20]
	0x0366772C ADRP X20, 0xD79000
	0x03667730 STP X1, X2, [X31]
	0x03667734 ADRP X21, 0xAD6000
	0x03667738 LDRB W8, [X20 + 0x71F]
	0x0366773C LDR X21, [X21 + 0x328]
	0x03667740 MOV X19, X0
	0x03667744 TBNZ X8, 0x0, 0x3667768
	0x03667748 ADRP X0, 0xAD6000
	0x0366774C LDR X0, [X0 + 0x328]
	0x03667750 BL 0x1C16CF4
	0x03667754 ADRP X0, 0xABB000
	0x03667758 LDR X0, [X0 + 0xAC0]
	0x0366775C BL 0x1C16CF4
	0x03667760 MOVZ W8, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W20, [X0+16]
	005 Move TEMP, X20
	006 And TEMP, TEMP, -2147483648
	007 Compare TEMP, -2147483648
	008 JumpIfEqual {27}
	009 Move X19, X0
	010 Move X0, [X0+24]
	011 Compare X0, 0
	012 JumpIfEqual {47}
	013 Move X8, [X0]
	014 Move X9, [X8+536]
	015 Move X1, [X8+544]
	016 NotImplemented "Instruction BLR not yet implemented."
	017 NotImplemented "Instruction CMP not yet implemented."
	018 Move X0, [X19+24]
	019 Compare X0, 0
	020 JumpIfEqual {47}
	021 Move W1, [X19+16]
	022 Move X20, [X31+16]
	023 Move X19, [X31+24]
	024 Move X30, [X31+32]
	025 Call NameObjectCollectionBase.BaseGetKey, X0, X1
	026 Return X0
	027 Move X0, 0xAB7000
	028 Move X0, [X0+656]
	029 Call 0x1C17D08
	030 Move X1, X31
	031 Call SR.GetString, X0
	032 Move X19, X0
	033 Move X0, 0xA8D000
	034 Move X0, [X0+1456]
	035 Call 0x1C17D08
	036 Call 0x1C17F10
	037 Move X1, X19
	038 Move X2, X31
	039 Move X20, X0
	040 Call InvalidOperationException..ctor, X0, X1
	041 Move X0, 0xAD7000
	042 Move X0, [X0+704]
	043 Call 0x1C17D08
	044 Move X1, X0
	045 Move X0, X20
	046 Call 0x1C17DEC
	047 Call 0x1C17F20

