Type: System.Collections.Specialized.ListDictionary/NodeKeyValueCollection/NodeKeyValueEnumerator

Method: System.Void .ctor(System.Collections.Specialized.ListDictionary list, System.Boolean isKeys)

Disassembly:
	0x03664378 ADRP X21, 0xD7C000
	0x0366437C LDRB W8, [X21 + 0x702]
	0x03664380 MOV X20, X1
	0x03664384 MOV X19, X0
	0x03664388 TBNZ X8, 0x0, 0x36643A0
	0x0366438C ADRP X0, 0xAB9000
	0x03664390 LDR X0, [X0 + 0x900]
	0x03664394 BL 0x1C16CF4
	0x03664398 MOVZ W8, 0x1
	0x0366439C STRB W8, [X21 + 0x702]
	0x036643A0 LDRB W8, [X19 + 0x10]
	0x036643A4 CBNZ W8, 0x366451C
	0x036643A8 CBZ X20, 0x366449C
	0x036643AC LDR X21, [X19 + 0x28]
	0x036643B0 BL 0x1C16D44
	0x036643B4 CBZ X21, 0x3664518
	0x036643B8 LDR X8, [X21]
	0x036643BC MOV X0, X21
	0x036643C0 MOV X1, X20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, X1
	006 Move X1, X31
	007 Move X19, X0
	008 And W21, W2, 1
	009 Call Object..ctor, X0
	010 Move [X19+16], X20
	011 Move [X19+36], W21
	012 Compare X20, 0
	013 JumpIfEqual {24}
	014 Move W8, [X20+24]
	015 Move W9, 1
	016 Move [X19+37], W9
	017 Move [X19+24], X31
	018 Move [X19+32], W8
	019 Move X20, [X31+16]
	020 Move X19, [X31+24]
	021 Move X30, [X31+32]
	022 Move X21, [X31+40]
	023 Return 
	024 Call 0x1C17F20

Method: System.Object get_Current()

Disassembly:
	0x036643C4 LDR X9, [X8 + 0x358]
	0x036643C8 LDR X2, [X8 + 0x360]
	0x036643CC BLR X9
	0x036643D0 LDR X0, [X19 + 0x18]
	0x036643D4 CBZ X0, 0x3664518
	0x036643D8 LDR X8, [X0]
	0x036643DC LDR X9, [X8 + 0x298]
	0x036643E0 LDR X1, [X8 + 0x2A0]
	0x036643E4 BLR X9
	0x036643E8 SUBS W21, W0, 0x1
	0x036643EC B.MI 0x36644F8
	0x036643F0 ADRP X24, 0xAB9000
	0x036643F4 LDR X24, [X24 + 0x900]
	0x036643F8 LDR X22, [X19 + 0x20]
	0x036643FC MOV X0, X19
	0x03664400 MOV W1, W21
	0x03664404 BL 0x3664734
	0x03664408 CBZ X22, 0x3664518
	0x0366440C LDR X8, [X22]
	0x03664410 LDR X1, [X24]
	0x03664414 MOV X23, X0
	0x03664418 LDRH W9, [X8 + 0x12E]
	0x0366441C CBZ X9, 0x3664440
	0x03664420 LDR X10, [X8 + 0xB0]
	0x03664424 ADD X10, X10, 0x8
	0x03664428 LDUR X11, [X10 - 0x8]
	0x0366442C CMP X11, X1
	0x03664430 B.EQ 0x3664450
	0x03664434 SUBS X9, X9, 0x1

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0+24]
	004 Compare X8, 0
	005 JumpIfEqual {15}
	006 Move W9, [X0+36]
	007 Move W10, 16
	008 NotImplemented "Instruction CMP not yet implemented."
	009 Move W9, 24
	010 NotImplemented "Instruction CSEL not yet implemented."
	011 Move X0, [X8]
	012 Move X30, [X31+16]
	013 Move X19, [X31+24]
	014 Return X0
	015 Move X0, 0xA90000
	016 Move X0, [X0+1456]
	017 Call 0x1C17D08
	018 Call 0x1C17F10
	019 Move X19, X0
	020 Move X0, 0xABA000
	021 Move X0, [X0+656]
	022 Call 0x1C17D08
	023 Move X1, X0
	024 Move X0, X19
	025 Move X2, X31
	026 Call InvalidOperationException..ctor, X0, X1
	027 Move X0, 0xADA000
	028 Move X0, [X0+488]
	029 Call 0x1C17D08
	030 Move X1, X0
	031 Move X0, X19
	032 Call 0x1C17DEC

Method: System.Boolean MoveNext()

Disassembly:
	0x03664438 ADD X10, X10, 0x10
	0x0366443C B.NE 0x3664428
	0x03664440 MOV X0, X22
	0x03664444 MOV W2, W31
	0x03664448 BL 0x1C5C788
	0x0366444C B 0x366445C
	0x03664450 LDRSW X9, [X10]
	0x03664454 ADD X8, X8, X9, 0x4, LSL
	0x03664458 ADD X0, X8, 0x138
	0x0366445C LDP X8, X3, [X0]
	0x03664460 MOV X0, X22
	0x03664464 MOV X1, X20
	0x03664468 MOV X2, X23
	0x0366446C BLR X8
	0x03664470 TBZ X0, 0x0, 0x3664490
	0x03664474 LDR X0, [X19 + 0x18]
	0x03664478 CBZ X0, 0x3664518
	0x0366447C LDR X8, [X0]
	0x03664480 MOV W1, W21
	0x03664484 LDR X9, [X8 + 0x3D8]
	0x03664488 LDR X2, [X8 + 0x3E0]
	0x0366448C BLR X9
	0x03664490 SUBS W21, W21, 0x1
	0x03664494 B.PL 0x36643F8
	0x03664498 B 0x36644F8
	0x0366449C BL 0x1C16D44
	0x036644A0 LDR X0, [X19 + 0x18]
	0x036644A4 STR X31, [X19 + 0x30]
	0x036644A8 CBZ X0, 0x3664518
	0x036644AC LDR X8, [X0]
	0x036644B0 LDR X9, [X8 + 0x298]
	0x036644B4 LDR X1, [X8 + 0x2A0]
	0x036644B8 BLR X9
	0x036644BC SUBS W20, W0, 0x1
	0x036644C0 B.MI 0x36644F8
	0x036644C4 MOV X0, X19
	0x036644C8 MOV W1, W20
	0x036644CC BL 0x3664734
	0x036644D0 CBNZ X0, 0x36644F0

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0+16]
	004 Compare X8, 0
	005 JumpIfEqual {24}
	006 Move W9, [X0+32]
	007 Move W10, [X8+24]
	008 NotImplemented "Instruction CMP not yet implemented."
	009 Move W9, [X0+37]
	010 Compare W9, 0
	011 JumpIfEqual {14}
	012 Move X8, [X8+16]
	013 Move [X0+37], W31
	014 Move X8, [X0+24]
	015 Compare X8, 0
	016 JumpIfEqual {19}
	017 Move X8, [X8+32]
	018 Move [X0+24], X8
	019 NotImplemented "Instruction CMP not yet implemented."
	020 NotImplemented "Instruction CSET not yet implemented."
	021 Move X30, [X31+16]
	022 Move X19, [X31+24]
	023 Return X0
	024 Call 0x1C17F20
	025 Move X0, 0xA90000
	026 Move X0, [X0+1456]
	027 Call 0x1C17D08
	028 Call 0x1C17F10
	029 Move X19, X0
	030 Move X0, 0xABA000
	031 Move X0, [X0+648]
	032 Call 0x1C17D08
	033 Move X1, X0
	034 Move X0, X19
	035 Move X2, X31
	036 Call InvalidOperationException..ctor, X0, X1
	037 Move X0, 0xADA000
	038 Move X0, [X0+496]
	039 Call 0x1C17D08
	040 Move X1, X0
	041 Move X0, X19
	042 Call 0x1C17DEC

Method: System.Void Reset()

Disassembly:
	0x036644D4 LDR X0, [X19 + 0x18]
	0x036644D8 CBZ X0, 0x3664518
	0x036644DC LDR X8, [X0]
	0x036644E0 MOV W1, W20
	0x036644E4 LDR X9, [X8 + 0x3D8]
	0x036644E8 LDR X2, [X8 + 0x3E0]
	0x036644EC BLR X9
	0x036644F0 SUBS W20, W20, 0x1
	0x036644F4 B.PL 0x36644C4
	0x036644F8 LDR W8, [X19 + 0x48]
	0x036644FC LDP X22, X21, [X31 + 0x20]
	0x03664500 LDP X24, X23, [X31 + 0x10]
	0x03664504 ADD W8, W8, 0x1
	0x03664508 STR W8, [X19 + 0x48]
	0x0366450C LDP X20, X19, [X31 + 0x30]
	0x03664510 LDR X30, [X31], #0x40
	0x03664514 RET
	0x03664518 BL 0x1C16F20
	0x0366451C ADRP X0, 0xAB9000
	0x03664520 LDR X0, [X0 + 0x68]
	0x03664524 BL 0x1C16D08
	0x03664528 MOV X1, X31
	0x0366452C BL 0x320A1E4
	0x03664530 MOV X19, X0
	0x03664534 ADRP X0, 0xA8F000
	0x03664538 LDR X0, [X0 + 0xB40]
	0x0366453C BL 0x1C16D08
	0x03664540 BL 0x1C16F10
	0x03664544 MOV X1, X19
	0x03664548 MOV X2, X31
	0x0366454C MOV X20, X0

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0+16]
	004 Compare X8, 0
	005 JumpIfEqual {15}
	006 Move W9, [X0+32]
	007 Move W8, [X8+24]
	008 NotImplemented "Instruction CMP not yet implemented."
	009 Move W8, 1
	010 Move [X0+37], W8
	011 Move [X0+24], X31
	012 Move X30, [X31+16]
	013 Move X19, [X31+24]
	014 Return 
	015 Call 0x1C17F20
	016 Move X0, 0xA90000
	017 Move X0, [X0+1456]
	018 Call 0x1C17D08
	019 Call 0x1C17F10
	020 Move X19, X0
	021 Move X0, 0xABA000
	022 Move X0, [X0+648]
	023 Call 0x1C17D08
	024 Move X1, X0
	025 Move X0, X19
	026 Move X2, X31
	027 Call InvalidOperationException..ctor, X0, X1
	028 Move X0, 0xADA000
	029 Move X0, [X0+504]
	030 Call 0x1C17D08
	031 Move X1, X0
	032 Move X0, X19
	033 Call 0x1C17DEC

