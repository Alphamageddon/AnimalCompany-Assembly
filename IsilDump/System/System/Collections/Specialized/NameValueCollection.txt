Type: System.Collections.Specialized.NameValueCollection

Method: System.Void .ctor()

Disassembly:
	0x03664550 BL 0x3379A44
	0x03664554 ADRP X0, 0xAD9000
	0x03664558 LDR X0, [X0 + 0x248]
	0x0366455C BL 0x1C16D08
	0x03664560 MOV X1, X0
	0x03664564 MOV X0, X20
	0x03664568 BL 0x1C16DEC
	0x0366456C LDR X8, [X0]
	0x03664570 LDR X3, [X8 + 0x258]
	0x03664574 LDR X2, [X8 + 0x260]
	0x03664578 BR X3
	0x0366457C LDR X8, [X0]
	0x03664580 LDR X4, [X8 + 0x278]
	0x03664584 LDR X3, [X8 + 0x280]
	0x03664588 BR X4
	0x0366458C STP X30, X21, [X31 - 0x20]!
	0x03664590 STP X20, X19, [X31 + 0x10]
	0x03664594 ADRP X21, 0xD7C000
	0x03664598 LDRB W8, [X21 + 0x6EE]
	0x0366459C MOV W19, W1
	0x036645A0 MOV X20, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xD7D000
	006 Move X21, 0xADA000
	007 Move W8, [X20+1763]
	008 Move X21, [X21+512]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xADA000
	015 Move X0, [X0+512]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1763], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]

Method: System.Void .ctor(System.Collections.Specialized.NameValueCollection col)

Disassembly:
	0x03664604 LDP X30, X21, [X31], #0x20
	0x03664608 B 0x3663AC4
	0x0366460C BL 0x1C171E0
	0x03664610 STP X30, X21, [X31 - 0x20]!
	0x03664614 STP X20, X19, [X31 + 0x10]
	0x03664618 ADRP X21, 0xD7C000
	0x0366461C LDRB W8, [X21 + 0x703]
	0x03664620 MOV W19, W1
	0x03664624 MOV X20, X0
	0x03664628 TBNZ X8, 0x0, 0x3664640
	0x0366462C ADRP X0, 0xAD9000
	0x03664630 LDR X0, [X0 + 0x228]
	0x03664634 BL 0x1C16CF4
	0x03664638 MOVZ W8, 0x1
	0x0366463C STRB W8, [X21 + 0x703]
	0x03664640 LDR X0, [X20 + 0x18]
	0x03664644 CBZ X0, 0x36646A4
	0x03664648 LDR X8, [X0]
	0x0366464C MOV W1, W19
	0x03664650 LDR X9, [X8 + 0x2E8]
	0x03664654 LDR X2, [X8 + 0x2F0]
	0x03664658 BLR X9
	0x0366465C CBZ X0, 0x36646A4
	0x03664660 ADRP X9, 0xAD9000
	0x03664664 LDR X9, [X9 + 0x228]
	0x03664668 LDR X8, [X0]
	0x0366466C LDR X1, [X9]
	0x03664670 LDRB W10, [X8 + 0x130]
	0x03664674 LDRB W9, [X1 + 0x130]
	0x03664678 CMP W10, W9
	0x0366467C B.CC 0x36646A8
	0x03664680 LDR X8, [X8 + 0xC8]
	0x03664684 ADD X8, X8, X9, 0x3, LSL
	0x03664688 LDUR X8, [X8 - 0x8]
	0x0366468C CMP X8, X1
	0x03664690 B.NE 0x36646A8

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xD7D000
	007 Move W8, [X21+1764]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xADA000
	015 Move X0, [X0+512]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+1764], W8
	019 Move X22, 0xADA000
	020 Move X22, [X22+512]
	021 Compare X19, 0
	022 JumpIfEqual {29}
	023 Move X0, [X22]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Move X21, [X19+32]
	029 Move X21, X31
	030 Move X0, [X22]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {35}
	034 Call 0x1C17DFC
	035 Move X0, X20
	036 Move X1, X21
	037 Call NameObjectCollectionBase..ctor, X0, X1
	038 Move X0, X20
	039 Move X1, X19
	040 Move X20, [X31+32]
	041 Move X19, [X31+40]
	042 Move X22, [X31+16]
	043 Move X21, [X31+24]
	044 Move X30, [X31+48]
	045 Call NameValueCollection.Add, X0, X1
	046 Return 

Method: System.Void .ctor(System.Int32 capacity)

Disassembly:
	0x03664874 MOV W1, W21
	0x03664878 BL 0x3664734
	0x0366487C CBZ X20, 0x36648B0
	0x03664880 LDR W8, [X20 + 0x18]
	0x03664884 CMP X21, X8
	0x03664888 B.CS 0x36648B4
	0x0366488C STR X0, [X23, X21, LSL #3]
	0x03664890 ADD X21, X21, 0x1
	0x03664894 CMP X22, X21
	0x03664898 B.NE 0x3664870
	0x0366489C MOV X0, X20
	0x036648A0 LDP X20, X19, [X31 + 0x20]
	0x036648A4 LDP X22, X21, [X31 + 0x10]
	0x036648A8 LDP X30, X23, [X31], #0x30
	0x036648AC RET
	0x036648B0 BL 0x1C16F20
	0x036648B4 BL 0x1C16F28
	0x036648B8 STP X30, X21, [X31 - 0x20]!
	0x036648BC STP X20, X19, [X31 + 0x10]
	0x036648C0 ADRP X20, 0xD7C000
	0x036648C4 ADRP X21, 0xAD9000
	0x036648C8 LDRB W8, [X20 + 0x6F0]
	0x036648CC LDR X21, [X21 + 0x200]
	0x036648D0 MOV X19, X0
	0x036648D4 TBNZ X8, 0x0, 0x36648EC

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xD7D000
	007 Move X22, 0xADA000
	008 Move W8, [X21+1765]
	009 Move X22, [X22+512]
	010 Move W19, W1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xADA000
	017 Move X0, [X0+512]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+1765], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move X0, X20
	027 Move W1, W19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X30, [X31+48]

Method: System.Void .ctor(System.Int32 capacity, System.Collections.IEqualityComparer equalityComparer)

Disassembly:
	0x03664988 RET
	0x0366498C BL 0x1C16F20
	0x03664990 BL 0x1C171E0
	0x03664994 STR X30, [X31 - 0x10]!
	0x03664998 LDR X0, [X0 + 0x10]
	0x0366499C CBZ X0, 0x36649B4
	0x036649A0 LDR X8, [X0]
	0x036649A4 LDR X4, [X8 + 0x2F8]
	0x036649A8 LDR X3, [X8 + 0x300]
	0x036649AC LDR X30, [X31], #0x10
	0x036649B0 BR X4
	0x036649B4 BL 0x1C16F20
	0x036649B8 STR X30, [X31 - 0x10]!
	0x036649BC LDR X0, [X0 + 0x10]
	0x036649C0 CBZ X0, 0x36649D8
	0x036649C4 LDR X8, [X0]
	0x036649C8 LDR X2, [X8 + 0x298]
	0x036649CC LDR X1, [X8 + 0x2A0]
	0x036649D0 LDR X30, [X31], #0x10
	0x036649D4 BR X2
	0x036649D8 BL 0x1C16F20
	0x036649DC MOV W0, W31
	0x036649E0 RET
	0x036649E4 MOV W0, W31
	0x036649E8 RET
	0x036649EC STR X30, [X31 - 0x10]!
	0x036649F0 LDR X0, [X0 + 0x10]
	0x036649F4 CBZ X0, 0x3664A0C
	0x036649F8 LDR X8, [X0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0xD7D000
	008 Move X23, 0xADA000
	009 Move W8, [X22+1766]
	010 Move X23, [X23+512]
	011 Move X21, X2
	012 Move W19, W1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0xADA000
	019 Move X0, [X0+512]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+1766], W8
	023 Move X0, [X23]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Move X0, X20
	029 Move X1, X21
	030 Call NameObjectCollectionBase..ctor, X0, X1
	031 Move X0, X20
	032 Move W1, W19
	033 Move X20, [X31+32]
	034 Move X19, [X31+40]
	035 Move X22, [X31+16]
	036 Move X21, [X31+24]
	037 Move X30, [X31+48]
	038 Move X23, [X31+56]
	039 Call NameObjectCollectionBase.Reset, X0, X1
	040 Return 

Method: System.Void .ctor(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context)

Disassembly:
	0x03664A28 LDR X30, [X31], #0x10
	0x03664A2C BR X2
	0x03664A30 BL 0x1C16F20
	0x03664A34 STR X30, [X31 - 0x10]!
	0x03664A38 LDR X0, [X0 + 0x10]
	0x03664A3C CBZ X0, 0x3664A54
	0x03664A40 LDR X8, [X0]
	0x03664A44 LDR X3, [X8 + 0x348]
	0x03664A48 LDR X2, [X8 + 0x350]
	0x03664A4C LDR X30, [X31], #0x10
	0x03664A50 BR X3
	0x03664A54 BL 0x1C16F20
	0x03664A58 STR X30, [X31 - 0x10]!
	0x03664A5C LDR X0, [X0 + 0x10]
	0x03664A60 CBZ X0, 0x3664A78
	0x03664A64 LDR X8, [X0]
	0x03664A68 LDR X4, [X8 + 0x368]
	0x03664A6C LDR X3, [X8 + 0x370]
	0x03664A70 LDR X30, [X31], #0x10
	0x03664A74 BR X4
	0x03664A78 BL 0x1C16F20
	0x03664A7C STR X30, [X31 - 0x10]!
	0x03664A80 LDR X0, [X0 + 0x10]
	0x03664A84 CBZ X0, 0x3664A9C
	0x03664A88 LDR X8, [X0]
	0x03664A8C LDR X3, [X8 + 0x398]
	0x03664A90 LDR X2, [X8 + 0x3A0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xD7D000
	007 Move X22, 0xADA000
	008 Move W8, [X21+1767]
	009 Move X22, [X22+512]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xADA000
	017 Move X0, [X0+512]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+1767], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move X0, X20
	027 Move X1, X31
	028 Call Object..ctor, X0
	029 Move [X20+64], X19
	030 Move X20, [X31+32]
	031 Move X19, [X31+40]
	032 Move X22, [X31+16]
	033 Move X21, [X31+24]
	034 Move X30, [X31+48]
	035 Return 

Method: System.Void InvalidateCachedArrays()

Disassembly:
	0x03664ABC BR X4
	0x03664AC0 BL 0x1C16F20

ISIL:
	001 Move [X0+88], X31
	002 Move [X0+96], X31
	003 Return 

Method: System.String GetAsOneString(System.Collections.ArrayList list)

Disassembly:
	0x03664AC4 MOV W0, W31
	0x03664AC8 RET
	0x03664ACC STR X30, [X31 - 0x10]!
	0x03664AD0 LDR X0, [X0 + 0x10]
	0x03664AD4 CBZ X0, 0x3664AEC
	0x03664AD8 LDR X8, [X0]
	0x03664ADC LDR X3, [X8 + 0x3C8]
	0x03664AE0 LDR X2, [X8 + 0x3D0]
	0x03664AE4 LDR X30, [X31], #0x10
	0x03664AE8 BR X3
	0x03664AEC BL 0x1C16F20
	0x03664AF0 STR X30, [X31 - 0x10]!
	0x03664AF4 LDR X0, [X0 + 0x10]
	0x03664AF8 CBZ X0, 0x3664B10
	0x03664AFC LDR X8, [X0]
	0x03664B00 LDR X3, [X8 + 0x3D8]
	0x03664B04 LDR X2, [X8 + 0x3E0]
	0x03664B08 LDR X30, [X31], #0x10
	0x03664B0C BR X3
	0x03664B10 BL 0x1C16F20
	0x03664B14 STR X30, [X31 - 0x10]!
	0x03664B18 LDR X0, [X0 + 0x10]
	0x03664B1C CBZ X0, 0x3664B34
	0x03664B20 LDR X8, [X0]
	0x03664B24 LDR X2, [X8 + 0x2D8]
	0x03664B28 LDR X1, [X8 + 0x2E0]
	0x03664B2C LDR X30, [X31], #0x10
	0x03664B30 BR X2
	0x03664B34 BL 0x1C16F20
	0x03664B38 B 0x3664918
	0x03664B3C STR X30, [X31 - 0x30]!
	0x03664B40 STP X22, X21, [X31 + 0x10]
	0x03664B44 STP X20, X19, [X31 + 0x20]
	0x03664B48 ADRP X22, 0xD7C000
	0x03664B4C LDRB W8, [X22 + 0x6F2]
	0x03664B50 MOV X19, X2
	0x03664B54 MOV W20, W1
	0x03664B58 MOV X21, X0
	0x03664B5C TBNZ X8, 0x0, 0x3664B74
	0x03664B60 ADRP X0, 0xA91000
	0x03664B64 LDR X0, [X0 + 0x278]
	0x03664B68 BL 0x1C16CF4
	0x03664B6C MOVZ W8, 0x1
	0x03664B70 STRB W8, [X22 + 0x6F2]
	0x03664B74 CBZ X19, 0x3664B90
	0x03664B78 ADRP X8, 0xA91000
	0x03664B7C LDR X8, [X8 + 0x278]
	0x03664B80 LDR X1, [X8]
	0x03664B84 LDR X8, [X19]
	0x03664B88 CMP X8, X1
	0x03664B8C B.NE 0x3664BC0
	0x03664B90 LDR X0, [X21 + 0x10]
	0x03664B94 CBZ X0, 0x3664BBC
	0x03664B98 LDR X8, [X0]
	0x03664B9C MOV W1, W20
	0x03664BA0 MOV X2, X19
	0x03664BA4 LDP X20, X19, [X31 + 0x20]
	0x03664BA8 LDR X4, [X8 + 0x2F8]
	0x03664BAC LDR X3, [X8 + 0x300]
	0x03664BB0 LDP X22, X21, [X31 + 0x10]
	0x03664BB4 LDR X30, [X31], #0x30
	0x03664BB8 BR X4
	0x03664BBC BL 0x1C16F20
	0x03664BC0 MOV X0, X19
	0x03664BC4 BL 0x1C171E0
	0x03664BC8 STP X30, X21, [X31 - 0x20]!
	0x03664BCC STP X20, X19, [X31 + 0x10]
	0x03664BD0 ADRP X21, 0xD7C000
	0x03664BD4 LDRB W8, [X21 + 0x6F3]
	0x03664BD8 MOV X19, X1
	0x03664BDC MOV X20, X0
	0x03664BE0 TBNZ X8, 0x0, 0x3664BF8
	0x03664BE4 ADRP X0, 0xA91000
	0x03664BE8 LDR X0, [X0 + 0x278]
	0x03664BEC BL 0x1C16CF4
	0x03664BF0 MOVZ W8, 0x1
	0x03664BF4 STRB W8, [X21 + 0x6F3]
	0x03664BF8 CBZ X19, 0x3664C14
	0x03664BFC ADRP X8, 0xA91000
	0x03664C00 LDR X8, [X8 + 0x278]
	0x03664C04 LDR X1, [X8]
	0x03664C08 LDR X8, [X19]
	0x03664C0C CMP X8, X1
	0x03664C10 B.NE 0x3664C3C
	0x03664C14 LDR X0, [X20 + 0x10]
	0x03664C18 CBZ X0, 0x3664C38
	0x03664C1C LDR X8, [X0]
	0x03664C20 MOV X1, X19
	0x03664C24 LDP X20, X19, [X31 + 0x10]
	0x03664C28 LDR X3, [X8 + 0x308]
	0x03664C2C LDR X2, [X8 + 0x310]
	0x03664C30 LDP X30, X21, [X31], #0x20
	0x03664C34 BR X3
	0x03664C38 BL 0x1C16F20
	0x03664C3C MOV X0, X19
	0x03664C40 BL 0x1C171E0
	0x03664C44 STP X30, X21, [X31 - 0x20]!
	0x03664C48 STP X20, X19, [X31 + 0x10]
	0x03664C4C ADRP X21, 0xD7C000
	0x03664C50 LDRB W8, [X21 + 0x6F4]
	0x03664C54 MOV X19, X1
	0x03664C58 MOV X20, X0
	0x03664C5C TBNZ X8, 0x0, 0x3664C74
	0x03664C60 ADRP X0, 0xA91000
	0x03664C64 LDR X0, [X0 + 0x278]
	0x03664C68 BL 0x1C16CF4
	0x03664C6C MOVZ W8, 0x1
	0x03664C70 STRB W8, [X21 + 0x6F4]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0xD7D000
	008 Move W8, [X20+1768]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0xA90000
	015 Move X0, [X0+2288]
	016 Call 0x1C17CF4
	017 Move X0, 0xA92000
	018 Move X0, [X0+632]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X20+1768], W8
	022 Compare X19, 0
	023 JumpIfEqual {46}
	024 Move X8, [X19]
	025 Move X0, X19
	026 Move X9, [X8+664]
	027 Move X1, [X8+672]
	028 NotImplemented "Instruction BLR not yet implemented."
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move X8, [X19]
	031 Move X0, X19
	032 Move W1, W31
	033 Move X9, [X8+744]
	034 Move X2, [X8+752]
	035 NotImplemented "Instruction BLR not yet implemented."
	036 Compare X0, 0
	037 JumpIfEqual {47}
	038 Move X8, 0xA92000
	039 Move X8, [X8+632]
	040 Move X1, [X8]
	041 Move X8, [X0]
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Call 0x1C181E0
	044 Move W20, W0
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Move X0, X31
	047 Move X20, [X31+32]
	048 Move X19, [X31+40]
	049 Move X22, [X31+16]
	050 Move X21, [X31+24]
	051 Move X30, [X31+48]
	052 Move X23, [X31+56]
	053 Return X0
	054 Move X8, [X19]
	055 Move X0, X19
	056 Move W1, W31
	057 Move X9, [X8+744]
	058 Move X2, [X8+752]
	059 NotImplemented "Instruction BLR not yet implemented."
	060 Move X8, 0xA90000
	061 Move X8, [X8+2288]
	062 Move X22, X0
	063 Move X8, [X8]
	064 Move X0, X8
	065 Call 0x1C17F10
	066 Move X23, 0xA92000
	067 Move X23, [X23+632]
	068 Move X21, X0
	069 Compare X22, 0
	070 JumpIfEqual {74}
	071 Move X1, [X23]
	072 Move X8, [X22]
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Move X0, X21
	075 Move X1, X22
	076 Move X2, X31
	077 Call StringBuilder..ctor, X0, X1
	078 Compare X21, 0
	079 JumpIfEqual {117}
	080 NotImplemented "Instruction CMP not yet implemented."
	081 Move W22, 1
	082 Move W1, 44
	083 Move X0, X21
	084 Move X2, X31
	085 Call StringBuilder.Append, X0, X1
	086 Move X8, [X19]
	087 Move X0, X19
	088 Move W1, W22
	089 Move X9, [X8+744]
	090 Move X2, [X8+752]
	091 NotImplemented "Instruction BLR not yet implemented."
	092 Move X8, X0
	093 Compare X0, 0
	094 JumpIfEqual {98}
	095 Move X1, [X23]
	096 Move X9, [X8]
	097 NotImplemented "Instruction CMP not yet implemented."
	098 Move X0, X21
	099 Move X1, X8
	100 Move X2, X31
	101 Call StringBuilder.Append, X0, X1
	102 Add W22, W22, 1
	103 NotImplemented "Instruction CMP not yet implemented."
	104 Move X8, [X21]
	105 Move X0, X21
	106 Move X20, [X31+32]
	107 Move X19, [X31+40]
	108 Move X22, [X31+16]
	109 Move X21, [X31+24]
	110 Move X2, [X8+360]
	111 Move X1, [X8+368]
	112 Move X30, [X31+48]
	113 Move X23, [X31+56]
	114 CallNoReturn X2
	115 Move X0, X8
	116 Call 0x1C181E0
	117 Call 0x1C17F20
	118 Move X0, X22
	119 Call 0x1C181E0

Method: System.String[] GetAsStringArray(System.Collections.ArrayList list)

Disassembly:
	0x03664C74 CBZ X19, 0x3664C90
	0x03664C78 ADRP X8, 0xA91000
	0x03664C7C LDR X8, [X8 + 0x278]
	0x03664C80 LDR X1, [X8]
	0x03664C84 LDR X8, [X19]
	0x03664C88 CMP X8, X1
	0x03664C8C B.NE 0x3664CB8
	0x03664C90 LDR X0, [X20 + 0x10]
	0x03664C94 CBZ X0, 0x3664CB4
	0x03664C98 LDR X8, [X0]
	0x03664C9C MOV X1, X19
	0x03664CA0 LDP X20, X19, [X31 + 0x10]
	0x03664CA4 LDR X3, [X8 + 0x348]
	0x03664CA8 LDR X2, [X8 + 0x350]
	0x03664CAC LDP X30, X21, [X31], #0x20
	0x03664CB0 BR X3
	0x03664CB4 BL 0x1C16F20
	0x03664CB8 MOV X0, X19
	0x03664CBC BL 0x1C171E0
	0x03664CC0 STP X30, X21, [X31 - 0x20]!
	0x03664CC4 STP X20, X19, [X31 + 0x10]
	0x03664CC8 ADRP X21, 0xD7C000
	0x03664CCC LDRB W8, [X21 + 0x6F5]
	0x03664CD0 MOV X19, X1
	0x03664CD4 MOV X20, X0
	0x03664CD8 TBNZ X8, 0x0, 0x3664CF0
	0x03664CDC ADRP X0, 0xA91000
	0x03664CE0 LDR X0, [X0 + 0x278]
	0x03664CE4 BL 0x1C16CF4
	0x03664CE8 MOVZ W8, 0x1
	0x03664CEC STRB W8, [X21 + 0x6F5]
	0x03664CF0 CBZ X19, 0x3664D0C
	0x03664CF4 ADRP X8, 0xA91000
	0x03664CF8 LDR X8, [X8 + 0x278]
	0x03664CFC LDR X1, [X8]
	0x03664D00 LDR X8, [X19]
	0x03664D04 CMP X8, X1
	0x03664D08 B.NE 0x3664D34
	0x03664D0C LDR X0, [X20 + 0x10]
	0x03664D10 CBZ X0, 0x3664D30

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xD7D000
	006 Move W8, [X20+1769]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xA90000
	013 Move X0, [X0+2760]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+1769], W8
	017 Compare X19, 0
	018 JumpIfEqual {42}
	019 Move X8, [X19]
	020 Move X0, X19
	021 Move X9, [X8+664]
	022 Move X1, [X8+672]
	023 NotImplemented "Instruction BLR not yet implemented."
	024 Compare W0, 0
	025 JumpIfEqual {42}
	026 Move X8, 0xA90000
	027 Move X8, [X8+2760]
	028 Move W20, W0
	029 Move W1, W20
	030 Move X0, [X8]
	031 Call 0x1C17D6C
	032 Move X8, [X19]
	033 Move X21, X0
	034 Move X0, X19
	035 Move W1, W31
	036 Move X9, [X8+888]
	037 Move X5, [X8+896]
	038 Move X2, X21
	039 Move W3, W31
	040 Move W4, W20
	041 NotImplemented "Instruction BLR not yet implemented."
	042 Move X21, X31
	043 Move X20, [X31+16]
	044 Move X19, [X31+24]
	045 Move X0, X21
	046 Move X30, [X31+32]
	047 Move X21, [X31+40]
	048 Return X0

Method: System.Void Add(System.Collections.Specialized.NameValueCollection c)

Disassembly:
	0x03664714 LDUR X8, [X8 - 0x8]
	0x03664718 CMP X8, X1
	0x0366471C B.NE 0x366472C
	0x03664720 LDP X20, X19, [X31 + 0x10]
	0x03664724 LDP X30, X21, [X31], #0x20
	0x03664728 B 0x3663C74
	0x0366472C BL 0x1C171E0
	0x03664730 B 0x3664734
	0x03664734 STP X30, X21, [X31 - 0x20]!
	0x03664738 STP X20, X19, [X31 + 0x10]
	0x0366473C ADRP X21, 0xD7C000
	0x03664740 LDRB W8, [X21 + 0x704]
	0x03664744 MOV W19, W1
	0x03664748 MOV X20, X0
	0x0366474C TBNZ X8, 0x0, 0x3664764
	0x03664750 ADRP X0, 0xAD9000
	0x03664754 LDR X0, [X0 + 0x228]
	0x03664758 BL 0x1C16CF4
	0x0366475C MOVZ W8, 0x1
	0x03664760 STRB W8, [X21 + 0x704]
	0x03664764 LDR X0, [X20 + 0x18]
	0x03664768 CBZ X0, 0x36647C8
	0x0366476C LDR X8, [X0]
	0x03664770 MOV W1, W19
	0x03664774 LDR X9, [X8 + 0x2E8]
	0x03664778 LDR X2, [X8 + 0x2F0]
	0x0366477C BLR X9
	0x03664780 CBZ X0, 0x36647C8
	0x03664784 ADRP X9, 0xAD9000
	0x03664788 LDR X9, [X9 + 0x228]
	0x0366478C LDR X8, [X0]
	0x03664790 LDR X1, [X9]
	0x03664794 LDRB W10, [X8 + 0x130]
	0x03664798 LDRB W9, [X1 + 0x130]
	0x0366479C CMP W10, W9
	0x036647A0 B.CC 0x36647CC
	0x036647A4 LDR X8, [X8 + 0xC8]
	0x036647A8 ADD X8, X8, X9, 0x3, LSL
	0x036647AC LDUR X8, [X8 - 0x8]
	0x036647B0 CMP X8, X1
	0x036647B4 B.NE 0x36647CC
	0x036647B8 LDR X0, [X0 + 0x10]
	0x036647BC LDP X20, X19, [X31 + 0x10]
	0x036647C0 LDP X30, X21, [X31], #0x20
	0x036647C4 RET
	0x036647C8 BL 0x1C16F20
	0x036647CC BL 0x1C171E0
	0x036647D0 STP X30, X19, [X31 - 0x10]!
	0x036647D4 MOV X19, X0
	0x036647D8 LDR X0, [X0 + 0x60]
	0x036647DC CBNZ X0, 0x36647EC
	0x036647E0 MOV X0, X19
	0x036647E4 BL 0x36647F4
	0x036647E8 STR X0, [X19 + 0x60]
	0x036647EC LDP X30, X19, [X31], #0x10
	0x036647F0 RET
	0x036647F4 STP X30, X23, [X31 - 0x30]!
	0x036647F8 STP X22, X21, [X31 + 0x10]
	0x036647FC STP X20, X19, [X31 + 0x20]
	0x03664800 ADRP X20, 0xD7C000
	0x03664804 LDRB W8, [X20 + 0x708]
	0x03664808 MOV X19, X0
	0x0366480C TBNZ X8, 0x0, 0x3664824
	0x03664810 ADRP X0, 0xA8F000
	0x03664814 LDR X0, [X0 + 0xAC8]
	0x03664818 BL 0x1C16CF4
	0x0366481C MOVZ W8, 0x1
	0x03664820 STRB W8, [X20 + 0x708]
	0x03664824 LDR X0, [X19 + 0x18]
	0x03664828 CBZ X0, 0x36648B0
	0x0366482C LDR X8, [X0]
	0x03664830 ADRP X20, 0xA8F000
	0x03664834 LDR X9, [X8 + 0x298]
	0x03664838 LDR X1, [X8 + 0x2A0]
	0x0366483C LDR X20, [X20 + 0xAC8]
	0x03664840 BLR X9
	0x03664844 LDR X8, [X20]
	0x03664848 MOV W22, W0
	0x0366484C MOV W1, W22
	0x03664850 MOV X0, X8
	0x03664854 BL 0x1C16D6C
	0x03664858 CMP W22, 0x1
	0x0366485C MOV X20, X0
	0x03664860 B.LT 0x366489C
	0x03664864 MOV X21, X31
	0x03664868 MOV W22, W22
	0x0366486C ADD X23, X20, 0x20
	0x03664870 MOV X0, X19

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Compare X1, 0
	011 JumpIfEqual {76}
	012 Move [X0+88], X31
	013 Move [X0+96], X31
	014 Move X8, [X1]
	015 Move X19, X1
	016 Move X20, X0
	017 Move X0, X19
	018 Move X9, [X8+536]
	019 Move X1, [X8+544]
	020 NotImplemented "Instruction BLR not yet implemented."
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Move W21, W0
	023 Move W22, W31
	024 Move X8, [X19]
	025 Move X0, X19
	026 Move W1, W22
	027 Move X9, [X8+696]
	028 Move X2, [X8+704]
	029 NotImplemented "Instruction BLR not yet implemented."
	030 Move X8, [X19]
	031 Move X23, X0
	032 Move X0, X19
	033 Move W1, W22
	034 Move X9, [X8+680]
	035 Move X2, [X8+688]
	036 NotImplemented "Instruction BLR not yet implemented."
	037 Compare X0, 0
	038 JumpIfEqual {56}
	039 Move X8, [X0+24]
	040 Move X24, X0
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Move X25, X31
	043 And X8, X8, 0
	044 Add X26, X24, 32
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Move X8, [X20]
	047 Move X2, [X26]
	048 Move X0, X20
	049 Move X1, X23
	050 Move X9, [X8+584]
	051 Move X3, [X8+592]
	052 NotImplemented "Instruction BLR not yet implemented."
	053 Move W8, [X24+24]
	054 Add X25, X25, 1
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Move X8, [X20]
	057 Move X0, X20
	058 Move X1, X23
	059 Move X2, X31
	060 Move X9, [X8+584]
	061 Move X3, [X8+592]
	062 NotImplemented "Instruction BLR not yet implemented."
	063 Add W22, W22, 1
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Move X20, [X31+64]
	066 Move X19, [X31+72]
	067 Move X22, [X31+48]
	068 Move X21, [X31+56]
	069 Move X24, [X31+32]
	070 Move X23, [X31+40]
	071 Move X26, [X31+16]
	072 Move X25, [X31+24]
	073 Move X30, [X31+80]
	074 Return 
	075 Call 0x1C17F28
	076 Move X0, 0xA95000
	077 Move X0, [X0+1320]
	078 Call 0x1C17D08
	079 Call 0x1C17F10
	080 Move X19, X0
	081 Move X0, 0xAC5000
	082 Move X0, [X0+1336]
	083 Call 0x1C17D08
	084 Move X1, X0
	085 Move X0, X19
	086 Move X2, X31
	087 Call ArgumentNullException..ctor, X0, X1
	088 Move X0, 0xADA000
	089 Move X0, [X0+520]
	090 Call 0x1C17D08
	091 Move X1, X0
	092 Move X0, X19
	093 Call 0x1C17DEC

Method: System.Void Clear()

Disassembly:
	0x03664D14 LDR X8, [X0]
	0x03664D18 MOV X1, X19
	0x03664D1C LDP X20, X19, [X31 + 0x10]
	0x03664D20 LDR X3, [X8 + 0x398]
	0x03664D24 LDR X2, [X8 + 0x3A0]
	0x03664D28 LDP X30, X21, [X31], #0x20
	0x03664D2C BR X3
	0x03664D30 BL 0x1C16F20
	0x03664D34 MOV X0, X19
	0x03664D38 BL 0x1C171E0
	0x03664D3C STR X30, [X31 - 0x30]!
	0x03664D40 STP X22, X21, [X31 + 0x10]
	0x03664D44 STP X20, X19, [X31 + 0x20]
	0x03664D48 ADRP X22, 0xD7C000
	0x03664D4C LDRB W8, [X22 + 0x6F6]
	0x03664D50 MOV X19, X2
	0x03664D54 MOV W20, W1
	0x03664D58 MOV X21, X0
	0x03664D5C TBNZ X8, 0x0, 0x3664D74
	0x03664D60 ADRP X0, 0xA91000
	0x03664D64 LDR X0, [X0 + 0x278]
	0x03664D68 BL 0x1C16CF4
	0x03664D6C MOVZ W8, 0x1
	0x03664D70 STRB W8, [X22 + 0x6F6]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move W8, [X0+16]
	004 Compare W8, 0
	005 JumpIfNotEqual {10}
	006 Move [X0+88], X31
	007 Move [X0+96], X31
	008 Move X30, [X31+16]
	009 Move X19, [X31+24]
	010 Move X0, 0xA90000
	011 Move X0, [X0+2880]
	012 Call 0x1C17D08
	013 Call 0x1C17F10
	014 Move X19, X0
	015 Move X0, 0xABA000
	016 Move X0, [X0+104]
	017 Call 0x1C17D08
	018 Move X1, X0
	019 Move X0, X19
	020 Move X2, X31
	021 Call NotSupportedException..ctor, X0, X1
	022 Move X0, 0xADA000
	023 Move X0, [X0+528]
	024 Call 0x1C17D08
	025 Move X1, X0
	026 Move X0, X19
	027 Call 0x1C17DEC

Method: System.Void Add(System.String name, System.String value)

Disassembly:
	0x03664DE0 TBNZ X8, 0x0, 0x3664DF8
	0x03664DE4 ADRP X0, 0xA91000
	0x03664DE8 LDR X0, [X0 + 0x278]
	0x03664DEC BL 0x1C16CF4
	0x03664DF0 MOVZ W8, 0x1
	0x03664DF4 STRB W8, [X21 + 0x6F7]
	0x03664DF8 CBZ X19, 0x3664E14
	0x03664DFC ADRP X8, 0xA91000
	0x03664E00 LDR X8, [X8 + 0x278]
	0x03664E04 LDR X1, [X8]
	0x03664E08 LDR X8, [X19]
	0x03664E0C CMP X8, X1
	0x03664E10 B.NE 0x3664E3C
	0x03664E14 LDR X0, [X20 + 0x10]
	0x03664E18 CBZ X0, 0x3664E38
	0x03664E1C LDR X8, [X0]
	0x03664E20 MOV X1, X19
	0x03664E24 LDP X20, X19, [X31 + 0x10]
	0x03664E28 LDR X3, [X8 + 0x3C8]
	0x03664E2C LDR X2, [X8 + 0x3D0]
	0x03664E30 LDP X30, X21, [X31], #0x20
	0x03664E34 BR X3
	0x03664E38 BL 0x1C16F20
	0x03664E3C MOV X0, X19
	0x03664E40 BL 0x1C171E0
	0x03664E44 STR X30, [X31 - 0x10]!
	0x03664E48 LDR X0, [X0 + 0x10]
	0x03664E4C CBZ X0, 0x3664E64
	0x03664E50 LDR X8, [X0]
	0x03664E54 LDR X4, [X8 + 0x368]
	0x03664E58 LDR X3, [X8 + 0x370]
	0x03664E5C LDR X30, [X31], #0x10
	0x03664E60 BR X4
	0x03664E64 BL 0x1C16F20
	0x03664E68 STR X30, [X31 - 0x10]!
	0x03664E6C LDR X0, [X0 + 0x10]
	0x03664E70 CBZ X0, 0x3664E88
	0x03664E74 LDR X8, [X0]
	0x03664E78 LDR X2, [X8 + 0x388]
	0x03664E7C LDR X1, [X8 + 0x390]
	0x03664E80 LDR X30, [X31], #0x10
	0x03664E84 BR X2
	0x03664E88 BL 0x1C16F20
	0x03664E8C STP X30, X21, [X31 - 0x20]!
	0x03664E90 STP X20, X19, [X31 + 0x10]
	0x03664E94 ADRP X20, 0xD7C000
	0x03664E98 ADRP X21, 0xABC000
	0x03664E9C LDRB W8, [X20 + 0x6F8]
	0x03664EA0 LDR X21, [X21 + 0xBA0]
	0x03664EA4 MOV X19, X0
	0x03664EA8 TBNZ X8, 0x0, 0x3664EC0
	0x03664EAC ADRP X0, 0xABC000
	0x03664EB0 LDR X0, [X0 + 0xBA0]
	0x03664EB4 BL 0x1C16CF4
	0x03664EB8 MOVZ W8, 0x1
	0x03664EBC STRB W8, [X20 + 0x6F8]
	0x03664EC0 LDR X0, [X21]
	0x03664EC4 BL 0x1C16F10
	0x03664EC8 MOV X1, X31
	0x03664ECC MOV X20, X0
	0x03664ED0 BL 0x3351F5C
	0x03664ED4 STR X20, [X19 + 0x10]
	0x03664ED8 MOV X0, X19
	0x03664EDC LDP X20, X19, [X31 + 0x10]
	0x03664EE0 MOV X1, X31
	0x03664EE4 LDP X30, X21, [X31], #0x20
	0x03664EE8 B 0x33BDD8C
	0x03664EEC STR X30, [X31 - 0x30]!
	0x03664EF0 STP X22, X21, [X31 + 0x10]
	0x03664EF4 STP X20, X19, [X31 + 0x20]
	0x03664EF8 ADRP X20, 0xD7C000
	0x03664EFC ADRP X22, 0xABC000
	0x03664F00 ADRP X21, 0xABF000
	0x03664F04 LDRB W8, [X20 + 0x6FE]
	0x03664F08 LDR X22, [X22 + 0xBA0]
	0x03664F0C LDR X21, [X21 + 0xDB8]
	0x03664F10 MOV X19, X0
	0x03664F14 TBNZ X8, 0x0, 0x3664F38
	0x03664F18 ADRP X0, 0xABC000
	0x03664F1C LDR X0, [X0 + 0xBA0]
	0x03664F20 BL 0x1C16CF4
	0x03664F24 ADRP X0, 0xABF000
	0x03664F28 LDR X0, [X0 + 0xDB8]
	0x03664F2C BL 0x1C16CF4
	0x03664F30 MOVZ W8, 0x1
	0x03664F34 STRB W8, [X20 + 0x6FE]
	0x03664F38 LDR X0, [X22]
	0x03664F3C BL 0x1C16F10
	0x03664F40 MOV X1, X31
	0x03664F44 MOV X20, X0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xD7D000
	007 Move W8, [X22+1770]
	008 Move X19, X2
	009 Move X20, X1
	010 Move X21, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0xABD000
	016 Move X0, [X0+2976]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+1770], W8
	020 Move W8, [X21+16]
	021 Compare W8, 0
	022 JumpIfNotEqual {88}
	023 Move X22, 0xABD000
	024 Move X22, [X22+2976]
	025 Move X0, X21
	026 Move X1, X20
	027 Move [X21+88], X31
	028 Move [X21+96], X31
	029 Call NameObjectCollectionBase.FindEntry, X0, X1
	030 Compare X0, 0
	031 JumpIfEqual {55}
	032 Move X0, [X0+24]
	033 Move X1, [X22]
	034 Compare X0, 0
	035 JumpIfEqual {56}
	036 Move X8, [X0]
	037 Move W9, [X1+304]
	038 Move W10, [X8+304]
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Move X10, [X8+200]
	041 Add X9, X10, X9
	042 NotImplemented "Instruction LDUR not yet implemented."
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Compare X19, 0
	045 JumpIfEqual {82}
	046 Move X3, [X8+776]
	047 Move X2, [X8+784]
	048 Move X1, X19
	049 Move X20, [X31+32]
	050 Move X19, [X31+40]
	051 Move X22, [X31+16]
	052 Move X21, [X31+24]
	053 Move X30, [X31+48]
	054 CallNoReturn X3
	055 Move X1, [X22]
	056 Move X0, X1
	057 Call 0x1C17F10
	058 Move W1, 1
	059 Move X2, X31
	060 Move X22, X0
	061 Call ArrayList..ctor, X0, X1
	062 Compare X19, 0
	063 JumpIfEqual {72}
	064 Compare X22, 0
	065 JumpIfEqual {107}
	066 Move X8, [X22]
	067 Move X0, X22
	068 Move X1, X19
	069 Move X9, [X8+776]
	070 Move X2, [X8+784]
	071 NotImplemented "Instruction BLR not yet implemented."
	072 Move X0, X21
	073 Move X1, X20
	074 Move X2, X22
	075 Move X20, [X31+32]
	076 Move X19, [X31+40]
	077 Move X22, [X31+16]
	078 Move X21, [X31+24]
	079 Move X30, [X31+48]
	080 Call NameObjectCollectionBase.BaseAdd, X0, X1, X2
	081 Return 
	082 Move X20, [X31+32]
	083 Move X19, [X31+40]
	084 Move X22, [X31+16]
	085 Move X21, [X31+24]
	086 Move X30, [X31+48]
	087 Return 
	088 Move X0, 0xA90000
	089 Move X0, [X0+2880]
	090 Call 0x1C17D08
	091 Call 0x1C17F10
	092 Move X19, X0
	093 Move X0, 0xABA000
	094 Move X0, [X0+104]
	095 Call 0x1C17D08
	096 Move X1, X0
	097 Move X0, X19
	098 Move X2, X31
	099 Call NotSupportedException..ctor, X0, X1
	100 Move X0, 0xADA000
	101 Move X0, [X0+544]
	102 Call 0x1C17D08
	103 Move X1, X0
	104 Move X0, X19
	105 Call 0x1C17DEC
	106 Call 0x1C181E0
	107 Call 0x1C17F20

Method: System.String Get(System.String name)

Disassembly:
	0x036650B8 ADRP X0, 0xAD8000
	0x036650BC LDR X0, [X0 + 0x228]
	0x036650C0 BL 0x1C16CF4
	0x036650C4 ADRP X0, 0xAC0000
	0x036650C8 LDR X0, [X0 + 0x160]
	0x036650CC BL 0x1C16CF4
	0x036650D0 ADRP X0, 0xA8E000
	0x036650D4 LDR X0, [X0 + 0x9D0]
	0x036650D8 BL 0x1C16CF4
	0x036650DC ADRP X0, 0xAC0000
	0x036650E0 LDR X0, [X0 + 0x170]
	0x036650E4 BL 0x1C16CF4
	0x036650E8 ADRP X0, 0xA8E000
	0x036650EC LDR X0, [X0 + 0xAC8]
	0x036650F0 BL 0x1C16CF4
	0x036650F4 ADRP X0, 0xA8E000
	0x036650F8 LDR X0, [X0 + 0x6C0]
	0x036650FC BL 0x1C16CF4
	0x03665100 ADRP X0, 0xAD8000
	0x03665104 LDR X0, [X0 + 0x258]
	0x03665108 BL 0x1C16CF4
	0x0366510C ADRP X0, 0xAC5000
	0x03665110 LDR X0, [X0 + 0x770]
	0x03665114 BL 0x1C16CF4
	0x03665118 ADRP X0, 0xAC5000
	0x0366511C LDR X0, [X0 + 0x778]
	0x03665120 BL 0x1C16CF4
	0x03665124 ADRP X0, 0xAB8000
	0x03665128 LDR X0, [X0 + 0x2C8]
	0x0366512C BL 0x1C16CF4
	0x03665130 ADRP X0, 0xAD8000
	0x03665134 LDR X0, [X0 + 0x260]
	0x03665138 BL 0x1C16CF4
	0x0366513C ADRP X0, 0xAC5000
	0x03665140 LDR X0, [X0 + 0x780]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xD7C000
	006 Move W8, [X21+1771]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xABC000
	014 Move X0, [X0+2976]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+1771], W8
	018 Move X0, X20
	019 Move X1, X19
	020 Call NameObjectCollectionBase.FindEntry, X0, X1
	021 Compare X0, 0
	022 JumpIfEqual {37}
	023 Move X0, [X0+24]
	024 Compare X0, 0
	025 JumpIfEqual {37}
	026 Move X9, 0xABC000
	027 Move X9, [X9+2976]
	028 Move X8, [X0]
	029 Move X1, [X9]
	030 Move W10, [X8+304]
	031 Move W9, [X1+304]
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move X8, [X8+200]
	034 Add X8, X8, X9
	035 NotImplemented "Instruction LDUR not yet implemented."
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move X20, [X31+16]
	038 Move X19, [X31+24]
	039 Move X30, [X31+32]
	040 Move X21, [X31+40]
	041 Call NameValueCollection.GetAsOneString, X0
	042 Return X0
	043 Call 0x1C181E0

Method: System.String[] GetValues(System.String name)

Disassembly:
	0x03665144 BL 0x1C16CF4
	0x03665148 ADRP X0, 0xAB8000
	0x0366514C LDR X0, [X0 + 0x2D0]
	0x03665150 BL 0x1C16CF4
	0x03665154 ADRP X0, 0xA8F000
	0x03665158 LDR X0, [X0 + 0x2A0]
	0x0366515C BL 0x1C16CF4
	0x03665160 MOVZ W8, 0x1
	0x03665164 STRB W8, [X21 + 0x6FC]
	0x03665168 CBZ X19, 0x3665590
	0x0366516C ADRP X8, 0xAD8000
	0x03665170 LDR X8, [X8 + 0x260]
	0x03665174 LDRB W2, [X20 + 0x10]
	0x03665178 ADRP X21, 0xAD8000
	0x0366517C MOV X0, X19
	0x03665180 LDR X1, [X8]
	0x03665184 LDR X21, [X21 + 0x200]
	0x03665188 MOV X3, X31
	0x0366518C BL 0x32A8CA8
	0x03665190 LDR X0, [X21]
	0x03665194 LDR X22, [X20 + 0x20]
	0x03665198 LDR W8, [X0 + 0xE0]
	0x0366519C CBNZ W8, 0x36651A8
	0x036651A0 BL 0x1C16DFC
	0x036651A4 LDR X0, [X21]
	0x036651A8 LDR X8, [X0 + 0xB8]
	0x036651AC ADRP X25, 0xA8E000
	0x036651B0 LDR X8, [X8]
	0x036651B4 LDR X25, [X25 + 0x6C0]
	0x036651B8 CMP X22, X8
	0x036651BC B.EQ 0x3665230
	0x036651C0 LDR X21, [X20 + 0x20]
	0x036651C4 CBZ X21, 0x36652C0
	0x036651C8 ADRP X8, 0xAD8000
	0x036651CC LDR X8, [X8 + 0x250]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xD7C000
	006 Move W8, [X21+1772]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xABC000
	014 Move X0, [X0+2976]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+1772], W8
	018 Move X0, X20
	019 Move X1, X19
	020 Call NameObjectCollectionBase.FindEntry, X0, X1
	021 Compare X0, 0
	022 JumpIfEqual {37}
	023 Move X0, [X0+24]
	024 Compare X0, 0
	025 JumpIfEqual {37}
	026 Move X9, 0xABC000
	027 Move X9, [X9+2976]
	028 Move X8, [X0]
	029 Move X1, [X9]
	030 Move W10, [X8+304]
	031 Move W9, [X1+304]
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move X8, [X8+200]
	034 Add X8, X8, X9
	035 NotImplemented "Instruction LDUR not yet implemented."
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move X20, [X31+16]
	038 Move X19, [X31+24]
	039 Move X30, [X31+32]
	040 Move X21, [X31+40]
	041 Call NameValueCollection.GetAsStringArray, X0
	042 Return X0
	043 Call 0x1C181E0

Method: System.Void Set(System.String name, System.String value)

Disassembly:
	0x036651D0 LDR X9, [X21]
	0x036651D4 LDR X8, [X8]
	0x036651D8 LDRB W11, [X9 + 0x130]
	0x036651DC LDRB W10, [X8 + 0x130]
	0x036651E0 CMP W11, W10
	0x036651E4 B.CC 0x36651FC
	0x036651E8 LDR X9, [X9 + 0xC8]
	0x036651EC ADD X9, X9, X10, 0x3, LSL
	0x036651F0 LDUR X9, [X9 - 0x8]
	0x036651F4 CMP X9, X8
	0x036651F8 B.EQ 0x3665518
	0x036651FC ADRP X8, 0xAC5000
	0x03665200 LDR X0, [X25]
	0x03665204 LDR X8, [X8 + 0x760]
	0x03665208 LDR W9, [X0 + 0xE0]
	0x0366520C LDR X22, [X8]
	0x03665210 CBNZ W9, 0x3665218
	0x03665214 BL 0x1C16DFC
	0x03665218 MOV X0, X22
	0x0366521C MOV X1, X31
	0x03665220 BL 0x338C698
	0x03665224 ADRP X8, 0xAC5000
	0x03665228 LDR X8, [X8 + 0x780]
	0x0366522C B 0x36652AC
	0x03665230 BL 0x36655D8
	0x03665234 ADRP X9, 0xAC5000
	0x03665238 LDR X8, [X25]
	0x0366523C LDR X9, [X9 + 0x768]
	0x03665240 MOV X21, X0
	0x03665244 LDR W10, [X8 + 0xE0]
	0x03665248 LDR X22, [X9]
	0x0366524C CBNZ W10, 0x3665258
	0x03665250 MOV X0, X8
	0x03665254 BL 0x1C16DFC
	0x03665258 MOV X0, X22
	0x0366525C MOV X1, X31
	0x03665260 BL 0x338C698
	0x03665264 ADRP X8, 0xAD8000
	0x03665268 LDR X8, [X8 + 0x258]
	0x0366526C MOV X3, X0
	0x03665270 MOV X0, X19
	0x03665274 MOV X2, X21
	0x03665278 LDR X1, [X8]
	0x0366527C MOV X4, X31
	0x03665280 BL 0x32A89BC
	0x03665284 BL 0x36656B0
	0x03665288 ADRP X8, 0xAC5000
	0x0366528C LDR X8, [X8 + 0x758]
	0x03665290 MOV X21, X0
	0x03665294 LDR X8, [X8]
	0x03665298 MOV X0, X8
	0x0366529C MOV X1, X31
	0x036652A0 BL 0x338C698
	0x036652A4 ADRP X8, 0xAB8000
	0x036652A8 LDR X8, [X8 + 0x2D0]
	0x036652AC LDR X1, [X8]
	0x036652B0 MOV X3, X0
	0x036652B4 MOV X0, X19

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xD7C000
	007 Move W8, [X22+1773]
	008 Move X20, X2
	009 Move X19, X1
	010 Move X21, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0xABC000
	016 Move X0, [X0+2976]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+1773], W8
	020 Move W8, [X21+16]
	021 Compare W8, 0
	022 JumpIfNotEqual {49}
	023 Move X8, 0xABC000
	024 Move X8, [X8+2976]
	025 Move [X21+88], X31
	026 Move [X21+96], X31
	027 Move X0, [X8]
	028 Call 0x1C17F10
	029 Move W1, 1
	030 Move X2, X31
	031 Move X22, X0
	032 Call ArrayList..ctor, X0, X1
	033 Compare X22, 0
	034 JumpIfEqual {67}
	035 Move X8, [X22]
	036 Move X0, X22
	037 Move X1, X20
	038 Move X9, [X8+776]
	039 Move X2, [X8+784]
	040 NotImplemented "Instruction BLR not yet implemented."
	041 Move X0, X21
	042 Move X1, X19
	043 Move X2, X22
	044 Move X20, [X31+32]
	045 Move X19, [X31+40]
	046 Move X22, [X31+16]
	047 Move X21, [X31+24]
	048 Move X30, [X31+48]
	049 Move X0, 0xA8F000
	050 Move X0, [X0+2880]
	051 Call 0x1C17D08
	052 Call 0x1C17F10
	053 Move X19, X0
	054 Move X0, 0xAB9000
	055 Move X0, [X0+104]
	056 Call 0x1C17D08
	057 Move X1, X0
	058 Move X0, X19
	059 Move X2, X31
	060 Call NotSupportedException..ctor, X0, X1
	061 Move X0, 0xAD9000
	062 Move X0, [X0+568]
	063 Call 0x1C17D08
	064 Move X1, X0
	065 Move X0, X19
	066 Call 0x1C17DEC
	067 Call 0x1C17F20

Method: System.Void Remove(System.String name)

Disassembly:
	0x03665360 LDR X22, [X22 + 0xAC8]
	0x03665364 LDR X23, [X23 + 0x9D0]

ISIL:
	001 Move [X0+88], X31
	002 Move [X0+96], X31

Method: System.String get_Item(System.String name)

Disassembly:
	0x0366556C LDR X8, [X8 + 0x758]
	0x03665570 LDR X0, [X8]
	0x03665574 B 0x366529C
	0x03665578 BL 0x1C16F20

ISIL:
	001 Move X8, [X0]
	002 Move X3, [X8+600]
	003 Move X2, [X8+608]
	004 CallNoReturn X3

Method: System.Void set_Item(System.String name, System.String value)

Disassembly:
	0x0366557C BL 0x1C171E0
	0x03665580 BL 0x1C16F28
	0x03665584 BL 0x1C16F44
	0x03665588 MOV X1, X31

ISIL:
	001 Move X8, [X0]
	002 Move X4, [X8+632]
	003 Move X3, [X8+640]
	004 CallNoReturn X4

Method: System.String Get(System.Int32 index)

Disassembly:
	0x0366558C BL 0x1C16DEC
	0x03665590 ADRP X0, 0xA93000
	0x03665594 LDR X0, [X0 + 0x528]
	0x03665598 BL 0x1C16D08
	0x0366559C BL 0x1C16F10
	0x036655A0 MOV X19, X0
	0x036655A4 ADRP X0, 0xAB8000
	0x036655A8 LDR X0, [X0 + 0x2D8]
	0x036655AC BL 0x1C16D08
	0x036655B0 MOV X1, X0
	0x036655B4 MOV X0, X19
	0x036655B8 MOV X2, X31
	0x036655BC BL 0x330E100
	0x036655C0 ADRP X0, 0xAD8000
	0x036655C4 LDR X0, [X0 + 0x268]
	0x036655C8 BL 0x1C16D08
	0x036655CC MOV X1, X0
	0x036655D0 MOV X0, X19
	0x036655D4 BL 0x1C16DEC
	0x036655D8 STP X30, X21, [X31 - 0x20]!
	0x036655DC STP X20, X19, [X31 + 0x10]
	0x036655E0 ADRP X19, 0xD7B000
	0x036655E4 ADRP X21, 0xAD8000
	0x036655E8 LDRB W8, [X19 + 0x712]
	0x036655EC LDR X21, [X21 + 0x250]
	0x036655F0 TBNZ X8, 0x0, 0x3665620
	0x036655F4 ADRP X0, 0xAD8000
	0x036655F8 LDR X0, [X0 + 0x270]
	0x036655FC BL 0x1C16CF4
	0x03665600 ADRP X0, 0xAD8000
	0x03665604 LDR X0, [X0 + 0x250]
	0x03665608 BL 0x1C16CF4
	0x0366560C ADRP X0, 0xA90000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xD7C000
	006 Move W8, [X21+1774]
	007 Move W19, W1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xABC000
	014 Move X0, [X0+2976]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+1774], W8
	018 Move X0, X20
	019 Move W1, W19
	020 Call NameObjectCollectionBase.BaseGet, X0, X1
	021 Compare X0, 0
	022 JumpIfEqual {34}
	023 Move X9, 0xABC000
	024 Move X9, [X9+2976]
	025 Move X8, [X0]
	026 Move X1, [X9]
	027 Move W10, [X8+304]
	028 Move W9, [X1+304]
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move X8, [X8+200]
	031 Add X8, X8, X9
	032 NotImplemented "Instruction LDUR not yet implemented."
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move X20, [X31+16]
	035 Move X19, [X31+24]
	036 Move X30, [X31+32]
	037 Move X21, [X31+40]
	038 Call NameValueCollection.GetAsOneString, X0
	039 Return X0
	040 Call 0x1C181E0

Method: System.String[] GetValues(System.Int32 index)

Disassembly:
	0x036656AC RET
	0x036656B0 STP X30, X21, [X31 - 0x20]!
	0x036656B4 STP X20, X19, [X31 + 0x10]
	0x036656B8 ADRP X19, 0xD7B000
	0x036656BC ADRP X21, 0xAD8000
	0x036656C0 LDRB W8, [X19 + 0x711]
	0x036656C4 LDR X21, [X21 + 0x250]
	0x036656C8 TBNZ X8, 0x0, 0x36656F8
	0x036656CC ADRP X0, 0xAD8000
	0x036656D0 LDR X0, [X0 + 0x278]
	0x036656D4 BL 0x1C16CF4
	0x036656D8 ADRP X0, 0xAD8000
	0x036656DC LDR X0, [X0 + 0x250]
	0x036656E0 BL 0x1C16CF4
	0x036656E4 ADRP X0, 0xA90000
	0x036656E8 LDR X0, [X0 + 0xC48]
	0x036656EC BL 0x1C16CF4
	0x036656F0 MOVZ W8, 0x1
	0x036656F4 STRB W8, [X19 + 0x711]
	0x036656F8 LDR X8, [X21]
	0x036656FC LDR X8, [X8 + 0xB8]
	0x03665700 LDR X19, [X8]
	0x03665704 BL 0x1C16D44
	0x03665708 CBNZ X19, 0x3665764
	0x0366570C ADRP X8, 0xA90000
	0x03665710 LDR X8, [X8 + 0xC48]
	0x03665714 LDR X0, [X8]
	0x03665718 LDR W8, [X0 + 0xE0]
	0x0366571C CBNZ W8, 0x3665724
	0x03665720 BL 0x1C16DFC
	0x03665724 MOV X0, X31
	0x03665728 BL 0x3338524
	0x0366572C ADRP X8, 0xAD8000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xD7C000
	006 Move W8, [X21+1775]
	007 Move W19, W1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xABC000
	014 Move X0, [X0+2976]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+1775], W8
	018 Move X0, X20
	019 Move W1, W19
	020 Call NameObjectCollectionBase.BaseGet, X0, X1
	021 Compare X0, 0
	022 JumpIfEqual {34}
	023 Move X9, 0xABC000
	024 Move X9, [X9+2976]
	025 Move X8, [X0]
	026 Move X1, [X9]
	027 Move W10, [X8+304]
	028 Move W9, [X1+304]
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move X8, [X8+200]
	031 Add X8, X8, X9
	032 NotImplemented "Instruction LDUR not yet implemented."
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move X20, [X31+16]
	035 Move X19, [X31+24]
	036 Move X30, [X31+32]
	037 Move X21, [X31+40]
	038 Call NameValueCollection.GetAsStringArray, X0
	039 Return X0
	040 Call 0x1C181E0

Method: System.String GetKey(System.Int32 index)

Disassembly:
	0x03665730 LDR X8, [X8 + 0x278]

ISIL:
No ISIL was generated
Method: System.String[] get_AllKeys()

Disassembly:
	0x036657D0 BL 0x1C16CF4
	0x036657D4 ADRP X0, 0xAC5000
	0x036657D8 LDR X0, [X0 + 0x760]
	0x036657DC BL 0x1C16CF4
	0x036657E0 ADRP X0, 0xAB8000
	0x036657E4 LDR X0, [X0 + 0x900]
	0x036657E8 BL 0x1C16CF4
	0x036657EC ADRP X0, 0xAC5000
	0x036657F0 LDR X0, [X0 + 0x768]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, [X0+96]
	005 Compare X0, 0
	006 JumpIfNotEqual {10}
	007 Move X0, X19
	008 Call NameObjectCollectionBase.BaseGetAllKeys, X0
	009 Move [X19+96], X0
	010 Move X30, [X31+16]
	011 Move X19, [X31+24]
	012 Return X0

Method: System.Void .ctor(System.DBNull dummy)

Disassembly:
	0x036658B8 MOV X0, X25
	0x036658BC MOV X1, X31
	0x036658C0 STR X31, [X19 + 0x40]
	0x036658C4 BL 0x32A8830
	0x036658C8 CBZ X0, 0x3665EB8
	0x036658CC MOV X1, X31
	0x036658D0 MOV X26, X0
	0x036658D4 BL 0x3291B70
	0x036658D8 TBZ X0, 0x0, 0x3665D88
	0x036658DC MOVZ W21, 0xD537
	0x036658E0 MOVZ W27, 0xFBF7
	0x036658E4 MOVZ W28, 0xC1D8
	0x036658E8 MOV X23, X31
	0x036658EC MOV X22, X31
	0x036658F0 MOV W24, W31
	0x036658F4 MOVK W21, 0x5DCD0000
	0x036658F8 MOVK W27, 0x47B00000
	0x036658FC MOVK W28, 0x73E20000
	0x03665900 STR W31, [X31 + 0x14]
	0x03665904 STR X31, [X31 + 0x18]
	0x03665908 STP X31, X31, [X31]
	0x0366590C MOV X0, X26

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xD7C000
	006 Move X21, 0xAD9000
	007 Move W8, [X20+1776]
	008 Move X21, [X21+512]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xAD9000
	015 Move X0, [X0+512]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1776], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X1, X31
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call Object..ctor, X0
	031 Return 

