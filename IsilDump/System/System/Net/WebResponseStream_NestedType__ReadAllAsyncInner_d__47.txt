Type: System.Net.WebResponseStream/<ReadAllAsyncInner>d__47

Method: System.Void MoveNext()

Disassembly:
	0x036B8EB8 ADRP X22, 0xA3E000
	0x036B8EBC LDRB W8, [X21 + 0x995]
	0x036B8EC0 LDR X22, [X22 + 0x280]
	0x036B8EC4 MOV X19, X1
	0x036B8EC8 MOV X20, X0
	0x036B8ECC TBNZ X8, 0x0, 0x36B8EE4
	0x036B8ED0 ADRP X0, 0xA3E000
	0x036B8ED4 LDR X0, [X0 + 0x280]
	0x036B8ED8 BL 0x1C16CF4
	0x036B8EDC MOVZ W8, 0x1
	0x036B8EE0 STRB W8, [X21 + 0x995]
	0x036B8EE4 LDR X0, [X22]
	0x036B8EE8 LDR W8, [X0 + 0xE0]
	0x036B8EEC CBNZ W8, 0x36B8EF4
	0x036B8EF0 BL 0x1C16DFC
	0x036B8EF4 ADD X0, X20, 0x8
	0x036B8EF8 MOV X1, X19
	0x036B8EFC LDP X20, X19, [X31 + 0x20]
	0x036B8F00 LDP X22, X21, [X31 + 0x10]
	0x036B8F04 MOV X2, X31
	0x036B8F08 LDR X30, [X31], #0x30
	0x036B8F0C B 0x32C477C
	0x036B8F10 SUB X31, X31, 0x60
	0x036B8F14 STR X30, [X31 + 0x10]
	0x036B8F18 STP X26, X25, [X31 + 0x20]
	0x036B8F1C STP X24, X23, [X31 + 0x30]
	0x036B8F20 STP X22, X21, [X31 + 0x40]
	0x036B8F24 STP X20, X19, [X31 + 0x50]
	0x036B8F28 ADRP X20, 0xD28000
	0x036B8F2C LDRB W8, [X20 + 0x996]
	0x036B8F30 MOV X19, X0
	0x036B8F34 TBNZ X8, 0x0, 0x36B8FA0
	0x036B8F38 ADRP X0, 0xA87000
	0x036B8F3C LDR X0, [X0 + 0x5C0]
	0x036B8F40 BL 0x1C16CF4
	0x036B8F44 ADRP X0, 0xA3E000
	0x036B8F48 LDR X0, [X0 + 0x280]
	0x036B8F4C BL 0x1C16CF4
	0x036B8F50 ADRP X0, 0xA86000
	0x036B8F54 LDR X0, [X0 + 0xB20]
	0x036B8F58 BL 0x1C16CF4
	0x036B8F5C ADRP X0, 0xA3B000
	0x036B8F60 LDR X0, [X0 + 0x618]
	0x036B8F64 BL 0x1C16CF4
	0x036B8F68 ADRP X0, 0xA6F000
	0x036B8F6C LDR X0, [X0 + 0x2B8]
	0x036B8F70 BL 0x1C16CF4
	0x036B8F74 ADRP X0, 0xA6F000
	0x036B8F78 LDR X0, [X0 + 0x2C0]
	0x036B8F7C BL 0x1C16CF4
	0x036B8F80 ADRP X0, 0xA6F000
	0x036B8F84 LDR X0, [X0 + 0x2C8]
	0x036B8F88 BL 0x1C16CF4
	0x036B8F8C ADRP X0, 0xA6F000
	0x036B8F90 LDR X0, [X0 + 0x2D0]
	0x036B8F94 BL 0x1C16CF4
	0x036B8F98 MOVZ W8, 0x1
	0x036B8F9C STRB W8, [X20 + 0x996]
	0x036B8FA0 STP X31, X31, [X31]
	0x036B8FA4 ADRP X24, 0xA3B000
	0x036B8FA8 ADRP X25, 0xA86000
	0x036B8FAC LDR W8, [X19]
	0x036B8FB0 LDR X20, [X19 + 0x20]
	0x036B8FB4 LDR X24, [X24 + 0x618]
	0x036B8FB8 LDR X25, [X25 + 0xB20]
	0x036B8FBC CBZ W8, 0x36B8FF0
	0x036B8FC0 LDR X0, [X24]
	0x036B8FC4 MOVZ W1, 0x1000
	0x036B8FC8 BL 0x1C16D6C
	0x036B8FCC MOV X21, X0
	0x036B8FD0 LDR X0, [X25]
	0x036B8FD4 BL 0x1C16F10
	0x036B8FD8 MOV X22, X0
	0x036B8FDC MOV X1, X21
	0x036B8FE0 MOV W2, W31
	0x036B8FE4 MOV X3, X31
	0x036B8FE8 BL 0x36850E8
	0x036B8FEC B 0x36B9010
	0x036B8FF0 LDR V0, [X19 + 0x4]
	0x036B8FF4 MOVN W8, 0x0
	0x036B8FF8 STR V0, [X31]
	0x036B8FFC STP X31, X31, [X19 + 0x40]
	0x036B9000 STR W8, [X19]
	0x036B9004 B 0x36B9098
	0x036B9008 B 0x36B9554
	0x036B900C B 0x36B9554
	0x036B9010 STR X22, [X19 + 0x30]
	0x036B9014 STR X31, [X19 + 0x38]
	0x036B9018 CBZ X20, 0x36B9260
	0x036B901C LDR X0, [X20 + 0x50]
	0x036B9020 CBZ X0, 0x36B9268
	0x036B9024 LDR X1, [X19 + 0x28]
	0x036B9028 BL 0x36AD230
	0x036B902C LDR X9, [X20 + 0x80]
	0x036B9030 CBZ X9, 0x36B9270
	0x036B9034 LDR X8, [X19 + 0x30]
	0x036B9038 CBZ X8, 0x36B926C
	0x036B903C LDR X0, [X9 + 0x90]
	0x036B9040 CBZ X0, 0x36B925C
	0x036B9044 LDR X9, [X0]
	0x036B9048 LDR X1, [X8 + 0x10]
	0x036B904C LDR X4, [X19 + 0x28]
	0x036B9050 LDP W2, W3, [X8 + 0x18]
	0x036B9054 LDR X8, [X9 + 0x2D8]
	0x036B9058 LDR X5, [X9 + 0x2E0]
	0x036B905C BLR X8
	0x036B9060 CBZ X0, 0x36B9264
	0x036B9064 ADRP X8, 0xA6E000
	0x036B9068 LDR X8, [X8 + 0x2D0]
	0x036B906C LDR X2, [X8]
	0x036B9070 MOV W1, W31
	0x036B9074 BL 0x269D3A8
	0x036B9078 ADRP X8, 0xA6E000
	0x036B907C LDR X8, [X8 + 0x2C8]
	0x036B9080 STP X0, X1, [X31]
	0x036B9084 LDR X8, [X8]
	0x036B9088 ADD X0, X31, 0x0
	0x036B908C MOV X1, X8
	0x036B9090 BL 0x2998978
	0x036B9094 TBZ X0, 0x0, 0x36B91A8
	0x036B9098 ADRP X8, 0xA6E000
	0x036B909C LDR X8, [X8 + 0x2C0]
	0x036B90A0 LDR X1, [X8]
	0x036B90A4 ADD X0, X31, 0x0
	0x036B90A8 BL 0x29989C4
	0x036B90AC MOV W21, W0
	0x036B90B0 CBZ W0, 0x36B927C
	0x036B90B4 TBNZ X21, 0x1F, 0x36B9274
	0x036B90B8 LDR X1, [X19 + 0x30]
	0x036B90BC CBZ X1, 0x36B9284
	0x036B90C0 LDP W8, W9, [X1 + 0x18]
	0x036B90C4 MOV X22, X19
	0x036B90C8 ADD W8, W8, W21
	0x036B90CC SUB W9, W9, W21
	0x036B90D0 STP W8, W9, [X1 + 0x18]
	0x036B90D4 LDR W8, [X22 + 0x38]!
	0x036B90D8 CBNZ W8, 0x36B9104
	0x036B90DC MOV X23, X19
	0x036B90E0 LDR W26, [X23 + 0x3C]!
	0x036B90E4 CBZ X20, 0x36B9358
	0x036B90E8 MOV X0, X20
	0x036B90EC MOV X2, X23
	0x036B90F0 MOV X3, X22
	0x036B90F4 BL 0x36B6D20
	0x036B90F8 TBNZ X0, 0x0, 0x36B9100
	0x036B90FC STR W26, [X23]
	0x036B9100 LDR W8, [X22]
	0x036B9104 CMP W8, 0x3
	0x036B9108 B.EQ 0x36B91EC
	0x036B910C CMP W8, 0x4
	0x036B9110 B.EQ 0x36B9288
	0x036B9114 LDR X9, [X19 + 0x30]
	0x036B9118 CBZ X9, 0x36B9290
	0x036B911C LDR W10, [X9 + 0x1C]
	0x036B9120 UBFM W8, W21, 0x1F, 0x1E
	0x036B9124 CMP W8, W10
	0x036B9128 B.LE 0x36B9014
	0x036B912C LDR X9, [X9 + 0x10]
	0x036B9130 CBZ X9, 0x36B930C
	0x036B9134 LDR W9, [X9 + 0x18]
	0x036B9138 LDR X0, [X24]
	0x036B913C ADD W1, W8, W9
	0x036B9140 BL 0x1C16D6C
	0x036B9144 LDR X8, [X19 + 0x30]
	0x036B9148 CBZ X8, 0x36B9350
	0x036B914C MOV X21, X0
	0x036B9150 LDR X0, [X8 + 0x10]
	0x036B9154 LDR W4, [X8 + 0x18]
	0x036B9158 MOV W1, W31
	0x036B915C MOV X2, X21
	0x036B9160 MOV W3, W31
	0x036B9164 MOV X5, X31
	0x036B9168 BL 0x33A8A9C
	0x036B916C LDR X8, [X19 + 0x30]
	0x036B9170 CBZ X8, 0x36B9310
	0x036B9174 CBZ X21, 0x36B9354
	0x036B9178 LDR W23, [X8 + 0x18]
	0x036B917C LDR X0, [X25]
	0x036B9180 BL 0x1C16F10
	0x036B9184 LDR W8, [X21 + 0x18]
	0x036B9188 MOV X22, X0
	0x036B918C SUB W3, W8, W23
	0x036B9190 MOV X1, X21
	0x036B9194 MOV W2, W23
	0x036B9198 MOV W4, W31
	0x036B919C MOV X5, X31
	0x036B91A0 BL 0x368503C
	0x036B91A4 B 0x36B9010
	0x036B91A8 STR W31, [X19]
	0x036B91AC LDR V0, [X31]
	0x036B91B0 ADRP X8, 0xA3D000
	0x036B91B4 STR V0, [X19 + 0x4]
	0x036B91B8 LDR X8, [X8 + 0x280]
	0x036B91BC LDR X0, [X8]
	0x036B91C0 LDR W8, [X0 + 0xE0]
	0x036B91C4 CBNZ W8, 0x36B91CC
	0x036B91C8 BL 0x1C16DFC
	0x036B91CC ADRP X8, 0xA86000
	0x036B91D0 LDR X8, [X8 + 0x5C0]
	0x036B91D4 ADD X0, X19, 0x8
	0x036B91D8 LDR X3, [X8]
	0x036B91DC ADD X1, X31, 0x0
	0x036B91E0 MOV X2, X19
	0x036B91E4 BL 0x21856D8
	0x036B91E8 B 0x36B9240
	0x036B91EC LDR X1, [X19 + 0x30]
	0x036B91F0 CBZ X1, 0x36B935C
	0x036B91F4 LDR W8, [X1 + 0x18]
	0x036B91F8 LDR W9, [X19 + 0x3C]
	0x036B91FC SUB W8, W8, W9
	0x036B9200 STP W9, W8, [X1 + 0x18]
	0x036B9204 CBZ X20, 0x36B9360
	0x036B9208 MOV X0, X20
	0x036B920C BL 0x36B628C
	0x036B9210 MOVN W8, 0x1
	0x036B9214 STR X31, [X19 + 0x30]
	0x036B9218 STR W8, [X19], #0x8
	0x036B921C ADRP X8, 0xA3D000
	0x036B9220 LDR X8, [X8 + 0x280]
	0x036B9224 LDR X0, [X8]
	0x036B9228 LDR W8, [X0 + 0xE0]
	0x036B922C CBNZ W8, 0x36B9234
	0x036B9230 BL 0x1C16DFC
	0x036B9234 MOV X0, X19
	0x036B9238 MOV X1, X31
	0x036B923C BL 0x32C4864
	0x036B9240 LDP X20, X19, [X31 + 0x50]
	0x036B9244 LDP X22, X21, [X31 + 0x40]
	0x036B9248 LDP X24, X23, [X31 + 0x30]
	0x036B924C LDP X26, X25, [X31 + 0x20]
	0x036B9250 LDR X30, [X31 + 0x10]
	0x036B9254 ADD X31, X31, 0x60
	0x036B9258 RET
	0x036B925C BL 0x1C16F20
	0x036B9260 BL 0x1C16F20
	0x036B9264 BL 0x1C16F20
	0x036B9268 BL 0x1C16F20
	0x036B926C BL 0x1C16F20
	0x036B9270 BL 0x1C16F20
	0x036B9274 CBNZ X20, 0x36B9294
	0x036B9278 BL 0x1C16F20
	0x036B927C CBNZ X20, 0x36B92D0
	0x036B9280 BL 0x1C16F20
	0x036B9284 BL 0x1C16F20
	0x036B9288 CBNZ X20, 0x36B9314
	0x036B928C BL 0x1C16F20
	0x036B9290 BL 0x1C16F20
	0x036B9294 ADRP X0, 0xA86000
	0x036B9298 LDR X0, [X0 + 0x5C8]
	0x036B929C BL 0x1C16D08
	0x036B92A0 MOV X3, X0
	0x036B92A4 MOVZ W1, 0xB
	0x036B92A8 MOV X0, X20
	0x036B92AC MOV X2, X31
	0x036B92B0 BL 0x36B6A90
	0x036B92B4 MOV X20, X0
	0x036B92B8 ADRP X0, 0xA86000
	0x036B92BC LDR X0, [X0 + 0x5D0]
	0x036B92C0 BL 0x1C16D08
	0x036B92C4 MOV X1, X0
	0x036B92C8 MOV X0, X20
	0x036B92CC BL 0x1C16DEC
	0x036B92D0 ADRP X0, 0xA86000
	0x036B92D4 LDR X0, [X0 + 0x5D8]
	0x036B92D8 BL 0x1C16D08
	0x036B92DC MOV X3, X0
	0x036B92E0 MOVZ W1, 0x3
	0x036B92E4 MOV X0, X20
	0x036B92E8 MOV X2, X31
	0x036B92EC BL 0x36B6A90
	0x036B92F0 MOV X20, X0
	0x036B92F4 ADRP X0, 0xA86000
	0x036B92F8 LDR X0, [X0 + 0x5D0]
	0x036B92FC BL 0x1C16D08
	0x036B9300 MOV X1, X0
	0x036B9304 MOV X0, X20
	0x036B9308 BL 0x1C16DEC
	0x036B930C BL 0x1C16F20
	0x036B9310 BL 0x1C16F20
	0x036B9314 ADRP X0, 0xA86000
	0x036B9318 LDR X0, [X0 + 0x5E0]
	0x036B931C BL 0x1C16D08
	0x036B9320 MOV X3, X0
	0x036B9324 MOVZ W1, 0x6
	0x036B9328 MOV X0, X20
	0x036B932C MOV X2, X31
	0x036B9330 BL 0x36B6A90
	0x036B9334 MOV X20, X0
	0x036B9338 ADRP X0, 0xA86000
	0x036B933C LDR X0, [X0 + 0x5D0]
	0x036B9340 BL 0x1C16D08
	0x036B9344 MOV X1, X0
	0x036B9348 MOV X0, X20
	0x036B934C BL 0x1C16DEC
	0x036B9350 BL 0x1C16F20
	0x036B9354 BL 0x1C16F20
	0x036B9358 BL 0x1C16F20
	0x036B935C BL 0x1C16F20
	0x036B9360 BL 0x1C16F20
	0x036B9364 B 0x36B9554
	0x036B9368 CMP W1, 0x1
	0x036B936C B.EQ 0x36B9378
	0x036B9370 MOV X8, X1
	0x036B9374 B 0x36B9554
	0x036B9378 BL 0x3EB1AD0
	0x036B937C MOV X21, X0
	0x036B9380 ADRP X0, 0xA3A000
	0x036B9384 LDR X0, [X0 + 0x7D0]
	0x036B9388 BL 0x1C16D08
	0x036B938C LDR X8, [X21]
	0x036B9390 LDR X1, [X8]
	0x036B9394 BL 0x1C17270
	0x036B9398 TBZ X0, 0x0, 0x36B93AC
	0x036B939C LDR X21, [X21]
	0x036B93A0 BL 0x3EB1AE0
	0x036B93A4 CBNZ X20, 0x36B93D0
	0x036B93A8 BL 0x1C16F20
	0x036B93AC MOVZ W0, 0x8
	0x036B93B0 BL 0x3EB1AF0
	0x036B93B4 LDR X8, [X21]
	0x036B93B8 STR X8, [X0]
	0x036B93BC ADRP X1, 0x7FB000
	0x036B93C0 ADD X1, X1, 0xE58
	0x036B93C4 MOV X2, X31
	0x036B93C8 BL 0x3EB1B00
	0x036B93CC B 0x36B95E8
	0x036B93D0 ADRP X0, 0xA86000
	0x036B93D4 LDR X0, [X0 + 0x5E8]
	0x036B93D8 BL 0x1C16D08
	0x036B93DC MOV X3, X0
	0x036B93E0 MOVZ W1, 0x3
	0x036B93E4 MOV X0, X20
	0x036B93E8 MOV X2, X21
	0x036B93EC BL 0x36B6A90
	0x036B93F0 MOV X20, X0
	0x036B93F4 ADRP X0, 0xA86000
	0x036B93F8 LDR X0, [X0 + 0x5D0]
	0x036B93FC BL 0x1C16D08
	0x036B9400 MOV X1, X0
	0x036B9404 MOV X0, X20
	0x036B9408 BL 0x1C16DEC
	0x036B940C B 0x36B9554
	0x036B9410 B 0x36B9554
	0x036B9414 B 0x36B94D4
	0x036B9418 MOV X20, X1
	0x036B941C MOV X21, X0
	0x036B9420 BL 0x3EB1AE0
	0x036B9424 B 0x36B94EC
	0x036B9428 B 0x36B9554
	0x036B942C B 0x36B9430
	0x036B9430 CMP W1, 0x1
	0x036B9434 B.NE 0x36B9554
	0x036B9438 BL 0x3EB1AD0
	0x036B943C MOV X21, X0
	0x036B9440 ADRP X0, 0xA3A000
	0x036B9444 LDR X0, [X0 + 0x7D0]
	0x036B9448 BL 0x1C16D08
	0x036B944C LDR X8, [X21]
	0x036B9450 LDR X1, [X8]
	0x036B9454 BL 0x1C17270
	0x036B9458 TBZ X0, 0x0, 0x36B946C
	0x036B945C LDR X21, [X21]
	0x036B9460 BL 0x3EB1AE0
	0x036B9464 CBNZ X20, 0x36B9490
	0x036B9468 BL 0x1C16F20
	0x036B946C MOVZ W0, 0x8
	0x036B9470 BL 0x3EB1AF0
	0x036B9474 LDR X8, [X21]
	0x036B9478 STR X8, [X0]
	0x036B947C ADRP X1, 0x7FB000
	0x036B9480 ADD X1, X1, 0xE58

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+48], X30
	003 Move [X31+56], X23
	004 Move [X31+64], X22
	005 Move [X31+72], X21
	006 Move [X31+80], X20
	007 Move [X31+88], X19
	008 Move X20, 0xD29000
	009 Move W8, [X20+2450]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {53}
	015 Move X0, 0xA88000
	016 Move X0, [X0+1376]
	017 Call 0x1C17CF4
	018 Move X0, 0xA88000
	019 Move X0, [X0+1384]
	020 Call 0x1C17CF4
	021 Move X0, 0xA88000
	022 Move X0, [X0+1224]
	023 Call 0x1C17CF4
	024 Move X0, 0xA3C000
	025 Move X0, [X0+1560]
	026 Call 0x1C17CF4
	027 Move X0, 0xA44000
	028 Move X0, [X0+2008]
	029 Call 0x1C17CF4
	030 Move X0, 0xA70000
	031 Move X0, [X0+696]
	032 Call 0x1C17CF4
	033 Move X0, 0xA70000
	034 Move X0, [X0+704]
	035 Call 0x1C17CF4
	036 Move X0, 0xA70000
	037 Move X0, [X0+712]
	038 Call 0x1C17CF4
	039 Move X0, 0xA64000
	040 Move X0, [X0+2952]
	041 Call 0x1C17CF4
	042 Move X0, 0xA3C000
	043 Move X0, [X0+3584]
	044 Call 0x1C17CF4
	045 Move X0, 0xA44000
	046 Move X0, [X0+1368]
	047 Call 0x1C17CF4
	048 Move X0, 0xA70000
	049 Move X0, [X0+720]
	050 Call 0x1C17CF4
	051 Move W8, 1
	052 Move [X20+2450], W8
	053 Move [X31+32], X31
	054 Move [X31+40], X31
	055 Move [X31+24], W31
	056 Move W22, [X19]
	057 Move X20, [X19+40]
	058 Compare W22, 0
	059 JumpIfEqual {99}
	060 Move X21, 0xA64000
	061 Move X21, [X21+2952]
	062 Move X0, [X21]
	063 Move W8, [X0+224]
	064 Compare W8, 0
	065 JumpIfNotEqual {67}
	066 Call 0x1C17DFC
	067 Move X23, 0xD29000
	068 Move W8, [X23+2582]
	069 Compare W8, 0
	070 JumpIfNotEqual {76}
	071 Move X0, 0xA64000
	072 Move X0, [X0+2952]
	073 Call 0x1C17CF4
	074 Move W8, 1
	075 Move [X23+2582], W8
	076 Move X0, [X21]
	077 Move W8, [X0+224]
	078 Compare W8, 0
	079 JumpIfNotEqual {82}
	080 Call 0x1C17DFC
	081 Move X0, [X21]
	082 Move X8, [X0+184]
	083 Move X9, 0xA44000
	084 NotImplemented "Instruction LDRSW not yet implemented."
	085 Move X9, [X9+1368]
	086 Move X8, X8
	087 ShiftRight X8, 48
	088 And X8, X8, 0x7FFF
	089 Move [X19+48], X8
	090 Move X0, [X9]
	091 Call 0x1C17F10
	092 Move X21, X0
	093 Move X1, X31
	094 Call MemoryStream..ctor, X0
	095 Move [X19+56], X21
	096 Compare X21, 0
	097 JumpIfNotEqual {232}
	098 Call 0x1C17F20
	099 NotImplemented "Instruction LDUR not yet implemented."
	100 Move TEMP, 0
	101 Not TEMP
	102 Move W22, TEMP
	103 Move [X31+2], V0
	104 Move [X19+72], X31
	105 Move [X19+80], X31
	106 Move [X19], W22
	107 Move X20, X0
	108 Move [X31+8], X1
	109 Move X8, [X31+8]
	110 NotImplemented "Instruction CMP not yet implemented."
	111 Move X0, X20
	112 Call 0x3EB2AD0
	113 Move X20, X0
	114 Move X0, 0xA3B000
	115 Move X0, [X0+2000]
	116 Call 0x1C17D08
	117 Move X8, [X20]
	118 Move X1, [X8]
	119 Call 0x1C18270
	120 Move TEMP, X0
	121 And TEMP, TEMP, 1
	122 Compare TEMP, 1
	123 JumpIfNotEqual {130}
	124 Move X8, [X20]
	125 Move W9, 1
	126 Move [X31+24], W9
	127 Move [X31+16], X8
	128 Call 0x3EB2AE0
	129 Move X8, X31
	130 Move W0, 8
	131 Call 0x3EB2AF0
	132 Move X8, [X20]
	133 Move [X0], X8
	134 Move X1, 0x7FC000
	135 Add X1, X1, 3672
	136 Move X2, X31
	137 Call 0x3EB2B00
	138 Move X20, X0
	139 Call 0x3EB2AE0
	140 Move X0, X20
	141 Call 0x1D2D690
	142 Add X9, X31, 16
	143 Move X20, [X9]
	144 Move TEMP, 1
	145 Not TEMP
	146 Move W8, TEMP
	147 Move [X19+8], W8
	148 Move X0, 0xA87000
	149 Move X0, [X0+1224]
	150 Call 0x1C17D08
	151 Move W8, [X0+224]
	152 Compare W8, 0
	153 JumpIfNotEqual {155}
	154 Call 0x1C17DFC
	155 Move X0, 0xA87000
	156 Move X0, [X0+1392]
	157 Call 0x1C17D08
	158 Move X2, X0
	159 Move X0, X19
	160 Move X1, X20
	161 Call AsyncTaskMethodBuilder`1<Object>.SetException, X0, X1
	162 Move X8, 0xA43000
	163 Move X8, [X8+2008]
	164 Move X0, [X8]
	165 Move W8, [X0+224]
	166 Compare W8, 0
	167 JumpIfNotEqual {169}
	168 Call 0x1C17DFC
	169 Add X0, X19, 32
	170 Move X1, X31
	171 Call CancellationToken.ThrowIfCancellationRequested, X0
	172 Move X8, 0xA3B000
	173 Move X8, [X8+1560]
	174 Move X0, [X8]
	175 Move W1, 0x4000
	176 Call 0x1C17D6C
	177 Move X1, X0
	178 Move [X19+64], X1
	179 Compare X1, 0
	180 JumpIfEqual {345}
	181 Compare X20, 0
	182 JumpIfEqual {342}
	183 Move X4, [X19+32]
	184 Move W3, [X1+24]
	185 Move X0, X20
	186 Move W2, W31
	187 Call WebResponseStream.ProcessRead, X0, X1, X2, X3, X4
	188 Compare X0, 0
	189 JumpIfEqual {343}
	190 Move X8, 0xA6F000
	191 Move X8, [X8+720]
	192 Move X2, [X8]
	193 Move W1, W31
	194 Call Task`1<Int32>.ConfigureAwait, X0, X1
	195 Move X8, 0xA6F000
	196 Move X8, [X8+712]
	197 Move [X31+32], X0
	198 Move [X31+40], X1
	199 Move X8, [X8]
	200 Add X0, X31, 32
	201 Move X1, X8
	202 Call ConfiguredTaskAwaiter<Int32>.get_IsCompleted, X0
	203 Move TEMP, X0
	204 And TEMP, TEMP, 1
	205 Compare TEMP, 1
	206 JumpIfNotEqual {272}
	207 Move X8, 0xA6F000
	208 Move X8, [X8+704]
	209 Move X1, [X8]
	210 Add X0, X31, 32
	211 Call ConfiguredTaskAwaiter<Int32>.GetResult, X0
	212 Move W3, W0
	213 Move TEMP, X0
	214 And TEMP, TEMP, -2147483648
	215 Compare TEMP, -2147483648
	216 JumpIfEqual {329}
	217 Compare W3, 0
	218 JumpIfEqual {239}
	219 Move X0, [X19+56]
	220 Compare X0, 0
	221 JumpIfEqual {344}
	222 Move X8, [X0]
	223 Move X1, [X19+64]
	224 Move X9, [X8+904]
	225 Move X4, [X8+912]
	226 Move W2, W31
	227 NotImplemented "Instruction BLR not yet implemented."
	228 Move X21, [X19+56]
	229 Move [X19+64], X31
	230 Compare X21, 0
	231 JumpIfEqual {98}
	232 Move X8, [X21]
	233 Move X9, [X8+504]
	234 Move X1, [X8+512]
	235 Move X0, X21
	236 NotImplemented "Instruction BLR not yet implemented."
	237 Move X8, [X19+48]
	238 NotImplemented "Instruction CMP not yet implemented."
	239 Move X0, [X19+56]
	240 Compare X0, 0
	241 JumpIfEqual {348}
	242 Move X8, [X0]
	243 Move X1, [X8+1024]
	244 Move X9, [X8+1016]
	245 NotImplemented "Instruction BLR not yet implemented."
	246 Move X20, X0
	247 Move X21, X31
	248 Move W23, 12
	249 Move TEMP, X22
	250 And TEMP, TEMP, -2147483648
	251 Compare TEMP, -2147483648
	252 JumpIfNotEqual {296}
	253 Move X22, [X19+56]
	254 Compare X22, 0
	255 JumpIfEqual {296}
	256 Move X10, 0xA3B000
	257 Move X8, [X22]
	258 Move X10, [X10+3584]
	259 NotImplemented "Instruction LDRH not yet implemented."
	260 Move X1, [X10]
	261 Compare X9, 0
	262 JumpIfEqual {269}
	263 Move X10, [X8+176]
	264 Add X10, X10, 8
	265 NotImplemented "Instruction LDUR not yet implemented."
	266 NotImplemented "Instruction CMP not yet implemented."
	267 Subtract X9, X9, 1
	268 Add X10, X10, 16
	269 Move X0, X22
	270 Move W2, W31
	271 Call 0x1C5D788
	272 Move [X19], W31
	273 Move V0, [X31+2]
	274 Move X8, 0xA87000
	275 Move [X19+72], V0
	276 Move X8, [X8+1224]
	277 Move X0, [X8]
	278 Move W8, [X0+224]
	279 Compare W8, 0
	280 JumpIfNotEqual {282}
	281 Call 0x1C17DFC
	282 Move X8, 0xA87000
	283 Move X8, [X8+1376]
	284 Add X0, X19, 8
	285 Move X3, [X8]
	286 Add X1, X31, 32
	287 Move X2, X19
	288 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	289 NotImplemented "Instruction LDRSW not yet implemented."
	290 Add X8, X8, X9
	291 Add X0, X8, 312
	292 Move X8, [X0]
	293 Move X1, [X0+8]
	294 Move X0, X22
	295 NotImplemented "Instruction BLR not yet implemented."
	296 Compare X21, 0
	297 JumpIfNotEqual {346}
	298 Compare W23, 0
	299 JumpIfEqual {326}
	300 NotImplemented "Instruction CMP not yet implemented."
	301 Move TEMP, 1
	302 Not TEMP
	303 Move W8, TEMP
	304 Move [X19+8], W8
	305 Move X8, 0xA87000
	306 Move X8, [X8+1224]
	307 Move X0, [X8]
	308 Move W8, [X0+224]
	309 Compare W8, 0
	310 JumpIfNotEqual {312}
	311 Call 0x1C17DFC
	312 Move X8, 0xA87000
	313 Move X8, [X8+1384]
	314 Move X0, X19
	315 Move X1, X20
	316 Move X2, [X8]
	317 Call AsyncTaskMethodBuilder`1<Object>.SetResult, X0, X1
	318 Move X20, [X31+80]
	319 Move X19, [X31+88]
	320 Move X22, [X31+64]
	321 Move X21, [X31+72]
	322 Move X30, [X31+48]
	323 Move X23, [X31+56]
	324 Add X31, X31, 96
	325 Return 
	326 Move TEMP, 0
	327 Not TEMP
	328 Move X8, TEMP
	329 Move X0, 0xA69000
	330 Move X0, [X0+1960]
	331 Call 0x1C17D08
	332 Call 0x1C17F10
	333 Move X20, X0
	334 Move X1, X31
	335 Call IOException..ctor, X0
	336 Move X0, 0xA87000
	337 Move X0, [X0+1400]
	338 Call 0x1C17D08
	339 Move X1, X0
	340 Move X0, X20
	341 Call 0x1C17DEC
	342 Call 0x1C17F20
	343 Call 0x1C17F20
	344 Call 0x1C17F20
	345 Call 0x1C17F20
	346 Move X0, X21
	347 Call 0x1C17F18
	348 Call 0x1C17F20
	349 Move X20, X0
	350 Move W22, W31
	351 Move X20, X0
	352 NotImplemented "Instruction CMP not yet implemented."
	353 Move X0, X20
	354 Call 0x3EB2AD0
	355 Move X21, [X0]
	356 Call 0x3EB2AE0
	357 Move W23, W31
	358 Move X20, X31
	359 Move TEMP, X22
	360 And TEMP, TEMP, -2147483648
	361 Compare TEMP, -2147483648
	362 JumpIfNotEqual {296}
	363 Move [X31+8], X1
	364 Move X21, X31
	365 Move TEMP, X22
	366 And TEMP, TEMP, -2147483648
	367 Compare TEMP, -2147483648
	368 JumpIfNotEqual {395}
	369 Move X22, [X19+56]
	370 Compare X22, 0
	371 JumpIfEqual {395}
	372 Move X10, 0xA3B000
	373 Move X8, [X22]
	374 Move X10, [X10+3584]
	375 NotImplemented "Instruction LDRH not yet implemented."
	376 Move X1, [X10]
	377 Compare X9, 0
	378 JumpIfEqual {385}
	379 Move X10, [X8+176]
	380 Add X10, X10, 8
	381 NotImplemented "Instruction LDUR not yet implemented."
	382 NotImplemented "Instruction CMP not yet implemented."
	383 Subtract X9, X9, 1
	384 Add X10, X10, 16
	385 Move X0, X22
	386 Move W2, W31
	387 Call 0x1C5D788
	388 NotImplemented "Instruction LDRSW not yet implemented."
	389 Add X8, X8, X9
	390 Add X0, X8, 312
	391 Move X8, [X0]
	392 Move X1, [X0+8]
	393 Move X0, X22
	394 NotImplemented "Instruction BLR not yet implemented."
	395 Compare X21, 0
	396 JumpIfEqual {109}
	397 Move X0, X21
	398 Call 0x1C17F18
	399 Move X20, X0
	400 Move [X31+8], X1
	401 Move TEMP, X22
	402 And TEMP, TEMP, -2147483648
	403 Compare TEMP, -2147483648
	404 JumpIfNotEqual {395}
	405 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x036B9484 MOV X2, X31
	0x036B9488 BL 0x3EB1B00
	0x036B948C B 0x36B95E8
	0x036B9490 ADRP X0, 0xA86000
	0x036B9494 LDR X0, [X0 + 0x5F0]
	0x036B9498 BL 0x1C16D08
	0x036B949C MOV X3, X0
	0x036B94A0 MOVZ W1, 0xB
	0x036B94A4 MOV X0, X20
	0x036B94A8 MOV X2, X21
	0x036B94AC BL 0x36B6A90
	0x036B94B0 MOV X20, X0
	0x036B94B4 ADRP X0, 0xA86000
	0x036B94B8 LDR X0, [X0 + 0x5D0]
	0x036B94BC BL 0x1C16D08
	0x036B94C0 MOV X1, X0
	0x036B94C4 MOV X0, X20
	0x036B94C8 BL 0x1C16DEC
	0x036B94CC B 0x36B9554
	0x036B94D0 B 0x36B9554
	0x036B94D4 MOV X20, X1
	0x036B94D8 MOV X21, X0
	0x036B94DC B 0x36B94EC
	0x036B94E0 MOV X20, X1
	0x036B94E4 MOV X21, X0
	0x036B94E8 BL 0x3EB1AE0
	0x036B94EC MOV X1, X20
	0x036B94F0 MOV X0, X21
	0x036B94F4 B 0x36B9554
	0x036B94F8 B 0x36B9554
	0x036B94FC B 0x36B9554

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xD28000
	007 Move X21, 0xA87000
	008 Move W8, [X22+2451]
	009 Move X21, [X21+1224]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xA87000
	017 Move X0, [X0+1408]
	018 Call 0x1C17CF4
	019 Move X0, 0xA87000
	020 Move X0, [X0+1224]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+2451], W8
	024 Move X0, [X21]
	025 Move X21, 0xA87000
	026 Move W8, [X0+224]
	027 Move X21, [X21+1408]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X2, [X21]
	032 Add X0, X20, 8
	033 Move X1, X19
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Call AsyncTaskMethodBuilder`1<Object>.SetStateMachine, X0, X1
	040 Return 

