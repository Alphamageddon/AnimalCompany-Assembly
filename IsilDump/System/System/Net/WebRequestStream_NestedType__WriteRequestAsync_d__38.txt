Type: System.Net.WebRequestStream/<WriteRequestAsync>d__38

Method: System.Void MoveNext()

Disassembly:
	0x036B5D28 STR X1, [X0 + 0x98]
	0x036B5D2C RET
	0x036B5D30 LDR X0, [X0 + 0xA0]
	0x036B5D34 RET
	0x036B5D38 STR X1, [X0 + 0xA0]
	0x036B5D3C RET
	0x036B5D40 LDRB W0, [X0 + 0xA8]
	0x036B5D44 RET
	0x036B5D48 AND W8, W1, 0x1
	0x036B5D4C STRB W8, [X0 + 0xA8]
	0x036B5D50 RET
	0x036B5D54 MOVZ W0, 0x1
	0x036B5D58 RET
	0x036B5D5C MOV W0, W31
	0x036B5D60 RET
	0x036B5D64 LDRB W0, [X0 + 0xA9]
	0x036B5D68 RET
	0x036B5D6C AND W8, W1, 0x1
	0x036B5D70 STRB W8, [X0 + 0xA9]
	0x036B5D74 RET
	0x036B5D78 SUB X31, X31, 0xE0
	0x036B5D7C STP X30, X25, [X31 + 0xA0]
	0x036B5D80 STP X24, X23, [X31 + 0xB0]
	0x036B5D84 STP X22, X21, [X31 + 0xC0]
	0x036B5D88 STP X20, X19, [X31 + 0xD0]
	0x036B5D8C ADRP X25, 0xD2B000
	0x036B5D90 ADRP X24, 0xA6D000
	0x036B5D94 LDRB W8, [X25 + 0x985]
	0x036B5D98 LDR X24, [X24 + 0xDA0]
	0x036B5D9C MOV X19, X4
	0x036B5DA0 MOV W20, W3
	0x036B5DA4 MOV W22, W2
	0x036B5DA8 MOV X21, X1
	0x036B5DAC MOV X23, X0
	0x036B5DB0 TBNZ X8, 0x0, 0x36B5DEC
	0x036B5DB4 ADRP X0, 0xA6D000
	0x036B5DB8 LDR X0, [X0 + 0xDA8]
	0x036B5DBC BL 0x1C16CF4
	0x036B5DC0 ADRP X0, 0xA8A000
	0x036B5DC4 LDR X0, [X0 + 0x478]
	0x036B5DC8 BL 0x1C16CF4
	0x036B5DCC ADRP X0, 0xA6D000
	0x036B5DD0 LDR X0, [X0 + 0xDB8]
	0x036B5DD4 BL 0x1C16CF4
	0x036B5DD8 ADRP X0, 0xA6D000
	0x036B5DDC LDR X0, [X0 + 0xDA0]
	0x036B5DE0 BL 0x1C16CF4
	0x036B5DE4 MOVZ W8, 0x1
	0x036B5DE8 STRB W8, [X25 + 0x985]
	0x036B5DEC LDR X0, [X24]
	0x036B5DF0 MOVI V0.2D, 0x0
	0x036B5DF4 STR X31, [X31 + 0x90]
	0x036B5DF8 STP V0, V0, [X31 + 0x40]
	0x036B5DFC STP V0, V0, [X31 + 0x70]
	0x036B5E00 STR V0, [X31 + 0x6]
	0x036B5E04 STP V0, V0, [X31 + 0x20]
	0x036B5E08 STR X23, [X31 + 0x58]
	0x036B5E0C STP W22, W20, [X31 + 0x50]
	0x036B5E10 STP X19, X21, [X31 + 0x40]
	0x036B5E14 ADRP X21, 0xA6D000
	0x036B5E18 ADRP X19, 0xA8A000
	0x036B5E1C ADRP X20, 0xA6D000
	0x036B5E20 LDR W8, [X0 + 0xE0]
	0x036B5E24 LDR X21, [X21 + 0xDA8]
	0x036B5E28 LDR X19, [X19 + 0x478]
	0x036B5E2C LDR X20, [X20 + 0xDB8]
	0x036B5E30 CBNZ W8, 0x36B5E38
	0x036B5E34 BL 0x1C16DFC
	0x036B5E38 LDR X0, [X21]
	0x036B5E3C ADD X8, X31, 0x8
	0x036B5E40 BL 0x263005C
	0x036B5E44 LDUR V0, [X31 + 0x8]
	0x036B5E48 LDR X9, [X31 + 0x18]
	0x036B5E4C LDR X2, [X19]
	0x036B5E50 ADD X8, X31, 0x20
	0x036B5E54 ORR X19, X8, 0xF
	0x036B5E58 MOVN W10, 0x0
	0x036B5E5C ADD X1, X31, 0x20
	0x036B5E60 MOV X0, X19
	0x036B5E64 STUR V0, [X31 + 0x28]
	0x036B5E68 STR X9, [X31 + 0x38]
	0x036B5E6C STR W10, [X31 + 0x20]
	0x036B5E70 BL 0x1FAE1D4
	0x036B5E74 LDR X1, [X20]
	0x036B5E78 MOV X0, X19
	0x036B5E7C BL 0x2630070
	0x036B5E80 LDP X20, X19, [X31 + 0xD0]
	0x036B5E84 LDP X22, X21, [X31 + 0xC0]
	0x036B5E88 LDP X24, X23, [X31 + 0xB0]
	0x036B5E8C LDP X30, X25, [X31 + 0xA0]
	0x036B5E90 ADD X31, X31, 0xE0
	0x036B5E94 RET
	0x036B5E98 STR X30, [X31 - 0x40]!
	0x036B5E9C STP X24, X23, [X31 + 0x10]
	0x036B5EA0 STP X22, X21, [X31 + 0x20]
	0x036B5EA4 STP X20, X19, [X31 + 0x30]
	0x036B5EA8 ADRP X20, 0xD2B000
	0x036B5EAC STR X4, [X31 + 0x8]
	0x036B5EB0 ADRP X24, 0xA8A000
	0x036B5EB4 LDRB W8, [X20 + 0x986]
	0x036B5EB8 LDR X24, [X24 + 0x480]
	0x036B5EBC MOV W21, W3
	0x036B5EC0 MOV W22, W2
	0x036B5EC4 MOV X23, X1
	0x036B5EC8 MOV X19, X0
	0x036B5ECC TBNZ X8, 0x0, 0x36B5F74
	0x036B5ED0 ADRP X0, 0xA3F000
	0x036B5ED4 LDR X0, [X0 + 0xE70]
	0x036B5ED8 BL 0x1C16CF4
	0x036B5EDC ADRP X0, 0xA46000
	0x036B5EE0 LDR X0, [X0 + 0x7D8]
	0x036B5EE4 BL 0x1C16CF4
	0x036B5EE8 ADRP X0, 0xA47000
	0x036B5EEC LDR X0, [X0 + 0x940]
	0x036B5EF0 BL 0x1C16CF4
	0x036B5EF4 ADRP X0, 0xA8A000
	0x036B5EF8 LDR X0, [X0 + 0x488]
	0x036B5EFC BL 0x1C16CF4
	0x036B5F00 ADRP X0, 0xA8A000
	0x036B5F04 LDR X0, [X0 + 0x490]
	0x036B5F08 BL 0x1C16CF4
	0x036B5F0C ADRP X0, 0xA66000
	0x036B5F10 LDR X0, [X0 + 0xB88]
	0x036B5F14 BL 0x1C16CF4
	0x036B5F18 ADRP X0, 0xA71000
	0x036B5F1C LDR X0, [X0 + 0xCC8]
	0x036B5F20 BL 0x1C16CF4
	0x036B5F24 ADRP X0, 0xA71000
	0x036B5F28 LDR X0, [X0 + 0xCD0]
	0x036B5F2C BL 0x1C16CF4
	0x036B5F30 ADRP X0, 0xA3F000
	0x036B5F34 LDR X0, [X0 + 0x7B8]
	0x036B5F38 BL 0x1C16CF4
	0x036B5F3C ADRP X0, 0xA8A000
	0x036B5F40 LDR X0, [X0 + 0x498]
	0x036B5F44 BL 0x1C16CF4
	0x036B5F48 ADRP X0, 0xA8A000
	0x036B5F4C LDR X0, [X0 + 0x4A0]
	0x036B5F50 BL 0x1C16CF4
	0x036B5F54 ADRP X0, 0xA8A000
	0x036B5F58 LDR X0, [X0 + 0x4A8]
	0x036B5F5C BL 0x1C16CF4
	0x036B5F60 ADRP X0, 0xA8A000
	0x036B5F64 LDR X0, [X0 + 0x480]
	0x036B5F68 BL 0x1C16CF4
	0x036B5F6C MOVZ W8, 0x1
	0x036B5F70 STRB W8, [X20 + 0x986]
	0x036B5F74 LDR X0, [X24]
	0x036B5F78 BL 0x1C16F10
	0x036B5F7C MOV X1, X31
	0x036B5F80 MOV X20, X0
	0x036B5F84 BL 0x33BDD8C
	0x036B5F88 CBZ X20, 0x36B6120
	0x036B5F8C STP X19, X23, [X20 + 0x10]
	0x036B5F90 STP W22, W21, [X20 + 0x20]
	0x036B5F94 ADRP X21, 0xA3F000
	0x036B5F98 LDRB W8, [X19 + 0x7C]
	0x036B5F9C LDR X21, [X21 + 0x7B8]
	0x036B5FA0 CBZ W8, 0x36B5FD8
	0x036B5FA4 LDR X0, [X21]
	0x036B5FA8 ADRP X19, 0xA71000
	0x036B5FAC LDR W8, [X0 + 0xE0]
	0x036B5FB0 LDR X19, [X19 + 0xCD0]
	0x036B5FB4 CBNZ W8, 0x36B5FBC
	0x036B5FB8 BL 0x1C16DFC
	0x036B5FBC LDR X1, [X19]
	0x036B5FC0 LDP X20, X19, [X31 + 0x30]
	0x036B5FC4 LDP X22, X21, [X31 + 0x20]
	0x036B5FC8 LDP X24, X23, [X31 + 0x10]
	0x036B5FCC MOV W0, W31
	0x036B5FD0 LDR X30, [X31], #0x40
	0x036B5FD4 B 0x229A250
	0x036B5FD8 ADRP X8, 0xA46000
	0x036B5FDC LDR X8, [X8 + 0x7D8]
	0x036B5FE0 LDR X0, [X8]
	0x036B5FE4 LDR W8, [X0 + 0xE0]
	0x036B5FE8 CBNZ W8, 0x36B5FF0
	0x036B5FEC BL 0x1C16DFC
	0x036B5FF0 ADD X0, X31, 0x8
	0x036B5FF4 MOV X1, X31
	0x036B5FF8 BL 0x33DD2B0
	0x036B5FFC TBZ X0, 0x0, 0x36B602C
	0x036B6000 LDR X0, [X21]
	0x036B6004 LDR X19, [X31 + 0x8]
	0x036B6008 LDR W8, [X0 + 0xE0]
	0x036B600C CBNZ W8, 0x36B6014
	0x036B6010 BL 0x1C16DFC
	0x036B6014 ADRP X8, 0xA70000
	0x036B6018 LDR X8, [X8 + 0xCC8]
	0x036B601C MOV X0, X19
	0x036B6020 LDR X1, [X8]
	0x036B6024 BL 0x2299598
	0x036B6028 B 0x36B610C
	0x036B602C ADRP X8, 0xA89000
	0x036B6030 LDR X8, [X8 + 0x488]
	0x036B6034 LDR X0, [X8]
	0x036B6038 BL 0x1C16F10
	0x036B603C ADRP X8, 0xA89000
	0x036B6040 LDR X8, [X8 + 0x498]
	0x036B6044 MOV X1, X20
	0x036B6048 MOV X3, X31
	0x036B604C MOV X21, X0
	0x036B6050 LDR X2, [X8]
	0x036B6054 BL 0x2D2B9F4
	0x036B6058 LDR X8, [X19]
	0x036B605C MOV X0, X19
	0x036B6060 LDR X9, [X8 + 0x218]
	0x036B6064 LDR X1, [X8 + 0x220]
	0x036B6068 BLR X9
	0x036B606C ADRP X8, 0xA3E000
	0x036B6070 LDR X8, [X8 + 0xE70]
	0x036B6074 MOV W19, W0
	0x036B6078 LDR X8, [X8]
	0x036B607C MOV X0, X8
	0x036B6080 BL 0x1C16F10
	0x036B6084 ADRP X8, 0xA89000
	0x036B6088 LDR X8, [X8 + 0x4A0]
	0x036B608C MOV X1, X20
	0x036B6090 MOV X3, X31
	0x036B6094 MOV X22, X0
	0x036B6098 LDR X2, [X8]
	0x036B609C BL 0x3314368
	0x036B60A0 ADRP X8, 0xA46000
	0x036B60A4 LDR X8, [X8 + 0x940]
	0x036B60A8 LDR X0, [X8]
	0x036B60AC BL 0x1C16F10
	0x036B60B0 ADRP X8, 0xA89000
	0x036B60B4 LDR X8, [X8 + 0x4A8]
	0x036B60B8 MOV X1, X20
	0x036B60BC MOV X3, X31
	0x036B60C0 MOV X23, X0
	0x036B60C4 LDR X2, [X8]
	0x036B60C8 BL 0x2D27194
	0x036B60CC ADRP X8, 0xA65000
	0x036B60D0 LDR X8, [X8 + 0xB88]
	0x036B60D4 LDR X20, [X31 + 0x8]
	0x036B60D8 LDR X0, [X8]
	0x036B60DC LDR W8, [X0 + 0xE0]
	0x036B60E0 CBNZ W8, 0x36B60E8
	0x036B60E4 BL 0x1C16DFC
	0x036B60E8 ADRP X8, 0xA89000
	0x036B60EC LDR X8, [X8 + 0x490]
	0x036B60F0 MOV X0, X21
	0x036B60F4 MOV W1, W19
	0x036B60F8 MOV X2, X22
	0x036B60FC LDR X5, [X8]
	0x036B6100 MOV X3, X23
	0x036B6104 MOV X4, X20
	0x036B6108 BL 0x21ED6C4
	0x036B610C LDP X20, X19, [X31 + 0x30]
	0x036B6110 LDP X22, X21, [X31 + 0x20]
	0x036B6114 LDP X24, X23, [X31 + 0x10]
	0x036B6118 LDR X30, [X31], #0x40
	0x036B611C RET
	0x036B6120 BL 0x1C16F20
	0x036B6124 MOV X1, X31
	0x036B6128 B 0x33BDD8C
	0x036B612C STR X30, [X31 - 0x40]!
	0x036B6130 STP X24, X23, [X31 + 0x10]
	0x036B6134 STP X22, X21, [X31 + 0x20]
	0x036B6138 STP X20, X19, [X31 + 0x30]
	0x036B613C ADRP X24, 0xD2A000
	0x036B6140 LDRB W8, [X24 + 0x987]
	0x036B6144 MOV X19, X4
	0x036B6148 MOV W20, W3
	0x036B614C MOV W21, W2
	0x036B6150 MOV X22, X1
	0x036B6154 MOV X23, X0
	0x036B6158 TBNZ X8, 0x0, 0x36B6170
	0x036B615C ADRP X0, 0xA89000
	0x036B6160 LDR X0, [X0 + 0x4B0]
	0x036B6164 BL 0x1C16CF4
	0x036B6168 MOVZ W8, 0x1
	0x036B616C STRB W8, [X24 + 0x987]
	0x036B6170 LDRB W8, [X23 + 0x61]
	0x036B6174 CBZ W8, 0x36B61B4
	0x036B6178 LDR X0, [X23 + 0x58]
	0x036B617C CBZ X0, 0x36B61B4
	0x036B6180 ADRP X8, 0xA89000
	0x036B6184 LDR X8, [X8 + 0x4B0]
	0x036B6188 LDR X9, [X0]
	0x036B618C LDR X8, [X8]
	0x036B6190 LDRB W11, [X9 + 0x130]
	0x036B6194 LDRB W10, [X8 + 0x130]
	0x036B6198 CMP W11, W10
	0x036B619C B.CC 0x36B61B4
	0x036B61A0 LDR X9, [X9 + 0xC8]
	0x036B61A4 ADD X9, X9, X10, 0x3, LSL
	0x036B61A8 LDUR X9, [X9 - 0x8]
	0x036B61AC CMP X9, X8
	0x036B61B0 B.EQ 0x36B61D0
	0x036B61B4 STR W31, [X19]
	0x036B61B8 LDP X20, X19, [X31 + 0x30]
	0x036B61BC LDP X22, X21, [X31 + 0x20]
	0x036B61C0 LDP X24, X23, [X31 + 0x10]
	0x036B61C4 MOV W0, W31
	0x036B61C8 LDR X30, [X31], #0x40
	0x036B61CC RET
	0x036B61D0 MOV X1, X22
	0x036B61D4 MOV W2, W21
	0x036B61D8 MOV W3, W20
	0x036B61DC MOV X4, X19
	0x036B61E0 LDP X20, X19, [X31 + 0x30]
	0x036B61E4 LDP X22, X21, [X31 + 0x20]
	0x036B61E8 LDP X24, X23, [X31 + 0x10]
	0x036B61EC MOV X5, X31
	0x036B61F0 LDR X30, [X31], #0x40
	0x036B61F4 B 0x3698154
	0x036B61F8 STR X30, [X31 - 0x20]!
	0x036B61FC STP X20, X19, [X31 + 0x10]
	0x036B6200 ADRP X20, 0xD2A000
	0x036B6204 LDRB W8, [X20 + 0x988]
	0x036B6208 MOV X19, X0
	0x036B620C TBNZ X8, 0x0, 0x36B6224
	0x036B6210 ADRP X0, 0xA80000
	0x036B6214 LDR X0, [X0 + 0xB08]
	0x036B6218 BL 0x1C16CF4
	0x036B621C MOVZ W8, 0x1
	0x036B6220 STRB W8, [X20 + 0x988]
	0x036B6224 LDR X0, [X19 + 0x40]
	0x036B6228 CBZ X0, 0x36B6288
	0x036B622C LDR X8, [X0]
	0x036B6230 ADRP X20, 0xA80000
	0x036B6234 LDP X9, X1, [X8 + 0x1B8]
	0x036B6238 LDR X20, [X20 + 0xB08]
	0x036B623C BLR X9
	0x036B6240 LDR X1, [X20]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+32], X30
	003 Move [X31+40], X21
	004 Move [X31+48], X20
	005 Move [X31+56], X19
	006 Move X20, 0xD2C000
	007 Move W8, [X20+2430]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {24}
	013 Move X0, 0xA8B000
	014 Move X0, [X0+1064]
	015 Call 0x1C17CF4
	016 Move X0, 0xA8B000
	017 Move X0, [X0+1072]
	018 Call 0x1C17CF4
	019 Move X0, 0xA42000
	020 Move X0, [X0+640]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X20+2430], W8
	024 Move [X31+16], X31
	025 Move [X31+24], X31
	026 Move [X31+8], X31
	027 Move X21, 0xA42000
	028 Move W8, [X19]
	029 Move X20, [X19+32]
	030 Move X21, [X21+640]
	031 Compare W8, 0
	032 JumpIfEqual {55}
	033 NotImplemented "Instruction CMP not yet implemented."
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Move X8, [X19+72]
	036 Move TEMP, 0
	037 Not TEMP
	038 Move W9, TEMP
	039 Move [X31+8], X8
	040 Move [X19+72], X31
	041 Move [X19], W9
	042 Move X8, [X19+72]
	043 Move TEMP, 0
	044 Not TEMP
	045 Move W9, TEMP
	046 Move [X31+8], X8
	047 Move [X19+72], X31
	048 Move [X19], W9
	049 Add X0, X31, 8
	050 Move X1, X31
	051 Call TaskAwaiter.GetResult, X0
	052 Compare X20, 0
	053 JumpIfNotEqual {116}
	054 Call 0x1C17F20
	055 NotImplemented "Instruction LDUR not yet implemented."
	056 Move TEMP, 0
	057 Not TEMP
	058 Move W8, TEMP
	059 Move [X31+1], V0
	060 Move [X19+56], X31
	061 Move [X19+64], X31
	062 Move [X19], W8
	063 Add X0, X31, 16
	064 Move X1, X31
	065 Call ConfiguredTaskAwaiter.GetResult, X0
	066 Compare X20, 0
	067 JumpIfEqual {259}
	068 Move X0, [X20+80]
	069 Compare X0, 0
	070 JumpIfEqual {260}
	071 Move X1, [X19+40]
	072 Call WebOperation.ThrowIfClosedOrDisposed, X0, X1
	073 Move X8, [X19+48]
	074 Compare X8, 0
	075 JumpIfEqual {116}
	076 Move W3, [X8+28]
	077 NotImplemented "Instruction CMP not yet implemented."
	078 Move X0, [X20+144]
	079 Compare X0, 0
	080 JumpIfEqual {263}
	081 Move X9, [X0]
	082 Move X1, [X8+16]
	083 Move X4, [X19+40]
	084 Move X8, [X9+792]
	085 Move X5, [X9+800]
	086 Move W2, W31
	087 NotImplemented "Instruction BLR not yet implemented."
	088 Compare X0, 0
	089 JumpIfEqual {264}
	090 Move X1, X31
	091 Call Task.GetAwaiter, X0
	092 Move [X31+8], X0
	093 Add X0, X31, 8
	094 Move X1, X31
	095 Call TaskAwaiter.get_IsCompleted, X0
	096 Move TEMP, X0
	097 And TEMP, TEMP, 1
	098 Compare TEMP, 1
	099 JumpIfEqual {49}
	100 Move W8, 1
	101 Move [X19], W8
	102 Move X8, [X31+8]
	103 Move [X19+72], X8
	104 Move X0, [X21]
	105 Move W8, [X0+224]
	106 Compare W8, 0
	107 JumpIfNotEqual {109}
	108 Call 0x1C17DFC
	109 Move X8, 0xA8B000
	110 Move X8, [X8+1072]
	111 Add X0, X19, 8
	112 Move X3, [X8]
	113 Add X1, X31, 8
	114 Move X2, X19
	115 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	116 Move X1, [X19+40]
	117 Move X0, X20
	118 Call WebRequestStream.FinishWriting, X0, X1
	119 Compare X0, 0
	120 JumpIfEqual {258}
	121 Move X1, X31
	122 Call Task.GetAwaiter, X0
	123 Move [X31+8], X0
	124 Add X0, X31, 8
	125 Move X1, X31
	126 Call TaskAwaiter.get_IsCompleted, X0
	127 Move TEMP, X0
	128 And TEMP, TEMP, 1
	129 Compare TEMP, 1
	130 JumpIfNotEqual {163}
	131 Add X0, X31, 8
	132 Move X1, X31
	133 Call TaskAwaiter.GetResult, X0
	134 Compare X20, 0
	135 JumpIfEqual {261}
	136 Move X0, [X20+80]
	137 Compare X0, 0
	138 JumpIfEqual {262}
	139 Move X1, [X19+40]
	140 Call WebOperation.ThrowIfClosedOrDisposed, X0, X1
	141 Move W8, [X20+96]
	142 Compare W8, 0
	143 JumpIfNotEqual {149}
	144 Move W8, [X20+98]
	145 Move W9, 1
	146 Move [X20+96], W9
	147 Compare W8, 0
	148 JumpIfEqual {185}
	149 Move TEMP, 1
	150 Not TEMP
	151 Move W8, TEMP
	152 Move [X19], W8
	153 Move [X19+48], X31
	154 Move X0, [X21]
	155 Add X19, X19, 8
	156 Move W8, [X0+224]
	157 Compare W8, 0
	158 JumpIfNotEqual {160}
	159 Call 0x1C17DFC
	160 Move X0, X19
	161 Move X1, X31
	162 Call AsyncTaskMethodBuilder.SetResult, X0
	163 Move W8, 2
	164 Move [X19], W8
	165 Move X8, [X31+8]
	166 Move [X19+72], X8
	167 Move X0, [X21]
	168 Move W8, [X0+224]
	169 Compare W8, 0
	170 JumpIfNotEqual {172}
	171 Call 0x1C17DFC
	172 Move X8, 0xA8B000
	173 Move X8, [X8+1072]
	174 Add X0, X19, 8
	175 Move X3, [X8]
	176 Add X1, X31, 8
	177 Move X2, X19
	178 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	179 Move X20, [X31+48]
	180 Move X19, [X31+56]
	181 Move X30, [X31+32]
	182 Move X21, [X31+40]
	183 Add X31, X31, 64
	184 Return 
	185 Move X8, [X20+80]
	186 Compare X8, 0
	187 JumpIfEqual {265}
	188 Move X8, [X8+40]
	189 Compare X8, 0
	190 JumpIfNotEqual {194}
	191 Move X8, [X20+88]
	192 Compare X8, 0
	193 JumpIfEqual {149}
	194 Move X0, X20
	195 Call WebRequestStream.GetWriteBuffer, X0
	196 Move [X19+48], X0
	197 Compare X0, 0
	198 JumpIfEqual {225}
	199 Move X8, [X20+80]
	200 Compare X8, 0
	201 JumpIfEqual {267}
	202 Move W8, [X8+48]
	203 Compare W8, 0
	204 JumpIfNotEqual {225}
	205 Move X0, [X20+64]
	206 Compare X0, 0
	207 JumpIfEqual {268}
	208 Move X8, [X0]
	209 Move X1, [X8+528]
	210 Move X9, [X8+520]
	211 NotImplemented "Instruction BLR not yet implemented."
	212 Add X31, X0, 1
	213 Move X0, [X20+64]
	214 Compare X0, 0
	215 JumpIfEqual {269}
	216 Move X8, [X0]
	217 Move X1, [X8+528]
	218 Move X9, [X8+520]
	219 NotImplemented "Instruction BLR not yet implemented."
	220 Move X8, [X19+48]
	221 Compare X8, 0
	222 JumpIfEqual {270}
	223 NotImplemented "Instruction LDRSW not yet implemented."
	224 NotImplemented "Instruction CMP not yet implemented."
	225 Move X2, [X19+40]
	226 Move W1, 1
	227 Move X0, X20
	228 Call WebRequestStream.SetHeadersAsync, X0, X1, X2
	229 Compare X0, 0
	230 JumpIfEqual {266}
	231 Move W1, W31
	232 Move X2, X31
	233 Call Task.ConfigureAwait, X0, X1
	234 Move [X31+16], X0
	235 Move [X31+24], X1
	236 Add X0, X31, 16
	237 Move X1, X31
	238 Call ConfiguredTaskAwaiter.get_IsCompleted, X0
	239 Move TEMP, X0
	240 And TEMP, TEMP, 1
	241 Compare TEMP, 1
	242 JumpIfEqual {63}
	243 Move [X19], W31
	244 Move V0, [X31+1]
	245 Move [X19+56], V0
	246 Move X0, [X21]
	247 Move W8, [X0+224]
	248 Compare W8, 0
	249 JumpIfNotEqual {251}
	250 Call 0x1C17DFC
	251 Move X8, 0xA8A000
	252 Move X8, [X8+1064]
	253 Add X0, X19, 8
	254 Move X3, [X8]
	255 Add X1, X31, 16
	256 Move X2, X19
	257 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	258 Call 0x1C17F20
	259 Call 0x1C17F20
	260 Call 0x1C17F20
	261 Call 0x1C17F20
	262 Call 0x1C17F20
	263 Call 0x1C17F20
	264 Call 0x1C17F20
	265 Call 0x1C17F20
	266 Call 0x1C17F20
	267 Call 0x1C17F20
	268 Call 0x1C17F20
	269 Call 0x1C17F20
	270 Call 0x1C17F20
	271 Move W8, 1
	272 Move [X20+40], W8
	273 Move X0, 0xA69000
	274 Move X0, [X0+816]
	275 Call 0x1C17D08
	276 Call 0x1C17F10
	277 Move X21, X0
	278 Move X0, 0xA8A000
	279 Move X0, [X0+1080]
	280 Call 0x1C17D08
	281 Move X1, X0
	282 Move W3, 11
	283 Move X0, X21
	284 Move X2, X31
	285 Move X4, X31
	286 Move X5, X31
	287 Call WebException..ctor, X0, X1, X2, X3, X4
	288 Move X0, [X20+80]
	289 Compare X0, 0
	290 JumpIfNotEqual {292}
	291 Call 0x1C17F20
	292 Move X1, X20
	293 Move X2, X21
	294 Call WebOperation.CompleteRequestWritten, X0, X1, X2
	295 Move X0, 0xA8A000
	296 Move X0, [X0+1088]
	297 Call 0x1C17D08
	298 Move X1, X0
	299 Move X0, X21
	300 Call 0x1C17DEC
	301 Move X20, X0
	302 NotImplemented "Instruction CMP not yet implemented."
	303 Move X0, X20
	304 Call 0x3EB2AD0
	305 Move X20, X0
	306 Move X0, 0xA3E000
	307 Move X0, [X0+2000]
	308 Call 0x1C17D08
	309 Move X8, [X20]
	310 Move X1, [X8]
	311 Call 0x1C18270
	312 Move TEMP, X0
	313 And TEMP, TEMP, 1
	314 Compare TEMP, 1
	315 JumpIfNotEqual {334}
	316 Move X20, [X20]
	317 Call 0x3EB2AE0
	318 Move TEMP, 1
	319 Not TEMP
	320 Move W8, TEMP
	321 Move [X19+48], X31
	322 Move [X19+8], W8
	323 Move X0, 0xA41000
	324 Move X0, [X0+640]
	325 Call 0x1C17D08
	326 Move W8, [X0+224]
	327 Compare W8, 0
	328 JumpIfNotEqual {330}
	329 Call 0x1C17DFC
	330 Move X0, X19
	331 Move X1, X20
	332 Move X2, X31
	333 Call AsyncTaskMethodBuilder.SetException, X0, X1
	334 Move W0, 8
	335 Call 0x3EB2AF0
	336 Move X8, [X20]
	337 Move [X0], X8
	338 Move X1, 0x7FF000
	339 Add X1, X1, 3672
	340 Move X2, X31
	341 Call 0x3EB2B00
	342 Move X20, X0
	343 Call 0x3EB2AE0
	344 Move X0, X20
	345 Call 0x1D2D690
	346 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x036B6244 MOV X2, X31
	0x036B6248 BL 0x321BA08
	0x036B624C TBZ X0, 0x0, 0x36B6258
	0x036B6250 MOV W0, W31
	0x036B6254 B 0x36B627C
	0x036B6258 LDR W8, [X19 + 0x90]
	0x036B625C CMP W8, 0xC7
	0x036B6260 CSET W9, GT
	0x036B6264 CMP W8, 0xCC
	0x036B6268 CSET W10, NE
	0x036B626C CMP W8, 0x130
	0x036B6270 CSET W8, NE
	0x036B6274 AND W9, W9, W10, 0x0
	0x036B6278 AND W0, W8, W9, 0x0
	0x036B627C LDP X20, X19, [X31 + 0x10]
	0x036B6280 LDR X30, [X31], #0x20
	0x036B6284 RET
	0x036B6288 BL 0x1C16F20
	0x036B628C STR X30, [X31 - 0x40]!
	0x036B6290 STP X24, X23, [X31 + 0x10]
	0x036B6294 STP X22, X21, [X31 + 0x20]
	0x036B6298 STP X20, X19, [X31 + 0x30]
	0x036B629C ADRP X21, 0xD2A000
	0x036B62A0 LDRB W8, [X21 + 0x989]
	0x036B62A4 MOV X20, X1
	0x036B62A8 MOV X19, X0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xD2B000
	007 Move X22, 0xA41000
	008 Move W8, [X21+2431]
	009 Move X22, [X22+640]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xA41000
	017 Move X0, [X0+640]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2431], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Add X0, X20, 8
	027 Move X1, X19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X2, X31
	033 Move X30, [X31+48]
	034 Call AsyncTaskMethodBuilder.SetStateMachine, X0, X1
	035 Return 

