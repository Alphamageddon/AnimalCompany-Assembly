Type: System.Net.CookieTokenizer

Method: System.Void .ctor(System.String tokenStream)

Disassembly:
	0x0368BC80 ADD X1, X1, 0xE58
	0x0368BC84 MOV X2, X31
	0x0368BC88 BL 0x3EB1B00
	0x0368BC8C B 0x368BC90
	0x0368BC90 MOV X23, X0
	0x0368BC94 BL 0x3EB1AE0
	0x0368BC98 MOV X0, X23
	0x0368BC9C BL 0x1D2C690
	0x0368BCA0 BL 0x1990590
	0x0368BCA4 STR X30, [X31 - 0x30]!
	0x0368BCA8 STP X22, X21, [X31 + 0x10]
	0x0368BCAC STP X20, X19, [X31 + 0x20]
	0x0368BCB0 ADRP X21, 0xD55000
	0x0368BCB4 ADRP X22, 0xAB3000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X1
	005 Move X1, X31
	006 Move X20, X0
	007 Call Object..ctor, X0
	008 Compare X19, 0
	009 JumpIfEqual {17}
	010 Move W8, [X19+16]
	011 Move [X20+56], X19
	012 Move [X20+24], W8
	013 Move X20, [X31+16]
	014 Move X19, [X31+24]
	015 Move X30, [X31+32]
	016 Return 
	017 Call 0x1C17F20

Method: System.Boolean get_EndOfCookie()

Disassembly:
	0x0368BCB8 LDRB W8, [X21 + 0x841]
	0x0368BCBC LDR X22, [X22 + 0x2A0]

ISIL:
	001 Move W0, [X0+16]
	002 Return X0

Method: System.Void set_EndOfCookie(System.Boolean value)

Disassembly:
	0x0368BCC0 MOV X19, X2
	0x0368BCC4 MOV X20, X1
	0x0368BCC8 TBNZ X8, 0x0, 0x368BCE0

ISIL:
	001 And W8, W1, 1
	002 Move [X0+16], W8
	003 Return 

Method: System.Boolean get_Eof()

Disassembly:
	0x0368BCCC ADRP X0, 0xAB3000
	0x0368BCD0 LDR X0, [X0 + 0x2A0]
	0x0368BCD4 BL 0x1C16CF4
	0x0368BCD8 MOVZ W8, 0x1

ISIL:
	001 Move W8, [X0+20]
	002 Move W9, [X0+24]
	003 NotImplemented "Instruction CMP not yet implemented."
	004 NotImplemented "Instruction CSET not yet implemented."
	005 Return X0

Method: System.String get_Name()

Disassembly:
	0x0368BCDC STRB W8, [X21 + 0x841]
	0x0368BCE0 LDR X1, [X22]

ISIL:
	001 Move X0, [X0+32]
	002 Return X0

Method: System.Void set_Name(System.String value)

Disassembly:
	0x0368BCE4 CBZ X20, 0x368BD64
	0x0368BCE8 LDR X8, [X20]

ISIL:
	001 Move [X0+32], X1
	002 Return 

Method: System.Boolean get_Quoted()

Disassembly:
	0x0368BCEC CMP X8, X1
	0x0368BCF0 B.NE 0x368BD80

ISIL:
	001 Move W0, [X0+40]
	002 Return X0

Method: System.Void set_Quoted(System.Boolean value)

Disassembly:
	0x0368BCF4 CBZ X19, 0x368BD74
	0x0368BCF8 LDR X8, [X19]
	0x0368BCFC CMP X8, X1

ISIL:
	001 And W8, W1, 1
	002 Move [X0+40], W8
	003 Return 

Method: System.Net.CookieToken get_Token()

Disassembly:
	0x0368BD00 B.NE 0x368BD78
	0x0368BD04 LDR X0, [X20 + 0x40]

ISIL:
	001 Move W0, [X0+48]
	002 Return X0

Method: System.Void set_Token(System.Net.CookieToken value)

Disassembly:
	0x0368BD08 LDR X1, [X19 + 0x40]
	0x0368BD0C MOVZ W2, 0x5

ISIL:
	001 Move [X0+48], W1
	002 Return 

Method: System.String get_Value()

Disassembly:
	0x0368BD10 MOV X3, X31
	0x0368BD14 BL 0x322590C

ISIL:
	001 Move X0, [X0+64]
	002 Return X0

Method: System.Void set_Value(System.String value)

Disassembly:
	0x0368BD18 CBNZ W0, 0x368BD34
	0x0368BD1C LDR X0, [X20 + 0x28]

ISIL:
	001 Move [X0+64], X1
	002 Return 

Method: System.String Extract()

Disassembly:
	0x0368BD20 LDR X1, [X19 + 0x28]
	0x0368BD24 MOVZ W2, 0x5
	0x0368BD28 MOV X3, X31
	0x0368BD2C BL 0x322590C
	0x0368BD30 CBZ W0, 0x368BD44
	0x0368BD34 LDP X20, X19, [X31 + 0x20]
	0x0368BD38 LDP X22, X21, [X31 + 0x10]
	0x0368BD3C LDR X30, [X31], #0x30
	0x0368BD40 RET
	0x0368BD44 LDR X0, [X20 + 0x48]
	0x0368BD48 LDR X1, [X19 + 0x48]
	0x0368BD4C LDP X20, X19, [X31 + 0x20]
	0x0368BD50 LDP X22, X21, [X31 + 0x10]
	0x0368BD54 MOVZ W2, 0x4
	0x0368BD58 MOV X3, X31
	0x0368BD5C LDR X30, [X31], #0x30
	0x0368BD60 B 0x322590C
	0x0368BD64 CBZ X19, 0x368BD74
	0x0368BD68 LDR X8, [X19]
	0x0368BD6C CMP X8, X1
	0x0368BD70 B.NE 0x368BD78
	0x0368BD74 BL 0x1C16F20
	0x0368BD78 MOV X0, X19
	0x0368BD7C BL 0x1C171E0
	0x0368BD80 MOV X0, X20
	0x0368BD84 BL 0x1C171E0
	0x0368BD88 STR X30, [X31 - 0x30]!
	0x0368BD8C STP X22, X21, [X31 + 0x10]
	0x0368BD90 STP X20, X19, [X31 + 0x20]
	0x0368BD94 ADRP X20, 0xD55000
	0x0368BD98 ADRP X22, 0xA95000
	0x0368BD9C ADRP X21, 0xA69000
	0x0368BDA0 LDRB W8, [X20 + 0x842]
	0x0368BDA4 LDR X22, [X22 + 0xBA0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xD56000
	005 Move W8, [X20+2105]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xA6B000
	012 Move X0, [X0+632]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2105], W8
	016 Move W2, [X19+52]
	017 Compare W2, 0
	018 JumpIfEqual {36}
	019 Move X0, [X19+56]
	020 Compare X0, 0
	021 JumpIfEqual {45}
	022 Move W1, [X19+44]
	023 Move X3, X31
	024 Call String.Substring, X0, X1, X2
	025 Move W8, [X19+40]
	026 Compare W8, 0
	027 JumpIfNotEqual {41}
	028 Compare X0, 0
	029 JumpIfEqual {45}
	030 Move X20, [X31+16]
	031 Move X19, [X31+24]
	032 Move X1, X31
	033 Move X30, [X31+32]
	034 Call String.Trim, X0
	035 Return X0
	036 Move X8, 0xA6B000
	037 Move X8, [X8+632]
	038 Move X8, [X8]
	039 Move X8, [X8+184]
	040 Move X0, [X8]
	041 Move X20, [X31+16]
	042 Move X19, [X31+24]
	043 Move X30, [X31+32]
	044 Return X0
	045 Call 0x1C17F20

Method: System.Net.CookieToken FindNext(System.Boolean ignoreComma, System.Boolean ignoreEquals)

Disassembly:
	0x0368BDA8 LDR X21, [X21 + 0x9F0]
	0x0368BDAC MOV X19, X0
	0x0368BDB0 TBNZ X8, 0x0, 0x368BDD4
	0x0368BDB4 ADRP X0, 0xA95000
	0x0368BDB8 LDR X0, [X0 + 0xBA0]
	0x0368BDBC BL 0x1C16CF4
	0x0368BDC0 ADRP X0, 0xA69000
	0x0368BDC4 LDR X0, [X0 + 0x9F0]
	0x0368BDC8 BL 0x1C16CF4
	0x0368BDCC MOVZ W8, 0x1
	0x0368BDD0 STRB W8, [X20 + 0x842]
	0x0368BDD4 LDR X0, [X22]
	0x0368BDD8 BL 0x1C16F10
	0x0368BDDC MOV X1, X31
	0x0368BDE0 MOV X20, X0
	0x0368BDE4 BL 0x3351F5C
	0x0368BDE8 STR X20, [X19 + 0x18]
	0x0368BDEC LDR X0, [X21]
	0x0368BDF0 LDR W8, [X0 + 0xE0]
	0x0368BDF4 CBNZ W8, 0x368BE00
	0x0368BDF8 BL 0x1C16DFC
	0x0368BDFC LDR X0, [X21]
	0x0368BE00 LDR X8, [X0 + 0xB8]
	0x0368BE04 MOV X0, X19
	0x0368BE08 MOV X1, X31
	0x0368BE0C LDR X8, [X8 + 0x10]
	0x0368BE10 STR X8, [X19 + 0x20]
	0x0368BE14 BL 0x33BDD8C
	0x0368BE18 MOVZ W8, 0x1
	0x0368BE1C STRB W8, [X19 + 0x29]
	0x0368BE20 LDP X20, X19, [X31 + 0x20]
	0x0368BE24 LDP X22, X21, [X31 + 0x10]
	0x0368BE28 LDR X30, [X31], #0x30
	0x0368BE2C RET
	0x0368BE30 STP X30, X21, [X31 - 0x20]!
	0x0368BE34 STP X20, X19, [X31 + 0x10]
	0x0368BE38 ADRP X21, 0xD55000
	0x0368BE3C LDRB W8, [X21 + 0x843]
	0x0368BE40 MOV W19, W1
	0x0368BE44 MOV X20, X0
	0x0368BE48 TBNZ X8, 0x0, 0x368BE60
	0x0368BE4C ADRP X0, 0xAB3000
	0x0368BE50 LDR X0, [X0 + 0x2A0]
	0x0368BE54 BL 0x1C16CF4
	0x0368BE58 MOVZ W8, 0x1
	0x0368BE5C STRB W8, [X21 + 0x843]
	0x0368BE60 TBNZ X19, 0x1F, 0x368BEC8
	0x0368BE64 LDR X0, [X20 + 0x18]
	0x0368BE68 CBZ X0, 0x368BF10
	0x0368BE6C LDR X8, [X0]
	0x0368BE70 LDR X9, [X8 + 0x298]
	0x0368BE74 LDR X1, [X8 + 0x2A0]
	0x0368BE78 BLR X9
	0x0368BE7C CMP W0, W19
	0x0368BE80 B.LE 0x368BEC8
	0x0368BE84 LDR X0, [X20 + 0x18]
	0x0368BE88 CBZ X0, 0x368BF10
	0x0368BE8C LDR X8, [X0]
	0x0368BE90 MOV W1, W19
	0x0368BE94 LDR X9, [X8 + 0x2E8]
	0x0368BE98 LDR X2, [X8 + 0x2F0]
	0x0368BE9C BLR X9
	0x0368BEA0 CBZ X0, 0x368BEBC
	0x0368BEA4 ADRP X8, 0xAB3000
	0x0368BEA8 LDR X8, [X8 + 0x2A0]
	0x0368BEAC LDR X1, [X8]
	0x0368BEB0 LDR X8, [X0]
	0x0368BEB4 CMP X8, X1
	0x0368BEB8 B.NE 0x368BF14
	0x0368BEBC LDP X20, X19, [X31 + 0x10]
	0x0368BEC0 LDP X30, X21, [X31], #0x20
	0x0368BEC4 RET
	0x0368BEC8 ADRP X0, 0xA70000
	0x0368BECC LDR X0, [X0 + 0x760]
	0x0368BED0 BL 0x1C16D08
	0x0368BED4 BL 0x1C16F10
	0x0368BED8 MOV X19, X0
	0x0368BEDC ADRP X0, 0xA73000
	0x0368BEE0 LDR X0, [X0 + 0x130]
	0x0368BEE4 BL 0x1C16D08
	0x0368BEE8 MOV X1, X0
	0x0368BEEC MOV X0, X19
	0x0368BEF0 MOV X2, X31
	0x0368BEF4 BL 0x3316014
	0x0368BEF8 ADRP X0, 0xAB3000
	0x0368BEFC LDR X0, [X0 + 0x378]
	0x0368BF00 BL 0x1C16D08
	0x0368BF04 MOV X1, X0
	0x0368BF08 MOV X0, X19
	0x0368BF0C BL 0x1C16DEC
	0x0368BF10 BL 0x1C16F20
	0x0368BF14 BL 0x1C171E0
	0x0368BF18 STR X30, [X31 - 0x20]!
	0x0368BF1C STP X20, X19, [X31 + 0x10]
	0x0368BF20 CBZ X1, 0x368BF8C
	0x0368BF24 LDR W8, [X0 + 0x10]
	0x0368BF28 MOV X19, X1
	0x0368BF2C MOV X20, X0
	0x0368BF30 ADD W8, W8, 0x1
	0x0368BF34 STR W8, [X0 + 0x10]
	0x0368BF38 BL 0x368BFD8
	0x0368BF3C LDR X8, [X20 + 0x18]
	0x0368BF40 CBZ X8, 0x368BFD4
	0x0368BF44 LDR X9, [X8]
	0x0368BF48 MOV W1, W0
	0x0368BF4C ADDS W31, W0, 0x1
	0x0368BF50 B.EQ 0x368BF70
	0x0368BF54 LDR X4, [X9 + 0x2F8]
	0x0368BF58 LDR X3, [X9 + 0x300]
	0x0368BF5C MOV X2, X19
	0x0368BF60 LDP X20, X19, [X31 + 0x10]
	0x0368BF64 MOV X0, X8
	0x0368BF68 LDR X30, [X31], #0x20
	0x0368BF6C BR X4
	0x0368BF70 LDR X3, [X9 + 0x308]
	0x0368BF74 LDR X2, [X9 + 0x310]
	0x0368BF78 MOV X1, X19
	0x0368BF7C LDP X20, X19, [X31 + 0x10]
	0x0368BF80 MOV X0, X8
	0x0368BF84 LDR X30, [X31], #0x20
	0x0368BF88 BR X3
	0x0368BF8C ADRP X0, 0xA6D000
	0x0368BF90 LDR X0, [X0 + 0x528]
	0x0368BF94 BL 0x1C16D08
	0x0368BF98 BL 0x1C16F10
	0x0368BF9C MOV X19, X0
	0x0368BFA0 ADRP X0, 0xAB3000
	0x0368BFA4 LDR X0, [X0 + 0x380]
	0x0368BFA8 BL 0x1C16D08
	0x0368BFAC MOV X1, X0
	0x0368BFB0 MOV X0, X19
	0x0368BFB4 MOV X2, X31
	0x0368BFB8 BL 0x330E100
	0x0368BFBC ADRP X0, 0xAB3000
	0x0368BFC0 LDR X0, [X0 + 0x388]
	0x0368BFC4 BL 0x1C16D08
	0x0368BFC8 MOV X1, X0
	0x0368BFCC MOV X0, X19
	0x0368BFD0 BL 0x1C16DEC
	0x0368BFD4 BL 0x1C16F20
	0x0368BFD8 STP X30, X27, [X31 - 0x50]!
	0x0368BFDC STP X26, X25, [X31 + 0x10]
	0x0368BFE0 STP X24, X23, [X31 + 0x20]
	0x0368BFE4 STP X22, X21, [X31 + 0x30]
	0x0368BFE8 STP X20, X19, [X31 + 0x40]
	0x0368BFEC ADRP X20, 0xD55000
	0x0368BFF0 ADRP X25, 0xAB3000
	0x0368BFF4 LDRB W8, [X20 + 0x847]
	0x0368BFF8 LDR X25, [X25 + 0x2A0]
	0x0368BFFC MOV X21, X1
	0x0368C000 MOV X19, X0
	0x0368C004 TBNZ X8, 0x0, 0x368C040
	0x0368C008 ADRP X0, 0xAB2000
	0x0368C00C LDR X0, [X0 + 0x2A0]
	0x0368C010 BL 0x1C16CF4
	0x0368C014 ADRP X0, 0xA91000
	0x0368C018 LDR X0, [X0 + 0x918]
	0x0368C01C BL 0x1C16CF4
	0x0368C020 ADRP X0, 0xA67000
	0x0368C024 LDR X0, [X0 + 0xE00]
	0x0368C028 BL 0x1C16CF4
	0x0368C02C ADRP X0, 0xA67000
	0x0368C030 LDR X0, [X0 + 0xE18]
	0x0368C034 BL 0x1C16CF4
	0x0368C038 MOVZ W8, 0x1
	0x0368C03C STRB W8, [X20 + 0x847]
	0x0368C040 LDR X0, [X25]
	0x0368C044 LDR W8, [X0 + 0xE0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0xD56000
	008 Move W8, [X22+2106]
	009 Move W20, W2
	010 Move W21, W1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xA6B000
	017 Move X0, [X0+368]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+2106], W8
	021 Move W1, [X19+20]
	022 Move W8, [X19+24]
	023 Move [X19+52], W31
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move [X19+44], W1
	026 Move X23, 0xA6B000
	027 Move X23, [X23+368]
	028 Move X0, [X19+56]
	029 Compare X0, 0
	030 JumpIfEqual {186}
	031 Move X2, X31
	032 Call String.get_Chars, X0, X1
	033 Move X8, [X23]
	034 Move W22, W0
	035 Move W9, [X8+224]
	036 Compare W9, 0
	037 JumpIfNotEqual {40}
	038 Move X0, X8
	039 Call 0x1C17DFC
	040 Move W0, W22
	041 Move X1, X31
	042 Call Char.IsWhiteSpace, X0
	043 Move W1, [X19+20]
	044 Move TEMP, X0
	045 And TEMP, TEMP, 1
	046 Compare TEMP, 1
	047 JumpIfNotEqual {55}
	048 Move W9, [X19+44]
	049 Move W8, [X19+24]
	050 Add W1, W1, 1
	051 Move [X19+20], W1
	052 Add W9, W9, 1
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Move [X19+44], W9
	055 Move W8, [X19+24]
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Move X0, [X19+56]
	058 Compare X0, 0
	059 JumpIfEqual {186}
	060 Move X2, X31
	061 Call String.get_Chars, X0, X1
	062 And W8, W0, 0xFFFF
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Move W9, [X19+20]
	065 Move W8, [X19+24]
	066 Move W10, 1
	067 Move [X19+40], W10
	068 Add W1, W9, 1
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Move [X19+20], W1
	071 Move W21, W31
	072 Move X0, [X19+56]
	073 Compare X0, 0
	074 JumpIfEqual {186}
	075 Move X2, X31
	076 Call String.get_Chars, X0, X1
	077 And W8, W0, 0xFFFF
	078 NotImplemented "Instruction CMP not yet implemented."
	079 Xor W9, W21, 1
	080 Move TEMP, X9
	081 And TEMP, TEMP, 1
	082 Compare TEMP, 1
	083 JumpIfEqual {95}
	084 NotImplemented "Instruction CMP not yet implemented."
	085 Move W10, [X19+20]
	086 Move W8, [X19+24]
	087 NotImplemented "Instruction CSET not yet implemented."
	088 And W21, W11, W9
	089 Add W1, W10, 1
	090 NotImplemented "Instruction CMP not yet implemented."
	091 Move [X19+20], W1
	092 Move W1, [X19+20]
	093 Move W8, [X19+24]
	094 Move W22, 1
	095 Move W1, [X19+20]
	096 Move W8, [X19+24]
	097 NotImplemented "Instruction CMP not yet implemented."
	098 Add W1, W1, 1
	099 Move [X19+20], W1
	100 Move W9, [X19+44]
	101 Move W22, W31
	102 Move W21, W31
	103 Subtract W9, W1, W9
	104 Move [X19+52], W9
	105 NotImplemented "Instruction CMP not yet implemented."
	106 Move X0, [X19+56]
	107 Compare X0, 0
	108 JumpIfEqual {186}
	109 Move X2, X31
	110 Call String.get_Chars, X0, X1
	111 And W8, W0, 0xFFFF
	112 NotImplemented "Instruction CMP not yet implemented."
	113 Move TEMP, X20
	114 And TEMP, TEMP, 1
	115 Compare TEMP, 1
	116 JumpIfEqual {125}
	117 Move X0, [X19+56]
	118 Compare X0, 0
	119 JumpIfEqual {186}
	120 Move W1, [X19+20]
	121 Move X2, X31
	122 Call String.get_Chars, X0, X1
	123 And W8, W0, 0xFFFF
	124 NotImplemented "Instruction CMP not yet implemented."
	125 Move TEMP, X21
	126 And TEMP, TEMP, 1
	127 Compare TEMP, 1
	128 JumpIfEqual {137}
	129 Move X0, [X19+56]
	130 Compare X0, 0
	131 JumpIfEqual {186}
	132 Move W1, [X19+20]
	133 Move X2, X31
	134 Call String.get_Chars, X0, X1
	135 And W8, W0, 0xFFFF
	136 NotImplemented "Instruction CMP not yet implemented."
	137 Move X0, [X19+56]
	138 Compare X0, 0
	139 JumpIfEqual {186}
	140 Move W1, [X19+20]
	141 Move X2, X31
	142 Call String.get_Chars, X0, X1
	143 Move W9, [X19+20]
	144 And W8, W0, 0xFFFF
	145 NotImplemented "Instruction CMP not yet implemented."
	146 Move W21, W31
	147 Add W1, W9, 1
	148 Move TEMP, 0
	149 Not TEMP
	150 Move W8, TEMP
	151 Move [X19+44], W1
	152 Move W8, [X19+52]
	153 Add W1, W9, 1
	154 Move W9, [X19+24]
	155 Add W8, W8, W22
	156 Move [X19+20], W1
	157 Move [X19+52], W8
	158 NotImplemented "Instruction CMP not yet implemented."
	159 Move W1, [X19+20]
	160 Move W8, [X19+24]
	161 NotImplemented "Instruction CMP not yet implemented."
	162 Move X0, [X19+56]
	163 Compare X0, 0
	164 JumpIfEqual {186}
	165 Move X2, X31
	166 Call String.get_Chars, X0, X1
	167 Move W11, [X19+20]
	168 And W8, W0, 0xFFFF
	169 Move W9, 4
	170 Move W10, 6
	171 NotImplemented "Instruction CMP not yet implemented."
	172 NotImplemented "Instruction CSEL not yet implemented."
	173 NotImplemented "Instruction CMP not yet implemented."
	174 Move W8, 3
	175 NotImplemented "Instruction CSEL not yet implemented."
	176 Add W8, W11, 1
	177 Move [X19+20], W8
	178 Move W0, 5
	179 Move X20, [X31+32]
	180 Move X19, [X31+40]
	181 Move X22, [X31+16]
	182 Move X21, [X31+24]
	183 Move X30, [X31+48]
	184 Move X23, [X31+56]
	185 Return X0
	186 Call 0x1C17F20

Method: System.Net.CookieToken Next(System.Boolean first, System.Boolean parseResponseCookies)

Disassembly:
	0x0368C048 CBNZ W8, 0x368C050
	0x0368C04C BL 0x1C16DFC
	0x0368C050 ADRP X20, 0xD54000
	0x0368C054 LDRB W8, [X20 + 0x854]
	0x0368C058 CBNZ W8, 0x368C070
	0x0368C05C ADRP X0, 0xAB2000
	0x0368C060 LDR X0, [X0 + 0x2A0]
	0x0368C064 BL 0x1C16CF4
	0x0368C068 MOVZ W8, 0x1
	0x0368C06C STRB W8, [X20 + 0x854]
	0x0368C070 LDR X0, [X25]
	0x0368C074 LDR W8, [X0 + 0xE0]
	0x0368C078 CBNZ W8, 0x368C084
	0x0368C07C BL 0x1C16DFC
	0x0368C080 LDR X0, [X25]
	0x0368C084 LDR X8, [X19 + 0x18]
	0x0368C088 CBZ X8, 0x368C2B4
	0x0368C08C LDR X9, [X0 + 0xB8]
	0x0368C090 LDR X10, [X8]
	0x0368C094 ADRP X24, 0xA67000
	0x0368C098 MOV X0, X8
	0x0368C09C LDR X22, [X9 + 0x18]
	0x0368C0A0 LDR X9, [X10 + 0x388]
	0x0368C0A4 LDR X1, [X10 + 0x390]
	0x0368C0A8 LDR X24, [X24 + 0xE00]
	0x0368C0AC BLR X9
	0x0368C0B0 MOV X19, X0
	0x0368C0B4 CBZ X0, 0x368C2B8
	0x0368C0B8 ADRP X26, 0xA67000
	0x0368C0BC ADRP X27, 0xA91000
	0x0368C0C0 LDR X26, [X26 + 0xE18]
	0x0368C0C4 LDR X27, [X27 + 0x918]
	0x0368C0C8 MOV W20, W31
	0x0368C0CC LDR X8, [X19]
	0x0368C0D0 LDR X1, [X26]
	0x0368C0D4 LDRH W9, [X8 + 0x12E]
	0x0368C0D8 CBZ X9, 0x368C0FC
	0x0368C0DC LDR X10, [X8 + 0xB0]
	0x0368C0E0 ADD X10, X10, 0x8
	0x0368C0E4 LDUR X11, [X10 - 0x8]
	0x0368C0E8 CMP X11, X1
	0x0368C0EC B.EQ 0x368C10C
	0x0368C0F0 SUBS X9, X9, 0x1
	0x0368C0F4 ADD X10, X10, 0x10
	0x0368C0F8 B.NE 0x368C0E4
	0x0368C0FC MOV X0, X19
	0x0368C100 MOV W2, W31
	0x0368C104 BL 0x1C5C788
	0x0368C108 B 0x368C118
	0x0368C10C LDRSW X9, [X10]
	0x0368C110 ADD X8, X8, X9, 0x4, LSL
	0x0368C114 ADD X0, X8, 0x138
	0x0368C118 LDP X8, X1, [X0]
	0x0368C11C MOV X0, X19
	0x0368C120 BLR X8
	0x0368C124 TBZ X0, 0x0, 0x368C20C
	0x0368C128 LDR X8, [X19]
	0x0368C12C LDR X1, [X26]
	0x0368C130 LDRH W9, [X8 + 0x12E]
	0x0368C134 CBZ X9, 0x368C158
	0x0368C138 LDR X10, [X8 + 0xB0]
	0x0368C13C ADD X10, X10, 0x8
	0x0368C140 LDUR X11, [X10 - 0x8]
	0x0368C144 CMP X11, X1
	0x0368C148 B.EQ 0x368C168

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move W21, W2
	007 Move W22, W1
	008 Move X19, X0
	009 Call CookieTokenizer.Reset, X0
	010 Move X0, X19
	011 Move W1, W31
	012 Move W2, W31
	013 Call CookieTokenizer.FindNext, X0, X1, X2
	014 Move W20, W0
	015 NotImplemented "Instruction CMP not yet implemented."
	016 NotImplemented "Instruction CMP not yet implemented."
	017 Move W8, 1
	018 Move [X19+16], W8
	019 Move X0, X19
	020 Call CookieTokenizer.Extract, X0
	021 Move [X19+32], X0
	022 Compare X0, 0
	023 JumpIfEqual {67}
	024 Move W8, [X0+16]
	025 Compare W8, 0
	026 JumpIfEqual {60}
	027 And W1, W21, 1
	028 Move X0, X19
	029 Call CookieTokenizer.TokenFromName, X0, X1
	030 Move [X19+48], W0
	031 Move W20, 2
	032 Move X0, X19
	033 Call CookieTokenizer.Extract, X0
	034 Move [X19+32], X0
	035 Move TEMP, X22
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfNotEqual {43}
	039 Move W8, 9
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Move [X19+48], W8
	042 Move W1, W31
	043 And W1, W21, 1
	044 Move X0, X19
	045 Call CookieTokenizer.TokenFromName, X0, X1
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Move [X19+48], W0
	048 NotImplemented "Instruction CMP not yet implemented."
	049 NotImplemented "Instruction CSET not yet implemented."
	050 Move W2, 1
	051 Move X0, X19
	052 Move W20, 1
	053 Call CookieTokenizer.FindNext, X0, X1, X2
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Move [X19+16], W20
	056 Move X0, X19
	057 Call CookieTokenizer.Extract, X0
	058 Move W20, 1
	059 Move [X19+64], X0
	060 Move W0, W20
	061 Move X20, [X31+32]
	062 Move X19, [X31+40]
	063 Move X22, [X31+16]
	064 Move X21, [X31+24]
	065 Move X30, [X31+48]
	066 Return X0
	067 Call 0x1C17F20

Method: System.Void Reset()

Disassembly:
	0x0368C14C SUBS X9, X9, 0x1
	0x0368C150 ADD X10, X10, 0x10
	0x0368C154 B.NE 0x368C140
	0x0368C158 MOVZ W2, 0x1
	0x0368C15C MOV X0, X19
	0x0368C160 BL 0x1C5C788
	0x0368C164 B 0x368C178
	0x0368C168 LDR W9, [X10]
	0x0368C16C ADD W9, W9, 0x1
	0x0368C170 ADD X8, X8, W9, 0x4, SXTW
	0x0368C174 ADD X0, X8, 0x138
	0x0368C178 LDP X8, X1, [X0]
	0x0368C17C MOV X0, X19
	0x0368C180 BLR X8
	0x0368C184 MOV X23, X0
	0x0368C188 CBZ X0, 0x368C19C
	0x0368C18C LDR X1, [X25]
	0x0368C190 LDR X8, [X23]
	0x0368C194 CMP X8, X1
	0x0368C198 B.NE 0x368C2AC
	0x0368C19C CBZ X22, 0x368C2A8
	0x0368C1A0 LDR X8, [X22]
	0x0368C1A4 LDR X1, [X27]
	0x0368C1A8 LDRH W9, [X8 + 0x12E]
	0x0368C1AC CBZ X9, 0x368C1D0
	0x0368C1B0 LDR X10, [X8 + 0xB0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xD55000
	006 Move X20, 0xA6A000
	007 Move W8, [X21+2107]
	008 Move X20, [X20+632]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xA6A000
	015 Move X0, [X0+632]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2107], W8
	019 Move [X19+16], W31
	020 Move X8, [X20]
	021 Move W9, [X19+20]
	022 Move X8, [X8+184]
	023 Move X8, [X8]
	024 Move [X19+40], W31
	025 Move [X19+48], X31
	026 Move [X19+44], W9
	027 Move [X19+32], X8
	028 Move [X19+64], X8
	029 Move X20, [X31+16]
	030 Move X19, [X31+24]
	031 Move X30, [X31+32]
	032 Move X21, [X31+40]
	033 Return 

Method: System.Net.CookieToken TokenFromName(System.Boolean parseResponseCookies)

Disassembly:
	0x0368C1B4 ADD X10, X10, 0x8
	0x0368C1B8 LDUR X11, [X10 - 0x8]
	0x0368C1BC CMP X11, X1
	0x0368C1C0 B.EQ 0x368C1E0
	0x0368C1C4 SUBS X9, X9, 0x1
	0x0368C1C8 ADD X10, X10, 0x10
	0x0368C1CC B.NE 0x368C1B8
	0x0368C1D0 MOV X0, X22
	0x0368C1D4 MOV W2, W31
	0x0368C1D8 BL 0x1C5C788
	0x0368C1DC B 0x368C1EC
	0x0368C1E0 LDRSW X9, [X10]
	0x0368C1E4 ADD X8, X8, X9, 0x4, LSL
	0x0368C1E8 ADD X0, X8, 0x138
	0x0368C1EC LDP X8, X3, [X0]
	0x0368C1F0 MOV X0, X22
	0x0368C1F4 MOV X1, X21
	0x0368C1F8 MOV X2, X23
	0x0368C1FC BLR X8
	0x0368C200 CBZ W0, 0x368C218
	0x0368C204 ADD W20, W20, 0x1
	0x0368C208 B 0x368C0CC
	0x0368C20C MOV X21, X31
	0x0368C210 MOVN W20, 0x0
	0x0368C214 B 0x368C21C
	0x0368C218 MOV X21, X31
	0x0368C21C LDR X1, [X24]
	0x0368C220 MOV X0, X19
	0x0368C224 BL 0x1C16E00
	0x0368C228 CBZ X0, 0x368C288
	0x0368C22C LDR X8, [X0]
	0x0368C230 LDR X1, [X24]
	0x0368C234 MOV X19, X0
	0x0368C238 LDRH W9, [X8 + 0x12E]
	0x0368C23C CBZ X9, 0x368C260
	0x0368C240 LDR X10, [X8 + 0xB0]
	0x0368C244 ADD X10, X10, 0x8
	0x0368C248 LDUR X11, [X10 - 0x8]
	0x0368C24C CMP X11, X1
	0x0368C250 B.EQ 0x368C270
	0x0368C254 SUBS X9, X9, 0x1
	0x0368C258 ADD X10, X10, 0x10
	0x0368C25C B.NE 0x368C248
	0x0368C260 MOV X0, X19
	0x0368C264 MOV W2, W31
	0x0368C268 BL 0x1C5C788
	0x0368C26C B 0x368C27C
	0x0368C270 LDRSW X9, [X10]
	0x0368C274 ADD X8, X8, X9, 0x4, LSL
	0x0368C278 ADD X0, X8, 0x138
	0x0368C27C LDP X8, X1, [X0]
	0x0368C280 MOV X0, X19
	0x0368C284 BLR X8
	0x0368C288 CBNZ X21, 0x368C2BC
	0x0368C28C MOV W0, W20
	0x0368C290 LDP X20, X19, [X31 + 0x40]
	0x0368C294 LDP X22, X21, [X31 + 0x30]
	0x0368C298 LDP X24, X23, [X31 + 0x20]
	0x0368C29C LDP X26, X25, [X31 + 0x10]
	0x0368C2A0 LDP X30, X27, [X31], #0x50
	0x0368C2A4 RET
	0x0368C2A8 BL 0x1C16F20
	0x0368C2AC MOV X0, X23
	0x0368C2B0 BL 0x1C171E0
	0x0368C2B4 BL 0x1C16F20
	0x0368C2B8 BL 0x1C16F20
	0x0368C2BC MOV X0, X21
	0x0368C2C0 BL 0x1C16F18
	0x0368C2C4 B 0x368C2D8
	0x0368C2C8 B 0x368C2D8
	0x0368C2CC B 0x368C2D8
	0x0368C2D0 B 0x368C2D8
	0x0368C2D4 B 0x368C2D8
	0x0368C2D8 MOV X20, X0
	0x0368C2DC CMP W1, 0x1
	0x0368C2E0 B.NE 0x368C2F8
	0x0368C2E4 MOV X0, X20
	0x0368C2E8 BL 0x3EB1AD0
	0x0368C2EC LDR X21, [X0]
	0x0368C2F0 BL 0x3EB1AE0
	0x0368C2F4 B 0x368C210
	0x0368C2F8 MOV X21, X31
	0x0368C2FC B 0x368C304
	0x0368C300 MOV X20, X0
	0x0368C304 LDR X1, [X24]
	0x0368C308 MOV X0, X19
	0x0368C30C BL 0x1C16E00
	0x0368C310 MOV X19, X0
	0x0368C314 CBZ X0, 0x368C370
	0x0368C318 LDR X8, [X19]
	0x0368C31C LDR X1, [X24]
	0x0368C320 LDRH W9, [X8 + 0x12E]
	0x0368C324 CBZ X9, 0x368C348
	0x0368C328 LDR X10, [X8 + 0xB0]
	0x0368C32C ADD X10, X10, 0x8
	0x0368C330 LDUR X11, [X10 - 0x8]
	0x0368C334 CMP X11, X1
	0x0368C338 B.EQ 0x368C358
	0x0368C33C SUBS X9, X9, 0x1
	0x0368C340 ADD X10, X10, 0x10
	0x0368C344 B.NE 0x368C330
	0x0368C348 MOV X0, X19
	0x0368C34C MOV W2, W31
	0x0368C350 BL 0x1C5C788
	0x0368C354 B 0x368C364
	0x0368C358 LDRSW X9, [X10]
	0x0368C35C ADD X8, X8, X9, 0x4, LSL
	0x0368C360 ADD X0, X8, 0x138
	0x0368C364 LDP X8, X1, [X0]
	0x0368C368 MOV X0, X19
	0x0368C36C BLR X8

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xD55000
	007 Move W8, [X21+2108]
	008 Move W20, W1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xAB3000
	015 Move X0, [X0+800]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2108], W8
	019 Move X21, 0xAB3000
	020 Move X21, [X21+800]
	021 Move TEMP, X20
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfNotEqual {60}
	025 Move X20, X31
	026 Move X22, X31
	027 Move X0, [X21]
	028 Move W8, [X0+224]
	029 Compare W8, 0
	030 JumpIfNotEqual {33}
	031 Call 0x1C17DFC
	032 Move X0, [X21]
	033 Move X8, [X0+184]
	034 Move X8, [X8]
	035 Compare X8, 0
	036 JumpIfEqual {126}
	037 NotImplemented "Instruction LDRSW not yet implemented."
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Move W9, [X0+224]
	040 Compare W9, 0
	041 JumpIfNotEqual {48}
	042 Call 0x1C17DFC
	043 Move X8, [X21]
	044 Move X8, [X8+184]
	045 Move X8, [X8]
	046 Compare X8, 0
	047 JumpIfEqual {126}
	048 Move W9, [X8+24]
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Add X8, X8, X20
	051 Move X1, [X19+32]
	052 Move X0, [X8+32]
	053 Move W2, 5
	054 Move X3, X31
	055 Call String.Compare, X0, X1, X2
	056 Compare W0, 0
	057 JumpIfEqual {96}
	058 Add X22, X22, 1
	059 Add X20, X20, 16
	060 Move X20, X31
	061 Move X22, X31
	062 Move X0, [X21]
	063 Move W8, [X0+224]
	064 Compare W8, 0
	065 JumpIfNotEqual {68}
	066 Call 0x1C17DFC
	067 Move X0, [X21]
	068 Move X8, [X0+184]
	069 Move X8, [X8+8]
	070 Compare X8, 0
	071 JumpIfEqual {126}
	072 NotImplemented "Instruction LDRSW not yet implemented."
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Move W9, [X0+224]
	075 Compare W9, 0
	076 JumpIfNotEqual {83}
	077 Call 0x1C17DFC
	078 Move X8, [X21]
	079 Move X8, [X8+184]
	080 Move X8, [X8+8]
	081 Compare X8, 0
	082 JumpIfEqual {126}
	083 Move W9, [X8+24]
	084 NotImplemented "Instruction CMP not yet implemented."
	085 Add X8, X8, X20
	086 Move X1, [X19+32]
	087 Move X0, [X8+32]
	088 Move W2, 5
	089 Move X3, X31
	090 Call String.Compare, X0, X1, X2
	091 Compare W0, 0
	092 JumpIfEqual {116}
	093 Add X22, X22, 1
	094 Add X20, X20, 16
	095 Move W0, 18
	096 Move X0, [X21]
	097 Move W8, [X0+224]
	098 Compare W8, 0
	099 JumpIfNotEqual {102}
	100 Call 0x1C17DFC
	101 Move X0, [X21]
	102 Move X8, [X0+184]
	103 Move X8, [X8]
	104 Compare X8, 0
	105 JumpIfEqual {126}
	106 Move W9, [X8+24]
	107 NotImplemented "Instruction CMP not yet implemented."
	108 Add X8, X8, X20
	109 Move W0, [X8+40]
	110 Move X20, [X31+32]
	111 Move X19, [X31+40]
	112 Move X22, [X31+16]
	113 Move X21, [X31+24]
	114 Move X30, [X31+48]
	115 Return X0
	116 Move X0, [X21]
	117 Move W8, [X0+224]
	118 Compare W8, 0
	119 JumpIfNotEqual {122}
	120 Call 0x1C17DFC
	121 Move X0, [X21]
	122 Move X8, [X0+184]
	123 Move X8, [X8+8]
	124 Compare X8, 0
	125 JumpIfNotEqual {106}
	126 Call 0x1C17F20
	127 Call 0x1C17F28

Method: System.Void .cctor()

Disassembly:
	0x0368C394 STP X20, X19, [X31 + 0x30]
	0x0368C398 ADRP X21, 0xD54000
	0x0368C39C LDRB W8, [X21 + 0x844]
	0x0368C3A0 MOV X19, X1
	0x0368C3A4 MOV X20, X0
	0x0368C3A8 TBNZ X8, 0x0, 0x368C3D8
	0x0368C3AC ADRP X0, 0xAB2000
	0x0368C3B0 LDR X0, [X0 + 0x2A0]
	0x0368C3B4 BL 0x1C16CF4
	0x0368C3B8 ADRP X0, 0xA67000
	0x0368C3BC LDR X0, [X0 + 0xE00]
	0x0368C3C0 BL 0x1C16CF4
	0x0368C3C4 ADRP X0, 0xA67000
	0x0368C3C8 LDR X0, [X0 + 0xE18]
	0x0368C3CC BL 0x1C16CF4
	0x0368C3D0 MOVZ W8, 0x1
	0x0368C3D4 STRB W8, [X21 + 0x844]
	0x0368C3D8 CBZ X19, 0x368C574
	0x0368C3DC ADRP X21, 0xA67000
	0x0368C3E0 LDR X21, [X21 + 0xE00]
	0x0368C3E4 MOV X0, X19
	0x0368C3E8 BL 0x368C684
	0x0368C3EC MOV X19, X0
	0x0368C3F0 CBZ X0, 0x368C5BC
	0x0368C3F4 ADRP X22, 0xA67000
	0x0368C3F8 ADRP X23, 0xAB2000
	0x0368C3FC LDR X22, [X22 + 0xE18]
	0x0368C400 LDR X23, [X23 + 0x2A0]
	0x0368C404 LDR X8, [X19]
	0x0368C408 LDR X1, [X22]
	0x0368C40C LDRH W9, [X8 + 0x12E]
	0x0368C410 CBZ X9, 0x368C434
	0x0368C414 LDR X10, [X8 + 0xB0]
	0x0368C418 ADD X10, X10, 0x8
	0x0368C41C LDUR X11, [X10 - 0x8]
	0x0368C420 CMP X11, X1
	0x0368C424 B.EQ 0x368C444
	0x0368C428 SUBS X9, X9, 0x1
	0x0368C42C ADD X10, X10, 0x10
	0x0368C430 B.NE 0x368C41C
	0x0368C434 MOV X0, X19
	0x0368C438 MOV W2, W31
	0x0368C43C BL 0x1C5C788
	0x0368C440 B 0x368C450
	0x0368C444 LDRSW X9, [X10]
	0x0368C448 ADD X8, X8, X9, 0x4, LSL
	0x0368C44C ADD X0, X8, 0x138
	0x0368C450 LDP X8, X1, [X0]
	0x0368C454 MOV X0, X19
	0x0368C458 BLR X8
	0x0368C45C TBZ X0, 0x0, 0x368C4E4
	0x0368C460 LDR X8, [X19]
	0x0368C464 LDR X1, [X22]
	0x0368C468 LDRH W9, [X8 + 0x12E]
	0x0368C46C CBZ X9, 0x368C490
	0x0368C470 LDR X10, [X8 + 0xB0]
	0x0368C474 ADD X10, X10, 0x8
	0x0368C478 LDUR X11, [X10 - 0x8]
	0x0368C47C CMP X11, X1
	0x0368C480 B.EQ 0x368C4A0
	0x0368C484 SUBS X9, X9, 0x1
	0x0368C488 ADD X10, X10, 0x10
	0x0368C48C B.NE 0x368C478
	0x0368C490 MOVZ W2, 0x1
	0x0368C494 MOV X0, X19
	0x0368C498 BL 0x1C5C788
	0x0368C49C B 0x368C4B0
	0x0368C4A0 LDR W9, [X10]
	0x0368C4A4 ADD W9, W9, 0x1
	0x0368C4A8 ADD X8, X8, W9, 0x4, SXTW
	0x0368C4AC ADD X0, X8, 0x138
	0x0368C4B0 LDP X8, X1, [X0]
	0x0368C4B4 MOV X0, X19
	0x0368C4B8 BLR X8
	0x0368C4BC MOV X8, X0
	0x0368C4C0 CBZ X0, 0x368C4D4
	0x0368C4C4 LDR X1, [X23]
	0x0368C4C8 LDR X9, [X8]
	0x0368C4CC CMP X9, X1
	0x0368C4D0 B.NE 0x368C56C
	0x0368C4D4 MOV X0, X20
	0x0368C4D8 MOV X1, X8
	0x0368C4DC BL 0x368BF18
	0x0368C4E0 B 0x368C404
	0x0368C4E4 MOV X20, X31
	0x0368C4E8 LDR X1, [X21]
	0x0368C4EC MOV X0, X19
	0x0368C4F0 BL 0x1C16E00
	0x0368C4F4 CBZ X0, 0x368C554
	0x0368C4F8 LDR X8, [X0]
	0x0368C4FC LDR X1, [X21]
	0x0368C500 MOV X19, X0
	0x0368C504 LDRH W9, [X8 + 0x12E]
	0x0368C508 CBZ X9, 0x368C52C
	0x0368C50C LDR X10, [X8 + 0xB0]
	0x0368C510 ADD X10, X10, 0x8
	0x0368C514 LDUR X11, [X10 - 0x8]
	0x0368C518 CMP X11, X1
	0x0368C51C B.EQ 0x368C53C
	0x0368C520 SUBS X9, X9, 0x1
	0x0368C524 ADD X10, X10, 0x10
	0x0368C528 B.NE 0x368C514
	0x0368C52C MOV X0, X19
	0x0368C530 MOV W2, W31
	0x0368C534 BL 0x1C5C788
	0x0368C538 B 0x368C548
	0x0368C53C LDRSW X9, [X10]
	0x0368C540 ADD X8, X8, X9, 0x4, LSL
	0x0368C544 ADD X0, X8, 0x138
	0x0368C548 LDP X8, X1, [X0]
	0x0368C54C MOV X0, X19
	0x0368C550 BLR X8
	0x0368C554 CBNZ X20, 0x368C5C0
	0x0368C558 LDP X20, X19, [X31 + 0x30]
	0x0368C55C LDP X22, X21, [X31 + 0x20]
	0x0368C560 LDP X30, X23, [X31 + 0x10]
	0x0368C564 ADD X31, X31, 0x40
	0x0368C568 RET
	0x0368C56C MOV X0, X8
	0x0368C570 BL 0x1C171E0
	0x0368C574 ADRP X0, 0xA6C000
	0x0368C578 LDR X0, [X0 + 0x528]
	0x0368C57C BL 0x1C16D08
	0x0368C580 BL 0x1C16F10
	0x0368C584 MOV X19, X0
	0x0368C588 ADRP X0, 0xAB2000
	0x0368C58C LDR X0, [X0 + 0x390]
	0x0368C590 BL 0x1C16D08
	0x0368C594 MOV X1, X0
	0x0368C598 MOV X0, X19
	0x0368C59C MOV X2, X31
	0x0368C5A0 BL 0x330E100
	0x0368C5A4 ADRP X0, 0xAB2000
	0x0368C5A8 LDR X0, [X0 + 0x398]
	0x0368C5AC BL 0x1C16D08
	0x0368C5B0 MOV X1, X0
	0x0368C5B4 MOV X0, X19
	0x0368C5B8 BL 0x1C16DEC
	0x0368C5BC BL 0x1C16F20
	0x0368C5C0 MOV X0, X20
	0x0368C5C4 BL 0x1C16F18
	0x0368C5C8 B 0x368C5D8
	0x0368C5CC B 0x368C5D8
	0x0368C5D0 B 0x368C5D8
	0x0368C5D4 B 0x368C5D8
	0x0368C5D8 CMP W1, 0x1
	0x0368C5DC B.NE 0x368C5F0
	0x0368C5E0 BL 0x3EB1AD0
	0x0368C5E4 LDR X20, [X0]
	0x0368C5E8 BL 0x3EB1AE0
	0x0368C5EC B 0x368C4E8
	0x0368C5F0 STR X0, [X31 + 0x8]
	0x0368C5F4 MOV X20, X31
	0x0368C5F8 B 0x368C600
	0x0368C5FC STR X0, [X31 + 0x8]
	0x0368C600 LDR X1, [X21]
	0x0368C604 MOV X0, X19
	0x0368C608 BL 0x1C16E00
	0x0368C60C MOV X19, X0
	0x0368C610 CBZ X0, 0x368C66C
	0x0368C614 LDR X8, [X19]
	0x0368C618 LDR X1, [X21]
	0x0368C61C LDRH W9, [X8 + 0x12E]
	0x0368C620 CBZ X9, 0x368C644
	0x0368C624 LDR X10, [X8 + 0xB0]
	0x0368C628 ADD X10, X10, 0x8
	0x0368C62C LDUR X11, [X10 - 0x8]
	0x0368C630 CMP X11, X1
	0x0368C634 B.EQ 0x368C654
	0x0368C638 SUBS X9, X9, 0x1
	0x0368C63C ADD X10, X10, 0x10
	0x0368C640 B.NE 0x368C62C
	0x0368C644 MOV X0, X19
	0x0368C648 MOV W2, W31
	0x0368C64C BL 0x1C5C788
	0x0368C650 B 0x368C660
	0x0368C654 LDRSW X9, [X10]
	0x0368C658 ADD X8, X8, X9, 0x4, LSL
	0x0368C65C ADD X0, X8, 0x138
	0x0368C660 LDP X8, X1, [X0]
	0x0368C664 MOV X0, X19
	0x0368C668 BLR X8
	0x0368C66C CBNZ X20, 0x368C678
	0x0368C670 LDR X0, [X31 + 0x8]
	0x0368C674 BL 0x1D2C690
	0x0368C678 MOV X0, X20
	0x0368C67C BL 0x1C16F18
	0x0368C680 BL 0x1990590
	0x0368C684 STP X30, X21, [X31 - 0x20]!
	0x0368C688 STP X20, X19, [X31 + 0x10]
	0x0368C68C ADRP X20, 0xD54000
	0x0368C690 ADRP X21, 0xAB2000
	0x0368C694 LDRB W8, [X20 + 0x848]
	0x0368C698 LDR X21, [X21 + 0x3A0]
	0x0368C69C MOV X19, X0
	0x0368C6A0 TBNZ X8, 0x0, 0x368C6B8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xD55000
	005 Move X19, 0xAB3000
	006 Move W8, [X20+2109]
	007 Move X19, [X19+808]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {68}
	012 Move X0, 0xAB3000
	013 Move X0, [X0+800]
	014 Call 0x1C17CF4
	015 Move X0, 0xAB3000
	016 Move X0, [X0+808]
	017 Call 0x1C17CF4
	018 Move X0, 0xAB3000
	019 Move X0, [X0+816]
	020 Call 0x1C17CF4
	021 Move X0, 0xAB3000
	022 Move X0, [X0+824]
	023 Call 0x1C17CF4
	024 Move X0, 0xAB3000
	025 Move X0, [X0+832]
	026 Call 0x1C17CF4
	027 Move X0, 0xAB3000
	028 Move X0, [X0+704]
	029 Call 0x1C17CF4
	030 Move X0, 0xAB3000
	031 Move X0, [X0+840]
	032 Call 0x1C17CF4
	033 Move X0, 0xAB3000
	034 Move X0, [X0+696]
	035 Call 0x1C17CF4
	036 Move X0, 0xAB3000
	037 Move X0, [X0+848]
	038 Call 0x1C17CF4
	039 Move X0, 0xAB3000
	040 Move X0, [X0+856]
	041 Call 0x1C17CF4
	042 Move X0, 0xAAF000
	043 Move X0, [X0+2680]
	044 Call 0x1C17CF4
	045 Move X0, 0xAB3000
	046 Move X0, [X0+864]
	047 Call 0x1C17CF4
	048 Move X0, 0xAB3000
	049 Move X0, [X0+872]
	050 Call 0x1C17CF4
	051 Move X0, 0xAB3000
	052 Move X0, [X0+880]
	053 Call 0x1C17CF4
	054 Move X0, 0xAB3000
	055 Move X0, [X0+752]
	056 Call 0x1C17CF4
	057 Move X0, 0xAB3000
	058 Move X0, [X0+720]
	059 Call 0x1C17CF4
	060 Move X0, 0xA69000
	061 Move X0, [X0+672]
	062 Call 0x1C17CF4
	063 Move X0, 0xAB3000
	064 Move X0, [X0+712]
	065 Call 0x1C17CF4
	066 Move W8, 1
	067 Move [X20+2109], W8
	068 Move X0, [X19]
	069 Move W1, 11
	070 Call 0x1C17D6C
	071 Compare X0, 0
	072 JumpIfEqual {207}
	073 Move W8, [X0+24]
	074 Compare W8, 0
	075 JumpIfEqual {206}
	076 Move X9, 0xAB3000
	077 Move X9, [X9+712]
	078 Move W10, 14
	079 NotImplemented "Instruction CMP not yet implemented."
	080 Move X9, [X9]
	081 Move [X0+32], X9
	082 Move [X0+40], X10
	083 Move X9, 0xAB3000
	084 Move X9, [X9+872]
	085 Move W10, 13
	086 NotImplemented "Instruction CMP not yet implemented."
	087 Move X9, [X9]
	088 Move [X0+48], X9
	089 Move [X0+56], X10
	090 Move X9, 0xAAF000
	091 Move X9, [X9+2680]
	092 Move W10, 12
	093 NotImplemented "Instruction CMP not yet implemented."
	094 Move X9, [X9]
	095 Move [X0+64], X9
	096 Move [X0+72], X10
	097 Move X9, 0xA69000
	098 Move X9, [X9+672]
	099 Move W10, 19
	100 NotImplemented "Instruction CMP not yet implemented."
	101 Move X9, [X9]
	102 Move [X0+80], X9
	103 Move [X0+88], X10
	104 Move X9, 0xAB3000
	105 Move X9, [X9+704]
	106 Move W10, 11
	107 NotImplemented "Instruction CMP not yet implemented."
	108 Move X9, [X9]
	109 Move [X0+96], X9
	110 Move [X0+104], X10
	111 Move X9, 0xAB3000
	112 Move X9, [X9+880]
	113 Move W10, 16
	114 NotImplemented "Instruction CMP not yet implemented."
	115 Move X9, [X9]
	116 Move [X0+112], X9
	117 Move [X0+120], X10
	118 Move X9, 0xAB3000
	119 Move X9, [X9+832]
	120 Move W10, 10
	121 NotImplemented "Instruction CMP not yet implemented."
	122 Move X9, [X9]
	123 Move [X0+128], X9
	124 Move [X0+136], X10
	125 Move X9, 0xAB3000
	126 Move X9, [X9+720]
	127 Move W10, 15
	128 NotImplemented "Instruction CMP not yet implemented."
	129 Move X9, [X9]
	130 Move [X0+144], X9
	131 Move [X0+152], X10
	132 Move X9, 0xAB3000
	133 Move X9, [X9+696]
	134 Move W10, 7
	135 NotImplemented "Instruction CMP not yet implemented."
	136 Move X9, [X9]
	137 Move [X0+160], X9
	138 Move [X0+168], X10
	139 Move X9, 0xAB3000
	140 Move X9, [X9+856]
	141 Move W10, 8
	142 NotImplemented "Instruction CMP not yet implemented."
	143 Move X9, [X9]
	144 Move [X0+176], X9
	145 Move [X0+184], X10
	146 Move X8, 0xAB3000
	147 Move X8, [X8+824]
	148 Move X20, 0xAB3000
	149 Move W9, 17
	150 Move W1, 5
	151 Move X8, [X8]
	152 Move X20, [X20+800]
	153 Move [X0+192], X8
	154 Move [X0+200], X9
	155 Move X8, [X20]
	156 Move X8, [X8+184]
	157 Move [X8], X0
	158 Move X0, [X19]
	159 Call 0x1C17D6C
	160 Compare X0, 0
	161 JumpIfEqual {207}
	162 Move W8, [X0+24]
	163 Compare W8, 0
	164 JumpIfEqual {206}
	165 Move X9, 0xAB3000
	166 Move X9, [X9+848]
	167 Move W10, 14
	168 NotImplemented "Instruction CMP not yet implemented."
	169 Move X9, [X9]
	170 Move [X0+32], X9
	171 Move [X0+40], X10
	172 Move X9, 0xAB3000
	173 Move X9, [X9+816]
	174 Move W10, 19
	175 NotImplemented "Instruction CMP not yet implemented."
	176 Move X9, [X9]
	177 Move [X0+48], X9
	178 Move [X0+56], X10
	179 Move X9, 0xAB3000
	180 Move X9, [X9+864]
	181 Move W10, 11
	182 NotImplemented "Instruction CMP not yet implemented."
	183 Move X9, [X9]
	184 Move [X0+64], X9
	185 Move [X0+72], X10
	186 Move X9, 0xAB3000
	187 Move X9, [X9+752]
	188 Move W10, 15
	189 NotImplemented "Instruction CMP not yet implemented."
	190 Move X9, [X9]
	191 Move [X0+80], X9
	192 Move [X0+88], X10
	193 Move X8, 0xAB3000
	194 Move X8, [X8+840]
	195 Move W9, 17
	196 Move X8, [X8]
	197 Move [X0+96], X8
	198 Move [X0+104], X9
	199 Move X8, [X20]
	200 Move X20, [X31+16]
	201 Move X19, [X31+24]
	202 Move X8, [X8+184]
	203 Move [X8+8], X0
	204 Move X30, [X31+32]
	205 Return 
	206 Call 0x1C17F28
	207 Call 0x1C17F20

