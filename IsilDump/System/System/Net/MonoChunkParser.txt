Type: System.Net.MonoChunkParser

Method: System.Void .ctor(System.Net.WebHeaderCollection headers)

Disassembly:
	0x036A4374 LDRB W8, [X25 + 0x8EE]
	0x036A4378 LDR X24, [X24 + 0xDA0]
	0x036A437C MOV X19, X4
	0x036A4380 MOV W20, W3
	0x036A4384 MOV W21, W2
	0x036A4388 MOV X23, X1
	0x036A438C MOV X22, X0
	0x036A4390 TBNZ X8, 0x0, 0x36A43CC
	0x036A4394 ADRP X0, 0xA7E000
	0x036A4398 LDR X0, [X0 + 0xDA8]
	0x036A439C BL 0x1C16CF4
	0x036A43A0 ADRP X0, 0xA9A000
	0x036A43A4 LDR X0, [X0 + 0xBF8]
	0x036A43A8 BL 0x1C16CF4
	0x036A43AC ADRP X0, 0xA7E000
	0x036A43B0 LDR X0, [X0 + 0xDB8]
	0x036A43B4 BL 0x1C16CF4
	0x036A43B8 ADRP X0, 0xA7E000
	0x036A43BC LDR X0, [X0 + 0xDA0]
	0x036A43C0 BL 0x1C16CF4
	0x036A43C4 MOVZ W8, 0x1
	0x036A43C8 STRB W8, [X25 + 0x8EE]
	0x036A43CC LDR X0, [X24]
	0x036A43D0 MOVI V0.2D, 0x0
	0x036A43D4 STR X31, [X31 + 0x70]
	0x036A43D8 STP V0, V0, [X31 + 0x40]
	0x036A43DC STR V0, [X31 + 0x6]
	0x036A43E0 STP V0, V0, [X31 + 0x20]
	0x036A43E4 STP X22, X23, [X31 + 0x48]
	0x036A43E8 STP W21, W20, [X31 + 0x58]
	0x036A43EC STR X19, [X31 + 0x40]
	0x036A43F0 ADRP X21, 0xA7E000
	0x036A43F4 ADRP X19, 0xA9A000
	0x036A43F8 ADRP X20, 0xA7E000
	0x036A43FC LDR W8, [X0 + 0xE0]
	0x036A4400 LDR X21, [X21 + 0xDA8]
	0x036A4404 LDR X19, [X19 + 0xBF8]
	0x036A4408 LDR X20, [X20 + 0xDB8]
	0x036A440C CBNZ W8, 0x36A4414
	0x036A4410 BL 0x1C16DFC
	0x036A4414 LDR X0, [X21]
	0x036A4418 ADD X8, X31, 0x8
	0x036A441C BL 0x263005C

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0xD3D000
	008 Move X22, 0xA50000
	009 Move X21, 0xA7D000
	010 Move W8, [X23+2278]
	011 Move X22, [X22+2288]
	012 Move X21, [X21+2976]
	013 Move X20, X1
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0xA7D000
	020 Move X0, [X0+2976]
	021 Call 0x1C17CF4
	022 Move X0, 0xA50000
	023 Move X0, [X0+2288]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X23+2278], W8
	027 Move X0, X19
	028 Move X1, X31
	029 Call Object..ctor, X0
	030 Move [X19+16], X20
	031 Move X0, [X22]
	032 Call 0x1C17F10
	033 Move X1, X31
	034 Move X20, X0
	035 Call StringBuilder..ctor, X0
	036 Move [X19+40], X20
	037 Move X0, [X21]
	038 Call 0x1C17F10
	039 Move X1, X31
	040 Move X20, X0
	041 Call ArrayList..ctor, X0
	042 Move TEMP, 0
	043 Not TEMP
	044 Move W8, TEMP
	045 Move [X19+56], X20
	046 Move [X19+24], W8
	047 Move [X19+32], W31
	048 Move X20, [X31+32]
	049 Move X19, [X31+40]
	050 Move X22, [X31+16]
	051 Move X21, [X31+24]
	052 Move X30, [X31+48]
	053 Move X23, [X31+56]
	054 Return 

Method: System.Int32 Read(System.Byte[] buffer, System.Int32 offset, System.Int32 size)

Disassembly:
	0x036A4420 LDUR V0, [X31 + 0x8]

ISIL:
No ISIL was generated
Method: System.Int32 ReadFromChunks(System.Byte[] buffer, System.Int32 offset, System.Int32 size)

Disassembly:
	0x036A4424 LDR X9, [X31 + 0x18]
	0x036A4428 LDR X2, [X19]
	0x036A442C ADD X8, X31, 0x20
	0x036A4430 ORR X19, X8, 0xF
	0x036A4434 MOVN W10, 0x0
	0x036A4438 ADD X1, X31, 0x20
	0x036A443C MOV X0, X19
	0x036A4440 STUR V0, [X31 + 0x28]
	0x036A4444 STR X9, [X31 + 0x38]
	0x036A4448 STR W10, [X31 + 0x20]
	0x036A444C BL 0x1FADED4
	0x036A4450 LDR X1, [X20]
	0x036A4454 MOV X0, X19
	0x036A4458 BL 0x2630070
	0x036A445C LDP X20, X19, [X31 + 0xB0]
	0x036A4460 LDP X22, X21, [X31 + 0xA0]
	0x036A4464 LDP X24, X23, [X31 + 0x90]
	0x036A4468 LDP X30, X25, [X31 + 0x80]
	0x036A446C ADD X31, X31, 0xC0
	0x036A4470 RET
	0x036A4474 SUB X31, X31, 0xB0
	0x036A4478 STR X30, [X31 + 0x80]
	0x036A447C STP X22, X21, [X31 + 0x90]
	0x036A4480 STP X20, X19, [X31 + 0xA0]
	0x036A4484 ADRP X22, 0xD3C000
	0x036A4488 ADRP X21, 0xA52000
	0x036A448C LDRB W8, [X22 + 0x8EF]
	0x036A4490 LDR X21, [X21 + 0x280]
	0x036A4494 MOV X19, X1
	0x036A4498 MOV X20, X0
	0x036A449C TBNZ X8, 0x0, 0x36A44C0
	0x036A44A0 ADRP X0, 0xA9A000
	0x036A44A4 LDR X0, [X0 + 0xC00]
	0x036A44A8 BL 0x1C16CF4
	0x036A44AC ADRP X0, 0xA52000
	0x036A44B0 LDR X0, [X0 + 0x280]
	0x036A44B4 BL 0x1C16CF4
	0x036A44B8 MOVZ W8, 0x1
	0x036A44BC STRB W8, [X22 + 0x8EF]
	0x036A44C0 LDR X0, [X21]
	0x036A44C4 MOVI V0.2D, 0x0
	0x036A44C8 STR X31, [X31 + 0x70]
	0x036A44CC STP V0, V0, [X31 + 0x50]
	0x036A44D0 STP V0, V0, [X31 + 0x30]
	0x036A44D4 STR V0, [X31 + 0x2]
	0x036A44D8 STP X20, X19, [X31 + 0x40]
	0x036A44DC ADRP X19, 0xA9A000
	0x036A44E0 LDR W8, [X0 + 0xE0]
	0x036A44E4 LDR X19, [X19 + 0xC00]
	0x036A44E8 CBNZ W8, 0x36A44F0
	0x036A44EC BL 0x1C16DFC
	0x036A44F0 ADD X8, X31, 0x8
	0x036A44F4 MOV X0, X31
	0x036A44F8 BL 0x32C4770
	0x036A44FC LDUR V0, [X31 + 0x8]
	0x036A4500 LDR X9, [X31 + 0x18]
	0x036A4504 LDR X2, [X19]
	0x036A4508 ADD X8, X31, 0x20
	0x036A450C ORR X19, X8, 0xF
	0x036A4510 MOVN W10, 0x0
	0x036A4514 ADD X1, X31, 0x20
	0x036A4518 MOV X0, X19
	0x036A451C STUR V0, [X31 + 0x28]
	0x036A4520 STR X9, [X31 + 0x38]
	0x036A4524 STR W10, [X31 + 0x20]
	0x036A4528 BL 0x21955B8
	0x036A452C MOV X0, X19
	0x036A4530 MOV X1, X31
	0x036A4534 BL 0x32C47F8
	0x036A4538 LDP X20, X19, [X31 + 0xA0]
	0x036A453C LDP X22, X21, [X31 + 0x90]
	0x036A4540 LDR X30, [X31 + 0x80]
	0x036A4544 ADD X31, X31, 0xB0
	0x036A4548 RET
	0x036A454C STP X30, X19, [X31 - 0x10]!
	0x036A4550 ADRP X0, 0xA7A000
	0x036A4554 LDR X0, [X0 + 0x330]
	0x036A4558 BL 0x1C16D08
	0x036A455C BL 0x1C16F10
	0x036A4560 MOV X19, X0
	0x036A4564 ADRP X0, 0xA9A000
	0x036A4568 LDR X0, [X0 + 0xC08]
	0x036A456C BL 0x1C16D08
	0x036A4570 MOV X1, X0
	0x036A4574 MOVZ W3, 0xB
	0x036A4578 MOV X0, X19
	0x036A457C MOV X2, X31
	0x036A4580 MOV X4, X31
	0x036A4584 MOV X5, X31
	0x036A4588 BL 0x367B5A0
	0x036A458C ADRP X0, 0xA9A000
	0x036A4590 LDR X0, [X0 + 0xC10]
	0x036A4594 BL 0x1C16D08
	0x036A4598 MOV X1, X0
	0x036A459C MOV X0, X19
	0x036A45A0 BL 0x1C16DEC
	0x036A45A4 MOV X2, X31
	0x036A45A8 B 0x36B1E30
	0x036A45AC SUB X31, X31, 0x40
	0x036A45B0 STR X30, [X31 + 0x10]
	0x036A45B4 STP X22, X21, [X31 + 0x20]
	0x036A45B8 STP X20, X19, [X31 + 0x30]
	0x036A45BC ADRP X20, 0xD3C000
	0x036A45C0 LDRB W8, [X20 + 0x8F0]
	0x036A45C4 MOV X19, X0
	0x036A45C8 TBNZ X8, 0x0, 0x36A4640
	0x036A45CC ADRP X0, 0xA9A000
	0x036A45D0 LDR X0, [X0 + 0xC18]
	0x036A45D4 BL 0x1C16CF4
	0x036A45D8 ADRP X0, 0xA7E000
	0x036A45DC LDR X0, [X0 + 0xE30]
	0x036A45E0 BL 0x1C16CF4
	0x036A45E4 ADRP X0, 0xA7E000
	0x036A45E8 LDR X0, [X0 + 0xDA0]
	0x036A45EC BL 0x1C16CF4
	0x036A45F0 ADRP X0, 0xA4F000
	0x036A45F4 LDR X0, [X0 + 0x618]
	0x036A45F8 BL 0x1C16CF4
	0x036A45FC ADRP X0, 0xA57000
	0x036A4600 LDR X0, [X0 + 0x7D8]
	0x036A4604 BL 0x1C16CF4
	0x036A4608 ADRP X0, 0xA83000
	0x036A460C LDR X0, [X0 + 0x2B8]
	0x036A4610 BL 0x1C16CF4
	0x036A4614 ADRP X0, 0xA83000
	0x036A4618 LDR X0, [X0 + 0x2C0]
	0x036A461C BL 0x1C16CF4
	0x036A4620 ADRP X0, 0xA83000
	0x036A4624 LDR X0, [X0 + 0x2C8]
	0x036A4628 BL 0x1C16CF4
	0x036A462C ADRP X0, 0xA83000
	0x036A4630 LDR X0, [X0 + 0x2D0]
	0x036A4634 BL 0x1C16CF4
	0x036A4638 MOVZ W8, 0x1
	0x036A463C STRB W8, [X20 + 0x8F0]
	0x036A4640 STP X31, X31, [X31]
	0x036A4644 ADRP X21, 0xA7E000
	0x036A4648 LDR W8, [X19]
	0x036A464C LDR X22, [X19 + 0x28]
	0x036A4650 LDR X21, [X21 + 0xDA0]
	0x036A4654 CBZ W8, 0x36A46AC
	0x036A4658 ADRP X8, 0xA57000
	0x036A465C LDR X8, [X8 + 0x7D8]
	0x036A4660 LDR X0, [X8]
	0x036A4664 LDR W8, [X0 + 0xE0]
	0x036A4668 CBNZ W8, 0x36A4670
	0x036A466C BL 0x1C16DFC
	0x036A4670 ADD X0, X19, 0x20
	0x036A4674 MOV X1, X31
	0x036A4678 BL 0x33DDC30
	0x036A467C CBZ X22, 0x36A46CC
	0x036A4680 LDR X0, [X22 + 0x48]
	0x036A4684 CBZ X0, 0x36A46D0
	0x036A4688 BL 0x36A40F8
	0x036A468C TBZ X0, 0x0, 0x36A46C4
	0x036A4690 LDR X0, [X22 + 0x48]
	0x036A4694 CBZ X0, 0x36A46D4
	0x036A4698 LDR X1, [X19 + 0x30]
	0x036A469C LDP W2, W3, [X19 + 0x38]
	0x036A46A0 BL 0x36A3424
	0x036A46A4 MOV W20, W0
	0x036A46A8 B 0x36A4814
	0x036A46AC LDUR V0, [X19 + 0x48]
	0x036A46B0 MOVN W8, 0x0
	0x036A46B4 STR V0, [X31]
	0x036A46B8 STP X31, X31, [X19 + 0x48]
	0x036A46BC STR W8, [X19]
	0x036A46C0 B 0x36A4798
	0x036A46C4 STR X31, [X19 + 0x40]
	0x036A46C8 B 0x36A47F4
	0x036A46CC BL 0x1C16F20
	0x036A46D0 BL 0x1C16F20
	0x036A46D4 BL 0x1C16F20
	0x036A46D8 B 0x36A48E0
	0x036A46DC B 0x36A48E0
	0x036A46E0 B 0x36A48E0
	0x036A46E4 B 0x36A48E0
	0x036A46E8 B 0x36A48E0
	0x036A46EC B 0x36A48E0
	0x036A46F0 SUB W8, W10, W9
	0x036A46F4 LDR X1, [X19 + 0x40]
	0x036A46F8 MOVZ W9, 0x4000
	0x036A46FC CMP W8, 0x4000
	0x036A4700 CSEL W9, W8, W9, LT
	0x036A4704 CMP W8, 0x0
	0x036A4708 MOVZ W8, 0x400
	0x036A470C CSEL W20, W9, W8, GT
	0x036A4710 CBZ X1, 0x36A4720
	0x036A4714 LDR W8, [X1 + 0x18]
	0x036A4718 CMP W20, W8
	0x036A471C B.LE 0x36A473C
	0x036A4720 ADRP X8, 0xA4F000
	0x036A4724 LDR X8, [X8 + 0x618]
	0x036A4728 LDR X0, [X8]
	0x036A472C MOV W1, W20
	0x036A4730 BL 0x1C16D6C
	0x036A4734 MOV X1, X0
	0x036A4738 STR X1, [X19 + 0x40]

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+32], X30
	003 Move [X31+48], X28
	004 Move [X31+56], X27
	005 Move [X31+64], X26
	006 Move [X31+72], X25
	007 Move [X31+80], X24
	008 Move [X31+88], X23
	009 Move [X31+96], X22
	010 Move [X31+104], X21
	011 Move [X31+112], X20
	012 Move [X31+120], X19
	013 Move X20, 0xD3D000
	014 Move W8, [X20+2279]
	015 Move W21, W3
	016 Move W22, W2
	017 Move X23, X1
	018 Move X19, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {49}
	023 Move X0, 0xA9B000
	024 Move X0, [X0+2920]
	025 Call 0x1C17CF4
	026 Move X0, 0xA9B000
	027 Move X0, [X0+2928]
	028 Call 0x1C17CF4
	029 Move X0, 0xA9B000
	030 Move X0, [X0+2936]
	031 Call 0x1C17CF4
	032 Move X0, 0xA9B000
	033 Move X0, [X0+2944]
	034 Call 0x1C17CF4
	035 Move X0, 0xA9B000
	036 Move X0, [X0+2952]
	037 Call 0x1C17CF4
	038 Move X0, 0xA9B000
	039 Move X0, [X0+2960]
	040 Call 0x1C17CF4
	041 Move X0, 0xA9B000
	042 Move X0, [X0+2968]
	043 Call 0x1C17CF4
	044 Move X0, 0xA9B000
	045 Move X0, [X0+2976]
	046 Call 0x1C17CF4
	047 Move W8, 1
	048 Move [X20+2279], W8
	049 Move [X31+8], X31
	050 Move [X31+16], X31
	051 Move [X31+24], X31
	052 Move X0, [X19+56]
	053 Compare X0, 0
	054 JumpIfEqual {183}
	055 Move X8, [X0]
	056 Move X20, 0xA9B000
	057 Move X24, 0xA9B000
	058 Move X9, [X8+664]
	059 Move X1, [X8+672]
	060 Move X20, [X20+2976]
	061 Move X24, [X24+2968]
	062 NotImplemented "Instruction BLR not yet implemented."
	063 Move X8, [X20]
	064 Move W25, W0
	065 Move X0, X8
	066 Call 0x1C17F10
	067 Move X2, [X24]
	068 Move W1, W25
	069 Move X24, X0
	070 Call List`1<Object>..ctor, X0, X1
	071 NotImplemented "Instruction CMP not yet implemented."
	072 Move X27, 0xA9B000
	073 Move X28, 0xA9B000
	074 Move X27, [X27+2920]
	075 Move X28, [X28+2952]
	076 Move W20, W31
	077 Move W26, W31
	078 Move X0, [X19+56]
	079 Compare X0, 0
	080 JumpIfEqual {183}
	081 Move X8, [X0]
	082 Move W1, W26
	083 Move X9, [X8+744]
	084 Move X2, [X8+752]
	085 NotImplemented "Instruction BLR not yet implemented."
	086 Compare X0, 0
	087 JumpIfEqual {183}
	088 Move X9, [X0]
	089 Move X1, [X27]
	090 Move X8, X0
	091 Move W11, [X9+304]
	092 Move W10, [X1+304]
	093 NotImplemented "Instruction CMP not yet implemented."
	094 Move X9, [X9+200]
	095 Add X9, X9, X10
	096 NotImplemented "Instruction LDUR not yet implemented."
	097 NotImplemented "Instruction CMP not yet implemented."
	098 Move X9, [X8+16]
	099 Compare X9, 0
	100 JumpIfEqual {183}
	101 Move W10, [X8+24]
	102 Move W9, [X9+24]
	103 NotImplemented "Instruction CMP not yet implemented."
	104 Compare X24, 0
	105 JumpIfEqual {183}
	106 Move W11, [X24+28]
	107 Move X9, [X24+16]
	108 Move X10, [X28]
	109 Add W11, W11, 1
	110 Move [X24+28], W11
	111 Compare X9, 0
	112 JumpIfEqual {183}
	113 NotImplemented "Instruction LDRSW not yet implemented."
	114 Move W12, [X9+24]
	115 NotImplemented "Instruction CMP not yet implemented."
	116 Add W10, W11, 1
	117 Add X9, X9, X11
	118 Move [X24+24], W10
	119 Move [X9+32], X8
	120 Add W2, W20, W22
	121 Subtract W3, W21, W20
	122 Move X0, X8
	123 Move X1, X23
	124 Call Chunk.Read, X0, X1, X2, X3
	125 Add W20, W0, W20
	126 NotImplemented "Instruction CMP not yet implemented."
	127 Move X9, [X10+32]
	128 Move X0, X24
	129 Move X1, X8
	130 Move X9, [X9+192]
	131 Move X2, [X9+112]
	132 Call List`1<Object>.AddWithResize, X0, X1
	133 Add W26, W26, 1
	134 NotImplemented "Instruction CMP not yet implemented."
	135 Move W20, W31
	136 Compare X24, 0
	137 JumpIfEqual {183}
	138 Move X8, 0xA9B000
	139 Move X8, [X8+2960]
	140 Move X21, 0xA9B000
	141 Move X22, 0xA9B000
	142 Move X0, X24
	143 Move X1, [X8]
	144 Move X21, [X21+2936]
	145 Move X22, [X22+2928]
	146 Add X8, X31, 8
	147 Call List`1<Object>.GetEnumerator, X0
	148 Move X1, [X21]
	149 Add X0, X31, 8
	150 Call Enumerator<Object>.MoveNext, X0
	151 Move TEMP, X0
	152 And TEMP, TEMP, 1
	153 Compare TEMP, 1
	154 JumpIfNotEqual {163}
	155 Move X0, [X19+56]
	156 Compare X0, 0
	157 JumpIfEqual {184}
	158 Move X8, [X0]
	159 Move X1, [X31+24]
	160 Move X9, [X8+968]
	161 Move X2, [X8+976]
	162 NotImplemented "Instruction BLR not yet implemented."
	163 Move X1, [X22]
	164 Add X0, X31, 8
	165 Call Enumerator<Object>.Dispose, X0
	166 Move W0, W20
	167 Move X20, [X31+112]
	168 Move X19, [X31+120]
	169 Move X22, [X31+96]
	170 Move X21, [X31+104]
	171 Move X24, [X31+80]
	172 Move X23, [X31+88]
	173 Move X26, [X31+64]
	174 Move X25, [X31+72]
	175 Move X28, [X31+48]
	176 Move X27, [X31+56]
	177 Move X30, [X31+32]
	178 Add X31, X31, 128
	179 Return X0
	180 Move W20, W21
	181 Compare X24, 0
	182 JumpIfNotEqual {138}
	183 Call 0x1C17F20
	184 Call 0x1C17F20
	185 Move X0, X8
	186 Call 0x1C181E0
	187 Move X19, X0
	188 NotImplemented "Instruction CMP not yet implemented."
	189 Move X0, X19
	190 Call 0x3EB2AD0
	191 Move X21, [X0]
	192 Call 0x3EB2AE0
	193 Move X1, [X22]
	194 Add X0, X31, 8
	195 Call Enumerator<Object>.Dispose, X0
	196 Compare X21, 0
	197 JumpIfEqual {166}
	198 Move X0, X21
	199 Call 0x1C17F18
	200 Move X21, X31
	201 Move X19, X0
	202 Move X1, [X22]
	203 Add X0, X31, 8
	204 Call Enumerator<Object>.Dispose, X0
	205 Compare X21, 0
	206 JumpIfNotEqual {209}
	207 Move X0, X19
	208 Call 0x1D2D690
	209 Move X0, X21
	210 Call 0x1C17F18
	211 Call 0x1991590

Method: System.Void Write(System.Byte[] buffer, System.Int32 offset, System.Int32 size)

Disassembly:
	0x036A479C LDR X8, [X8 + 0x2C0]
	0x036A47A0 LDR X1, [X8]
	0x036A47A4 ADD X0, X31, 0x0
	0x036A47A8 BL 0x29989C4
	0x036A47AC MOV W20, W0
	0x036A47B0 CMP W0, 0x0
	0x036A47B4 B.LE 0x36A4814
	0x036A47B8 CBZ X22, 0x36A48B0

ISIL:
	001 Move [X31-16], X30
	002 NotImplemented "Instruction CMP not yet implemented."
	003 Move [X31+12], W2
	004 Add X2, X31, 12
	005 Call MonoChunkParser.InternalWrite, X0, X1, X2, X3
	006 Move X30, [X31+16]
	007 Return 

Method: System.Void InternalWrite(System.Byte[] buffer, ref System.Int32 offset, System.Int32 size)

Disassembly:
	0x036A47BC LDR X0, [X22 + 0x48]
	0x036A47C0 CBZ X0, 0x36A48A8
	0x036A47C4 LDR X1, [X19 + 0x40]
	0x036A47C8 STR W31, [X31 + 0x1C]
	0x036A47CC ADD X2, X31, 0x1C
	0x036A47D0 MOV W3, W20
	0x036A47D4 BL 0x36A37BC
	0x036A47D8 LDR X0, [X22 + 0x48]
	0x036A47DC CBZ X0, 0x36A48AC
	0x036A47E0 LDR X1, [X19 + 0x30]
	0x036A47E4 LDP W2, W3, [X19 + 0x38]
	0x036A47E8 BL 0x36A3424
	0x036A47EC MOV W20, W0
	0x036A47F0 CBNZ W0, 0x36A4814
	0x036A47F4 LDR X8, [X22 + 0x48]
	0x036A47F8 CBZ X8, 0x36A489C
	0x036A47FC LDP W10, W9, [X8 + 0x18]
	0x036A4800 ORR W11, W10, W9, 0x0
	0x036A4804 CBNZ W11, 0x36A46F0
	0x036A4808 LDR W8, [X8 + 0x24]
	0x036A480C CBNZ W8, 0x36A46F0
	0x036A4810 MOV W20, W31
	0x036A4814 MOVN W8, 0x1
	0x036A4818 STR W8, [X19]
	0x036A481C STR X31, [X19 + 0x40]
	0x036A4820 LDR X0, [X21]
	0x036A4824 ADRP X21, 0xA7E000
	0x036A4828 ADD X19, X19, 0x8
	0x036A482C LDR W8, [X0 + 0xE0]
	0x036A4830 LDR X21, [X21 + 0xE30]
	0x036A4834 CBNZ W8, 0x36A483C
	0x036A4838 BL 0x1C16DFC
	0x036A483C LDR X2, [X21]
	0x036A4840 MOV X0, X19
	0x036A4844 MOV W1, W20
	0x036A4848 BL 0x26300F0
	0x036A484C B 0x36A4888
	0x036A4850 STR W31, [X19]
	0x036A4854 LDR V0, [X31]
	0x036A4858 STUR V0, [X19 + 0x48]
	0x036A485C LDR X0, [X21]
	0x036A4860 LDR W8, [X0 + 0xE0]
	0x036A4864 CBNZ W8, 0x36A486C
	0x036A4868 BL 0x1C16DFC
	0x036A486C ADRP X8, 0xA9A000
	0x036A4870 LDR X8, [X8 + 0xC18]
	0x036A4874 ADD X0, X19, 0x8
	0x036A4878 LDR X3, [X8]
	0x036A487C ADD X1, X31, 0x0
	0x036A4880 MOV X2, X19
	0x036A4884 BL 0x1FAC30C
	0x036A4888 LDP X20, X19, [X31 + 0x30]
	0x036A488C LDP X22, X21, [X31 + 0x20]
	0x036A4890 LDR X30, [X31 + 0x10]
	0x036A4894 ADD X31, X31, 0x40
	0x036A4898 RET
	0x036A489C BL 0x1C16F20
	0x036A48A0 BL 0x1C16F20
	0x036A48A4 BL 0x1C16F20
	0x036A48A8 BL 0x1C16F20
	0x036A48AC BL 0x1C16F20
	0x036A48B0 BL 0x1C16F20
	0x036A48B4 B 0x36A48E0
	0x036A48B8 B 0x36A48E0
	0x036A48BC B 0x36A48E0
	0x036A48C0 B 0x36A48E0
	0x036A48C4 B 0x36A48E0
	0x036A48C8 B 0x36A48E0
	0x036A48CC B 0x36A48E0
	0x036A48D0 B 0x36A48E0
	0x036A48D4 B 0x36A48E0
	0x036A48D8 B 0x36A48E0
	0x036A48DC B 0x36A48E0
	0x036A48E0 MOV X20, X0
	0x036A48E4 CMP W1, 0x1
	0x036A48E8 B.NE 0x36A4988
	0x036A48EC MOV X0, X20
	0x036A48F0 BL 0x3EB1AD0
	0x036A48F4 MOV X20, X0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move W19, W3
	007 Move X20, X2
	008 Move X21, X1
	009 Move X22, X0
	010 Move W0, [X22+36]
	011 NotImplemented "Instruction CMP not yet implemented."
	012 Move X0, X22
	013 Move X1, X21
	014 Move X2, X20
	015 Move W3, W19
	016 Call MonoChunkParser.GetChunkSize, X0, X1, X2, X3
	017 NotImplemented "Instruction CMP not yet implemented."
	018 Move [X22+36], W0
	019 Move X0, [X22+40]
	020 Compare X0, 0
	021 JumpIfEqual {73}
	022 Move W1, W31
	023 Move X2, X31
	024 Call StringBuilder.set_Length, X0, X1
	025 Move W0, [X22+36]
	026 NotImplemented "Instruction STRH not yet implemented."
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Move W8, [X20]
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move X0, X22
	031 Move X1, X21
	032 Move X2, X20
	033 Move W3, W19
	034 Call MonoChunkParser.ReadBody, X0, X1, X2, X3
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move [X22+36], W0
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move W8, [X20]
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Move X0, X22
	041 Move X1, X21
	042 Move X2, X20
	043 Move W3, W19
	044 Call MonoChunkParser.ReadCRLF, X0, X1, X2, X3
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Move [X22+36], W0
	047 Move [X22+48], W31
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move W8, [X20]
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Move X0, X22
	052 Move X1, X21
	053 Move X2, X20
	054 Move W3, W19
	055 Call MonoChunkParser.ReadTrailer, X0, X1, X2, X3
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Move [X22+36], W0
	058 Move X0, [X22+40]
	059 Compare X0, 0
	060 JumpIfEqual {73}
	061 Move W1, W31
	062 Move X2, X31
	063 Call StringBuilder.set_Length, X0, X1
	064 NotImplemented "Instruction STRH not yet implemented."
	065 Move W8, [X20]
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Move X20, [X31+32]
	068 Move X19, [X31+40]
	069 Move X22, [X31+16]
	070 Move X21, [X31+24]
	071 Move X30, [X31+48]
	072 Return 
	073 Call 0x1C17F20

Method: System.Boolean get_WantMore()

Disassembly:
	0x036A50D4 STP X22, X21, [X31 + 0x40]
	0x036A50D8 STP X20, X19, [X31 + 0x50]
	0x036A50DC ADRP X25, 0xD3B000
	0x036A50E0 ADRP X24, 0xA99000
	0x036A50E4 ADRP X23, 0xA99000
	0x036A50E8 ADRP X29, 0xA50000
	0x036A50EC ADRP X28, 0xA99000
	0x036A50F0 ADRP X27, 0xA99000
	0x036A50F4 ADRP X26, 0xA99000

ISIL:
	001 Move W9, [X0+24]
	002 Move W8, [X0+28]
	003 Or W8, W9, W8
	004 Compare W8, 0
	005 JumpIfEqual {8}
	006 Move W0, 1
	007 Return X0
	008 Move W8, [X0+36]
	009 NotImplemented "Instruction CMP not yet implemented."
	010 NotImplemented "Instruction CSET not yet implemented."
	011 Return X0

Method: System.Boolean get_DataAvailable()

Disassembly:
	0x036A50F8 LDR X24, [X24 + 0xC30]
	0x036A50FC LDR X23, [X23 + 0xC38]
	0x036A5100 LDR X29, [X29 + 0x278]
	0x036A5104 LDR X28, [X28 + 0xC40]
	0x036A5108 LDRB W8, [X25 + 0x909]
	0x036A510C LDR X27, [X27 + 0xC48]
	0x036A5110 LDR X26, [X26 + 0xC50]
	0x036A5114 MOV W20, W3
	0x036A5118 MOV W21, W2
	0x036A511C MOV X22, X1
	0x036A5120 MOV X19, X0
	0x036A5124 TBNZ X8, 0x0, 0x36A519C
	0x036A5128 ADRP X0, 0xA99000
	0x036A512C LDR X0, [X0 + 0xC38]
	0x036A5130 BL 0x1C16CF4
	0x036A5134 ADRP X0, 0xA99000
	0x036A5138 LDR X0, [X0 + 0xC40]
	0x036A513C BL 0x1C16CF4
	0x036A5140 ADRP X0, 0xA4F000
	0x036A5144 LDR X0, [X0 + 0x9F0]
	0x036A5148 BL 0x1C16CF4
	0x036A514C ADRP X0, 0xA99000
	0x036A5150 LDR X0, [X0 + 0xC58]
	0x036A5154 BL 0x1C16CF4
	0x036A5158 ADRP X0, 0xA99000
	0x036A515C LDR X0, [X0 + 0xC50]
	0x036A5160 BL 0x1C16CF4
	0x036A5164 ADRP X0, 0xA99000
	0x036A5168 LDR X0, [X0 + 0xC60]
	0x036A516C BL 0x1C16CF4
	0x036A5170 ADRP X0, 0xA99000
	0x036A5174 LDR X0, [X0 + 0xC48]
	0x036A5178 BL 0x1C16CF4
	0x036A517C ADRP X0, 0xA99000
	0x036A5180 LDR X0, [X0 + 0xC30]
	0x036A5184 BL 0x1C16CF4
	0x036A5188 ADRP X0, 0xA50000
	0x036A518C LDR X0, [X0 + 0x278]
	0x036A5190 BL 0x1C16CF4
	0x036A5194 MOVZ W8, 0x1
	0x036A5198 STRB W8, [X25 + 0x909]
	0x036A519C MOVZ W8, 0x86A0
	0x036A51A0 MOVK W8, 0x10000
	0x036A51A4 STR W8, [X19 + 0x1C]
	0x036A51A8 LDR X8, [X24]
	0x036A51AC MOV X0, X19
	0x036A51B0 MOV X1, X31
	0x036A51B4 LDR X8, [X8 + 0xB8]
	0x036A51B8 LDR W9, [X8]
	0x036A51BC ADD W9, W9, 0x1
	0x036A51C0 STR W9, [X8]
	0x036A51C4 STR W9, [X19 + 0x58]
	0x036A51C8 BL 0x33BDD8C
	0x036A51CC STR X22, [X19 + 0x10]
	0x036A51D0 STR W21, [X19 + 0x4C]
	0x036A51D4 STR W20, [X19 + 0x1C]
	0x036A51D8 LDR X0, [X23]
	0x036A51DC BL 0x1C16F10
	0x036A51E0 MOV W1, W31
	0x036A51E4 MOV X2, X31
	0x036A51E8 MOV X20, X0
	0x036A51EC BL 0x36A8550
	0x036A51F0 STR X20, [X19 + 0x20]
	0x036A51F4 LDR X8, [X29]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xD3C000
	007 Move W8, [X20+2280]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xA9A000
	014 Move X0, [X0+2920]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X20+2280], W8
	018 Move X0, [X19+56]
	019 Compare X0, 0
	020 JumpIfEqual {70}
	021 Move X8, [X0]
	022 Move X9, [X8+664]
	023 Move X1, [X8+672]
	024 NotImplemented "Instruction BLR not yet implemented."
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move X22, 0xA9A000
	027 Move X22, [X22+2920]
	028 Move W20, W0
	029 Move W21, W31
	030 Move X0, [X19+56]
	031 Compare X0, 0
	032 JumpIfEqual {70}
	033 Move X8, [X0]
	034 Move W1, W21
	035 Move X9, [X8+744]
	036 Move X2, [X8+752]
	037 NotImplemented "Instruction BLR not yet implemented."
	038 Compare X0, 0
	039 JumpIfEqual {57}
	040 Move X8, [X0]
	041 Move X1, [X22]
	042 Move W10, [X8+304]
	043 Move W9, [X1+304]
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Move X8, [X8+200]
	046 Add X8, X8, X9
	047 NotImplemented "Instruction LDUR not yet implemented."
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move X8, [X0+16]
	050 Compare X8, 0
	051 JumpIfEqual {57}
	052 Move X8, [X8+24]
	053 Compare X8, 0
	054 JumpIfEqual {57}
	055 Move W9, [X0+24]
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Add W21, W21, 1
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Move W0, W31
	060 Move X20, [X31+32]
	061 Move X19, [X31+40]
	062 Move X22, [X31+16]
	063 Move X21, [X31+24]
	064 Move X30, [X31+48]
	065 Return X0
	066 Move W8, [X19+36]
	067 NotImplemented "Instruction CMP not yet implemented."
	068 NotImplemented "Instruction CSET not yet implemented."
	069 Call 0x1C181E0
	070 Call 0x1C17F20

Method: System.Int32 get_ChunkLeft()

Disassembly:
	0x036A51F8 LDR X0, [X28]
	0x036A51FC LDR X8, [X8 + 0xB8]
	0x036A5200 LDR X20, [X8]

ISIL:
	001 Move W8, [X0+24]
	002 Move W9, [X0+28]
	003 Subtract W0, W8, W9
	004 Return X0

Method: System.Net.MonoChunkParser/State ReadBody(System.Byte[] buffer, ref System.Int32 offset, System.Int32 size)

Disassembly:
	0x036A4BF0 LDP X22, X21, [X31 + 0x30]
	0x036A4BF4 LDR X30, [X31 + 0x20]
	0x036A4BF8 ADD X31, X31, 0x50
	0x036A4BFC RET
	0x036A4C00 LDR X8, [X20 + 0x48]
	0x036A4C04 CBZ X8, 0x36A4D74
	0x036A4C08 LDP W10, W9, [X8 + 0x18]
	0x036A4C0C ORR W9, W10, W9, 0x0
	0x036A4C10 CBNZ W9, 0x36A4C1C
	0x036A4C14 LDR W8, [X8 + 0x24]
	0x036A4C18 CBZ W8, 0x36A4D4C
	0x036A4C1C ADRP X8, 0xA4F000
	0x036A4C20 LDR X8, [X8 + 0x618]
	0x036A4C24 LDR X0, [X8]
	0x036A4C28 MOVZ W1, 0x100
	0x036A4C2C BL 0x1C16D6C
	0x036A4C30 MOV X1, X0
	0x036A4C34 STR X1, [X19 + 0x40]
	0x036A4C38 CBZ X1, 0x36A4D80
	0x036A4C3C LDR X0, [X20 + 0x30]
	0x036A4C40 CBZ X0, 0x36A4D84
	0x036A4C44 LDR X8, [X0]
	0x036A4C48 LDR X4, [X19 + 0x28]
	0x036A4C4C LDR W3, [X1 + 0x18]
	0x036A4C50 LDR X9, [X8 + 0x2D8]
	0x036A4C54 LDR X5, [X8 + 0x2E0]
	0x036A4C58 MOV W2, W31
	0x036A4C5C BLR X9
	0x036A4C60 CBZ X0, 0x36A4D88
	0x036A4C64 ADRP X8, 0xA83000
	0x036A4C68 LDR X8, [X8 + 0x2D0]
	0x036A4C6C LDR X2, [X8]
	0x036A4C70 MOV W1, W31
	0x036A4C74 BL 0x269D3A8
	0x036A4C78 ADRP X8, 0xA83000
	0x036A4C7C LDR X8, [X8 + 0x2C8]
	0x036A4C80 STP X0, X1, [X31]
	0x036A4C84 LDR X8, [X8]
	0x036A4C88 ADD X0, X31, 0x0
	0x036A4C8C MOV X1, X8
	0x036A4C90 BL 0x2998978
	0x036A4C94 TBZ X0, 0x0, 0x36A4D0C
	0x036A4C98 ADRP X8, 0xA83000
	0x036A4C9C LDR X8, [X8 + 0x2C0]
	0x036A4CA0 LDR X1, [X8]
	0x036A4CA4 ADD X0, X31, 0x0
	0x036A4CA8 BL 0x29989C4
	0x036A4CAC MOV W21, W0
	0x036A4CB0 CMP W0, 0x0
	0x036A4CB4 B.GT 0x36A4CBC
	0x036A4CB8 BL 0x36A454C
	0x036A4CBC CBZ X20, 0x36A4D7C
	0x036A4CC0 LDR X0, [X20 + 0x48]
	0x036A4CC4 CBZ X0, 0x36A4D78
	0x036A4CC8 LDR X1, [X19 + 0x40]
	0x036A4CCC CMP W21, 0x0
	0x036A4CD0 STR W31, [X31 + 0x2C]
	0x036A4CD4 B.LE 0x36A4CEC
	0x036A4CD8 ADD X2, X31, 0x2C
	0x036A4CDC MOV W3, W21
	0x036A4CE0 BL 0x36A37BC
	0x036A4CE4 LDR X0, [X20 + 0x48]
	0x036A4CE8 CBZ X0, 0x36A4D8C
	0x036A4CEC LDR X1, [X19 + 0x40]
	0x036A4CF0 MOVZ W3, 0x1
	0x036A4CF4 MOV W2, W31
	0x036A4CF8 BL 0x36A3424
	0x036A4CFC CBZ W0, 0x36A4D04
	0x036A4D00 BL 0x36A454C
	0x036A4D04 STR X31, [X19 + 0x40]
	0x036A4D08 B 0x36A4C00
	0x036A4D0C MOVZ W8, 0x1
	0x036A4D10 STR W8, [X19]
	0x036A4D14 LDR V0, [X31]
	0x036A4D18 STUR V0, [X19 + 0x48]
	0x036A4D1C LDR X0, [X22]
	0x036A4D20 LDR W8, [X0 + 0xE0]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0xD3D000
	009 Move W8, [X23+2281]
	010 Move W21, W3
	011 Move X20, X2
	012 Move X22, X1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0xA50000
	019 Move X0, [X0+1560]
	020 Call 0x1C17CF4
	021 Move X0, 0xA9B000
	022 Move X0, [X0+2920]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X23+2281], W8
	026 Move W8, [X19+24]
	027 Compare W8, 0
	028 JumpIfEqual {78}
	029 Move X9, 0xA50000
	030 Move X9, [X9+1560]
	031 Move W10, [X20]
	032 Move W11, [X19+28]
	033 Move X23, 0xA9B000
	034 Move X23, [X23+2920]
	035 Move X0, [X9]
	036 Subtract W9, W21, W10
	037 Add W10, W11, W9
	038 Subtract W11, W8, W11
	039 NotImplemented "Instruction CMP not yet implemented."
	040 NotImplemented "Instruction CSEL not yet implemented."
	041 Move W1, W21
	042 Call 0x1C17D6C
	043 Move W1, [X20]
	044 Move X24, X0
	045 Move X0, X22
	046 Move X2, X24
	047 Move W3, W31
	048 Move W4, W21
	049 Move X5, X31
	050 Call Buffer.BlockCopy, X0, X1, X2, X3, X4
	051 Move X0, [X23]
	052 Move X22, [X19+56]
	053 Call 0x1C17F10
	054 Move X1, X31
	055 Move X23, X0
	056 Call Object..ctor, X0
	057 Move [X23+16], X24
	058 Compare X22, 0
	059 JumpIfEqual {87}
	060 Move X8, [X22]
	061 Move X0, X22
	062 Move X1, X23
	063 Move X9, [X8+776]
	064 Move X2, [X8+784]
	065 NotImplemented "Instruction BLR not yet implemented."
	066 Move W8, [X20]
	067 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	068 Add W8, W8, W21
	069 Move [X20], W8
	070 NotImplemented "Instruction LDUR not yet implemented."
	071 Move W8, [X19+24]
	072 Add S0, S0, S1
	073 Move W9, S0
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Move W8, 2
	076 NotImplemented "Instruction CINC not yet implemented."
	077 Move [X19+28], D0
	078 Move W0, 3
	079 Move X20, [X31+48]
	080 Move X19, [X31+56]
	081 Move X22, [X31+32]
	082 Move X21, [X31+40]
	083 Move X24, [X31+16]
	084 Move X23, [X31+24]
	085 Move X30, [X31+64]
	086 Return X0
	087 Call 0x1C17F20

Method: System.Net.MonoChunkParser/State GetChunkSize(System.Byte[] buffer, ref System.Int32 offset, System.Int32 size)

Disassembly:
	0x036A48F8 ADRP X0, 0xA4F000
	0x036A48FC LDR X0, [X0 + 0x7D0]
	0x036A4900 BL 0x1C16D08
	0x036A4904 LDR X8, [X20]
	0x036A4908 LDR X1, [X8]
	0x036A490C BL 0x1C17270
	0x036A4910 TBZ X0, 0x0, 0x36A4960
	0x036A4914 LDR X20, [X20]
	0x036A4918 BL 0x3EB1AE0
	0x036A491C MOVN W8, 0x1
	0x036A4920 STR X31, [X19 + 0x40]
	0x036A4924 STR W8, [X19], #0x8
	0x036A4928 ADRP X0, 0xA7E000
	0x036A492C LDR X0, [X0 + 0xDA0]
	0x036A4930 BL 0x1C16D08
	0x036A4934 LDR W8, [X0 + 0xE0]
	0x036A4938 CBNZ W8, 0x36A4940
	0x036A493C BL 0x1C16DFC
	0x036A4940 ADRP X0, 0xA7E000
	0x036A4944 LDR X0, [X0 + 0xE40]
	0x036A4948 BL 0x1C16D08
	0x036A494C MOV X2, X0
	0x036A4950 MOV X0, X19
	0x036A4954 MOV X1, X20
	0x036A4958 BL 0x2630308
	0x036A495C B 0x36A4888
	0x036A4960 MOVZ W0, 0x8
	0x036A4964 BL 0x3EB1AF0
	0x036A4968 LDR X8, [X20]
	0x036A496C STR X8, [X0]
	0x036A4970 ADRP X1, 0x810000
	0x036A4974 ADD X1, X1, 0xE58
	0x036A4978 MOV X2, X31
	0x036A497C BL 0x3EB1B00
	0x036A4980 MOV X20, X0
	0x036A4984 BL 0x3EB1AE0
	0x036A4988 MOV X0, X20
	0x036A498C BL 0x1D2C690
	0x036A4990 BL 0x1990590
	0x036A4994 STR X30, [X31 - 0x30]!
	0x036A4998 STP X22, X21, [X31 + 0x10]
	0x036A499C STP X20, X19, [X31 + 0x20]
	0x036A49A0 ADRP X22, 0xD3C000
	0x036A49A4 ADRP X21, 0xA7E000
	0x036A49A8 LDRB W8, [X22 + 0x8F1]
	0x036A49AC LDR X21, [X21 + 0xDA0]
	0x036A49B0 MOV X19, X1
	0x036A49B4 MOV X20, X0
	0x036A49B8 TBNZ X8, 0x0, 0x36A49DC
	0x036A49BC ADRP X0, 0xA7E000
	0x036A49C0 LDR X0, [X0 + 0xE48]
	0x036A49C4 BL 0x1C16CF4
	0x036A49C8 ADRP X0, 0xA7E000
	0x036A49CC LDR X0, [X0 + 0xDA0]
	0x036A49D0 BL 0x1C16CF4
	0x036A49D4 MOVZ W8, 0x1
	0x036A49D8 STRB W8, [X22 + 0x8F1]
	0x036A49DC LDR X0, [X21]
	0x036A49E0 ADRP X21, 0xA7E000
	0x036A49E4 LDR W8, [X0 + 0xE0]
	0x036A49E8 LDR X21, [X21 + 0xE48]
	0x036A49EC CBNZ W8, 0x36A49F4
	0x036A49F0 BL 0x1C16DFC
	0x036A49F4 LDR X2, [X21]
	0x036A49F8 ADD X0, X20, 0x8
	0x036A49FC MOV X1, X19
	0x036A4A00 LDP X20, X19, [X31 + 0x20]
	0x036A4A04 LDP X22, X21, [X31 + 0x10]
	0x036A4A08 LDR X30, [X31], #0x30
	0x036A4A0C B 0x2630068
	0x036A4A10 SUB X31, X31, 0x50
	0x036A4A14 STR X30, [X31 + 0x20]
	0x036A4A18 STP X22, X21, [X31 + 0x30]
	0x036A4A1C STP X20, X19, [X31 + 0x40]
	0x036A4A20 ADRP X20, 0xD3C000
	0x036A4A24 LDRB W8, [X20 + 0x8F2]
	0x036A4A28 MOV X19, X0
	0x036A4A2C TBNZ X8, 0x0, 0x36A4AA4
	0x036A4A30 ADRP X0, 0xA9A000
	0x036A4A34 LDR X0, [X0 + 0xC20]
	0x036A4A38 BL 0x1C16CF4
	0x036A4A3C ADRP X0, 0xA9A000
	0x036A4A40 LDR X0, [X0 + 0xC28]
	0x036A4A44 BL 0x1C16CF4
	0x036A4A48 ADRP X0, 0xA52000
	0x036A4A4C LDR X0, [X0 + 0x280]
	0x036A4A50 BL 0x1C16CF4
	0x036A4A54 ADRP X0, 0xA4F000
	0x036A4A58 LDR X0, [X0 + 0x618]
	0x036A4A5C BL 0x1C16CF4
	0x036A4A60 ADRP X0, 0xA57000
	0x036A4A64 LDR X0, [X0 + 0x7D8]
	0x036A4A68 BL 0x1C16CF4
	0x036A4A6C ADRP X0, 0xA83000
	0x036A4A70 LDR X0, [X0 + 0x2B8]
	0x036A4A74 BL 0x1C16CF4
	0x036A4A78 ADRP X0, 0xA83000
	0x036A4A7C LDR X0, [X0 + 0x2C0]
	0x036A4A80 BL 0x1C16CF4
	0x036A4A84 ADRP X0, 0xA83000
	0x036A4A88 LDR X0, [X0 + 0x2C8]
	0x036A4A8C BL 0x1C16CF4
	0x036A4A90 ADRP X0, 0xA83000
	0x036A4A94 LDR X0, [X0 + 0x2D0]
	0x036A4A98 BL 0x1C16CF4
	0x036A4A9C MOVZ W8, 0x1
	0x036A4AA0 STRB W8, [X20 + 0x8F2]
	0x036A4AA4 STP X31, X31, [X31 + 0x10]
	0x036A4AA8 STP X31, X31, [X31]
	0x036A4AAC ADRP X22, 0xA52000
	0x036A4AB0 LDR W8, [X19]
	0x036A4AB4 LDR X20, [X19 + 0x20]
	0x036A4AB8 LDR X22, [X22 + 0x280]
	0x036A4ABC CBZ W8, 0x36A4AE0
	0x036A4AC0 CMP W8, 0x1
	0x036A4AC4 B.NE 0x36A4AF8
	0x036A4AC8 LDUR V0, [X19 + 0x48]
	0x036A4ACC MOVN W8, 0x0
	0x036A4AD0 STR V0, [X31]
	0x036A4AD4 STP X31, X31, [X19 + 0x48]
	0x036A4AD8 STR W8, [X19]
	0x036A4ADC B 0x36A4C98
	0x036A4AE0 LDR V0, [X19 + 0x3]
	0x036A4AE4 MOVN W8, 0x0
	0x036A4AE8 STR V0, [X31 + 0x1]
	0x036A4AEC STP X31, X31, [X19 + 0x30]
	0x036A4AF0 STR W8, [X19]
	0x036A4AF4 B 0x36A4B30
	0x036A4AF8 CBZ X20, 0x36A4BC0
	0x036A4AFC LDR X1, [X19 + 0x28]
	0x036A4B00 MOV X0, X20
	0x036A4B04 MOV X2, X31
	0x036A4B08 BL 0x36B1E30
	0x036A4B0C CBZ X0, 0x36A4BC4
	0x036A4B10 MOV W1, W31
	0x036A4B14 MOV X2, X31
	0x036A4B18 BL 0x33ED3A0
	0x036A4B1C STP X0, X1, [X31 + 0x10]
	0x036A4B20 ADD X0, X31, 0x10
	0x036A4B24 MOV X1, X31
	0x036A4B28 BL 0x32C40D4
	0x036A4B2C TBZ X0, 0x0, 0x36A4B7C
	0x036A4B30 ADD X0, X31, 0x10
	0x036A4B34 MOV X1, X31
	0x036A4B38 BL 0x32C40F0
	0x036A4B3C ADRP X8, 0xA57000
	0x036A4B40 LDR X8, [X8 + 0x7D8]
	0x036A4B44 LDR X0, [X8]
	0x036A4B48 LDR W8, [X0 + 0xE0]
	0x036A4B4C CBNZ W8, 0x36A4B54
	0x036A4B50 BL 0x1C16DFC
	0x036A4B54 ADD X0, X19, 0x28
	0x036A4B58 MOV X1, X31
	0x036A4B5C BL 0x33DDC30
	0x036A4B60 CBZ X20, 0x36A4BB8
	0x036A4B64 LDR X0, [X20 + 0x48]
	0x036A4B68 CBZ X0, 0x36A4BBC
	0x036A4B6C BL 0x36A40F8
	0x036A4B70 TBZ X0, 0x0, 0x36A4C00
	0x036A4B74 BL 0x36A454C
	0x036A4B78 B 0x36A4C00
	0x036A4B7C STR W31, [X19]
	0x036A4B80 LDR V0, [X31 + 0x1]
	0x036A4B84 STR V0, [X19 + 0x3]
	0x036A4B88 LDR X0, [X22]
	0x036A4B8C LDR W8, [X0 + 0xE0]
	0x036A4B90 CBNZ W8, 0x36A4B98
	0x036A4B94 BL 0x1C16DFC
	0x036A4B98 ADRP X8, 0xA9A000
	0x036A4B9C LDR X8, [X8 + 0xC20]
	0x036A4BA0 ADD X0, X19, 0x8
	0x036A4BA4 LDR X3, [X8]
	0x036A4BA8 ADD X1, X31, 0x10
	0x036A4BAC MOV X2, X19
	0x036A4BB0 BL 0x218BF00
	0x036A4BB4 B 0x36A4BEC
	0x036A4BB8 BL 0x1C16F20
	0x036A4BBC BL 0x1C16F20
	0x036A4BC0 BL 0x1C16F20
	0x036A4BC4 BL 0x1C16F20
	0x036A4BC8 B 0x36A4DC4
	0x036A4BCC B 0x36A4DC4
	0x036A4BD0 B 0x36A4DC4
	0x036A4BD4 B 0x36A4DC4
	0x036A4BD8 B 0x36A4DC4
	0x036A4BDC B 0x36A4DC4
	0x036A4BE0 B 0x36A4DC4
	0x036A4BE4 B 0x36A4DC4
	0x036A4BE8 B 0x36A4DC4
	0x036A4BEC LDP X20, X19, [X31 + 0x40]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0xD3D000
	009 Move W8, [X23+2282]
	010 Move W20, W3
	011 Move X21, X2
	012 Move X22, X1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0xA9B000
	019 Move X0, [X0+2984]
	020 Call 0x1C17CF4
	021 Move X0, 0xA9B000
	022 Move X0, [X0+2992]
	023 Call 0x1C17CF4
	024 Move X0, 0xA9B000
	025 Move X0, [X0+3000]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X23+2282], W8
	029 Move [X19+24], X31
	030 Move W9, [X21]
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move W24, 1
	033 Add W8, W9, 1
	034 Move [X21], W8
	035 Compare X22, 0
	036 JumpIfEqual {121}
	037 Move W10, [X22+24]
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Add X9, X22, W9
	040 Move W23, [X9+32]
	041 Move W9, [X19+48]
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Compare W9, 0
	044 JumpIfNotEqual {123}
	045 Move [X19+48], W24
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Compare W9, 0
	048 JumpIfNotEqual {69}
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Move [X19+49], W24
	051 Move W8, [X19+49]
	052 Compare W8, 0
	053 JumpIfNotEqual {60}
	054 Move X0, [X19+40]
	055 Compare X0, 0
	056 JumpIfEqual {121}
	057 Move W1, W23
	058 Move X2, X31
	059 Call StringBuilder.Append, X0, X1
	060 Move X0, [X19+40]
	061 Compare X0, 0
	062 JumpIfEqual {121}
	063 Move X1, X31
	064 Call StringBuilder.get_Length, X0
	065 NotImplemented "Instruction CMP not yet implemented."
	066 Move W8, [X21]
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Move W9, W8
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Move W9, [X19+48]
	071 Compare W9, 0
	072 JumpIfEqual {93}
	073 Move X0, [X19+40]
	074 Move [X19+28], W31
	075 Compare X0, 0
	076 JumpIfEqual {133}
	077 Move X8, [X0]
	078 Move X9, [X8+360]
	079 Move X1, [X8+368]
	080 NotImplemented "Instruction BLR not yet implemented."
	081 Call MonoChunkParser.RemoveChunkExtension, X0
	082 Move W1, 515
	083 Move X2, X31
	084 Call Int32.Parse, X0, X1
	085 Move W8, W0
	086 Move [X19+24], W0
	087 Move W0, 2
	088 Compare W8, 0
	089 JumpIfNotEqual {113}
	090 Move [X19+52], W0
	091 Move W0, 4
	092 Move W8, W9
	093 NotImplemented "Instruction CMP not yet implemented."
	094 Move X0, [X19+40]
	095 Compare X0, 0
	096 JumpIfEqual {131}
	097 Move X1, X31
	098 Call StringBuilder.get_Length, X0
	099 NotImplemented "Instruction CMP not yet implemented."
	100 Move X0, [X19+40]
	101 Compare X0, 0
	102 JumpIfEqual {132}
	103 Move X8, [X0]
	104 Move X9, [X8+360]
	105 Move X1, [X8+368]
	106 NotImplemented "Instruction BLR not yet implemented."
	107 Call MonoChunkParser.RemoveChunkExtension, X0
	108 Move W1, 515
	109 Move X2, X31
	110 Call Int32.Parse, X0, X1
	111 Move [X19+24], W0
	112 Move W0, 1
	113 Move X20, [X31+48]
	114 Move X19, [X31+56]
	115 Move X22, [X31+32]
	116 Move X21, [X31+40]
	117 Move X24, [X31+16]
	118 Move X23, [X31+24]
	119 Move X30, [X31+64]
	120 Return X0
	121 Call 0x1C17F20
	122 Call 0x1C17F28
	123 Move X8, 0xA9B000
	124 Move X8, [X8+2992]
	125 Move X8, 0xA9B000
	126 Move X8, [X8+2984]
	127 Move X0, [X8]
	128 Call MonoChunkParser.ThrowProtocolViolation, X0
	129 Move X8, 0xA9B000
	130 Move X8, [X8+3000]
	131 Call 0x1C17F20
	132 Call 0x1C17F20
	133 Call 0x1C17F20
	134 Move X19, X0
	135 NotImplemented "Instruction CMP not yet implemented."
	136 Move X0, X19
	137 Call 0x3EB2AD0
	138 Move X19, X0
	139 Move X0, 0xA50000
	140 Move X0, [X0+2000]
	141 Call 0x1C17D08
	142 Move X8, [X19]
	143 Move X1, [X8]
	144 Call 0x1C18270
	145 Move TEMP, X0
	146 And TEMP, TEMP, 1
	147 Compare TEMP, 1
	148 JumpIfEqual {174}
	149 Move W0, 8
	150 Call 0x3EB2AF0
	151 Move X8, [X19]
	152 Move [X0], X8
	153 Move X1, 0x811000
	154 Add X1, X1, 3672
	155 Move X2, X31
	156 Call 0x3EB2B00
	157 Move X19, X0
	158 Call 0x3EB2AE0
	159 Move X19, X0
	160 NotImplemented "Instruction CMP not yet implemented."
	161 Move X0, X19
	162 Call 0x3EB2AD0
	163 Move X19, X0
	164 Move X0, 0xA50000
	165 Move X0, [X0+2000]
	166 Call 0x1C17D08
	167 Move X8, [X19]
	168 Move X1, [X8]
	169 Call 0x1C18270
	170 Move TEMP, X0
	171 And TEMP, TEMP, 1
	172 Compare TEMP, 1
	173 JumpIfNotEqual {179}
	174 Call 0x3EB2AE0
	175 Move X0, 0xA9B000
	176 Move X0, [X0+3008]
	177 Call 0x1C17D08
	178 Call MonoChunkParser.ThrowProtocolViolation, X0
	179 Move W0, 8
	180 Call 0x3EB2AF0
	181 Move X8, [X19]
	182 Move [X0], X8
	183 Move X1, 0x811000
	184 Add X1, X1, 3672
	185 Move X2, X31
	186 Call 0x3EB2B00
	187 Move X19, X0
	188 Call 0x3EB2AE0
	189 Move X0, X19
	190 Call 0x1D2D690
	191 Call 0x1991590

Method: System.String RemoveChunkExtension(System.String input)

Disassembly:
	0x036A527C STR X0, [X19 + 0x50]
	0x036A5280 LDP X20, X19, [X31 + 0x50]
	0x036A5284 LDP X22, X21, [X31 + 0x40]
	0x036A5288 LDP X24, X23, [X31 + 0x30]
	0x036A528C LDP X26, X25, [X31 + 0x20]
	0x036A5290 LDP X28, X27, [X31 + 0x10]
	0x036A5294 LDP X29, X30, [X31], #0x60
	0x036A5298 RET
	0x036A529C LDR X0, [X0 + 0x68]
	0x036A52A0 RET
	0x036A52A4 LDR X0, [X0 + 0x70]
	0x036A52A8 RET
	0x036A52AC STR X1, [X0 + 0x70]
	0x036A52B0 RET
	0x036A52B4 LDR X0, [X0 + 0x10]
	0x036A52B8 RET
	0x036A52BC LDR W0, [X0 + 0x78]
	0x036A52C0 RET

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Compare X0, 0
	004 JumpIfEqual {22}
	005 Move W1, 59
	006 Move X2, X31
	007 Move X19, X0
	008 Call String.IndexOf, X0, X1
	009 Add W31, W0, 1
	010 Move W2, W0
	011 Move X0, X19
	012 Move W1, W31
	013 Move X3, X31
	014 Move X30, [X31+16]
	015 Move X19, [X31+24]
	016 Call String.Substring, X0, X1, X2
	017 Return X0
	018 Move X0, X19
	019 Move X30, [X31+16]
	020 Move X19, [X31+24]
	021 Return X0
	022 Call 0x1C17F20

Method: System.Net.MonoChunkParser/State ReadCRLF(System.Byte[] buffer, ref System.Int32 offset, System.Int32 size)

Disassembly:
	0x036A4D24 CBNZ W8, 0x36A4D2C
	0x036A4D28 BL 0x1C16DFC
	0x036A4D2C ADRP X8, 0xA9A000
	0x036A4D30 LDR X8, [X8 + 0xC28]
	0x036A4D34 ADD X0, X19, 0x8
	0x036A4D38 LDR X3, [X8]
	0x036A4D3C ADD X1, X31, 0x0
	0x036A4D40 MOV X2, X19
	0x036A4D44 BL 0x218565C
	0x036A4D48 B 0x36A4BEC
	0x036A4D4C MOVN W8, 0x1
	0x036A4D50 STR W8, [X19], #0x8
	0x036A4D54 LDR X0, [X22]
	0x036A4D58 LDR W8, [X0 + 0xE0]
	0x036A4D5C CBNZ W8, 0x36A4D64
	0x036A4D60 BL 0x1C16DFC
	0x036A4D64 MOV X0, X19
	0x036A4D68 MOV X1, X31
	0x036A4D6C BL 0x32C4864
	0x036A4D70 B 0x36A4BEC
	0x036A4D74 BL 0x1C16F20
	0x036A4D78 BL 0x1C16F20
	0x036A4D7C BL 0x1C16F20
	0x036A4D80 BL 0x1C16F20
	0x036A4D84 BL 0x1C16F20
	0x036A4D88 BL 0x1C16F20
	0x036A4D8C BL 0x1C16F20
	0x036A4D90 B 0x36A4DC4
	0x036A4D94 B 0x36A4DC4
	0x036A4D98 B 0x36A4DC4
	0x036A4D9C B 0x36A4DC4
	0x036A4DA0 B 0x36A4DC4
	0x036A4DA4 B 0x36A4DC4
	0x036A4DA8 B 0x36A4DC4
	0x036A4DAC B 0x36A4DC4
	0x036A4DB0 B 0x36A4DC4
	0x036A4DB4 B 0x36A4DC4
	0x036A4DB8 B 0x36A4DC4
	0x036A4DBC B 0x36A4DC4
	0x036A4DC0 B 0x36A4DC4
	0x036A4DC4 MOV X20, X0
	0x036A4DC8 CMP W1, 0x1
	0x036A4DCC B.NE 0x36A4E5C
	0x036A4DD0 MOV X0, X20
	0x036A4DD4 BL 0x3EB1AD0
	0x036A4DD8 MOV X20, X0
	0x036A4DDC ADRP X0, 0xA4F000
	0x036A4DE0 LDR X0, [X0 + 0x7D0]
	0x036A4DE4 BL 0x1C16D08
	0x036A4DE8 LDR X8, [X20]
	0x036A4DEC LDR X1, [X8]
	0x036A4DF0 BL 0x1C17270
	0x036A4DF4 TBZ X0, 0x0, 0x36A4E34
	0x036A4DF8 LDR X20, [X20]
	0x036A4DFC BL 0x3EB1AE0
	0x036A4E00 MOVN W8, 0x1
	0x036A4E04 STR W8, [X19], #0x8
	0x036A4E08 ADRP X0, 0xA52000
	0x036A4E0C LDR X0, [X0 + 0x280]
	0x036A4E10 BL 0x1C16D08
	0x036A4E14 LDR W8, [X0 + 0xE0]
	0x036A4E18 CBNZ W8, 0x36A4E20
	0x036A4E1C BL 0x1C16DFC
	0x036A4E20 MOV X0, X19

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0xD3D000
	008 Move W8, [X23+2283]
	009 Move W21, W3
	010 Move X20, X2
	011 Move X19, X1
	012 Move X22, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0xA9B000
	018 Move X0, [X0+3016]
	019 Call 0x1C17CF4
	020 Move X0, 0xA9B000
	021 Move X0, [X0+3024]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X23+2283], W8
	025 Move W8, [X20]
	026 Move W10, [X22+48]
	027 Add W9, W8, 1
	028 Move [X20], W9
	029 Compare W10, 0
	030 JumpIfEqual {33}
	031 Compare X19, 0
	032 JumpIfNotEqual {48}
	033 Compare X19, 0
	034 JumpIfEqual {62}
	035 Move W10, [X19+24]
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move X8, W8
	038 Add X8, X19, X8
	039 Move W8, [X8+32]
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Move W8, 1
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move [X22+48], W8
	044 Move W0, 3
	045 Move W8, [X20]
	046 Add W9, W8, 1
	047 Move [X20], W9
	048 Move W9, [X19+24]
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Add X8, X19, W8
	051 Move W8, [X8+32]
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Move W0, W31
	054 Move X20, [X31+32]
	055 Move X19, [X31+40]
	056 Move X22, [X31+16]
	057 Move X21, [X31+24]
	058 Move X30, [X31+48]
	059 Move X23, [X31+56]
	060 Return X0
	061 Call 0x1C17F28
	062 Call 0x1C17F20
	063 Move X8, 0xA9B000
	064 Move X8, [X8+3016]
	065 Move X8, 0xA9B000
	066 Move X8, [X8+3024]
	067 Move X0, [X8]
	068 Call MonoChunkParser.ThrowProtocolViolation, X0

Method: System.Net.MonoChunkParser/State ReadTrailer(System.Byte[] buffer, ref System.Int32 offset, System.Int32 size)

Disassembly:
	0x036A4E24 MOV X1, X20
	0x036A4E28 MOV X2, X31
	0x036A4E2C BL 0x32C4908
	0x036A4E30 B 0x36A4BEC
	0x036A4E34 MOVZ W0, 0x8
	0x036A4E38 BL 0x3EB1AF0
	0x036A4E3C LDR X8, [X20]
	0x036A4E40 STR X8, [X0]
	0x036A4E44 ADRP X1, 0x810000
	0x036A4E48 ADD X1, X1, 0xE58
	0x036A4E4C MOV X2, X31
	0x036A4E50 BL 0x3EB1B00
	0x036A4E54 MOV X20, X0
	0x036A4E58 BL 0x3EB1AE0
	0x036A4E5C MOV X0, X20
	0x036A4E60 BL 0x1D2C690
	0x036A4E64 BL 0x1990590
	0x036A4E68 STR X30, [X31 - 0x30]!
	0x036A4E6C STP X22, X21, [X31 + 0x10]
	0x036A4E70 STP X20, X19, [X31 + 0x20]
	0x036A4E74 ADRP X21, 0xD3C000
	0x036A4E78 ADRP X22, 0xA52000
	0x036A4E7C LDRB W8, [X21 + 0x8F3]
	0x036A4E80 LDR X22, [X22 + 0x280]
	0x036A4E84 MOV X19, X1
	0x036A4E88 MOV X20, X0
	0x036A4E8C TBNZ X8, 0x0, 0x36A4EA4
	0x036A4E90 ADRP X0, 0xA52000
	0x036A4E94 LDR X0, [X0 + 0x280]
	0x036A4E98 BL 0x1C16CF4
	0x036A4E9C MOVZ W8, 0x1
	0x036A4EA0 STRB W8, [X21 + 0x8F3]
	0x036A4EA4 LDR X0, [X22]
	0x036A4EA8 LDR W8, [X0 + 0xE0]
	0x036A4EAC CBNZ W8, 0x36A4EB4
	0x036A4EB0 BL 0x1C16DFC
	0x036A4EB4 ADD X0, X20, 0x8
	0x036A4EB8 MOV X1, X19
	0x036A4EBC LDP X20, X19, [X31 + 0x20]
	0x036A4EC0 LDP X22, X21, [X31 + 0x10]
	0x036A4EC4 MOV X2, X31
	0x036A4EC8 LDR X30, [X31], #0x30
	0x036A4ECC B 0x32C477C
	0x036A4ED0 STP X30, X23, [X31 - 0x30]!
	0x036A4ED4 STP X22, X21, [X31 + 0x10]
	0x036A4ED8 STP X20, X19, [X31 + 0x20]
	0x036A4EDC ADRP X23, 0xD3C000
	0x036A4EE0 LDRB W8, [X23 + 0x8F5]
	0x036A4EE4 MOV X19, X3
	0x036A4EE8 MOV X20, X2
	0x036A4EEC MOV X21, X1
	0x036A4EF0 MOV X22, X0
	0x036A4EF4 TBNZ X8, 0x0, 0x36A4F0C
	0x036A4EF8 ADRP X0, 0xA9A000
	0x036A4EFC LDR X0, [X0 + 0x5D0]
	0x036A4F00 BL 0x1C16CF4
	0x036A4F04 MOVZ W8, 0x1
	0x036A4F08 STRB W8, [X23 + 0x8F5]
	0x036A4F0C LDR X22, [X22 + 0x10]
	0x036A4F10 CBZ X22, 0x36A4F5C
	0x036A4F14 ADRP X10, 0xA9A000
	0x036A4F18 LDR X8, [X22]
	0x036A4F1C LDR X10, [X10 + 0x5D0]
	0x036A4F20 LDRH W9, [X8 + 0x12E]
	0x036A4F24 LDR X1, [X10]
	0x036A4F28 CBZ X9, 0x36A4F4C
	0x036A4F2C LDR X10, [X8 + 0xB0]
	0x036A4F30 ADD X10, X10, 0x8
	0x036A4F34 LDUR X11, [X10 - 0x8]
	0x036A4F38 CMP X11, X1
	0x036A4F3C B.EQ 0x36A4F70
	0x036A4F40 SUBS X9, X9, 0x1
	0x036A4F44 ADD X10, X10, 0x10
	0x036A4F48 B.NE 0x36A4F34
	0x036A4F4C MOV X0, X22
	0x036A4F50 MOV W2, W31
	0x036A4F54 BL 0x1C5C788
	0x036A4F58 B 0x36A4F7C
	0x036A4F5C LDP X20, X19, [X31 + 0x20]
	0x036A4F60 LDP X22, X21, [X31 + 0x10]
	0x036A4F64 MOV X0, X31
	0x036A4F68 LDP X30, X23, [X31], #0x30
	0x036A4F6C RET
	0x036A4F70 LDRSW X9, [X10]
	0x036A4F74 ADD X8, X8, X9, 0x4, LSL
	0x036A4F78 ADD X0, X8, 0x138
	0x036A4F7C LDP X5, X4, [X0]
	0x036A4F80 MOV X0, X22
	0x036A4F84 MOV X1, X21
	0x036A4F88 MOV X2, X20
	0x036A4F8C MOV X3, X19
	0x036A4F90 LDP X20, X19, [X31 + 0x20]
	0x036A4F94 LDP X22, X21, [X31 + 0x10]
	0x036A4F98 LDP X30, X23, [X31], #0x30
	0x036A4F9C BR X5
	0x036A4FA0 MOV X0, X31
	0x036A4FA4 RET
	0x036A4FA8 STR X30, [X31 - 0x20]!
	0x036A4FAC STP X20, X19, [X31 + 0x10]
	0x036A4FB0 ADRP X19, 0xD3C000
	0x036A4FB4 ADRP X20, 0xA7F000
	0x036A4FB8 LDRB W8, [X19 + 0x8F6]
	0x036A4FBC LDR X20, [X20 + 0xA50]
	0x036A4FC0 TBNZ X8, 0x0, 0x36A4FD8
	0x036A4FC4 ADRP X0, 0xA7F000
	0x036A4FC8 LDR X0, [X0 + 0xA50]
	0x036A4FCC BL 0x1C16CF4
	0x036A4FD0 MOVZ W8, 0x1
	0x036A4FD4 STRB W8, [X19 + 0x8F6]
	0x036A4FD8 LDR X0, [X20]
	0x036A4FDC LDP X20, X19, [X31 + 0x10]
	0x036A4FE0 LDR X30, [X31], #0x20
	0x036A4FE4 RET
	0x036A4FE8 STR X30, [X31 - 0x50]!
	0x036A4FEC STP X26, X25, [X31 + 0x10]
	0x036A4FF0 STP X24, X23, [X31 + 0x20]
	0x036A4FF4 STP X22, X21, [X31 + 0x30]
	0x036A4FF8 STP X20, X19, [X31 + 0x40]
	0x036A4FFC ADRP X26, 0xD3C000
	0x036A5000 ADRP X24, 0xA54000
	0x036A5004 ADRP X25, 0xA99000
	0x036A5008 LDRB W8, [X26 + 0x8F7]
	0x036A500C LDR X24, [X24 + 0xCC0]
	0x036A5010 B 0x3EB16BC
	0x036A5014 MOV W19, W4
	0x036A5018 MOV W21, W3
	0x036A501C MOV X22, X2
	0x036A5020 MOV X23, X1
	0x036A5024 MOV X20, X0
	0x036A5028 TBNZ X8, 0x0, 0x36A504C
	0x036A502C ADRP X0, 0xA54000
	0x036A5030 LDR X0, [X0 + 0xCC0]
	0x036A5034 BL 0x1C16CF4
	0x036A5038 ADRP X0, 0xA99000
	0x036A503C LDR X0, [X0 + 0xC30]
	0x036A5040 BL 0x1C16CF4
	0x036A5044 MOVZ W8, 0x1
	0x036A5048 STRB W8, [X26 + 0x8F7]
	0x036A504C MOVZ W8, 0x1
	0x036A5050 STRB W8, [X20 + 0x31]
	0x036A5054 LDR X0, [X24]
	0x036A5058 BL 0x1C16F10
	0x036A505C MOV X1, X31
	0x036A5060 MOV X24, X0
	0x036A5064 BL 0x33BDD8C
	0x036A5068 MOVI V0.2D, 0xFFFFFFFFFFFFFFFF
	0x036A506C MOV X0, X20
	0x036A5070 MOV X1, X31
	0x036A5074 STR X24, [X20 + 0x38]
	0x036A5078 STR D0, [X20 + 0x60]
	0x036A507C BL 0x33BDD8C
	0x036A5080 STR X23, [X20 + 0x68]
	0x036A5084 STR X22, [X20 + 0x10]
	0x036A5088 STP W21, W19, [X20 + 0x78]
	0x036A508C LDR X0, [X25]
	0x036A5090 BL 0x1C16F10
	0x036A5094 MOV X1, X20
	0x036A5098 MOV W2, W21
	0x036A509C MOV W3, W19
	0x036A50A0 MOV X22, X0
	0x036A50A4 BL 0x36A50C4
	0x036A50A8 STR X22, [X20 + 0x70]
	0x036A50AC LDP X20, X19, [X31 + 0x40]
	0x036A50B0 LDP X22, X21, [X31 + 0x30]
	0x036A50B4 LDP X24, X23, [X31 + 0x20]
	0x036A50B8 LDP X26, X25, [X31 + 0x10]
	0x036A50BC LDR X30, [X31], #0x50
	0x036A50C0 RET
	0x036A50C4 STP X29, X30, [X31 - 0x60]!
	0x036A50C8 STP X28, X27, [X31 + 0x10]
	0x036A50CC STP X26, X25, [X31 + 0x20]
	0x036A50D0 STP X24, X23, [X31 + 0x30]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X23, 0xD3D000
	010 Move W8, [X23+2284]
	011 Move W21, W3
	012 Move X20, X2
	013 Move X22, X1
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {33}
	019 Move X0, 0xA7C000
	020 Move X0, [X0+3952]
	021 Call 0x1C17CF4
	022 Move X0, 0xA9B000
	023 Move X0, [X0+3032]
	024 Call 0x1C17CF4
	025 Move X0, 0xA9B000
	026 Move X0, [X0+3040]
	027 Call 0x1C17CF4
	028 Move X0, 0xA50000
	029 Move X0, [X0+2440]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X23+2284], W8
	033 Move W8, [X19+52]
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Compare X22, 0
	036 JumpIfEqual {176}
	037 NotImplemented "Instruction LDRSW not yet implemented."
	038 Move W9, [X22+24]
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Add X8, X22, X8
	041 Move W8, [X8+32]
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X0, [X19+40]
	044 Compare X0, 0
	045 JumpIfEqual {176}
	046 Move X1, X31
	047 Call StringBuilder.get_Length, X0
	048 Compare W0, 0
	049 JumpIfNotEqual {63}
	050 Move W8, [X20]
	051 Add W9, W8, 1
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Move [X20], W9
	054 Move W10, [X22+24]
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Add X9, X22, W9
	057 Move W9, [X9+32]
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Add W8, W8, 2
	060 Move W0, W31
	061 Move [X20], W8
	062 Move [X20], W8
	063 Move W8, [X19+52]
	064 Move X25, -45137920
	065 Add X23, X22, 32
	066 Move W24, 0x1065
	067 Add X25, X25, 1990
	068 NotImplemented "Instruction LDRSW not yet implemented."
	069 Add X9, X23, X10
	070 NotImplemented "Instruction CMP not yet implemented."
	071 NotImplemented "Instruction CMP not yet implemented."
	072 Add W10, W10, 1
	073 Move [X20], W10
	074 Compare X22, 0
	075 JumpIfEqual {176}
	076 Move W11, [X22+24]
	077 Subtract W10, W10, 1
	078 NotImplemented "Instruction CMP not yet implemented."
	079 Move W1, [X9]
	080 NotImplemented "Instruction CMP not yet implemented."
	081 Add X9, X9, 1
	082 Add W10, W10, 1
	083 Move TEMP, X8
	084 And TEMP, TEMP, -2147483648
	085 Compare TEMP, -2147483648
	086 JumpIfEqual {70}
	087 Move W9, W8
	088 NotImplemented "Instruction ADR not yet implemented."
	089 Move W11, [X25]
	090 Add X10, X10, X11
	091 CallNoReturn X10
	092 NotImplemented "Instruction CMP not yet implemented."
	093 NotImplemented "Instruction CMP not yet implemented."
	094 NotImplemented "Instruction CMP not yet implemented."
	095 Add W8, W8, 1
	096 Move X0, [X19+40]
	097 Compare X0, 0
	098 JumpIfEqual {176}
	099 Move X2, X31
	100 Call StringBuilder.Append, X0, X1
	101 Move X0, [X19+40]
	102 Compare X0, 0
	103 JumpIfEqual {176}
	104 Move X1, X31
	105 Call StringBuilder.get_Length, X0
	106 NotImplemented "Instruction CMP not yet implemented."
	107 Move W8, W31
	108 Move X8, 0xA9B000
	109 Move X8, [X8+3032]
	110 NotImplemented "Instruction CMP not yet implemented."
	111 Move X0, [X19+40]
	112 Compare X0, 0
	113 JumpIfEqual {176}
	114 Move X8, [X0]
	115 Move X9, [X8+360]
	116 Move X1, [X8+368]
	117 NotImplemented "Instruction BLR not yet implemented."
	118 Move X8, 0xA7C000
	119 Move X8, [X8+3952]
	120 Move X21, X0
	121 Move X8, [X8]
	122 Move X0, X8
	123 Call 0x1C17F10
	124 Move X1, X21
	125 Move X2, X31
	126 Move X20, X0
	127 Call StringReader..ctor, X0, X1
	128 Compare X20, 0
	129 JumpIfEqual {176}
	130 Move X8, [X20]
	131 Move X0, X20
	132 Move X9, [X8+504]
	133 Move X1, [X8+512]
	134 NotImplemented "Instruction BLR not yet implemented."
	135 Compare X0, 0
	136 JumpIfEqual {167}
	137 Move X22, 0xA4F000
	138 Move X22, [X22+2440]
	139 Move X21, X0
	140 Move X1, [X22]
	141 Move X0, X21
	142 Move X2, X31
	143 Call String.op_Inequality, X0, X1
	144 Move TEMP, X0
	145 And TEMP, TEMP, 1
	146 Compare TEMP, 1
	147 JumpIfNotEqual {166}
	148 Move X0, [X19+16]
	149 Compare X0, 0
	150 JumpIfEqual {176}
	151 Move X1, X21
	152 Move X2, X31
	153 Call WebHeaderCollection.Add, X0, X1
	154 Move X8, [X20]
	155 Move X0, X20
	156 Move X9, [X8+504]
	157 Move X1, [X8+512]
	158 NotImplemented "Instruction BLR not yet implemented."
	159 Move X21, X0
	160 Compare X0, 0
	161 JumpIfNotEqual {140}
	162 Move [X19+52], W8
	163 Move W8, [X20]
	164 NotImplemented "Instruction CMP not yet implemented."
	165 Move W0, 4
	166 Move W0, W31
	167 Move X20, [X31+48]
	168 Move X19, [X31+56]
	169 Move X22, [X31+32]
	170 Move X21, [X31+40]
	171 Move X24, [X31+16]
	172 Move X23, [X31+24]
	173 Move X30, [X31+64]
	174 Move X25, [X31+72]
	175 Return X0
	176 Call 0x1C17F20
	177 Call 0x1C17F28
	178 Move X8, 0xA9A000
	179 Move X8, [X8+3040]
	180 Move X0, [X8]
	181 Call MonoChunkParser.ThrowProtocolViolation, X0

Method: System.Void ThrowProtocolViolation(System.String message)

Disassembly:
	0x036A522C BL 0x2EEAAE4
	0x036A5230 STR X20, [X19 + 0x38]
	0x036A5234 ADRP X8, 0xA99000
	0x036A5238 LDR X8, [X8 + 0xC60]
	0x036A523C LDR X0, [X8]
	0x036A5240 BL 0x1C16F10
	0x036A5244 ADRP X8, 0xA99000
	0x036A5248 LDR X8, [X8 + 0xC58]
	0x036A524C MOV X20, X0
	0x036A5250 LDR X1, [X8]
	0x036A5254 BL 0x2EEBBE0
	0x036A5258 STR X20, [X19 + 0x40]
	0x036A525C ADRP X8, 0xA4F000
	0x036A5260 LDR X8, [X8 + 0x9F0]
	0x036A5264 LDR X0, [X8]
	0x036A5268 LDR W8, [X0 + 0xE0]
	0x036A526C CBNZ W8, 0x36A5274
	0x036A5270 BL 0x1C16DFC
	0x036A5274 MOV X0, X31
	0x036A5278 BL 0x33616A4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X0
	005 Move X0, 0xA7A000
	006 Move X0, [X0+816]
	007 Call 0x1C17D08
	008 Call 0x1C17F10
	009 Move W3, 11
	010 Move X1, X19
	011 Move X2, X31
	012 Move X4, X31
	013 Move X5, X31
	014 Move X20, X0
	015 Call WebException..ctor, X0, X1, X2, X3, X4
	016 Move X0, 0xA9A000
	017 Move X0, [X0+3048]
	018 Call 0x1C17D08
	019 Move X1, X0
	020 Move X0, X20
	021 Call 0x1C17DEC

