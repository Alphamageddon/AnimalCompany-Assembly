Type: System.Net.MonoChunkStream

Method: System.Net.MonoChunkParser get_Decoder()

Disassembly:
	0x036A52C4 LDR X0, [X0 + 0x20]
	0x036A52C8 RET

ISIL:
	001 Move X0, [X0+72]
	002 Return X0

Method: System.Void .ctor(System.Net.WebOperation operation, System.IO.Stream innerStream, System.Net.WebHeaderCollection headers)

Disassembly:
	0x036A52CC AND W8, W1, 0x1
	0x036A52D0 STRB W8, [X0 + 0x31]
	0x036A52D4 RET
	0x036A52D8 LDRB W0, [X0 + 0x40]
	0x036A52DC RET
	0x036A52E0 AND W8, W1, 0x1
	0x036A52E4 STRB W8, [X0 + 0x40]
	0x036A52E8 RET
	0x036A52EC AND W8, W1, 0x1
	0x036A52F0 STRB W8, [X0 + 0x31]
	0x036A52F4 RET
	0x036A52F8 STR X30, [X31 - 0x20]!
	0x036A52FC STP X20, X19, [X31 + 0x10]
	0x036A5300 TBZ X1, 0x0, 0x36A5314
	0x036A5304 CMP W2, 0x0
	0x036A5308 B.LE 0x36A532C
	0x036A530C CMP W3, 0x0
	0x036A5310 B.LE 0x36A534C
	0x036A5314 LDP X20, X19, [X31 + 0x10]
	0x036A5318 AND W8, W1, 0x1
	0x036A531C STRB W8, [X0 + 0x50]
	0x036A5320 STP W2, W3, [X0 + 0x54]
	0x036A5324 LDR X30, [X31], #0x20
	0x036A5328 RET
	0x036A532C ADRP X0, 0xA56000
	0x036A5330 LDR X0, [X0 + 0x760]
	0x036A5334 BL 0x1C16D08
	0x036A5338 BL 0x1C16F10
	0x036A533C MOV X19, X0
	0x036A5340 ADRP X0, 0xA99000
	0x036A5344 LDR X0, [X0 + 0xC68]
	0x036A5348 B 0x36A5368
	0x036A534C ADRP X0, 0xA56000
	0x036A5350 LDR X0, [X0 + 0x760]
	0x036A5354 BL 0x1C16D08

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0xD3C000
	009 Move X23, 0xA9A000
	010 Move W8, [X24+2285]
	011 Move X23, [X23+3056]
	012 Move X20, X3
	013 Move X21, X2
	014 Move X22, X1
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0xA9A000
	021 Move X0, [X0+3056]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X24+2285], W8
	025 Move X0, X19
	026 Move X1, X22
	027 Move X2, X21
	028 Move X3, X31
	029 Call WebReadStream..ctor, X0, X1, X2
	030 Move [X19+64], X20
	031 Move X0, [X23]
	032 Call 0x1C17F10
	033 Move X1, X20
	034 Move X21, X0
	035 Call MonoChunkParser..ctor, X0, X1
	036 Move [X19+72], X21
	037 Move X20, [X31+48]
	038 Move X19, [X31+56]
	039 Move X22, [X31+32]
	040 Move X21, [X31+40]
	041 Move X24, [X31+16]
	042 Move X23, [X31+24]
	043 Move X30, [X31+64]
	044 Return 

Method: System.Threading.Tasks.Task`1<System.Int32> ProcessReadAsync(System.Byte[] buffer, System.Int32 offset, System.Int32 size, System.Threading.CancellationToken cancellationToken)

Disassembly:
	0x036A5358 BL 0x1C16F10
	0x036A535C MOV X19, X0
	0x036A5360 ADRP X0, 0xA99000
	0x036A5364 LDR X0, [X0 + 0xC70]
	0x036A5368 BL 0x1C16D08
	0x036A536C MOV X20, X0
	0x036A5370 ADRP X0, 0xA99000
	0x036A5374 LDR X0, [X0 + 0xC78]
	0x036A5378 BL 0x1C16D08
	0x036A537C MOV X2, X0
	0x036A5380 MOV X0, X19
	0x036A5384 MOV X1, X20
	0x036A5388 MOV X3, X31
	0x036A538C BL 0x3311888
	0x036A5390 ADRP X0, 0xA99000
	0x036A5394 LDR X0, [X0 + 0xC80]
	0x036A5398 BL 0x1C16D08
	0x036A539C MOV X1, X0
	0x036A53A0 MOV X0, X19
	0x036A53A4 BL 0x1C16DEC
	0x036A53A8 STP X30, X21, [X31 - 0x20]!
	0x036A53AC STP X20, X19, [X31 + 0x10]
	0x036A53B0 ADRP X21, 0xD3B000
	0x036A53B4 LDRB W8, [X21 + 0x8F9]
	0x036A53B8 MOV X19, X1
	0x036A53BC MOV X20, X0
	0x036A53C0 TBNZ X8, 0x0, 0x36A53D8
	0x036A53C4 ADRP X0, 0xA4E000
	0x036A53C8 LDR X0, [X0 + 0x618]
	0x036A53CC BL 0x1C16CF4
	0x036A53D0 MOVZ W8, 0x1
	0x036A53D4 STRB W8, [X21 + 0x8F9]
	0x036A53D8 LDRB W8, [X20 + 0x50]
	0x036A53DC CBZ W8, 0x36A544C
	0x036A53E0 ADRP X8, 0xA4E000
	0x036A53E4 LDR X8, [X8 + 0x618]
	0x036A53E8 MOVZ W1, 0xC
	0x036A53EC LDR X0, [X8]
	0x036A53F0 BL 0x1C16D6C
	0x036A53F4 LDRB W1, [X20 + 0x50]
	0x036A53F8 MOV W2, W31
	0x036A53FC MOV X21, X0
	0x036A5400 BL 0x36A545C
	0x036A5404 LDR W1, [X20 + 0x54]
	0x036A5408 MOVZ W2, 0x4
	0x036A540C MOV X0, X21
	0x036A5410 BL 0x36A545C
	0x036A5414 LDR W1, [X20 + 0x58]
	0x036A5418 MOVZ W2, 0x8
	0x036A541C MOV X0, X21
	0x036A5420 BL 0x36A545C
	0x036A5424 CBZ X19, 0x36A5458
	0x036A5428 MOV X0, X19
	0x036A542C LDP X20, X19, [X31 + 0x10]
	0x036A5430 MOVZ W1, 0x4
	0x036A5434 MOVK W1, 0x98000000
	0x036A5438 MOV X2, X21
	0x036A543C MOV X3, X31
	0x036A5440 MOV X4, X31
	0x036A5444 LDP X30, X21, [X31], #0x20
	0x036A5448 B 0x36C0CCC
	0x036A544C LDP X20, X19, [X31 + 0x10]
	0x036A5450 LDP X30, X21, [X31], #0x20
	0x036A5454 RET
	0x036A5458 BL 0x1C16F20
	0x036A545C STR X30, [X31 - 0x10]!
	0x036A5460 CBZ X0, 0x36A54D8
	0x036A5464 LDR W8, [X0 + 0x18]
	0x036A5468 CMP W8, W2
	0x036A546C B.LS 0x36A54D4
	0x036A5470 ADD X8, X0, W2, SXTW

ISIL:
	001 Subtract X31, X31, 192
	002 Move [X31+128], X30
	003 Move [X31+136], X25
	004 Move [X31+144], X24
	005 Move [X31+152], X23
	006 Move [X31+160], X22
	007 Move [X31+168], X21
	008 Move [X31+176], X20
	009 Move [X31+184], X19
	010 Move X25, 0xD3C000
	011 Move X24, 0xA7E000
	012 Move W8, [X25+2286]
	013 Move X24, [X24+3488]
	014 Move X19, X4
	015 Move W20, W3
	016 Move W21, W2
	017 Move X23, X1
	018 Move X22, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {37}
	023 Move X0, 0xA7E000
	024 Move X0, [X0+3496]
	025 Call 0x1C17CF4
	026 Move X0, 0xA9A000
	027 Move X0, [X0+3064]
	028 Call 0x1C17CF4
	029 Move X0, 0xA7E000
	030 Move X0, [X0+3512]
	031 Call 0x1C17CF4
	032 Move X0, 0xA7E000
	033 Move X0, [X0+3488]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X25+2286], W8
	037 Move X0, [X24]
	038 NotImplemented "Instruction MOVI not yet implemented."
	039 Move [X31+112], X31
	040 Move [X31+64], V0
	041 Move [X31+72], V0
	042 Move [X31+6], V0
	043 Move [X31+32], V0
	044 Move [X31+40], V0
	045 Move [X31+72], X22
	046 Move [X31+80], X23
	047 Move [X31+88], W21
	048 Move [X31+92], W20
	049 Move [X31+64], X19
	050 Move X21, 0xA7E000
	051 Move X19, 0xA9A000
	052 Move X20, 0xA7E000
	053 Move W8, [X0+224]
	054 Move X21, [X21+3496]
	055 Move X19, [X19+3064]
	056 Move X20, [X20+3512]
	057 Compare W8, 0
	058 JumpIfNotEqual {60}
	059 Call 0x1C17DFC
	060 Move X0, [X21]
	061 Add X8, X31, 8
	062 Call AsyncTaskMethodBuilder`1<Int32>.Create
	063 NotImplemented "Instruction LDUR not yet implemented."
	064 Move X9, [X31+24]
	065 Move X2, [X19]
	066 Add X8, X31, 32
	067 Or X19, X8, 15
	068 Move TEMP, 0
	069 Not TEMP
	070 Move W10, TEMP
	071 Add X1, X31, 32
	072 Move X0, X19
	073 Move [X31+40], V0
	074 Move [X31+56], X9
	075 Move [X31+32], W10
	076 Call AsyncTaskMethodBuilder`1<Int32>.Start, X0, X1
	077 Move X1, [X20]
	078 Move X0, X19
	079 Call AsyncTaskMethodBuilder`1<Int32>.get_Task, X0
	080 Move X20, [X31+176]
	081 Move X19, [X31+184]
	082 Move X22, [X31+160]
	083 Move X21, [X31+168]
	084 Move X24, [X31+144]
	085 Move X23, [X31+152]
	086 Move X30, [X31+128]
	087 Move X25, [X31+136]
	088 Add X31, X31, 192
	089 Return X0

Method: System.Threading.Tasks.Task FinishReading(System.Threading.CancellationToken cancellationToken)

Disassembly:
	0x036A5474 STRB W1, [X8 + 0x20]
	0x036A5478 LDR W9, [X0 + 0x18]
	0x036A547C ADD W8, W2, 0x1
	0x036A5480 CMP W8, W9
	0x036A5484 B.CS 0x36A54D4
	0x036A5488 UBFM W9, W1, 0x8, 0x1F
	0x036A548C ADD X8, X0, W8, SXTW
	0x036A5490 STRB W9, [X8 + 0x20]
	0x036A5494 LDR W9, [X0 + 0x18]
	0x036A5498 ADD W8, W2, 0x2
	0x036A549C CMP W8, W9
	0x036A54A0 B.CS 0x36A54D4
	0x036A54A4 UBFM W9, W1, 0x10, 0x1F
	0x036A54A8 ADD X8, X0, W8, SXTW
	0x036A54AC STRB W9, [X8 + 0x20]
	0x036A54B0 LDR W9, [X0 + 0x18]
	0x036A54B4 ADD W8, W2, 0x3
	0x036A54B8 CMP W8, W9
	0x036A54BC B.CS 0x36A54D4
	0x036A54C0 UBFM W9, W1, 0x18, 0x1F
	0x036A54C4 ADD X8, X0, W8, SXTW
	0x036A54C8 STRB W9, [X8 + 0x20]
	0x036A54CC LDR X30, [X31], #0x10
	0x036A54D0 RET
	0x036A54D4 BL 0x1C16F28
	0x036A54D8 BL 0x1C16F20
	0x036A54DC LDRB W0, [X0 + 0x30]
	0x036A54E0 RET
	0x036A54E4 AND W8, W1, 0x1
	0x036A54E8 STRB W8, [X0 + 0x30]
	0x036A54EC RET
	0x036A54F0 LDRB W0, [X0 + 0x32]
	0x036A54F4 RET
	0x036A54F8 AND W8, W1, 0x1
	0x036A54FC STRB W8, [X0 + 0x32]
	0x036A5500 RET
	0x036A5504 STP X30, X21, [X31 - 0x20]!
	0x036A5508 STP X20, X19, [X31 + 0x10]
	0x036A550C ADRP X21, 0xD3B000
	0x036A5510 ADRP X20, 0xA7C000
	0x036A5514 LDRB W8, [X21 + 0x8FA]
	0x036A5518 LDR X20, [X20 + 0x230]
	0x036A551C MOV X19, X0
	0x036A5520 TBNZ X8, 0x0, 0x36A5550
	0x036A5524 ADRP X0, 0xA4F000
	0x036A5528 LDR X0, [X0 + 0x9F0]
	0x036A552C BL 0x1C16CF4
	0x036A5530 ADRP X0, 0xA7C000
	0x036A5534 LDR X0, [X0 + 0x230]
	0x036A5538 BL 0x1C16CF4
	0x036A553C ADRP X0, 0xA50000
	0x036A5540 LDR X0, [X0 + 0x570]
	0x036A5544 BL 0x1C16CF4
	0x036A5548 MOVZ W8, 0x1

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+128], X30
	003 Move [X31+144], X22
	004 Move [X31+152], X21
	005 Move [X31+160], X20
	006 Move [X31+168], X19
	007 Move X22, 0xD3C000
	008 Move X21, 0xA52000
	009 Move W8, [X22+2287]
	010 Move X21, [X21+640]
	011 Move X19, X1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0xA9A000
	018 Move X0, [X0+3072]
	019 Call 0x1C17CF4
	020 Move X0, 0xA52000
	021 Move X0, [X0+640]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X22+2287], W8
	025 Move X0, [X21]
	026 NotImplemented "Instruction MOVI not yet implemented."
	027 Move [X31+112], X31
	028 Move [X31+80], V0
	029 Move [X31+88], V0
	030 Move [X31+48], V0
	031 Move [X31+56], V0
	032 Move [X31+2], V0
	033 Move [X31+64], X20
	034 Move [X31+72], X19
	035 Move X19, 0xA9A000
	036 Move W8, [X0+224]
	037 Move X19, [X19+3072]
	038 Compare W8, 0
	039 JumpIfNotEqual {41}
	040 Call 0x1C17DFC
	041 Add X8, X31, 8
	042 Move X0, X31
	043 Call AsyncTaskMethodBuilder.Create
	044 NotImplemented "Instruction LDUR not yet implemented."
	045 Move X9, [X31+24]
	046 Move X2, [X19]
	047 Add X8, X31, 32
	048 Or X19, X8, 15
	049 Move TEMP, 0
	050 Not TEMP
	051 Move W10, TEMP
	052 Add X1, X31, 32
	053 Move X0, X19
	054 Move [X31+40], V0
	055 Move [X31+56], X9
	056 Move [X31+32], W10
	057 Call AsyncTaskMethodBuilder.Start, X0, X1
	058 Move X0, X19
	059 Move X1, X31
	060 Call AsyncTaskMethodBuilder.get_Task, X0
	061 Move X20, [X31+160]
	062 Move X19, [X31+168]
	063 Move X22, [X31+144]
	064 Move X21, [X31+152]
	065 Move X30, [X31+128]
	066 Add X31, X31, 176
	067 Return X0

Method: System.Void ThrowExpectingChunkTrailer()

Disassembly:
	0x036A554C STRB W8, [X21 + 0x8FA]
	0x036A5550 LDR X0, [X20]
	0x036A5554 LDR W8, [X0 + 0xE0]
	0x036A5558 CBNZ W8, 0x36A5560
	0x036A555C BL 0x1C16DFC
	0x036A5560 ADRP X21, 0xD3B000
	0x036A5564 LDRB W8, [X21 + 0x920]
	0x036A5568 CBNZ W8, 0x36A5580
	0x036A556C ADRP X0, 0xA7C000
	0x036A5570 LDR X0, [X0 + 0x230]
	0x036A5574 BL 0x1C16CF4
	0x036A5578 MOVZ W8, 0x1
	0x036A557C STRB W8, [X21 + 0x920]
	0x036A5580 LDR X0, [X20]
	0x036A5584 LDR W8, [X0 + 0xE0]
	0x036A5588 CBNZ W8, 0x36A5594
	0x036A558C BL 0x1C16DFC
	0x036A5590 LDR X0, [X20]
	0x036A5594 LDR X8, [X0 + 0xB8]
	0x036A5598 LDR W20, [X8 + 0x1C]
	0x036A559C ADDS W31, W20, 0x1
	0x036A55A0 B.EQ 0x36A5620

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0xA7A000
	004 Move X0, [X0+816]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X19, X0
	008 Move X0, 0xA9A000
	009 Move X0, [X0+3080]
	010 Call 0x1C17D08
	011 Move X1, X0
	012 Move W3, 11
	013 Move X0, X19
	014 Move X2, X31
	015 Move X4, X31
	016 Move X5, X31
	017 Call WebException..ctor, X0, X1, X2, X3, X4
	018 Move X0, 0xA9A000
	019 Move X0, [X0+3088]
	020 Call 0x1C17D08
	021 Move X1, X0
	022 Move X0, X19
	023 Call 0x1C17DEC

Method: System.Threading.Tasks.Task <>n__0(System.Threading.CancellationToken cancellationToken)

Disassembly:
	0x036A55A4 ADRP X8, 0xA50000
	0x036A55A8 LDR X8, [X8 + 0x570]

ISIL:
	001 Move X2, X31
	002 Call WebReadStream.FinishReading, X0, X1
	003 Return X0

