Type: System.Net.SocketAddress

Method: System.Net.Sockets.AddressFamily get_Family()

Disassembly:
	0x03680200 MOVZ W22, 0x4
	0x03680204 LDR W9, [X8 + 0x18]
	0x03680208 SUB X23, X22, 0x4
	0x0368020C CMP X23, W9, SXTW
	0x03680210 B.GE 0x36802A4
	0x03680214 CMP X23, X9
	0x03680218 B.CS 0x36802BC
	0x0368021C LDR X9, [X8, X22, LSL #3]
	0x03680220 CBZ X9, 0x3680298
	0x03680224 MOV X0, X19
	0x03680228 BL 0x36802C0
	0x0368022C LDR X8, [X21]

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+24]
	003 Compare X8, 0
	004 JumpIfEqual {13}
	005 Move W9, [X8+24]
	006 NotImplemented "Instruction CMP not yet implemented."
	007 Compare W9, 0
	008 JumpIfEqual {12}
	009 NotImplemented "Instruction LDRH not yet implemented."
	010 Move X30, [X31+16]
	011 Return X0
	012 Call 0x1C17F28
	013 Call 0x1C17F20

Method: System.Int32 get_Size()

Disassembly:
	0x03680230 MOV X20, X0
	0x03680234 LDR W9, [X8 + 0xE0]

ISIL:
	001 Move W0, [X0+16]
	002 Return X0

Method: System.Byte get_Item(System.Int32 offset)

Disassembly:
	0x03680238 CBNZ W9, 0x3680248
	0x0368023C MOV X0, X8
	0x03680240 BL 0x1C16DFC
	0x03680244 LDR X8, [X21]
	0x03680248 LDR X8, [X8 + 0xB8]
	0x0368024C LDR X8, [X8 + 0x8]
	0x03680250 CBZ X8, 0x36802A0
	0x03680254 LDR W9, [X8 + 0x18]
	0x03680258 CMP X23, X9
	0x0368025C B.CS 0x36802BC
	0x03680260 LDR X9, [X19 + 0x68]
	0x03680264 CBZ X9, 0x36802A0
	0x03680268 LDR W10, [X9 + 0x18]
	0x0368026C CMP X23, X10
	0x03680270 B.CS 0x36802BC
	0x03680274 CBZ X20, 0x36802A0
	0x03680278 LDR X10, [X20]
	0x0368027C LDR X1, [X8, X22, LSL #3]
	0x03680280 LDR X2, [X9, X22, LSL #3]
	0x03680284 MOV X0, X20
	0x03680288 LDR X8, [X10 + 0x248]
	0x0368028C LDR X3, [X10 + 0x250]
	0x03680290 BLR X8
	0x03680294 LDR X8, [X19 + 0x68]
	0x03680298 ADD X22, X22, 0x1
	0x0368029C CBNZ X8, 0x3680204
	0x036802A0 BL 0x1C16F20
	0x036802A4 STR X31, [X19 + 0x68]
	0x036802A8 STR W31, [X19 + 0x70]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move TEMP, X1
	004 And TEMP, TEMP, -2147483648
	005 Compare TEMP, -2147483648
	006 JumpIfEqual {19}
	007 Move W8, [X0+16]
	008 NotImplemented "Instruction CMP not yet implemented."
	009 Move X8, [X0+24]
	010 Compare X8, 0
	011 JumpIfEqual {32}
	012 Move W9, [X8+24]
	013 NotImplemented "Instruction CMP not yet implemented."
	014 Add X8, X8, W1
	015 Move W0, [X8+32]
	016 Move X30, [X31+16]
	017 Move X19, [X31+24]
	018 Return X0
	019 Move X0, 0xA7E000
	020 Move X0, [X0+3960]
	021 Call 0x1C17D08
	022 Call 0x1C17F10
	023 Move X1, X31
	024 Move X19, X0
	025 Call IndexOutOfRangeException..ctor, X0
	026 Move X0, 0xABE000
	027 Move X0, [X0+3808]
	028 Call 0x1C17D08
	029 Move X1, X0
	030 Move X0, X19
	031 Call 0x1C17DEC
	032 Call 0x1C17F20
	033 Call 0x1C17F28

Method: System.Void .ctor(System.Net.Sockets.AddressFamily family, System.Int32 size)

Disassembly:
	0x036802AC LDP X20, X19, [X31 + 0x20]
	0x036802B0 LDP X22, X21, [X31 + 0x10]
	0x036802B4 LDP X30, X23, [X31], #0x30
	0x036802B8 RET
	0x036802BC BL 0x1C16F28
	0x036802C0 STP X30, X21, [X31 - 0x20]!
	0x036802C4 STP X20, X19, [X31 + 0x10]
	0x036802C8 ADRP X20, 0xD60000
	0x036802CC LDRB W8, [X20 + 0x7E2]
	0x036802D0 MOV X19, X0
	0x036802D4 TBNZ X8, 0x0, 0x36802F8
	0x036802D8 ADRP X0, 0xABD000
	0x036802DC LDR X0, [X0 + 0xEC8]
	0x036802E0 BL 0x1C16CF4
	0x036802E4 ADRP X0, 0xABD000
	0x036802E8 LDR X0, [X0 + 0xF28]
	0x036802EC BL 0x1C16CF4
	0x036802F0 MOVZ W8, 0x1
	0x036802F4 STRB W8, [X20 + 0x7E2]
	0x036802F8 LDR X20, [X19 + 0x78]
	0x036802FC CBNZ X20, 0x368034C
	0x03680300 ADRP X20, 0xABD000
	0x03680304 LDR X20, [X20 + 0xEC8]
	0x03680308 LDR X0, [X20]
	0x0368030C LDR W8, [X0 + 0xE0]
	0x03680310 CBNZ W8, 0x368031C
	0x03680314 BL 0x1C16DFC
	0x03680318 LDR X0, [X20]
	0x0368031C ADRP X9, 0xABD000
	0x03680320 LDR X8, [X0 + 0xB8]
	0x03680324 LDR X9, [X9 + 0xF28]
	0x03680328 LDR X21, [X8]
	0x0368032C LDR X0, [X9]
	0x03680330 BL 0x1C16F10
	0x03680334 MOVZ W1, 0x10
	0x03680338 MOV X2, X21
	0x0368033C MOV X3, X31
	0x03680340 MOV X20, X0
	0x03680344 BL 0x3663988
	0x03680348 STR X20, [X19 + 0x78]
	0x0368034C MOV X0, X20
	0x03680350 LDP X20, X19, [X31 + 0x10]
	0x03680354 LDP X30, X21, [X31], #0x20
	0x03680358 RET
	0x0368035C STP X30, X21, [X31 - 0x20]!
	0x03680360 STP X20, X19, [X31 + 0x10]
	0x03680364 ADRP X21, 0xD60000
	0x03680368 ADRP X20, 0xABD000
	0x0368036C LDRB W8, [X21 + 0x7E3]
	0x03680370 LDR X20, [X20 + 0xDF8]
	0x03680374 MOV X19, X0
	0x03680378 TBNZ X8, 0x0, 0x368039C
	0x0368037C ADRP X0, 0xABD000
	0x03680380 LDR X0, [X0 + 0xDF8]
	0x03680384 BL 0x1C16CF4
	0x03680388 ADRP X0, 0xA73000
	0x0368038C LDR X0, [X0 + 0x988]
	0x03680390 BL 0x1C16CF4
	0x03680394 MOVZ W8, 0x1
	0x03680398 STRB W8, [X21 + 0x7E3]
	0x0368039C LDR X0, [X20]
	0x036803A0 LDR W8, [X0 + 0xE0]
	0x036803A4 CBNZ W8, 0x36803B0
	0x036803A8 BL 0x1C16DFC
	0x036803AC LDR X0, [X20]
	0x036803B0 LDR X8, [X0 + 0xB8]
	0x036803B4 LDR X8, [X8]
	0x036803B8 CBZ X8, 0x3680400
	0x036803BC MOV X1, X19
	0x036803C0 BL 0x3680404
	0x036803C4 CBZ X0, 0x3680400

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0xD61000
	008 Move W8, [X22+2007]
	009 Move W21, W2
	010 Move W19, W1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xA74000
	017 Move X0, [X0+1560]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+2007], W8
	021 Move W8, 1
	022 Move X0, X20
	023 Move X1, X31
	024 Move [X20+32], W8
	025 Call Object..ctor, X0
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move X23, 0xA74000
	028 Move X23, [X23+1560]
	029 Move X0, X31
	030 Move [X20+16], W21
	031 Call IntPtr.get_Size
	032 Move W22, W0
	033 Move X0, X31
	034 Call IntPtr.get_Size
	035 Move X8, [X23]
	036 NotImplemented "Instruction SDIV not yet implemented."
	037 Add W9, W9, 2
	038 Multiply W1, W9, W0
	039 Move X0, X8
	040 Call 0x1C17D6C
	041 Move [X20+24], X0
	042 Compare X0, 0
	043 JumpIfEqual {64}
	044 Move W8, [X0+24]
	045 Compare W8, 0
	046 JumpIfEqual {65}
	047 Move [X0+32], W19
	048 Move X8, [X20+24]
	049 Compare X8, 0
	050 JumpIfEqual {64}
	051 Move W9, [X8+24]
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Move W9, W19
	054 ShiftRight W9, 8
	055 And W9, W9, 0x7FFFFFFF
	056 Move X20, [X31+32]
	057 Move X19, [X31+40]
	058 Move X22, [X31+16]
	059 Move X21, [X31+24]
	060 Move [X8+33], W9
	061 Move X30, [X31+48]
	062 Move X23, [X31+56]
	063 Return 
	064 Call 0x1C17F20
	065 Call 0x1C17F28
	066 Move X0, 0xA7C000
	067 Move X0, [X0+1888]
	068 Call 0x1C17D08
	069 Call 0x1C17F10
	070 Move X19, X0
	071 Move X0, 0xA9F000
	072 Move X0, [X0+3984]
	073 Call 0x1C17D08
	074 Move X1, X0
	075 Move X0, X19
	076 Move X2, X31
	077 Call ArgumentOutOfRangeException..ctor, X0, X1
	078 Move X0, 0xABE000
	079 Move X0, [X0+3816]
	080 Call 0x1C17D08
	081 Move X1, X0
	082 Move X0, X19
	083 Call 0x1C17DEC

Method: System.Void .ctor(System.Net.IPAddress ipAddress)

Disassembly:
	0x036803C8 LDRB W8, [X0 + 0x28]
	0x036803CC CBZ W8, 0x36803E0
	0x036803D0 LDP X20, X19, [X31 + 0x10]
	0x036803D4 MOVZ W0, 0x1
	0x036803D8 LDP X30, X21, [X31], #0x20
	0x036803DC RET
	0x036803E0 ADRP X8, 0xA73000
	0x036803E4 LDR X0, [X0 + 0x20]
	0x036803E8 LDR X8, [X8 + 0x988]
	0x036803EC LDP X20, X19, [X31 + 0x10]
	0x036803F0 MOV X2, X31
	0x036803F4 LDR X1, [X8]
	0x036803F8 LDP X30, X21, [X31], #0x20
	0x036803FC B 0x321BA08
	0x03680400 BL 0x1C16F20
	0x03680404 STP X30, X21, [X31 - 0x20]!
	0x03680408 STP X20, X19, [X31 + 0x10]
	0x0368040C ADRP X21, 0xD60000
	0x03680410 ADRP X20, 0xABD000
	0x03680414 LDRB W8, [X21 + 0x812]
	0x03680418 LDR X20, [X20 + 0xF30]
	0x0368041C MOV X19, X1
	0x03680420 TBNZ X8, 0x0, 0x3680444
	0x03680424 ADRP X0, 0xABD000
	0x03680428 LDR X0, [X0 + 0xF30]
	0x0368042C BL 0x1C16CF4
	0x03680430 ADRP X0, 0xABD000
	0x03680434 LDR X0, [X0 + 0xF38]
	0x03680438 BL 0x1C16CF4
	0x0368043C MOVZ W8, 0x1
	0x03680440 STRB W8, [X21 + 0x812]
	0x03680444 LDR X0, [X20]
	0x03680448 LDR W8, [X0 + 0xE0]
	0x0368044C CBNZ W8, 0x3680458
	0x03680450 BL 0x1C16DFC
	0x03680454 LDR X0, [X20]
	0x03680458 LDR X8, [X0 + 0xB8]
	0x0368045C LDR X0, [X8]
	0x03680460 CBZ X0, 0x36804DC
	0x03680464 LDR X8, [X0]
	0x03680468 MOV X1, X19
	0x0368046C LDR X9, [X8 + 0x2D8]
	0x03680470 LDR X2, [X8 + 0x2E0]
	0x03680474 BLR X9
	0x03680478 CBZ X0, 0x36804B4
	0x0368047C ADRP X9, 0xABD000
	0x03680480 LDR X9, [X9 + 0xF38]
	0x03680484 LDR X8, [X0]
	0x03680488 LDR X1, [X9]
	0x0368048C LDRB W10, [X8 + 0x130]
	0x03680490 LDRB W9, [X1 + 0x130]
	0x03680494 CMP W10, W9
	0x03680498 B.CC 0x36804B0
	0x0368049C LDR X8, [X8 + 0xC8]
	0x036804A0 ADD X8, X8, X9, 0x3, LSL
	0x036804A4 LDUR X8, [X8 - 0x8]
	0x036804A8 CMP X8, X1
	0x036804AC B.EQ 0x36804D0
	0x036804B0 BL 0x1C171E0
	0x036804B4 LDR X0, [X20]
	0x036804B8 LDR W8, [X0 + 0xE0]
	0x036804BC CBNZ W8, 0x36804C8
	0x036804C0 BL 0x1C16DFC
	0x036804C4 LDR X0, [X20]
	0x036804C8 LDR X8, [X0 + 0xB8]
	0x036804CC LDR X0, [X8 + 0x8]
	0x036804D0 LDP X20, X19, [X31 + 0x10]
	0x036804D4 LDP X30, X21, [X31], #0x20
	0x036804D8 RET
	0x036804DC BL 0x1C16F20
	0x036804E0 LDRH W8, [X0 + 0x80]
	0x036804E4 CMP W8, 0x5
	0x036804E8 B.HI 0x3680514
	0x036804EC ADRP X9, 0xFFFFFFFFFD517000
	0x036804F0 ADD X9, X9, 0x799
	0x036804F4 ADR X10, 0x14
	0x036804F8 LDRB W11, [X9, X8, LSL]
	0x036804FC ADD X10, X10, X11, 0x2, LSL
	0x03680500 MOVZ W8, 0x1
	0x03680504 BR X10
	0x03680508 MOVZ W8, 0x1
	0x0368050C STRH W8, [X0 + 0x80]
	0x03680510 B 0x3680518
	0x03680514 MOV W8, W31
	0x03680518 MOV W0, W8
	0x0368051C RET
	0x03680520 STP X30, X21, [X31 - 0x20]!
	0x03680524 STP X20, X19, [X31 + 0x10]
	0x03680528 ADRP X21, 0xD60000
	0x0368052C LDRB W8, [X21 + 0x7E4]
	0x03680530 MOV W20, W1
	0x03680534 MOV X19, X0
	0x03680538 TBNZ X8, 0x0, 0x3680550
	0x0368053C ADRP X0, 0xABD000
	0x03680540 LDR X0, [X0 + 0xF40]
	0x03680544 BL 0x1C16CF4
	0x03680548 MOVZ W8, 0x1
	0x0368054C STRB W8, [X21 + 0x7E4]
	0x03680550 LDRH W8, [X19 + 0x80]
	0x03680554 CMP W8, 0x5
	0x03680558 B.HI 0x36805C0
	0x0368055C ADRP X9, 0xFFFFFFFFFD517000
	0x03680560 ADD X9, X9, 0x79F
	0x03680564 ADR X10, 0x10
	0x03680568 LDRB W11, [X9, X8, LSL]
	0x0368056C ADD X10, X10, X11, 0x2, LSL
	0x03680570 BR X10
	0x03680574 MOVZ W8, 0x1
	0x03680578 STRH W8, [X19 + 0x80]
	0x0368057C ADRP X8, 0xABD000
	0x03680580 LDR X8, [X8 + 0xF40]
	0x03680584 LDR X0, [X8]
	0x03680588 LDR W8, [X0 + 0xE0]
	0x0368058C CBNZ W8, 0x3680594
	0x03680590 BL 0x1C16DFC
	0x03680594 MOV W0, W20
	0x03680598 MOV X1, X31
	0x0368059C BL 0x3696050
	0x036805A0 LDR X8, [X19]
	0x036805A4 MOV X1, X0
	0x036805A8 MOV X0, X19
	0x036805AC LDP X20, X19, [X31 + 0x10]
	0x036805B0 LDR X3, [X8 + 0x288]
	0x036805B4 LDR X2, [X8 + 0x290]
	0x036805B8 LDP X30, X21, [X31], #0x20
	0x036805BC BR X3
	0x036805C0 ADRP X0, 0xABD000
	0x036805C4 LDR X0, [X0 + 0xF48]
	0x036805C8 BL 0x1C16D08
	0x036805CC MOV X1, X31
	0x036805D0 BL 0x320A1E4
	0x036805D4 MOV X19, X0
	0x036805D8 ADRP X0, 0xA73000
	0x036805DC LDR X0, [X0 + 0x5B0]
	0x036805E0 BL 0x1C16D08
	0x036805E4 BL 0x1C16F10
	0x036805E8 MOV X1, X19
	0x036805EC MOV X2, X31
	0x036805F0 MOV X20, X0
	0x036805F4 BL 0x337DF1C
	0x036805F8 ADRP X0, 0xABD000
	0x036805FC LDR X0, [X0 + 0xF50]
	0x03680600 BL 0x1C16D08
	0x03680604 MOV X1, X0
	0x03680608 MOV X0, X20
	0x0368060C BL 0x1C16DEC
	0x03680610 STP X30, X21, [X31 - 0x20]!
	0x03680614 STP X20, X19, [X31 + 0x10]
	0x03680618 MOV X19, X2
	0x0368061C MOV X20, X1
	0x03680620 MOV X21, X0
	0x03680624 BL 0x36801C0
	0x03680628 MOV X0, X21
	0x0368062C MOV X1, X31
	0x03680630 BL 0x3663ABC
	0x03680634 MOV X0, X21
	0x03680638 BL 0x36802C0
	0x0368063C CBZ X0, 0x3680660
	0x03680640 LDR X8, [X0]
	0x03680644 MOV X1, X20

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xD61000
	007 Move W8, [X21+2008]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xABE000
	015 Move X0, [X0+3824]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2008], W8
	019 Move [X31+12], W31
	020 Compare X19, 0
	021 JumpIfEqual {171}
	022 Move X0, X19
	023 Move X1, X31
	024 Call IPAddress.get_AddressFamily, X0
	025 Move W21, W0
	026 Move X0, X19
	027 Move X1, X31
	028 Call IPAddress.get_AddressFamily, X0
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move W8, 28
	031 Move W9, 16
	032 NotImplemented "Instruction CSEL not yet implemented."
	033 Move X0, X20
	034 Move W1, W21
	035 Call SocketAddress..ctor, X0, X1, X2
	036 Move X8, [X20+24]
	037 Compare X8, 0
	038 JumpIfEqual {171}
	039 Move W9, [X8+24]
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Move [X8+34], W31
	042 Move X8, [X20+24]
	043 Compare X8, 0
	044 JumpIfEqual {171}
	045 Move W9, [X8+24]
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Move X0, X19
	048 Move X1, X31
	049 Move [X8+35], W31
	050 Call IPAddress.get_AddressFamily, X0
	051 Move X21, [X20+24]
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Compare X21, 0
	054 JumpIfEqual {171}
	055 Move W8, [X21+24]
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Move [X21+36], W31
	058 Move X8, [X20+24]
	059 Compare X8, 0
	060 JumpIfEqual {171}
	061 Move W9, [X8+24]
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Move [X8+37], W31
	064 Move X8, [X20+24]
	065 Compare X8, 0
	066 JumpIfEqual {171}
	067 Move W9, [X8+24]
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Move [X8+38], W31
	070 Move X8, [X20+24]
	071 Compare X8, 0
	072 JumpIfEqual {171}
	073 Move W9, [X8+24]
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Move X0, X19
	076 Move X1, X31
	077 Move [X8+39], W31
	078 Call IPAddress.get_ScopeId, X0
	079 Move X8, [X20+24]
	080 Compare X8, 0
	081 JumpIfEqual {171}
	082 Move W9, [X8+24]
	083 NotImplemented "Instruction CMP not yet implemented."
	084 Move [X8+56], W0
	085 Move X8, [X20+24]
	086 Compare X8, 0
	087 JumpIfEqual {171}
	088 Move W9, [X8+24]
	089 NotImplemented "Instruction CMP not yet implemented."
	090 Move X9, X0
	091 ShiftRight X9, 8
	092 And X9, X9, 0x7FFFFFFF
	093 Move [X8+57], W9
	094 Move X8, [X20+24]
	095 Compare X8, 0
	096 JumpIfEqual {171}
	097 Move W9, [X8+24]
	098 NotImplemented "Instruction CMP not yet implemented."
	099 Move X9, X0
	100 ShiftRight X9, 16
	101 And X9, X9, 0x7FFFFFFF
	102 Move [X8+58], W9
	103 Move X8, [X20+24]
	104 Compare X8, 0
	105 JumpIfEqual {171}
	106 Move W9, [X8+24]
	107 NotImplemented "Instruction CMP not yet implemented."
	108 Move X9, X0
	109 ShiftRight X9, 24
	110 And X9, X9, 0x7FFFFFFF
	111 Move X0, X19
	112 Move X1, X31
	113 Move [X8+59], W9
	114 Call IPAddress.GetAddressBytes, X0
	115 Compare X0, 0
	116 JumpIfEqual {171}
	117 Move X8, [X0+24]
	118 NotImplemented "Instruction CMP not yet implemented."
	119 Move X10, X31
	120 And X12, X8, 0
	121 Add X8, X0, 32
	122 Move X9, 8
	123 Move X11, 1
	124 NotImplemented "Instruction CMP not yet implemented."
	125 Move X12, [X20+24]
	126 Compare X12, 0
	127 JumpIfEqual {171}
	128 Move W14, [X12+24]
	129 Add X13, X10, 8
	130 NotImplemented "Instruction CMP not yet implemented."
	131 Move W10, [X8]
	132 Add X12, X12, X9
	133 Add X9, X9, X11
	134 Move [X12+32], W10
	135 Move W12, [X0+24]
	136 Subtract X10, X13, 7
	137 NotImplemented "Instruction CMP not yet implemented."
	138 Move X8, 0xABE000
	139 Move X8, [X8+3824]
	140 Move X0, [X8]
	141 Move X8, [X0+56]
	142 Compare X8, 0
	143 JumpIfEqual {153}
	144 Compare X21, 0
	145 JumpIfEqual {156}
	146 Move X8, [X21+24]
	147 NotImplemented "Instruction CMP not yet implemented."
	148 Move X0, X31
	149 Call ThrowHelper.ThrowArgumentOutOfRangeException
	150 Move X8, [X21+24]
	151 Add X1, X21, 36
	152 Subtract W2, W8, 4
	153 Call 0x1C5D6E0
	154 Compare X21, 0
	155 JumpIfNotEqual {146}
	156 Move X0, X31
	157 Call ThrowHelper.ThrowArgumentOutOfRangeException
	158 Move X1, X31
	159 Move X2, X31
	160 Add X3, X31, 12
	161 Move X0, X19
	162 Move X4, X31
	163 Call IPAddress.TryWriteBytes, X0, X1, X2
	164 Move X20, [X31+32]
	165 Move X19, [X31+40]
	166 Move X30, [X31+16]
	167 Move X21, [X31+24]
	168 Add X31, X31, 48
	169 Return 
	170 Call 0x1C17F28
	171 Call 0x1C17F20

Method: System.Void .ctor(System.Net.IPAddress ipaddress, System.Int32 port)

Disassembly:
	0x03680648 MOV X2, X19
	0x0368064C LDP X20, X19, [X31 + 0x10]
	0x03680650 LDR X4, [X8 + 0x248]
	0x03680654 LDR X3, [X8 + 0x250]
	0x03680658 LDP X30, X21, [X31], #0x20
	0x0368065C BR X4
	0x03680660 BL 0x1C16F20
	0x03680664 STP X30, X21, [X31 - 0x20]!
	0x03680668 STP X20, X19, [X31 + 0x10]
	0x0368066C MOV X19, X2
	0x03680670 MOV X20, X1
	0x03680674 MOV X21, X0
	0x03680678 BL 0x36801C0
	0x0368067C MOV X0, X21
	0x03680680 MOV X1, X31
	0x03680684 BL 0x3663ABC
	0x03680688 MOV X0, X21
	0x0368068C BL 0x36802C0
	0x03680690 CBZ X0, 0x36806B4
	0x03680694 LDR X8, [X0]
	0x03680698 MOV X1, X20
	0x0368069C MOV X2, X19
	0x036806A0 LDP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W19, W2
	005 Move X20, X0
	006 Call SocketAddress..ctor, X0, X1
	007 Move X8, [X20+24]
	008 Compare X8, 0
	009 JumpIfEqual {26}
	010 Move W9, [X8+24]
	011 NotImplemented "Instruction CMP not yet implemented."
	012 Move W9, W19
	013 ShiftRight W9, 8
	014 And W9, W9, 0x7FFFFFFF
	015 Move [X8+34], W9
	016 Move X8, [X20+24]
	017 Compare X8, 0
	018 JumpIfEqual {26}
	019 Move W9, [X8+24]
	020 NotImplemented "Instruction CMP not yet implemented."
	021 Move [X8+35], W19
	022 Move X20, [X31+16]
	023 Move X19, [X31+24]
	024 Move X30, [X31+32]
	025 Return 
	026 Call 0x1C17F20
	027 Call 0x1C17F28

Method: System.Net.IPAddress GetIPAddress()

Disassembly:
	0x036806A4 LDR X4, [X8 + 0x278]
	0x036806A8 LDR X3, [X8 + 0x280]
	0x036806AC LDP X30, X21, [X31], #0x20
	0x036806B0 BR X4
	0x036806B4 BL 0x1C16F20
	0x036806B8 STR X30, [X31 - 0x20]!
	0x036806BC STP X20, X19, [X31 + 0x10]
	0x036806C0 MOV X19, X1
	0x036806C4 MOV X20, X0
	0x036806C8 BL 0x36801C0
	0x036806CC LDR X8, [X20 + 0x78]
	0x036806D0 CBZ X8, 0x3680704
	0x036806D4 MOV X0, X20
	0x036806D8 MOV X1, X31
	0x036806DC BL 0x3663ABC
	0x036806E0 LDR X0, [X20 + 0x78]
	0x036806E4 CBZ X0, 0x3680710
	0x036806E8 LDR X8, [X0]
	0x036806EC MOV X1, X19
	0x036806F0 LDP X20, X19, [X31 + 0x10]
	0x036806F4 LDR X3, [X8 + 0x288]
	0x036806F8 LDR X2, [X8 + 0x290]
	0x036806FC LDR X30, [X31], #0x20
	0x03680700 BR X3
	0x03680704 LDP X20, X19, [X31 + 0x10]
	0x03680708 LDR X30, [X31], #0x20
	0x0368070C RET
	0x03680710 BL 0x1C16F20
	0x03680714 STP X30, X21, [X31 - 0x20]!
	0x03680718 STP X20, X19, [X31 + 0x10]
	0x0368071C ADRP X21, 0xD60000
	0x03680720 LDRB W8, [X21 + 0x7E5]
	0x03680724 MOV W20, W1
	0x03680728 MOV X19, X0
	0x0368072C TBNZ X8, 0x0, 0x368075C
	0x03680730 ADRP X0, 0xA75000
	0x03680734 LDR X0, [X0 + 0x278]
	0x03680738 BL 0x1C16CF4
	0x0368073C ADRP X0, 0xABD000
	0x03680740 LDR X0, [X0 + 0xE28]
	0x03680744 BL 0x1C16CF4
	0x03680748 ADRP X0, 0xABD000
	0x0368074C LDR X0, [X0 + 0xDF8]
	0x03680750 BL 0x1C16CF4
	0x03680754 MOVZ W8, 0x1
	0x03680758 STRB W8, [X21 + 0x7E5]
	0x0368075C CBZ X19, 0x3680858
	0x03680760 LDR W8, [X19 + 0x10]
	0x03680764 CBZ W8, 0x36808A4
	0x03680768 TBZ X20, 0x0, 0x36808C0
	0x0368076C ADRP X20, 0xABD000
	0x03680770 LDR X20, [X20 + 0xDF8]
	0x03680774 LDR X0, [X20]
	0x03680778 LDR W8, [X0 + 0xE0]
	0x0368077C CBNZ W8, 0x3680788
	0x03680780 BL 0x1C16DFC
	0x03680784 LDR X0, [X20]
	0x03680788 LDR X8, [X0 + 0xB8]
	0x0368078C MOV X0, X19
	0x03680790 MOV X2, X31
	0x03680794 LDR X1, [X8 + 0x18]
	0x03680798 BL 0x322BBA0
	0x0368079C CBZ X0, 0x36809C8
	0x036807A0 LDR W8, [X0 + 0x10]
	0x036807A4 MOV X19, X0
	0x036807A8 CMP W8, 0x1
	0x036807AC B.LT 0x3680928
	0x036807B0 MOV W20, W31
	0x036807B4 MOV W21, W31
	0x036807B8 MOV X0, X19
	0x036807BC MOV W1, W20
	0x036807C0 MOV X2, X31
	0x036807C4 BL 0x3222A1C
	0x036807C8 CMP W21, 0x2
	0x036807CC AND W8, W0, 0xFF
	0x036807D0 B.EQ 0x3680824
	0x036807D4 CMP W21, 0x1
	0x036807D8 B.EQ 0x3680814
	0x036807DC CBNZ W21, 0x3680840
	0x036807E0 AND W9, W0, 0xFF
	0x036807E4 CMP W9, 0xA
	0x036807E8 B.EQ 0x368081C
	0x036807EC CMP W9, 0xD
	0x036807F0 B.EQ 0x368083C
	0x036807F4 CMP W9, 0x7F
	0x036807F8 B.EQ 0x368094C
	0x036807FC CMP W8, 0x1F
	0x03680800 MOV W21, W31
	0x03680804 B.HI 0x3680840
	0x03680808 CMP W8, 0x9
	0x0368080C B.EQ 0x3680840
	0x03680810 B 0x368094C
	0x03680814 CMP W8, 0xA
	0x03680818 B.NE 0x3680940
	0x0368081C MOVZ W21, 0x2
	0x03680820 B 0x3680840
	0x03680824 CMP W8, 0x9
	0x03680828 MOV W21, W31
	0x0368082C B.EQ 0x3680840
	0x03680830 CMP W8, 0x20
	0x03680834 B.EQ 0x3680840
	0x03680838 B 0x3680940
	0x0368083C MOVZ W21, 0x1
	0x03680840 LDR W8, [X19 + 0x10]
	0x03680844 ADD W20, W20, 0x1
	0x03680848 CMP W20, W8
	0x0368084C B.LT 0x36807B8
	0x03680850 CBZ W21, 0x3680930
	0x03680854 B 0x3680940
	0x03680858 TBNZ X20, 0x0, 0x36808A8
	0x0368085C ADRP X0, 0xA78000
	0x03680860 LDR X0, [X0 + 0x528]
	0x03680864 BL 0x1C16D08
	0x03680868 BL 0x1C16F10
	0x0368086C MOV X19, X0
	0x03680870 ADRP X0, 0xA7B000
	0x03680874 LDR X0, [X0 + 0x588]
	0x03680878 BL 0x1C16D08
	0x0368087C MOV X1, X0
	0x03680880 MOV X0, X19
	0x03680884 MOV X2, X31
	0x03680888 BL 0x330E100
	0x0368088C ADRP X0, 0xABD000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0xD61000
	008 Move W8, [X20+2009]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0xA74000
	015 Move X0, [X0+1560]
	016 Call 0x1C17CF4
	017 Move X0, 0xA81000
	018 Move X0, [X0+2408]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X20+2009], W8
	022 Move X0, X19
	023 Call SocketAddress.get_Family, X0
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move X8, 0xA74000
	026 Move X8, [X8+1560]
	027 Move W1, 16
	028 Move X0, [X8]
	029 Call 0x1C17D6C
	030 Compare X0, 0
	031 JumpIfEqual {55}
	032 Move X8, [X19+24]
	033 Compare X8, 0
	034 JumpIfEqual {55}
	035 Move X20, X0
	036 Move X10, X31
	037 Add X9, X0, 32
	038 Move X11, 8
	039 Move X12, 1
	040 Move W13, [X20+24]
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Move W15, [X8+24]
	043 Add X14, X10, 8
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Subtract X14, X14, 8
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Add X8, X8, X11
	048 Move W8, [X8+32]
	049 Add X11, X11, X12
	050 Move [X9], W8
	051 Move X8, [X19+24]
	052 Add X10, X14, 1
	053 Compare X8, 0
	054 JumpIfNotEqual {40}
	055 Call 0x1C17F20
	056 Move X0, X19
	057 Call SocketAddress.get_Family, X0
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Move X8, [X19+24]
	060 Compare X8, 0
	061 JumpIfEqual {55}
	062 Move W9, [X8+24]
	063 NotImplemented "Instruction CMP not yet implemented."
	064 NotImplemented "Instruction CMP not yet implemented."
	065 NotImplemented "Instruction CMP not yet implemented."
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Move W19, [X8+36]
	068 Move W21, [X8+37]
	069 Move W22, [X8+38]
	070 Move W23, [X8+39]
	071 Move X8, 0xA81000
	072 Move X8, [X8+2408]
	073 Move X0, [X8]
	074 Call 0x1C17F10
	075 NotImplemented "Instruction BFM not yet implemented."
	076 NotImplemented "Instruction BFM not yet implemented."
	077 NotImplemented "Instruction BFM not yet implemented."
	078 Move X1, X19
	079 Move X2, X31
	080 Move X20, X0
	081 Call IPAddress..ctor, X0, X1
	082 Move X0, X20
	083 Move W9, [X8+24]
	084 NotImplemented "Instruction CMP not yet implemented."
	085 Move X12, 0xA81000
	086 Move W9, [X8+58]
	087 Move W10, [X8+59]
	088 Move W11, [X8+57]
	089 Move W8, [X8+56]
	090 Move X12, [X12+2408]
	091 Move W10, W10
	092 ShiftRight W10, 8
	093 And W10, W10, 127
	094 Move X10, W10
	095 NotImplemented "Instruction BFM not yet implemented."
	096 Move X0, [X12]
	097 NotImplemented "Instruction BFM not yet implemented."
	098 Or X19, X10, X8
	099 Call 0x1C17F10
	100 Move X1, X20
	101 Move X2, X19
	102 Move X3, X31
	103 Move X21, X0
	104 Call IPAddress..ctor, X0, X1, X2
	105 Move X0, X21
	106 Move X20, [X31+32]
	107 Move X19, [X31+40]
	108 Move X22, [X31+16]
	109 Move X21, [X31+24]
	110 Move X30, [X31+48]
	111 Move X23, [X31+56]
	112 Return X0
	113 Call 0x1C17F28
	114 Move X0, 0xAB2000
	115 Move X0, [X0+216]
	116 Call 0x1C17D08
	117 Call 0x1C17F10
	118 Move W1, 0x273F
	119 Move X2, X31
	120 Move X19, X0
	121 Call SocketException..ctor, X0, X1
	122 Move X0, 0xABE000
	123 Move X0, [X0+3832]
	124 Call 0x1C17D08
	125 Move X1, X0
	126 Move X0, X19
	127 Call 0x1C17DEC

Method: System.Net.IPEndPoint GetIPEndPoint()

Disassembly:
	0x03680890 LDR X0, [X0 + 0xF58]
	0x03680894 BL 0x1C16D08
	0x03680898 MOV X1, X0
	0x0368089C MOV X0, X19
	0x036808A0 BL 0x1C16DEC
	0x036808A4 TBZ X20, 0x0, 0x36809B0
	0x036808A8 ADRP X8, 0xA75000
	0x036808AC LDR X8, [X8 + 0x278]
	0x036808B0 LDR X8, [X8]
	0x036808B4 LDR X8, [X8 + 0xB8]
	0x036808B8 LDR X19, [X8]
	0x036808BC B 0x3680930
	0x036808C0 ADRP X20, 0xABD000
	0x036808C4 LDR X20, [X20 + 0xE28]
	0x036808C8 LDR X0, [X20]
	0x036808CC LDR W8, [X0 + 0xE0]
	0x036808D0 CBNZ W8, 0x36808DC
	0x036808D4 BL 0x1C16DFC
	0x036808D8 LDR X0, [X20]
	0x036808DC LDR X8, [X0 + 0xB8]
	0x036808E0 MOV X0, X19
	0x036808E4 MOV X2, X31
	0x036808E8 LDR X1, [X8 + 0x10]
	0x036808EC BL 0x322BE8C
	0x036808F0 ADDS W31, W0, 0x1
	0x036808F4 B.NE 0x36809CC
	0x036808F8 ADRP X8, 0xABD000
	0x036808FC LDR X8, [X8 + 0xDF8]
	0x03680900 LDR X0, [X8]
	0x03680904 LDR W8, [X0 + 0xE0]
	0x03680908 CBNZ W8, 0x3680910
	0x0368090C BL 0x1C16DFC
	0x03680910 MOV X0, X19
	0x03680914 BL 0x3680AA4
	0x03680918 TBZ X0, 0x0, 0x3680930
	0x0368091C ADRP X0, 0xABD000
	0x03680920 LDR X0, [X0 + 0xF60]
	0x03680924 B 0x36809D4
	0x03680928 MOV W21, W31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xD61000
	006 Move W8, [X20+2010]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xA81000
	013 Move X0, [X0+3000]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+2010], W8
	017 Move X0, X19
	018 Call SocketAddress.GetIPAddress, X0
	019 Move X8, [X19+24]
	020 Compare X8, 0
	021 JumpIfEqual {47}
	022 Move W9, [X8+24]
	023 NotImplemented "Instruction CMP not yet implemented."
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move X9, 0xA81000
	026 NotImplemented "Instruction LDRH not yet implemented."
	027 Move X9, [X9+3000]
	028 Move X19, X0
	029 Move W8, W8
	030 ShiftRight W8, 16
	031 And W8, W8, 0x7FFF
	032 Move X0, [X9]
	033 NotImplemented "Instruction REV not yet implemented."
	034 Call 0x1C17F10
	035 Move X1, X19
	036 Move W2, W20
	037 Move X3, X31
	038 Move X21, X0
	039 Call IPEndPoint..ctor, X0, X1, X2
	040 Move X20, [X31+16]
	041 Move X19, [X31+24]
	042 Move X0, X21
	043 Move X30, [X31+32]
	044 Move X21, [X31+40]
	045 Return X0
	046 Call 0x1C17F28
	047 Call 0x1C17F20

Method: System.Boolean Equals(System.Object comparand)

Disassembly:
	0x0368092C CBNZ W21, 0x3680940
	0x03680930 MOV X0, X19
	0x03680934 LDP X20, X19, [X31 + 0x10]
	0x03680938 LDP X30, X21, [X31], #0x20
	0x0368093C RET
	0x03680940 ADRP X0, 0xABD000
	0x03680944 LDR X0, [X0 + 0xF68]
	0x03680948 B 0x3680954
	0x0368094C ADRP X0, 0xABD000
	0x03680950 LDR X0, [X0 + 0xF70]
	0x03680954 BL 0x1C16D08
	0x03680958 MOV X1, X31
	0x0368095C BL 0x320A1E4
	0x03680960 MOV X19, X0
	0x03680964 ADRP X0, 0xA7B000
	0x03680968 LDR X0, [X0 + 0x578]
	0x0368096C BL 0x1C16D08
	0x03680970 BL 0x1C16F10
	0x03680974 MOV X20, X0
	0x03680978 ADRP X0, 0xA7D000
	0x0368097C LDR X0, [X0 + 0xEC8]
	0x03680980 BL 0x1C16D08
	0x03680984 MOV X2, X0
	0x03680988 MOV X0, X20
	0x0368098C MOV X1, X19
	0x03680990 MOV X3, X31
	0x03680994 BL 0x330E16C
	0x03680998 ADRP X0, 0xABD000
	0x0368099C LDR X0, [X0 + 0xF58]
	0x036809A0 BL 0x1C16D08
	0x036809A4 MOV X1, X0
	0x036809A8 MOV X0, X20
	0x036809AC BL 0x1C16DEC
	0x036809B0 ADRP X0, 0xA73000
	0x036809B4 LDR X0, [X0 + 0x9D0]
	0x036809B8 BL 0x1C16D08
	0x036809BC MOVZ W1, 0x1
	0x036809C0 BL 0x1C16D6C
	0x036809C4 CBNZ X0, 0x3680A04
	0x036809C8 BL 0x1C16F20
	0x036809CC ADRP X0, 0xABD000
	0x036809D0 LDR X0, [X0 + 0xF78]
	0x036809D4 BL 0x1C16D08
	0x036809D8 MOV X1, X31
	0x036809DC BL 0x320A1E4
	0x036809E0 MOV X19, X0
	0x036809E4 ADRP X0, 0xA7B000
	0x036809E8 LDR X0, [X0 + 0x578]
	0x036809EC BL 0x1C16D08
	0x036809F0 BL 0x1C16F10
	0x036809F4 MOV X20, X0
	0x036809F8 ADRP X0, 0xA7B000
	0x036809FC LDR X0, [X0 + 0x588]
	0x03680A00 B 0x3680980
	0x03680A04 MOV X19, X0
	0x03680A08 ADRP X0, 0xA7B000
	0x03680A0C LDR X0, [X0 + 0x588]
	0x03680A10 BL 0x1C16D08
	0x03680A14 CBZ X0, 0x3680A34

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xD61000
	007 Move W8, [X21+2011]
	008 Move X20, X1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xABE000
	015 Move X0, [X0+2024]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2011], W8
	019 Compare X20, 0
	020 JumpIfEqual {52}
	021 Move X8, 0xABE000
	022 Move X8, [X8+2024]
	023 Move X9, [X20]
	024 Move X8, [X8]
	025 Move W11, [X9+304]
	026 Move W10, [X8+304]
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Move X9, [X9+200]
	029 Add X9, X9, X10
	030 NotImplemented "Instruction LDUR not yet implemented."
	031 NotImplemented "Instruction CMP not yet implemented."
	032 NotImplemented "Instruction CSEL not yet implemented."
	033 Compare X20, 0
	034 JumpIfEqual {60}
	035 Move W8, [X19+16]
	036 Move W9, [X20+16]
	037 NotImplemented "Instruction CMP not yet implemented."
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Move W21, W31
	040 Move X0, X19
	041 Move W1, W21
	042 Call SocketAddress.get_Item, X0, X1
	043 And W22, W0, 255
	044 Move X0, X20
	045 Move W1, W21
	046 Call SocketAddress.get_Item, X0, X1
	047 NotImplemented "Instruction CMP not yet implemented."
	048 NotImplemented "Instruction CSET not yet implemented."
	049 Move W8, [X19+16]
	050 Add W21, W21, 1
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Move W0, W31
	053 Move X20, [X31+32]
	054 Move X19, [X31+40]
	055 Move X22, [X31+16]
	056 Move X21, [X31+24]
	057 Move X30, [X31+48]
	058 Return X0
	059 Move W0, 1
	060 Call 0x1C17F20

Method: System.Int32 GetHashCode()

Disassembly:
	0x03680A18 LDR X8, [X19]
	0x03680A1C LDR X1, [X8 + 0x40]
	0x03680A20 BL 0x1C16E00
	0x03680A24 CBNZ X0, 0x3680A34
	0x03680A28 BL 0x1C16F44
	0x03680A2C MOV X1, X31
	0x03680A30 BL 0x1C16DEC
	0x03680A34 ADRP X0, 0xA7B000
	0x03680A38 LDR X0, [X0 + 0x588]
	0x03680A3C BL 0x1C16D08
	0x03680A40 LDR W8, [X19 + 0x18]
	0x03680A44 CBNZ W8, 0x3680A4C
	0x03680A48 BL 0x1C16F28
	0x03680A4C STR X0, [X19 + 0x20]
	0x03680A50 ADRP X0, 0xABD000
	0x03680A54 LDR X0, [X0 + 0xF80]
	0x03680A58 BL 0x1C16D08
	0x03680A5C MOV X1, X19
	0x03680A60 MOV X2, X31
	0x03680A64 BL 0x320A16C
	0x03680A68 MOV X20, X0
	0x03680A6C ADRP X0, 0xA7B000
	0x03680A70 LDR X0, [X0 + 0x578]
	0x03680A74 BL 0x1C16D08
	0x03680A78 BL 0x1C16F10
	0x03680A7C MOV X19, X0
	0x03680A80 ADRP X0, 0xA7B000
	0x03680A84 LDR X0, [X0 + 0x588]
	0x03680A88 BL 0x1C16D08
	0x03680A8C MOV X2, X0
	0x03680A90 MOV X0, X19
	0x03680A94 MOV X1, X20
	0x03680A98 MOV X3, X31
	0x03680A9C BL 0x330E16C
	0x03680AA0 B 0x368088C
	0x03680AA4 STR X30, [X31 - 0x20]!
	0x03680AA8 STP X20, X19, [X31 + 0x10]
	0x03680AAC CBZ X0, 0x3680B24
	0x03680AB0 LDR W8, [X0 + 0x10]
	0x03680AB4 MOV X19, X0
	0x03680AB8 CMP W8, 0x1
	0x03680ABC B.LT 0x3680B0C
	0x03680AC0 MOV W20, W31
	0x03680AC4 MOV X0, X19
	0x03680AC8 MOV W1, W20
	0x03680ACC MOV X2, X31
	0x03680AD0 BL 0x3222A1C
	0x03680AD4 AND W8, W0, 0xFFFF
	0x03680AD8 CMP W8, 0x20
	0x03680ADC B.CC 0x3680B14
	0x03680AE0 MOV X0, X19
	0x03680AE4 MOV W1, W20
	0x03680AE8 MOV X2, X31
	0x03680AEC BL 0x3222A1C
	0x03680AF0 AND W8, W0, 0xFFFF
	0x03680AF4 CMP W8, 0x7F
	0x03680AF8 B.CS 0x3680B14
	0x03680AFC LDR W8, [X19 + 0x10]
	0x03680B00 ADD W20, W20, 0x1
	0x03680B04 CMP W20, W8
	0x03680B08 B.LT 0x3680AC4
	0x03680B0C MOV W0, W31
	0x03680B10 B 0x3680B18
	0x03680B14 MOVZ W0, 0x1
	0x03680B18 LDP X20, X19, [X31 + 0x10]
	0x03680B1C LDR X30, [X31], #0x20
	0x03680B20 RET
	0x03680B24 BL 0x1C16F20
	0x03680B28 STP X30, X21, [X31 - 0x20]!
	0x03680B2C STP X20, X19, [X31 + 0x10]
	0x03680B30 ADRP X21, 0xD60000
	0x03680B34 LDRB W8, [X21 + 0x7E6]
	0x03680B38 MOV X19, X1
	0x03680B3C MOV X20, X0
	0x03680B40 TBNZ X8, 0x0, 0x3680B58
	0x03680B44 ADRP X0, 0xABD000

ISIL:
	001 Move [X31-16], X30
	002 Move W8, [X0+32]
	003 Compare W8, 0
	004 JumpIfEqual {38}
	005 Move W9, [X0+16]
	006 Move [X0+32], W31
	007 Move [X0+36], W31
	008 And X10, X9, 0xFFFFFFFF
	009 NotImplemented "Instruction CMP not yet implemented."
	010 Move X11, [X0+24]
	011 Compare X11, 0
	012 JumpIfEqual {66}
	013 Move W12, [X11+24]
	014 Move W8, W31
	015 Move X14, X31
	016 NotImplemented "Instruction CMP not yet implemented."
	017 Move X13, X14
	018 Add X14, X14, 1
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Add X14, X14, 1
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Add X14, X14, 1
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Add X15, X11, X13
	025 Add X16, X11, X13
	026 Move W17, [X15+32]
	027 Move W15, [X15+33]
	028 Move W1, [X16+34]
	029 Move W16, [X16+35]
	030 Add X14, X14, 1
	031 NotImplemented "Instruction BFM not yet implemented."
	032 NotImplemented "Instruction BFM not yet implemented."
	033 NotImplemented "Instruction BFM not yet implemented."
	034 Xor W8, W17, W8
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move [X0+36], W8
	037 Add X13, X13, 4
	038 Move W8, [X0+36]
	039 Move W8, W31
	040 Move W13, W31
	041 And W31, W9, 3
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X14, [X0+24]
	044 Compare X14, 0
	045 JumpIfEqual {66}
	046 Move W12, [X14+24]
	047 Move W10, W31
	048 Move W11, W31
	049 Move W13, W13
	050 Add X14, X14, 32
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Move W15, [X14]
	053 And W16, W11, 24
	054 Add X13, X13, 1
	055 NotImplemented "Instruction CMP not yet implemented."
	056 NotImplemented "Instruction LSLV not yet implemented."
	057 Or W10, W15, W10
	058 Add W11, W11, 8
	059 Move W10, W31
	060 Xor W8, W8, W10
	061 Move [X0+36], W8
	062 Move W0, W8
	063 Move X30, [X31+16]
	064 Return X0
	065 Call 0x1C17F28
	066 Call 0x1C17F20

Method: System.String ToString()

Disassembly:
	0x03680B48 LDR X0, [X0 + 0xDF8]
	0x03680B4C BL 0x1C16CF4
	0x03680B50 MOVZ W8, 0x1
	0x03680B54 STRB W8, [X21 + 0x7E6]
	0x03680B58 LDRH W8, [X20 + 0x80]
	0x03680B5C CMP W8, 0x6
	0x03680B60 B.EQ 0x3680BB4
	0x03680B64 CMP W8, 0x3
	0x03680B68 B.NE 0x3680BA8
	0x03680B6C ADRP X20, 0xABD000
	0x03680B70 LDR X20, [X20 + 0xDF8]
	0x03680B74 LDR X0, [X20]
	0x03680B78 LDR W8, [X0 + 0xE0]
	0x03680B7C CBNZ W8, 0x3680B88
	0x03680B80 BL 0x1C16DFC
	0x03680B84 LDR X0, [X20]
	0x03680B88 LDR X8, [X0 + 0xB8]
	0x03680B8C LDR X8, [X8]
	0x03680B90 CBZ X8, 0x3680C90
	0x03680B94 MOV X1, X19
	0x03680B98 BL 0x3680404
	0x03680B9C CBZ X0, 0x3680C90
	0x03680BA0 LDRB W8, [X0 + 0x10]
	0x03680BA4 CBNZ W8, 0x3680BF0
	0x03680BA8 LDP X20, X19, [X31 + 0x10]
	0x03680BAC LDP X30, X21, [X31], #0x20
	0x03680BB0 RET
	0x03680BB4 ADRP X20, 0xABD000
	0x03680BB8 LDR X20, [X20 + 0xDF8]
	0x03680BBC LDR X0, [X20]
	0x03680BC0 LDR W8, [X0 + 0xE0]
	0x03680BC4 CBNZ W8, 0x3680BD0
	0x03680BC8 BL 0x1C16DFC
	0x03680BCC LDR X0, [X20]
	0x03680BD0 LDR X8, [X0 + 0xB8]
	0x03680BD4 LDR X8, [X8]
	0x03680BD8 CBZ X8, 0x3680C90
	0x03680BDC MOV X1, X19
	0x03680BE0 BL 0x3680404
	0x03680BE4 CBZ X0, 0x3680C90
	0x03680BE8 LDRB W8, [X0 + 0x11]
	0x03680BEC CBZ W8, 0x3680BA8
	0x03680BF0 ADRP X0, 0xA73000
	0x03680BF4 LDR X0, [X0 + 0x9D0]
	0x03680BF8 BL 0x1C16D08
	0x03680BFC MOVZ W1, 0x1
	0x03680C00 BL 0x1C16D6C
	0x03680C04 MOV X20, X0
	0x03680C08 BL 0x19903C0
	0x03680C0C MOV X0, X20
	0x03680C10 MOV X1, X19
	0x03680C14 BL 0x19980B4
	0x03680C18 MOV X0, X20
	0x03680C1C MOV X1, X31
	0x03680C20 MOV X2, X19
	0x03680C24 BL 0x1993444
	0x03680C28 ADRP X0, 0xABD000
	0x03680C2C LDR X0, [X0 + 0xF88]
	0x03680C30 BL 0x1C16D08
	0x03680C34 MOV X1, X20
	0x03680C38 MOV X2, X31
	0x03680C3C BL 0x320A16C
	0x03680C40 MOV X19, X0
	0x03680C44 ADRP X0, 0xA7B000
	0x03680C48 LDR X0, [X0 + 0x578]
	0x03680C4C BL 0x1C16D08
	0x03680C50 BL 0x1C16F10
	0x03680C54 MOV X20, X0
	0x03680C58 ADRP X0, 0xA7B000
	0x03680C5C LDR X0, [X0 + 0x588]
	0x03680C60 BL 0x1C16D08
	0x03680C64 MOV X2, X0
	0x03680C68 MOV X0, X20
	0x03680C6C MOV X1, X19
	0x03680C70 MOV X3, X31
	0x03680C74 BL 0x330E16C
	0x03680C78 ADRP X0, 0xABD000
	0x03680C7C LDR X0, [X0 + 0xF90]
	0x03680C80 BL 0x1C16D08
	0x03680C84 MOV X1, X0
	0x03680C88 MOV X0, X20
	0x03680C8C BL 0x1C16DEC
	0x03680C90 BL 0x1C16F20
	0x03680C94 SUB X31, X31, 0x40
	0x03680C98 STP X30, X23, [X31 + 0x10]
	0x03680C9C STP X22, X21, [X31 + 0x20]
	0x03680CA0 STP X20, X19, [X31 + 0x30]
	0x03680CA4 ADRP X22, 0xD60000
	0x03680CA8 ADRP X23, 0xABD000
	0x03680CAC LDRB W8, [X22 + 0x7E7]
	0x03680CB0 LDR X23, [X23 + 0xDF8]
	0x03680CB4 MOV X19, X2
	0x03680CB8 MOV X21, X1
	0x03680CBC MOV X20, X0
	0x03680CC0 TBNZ X8, 0x0, 0x3680CD8
	0x03680CC4 ADRP X0, 0xABD000
	0x03680CC8 LDR X0, [X0 + 0xDF8]
	0x03680CCC BL 0x1C16CF4
	0x03680CD0 MOVZ W8, 0x1
	0x03680CD4 STRB W8, [X22 + 0x7E7]
	0x03680CD8 LDR X0, [X23]
	0x03680CDC LDR W8, [X0 + 0xE0]
	0x03680CE0 CBNZ W8, 0x3680CE8
	0x03680CE4 BL 0x1C16DFC
	0x03680CE8 MOV X0, X21
	0x03680CEC MOV W1, W31
	0x03680CF0 BL 0x3680714
	0x03680CF4 MOV X21, X0
	0x03680CF8 MOV X0, X20
	0x03680CFC MOV X1, X21
	0x03680D00 BL 0x3680B28
	0x03680D04 MOVZ W1, 0x1
	0x03680D08 MOV X0, X19
	0x03680D0C BL 0x3680714
	0x03680D10 MOV X19, X0
	0x03680D14 CBZ X0, 0x3680D30
	0x03680D18 LDRH W8, [X20 + 0x80]
	0x03680D1C CMP W8, 0x6
	0x03680D20 B.NE 0x3680D30
	0x03680D24 LDR W8, [X19 + 0x10]
	0x03680D28 CMP W8, 0x10000
	0x03680D2C B.GE 0x3680D7C
	0x03680D30 MOV X0, X20
	0x03680D34 BL 0x36801C0
	0x03680D38 MOV X0, X20
	0x03680D3C MOV X1, X31
	0x03680D40 BL 0x3663ABC
	0x03680D44 MOV X0, X20
	0x03680D48 BL 0x36802C0
	0x03680D4C CBZ X0, 0x3680D78
	0x03680D50 LDR X8, [X0]
	0x03680D54 MOV X1, X21
	0x03680D58 MOV X2, X19
	0x03680D5C LDP X20, X19, [X31 + 0x30]
	0x03680D60 LDR X4, [X8 + 0x248]
	0x03680D64 LDR X3, [X8 + 0x250]
	0x03680D68 LDP X22, X21, [X31 + 0x20]
	0x03680D6C LDP X30, X23, [X31 + 0x10]
	0x03680D70 ADD X31, X31, 0x40
	0x03680D74 BR X4
	0x03680D78 BL 0x1C16F20
	0x03680D7C ADRP X0, 0xA73000

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+48], X22
	004 Move [X31+56], X21
	005 Move [X31+64], X20
	006 Move [X31+72], X19
	007 Move X21, 0xD61000
	008 Move X20, 0xA74000
	009 Move W8, [X21+2012]
	010 Move X20, [X20+2288]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {39}
	016 Move X0, 0xAB4000
	017 Move X0, [X0+3024]
	018 Call 0x1C17CF4
	019 Move X0, 0xA74000
	020 Move X0, [X0+2288]
	021 Call 0x1C17CF4
	022 Move X0, 0xA74000
	023 Move X0, [X0+2760]
	024 Call 0x1C17CF4
	025 Move X0, 0xA7F000
	026 Move X0, [X0+1752]
	027 Call 0x1C17CF4
	028 Move X0, 0xABE000
	029 Move X0, [X0+3840]
	030 Call 0x1C17CF4
	031 Move X0, 0xA7D000
	032 Move X0, [X0+2440]
	033 Call 0x1C17CF4
	034 Move X0, 0xA76000
	035 Move X0, [X0+928]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X21+2012], W8
	039 Move X0, [X20]
	040 Move [X31+44], W31
	041 Move [X31+40], W31
	042 Call 0x1C17F10
	043 Move X1, X31
	044 Move X20, X0
	045 Call StringBuilder..ctor, X0
	046 Move W8, [X19+16]
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Move X22, 0xA76000
	049 Move X22, [X22+928]
	050 Move W21, 2
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Compare X20, 0
	053 JumpIfEqual {149}
	054 Move X1, [X22]
	055 Move X0, X20
	056 Move X2, X31
	057 Call StringBuilder.Append, X0, X1
	058 Move X0, X19
	059 Move W1, W21
	060 Call SocketAddress.get_Item, X0, X1
	061 Move [X31+44], W0
	062 Move X0, X31
	063 Call NumberFormatInfo.get_InvariantInfo
	064 Move X1, X0
	065 Add X0, X31, 44
	066 Move X2, X31
	067 Call Byte.ToString, X0, X1
	068 Compare X20, 0
	069 JumpIfEqual {149}
	070 Move X1, X0
	071 Move X0, X20
	072 Move X2, X31
	073 Call StringBuilder.Append, X0, X1
	074 Move W8, [X19+16]
	075 Add W21, W21, 1
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Move X8, 0xA74000
	078 Move X8, [X8+2760]
	079 Move X22, 0xAB4000
	080 Move W1, 6
	081 Move X0, [X8]
	082 Move X22, [X22+3024]
	083 Call 0x1C17D6C
	084 Move X21, X0
	085 Move X0, X19
	086 Call SocketAddress.get_Family, X0
	087 Move X8, [X22]
	088 Move TEMP, 0
	089 Not TEMP
	090 Move X9, TEMP
	091 Move [X31+24], W0
	092 Add X0, X31, 8
	093 Move X1, X31
	094 Move [X31+8], X8
	095 Move [X31+16], X9
	096 Call Enum.ToString, X0
	097 Compare X21, 0
	098 JumpIfEqual {149}
	099 Move W8, [X21+24]
	100 Compare W8, 0
	101 JumpIfEqual {150}
	102 NotImplemented "Instruction CMP not yet implemented."
	103 Move [X21+32], X0
	104 Move X8, 0xA7D000
	105 Move X8, [X8+2440]
	106 Move X0, X31
	107 Move X8, [X8]
	108 Move [X21+40], X8
	109 Move W8, [X19+16]
	110 Move [X31+40], W8
	111 Call NumberFormatInfo.get_InvariantInfo
	112 Move X1, X0
	113 Add X0, X31, 40
	114 Move X2, X31
	115 Call Int32.ToString, X0, X1
	116 Move W8, [X21+24]
	117 NotImplemented "Instruction CMP not yet implemented."
	118 NotImplemented "Instruction CMP not yet implemented."
	119 Move [X21+48], X0
	120 Move X8, 0xABE000
	121 Move X8, [X8+3840]
	122 Move X8, [X8]
	123 Move [X21+56], X8
	124 Compare X20, 0
	125 JumpIfEqual {149}
	126 Move X8, [X20]
	127 Move X0, X20
	128 Move X9, [X8+360]
	129 Move X1, [X8+368]
	130 NotImplemented "Instruction BLR not yet implemented."
	131 Move W8, [X21+24]
	132 NotImplemented "Instruction CMP not yet implemented."
	133 NotImplemented "Instruction CMP not yet implemented."
	134 Move [X21+64], X0
	135 Move X8, 0xA7F000
	136 Move X8, [X8+1752]
	137 Move X0, X21
	138 Move X1, X31
	139 Move X8, [X8]
	140 Move [X21+72], X8
	141 Call String.Concat, X0
	142 Move X20, [X31+64]
	143 Move X19, [X31+72]
	144 Move X22, [X31+48]
	145 Move X21, [X31+56]
	146 Move X30, [X31+32]
	147 Add X31, X31, 80
	148 Return X0
	149 Call 0x1C17F20
	150 Call 0x1C17F28

