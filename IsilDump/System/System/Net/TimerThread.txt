Type: System.Net.TimerThread

Method: System.Void .cctor()

Disassembly:
	0x03688880 BL 0x1C16CF4
	0x03688884 MOVZ W8, 0x1
	0x03688888 STRB W8, [X23 + 0x824]
	0x0368888C LDR X0, [X19]
	0x03688890 LDR W23, [X21 + 0x10]
	0x03688894 LDR X24, [X21 + 0x20]
	0x03688898 BL 0x1C16F10
	0x0368889C MOV X1, X22
	0x036888A0 MOV X2, X20
	0x036888A4 MOV W3, W23
	0x036888A8 MOV X4, X24
	0x036888AC MOV X19, X0
	0x036888B0 BL 0x3688A1C
	0x036888B4 LDR X20, [X21 + 0x20]
	0x036888B8 STRB W31, [X31 + 0xC]
	0x036888BC ADD X1, X31, 0xC
	0x036888C0 MOV X0, X20
	0x036888C4 MOV X2, X31
	0x036888C8 BL 0x33DE64C
	0x036888CC LDR X8, [X21 + 0x20]
	0x036888D0 CBZ X8, 0x3688998
	0x036888D4 LDR X9, [X8 + 0x38]
	0x036888D8 CMP X9, X8
	0x036888DC B.EQ 0x3688960
	0x036888E0 MOV W23, W31
	0x036888E4 CBZ X19, 0x368898C
	0x036888E8 LDR X8, [X21 + 0x20]
	0x036888EC STR X8, [X19 + 0x38]
	0x036888F0 CBZ X8, 0x368899C
	0x036888F4 LDR X9, [X8 + 0x40]
	0x036888F8 STR X9, [X19 + 0x40]
	0x036888FC LDR X9, [X8 + 0x40]
	0x03688900 CBZ X9, 0x36889A0
	0x03688904 MOV X21, X31
	0x03688908 STR X19, [X9 + 0x38]
	0x0368890C STR X19, [X8 + 0x40]
	0x03688910 LDRB W8, [X31 + 0xC]
	0x03688914 CBZ W8, 0x3688924
	0x03688918 MOV X0, X20
	0x0368891C MOV X1, X31
	0x03688920 BL 0x33E14E4
	0x03688924 CBNZ X21, 0x3688990
	0x03688928 TBZ X23, 0x0, 0x3688948
	0x0368892C ADRP X8, 0xAB5000
	0x03688930 LDR X8, [X8 + 0xD38]
	0x03688934 LDR X0, [X8]
	0x03688938 LDR W8, [X0 + 0xE0]
	0x0368893C CBNZ W8, 0x3688944
	0x03688940 BL 0x1C16DFC
	0x03688944 BL 0x3687BA4
	0x03688948 MOV X0, X19
	0x0368894C LDP X20, X19, [X31 + 0x30]
	0x03688950 LDP X22, X21, [X31 + 0x20]
	0x03688954 LDP X24, X23, [X31 + 0x10]
	0x03688958 LDR X30, [X31], #0x40
	0x0368895C RET
	0x03688960 LDR X0, [X21 + 0x18]
	0x03688964 MOV X1, X31
	0x03688968 MOV X2, X31
	0x0368896C BL 0x33BE5B0
	0x03688970 TBZ X0, 0x0, 0x3688984
	0x03688974 MOV X0, X21
	0x03688978 MOV X1, X31
	0x0368897C BL 0x32C0774
	0x03688980 STR X0, [X21 + 0x18]
	0x03688984 MOVZ W23, 0x1
	0x03688988 CBNZ X19, 0x36888E8
	0x0368898C BL 0x1C16F20
	0x03688990 MOV X0, X21
	0x03688994 BL 0x1C16F18
	0x03688998 BL 0x1C16F20
	0x0368899C BL 0x1C16F20
	0x036889A0 BL 0x1C16F20
	0x036889A4 B 0x36889C0
	0x036889A8 B 0x36889C0
	0x036889AC B 0x36889B4
	0x036889B0 B 0x36889B4
	0x036889B4 MOV X22, X0
	0x036889B8 B 0x36889C8
	0x036889BC B 0x36889C0
	0x036889C0 MOV X22, X0
	0x036889C4 MOV W23, W31
	0x036889C8 CMP W1, 0x1
	0x036889CC B.NE 0x36889E4
	0x036889D0 MOV X0, X22
	0x036889D4 BL 0x3EB1AD0
	0x036889D8 LDR X21, [X0]
	0x036889DC BL 0x3EB1AE0
	0x036889E0 B 0x3688910
	0x036889E4 MOV X21, X31
	0x036889E8 B 0x36889F0
	0x036889EC MOV X22, X0
	0x036889F0 LDRB W8, [X31 + 0xC]
	0x036889F4 CBZ W8, 0x3688A04
	0x036889F8 MOV X0, X20
	0x036889FC MOV X1, X31
	0x03688A00 BL 0x33E14E4
	0x03688A04 CBNZ X21, 0x3688A10
	0x03688A08 MOV X0, X22
	0x03688A0C BL 0x1D2C690
	0x03688A10 MOV X0, X21
	0x03688A14 BL 0x1C16F18
	0x03688A18 BL 0x1990590
	0x03688A1C STP X30, X23, [X31 - 0x30]!
	0x03688A20 STP X22, X21, [X31 + 0x10]
	0x03688A24 STP X20, X19, [X31 + 0x20]
	0x03688A28 MOV X22, X1
	0x03688A2C MOV X1, X31
	0x03688A30 MOV X19, X4
	0x03688A34 MOV W23, W3
	0x03688A38 MOV X21, X2
	0x03688A3C MOV X20, X0
	0x03688A40 BL 0x33BDD8C
	0x03688A44 MOV X0, X31
	0x03688A48 STR W23, [X20 + 0x14]
	0x03688A4C BL 0x33C18F4
	0x03688A50 STR W0, [X20 + 0x10]
	0x03688A54 CBZ X22, 0x3688A5C
	0x03688A58 STP X22, X21, [X20 + 0x20]
	0x03688A5C STR W31, [X20 + 0x18]
	0x03688A60 STR X19, [X20 + 0x30]
	0x03688A64 LDP X20, X19, [X31 + 0x20]
	0x03688A68 LDP X22, X21, [X31 + 0x10]
	0x03688A6C LDP X30, X23, [X31], #0x30
	0x03688A70 RET
	0x03688A74 STR X30, [X31 - 0x40]!
	0x03688A78 STP X24, X23, [X31 + 0x10]
	0x03688A7C STP X22, X21, [X31 + 0x20]
	0x03688A80 STP X20, X19, [X31 + 0x30]
	0x03688A84 ADRP X20, 0xD58000
	0x03688A88 LDRB W8, [X20 + 0x826]
	0x03688A8C MOV X19, X0
	0x03688A90 TBNZ X8, 0x0, 0x3688AA8
	0x03688A94 ADRP X0, 0xAB5000
	0x03688A98 LDR X0, [X0 + 0xD38]
	0x03688A9C BL 0x1C16CF4
	0x03688AA0 MOVZ W8, 0x1
	0x03688AA4 STRB W8, [X20 + 0x826]
	0x03688AA8 LDR W8, [X19 + 0x18]
	0x03688AAC CBZ W8, 0x3688AB8
	0x03688AB0 MOVZ W8, 0x1
	0x03688AB4 B 0x3688BD0
	0x03688AB8 MOV X0, X31
	0x03688ABC BL 0x33C18F4
	0x03688AC0 ADRP X8, 0xAB5000
	0x03688AC4 LDR X8, [X8 + 0xD38]
	0x03688AC8 MOV W20, W0
	0x03688ACC LDR X0, [X8]
	0x03688AD0 LDP W21, W8, [X19 + 0x10]
	0x03688AD4 LDR W9, [X0 + 0xE0]
	0x03688AD8 ADD W22, W8, W21
	0x03688ADC CBNZ W9, 0x3688AE4
	0x03688AE0 BL 0x1C16DFC
	0x03688AE4 CMP W21, W20
	0x03688AE8 CSET W8, GT
	0x03688AEC CMP W22, W20
	0x03688AF0 CSET W9, LE

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X19, 0xD59000
	011 Move X26, 0xAB7000
	012 Move X25, 0xAB7000
	013 Move X21, 0xAB6000
	014 Move X24, 0xA98000
	015 Move X23, 0xA9D000
	016 Move X22, 0xA9C000
	017 Move X20, 0xAA6000
	018 Move X26, [X26+568]
	019 Move X25, [X25+576]
	020 Move W8, [X19+2076]
	021 Move X21, [X21+3384]
	022 Move X24, [X24+384]
	023 Move X23, [X23+1992]
	024 Move X22, [X22+3512]
	025 Move X20, [X20+1320]
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {59}
	030 Move X0, 0xA98000
	031 Move X0, [X0+384]
	032 Call 0x1C17CF4
	033 Move X0, 0xAA5000
	034 Move X0, [X0+1512]
	035 Call 0x1C17CF4
	036 Move X0, 0xA9C000
	037 Move X0, [X0+3512]
	038 Call 0x1C17CF4
	039 Move X0, 0xAB7000
	040 Move X0, [X0+576]
	041 Call 0x1C17CF4
	042 Move X0, 0xAB7000
	043 Move X0, [X0+568]
	044 Call 0x1C17CF4
	045 Move X0, 0xA9D000
	046 Move X0, [X0+1992]
	047 Call 0x1C17CF4
	048 Move X0, 0xAB7000
	049 Move X0, [X0+584]
	050 Call 0x1C17CF4
	051 Move X0, 0xAB6000
	052 Move X0, [X0+3384]
	053 Call 0x1C17CF4
	054 Move X0, 0xAA6000
	055 Move X0, [X0+1320]
	056 Call 0x1C17CF4
	057 Move W8, 1
	058 Move [X19+2076], W8
	059 Move X0, [X26]
	060 Call 0x1C17F10
	061 Move X1, [X25]
	062 Move X19, X0
	063 Call LinkedList`1<Object>..ctor, X0
	064 Move X8, [X21]
	065 Move X8, [X8+184]
	066 Move [X8], X19
	067 Move X0, [X26]
	068 Call 0x1C17F10
	069 Move X1, [X25]
	070 Move X19, X0
	071 Call LinkedList`1<Object>..ctor, X0
	072 Move X8, [X21]
	073 Move X8, [X8+184]
	074 Move [X8+8], X19
	075 Move [X8+16], W31
	076 Move X0, [X24]
	077 Call 0x1C17F10
	078 Move W1, W31
	079 Move X2, X31
	080 Move X19, X0
	081 Call AutoResetEvent..ctor, X0, X1
	082 Move X8, [X21]
	083 Move X8, [X8+184]
	084 Move [X8+24], X19
	085 Move X0, [X23]
	086 Call 0x1C17F10
	087 Move W1, W31
	088 Move X2, X31
	089 Move X19, X0
	090 Call ManualResetEvent..ctor, X0, X1
	091 Move X8, [X21]
	092 Move X8, [X8+184]
	093 Move [X8+32], X19
	094 Move X0, [X22]
	095 Call 0x1C17F10
	096 Move X1, X31
	097 Move X19, X0
	098 Call Hashtable..ctor, X0
	099 Move X8, [X21]
	100 Move W1, 2
	101 Move X8, [X8+184]
	102 Move [X8+56], X19
	103 Move X0, [X20]
	104 Call 0x1C17D6C
	105 Compare X0, 0
	106 JumpIfEqual {172}
	107 Move X8, [X21]
	108 Move X19, X0
	109 Move X8, [X8+184]
	110 Move X20, [X8+32]
	111 Compare X20, 0
	112 JumpIfEqual {119}
	113 Move X8, [X19]
	114 Move X0, X20
	115 Move X1, [X8+64]
	116 Call 0x1C17E00
	117 Compare X0, 0
	118 JumpIfEqual {173}
	119 Move W8, [X19+24]
	120 Compare W8, 0
	121 JumpIfEqual {171}
	122 Move [X19+32], X20
	123 Move X9, [X21]
	124 Move X9, [X9+184]
	125 Move X20, [X9+24]
	126 Compare X20, 0
	127 JumpIfEqual {135}
	128 Move X8, [X19]
	129 Move X0, X20
	130 Move X1, [X8+64]
	131 Call 0x1C17E00
	132 Compare X0, 0
	133 JumpIfEqual {173}
	134 Move W8, [X19+24]
	135 NotImplemented "Instruction CMP not yet implemented."
	136 Move [X19+40], X20
	137 Move X8, [X21]
	138 Move X20, 0xAA5000
	139 Move X21, 0xAB7000
	140 Move X0, X31
	141 Move X8, [X8+184]
	142 Move X20, [X20+1512]
	143 Move X21, [X21+584]
	144 Move [X8+40], X19
	145 Call AppDomain.get_CurrentDomain
	146 Move X8, [X20]
	147 Move X19, X0
	148 Move X0, X8
	149 Call 0x1C17F10
	150 Move X2, [X21]
	151 Move X1, X31
	152 Move X3, X31
	153 Move X20, X0
	154 Call EventHandler..ctor, X0, X1, X2
	155 Compare X19, 0
	156 JumpIfEqual {172}
	157 Move X0, X19
	158 Move X1, X20
	159 Move X20, [X31+64]
	160 Move X19, [X31+72]
	161 Move X22, [X31+48]
	162 Move X21, [X31+56]
	163 Move X24, [X31+32]
	164 Move X23, [X31+40]
	165 Move X26, [X31+16]
	166 Move X25, [X31+24]
	167 Move X2, X31
	168 Move X30, [X31+80]
	169 Call AppDomain.add_DomainUnload, X0, X1
	170 Return 
	171 Call 0x1C17F28
	172 Call 0x1C17F20
	173 Call 0x1C17F44
	174 Move X1, X31
	175 Call 0x1C17DEC

Method: System.Net.TimerThread/Queue CreateQueue(System.Int32 durationMilliseconds)

Disassembly:
	0x03685304 MOV W23, W31
	0x03685308 MOV W22, W31
	0x0368530C MOV X0, X20
	0x03685310 MOV W1, W22
	0x03685314 MOV X2, X31
	0x03685318 BL 0x3222A1C
	0x0368531C AND W8, W0, 0xFFFF
	0x03685320 CMP W8, 0x22
	0x03685324 B.NE 0x3685330
	0x03685328 EOR W24, W24, 0x1
	0x0368532C B 0x3685354
	0x03685330 MOV X0, X20
	0x03685334 MOV W1, W22
	0x03685338 MOV X2, X31
	0x0368533C BL 0x3222A1C
	0x03685340 AND W8, W0, 0xFFFF
	0x03685344 CMP W8, 0x2C
	0x03685348 CSET W8, NE
	0x0368534C ORR W8, W24, W8, 0x0
	0x03685350 TBZ X8, 0x0, 0x3685384
	0x03685354 MOV X0, X20
	0x03685358 MOV W1, W22
	0x0368535C MOV X2, X31
	0x03685360 BL 0x3222A1C
	0x03685364 CBZ X21, 0x368546C
	0x03685368 LDR W8, [X21 + 0x18]
	0x0368536C CMP W23, W8
	0x03685370 B.CS 0x3685470
	0x03685374 ADD X8, X21, W23, 0x1, SXTW
	0x03685378 ADD W23, W23, 0x1
	0x0368537C STRH W0, [X8 + 0x20]
	0x03685380 B 0x36853C4
	0x03685384 MOV X0, X31
	0x03685388 MOV X1, X21
	0x0368538C MOV W2, W31
	0x03685390 MOV W3, W23
	0x03685394 MOV X4, X31
	0x03685398 BL 0x322EAE4
	0x0368539C CBZ X0, 0x368546C
	0x036853A0 MOV X1, X31
	0x036853A4 BL 0x322B8DC
	0x036853A8 CBZ X19, 0x368546C
	0x036853AC MOV X1, X0
	0x036853B0 MOV X0, X19
	0x036853B4 MOV X2, X31
	0x036853B8 BL 0x36649EC
	0x036853BC MOV W23, W31
	0x036853C0 MOV W24, W31
	0x036853C4 LDR W8, [X20 + 0x10]
	0x036853C8 ADD W22, W22, 0x1
	0x036853CC CMP W22, W8
	0x036853D0 B.LT 0x368530C
	0x036853D4 CBZ W23, 0x3685414
	0x036853D8 MOV X0, X31
	0x036853DC MOV X1, X21
	0x036853E0 MOV W2, W31
	0x036853E4 MOV W3, W23
	0x036853E8 MOV X4, X31
	0x036853EC BL 0x322EAE4
	0x036853F0 CBZ X0, 0x368546C
	0x036853F4 MOV X1, X31
	0x036853F8 BL 0x322B8DC
	0x036853FC CBZ X19, 0x368546C
	0x03685400 MOV X1, X0
	0x03685404 MOV X0, X19
	0x03685408 MOV X2, X31
	0x0368540C BL 0x36649EC
	0x03685410 B 0x3685418
	0x03685414 CBZ X19, 0x368546C
	0x03685418 ADRP X20, 0xA6E000
	0x0368541C LDR X20, [X20 + 0xAC8]
	0x03685420 MOV X0, X19
	0x03685424 MOV X1, X31
	0x03685428 BL 0x36649B8
	0x0368542C LDR X8, [X20]
	0x03685430 MOV W1, W0
	0x03685434 MOV X0, X8
	0x03685438 BL 0x1C16D6C
	0x0368543C MOV X20, X0
	0x03685440 MOV X0, X19
	0x03685444 MOV X1, X20
	0x03685448 MOV W2, W31
	0x0368544C MOV X3, X31
	0x03685450 BL 0x3664A58
	0x03685454 MOV X0, X20
	0x03685458 LDP X20, X19, [X31 + 0x30]
	0x0368545C LDP X22, X21, [X31 + 0x20]
	0x03685460 LDP X24, X23, [X31 + 0x10]
	0x03685464 LDR X30, [X31], #0x40
	0x03685468 RET
	0x0368546C BL 0x1C16F20
	0x03685470 BL 0x1C16F28
	0x03685474 STR X30, [X31 - 0x60]!
	0x03685478 STP X28, X27, [X31 + 0x10]
	0x0368547C STP X26, X25, [X31 + 0x20]
	0x03685480 STP X24, X23, [X31 + 0x30]
	0x03685484 STP X22, X21, [X31 + 0x40]
	0x03685488 STP X20, X19, [X31 + 0x50]
	0x0368548C ADRP X19, 0xD5B000
	0x03685490 ADRP X27, 0xA70000
	0x03685494 ADRP X22, 0xAB8000
	0x03685498 ADRP X21, 0xAB8000
	0x0368549C ADRP X25, 0xAB9000
	0x036854A0 ADRP X26, 0xAB9000
	0x036854A4 ADRP X24, 0xAB9000
	0x036854A8 ADRP X23, 0xAB9000
	0x036854AC ADRP X20, 0xAB5000
	0x036854B0 LDR X27, [X27 + 0x278]
	0x036854B4 LDR X22, [X22 + 0xF30]
	0x036854B8 LDR X21, [X21 + 0xF38]
	0x036854BC LDRB W8, [X19 + 0x811]
	0x036854C0 LDR X25, [X25 + 0x1E0]
	0x036854C4 LDR X26, [X26 + 0x1E8]
	0x036854C8 LDR X24, [X24 + 0x1F0]
	0x036854CC LDR X23, [X23 + 0x1F8]
	0x036854D0 LDR X20, [X20 + 0xA68]
	0x036854D4 TBNZ X8, 0x0, 0x36857BC
	0x036854D8 ADRP X0, 0xAB8000
	0x036854DC LDR X0, [X0 + 0xEC8]
	0x036854E0 BL 0x1C16CF4
	0x036854E4 ADRP X0, 0xA9E000
	0x036854E8 LDR X0, [X0 + 0xDB8]
	0x036854EC BL 0x1C16CF4
	0x036854F0 ADRP X0, 0xAB9000
	0x036854F4 LDR X0, [X0 + 0x1F0]
	0x036854F8 BL 0x1C16CF4
	0x036854FC ADRP X0, 0xAB9000
	0x03685500 LDR X0, [X0 + 0x1E8]
	0x03685504 BL 0x1C16CF4
	0x03685508 ADRP X0, 0xAB8000
	0x0368550C LDR X0, [X0 + 0xF30]
	0x03685510 BL 0x1C16CF4
	0x03685514 ADRP X0, 0xAB9000
	0x03685518 LDR X0, [X0 + 0x1F8]
	0x0368551C BL 0x1C16CF4
	0x03685520 ADRP X0, 0xAB8000
	0x03685524 LDR X0, [X0 + 0xF38]
	0x03685528 BL 0x1C16CF4
	0x0368552C ADRP X0, 0xAB9000
	0x03685530 LDR X0, [X0 + 0x1E0]
	0x03685534 BL 0x1C16CF4
	0x03685538 ADRP X0, 0xA70000
	0x0368553C LDR X0, [X0 + 0x278]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, 0xD5C000
	007 Move W8, [X19+2077]
	008 Move W21, W0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {30}
	013 Move X0, 0xAB9000
	014 Move X0, [X0+3408]
	015 Call 0x1C17CF4
	016 Move X0, 0xAB9000
	017 Move X0, [X0+3416]
	018 Call 0x1C17CF4
	019 Move X0, 0xAB9000
	020 Move X0, [X0+3424]
	021 Call 0x1C17CF4
	022 Move X0, 0xAB9000
	023 Move X0, [X0+3384]
	024 Call 0x1C17CF4
	025 Move X0, 0xA9F000
	026 Move X0, [X0+3424]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X19+2077], W8
	030 Add W31, W21, 1
	031 Move TEMP, X21
	032 And TEMP, TEMP, -2147483648
	033 Compare TEMP, -2147483648
	034 JumpIfEqual {109}
	035 Move X22, 0xAB9000
	036 Move X22, [X22+3384]
	037 Move X0, [X22]
	038 Move W8, [X0+224]
	039 Compare W8, 0
	040 JumpIfNotEqual {43}
	041 Call 0x1C17DFC
	042 Move X0, [X22]
	043 Move X8, [X0+184]
	044 Move X19, [X8+8]
	045 Move [X31+12], W31
	046 Add X1, X31, 12
	047 Move X0, X19
	048 Move X2, X31
	049 Call Monitor.Enter, X0, X1
	050 Move X8, 0xAB9000
	051 Move X8, [X8+3424]
	052 Move X0, [X8]
	053 Call 0x1C17F10
	054 Move X20, X0
	055 Move W1, W21
	056 Call TimerQueue..ctor, X0, X1
	057 Move X8, 0xA9F000
	058 Move X8, [X8+3424]
	059 Move X0, [X8]
	060 Call 0x1C17F10
	061 Move X21, X0
	062 Move X1, X20
	063 Move X2, X31
	064 Call WeakReference..ctor, X0, X1
	065 Move X0, [X22]
	066 Move W8, [X0+224]
	067 Compare W8, 0
	068 JumpIfNotEqual {71}
	069 Call 0x1C17DFC
	070 Move X0, [X22]
	071 Move X8, [X0+184]
	072 Move X0, [X8+8]
	073 Compare X0, 0
	074 JumpIfEqual {129}
	075 Move X8, 0xAB9000
	076 Move X8, [X8+3416]
	077 Move X2, [X8]
	078 Move X1, X21
	079 Call LinkedList`1<Object>.AddLast, X0, X1
	080 Move X21, X31
	081 Move W22, 6
	082 Move W8, [X31+12]
	083 Compare W8, 0
	084 JumpIfEqual {88}
	085 Move X0, X19
	086 Move X1, X31
	087 Call Monitor.Exit, X0
	088 Compare X21, 0
	089 JumpIfNotEqual {127}
	090 NotImplemented "Instruction CMP not yet implemented."
	091 Move X8, 0xAB9000
	092 Move X8, [X8+3408]
	093 Move X0, [X8]
	094 Call 0x1C17F10
	095 Move X1, X31
	096 Move X20, X0
	097 Call Object..ctor, X0
	098 Move TEMP, 0
	099 Not TEMP
	100 Move W8, TEMP
	101 Move [X20+16], W8
	102 Move X0, X20
	103 Move X20, [X31+32]
	104 Move X19, [X31+40]
	105 Move X22, [X31+16]
	106 Move X21, [X31+24]
	107 Move X30, [X31+48]
	108 Return X0
	109 Move X0, 0xA77000
	110 Move X0, [X0+1888]
	111 Call 0x1C17D08
	112 Call 0x1C17F10
	113 Move X19, X0
	114 Move X0, 0xAB9000
	115 Move X0, [X0+3432]
	116 Call 0x1C17D08
	117 Move X1, X0
	118 Move X0, X19
	119 Move X2, X31
	120 Call ArgumentOutOfRangeException..ctor, X0, X1
	121 Move X0, 0xABA000
	122 Move X0, [X0+384]
	123 Call 0x1C17D08
	124 Move X1, X0
	125 Move X0, X19
	126 Call 0x1C17DEC
	127 Move X0, X21
	128 Call 0x1C17F18
	129 Call 0x1C17F20
	130 Move X22, X0
	131 Move X20, X31
	132 Move X22, X0
	133 NotImplemented "Instruction CMP not yet implemented."
	134 Move X0, X22
	135 Call 0x3EB2AD0
	136 Move X21, [X0]
	137 Call 0x3EB2AE0
	138 Move W22, W31
	139 Move X21, X31
	140 Move X22, X0
	141 Move W8, [X31+12]
	142 Compare W8, 0
	143 JumpIfEqual {147}
	144 Move X0, X19
	145 Move X1, X31
	146 Call Monitor.Exit, X0
	147 Compare X21, 0
	148 JumpIfNotEqual {151}
	149 Move X0, X22
	150 Call 0x1D2D690
	151 Move X0, X21
	152 Call 0x1C17F18
	153 Call 0x1991590

Method: System.Net.TimerThread/Queue GetOrCreateQueue(System.Int32 durationMilliseconds)

Disassembly:
	0x0367B75C B.CS 0x367B768
	0x0367B760 MOV X20, X31
	0x0367B764 B 0x367B77C
	0x0367B768 LDR X13, [X8 + 0xC8]
	0x0367B76C ADD X12, X13, X12, 0x3, LSL
	0x0367B770 LDUR X12, [X12 - 0x8]
	0x0367B774 CMP X12, X11
	0x0367B778 CSEL X20, X22, X31, EQ
	0x0367B77C LDR X10, [X10]
	0x0367B780 LDRB W11, [X10 + 0x130]
	0x0367B784 CMP W9, W11
	0x0367B788 B.CS 0x367B794
	0x0367B78C MOV X25, X31
	0x0367B790 B 0x367B7A8
	0x0367B794 LDR X8, [X8 + 0xC8]
	0x0367B798 ADD X8, X8, X11, 0x3, LSL
	0x0367B79C LDUR X8, [X8 - 0x8]
	0x0367B7A0 CMP X8, X10
	0x0367B7A4 CSEL X25, X22, X31, EQ
	0x0367B7A8 MOV X23, X24
	0x0367B7AC STR X20, [X31 + 0x10]
	0x0367B7B0 LDR X0, [X29]
	0x0367B7B4 CMP X22, 0x0
	0x0367B7B8 CSET W27, EQ
	0x0367B7BC LDR W8, [X0 + 0xE0]
	0x0367B7C0 CBNZ W8, 0x367B7C8
	0x0367B7C4 BL 0x1C16DFC
	0x0367B7C8 MOV X0, X31
	0x0367B7CC BL 0x366A368
	0x0367B7D0 TBZ X0, 0x0, 0x367B8F0
	0x0367B7D4 ADRP X8, 0xA78000
	0x0367B7D8 LDR X8, [X8 + 0x9D0]
	0x0367B7DC LDR X0, [X8]
	0x0367B7E0 MOVZ W1, 0x4
	0x0367B7E4 BL 0x1C16D6C
	0x0367B7E8 MOV X26, X0
	0x0367B7EC CBZ X0, 0x367BD58
	0x0367B7F0 CBZ X20, 0x367B808
	0x0367B7F4 LDR X8, [X26]
	0x0367B7F8 LDR X1, [X8 + 0x40]
	0x0367B7FC MOV X0, X20
	0x0367B800 BL 0x1C16E00
	0x0367B804 CBZ X0, 0x367BD6C
	0x0367B808 LDR W8, [X26 + 0x18]
	0x0367B80C CBZ W8, 0x367BD5C
	0x0367B810 STR X20, [X26 + 0x20]
	0x0367B814 CBZ X24, 0x367B830
	0x0367B818 LDR X8, [X26]
	0x0367B81C LDR X1, [X8 + 0x40]
	0x0367B820 MOV X0, X24
	0x0367B824 BL 0x1C16E00
	0x0367B828 CBZ X0, 0x367BD78
	0x0367B82C LDR W8, [X26 + 0x18]
	0x0367B830 CMP W8, 0x1
	0x0367B834 B.LS 0x367BD60
	0x0367B838 STR X24, [X26 + 0x28]
	0x0367B83C CBZ X25, 0x367B858
	0x0367B840 LDR X8, [X26]
	0x0367B844 LDR X1, [X8 + 0x40]
	0x0367B848 MOV X0, X25
	0x0367B84C BL 0x1C16E00
	0x0367B850 CBZ X0, 0x367BD84
	0x0367B854 LDR W8, [X26 + 0x18]
	0x0367B858 CMP W8, 0x2
	0x0367B85C B.LS 0x367BD64
	0x0367B860 STR X25, [X26 + 0x30]
	0x0367B864 ADRP X8, 0xA78000
	0x0367B868 LDR X8, [X8 + 0xB58]
	0x0367B86C STRB W27, [X31 + 0x18]
	0x0367B870 LDR X0, [X8]
	0x0367B874 ADD X1, X31, 0x18
	0x0367B878 BL 0x1C16E04
	0x0367B87C MOV X24, X0
	0x0367B880 CBZ X0, 0x367B898
	0x0367B884 LDR X8, [X26]
	0x0367B888 LDR X1, [X8 + 0x40]
	0x0367B88C MOV X0, X24
	0x0367B890 BL 0x1C16E00
	0x0367B894 CBZ X0, 0x367BD90
	0x0367B898 LDR W8, [X26 + 0x18]
	0x0367B89C CMP W8, 0x3
	0x0367B8A0 B.LS 0x367BD68
	0x0367B8A4 STR X24, [X26 + 0x38]
	0x0367B8A8 ADRP X8, 0xAC2000
	0x0367B8AC LDR X8, [X8 + 0xD90]
	0x0367B8B0 LDR X0, [X8]
	0x0367B8B4 MOV X1, X26
	0x0367B8B8 MOV X2, X31
	0x0367B8BC BL 0x32C2F6C
	0x0367B8C0 MOV X24, X0
	0x0367B8C4 LDR X0, [X29]
	0x0367B8C8 LDR W8, [X0 + 0xE0]
	0x0367B8CC CBNZ W8, 0x367B8D4
	0x0367B8D0 BL 0x1C16DFC
	0x0367B8D4 ADRP X8, 0xAC2000
	0x0367B8D8 LDR X8, [X8 + 0xDA0]
	0x0367B8DC LDR X2, [X8]
	0x0367B8E0 MOV X0, X19
	0x0367B8E4 MOV X1, X24
	0x0367B8E8 MOV X3, X31
	0x0367B8EC BL 0x366A3CC
	0x0367B8F0 ADRP X21, 0xAC2000
	0x0367B8F4 ADRP X24, 0xA78000
	0x0367B8F8 LDR X21, [X21 + 0xD98]
	0x0367B8FC LDR X24, [X24 + 0x7D0]
	0x0367B900 CBZ X25, 0x367B928
	0x0367B904 MOV X0, X19
	0x0367B908 MOV X1, X25
	0x0367B90C BL 0x3679E5C
	0x0367B910 TBZ X0, 0x0, 0x367BB64
	0x0367B914 MOV X0, X19
	0x0367B918 BL 0x3679818
	0x0367B91C MOV X23, X0
	0x0367B920 CBNZ X0, 0x367B92C
	0x0367B924 B 0x367BB70
	0x0367B928 CBZ X23, 0x367BBEC
	0x0367B92C LDR X26, [X19 + 0x20]
	0x0367B930 STRB W31, [X31 + 0x1C]
	0x0367B934 ADD X1, X31, 0x1C
	0x0367B938 MOV X0, X26
	0x0367B93C MOV X2, X31
	0x0367B940 BL 0x33DE64C
	0x0367B944 LDRB W8, [X19 + 0x89]
	0x0367B948 CBZ W8, 0x367B9F8
	0x0367B94C LDR X0, [X29]
	0x0367B950 LDR W8, [X0 + 0xE0]
	0x0367B954 CBNZ W8, 0x367B95C
	0x0367B958 BL 0x1C16DFC
	0x0367B95C MOV X0, X31
	0x0367B960 BL 0x366A368
	0x0367B964 TBZ X0, 0x0, 0x367B9E4
	0x0367B968 ADRP X8, 0xA78000
	0x0367B96C LDR X8, [X8 + 0x9D0]
	0x0367B970 LDR X0, [X8]
	0x0367B974 MOVZ W1, 0x1
	0x0367B978 BL 0x1C16D6C
	0x0367B97C MOV X25, X0
	0x0367B980 CBZ X0, 0x367BAB8
	0x0367B984 LDR X8, [X25]
	0x0367B988 LDR X1, [X8 + 0x40]
	0x0367B98C MOV X0, X23
	0x0367B990 BL 0x1C16E00
	0x0367B994 CBZ X0, 0x367BAC0
	0x0367B998 LDR W8, [X25 + 0x18]
	0x0367B99C CBZ W8, 0x367BAD0
	0x0367B9A0 STR X23, [X25 + 0x20]
	0x0367B9A4 LDR X0, [X21]
	0x0367B9A8 MOV X1, X25
	0x0367B9AC MOV X2, X31
	0x0367B9B0 BL 0x32C2F6C
	0x0367B9B4 MOV X25, X0
	0x0367B9B8 LDR X0, [X29]
	0x0367B9BC LDR W8, [X0 + 0xE0]
	0x0367B9C0 CBNZ W8, 0x367B9C8
	0x0367B9C4 BL 0x1C16DFC
	0x0367B9C8 ADRP X8, 0xAC2000
	0x0367B9CC LDR X8, [X8 + 0xDA0]
	0x0367B9D0 LDR X2, [X8]
	0x0367B9D4 MOV X0, X19
	0x0367B9D8 MOV X1, X25
	0x0367B9DC MOV X3, X31
	0x0367B9E0 BL 0x366A3CC
	0x0367B9E4 MOV X0, X23
	0x0367B9E8 BL 0x367B0B4
	0x0367B9EC MOV X27, X31
	0x0367B9F0 MOVZ W25, 0x8
	0x0367B9F4 B 0x367BA50
	0x0367B9F8 STR X23, [X19 + 0xB0]
	0x0367B9FC LDR X0, [X29]
	0x0367BA00 LDR W8, [X0 + 0xE0]
	0x0367BA04 CBNZ W8, 0x367BA0C
	0x0367BA08 BL 0x1C16DFC
	0x0367BA0C MOV X0, X31
	0x0367BA10 BL 0x366A368
	0x0367BA14 TBZ X0, 0x0, 0x367BA48
	0x0367BA18 LDR X0, [X29]
	0x0367BA1C LDR X25, [X19 + 0xB0]
	0x0367BA20 LDR W8, [X0 + 0xE0]
	0x0367BA24 CBNZ W8, 0x367BA2C
	0x0367BA28 BL 0x1C16DFC
	0x0367BA2C ADRP X8, 0xAC2000
	0x0367BA30 LDR X8, [X8 + 0xDA0]
	0x0367BA34 LDR X2, [X8]
	0x0367BA38 MOV X0, X19
	0x0367BA3C MOV X1, X25
	0x0367BA40 MOV X3, X31
	0x0367BA44 BL 0x366C16C
	0x0367BA48 MOV X27, X31
	0x0367BA4C MOVZ W25, 0xD
	0x0367BA50 LDRB W8, [X31 + 0x1C]
	0x0367BA54 CBZ W8, 0x367BA64
	0x0367BA58 MOV X0, X26
	0x0367BA5C MOV X1, X31
	0x0367BA60 BL 0x33E14E4
	0x0367BA64 CBNZ X27, 0x367BD50
	0x0367BA68 CMP W25, 0xD
	0x0367BA6C B.EQ 0x367BA74
	0x0367BA70 CBNZ W25, 0x367BB70
	0x0367BA74 MOVZ W1, 0x1
	0x0367BA78 MOV X0, X19
	0x0367BA7C BL 0x3679A48
	0x0367BA80 CBZ X0, 0x367BB70
	0x0367BA84 LDR X8, [X0]
	0x0367BA88 LDR X1, [X28]
	0x0367BA8C LDRB W10, [X8 + 0x130]
	0x0367BA90 LDRB W9, [X1 + 0x130]
	0x0367BA94 CMP W10, W9
	0x0367BA98 B.CC 0x367BAB0
	0x0367BA9C LDR X8, [X8 + 0xC8]
	0x0367BAA0 ADD X8, X8, X9, 0x3, LSL
	0x0367BAA4 LDUR X8, [X8 - 0x8]
	0x0367BAA8 CMP X8, X1
	0x0367BAAC B.EQ 0x367BB70
	0x0367BAB0 BL 0x1C171E0
	0x0367BAB4 B 0x367BE24
	0x0367BAB8 BL 0x1C16F20
	0x0367BABC B 0x367BE00
	0x0367BAC0 BL 0x1C16F44
	0x0367BAC4 MOV X1, X31
	0x0367BAC8 BL 0x1C16DEC
	0x0367BACC B 0x367BE00
	0x0367BAD0 BL 0x1C16F28
	0x0367BAD4 B 0x367BE00
	0x0367BAD8 B 0x367BAFC
	0x0367BADC B 0x367BAFC
	0x0367BAE0 B 0x367BAFC
	0x0367BAE4 B 0x367BAFC
	0x0367BAE8 B 0x367BAFC
	0x0367BAEC B 0x367BAFC
	0x0367BAF0 B 0x367BAFC
	0x0367BAF4 B 0x367BAFC
	0x0367BAF8 B 0x367BAFC
	0x0367BAFC MOV X8, X1
	0x0367BB00 MOV X25, X0
	0x0367BB04 CMP W8, 0x1
	0x0367BB08 STR X1, [X31 + 0x8]
	0x0367BB0C B.NE 0x367BD9C
	0x0367BB10 MOV X0, X25
	0x0367BB14 BL 0x3EB1AD0
	0x0367BB18 LDR X27, [X0]
	0x0367BB1C BL 0x3EB1AE0
	0x0367BB20 MOV W25, W31
	0x0367BB24 B 0x367BA50
	0x0367BB28 CMP W1, 0x1
	0x0367BB2C MOV X25, X0
	0x0367BB30 B.NE 0x367BEF8
	0x0367BB34 MOV X0, X25
	0x0367BB38 BL 0x3EB1AD0
	0x0367BB3C MOV X25, X0
	0x0367BB40 MOV X0, X24
	0x0367BB44 BL 0x1C16D08
	0x0367BB48 LDR X8, [X25]
	0x0367BB4C LDR X1, [X8]
	0x0367BB50 BL 0x1C17270
	0x0367BB54 TBZ X0, 0x0, 0x367BE00
	0x0367BB58 LDR X25, [X25]
	0x0367BB5C BL 0x3EB1AE0
	0x0367BB60 B 0x367B900
	0x0367BB64 MOV X0, X19
	0x0367BB68 MOV X1, X25
	0x0367BB6C BL 0x367A0E8
	0x0367BB70 MOV W1, W31
	0x0367BB74 MOV X20, X31
	0x0367BB78 MOV X0, X19
	0x0367BB7C BL 0x3677FE8
	0x0367BB80 LDR X0, [X29]
	0x0367BB84 LDR W8, [X0 + 0xE0]
	0x0367BB88 CBNZ W8, 0x367BB90
	0x0367BB8C BL 0x1C16DFC
	0x0367BB90 MOV X0, X31
	0x0367BB94 BL 0x366A368
	0x0367BB98 TBZ X0, 0x0, 0x367BBC8
	0x0367BB9C LDR X0, [X29]
	0x0367BBA0 LDR W8, [X0 + 0xE0]
	0x0367BBA4 CBNZ W8, 0x367BBAC
	0x0367BBA8 BL 0x1C16DFC
	0x0367BBAC ADRP X8, 0xAC2000
	0x0367BBB0 LDR X8, [X8 + 0xDA0]
	0x0367BBB4 MOV X0, X19
	0x0367BBB8 MOV X1, X31
	0x0367BBBC MOV X3, X31
	0x0367BBC0 LDR X2, [X8]
	0x0367BBC4 BL 0x366BDBC
	0x0367BBC8 CBNZ X20, 0x367BD48
	0x0367BBCC LDP X20, X19, [X31 + 0x70]
	0x0367BBD0 LDP X22, X21, [X31 + 0x60]
	0x0367BBD4 LDP X24, X23, [X31 + 0x50]
	0x0367BBD8 LDP X26, X25, [X31 + 0x40]
	0x0367BBDC LDP X28, X27, [X31 + 0x30]
	0x0367BBE0 LDP X29, X30, [X31 + 0x20]
	0x0367BBE4 ADD X31, X31, 0x80
	0x0367BBE8 RET
	0x0367BBEC CBZ X20, 0x367BC58
	0x0367BBF0 LDR X22, [X19 + 0x20]
	0x0367BBF4 STRB W31, [X31 + 0x1C]
	0x0367BBF8 ADD X1, X31, 0x1C
	0x0367BBFC MOV X0, X22
	0x0367BC00 MOV X2, X31
	0x0367BC04 BL 0x33DE64C
	0x0367BC08 LDRB W8, [X19 + 0x89]
	0x0367BC0C CBZ W8, 0x367BCA0
	0x0367BC10 ADRP X10, 0xAC2000
	0x0367BC14 LDR X8, [X20]
	0x0367BC18 LDR X10, [X10 + 0xB28]
	0x0367BC1C LDRH W9, [X8 + 0x12E]
	0x0367BC20 LDR X1, [X10]
	0x0367BC24 CBZ X9, 0x367BC48
	0x0367BC28 LDR X10, [X8 + 0xB0]
	0x0367BC2C ADD X10, X10, 0x8
	0x0367BC30 LDUR X11, [X10 - 0x8]
	0x0367BC34 CMP X11, X1
	0x0367BC38 B.EQ 0x367BCB0
	0x0367BC3C SUBS X9, X9, 0x1
	0x0367BC40 ADD X10, X10, 0x10
	0x0367BC44 B.NE 0x367BC30
	0x0367BC48 MOV X0, X20
	0x0367BC4C MOV W2, W31
	0x0367BC50 BL 0x1C5C788
	0x0367BC54 B 0x367BCBC
	0x0367BC58 CBNZ X22, 0x367BDC8
	0x0367BC5C LDR X20, [X19 + 0xB0]
	0x0367BC60 CBZ X20, 0x367BC98
	0x0367BC64 MOV X0, X19
	0x0367BC68 BL 0x367B0EC
	0x0367BC6C LDR X21, [X19 + 0xD0]
	0x0367BC70 LDR W22, [X20 + 0x104]
	0x0367BC74 LDR X23, [X20 + 0x108]
	0x0367BC78 MOV X0, X20
	0x0367BC7C MOV X1, X31
	0x0367BC80 BL 0x3674F28
	0x0367BC84 CBZ X21, 0x367BDFC
	0x0367BC88 MOV X20, X31
	0x0367BC8C STR W22, [X21 + 0x38]
	0x0367BC90 STR X23, [X21 + 0x40]
	0x0367BC94 STR X0, [X21 + 0x68]
	0x0367BC98 MOVZ W1, 0x4
	0x0367BC9C B 0x367BB78
	0x0367BCA0 MOV X23, X31
	0x0367BCA4 STR X20, [X19 + 0xB8]
	0x0367BCA8 MOVZ W21, 0x12
	0x0367BCAC B 0x367BCD4
	0x0367BCB0 LDRSW X9, [X10]
	0x0367BCB4 ADD X8, X8, X9, 0x4, LSL
	0x0367BCB8 ADD X0, X8, 0x138
	0x0367BCBC LDP X8, X2, [X0]
	0x0367BCC0 MOVZ W1, 0x3
	0x0367BCC4 MOV X0, X20
	0x0367BCC8 BLR X8
	0x0367BCCC MOV X23, X31
	0x0367BCD0 MOVZ W21, 0x8
	0x0367BCD4 LDRB W8, [X31 + 0x1C]
	0x0367BCD8 CBZ W8, 0x367BCE8
	0x0367BCDC MOV X0, X22
	0x0367BCE0 MOV X1, X31
	0x0367BCE4 BL 0x33E14E4
	0x0367BCE8 CBNZ X23, 0x367BDC0
	0x0367BCEC CMP W21, 0x12
	0x0367BCF0 B.EQ 0x367BCF8
	0x0367BCF4 CBNZ W21, 0x367BB70
	0x0367BCF8 LDR X8, [X19]
	0x0367BCFC LDR X1, [X8 + 0x290]
	0x0367BD00 LDR X9, [X8 + 0x288]
	0x0367BD04 MOV X0, X19
	0x0367BD08 BLR X9
	0x0367BD0C MOV W1, W0
	0x0367BD10 LDR X0, [X31 + 0x10]
	0x0367BD14 MOV X2, X31
	0x0367BD18 BL 0x367666C
	0x0367BD1C MOV X0, X19
	0x0367BD20 BL 0x367B0EC
	0x0367BD24 LDR X8, [X20]
	0x0367BD28 LDP X9, X1, [X8 + 0x1A8]
	0x0367BD2C MOV X0, X20
	0x0367BD30 BLR X9
	0x0367BD34 ANDS W31, W0, 0x1
	0x0367BD38 MOVZ W8, 0x2
	0x0367BD3C MOV X20, X31
	0x0367BD40 CINC W1, W8, NE
	0x0367BD44 B 0x367BB78
	0x0367BD48 MOV X0, X20
	0x0367BD4C BL 0x1C16F18
	0x0367BD50 MOV X0, X27
	0x0367BD54 BL 0x1C16F18
	0x0367BD58 BL 0x1C16F20
	0x0367BD5C BL 0x1C16F28
	0x0367BD60 BL 0x1C16F28
	0x0367BD64 BL 0x1C16F28
	0x0367BD68 BL 0x1C16F28
	0x0367BD6C BL 0x1C16F44
	0x0367BD70 MOV X1, X31
	0x0367BD74 BL 0x1C16DEC
	0x0367BD78 BL 0x1C16F44
	0x0367BD7C MOV X1, X31
	0x0367BD80 BL 0x1C16DEC
	0x0367BD84 BL 0x1C16F44
	0x0367BD88 MOV X1, X31
	0x0367BD8C BL 0x1C16DEC
	0x0367BD90 BL 0x1C16F44
	0x0367BD94 MOV X1, X31
	0x0367BD98 BL 0x1C16DEC
	0x0367BD9C MOV X27, X31
	0x0367BDA0 LDRB W8, [X31 + 0x1C]
	0x0367BDA4 CBZ W8, 0x367BDB4
	0x0367BDA8 MOV X0, X26
	0x0367BDAC MOV X1, X31
	0x0367BDB0 BL 0x33E14E4
	0x0367BDB4 CBZ X27, 0x367BEFC
	0x0367BDB8 MOV X0, X27
	0x0367BDBC BL 0x1C16F18
	0x0367BDC0 MOV X0, X23
	0x0367BDC4 BL 0x1C16F18
	0x0367BDC8 ADRP X0, 0xAC2000
	0x0367BDCC LDR X0, [X0 + 0x848]
	0x0367BDD0 BL 0x1C16D08
	0x0367BDD4 BL 0x1C16F10
	0x0367BDD8 MOV X20, X0
	0x0367BDDC MOV X1, X31
	0x0367BDE0 BL 0x3393E38
	0x0367BDE4 ADRP X0, 0xAC2000
	0x0367BDE8 LDR X0, [X0 + 0xDA8]
	0x0367BDEC BL 0x1C16D08
	0x0367BDF0 MOV X1, X0
	0x0367BDF4 MOV X0, X20
	0x0367BDF8 BL 0x1C16DEC
	0x0367BDFC BL 0x1C16F20
	0x0367BE00 MOVZ W0, 0x8
	0x0367BE04 BL 0x3EB1AF0
	0x0367BE08 LDR X8, [X25]
	0x0367BE0C STR X8, [X0]
	0x0367BE10 ADRP X1, 0x839000
	0x0367BE14 ADD X1, X1, 0xE58
	0x0367BE18 MOV X2, X31
	0x0367BE1C BL 0x3EB1B00
	0x0367BE20 B 0x367BF68
	0x0367BE24 B 0x367BE34
	0x0367BE28 MOV X20, X1
	0x0367BE2C MOV X25, X0
	0x0367BE30 B 0x367BE40
	0x0367BE34 MOV X20, X1
	0x0367BE38 MOV X25, X0
	0x0367BE3C BL 0x3EB1AE0
	0x0367BE40 STR X20, [X31 + 0x8]
	0x0367BE44 B 0x367BEFC
	0x0367BE48 MOV X25, X0
	0x0367BE4C STR X1, [X31 + 0x8]
	0x0367BE50 B 0x367BDA0
	0x0367BE54 B 0x367BEF4
	0x0367BE58 B 0x367BEF4
	0x0367BE5C B 0x367BEF4
	0x0367BE60 B 0x367BEF4
	0x0367BE64 B 0x367BE68
	0x0367BE68 MOV X25, X0
	0x0367BE6C CMP W1, 0x1
	0x0367BE70 B.NE 0x367BE8C
	0x0367BE74 MOV X0, X25
	0x0367BE78 BL 0x3EB1AD0
	0x0367BE7C LDR X23, [X0]
	0x0367BE80 BL 0x3EB1AE0
	0x0367BE84 MOV W21, W31
	0x0367BE88 B 0x367BCD4
	0x0367BE8C MOV X23, X31
	0x0367BE90 LDRB W8, [X31 + 0x1C]
	0x0367BE94 STR X1, [X31 + 0x8]
	0x0367BE98 CBZ W8, 0x367BEA8
	0x0367BE9C MOV X0, X22
	0x0367BEA0 MOV X1, X31
	0x0367BEA4 BL 0x33E14E4
	0x0367BEA8 CBZ X23, 0x367BEFC
	0x0367BEAC MOV X0, X23
	0x0367BEB0 BL 0x1C16F18
	0x0367BEB4 MOV X25, X0
	0x0367BEB8 B 0x367BE90
	0x0367BEBC B 0x367BEF4
	0x0367BEC0 B 0x367BEF4
	0x0367BEC4 B 0x367BEF4
	0x0367BEC8 B 0x367BEF4
	0x0367BECC B 0x367BEF4
	0x0367BED0 B 0x367BEF4
	0x0367BED4 B 0x367BEF4
	0x0367BED8 B 0x367BEF4
	0x0367BEDC B 0x367BEF4
	0x0367BEE0 B 0x367BEF4
	0x0367BEE4 B 0x367BEF4
	0x0367BEE8 B 0x367BEF4
	0x0367BEEC B 0x367BEF4
	0x0367BEF0 B 0x367BEF4
	0x0367BEF4 MOV X25, X0
	0x0367BEF8 STR X1, [X31 + 0x8]
	0x0367BEFC LDR X8, [X31 + 0x8]
	0x0367BF00 CMP W8, 0x1
	0x0367BF04 B.NE 0x367BF88
	0x0367BF08 MOV X0, X25
	0x0367BF0C BL 0x3EB1AD0
	0x0367BF10 MOV X20, X0
	0x0367BF14 ADRP X0, 0xA78000
	0x0367BF18 LDR X0, [X0 + 0x7D0]
	0x0367BF1C BL 0x1C16D08
	0x0367BF20 LDR X8, [X20]
	0x0367BF24 LDR X1, [X8]
	0x0367BF28 BL 0x1C17270
	0x0367BF2C TBZ X0, 0x0, 0x367BF48
	0x0367BF30 LDR X20, [X20]
	0x0367BF34 BL 0x3EB1AE0
	0x0367BF38 MOV X0, X19
	0x0367BF3C MOV X1, X20
	0x0367BF40 BL 0x367A0E8
	0x0367BF44 B 0x367BB70
	0x0367BF48 MOVZ W0, 0x8
	0x0367BF4C BL 0x3EB1AF0
	0x0367BF50 LDR X8, [X20]
	0x0367BF54 STR X8, [X0]
	0x0367BF58 ADRP X1, 0x839000
	0x0367BF5C ADD X1, X1, 0xE58
	0x0367BF60 MOV X2, X31
	0x0367BF64 BL 0x3EB1B00
	0x0367BF68 B 0x367BF6C
	0x0367BF6C MOV X25, X0
	0x0367BF70 STR X1, [X31 + 0x8]
	0x0367BF74 B 0x367BF88
	0x0367BF78 MOV X20, X1
	0x0367BF7C MOV X25, X0
	0x0367BF80 BL 0x3EB1AE0
	0x0367BF84 STR X20, [X31 + 0x8]
	0x0367BF88 LDR X9, [X31 + 0x8]
	0x0367BF8C MOVZ W8, 0x1
	0x0367BF90 CMP W9, W8
	0x0367BF94 B.NE 0x367BFB0
	0x0367BF98 MOV X0, X25
	0x0367BF9C BL 0x3EB1AD0
	0x0367BFA0 LDR X20, [X0]
	0x0367BFA4 BL 0x3EB1AE0
	0x0367BFA8 MOV W1, W31
	0x0367BFAC B 0x367BB78
	0x0367BFB0 MOV X20, X31
	0x0367BFB4 B 0x367BFBC
	0x0367BFB8 MOV X25, X0
	0x0367BFBC MOV X0, X19
	0x0367BFC0 MOV W1, W31
	0x0367BFC4 BL 0x3677FE8
	0x0367BFC8 LDR X0, [X29]
	0x0367BFCC LDR W8, [X0 + 0xE0]
	0x0367BFD0 CBNZ W8, 0x367BFD8
	0x0367BFD4 BL 0x1C16DFC
	0x0367BFD8 MOV X0, X31
	0x0367BFDC BL 0x366A368
	0x0367BFE0 TBZ X0, 0x0, 0x367C010
	0x0367BFE4 LDR X0, [X29]
	0x0367BFE8 LDR W8, [X0 + 0xE0]
	0x0367BFEC CBNZ W8, 0x367BFF4
	0x0367BFF0 BL 0x1C16DFC
	0x0367BFF4 ADRP X8, 0xAC2000
	0x0367BFF8 LDR X8, [X8 + 0xDA0]
	0x0367BFFC LDR X2, [X8]
	0x0367C000 MOV X0, X19
	0x0367C004 MOV X1, X31
	0x0367C008 MOV X3, X31
	0x0367C00C BL 0x366BDBC
	0x0367C010 CBNZ X20, 0x367C01C
	0x0367C014 MOV X0, X25
	0x0367C018 BL 0x1D2C690
	0x0367C01C MOV X0, X20
	0x0367C020 BL 0x1C16F18
	0x0367C024 BL 0x1990590
	0x0367C028 SUB X31, X31, 0x70
	0x0367C02C STP X30, X0, [X31 + 0x30]
	0x0367C030 STP X24, X23, [X31 + 0x40]
	0x0367C034 STP X22, X21, [X31 + 0x50]
	0x0367C038 STP X20, X19, [X31 + 0x60]
	0x0367C03C ADRP X21, 0xD64000
	0x0367C040 ADRP X23, 0xAC1000
	0x0367C044 LDRB W8, [X21 + 0x7AD]
	0x0367C048 LDR X23, [X23 + 0x468]
	0x0367C04C MOV X19, X1
	0x0367C050 MOV X20, X0
	0x0367C054 TBNZ X8, 0x0, 0x367C0A8
	0x0367C058 ADRP X0, 0xA77000
	0x0367C05C LDR X0, [X0 + 0xB58]
	0x0367C060 BL 0x1C16CF4
	0x0367C064 ADRP X0, 0xA77000
	0x0367C068 LDR X0, [X0 + 0x7D0]
	0x0367C06C BL 0x1C16CF4
	0x0367C070 ADRP X0, 0xAC1000
	0x0367C074 LDR X0, [X0 + 0x468]
	0x0367C078 BL 0x1C16CF4
	0x0367C07C ADRP X0, 0xA77000
	0x0367C080 LDR X0, [X0 + 0x9D0]
	0x0367C084 BL 0x1C16CF4
	0x0367C088 ADRP X0, 0xAC1000
	0x0367C08C LDR X0, [X0 + 0xDB0]
	0x0367C090 BL 0x1C16CF4
	0x0367C094 ADRP X0, 0xAC1000
	0x0367C098 LDR X0, [X0 + 0xDB8]
	0x0367C09C BL 0x1C16CF4
	0x0367C0A0 MOVZ W8, 0x1
	0x0367C0A4 STRB W8, [X21 + 0x7AD]
	0x0367C0A8 LDR X0, [X23]
	0x0367C0AC LDR W8, [X0 + 0xE0]
	0x0367C0B0 CBNZ W8, 0x367C0B8

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X19, 0xD66000
	015 Move W8, [X19+2078]
	016 Move W21, W0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {65}
	021 Move X0, 0xA81000
	022 Move X0, [X0+3856]
	023 Call 0x1C17CF4
	024 Move X0, 0xA79000
	025 Move X0, [X0+3584]
	026 Call 0x1C17CF4
	027 Move X0, 0xA79000
	028 Move X0, [X0+3608]
	029 Call 0x1C17CF4
	030 Move X0, 0xAC3000
	031 Move X0, [X0+3408]
	032 Call 0x1C17CF4
	033 Move X0, 0xA79000
	034 Move X0, [X0+1880]
	035 Call 0x1C17CF4
	036 Move X0, 0xAC3000
	037 Move X0, [X0+3416]
	038 Call 0x1C17CF4
	039 Move X0, 0xA7A000
	040 Move X0, [X0+3600]
	041 Call 0x1C17CF4
	042 Move X0, 0xA7D000
	043 Move X0, [X0+2928]
	044 Call 0x1C17CF4
	045 Move X0, 0xA7A000
	046 Move X0, [X0+3624]
	047 Call 0x1C17CF4
	048 Move X0, 0xAA3000
	049 Move X0, [X0+3896]
	050 Call 0x1C17CF4
	051 Move X0, 0xA7A000
	052 Move X0, [X0+3632]
	053 Call 0x1C17CF4
	054 Move X0, 0xAC3000
	055 Move X0, [X0+3424]
	056 Call 0x1C17CF4
	057 Move X0, 0xAC3000
	058 Move X0, [X0+3384]
	059 Call 0x1C17CF4
	060 Move X0, 0xAA9000
	061 Move X0, [X0+3424]
	062 Call 0x1C17CF4
	063 Move W8, 1
	064 Move [X19+2078], W8
	065 Add W31, W21, 1
	066 Move [X31+12], W31
	067 Move TEMP, X21
	068 And TEMP, TEMP, -2147483648
	069 Compare TEMP, -2147483648
	070 JumpIfEqual {498}
	071 Move X26, 0xAC3000
	072 Move X26, [X26+3384]
	073 Move X27, 0xA79000
	074 Move X0, [X26]
	075 Move W8, [X0+224]
	076 Move X27, [X27+1880]
	077 Compare W8, 0
	078 JumpIfNotEqual {81}
	079 Call 0x1C17DFC
	080 Move X0, [X26]
	081 Move X8, [X0+184]
	082 Move X0, [X27]
	083 Add X1, X31, 8
	084 Move X19, [X8+56]
	085 Move [X31+8], W21
	086 Call 0x1C17E04
	087 Compare X19, 0
	088 JumpIfEqual {516}
	089 Move X8, [X19]
	090 Move X24, 0xAA9000
	091 Move X1, X0
	092 Move X0, X19
	093 Move X9, [X8+728]
	094 Move X2, [X8+736]
	095 Move X24, [X24+3424]
	096 NotImplemented "Instruction BLR not yet implemented."
	097 Compare X0, 0
	098 JumpIfEqual {127}
	099 Move X8, [X0]
	100 Move X1, [X24]
	101 Move W10, [X8+304]
	102 Move W9, [X1+304]
	103 NotImplemented "Instruction CMP not yet implemented."
	104 Move X10, [X8+200]
	105 Add X9, X10, X9
	106 NotImplemented "Instruction LDUR not yet implemented."
	107 NotImplemented "Instruction CMP not yet implemented."
	108 Move X9, [X8+408]
	109 Move X1, [X8+416]
	110 NotImplemented "Instruction BLR not yet implemented."
	111 Compare X0, 0
	112 JumpIfEqual {127}
	113 Move X9, 0xAC3000
	114 Move X9, [X9+3424]
	115 Move X8, [X0]
	116 Move X20, X0
	117 Move X1, [X9]
	118 Move W10, [X8+304]
	119 Move W9, [X1+304]
	120 NotImplemented "Instruction CMP not yet implemented."
	121 Move X8, [X8+200]
	122 Add X8, X8, X9
	123 NotImplemented "Instruction LDUR not yet implemented."
	124 NotImplemented "Instruction CMP not yet implemented."
	125 Move X0, X20
	126 Call 0x1C181E0
	127 Move X0, [X26]
	128 Move W8, [X0+224]
	129 Compare W8, 0
	130 JumpIfNotEqual {133}
	131 Call 0x1C17DFC
	132 Move X0, [X26]
	133 Move X8, [X0+184]
	134 Move X19, [X8+8]
	135 Move [X31+12], W31
	136 Add X1, X31, 12
	137 Move X0, X19
	138 Move X2, X31
	139 Call Monitor.Enter, X0, X1
	140 Move X0, [X26]
	141 Move W8, [X0+224]
	142 Compare W8, 0
	143 JumpIfNotEqual {146}
	144 Call 0x1C17DFC
	145 Move X0, [X26]
	146 Move X8, [X0+184]
	147 Move X0, [X27]
	148 Move X20, [X8+56]
	149 Move [X31+8], W21
	150 Add X1, X31, 8
	151 Call 0x1C17E04
	152 Move X1, X0
	153 Compare X20, 0
	154 JumpIfEqual {520}
	155 Move X8, [X20]
	156 Move X9, [X8+728]
	157 Move X2, [X8+736]
	158 Move X0, X20
	159 NotImplemented "Instruction BLR not yet implemented."
	160 Compare X0, 0
	161 JumpIfEqual {201}
	162 Move X8, [X0]
	163 Move X1, [X24]
	164 Move W10, [X8+304]
	165 Move W9, [X1+304]
	166 NotImplemented "Instruction CMP not yet implemented."
	167 Move X10, [X8+200]
	168 Add X9, X10, X9
	169 NotImplemented "Instruction LDUR not yet implemented."
	170 NotImplemented "Instruction CMP not yet implemented."
	171 Move X9, [X8+408]
	172 Move X1, [X8+416]
	173 NotImplemented "Instruction BLR not yet implemented."
	174 Move X8, 0xAC3000
	175 Move X8, [X8+3424]
	176 Move X20, X0
	177 Move X1, [X8]
	178 Compare X0, 0
	179 JumpIfEqual {204}
	180 Move X8, [X20]
	181 Move W9, [X1+304]
	182 Move W10, [X8+304]
	183 NotImplemented "Instruction CMP not yet implemented."
	184 Move X8, [X8+200]
	185 Add X8, X8, X9
	186 NotImplemented "Instruction LDUR not yet implemented."
	187 NotImplemented "Instruction CMP not yet implemented."
	188 Move X0, X20
	189 Call 0x1C181E0
	190 Move X8, 0xAC3000
	191 Move X8, [X8+3408]
	192 Move X0, [X8]
	193 Call 0x1C17F10
	194 Move X1, X31
	195 Move X20, X0
	196 Call Object..ctor, X0
	197 Move TEMP, 0
	198 Not TEMP
	199 Move W8, TEMP
	200 Move [X20+16], W8
	201 Move X8, 0xAC3000
	202 Move X8, [X8+3424]
	203 Move X1, [X8]
	204 Move X0, X1
	205 Call 0x1C17F10
	206 Move X20, X0
	207 Move W1, W21
	208 Call TimerQueue..ctor, X0, X1
	209 Move X0, [X24]
	210 Call 0x1C17F10
	211 Move X22, X0
	212 Move X1, X20
	213 Move X2, X31
	214 Call WeakReference..ctor, X0, X1
	215 Move X0, [X26]
	216 Move W8, [X0+224]
	217 Compare W8, 0
	218 JumpIfNotEqual {221}
	219 Call 0x1C17DFC
	220 Move X0, [X26]
	221 Move X8, [X0+184]
	222 Move X0, [X8+8]
	223 Compare X0, 0
	224 JumpIfEqual {521}
	225 Move X8, 0xAC3000
	226 Move X8, [X8+3416]
	227 Move X2, [X8]
	228 Move X1, X22
	229 Call LinkedList`1<Object>.AddLast, X0, X1
	230 Move X8, [X26]
	231 Move X0, [X27]
	232 Move X8, [X8+184]
	233 Move X23, [X8+56]
	234 Move [X31+8], W21
	235 Add X1, X31, 8
	236 Call 0x1C17E04
	237 Move X1, X0
	238 Compare X23, 0
	239 JumpIfEqual {522}
	240 Move X8, [X23]
	241 Move X9, [X8+744]
	242 Move X3, [X8+752]
	243 Move X0, X23
	244 Move X2, X22
	245 NotImplemented "Instruction BLR not yet implemented."
	246 Move X8, [X26]
	247 Move X8, [X8+184]
	248 Move W9, [X8+48]
	249 Add W9, W9, 1
	250 And W31, W9, 31
	251 Move [X8+48], W9
	252 Move X21, X31
	253 Move W24, 7
	254 Move W8, [X31+12]
	255 Compare W8, 0
	256 JumpIfEqual {260}
	257 Move X0, X19
	258 Move X1, X31
	259 Call Monitor.Exit, X0
	260 Compare X21, 0
	261 JumpIfNotEqual {518}
	262 NotImplemented "Instruction CMP not yet implemented."
	263 Move X0, X20
	264 Move X20, [X31+96]
	265 Move X19, [X31+104]
	266 Move X22, [X31+80]
	267 Move X21, [X31+88]
	268 Move X24, [X31+64]
	269 Move X23, [X31+72]
	270 Move X26, [X31+48]
	271 Move X25, [X31+56]
	272 Move X28, [X31+32]
	273 Move X27, [X31+40]
	274 Move X29, [X31+16]
	275 Move X30, [X31+24]
	276 Add X31, X31, 112
	277 Return X0
	278 Move X8, 0xA7A000
	279 Move X8, [X8+3632]
	280 Move X0, [X8]
	281 Call 0x1C17F10
	282 Move X8, 0xA7D000
	283 Move X8, [X8+2928]
	284 Move X21, X0
	285 Move X1, [X8]
	286 Call List`1<Int32>..ctor, X0
	287 Move X0, [X26]
	288 Move W8, [X0+224]
	289 Compare W8, 0
	290 JumpIfNotEqual {293}
	291 Call 0x1C17DFC
	292 Move X0, [X26]
	293 Move X8, [X0+184]
	294 Move X0, [X8+56]
	295 Compare X0, 0
	296 JumpIfEqual {523}
	297 Move X8, [X0]
	298 Move X1, [X8+768]
	299 Move X9, [X8+760]
	300 NotImplemented "Instruction BLR not yet implemented."
	301 Move X22, X0
	302 Compare X0, 0
	303 JumpIfEqual {524}
	304 Move X25, 0xA79000
	305 Move X28, 0xA81000
	306 Move X29, 0xA7A000
	307 Move X25, [X25+3608]
	308 Move X28, [X28+3856]
	309 Move X29, [X29+3600]
	310 Move X8, [X22]
	311 Move X1, [X25]
	312 NotImplemented "Instruction LDRH not yet implemented."
	313 Compare X9, 0
	314 JumpIfEqual {321}
	315 Move X10, [X8+176]
	316 Add X10, X10, 8
	317 NotImplemented "Instruction LDUR not yet implemented."
	318 NotImplemented "Instruction CMP not yet implemented."
	319 Subtract X9, X9, 1
	320 Add X10, X10, 16
	321 Move X0, X22
	322 Move W2, W31
	323 Call 0x1C5D788
	324 NotImplemented "Instruction LDRSW not yet implemented."
	325 Add X8, X8, X9
	326 Add X0, X8, 312
	327 Move X8, [X0]
	328 Move X1, [X0+8]
	329 Move X0, X22
	330 NotImplemented "Instruction BLR not yet implemented."
	331 Move TEMP, X0
	332 And TEMP, TEMP, 1
	333 Compare TEMP, 1
	334 JumpIfNotEqual {415}
	335 Move X8, [X22]
	336 Move X1, [X25]
	337 NotImplemented "Instruction LDRH not yet implemented."
	338 Compare X9, 0
	339 JumpIfEqual {346}
	340 Move X10, [X8+176]
	341 Add X10, X10, 8
	342 NotImplemented "Instruction LDUR not yet implemented."
	343 NotImplemented "Instruction CMP not yet implemented."
	344 Subtract X9, X9, 1
	345 Add X10, X10, 16
	346 Move W2, 1
	347 Move X0, X22
	348 Call 0x1C5D788
	349 Move W9, [X10]
	350 Add W9, W9, 1
	351 Add X8, X8, W9
	352 Add X0, X8, 312
	353 Move X8, [X0]
	354 Move X1, [X0+8]
	355 Move X0, X22
	356 NotImplemented "Instruction BLR not yet implemented."
	357 Compare X0, 0
	358 JumpIfEqual {488}
	359 Move X8, [X0]
	360 Move X1, [X28]
	361 Move X8, [X8+64]
	362 Move X9, [X1+64]
	363 NotImplemented "Instruction CMP not yet implemented."
	364 Call 0x1C17E08
	365 Move X8, X0
	366 Move X0, [X0+8]
	367 Compare X0, 0
	368 JumpIfEqual {489}
	369 Move X9, [X0]
	370 Move X1, [X24]
	371 Move W11, [X9+304]
	372 Move W10, [X1+304]
	373 NotImplemented "Instruction CMP not yet implemented."
	374 Move X11, [X9+200]
	375 Add X10, X11, X10
	376 NotImplemented "Instruction LDUR not yet implemented."
	377 NotImplemented "Instruction CMP not yet implemented."
	378 Move X23, [X8]
	379 Move X8, [X9+408]
	380 Move X1, [X9+416]
	381 NotImplemented "Instruction BLR not yet implemented."
	382 Compare X0, 0
	383 JumpIfNotEqual {310}
	384 Compare X21, 0
	385 JumpIfEqual {494}
	386 Compare X23, 0
	387 JumpIfEqual {492}
	388 Move X8, [X23]
	389 Move X1, [X27]
	390 Move X8, [X8+64]
	391 Move X9, [X1+64]
	392 NotImplemented "Instruction CMP not yet implemented."
	393 Move X0, X23
	394 Call 0x1C17E08
	395 Move W10, [X21+28]
	396 Move W1, [X0]
	397 Move X8, [X21+16]
	398 Move X9, [X29]
	399 Add W10, W10, 1
	400 Move [X21+28], W10
	401 Compare X8, 0
	402 JumpIfEqual {493}
	403 NotImplemented "Instruction LDRSW not yet implemented."
	404 Move W11, [X8+24]
	405 NotImplemented "Instruction CMP not yet implemented."
	406 Add W9, W10, 1
	407 Add X8, X8, X10
	408 Move [X21+24], W9
	409 Move [X8+32], W1
	410 Move X8, [X9+32]
	411 Move X8, [X8+192]
	412 Move X2, [X8+112]
	413 Move X0, X21
	414 Call List`1<Int32>.AddWithResize, X0, X1
	415 Move X23, X31
	416 Move W24, 12
	417 Move X25, 0xA79000
	418 Move X25, [X25+3584]
	419 Move X1, [X25]
	420 Move X0, X22
	421 Call 0x1C17E00
	422 Move X22, X0
	423 Compare X0, 0
	424 JumpIfEqual {446}
	425 Move X8, [X22]
	426 Move X1, [X25]
	427 NotImplemented "Instruction LDRH not yet implemented."
	428 Compare X9, 0
	429 JumpIfEqual {436}
	430 Move X10, [X8+176]
	431 Add X10, X10, 8
	432 NotImplemented "Instruction LDUR not yet implemented."
	433 NotImplemented "Instruction CMP not yet implemented."
	434 Subtract X9, X9, 1
	435 Add X10, X10, 16
	436 Move X0, X22
	437 Move W2, W31
	438 Call 0x1C5D788
	439 NotImplemented "Instruction LDRSW not yet implemented."
	440 Add X8, X8, X9
	441 Add X0, X8, 312
	442 Move X8, [X0]
	443 Move X1, [X0+8]
	444 Move X0, X22
	445 NotImplemented "Instruction BLR not yet implemented."
	446 Compare X23, 0
	447 JumpIfNotEqual {525}
	448 NotImplemented "Instruction CMP not yet implemented."
	449 Compare W24, 0
	450 JumpIfNotEqual {486}
	451 Compare X21, 0
	452 JumpIfEqual {527}
	453 Move W8, [X21+24]
	454 NotImplemented "Instruction CMP not yet implemented."
	455 Move X24, 0xAA3000
	456 Move X24, [X24+3896]
	457 Move W22, W31
	458 Move X0, [X26]
	459 Move W8, [X0+224]
	460 Compare W8, 0
	461 JumpIfNotEqual {464}
	462 Call 0x1C17DFC
	463 Move X0, [X26]
	464 Move X8, [X0+184]
	465 Move X2, [X24]
	466 Move X23, [X8+56]
	467 Move X0, X21
	468 Move W1, W22
	469 Call List`1<Int32>.get_Item, X0, X1
	470 Move X8, [X27]
	471 Move [X31+8], W0
	472 Add X1, X31, 8
	473 Move X0, X8
	474 Call 0x1C17E04
	475 Move X1, X0
	476 Compare X23, 0
	477 JumpIfEqual {491}
	478 Move X8, [X23]
	479 Move X9, [X8+856]
	480 Move X2, [X8+864]
	481 Move X0, X23
	482 NotImplemented "Instruction BLR not yet implemented."
	483 Move W8, [X21+24]
	484 Add W22, W22, 1
	485 NotImplemented "Instruction CMP not yet implemented."
	486 Move X21, X31
	487 Call 0x1C181E0
	488 Call 0x1C17F20
	489 Call 0x1C17F20
	490 Call 0x1C181E0
	491 Call 0x1C17F20
	492 Call 0x1C17F20
	493 Call 0x1C17F20
	494 Call 0x1C17F20
	495 Move X0, X23
	496 Call 0x1C181E0
	497 Call 0x1C181E0
	498 Move X0, 0xA81000
	499 Move X0, [X0+1888]
	500 Call 0x1C17D08
	501 Call 0x1C17F10
	502 Move X19, X0
	503 Move X0, 0xAC3000
	504 Move X0, [X0+3432]
	505 Call 0x1C17D08
	506 Move X1, X0
	507 Move X0, X19
	508 Move X2, X31
	509 Call ArgumentOutOfRangeException..ctor, X0, X1
	510 Move X0, 0xAC3000
	511 Move X0, [X0+3440]
	512 Call 0x1C17D08
	513 Move X1, X0
	514 Move X0, X19
	515 Call 0x1C17DEC
	516 Call 0x1C17F20
	517 Call 0x1C181E0
	518 Move X0, X21
	519 Call 0x1C17F18
	520 Call 0x1C17F20
	521 Call 0x1C17F20
	522 Call 0x1C17F20
	523 Call 0x1C17F20
	524 Call 0x1C17F20
	525 Move X0, X23
	526 Call 0x1C17F18
	527 Call 0x1C17F20
	528 Move X24, X1
	529 Move X25, X0
	530 Move X20, X31
	531 Move X24, X1
	532 Move X25, X0
	533 Move X24, X1
	534 Move X25, X0
	535 NotImplemented "Instruction CMP not yet implemented."
	536 Move X0, X25
	537 Call 0x3EB2AD0
	538 Move X23, [X0]
	539 Call 0x3EB2AE0
	540 Move W24, W31
	541 Move X23, X31
	542 Move X26, 0xA79000
	543 Move X26, [X26+3584]
	544 Move X1, [X26]
	545 Move X0, X22
	546 Call 0x1C17E00
	547 Move X21, X0
	548 Compare X0, 0
	549 JumpIfEqual {571}
	550 Move X8, [X21]
	551 Move X1, [X26]
	552 NotImplemented "Instruction LDRH not yet implemented."
	553 Compare X9, 0
	554 JumpIfEqual {561}
	555 Move X10, [X8+176]
	556 Add X10, X10, 8
	557 NotImplemented "Instruction LDUR not yet implemented."
	558 NotImplemented "Instruction CMP not yet implemented."
	559 Subtract X9, X9, 1
	560 Add X10, X10, 16
	561 Move X0, X21
	562 Move W2, W31
	563 Call 0x1C5D788
	564 NotImplemented "Instruction LDRSW not yet implemented."
	565 Add X8, X8, X9
	566 Add X0, X8, 312
	567 Move X8, [X0]
	568 Move X1, [X0+8]
	569 Move X0, X21
	570 NotImplemented "Instruction BLR not yet implemented."
	571 Compare X23, 0
	572 JumpIfNotEqual {580}
	573 NotImplemented "Instruction CMP not yet implemented."
	574 Move X0, X25
	575 Call 0x3EB2AD0
	576 Move X21, [X0]
	577 Call 0x3EB2AE0
	578 Move W24, W31
	579 Move X21, X31
	580 Move X0, X23
	581 Call 0x1C17F18
	582 Move X24, X1
	583 Move X25, X0
	584 Move X25, X0
	585 Move W8, [X31+12]
	586 Compare W8, 0
	587 JumpIfEqual {591}
	588 Move X0, X19
	589 Move X1, X31
	590 Call Monitor.Exit, X0
	591 Compare X21, 0
	592 JumpIfNotEqual {595}
	593 Move X0, X25
	594 Call 0x1D2D690
	595 Move X0, X21
	596 Call 0x1C17F18
	597 Call 0x1991590

Method: System.Void Prod()

Disassembly:
	0x03688BA4 TBZ X23, 0x0, 0x3688AB0
	0x03688BA8 LDP X8, X3, [X19 + 0x20]
	0x03688BAC STP X31, X31, [X19 + 0x20]
	0x03688BB0 CBZ X8, 0x3688BF8
	0x03688BB4 LDR X0, [X8 + 0x40]
	0x03688BB8 LDR X9, [X8 + 0x18]
	0x03688BBC LDR X4, [X8 + 0x28]
	0x03688BC0 MOV X1, X19
	0x03688BC4 MOV W2, W20
	0x03688BC8 BLR X9
	0x03688BCC B 0x3688AB0
	0x03688BD0 LDP X20, X19, [X31 + 0x30]
	0x03688BD4 LDP X22, X21, [X31 + 0x20]
	0x03688BD8 LDP X24, X23, [X31 + 0x10]
	0x03688BDC AND W0, W8, 0x1
	0x03688BE0 LDR X30, [X31], #0x40
	0x03688BE4 RET
	0x03688BE8 MOV X0, X22
	0x03688BEC BL 0x1C16F18
	0x03688BF0 BL 0x1C16F20
	0x03688BF4 BL 0x1C16F20
	0x03688BF8 BL 0x1C16F20
	0x03688BFC B 0x3688C8C
	0x03688C00 B 0x3688C8C
	0x03688C04 CMP W1, 0x1
	0x03688C08 MOV X23, X0
	0x03688C0C B.NE 0x3688CD8
	0x03688C10 MOV X0, X23
	0x03688C14 BL 0x3EB1AD0
	0x03688C18 MOV X19, X0
	0x03688C1C ADRP X0, 0xA6B000
	0x03688C20 LDR X0, [X0 + 0x7D0]
	0x03688C24 BL 0x1C16D08
	0x03688C28 LDR X8, [X19]
	0x03688C2C LDR X1, [X8]
	0x03688C30 BL 0x1C17270
	0x03688C34 TBZ X0, 0x0, 0x3688C58
	0x03688C38 LDR X19, [X19]
	0x03688C3C BL 0x3EB1AE0
	0x03688C40 MOV X0, X19
	0x03688C44 BL 0x367E11C
	0x03688C48 TBNZ X0, 0x0, 0x3688C78
	0x03688C4C MOV X0, X31
	0x03688C50 BL 0x3692290
	0x03688C54 B 0x3688AB0
	0x03688C58 MOVZ W0, 0x8
	0x03688C5C BL 0x3EB1AF0
	0x03688C60 LDR X8, [X19]
	0x03688C64 STR X8, [X0]
	0x03688C68 ADRP X1, 0x82C000
	0x03688C6C ADD X1, X1, 0xE58
	0x03688C70 MOV X2, X31
	0x03688C74 BL 0x3EB1B00
	0x03688C78 MOV X0, X19
	0x03688C7C BL 0x1C16F18
	0x03688C80 MOV X23, X0
	0x03688C84 BL 0x3EB1AE0
	0x03688C88 B 0x3688CD8
	0x03688C8C MOV X23, X0
	0x03688C90 CMP W1, 0x1
	0x03688C94 B.NE 0x3688CB4
	0x03688C98 MOV X0, X23
	0x03688C9C BL 0x3EB1AD0
	0x03688CA0 LDR X22, [X0]
	0x03688CA4 BL 0x3EB1AE0
	0x03688CA8 MOV W24, W31
	0x03688CAC MOV W23, W31
	0x03688CB0 B 0x3688B80

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xD59000
	005 Move X19, 0xAB6000
	006 Move W8, [X20+2079]
	007 Move X19, [X19+3384]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {26}
	012 Move X0, 0xA98000
	013 Move X0, [X0+464]
	014 Call 0x1C17CF4
	015 Move X0, 0xA98000
	016 Move X0, [X0+472]
	017 Call 0x1C17CF4
	018 Move X0, 0xAB7000
	019 Move X0, [X0+600]
	020 Call 0x1C17CF4
	021 Move X0, 0xAB6000
	022 Move X0, [X0+3384]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X20+2079], W8
	026 Move X0, [X19]
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {32}
	030 Call 0x1C17DFC
	031 Move X0, [X19]
	032 Move X8, [X0+184]
	033 Move X0, [X8+24]
	034 Compare X0, 0
	035 JumpIfEqual {79}
	036 Move X1, X31
	037 Call EventWaitHandle.Set, X0
	038 Move X8, [X19]
	039 Move W1, 1
	040 Move W2, W31
	041 Move X3, X31
	042 Move X8, [X8+184]
	043 Add X0, X8, 16
	044 Call Interlocked.CompareExchange, X0, X1, X2
	045 Compare W0, 0
	046 JumpIfEqual {51}
	047 Move X20, [X31+16]
	048 Move X19, [X31+24]
	049 Move X30, [X31+32]
	050 Return 
	051 Move X8, 0xA98000
	052 Move X8, [X8+464]
	053 Move X0, [X8]
	054 Call 0x1C17F10
	055 Move X8, 0xAB7000
	056 Move X8, [X8+600]
	057 Move X1, X31
	058 Move X3, X31
	059 Move X20, X0
	060 Move X2, [X8]
	061 Call ThreadStart..ctor, X0, X1, X2
	062 Move X8, 0xA98000
	063 Move X8, [X8+472]
	064 Move X0, [X8]
	065 Call 0x1C17F10
	066 Move X1, X20
	067 Move X2, X31
	068 Move X19, X0
	069 Call Thread..ctor, X0, X1
	070 Compare X19, 0
	071 JumpIfEqual {79}
	072 Move X0, X19
	073 Move X20, [X31+16]
	074 Move X19, [X31+24]
	075 Move X1, X31
	076 Move X30, [X31+32]
	077 Call Thread.Start, X0
	078 Return 
	079 Call 0x1C17F20

Method: System.Void ThreadProc()

Disassembly:
	0x03688CB4 MOV X22, X31
	0x03688CB8 B 0x3688CC0
	0x03688CBC MOV X23, X0
	0x03688CC0 LDRB W8, [X31 + 0xC]
	0x03688CC4 CBZ W8, 0x3688CD4
	0x03688CC8 MOV X0, X21
	0x03688CCC MOV X1, X31
	0x03688CD0 BL 0x33E14E4
	0x03688CD4 CBNZ X22, 0x3688CE0
	0x03688CD8 MOV X0, X23
	0x03688CDC BL 0x1D2C690
	0x03688CE0 MOV X0, X22
	0x03688CE4 BL 0x1C16F18
	0x03688CE8 BL 0x1990590
	0x03688CEC STR X30, [X31 - 0x20]!
	0x03688CF0 STP X20, X19, [X31 + 0x10]
	0x03688CF4 ADRP X19, 0xD58000
	0x03688CF8 ADRP X20, 0xAB6000
	0x03688CFC LDRB W8, [X19 + 0x825]
	0x03688D00 LDR X20, [X20 + 0x290]
	0x03688D04 TBNZ X8, 0x0, 0x3688D1C
	0x03688D08 ADRP X0, 0xAB6000
	0x03688D0C LDR X0, [X0 + 0x290]
	0x03688D10 BL 0x1C16CF4
	0x03688D14 MOVZ W8, 0x1
	0x03688D18 STRB W8, [X19 + 0x825]
	0x03688D1C LDR X0, [X20]
	0x03688D20 BL 0x1C16F10
	0x03688D24 MOV X1, X31
	0x03688D28 MOV X19, X0
	0x03688D2C BL 0x33BDD8C
	0x03688D30 MOVN W8, 0x0
	0x03688D34 MOV X0, X31
	0x03688D38 STR W8, [X19 + 0x14]
	0x03688D3C BL 0x33C18F4
	0x03688D40 STR W0, [X19 + 0x10]
	0x03688D44 MOV X0, X19
	0x03688D48 LDP X20, X19, [X31 + 0x10]
	0x03688D4C LDR X30, [X31], #0x20
	0x03688D50 RET
	0x03688D54 STP X30, X19, [X31 - 0x10]!
	0x03688D58 MOV X1, X31
	0x03688D5C MOV X19, X0
	0x03688D60 BL 0x33BDD8C
	0x03688D64 MOVN W8, 0x0
	0x03688D68 MOV X0, X31
	0x03688D6C STR W8, [X19 + 0x14]
	0x03688D70 BL 0x33C18F4
	0x03688D74 STR W0, [X19 + 0x10]
	0x03688D78 LDP X30, X19, [X31], #0x10
	0x03688D7C RET
	0x03688D80 LDR W8, [X0 + 0x18]
	0x03688D84 CMP W8, 0x1
	0x03688D88 CSET W0, EQ
	0x03688D8C RET
	0x03688D90 LDR X0, [X0 + 0x38]
	0x03688D94 RET
	0x03688D98 STR X1, [X0 + 0x38]
	0x03688D9C RET
	0x03688DA0 LDR X0, [X0 + 0x40]
	0x03688DA4 RET
	0x03688DA8 STR X1, [X0 + 0x40]
	0x03688DAC RET
	0x03688DB0 SUB X31, X31, 0x30
	0x03688DB4 STP X30, X21, [X31 + 0x10]
	0x03688DB8 STP X20, X19, [X31 + 0x20]
	0x03688DBC LDR W8, [X0 + 0x18]
	0x03688DC0 CBZ W8, 0x3688DCC
	0x03688DC4 MOV W21, W31
	0x03688DC8 B 0x3688E4C
	0x03688DCC LDR X19, [X0 + 0x30]
	0x03688DD0 MOV X21, X0
	0x03688DD4 STRB W31, [X31 + 0xC]
	0x03688DD8 ADD X1, X31, 0xC
	0x03688DDC MOV X0, X19
	0x03688DE0 MOV X2, X31
	0x03688DE4 BL 0x33DE64C
	0x03688DE8 LDR W8, [X21 + 0x18]
	0x03688DEC CBZ W8, 0x3688DFC
	0x03688DF0 MOV X20, X31
	0x03688DF4 MOV W21, W31
	0x03688DF8 B 0x3688E34
	0x03688DFC MOV X8, X21
	0x03688E00 LDR X9, [X8 + 0x38]!
	0x03688E04 CBZ X9, 0x3688E68
	0x03688E08 LDR X10, [X21 + 0x40]
	0x03688E0C STR X10, [X9 + 0x40]
	0x03688E10 LDR X10, [X21 + 0x40]
	0x03688E14 CBZ X10, 0x3688E6C
	0x03688E18 STR X9, [X10 + 0x38]
	0x03688E1C STP X31, X31, [X21 + 0x20]
	0x03688E20 STP X31, X31, [X8]
	0x03688E24 MOVZ W8, 0x2
	0x03688E28 MOV X20, X31
	0x03688E2C STR W8, [X21 + 0x18]
	0x03688E30 MOVZ W21, 0x1
	0x03688E34 LDRB W8, [X31 + 0xC]
	0x03688E38 CBZ W8, 0x3688E48
	0x03688E3C MOV X0, X19
	0x03688E40 MOV X1, X31
	0x03688E44 BL 0x33E14E4
	0x03688E48 CBNZ X20, 0x3688E60
	0x03688E4C MOV W0, W21
	0x03688E50 LDP X20, X19, [X31 + 0x20]
	0x03688E54 LDP X30, X21, [X31 + 0x10]
	0x03688E58 ADD X31, X31, 0x30
	0x03688E5C RET
	0x03688E60 MOV X0, X20
	0x03688E64 BL 0x1C16F18
	0x03688E68 BL 0x1C16F20
	0x03688E6C BL 0x1C16F20
	0x03688E70 B 0x3688E78
	0x03688E74 B 0x3688E78
	0x03688E78 MOV X21, X0
	0x03688E7C CMP W1, 0x1
	0x03688E80 B.NE 0x3688E98
	0x03688E84 MOV X0, X21
	0x03688E88 BL 0x3EB1AD0
	0x03688E8C LDR X20, [X0]
	0x03688E90 BL 0x3EB1AE0
	0x03688E94 B 0x3688DF4
	0x03688E98 MOV X20, X31
	0x03688E9C B 0x3688EA4
	0x03688EA0 MOV X21, X0
	0x03688EA4 LDRB W8, [X31 + 0xC]
	0x03688EA8 CBZ W8, 0x3688EB8
	0x03688EAC MOV X0, X19
	0x03688EB0 MOV X1, X31
	0x03688EB4 BL 0x33E14E4
	0x03688EB8 CBNZ X20, 0x3688EC4
	0x03688EBC MOV X0, X21
	0x03688EC0 BL 0x1D2C690
	0x03688EC4 MOV X0, X20
	0x03688EC8 BL 0x1C16F18
	0x03688ECC BL 0x1990590
	0x03688ED0 MOV W0, W31
	0x03688ED4 RET
	0x03688ED8 STR X30, [X31 - 0x10]!
	0x03688EDC ADD X0, X0, 0x18
	0x03688EE0 MOVZ W1, 0x1
	0x03688EE4 MOV X2, X31
	0x03688EE8 BL 0x33E9064
	0x03688EEC CMP W0, 0x0
	0x03688EF0 CSET W0, EQ
	0x03688EF4 LDR X30, [X31], #0x10
	0x03688EF8 RET
	0x03688EFC STR X30, [X31 - 0x30]!
	0x03688F00 STP X22, X21, [X31 + 0x10]
	0x03688F04 STP X20, X19, [X31 + 0x20]
	0x03688F08 ADRP X21, 0xD58000
	0x03688F0C ADRP X20, 0xA6D000
	0x03688F10 ADRP X22, 0xA6C000
	0x03688F14 LDRB W8, [X21 + 0x827]
	0x03688F18 LDR X20, [X20 + 0x278]
	0x03688F1C LDR X22, [X22 + 0x9F0]
	0x03688F20 MOV X19, X0
	0x03688F24 TBNZ X8, 0x0, 0x3688F48
	0x03688F28 ADRP X0, 0xA6C000
	0x03688F2C LDR X0, [X0 + 0x9F0]
	0x03688F30 BL 0x1C16CF4
	0x03688F34 ADRP X0, 0xA6D000
	0x03688F38 LDR X0, [X0 + 0x278]
	0x03688F3C BL 0x1C16CF4
	0x03688F40 MOVZ W8, 0x1
	0x03688F44 STRB W8, [X21 + 0x827]
	0x03688F48 LDR X8, [X20]
	0x03688F4C MOVZ W21, 0x1
	0x03688F50 LDR X9, [X8 + 0xB8]
	0x03688F54 LDR X9, [X9]
	0x03688F58 STR W21, [X19 + 0x20]
	0x03688F5C STRB W21, [X19 + 0x30]
	0x03688F60 STR X9, [X19 + 0x10]
	0x03688F64 STR X9, [X19 + 0x28]
	0x03688F68 LDR X0, [X22]
	0x03688F6C LDR W9, [X0 + 0xE0]
	0x03688F70 CBNZ W9, 0x3688F80
	0x03688F74 BL 0x1C16DFC
	0x03688F78 LDR X0, [X22]
	0x03688F7C LDR X8, [X20]
	0x03688F80 LDR X9, [X0 + 0xB8]
	0x03688F84 MOV X0, X31
	0x03688F88 LDR X9, [X9 + 0x10]
	0x03688F8C STR X9, [X19 + 0x38]
	0x03688F90 LDR X8, [X8 + 0xB8]
	0x03688F94 LDR X8, [X8]
	0x03688F98 STRB W21, [X19 + 0x50]
	0x03688F9C STRB W21, [X19 + 0x60]
	0x03688FA0 STP X8, X8, [X19 + 0x40]
	0x03688FA4 STR X8, [X19 + 0x58]
	0x03688FA8 BL 0x3361584
	0x03688FAC STR X0, [X19 + 0x78]
	0x03688FB0 LDR X8, [X20]
	0x03688FB4 MOV X0, X19
	0x03688FB8 LDP X22, X21, [X31 + 0x10]
	0x03688FBC MOV X1, X31
	0x03688FC0 LDR X8, [X8 + 0xB8]
	0x03688FC4 LDR X8, [X8]
	0x03688FC8 STR X8, [X19 + 0x80]
	0x03688FCC STR X8, [X19 + 0x90]
	0x03688FD0 LDP X20, X19, [X31 + 0x20]
	0x03688FD4 LDR X30, [X31], #0x30
	0x03688FD8 B 0x33BDD8C
	0x03688FDC LDR X0, [X0 + 0x10]
	0x03688FE0 RET
	0x03688FE4 STP X30, X21, [X31 - 0x20]!
	0x03688FE8 STP X20, X19, [X31 + 0x10]
	0x03688FEC ADRP X21, 0xD58000
	0x03688FF0 LDRB W8, [X21 + 0x828]
	0x03688FF4 MOV X20, X1
	0x03688FF8 MOV X19, X0
	0x03688FFC TBNZ X8, 0x0, 0x3689014
	0x03689000 ADRP X0, 0xA6C000
	0x03689004 LDR X0, [X0 + 0x278]
	0x03689008 BL 0x1C16CF4
	0x0368900C MOVZ W8, 0x1
	0x03689010 STRB W8, [X21 + 0x828]
	0x03689014 CBNZ X20, 0x368902C
	0x03689018 ADRP X8, 0xA6C000
	0x0368901C LDR X8, [X8 + 0x278]
	0x03689020 LDR X8, [X8]
	0x03689024 LDR X8, [X8 + 0xB8]
	0x03689028 LDR X20, [X8]
	0x0368902C STR X20, [X19 + 0x10]
	0x03689030 LDP X20, X19, [X31 + 0x10]
	0x03689034 LDP X30, X21, [X31], #0x20
	0x03689038 RET
	0x0368903C STR X1, [X0 + 0x18]
	0x03689040 RET
	0x03689044 AND W8, W1, 0x1
	0x03689048 STRB W8, [X0 + 0x71]
	0x0368904C RET
	0x03689050 AND W8, W1, 0x1
	0x03689054 STRB W8, [X0 + 0x24]
	0x03689058 RET
	0x0368905C LDR X0, [X0 + 0x28]
	0x03689060 RET
	0x03689064 STP X30, X21, [X31 - 0x20]!
	0x03689068 STP X20, X19, [X31 + 0x10]
	0x0368906C ADRP X21, 0xD57000
	0x03689070 LDRB W8, [X21 + 0x829]
	0x03689074 MOV X20, X1
	0x03689078 MOV X19, X0
	0x0368907C TBNZ X8, 0x0, 0x3689094
	0x03689080 ADRP X0, 0xA6C000
	0x03689084 LDR X0, [X0 + 0x278]
	0x03689088 BL 0x1C16CF4
	0x0368908C MOVZ W8, 0x1
	0x03689090 STRB W8, [X21 + 0x829]
	0x03689094 ADRP X8, 0xA6C000
	0x03689098 LDR X8, [X8 + 0x278]
	0x0368909C CBNZ X20, 0x36890AC
	0x036890A0 LDR X9, [X8]
	0x036890A4 LDR X9, [X9 + 0xB8]
	0x036890A8 LDR X20, [X9]
	0x036890AC CBZ X19, 0x36890D4
	0x036890B0 STR X20, [X19 + 0x28]
	0x036890B4 STRB W31, [X19 + 0x30]
	0x036890B8 LDR X8, [X8]
	0x036890BC LDR X8, [X8 + 0xB8]
	0x036890C0 LDR X8, [X8]
	0x036890C4 STR X8, [X19 + 0x90]
	0x036890C8 LDP X20, X19, [X31 + 0x10]
	0x036890CC LDP X30, X21, [X31], #0x20
	0x036890D0 RET
	0x036890D4 BL 0x1C16F20
	0x036890D8 STR X30, [X31 - 0x20]!
	0x036890DC STP X20, X19, [X31 + 0x10]
	0x036890E0 ADRP X20, 0xD57000
	0x036890E4 LDRB W8, [X20 + 0x82A]
	0x036890E8 MOV X19, X0
	0x036890EC TBNZ X8, 0x0, 0x368911C
	0x036890F0 ADRP X0, 0xA6C000
	0x036890F4 LDR X0, [X0 + 0x278]
	0x036890F8 BL 0x1C16CF4
	0x036890FC ADRP X0, 0xAB5000
	0x03689100 LDR X0, [X0 + 0x298]
	0x03689104 BL 0x1C16CF4
	0x03689108 ADRP X0, 0xA75000
	0x0368910C LDR X0, [X0 + 0xCD8]
	0x03689110 BL 0x1C16CF4
	0x03689114 MOVZ W8, 0x1
	0x03689118 STRB W8, [X20 + 0x82A]
	0x0368911C LDR W8, [X19 + 0x20]
	0x03689120 CMP W8, 0x1
	0x03689124 ADRP X8, 0xA6C000
	0x03689128 LDR X8, [X8 + 0x278]
	0x0368912C B.EQ 0x3689138
	0x03689130 LDRB W9, [X19 + 0x30]
	0x03689134 CBZ W9, 0x3689150
	0x03689138 LDR X8, [X8]
	0x0368913C LDP X20, X19, [X31 + 0x10]
	0x03689140 LDR X8, [X8 + 0xB8]
	0x03689144 LDR X0, [X8]
	0x03689148 LDR X30, [X31], #0x20
	0x0368914C RET
	0x03689150 LDR X2, [X19 + 0x28]
	0x03689154 CBZ X2, 0x36891A0
	0x03689158 LDR W9, [X2 + 0x10]
	0x0368915C CBZ W9, 0x3689138
	0x03689160 ADRP X10, 0xAB5000
	0x03689164 LDRB W9, [X19 + 0x99]
	0x03689168 LDR X10, [X10 + 0x298]
	0x0368916C LDR X0, [X10]
	0x03689170 CBZ W9, 0x3689180
	0x03689174 ADRP X8, 0xA75000
	0x03689178 LDR X8, [X8 + 0xCD8]
	0x0368917C B 0x3689188
	0x03689180 LDR X8, [X8]
	0x03689184 LDR X8, [X8 + 0xB8]
	0x03689188 LDR X1, [X8]
	0x0368918C LDP X20, X19, [X31 + 0x10]
	0x03689190 MOV X4, X31
	0x03689194 MOV X3, X1
	0x03689198 LDR X30, [X31], #0x20
	0x0368919C B 0x32277C4
	0x036891A0 BL 0x1C16F20
	0x036891A4 LDR W8, [X0 + 0x20]
	0x036891A8 CMP W8, 0x1
	0x036891AC CSET W0, EQ
	0x036891B0 RET
	0x036891B4 STP X30, X21, [X31 - 0x20]!
	0x036891B8 STP X20, X19, [X31 + 0x10]
	0x036891BC ADRP X20, 0xD57000
	0x036891C0 ADRP X21, 0xA6B000
	0x036891C4 LDRB W8, [X20 + 0x82B]
	0x036891C8 LDR X21, [X21 + 0x9F0]
	0x036891CC MOV X19, X0
	0x036891D0 TBNZ X8, 0x0, 0x36891E8
	0x036891D4 ADRP X0, 0xA6B000
	0x036891D8 LDR X0, [X0 + 0x9F0]
	0x036891DC BL 0x1C16CF4
	0x036891E0 MOVZ W8, 0x1
	0x036891E4 STRB W8, [X20 + 0x82B]
	0x036891E8 LDR X0, [X21]
	0x036891EC LDR X20, [X19 + 0x38]
	0x036891F0 LDR W8, [X0 + 0xE0]
	0x036891F4 CBNZ W8, 0x3689200
	0x036891F8 BL 0x1C16DFC
	0x036891FC LDR X0, [X21]
	0x03689200 LDR X8, [X0 + 0xB8]
	0x03689204 MOV X0, X20
	0x03689208 MOV X2, X31
	0x0368920C LDR X1, [X8 + 0x10]
	0x03689210 BL 0x33630E0
	0x03689214 TBZ X0, 0x0, 0x368925C
	0x03689218 LDR X0, [X21]
	0x0368921C ADD X19, X19, 0x38
	0x03689220 LDR W8, [X0 + 0xE0]
	0x03689224 CBNZ W8, 0x368922C
	0x03689228 BL 0x1C16DFC
	0x0368922C MOV X0, X19
	0x03689230 MOV X1, X31
	0x03689234 BL 0x3361FC4
	0x03689238 MOV X19, X0
	0x0368923C MOV X0, X31
	0x03689240 BL 0x3361584
	0x03689244 MOV X1, X0
	0x03689248 MOV X0, X19
	0x0368924C LDP X20, X19, [X31 + 0x10]
	0x03689250 MOV X2, X31
	0x03689254 LDP X30, X21, [X31], #0x20
	0x03689258 B 0x33631B4
	0x0368925C LDP X20, X19, [X31 + 0x10]
	0x03689260 MOV W0, W31
	0x03689264 LDP X30, X21, [X31], #0x20
	0x03689268 RET
	0x0368926C STR X1, [X0 + 0x38]
	0x03689270 RET
	0x03689274 LDR X0, [X0 + 0x40]
	0x03689278 RET
	0x0368927C STR X30, [X31 - 0x30]!
	0x03689280 STP X22, X21, [X31 + 0x10]
	0x03689284 STP X20, X19, [X31 + 0x20]
	0x03689288 ADRP X21, 0xD57000
	0x0368928C ADRP X22, 0xAB4000
	0x03689290 LDRB W8, [X21 + 0x82C]
	0x03689294 LDR X22, [X22 + 0xE28]
	0x03689298 MOV X20, X1
	0x0368929C MOV X19, X0
	0x036892A0 TBNZ X8, 0x0, 0x36892D0
	0x036892A4 ADRP X0, 0xAB5000
	0x036892A8 LDR X0, [X0 + 0x2A0]
	0x036892AC BL 0x1C16CF4
	0x036892B0 ADRP X0, 0xA6C000
	0x036892B4 LDR X0, [X0 + 0x278]
	0x036892B8 BL 0x1C16CF4
	0x036892BC ADRP X0, 0xAB4000
	0x036892C0 LDR X0, [X0 + 0xE28]
	0x036892C4 BL 0x1C16CF4
	0x036892C8 MOVZ W8, 0x1
	0x036892CC STRB W8, [X21 + 0x82C]
	0x036892D0 LDR X0, [X22]
	0x036892D4 LDR W8, [X0 + 0xE0]
	0x036892D8 CBZ W8, 0x36892E4
	0x036892DC CBNZ X20, 0x36892EC
	0x036892E0 B 0x3689348
	0x036892E4 BL 0x1C16DFC
	0x036892E8 CBZ X20, 0x3689348
	0x036892EC LDR W8, [X20 + 0x10]
	0x036892F0 CBZ W8, 0x3689348
	0x036892F4 MOV X0, X20
	0x036892F8 MOV W1, W31
	0x036892FC MOV X2, X31
	0x03689300 BL 0x3222A1C
	0x03689304 AND W8, W0, 0xFFFF
	0x03689308 CMP W8, 0x24
	0x0368930C B.EQ 0x3689348
	0x03689310 ADRP X21, 0xAB5000
	0x03689314 LDR X21, [X21 + 0x2A0]
	0x03689318 LDR X0, [X21]
	0x0368931C LDR W8, [X0 + 0xE0]
	0x03689320 CBNZ W8, 0x368932C
	0x03689324 BL 0x1C16DFC
	0x03689328 LDR X0, [X21]
	0x0368932C LDR X8, [X0 + 0xB8]
	0x03689330 MOV X0, X20
	0x03689334 MOV X2, X31
	0x03689338 LDR X1, [X8 + 0x8]
	0x0368933C BL 0x322BE8C
	0x03689340 ADDS W31, W0, 0x1
	0x03689344 B.EQ 0x3689374
	0x03689348 ADRP X8, 0xA6C000
	0x0368934C LDR X8, [X8 + 0x278]
	0x03689350 MOV W0, W31
	0x03689354 LDR X8, [X8]
	0x03689358 LDR X8, [X8 + 0xB8]
	0x0368935C LDR X20, [X8]
	0x03689360 STR X20, [X19 + 0x40]
	0x03689364 LDP X20, X19, [X31 + 0x20]
	0x03689368 LDP X22, X21, [X31 + 0x10]
	0x0368936C LDR X30, [X31], #0x30
	0x03689370 RET
	0x03689374 MOVZ W0, 0x1
	0x03689378 B 0x3689360
	0x0368937C LDR X0, [X0 + 0x48]
	0x03689380 RET
	0x03689384 STP X30, X21, [X31 - 0x20]!
	0x03689388 STP X20, X19, [X31 + 0x10]
	0x0368938C ADRP X21, 0xD57000
	0x03689390 LDRB W8, [X21 + 0x82D]
	0x03689394 MOV X20, X1
	0x03689398 MOV X19, X0
	0x0368939C TBZ X8, 0x0, 0x36893BC
	0x036893A0 CBZ X20, 0x36893D4
	0x036893A4 CBZ X19, 0x36893EC
	0x036893A8 STR X20, [X19 + 0x48]
	0x036893AC STRB W31, [X19 + 0x50]
	0x036893B0 LDP X20, X19, [X31 + 0x10]
	0x036893B4 LDP X30, X21, [X31], #0x20
	0x036893B8 RET
	0x036893BC ADRP X0, 0xA6C000
	0x036893C0 LDR X0, [X0 + 0x278]
	0x036893C4 BL 0x1C16CF4
	0x036893C8 MOVZ W8, 0x1
	0x036893CC STRB W8, [X21 + 0x82D]
	0x036893D0 CBNZ X20, 0x36893A4
	0x036893D4 ADRP X8, 0xA6C000
	0x036893D8 LDR X8, [X8 + 0x278]
	0x036893DC LDR X8, [X8]
	0x036893E0 LDR X8, [X8 + 0xB8]
	0x036893E4 LDR X20, [X8]
	0x036893E8 CBNZ X19, 0x36893A8
	0x036893EC BL 0x1C16F20
	0x036893F0 STR X30, [X31 - 0x20]!
	0x036893F4 STP X20, X19, [X31 + 0x10]
	0x036893F8 ADRP X20, 0xD57000
	0x036893FC LDRB W8, [X20 + 0x82E]
	0x03689400 MOV X19, X0
	0x03689404 TBNZ X8, 0x0, 0x3689428
	0x03689408 ADRP X0, 0xA6C000
	0x0368940C LDR X0, [X0 + 0x278]
	0x03689410 BL 0x1C16CF4
	0x03689414 ADRP X0, 0xAB5000
	0x03689418 LDR X0, [X0 + 0x2A8]
	0x0368941C BL 0x1C16CF4
	0x03689420 MOVZ W8, 0x1
	0x03689424 STRB W8, [X20 + 0x82E]
	0x03689428 LDR W8, [X19 + 0x20]
	0x0368942C CMP W8, 0x1
	0x03689430 B.EQ 0x368943C
	0x03689434 LDRB W8, [X19 + 0x50]
	0x03689438 CBZ W8, 0x368945C
	0x0368943C ADRP X8, 0xA6C000
	0x03689440 LDR X8, [X8 + 0x278]
	0x03689444 LDP X20, X19, [X31 + 0x10]
	0x03689448 LDR X8, [X8]
	0x0368944C LDR X8, [X8 + 0xB8]
	0x03689450 LDR X0, [X8]
	0x03689454 LDR X30, [X31], #0x20
	0x03689458 RET
	0x0368945C LDR X1, [X19 + 0x48]
	0x03689460 CBZ X1, 0x3689488
	0x03689464 LDR W8, [X1 + 0x10]
	0x03689468 CBZ W8, 0x368943C
	0x0368946C ADRP X8, 0xAB5000
	0x03689470 LDR X8, [X8 + 0x2A8]
	0x03689474 LDP X20, X19, [X31 + 0x10]
	0x03689478 MOV X2, X31
	0x0368947C LDR X0, [X8]

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+32], X29
	003 Move [X31+40], X30
	004 Move [X31+48], X28
	005 Move [X31+56], X27
	006 Move [X31+64], X26
	007 Move [X31+72], X25
	008 Move [X31+80], X24
	009 Move [X31+88], X23
	010 Move [X31+96], X22
	011 Move [X31+104], X21
	012 Move [X31+112], X20
	013 Move [X31+120], X19
	014 Move X19, 0xD59000
	015 Move W8, [X19+2080]
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {52}
	020 Move X0, 0xAB7000
	021 Move X0, [X0+608]
	022 Call 0x1C17CF4
	023 Move X0, 0xAB7000
	024 Move X0, [X0+616]
	025 Call 0x1C17CF4
	026 Move X0, 0xAB7000
	027 Move X0, [X0+624]
	028 Call 0x1C17CF4
	029 Move X0, 0xAB7000
	030 Move X0, [X0+632]
	031 Call 0x1C17CF4
	032 Move X0, 0xAB7000
	033 Move X0, [X0+640]
	034 Call 0x1C17CF4
	035 Move X0, 0xAB7000
	036 Move X0, [X0+648]
	037 Call 0x1C17CF4
	038 Move X0, 0xA6C000
	039 Move X0, [X0+1448]
	040 Call 0x1C17CF4
	041 Move X0, 0xAB6000
	042 Move X0, [X0+3424]
	043 Call 0x1C17CF4
	044 Move X0, 0xAB6000
	045 Move X0, [X0+3384]
	046 Call 0x1C17CF4
	047 Move X0, 0xAA6000
	048 Move X0, [X0+616]
	049 Call 0x1C17CF4
	050 Move W8, 1
	051 Move [X19+2080], W8
	052 Move X0, X31
	053 Move [X31+24], W31
	054 Move [X31+20], W31
	055 Call Thread.get_CurrentThread
	056 Compare X0, 0
	057 JumpIfEqual {473}
	058 Move X24, 0xAB6000
	059 Move X24, [X24+3384]
	060 Move W1, 1
	061 Move X2, X31
	062 Call Thread.set_IsBackground, X0, X1
	063 Move X0, [X24]
	064 Move W8, [X0+224]
	065 Compare W8, 0
	066 JumpIfNotEqual {69}
	067 Call 0x1C17DFC
	068 Move X0, [X24]
	069 Move X8, [X0+184]
	070 Move X0, [X8]
	071 Move [X31+28], W31
	072 Add X1, X31, 28
	073 Move X2, X31
	074 Move [X31+8], X0
	075 Call Monitor.Enter, X0, X1
	076 Move X0, [X24]
	077 Move W8, [X0+224]
	078 Compare W8, 0
	079 JumpIfNotEqual {82}
	080 Call 0x1C17DFC
	081 Move X0, [X24]
	082 Move X8, [X0+184]
	083 Add X0, X8, 16
	084 Move W1, 1
	085 Move W2, 1
	086 Move X3, X31
	087 Call Interlocked.CompareExchange, X0, X1, X2
	088 NotImplemented "Instruction CMP not yet implemented."
	089 Move X26, 0xAA6000
	090 Move X27, 0xAB6000
	091 Move X28, 0xAB7000
	092 Move X29, 0xAB7000
	093 Move X20, 0xAB7000
	094 Move X26, [X26+616]
	095 Move X27, [X27+3424]
	096 Move X28, [X28+608]
	097 Move X29, [X29+632]
	098 Move X20, [X20+624]
	099 Move X0, [X24]
	100 Move W8, [X0+224]
	101 Compare W8, 0
	102 JumpIfNotEqual {105}
	103 Call 0x1C17DFC
	104 Move X0, [X24]
	105 Move X8, [X0+184]
	106 Move X0, [X8+24]
	107 Compare X0, 0
	108 JumpIfEqual {413}
	109 Move X1, X31
	110 Call EventWaitHandle.Reset, X0
	111 Move X8, [X24]
	112 Move W9, [X8+224]
	113 Compare W9, 0
	114 JumpIfNotEqual {118}
	115 Move X0, X8
	116 Call 0x1C17DFC
	117 Move X8, [X24]
	118 Move X9, [X8+184]
	119 Move X10, [X9+8]
	120 Compare X10, 0
	121 JumpIfEqual {408}
	122 Move W10, [X10+24]
	123 NotImplemented "Instruction CMP not yet implemented."
	124 Move W10, [X8+224]
	125 Compare W10, 0
	126 JumpIfNotEqual {131}
	127 Move X0, X8
	128 Call 0x1C17DFC
	129 Move X8, [X24]
	130 Move X9, [X8+184]
	131 Move X21, [X9+8]
	132 Move [X31+24], W31
	133 Add X1, X31, 24
	134 Move X0, X21
	135 Move X2, X31
	136 Call Monitor.Enter, X0, X1
	137 Move X0, [X24]
	138 Move W8, [X0+224]
	139 Compare W8, 0
	140 JumpIfNotEqual {143}
	141 Call 0x1C17DFC
	142 Move X0, [X24]
	143 Move X8, [X0+184]
	144 Move X8, [X8+8]
	145 Compare X8, 0
	146 JumpIfEqual {386}
	147 Move X22, [X8+16]
	148 Compare X22, 0
	149 JumpIfEqual {176}
	150 Move W8, [X0+224]
	151 Compare W8, 0
	152 JumpIfNotEqual {155}
	153 Call 0x1C17DFC
	154 Move X0, [X24]
	155 Move X8, [X0+184]
	156 Move X0, [X8+8]
	157 Compare X0, 0
	158 JumpIfEqual {384}
	159 Move X2, [X29]
	160 Move X1, X22
	161 Call LinkedList`1<Object>.Remove, X0, X1
	162 Move X8, [X24]
	163 Move X8, [X8+184]
	164 Move X0, [X8]
	165 Compare X0, 0
	166 JumpIfEqual {385}
	167 Move X2, [X20]
	168 Move X1, X22
	169 Call LinkedList`1<Object>.AddLast, X0, X1
	170 Move X0, [X24]
	171 Move X8, [X0+184]
	172 Move X8, [X8+8]
	173 Compare X8, 0
	174 JumpIfNotEqual {147}
	175 Call 0x1C17F20
	176 Move W19, 7
	177 Move W8, [X31+24]
	178 Compare W8, 0
	179 JumpIfEqual {183}
	180 Move X0, X21
	181 Move X1, X31
	182 Call Monitor.Exit, X0
	183 Compare X22, 0
	184 JumpIfNotEqual {410}
	185 NotImplemented "Instruction CMP not yet implemented."
	186 Compare W19, 0
	187 JumpIfNotEqual {443}
	188 Move X0, X31
	189 Call Environment.get_TickCount
	190 Move W21, W0
	191 Move X0, [X24]
	192 Move W8, [X0+224]
	193 Compare W8, 0
	194 JumpIfNotEqual {197}
	195 Call 0x1C17DFC
	196 Move X0, [X24]
	197 Move X8, [X0+184]
	198 Move X8, [X8]
	199 Compare X8, 0
	200 JumpIfEqual {409}
	201 Move X22, [X8+16]
	202 Move W25, W31
	203 Move W19, W31
	204 Compare X22, 0
	205 JumpIfEqual {277}
	206 Move X0, [X22+40]
	207 Compare X0, 0
	208 JumpIfEqual {392}
	209 Move X8, [X0]
	210 Move X9, [X8+408]
	211 Move X1, [X8+416]
	212 NotImplemented "Instruction BLR not yet implemented."
	213 Compare X0, 0
	214 JumpIfNotEqual {233}
	215 Move X1, [X28]
	216 Move X0, X22
	217 Call LinkedListNode`1<Object>.get_Next, X0
	218 Move X23, X0
	219 Move X0, [X24]
	220 Move W8, [X0+224]
	221 Compare W8, 0
	222 JumpIfNotEqual {225}
	223 Call 0x1C17DFC
	224 Move X0, [X24]
	225 Move X8, [X0+184]
	226 Move X0, [X8]
	227 Compare X0, 0
	228 JumpIfEqual {393}
	229 Move X2, [X29]
	230 Move X1, X22
	231 Call LinkedList`1<Object>.Remove, X0, X1
	232 Move X22, X23
	233 Move X8, [X0]
	234 Move X1, [X27]
	235 Move W10, [X8+304]
	236 Move W9, [X1+304]
	237 NotImplemented "Instruction CMP not yet implemented."
	238 Move X8, [X8+200]
	239 Add X8, X8, X9
	240 NotImplemented "Instruction LDUR not yet implemented."
	241 NotImplemented "Instruction CMP not yet implemented."
	242 Add X1, X31, 20
	243 Call TimerQueue.Fire, X0, X1
	244 Move TEMP, X0
	245 And TEMP, TEMP, 1
	246 Compare TEMP, 1
	247 JumpIfNotEqual {273}
	248 Move W23, [X31+20]
	249 Move TEMP, X25
	250 And TEMP, TEMP, 1
	251 Compare TEMP, 1
	252 JumpIfNotEqual {270}
	253 Move X0, [X24]
	254 Move W8, [X0+224]
	255 Compare W8, 0
	256 JumpIfNotEqual {258}
	257 Call 0x1C17DFC
	258 NotImplemented "Instruction CMP not yet implemented."
	259 NotImplemented "Instruction CSET not yet implemented."
	260 NotImplemented "Instruction CMP not yet implemented."
	261 NotImplemented "Instruction CSET not yet implemented."
	262 NotImplemented "Instruction CMP not yet implemented."
	263 Xor W8, W8, W9
	264 NotImplemented "Instruction CSET not yet implemented."
	265 Xor W8, W9, W8
	266 Move TEMP, X8
	267 And TEMP, TEMP, 1
	268 Compare TEMP, 1
	269 JumpIfNotEqual {272}
	270 Move W25, 1
	271 Move W19, W23
	272 Move W25, 1
	273 Move X1, [X28]
	274 Move X0, X22
	275 Call LinkedListNode`1<Object>.get_Next, X0
	276 Move X22, X0
	277 Move X0, X31
	278 Call Environment.get_TickCount
	279 Move TEMP, X25
	280 And TEMP, TEMP, 1
	281 Compare TEMP, 1
	282 JumpIfNotEqual {313}
	283 Move W22, W0
	284 Move X0, [X24]
	285 Move W8, [X0+224]
	286 Compare W8, 0
	287 JumpIfNotEqual {289}
	288 Call 0x1C17DFC
	289 NotImplemented "Instruction CMP not yet implemented."
	290 NotImplemented "Instruction CSET not yet implemented."
	291 Subtract W22, W19, W22
	292 NotImplemented "Instruction CSET not yet implemented."
	293 NotImplemented "Instruction CMP not yet implemented."
	294 Xor W8, W8, W9
	295 NotImplemented "Instruction CSET not yet implemented."
	296 Xor W8, W9, W8
	297 Move TEMP, X8
	298 And TEMP, TEMP, 1
	299 Compare TEMP, 1
	300 JumpIfNotEqual {314}
	301 Move X8, 0xA6B000
	302 Move X8, [X8+1448]
	303 Move X0, [X8]
	304 Move W8, [X0+224]
	305 Compare W8, 0
	306 JumpIfNotEqual {308}
	307 Call 0x1C17DFC
	308 Or W1, W31, 0x7FFFFFF0
	309 Move W0, W22
	310 Move X2, X31
	311 Call Math.Min, X0, X1
	312 Add W21, W0, 15
	313 Move W21, 0x7530
	314 Move W21, W31
	315 Move X0, [X24]
	316 Move W8, [X0+224]
	317 Compare W8, 0
	318 JumpIfNotEqual {321}
	319 Call 0x1C17DFC
	320 Move X0, [X24]
	321 Move X8, [X26]
	322 Move X9, [X0+184]
	323 Move W10, [X8+224]
	324 Move X22, [X9+40]
	325 Compare W10, 0
	326 JumpIfNotEqual {329}
	327 Move X0, X8
	328 Call 0x1C17DFC
	329 Move X0, X22
	330 Move W1, W21
	331 Move W2, W31
	332 Move X3, X31
	333 Call WaitHandle.WaitAny, X0, X1, X2
	334 Compare W0, 0
	335 JumpIfEqual {443}
	336 NotImplemented "Instruction CMP not yet implemented."
	337 NotImplemented "Instruction CSET not yet implemented."
	338 Or W8, W25, W8
	339 Move TEMP, X8
	340 And TEMP, TEMP, 1
	341 Compare TEMP, 1
	342 JumpIfEqual {111}
	343 Move X0, [X24]
	344 Move W8, [X0+224]
	345 Compare W8, 0
	346 JumpIfNotEqual {349}
	347 Call 0x1C17DFC
	348 Move X0, [X24]
	349 Move X8, [X0+184]
	350 Add X0, X8, 16
	351 Move W2, 1
	352 Move W1, W31
	353 Move X3, X31
	354 Call Interlocked.CompareExchange, X0, X1, X2
	355 Move X8, [X24]
	356 Move X8, [X8+184]
	357 Move X0, [X8+24]
	358 Compare X0, 0
	359 JumpIfEqual {412}
	360 Move X8, [X0]
	361 Move X9, [X8+440]
	362 Move X3, [X8+448]
	363 Move W1, W31
	364 Move W2, W31
	365 NotImplemented "Instruction BLR not yet implemented."
	366 Move TEMP, X0
	367 And TEMP, TEMP, 1
	368 Compare TEMP, 1
	369 JumpIfNotEqual {443}
	370 Move X0, [X24]
	371 Move W8, [X0+224]
	372 Compare W8, 0
	373 JumpIfNotEqual {376}
	374 Call 0x1C17DFC
	375 Move X0, [X24]
	376 Move X8, [X0+184]
	377 Add X0, X8, 16
	378 Move W1, 1
	379 Move W2, W31
	380 Move X3, X31
	381 Call Interlocked.CompareExchange, X0, X1, X2
	382 Compare W0, 0
	383 JumpIfEqual {111}
	384 Call 0x1C17F20
	385 Call 0x1C17F20
	386 Call 0x1C17F20
	387 NotImplemented "Instruction CMP not yet implemented."
	388 Call 0x3EB2AD0
	389 Move X22, [X0]
	390 Call 0x3EB2AE0
	391 Move W19, W31
	392 Call 0x1C17F20
	393 Call 0x1C17F20
	394 Move [X31], X1
	395 Move X23, X0
	396 Move X22, X31
	397 Move W8, [X31+24]
	398 Compare W8, 0
	399 JumpIfEqual {403}
	400 Move X0, X21
	401 Move X1, X31
	402 Call Monitor.Exit, X0
	403 Move X1, [X31]
	404 Move X0, X23
	405 Compare X22, 0
	406 JumpIfEqual {416}
	407 Call 0x1C181E0
	408 Call 0x1C17F20
	409 Call 0x1C17F20
	410 Move X0, X22
	411 Call 0x1C17F18
	412 Call 0x1C17F20
	413 Call 0x1C17F20
	414 Move X23, X0
	415 Move [X31], X1
	416 NotImplemented "Instruction CMP not yet implemented."
	417 Move W19, 1
	418 Call 0x3EB2AD0
	419 Move X21, X0
	420 Move X0, 0xA6B000
	421 Move X0, [X0+2000]
	422 Call 0x1C17D08
	423 Move X8, [X21]
	424 Move X1, [X8]
	425 Call 0x1C18270
	426 Move TEMP, X0
	427 And TEMP, TEMP, 1
	428 Compare TEMP, 1
	429 JumpIfNotEqual {476}
	430 Move X21, [X21]
	431 Call 0x3EB2AE0
	432 Move X0, X21
	433 Call NclUtilities.IsFatal, X0
	434 Move TEMP, X0
	435 And TEMP, TEMP, 1
	436 Compare TEMP, 1
	437 JumpIfEqual {484}
	438 Move X0, X31
	439 Call Logging.get_On
	440 Move W0, 1000
	441 Move X1, X31
	442 Call Thread.Sleep, X0
	443 Move X21, X31
	444 Move W8, [X31+28]
	445 Compare W8, 0
	446 JumpIfEqual {450}
	447 Move X0, [X31+8]
	448 Move X1, X31
	449 Call Monitor.Exit, X0
	450 Compare X21, 0
	451 JumpIfNotEqual {474}
	452 Move X20, [X31+112]
	453 Move X19, [X31+120]
	454 Move X22, [X31+96]
	455 Move X21, [X31+104]
	456 Move X24, [X31+80]
	457 Move X23, [X31+88]
	458 Move X26, [X31+64]
	459 Move X25, [X31+72]
	460 Move X28, [X31+48]
	461 Move X27, [X31+56]
	462 Move X29, [X31+32]
	463 Move X30, [X31+40]
	464 Add X31, X31, 128
	465 Return 
	466 Move X21, X1
	467 Move X20, X0
	468 NotImplemented "Instruction CMP not yet implemented."
	469 Move X0, X20
	470 Call 0x3EB2AD0
	471 Move X21, [X0]
	472 Call 0x3EB2AE0
	473 Call 0x1C17F20
	474 Move X0, X21
	475 Call 0x1C17F18
	476 Move W0, 8
	477 Call 0x3EB2AF0
	478 Move X8, [X21]
	479 Move [X0], X8
	480 Move X1, 0x82C000
	481 Add X1, X1, 3672
	482 Move X2, X31
	483 Call 0x3EB2B00
	484 Move X0, X21
	485 Call 0x1C17F18
	486 Move X0, X22
	487 Call 0x1C17F18
	488 Move X21, X31
	489 Move X20, X0
	490 Move W8, [X31+28]
	491 Compare W8, 0
	492 JumpIfEqual {496}
	493 Move X0, [X31+8]
	494 Move X1, X31
	495 Call Monitor.Exit, X0
	496 Compare X21, 0
	497 JumpIfNotEqual {500}
	498 Move X0, X20
	499 Call 0x1D2D690
	500 Move X0, X21
	501 Call 0x1C17F18
	502 Call 0x1991590
	503 Move X20, X0
	504 Move X20, X0
	505 Move W21, W1
	506 Call 0x3EB2AE0
	507 Call 0x1991590
	508 Move X20, X0
	509 Move W19, 1
	510 Move W21, W1

Method: System.Void StopTimerThread()

Disassembly:
	0x03689634 LDP X26, X25, [X31 + 0x30]
	0x03689638 LDP X28, X27, [X31 + 0x20]
	0x0368963C LDP X29, X30, [X31 + 0x10]
	0x03689640 ADD X31, X31, 0x70
	0x03689644 RET
	0x03689648 LDR X0, [X19 + 0x80]
	0x0368964C CBZ X0, 0x36896D0
	0x03689650 LDR W8, [X0 + 0x10]
	0x03689654 CMP W8, 0x3
	0x03689658 B.LT 0x3689698
	0x0368965C MOV W1, W31
	0x03689660 MOV X2, X31
	0x03689664 BL 0x3222A1C
	0x03689668 AND W8, W0, 0xFFFF
	0x0368966C CMP W8, 0x22
	0x03689670 B.NE 0x3689698
	0x03689674 LDR X0, [X19 + 0x80]
	0x03689678 CBZ X0, 0x3689DC4
	0x0368967C LDR W8, [X0 + 0x10]
	0x03689680 MOV X2, X31
	0x03689684 SUB W1, W8, 0x1
	0x03689688 BL 0x3222A1C
	0x0368968C AND W8, W0, 0xFFFF
	0x03689690 CMP W8, 0x22
	0x03689694 B.EQ 0x3689748
	0x03689698 LDR X0, [X29]
	0x0368969C LDR X28, [X19 + 0x80]
	0x036896A0 LDR W8, [X0 + 0xE0]
	0x036896A4 CBNZ W8, 0x36896AC
	0x036896A8 BL 0x1C16DFC
	0x036896AC CBZ X28, 0x3689DC4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xD58000
	005 Move X19, 0xAB5000
	006 Move W8, [X20+2081]
	007 Move X19, [X19+3384]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xAB5000
	013 Move X0, [X0+3384]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+2081], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move W1, 2
	025 Move X2, X31
	026 Add X0, X8, 16
	027 Call Interlocked.Exchange, X0, X1
	028 Move X8, [X19]
	029 Move X8, [X8+184]
	030 Move X0, [X8+32]
	031 Compare X0, 0
	032 JumpIfEqual {39}
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move X1, X31
	036 Move X30, [X31+32]
	037 Call EventWaitHandle.Set, X0
	038 Return 
	039 Call 0x1C17F20

Method: System.Boolean IsTickBetween(System.Int32 start, System.Int32 end, System.Int32 comparand)

Disassembly:
	0x03689610 LDR X1, [X8 + 0x8]
	0x03689614 BL 0x322BE8C
	0x03689618 ADDS W31, W0, 0x1
	0x0368961C B.EQ 0x3689648
	0x03689620 TBNZ X20, 0x0, 0x3689DAC
	0x03689624 MOV W0, W31
	0x03689628 LDP X20, X19, [X31 + 0x60]
	0x0368962C LDP X22, X21, [X31 + 0x50]
	0x03689630 LDP X24, X23, [X31 + 0x40]

ISIL:
	001 NotImplemented "Instruction CMP not yet implemented."
	002 NotImplemented "Instruction CSET not yet implemented."
	003 NotImplemented "Instruction CMP not yet implemented."
	004 NotImplemented "Instruction CSET not yet implemented."
	005 NotImplemented "Instruction CMP not yet implemented."
	006 Xor W8, W8, W9
	007 NotImplemented "Instruction CSET not yet implemented."
	008 Xor W0, W9, W8
	009 Return X0

Method: System.Void OnDomainUnload(System.Object sender, System.EventArgs e)

Disassembly:
	0x036896B0 LDR X8, [X29]
	0x036896B4 MOV X0, X28
	0x036896B8 MOV X2, X31
	0x036896BC LDR X8, [X8 + 0xB8]
	0x036896C0 LDR X1, [X8 + 0x10]
	0x036896C4 BL 0x322BE8C
	0x036896C8 ADDS W31, W0, 0x1
	0x036896CC B.EQ 0x3689748
	0x036896D0 TBZ X20, 0x0, 0x3689624
	0x036896D4 ADRP X0, 0xA6A000
	0x036896D8 LDR X0, [X0 + 0x9D0]
	0x036896DC BL 0x1C16D08
	0x036896E0 MOVZ W1, 0x2
	0x036896E4 BL 0x1C16D6C
	0x036896E8 CBZ X0, 0x3689DC4
	0x036896EC MOV X20, X0
	0x036896F0 ADRP X0, 0xA96000
	0x036896F4 LDR X0, [X0 + 0xE8]
	0x036896F8 BL 0x1C16D08
	0x036896FC CBZ X0, 0x3689710
	0x03689700 LDR X8, [X20]
	0x03689704 LDR X1, [X8 + 0x40]
	0x03689708 BL 0x1C16E00
	0x0368970C CBZ X0, 0x3689DEC
	0x03689710 ADRP X0, 0xA96000
	0x03689714 LDR X0, [X0 + 0xE8]
	0x03689718 BL 0x1C16D08
	0x0368971C LDR W8, [X20 + 0x18]
	0x03689720 CBZ W8, 0x3689E0C
	0x03689724 STR X0, [X20 + 0x20]
	0x03689728 ADRP X0, 0xAB5000
	0x0368972C LDR X22, [X19 + 0x80]
	0x03689730 LDR X0, [X0 + 0x2B0]
	0x03689734 BL 0x1C16D08
	0x03689738 MOV X21, X0
	0x0368973C CBZ X22, 0x3689E2C
	0x03689740 LDR X19, [X19 + 0x80]
	0x03689744 B 0x3689E44
	0x03689748 LDR X0, [X19 + 0x10]
	0x0368974C CBZ X0, 0x368982C
	0x03689750 LDR W8, [X0 + 0x10]
	0x03689754 CMP W8, 0x3
	0x03689758 B.LT 0x3689798
	0x0368975C MOV W1, W31
	0x03689760 MOV X2, X31
	0x03689764 BL 0x3222A1C
	0x03689768 AND W8, W0, 0xFFFF
	0x0368976C CMP W8, 0x22
	0x03689770 B.NE 0x3689798

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0xD58000
	005 Move X20, 0xAB5000
	006 Move W8, [X19+2082]
	007 Move X20, [X20+3384]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xAB5000
	013 Move X0, [X0+3384]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+2082], W8
	017 Move X0, [X20]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {22}
	021 Call 0x1C17DFC
	022 Call TimerThread.StopTimerThread
	023 Move X20, [X31+16]
	024 Move X19, [X31+24]
	025 Move X30, [X31+32]
	026 Return 
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Move X19, X0
	029 Move X0, X19
	030 Call 0x3EB2AD0
	031 Move X19, X0
	032 Move X0, 0xA71000
	033 Move X0, [X0+3264]
	034 Call 0x1C17D08
	035 Move X8, [X19]
	036 Move X1, [X8]
	037 Call 0x1C18270
	038 Move TEMP, X0
	039 And TEMP, TEMP, 1
	040 Compare TEMP, 1
	041 JumpIfNotEqual {47}
	042 Move X20, [X31+16]
	043 Move X19, [X31+24]
	044 Move X30, [X31+32]
	045 Call 0x3EB2AE0
	046 Return 
	047 Move W0, 8
	048 Call 0x3EB2AF0
	049 Move X8, [X19]
	050 Move [X0], X8
	051 Move X1, 0x82C000
	052 Add X1, X1, 3672
	053 Move X2, X31
	054 Call 0x3EB2B00
	055 Move X19, X0
	056 Call 0x3EB2AE0
	057 Move X0, X19
	058 Call 0x1D2D690
	059 Call 0x1991590

