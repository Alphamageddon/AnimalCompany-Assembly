Type: System.Net.WebProxy

Method: System.Void .ctor()

Disassembly:
	0x03695724 LDP X20, X19, [X31 + 0x20]
	0x03695728 LDP X22, X21, [X31 + 0x10]
	0x0369572C LDR X1, [X8]
	0x03695730 MOVZ W2, 0x1
	0x03695734 MOV X3, X31

ISIL:
	001 Move X1, X31
	002 Move W2, W31
	003 Move X3, X31
	004 Move X4, X31

Method: System.Void .ctor(System.Uri Address, System.Boolean BypassOnLocal, System.String[] BypassList, System.Net.ICredentials Credentials)

Disassembly:
	0x03695738 LDP X30, X23, [X31], #0x30
	0x0369573C B 0x32A8CA8
	0x03695740 LDP X20, X19, [X31 + 0x20]
	0x03695744 LDP X22, X21, [X31 + 0x10]
	0x03695748 LDP X30, X23, [X31], #0x30
	0x0369574C RET
	0x03695750 BL 0x1C16F20
	0x03695754 LDR X0, [X0 + 0x40]
	0x03695758 RET
	0x0369575C STR X30, [X31 - 0x20]!
	0x03695760 STP X20, X19, [X31 + 0x10]
	0x03695764 ADRP X19, 0xD4B000
	0x03695768 ADRP X20, 0xAA9000
	0x0369576C LDRB W8, [X19 + 0x879]
	0x03695770 LDR X20, [X20 + 0x560]
	0x03695774 TBNZ X8, 0x0, 0x369578C
	0x03695778 ADRP X0, 0xAA9000
	0x0369577C LDR X0, [X0 + 0x560]
	0x03695780 BL 0x1C16CF4
	0x03695784 MOVZ W8, 0x1
	0x03695788 STRB W8, [X19 + 0x879]
	0x0369578C LDR X0, [X20]
	0x03695790 BL 0x1C16F10
	0x03695794 MOV X1, X31
	0x03695798 MOV X19, X0
	0x0369579C BL 0x33BDD8C
	0x036957A0 MOVZ W8, 0x1
	0x036957A4 STRB W8, [X19 + 0x12]
	0x036957A8 STRB W8, [X19 + 0x10]
	0x036957AC MOV X0, X19
	0x036957B0 LDP X20, X19, [X31 + 0x10]
	0x036957B4 LDR X30, [X31], #0x20
	0x036957B8 RET
	0x036957BC STR X30, [X31 - 0x20]!
	0x036957C0 STP X20, X19, [X31 + 0x10]
	0x036957C4 AND W20, W1, 0x1
	0x036957C8 MOV X1, X31
	0x036957CC MOV X19, X0
	0x036957D0 BL 0x33BDD8C
	0x036957D4 MOVZ W8, 0x1
	0x036957D8 STRB W20, [X19 + 0x12]
	0x036957DC STRB W8, [X19 + 0x10]
	0x036957E0 LDP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0xD4C000
	009 Move W8, [X24+2158]
	010 Move X19, X4
	011 Move X21, X3
	012 Move X22, X1
	013 Move X20, X0
	014 And W23, W2, 1
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {24}
	019 Move X0, 0xA8C000
	020 Move X0, [X0+2976]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X24+2158], W8
	024 Move X0, X20
	025 Move X1, X31
	026 Call Object..ctor, X0
	027 Move [X20+24], X22
	028 Move [X20+17], W23
	029 Compare X21, 0
	030 JumpIfEqual {43}
	031 Move X8, 0xA8C000
	032 Move X8, [X8+2976]
	033 Move X0, [X8]
	034 Call 0x1C17F10
	035 Move X1, X21
	036 Move X2, X31
	037 Move X22, X0
	038 Call ArrayList..ctor, X0, X1
	039 Move W1, 1
	040 Move X0, X20
	041 Move [X20+32], X22
	042 Call WebProxy.UpdateRegExList, X0, X1
	043 Move W8, 1
	044 Move [X20+40], X19
	045 Move [X20+18], W8
	046 Move X20, [X31+48]
	047 Move X19, [X31+56]
	048 Move X22, [X31+32]
	049 Move X21, [X31+40]
	050 Move X24, [X31+16]
	051 Move X23, [X31+24]
	052 Move X30, [X31+64]
	053 Return 

Method: System.Net.ICredentials get_Credentials()

Disassembly:
	0x03695A18 CBNZ X21, 0x3695A40
	0x03695A1C AND W0, W22, 0x1

ISIL:
	001 Move X0, [X0+40]
	002 Return X0

Method: System.Boolean get_UseDefaultCredentials()

Disassembly:
	0x03695A20 LDP X20, X19, [X31 + 0x40]
	0x03695A24 LDP X22, X21, [X31 + 0x30]
	0x03695A28 LDP X24, X23, [X31 + 0x20]
	0x03695A2C LDP X26, X25, [X31 + 0x10]
	0x03695A30 LDR X30, [X31], #0x50
	0x03695A34 RET
	0x03695A38 BL 0x1C16F20
	0x03695A3C BL 0x1C16F20
	0x03695A40 MOV X0, X21
	0x03695A44 BL 0x1C16F18
	0x03695A48 B 0x3695A5C
	0x03695A4C MOV X20, X0
	0x03695A50 MOVZ W24, 0x1
	0x03695A54 B 0x3695A60
	0x03695A58 B 0x3695A5C
	0x03695A5C MOV X20, X0
	0x03695A60 CMP W1, 0x1
	0x03695A64 B.NE 0x3695A7C
	0x03695A68 MOV X0, X20
	0x03695A6C BL 0x3EB1AD0
	0x03695A70 LDR X21, [X0]
	0x03695A74 BL 0x3EB1AE0
	0x03695A78 B 0x36959B8
	0x03695A7C MOV X21, X31
	0x03695A80 B 0x3695A88
	0x03695A84 MOV X20, X0
	0x03695A88 CBZ X19, 0x3695AE4
	0x03695A8C LDR X8, [X19]
	0x03695A90 LDR X1, [X23]
	0x03695A94 LDRH W9, [X8 + 0x12E]
	0x03695A98 CBZ X9, 0x3695ABC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xD4C000
	005 Move W8, [X20+2159]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xAA9000
	012 Move X0, [X0+3072]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2159], W8
	016 Move X8, [X19+40]
	017 Compare X8, 0
	018 JumpIfEqual {26}
	019 Move X10, 0xAA9000
	020 Move X10, [X10+3072]
	021 Move X9, [X8]
	022 Move X8, [X10]
	023 Move W11, [X9+304]
	024 Move W10, [X8+304]
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move W0, W31
	027 Move X9, [X9+200]
	028 Add X9, X9, X10
	029 NotImplemented "Instruction LDUR not yet implemented."
	030 NotImplemented "Instruction CMP not yet implemented."
	031 NotImplemented "Instruction CSET not yet implemented."
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X30, [X31+32]
	035 Return X0

Method: System.Void set_UseDefaultCredentials(System.Boolean value)

Disassembly:
	0x03695A9C LDR X10, [X8 + 0xB0]
	0x03695AA0 ADD X10, X10, 0x8
	0x03695AA4 LDUR X11, [X10 - 0x8]
	0x03695AA8 CMP X11, X1
	0x03695AAC B.EQ 0x3695ACC
	0x03695AB0 SUBS X9, X9, 0x1
	0x03695AB4 ADD X10, X10, 0x10
	0x03695AB8 B.NE 0x3695AA4
	0x03695ABC MOV X0, X19
	0x03695AC0 MOV W2, W31
	0x03695AC4 BL 0x1C5C788
	0x03695AC8 B 0x3695AD8
	0x03695ACC LDRSW X9, [X10]
	0x03695AD0 ADD X8, X8, X9, 0x4, LSL
	0x03695AD4 ADD X0, X8, 0x138
	0x03695AD8 LDP X8, X1, [X0]
	0x03695ADC MOV X0, X19
	0x03695AE0 BLR X8
	0x03695AE4 CBNZ X21, 0x3695AF0
	0x03695AE8 MOV X0, X20
	0x03695AEC BL 0x1D2C690
	0x03695AF0 MOV X0, X21
	0x03695AF4 BL 0x1C16F18
	0x03695AF8 BL 0x1990590
	0x03695AFC STR X30, [X31 - 0x20]!
	0x03695B00 STP X20, X19, [X31 + 0x10]
	0x03695B04 ADRP X20, 0xD4B000
	0x03695B08 LDRB W8, [X20 + 0x87D]
	0x03695B0C MOV X19, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X0
	005 Move TEMP, X1
	006 And TEMP, TEMP, 1
	007 Compare TEMP, 1
	008 JumpIfNotEqual {28}
	009 Move X20, 0xD4C000
	010 Move W8, [X20+2335]
	011 Compare W8, 0
	012 JumpIfNotEqual {18}
	013 Move X0, 0xAA9000
	014 Move X0, [X0+3072]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X20+2335], W8
	018 Move X20, 0xAA9000
	019 Move X20, [X20+3072]
	020 Move X0, [X20]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {26}
	024 Call 0x1C17DFC
	025 Move X0, [X20]
	026 Move X8, [X0+184]
	027 Move X8, [X8]
	028 Move X8, X31
	029 Compare X19, 0
	030 JumpIfEqual {36}
	031 Move [X19+40], X8
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X30, [X31+32]
	035 Return 
	036 Call 0x1C17F20

Method: System.Uri GetProxy(System.Uri destination)

Disassembly:
	0x03695B10 TBNZ X8, 0x0, 0x3695B34
	0x03695B14 ADRP X0, 0xA60000
	0x03695B18 LDR X0, [X0 + 0xA28]
	0x03695B1C BL 0x1C16CF4
	0x03695B20 ADRP X0, 0xA67000
	0x03695B24 LDR X0, [X0 + 0x7A8]
	0x03695B28 BL 0x1C16CF4
	0x03695B2C MOVZ W8, 0x1
	0x03695B30 STRB W8, [X20 + 0x87D]
	0x03695B34 CBZ X19, 0x3695B88
	0x03695B38 LDR W8, [X19 + 0x10]
	0x03695B3C CBZ W8, 0x3695B88
	0x03695B40 ADRP X8, 0xA67000
	0x03695B44 LDR X8, [X8 + 0x7A8]
	0x03695B48 MOV X1, X19
	0x03695B4C MOV X2, X31
	0x03695B50 LDR X0, [X8]
	0x03695B54 BL 0x321B938
	0x03695B58 ADRP X8, 0xA60000
	0x03695B5C LDR X8, [X8 + 0xA28]
	0x03695B60 MOV X19, X0
	0x03695B64 LDR X8, [X8]
	0x03695B68 MOV X0, X8
	0x03695B6C BL 0x1C16F10
	0x03695B70 MOV X1, X19
	0x03695B74 MOV X2, X31
	0x03695B78 MOV X20, X0
	0x03695B7C BL 0x36196A8
	0x03695B80 MOV X0, X20
	0x03695B84 B 0x3695B8C
	0x03695B88 MOV X0, X31
	0x03695B8C LDP X20, X19, [X31 + 0x10]
	0x03695B90 LDR X30, [X31], #0x20
	0x03695B94 RET
	0x03695B98 MOV W0, W31
	0x03695B9C STR X31, [X2]
	0x03695BA0 RET
	0x03695BA4 STR X30, [X31 - 0x20]!
	0x03695BA8 STP X20, X19, [X31 + 0x10]
	0x03695BAC ADRP X19, 0xD4B000
	0x03695BB0 ADRP X20, 0xA5E000
	0x03695BB4 LDRB W8, [X19 + 0x87E]
	0x03695BB8 LDR X20, [X20 + 0xAC8]
	0x03695BBC TBNZ X8, 0x0, 0x3695D48
	0x03695BC0 ADRP X0, 0xAA9000
	0x03695BC4 LDR X0, [X0 + 0x568]
	0x03695BC8 BL 0x1C16CF4
	0x03695BCC ADRP X0, 0xA5E000
	0x03695BD0 LDR X0, [X0 + 0xAC8]
	0x03695BD4 BL 0x1C16CF4
	0x03695BD8 ADRP X0, 0xAA5000
	0x03695BDC LDR X0, [X0 + 0x9D0]
	0x03695BE0 BL 0x1C16CF4
	0x03695BE4 ADRP X0, 0xAA5000
	0x03695BE8 LDR X0, [X0 + 0x9D8]
	0x03695BEC BL 0x1C16CF4
	0x03695BF0 ADRP X0, 0xAA5000
	0x03695BF4 LDR X0, [X0 + 0x9E0]
	0x03695BF8 BL 0x1C16CF4
	0x03695BFC ADRP X0, 0xAA5000
	0x03695C00 LDR X0, [X0 + 0x9F8]
	0x03695C04 BL 0x1C16CF4
	0x03695C08 ADRP X0, 0xAA5000
	0x03695C0C LDR X0, [X0 + 0xA08]
	0x03695C10 BL 0x1C16CF4
	0x03695C14 ADRP X0, 0xAA5000
	0x03695C18 LDR X0, [X0 + 0xA10]
	0x03695C1C BL 0x1C16CF4
	0x03695C20 ADRP X0, 0xAA5000
	0x03695C24 LDR X0, [X0 + 0xA18]
	0x03695C28 BL 0x1C16CF4
	0x03695C2C ADRP X0, 0xA67000
	0x03695C30 LDR X0, [X0 + 0xD70]
	0x03695C34 BL 0x1C16CF4
	0x03695C38 ADRP X0, 0xAA5000
	0x03695C3C LDR X0, [X0 + 0x6D0]
	0x03695C40 BL 0x1C16CF4
	0x03695C44 ADRP X0, 0xAA5000
	0x03695C48 LDR X0, [X0 + 0xA28]
	0x03695C4C BL 0x1C16CF4
	0x03695C50 ADRP X0, 0xAA5000
	0x03695C54 LDR X0, [X0 + 0x250]
	0x03695C58 BL 0x1C16CF4
	0x03695C5C ADRP X0, 0xAA5000
	0x03695C60 LDR X0, [X0 + 0xA38]
	0x03695C64 BL 0x1C16CF4
	0x03695C68 ADRP X0, 0xAA5000
	0x03695C6C LDR X0, [X0 + 0xA48]
	0x03695C70 BL 0x1C16CF4
	0x03695C74 ADRP X0, 0xA99000
	0x03695C78 LDR X0, [X0 + 0x988]
	0x03695C7C BL 0x1C16CF4
	0x03695C80 ADRP X0, 0xAA9000
	0x03695C84 LDR X0, [X0]
	0x03695C88 BL 0x1C16CF4
	0x03695C8C ADRP X0, 0xAA5000
	0x03695C90 LDR X0, [X0 + 0x190]
	0x03695C94 BL 0x1C16CF4
	0x03695C98 ADRP X0, 0xAA5000
	0x03695C9C LDR X0, [X0 + 0xA60]
	0x03695CA0 BL 0x1C16CF4
	0x03695CA4 ADRP X0, 0xAA5000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xD4C000
	007 Move X22, 0xA61000
	008 Move W8, [X21+2160]
	009 Move X22, [X22+2600]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xA61000
	017 Move X0, [X0+2600]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2160], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move X0, X19
	027 Move X1, X31
	028 Move X2, X31
	029 Call Uri.op_Equality, X0, X1
	030 Move TEMP, X0
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfEqual {102}
	034 Move X21, 0xD4C000
	035 Move W8, [X21+2170]
	036 Move TEMP, X8
	037 And TEMP, TEMP, 1
	038 Compare TEMP, 1
	039 JumpIfEqual {48}
	040 Move X0, 0xA62000
	041 Move X0, [X0+600]
	042 Call 0x1C17CF4
	043 Move X0, 0xA86000
	044 Move X0, [X0+1344]
	045 Call 0x1C17CF4
	046 Move W8, 1
	047 Move [X21+2170], W8
	048 Move X0, X20
	049 Move X1, X19
	050 Call WebProxy.IsBypassedManual, X0, X1
	051 Move TEMP, X0
	052 And TEMP, TEMP, 1
	053 Compare TEMP, 1
	054 JumpIfEqual {95}
	055 Move X21, [X20+56]
	056 Compare X21, 0
	057 JumpIfEqual {77}
	058 Compare X19, 0
	059 JumpIfEqual {120}
	060 Move X0, X19
	061 Move X1, X31
	062 Call Uri.get_Scheme, X0
	063 Move X8, [X21]
	064 Move X1, X0
	065 Move X0, X21
	066 Move X9, [X8+728]
	067 Move X2, [X8+736]
	068 NotImplemented "Instruction BLR not yet implemented."
	069 Move X8, [X22]
	070 Compare X0, 0
	071 JumpIfEqual {76}
	072 Move X9, [X0]
	073 Move W10, [X8+304]
	074 Move W11, [X9+304]
	075 NotImplemented "Instruction CMP not yet implemented."
	076 Move X20, X31
	077 Move X20, [X20+24]
	078 Move X8, [X22]
	079 Move X9, [X9+200]
	080 Add X9, X9, X10
	081 NotImplemented "Instruction LDUR not yet implemented."
	082 NotImplemented "Instruction CMP not yet implemented."
	083 NotImplemented "Instruction CSEL not yet implemented."
	084 Move W9, [X8+224]
	085 Compare W9, 0
	086 JumpIfNotEqual {89}
	087 Move X0, X8
	088 Call 0x1C17DFC
	089 Move X0, X20
	090 Move X1, X31
	091 Move X2, X31
	092 Call Uri.op_Inequality, X0, X1
	093 And W31, W0, 1
	094 NotImplemented "Instruction CSEL not yet implemented."
	095 Move X0, X19
	096 Move X20, [X31+32]
	097 Move X19, [X31+40]
	098 Move X22, [X31+16]
	099 Move X21, [X31+24]
	100 Move X30, [X31+48]
	101 Return X0
	102 Move X0, 0xA64000
	103 Move X0, [X0+1320]
	104 Call 0x1C17D08
	105 Call 0x1C17F10
	106 Move X19, X0
	107 Move X0, 0xA8E000
	108 Move X0, [X0+632]
	109 Call 0x1C17D08
	110 Move X1, X0
	111 Move X0, X19
	112 Move X2, X31
	113 Call ArgumentNullException..ctor, X0, X1
	114 Move X0, 0xAAA000
	115 Move X0, [X0+1312]
	116 Call 0x1C17D08
	117 Move X1, X0
	118 Move X0, X19
	119 Call 0x1C17DEC
	120 Call 0x1C17F20

Method: System.Void UpdateRegExList(System.Boolean canThrow)

Disassembly:
	0x036957E4 LDR X30, [X31], #0x20
	0x036957E8 RET
	0x036957EC MOV W0, W31
	0x036957F0 STR X31, [X2]
	0x036957F4 RET
	0x036957F8 STR X30, [X31 - 0x50]!
	0x036957FC STP X26, X25, [X31 + 0x10]
	0x03695800 STP X24, X23, [X31 + 0x20]
	0x03695804 STP X22, X21, [X31 + 0x30]
	0x03695808 STP X20, X19, [X31 + 0x40]
	0x0369580C ADRP X21, 0xD4B000
	0x03695810 LDRB W8, [X21 + 0x87C]
	0x03695814 MOV W20, W1
	0x03695818 MOV X19, X0
	0x0369581C TBNZ X8, 0x0, 0x3695858
	0x03695820 ADRP X0, 0xA5E000
	0x03695824 LDR X0, [X0 + 0xE00]
	0x03695828 BL 0x1C16CF4
	0x0369582C ADRP X0, 0xA5E000
	0x03695830 LDR X0, [X0 + 0xF70]
	0x03695834 BL 0x1C16CF4
	0x03695838 ADRP X0, 0xA5E000
	0x0369583C LDR X0, [X0 + 0xF78]
	0x03695840 BL 0x1C16CF4
	0x03695844 ADRP X0, 0xA5E000
	0x03695848 LDR X0, [X0 + 0xE18]
	0x0369584C BL 0x1C16CF4
	0x03695850 MOVZ W8, 0x1
	0x03695854 STRB W8, [X21 + 0x87C]
	0x03695858 CBZ X19, 0x3695A3C
	0x0369585C ADRP X10, 0xA5E000
	0x03695860 LDR X8, [X19]
	0x03695864 LDR X10, [X10 + 0xF70]
	0x03695868 LDRH W9, [X8 + 0x12E]
	0x0369586C LDR X1, [X10]
	0x03695870 CBZ X9, 0x3695894
	0x03695874 LDR X10, [X8 + 0xB0]
	0x03695878 ADD X10, X10, 0x8
	0x0369587C LDUR X11, [X10 - 0x8]
	0x03695880 CMP X11, X1
	0x03695884 B.EQ 0x36958A4
	0x03695888 SUBS X9, X9, 0x1
	0x0369588C ADD X10, X10, 0x10
	0x03695890 B.NE 0x369587C
	0x03695894 MOV X0, X19
	0x03695898 MOV W2, W31
	0x0369589C BL 0x1C5C788
	0x036958A0 B 0x36958B0
	0x036958A4 LDRSW X9, [X10]
	0x036958A8 ADD X8, X8, X9, 0x4, LSL
	0x036958AC ADD X0, X8, 0x138
	0x036958B0 LDP X8, X1, [X0]
	0x036958B4 ADRP X25, 0xA5E000
	0x036958B8 ADRP X26, 0xA5E000
	0x036958BC ADRP X23, 0xA5E000
	0x036958C0 LDR X25, [X25 + 0xE18]
	0x036958C4 LDR X26, [X26 + 0xF78]
	0x036958C8 LDR X23, [X23 + 0xE00]
	0x036958CC MOV X0, X19
	0x036958D0 BLR X8
	0x036958D4 MOV X19, X0
	0x036958D8 MOVZ W24, 0x1
	0x036958DC CBZ X19, 0x3695A38
	0x036958E0 LDR X8, [X19]
	0x036958E4 LDR X1, [X25]
	0x036958E8 LDRH W9, [X8 + 0x12E]
	0x036958EC CBZ X9, 0x3695910
	0x036958F0 LDR X10, [X8 + 0xB0]
	0x036958F4 ADD X10, X10, 0x8
	0x036958F8 LDUR X11, [X10 - 0x8]
	0x036958FC CMP X11, X1
	0x03695900 B.EQ 0x3695920
	0x03695904 SUBS X9, X9, 0x1
	0x03695908 ADD X10, X10, 0x10
	0x0369590C B.NE 0x36958F8
	0x03695910 MOV X0, X19
	0x03695914 MOV W2, W31
	0x03695918 BL 0x1C5C788
	0x0369591C B 0x369592C
	0x03695920 LDRSW X9, [X10]
	0x03695924 ADD X8, X8, X9, 0x4, LSL
	0x03695928 ADD X0, X8, 0x138
	0x0369592C LDP X8, X1, [X0]
	0x03695930 MOV X0, X19
	0x03695934 BLR X8
	0x03695938 TBZ X0, 0x0, 0x36959B4
	0x0369593C LDR X8, [X19]
	0x03695940 LDR X1, [X26]
	0x03695944 LDRH W9, [X8 + 0x12E]
	0x03695948 CBZ X9, 0x369596C
	0x0369594C LDR X10, [X8 + 0xB0]
	0x03695950 ADD X10, X10, 0x8
	0x03695954 LDUR X11, [X10 - 0x8]
	0x03695958 CMP X11, X1
	0x0369595C B.EQ 0x369597C
	0x03695960 SUBS X9, X9, 0x1
	0x03695964 ADD X10, X10, 0x10
	0x03695968 B.NE 0x3695954
	0x0369596C MOV X0, X19
	0x03695970 MOV W2, W31
	0x03695974 BL 0x1C5C788
	0x03695978 B 0x3695988
	0x0369597C LDRSW X9, [X10]
	0x03695980 ADD X8, X8, X9, 0x4, LSL
	0x03695984 ADD X0, X8, 0x138
	0x03695988 LDP X8, X1, [X0]
	0x0369598C MOV X0, X19
	0x03695990 BLR X8
	0x03695994 MOV X1, X31
	0x03695998 BL 0x32277A8
	0x0369599C MOV W22, W0
	0x036959A0 MOV X21, X31
	0x036959A4 TBZ X0, 0x0, 0x36959BC
	0x036959A8 MOV W24, W22
	0x036959AC TBZ X20, 0x0, 0x36958DC
	0x036959B0 B 0x36959BC
	0x036959B4 MOV X21, X31
	0x036959B8 MOV W22, W24
	0x036959BC CBZ X19, 0x3695A18
	0x036959C0 LDR X8, [X19]
	0x036959C4 LDR X1, [X23]
	0x036959C8 LDRH W9, [X8 + 0x12E]
	0x036959CC CBZ X9, 0x36959F0
	0x036959D0 LDR X10, [X8 + 0xB0]
	0x036959D4 ADD X10, X10, 0x8
	0x036959D8 LDUR X11, [X10 - 0x8]
	0x036959DC CMP X11, X1
	0x036959E0 B.EQ 0x3695A00
	0x036959E4 SUBS X9, X9, 0x1
	0x036959E8 ADD X10, X10, 0x10
	0x036959EC B.NE 0x36959D8
	0x036959F0 MOV X0, X19
	0x036959F4 MOV W2, W31
	0x036959F8 BL 0x1C5C788
	0x036959FC B 0x3695A0C
	0x03695A00 LDRSW X9, [X10]
	0x03695A04 ADD X8, X8, X9, 0x4, LSL
	0x03695A08 ADD X0, X8, 0x138
	0x03695A0C LDP X8, X1, [X0]
	0x03695A10 MOV X0, X19
	0x03695A14 BLR X8

ISIL:
	001 Move [X31-96], X30
	002 Move [X31+16], X28
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X21, 0xD4C000
	013 Move W8, [X21+2161]
	014 Move W20, W1
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {31}
	020 Move X0, 0xAAA000
	021 Move X0, [X0+1304]
	022 Call 0x1C17CF4
	023 Move X0, 0xA67000
	024 Move X0, [X0+1536]
	025 Call 0x1C17CF4
	026 Move X0, 0xA61000
	027 Move X0, [X0+632]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X21+2161], W8
	031 Move X21, [X19+32]
	032 Compare X21, 0
	033 JumpIfEqual {125}
	034 Move X8, [X21]
	035 Move X1, [X8+672]
	036 Move X9, [X8+664]
	037 Move X0, X21
	038 NotImplemented "Instruction BLR not yet implemented."
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Move X8, [X21]
	041 Move X1, [X8+672]
	042 Move X9, [X8+664]
	043 Move X0, X21
	044 NotImplemented "Instruction BLR not yet implemented."
	045 Move W1, W0
	046 Move X8, 0xAAA000
	047 Move X8, [X8+1304]
	048 Move X0, [X8]
	049 Call 0x1C17D6C
	050 Move X27, 0xA67000
	051 Move X28, 0xA61000
	052 Move X27, [X27+1536]
	053 Move X28, [X28+632]
	054 Move X22, X0
	055 Move X23, X31
	056 Add X26, X0, 32
	057 Move X8, [X21]
	058 Move X1, [X8+672]
	059 Move X9, [X8+664]
	060 Move X0, X21
	061 NotImplemented "Instruction BLR not yet implemented."
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Move X8, [X21]
	064 Move X9, [X8+744]
	065 Move X2, [X8+752]
	066 Move X0, X21
	067 Move W1, W23
	068 NotImplemented "Instruction BLR not yet implemented."
	069 Move X25, X0
	070 Move X0, [X27]
	071 Call 0x1C17F10
	072 Move X24, X0
	073 Compare X25, 0
	074 JumpIfEqual {78}
	075 Move X1, [X28]
	076 Move X8, [X25]
	077 NotImplemented "Instruction CMP not yet implemented."
	078 Move W2, 513
	079 Move X0, X24
	080 Move X1, X25
	081 Move X3, X31
	082 Call Regex..ctor, X0, X1, X2
	083 Compare X22, 0
	084 JumpIfEqual {97}
	085 Compare X24, 0
	086 JumpIfEqual {93}
	087 Move X8, [X22]
	088 Move X1, [X8+64]
	089 Move X0, X24
	090 Call 0x1C17E00
	091 Compare X0, 0
	092 JumpIfEqual {99}
	093 Move W8, [X22+24]
	094 NotImplemented "Instruction CMP not yet implemented."
	095 Move [X26], X24
	096 Add X23, X23, 1
	097 Call 0x1C17F20
	098 Call 0x1C17F28
	099 Call 0x1C17F44
	100 Move X1, X31
	101 Call 0x1C17DEC
	102 Move X0, X25
	103 Call 0x1C181E0
	104 Move X21, X0
	105 NotImplemented "Instruction CMP not yet implemented."
	106 Move X0, X21
	107 Call 0x3EB2AD0
	108 Move X21, X0
	109 Move X0, 0xA65000
	110 Move X0, [X0+3264]
	111 Call 0x1C17D08
	112 Move X8, [X21]
	113 Move X1, [X8]
	114 Call 0x1C18270
	115 Move TEMP, X0
	116 And TEMP, TEMP, 1
	117 Compare TEMP, 1
	118 JumpIfNotEqual {139}
	119 Move X21, [X21]
	120 Call 0x3EB2AE0
	121 Move TEMP, X20
	122 And TEMP, TEMP, 1
	123 Compare TEMP, 1
	124 JumpIfEqual {147}
	125 Move X22, X31
	126 Move [X19+48], X22
	127 Move X20, [X31+80]
	128 Move X19, [X31+88]
	129 Move X22, [X31+64]
	130 Move X21, [X31+72]
	131 Move X24, [X31+48]
	132 Move X23, [X31+56]
	133 Move X26, [X31+32]
	134 Move X25, [X31+40]
	135 Move X28, [X31+16]
	136 Move X27, [X31+24]
	137 Move X30, [X31+96]
	138 Return 
	139 Move W0, 8
	140 Call 0x3EB2AF0
	141 Move X8, [X21]
	142 Move [X0], X8
	143 Move X1, 0x820000
	144 Add X1, X1, 3672
	145 Move X2, X31
	146 Call 0x3EB2B00
	147 Move X0, X21
	148 Call 0x1C17F18
	149 Move X21, X0
	150 Call 0x3EB2AE0
	151 Move X0, X21
	152 Call 0x1D2D690
	153 Call 0x1991590

Method: System.Boolean IsMatchInBypassList(System.Uri input)

Disassembly:
	0x03695DBC B.LS 0x3696048
	0x03695DC0 ADRP X9, 0xAA5000
	0x03695DC4 LDR X9, [X9 + 0x9F8]
	0x03695DC8 CMP W8, 0x5
	0x03695DCC LDR X9, [X9]
	0x03695DD0 STR X9, [X0 + 0x40]
	0x03695DD4 B.EQ 0x3696048
	0x03695DD8 ADRP X9, 0xAA5000
	0x03695DDC LDR X9, [X9 + 0xAD0]
	0x03695DE0 CMP W8, 0x6
	0x03695DE4 LDR X9, [X9]
	0x03695DE8 STR X9, [X0 + 0x48]
	0x03695DEC B.LS 0x3696048
	0x03695DF0 ADRP X9, 0xAA5000
	0x03695DF4 LDR X9, [X9 + 0x190]
	0x03695DF8 CMP W8, 0x7
	0x03695DFC LDR X9, [X9]
	0x03695E00 STR X9, [X0 + 0x50]
	0x03695E04 B.EQ 0x3696048
	0x03695E08 ADRP X9, 0xAA5000
	0x03695E0C LDR X9, [X9 + 0xA08]
	0x03695E10 CMP W8, 0x8
	0x03695E14 LDR X9, [X9]
	0x03695E18 STR X9, [X0 + 0x58]
	0x03695E1C B.LS 0x3696048
	0x03695E20 ADRP X9, 0xAA5000
	0x03695E24 LDR X9, [X9 + 0xAF0]
	0x03695E28 CMP W8, 0x9
	0x03695E2C LDR X9, [X9]
	0x03695E30 STR X9, [X0 + 0x60]
	0x03695E34 B.EQ 0x3696048
	0x03695E38 ADRP X9, 0xA67000
	0x03695E3C LDR X9, [X9 + 0xD70]
	0x03695E40 CMP W8, 0xA
	0x03695E44 LDR X9, [X9]
	0x03695E48 STR X9, [X0 + 0x68]
	0x03695E4C B.LS 0x3696048
	0x03695E50 ADRP X9, 0xAA5000
	0x03695E54 LDR X9, [X9 + 0xA28]
	0x03695E58 CMP W8, 0xB
	0x03695E5C LDR X9, [X9]
	0x03695E60 STR X9, [X0 + 0x70]
	0x03695E64 B.EQ 0x3696048
	0x03695E68 ADRP X9, 0xA86000
	0x03695E6C LDR X9, [X9 + 0xB28]
	0x03695E70 CMP W8, 0xC
	0x03695E74 LDR X9, [X9]
	0x03695E78 STR X9, [X0 + 0x78]
	0x03695E7C B.LS 0x3696048
	0x03695E80 ADRP X9, 0xA99000
	0x03695E84 LDR X9, [X9 + 0x988]
	0x03695E88 CMP W8, 0xD
	0x03695E8C LDR X9, [X9]
	0x03695E90 STR X9, [X0 + 0x80]
	0x03695E94 B.EQ 0x3696048
	0x03695E98 ADRP X9, 0xAA5000
	0x03695E9C LDR X9, [X9 + 0x6D0]
	0x03695EA0 CMP W8, 0xE
	0x03695EA4 LDR X9, [X9]
	0x03695EA8 STR X9, [X0 + 0x88]
	0x03695EAC B.LS 0x3696048
	0x03695EB0 ADRP X9, 0xAA5000
	0x03695EB4 LDR X9, [X9 + 0xAC0]
	0x03695EB8 CMP W8, 0xF
	0x03695EBC LDR X9, [X9]
	0x03695EC0 STR X9, [X0 + 0x90]
	0x03695EC4 B.EQ 0x3696048
	0x03695EC8 ADRP X9, 0xAA5000
	0x03695ECC LDR X9, [X9 + 0xA90]
	0x03695ED0 CMP W8, 0x10
	0x03695ED4 LDR X9, [X9]
	0x03695ED8 STR X9, [X0 + 0x98]
	0x03695EDC B.LS 0x3696048
	0x03695EE0 ADRP X9, 0xAA5000
	0x03695EE4 LDR X9, [X9 + 0xA38]
	0x03695EE8 CMP W8, 0x11
	0x03695EEC LDR X9, [X9]
	0x03695EF0 STR X9, [X0 + 0xA0]
	0x03695EF4 B.EQ 0x3696048
	0x03695EF8 ADRP X9, 0xAA5000
	0x03695EFC LDR X9, [X9 + 0xAF8]
	0x03695F00 CMP W8, 0x12
	0x03695F04 LDR X9, [X9]
	0x03695F08 STR X9, [X0 + 0xA8]
	0x03695F0C B.LS 0x3696048
	0x03695F10 ADRP X9, 0xAA5000
	0x03695F14 LDR X9, [X9 + 0xA78]
	0x03695F18 CMP W8, 0x13
	0x03695F1C LDR X9, [X9]
	0x03695F20 STR X9, [X0 + 0xB0]
	0x03695F24 B.EQ 0x3696048
	0x03695F28 ADRP X9, 0xAA5000
	0x03695F2C LDR X9, [X9 + 0xA88]
	0x03695F30 CMP W8, 0x14
	0x03695F34 LDR X9, [X9]
	0x03695F38 STR X9, [X0 + 0xB8]
	0x03695F3C B.LS 0x3696048
	0x03695F40 ADRP X9, 0xAA5000
	0x03695F44 LDR X9, [X9 + 0xA98]
	0x03695F48 CMP W8, 0x15
	0x03695F4C LDR X9, [X9]
	0x03695F50 STR X9, [X0 + 0xC0]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0xD4C000
	009 Move W8, [X21+2162]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {27}
	016 Move X0, 0xA9F000
	017 Move X0, [X0+2888]
	018 Call 0x1C17CF4
	019 Move X0, 0xA68000
	020 Move X0, [X0+2440]
	021 Call 0x1C17CF4
	022 Move X0, 0xA5F000
	023 Move X0, [X0+2440]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X21+2162], W8
	027 Move X0, X19
	028 Move W1, W31
	029 Move [X31+12], W31
	030 Call WebProxy.UpdateRegExList, X0, X1
	031 Move X8, [X19+48]
	032 Compare X8, 0
	033 JumpIfEqual {57}
	034 Compare X20, 0
	035 JumpIfEqual {119}
	036 Move X23, 0xA9F000
	037 Move X23, [X23+2888]
	038 Move X0, X20
	039 Move X1, X31
	040 Call Uri.get_Scheme, X0
	041 Move X21, X0
	042 Move X0, X20
	043 Move X1, X31
	044 Call Uri.get_Host, X0
	045 Move X22, X0
	046 Move X0, X20
	047 Move X1, X31
	048 Call Uri.get_IsDefaultPort, X0
	049 Move X23, [X23]
	050 Move TEMP, X0
	051 And TEMP, TEMP, 1
	052 Compare TEMP, 1
	053 JumpIfNotEqual {67}
	054 Move X8, 0xA5F000
	055 Move X8, [X8+2440]
	056 Move X3, [X8]
	057 Move W21, W31
	058 Move W0, W21
	059 Move X20, [X31+48]
	060 Move X19, [X31+56]
	061 Move X22, [X31+32]
	062 Move X21, [X31+40]
	063 Move X30, [X31+16]
	064 Move X23, [X31+24]
	065 Add X31, X31, 64
	066 Return X0
	067 Move X0, X20
	068 Move X1, X31
	069 Call Uri.get_Port, X0
	070 Move [X31+12], W0
	071 Add X0, X31, 12
	072 Move X1, X31
	073 Call Int32.ToString, X0
	074 Move X8, 0xA68000
	075 Move X8, [X8+2440]
	076 Move X1, X0
	077 Move X2, X31
	078 Move X8, [X8]
	079 Move X0, X8
	080 Call String.Concat, X0, X1
	081 Move X3, X0
	082 Move X0, X21
	083 Move X1, X23
	084 Move X2, X22
	085 Move X4, X31
	086 Call String.Concat, X0, X1, X2, X3
	087 Move X8, [X19+32]
	088 Compare X8, 0
	089 JumpIfEqual {119}
	090 Move X20, X0
	091 Move X22, X31
	092 Move X9, [X8]
	093 Move X0, X8
	094 Move X10, [X9+664]
	095 Move X1, [X9+672]
	096 NotImplemented "Instruction BLR not yet implemented."
	097 NotImplemented "Instruction CMP not yet implemented."
	098 NotImplemented "Instruction CSET not yet implemented."
	099 Move X8, [X19+48]
	100 Compare X8, 0
	101 JumpIfEqual {119}
	102 Move W9, [X8+24]
	103 NotImplemented "Instruction CMP not yet implemented."
	104 Add X8, X8, X22
	105 Move X0, [X8+32]
	106 Compare X0, 0
	107 JumpIfEqual {119}
	108 Move X1, X20
	109 Move X2, X31
	110 Call Regex.IsMatch, X0, X1
	111 Move TEMP, X0
	112 And TEMP, TEMP, 1
	113 Compare TEMP, 1
	114 JumpIfEqual {58}
	115 Move X8, [X19+32]
	116 Add X22, X22, 1
	117 Compare X8, 0
	118 JumpIfNotEqual {92}
	119 Call 0x1C17F20
	120 Call 0x1C17F28

Method: System.Boolean IsLocal(System.Uri host)

Disassembly:
	0x03695F54 B.EQ 0x3696048
	0x03695F58 ADRP X9, 0xAA5000
	0x03695F5C LDR X9, [X9 + 0xA68]
	0x03695F60 CMP W8, 0x16
	0x03695F64 LDR X9, [X9]
	0x03695F68 STR X9, [X0 + 0xC8]
	0x03695F6C B.LS 0x3696048
	0x03695F70 ADRP X9, 0xAA5000
	0x03695F74 LDR X9, [X9 + 0xA10]
	0x03695F78 CMP W8, 0x17
	0x03695F7C LDR X9, [X9]
	0x03695F80 STR X9, [X0 + 0xD0]
	0x03695F84 B.EQ 0x3696048
	0x03695F88 ADRP X9, 0xAA5000
	0x03695F8C LDR X9, [X9 + 0x9E0]
	0x03695F90 CMP W8, 0x18
	0x03695F94 LDR X9, [X9]
	0x03695F98 STR X9, [X0 + 0xD8]
	0x03695F9C B.LS 0x3696048
	0x03695FA0 ADRP X9, 0xAA5000
	0x03695FA4 LDR X9, [X9 + 0xAC8]
	0x03695FA8 CMP W8, 0x19
	0x03695FAC LDR X9, [X9]
	0x03695FB0 STR X9, [X0 + 0xE0]
	0x03695FB4 B.EQ 0x3696048
	0x03695FB8 ADRP X9, 0xAA5000
	0x03695FBC LDR X9, [X9 + 0x9D0]
	0x03695FC0 CMP W8, 0x1A
	0x03695FC4 LDR X9, [X9]
	0x03695FC8 STR X9, [X0 + 0xE8]
	0x03695FCC B.LS 0x3696048
	0x03695FD0 ADRP X9, 0xAA5000
	0x03695FD4 LDR X9, [X9 + 0x9D8]
	0x03695FD8 CMP W8, 0x1B
	0x03695FDC LDR X9, [X9]
	0x03695FE0 STR X9, [X0 + 0xF0]
	0x03695FE4 B.EQ 0x3696048
	0x03695FE8 ADRP X9, 0xAA9000
	0x03695FEC LDR X9, [X9]
	0x03695FF0 CMP W8, 0x1C
	0x03695FF4 LDR X9, [X9]
	0x03695FF8 STR X9, [X0 + 0xF8]
	0x03695FFC B.LS 0x3696048
	0x03696000 ADRP X9, 0xAA4000
	0x03696004 LDR X9, [X9 + 0xA48]
	0x03696008 CMP W8, 0x1D
	0x0369600C LDR X9, [X9]
	0x03696010 STR X9, [X0 + 0x100]
	0x03696014 B.EQ 0x3696048
	0x03696018 ADRP X8, 0xAA4000
	0x0369601C LDR X8, [X8 + 0xA80]
	0x03696020 ADRP X9, 0xAA8000
	0x03696024 LDR X8, [X8]
	0x03696028 LDR X9, [X9 + 0x568]
	0x0369602C LDP X20, X19, [X31 + 0x10]
	0x03696030 STR X8, [X0 + 0x108]
	0x03696034 LDR X8, [X9]
	0x03696038 LDR X8, [X8 + 0xB8]
	0x0369603C STR X0, [X8]
	0x03696040 LDR X30, [X31], #0x20
	0x03696044 RET
	0x03696048 BL 0x1C16F28
	0x0369604C BL 0x1C16F20
	0x03696050 STP X30, X21, [X31 - 0x20]!
	0x03696054 STP X20, X19, [X31 + 0x10]
	0x03696058 ADRP X21, 0xD4A000
	0x0369605C ADRP X20, 0xAA7000
	0x03696060 LDRB W8, [X21 + 0x87F]
	0x03696064 LDR X20, [X20 + 0xF40]
	0x03696068 MOV W19, W0
	0x0369606C TBNZ X8, 0x0, 0x3696084
	0x03696070 ADRP X0, 0xAA7000
	0x03696074 LDR X0, [X0 + 0xF40]
	0x03696078 BL 0x1C16CF4
	0x0369607C MOVZ W8, 0x1
	0x03696080 STRB W8, [X21 + 0x87F]
	0x03696084 LDR X0, [X20]
	0x03696088 LDR W8, [X0 + 0xE0]
	0x0369608C CBNZ W8, 0x3696098
	0x03696090 BL 0x1C16DFC
	0x03696094 LDR X0, [X20]
	0x03696098 LDR X8, [X0 + 0xB8]
	0x0369609C LDR X8, [X8]
	0x036960A0 CBZ X8, 0x36960C4
	0x036960A4 LDR W9, [X8 + 0x18]
	0x036960A8 CMP W9, W19
	0x036960AC B.LS 0x36960C8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xD4C000
	005 Move W8, [X20+2163]
	006 Move X19, X1
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0xA6C000
	012 Move X0, [X0+2408]
	013 Call 0x1C17CF4
	014 Move X0, 0xA68000
	015 Move X0, [X0+1936]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2163], W8
	019 Move [X31+8], X31
	020 Compare X19, 0
	021 JumpIfEqual {102}
	022 Move X20, 0xA6C000
	023 Move X20, [X20+2408]
	024 Move X0, X19
	025 Move X1, X31
	026 Call Uri.get_Host, X0
	027 Move X8, [X20]
	028 Move X19, X0
	029 Move W9, [X8+224]
	030 Compare W9, 0
	031 JumpIfNotEqual {34}
	032 Move X0, X8
	033 Call 0x1C17DFC
	034 Add X1, X31, 8
	035 Move X0, X19
	036 Move X2, X31
	037 Call IPAddress.TryParse, X0, X1
	038 Move TEMP, X0
	039 And TEMP, TEMP, 1
	040 Compare TEMP, 1
	041 JumpIfNotEqual {58}
	042 Move X0, [X20]
	043 Move X19, [X31+8]
	044 Move W8, [X0+224]
	045 Compare W8, 0
	046 JumpIfNotEqual {48}
	047 Call 0x1C17DFC
	048 Move X0, X19
	049 Move X1, X31
	050 Call IPAddress.IsLoopback, X0
	051 Move TEMP, X0
	052 And TEMP, TEMP, 1
	053 Compare TEMP, 1
	054 JumpIfEqual {96}
	055 Move X0, [X31+8]
	056 Move X1, X31
	057 Call NclUtilities.IsAddressLocal, X0
	058 Compare X19, 0
	059 JumpIfEqual {102}
	060 Move W1, 46
	061 Move X0, X19
	062 Move X2, X31
	063 Call String.IndexOf, X0, X1
	064 Add W31, W0, 1
	065 Move W20, W0
	066 Move X0, X31
	067 Call IPGlobalProperties.InternalGetIPGlobalProperties
	068 Compare X0, 0
	069 JumpIfEqual {102}
	070 Move X8, [X0]
	071 Move X9, [X8+376]
	072 Move X1, [X8+384]
	073 NotImplemented "Instruction BLR not yet implemented."
	074 Move X8, 0xA67000
	075 Move X8, [X8+1936]
	076 Move X1, X0
	077 Move X2, X31
	078 Move X8, [X8]
	079 Move X0, X8
	080 Call String.Concat, X0, X1
	081 Compare X0, 0
	082 JumpIfEqual {95}
	083 Move W8, [X19+16]
	084 Move W4, [X0+16]
	085 Subtract W8, W8, W20
	086 NotImplemented "Instruction CMP not yet implemented."
	087 Move W5, 5
	088 Move W1, W31
	089 Move X2, X19
	090 Move W3, W20
	091 Move X6, X31
	092 Call String.Compare, X0, X1, X2, X3, X4, X5
	093 Compare W0, 0
	094 JumpIfEqual {96}
	095 Move W0, W31
	096 Move W0, 1
	097 Move X20, [X31+16]
	098 Move X19, [X31+24]
	099 And W0, W0, 1
	100 Move X30, [X31+32]
	101 Return X0
	102 Call 0x1C17F20

Method: System.Boolean IsLocalInProxyHash(System.Uri host)

Disassembly:
	0x036960B0 ADD X8, X8, W19, 0x3, SXTW
	0x036960B4 LDR X0, [X8 + 0x20]
	0x036960B8 LDP X20, X19, [X31 + 0x10]
	0x036960BC LDP X30, X21, [X31], #0x20
	0x036960C0 RET
	0x036960C4 BL 0x1C16F20
	0x036960C8 BL 0x1C16F28
	0x036960CC STR X30, [X31 - 0x20]!
	0x036960D0 STP X20, X19, [X31 + 0x10]
	0x036960D4 ADRP X19, 0xD4A000
	0x036960D8 ADRP X20, 0xA5D000
	0x036960DC LDRB W8, [X19 + 0x880]
	0x036960E0 LDR X20, [X20 + 0xAC8]
	0x036960E4 TBNZ X8, 0x0, 0x36962F4
	0x036960E8 ADRP X0, 0xAA7000
	0x036960EC LDR X0, [X0 + 0xF40]
	0x036960F0 BL 0x1C16CF4
	0x036960F4 ADRP X0, 0xA5D000
	0x036960F8 LDR X0, [X0 + 0xAC8]
	0x036960FC BL 0x1C16CF4
	0x03696100 ADRP X0, 0xAA4000
	0x03696104 LDR X0, [X0 + 0x9C8]
	0x03696108 BL 0x1C16CF4
	0x0369610C ADRP X0, 0xAA4000
	0x03696110 LDR X0, [X0 + 0x188]
	0x03696114 BL 0x1C16CF4
	0x03696118 ADRP X0, 0xAA4000
	0x0369611C LDR X0, [X0 + 0x9E8]
	0x03696120 BL 0x1C16CF4
	0x03696124 ADRP X0, 0xAA4000
	0x03696128 LDR X0, [X0 + 0x9F0]
	0x0369612C BL 0x1C16CF4
	0x03696130 ADRP X0, 0xAA4000
	0x03696134 LDR X0, [X0 + 0x6F0]
	0x03696138 BL 0x1C16CF4
	0x0369613C ADRP X0, 0xAA8000
	0x03696140 LDR X0, [X0 + 0x570]
	0x03696144 BL 0x1C16CF4
	0x03696148 ADRP X0, 0xAA4000
	0x0369614C LDR X0, [X0 + 0x9F8]
	0x03696150 BL 0x1C16CF4
	0x03696154 ADRP X0, 0xAA4000
	0x03696158 LDR X0, [X0 + 0xA00]
	0x0369615C BL 0x1C16CF4
	0x03696160 ADRP X0, 0xAA4000
	0x03696164 LDR X0, [X0 + 0xA08]
	0x03696168 BL 0x1C16CF4
	0x0369616C ADRP X0, 0xAA4000
	0x03696170 LDR X0, [X0 + 0xA18]
	0x03696174 BL 0x1C16CF4
	0x03696178 ADRP X0, 0xAA4000
	0x0369617C LDR X0, [X0 + 0xA20]
	0x03696180 BL 0x1C16CF4
	0x03696184 ADRP X0, 0xA66000
	0x03696188 LDR X0, [X0 + 0xD70]
	0x0369618C BL 0x1C16CF4
	0x03696190 ADRP X0, 0xAA4000
	0x03696194 LDR X0, [X0 + 0x6D0]
	0x03696198 BL 0x1C16CF4
	0x0369619C ADRP X0, 0xAA4000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xD4B000
	006 Move W8, [X21+2164]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xA60000
	014 Move X0, [X0+2600]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+2164], W8
	018 Move X20, [X20+56]
	019 Compare X20, 0
	020 JumpIfEqual {63}
	021 Compare X19, 0
	022 JumpIfEqual {71}
	023 Move X21, 0xA60000
	024 Move X21, [X21+2600]
	025 Move X0, X19
	026 Move X1, X31
	027 Call Uri.get_Scheme, X0
	028 Move X8, [X20]
	029 Move X1, X0
	030 Move X0, X20
	031 Move X9, [X8+728]
	032 Move X2, [X8+736]
	033 NotImplemented "Instruction BLR not yet implemented."
	034 Move X1, [X21]
	035 Move X19, X0
	036 Move W8, [X1+224]
	037 Compare W8, 0
	038 JumpIfEqual {41}
	039 Compare X19, 0
	040 JumpIfNotEqual {46}
	041 Move X0, X1
	042 Call 0x1C17DFC
	043 Move X1, [X21]
	044 Compare X19, 0
	045 JumpIfEqual {54}
	046 Move X8, [X19]
	047 Move W9, [X1+304]
	048 Move W10, [X8+304]
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Move X8, [X8+200]
	051 Add X8, X8, X9
	052 NotImplemented "Instruction LDUR not yet implemented."
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Move X0, X19
	055 Move X1, X31
	056 Move X2, X31
	057 Call Uri.op_Equality, X0, X1
	058 Move TEMP, X0
	059 And TEMP, TEMP, 1
	060 Compare TEMP, 1
	061 JumpIfNotEqual {63}
	062 Move W0, 1
	063 Move W0, W31
	064 Move X20, [X31+16]
	065 Move X19, [X31+24]
	066 Move X30, [X31+32]
	067 Move X21, [X31+40]
	068 Return X0
	069 Move X0, X19
	070 Call 0x1C181E0
	071 Call 0x1C17F20

Method: System.Boolean IsBypassed(System.Uri host)

Disassembly:
	0x036961A0 LDR X0, [X0 + 0xA28]
	0x036961A4 BL 0x1C16CF4
	0x036961A8 ADRP X0, 0xAA4000
	0x036961AC LDR X0, [X0 + 0xA30]
	0x036961B0 BL 0x1C16CF4
	0x036961B4 ADRP X0, 0xAA4000
	0x036961B8 LDR X0, [X0 + 0x250]
	0x036961BC BL 0x1C16CF4
	0x036961C0 ADRP X0, 0xAA4000
	0x036961C4 LDR X0, [X0 + 0xA38]
	0x036961C8 BL 0x1C16CF4
	0x036961CC ADRP X0, 0xA98000
	0x036961D0 LDR X0, [X0 + 0x988]
	0x036961D4 BL 0x1C16CF4
	0x036961D8 ADRP X0, 0xAA4000
	0x036961DC LDR X0, [X0 + 0xA50]
	0x036961E0 BL 0x1C16CF4
	0x036961E4 ADRP X0, 0xAA4000
	0x036961E8 LDR X0, [X0 + 0xA58]
	0x036961EC BL 0x1C16CF4
	0x036961F0 ADRP X0, 0xAA8000
	0x036961F4 LDR X0, [X0 + 0x200]
	0x036961F8 BL 0x1C16CF4
	0x036961FC ADRP X0, 0xAA4000
	0x03696200 LDR X0, [X0 + 0x190]
	0x03696204 BL 0x1C16CF4
	0x03696208 ADRP X0, 0xAA4000
	0x0369620C LDR X0, [X0 + 0xA60]
	0x03696210 BL 0x1C16CF4
	0x03696214 ADRP X0, 0xAA4000
	0x03696218 LDR X0, [X0 + 0xA70]
	0x0369621C BL 0x1C16CF4
	0x03696220 ADRP X0, 0xAA4000
	0x03696224 LDR X0, [X0 + 0xA78]
	0x03696228 BL 0x1C16CF4
	0x0369622C ADRP X0, 0xA85000
	0x03696230 LDR X0, [X0 + 0xB28]
	0x03696234 BL 0x1C16CF4
	0x03696238 ADRP X0, 0xAA4000
	0x0369623C LDR X0, [X0 + 0xA88]
	0x03696240 BL 0x1C16CF4
	0x03696244 ADRP X0, 0xAA4000
	0x03696248 LDR X0, [X0 + 0xA90]
	0x0369624C BL 0x1C16CF4
	0x03696250 ADRP X0, 0xA98000
	0x03696254 LDR X0, [X0 + 0x7D0]
	0x03696258 BL 0x1C16CF4
	0x0369625C ADRP X0, 0xAA4000
	0x03696260 LDR X0, [X0 + 0xAA0]
	0x03696264 BL 0x1C16CF4
	0x03696268 ADRP X0, 0xAA4000
	0x0369626C LDR X0, [X0 + 0xAB0]
	0x03696270 BL 0x1C16CF4
	0x03696274 ADRP X0, 0xAA4000
	0x03696278 LDR X0, [X0 + 0x158]
	0x0369627C BL 0x1C16CF4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xD4B000
	007 Move X22, 0xA60000
	008 Move W8, [X21+2165]
	009 Move X22, [X22+2600]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xA60000
	017 Move X0, [X0+2600]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2165], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move X0, X19
	027 Move X1, X31
	028 Move X2, X31
	029 Call Uri.op_Equality, X0, X1
	030 Move TEMP, X0
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfEqual {54}
	034 Move X21, 0xD4B000
	035 Move W8, [X21+2171]
	036 Move TEMP, X8
	037 And TEMP, TEMP, 1
	038 Compare TEMP, 1
	039 JumpIfEqual {45}
	040 Move X0, 0xA61000
	041 Move X0, [X0+600]
	042 Call 0x1C17CF4
	043 Move W8, 1
	044 Move [X21+2171], W8
	045 Move X0, X20
	046 Move X1, X19
	047 Move X20, [X31+32]
	048 Move X19, [X31+40]
	049 Move X22, [X31+16]
	050 Move X21, [X31+24]
	051 Move X30, [X31+48]
	052 Call WebProxy.IsBypassedManual, X0, X1
	053 Return X0
	054 Move X0, 0xA63000
	055 Move X0, [X0+1320]
	056 Call 0x1C17D08
	057 Call 0x1C17F10
	058 Move X19, X0
	059 Move X0, 0xAA9000
	060 Move X0, [X0+1320]
	061 Call 0x1C17D08
	062 Move X1, X0
	063 Move X0, X19
	064 Move X2, X31
	065 Call ArgumentNullException..ctor, X0, X1
	066 Move X0, 0xAA9000
	067 Move X0, [X0+1328]
	068 Call 0x1C17D08
	069 Move X1, X0
	070 Move X0, X19
	071 Call 0x1C17DEC

Method: System.Boolean IsBypassedManual(System.Uri host)

Disassembly:
	0x03695CF4 BL 0x1C16CF4
	0x03695CF8 ADRP X0, 0xAA5000
	0x03695CFC LDR X0, [X0 + 0x158]
	0x03695D00 BL 0x1C16CF4
	0x03695D04 ADRP X0, 0xAA5000
	0x03695D08 LDR X0, [X0 + 0xAC0]
	0x03695D0C BL 0x1C16CF4
	0x03695D10 ADRP X0, 0xAA5000
	0x03695D14 LDR X0, [X0 + 0xAC8]
	0x03695D18 BL 0x1C16CF4
	0x03695D1C ADRP X0, 0xAA5000
	0x03695D20 LDR X0, [X0 + 0xAD0]
	0x03695D24 BL 0x1C16CF4
	0x03695D28 ADRP X0, 0xAA5000
	0x03695D2C LDR X0, [X0 + 0xAF0]
	0x03695D30 BL 0x1C16CF4
	0x03695D34 ADRP X0, 0xAA5000
	0x03695D38 LDR X0, [X0 + 0xAF8]
	0x03695D3C BL 0x1C16CF4
	0x03695D40 MOVZ W8, 0x1
	0x03695D44 STRB W8, [X19 + 0x87E]
	0x03695D48 LDR X0, [X20]
	0x03695D4C MOVZ W1, 0x1E
	0x03695D50 BL 0x1C16D6C
	0x03695D54 CBZ X0, 0x369604C
	0x03695D58 LDR W8, [X0 + 0x18]
	0x03695D5C CBZ W8, 0x3696048
	0x03695D60 ADRP X9, 0xAA5000
	0x03695D64 LDR X9, [X9 + 0xA60]
	0x03695D68 CMP W8, 0x1
	0x03695D6C LDR X9, [X9]
	0x03695D70 STR X9, [X0 + 0x20]
	0x03695D74 B.EQ 0x3696048
	0x03695D78 ADRP X9, 0xAA5000
	0x03695D7C LDR X9, [X9 + 0x158]
	0x03695D80 CMP W8, 0x2
	0x03695D84 LDR X9, [X9]
	0x03695D88 STR X9, [X0 + 0x28]
	0x03695D8C B.LS 0x3696048
	0x03695D90 ADRP X9, 0xAA5000
	0x03695D94 LDR X9, [X9 + 0xA18]
	0x03695D98 CMP W8, 0x3
	0x03695D9C LDR X9, [X9]
	0x03695DA0 STR X9, [X0 + 0x30]
	0x03695DA4 B.EQ 0x3696048
	0x03695DA8 ADRP X9, 0xAA5000
	0x03695DAC LDR X9, [X9 + 0x250]
	0x03695DB0 CMP W8, 0x4
	0x03695DB4 LDR X9, [X9]
	0x03695DB8 STR X9, [X0 + 0x38]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xD4C000
	006 Move W8, [X21+2166]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xA61000
	014 Move X0, [X0+2600]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+2166], W8
	018 Compare X19, 0
	019 JumpIfEqual {76}
	020 Move X0, X19
	021 Move X1, X31
	022 Call Uri.get_IsLoopback, X0
	023 Move TEMP, X0
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {62}
	027 Move X8, 0xA61000
	028 Move X8, [X8+2600]
	029 Move X21, [X20+24]
	030 Move X0, [X8]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {35}
	034 Call 0x1C17DFC
	035 Move X0, X21
	036 Move X1, X31
	037 Move X2, X31
	038 Call Uri.op_Equality, X0, X1
	039 Move TEMP, X0
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfNotEqual {46}
	043 Move X8, [X20+56]
	044 Compare X8, 0
	045 JumpIfEqual {62}
	046 Move W8, [X20+17]
	047 Compare W8, 0
	048 JumpIfEqual {55}
	049 Move X1, X19
	050 Call WebProxy.IsLocal, X0, X1
	051 Move TEMP, X0
	052 And TEMP, TEMP, 1
	053 Compare TEMP, 1
	054 JumpIfEqual {62}
	055 Move X0, X20
	056 Move X1, X19
	057 Call WebProxy.IsMatchInBypassList, X0, X1
	058 Move TEMP, X0
	059 And TEMP, TEMP, 1
	060 Compare TEMP, 1
	061 JumpIfNotEqual {68}
	062 Move X20, [X31+16]
	063 Move X19, [X31+24]
	064 Move W0, 1
	065 Move X30, [X31+32]
	066 Move X21, [X31+40]
	067 Return X0
	068 Move X0, X20
	069 Move X1, X19
	070 Move X20, [X31+16]
	071 Move X19, [X31+24]
	072 Move X30, [X31+32]
	073 Move X21, [X31+40]
	074 Call WebProxy.IsLocalInProxyHash, X0, X1
	075 Return X0
	076 Call 0x1C17F20

Method: System.Void .ctor(System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext streamingContext)

Disassembly:
	0x036962C4 BL 0x1C16CF4
	0x036962C8 ADRP X0, 0xAA4000
	0x036962CC LDR X0, [X0 + 0xAE8]
	0x036962D0 BL 0x1C16CF4
	0x036962D4 ADRP X0, 0xAA4000
	0x036962D8 LDR X0, [X0 + 0xAF0]
	0x036962DC BL 0x1C16CF4
	0x036962E0 ADRP X0, 0xAA4000
	0x036962E4 LDR X0, [X0 + 0xAF8]
	0x036962E8 BL 0x1C16CF4
	0x036962EC MOVZ W8, 0x1
	0x036962F0 STRB W8, [X19 + 0x880]
	0x036962F4 LDR X0, [X20]
	0x036962F8 MOVZ W1, 0x29
	0x036962FC BL 0x1C16D6C
	0x03696300 CBZ X0, 0x3696700
	0x03696304 LDR W8, [X0 + 0x18]
	0x03696308 CBZ W8, 0x36966FC
	0x0369630C ADRP X9, 0xAA4000
	0x03696310 LDR X9, [X9 + 0xA60]
	0x03696314 CMP W8, 0x1
	0x03696318 LDR X9, [X9]
	0x0369631C STR X9, [X0 + 0x20]
	0x03696320 B.EQ 0x36966FC
	0x03696324 ADRP X9, 0xAA4000
	0x03696328 LDR X9, [X9 + 0x158]
	0x0369632C CMP W8, 0x2
	0x03696330 LDR X9, [X9]
	0x03696334 STR X9, [X0 + 0x28]
	0x03696338 B.LS 0x36966FC
	0x0369633C ADRP X9, 0xAA4000
	0x03696340 LDR X9, [X9 + 0xA18]
	0x03696344 CMP W8, 0x3
	0x03696348 LDR X9, [X9]
	0x0369634C STR X9, [X0 + 0x30]
	0x03696350 B.EQ 0x36966FC
	0x03696354 ADRP X9, 0xAA4000
	0x03696358 LDR X9, [X9 + 0x250]
	0x0369635C CMP W8, 0x4
	0x03696360 LDR X9, [X9]
	0x03696364 STR X9, [X0 + 0x38]
	0x03696368 B.LS 0x36966FC
	0x0369636C ADRP X9, 0xAA4000
	0x03696370 LDR X9, [X9 + 0x9F8]
	0x03696374 CMP W8, 0x5
	0x03696378 LDR X9, [X9]
	0x0369637C STR X9, [X0 + 0x40]
	0x03696380 B.EQ 0x36966FC
	0x03696384 ADRP X9, 0xAA4000
	0x03696388 LDR X9, [X9 + 0xAD0]
	0x0369638C CMP W8, 0x6
	0x03696390 LDR X9, [X9]
	0x03696394 STR X9, [X0 + 0x48]
	0x03696398 B.LS 0x36966FC
	0x0369639C ADRP X9, 0xAA4000
	0x036963A0 LDR X9, [X9 + 0x190]
	0x036963A4 CMP W8, 0x7
	0x036963A8 LDR X9, [X9]
	0x036963AC STR X9, [X0 + 0x50]
	0x036963B0 B.EQ 0x36966FC
	0x036963B4 ADRP X9, 0xAA4000
	0x036963B8 LDR X9, [X9 + 0xA08]
	0x036963BC CMP W8, 0x8
	0x036963C0 LDR X9, [X9]
	0x036963C4 STR X9, [X0 + 0x58]
	0x036963C8 B.LS 0x36966FC
	0x036963CC ADRP X9, 0xAA4000
	0x036963D0 LDR X9, [X9 + 0xAF0]
	0x036963D4 CMP W8, 0x9
	0x036963D8 LDR X9, [X9]
	0x036963DC STR X9, [X0 + 0x60]
	0x036963E0 B.EQ 0x36966FC
	0x036963E4 ADRP X9, 0xA66000
	0x036963E8 LDR X9, [X9 + 0xD70]
	0x036963EC CMP W8, 0xA
	0x036963F0 LDR X9, [X9]
	0x036963F4 STR X9, [X0 + 0x68]
	0x036963F8 B.LS 0x36966FC
	0x036963FC ADRP X9, 0xAA4000
	0x03696400 LDR X9, [X9 + 0xA28]
	0x03696404 CMP W8, 0xB
	0x03696408 LDR X9, [X9]
	0x0369640C STR X9, [X0 + 0x70]
	0x03696410 B.EQ 0x36966FC
	0x03696414 ADRP X9, 0xA85000
	0x03696418 LDR X9, [X9 + 0xB28]
	0x0369641C CMP W8, 0xC
	0x03696420 LDR X9, [X9]
	0x03696424 STR X9, [X0 + 0x78]
	0x03696428 B.LS 0x36966FC
	0x0369642C ADRP X9, 0xA98000
	0x03696430 LDR X9, [X9 + 0x988]
	0x03696434 CMP W8, 0xD
	0x03696438 LDR X9, [X9]
	0x0369643C STR X9, [X0 + 0x80]
	0x03696440 B.EQ 0x36966FC
	0x03696444 ADRP X9, 0xAA4000
	0x03696448 LDR X9, [X9 + 0x6D0]
	0x0369644C CMP W8, 0xE
	0x03696450 LDR X9, [X9]
	0x03696454 STR X9, [X0 + 0x88]
	0x03696458 B.LS 0x36966FC
	0x0369645C ADRP X9, 0xAA4000
	0x03696460 LDR X9, [X9 + 0xAC0]
	0x03696464 CMP W8, 0xF
	0x03696468 LDR X9, [X9]
	0x0369646C STR X9, [X0 + 0x90]
	0x03696470 B.EQ 0x36966FC
	0x03696474 ADRP X9, 0xAA4000
	0x03696478 LDR X9, [X9 + 0xA90]
	0x0369647C CMP W8, 0x10
	0x03696480 LDR X9, [X9]
	0x03696484 STR X9, [X0 + 0x98]
	0x03696488 B.LS 0x36966FC
	0x0369648C ADRP X9, 0xAA4000
	0x03696490 LDR X9, [X9 + 0xA38]
	0x03696494 CMP W8, 0x11
	0x03696498 LDR X9, [X9]
	0x0369649C STR X9, [X0 + 0xA0]
	0x036964A0 B.EQ 0x36966FC
	0x036964A4 ADRP X9, 0xAA4000
	0x036964A8 LDR X9, [X9 + 0xAF8]
	0x036964AC CMP W8, 0x12
	0x036964B0 LDR X9, [X9]
	0x036964B4 STR X9, [X0 + 0xA8]
	0x036964B8 B.LS 0x36966FC
	0x036964BC ADRP X9, 0xAA4000
	0x036964C0 LDR X9, [X9 + 0xA78]
	0x036964C4 CMP W8, 0x13
	0x036964C8 LDR X9, [X9]
	0x036964CC STR X9, [X0 + 0xB0]
	0x036964D0 B.EQ 0x36966FC
	0x036964D4 ADRP X9, 0xAA4000
	0x036964D8 LDR X9, [X9 + 0xA88]
	0x036964DC CMP W8, 0x14
	0x036964E0 LDR X9, [X9]
	0x036964E4 STR X9, [X0 + 0xB8]
	0x036964E8 B.LS 0x36966FC
	0x036964EC ADRP X9, 0xAA4000
	0x036964F0 LDR X9, [X9 + 0x6F0]
	0x036964F4 CMP W8, 0x15
	0x036964F8 LDR X9, [X9]
	0x036964FC STR X9, [X0 + 0xC0]
	0x03696500 B.EQ 0x36966FC
	0x03696504 ADRP X9, 0xAA4000
	0x03696508 LDR X9, [X9 + 0xA00]
	0x0369650C CMP W8, 0x16
	0x03696510 LDR X9, [X9]
	0x03696514 STR X9, [X0 + 0xC8]
	0x03696518 B.LS 0x36966FC
	0x0369651C ADRP X9, 0xAA4000
	0x03696520 LDR X9, [X9 + 0x9E8]
	0x03696524 CMP W8, 0x17
	0x03696528 LDR X9, [X9]
	0x0369652C STR X9, [X0 + 0xD0]
	0x03696530 B.EQ 0x36966FC
	0x03696534 ADRP X9, 0xAA4000
	0x03696538 LDR X9, [X9 + 0x9C8]
	0x0369653C CMP W8, 0x18
	0x03696540 LDR X9, [X9]
	0x03696544 STR X9, [X0 + 0xD8]
	0x03696548 B.LS 0x36966FC
	0x0369654C ADRP X9, 0xA98000
	0x03696550 LDR X9, [X9 + 0x7D0]
	0x03696554 CMP W8, 0x19
	0x03696558 LDR X9, [X9]
	0x0369655C STR X9, [X0 + 0xE0]
	0x03696560 B.EQ 0x36966FC
	0x03696564 ADRP X9, 0xAA8000
	0x03696568 LDR X9, [X9 + 0x200]
	0x0369656C CMP W8, 0x1A
	0x03696570 LDR X9, [X9]
	0x03696574 STR X9, [X0 + 0xE8]
	0x03696578 B.LS 0x36966FC
	0x0369657C ADRP X9, 0xAA4000
	0x03696580 LDR X9, [X9 + 0xAD8]
	0x03696584 CMP W8, 0x1B
	0x03696588 LDR X9, [X9]
	0x0369658C STR X9, [X0 + 0xF0]
	0x03696590 B.EQ 0x36966FC
	0x03696594 ADRP X9, 0xAA4000
	0x03696598 LDR X9, [X9 + 0xA70]
	0x0369659C CMP W8, 0x1C
	0x036965A0 LDR X9, [X9]
	0x036965A4 STR X9, [X0 + 0xF8]
	0x036965A8 B.LS 0x36966FC
	0x036965AC ADRP X9, 0xAA4000
	0x036965B0 LDR X9, [X9 + 0x188]
	0x036965B4 CMP W8, 0x1D
	0x036965B8 LDR X9, [X9]
	0x036965BC STR X9, [X0 + 0x100]
	0x036965C0 B.EQ 0x36966FC
	0x036965C4 ADRP X9, 0xAA4000
	0x036965C8 LDR X9, [X9 + 0xA58]
	0x036965CC CMP W8, 0x1E
	0x036965D0 LDR X9, [X9]
	0x036965D4 STR X9, [X0 + 0x108]
	0x036965D8 B.LS 0x36966FC
	0x036965DC ADRP X9, 0xAA4000
	0x036965E0 LDR X9, [X9 + 0xAA0]
	0x036965E4 CMP W8, 0x1F
	0x036965E8 LDR X9, [X9]
	0x036965EC STR X9, [X0 + 0x110]
	0x036965F0 B.EQ 0x36966FC
	0x036965F4 ADRP X9, 0xAA4000
	0x036965F8 LDR X9, [X9 + 0xAE0]
	0x036965FC CMP W8, 0x20
	0x03696600 LDR X9, [X9]
	0x03696604 STR X9, [X0 + 0x118]
	0x03696608 B.LS 0x36966FC
	0x0369660C ADRP X9, 0xAA4000
	0x03696610 LDR X9, [X9 + 0xA50]
	0x03696614 CMP W8, 0x21

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xD4B000
	006 Move W8, [X21+2167]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {45}
	013 Move X0, 0xA95000
	014 Move X0, [X0+1560]
	015 Call 0x1C17CF4
	016 Move X0, 0xA8B000
	017 Move X0, [X0+2976]
	018 Call 0x1C17CF4
	019 Move X0, 0xA5E000
	020 Move X0, [X0+1728]
	021 Call 0x1C17CF4
	022 Move X0, 0xAA6000
	023 Move X0, [X0+1632]
	024 Call 0x1C17CF4
	025 Move X0, 0xA60000
	026 Move X0, [X0+2600]
	027 Call 0x1C17CF4
	028 Move X0, 0xAA9000
	029 Move X0, [X0+1336]
	030 Call 0x1C17CF4
	031 Move X0, 0xAA9000
	032 Move X0, [X0+1344]
	033 Call 0x1C17CF4
	034 Move X0, 0xAA9000
	035 Move X0, [X0+1352]
	036 Call 0x1C17CF4
	037 Move X0, 0xAA9000
	038 Move X0, [X0+1360]
	039 Call 0x1C17CF4
	040 Move X0, 0xAA9000
	041 Move X0, [X0+1368]
	042 Call 0x1C17CF4
	043 Move W8, 1
	044 Move [X21+2167], W8
	045 Move X0, X19
	046 Move X1, X31
	047 Call Object..ctor, X0
	048 Compare X20, 0
	049 JumpIfEqual {62}
	050 Move X8, 0xAA9000
	051 Move X8, [X8+1344]
	052 Move X1, [X8]
	053 Move X0, X20
	054 Move X2, X31
	055 Call SerializationInfo.GetBoolean, X0, X1
	056 Move TEMP, X0
	057 And TEMP, TEMP, 1
	058 Compare TEMP, 1
	059 JumpIfNotEqual {79}
	060 Move W8, 1
	061 Move [X19+16], W8
	062 Call 0x1C17F20
	063 Move X21, X0
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Move X0, X21
	066 Call 0x3EB2AD0
	067 Move X21, X0
	068 Move X0, 0xA64000
	069 Move X0, [X0+3264]
	070 Call 0x1C17D08
	071 Move X8, [X21]
	072 Move X1, [X8]
	073 Call 0x1C18270
	074 Move TEMP, X0
	075 And TEMP, TEMP, 1
	076 Compare TEMP, 1
	077 JumpIfNotEqual {179}
	078 Call 0x3EB2AE0
	079 Move X8, 0xA5E000
	080 Move X8, [X8+1728]
	081 Move X0, [X8]
	082 Move X8, 0xAA6000
	083 Move X8, [X8+1632]
	084 Move W9, [X0+224]
	085 Move X21, [X8]
	086 Compare W9, 0
	087 JumpIfNotEqual {89}
	088 Call 0x1C17DFC
	089 Move X0, X21
	090 Move X1, X31
	091 Call Type.GetTypeFromHandle, X0
	092 Compare X20, 0
	093 JumpIfEqual {178}
	094 Move X8, 0xAA9000
	095 Move X8, [X8+1352]
	096 Move X2, X0
	097 Move X0, X20
	098 Move X3, X31
	099 Move X1, [X8]
	100 Call SerializationInfo.GetValue, X0, X1, X2
	101 Compare X0, 0
	102 JumpIfEqual {121}
	103 Move X8, 0xA60000
	104 Move X8, [X8+2600]
	105 Move X9, [X0]
	106 Move X1, [X8]
	107 Move W10, [X9+304]
	108 Move W8, [X1+304]
	109 NotImplemented "Instruction CMP not yet implemented."
	110 Move X10, [X9+200]
	111 Subtract X9, X8, 1
	112 Move X10, [X10]
	113 NotImplemented "Instruction CMP not yet implemented."
	114 Move [X19+24], X0
	115 Move X10, [X0]
	116 Move W11, [X10+304]
	117 NotImplemented "Instruction CMP not yet implemented."
	118 Move X8, [X10+200]
	119 Move X8, [X8]
	120 NotImplemented "Instruction CMP not yet implemented."
	121 Move [X19+24], X31
	122 Move X8, 0xAA9000
	123 Move X8, [X8+1360]
	124 Move X0, X20
	125 Move X2, X31
	126 Move X1, [X8]
	127 Call SerializationInfo.GetBoolean, X0, X1
	128 And W8, W0, 1
	129 Move [X19+17], W8
	130 Move X8, 0xA95000
	131 Move X8, [X8+1560]
	132 Move X1, X31
	133 Move X0, [X8]
	134 Call Type.GetTypeFromHandle, X0
	135 Move X8, 0xAA9000
	136 Move X8, [X8+1368]
	137 Move X2, X0
	138 Move X0, X20
	139 Move X3, X31
	140 Move X1, [X8]
	141 Call SerializationInfo.GetValue, X0, X1, X2
	142 Compare X0, 0
	143 JumpIfEqual {163}
	144 Move X8, 0xA8B000
	145 Move X8, [X8+2976]
	146 Move X9, [X0]
	147 Move X1, [X8]
	148 Move W10, [X9+304]
	149 Move W8, [X1+304]
	150 NotImplemented "Instruction CMP not yet implemented."
	151 Move X10, [X9+200]
	152 Subtract X9, X8, 1
	153 Move X10, [X10]
	154 NotImplemented "Instruction CMP not yet implemented."
	155 Move [X19+32], X0
	156 Move X10, [X0]
	157 Move W11, [X10+304]
	158 NotImplemented "Instruction CMP not yet implemented."
	159 Move X8, [X10+200]
	160 Move X8, [X8]
	161 NotImplemented "Instruction CMP not yet implemented."
	162 Call 0x1C181E0
	163 Move [X19+32], X31
	164 Move X8, 0xAA9000
	165 Move X8, [X8+1336]
	166 Move X1, [X8]
	167 Move X0, X20
	168 Move X2, X31
	169 Call SerializationInfo.GetBoolean, X0, X1
	170 And W1, W0, 1
	171 Move X0, X19
	172 Call WebProxy.set_UseDefaultCredentials, X0, X1
	173 Move X20, [X31+16]
	174 Move X19, [X31+24]
	175 Move X30, [X31+32]
	176 Move X21, [X31+40]
	177 Return 
	178 Call 0x1C17F20
	179 Move W0, 8
	180 Call 0x3EB2AF0
	181 Move X8, [X21]
	182 Move [X0], X8
	183 Move X1, 0x81F000
	184 Add X1, X1, 3672
	185 Move X2, X31
	186 Call 0x3EB2B00
	187 Move X21, X0
	188 Call 0x3EB2AE0
	189 NotImplemented "Instruction CMP not yet implemented."
	190 Move X21, X0
	191 Move X0, X21
	192 Call 0x3EB2AD0
	193 Move X19, X0
	194 Move X0, 0xA64000
	195 Move X0, [X0+3264]
	196 Call 0x1C17D08
	197 Move X8, [X19]
	198 Move X1, [X8]
	199 Call 0x1C18270
	200 Move TEMP, X0
	201 And TEMP, TEMP, 1
	202 Compare TEMP, 1
	203 JumpIfNotEqual {210}
	204 Move X20, [X31+16]
	205 Move X19, [X31+24]
	206 Move X30, [X31+32]
	207 Move X21, [X31+40]
	208 Call 0x3EB2AE0
	209 Return 
	210 Move W0, 8
	211 Call 0x3EB2AF0
	212 Move X8, [X19]
	213 Move [X0], X8
	214 Move X1, 0x81F000
	215 Add X1, X1, 3672
	216 Move X2, X31
	217 Call 0x3EB2B00
	218 Move X21, X0
	219 Call 0x3EB2AE0
	220 Move X0, X21
	221 Call 0x1D2D690
	222 Call 0x1991590

Method: System.Void System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext streamingContext)

Disassembly:
	0x03696624 ADRP X9, 0xAA4000
	0x03696628 LDR X9, [X9 + 0xAB8]
	0x0369662C CMP W8, 0x22

ISIL:
	001 Move X8, [X0]
	002 Move X5, [X8+440]
	003 Move X4, [X8+448]
	004 CallNoReturn X5

Method: System.Void GetObjectData(System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext streamingContext)

Disassembly:
	0x03696630 LDR X9, [X9]
	0x03696634 STR X9, [X0 + 0x128]
	0x03696638 B.LS 0x36966FC
	0x0369663C ADRP X9, 0xAA4000
	0x03696640 LDR X9, [X9 + 0xA20]
	0x03696644 CMP W8, 0x23
	0x03696648 LDR X9, [X9]
	0x0369664C STR X9, [X0 + 0x130]
	0x03696650 B.EQ 0x36966FC
	0x03696654 ADRP X9, 0xAA4000
	0x03696658 LDR X9, [X9 + 0xAB0]
	0x0369665C CMP W8, 0x24
	0x03696660 LDR X9, [X9]
	0x03696664 STR X9, [X0 + 0x138]
	0x03696668 B.LS 0x36966FC
	0x0369666C ADRP X9, 0xAA4000
	0x03696670 LDR X9, [X9 + 0x9F0]
	0x03696674 CMP W8, 0x25
	0x03696678 LDR X9, [X9]
	0x0369667C STR X9, [X0 + 0x140]
	0x03696680 B.EQ 0x36966FC
	0x03696684 ADRP X9, 0xAA4000
	0x03696688 LDR X9, [X9 + 0xAE8]
	0x0369668C CMP W8, 0x26
	0x03696690 LDR X9, [X9]
	0x03696694 STR X9, [X0 + 0x148]
	0x03696698 B.LS 0x36966FC
	0x0369669C ADRP X9, 0xAA8000
	0x036966A0 LDR X9, [X9 + 0x578]
	0x036966A4 CMP W8, 0x27
	0x036966A8 LDR X9, [X9]
	0x036966AC STR X9, [X0 + 0x150]
	0x036966B0 B.EQ 0x36966FC
	0x036966B4 ADRP X9, 0xAA8000
	0x036966B8 LDR X9, [X9 + 0x570]
	0x036966BC CMP W8, 0x28
	0x036966C0 LDR X9, [X9]
	0x036966C4 STR X9, [X0 + 0x158]
	0x036966C8 B.LS 0x36966FC
	0x036966CC ADRP X8, 0xAA4000
	0x036966D0 LDR X8, [X8 + 0xA30]
	0x036966D4 ADRP X9, 0xAA7000
	0x036966D8 LDR X8, [X8]
	0x036966DC LDR X9, [X9 + 0xF40]
	0x036966E0 LDP X20, X19, [X31 + 0x10]
	0x036966E4 STR X8, [X0 + 0x160]
	0x036966E8 LDR X8, [X9]
	0x036966EC LDR X8, [X8 + 0xB8]
	0x036966F0 STR X0, [X8]
	0x036966F4 LDR X30, [X31], #0x20
	0x036966F8 RET
	0x036966FC BL 0x1C16F28
	0x03696700 BL 0x1C16F20
	0x03696704 STR X30, [X31 - 0x30]!
	0x03696708 STP X22, X21, [X31 + 0x10]
	0x0369670C STP X20, X19, [X31 + 0x20]
	0x03696710 ADRP X20, 0xD4A000
	0x03696714 LDRB W8, [X20 + 0x881]
	0x03696718 MOV X19, X0
	0x0369671C TBNZ X8, 0x0, 0x3696740
	0x03696720 ADRP X0, 0xA85000
	0x03696724 LDR X0, [X0 + 0x850]
	0x03696728 BL 0x1C16CF4
	0x0369672C ADRP X0, 0xA5F000
	0x03696730 LDR X0, [X0 + 0x278]
	0x03696734 BL 0x1C16CF4
	0x03696738 MOVZ W8, 0x1
	0x0369673C STRB W8, [X20 + 0x881]
	0x03696740 CBZ X19, 0x36967C8
	0x03696744 MOV X0, X19
	0x03696748 MOV X1, X31
	0x0369674C BL 0x3248FBC
	0x03696750 CBZ W0, 0x36967C8

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0xD4B000
	008 Move W8, [X21+2168]
	009 Move X19, X1
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {32}
	015 Move X0, 0xAA9000
	016 Move X0, [X0+1336]
	017 Call 0x1C17CF4
	018 Move X0, 0xAA9000
	019 Move X0, [X0+1344]
	020 Call 0x1C17CF4
	021 Move X0, 0xAA9000
	022 Move X0, [X0+1352]
	023 Call 0x1C17CF4
	024 Move X0, 0xAA9000
	025 Move X0, [X0+1360]
	026 Call 0x1C17CF4
	027 Move X0, 0xAA9000
	028 Move X0, [X0+1368]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X21+2168], W8
	032 Compare X19, 0
	033 JumpIfEqual {88}
	034 Move X8, 0xAA9000
	035 Move X8, [X8+1360]
	036 Move W2, [X20+17]
	037 Move X21, 0xAA9000
	038 Move X22, 0xAA9000
	039 Move X1, [X8]
	040 Move X23, 0xAA9000
	041 Move X21, [X21+1352]
	042 Move X22, [X22+1368]
	043 Move X23, [X23+1336]
	044 Move X0, X19
	045 Move X3, X31
	046 Call SerializationInfo.AddValue, X0, X1, X2
	047 Move X2, [X20+24]
	048 Move X1, [X21]
	049 Move X0, X19
	050 Move X3, X31
	051 Call SerializationInfo.AddValue, X0, X1, X2
	052 Move X2, [X20+32]
	053 Move X1, [X22]
	054 Move X0, X19
	055 Move X3, X31
	056 Call SerializationInfo.AddValue, X0, X1, X2
	057 Move X0, X20
	058 Call WebProxy.get_UseDefaultCredentials, X0
	059 Move X1, [X23]
	060 And W2, W0, 1
	061 Move X0, X19
	062 Move X3, X31
	063 Call SerializationInfo.AddValue, X0, X1, X2
	064 Move W8, [X20+16]
	065 Compare W8, 0
	066 JumpIfEqual {81}
	067 Move X8, 0xAA9000
	068 Move X8, [X8+1344]
	069 Move X0, X19
	070 Move X20, [X31+32]
	071 Move X19, [X31+40]
	072 Move X22, [X31+16]
	073 Move X21, [X31+24]
	074 Move X1, [X8]
	075 Move W2, 1
	076 Move X3, X31
	077 Move X30, [X31+48]
	078 Move X23, [X31+56]
	079 Call SerializationInfo.AddValue, X0, X1, X2
	080 Return 
	081 Move X20, [X31+32]
	082 Move X19, [X31+40]
	083 Move X22, [X31+16]
	084 Move X21, [X31+24]
	085 Move X30, [X31+48]
	086 Move X23, [X31+56]
	087 Return 
	088 Call 0x1C17F20

Method: System.Net.AutoWebProxyScriptEngine get_ScriptEngine()

Disassembly:
	0x03696754 ADRP X22, 0xA85000
	0x03696758 LDR X22, [X22 + 0x850]

ISIL:
	001 Move X0, [X0+64]
	002 Return X0

Method: System.Net.IWebProxy CreateDefaultProxy()

Disassembly:
	0x0369675C LDR X0, [X22]
	0x03696760 LDR W8, [X0 + 0xE0]
	0x03696764 CBNZ W8, 0x369676C
	0x03696768 BL 0x1C16DFC
	0x0369676C MOV X0, X19
	0x03696770 MOV X1, X31
	0x03696774 BL 0x32C16FC
	0x03696778 MOV X19, X0
	0x0369677C MOV X1, X31
	0x03696780 BL 0x32C1330
	0x03696784 MOV X21, X0
	0x03696788 MOV X20, X31
	0x0369678C MOV X0, X19
	0x03696790 MOV X1, X31
	0x03696794 MOV X2, X31
	0x03696798 BL 0x33C5D2C
	0x0369679C TBZ X0, 0x0, 0x36967BC
	0x036967A0 LDR X0, [X22]
	0x036967A4 LDR W8, [X0 + 0xE0]
	0x036967A8 CBNZ W8, 0x36967B0
	0x036967AC BL 0x1C16DFC
	0x036967B0 MOV X0, X19
	0x036967B4 MOV X1, X31
	0x036967B8 BL 0x32C12BC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0xD4B000
	005 Move X20, 0xAA9000
	006 Move W8, [X19+2169]
	007 Move X20, [X20+1376]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xAA9000
	013 Move X0, [X0+1376]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+2169], W8
	017 Move X0, [X20]
	018 Call 0x1C17F10
	019 Move X1, X31
	020 Move X19, X0
	021 Call Object..ctor, X0
	022 Move W8, 1
	023 Move [X19+18], W8
	024 Move [X19+16], W8
	025 Move X0, X19
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Return X0

Method: System.Void .ctor(System.Boolean enableAutoproxy)

Disassembly:
	0x036967BC CBZ X20, 0x36967DC
	0x036967C0 MOV X0, X20
	0x036967C4 BL 0x1C16F18
	0x036967C8 ADRP X8, 0xA5F000
	0x036967CC LDR X8, [X8 + 0x278]
	0x036967D0 LDR X8, [X8]
	0x036967D4 LDR X8, [X8 + 0xB8]
	0x036967D8 LDR X21, [X8]
	0x036967DC MOV X0, X21
	0x036967E0 LDP X20, X19, [X31 + 0x20]
	0x036967E4 LDP X22, X21, [X31 + 0x10]
	0x036967E8 LDR X30, [X31], #0x30

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 And W20, W1, 1
	005 Move X1, X31
	006 Move X19, X0
	007 Call Object..ctor, X0
	008 Move W8, 1
	009 Move [X19+18], W20
	010 Move [X19+16], W8
	011 Move X20, [X31+16]
	012 Move X19, [X31+24]
	013 Move X30, [X31+32]
	014 Return 

Method: System.Void UnsafeUpdateFromRegistry()

Disassembly:
	0x03696618 LDR X9, [X9]
	0x0369661C STR X9, [X0 + 0x120]
	0x03696620 B.EQ 0x36966FC

ISIL:
	001 Move W8, 1
	002 Move [X0+16], W8
	003 Return 

Method: System.Boolean GetProxyAuto(System.Uri destination, out System.Uri proxyUri)

Disassembly:
	0x03695CA8 LDR X0, [X0 + 0xA68]
	0x03695CAC BL 0x1C16CF4
	0x03695CB0 ADRP X0, 0xAA5000
	0x03695CB4 LDR X0, [X0 + 0xA78]
	0x03695CB8 BL 0x1C16CF4
	0x03695CBC ADRP X0, 0xAA5000
	0x03695CC0 LDR X0, [X0 + 0xA80]
	0x03695CC4 BL 0x1C16CF4
	0x03695CC8 ADRP X0, 0xA86000
	0x03695CCC LDR X0, [X0 + 0xB28]
	0x03695CD0 BL 0x1C16CF4
	0x03695CD4 ADRP X0, 0xAA5000
	0x03695CD8 LDR X0, [X0 + 0xA88]
	0x03695CDC BL 0x1C16CF4
	0x03695CE0 ADRP X0, 0xAA5000
	0x03695CE4 LDR X0, [X0 + 0xA90]
	0x03695CE8 BL 0x1C16CF4
	0x03695CEC ADRP X0, 0xAA5000
	0x03695CF0 LDR X0, [X0 + 0xA98]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xD4C000
	005 Move W8, [X20+2170]
	006 Move X19, X2
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0xA62000
	012 Move X0, [X0+600]
	013 Call 0x1C17CF4
	014 Move X0, 0xA86000
	015 Move X0, [X0+1344]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2170], W8
	019 Move [X19], X31
	020 Move X20, [X31+16]
	021 Move X19, [X31+24]
	022 Move W0, W31
	023 Move X30, [X31+32]
	024 Return X0

Method: System.Boolean IsBypassedAuto(System.Uri destination, out System.Boolean isBypassed)

Disassembly:
	0x03696280 ADRP X0, 0xAA4000
	0x03696284 LDR X0, [X0 + 0xAB8]
	0x03696288 BL 0x1C16CF4
	0x0369628C ADRP X0, 0xAA4000
	0x03696290 LDR X0, [X0 + 0xAC0]
	0x03696294 BL 0x1C16CF4
	0x03696298 ADRP X0, 0xAA4000
	0x0369629C LDR X0, [X0 + 0xAD0]
	0x036962A0 BL 0x1C16CF4
	0x036962A4 ADRP X0, 0xAA4000
	0x036962A8 LDR X0, [X0 + 0xAD8]
	0x036962AC BL 0x1C16CF4
	0x036962B0 ADRP X0, 0xAA4000
	0x036962B4 LDR X0, [X0 + 0xAE0]
	0x036962B8 BL 0x1C16CF4
	0x036962BC ADRP X0, 0xAA8000
	0x036962C0 LDR X0, [X0 + 0x578]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xD4B000
	005 Move W8, [X20+2171]
	006 Move X19, X2
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xA61000
	012 Move X0, [X0+600]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2171], W8
	016 Move W8, 1
	017 Move [X19], W8
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move W0, W31
	021 Move X30, [X31+32]
	022 Return X0

Method: System.Boolean AreAllBypassed(System.Collections.Generic.IEnumerable`1<System.String> proxies, System.Boolean checkFirstOnly)

Disassembly:
	0x036967F8 B 0x3696804
	0x036967FC MOV X21, X0
	0x03696800 MOV X19, X31
	0x03696804 CMP W1, 0x1
	0x03696808 B.NE 0x3696824
	0x0369680C MOV X0, X21
	0x03696810 BL 0x3EB1AD0
	0x03696814 LDR X20, [X0]
	0x03696818 BL 0x3EB1AE0
	0x0369681C MOV X21, X31
	0x03696820 B 0x369678C
	0x03696824 MOV X20, X31
	0x03696828 B 0x3696830
	0x0369682C MOV X21, X0
	0x03696830 MOV X0, X19
	0x03696834 MOV X1, X31
	0x03696838 MOV X2, X31
	0x0369683C BL 0x33C5D2C
	0x03696840 TBZ X0, 0x0, 0x3696860
	0x03696844 LDR X0, [X22]
	0x03696848 LDR W8, [X0 + 0xE0]
	0x0369684C CBNZ W8, 0x3696854
	0x03696850 BL 0x1C16DFC
	0x03696854 MOV X0, X19
	0x03696858 MOV X1, X31
	0x0369685C BL 0x32C12BC
	0x03696860 CBNZ X20, 0x369686C
	0x03696864 MOV X0, X21
	0x03696868 BL 0x1D2C690
	0x0369686C MOV X0, X20
	0x03696870 BL 0x1C16F18
	0x03696874 BL 0x1990590
	0x03696878 STP X30, X21, [X31 - 0x20]!
	0x0369687C STP X20, X19, [X31 + 0x10]
	0x03696880 ADRP X20, 0xD4A000
	0x03696884 LDRB W8, [X20 + 0x882]
	0x03696888 MOV X19, X0
	0x0369688C TBNZ X8, 0x0, 0x36968A4
	0x03696890 ADRP X0, 0xAA8000
	0x03696894 LDR X0, [X0 + 0x580]
	0x03696898 BL 0x1C16CF4
	0x0369689C MOVZ W8, 0x1
	0x036968A0 STRB W8, [X20 + 0x882]
	0x036968A4 ADRP X21, 0xAA8000
	0x036968A8 LDR X21, [X21 + 0x580]
	0x036968AC CBZ X19, 0x36968F0
	0x036968B0 LDR W8, [X19 + 0x10]
	0x036968B4 CBZ W8, 0x36968F0
	0x036968B8 MOV X0, X31
	0x036968BC BL 0x32C1424
	0x036968C0 LDR X8, [X21]
	0x036968C4 LDR W20, [X19 + 0x10]
	0x036968C8 ADD X19, X19, W0, SXTW
	0x036968CC MOV X0, X8
	0x036968D0 BL 0x1C16F10
	0x036968D4 MOV X1, X19
	0x036968D8 MOV W2, W20
	0x036968DC MOV X3, X31
	0x036968E0 MOV X21, X0
	0x036968E4 BL 0x3248E78
	0x036968E8 MOV X0, X21
	0x036968EC B 0x3696908
	0x036968F0 LDR X0, [X21]
	0x036968F4 BL 0x1C16F10
	0x036968F8 MOV X1, X31
	0x036968FC MOV X19, X0
	0x03696900 BL 0x3248CD4
	0x03696904 MOV X0, X19
	0x03696908 LDP X20, X19, [X31 + 0x10]
	0x0369690C LDP X30, X21, [X31], #0x20
	0x03696910 RET
	0x03696914 STR X30, [X31 - 0x30]!
	0x03696918 STP X22, X21, [X31 + 0x10]
	0x0369691C STP X20, X19, [X31 + 0x20]
	0x03696920 ADRP X22, 0xD4A000
	0x03696924 ADRP X21, 0xA85000
	0x03696928 LDRB W8, [X22 + 0x883]
	0x0369692C LDR X21, [X21 + 0x580]
	0x03696930 MOV X20, X1
	0x03696934 MOV X19, X0
	0x03696938 TBNZ X8, 0x0, 0x3696950
	0x0369693C ADRP X0, 0xA85000
	0x03696940 LDR X0, [X0 + 0x580]
	0x03696944 BL 0x1C16CF4
	0x03696948 MOVZ W8, 0x1
	0x0369694C STRB W8, [X22 + 0x883]
	0x03696950 MOV X0, X19
	0x03696954 MOV X1, X31
	0x03696958 BL 0x33BDD8C
	0x0369695C STR X20, [X19 + 0x10]
	0x03696960 LDR X0, [X21]
	0x03696964 LDR W8, [X0 + 0xE0]
	0x03696968 CBNZ W8, 0x3696970
	0x0369696C BL 0x1C16DFC
	0x03696970 MOV X0, X31
	0x03696974 BL 0x33DD730
	0x03696978 STR X0, [X19 + 0x18]
	0x0369697C LDP X20, X19, [X31 + 0x20]
	0x03696980 LDP X22, X21, [X31 + 0x10]
	0x03696984 LDR X30, [X31], #0x30
	0x03696988 RET
	0x0369698C LDR X0, [X0 + 0x10]
	0x03696990 RET
	0x03696994 STP X30, X21, [X31 - 0x20]!
	0x03696998 STP X20, X19, [X31 + 0x10]
	0x0369699C ADRP X21, 0xD4A000
	0x036969A0 LDRB W8, [X21 + 0x884]
	0x036969A4 MOV X19, X1
	0x036969A8 MOV X20, X0
	0x036969AC TBNZ X8, 0x0, 0x36969C4
	0x036969B0 ADRP X0, 0xAA8000
	0x036969B4 LDR X0, [X0 + 0x588]
	0x036969B8 BL 0x1C16CF4
	0x036969BC MOVZ W8, 0x1
	0x036969C0 STRB W8, [X21 + 0x884]
	0x036969C4 CBZ X19, 0x3696A34
	0x036969C8 ADRP X9, 0xAA8000
	0x036969CC LDR X9, [X9 + 0x588]
	0x036969D0 LDR X8, [X19]
	0x036969D4 LDR X1, [X9]
	0x036969D8 LDRB W10, [X8 + 0x130]
	0x036969DC LDRB W9, [X1 + 0x130]
	0x036969E0 CMP W10, W9
	0x036969E4 B.CC 0x3696A38
	0x036969E8 LDR X8, [X8 + 0xC8]
	0x036969EC ADD X8, X8, X9, 0x3, LSL
	0x036969F0 LDUR X8, [X8 - 0x8]
	0x036969F4 CMP X8, X1
	0x036969F8 B.NE 0x3696A38
	0x036969FC LDR X8, [X20 + 0x10]
	0x03696A00 CBZ X8, 0x3696A34
	0x03696A04 LDR W4, [X19 + 0x28]
	0x03696A08 LDP X2, X3, [X19 + 0x18]
	0x03696A0C LDR X1, [X19 + 0x10]
	0x03696A10 LDR X9, [X8 + 0x18]
	0x03696A14 LDR X0, [X8 + 0x40]
	0x03696A18 LDR X5, [X8 + 0x28]
	0x03696A1C BLR X9
	0x03696A20 AND W8, W0, 0x1
	0x03696A24 STRB W8, [X19 + 0x2C]
	0x03696A28 LDP X20, X19, [X31 + 0x10]
	0x03696A2C LDP X30, X21, [X31], #0x20
	0x03696A30 RET
	0x03696A34 BL 0x1C16F20
	0x03696A38 MOV X0, X19
	0x03696A3C BL 0x1C171E0
	0x03696A40 STR X30, [X31 - 0x60]!
	0x03696A44 STP X28, X27, [X31 + 0x10]
	0x03696A48 STP X26, X25, [X31 + 0x20]
	0x03696A4C STP X24, X23, [X31 + 0x30]
	0x03696A50 STP X22, X21, [X31 + 0x40]
	0x03696A54 STP X20, X19, [X31 + 0x50]
	0x03696A58 ADRP X24, 0xD4A000
	0x03696A5C LDRB W8, [X24 + 0x885]
	0x03696A60 MOV W19, W4
	0x03696A64 MOV X20, X3
	0x03696A68 MOV X21, X2
	0x03696A6C MOV X23, X1
	0x03696A70 MOV X22, X0
	0x03696A74 TBNZ X8, 0x0, 0x3696AB0
	0x03696A78 ADRP X0, 0xAA8000
	0x03696A7C LDR X0, [X0 + 0x588]
	0x03696A80 BL 0x1C16CF4
	0x03696A84 ADRP X0, 0xA8F000
	0x03696A88 LDR X0, [X0 + 0x948]
	0x03696A8C BL 0x1C16CF4
	0x03696A90 ADRP X0, 0xA85000
	0x03696A94 LDR X0, [X0 + 0x580]
	0x03696A98 BL 0x1C16CF4
	0x03696A9C ADRP X0, 0xAA8000
	0x03696AA0 LDR X0, [X0 + 0x590]
	0x03696AA4 BL 0x1C16CF4
	0x03696AA8 MOVZ W8, 0x1
	0x03696AAC STRB W8, [X24 + 0x885]
	0x03696AB0 LDR X0, [X22 + 0x18]
	0x03696AB4 CBZ X0, 0x3696B68
	0x03696AB8 ADRP X24, 0xAA8000
	0x03696ABC ADRP X26, 0xA8F000
	0x03696AC0 ADRP X27, 0xAA8000
	0x03696AC4 ADRP X28, 0xA85000
	0x03696AC8 LDR X24, [X24 + 0x588]
	0x03696ACC LDR X26, [X26 + 0x948]
	0x03696AD0 LDR X27, [X27 + 0x590]
	0x03696AD4 LDR X28, [X28 + 0x580]
	0x03696AD8 MOV X1, X31
	0x03696ADC BL 0x33E4FE8
	0x03696AE0 LDR X8, [X24]
	0x03696AE4 MOV X25, X0
	0x03696AE8 MOV X0, X8
	0x03696AEC BL 0x1C16F10
	0x03696AF0 MOV X1, X31
	0x03696AF4 MOV X24, X0
	0x03696AF8 BL 0x33BDD8C

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X21, 0xD4B000
	011 Move W8, [X21+2172]
	012 Move W20, W1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {32}
	018 Move X0, 0xA5E000
	019 Move X0, [X0+3584]
	020 Call 0x1C17CF4
	021 Move X0, 0xA5E000
	022 Move X0, [X0+3952]
	023 Call 0x1C17CF4
	024 Move X0, 0xA5E000
	025 Move X0, [X0+3960]
	026 Call 0x1C17CF4
	027 Move X0, 0xA5E000
	028 Move X0, [X0+3608]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X21+2172], W8
	032 Compare X19, 0
	033 JumpIfEqual {165}
	034 Move X10, 0xA5E000
	035 Move X8, [X19]
	036 Move X10, [X10+3952]
	037 NotImplemented "Instruction LDRH not yet implemented."
	038 Move X1, [X10]
	039 Compare X9, 0
	040 JumpIfEqual {47}
	041 Move X10, [X8+176]
	042 Add X10, X10, 8
	043 NotImplemented "Instruction LDUR not yet implemented."
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Subtract X9, X9, 1
	046 Add X10, X10, 16
	047 Move X0, X19
	048 Move W2, W31
	049 Call 0x1C5D788
	050 NotImplemented "Instruction LDRSW not yet implemented."
	051 Add X8, X8, X9
	052 Add X0, X8, 312
	053 Move X8, [X0]
	054 Move X1, [X0+8]
	055 Move X25, 0xA5E000
	056 Move X26, 0xA5E000
	057 Move X23, 0xA5E000
	058 Move X25, [X25+3608]
	059 Move X26, [X26+3960]
	060 Move X23, [X23+3584]
	061 Move X0, X19
	062 NotImplemented "Instruction BLR not yet implemented."
	063 Move X19, X0
	064 Move W24, 1
	065 Compare X19, 0
	066 JumpIfEqual {164}
	067 Move X8, [X19]
	068 Move X1, [X25]
	069 NotImplemented "Instruction LDRH not yet implemented."
	070 Compare X9, 0
	071 JumpIfEqual {78}
	072 Move X10, [X8+176]
	073 Add X10, X10, 8
	074 NotImplemented "Instruction LDUR not yet implemented."
	075 NotImplemented "Instruction CMP not yet implemented."
	076 Subtract X9, X9, 1
	077 Add X10, X10, 16
	078 Move X0, X19
	079 Move W2, W31
	080 Call 0x1C5D788
	081 NotImplemented "Instruction LDRSW not yet implemented."
	082 Add X8, X8, X9
	083 Add X0, X8, 312
	084 Move X8, [X0]
	085 Move X1, [X0+8]
	086 Move X0, X19
	087 NotImplemented "Instruction BLR not yet implemented."
	088 Move TEMP, X0
	089 And TEMP, TEMP, 1
	090 Compare TEMP, 1
	091 JumpIfNotEqual {126}
	092 Move X8, [X19]
	093 Move X1, [X26]
	094 NotImplemented "Instruction LDRH not yet implemented."
	095 Compare X9, 0
	096 JumpIfEqual {103}
	097 Move X10, [X8+176]
	098 Add X10, X10, 8
	099 NotImplemented "Instruction LDUR not yet implemented."
	100 NotImplemented "Instruction CMP not yet implemented."
	101 Subtract X9, X9, 1
	102 Add X10, X10, 16
	103 Move X0, X19
	104 Move W2, W31
	105 Call 0x1C5D788
	106 NotImplemented "Instruction LDRSW not yet implemented."
	107 Add X8, X8, X9
	108 Add X0, X8, 312
	109 Move X8, [X0]
	110 Move X1, [X0+8]
	111 Move X0, X19
	112 NotImplemented "Instruction BLR not yet implemented."
	113 Move X1, X31
	114 Call String.IsNullOrEmpty, X0
	115 Move W22, W0
	116 Move X21, X31
	117 Move TEMP, X0
	118 And TEMP, TEMP, 1
	119 Compare TEMP, 1
	120 JumpIfNotEqual {128}
	121 Move W24, W22
	122 Move TEMP, X20
	123 And TEMP, TEMP, 1
	124 Compare TEMP, 1
	125 JumpIfNotEqual {65}
	126 Move X21, X31
	127 Move W22, W24
	128 Compare X19, 0
	129 JumpIfEqual {151}
	130 Move X8, [X19]
	131 Move X1, [X23]
	132 NotImplemented "Instruction LDRH not yet implemented."
	133 Compare X9, 0
	134 JumpIfEqual {141}
	135 Move X10, [X8+176]
	136 Add X10, X10, 8
	137 NotImplemented "Instruction LDUR not yet implemented."
	138 NotImplemented "Instruction CMP not yet implemented."
	139 Subtract X9, X9, 1
	140 Add X10, X10, 16
	141 Move X0, X19
	142 Move W2, W31
	143 Call 0x1C5D788
	144 NotImplemented "Instruction LDRSW not yet implemented."
	145 Add X8, X8, X9
	146 Add X0, X8, 312
	147 Move X8, [X0]
	148 Move X1, [X0+8]
	149 Move X0, X19
	150 NotImplemented "Instruction BLR not yet implemented."
	151 Compare X21, 0
	152 JumpIfNotEqual {166}
	153 And W0, W22, 1
	154 Move X20, [X31+64]
	155 Move X19, [X31+72]
	156 Move X22, [X31+48]
	157 Move X21, [X31+56]
	158 Move X24, [X31+32]
	159 Move X23, [X31+40]
	160 Move X26, [X31+16]
	161 Move X25, [X31+24]
	162 Move X30, [X31+80]
	163 Return X0
	164 Call 0x1C17F20
	165 Call 0x1C17F20
	166 Move X0, X21
	167 Call 0x1C17F18
	168 Move X20, X0
	169 Move W24, 1
	170 Move X20, X0
	171 NotImplemented "Instruction CMP not yet implemented."
	172 Move X0, X20
	173 Call 0x3EB2AD0
	174 Move X21, [X0]
	175 Call 0x3EB2AE0
	176 Move X21, X31
	177 Move X20, X0
	178 Compare X19, 0
	179 JumpIfEqual {201}
	180 Move X8, [X19]
	181 Move X1, [X23]
	182 NotImplemented "Instruction LDRH not yet implemented."
	183 Compare X9, 0
	184 JumpIfEqual {191}
	185 Move X10, [X8+176]
	186 Add X10, X10, 8
	187 NotImplemented "Instruction LDUR not yet implemented."
	188 NotImplemented "Instruction CMP not yet implemented."
	189 Subtract X9, X9, 1
	190 Add X10, X10, 16
	191 Move X0, X19
	192 Move W2, W31
	193 Call 0x1C5D788
	194 NotImplemented "Instruction LDRSW not yet implemented."
	195 Add X8, X8, X9
	196 Add X0, X8, 312
	197 Move X8, [X0]
	198 Move X1, [X0+8]
	199 Move X0, X19
	200 NotImplemented "Instruction BLR not yet implemented."
	201 Compare X21, 0
	202 JumpIfNotEqual {205}
	203 Move X0, X20
	204 Call 0x1D2D690
	205 Move X0, X21
	206 Call 0x1C17F18
	207 Call 0x1991590

Method: System.Uri ProxyUri(System.String proxyName)

Disassembly:
	0x03696AFC STP X23, X21, [X24 + 0x10]
	0x03696B00 STR X20, [X24 + 0x20]
	0x03696B04 STR W19, [X24 + 0x28]
	0x03696B08 LDR X0, [X26]
	0x03696B0C BL 0x1C16F10
	0x03696B10 LDR X2, [X27]
	0x03696B14 MOV X1, X22
	0x03696B18 MOV X3, X31
	0x03696B1C MOV X19, X0
	0x03696B20 BL 0x33E1224
	0x03696B24 LDR X0, [X28]
	0x03696B28 LDR W8, [X0 + 0xE0]
	0x03696B2C CBNZ W8, 0x3696B34
	0x03696B30 BL 0x1C16DFC
	0x03696B34 MOV X0, X25
	0x03696B38 MOV X1, X19
	0x03696B3C MOV X2, X24
	0x03696B40 MOV X3, X31
	0x03696B44 BL 0x33E1324
	0x03696B48 LDRB W0, [X24 + 0x2C]
	0x03696B4C LDP X20, X19, [X31 + 0x50]
	0x03696B50 LDP X22, X21, [X31 + 0x40]
	0x03696B54 LDP X24, X23, [X31 + 0x30]
	0x03696B58 LDP X26, X25, [X31 + 0x20]
	0x03696B5C LDP X28, X27, [X31 + 0x10]
	0x03696B60 LDR X30, [X31], #0x60
	0x03696B64 RET
	0x03696B68 LDR X8, [X22 + 0x10]
	0x03696B6C CBZ X8, 0x3696BA8
	0x03696B70 LDR X6, [X8 + 0x18]
	0x03696B74 LDR X0, [X8 + 0x40]
	0x03696B78 LDR X5, [X8 + 0x28]
	0x03696B7C MOV X1, X23
	0x03696B80 MOV X2, X21
	0x03696B84 MOV X3, X20
	0x03696B88 MOV W4, W19
	0x03696B8C LDP X20, X19, [X31 + 0x50]
	0x03696B90 LDP X22, X21, [X31 + 0x40]
	0x03696B94 LDP X24, X23, [X31 + 0x30]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xD4B000
	005 Move W8, [X20+2173]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0xA60000
	012 Move X0, [X0+2600]
	013 Call 0x1C17CF4
	014 Move X0, 0xA67000
	015 Move X0, [X0+1960]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2173], W8
	019 Compare X19, 0
	020 JumpIfEqual {41}
	021 Move W8, [X19+16]
	022 Compare W8, 0
	023 JumpIfEqual {41}
	024 Move X8, 0xA67000
	025 Move X8, [X8+1960]
	026 Move X1, X19
	027 Move X2, X31
	028 Move X0, [X8]
	029 Call String.Concat, X0, X1
	030 Move X8, 0xA60000
	031 Move X8, [X8+2600]
	032 Move X19, X0
	033 Move X8, [X8]
	034 Move X0, X8
	035 Call 0x1C17F10
	036 Move X1, X19
	037 Move X2, X31
	038 Move X20, X0
	039 Call Uri..ctor, X0, X1
	040 Move X0, X20
	041 Move X0, X31
	042 Move X20, [X31+16]
	043 Move X19, [X31+24]
	044 Move X30, [X31+32]
	045 Return X0

