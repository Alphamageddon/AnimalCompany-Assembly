Type: System.Net.ServicePointScheduler/<WaitAsync>d__46

Method: System.Void MoveNext()

Disassembly:
	0x036AA2B8 CMP X11, X1
	0x036AA2BC B.EQ 0x36AA2DC
	0x036AA2C0 SUBS X9, X9, 0x1
	0x036AA2C4 ADD X10, X10, 0x10
	0x036AA2C8 B.NE 0x36AA2B4
	0x036AA2CC MOVZ W2, 0x2
	0x036AA2D0 MOV X0, X22
	0x036AA2D4 BL 0x1C5C788
	0x036AA2D8 B 0x36AA2EC
	0x036AA2DC LDR W9, [X10]
	0x036AA2E0 ADD W9, W9, 0x2
	0x036AA2E4 ADD X8, X8, W9, 0x4, SXTW
	0x036AA2E8 ADD X0, X8, 0x138
	0x036AA2EC LDP X8, X1, [X0]
	0x036AA2F0 MOV X0, X22
	0x036AA2F4 BLR X8
	0x036AA2F8 MOV X22, X0
	0x036AA2FC CBZ X0, 0x36AA15C
	0x036AA300 LDR X8, [X20]
	0x036AA304 LDP X9, X1, [X8 + 0x1D8]
	0x036AA308 MOV X0, X20
	0x036AA30C BLR X9
	0x036AA310 ADRP X9, 0xA8F000
	0x036AA314 LDR X8, [X22]
	0x036AA318 LDR X9, [X9 + 0x828]
	0x036AA31C ADRP X10, 0xA79000
	0x036AA320 MOV X23, X0
	0x036AA324 LDR X1, [X9]
	0x036AA328 LDR X10, [X10 + 0xA50]
	0x036AA32C LDRH W9, [X8 + 0x12E]
	0x036AA330 LDR X24, [X10]
	0x036AA334 CBZ X9, 0x36AA358
	0x036AA338 LDR X10, [X8 + 0xB0]
	0x036AA33C ADD X10, X10, 0x8
	0x036AA340 LDUR X11, [X10 - 0x8]
	0x036AA344 CMP X11, X1
	0x036AA348 B.EQ 0x36AA368
	0x036AA34C SUBS X9, X9, 0x1
	0x036AA350 ADD X10, X10, 0x10
	0x036AA354 B.NE 0x36AA340
	0x036AA358 MOV X0, X22
	0x036AA35C MOV W2, W31
	0x036AA360 BL 0x1C5C788
	0x036AA364 B 0x36AA374
	0x036AA368 LDRSW X9, [X10]
	0x036AA36C ADD X8, X8, X9, 0x4, LSL
	0x036AA370 ADD X0, X8, 0x138
	0x036AA374 LDP X8, X3, [X0]
	0x036AA378 MOV X0, X22
	0x036AA37C MOV X1, X23
	0x036AA380 MOV X2, X24
	0x036AA384 BLR X8
	0x036AA388 MOV W24, W31
	0x036AA38C MOV X22, X31
	0x036AA390 CBZ X21, 0x36AA160
	0x036AA394 MOV X23, X0
	0x036AA398 CBZ X0, 0x36AA160
	0x036AA39C MOV X0, X21
	0x036AA3A0 MOV X1, X31
	0x036AA3A4 BL 0x367F1C4
	0x036AA3A8 MOV X22, X0
	0x036AA3AC MOV X0, X23
	0x036AA3B0 MOV X1, X31
	0x036AA3B4 BL 0x367F1C4
	0x036AA3B8 MOV X1, X0
	0x036AA3BC MOV X0, X22
	0x036AA3C0 MOV X2, X31
	0x036AA3C4 BL 0x3226EF8
	0x036AA3C8 TBNZ X0, 0x0, 0x36AA158
	0x036AA3CC MOV X0, X21
	0x036AA3D0 MOV X1, X31
	0x036AA3D4 BL 0x367F1A4
	0x036AA3D8 MOV X22, X0
	0x036AA3DC MOV X0, X23
	0x036AA3E0 MOV X1, X31
	0x036AA3E4 BL 0x367F1A4
	0x036AA3E8 MOV X1, X0
	0x036AA3EC MOV X0, X22
	0x036AA3F0 MOV X2, X31
	0x036AA3F4 BL 0x3226EF8
	0x036AA3F8 TBNZ X0, 0x0, 0x36AA158
	0x036AA3FC MOV X0, X21
	0x036AA400 MOV X1, X31
	0x036AA404 BL 0x367F1AC
	0x036AA408 MOV X21, X0
	0x036AA40C MOV X0, X23
	0x036AA410 MOV X1, X31
	0x036AA414 BL 0x367F1AC
	0x036AA418 MOV X1, X0
	0x036AA41C MOV X0, X21
	0x036AA420 MOV X2, X31
	0x036AA424 BL 0x3226EF8
	0x036AA428 TBNZ X0, 0x0, 0x36AA158
	0x036AA42C LDRB W8, [X20 + 0x179]
	0x036AA430 LDRB W9, [X19 + 0x19]
	0x036AA434 MOV X22, X31
	0x036AA438 CMP W8, 0x0
	0x036AA43C CSET W8, NE
	0x036AA440 CMP W9, 0x0
	0x036AA444 CSET W9, NE
	0x036AA448 AND W24, W8, W9, 0x0
	0x036AA44C B 0x36AA160
	0x036AA450 MOV X0, X22
	0x036AA454 BL 0x1C16F18
	0x036AA458 BL 0x1C16F20
	0x036AA45C BL 0x1C16F20
	0x036AA460 BL 0x1C16F20
	0x036AA464 BL 0x1C16F20
	0x036AA468 B 0x36AA4B8
	0x036AA46C B 0x36AA4B8
	0x036AA470 B 0x36AA4B8
	0x036AA474 B 0x36AA4B8
	0x036AA478 B 0x36AA4B8
	0x036AA47C B 0x36AA4B8
	0x036AA480 B 0x36AA4B8
	0x036AA484 B 0x36AA4B8
	0x036AA488 B 0x36AA4B8
	0x036AA48C B 0x36AA4B8
	0x036AA490 B 0x36AA4B8
	0x036AA494 B 0x36AA4B8
	0x036AA498 B 0x36AA4B8
	0x036AA49C B 0x36AA4B8
	0x036AA4A0 B 0x36AA4B8
	0x036AA4A4 B 0x36AA4B8
	0x036AA4A8 B 0x36AA4B8
	0x036AA4AC B 0x36AA4B8
	0x036AA4B0 B 0x36AA4B8
	0x036AA4B4 B 0x36AA4B8
	0x036AA4B8 MOV X20, X0
	0x036AA4BC CMP W1, 0x1
	0x036AA4C0 B.NE 0x36AA4D8
	0x036AA4C4 MOV X0, X20
	0x036AA4C8 BL 0x3EB1AD0
	0x036AA4CC LDR X22, [X0]
	0x036AA4D0 BL 0x3EB1AE0
	0x036AA4D4 B 0x36AA15C
	0x036AA4D8 MOV X22, X31
	0x036AA4DC B 0x36AA4E4
	0x036AA4E0 MOV X20, X0
	0x036AA4E4 LDRB W8, [X31 + 0xC]
	0x036AA4E8 CBZ W8, 0x36AA4F8
	0x036AA4EC MOV X0, X19
	0x036AA4F0 MOV X1, X31
	0x036AA4F4 BL 0x33E14E4
	0x036AA4F8 CBNZ X22, 0x36AA504
	0x036AA4FC MOV X0, X20
	0x036AA500 BL 0x1D2C690
	0x036AA504 MOV X0, X22
	0x036AA508 BL 0x1C16F18
	0x036AA50C BL 0x1990590
	0x036AA510 LDR W8, [X0 + 0x40]
	0x036AA514 CMP W8, 0x0
	0x036AA518 CSET W0, NE
	0x036AA51C RET
	0x036AA520 STR X30, [X31 - 0x40]!
	0x036AA524 STP X24, X23, [X31 + 0x10]
	0x036AA528 STP X22, X21, [X31 + 0x20]
	0x036AA52C STP X20, X19, [X31 + 0x30]
	0x036AA530 ADRP X21, 0xD36000
	0x036AA534 LDRB W8, [X21 + 0x932]
	0x036AA538 MOV X20, X1
	0x036AA53C MOV X19, X0
	0x036AA540 TBNZ X8, 0x0, 0x36AA570
	0x036AA544 ADRP X0, 0xA8F000
	0x036AA548 LDR X0, [X0 + 0x828]
	0x036AA54C BL 0x1C16CF4
	0x036AA550 ADRP X0, 0xA94000
	0x036AA554 LDR X0, [X0 + 0x120]
	0x036AA558 BL 0x1C16CF4
	0x036AA55C ADRP X0, 0xA79000
	0x036AA560 LDR X0, [X0 + 0xA50]
	0x036AA564 BL 0x1C16CF4
	0x036AA568 MOVZ W8, 0x1
	0x036AA56C STRB W8, [X21 + 0x932]
	0x036AA570 CBZ X20, 0x36AA7F8
	0x036AA574 LDRB W8, [X19 + 0x18]
	0x036AA578 CBZ W8, 0x36AA7F8
	0x036AA57C LDR X20, [X20 + 0x10]
	0x036AA580 CBZ X20, 0x36AA838
	0x036AA584 LDR X8, [X20]
	0x036AA588 LDR X21, [X19 + 0x10]
	0x036AA58C MOV X0, X20
	0x036AA590 LDR X9, [X8 + 0x258]
	0x036AA594 LDR X1, [X8 + 0x260]
	0x036AA598 BLR X9
	0x036AA59C CBZ X0, 0x36AA63C
	0x036AA5A0 LDR X8, [X20]
	0x036AA5A4 MOV X0, X20
	0x036AA5A8 LDR X9, [X8 + 0x258]
	0x036AA5AC LDR X1, [X8 + 0x260]
	0x036AA5B0 BLR X9
	0x036AA5B4 LDR X8, [X20]
	0x036AA5B8 MOV X22, X0
	0x036AA5BC MOV X0, X20
	0x036AA5C0 LDP X9, X1, [X8 + 0x1D8]
	0x036AA5C4 BLR X9
	0x036AA5C8 CBZ X22, 0x36AA838
	0x036AA5CC ADRP X24, 0xA94000
	0x036AA5D0 LDR X8, [X22]
	0x036AA5D4 LDR X24, [X24 + 0x120]
	0x036AA5D8 MOV X23, X0
	0x036AA5DC LDRH W9, [X8 + 0x12E]
	0x036AA5E0 LDR X1, [X24]
	0x036AA5E4 CBZ X9, 0x36AA608
	0x036AA5E8 LDR X10, [X8 + 0xB0]
	0x036AA5EC ADD X10, X10, 0x8
	0x036AA5F0 LDUR X11, [X10 - 0x8]
	0x036AA5F4 CMP X11, X1
	0x036AA5F8 B.EQ 0x36AA618
	0x036AA5FC SUBS X9, X9, 0x1
	0x036AA600 ADD X10, X10, 0x10
	0x036AA604 B.NE 0x36AA5F0
	0x036AA608 MOVZ W2, 0x1
	0x036AA60C MOV X0, X22
	0x036AA610 BL 0x1C5C788
	0x036AA614 B 0x36AA628
	0x036AA618 LDR W9, [X10]
	0x036AA61C ADD W9, W9, 0x1
	0x036AA620 ADD X8, X8, W9, 0x4, SXTW
	0x036AA624 ADD X0, X8, 0x138
	0x036AA628 LDP X8, X2, [X0]
	0x036AA62C MOV X0, X22
	0x036AA630 MOV X1, X23
	0x036AA634 BLR X8
	0x036AA638 TBZ X0, 0x0, 0x36AA654
	0x036AA63C LDR X8, [X20]
	0x036AA640 MOV X0, X20
	0x036AA644 LDR X9, [X8 + 0x228]
	0x036AA648 LDR X1, [X8 + 0x230]
	0x036AA64C BLR X9
	0x036AA650 B 0x36AA6CC
	0x036AA654 LDR X8, [X20]
	0x036AA658 MOV X0, X20
	0x036AA65C LDR X9, [X8 + 0x258]
	0x036AA660 LDR X1, [X8 + 0x260]
	0x036AA664 BLR X9
	0x036AA668 CBZ X0, 0x36AA838
	0x036AA66C LDR X8, [X0]
	0x036AA670 LDR X1, [X24]
	0x036AA674 MOV X22, X0
	0x036AA678 LDRH W9, [X8 + 0x12E]
	0x036AA67C CBZ X9, 0x36AA6A0
	0x036AA680 LDR X10, [X8 + 0xB0]
	0x036AA684 ADD X10, X10, 0x8
	0x036AA688 LDUR X11, [X10 - 0x8]
	0x036AA68C CMP X11, X1
	0x036AA690 B.EQ 0x36AA6B0
	0x036AA694 SUBS X9, X9, 0x1
	0x036AA698 ADD X10, X10, 0x10
	0x036AA69C B.NE 0x36AA688
	0x036AA6A0 MOVZ W2, 0x2
	0x036AA6A4 MOV X0, X22
	0x036AA6A8 BL 0x1C5C788
	0x036AA6AC B 0x36AA6C0
	0x036AA6B0 LDR W9, [X10]
	0x036AA6B4 ADD W9, W9, 0x2
	0x036AA6B8 ADD X8, X8, W9, 0x4, SXTW
	0x036AA6BC ADD X0, X8, 0x138
	0x036AA6C0 LDP X8, X1, [X0]
	0x036AA6C4 MOV X0, X22
	0x036AA6C8 BLR X8
	0x036AA6CC MOV X22, X0
	0x036AA6D0 CBZ X0, 0x36AA7F8
	0x036AA6D4 LDR X8, [X20]
	0x036AA6D8 MOV X0, X20
	0x036AA6DC LDP X9, X1, [X8 + 0x1D8]
	0x036AA6E0 BLR X9
	0x036AA6E4 ADRP X9, 0xA8F000
	0x036AA6E8 LDR X8, [X22]
	0x036AA6EC LDR X9, [X9 + 0x828]
	0x036AA6F0 ADRP X10, 0xA79000
	0x036AA6F4 MOV X24, X0
	0x036AA6F8 LDR X1, [X9]
	0x036AA6FC LDR X10, [X10 + 0xA50]
	0x036AA700 LDRH W9, [X8 + 0x12E]
	0x036AA704 LDR X23, [X10]
	0x036AA708 CBZ X9, 0x36AA72C
	0x036AA70C LDR X10, [X8 + 0xB0]
	0x036AA710 ADD X10, X10, 0x8
	0x036AA714 LDUR X11, [X10 - 0x8]
	0x036AA718 CMP X11, X1
	0x036AA71C B.EQ 0x36AA73C
	0x036AA720 SUBS X9, X9, 0x1
	0x036AA724 ADD X10, X10, 0x10
	0x036AA728 B.NE 0x36AA714
	0x036AA72C MOV X0, X22
	0x036AA730 MOV W2, W31
	0x036AA734 BL 0x1C5C788
	0x036AA738 B 0x36AA748
	0x036AA73C LDRSW X9, [X10]
	0x036AA740 ADD X8, X8, X9, 0x4, LSL
	0x036AA744 ADD X0, X8, 0x138
	0x036AA748 LDP X8, X3, [X0]
	0x036AA74C MOV X0, X22
	0x036AA750 MOV X1, X24
	0x036AA754 MOV X2, X23

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+40], X23
	004 Move [X31+48], X22
	005 Move [X31+56], X21
	006 Move [X31+64], X20
	007 Move [X31+72], X19
	008 Move X20, 0xD37000
	009 Move W8, [X20+2345]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {47}
	015 Move X0, 0xA95000
	016 Move X0, [X0+3880]
	017 Call 0x1C17CF4
	018 Move X0, 0xA54000
	019 Move X0, [X0+392]
	020 Call 0x1C17CF4
	021 Move X0, 0xA54000
	022 Move X0, [X0+224]
	023 Call 0x1C17CF4
	024 Move X0, 0xA4C000
	025 Move X0, [X0+2640]
	026 Call 0x1C17CF4
	027 Move X0, 0xA84000
	028 Move X0, [X0+480]
	029 Call 0x1C17CF4
	030 Move X0, 0xA84000
	031 Move X0, [X0+488]
	032 Call 0x1C17CF4
	033 Move X0, 0xA84000
	034 Move X0, [X0+496]
	035 Call 0x1C17CF4
	036 Move X0, 0xA53000
	037 Move X0, [X0+3104]
	038 Call 0x1C17CF4
	039 Move X0, 0xA84000
	040 Move X0, [X0+504]
	041 Call 0x1C17CF4
	042 Move X0, 0xA4B000
	043 Move X0, [X0+1976]
	044 Call 0x1C17CF4
	045 Move W8, 1
	046 Move [X20+2345], W8
	047 Move [X31+16], X31
	048 Move [X31+24], X31
	049 Move [X31+8], W31
	050 Move W23, [X19]
	051 Compare W23, 0
	052 JumpIfEqual {152}
	053 Move X8, 0xA4C000
	054 Move X8, [X8+2640]
	055 Move X0, [X8]
	056 Call 0x1C17F10
	057 Move X21, X0
	058 Move X1, X31
	059 Call CancellationTokenSource..ctor, X0
	060 Move [X19+48], X21
	061 Compare X21, 0
	062 JumpIfEqual {242}
	063 Move W20, [X19+32]
	064 Move X0, X21
	065 Move X1, X31
	066 Call CancellationTokenSource.get_Token, X0
	067 Move X8, 0xA4B000
	068 Move X8, [X8+1976]
	069 Move X21, X0
	070 Move X0, [X8]
	071 Move W8, [X0+224]
	072 Compare W8, 0
	073 JumpIfNotEqual {75}
	074 Call 0x1C17DFC
	075 Move W0, W20
	076 Move X1, X21
	077 Move X2, X31
	078 Call Task.Delay, X0, X1
	079 Move X8, 0xA53000
	080 Move X8, [X8+3104]
	081 Move [X19+56], X0
	082 Move X0, [X8]
	083 Move W1, 2
	084 Call 0x1C17D6C
	085 Move X20, X0
	086 Compare X0, 0
	087 JumpIfEqual {243}
	088 Move X21, [X19+40]
	089 Compare X21, 0
	090 JumpIfEqual {97}
	091 Move X8, [X20]
	092 Move X1, [X8+64]
	093 Move X0, X21
	094 Call 0x1C17E00
	095 Compare X0, 0
	096 JumpIfEqual {247}
	097 Move W8, [X20+24]
	098 Compare W8, 0
	099 JumpIfEqual {244}
	100 Move [X20+32], X21
	101 Move X21, [X19+56]
	102 Compare X21, 0
	103 JumpIfEqual {111}
	104 Move X8, [X20]
	105 Move X1, [X8+64]
	106 Move X0, X21
	107 Call 0x1C17E00
	108 Compare X0, 0
	109 JumpIfEqual {250}
	110 Move W8, [X20+24]
	111 NotImplemented "Instruction CMP not yet implemented."
	112 Move [X20+40], X21
	113 Move X0, X20
	114 Move X1, X31
	115 Call Task.WhenAny, X0
	116 Compare X0, 0
	117 JumpIfEqual {246}
	118 Move X8, 0xA84000
	119 Move X8, [X8+504]
	120 Move X2, [X8]
	121 Move W1, W31
	122 Call Task`1<Object>.ConfigureAwait, X0, X1
	123 Move X8, 0xA84000
	124 Move X8, [X8+496]
	125 Move [X31+16], X0
	126 Move [X31+24], X1
	127 Move X8, [X8]
	128 Add X0, X31, 16
	129 Move X1, X8
	130 Call ConfiguredTaskAwaiter<Object>.get_IsCompleted, X0
	131 Move TEMP, X0
	132 And TEMP, TEMP, 1
	133 Compare TEMP, 1
	134 JumpIfEqual {160}
	135 Move [X19], W31
	136 Move V0, [X31+1]
	137 Move X8, 0xA54000
	138 Move [X19+4], V0
	139 Move X8, [X8+224]
	140 Move X0, [X8]
	141 Move W8, [X0+224]
	142 Compare W8, 0
	143 JumpIfNotEqual {145}
	144 Call 0x1C17DFC
	145 Move X8, 0xA95000
	146 Move X8, [X8+3880]
	147 Add X0, X19, 8
	148 Move X3, [X8]
	149 Add X1, X31, 16
	150 Move X2, X19
	151 Call AsyncTaskMethodBuilder`1<Boolean>.AwaitUnsafeOnCompleted, X0, X1, X2
	152 Move V0, [X19+4]
	153 Move TEMP, 0
	154 Not TEMP
	155 Move W23, TEMP
	156 Move [X31+1], V0
	157 Move [X19+64], X31
	158 Move [X19+72], X31
	159 Move [X19], W23
	160 Move X8, 0xA84000
	161 Move X8, [X8+488]
	162 Add X0, X31, 16
	163 Move X1, [X8]
	164 Call ConfiguredTaskAwaiter<Object>.GetResult, X0
	165 Move X8, [X19+56]
	166 Move X21, X31
	167 Move W22, 6
	168 NotImplemented "Instruction CMP not yet implemented."
	169 NotImplemented "Instruction CSET not yet implemented."
	170 Move TEMP, X23
	171 And TEMP, TEMP, -2147483648
	172 Compare TEMP, -2147483648
	173 JumpIfNotEqual {184}
	174 Move X0, [X19+48]
	175 Compare X0, 0
	176 JumpIfEqual {253}
	177 Move X1, X31
	178 Call CancellationTokenSource.Cancel, X0
	179 Move X0, [X19+48]
	180 Compare X0, 0
	181 JumpIfEqual {254}
	182 Move X1, X31
	183 Call CancellationTokenSource.Dispose, X0
	184 Compare X21, 0
	185 JumpIfNotEqual {240}
	186 Compare W22, 0
	187 JumpIfEqual {207}
	188 NotImplemented "Instruction CMP not yet implemented."
	189 Move TEMP, 1
	190 Not TEMP
	191 Move W8, TEMP
	192 Move [X19+48], X31
	193 Move [X19+8], W8
	194 Move X8, 0xA54000
	195 Move X8, [X8+224]
	196 Move X0, [X8]
	197 Move W8, [X0+224]
	198 Compare W8, 0
	199 JumpIfNotEqual {201}
	200 Call 0x1C17DFC
	201 Move X8, 0xA54000
	202 Move X8, [X8+392]
	203 Move X0, X19
	204 Move W1, W20
	205 Move X2, [X8]
	206 Call AsyncTaskMethodBuilder`1<Boolean>.SetResult, X0, X1
	207 Move TEMP, 0
	208 Not TEMP
	209 Move X8, TEMP
	210 Add X9, X31, 0
	211 Move X20, [X9]
	212 Move TEMP, 1
	213 Not TEMP
	214 Move W8, TEMP
	215 Move [X19], W8
	216 Move [X19+48], X31
	217 Move X0, 0xA54000
	218 Move X0, [X0+224]
	219 Add X19, X19, 8
	220 Call 0x1C17D08
	221 Move W8, [X0+224]
	222 Compare W8, 0
	223 JumpIfNotEqual {225}
	224 Call 0x1C17DFC
	225 Move X0, 0xA54000
	226 Move X0, [X0+400]
	227 Call 0x1C17D08
	228 Move X2, X0
	229 Move X0, X19
	230 Move X1, X20
	231 Call AsyncTaskMethodBuilder`1<Boolean>.SetException, X0, X1
	232 Move X20, [X31+64]
	233 Move X19, [X31+72]
	234 Move X22, [X31+48]
	235 Move X21, [X31+56]
	236 Move X30, [X31+32]
	237 Move X23, [X31+40]
	238 Add X31, X31, 80
	239 Return 
	240 Move X0, X21
	241 Call 0x1C17F18
	242 Call 0x1C17F20
	243 Call 0x1C17F20
	244 Call 0x1C17F28
	245 Call 0x1C17F28
	246 Call 0x1C17F20
	247 Call 0x1C17F44
	248 Move X1, X31
	249 Call 0x1C17DEC
	250 Call 0x1C17F44
	251 Move X1, X31
	252 Call 0x1C17DEC
	253 Call 0x1C17F20
	254 Call 0x1C17F20
	255 Move X22, X1
	256 Move X20, X0
	257 Move W23, W31
	258 Move X22, X1
	259 Move X20, X0
	260 Move X22, X1
	261 Move X20, X0
	262 NotImplemented "Instruction CMP not yet implemented."
	263 Move X0, X20
	264 Call 0x3EB2AD0
	265 Move X21, [X0]
	266 Call 0x3EB2AE0
	267 Move W22, W31
	268 Move W20, W31
	269 Move TEMP, X23
	270 And TEMP, TEMP, -2147483648
	271 Compare TEMP, -2147483648
	272 JumpIfNotEqual {184}
	273 Move X21, X31
	274 Move TEMP, X23
	275 And TEMP, TEMP, -2147483648
	276 Compare TEMP, -2147483648
	277 JumpIfNotEqual {288}
	278 Move X0, [X19+48]
	279 Compare X0, 0
	280 JumpIfEqual {320}
	281 Move X1, X31
	282 Call CancellationTokenSource.Cancel, X0
	283 Move X0, [X19+48]
	284 Compare X0, 0
	285 JumpIfEqual {321}
	286 Move X1, X31
	287 Call CancellationTokenSource.Dispose, X0
	288 Compare X21, 0
	289 JumpIfNotEqual {318}
	290 NotImplemented "Instruction CMP not yet implemented."
	291 Move X0, X20
	292 Call 0x3EB2AD0
	293 Move X20, X0
	294 Move X0, 0xA4A000
	295 Move X0, [X0+2000]
	296 Call 0x1C17D08
	297 Move X8, [X20]
	298 Move X1, [X8]
	299 Call 0x1C18270
	300 Move TEMP, X0
	301 And TEMP, TEMP, 1
	302 Compare TEMP, 1
	303 JumpIfNotEqual {310}
	304 Move X8, [X20]
	305 Move W9, 1
	306 Move [X31+8], W9
	307 Move [X31], X8
	308 Call 0x3EB2AE0
	309 Move X8, X31
	310 Move W0, 8
	311 Call 0x3EB2AF0
	312 Move X8, [X20]
	313 Move [X0], X8
	314 Move X1, 0x80B000
	315 Add X1, X1, 3672
	316 Move X2, X31
	317 Call 0x3EB2B00
	318 Move X0, X21
	319 Call 0x1C17F18
	320 Call 0x1C17F20
	321 Call 0x1C17F20
	322 Move X22, X1
	323 Move X20, X0
	324 Move TEMP, X23
	325 And TEMP, TEMP, -2147483648
	326 Compare TEMP, -2147483648
	327 JumpIfNotEqual {288}
	328 Move X20, X0
	329 Call 0x3EB2AE0
	330 Move X0, X20
	331 Call 0x1D2D690
	332 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x036AA758 BLR X8
	0x036AA75C CBZ X21, 0x36AA7F8
	0x036AA760 MOV X22, X0
	0x036AA764 CBZ X0, 0x36AA7F8
	0x036AA768 MOV X0, X21
	0x036AA76C MOV X1, X31
	0x036AA770 BL 0x367F1C4
	0x036AA774 MOV X23, X0
	0x036AA778 MOV X0, X22
	0x036AA77C MOV X1, X31
	0x036AA780 BL 0x367F1C4
	0x036AA784 MOV X1, X0
	0x036AA788 MOV X0, X23
	0x036AA78C MOV X2, X31
	0x036AA790 BL 0x3226EF8
	0x036AA794 TBNZ X0, 0x0, 0x36AA7F8
	0x036AA798 MOV X0, X21
	0x036AA79C MOV X1, X31
	0x036AA7A0 BL 0x367F1A4
	0x036AA7A4 MOV X23, X0
	0x036AA7A8 MOV X0, X22
	0x036AA7AC MOV X1, X31
	0x036AA7B0 BL 0x367F1A4
	0x036AA7B4 MOV X1, X0
	0x036AA7B8 MOV X0, X23
	0x036AA7BC MOV X2, X31
	0x036AA7C0 BL 0x3226EF8
	0x036AA7C4 TBNZ X0, 0x0, 0x36AA7F8
	0x036AA7C8 MOV X0, X21
	0x036AA7CC MOV X1, X31
	0x036AA7D0 BL 0x367F1AC

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xD37000
	007 Move X21, 0xA54000
	008 Move W8, [X22+2346]
	009 Move X21, [X21+224]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xA54000
	017 Move X0, [X0+408]
	018 Call 0x1C17CF4
	019 Move X0, 0xA54000
	020 Move X0, [X0+224]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+2346], W8
	024 Move X0, [X21]
	025 Move X21, 0xA54000
	026 Move W8, [X0+224]
	027 Move X21, [X21+408]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X2, [X21]
	032 Add X0, X20, 8
	033 Move X1, X19
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Call AsyncTaskMethodBuilder`1<Boolean>.SetStateMachine, X0, X1
	040 Return 

