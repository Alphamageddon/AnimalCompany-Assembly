Type: System.Net.TimerThread/TimerNode

Method: System.Void .ctor(System.Net.TimerThread/Callback callback, System.Object context, System.Int32 durationMilliseconds, System.Object queueLock)

Disassembly:
	0x03689A1C MOVZ W1, 0x2E
	0x03689A20 MOVZ W2, 0x1
	0x03689A24 MOV X0, X28
	0x03689A28 SUB W3, W8, 0x2
	0x03689A2C MOV X4, X31
	0x03689A30 BL 0x322BDB4
	0x03689A34 ADDS W31, W0, 0x1
	0x03689A38 B.EQ 0x3689BB8
	0x03689A3C CMP W25, 0x1
	0x03689A40 B.NE 0x3689B74
	0x03689A44 LDR X0, [X29]
	0x03689A48 LDR W8, [X0 + 0xE0]
	0x03689A4C CBNZ W8, 0x3689A54
	0x03689A50 BL 0x1C16DFC
	0x03689A54 MOV X0, X28
	0x03689A58 MOV X1, X24
	0x03689A5C BL 0x368948C
	0x03689A60 TBNZ X0, 0x0, 0x3689BD8
	0x03689A64 LDR W8, [X24 + 0x10]
	0x03689A68 LDR W4, [X28 + 0x10]
	0x03689A6C SUBS W1, W8, W4
	0x03689A70 B.LE 0x368991C

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, X1
	008 Move X1, X31
	009 Move X19, X4
	010 Move W23, W3
	011 Move X21, X2
	012 Move X20, X0
	013 Call Object..ctor, X0
	014 Move X0, X31
	015 Move [X20+20], W23
	016 Call Environment.get_TickCount
	017 Move [X20+16], W0
	018 Compare X22, 0
	019 JumpIfEqual {22}
	020 Move [X20+32], X22
	021 Move [X20+40], X21
	022 Move [X20+24], W31
	023 Move [X20+48], X19
	024 Move X20, [X31+32]
	025 Move X19, [X31+40]
	026 Move X22, [X31+16]
	027 Move X21, [X31+24]
	028 Move X30, [X31+48]
	029 Move X23, [X31+56]
	030 Return 

Method: System.Void .ctor()

Disassembly:
	0x0368980C MOV X0, X21
	0x03689810 BL 0x1C16D08
	0x03689814 MOV X2, X0
	0x03689818 MOV X0, X20
	0x0368981C MOV X1, X31
	0x03689820 BL 0x1993444
	0x03689824 LDR X19, [X19 + 0x10]
	0x03689828 B 0x3689CE0
	0x0368982C LDR X0, [X19 + 0x48]
	0x03689830 CBZ X0, 0x36898B4
	0x03689834 LDR W8, [X0 + 0x10]
	0x03689838 CMP W8, 0x3

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X1, X31
	004 Move X19, X0
	005 Call Object..ctor, X0
	006 Move X0, X31
	007 Move [X19+20], W31
	008 Call Environment.get_TickCount
	009 Move W8, 3
	010 Move [X19+16], W0
	011 Move [X19+24], W8
	012 Move X30, [X31+16]
	013 Move X19, [X31+24]
	014 Return 

Method: System.Boolean get_HasExpired()

Disassembly:
	0x03689D80 MOV X1, X0
	0x03689D84 MOV X0, X20
	0x03689D88 BL 0x19980B4
	0x03689D8C MOV X0, X21

ISIL:
	001 Move W8, [X0+24]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 NotImplemented "Instruction CSET not yet implemented."
	004 Return X0

Method: System.Net.TimerThread/TimerNode get_Next()

Disassembly:
	0x03689D90 BL 0x1C16D08
	0x03689D94 MOV X2, X0

ISIL:
	001 Move X0, [X0+56]
	002 Return X0

Method: System.Void set_Next(System.Net.TimerThread/TimerNode value)

Disassembly:
	0x03689D98 MOV X0, X20
	0x03689D9C MOV X1, X31

ISIL:
	001 Move [X0+56], X1
	002 Return 

Method: System.Net.TimerThread/TimerNode get_Prev()

Disassembly:
	0x03689DA0 BL 0x1993444
	0x03689DA4 LDR X19, [X19 + 0x58]

ISIL:
	001 Move X0, [X0+64]
	002 Return X0

Method: System.Void set_Prev(System.Net.TimerThread/TimerNode value)

Disassembly:
	0x03689DA8 B 0x3689CE0
	0x03689DAC ADRP X0, 0xA6A000

ISIL:
	001 Move [X0+64], X1
	002 Return 

Method: System.Boolean Cancel()

Disassembly:
	0x03689DB0 LDR X0, [X0 + 0x9D0]
	0x03689DB4 BL 0x1C16D08
	0x03689DB8 MOVZ W1, 0x2
	0x03689DBC BL 0x1C16D6C
	0x03689DC0 CBNZ X0, 0x3689DC8
	0x03689DC4 BL 0x1C16F20
	0x03689DC8 MOV X20, X0
	0x03689DCC ADRP X0, 0xA6F000
	0x03689DD0 LDR X0, [X0 + 0x170]
	0x03689DD4 BL 0x1C16D08
	0x03689DD8 CBZ X0, 0x3689DF8
	0x03689DDC LDR X8, [X20]
	0x03689DE0 LDR X1, [X8 + 0x40]
	0x03689DE4 BL 0x1C16E00
	0x03689DE8 CBNZ X0, 0x3689DF8
	0x03689DEC BL 0x1C16F44
	0x03689DF0 MOV X1, X31
	0x03689DF4 BL 0x1C16DEC
	0x03689DF8 ADRP X0, 0xA6F000
	0x03689DFC LDR X0, [X0 + 0x170]
	0x03689E00 BL 0x1C16D08
	0x03689E04 LDR W8, [X20 + 0x18]
	0x03689E08 CBNZ W8, 0x3689E10
	0x03689E0C BL 0x1C16F28
	0x03689E10 STR X0, [X20 + 0x20]
	0x03689E14 ADRP X0, 0xAB5000
	0x03689E18 LDR X22, [X19 + 0x40]
	0x03689E1C LDR X0, [X0 + 0x2B0]
	0x03689E20 BL 0x1C16D08
	0x03689E24 MOV X21, X0
	0x03689E28 CBNZ X22, 0x3689E40
	0x03689E2C ADRP X0, 0xA71000
	0x03689E30 LDR X0, [X0 + 0xD58]
	0x03689E34 BL 0x1C16D08
	0x03689E38 MOV X19, X0
	0x03689E3C B 0x3689E44
	0x03689E40 LDR X19, [X19 + 0x40]
	0x03689E44 MOV X0, X20
	0x03689E48 BL 0x19903C0
	0x03689E4C MOV X0, X20
	0x03689E50 MOV X1, X19
	0x03689E54 BL 0x19980B4
	0x03689E58 MOVZ W1, 0x1
	0x03689E5C MOV X0, X20
	0x03689E60 MOV X2, X19
	0x03689E64 BL 0x1993444
	0x03689E68 MOV X0, X21
	0x03689E6C MOV X1, X20
	0x03689E70 MOV X2, X31
	0x03689E74 BL 0x320A16C
	0x03689E78 MOV X19, X0
	0x03689E7C ADRP X0, 0xAB5000
	0x03689E80 LDR X0, [X0 + 0x2D8]
	0x03689E84 BL 0x1C16D08
	0x03689E88 BL 0x1C16F10
	0x03689E8C MOV X1, X19
	0x03689E90 MOV X2, X31
	0x03689E94 MOV X20, X0
	0x03689E98 BL 0x369143C
	0x03689E9C ADRP X0, 0xAB5000
	0x03689EA0 LDR X0, [X0 + 0x2E0]
	0x03689EA4 BL 0x1C16D08
	0x03689EA8 MOV X1, X0
	0x03689EAC MOV X0, X20
	0x03689EB0 BL 0x1C16DEC
	0x03689EB4 STR X30, [X31 - 0x20]!
	0x03689EB8 STP X20, X19, [X31 + 0x10]
	0x03689EBC CBZ X0, 0x3689F5C
	0x03689EC0 LDR W8, [X0 + 0x10]
	0x03689EC4 MOV X19, X0
	0x03689EC8 CBZ W8, 0x3689F50
	0x03689ECC CMP W8, 0x1

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move W8, [X0+24]
	007 Compare W8, 0
	008 JumpIfEqual {10}
	009 Move W21, W31
	010 Move X19, [X0+48]
	011 Move X21, X0
	012 Move [X31+12], W31
	013 Add X1, X31, 12
	014 Move X0, X19
	015 Move X2, X31
	016 Call Monitor.Enter, X0, X1
	017 Move W8, [X21+24]
	018 Compare W8, 0
	019 JumpIfEqual {22}
	020 Move X20, X31
	021 Move W21, W31
	022 Move X8, X21
	023 Add X8, X8, 56
	024 Move X9, [X8]
	025 Compare X9, 0
	026 JumpIfEqual {58}
	027 Move X10, [X21+64]
	028 Move [X9+64], X10
	029 Move X10, [X21+64]
	030 Compare X10, 0
	031 JumpIfEqual {59}
	032 Move [X10+56], X9
	033 Move [X21+32], X31
	034 Move [X21+40], X31
	035 Move [X8], X31
	036 Move [X8+8], X31
	037 Move W8, 2
	038 Move X20, X31
	039 Move [X21+24], W8
	040 Move W21, 1
	041 Move W8, [X31+12]
	042 Compare W8, 0
	043 JumpIfEqual {47}
	044 Move X0, X19
	045 Move X1, X31
	046 Call Monitor.Exit, X0
	047 Compare X20, 0
	048 JumpIfNotEqual {56}
	049 Move W0, W21
	050 Move X20, [X31+32]
	051 Move X19, [X31+40]
	052 Move X30, [X31+16]
	053 Move X21, [X31+24]
	054 Add X31, X31, 48
	055 Return X0
	056 Move X0, X20
	057 Call 0x1C17F18
	058 Call 0x1C17F20
	059 Call 0x1C17F20
	060 Move X21, X0
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Move X0, X21
	063 Call 0x3EB2AD0
	064 Move X20, [X0]
	065 Call 0x3EB2AE0
	066 Move X20, X31
	067 Move X21, X0
	068 Move W8, [X31+12]
	069 Compare W8, 0
	070 JumpIfEqual {74}
	071 Move X0, X19
	072 Move X1, X31
	073 Call Monitor.Exit, X0
	074 Compare X20, 0
	075 JumpIfNotEqual {78}
	076 Move X0, X21
	077 Call 0x1D2D690
	078 Move X0, X20
	079 Call 0x1C17F18
	080 Call 0x1991590

Method: System.Boolean Fire()

Disassembly:
	0x03689A74 MOVZ W5, 0x5
	0x03689A78 MOV X0, X24
	0x03689A7C MOV X2, X28
	0x03689A80 MOV W3, W31
	0x03689A84 MOV X6, X31
	0x03689A88 BL 0x3225DC8
	0x03689A8C CBNZ W0, 0x368991C
	0x03689A90 B 0x3689BD8
	0x03689A94 TBZ X20, 0x0, 0x3689624
	0x03689A98 ADRP X0, 0xA6A000
	0x03689A9C LDR X0, [X0 + 0x9D0]
	0x03689AA0 BL 0x1C16D08
	0x03689AA4 MOVZ W1, 0x2
	0x03689AA8 BL 0x1C16D6C
	0x03689AAC CBZ X0, 0x3689DC4
	0x03689AB0 MOV X19, X0
	0x03689AB4 ADRP X0, 0xAB5000
	0x03689AB8 LDR X0, [X0 + 0x2C0]
	0x03689ABC BL 0x1C16D08
	0x03689AC0 CBZ X0, 0x3689AD4
	0x03689AC4 LDR X8, [X19]
	0x03689AC8 LDR X1, [X8 + 0x40]
	0x03689ACC BL 0x1C16E00
	0x03689AD0 CBZ X0, 0x3689DEC
	0x03689AD4 ADRP X0, 0xAB5000
	0x03689AD8 LDR X0, [X0 + 0x2C0]
	0x03689ADC BL 0x1C16D08
	0x03689AE0 LDR W8, [X19 + 0x18]
	0x03689AE4 CBZ W8, 0x3689E0C
	0x03689AE8 STR X0, [X19 + 0x20]
	0x03689AEC ADRP X0, 0xAB5000
	0x03689AF0 LDR X0, [X0 + 0x2B0]
	0x03689AF4 BL 0x1C16D08
	0x03689AF8 MOV X20, X0
	0x03689AFC CBNZ X28, 0x3689B10
	0x03689B00 ADRP X0, 0xA71000
	0x03689B04 LDR X0, [X0 + 0xD58]
	0x03689B08 BL 0x1C16D08
	0x03689B0C MOV X28, X0
	0x03689B10 MOV X0, X19
	0x03689B14 BL 0x19903C0
	0x03689B18 MOV X0, X19
	0x03689B1C MOV X1, X28
	0x03689B20 BL 0x19980B4
	0x03689B24 MOVZ W1, 0x1
	0x03689B28 MOV X0, X19
	0x03689B2C MOV X2, X28
	0x03689B30 BL 0x1993444
	0x03689B34 MOV X0, X20
	0x03689B38 MOV X1, X19
	0x03689B3C B 0x3689E70
	0x03689B40 CBZ X23, 0x3689DC4
	0x03689B44 MOVZ W1, 0x2F
	0x03689B48 MOV X0, X23
	0x03689B4C MOV X2, X31
	0x03689B50 BL 0x322C668
	0x03689B54 ADD W2, W0, 0x1
	0x03689B58 MOV X0, X23
	0x03689B5C MOV W1, W31
	0x03689B60 MOV X3, X31
	0x03689B64 BL 0x3228DE4
	0x03689B68 MOV X23, X0
	0x03689B6C STR X23, [X19 + 0x48]
	0x03689B70 B 0x3689C38
	0x03689B74 LDR W8, [X31 + 0xC]
	0x03689B78 ADDS W31, W8, 0x1
	0x03689B7C B.EQ 0x3689BB8
	0x03689B80 LDR W8, [X24 + 0x10]
	0x03689B84 LDR W9, [X31 + 0xC]
	0x03689B88 LDR W4, [X28 + 0x10]
	0x03689B8C SUB W8, W8, W9
	0x03689B90 CMP W4, W8
	0x03689B94 B.NE 0x3689BB8
	0x03689B98 LDR W1, [X31 + 0xC]
	0x03689B9C MOVZ W5, 0x5
	0x03689BA0 MOV X0, X24
	0x03689BA4 MOV X2, X28
	0x03689BA8 MOV W3, W31
	0x03689BAC MOV X6, X31
	0x03689BB0 BL 0x3225DC8
	0x03689BB4 CBZ W0, 0x3689BD8
	0x03689BB8 LDR X0, [X29]
	0x03689BBC LDR W8, [X0 + 0xE0]
	0x03689BC0 CBNZ W8, 0x3689BC8
	0x03689BC4 BL 0x1C16DFC
	0x03689BC8 MOV X0, X28
	0x03689BCC MOV X1, X24
	0x03689BD0 BL 0x368948C
	0x03689BD4 TBZ X0, 0x0, 0x368991C
	0x03689BD8 ADRP X8, 0xA6C000
	0x03689BDC LDR X8, [X8 + 0xC48]
	0x03689BE0 LDR X0, [X8]
	0x03689BE4 LDR W8, [X0 + 0xE0]
	0x03689BE8 CBNZ W8, 0x3689BF0
	0x03689BEC BL 0x1C16DFC
	0x03689BF0 MOV X0, X31
	0x03689BF4 BL 0x3338524
	0x03689BF8 CBZ X28, 0x3689DC4
	0x03689BFC MOV X1, X0
	0x03689C00 MOV X0, X28
	0x03689C04 MOV X2, X31
	0x03689C08 BL 0x322B660
	0x03689C0C STR X0, [X19 + 0x90]
	0x03689C10 TBNZ X22, 0x0, 0x36898C4
	0x03689C14 LDR X0, [X19 + 0x48]
	0x03689C18 BL 0x3689F68
	0x03689C1C CBZ X23, 0x3689DC4
	0x03689C20 MOV X1, X0
	0x03689C24 MOV X0, X23
	0x03689C28 MOV X2, X31
	0x03689C2C BL 0x3226F64
	0x03689C30 TBZ X0, 0x0, 0x3689C88
	0x03689C34 TBZ X22, 0x0, 0x3689C78
	0x03689C38 LDRB W8, [X19 + 0x60]
	0x03689C3C CBNZ W8, 0x3689C78
	0x03689C40 LDR X8, [X19 + 0x58]
	0x03689C44 CBZ X8, 0x3689DC4
	0x03689C48 LDR W8, [X8 + 0x10]
	0x03689C4C CBNZ W8, 0x3689C78
	0x03689C50 ADRP X8, 0xA6B000
	0x03689C54 LDR X8, [X8 + 0xE58]
	0x03689C58 MOVZ W1, 0x1
	0x03689C5C LDR X0, [X8]
	0x03689C60 BL 0x1C16D6C
	0x03689C64 CBZ X0, 0x3689DC4
	0x03689C68 LDR W8, [X0 + 0x18]
	0x03689C6C CBZ W8, 0x3689E0C
	0x03689C70 STR W21, [X0 + 0x20]
	0x03689C74 STR X0, [X19 + 0x68]
	0x03689C78 LDRB W8, [X19 + 0x60]
	0x03689C7C CBZ W8, 0x3689D14
	0x03689C80 MOVZ W0, 0x1
	0x03689C84 B 0x3689628
	0x03689C88 TBZ X20, 0x0, 0x3689624
	0x03689C8C ADRP X0, 0xA6A000
	0x03689C90 LDR X0, [X0 + 0x9D0]
	0x03689C94 BL 0x1C16D08
	0x03689C98 MOVZ W1, 0x2
	0x03689C9C BL 0x1C16D6C
	0x03689CA0 MOV X20, X0
	0x03689CA4 BL 0x19903C0
	0x03689CA8 ADRP X21, 0xAB5000
	0x03689CAC LDR X21, [X21 + 0x2C8]
	0x03689CB0 MOV X0, X21
	0x03689CB4 BL 0x1C16D08
	0x03689CB8 MOV X1, X0
	0x03689CBC MOV X0, X20
	0x03689CC0 BL 0x19980B4
	0x03689CC4 MOV X0, X21
	0x03689CC8 BL 0x1C16D08
	0x03689CCC MOV X2, X0
	0x03689CD0 MOV X0, X20
	0x03689CD4 MOV X1, X31
	0x03689CD8 BL 0x1993444
	0x03689CDC LDR X19, [X19 + 0x48]
	0x03689CE0 MOV X0, X20
	0x03689CE4 BL 0x19903C0
	0x03689CE8 MOV X0, X20

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0xD58000
	009 Move W8, [X20+2086]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0xAB5000
	016 Move X0, [X0+3384]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+2086], W8
	020 Move W8, [X19+24]
	021 Compare W8, 0
	022 JumpIfEqual {24}
	023 Move W8, 1
	024 Move X0, X31
	025 Call Environment.get_TickCount
	026 Move X8, 0xAB5000
	027 Move X8, [X8+3384]
	028 Move W20, W0
	029 Move X0, [X8]
	030 Move W21, [X19+16]
	031 Move W8, [X19+20]
	032 Move W9, [X0+224]
	033 Add W22, W8, W21
	034 Compare W9, 0
	035 JumpIfNotEqual {37}
	036 Call 0x1C17DFC
	037 NotImplemented "Instruction CMP not yet implemented."
	038 NotImplemented "Instruction CSET not yet implemented."
	039 NotImplemented "Instruction CMP not yet implemented."
	040 NotImplemented "Instruction CSET not yet implemented."
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Xor W8, W8, W9
	043 NotImplemented "Instruction CSET not yet implemented."
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Move X21, [X19+48]
	046 Move [X31+12], W31
	047 Add X1, X31, 12
	048 Move X0, X21
	049 Move X2, X31
	050 Call Monitor.Enter, X0, X1
	051 Move W8, [X19+24]
	052 Compare W8, 0
	053 JumpIfEqual {58}
	054 Move X22, X31
	055 Move W23, W31
	056 Move W24, 5
	057 Move W8, W31
	058 Move X8, X19
	059 Add X8, X8, 56
	060 Move X9, [X8]
	061 Move W10, 1
	062 Move [X8-32], W10
	063 Compare X9, 0
	064 JumpIfEqual {116}
	065 Move X10, [X19+64]
	066 Move [X9+64], X10
	067 Move X10, [X19+64]
	068 Compare X10, 0
	069 JumpIfEqual {117}
	070 Move [X10+56], X9
	071 Move [X8], X31
	072 Move [X8+8], X31
	073 Move X8, [X19+32]
	074 Move X22, X31
	075 Move W24, 5
	076 NotImplemented "Instruction CMP not yet implemented."
	077 NotImplemented "Instruction CSET not yet implemented."
	078 Move W8, [X31+12]
	079 Compare W8, 0
	080 JumpIfEqual {84}
	081 Move X0, X21
	082 Move X1, X31
	083 Call Monitor.Exit, X0
	084 Compare X22, 0
	085 JumpIfNotEqual {114}
	086 NotImplemented "Instruction CMP not yet implemented."
	087 Compare W24, 0
	088 JumpIfNotEqual {105}
	089 Move TEMP, X23
	090 And TEMP, TEMP, 1
	091 Compare TEMP, 1
	092 JumpIfNotEqual {23}
	093 Move X8, [X19+32]
	094 Move X3, [X19+40]
	095 Move [X19+32], X31
	096 Move [X19+40], X31
	097 Compare X8, 0
	098 JumpIfEqual {118}
	099 Move X0, [X8+64]
	100 Move X9, [X8+24]
	101 Move X4, [X8+40]
	102 Move X1, X19
	103 Move W2, W20
	104 NotImplemented "Instruction BLR not yet implemented."
	105 Move X20, [X31+48]
	106 Move X19, [X31+56]
	107 Move X22, [X31+32]
	108 Move X21, [X31+40]
	109 Move X24, [X31+16]
	110 Move X23, [X31+24]
	111 And W0, W8, 1
	112 Move X30, [X31+64]
	113 Return X0
	114 Move X0, X22
	115 Call 0x1C17F18
	116 Call 0x1C17F20
	117 Call 0x1C17F20
	118 Call 0x1C17F20
	119 NotImplemented "Instruction CMP not yet implemented."
	120 Move X23, X0
	121 Move X0, X23
	122 Call 0x3EB2AD0
	123 Move X19, X0
	124 Move X0, 0xA6B000
	125 Move X0, [X0+2000]
	126 Call 0x1C17D08
	127 Move X8, [X19]
	128 Move X1, [X8]
	129 Call 0x1C18270
	130 Move TEMP, X0
	131 And TEMP, TEMP, 1
	132 Compare TEMP, 1
	133 JumpIfNotEqual {144}
	134 Move X19, [X19]
	135 Call 0x3EB2AE0
	136 Move X0, X19
	137 Call NclUtilities.IsFatal, X0
	138 Move TEMP, X0
	139 And TEMP, TEMP, 1
	140 Compare TEMP, 1
	141 JumpIfEqual {152}
	142 Move X0, X31
	143 Call Logging.get_On
	144 Move W0, 8
	145 Call 0x3EB2AF0
	146 Move X8, [X19]
	147 Move [X0], X8
	148 Move X1, 0x82C000
	149 Add X1, X1, 3672
	150 Move X2, X31
	151 Call 0x3EB2B00
	152 Move X0, X19
	153 Call 0x1C17F18
	154 Move X23, X0
	155 Call 0x3EB2AE0
	156 Move X23, X0
	157 NotImplemented "Instruction CMP not yet implemented."
	158 Move X0, X23
	159 Call 0x3EB2AD0
	160 Move X22, [X0]
	161 Call 0x3EB2AE0
	162 Move W24, W31
	163 Move W23, W31
	164 Move X22, X31
	165 Move X23, X0
	166 Move W8, [X31+12]
	167 Compare W8, 0
	168 JumpIfEqual {172}
	169 Move X0, X21
	170 Move X1, X31
	171 Call Monitor.Exit, X0
	172 Compare X22, 0
	173 JumpIfNotEqual {176}
	174 Move X0, X23
	175 Call 0x1D2D690
	176 Move X0, X22
	177 Call 0x1C17F18
	178 Call 0x1991590

