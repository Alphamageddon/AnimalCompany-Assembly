Type: System.Net.WebResponseStream

Method: System.Net.WebRequestStream get_RequestStream()

Disassembly:
	0x036B6CF8 B 0x36B6D00
	0x036B6CFC MOV X20, X21

ISIL:
	001 Move X0, [X0+128]
	002 Return X0

Method: System.Net.WebHeaderCollection get_Headers()

Disassembly:
	0x036B6D00 MOV X0, X20
	0x036B6D04 LDP X20, X19, [X31 + 0x40]

ISIL:
	001 Move X0, [X0+136]
	002 Return X0

Method: System.Void set_Headers(System.Net.WebHeaderCollection value)

Disassembly:
	0x036B6D08 LDP X22, X21, [X31 + 0x30]
	0x036B6D0C LDP X24, X23, [X31 + 0x20]

ISIL:
	001 Move [X0+136], X1
	002 Return 

Method: System.Net.HttpStatusCode get_StatusCode()

Disassembly:
	0x036B6D10 LDP X30, X25, [X31 + 0x10]
	0x036B6D14 ADD X31, X31, 0x50

ISIL:
	001 Move W0, [X0+144]
	002 Return X0

Method: System.Void set_StatusCode(System.Net.HttpStatusCode value)

Disassembly:
	0x036B6D18 RET
	0x036B6D1C BL 0x1C16F20

ISIL:
	001 Move [X0+144], W1
	002 Return 

Method: System.String get_StatusDescription()

Disassembly:
	0x036B6D20 SUB X31, X31, 0xA0
	0x036B6D24 STP X29, X30, [X31 + 0x40]

ISIL:
	001 Move X0, [X0+152]
	002 Return X0

Method: System.Void set_StatusDescription(System.String value)

Disassembly:
	0x036B6D28 STP X28, X27, [X31 + 0x50]
	0x036B6D2C STP X26, X25, [X31 + 0x60]

ISIL:
	001 Move [X0+152], X1
	002 Return 

Method: System.Version get_Version()

Disassembly:
	0x036B6D30 STP X24, X23, [X31 + 0x70]
	0x036B6D34 STP X22, X21, [X31 + 0x80]

ISIL:
	001 Move X0, [X0+160]
	002 Return X0

Method: System.Void set_Version(System.Version value)

Disassembly:
	0x036B6D38 STP X20, X19, [X31 + 0x90]
	0x036B6D3C ADRP X23, 0xD2A000

ISIL:
	001 Move [X0+160], X1
	002 Return 

Method: System.Boolean get_KeepAlive()

Disassembly:
	0x036B6D40 LDRB W8, [X23 + 0x98F]
	0x036B6D44 MOV X20, X3

ISIL:
	001 Move W0, [X0+168]
	002 Return X0

Method: System.Void set_KeepAlive(System.Boolean value)

Disassembly:
	0x036B6D48 MOV X21, X2
	0x036B6D4C MOV X22, X1
	0x036B6D50 MOV X19, X0

ISIL:
	001 And W8, W1, 1
	002 Move [X0+168], W8
	003 Return 

Method: System.Void .ctor(System.Net.WebRequestStream request)

Disassembly:
	0x036B22FC LDR X0, [X0 + 0x328]
	0x036B2300 BL 0x1C16D08
	0x036B2304 MOV X1, X0
	0x036B2308 MOV X0, X20
	0x036B230C BL 0x1C16DEC
	0x036B2310 BL 0x1C16F20
	0x036B2314 BL 0x1C16F20
	0x036B2318 BL 0x1C16F20
	0x036B231C BL 0x1C16F20
	0x036B2320 B 0x36B2364
	0x036B2324 B 0x36B2364
	0x036B2328 B 0x36B2364
	0x036B232C B 0x36B2364
	0x036B2330 B 0x36B2364
	0x036B2334 B 0x36B2364
	0x036B2338 B 0x36B2364
	0x036B233C B 0x36B2364
	0x036B2340 B 0x36B2364
	0x036B2344 B 0x36B2364
	0x036B2348 B 0x36B2474
	0x036B234C B 0x36B2364
	0x036B2350 B 0x36B2474
	0x036B2354 MOV X20, X0
	0x036B2358 MOV W22, W31
	0x036B235C B 0x36B247C
	0x036B2360 B 0x36B2474
	0x036B2364 MOV X20, X0
	0x036B2368 CMP W1, 0x1
	0x036B236C B.EQ 0x36B239C
	0x036B2370 MOV W22, W31
	0x036B2374 MOVZ W8, 0x1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xD2F000
	007 Move X22, 0xA48000
	008 Move W8, [X21+2436]
	009 Move X22, [X22+3264]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xA48000
	017 Move X0, [X0+3264]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2436], W8
	021 Move X0, [X22]
	022 Call 0x1C17F10
	023 Move X1, X31
	024 Move X21, X0
	025 Call Object..ctor, X0
	026 Move [X20+112], X21
	027 Compare X19, 0
	028 JumpIfEqual {40}
	029 Move X1, [X19+72]
	030 Move X2, [X19+80]
	031 Move X0, X20
	032 Call WebConnectionStream..ctor, X0, X1, X2
	033 Move [X20+128], X19
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Return 
	040 Call 0x1C17F20

Method: System.Boolean get_CanRead()

Disassembly:
	0x036B6D54 TBNZ X8, 0x0, 0x36B6E14
	0x036B6D58 ADRP X0, 0xA64000

ISIL:
	001 Move W0, 1
	002 Return X0

Method: System.Boolean get_CanWrite()

Disassembly:
	0x036B6D5C LDR X0, [X0 + 0xFC8]
	0x036B6D60 BL 0x1C16CF4

ISIL:
	001 Move W0, W31
	002 Return X0

Method: System.Boolean get_ChunkedRead()

Disassembly:
	0x036B6D64 ADRP X0, 0xA64000
	0x036B6D68 LDR X0, [X0 + 0xFD0]

ISIL:
	001 Move W0, [X0+169]
	002 Return X0

Method: System.Void set_ChunkedRead(System.Boolean value)

Disassembly:
	0x036B6D6C BL 0x1C16CF4
	0x036B6D70 ADRP X0, 0xA64000
	0x036B6D74 LDR X0, [X0 + 0xFD8]

ISIL:
	001 And W8, W1, 1
	002 Move [X0+169], W8
	003 Return 

Method: System.Threading.Tasks.Task`1<System.Int32> ReadAsync(System.Byte[] buffer, System.Int32 offset, System.Int32 count, System.Threading.CancellationToken cancellationToken)

Disassembly:
	0x036B6D78 BL 0x1C16CF4
	0x036B6D7C ADRP X0, 0xA84000
	0x036B6D80 LDR X0, [X0 + 0x168]
	0x036B6D84 BL 0x1C16CF4
	0x036B6D88 ADRP X0, 0xA3E000
	0x036B6D8C LDR X0, [X0 + 0x1B8]
	0x036B6D90 BL 0x1C16CF4
	0x036B6D94 ADRP X0, 0xA64000
	0x036B6D98 LDR X0, [X0 + 0xFE0]
	0x036B6D9C BL 0x1C16CF4
	0x036B6DA0 ADRP X0, 0xA3E000
	0x036B6DA4 LDR X0, [X0 + 0x1C0]
	0x036B6DA8 BL 0x1C16CF4
	0x036B6DAC ADRP X0, 0xA3E000
	0x036B6DB0 LDR X0, [X0 + 0x1C8]
	0x036B6DB4 BL 0x1C16CF4
	0x036B6DB8 ADRP X0, 0xA65000
	0x036B6DBC LDR X0, [X0 + 0xB58]
	0x036B6DC0 BL 0x1C16CF4
	0x036B6DC4 ADRP X0, 0xA89000
	0x036B6DC8 LDR X0, [X0 + 0x500]
	0x036B6DCC BL 0x1C16CF4
	0x036B6DD0 ADRP X0, 0xA3E000
	0x036B6DD4 LDR X0, [X0 + 0x1D0]
	0x036B6DD8 BL 0x1C16CF4
	0x036B6DDC ADRP X0, 0xA3F000
	0x036B6DE0 LDR X0, [X0 + 0x278]
	0x036B6DE4 BL 0x1C16CF4
	0x036B6DE8 ADRP X0, 0xA87000
	0x036B6DEC LDR X0, [X0 + 0xDF8]
	0x036B6DF0 BL 0x1C16CF4
	0x036B6DF4 ADRP X0, 0xA89000
	0x036B6DF8 LDR X0, [X0 + 0x1C0]
	0x036B6DFC BL 0x1C16CF4
	0x036B6E00 ADRP X0, 0xA3D000
	0x036B6E04 LDR X0, [X0 + 0xDD8]
	0x036B6E08 BL 0x1C16CF4
	0x036B6E0C MOVZ W8, 0x1
	0x036B6E10 STRB W8, [X23 + 0x98F]
	0x036B6E14 ADRP X24, 0xA87000
	0x036B6E18 ADRP X25, 0xA64000
	0x036B6E1C LDR X24, [X24 + 0xDF8]
	0x036B6E20 LDR X25, [X25 + 0xFD0]
	0x036B6E24 MOV X26, X31
	0x036B6E28 MOV W28, W31
	0x036B6E2C STP X31, X31, [X31 + 0x20]
	0x036B6E30 STP X31, X31, [X31 + 0x30]
	0x036B6E34 LDR W8, [X20]
	0x036B6E38 CBZ W8, 0x36B6E48
	0x036B6E3C CMP W8, 0x4
	0x036B6E40 B.NE 0x36B6F84
	0x036B6E44 B 0x36B73CC
	0x036B6E48 CBZ X22, 0x36B73B0
	0x036B6E4C LDR X0, [X22 + 0x10]
	0x036B6E50 LDR W2, [X22 + 0x18]
	0x036B6E54 ADD X3, X31, 0x38
	0x036B6E58 MOV X1, X21
	0x036B6E5C BL 0x36A9F18
	0x036B6E60 TBZ X0, 0x0, 0x36B737C
	0x036B6E64 LDR X0, [X31 + 0x38]
	0x036B6E68 CBZ X0, 0x36B6EE8
	0x036B6E6C MOVZ W8, 0x1
	0x036B6E70 MOVZ W1, 0x20
	0x036B6E74 MOV W2, W31
	0x036B6E78 MOV X3, X31
	0x036B6E7C STR W8, [X20]
	0x036B6E80 BL 0x3229AE8
	0x036B6E84 CBZ X0, 0x36B73B0
	0x036B6E88 LDR W8, [X0 + 0x18]
	0x036B6E8C MOV X27, X0
	0x036B6E90 CMP W8, 0x1
	0x036B6E94 B.LE 0x36B73B4

ISIL:
	001 Subtract X31, X31, 224
	002 Move [X31+160], X30
	003 Move [X31+168], X25
	004 Move [X31+176], X24
	005 Move [X31+184], X23
	006 Move [X31+192], X22
	007 Move [X31+200], X21
	008 Move [X31+208], X20
	009 Move [X31+216], X19
	010 Move X25, 0xD2B000
	011 Move X24, 0xA6D000
	012 Move W8, [X25+2437]
	013 Move X24, [X24+3488]
	014 Move X19, X4
	015 Move W20, W3
	016 Move W22, W2
	017 Move X21, X1
	018 Move X23, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {37}
	023 Move X0, 0xA6D000
	024 Move X0, [X0+3496]
	025 Call 0x1C17CF4
	026 Move X0, 0xA8A000
	027 Move X0, [X0+1144]
	028 Call 0x1C17CF4
	029 Move X0, 0xA6D000
	030 Move X0, [X0+3512]
	031 Call 0x1C17CF4
	032 Move X0, 0xA6D000
	033 Move X0, [X0+3488]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X25+2437], W8
	037 Move X0, [X24]
	038 NotImplemented "Instruction MOVI not yet implemented."
	039 Move [X31+144], X31
	040 Move [X31+64], V0
	041 Move [X31+72], V0
	042 Move [X31+112], V0
	043 Move [X31+120], V0
	044 Move [X31+6], V0
	045 Move [X31+32], V0
	046 Move [X31+40], V0
	047 Move [X31+88], X23
	048 Move [X31+80], W22
	049 Move [X31+84], W20
	050 Move [X31+64], X19
	051 Move [X31+72], X21
	052 Move X21, 0xA6D000
	053 Move X19, 0xA8A000
	054 Move X20, 0xA6D000
	055 Move W8, [X0+224]
	056 Move X21, [X21+3496]
	057 Move X19, [X19+1144]
	058 Move X20, [X20+3512]
	059 Compare W8, 0
	060 JumpIfNotEqual {62}
	061 Call 0x1C17DFC
	062 Move X0, [X21]
	063 Add X8, X31, 8
	064 Call AsyncTaskMethodBuilder`1<Int32>.Create
	065 NotImplemented "Instruction LDUR not yet implemented."
	066 Move X9, [X31+24]
	067 Move X2, [X19]
	068 Add X8, X31, 32
	069 Or X19, X8, 15
	070 Move TEMP, 0
	071 Not TEMP
	072 Move W10, TEMP
	073 Add X1, X31, 32
	074 Move X0, X19
	075 Move [X31+40], V0
	076 Move [X31+56], X9
	077 Move [X31+32], W10
	078 Call AsyncTaskMethodBuilder`1<Int32>.Start, X0, X1
	079 Move X1, [X20]
	080 Move X0, X19
	081 Call AsyncTaskMethodBuilder`1<Int32>.get_Task, X0
	082 Move X20, [X31+208]
	083 Move X19, [X31+216]
	084 Move X22, [X31+192]
	085 Move X21, [X31+200]
	086 Move X24, [X31+176]
	087 Move X23, [X31+184]
	088 Move X30, [X31+160]
	089 Move X25, [X31+168]
	090 Add X31, X31, 224
	091 Return X0

Method: System.Threading.Tasks.Task`1<System.Int32> ProcessRead(System.Byte[] buffer, System.Int32 offset, System.Int32 size, System.Threading.CancellationToken cancellationToken)

Disassembly:
	0x036B6E98 ADRP X8, 0xA89000
	0x036B6E9C LDR X0, [X27 + 0x20]
	0x036B6EA0 LDR X8, [X8 + 0x1C0]
	0x036B6EA4 MOVZ W2, 0x1
	0x036B6EA8 MOV X3, X31
	0x036B6EAC LDR X1, [X8]
	0x036B6EB0 BL 0x3225904
	0x036B6EB4 ADRP X29, 0xA84000
	0x036B6EB8 LDR X29, [X29 + 0x168]
	0x036B6EBC MOV W23, W0
	0x036B6EC0 LDR X8, [X29]
	0x036B6EC4 LDR W9, [X8 + 0xE0]
	0x036B6EC8 CBNZ W9, 0x36B6ED8
	0x036B6ECC MOV X0, X8
	0x036B6ED0 BL 0x1C16DFC
	0x036B6ED4 LDR X8, [X29]
	0x036B6ED8 LDR X8, [X8 + 0xB8]
	0x036B6EDC CBZ W23, 0x36B6EF0
	0x036B6EE0 LDR X8, [X8 + 0x8]
	0x036B6EE4 B 0x36B6EF4
	0x036B6EE8 MOVZ W8, 0x1
	0x036B6EEC B 0x36B7278
	0x036B6EF0 LDR X8, [X8 + 0x10]
	0x036B6EF4 LDR X9, [X19 + 0x48]
	0x036B6EF8 STR X8, [X19 + 0xA0]
	0x036B6EFC CBZ X9, 0x36B73B0
	0x036B6F00 LDR X9, [X9 + 0x48]
	0x036B6F04 CBZ X9, 0x36B73B0
	0x036B6F08 STR X8, [X9 + 0x20]
	0x036B6F0C LDR W8, [X27 + 0x18]
	0x036B6F10 CMP W8, 0x1
	0x036B6F14 B.LS 0x36B7408
	0x036B6F18 LDR X0, [X27 + 0x28]
	0x036B6F1C MOV X1, X31
	0x036B6F20 BL 0x3399E44
	0x036B6F24 STR W0, [X19 + 0x90]
	0x036B6F28 LDR W8, [X27 + 0x18]
	0x036B6F2C CMP W8, 0x3
	0x036B6F30 B.GE 0x36B6F4C
	0x036B6F34 ADRP X8, 0xA3F000
	0x036B6F38 LDR X8, [X8 + 0x278]
	0x036B6F3C LDR X8, [X8]
	0x036B6F40 LDR X8, [X8 + 0xB8]
	0x036B6F44 LDR X0, [X8]
	0x036B6F48 B 0x36B6F6C
	0x036B6F4C ADRP X9, 0xA3D000
	0x036B6F50 LDR X9, [X9 + 0xDD8]
	0x036B6F54 SUB W3, W8, 0x2
	0x036B6F58 MOVZ W2, 0x2
	0x036B6F5C MOV X1, X27
	0x036B6F60 LDR X0, [X9]
	0x036B6F64 MOV X4, X31
	0x036B6F68 BL 0x3228058
	0x036B6F6C STR X0, [X19 + 0x98]
	0x036B6F70 LDR W8, [X21]
	0x036B6F74 LDR W9, [X22 + 0x18]
	0x036B6F78 CMP W8, W9
	0x036B6F7C B.GE 0x36B73A8
	0x036B6F80 LDR W8, [X20]
	0x036B6F84 CMP W8, 0x1
	0x036B6F88 B.NE 0x36B70F0
	0x036B6F8C MOVZ W8, 0x2
	0x036B6F90 STR W8, [X20]
	0x036B6F94 LDR X0, [X24]
	0x036B6F98 BL 0x1C16F10
	0x036B6F9C MOV X1, X31
	0x036B6FA0 MOV X23, X0
	0x036B6FA4 BL 0x367CAA0
	0x036B6FA8 STR X23, [X19 + 0x88]
	0x036B6FAC ADRP X8, 0xA3E000
	0x036B6FB0 LDR X8, [X8 + 0x1D0]
	0x036B6FB4 LDR X0, [X8]
	0x036B6FB8 BL 0x1C16F10
	0x036B6FBC ADRP X8, 0xA3E000
	0x036B6FC0 LDR X8, [X8 + 0x1C0]
	0x036B6FC4 MOV X27, X0
	0x036B6FC8 LDR X1, [X8]
	0x036B6FCC BL 0x301B7C4
	0x036B6FD0 CBZ X22, 0x36B73B0
	0x036B6FD4 LDR X0, [X22 + 0x10]
	0x036B6FD8 LDR W2, [X22 + 0x18]
	0x036B6FDC ADD X3, X31, 0x38
	0x036B6FE0 MOV X1, X21
	0x036B6FE4 BL 0x36A9F18
	0x036B6FE8 TBZ X0, 0x0, 0x36B737C
	0x036B6FEC LDR X28, [X31 + 0x38]
	0x036B6FF0 CBZ X28, 0x36B70F8
	0x036B6FF4 LDR W8, [X28 + 0x10]
	0x036B6FF8 CMP W8, 0x1
	0x036B6FFC B.LT 0x36B708C
	0x036B7000 MOV X0, X28
	0x036B7004 MOV W1, W31
	0x036B7008 MOV X2, X31
	0x036B700C BL 0x3222A1C
	0x036B7010 AND W8, W0, 0xFFFF
	0x036B7014 CMP W8, 0x20
	0x036B7018 B.EQ 0x36B7038
	0x036B701C MOV X0, X28
	0x036B7020 MOV W1, W31
	0x036B7024 MOV X2, X31
	0x036B7028 BL 0x3222A1C
	0x036B702C AND W8, W0, 0xFFFF
	0x036B7030 CMP W8, 0x9
	0x036B7034 B.NE 0x36B708C
	0x036B7038 CBZ X27, 0x36B73B0
	0x036B703C LDR W8, [X27 + 0x18]
	0x036B7040 SUBS W23, W8, 0x1
	0x036B7044 B.MI 0x36B737C
	0x036B7048 ADRP X8, 0xA64000
	0x036B704C LDR X8, [X8 + 0xB58]
	0x036B7050 MOV X0, X27
	0x036B7054 MOV W1, W23
	0x036B7058 LDR X2, [X8]
	0x036B705C BL 0x301BCCC
	0x036B7060 MOV X1, X28
	0x036B7064 MOV X2, X31
	0x036B7068 BL 0x321B938
	0x036B706C ADRP X8, 0xA88000
	0x036B7070 LDR X8, [X8 + 0x500]
	0x036B7074 MOV X2, X0
	0x036B7078 MOV X0, X27
	0x036B707C MOV W1, W23
	0x036B7080 LDR X3, [X8]
	0x036B7084 BL 0x301BD20
	0x036B7088 B 0x36B6FD4
	0x036B708C CBZ X27, 0x36B73B0
	0x036B7090 ADRP X9, 0xA3D000
	0x036B7094 LDR W10, [X27 + 0x1C]
	0x036B7098 LDR X8, [X27 + 0x10]
	0x036B709C LDR X9, [X9 + 0x1B8]
	0x036B70A0 ADD W10, W10, 0x1
	0x036B70A4 LDR X9, [X9]
	0x036B70A8 STR W10, [X27 + 0x1C]
	0x036B70AC CBZ X8, 0x36B73B0
	0x036B70B0 LDRSW X10, [X27 + 0x18]
	0x036B70B4 LDR W11, [X8 + 0x18]
	0x036B70B8 CMP W10, W11
	0x036B70BC B.CS 0x36B70D4
	0x036B70C0 ADD W9, W10, 0x1
	0x036B70C4 ADD X8, X8, X10, 0x3, LSL
	0x036B70C8 STR W9, [X27 + 0x18]
	0x036B70CC STR X28, [X8 + 0x20]
	0x036B70D0 B 0x36B6FD4
	0x036B70D4 LDR X8, [X9 + 0x20]
	0x036B70D8 MOV X0, X27
	0x036B70DC MOV X1, X28
	0x036B70E0 LDR X8, [X8 + 0xC0]
	0x036B70E4 LDR X2, [X8 + 0x70]
	0x036B70E8 BL 0x301BF90
	0x036B70EC B 0x36B6FD4
	0x036B70F0 MOV W8, W31
	0x036B70F4 B 0x36B7278
	0x036B70F8 CBZ X27, 0x36B73B0
	0x036B70FC ADRP X8, 0xA63000
	0x036B7100 LDR X8, [X8 + 0xFE0]
	0x036B7104 MOV X0, X27
	0x036B7108 LDR X1, [X8]
	0x036B710C ADD X8, X31, 0x8
	0x036B7110 BL 0x301CB58
	0x036B7114 LDUR V0, [X31 + 0x8]
	0x036B7118 LDR X8, [X31 + 0x18]
	0x036B711C STR V0, [X31 + 0x2]
	0x036B7120 STR X8, [X31 + 0x30]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0xD2B000
	009 Move [X31+8], X4
	010 Move X24, 0xA8A000
	011 Move W8, [X20+2438]
	012 Move X24, [X24+1152]
	013 Move W21, W3
	014 Move W22, W2
	015 Move X23, X1
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {62}
	021 Move X0, 0xA3F000
	022 Move X0, [X0+3696]
	023 Call 0x1C17CF4
	024 Move X0, 0xA46000
	025 Move X0, [X0+2008]
	026 Call 0x1C17CF4
	027 Move X0, 0xA47000
	028 Move X0, [X0+2368]
	029 Call 0x1C17CF4
	030 Move X0, 0xA8A000
	031 Move X0, [X0+1160]
	032 Call 0x1C17CF4
	033 Move X0, 0xA8A000
	034 Move X0, [X0+1168]
	035 Call 0x1C17CF4
	036 Move X0, 0xA66000
	037 Move X0, [X0+2952]
	038 Call 0x1C17CF4
	039 Move X0, 0xA71000
	040 Move X0, [X0+3272]
	041 Call 0x1C17CF4
	042 Move X0, 0xA71000
	043 Move X0, [X0+3280]
	044 Call 0x1C17CF4
	045 Move X0, 0xA3F000
	046 Move X0, [X0+1976]
	047 Call 0x1C17CF4
	048 Move X0, 0xA8A000
	049 Move X0, [X0+1176]
	050 Call 0x1C17CF4
	051 Move X0, 0xA8A000
	052 Move X0, [X0+1184]
	053 Call 0x1C17CF4
	054 Move X0, 0xA8A000
	055 Move X0, [X0+1192]
	056 Call 0x1C17CF4
	057 Move X0, 0xA8A000
	058 Move X0, [X0+1152]
	059 Call 0x1C17CF4
	060 Move W8, 1
	061 Move [X20+2438], W8
	062 Move X0, [X24]
	063 Call 0x1C17F10
	064 Move X1, X31
	065 Move X20, X0
	066 Call Object..ctor, X0
	067 Compare X20, 0
	068 JumpIfEqual {186}
	069 Move [X20+16], X19
	070 Move [X20+24], X23
	071 Move [X20+32], W22
	072 Move [X20+36], W21
	073 Move X21, 0xA3F000
	074 Move W8, [X19+124]
	075 Move X21, [X21+1976]
	076 Compare W8, 0
	077 JumpIfEqual {96}
	078 Move X0, [X21]
	079 Move X19, 0xA71000
	080 Move W8, [X0+224]
	081 Move X19, [X19+3280]
	082 Compare W8, 0
	083 JumpIfNotEqual {85}
	084 Call 0x1C17DFC
	085 Move X1, [X19]
	086 Move X20, [X31+48]
	087 Move X19, [X31+56]
	088 Move X22, [X31+32]
	089 Move X21, [X31+40]
	090 Move X24, [X31+16]
	091 Move X23, [X31+24]
	092 Move W0, W31
	093 Move X30, [X31+64]
	094 Call Task.FromResult, X0
	095 Return X0
	096 Move X8, 0xA46000
	097 Move X8, [X8+2008]
	098 Move X0, [X8]
	099 Move W8, [X0+224]
	100 Compare W8, 0
	101 JumpIfNotEqual {103}
	102 Call 0x1C17DFC
	103 Add X0, X31, 8
	104 Move X1, X31
	105 Call CancellationToken.get_IsCancellationRequested, X0
	106 Move TEMP, X0
	107 And TEMP, TEMP, 1
	108 Compare TEMP, 1
	109 JumpIfNotEqual {121}
	110 Move X0, [X21]
	111 Move X19, [X31+8]
	112 Move W8, [X0+224]
	113 Compare W8, 0
	114 JumpIfNotEqual {116}
	115 Call 0x1C17DFC
	116 Move X8, 0xA70000
	117 Move X8, [X8+3272]
	118 Move X0, X19
	119 Move X1, [X8]
	120 Call 0x229A598, X0
	121 Move X8, 0xA89000
	122 Move X8, [X8+1160]
	123 Move X0, [X8]
	124 Call 0x1C17F10
	125 Move X8, 0xA89000
	126 Move X8, [X8+1176]
	127 Move X1, X20
	128 Move X3, X31
	129 Move X21, X0
	130 Move X2, [X8]
	131 Call Func`2<CancellationToken, Object>..ctor, X0, X1, X2
	132 Move X8, [X19]
	133 Move X0, X19
	134 Move X9, [X8+536]
	135 Move X1, [X8+544]
	136 NotImplemented "Instruction BLR not yet implemented."
	137 Move X8, 0xA3E000
	138 Move X8, [X8+3696]
	139 Move W19, W0
	140 Move X8, [X8]
	141 Move X0, X8
	142 Call 0x1C17F10
	143 Move X8, 0xA89000
	144 Move X8, [X8+1184]
	145 Move X1, X20
	146 Move X3, X31
	147 Move X22, X0
	148 Move X2, [X8]
	149 Call Action..ctor, X0, X1, X2
	150 Move X8, 0xA46000
	151 Move X8, [X8+2368]
	152 Move X0, [X8]
	153 Call 0x1C17F10
	154 Move X8, 0xA89000
	155 Move X8, [X8+1192]
	156 Move X1, X20
	157 Move X3, X31
	158 Move X23, X0
	159 Move X2, [X8]
	160 Call Func`1<Boolean>..ctor, X0, X1, X2
	161 Move X8, 0xA65000
	162 Move X8, [X8+2952]
	163 Move X20, [X31+8]
	164 Move X0, [X8]
	165 Move W8, [X0+224]
	166 Compare W8, 0
	167 JumpIfNotEqual {169}
	168 Call 0x1C17DFC
	169 Move X8, 0xA89000
	170 Move X8, [X8+1168]
	171 Move X0, X21
	172 Move W1, W19
	173 Move X2, X22
	174 Move X5, [X8]
	175 Move X3, X23
	176 Move X4, X20
	177 Call 0x21EE6C4, X0, X1, X2, X3, X4
	178 Move X20, [X31+48]
	179 Move X19, [X31+56]
	180 Move X22, [X31+32]
	181 Move X21, [X31+40]
	182 Move X24, [X31+16]
	183 Move X23, [X31+24]
	184 Move X30, [X31+64]
	185 Return X0
	186 Call 0x1C17F20

Method: System.Boolean TryReadFromBufferedContent(System.Byte[] buffer, System.Int32 offset, System.Int32 count, out System.Int32 result)

Disassembly:
	0x036B712C BL 0x2BC4350
	0x036B7130 TBZ X0, 0x0, 0x36B71F8
	0x036B7134 LDR X27, [X31 + 0x30]
	0x036B7138 CBZ X27, 0x36B7298
	0x036B713C MOVZ W1, 0x3A
	0x036B7140 MOV X0, X27
	0x036B7144 MOV X2, X31
	0x036B7148 BL 0x322BD98
	0x036B714C ADDS W31, W0, 0x1
	0x036B7150 MOV W29, W0
	0x036B7154 CSEL X23, X26, X27, EQ
	0x036B7158 B.EQ 0x36B72A0
	0x036B715C CBZ X23, 0x36B7288
	0x036B7160 MOV X0, X23
	0x036B7164 MOV W1, W31
	0x036B7168 MOV W2, W29
	0x036B716C MOV X3, X31
	0x036B7170 BL 0x3228DE4
	0x036B7174 MOV X28, X0
	0x036B7178 ADD W1, W29, 0x1
	0x036B717C MOV X0, X23
	0x036B7180 MOV X2, X31
	0x036B7184 BL 0x322B484
	0x036B7188 CBZ X0, 0x36B7290
	0x036B718C MOV X1, X31
	0x036B7190 BL 0x322B8DC
	0x036B7194 MOV X29, X0
	0x036B7198 LDR X0, [X24]
	0x036B719C LDR W8, [X0 + 0xE0]
	0x036B71A0 CBNZ W8, 0x36B71A8
	0x036B71A4 BL 0x1C16DFC
	0x036B71A8 MOV X0, X28
	0x036B71AC MOV X1, X31
	0x036B71B0 BL 0x368035C
	0x036B71B4 MOV W8, W0
	0x036B71B8 LDR X0, [X19 + 0x88]
	0x036B71BC TBZ X8, 0x0, 0x36B71DC
	0x036B71C0 CBZ X0, 0x36B7308
	0x036B71C4 MOV X1, X28
	0x036B71C8 MOV X2, X29
	0x036B71CC MOV X3, X31
	0x036B71D0 BL 0x3680610
	0x036B71D4 MOV X26, X27
	0x036B71D8 B 0x36B7124
	0x036B71DC CBZ X0, 0x36B7300
	0x036B71E0 MOV X1, X28
	0x036B71E4 MOV X2, X29
	0x036B71E8 MOV X3, X31
	0x036B71EC BL 0x368133C
	0x036B71F0 MOV X26, X27
	0x036B71F4 B 0x36B7124

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0xD2A000
	009 Move W8, [X24+2439]
	010 Move X19, X4
	011 Move W20, W3
	012 Move W21, W2
	013 Move X22, X1
	014 Move X23, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {24}
	019 Move X0, 0xA89000
	020 Move X0, [X0+1200]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X24+2439], W8
	024 Move W8, [X23+97]
	025 Compare W8, 0
	026 JumpIfEqual {41}
	027 Move X0, [X23+88]
	028 Compare X0, 0
	029 JumpIfEqual {41}
	030 Move X8, 0xA89000
	031 Move X8, [X8+1200]
	032 Move X9, [X0]
	033 Move X8, [X8]
	034 Move W11, [X9+304]
	035 Move W10, [X8+304]
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move X9, [X9+200]
	038 Add X9, X9, X10
	039 NotImplemented "Instruction LDUR not yet implemented."
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Move [X19], W31
	042 Move X20, [X31+48]
	043 Move X19, [X31+56]
	044 Move X22, [X31+32]
	045 Move X21, [X31+40]
	046 Move X24, [X31+16]
	047 Move X23, [X31+24]
	048 Move W0, W31
	049 Move X30, [X31+64]
	050 Return X0
	051 Move X1, X22
	052 Move W2, W21
	053 Move W3, W20
	054 Move X4, X19
	055 Move X20, [X31+48]
	056 Move X19, [X31+56]
	057 Move X22, [X31+32]
	058 Move X21, [X31+40]
	059 Move X24, [X31+16]
	060 Move X23, [X31+24]
	061 Move X5, X31
	062 Move X30, [X31+64]
	063 Call BufferedReadStream.TryReadFromBuffer, X0, X1, X2, X3, X4
	064 Return X0

Method: System.Boolean get_ExpectContent()

Disassembly:
	0x036B71F8 ADRP X8, 0xA63000
	0x036B71FC LDR X8, [X8 + 0xFC8]
	0x036B7200 ADD X0, X31, 0x20
	0x036B7204 LDR X1, [X8]
	0x036B7208 BL 0x2BC434C
	0x036B720C LDR W8, [X19 + 0x90]
	0x036B7210 CMP W8, 0x64
	0x036B7214 B.NE 0x36B73A0
	0x036B7218 LDR X8, [X19 + 0x48]
	0x036B721C CBZ X8, 0x36B73B0
	0x036B7220 LDR X8, [X8 + 0x48]
	0x036B7224 CBZ X8, 0x36B73B0
	0x036B7228 MOVZ W0, 0x1
	0x036B722C STRB W0, [X8 + 0x31]
	0x036B7230 LDR W8, [X21]
	0x036B7234 LDR W9, [X22 + 0x18]
	0x036B7238 CMP W8, W9
	0x036B723C B.GE 0x36B7380
	0x036B7240 LDR X0, [X19 + 0x40]
	0x036B7244 CBZ X0, 0x36B73B0
	0x036B7248 LDRB W8, [X0 + 0x10C]
	0x036B724C CBZ W8, 0x36B726C
	0x036B7250 LDR X2, [X19 + 0x88]
	0x036B7254 MOVZ W1, 0x64
	0x036B7258 MOV X3, X31
	0x036B725C BL 0x369E9B8
	0x036B7260 LDR X8, [X19 + 0x40]
	0x036B7264 CBZ X8, 0x36B73B0
	0x036B7268 STRB W31, [X8 + 0x10C]
	0x036B726C MOV W8, W31
	0x036B7270 MOVZ W28, 0x1
	0x036B7274 STR W31, [X20]
	0x036B7278 AND W9, W28, 0x1
	0x036B727C ORR W8, W8, W9, 0x0
	0x036B7280 CBNZ W8, 0x36B6E34
	0x036B7284 B 0x36B73B4
	0x036B7288 BL 0x1C16F20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xD2A000
	005 Move W8, [X20+2440]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xA80000
	012 Move X0, [X0+2824]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2440], W8
	016 Move X0, [X19+64]
	017 Compare X0, 0
	018 JumpIfEqual {46}
	019 Move X8, [X0]
	020 Move X20, 0xA80000
	021 Move X9, [X8+440]
	022 Move X1, [X8+448]
	023 Move X20, [X20+2824]
	024 NotImplemented "Instruction BLR not yet implemented."
	025 Move X1, [X20]
	026 Move X2, X31
	027 Call String.op_Equality, X0, X1
	028 Move TEMP, X0
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfNotEqual {33}
	032 Move W0, W31
	033 Move W8, [X19+144]
	034 NotImplemented "Instruction CMP not yet implemented."
	035 NotImplemented "Instruction CSET not yet implemented."
	036 NotImplemented "Instruction CMP not yet implemented."
	037 NotImplemented "Instruction CSET not yet implemented."
	038 NotImplemented "Instruction CMP not yet implemented."
	039 NotImplemented "Instruction CSET not yet implemented."
	040 And W9, W9, W10
	041 And W0, W8, W9
	042 Move X20, [X31+16]
	043 Move X19, [X31+24]
	044 Move X30, [X31+32]
	045 Return X0
	046 Call 0x1C17F20

Method: System.Void Initialize(System.Net.BufferOffsetSize buffer)

Disassembly:
	0x036B728C B 0x36B740C
	0x036B7290 BL 0x1C16F20
	0x036B7294 B 0x36B740C
	0x036B7298 BL 0x1C16F20
	0x036B729C B 0x36B7420
	0x036B72A0 ADRP X0, 0xA44000
	0x036B72A4 LDR X0, [X0 + 0x578]
	0x036B72A8 BL 0x1C16D08
	0x036B72AC BL 0x1C16F10
	0x036B72B0 MOV X27, X0
	0x036B72B4 ADRP X0, 0xA88000
	0x036B72B8 LDR X0, [X0 + 0x508]
	0x036B72BC BL 0x1C16D08
	0x036B72C0 MOV X23, X0
	0x036B72C4 ADRP X0, 0xA86000
	0x036B72C8 LDR X0, [X0 + 0xFA8]
	0x036B72CC BL 0x1C16D08
	0x036B72D0 MOV X2, X0
	0x036B72D4 MOV X0, X27
	0x036B72D8 MOV X1, X23
	0x036B72DC MOV X3, X31
	0x036B72E0 BL 0x330E16C
	0x036B72E4 ADRP X0, 0xA88000
	0x036B72E8 LDR X0, [X0 + 0x510]
	0x036B72EC BL 0x1C16D08
	0x036B72F0 MOV X1, X0
	0x036B72F4 MOV X0, X27
	0x036B72F8 BL 0x1C16DEC
	0x036B72FC B 0x36B740C
	0x036B7300 BL 0x1C16F20
	0x036B7304 B 0x36B740C
	0x036B7308 BL 0x1C16F20
	0x036B730C B 0x36B740C
	0x036B7310 B 0x36B7344
	0x036B7314 B 0x36B7344
	0x036B7318 B 0x36B7344
	0x036B731C B 0x36B7344
	0x036B7320 B 0x36B7344
	0x036B7324 B 0x36B7344
	0x036B7328 B 0x36B7348
	0x036B732C B 0x36B7344
	0x036B7330 B 0x36B7348
	0x036B7334 B 0x36B7344
	0x036B7338 B 0x36B7348
	0x036B733C B 0x36B7344
	0x036B7340 B 0x36B7344
	0x036B7344 MOV X26, X27
	0x036B7348 CMP W1, 0x1
	0x036B734C B.NE 0x36B740C
	0x036B7350 BL 0x3EB1AD0
	0x036B7354 LDR X27, [X0]
	0x036B7358 BL 0x3EB1AE0
	0x036B735C ADRP X8, 0xA63000
	0x036B7360 LDR X8, [X8 + 0xFC8]
	0x036B7364 ADD X0, X31, 0x20
	0x036B7368 LDR X1, [X8]
	0x036B736C BL 0x2BC434C
	0x036B7370 CBZ X27, 0x36B720C
	0x036B7374 B 0x36B7418
	0x036B7378 B 0x36B7348
	0x036B737C MOV W0, W31
	0x036B7380 LDP X20, X19, [X31 + 0x90]
	0x036B7384 LDP X22, X21, [X31 + 0x80]
	0x036B7388 LDP X24, X23, [X31 + 0x70]
	0x036B738C LDP X26, X25, [X31 + 0x60]
	0x036B7390 LDP X28, X27, [X31 + 0x50]
	0x036B7394 LDP X29, X30, [X31 + 0x40]
	0x036B7398 ADD X31, X31, 0xA0
	0x036B739C RET
	0x036B73A0 MOVZ W8, 0x3
	0x036B73A4 STR W8, [X20]
	0x036B73A8 MOVZ W0, 0x1
	0x036B73AC B 0x36B7380
	0x036B73B0 BL 0x1C16F20
	0x036B73B4 ADRP X0, 0xA88000
	0x036B73B8 LDR X0, [X0 + 0x518]
	0x036B73BC BL 0x1C16D08
	0x036B73C0 MOV X3, X0
	0x036B73C4 MOVZ W1, 0xB
	0x036B73C8 B 0x36B73E0
	0x036B73CC ADRP X0, 0xA88000
	0x036B73D0 LDR X0, [X0 + 0x518]
	0x036B73D4 BL 0x1C16D08
	0x036B73D8 MOV X3, X0
	0x036B73DC MOVZ W1, 0x6
	0x036B73E0 MOV X0, X19
	0x036B73E4 MOV X2, X31
	0x036B73E8 BL 0x36B6A90
	0x036B73EC MOV X19, X0
	0x036B73F0 ADRP X0, 0xA88000
	0x036B73F4 LDR X0, [X0 + 0x510]
	0x036B73F8 BL 0x1C16D08
	0x036B73FC MOV X1, X0
	0x036B7400 MOV X0, X19
	0x036B7404 BL 0x1C16DEC
	0x036B7408 BL 0x1C16F28
	0x036B740C MOV X19, X0
	0x036B7410 MOV X27, X31
	0x036B7414 B 0x36B7424
	0x036B7418 MOV X0, X27
	0x036B741C BL 0x1C16F18
	0x036B7420 MOV X19, X0
	0x036B7424 ADRP X8, 0xA63000
	0x036B7428 LDR X8, [X8 + 0xFC8]
	0x036B742C LDR X1, [X8]
	0x036B7430 ADD X0, X31, 0x20
	0x036B7434 BL 0x2BC434C
	0x036B7438 CBNZ X27, 0x36B7444
	0x036B743C MOV X0, X19
	0x036B7440 BL 0x1D2C690
	0x036B7444 MOV X0, X27
	0x036B7448 BL 0x1C16F18
	0x036B744C BL 0x1990590
	0x036B7450 SUB X31, X31, 0x70
	0x036B7454 STR X30, [X31 + 0x30]
	0x036B7458 STP X24, X23, [X31 + 0x40]
	0x036B745C STP X22, X21, [X31 + 0x50]
	0x036B7460 STP X20, X19, [X31 + 0x60]
	0x036B7464 ADRP X20, 0xD29000
	0x036B7468 LDRB W8, [X20 + 0x990]
	0x036B746C MOV X19, X0
	0x036B7470 TBNZ X8, 0x0, 0x36B753C
	0x036B7474 ADRP X0, 0xA88000
	0x036B7478 LDR X0, [X0 + 0x520]
	0x036B747C BL 0x1C16CF4
	0x036B7480 ADRP X0, 0xA88000
	0x036B7484 LDR X0, [X0 + 0x528]
	0x036B7488 BL 0x1C16CF4
	0x036B748C ADRP X0, 0xA6B000
	0x036B7490 LDR X0, [X0 + 0xE30]
	0x036B7494 BL 0x1C16CF4
	0x036B7498 ADRP X0, 0xA6B000
	0x036B749C LDR X0, [X0 + 0xDA0]
	0x036B74A0 BL 0x1C16CF4
	0x036B74A4 ADRP X0, 0xA44000
	0x036B74A8 LDR X0, [X0 + 0x7D8]
	0x036B74AC BL 0x1C16CF4
	0x036B74B0 ADRP X0, 0xA88000
	0x036B74B4 LDR X0, [X0 + 0x530]
	0x036B74B8 BL 0x1C16CF4
	0x036B74BC ADRP X0, 0xA70000
	0x036B74C0 LDR X0, [X0 + 0x2B8]
	0x036B74C4 BL 0x1C16CF4
	0x036B74C8 ADRP X0, 0xA88000
	0x036B74CC LDR X0, [X0 + 0x538]
	0x036B74D0 BL 0x1C16CF4
	0x036B74D4 ADRP X0, 0xA70000
	0x036B74D8 LDR X0, [X0 + 0x2C0]
	0x036B74DC BL 0x1C16CF4
	0x036B74E0 ADRP X0, 0xA88000
	0x036B74E4 LDR X0, [X0 + 0x540]
	0x036B74E8 BL 0x1C16CF4
	0x036B74EC ADRP X0, 0xA70000
	0x036B74F0 LDR X0, [X0 + 0x2C8]
	0x036B74F4 BL 0x1C16CF4
	0x036B74F8 ADRP X0, 0xA70000
	0x036B74FC LDR X0, [X0 + 0x2D0]
	0x036B7500 BL 0x1C16CF4
	0x036B7504 ADRP X0, 0xA88000
	0x036B7508 LDR X0, [X0 + 0x548]
	0x036B750C BL 0x1C16CF4
	0x036B7510 ADRP X0, 0xA87000
	0x036B7514 LDR X0, [X0 + 0xA78]
	0x036B7518 BL 0x1C16CF4
	0x036B751C ADRP X0, 0xA88000
	0x036B7520 LDR X0, [X0 + 0x468]
	0x036B7524 BL 0x1C16CF4
	0x036B7528 ADRP X0, 0xA87000
	0x036B752C LDR X0, [X0 + 0xA88]
	0x036B7530 BL 0x1C16CF4
	0x036B7534 MOVZ W8, 0x1
	0x036B7538 STRB W8, [X20 + 0x990]
	0x036B753C STP X31, X31, [X31 + 0x20]
	0x036B7540 STP X31, X31, [X31 + 0x10]
	0x036B7544 STRB W31, [X31 + 0x3C]
	0x036B7548 ADRP X22, 0xA44000
	0x036B754C LDR W24, [X19]
	0x036B7550 LDR X20, [X19 + 0x38]
	0x036B7554 LDR X22, [X22 + 0x7D8]
	0x036B7558 CBZ W24, 0x36B75EC
	0x036B755C CMP W24, 0x1
	0x036B7560 B.EQ 0x36B77EC
	0x036B7564 LDR X0, [X22]
	0x036B7568 LDR W8, [X0 + 0xE0]
	0x036B756C CBNZ W8, 0x36B7574
	0x036B7570 BL 0x1C16DFC
	0x036B7574 ADD X0, X19, 0x20
	0x036B7578 MOV X1, X31
	0x036B757C BL 0x33DDC30
	0x036B7580 LDR X9, [X19 + 0x28]
	0x036B7584 CBZ X9, 0x36B7604
	0x036B7588 LDR W8, [X19 + 0x30]
	0x036B758C TBNZ X8, 0x1F, 0x36B764C
	0x036B7590 LDR W9, [X9 + 0x18]
	0x036B7594 CMP W8, W9
	0x036B7598 B.GT 0x36B764C
	0x036B759C LDR W10, [X19 + 0x34]
	0x036B75A0 TBNZ X10, 0x1F, 0x36B7694
	0x036B75A4 SUB W8, W9, W8
	0x036B75A8 CMP W8, W10
	0x036B75AC B.LT 0x36B7694
	0x036B75B0 CBZ X20, 0x36B76DC
	0x036B75B4 ADD X0, X20, 0x78
	0x036B75B8 MOVZ W1, 0x1
	0x036B75BC MOV W2, W31
	0x036B75C0 MOV X3, X31
	0x036B75C4 BL 0x33E7AB4
	0x036B75C8 CBNZ W0, 0x36B76E0
	0x036B75CC ADRP X8, 0xA87000
	0x036B75D0 LDR X8, [X8 + 0xA88]
	0x036B75D4 LDR X0, [X8]
	0x036B75D8 BL 0x1C16F10
	0x036B75DC MOV X21, X0
	0x036B75E0 BL 0x36A97D4
	0x036B75E4 STR X21, [X19 + 0x40]
	0x036B75E8 B 0x36B77BC
	0x036B75EC LDUR V0, [X19 + 0x58]
	0x036B75F0 MOVN W24, 0x0
	0x036B75F4 STR V0, [X31 + 0x2]
	0x036B75F8 STP X31, X31, [X19 + 0x58]
	0x036B75FC STR W24, [X19]
	0x036B7600 B 0x36B77A8
	0x036B7604 ADRP X0, 0xA41000
	0x036B7608 LDR X0, [X0 + 0x528]
	0x036B760C BL 0x1C16D08
	0x036B7610 BL 0x1C16F10
	0x036B7614 MOV X20, X0
	0x036B7618 ADRP X0, 0xA67000
	0x036B761C LDR X0, [X0 + 0xF48]
	0x036B7620 BL 0x1C16D08
	0x036B7624 MOV X1, X0
	0x036B7628 MOV X0, X20
	0x036B762C MOV X2, X31
	0x036B7630 BL 0x330E100
	0x036B7634 ADRP X0, 0xA88000
	0x036B7638 LDR X0, [X0 + 0x550]
	0x036B763C BL 0x1C16D08
	0x036B7640 MOV X1, X0
	0x036B7644 MOV X0, X20
	0x036B7648 BL 0x1C16DEC
	0x036B764C ADRP X0, 0xA44000
	0x036B7650 LDR X0, [X0 + 0x760]
	0x036B7654 BL 0x1C16D08
	0x036B7658 BL 0x1C16F10
	0x036B765C MOV X20, X0
	0x036B7660 ADRP X0, 0xA6B000
	0x036B7664 LDR X0, [X0 + 0xD90]
	0x036B7668 BL 0x1C16D08
	0x036B766C MOV X1, X0
	0x036B7670 MOV X0, X20
	0x036B7674 MOV X2, X31
	0x036B7678 BL 0x3316014
	0x036B767C ADRP X0, 0xA88000
	0x036B7680 LDR X0, [X0 + 0x550]
	0x036B7684 BL 0x1C16D08
	0x036B7688 MOV X1, X0
	0x036B768C MOV X0, X20
	0x036B7690 BL 0x1C16DEC
	0x036B7694 ADRP X0, 0xA44000
	0x036B7698 LDR X0, [X0 + 0x760]
	0x036B769C BL 0x1C16D08
	0x036B76A0 BL 0x1C16F10
	0x036B76A4 MOV X20, X0
	0x036B76A8 ADRP X0, 0xA64000
	0x036B76AC LDR X0, [X0 + 0x648]
	0x036B76B0 BL 0x1C16D08
	0x036B76B4 MOV X1, X0
	0x036B76B8 MOV X0, X20
	0x036B76BC MOV X2, X31
	0x036B76C0 BL 0x3316014
	0x036B76C4 ADRP X0, 0xA88000
	0x036B76C8 LDR X0, [X0 + 0x550]
	0x036B76CC BL 0x1C16D08
	0x036B76D0 MOV X1, X0
	0x036B76D4 MOV X0, X20
	0x036B76D8 BL 0x1C16DEC
	0x036B76DC BL 0x1C16F20
	0x036B76E0 ADRP X0, 0xA3C000
	0x036B76E4 LDR X0, [X0 + 0x5B0]
	0x036B76E8 BL 0x1C16D08
	0x036B76EC BL 0x1C16F10
	0x036B76F0 MOV X20, X0
	0x036B76F4 ADRP X0, 0xA82000
	0x036B76F8 LDR X0, [X0 + 0x5B0]
	0x036B76FC BL 0x1C16D08
	0x036B7700 MOV X1, X0
	0x036B7704 MOV X0, X20
	0x036B7708 MOV X2, X31
	0x036B770C BL 0x337DF1C
	0x036B7710 ADRP X0, 0xA88000
	0x036B7714 LDR X0, [X0 + 0x550]
	0x036B7718 BL 0x1C16D08
	0x036B771C MOV X1, X0
	0x036B7720 MOV X0, X20
	0x036B7724 BL 0x1C16DEC
	0x036B7728 B 0x36B7CE8
	0x036B772C B 0x36B7CE8
	0x036B7730 B 0x36B7CE8
	0x036B7734 B 0x36B7CE8
	0x036B7738 B 0x36B7CE8
	0x036B773C B 0x36B7CE8
	0x036B7740 B 0x36B7CE8
	0x036B7744 B 0x36B7CE8
	0x036B7748 CBZ X20, 0x36B798C
	0x036B774C LDR X1, [X19 + 0x40]
	0x036B7750 ADD X0, X20, 0x68
	0x036B7754 MOV X2, X31
	0x036B7758 BL 0x1C24138
	0x036B775C CBZ X0, 0x36B77DC
	0x036B7760 ADRP X8, 0xA88000
	0x036B7764 LDR X8, [X8 + 0x468]
	0x036B7768 LDR X1, [X8]
	0x036B776C BL 0x2851004
	0x036B7770 CBZ X0, 0x36B7990
	0x036B7774 ADRP X8, 0xA88000
	0x036B7778 LDR X8, [X8 + 0x548]
	0x036B777C LDR X2, [X8]
	0x036B7780 MOV W1, W31
	0x036B7784 BL 0x269F5D4
	0x036B7788 ADRP X8, 0xA88000
	0x036B778C LDR X8, [X8 + 0x540]
	0x036B7790 STP X0, X1, [X31 + 0x20]
	0x036B7794 LDR X8, [X8]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0xD2A000
	009 Move W8, [X21+2441]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {60}
	016 Move X0, 0xA89000
	017 Move X0, [X0+1200]
	018 Call 0x1C17CF4
	019 Move X0, 0xA89000
	020 Move X0, [X0+1208]
	021 Call 0x1C17CF4
	022 Move X0, 0xA84000
	023 Move X0, [X0+360]
	024 Call 0x1C17CF4
	025 Move X0, 0xA89000
	026 Move X0, [X0+1216]
	027 Call 0x1C17CF4
	028 Move X0, 0xA40000
	029 Move X0, [X0+632]
	030 Call 0x1C17CF4
	031 Move X0, 0xA84000
	032 Move X0, [X0+2952]
	033 Call 0x1C17CF4
	034 Move X0, 0xA88000
	035 Move X0, [X0+2376]
	036 Call 0x1C17CF4
	037 Move X0, 0xA84000
	038 Move X0, [X0+1744]
	039 Call 0x1C17CF4
	040 Move X0, 0xA84000
	041 Move X0, [X0+400]
	042 Call 0x1C17CF4
	043 Move X0, 0xA84000
	044 Move X0, [X0+600]
	045 Call 0x1C17CF4
	046 Move X0, 0xA65000
	047 Move X0, [X0+2856]
	048 Call 0x1C17CF4
	049 Move X0, 0xA88000
	050 Move X0, [X0+2384]
	051 Call 0x1C17CF4
	052 Move X0, 0xA84000
	053 Move X0, [X0+344]
	054 Call 0x1C17CF4
	055 Move X0, 0xA88000
	056 Move X0, [X0+520]
	057 Call 0x1C17CF4
	058 Move W8, 1
	059 Move [X21+2441], W8
	060 Move [X31+8], X31
	061 Move X0, [X19+136]
	062 Compare X0, 0
	063 JumpIfEqual {383}
	064 Move X23, 0xA84000
	065 Move X23, [X23+400]
	066 Move X22, 0xA84000
	067 Move X2, X31
	068 Move X1, [X23]
	069 Move X22, [X22+600]
	070 Call NameValueCollection.get_Item, X0, X1
	071 Compare X0, 0
	072 JumpIfEqual {79}
	073 Move X1, [X22]
	074 Move W2, 5
	075 Move X3, X31
	076 Call String.IndexOf, X0, X1, X2
	077 Add W31, W0, 1
	078 NotImplemented "Instruction CSET not yet implemented."
	079 Move W24, W31
	080 Move X0, [X19+136]
	081 Compare X0, 0
	082 JumpIfEqual {383}
	083 Move X8, 0xA65000
	084 Move X8, [X8+2856]
	085 Move X2, X31
	086 Move X1, [X8]
	087 Call NameValueCollection.get_Item, X0, X1
	088 Compare W24, 0
	089 JumpIfNotEqual {105}
	090 Move X1, X31
	091 Move X21, X0
	092 Call String.IsNullOrEmpty, X0
	093 Move TEMP, X0
	094 And TEMP, TEMP, 1
	095 Compare TEMP, 1
	096 JumpIfEqual {105}
	097 Add X1, X31, 8
	098 Move X0, X21
	099 Move X2, X31
	100 Call Int64.TryParse, X0, X1
	101 Move TEMP, X0
	102 And TEMP, TEMP, 1
	103 Compare TEMP, 1
	104 JumpIfEqual {109}
	105 Move TEMP, 0x80000000
	106 Not TEMP
	107 Move X8, TEMP
	108 Move [X31+8], X8
	109 Move X0, X19
	110 Call WebResponseStream.get_ExpectContent, X0
	111 Move TEMP, X0
	112 And TEMP, TEMP, 1
	113 Compare TEMP, 1
	114 JumpIfNotEqual {129}
	115 Move X0, [X19+136]
	116 Compare X0, 0
	117 JumpIfEqual {383}
	118 Move X1, [X23]
	119 Move X2, X31
	120 Call NameValueCollection.get_Item, X0, X1
	121 Compare X0, 0
	122 JumpIfEqual {129}
	123 Move X1, [X22]
	124 Move W2, 5
	125 Move X3, X31
	126 Call String.IndexOf, X0, X1, X2
	127 Add W31, W0, 1
	128 NotImplemented "Instruction CSET not yet implemented."
	129 Move W8, W31
	130 Move X22, 0xA84000
	131 Move X22, [X22+360]
	132 Move [X19+169], W8
	133 Move X21, [X19+160]
	134 Move X0, [X22]
	135 Move W8, [X0+224]
	136 Compare W8, 0
	137 JumpIfNotEqual {140}
	138 Call 0x1C17DFC
	139 Move X0, [X22]
	140 Move X8, [X0+184]
	141 Move X0, X21
	142 Move X2, X31
	143 Move X1, [X8+16]
	144 Call Version.op_Equality, X0, X1
	145 Move TEMP, X0
	146 And TEMP, TEMP, 1
	147 Compare TEMP, 1
	148 JumpIfNotEqual {210}
	149 Move X8, [X19+128]
	150 Compare X8, 0
	151 JumpIfEqual {383}
	152 Move W8, [X8+152]
	153 Compare W8, 0
	154 JumpIfEqual {210}
	155 Move X8, [X19+72]
	156 Move W9, 1
	157 Move [X19+168], W9
	158 Compare X8, 0
	159 JumpIfEqual {383}
	160 Move X8, [X8+72]
	161 Compare X8, 0
	162 JumpIfEqual {383}
	163 Move X0, [X19+136]
	164 Compare X0, 0
	165 JumpIfEqual {383}
	166 Move W8, [X8+48]
	167 Move X9, 0xA84000
	168 Move X10, 0xA88000
	169 Move X9, [X9+344]
	170 Move X10, [X10+520]
	171 NotImplemented "Instruction CMP not yet implemented."
	172 Move X2, X31
	173 NotImplemented "Instruction CSEL not yet implemented."
	174 Move X1, [X8]
	175 Call NameValueCollection.get_Item, X0, X1
	176 Compare X0, 0
	177 JumpIfEqual {201}
	178 Move X1, X31
	179 Call String.ToLower, X0
	180 Compare X0, 0
	181 JumpIfEqual {383}
	182 Move X8, 0xA88000
	183 Move X8, [X8+2384]
	184 Move W2, 4
	185 Move X3, X31
	186 Move X21, X0
	187 Move X1, [X8]
	188 Call String.IndexOf, X0, X1, X2
	189 Add W31, W0, 1
	190 NotImplemented "Instruction CSET not yet implemented."
	191 Move [X19+168], W8
	192 Move X8, 0xA84000
	193 Move X8, [X8+2952]
	194 Move W2, 4
	195 Move X0, X21
	196 Move X3, X31
	197 Move X1, [X8]
	198 Call String.IndexOf, X0, X1, X2
	199 Add W31, W0, 1
	200 Move [X19+168], W31
	201 Move W8, [X19+169]
	202 Compare W8, 0
	203 JumpIfNotEqual {210}
	204 Move X8, [X31+8]
	205 Move TEMP, 0x80000000
	206 Not TEMP
	207 Move X9, TEMP
	208 NotImplemented "Instruction CMP not yet implemented."
	209 Move [X19+168], W31
	210 Move X24, 0xA89000
	211 Move X24, [X24+1200]
	212 Move X0, X19
	213 Call WebResponseStream.get_ExpectContent, X0
	214 Move TEMP, X0
	215 And TEMP, TEMP, 1
	216 Compare TEMP, 1
	217 JumpIfNotEqual {243}
	218 Move W8, [X19+169]
	219 Compare W8, 0
	220 JumpIfEqual {223}
	221 Compare X20, 0
	222 JumpIfNotEqual {228}
	223 Compare X20, 0
	224 JumpIfEqual {383}
	225 NotImplemented "Instruction LDRSW not yet implemented."
	226 Move X9, [X31+8]
	227 NotImplemented "Instruction CMP not yet implemented."
	228 Move W9, [X20+28]
	229 Move X8, [X19+128]
	230 NotImplemented "Instruction CMP not yet implemented."
	231 Compare X8, 0
	232 JumpIfEqual {383}
	233 Move X0, [X24]
	234 Move X22, [X19+80]
	235 Move X23, [X8+144]
	236 Call 0x1C17F10
	237 Move X1, X22
	238 Move X2, X23
	239 Move X3, X20
	240 Move X4, X31
	241 Move X21, X0
	242 Call BufferedReadStream..ctor, X0, X1, X2, X3
	243 Move W8, 1
	244 Move [X19+97], W8
	245 Move X0, [X24]
	246 Move X22, [X19+80]
	247 Call 0x1C17F10
	248 Move X1, X22
	249 Move X2, X31
	250 Move X3, X20
	251 Move X4, X31
	252 Move X21, X0
	253 Call BufferedReadStream..ctor, X0, X1, X2, X3
	254 Move [X19+88], X21
	255 Compare X8, 0
	256 JumpIfEqual {383}
	257 Move X21, [X8+144]
	258 Move W8, [X19+169]
	259 Compare W8, 0
	260 JumpIfEqual {274}
	261 Move X8, 0xA89000
	262 Move X8, [X8+1216]
	263 Move X22, [X19+80]
	264 Move X23, [X19+136]
	265 Move X0, [X8]
	266 Call 0x1C17F10
	267 Move X1, X22
	268 Move X2, X21
	269 Move X3, X23
	270 Move X4, X31
	271 Move X20, X0
	272 Call MonoChunkStream..ctor, X0, X1, X2, X3
	273 Move [X19+88], X20
	274 Move W8, [X19+97]
	275 Compare W8, 0
	276 JumpIfEqual {359}
	277 Move X0, [X19+136]
	278 Compare X0, 0
	279 JumpIfEqual {383}
	280 Move X8, 0xA84000
	281 Move X8, [X8+1744]
	282 Move X20, 0xA40000
	283 Move X2, X31
	284 Move X1, [X8]
	285 Move X20, [X20+632]
	286 Call NameValueCollection.get_Item, X0, X1
	287 Move X1, [X20]
	288 Move X2, X31
	289 Move X20, X0
	290 Call String.op_Equality, X0, X1
	291 Move TEMP, X0
	292 And TEMP, TEMP, 1
	293 Compare TEMP, 1
	294 JumpIfNotEqual {303}
	295 Move X8, [X19+64]
	296 Compare X8, 0
	297 JumpIfEqual {383}
	298 Move W8, [X8+284]
	299 Move TEMP, X8
	300 And TEMP, TEMP, 1
	301 Compare TEMP, 1
	302 JumpIfEqual {324}
	303 Move X8, 0xA88000
	304 Move X8, [X8+2376]
	305 Move X0, X20
	306 Move X2, X31
	307 Move X1, [X8]
	308 Call String.op_Equality, X0, X1
	309 Move TEMP, X0
	310 And TEMP, TEMP, 1
	311 Compare TEMP, 1
	312 JumpIfNotEqual {337}
	313 Move X8, [X19+64]
	314 Compare X8, 0
	315 JumpIfEqual {383}
	316 Move W8, [X8+284]
	317 Move TEMP, X8
	318 And TEMP, TEMP, 2
	319 Compare TEMP, 2
	320 JumpIfNotEqual {337}
	321 Move X0, [X19+80]
	322 Move X1, [X19+88]
	323 Move W2, 1
	324 Move X0, [X19+80]
	325 Move X1, [X19+88]
	326 Move W2, W31
	327 Move X3, X31
	328 Call ContentDecodeStream.Create, X0, X1, X2
	329 Move X8, [X19+136]
	330 Move [X19+88], X0
	331 Compare X8, 0
	332 JumpIfEqual {383}
	333 Move W1, 13
	334 Move X0, X8
	335 Move X2, X31
	336 Call WebHeaderCollection.Remove, X0, X1
	337 Move X0, X19
	338 Call WebResponseStream.get_ExpectContent, X0
	339 Move TEMP, X0
	340 And TEMP, TEMP, 1
	341 Compare TEMP, 1
	342 JumpIfEqual {351}
	343 Move X0, [X19+80]
	344 Move W8, 1
	345 Move [X19+96], W8
	346 Compare X0, 0
	347 JumpIfEqual {383}
	348 Move W1, 1
	349 Move X2, X31
	350 Call WebOperation.Finish, X0, X1, X2
	351 Move X20, [X31+48]
	352 Move X19, [X31+56]
	353 Move X22, [X31+32]
	354 Move X21, [X31+40]
	355 Move X24, [X31+16]
	356 Move X23, [X31+24]
	357 Move X30, [X31+64]
	358 Return 
	359 Move X23, [X31+8]
	360 Move X22, [X19+80]
	361 Move TEMP, 0x80000000
	362 Not TEMP
	363 Move X8, TEMP
	364 NotImplemented "Instruction CMP not yet implemented."
	365 Move X0, [X24]
	366 Call 0x1C17F10
	367 Move X1, X22
	368 Move X2, X21
	369 Move X3, X31
	370 Move X4, X31
	371 Move X20, X0
	372 Call BufferedReadStream..ctor, X0, X1, X2, X3
	373 Move X8, 0xA89000
	374 Move X8, [X8+1208]
	375 Move X0, [X8]
	376 Call 0x1C17F10
	377 Move X1, X22
	378 Move X2, X21
	379 Move X3, X23
	380 Move X4, X31
	381 Move X20, X0
	382 Call FixedSizeReadStream..ctor, X0, X1, X2, X3
	383 Call 0x1C17F20

Method: System.Threading.Tasks.Task`1<System.Byte[]> ReadAllAsyncInner(System.Threading.CancellationToken cancellationToken)

Disassembly:
	0x036B7798 ADD X0, X31, 0x20
	0x036B779C MOV X1, X8
	0x036B77A0 BL 0x2998B64
	0x036B77A4 TBZ X0, 0x0, 0x36B7948
	0x036B77A8 ADRP X8, 0xA88000
	0x036B77AC LDR X8, [X8 + 0x538]
	0x036B77B0 LDR X1, [X8]
	0x036B77B4 ADD X0, X31, 0x20
	0x036B77B8 BL 0x2998BB0
	0x036B77BC LDR X0, [X22]
	0x036B77C0 LDR W8, [X0 + 0xE0]
	0x036B77C4 CBNZ W8, 0x36B77CC
	0x036B77C8 BL 0x1C16DFC
	0x036B77CC ADD X0, X19, 0x20
	0x036B77D0 MOV X1, X31
	0x036B77D4 BL 0x33DD2B0
	0x036B77D8 TBZ X0, 0x0, 0x36B7748
	0x036B77DC CMP W24, 0x1
	0x036B77E0 STR W31, [X19 + 0x48]
	0x036B77E4 STR X31, [X19 + 0x50]
	0x036B77E8 B.NE 0x36B78B4
	0x036B77EC LDUR V0, [X19 + 0x68]
	0x036B77F0 MOVN W24, 0x0
	0x036B77F4 STR V0, [X31 + 0x1]
	0x036B77F8 STP X31, X31, [X19 + 0x68]
	0x036B77FC STR W24, [X19]
	0x036B7800 ADRP X8, 0xA70000
	0x036B7804 LDR X8, [X8 + 0x2C0]
	0x036B7808 LDR X1, [X8]
	0x036B780C ADD X0, X31, 0x10
	0x036B7810 BL 0x29989C4
	0x036B7814 MOV W8, W0
	0x036B7818 LDR X0, [X19 + 0x50]
	0x036B781C STR W8, [X19 + 0x48]
	0x036B7820 CBZ X0, 0x36B7A7C
	0x036B7824 CBZ X20, 0x36B7994
	0x036B7828 LDR X23, [X20 + 0x70]
	0x036B782C STRB W31, [X31 + 0x3C]
	0x036B7830 ADD X1, X31, 0x3C
	0x036B7834 MOV X0, X23
	0x036B7838 MOV X2, X31
	0x036B783C BL 0x33DE64C
	0x036B7840 LDR X21, [X19 + 0x40]
	0x036B7844 CBZ X21, 0x36B7998
	0x036B7848 LDR X22, [X19 + 0x50]
	0x036B784C ADRP X0, 0xA87000
	0x036B7850 LDR X0, [X0 + 0xAA0]
	0x036B7854 BL 0x1C16D08
	0x036B7858 MOV X2, X0
	0x036B785C MOV X0, X21
	0x036B7860 MOV X1, X22
	0x036B7864 BL 0x2850ED0
	0x036B7868 MOV X21, X31
	0x036B786C STR X31, [X20 + 0x68]
	0x036B7870 STR W31, [X20 + 0x78]
	0x036B7874 MOVZ W22, 0x1C
	0x036B7878 TBZ X24, 0x1F, 0x36B7890
	0x036B787C LDRB W8, [X31 + 0x3C]
	0x036B7880 CBZ W8, 0x36B7890
	0x036B7884 MOV X0, X23

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+96], X30
	003 Move [X31+112], X22
	004 Move [X31+120], X21
	005 Move [X31+128], X20
	006 Move [X31+136], X19
	007 Move X22, 0xD2A000
	008 Move X21, 0xA89000
	009 Move W8, [X22+2442]
	010 Move X21, [X21+1224]
	011 Move X19, X1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {31}
	017 Move X0, 0xA89000
	018 Move X0, [X0+1232]
	019 Call 0x1C17CF4
	020 Move X0, 0xA89000
	021 Move X0, [X0+1240]
	022 Call 0x1C17CF4
	023 Move X0, 0xA89000
	024 Move X0, [X0+1248]
	025 Call 0x1C17CF4
	026 Move X0, 0xA89000
	027 Move X0, [X0+1224]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X22+2442], W8
	031 Move X0, [X21]
	032 NotImplemented "Instruction MOVI not yet implemented."
	033 Move [X31+80], X31
	034 Move [X31+48], V0
	035 Move [X31+56], V0
	036 Move [X31+16], V0
	037 Move [X31+24], V0
	038 Move [X31], V0
	039 Move [X31+32], X19
	040 Move [X31+40], X20
	041 Move X19, 0xA89000
	042 Move X21, 0xA89000
	043 Move X20, 0xA89000
	044 Move W8, [X0+224]
	045 Move X19, [X19+1232]
	046 Move X21, [X21+1240]
	047 Move X20, [X20+1248]
	048 Compare W8, 0
	049 JumpIfNotEqual {51}
	050 Call 0x1C17DFC
	051 Move X0, [X19]
	052 Add X8, X31, 0
	053 Or X19, X8, 15
	054 Move X8, X19
	055 Call AsyncTaskMethodBuilder`1<Object>.Create
	056 Move X2, [X21]
	057 Move TEMP, 0
	058 Not TEMP
	059 Move W8, TEMP
	060 Add X1, X31, 0
	061 Move X0, X19
	062 Move [X31], W8
	063 Call AsyncTaskMethodBuilder`1<Object>.Start, X0, X1
	064 Move X1, [X20]
	065 Move X0, X19
	066 Call AsyncTaskMethodBuilder`1<Object>.get_Task, X0
	067 Move X20, [X31+128]
	068 Move X19, [X31+136]
	069 Move X22, [X31+112]
	070 Move X21, [X31+120]
	071 Move X30, [X31+96]
	072 Add X31, X31, 144
	073 Return X0

Method: System.Threading.Tasks.Task ReadAllAsync(System.Boolean resending, System.Threading.CancellationToken cancellationToken)

Disassembly:
	0x036B7888 MOV X1, X31
	0x036B788C BL 0x33E14E4
	0x036B7890 CBNZ X21, 0x36B799C
	0x036B7894 CMP W22, 0x1C
	0x036B7898 B.EQ 0x36B78A0
	0x036B789C CBNZ W22, 0x36B7B68
	0x036B78A0 LDR X0, [X20 + 0x50]
	0x036B78A4 MOVZ W8, 0x1
	0x036B78A8 STRB W8, [X20 + 0x28]
	0x036B78AC CBNZ X0, 0x36B79A4
	0x036B78B0 BL 0x1C16F20
	0x036B78B4 CBZ X20, 0x36B79CC
	0x036B78B8 LDP X4, X1, [X19 + 0x20]
	0x036B78BC LDP W2, W3, [X19 + 0x30]
	0x036B78C0 MOV X0, X20
	0x036B78C4 BL 0x36B5E98
	0x036B78C8 CBZ X0, 0x36B79D0
	0x036B78CC ADRP X8, 0xA70000
	0x036B78D0 LDR X8, [X8 + 0x2D0]
	0x036B78D4 LDR X2, [X8]
	0x036B78D8 MOV W1, W31
	0x036B78DC BL 0x269D3A8
	0x036B78E0 ADRP X8, 0xA70000
	0x036B78E4 LDR X8, [X8 + 0x2C8]
	0x036B78E8 STP X0, X1, [X31 + 0x10]
	0x036B78EC LDR X8, [X8]
	0x036B78F0 ADD X0, X31, 0x10
	0x036B78F4 MOV X1, X8
	0x036B78F8 BL 0x2998978
	0x036B78FC TBNZ X0, 0x0, 0x36B7800
	0x036B7900 MOVZ W8, 0x1
	0x036B7904 STR W8, [X19]
	0x036B7908 LDR V0, [X31 + 0x1]
	0x036B790C ADRP X8, 0xA6B000
	0x036B7910 STUR V0, [X19 + 0x68]
	0x036B7914 LDR X8, [X8 + 0xDA0]
	0x036B7918 LDR X0, [X8]
	0x036B791C LDR W8, [X0 + 0xE0]
	0x036B7920 CBNZ W8, 0x36B7928
	0x036B7924 BL 0x1C16DFC
	0x036B7928 ADRP X8, 0xA88000
	0x036B792C LDR X8, [X8 + 0x528]
	0x036B7930 ADD X0, X19, 0x8
	0x036B7934 LDR X3, [X8]
	0x036B7938 ADD X1, X31, 0x10
	0x036B793C MOV X2, X19
	0x036B7940 BL 0x1FAC948
	0x036B7944 B 0x36B7B68
	0x036B7948 STR W31, [X19]
	0x036B794C LDR V0, [X31 + 0x2]
	0x036B7950 ADRP X8, 0xA6B000
	0x036B7954 STUR V0, [X19 + 0x58]
	0x036B7958 LDR X8, [X8 + 0xDA0]
	0x036B795C LDR X0, [X8]
	0x036B7960 LDR W8, [X0 + 0xE0]
	0x036B7964 CBNZ W8, 0x36B796C
	0x036B7968 BL 0x1C16DFC

ISIL:
	001 Subtract X31, X31, 192
	002 Move [X31+144], X30
	003 Move [X31+152], X23
	004 Move [X31+160], X22
	005 Move [X31+168], X21
	006 Move [X31+176], X20
	007 Move [X31+184], X19
	008 Move X23, 0xD2A000
	009 Move X22, 0xA40000
	010 Move W8, [X23+2443]
	011 Move X22, [X22+640]
	012 Move X19, X2
	013 Move W21, W1
	014 Move X20, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0xA89000
	020 Move X0, [X0+1256]
	021 Call 0x1C17CF4
	022 Move X0, 0xA40000
	023 Move X0, [X0+640]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X23+2443], W8
	027 Move X0, [X22]
	028 And W8, W21, 1
	029 NotImplemented "Instruction MOVI not yet implemented."
	030 Move [X31+64], V0
	031 Move [X31+72], V0
	032 Move [X31+112], V0
	033 Move [X31+120], V0
	034 Move [X31+6], V0
	035 Move [X31+32], V0
	036 Move [X31+40], V0
	037 Move [X31+80], W8
	038 Move [X31+64], X20
	039 Move [X31+72], X19
	040 Move X19, 0xA89000
	041 Move W8, [X0+224]
	042 Move X19, [X19+1256]
	043 Compare W8, 0
	044 JumpIfNotEqual {46}
	045 Call 0x1C17DFC
	046 Add X8, X31, 8
	047 Move X0, X31
	048 Call AsyncTaskMethodBuilder.Create
	049 NotImplemented "Instruction LDUR not yet implemented."
	050 Move X9, [X31+24]
	051 Move X2, [X19]
	052 Add X8, X31, 32
	053 Or X19, X8, 15
	054 Move TEMP, 0
	055 Not TEMP
	056 Move W10, TEMP
	057 Add X1, X31, 32
	058 Move X0, X19
	059 Move [X31+40], V0
	060 Move [X31+56], X9
	061 Move [X31+32], W10
	062 Call AsyncTaskMethodBuilder.Start, X0, X1
	063 Move X0, X19
	064 Move X1, X31
	065 Call AsyncTaskMethodBuilder.get_Task, X0
	066 Move X20, [X31+176]
	067 Move X19, [X31+184]
	068 Move X22, [X31+160]
	069 Move X21, [X31+168]
	070 Move X30, [X31+144]
	071 Move X23, [X31+152]
	072 Add X31, X31, 192
	073 Return X0

Method: System.Threading.Tasks.Task WriteAsync(System.Byte[] buffer, System.Int32 offset, System.Int32 count, System.Threading.CancellationToken cancellationToken)

Disassembly:
	0x036B796C ADRP X8, 0xA88000
	0x036B7970 LDR X8, [X8 + 0x520]
	0x036B7974 ADD X0, X19, 0x8
	0x036B7978 LDR X3, [X8]
	0x036B797C ADD X1, X31, 0x20
	0x036B7980 MOV X2, X19
	0x036B7984 BL 0x1FACD70
	0x036B7988 B 0x36B7B68
	0x036B798C BL 0x1C16F20
	0x036B7990 BL 0x1C16F20
	0x036B7994 BL 0x1C16F20
	0x036B7998 BL 0x1C16F20
	0x036B799C MOV X0, X21
	0x036B79A0 BL 0x1C16F18
	0x036B79A4 LDR X2, [X19 + 0x50]
	0x036B79A8 MOV W1, W31
	0x036B79AC BL 0x36B01D4
	0x036B79B0 LDR X20, [X19 + 0x50]
	0x036B79B4 ADRP X0, 0xA88000
	0x036B79B8 LDR X0, [X0 + 0x550]
	0x036B79BC BL 0x1C16D08
	0x036B79C0 MOV X1, X0
	0x036B79C4 MOV X0, X20
	0x036B79C8 BL 0x1C16DEC
	0x036B79CC BL 0x1C16F20
	0x036B79D0 BL 0x1C16F20
	0x036B79D4 MOV X21, X1
	0x036B79D8 MOV X22, X0
	0x036B79DC MOVZ W24, 0x1
	0x036B79E0 B 0x36B7A18
	0x036B79E4 B 0x36B7CE8
	0x036B79E8 B 0x36B7A10
	0x036B79EC B 0x36B7A10
	0x036B79F0 B 0x36B7A10
	0x036B79F4 B 0x36B7CE8
	0x036B79F8 B 0x36B7C5C
	0x036B79FC B 0x36B7C5C
	0x036B7A00 B 0x36B7CE8
	0x036B7A04 B 0x36B7A10

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xD2A000
	007 Move X22, 0xA3D000
	008 Move X19, 0xA89000
	009 Move X20, 0xA3E000
	010 Move W8, [X21+2444]
	011 Move X22, [X22+2880]
	012 Move X19, [X19+192]
	013 Move X20, [X20+1976]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0xA3D000
	019 Move X0, [X0+2880]
	020 Call 0x1C17CF4
	021 Move X0, 0xA3E000
	022 Move X0, [X0+1976]
	023 Call 0x1C17CF4
	024 Move X0, 0xA89000
	025 Move X0, [X0+192]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X21+2444], W8
	029 Move X0, [X22]
	030 Call 0x1C17F10
	031 Move X1, [X19]
	032 Move X2, X31
	033 Move X19, X0
	034 Call NotSupportedException..ctor, X0, X1
	035 Move X0, [X20]
	036 Move W8, [X0+224]
	037 Compare W8, 0
	038 JumpIfNotEqual {40}
	039 Call 0x1C17DFC
	040 Move X0, X19
	041 Move X20, [X31+32]
	042 Move X19, [X31+40]
	043 Move X22, [X31+16]
	044 Move X21, [X31+24]
	045 Move X1, X31
	046 Move X30, [X31+48]
	047 Call Task.FromException, X0
	048 Return X0

Method: System.Void Close_internal(ref System.Boolean disposed)

Disassembly:
	0x036B7A08 B 0x36B7CE8
	0x036B7A0C B 0x36B7CE8
	0x036B7A10 MOV X21, X1
	0x036B7A14 MOV X22, X0
	0x036B7A18 CMP W21, 0x1
	0x036B7A1C B.NE 0x36B7CF0
	0x036B7A20 MOV X0, X22
	0x036B7A24 BL 0x3EB1AD0
	0x036B7A28 MOV X21, X0
	0x036B7A2C ADRP X0, 0xA3C000
	0x036B7A30 LDR X0, [X0 + 0x7D0]
	0x036B7A34 BL 0x1C16D08
	0x036B7A38 LDR X8, [X21]
	0x036B7A3C LDR X1, [X8]
	0x036B7A40 BL 0x1C17270
	0x036B7A44 TBZ X0, 0x0, 0x36B7B94
	0x036B7A48 LDR X21, [X21]
	0x036B7A4C BL 0x3EB1AE0
	0x036B7A50 CBZ X20, 0x36B7BB8
	0x036B7A54 ADRP X0, 0xA88000
	0x036B7A58 LDR X0, [X0 + 0x558]
	0x036B7A5C BL 0x1C16D08
	0x036B7A60 MOV X3, X0
	0x036B7A64 MOVZ W1, 0x3
	0x036B7A68 MOV X0, X20
	0x036B7A6C MOV X2, X21
	0x036B7A70 BL 0x36B6A90
	0x036B7A74 STR X0, [X19 + 0x50]
	0x036B7A78 CBNZ X0, 0x36B7824
	0x036B7A7C CBZ X20, 0x36B7B80
	0x036B7A80 LDR X23, [X20 + 0x70]
	0x036B7A84 STRB W31, [X31 + 0x3C]
	0x036B7A88 ADD X1, X31, 0x3C
	0x036B7A8C MOV X0, X23

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move W8, [X0+40]
	004 Compare W8, 0
	005 JumpIfNotEqual {10}
	006 Move W8, [X0+96]
	007 Move X19, X0
	008 Compare W8, 0
	009 JumpIfEqual {13}
	010 Move X30, [X31+16]
	011 Move X19, [X31+24]
	012 Return 
	013 Move W9, [X19+124]
	014 Move W8, 1
	015 Move [X19+96], W8
	016 Compare W9, 0
	017 JumpIfNotEqual {21}
	018 Move W9, [X19+97]
	019 Compare W9, 0
	020 JumpIfEqual {37}
	021 Move [X1], W8
	022 Move X0, [X19+88]
	023 Compare X0, 0
	024 JumpIfEqual {27}
	025 Move X1, X31
	026 Call Stream.Dispose, X0
	027 Move X0, [X19+80]
	028 Move [X19+88], X31
	029 Compare X0, 0
	030 JumpIfEqual {44}
	031 Move W1, 1
	032 Move X2, X31
	033 Move X30, [X31+16]
	034 Move X19, [X31+24]
	035 Call WebOperation.Finish, X0, X1, X2
	036 Return 
	037 Move W8, 1
	038 Move [X19+40], W8
	039 Move [X1], W8
	040 Move X0, [X19+80]
	041 Compare X0, 0
	042 JumpIfEqual {44}
	043 Move W1, W31
	044 Call 0x1C17F20

Method: System.Net.WebException GetReadException(System.Net.WebExceptionStatus status, System.Exception error, System.String where)

Disassembly:
	0x036B7A90 MOV X2, X31
	0x036B7A94 BL 0x33DE64C
	0x036B7A98 LDR X0, [X19 + 0x40]
	0x036B7A9C CBZ X0, 0x36B7B84
	0x036B7AA0 ADRP X8, 0xA87000
	0x036B7AA4 LDR X8, [X8 + 0xA78]
	0x036B7AA8 LDR X1, [X8]
	0x036B7AAC BL 0x2850D00
	0x036B7AB0 MOV X21, X31
	0x036B7AB4 STR X31, [X20 + 0x68]
	0x036B7AB8 STR W31, [X20 + 0x78]
	0x036B7ABC MOVZ W22, 0x1F
	0x036B7AC0 TBZ X24, 0x1F, 0x36B7AD8
	0x036B7AC4 LDRB W8, [X31 + 0x3C]
	0x036B7AC8 CBZ W8, 0x36B7AD8
	0x036B7ACC MOV X0, X23
	0x036B7AD0 MOV X1, X31
	0x036B7AD4 BL 0x33E14E4
	0x036B7AD8 CBNZ X21, 0x36B7B88
	0x036B7ADC CMP W22, 0x1F
	0x036B7AE0 B.EQ 0x36B7AE8
	0x036B7AE4 CBNZ W22, 0x36B7B68
	0x036B7AE8 LDR W21, [X19 + 0x48]
	0x036B7AEC CMP W21, 0x0
	0x036B7AF0 B.GT 0x36B7B28
	0x036B7AF4 LDRB W8, [X20 + 0x7C]
	0x036B7AF8 CBNZ W8, 0x36B7B28
	0x036B7AFC LDRB W9, [X20 + 0x60]
	0x036B7B00 MOVZ W8, 0x1
	0x036B7B04 STRB W8, [X20 + 0x7C]
	0x036B7B08 CBNZ W9, 0x36B7B28
	0x036B7B0C LDR X0, [X20 + 0x50]
	0x036B7B10 STRB W8, [X20 + 0x60]
	0x036B7B14 CBZ X0, 0x36B7B90
	0x036B7B18 MOVZ W1, 0x1
	0x036B7B1C MOV X2, X31
	0x036B7B20 BL 0x36B01D4
	0x036B7B24 LDR W21, [X19 + 0x48]
	0x036B7B28 MOVN W8, 0x1
	0x036B7B2C STR X31, [X19 + 0x40]
	0x036B7B30 STR X31, [X19 + 0x50]
	0x036B7B34 STR W8, [X19], #0x8
	0x036B7B38 ADRP X8, 0xA6B000
	0x036B7B3C LDR X8, [X8 + 0xDA0]
	0x036B7B40 LDR X0, [X8]
	0x036B7B44 LDR W8, [X0 + 0xE0]
	0x036B7B48 CBNZ W8, 0x36B7B50
	0x036B7B4C BL 0x1C16DFC
	0x036B7B50 ADRP X8, 0xA6B000
	0x036B7B54 LDR X8, [X8 + 0xE30]
	0x036B7B58 MOV X0, X19
	0x036B7B5C MOV W1, W21
	0x036B7B60 LDR X2, [X8]
	0x036B7B64 BL 0x26300F0
	0x036B7B68 LDP X20, X19, [X31 + 0x60]
	0x036B7B6C LDP X22, X21, [X31 + 0x50]
	0x036B7B70 LDP X24, X23, [X31 + 0x40]
	0x036B7B74 LDR X30, [X31 + 0x30]
	0x036B7B78 ADD X31, X31, 0x70
	0x036B7B7C RET
	0x036B7B80 BL 0x1C16F20
	0x036B7B84 BL 0x1C16F20
	0x036B7B88 MOV X0, X21
	0x036B7B8C BL 0x1C16F18
	0x036B7B90 BL 0x1C16F20
	0x036B7B94 MOVZ W0, 0x8
	0x036B7B98 BL 0x3EB1AF0
	0x036B7B9C LDR X8, [X21]
	0x036B7BA0 STR X8, [X0]
	0x036B7BA4 ADRP X1, 0x7FD000
	0x036B7BA8 ADD X1, X1, 0xE58
	0x036B7BAC MOV X2, X31
	0x036B7BB0 BL 0x3EB1B00
	0x036B7BB4 B 0x36B7D90
	0x036B7BB8 BL 0x1C16F20
	0x036B7BBC B 0x36B7CE8
	0x036B7BC0 B 0x36B7CE8
	0x036B7BC4 B 0x36B7CE8
	0x036B7BC8 MOV X21, X1
	0x036B7BCC MOV X22, X0
	0x036B7BD0 BL 0x3EB1AE0
	0x036B7BD4 B 0x36B7CF0
	0x036B7BD8 B 0x36B7CE8
	0x036B7BDC B 0x36B7BE4
	0x036B7BE0 B 0x36B7BE4
	0x036B7BE4 MOV X21, X1
	0x036B7BE8 MOV X22, X0
	0x036B7BEC CMP W21, 0x1
	0x036B7BF0 B.NE 0x36B7C18
	0x036B7BF4 MOV X0, X22
	0x036B7BF8 BL 0x3EB1AD0
	0x036B7BFC LDR X8, [X0]
	0x036B7C00 STR X8, [X31 + 0x8]
	0x036B7C04 BL 0x3EB1AE0
	0x036B7C08 LDR X21, [X31 + 0x8]
	0x036B7C0C MOV W22, W31
	0x036B7C10 TBNZ X24, 0x1F, 0x36B7AC4
	0x036B7C14 B 0x36B7AD8
	0x036B7C18 STR X31, [X31 + 0x8]
	0x036B7C1C TBZ X24, 0x1F, 0x36B7C34
	0x036B7C20 LDRB W8, [X31 + 0x3C]
	0x036B7C24 CBZ W8, 0x36B7C34
	0x036B7C28 MOV X0, X23
	0x036B7C2C MOV X1, X31
	0x036B7C30 BL 0x33E14E4
	0x036B7C34 LDR X8, [X31 + 0x8]
	0x036B7C38 CBZ X8, 0x36B7CF0
	0x036B7C3C LDR X0, [X31 + 0x8]
	0x036B7C40 BL 0x1C16F18
	0x036B7C44 MOV X21, X1
	0x036B7C48 MOV X22, X0
	0x036B7C4C TBNZ X24, 0x1F, 0x36B7C20
	0x036B7C50 B 0x36B7C34
	0x036B7C54 B 0x36B7CE8
	0x036B7C58 B 0x36B7CE8
	0x036B7C5C MOV X21, X1
	0x036B7C60 MOV X22, X0
	0x036B7C64 CMP W21, 0x1
	0x036B7C68 B.NE 0x36B7C90
	0x036B7C6C MOV X0, X22
	0x036B7C70 BL 0x3EB1AD0
	0x036B7C74 LDR X8, [X0]
	0x036B7C78 STR X8, [X31 + 0x8]
	0x036B7C7C BL 0x3EB1AE0
	0x036B7C80 LDR X21, [X31 + 0x8]
	0x036B7C84 MOV W22, W31
	0x036B7C88 TBNZ X24, 0x1F, 0x36B787C
	0x036B7C8C B 0x36B7890
	0x036B7C90 STR X31, [X31 + 0x8]
	0x036B7C94 TBZ X24, 0x1F, 0x36B7CAC
	0x036B7C98 LDRB W8, [X31 + 0x3C]
	0x036B7C9C CBZ W8, 0x36B7CAC
	0x036B7CA0 MOV X0, X23
	0x036B7CA4 MOV X1, X31
	0x036B7CA8 BL 0x33E14E4
	0x036B7CAC LDR X8, [X31 + 0x8]
	0x036B7CB0 CBZ X8, 0x36B7CF0
	0x036B7CB4 LDR X0, [X31 + 0x8]
	0x036B7CB8 BL 0x1C16F18
	0x036B7CBC MOV X21, X1
	0x036B7CC0 MOV X22, X0
	0x036B7CC4 TBNZ X24, 0x1F, 0x36B7C98
	0x036B7CC8 B 0x36B7CAC
	0x036B7CCC B 0x36B7CE8
	0x036B7CD0 B 0x36B7CE8
	0x036B7CD4 B 0x36B7CE8
	0x036B7CD8 B 0x36B7CE8
	0x036B7CDC B 0x36B7CE8
	0x036B7CE0 B 0x36B7CE8
	0x036B7CE4 B 0x36B7CE8
	0x036B7CE8 MOV X21, X1
	0x036B7CEC MOV X22, X0
	0x036B7CF0 CMP W21, 0x1
	0x036B7CF4 B.NE 0x36B7D98
	0x036B7CF8 MOV X0, X22
	0x036B7CFC BL 0x3EB1AD0
	0x036B7D00 MOV X20, X0
	0x036B7D04 ADRP X0, 0xA3C000
	0x036B7D08 LDR X0, [X0 + 0x7D0]
	0x036B7D0C BL 0x1C16D08
	0x036B7D10 LDR X8, [X20]
	0x036B7D14 LDR X1, [X8]
	0x036B7D18 BL 0x1C17270
	0x036B7D1C TBZ X0, 0x0, 0x36B7D70

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X23, 0xD2A000
	011 Move X24, 0xA87000
	012 Move X25, 0xA89000
	013 Move W8, [X23+2445]
	014 Move X24, [X24+3856]
	015 Move X25, [X25+1264]
	016 Move X20, X3
	017 Move X21, X2
	018 Move W19, W1
	019 Move X22, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {47}
	024 Move X0, 0xA65000
	025 Move X0, [X0+2952]
	026 Call 0x1C17CF4
	027 Move X0, 0xA66000
	028 Move X0, [X0+1208]
	029 Call 0x1C17CF4
	030 Move X0, 0xA45000
	031 Move X0, [X0+2216]
	032 Call 0x1C17CF4
	033 Move X0, 0xA87000
	034 Move X0, [X0+3856]
	035 Call 0x1C17CF4
	036 Move X0, 0xA68000
	037 Move X0, [X0+816]
	038 Call 0x1C17CF4
	039 Move X0, 0xA89000
	040 Move X0, [X0+1264]
	041 Call 0x1C17CF4
	042 Move X0, 0xA89000
	043 Move X0, [X0+1272]
	044 Call 0x1C17CF4
	045 Move W8, 1
	046 Move [X23+2445], W8
	047 Move X23, 0xA68000
	048 Move X23, [X23+816]
	049 Move X0, X22
	050 Move X1, X21
	051 Call WebConnectionStream.GetException, X0, X1
	052 Move X21, X0
	053 Move X0, [X24]
	054 Add X1, X31, 12
	055 Move [X31+12], W19
	056 Call 0x1C17E04
	057 Move X8, [X25]
	058 Move X2, X0
	059 Move X1, X20
	060 Move X3, X31
	061 Move X0, X8
	062 Call String.Format, X0, X1, X2
	063 Compare X21, 0
	064 JumpIfEqual {92}
	065 Move X9, [X21]
	066 Move X8, [X23]
	067 Move W11, [X9+304]
	068 Move W10, [X8+304]
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Move X9, [X9+200]
	071 Add X9, X9, X10
	072 NotImplemented "Instruction LDUR not yet implemented."
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Move X0, [X22+80]
	075 Compare X0, 0
	076 JumpIfEqual {173}
	077 Call WebOperation.get_Aborted, X0
	078 Move TEMP, X0
	079 And TEMP, TEMP, 1
	080 Compare TEMP, 1
	081 JumpIfNotEqual {111}
	082 Move X8, 0xA65000
	083 Move X8, [X8+2952]
	084 Move X0, [X8]
	085 Move W8, [X0+224]
	086 Compare W8, 0
	087 JumpIfNotEqual {89}
	088 Call 0x1C17DFC
	089 Move X0, X31
	090 Call HttpWebRequest.CreateRequestAbortedException
	091 Move X20, X0
	092 Move X0, [X24]
	093 Add X1, X31, 8
	094 Move [X31+8], W19
	095 Call 0x1C17E04
	096 Move X8, [X25]
	097 Move X2, X0
	098 Move X1, X20
	099 Move X3, X31
	100 Move X0, X8
	101 Call String.Format, X0, X1, X2
	102 Move X8, [X23]
	103 Move X21, X0
	104 Move X0, X8
	105 Call 0x1C17F10
	106 Move X1, X21
	107 Move W2, W19
	108 Move X3, X31
	109 Move X20, X0
	110 Call WebException..ctor, X0, X1, X2
	111 Move X9, 0xA45000
	112 Move X9, [X9+2216]
	113 Move X8, [X21]
	114 Move X10, [X9]
	115 Move W9, [X8+304]
	116 Move W11, [X10+304]
	117 NotImplemented "Instruction CMP not yet implemented."
	118 Move X12, [X8+200]
	119 Add X11, X12, X11
	120 NotImplemented "Instruction LDUR not yet implemented."
	121 NotImplemented "Instruction CMP not yet implemented."
	122 Move X10, 0xA66000
	123 Move X10, [X10+1208]
	124 Move X10, [X10]
	125 Move W11, [X10+304]
	126 NotImplemented "Instruction CMP not yet implemented."
	127 Move X8, [X8+200]
	128 Add X8, X8, X11
	129 NotImplemented "Instruction LDUR not yet implemented."
	130 NotImplemented "Instruction CMP not yet implemented."
	131 Move X0, [X24]
	132 Add X1, X31, 4
	133 Move [X31+4], W19
	134 Call 0x1C17E04
	135 Move X8, [X21]
	136 Move X22, X0
	137 Move X0, X21
	138 Move X9, [X8+392]
	139 Move X1, [X8+400]
	140 NotImplemented "Instruction BLR not yet implemented."
	141 Move X8, 0xA89000
	142 Move X8, [X8+1272]
	143 Move X3, X0
	144 Move X1, X20
	145 Move X2, X22
	146 Move X8, [X8]
	147 Move X4, X31
	148 Move X0, X8
	149 Call String.Format, X0, X1, X2, X3
	150 Move X8, [X23]
	151 Move X22, X0
	152 Move X0, X8
	153 Call 0x1C17F10
	154 Move X1, X22
	155 Move W2, W19
	156 Move W3, W31
	157 Move X4, X21
	158 Move X5, X31
	159 Move X20, X0
	160 Call WebException..ctor, X0, X1, X2, X3, X4
	161 Move X20, X21
	162 Move X0, X20
	163 Move X20, [X31+64]
	164 Move X19, [X31+72]
	165 Move X22, [X31+48]
	166 Move X21, [X31+56]
	167 Move X24, [X31+32]
	168 Move X23, [X31+40]
	169 Move X30, [X31+16]
	170 Move X25, [X31+24]
	171 Add X31, X31, 80
	172 Return X0
	173 Call 0x1C17F20

Method: System.Threading.Tasks.Task InitReadAsync(System.Threading.CancellationToken cancellationToken)

Disassembly:
	0x036B2378 CMP W1, W8
	0x036B237C B.NE 0x36B247C
	0x036B2380 MOV X0, X20
	0x036B2384 BL 0x3EB1AD0
	0x036B2388 LDR X21, [X0]
	0x036B238C BL 0x3EB1AE0
	0x036B2390 CBZ X21, 0x36B24C4
	0x036B2394 MOV X0, X21
	0x036B2398 BL 0x1C16F18
	0x036B239C MOV X0, X20
	0x036B23A0 BL 0x3EB1AD0
	0x036B23A4 MOV X20, X0
	0x036B23A8 ADRP X0, 0xA49000
	0x036B23AC LDR X0, [X0 + 0x8A8]
	0x036B23B0 BL 0x1C16D08
	0x036B23B4 LDR X8, [X20]
	0x036B23B8 LDR X1, [X8]
	0x036B23BC BL 0x1C17270
	0x036B23C0 MOV W21, W0
	0x036B23C4 TBZ X0, 0x0, 0x36B23E4
	0x036B23C8 LDR X20, [X20]
	0x036B23CC STR X20, [X31 + 0x8]
	0x036B23D0 BL 0x3EB1AE0
	0x036B23D4 STR W31, [X31 + 0x18]
	0x036B23D8 TBZ X21, 0x0, 0x36B2424
	0x036B23DC MOV X0, X20
	0x036B23E0 BL 0x1C16F18
	0x036B23E4 ADRP X0, 0xA41000
	0x036B23E8 LDR X0, [X0 + 0x7D0]
	0x036B23EC BL 0x1C16D08
	0x036B23F0 LDR X8, [X20]
	0x036B23F4 LDR X1, [X8]
	0x036B23F8 BL 0x1C17270
	0x036B23FC TBNZ X0, 0x0, 0x36B23C8
	0x036B2400 MOVZ W0, 0x8
	0x036B2404 BL 0x3EB1AF0
	0x036B2408 LDR X8, [X20]
	0x036B240C STR X8, [X0]
	0x036B2410 ADRP X1, 0x802000
	0x036B2414 ADD X1, X1, 0xE58
	0x036B2418 MOV X2, X31
	0x036B241C BL 0x3EB1B00
	0x036B2420 B 0x36B2530
	0x036B2424 MOV X0, X20
	0x036B2428 BL 0x1C16F18
	0x036B242C B 0x36B2430
	0x036B2430 MOV X20, X0
	0x036B2434 B 0x36B2370
	0x036B2438 MOV X20, X0
	0x036B243C MOVZ W22, 0x1
	0x036B2440 B 0x36B2374
	0x036B2444 B 0x36B244C
	0x036B2448 CBNZ X21, 0x36B2454

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+112], X30
	003 Move [X31+128], X22
	004 Move [X31+136], X21
	005 Move [X31+144], X20
	006 Move [X31+152], X19
	007 Move X22, 0xD2F000
	008 Move X21, 0xA45000
	009 Move W8, [X22+2446]
	010 Move X21, [X21+640]
	011 Move X19, X1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0xA8E000
	018 Move X0, [X0+696]
	019 Call 0x1C17CF4
	020 Move X0, 0xA45000
	021 Move X0, [X0+640]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X22+2446], W8
	025 Move X0, [X21]
	026 NotImplemented "Instruction MOVI not yet implemented."
	027 Move [X31+80], V0
	028 Move [X31+88], V0
	029 Move [X31+48], V0
	030 Move [X31+56], V0
	031 Move [X31+2], V0
	032 Move [X31+64], X20
	033 Move [X31+72], X19
	034 Move X19, 0xA8E000
	035 Move W8, [X0+224]
	036 Move X19, [X19+696]
	037 Compare W8, 0
	038 JumpIfNotEqual {40}
	039 Call 0x1C17DFC
	040 Add X8, X31, 8
	041 Move X0, X31
	042 Call AsyncTaskMethodBuilder.Create
	043 NotImplemented "Instruction LDUR not yet implemented."
	044 Move X9, [X31+24]
	045 Move X2, [X19]
	046 Add X8, X31, 32
	047 Or X19, X8, 15
	048 Move TEMP, 0
	049 Not TEMP
	050 Move W10, TEMP
	051 Add X1, X31, 32
	052 Move X0, X19
	053 Move [X31+40], V0
	054 Move [X31+56], X9
	055 Move [X31+32], W10
	056 Call AsyncTaskMethodBuilder.Start, X0, X1
	057 Move X0, X19
	058 Move X1, X31
	059 Call AsyncTaskMethodBuilder.get_Task, X0
	060 Move X20, [X31+144]
	061 Move X19, [X31+152]
	062 Move X22, [X31+128]
	063 Move X21, [X31+136]
	064 Move X30, [X31+112]
	065 Add X31, X31, 160
	066 Return X0

Method: System.Boolean GetResponse(System.Net.BufferOffsetSize buffer, ref System.Int32 pos, ref System.Net.ReadState state)

Disassembly:
	0x036B7D20 LDR X20, [X20]
	0x036B7D24 BL 0x3EB1AE0
	0x036B7D28 MOVN W8, 0x1
	0x036B7D2C STR X31, [X19 + 0x40]
	0x036B7D30 STR X31, [X19 + 0x50]
	0x036B7D34 STR W8, [X19], #0x8
	0x036B7D38 ADRP X0, 0xA6B000
	0x036B7D3C LDR X0, [X0 + 0xDA0]
	0x036B7D40 BL 0x1C16D08
	0x036B7D44 LDR W8, [X0 + 0xE0]
	0x036B7D48 CBNZ W8, 0x36B7D50
	0x036B7D4C BL 0x1C16DFC
	0x036B7D50 ADRP X0, 0xA6B000
	0x036B7D54 LDR X0, [X0 + 0xE40]
	0x036B7D58 BL 0x1C16D08
	0x036B7D5C MOV X2, X0
	0x036B7D60 MOV X0, X19
	0x036B7D64 MOV X1, X20
	0x036B7D68 BL 0x2630308
	0x036B7D6C B 0x36B7B68
	0x036B7D70 MOVZ W0, 0x8
	0x036B7D74 BL 0x3EB1AF0
	0x036B7D78 LDR X8, [X20]
	0x036B7D7C STR X8, [X0]
	0x036B7D80 ADRP X1, 0x7FD000
	0x036B7D84 ADD X1, X1, 0xE58
	0x036B7D88 MOV X2, X31
	0x036B7D8C BL 0x3EB1B00
	0x036B7D90 MOV X22, X0
	0x036B7D94 BL 0x3EB1AE0
	0x036B7D98 MOV X0, X22
	0x036B7D9C BL 0x1D2C690
	0x036B7DA0 BL 0x1990590
	0x036B7DA4 STR X30, [X31 - 0x30]!
	0x036B7DA8 STP X22, X21, [X31 + 0x10]
	0x036B7DAC STP X20, X19, [X31 + 0x20]
	0x036B7DB0 ADRP X22, 0xD29000
	0x036B7DB4 ADRP X21, 0xA6B000
	0x036B7DB8 LDRB W8, [X22 + 0x991]
	0x036B7DBC LDR X21, [X21 + 0xDA0]
	0x036B7DC0 MOV X19, X1
	0x036B7DC4 MOV X20, X0
	0x036B7DC8 TBNZ X8, 0x0, 0x36B7DEC
	0x036B7DCC ADRP X0, 0xA6B000
	0x036B7DD0 LDR X0, [X0 + 0xE48]
	0x036B7DD4 BL 0x1C16CF4
	0x036B7DD8 ADRP X0, 0xA6B000
	0x036B7DDC LDR X0, [X0 + 0xDA0]
	0x036B7DE0 BL 0x1C16CF4
	0x036B7DE4 MOVZ W8, 0x1
	0x036B7DE8 STRB W8, [X22 + 0x991]
	0x036B7DEC LDR X0, [X21]
	0x036B7DF0 ADRP X21, 0xA6B000
	0x036B7DF4 LDR W8, [X0 + 0xE0]
	0x036B7DF8 LDR X21, [X21 + 0xE48]
	0x036B7DFC CBNZ W8, 0x36B7E04
	0x036B7E00 BL 0x1C16DFC
	0x036B7E04 LDR X2, [X21]
	0x036B7E08 ADD X0, X20, 0x8
	0x036B7E0C MOV X1, X19
	0x036B7E10 LDP X20, X19, [X31 + 0x20]
	0x036B7E14 LDP X22, X21, [X31 + 0x10]
	0x036B7E18 LDR X30, [X31], #0x30
	0x036B7E1C B 0x2630068
	0x036B7E20 STR X30, [X31 - 0x10]!
	0x036B7E24 LDR X8, [X0 + 0x10]
	0x036B7E28 CBZ X8, 0x36B7E58
	0x036B7E2C LDR X8, [X8 + 0x58]
	0x036B7E30 CBZ X8, 0x36B7E58
	0x036B7E34 LDR X9, [X8]
	0x036B7E38 MOV X4, X1
	0x036B7E3C LDP W2, W3, [X0 + 0x20]
	0x036B7E40 LDR X1, [X0 + 0x18]
	0x036B7E44 LDR X6, [X9 + 0x2D8]
	0x036B7E48 LDR X5, [X9 + 0x2E0]
	0x036B7E4C MOV X0, X8
	0x036B7E50 LDR X30, [X31], #0x10
	0x036B7E54 BR X6
	0x036B7E58 BL 0x1C16F20
	0x036B7E5C STP X30, X19, [X31 - 0x10]!
	0x036B7E60 LDR X8, [X0 + 0x10]
	0x036B7E64 CBZ X8, 0x36B7E94
	0x036B7E68 MOV X19, X0
	0x036B7E6C LDR X0, [X8 + 0x50]
	0x036B7E70 CBZ X0, 0x36B7E94
	0x036B7E74 BL 0x36AFF38
	0x036B7E78 LDR X8, [X19 + 0x10]
	0x036B7E7C CBZ X8, 0x36B7E94
	0x036B7E80 LDR X0, [X8 + 0x58]
	0x036B7E84 CBZ X0, 0x36B7E94
	0x036B7E88 MOV X1, X31
	0x036B7E8C LDP X30, X19, [X31], #0x10
	0x036B7E90 B 0x32F02B8
	0x036B7E94 BL 0x1C16F20
	0x036B7E98 STR X30, [X31 - 0x10]!
	0x036B7E9C LDR X8, [X0 + 0x10]
	0x036B7EA0 CBZ X8, 0x36B7EB4
	0x036B7EA4 LDR X0, [X8 + 0x50]
	0x036B7EA8 CBZ X0, 0x36B7EB4
	0x036B7EAC LDR X30, [X31], #0x10
	0x036B7EB0 B 0x36ACC30
	0x036B7EB4 BL 0x1C16F20
	0x036B7EB8 SUB X31, X31, 0x60
	0x036B7EBC STP X30, X23, [X31 + 0x30]
	0x036B7EC0 STP X22, X21, [X31 + 0x40]
	0x036B7EC4 STP X20, X19, [X31 + 0x50]
	0x036B7EC8 ADRP X20, 0xD29000
	0x036B7ECC LDRB W8, [X20 + 0x992]
	0x036B7ED0 MOV X19, X0
	0x036B7ED4 TBNZ X8, 0x0, 0x36B7F70
	0x036B7ED8 ADRP X0, 0xA88000
	0x036B7EDC LDR X0, [X0 + 0x560]
	0x036B7EE0 BL 0x1C16CF4
	0x036B7EE4 ADRP X0, 0xA88000
	0x036B7EE8 LDR X0, [X0 + 0x568]
	0x036B7EEC BL 0x1C16CF4
	0x036B7EF0 ADRP X0, 0xA88000
	0x036B7EF4 LDR X0, [X0 + 0x4C8]
	0x036B7EF8 BL 0x1C16CF4
	0x036B7EFC ADRP X0, 0xA3C000
	0x036B7F00 LDR X0, [X0 + 0x618]
	0x036B7F04 BL 0x1C16CF4
	0x036B7F08 ADRP X0, 0xA44000
	0x036B7F0C LDR X0, [X0 + 0x7D8]
	0x036B7F10 BL 0x1C16CF4
	0x036B7F14 ADRP X0, 0xA70000
	0x036B7F18 LDR X0, [X0 + 0x2B8]
	0x036B7F1C BL 0x1C16CF4
	0x036B7F20 ADRP X0, 0xA70000
	0x036B7F24 LDR X0, [X0 + 0x2C0]
	0x036B7F28 BL 0x1C16CF4
	0x036B7F2C ADRP X0, 0xA70000
	0x036B7F30 LDR X0, [X0 + 0x2C8]
	0x036B7F34 BL 0x1C16CF4
	0x036B7F38 ADRP X0, 0xA64000
	0x036B7F3C LDR X0, [X0 + 0xB88]
	0x036B7F40 BL 0x1C16CF4
	0x036B7F44 ADRP X0, 0xA3C000
	0x036B7F48 LDR X0, [X0 + 0xE00]
	0x036B7F4C BL 0x1C16CF4
	0x036B7F50 ADRP X0, 0xA44000
	0x036B7F54 LDR X0, [X0 + 0x558]
	0x036B7F58 BL 0x1C16CF4
	0x036B7F5C ADRP X0, 0xA70000
	0x036B7F60 LDR X0, [X0 + 0x2D0]
	0x036B7F64 BL 0x1C16CF4
	0x036B7F68 MOVZ W8, 0x1
	0x036B7F6C STRB W8, [X20 + 0x992]
	0x036B7F70 STP X31, X31, [X31 + 0x20]
	0x036B7F74 STR W31, [X31 + 0x18]
	0x036B7F78 LDR W22, [X19]
	0x036B7F7C LDR X20, [X19 + 0x28]
	0x036B7F80 CBZ W22, 0x36B8008
	0x036B7F84 ADRP X21, 0xA64000
	0x036B7F88 LDR X21, [X21 + 0xB88]
	0x036B7F8C LDR X0, [X21]
	0x036B7F90 LDR W8, [X0 + 0xE0]
	0x036B7F94 CBNZ W8, 0x36B7F9C
	0x036B7F98 BL 0x1C16DFC
	0x036B7F9C ADRP X23, 0xD29000
	0x036B7FA0 LDRB W8, [X23 + 0xA16]
	0x036B7FA4 CBNZ W8, 0x36B7FBC
	0x036B7FA8 ADRP X0, 0xA64000
	0x036B7FAC LDR X0, [X0 + 0xB88]
	0x036B7FB0 BL 0x1C16CF4
	0x036B7FB4 MOVZ W8, 0x1
	0x036B7FB8 STRB W8, [X23 + 0xA16]
	0x036B7FBC LDR X0, [X21]
	0x036B7FC0 LDR W8, [X0 + 0xE0]
	0x036B7FC4 CBNZ W8, 0x36B7FD0
	0x036B7FC8 BL 0x1C16DFC
	0x036B7FCC LDR X0, [X21]
	0x036B7FD0 LDR X8, [X0 + 0xB8]
	0x036B7FD4 ADRP X9, 0xA44000
	0x036B7FD8 LDRSW X8, [X8 + 0x4]
	0x036B7FDC LDR X9, [X9 + 0x558]
	0x036B7FE0 UBFM X8, X8, 0x30, 0x2F
	0x036B7FE4 STR X8, [X19 + 0x30]
	0x036B7FE8 LDR X0, [X9]
	0x036B7FEC BL 0x1C16F10
	0x036B7FF0 MOV X21, X0
	0x036B7FF4 MOV X1, X31
	0x036B7FF8 BL 0x32E23B4
	0x036B7FFC STR X21, [X19 + 0x38]
	0x036B8000 CBNZ X21, 0x36B81E0
	0x036B8004 BL 0x1C16F20
	0x036B8008 LDUR V0, [X19 + 0x48]
	0x036B800C MOVN W22, 0x0
	0x036B8010 STR V0, [X31 + 0x2]
	0x036B8014 STP X31, X31, [X19 + 0x48]
	0x036B8018 STR W22, [X19]
	0x036B801C B 0x36B8194
	0x036B8020 B 0x36B8030
	0x036B8024 B 0x36B8030
	0x036B8028 B 0x36B8030
	0x036B802C B 0x36B83C4
	0x036B8030 MOV X20, X0
	0x036B8034 STR X1, [X31 + 0x8]
	0x036B8038 LDR X8, [X31 + 0x8]
	0x036B803C CMP W8, 0x1
	0x036B8040 B.NE 0x36B80B0
	0x036B8044 MOV X0, X20
	0x036B8048 BL 0x3EB1AD0
	0x036B804C MOV X20, X0
	0x036B8050 ADRP X0, 0xA3B000
	0x036B8054 LDR X0, [X0 + 0x7D0]
	0x036B8058 BL 0x1C16D08
	0x036B805C LDR X8, [X20]
	0x036B8060 LDR X1, [X8]
	0x036B8064 BL 0x1C17270
	0x036B8068 TBZ X0, 0x0, 0x36B8088
	0x036B806C LDR X8, [X20]
	0x036B8070 MOVZ W9, 0x1
	0x036B8074 STR W9, [X31 + 0x18]
	0x036B8078 STR X8, [X31 + 0x10]
	0x036B807C BL 0x3EB1AE0
	0x036B8080 MOV X8, X31
	0x036B8084 B 0x36B80B8
	0x036B8088 MOVZ W0, 0x8
	0x036B808C BL 0x3EB1AF0
	0x036B8090 LDR X8, [X20]
	0x036B8094 STR X8, [X0]
	0x036B8098 ADRP X1, 0x7FC000
	0x036B809C ADD X1, X1, 0xE58
	0x036B80A0 MOV X2, X31
	0x036B80A4 BL 0x3EB1B00
	0x036B80A8 MOV X20, X0
	0x036B80AC BL 0x3EB1AE0
	0x036B80B0 MOV X0, X20
	0x036B80B4 BL 0x1D2C690
	0x036B80B8 ADD X9, X31, 0x10
	0x036B80BC LDR X20, [X9, X8, LSL #3]
	0x036B80C0 MOVN W8, 0x1
	0x036B80C4 STR W8, [X19], #0x8
	0x036B80C8 ADRP X0, 0xA87000
	0x036B80CC LDR X0, [X0 + 0x4C8]
	0x036B80D0 BL 0x1C16D08
	0x036B80D4 LDR W8, [X0 + 0xE0]
	0x036B80D8 CBNZ W8, 0x36B80E0
	0x036B80DC BL 0x1C16DFC
	0x036B80E0 ADRP X0, 0xA87000
	0x036B80E4 LDR X0, [X0 + 0x570]
	0x036B80E8 BL 0x1C16D08
	0x036B80EC MOV X2, X0
	0x036B80F0 MOV X0, X19
	0x036B80F4 MOV X1, X20
	0x036B80F8 BL 0x26324C8
	0x036B80FC B 0x36B8318
	0x036B8100 ADRP X8, 0xA43000
	0x036B8104 LDR X8, [X8 + 0x7D8]
	0x036B8108 LDR X0, [X8]
	0x036B810C LDR W8, [X0 + 0xE0]
	0x036B8110 CBNZ W8, 0x36B8118
	0x036B8114 BL 0x1C16DFC
	0x036B8118 ADD X0, X19, 0x20
	0x036B811C MOV X1, X31
	0x036B8120 BL 0x33DDC30
	0x036B8124 ADRP X8, 0xA3B000
	0x036B8128 LDR X8, [X8 + 0x618]
	0x036B812C LDR X0, [X8]
	0x036B8130 MOVZ W1, 0x4000
	0x036B8134 BL 0x1C16D6C
	0x036B8138 MOV X1, X0
	0x036B813C STR X1, [X19 + 0x40]
	0x036B8140 CBZ X1, 0x36B8374
	0x036B8144 CBZ X20, 0x36B8368
	0x036B8148 LDR X4, [X19 + 0x20]
	0x036B814C LDR W3, [X1 + 0x18]
	0x036B8150 MOV X0, X20
	0x036B8154 MOV W2, W31
	0x036B8158 BL 0x36B5E98
	0x036B815C CBZ X0, 0x36B836C
	0x036B8160 ADRP X8, 0xA6F000
	0x036B8164 LDR X8, [X8 + 0x2D0]
	0x036B8168 LDR X2, [X8]
	0x036B816C MOV W1, W31
	0x036B8170 BL 0x269D3A8
	0x036B8174 ADRP X8, 0xA6F000
	0x036B8178 LDR X8, [X8 + 0x2C8]
	0x036B817C STP X0, X1, [X31 + 0x20]
	0x036B8180 LDR X8, [X8]
	0x036B8184 ADD X0, X31, 0x20
	0x036B8188 MOV X1, X8
	0x036B818C BL 0x2998978
	0x036B8190 TBZ X0, 0x0, 0x36B8274
	0x036B8194 ADRP X8, 0xA6F000
	0x036B8198 LDR X8, [X8 + 0x2C0]
	0x036B819C LDR X1, [X8]
	0x036B81A0 ADD X0, X31, 0x20
	0x036B81A4 BL 0x29989C4
	0x036B81A8 MOV W3, W0
	0x036B81AC TBNZ X0, 0x1F, 0x36B8334
	0x036B81B0 CBZ W3, 0x36B81FC
	0x036B81B4 LDR X0, [X19 + 0x38]
	0x036B81B8 CBZ X0, 0x36B8370
	0x036B81BC LDR X8, [X0]
	0x036B81C0 LDR X1, [X19 + 0x40]
	0x036B81C4 LDR X9, [X8 + 0x388]
	0x036B81C8 LDR X4, [X8 + 0x390]
	0x036B81CC MOV W2, W31
	0x036B81D0 BLR X9
	0x036B81D4 LDR X21, [X19 + 0x38]
	0x036B81D8 STR X31, [X19 + 0x40]
	0x036B81DC CBZ X21, 0x36B8004
	0x036B81E0 LDR X8, [X21]
	0x036B81E4 LDP X9, X1, [X8 + 0x1F8]
	0x036B81E8 MOV X0, X21
	0x036B81EC BLR X9
	0x036B81F0 LDR X8, [X19 + 0x30]
	0x036B81F4 CMP X0, X8
	0x036B81F8 B.LT 0x36B8100
	0x036B81FC LDR X0, [X19 + 0x38]
	0x036B8200 CBZ X0, 0x36B8380
	0x036B8204 LDR X8, [X0]
	0x036B8208 LDR X1, [X8 + 0x400]
	0x036B820C LDR X9, [X8 + 0x3F8]
	0x036B8210 BLR X9
	0x036B8214 MOV X20, X0
	0x036B8218 MOV X21, X31
	0x036B821C MOVZ W23, 0xC
	0x036B8220 TBZ X22, 0x1F, 0x36B82D0
	0x036B8224 LDR X22, [X19 + 0x38]
	0x036B8228 CBZ X22, 0x36B82D0
	0x036B822C ADRP X10, 0xA3B000
	0x036B8230 LDR X8, [X22]
	0x036B8234 LDR X10, [X10 + 0xE00]
	0x036B8238 LDRH W9, [X8 + 0x12E]
	0x036B823C LDR X1, [X10]
	0x036B8240 CBZ X9, 0x36B8264
	0x036B8244 LDR X10, [X8 + 0xB0]
	0x036B8248 ADD X10, X10, 0x8
	0x036B824C LDUR X11, [X10 - 0x8]
	0x036B8250 CMP X11, X1
	0x036B8254 B.EQ 0x36B82B8
	0x036B8258 SUBS X9, X9, 0x1
	0x036B825C ADD X10, X10, 0x10
	0x036B8260 B.NE 0x36B824C
	0x036B8264 MOV X0, X22
	0x036B8268 MOV W2, W31
	0x036B826C BL 0x1C5C788
	0x036B8270 B 0x36B82C4
	0x036B8274 STR W31, [X19]
	0x036B8278 LDR V0, [X31 + 0x2]
	0x036B827C ADRP X8, 0xA87000
	0x036B8280 STUR V0, [X19 + 0x48]
	0x036B8284 LDR X8, [X8 + 0x4C8]
	0x036B8288 LDR X0, [X8]
	0x036B828C LDR W8, [X0 + 0xE0]
	0x036B8290 CBNZ W8, 0x36B8298
	0x036B8294 BL 0x1C16DFC
	0x036B8298 ADRP X8, 0xA87000
	0x036B829C LDR X8, [X8 + 0x560]
	0x036B82A0 ADD X0, X19, 0x8
	0x036B82A4 LDR X3, [X8]
	0x036B82A8 ADD X1, X31, 0x20
	0x036B82AC MOV X2, X19
	0x036B82B0 BL 0x1FAEC24
	0x036B82B4 B 0x36B8318
	0x036B82B8 LDRSW X9, [X10]
	0x036B82BC ADD X8, X8, X9, 0x4, LSL
	0x036B82C0 ADD X0, X8, 0x138
	0x036B82C4 LDP X8, X1, [X0]
	0x036B82C8 MOV X0, X22
	0x036B82CC BLR X8
	0x036B82D0 CBNZ X21, 0x36B8378
	0x036B82D4 CBZ W23, 0x36B832C
	0x036B82D8 CMP W23, 0xC
	0x036B82DC B.NE 0x36B8318
	0x036B82E0 MOVN W8, 0x1
	0x036B82E4 STR W8, [X19], #0x8
	0x036B82E8 ADRP X8, 0xA87000
	0x036B82EC LDR X8, [X8 + 0x4C8]
	0x036B82F0 LDR X0, [X8]
	0x036B82F4 LDR W8, [X0 + 0xE0]
	0x036B82F8 CBNZ W8, 0x36B8300
	0x036B82FC BL 0x1C16DFC
	0x036B8300 ADRP X8, 0xA87000
	0x036B8304 LDR X8, [X8 + 0x568]
	0x036B8308 MOV X0, X19
	0x036B830C MOV X1, X20
	0x036B8310 LDR X2, [X8]
	0x036B8314 BL 0x26322B0
	0x036B8318 LDP X20, X19, [X31 + 0x50]
	0x036B831C LDP X22, X21, [X31 + 0x40]
	0x036B8320 LDP X30, X23, [X31 + 0x30]
	0x036B8324 ADD X31, X31, 0x60
	0x036B8328 RET
	0x036B832C MOVN X8, 0x0
	0x036B8330 B 0x36B80B8
	0x036B8334 ADRP X0, 0xA69000
	0x036B8338 LDR X0, [X0 + 0x7A8]
	0x036B833C BL 0x1C16D08
	0x036B8340 BL 0x1C16F10
	0x036B8344 MOV X20, X0
	0x036B8348 MOV X1, X31
	0x036B834C BL 0x32E230C
	0x036B8350 ADRP X0, 0xA87000
	0x036B8354 LDR X0, [X0 + 0x578]
	0x036B8358 BL 0x1C16D08
	0x036B835C MOV X1, X0
	0x036B8360 MOV X0, X20
	0x036B8364 BL 0x1C16DEC
	0x036B8368 BL 0x1C16F20
	0x036B836C BL 0x1C16F20
	0x036B8370 BL 0x1C16F20
	0x036B8374 BL 0x1C16F20
	0x036B8378 MOV X0, X21
	0x036B837C BL 0x1C16F18
	0x036B8380 BL 0x1C16F20
	0x036B8384 MOV X20, X0
	0x036B8388 MOV W22, W31
	0x036B838C B 0x36B83C8
	0x036B8390 B 0x36B83C4
	0x036B8394 B 0x36B83C4
	0x036B8398 B 0x36B8030
	0x036B839C B 0x36B83C4
	0x036B83A0 B 0x36B83C4
	0x036B83A4 B 0x36B83C4
	0x036B83A8 B 0x36B83C4
	0x036B83AC B 0x36B83C4
	0x036B83B0 B 0x36B83C4
	0x036B83B4 B 0x36B83C4
	0x036B83B8 B 0x36B83C4
	0x036B83BC B 0x36B83C4
	0x036B83C0 B 0x36B83C4
	0x036B83C4 MOV X20, X0
	0x036B83C8 CMP W1, 0x1
	0x036B83CC B.NE 0x36B83F0
	0x036B83D0 MOV X0, X20
	0x036B83D4 BL 0x3EB1AD0
	0x036B83D8 LDR X21, [X0]
	0x036B83DC BL 0x3EB1AE0
	0x036B83E0 MOV W23, W31
	0x036B83E4 MOV X20, X31
	0x036B83E8 TBZ X22, 0x1F, 0x36B82D0
	0x036B83EC B 0x36B8224
	0x036B83F0 STR X1, [X31 + 0x8]
	0x036B83F4 MOV X21, X31
	0x036B83F8 TBZ X22, 0x1F, 0x36B8464
	0x036B83FC LDR X22, [X19 + 0x38]
	0x036B8400 CBZ X22, 0x36B8464
	0x036B8404 ADRP X10, 0xA3B000
	0x036B8408 LDR X8, [X22]
	0x036B840C LDR X10, [X10 + 0xE00]
	0x036B8410 LDRH W9, [X8 + 0x12E]
	0x036B8414 LDR X1, [X10]
	0x036B8418 CBZ X9, 0x36B843C
	0x036B841C LDR X10, [X8 + 0xB0]
	0x036B8420 ADD X10, X10, 0x8
	0x036B8424 LDUR X11, [X10 - 0x8]
	0x036B8428 CMP X11, X1
	0x036B842C B.EQ 0x36B844C
	0x036B8430 SUBS X9, X9, 0x1
	0x036B8434 ADD X10, X10, 0x10
	0x036B8438 B.NE 0x36B8424
	0x036B843C MOV X0, X22
	0x036B8440 MOV W2, W31
	0x036B8444 BL 0x1C5C788
	0x036B8448 B 0x36B8458
	0x036B844C LDRSW X9, [X10]

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+64], X29
	003 Move [X31+72], X30
	004 Move [X31+80], X28
	005 Move [X31+88], X27
	006 Move [X31+96], X26
	007 Move [X31+104], X25
	008 Move [X31+112], X24
	009 Move [X31+120], X23
	010 Move [X31+128], X22
	011 Move [X31+136], X21
	012 Move [X31+144], X20
	013 Move [X31+152], X19
	014 Move X23, 0xD2A000
	015 Move W8, [X23+2447]
	016 Move X20, X3
	017 Move X21, X2
	018 Move X22, X1
	019 Move X19, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {71}
	024 Move X0, 0xA64000
	025 Move X0, [X0+4040]
	026 Call 0x1C17CF4
	027 Move X0, 0xA64000
	028 Move X0, [X0+4048]
	029 Call 0x1C17CF4
	030 Move X0, 0xA64000
	031 Move X0, [X0+4056]
	032 Call 0x1C17CF4
	033 Move X0, 0xA84000
	034 Move X0, [X0+360]
	035 Call 0x1C17CF4
	036 Move X0, 0xA3E000
	037 Move X0, [X0+440]
	038 Call 0x1C17CF4
	039 Move X0, 0xA64000
	040 Move X0, [X0+4064]
	041 Call 0x1C17CF4
	042 Move X0, 0xA3E000
	043 Move X0, [X0+448]
	044 Call 0x1C17CF4
	045 Move X0, 0xA3E000
	046 Move X0, [X0+456]
	047 Call 0x1C17CF4
	048 Move X0, 0xA65000
	049 Move X0, [X0+2904]
	050 Call 0x1C17CF4
	051 Move X0, 0xA89000
	052 Move X0, [X0+1280]
	053 Call 0x1C17CF4
	054 Move X0, 0xA3E000
	055 Move X0, [X0+464]
	056 Call 0x1C17CF4
	057 Move X0, 0xA3F000
	058 Move X0, [X0+632]
	059 Call 0x1C17CF4
	060 Move X0, 0xA87000
	061 Move X0, [X0+3576]
	062 Call 0x1C17CF4
	063 Move X0, 0xA89000
	064 Move X0, [X0+448]
	065 Call 0x1C17CF4
	066 Move X0, 0xA3D000
	067 Move X0, [X0+3544]
	068 Call 0x1C17CF4
	069 Move W8, 1
	070 Move [X23+2447], W8
	071 Move X24, 0xA87000
	072 Move X25, 0xA64000
	073 Move X24, [X24+3576]
	074 Move X25, [X25+4048]
	075 Move X26, X31
	076 Move W28, W31
	077 Move [X31+32], X31
	078 Move [X31+40], X31
	079 Move [X31+48], X31
	080 Move [X31+56], X31
	081 Move W8, [X20]
	082 Compare W8, 0
	083 JumpIfEqual {85}
	084 NotImplemented "Instruction CMP not yet implemented."
	085 Compare X22, 0
	086 JumpIfEqual {429}
	087 Move X0, [X22+16]
	088 Move W2, [X22+24]
	089 Add X3, X31, 56
	090 Move X1, X21
	091 Call WebConnection.ReadLine, X0, X1, X2, X3
	092 Move TEMP, X0
	093 And TEMP, TEMP, 1
	094 Compare TEMP, 1
	095 JumpIfNotEqual {411}
	096 Move X0, [X31+56]
	097 Compare X0, 0
	098 JumpIfEqual {131}
	099 Move W8, 1
	100 Move W1, 32
	101 Move W2, W31
	102 Move X3, X31
	103 Move [X20], W8
	104 Call String.Split, X0, X1, X2
	105 Compare X0, 0
	106 JumpIfEqual {429}
	107 Move W8, [X0+24]
	108 Move X27, X0
	109 NotImplemented "Instruction CMP not yet implemented."
	110 Move X8, 0xA89000
	111 Move X0, [X27+32]
	112 Move X8, [X8+448]
	113 Move W2, 1
	114 Move X3, X31
	115 Move X1, [X8]
	116 Call String.Compare, X0, X1, X2
	117 Move X29, 0xA84000
	118 Move X29, [X29+360]
	119 Move W23, W0
	120 Move X8, [X29]
	121 Move W9, [X8+224]
	122 Compare W9, 0
	123 JumpIfNotEqual {127}
	124 Move X0, X8
	125 Call 0x1C17DFC
	126 Move X8, [X29]
	127 Move X8, [X8+184]
	128 Compare W23, 0
	129 JumpIfEqual {132}
	130 Move X8, [X8+8]
	131 Move W8, 1
	132 Move X8, [X8+16]
	133 Move X9, [X19+72]
	134 Move [X19+160], X8
	135 Compare X9, 0
	136 JumpIfEqual {429}
	137 Move X9, [X9+72]
	138 Compare X9, 0
	139 JumpIfEqual {429}
	140 Move [X9+32], X8
	141 Move W8, [X27+24]
	142 NotImplemented "Instruction CMP not yet implemented."
	143 Move X0, [X27+40]
	144 Move X1, X31
	145 Call UInt32.Parse, X0
	146 Move [X19+144], W0
	147 Move W8, [X27+24]
	148 NotImplemented "Instruction CMP not yet implemented."
	149 Move X8, 0xA3F000
	150 Move X8, [X8+632]
	151 Move X8, [X8]
	152 Move X8, [X8+184]
	153 Move X0, [X8]
	154 Move X9, 0xA3D000
	155 Move X9, [X9+3544]
	156 Subtract W3, W8, 2
	157 Move W2, 2
	158 Move X1, X27
	159 Move X0, [X9]
	160 Move X4, X31
	161 Call String.Join, X0, X1, X2, X3
	162 Move [X19+152], X0
	163 Move W8, [X21]
	164 Move W9, [X22+24]
	165 NotImplemented "Instruction CMP not yet implemented."
	166 Move W8, [X20]
	167 NotImplemented "Instruction CMP not yet implemented."
	168 Move W8, 2
	169 Move [X20], W8
	170 Move X0, [X24]
	171 Call 0x1C17F10
	172 Move X1, X31
	173 Move X23, X0
	174 Call WebHeaderCollection..ctor, X0
	175 Move [X19+136], X23
	176 Move X8, 0xA3E000
	177 Move X8, [X8+464]
	178 Move X0, [X8]
	179 Call 0x1C17F10
	180 Move X8, 0xA3E000
	181 Move X8, [X8+448]
	182 Move X27, X0
	183 Move X1, [X8]
	184 Call List`1<Object>..ctor, X0
	185 Compare X22, 0
	186 JumpIfEqual {429}
	187 Move X0, [X22+16]
	188 Move W2, [X22+24]
	189 Add X3, X31, 56
	190 Move X1, X21
	191 Call WebConnection.ReadLine, X0, X1, X2, X3
	192 Move TEMP, X0
	193 And TEMP, TEMP, 1
	194 Compare TEMP, 1
	195 JumpIfNotEqual {411}
	196 Move X28, [X31+56]
	197 Compare X28, 0
	198 JumpIfEqual {258}
	199 Move W8, [X28+16]
	200 NotImplemented "Instruction CMP not yet implemented."
	201 Move X0, X28
	202 Move W1, W31
	203 Move X2, X31
	204 Call String.get_Chars, X0, X1
	205 And W8, W0, 0xFFFF
	206 NotImplemented "Instruction CMP not yet implemented."
	207 Move X0, X28
	208 Move W1, W31
	209 Move X2, X31
	210 Call String.get_Chars, X0, X1
	211 And W8, W0, 0xFFFF
	212 NotImplemented "Instruction CMP not yet implemented."
	213 Compare X27, 0
	214 JumpIfEqual {429}
	215 Move W8, [X27+24]
	216 Subtract W23, W8, 1
	217 Move X8, 0xA64000
	218 Move X8, [X8+2904]
	219 Move X0, X27
	220 Move W1, W23
	221 Move X2, [X8]
	222 Call List`1<Object>.get_Item, X0, X1
	223 Move X1, X28
	224 Move X2, X31
	225 Call String.Concat, X0, X1
	226 Move X8, 0xA88000
	227 Move X8, [X8+1280]
	228 Move X2, X0
	229 Move X0, X27
	230 Move W1, W23
	231 Move X3, [X8]
	232 Call List`1<Object>.set_Item, X0, X1, X2
	233 Compare X27, 0
	234 JumpIfEqual {429}
	235 Move X9, 0xA3D000
	236 Move W10, [X27+28]
	237 Move X8, [X27+16]
	238 Move X9, [X9+440]
	239 Add W10, W10, 1
	240 Move X9, [X9]
	241 Move [X27+28], W10
	242 Compare X8, 0
	243 JumpIfEqual {429}
	244 NotImplemented "Instruction LDRSW not yet implemented."
	245 Move W11, [X8+24]
	246 NotImplemented "Instruction CMP not yet implemented."
	247 Add W9, W10, 1
	248 Add X8, X8, X10
	249 Move [X27+24], W9
	250 Move [X8+32], X28
	251 Move X8, [X9+32]
	252 Move X0, X27
	253 Move X1, X28
	254 Move X8, [X8+192]
	255 Move X2, [X8+112]
	256 Call List`1<Object>.AddWithResize, X0, X1
	257 Move W8, W31
	258 Compare X27, 0
	259 JumpIfEqual {429}
	260 Move X8, 0xA63000
	261 Move X8, [X8+4064]
	262 Move X0, X27
	263 Move X1, [X8]
	264 Add X8, X31, 8
	265 Call List`1<Object>.GetEnumerator, X0
	266 NotImplemented "Instruction LDUR not yet implemented."
	267 Move X8, [X31+24]
	268 Move [X31+2], V0
	269 Move [X31+48], X8
	270 Move X1, [X25]
	271 Add X0, X31, 32
	272 Call Enumerator<Object>.MoveNext, X0
	273 Move TEMP, X0
	274 And TEMP, TEMP, 1
	275 Compare TEMP, 1
	276 JumpIfNotEqual {332}
	277 Move X27, [X31+48]
	278 Compare X27, 0
	279 JumpIfEqual {373}
	280 Move W1, 58
	281 Move X0, X27
	282 Move X2, X31
	283 Call String.IndexOf, X0, X1
	284 Add W31, W0, 1
	285 Move W29, W0
	286 NotImplemented "Instruction CSEL not yet implemented."
	287 Compare X23, 0
	288 JumpIfEqual {371}
	289 Move X0, X23
	290 Move W1, W31
	291 Move W2, W29
	292 Move X3, X31
	293 Call String.Substring, X0, X1, X2
	294 Move X28, X0
	295 Add W1, W29, 1
	296 Move X0, X23
	297 Move X2, X31
	298 Call String.Substring, X0, X1
	299 Compare X0, 0
	300 JumpIfEqual {372}
	301 Move X1, X31
	302 Call String.Trim, X0
	303 Move X29, X0
	304 Move X0, [X24]
	305 Move W8, [X0+224]
	306 Compare W8, 0
	307 JumpIfNotEqual {309}
	308 Call 0x1C17DFC
	309 Move X0, X28
	310 Move X1, X31
	311 Call WebHeaderCollection.AllowMultiValues, X0
	312 Move W8, W0
	313 Move X0, [X19+136]
	314 Move TEMP, X8
	315 And TEMP, TEMP, 1
	316 Compare TEMP, 1
	317 JumpIfNotEqual {325}
	318 Compare X0, 0
	319 JumpIfEqual {398}
	320 Move X1, X28
	321 Move X2, X29
	322 Move X3, X31
	323 Call WebHeaderCollection.AddInternal, X0, X1, X2
	324 Move X26, X27
	325 Compare X0, 0
	326 JumpIfEqual {397}
	327 Move X1, X28
	328 Move X2, X29
	329 Move X3, X31
	330 Call WebHeaderCollection.SetInternal, X0, X1, X2
	331 Move X26, X27
	332 Move X8, 0xA63000
	333 Move X8, [X8+4040]
	334 Add X0, X31, 32
	335 Move X1, [X8]
	336 Call Enumerator<Object>.Dispose, X0
	337 Move W8, [X19+144]
	338 NotImplemented "Instruction CMP not yet implemented."
	339 Move X8, [X19+72]
	340 Compare X8, 0
	341 JumpIfEqual {429}
	342 Move X8, [X8+72]
	343 Compare X8, 0
	344 JumpIfEqual {429}
	345 Move W0, 1
	346 Move [X8+49], W0
	347 Move W8, [X21]
	348 Move W9, [X22+24]
	349 NotImplemented "Instruction CMP not yet implemented."
	350 Move X0, [X19+64]
	351 Compare X0, 0
	352 JumpIfEqual {429}
	353 Move W8, [X0+268]
	354 Compare W8, 0
	355 JumpIfEqual {364}
	356 Move X2, [X19+136]
	357 Move W1, 100
	358 Move X3, X31
	359 Call HttpWebRequest.DoContinueDelegate, X0, X1, X2
	360 Move X8, [X19+64]
	361 Compare X8, 0
	362 JumpIfEqual {429}
	363 Move [X8+268], W31
	364 Move W8, W31
	365 Move W28, 1
	366 Move [X20], W31
	367 And W9, W28, 1
	368 Or W8, W8, W9
	369 Compare W8, 0
	370 JumpIfNotEqual {81}
	371 Call 0x1C17F20
	372 Call 0x1C17F20
	373 Call 0x1C17F20
	374 Move X0, 0xA44000
	375 Move X0, [X0+1400]
	376 Call 0x1C17D08
	377 Call 0x1C17F10
	378 Move X27, X0
	379 Move X0, 0xA88000
	380 Move X0, [X0+1288]
	381 Call 0x1C17D08
	382 Move X23, X0
	383 Move X0, 0xA86000
	384 Move X0, [X0+4008]
	385 Call 0x1C17D08
	386 Move X2, X0
	387 Move X0, X27
	388 Move X1, X23
	389 Move X3, X31
	390 Call ArgumentException..ctor, X0, X1, X2
	391 Move X0, 0xA88000
	392 Move X0, [X0+1296]
	393 Call 0x1C17D08
	394 Move X1, X0
	395 Move X0, X27
	396 Call 0x1C17DEC
	397 Call 0x1C17F20
	398 Call 0x1C17F20
	399 Move X26, X27
	400 NotImplemented "Instruction CMP not yet implemented."
	401 Call 0x3EB2AD0
	402 Move X27, [X0]
	403 Call 0x3EB2AE0
	404 Move X8, 0xA63000
	405 Move X8, [X8+4040]
	406 Add X0, X31, 32
	407 Move X1, [X8]
	408 Call Enumerator<Object>.Dispose, X0
	409 Compare X27, 0
	410 JumpIfEqual {337}
	411 Move W0, W31
	412 Move X20, [X31+144]
	413 Move X19, [X31+152]
	414 Move X22, [X31+128]
	415 Move X21, [X31+136]
	416 Move X24, [X31+112]
	417 Move X23, [X31+120]
	418 Move X26, [X31+96]
	419 Move X25, [X31+104]
	420 Move X28, [X31+80]
	421 Move X27, [X31+88]
	422 Move X29, [X31+64]
	423 Move X30, [X31+72]
	424 Add X31, X31, 160
	425 Return X0
	426 Move W8, 3
	427 Move [X20], W8
	428 Move W0, 1
	429 Call 0x1C17F20
	430 Move X0, 0xA88000
	431 Move X0, [X0+1304]
	432 Call 0x1C17D08
	433 Move X3, X0
	434 Move W1, 11
	435 Move X0, 0xA88000
	436 Move X0, [X0+1304]
	437 Call 0x1C17D08
	438 Move X3, X0
	439 Move W1, 6
	440 Move X0, X19
	441 Move X2, X31
	442 Call WebResponseStream.GetReadException, X0, X1, X2, X3
	443 Move X19, X0
	444 Move X0, 0xA88000
	445 Move X0, [X0+1296]
	446 Call 0x1C17D08
	447 Move X1, X0
	448 Move X0, X19
	449 Call 0x1C17DEC
	450 Call 0x1C17F28
	451 Move X19, X0
	452 Move X27, X31
	453 Move X0, X27
	454 Call 0x1C17F18
	455 Move X19, X0
	456 Move X8, 0xA63000
	457 Move X8, [X8+4040]
	458 Move X1, [X8]
	459 Add X0, X31, 32
	460 Call Enumerator<Object>.Dispose, X0
	461 Compare X27, 0
	462 JumpIfNotEqual {465}
	463 Move X0, X19
	464 Call 0x1D2D690
	465 Move X0, X27
	466 Call 0x1C17F18
	467 Call 0x1991590

