Type: System.Net.ResponseDescription

Method: System.Boolean get_PositiveIntermediate()

Disassembly:
	0x03671D10 BL 0x366A368
	0x03671D14 TBZ X0, 0x0, 0x3671DF0
	0x03671D18 ADRP X8, 0xA82000
	0x03671D1C LDR X8, [X8 + 0x9D0]
	0x03671D20 MOVZ W1, 0x2

ISIL:
	001 Move W8, [X0+20]
	002 Subtract W8, W8, 100
	003 NotImplemented "Instruction CMP not yet implemented."
	004 NotImplemented "Instruction CSET not yet implemented."
	005 Return X0

Method: System.Boolean get_PositiveCompletion()

Disassembly:
	0x03671D24 LDR X0, [X8]
	0x03671D28 BL 0x1C16D6C
	0x03671D2C ADRP X8, 0xACC000
	0x03671D30 LDR X8, [X8 + 0x968]
	0x03671D34 MOV X24, X0

ISIL:
	001 Move W8, [X0+20]
	002 Subtract W8, W8, 200
	003 NotImplemented "Instruction CMP not yet implemented."
	004 NotImplemented "Instruction CSET not yet implemented."
	005 Return X0

Method: System.Boolean get_TransientFailure()

Disassembly:
	0x03671D38 LDR X25, [X8]
	0x03671D3C CBZ X21, 0x3671D64
	0x03671D40 CBZ X24, 0x367234C
	0x03671D44 LDR X26, [X21 + 0x10]
	0x03671D48 CBZ X26, 0x3671D6C

ISIL:
	001 Move W8, [X0+20]
	002 Subtract W8, W8, 400
	003 NotImplemented "Instruction CMP not yet implemented."
	004 NotImplemented "Instruction CSET not yet implemented."
	005 Return X0

Method: System.Boolean get_PermanentFailure()

Disassembly:
	0x03671D4C LDR X8, [X24]
	0x03671D50 MOV X0, X26
	0x03671D54 LDR X1, [X8 + 0x40]
	0x03671D58 BL 0x1C16E00
	0x03671D5C CBNZ X0, 0x3671D6C

ISIL:
	001 Move W8, [X0+20]
	002 Subtract W8, W8, 500
	003 NotImplemented "Instruction CMP not yet implemented."
	004 NotImplemented "Instruction CSET not yet implemented."
	005 Return X0

Method: System.Boolean get_InvalidStatusCode()

Disassembly:
	0x03671D60 B 0x3672354
	0x03671D64 CBZ X24, 0x367234C
	0x03671D68 MOV X26, X31
	0x03671D6C LDR W8, [X24 + 0x18]
	0x03671D70 CBZ W8, 0x3672350

ISIL:
	001 Move W8, [X0+20]
	002 Subtract W8, W8, 100
	003 NotImplemented "Instruction CMP not yet implemented."
	004 NotImplemented "Instruction CSET not yet implemented."
	005 Return X0

Method: System.Void .ctor()

Disassembly:
	0x03671D74 STR X26, [X24 + 0x20]
	0x03671D78 CBZ X20, 0x3671DA0
	0x03671D7C LDR X26, [X20 + 0x18]
	0x03671D80 CBZ X26, 0x3671DA4
	0x03671D84 LDR X8, [X24]
	0x03671D88 MOV X0, X26
	0x03671D8C LDR X1, [X8 + 0x40]
	0x03671D90 BL 0x1C16E00
	0x03671D94 CBZ X0, 0x3672354
	0x03671D98 LDR W8, [X24 + 0x18]
	0x03671D9C B 0x3671DA4
	0x03671DA0 MOV X26, X31
	0x03671DA4 CMP W8, 0x1
	0x03671DA8 B.LS 0x3672350
	0x03671DAC MOV X0, X25
	0x03671DB0 MOV X1, X24
	0x03671DB4 MOV X2, X31
	0x03671DB8 STR X26, [X24 + 0x28]
	0x03671DBC BL 0x32C2F6C
	0x03671DC0 LDR X8, [X27]
	0x03671DC4 MOV X24, X0
	0x03671DC8 LDR W9, [X8 + 0xE0]
	0x03671DCC CBNZ W9, 0x3671DD8
	0x03671DD0 MOV X0, X8
	0x03671DD4 BL 0x1C16DFC
	0x03671DD8 ADRP X8, 0xACC000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xD70000
	006 Move X20, 0xA83000
	007 Move W8, [X21+1912]
	008 Move X20, [X20+2288]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xA83000
	015 Move X0, [X0+2288]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+1912], W8
	019 Move TEMP, 0
	020 Not TEMP
	021 Move W8, TEMP
	022 Move [X19+20], W8
	023 Move X0, [X20]
	024 Call 0x1C17F10
	025 Move X1, X31
	026 Move X20, X0
	027 Call StringBuilder..ctor, X0
	028 Move [X19+32], X20
	029 Move X0, X19
	030 Move X20, [X31+16]
	031 Move X19, [X31+24]
	032 Move X1, X31
	033 Move X30, [X31+32]
	034 Move X21, [X31+40]
	035 Call Object..ctor, X0
	036 Return 

