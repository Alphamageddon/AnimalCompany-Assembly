Type: System.Net.BufferedReadStream/<ProcessReadAsync>d__2

Method: System.Void MoveNext()

Disassembly:
	0x036991E4 LDR X0, [X20 + 0x20]
	0x036991E8 CBZ X0, 0x36992D4
	0x036991EC LDR X8, [X0]
	0x036991F0 LDR X9, [X8 + 0x258]
	0x036991F4 LDR X1, [X8 + 0x260]
	0x036991F8 BLR X9
	0x036991FC LDR X20, [X20 + 0x20]
	0x03699200 MOV X0, X31
	0x03699204 BL 0x3242EC8
	0x03699208 CBZ X0, 0x36992E8
	0x0369920C LDR X8, [X0]
	0x03699210 MOV X1, X19
	0x03699214 LDR X9, [X8 + 0x268]
	0x03699218 LDR X2, [X8 + 0x270]
	0x0369921C BLR X9
	0x03699220 CBZ X20, 0x36992E8
	0x03699224 ADRP X19, 0xA5A000
	0x03699228 LDR X19, [X19 + 0x8F0]
	0x0369922C MOV X1, X0
	0x03699230 MOV X0, X20
	0x03699234 MOV X2, X31
	0x03699238 BL 0x32513F4
	0x0369923C LDR X8, [X19]
	0x03699240 MOV X20, X0
	0x03699244 MOV X0, X8
	0x03699248 BL 0x1C16F10
	0x0369924C MOV X1, X31
	0x03699250 MOV X19, X0
	0x03699254 BL 0x3231AC4
	0x03699258 CBZ X20, 0x36992E8
	0x0369925C LDR X8, [X20 + 0x18]
	0x03699260 CMP W8, 0x1
	0x03699264 B.LT 0x36992C0
	0x03699268 ADRP X23, 0xA8D000
	0x0369926C LDR X23, [X23 + 0x350]
	0x03699270 MOV X21, X31
	0x03699274 AND X8, X8, 0x0
	0x03699278 ADD X22, X20, 0x20
	0x0369927C CMP X21, W8, UXTW
	0x03699280 B.CS 0x36992EC
	0x03699284 LDRB W8, [X22, X21, LSL]
	0x03699288 LDR X1, [X23]
	0x0369928C ADD X0, X31, 0xC
	0x03699290 MOV X2, X31
	0x03699294 STRB W8, [X31 + 0xC]
	0x03699298 BL 0x3319C4C
	0x0369929C CBZ X19, 0x36992E8
	0x036992A0 MOV X1, X0
	0x036992A4 MOV X0, X19
	0x036992A8 MOV X2, X31
	0x036992AC BL 0x32333E0
	0x036992B0 LDR W8, [X20 + 0x18]
	0x036992B4 ADD X21, X21, 0x1
	0x036992B8 CMP X21, W8, SXTW
	0x036992BC B.LT 0x369927C
	0x036992C0 CBZ X19, 0x36992E8
	0x036992C4 LDR X8, [X19]
	0x036992C8 MOV X0, X19
	0x036992CC LDP X9, X1, [X8 + 0x168]
	0x036992D0 BLR X9
	0x036992D4 LDP X20, X19, [X31 + 0x30]
	0x036992D8 LDP X22, X21, [X31 + 0x20]
	0x036992DC LDP X30, X23, [X31 + 0x10]
	0x036992E0 ADD X31, X31, 0x40
	0x036992E4 RET
	0x036992E8 BL 0x1C16F20
	0x036992EC BL 0x1C16F28
	0x036992F0 STR X30, [X31 - 0x30]!
	0x036992F4 STP X22, X21, [X31 + 0x10]
	0x036992F8 STP X20, X19, [X31 + 0x20]
	0x036992FC ADRP X22, 0xD47000
	0x03699300 LDRB W8, [X22 + 0x89C]
	0x03699304 MOV X20, X2
	0x03699308 MOV X21, X1
	0x0369930C MOV X19, X0
	0x03699310 TBNZ X8, 0x0, 0x3699334
	0x03699314 ADRP X0, 0xAA5000
	0x03699318 LDR X0, [X0 + 0x638]
	0x0369931C BL 0x1C16CF4
	0x03699320 ADRP X0, 0xAA5000
	0x03699324 LDR X0, [X0 + 0x640]
	0x03699328 BL 0x1C16CF4
	0x0369932C MOVZ W8, 0x1
	0x03699330 STRB W8, [X22 + 0x89C]
	0x03699334 LDR X0, [X19 + 0x28]
	0x03699338 CBZ X0, 0x3699410
	0x0369933C ADRP X22, 0xAA5000
	0x03699340 LDR X22, [X22 + 0x638]
	0x03699344 BL 0x369885C
	0x03699348 LDR X8, [X22]
	0x0369934C MOV X2, X0
	0x03699350 MOV X1, X21
	0x03699354 MOV X3, X20
	0x03699358 MOV X0, X8
	0x0369935C MOV X4, X31
	0x03699360 BL 0x3227C18
	0x03699364 LDR X8, [X19 + 0x28]
	0x03699368 CBZ X8, 0x3699410
	0x0369936C MOV X20, X0
	0x03699370 MOV X0, X8
	0x03699374 BL 0x36988DC
	0x03699378 CBZ X0, 0x36993F8
	0x0369937C LDR X0, [X19 + 0x28]
	0x03699380 CBZ X0, 0x3699410
	0x03699384 BL 0x36988DC
	0x03699388 CBZ X0, 0x3699410
	0x0369938C ADRP X21, 0xAA5000
	0x03699390 LDR X21, [X21 + 0x640]
	0x03699394 MOV X1, X31
	0x03699398 BL 0x322B5E4
	0x0369939C LDR X1, [X21]
	0x036993A0 MOV X2, X31
	0x036993A4 BL 0x321BA08
	0x036993A8 TBZ X0, 0x0, 0x36993F8
	0x036993AC MOV X0, X19
	0x036993B0 MOV X1, X20
	0x036993B4 BL 0x369919C
	0x036993B8 LDR X8, [X19 + 0x28]
	0x036993BC CBZ X8, 0x3699410
	0x036993C0 MOV X20, X0
	0x036993C4 MOV X0, X8
	0x036993C8 BL 0x36988B0
	0x036993CC MOV X21, X0
	0x036993D0 MOV X0, X19
	0x036993D4 BL 0x3698FCC
	0x036993D8 LDR X8, [X22]
	0x036993DC MOV X3, X0
	0x036993E0 MOV X1, X20
	0x036993E4 MOV X2, X21
	0x036993E8 MOV X0, X8
	0x036993EC MOV X4, X31
	0x036993F0 BL 0x3227C18
	0x036993F4 MOV X20, X0
	0x036993F8 MOV X0, X19
	0x036993FC MOV X1, X20
	0x03699400 LDP X20, X19, [X31 + 0x20]
	0x03699404 LDP X22, X21, [X31 + 0x10]
	0x03699408 LDR X30, [X31], #0x30
	0x0369940C B 0x369919C
	0x03699410 BL 0x1C16F20
	0x03699414 STP X30, X21, [X31 - 0x20]!
	0x03699418 STP X20, X19, [X31 + 0x10]
	0x0369941C ADRP X21, 0xD47000
	0x03699420 LDRB W8, [X21 + 0x89D]
	0x03699424 MOV X20, X1
	0x03699428 MOV X19, X0
	0x0369942C TBNZ X8, 0x0, 0x3699450
	0x03699430 ADRP X0, 0xAA5000
	0x03699434 LDR X0, [X0 + 0x648]
	0x03699438 BL 0x1C16CF4
	0x0369943C ADRP X0, 0xA62000
	0x03699440 LDR X0, [X0 + 0xFF0]
	0x03699444 BL 0x1C16CF4
	0x03699448 MOVZ W8, 0x1
	0x0369944C STRB W8, [X21 + 0x89D]
	0x03699450 CBZ X20, 0x36994E0
	0x03699454 LDR X8, [X20]
	0x03699458 MOV X0, X20
	0x0369945C LDP X9, X1, [X8 + 0x1B8]
	0x03699460 BLR X9
	0x03699464 LDR X8, [X20]
	0x03699468 MOV X21, X0
	0x0369946C MOV X0, X20
	0x03699470 LDP X9, X1, [X8 + 0x1D8]
	0x03699474 BLR X9
	0x03699478 CBZ X0, 0x36994E0
	0x0369947C ADRP X20, 0xA62000
	0x03699480 LDR X20, [X20 + 0xFF0]
	0x03699484 MOV X1, X31
	0x03699488 BL 0x361C058
	0x0369948C LDR X8, [X20]
	0x03699490 MOV X2, X0
	0x03699494 MOV X1, X21
	0x03699498 MOV X3, X31
	0x0369949C MOV X0, X8
	0x036994A0 BL 0x3227BD4
	0x036994A4 LDR X8, [X19 + 0x28]
	0x036994A8 CBZ X8, 0x36994E0
	0x036994AC ADRP X21, 0xAA5000
	0x036994B0 LDR X21, [X21 + 0x648]
	0x036994B4 MOV X20, X0
	0x036994B8 MOV X0, X8
	0x036994BC BL 0x3698908
	0x036994C0 LDR X1, [X21]
	0x036994C4 MOV X2, X31
	0x036994C8 BL 0x321BA08
	0x036994CC MOV X0, X19
	0x036994D0 MOV X1, X20
	0x036994D4 LDP X20, X19, [X31 + 0x10]
	0x036994D8 LDP X30, X21, [X31], #0x20
	0x036994DC B 0x369919C
	0x036994E0 BL 0x1C16F20
	0x036994E4 STR X30, [X31 - 0x40]!
	0x036994E8 STP X24, X23, [X31 + 0x10]
	0x036994EC STP X22, X21, [X31 + 0x20]
	0x036994F0 STP X20, X19, [X31 + 0x30]
	0x036994F4 ADRP X23, 0xD47000
	0x036994F8 LDRB W8, [X23 + 0x89E]
	0x036994FC MOV X20, X3
	0x03699500 MOV X21, X2
	0x03699504 MOV X22, X1
	0x03699508 MOV X19, X0

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+32], X22
	004 Move [X31+40], X21
	005 Move [X31+48], X20
	006 Move [X31+56], X19
	007 Move X20, 0xD48000
	008 Move W8, [X20+2192]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {40}
	014 Move X0, 0xAA6000
	015 Move X0, [X0+1520]
	016 Call 0x1C17CF4
	017 Move X0, 0xA8A000
	018 Move X0, [X0+3632]
	019 Call 0x1C17CF4
	020 Move X0, 0xA8A000
	021 Move X0, [X0+3488]
	022 Call 0x1C17CF4
	023 Move X0, 0xA63000
	024 Move X0, [X0+2008]
	025 Call 0x1C17CF4
	026 Move X0, 0xA8F000
	027 Move X0, [X0+696]
	028 Call 0x1C17CF4
	029 Move X0, 0xA8F000
	030 Move X0, [X0+704]
	031 Call 0x1C17CF4
	032 Move X0, 0xA8F000
	033 Move X0, [X0+712]
	034 Call 0x1C17CF4
	035 Move X0, 0xA8F000
	036 Move X0, [X0+720]
	037 Call 0x1C17CF4
	038 Move W8, 1
	039 Move [X20+2192], W8
	040 Move [X31], X31
	041 Move [X31+8], X31
	042 Move X21, 0xA8A000
	043 Move W8, [X19]
	044 Move X21, [X21+3488]
	045 Compare W8, 0
	046 JumpIfEqual {135}
	047 Move X8, 0xA63000
	048 Move X8, [X8+2008]
	049 Move X22, [X19+40]
	050 Move X0, [X8]
	051 Move W8, [X0+224]
	052 Compare W8, 0
	053 JumpIfNotEqual {55}
	054 Call 0x1C17DFC
	055 Add X0, X19, 32
	056 Move X1, X31
	057 Call CancellationToken.ThrowIfCancellationRequested, X0
	058 Compare X22, 0
	059 JumpIfEqual {172}
	060 Move X8, [X22+64]
	061 Compare X8, 0
	062 JumpIfEqual {90}
	063 Move W9, [X8+28]
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Move W10, [X19+48]
	066 Move X0, [X8+16]
	067 Move W1, [X8+24]
	068 Move X2, [X19+56]
	069 Move W3, [X19+64]
	070 NotImplemented "Instruction CMP not yet implemented."
	071 NotImplemented "Instruction CSEL not yet implemented."
	072 Move W4, W20
	073 Move X5, X31
	074 Call Buffer.BlockCopy, X0, X1, X2, X3, X4
	075 Move X8, [X22+64]
	076 Compare X8, 0
	077 JumpIfEqual {173}
	078 Move W9, [X8+24]
	079 Move W10, [X8+28]
	080 Add W9, W9, W20
	081 Subtract W10, W10, W20
	082 Move [X8+24], W9
	083 Move [X8+28], W10
	084 Move W8, [X19+64]
	085 Move W9, [X19+48]
	086 Add W8, W8, W20
	087 Subtract W9, W9, W20
	088 Move [X19+64], W8
	089 Move [X19+48], W9
	090 Move X0, [X22+48]
	091 Compare X0, 0
	092 JumpIfEqual {149}
	093 Move X8, [X0]
	094 Move X1, [X19+56]
	095 Move W2, [X19+64]
	096 Move W3, [X19+48]
	097 Move X4, [X19+32]
	098 Move X9, [X8+728]
	099 Move X5, [X8+736]
	100 NotImplemented "Instruction BLR not yet implemented."
	101 Compare X0, 0
	102 JumpIfEqual {174}
	103 Move X8, 0xA8F000
	104 Move X8, [X8+720]
	105 Move X2, [X8]
	106 Move W1, W31
	107 Call Task`1<Int32>.ConfigureAwait, X0, X1
	108 Move X8, 0xA8F000
	109 Move X8, [X8+712]
	110 Move [X31], X0
	111 Move [X31+8], X1
	112 Move X8, [X8]
	113 Add X0, X31, 0
	114 Move X1, X8
	115 Call ConfiguredTaskAwaiter<Int32>.get_IsCompleted, X0
	116 Move TEMP, X0
	117 And TEMP, TEMP, 1
	118 Compare TEMP, 1
	119 JumpIfEqual {143}
	120 Move [X19], W31
	121 Move V0, [X31]
	122 Move [X19+72], V0
	123 Move X0, [X21]
	124 Move W8, [X0+224]
	125 Compare W8, 0
	126 JumpIfNotEqual {128}
	127 Call 0x1C17DFC
	128 Move X8, 0xAA6000
	129 Move X8, [X8+1520]
	130 Add X0, X19, 8
	131 Move X3, [X8]
	132 Add X1, X31, 0
	133 Move X2, X19
	134 Call AsyncTaskMethodBuilder`1<Int32>.AwaitUnsafeOnCompleted, X0, X1, X2
	135 NotImplemented "Instruction LDUR not yet implemented."
	136 Move TEMP, 0
	137 Not TEMP
	138 Move W8, TEMP
	139 Move [X31], V0
	140 Move [X19+72], X31
	141 Move [X19+80], X31
	142 Move [X19], W8
	143 Move X8, 0xA8F000
	144 Move X8, [X8+704]
	145 Move X1, [X8]
	146 Add X0, X31, 0
	147 Call ConfiguredTaskAwaiter<Int32>.GetResult, X0
	148 Move W20, W0
	149 Move W20, W31
	150 Move TEMP, 1
	151 Not TEMP
	152 Move W8, TEMP
	153 Move [X19+8], W8
	154 Move X0, [X21]
	155 Move X21, 0xA8A000
	156 Move W8, [X0+224]
	157 Move X21, [X21+3632]
	158 Compare W8, 0
	159 JumpIfNotEqual {161}
	160 Call 0x1C17DFC
	161 Move X2, [X21]
	162 Move X0, X19
	163 Move W1, W20
	164 Call AsyncTaskMethodBuilder`1<Int32>.SetResult, X0, X1
	165 Move X20, [X31+48]
	166 Move X19, [X31+56]
	167 Move X22, [X31+32]
	168 Move X21, [X31+40]
	169 Move X30, [X31+16]
	170 Add X31, X31, 64
	171 Return 
	172 Call 0x1C17F20
	173 Call 0x1C17F20
	174 Call 0x1C17F20
	175 Move X20, X0
	176 NotImplemented "Instruction CMP not yet implemented."
	177 Move X0, X20
	178 Call 0x3EB2AD0
	179 Move X20, X0
	180 Move X0, 0xA5B000
	181 Move X0, [X0+2000]
	182 Call 0x1C17D08
	183 Move X8, [X20]
	184 Move X1, [X8]
	185 Call 0x1C18270
	186 Move TEMP, X0
	187 And TEMP, TEMP, 1
	188 Compare TEMP, 1
	189 JumpIfNotEqual {210}
	190 Move X20, [X20]
	191 Call 0x3EB2AE0
	192 Move TEMP, 1
	193 Not TEMP
	194 Move W8, TEMP
	195 Move [X19+8], W8
	196 Move X0, 0xA8A000
	197 Move X0, [X0+3488]
	198 Call 0x1C17D08
	199 Move W8, [X0+224]
	200 Compare W8, 0
	201 JumpIfNotEqual {203}
	202 Call 0x1C17DFC
	203 Move X0, 0xA8A000
	204 Move X0, [X0+3648]
	205 Call 0x1C17D08
	206 Move X2, X0
	207 Move X0, X19
	208 Move X1, X20
	209 Call AsyncTaskMethodBuilder`1<Int32>.SetException, X0, X1
	210 Move W0, 8
	211 Call 0x3EB2AF0
	212 Move X8, [X20]
	213 Move [X0], X8
	214 Move X1, 0x81C000
	215 Add X1, X1, 3672
	216 Move X2, X31
	217 Call 0x3EB2B00
	218 Move X20, X0
	219 Call 0x3EB2AE0
	220 Move X0, X20
	221 Call 0x1D2D690
	222 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x0369950C TBNZ X8, 0x0, 0x369953C
	0x03699510 ADRP X0, 0xA8C000
	0x03699514 LDR X0, [X0 + 0x630]
	0x03699518 BL 0x1C16CF4
	0x0369951C ADRP X0, 0xAA5000
	0x03699520 LDR X0, [X0 + 0x650]
	0x03699524 BL 0x1C16CF4
	0x03699528 ADRP X0, 0xAA5000
	0x0369952C LDR X0, [X0 + 0x658]
	0x03699530 BL 0x1C16CF4
	0x03699534 MOVZ W8, 0x1
	0x03699538 STRB W8, [X23 + 0x89E]
	0x0369953C MOV X0, X19
	0x03699540 MOV X1, X22
	0x03699544 MOV X2, X21
	0x03699548 BL 0x36992F0
	0x0369954C LDR X8, [X19 + 0x28]
	0x03699550 CBZ X8, 0x3699640
	0x03699554 ADRP X22, 0xAA5000
	0x03699558 LDR X22, [X22 + 0x650]
	0x0369955C MOV X21, X0
	0x03699560 MOV X0, X8
	0x03699564 BL 0x36988B0
	0x03699568 LDR X8, [X22]
	0x0369956C MOV X2, X0
	0x03699570 MOV X1, X21
	0x03699574 MOV X3, X31
	0x03699578 MOV X0, X8
	0x0369957C BL 0x3227BD4
	0x03699580 LDR X8, [X19 + 0x28]
	0x03699584 CBZ X8, 0x3699640

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xD48000
	007 Move X21, 0xA8A000
	008 Move W8, [X22+2193]
	009 Move X21, [X21+3488]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xA8A000
	017 Move X0, [X0+3656]
	018 Call 0x1C17CF4
	019 Move X0, 0xA8A000
	020 Move X0, [X0+3488]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+2193], W8
	024 Move X0, [X21]
	025 Move X21, 0xA8A000
	026 Move W8, [X0+224]
	027 Move X21, [X21+3656]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X2, [X21]
	032 Add X0, X20, 8
	033 Move X1, X19
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Call AsyncTaskMethodBuilder`1<Int32>.SetStateMachine, X0, X1
	040 Return 

