Type: System.Net.FtpControlStream

Method: System.Net.NetworkCredential get_Credentials()

Disassembly:
	0x03671DDC LDR X8, [X8 + 0x938]
	0x03671DE0 MOV X0, X19
	0x03671DE4 MOV X1, X24
	0x03671DE8 LDR X2, [X8]
	0x03671DEC BL 0x366A3CC
	0x03671DF0 CBZ X20, 0x3671FC8
	0x03671DF4 LDR W24, [X20 + 0x14]
	0x03671DF8 CMP W24, 0xDD
	0x03671DFC B.NE 0x3671E10
	0x03671E00 LDR W8, [X19 + 0x58]
	0x03671E04 ADDS W31, W8, 0x1
	0x03671E08 B.NE 0x3671E34
	0x03671E0C B 0x36723B4
	0x03671E10 STR W24, [X19 + 0x104]
	0x03671E14 LDR X8, [X20 + 0x18]
	0x03671E18 SUB W9, W24, 0x64
	0x03671E1C CMP W9, 0x1F4
	0x03671E20 STR X8, [X19 + 0x108]
	0x03671E24 B.CS 0x3672360
	0x03671E28 LDR W8, [X19 + 0x58]
	0x03671E2C ADDS W31, W8, 0x1
	0x03671E30 B.EQ 0x3671FFC
	0x03671E34 CBZ X21, 0x367234C
	0x03671E38 ADRP X8, 0xACC000
	0x03671E3C LDR X8, [X8 + 0x928]
	0x03671E40 LDR X0, [X21 + 0x10]
	0x03671E44 MOV X2, X31
	0x03671E48 LDR X1, [X8]
	0x03671E4C BL 0x321BA08
	0x03671E50 TBZ X0, 0x0, 0x3671E70
	0x03671E54 LDR W8, [X20 + 0x14]
	0x03671E58 SUB W8, W8, 0xC8
	0x03671E5C CMP W8, 0x63
	0x03671E60 B.HI 0x3671FD0
	0x03671E64 MOV X0, X31
	0x03671E68 BL 0x3241948
	0x03671E6C B 0x3671FD8
	0x03671E70 LDR X0, [X21 + 0x10]
	0x03671E74 CBZ X0, 0x367234C
	0x03671E78 ADRP X8, 0xACC000
	0x03671E7C LDR X8, [X8 + 0x950]
	0x03671E80 MOV X2, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xD70000
	005 Move W8, [X20+1914]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xACD000
	012 Move X0, [X0+2240]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+1914], W8
	016 Move X0, [X19+184]
	017 Compare X0, 0
	018 JumpIfEqual {49}
	019 Move X8, [X0]
	020 Move X9, [X8+392]
	021 Move X1, [X8+400]
	022 NotImplemented "Instruction BLR not yet implemented."
	023 Move TEMP, X0
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfNotEqual {48}
	027 Move X0, [X19+184]
	028 Compare X0, 0
	029 JumpIfEqual {53}
	030 Move X8, [X0]
	031 Move X9, [X8+408]
	032 Move X1, [X8+416]
	033 NotImplemented "Instruction BLR not yet implemented."
	034 Compare X0, 0
	035 JumpIfEqual {49}
	036 Move X9, 0xACD000
	037 Move X9, [X9+2240]
	038 Move X8, [X0]
	039 Move X1, [X9]
	040 Move W10, [X8+304]
	041 Move W9, [X1+304]
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X8, [X8+200]
	044 Add X8, X8, X9
	045 NotImplemented "Instruction LDUR not yet implemented."
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Call 0x1C181E0
	048 Move X0, X31
	049 Move X20, [X31+16]
	050 Move X19, [X31+24]
	051 Move X30, [X31+32]
	052 Return X0
	053 Call 0x1C17F20

Method: System.Void set_Credentials(System.Net.NetworkCredential value)

Disassembly:
	0x03671E84 LDR X1, [X8]
	0x03671E88 BL 0x322C2F0
	0x03671E8C CMP W24, 0xE6
	0x03671E90 B.NE 0x3671EB0
	0x03671E94 ADDS W31, W0, 0x1
	0x03671E98 B.EQ 0x3671EB0
	0x03671E9C LDR W8, [X19 + 0x58]
	0x03671EA0 MOVZ W9, 0x1
	0x03671EA4 STRB W9, [X19 + 0x100]
	0x03671EA8 ADD W8, W8, 0x1
	0x03671EAC STR W8, [X19 + 0x58]
	0x03671EB0 LDR W8, [X20 + 0x14]
	0x03671EB4 SUB W9, W8, 0x190
	0x03671EB8 CMP W9, 0x64
	0x03671EBC B.CC 0x3672398
	0x03671EC0 SUB W8, W8, 0x1F4
	0x03671EC4 CMP W8, 0x63
	0x03671EC8 B.LS 0x3672398
	0x03671ECC LDRB W8, [X19 + 0x100]
	0x03671ED0 CMP W8, 0x1
	0x03671ED4 B.EQ 0x3671F14
	0x03671ED8 LDR X0, [X21 + 0x10]
	0x03671EDC CBZ X0, 0x367234C
	0x03671EE0 ADRP X8, 0xACC000
	0x03671EE4 LDR X8, [X8 + 0x930]
	0x03671EE8 MOV X2, X31
	0x03671EEC LDR X1, [X8]
	0x03671EF0 BL 0x322C2F0
	0x03671EF4 ADDS W31, W0, 0x1
	0x03671EF8 B.EQ 0x3671F14
	0x03671EFC CMP W24, 0x14C
	0x03671F00 B.EQ 0x3671F0C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xD70000
	006 Move W8, [X21+1915]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xAB3000
	014 Move X0, [X0+3424]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+1915], W8
	018 Move X21, [X20+184]
	019 Compare X21, 0
	020 JumpIfNotEqual {32}
	021 Move X8, 0xAB3000
	022 Move X8, [X8+3424]
	023 Move X0, [X8]
	024 Call 0x1C17F10
	025 Move X1, X31
	026 Move X2, X31
	027 Move X21, X0
	028 Call WeakReference..ctor, X0, X1
	029 Move [X20+184], X21
	030 Compare X21, 0
	031 JumpIfEqual {42}
	032 Move X8, [X21]
	033 Move X1, X19
	034 Move X20, [X31+16]
	035 Move X19, [X31+24]
	036 Move X0, X21
	037 Move X3, [X8+424]
	038 Move X2, [X8+432]
	039 Move X30, [X31+32]
	040 Move X21, [X31+40]
	041 CallNoReturn X3
	042 Call 0x1C17F20

Method: System.Void .ctor(System.Net.Sockets.TcpClient client)

Disassembly:
	0x03671F04 CMP W24, 0xE6
	0x03671F08 B.NE 0x36723B4
	0x03671F0C MOVZ W8, 0x1
	0x03671F10 STRB W8, [X19 + 0x100]
	0x03671F14 LDRB W8, [X21 + 0x18]
	0x03671F18 TBZ X8, 0x2, 0x3671F58
	0x03671F1C LDR W8, [X20 + 0x14]
	0x03671F20 SUB W9, W8, 0xC8
	0x03671F24 CMP W9, 0x64
	0x03671F28 B.CC 0x3671F38
	0x03671F2C SUB W8, W8, 0x64
	0x03671F30 CMP W8, 0x63
	0x03671F34 B.HI 0x3671F58
	0x03671F38 ADD X5, X31, 0xC
	0x03671F3C MOV X0, X19
	0x03671F40 MOV X1, X21
	0x03671F44 MOV X2, X20
	0x03671F48 MOV W3, W31
	0x03671F4C BL 0x3672410
	0x03671F50 LDRB W8, [X31 + 0xC]
	0x03671F54 CBZ W8, 0x3672124
	0x03671F58 CMP W24, 0x7D
	0x03671F5C B.EQ 0x3671F70
	0x03671F60 CMP W24, 0xE6
	0x03671F64 B.EQ 0x3672044
	0x03671F68 CMP W24, 0x96
	0x03671F6C B.NE 0x367205C
	0x03671F70 LDR X8, [X19 + 0x88]
	0x03671F74 CBZ X8, 0x3671FC8
	0x03671F78 LDRB W8, [X21 + 0x18]
	0x03671F7C TBNZ X8, 0x1, 0x36720C8
	0x03671F80 ADRP X8, 0xACC000
	0x03671F84 LDR X8, [X8 + 0x908]
	0x03671F88 ADD X1, X31, 0x8
	0x03671F8C STR W24, [X31 + 0x8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0xD70000
	008 Move X23, 0xA85000
	009 Move X21, 0xACD000
	010 Move W8, [X22+1916]
	011 Move X23, [X23+632]
	012 Move X21, [X21+2088]
	013 Move X19, X1
	014 Move X20, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0xACD000
	020 Move X0, [X0+2088]
	021 Call 0x1C17CF4
	022 Move X0, 0xA85000
	023 Move X0, [X0+632]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X22+1916], W8
	027 Move X8, [X23]
	028 Move TEMP, 0
	029 Not TEMP
	030 Move X9, TEMP
	031 Move X8, [X8+184]
	032 Move X8, [X8]
	033 Move [X20+192], X8
	034 Move [X20+200], X9
	035 Move X0, [X21]
	036 Move W8, [X0+224]
	037 Compare W8, 0
	038 JumpIfNotEqual {40}
	039 Call 0x1C17DFC
	040 Move X0, X20
	041 Move X1, X19
	042 Move X20, [X31+32]
	043 Move X19, [X31+40]
	044 Move X22, [X31+16]
	045 Move X21, [X31+24]
	046 Move X30, [X31+48]
	047 Move X23, [X31+56]
	048 Call CommandStream..ctor, X0, X1
	049 Return 

Method: System.Void AbortConnect()

Disassembly:
	0x03671F90 LDR X0, [X8]
	0x03671F94 BL 0x1C16E04
	0x03671F98 ADRP X8, 0xACC000
	0x03671F9C LDR X2, [X21 + 0x10]
	0x03671FA0 LDR X8, [X8 + 0x920]
	0x03671FA4 MOV X1, X0
	0x03671FA8 MOV X3, X31
	0x03671FAC LDR X8, [X8]
	0x03671FB0 MOV X0, X8
	0x03671FB4 BL 0x320A264
	0x03671FB8 MOV X8, X0
	0x03671FBC MOV W0, W31
	0x03671FC0 STR X8, [X19 + 0x68]
	0x03671FC4 B 0x3672124
	0x03671FC8 MOV W0, W31
	0x03671FCC B 0x3672124
	0x03671FD0 MOV X0, X31
	0x03671FD4 BL 0x3242BB4
	0x03671FD8 STR X0, [X19 + 0x78]
	0x03671FDC CBZ X0, 0x367234C
	0x03671FE0 LDR X8, [X0]
	0x03671FE4 LDR X9, [X8 + 0x338]
	0x03671FE8 LDR X1, [X8 + 0x340]
	0x03671FEC BLR X9
	0x03671FF0 STR X0, [X19 + 0x80]
	0x03671FF4 MOVZ W0, 0x1
	0x03671FF8 B 0x3672124
	0x03671FFC CMP W24, 0x78
	0x03672000 B.EQ 0x36720C0
	0x03672004 CMP W24, 0xDC
	0x03672008 B.NE 0x36723B4
	0x0367200C ADRP X8, 0xA81000
	0x03672010 LDR X8, [X8 + 0x8F0]
	0x03672014 LDR X0, [X8]
	0x03672018 BL 0x1C16F10

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, [X0+136]
	004 Compare X0, 0
	005 JumpIfEqual {8}
	006 Move X1, X31
	007 Call Socket.Close, X0
	008 Move X30, [X31+16]
	009 Move X19, [X31+24]
	010 Return 
	011 NotImplemented "Instruction CMP not yet implemented."
	012 Move X19, X0
	013 Move X0, X19
	014 Call 0x3EB2AD0
	015 Move X19, X0
	016 Move X0, 0xAAC000
	017 Move X0, [X0+1208]
	018 Call 0x1C17D08
	019 Move X8, [X19]
	020 Move X1, [X8]
	021 Call 0x1C18270
	022 Move TEMP, X0
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfNotEqual {30}
	026 Move X30, [X31+16]
	027 Move X19, [X31+24]
	028 Call 0x3EB2AE0
	029 Return 
	030 Move W0, 8
	031 Call 0x3EB2AF0
	032 Move X8, [X19]
	033 Move [X0], X8
	034 Move X1, 0x844000
	035 Add X1, X1, 3672
	036 Move X2, X31
	037 Call 0x3EB2B00
	038 Move X19, X0
	039 Call 0x3EB2AE0
	040 Move X0, X19
	041 Call 0x1D2D690
	042 Call 0x1991590

Method: System.Void AcceptCallback(System.IAsyncResult asyncResult)

Disassembly:
	0x0367201C MOV X1, X31
	0x03672020 MOV X20, X0
	0x03672024 BL 0x3231AC4
	0x03672028 STR X20, [X19 + 0xA0]
	0x0367202C CBZ X20, 0x367234C
	0x03672030 LDR X1, [X19 + 0x108]
	0x03672034 MOV X0, X20
	0x03672038 MOV X2, X31
	0x0367203C BL 0x32333E0
	0x03672040 B 0x3671FF4
	0x03672044 LDR X0, [X19 + 0xA8]
	0x03672048 CBZ X0, 0x367234C
	0x0367204C LDR X1, [X19 + 0x108]
	0x03672050 MOV X2, X31
	0x03672054 BL 0x32333E0
	0x03672058 B 0x3672084
	0x0367205C CMP W24, 0xDD
	0x03672060 B.NE 0x3672140
	0x03672064 LDR X0, [X19 + 0xB0]
	0x03672068 CBZ X0, 0x367234C
	0x0367206C LDR X1, [X20 + 0x18]
	0x03672070 MOV X2, X31
	0x03672074 BL 0x32333E0
	0x03672078 MOV X0, X19
	0x0367207C MOV X1, X31
	0x03672080 BL 0x367B0B4
	0x03672084 LDR W8, [X20 + 0x14]
	0x03672088 SUB W8, W8, 0x64
	0x0367208C CMP W8, 0x64
	0x03672090 B.CC 0x36720C0
	0x03672094 MOV X0, X19
	0x03672098 MOV X1, X31
	0x0367209C BL 0x367D78C
	0x036720A0 TBNZ X0, 0x0, 0x3671FF4
	0x036720A4 ADRP X8, 0xACB000
	0x036720A8 LDR X0, [X21 + 0x10]
	0x036720AC LDR X8, [X8 + 0x918]
	0x036720B0 MOV X2, X31
	0x036720B4 LDR X1, [X8]
	0x036720B8 BL 0x321BA08
	0x036720BC TBZ X0, 0x0, 0x3671FF4
	0x036720C0 MOVZ W0, 0x3
	0x036720C4 B 0x3672124
	0x036720C8 LDR X1, [X20 + 0x18]
	0x036720CC MOV X0, X19
	0x036720D0 BL 0x3672A90
	0x036720D4 LDR X21, [X19 + 0x40]
	0x036720D8 CBZ X21, 0x367234C
	0x036720DC ADRP X8, 0xACB000
	0x036720E0 LDR X8, [X8 + 0x820]
	0x036720E4 LDR X1, [X8]
	0x036720E8 LDR X8, [X21]
	0x036720EC CMP X8, X1
	0x036720F0 B.NE 0x36723E8
	0x036720F4 LDR X0, [X21 + 0x38]
	0x036720F8 CBZ X0, 0x367234C
	0x036720FC MOV X1, X31
	0x03672100 BL 0x3676738
	0x03672104 TBZ X0, 0x0, 0x3672118
	0x03672108 LDR X1, [X20 + 0x18]
	0x0367210C MOV X0, X19
	0x03672110 MOV X2, X21
	0x03672114 BL 0x3672B7C
	0x03672118 MOV X0, X19
	0x0367211C MOV X1, X22
	0x03672120 BL 0x36716EC
	0x03672124 LDP X20, X19, [X31 + 0x50]
	0x03672128 LDP X22, X21, [X31 + 0x40]
	0x0367212C LDP X24, X23, [X31 + 0x30]
	0x03672130 LDP X26, X25, [X31 + 0x20]
	0x03672134 LDP X30, X27, [X31 + 0x10]
	0x03672138 ADD X31, X31, 0x60
	0x0367213C RET
	0x03672140 CMP W24, 0xD5
	0x03672144 B.EQ 0x367226C
	0x03672148 CMP W24, 0x101
	0x0367214C B.EQ 0x367229C
	0x03672150 CMP W24, 0xEA
	0x03672154 B.NE 0x36722D0
	0x03672158 ADRP X27, 0xACB000
	0x0367215C LDR X22, [X19 + 0x30]
	0x03672160 LDR X27, [X27 + 0x8F0]
	0x03672164 CBZ X22, 0x3672194
	0x03672168 LDR X9, [X22]
	0x0367216C LDR X8, [X27]
	0x03672170 LDRB W11, [X9 + 0x130]
	0x03672174 LDRB W10, [X8 + 0x130]
	0x03672178 CMP W11, W10
	0x0367217C B.CC 0x3672194
	0x03672180 LDR X9, [X9 + 0xC8]
	0x03672184 ADD X9, X9, X10, 0x3, LSL
	0x03672188 LDUR X9, [X9 - 0x8]
	0x0367218C CMP X9, X8
	0x03672190 B.EQ 0x3672084
	0x03672194 LDR X24, [X19 + 0x40]
	0x03672198 CBZ X24, 0x36723F0
	0x0367219C ADRP X8, 0xACB000
	0x036721A0 LDR X8, [X8 + 0x820]
	0x036721A4 LDR X1, [X8]
	0x036721A8 LDR X8, [X24]
	0x036721AC CMP X8, X1
	0x036721B0 B.NE 0x3672400
	0x036721B4 MOV X0, X19
	0x036721B8 MOV X1, X31
	0x036721BC BL 0x367D89C
	0x036721C0 LDR X8, [X24]
	0x036721C4 MOV X25, X0
	0x036721C8 MOV X0, X24
	0x036721CC LDP X9, X1, [X8 + 0x1D8]
	0x036721D0 BLR X9
	0x036721D4 CBZ X0, 0x367234C
	0x036721D8 MOV X1, X31
	0x036721DC BL 0x361C394
	0x036721E0 MOV X26, X0
	0x036721E4 MOV X0, X24
	0x036721E8 MOV X1, X31
	0x036721EC BL 0x367C944
	0x036721F0 LDR X8, [X27]
	0x036721F4 MOV X27, X0
	0x036721F8 MOV X0, X8
	0x036721FC BL 0x1C16F10
	0x03672200 MOV X1, X22
	0x03672204 MOV X2, X25
	0x03672208 MOV X3, X26
	0x0367220C MOV X4, X27
	0x03672210 MOV X24, X0
	0x03672214 BL 0x366C554
	0x03672218 STR X24, [X23 + 0x18]
	0x0367221C LDRB W8, [X19 + 0x48]
	0x03672220 CBZ W8, 0x3672334
	0x03672224 ADRP X8, 0xAA9000
	0x03672228 LDR X8, [X8 + 0x720]
	0x0367222C LDR X0, [X8]
	0x03672230 BL 0x1C16F10
	0x03672234 ADRP X8, 0xACB000
	0x03672238 LDR X8, [X8 + 0x910]
	0x0367223C MOV X1, X23
	0x03672240 MOV X3, X31
	0x03672244 MOV X19, X0
	0x03672248 LDR X2, [X8]
	0x0367224C BL 0x3316570
	0x03672250 CBZ X24, 0x367234C
	0x03672254 MOV X0, X24
	0x03672258 MOV X1, X19
	0x0367225C MOV X2, X31
	0x03672260 BL 0x366C720
	0x03672264 MOVZ W0, 0x2
	0x03672268 B 0x3672124
	0x0367226C LDR X0, [X21 + 0x10]
	0x03672270 CBZ X0, 0x367234C
	0x03672274 ADRP X8, 0xACB000
	0x03672278 LDR X8, [X8 + 0x940]
	0x0367227C MOV X2, X31
	0x03672280 LDR X1, [X8]
	0x03672284 BL 0x3226F64
	0x03672288 TBZ X0, 0x0, 0x3672300
	0x0367228C LDR X1, [X20 + 0x18]
	0x03672290 BL 0x3672EC4
	0x03672294 STR X0, [X19 + 0xC8]
	0x03672298 B 0x3672084
	0x0367229C ADRP X8, 0xACB000
	0x036722A0 LDR X0, [X21 + 0x10]
	0x036722A4 LDR X8, [X8 + 0x960]
	0x036722A8 MOV X2, X31
	0x036722AC LDR X1, [X8]
	0x036722B0 BL 0x321BA08
	0x036722B4 TBZ X0, 0x0, 0x3672084
	0x036722B8 LDRB W8, [X21 + 0x18]
	0x036722BC TBNZ X8, 0x0, 0x3672084
	0x036722C0 LDR X1, [X20 + 0x18]
	0x036722C4 BL 0x367337C
	0x036722C8 STR X0, [X19 + 0xE0]
	0x036722CC B 0x3672084
	0x036722D0 LDR X0, [X21 + 0x10]
	0x036722D4 CBZ X0, 0x367234C
	0x036722D8 ADRP X8, 0xACB000
	0x036722DC LDR X8, [X8 + 0x948]
	0x036722E0 MOV X2, X31
	0x036722E4 LDR X1, [X8]
	0x036722E8 BL 0x322C2F0
	0x036722EC ADDS W31, W0, 0x1
	0x036722F0 B.EQ 0x3672084
	0x036722F4 LDR X8, [X19 + 0xF0]
	0x036722F8 STR X8, [X19 + 0xE8]
	0x036722FC B 0x3672084
	0x03672300 LDR X0, [X21 + 0x10]
	0x03672304 CBZ X0, 0x367234C
	0x03672308 ADRP X8, 0xACB000
	0x0367230C LDR X8, [X8 + 0x958]
	0x03672310 MOV X2, X31
	0x03672314 LDR X1, [X8]
	0x03672318 BL 0x3226F64
	0x0367231C TBZ X0, 0x0, 0x3672084
	0x03672320 LDR X1, [X20 + 0x18]
	0x03672324 MOV X0, X19
	0x03672328 BL 0x3672FFC
	0x0367232C STR X0, [X19 + 0xD0]
	0x03672330 B 0x3672084
	0x03672334 CBZ X24, 0x367234C
	0x03672338 MOV X0, X24
	0x0367233C BL 0x366C620
	0x03672340 LDR X8, [X23 + 0x18]
	0x03672344 STR X8, [X19 + 0x30]
	0x03672348 B 0x3672084
	0x0367234C BL 0x1C16F20
	0x03672350 BL 0x1C16F28
	0x03672354 BL 0x1C16F44
	0x03672358 MOV X1, X31
	0x0367235C BL 0x1C16DEC
	0x03672360 ADRP X0, 0xAAC000
	0x03672364 LDR X0, [X0 + 0x330]
	0x03672368 BL 0x1C16D08
	0x0367236C BL 0x1C16F10

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, 0xD6F000
	006 Move W8, [X19+1917]
	007 Move X21, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {23}
	012 Move X0, 0xACC000
	013 Move X0, [X0+2248]
	014 Call 0x1C17CF4
	015 Move X0, 0xAAA000
	016 Move X0, [X0+1816]
	017 Call 0x1C17CF4
	018 Move X0, 0xA8F000
	019 Move X0, [X0+3000]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X19+1917], W8
	023 Compare X21, 0
	024 JumpIfEqual {203}
	025 Move X10, 0xAAA000
	026 Move X8, [X21]
	027 Move X10, [X10+1816]
	028 NotImplemented "Instruction LDRH not yet implemented."
	029 Move X1, [X10]
	030 Compare X9, 0
	031 JumpIfEqual {38}
	032 Move X10, [X8+176]
	033 Add X10, X10, 8
	034 NotImplemented "Instruction LDUR not yet implemented."
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Subtract X9, X9, 1
	037 Add X10, X10, 16
	038 Move W2, 2
	039 Move X0, X21
	040 Call 0x1C5D788
	041 Move W9, [X10]
	042 Add W9, W9, 2
	043 Add X8, X8, W9
	044 Add X0, X8, 312
	045 Move X8, [X0]
	046 Move X1, [X0+8]
	047 Move X0, X21
	048 NotImplemented "Instruction BLR not yet implemented."
	049 Compare X0, 0
	050 JumpIfEqual {203}
	051 Move X9, 0xACC000
	052 Move X9, [X9+2248]
	053 Move X8, [X0]
	054 Move X20, X0
	055 Move X1, [X9]
	056 Move W10, [X8+304]
	057 Move W9, [X1+304]
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Move X8, [X8+200]
	060 Add X8, X8, X9
	061 NotImplemented "Instruction LDUR not yet implemented."
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Move X19, [X20+136]
	064 Compare X19, 0
	065 JumpIfEqual {118}
	066 Move X0, X19
	067 Move X1, X21
	068 Move X2, X31
	069 Call Socket.EndAccept, X0, X1
	070 Move [X20+136], X0
	071 Move X0, X20
	072 Move X1, X31
	073 Call NetworkStreamWrapper.get_ServerAddress, X0
	074 Move X21, X0
	075 Move X0, [X20+136]
	076 Compare X0, 0
	077 JumpIfEqual {119}
	078 Move X1, X31
	079 Call Socket.get_RemoteEndPoint, X0
	080 Compare X0, 0
	081 JumpIfEqual {120}
	082 Move X9, 0xA8F000
	083 Move X9, [X9+3000]
	084 Move X8, [X0]
	085 Move X1, [X9]
	086 Move W10, [X8+304]
	087 Move W9, [X1+304]
	088 NotImplemented "Instruction CMP not yet implemented."
	089 Move X8, [X8+200]
	090 Add X8, X8, X9
	091 NotImplemented "Instruction LDUR not yet implemented."
	092 NotImplemented "Instruction CMP not yet implemented."
	093 Compare X21, 0
	094 JumpIfEqual {121}
	095 Move X8, [X21]
	096 Move X1, [X0+16]
	097 Move X9, [X8+312]
	098 Move X2, [X8+320]
	099 Move X0, X21
	100 NotImplemented "Instruction BLR not yet implemented."
	101 Move TEMP, X0
	102 And TEMP, TEMP, 1
	103 Compare TEMP, 1
	104 JumpIfNotEqual {122}
	105 Move X0, X20
	106 Call CommandStream.ContinueCommandPipeline, X0
	107 Move X0, X19
	108 Move X20, [X31+16]
	109 Move X19, [X31+24]
	110 Move X1, X31
	111 Move X30, [X31+32]
	112 Move X21, [X31+40]
	113 Call Socket.Close, X0
	114 Return 
	115 Move X0, X20
	116 Call 0x1C181E0
	117 Call 0x1C181E0
	118 Call 0x1C17F20
	119 Call 0x1C17F20
	120 Call 0x1C17F20
	121 Call 0x1C17F20
	122 Move X0, [X20+136]
	123 Compare X0, 0
	124 JumpIfNotEqual {126}
	125 Call 0x1C17F20
	126 Move X1, X31
	127 Call Socket.Close, X0
	128 Move X0, 0xAAD000
	129 Move X0, [X0+816]
	130 Call 0x1C17D08
	131 Call 0x1C17F10
	132 Move X21, X0
	133 Move X0, 0xACC000
	134 Move X0, [X0+2256]
	135 Call 0x1C17D08
	136 Move X1, X0
	137 Move W2, 7
	138 Move X0, X21
	139 Move X3, X31
	140 Call WebException..ctor, X0, X1, X2
	141 Move X0, 0xACC000
	142 Move X0, [X0+2264]
	143 Call 0x1C17D08
	144 Move X1, X0
	145 Move X0, X21
	146 Call 0x1C17DEC
	147 Move X21, X0
	148 Move X21, X0
	149 NotImplemented "Instruction CMP not yet implemented."
	150 Move X0, X21
	151 Call 0x3EB2AD0
	152 Move X21, X0
	153 Move X0, 0xA82000
	154 Move X0, [X0+2000]
	155 Call 0x1C17D08
	156 Move X8, [X21]
	157 Move X1, [X8]
	158 Call 0x1C18270
	159 Move TEMP, X0
	160 And TEMP, TEMP, 1
	161 Compare TEMP, 1
	162 JumpIfNotEqual {172}
	163 Move X21, [X21]
	164 Call 0x3EB2AE0
	165 Move X0, X20
	166 Move X1, X31
	167 Call NetworkStreamWrapper.CloseSocket, X0
	168 Move X0, X20
	169 Move X1, X21
	170 Call CommandStream.InvokeRequestCallback, X0, X1
	171 Move X20, X31
	172 Move W0, 8
	173 Call 0x3EB2AF0
	174 Move X8, [X21]
	175 Move [X0], X8
	176 Move X1, 0x843000
	177 Add X1, X1, 3672
	178 Move X2, X31
	179 Call 0x3EB2B00
	180 Move X21, X0
	181 Move X20, X1
	182 Move X21, X0
	183 Call 0x3EB2AE0
	184 Move W1, W20
	185 Move W8, 1
	186 NotImplemented "Instruction CMP not yet implemented."
	187 Move X0, X21
	188 Call 0x3EB2AD0
	189 Move X20, [X0]
	190 Call 0x3EB2AE0
	191 Compare X19, 0
	192 JumpIfEqual {203}
	193 Move X0, X19
	194 Move X1, X31
	195 Call Socket.Close, X0
	196 Compare X20, 0
	197 JumpIfNotEqual {204}
	198 Move X20, [X31+16]
	199 Move X19, [X31+24]
	200 Move X30, [X31+32]
	201 Move X21, [X31+40]
	202 Return 
	203 Call 0x1C17F20
	204 Move X0, X20
	205 Call 0x1C17F18
	206 Move X20, X31
	207 Move X21, X0
	208 Compare X19, 0
	209 JumpIfNotEqual {211}
	210 Call 0x1C17F20
	211 Move X0, X19
	212 Move X1, X31
	213 Call Socket.Close, X0
	214 Compare X20, 0
	215 JumpIfNotEqual {218}
	216 Move X0, X21
	217 Call 0x1D2D690
	218 Move X0, X20
	219 Call 0x1C17F18
	220 Call 0x1991590

Method: System.Void ConnectCallback(System.IAsyncResult asyncResult)

Disassembly:
	0x03672370 MOV X19, X0
	0x03672374 ADRP X0, 0xACB000
	0x03672378 LDR X0, [X0 + 0x970]
	0x0367237C BL 0x1C16D08
	0x03672380 MOV X1, X0
	0x03672384 MOVZ W2, 0x7
	0x03672388 MOV X0, X19
	0x0367238C MOV X3, X31
	0x03672390 BL 0x367A0D4
	0x03672394 B 0x36723D0
	0x03672398 CMP W24, 0x1A5
	0x0367239C B.NE 0x36723B4
	0x036723A0 LDR W8, [X19 + 0x58]
	0x036723A4 CMP W8, 0x1
	0x036723A8 B.GT 0x36723B4
	0x036723AC MOVZ W8, 0x1
	0x036723B0 STRB W8, [X19 + 0x38]
	0x036723B4 MOV X0, X20
	0x036723B8 BL 0x19903C0
	0x036723BC LDR X2, [X20 + 0x18]
	0x036723C0 MOV W1, W24
	0x036723C4 MOV X3, X31
	0x036723C8 BL 0x366F83C
	0x036723CC MOV X19, X0
	0x036723D0 ADRP X0, 0xACB000
	0x036723D4 LDR X0, [X0 + 0x978]
	0x036723D8 BL 0x1C16D08
	0x036723DC MOV X1, X0
	0x036723E0 MOV X0, X19
	0x036723E4 BL 0x1C16DEC
	0x036723E8 MOV X0, X21
	0x036723EC BL 0x1C171E0
	0x036723F0 MOV X0, X19
	0x036723F4 MOV X1, X31
	0x036723F8 BL 0x367D89C
	0x036723FC BL 0x1C16F20
	0x03672400 MOV X0, X24
	0x03672404 BL 0x1C171E0
	0x03672408 MOV X1, X31
	0x0367240C B 0x33BDD8C
	0x03672410 STR X30, [X31 - 0x40]!
	0x03672414 STP X24, X23, [X31 + 0x10]
	0x03672418 STP X22, X21, [X31 + 0x20]
	0x0367241C STP X20, X19, [X31 + 0x30]
	0x03672420 ADRP X23, 0xD6E000
	0x03672424 LDRB W8, [X23 + 0x784]
	0x03672428 MOV X20, X5
	0x0367242C MOV X21, X2
	0x03672430 MOV X22, X1
	0x03672434 MOV X19, X0
	0x03672438 TBNZ X8, 0x0, 0x36724D4
	0x0367243C ADRP X0, 0xACB000
	0x03672440 LDR X0, [X0 + 0x8C8]
	0x03672444 BL 0x1C16CF4
	0x03672448 ADRP X0, 0xACB000
	0x0367244C LDR X0, [X0 + 0x820]
	0x03672450 BL 0x1C16CF4
	0x03672454 ADRP X0, 0xA8E000
	0x03672458 LDR X0, [X0 + 0xBB8]
	0x0367245C BL 0x1C16CF4
	0x03672460 ADRP X0, 0xA81000
	0x03672464 LDR X0, [X0 + 0x758]
	0x03672468 BL 0x1C16CF4
	0x0367246C ADRP X0, 0xACB000
	0x03672470 LDR X0, [X0 + 0x468]
	0x03672474 BL 0x1C16CF4
	0x03672478 ADRP X0, 0xACB000
	0x0367247C LDR X0, [X0 + 0x980]
	0x03672480 BL 0x1C16CF4
	0x03672484 ADRP X0, 0xACB000
	0x03672488 LDR X0, [X0 + 0x988]
	0x0367248C BL 0x1C16CF4
	0x03672490 ADRP X0, 0xACB000
	0x03672494 LDR X0, [X0 + 0x990]
	0x03672498 BL 0x1C16CF4
	0x0367249C ADRP X0, 0xACB000
	0x036724A0 LDR X0, [X0 + 0x998]
	0x036724A4 BL 0x1C16CF4
	0x036724A8 ADRP X0, 0xACB000
	0x036724AC LDR X0, [X0 + 0x9A0]
	0x036724B0 BL 0x1C16CF4
	0x036724B4 ADRP X0, 0xACB000
	0x036724B8 LDR X0, [X0 + 0x9A8]
	0x036724BC BL 0x1C16CF4
	0x036724C0 ADRP X0, 0xACB000
	0x036724C4 LDR X0, [X0 + 0x9B0]
	0x036724C8 BL 0x1C16CF4
	0x036724CC MOVZ W8, 0x1
	0x036724D0 STRB W8, [X23 + 0x784]
	0x036724D4 STRB W31, [X20]
	0x036724D8 LDRB W8, [X19 + 0xD8]
	0x036724DC CBZ W8, 0x3672500
	0x036724E0 MOVZ W8, 0x1
	0x036724E4 STRB W8, [X20]
	0x036724E8 MOVZ W0, 0x2
	0x036724EC LDP X20, X19, [X31 + 0x30]
	0x036724F0 LDP X22, X21, [X31 + 0x20]
	0x036724F4 LDP X24, X23, [X31 + 0x10]
	0x036724F8 LDR X30, [X31], #0x40
	0x036724FC RET
	0x03672500 MOVZ W8, 0x1
	0x03672504 STRB W8, [X19 + 0xD8]
	0x03672508 CBZ X22, 0x36729C4
	0x0367250C ADRP X23, 0xACB000
	0x03672510 LDR X0, [X22 + 0x10]
	0x03672514 LDR X23, [X23 + 0x988]
	0x03672518 MOV X2, X31
	0x0367251C LDR X1, [X23]
	0x03672520 BL 0x321BA08

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0xD6F000
	005 Move W8, [X19+1918]
	006 Move X20, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0xACC000
	012 Move X0, [X0+2248]
	013 Call 0x1C17CF4
	014 Move X0, 0xAAA000
	015 Move X0, [X0+1816]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X19+1918], W8
	019 Compare X20, 0
	020 JumpIfEqual {104}
	021 Move X10, 0xAAA000
	022 Move X8, [X20]
	023 Move X10, [X10+1816]
	024 NotImplemented "Instruction LDRH not yet implemented."
	025 Move X1, [X10]
	026 Compare X9, 0
	027 JumpIfEqual {34}
	028 Move X10, [X8+176]
	029 Add X10, X10, 8
	030 NotImplemented "Instruction LDUR not yet implemented."
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Subtract X9, X9, 1
	033 Add X10, X10, 16
	034 Move W2, 2
	035 Move X0, X20
	036 Call 0x1C5D788
	037 Move W9, [X10]
	038 Add W9, W9, 2
	039 Add X8, X8, W9
	040 Add X0, X8, 312
	041 Move X8, [X0]
	042 Move X1, [X0+8]
	043 Move X0, X20
	044 NotImplemented "Instruction BLR not yet implemented."
	045 Move X19, X0
	046 Compare X0, 0
	047 JumpIfEqual {73}
	048 Move X9, 0xACC000
	049 Move X9, [X9+2248]
	050 Move X8, [X19]
	051 Move X1, [X9]
	052 Move W10, [X8+304]
	053 Move W9, [X1+304]
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Move X8, [X8+200]
	056 Add X8, X8, X9
	057 NotImplemented "Instruction LDUR not yet implemented."
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Move X0, [X19+136]
	060 Compare X0, 0
	061 JumpIfEqual {74}
	062 Move X1, X20
	063 Move X2, X31
	064 Call Socket.EndConnect, X0, X1
	065 Move X0, X19
	066 Call CommandStream.ContinueCommandPipeline, X0
	067 Move X20, [X31+16]
	068 Move X19, [X31+24]
	069 Move X30, [X31+32]
	070 Return 
	071 Move X0, X19
	072 Call 0x1C181E0
	073 Call 0x1C17F20
	074 Call 0x1C17F20
	075 Move X20, X0
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Move X0, X20
	078 Call 0x3EB2AD0
	079 Move X20, X0
	080 Move X0, 0xA82000
	081 Move X0, [X0+2000]
	082 Call 0x1C17D08
	083 Move X8, [X20]
	084 Move X1, [X8]
	085 Call 0x1C18270
	086 Move TEMP, X0
	087 And TEMP, TEMP, 1
	088 Compare TEMP, 1
	089 JumpIfNotEqual {105}
	090 Move X20, [X20]
	091 Call 0x3EB2AE0
	092 Compare X19, 0
	093 JumpIfEqual {104}
	094 Move X0, X19
	095 Move X1, X31
	096 Call NetworkStreamWrapper.CloseSocket, X0
	097 Move X0, X19
	098 Move X1, X20
	099 Move X20, [X31+16]
	100 Move X19, [X31+24]
	101 Move X30, [X31+32]
	102 Call CommandStream.InvokeRequestCallback, X0, X1
	103 Return 
	104 Call 0x1C17F20
	105 Move W0, 8
	106 Call 0x3EB2AF0
	107 Move X8, [X20]
	108 Move [X0], X8
	109 Move X1, 0x843000
	110 Add X1, X1, 3672
	111 Move X2, X31
	112 Call 0x3EB2B00
	113 Move X20, X0
	114 Call 0x3EB2AE0
	115 Move X0, X20
	116 Call 0x1D2D690
	117 Call 0x1991590

Method: System.Void SSLHandshakeCallback(System.IAsyncResult asyncResult)

Disassembly:
	0x03672524 TBNZ X0, 0x0, 0x3672544
	0x03672528 ADRP X8, 0xACB000
	0x0367252C LDR X0, [X22 + 0x10]
	0x03672530 LDR X8, [X8 + 0x9B0]
	0x03672534 MOV X2, X31
	0x03672538 LDR X1, [X8]
	0x0367253C BL 0x321BA08
	0x03672540 TBZ X0, 0x0, 0x36725BC
	0x03672544 CBZ X21, 0x36729C4
	0x03672548 LDR W8, [X21 + 0x14]
	0x0367254C SUB W9, W8, 0xC8
	0x03672550 CMP W9, 0x64
	0x03672554 B.CS 0x3672578
	0x03672558 LDR X0, [X22 + 0x10]
	0x0367255C LDR X1, [X23]
	0x03672560 MOV X2, X31
	0x03672564 BL 0x321BA08
	0x03672568 LDR X1, [X21 + 0x18]
	0x0367256C TBZ X0, 0x0, 0x367265C
	0x03672570 BL 0x367488C
	0x03672574 B 0x3672660
	0x03672578 ADRP X9, 0xA81000
	0x0367257C LDR X9, [X9 + 0x758]
	0x03672580 ADD X1, X31, 0xC
	0x03672584 STR W8, [X31 + 0xC]
	0x03672588 LDR X0, [X9]
	0x0367258C BL 0x1C16E04
	0x03672590 ADRP X8, 0xACB000
	0x03672594 LDR X8, [X8 + 0x9A0]
	0x03672598 MOV X1, X0
	0x0367259C MOV X2, X31
	0x036725A0 LDR X8, [X8]
	0x036725A4 MOV X0, X8
	0x036725A8 BL 0x32094D4
	0x036725AC MOV X8, X0
	0x036725B0 MOV W0, W31
	0x036725B4 STR X8, [X19 + 0x68]
	0x036725B8 B 0x36724EC
	0x036725BC LDR X22, [X19 + 0x90]
	0x036725C0 CBNZ X22, 0x3672790
	0x036725C4 ADRP X21, 0xACB000
	0x036725C8 LDR X21, [X21 + 0x468]
	0x036725CC LDR X0, [X21]
	0x036725D0 LDR W8, [X0 + 0xE0]
	0x036725D4 CBNZ W8, 0x36725DC
	0x036725D8 BL 0x1C16DFC
	0x036725DC BL 0x366A368
	0x036725E0 TBZ X0, 0x0, 0x3672614
	0x036725E4 LDR X0, [X21]
	0x036725E8 LDR W8, [X0 + 0xE0]
	0x036725EC CBNZ W8, 0x36725F4
	0x036725F0 BL 0x1C16DFC
	0x036725F4 ADRP X8, 0xACB000
	0x036725F8 ADRP X9, 0xACB000
	0x036725FC LDR X8, [X8 + 0x998]
	0x03672600 LDR X9, [X9 + 0x9A8]
	0x03672604 MOV X0, X19
	0x03672608 LDR X1, [X8]
	0x0367260C LDR X2, [X9]
	0x03672610 BL 0x366A4BC
	0x03672614 LDRB W8, [X19 + 0x48]
	0x03672618 LDR X21, [X19 + 0x88]
	0x0367261C CBZ W8, 0x367284C
	0x03672620 ADRP X20, 0xACB000
	0x03672624 LDR X20, [X20 + 0x8C8]
	0x03672628 LDR X0, [X20]
	0x0367262C LDR W8, [X0 + 0xE0]
	0x03672630 CBNZ W8, 0x3672638
	0x03672634 BL 0x1C16DFC
	0x03672638 CBZ X21, 0x36729C4
	0x0367263C LDR X8, [X20]
	0x03672640 MOV X0, X21
	0x03672644 MOV X2, X19
	0x03672648 MOV X3, X31
	0x0367264C LDR X8, [X8 + 0xB8]
	0x03672650 LDR X1, [X8]
	0x03672654 BL 0x36C251C
	0x03672658 B 0x36724E8
	0x0367265C BL 0x3674A74
	0x03672660 MOV W21, W0
	0x03672664 ADDS W31, W0, 0x1
	0x03672668 B.NE 0x36726A4
	0x0367266C ADRP X8, 0xACB000
	0x03672670 LDR X8, [X8 + 0x468]
	0x03672674 LDR X0, [X8]
	0x03672678 LDR W8, [X0 + 0xE0]
	0x0367267C CBNZ W8, 0x3672684
	0x03672680 BL 0x1C16DFC
	0x03672684 ADRP X8, 0xACB000
	0x03672688 ADRP X9, 0xACB000
	0x0367268C LDR X8, [X8 + 0x990]
	0x03672690 LDR X9, [X9 + 0x9A8]
	0x03672694 MOV X0, X19
	0x03672698 LDR X1, [X8]
	0x0367269C LDR X2, [X9]
	0x036726A0 BL 0x3669DF0
	0x036726A4 LDR X22, [X19 + 0x40]
	0x036726A8 MOV X0, X19
	0x036726AC MOV X1, X31
	0x036726B0 BL 0x367D89C
	0x036726B4 CBZ X22, 0x36726D0
	0x036726B8 ADRP X8, 0xACB000
	0x036726BC LDR X8, [X8 + 0x820]
	0x036726C0 LDR X1, [X8]
	0x036726C4 LDR X8, [X22]
	0x036726C8 CMP X8, X1
	0x036726CC B.NE 0x36728F0
	0x036726D0 MOV X2, X0
	0x036726D4 BL 0x3674C2C
	0x036726D8 STR X0, [X19 + 0x88]
	0x036726DC MOV X0, X19
	0x036726E0 MOV X1, X31
	0x036726E4 BL 0x367D89C
	0x036726E8 CBZ X0, 0x36729C4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0xD6F000
	005 Move W8, [X19+1919]
	006 Move X20, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0xACC000
	012 Move X0, [X0+2248]
	013 Call 0x1C17CF4
	014 Move X0, 0xAAA000
	015 Move X0, [X0+1816]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X19+1919], W8
	019 Compare X20, 0
	020 JumpIfEqual {110}
	021 Move X10, 0xAAA000
	022 Move X8, [X20]
	023 Move X10, [X10+1816]
	024 NotImplemented "Instruction LDRH not yet implemented."
	025 Move X1, [X10]
	026 Compare X9, 0
	027 JumpIfEqual {34}
	028 Move X10, [X8+176]
	029 Add X10, X10, 8
	030 NotImplemented "Instruction LDUR not yet implemented."
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Subtract X9, X9, 1
	033 Add X10, X10, 16
	034 Move W2, 2
	035 Move X0, X20
	036 Call 0x1C5D788
	037 Move W9, [X10]
	038 Add W9, W9, 2
	039 Add X8, X8, W9
	040 Add X0, X8, 312
	041 Move X8, [X0]
	042 Move X1, [X0+8]
	043 Move X0, X20
	044 NotImplemented "Instruction BLR not yet implemented."
	045 Move X19, X0
	046 Compare X0, 0
	047 JumpIfEqual {78}
	048 Move X9, 0xACC000
	049 Move X9, [X9+2248]
	050 Move X8, [X19]
	051 Move X1, [X9]
	052 Move W10, [X8+304]
	053 Move W9, [X1+304]
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Move X8, [X8+200]
	056 Add X8, X8, X9
	057 NotImplemented "Instruction LDUR not yet implemented."
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Move X8, [X19+152]
	060 Compare X8, 0
	061 JumpIfEqual {79}
	062 Move X0, [X8+72]
	063 Compare X0, 0
	064 JumpIfEqual {80}
	065 Move X8, [X0]
	066 Move X9, [X8+1000]
	067 Move X2, [X8+1008]
	068 Move X1, X20
	069 NotImplemented "Instruction BLR not yet implemented."
	070 Move X0, X19
	071 Call CommandStream.ContinueCommandPipeline, X0
	072 Move X20, [X31+16]
	073 Move X19, [X31+24]
	074 Move X30, [X31+32]
	075 Return 
	076 Move X0, X19
	077 Call 0x1C181E0
	078 Call 0x1C17F20
	079 Call 0x1C17F20
	080 Call 0x1C17F20
	081 Move X20, X0
	082 NotImplemented "Instruction CMP not yet implemented."
	083 Move X0, X20
	084 Call 0x3EB2AD0
	085 Move X20, X0
	086 Move X0, 0xA82000
	087 Move X0, [X0+2000]
	088 Call 0x1C17D08
	089 Move X8, [X20]
	090 Move X1, [X8]
	091 Call 0x1C18270
	092 Move TEMP, X0
	093 And TEMP, TEMP, 1
	094 Compare TEMP, 1
	095 JumpIfNotEqual {111}
	096 Move X20, [X20]
	097 Call 0x3EB2AE0
	098 Compare X19, 0
	099 JumpIfEqual {110}
	100 Move X0, X19
	101 Move X1, X31
	102 Call NetworkStreamWrapper.CloseSocket, X0
	103 Move X0, X19
	104 Move X1, X20
	105 Move X20, [X31+16]
	106 Move X19, [X31+24]
	107 Move X30, [X31+32]
	108 Call CommandStream.InvokeRequestCallback, X0, X1
	109 Return 
	110 Call 0x1C17F20
	111 Move W0, 8
	112 Call 0x3EB2AF0
	113 Move X8, [X20]
	114 Move [X0], X8
	115 Move X1, 0x843000
	116 Add X1, X1, 3672
	117 Move X2, X31
	118 Call 0x3EB2B00
	119 Move X20, X0
	120 Call 0x3EB2AE0
	121 Move X0, X20
	122 Call 0x1D2D690
	123 Call 0x1991590

Method: System.Net.CommandStream/PipelineInstruction QueueOrCreateFtpDataStream(ref System.IO.Stream stream)

Disassembly:
	0x036726EC MOV X1, X31
	0x036726F0 BL 0x36C18F4
	0x036726F4 CBZ X0, 0x36729C4
	0x036726F8 ADRP X24, 0xA8E000
	0x036726FC LDR X24, [X24 + 0xBB8]
	0x03672700 LDR X8, [X0]
	0x03672704 LDR X1, [X24]
	0x03672708 LDRB W10, [X8 + 0x130]
	0x0367270C LDRB W9, [X1 + 0x130]
	0x03672710 CMP W10, W9
	0x03672714 B.CC 0x36728EC
	0x03672718 LDR X8, [X8 + 0xC8]
	0x0367271C ADD X8, X8, X9, 0x3, LSL
	0x03672720 LDUR X8, [X8 - 0x8]
	0x03672724 CMP X8, X1
	0x03672728 B.NE 0x36728EC
	0x0367272C LDR X23, [X0 + 0x10]
	0x03672730 MOV X0, X1
	0x03672734 BL 0x1C16F10
	0x03672738 MOV X1, X23
	0x0367273C MOV W2, W31
	0x03672740 MOV X22, X0
	0x03672744 BL 0x366E898
	0x03672748 LDR X0, [X19 + 0x88]
	0x0367274C CBZ X0, 0x36729C4
	0x03672750 MOV X1, X22
	0x03672754 MOV X2, X31
	0x03672758 BL 0x36C2A18
	0x0367275C MOV X0, X19
	0x03672760 MOV X1, X31
	0x03672764 BL 0x367D808
	0x03672768 LDR X8, [X24]
	0x0367276C MOV X23, X0
	0x03672770 MOV X0, X8
	0x03672774 BL 0x1C16F10
	0x03672778 MOV X1, X23
	0x0367277C MOV W2, W21
	0x03672780 MOV X22, X0
	0x03672784 BL 0x366E898
	0x03672788 STR X22, [X19 + 0x90]
	0x0367278C CBZ X22, 0x36725C4
	0x03672790 STR X31, [X19 + 0x90]
	0x03672794 ADRP X20, 0xACB000
	0x03672798 LDR X20, [X20 + 0x468]
	0x0367279C LDR X0, [X20]
	0x036727A0 LDR W8, [X0 + 0xE0]
	0x036727A4 CBNZ W8, 0x36727AC
	0x036727A8 BL 0x1C16DFC
	0x036727AC BL 0x366A368
	0x036727B0 TBZ X0, 0x0, 0x36727E4
	0x036727B4 LDR X0, [X20]
	0x036727B8 LDR W8, [X0 + 0xE0]
	0x036727BC CBNZ W8, 0x36727C4
	0x036727C0 BL 0x1C16DFC
	0x036727C4 ADRP X8, 0xACB000
	0x036727C8 ADRP X9, 0xACB000
	0x036727CC LDR X8, [X8 + 0x980]
	0x036727D0 LDR X9, [X9 + 0x9A8]
	0x036727D4 MOV X0, X19
	0x036727D8 LDR X1, [X8]
	0x036727DC LDR X2, [X9]
	0x036727E0 BL 0x366A4BC
	0x036727E4 LDRB W8, [X19 + 0x48]
	0x036727E8 LDR X20, [X19 + 0x88]
	0x036727EC CBZ W8, 0x3672830
	0x036727F0 ADRP X21, 0xACB000
	0x036727F4 LDR X21, [X21 + 0x8C8]
	0x036727F8 LDR X0, [X21]
	0x036727FC LDR W8, [X0 + 0xE0]
	0x03672800 CBNZ W8, 0x3672808
	0x03672804 BL 0x1C16DFC
	0x03672808 CBZ X20, 0x36729C4
	0x0367280C LDR X8, [X21]
	0x03672810 MOV X0, X20
	0x03672814 MOV X1, X22
	0x03672818 MOV X3, X19
	0x0367281C LDR X8, [X8 + 0xB8]
	0x03672820 MOV X4, X31
	0x03672824 LDR X2, [X8 + 0x8]
	0x03672828 BL 0x36AB450
	0x0367282C B 0x36724E8
	0x03672830 CBZ X20, 0x36729C4
	0x03672834 MOV X0, X20
	0x03672838 MOV X1, X22
	0x0367283C MOV X2, X31
	0x03672840 BL 0x36BFAC4
	0x03672844 MOVZ W0, 0x1
	0x03672848 B 0x36724EC
	0x0367284C CBZ X21, 0x36728FC
	0x03672850 MOV X0, X21
	0x03672854 MOV X1, X31
	0x03672858 BL 0x36C2184
	0x0367285C STR X0, [X19 + 0x88]
	0x03672860 MOV X0, X19
	0x03672864 MOV X1, X31
	0x03672868 BL 0x367D808
	0x0367286C MOV X22, X0
	0x03672870 LDR X0, [X19 + 0x88]
	0x03672874 CBZ X0, 0x3672900
	0x03672878 MOV X1, X31
	0x0367287C BL 0x36C1DF8
	0x03672880 CBZ X0, 0x3672904
	0x03672884 ADRP X9, 0xA8E000
	0x03672888 LDR X9, [X9 + 0xBB8]
	0x0367288C LDR X8, [X0]
	0x03672890 LDR X1, [X9]
	0x03672894 LDRB W10, [X8 + 0x130]
	0x03672898 LDRB W9, [X1 + 0x130]
	0x0367289C CMP W10, W9
	0x036728A0 B.CC 0x36728F8
	0x036728A4 LDR X8, [X8 + 0xC8]
	0x036728A8 ADD X8, X8, X9, 0x3, LSL
	0x036728AC LDUR X8, [X8 - 0x8]
	0x036728B0 CMP X8, X1
	0x036728B4 B.NE 0x36728F8
	0x036728B8 CBZ X22, 0x3672908
	0x036728BC LDR X8, [X22]
	0x036728C0 LDR X1, [X0 + 0x10]
	0x036728C4 LDP X9, X2, [X8 + 0x138]
	0x036728C8 MOV X0, X22
	0x036728CC BLR X9
	0x036728D0 TBZ X0, 0x0, 0x367290C
	0x036728D4 MOVZ W8, 0x1
	0x036728D8 MOV X0, X21
	0x036728DC MOV X1, X31
	0x036728E0 STRB W8, [X20]
	0x036728E4 BL 0x36AC3C8
	0x036728E8 B 0x36724E8
	0x036728EC BL 0x1C171E0
	0x036728F0 MOV X0, X22
	0x036728F4 BL 0x1C171E0
	0x036728F8 BL 0x1C171E0
	0x036728FC BL 0x1C16F20
	0x03672900 BL 0x1C16F20
	0x03672904 BL 0x1C16F20
	0x03672908 BL 0x1C16F20
	0x0367290C LDR X0, [X19 + 0x88]
	0x03672910 CBNZ X0, 0x3672918
	0x03672914 BL 0x1C16F20
	0x03672918 MOV X1, X31
	0x0367291C BL 0x36AC3C8
	0x03672920 ADRP X0, 0xAAC000
	0x03672924 LDR X0, [X0 + 0x330]
	0x03672928 BL 0x1C16D08
	0x0367292C BL 0x1C16F10
	0x03672930 MOV X19, X0
	0x03672934 ADRP X0, 0xACB000
	0x03672938 LDR X0, [X0 + 0x8D0]
	0x0367293C BL 0x1C16D08
	0x03672940 MOV X1, X0
	0x03672944 MOVZ W2, 0x7
	0x03672948 MOV X0, X19
	0x0367294C MOV X3, X31
	0x03672950 BL 0x367A0D4
	0x03672954 ADRP X0, 0xACB000
	0x03672958 LDR X0, [X0 + 0x9B8]
	0x0367295C BL 0x1C16D08
	0x03672960 MOV X1, X0
	0x03672964 MOV X0, X19
	0x03672968 BL 0x1C16DEC
	0x0367296C B 0x367298C
	0x03672970 B 0x367298C
	0x03672974 B 0x367298C
	0x03672978 B 0x367298C
	0x0367297C B 0x367298C

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X21, 0xD6F000
	012 Move W8, [X21+1920]
	013 Move X19, X1
	014 Move X20, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {36}
	019 Move X0, 0xACC000
	020 Move X0, [X0+2248]
	021 Call 0x1C17CF4
	022 Move X0, 0xACC000
	023 Move X0, [X0+2272]
	024 Call 0x1C17CF4
	025 Move X0, 0xACC000
	026 Move X0, [X0+2080]
	027 Call 0x1C17CF4
	028 Move X0, 0xACC000
	029 Move X0, [X0+2280]
	030 Call 0x1C17CF4
	031 Move X0, 0xACC000
	032 Move X0, [X0+2288]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X21+1920], W8
	036 Move X23, [X20+136]
	037 Compare X23, 0
	038 JumpIfEqual {170}
	039 Move X27, 0xACC000
	040 Move X26, 0xACC000
	041 Move X22, [X20+152]
	042 Move X27, [X27+2272]
	043 Move X26, [X26+2080]
	044 Compare X22, 0
	045 JumpIfEqual {66}
	046 Move X21, [X20+64]
	047 Move X0, X20
	048 Call FtpControlStream.IsFtpDataStreamWriteable, X0
	049 Move X8, [X27]
	050 Move W23, W0
	051 Move X0, X8
	052 Call 0x1C17F10
	053 Move X24, X0
	054 Compare X21, 0
	055 JumpIfEqual {59}
	056 Move X1, [X26]
	057 Move X8, [X21]
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Move X0, X24
	060 Move X1, X22
	061 Move X2, X21
	062 Move W3, W23
	063 Call FtpDataStream..ctor, X0, X1, X2, X3
	064 Move [X19], X24
	065 Move [X20+152], X31
	066 Move X8, 0xACC000
	067 Move X8, [X8+2280]
	068 Move X0, [X8]
	069 Call 0x1C17F10
	070 Move W2, 1
	071 Move X1, X23
	072 Move X3, X31
	073 Move X21, X0
	074 Call NetworkStream..ctor, X0, X1, X2
	075 Move X0, X20
	076 Move X1, X31
	077 Call NetworkStreamWrapper.get_UsingSecureStream, X0
	078 Move TEMP, X0
	079 And TEMP, TEMP, 1
	080 Compare TEMP, 1
	081 JumpIfNotEqual {139}
	082 Move X22, [X20+64]
	083 Compare X22, 0
	084 JumpIfEqual {183}
	085 Move X1, [X26]
	086 Move X8, [X22]
	087 NotImplemented "Instruction CMP not yet implemented."
	088 Move X8, [X22]
	089 Move X23, [X20+136]
	090 Move X0, X22
	091 Move X9, [X8+472]
	092 Move X1, [X8+480]
	093 NotImplemented "Instruction BLR not yet implemented."
	094 Compare X0, 0
	095 JumpIfEqual {183}
	096 Move X1, X31
	097 Call Uri.get_Host, X0
	098 Move X24, X0
	099 Move X0, X22
	100 Move X1, X31
	101 Call FtpWebRequest.get_ClientCertificates, X0
	102 Move X8, 0xACC000
	103 Move X8, [X8+2288]
	104 Move X25, X0
	105 Move X8, [X8]
	106 Move X0, X8
	107 Call 0x1C17F10
	108 Move X1, X21
	109 Move X2, X23
	110 Move X3, X24
	111 Move X4, X25
	112 Move X22, X0
	113 Call TlsStream..ctor, X0, X1, X2, X3, X4
	114 Move W8, [X20+72]
	115 Compare W8, 0
	116 JumpIfEqual {134}
	117 Move [X20+152], X22
	118 Move X19, 0xACC000
	119 Move X19, [X19+2248]
	120 Move X0, [X19]
	121 Move W8, [X0+224]
	122 Compare W8, 0
	123 JumpIfNotEqual {125}
	124 Call 0x1C17DFC
	125 Compare X22, 0
	126 JumpIfEqual {183}
	127 Move X8, [X19]
	128 Move X0, X22
	129 Move X2, X20
	130 Move X8, [X8+184]
	131 Move X1, [X8+16]
	132 Call TlsStream.BeginAuthenticateAsClient, X0, X1, X2
	133 Move W0, 2
	134 Compare X22, 0
	135 JumpIfEqual {183}
	136 Move X0, X22
	137 Call TlsStream.AuthenticateAsClient, X0
	138 Move X21, X22
	139 Move X22, [X20+64]
	140 Move X0, X20
	141 Call FtpControlStream.IsFtpDataStreamWriteable, X0
	142 Move X8, [X27]
	143 Move W20, W0
	144 Move X0, X8
	145 Call 0x1C17F10
	146 Move X23, X0
	147 Compare X22, 0
	148 JumpIfEqual {152}
	149 Move X1, [X26]
	150 Move X8, [X22]
	151 NotImplemented "Instruction CMP not yet implemented."
	152 Move X0, X23
	153 Move X1, X21
	154 Move X2, X22
	155 Move W3, W20
	156 Call FtpDataStream..ctor, X0, X1, X2, X3
	157 Move [X19], X23
	158 Move W0, 4
	159 Move X20, [X31+64]
	160 Move X19, [X31+72]
	161 Move X22, [X31+48]
	162 Move X21, [X31+56]
	163 Move X24, [X31+32]
	164 Move X23, [X31+40]
	165 Move X26, [X31+16]
	166 Move X25, [X31+24]
	167 Move X30, [X31+80]
	168 Move X27, [X31+88]
	169 Return X0
	170 Move X0, 0xACC000
	171 Move X0, [X0+2120]
	172 Call 0x1C17D08
	173 Call 0x1C17F10
	174 Move X1, X31
	175 Move X19, X0
	176 Call InternalException..ctor, X0
	177 Move X0, 0xACC000
	178 Move X0, [X0+2296]
	179 Call 0x1C17D08
	180 Move X1, X0
	181 Move X0, X19
	182 Call 0x1C17DEC
	183 Call 0x1C17F20
	184 Move X0, X21
	185 Call 0x1C181E0
	186 Move X0, X22
	187 Call 0x1C181E0

Method: System.Void ClearState()

Disassembly:
	0x03672B14 ADDS W31, W0, 0x1
	0x03672B18 B.EQ 0x3672B68
	0x03672B1C CMP W0, W21
	0x03672B20 B.LE 0x3672B68
	0x03672B24 ADD W1, W21, 0x1
	0x03672B28 SUB W2, W0, W1
	0x03672B2C MOV X0, X20
	0x03672B30 MOV X3, X31
	0x03672B34 BL 0x3228DE4
	0x03672B38 MOV X20, X0
	0x03672B3C MOV X0, X31
	0x03672B40 BL 0x333AB78
	0x03672B44 MOV X2, X0
	0x03672B48 ADD X3, X31, 0x8
	0x03672B4C MOVZ W1, 0x3
	0x03672B50 MOV X0, X20
	0x03672B54 MOV X4, X31
	0x03672B58 BL 0x337D7DC
	0x03672B5C TBZ X0, 0x0, 0x3672B68
	0x03672B60 LDR X8, [X31 + 0x8]
	0x03672B64 STR X8, [X19 + 0xC8]
	0x03672B68 LDP X20, X19, [X31 + 0x20]
	0x03672B6C LDP X30, X21, [X31 + 0x10]
	0x03672B70 ADD X31, X31, 0x30
	0x03672B74 RET
	0x03672B78 BL 0x1C16F20
	0x03672B7C STR X30, [X31 - 0x40]!
	0x03672B80 STP X24, X23, [X31 + 0x10]
	0x03672B84 STP X22, X21, [X31 + 0x20]
	0x03672B88 STP X20, X19, [X31 + 0x30]
	0x03672B8C ADRP X22, 0xD6E000
	0x03672B90 LDRB W8, [X22 + 0x78A]
	0x03672B94 MOV X20, X2
	0x03672B98 MOV X21, X1
	0x03672B9C MOV X19, X0
	0x03672BA0 TBNZ X8, 0x0, 0x3672C24

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xD6F000
	006 Move X20, 0xA83000
	007 Move W8, [X21+1921]
	008 Move X20, [X20+2544]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xA83000
	015 Move X0, [X0+2544]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+1921], W8
	019 Move TEMP, 0
	020 Not TEMP
	021 Move X8, TEMP
	022 Move [X19+200], X8
	023 Move X0, [X20]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {29}
	027 Call 0x1C17DFC
	028 Move X0, [X20]
	029 Move X8, [X0+184]
	030 Move X0, X19
	031 Move X1, X31
	032 Move X2, X31
	033 Move X8, [X8+16]
	034 Move [X19+248], X31
	035 Move [X19+216], W31
	036 Move [X19+260], W31
	037 Move [X19+264], X31
	038 Move [X19+144], X31
	039 Move [X19+152], X31
	040 Move [X19+208], X8
	041 Move [X19+136], X31
	042 Move X20, [X31+16]
	043 Move X19, [X31+24]
	044 Move W3, W31
	045 Move X30, [X31+32]
	046 Move X21, [X31+40]
	047 Call CommandStream.InitCommandPipeline, X0, X1, X2, X3
	048 Return 

Method: System.Net.CommandStream/PipelineInstruction PipelineCallback(System.Net.CommandStream/PipelineEntry entry, System.Net.ResponseDescription response, System.Boolean timeout, ref System.IO.Stream stream)

Disassembly:
	0x03672BA4 ADRP X0, 0xA8A000
	0x03672BA8 LDR X0, [X0 + 0x8D8]
	0x03672BAC BL 0x1C16CF4
	0x03672BB0 ADRP X0, 0xACB000
	0x03672BB4 LDR X0, [X0 + 0x9C8]
	0x03672BB8 BL 0x1C16CF4
	0x03672BBC ADRP X0, 0xA8A000
	0x03672BC0 LDR X0, [X0 + 0x3A0]
	0x03672BC4 BL 0x1C16CF4
	0x03672BC8 ADRP X0, 0xA83000
	0x03672BCC LDR X0, [X0 + 0xA28]
	0x03672BD0 BL 0x1C16CF4
	0x03672BD4 ADRP X0, 0xA82000
	0x03672BD8 LDR X0, [X0 + 0xA08]
	0x03672BDC BL 0x1C16CF4
	0x03672BE0 ADRP X0, 0xACB000
	0x03672BE4 LDR X0, [X0 + 0x9D0]
	0x03672BE8 BL 0x1C16CF4
	0x03672BEC ADRP X0, 0xACB000
	0x03672BF0 LDR X0, [X0 + 0x9D8]
	0x03672BF4 BL 0x1C16CF4
	0x03672BF8 ADRP X0, 0xAAB000
	0x03672BFC LDR X0, [X0 + 0xB08]
	0x03672C00 BL 0x1C16CF4
	0x03672C04 ADRP X0, 0xA82000
	0x03672C08 LDR X0, [X0 + 0xEC8]
	0x03672C0C BL 0x1C16CF4
	0x03672C10 ADRP X0, 0xACB000
	0x03672C14 LDR X0, [X0 + 0x9E0]
	0x03672C18 BL 0x1C16CF4
	0x03672C1C MOVZ W8, 0x1
	0x03672C20 STRB W8, [X22 + 0x78A]
	0x03672C24 STR X31, [X31 + 0x8]
	0x03672C28 CBZ X20, 0x3672E6C
	0x03672C2C LDR X8, [X20]
	0x03672C30 MOV X0, X20
	0x03672C34 LDP X9, X1, [X8 + 0x1D8]
	0x03672C38 BLR X9
	0x03672C3C CBZ X21, 0x3672E6C
	0x03672C40 ADRP X8, 0xACB000
	0x03672C44 LDR X8, [X8 + 0x9E0]
	0x03672C48 MOV X20, X0
	0x03672C4C MOV X0, X21
	0x03672C50 MOV X2, X31
	0x03672C54 LDR X1, [X8]
	0x03672C58 BL 0x322C2F0
	0x03672C5C ADDS W31, W0, 0x1
	0x03672C60 B.EQ 0x3672E58
	0x03672C64 ADD W22, W0, 0x4
	0x03672C68 MOVZ W1, 0x28
	0x03672C6C MOV X0, X21
	0x03672C70 MOV X2, X31
	0x03672C74 BL 0x322C668
	0x03672C78 ADDS W31, W0, 0x1
	0x03672C7C B.NE 0x3672C84
	0x03672C80 LDR W0, [X21 + 0x10]
	0x03672C84 SUBS W2, W0, W22
	0x03672C88 B.LE 0x3672E58
	0x03672C8C MOV X0, X21
	0x03672C90 MOV W1, W22
	0x03672C94 MOV X3, X31
	0x03672C98 BL 0x3228DE4
	0x03672C9C ADRP X8, 0xA8A000
	0x03672CA0 LDR X8, [X8 + 0x8D8]
	0x03672CA4 MOV X21, X0
	0x03672CA8 MOVZ W1, 0x4
	0x03672CAC LDR X8, [X8]
	0x03672CB0 MOV X0, X8
	0x03672CB4 BL 0x1C16D6C
	0x03672CB8 ADRP X8, 0xACB000
	0x03672CBC LDR X8, [X8 + 0x9C8]
	0x03672CC0 MOV X2, X31
	0x03672CC4 MOV X22, X0
	0x03672CC8 LDR X1, [X8]
	0x03672CCC BL 0x32C5BD8
	0x03672CD0 CBZ X21, 0x3672E6C
	0x03672CD4 MOV X0, X21
	0x03672CD8 MOV X1, X22
	0x03672CDC MOV X2, X31
	0x03672CE0 BL 0x322BC58
	0x03672CE4 CBZ X0, 0x3672E6C
	0x03672CE8 ADRP X8, 0xAAB000
	0x03672CEC ADRP X9, 0xACB000
	0x03672CF0 LDR X8, [X8 + 0xB08]
	0x03672CF4 LDR X9, [X9 + 0x9D8]
	0x03672CF8 MOV X3, X31
	0x03672CFC MOV X21, X0
	0x03672D00 LDR X1, [X8]
	0x03672D04 LDR X2, [X9]
	0x03672D08 BL 0x32293BC
	0x03672D0C CBZ X0, 0x3672E6C
	0x03672D10 ADRP X8, 0xA82000
	0x03672D14 ADRP X9, 0xACB000
	0x03672D18 LDR X8, [X8 + 0xA08]
	0x03672D1C LDR X9, [X9 + 0x9D0]
	0x03672D20 MOV X3, X31
	0x03672D24 LDR X1, [X8]
	0x03672D28 LDR X2, [X9]
	0x03672D2C BL 0x32293BC
	0x03672D30 CBZ X20, 0x3672E6C
	0x03672D34 MOV X22, X0
	0x03672D38 MOV X0, X20
	0x03672D3C MOV X1, X31
	0x03672D40 BL 0x361B448
	0x03672D44 CBZ X0, 0x3672E6C
	0x03672D48 LDR W8, [X0 + 0x10]
	0x03672D4C MOV X23, X0
	0x03672D50 SUBS W1, W8, 0x1
	0x03672D54 B.LT 0x3672DCC
	0x03672D58 MOV X0, X23
	0x03672D5C MOV X2, X31
	0x03672D60 BL 0x3222A1C
	0x03672D64 AND W8, W0, 0xFFFF
	0x03672D68 CMP W8, 0x2F
	0x03672D6C B.EQ 0x3672DCC
	0x03672D70 ADRP X8, 0xA8A000
	0x03672D74 LDR X8, [X8 + 0x3A0]
	0x03672D78 LDR X0, [X8]
	0x03672D7C BL 0x1C16F10
	0x03672D80 MOV X1, X20
	0x03672D84 MOV X2, X31
	0x03672D88 MOV X24, X0
	0x03672D8C BL 0x36281F8
	0x03672D90 ADRP X8, 0xA82000
	0x03672D94 LDR X8, [X8 + 0xEC8]
	0x03672D98 MOV X0, X23
	0x03672D9C MOV X2, X31
	0x03672DA0 LDR X1, [X8]
	0x03672DA4 BL 0x321B938
	0x03672DA8 CBZ X24, 0x3672E6C
	0x03672DAC MOV X1, X0
	0x03672DB0 MOV X0, X24
	0x03672DB4 MOV X2, X31
	0x03672DB8 BL 0x36288CC
	0x03672DBC MOV X0, X24
	0x03672DC0 MOV X1, X31
	0x03672DC4 BL 0x3628A38
	0x03672DC8 MOV X20, X0
	0x03672DCC ADRP X8, 0xA83000
	0x03672DD0 LDR X8, [X8 + 0xA28]
	0x03672DD4 LDR X0, [X8]
	0x03672DD8 LDR W8, [X0 + 0xE0]
	0x03672DDC CBNZ W8, 0x3672DE4
	0x03672DE0 BL 0x1C16DFC
	0x03672DE4 ADD X2, X31, 0x8
	0x03672DE8 MOV X0, X20
	0x03672DEC MOV X1, X22
	0x03672DF0 MOV X3, X31
	0x03672DF4 BL 0x36241D0
	0x03672DF8 TBZ X0, 0x0, 0x3672E70
	0x03672DFC CBZ X20, 0x3672E6C
	0x03672E00 LDR X1, [X31 + 0x8]
	0x03672E04 MOV X0, X20
	0x03672E08 MOV X2, X31
	0x03672E0C BL 0x3624E88
	0x03672E10 TBZ X0, 0x0, 0x3672E70
	0x03672E14 MOV X0, X20
	0x03672E18 MOV X1, X31
	0x03672E1C BL 0x361C120
	0x03672E20 CBZ X0, 0x3672E6C
	0x03672E24 MOV X20, X0
	0x03672E28 LDR X0, [X31 + 0x8]
	0x03672E2C CBZ X0, 0x3672E6C
	0x03672E30 MOV X1, X31
	0x03672E34 BL 0x361C120
	0x03672E38 CBZ X0, 0x3672E6C
	0x03672E3C LDR W8, [X0 + 0x18]
	0x03672E40 LDR W9, [X20 + 0x18]
	0x03672E44 SUB W8, W8, 0x1
	0x03672E48 CMP W8, W9
	0x03672E4C B.NE 0x3672E70
	0x03672E50 LDR X8, [X31 + 0x8]
	0x03672E54 STR X8, [X19 + 0xF8]
	0x03672E58 LDP X20, X19, [X31 + 0x30]
	0x03672E5C LDP X22, X21, [X31 + 0x20]
	0x03672E60 LDP X24, X23, [X31 + 0x10]
	0x03672E64 LDR X30, [X31], #0x40
	0x03672E68 RET
	0x03672E6C BL 0x1C16F20
	0x03672E70 ADRP X0, 0xACB000
	0x03672E74 LDR X0, [X0 + 0x9E8]
	0x03672E78 BL 0x1C16D08
	0x03672E7C MOV X1, X21
	0x03672E80 MOV X2, X31
	0x03672E84 BL 0x32094D4
	0x03672E88 MOV X19, X0
	0x03672E8C ADRP X0, 0xAAE000
	0x03672E90 LDR X0, [X0 + 0xC08]
	0x03672E94 BL 0x1C16D08
	0x03672E98 BL 0x1C16F10
	0x03672E9C MOV X1, X19
	0x03672EA0 MOV X2, X31
	0x03672EA4 MOV X20, X0
	0x03672EA8 BL 0x33674A0
	0x03672EAC ADRP X0, 0xACB000
	0x03672EB0 LDR X0, [X0 + 0x9F0]
	0x03672EB4 BL 0x1C16D08
	0x03672EB8 MOV X1, X0
	0x03672EBC MOV X0, X20
	0x03672EC0 BL 0x1C16DEC
	0x03672EC4 STP X30, X21, [X31 - 0x20]!
	0x03672EC8 STP X20, X19, [X31 + 0x10]
	0x03672ECC ADRP X20, 0xD6E000
	0x03672ED0 ADRP X21, 0xA8A000
	0x03672ED4 LDRB W8, [X20 + 0x788]
	0x03672ED8 LDR X21, [X21 + 0x8D8]
	0x03672EDC MOV X19, X1
	0x03672EE0 TBNZ X8, 0x0, 0x3672F04
	0x03672EE4 ADRP X0, 0xA8A000
	0x03672EE8 LDR X0, [X0 + 0x8D8]
	0x03672EEC BL 0x1C16CF4
	0x03672EF0 ADRP X0, 0xA8A000
	0x03672EF4 LDR X0, [X0 + 0x9E8]
	0x03672EF8 BL 0x1C16CF4
	0x03672EFC MOVZ W8, 0x1
	0x03672F00 STRB W8, [X20 + 0x788]
	0x03672F04 LDR X0, [X21]
	0x03672F08 MOVZ W1, 0x1
	0x03672F0C BL 0x1C16D6C
	0x03672F10 CBZ X0, 0x3672FA0
	0x03672F14 LDR W8, [X0 + 0x18]
	0x03672F18 MOV X1, X0
	0x03672F1C CBZ W8, 0x3672FA4
	0x03672F20 MOVZ W8, 0x20
	0x03672F24 STRH W8, [X1 + 0x20]
	0x03672F28 CBZ X19, 0x3672FA0
	0x03672F2C MOV X0, X19
	0x03672F30 MOV X2, X31
	0x03672F34 BL 0x3229E68
	0x03672F38 CBZ X0, 0x3672FA0
	0x03672F3C LDR W8, [X0 + 0x18]
	0x03672F40 CMP W8, 0x1
	0x03672F44 CSEL X8, X0, X31, GT
	0x03672F48 B.LE 0x3672FA8
	0x03672F4C CBZ X8, 0x3672FA0
	0x03672F50 LDR W9, [X8 + 0x18]
	0x03672F54 CMP W9, 0x1
	0x03672F58 B.LS 0x3672FA4
	0x03672F5C ADRP X20, 0xA8A000
	0x03672F60 LDR X19, [X8 + 0x28]
	0x03672F64 LDR X20, [X20 + 0x9E8]
	0x03672F68 MOV X0, X31
	0x03672F6C BL 0x333AB78
	0x03672F70 LDR X8, [X20]
	0x03672F74 MOV X20, X0
	0x03672F78 LDR W9, [X8 + 0xE0]
	0x03672F7C CBNZ W9, 0x3672F88
	0x03672F80 MOV X0, X8
	0x03672F84 BL 0x1C16DFC
	0x03672F88 MOV X0, X19
	0x03672F8C MOV X1, X20
	0x03672F90 LDP X20, X19, [X31 + 0x10]
	0x03672F94 MOV X2, X31
	0x03672F98 LDP X30, X21, [X31], #0x20
	0x03672F9C B 0x3321004
	0x03672FA0 BL 0x1C16F20
	0x03672FA4 BL 0x1C16F28
	0x03672FA8 ADRP X0, 0xACB000
	0x03672FAC LDR X0, [X0 + 0x9F8]
	0x03672FB0 BL 0x1C16D08
	0x03672FB4 MOV X1, X19
	0x03672FB8 MOV X2, X31
	0x03672FBC BL 0x32094D4
	0x03672FC0 MOV X19, X0
	0x03672FC4 ADRP X0, 0xAAE000
	0x03672FC8 LDR X0, [X0 + 0xC08]
	0x03672FCC BL 0x1C16D08
	0x03672FD0 BL 0x1C16F10
	0x03672FD4 MOV X1, X19
	0x03672FD8 MOV X2, X31
	0x03672FDC MOV X20, X0
	0x03672FE0 BL 0x33674A0
	0x03672FE4 ADRP X0, 0xACB000
	0x03672FE8 LDR X0, [X0 + 0xA00]
	0x03672FEC BL 0x1C16D08
	0x03672FF0 MOV X1, X0
	0x03672FF4 MOV X0, X20
	0x03672FF8 BL 0x1C16DEC
	0x03672FFC SUB X31, X31, 0x60
	0x03673000 STR X30, [X31 + 0x10]
	0x03673004 STP X26, X25, [X31 + 0x20]
	0x03673008 STP X24, X23, [X31 + 0x30]
	0x0367300C STP X22, X21, [X31 + 0x40]
	0x03673010 STP X20, X19, [X31 + 0x50]
	0x03673014 ADRP X22, 0xD6D000
	0x03673018 ADRP X21, 0xA89000
	0x0367301C LDRB W8, [X22 + 0x789]
	0x03673020 LDR X21, [X21 + 0x8D8]
	0x03673024 MOV X19, X1
	0x03673028 MOV X20, X0
	0x0367302C TBNZ X8, 0x0, 0x367305C
	0x03673030 ADRP X0, 0xA89000
	0x03673034 LDR X0, [X0 + 0x8D8]
	0x03673038 BL 0x1C16CF4
	0x0367303C ADRP X0, 0xA89000
	0x03673040 LDR X0, [X0 + 0x9E8]
	0x03673044 BL 0x1C16CF4
	0x03673048 ADRP X0, 0xA81000
	0x0367304C LDR X0, [X0 + 0x9F0]
	0x03673050 BL 0x1C16CF4
	0x03673054 MOVZ W8, 0x1
	0x03673058 STRB W8, [X22 + 0x789]
	0x0367305C LDR X8, [X20 + 0xD0]
	0x03673060 LDR X0, [X21]
	0x03673064 MOVZ W1, 0x2
	0x03673068 STR X8, [X31 + 0x18]
	0x0367306C BL 0x1C16D6C
	0x03673070 CBZ X0, 0x36732C8
	0x03673074 LDR W8, [X0 + 0x18]
	0x03673078 MOV X1, X0
	0x0367307C CBZ W8, 0x36732CC
	0x03673080 MOVZ W9, 0x20
	0x03673084 CMP W8, 0x1
	0x03673088 STRH W9, [X1 + 0x20]
	0x0367308C B.EQ 0x36732CC
	0x03673090 MOVZ W8, 0x2E
	0x03673094 STRH W8, [X1 + 0x22]
	0x03673098 CBZ X19, 0x36732C8
	0x0367309C MOV X0, X19
	0x036730A0 MOV X2, X31
	0x036730A4 BL 0x3229E68
	0x036730A8 CBZ X0, 0x36732C8
	0x036730AC LDR W8, [X0 + 0x18]
	0x036730B0 MOV X19, X0
	0x036730B4 CMP W8, 0x1
	0x036730B8 B.LE 0x3673328
	0x036730BC LDR X21, [X19 + 0x28]
	0x036730C0 CBZ X21, 0x36732C8
	0x036730C4 LDR W8, [X21 + 0x10]
	0x036730C8 CMP W8, 0xD
	0x036730CC B.LE 0x3673328
	0x036730D0 MOVZ W2, 0x4
	0x036730D4 MOV X0, X21
	0x036730D8 MOV W1, W31
	0x036730DC MOV X3, X31
	0x036730E0 BL 0x3228DE4
	0x036730E4 MOV X20, X0
	0x036730E8 MOV X0, X31
	0x036730EC BL 0x333AB78
	0x036730F0 ADRP X26, 0xA89000
	0x036730F4 LDR X26, [X26 + 0x9E8]
	0x036730F8 MOV X22, X0
	0x036730FC LDR X8, [X26]
	0x03673100 LDR W9, [X8 + 0xE0]
	0x03673104 CBNZ W9, 0x3673110
	0x03673108 MOV X0, X8
	0x0367310C BL 0x1C16DFC
	0x03673110 MOV X0, X20
	0x03673114 MOV X1, X22
	0x03673118 MOV X2, X31
	0x0367311C BL 0x33205E4
	0x03673120 MOV W20, W0
	0x03673124 MOVZ W1, 0x4
	0x03673128 MOVZ W2, 0x2
	0x0367312C MOV X0, X21
	0x03673130 MOV X3, X31
	0x03673134 BL 0x3228DE4
	0x03673138 MOV X22, X0
	0x0367313C MOV X0, X31
	0x03673140 BL 0x333AB78
	0x03673144 MOV X1, X0
	0x03673148 MOV X0, X22
	0x0367314C MOV X2, X31
	0x03673150 BL 0x331FC30
	0x03673154 SXTH W22, W0
	0x03673158 MOVZ W1, 0x6
	0x0367315C MOVZ W2, 0x2
	0x03673160 MOV X0, X21
	0x03673164 MOV X3, X31
	0x03673168 BL 0x3228DE4
	0x0367316C MOV X23, X0
	0x03673170 MOV X0, X31
	0x03673174 BL 0x333AB78
	0x03673178 MOV X1, X0
	0x0367317C MOV X0, X23
	0x03673180 MOV X2, X31
	0x03673184 BL 0x331FC30
	0x03673188 SXTH W23, W0
	0x0367318C MOVZ W1, 0x8
	0x03673190 MOVZ W2, 0x2
	0x03673194 MOV X0, X21
	0x03673198 MOV X3, X31
	0x0367319C BL 0x3228DE4
	0x036731A0 MOV X24, X0
	0x036731A4 MOV X0, X31
	0x036731A8 BL 0x333AB78
	0x036731AC MOV X1, X0
	0x036731B0 MOV X0, X24
	0x036731B4 MOV X2, X31
	0x036731B8 BL 0x331FC30
	0x036731BC SXTH W24, W0
	0x036731C0 MOVZ W1, 0xA
	0x036731C4 MOVZ W2, 0x2
	0x036731C8 MOV X0, X21
	0x036731CC MOV X3, X31
	0x036731D0 BL 0x3228DE4
	0x036731D4 MOV X25, X0
	0x036731D8 MOV X0, X31
	0x036731DC BL 0x333AB78
	0x036731E0 MOV X1, X0
	0x036731E4 MOV X0, X25
	0x036731E8 MOV X2, X31
	0x036731EC BL 0x331FC30
	0x036731F0 SXTH W25, W0
	0x036731F4 MOVZ W1, 0xC
	0x036731F8 MOVZ W2, 0x2
	0x036731FC MOV X0, X21
	0x03673200 MOV X3, X31
	0x03673204 BL 0x3228DE4
	0x03673208 MOV X21, X0
	0x0367320C MOV X0, X31
	0x03673210 BL 0x333AB78
	0x03673214 MOV X1, X0
	0x03673218 MOV X0, X21
	0x0367321C MOV X2, X31
	0x03673220 BL 0x331FC30
	0x03673224 LDR W8, [X19 + 0x18]
	0x03673228 SXTH W21, W0
	0x0367322C CMP W8, 0x3
	0x03673230 B.GE 0x367323C
	0x03673234 MOV W7, W31
	0x03673238 B 0x3673274
	0x0367323C LDR X19, [X19 + 0x30]
	0x03673240 MOV X0, X31
	0x03673244 BL 0x333AB78
	0x03673248 LDR X8, [X26]
	0x0367324C MOV X26, X0
	0x03673250 LDR W9, [X8 + 0xE0]
	0x03673254 CBNZ W9, 0x3673260
	0x03673258 MOV X0, X8
	0x0367325C BL 0x1C16DFC
	0x03673260 MOV X0, X19
	0x03673264 MOV X1, X26
	0x03673268 MOV X2, X31
	0x0367326C BL 0x331FC30
	0x03673270 SXTH W7, W0
	0x03673274 STP X31, X31, [X31]
	0x03673278 ADD X0, X31, 0x8
	0x0367327C MOV W1, W20
	0x03673280 MOV W2, W22
	0x03673284 MOV W3, W23
	0x03673288 MOV W4, W24
	0x0367328C MOV W5, W25
	0x03673290 MOV W6, W21
	0x03673294 BL 0x335F594
	0x03673298 ADRP X9, 0xA81000
	0x0367329C LDR X8, [X31 + 0x8]
	0x036732A0 LDR X9, [X9 + 0x9F0]
	0x036732A4 STR X8, [X31 + 0x18]
	0x036732A8 LDR X0, [X9]
	0x036732AC LDR W8, [X0 + 0xE0]
	0x036732B0 CBNZ W8, 0x36732B8
	0x036732B4 BL 0x1C16DFC
	0x036732B8 ADD X0, X31, 0x18
	0x036732BC MOV X1, X31
	0x036732C0 BL 0x3361FC4
	0x036732C4 B 0x367332C
	0x036732C8 BL 0x1C16F20
	0x036732CC BL 0x1C16F28
	0x036732D0 B 0x36732D4
	0x036732D4 MOV X19, X0
	0x036732D8 CMP W1, 0x1
	0x036732DC B.NE 0x3673370
	0x036732E0 MOV X0, X19
	0x036732E4 BL 0x3EB1AD0
	0x036732E8 MOV X19, X0
	0x036732EC ADRP X0, 0xA88000
	0x036732F0 LDR X0, [X0 + 0x760]
	0x036732F4 BL 0x1C16D08
	0x036732F8 LDR X8, [X19]
	0x036732FC LDR X1, [X8]
	0x03673300 BL 0x1C17270
	0x03673304 TBNZ X0, 0x0, 0x3673324
	0x03673308 ADRP X0, 0xA88000
	0x0367330C LDR X0, [X0 + 0x578]
	0x03673310 BL 0x1C16D08
	0x03673314 LDR X8, [X19]
	0x03673318 LDR X1, [X8]
	0x0367331C BL 0x1C17270
	0x03673320 TBZ X0, 0x0, 0x3673348
	0x03673324 BL 0x3EB1AE0
	0x03673328 LDR X0, [X31 + 0x18]
	0x0367332C LDP X20, X19, [X31 + 0x50]
	0x03673330 LDP X22, X21, [X31 + 0x40]
	0x03673334 LDP X24, X23, [X31 + 0x30]
	0x03673338 LDP X26, X25, [X31 + 0x20]
	0x0367333C LDR X30, [X31 + 0x10]
	0x03673340 ADD X31, X31, 0x60
	0x03673344 RET
	0x03673348 MOVZ W0, 0x8
	0x0367334C BL 0x3EB1AF0
	0x03673350 LDR X8, [X19]
	0x03673354 STR X8, [X0]
	0x03673358 ADRP X1, 0x841000
	0x0367335C ADD X1, X1, 0xE58
	0x03673360 MOV X2, X31
	0x03673364 BL 0x3EB1B00
	0x03673368 MOV X19, X0
	0x0367336C BL 0x3EB1AE0
	0x03673370 MOV X0, X19
	0x03673374 BL 0x1D2C690
	0x03673378 BL 0x1990590
	0x0367337C STR X30, [X31 - 0x20]!
	0x03673380 STP X20, X19, [X31 + 0x10]
	0x03673384 ADRP X20, 0xD6D000
	0x03673388 LDRB W8, [X20 + 0x78C]
	0x0367338C MOV X19, X1
	0x03673390 TBNZ X8, 0x0, 0x36733A8
	0x03673394 ADRP X0, 0xA82000
	0x03673398 LDR X0, [X0 + 0x278]
	0x0367339C BL 0x1C16CF4
	0x036733A0 MOVZ W8, 0x1
	0x036733A4 STRB W8, [X20 + 0x78C]
	0x036733A8 CBZ X19, 0x3673428
	0x036733AC MOVZ W1, 0x22
	0x036733B0 MOV X0, X19
	0x036733B4 MOV X2, X31
	0x036733B8 BL 0x322BD98
	0x036733BC MOV W20, W0
	0x036733C0 MOVZ W1, 0x22
	0x036733C4 MOV X0, X19
	0x036733C8 MOV X2, X31
	0x036733CC BL 0x322C668
	0x036733D0 CMP W0, W20
	0x036733D4 B.EQ 0x3673408
	0x036733D8 ADDS W31, W20, 0x1
	0x036733DC B.EQ 0x3673408
	0x036733E0 ADDS W31, W0, 0x1
	0x036733E4 B.EQ 0x3673408
	0x036733E8 ORN W8, W31, W20, 0x0
	0x036733EC ADD W1, W20, 0x1
	0x036733F0 ADD W2, W0, W8
	0x036733F4 MOV X0, X19
	0x036733F8 LDP X20, X19, [X31 + 0x10]
	0x036733FC MOV X3, X31
	0x03673400 LDR X30, [X31], #0x20
	0x03673404 B 0x3228DE4

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+16], X30
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X24, 0xD6F000
	013 Move X23, 0xACC000
	014 Move W8, [X24+1922]
	015 Move X23, [X23+2304]
	016 Move X22, X4
	017 Move X20, X2
	018 Move X21, X1
	019 Move X19, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {86}
	024 Move X0, 0xAAA000
	025 Move X0, [X0+1824]
	026 Call 0x1C17CF4
	027 Move X0, 0xACC000
	028 Move X0, [X0+2312]
	029 Call 0x1C17CF4
	030 Move X0, 0xACC000
	031 Move X0, [X0+2080]
	032 Call 0x1C17CF4
	033 Move X0, 0xACC000
	034 Move X0, [X0+1128]
	035 Call 0x1C17CF4
	036 Move X0, 0xA82000
	037 Move X0, [X0+2512]
	038 Call 0x1C17CF4
	039 Move X0, 0xA82000
	040 Move X0, [X0+2288]
	041 Call 0x1C17CF4
	042 Move X0, 0xACC000
	043 Move X0, [X0+2288]
	044 Call 0x1C17CF4
	045 Move X0, 0xACC000
	046 Move X0, [X0+2320]
	047 Call 0x1C17CF4
	048 Move X0, 0xACC000
	049 Move X0, [X0+2304]
	050 Call 0x1C17CF4
	051 Move X0, 0xACC000
	052 Move X0, [X0+2328]
	053 Call 0x1C17CF4
	054 Move X0, 0xACC000
	055 Move X0, [X0+2336]
	056 Call 0x1C17CF4
	057 Move X0, 0xACC000
	058 Move X0, [X0+2344]
	059 Call 0x1C17CF4
	060 Move X0, 0xACC000
	061 Move X0, [X0+2352]
	062 Call 0x1C17CF4
	063 Move X0, 0xACC000
	064 Move X0, [X0+2360]
	065 Call 0x1C17CF4
	066 Move X0, 0xACC000
	067 Move X0, [X0+2368]
	068 Call 0x1C17CF4
	069 Move X0, 0xACC000
	070 Move X0, [X0+2376]
	071 Call 0x1C17CF4
	072 Move X0, 0xACC000
	073 Move X0, [X0+2384]
	074 Call 0x1C17CF4
	075 Move X0, 0xACC000
	076 Move X0, [X0+2392]
	077 Call 0x1C17CF4
	078 Move X0, 0xACC000
	079 Move X0, [X0+2400]
	080 Call 0x1C17CF4
	081 Move X0, 0xACC000
	082 Move X0, [X0+2408]
	083 Call 0x1C17CF4
	084 Move W8, 1
	085 Move [X24+1922], W8
	086 Move X0, [X23]
	087 Move [X31+12], W31
	088 Call 0x1C17F10
	089 Move X1, X31
	090 Move X23, X0
	091 Call Object..ctor, X0
	092 Compare X23, 0
	093 JumpIfEqual {524}
	094 Move X27, 0xACC000
	095 Move X27, [X27+1128]
	096 Move [X23+16], X19
	097 Move X0, [X27]
	098 Move W8, [X0+224]
	099 Compare W8, 0
	100 JumpIfNotEqual {102}
	101 Call 0x1C17DFC
	102 Call NetEventSource.get_IsEnabled
	103 Move TEMP, X0
	104 And TEMP, TEMP, 1
	105 Compare TEMP, 1
	106 JumpIfNotEqual {168}
	107 Move X8, 0xA82000
	108 Move X8, [X8+2512]
	109 Move W1, 2
	110 Move X0, [X8]
	111 Call 0x1C17D6C
	112 Move X8, 0xACC000
	113 Move X8, [X8+2408]
	114 Move X24, X0
	115 Move X25, [X8]
	116 Compare X21, 0
	117 JumpIfEqual {129}
	118 Compare X24, 0
	119 JumpIfEqual {524}
	120 Move X26, [X21+16]
	121 Compare X26, 0
	122 JumpIfEqual {132}
	123 Move X8, [X24]
	124 Move X0, X26
	125 Move X1, [X8+64]
	126 Call 0x1C17E00
	127 Compare X0, 0
	128 JumpIfNotEqual {132}
	129 Compare X24, 0
	130 JumpIfEqual {524}
	131 Move X26, X31
	132 Move W8, [X24+24]
	133 Compare W8, 0
	134 JumpIfEqual {525}
	135 Move [X24+32], X26
	136 Compare X20, 0
	137 JumpIfEqual {148}
	138 Move X26, [X20+24]
	139 Compare X26, 0
	140 JumpIfEqual {149}
	141 Move X8, [X24]
	142 Move X0, X26
	143 Move X1, [X8+64]
	144 Call 0x1C17E00
	145 Compare X0, 0
	146 JumpIfEqual {526}
	147 Move W8, [X24+24]
	148 Move X26, X31
	149 NotImplemented "Instruction CMP not yet implemented."
	150 Move X0, X25
	151 Move X1, X24
	152 Move X2, X31
	153 Move [X24+40], X26
	154 Call FormattableStringFactory.Create, X0, X1
	155 Move X8, [X27]
	156 Move X24, X0
	157 Move W9, [X8+224]
	158 Compare W9, 0
	159 JumpIfNotEqual {162}
	160 Move X0, X8
	161 Call 0x1C17DFC
	162 Move X8, 0xACC000
	163 Move X8, [X8+2360]
	164 Move X0, X19
	165 Move X1, X24
	166 Move X2, [X8]
	167 Call NetEventSource.Info, X0, X1, X2
	168 Compare X20, 0
	169 JumpIfEqual {280}
	170 Move W24, [X20+20]
	171 NotImplemented "Instruction CMP not yet implemented."
	172 Move W8, [X19+88]
	173 Add W31, W8, 1
	174 Move [X19+260], W24
	175 Move X8, [X20+24]
	176 Subtract W9, W24, 100
	177 NotImplemented "Instruction CMP not yet implemented."
	178 Move [X19+264], X8
	179 Move W8, [X19+88]
	180 Add W31, W8, 1
	181 Compare X21, 0
	182 JumpIfEqual {524}
	183 Move X8, 0xACC000
	184 Move X8, [X8+2344]
	185 Move X0, [X21+16]
	186 Move X2, X31
	187 Move X1, [X8]
	188 Call String.op_Equality, X0, X1
	189 Move TEMP, X0
	190 And TEMP, TEMP, 1
	191 Compare TEMP, 1
	192 JumpIfNotEqual {198}
	193 Move W8, [X20+20]
	194 Subtract W8, W8, 200
	195 NotImplemented "Instruction CMP not yet implemented."
	196 Move X0, X31
	197 Call Encoding.get_UTF8
	198 Move X0, [X21+16]
	199 Compare X0, 0
	200 JumpIfEqual {524}
	201 Move X8, 0xACC000
	202 Move X8, [X8+2384]
	203 Move X2, X31
	204 Move X1, [X8]
	205 Call String.IndexOf, X0, X1
	206 NotImplemented "Instruction CMP not yet implemented."
	207 Add W31, W0, 1
	208 Move W8, [X19+88]
	209 Move W9, 1
	210 Move [X19+256], W9
	211 Add W8, W8, 1
	212 Move [X19+88], W8
	213 Move W8, [X20+20]
	214 Subtract W9, W8, 400
	215 NotImplemented "Instruction CMP not yet implemented."
	216 Subtract W8, W8, 500
	217 NotImplemented "Instruction CMP not yet implemented."
	218 Move W8, [X19+256]
	219 NotImplemented "Instruction CMP not yet implemented."
	220 Move X0, [X21+16]
	221 Compare X0, 0
	222 JumpIfEqual {524}
	223 Move X8, 0xACC000
	224 Move X8, [X8+2352]
	225 Move X2, X31
	226 Move X1, [X8]
	227 Call String.IndexOf, X0, X1
	228 Add W31, W0, 1
	229 NotImplemented "Instruction CMP not yet implemented."
	230 NotImplemented "Instruction CMP not yet implemented."
	231 Move W8, 1
	232 Move [X19+256], W8
	233 Move W8, [X21+24]
	234 Move TEMP, X8
	235 And TEMP, TEMP, 4
	236 Compare TEMP, 4
	237 JumpIfNotEqual {252}
	238 Move W8, [X20+20]
	239 Subtract W9, W8, 200
	240 NotImplemented "Instruction CMP not yet implemented."
	241 Subtract W8, W8, 100
	242 NotImplemented "Instruction CMP not yet implemented."
	243 Add X5, X31, 12
	244 Move X0, X19
	245 Move X1, X21
	246 Move X2, X20
	247 Move W3, W31
	248 Call FtpControlStream.QueueOrCreateDataConection, X0, X1, X2, X3, X4, X5
	249 Move W8, [X31+12]
	250 Compare W8, 0
	251 JumpIfEqual {372}
	252 NotImplemented "Instruction CMP not yet implemented."
	253 NotImplemented "Instruction CMP not yet implemented."
	254 NotImplemented "Instruction CMP not yet implemented."
	255 Move X8, [X19+136]
	256 Compare X8, 0
	257 JumpIfEqual {280}
	258 Move W8, [X21+24]
	259 Move TEMP, X8
	260 And TEMP, TEMP, 2
	261 Compare TEMP, 2
	262 JumpIfEqual {345}
	263 Move X8, 0xACC000
	264 Move X8, [X8+2312]
	265 Add X1, X31, 8
	266 Move [X31+8], W24
	267 Move X0, [X8]
	268 Call 0x1C17E04
	269 Move X8, 0xACC000
	270 Move X2, [X21+16]
	271 Move X8, [X8+2336]
	272 Move X1, X0
	273 Move X3, X31
	274 Move X8, [X8]
	275 Move X0, X8
	276 Call SR.Format, X0, X1, X2
	277 Move X8, X0
	278 Move W0, W31
	279 Move [X19+104], X8
	280 Move W0, W31
	281 Move X0, X31
	282 Call Encoding.get_Default
	283 Move [X19+120], X0
	284 Compare X0, 0
	285 JumpIfEqual {524}
	286 Move X8, [X0]
	287 Move X9, [X8+824]
	288 Move X1, [X8+832]
	289 NotImplemented "Instruction BLR not yet implemented."
	290 Move [X19+128], X0
	291 Move W0, 1
	292 NotImplemented "Instruction CMP not yet implemented."
	293 NotImplemented "Instruction CMP not yet implemented."
	294 Move X8, 0xA81000
	295 Move X8, [X8+2288]
	296 Move X0, [X8]
	297 Call 0x1C17F10
	298 Move X1, X31
	299 Move X20, X0
	300 Call StringBuilder..ctor, X0
	301 Move [X19+160], X20
	302 Compare X20, 0
	303 JumpIfEqual {524}
	304 Move X1, [X19+264]
	305 Move X0, X20
	306 Move X2, X31
	307 Call StringBuilder.Append, X0, X1
	308 Move X0, [X19+168]
	309 Compare X0, 0
	310 JumpIfEqual {524}
	311 Move X1, [X19+264]
	312 Move X2, X31
	313 Call StringBuilder.Append, X0, X1
	314 NotImplemented "Instruction CMP not yet implemented."
	315 Move X0, [X19+176]
	316 Compare X0, 0
	317 JumpIfEqual {524}
	318 Move X1, [X20+24]
	319 Move X2, X31
	320 Call StringBuilder.Append, X0, X1
	321 Move X0, X19
	322 Move X1, X31
	323 Call NetworkStreamWrapper.CloseSocket, X0
	324 Move W8, [X20+20]
	325 Subtract W8, W8, 100
	326 NotImplemented "Instruction CMP not yet implemented."
	327 Move X0, X19
	328 Move X1, X31
	329 Call NetworkStreamWrapper.get_UsingSecureStream, X0
	330 Move TEMP, X0
	331 And TEMP, TEMP, 1
	332 Compare TEMP, 1
	333 JumpIfEqual {291}
	334 Move X8, 0xACB000
	335 Move X0, [X21+16]
	336 Move X8, [X8+2328]
	337 Move X2, X31
	338 Move X1, [X8]
	339 Call String.op_Equality, X0, X1
	340 Move TEMP, X0
	341 And TEMP, TEMP, 1
	342 Compare TEMP, 1
	343 JumpIfNotEqual {291}
	344 Move W0, 3
	345 Move X1, [X20+24]
	346 Move X0, X19
	347 Call FtpControlStream.TryUpdateContentLength, X0, X1
	348 Move X21, [X19+64]
	349 Compare X21, 0
	350 JumpIfEqual {524}
	351 Move X8, 0xACB000
	352 Move X8, [X8+2080]
	353 Move X1, [X8]
	354 Move X8, [X21]
	355 NotImplemented "Instruction CMP not yet implemented."
	356 Move X0, [X21+56]
	357 Compare X0, 0
	358 JumpIfEqual {524}
	359 Move X1, X31
	360 Call FtpMethodInfo.get_ShouldParseForResponseUri, X0
	361 Move TEMP, X0
	362 And TEMP, TEMP, 1
	363 Compare TEMP, 1
	364 JumpIfNotEqual {369}
	365 Move X1, [X20+24]
	366 Move X0, X19
	367 Move X2, X21
	368 Call FtpControlStream.TryUpdateResponseUri, X0, X1, X2
	369 Move X0, X19
	370 Move X1, X22
	371 Call FtpControlStream.QueueOrCreateFtpDataStream, X0, X1
	372 Move X20, [X31+80]
	373 Move X19, [X31+88]
	374 Move X22, [X31+64]
	375 Move X21, [X31+72]
	376 Move X24, [X31+48]
	377 Move X23, [X31+56]
	378 Move X26, [X31+32]
	379 Move X25, [X31+40]
	380 Move X30, [X31+16]
	381 Move X27, [X31+24]
	382 Add X31, X31, 96
	383 Return X0
	384 NotImplemented "Instruction CMP not yet implemented."
	385 NotImplemented "Instruction CMP not yet implemented."
	386 NotImplemented "Instruction CMP not yet implemented."
	387 Move X27, 0xACB000
	388 Move X22, [X19+48]
	389 Move X27, [X27+2288]
	390 Compare X22, 0
	391 JumpIfEqual {401}
	392 Move X9, [X22]
	393 Move X8, [X27]
	394 Move W11, [X9+304]
	395 Move W10, [X8+304]
	396 NotImplemented "Instruction CMP not yet implemented."
	397 Move X9, [X9+200]
	398 Add X9, X9, X10
	399 NotImplemented "Instruction LDUR not yet implemented."
	400 NotImplemented "Instruction CMP not yet implemented."
	401 Move X24, [X19+64]
	402 Compare X24, 0
	403 JumpIfEqual {562}
	404 Move X8, 0xACB000
	405 Move X8, [X8+2080]
	406 Move X1, [X8]
	407 Move X8, [X24]
	408 NotImplemented "Instruction CMP not yet implemented."
	409 Move X0, X19
	410 Move X1, X31
	411 Call NetworkStreamWrapper.get_Socket, X0
	412 Move X8, [X24]
	413 Move X25, X0
	414 Move X0, X24
	415 Move X9, [X8+472]
	416 Move X1, [X8+480]
	417 NotImplemented "Instruction BLR not yet implemented."
	418 Compare X0, 0
	419 JumpIfEqual {524}
	420 Move X1, X31
	421 Call Uri.get_Host, X0
	422 Move X26, X0
	423 Move X0, X24
	424 Move X1, X31
	425 Call FtpWebRequest.get_ClientCertificates, X0
	426 Move X8, [X27]
	427 Move X27, X0
	428 Move X0, X8
	429 Call 0x1C17F10
	430 Move X1, X22
	431 Move X2, X25
	432 Move X3, X26
	433 Move X4, X27
	434 Move X24, X0
	435 Call TlsStream..ctor, X0, X1, X2, X3, X4
	436 Move [X23+24], X24
	437 Move W8, [X19+72]
	438 Compare W8, 0
	439 JumpIfEqual {518}
	440 Move X8, 0xAA9000
	441 Move X8, [X8+1824]
	442 Move X0, [X8]
	443 Call 0x1C17F10
	444 Move X8, 0xACB000
	445 Move X8, [X8+2320]
	446 Move X1, X23
	447 Move X3, X31
	448 Move X19, X0
	449 Move X2, [X8]
	450 Call AsyncCallback..ctor, X0, X1, X2
	451 Compare X24, 0
	452 JumpIfEqual {524}
	453 Move X0, X24
	454 Move X1, X19
	455 Move X2, X31
	456 Call TlsStream.BeginAuthenticateAsClient, X0, X1, X2
	457 Move W0, 2
	458 Move X0, [X21+16]
	459 Compare X0, 0
	460 JumpIfEqual {524}
	461 Move X8, 0xACB000
	462 Move X8, [X8+2368]
	463 Move X2, X31
	464 Move X1, [X8]
	465 Call String.StartsWith, X0, X1
	466 Move TEMP, X0
	467 And TEMP, TEMP, 1
	468 Compare TEMP, 1
	469 JumpIfNotEqual {502}
	470 Move X1, [X20+24]
	471 Call FtpControlStream.GetContentLengthFrom213Response, X0, X1
	472 Move [X19+200], X0
	473 Move X8, 0xACB000
	474 Move X0, [X21+16]
	475 Move X8, [X8+2400]
	476 Move X2, X31
	477 Move X1, [X8]
	478 Call String.op_Equality, X0, X1
	479 Move TEMP, X0
	480 And TEMP, TEMP, 1
	481 Compare TEMP, 1
	482 JumpIfNotEqual {324}
	483 Move W8, [X21+24]
	484 Move TEMP, X8
	485 And TEMP, TEMP, 1
	486 Compare TEMP, 1
	487 JumpIfEqual {324}
	488 Move X1, [X20+24]
	489 Call FtpControlStream.GetLoginDirectory, X0, X1
	490 Move [X19+224], X0
	491 Move X0, [X21+16]
	492 Compare X0, 0
	493 JumpIfEqual {524}
	494 Move X8, 0xACB000
	495 Move X8, [X8+2376]
	496 Move X2, X31
	497 Move X1, [X8]
	498 Call String.IndexOf, X0, X1
	499 Add W31, W0, 1
	500 Move X8, [X19+240]
	501 Move [X19+232], X8
	502 Move X0, [X21+16]
	503 Compare X0, 0
	504 JumpIfEqual {524}
	505 Move X8, 0xACB000
	506 Move X8, [X8+2392]
	507 Move X2, X31
	508 Move X1, [X8]
	509 Call String.StartsWith, X0, X1
	510 Move TEMP, X0
	511 And TEMP, TEMP, 1
	512 Compare TEMP, 1
	513 JumpIfNotEqual {324}
	514 Move X1, [X20+24]
	515 Move X0, X19
	516 Call FtpControlStream.GetLastModifiedFrom213Response, X0, X1
	517 Move [X19+208], X0
	518 Compare X24, 0
	519 JumpIfEqual {524}
	520 Move X0, X24
	521 Call TlsStream.AuthenticateAsClient, X0
	522 Move X8, [X23+24]
	523 Move [X19+48], X8
	524 Call 0x1C17F20
	525 Call 0x1C17F28
	526 Call 0x1C17F44
	527 Move X1, X31
	528 Call 0x1C17DEC
	529 Move X0, 0xAAC000
	530 Move X0, [X0+816]
	531 Call 0x1C17D08
	532 Call 0x1C17F10
	533 Move X19, X0
	534 Move X0, 0xACB000
	535 Move X0, [X0+2416]
	536 Call 0x1C17D08
	537 Move X1, X0
	538 Move W2, 7
	539 Move X0, X19
	540 Move X3, X31
	541 Call WebException..ctor, X0, X1, X2
	542 NotImplemented "Instruction CMP not yet implemented."
	543 Move W8, [X19+88]
	544 NotImplemented "Instruction CMP not yet implemented."
	545 Move W8, 1
	546 Move [X19+56], W8
	547 Move X0, X20
	548 Call 0x19913C0
	549 Move X2, [X20+24]
	550 Move W1, W24
	551 Move X3, X31
	552 Call CommandStream.GenerateException, X0, X1, X2, X3
	553 Move X19, X0
	554 Move X0, 0xACB000
	555 Move X0, [X0+2424]
	556 Call 0x1C17D08
	557 Move X1, X0
	558 Move X0, X19
	559 Call 0x1C17DEC
	560 Move X0, X21
	561 Call 0x1C181E0
	562 Move X0, X19
	563 Move X1, X31
	564 Call NetworkStreamWrapper.get_Socket, X0
	565 Call 0x1C17F20
	566 Move X0, X24
	567 Call 0x1C181E0

Method: System.Net.CommandStream/PipelineEntry[] BuildCommandsList(System.Net.WebRequest req)

Disassembly:
	0x0367442C B.NE 0x3674480
	0x03674430 MOV W1, W31
	0x03674434 MOV X3, X31
	0x03674438 BL 0x3228DE4
	0x0367443C STR X0, [X21]
	0x03674440 CBZ X0, 0x3674520
	0x03674444 MOVZ W1, 0x2F
	0x03674448 MOV X2, X31
	0x0367444C BL 0x322C668
	0x03674450 MOV W2, W0
	0x03674454 B 0x3674480
	0x03674458 CMP W22, 0x2
	0x0367445C B.NE 0x3674480
	0x03674460 LDR X8, [X21]
	0x03674464 STR X8, [X19]
	0x03674468 ADRP X8, 0xA81000
	0x0367446C LDR X8, [X8 + 0x278]
	0x03674470 LDR X8, [X8]
	0x03674474 LDR X8, [X8 + 0xB8]
	0x03674478 LDR X0, [X8]
	0x0367447C B 0x36744BC
	0x03674480 LDR X0, [X21]
	0x03674484 CBZ X0, 0x3674520
	0x03674488 ADD W22, W2, 0x1
	0x0367448C MOV W1, W31
	0x03674490 MOV W2, W22
	0x03674494 MOV X3, X31
	0x03674498 BL 0x3228DE4
	0x0367449C STR X0, [X19]
	0x036744A0 LDR X0, [X21]
	0x036744A4 CBZ X0, 0x3674520
	0x036744A8 LDR W8, [X0 + 0x10]
	0x036744AC MOV W1, W22
	0x036744B0 MOV X3, X31
	0x036744B4 SUB W2, W8, W22
	0x036744B8 BL 0x3228DE4
	0x036744BC STR X0, [X20]
	0x036744C0 LDR X0, [X19]
	0x036744C4 CBZ X0, 0x3674520
	0x036744C8 LDR W8, [X0 + 0x10]
	0x036744CC CMP W8, 0x2
	0x036744D0 B.LT 0x367450C
	0x036744D4 SUB W1, W8, 0x1
	0x036744D8 MOV X2, X31
	0x036744DC BL 0x3222A1C
	0x036744E0 AND W8, W0, 0xFFFF
	0x036744E4 CMP W8, 0x2F
	0x036744E8 B.NE 0x367450C
	0x036744EC LDR X0, [X19]
	0x036744F0 CBZ X0, 0x3674520
	0x036744F4 LDR W8, [X0 + 0x10]
	0x036744F8 MOV W1, W31
	0x036744FC MOV X3, X31
	0x03674500 SUB W2, W8, 0x1
	0x03674504 BL 0x3228DE4
	0x03674508 STR X0, [X19]
	0x0367450C LDP X20, X19, [X31 + 0x30]
	0x03674510 LDP X22, X21, [X31 + 0x20]
	0x03674514 LDP X24, X23, [X31 + 0x10]
	0x03674518 LDR X30, [X31], #0x40
	0x0367451C RET
	0x03674520 BL 0x1C16F20
	0x03674524 STP X30, X21, [X31 - 0x20]!
	0x03674528 STP X20, X19, [X31 + 0x10]
	0x0367452C ADRP X20, 0xD6C000
	0x03674530 LDRB W8, [X20 + 0x78F]
	0x03674534 MOV X19, X0
	0x03674538 TBNZ X8, 0x0, 0x3674550
	0x0367453C ADRP X0, 0xA8C000
	0x03674540 LDR X0, [X0 + 0xBB8]
	0x03674544 BL 0x1C16CF4
	0x03674548 MOVZ W8, 0x1
	0x0367454C STRB W8, [X20 + 0x78F]
	0x03674550 MOV X0, X19
	0x03674554 MOV X1, X31
	0x03674558 BL 0x367D89C
	0x0367455C CBZ X0, 0x3674600
	0x03674560 MOV X1, X31
	0x03674564 BL 0x36C18F4
	0x03674568 CBZ X0, 0x3674600
	0x0367456C ADRP X9, 0xA8C000
	0x03674570 LDR X9, [X9 + 0xBB8]
	0x03674574 LDR X8, [X0]
	0x03674578 LDR X1, [X9]
	0x0367457C LDRB W10, [X8 + 0x130]
	0x03674580 LDRB W9, [X1 + 0x130]
	0x03674584 CMP W10, W9
	0x03674588 B.CC 0x3674604
	0x0367458C LDR X8, [X8 + 0xC8]
	0x03674590 ADD X8, X8, X9, 0x3, LSL
	0x03674594 LDUR X8, [X8 - 0x8]
	0x03674598 CMP X8, X1
	0x0367459C B.NE 0x3674604
	0x036745A0 LDR X21, [X0 + 0x10]
	0x036745A4 MOV X0, X1
	0x036745A8 BL 0x1C16F10
	0x036745AC MOV X1, X21
	0x036745B0 MOV W2, W31
	0x036745B4 MOV X20, X0
	0x036745B8 BL 0x366E898
	0x036745BC MOV X0, X19
	0x036745C0 MOV X1, X31
	0x036745C4 BL 0x367D89C
	0x036745C8 MOV X2, X0
	0x036745CC BL 0x3674C2C
	0x036745D0 STR X0, [X19 + 0x88]
	0x036745D4 CBZ X0, 0x3674600
	0x036745D8 MOV X1, X20
	0x036745DC MOV X2, X31
	0x036745E0 BL 0x36C2A18
	0x036745E4 LDR X0, [X19 + 0x88]
	0x036745E8 CBZ X0, 0x3674600
	0x036745EC LDP X20, X19, [X31 + 0x10]
	0x036745F0 MOVZ W1, 0x1
	0x036745F4 MOV X2, X31
	0x036745F8 LDP X30, X21, [X31], #0x20
	0x036745FC B 0x36C2D70
	0x03674600 BL 0x1C16F20
	0x03674604 BL 0x1C171E0
	0x03674608 B 0x367460C
	0x0367460C MOV X19, X0
	0x03674610 CMP W1, 0x1
	0x03674614 B.NE 0x3674690
	0x03674618 MOV X0, X19
	0x0367461C BL 0x3EB1AD0
	0x03674620 MOV X19, X0
	0x03674624 ADRP X0, 0xAA8000
	0x03674628 LDR X0, [X0 + 0x4B8]
	0x0367462C BL 0x1C16D08
	0x03674630 LDR X8, [X19]
	0x03674634 LDR X1, [X8]
	0x03674638 BL 0x1C17270
	0x0367463C TBZ X0, 0x0, 0x3674668
	0x03674640 BL 0x3EB1AE0
	0x03674644 MOV X0, X31
	0x03674648 BL 0x367C8A8
	0x0367464C MOV X19, X0
	0x03674650 ADRP X0, 0xAC9000
	0x03674654 LDR X0, [X0 + 0xAD8]
	0x03674658 BL 0x1C16D08
	0x0367465C MOV X1, X0
	0x03674660 MOV X0, X19
	0x03674664 BL 0x1C16DEC
	0x03674668 MOVZ W0, 0x8
	0x0367466C BL 0x3EB1AF0
	0x03674670 LDR X8, [X19]
	0x03674674 STR X8, [X0]
	0x03674678 ADRP X1, 0x840000
	0x0367467C ADD X1, X1, 0xE58
	0x03674680 MOV X2, X31
	0x03674684 BL 0x3EB1B00
	0x03674688 MOV X19, X0
	0x0367468C BL 0x3EB1AE0
	0x03674690 MOV X0, X19
	0x03674694 BL 0x1D2C690
	0x03674698 BL 0x1990590
	0x0367469C STR X30, [X31 - 0x20]!
	0x036746A0 STP X20, X19, [X31 + 0x10]
	0x036746A4 ADRP X19, 0xD6C000
	0x036746A8 LDRB W8, [X19 + 0x790]
	0x036746AC MOV X20, X0
	0x036746B0 TBNZ X8, 0x0, 0x36746C8
	0x036746B4 ADRP X0, 0xA8C000
	0x036746B8 LDR X0, [X0 + 0xBB8]
	0x036746BC BL 0x1C16CF4
	0x036746C0 MOVZ W8, 0x1
	0x036746C4 STRB W8, [X19 + 0x790]
	0x036746C8 LDR X0, [X20 + 0x88]
	0x036746CC CBZ X0, 0x367477C
	0x036746D0 MOV X1, X31
	0x036746D4 BL 0x36C18F4
	0x036746D8 MOV X19, X0
	0x036746DC CBZ X0, 0x3674714
	0x036746E0 ADRP X9, 0xA8C000
	0x036746E4 LDR X9, [X9 + 0xBB8]
	0x036746E8 LDR X8, [X19]
	0x036746EC LDR X1, [X9]
	0x036746F0 LDRB W10, [X8 + 0x130]
	0x036746F4 LDRB W9, [X1 + 0x130]
	0x036746F8 CMP W10, W9
	0x036746FC B.CC 0x3674774
	0x03674700 LDR X8, [X8 + 0xC8]
	0x03674704 ADD X8, X8, X9, 0x3, LSL
	0x03674708 LDUR X8, [X8 - 0x8]
	0x0367470C CMP X8, X1
	0x03674710 B.NE 0x3674774
	0x03674714 MOV X0, X20
	0x03674718 MOV X1, X31
	0x0367471C BL 0x367D808
	0x03674720 CBZ X0, 0x3674780
	0x03674724 LDR X8, [X0 + 0x18]
	0x03674728 CBZ X8, 0x3674758
	0x0367472C MOV X0, X20
	0x03674730 MOV X1, X31
	0x03674734 BL 0x367D808
	0x03674738 CBZ X0, 0x3674784
	0x0367473C LDR X8, [X0 + 0x18]
	0x03674740 CBZ X8, 0x3674788
	0x03674744 CBZ X19, 0x36747BC
	0x03674748 LDR X1, [X19 + 0x10]
	0x0367474C LDR W2, [X19 + 0x18]
	0x03674750 BL 0x3674DD0
	0x03674754 B 0x3674768
	0x03674758 CBZ X19, 0x36747C0
	0x0367475C LDR X1, [X19 + 0x10]
	0x03674760 LDR W2, [X19 + 0x18]
	0x03674764 BL 0x3674CA8
	0x03674768 LDP X20, X19, [X31 + 0x10]
	0x0367476C LDR X30, [X31], #0x20
	0x03674770 RET
	0x03674774 MOV X0, X19
	0x03674778 BL 0x1C171E0
	0x0367477C BL 0x1C16F20
	0x03674780 BL 0x1C16F20
	0x03674784 BL 0x1C16F20
	0x03674788 ADRP X0, 0xAC9000
	0x0367478C LDR X0, [X0 + 0x848]
	0x03674790 BL 0x1C16D08
	0x03674794 BL 0x1C16F10
	0x03674798 MOV X19, X0
	0x0367479C MOV X1, X31
	0x036747A0 BL 0x367A644
	0x036747A4 ADRP X0, 0xAC9000
	0x036747A8 LDR X0, [X0 + 0xAE0]
	0x036747AC BL 0x1C16D08
	0x036747B0 MOV X1, X0
	0x036747B4 MOV X0, X19
	0x036747B8 BL 0x1C16DEC
	0x036747BC BL 0x1C16F20
	0x036747C0 BL 0x1C16F20
	0x036747C4 B 0x36747E4
	0x036747C8 B 0x36747E4
	0x036747CC B 0x36747E4
	0x036747D0 B 0x36747E4
	0x036747D4 B 0x36747E4
	0x036747D8 B 0x36747E4
	0x036747DC B 0x36747E4
	0x036747E0 B 0x36747E4
	0x036747E4 MOV X19, X0
	0x036747E8 CMP W1, 0x1
	0x036747EC B.NE 0x3674880
	0x036747F0 MOV X0, X19
	0x036747F4 BL 0x3EB1AD0
	0x036747F8 MOV X19, X0
	0x036747FC ADRP X0, 0xA7F000
	0x03674800 LDR X0, [X0 + 0x7D0]
	0x03674804 BL 0x1C16D08
	0x03674808 LDR X8, [X19]
	0x0367480C LDR X1, [X8]
	0x03674810 BL 0x1C17270
	0x03674814 TBZ X0, 0x0, 0x3674858
	0x03674818 LDR X19, [X19]
	0x0367481C BL 0x3EB1AE0
	0x03674820 ADRP X0, 0xAC9000
	0x03674824 LDR X0, [X0 + 0x880]
	0x03674828 BL 0x1C16D08
	0x0367482C MOVZ W2, 0x7
	0x03674830 MOV X1, X0
	0x03674834 MOV X3, X19
	0x03674838 BL 0x366F7C4
	0x0367483C MOV X19, X0
	0x03674840 ADRP X0, 0xAC9000
	0x03674844 LDR X0, [X0 + 0xAE0]
	0x03674848 BL 0x1C16D08
	0x0367484C MOV X1, X0
	0x03674850 MOV X0, X19
	0x03674854 BL 0x1C16DEC
	0x03674858 MOVZ W0, 0x8
	0x0367485C BL 0x3EB1AF0
	0x03674860 LDR X8, [X19]
	0x03674864 STR X8, [X0]
	0x03674868 ADRP X1, 0x840000
	0x0367486C ADD X1, X1, 0xE58
	0x03674870 MOV X2, X31
	0x03674874 BL 0x3EB1B00
	0x03674878 MOV X19, X0
	0x0367487C BL 0x3EB1AE0
	0x03674880 MOV X0, X19
	0x03674884 BL 0x1D2C690
	0x03674888 BL 0x1990590
	0x0367488C STR X30, [X31 - 0x30]!
	0x03674890 STP X22, X21, [X31 + 0x10]
	0x03674894 STP X20, X19, [X31 + 0x20]
	0x03674898 ADRP X21, 0xD6C000
	0x0367489C ADRP X22, 0xA88000
	0x036748A0 ADRP X19, 0xAC9000
	0x036748A4 LDRB W8, [X21 + 0x78D]
	0x036748A8 LDR X22, [X22 + 0x8D8]
	0x036748AC LDR X19, [X19 + 0xAE8]
	0x036748B0 MOV X20, X1
	0x036748B4 TBNZ X8, 0x0, 0x36748F0
	0x036748B8 ADRP X0, 0xA88000
	0x036748BC LDR X0, [X0 + 0x8D8]
	0x036748C0 BL 0x1C16CF4
	0x036748C4 ADRP X0, 0xA81000
	0x036748C8 LDR X0, [X0 + 0x170]
	0x036748CC BL 0x1C16CF4
	0x036748D0 ADRP X0, 0xA88000
	0x036748D4 LDR X0, [X0 + 0x9E8]
	0x036748D8 BL 0x1C16CF4
	0x036748DC ADRP X0, 0xAC9000
	0x036748E0 LDR X0, [X0 + 0xAE8]
	0x036748E4 BL 0x1C16CF4
	0x036748E8 MOVZ W8, 0x1
	0x036748EC STRB W8, [X21 + 0x78D]
	0x036748F0 LDR X0, [X22]
	0x036748F4 MOVZ W1, 0x4
	0x036748F8 BL 0x1C16D6C
	0x036748FC LDR X1, [X19]
	0x03674900 MOV X2, X31
	0x03674904 MOV X19, X0
	0x03674908 BL 0x32C5BD8
	0x0367490C CBZ X20, 0x3674A18
	0x03674910 MOV X0, X20
	0x03674914 MOV X1, X19
	0x03674918 MOV X2, X31
	0x0367491C BL 0x3229E68
	0x03674920 CBZ X0, 0x3674A18
	0x03674924 LDR W21, [X0 + 0x18]
	0x03674928 MOV X19, X0
	0x0367492C CMP W21, 0x7
	0x03674930 B.LE 0x3674A20
	0x03674934 ADRP X8, 0xA81000
	0x03674938 LDR X8, [X8 + 0x170]
	0x0367493C LDR X0, [X8]
	0x03674940 SXTW X8, W21
	0x03674944 SUB X22, X8, 0x1
	0x03674948 ADD X8, X19, X22, 0x3, LSL
	0x0367494C LDR W9, [X0 + 0xE0]
	0x03674950 LDR X20, [X8 + 0x20]
	0x03674954 CBNZ W9, 0x367495C
	0x03674958 BL 0x1C16DFC
	0x0367495C MOV X0, X20
	0x03674960 MOV W1, W31
	0x03674964 MOV X2, X31
	0x03674968 BL 0x331B94C
	0x0367496C LDR W9, [X19 + 0x18]
	0x03674970 SUB W8, W21, 0x2
	0x03674974 ANDS W31, W0, 0x1
	0x03674978 CSEL W8, W22, W8, NE
	0x0367497C CMP W8, W9
	0x03674980 B.CS 0x3674A1C
	0x03674984 ADD X9, X19, W8, 0x3, UXTW
	0x03674988 ADRP X21, 0xA88000
	0x0367498C LDR X20, [X9 + 0x20]
	0x03674990 LDR X21, [X21 + 0x9E8]
	0x03674994 MOV X0, X31
	0x03674998 SUB W22, W8, 0x1
	0x0367499C BL 0x333AB78
	0x036749A0 LDR X8, [X21]
	0x036749A4 MOV X21, X0
	0x036749A8 LDR W9, [X8 + 0xE0]
	0x036749AC CBNZ W9, 0x36749B8
	0x036749B0 MOV X0, X8
	0x036749B4 BL 0x1C16DFC
	0x036749B8 MOV X0, X20
	0x036749BC MOV X1, X21
	0x036749C0 MOV X2, X31
	0x036749C4 BL 0x331F738
	0x036749C8 LDR W8, [X19 + 0x18]
	0x036749CC CMP W22, W8
	0x036749D0 B.CS 0x3674A1C
	0x036749D4 ADD X8, X19, W22, 0x3, UXTW
	0x036749D8 LDR X19, [X8 + 0x20]
	0x036749DC MOV W20, W0
	0x036749E0 MOV X0, X31
	0x036749E4 BL 0x333AB78
	0x036749E8 MOV X1, X0
	0x036749EC MOV X0, X19
	0x036749F0 MOV X2, X31
	0x036749F4 BL 0x331F738
	0x036749F8 AND W8, W20, 0xFF
	0x036749FC LDP X20, X19, [X31 + 0x20]
	0x03674A00 LDP X22, X21, [X31 + 0x10]
	0x03674A04 AND W9, W0, 0xFF
	0x03674A08 BFM W8, W9, 0x18, 0x7
	0x03674A0C MOV W0, W8
	0x03674A10 LDR X30, [X31], #0x30
	0x03674A14 RET
	0x03674A18 BL 0x1C16F20
	0x03674A1C BL 0x1C16F28
	0x03674A20 ADRP X0, 0xAC9000
	0x03674A24 LDR X0, [X0 + 0x9F8]
	0x03674A28 BL 0x1C16D08
	0x03674A2C MOV X1, X20
	0x03674A30 MOV X2, X31
	0x03674A34 BL 0x32094D4
	0x03674A38 MOV X19, X0
	0x03674A3C ADRP X0, 0xAAC000
	0x03674A40 LDR X0, [X0 + 0xC08]
	0x03674A44 BL 0x1C16D08
	0x03674A48 BL 0x1C16F10
	0x03674A4C MOV X1, X19
	0x03674A50 MOV X2, X31
	0x03674A54 MOV X20, X0
	0x03674A58 BL 0x33674A0
	0x03674A5C ADRP X0, 0xAC9000
	0x03674A60 LDR X0, [X0 + 0xAF0]
	0x03674A64 BL 0x1C16D08
	0x03674A68 MOV X1, X0
	0x03674A6C MOV X0, X20
	0x03674A70 BL 0x1C16DEC
	0x03674A74 STP X30, X21, [X31 - 0x20]!
	0x03674A78 STP X20, X19, [X31 + 0x10]
	0x03674A7C ADRP X20, 0xD6C000
	0x03674A80 LDRB W8, [X20 + 0x78E]
	0x03674A84 MOV X19, X1
	0x03674A88 TBNZ X8, 0x0, 0x3674AC4
	0x03674A8C ADRP X0, 0xA88000
	0x03674A90 LDR X0, [X0 + 0x8D8]
	0x03674A94 BL 0x1C16CF4
	0x03674A98 ADRP X0, 0xA88000
	0x03674A9C LDR X0, [X0 + 0x9E8]
	0x03674AA0 BL 0x1C16CF4
	0x03674AA4 ADRP X0, 0xA8A000
	0x03674AA8 LDR X0, [X0 + 0x310]
	0x03674AAC BL 0x1C16CF4
	0x03674AB0 ADRP X0, 0xA80000
	0x03674AB4 LDR X0, [X0 + 0x608]
	0x03674AB8 BL 0x1C16CF4
	0x03674ABC MOVZ W8, 0x1
	0x03674AC0 STRB W8, [X20 + 0x78E]
	0x03674AC4 CBZ X19, 0x3674BD0
	0x03674AC8 ADRP X8, 0xA8A000
	0x03674ACC LDR X8, [X8 + 0x310]
	0x03674AD0 ADRP X20, 0xA80000
	0x03674AD4 MOV X0, X19
	0x03674AD8 MOV X2, X31
	0x03674ADC LDR X1, [X8]
	0x03674AE0 LDR X20, [X20 + 0x608]
	0x03674AE4 BL 0x322C9D4
	0x03674AE8 LDR X1, [X20]
	0x03674AEC MOV W20, W0
	0x03674AF0 MOV X0, X19
	0x03674AF4 MOV X2, X31
	0x03674AF8 BL 0x322C9D4
	0x03674AFC ADDS W31, W20, 0x1
	0x03674B00 B.EQ 0x3674BD4
	0x03674B04 CMP W0, W20
	0x03674B08 B.LE 0x3674BD4
	0x03674B0C ADRP X21, 0xA88000
	0x03674B10 LDR X21, [X21 + 0x8D8]
	0x03674B14 ORN W8, W31, W20, 0x0
	0x03674B18 ADD W1, W20, 0x1
	0x03674B1C ADD W2, W0, W8
	0x03674B20 MOV X0, X19
	0x03674B24 MOV X3, X31
	0x03674B28 BL 0x3228DE4
	0x03674B2C LDR X8, [X21]
	0x03674B30 MOV X20, X0
	0x03674B34 MOVZ W1, 0x1
	0x03674B38 MOV X0, X8
	0x03674B3C BL 0x1C16D6C
	0x03674B40 CBZ X0, 0x3674BD0
	0x03674B44 LDR W8, [X0 + 0x18]
	0x03674B48 MOV X1, X0
	0x03674B4C CBZ W8, 0x3674C28
	0x03674B50 MOVZ W8, 0x7C
	0x03674B54 STRH W8, [X1 + 0x20]
	0x03674B58 CBZ X20, 0x3674BD0
	0x03674B5C MOV X0, X20
	0x03674B60 MOV X2, X31
	0x03674B64 BL 0x3229E68
	0x03674B68 CBZ X0, 0x3674BD0
	0x03674B6C LDR W8, [X0 + 0x18]
	0x03674B70 CMP W8, 0x3
	0x03674B74 CSEL X8, X0, X31, GT
	0x03674B78 B.LE 0x3674BD4
	0x03674B7C CBZ X8, 0x3674BD0
	0x03674B80 LDR W9, [X8 + 0x18]
	0x03674B84 CMP W9, 0x3
	0x03674B88 B.LS 0x3674C28
	0x03674B8C ADRP X20, 0xA88000
	0x03674B90 LDR X19, [X8 + 0x38]
	0x03674B94 LDR X20, [X20 + 0x9E8]
	0x03674B98 MOV X0, X31
	0x03674B9C BL 0x333AB78
	0x03674BA0 LDR X8, [X20]
	0x03674BA4 MOV X20, X0
	0x03674BA8 LDR W9, [X8 + 0xE0]
	0x03674BAC CBNZ W9, 0x3674BB8
	0x03674BB0 MOV X0, X8
	0x03674BB4 BL 0x1C16DFC
	0x03674BB8 MOV X0, X19
	0x03674BBC MOV X1, X20
	0x03674BC0 LDP X20, X19, [X31 + 0x10]
	0x03674BC4 MOV X2, X31
	0x03674BC8 LDP X30, X21, [X31], #0x20
	0x03674BCC B 0x33205E4
	0x03674BD0 BL 0x1C16F20
	0x03674BD4 ADRP X0, 0xAC9000
	0x03674BD8 LDR X0, [X0 + 0x9F8]
	0x03674BDC BL 0x1C16D08
	0x03674BE0 MOV X1, X19
	0x03674BE4 MOV X2, X31
	0x03674BE8 BL 0x32094D4
	0x03674BEC MOV X19, X0
	0x03674BF0 ADRP X0, 0xAAC000
	0x03674BF4 LDR X0, [X0 + 0xC08]
	0x03674BF8 BL 0x1C16D08
	0x03674BFC BL 0x1C16F10
	0x03674C00 MOV X1, X19
	0x03674C04 MOV X2, X31
	0x03674C08 MOV X20, X0
	0x03674C0C BL 0x33674A0
	0x03674C10 ADRP X0, 0xAC9000
	0x03674C14 LDR X0, [X0 + 0xAF8]
	0x03674C18 BL 0x1C16D08
	0x03674C1C MOV X1, X0
	0x03674C20 MOV X0, X20
	0x03674C24 BL 0x1C16DEC
	0x03674C28 BL 0x1C16F28
	0x03674C2C STR X30, [X31 - 0x30]!
	0x03674C30 STP X22, X21, [X31 + 0x10]
	0x03674C34 STP X20, X19, [X31 + 0x20]
	0x03674C38 ADRP X20, 0xD6C000
	0x03674C3C LDRB W8, [X20 + 0x792]
	0x03674C40 MOV X19, X2
	0x03674C44 TBNZ X8, 0x0, 0x3674C5C
	0x03674C48 ADRP X0, 0xA88000
	0x03674C4C LDR X0, [X0 + 0x788]
	0x03674C50 BL 0x1C16CF4
	0x03674C54 MOVZ W8, 0x1
	0x03674C58 STRB W8, [X20 + 0x792]
	0x03674C5C CBZ X19, 0x3674CA4
	0x03674C60 ADRP X8, 0xA88000
	0x03674C64 LDR X8, [X8 + 0x788]
	0x03674C68 LDP W20, W21, [X19 + 0x20]
	0x03674C6C LDR W19, [X19 + 0x28]
	0x03674C70 LDR X0, [X8]
	0x03674C74 BL 0x1C16F10
	0x03674C78 MOV W1, W20
	0x03674C7C MOV W2, W21
	0x03674C80 MOV W3, W19
	0x03674C84 MOV X4, X31
	0x03674C88 MOV X22, X0
	0x03674C8C BL 0x36AC13C
	0x03674C90 MOV X0, X22
	0x03674C94 LDP X20, X19, [X31 + 0x20]
	0x03674C98 LDP X22, X21, [X31 + 0x10]
	0x03674C9C LDR X30, [X31], #0x30
	0x03674CA0 RET
	0x03674CA4 BL 0x1C16F20
	0x03674CA8 STP X30, X23, [X31 - 0x30]!
	0x03674CAC STP X22, X21, [X31 + 0x10]
	0x03674CB0 STP X20, X19, [X31 + 0x20]
	0x03674CB4 ADRP X21, 0xD6C000
	0x03674CB8 LDRB W8, [X21 + 0x786]
	0x03674CBC MOV W19, W2
	0x03674CC0 MOV X20, X1
	0x03674CC4 TBNZ X8, 0x0, 0x3674CDC
	0x03674CC8 ADRP X0, 0xA7F000
	0x03674CCC LDR X0, [X0 + 0x8F0]
	0x03674CD0 BL 0x1C16CF4
	0x03674CD4 MOVZ W8, 0x1
	0x03674CD8 STRB W8, [X21 + 0x786]
	0x03674CDC CBZ X20, 0x3674DC8
	0x03674CE0 ADRP X21, 0xA7F000
	0x03674CE4 LDR X21, [X21 + 0x8F0]
	0x03674CE8 MOV X0, X20
	0x03674CEC BL 0x366D4BC
	0x03674CF0 LDR X8, [X21]
	0x03674CF4 MOV X21, X0
	0x03674CF8 MOV X0, X8
	0x03674CFC BL 0x1C16F10
	0x03674D00 MOVZ W1, 0x20
	0x03674D04 MOV X2, X31
	0x03674D08 MOV X20, X0
	0x03674D0C BL 0x3231B28
	0x03674D10 CBZ X21, 0x3674DC8
	0x03674D14 LDR X8, [X21 + 0x18]
	0x03674D18 CMP W8, 0x1
	0x03674D1C B.LT 0x3674D68
	0x03674D20 MOV X22, X31
	0x03674D24 AND X8, X8, 0x0
	0x03674D28 ADD X23, X21, 0x20
	0x03674D2C CMP X22, W8, UXTW
	0x03674D30 B.CS 0x3674DCC
	0x03674D34 CBZ X20, 0x3674DC8
	0x03674D38 LDRB W1, [X23, X22, LSL]
	0x03674D3C MOV X0, X20
	0x03674D40 MOV X2, X31
	0x03674D44 BL 0x3233D80
	0x03674D48 MOVZ W1, 0x2C
	0x03674D4C MOV X0, X20
	0x03674D50 MOV X2, X31
	0x03674D54 BL 0x3233D30
	0x03674D58 LDR W8, [X21 + 0x18]
	0x03674D5C ADD X22, X22, 0x1
	0x03674D60 CMP X22, W8, SXTW
	0x03674D64 B.LT 0x3674D2C
	0x03674D68 CBZ X20, 0x3674DC8
	0x03674D6C ADD W8, W19, 0xFF
	0x03674D70 CMP W19, 0x0
	0x03674D74 CSEL W21, W8, W19, LT
	0x03674D78 SBFM W1, W21, 0x8, 0x1F
	0x03674D7C MOV X0, X20
	0x03674D80 MOV X2, X31
	0x03674D84 BL 0x3233E30
	0x03674D88 MOVZ W1, 0x2C
	0x03674D8C MOV X0, X20
	0x03674D90 MOV X2, X31
	0x03674D94 BL 0x3233D30
	0x03674D98 AND W8, W21, 0xFFFFFF00
	0x03674D9C SUB W1, W19, W8
	0x03674DA0 MOV X0, X20
	0x03674DA4 MOV X2, X31
	0x03674DA8 BL 0x3233E30
	0x03674DAC LDR X8, [X20]
	0x03674DB0 MOV X0, X20
	0x03674DB4 LDP X20, X19, [X31 + 0x20]
	0x03674DB8 LDP X22, X21, [X31 + 0x10]
	0x03674DBC LDP X2, X1, [X8 + 0x168]
	0x03674DC0 LDP X30, X23, [X31], #0x30
	0x03674DC4 BR X2
	0x03674DC8 BL 0x1C16F20
	0x03674DCC BL 0x1C16F28
	0x03674DD0 SUB X31, X31, 0x30
	0x03674DD4 STP X30, X21, [X31 + 0x10]
	0x03674DD8 STP X20, X19, [X31 + 0x20]
	0x03674DDC ADRP X19, 0xD6C000
	0x03674DE0 STR W2, [X31 + 0xC]
	0x03674DE4 ADRP X21, 0xA7F000
	0x03674DE8 LDRB W8, [X19 + 0x787]
	0x03674DEC LDR X21, [X21 + 0x8F0]
	0x03674DF0 MOV X20, X1
	0x03674DF4 TBNZ X8, 0x0, 0x3674E18
	0x03674DF8 ADRP X0, 0xA7F000
	0x03674DFC LDR X0, [X0 + 0x8F0]
	0x03674E00 BL 0x1C16CF4
	0x03674E04 ADRP X0, 0xAC9000
	0x03674E08 LDR X0, [X0 + 0xB00]
	0x03674E0C BL 0x1C16CF4
	0x03674E10 MOVZ W8, 0x1
	0x03674E14 STRB W8, [X19 + 0x787]
	0x03674E18 LDR X0, [X21]
	0x03674E1C BL 0x1C16F10
	0x03674E20 MOVZ W1, 0x2B
	0x03674E24 MOV X2, X31
	0x03674E28 MOV X19, X0
	0x03674E2C BL 0x3231B28
	0x03674E30 CBZ X20, 0x3674EDC
	0x03674E34 LDR X8, [X20]
	0x03674E38 MOV X0, X20
	0x03674E3C LDP X9, X1, [X8 + 0x168]
	0x03674E40 BLR X9
	0x03674E44 CBZ X19, 0x3674EDC
	0x03674E48 ADRP X8, 0xAC9000
	0x03674E4C LDR X8, [X8 + 0xB00]
	0x03674E50 MOV X20, X0
	0x03674E54 MOV X0, X19
	0x03674E58 MOV X2, X31
	0x03674E5C LDR X1, [X8]
	0x03674E60 BL 0x32333E0
	0x03674E64 MOV X0, X19
	0x03674E68 MOV X1, X20
	0x03674E6C MOV X2, X31
	0x03674E70 BL 0x32333E0
	0x03674E74 MOVZ W1, 0x7C
	0x03674E78 MOV X0, X19
	0x03674E7C MOV X2, X31
	0x03674E80 BL 0x3233D30
	0x03674E84 MOV X0, X31
	0x03674E88 BL 0x333AB78
	0x03674E8C MOV X1, X0
	0x03674E90 ADD X0, X31, 0xC
	0x03674E94 MOV X2, X31
	0x03674E98 BL 0x337B824
	0x03674E9C MOV X1, X0
	0x03674EA0 MOV X0, X19
	0x03674EA4 MOV X2, X31
	0x03674EA8 BL 0x32333E0
	0x03674EAC MOVZ W1, 0x7C
	0x03674EB0 MOV X0, X19
	0x03674EB4 MOV X2, X31
	0x03674EB8 BL 0x3233D30
	0x03674EBC LDR X8, [X19]
	0x03674EC0 MOV X0, X19
	0x03674EC4 LDP X9, X1, [X8 + 0x168]
	0x03674EC8 BLR X9
	0x03674ECC LDP X20, X19, [X31 + 0x20]
	0x03674ED0 LDP X30, X21, [X31 + 0x10]
	0x03674ED4 ADD X31, X31, 0x30
	0x03674ED8 RET
	0x03674EDC BL 0x1C16F20
	0x03674EE0 LDR X0, [X0 + 0xC8]
	0x03674EE4 RET
	0x03674EE8 LDR X0, [X0 + 0xD0]
	0x03674EEC RET
	0x03674EF0 LDR X0, [X0 + 0xF8]
	0x03674EF4 RET
	0x03674EF8 LDR X0, [X0 + 0xA0]
	0x03674EFC CBZ X0, 0x3674F0C
	0x03674F00 LDR X8, [X0]
	0x03674F04 LDP X2, X1, [X8 + 0x168]
	0x03674F08 BR X2
	0x03674F0C RET
	0x03674F10 LDR X0, [X0 + 0xA8]
	0x03674F14 CBZ X0, 0x3674F24
	0x03674F18 LDR X8, [X0]
	0x03674F1C LDP X2, X1, [X8 + 0x168]
	0x03674F20 BR X2
	0x03674F24 RET
	0x03674F28 LDR X0, [X0 + 0xB0]
	0x03674F2C CBZ X0, 0x3674F3C
	0x03674F30 LDR X8, [X0]
	0x03674F34 LDP X2, X1, [X8 + 0x168]
	0x03674F38 BR X2
	0x03674F3C RET
	0x03674F40 STP X30, X25, [X31 - 0x40]!
	0x03674F44 STP X24, X23, [X31 + 0x10]
	0x03674F48 STP X22, X21, [X31 + 0x20]
	0x03674F4C STP X20, X19, [X31 + 0x30]
	0x03674F50 ADRP X23, 0xD6C000
	0x03674F54 ADRP X25, 0xAC9000
	0x03674F58 LDRB W8, [X23 + 0x793]
	0x03674F5C LDR X25, [X25 + 0x468]
	0x03674F60 MOV X19, X3
	0x03674F64 MOV X20, X2
	0x03674F68 MOV X21, X1
	0x03674F6C MOV X22, X0
	0x03674F70 TBNZ X8, 0x0, 0x3674FD0
	0x03674F74 ADRP X0, 0xA81000
	0x03674F78 LDR X0, [X0 + 0x170]
	0x03674F7C BL 0x1C16CF4
	0x03674F80 ADRP X0, 0xA88000
	0x03674F84 LDR X0, [X0 + 0x9E8]
	0x03674F88 BL 0x1C16CF4
	0x03674F8C ADRP X0, 0xAC9000
	0x03674F90 LDR X0, [X0 + 0x468]
	0x03674F94 BL 0x1C16CF4
	0x03674F98 ADRP X0, 0xA7F000
	0x03674F9C LDR X0, [X0 + 0x9D0]
	0x03674FA0 BL 0x1C16CF4
	0x03674FA4 ADRP X0, 0xABD000
	0x03674FA8 LDR X0, [X0 + 0x420]
	0x03674FAC BL 0x1C16CF4
	0x03674FB0 ADRP X0, 0xAC9000
	0x03674FB4 LDR X0, [X0 + 0xB08]
	0x03674FB8 BL 0x1C16CF4
	0x03674FBC ADRP X0, 0xAC9000
	0x03674FC0 LDR X0, [X0 + 0xB10]
	0x03674FC4 BL 0x1C16CF4
	0x03674FC8 MOVZ W8, 0x1
	0x03674FCC STRB W8, [X23 + 0x793]
	0x03674FD0 LDR X0, [X25]
	0x03674FD4 LDR W8, [X0 + 0xE0]
	0x03674FD8 CBNZ W8, 0x3674FE0
	0x03674FDC BL 0x1C16DFC
	0x03674FE0 BL 0x366A368
	0x03674FE4 TBZ X0, 0x0, 0x367507C
	0x03674FE8 ADRP X8, 0xA7F000
	0x03674FEC LDR X8, [X8 + 0x9D0]
	0x03674FF0 MOVZ W1, 0x1
	0x03674FF4 LDR X0, [X8]
	0x03674FF8 BL 0x1C16D6C
	0x03674FFC CBZ X21, 0x36752E8
	0x03675000 MOV X23, X0
	0x03675004 CBZ X0, 0x36752E8
	0x03675008 LDR X24, [X21 + 0x20]
	0x0367500C CBZ X24, 0x3675024
	0x03675010 LDR X8, [X23]
	0x03675014 MOV X0, X24
	0x03675018 LDR X1, [X8 + 0x40]
	0x0367501C BL 0x1C16E00
	0x03675020 CBZ X0, 0x36752F0
	0x03675024 LDR W8, [X23 + 0x18]
	0x03675028 CBZ W8, 0x36752EC
	0x0367502C STR X24, [X23 + 0x20]
	0x03675030 ADRP X8, 0xAC8000
	0x03675034 LDR X8, [X8 + 0xB08]
	0x03675038 MOV X1, X23
	0x0367503C MOV X2, X31
	0x03675040 LDR X0, [X8]
	0x03675044 BL 0x32C2F6C
	0x03675048 LDR X8, [X25]
	0x0367504C MOV X23, X0
	0x03675050 LDR W9, [X8 + 0xE0]
	0x03675054 CBNZ W9, 0x3675060
	0x03675058 MOV X0, X8
	0x0367505C BL 0x1C16DFC
	0x03675060 ADRP X8, 0xAC8000
	0x03675064 LDR X8, [X8 + 0xB10]
	0x03675068 MOV X0, X22
	0x0367506C MOV X1, X23
	0x03675070 LDR X2, [X8]
	0x03675074 BL 0x366A3CC
	0x03675078 B 0x3675080
	0x0367507C CBZ X21, 0x36752E8
	0x03675080 LDR X0, [X21 + 0x20]
	0x03675084 CBZ X0, 0x36752E8
	0x03675088 MOV X1, X31
	0x0367508C BL 0x323260C
	0x03675090 CMP W0, 0x4
	0x03675094 B.LT 0x36752D0
	0x03675098 LDR X0, [X21 + 0x20]
	0x0367509C CBZ X0, 0x36752E8
	0x036750A0 LDR X8, [X0]
	0x036750A4 LDP X9, X1, [X8 + 0x168]
	0x036750A8 BLR X9
	0x036750AC LDR W8, [X21 + 0x14]
	0x036750B0 MOV X22, X0
	0x036750B4 ADDS W31, W8, 0x1
	0x036750B8 B.EQ 0x3675150
	0x036750BC CBZ X22, 0x36752E8
	0x036750C0 ADRP X24, 0xABC000
	0x036750C4 LDR W2, [X20]
	0x036750C8 LDR X24, [X24 + 0x420]
	0x036750CC LDR X1, [X24]
	0x036750D0 MOV X0, X22
	0x036750D4 MOV X3, X31
	0x036750D8 BL 0x322C300
	0x036750DC ADDS W31, W0, 0x1
	0x036750E0 B.EQ 0x36752D0
	0x036750E4 ADD W8, W0, 0x2
	0x036750E8 LDR W23, [X20]
	0x036750EC STR W8, [X20]
	0x036750F0 LDRB W9, [X21 + 0x10]
	0x036750F4 CBZ W9, 0x36752CC
	0x036750F8 LDR W8, [X22 + 0x10]
	0x036750FC ADD W9, W23, 0x4
	0x03675100 CMP W8, W9
	0x03675104 B.LE 0x3675148
	0x03675108 MOVZ W2, 0x3
	0x0367510C MOV X0, X22
	0x03675110 MOV W1, W23
	0x03675114 MOV X3, X31
	0x03675118 BL 0x3228DE4
	0x0367511C LDR X1, [X21 + 0x28]
	0x03675120 MOV X2, X31
	0x03675124 BL 0x321BA08
	0x03675128 TBZ X0, 0x0, 0x3675148
	0x0367512C ADD W1, W23, 0x3
	0x03675130 MOV X0, X22
	0x03675134 MOV X2, X31
	0x03675138 BL 0x3222A1C
	0x0367513C AND W8, W0, 0xFFFF
	0x03675140 CMP W8, 0x20
	0x03675144 B.EQ 0x36752C8
	0x03675148 LDR W2, [X20]
	0x0367514C B 0x36750CC
	0x03675150 CBZ X22, 0x36752E8
	0x03675154 MOV X0, X22
	0x03675158 MOV W1, W31
	0x0367515C MOV X2, X31
	0x03675160 BL 0x3222A1C
	0x03675164 ADRP X24, 0xA80000
	0x03675168 LDR X24, [X24 + 0x170]
	0x0367516C MOV W23, W0
	0x03675170 LDR X8, [X24]
	0x03675174 LDR W9, [X8 + 0xE0]
	0x03675178 CBNZ W9, 0x3675184
	0x0367517C MOV X0, X8
	0x03675180 BL 0x1C16DFC
	0x03675184 MOV W0, W23
	0x03675188 MOV X1, X31
	0x0367518C BL 0x33141B4
	0x03675190 TBZ X0, 0x0, 0x36752C0
	0x03675194 MOVZ W1, 0x1
	0x03675198 MOV X0, X22
	0x0367519C MOV X2, X31
	0x036751A0 BL 0x3222A1C
	0x036751A4 LDR X8, [X24]
	0x036751A8 MOV W23, W0
	0x036751AC LDR W9, [X8 + 0xE0]
	0x036751B0 CBNZ W9, 0x36751BC
	0x036751B4 MOV X0, X8
	0x036751B8 BL 0x1C16DFC
	0x036751BC MOV W0, W23
	0x036751C0 MOV X1, X31
	0x036751C4 BL 0x33141B4
	0x036751C8 TBZ X0, 0x0, 0x36752C0
	0x036751CC MOVZ W1, 0x2
	0x036751D0 MOV X0, X22
	0x036751D4 MOV X2, X31
	0x036751D8 BL 0x3222A1C
	0x036751DC LDR X8, [X24]
	0x036751E0 MOV W23, W0
	0x036751E4 LDR W9, [X8 + 0xE0]
	0x036751E8 CBNZ W9, 0x36751F4
	0x036751EC MOV X0, X8
	0x036751F0 BL 0x1C16DFC
	0x036751F4 MOV W0, W23
	0x036751F8 MOV X1, X31
	0x036751FC BL 0x33141B4
	0x03675200 TBZ X0, 0x0, 0x36752C0
	0x03675204 MOVZ W1, 0x3
	0x03675208 MOV X0, X22
	0x0367520C MOV X2, X31
	0x03675210 BL 0x3222A1C
	0x03675214 AND W8, W0, 0xFFFF
	0x03675218 CMP W8, 0x20
	0x0367521C B.EQ 0x367523C
	0x03675220 MOVZ W1, 0x3
	0x03675224 MOV X0, X22
	0x03675228 MOV X2, X31
	0x0367522C BL 0x3222A1C
	0x03675230 AND W8, W0, 0xFFFF
	0x03675234 CMP W8, 0x2D
	0x03675238 B.NE 0x36752C0
	0x0367523C MOVZ W2, 0x3
	0x03675240 MOV X0, X22
	0x03675244 MOV W1, W31
	0x03675248 MOV X3, X31
	0x0367524C BL 0x3228DE4
	0x03675250 MOV X23, X0
	0x03675254 STR X0, [X21 + 0x28]
	0x03675258 MOV X0, X31
	0x0367525C BL 0x333AB78
	0x03675260 ADRP X8, 0xA87000
	0x03675264 LDR X8, [X8 + 0x9E8]
	0x03675268 MOV X24, X0
	0x0367526C LDR X8, [X8]
	0x03675270 LDR W9, [X8 + 0xE0]
	0x03675274 CBNZ W9, 0x3675280
	0x03675278 MOV X0, X8
	0x0367527C BL 0x1C16DFC
	0x03675280 MOV X0, X23
	0x03675284 MOV X1, X24
	0x03675288 MOV X2, X31
	0x0367528C BL 0x331FC30
	0x03675290 SXTH W8, W0
	0x03675294 MOVZ W1, 0x3
	0x03675298 MOV X0, X22

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+32], X30
	003 Move [X31+48], X26
	004 Move [X31+56], X25
	005 Move [X31+64], X24
	006 Move [X31+72], X23
	007 Move [X31+80], X22
	008 Move [X31+88], X21
	009 Move [X31+96], X20
	010 Move [X31+104], X19
	011 Move X20, 0xD6D000
	012 Move W8, [X20+1923]
	013 Move X19, X1
	014 Move X21, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {144}
	019 Move X0, 0xAAD000
	020 Move X0, [X0+2976]
	021 Call 0x1C17CF4
	022 Move X0, 0xA82000
	023 Move X0, [X0+3144]
	024 Call 0x1C17CF4
	025 Move X0, 0xACA000
	026 Move X0, [X0+2248]
	027 Call 0x1C17CF4
	028 Move X0, 0xACA000
	029 Move X0, [X0+2080]
	030 Call 0x1C17CF4
	031 Move X0, 0xAC6000
	032 Move X0, [X0+2088]
	033 Call 0x1C17CF4
	034 Move X0, 0xACA000
	035 Move X0, [X0+1128]
	036 Call 0x1C17CF4
	037 Move X0, 0xACA000
	038 Move X0, [X0+2568]
	039 Call 0x1C17CF4
	040 Move X0, 0xACA000
	041 Move X0, [X0+2576]
	042 Call 0x1C17CF4
	043 Move X0, 0xACA000
	044 Move X0, [X0+2584]
	045 Call 0x1C17CF4
	046 Move X0, 0xA80000
	047 Move X0, [X0+2288]
	048 Call 0x1C17CF4
	049 Move X0, 0xA82000
	050 Move X0, [X0+632]
	051 Call 0x1C17CF4
	052 Move X0, 0xA80000
	053 Move X0, [X0+1728]
	054 Call 0x1C17CF4
	055 Move X0, 0xACA000
	056 Move X0, [X0+2592]
	057 Call 0x1C17CF4
	058 Move X0, 0xACA000
	059 Move X0, [X0+2600]
	060 Call 0x1C17CF4
	061 Move X0, 0xAB4000
	062 Move X0, [X0+2040]
	063 Call 0x1C17CF4
	064 Move X0, 0xACA000
	065 Move X0, [X0+2608]
	066 Call 0x1C17CF4
	067 Move X0, 0xACA000
	068 Move X0, [X0+2616]
	069 Call 0x1C17CF4
	070 Move X0, 0xACA000
	071 Move X0, [X0+2624]
	072 Call 0x1C17CF4
	073 Move X0, 0xACA000
	074 Move X0, [X0+2632]
	075 Call 0x1C17CF4
	076 Move X0, 0xACA000
	077 Move X0, [X0+2640]
	078 Call 0x1C17CF4
	079 Move X0, 0xACA000
	080 Move X0, [X0+2352]
	081 Call 0x1C17CF4
	082 Move X0, 0xACA000
	083 Move X0, [X0+2648]
	084 Call 0x1C17CF4
	085 Move X0, 0xACA000
	086 Move X0, [X0+2656]
	087 Call 0x1C17CF4
	088 Move X0, 0xAAC000
	089 Move X0, [X0+856]
	090 Call 0x1C17CF4
	091 Move X0, 0xACA000
	092 Move X0, [X0+2664]
	093 Call 0x1C17CF4
	094 Move X0, 0xACA000
	095 Move X0, [X0+2672]
	096 Call 0x1C17CF4
	097 Move X0, 0xACA000
	098 Move X0, [X0+2376]
	099 Call 0x1C17CF4
	100 Move X0, 0xACA000
	101 Move X0, [X0+2680]
	102 Call 0x1C17CF4
	103 Move X0, 0xA81000
	104 Move X0, [X0+3784]
	105 Call 0x1C17CF4
	106 Move X0, 0xACA000
	107 Move X0, [X0+2688]
	108 Call 0x1C17CF4
	109 Move X0, 0xACA000
	110 Move X0, [X0+2696]
	111 Call 0x1C17CF4
	112 Move X0, 0xACA000
	113 Move X0, [X0+2704]
	114 Call 0x1C17CF4
	115 Move X0, 0xACA000
	116 Move X0, [X0+2712]
	117 Call 0x1C17CF4
	118 Move X0, 0xACA000
	119 Move X0, [X0+2720]
	120 Call 0x1C17CF4
	121 Move X0, 0xACA000
	122 Move X0, [X0+2728]
	123 Call 0x1C17CF4
	124 Move X0, 0xACA000
	125 Move X0, [X0+2736]
	126 Call 0x1C17CF4
	127 Move X0, 0xACA000
	128 Move X0, [X0+2384]
	129 Call 0x1C17CF4
	130 Move X0, 0xACA000
	131 Move X0, [X0+2744]
	132 Call 0x1C17CF4
	133 Move X0, 0xACA000
	134 Move X0, [X0+2752]
	135 Call 0x1C17CF4
	136 Move X0, 0xA82000
	137 Move X0, [X0+1200]
	138 Call 0x1C17CF4
	139 Move X0, 0xAAF000
	140 Move X0, [X0+4016]
	141 Call 0x1C17CF4
	142 Move W8, 1
	143 Move [X20+1923], W8
	144 Move [X31+40], X31
	145 Move [X31+16], X31
	146 Move [X31+24], X31
	147 Move [X31+8], X31
	148 Compare X19, 0
	149 JumpIfEqual {155}
	150 Move X8, 0xACA000
	151 Move X8, [X8+2080]
	152 Move X1, [X8]
	153 Move X8, [X19]
	154 NotImplemented "Instruction CMP not yet implemented."
	155 Move X20, 0xACA000
	156 Move X20, [X20+1128]
	157 Move X0, [X20]
	158 Move W8, [X0+224]
	159 Compare W8, 0
	160 JumpIfNotEqual {162}
	161 Call 0x1C17DFC
	162 Call NetEventSource.get_IsEnabled
	163 Move TEMP, X0
	164 And TEMP, TEMP, 1
	165 Compare TEMP, 1
	166 JumpIfNotEqual {178}
	167 Move X0, [X20]
	168 Move W8, [X0+224]
	169 Compare W8, 0
	170 JumpIfNotEqual {172}
	171 Call 0x1C17DFC
	172 Move X8, 0xACA000
	173 Move X8, [X8+2656]
	174 Move X0, X21
	175 Move X1, X31
	176 Move X2, [X8]
	177 Call NetEventSource.Info, X0, X1, X2
	178 Compare X19, 0
	179 JumpIfEqual {997}
	180 Move X8, [X19]
	181 Move X20, 0xAAD000
	182 Move X26, 0xACA000
	183 Move X0, X19
	184 Move X9, [X8+472]
	185 Move X1, [X8+480]
	186 Move X20, [X20+2976]
	187 Move X26, [X26+2584]
	188 NotImplemented "Instruction BLR not yet implemented."
	189 Move [X21+248], X0
	190 Move X0, [X20]
	191 Call 0x1C17F10
	192 Move X1, X31
	193 Move X20, X0
	194 Call ArrayList..ctor, X0
	195 Move W8, [X19+168]
	196 Compare W8, 0
	197 JumpIfEqual {241}
	198 Move X0, X21
	199 Move X1, X31
	200 Call NetworkStreamWrapper.get_UsingSecureStream, X0
	201 Move TEMP, X0
	202 And TEMP, TEMP, 1
	203 Compare TEMP, 1
	204 JumpIfEqual {241}
	205 Move X8, 0xACA000
	206 Move X9, 0xACA000
	207 Move X8, [X8+2600]
	208 Move X9, [X9+2608]
	209 Move X1, [X8]
	210 Move X2, [X9]
	211 Call FtpControlStream.FormatFtpCommand, X0, X1, X2
	212 Move X8, [X26]
	213 Move X23, X0
	214 Move X0, X8
	215 Call 0x1C17F10
	216 Move X1, X31
	217 Move X22, X0
	218 Call Object..ctor, X0
	219 Move [X22+16], X23
	220 Compare X20, 0
	221 JumpIfEqual {997}
	222 Move X8, [X20]
	223 Move X0, X20
	224 Move X1, X22
	225 Move X9, [X8+776]
	226 Move X2, [X8+784]
	227 NotImplemented "Instruction BLR not yet implemented."
	228 Move [X21+232], X31
	229 Move [X21+240], X31
	230 Move [X21+224], X31
	231 Move X8, 0xA82000
	232 Move X8, [X8+632]
	233 Move W9, [X21+256]
	234 Move X8, [X8]
	235 NotImplemented "Instruction CMP not yet implemented."
	236 Move X8, [X8+184]
	237 Move X8, [X8]
	238 Move [X21+192], X8
	239 Move W8, 2
	240 Move [X21+256], W8
	241 Move W8, [X21+256]
	242 NotImplemented "Instruction CMP not yet implemented."
	243 Move X8, [X19]
	244 Move X0, X19
	245 Move X9, [X8+552]
	246 Move X1, [X8+560]
	247 NotImplemented "Instruction BLR not yet implemented."
	248 Move X8, [X19]
	249 Move X22, X0
	250 Move X0, X19
	251 Move X9, [X8+472]
	252 Move X1, [X8+480]
	253 NotImplemented "Instruction BLR not yet implemented."
	254 Compare X22, 0
	255 JumpIfEqual {997}
	256 Move X9, 0xAC6000
	257 Move X8, [X22]
	258 Move X9, [X9+2088]
	259 Move X10, 0xACA000
	260 Move X23, X0
	261 Move X1, [X9]
	262 Move X10, [X10+2664]
	263 NotImplemented "Instruction LDRH not yet implemented."
	264 Move X24, [X10]
	265 Compare X9, 0
	266 JumpIfEqual {273}
	267 Move X10, [X8+176]
	268 Add X10, X10, 8
	269 NotImplemented "Instruction LDUR not yet implemented."
	270 NotImplemented "Instruction CMP not yet implemented."
	271 Subtract X9, X9, 1
	272 Add X10, X10, 16
	273 Move X0, X22
	274 Move W2, W31
	275 Call 0x1C5D788
	276 NotImplemented "Instruction LDRSW not yet implemented."
	277 Add X8, X8, X9
	278 Add X0, X8, 312
	279 Move X8, [X0]
	280 Move X3, [X0+8]
	281 Move X0, X22
	282 Move X1, X23
	283 Move X2, X24
	284 NotImplemented "Instruction BLR not yet implemented."
	285 Move X1, X0
	286 Move X0, X21
	287 Call FtpControlStream.set_Credentials, X0, X1
	288 Move X23, 0xA80000
	289 Move X23, [X23+2288]
	290 Move X0, [X23]
	291 Call 0x1C17F10
	292 Move X1, X31
	293 Move X22, X0
	294 Call StringBuilder..ctor, X0
	295 Move [X21+168], X22
	296 Move X0, [X23]
	297 Call 0x1C17F10
	298 Move X1, X31
	299 Move X22, X0
	300 Call StringBuilder..ctor, X0
	301 Move [X21+176], X22
	302 Move X8, 0xA82000
	303 Move X8, [X8+632]
	304 Move X0, X21
	305 Move X8, [X8]
	306 Move X8, [X8+184]
	307 Move X23, [X8]
	308 Call FtpControlStream.get_Credentials, X0
	309 Compare X0, 0
	310 JumpIfEqual {348}
	311 Move X0, X21
	312 Call FtpControlStream.get_Credentials, X0
	313 Compare X0, 0
	314 JumpIfEqual {997}
	315 Move X1, X31
	316 Call NetworkCredential.get_UserName, X0
	317 Move X22, X0
	318 Move X0, X21
	319 Call FtpControlStream.get_Credentials, X0
	320 Compare X0, 0
	321 JumpIfEqual {997}
	322 Move X1, X31
	323 Call NetworkCredential.get_Domain, X0
	324 Move X1, X31
	325 Move X23, X0
	326 Call String.IsNullOrEmpty, X0
	327 Move TEMP, X0
	328 And TEMP, TEMP, 1
	329 Compare TEMP, 1
	330 JumpIfEqual {339}
	331 Move X8, 0xAB4000
	332 Move X8, [X8+2040]
	333 Move X0, X23
	334 Move X2, X22
	335 Move X3, X31
	336 Move X1, [X8]
	337 Call String.Concat, X0, X1, X2
	338 Move X22, X0
	339 Move X0, X21
	340 Call FtpControlStream.get_Credentials, X0
	341 Compare X0, 0
	342 JumpIfEqual {997}
	343 Move X1, X31
	344 Call NetworkCredential.get_Password, X0
	345 Move X23, X0
	346 Compare X22, 0
	347 JumpIfNotEqual {351}
	348 Move X22, X23
	349 Compare X22, 0
	350 JumpIfEqual {997}
	351 Move W8, [X22+16]
	352 Compare W8, 0
	353 JumpIfNotEqual {365}
	354 Compare X23, 0
	355 JumpIfEqual {997}
	356 Move W8, [X23+16]
	357 Compare W8, 0
	358 JumpIfNotEqual {365}
	359 Move X8, 0xACA000
	360 Move X9, 0xACA000
	361 Move X8, [X8+2640]
	362 Move X9, [X9+2680]
	363 Move X22, [X8]
	364 Move X23, [X9]
	365 Move X8, 0xACA000
	366 Move X8, [X8+2384]
	367 Move X2, X22
	368 Move X1, [X8]
	369 Call FtpControlStream.FormatFtpCommand, X0, X1, X2
	370 Move X8, [X26]
	371 Move X24, X0
	372 Move X0, X8
	373 Call 0x1C17F10
	374 Move X1, X31
	375 Move X22, X0
	376 Call Object..ctor, X0
	377 Move [X22+16], X24
	378 Compare X20, 0
	379 JumpIfEqual {997}
	380 Move X8, [X20]
	381 Move X0, X20
	382 Move X1, X22
	383 Move X9, [X8+776]
	384 Move X2, [X8+784]
	385 NotImplemented "Instruction BLR not yet implemented."
	386 Move X8, 0xACA000
	387 Move X8, [X8+2352]
	388 Move X2, X23
	389 Move X1, [X8]
	390 Call FtpControlStream.FormatFtpCommand, X0, X1, X2
	391 Move X8, [X26]
	392 Move X22, X0
	393 Move X0, X8
	394 Call 0x1C17F10
	395 Move X1, X31
	396 Move X23, X0
	397 Call Object..ctor, X0
	398 Move W8, 8
	399 Move [X23+16], X22
	400 Move [X23+24], W8
	401 Move X8, [X20]
	402 Move X0, X20
	403 Move X1, X23
	404 Move X9, [X8+776]
	405 Move X2, [X8+784]
	406 NotImplemented "Instruction BLR not yet implemented."
	407 Move W8, [X19+168]
	408 Compare W8, 0
	409 JumpIfEqual {459}
	410 Move X0, X21
	411 Move X1, X31
	412 Call NetworkStreamWrapper.get_UsingSecureStream, X0
	413 Move TEMP, X0
	414 And TEMP, TEMP, 1
	415 Compare TEMP, 1
	416 JumpIfEqual {459}
	417 Move X8, 0xACA000
	418 Move X9, 0xA82000
	419 Move X8, [X8+2632]
	420 Move X9, [X9+1200]
	421 Move X1, [X8]
	422 Move X2, [X9]
	423 Call FtpControlStream.FormatFtpCommand, X0, X1, X2
	424 Move X8, [X26]
	425 Move X22, X0
	426 Move X0, X8
	427 Call 0x1C17F10
	428 Move X1, X31
	429 Move X23, X0
	430 Call Object..ctor, X0
	431 Move [X23+16], X22
	432 Move X8, [X20]
	433 Move X0, X20
	434 Move X1, X23
	435 Move X9, [X8+776]
	436 Move X2, [X8+784]
	437 NotImplemented "Instruction BLR not yet implemented."
	438 Move X8, 0xACA000
	439 Move X9, 0xAAF000
	440 Move X8, [X8+2728]
	441 Move X9, [X9+4016]
	442 Move X1, [X8]
	443 Move X2, [X9]
	444 Call FtpControlStream.FormatFtpCommand, X0, X1, X2
	445 Move X8, [X26]
	446 Move X22, X0
	447 Move X0, X8
	448 Call 0x1C17F10
	449 Move X1, X31
	450 Move X23, X0
	451 Call Object..ctor, X0
	452 Move [X23+16], X22
	453 Move X8, [X20]
	454 Move X0, X20
	455 Move X1, X23
	456 Move X9, [X8+776]
	457 Move X2, [X8+784]
	458 NotImplemented "Instruction BLR not yet implemented."
	459 Move X8, 0xACA000
	460 Move X9, 0xACA000
	461 Move X8, [X8+2720]
	462 Move X9, [X9+2736]
	463 Move X1, [X8]
	464 Move X2, [X9]
	465 Call FtpControlStream.FormatFtpCommand, X0, X1, X2
	466 Move X8, [X26]
	467 Move X22, X0
	468 Move X0, X8
	469 Call 0x1C17F10
	470 Move X1, X31
	471 Move X23, X0
	472 Call Object..ctor, X0
	473 Move [X23+16], X22
	474 Move X8, [X20]
	475 Move X0, X20
	476 Move X1, X23
	477 Move X9, [X8+776]
	478 Move X2, [X8+784]
	479 NotImplemented "Instruction BLR not yet implemented."
	480 Move X8, 0xACA000
	481 Move X8, [X8+2592]
	482 Move X2, X31
	483 Move X1, [X8]
	484 Call FtpControlStream.FormatFtpCommand, X0, X1, X2
	485 Move X8, [X26]
	486 Move X22, X0
	487 Move X0, X8
	488 Call 0x1C17F10
	489 Move X1, X31
	490 Move X23, X0
	491 Call Object..ctor, X0
	492 Move [X23+16], X22
	493 Move X8, [X20]
	494 Move X0, X20
	495 Move X1, X23
	496 Move X9, [X8+776]
	497 Move X2, [X8+784]
	498 NotImplemented "Instruction BLR not yet implemented."
	499 Move X0, [X19+56]
	500 Compare X0, 0
	501 JumpIfEqual {997}
	502 Move W1, 16
	503 Move X2, X31
	504 Call FtpMethodInfo.HasFlag, X0, X1
	505 Move TEMP, X0
	506 And TEMP, TEMP, 1
	507 Compare TEMP, 1
	508 JumpIfNotEqual {510}
	509 Move W22, 2
	510 Move X0, [X19+56]
	511 Compare X0, 0
	512 JumpIfEqual {997}
	513 Move W1, 32
	514 Move X2, X31
	515 Call FtpMethodInfo.HasFlag, X0, X1
	516 And W22, W0, 1
	517 Move X8, [X19]
	518 Move X23, 0xACA000
	519 Move X0, X19
	520 Move X9, [X8+472]
	521 Move X1, [X8+480]
	522 Move X23, [X23+2248]
	523 NotImplemented "Instruction BLR not yet implemented."
	524 Move X8, [X23]
	525 Move X23, X0
	526 Move W9, [X8+224]
	527 Compare W9, 0
	528 JumpIfNotEqual {531}
	529 Move X0, X8
	530 Call 0x1C17DFC
	531 Add X2, X31, 40
	532 Add X3, X31, 24
	533 Add X4, X31, 16
	534 Move W0, W22
	535 Move X1, X23
	536 Call FtpControlStream.GetPathInfo, X0, X1, X2, X3, X4
	537 Move X22, [X31+16]
	538 Compare X22, 0
	539 JumpIfEqual {997}
	540 Move W8, [X22+16]
	541 Compare W8, 0
	542 JumpIfNotEqual {553}
	543 Move X0, [X19+56]
	544 Compare X0, 0
	545 JumpIfEqual {997}
	546 Move W1, 4
	547 Move X2, X31
	548 Call FtpMethodInfo.HasFlag, X0, X1
	549 Move TEMP, X0
	550 And TEMP, TEMP, 1
	551 Compare TEMP, 1
	552 JumpIfEqual {1003}
	553 Move X0, [X21+232]
	554 Compare X0, 0
	555 JumpIfEqual {590}
	556 Move X1, [X21+224]
	557 Compare X1, 0
	558 JumpIfEqual {590}
	559 Move X2, X31
	560 Call String.op_Inequality, X0, X1
	561 Move TEMP, X0
	562 And TEMP, TEMP, 1
	563 Compare TEMP, 1
	564 JumpIfNotEqual {590}
	565 Move X8, 0xACA000
	566 Move X2, [X21+224]
	567 Move X8, [X8+2376]
	568 Move X1, [X8]
	569 Call FtpControlStream.FormatFtpCommand, X0, X1, X2
	570 Move X8, [X26]
	571 Move X24, X0
	572 Move X0, X8
	573 Call 0x1C17F10
	574 Move X1, X31
	575 Move X23, X0
	576 Call Object..ctor, X0
	577 Move W8, 1
	578 Move [X23+16], X24
	579 Move [X23+24], W8
	580 Compare X20, 0
	581 JumpIfEqual {997}
	582 Move X8, [X20]
	583 Move X0, X20
	584 Move X1, X23
	585 Move X9, [X8+776]
	586 Move X2, [X8+784]
	587 NotImplemented "Instruction BLR not yet implemented."
	588 Move X8, [X21+224]
	589 Move [X21+240], X8
	590 Move X0, [X19+56]
	591 Compare X0, 0
	592 JumpIfEqual {997}
	593 Move W1, 256
	594 Move X2, X31
	595 Call FtpMethodInfo.HasFlag, X0, X1
	596 Move TEMP, X0
	597 And TEMP, TEMP, 1
	598 Compare TEMP, 1
	599 JumpIfNotEqual {629}
	600 Move X23, [X31+24]
	601 Compare X23, 0
	602 JumpIfEqual {997}
	603 Move W8, [X23+16]
	604 NotImplemented "Instruction CMP not yet implemented."
	605 Move X8, 0xACA000
	606 Move X8, [X8+2376]
	607 Move X2, X23
	608 Move X1, [X8]
	609 Call FtpControlStream.FormatFtpCommand, X0, X1, X2
	610 Move X8, [X26]
	611 Move X25, X0
	612 Move X0, X8
	613 Call 0x1C17F10
	614 Move X1, X31
	615 Move X24, X0
	616 Call Object..ctor, X0
	617 Move W8, 1
	618 Move [X24+16], X25
	619 Move [X24+24], W8
	620 Compare X20, 0
	621 JumpIfEqual {997}
	622 Move X8, [X20]
	623 Move X0, X20
	624 Move X1, X24
	625 Move X9, [X8+776]
	626 Move X2, [X8+784]
	627 NotImplemented "Instruction BLR not yet implemented."
	628 Move [X21+240], X23
	629 Move X0, [X19+56]
	630 Compare X0, 0
	631 JumpIfEqual {997}
	632 Move X1, X31
	633 Call FtpMethodInfo.get_IsCommandOnly, X0
	634 Move TEMP, X0
	635 And TEMP, TEMP, 1
	636 Compare TEMP, 1
	637 JumpIfEqual {772}
	638 Move W8, [X19+121]
	639 Move X9, 0xACA000
	640 Move X10, 0xAAC000
	641 Move X9, [X9+2752]
	642 Move X10, [X10+856]
	643 NotImplemented "Instruction CMP not yet implemented."
	644 Move X0, [X21+192]
	645 Move X2, X31
	646 NotImplemented "Instruction CSEL not yet implemented."
	647 Move X23, [X8]
	648 Move X1, X23
	649 Call String.op_Inequality, X0, X1
	650 Move TEMP, X0
	651 And TEMP, TEMP, 1
	652 Compare TEMP, 1
	653 JumpIfNotEqual {676}
	654 Move X8, 0xACA000
	655 Move X8, [X8+2616]
	656 Move X2, X23
	657 Move X1, [X8]
	658 Call FtpControlStream.FormatFtpCommand, X0, X1, X2
	659 Move X8, [X26]
	660 Move X25, X0
	661 Move X0, X8
	662 Call 0x1C17F10
	663 Move X1, X31
	664 Move X24, X0
	665 Call Object..ctor, X0
	666 Move [X24+16], X25
	667 Compare X20, 0
	668 JumpIfEqual {997}
	669 Move X8, [X20]
	670 Move X0, X20
	671 Move X1, X24
	672 Move X9, [X8+776]
	673 Move X2, [X8+784]
	674 NotImplemented "Instruction BLR not yet implemented."
	675 Move [X21+192], X23
	676 Move W23, [X19+120]
	677 Move X0, X21
	678 Move X1, X31
	679 Call NetworkStreamWrapper.get_ServerAddress, X0
	680 Compare X0, 0
	681 JumpIfEqual {997}
	682 Move X8, [X0+24]
	683 Compare W23, 0
	684 JumpIfEqual {706}
	685 Move X9, 0xACA000
	686 Move X10, 0xACA000
	687 Move X9, [X9+2672]
	688 Move X10, [X10+2688]
	689 NotImplemented "Instruction CMP not yet implemented."
	690 Move X2, X31
	691 NotImplemented "Instruction CSEL not yet implemented."
	692 Move X1, [X8]
	693 Call FtpControlStream.FormatFtpCommand, X0, X1, X2
	694 Move X8, [X26]
	695 Move X23, X0
	696 Move X0, X8
	697 Call 0x1C17F10
	698 Move X1, X31
	699 Move X21, X0
	700 Call Object..ctor, X0
	701 Move W8, 4
	702 Move [X21+16], X23
	703 Move [X21+24], W8
	704 Compare X20, 0
	705 JumpIfNotEqual {731}
	706 Move X9, 0xACA000
	707 Move X10, 0xACA000
	708 Move X9, [X9+2648]
	709 Move X10, [X10+2696]
	710 NotImplemented "Instruction CMP not yet implemented."
	711 Move X0, X21
	712 Move X1, X19
	713 NotImplemented "Instruction CSEL not yet implemented."
	714 Move X23, [X8]
	715 Call FtpControlStream.CreateFtpListenerSocket, X0, X1
	716 Move X0, X21
	717 Call FtpControlStream.GetPortCommandLine, X0, X1
	718 Move X1, X23
	719 Move X2, X0
	720 Call FtpControlStream.FormatFtpCommand, X0, X1, X2
	721 Move X8, [X26]
	722 Move X23, X0
	723 Move X0, X8
	724 Call 0x1C17F10
	725 Move X1, X31
	726 Move X21, X0
	727 Call Object..ctor, X0
	728 Move [X21+16], X23
	729 Compare X20, 0
	730 JumpIfEqual {997}
	731 Move X8, [X20]
	732 Move X0, X20
	733 Move X1, X21
	734 Move X9, [X8+776]
	735 Move X2, [X8+784]
	736 NotImplemented "Instruction BLR not yet implemented."
	737 Move X8, [X19+104]
	738 NotImplemented "Instruction CMP not yet implemented."
	739 Move X9, 0xA82000
	740 Move X9, [X9+3144]
	741 Move [X31+8], X8
	742 Move X0, [X9]
	743 Move W8, [X0+224]
	744 Compare W8, 0
	745 JumpIfNotEqual {747}
	746 Call 0x1C17DFC
	747 Move X0, X31
	748 Call CultureInfo.get_InvariantCulture
	749 Move X1, X0
	750 Add X0, X31, 8
	751 Move X2, X31
	752 Call Int64.ToString, X0, X1
	753 Move X8, 0xACA000
	754 Move X8, [X8+2704]
	755 Move X2, X0
	756 Move X1, [X8]
	757 Call FtpControlStream.FormatFtpCommand, X0, X1, X2
	758 Move X8, [X26]
	759 Move X21, X0
	760 Move X0, X8
	761 Call 0x1C17F10
	762 Move X1, X31
	763 Move X23, X0
	764 Call Object..ctor, X0
	765 Move [X23+16], X21
	766 Move X8, [X20]
	767 Move X0, X20
	768 Move X1, X23
	769 Move X9, [X8+776]
	770 Move X2, [X8+784]
	771 NotImplemented "Instruction BLR not yet implemented."
	772 Move X0, [X19+56]
	773 Compare X0, 0
	774 JumpIfEqual {997}
	775 Move X1, X31
	776 Call FtpMethodInfo.get_IsCommandOnly, X0
	777 Move TEMP, X0
	778 And TEMP, TEMP, 1
	779 Compare TEMP, 1
	780 JumpIfNotEqual {782}
	781 Move W24, 1
	782 Move W8, [X19+120]
	783 Move W9, 3
	784 NotImplemented "Instruction CMP not yet implemented."
	785 Move W8, 7
	786 NotImplemented "Instruction CSEL not yet implemented."
	787 Move X0, [X19+56]
	788 Compare X0, 0
	789 JumpIfEqual {997}
	790 Move W8, [X0+24]
	791 NotImplemented "Instruction CMP not yet implemented."
	792 Move X23, 0xA82000
	793 Move X23, [X23+632]
	794 Move X21, [X31+24]
	795 Move X2, X31
	796 Move X8, [X23]
	797 Move X0, X21
	798 Move X8, [X8+184]
	799 Move X1, [X8]
	800 Call String.op_Equality, X0, X1
	801 Move TEMP, X0
	802 And TEMP, TEMP, 1
	803 Compare TEMP, 1
	804 JumpIfNotEqual {825}
	805 Move X8, [X23]
	806 Move X8, [X8+184]
	807 Move X21, [X8]
	808 Move W1, 16
	809 Move X2, X31
	810 Call FtpMethodInfo.HasFlag, X0, X1
	811 Move TEMP, X0
	812 And TEMP, TEMP, 1
	813 Compare TEMP, 1
	814 JumpIfNotEqual {900}
	815 Move X8, [X19]
	816 Move X0, X19
	817 Move X9, [X8+440]
	818 Move X1, [X8+448]
	819 NotImplemented "Instruction BLR not yet implemented."
	820 Move X8, 0xA82000
	821 Move X8, [X8+632]
	822 Move X8, [X8]
	823 Move X8, [X8+184]
	824 Move X2, [X8]
	825 Move X8, 0xA81000
	826 Move X8, [X8+3784]
	827 Move X0, X21
	828 Move X2, X31
	829 Move X1, [X8]
	830 Call String.Concat, X0, X1
	831 Move X21, X0
	832 Move X0, X21
	833 Move X1, X22
	834 Move X2, X31
	835 Call String.Concat, X0, X1
	836 Move X8, 0xAC9000
	837 Move X8, [X8+2744]
	838 Move X2, X0
	839 Move X1, [X8]
	840 Call FtpControlStream.FormatFtpCommand, X0, X1, X2
	841 Move X8, [X26]
	842 Move X23, X0
	843 Move X0, X8
	844 Call 0x1C17F10
	845 Move X1, X31
	846 Move X22, X0
	847 Call Object..ctor, X0
	848 Move [X22+16], X23
	849 Move [X22+24], W24
	850 Compare X20, 0
	851 JumpIfEqual {997}
	852 Move X8, [X20]
	853 Move X0, X20
	854 Move X1, X22
	855 Move X9, [X8+776]
	856 Move X2, [X8+784]
	857 NotImplemented "Instruction BLR not yet implemented."
	858 Move X0, [X19+64]
	859 Move X1, X31
	860 Call String.IsNullOrEmpty, X0
	861 Move TEMP, X0
	862 And TEMP, TEMP, 1
	863 Compare TEMP, 1
	864 JumpIfEqual {879}
	865 Move X0, [X19+64]
	866 Compare X0, 0
	867 JumpIfEqual {997}
	868 Move X8, 0xA80000
	869 Move X8, [X8+3784]
	870 Move W2, 5
	871 Move X3, X31
	872 Move X1, [X8]
	873 Call String.StartsWith, X0, X1, X2
	874 Move TEMP, X0
	875 And TEMP, TEMP, 1
	876 Compare TEMP, 1
	877 JumpIfNotEqual {879}
	878 Move X2, [X19+64]
	879 Move X1, [X19+64]
	880 Move X0, X21
	881 Move X2, X31
	882 Call String.Concat, X0, X1
	883 Move X2, X0
	884 Move X8, 0xAC9000
	885 Move X8, [X8+2712]
	886 Move X1, [X8]
	887 Call FtpControlStream.FormatFtpCommand, X0, X1, X2
	888 Move X8, [X26]
	889 Move X19, X0
	890 Move X0, X8
	891 Call 0x1C17F10
	892 Move X1, X31
	893 Move X21, X0
	894 Call Object..ctor, X0
	895 Move [X21+16], X19
	896 Move [X21+24], W24
	897 Move X8, [X20]
	898 Move X0, X20
	899 Move X1, X21
	900 Move X0, [X19+56]
	901 Compare X0, 0
	902 JumpIfEqual {997}
	903 Move W1, 256
	904 Move X2, X31
	905 Call FtpMethodInfo.HasFlag, X0, X1
	906 Move X8, [X19]
	907 Move W21, W0
	908 Move X0, X19
	909 Move X9, [X8+440]
	910 Move X1, [X8+448]
	911 NotImplemented "Instruction BLR not yet implemented."
	912 Move TEMP, X21
	913 And TEMP, TEMP, 1
	914 Compare TEMP, 1
	915 JumpIfNotEqual {918}
	916 Move X1, X0
	917 Move X2, X22
	918 Move X2, [X31+40]
	919 Move X1, X0
	920 Call FtpControlStream.FormatFtpCommand, X0, X1, X2
	921 Move X8, [X26]
	922 Move X21, X0
	923 Move X0, X8
	924 Call 0x1C17F10
	925 Move X1, X31
	926 Move X19, X0
	927 Call Object..ctor, X0
	928 Move [X19+16], X21
	929 Move [X19+24], W24
	930 Compare X20, 0
	931 JumpIfEqual {997}
	932 Move X8, [X20]
	933 Move X0, X20
	934 Move X1, X19
	935 Move X9, [X8+776]
	936 Move X2, [X8+784]
	937 NotImplemented "Instruction BLR not yet implemented."
	938 Move X8, 0xAC9000
	939 Move X8, [X8+2624]
	940 Move X22, 0xAC9000
	941 Move X23, 0xA7F000
	942 Move X2, X31
	943 Move X1, [X8]
	944 Move X22, [X22+2576]
	945 Move X23, [X23+1728]
	946 Call FtpControlStream.FormatFtpCommand, X0, X1, X2
	947 Move X8, [X26]
	948 Move X19, X0
	949 Move X0, X8
	950 Call 0x1C17F10
	951 Move X1, X31
	952 Move X21, X0
	953 Call Object..ctor, X0
	954 Move [X21+16], X19
	955 Move X8, [X20]
	956 Move X0, X20
	957 Move X1, X21
	958 Move X9, [X8+776]
	959 Move X2, [X8+784]
	960 NotImplemented "Instruction BLR not yet implemented."
	961 Move X0, [X23]
	962 Move X19, [X22]
	963 Move W8, [X0+224]
	964 Compare W8, 0
	965 JumpIfNotEqual {967}
	966 Call 0x1C17DFC
	967 Move X0, X19
	968 Move X1, X31
	969 Call Type.GetTypeFromHandle, X0
	970 Move X8, [X20]
	971 Move X1, X0
	972 Move X0, X20
	973 Move X9, [X8+1032]
	974 Move X2, [X8+1040]
	975 NotImplemented "Instruction BLR not yet implemented."
	976 Compare X0, 0
	977 JumpIfEqual {986}
	978 Move X8, 0xAC9000
	979 Move X8, [X8+2568]
	980 Move X19, X0
	981 Move X20, [X8]
	982 Move X1, X20
	983 Call 0x1C17E00
	984 Compare X0, 0
	985 JumpIfEqual {1000}
	986 Move X20, [X31+96]
	987 Move X19, [X31+104]
	988 Move X22, [X31+80]
	989 Move X21, [X31+88]
	990 Move X24, [X31+64]
	991 Move X23, [X31+72]
	992 Move X26, [X31+48]
	993 Move X25, [X31+56]
	994 Move X30, [X31+32]
	995 Add X31, X31, 112
	996 Return X0
	997 Call 0x1C17F20
	998 Move X0, X19
	999 Call 0x1C181E0
	1000 Move X0, X19
	1001 Move X1, X20
	1002 Call 0x1C181E0
	1003 Move X0, 0xAAA000
	1004 Move X0, [X0+816]
	1005 Call 0x1C17D08
	1006 Call 0x1C17F10
	1007 Move X19, X0
	1008 Move X0, 0xAC9000
	1009 Move X0, [X0+2760]
	1010 Call 0x1C17D08
	1011 Move X1, X0
	1012 Move X0, X19
	1013 Move X2, X31
	1014 Call WebException..ctor, X0, X1
	1015 Move X0, 0xAC9000
	1016 Move X0, [X0+2768]
	1017 Call 0x1C17D08
	1018 Move X1, X0
	1019 Move X0, X19
	1020 Call 0x1C17DEC

Method: System.Net.CommandStream/PipelineInstruction QueueOrCreateDataConection(System.Net.CommandStream/PipelineEntry entry, System.Net.ResponseDescription response, System.Boolean timeout, ref System.IO.Stream stream, out System.Boolean isSocketReady)

Disassembly:
	0x03673410 LDP X20, X19, [X31 + 0x10]
	0x03673414 LDR X8, [X8]
	0x03673418 LDR X8, [X8 + 0xB8]
	0x0367341C LDR X0, [X8]
	0x03673420 LDR X30, [X31], #0x20
	0x03673424 RET
	0x03673428 BL 0x1C16F20
	0x0367342C SUB X31, X31, 0x70
	0x03673430 STR X30, [X31 + 0x20]
	0x03673434 STP X26, X25, [X31 + 0x30]
	0x03673438 STP X24, X23, [X31 + 0x40]
	0x0367343C STP X22, X21, [X31 + 0x50]
	0x03673440 STP X20, X19, [X31 + 0x60]
	0x03673444 ADRP X20, 0xD6D000
	0x03673448 LDRB W8, [X20 + 0x783]
	0x0367344C MOV X19, X1
	0x03673450 MOV X21, X0
	0x03673454 TBNZ X8, 0x0, 0x367364C
	0x03673458 ADRP X0, 0xAAD000
	0x0367345C LDR X0, [X0 + 0xBA0]
	0x03673460 BL 0x1C16CF4
	0x03673464 ADRP X0, 0xA82000
	0x03673468 LDR X0, [X0 + 0xC48]
	0x0367346C BL 0x1C16CF4
	0x03673470 ADRP X0, 0xACA000
	0x03673474 LDR X0, [X0 + 0x8C8]
	0x03673478 BL 0x1C16CF4
	0x0367347C ADRP X0, 0xACA000
	0x03673480 LDR X0, [X0 + 0x820]
	0x03673484 BL 0x1C16CF4
	0x03673488 ADRP X0, 0xAC6000
	0x0367348C LDR X0, [X0 + 0x828]
	0x03673490 BL 0x1C16CF4
	0x03673494 ADRP X0, 0xACA000
	0x03673498 LDR X0, [X0 + 0x468]
	0x0367349C BL 0x1C16CF4
	0x036734A0 ADRP X0, 0xACA000
	0x036734A4 LDR X0, [X0 + 0xA08]
	0x036734A8 BL 0x1C16CF4
	0x036734AC ADRP X0, 0xACA000
	0x036734B0 LDR X0, [X0 + 0xA10]
	0x036734B4 BL 0x1C16CF4
	0x036734B8 ADRP X0, 0xACA000
	0x036734BC LDR X0, [X0 + 0xA18]
	0x036734C0 BL 0x1C16CF4
	0x036734C4 ADRP X0, 0xA80000
	0x036734C8 LDR X0, [X0 + 0x8F0]
	0x036734CC BL 0x1C16CF4
	0x036734D0 ADRP X0, 0xA82000
	0x036734D4 LDR X0, [X0 + 0x278]
	0x036734D8 BL 0x1C16CF4
	0x036734DC ADRP X0, 0xA80000
	0x036734E0 LDR X0, [X0 + 0x6C0]
	0x036734E4 BL 0x1C16CF4
	0x036734E8 ADRP X0, 0xACA000
	0x036734EC LDR X0, [X0 + 0xA20]
	0x036734F0 BL 0x1C16CF4
	0x036734F4 ADRP X0, 0xACA000
	0x036734F8 LDR X0, [X0 + 0xA28]
	0x036734FC BL 0x1C16CF4
	0x03673500 ADRP X0, 0xAB4000
	0x03673504 LDR X0, [X0 + 0x7F8]
	0x03673508 BL 0x1C16CF4
	0x0367350C ADRP X0, 0xACA000
	0x03673510 LDR X0, [X0 + 0xA30]
	0x03673514 BL 0x1C16CF4
	0x03673518 ADRP X0, 0xACA000
	0x0367351C LDR X0, [X0 + 0xA38]
	0x03673520 BL 0x1C16CF4
	0x03673524 ADRP X0, 0xACA000
	0x03673528 LDR X0, [X0 + 0xA40]
	0x0367352C BL 0x1C16CF4
	0x03673530 ADRP X0, 0xACA000
	0x03673534 LDR X0, [X0 + 0xA48]
	0x03673538 BL 0x1C16CF4
	0x0367353C ADRP X0, 0xACA000
	0x03673540 LDR X0, [X0 + 0xA50]
	0x03673544 BL 0x1C16CF4
	0x03673548 ADRP X0, 0xACA000
	0x0367354C LDR X0, [X0 + 0x930]
	0x03673550 BL 0x1C16CF4
	0x03673554 ADRP X0, 0xACA000
	0x03673558 LDR X0, [X0 + 0xA58]
	0x0367355C BL 0x1C16CF4
	0x03673560 ADRP X0, 0xACA000
	0x03673564 LDR X0, [X0 + 0xA60]
	0x03673568 BL 0x1C16CF4
	0x0367356C ADRP X0, 0xAAC000
	0x03673570 LDR X0, [X0 + 0x358]
	0x03673574 BL 0x1C16CF4
	0x03673578 ADRP X0, 0xACA000
	0x0367357C LDR X0, [X0 + 0xA68]
	0x03673580 BL 0x1C16CF4
	0x03673584 ADRP X0, 0xACA000
	0x03673588 LDR X0, [X0 + 0xA70]
	0x0367358C BL 0x1C16CF4
	0x03673590 ADRP X0, 0xACA000
	0x03673594 LDR X0, [X0 + 0x948]
	0x03673598 BL 0x1C16CF4
	0x0367359C ADRP X0, 0xACA000
	0x036735A0 LDR X0, [X0 + 0xA78]
	0x036735A4 BL 0x1C16CF4
	0x036735A8 ADRP X0, 0xA81000
	0x036735AC LDR X0, [X0 + 0xEC8]
	0x036735B0 BL 0x1C16CF4
	0x036735B4 ADRP X0, 0xACA000
	0x036735B8 LDR X0, [X0 + 0xA80]
	0x036735BC BL 0x1C16CF4
	0x036735C0 ADRP X0, 0xACA000
	0x036735C4 LDR X0, [X0 + 0xA88]
	0x036735C8 BL 0x1C16CF4
	0x036735CC ADRP X0, 0xACA000
	0x036735D0 LDR X0, [X0 + 0xA90]
	0x036735D4 BL 0x1C16CF4
	0x036735D8 ADRP X0, 0xACA000
	0x036735DC LDR X0, [X0 + 0xA98]
	0x036735E0 BL 0x1C16CF4
	0x036735E4 ADRP X0, 0xACA000
	0x036735E8 LDR X0, [X0 + 0xAA0]
	0x036735EC BL 0x1C16CF4
	0x036735F0 ADRP X0, 0xACA000
	0x036735F4 LDR X0, [X0 + 0xAA8]
	0x036735F8 BL 0x1C16CF4
	0x036735FC ADRP X0, 0xACA000
	0x03673600 LDR X0, [X0 + 0xAB0]
	0x03673604 BL 0x1C16CF4
	0x03673608 ADRP X0, 0xACA000
	0x0367360C LDR X0, [X0 + 0x950]
	0x03673610 BL 0x1C16CF4
	0x03673614 ADRP X0, 0xACA000
	0x03673618 LDR X0, [X0 + 0xAB8]
	0x0367361C BL 0x1C16CF4
	0x03673620 ADRP X0, 0xACA000
	0x03673624 LDR X0, [X0 + 0xAC0]
	0x03673628 BL 0x1C16CF4
	0x0367362C ADRP X0, 0xA82000
	0x03673630 LDR X0, [X0 + 0x4B0]
	0x03673634 BL 0x1C16CF4
	0x03673638 ADRP X0, 0xAAF000
	0x0367363C LDR X0, [X0 + 0xFB0]
	0x03673640 BL 0x1C16CF4
	0x03673644 MOVZ W8, 0x1
	0x03673648 STRB W8, [X20 + 0x783]
	0x0367364C STR X31, [X31 + 0x28]
	0x03673650 STP X31, X31, [X31 + 0x10]
	0x03673654 STR X31, [X31 + 0x8]
	0x03673658 CBZ X19, 0x3673674
	0x0367365C ADRP X8, 0xACA000
	0x03673660 LDR X8, [X8 + 0x820]
	0x03673664 LDR X1, [X8]
	0x03673668 LDR X8, [X19]
	0x0367366C CMP X8, X1
	0x03673670 B.NE 0x3674240
	0x03673674 ADRP X20, 0xACA000
	0x03673678 LDR X20, [X20 + 0x468]
	0x0367367C LDR X0, [X20]
	0x03673680 LDR W8, [X0 + 0xE0]
	0x03673684 CBNZ W8, 0x367368C
	0x03673688 BL 0x1C16DFC
	0x0367368C BL 0x366A368
	0x03673690 TBZ X0, 0x0, 0x36736BC
	0x03673694 LDR X0, [X20]
	0x03673698 LDR W8, [X0 + 0xE0]
	0x0367369C CBNZ W8, 0x36736A4
	0x036736A0 BL 0x1C16DFC
	0x036736A4 ADRP X8, 0xACA000
	0x036736A8 LDR X8, [X8 + 0xA60]
	0x036736AC MOV X0, X21
	0x036736B0 MOV X1, X31
	0x036736B4 LDR X2, [X8]
	0x036736B8 BL 0x366A3CC
	0x036736BC CBZ X19, 0x367423C
	0x036736C0 LDR X8, [X19]
	0x036736C4 ADRP X20, 0xAAD000
	0x036736C8 ADRP X26, 0xACA000
	0x036736CC MOV X0, X19
	0x036736D0 LDP X9, X1, [X8 + 0x1D8]
	0x036736D4 LDR X20, [X20 + 0xBA0]
	0x036736D8 LDR X26, [X26 + 0xA18]
	0x036736DC BLR X9
	0x036736E0 STR X0, [X21 + 0xF8]
	0x036736E4 LDR X0, [X20]
	0x036736E8 BL 0x1C16F10
	0x036736EC MOV X1, X31
	0x036736F0 MOV X20, X0
	0x036736F4 BL 0x3351F5C
	0x036736F8 LDRB W8, [X19 + 0xA8]
	0x036736FC CBZ W8, 0x367379C
	0x03673700 MOV X0, X21
	0x03673704 MOV X1, X31
	0x03673708 BL 0x367D78C
	0x0367370C TBNZ X0, 0x0, 0x367379C
	0x03673710 ADRP X8, 0xACA000
	0x03673714 ADRP X9, 0xACA000
	0x03673718 LDR X8, [X8 + 0xA28]
	0x0367371C LDR X9, [X9 + 0xA30]
	0x03673720 LDR X1, [X8]
	0x03673724 LDR X2, [X9]
	0x03673728 BL 0x367429C
	0x0367372C LDR X8, [X26]
	0x03673730 MOV X23, X0
	0x03673734 MOV X0, X8
	0x03673738 BL 0x1C16F10
	0x0367373C MOV X1, X31
	0x03673740 MOV X22, X0
	0x03673744 BL 0x33BDD8C
	0x03673748 STR X23, [X22 + 0x10]
	0x0367374C CBZ X20, 0x367423C
	0x03673750 LDR X8, [X20]
	0x03673754 MOV X0, X20
	0x03673758 MOV X1, X22
	0x0367375C LDR X9, [X8 + 0x308]
	0x03673760 LDR X2, [X8 + 0x310]
	0x03673764 BLR X9
	0x03673768 STP X31, X31, [X21 + 0xE8]
	0x0367376C STR X31, [X21 + 0xE0]
	0x03673770 ADRP X8, 0xA82000
	0x03673774 LDR X8, [X8 + 0x278]
	0x03673778 LDRB W9, [X21 + 0x100]
	0x0367377C LDR X8, [X8]
	0x03673780 CMP W9, 0x1
	0x03673784 LDR X8, [X8 + 0xB8]
	0x03673788 LDR X8, [X8]
	0x0367378C STR X8, [X21 + 0xC0]
	0x03673790 B.NE 0x367379C
	0x03673794 MOVZ W8, 0x2
	0x03673798 STRB W8, [X21 + 0x100]
	0x0367379C LDRB W8, [X21 + 0x100]
	0x036737A0 CMP W8, 0x1
	0x036737A4 B.EQ 0x3673B64
	0x036737A8 LDR X8, [X19]
	0x036737AC MOV X0, X19
	0x036737B0 LDR X9, [X8 + 0x228]
	0x036737B4 LDR X1, [X8 + 0x230]
	0x036737B8 BLR X9
	0x036737BC LDR X8, [X19]
	0x036737C0 MOV X22, X0
	0x036737C4 MOV X0, X19
	0x036737C8 LDP X9, X1, [X8 + 0x1D8]
	0x036737CC BLR X9
	0x036737D0 CBZ X22, 0x367423C
	0x036737D4 ADRP X9, 0xAC6000
	0x036737D8 LDR X8, [X22]
	0x036737DC LDR X9, [X9 + 0x828]
	0x036737E0 ADRP X10, 0xACA000
	0x036737E4 MOV X23, X0
	0x036737E8 LDR X1, [X9]
	0x036737EC LDR X10, [X10 + 0xA68]
	0x036737F0 LDRH W9, [X8 + 0x12E]
	0x036737F4 LDR X24, [X10]
	0x036737F8 CBZ X9, 0x367381C
	0x036737FC LDR X10, [X8 + 0xB0]
	0x03673800 ADD X10, X10, 0x8
	0x03673804 LDUR X11, [X10 - 0x8]
	0x03673808 CMP X11, X1
	0x0367380C B.EQ 0x367382C
	0x03673810 SUBS X9, X9, 0x1
	0x03673814 ADD X10, X10, 0x10
	0x03673818 B.NE 0x3673804
	0x0367381C MOV X0, X22
	0x03673820 MOV W2, W31
	0x03673824 BL 0x1C5C788
	0x03673828 B 0x3673838
	0x0367382C LDRSW X9, [X10]
	0x03673830 ADD X8, X8, X9, 0x4, LSL
	0x03673834 ADD X0, X8, 0x138
	0x03673838 LDP X8, X3, [X0]
	0x0367383C MOV X0, X22
	0x03673840 MOV X1, X23
	0x03673844 MOV X2, X24
	0x03673848 BLR X8
	0x0367384C MOV X1, X0
	0x03673850 MOV X0, X21
	0x03673854 BL 0x3670E84
	0x03673858 ADRP X23, 0xA80000
	0x0367385C LDR X23, [X23 + 0x8F0]
	0x03673860 LDR X0, [X23]
	0x03673864 BL 0x1C16F10
	0x03673868 MOV X1, X31
	0x0367386C MOV X22, X0
	0x03673870 BL 0x3231AC4
	0x03673874 STR X22, [X21 + 0xA8]
	0x03673878 LDR X0, [X23]
	0x0367387C BL 0x1C16F10
	0x03673880 MOV X1, X31
	0x03673884 MOV X22, X0
	0x03673888 BL 0x3231AC4
	0x0367388C STR X22, [X21 + 0xB0]
	0x03673890 ADRP X8, 0xA82000
	0x03673894 LDR X8, [X8 + 0x278]
	0x03673898 MOV X0, X21
	0x0367389C LDR X8, [X8]
	0x036738A0 LDR X8, [X8 + 0xB8]
	0x036738A4 LDR X23, [X8]
	0x036738A8 BL 0x3670DDC
	0x036738AC CBZ X0, 0x367392C
	0x036738B0 MOV X0, X21
	0x036738B4 BL 0x3670DDC
	0x036738B8 CBZ X0, 0x367423C
	0x036738BC MOV X1, X31
	0x036738C0 BL 0x367F1A4
	0x036738C4 MOV X22, X0
	0x036738C8 MOV X0, X21
	0x036738CC BL 0x3670DDC
	0x036738D0 CBZ X0, 0x367423C
	0x036738D4 MOV X1, X31
	0x036738D8 BL 0x367F1C4
	0x036738DC MOV X1, X31
	0x036738E0 MOV X23, X0
	0x036738E4 BL 0x32277A8
	0x036738E8 TBNZ X0, 0x0, 0x367390C
	0x036738EC ADRP X8, 0xAB4000
	0x036738F0 LDR X8, [X8 + 0x7F8]
	0x036738F4 MOV X0, X23
	0x036738F8 MOV X2, X22
	0x036738FC MOV X3, X31
	0x03673900 LDR X1, [X8]
	0x03673904 BL 0x32274B8
	0x03673908 MOV X22, X0
	0x0367390C MOV X0, X21
	0x03673910 BL 0x3670DDC
	0x03673914 CBZ X0, 0x367423C
	0x03673918 MOV X1, X31
	0x0367391C BL 0x367F1AC
	0x03673920 MOV X23, X0
	0x03673924 CBNZ X22, 0x3673934
	0x03673928 B 0x367423C
	0x0367392C MOV X22, X23
	0x03673930 CBZ X22, 0x367423C
	0x03673934 LDR W8, [X22 + 0x10]
	0x03673938 CBNZ W8, 0x3673960
	0x0367393C CBZ X23, 0x367423C
	0x03673940 LDR W8, [X23 + 0x10]
	0x03673944 CBNZ W8, 0x3673960
	0x03673948 ADRP X8, 0xACA000
	0x0367394C ADRP X9, 0xACA000
	0x03673950 LDR X8, [X8 + 0xA50]
	0x03673954 LDR X9, [X9 + 0xA78]
	0x03673958 LDR X22, [X8]
	0x0367395C LDR X23, [X9]
	0x03673960 ADRP X8, 0xACA000
	0x03673964 LDR X8, [X8 + 0x950]
	0x03673968 MOV X2, X22
	0x0367396C LDR X1, [X8]
	0x03673970 BL 0x367429C
	0x03673974 LDR X8, [X26]
	0x03673978 MOV X24, X0
	0x0367397C MOV X0, X8
	0x03673980 BL 0x1C16F10
	0x03673984 MOV X1, X31
	0x03673988 MOV X22, X0
	0x0367398C BL 0x33BDD8C
	0x03673990 STR X24, [X22 + 0x10]
	0x03673994 CBZ X20, 0x367423C
	0x03673998 LDR X8, [X20]
	0x0367399C MOV X0, X20
	0x036739A0 MOV X1, X22
	0x036739A4 LDR X9, [X8 + 0x308]
	0x036739A8 LDR X2, [X8 + 0x310]
	0x036739AC BLR X9
	0x036739B0 ADRP X8, 0xACA000
	0x036739B4 LDR X8, [X8 + 0x930]
	0x036739B8 MOV X2, X23
	0x036739BC LDR X1, [X8]
	0x036739C0 BL 0x367429C
	0x036739C4 LDR X8, [X26]
	0x036739C8 MOV X22, X0
	0x036739CC MOV X0, X8
	0x036739D0 BL 0x1C16F10
	0x036739D4 MOV X1, X31
	0x036739D8 MOV X23, X0
	0x036739DC BL 0x33BDD8C
	0x036739E0 MOVZ W8, 0x8
	0x036739E4 STR X22, [X23 + 0x10]
	0x036739E8 STR W8, [X23 + 0x18]
	0x036739EC LDR X8, [X20]
	0x036739F0 MOV X0, X20
	0x036739F4 MOV X1, X23
	0x036739F8 LDR X9, [X8 + 0x308]
	0x036739FC LDR X2, [X8 + 0x310]
	0x03673A00 BLR X9
	0x03673A04 LDRB W8, [X19 + 0xA8]
	0x03673A08 CBZ W8, 0x3673AC4
	0x03673A0C MOV X0, X21
	0x03673A10 MOV X1, X31
	0x03673A14 BL 0x367D78C
	0x03673A18 TBNZ X0, 0x0, 0x3673AC4
	0x03673A1C ADRP X8, 0xACA000
	0x03673A20 ADRP X9, 0xA82000
	0x03673A24 LDR X8, [X8 + 0xA48]
	0x03673A28 LDR X9, [X9 + 0x4B0]
	0x03673A2C LDR X1, [X8]
	0x03673A30 LDR X2, [X9]
	0x03673A34 BL 0x367429C
	0x03673A38 LDR X8, [X26]
	0x03673A3C MOV X22, X0
	0x03673A40 MOV X0, X8
	0x03673A44 BL 0x1C16F10
	0x03673A48 MOV X1, X31
	0x03673A4C MOV X23, X0
	0x03673A50 BL 0x33BDD8C
	0x03673A54 STR X22, [X23 + 0x10]
	0x03673A58 LDR X8, [X20]
	0x03673A5C MOV X0, X20
	0x03673A60 MOV X1, X23
	0x03673A64 LDR X9, [X8 + 0x308]
	0x03673A68 LDR X2, [X8 + 0x310]
	0x03673A6C BLR X9
	0x03673A70 ADRP X8, 0xACA000
	0x03673A74 ADRP X9, 0xAAF000
	0x03673A78 LDR X8, [X8 + 0xAA8]
	0x03673A7C LDR X9, [X9 + 0xFB0]
	0x03673A80 LDR X1, [X8]
	0x03673A84 LDR X2, [X9]
	0x03673A88 BL 0x367429C
	0x03673A8C LDR X8, [X26]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0xD6E000
	009 Move W8, [X23+1924]
	010 Move X20, X5
	011 Move X21, X2
	012 Move X22, X1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {56}
	018 Move X0, 0xACB000
	019 Move X0, [X0+2248]
	020 Call 0x1C17CF4
	021 Move X0, 0xACB000
	022 Move X0, [X0+2080]
	023 Call 0x1C17CF4
	024 Move X0, 0xA8E000
	025 Move X0, [X0+3000]
	026 Call 0x1C17CF4
	027 Move X0, 0xA81000
	028 Move X0, [X0+1880]
	029 Call 0x1C17CF4
	030 Move X0, 0xACB000
	031 Move X0, [X0+1128]
	032 Call 0x1C17CF4
	033 Move X0, 0xACB000
	034 Move X0, [X0+2432]
	035 Call 0x1C17CF4
	036 Move X0, 0xACB000
	037 Move X0, [X0+2440]
	038 Call 0x1C17CF4
	039 Move X0, 0xACB000
	040 Move X0, [X0+2448]
	041 Call 0x1C17CF4
	042 Move X0, 0xACB000
	043 Move X0, [X0+2456]
	044 Call 0x1C17CF4
	045 Move X0, 0xACB000
	046 Move X0, [X0+2464]
	047 Call 0x1C17CF4
	048 Move X0, 0xACB000
	049 Move X0, [X0+2472]
	050 Call 0x1C17CF4
	051 Move X0, 0xACB000
	052 Move X0, [X0+2480]
	053 Call 0x1C17CF4
	054 Move W8, 1
	055 Move [X23+1924], W8
	056 Move [X20], W31
	057 Move W8, [X19+216]
	058 Compare W8, 0
	059 JumpIfEqual {71}
	060 Move W8, 1
	061 Move [X20], W8
	062 Move W0, 2
	063 Move X20, [X31+48]
	064 Move X19, [X31+56]
	065 Move X22, [X31+32]
	066 Move X21, [X31+40]
	067 Move X24, [X31+16]
	068 Move X23, [X31+24]
	069 Move X30, [X31+64]
	070 Return X0
	071 Move W8, 1
	072 Move [X19+216], W8
	073 Compare X22, 0
	074 JumpIfEqual {399}
	075 Move X23, 0xACB000
	076 Move X0, [X22+16]
	077 Move X23, [X23+2440]
	078 Move X2, X31
	079 Move X1, [X23]
	080 Call String.op_Equality, X0, X1
	081 Move TEMP, X0
	082 And TEMP, TEMP, 1
	083 Compare TEMP, 1
	084 JumpIfEqual {95}
	085 Move X8, 0xACB000
	086 Move X0, [X22+16]
	087 Move X8, [X8+2480]
	088 Move X2, X31
	089 Move X1, [X8]
	090 Call String.op_Equality, X0, X1
	091 Move TEMP, X0
	092 And TEMP, TEMP, 1
	093 Compare TEMP, 1
	094 JumpIfNotEqual {126}
	095 Compare X21, 0
	096 JumpIfEqual {399}
	097 Move W8, [X21+20]
	098 Subtract W9, W8, 200
	099 NotImplemented "Instruction CMP not yet implemented."
	100 Move X0, [X22+16]
	101 Move X1, [X23]
	102 Move X2, X31
	103 Call String.op_Equality, X0, X1
	104 Move X1, [X21+24]
	105 Move TEMP, X0
	106 And TEMP, TEMP, 1
	107 Compare TEMP, 1
	108 JumpIfNotEqual {174}
	109 Call FtpControlStream.GetPortV4, X0, X1
	110 Move X9, 0xA81000
	111 Move X9, [X9+1880]
	112 Add X1, X31, 12
	113 Move [X31+12], W8
	114 Move X0, [X9]
	115 Call 0x1C17E04
	116 Move X8, 0xACB000
	117 Move X8, [X8+2464]
	118 Move X1, X0
	119 Move X2, X31
	120 Move X8, [X8]
	121 Move X0, X8
	122 Call SR.Format, X0, X1
	123 Move X8, X0
	124 Move W0, W31
	125 Move [X19+104], X8
	126 Move X22, [X19+144]
	127 Compare X22, 0
	128 JumpIfNotEqual {253}
	129 Move X21, 0xACB000
	130 Move X21, [X21+1128]
	131 Move X0, [X21]
	132 Move W8, [X0+224]
	133 Compare W8, 0
	134 JumpIfNotEqual {136}
	135 Call 0x1C17DFC
	136 Call NetEventSource.get_IsEnabled
	137 Move TEMP, X0
	138 And TEMP, TEMP, 1
	139 Compare TEMP, 1
	140 JumpIfNotEqual {154}
	141 Move X0, [X21]
	142 Move W8, [X0+224]
	143 Compare W8, 0
	144 JumpIfNotEqual {146}
	145 Call 0x1C17DFC
	146 Move X8, 0xACB000
	147 Move X9, 0xACB000
	148 Move X8, [X8+2456]
	149 Move X9, [X9+2472]
	150 Move X0, X19
	151 Move X1, [X8]
	152 Move X2, [X9]
	153 Call NetEventSource.Info, X0, X1, X2
	154 Move W8, [X19+72]
	155 Move X21, [X19+136]
	156 Compare W8, 0
	157 JumpIfEqual {307}
	158 Move X20, 0xACB000
	159 Move X20, [X20+2248]
	160 Move X0, [X20]
	161 Move W8, [X0+224]
	162 Compare W8, 0
	163 JumpIfNotEqual {165}
	164 Call 0x1C17DFC
	165 Compare X21, 0
	166 JumpIfEqual {399}
	167 Move X8, [X20]
	168 Move X0, X21
	169 Move X2, X19
	170 Move X3, X31
	171 Move X8, [X8+184]
	172 Move X1, [X8]
	173 Call Socket.BeginAccept, X0, X1, X2
	174 Call FtpControlStream.GetPortV6, X0, X1
	175 Move W21, W0
	176 Add W31, W0, 1
	177 Move X8, 0xACB000
	178 Move X8, [X8+1128]
	179 Move X0, [X8]
	180 Move W8, [X0+224]
	181 Compare W8, 0
	182 JumpIfNotEqual {184}
	183 Call 0x1C17DFC
	184 Move X8, 0xACB000
	185 Move X9, 0xACB000
	186 Move X8, [X8+2448]
	187 Move X9, [X9+2472]
	188 Move X0, X19
	189 Move X1, [X8]
	190 Move X2, [X9]
	191 Call NetEventSource.Fail, X0, X1, X2
	192 Move X22, [X19+64]
	193 Move X0, X19
	194 Move X1, X31
	195 Call NetworkStreamWrapper.get_Socket, X0
	196 Compare X22, 0
	197 JumpIfEqual {203}
	198 Move X8, 0xACB000
	199 Move X8, [X8+2080]
	200 Move X1, [X8]
	201 Move X8, [X22]
	202 NotImplemented "Instruction CMP not yet implemented."
	203 Move X2, X0
	204 Call FtpControlStream.CreateFtpDataSocket, X0, X1, X2
	205 Move [X19+136], X0
	206 Move X0, X19
	207 Move X1, X31
	208 Call NetworkStreamWrapper.get_Socket, X0
	209 Compare X0, 0
	210 JumpIfEqual {399}
	211 Move X1, X31
	212 Call Socket.get_LocalEndPoint, X0
	213 Compare X0, 0
	214 JumpIfEqual {399}
	215 Move X24, 0xA8E000
	216 Move X24, [X24+3000]
	217 Move X8, [X0]
	218 Move X1, [X24]
	219 Move W10, [X8+304]
	220 Move W9, [X1+304]
	221 NotImplemented "Instruction CMP not yet implemented."
	222 Move X8, [X8+200]
	223 Add X8, X8, X9
	224 NotImplemented "Instruction LDUR not yet implemented."
	225 NotImplemented "Instruction CMP not yet implemented."
	226 Move X23, [X0+16]
	227 Move X0, X1
	228 Call 0x1C17F10
	229 Move X1, X23
	230 Move W2, W31
	231 Move X22, X0
	232 Call IPEndPoint..ctor, X0, X1, X2
	233 Move X0, [X19+136]
	234 Compare X0, 0
	235 JumpIfEqual {399}
	236 Move X1, X22
	237 Move X2, X31
	238 Call Socket.Bind, X0, X1
	239 Move X0, X19
	240 Move X1, X31
	241 Call NetworkStreamWrapper.get_ServerAddress, X0
	242 Move X8, [X24]
	243 Move X23, X0
	244 Move X0, X8
	245 Call 0x1C17F10
	246 Move X1, X23
	247 Move W2, W21
	248 Move X22, X0
	249 Call IPEndPoint..ctor, X0, X1, X2
	250 Move [X19+144], X22
	251 Compare X22, 0
	252 JumpIfEqual {129}
	253 Move [X19+144], X31
	254 Move X20, 0xACB000
	255 Move X20, [X20+1128]
	256 Move X0, [X20]
	257 Move W8, [X0+224]
	258 Compare W8, 0
	259 JumpIfNotEqual {261}
	260 Call 0x1C17DFC
	261 Call NetEventSource.get_IsEnabled
	262 Move TEMP, X0
	263 And TEMP, TEMP, 1
	264 Compare TEMP, 1
	265 JumpIfNotEqual {279}
	266 Move X0, [X20]
	267 Move W8, [X0+224]
	268 Compare W8, 0
	269 JumpIfNotEqual {271}
	270 Call 0x1C17DFC
	271 Move X8, 0xACB000
	272 Move X9, 0xACB000
	273 Move X8, [X8+2432]
	274 Move X9, [X9+2472]
	275 Move X0, X19
	276 Move X1, [X8]
	277 Move X2, [X9]
	278 Call NetEventSource.Info, X0, X1, X2
	279 Move W8, [X19+72]
	280 Move X20, [X19+136]
	281 Compare W8, 0
	282 JumpIfEqual {300}
	283 Move X21, 0xACB000
	284 Move X21, [X21+2248]
	285 Move X0, [X21]
	286 Move W8, [X0+224]
	287 Compare W8, 0
	288 JumpIfNotEqual {290}
	289 Call 0x1C17DFC
	290 Compare X20, 0
	291 JumpIfEqual {399}
	292 Move X8, [X21]
	293 Move X0, X20
	294 Move X1, X22
	295 Move X3, X19
	296 Move X8, [X8+184]
	297 Move X4, X31
	298 Move X2, [X8+8]
	299 Call Socket.BeginConnect, X0, X1, X2, X3
	300 Compare X20, 0
	301 JumpIfEqual {399}
	302 Move X0, X20
	303 Move X1, X22
	304 Move X2, X31
	305 Call Socket.Connect, X0, X1
	306 Move W0, 1
	307 Compare X21, 0
	308 JumpIfEqual {356}
	309 Move X0, X21
	310 Move X1, X31
	311 Call Socket.Accept, X0
	312 Move [X19+136], X0
	313 Move X0, X19
	314 Move X1, X31
	315 Call NetworkStreamWrapper.get_ServerAddress, X0
	316 Move X22, X0
	317 Move X0, [X19+136]
	318 Compare X0, 0
	319 JumpIfEqual {357}
	320 Move X1, X31
	321 Call Socket.get_RemoteEndPoint, X0
	322 Compare X0, 0
	323 JumpIfEqual {358}
	324 Move X9, 0xA8E000
	325 Move X9, [X9+3000]
	326 Move X8, [X0]
	327 Move X1, [X9]
	328 Move W10, [X8+304]
	329 Move W9, [X1+304]
	330 NotImplemented "Instruction CMP not yet implemented."
	331 Move X8, [X8+200]
	332 Add X8, X8, X9
	333 NotImplemented "Instruction LDUR not yet implemented."
	334 NotImplemented "Instruction CMP not yet implemented."
	335 Compare X22, 0
	336 JumpIfEqual {359}
	337 Move X8, [X22]
	338 Move X1, [X0+16]
	339 Move X9, [X8+312]
	340 Move X2, [X8+320]
	341 Move X0, X22
	342 NotImplemented "Instruction BLR not yet implemented."
	343 Move TEMP, X0
	344 And TEMP, TEMP, 1
	345 Compare TEMP, 1
	346 JumpIfNotEqual {360}
	347 Move W8, 1
	348 Move X0, X21
	349 Move X1, X31
	350 Move [X20], W8
	351 Call Socket.Close, X0
	352 Call 0x1C181E0
	353 Move X0, X22
	354 Call 0x1C181E0
	355 Call 0x1C181E0
	356 Call 0x1C17F20
	357 Call 0x1C17F20
	358 Call 0x1C17F20
	359 Call 0x1C17F20
	360 Move X0, [X19+136]
	361 Compare X0, 0
	362 JumpIfNotEqual {364}
	363 Call 0x1C17F20
	364 Move X1, X31
	365 Call Socket.Close, X0
	366 Move X0, 0xAAC000
	367 Move X0, [X0+816]
	368 Call 0x1C17D08
	369 Call 0x1C17F10
	370 Move X19, X0
	371 Move X0, 0xACB000
	372 Move X0, [X0+2256]
	373 Call 0x1C17D08
	374 Move X1, X0
	375 Move W2, 7
	376 Move X0, X19
	377 Move X3, X31
	378 Call WebException..ctor, X0, X1, X2
	379 Move X0, 0xACB000
	380 Move X0, [X0+2488]
	381 Call 0x1C17D08
	382 Move X1, X0
	383 Move X0, X19
	384 Call 0x1C17DEC
	385 Move X19, X0
	386 NotImplemented "Instruction CMP not yet implemented."
	387 Move X0, X19
	388 Call 0x3EB2AD0
	389 Move X20, [X0]
	390 Call 0x3EB2AE0
	391 Compare X21, 0
	392 JumpIfEqual {399}
	393 Move X0, X21
	394 Move X1, X31
	395 Call Socket.Close, X0
	396 Compare X20, 0
	397 JumpIfNotEqual {401}
	398 Move W0, W31
	399 Call 0x1C17F20
	400 Move X20, X31
	401 Move X0, X20
	402 Call 0x1C17F18
	403 Move X19, X0
	404 Compare X21, 0
	405 JumpIfNotEqual {407}
	406 Call 0x1C17F20
	407 Move X0, X21
	408 Move X1, X31
	409 Call Socket.Close, X0
	410 Compare X20, 0
	411 JumpIfEqual {449}
	412 Move X0, X20
	413 Call 0x1C17F18
	414 Move X19, X0
	415 NotImplemented "Instruction CMP not yet implemented."
	416 Move X0, X19
	417 Call 0x3EB2AD0
	418 Move X19, X0
	419 Move X0, 0xAAA000
	420 Move X0, [X0+1208]
	421 Call 0x1C17D08
	422 Move X8, [X19]
	423 Move X1, [X8]
	424 Call 0x1C18270
	425 Move TEMP, X0
	426 And TEMP, TEMP, 1
	427 Compare TEMP, 1
	428 JumpIfNotEqual {439}
	429 Call 0x3EB2AE0
	430 Move X0, X31
	431 Call ExceptionHelper.get_RequestAbortedException
	432 Move X19, X0
	433 Move X0, 0xACB000
	434 Move X0, [X0+2488]
	435 Call 0x1C17D08
	436 Move X1, X0
	437 Move X0, X19
	438 Call 0x1C17DEC
	439 Move W0, 8
	440 Call 0x3EB2AF0
	441 Move X8, [X19]
	442 Move [X0], X8
	443 Move X1, 0x842000
	444 Add X1, X1, 3672
	445 Move X2, X31
	446 Call 0x3EB2B00
	447 Move X19, X0
	448 Call 0x3EB2AE0
	449 Move X0, X19
	450 Call 0x1D2D690
	451 Call 0x1991590

Method: System.Void GetPathInfo(System.Net.FtpControlStream/GetPathOption pathOption, System.Uri uri, out System.String path, out System.String directory, out System.String filename)

Disassembly:
	0x03675394 MOV X3, X31
	0x03675398 MOV X19, X0
	0x0367539C BL 0x3316570
	0x036753A0 LDR X8, [X20]
	0x036753A4 LDR X8, [X8 + 0xB8]
	0x036753A8 STR X19, [X8]
	0x036753AC LDR X0, [X22]
	0x036753B0 BL 0x1C16F10
	0x036753B4 LDR X2, [X23]
	0x036753B8 MOV X1, X31
	0x036753BC MOV X3, X31
	0x036753C0 MOV X19, X0
	0x036753C4 BL 0x3316570
	0x036753C8 LDR X8, [X20]
	0x036753CC LDR X8, [X8 + 0xB8]
	0x036753D0 STR X19, [X8 + 0x8]
	0x036753D4 LDR X0, [X22]
	0x036753D8 BL 0x1C16F10
	0x036753DC LDR X2, [X21]
	0x036753E0 MOV X1, X31
	0x036753E4 MOV X3, X31
	0x036753E8 MOV X19, X0
	0x036753EC BL 0x3316570
	0x036753F0 LDR X8, [X20]
	0x036753F4 LDP X22, X21, [X31 + 0x20]
	0x036753F8 LDP X24, X23, [X31 + 0x10]
	0x036753FC LDR X8, [X8 + 0xB8]
	0x03675400 STR X19, [X8 + 0x10]
	0x03675404 LDP X20, X19, [X31 + 0x30]
	0x03675408 LDR X30, [X31], #0x40
	0x0367540C RET
	0x03675410 STR X30, [X31 - 0x20]!
	0x03675414 STP X20, X19, [X31 + 0x10]
	0x03675418 LDR X8, [X0 + 0x18]
	0x0367541C MOV X19, X0
	0x03675420 CBZ X8, 0x367545C
	0x03675424 LDR X0, [X8 + 0x48]
	0x03675428 CBZ X0, 0x3675460
	0x0367542C LDR X8, [X0]
	0x03675430 LDR X9, [X8 + 0x3E8]
	0x03675434 LDR X2, [X8 + 0x3F0]
	0x03675438 BLR X9
	0x0367543C LDR X0, [X19 + 0x10]
	0x03675440 CBZ X0, 0x3675464
	0x03675444 LDR X8, [X19 + 0x18]
	0x03675448 STR X8, [X0 + 0x30]
	0x0367544C BL 0x366F2DC
	0x03675450 LDP X20, X19, [X31 + 0x10]
	0x03675454 LDR X30, [X31], #0x20
	0x03675458 RET
	0x0367545C BL 0x1C16F20
	0x03675460 BL 0x1C16F20
	0x03675464 BL 0x1C16F20
	0x03675468 B 0x3675470
	0x0367546C B 0x3675470
	0x03675470 MOV X20, X0
	0x03675474 CMP W1, 0x1
	0x03675478 B.NE 0x3675500
	0x0367547C MOV X0, X20
	0x03675480 BL 0x3EB1AD0
	0x03675484 MOV X20, X0
	0x03675488 ADRP X0, 0xA7E000
	0x0367548C LDR X0, [X0 + 0x7D0]
	0x03675490 BL 0x1C16D08
	0x03675494 LDR X8, [X20]
	0x03675498 LDR X1, [X8]
	0x0367549C BL 0x1C17270
	0x036754A0 TBZ X0, 0x0, 0x36754D8
	0x036754A4 LDR X20, [X20]
	0x036754A8 BL 0x3EB1AE0
	0x036754AC LDR X0, [X19 + 0x10]
	0x036754B0 CBZ X0, 0x36754D4
	0x036754B4 MOV X1, X31
	0x036754B8 BL 0x367B0B4
	0x036754BC LDR X0, [X19 + 0x10]
	0x036754C0 CBZ X0, 0x36754D4
	0x036754C4 MOV X1, X20
	0x036754C8 LDP X20, X19, [X31 + 0x10]
	0x036754CC LDR X30, [X31], #0x20
	0x036754D0 B 0x366F134
	0x036754D4 BL 0x1C16F20
	0x036754D8 MOVZ W0, 0x8
	0x036754DC BL 0x3EB1AF0
	0x036754E0 LDR X8, [X20]
	0x036754E4 STR X8, [X0]
	0x036754E8 ADRP X1, 0x83F000
	0x036754EC ADD X1, X1, 0xE58
	0x036754F0 MOV X2, X31
	0x036754F4 BL 0x3EB1B00
	0x036754F8 MOV X20, X0
	0x036754FC BL 0x3EB1AE0
	0x03675500 MOV X0, X20
	0x03675504 BL 0x1D2C690
	0x03675508 BL 0x1990590
	0x0367550C STR X30, [X31 - 0x30]!
	0x03675510 STP X22, X21, [X31 + 0x10]
	0x03675514 STP X20, X19, [X31 + 0x20]
	0x03675518 ADRP X22, 0xD6B000
	0x0367551C ADRP X21, 0xAC8000
	0x03675520 LDRB W8, [X22 + 0x797]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0xD6C000
	009 Move W8, [X24+1925]
	010 Move X20, X4
	011 Move X19, X3
	012 Move X21, X2
	013 Move X23, X1
	014 Move W22, W0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {24}
	019 Move X0, 0xA81000
	020 Move X0, [X0+632]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X24+1925], W8
	024 Compare X23, 0
	025 JumpIfEqual {109}
	026 Move W1, 16
	027 Move W2, 2
	028 Move X0, X23
	029 Move X3, X31
	030 Call Uri.GetComponents, X0, X1, X2
	031 Move [X21], X0
	032 Compare X0, 0
	033 JumpIfEqual {109}
	034 Move W1, 47
	035 Move X2, X31
	036 Call String.LastIndexOf, X0, X1
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move W2, W0
	039 Add W31, W2, 1
	040 Move X0, [X21]
	041 Compare X0, 0
	042 JumpIfEqual {109}
	043 Move W8, [X0+16]
	044 Subtract W8, W8, 1
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Move W1, W31
	047 Move X3, X31
	048 Call String.Substring, X0, X1, X2
	049 Move [X21], X0
	050 Compare X0, 0
	051 JumpIfEqual {109}
	052 Move W1, 47
	053 Move X2, X31
	054 Call String.LastIndexOf, X0, X1
	055 Move W2, W0
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Move X8, [X21]
	058 Move [X19], X8
	059 Move X8, 0xA81000
	060 Move X8, [X8+632]
	061 Move X8, [X8]
	062 Move X8, [X8+184]
	063 Move X0, [X8]
	064 Move X0, [X21]
	065 Compare X0, 0
	066 JumpIfEqual {109}
	067 Add W22, W2, 1
	068 Move W1, W31
	069 Move W2, W22
	070 Move X3, X31
	071 Call String.Substring, X0, X1, X2
	072 Move [X19], X0
	073 Move X0, [X21]
	074 Compare X0, 0
	075 JumpIfEqual {109}
	076 Move W8, [X0+16]
	077 Move W1, W22
	078 Move X3, X31
	079 Subtract W2, W8, W22
	080 Call String.Substring, X0, X1, X2
	081 Move [X20], X0
	082 Move X0, [X19]
	083 Compare X0, 0
	084 JumpIfEqual {109}
	085 Move W8, [X0+16]
	086 NotImplemented "Instruction CMP not yet implemented."
	087 Subtract W1, W8, 1
	088 Move X2, X31
	089 Call String.get_Chars, X0, X1
	090 And W8, W0, 0xFFFF
	091 NotImplemented "Instruction CMP not yet implemented."
	092 Move X0, [X19]
	093 Compare X0, 0
	094 JumpIfEqual {109}
	095 Move W8, [X0+16]
	096 Move W1, W31
	097 Move X3, X31
	098 Subtract W2, W8, 1
	099 Call String.Substring, X0, X1, X2
	100 Move [X19], X0
	101 Move X20, [X31+48]
	102 Move X19, [X31+56]
	103 Move X22, [X31+32]
	104 Move X21, [X31+40]
	105 Move X24, [X31+16]
	106 Move X23, [X31+24]
	107 Move X30, [X31+64]
	108 Return 
	109 Call 0x1C17F20

Method: System.String FormatAddress(System.Net.IPAddress address, System.Int32 Port)

Disassembly:
	0x03675CA8 B.NE 0x3675D14
	0x03675CAC MOV X0, X20
	0x03675CB0 BL 0x3EB1AD0
	0x03675CB4 MOV X20, X0
	0x03675CB8 ADRP X0, 0xA84000
	0x03675CBC LDR X0, [X0 + 0xCC0]
	0x03675CC0 BL 0x1C16D08
	0x03675CC4 LDR X8, [X20]
	0x03675CC8 LDR X1, [X8]
	0x03675CCC BL 0x1C17270
	0x03675CD0 TBZ X0, 0x0, 0x3675CEC
	0x03675CD4 LDR X20, [X20]
	0x03675CD8 BL 0x3EB1AE0
	0x03675CDC MOV X0, X19
	0x03675CE0 BL 0x3675A78
	0x03675CE4 MOV X0, X20
	0x03675CE8 BL 0x1C16F18
	0x03675CEC MOVZ W0, 0x8
	0x03675CF0 BL 0x3EB1AF0
	0x03675CF4 LDR X8, [X20]
	0x03675CF8 STR X8, [X0]
	0x03675CFC ADRP X1, 0x83F000
	0x03675D00 ADD X1, X1, 0xE58
	0x03675D04 MOV X2, X31
	0x03675D08 BL 0x3EB1B00
	0x03675D0C MOV X20, X0
	0x03675D10 BL 0x3EB1AE0
	0x03675D14 MOV X0, X20
	0x03675D18 BL 0x1D2C690
	0x03675D1C BL 0x1990590
	0x03675D20 STR X30, [X31 - 0x30]!
	0x03675D24 STP X22, X21, [X31 + 0x10]
	0x03675D28 STP X20, X19, [X31 + 0x20]
	0x03675D2C MOV W20, W3
	0x03675D30 MOV W21, W2
	0x03675D34 MOV X22, X1
	0x03675D38 MOV X19, X0
	0x03675D3C BL 0x3675A78
	0x03675D40 LDR X0, [X19 + 0x30]
	0x03675D44 CBZ X0, 0x3675D74
	0x03675D48 LDR X8, [X0]
	0x03675D4C LDR X9, [X8 + 0x388]
	0x03675D50 LDR X4, [X8 + 0x390]
	0x03675D54 MOV X1, X22
	0x03675D58 MOV W2, W21
	0x03675D5C MOV W3, W20
	0x03675D60 BLR X9
	0x03675D64 LDP X20, X19, [X31 + 0x20]
	0x03675D68 LDP X22, X21, [X31 + 0x10]
	0x03675D6C LDR X30, [X31], #0x30
	0x03675D70 RET
	0x03675D74 BL 0x1C16F20
	0x03675D78 CMP W1, 0x1
	0x03675D7C MOV X20, X0
	0x03675D80 B.NE 0x3675DEC
	0x03675D84 MOV X0, X20
	0x03675D88 BL 0x3EB1AD0
	0x03675D8C MOV X20, X0
	0x03675D90 ADRP X0, 0xA84000
	0x03675D94 LDR X0, [X0 + 0xCC0]
	0x03675D98 BL 0x1C16D08
	0x03675D9C LDR X8, [X20]
	0x03675DA0 LDR X1, [X8]
	0x03675DA4 BL 0x1C17270
	0x03675DA8 TBZ X0, 0x0, 0x3675DC4
	0x03675DAC LDR X20, [X20]
	0x03675DB0 BL 0x3EB1AE0
	0x03675DB4 MOV X0, X19
	0x03675DB8 BL 0x3675A78
	0x03675DBC MOV X0, X20
	0x03675DC0 BL 0x1C16F18
	0x03675DC4 MOVZ W0, 0x8
	0x03675DC8 BL 0x3EB1AF0
	0x03675DCC LDR X8, [X20]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0xD6C000
	008 Move W8, [X21+1926]
	009 Move W19, W2
	010 Move X20, X1
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0xA7F000
	016 Move X0, [X0+2288]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X21+1926], W8
	020 Compare X20, 0
	021 JumpIfEqual {84}
	022 Move X21, 0xA7F000
	023 Move X21, [X21+2288]
	024 Move X0, X20
	025 Call IPAddress.GetAddressBytes, X0
	026 Move X8, [X21]
	027 Move X21, X0
	028 Move X0, X8
	029 Call 0x1C17F10
	030 Move W1, 32
	031 Move X2, X31
	032 Move X20, X0
	033 Call StringBuilder..ctor, X0, X1
	034 Compare X21, 0
	035 JumpIfEqual {84}
	036 Move X8, [X21+24]
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move X22, X31
	039 And X8, X8, 0
	040 Add X23, X21, 32
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Compare X20, 0
	043 JumpIfEqual {84}
	044 Move W1, [X23]
	045 Move X0, X20
	046 Move X2, X31
	047 Call StringBuilder.Append, X0, X1
	048 Move W1, 44
	049 Move X0, X20
	050 Move X2, X31
	051 Call StringBuilder.Append, X0, X1
	052 Move W8, [X21+24]
	053 Add X22, X22, 1
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Compare X20, 0
	056 JumpIfEqual {84}
	057 Add W8, W19, 255
	058 NotImplemented "Instruction CMP not yet implemented."
	059 NotImplemented "Instruction CSEL not yet implemented."
	060 NotImplemented "Instruction SBFM not yet implemented."
	061 Move X0, X20
	062 Move X2, X31
	063 Call StringBuilder.Append, X0, X1
	064 Move W1, 44
	065 Move X0, X20
	066 Move X2, X31
	067 Call StringBuilder.Append, X0, X1
	068 And W8, W21, 0xFFFFFF00
	069 Subtract W1, W19, W8
	070 Move X0, X20
	071 Move X2, X31
	072 Call StringBuilder.Append, X0, X1
	073 Move X8, [X20]
	074 Move X0, X20
	075 Move X20, [X31+32]
	076 Move X19, [X31+40]
	077 Move X22, [X31+16]
	078 Move X21, [X31+24]
	079 Move X2, [X8+360]
	080 Move X1, [X8+368]
	081 Move X30, [X31+48]
	082 Move X23, [X31+56]
	083 CallNoReturn X2
	084 Call 0x1C17F20
	085 Call 0x1C17F28

Method: System.String FormatAddressV6(System.Net.IPAddress address, System.Int32 port)

Disassembly:
	0x03675DD0 STR X8, [X0]
	0x03675DD4 ADRP X1, 0x83F000
	0x03675DD8 ADD X1, X1, 0xE58
	0x03675DDC MOV X2, X31
	0x03675DE0 BL 0x3EB1B00
	0x03675DE4 MOV X20, X0
	0x03675DE8 BL 0x3EB1AE0
	0x03675DEC MOV X0, X20
	0x03675DF0 BL 0x1D2C690
	0x03675DF4 BL 0x1990590
	0x03675DF8 SUB X31, X31, 0x30
	0x03675DFC STP X30, X21, [X31 + 0x10]
	0x03675E00 STP X20, X19, [X31 + 0x20]
	0x03675E04 ADRP X19, 0xD6B000
	0x03675E08 LDRB W8, [X19 + 0x799]
	0x03675E0C MOV X21, X1
	0x03675E10 MOV X20, X0
	0x03675E14 TBNZ X8, 0x0, 0x3675E44
	0x03675E18 ADRP X0, 0xAA6000
	0x03675E1C LDR X0, [X0 + 0x718]
	0x03675E20 BL 0x1C16CF4
	0x03675E24 ADRP X0, 0xA7E000
	0x03675E28 LDR X0, [X0 + 0x758]
	0x03675E2C BL 0x1C16CF4
	0x03675E30 ADRP X0, 0xAC8000
	0x03675E34 LDR X0, [X0 + 0xB58]
	0x03675E38 BL 0x1C16CF4
	0x03675E3C MOVZ W8, 0x1
	0x03675E40 STRB W8, [X19 + 0x799]
	0x03675E44 CBZ X21, 0x3675F6C
	0x03675E48 ADRP X10, 0xAA6000
	0x03675E4C LDR X8, [X21]
	0x03675E50 LDR X10, [X10 + 0x718]
	0x03675E54 LDRH W9, [X8 + 0x12E]
	0x03675E58 LDR X1, [X10]
	0x03675E5C CBZ X9, 0x3675E80
	0x03675E60 LDR X10, [X8 + 0xB0]
	0x03675E64 ADD X10, X10, 0x8
	0x03675E68 LDUR X11, [X10 - 0x8]
	0x03675E6C CMP X11, X1
	0x03675E70 B.EQ 0x3675E90
	0x03675E74 SUBS X9, X9, 0x1
	0x03675E78 ADD X10, X10, 0x10
	0x03675E7C B.NE 0x3675E68
	0x03675E80 MOVZ W2, 0x2
	0x03675E84 MOV X0, X21
	0x03675E88 BL 0x1C5C788
	0x03675E8C B 0x3675EA0
	0x03675E90 LDR W9, [X10]
	0x03675E94 ADD W9, W9, 0x2
	0x03675E98 ADD X8, X8, W9, 0x4, SXTW
	0x03675E9C ADD X0, X8, 0x138
	0x03675EA0 LDP X8, X1, [X0]
	0x03675EA4 MOV X0, X21
	0x03675EA8 BLR X8
	0x03675EAC MOV X19, X0
	0x03675EB0 CBZ X0, 0x3675EE8
	0x03675EB4 ADRP X9, 0xAC8000
	0x03675EB8 LDR X9, [X9 + 0xB58]
	0x03675EBC LDR X8, [X19]
	0x03675EC0 LDR X1, [X9]
	0x03675EC4 LDRB W10, [X8 + 0x130]
	0x03675EC8 LDRB W9, [X1 + 0x130]
	0x03675ECC CMP W10, W9
	0x03675ED0 B.CC 0x3675F64
	0x03675ED4 LDR X8, [X8 + 0xC8]
	0x03675ED8 ADD X8, X8, X9, 0x3, LSL
	0x03675EDC LDUR X8, [X8 - 0x8]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, 0xD6C000
	007 Move [X31+12], W2
	008 Move X21, 0xA7F000
	009 Move W8, [X19+1927]
	010 Move X21, [X21+2288]
	011 Move X20, X1
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xA7F000
	017 Move X0, [X0+2288]
	018 Call 0x1C17CF4
	019 Move X0, 0xAC9000
	020 Move X0, [X0+2816]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X19+1927], W8
	024 Move X0, [X21]
	025 Call 0x1C17F10
	026 Move W1, 43
	027 Move X2, X31
	028 Move X19, X0
	029 Call StringBuilder..ctor, X0, X1
	030 Compare X20, 0
	031 JumpIfEqual {79}
	032 Move X8, [X20]
	033 Move X0, X20
	034 Move X9, [X8+360]
	035 Move X1, [X8+368]
	036 NotImplemented "Instruction BLR not yet implemented."
	037 Compare X19, 0
	038 JumpIfEqual {79}
	039 Move X8, 0xAC9000
	040 Move X8, [X8+2816]
	041 Move X20, X0
	042 Move X0, X19
	043 Move X2, X31
	044 Move X1, [X8]
	045 Call StringBuilder.Append, X0, X1
	046 Move X0, X19
	047 Move X1, X20
	048 Move X2, X31
	049 Call StringBuilder.Append, X0, X1
	050 Move W1, 124
	051 Move X0, X19
	052 Move X2, X31
	053 Call StringBuilder.Append, X0, X1
	054 Move X0, X31
	055 Call NumberFormatInfo.get_InvariantInfo
	056 Move X1, X0
	057 Add X0, X31, 12
	058 Move X2, X31
	059 Call Int32.ToString, X0, X1
	060 Move X1, X0
	061 Move X0, X19
	062 Move X2, X31
	063 Call StringBuilder.Append, X0, X1
	064 Move W1, 124
	065 Move X0, X19
	066 Move X2, X31
	067 Call StringBuilder.Append, X0, X1
	068 Move X8, [X19]
	069 Move X0, X19
	070 Move X9, [X8+360]
	071 Move X1, [X8+368]
	072 NotImplemented "Instruction BLR not yet implemented."
	073 Move X20, [X31+32]
	074 Move X19, [X31+40]
	075 Move X30, [X31+16]
	076 Move X21, [X31+24]
	077 Add X31, X31, 48
	078 Return X0
	079 Call 0x1C17F20

Method: System.Int64 get_ContentLength()

Disassembly:
	0x03675EE0 CMP X8, X1
	0x03675EE4 B.NE 0x3675F64

ISIL:
	001 Move X0, [X0+200]
	002 Return X0

Method: System.DateTime get_LastModified()

Disassembly:
	0x03675EE8 LDR X0, [X20 + 0x30]
	0x03675EEC CBZ X0, 0x3675F70

ISIL:
	001 Move X0, [X0+208]
	002 Return X0

Method: System.Uri get_ResponseUri()

Disassembly:
	0x03675EF0 LDR X8, [X0]
	0x03675EF4 LDR X9, [X8 + 0x2C8]

ISIL:
	001 Move X0, [X0+248]
	002 Return X0

Method: System.String get_BannerMessage()

Disassembly:
	0x03675EF8 LDR X2, [X8 + 0x2D0]
	0x03675EFC MOV X1, X21
	0x03675F00 BLR X9
	0x03675F04 MOV W21, W0
	0x03675F08 CBNZ W0, 0x3675F28
	0x03675F0C LDR X8, [X20]

ISIL:
	001 Move X0, [X0+160]
	002 Compare X0, 0
	003 JumpIfEqual {8}
	004 Move X8, [X0]
	005 Move X2, [X8+360]
	006 Move X1, [X8+368]
	007 CallNoReturn X2
	008 Return X0

Method: System.String get_WelcomeMessage()

Disassembly:
	0x03675F10 MOVZ W9, 0x1
	0x03675F14 STRB W9, [X20 + 0x3A]
	0x03675F18 LDR X1, [X8 + 0x280]
	0x03675F1C LDR X9, [X8 + 0x278]
	0x03675F20 MOV X0, X20
	0x03675F24 BLR X9

ISIL:
	001 Move X0, [X0+168]
	002 Compare X0, 0
	003 JumpIfEqual {8}
	004 Move X8, [X0]
	005 Move X2, [X8+360]
	006 Move X1, [X8+368]
	007 CallNoReturn X2
	008 Return X0

Method: System.String get_ExitMessage()

Disassembly:
	0x03675F28 ADRP X8, 0xA7E000
	0x03675F2C LDR X8, [X8 + 0x758]
	0x03675F30 STR W21, [X31 + 0xC]
	0x03675F34 LDR X0, [X8]
	0x03675F38 ADD X1, X31, 0xC
	0x03675F3C BL 0x1C16E04

ISIL:
	001 Move X0, [X0+176]
	002 Compare X0, 0
	003 JumpIfEqual {8}
	004 Move X8, [X0]
	005 Move X2, [X8+360]
	006 Move X1, [X8+368]
	007 CallNoReturn X2
	008 Return X0

Method: System.Int64 GetContentLengthFrom213Response(System.String responseString)

Disassembly:
	0x03673EC4 MOV X1, X0
	0x03673EC8 ADD X0, X31, 0x8
	0x03673ECC MOV X2, X31
	0x03673ED0 BL 0x337CC98
	0x03673ED4 ADRP X8, 0xACA000
	0x03673ED8 LDR X8, [X8 + 0xA90]
	0x03673EDC MOV X2, X0
	0x03673EE0 LDR X1, [X8]
	0x03673EE4 BL 0x367429C
	0x03673EE8 LDR X8, [X26]
	0x03673EEC MOV X21, X0
	0x03673EF0 MOV X0, X8
	0x03673EF4 BL 0x1C16F10
	0x03673EF8 MOV X1, X31
	0x03673EFC MOV X23, X0
	0x03673F00 BL 0x33BDD8C
	0x03673F04 STR X21, [X23 + 0x10]
	0x03673F08 LDR X8, [X20]
	0x03673F0C MOV X0, X20
	0x03673F10 MOV X1, X23
	0x03673F14 LDR X9, [X8 + 0x308]
	0x03673F18 LDR X2, [X8 + 0x310]
	0x03673F1C BLR X9
	0x03673F20 LDR X0, [X19 + 0x38]
	0x03673F24 CBZ X0, 0x367423C
	0x03673F28 MOV X1, X31
	0x03673F2C BL 0x3676710
	0x03673F30 TBZ X0, 0x0, 0x3673F3C
	0x03673F34 MOVZ W24, 0x1
	0x03673F38 B 0x3673F50
	0x03673F3C LDRB W8, [X19 + 0x78]
	0x03673F40 MOVZ W9, 0x3
	0x03673F44 CMP W8, 0x0
	0x03673F48 MOVZ W8, 0x7
	0x03673F4C CSEL W24, W8, W9, EQ
	0x03673F50 LDR X0, [X19 + 0x38]
	0x03673F54 CBZ X0, 0x367423C
	0x03673F58 LDR W8, [X0 + 0x18]
	0x03673F5C CMP W8, 0x9
	0x03673F60 B.NE 0x3673F9C
	0x03673F64 ADRP X23, 0xA82000
	0x03673F68 LDR X23, [X23 + 0x278]
	0x03673F6C LDR X21, [X31 + 0x18]
	0x03673F70 MOV X2, X31
	0x03673F74 LDR X8, [X23]
	0x03673F78 MOV X0, X21
	0x03673F7C LDR X8, [X8 + 0xB8]
	0x03673F80 LDR X1, [X8]
	0x03673F84 BL 0x321BA08
	0x03673F88 TBZ X0, 0x0, 0x3673FD4
	0x03673F8C LDR X8, [X23]
	0x03673F90 LDR X8, [X8 + 0xB8]
	0x03673F94 LDR X21, [X8]
	0x03673F98 B 0x3673FF0
	0x03673F9C MOVZ W1, 0x10
	0x03673FA0 MOV X2, X31
	0x03673FA4 BL 0x3676700
	0x03673FA8 TBZ X0, 0x0, 0x36740E8
	0x03673FAC LDR X8, [X19]
	0x03673FB0 MOV X0, X19
	0x03673FB4 LDP X9, X1, [X8 + 0x1B8]
	0x03673FB8 BLR X9
	0x03673FBC ADRP X8, 0xA82000
	0x03673FC0 LDR X8, [X8 + 0x278]
	0x03673FC4 LDR X8, [X8]
	0x03673FC8 LDR X8, [X8 + 0xB8]
	0x03673FCC LDR X2, [X8]
	0x03673FD0 B 0x3674124
	0x03673FD4 ADRP X8, 0xA81000
	0x03673FD8 LDR X8, [X8 + 0xEC8]
	0x03673FDC MOV X0, X21
	0x03673FE0 MOV X2, X31
	0x03673FE4 LDR X1, [X8]
	0x03673FE8 BL 0x321B938
	0x03673FEC MOV X21, X0
	0x03673FF0 MOV X0, X21
	0x03673FF4 MOV X1, X22
	0x03673FF8 MOV X2, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xD6E000
	006 Move X21, 0xA8A000
	007 Move W8, [X20+1928]
	008 Move X21, [X21+2264]
	009 Move X19, X1
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0xA8A000
	015 Move X0, [X0+2264]
	016 Call 0x1C17CF4
	017 Move X0, 0xA8A000
	018 Move X0, [X0+2536]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X20+1928], W8
	022 Move X0, [X21]
	023 Move W1, 1
	024 Call 0x1C17D6C
	025 Compare X0, 0
	026 JumpIfEqual {68}
	027 Move W8, [X0+24]
	028 Move X1, X0
	029 Compare W8, 0
	030 JumpIfEqual {69}
	031 Move W8, 32
	032 NotImplemented "Instruction STRH not yet implemented."
	033 Compare X19, 0
	034 JumpIfEqual {68}
	035 Move X0, X19
	036 Move X2, X31
	037 Call String.Split, X0, X1
	038 Compare X0, 0
	039 JumpIfEqual {68}
	040 Move W8, [X0+24]
	041 NotImplemented "Instruction CMP not yet implemented."
	042 NotImplemented "Instruction CSEL not yet implemented."
	043 Compare X8, 0
	044 JumpIfEqual {68}
	045 Move W9, [X8+24]
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Move X20, 0xA8A000
	048 Move X19, [X8+40]
	049 Move X20, [X20+2536]
	050 Move X0, X31
	051 Call NumberFormatInfo.get_InvariantInfo
	052 Move X8, [X20]
	053 Move X20, X0
	054 Move W9, [X8+224]
	055 Compare W9, 0
	056 JumpIfNotEqual {59}
	057 Move X0, X8
	058 Call 0x1C17DFC
	059 Move X0, X19
	060 Move X1, X20
	061 Move X20, [X31+16]
	062 Move X19, [X31+24]
	063 Move X2, X31
	064 Move X30, [X31+32]
	065 Move X21, [X31+40]
	066 Call Convert.ToInt64, X0, X1
	067 Return X0
	068 Call 0x1C17F20
	069 Call 0x1C17F28
	070 Move X0, 0xACB000
	071 Move X0, [X0+2552]
	072 Call 0x1C17D08
	073 Move X1, X19
	074 Move X2, X31
	075 Call SR.Format, X0, X1
	076 Move X19, X0
	077 Move X0, 0xAAE000
	078 Move X0, [X0+3080]
	079 Call 0x1C17D08
	080 Call 0x1C17F10
	081 Move X1, X19
	082 Move X2, X31
	083 Move X20, X0
	084 Call FormatException..ctor, X0, X1
	085 Move X0, 0xACB000
	086 Move X0, [X0+2560]
	087 Call 0x1C17D08
	088 Move X1, X0
	089 Move X0, X20
	090 Call 0x1C17DEC

Method: System.DateTime GetLastModifiedFrom213Response(System.String str)

Disassembly:
	0x03673FFC BL 0x321B938
	0x03674000 ADRP X8, 0xAC9000
	0x03674004 LDR X8, [X8 + 0xAB8]
	0x03674008 MOV X2, X0
	0x0367400C LDR X1, [X8]
	0x03674010 BL 0x367429C
	0x03674014 LDR X8, [X26]
	0x03674018 MOV X23, X0
	0x0367401C MOV X0, X8
	0x03674020 BL 0x1C16F10
	0x03674024 MOV X1, X31
	0x03674028 MOV X22, X0
	0x0367402C BL 0x33BDD8C
	0x03674030 STR X23, [X22 + 0x10]
	0x03674034 STR W24, [X22 + 0x18]
	0x03674038 CBZ X20, 0x367423C
	0x0367403C LDR X8, [X20]
	0x03674040 MOV X0, X20
	0x03674044 MOV X1, X22
	0x03674048 LDR X9, [X8 + 0x308]
	0x0367404C LDR X2, [X8 + 0x310]
	0x03674050 BLR X9
	0x03674054 LDR X0, [X19 + 0x40]
	0x03674058 MOV X1, X31
	0x0367405C BL 0x32277A8
	0x03674060 TBNZ X0, 0x0, 0x3674090
	0x03674064 LDR X0, [X19 + 0x40]
	0x03674068 CBZ X0, 0x367423C
	0x0367406C ADRP X8, 0xA80000
	0x03674070 LDR X8, [X8 + 0xEC8]
	0x03674074 MOVZ W2, 0x5
	0x03674078 MOV X3, X31
	0x0367407C LDR X1, [X8]
	0x03674080 BL 0x3226FBC
	0x03674084 TBZ X0, 0x0, 0x3674090
	0x03674088 LDR X2, [X19 + 0x40]
	0x0367408C B 0x36740A4
	0x03674090 LDR X1, [X19 + 0x40]
	0x03674094 MOV X0, X21
	0x03674098 MOV X2, X31
	0x0367409C BL 0x321B938
	0x036740A0 MOV X2, X0
	0x036740A4 ADRP X8, 0xAC9000
	0x036740A8 LDR X8, [X8 + 0xA98]
	0x036740AC LDR X1, [X8]
	0x036740B0 BL 0x367429C
	0x036740B4 LDR X8, [X26]
	0x036740B8 MOV X19, X0
	0x036740BC MOV X0, X8
	0x036740C0 BL 0x1C16F10
	0x036740C4 MOV X1, X31
	0x036740C8 MOV X21, X0
	0x036740CC BL 0x33BDD8C
	0x036740D0 STR X19, [X21 + 0x10]
	0x036740D4 STR W24, [X21 + 0x18]
	0x036740D8 LDR X8, [X20]
	0x036740DC MOV X0, X20
	0x036740E0 MOV X1, X21
	0x036740E4 B 0x3674160
	0x036740E8 LDR X0, [X19 + 0x38]
	0x036740EC CBZ X0, 0x367423C
	0x036740F0 MOVZ W1, 0x100
	0x036740F4 MOV X2, X31
	0x036740F8 BL 0x3676700
	0x036740FC LDR X8, [X19]
	0x03674100 MOV W21, W0
	0x03674104 MOV X0, X19
	0x03674108 LDP X9, X1, [X8 + 0x1B8]
	0x0367410C BLR X9
	0x03674110 TBZ X21, 0x0, 0x3674120
	0x03674114 MOV X1, X0
	0x03674118 MOV X2, X22
	0x0367411C B 0x3674128
	0x03674120 LDR X2, [X31 + 0x28]
	0x03674124 MOV X1, X0
	0x03674128 BL 0x367429C
	0x0367412C LDR X8, [X26]
	0x03674130 MOV X21, X0
	0x03674134 MOV X0, X8
	0x03674138 BL 0x1C16F10
	0x0367413C MOV X1, X31
	0x03674140 MOV X19, X0
	0x03674144 BL 0x33BDD8C
	0x03674148 STR X21, [X19 + 0x10]
	0x0367414C STR W24, [X19 + 0x18]
	0x03674150 CBZ X20, 0x367423C
	0x03674154 LDR X8, [X20]
	0x03674158 MOV X0, X20
	0x0367415C MOV X1, X19
	0x03674160 LDR X9, [X8 + 0x308]
	0x03674164 LDR X2, [X8 + 0x310]
	0x03674168 BLR X9
	0x0367416C ADRP X8, 0xAC9000
	0x03674170 LDR X8, [X8 + 0xA40]
	0x03674174 ADRP X22, 0xAC9000
	0x03674178 ADRP X23, 0xA7F000
	0x0367417C MOV X2, X31
	0x03674180 LDR X1, [X8]
	0x03674184 LDR X22, [X22 + 0xA10]
	0x03674188 LDR X23, [X23 + 0x6C0]
	0x0367418C BL 0x367429C
	0x03674190 LDR X8, [X26]
	0x03674194 MOV X19, X0
	0x03674198 MOV X0, X8
	0x0367419C BL 0x1C16F10
	0x036741A0 MOV X1, X31
	0x036741A4 MOV X21, X0
	0x036741A8 BL 0x33BDD8C
	0x036741AC STR X19, [X21 + 0x10]
	0x036741B0 LDR X8, [X20]
	0x036741B4 MOV X0, X20
	0x036741B8 MOV X1, X21
	0x036741BC LDR X9, [X8 + 0x308]
	0x036741C0 LDR X2, [X8 + 0x310]
	0x036741C4 BLR X9
	0x036741C8 LDR X0, [X23]
	0x036741CC LDR X19, [X22]
	0x036741D0 LDR W8, [X0 + 0xE0]
	0x036741D4 CBNZ W8, 0x36741DC
	0x036741D8 BL 0x1C16DFC
	0x036741DC MOV X0, X19
	0x036741E0 MOV X1, X31
	0x036741E4 BL 0x338C698
	0x036741E8 LDR X8, [X20]
	0x036741EC MOV X1, X0
	0x036741F0 MOV X0, X20
	0x036741F4 LDR X9, [X8 + 0x408]
	0x036741F8 LDR X2, [X8 + 0x410]
	0x036741FC BLR X9
	0x03674200 CBZ X0, 0x3674220
	0x03674204 ADRP X8, 0xAC9000
	0x03674208 LDR X8, [X8 + 0xA08]
	0x0367420C MOV X19, X0
	0x03674210 LDR X20, [X8]
	0x03674214 MOV X1, X20
	0x03674218 BL 0x1C16E00
	0x0367421C CBZ X0, 0x3674248
	0x03674220 LDP X20, X19, [X31 + 0x60]
	0x03674224 LDP X22, X21, [X31 + 0x50]
	0x03674228 LDP X24, X23, [X31 + 0x40]
	0x0367422C LDP X26, X25, [X31 + 0x30]
	0x03674230 LDR X30, [X31 + 0x20]
	0x03674234 ADD X31, X31, 0x70
	0x03674238 RET
	0x0367423C BL 0x1C16F20
	0x03674240 MOV X0, X19
	0x03674244 BL 0x1C171E0
	0x03674248 MOV X0, X19
	0x0367424C MOV X1, X20
	0x03674250 BL 0x1C171E0
	0x03674254 ADRP X0, 0xAAA000
	0x03674258 LDR X0, [X0 + 0x330]
	0x0367425C BL 0x1C16D08
	0x03674260 BL 0x1C16F10
	0x03674264 MOV X19, X0
	0x03674268 ADRP X0, 0xAC9000
	0x0367426C LDR X0, [X0 + 0xAC8]
	0x03674270 BL 0x1C16D08
	0x03674274 MOV X1, X0
	0x03674278 MOV X0, X19
	0x0367427C MOV X2, X31
	0x03674280 BL 0x367E910
	0x03674284 ADRP X0, 0xAC9000
	0x03674288 LDR X0, [X0 + 0xAD0]
	0x0367428C BL 0x1C16D08
	0x03674290 MOV X1, X0
	0x03674294 MOV X0, X19
	0x03674298 BL 0x1C16DEC
	0x0367429C STP X30, X23, [X31 - 0x30]!
	0x036742A0 STP X22, X21, [X31 + 0x10]
	0x036742A4 STP X20, X19, [X31 + 0x20]
	0x036742A8 ADRP X20, 0xD6C000
	0x036742AC LDRB W8, [X20 + 0x791]
	0x036742B0 MOV X19, X2
	0x036742B4 MOV X21, X1
	0x036742B8 TBNZ X8, 0x0, 0x36742DC
	0x036742BC ADRP X0, 0xA7F000
	0x036742C0 LDR X0, [X0 + 0x8F0]
	0x036742C4 BL 0x1C16CF4
	0x036742C8 ADRP X0, 0xABD000
	0x036742CC LDR X0, [X0 + 0x420]
	0x036742D0 BL 0x1C16CF4
	0x036742D4 MOVZ W8, 0x1
	0x036742D8 STRB W8, [X20 + 0x791]
	0x036742DC CBZ X21, 0x3674390
	0x036742E0 ADRP X8, 0xA7F000
	0x036742E4 LDR W22, [X21 + 0x10]
	0x036742E8 LDR X8, [X8 + 0x8F0]
	0x036742EC CBZ X19, 0x36742F8
	0x036742F0 LDR W23, [X19 + 0x10]
	0x036742F4 B 0x36742FC
	0x036742F8 MOV W23, W31
	0x036742FC LDR X0, [X8]
	0x03674300 BL 0x1C16F10
	0x03674304 ADD W8, W22, W23
	0x03674308 ADD W1, W8, 0x3
	0x0367430C MOV X2, X31
	0x03674310 MOV X20, X0
	0x03674314 BL 0x3231B28
	0x03674318 CBZ X20, 0x3674390
	0x0367431C ADRP X22, 0xABD000
	0x03674320 LDR X22, [X22 + 0x420]
	0x03674324 MOV X0, X20
	0x03674328 MOV X1, X21
	0x0367432C MOV X2, X31
	0x03674330 BL 0x32333E0
	0x03674334 MOV X0, X19
	0x03674338 MOV X1, X31
	0x0367433C BL 0x32277A8
	0x03674340 TBNZ X0, 0x0, 0x3674364
	0x03674344 MOVZ W1, 0x20
	0x03674348 MOV X0, X20
	0x0367434C MOV X2, X31
	0x03674350 BL 0x3233D30
	0x03674354 MOV X0, X20
	0x03674358 MOV X1, X19
	0x0367435C MOV X2, X31
	0x03674360 BL 0x32333E0
	0x03674364 LDR X1, [X22]
	0x03674368 MOV X0, X20
	0x0367436C MOV X2, X31
	0x03674370 BL 0x32333E0
	0x03674374 LDR X8, [X20]
	0x03674378 MOV X0, X20

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+16], X30
	003 Move [X31+32], X26
	004 Move [X31+40], X25
	005 Move [X31+48], X24
	006 Move [X31+56], X23
	007 Move [X31+64], X22
	008 Move [X31+72], X21
	009 Move [X31+80], X20
	010 Move [X31+88], X19
	011 Move X22, 0xD6D000
	012 Move X21, 0xA89000
	013 Move W8, [X22+1929]
	014 Move X21, [X21+2264]
	015 Move X19, X1
	016 Move X20, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {32}
	021 Move X0, 0xA89000
	022 Move X0, [X0+2264]
	023 Call 0x1C17CF4
	024 Move X0, 0xA89000
	025 Move X0, [X0+2536]
	026 Call 0x1C17CF4
	027 Move X0, 0xA81000
	028 Move X0, [X0+2544]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X22+1929], W8
	032 Move X8, [X20+208]
	033 Move X0, [X21]
	034 Move W1, 2
	035 Move [X31+24], X8
	036 Call 0x1C17D6C
	037 Compare X0, 0
	038 JumpIfEqual {190}
	039 Move W8, [X0+24]
	040 Move X1, X0
	041 Compare W8, 0
	042 JumpIfEqual {191}
	043 Move W9, 32
	044 NotImplemented "Instruction CMP not yet implemented."
	045 NotImplemented "Instruction STRH not yet implemented."
	046 Move W8, 46
	047 NotImplemented "Instruction STRH not yet implemented."
	048 Compare X19, 0
	049 JumpIfEqual {190}
	050 Move X0, X19
	051 Move X2, X31
	052 Call String.Split, X0, X1
	053 Compare X0, 0
	054 JumpIfEqual {190}
	055 Move W8, [X0+24]
	056 Move X19, X0
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Move X21, [X19+40]
	059 Compare X21, 0
	060 JumpIfEqual {190}
	061 Move W8, [X21+16]
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Move W2, 4
	064 Move X0, X21
	065 Move W1, W31
	066 Move X3, X31
	067 Call String.Substring, X0, X1, X2
	068 Move X20, X0
	069 Move X0, X31
	070 Call NumberFormatInfo.get_InvariantInfo
	071 Move X26, 0xA89000
	072 Move X26, [X26+2536]
	073 Move X22, X0
	074 Move X8, [X26]
	075 Move W9, [X8+224]
	076 Compare W9, 0
	077 JumpIfNotEqual {80}
	078 Move X0, X8
	079 Call 0x1C17DFC
	080 Move X0, X20
	081 Move X1, X22
	082 Move X2, X31
	083 Call Convert.ToInt32, X0, X1
	084 Move W20, W0
	085 Move W1, 4
	086 Move W2, 2
	087 Move X0, X21
	088 Move X3, X31
	089 Call String.Substring, X0, X1, X2
	090 Move X22, X0
	091 Move X0, X31
	092 Call NumberFormatInfo.get_InvariantInfo
	093 Move X1, X0
	094 Move X0, X22
	095 Move X2, X31
	096 Call Convert.ToInt16, X0, X1
	097 NotImplemented "Instruction SXTH not yet implemented."
	098 Move W1, 6
	099 Move W2, 2
	100 Move X0, X21
	101 Move X3, X31
	102 Call String.Substring, X0, X1, X2
	103 Move X23, X0
	104 Move X0, X31
	105 Call NumberFormatInfo.get_InvariantInfo
	106 Move X1, X0
	107 Move X0, X23
	108 Move X2, X31
	109 Call Convert.ToInt16, X0, X1
	110 NotImplemented "Instruction SXTH not yet implemented."
	111 Move W1, 8
	112 Move W2, 2
	113 Move X0, X21
	114 Move X3, X31
	115 Call String.Substring, X0, X1, X2
	116 Move X24, X0
	117 Move X0, X31
	118 Call NumberFormatInfo.get_InvariantInfo
	119 Move X1, X0
	120 Move X0, X24
	121 Move X2, X31
	122 Call Convert.ToInt16, X0, X1
	123 NotImplemented "Instruction SXTH not yet implemented."
	124 Move W1, 10
	125 Move W2, 2
	126 Move X0, X21
	127 Move X3, X31
	128 Call String.Substring, X0, X1, X2
	129 Move X25, X0
	130 Move X0, X31
	131 Call NumberFormatInfo.get_InvariantInfo
	132 Move X1, X0
	133 Move X0, X25
	134 Move X2, X31
	135 Call Convert.ToInt16, X0, X1
	136 NotImplemented "Instruction SXTH not yet implemented."
	137 Move W1, 12
	138 Move W2, 2
	139 Move X0, X21
	140 Move X3, X31
	141 Call String.Substring, X0, X1, X2
	142 Move X21, X0
	143 Move X0, X31
	144 Call NumberFormatInfo.get_InvariantInfo
	145 Move X1, X0
	146 Move X0, X21
	147 Move X2, X31
	148 Call Convert.ToInt16, X0, X1
	149 Move W8, [X19+24]
	150 NotImplemented "Instruction SXTH not yet implemented."
	151 NotImplemented "Instruction CMP not yet implemented."
	152 Move W7, W31
	153 Move X19, [X19+48]
	154 Move X0, X31
	155 Call NumberFormatInfo.get_InvariantInfo
	156 Move X8, [X26]
	157 Move X26, X0
	158 Move W9, [X8+224]
	159 Compare W9, 0
	160 JumpIfNotEqual {163}
	161 Move X0, X8
	162 Call 0x1C17DFC
	163 Move X0, X19
	164 Move X1, X26
	165 Move X2, X31
	166 Call Convert.ToInt16, X0, X1
	167 NotImplemented "Instruction SXTH not yet implemented."
	168 Move [X31], X31
	169 Move [X31+8], X31
	170 Add X0, X31, 8
	171 Move W1, W20
	172 Move W2, W22
	173 Move W3, W23
	174 Move W4, W24
	175 Move W5, W25
	176 Move W6, W21
	177 Call DateTime..ctor, X0, X1, X2, X3, X4, X5, X6, X7
	178 Move X9, 0xA81000
	179 Move X8, [X31+8]
	180 Move X9, [X9+2544]
	181 Move [X31+24], X8
	182 Move X0, [X9]
	183 Move W8, [X0+224]
	184 Compare W8, 0
	185 JumpIfNotEqual {187}
	186 Call 0x1C17DFC
	187 Add X0, X31, 24
	188 Move X1, X31
	189 Call DateTime.ToLocalTime, X0
	190 Call 0x1C17F20
	191 Call 0x1C17F28
	192 Move X19, X0
	193 NotImplemented "Instruction CMP not yet implemented."
	194 Move X0, X19
	195 Call 0x3EB2AD0
	196 Move X19, X0
	197 Move X0, 0xA88000
	198 Move X0, [X0+1888]
	199 Call 0x1C17D08
	200 Move X8, [X19]
	201 Move X1, [X8]
	202 Call 0x1C18270
	203 Move TEMP, X0
	204 And TEMP, TEMP, 1
	205 Compare TEMP, 1
	206 JumpIfEqual {217}
	207 Move X0, 0xA88000
	208 Move X0, [X0+1400]
	209 Call 0x1C17D08
	210 Move X8, [X19]
	211 Move X1, [X8]
	212 Call 0x1C18270
	213 Move TEMP, X0
	214 And TEMP, TEMP, 1
	215 Compare TEMP, 1
	216 JumpIfNotEqual {230}
	217 Call 0x3EB2AE0
	218 Move X0, [X31+24]
	219 Move X20, [X31+80]
	220 Move X19, [X31+88]
	221 Move X22, [X31+64]
	222 Move X21, [X31+72]
	223 Move X24, [X31+48]
	224 Move X23, [X31+56]
	225 Move X26, [X31+32]
	226 Move X25, [X31+40]
	227 Move X30, [X31+16]
	228 Add X31, X31, 96
	229 Return X0
	230 Move W0, 8
	231 Call 0x3EB2AF0
	232 Move X8, [X19]
	233 Move [X0], X8
	234 Move X1, 0x841000
	235 Add X1, X1, 3672
	236 Move X2, X31
	237 Call 0x3EB2B00
	238 Move X19, X0
	239 Call 0x3EB2AE0
	240 Move X0, X19
	241 Call 0x1D2D690
	242 Call 0x1991590

Method: System.Void TryUpdateResponseUri(System.String str, System.Net.FtpWebRequest request)

Disassembly:
	0x03673B7C MOVZ W22, 0x2
	0x03673B80 B 0x3673B9C
	0x03673B84 LDR X0, [X19 + 0x38]
	0x03673B88 CBZ X0, 0x367423C
	0x03673B8C MOVZ W1, 0x20
	0x03673B90 MOV X2, X31
	0x03673B94 BL 0x3676700
	0x03673B98 AND W22, W0, 0x1
	0x03673B9C LDR X8, [X19]
	0x03673BA0 ADRP X23, 0xACA000
	0x03673BA4 MOV X0, X19
	0x03673BA8 LDP X9, X1, [X8 + 0x1D8]
	0x03673BAC LDR X23, [X23 + 0x8C8]
	0x03673BB0 BLR X9
	0x03673BB4 LDR X8, [X23]
	0x03673BB8 MOV X23, X0
	0x03673BBC LDR W9, [X8 + 0xE0]
	0x03673BC0 CBNZ W9, 0x3673BCC
	0x03673BC4 MOV X0, X8
	0x03673BC8 BL 0x1C16DFC
	0x03673BCC ADD X2, X31, 0x28
	0x03673BD0 ADD X3, X31, 0x18
	0x03673BD4 ADD X4, X31, 0x10
	0x03673BD8 MOV W0, W22
	0x03673BDC MOV X1, X23
	0x03673BE0 BL 0x3674394
	0x03673BE4 LDR X22, [X31 + 0x10]
	0x03673BE8 CBZ X22, 0x367423C
	0x03673BEC LDR W8, [X22 + 0x10]
	0x03673BF0 CBNZ W8, 0x3673C0C
	0x03673BF4 LDR X0, [X19 + 0x38]
	0x03673BF8 CBZ X0, 0x367423C
	0x03673BFC MOVZ W1, 0x4
	0x03673C00 MOV X2, X31
	0x03673C04 BL 0x3676700
	0x03673C08 TBNZ X0, 0x0, 0x3674254
	0x03673C0C LDR X0, [X21 + 0xE8]
	0x03673C10 CBZ X0, 0x3673C88
	0x03673C14 LDR X1, [X21 + 0xE0]
	0x03673C18 CBZ X1, 0x3673C88
	0x03673C1C MOV X2, X31
	0x03673C20 BL 0x3226EF8
	0x03673C24 TBZ X0, 0x0, 0x3673C88
	0x03673C28 ADRP X8, 0xACA000
	0x03673C2C LDR X2, [X21 + 0xE0]
	0x03673C30 LDR X8, [X8 + 0x948]
	0x03673C34 LDR X1, [X8]
	0x03673C38 BL 0x367429C
	0x03673C3C LDR X8, [X26]
	0x03673C40 MOV X24, X0
	0x03673C44 MOV X0, X8
	0x03673C48 BL 0x1C16F10
	0x03673C4C MOV X1, X31
	0x03673C50 MOV X23, X0
	0x03673C54 BL 0x33BDD8C
	0x03673C58 MOVZ W8, 0x1
	0x03673C5C STR X24, [X23 + 0x10]
	0x03673C60 STR W8, [X23 + 0x18]
	0x03673C64 CBZ X20, 0x367423C
	0x03673C68 LDR X8, [X20]
	0x03673C6C MOV X0, X20
	0x03673C70 MOV X1, X23
	0x03673C74 LDR X9, [X8 + 0x308]
	0x03673C78 LDR X2, [X8 + 0x310]
	0x03673C7C BLR X9
	0x03673C80 LDR X8, [X21 + 0xE0]
	0x03673C84 STR X8, [X21 + 0xF0]
	0x03673C88 LDR X0, [X19 + 0x38]
	0x03673C8C CBZ X0, 0x367423C
	0x03673C90 MOVZ W1, 0x100
	0x03673C94 MOV X2, X31
	0x03673C98 BL 0x3676700
	0x03673C9C TBZ X0, 0x0, 0x3673D10
	0x03673CA0 LDR X23, [X31 + 0x18]
	0x03673CA4 CBZ X23, 0x367423C
	0x03673CA8 LDR W8, [X23 + 0x10]
	0x03673CAC CMP W8, 0x1
	0x03673CB0 B.LT 0x3673D10
	0x03673CB4 ADRP X8, 0xACA000
	0x03673CB8 LDR X8, [X8 + 0x948]
	0x03673CBC MOV X2, X23
	0x03673CC0 LDR X1, [X8]
	0x03673CC4 BL 0x367429C
	0x03673CC8 LDR X8, [X26]
	0x03673CCC MOV X25, X0
	0x03673CD0 MOV X0, X8
	0x03673CD4 BL 0x1C16F10
	0x03673CD8 MOV X1, X31
	0x03673CDC MOV X24, X0
	0x03673CE0 BL 0x33BDD8C
	0x03673CE4 MOVZ W8, 0x1
	0x03673CE8 STR X25, [X24 + 0x10]
	0x03673CEC STR W8, [X24 + 0x18]
	0x03673CF0 CBZ X20, 0x367423C
	0x03673CF4 LDR X8, [X20]
	0x03673CF8 MOV X0, X20
	0x03673CFC MOV X1, X24
	0x03673D00 LDR X9, [X8 + 0x308]
	0x03673D04 LDR X2, [X8 + 0x310]
	0x03673D08 BLR X9
	0x03673D0C STR X23, [X21 + 0xF0]
	0x03673D10 LDR X0, [X19 + 0x38]
	0x03673D14 CBZ X0, 0x367423C
	0x03673D18 MOV X1, X31
	0x03673D1C BL 0x3676710
	0x03673D20 TBNZ X0, 0x0, 0x3673F20
	0x03673D24 LDRB W8, [X19 + 0x79]
	0x03673D28 ADRP X9, 0xACA000
	0x03673D2C ADRP X10, 0xAAC000
	0x03673D30 LDR X9, [X9 + 0xAC0]
	0x03673D34 LDR X10, [X10 + 0x358]
	0x03673D38 CMP W8, 0x0
	0x03673D3C LDR X0, [X21 + 0xC0]
	0x03673D40 MOV X2, X31
	0x03673D44 CSEL X8, X9, X10, EQ
	0x03673D48 LDR X23, [X8]
	0x03673D4C MOV X1, X23
	0x03673D50 BL 0x3226EF8
	0x03673D54 TBZ X0, 0x0, 0x3673DAC
	0x03673D58 ADRP X8, 0xACA000
	0x03673D5C LDR X8, [X8 + 0xA38]
	0x03673D60 MOV X2, X23
	0x03673D64 LDR X1, [X8]
	0x03673D68 BL 0x367429C
	0x03673D6C LDR X8, [X26]
	0x03673D70 MOV X25, X0
	0x03673D74 MOV X0, X8
	0x03673D78 BL 0x1C16F10
	0x03673D7C MOV X1, X31
	0x03673D80 MOV X24, X0
	0x03673D84 BL 0x33BDD8C
	0x03673D88 STR X25, [X24 + 0x10]
	0x03673D8C CBZ X20, 0x367423C
	0x03673D90 LDR X8, [X20]
	0x03673D94 MOV X0, X20
	0x03673D98 MOV X1, X24
	0x03673D9C LDR X9, [X8 + 0x308]
	0x03673DA0 LDR X2, [X8 + 0x310]
	0x03673DA4 BLR X9
	0x03673DA8 STR X23, [X21 + 0xC0]
	0x03673DAC LDRB W23, [X19 + 0x78]
	0x03673DB0 MOV X0, X21
	0x03673DB4 MOV X1, X31
	0x03673DB8 BL 0x367D808
	0x03673DBC CBZ X0, 0x367423C
	0x03673DC0 LDR X8, [X0 + 0x18]
	0x03673DC4 CBZ W23, 0x3673E1C
	0x03673DC8 ADRP X9, 0xACA000
	0x03673DCC ADRP X10, 0xACA000
	0x03673DD0 LDR X9, [X9 + 0xA70]
	0x03673DD4 LDR X10, [X10 + 0xA80]
	0x03673DD8 CMP X8, 0x0
	0x03673DDC MOV X2, X31
	0x03673DE0 CSEL X8, X9, X10, EQ
	0x03673DE4 LDR X1, [X8]
	0x03673DE8 BL 0x367429C
	0x03673DEC LDR X8, [X26]
	0x03673DF0 MOV X23, X0
	0x03673DF4 MOV X0, X8
	0x03673DF8 BL 0x1C16F10
	0x03673DFC MOV X1, X31
	0x03673E00 MOV X21, X0
	0x03673E04 BL 0x33BDD8C
	0x03673E08 MOVZ W8, 0x4
	0x03673E0C STR X23, [X21 + 0x10]
	0x03673E10 STR W8, [X21 + 0x18]
	0x03673E14 CBNZ X20, 0x3673E7C
	0x03673E18 B 0x367423C
	0x03673E1C ADRP X9, 0xACA000
	0x03673E20 ADRP X10, 0xACA000
	0x03673E24 LDR X9, [X9 + 0xA58]
	0x03673E28 LDR X10, [X10 + 0xA88]
	0x03673E2C CMP X8, 0x0
	0x03673E30 MOV X0, X21
	0x03673E34 MOV X1, X19
	0x03673E38 CSEL X8, X9, X10, EQ
	0x03673E3C LDR X23, [X8]
	0x03673E40 BL 0x3674524
	0x03673E44 MOV X0, X21
	0x03673E48 BL 0x367469C
	0x03673E4C MOV X1, X23
	0x03673E50 MOV X2, X0
	0x03673E54 BL 0x367429C
	0x03673E58 LDR X8, [X26]
	0x03673E5C MOV X23, X0
	0x03673E60 MOV X0, X8
	0x03673E64 BL 0x1C16F10
	0x03673E68 MOV X1, X31
	0x03673E6C MOV X21, X0
	0x03673E70 BL 0x33BDD8C
	0x03673E74 STR X23, [X21 + 0x10]
	0x03673E78 CBZ X20, 0x367423C
	0x03673E7C LDR X8, [X20]
	0x03673E80 MOV X0, X20
	0x03673E84 MOV X1, X21
	0x03673E88 LDR X9, [X8 + 0x308]
	0x03673E8C LDR X2, [X8 + 0x310]
	0x03673E90 BLR X9
	0x03673E94 LDR X8, [X19 + 0x68]
	0x03673E98 CMP X8, 0x1
	0x03673E9C B.LT 0x3673F20
	0x03673EA0 ADRP X9, 0xA82000
	0x03673EA4 LDR X9, [X9 + 0xC48]
	0x03673EA8 STR X8, [X31 + 0x8]
	0x03673EAC LDR X0, [X9]
	0x03673EB0 LDR W8, [X0 + 0xE0]
	0x03673EB4 CBNZ W8, 0x3673EBC
	0x03673EB8 BL 0x1C16DFC
	0x03673EBC MOV X0, X31
	0x03673EC0 BL 0x3338524

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0xD6E000
	009 Move W8, [X22+1930]
	010 Move X20, X2
	011 Move X21, X1
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {49}
	017 Move X0, 0xA8A000
	018 Move X0, [X0+2264]
	019 Call 0x1C17CF4
	020 Move X0, 0xACB000
	021 Move X0, [X0+2504]
	022 Call 0x1C17CF4
	023 Move X0, 0xA8A000
	024 Move X0, [X0+928]
	025 Call 0x1C17CF4
	026 Move X0, 0xA83000
	027 Move X0, [X0+2600]
	028 Call 0x1C17CF4
	029 Move X0, 0xA82000
	030 Move X0, [X0+2568]
	031 Call 0x1C17CF4
	032 Move X0, 0xACB000
	033 Move X0, [X0+2512]
	034 Call 0x1C17CF4
	035 Move X0, 0xACB000
	036 Move X0, [X0+2520]
	037 Call 0x1C17CF4
	038 Move X0, 0xAAB000
	039 Move X0, [X0+2824]
	040 Call 0x1C17CF4
	041 Move X0, 0xA82000
	042 Move X0, [X0+3784]
	043 Call 0x1C17CF4
	044 Move X0, 0xACB000
	045 Move X0, [X0+2528]
	046 Call 0x1C17CF4
	047 Move W8, 1
	048 Move [X22+1930], W8
	049 Move [X31+8], X31
	050 Compare X20, 0
	051 JumpIfEqual {212}
	052 Move X8, [X20]
	053 Move X0, X20
	054 Move X9, [X8+472]
	055 Move X1, [X8+480]
	056 NotImplemented "Instruction BLR not yet implemented."
	057 Compare X21, 0
	058 JumpIfEqual {212}
	059 Move X8, 0xACB000
	060 Move X8, [X8+2528]
	061 Move X20, X0
	062 Move X0, X21
	063 Move X2, X31
	064 Move X1, [X8]
	065 Call String.IndexOf, X0, X1
	066 Add W31, W0, 1
	067 Add W22, W0, 4
	068 Move W1, 40
	069 Move X0, X21
	070 Move X2, X31
	071 Call String.LastIndexOf, X0, X1
	072 Add W31, W0, 1
	073 Move W0, [X21+16]
	074 Subtract W2, W0, W22
	075 Move X0, X21
	076 Move W1, W22
	077 Move X3, X31
	078 Call String.Substring, X0, X1, X2
	079 Move X8, 0xA8A000
	080 Move X8, [X8+2264]
	081 Move X21, X0
	082 Move W1, 4
	083 Move X8, [X8]
	084 Move X0, X8
	085 Call 0x1C17D6C
	086 Move X8, 0xACB000
	087 Move X8, [X8+2504]
	088 Move X2, X31
	089 Move X22, X0
	090 Move X1, [X8]
	091 Call RuntimeHelpers.InitializeArray, X0, X1
	092 Compare X21, 0
	093 JumpIfEqual {212}
	094 Move X0, X21
	095 Move X1, X22
	096 Move X2, X31
	097 Call String.TrimEnd, X0, X1
	098 Compare X0, 0
	099 JumpIfEqual {212}
	100 Move X8, 0xAAB000
	101 Move X9, 0xACB000
	102 Move X8, [X8+2824]
	103 Move X9, [X9+2520]
	104 Move X3, X31
	105 Move X21, X0
	106 Move X1, [X8]
	107 Move X2, [X9]
	108 Call String.Replace, X0, X1, X2
	109 Compare X0, 0
	110 JumpIfEqual {212}
	111 Move X8, 0xA82000
	112 Move X9, 0xACB000
	113 Move X8, [X8+2568]
	114 Move X9, [X9+2512]
	115 Move X3, X31
	116 Move X1, [X8]
	117 Move X2, [X9]
	118 Call String.Replace, X0, X1, X2
	119 Compare X20, 0
	120 JumpIfEqual {212}
	121 Move X22, X0
	122 Move X0, X20
	123 Move X1, X31
	124 Call Uri.get_AbsolutePath, X0
	125 Compare X0, 0
	126 JumpIfEqual {212}
	127 Move W8, [X0+16]
	128 Move X23, X0
	129 Subtract W1, W8, 1
	130 Move X0, X23
	131 Move X2, X31
	132 Call String.get_Chars, X0, X1
	133 And W8, W0, 0xFFFF
	134 NotImplemented "Instruction CMP not yet implemented."
	135 Move X8, 0xA8A000
	136 Move X8, [X8+928]
	137 Move X0, [X8]
	138 Call 0x1C17F10
	139 Move X1, X20
	140 Move X2, X31
	141 Move X24, X0
	142 Call UriBuilder..ctor, X0, X1
	143 Move X8, 0xA82000
	144 Move X8, [X8+3784]
	145 Move X0, X23
	146 Move X2, X31
	147 Move X1, [X8]
	148 Call String.Concat, X0, X1
	149 Compare X24, 0
	150 JumpIfEqual {212}
	151 Move X1, X0
	152 Move X0, X24
	153 Move X2, X31
	154 Call UriBuilder.set_Path, X0, X1
	155 Move X0, X24
	156 Move X1, X31
	157 Call UriBuilder.get_Uri, X0
	158 Move X20, X0
	159 Move X8, 0xA83000
	160 Move X8, [X8+2600]
	161 Move X0, [X8]
	162 Move W8, [X0+224]
	163 Compare W8, 0
	164 JumpIfNotEqual {166}
	165 Call 0x1C17DFC
	166 Add X2, X31, 8
	167 Move X0, X20
	168 Move X1, X22
	169 Move X3, X31
	170 Call Uri.TryCreate, X0, X1, X2
	171 Move TEMP, X0
	172 And TEMP, TEMP, 1
	173 Compare TEMP, 1
	174 JumpIfNotEqual {213}
	175 Compare X20, 0
	176 JumpIfEqual {212}
	177 Move X1, [X31+8]
	178 Move X0, X20
	179 Move X2, X31
	180 Call Uri.IsBaseOf, X0, X1
	181 Move TEMP, X0
	182 And TEMP, TEMP, 1
	183 Compare TEMP, 1
	184 JumpIfNotEqual {213}
	185 Move X0, X20
	186 Move X1, X31
	187 Call Uri.get_Segments, X0
	188 Compare X0, 0
	189 JumpIfEqual {212}
	190 Move X20, X0
	191 Move X0, [X31+8]
	192 Compare X0, 0
	193 JumpIfEqual {212}
	194 Move X1, X31
	195 Call Uri.get_Segments, X0
	196 Compare X0, 0
	197 JumpIfEqual {212}
	198 Move W8, [X0+24]
	199 Move W9, [X20+24]
	200 Subtract W8, W8, 1
	201 NotImplemented "Instruction CMP not yet implemented."
	202 Move X8, [X31+8]
	203 Move [X19+248], X8
	204 Move X20, [X31+48]
	205 Move X19, [X31+56]
	206 Move X22, [X31+32]
	207 Move X21, [X31+40]
	208 Move X24, [X31+16]
	209 Move X23, [X31+24]
	210 Move X30, [X31+64]
	211 Return 
	212 Call 0x1C17F20
	213 Move X0, 0xACB000
	214 Move X0, [X0+2536]
	215 Call 0x1C17D08
	216 Move X1, X21
	217 Move X2, X31
	218 Call SR.Format, X0, X1
	219 Move X19, X0
	220 Move X0, 0xAAE000
	221 Move X0, [X0+3080]
	222 Call 0x1C17D08
	223 Call 0x1C17F10
	224 Move X1, X19
	225 Move X2, X31
	226 Move X20, X0
	227 Call FormatException..ctor, X0, X1
	228 Move X0, 0xACB000
	229 Move X0, [X0+2544]
	230 Call 0x1C17D08
	231 Move X1, X0
	232 Move X0, X20
	233 Call 0x1C17DEC

Method: System.Void TryUpdateContentLength(System.String str)

Disassembly:
	0x03673A90 MOV X22, X0
	0x03673A94 MOV X0, X8
	0x03673A98 BL 0x1C16F10
	0x03673A9C MOV X1, X31
	0x03673AA0 MOV X23, X0
	0x03673AA4 BL 0x33BDD8C
	0x03673AA8 STR X22, [X23 + 0x10]
	0x03673AAC LDR X8, [X20]
	0x03673AB0 MOV X0, X20
	0x03673AB4 MOV X1, X23
	0x03673AB8 LDR X9, [X8 + 0x308]
	0x03673ABC LDR X2, [X8 + 0x310]
	0x03673AC0 BLR X9
	0x03673AC4 ADRP X8, 0xACA000
	0x03673AC8 ADRP X9, 0xACA000
	0x03673ACC LDR X8, [X8 + 0xAA0]
	0x03673AD0 LDR X9, [X9 + 0xAB0]
	0x03673AD4 LDR X1, [X8]
	0x03673AD8 LDR X2, [X9]
	0x03673ADC BL 0x367429C
	0x03673AE0 LDR X8, [X26]
	0x03673AE4 MOV X22, X0
	0x03673AE8 MOV X0, X8
	0x03673AEC BL 0x1C16F10
	0x03673AF0 MOV X1, X31
	0x03673AF4 MOV X23, X0
	0x03673AF8 BL 0x33BDD8C
	0x03673AFC STR X22, [X23 + 0x10]
	0x03673B00 LDR X8, [X20]
	0x03673B04 MOV X0, X20
	0x03673B08 MOV X1, X23
	0x03673B0C LDR X9, [X8 + 0x308]
	0x03673B10 LDR X2, [X8 + 0x310]
	0x03673B14 BLR X9
	0x03673B18 ADRP X8, 0xACA000
	0x03673B1C LDR X8, [X8 + 0xA20]
	0x03673B20 MOV X2, X31
	0x03673B24 LDR X1, [X8]
	0x03673B28 BL 0x367429C
	0x03673B2C LDR X8, [X26]
	0x03673B30 MOV X22, X0
	0x03673B34 MOV X0, X8
	0x03673B38 BL 0x1C16F10
	0x03673B3C MOV X1, X31
	0x03673B40 MOV X23, X0
	0x03673B44 BL 0x33BDD8C
	0x03673B48 STR X22, [X23 + 0x10]
	0x03673B4C LDR X8, [X20]
	0x03673B50 MOV X0, X20
	0x03673B54 MOV X1, X23
	0x03673B58 LDR X9, [X8 + 0x308]
	0x03673B5C LDR X2, [X8 + 0x310]
	0x03673B60 BLR X9
	0x03673B64 LDR X0, [X19 + 0x38]
	0x03673B68 CBZ X0, 0x367423C
	0x03673B6C MOVZ W1, 0x10
	0x03673B70 MOV X2, X31
	0x03673B74 BL 0x3676700
	0x03673B78 TBZ X0, 0x0, 0x3673B84

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xD6E000
	007 Move W8, [X21+1931]
	008 Move X20, X1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0xACB000
	015 Move X0, [X0+2496]
	016 Call 0x1C17CF4
	017 Move X0, 0xA8C000
	018 Move X0, [X0+784]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+1931], W8
	022 Move [X31+8], X31
	023 Compare X20, 0
	024 JumpIfEqual {67}
	025 Move X8, 0xA8C000
	026 Move X8, [X8+784]
	027 Move X0, X20
	028 Move X2, X31
	029 Move X1, [X8]
	030 Call String.LastIndexOf, X0, X1
	031 Add W31, W0, 1
	032 Move X8, 0xACB000
	033 Move X8, [X8+2496]
	034 Move W21, W0
	035 Move X0, X20
	036 Move X2, X31
	037 Move X1, [X8]
	038 Call String.IndexOf, X0, X1
	039 Add W31, W0, 1
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Add W1, W21, 1
	042 Subtract W2, W0, W1
	043 Move X0, X20
	044 Move X3, X31
	045 Call String.Substring, X0, X1, X2
	046 Move X20, X0
	047 Move X0, X31
	048 Call NumberFormatInfo.get_InvariantInfo
	049 Move X2, X0
	050 Add X3, X31, 8
	051 Move W1, 3
	052 Move X0, X20
	053 Move X4, X31
	054 Call Int64.TryParse, X0, X1, X2, X3
	055 Move TEMP, X0
	056 And TEMP, TEMP, 1
	057 Compare TEMP, 1
	058 JumpIfNotEqual {61}
	059 Move X8, [X31+8]
	060 Move [X19+200], X8
	061 Move X20, [X31+32]
	062 Move X19, [X31+40]
	063 Move X30, [X31+16]
	064 Move X21, [X31+24]
	065 Add X31, X31, 48
	066 Return 
	067 Call 0x1C17F20

Method: System.String GetLoginDirectory(System.String str)

Disassembly:
	0x0367437C LDP X20, X19, [X31 + 0x20]
	0x03674380 LDP X22, X21, [X31 + 0x10]
	0x03674384 LDP X2, X1, [X8 + 0x168]
	0x03674388 LDP X30, X23, [X31], #0x30
	0x0367438C BR X2
	0x03674390 BL 0x1C16F20
	0x03674394 STR X30, [X31 - 0x40]!
	0x03674398 STP X24, X23, [X31 + 0x10]
	0x0367439C STP X22, X21, [X31 + 0x20]
	0x036743A0 STP X20, X19, [X31 + 0x30]
	0x036743A4 ADRP X24, 0xD6C000
	0x036743A8 LDRB W8, [X24 + 0x785]
	0x036743AC MOV X20, X4
	0x036743B0 MOV X19, X3
	0x036743B4 MOV X21, X2
	0x036743B8 MOV X23, X1
	0x036743BC MOV W22, W0
	0x036743C0 TBNZ X8, 0x0, 0x36743D8
	0x036743C4 ADRP X0, 0xA81000
	0x036743C8 LDR X0, [X0 + 0x278]
	0x036743CC BL 0x1C16CF4
	0x036743D0 MOVZ W8, 0x1
	0x036743D4 STRB W8, [X24 + 0x785]
	0x036743D8 CBZ X23, 0x3674520
	0x036743DC MOVZ W1, 0x10
	0x036743E0 MOVZ W2, 0x2
	0x036743E4 MOV X0, X23
	0x036743E8 MOV X3, X31
	0x036743EC BL 0x3620B04
	0x036743F0 STR X0, [X21]
	0x036743F4 CBZ X0, 0x3674520
	0x036743F8 MOVZ W1, 0x2F
	0x036743FC MOV X2, X31
	0x03674400 BL 0x322C668
	0x03674404 CMP W22, 0x1
	0x03674408 MOV W2, W0
	0x0367440C B.NE 0x3674458
	0x03674410 ADDS W31, W2, 0x1
	0x03674414 B.EQ 0x3674458
	0x03674418 LDR X0, [X21]
	0x0367441C CBZ X0, 0x3674520
	0x03674420 LDR W8, [X0 + 0x10]
	0x03674424 SUB W8, W8, 0x1
	0x03674428 CMP W2, W8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xD6D000
	005 Move W8, [X20+1932]
	006 Move X19, X1
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xA82000
	012 Move X0, [X0+632]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+1932], W8
	016 Compare X19, 0
	017 JumpIfEqual {49}
	018 Move W1, 34
	019 Move X0, X19
	020 Move X2, X31
	021 Call String.IndexOf, X0, X1
	022 Move W20, W0
	023 Move W1, 34
	024 Move X0, X19
	025 Move X2, X31
	026 Call String.LastIndexOf, X0, X1
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Add W31, W20, 1
	029 Add W31, W0, 1
	030 NotImplemented "Instruction ORN not yet implemented."
	031 Add W1, W20, 1
	032 Add W2, W0, W8
	033 Move X0, X19
	034 Move X20, [X31+16]
	035 Move X19, [X31+24]
	036 Move X3, X31
	037 Move X30, [X31+32]
	038 Call String.Substring, X0, X1, X2
	039 Return X0
	040 Move X8, 0xA82000
	041 Move X8, [X8+632]
	042 Move X20, [X31+16]
	043 Move X19, [X31+24]
	044 Move X8, [X8]
	045 Move X8, [X8+184]
	046 Move X0, [X8]
	047 Move X30, [X31+32]
	048 Return X0
	049 Call 0x1C17F20

Method: System.Int32 GetPortV4(System.String responseString)

Disassembly:
	0x0367588C BL 0x1C16F20
	0x03675890 MOV X0, X21
	0x03675894 BL 0x1C16F18
	0x03675898 BL 0x1C16F20
	0x0367589C BL 0x1C16F28
	0x036758A0 BL 0x1C16F20
	0x036758A4 BL 0x1C16F20
	0x036758A8 BL 0x1C16F44
	0x036758AC MOV X1, X31
	0x036758B0 BL 0x1C16DEC
	0x036758B4 B 0x36758B8
	0x036758B8 MOV X21, X0
	0x036758BC CMP W1, 0x1
	0x036758C0 B.NE 0x36758E0
	0x036758C4 MOV X0, X21
	0x036758C8 BL 0x3EB1AD0
	0x036758CC LDR X8, [X0]
	0x036758D0 STR X8, [X31]
	0x036758D4 BL 0x3EB1AE0
	0x036758D8 LDR X21, [X31]
	0x036758DC B 0x3675858
	0x036758E0 STR X31, [X31]
	0x036758E4 LDR X0, [X19 + 0x28]
	0x036758E8 MOV W22, W1
	0x036758EC CBZ X0, 0x367590C
	0x036758F0 MOV W1, W20
	0x036758F4 MOV X2, X31
	0x036758F8 BL 0x367CD84
	0x036758FC LDR X8, [X31]
	0x03675900 CBZ X8, 0x3675970
	0x03675904 LDR X0, [X31]
	0x03675908 BL 0x1C16F18
	0x0367590C BL 0x1C16F20
	0x03675910 MOV X21, X0
	0x03675914 B 0x36758E4
	0x03675918 CMP W1, 0x1
	0x0367591C MOV X21, X0
	0x03675920 B.NE 0x367593C
	0x03675924 MOV X0, X21
	0x03675928 BL 0x3EB1AD0
	0x0367592C LDR X22, [X0]
	0x03675930 BL 0x3EB1AE0
	0x03675934 MOV W21, W31
	0x03675938 B 0x3675800
	0x0367593C MOV X22, X31
	0x03675940 B 0x3675948
	0x03675944 MOV X21, X0
	0x03675948 LDRB W8, [X31 + 0xC]
	0x0367594C CBZ W8, 0x367595C
	0x03675950 MOV X0, X19
	0x03675954 MOV X1, X31
	0x03675958 BL 0x33E14E4
	0x0367595C CBZ X22, 0x3675A6C
	0x03675960 MOV X0, X22
	0x03675964 BL 0x1C16F18
	0x03675968 MOV X22, X1
	0x0367596C MOV X21, X0
	0x03675970 MOVZ W8, 0x1
	0x03675974 CMP W22, W8
	0x03675978 B.NE 0x3675A6C
	0x0367597C MOV X0, X21
	0x03675980 BL 0x3EB1AD0
	0x03675984 MOV X21, X0
	0x03675988 ADRP X0, 0xA7E000
	0x0367598C LDR X0, [X0 + 0x7D0]
	0x03675990 BL 0x1C16D08
	0x03675994 LDR X8, [X21]
	0x03675998 LDR X1, [X8]
	0x0367599C BL 0x1C17270
	0x036759A0 TBZ X0, 0x0, 0x3675A44
	0x036759A4 LDR X21, [X21]
	0x036759A8 BL 0x3EB1AE0
	0x036759AC ADRP X0, 0xAA9000
	0x036759B0 LDR X0, [X0 + 0x330]
	0x036759B4 BL 0x1C16D08
	0x036759B8 CBZ X21, 0x36759E4
	0x036759BC LDR X8, [X21]
	0x036759C0 LDRB W9, [X0 + 0x130]
	0x036759C4 LDRB W10, [X8 + 0x130]
	0x036759C8 CMP W10, W9
	0x036759CC B.CC 0x36759E4
	0x036759D0 LDR X8, [X8 + 0xC8]
	0x036759D4 ADD X8, X8, X9, 0x3, LSL
	0x036759D8 LDUR X8, [X8 - 0x8]
	0x036759DC CMP X8, X0
	0x036759E0 B.EQ 0x36759F0
	0x036759E4 TBNZ X20, 0x1, 0x3675870
	0x036759E8 MOV X0, X21
	0x036759EC BL 0x1C16F18
	0x036759F0 ADRP X0, 0xAC8000
	0x036759F4 LDR X22, [X21 + 0x90]
	0x036759F8 LDR X0, [X0 + 0xB48]
	0x036759FC BL 0x1C16D08
	0x03675A00 CBZ X22, 0x36759E4
	0x03675A04 LDR X8, [X22]
	0x03675A08 LDRB W9, [X0 + 0x130]
	0x03675A0C LDRB W10, [X8 + 0x130]
	0x03675A10 CMP W10, W9
	0x03675A14 B.CC 0x36759E4
	0x03675A18 LDR X8, [X8 + 0xC8]
	0x03675A1C ADD X8, X8, X9, 0x3, LSL
	0x03675A20 LDUR X8, [X8 - 0x8]
	0x03675A24 CMP X8, X0
	0x03675A28 B.NE 0x36759E4
	0x03675A2C LDRB W8, [X19 + 0x3A]
	0x03675A30 CBNZ W8, 0x36759E4
	0x03675A34 LDR W8, [X22 + 0x38]
	0x03675A38 CMP W8, 0x1AA
	0x03675A3C B.EQ 0x3675870
	0x03675A40 B 0x36759E4
	0x03675A44 MOVZ W0, 0x8
	0x03675A48 BL 0x3EB1AF0
	0x03675A4C LDR X8, [X21]
	0x03675A50 STR X8, [X0]
	0x03675A54 ADRP X1, 0x83F000
	0x03675A58 ADD X1, X1, 0xE58
	0x03675A5C MOV X2, X31
	0x03675A60 BL 0x3EB1B00
	0x03675A64 MOV X21, X0
	0x03675A68 BL 0x3EB1AE0
	0x03675A6C MOV X0, X21
	0x03675A70 BL 0x1D2C690

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xD6C000
	007 Move X22, 0xA88000
	008 Move X19, 0xAC9000
	009 Move W8, [X21+1933]
	010 Move X22, [X22+2264]
	011 Move X19, [X19+2792]
	012 Move X20, X1
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {31}
	017 Move X0, 0xA88000
	018 Move X0, [X0+2264]
	019 Call 0x1C17CF4
	020 Move X0, 0xA81000
	021 Move X0, [X0+368]
	022 Call 0x1C17CF4
	023 Move X0, 0xA88000
	024 Move X0, [X0+2536]
	025 Call 0x1C17CF4
	026 Move X0, 0xAC9000
	027 Move X0, [X0+2792]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X21+1933], W8
	031 Move X0, [X22]
	032 Move W1, 4
	033 Call 0x1C17D6C
	034 Move X1, [X19]
	035 Move X2, X31
	036 Move X19, X0
	037 Call RuntimeHelpers.InitializeArray, X0, X1
	038 Compare X20, 0
	039 JumpIfEqual {108}
	040 Move X0, X20
	041 Move X1, X19
	042 Move X2, X31
	043 Call String.Split, X0, X1
	044 Compare X0, 0
	045 JumpIfEqual {108}
	046 Move W21, [X0+24]
	047 Move X19, X0
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move X8, 0xA81000
	050 Move X8, [X8+368]
	051 Move X0, [X8]
	052 Move X8, W21
	053 Subtract X22, X8, 1
	054 Add X8, X19, X22
	055 Move W9, [X0+224]
	056 Move X20, [X8+32]
	057 Compare W9, 0
	058 JumpIfNotEqual {60}
	059 Call 0x1C17DFC
	060 Move X0, X20
	061 Move W1, W31
	062 Move X2, X31
	063 Call Char.IsNumber, X0, X1
	064 Move W9, [X19+24]
	065 Subtract W8, W21, 2
	066 And W31, W0, 1
	067 NotImplemented "Instruction CSEL not yet implemented."
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Add X9, X19, W8
	070 Move X21, 0xA88000
	071 Move X20, [X9+32]
	072 Move X21, [X21+2536]
	073 Move X0, X31
	074 Subtract W22, W8, 1
	075 Call NumberFormatInfo.get_InvariantInfo
	076 Move X8, [X21]
	077 Move X21, X0
	078 Move W9, [X8+224]
	079 Compare W9, 0
	080 JumpIfNotEqual {83}
	081 Move X0, X8
	082 Call 0x1C17DFC
	083 Move X0, X20
	084 Move X1, X21
	085 Move X2, X31
	086 Call Convert.ToByte, X0, X1
	087 Move W8, [X19+24]
	088 NotImplemented "Instruction CMP not yet implemented."
	089 Add X8, X19, W22
	090 Move X19, [X8+32]
	091 Move W20, W0
	092 Move X0, X31
	093 Call NumberFormatInfo.get_InvariantInfo
	094 Move X1, X0
	095 Move X0, X19
	096 Move X2, X31
	097 Call Convert.ToByte, X0, X1
	098 And W8, W20, 255
	099 Move X20, [X31+32]
	100 Move X19, [X31+40]
	101 Move X22, [X31+16]
	102 Move X21, [X31+24]
	103 And W9, W0, 255
	104 NotImplemented "Instruction BFM not yet implemented."
	105 Move W0, W8
	106 Move X30, [X31+48]
	107 Return X0
	108 Call 0x1C17F20
	109 Call 0x1C17F28
	110 Move X0, 0xAC9000
	111 Move X0, [X0+2552]
	112 Call 0x1C17D08
	113 Move X1, X20
	114 Move X2, X31
	115 Call SR.Format, X0, X1
	116 Move X19, X0
	117 Move X0, 0xAAC000
	118 Move X0, [X0+3080]
	119 Call 0x1C17D08
	120 Call 0x1C17F10
	121 Move X1, X19
	122 Move X2, X31
	123 Move X20, X0
	124 Call FormatException..ctor, X0, X1
	125 Move X0, 0xAC9000
	126 Move X0, [X0+2800]
	127 Call 0x1C17D08
	128 Move X1, X0
	129 Move X0, X20
	130 Call 0x1C17DEC

Method: System.Int32 GetPortV6(System.String responseString)

Disassembly:
	0x03675A74 BL 0x1990590
	0x03675A78 STP X30, X19, [X31 - 0x10]!
	0x03675A7C LDR X8, [X0 + 0x28]
	0x03675A80 CBZ X8, 0x3675A94
	0x03675A84 LDRB W8, [X8 + 0x89]
	0x03675A88 CBNZ W8, 0x3675A98
	0x03675A8C LDP X30, X19, [X31], #0x10
	0x03675A90 RET
	0x03675A94 BL 0x1C16F20
	0x03675A98 MOV X0, X31
	0x03675A9C BL 0x367C8A8
	0x03675AA0 MOV X19, X0
	0x03675AA4 ADRP X0, 0xAC8000
	0x03675AA8 LDR X0, [X0 + 0xB50]
	0x03675AAC BL 0x1C16D08
	0x03675AB0 MOV X1, X0
	0x03675AB4 MOV X0, X19
	0x03675AB8 BL 0x1C16DEC
	0x03675ABC LDRB W0, [X0 + 0x39]
	0x03675AC0 RET
	0x03675AC4 STR X30, [X31 - 0x10]!
	0x03675AC8 LDR X0, [X0 + 0x30]
	0x03675ACC CBZ X0, 0x3675AE0
	0x03675AD0 LDR X8, [X0]
	0x03675AD4 LDP X2, X1, [X8 + 0x1B8]
	0x03675AD8 LDR X30, [X31], #0x10
	0x03675ADC BR X2
	0x03675AE0 BL 0x1C16F20
	0x03675AE4 LDRB W0, [X0 + 0x38]
	0x03675AE8 RET
	0x03675AEC STR X30, [X31 - 0x10]!
	0x03675AF0 LDR X0, [X0 + 0x30]
	0x03675AF4 CBZ X0, 0x3675B08
	0x03675AF8 LDR X8, [X0]
	0x03675AFC LDP X2, X1, [X8 + 0x1E8]
	0x03675B00 LDR X30, [X31], #0x10
	0x03675B04 BR X2
	0x03675B08 BL 0x1C16F20
	0x03675B0C STR X30, [X31 - 0x10]!
	0x03675B10 LDR X0, [X0 + 0x30]
	0x03675B14 CBZ X0, 0x3675B28
	0x03675B18 LDR X8, [X0]
	0x03675B1C LDP X2, X1, [X8 + 0x1F8]
	0x03675B20 LDR X30, [X31], #0x10
	0x03675B24 BR X2
	0x03675B28 BL 0x1C16F20
	0x03675B2C STR X30, [X31 - 0x10]!
	0x03675B30 LDR X0, [X0 + 0x30]
	0x03675B34 CBZ X0, 0x3675B4C
	0x03675B38 LDR X8, [X0]
	0x03675B3C LDR X3, [X8 + 0x208]
	0x03675B40 LDR X2, [X8 + 0x210]
	0x03675B44 LDR X30, [X31], #0x10
	0x03675B48 BR X3
	0x03675B4C BL 0x1C16F20
	0x03675B50 STP X30, X21, [X31 - 0x20]!
	0x03675B54 STP X20, X19, [X31 + 0x10]
	0x03675B58 MOV W20, W2
	0x03675B5C MOV X21, X1
	0x03675B60 MOV X19, X0
	0x03675B64 BL 0x3675A78
	0x03675B68 LDR X0, [X19 + 0x30]
	0x03675B6C CBZ X0, 0x3675B94
	0x03675B70 LDR X8, [X0]
	0x03675B74 LDR X9, [X8 + 0x338]
	0x03675B78 LDR X3, [X8 + 0x340]
	0x03675B7C MOV X1, X21
	0x03675B80 MOV W2, W20
	0x03675B84 BLR X9
	0x03675B88 LDP X20, X19, [X31 + 0x10]
	0x03675B8C LDP X30, X21, [X31], #0x20
	0x03675B90 RET
	0x03675B94 BL 0x1C16F20
	0x03675B98 B 0x3675B9C
	0x03675B9C MOV X20, X0
	0x03675BA0 CMP W1, 0x1
	0x03675BA4 B.NE 0x3675C10
	0x03675BA8 MOV X0, X20
	0x03675BAC BL 0x3EB1AD0
	0x03675BB0 MOV X20, X0
	0x03675BB4 ADRP X0, 0xA84000
	0x03675BB8 LDR X0, [X0 + 0xCC0]
	0x03675BBC BL 0x1C16D08
	0x03675BC0 LDR X8, [X20]
	0x03675BC4 LDR X1, [X8]
	0x03675BC8 BL 0x1C17270
	0x03675BCC TBZ X0, 0x0, 0x3675BE8
	0x03675BD0 LDR X20, [X20]
	0x03675BD4 BL 0x3EB1AE0
	0x03675BD8 MOV X0, X19
	0x03675BDC BL 0x3675A78
	0x03675BE0 MOV X0, X20
	0x03675BE4 BL 0x1C16F18
	0x03675BE8 MOVZ W0, 0x8
	0x03675BEC BL 0x3EB1AF0
	0x03675BF0 LDR X8, [X20]
	0x03675BF4 STR X8, [X0]
	0x03675BF8 ADRP X1, 0x83F000
	0x03675BFC ADD X1, X1, 0xE58
	0x03675C00 MOV X2, X31
	0x03675C04 BL 0x3EB1B00
	0x03675C08 MOV X20, X0
	0x03675C0C BL 0x3EB1AE0
	0x03675C10 MOV X0, X20
	0x03675C14 BL 0x1D2C690
	0x03675C18 BL 0x1990590
	0x03675C1C STR X30, [X31 - 0x30]!
	0x03675C20 STP X22, X21, [X31 + 0x10]
	0x03675C24 STP X20, X19, [X31 + 0x20]
	0x03675C28 MOV W20, W3

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xD6C000
	006 Move W8, [X20+1934]
	007 Move X19, X1
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {26}
	012 Move X0, 0xA88000
	013 Move X0, [X0+2264]
	014 Call 0x1C17CF4
	015 Move X0, 0xA88000
	016 Move X0, [X0+2536]
	017 Call 0x1C17CF4
	018 Move X0, 0xA8A000
	019 Move X0, [X0+784]
	020 Call 0x1C17CF4
	021 Move X0, 0xA80000
	022 Move X0, [X0+1544]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X20+1934], W8
	026 Compare X19, 0
	027 JumpIfEqual {99}
	028 Move X8, 0xA8A000
	029 Move X8, [X8+784]
	030 Move X20, 0xA80000
	031 Move X0, X19
	032 Move X2, X31
	033 Move X1, [X8]
	034 Move X20, [X20+1544]
	035 Call String.LastIndexOf, X0, X1
	036 Move X1, [X20]
	037 Move W20, W0
	038 Move X0, X19
	039 Move X2, X31
	040 Call String.LastIndexOf, X0, X1
	041 Add W31, W20, 1
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, 0xA88000
	044 Move X21, [X21+2264]
	045 NotImplemented "Instruction ORN not yet implemented."
	046 Add W1, W20, 1
	047 Add W2, W0, W8
	048 Move X0, X19
	049 Move X3, X31
	050 Call String.Substring, X0, X1, X2
	051 Move X8, [X21]
	052 Move X20, X0
	053 Move W1, 1
	054 Move X0, X8
	055 Call 0x1C17D6C
	056 Compare X0, 0
	057 JumpIfEqual {99}
	058 Move W8, [X0+24]
	059 Move X1, X0
	060 Compare W8, 0
	061 JumpIfEqual {121}
	062 Move W8, 124
	063 NotImplemented "Instruction STRH not yet implemented."
	064 Compare X20, 0
	065 JumpIfEqual {99}
	066 Move X0, X20
	067 Move X2, X31
	068 Call String.Split, X0, X1
	069 Compare X0, 0
	070 JumpIfEqual {99}
	071 Move W8, [X0+24]
	072 NotImplemented "Instruction CMP not yet implemented."
	073 NotImplemented "Instruction CSEL not yet implemented."
	074 Compare X8, 0
	075 JumpIfEqual {99}
	076 Move W9, [X8+24]
	077 NotImplemented "Instruction CMP not yet implemented."
	078 Move X20, 0xA88000
	079 Move X19, [X8+56]
	080 Move X20, [X20+2536]
	081 Move X0, X31
	082 Call NumberFormatInfo.get_InvariantInfo
	083 Move X8, [X20]
	084 Move X20, X0
	085 Move W9, [X8+224]
	086 Compare W9, 0
	087 JumpIfNotEqual {90}
	088 Move X0, X8
	089 Call 0x1C17DFC
	090 Move X0, X19
	091 Move X1, X20
	092 Move X20, [X31+16]
	093 Move X19, [X31+24]
	094 Move X2, X31
	095 Move X30, [X31+32]
	096 Move X21, [X31+40]
	097 Call Convert.ToInt32, X0, X1
	098 Return X0
	099 Call 0x1C17F20
	100 Move X0, 0xAC9000
	101 Move X0, [X0+2552]
	102 Call 0x1C17D08
	103 Move X1, X19
	104 Move X2, X31
	105 Call SR.Format, X0, X1
	106 Move X19, X0
	107 Move X0, 0xAAC000
	108 Move X0, [X0+3080]
	109 Call 0x1C17D08
	110 Call 0x1C17F10
	111 Move X1, X19
	112 Move X2, X31
	113 Move X20, X0
	114 Call FormatException..ctor, X0, X1
	115 Move X0, 0xAC9000
	116 Move X0, [X0+2808]
	117 Call 0x1C17D08
	118 Move X1, X0
	119 Move X0, X20
	120 Call 0x1C17DEC
	121 Call 0x1C17F28

Method: System.Void CreateFtpListenerSocket(System.Net.FtpWebRequest request)

Disassembly:
	0x03675524 LDR X21, [X21 + 0xB28]
	0x03675528 MOV W20, W1
	0x0367552C MOV X19, X0
	0x03675530 TBNZ X8, 0x0, 0x3675548
	0x03675534 ADRP X0, 0xAC8000
	0x03675538 LDR X0, [X0 + 0xB28]
	0x0367553C BL 0x1C16CF4
	0x03675540 MOVZ W8, 0x1
	0x03675544 STRB W8, [X22 + 0x797]
	0x03675548 LDR X8, [X19]
	0x0367554C LDR X1, [X21]
	0x03675550 LDRH W9, [X8 + 0x12E]
	0x03675554 TBZ X20, 0x0, 0x367558C
	0x03675558 CBZ W9, 0x367557C
	0x0367555C LDR X10, [X8 + 0xB0]
	0x03675560 ADD X10, X10, 0x8
	0x03675564 LDUR X11, [X10 - 0x8]
	0x03675568 CMP X11, X1
	0x0367556C B.EQ 0x36755C0
	0x03675570 SUBS X9, X9, 0x1
	0x03675574 ADD X10, X10, 0x10
	0x03675578 B.NE 0x3675564
	0x0367557C MOV X0, X19
	0x03675580 MOV W2, W31
	0x03675584 BL 0x1C5C788
	0x03675588 B 0x36755CC
	0x0367558C CBZ W9, 0x36755B0
	0x03675590 LDR X10, [X8 + 0xB0]
	0x03675594 ADD X10, X10, 0x8
	0x03675598 LDUR X11, [X10 - 0x8]
	0x0367559C CMP X11, X1
	0x036755A0 B.EQ 0x36755E0
	0x036755A4 SUBS X9, X9, 0x1
	0x036755A8 ADD X10, X10, 0x10
	0x036755AC B.NE 0x3675598
	0x036755B0 MOV X0, X19
	0x036755B4 MOV W2, W31
	0x036755B8 BL 0x1C5C788
	0x036755BC B 0x36755EC
	0x036755C0 LDRSW X9, [X10]
	0x036755C4 ADD X8, X8, X9, 0x4, LSL
	0x036755C8 ADD X0, X8, 0x138
	0x036755CC LDP X8, X2, [X0]
	0x036755D0 MOV X0, X19
	0x036755D4 MOV W1, W31
	0x036755D8 BLR X8
	0x036755DC B 0x36755FC
	0x036755E0 LDRSW X9, [X10]
	0x036755E4 ADD X8, X8, X9, 0x4, LSL
	0x036755E8 ADD X0, X8, 0x138
	0x036755EC LDP X8, X2, [X0]
	0x036755F0 MOVZ W1, 0x3
	0x036755F4 MOV X0, X19
	0x036755F8 BLR X8
	0x036755FC AND W1, W20, 0x1
	0x03675600 MOV X0, X19
	0x03675604 LDP X20, X19, [X31 + 0x20]
	0x03675608 LDP X22, X21, [X31 + 0x10]
	0x0367560C MOV X2, X31
	0x03675610 LDR X30, [X31], #0x30
	0x03675614 B 0x32F02C8
	0x03675618 CMP W1, 0x1
	0x0367561C MOV X22, X0
	0x03675620 B.NE 0x3675658
	0x03675624 MOV X0, X22
	0x03675628 BL 0x3EB1AD0
	0x0367562C LDR X21, [X0]
	0x03675630 BL 0x3EB1AE0
	0x03675634 AND W1, W20, 0x1
	0x03675638 MOV X0, X19
	0x0367563C MOV X2, X31
	0x03675640 BL 0x32F02C8
	0x03675644 CBNZ X21, 0x3675660
	0x03675648 LDP X20, X19, [X31 + 0x20]
	0x0367564C LDP X22, X21, [X31 + 0x10]
	0x03675650 LDR X30, [X31], #0x30
	0x03675654 RET
	0x03675658 MOV X21, X31
	0x0367565C B 0x367566C
	0x03675660 MOV X0, X21
	0x03675664 BL 0x1C16F18
	0x03675668 MOV X22, X0
	0x0367566C AND W1, W20, 0x1
	0x03675670 MOV X0, X19
	0x03675674 MOV X2, X31
	0x03675678 BL 0x32F02C8
	0x0367567C CBNZ X21, 0x3675688
	0x03675680 MOV X0, X22
	0x03675684 BL 0x1D2C690
	0x03675688 MOV X0, X21
	0x0367568C BL 0x1C16F18
	0x03675690 BL 0x1990590
	0x03675694 SUB X31, X31, 0x40
	0x03675698 STP X30, X23, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xD6C000
	006 Move W8, [X20+1935]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xA8C000
	013 Move X0, [X0+3000]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+1935], W8
	017 Move X0, X19
	018 Move X1, X31
	019 Call NetworkStreamWrapper.get_Socket, X0
	020 Compare X0, 0
	021 JumpIfEqual {66}
	022 Move X1, X31
	023 Call Socket.get_LocalEndPoint, X0
	024 Compare X0, 0
	025 JumpIfEqual {66}
	026 Move X9, 0xA8C000
	027 Move X9, [X9+3000]
	028 Move X8, [X0]
	029 Move X1, [X9]
	030 Move W10, [X8+304]
	031 Move W9, [X1+304]
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move X8, [X8+200]
	034 Add X8, X8, X9
	035 NotImplemented "Instruction LDUR not yet implemented."
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move X21, [X0+16]
	038 Move X0, X1
	039 Call 0x1C17F10
	040 Move X1, X21
	041 Move W2, W31
	042 Move X20, X0
	043 Call IPEndPoint..ctor, X0, X1, X2
	044 Move X0, X19
	045 Move X1, X31
	046 Call NetworkStreamWrapper.get_Socket, X0
	047 Move X2, X0
	048 Call FtpControlStream.CreateFtpDataSocket, X0, X1, X2
	049 Move [X19+136], X0
	050 Compare X0, 0
	051 JumpIfEqual {66}
	052 Move X1, X20
	053 Move X2, X31
	054 Call Socket.Bind, X0, X1
	055 Move X0, [X19+136]
	056 Compare X0, 0
	057 JumpIfEqual {66}
	058 Move X20, [X31+16]
	059 Move X19, [X31+24]
	060 Move W1, 1
	061 Move X2, X31
	062 Move X30, [X31+32]
	063 Move X21, [X31+40]
	064 Call Socket.Listen, X0, X1
	065 Return 
	066 Call 0x1C17F20
	067 Call 0x1C181E0
	068 Move X19, X0
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Move X0, X19
	071 Call 0x3EB2AD0
	072 Move X19, X0
	073 Move X0, 0xAA8000
	074 Move X0, [X0+1208]
	075 Call 0x1C17D08
	076 Move X8, [X19]
	077 Move X1, [X8]
	078 Call 0x1C18270
	079 Move TEMP, X0
	080 And TEMP, TEMP, 1
	081 Compare TEMP, 1
	082 JumpIfNotEqual {93}
	083 Call 0x3EB2AE0
	084 Move X0, X31
	085 Call ExceptionHelper.get_RequestAbortedException
	086 Move X19, X0
	087 Move X0, 0xAC9000
	088 Move X0, [X0+2776]
	089 Call 0x1C17D08
	090 Move X1, X0
	091 Move X0, X19
	092 Call 0x1C17DEC
	093 Move W0, 8
	094 Call 0x3EB2AF0
	095 Move X8, [X19]
	096 Move [X0], X8
	097 Move X1, 0x840000
	098 Add X1, X1, 3672
	099 Move X2, X31
	100 Call 0x3EB2B00
	101 Move X19, X0
	102 Call 0x3EB2AE0
	103 Move X0, X19
	104 Call 0x1D2D690
	105 Call 0x1991590

Method: System.String GetPortCommandLine(System.Net.FtpWebRequest request)

Disassembly:
	0x0367569C STP X22, X21, [X31 + 0x20]
	0x036756A0 STP X20, X19, [X31 + 0x30]
	0x036756A4 ADRP X21, 0xD6B000
	0x036756A8 ADRP X23, 0xAC8000
	0x036756AC LDRB W8, [X21 + 0x798]
	0x036756B0 LDR X23, [X23 + 0x468]
	0x036756B4 MOV W20, W1
	0x036756B8 MOV X19, X0
	0x036756BC TBNZ X8, 0x0, 0x3675704
	0x036756C0 ADRP X0, 0xAC8000
	0x036756C4 LDR X0, [X0 + 0xB30]
	0x036756C8 BL 0x1C16CF4
	0x036756CC ADRP X0, 0xAC8000
	0x036756D0 LDR X0, [X0 + 0x468]
	0x036756D4 BL 0x1C16CF4
	0x036756D8 ADRP X0, 0xA7E000
	0x036756DC LDR X0, [X0 + 0x9D0]
	0x036756E0 BL 0x1C16CF4
	0x036756E4 ADRP X0, 0xAC8000
	0x036756E8 LDR X0, [X0 + 0xB38]
	0x036756EC BL 0x1C16CF4
	0x036756F0 ADRP X0, 0xAC8000
	0x036756F4 LDR X0, [X0 + 0xB40]
	0x036756F8 BL 0x1C16CF4
	0x036756FC MOVZ W8, 0x1
	0x03675700 STRB W8, [X21 + 0x798]
	0x03675704 LDR X0, [X23]
	0x03675708 STRB W31, [X31 + 0xC]
	0x0367570C LDR W8, [X0 + 0xE0]
	0x03675710 CBNZ W8, 0x3675718
	0x03675714 BL 0x1C16DFC
	0x03675718 BL 0x366A368
	0x0367571C TBZ X0, 0x0, 0x36757C4
	0x03675720 ADRP X8, 0xA7E000
	0x03675724 LDR X8, [X8 + 0x9D0]
	0x03675728 ADRP X22, 0xAC8000
	0x0367572C MOVZ W1, 0x1
	0x03675730 LDR X0, [X8]
	0x03675734 LDR X22, [X22 + 0xB30]
	0x03675738 BL 0x1C16D6C
	0x0367573C MOV X21, X0
	0x03675740 LDR X0, [X22]
	0x03675744 ADD X1, X31, 0x8
	0x03675748 STR W20, [X31 + 0x8]
	0x0367574C BL 0x1C16E04
	0x03675750 CBZ X21, 0x3675898
	0x03675754 MOV X22, X0
	0x03675758 CBZ X0, 0x3675770
	0x0367575C LDR X8, [X21]
	0x03675760 MOV X0, X22
	0x03675764 LDR X1, [X8 + 0x40]
	0x03675768 BL 0x1C16E00
	0x0367576C CBZ X0, 0x36758A8
	0x03675770 LDR W8, [X21 + 0x18]
	0x03675774 CBZ W8, 0x367589C
	0x03675778 STR X22, [X21 + 0x20]
	0x0367577C ADRP X8, 0xAC8000
	0x03675780 LDR X8, [X8 + 0xB38]
	0x03675784 MOV X1, X21
	0x03675788 MOV X2, X31
	0x0367578C LDR X0, [X8]
	0x03675790 BL 0x32C2F6C
	0x03675794 LDR X8, [X23]
	0x03675798 MOV X21, X0
	0x0367579C LDR W9, [X8 + 0xE0]
	0x036757A0 CBNZ W9, 0x36757AC
	0x036757A4 MOV X0, X8
	0x036757A8 BL 0x1C16DFC
	0x036757AC ADRP X8, 0xAC8000
	0x036757B0 LDR X8, [X8 + 0xB40]
	0x036757B4 MOV X0, X19
	0x036757B8 MOV X1, X21
	0x036757BC LDR X2, [X8]
	0x036757C0 BL 0x366A3CC
	0x036757C4 STRB W31, [X31 + 0xC]
	0x036757C8 ADD X1, X31, 0xC
	0x036757CC MOV X0, X19
	0x036757D0 MOV X2, X31
	0x036757D4 BL 0x33DE64C
	0x036757D8 LDRB W8, [X19 + 0x3B]
	0x036757DC CBZ W8, 0x36757EC
	0x036757E0 MOV X22, X31
	0x036757E4 MOVZ W21, 0x4
	0x036757E8 B 0x3675800
	0x036757EC MOVZ W8, 0x1
	0x036757F0 MOV X22, X31
	0x036757F4 STRH W31, [X19 + 0x38]
	0x036757F8 STRB W8, [X19 + 0x3B]
	0x036757FC MOVZ W21, 0x5
	0x03675800 LDRB W8, [X31 + 0xC]
	0x03675804 CBZ W8, 0x3675814
	0x03675808 MOV X0, X19
	0x0367580C MOV X1, X31
	0x03675810 BL 0x33E14E4
	0x03675814 CBNZ X22, 0x3675884
	0x03675818 CMP W21, 0x5
	0x0367581C B.EQ 0x3675824
	0x03675820 CBNZ W21, 0x3675870
	0x03675824 LDR X0, [X19 + 0x30]
	0x03675828 TBNZ X20, 0x0, 0x3675844
	0x0367582C CBZ X0, 0x36758A0
	0x03675830 MOVN W1, 0x0
	0x03675834 MOV X2, X31
	0x03675838 BL 0x36BBB50
	0x0367583C MOV X21, X31
	0x03675840 B 0x3675858
	0x03675844 CBZ X0, 0x36758A4
	0x03675848 MOV W1, W31
	0x0367584C MOV X2, X31
	0x03675850 BL 0x36BBB50
	0x03675854 MOV X21, X31
	0x03675858 LDR X0, [X19 + 0x28]
	0x0367585C CBZ X0, 0x367588C
	0x03675860 MOV W1, W20
	0x03675864 MOV X2, X31
	0x03675868 BL 0x367CD84
	0x0367586C CBNZ X21, 0x3675890
	0x03675870 LDP X20, X19, [X31 + 0x30]
	0x03675874 LDP X22, X21, [X31 + 0x20]
	0x03675878 LDP X30, X23, [X31 + 0x10]
	0x0367587C ADD X31, X31, 0x40
	0x03675880 RET
	0x03675884 MOV X0, X22
	0x03675888 BL 0x1C16F18

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0xD6C000
	005 Move W8, [X19+1936]
	006 Move X20, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xA8C000
	012 Move X0, [X0+3000]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X19+1936], W8
	016 Move X0, [X20+136]
	017 Compare X0, 0
	018 JumpIfEqual {67}
	019 Move X1, X31
	020 Call Socket.get_LocalEndPoint, X0
	021 Move X19, X0
	022 Compare X0, 0
	023 JumpIfEqual {35}
	024 Move X9, 0xA8C000
	025 Move X9, [X9+3000]
	026 Move X8, [X19]
	027 Move X1, [X9]
	028 Move W10, [X8+304]
	029 Move W9, [X1+304]
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move X8, [X8+200]
	032 Add X8, X8, X9
	033 NotImplemented "Instruction LDUR not yet implemented."
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Move X0, X20
	036 Move X1, X31
	037 Call NetworkStreamWrapper.get_ServerAddress, X0
	038 Compare X0, 0
	039 JumpIfEqual {68}
	040 Move X8, [X0+24]
	041 Compare X8, 0
	042 JumpIfEqual {56}
	043 Move X0, X20
	044 Move X1, X31
	045 Call NetworkStreamWrapper.get_ServerAddress, X0
	046 Compare X0, 0
	047 JumpIfEqual {69}
	048 Move X8, [X0+24]
	049 Compare X8, 0
	050 JumpIfEqual {70}
	051 Compare X19, 0
	052 JumpIfEqual {83}
	053 Move X1, [X19+16]
	054 Move W2, [X19+24]
	055 Call FtpControlStream.FormatAddressV6, X0, X1, X2
	056 Compare X19, 0
	057 JumpIfEqual {84}
	058 Move X1, [X19+16]
	059 Move W2, [X19+24]
	060 Call FtpControlStream.FormatAddress, X0, X1, X2
	061 Move X20, [X31+16]
	062 Move X19, [X31+24]
	063 Move X30, [X31+32]
	064 Return X0
	065 Move X0, X19
	066 Call 0x1C181E0
	067 Call 0x1C17F20
	068 Call 0x1C17F20
	069 Call 0x1C17F20
	070 Move X0, 0xAC9000
	071 Move X0, [X0+2120]
	072 Call 0x1C17D08
	073 Call 0x1C17F10
	074 Move X19, X0
	075 Move X1, X31
	076 Call InternalException..ctor, X0
	077 Move X0, 0xAC9000
	078 Move X0, [X0+2784]
	079 Call 0x1C17D08
	080 Move X1, X0
	081 Move X0, X19
	082 Call 0x1C17DEC
	083 Call 0x1C17F20
	084 Call 0x1C17F20
	085 Move X19, X0
	086 NotImplemented "Instruction CMP not yet implemented."
	087 Move X0, X19
	088 Call 0x3EB2AD0
	089 Move X19, X0
	090 Move X0, 0xA7F000
	091 Move X0, [X0+2000]
	092 Call 0x1C17D08
	093 Move X8, [X19]
	094 Move X1, [X8]
	095 Call 0x1C18270
	096 Move TEMP, X0
	097 And TEMP, TEMP, 1
	098 Compare TEMP, 1
	099 JumpIfNotEqual {116}
	100 Move X19, [X19]
	101 Call 0x3EB2AE0
	102 Move X0, 0xAC9000
	103 Move X0, [X0+2176]
	104 Call 0x1C17D08
	105 Move W2, 7
	106 Move X1, X0
	107 Move X3, X19
	108 Call CommandStream.GenerateException, X0, X1, X2, X3
	109 Move X19, X0
	110 Move X0, 0xAC9000
	111 Move X0, [X0+2784]
	112 Call 0x1C17D08
	113 Move X1, X0
	114 Move X0, X19
	115 Call 0x1C17DEC
	116 Move W0, 8
	117 Call 0x3EB2AF0
	118 Move X8, [X19]
	119 Move [X0], X8
	120 Move X1, 0x840000
	121 Add X1, X1, 3672
	122 Move X2, X31
	123 Call 0x3EB2B00
	124 Move X19, X0
	125 Call 0x3EB2AE0
	126 Move X0, X19
	127 Call 0x1D2D690
	128 Call 0x1991590

Method: System.String FormatFtpCommand(System.String command, System.String parameter)

Disassembly:
	0x0367529C MOV X2, X31
	0x036752A0 STR W8, [X21 + 0x14]
	0x036752A4 BL 0x3222A1C
	0x036752A8 AND W8, W0, 0xFFFF
	0x036752AC CMP W8, 0x2D
	0x036752B0 B.NE 0x36750C0
	0x036752B4 MOVZ W8, 0x1
	0x036752B8 STRB W8, [X21 + 0x10]
	0x036752BC B 0x36750C0
	0x036752C0 MOV W0, W31
	0x036752C4 B 0x36752D4
	0x036752C8 LDR W8, [X20]
	0x036752CC STR W8, [X19]
	0x036752D0 MOVZ W0, 0x1
	0x036752D4 LDP X20, X19, [X31 + 0x30]
	0x036752D8 LDP X22, X21, [X31 + 0x20]
	0x036752DC LDP X24, X23, [X31 + 0x10]
	0x036752E0 LDP X30, X25, [X31], #0x40
	0x036752E4 RET
	0x036752E8 BL 0x1C16F20
	0x036752EC BL 0x1C16F28
	0x036752F0 BL 0x1C16F44
	0x036752F4 MOV X1, X31
	0x036752F8 BL 0x1C16DEC
	0x036752FC STR X30, [X31 - 0x40]!
	0x03675300 STP X24, X23, [X31 + 0x10]
	0x03675304 STP X22, X21, [X31 + 0x20]
	0x03675308 STP X20, X19, [X31 + 0x30]
	0x0367530C ADRP X24, 0xD6B000
	0x03675310 ADRP X22, 0xAA6000
	0x03675314 ADRP X19, 0xAC8000
	0x03675318 ADRP X20, 0xAC8000
	0x0367531C ADRP X23, 0xAC8000
	0x03675320 ADRP X21, 0xAC8000
	0x03675324 LDRB W8, [X24 + 0x795]
	0x03675328 LDR X22, [X22 + 0x720]
	0x0367532C LDR X19, [X19 + 0x8D8]
	0x03675330 LDR X20, [X20 + 0x8C8]
	0x03675334 LDR X23, [X23 + 0xB18]
	0x03675338 LDR X21, [X21 + 0xB20]
	0x0367533C TBNZ X8, 0x0, 0x3675384
	0x03675340 ADRP X0, 0xAA6000
	0x03675344 LDR X0, [X0 + 0x720]
	0x03675348 BL 0x1C16CF4
	0x0367534C ADRP X0, 0xAC8000
	0x03675350 LDR X0, [X0 + 0x8D8]
	0x03675354 BL 0x1C16CF4
	0x03675358 ADRP X0, 0xAC8000
	0x0367535C LDR X0, [X0 + 0xB18]
	0x03675360 BL 0x1C16CF4
	0x03675364 ADRP X0, 0xAC8000
	0x03675368 LDR X0, [X0 + 0xB20]
	0x0367536C BL 0x1C16CF4
	0x03675370 ADRP X0, 0xAC8000
	0x03675374 LDR X0, [X0 + 0x8C8]
	0x03675378 BL 0x1C16CF4
	0x0367537C MOVZ W8, 0x1
	0x03675380 STRB W8, [X24 + 0x795]
	0x03675384 LDR X0, [X22]
	0x03675388 BL 0x1C16F10
	0x0367538C LDR X2, [X19]
	0x03675390 MOV X1, X31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0xD6C000
	008 Move W8, [X20+1937]
	009 Move X19, X2
	010 Move X21, X1
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0xA7F000
	016 Move X0, [X0+2288]
	017 Call 0x1C17CF4
	018 Move X0, 0xABD000
	019 Move X0, [X0+1056]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X20+1937], W8
	023 Compare X21, 0
	024 JumpIfEqual {77}
	025 Move X8, 0xA7F000
	026 Move W22, [X21+16]
	027 Move X8, [X8+2288]
	028 Compare X19, 0
	029 JumpIfEqual {31}
	030 Move W23, [X19+16]
	031 Move W23, W31
	032 Move X0, [X8]
	033 Call 0x1C17F10
	034 Add W8, W22, W23
	035 Add W1, W8, 3
	036 Move X2, X31
	037 Move X20, X0
	038 Call StringBuilder..ctor, X0, X1
	039 Compare X20, 0
	040 JumpIfEqual {77}
	041 Move X22, 0xABD000
	042 Move X22, [X22+1056]
	043 Move X0, X20
	044 Move X1, X21
	045 Move X2, X31
	046 Call StringBuilder.Append, X0, X1
	047 Move X0, X19
	048 Move X1, X31
	049 Call String.IsNullOrEmpty, X0
	050 Move TEMP, X0
	051 And TEMP, TEMP, 1
	052 Compare TEMP, 1
	053 JumpIfEqual {62}
	054 Move W1, 32
	055 Move X0, X20
	056 Move X2, X31
	057 Call StringBuilder.Append, X0, X1
	058 Move X0, X20
	059 Move X1, X19
	060 Move X2, X31
	061 Call StringBuilder.Append, X0, X1
	062 Move X1, [X22]
	063 Move X0, X20
	064 Move X2, X31
	065 Call StringBuilder.Append, X0, X1
	066 Move X8, [X20]
	067 Move X0, X20
	068 Move X20, [X31+32]
	069 Move X19, [X31+40]
	070 Move X22, [X31+16]
	071 Move X21, [X31+24]
	072 Move X2, [X8+360]
	073 Move X1, [X8+368]
	074 Move X30, [X31+48]
	075 Move X23, [X31+56]
	076 CallNoReturn X2
	077 Call 0x1C17F20

Method: System.Net.Sockets.Socket CreateFtpDataSocket(System.Net.FtpWebRequest request, System.Net.Sockets.Socket templateSocket)

Disassembly:
	0x03675C2C MOV W21, W2
	0x03675C30 MOV X22, X1
	0x03675C34 MOV X19, X0
	0x03675C38 BL 0x3675A78
	0x03675C3C LDR X0, [X19 + 0x30]
	0x03675C40 CBZ X0, 0x3675C98
	0x03675C44 LDR X8, [X0]
	0x03675C48 LDR X9, [X8 + 0x358]
	0x03675C4C LDR X4, [X8 + 0x360]
	0x03675C50 MOV X1, X22
	0x03675C54 MOV W2, W21
	0x03675C58 MOV W3, W20
	0x03675C5C BLR X9
	0x03675C60 MOV W20, W0
	0x03675C64 CBNZ W0, 0x3675C84
	0x03675C68 LDR X8, [X19]
	0x03675C6C MOVZ W9, 0x1
	0x03675C70 STRB W9, [X19 + 0x3A]
	0x03675C74 MOV X0, X19
	0x03675C78 LDR X9, [X8 + 0x278]
	0x03675C7C LDR X1, [X8 + 0x280]
	0x03675C80 BLR X9
	0x03675C84 MOV W0, W20
	0x03675C88 LDP X20, X19, [X31 + 0x20]
	0x03675C8C LDP X22, X21, [X31 + 0x10]
	0x03675C90 LDR X30, [X31], #0x30
	0x03675C94 RET
	0x03675C98 BL 0x1C16F20
	0x03675C9C B 0x3675CA0
	0x03675CA0 MOV X20, X0
	0x03675CA4 CMP W1, 0x1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xD6C000
	007 Move W8, [X20+1938]
	008 Move X19, X2
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xA88000
	014 Move X0, [X0+1928]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X20+1938], W8
	018 Compare X19, 0
	019 JumpIfEqual {40}
	020 Move X8, 0xA88000
	021 Move X8, [X8+1928]
	022 Move W20, [X19+32]
	023 Move W21, [X19+36]
	024 Move W19, [X19+40]
	025 Move X0, [X8]
	026 Call 0x1C17F10
	027 Move W1, W20
	028 Move W2, W21
	029 Move W3, W19
	030 Move X4, X31
	031 Move X22, X0
	032 Call Socket..ctor, X0, X1, X2, X3
	033 Move X0, X22
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Return X0
	040 Call 0x1C17F20

Method: System.Boolean CheckValid(System.Net.ResponseDescription response, ref System.Int32 validThrough, ref System.Int32 completeLength)

Disassembly:
	0x03675F40 MOV X1, X0
	0x03675F44 CBZ X19, 0x3675F74
	0x03675F48 MOV X0, X19
	0x03675F4C MOV X2, X31
	0x03675F50 BL 0x3677FCC
	0x03675F54 LDP X20, X19, [X31 + 0x20]
	0x03675F58 LDP X30, X21, [X31 + 0x10]
	0x03675F5C ADD X31, X31, 0x30
	0x03675F60 RET
	0x03675F64 MOV X0, X19
	0x03675F68 BL 0x1C171E0
	0x03675F6C BL 0x1C16F20
	0x03675F70 BL 0x1C16F20
	0x03675F74 BL 0x1C16F20
	0x03675F78 B 0x3675F80
	0x03675F7C B 0x3675F80
	0x03675F80 MOV X20, X0
	0x03675F84 B 0x3675F8C
	0x03675F88 MOV X20, X0
	0x03675F8C CMP W1, 0x1
	0x03675F90 B.NE 0x3676038
	0x03675F94 MOV X0, X20
	0x03675F98 BL 0x3EB1AD0
	0x03675F9C MOV X20, X0
	0x03675FA0 ADRP X0, 0xA7E000
	0x03675FA4 LDR X0, [X0 + 0x7D0]
	0x03675FA8 BL 0x1C16D08
	0x03675FAC LDR X8, [X20]
	0x03675FB0 LDR X1, [X8]
	0x03675FB4 BL 0x1C17270
	0x03675FB8 TBZ X0, 0x0, 0x3675FEC
	0x03675FBC LDR X20, [X20]
	0x03675FC0 BL 0x3EB1AE0
	0x03675FC4 CBZ X19, 0x3676010
	0x03675FC8 MOV X0, X19
	0x03675FCC MOV X1, X31
	0x03675FD0 BL 0x3686FA8
	0x03675FD4 TBNZ X0, 0x0, 0x3675F54
	0x03675FD8 MOV X0, X19
	0x03675FDC MOV X1, X20
	0x03675FE0 MOV X2, X31
	0x03675FE4 BL 0x3677FCC
	0x03675FE8 B 0x3675F54
	0x03675FEC MOVZ W0, 0x8
	0x03675FF0 BL 0x3EB1AF0
	0x03675FF4 LDR X8, [X20]
	0x03675FF8 STR X8, [X0]
	0x03675FFC ADRP X1, 0x83F000
	0x03676000 ADD X1, X1, 0xE58
	0x03676004 MOV X2, X31
	0x03676008 BL 0x3EB1B00
	0x0367600C B 0x3676094
	0x03676010 BL 0x1C16F20
	0x03676014 B 0x3676020
	0x03676018 B 0x3676020
	0x0367601C B 0x3676020
	0x03676020 MOV X20, X0
	0x03676024 B 0x3676038
	0x03676028 MOV X19, X1
	0x0367602C MOV X20, X0
	0x03676030 BL 0x3EB1AE0
	0x03676034 MOV W1, W19
	0x03676038 MOVZ W8, 0x1
	0x0367603C CMP W1, W8
	0x03676040 B.NE 0x367609C
	0x03676044 MOV X0, X20
	0x03676048 BL 0x3EB1AD0
	0x0367604C MOV X19, X0
	0x03676050 ADRP X0, 0xA83000
	0x03676054 LDR X0, [X0 + 0xCC0]
	0x03676058 BL 0x1C16D08
	0x0367605C LDR X8, [X19]
	0x03676060 LDR X1, [X8]
	0x03676064 BL 0x1C17270
	0x03676068 TBZ X0, 0x0, 0x3676074
	0x0367606C BL 0x3EB1AE0
	0x03676070 B 0x3675F54
	0x03676074 MOVZ W0, 0x8
	0x03676078 BL 0x3EB1AF0
	0x0367607C LDR X8, [X19]
	0x03676080 STR X8, [X0]
	0x03676084 ADRP X1, 0x83E000
	0x03676088 ADD X1, X1, 0xE58
	0x0367608C MOV X2, X31
	0x03676090 BL 0x3EB1B00
	0x03676094 MOV X20, X0
	0x03676098 BL 0x3EB1AE0
	0x0367609C MOV X0, X20
	0x036760A0 BL 0x1D2C690
	0x036760A4 BL 0x1990590
	0x036760A8 STP X30, X27, [X31 - 0x50]!
	0x036760AC STP X26, X25, [X31 + 0x10]
	0x036760B0 STP X24, X23, [X31 + 0x20]
	0x036760B4 STP X22, X21, [X31 + 0x30]
	0x036760B8 STP X20, X19, [X31 + 0x40]
	0x036760BC ADRP X27, 0xD6A000
	0x036760C0 ADRP X23, 0xAC7000
	0x036760C4 ADRP X26, 0xAA5000
	0x036760C8 LDRB W8, [X27 + 0x79A]
	0x036760CC LDR X23, [X23 + 0xB58]
	0x036760D0 LDR X26, [X26 + 0x720]
	0x036760D4 MOV X25, X5
	0x036760D8 MOV X24, X4
	0x036760DC MOV W20, W3
	0x036760E0 MOV W21, W2
	0x036760E4 MOV X22, X1
	0x036760E8 MOV X19, X0
	0x036760EC TBNZ X8, 0x0, 0x367611C
	0x036760F0 ADRP X0, 0xAA5000
	0x036760F4 LDR X0, [X0 + 0x720]
	0x036760F8 BL 0x1C16CF4
	0x036760FC ADRP X0, 0xAC7000
	0x03676100 LDR X0, [X0 + 0xB60]
	0x03676104 BL 0x1C16CF4
	0x03676108 ADRP X0, 0xAC7000
	0x0367610C LDR X0, [X0 + 0xB58]
	0x03676110 BL 0x1C16CF4
	0x03676114 MOVZ W8, 0x1
	0x03676118 STRB W8, [X27 + 0x79A]
	0x0367611C MOV X0, X19
	0x03676120 BL 0x3675A78
	0x03676124 LDR X0, [X23]
	0x03676128 BL 0x1C16F10
	0x0367612C MOV X1, X19
	0x03676130 MOV X2, X25
	0x03676134 MOV X3, X24
	0x03676138 MOV X4, X31
	0x0367613C MOV X23, X0
	0x03676140 BL 0x367A54C
	0x03676144 LDR X24, [X19 + 0x30]
	0x03676148 LDR X0, [X26]
	0x0367614C BL 0x1C16F10
	0x03676150 ADRP X8, 0xAC7000
	0x03676154 LDR X8, [X8 + 0xB60]
	0x03676158 MOV X25, X0
	0x0367615C LDR X2, [X8]
	0x03676160 MOV X1, X19
	0x03676164 MOV X3, X31
	0x03676168 BL 0x3316570
	0x0367616C CBZ X24, 0x36761B4
	0x03676170 LDR X8, [X24]
	0x03676174 LDR X9, [X8 + 0x2B8]
	0x03676178 LDR X6, [X8 + 0x2C0]
	0x0367617C MOV X0, X24
	0x03676180 MOV X1, X22
	0x03676184 MOV W2, W21
	0x03676188 MOV W3, W20
	0x0367618C MOV X4, X25
	0x03676190 MOV X5, X23
	0x03676194 BLR X9
	0x03676198 MOV X0, X23
	0x0367619C LDP X20, X19, [X31 + 0x40]
	0x036761A0 LDP X22, X21, [X31 + 0x30]
	0x036761A4 LDP X24, X23, [X31 + 0x20]
	0x036761A8 LDP X26, X25, [X31 + 0x10]
	0x036761AC LDP X30, X27, [X31], #0x50
	0x036761B0 RET
	0x036761B4 BL 0x1C16F20
	0x036761B8 B 0x36761C0
	0x036761BC B 0x36761C0
	0x036761C0 MOV X20, X0
	0x036761C4 CMP W1, 0x1
	0x036761C8 B.NE 0x3676234
	0x036761CC MOV X0, X20
	0x036761D0 BL 0x3EB1AD0
	0x036761D4 MOV X20, X0
	0x036761D8 ADRP X0, 0xA83000
	0x036761DC LDR X0, [X0 + 0xCC0]
	0x036761E0 BL 0x1C16D08
	0x036761E4 LDR X8, [X20]
	0x036761E8 LDR X1, [X8]
	0x036761EC BL 0x1C17270
	0x036761F0 TBZ X0, 0x0, 0x367620C
	0x036761F4 LDR X20, [X20]
	0x036761F8 BL 0x3EB1AE0
	0x036761FC MOV X0, X19
	0x03676200 BL 0x3675A78
	0x03676204 MOV X0, X20
	0x03676208 BL 0x1C16F18
	0x0367620C MOVZ W0, 0x8
	0x03676210 BL 0x3EB1AF0
	0x03676214 LDR X8, [X20]
	0x03676218 STR X8, [X0]
	0x0367621C ADRP X1, 0x83E000
	0x03676220 ADD X1, X1, 0xE58
	0x03676224 MOV X2, X31
	0x03676228 BL 0x3EB1B00
	0x0367622C MOV X20, X0
	0x03676230 BL 0x3EB1AE0
	0x03676234 MOV X0, X20
	0x03676238 BL 0x1D2C690
	0x0367623C BL 0x1990590
	0x03676240 STP X30, X21, [X31 - 0x20]!
	0x03676244 STP X20, X19, [X31 + 0x10]
	0x03676248 ADRP X21, 0xD6A000
	0x0367624C LDRB W8, [X21 + 0x79B]
	0x03676250 MOV X20, X1
	0x03676254 MOV X19, X0
	0x03676258 TBNZ X8, 0x0, 0x3676288
	0x0367625C ADRP X0, 0xA7D000
	0x03676260 LDR X0, [X0 + 0x7D0]
	0x03676264 BL 0x1C16CF4
	0x03676268 ADRP X0, 0xA7D000
	0x0367626C LDR X0, [X0 + 0x758]
	0x03676270 BL 0x1C16CF4
	0x03676274 ADRP X0, 0xAC7000
	0x03676278 LDR X0, [X0 + 0xB58]
	0x0367627C BL 0x1C16CF4
	0x03676280 MOVZ W8, 0x1
	0x03676284 STRB W8, [X21 + 0x79B]
	0x03676288 CBZ X20, 0x3676360
	0x0367628C ADRP X9, 0xAC7000
	0x03676290 LDR X9, [X9 + 0xB58]
	0x03676294 LDR X8, [X20]
	0x03676298 LDR X1, [X9]
	0x0367629C LDRB W10, [X8 + 0x130]
	0x036762A0 LDRB W9, [X1 + 0x130]
	0x036762A4 CMP W10, W9
	0x036762A8 B.CC 0x3676358
	0x036762AC LDR X8, [X8 + 0xC8]
	0x036762B0 ADD X8, X8, X9, 0x3, LSL
	0x036762B4 LDUR X8, [X8 - 0x8]
	0x036762B8 CMP X8, X1
	0x036762BC B.NE 0x3676358
	0x036762C0 MOV X0, X20
	0x036762C4 MOV X1, X31
	0x036762C8 BL 0x3678D94
	0x036762CC MOV X20, X0
	0x036762D0 CBZ X0, 0x3676364
	0x036762D4 ADRP X9, 0xA7D000
	0x036762D8 LDR X9, [X9 + 0x7D0]
	0x036762DC LDR X8, [X20]
	0x036762E0 LDR X9, [X9]
	0x036762E4 LDRB W11, [X8 + 0x130]
	0x036762E8 LDRB W10, [X9 + 0x130]
	0x036762EC CMP W11, W10
	0x036762F0 B.CC 0x3676318
	0x036762F4 LDR X11, [X8 + 0xC8]
	0x036762F8 ADD X10, X11, X10, 0x3, LSL

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X23, 0xD6C000
	010 Move X25, 0xAC9000
	011 Move W8, [X23+1939]
	012 Move X25, [X25+1128]
	013 Move X19, X3
	014 Move X20, X2
	015 Move X21, X1
	016 Move X22, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {44}
	021 Move X0, 0xA81000
	022 Move X0, [X0+368]
	023 Call 0x1C17CF4
	024 Move X0, 0xA88000
	025 Move X0, [X0+2536]
	026 Call 0x1C17CF4
	027 Move X0, 0xAC9000
	028 Move X0, [X0+1128]
	029 Call 0x1C17CF4
	030 Move X0, 0xA7F000
	031 Move X0, [X0+2512]
	032 Call 0x1C17CF4
	033 Move X0, 0xABD000
	034 Move X0, [X0+1056]
	035 Call 0x1C17CF4
	036 Move X0, 0xAC9000
	037 Move X0, [X0+2824]
	038 Call 0x1C17CF4
	039 Move X0, 0xAC9000
	040 Move X0, [X0+2832]
	041 Call 0x1C17CF4
	042 Move W8, 1
	043 Move [X23+1939], W8
	044 Move X0, [X25]
	045 Move W8, [X0+224]
	046 Compare W8, 0
	047 JumpIfNotEqual {49}
	048 Call 0x1C17DFC
	049 Call NetEventSource.get_IsEnabled
	050 Move TEMP, X0
	051 And TEMP, TEMP, 1
	052 Compare TEMP, 1
	053 JumpIfNotEqual {96}
	054 Move X8, 0xA7F000
	055 Move X8, [X8+2512]
	056 Move W1, 1
	057 Move X0, [X8]
	058 Call 0x1C17D6C
	059 Compare X21, 0
	060 JumpIfEqual {267}
	061 Move X23, X0
	062 Compare X0, 0
	063 JumpIfEqual {267}
	064 Move X24, [X21+32]
	065 Compare X24, 0
	066 JumpIfEqual {73}
	067 Move X8, [X23]
	068 Move X0, X24
	069 Move X1, [X8+64]
	070 Call 0x1C17E00
	071 Compare X0, 0
	072 JumpIfEqual {269}
	073 Move W8, [X23+24]
	074 Compare W8, 0
	075 JumpIfEqual {268}
	076 Move [X23+32], X24
	077 Move X8, 0xAC8000
	078 Move X8, [X8+2824]
	079 Move X1, X23
	080 Move X2, X31
	081 Move X0, [X8]
	082 Call FormattableStringFactory.Create, X0, X1
	083 Move X8, [X25]
	084 Move X23, X0
	085 Move W9, [X8+224]
	086 Compare W9, 0
	087 JumpIfNotEqual {90}
	088 Move X0, X8
	089 Call 0x1C17DFC
	090 Move X8, 0xAC8000
	091 Move X8, [X8+2832]
	092 Move X0, X22
	093 Move X1, X23
	094 Move X2, [X8]
	095 Call NetEventSource.Info, X0, X1, X2
	096 Compare X21, 0
	097 JumpIfEqual {267}
	098 Move X0, [X21+32]
	099 Compare X0, 0
	100 JumpIfEqual {267}
	101 Move X1, X31
	102 Call StringBuilder.get_Length, X0
	103 NotImplemented "Instruction CMP not yet implemented."
	104 Move X0, [X21+32]
	105 Compare X0, 0
	106 JumpIfEqual {267}
	107 Move X8, [X0]
	108 Move X9, [X8+360]
	109 Move X1, [X8+368]
	110 NotImplemented "Instruction BLR not yet implemented."
	111 Move W8, [X21+20]
	112 Move X22, X0
	113 Add W31, W8, 1
	114 Compare X22, 0
	115 JumpIfEqual {267}
	116 Move X24, 0xABC000
	117 Move W2, [X20]
	118 Move X24, [X24+1056]
	119 Move X1, [X24]
	120 Move X0, X22
	121 Move X3, X31
	122 Call String.IndexOf, X0, X1, X2
	123 Add W31, W0, 1
	124 Add W8, W0, 2
	125 Move W23, [X20]
	126 Move [X20], W8
	127 Move W9, [X21+16]
	128 Compare W9, 0
	129 JumpIfEqual {256}
	130 Move W8, [X22+16]
	131 Add W9, W23, 4
	132 NotImplemented "Instruction CMP not yet implemented."
	133 Move W2, 3
	134 Move X0, X22
	135 Move W1, W23
	136 Move X3, X31
	137 Call String.Substring, X0, X1, X2
	138 Move X1, [X21+40]
	139 Move X2, X31
	140 Call String.op_Equality, X0, X1
	141 Move TEMP, X0
	142 And TEMP, TEMP, 1
	143 Compare TEMP, 1
	144 JumpIfNotEqual {151}
	145 Add W1, W23, 3
	146 Move X0, X22
	147 Move X2, X31
	148 Call String.get_Chars, X0, X1
	149 And W8, W0, 0xFFFF
	150 NotImplemented "Instruction CMP not yet implemented."
	151 Move W2, [X20]
	152 Compare X22, 0
	153 JumpIfEqual {267}
	154 Move X0, X22
	155 Move W1, W31
	156 Move X2, X31
	157 Call String.get_Chars, X0, X1
	158 Move X24, 0xA80000
	159 Move X24, [X24+368]
	160 Move W23, W0
	161 Move X8, [X24]
	162 Move W9, [X8+224]
	163 Compare W9, 0
	164 JumpIfNotEqual {167}
	165 Move X0, X8
	166 Call 0x1C17DFC
	167 Move W0, W23
	168 Move X1, X31
	169 Call Char.IsDigit, X0
	170 Move TEMP, X0
	171 And TEMP, TEMP, 1
	172 Compare TEMP, 1
	173 JumpIfNotEqual {254}
	174 Move W1, 1
	175 Move X0, X22
	176 Move X2, X31
	177 Call String.get_Chars, X0, X1
	178 Move X8, [X24]
	179 Move W23, W0
	180 Move W9, [X8+224]
	181 Compare W9, 0
	182 JumpIfNotEqual {185}
	183 Move X0, X8
	184 Call 0x1C17DFC
	185 Move W0, W23
	186 Move X1, X31
	187 Call Char.IsDigit, X0
	188 Move TEMP, X0
	189 And TEMP, TEMP, 1
	190 Compare TEMP, 1
	191 JumpIfNotEqual {254}
	192 Move W1, 2
	193 Move X0, X22
	194 Move X2, X31
	195 Call String.get_Chars, X0, X1
	196 Move X8, [X24]
	197 Move W23, W0
	198 Move W9, [X8+224]
	199 Compare W9, 0
	200 JumpIfNotEqual {203}
	201 Move X0, X8
	202 Call 0x1C17DFC
	203 Move W0, W23
	204 Move X1, X31
	205 Call Char.IsDigit, X0
	206 Move TEMP, X0
	207 And TEMP, TEMP, 1
	208 Compare TEMP, 1
	209 JumpIfNotEqual {254}
	210 Move W1, 3
	211 Move X0, X22
	212 Move X2, X31
	213 Call String.get_Chars, X0, X1
	214 And W8, W0, 0xFFFF
	215 NotImplemented "Instruction CMP not yet implemented."
	216 Move W1, 3
	217 Move X0, X22
	218 Move X2, X31
	219 Call String.get_Chars, X0, X1
	220 And W8, W0, 0xFFFF
	221 NotImplemented "Instruction CMP not yet implemented."
	222 Move W2, 3
	223 Move X0, X22
	224 Move W1, W31
	225 Move X3, X31
	226 Call String.Substring, X0, X1, X2
	227 Move X23, X0
	228 Move [X21+40], X0
	229 Move X0, X31
	230 Call NumberFormatInfo.get_InvariantInfo
	231 Move X8, 0xA87000
	232 Move X8, [X8+2536]
	233 Move X24, X0
	234 Move X8, [X8]
	235 Move W9, [X8+224]
	236 Compare W9, 0
	237 JumpIfNotEqual {240}
	238 Move X0, X8
	239 Call 0x1C17DFC
	240 Move X0, X23
	241 Move X1, X24
	242 Move X2, X31
	243 Call Convert.ToInt16, X0, X1
	244 NotImplemented "Instruction SXTH not yet implemented."
	245 Move W1, 3
	246 Move X0, X22
	247 Move X2, X31
	248 Move [X21+20], W8
	249 Call String.get_Chars, X0, X1
	250 And W8, W0, 0xFFFF
	251 NotImplemented "Instruction CMP not yet implemented."
	252 Move W8, 1
	253 Move [X21+16], W8
	254 Move W0, W31
	255 Move W8, [X20]
	256 Move [X19], W8
	257 Move W0, 1
	258 Move X20, [X31+48]
	259 Move X19, [X31+56]
	260 Move X22, [X31+32]
	261 Move X21, [X31+40]
	262 Move X24, [X31+16]
	263 Move X23, [X31+24]
	264 Move X30, [X31+64]
	265 Move X25, [X31+72]
	266 Return X0
	267 Call 0x1C17F20
	268 Call 0x1C17F28
	269 Call 0x1C17F44
	270 Move X1, X31
	271 Call 0x1C17DEC

Method: System.Net.TriState IsFtpDataStreamWriteable()

Disassembly:
	0x03672980 B 0x367298C
	0x03672984 B 0x367298C
	0x03672988 B 0x367298C
	0x0367298C MOV X19, X0
	0x03672990 CMP W1, 0x1
	0x03672994 B.NE 0x36729C8
	0x03672998 MOV X0, X19
	0x0367299C BL 0x3EB1AD0
	0x036729A0 LDR X20, [X0]
	0x036729A4 BL 0x3EB1AE0
	0x036729A8 CBZ X21, 0x36729C4
	0x036729AC MOV X0, X21
	0x036729B0 MOV X1, X31
	0x036729B4 BL 0x36AC3C8
	0x036729B8 CBNZ X20, 0x36729D0
	0x036729BC MOV W0, W31
	0x036729C0 B 0x36724EC
	0x036729C4 BL 0x1C16F20
	0x036729C8 MOV X20, X31
	0x036729CC B 0x36729DC
	0x036729D0 MOV X0, X20
	0x036729D4 BL 0x1C16F18
	0x036729D8 MOV X19, X0
	0x036729DC CBNZ X21, 0x36729E4
	0x036729E0 BL 0x1C16F20
	0x036729E4 MOV X0, X21
	0x036729E8 MOV X1, X31
	0x036729EC BL 0x36AC3C8
	0x036729F0 CBZ X20, 0x3672A84
	0x036729F4 MOV X0, X20
	0x036729F8 BL 0x1C16F18
	0x036729FC B 0x3672A00
	0x03672A00 MOV X19, X0
	0x03672A04 CMP W1, 0x1
	0x03672A08 B.NE 0x3672A84
	0x03672A0C MOV X0, X19
	0x03672A10 BL 0x3EB1AD0
	0x03672A14 MOV X19, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xD6F000
	005 Move W8, [X20+1940]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xACC000
	012 Move X0, [X0+2080]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+1940], W8
	016 Move X19, [X19+64]
	017 Compare X19, 0
	018 JumpIfEqual {24}
	019 Move X8, 0xACC000
	020 Move X8, [X8+2080]
	021 Move X9, [X19]
	022 Move X8, [X8]
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Move TEMP, 0
	025 Not TEMP
	026 Move W0, TEMP
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X30, [X31+32]
	030 Return X0
	031 Move X0, [X19+56]
	032 Compare X0, 0
	033 JumpIfEqual {51}
	034 Move X1, X31
	035 Call FtpMethodInfo.get_IsUpload, X0
	036 Move TEMP, X0
	037 And TEMP, TEMP, 1
	038 Compare TEMP, 1
	039 JumpIfNotEqual {41}
	040 Move W0, 1
	041 Move X0, [X19+56]
	042 Compare X0, 0
	043 JumpIfEqual {51}
	044 Move X1, X31
	045 Call FtpMethodInfo.get_IsDownload, X0
	046 Move TEMP, X0
	047 And TEMP, TEMP, 1
	048 Compare TEMP, 1
	049 JumpIfNotEqual {24}
	050 Move W0, W31
	051 Call 0x1C17F20

Method: System.Void .cctor()

Disassembly:
	0x036762FC LDUR X10, [X10 - 0x8]
	0x03676300 CMP X10, X9
	0x03676304 B.NE 0x3676318
	0x03676308 MOV X0, X20
	0x0367630C MOV X1, X31
	0x03676310 BL 0x32C28DC
	0x03676314 LDR X8, [X20]
	0x03676318 ADRP X9, 0xA7D000
	0x0367631C LDR X9, [X9 + 0x758]
	0x03676320 LDR X8, [X8 + 0x40]
	0x03676324 LDR X1, [X9]
	0x03676328 LDR X9, [X1 + 0x40]
	0x0367632C CMP X8, X9
	0x03676330 B.NE 0x3676368
	0x03676334 MOV X0, X20
	0x03676338 BL 0x1C16E08
	0x0367633C LDR W20, [X0]
	0x03676340 MOV X0, X19
	0x03676344 BL 0x3675A78
	0x03676348 MOV W0, W20
	0x0367634C LDP X20, X19, [X31 + 0x10]
	0x03676350 LDP X30, X21, [X31], #0x20
	0x03676354 RET
	0x03676358 MOV X0, X20
	0x0367635C BL 0x1C171E0
	0x03676360 BL 0x1C16F20
	0x03676364 BL 0x1C16F20
	0x03676368 MOV X0, X20
	0x0367636C BL 0x1C171E0
	0x03676370 B 0x367637C
	0x03676374 B 0x367637C
	0x03676378 B 0x367637C
	0x0367637C MOV X20, X0
	0x03676380 CMP W1, 0x1
	0x03676384 B.NE 0x36763AC
	0x03676388 MOV X0, X20
	0x0367638C BL 0x3EB1AD0
	0x03676390 LDR X21, [X0]
	0x03676394 BL 0x3EB1AE0
	0x03676398 MOV X0, X19
	0x0367639C BL 0x3675A78
	0x036763A0 CBNZ X21, 0x36763B4
	0x036763A4 MOV W20, W31
	0x036763A8 B 0x3676348
	0x036763AC MOV X21, X31
	0x036763B0 B 0x36763C0
	0x036763B4 MOV X0, X21
	0x036763B8 BL 0x1C16F18
	0x036763BC MOV X20, X0
	0x036763C0 MOV X0, X19
	0x036763C4 BL 0x3675A78
	0x036763C8 CBNZ X21, 0x36763D4
	0x036763CC MOV X0, X20
	0x036763D0 BL 0x1D2C690
	0x036763D4 MOV X0, X21
	0x036763D8 BL 0x1C16F18
	0x036763DC BL 0x1990590
	0x036763E0 STR X30, [X31 - 0x40]!
	0x036763E4 STP X24, X23, [X31 + 0x10]
	0x036763E8 STP X22, X21, [X31 + 0x20]
	0x036763EC STP X20, X19, [X31 + 0x30]
	0x036763F0 MOV X20, X5
	0x036763F4 MOV X21, X4
	0x036763F8 MOV W22, W3
	0x036763FC MOV W23, W2
	0x03676400 MOV X24, X1
	0x03676404 MOV X19, X0
	0x03676408 BL 0x3675A78
	0x0367640C LDR X0, [X19 + 0x30]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0xD6B000
	009 Move X22, 0xAA6000
	010 Move X19, 0xAC8000
	011 Move X20, 0xAC8000
	012 Move X23, 0xAC8000
	013 Move X21, 0xAC8000
	014 Move W8, [X24+1941]
	015 Move X22, [X22+1824]
	016 Move X19, [X19+2264]
	017 Move X20, [X20+2248]
	018 Move X23, [X23+2840]
	019 Move X21, [X21+2848]
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {41}
	024 Move X0, 0xAA6000
	025 Move X0, [X0+1824]
	026 Call 0x1C17CF4
	027 Move X0, 0xAC8000
	028 Move X0, [X0+2264]
	029 Call 0x1C17CF4
	030 Move X0, 0xAC8000
	031 Move X0, [X0+2840]
	032 Call 0x1C17CF4
	033 Move X0, 0xAC8000
	034 Move X0, [X0+2848]
	035 Call 0x1C17CF4
	036 Move X0, 0xAC8000
	037 Move X0, [X0+2248]
	038 Call 0x1C17CF4
	039 Move W8, 1
	040 Move [X24+1941], W8
	041 Move X0, [X22]
	042 Call 0x1C17F10
	043 Move X2, [X19]
	044 Move X1, X31
	045 Move X3, X31
	046 Move X19, X0
	047 Call AsyncCallback..ctor, X0, X1, X2
	048 Move X8, [X20]
	049 Move X8, [X8+184]
	050 Move [X8], X19
	051 Move X0, [X22]
	052 Call 0x1C17F10
	053 Move X2, [X23]
	054 Move X1, X31
	055 Move X3, X31
	056 Move X19, X0
	057 Call AsyncCallback..ctor, X0, X1, X2
	058 Move X8, [X20]
	059 Move X8, [X8+184]
	060 Move [X8+8], X19
	061 Move X0, [X22]
	062 Call 0x1C17F10
	063 Move X2, [X21]
	064 Move X1, X31
	065 Move X3, X31
	066 Move X19, X0
	067 Call AsyncCallback..ctor, X0, X1, X2
	068 Move X8, [X20]
	069 Move X22, [X31+32]
	070 Move X21, [X31+40]
	071 Move X24, [X31+16]
	072 Move X23, [X31+24]
	073 Move X8, [X8+184]
	074 Move [X8+16], X19
	075 Move X20, [X31+48]
	076 Move X19, [X31+56]
	077 Move X30, [X31+64]
	078 Return 

