Type: System.Net.WebRequestStream/<SetHeadersAsync>d__37

Method: System.Void MoveNext()

Disassembly:
	0x036B55DC LDR X0, [X0 + 0xA50]
	0x036B55E0 BL 0x1C16CF4
	0x036B55E4 ADRP X0, 0xA78000
	0x036B55E8 LDR X0, [X0 + 0x1E0]
	0x036B55EC BL 0x1C16CF4
	0x036B55F0 ADRP X0, 0xA78000
	0x036B55F4 LDR X0, [X0 + 0x1E8]
	0x036B55F8 BL 0x1C16CF4
	0x036B55FC ADRP X0, 0xA78000
	0x036B5600 LDR X0, [X0 + 0x1F0]
	0x036B5604 BL 0x1C16CF4
	0x036B5608 ADRP X0, 0xA47000
	0x036B560C LDR X0, [X0 + 0xC20]
	0x036B5610 BL 0x1C16CF4
	0x036B5614 ADRP X0, 0xA78000
	0x036B5618 LDR X0, [X0 + 0x1F8]
	0x036B561C BL 0x1C16CF4
	0x036B5620 ADRP X0, 0xA3F000
	0x036B5624 LDR X0, [X0 + 0x7B8]
	0x036B5628 BL 0x1C16CF4
	0x036B562C ADRP X0, 0xA8A000
	0x036B5630 LDR X0, [X0 + 0x468]
	0x036B5634 BL 0x1C16CF4
	0x036B5638 ADRP X0, 0xA89000
	0x036B563C LDR X0, [X0 + 0xA88]
	0x036B5640 BL 0x1C16CF4
	0x036B5644 MOVZ W8, 0x1
	0x036B5648 STRB W8, [X20 + 0x982]
	0x036B564C STP X31, X31, [X31 + 0x20]
	0x036B5650 STP X31, X31, [X31 + 0x10]
	0x036B5654 LDR W24, [X19]
	0x036B5658 ADRP X25, 0xA3F000
	0x036B565C LDR X20, [X19 + 0x20]
	0x036B5660 LDR X25, [X25 + 0x7B8]
	0x036B5664 CMP W24, 0x2
	0x036B5668 B.CC 0x36B570C
	0x036B566C ADRP X8, 0xA40000
	0x036B5670 LDR X8, [X8 + 0xA50]
	0x036B5674 LDR X0, [X8]
	0x036B5678 BL 0x1C16F10
	0x036B567C MOV X21, X0
	0x036B5680 MOV X1, X31
	0x036B5684 BL 0x33DFA8C
	0x036B5688 STR X21, [X19 + 0x28]
	0x036B568C CBZ X20, 0x36B5740
	0x036B5690 LDR X8, [X20]
	0x036B5694 LDR X1, [X8 + 0x240]
	0x036B5698 LDR X9, [X8 + 0x238]
	0x036B569C MOV X0, X20
	0x036B56A0 BLR X9
	0x036B56A4 MOV W1, W0
	0x036B56A8 CBZ X21, 0x36B5744
	0x036B56AC MOV X0, X21
	0x036B56B0 MOV X2, X31
	0x036B56B4 BL 0x33DFECC
	0x036B56B8 LDR X8, [X20]
	0x036B56BC LDR X1, [X8 + 0x240]
	0x036B56C0 LDR X9, [X8 + 0x238]
	0x036B56C4 MOV X0, X20
	0x036B56C8 BLR X9
	0x036B56CC MOV W21, W0
	0x036B56D0 LDR X0, [X19 + 0x28]
	0x036B56D4 CBZ X0, 0x36B5748
	0x036B56D8 MOV X1, X31
	0x036B56DC BL 0x33DFA08
	0x036B56E0 MOV X22, X0
	0x036B56E4 LDR X0, [X25]
	0x036B56E8 LDR W8, [X0 + 0xE0]
	0x036B56EC CBNZ W8, 0x36B56F4
	0x036B56F0 BL 0x1C16DFC
	0x036B56F4 MOV W0, W21
	0x036B56F8 MOV X1, X22
	0x036B56FC MOV X2, X31
	0x036B5700 BL 0x33F503C
	0x036B5704 STR X0, [X19 + 0x30]
	0x036B5708 B 0x36B576C
	0x036B570C CBZ W24, 0x36B5728
	0x036B5710 LDUR V0, [X19 + 0x48]
	0x036B5714 MOVN W24, 0x0
	0x036B5718 STR V0, [X31 + 0x1]
	0x036B571C STP X31, X31, [X19 + 0x48]
	0x036B5720 STR W24, [X19]
	0x036B5724 B 0x36B591C
	0x036B5728 LDUR V0, [X19 + 0x38]
	0x036B572C MOVN W24, 0x0
	0x036B5730 STR V0, [X31 + 0x2]
	0x036B5734 STP X31, X31, [X19 + 0x38]
	0x036B5738 STR W24, [X19]
	0x036B573C B 0x36B5870
	0x036B5740 BL 0x1C16F20
	0x036B5744 BL 0x1C16F20
	0x036B5748 BL 0x1C16F20
	0x036B574C B 0x36B5AEC
	0x036B5750 B 0x36B5AEC
	0x036B5754 B 0x36B5AEC
	0x036B5758 B 0x36B5AEC
	0x036B575C B 0x36B5AEC
	0x036B5760 B 0x36B5AEC
	0x036B5764 B 0x36B5AB4
	0x036B5768 B 0x36B5AEC
	0x036B576C ADRP X8, 0xA89000
	0x036B5770 LDR X8, [X8 + 0xA88]
	0x036B5774 LDR X0, [X8]
	0x036B5778 BL 0x1C16F10
	0x036B577C MOV X21, X0
	0x036B5780 BL 0x36A97D4
	0x036B5784 CBZ X20, 0x36B5A44
	0x036B5788 ADD X0, X20, 0x68
	0x036B578C MOV X1, X21
	0x036B5790 MOV X2, X31
	0x036B5794 BL 0x1C24138
	0x036B5798 CBZ X0, 0x36B58DC
	0x036B579C ADRP X8, 0xA8A000
	0x036B57A0 LDR X8, [X8 + 0x468]
	0x036B57A4 LDR X1, [X8]
	0x036B57A8 BL 0x2851004
	0x036B57AC ADRP X8, 0xA47000
	0x036B57B0 LDR X8, [X8 + 0xC20]
	0x036B57B4 MOV X22, X0
	0x036B57B8 LDR X0, [X8]
	0x036B57BC MOVZ W1, 0x2
	0x036B57C0 BL 0x1C16D6C
	0x036B57C4 MOV X21, X0
	0x036B57C8 CBZ X0, 0x36B5A50
	0x036B57CC LDR X23, [X19 + 0x30]
	0x036B57D0 CBZ X23, 0x36B57E8
	0x036B57D4 LDR X8, [X21]
	0x036B57D8 LDR X1, [X8 + 0x40]
	0x036B57DC MOV X0, X23
	0x036B57E0 BL 0x1C16E00
	0x036B57E4 CBZ X0, 0x36B5A58
	0x036B57E8 LDR W8, [X21 + 0x18]
	0x036B57EC CBZ W8, 0x36B5A54
	0x036B57F0 STR X23, [X21 + 0x20]
	0x036B57F4 CBZ X22, 0x36B5810
	0x036B57F8 LDR X8, [X21]
	0x036B57FC LDR X1, [X8 + 0x40]
	0x036B5800 MOV X0, X22
	0x036B5804 BL 0x1C16E00
	0x036B5808 CBZ X0, 0x36B5A64
	0x036B580C LDR W8, [X21 + 0x18]
	0x036B5810 CMP W8, 0x1
	0x036B5814 B.LS 0x36B5A48
	0x036B5818 STR X22, [X21 + 0x28]
	0x036B581C LDR X0, [X25]
	0x036B5820 LDR W8, [X0 + 0xE0]
	0x036B5824 CBNZ W8, 0x36B582C
	0x036B5828 BL 0x1C16DFC
	0x036B582C MOV X0, X21
	0x036B5830 MOV X1, X31
	0x036B5834 BL 0x33F6194
	0x036B5838 CBZ X0, 0x36B5A4C
	0x036B583C ADRP X8, 0xA78000
	0x036B5840 LDR X8, [X8 + 0x1F8]
	0x036B5844 LDR X2, [X8]
	0x036B5848 MOV W1, W31
	0x036B584C BL 0x269F5D4
	0x036B5850 ADRP X8, 0xA78000
	0x036B5854 LDR X8, [X8 + 0x1F0]
	0x036B5858 STP X0, X1, [X31 + 0x20]
	0x036B585C LDR X8, [X8]
	0x036B5860 ADD X0, X31, 0x20
	0x036B5864 MOV X1, X8
	0x036B5868 BL 0x2998B64
	0x036B586C TBZ X0, 0x0, 0x36B59A4
	0x036B5870 ADRP X8, 0xA78000
	0x036B5874 LDR X8, [X8 + 0x1E8]
	0x036B5878 ADD X0, X31, 0x20
	0x036B587C LDR X1, [X8]
	0x036B5880 BL 0x2998BB0
	0x036B5884 LDR X8, [X19 + 0x30]
	0x036B5888 CMP X0, X8
	0x036B588C B.NE 0x36B576C
	0x036B5890 ADRP X0, 0xA69000
	0x036B5894 LDR X0, [X0 + 0x330]
	0x036B5898 BL 0x1C16D08
	0x036B589C BL 0x1C16F10
	0x036B58A0 MOV X21, X0
	0x036B58A4 ADRP X0, 0xA69000
	0x036B58A8 LDR X0, [X0 + 0x338]
	0x036B58AC BL 0x1C16D08
	0x036B58B0 MOV X1, X0
	0x036B58B4 MOVZ W2, 0xE
	0x036B58B8 MOV X0, X21
	0x036B58BC MOV X3, X31
	0x036B58C0 BL 0x367A0D4
	0x036B58C4 ADRP X0, 0xA8A000
	0x036B58C8 LDR X0, [X0 + 0x470]
	0x036B58CC BL 0x1C16D08
	0x036B58D0 MOV X1, X0
	0x036B58D4 MOV X0, X21
	0x036B58D8 BL 0x1C16DEC
	0x036B58DC LDR X0, [X19 + 0x28]
	0x036B58E0 CBZ X0, 0x36B5A78
	0x036B58E4 MOV X1, X31
	0x036B58E8 BL 0x33DFA08
	0x036B58EC MOV X1, X0
	0x036B58F0 MOV X0, X20
	0x036B58F4 BL 0x36B2EA0
	0x036B58F8 CBZ X0, 0x36B5A7C
	0x036B58FC MOV W1, W31
	0x036B5900 MOV X2, X31
	0x036B5904 BL 0x33ED3A0
	0x036B5908 STP X0, X1, [X31 + 0x10]
	0x036B590C ADD X0, X31, 0x10
	0x036B5910 MOV X1, X31
	0x036B5914 BL 0x32C40D4
	0x036B5918 TBZ X0, 0x0, 0x36B59E8
	0x036B591C ADD X0, X31, 0x10
	0x036B5920 MOV X1, X31
	0x036B5924 BL 0x32C40F0
	0x036B5928 MOV X21, X31
	0x036B592C STR X31, [X19 + 0x30]
	0x036B5930 MOVZ W22, 0xE
	0x036B5934 TBZ X24, 0x1F, 0x36B5960
	0x036B5938 CBZ X20, 0x36B5A80
	0x036B593C STR X31, [X20 + 0x68]
	0x036B5940 LDR X0, [X19 + 0x28]
	0x036B5944 CBZ X0, 0x36B5A84
	0x036B5948 MOV X1, X31
	0x036B594C BL 0x33DFCF8
	0x036B5950 LDR X0, [X19 + 0x28]
	0x036B5954 CBZ X0, 0x36B5A88
	0x036B5958 MOV X1, X31
	0x036B595C BL 0x33E01CC
	0x036B5960 CBNZ X21, 0x36B5A70
	0x036B5964 CBZ W22, 0x36B5970
	0x036B5968 CMP W22, 0xE
	0x036B596C B.NE 0x36B5A2C
	0x036B5970 MOVN W8, 0x1
	0x036B5974 STR X31, [X19 + 0x28]
	0x036B5978 STR W8, [X19], #0x8
	0x036B597C ADRP X8, 0xA41000
	0x036B5980 LDR X8, [X8 + 0x280]
	0x036B5984 LDR X0, [X8]
	0x036B5988 LDR W8, [X0 + 0xE0]
	0x036B598C CBNZ W8, 0x36B5994
	0x036B5990 BL 0x1C16DFC
	0x036B5994 MOV X0, X19
	0x036B5998 MOV X1, X31
	0x036B599C BL 0x32C4864
	0x036B59A0 B 0x36B5A2C
	0x036B59A4 STR W31, [X19]
	0x036B59A8 LDR V0, [X31 + 0x2]
	0x036B59AC ADRP X8, 0xA41000
	0x036B59B0 STUR V0, [X19 + 0x38]
	0x036B59B4 LDR X8, [X8 + 0x280]
	0x036B59B8 LDR X0, [X8]
	0x036B59BC LDR W8, [X0 + 0xE0]
	0x036B59C0 CBNZ W8, 0x36B59C8
	0x036B59C4 BL 0x1C16DFC
	0x036B59C8 ADRP X8, 0xA8A000
	0x036B59CC LDR X8, [X8 + 0x460]
	0x036B59D0 ADD X0, X19, 0x8
	0x036B59D4 LDR X3, [X8]
	0x036B59D8 ADD X1, X31, 0x20
	0x036B59DC MOV X2, X19
	0x036B59E0 BL 0x218584C
	0x036B59E4 B 0x36B5A2C
	0x036B59E8 MOVZ W8, 0x1
	0x036B59EC STR W8, [X19]
	0x036B59F0 LDR V0, [X31 + 0x1]
	0x036B59F4 ADRP X8, 0xA41000
	0x036B59F8 STUR V0, [X19 + 0x48]
	0x036B59FC LDR X8, [X8 + 0x280]
	0x036B5A00 LDR X0, [X8]
	0x036B5A04 LDR W8, [X0 + 0xE0]
	0x036B5A08 CBNZ W8, 0x36B5A10
	0x036B5A0C BL 0x1C16DFC
	0x036B5A10 ADRP X8, 0xA8A000
	0x036B5A14 LDR X8, [X8 + 0x458]
	0x036B5A18 ADD X0, X19, 0x8
	0x036B5A1C LDR X3, [X8]
	0x036B5A20 ADD X1, X31, 0x10
	0x036B5A24 MOV X2, X19
	0x036B5A28 BL 0x218C35C
	0x036B5A2C LDP X20, X19, [X31 + 0x60]
	0x036B5A30 LDP X22, X21, [X31 + 0x50]
	0x036B5A34 LDP X24, X23, [X31 + 0x40]
	0x036B5A38 LDP X30, X25, [X31 + 0x30]
	0x036B5A3C ADD X31, X31, 0x70
	0x036B5A40 RET
	0x036B5A44 BL 0x1C16F20
	0x036B5A48 BL 0x1C16F28
	0x036B5A4C BL 0x1C16F20
	0x036B5A50 BL 0x1C16F20
	0x036B5A54 BL 0x1C16F28
	0x036B5A58 BL 0x1C16F44
	0x036B5A5C MOV X1, X31
	0x036B5A60 BL 0x1C16DEC
	0x036B5A64 BL 0x1C16F44
	0x036B5A68 MOV X1, X31
	0x036B5A6C BL 0x1C16DEC
	0x036B5A70 MOV X0, X21
	0x036B5A74 BL 0x1C16F18
	0x036B5A78 BL 0x1C16F20
	0x036B5A7C BL 0x1C16F20
	0x036B5A80 BL 0x1C16F20
	0x036B5A84 BL 0x1C16F20
	0x036B5A88 BL 0x1C16F20
	0x036B5A8C MOVZ W24, 0x1
	0x036B5A90 B 0x36B5AEC
	0x036B5A94 B 0x36B5AEC
	0x036B5A98 B 0x36B5AEC
	0x036B5A9C B 0x36B5AEC
	0x036B5AA0 B 0x36B5AEC
	0x036B5AA4 MOV W24, W31
	0x036B5AA8 B 0x36B5AEC
	0x036B5AAC B 0x36B5AEC
	0x036B5AB0 B 0x36B5AEC
	0x036B5AB4 MOV W22, W1
	0x036B5AB8 STR X0, [X31 + 0x8]
	0x036B5ABC B 0x36B5B88
	0x036B5AC0 B 0x36B5AEC
	0x036B5AC4 B 0x36B5AEC
	0x036B5AC8 B 0x36B5AEC
	0x036B5ACC B 0x36B5AEC
	0x036B5AD0 B 0x36B5AEC
	0x036B5AD4 B 0x36B5AEC
	0x036B5AD8 B 0x36B5AEC
	0x036B5ADC B 0x36B5AEC
	0x036B5AE0 B 0x36B5AEC
	0x036B5AE4 B 0x36B5AEC
	0x036B5AE8 B 0x36B5AEC
	0x036B5AEC CMP W1, 0x1
	0x036B5AF0 B.NE 0x36B5B24
	0x036B5AF4 BL 0x3EB1AD0
	0x036B5AF8 MOV X21, X0
	0x036B5AFC ADRP X0, 0xA44000
	0x036B5B00 LDR X0, [X0 + 0xCC0]
	0x036B5B04 BL 0x1C16D08
	0x036B5B08 LDR X8, [X21]
	0x036B5B0C LDR X1, [X8]
	0x036B5B10 BL 0x1C17270
	0x036B5B14 TBZ X0, 0x0, 0x36B5BF8
	0x036B5B18 BL 0x3EB1AE0
	0x036B5B1C MOV X21, X31
	0x036B5B20 B 0x36B5930
	0x036B5B24 STR X0, [X31 + 0x8]
	0x036B5B28 MOVZ W8, 0x1
	0x036B5B2C CMP W1, W8
	0x036B5B30 B.NE 0x36B5B50
	0x036B5B34 LDR X0, [X31 + 0x8]
	0x036B5B38 BL 0x3EB1AD0
	0x036B5B3C LDR X21, [X0]
	0x036B5B40 BL 0x3EB1AE0
	0x036B5B44 MOV W22, W31
	0x036B5B48 TBZ X24, 0x1F, 0x36B5960
	0x036B5B4C B 0x36B5938
	0x036B5B50 MOV X22, X1
	0x036B5B54 MOV X21, X31
	0x036B5B58 TBZ X24, 0x1F, 0x36B5B84
	0x036B5B5C CBZ X20, 0x36B5C44
	0x036B5B60 STR X31, [X20 + 0x68]
	0x036B5B64 LDR X0, [X19 + 0x28]
	0x036B5B68 CBZ X0, 0x36B5C48
	0x036B5B6C MOV X1, X31
	0x036B5B70 BL 0x33DFCF8
	0x036B5B74 LDR X0, [X19 + 0x28]
	0x036B5B78 CBZ X0, 0x36B5C4C
	0x036B5B7C MOV X1, X31
	0x036B5B80 BL 0x33E01CC
	0x036B5B84 CBNZ X21, 0x36B5C3C
	0x036B5B88 CMP W22, 0x1
	0x036B5B8C B.NE 0x36B5C70
	0x036B5B90 LDR X0, [X31 + 0x8]
	0x036B5B94 BL 0x3EB1AD0
	0x036B5B98 MOV X20, X0
	0x036B5B9C ADRP X0, 0xA3E000
	0x036B5BA0 LDR X0, [X0 + 0x7D0]
	0x036B5BA4 BL 0x1C16D08
	0x036B5BA8 LDR X8, [X20]
	0x036B5BAC LDR X1, [X8]
	0x036B5BB0 BL 0x1C17270
	0x036B5BB4 TBZ X0, 0x0, 0x36B5C1C
	0x036B5BB8 LDR X20, [X20]
	0x036B5BBC BL 0x3EB1AE0
	0x036B5BC0 MOVN W8, 0x1
	0x036B5BC4 STR X31, [X19 + 0x28]
	0x036B5BC8 STR W8, [X19], #0x8
	0x036B5BCC ADRP X0, 0xA41000
	0x036B5BD0 LDR X0, [X0 + 0x280]
	0x036B5BD4 BL 0x1C16D08
	0x036B5BD8 LDR W8, [X0 + 0xE0]
	0x036B5BDC CBNZ W8, 0x36B5BE4
	0x036B5BE0 BL 0x1C16DFC
	0x036B5BE4 MOV X0, X19
	0x036B5BE8 MOV X1, X20
	0x036B5BEC MOV X2, X31
	0x036B5BF0 BL 0x32C4908
	0x036B5BF4 B 0x36B5A2C
	0x036B5BF8 MOVZ W0, 0x8
	0x036B5BFC BL 0x3EB1AF0
	0x036B5C00 LDR X8, [X21]
	0x036B5C04 STR X8, [X0]
	0x036B5C08 ADRP X1, 0x7FF000
	0x036B5C0C ADD X1, X1, 0xE58
	0x036B5C10 MOV X2, X31
	0x036B5C14 BL 0x3EB1B00
	0x036B5C18 B 0x36B5C3C
	0x036B5C1C MOVZ W0, 0x8
	0x036B5C20 BL 0x3EB1AF0
	0x036B5C24 LDR X8, [X20]
	0x036B5C28 STR X8, [X0]
	0x036B5C2C ADRP X1, 0x7FF000
	0x036B5C30 ADD X1, X1, 0xE58
	0x036B5C34 MOV X2, X31
	0x036B5C38 BL 0x3EB1B00
	0x036B5C3C MOV X0, X21
	0x036B5C40 BL 0x1C16F18
	0x036B5C44 BL 0x1C16F20
	0x036B5C48 BL 0x1C16F20
	0x036B5C4C BL 0x1C16F20
	0x036B5C50 MOV W22, W1
	0x036B5C54 STR X0, [X31 + 0x8]
	0x036B5C58 TBZ X24, 0x1F, 0x36B5B84
	0x036B5C5C B 0x36B5B5C
	0x036B5C60 STR X0, [X31 + 0x8]
	0x036B5C64 B 0x36B5B28
	0x036B5C68 STR X0, [X31 + 0x8]
	0x036B5C6C BL 0x3EB1AE0
	0x036B5C70 LDR X0, [X31 + 0x8]
	0x036B5C74 BL 0x1D2C690
	0x036B5C78 MOV X21, X1
	0x036B5C7C STR X0, [X31 + 0x8]
	0x036B5C80 BL 0x3EB1AE0
	0x036B5C84 MOV W1, W21
	0x036B5C88 B 0x36B5B28
	0x036B5C8C BL 0x1990590
	0x036B5C90 STR X30, [X31 - 0x30]!
	0x036B5C94 STP X22, X21, [X31 + 0x10]
	0x036B5C98 STP X20, X19, [X31 + 0x20]
	0x036B5C9C ADRP X21, 0xD2B000
	0x036B5CA0 ADRP X22, 0xA41000
	0x036B5CA4 LDRB W8, [X21 + 0x983]
	0x036B5CA8 LDR X22, [X22 + 0x280]
	0x036B5CAC MOV X19, X1
	0x036B5CB0 MOV X20, X0
	0x036B5CB4 TBNZ X8, 0x0, 0x36B5CCC
	0x036B5CB8 ADRP X0, 0xA41000
	0x036B5CBC LDR X0, [X0 + 0x280]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+32], X24
	004 Move [X31+40], X23
	005 Move [X31+48], X22
	006 Move [X31+56], X21
	007 Move [X31+64], X20
	008 Move [X31+72], X19
	009 Move X20, 0xD2C000
	010 Move W8, [X20+2428]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {57}
	016 Move X0, 0xA8B000
	017 Move X0, [X0+992]
	018 Call 0x1C17CF4
	019 Move X0, 0xA42000
	020 Move X0, [X0+640]
	021 Call 0x1C17CF4
	022 Move X0, 0xA8B000
	023 Move X0, [X0+1000]
	024 Call 0x1C17CF4
	025 Move X0, 0xA8B000
	026 Move X0, [X0+1008]
	027 Call 0x1C17CF4
	028 Move X0, 0xA8B000
	029 Move X0, [X0+1016]
	030 Call 0x1C17CF4
	031 Move X0, 0xA68000
	032 Move X0, [X0+1232]
	033 Call 0x1C17CF4
	034 Move X0, 0xA86000
	035 Move X0, [X0+536]
	036 Call 0x1C17CF4
	037 Move X0, 0xA86000
	038 Move X0, [X0+544]
	039 Call 0x1C17CF4
	040 Move X0, 0xA82000
	041 Move X0, [X0+2824]
	042 Call 0x1C17CF4
	043 Move X0, 0xA86000
	044 Move X0, [X0+552]
	045 Call 0x1C17CF4
	046 Move X0, 0xA8B000
	047 Move X0, [X0+1024]
	048 Call 0x1C17CF4
	049 Move X0, 0xA8B000
	050 Move X0, [X0+1032]
	051 Call 0x1C17CF4
	052 Move X0, 0xA8B000
	053 Move X0, [X0+1040]
	054 Call 0x1C17CF4
	055 Move W8, 1
	056 Move [X20+2428], W8
	057 Move [X31], X31
	058 Move [X31+8], X31
	059 Move X23, 0xA42000
	060 Move W8, [X19]
	061 Move X20, [X19+32]
	062 Move X23, [X23+640]
	063 Compare W8, 0
	064 JumpIfEqual {205}
	065 Compare X20, 0
	066 JumpIfEqual {347}
	067 Move X0, [X20+80]
	068 Compare X0, 0
	069 JumpIfEqual {348}
	070 Move X1, [X19+40]
	071 Call WebOperation.ThrowIfClosedOrDisposed, X0, X1
	072 Move W8, [X20+128]
	073 Compare W8, 0
	074 JumpIfNotEqual {311}
	075 Move X0, [X20+64]
	076 Compare X0, 0
	077 JumpIfEqual {351}
	078 Move X8, [X0]
	079 Move X9, [X8+440]
	080 Move X1, [X8+448]
	081 NotImplemented "Instruction BLR not yet implemented."
	082 Move X8, 0xA68000
	083 Move X8, [X8+1232]
	084 Move X21, X0
	085 Move X1, [X8]
	086 Move X2, X31
	087 Call String.op_Equality, X0, X1
	088 Move TEMP, X0
	089 And TEMP, TEMP, 1
	090 Compare TEMP, 1
	091 JumpIfEqual {112}
	092 Move X8, 0xA86000
	093 Move X8, [X8+536]
	094 Move X1, [X8]
	095 Move X0, X21
	096 Move X2, X31
	097 Call String.op_Equality, X0, X1
	098 Move TEMP, X0
	099 And TEMP, TEMP, 1
	100 Compare TEMP, 1
	101 JumpIfEqual {112}
	102 Move X8, 0xA82000
	103 Move X8, [X8+2824]
	104 Move X1, [X8]
	105 Move X0, X21
	106 Move X2, X31
	107 Call String.op_Equality, X0, X1
	108 Move TEMP, X0
	109 And TEMP, TEMP, 1
	110 Compare TEMP, 1
	111 JumpIfNotEqual {332}
	112 Move W22, 1
	113 Move X8, 0xA8B000
	114 Move X8, [X8+1040]
	115 Move X1, [X8]
	116 Move X0, X21
	117 Move X2, X31
	118 Call String.op_Equality, X0, X1
	119 Move TEMP, X0
	120 And TEMP, TEMP, 1
	121 Compare TEMP, 1
	122 JumpIfEqual {173}
	123 Move X8, 0xA8B000
	124 Move X8, [X8+1000]
	125 Move X1, [X8]
	126 Move X0, X21
	127 Move X2, X31
	128 Call String.op_Equality, X0, X1
	129 Move TEMP, X0
	130 And TEMP, TEMP, 1
	131 Compare TEMP, 1
	132 JumpIfEqual {173}
	133 Move X8, 0xA86000
	134 Move X8, [X8+552]
	135 Move X1, [X8]
	136 Move X0, X21
	137 Move X2, X31
	138 Call String.op_Equality, X0, X1
	139 Move TEMP, X0
	140 And TEMP, TEMP, 1
	141 Compare TEMP, 1
	142 JumpIfEqual {173}
	143 Move X8, 0xA8B000
	144 Move X8, [X8+1032]
	145 Move X1, [X8]
	146 Move X0, X21
	147 Move X2, X31
	148 Call String.op_Equality, X0, X1
	149 Move TEMP, X0
	150 And TEMP, TEMP, 1
	151 Compare TEMP, 1
	152 JumpIfEqual {173}
	153 Move X8, 0xA8B000
	154 Move X8, [X8+1016]
	155 Move X1, [X8]
	156 Move X0, X21
	157 Move X2, X31
	158 Call String.op_Equality, X0, X1
	159 Move TEMP, X0
	160 And TEMP, TEMP, 1
	161 Compare TEMP, 1
	162 JumpIfEqual {173}
	163 Move X8, 0xA8B000
	164 Move X8, [X8+1024]
	165 Move X1, [X8]
	166 Move X0, X21
	167 Move X2, X31
	168 Call String.op_Equality, X0, X1
	169 Move TEMP, X0
	170 And TEMP, TEMP, 1
	171 Compare TEMP, 1
	172 JumpIfNotEqual {340}
	173 Move W21, 1
	174 Move X8, [X20+80]
	175 Compare X8, 0
	176 JumpIfEqual {352}
	177 Move W9, [X8+48]
	178 Move W10, [X19+48]
	179 NotImplemented "Instruction CMP not yet implemented."
	180 NotImplemented "Instruction CSET not yet implemented."
	181 Or W22, W22, W9
	182 Compare W10, 0
	183 JumpIfEqual {232}
	184 Move TEMP, X22
	185 And TEMP, TEMP, 1
	186 Compare TEMP, 1
	187 JumpIfEqual {236}
	188 Move X9, [X8+40]
	189 Compare X9, 0
	190 JumpIfNotEqual {194}
	191 Move X9, [X20+88]
	192 Compare X9, 0
	193 JumpIfEqual {237}
	194 Move X24, [X20+64]
	195 Move X0, X20
	196 Call WebRequestStream.get_WriteBufferLength, X0
	197 Compare X24, 0
	198 JumpIfEqual {358}
	199 Move X8, W0
	200 Move [X24+80], X8
	201 Move X8, [X20+80]
	202 Compare X8, 0
	203 JumpIfNotEqual {237}
	204 Call 0x1C17F20
	205 NotImplemented "Instruction LDUR not yet implemented."
	206 Move TEMP, 0
	207 Not TEMP
	208 Move W8, TEMP
	209 Move [X31], V0
	210 Move [X19+56], X31
	211 Move [X19+64], X31
	212 Move [X19], W8
	213 Add X0, X31, 0
	214 Move X1, X31
	215 Call ConfiguredTaskAwaiter.GetResult, X0
	216 Compare X20, 0
	217 JumpIfEqual {349}
	218 Move X0, [X20+64]
	219 Compare X0, 0
	220 JumpIfEqual {350}
	221 Move X8, [X0]
	222 Move X1, [X8+528]
	223 Move X9, [X8+520]
	224 NotImplemented "Instruction BLR not yet implemented."
	225 Compare X0, 0
	226 JumpIfNotEqual {311}
	227 Move W8, [X20+98]
	228 Compare W8, 0
	229 JumpIfNotEqual {311}
	230 Move W8, 1
	231 Move [X20+96], W8
	232 Move TEMP, X22
	233 And TEMP, TEMP, 1
	234 Compare TEMP, 1
	235 JumpIfNotEqual {237}
	236 Move W8, W31
	237 Move X8, [X8+40]
	238 Compare X8, 0
	239 JumpIfNotEqual {243}
	240 Move X8, [X20+88]
	241 Compare X8, 0
	242 JumpIfEqual {339}
	243 Move X0, [X20+64]
	244 Compare X0, 0
	245 JumpIfEqual {357}
	246 Move X8, [X0]
	247 Move X1, [X8+528]
	248 Move X9, [X8+520]
	249 NotImplemented "Instruction BLR not yet implemented."
	250 Move X8, X0
	251 ShiftRight X8, 63
	252 And X8, X8, 0x7FFFFFFF
	253 Xor W8, W8, 1
	254 Move W9, [X20+98]
	255 And W10, W22, 1
	256 Or W10, W21, W10
	257 Or W8, W10, W8
	258 Or W8, W8, W9
	259 Compare W8, 0
	260 JumpIfEqual {311}
	261 Move X0, [X20+64]
	262 Move W8, 1
	263 Move [X20+128], W8
	264 Compare X0, 0
	265 JumpIfEqual {353}
	266 Move X1, X31
	267 Call HttpWebRequest.GetRequestHeaders, X0
	268 Move X1, X0
	269 Move [X20+120], X1
	270 Compare X1, 0
	271 JumpIfEqual {354}
	272 Move X0, [X20+144]
	273 Compare X0, 0
	274 JumpIfEqual {355}
	275 Move X8, [X0]
	276 Move X4, [X19+40]
	277 Move W3, [X1+24]
	278 Move X9, [X8+792]
	279 Move X5, [X8+800]
	280 Move W2, W31
	281 NotImplemented "Instruction BLR not yet implemented."
	282 Compare X0, 0
	283 JumpIfEqual {356}
	284 Move W1, W31
	285 Move X2, X31
	286 Call Task.ConfigureAwait, X0, X1
	287 Move [X31], X0
	288 Move [X31+8], X1
	289 Add X0, X31, 0
	290 Move X1, X31
	291 Call ConfiguredTaskAwaiter.get_IsCompleted, X0
	292 Move TEMP, X0
	293 And TEMP, TEMP, 1
	294 Compare TEMP, 1
	295 JumpIfEqual {213}
	296 Move [X19], W31
	297 Move V0, [X31]
	298 Move [X19+56], V0
	299 Move X0, [X23]
	300 Move W8, [X0+224]
	301 Compare W8, 0
	302 JumpIfNotEqual {304}
	303 Call 0x1C17DFC
	304 Move X8, 0xA8B000
	305 Move X8, [X8+992]
	306 Add X0, X19, 8
	307 Move X3, [X8]
	308 Add X1, X31, 0
	309 Move X2, X19
	310 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	311 Move TEMP, 1
	312 Not TEMP
	313 Move W8, TEMP
	314 Move [X19+8], W8
	315 Move X0, [X23]
	316 Move W8, [X0+224]
	317 Compare W8, 0
	318 JumpIfNotEqual {320}
	319 Call 0x1C17DFC
	320 Move X0, X19
	321 Move X1, X31
	322 Call AsyncTaskMethodBuilder.SetResult, X0
	323 Move X20, [X31+64]
	324 Move X19, [X31+72]
	325 Move X22, [X31+48]
	326 Move X21, [X31+56]
	327 Move X24, [X31+32]
	328 Move X23, [X31+40]
	329 Move X30, [X31+16]
	330 Add X31, X31, 80
	331 Return 
	332 Move X8, 0xA86000
	333 Move X8, [X8+544]
	334 Move X1, [X8]
	335 Move X0, X21
	336 Move X2, X31
	337 Call String.op_Equality, X0, X1
	338 Move W22, W0
	339 Move W8, 1
	340 Move X8, 0xA8B000
	341 Move X8, [X8+1008]
	342 Move X1, [X8]
	343 Move X0, X21
	344 Move X2, X31
	345 Call String.op_Equality, X0, X1
	346 And W21, W0, 1
	347 Call 0x1C17F20
	348 Call 0x1C17F20
	349 Call 0x1C17F20
	350 Call 0x1C17F20
	351 Call 0x1C17F20
	352 Call 0x1C17F20
	353 Call 0x1C17F20
	354 Call 0x1C17F20
	355 Call 0x1C17F20
	356 Call 0x1C17F20
	357 Call 0x1C17F20
	358 Call 0x1C17F20
	359 Move X20, X1
	360 Move X21, X0
	361 NotImplemented "Instruction CMP not yet implemented."
	362 Move X0, X21
	363 Call 0x3EB2AD0
	364 Move X20, X0
	365 Move X0, 0xA3F000
	366 Move X0, [X0+2000]
	367 Call 0x1C17D08
	368 Move X8, [X20]
	369 Move X1, [X8]
	370 Call 0x1C18270
	371 Move TEMP, X0
	372 And TEMP, TEMP, 1
	373 Compare TEMP, 1
	374 JumpIfNotEqual {405}
	375 Move X20, [X20]
	376 Call 0x3EB2AE0
	377 Move X0, 0xA6A000
	378 Move X0, [X0+816]
	379 Call 0x1C17D08
	380 Compare X20, 0
	381 JumpIfEqual {390}
	382 Move X8, [X20]
	383 Move W9, [X0+304]
	384 Move W10, [X8+304]
	385 NotImplemented "Instruction CMP not yet implemented."
	386 Move X8, [X8+200]
	387 Add X8, X8, X9
	388 NotImplemented "Instruction LDUR not yet implemented."
	389 NotImplemented "Instruction CMP not yet implemented."
	390 Move X0, 0xA47000
	391 Move X0, [X0+2216]
	392 Call 0x1C17D08
	393 Compare X20, 0
	394 JumpIfEqual {413}
	395 Move X8, [X20]
	396 Move W9, [X0+304]
	397 Move W10, [X8+304]
	398 NotImplemented "Instruction CMP not yet implemented."
	399 Move X8, [X8+200]
	400 Add X8, X8, X9
	401 NotImplemented "Instruction LDUR not yet implemented."
	402 NotImplemented "Instruction CMP not yet implemented."
	403 Move X0, X20
	404 Call 0x1C17F18
	405 Move W0, 8
	406 Call 0x3EB2AF0
	407 Move X8, [X20]
	408 Move [X0], X8
	409 Move X1, 0x800000
	410 Add X1, X1, 3672
	411 Move X2, X31
	412 Call 0x3EB2B00
	413 Move X0, 0xA6A000
	414 Move X0, [X0+816]
	415 Call 0x1C17D08
	416 Call 0x1C17F10
	417 Move X21, X0
	418 Move X0, 0xA8B000
	419 Move X0, [X0+1048]
	420 Call 0x1C17D08
	421 Move X1, X0
	422 Move W2, 4
	423 Move X0, X21
	424 Move W3, W31
	425 Move X4, X20
	426 Move X5, X31
	427 Call WebException..ctor, X0, X1, X2, X3, X4
	428 Move X0, 0xA8B000
	429 Move X0, [X0+1056]
	430 Call 0x1C17D08
	431 Move X1, X0
	432 Move X0, X21
	433 Call 0x1C17DEC
	434 Move X20, X1
	435 Move X21, X0
	436 Call 0x3EB2AE0
	437 Move X20, X1
	438 Move X21, X0
	439 NotImplemented "Instruction CMP not yet implemented."
	440 Move X0, X21
	441 Call 0x3EB2AD0
	442 Move X20, X0
	443 Move X0, 0xA3F000
	444 Move X0, [X0+2000]
	445 Call 0x1C17D08
	446 Move X8, [X20]
	447 Move X1, [X8]
	448 Call 0x1C18270
	449 Move TEMP, X0
	450 And TEMP, TEMP, 1
	451 Compare TEMP, 1
	452 JumpIfNotEqual {470}
	453 Move X20, [X20]
	454 Call 0x3EB2AE0
	455 Move TEMP, 1
	456 Not TEMP
	457 Move W8, TEMP
	458 Move [X19+8], W8
	459 Move X0, 0xA42000
	460 Move X0, [X0+640]
	461 Call 0x1C17D08
	462 Move W8, [X0+224]
	463 Compare W8, 0
	464 JumpIfNotEqual {466}
	465 Call 0x1C17DFC
	466 Move X0, X19
	467 Move X1, X20
	468 Move X2, X31
	469 Call AsyncTaskMethodBuilder.SetException, X0, X1
	470 Move W0, 8
	471 Call 0x3EB2AF0
	472 Move X8, [X20]
	473 Move [X0], X8
	474 Move X1, 0x800000
	475 Add X1, X1, 3672
	476 Move X2, X31
	477 Call 0x3EB2B00
	478 Move X21, X0
	479 Call 0x3EB2AE0
	480 Move X0, X21
	481 Call 0x1D2D690
	482 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x036B5CC0 BL 0x1C16CF4
	0x036B5CC4 MOVZ W8, 0x1
	0x036B5CC8 STRB W8, [X21 + 0x983]
	0x036B5CCC LDR X0, [X22]
	0x036B5CD0 LDR W8, [X0 + 0xE0]
	0x036B5CD4 CBNZ W8, 0x36B5CDC
	0x036B5CD8 BL 0x1C16DFC
	0x036B5CDC ADD X0, X20, 0x8
	0x036B5CE0 MOV X1, X19
	0x036B5CE4 LDP X20, X19, [X31 + 0x20]
	0x036B5CE8 LDP X22, X21, [X31 + 0x10]
	0x036B5CEC MOV X2, X31
	0x036B5CF0 LDR X30, [X31], #0x30
	0x036B5CF4 B 0x32C477C
	0x036B5CF8 LDR X0, [X0 + 0x80]
	0x036B5CFC RET
	0x036B5D00 LDR X0, [X0 + 0x88]
	0x036B5D04 RET
	0x036B5D08 STR X1, [X0 + 0x88]
	0x036B5D0C RET
	0x036B5D10 LDR W0, [X0 + 0x90]
	0x036B5D14 RET
	0x036B5D18 STR W1, [X0 + 0x90]
	0x036B5D1C RET
	0x036B5D20 LDR X0, [X0 + 0x98]
	0x036B5D24 RET

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xD2C000
	007 Move X22, 0xA42000
	008 Move W8, [X21+2429]
	009 Move X22, [X22+640]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xA42000
	017 Move X0, [X0+640]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2429], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Add X0, X20, 8
	027 Move X1, X19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X2, X31
	033 Move X30, [X31+48]
	034 Call AsyncTaskMethodBuilder.SetStateMachine, X0, X1
	035 Return 

