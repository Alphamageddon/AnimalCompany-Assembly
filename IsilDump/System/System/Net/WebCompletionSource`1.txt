Type: System.Net.WebCompletionSource`1

Method: System.Void .ctor(System.Boolean runAsync = True)

Disassembly:
	0x028516B4 LDUR V0, [X31 + 0x8]
	0x028516B8 LDR X8, [X31 + 0x18]
	0x028516BC MOVN W9, 0x0
	0x028516C0 STR W9, [X31 + 0x20]
	0x028516C4 STUR V0, [X31 + 0x28]
	0x028516C8 STR X8, [X31 + 0x38]
	0x028516CC LDR X8, [X19 + 0x20]
	0x028516D0 ADD X9, X31, 0x20
	0x028516D4 ORR X20, X9, 0xF
	0x028516D8 ADD X1, X31, 0x20
	0x028516DC LDR X8, [X8 + 0xC0]
	0x028516E0 MOV X0, X20
	0x028516E4 LDR X2, [X8 + 0x98]
	0x028516E8 LDR X8, [X2]
	0x028516EC BLR X8
	0x028516F0 LDR X8, [X19 + 0x20]
	0x028516F4 MOV X0, X20
	0x028516F8 LDR X8, [X8 + 0xC0]
	0x028516FC LDR X1, [X8 + 0xA8]
	0x02851700 LDR X8, [X1]
	0x02851704 BLR X8
	0x02851708 LDP X20, X19, [X31 + 0x70]
	0x0285170C LDR X30, [X31 + 0x60]
	0x02851710 ADD X31, X31, 0x80
	0x02851714 RET
	0x02851718 STP X30, X21, [X31 - 0x20]!
	0x0285171C STP X20, X19, [X31 + 0x10]
	0x02851720 MOV X20, X2
	0x02851724 MOV X2, X3

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move W21, W1
	006 Move X1, X31
	007 Move X20, X2
	008 Move X19, X0
	009 Call Object..ctor, X0
	010 Move X8, [X20+32]
	011 And W31, W21, 1
	012 Move W9, 64
	013 NotImplemented "Instruction CSEL not yet implemented."
	014 Move X8, [X8+192]
	015 Move X0, [X8]
	016 Move W8, [X0+309]
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {22}
	021 Call 0x1C5D684
	022 Call 0x1C17F10
	023 Move X8, [X20+32]
	024 Move W1, W21
	025 Move X20, X0
	026 Move X8, [X8+192]
	027 Move X2, [X8+8]
	028 Call TaskCompletionSource`1<Object>..ctor, X0, X1
	029 Compare X19, 0
	030 JumpIfEqual {37}
	031 Move [X19+16], X20
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X30, [X31+32]
	035 Move X21, [X31+40]
	036 Return 
	037 Call 0x1C17F20

Method: System.Net.WebCompletionSource`1/Result<T> get_CurrentResult()

Disassembly:
	0x02851728 MOV X3, X31
	0x0285172C MOV X19, X4

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Threading.Tasks.Task get_Task()

Disassembly:
	0x02851730 MOV X21, X0
	0x02851734 BL 0x3EAA554
	0x02851738 LDR X8, [X19 + 0x20]
	0x0285173C MOV X0, X20
	0x02851740 LDR X8, [X8 + 0xC0]
	0x02851744 LDR X1, [X8 + 0x8]
	0x02851748 BL 0x28517C0

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+16]
	003 Compare X8, 0
	004 JumpIfEqual {8}
	005 Move X0, [X8+16]
	006 Move X30, [X31+16]
	007 Return X0
	008 Call 0x1C17F20

Method: System.Boolean TrySetCompleted(T argument)

Disassembly:
	0x0285174C LDP X20, X19, [X31 + 0x10]
	0x02851750 STR X0, [X21 + 0x28]
	0x02851754 LDP X30, X21, [X31], #0x20
	0x02851758 RET
	0x0285175C STP X30, X21, [X31 - 0x20]!
	0x02851760 STP X20, X19, [X31 + 0x10]
	0x02851764 ADRP X21, 0x1B89000
	0x02851768 ADRP X20, 0x18A2000
	0x0285176C LDRB W8, [X21 + 0xAF5]
	0x02851770 LDR X20, [X20 + 0x6C0]
	0x02851774 MOV X19, X1
	0x02851778 TBNZ X8, 0x0, 0x2851790
	0x0285177C ADRP X0, 0x18A2000
	0x02851780 LDR X0, [X0 + 0x6C0]
	0x02851784 BL 0x1C16CF4
	0x02851788 MOVZ W8, 0x1
	0x0285178C STRB W8, [X21 + 0xAF5]
	0x02851790 LDR X8, [X19 + 0x20]
	0x02851794 LDR X0, [X20]
	0x02851798 LDR X8, [X8 + 0xC0]
	0x0285179C LDR W9, [X0 + 0xE0]
	0x028517A0 LDR X19, [X8 + 0x28]
	0x028517A4 CBNZ W9, 0x28517AC
	0x028517A8 BL 0x1C16DFC
	0x028517AC MOV X0, X19
	0x028517B0 LDP X20, X19, [X31 + 0x10]
	0x028517B4 MOV X1, X31
	0x028517B8 LDP X30, X21, [X31], #0x20
	0x028517BC B 0x338C698
	0x028517C0 STR X30, [X31 - 0x30]!
	0x028517C4 STP X22, X21, [X31 + 0x10]
	0x028517C8 STP X20, X19, [X31 + 0x20]
	0x028517CC LDR X8, [X1 + 0x20]
	0x028517D0 MOV X19, X1
	0x028517D4 MOV X20, X0
	0x028517D8 LDRB W9, [X8 + 0x135]
	0x028517DC TBNZ X9, 0x0, 0x28517EC
	0x028517E0 MOV X0, X8
	0x028517E4 BL 0x1C5C684
	0x028517E8 MOV X8, X0
	0x028517EC LDR X8, [X8 + 0xC0]
	0x028517F0 LDR X0, [X8 + 0x30]
	0x028517F4 LDRB W8, [X0 + 0x135]
	0x028517F8 TBNZ X8, 0x0, 0x2851800
	0x028517FC BL 0x1C5C684

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X8, [X3+32]
	008 Move X19, X3
	009 Move X21, X2
	010 Move X22, X1
	011 Move X8, [X8+192]
	012 Move X20, X0
	013 Move X8, [X8+24]
	014 Move W9, [X8+309]
	015 Move TEMP, X9
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {22}
	019 Move X0, X8
	020 Call 0x1C5D684
	021 Move X8, X0
	022 Move X0, X8
	023 Call 0x1C17F10
	024 Move X8, [X19+32]
	025 Move X1, X22
	026 Move X2, X21
	027 Move X23, X0
	028 Move X8, [X8+192]
	029 Move X3, [X8+56]
	030 Call 0x25CAB98, X0, X1
	031 Add X0, X20, 24
	032 Move X1, X23
	033 Move X2, X31
	034 Call 0x1C25138
	035 Compare X0, 0
	036 JumpIfEqual {45}
	037 Move X20, [X31+32]
	038 Move X19, [X31+40]
	039 Move X22, [X31+16]
	040 Move X21, [X31+24]
	041 Move W0, W31
	042 Move X30, [X31+48]
	043 Move X23, [X31+56]
	044 Return X0
	045 Move X0, [X20+16]
	046 Compare X0, 0
	047 JumpIfEqual {60}
	048 Move X8, [X19+32]
	049 Move X20, [X31+32]
	050 Move X19, [X31+40]
	051 Move X22, [X31+16]
	052 Move X21, [X31+24]
	053 Move X1, X23
	054 Move X8, [X8+192]
	055 Move X2, [X8+72]
	056 Move X30, [X31+48]
	057 Move X23, [X31+56]
	058 Call TaskCompletionSource`1<Object>.TrySetResult, X0, X1
	059 Return X0
	060 Call 0x1C17F20

Method: System.Boolean TrySetCompleted()

Disassembly:
	0x02851800 BL 0x1C16F10
	0x02851804 LDR X8, [X19 + 0x20]
	0x02851808 MOV X21, X0
	0x0285180C LDRB W9, [X8 + 0x135]
	0x02851810 TBNZ X9, 0x0, 0x2851820
	0x02851814 MOV X0, X8
	0x02851818 BL 0x1C5C684
	0x0285181C MOV X8, X0
	0x02851820 LDR X8, [X8 + 0xC0]
	0x02851824 MOV X0, X21
	0x02851828 LDR X1, [X8 + 0x38]
	0x0285182C BL 0x2379418
	0x02851830 CBZ X21, 0x2851A64
	0x02851834 STR X20, [X21 + 0x10]
	0x02851838 LDR X0, [X19 + 0x20]
	0x0285183C LDRB W8, [X0 + 0x135]
	0x02851840 TBNZ X8, 0x0, 0x2851848
	0x02851844 BL 0x1C5C684
	0x02851848 LDR X8, [X0 + 0xC0]
	0x0285184C CBZ X20, 0x2851890
	0x02851850 LDR X0, [X8 + 0x18]
	0x02851854 LDRB W8, [X0 + 0x135]
	0x02851858 TBNZ X8, 0x0, 0x2851860
	0x0285185C BL 0x1C5C684
	0x02851860 BL 0x1C16F10
	0x02851864 LDR X8, [X19 + 0x20]
	0x02851868 MOV X20, X0
	0x0285186C ADD X9, X8, 0x135
	0x02851870 LDRH W9, [X9]
	0x02851874 TBNZ X9, 0x0, 0x2851994
	0x02851878 MOV X0, X8
	0x0285187C BL 0x1C5C684
	0x02851880 LDR X8, [X19 + 0x20]
	0x02851884 ADD X9, X8, 0x135
	0x02851888 LDRH W9, [X9]
	0x0285188C B 0x2851998
	0x02851890 LDR X0, [X8 + 0x48]
	0x02851894 LDRB W8, [X0 + 0x135]
	0x02851898 TBNZ X8, 0x0, 0x28518A0
	0x0285189C BL 0x1C5C684

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X1+32]
	006 Move X19, X1
	007 Move X20, X0
	008 Move X8, [X8+192]
	009 Move X8, [X8+24]
	010 Move W9, [X8+309]
	011 Move TEMP, X9
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {18}
	015 Move X0, X8
	016 Call 0x1C5D684
	017 Move X8, X0
	018 Move X0, X8
	019 Call 0x1C17F10
	020 Move X8, [X19+32]
	021 Move W1, 1
	022 Move X2, X31
	023 Move X21, X0
	024 Move X8, [X8+192]
	025 Move X3, [X8+80]
	026 Call 0x25CABCC, X0, X1, X2
	027 Add X0, X20, 24
	028 Move X1, X21
	029 Move X2, X31
	030 Call 0x1C25138
	031 Compare X0, 0
	032 JumpIfEqual {39}
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move W0, W31
	036 Move X30, [X31+32]
	037 Move X21, [X31+40]
	038 Return X0
	039 Move X0, [X20+16]
	040 Compare X0, 0
	041 JumpIfEqual {52}
	042 Move X8, [X19+32]
	043 Move X20, [X31+16]
	044 Move X19, [X31+24]
	045 Move X1, X21
	046 Move X8, [X8+192]
	047 Move X2, [X8+72]
	048 Move X30, [X31+32]
	049 Move X21, [X31+40]
	050 Call TaskCompletionSource`1<Object>.TrySetResult, X0, X1
	051 Return X0
	052 Call 0x1C17F20

Method: System.Boolean TrySetCanceled()

Disassembly:
	0x028518A0 LDR W8, [X0 + 0xE0]
	0x028518A4 CBNZ W8, 0x28518AC
	0x028518A8 BL 0x1C16DFC
	0x028518AC LDR X0, [X19 + 0x20]
	0x028518B0 LDRB W8, [X0 + 0x135]
	0x028518B4 TBNZ X8, 0x0, 0x28518BC
	0x028518B8 BL 0x1C5C684
	0x028518BC LDR X8, [X0 + 0xC0]
	0x028518C0 LDR X0, [X8 + 0x48]
	0x028518C4 LDRB W8, [X0 + 0x135]
	0x028518C8 TBNZ X8, 0x0, 0x28518D0
	0x028518CC BL 0x1C5C684
	0x028518D0 LDR X8, [X0 + 0xB8]
	0x028518D4 LDR X20, [X8 + 0x8]
	0x028518D8 CBNZ X20, 0x28519C8
	0x028518DC LDR X0, [X19 + 0x20]
	0x028518E0 LDRB W8, [X0 + 0x135]
	0x028518E4 TBNZ X8, 0x0, 0x28518EC
	0x028518E8 BL 0x1C5C684
	0x028518EC LDR X8, [X0 + 0xC0]
	0x028518F0 LDR X0, [X8 + 0x48]
	0x028518F4 LDRB W8, [X0 + 0x135]
	0x028518F8 TBNZ X8, 0x0, 0x2851900
	0x028518FC BL 0x1C5C684
	0x02851900 LDR W8, [X0 + 0xE0]
	0x02851904 CBNZ W8, 0x285190C
	0x02851908 BL 0x1C16DFC
	0x0285190C LDR X0, [X19 + 0x20]
	0x02851910 LDRB W8, [X0 + 0x135]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x1B8A000
	007 Move X22, 0x18AB000
	008 Move W8, [X21+2802]
	009 Move X22, [X22+2216]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x18AB000
	017 Move X0, [X0+2216]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2802], W8
	021 Move X0, [X22]
	022 Call 0x1C17F10
	023 Move X1, X31
	024 Move X21, X0
	025 Call OperationCanceledException..ctor, X0
	026 Move X8, [X20+32]
	027 Move X0, X19
	028 Move X1, X21
	029 Move X20, [X31+32]
	030 Move X19, [X31+40]
	031 Move X8, [X8+192]
	032 Move X22, [X31+16]
	033 Move X21, [X31+24]
	034 Move X2, [X8+96]
	035 Move X30, [X31+48]

Method: System.Boolean TrySetCanceled(System.OperationCanceledException error)

Disassembly:
	0x02851914 TBNZ X8, 0x0, 0x285191C
	0x02851918 BL 0x1C5C684
	0x0285191C LDR X8, [X0 + 0xC0]
	0x02851920 LDR X0, [X8 + 0x48]
	0x02851924 LDRB W8, [X0 + 0x135]
	0x02851928 TBNZ X8, 0x0, 0x2851930
	0x0285192C BL 0x1C5C684
	0x02851930 LDR X8, [X19 + 0x20]
	0x02851934 LDR X9, [X0 + 0xB8]
	0x02851938 LDRB W10, [X8 + 0x135]
	0x0285193C LDR X21, [X9]
	0x02851940 TBNZ X10, 0x0, 0x2851950
	0x02851944 MOV X0, X8
	0x02851948 BL 0x1C5C684
	0x0285194C MOV X8, X0
	0x02851950 LDR X8, [X8 + 0xC0]
	0x02851954 LDR X0, [X8 + 0x18]
	0x02851958 LDRB W8, [X0 + 0x135]
	0x0285195C TBNZ X8, 0x0, 0x2851964
	0x02851960 BL 0x1C5C684
	0x02851964 BL 0x1C16F10
	0x02851968 LDR X8, [X19 + 0x20]
	0x0285196C MOV X20, X0
	0x02851970 ADD X9, X8, 0x135
	0x02851974 LDRH W9, [X9]
	0x02851978 TBNZ X9, 0x0, 0x28519DC
	0x0285197C MOV X0, X8
	0x02851980 BL 0x1C5C684
	0x02851984 LDR X8, [X19 + 0x20]
	0x02851988 ADD X9, X8, 0x135
	0x0285198C LDRH W9, [X9]
	0x02851990 B 0x28519E0
	0x02851994 MOV X0, X8
	0x02851998 LDR X10, [X0 + 0xC0]
	0x0285199C LDR X19, [X10 + 0x60]
	0x028519A0 TBNZ X9, 0x0, 0x28519B0
	0x028519A4 MOV X0, X8
	0x028519A8 BL 0x1C5C684
	0x028519AC MOV X8, X0
	0x028519B0 LDR X8, [X8 + 0xC0]
	0x028519B4 MOV X0, X20
	0x028519B8 MOV X1, X21
	0x028519BC MOV X2, X19
	0x028519C0 LDR X3, [X8 + 0x58]
	0x028519C4 BL 0x2D27AA8
	0x028519C8 MOV X0, X20
	0x028519CC LDP X20, X19, [X31 + 0x20]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, X0
	007 Move X0, X1
	008 Move X1, X31
	009 Move X19, X2
	010 Call ExceptionDispatchInfo.Capture, X0
	011 Move X8, [X19+32]
	012 Move X22, X0
	013 Move X8, [X8+192]
	014 Move X8, [X8+24]
	015 Move W9, [X8+309]
	016 Move TEMP, X9
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {23}
	020 Move X0, X8
	021 Call 0x1C5D684
	022 Move X8, X0
	023 Move X0, X8
	024 Call 0x1C17F10
	025 Move X8, [X19+32]
	026 Move W1, 2
	027 Move X2, X22
	028 Move X21, X0
	029 Move X8, [X8+192]
	030 Move X3, [X8+80]
	031 Call 0x25CABCC, X0, X1, X2
	032 Add X0, X20, 24
	033 Move X1, X21
	034 Move X2, X31
	035 Call 0x1C25138
	036 Compare X0, 0
	037 JumpIfEqual {45}
	038 Move X20, [X31+32]
	039 Move X19, [X31+40]
	040 Move X22, [X31+16]
	041 Move X21, [X31+24]
	042 Move W0, W31
	043 Move X30, [X31+48]
	044 Return X0
	045 Move X0, [X20+16]
	046 Compare X0, 0
	047 JumpIfEqual {59}
	048 Move X8, [X19+32]
	049 Move X1, X21
	050 Move X20, [X31+32]
	051 Move X19, [X31+40]
	052 Move X22, [X31+16]
	053 Move X21, [X31+24]
	054 Move X8, [X8+192]
	055 Move X2, [X8+72]
	056 Move X30, [X31+48]
	057 Call TaskCompletionSource`1<Object>.TrySetResult, X0, X1
	058 Return X0
	059 Call 0x1C17F20

Method: System.Boolean TrySetException(System.Exception error)

Disassembly:
	0x028519D0 LDP X22, X21, [X31 + 0x10]
	0x028519D4 LDR X30, [X31], #0x30
	0x028519D8 RET
	0x028519DC MOV X0, X8
	0x028519E0 LDR X10, [X0 + 0xC0]
	0x028519E4 LDR X22, [X10 + 0x50]
	0x028519E8 TBNZ X9, 0x0, 0x28519F8
	0x028519EC MOV X0, X8
	0x028519F0 BL 0x1C5C684
	0x028519F4 MOV X8, X0
	0x028519F8 LDR X8, [X8 + 0xC0]
	0x028519FC MOV X0, X20
	0x02851A00 MOV X1, X21
	0x02851A04 MOV X2, X22
	0x02851A08 LDR X3, [X8 + 0x58]
	0x02851A0C BL 0x2D27AA8
	0x02851A10 LDR X0, [X19 + 0x20]
	0x02851A14 LDRB W8, [X0 + 0x135]
	0x02851A18 TBNZ X8, 0x0, 0x2851A20
	0x02851A1C BL 0x1C5C684
	0x02851A20 LDR X8, [X0 + 0xC0]
	0x02851A24 LDR X0, [X8 + 0x48]
	0x02851A28 LDRB W8, [X0 + 0x135]
	0x02851A2C TBNZ X8, 0x0, 0x2851A34
	0x02851A30 BL 0x1C5C684
	0x02851A34 LDR X8, [X0 + 0xB8]
	0x02851A38 STR X20, [X8 + 0x8]
	0x02851A3C LDR X0, [X19 + 0x20]
	0x02851A40 LDRB W8, [X0 + 0x135]
	0x02851A44 TBNZ X8, 0x0, 0x2851A4C
	0x02851A48 BL 0x1C5C684
	0x02851A4C LDR X8, [X0 + 0xC0]
	0x02851A50 LDR X0, [X8 + 0x48]
	0x02851A54 LDRB W8, [X0 + 0x135]
	0x02851A58 TBNZ X8, 0x0, 0x28519C8
	0x02851A5C BL 0x1C5C684
	0x02851A60 B 0x28519C8
	0x02851A64 BL 0x1C16F20
	0x02851A68 STR X30, [X31 - 0x10]!
	0x02851A6C LDR X8, [X0 + 0x28]
	0x02851A70 CBZ X8, 0x2851A88
	0x02851A74 LDR X2, [X8 + 0x18]
	0x02851A78 LDR X0, [X8 + 0x40]
	0x02851A7C LDR X1, [X8 + 0x28]
	0x02851A80 LDR X30, [X31], #0x10
	0x02851A84 BR X2
	0x02851A88 BL 0x1C16F20

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, X0
	007 Move X0, X1
	008 Move X1, X31
	009 Move X19, X2
	010 Call ExceptionDispatchInfo.Capture, X0
	011 Move X8, [X19+32]
	012 Move X22, X0
	013 Move X8, [X8+192]
	014 Move X8, [X8+24]
	015 Move W9, [X8+309]
	016 Move TEMP, X9
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {23}
	020 Move X0, X8
	021 Call 0x1C5D684
	022 Move X8, X0
	023 Move X0, X8
	024 Call 0x1C17F10
	025 Move X8, [X19+32]
	026 Move W1, 3
	027 Move X2, X22
	028 Move X21, X0
	029 Move X8, [X8+192]
	030 Move X3, [X8+80]
	031 Call 0x25CABCC, X0, X1, X2
	032 Add X0, X20, 24
	033 Move X1, X21
	034 Move X2, X31
	035 Call 0x1C25138
	036 Compare X0, 0
	037 JumpIfEqual {45}
	038 Move X20, [X31+32]
	039 Move X19, [X31+40]
	040 Move X22, [X31+16]
	041 Move X21, [X31+24]
	042 Move W0, W31
	043 Move X30, [X31+48]
	044 Return X0
	045 Move X0, [X20+16]
	046 Compare X0, 0
	047 JumpIfEqual {59}
	048 Move X8, [X19+32]
	049 Move X1, X21
	050 Move X20, [X31+32]
	051 Move X19, [X31+40]
	052 Move X22, [X31+16]
	053 Move X21, [X31+24]
	054 Move X8, [X8+192]
	055 Move X2, [X8+72]
	056 Move X30, [X31+48]
	057 Call TaskCompletionSource`1<Object>.TrySetResult, X0, X1
	058 Return X0
	059 Call 0x1C17F20

Method: System.Void ThrowOnError()

Disassembly:
	0x02851A8C STP X30, X21, [X31 - 0x20]!
	0x02851A90 STP X20, X19, [X31 + 0x10]
	0x02851A94 MOV X20, X1
	0x02851A98 MOV X1, X31
	0x02851A9C MOV X19, X2
	0x02851AA0 MOV X21, X0
	0x02851AA4 BL 0x33BDD8C
	0x02851AA8 STP X20, X19, [X21 + 0x10]
	0x02851AAC LDP X20, X19, [X31 + 0x10]
	0x02851AB0 LDP X30, X21, [X31], #0x20
	0x02851AB4 RET
	0x02851AB8 RET
	0x02851ABC STP X30, X21, [X31 - 0x20]!
	0x02851AC0 STP X20, X19, [X31 + 0x10]
	0x02851AC4 ADRP X20, 0x1B89000
	0x02851AC8 ADRP X21, 0x18A2000
	0x02851ACC LDRB W8, [X20 + 0xAF6]
	0x02851AD0 LDR X21, [X21 + 0xA28]
	0x02851AD4 MOV X19, X1
	0x02851AD8 TBNZ X8, 0x0, 0x2851AF0
	0x02851ADC ADRP X0, 0x18A2000
	0x02851AE0 LDR X0, [X0 + 0xA28]
	0x02851AE4 BL 0x1C16CF4
	0x02851AE8 MOVZ W8, 0x1
	0x02851AEC STRB W8, [X20 + 0xAF6]
	0x02851AF0 LDR X0, [X21]
	0x02851AF4 LDR W8, [X0 + 0xE0]
	0x02851AF8 CBNZ W8, 0x2851B00
	0x02851AFC BL 0x1C16DFC
	0x02851B00 MOV X0, X19

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X0+16]
	005 Compare X8, 0
	006 JumpIfEqual {43}
	007 Move X20, X0
	008 Move X0, [X8+16]
	009 Compare X0, 0
	010 JumpIfEqual {43}
	011 Move X19, X1
	012 Move X1, X31
	013 Call Task.get_IsCompleted, X0
	014 Move TEMP, X0
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfNotEqual {39}
	018 Move X8, [X20+16]
	019 Compare X8, 0
	020 JumpIfEqual {43}
	021 Move X0, [X8+16]
	022 Compare X0, 0
	023 JumpIfEqual {43}
	024 Move X8, [X19+32]
	025 Move X8, [X8+192]
	026 Move X1, [X8+104]
	027 Call Task`1<Object>.get_Result, X0
	028 Compare X0, 0
	029 JumpIfEqual {43}
	030 Move X0, [X0+24]
	031 Compare X0, 0
	032 JumpIfEqual {39}
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move X1, X31
	036 Move X30, [X31+32]
	037 Call ExceptionDispatchInfo.Throw, X0
	038 Return 
	039 Move X20, [X31+16]
	040 Move X19, [X31+24]
	041 Move X30, [X31+32]
	042 Return 
	043 Call 0x1C17F20

Method: System.Threading.Tasks.Task`1<T> WaitForCompletion()

Disassembly:
	0x02851B04 LDP X20, X19, [X31 + 0x10]
	0x02851B08 MOV X1, X31
	0x02851B0C LDP X30, X21, [X31], #0x20
	0x02851B10 B 0x3C02C84
	0x02851B14 STP X30, X21, [X31 - 0x20]!
	0x02851B18 STP X20, X19, [X31 + 0x10]
	0x02851B1C LDR X8, [X0 + 0x10]
	0x02851B20 CBZ X8, 0x2851BE0
	0x02851B24 LDR X8, [X8 + 0x18]
	0x02851B28 CBZ X8, 0x2851BE0
	0x02851B2C MOV X21, X2
	0x02851B30 MOV X20, X0
	0x02851B34 LDR X9, [X8 + 0x18]
	0x02851B38 LDR X0, [X8 + 0x40]
	0x02851B3C LDR X2, [X8 + 0x28]
	0x02851B40 MOV X19, X1
	0x02851B44 BLR X9
	0x02851B48 TBZ X0, 0x0, 0x2851BB0
	0x02851B4C LDR X20, [X20 + 0x18]
	0x02851B50 CBZ X20, 0x2851BE0
	0x02851B54 LDR X8, [X21 + 0x20]
	0x02851B58 LDR X8, [X8 + 0xC0]
	0x02851B5C LDR X1, [X8 + 0x10]
	0x02851B60 LDRB W8, [X1 + 0x135]
	0x02851B64 TBNZ X8, 0x0, 0x2851B74
	0x02851B68 MOV X0, X1
	0x02851B6C BL 0x1C5C684
	0x02851B70 MOV X1, X0
	0x02851B74 LDR X8, [X20]
	0x02851B78 LDRH W9, [X8 + 0x12E]
	0x02851B7C CBZ X9, 0x2851BA0
	0x02851B80 LDR X10, [X8 + 0xB0]
	0x02851B84 ADD X10, X10, 0x8
	0x02851B88 LDUR X11, [X10 - 0x8]
	0x02851B8C CMP X11, X1
	0x02851B90 B.EQ 0x2851BBC
	0x02851B94 SUBS X9, X9, 0x1
	0x02851B98 ADD X10, X10, 0x10
	0x02851B9C B.NE 0x2851B88
	0x02851BA0 MOV X0, X20
	0x02851BA4 MOV W2, W31
	0x02851BA8 BL 0x1C5C788
	0x02851BAC B 0x2851BC8
	0x02851BB0 LDP X20, X19, [X31 + 0x10]
	0x02851BB4 LDP X30, X21, [X31], #0x20
	0x02851BB8 RET

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+96], X30
	003 Move [X31+112], X20
	004 Move [X31+120], X19
	005 NotImplemented "Instruction MOVI not yet implemented."
	006 Move [X31+48], V0
	007 Move [X31+56], V0
	008 Move [X31+2], V0
	009 Move [X31+80], X31
	010 Move [X31+64], X0
	011 Move X8, [X1+32]
	012 Move X19, X1
	013 Move X8, [X8+192]
	014 Move X0, [X8+136]
	015 Move W8, [X0+309]
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {21}
	020 Call 0x1C5D684
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move X8, [X19+32]
	026 Move X8, [X8+192]
	027 Move X0, [X8+128]
	028 Add X8, X31, 8
	029 Call AsyncTaskMethodBuilder`1<ValueTuple`2<Boolean, Object>>.Create
	030 NotImplemented "Instruction LDUR not yet implemented."
	031 Move X8, [X31+24]
	032 Move TEMP, 0
	033 Not TEMP
	034 Move W9, TEMP
	035 Move [X31+32], W9
	036 Move [X31+40], V0
	037 Move [X31+56], X8
	038 Move X8, [X19+32]
	039 Add X1, X31, 32
	040 Move X8, [X8+192]
	041 Move X2, [X8+152]
	042 Add X8, X31, 32
	043 Or X20, X8, 15
	044 Move X0, X20
	045 Call AsyncTaskMethodBuilder`1<ValueTuple`2<Boolean, Object>>.Start, X0, X1
	046 Move X8, [X19+32]
	047 Move X0, X20
	048 Move X8, [X8+192]
	049 Move X1, [X8+168]
	050 Call AsyncTaskMethodBuilder`1<ValueTuple`2<Boolean, Object>>.get_Task, X0
	051 Move X20, [X31+112]
	052 Move X19, [X31+120]
	053 Move X30, [X31+96]
	054 Add X31, X31, 128
	055 Return X0

