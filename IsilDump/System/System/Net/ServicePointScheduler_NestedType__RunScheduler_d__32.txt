Type: System.Net.ServicePointScheduler/<RunScheduler>d__32

Method: System.Void MoveNext()

Disassembly:
	0x036A96F0 STR W9, [X31 + 0x8]
	0x036A96F4 STR X8, [X31]
	0x036A96F8 BL 0x3EB1AE0
	0x036A96FC MOV X8, X31
	0x036A9700 B 0x36A9578
	0x036A9704 MOVZ W0, 0x8
	0x036A9708 BL 0x3EB1AF0
	0x036A970C LDR X8, [X20]
	0x036A9710 STR X8, [X0]
	0x036A9714 ADRP X1, 0x80B000
	0x036A9718 ADD X1, X1, 0xE58
	0x036A971C MOV X2, X31
	0x036A9720 BL 0x3EB1B00
	0x036A9724 MOV X0, X21
	0x036A9728 BL 0x1C16F18
	0x036A972C BL 0x1C16F20
	0x036A9730 BL 0x1C16F20
	0x036A9734 MOV X22, X1
	0x036A9738 MOV X20, X0
	0x036A973C TBZ X23, 0x1F, 0x36A96B4
	0x036A9740 B 0x36A9694
	0x036A9744 MOV X20, X0
	0x036A9748 BL 0x3EB1AE0
	0x036A974C MOV X0, X20
	0x036A9750 BL 0x1D2C690
	0x036A9754 BL 0x1990590
	0x036A9758 STR X30, [X31 - 0x30]!
	0x036A975C STP X22, X21, [X31 + 0x10]
	0x036A9760 STP X20, X19, [X31 + 0x20]
	0x036A9764 ADRP X22, 0xD37000
	0x036A9768 ADRP X21, 0xA54000
	0x036A976C LDRB W8, [X22 + 0x92A]
	0x036A9770 LDR X21, [X21 + 0xE0]
	0x036A9774 MOV X19, X1
	0x036A9778 MOV X20, X0
	0x036A977C TBNZ X8, 0x0, 0x36A97A0
	0x036A9780 ADRP X0, 0xA54000
	0x036A9784 LDR X0, [X0 + 0x198]
	0x036A9788 BL 0x1C16CF4
	0x036A978C ADRP X0, 0xA54000
	0x036A9790 LDR X0, [X0 + 0xE0]
	0x036A9794 BL 0x1C16CF4
	0x036A9798 MOVZ W8, 0x1
	0x036A979C STRB W8, [X22 + 0x92A]
	0x036A97A0 LDR X0, [X21]
	0x036A97A4 ADRP X21, 0xA54000
	0x036A97A8 LDR W8, [X0 + 0xE0]
	0x036A97AC LDR X21, [X21 + 0x198]
	0x036A97B0 CBNZ W8, 0x36A97B8
	0x036A97B4 BL 0x1C16DFC
	0x036A97B8 LDR X2, [X21]
	0x036A97BC ADD X0, X20, 0x8
	0x036A97C0 MOV X1, X19
	0x036A97C4 LDP X20, X19, [X31 + 0x20]
	0x036A97C8 LDP X22, X21, [X31 + 0x10]
	0x036A97CC LDR X30, [X31], #0x30
	0x036A97D0 B 0x262EF7C
	0x036A97D4 STP X30, X21, [X31 - 0x20]!
	0x036A97D8 STP X20, X19, [X31 + 0x10]
	0x036A97DC ADRP X20, 0xD37000
	0x036A97E0 ADRP X21, 0xA95000
	0x036A97E4 LDRB W8, [X20 + 0x92B]
	0x036A97E8 LDR X21, [X21 + 0xF30]
	0x036A97EC MOV X19, X0
	0x036A97F0 TBNZ X8, 0x0, 0x36A9808
	0x036A97F4 ADRP X0, 0xA95000
	0x036A97F8 LDR X0, [X0 + 0xF30]
	0x036A97FC BL 0x1C16CF4
	0x036A9800 MOVZ W8, 0x1
	0x036A9804 STRB W8, [X20 + 0x92B]
	0x036A9808 LDR X2, [X21]
	0x036A980C MOV X0, X19
	0x036A9810 LDP X20, X19, [X31 + 0x10]
	0x036A9814 MOVZ W1, 0x1
	0x036A9818 LDP X30, X21, [X31], #0x20
	0x036A981C B 0x2850BBC
	0x036A9820 LDR X0, [X0 + 0x48]
	0x036A9824 RET
	0x036A9828 STR X30, [X31 - 0x20]!
	0x036A982C STP X20, X19, [X31 + 0x10]
	0x036A9830 MOV X19, X1
	0x036A9834 MOV X1, X31
	0x036A9838 MOV X20, X0
	0x036A983C BL 0x33BDD8C
	0x036A9840 STR X19, [X20 + 0x48]
	0x036A9844 LDP X20, X19, [X31 + 0x10]
	0x036A9848 LDR X30, [X31], #0x20
	0x036A984C RET
	0x036A9850 STR X30, [X31 - 0x10]!
	0x036A9854 LDR X0, [X0 + 0x28]
	0x036A9858 CBZ X0, 0x36A9878
	0x036A985C MOV W1, W31
	0x036A9860 MOV W2, W31
	0x036A9864 BL 0x36A987C
	0x036A9868 ORN W8, W31, W0, 0x0
	0x036A986C AND W0, W8, 0x1
	0x036A9870 LDR X30, [X31], #0x10
	0x036A9874 RET
	0x036A9878 BL 0x1C16F20
	0x036A987C STR X30, [X31 - 0x30]!
	0x036A9880 STP X22, X21, [X31 + 0x10]
	0x036A9884 STP X20, X19, [X31 + 0x20]
	0x036A9888 ADRP X22, 0xD37000
	0x036A988C LDRB W8, [X22 + 0x9DC]
	0x036A9890 MOV W20, W2
	0x036A9894 MOV W21, W1
	0x036A9898 MOV X19, X0
	0x036A989C TBNZ X8, 0x0, 0x36A98C0
	0x036A98A0 ADRP X0, 0xA4A000
	0x036A98A4 LDR X0, [X0 + 0x758]
	0x036A98A8 BL 0x1C16CF4
	0x036A98AC ADRP X0, 0xA53000
	0x036A98B0 LDR X0, [X0 + 0x788]
	0x036A98B4 BL 0x1C16CF4
	0x036A98B8 MOVZ W8, 0x1
	0x036A98BC STRB W8, [X22 + 0x9DC]
	0x036A98C0 MOV X0, X19
	0x036A98C4 STR W31, [X31 + 0xC]
	0x036A98C8 BL 0x36C19E0
	0x036A98CC CMP W20, 0x3
	0x036A98D0 B.CS 0x36A9984
	0x036A98D4 ADRP X8, 0xA53000
	0x036A98D8 LDR X8, [X8 + 0x788]
	0x036A98DC LDR X22, [X19 + 0x30]
	0x036A98E0 LDR X0, [X8]
	0x036A98E4 LDR W8, [X0 + 0xE0]
	0x036A98E8 CBNZ W8, 0x36A98F0
	0x036A98EC BL 0x1C16DFC
	0x036A98F0 ADD X3, X31, 0xC
	0x036A98F4 MOV X0, X22
	0x036A98F8 MOV W1, W20
	0x036A98FC MOV W2, W21
	0x036A9900 BL 0x36C2030
	0x036A9904 LDR W8, [X31 + 0xC]
	0x036A9908 CBNZ W8, 0x36A99CC
	0x036A990C CMP W20, 0x1
	0x036A9910 CSET W8, NE
	0x036A9914 MOV W21, W0
	0x036A9918 ORN W8, W8, W0, 0x0
	0x036A991C TBNZ X8, 0x0, 0x36A9970
	0x036A9920 LDRB W8, [X19 + 0x52]
	0x036A9924 CBNZ W8, 0x36A9970
	0x036A9928 MOVZ W1, 0xFFFF
	0x036A992C MOVZ W2, 0x1007
	0x036A9930 MOV X0, X19
	0x036A9934 BL 0x36BA7A0
	0x036A9938 CBZ X0, 0x36A9A08
	0x036A993C ADRP X8, 0xA4A000
	0x036A9940 LDR X8, [X8 + 0x758]
	0x036A9944 LDR X9, [X0]
	0x036A9948 LDR X1, [X8]
	0x036A994C LDR X8, [X9 + 0x40]
	0x036A9950 LDR X9, [X1 + 0x40]
	0x036A9954 CMP X8, X9
	0x036A9958 B.NE 0x36A9A0C
	0x036A995C BL 0x1C16E08
	0x036A9960 LDR W8, [X0]
	0x036A9964 CBNZ W8, 0x36A9970
	0x036A9968 MOVZ W8, 0x1
	0x036A996C STRB W8, [X19 + 0x52]
	0x036A9970 AND W0, W21, 0x1
	0x036A9974 LDP X20, X19, [X31 + 0x20]
	0x036A9978 LDP X22, X21, [X31 + 0x10]
	0x036A997C LDR X30, [X31], #0x30
	0x036A9980 RET
	0x036A9984 ADRP X0, 0xA4A000
	0x036A9988 LDR X0, [X0 + 0xB40]
	0x036A998C BL 0x1C16D08
	0x036A9990 BL 0x1C16F10
	0x036A9994 MOV X19, X0
	0x036A9998 ADRP X0, 0xA95000
	0x036A999C LDR X0, [X0 + 0xF38]
	0x036A99A0 BL 0x1C16D08
	0x036A99A4 MOV X1, X0
	0x036A99A8 MOV X0, X19
	0x036A99AC MOV X2, X31
	0x036A99B0 BL 0x3379A44
	0x036A99B4 ADRP X0, 0xA95000
	0x036A99B8 LDR X0, [X0 + 0xF40]
	0x036A99BC BL 0x1C16D08
	0x036A99C0 MOV X1, X0
	0x036A99C4 MOV X0, X19
	0x036A99C8 BL 0x1C16DEC
	0x036A99CC ADRP X0, 0xA88000
	0x036A99D0 LDR X0, [X0 + 0xD8]
	0x036A99D4 MOV W19, W8
	0x036A99D8 BL 0x1C16D08
	0x036A99DC BL 0x1C16F10
	0x036A99E0 MOV W1, W19
	0x036A99E4 MOV X2, X31
	0x036A99E8 MOV X20, X0
	0x036A99EC BL 0x36C6F04
	0x036A99F0 ADRP X0, 0xA95000
	0x036A99F4 LDR X0, [X0 + 0xF40]
	0x036A99F8 BL 0x1C16D08
	0x036A99FC MOV X1, X0
	0x036A9A00 MOV X0, X20
	0x036A9A04 BL 0x1C16DEC
	0x036A9A08 BL 0x1C16F20
	0x036A9A0C BL 0x1C171E0
	0x036A9A10 STP X30, X19, [X31 - 0x10]!
	0x036A9A14 LDR X8, [X0 + 0x28]
	0x036A9A18 CBZ X8, 0x36A9A6C
	0x036A9A1C LDRB W8, [X8 + 0x52]
	0x036A9A20 CBZ W8, 0x36A9A6C
	0x036A9A24 BL 0x36A9850
	0x036A9A28 TBZ X0, 0x0, 0x36A9A6C
	0x036A9A2C MOVZ W0, 0x1
	0x036A9A30 B 0x36A9A70
	0x036A9A34 CMP W1, 0x1
	0x036A9A38 MOV X19, X0
	0x036A9A3C B.NE 0x36A9AA0
	0x036A9A40 MOV X0, X19
	0x036A9A44 BL 0x3EB1AD0
	0x036A9A48 MOV X19, X0
	0x036A9A4C ADRP X0, 0xA50000
	0x036A9A50 LDR X0, [X0 + 0xCC0]
	0x036A9A54 BL 0x1C16D08
	0x036A9A58 LDR X8, [X19]
	0x036A9A5C LDR X1, [X8]
	0x036A9A60 BL 0x1C17270
	0x036A9A64 TBZ X0, 0x0, 0x36A9A78
	0x036A9A68 BL 0x3EB1AE0
	0x036A9A6C MOV W0, W31
	0x036A9A70 LDP X30, X19, [X31], #0x10
	0x036A9A74 RET
	0x036A9A78 MOVZ W0, 0x8
	0x036A9A7C BL 0x3EB1AF0
	0x036A9A80 LDR X8, [X19]
	0x036A9A84 STR X8, [X0]
	0x036A9A88 ADRP X1, 0x80B000
	0x036A9A8C ADD X1, X1, 0xE58
	0x036A9A90 MOV X2, X31
	0x036A9A94 BL 0x3EB1B00
	0x036A9A98 MOV X19, X0
	0x036A9A9C BL 0x3EB1AE0
	0x036A9AA0 MOV X0, X19
	0x036A9AA4 BL 0x1D2C690
	0x036A9AA8 BL 0x1990590
	0x036A9AAC SUB X31, X31, 0xB0
	0x036A9AB0 STP X30, X23, [X31 + 0x80]
	0x036A9AB4 STP X22, X21, [X31 + 0x90]
	0x036A9AB8 STP X20, X19, [X31 + 0xA0]
	0x036A9ABC ADRP X23, 0xD37000
	0x036A9AC0 ADRP X22, 0xA4D000
	0x036A9AC4 LDRB W8, [X23 + 0x92C]
	0x036A9AC8 LDR X22, [X22 + 0x280]
	0x036A9ACC MOV X19, X2
	0x036A9AD0 MOV X20, X1
	0x036A9AD4 MOV X21, X0
	0x036A9AD8 TBNZ X8, 0x0, 0x36A9AFC
	0x036A9ADC ADRP X0, 0xA95000
	0x036A9AE0 LDR X0, [X0 + 0xF48]
	0x036A9AE4 BL 0x1C16CF4
	0x036A9AE8 ADRP X0, 0xA4D000
	0x036A9AEC LDR X0, [X0 + 0x280]
	0x036A9AF0 BL 0x1C16CF4
	0x036A9AF4 MOVZ W8, 0x1
	0x036A9AF8 STRB W8, [X23 + 0x92C]
	0x036A9AFC LDR X0, [X22]
	0x036A9B00 MOVI V0.2D, 0x0
	0x036A9B04 STP V0, V0, [X31 + 0x40]
	0x036A9B08 STP V0, V0, [X31 + 0x60]
	0x036A9B0C STP V0, V0, [X31 + 0x20]
	0x036A9B10 STP X21, X20, [X31 + 0x40]
	0x036A9B14 STR X19, [X31 + 0x50]
	0x036A9B18 ADRP X19, 0xA95000
	0x036A9B1C LDR W8, [X0 + 0xE0]
	0x036A9B20 LDR X19, [X19 + 0xF48]
	0x036A9B24 CBNZ W8, 0x36A9B2C
	0x036A9B28 BL 0x1C16DFC
	0x036A9B2C ADD X8, X31, 0x8
	0x036A9B30 MOV X0, X31
	0x036A9B34 BL 0x32C4770
	0x036A9B38 LDUR V0, [X31 + 0x8]
	0x036A9B3C LDR X9, [X31 + 0x18]
	0x036A9B40 LDR X2, [X19]
	0x036A9B44 ADD X8, X31, 0x20
	0x036A9B48 ORR X19, X8, 0xF
	0x036A9B4C MOVN W10, 0x0
	0x036A9B50 ADD X1, X31, 0x20
	0x036A9B54 MOV X0, X19
	0x036A9B58 STUR V0, [X31 + 0x28]
	0x036A9B5C STR X9, [X31 + 0x38]
	0x036A9B60 STR W10, [X31 + 0x20]
	0x036A9B64 BL 0x2195FB8
	0x036A9B68 MOV X0, X19
	0x036A9B6C MOV X1, X31
	0x036A9B70 BL 0x32C47F8
	0x036A9B74 LDP X20, X19, [X31 + 0xA0]
	0x036A9B78 LDP X22, X21, [X31 + 0x90]
	0x036A9B7C LDP X30, X23, [X31 + 0x80]
	0x036A9B80 ADD X31, X31, 0xB0
	0x036A9B84 RET
	0x036A9B88 SUB X31, X31, 0xD0
	0x036A9B8C STR X30, [X31 + 0x90]
	0x036A9B90 STP X24, X23, [X31 + 0xA0]
	0x036A9B94 STP X22, X21, [X31 + 0xB0]
	0x036A9B98 STP X20, X19, [X31 + 0xC0]
	0x036A9B9C ADRP X24, 0xD37000
	0x036A9BA0 ADRP X23, 0xA54000
	0x036A9BA4 LDRB W8, [X24 + 0x92D]
	0x036A9BA8 LDR X23, [X23 + 0xE0]
	0x036A9BAC MOV X19, X3
	0x036A9BB0 MOV W22, W2
	0x036A9BB4 MOV X20, X1
	0x036A9BB8 MOV X21, X0
	0x036A9BBC TBNZ X8, 0x0, 0x36A9BF8
	0x036A9BC0 ADRP X0, 0xA54000
	0x036A9BC4 LDR X0, [X0 + 0xE8]
	0x036A9BC8 BL 0x1C16CF4
	0x036A9BCC ADRP X0, 0xA95000
	0x036A9BD0 LDR X0, [X0 + 0xF50]
	0x036A9BD4 BL 0x1C16CF4
	0x036A9BD8 ADRP X0, 0xA54000
	0x036A9BDC LDR X0, [X0 + 0xF8]
	0x036A9BE0 BL 0x1C16CF4
	0x036A9BE4 ADRP X0, 0xA54000
	0x036A9BE8 LDR X0, [X0 + 0xE0]
	0x036A9BEC BL 0x1C16CF4
	0x036A9BF0 MOVZ W8, 0x1
	0x036A9BF4 STRB W8, [X24 + 0x92D]
	0x036A9BF8 LDR X0, [X23]
	0x036A9BFC AND W8, W22, 0x1
	0x036A9C00 MOVI V0.2D, 0x0
	0x036A9C04 STR X31, [X31 + 0x80]
	0x036A9C08 STP V0, V0, [X31 + 0x40]
	0x036A9C0C STP V0, V0, [X31 + 0x60]
	0x036A9C10 STP V0, V0, [X31 + 0x20]
	0x036A9C14 STP X21, X20, [X31 + 0x40]
	0x036A9C18 STRB W8, [X31 + 0x50]
	0x036A9C1C STR X19, [X31 + 0x58]
	0x036A9C20 ADRP X21, 0xA54000
	0x036A9C24 ADRP X19, 0xA95000
	0x036A9C28 ADRP X20, 0xA54000
	0x036A9C2C LDR W8, [X0 + 0xE0]
	0x036A9C30 LDR X21, [X21 + 0xE8]
	0x036A9C34 LDR X19, [X19 + 0xF50]
	0x036A9C38 LDR X20, [X20 + 0xF8]
	0x036A9C3C CBNZ W8, 0x36A9C44
	0x036A9C40 BL 0x1C16DFC
	0x036A9C44 LDR X0, [X21]
	0x036A9C48 ADD X8, X31, 0x8
	0x036A9C4C BL 0x262EF70
	0x036A9C50 LDUR V0, [X31 + 0x8]
	0x036A9C54 LDR X9, [X31 + 0x18]
	0x036A9C58 LDR X2, [X19]
	0x036A9C5C ADD X8, X31, 0x20
	0x036A9C60 ORR X19, X8, 0xF
	0x036A9C64 MOVN W10, 0x0
	0x036A9C68 ADD X1, X31, 0x20
	0x036A9C6C MOV X0, X19
	0x036A9C70 STUR V0, [X31 + 0x28]
	0x036A9C74 STR X9, [X31 + 0x38]
	0x036A9C78 STR W10, [X31 + 0x20]
	0x036A9C7C BL 0x1FAB9BC
	0x036A9C80 LDR X1, [X20]
	0x036A9C84 MOV X0, X19
	0x036A9C88 BL 0x262EF84
	0x036A9C8C LDP X20, X19, [X31 + 0xC0]
	0x036A9C90 LDP X22, X21, [X31 + 0xB0]
	0x036A9C94 LDP X24, X23, [X31 + 0xA0]
	0x036A9C98 LDR X30, [X31 + 0x90]
	0x036A9C9C ADD X31, X31, 0xD0
	0x036A9CA0 RET
	0x036A9CA4 SUB X31, X31, 0x90
	0x036A9CA8 STP X30, X23, [X31 + 0x60]
	0x036A9CAC STP X22, X21, [X31 + 0x70]
	0x036A9CB0 STP X20, X19, [X31 + 0x80]
	0x036A9CB4 ADRP X23, 0xD37000
	0x036A9CB8 ADRP X22, 0xA95000
	0x036A9CBC LDRB W8, [X23 + 0x92E]
	0x036A9CC0 LDR X22, [X22 + 0xF58]
	0x036A9CC4 MOV X19, X2
	0x036A9CC8 MOV X20, X1
	0x036A9CCC MOV X21, X0
	0x036A9CD0 TBNZ X8, 0x0, 0x36A9D0C
	0x036A9CD4 ADRP X0, 0xA95000
	0x036A9CD8 LDR X0, [X0 + 0xF60]
	0x036A9CDC BL 0x1C16CF4
	0x036A9CE0 ADRP X0, 0xA95000
	0x036A9CE4 LDR X0, [X0 + 0xF68]
	0x036A9CE8 BL 0x1C16CF4
	0x036A9CEC ADRP X0, 0xA95000
	0x036A9CF0 LDR X0, [X0 + 0xF70]
	0x036A9CF4 BL 0x1C16CF4
	0x036A9CF8 ADRP X0, 0xA95000
	0x036A9CFC LDR X0, [X0 + 0xF58]
	0x036A9D00 BL 0x1C16CF4
	0x036A9D04 MOVZ W8, 0x1
	0x036A9D08 STRB W8, [X23 + 0x92E]
	0x036A9D0C LDR X0, [X22]
	0x036A9D10 MOVI V0.2D, 0x0
	0x036A9D14 STP V0, V0, [X31 + 0x20]
	0x036A9D18 STP V0, V0, [X31 + 0x40]
	0x036A9D1C STP V0, V0, [X31]
	0x036A9D20 STP X19, X21, [X31 + 0x28]
	0x036A9D24 STR X20, [X31 + 0x20]
	0x036A9D28 ADRP X19, 0xA95000
	0x036A9D2C ADRP X21, 0xA95000
	0x036A9D30 ADRP X20, 0xA95000
	0x036A9D34 LDR W8, [X0 + 0xE0]
	0x036A9D38 LDR X19, [X19 + 0xF60]
	0x036A9D3C LDR X21, [X21 + 0xF68]
	0x036A9D40 LDR X20, [X20 + 0xF70]
	0x036A9D44 CBNZ W8, 0x36A9D4C
	0x036A9D48 BL 0x1C16DFC
	0x036A9D4C LDR X0, [X19]
	0x036A9D50 ADD X8, X31, 0x0
	0x036A9D54 ORR X19, X8, 0xF
	0x036A9D58 MOV X8, X19
	0x036A9D5C BL 0x263221C
	0x036A9D60 LDR X2, [X21]
	0x036A9D64 MOVN W8, 0x0
	0x036A9D68 ADD X1, X31, 0x0
	0x036A9D6C MOV X0, X19
	0x036A9D70 STR W8, [X31]
	0x036A9D74 BL 0x1FD1814
	0x036A9D78 LDR X1, [X20]
	0x036A9D7C MOV X0, X19
	0x036A9D80 BL 0x2632230
	0x036A9D84 LDP X20, X19, [X31 + 0x80]
	0x036A9D88 LDP X22, X21, [X31 + 0x70]
	0x036A9D8C LDP X30, X23, [X31 + 0x60]
	0x036A9D90 ADD X31, X31, 0x90
	0x036A9D94 RET
	0x036A9D98 SUB X31, X31, 0x40
	0x036A9D9C STP X30, X23, [X31 + 0x10]
	0x036A9DA0 STP X22, X21, [X31 + 0x20]
	0x036A9DA4 STP X20, X19, [X31 + 0x30]
	0x036A9DA8 ADRP X21, 0xD37000
	0x036A9DAC LDRB W8, [X21 + 0x92F]
	0x036A9DB0 MOV X20, X1
	0x036A9DB4 MOV W19, W0
	0x036A9DB8 TBNZ X8, 0x0, 0x36A9DF4
	0x036A9DBC ADRP X0, 0xA94000
	0x036A9DC0 LDR X0, [X0 + 0xF10]
	0x036A9DC4 BL 0x1C16CF4
	0x036A9DC8 ADRP X0, 0xA75000
	0x036A9DCC LDR X0, [X0 + 0x330]
	0x036A9DD0 BL 0x1C16CF4
	0x036A9DD4 ADRP X0, 0xA95000
	0x036A9DD8 LDR X0, [X0 + 0xF78]
	0x036A9DDC BL 0x1C16CF4
	0x036A9DE0 ADRP X0, 0xA95000
	0x036A9DE4 LDR X0, [X0 + 0xF80]
	0x036A9DE8 BL 0x1C16CF4
	0x036A9DEC MOVZ W8, 0x1
	0x036A9DF0 STRB W8, [X21 + 0x92F]
	0x036A9DF4 ADRP X22, 0xA75000
	0x036A9DF8 ADRP X8, 0xA94000
	0x036A9DFC LDR X22, [X22 + 0x330]
	0x036A9E00 LDR X8, [X8 + 0xF10]
	0x036A9E04 CBZ X20, 0x36A9EA8
	0x036A9E08 LDR X10, [X20]
	0x036A9E0C LDR X9, [X22]
	0x036A9E10 LDRB W12, [X10 + 0x130]
	0x036A9E14 LDRB W11, [X9 + 0x130]
	0x036A9E18 CMP W12, W11
	0x036A9E1C B.CC 0x36A9E34
	0x036A9E20 LDR X10, [X10 + 0xC8]
	0x036A9E24 ADD X10, X10, X11, 0x3, LSL
	0x036A9E28 LDUR X10, [X10 - 0x8]
	0x036A9E2C CMP X10, X9
	0x036A9E30 B.EQ 0x36A9EFC
	0x036A9E34 LDR X0, [X8]
	0x036A9E38 ADRP X23, 0xA95000
	0x036A9E3C LDR X23, [X23 + 0xF78]
	0x036A9E40 ADD X1, X31, 0x8
	0x036A9E44 STR W19, [X31 + 0x8]
	0x036A9E48 BL 0x1C16E04
	0x036A9E4C LDR X8, [X20]
	0x036A9E50 MOV X21, X0
	0x036A9E54 MOV X0, X20
	0x036A9E58 LDP X9, X1, [X8 + 0x188]
	0x036A9E5C BLR X9
	0x036A9E60 LDR X8, [X23]
	0x036A9E64 MOV X2, X0
	0x036A9E68 MOV X1, X21
	0x036A9E6C MOV X3, X31
	0x036A9E70 MOV X0, X8
	0x036A9E74 BL 0x3227BD4
	0x036A9E78 LDR X8, [X22]
	0x036A9E7C MOV X22, X0
	0x036A9E80 MOV X0, X8
	0x036A9E84 BL 0x1C16F10
	0x036A9E88 MOV X1, X22
	0x036A9E8C MOV W2, W19
	0x036A9E90 MOV W3, W31
	0x036A9E94 MOV X4, X20
	0x036A9E98 MOV X5, X31
	0x036A9E9C MOV X21, X0
	0x036A9EA0 BL 0x367FD90
	0x036A9EA4 B 0x36A9F00
	0x036A9EA8 LDR X0, [X8]
	0x036A9EAC ADD X1, X31, 0xC
	0x036A9EB0 STR W19, [X31 + 0xC]
	0x036A9EB4 BL 0x1C16E04
	0x036A9EB8 ADRP X8, 0xA95000
	0x036A9EBC LDR X8, [X8 + 0xF80]
	0x036A9EC0 MOV X1, X0
	0x036A9EC4 MOV X2, X31
	0x036A9EC8 LDR X8, [X8]
	0x036A9ECC MOV X0, X8
	0x036A9ED0 BL 0x321EFD0
	0x036A9ED4 LDR X8, [X22]
	0x036A9ED8 MOV X20, X0
	0x036A9EDC MOV X0, X8
	0x036A9EE0 BL 0x1C16F10
	0x036A9EE4 MOV X1, X20
	0x036A9EE8 MOV W2, W19
	0x036A9EEC MOV X3, X31
	0x036A9EF0 MOV X21, X0
	0x036A9EF4 BL 0x367A0D4
	0x036A9EF8 B 0x36A9F00
	0x036A9EFC MOV X21, X20
	0x036A9F00 MOV X0, X21
	0x036A9F04 LDP X20, X19, [X31 + 0x30]
	0x036A9F08 LDP X22, X21, [X31 + 0x20]
	0x036A9F0C LDP X30, X23, [X31 + 0x10]
	0x036A9F10 ADD X31, X31, 0x40
	0x036A9F14 RET
	0x036A9F18 STP X30, X25, [X31 - 0x40]!
	0x036A9F1C STP X24, X23, [X31 + 0x10]
	0x036A9F20 STP X22, X21, [X31 + 0x20]
	0x036A9F24 STP X20, X19, [X31 + 0x30]
	0x036A9F28 ADRP X20, 0xD37000
	0x036A9F2C ADRP X24, 0xA4A000
	0x036A9F30 LDRB W8, [X20 + 0x930]
	0x036A9F34 LDR X24, [X24 + 0x8F0]
	0x036A9F38 MOV X19, X3
	0x036A9F3C MOV W21, W2
	0x036A9F40 MOV X22, X1
	0x036A9F44 MOV X23, X0
	0x036A9F48 TBNZ X8, 0x0, 0x36A9F60
	0x036A9F4C ADRP X0, 0xA4A000
	0x036A9F50 LDR X0, [X0 + 0x8F0]
	0x036A9F54 BL 0x1C16CF4
	0x036A9F58 MOVZ W8, 0x1
	0x036A9F5C STRB W8, [X20 + 0x930]
	0x036A9F60 LDR X0, [X24]
	0x036A9F64 BL 0x1C16F10
	0x036A9F68 MOV X1, X31
	0x036A9F6C MOV X20, X0
	0x036A9F70 BL 0x3231AC4
	0x036A9F74 LDR W8, [X22]
	0x036A9F78 CMP W8, W21
	0x036A9F7C B.GE 0x36AA0B8
	0x036A9F80 MOV W25, W31
	0x036A9F84 ADD W9, W8, 0x1
	0x036A9F88 STR W9, [X22]
	0x036A9F8C CBZ X23, 0x36AA0DC
	0x036A9F90 LDR W9, [X23 + 0x18]
	0x036A9F94 CMP W8, W9
	0x036A9F98 B.CS 0x36AA0E0
	0x036A9F9C ADD X8, X23, W8, SXTW
	0x036A9FA0 LDRB W24, [X8 + 0x20]
	0x036A9FA4 CMP W24, 0xA
	0x036A9FA8 B.EQ 0x36A9FDC
	0x036A9FAC TBNZ X25, 0x0, 0x36AA040
	0x036A9FB0 CBZ X20, 0x36AA0DC
	0x036A9FB4 CMP W24, 0xD
	0x036A9FB8 MOV X0, X20
	0x036A9FBC MOV W1, W24
	0x036A9FC0 MOV X2, X31
	0x036A9FC4 CSET W25, EQ
	0x036A9FC8 BL 0x3233D30
	0x036A9FCC LDR W8, [X22]
	0x036A9FD0 CMP W8, W21
	0x036A9FD4 B.LT 0x36A9F84
	0x036A9FD8 B 0x36AA064
	0x036A9FDC CBZ X20, 0x36AA0DC
	0x036A9FE0 MOV X0, X20
	0x036A9FE4 MOV X1, X31
	0x036A9FE8 BL 0x323260C
	0x036A9FEC CMP W0, 0x1
	0x036A9FF0 B.LT 0x36AA038
	0x036A9FF4 MOV X0, X20
	0x036A9FF8 MOV X1, X31
	0x036A9FFC BL 0x323260C
	0x036AA000 SUB W1, W0, 0x1
	0x036AA004 MOV X0, X20
	0x036AA008 MOV X2, X31
	0x036AA00C BL 0x3232E88
	0x036AA010 AND W8, W0, 0xFFFF
	0x036AA014 CMP W8, 0xD
	0x036AA018 B.NE 0x36AA038
	0x036AA01C MOV X0, X20
	0x036AA020 MOV X1, X31
	0x036AA024 BL 0x323260C
	0x036AA028 SUB W1, W0, 0x1
	0x036AA02C MOV X0, X20
	0x036AA030 MOV X2, X31
	0x036AA034 BL 0x3232ADC
	0x036AA038 MOV W25, W31
	0x036AA03C B 0x36AA06C
	0x036AA040 CBZ X20, 0x36AA0DC
	0x036AA044 MOV X0, X20
	0x036AA048 MOV X1, X31
	0x036AA04C BL 0x323260C
	0x036AA050 SUB W1, W0, 0x1
	0x036AA054 MOV X0, X20
	0x036AA058 MOV X2, X31
	0x036AA05C BL 0x3232ADC
	0x036AA060 MOVZ W25, 0x1
	0x036AA064 CMP W24, 0xD
	0x036AA068 B.NE 0x36AA0B8
	0x036AA06C MOV X0, X20
	0x036AA070 MOV X1, X31
	0x036AA074 BL 0x323260C
	0x036AA078 CBZ W0, 0x36AA0D0
	0x036AA07C CBZ W25, 0x36AA09C
	0x036AA080 MOV X0, X20
	0x036AA084 MOV X1, X31
	0x036AA088 BL 0x323260C
	0x036AA08C SUB W1, W0, 0x1
	0x036AA090 MOV X0, X20
	0x036AA094 MOV X2, X31
	0x036AA098 BL 0x3232ADC
	0x036AA09C LDR X8, [X20]
	0x036AA0A0 MOV X0, X20
	0x036AA0A4 LDP X9, X1, [X8 + 0x168]
	0x036AA0A8 BLR X9
	0x036AA0AC STR X0, [X19]
	0x036AA0B0 MOVZ W0, 0x1
	0x036AA0B4 B 0x36AA0BC
	0x036AA0B8 MOV W0, W31
	0x036AA0BC LDP X20, X19, [X31 + 0x30]
	0x036AA0C0 LDP X22, X21, [X31 + 0x20]
	0x036AA0C4 LDP X24, X23, [X31 + 0x10]
	0x036AA0C8 LDP X30, X25, [X31], #0x40
	0x036AA0CC RET
	0x036AA0D0 MOVZ W0, 0x1
	0x036AA0D4 STR X31, [X19]
	0x036AA0D8 B 0x36AA0BC
	0x036AA0DC BL 0x1C16F20
	0x036AA0E0 BL 0x1C16F28
	0x036AA0E4 STR X30, [X31 - 0x40]!
	0x036AA0E8 STP X24, X23, [X31 + 0x10]
	0x036AA0EC STP X22, X21, [X31 + 0x20]
	0x036AA0F0 STP X20, X19, [X31 + 0x30]
	0x036AA0F4 ADRP X21, 0xD36000
	0x036AA0F8 LDRB W8, [X21 + 0x931]
	0x036AA0FC MOV X20, X1
	0x036AA100 MOV X19, X0
	0x036AA104 TBNZ X8, 0x0, 0x36AA134
	0x036AA108 ADRP X0, 0xA8F000
	0x036AA10C LDR X0, [X0 + 0x828]
	0x036AA110 BL 0x1C16CF4
	0x036AA114 ADRP X0, 0xA94000
	0x036AA118 LDR X0, [X0 + 0x120]
	0x036AA11C BL 0x1C16CF4
	0x036AA120 ADRP X0, 0xA79000
	0x036AA124 LDR X0, [X0 + 0xA50]
	0x036AA128 BL 0x1C16CF4
	0x036AA12C MOVZ W8, 0x1
	0x036AA130 STRB W8, [X21 + 0x931]
	0x036AA134 STRB W31, [X31 + 0xC]
	0x036AA138 ADD X1, X31, 0xC
	0x036AA13C MOV X0, X19
	0x036AA140 MOV X2, X31
	0x036AA144 BL 0x33DE64C
	0x036AA148 LDR W8, [X19 + 0x40]
	0x036AA14C CBNZ W8, 0x36AA158
	0x036AA150 LDR X8, [X19 + 0x58]
	0x036AA154 CBZ X8, 0x36AA190
	0x036AA158 MOV X22, X31
	0x036AA15C MOV W24, W31
	0x036AA160 LDRB W8, [X31 + 0xC]
	0x036AA164 CBZ W8, 0x36AA174
	0x036AA168 MOV X0, X19
	0x036AA16C MOV X1, X31
	0x036AA170 BL 0x33E14E4
	0x036AA174 CBNZ X22, 0x36AA450
	0x036AA178 MOV W0, W24
	0x036AA17C LDP X20, X19, [X31 + 0x30]
	0x036AA180 LDP X22, X21, [X31 + 0x20]
	0x036AA184 LDP X24, X23, [X31 + 0x10]
	0x036AA188 LDR X30, [X31], #0x40
	0x036AA18C RET
	0x036AA190 LDRB W8, [X19 + 0x18]
	0x036AA194 CBZ W8, 0x36AA238
	0x036AA198 CBZ X20, 0x36AA458
	0x036AA19C LDR X20, [X20 + 0x10]
	0x036AA1A0 CBZ X20, 0x36AA45C
	0x036AA1A4 LDR X8, [X20]
	0x036AA1A8 LDR X21, [X19 + 0x10]
	0x036AA1AC LDR X1, [X8 + 0x260]
	0x036AA1B0 LDR X9, [X8 + 0x258]
	0x036AA1B4 MOV X0, X20
	0x036AA1B8 BLR X9
	0x036AA1BC CBZ X0, 0x36AA268
	0x036AA1C0 LDR X8, [X20]
	0x036AA1C4 LDR X1, [X8 + 0x260]
	0x036AA1C8 LDR X9, [X8 + 0x258]
	0x036AA1CC MOV X0, X20
	0x036AA1D0 BLR X9
	0x036AA1D4 LDR X8, [X20]
	0x036AA1D8 MOV X22, X0
	0x036AA1DC LDP X9, X1, [X8 + 0x1D8]
	0x036AA1E0 MOV X0, X20
	0x036AA1E4 BLR X9
	0x036AA1E8 CBZ X22, 0x36AA460
	0x036AA1EC ADRP X24, 0xA94000
	0x036AA1F0 LDR X8, [X22]
	0x036AA1F4 LDR X24, [X24 + 0x120]
	0x036AA1F8 MOV X23, X0
	0x036AA1FC LDRH W9, [X8 + 0x12E]
	0x036AA200 LDR X1, [X24]
	0x036AA204 CBZ X9, 0x36AA228
	0x036AA208 LDR X10, [X8 + 0xB0]
	0x036AA20C ADD X10, X10, 0x8
	0x036AA210 LDUR X11, [X10 - 0x8]
	0x036AA214 CMP X11, X1
	0x036AA218 B.EQ 0x36AA244
	0x036AA21C SUBS X9, X9, 0x1
	0x036AA220 ADD X10, X10, 0x10
	0x036AA224 B.NE 0x36AA210
	0x036AA228 MOVZ W2, 0x1
	0x036AA22C MOV X0, X22
	0x036AA230 BL 0x1C5C788
	0x036AA234 B 0x36AA254
	0x036AA238 MOV X22, X31
	0x036AA23C MOVZ W24, 0x1
	0x036AA240 B 0x36AA160
	0x036AA244 LDR W9, [X10]
	0x036AA248 ADD W9, W9, 0x1
	0x036AA24C ADD X8, X8, W9, 0x4, SXTW

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+64], X29
	003 Move [X31+72], X30
	004 Move [X31+80], X28
	005 Move [X31+88], X27
	006 Move [X31+96], X26
	007 Move [X31+104], X25
	008 Move [X31+112], X24
	009 Move [X31+120], X23
	010 Move [X31+128], X22
	011 Move [X31+136], X21
	012 Move [X31+144], X20
	013 Move [X31+152], X19
	014 Move X20, 0xD38000
	015 Move W8, [X20+2343]
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {95}
	021 Move X0, 0xA96000
	022 Move X0, [X0+3792]
	023 Call 0x1C17CF4
	024 Move X0, 0xA4E000
	025 Move X0, [X0+640]
	026 Call 0x1C17CF4
	027 Move X0, 0xA85000
	028 Move X0, [X0+480]
	029 Call 0x1C17CF4
	030 Move X0, 0xA85000
	031 Move X0, [X0+488]
	032 Call 0x1C17CF4
	033 Move X0, 0xA85000
	034 Move X0, [X0+496]
	035 Call 0x1C17CF4
	036 Move X0, 0xA4C000
	037 Move X0, [X0+2544]
	038 Call 0x1C17CF4
	039 Move X0, 0xA96000
	040 Move X0, [X0+3800]
	041 Call 0x1C17CF4
	042 Move X0, 0xA96000
	043 Move X0, [X0+3808]
	044 Call 0x1C17CF4
	045 Move X0, 0xA96000
	046 Move X0, [X0+3816]
	047 Call 0x1C17CF4
	048 Move X0, 0xA96000
	049 Move X0, [X0+3824]
	050 Call 0x1C17CF4
	051 Move X0, 0xA96000
	052 Move X0, [X0+3832]
	053 Call 0x1C17CF4
	054 Move X0, 0xA96000
	055 Move X0, [X0+3840]
	056 Call 0x1C17CF4
	057 Move X0, 0xA72000
	058 Move X0, [X0+2008]
	059 Call 0x1C17CF4
	060 Move X0, 0xA72000
	061 Move X0, [X0+2016]
	062 Call 0x1C17CF4
	063 Move X0, 0xA96000
	064 Move X0, [X0+3848]
	065 Call 0x1C17CF4
	066 Move X0, 0xA72000
	067 Move X0, [X0+2024]
	068 Call 0x1C17CF4
	069 Move X0, 0xA85000
	070 Move X0, [X0+504]
	071 Call 0x1C17CF4
	072 Move X0, 0xA56000
	073 Move X0, [X0+1936]
	074 Call 0x1C17CF4
	075 Move X0, 0xA4C000
	076 Move X0, [X0+1976]
	077 Call 0x1C17CF4
	078 Move X0, 0xA4D000
	079 Move X0, [X0+1392]
	080 Call 0x1C17CF4
	081 Move X0, 0xA96000
	082 Move X0, [X0+3856]
	083 Call 0x1C17CF4
	084 Move X0, 0xA96000
	085 Move X0, [X0+3864]
	086 Call 0x1C17CF4
	087 Move X0, 0xA96000
	088 Move X0, [X0+3472]
	089 Call 0x1C17CF4
	090 Move X0, 0xA96000
	091 Move X0, [X0+3872]
	092 Call 0x1C17CF4
	093 Move W8, 1
	094 Move [X20+2343], W8
	095 Move [X31+36], W31
	096 Move [X31+16], X31
	097 Move [X31+24], X31
	098 Move X28, 0xA4C000
	099 Move W8, [X19]
	100 Move X20, [X19+32]
	101 Move X28, [X28+2544]
	102 Move [X31+12], W8
	103 Compare W8, 0
	104 JumpIfEqual {131}
	105 Move X0, [X28]
	106 Move W8, [X0+224]
	107 Compare W8, 0
	108 JumpIfNotEqual {110}
	109 Call 0x1C17DFC
	110 Move X0, X31
	111 Call DateTime.get_UtcNow
	112 Move X8, 0xA4D000
	113 Move X8, [X8+1392]
	114 Move X21, X0
	115 Move X0, [X8]
	116 Move W8, [X0+224]
	117 Compare W8, 0
	118 JumpIfNotEqual {120}
	119 Call 0x1C17DFC
	120 Move X8, -45854720
	121 Move V0, [X8+2616]
	122 Move X0, X31
	123 Call TimeSpan.FromDays, V0
	124 Move X1, X0
	125 Move X0, X21
	126 Move X2, X31
	127 Call DateTime.op_Addition, X0, X1
	128 Compare X20, 0
	129 JumpIfEqual {143}
	130 Move [X20+80], X0
	131 Move V0, [X19+5]
	132 Move TEMP, 0
	133 Not TEMP
	134 Move W9, TEMP
	135 Move TEMP, 0
	136 Not TEMP
	137 Move W8, TEMP
	138 Move [X31+12], W8
	139 Move [X31+1], V0
	140 Move [X19+80], X31
	141 Move [X19+88], X31
	142 Move [X19], W9
	143 Call 0x1C17F20
	144 Move X8, 0xA72000
	145 Move X8, [X8+2024]
	146 Move X0, [X8]
	147 Call 0x1C17F10
	148 Move X8, 0xA72000
	149 Move X8, [X8+2016]
	150 Move X21, X0
	151 Move X1, [X8]
	152 Call List`1<Object>..ctor, X0
	153 Move [X19+56], X21
	154 Move [X19+72], W31
	155 Compare X20, 0
	156 JumpIfEqual {356}
	157 Move X21, [X20+16]
	158 Move [X31+36], W31
	159 Add X1, X31, 36
	160 Move X0, X21
	161 Move X2, X31
	162 Call Monitor.Enter, X0, X1
	163 Move X0, X20
	164 Move X1, X31
	165 Call ServicePointScheduler.Cleanup, X0
	166 Move X8, [X20+56]
	167 Compare X8, 0
	168 JumpIfEqual {357}
	169 Move X9, 0xA96000
	170 Move X9, [X9+3856]
	171 Move W1, [X8+24]
	172 Move X0, [X9]
	173 Call 0x1C17D6C
	174 Move X1, X0
	175 Move [X19+40], X1
	176 Move X0, [X20+56]
	177 Compare X0, 0
	178 JumpIfEqual {358}
	179 Move X8, 0xA96000
	180 Move X8, [X8+3808]
	181 Move X3, [X8]
	182 Move W2, W31
	183 Call 0x2EEBE14, X0, X1, X2
	184 Move X8, [X20+64]
	185 Compare X8, 0
	186 JumpIfEqual {359}
	187 Move X9, 0xA96000
	188 Move X9, [X9+3864]
	189 Move W1, [X8+24]
	190 Move X0, [X9]
	191 Call 0x1C17D6C
	192 Move X1, X0
	193 Move [X19+48], X1
	194 Move X0, [X20+64]
	195 Compare X0, 0
	196 JumpIfEqual {360}
	197 Move X8, 0xA96000
	198 Move X8, [X8+3800]
	199 Move X3, [X8]
	200 Move W2, W31
	201 Call LinkedList`1<ValueTuple`3<Object, Object, Object>>.CopyTo, X0, X1, X2
	202 Move X0, [X20+32]
	203 Compare X0, 0
	204 JumpIfEqual {361}
	205 Move W1, [X20+28]
	206 Call AsyncManualResetEvent.WaitAsync, X0, X1
	207 Move X1, X0
	208 Move X0, [X19+56]
	209 Move [X19+64], X1
	210 Compare X0, 0
	211 JumpIfEqual {362}
	212 Move X23, 0xA72000
	213 Move X23, [X23+2008]
	214 Move W10, [X0+28]
	215 Move X8, [X0+16]
	216 Move X9, [X23]
	217 Add W10, W10, 1
	218 Move [X0+28], W10
	219 Compare X8, 0
	220 JumpIfEqual {363}
	221 NotImplemented "Instruction LDRSW not yet implemented."
	222 Move W11, [X8+24]
	223 NotImplemented "Instruction CMP not yet implemented."
	224 Add W9, W10, 1
	225 Add X8, X8, X10
	226 Move [X0+24], W9
	227 Move [X8+32], X1
	228 Move X8, [X9+32]
	229 Move X8, [X8+192]
	230 Move X2, [X8+112]
	231 Call List`1<Object>.AddWithResize, X0, X1
	232 Move X8, [X20+48]
	233 Compare X8, 0
	234 JumpIfNotEqual {256}
	235 Move X0, [X20+40]
	236 Compare X0, 0
	237 JumpIfEqual {366}
	238 Move X1, X31
	239 Call ConnectionGroup.IsEmpty, X0
	240 Move TEMP, X0
	241 And TEMP, TEMP, 1
	242 Compare TEMP, 1
	243 JumpIfNotEqual {256}
	244 Move X8, [X20+56]
	245 Compare X8, 0
	246 JumpIfEqual {367}
	247 Move W8, [X8+24]
	248 Compare W8, 0
	249 JumpIfNotEqual {256}
	250 Move X8, [X20+64]
	251 Compare X8, 0
	252 JumpIfEqual {368}
	253 Move W8, [X8+24]
	254 Compare W8, 0
	255 JumpIfEqual {345}
	256 Move X24, [X19+40]
	257 Compare X24, 0
	258 JumpIfEqual {364}
	259 Move W8, [X24+24]
	260 NotImplemented "Instruction CMP not yet implemented."
	261 Move X26, 0xA96000
	262 Move X26, [X26+3872]
	263 Move W25, W31
	264 NotImplemented "Instruction CMP not yet implemented."
	265 Add X8, X24, W25
	266 Move X8, [X8+40]
	267 Compare X8, 0
	268 JumpIfEqual {338}
	269 Move X0, [X8+88]
	270 Compare X0, 0
	271 JumpIfEqual {339}
	272 Move X22, [X19+56]
	273 Move X1, [X26]
	274 Call 0x2851730, X0
	275 Move X1, X0
	276 Compare X22, 0
	277 JumpIfEqual {340}
	278 Move W10, [X22+28]
	279 Move X8, [X22+16]
	280 Move X9, [X23]
	281 Add W10, W10, 1
	282 Move [X22+28], W10
	283 Compare X8, 0
	284 JumpIfEqual {341}
	285 NotImplemented "Instruction LDRSW not yet implemented."
	286 Move W11, [X8+24]
	287 NotImplemented "Instruction CMP not yet implemented."
	288 Add W9, W10, 1
	289 Add X8, X8, X10
	290 Move [X22+24], W9
	291 Move [X8+32], X1
	292 Move X8, [X9+32]
	293 Move X8, [X8+192]
	294 Move X2, [X8+112]
	295 Move X0, X22
	296 Call List`1<Object>.AddWithResize, X0, X1
	297 Move W8, [X24+24]
	298 Add W25, W25, 1
	299 NotImplemented "Instruction CMP not yet implemented."
	300 Move X22, [X19+48]
	301 Compare X22, 0
	302 JumpIfEqual {365}
	303 Move X8, [X22+24]
	304 NotImplemented "Instruction CMP not yet implemented."
	305 Move X24, X31
	306 And X8, X8, 0
	307 Add X25, X22, 48
	308 NotImplemented "Instruction CMP not yet implemented."
	309 Move X0, [X19+56]
	310 Compare X0, 0
	311 JumpIfEqual {343}
	312 Move W10, [X0+28]
	313 Move X1, [X25]
	314 Move X8, [X0+16]
	315 Move X9, [X23]
	316 Add W10, W10, 1
	317 Move [X0+28], W10
	318 Compare X8, 0
	319 JumpIfEqual {344}
	320 NotImplemented "Instruction LDRSW not yet implemented."
	321 Move W11, [X8+24]
	322 NotImplemented "Instruction CMP not yet implemented."
	323 Add W9, W10, 1
	324 Add X8, X8, X10
	325 Move [X0+24], W9
	326 Move [X8+32], X1
	327 Move X8, [X9+32]
	328 Move X8, [X8+192]
	329 Move X2, [X8+112]
	330 Call List`1<Object>.AddWithResize, X0, X1
	331 Move W8, [X22+24]
	332 Add X24, X24, 1
	333 Add X25, X25, 24
	334 NotImplemented "Instruction CMP not yet implemented."
	335 Move X24, X31
	336 Move W22, 10
	337 Call 0x1C17F28
	338 Call 0x1C17F20
	339 Call 0x1C17F20
	340 Call 0x1C17F20
	341 Call 0x1C17F20
	342 Call 0x1C17F28
	343 Call 0x1C17F20
	344 Call 0x1C17F20
	345 Move X0, [X28]
	346 Move W8, [X0+224]
	347 Compare W8, 0
	348 JumpIfNotEqual {350}
	349 Call 0x1C17DFC
	350 Move X0, X31
	351 Call DateTime.get_UtcNow
	352 Move W8, 1
	353 Move X24, X31
	354 Move [X20+80], X0
	355 Move [X19+72], W8
	356 Call 0x1C17F20
	357 Call 0x1C17F20
	358 Call 0x1C17F20
	359 Call 0x1C17F20
	360 Call 0x1C17F20
	361 Call 0x1C17F20
	362 Call 0x1C17F20
	363 Call 0x1C17F20
	364 Call 0x1C17F20
	365 Call 0x1C17F20
	366 Call 0x1C17F20
	367 Call 0x1C17F20
	368 Call 0x1C17F20
	369 Move X28, 0xA4C000
	370 Move X28, [X28+2544]
	371 Move X22, X1
	372 Move X23, X0
	373 NotImplemented "Instruction CMP not yet implemented."
	374 Move X0, X23
	375 Call 0x3EB2AD0
	376 Move X24, [X0]
	377 Call 0x3EB2AE0
	378 Move W22, W31
	379 Move W8, [X31+12]
	380 Move TEMP, X8
	381 And TEMP, TEMP, -2147483648
	382 Compare TEMP, -2147483648
	383 JumpIfNotEqual {390}
	384 Move W8, [X31+36]
	385 Compare W8, 0
	386 JumpIfEqual {390}
	387 Move X0, X21
	388 Move X1, X31
	389 Call Monitor.Exit, X0
	390 Compare X24, 0
	391 JumpIfNotEqual {610}
	392 NotImplemented "Instruction CMP not yet implemented."
	393 Compare W22, 0
	394 JumpIfNotEqual {709}
	395 Move X8, 0xA4C000
	396 Move X8, [X8+1976]
	397 Move X21, [X19+56]
	398 Move X0, [X8]
	399 Move W8, [X0+224]
	400 Compare W8, 0
	401 JumpIfNotEqual {403}
	402 Call 0x1C17DFC
	403 Move X0, X21
	404 Move X1, X31
	405 Call Task.WhenAny, X0
	406 Compare X0, 0
	407 JumpIfEqual {612}
	408 Move X8, 0xA85000
	409 Move X8, [X8+504]
	410 Move X2, [X8]
	411 Move W1, W31
	412 Call Task`1<Object>.ConfigureAwait, X0, X1
	413 Move X8, 0xA85000
	414 Move X8, [X8+496]
	415 Move [X31+16], X0
	416 Move [X31+24], X1
	417 Move X8, [X8]
	418 Add X0, X31, 16
	419 Move X1, X8
	420 Call ConfiguredTaskAwaiter<Object>.get_IsCompleted, X0
	421 Move TEMP, X0
	422 And TEMP, TEMP, 1
	423 Compare TEMP, 1
	424 JumpIfNotEqual {573}
	425 Move X8, 0xA85000
	426 Move X8, [X8+488]
	427 Add X0, X31, 16
	428 Move X1, [X8]
	429 Call ConfiguredTaskAwaiter<Object>.GetResult, X0
	430 Compare X20, 0
	431 JumpIfEqual {609}
	432 Move X21, [X20+16]
	433 Move X22, X0
	434 Move [X31+36], W31
	435 Add X1, X31, 36
	436 Move X0, X21
	437 Move X2, X31
	438 Call Monitor.Enter, X0, X1
	439 Move X27, 0xA96000
	440 Move W8, [X19+72]
	441 Move X27, [X27+3848]
	442 Compare W8, 0
	443 JumpIfEqual {456}
	444 Move X0, [X19+64]
	445 Compare X0, 0
	446 JumpIfEqual {613}
	447 Move X8, 0xA56000
	448 Move X8, [X8+1936]
	449 Move X1, [X8]
	450 Call Task`1<Boolean>.get_Result, X0
	451 Move TEMP, X0
	452 And TEMP, TEMP, 1
	453 Compare TEMP, 1
	454 JumpIfNotEqual {504}
	455 Move W28, 1
	456 Move X0, [X19+56]
	457 Compare X0, 0
	458 JumpIfEqual {614}
	459 Move X2, [X27]
	460 Move W1, W31
	461 Call List`1<Object>.get_Item, X0, X1
	462 NotImplemented "Instruction CMP not yet implemented."
	463 NotImplemented "Instruction CSET not yet implemented."
	464 Move X8, [X19+40]
	465 Compare X8, 0
	466 JumpIfEqual {503}
	467 Move X25, 0xA96000
	468 Move X25, [X25+3816]
	469 Move X29, X31
	470 Move W26, W31
	471 Move W9, [X8+24]
	472 NotImplemented "Instruction CMP not yet implemented."
	473 NotImplemented "Instruction CMP not yet implemented."
	474 Add X9, X8, X29
	475 Move X23, [X9+40]
	476 Compare X23, 0
	477 JumpIfEqual {570}
	478 Move X10, [X23+88]
	479 Compare X10, 0
	480 JumpIfEqual {571}
	481 Move X10, [X10+24]
	482 Compare X10, 0
	483 JumpIfEqual {499}
	484 Move X0, [X20+56]
	485 Compare X0, 0
	486 JumpIfEqual {572}
	487 Move X24, [X9+32]
	488 Move X3, [X25]
	489 Move X1, X24
	490 Move X2, X23
	491 Call 0x2EEC0E4, X0, X1
	492 Move X0, X20
	493 Move X1, X24
	494 Move X2, X23
	495 Move X3, X31
	496 Call ServicePointScheduler.OperationCompleted, X0, X1, X2
	497 Move X8, [X19+40]
	498 Or W28, W28, W0
	499 Add W26, W26, 1
	500 Add X29, X29, 16
	501 Compare X8, 0
	502 JumpIfNotEqual {471}
	503 Call 0x1C17F20
	504 Move X0, X20
	505 Move X1, X31
	506 Call ServicePointScheduler.FinalCleanup, X0
	507 Move X24, X31
	508 Move W22, 16
	509 Move TEMP, X28
	510 And TEMP, TEMP, 1
	511 Compare TEMP, 1
	512 JumpIfNotEqual {516}
	513 Move X0, X20
	514 Move X1, X31
	515 Call ServicePointScheduler.RunSchedulerIteration, X0
	516 Move X28, 0xA4C000
	517 Move X28, [X28+2544]
	518 Move X23, X31
	519 Move TEMP, 0
	520 Not TEMP
	521 Move W24, TEMP
	522 Move X8, [X19+48]
	523 Compare X8, 0
	524 JumpIfEqual {606}
	525 Move W8, [X8+24]
	526 Add W9, W24, 1
	527 NotImplemented "Instruction CMP not yet implemented."
	528 Move X8, [X19+40]
	529 Compare X8, 0
	530 JumpIfEqual {607}
	531 Move X0, [X19+56]
	532 Compare X0, 0
	533 JumpIfEqual {608}
	534 Move W8, [X8+24]
	535 Move X2, [X27]
	536 Add W8, W24, W8
	537 Add W1, W8, 2
	538 Call List`1<Object>.get_Item, X0, X1
	539 Add X23, X23, 24
	540 NotImplemented "Instruction CMP not yet implemented."
	541 Add W24, W24, 1
	542 Move X8, [X19+48]
	543 Compare X8, 0
	544 JumpIfEqual {615}
	545 Move W9, [X8+24]
	546 NotImplemented "Instruction CMP not yet implemented."
	547 Move X0, [X20+64]
	548 Compare X0, 0
	549 JumpIfEqual {617}
	550 Move X9, 0xA96000
	551 Move X9, [X9+3824]
	552 Add X8, X8, X23
	553 Move X23, [X8+8]
	554 Move X22, [X8+16]
	555 Move X8, [X8+24]
	556 Move X2, [X9]
	557 Move [X31+40], X23
	558 Move [X31+48], X22
	559 Move [X31+56], X8
	560 Add X1, X31, 40
	561 Call LinkedList`1<ValueTuple`3<Object, Object, Object>>.Remove, X0, X1
	562 Move X0, X20
	563 Move X1, X23
	564 Move X2, X22
	565 Move X3, X31
	566 Call ServicePointScheduler.CloseIdleConnection, X0, X1, X2
	567 Move X24, X31
	568 Move W22, 26
	569 Call 0x1C17F28
	570 Call 0x1C17F20
	571 Call 0x1C17F20
	572 Call 0x1C17F20
	573 Move [X19], W31
	574 Move V0, [X31+1]
	575 Move X8, 0xA4E000
	576 Move [X19+5], V0
	577 Move X8, [X8+640]
	578 Move X0, [X8]
	579 Move W8, [X0+224]
	580 Compare W8, 0
	581 JumpIfNotEqual {583}
	582 Call 0x1C17DFC
	583 Move X8, 0xA96000
	584 Move X8, [X8+3792]
	585 Add X0, X19, 8
	586 Move X3, [X8]
	587 Add X1, X31, 16
	588 Move X2, X19
	589 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	590 Move X24, X31
	591 Move W8, [X31+12]
	592 Move TEMP, X8
	593 And TEMP, TEMP, -2147483648
	594 Compare TEMP, -2147483648
	595 JumpIfNotEqual {602}
	596 Move W8, [X31+36]
	597 Compare W8, 0
	598 JumpIfEqual {602}
	599 Move X0, X21
	600 Move X1, X31
	601 Call Monitor.Exit, X0
	602 Compare X24, 0
	603 JumpIfEqual {678}
	604 Move X0, X24
	605 Call 0x1C17F18
	606 Call 0x1C17F20
	607 Call 0x1C17F20
	608 Call 0x1C17F20
	609 Call 0x1C17F20
	610 Move X0, X24
	611 Call 0x1C17F18
	612 Call 0x1C17F20
	613 Call 0x1C17F20
	614 Call 0x1C17F20
	615 Call 0x1C17F20
	616 Call 0x1C17F28
	617 Call 0x1C17F20
	618 Move X22, X1
	619 Move X23, X0
	620 Move X22, X1
	621 Move X23, X0
	622 NotImplemented "Instruction CMP not yet implemented."
	623 Move X0, X23
	624 Call 0x3EB2AD0
	625 Move X24, [X0]
	626 Call 0x3EB2AE0
	627 Move X28, 0xA4B000
	628 Move X28, [X28+2544]
	629 Move W22, W31
	630 Move W8, [X31+12]
	631 Move TEMP, X8
	632 And TEMP, TEMP, -2147483648
	633 Compare TEMP, -2147483648
	634 JumpIfNotEqual {641}
	635 Move W8, [X31+36]
	636 Compare W8, 0
	637 JumpIfEqual {641}
	638 Move X0, X21
	639 Move X1, X31
	640 Call Monitor.Exit, X0
	641 Compare X24, 0
	642 JumpIfNotEqual {723}
	643 Compare W22, 0
	644 JumpIfEqual {646}
	645 NotImplemented "Instruction CMP not yet implemented."
	646 NotImplemented "Instruction MOVI not yet implemented."
	647 Move [X19+56], V0
	648 Move [X19+40], V0
	649 NotImplemented "Instruction CMP not yet implemented."
	650 Move TEMP, 1
	651 Not TEMP
	652 Move W8, TEMP
	653 Move [X19+8], W8
	654 Move X8, 0xA4D000
	655 Move X8, [X8+640]
	656 Move X0, [X8]
	657 Move W8, [X0+224]
	658 Compare W8, 0
	659 JumpIfNotEqual {661}
	660 Call 0x1C17DFC
	661 Move X0, X19
	662 Move X1, X31
	663 Call AsyncTaskMethodBuilder.SetResult, X0
	664 Move X24, X31
	665 Move W8, [X31+12]
	666 Move TEMP, X8
	667 And TEMP, TEMP, -2147483648
	668 Compare TEMP, -2147483648
	669 JumpIfNotEqual {676}
	670 Move W8, [X31+36]
	671 Compare W8, 0
	672 JumpIfEqual {676}
	673 Move X0, X21
	674 Move X1, X31
	675 Call Monitor.Exit, X0
	676 Compare X24, 0
	677 JumpIfNotEqual {733}
	678 NotImplemented "Instruction CMP not yet implemented."
	679 Move X0, X23
	680 Call 0x3EB2AD0
	681 Move X20, X0
	682 Move X0, 0xA4A000
	683 Move X0, [X0+2000]
	684 Call 0x1C17D08
	685 Move X8, [X20]
	686 Move X1, [X8]
	687 Call 0x1C18270
	688 Move TEMP, X0
	689 And TEMP, TEMP, 1
	690 Compare TEMP, 1
	691 JumpIfNotEqual {725}
	692 Move X20, [X20]
	693 Call 0x3EB2AE0
	694 Move TEMP, 1
	695 Not TEMP
	696 Move W8, TEMP
	697 Move [X19+8], W8
	698 Move X0, 0xA4D000
	699 Move X0, [X0+640]
	700 Call 0x1C17D08
	701 Move W8, [X0+224]
	702 Compare W8, 0
	703 JumpIfNotEqual {705}
	704 Call 0x1C17DFC
	705 Move X0, X19
	706 Move X1, X20
	707 Move X2, X31
	708 Call AsyncTaskMethodBuilder.SetException, X0, X1
	709 Move X20, [X31+144]
	710 Move X19, [X31+152]
	711 Move X22, [X31+128]
	712 Move X21, [X31+136]
	713 Move X24, [X31+112]
	714 Move X23, [X31+120]
	715 Move X26, [X31+96]
	716 Move X25, [X31+104]
	717 Move X28, [X31+80]
	718 Move X27, [X31+88]
	719 Move X29, [X31+64]
	720 Move X30, [X31+72]
	721 Add X31, X31, 160
	722 Return 
	723 Move X0, X24
	724 Call 0x1C17F18
	725 Move W0, 8
	726 Call 0x3EB2AF0
	727 Move X8, [X20]
	728 Move [X0], X8
	729 Move X1, 0x80B000
	730 Add X1, X1, 3672
	731 Move X2, X31
	732 Call 0x3EB2B00
	733 Move X0, X24
	734 Call 0x1C17F18
	735 Move X23, X0
	736 Call 0x3EB2AE0
	737 Move X0, X23
	738 Call 0x1D2D690
	739 Call 0x1991590
	740 Move X22, X1
	741 Move X23, X0
	742 Move X22, X1
	743 Move X23, X0

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x036AA250 ADD X0, X8, 0x138
	0x036AA254 LDP X8, X2, [X0]
	0x036AA258 MOV X0, X22
	0x036AA25C MOV X1, X23
	0x036AA260 BLR X8
	0x036AA264 TBZ X0, 0x0, 0x36AA280
	0x036AA268 LDR X8, [X20]
	0x036AA26C LDR X1, [X8 + 0x230]
	0x036AA270 LDR X9, [X8 + 0x228]
	0x036AA274 MOV X0, X20
	0x036AA278 BLR X9
	0x036AA27C B 0x36AA2F8
	0x036AA280 LDR X8, [X20]
	0x036AA284 LDR X1, [X8 + 0x260]
	0x036AA288 LDR X9, [X8 + 0x258]
	0x036AA28C MOV X0, X20
	0x036AA290 BLR X9
	0x036AA294 MOV X22, X0
	0x036AA298 CBZ X0, 0x36AA464
	0x036AA29C LDR X8, [X22]
	0x036AA2A0 LDR X1, [X24]
	0x036AA2A4 LDRH W9, [X8 + 0x12E]
	0x036AA2A8 CBZ X9, 0x36AA2CC
	0x036AA2AC LDR X10, [X8 + 0xB0]
	0x036AA2B0 ADD X10, X10, 0x8
	0x036AA2B4 LDUR X11, [X10 - 0x8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xD37000
	007 Move X22, 0xA4D000
	008 Move W8, [X21+2344]
	009 Move X22, [X22+640]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xA4D000
	017 Move X0, [X0+640]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2344], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Add X0, X20, 8
	027 Move X1, X19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X2, X31
	033 Move X30, [X31+48]
	034 Call AsyncTaskMethodBuilder.SetStateMachine, X0, X1
	035 Return 

