Type: System.Net.DigestSession

Method: System.Void .cctor()

Disassembly:
	0x03699E94 LDR X10, [X10 + 0xDB8]
	0x03699E98 MOV X19, X0
	0x03699E9C LDRH W9, [X8 + 0x12E]
	0x03699EA0 LDR X1, [X10]
	0x03699EA4 CBZ X9, 0x3699EC8
	0x03699EA8 LDR X10, [X8 + 0xB0]
	0x03699EAC ADD X10, X10, 0x8
	0x03699EB0 LDUR X11, [X10 - 0x8]
	0x03699EB4 CMP X11, X1
	0x03699EB8 B.EQ 0x3699ED8
	0x03699EBC SUBS X9, X9, 0x1
	0x03699EC0 ADD X10, X10, 0x10
	0x03699EC4 B.NE 0x3699EB0
	0x03699EC8 MOV X0, X19
	0x03699ECC MOV W2, W31
	0x03699ED0 BL 0x1C5C788
	0x03699ED4 B 0x3699EE4
	0x03699ED8 LDRSW X9, [X10]
	0x03699EDC ADD X8, X8, X9, 0x4, LSL
	0x03699EE0 ADD X0, X8, 0x138

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xD48000
	005 Move X19, 0xAA6000
	006 Move W8, [X20+2199]
	007 Move X19, [X19+1584]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xAA6000
	013 Move X0, [X0+1584]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+2199], W8
	017 Move X0, X31
	018 Call RandomNumberGenerator.Create
	019 Move X8, [X19]
	020 Move X20, [X31+16]
	021 Move X19, [X31+24]
	022 Move X8, [X8+184]
	023 Move [X8], X0
	024 Move X30, [X31+32]
	025 Return 

Method: System.Void .ctor()

Disassembly:
	0x03699EE4 LDP X8, X1, [X0]
	0x03699EE8 MOV X0, X19
	0x03699EEC BLR X8
	0x03699EF0 MOV X20, X0
	0x03699EF4 CBZ X0, 0x369A3F0
	0x03699EF8 STR X31, [X31 + 0x8]
	0x03699EFC ADRP X27, 0xA5A000
	0x03699F00 ADRP X28, 0xA5A000
	0x03699F04 ADRP X29, 0xAA5000
	0x03699F08 LDR X27, [X27 + 0xE18]
	0x03699F0C LDR X28, [X28 + 0x758]
	0x03699F10 LDR X29, [X29 + 0x630]
	0x03699F14 LDR X8, [X20]
	0x03699F18 LDR X1, [X27]
	0x03699F1C LDRH W9, [X8 + 0x12E]
	0x03699F20 CBZ X9, 0x3699F44
	0x03699F24 LDR X10, [X8 + 0xB0]
	0x03699F28 ADD X10, X10, 0x8
	0x03699F2C LDUR X11, [X10 - 0x8]
	0x03699F30 CMP X11, X1
	0x03699F34 B.EQ 0x3699F54
	0x03699F38 SUBS X9, X9, 0x1
	0x03699F3C ADD X10, X10, 0x10
	0x03699F40 B.NE 0x3699F2C
	0x03699F44 MOV X0, X20
	0x03699F48 MOV W2, W31
	0x03699F4C BL 0x1C5C788
	0x03699F50 B 0x3699F60

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xD48000
	006 Move X20, 0xA5C000
	007 Move W8, [X21+2200]
	008 Move X20, [X20+2544]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xA5C000
	015 Move X0, [X0+2544]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2200], W8
	019 Move X0, X19
	020 Move X1, X31
	021 Call Object..ctor, X0
	022 Move W8, 1
	023 Move [X19+24], W8
	024 Move X0, [X20]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Move X0, X31
	030 Call DateTime.get_UtcNow
	031 Move [X19+16], X0
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X30, [X31+32]
	035 Move X21, [X31+40]
	036 Return 

Method: System.String get_Algorithm()

Disassembly:
	0x03699F54 LDRSW X9, [X10]
	0x03699F58 ADD X8, X8, X9, 0x4, LSL
	0x03699F5C ADD X0, X8, 0x138
	0x03699F60 LDP X8, X1, [X0]
	0x03699F64 MOV X0, X20
	0x03699F68 BLR X8

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+40]
	003 Compare X0, 0
	004 JumpIfEqual {8}
	005 Move X30, [X31+16]
	006 Call DigestHeaderParser.get_Algorithm, X0
	007 Return X0
	008 Call 0x1C17F20

Method: System.String get_Realm()

Disassembly:
	0x03699F6C TBZ X0, 0x0, 0x369A148
	0x03699F70 LDR X8, [X20]
	0x03699F74 LDR X1, [X27]
	0x03699F78 LDRH W9, [X8 + 0x12E]
	0x03699F7C CBZ X9, 0x3699FA0
	0x03699F80 LDR X10, [X8 + 0xB0]

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+40]
	003 Compare X0, 0
	004 JumpIfEqual {8}
	005 Move X30, [X31+16]
	006 Call DigestHeaderParser.get_Realm, X0
	007 Return X0
	008 Call 0x1C17F20

Method: System.String get_Nonce()

Disassembly:
	0x03699F84 ADD X10, X10, 0x8
	0x03699F88 LDUR X11, [X10 - 0x8]
	0x03699F8C CMP X11, X1
	0x03699F90 B.EQ 0x3699FB0
	0x03699F94 SUBS X9, X9, 0x1
	0x03699F98 ADD X10, X10, 0x10

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+40]
	003 Compare X0, 0
	004 JumpIfEqual {8}
	005 Move X30, [X31+16]
	006 Call DigestHeaderParser.get_Nonce, X0
	007 Return X0
	008 Call 0x1C17F20

Method: System.String get_Opaque()

Disassembly:
	0x03699F9C B.NE 0x3699F88
	0x03699FA0 MOVZ W2, 0x1
	0x03699FA4 MOV X0, X20
	0x03699FA8 BL 0x1C5C788
	0x03699FAC B 0x3699FC0
	0x03699FB0 LDR W9, [X10]

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+40]
	003 Compare X0, 0
	004 JumpIfEqual {8}
	005 Move X30, [X31+16]
	006 Call DigestHeaderParser.get_Opaque, X0
	007 Return X0
	008 Call 0x1C17F20

Method: System.String get_QOP()

Disassembly:
	0x03699FB4 ADD W9, W9, 0x1
	0x03699FB8 ADD X8, X8, W9, 0x4, SXTW
	0x03699FBC ADD X0, X8, 0x138
	0x03699FC0 LDP X8, X1, [X0]
	0x03699FC4 MOV X0, X20
	0x03699FC8 BLR X8

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+40]
	003 Compare X0, 0
	004 JumpIfEqual {8}
	005 Move X30, [X31+16]
	006 Call DigestHeaderParser.get_QOP, X0
	007 Return X0
	008 Call 0x1C17F20

Method: System.String get_CNonce()

Disassembly:
	0x03699FCC CBZ X0, 0x369A3D8
	0x03699FD0 LDR X8, [X0]
	0x03699FD4 LDR X1, [X28]
	0x03699FD8 LDR X8, [X8 + 0x40]
	0x03699FDC LDR X9, [X1 + 0x40]
	0x03699FE0 CMP X8, X9
	0x03699FE4 B.NE 0x369A3D4
	0x03699FE8 BL 0x1C16E08
	0x03699FEC MOV X8, X0
	0x03699FF0 LDR X0, [X25]
	0x03699FF4 LDR W19, [X8]
	0x03699FF8 LDR W9, [X0 + 0xE0]
	0x03699FFC CBNZ W9, 0x369A008
	0x0369A000 BL 0x1C16DFC
	0x0369A004 LDR X0, [X25]
	0x0369A008 LDR X8, [X0 + 0xB8]
	0x0369A00C LDR X0, [X28]
	0x0369A010 LDR X23, [X8]
	0x0369A014 STR W19, [X31 + 0x1C]
	0x0369A018 ADD X1, X31, 0x1C
	0x0369A01C BL 0x1C16E04
	0x0369A020 MOV X1, X0
	0x0369A024 CBZ X23, 0x369A3DC
	0x0369A028 LDR X8, [X23]
	0x0369A02C LDR X9, [X8 + 0x2D8]
	0x0369A030 LDR X2, [X8 + 0x2E0]
	0x0369A034 MOV X0, X23
	0x0369A038 BLR X9
	0x0369A03C MOV X23, X0
	0x0369A040 CBZ X0, 0x369A3D0
	0x0369A044 LDR X8, [X23]
	0x0369A048 LDR X1, [X29]
	0x0369A04C LDRB W10, [X8 + 0x130]
	0x0369A050 LDRB W9, [X1 + 0x130]
	0x0369A054 CMP W10, W9
	0x0369A058 B.CC 0x369A3C8
	0x0369A05C LDR X8, [X8 + 0xC8]
	0x0369A060 ADD X8, X8, X9, 0x3, LSL
	0x0369A064 LDUR X8, [X8 - 0x8]
	0x0369A068 CMP X8, X1
	0x0369A06C B.NE 0x369A3C8
	0x0369A070 LDR X0, [X26]
	0x0369A074 LDR X24, [X23 + 0x10]
	0x0369A078 LDR W8, [X0 + 0xE0]
	0x0369A07C CBNZ W8, 0x369A084
	0x0369A080 BL 0x1C16DFC
	0x0369A084 MOV X0, X24
	0x0369A088 MOV X1, X21
	0x0369A08C MOV X2, X31
	0x0369A090 BL 0x3363148
	0x0369A094 TBZ X0, 0x0, 0x3699F14
	0x0369A098 LDR X0, [X26]
	0x0369A09C LDR X24, [X23 + 0x10]
	0x0369A0A0 LDR W8, [X0 + 0xE0]
	0x0369A0A4 CBNZ W8, 0x369A0AC
	0x0369A0A8 BL 0x1C16DFC
	0x0369A0AC MOV X0, X24
	0x0369A0B0 MOV X1, X22
	0x0369A0B4 MOV X2, X31
	0x0369A0B8 BL 0x3363010
	0x0369A0BC ADRP X8, 0xA5B000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xD48000
	006 Move W8, [X20+2201]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {23}
	012 Move X0, 0xA5B000
	013 Move X0, [X0+1560]
	014 Call 0x1C17CF4
	015 Move X0, 0xA64000
	016 Move X0, [X0+2536]
	017 Call 0x1C17CF4
	018 Move X0, 0xAA6000
	019 Move X0, [X0+1584]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X20+2201], W8
	023 Move X0, [X19+48]
	024 Compare X0, 0
	025 JumpIfNotEqual {69}
	026 Move X8, 0xA5A000
	027 Move X8, [X8+1560]
	028 Move W1, 15
	029 Move X0, [X8]
	030 Call 0x1C17D6C
	031 Move X21, 0xAA5000
	032 Move X21, [X21+1584]
	033 Move X20, X0
	034 Move X8, [X21]
	035 Move W9, [X8+224]
	036 Compare W9, 0
	037 JumpIfNotEqual {41}
	038 Move X0, X8
	039 Call 0x1C17DFC
	040 Move X8, [X21]
	041 Move X8, [X8+184]
	042 Move X0, [X8]
	043 Compare X0, 0
	044 JumpIfEqual {74}
	045 Move X8, [X0]
	046 Move X1, X20
	047 Move X9, [X8+408]
	048 Move X2, [X8+416]
	049 NotImplemented "Instruction BLR not yet implemented."
	050 Move X8, 0xA63000
	051 Move X8, [X8+2536]
	052 Move X0, [X8]
	053 Move W8, [X0+224]
	054 Compare W8, 0
	055 JumpIfNotEqual {57}
	056 Call 0x1C17DFC
	057 Move X0, X20
	058 Move X1, X31
	059 Call Convert.ToBase64String, X0
	060 Move [X19+48], X0
	061 Compare X20, 0
	062 JumpIfEqual {74}
	063 Move W2, [X20+24]
	064 Move X0, X20
	065 Move W1, W31
	066 Move X3, X31
	067 Call Array.Clear, X0, X1, X2
	068 Move X0, [X19+48]
	069 Move X20, [X31+16]
	070 Move X19, [X31+24]
	071 Move X30, [X31+32]
	072 Move X21, [X31+40]
	073 Return X0
	074 Call 0x1C17F20

Method: System.Boolean Parse(System.String challenge)

Disassembly:
	0x0369A0C0 LDR X8, [X8 + 0x570]
	0x0369A0C4 MOV X24, X0
	0x0369A0C8 LDR X0, [X8]
	0x0369A0CC LDR W8, [X0 + 0xE0]
	0x0369A0D0 CBNZ W8, 0x369A0D8
	0x0369A0D4 BL 0x1C16DFC
	0x0369A0D8 MOVZ X8, 0xBC01
	0x0369A0DC MOVK X8, 0x65A00000
	0x0369A0E0 MOVK X8, 0x1
	0x0369A0E4 CMP X24, X8
	0x0369A0E8 B.LT 0x3699F14
	0x0369A0EC LDR X21, [X23 + 0x10]
	0x0369A0F0 LDR X23, [X31 + 0x8]
	0x0369A0F4 CBNZ X23, 0x369A114
	0x0369A0F8 ADRP X8, 0xA86000
	0x0369A0FC LDR X8, [X8 + 0xBA0]
	0x0369A100 LDR X0, [X8]
	0x0369A104 BL 0x1C16F10
	0x0369A108 MOV X23, X0
	0x0369A10C MOV X1, X31
	0x0369A110 BL 0x3351F5C
	0x0369A114 LDR X0, [X28]
	0x0369A118 STR W19, [X31 + 0x18]
	0x0369A11C ADD X1, X31, 0x18
	0x0369A120 STR X23, [X31 + 0x8]
	0x0369A124 BL 0x1C16E04
	0x0369A128 MOV X1, X0
	0x0369A12C CBZ X23, 0x369A3FC
	0x0369A130 LDR X8, [X23]
	0x0369A134 LDR X9, [X8 + 0x308]
	0x0369A138 LDR X2, [X8 + 0x310]
	0x0369A13C MOV X0, X23
	0x0369A140 BLR X9
	0x0369A144 B 0x3699F14
	0x0369A148 MOV X22, X31
	0x0369A14C MOVZ W19, 0x6
	0x0369A150 ADRP X23, 0xA59000
	0x0369A154 LDR X23, [X23 + 0xE00]
	0x0369A158 MOV X0, X20
	0x0369A15C LDR X1, [X23]
	0x0369A160 BL 0x1C16E00
	0x0369A164 CBZ X0, 0x369A1C4
	0x0369A168 LDR X8, [X0]
	0x0369A16C LDR X1, [X23]
	0x0369A170 MOV X20, X0
	0x0369A174 LDRH W9, [X8 + 0x12E]
	0x0369A178 CBZ X9, 0x369A19C
	0x0369A17C LDR X10, [X8 + 0xB0]
	0x0369A180 ADD X10, X10, 0x8
	0x0369A184 LDUR X11, [X10 - 0x8]
	0x0369A188 CMP X11, X1
	0x0369A18C B.EQ 0x369A1AC
	0x0369A190 SUBS X9, X9, 0x1
	0x0369A194 ADD X10, X10, 0x10
	0x0369A198 B.NE 0x369A184

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xD47000
	007 Move X22, 0xAA5000
	008 Move W8, [X21+2202]
	009 Move X22, [X22+1544]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xAA5000
	017 Move X0, [X0+1544]
	018 Call 0x1C17CF4
	019 Move X0, 0xA87000
	020 Move X0, [X0+3408]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X21+2202], W8
	024 Move X0, [X22]
	025 Call 0x1C17F10
	026 Move X1, X20
	027 Move X21, X0
	028 Call DigestHeaderParser..ctor, X0, X1
	029 Move [X19+40], X21
	030 Compare X21, 0
	031 JumpIfEqual {74}
	032 Move X0, X21
	033 Call DigestHeaderParser.Parse, X0
	034 Move W20, W0
	035 Move TEMP, X0
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfNotEqual {67}
	039 Move X0, [X19+40]
	040 Compare X0, 0
	041 JumpIfEqual {74}
	042 Call DigestHeaderParser.get_Algorithm, X0
	043 Compare X0, 0
	044 JumpIfEqual {64}
	045 Move X0, [X19+40]
	046 Compare X0, 0
	047 JumpIfEqual {74}
	048 Call DigestHeaderParser.get_Algorithm, X0
	049 Compare X0, 0
	050 JumpIfEqual {74}
	051 Move X1, X31
	052 Call String.ToUpper, X0
	053 Compare X0, 0
	054 JumpIfEqual {74}
	055 Move X8, 0xA87000
	056 Move X8, [X8+3408]
	057 Move X2, X31
	058 Move X1, [X8]
	059 Call String.StartsWith, X0, X1
	060 Move TEMP, X0
	061 And TEMP, TEMP, 1
	062 Compare TEMP, 1
	063 JumpIfNotEqual {67}
	064 Move X0, X31
	065 Call MD5.Create
	066 Move [X19+32], X0
	067 And W0, W20, 1
	068 Move X20, [X31+32]
	069 Move X19, [X31+40]
	070 Move X22, [X31+16]
	071 Move X21, [X31+24]
	072 Move X30, [X31+48]
	073 Return X0
	074 Call 0x1C17F20

Method: System.String HashToHexString(System.String toBeHashed)

Disassembly:
	0x0369A19C MOV X0, X20
	0x0369A1A0 MOV W2, W31
	0x0369A1A4 BL 0x1C5C788
	0x0369A1A8 B 0x369A1B8
	0x0369A1AC LDRSW X9, [X10]
	0x0369A1B0 ADD X8, X8, X9, 0x4, LSL
	0x0369A1B4 ADD X0, X8, 0x138
	0x0369A1B8 LDP X8, X1, [X0]
	0x0369A1BC MOV X0, X20
	0x0369A1C0 BLR X8
	0x0369A1C4 CBNZ X22, 0x369A3F4
	0x0369A1C8 CMP W19, 0x6
	0x0369A1CC B.EQ 0x369A1D4
	0x0369A1D0 CBNZ W19, 0x369A3A8
	0x0369A1D4 LDR X8, [X31 + 0x8]
	0x0369A1D8 CBZ X8, 0x369A3A8
	0x0369A1DC LDR X0, [X31 + 0x8]
	0x0369A1E0 LDR X8, [X0]
	0x0369A1E4 LDR X9, [X8 + 0x388]
	0x0369A1E8 LDR X1, [X8 + 0x390]
	0x0369A1EC BLR X9
	0x0369A1F0 MOV X19, X0
	0x0369A1F4 CBZ X0, 0x369A400
	0x0369A1F8 ADRP X21, 0xA59000
	0x0369A1FC ADRP X22, 0xA59000
	0x0369A200 LDR X21, [X21 + 0xE18]
	0x0369A204 LDR X22, [X22 + 0x758]
	0x0369A208 LDR X8, [X19]
	0x0369A20C LDR X1, [X21]
	0x0369A210 LDRH W9, [X8 + 0x12E]
	0x0369A214 CBZ X9, 0x369A238
	0x0369A218 LDR X10, [X8 + 0xB0]
	0x0369A21C ADD X10, X10, 0x8
	0x0369A220 LDUR X11, [X10 - 0x8]
	0x0369A224 CMP X11, X1
	0x0369A228 B.EQ 0x369A248
	0x0369A22C SUBS X9, X9, 0x1
	0x0369A230 ADD X10, X10, 0x10
	0x0369A234 B.NE 0x369A220
	0x0369A238 MOV X0, X19
	0x0369A23C MOV W2, W31
	0x0369A240 BL 0x1C5C788
	0x0369A244 B 0x369A254
	0x0369A248 LDRSW X9, [X10]
	0x0369A24C ADD X8, X8, X9, 0x4, LSL
	0x0369A250 ADD X0, X8, 0x138
	0x0369A254 LDP X8, X1, [X0]
	0x0369A258 MOV X0, X19
	0x0369A25C BLR X8
	0x0369A260 TBZ X0, 0x0, 0x369A334
	0x0369A264 LDR X8, [X19]
	0x0369A268 LDR X1, [X21]
	0x0369A26C LDRH W9, [X8 + 0x12E]
	0x0369A270 CBZ X9, 0x369A294
	0x0369A274 LDR X10, [X8 + 0xB0]
	0x0369A278 ADD X10, X10, 0x8
	0x0369A27C LDUR X11, [X10 - 0x8]
	0x0369A280 CMP X11, X1
	0x0369A284 B.EQ 0x369A2A4
	0x0369A288 SUBS X9, X9, 0x1
	0x0369A28C ADD X10, X10, 0x10
	0x0369A290 B.NE 0x369A27C
	0x0369A294 MOVZ W2, 0x1
	0x0369A298 MOV X0, X19
	0x0369A29C BL 0x1C5C788
	0x0369A2A0 B 0x369A2B4
	0x0369A2A4 LDR W9, [X10]
	0x0369A2A8 ADD W9, W9, 0x1
	0x0369A2AC ADD X8, X8, W9, 0x4, SXTW
	0x0369A2B0 ADD X0, X8, 0x138
	0x0369A2B4 LDP X8, X1, [X0]
	0x0369A2B8 MOV X0, X19
	0x0369A2BC BLR X8
	0x0369A2C0 CBZ X0, 0x369A3E0
	0x0369A2C4 LDR X8, [X0]
	0x0369A2C8 LDR X1, [X22]
	0x0369A2CC LDR X8, [X8 + 0x40]
	0x0369A2D0 LDR X9, [X1 + 0x40]
	0x0369A2D4 CMP X8, X9
	0x0369A2D8 B.NE 0x369A3E8
	0x0369A2DC BL 0x1C16E08
	0x0369A2E0 MOV X8, X0
	0x0369A2E4 LDR X0, [X25]
	0x0369A2E8 LDR W24, [X8]
	0x0369A2EC LDR W9, [X0 + 0xE0]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0xD47000
	009 Move W8, [X21+2203]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xA5A000
	017 Move X0, [X0+2288]
	018 Call 0x1C17CF4
	019 Move X0, 0xA8D000
	020 Move X0, [X0+848]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X21+2203], W8
	024 Move [X31+12], W31
	025 Move X0, [X20+32]
	026 Compare X0, 0
	027 JumpIfEqual {89}
	028 Move X8, [X0]
	029 Move X9, [X8+600]
	030 Move X1, [X8+608]
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X20+32]
	033 Move X0, X31
	034 Call Encoding.get_ASCII
	035 Compare X0, 0
	036 JumpIfEqual {97}
	037 Move X8, [X0]
	038 Move X1, X19
	039 Move X9, [X8+616]
	040 Move X2, [X8+624]
	041 NotImplemented "Instruction BLR not yet implemented."
	042 Compare X20, 0
	043 JumpIfEqual {97}
	044 Move X19, 0xA5A000
	045 Move X19, [X19+2288]
	046 Move X1, X0
	047 Move X0, X20
	048 Move X2, X31
	049 Call HashAlgorithm.ComputeHash, X0, X1
	050 Move X8, [X19]
	051 Move X20, X0
	052 Move X0, X8
	053 Call 0x1C17F10
	054 Move X1, X31
	055 Move X19, X0
	056 Call StringBuilder..ctor, X0
	057 Compare X20, 0
	058 JumpIfEqual {97}
	059 Move X8, [X20+24]
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Move X23, 0xA8D000
	062 Move X23, [X23+848]
	063 Move X21, X31
	064 And X8, X8, 0
	065 Add X22, X20, 32
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Move W8, [X22]
	068 Move X1, [X23]
	069 Add X0, X31, 12
	070 Move X2, X31
	071 Move [X31+12], W8
	072 Call Byte.ToString, X0, X1
	073 Compare X19, 0
	074 JumpIfEqual {97}
	075 Move X1, X0
	076 Move X0, X19
	077 Move X2, X31
	078 Call StringBuilder.Append, X0, X1
	079 Move W8, [X20+24]
	080 Add X21, X21, 1
	081 NotImplemented "Instruction CMP not yet implemented."
	082 Compare X19, 0
	083 JumpIfEqual {97}
	084 Move X8, [X19]
	085 Move X0, X19
	086 Move X9, [X8+360]
	087 Move X1, [X8+368]
	088 NotImplemented "Instruction BLR not yet implemented."
	089 Move X20, [X31+48]
	090 Move X19, [X31+56]
	091 Move X22, [X31+32]
	092 Move X21, [X31+40]
	093 Move X30, [X31+16]
	094 Move X23, [X31+24]
	095 Add X31, X31, 64
	096 Return X0
	097 Call 0x1C17F20
	098 Call 0x1C17F28

Method: System.String HA1(System.String username, System.String password)

Disassembly:
	0x0369A2F0 CBNZ W9, 0x369A2FC
	0x0369A2F4 BL 0x1C16DFC
	0x0369A2F8 LDR X0, [X25]
	0x0369A2FC LDR X8, [X0 + 0xB8]
	0x0369A300 LDR X0, [X22]
	0x0369A304 LDR X20, [X8]
	0x0369A308 STR W24, [X31 + 0x14]
	0x0369A30C ADD X1, X31, 0x14
	0x0369A310 BL 0x1C16E04
	0x0369A314 MOV X1, X0
	0x0369A318 CBZ X20, 0x369A3E4
	0x0369A31C LDR X8, [X20]
	0x0369A320 LDR X9, [X8 + 0x358]
	0x0369A324 LDR X2, [X8 + 0x360]
	0x0369A328 MOV X0, X20
	0x0369A32C BLR X9
	0x0369A330 B 0x369A208
	0x0369A334 MOV X20, X31
	0x0369A338 LDR X1, [X23]
	0x0369A33C MOV X0, X19
	0x0369A340 BL 0x1C16E00
	0x0369A344 CBZ X0, 0x369A3A4
	0x0369A348 LDR X8, [X0]
	0x0369A34C LDR X1, [X23]
	0x0369A350 MOV X19, X0
	0x0369A354 LDRH W9, [X8 + 0x12E]
	0x0369A358 CBZ X9, 0x369A37C
	0x0369A35C LDR X10, [X8 + 0xB0]
	0x0369A360 ADD X10, X10, 0x8
	0x0369A364 LDUR X11, [X10 - 0x8]
	0x0369A368 CMP X11, X1
	0x0369A36C B.EQ 0x369A38C
	0x0369A370 SUBS X9, X9, 0x1
	0x0369A374 ADD X10, X10, 0x10
	0x0369A378 B.NE 0x369A364
	0x0369A37C MOV X0, X19
	0x0369A380 MOV W2, W31
	0x0369A384 BL 0x1C5C788
	0x0369A388 B 0x369A398
	0x0369A38C LDRSW X9, [X10]
	0x0369A390 ADD X8, X8, X9, 0x4, LSL
	0x0369A394 ADD X0, X8, 0x138
	0x0369A398 LDP X8, X1, [X0]
	0x0369A39C MOV X0, X19
	0x0369A3A0 BLR X8
	0x0369A3A4 CBNZ X20, 0x369A404
	0x0369A3A8 LDP X20, X19, [X31 + 0x70]
	0x0369A3AC LDP X22, X21, [X31 + 0x60]
	0x0369A3B0 LDP X24, X23, [X31 + 0x50]
	0x0369A3B4 LDP X26, X25, [X31 + 0x40]
	0x0369A3B8 LDP X28, X27, [X31 + 0x30]
	0x0369A3BC LDP X29, X30, [X31 + 0x20]
	0x0369A3C0 ADD X31, X31, 0x80
	0x0369A3C4 RET
	0x0369A3C8 MOV X0, X23
	0x0369A3CC BL 0x1C171E0
	0x0369A3D0 BL 0x1C16F20
	0x0369A3D4 BL 0x1C171E0
	0x0369A3D8 BL 0x1C16F20
	0x0369A3DC BL 0x1C16F20
	0x0369A3E0 BL 0x1C16F20
	0x0369A3E4 BL 0x1C16F20
	0x0369A3E8 BL 0x1C171E0
	0x0369A3EC BL 0x1C16F20
	0x0369A3F0 BL 0x1C16F20
	0x0369A3F4 MOV X0, X22
	0x0369A3F8 BL 0x1C16F18
	0x0369A3FC BL 0x1C16F20
	0x0369A400 BL 0x1C16F20
	0x0369A404 MOV X0, X20
	0x0369A408 BL 0x1C16F18
	0x0369A40C B 0x369A420
	0x0369A410 B 0x369A460

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xD47000
	007 Move W8, [X22+2204]
	008 Move X20, X2
	009 Move X21, X1
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0xAA5000
	016 Move X0, [X0+1592]
	017 Call 0x1C17CF4
	018 Move X0, 0xAA5000
	019 Move X0, [X0+1600]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+2204], W8
	023 Move X0, [X19+40]
	024 Compare X0, 0
	025 JumpIfEqual {90}
	026 Move X22, 0xAA5000
	027 Move X22, [X22+1592]
	028 Call DigestHeaderParser.get_Realm, X0
	029 Move X8, [X22]
	030 Move X2, X0
	031 Move X1, X21
	032 Move X3, X20
	033 Move X0, X8
	034 Move X4, X31
	035 Call String.Format, X0, X1, X2, X3
	036 Move X8, [X19+40]
	037 Compare X8, 0
	038 JumpIfEqual {90}
	039 Move X20, X0
	040 Move X0, X8
	041 Call DigestHeaderParser.get_Algorithm, X0
	042 Compare X0, 0
	043 JumpIfEqual {81}
	044 Move X0, [X19+40]
	045 Compare X0, 0
	046 JumpIfEqual {90}
	047 Call DigestHeaderParser.get_Algorithm, X0
	048 Compare X0, 0
	049 JumpIfEqual {90}
	050 Move X21, 0xAA5000
	051 Move X21, [X21+1600]
	052 Move X1, X31
	053 Call String.ToLower, X0
	054 Move X1, [X21]
	055 Move X2, X31
	056 Call String.op_Equality, X0, X1
	057 Move TEMP, X0
	058 And TEMP, TEMP, 1
	059 Compare TEMP, 1
	060 JumpIfNotEqual {81}
	061 Move X0, X19
	062 Move X1, X20
	063 Call DigestSession.HashToHexString, X0, X1
	064 Move X8, [X19+40]
	065 Compare X8, 0
	066 JumpIfEqual {90}
	067 Move X20, X0
	068 Move X0, X8
	069 Call DigestHeaderParser.get_Nonce, X0
	070 Move X21, X0
	071 Move X0, X19
	072 Call DigestSession.get_CNonce, X0
	073 Move X8, [X22]
	074 Move X3, X0
	075 Move X1, X20
	076 Move X2, X21
	077 Move X0, X8
	078 Move X4, X31
	079 Call String.Format, X0, X1, X2, X3
	080 Move X20, X0
	081 Move X0, X19
	082 Move X1, X20
	083 Move X20, [X31+32]
	084 Move X19, [X31+40]
	085 Move X22, [X31+16]
	086 Move X21, [X31+24]
	087 Move X30, [X31+48]
	088 Call DigestSession.HashToHexString, X0, X1
	089 Return X0
	090 Call 0x1C17F20

Method: System.String HA2(System.Net.HttpWebRequest webRequest)

Disassembly:
	0x0369A414 B 0x369A510
	0x0369A418 B 0x369A510
	0x0369A41C B 0x369A510
	0x0369A420 MOV X21, X0
	0x0369A424 STR X31, [X31 + 0x8]
	0x0369A428 B 0x369A514
	0x0369A42C B 0x369A510
	0x0369A430 B 0x369A510
	0x0369A434 B 0x369A510
	0x0369A438 B 0x369A460
	0x0369A43C B 0x369A510
	0x0369A440 B 0x369A460
	0x0369A444 B 0x369A460
	0x0369A448 B 0x369A460
	0x0369A44C B 0x369A510
	0x0369A450 B 0x369A510
	0x0369A454 B 0x369A510
	0x0369A458 B 0x369A510
	0x0369A45C B 0x369A510
	0x0369A460 MOV X21, X0
	0x0369A464 CMP W1, 0x1
	0x0369A468 B.NE 0x369A480
	0x0369A46C MOV X0, X21
	0x0369A470 BL 0x3EB1AD0
	0x0369A474 LDR X20, [X0]
	0x0369A478 BL 0x3EB1AE0
	0x0369A47C B 0x369A338
	0x0369A480 MOV X20, X31
	0x0369A484 B 0x369A48C
	0x0369A488 MOV X21, X0
	0x0369A48C LDR X1, [X23]
	0x0369A490 MOV X0, X19
	0x0369A494 BL 0x1C16E00
	0x0369A498 MOV X19, X0
	0x0369A49C CBZ X0, 0x369A4F8
	0x0369A4A0 LDR X8, [X19]
	0x0369A4A4 LDR X1, [X23]
	0x0369A4A8 LDRH W9, [X8 + 0x12E]
	0x0369A4AC CBZ X9, 0x369A4D0
	0x0369A4B0 LDR X10, [X8 + 0xB0]
	0x0369A4B4 ADD X10, X10, 0x8
	0x0369A4B8 LDUR X11, [X10 - 0x8]
	0x0369A4BC CMP X11, X1
	0x0369A4C0 B.EQ 0x369A4E0
	0x0369A4C4 SUBS X9, X9, 0x1
	0x0369A4C8 ADD X10, X10, 0x10
	0x0369A4CC B.NE 0x369A4B8
	0x0369A4D0 MOV X0, X19
	0x0369A4D4 MOV W2, W31
	0x0369A4D8 BL 0x1C5C788
	0x0369A4DC B 0x369A4EC
	0x0369A4E0 LDRSW X9, [X10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xD47000
	006 Move W8, [X21+2205]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0xAA5000
	014 Move X0, [X0+1608]
	015 Call 0x1C17CF4
	016 Move X0, 0xA62000
	017 Move X0, [X0+4080]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2205], W8
	021 Compare X20, 0
	022 JumpIfEqual {65}
	023 Move X8, [X20]
	024 Move X0, X20
	025 Move X9, [X8+440]
	026 Move X1, [X8+448]
	027 NotImplemented "Instruction BLR not yet implemented."
	028 Move X8, [X20]
	029 Move X21, X0
	030 Move X0, X20
	031 Move X9, [X8+472]
	032 Move X1, [X8+480]
	033 NotImplemented "Instruction BLR not yet implemented."
	034 Compare X0, 0
	035 JumpIfEqual {65}
	036 Move X20, 0xA62000
	037 Move X20, [X20+4080]
	038 Move X1, X31
	039 Call Uri.get_PathAndQuery, X0
	040 Move X8, [X20]
	041 Move X2, X0
	042 Move X1, X21
	043 Move X3, X31
	044 Move X0, X8
	045 Call String.Format, X0, X1, X2
	046 Move X8, [X19+40]
	047 Compare X8, 0
	048 JumpIfEqual {65}
	049 Move X21, 0xAA5000
	050 Move X21, [X21+1608]
	051 Move X20, X0
	052 Move X0, X8
	053 Call DigestHeaderParser.get_QOP, X0
	054 Move X1, [X21]
	055 Move X2, X31
	056 Call String.op_Equality, X0, X1
	057 Move X0, X19
	058 Move X1, X20
	059 Move X20, [X31+16]
	060 Move X19, [X31+24]
	061 Move X30, [X31+32]
	062 Move X21, [X31+40]
	063 Call DigestSession.HashToHexString, X0, X1
	064 Return X0
	065 Call 0x1C17F20

Method: System.String Response(System.String username, System.String password, System.Net.HttpWebRequest webRequest)

Disassembly:
	0x0369A4E4 ADD X8, X8, X9, 0x4, LSL
	0x0369A4E8 ADD X0, X8, 0x138
	0x0369A4EC LDP X8, X1, [X0]
	0x0369A4F0 MOV X0, X19
	0x0369A4F4 BLR X8
	0x0369A4F8 CBZ X20, 0x369A5B8
	0x0369A4FC MOV X0, X20
	0x0369A500 BL 0x1C16F18
	0x0369A504 B 0x369A510
	0x0369A508 B 0x369A510
	0x0369A50C B 0x369A510
	0x0369A510 MOV X21, X0
	0x0369A514 CMP W1, 0x1
	0x0369A518 B.NE 0x369A534
	0x0369A51C MOV X0, X21
	0x0369A520 BL 0x3EB1AD0
	0x0369A524 LDR X22, [X0]
	0x0369A528 BL 0x3EB1AE0
	0x0369A52C MOV W19, W31
	0x0369A530 B 0x369A150
	0x0369A534 MOV X22, X31
	0x0369A538 B 0x369A540
	0x0369A53C MOV X21, X0
	0x0369A540 ADRP X23, 0xA59000
	0x0369A544 LDR X23, [X23 + 0xE00]
	0x0369A548 LDR X1, [X23]
	0x0369A54C MOV X0, X20
	0x0369A550 BL 0x1C16E00
	0x0369A554 MOV X19, X0
	0x0369A558 CBZ X0, 0x369A5B4
	0x0369A55C LDR X8, [X19]
	0x0369A560 LDR X1, [X23]
	0x0369A564 LDRH W9, [X8 + 0x12E]
	0x0369A568 CBZ X9, 0x369A58C
	0x0369A56C LDR X10, [X8 + 0xB0]
	0x0369A570 ADD X10, X10, 0x8
	0x0369A574 LDUR X11, [X10 - 0x8]
	0x0369A578 CMP X11, X1
	0x0369A57C B.EQ 0x369A59C
	0x0369A580 SUBS X9, X9, 0x1
	0x0369A584 ADD X10, X10, 0x10
	0x0369A588 B.NE 0x369A574
	0x0369A58C MOV X0, X19
	0x0369A590 MOV W2, W31
	0x0369A594 BL 0x1C5C788
	0x0369A598 B 0x369A5A8
	0x0369A59C LDRSW X9, [X10]
	0x0369A5A0 ADD X8, X8, X9, 0x4, LSL
	0x0369A5A4 ADD X0, X8, 0x138
	0x0369A5A8 LDP X8, X1, [X0]
	0x0369A5AC MOV X0, X19
	0x0369A5B0 BLR X8
	0x0369A5B4 CBNZ X22, 0x369A5C0
	0x0369A5B8 MOV X0, X21
	0x0369A5BC BL 0x1D2C690
	0x0369A5C0 MOV X0, X22
	0x0369A5C4 BL 0x1C16F18
	0x0369A5C8 BL 0x1990590
	0x0369A5CC SUB X31, X31, 0x60
	0x0369A5D0 STP X30, X27, [X31 + 0x10]
	0x0369A5D4 STP X26, X25, [X31 + 0x20]
	0x0369A5D8 STP X24, X23, [X31 + 0x30]
	0x0369A5DC STP X22, X21, [X31 + 0x40]
	0x0369A5E0 STP X20, X19, [X31 + 0x50]
	0x0369A5E4 ADRP X22, 0xD46000
	0x0369A5E8 LDRB W8, [X22 + 0x8A2]
	0x0369A5EC MOV X19, X3
	0x0369A5F0 MOV X20, X2
	0x0369A5F4 MOV X21, X1
	0x0369A5F8 TBNZ X8, 0x0, 0x369A640
	0x0369A5FC ADRP X0, 0xAA4000
	0x0369A600 LDR X0, [X0 + 0x5A8]
	0x0369A604 BL 0x1C16CF4
	0x0369A608 ADRP X0, 0xAA4000
	0x0369A60C LDR X0, [X0 + 0x630]
	0x0369A610 BL 0x1C16CF4
	0x0369A614 ADRP X0, 0xA81000
	0x0369A618 LDR X0, [X0 + 0xB88]
	0x0369A61C BL 0x1C16CF4
	0x0369A620 ADRP X0, 0xA59000
	0x0369A624 LDR X0, [X0 + 0x758]
	0x0369A628 BL 0x1C16CF4
	0x0369A62C ADRP X0, 0xAA4000
	0x0369A630 LDR X0, [X0 + 0x698]
	0x0369A634 BL 0x1C16CF4
	0x0369A638 MOVZ W8, 0x1
	0x0369A63C STRB W8, [X22 + 0x8A2]
	0x0369A640 MOV X0, X31

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0xD47000
	009 Move W8, [X23+2206]
	010 Move X20, X3
	011 Move X21, X2
	012 Move X22, X1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0xA8C000
	019 Move X0, [X0+1584]
	020 Call 0x1C17CF4
	021 Move X0, 0xAA5000
	022 Move X0, [X0+1616]
	023 Call 0x1C17CF4
	024 Move X0, 0xAA5000
	025 Move X0, [X0+1624]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X23+2206], W8
	029 Move X0, X19
	030 Move X1, X22
	031 Move X2, X21
	032 Call DigestSession.HA1, X0, X1, X2
	033 Move X8, [X19+40]
	034 Compare X8, 0
	035 JumpIfEqual {102}
	036 Move X22, 0xAA5000
	037 Move X22, [X22+1616]
	038 Move X21, X0
	039 Move X0, X8
	040 Call DigestHeaderParser.get_Nonce, X0
	041 Move X8, [X22]
	042 Move X2, X0
	043 Move X1, X21
	044 Move X3, X31
	045 Move X0, X8
	046 Call String.Format, X0, X1, X2
	047 Move X8, [X19+40]
	048 Compare X8, 0
	049 JumpIfEqual {102}
	050 Move X21, X0
	051 Move X0, X8
	052 Call DigestHeaderParser.get_QOP, X0
	053 Compare X0, 0
	054 JumpIfEqual {84}
	055 Move X8, 0xA8C000
	056 Move X8, [X8+1584]
	057 Add X0, X19, 24
	058 Move X2, X31
	059 Move X1, [X8]
	060 Call Int32.ToString, X0, X1
	061 Move X22, X0
	062 Move X0, X19
	063 Call DigestSession.get_CNonce, X0
	064 Move X8, [X19+40]
	065 Compare X8, 0
	066 JumpIfEqual {102}
	067 Move X24, 0xAA5000
	068 Move X24, [X24+1624]
	069 Move X23, X0
	070 Move X0, X8
	071 Call DigestHeaderParser.get_QOP, X0
	072 Move X8, [X24]
	073 Move X3, X0
	074 Move X1, X22
	075 Move X2, X23
	076 Move X0, X8
	077 Move X4, X31
	078 Call String.Format, X0, X1, X2, X3
	079 Move X1, X0
	080 Move X0, X21
	081 Move X2, X31
	082 Call String.Concat, X0, X1
	083 Move X21, X0
	084 Move X0, X19
	085 Move X1, X20
	086 Call DigestSession.HA2, X0, X1
	087 Move X1, X0
	088 Move X0, X21
	089 Move X2, X31
	090 Call String.Concat, X0, X1
	091 Move X1, X0
	092 Move X0, X19
	093 Move X20, [X31+48]
	094 Move X19, [X31+56]
	095 Move X22, [X31+32]
	096 Move X21, [X31+40]
	097 Move X24, [X31+16]
	098 Move X23, [X31+24]
	099 Move X30, [X31+64]
	100 Call DigestSession.HashToHexString, X0, X1
	101 Return X0
	102 Call 0x1C17F20

Method: System.Net.Authorization Authenticate(System.Net.WebRequest webRequest, System.Net.ICredentials credentials)

Disassembly:
	0x0369A644 CBZ X21, 0x369A7DC
	0x0369A648 CBZ X19, 0x369A7DC
	0x0369A64C MOV X0, X21
	0x0369A650 MOV X1, X31
	0x0369A654 BL 0x322B8DC
	0x0369A658 CBZ X0, 0x369A858
	0x0369A65C MOV X1, X31
	0x0369A660 BL 0x322B5E4
	0x0369A664 CBZ X0, 0x369A858
	0x0369A668 ADRP X8, 0xAA4000
	0x0369A66C LDR X8, [X8 + 0x698]
	0x0369A670 MOV X2, X31
	0x0369A674 LDR X1, [X8]
	0x0369A678 BL 0x322C2F0
	0x0369A67C ADDS W31, W0, 0x1
	0x0369A680 B.EQ 0x369A7D8
	0x0369A684 CBZ X20, 0x369A7D8
	0x0369A688 ADRP X8, 0xA81000
	0x0369A68C LDR X8, [X8 + 0xB88]
	0x0369A690 LDR X9, [X20]
	0x0369A694 LDR X8, [X8]
	0x0369A698 LDRB W11, [X9 + 0x130]
	0x0369A69C LDRB W10, [X8 + 0x130]
	0x0369A6A0 CMP W11, W10
	0x0369A6A4 B.CC 0x369A7D8
	0x0369A6A8 LDR X9, [X9 + 0xC8]
	0x0369A6AC ADD X9, X9, X10, 0x3, LSL
	0x0369A6B0 LDUR X9, [X9 - 0x8]
	0x0369A6B4 CMP X9, X8
	0x0369A6B8 B.NE 0x369A7D8
	0x0369A6BC ADRP X25, 0xAA4000
	0x0369A6C0 LDR X25, [X25 + 0x630]
	0x0369A6C4 LDR X0, [X25]
	0x0369A6C8 BL 0x1C16F10
	0x0369A6CC MOV X22, X0
	0x0369A6D0 BL 0x3698EE4
	0x0369A6D4 CBZ X22, 0x369A858
	0x0369A6D8 MOV X0, X22
	0x0369A6DC MOV X1, X21
	0x0369A6E0 BL 0x36990C0
	0x0369A6E4 TBZ X0, 0x0, 0x369A7D8
	0x0369A6E8 LDR X0, [X20 + 0x28]
	0x0369A6EC CBZ X0, 0x369A858
	0x0369A6F0 LDR X8, [X0]
	0x0369A6F4 LDP X9, X1, [X8 + 0x158]
	0x0369A6F8 BLR X9
	0x0369A6FC LDR X8, [X19]
	0x0369A700 MOV W23, W0
	0x0369A704 MOV X0, X19
	0x0369A708 LDP X9, X1, [X8 + 0x158]
	0x0369A70C BLR X9
	0x0369A710 LDR X8, [X22 + 0x28]
	0x0369A714 CBZ X8, 0x369A858
	0x0369A718 MOV W24, W0
	0x0369A71C MOV X0, X8
	0x0369A720 BL 0x36988B0
	0x0369A724 CBZ X0, 0x369A858
	0x0369A728 LDR X8, [X0]
	0x0369A72C LDP X9, X1, [X8 + 0x158]
	0x0369A730 BLR X9
	0x0369A734 ADRP X26, 0xAA4000
	0x0369A738 LDR X26, [X26 + 0x5A8]
	0x0369A73C MOV W8, W0
	0x0369A740 EOR W10, W24, W23, 0x0
	0x0369A744 EOR W24, W10, W8, 0x0
	0x0369A748 LDR X0, [X26]
	0x0369A74C LDR W9, [X0 + 0xE0]
	0x0369A750 CBNZ W9, 0x369A758
	0x0369A754 BL 0x1C16DFC
	0x0369A758 BL 0x3699C10
	0x0369A75C ADRP X27, 0xA59000
	0x0369A760 LDR X27, [X27 + 0x758]
	0x0369A764 MOV X23, X0
	0x0369A768 ADD X1, X31, 0xC
	0x0369A76C STR W24, [X31 + 0xC]
	0x0369A770 LDR X0, [X27]
	0x0369A774 BL 0x1C16E04
	0x0369A778 CBZ X23, 0x369A858
	0x0369A77C LDR X8, [X23]
	0x0369A780 MOV X1, X0
	0x0369A784 MOV X0, X23
	0x0369A788 LDR X9, [X8 + 0x2D8]
	0x0369A78C LDR X2, [X8 + 0x2E0]
	0x0369A790 BLR X9
	0x0369A794 CBZ X0, 0x369A7F8
	0x0369A798 LDR X8, [X0]
	0x0369A79C LDR X1, [X25]
	0x0369A7A0 MOV X23, X0
	0x0369A7A4 LDRB W10, [X8 + 0x130]
	0x0369A7A8 LDRB W9, [X1 + 0x130]
	0x0369A7AC CMP W10, W9
	0x0369A7B0 B.CC 0x369A85C
	0x0369A7B4 LDR X8, [X8 + 0xC8]
	0x0369A7B8 ADD X8, X8, X9, 0x3, LSL
	0x0369A7BC LDUR X8, [X8 - 0x8]
	0x0369A7C0 CMP X8, X1
	0x0369A7C4 B.NE 0x369A85C
	0x0369A7C8 MOV X0, X23
	0x0369A7CC MOV X1, X21
	0x0369A7D0 BL 0x36990C0
	0x0369A7D4 TBNZ X0, 0x0, 0x369A844
	0x0369A7D8 MOV X0, X31
	0x0369A7DC LDP X20, X19, [X31 + 0x50]
	0x0369A7E0 LDP X22, X21, [X31 + 0x40]
	0x0369A7E4 LDP X24, X23, [X31 + 0x30]
	0x0369A7E8 LDP X26, X25, [X31 + 0x20]
	0x0369A7EC LDP X30, X27, [X31 + 0x10]
	0x0369A7F0 ADD X31, X31, 0x60
	0x0369A7F4 RET
	0x0369A7F8 LDR X0, [X26]
	0x0369A7FC LDR W8, [X0 + 0xE0]
	0x0369A800 CBNZ W8, 0x369A808
	0x0369A804 BL 0x1C16DFC
	0x0369A808 BL 0x3699C10
	0x0369A80C MOV X21, X0
	0x0369A810 LDR X0, [X27]
	0x0369A814 ADD X1, X31, 0x8
	0x0369A818 STR W24, [X31 + 0x8]
	0x0369A81C BL 0x1C16E04
	0x0369A820 CBZ X21, 0x369A858
	0x0369A824 LDR X8, [X21]
	0x0369A828 MOV X1, X0
	0x0369A82C MOV X0, X21
	0x0369A830 MOV X2, X22
	0x0369A834 LDR X9, [X8 + 0x278]
	0x0369A838 LDR X3, [X8 + 0x280]
	0x0369A83C BLR X9
	0x0369A840 MOV X23, X22
	0x0369A844 MOV X0, X23
	0x0369A848 MOV X1, X20
	0x0369A84C MOV X2, X19
	0x0369A850 BL 0x3699644
	0x0369A854 B 0x369A7DC
	0x0369A858 BL 0x1C16F20
	0x0369A85C MOV X0, X23
	0x0369A860 BL 0x1C171E0
	0x0369A864 STR X30, [X31 - 0x30]!
	0x0369A868 STP X22, X21, [X31 + 0x10]
	0x0369A86C STP X20, X19, [X31 + 0x20]
	0x0369A870 ADRP X21, 0xD46000
	0x0369A874 LDRB W8, [X21 + 0x8A3]
	0x0369A878 MOV X19, X2
	0x0369A87C MOV X20, X1
	0x0369A880 TBNZ X8, 0x0, 0x369A8BC
	0x0369A884 ADRP X0, 0xAA4000
	0x0369A888 LDR X0, [X0 + 0x5A8]
	0x0369A88C BL 0x1C16CF4
	0x0369A890 ADRP X0, 0xAA4000
	0x0369A894 LDR X0, [X0 + 0x630]
	0x0369A898 BL 0x1C16CF4
	0x0369A89C ADRP X0, 0xA81000
	0x0369A8A0 LDR X0, [X0 + 0xB88]
	0x0369A8A4 BL 0x1C16CF4
	0x0369A8A8 ADRP X0, 0xA59000
	0x0369A8AC LDR X0, [X0 + 0x758]
	0x0369A8B0 BL 0x1C16CF4
	0x0369A8B4 MOVZ W8, 0x1
	0x0369A8B8 STRB W8, [X21 + 0x8A3]
	0x0369A8BC CBZ X20, 0x369A8E0
	0x0369A8C0 ADRP X8, 0xA81000
	0x0369A8C4 LDR X8, [X8 + 0xB88]
	0x0369A8C8 LDR X9, [X20]
	0x0369A8CC LDR X8, [X8]
	0x0369A8D0 LDRB W11, [X9 + 0x130]
	0x0369A8D4 LDRB W10, [X8 + 0x130]
	0x0369A8D8 CMP W11, W10
	0x0369A8DC B.CS 0x369A8F4
	0x0369A8E0 MOV X0, X31
	0x0369A8E4 LDP X20, X19, [X31 + 0x20]
	0x0369A8E8 LDP X22, X21, [X31 + 0x10]
	0x0369A8EC LDR X30, [X31], #0x30
	0x0369A8F0 RET
	0x0369A8F4 MOV X0, X31
	0x0369A8F8 CBZ X19, 0x369A8E4
	0x0369A8FC LDR X9, [X9 + 0xC8]
	0x0369A900 ADD X9, X9, X10, 0x3, LSL
	0x0369A904 LDUR X9, [X9 - 0x8]
	0x0369A908 CMP X9, X8
	0x0369A90C B.NE 0x369A8E4
	0x0369A910 LDR X0, [X20 + 0x28]
	0x0369A914 CBZ X0, 0x369A9DC
	0x0369A918 LDR X8, [X0]
	0x0369A91C LDP X9, X1, [X8 + 0x158]
	0x0369A920 BLR X9
	0x0369A924 LDR X8, [X19]
	0x0369A928 MOV W21, W0
	0x0369A92C MOV X0, X19
	0x0369A930 LDP X9, X1, [X8 + 0x158]
	0x0369A934 BLR X9
	0x0369A938 ADRP X8, 0xAA4000
	0x0369A93C LDR X8, [X8 + 0x5A8]
	0x0369A940 EOR W22, W0, W21, 0x0
	0x0369A944 LDR X8, [X8]
	0x0369A948 LDR W9, [X8 + 0xE0]
	0x0369A94C CBNZ W9, 0x369A958
	0x0369A950 MOV X0, X8
	0x0369A954 BL 0x1C16DFC
	0x0369A958 BL 0x3699C10
	0x0369A95C ADRP X8, 0xA59000
	0x0369A960 LDR X8, [X8 + 0x758]
	0x0369A964 MOV X21, X0
	0x0369A968 ADD X1, X31, 0xC
	0x0369A96C STR W22, [X31 + 0xC]
	0x0369A970 LDR X0, [X8]
	0x0369A974 BL 0x1C16E04
	0x0369A978 CBZ X21, 0x369A9DC
	0x0369A97C LDR X8, [X21]
	0x0369A980 MOV X1, X0
	0x0369A984 MOV X0, X21
	0x0369A988 LDR X9, [X8 + 0x2D8]
	0x0369A98C LDR X2, [X8 + 0x2E0]
	0x0369A990 BLR X9
	0x0369A994 CBZ X0, 0x369A8E4
	0x0369A998 ADRP X9, 0xAA4000
	0x0369A99C LDR X9, [X9 + 0x630]
	0x0369A9A0 LDR X8, [X0]
	0x0369A9A4 LDR X1, [X9]
	0x0369A9A8 LDRB W10, [X8 + 0x130]
	0x0369A9AC LDRB W9, [X1 + 0x130]
	0x0369A9B0 CMP W10, W9
	0x0369A9B4 B.CC 0x369A9E0
	0x0369A9B8 LDR X8, [X8 + 0xC8]
	0x0369A9BC ADD X8, X8, X9, 0x3, LSL
	0x0369A9C0 LDUR X8, [X8 - 0x8]
	0x0369A9C4 CMP X8, X1
	0x0369A9C8 B.NE 0x369A9E0
	0x0369A9CC MOV X1, X20
	0x0369A9D0 MOV X2, X19
	0x0369A9D4 BL 0x3699644
	0x0369A9D8 B 0x369A8E4
	0x0369A9DC BL 0x1C16F20
	0x0369A9E0 BL 0x1C171E0
	0x0369A9E4 STR X30, [X31 - 0x20]!
	0x0369A9E8 STP X20, X19, [X31 + 0x10]
	0x0369A9EC ADRP X19, 0xD46000
	0x0369A9F0 ADRP X20, 0xAA4000
	0x0369A9F4 LDRB W8, [X19 + 0x8A4]
	0x0369A9F8 LDR X20, [X20 + 0x6C0]
	0x0369A9FC TBNZ X8, 0x0, 0x369AA14
	0x0369AA00 ADRP X0, 0xAA4000
	0x0369AA04 LDR X0, [X0 + 0x6C0]
	0x0369AA08 BL 0x1C16CF4
	0x0369AA0C MOVZ W8, 0x1
	0x0369AA10 STRB W8, [X19 + 0x8A4]
	0x0369AA14 LDR X0, [X20]
	0x0369AA18 LDP X20, X19, [X31 + 0x10]
	0x0369AA1C LDR X30, [X31], #0x20
	0x0369AA20 RET
	0x0369AA24 STP X30, X21, [X31 - 0x20]!
	0x0369AA28 STP X20, X19, [X31 + 0x10]
	0x0369AA2C ADRP X19, 0xD46000
	0x0369AA30 ADRP X21, 0xA89000
	0x0369AA34 ADRP X20, 0xAA4000
	0x0369AA38 LDRB W8, [X19 + 0x8A5]
	0x0369AA3C LDR X21, [X21 + 0xDB8]
	0x0369AA40 LDR X20, [X20 + 0x5A8]
	0x0369AA44 TBNZ X8, 0x0, 0x369AA68
	0x0369AA48 ADRP X0, 0xAA4000
	0x0369AA4C LDR X0, [X0 + 0x5A8]
	0x0369AA50 BL 0x1C16CF4
	0x0369AA54 ADRP X0, 0xA89000
	0x0369AA58 LDR X0, [X0 + 0xDB8]
	0x0369AA5C BL 0x1C16CF4
	0x0369AA60 MOVZ W8, 0x1
	0x0369AA64 STRB W8, [X19 + 0x8A5]
	0x0369AA68 LDR X0, [X21]
	0x0369AA6C BL 0x1C16F10
	0x0369AA70 MOV X1, X31
	0x0369AA74 MOV X19, X0
	0x0369AA78 BL 0x335A0A0
	0x0369AA7C MOV X0, X19
	0x0369AA80 MOV X1, X31
	0x0369AA84 BL 0x335BA34
	0x0369AA88 LDR X8, [X20]
	0x0369AA8C LDP X20, X19, [X31 + 0x10]
	0x0369AA90 LDR X8, [X8 + 0xB8]
	0x0369AA94 STR X0, [X8]
	0x0369AA98 LDP X30, X21, [X31], #0x20
	0x0369AA9C RET
	0x0369AAA0 SUB X31, X31, 0x40
	0x0369AAA4 STR X30, [X31 + 0x10]
	0x0369AAA8 STP X22, X21, [X31 + 0x20]
	0x0369AAAC STP X20, X19, [X31 + 0x30]
	0x0369AAB0 ADRP X22, 0xD46000
	0x0369AAB4 LDRB W8, [X22 + 0x8A6]
	0x0369AAB8 MOV X19, X2
	0x0369AABC MOV X20, X1
	0x0369AAC0 MOV X21, X0
	0x0369AAC4 TBNZ X8, 0x0, 0x369AB00
	0x0369AAC8 ADRP X0, 0xAA4000
	0x0369AACC LDR X0, [X0 + 0x6C8]
	0x0369AAD0 BL 0x1C16CF4
	0x0369AAD4 ADRP X0, 0xAA4000
	0x0369AAD8 LDR X0, [X0 + 0x6D0]
	0x0369AADC BL 0x1C16CF4
	0x0369AAE0 ADRP X0, 0xAA4000
	0x0369AAE4 LDR X0, [X0 + 0x6D8]
	0x0369AAE8 BL 0x1C16CF4
	0x0369AAEC ADRP X0, 0xA66000
	0x0369AAF0 LDR X0, [X0 + 0x990]
	0x0369AAF4 BL 0x1C16CF4
	0x0369AAF8 MOVZ W8, 0x1
	0x0369AAFC STRB W8, [X22 + 0x8A6]
	0x0369AB00 CBZ X21, 0x369ABDC
	0x0369AB04 ADRP X8, 0xA66000
	0x0369AB08 LDR X8, [X8 + 0x990]
	0x0369AB0C MOV X0, X21
	0x0369AB10 MOV X2, X31
	0x0369AB14 LDR X1, [X8]
	0x0369AB18 BL 0x321BA08
	0x0369AB1C TBNZ X0, 0x0, 0x369AB94
	0x0369AB20 ADRP X8, 0xAA4000
	0x0369AB24 LDR X8, [X8 + 0x6D8]
	0x0369AB28 MOV X0, X21
	0x0369AB2C MOV X2, X31
	0x0369AB30 LDR X1, [X8]
	0x0369AB34 BL 0x321BA08
	0x0369AB38 TBNZ X0, 0x0, 0x369AB94
	0x0369AB3C ADRP X8, 0xAA4000
	0x0369AB40 LDR X8, [X8 + 0x6D0]
	0x0369AB44 ADRP X22, 0xAA4000
	0x0369AB48 LDR X0, [X8]
	0x0369AB4C LDR X22, [X22 + 0x6C8]
	0x0369AB50 BL 0x1C16F10
	0x0369AB54 LDR X2, [X22]
	0x0369AB58 MOV X1, X31
	0x0369AB5C MOV X22, X0
	0x0369AB60 BL 0x369AC28
	0x0369AB64 CBZ X22, 0x369AC24
	0x0369AB68 ADD X1, X31, 0x0
	0x0369AB6C MOV X0, X22
	0x0369AB70 MOV X2, X20
	0x0369AB74 MOV X3, X19
	0x0369AB78 STP X21, X31, [X31]
	0x0369AB7C BL 0x1C16CB0
	0x0369AB80 LDP X20, X19, [X31 + 0x30]
	0x0369AB84 LDP X22, X21, [X31 + 0x20]
	0x0369AB88 LDR X30, [X31 + 0x10]
	0x0369AB8C ADD X31, X31, 0x40
	0x0369AB90 RET
	0x0369AB94 ADRP X0, 0xA61000
	0x0369AB98 LDR X0, [X0 + 0x578]
	0x0369AB9C BL 0x1C16D08
	0x0369ABA0 BL 0x1C16F10
	0x0369ABA4 MOV X19, X0
	0x0369ABA8 ADRP X0, 0xAA4000
	0x0369ABAC LDR X0, [X0 + 0x6E0]
	0x0369ABB0 BL 0x1C16D08
	0x0369ABB4 MOV X20, X0
	0x0369ABB8 ADRP X0, 0xAA4000
	0x0369ABBC LDR X0, [X0 + 0x6E8]
	0x0369ABC0 BL 0x1C16D08
	0x0369ABC4 MOV X2, X0
	0x0369ABC8 MOV X0, X19
	0x0369ABCC MOV X1, X20
	0x0369ABD0 MOV X3, X31
	0x0369ABD4 BL 0x330E16C
	0x0369ABD8 B 0x369AC0C
	0x0369ABDC ADRP X0, 0xA5E000
	0x0369ABE0 LDR X0, [X0 + 0x528]
	0x0369ABE4 BL 0x1C16D08
	0x0369ABE8 BL 0x1C16F10
	0x0369ABEC MOV X19, X0
	0x0369ABF0 ADRP X0, 0xAA4000
	0x0369ABF4 LDR X0, [X0 + 0x6F0]
	0x0369ABF8 BL 0x1C16D08
	0x0369ABFC MOV X1, X0
	0x0369AC00 MOV X0, X19
	0x0369AC04 MOV X2, X31

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0xD47000
	009 Move W8, [X22+2207]
	010 Move X20, X2
	011 Move X21, X1
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {73}
	017 Move X0, 0xAA0000
	018 Move X0, [X0+2080]
	019 Call 0x1C17CF4
	020 Move X0, 0xA5B000
	021 Move X0, [X0+2544]
	022 Call 0x1C17CF4
	023 Move X0, 0xA82000
	024 Move X0, [X0+2952]
	025 Call 0x1C17CF4
	026 Move X0, 0xAA0000
	027 Move X0, [X0+2088]
	028 Call 0x1C17CF4
	029 Move X0, 0xA5A000
	030 Move X0, [X0+1880]
	031 Call 0x1C17CF4
	032 Move X0, 0xA5A000
	033 Move X0, [X0+2288]
	034 Call 0x1C17CF4
	035 Move X0, 0xAA5000
	036 Move X0, [X0+1632]
	037 Call 0x1C17CF4
	038 Move X0, 0xAA5000
	039 Move X0, [X0+1640]
	040 Call 0x1C17CF4
	041 Move X0, 0xAA5000
	042 Move X0, [X0+1648]
	043 Call 0x1C17CF4
	044 Move X0, 0xAA5000
	045 Move X0, [X0+1656]
	046 Call 0x1C17CF4
	047 Move X0, 0xAA5000
	048 Move X0, [X0+1664]
	049 Call 0x1C17CF4
	050 Move X0, 0xAA5000
	051 Move X0, [X0+1672]
	052 Call 0x1C17CF4
	053 Move X0, 0xAA5000
	054 Move X0, [X0+1680]
	055 Call 0x1C17CF4
	056 Move X0, 0xAA5000
	057 Move X0, [X0+1688]
	058 Call 0x1C17CF4
	059 Move X0, 0xAA5000
	060 Move X0, [X0+1696]
	061 Call 0x1C17CF4
	062 Move X0, 0xAA5000
	063 Move X0, [X0+1704]
	064 Call 0x1C17CF4
	065 Move X0, 0xA5A000
	066 Move X0, [X0+2440]
	067 Call 0x1C17CF4
	068 Move X0, 0xAA5000
	069 Move X0, [X0+1712]
	070 Call 0x1C17CF4
	071 Move W8, 1
	072 Move [X22+2207], W8
	073 Move X8, [X19+40]
	074 Compare X8, 0
	075 JumpIfEqual {362}
	076 Compare X21, 0
	077 JumpIfEqual {287}
	078 Move X8, 0xA82000
	079 Move X8, [X8+2952]
	080 Move X9, [X21]
	081 Move X8, [X8]
	082 Move W11, [X9+304]
	083 Move W10, [X8+304]
	084 NotImplemented "Instruction CMP not yet implemented."
	085 Move X9, [X9+200]
	086 Add X9, X9, X10
	087 NotImplemented "Instruction LDUR not yet implemented."
	088 NotImplemented "Instruction CMP not yet implemented."
	089 NotImplemented "Instruction CSEL not yet implemented."
	090 Compare X21, 0
	091 JumpIfEqual {287}
	092 Move X8, 0xA5B000
	093 Move X8, [X8+2544]
	094 Move X0, [X8]
	095 Move W8, [X0+224]
	096 Compare W8, 0
	097 JumpIfNotEqual {99}
	098 Call 0x1C17DFC
	099 Move X0, X31
	100 Call DateTime.get_UtcNow
	101 Move [X19+16], X0
	102 Move X8, [X21]
	103 Move X0, X21
	104 Move X9, [X8+472]
	105 Move X1, [X8+480]
	106 NotImplemented "Instruction BLR not yet implemented."
	107 Compare X20, 0
	108 JumpIfEqual {375}
	109 Move X9, 0xAA0000
	110 Move X8, [X20]
	111 Move X9, [X9+2088]
	112 Move X10, 0xAA5000
	113 Move X22, X0
	114 Move X1, [X9]
	115 Move X10, [X10+1688]
	116 NotImplemented "Instruction LDRH not yet implemented."
	117 Move X23, [X10]
	118 Compare X9, 0
	119 JumpIfEqual {126}
	120 Move X10, [X8+176]
	121 Add X10, X10, 8
	122 NotImplemented "Instruction LDUR not yet implemented."
	123 NotImplemented "Instruction CMP not yet implemented."
	124 Subtract X9, X9, 1
	125 Add X10, X10, 16
	126 Move X0, X20
	127 Move W2, W31
	128 Call 0x1C5D788
	129 NotImplemented "Instruction LDRSW not yet implemented."
	130 Add X8, X8, X9
	131 Add X0, X8, 312
	132 Move X8, [X0]
	133 Move X3, [X0+8]
	134 Move X0, X20
	135 Move X1, X22
	136 Move X2, X23
	137 NotImplemented "Instruction BLR not yet implemented."
	138 Compare X0, 0
	139 JumpIfEqual {287}
	140 Move X1, X31
	141 Move X20, X0
	142 Call NetworkCredential.get_UserName, X0
	143 Compare X0, 0
	144 JumpIfEqual {287}
	145 Move X8, 0xA5A000
	146 Move X8, [X8+2440]
	147 Move X2, X31
	148 Move X22, X0
	149 Move X1, [X8]
	150 Call String.op_Equality, X0, X1
	151 Move X23, X31
	152 Move TEMP, X0
	153 And TEMP, TEMP, 1
	154 Compare TEMP, 1
	155 JumpIfEqual {288}
	156 Move X0, X20
	157 Move X1, X31
	158 Call NetworkCredential.get_Password, X0
	159 Move X8, 0xA5A000
	160 Move X8, [X8+2288]
	161 Move X23, X0
	162 Move X8, [X8]
	163 Move X0, X8
	164 Call 0x1C17F10
	165 Move X1, X31
	166 Move X20, X0
	167 Call StringBuilder..ctor, X0
	168 Compare X20, 0
	169 JumpIfEqual {375}
	170 Move X8, 0xAA5000
	171 Move X8, [X8+1640]
	172 Move X0, X20
	173 Move X2, X22
	174 Move X3, X31
	175 Move X1, [X8]
	176 Call StringBuilder.AppendFormat, X0, X1, X2
	177 Move X0, [X19+40]
	178 Compare X0, 0
	179 JumpIfEqual {375}
	180 Call DigestHeaderParser.get_Realm, X0
	181 Move X8, 0xAA5000
	182 Move X8, [X8+1696]
	183 Move X2, X0
	184 Move X0, X20
	185 Move X3, X31
	186 Move X1, [X8]
	187 Call StringBuilder.AppendFormat, X0, X1, X2
	188 Move X0, [X19+40]
	189 Compare X0, 0
	190 JumpIfEqual {375}
	191 Call DigestHeaderParser.get_Nonce, X0
	192 Move X8, 0xAA5000
	193 Move X8, [X8+1664]
	194 Move X2, X0
	195 Move X0, X20
	196 Move X3, X31
	197 Move X1, [X8]
	198 Call StringBuilder.AppendFormat, X0, X1, X2
	199 Move X0, [X21+40]
	200 Compare X0, 0
	201 JumpIfEqual {375}
	202 Move X1, X31
	203 Call Uri.get_PathAndQuery, X0
	204 Move X8, 0xAA5000
	205 Move X8, [X8+1656]
	206 Move X2, X0
	207 Move X0, X20
	208 Move X3, X31
	209 Move X1, [X8]
	210 Call StringBuilder.AppendFormat, X0, X1, X2
	211 Move X0, [X19+40]
	212 Compare X0, 0
	213 JumpIfEqual {375}
	214 Call DigestHeaderParser.get_Algorithm, X0
	215 Compare X0, 0
	216 JumpIfEqual {228}
	217 Move X0, [X19+40]
	218 Compare X0, 0
	219 JumpIfEqual {375}
	220 Call DigestHeaderParser.get_Algorithm, X0
	221 Move X8, 0xAA5000
	222 Move X8, [X8+1680]
	223 Move X2, X0
	224 Move X0, X20
	225 Move X3, X31
	226 Move X1, [X8]
	227 Call StringBuilder.AppendFormat, X0, X1, X2
	228 Move X0, X19
	229 Move X1, X22
	230 Move X2, X23
	231 Move X3, X21
	232 Call DigestSession.Response, X0, X1, X2, X3
	233 Move X8, 0xAA5000
	234 Move X8, [X8+1648]
	235 Move X2, X0
	236 Move X0, X20
	237 Move X3, X31
	238 Move X1, [X8]
	239 Call StringBuilder.AppendFormat, X0, X1, X2
	240 Move X0, [X19+40]
	241 Compare X0, 0
	242 JumpIfEqual {375}
	243 Call DigestHeaderParser.get_QOP, X0
	244 Compare X0, 0
	245 JumpIfEqual {257}
	246 Move X0, [X19+40]
	247 Compare X0, 0
	248 JumpIfEqual {375}
	249 Call DigestHeaderParser.get_QOP, X0
	250 Move X8, 0xAA5000
	251 Move X8, [X8+1704]
	252 Move X2, X0
	253 Move X0, X20
	254 Move X3, X31
	255 Move X1, [X8]
	256 Call StringBuilder.AppendFormat, X0, X1, X2
	257 Move [X31+12], W31
	258 Add X1, X31, 12
	259 Move X0, X19
	260 Move X2, X31
	261 Call Monitor.Enter, X0, X1
	262 Move X0, [X19+40]
	263 Compare X0, 0
	264 JumpIfEqual {378}
	265 Call DigestHeaderParser.get_QOP, X0
	266 Compare X0, 0
	267 JumpIfEqual {297}
	268 Move X9, 0xA5A000
	269 Move W8, [X19+24]
	270 Move X9, [X9+1880]
	271 Move [X31+8], W8
	272 Move X0, [X9]
	273 Add X1, X31, 8
	274 Call 0x1C17E04
	275 Move X8, 0xAA5000
	276 Move X8, [X8+1712]
	277 Move X2, X0
	278 Move X1, [X8]
	279 Move X0, X20
	280 Move X3, X31
	281 Call StringBuilder.AppendFormat, X0, X1, X2
	282 Move W8, [X19+24]
	283 Move X21, X31
	284 Move W22, 12
	285 Add W8, W8, 1
	286 Move [X19+24], W8
	287 Move X23, X31
	288 Move X0, X23
	289 Move X20, [X31+48]
	290 Move X19, [X31+56]
	291 Move X22, [X31+32]
	292 Move X21, [X31+40]
	293 Move X30, [X31+16]
	294 Move X23, [X31+24]
	295 Add X31, X31, 64
	296 Return X0
	297 Move X21, X31
	298 Move W22, 12
	299 Move W8, [X31+12]
	300 Compare W8, 0
	301 JumpIfEqual {305}
	302 Move X0, X19
	303 Move X1, X31
	304 Call Monitor.Exit, X0
	305 Compare X21, 0
	306 JumpIfNotEqual {376}
	307 NotImplemented "Instruction CMP not yet implemented."
	308 Compare W22, 0
	309 JumpIfNotEqual {288}
	310 Move X0, X19
	311 Call DigestSession.get_CNonce, X0
	312 Compare X0, 0
	313 JumpIfEqual {323}
	314 Move X0, X19
	315 Call DigestSession.get_CNonce, X0
	316 Move X8, 0xAA5000
	317 Move X8, [X8+1632]
	318 Move X2, X0
	319 Move X0, X20
	320 Move X3, X31
	321 Move X1, [X8]
	322 Call StringBuilder.AppendFormat, X0, X1, X2
	323 Move X0, [X19+40]
	324 Compare X0, 0
	325 JumpIfEqual {375}
	326 Call DigestHeaderParser.get_Opaque, X0
	327 Compare X0, 0
	328 JumpIfEqual {340}
	329 Move X0, [X19+40]
	330 Compare X0, 0
	331 JumpIfEqual {375}
	332 Call DigestHeaderParser.get_Opaque, X0
	333 Move X8, 0xAA5000
	334 Move X8, [X8+1672]
	335 Move X2, X0
	336 Move X0, X20
	337 Move X3, X31
	338 Move X1, [X8]
	339 Call StringBuilder.AppendFormat, X0, X1, X2
	340 Move X0, X20
	341 Move X1, X31
	342 Call StringBuilder.get_Length, X0
	343 Subtract W1, W0, 2
	344 Move X0, X20
	345 Move X2, X31
	346 Call StringBuilder.set_Length, X0, X1
	347 Move X8, [X20]
	348 Move X0, X20
	349 Move X9, [X8+360]
	350 Move X1, [X8+368]
	351 NotImplemented "Instruction BLR not yet implemented."
	352 Move X8, 0xAA0000
	353 Move X8, [X8+2080]
	354 Move X19, X0
	355 Move X8, [X8]
	356 Move X0, X8
	357 Call 0x1C17F10
	358 Move X1, X19
	359 Move X2, X31
	360 Move X23, X0
	361 Call Authorization..ctor, X0, X1
	362 Move X0, 0xA5A000
	363 Move X0, [X0+1456]
	364 Call 0x1C17D08
	365 Call 0x1C17F10
	366 Move X1, X31
	367 Move X19, X0
	368 Call InvalidOperationException..ctor, X0
	369 Move X0, 0xAA5000
	370 Move X0, [X0+1720]
	371 Call 0x1C17D08
	372 Move X1, X0
	373 Move X0, X19
	374 Call 0x1C17DEC
	375 Call 0x1C17F20
	376 Move X0, X21
	377 Call 0x1C17F18
	378 Call 0x1C17F20
	379 Move X22, X0
	380 NotImplemented "Instruction CMP not yet implemented."
	381 Move X0, X22
	382 Call 0x3EB2AD0
	383 Move X21, [X0]
	384 Call 0x3EB2AE0
	385 Move W22, W31
	386 Move X21, X31
	387 Move X22, X0
	388 Move W8, [X31+12]
	389 Compare W8, 0
	390 JumpIfEqual {394}
	391 Move X0, X19
	392 Move X1, X31
	393 Call Monitor.Exit, X0
	394 Compare X21, 0
	395 JumpIfNotEqual {398}
	396 Move X0, X22
	397 Call 0x1D2D690
	398 Move X0, X21
	399 Call 0x1C17F18
	400 Call 0x1991590

Method: System.DateTime get_LastUse()

Disassembly:
	0x0369AC08 BL 0x330E100
	0x0369AC0C ADRP X0, 0xAA4000

ISIL:
	001 Move X0, [X0+16]
	002 Return X0

