Type: System.Net.WebSockets.WebSocketHandle/<ConnectSocketAsync>d__27

Method: System.Void MoveNext()

Disassembly:
	0x036DC920 MOV X2, X31
	0x036DC924 BL 0x3627D60
	0x036DC928 CBZ X20, 0x36DCB4C
	0x036DC92C STR X0, [X20 + 0x10]
	0x036DC930 MOV X22, X0
	0x036DC934 LDR X0, [X25]
	0x036DC938 LDR W8, [X0 + 0xE0]
	0x036DC93C CBNZ W8, 0x36DC944
	0x036DC940 BL 0x1C16DFC
	0x036DC944 ADRP X8, 0xA5E000
	0x036DC948 ADRP X23, 0xA5E000
	0x036DC94C LDR X8, [X8 + 0x158]
	0x036DC950 LDR X23, [X23 + 0xA08]
	0x036DC954 ADD X4, X19, 0x41
	0x036DC958 LDR X0, [X8]
	0x036DC95C LDR X1, [X23]
	0x036DC960 MOV X2, X21
	0x036DC964 MOV X3, X22
	0x036DC968 BL 0x36DA690
	0x036DC96C ADRP X8, 0xA64000
	0x036DC970 LDR X8, [X8 + 0x3B8]
	0x036DC974 LDR X0, [X23]
	0x036DC978 LDR X3, [X20 + 0x10]
	0x036DC97C ADD X4, X19, 0x40
	0x036DC980 LDR X1, [X8]
	0x036DC984 MOV X2, X21
	0x036DC988 BL 0x36DA690
	0x036DC98C ADRP X8, 0xA64000
	0x036DC990 LDR X8, [X8 + 0x3C0]
	0x036DC994 LDR X1, [X19 + 0x30]
	0x036DC998 LDR X3, [X20 + 0x10]
	0x036DC99C ADD X4, X19, 0x42
	0x036DC9A0 LDR X0, [X8]
	0x036DC9A4 MOV X2, X21
	0x036DC9A8 BL 0x36DA690
	0x036DC9AC ADRP X8, 0xA64000
	0x036DC9B0 LDR X8, [X8 + 0x258]
	0x036DC9B4 LDR X0, [X8]
	0x036DC9B8 MOVZ W2, 0x5
	0x036DC9BC MOV X1, X21
	0x036DC9C0 MOV X3, X31
	0x036DC9C4 BL 0x3226C60
	0x036DC9C8 TBZ X0, 0x0, 0x36DCA40
	0x036DC9CC LDR X0, [X20 + 0x10]
	0x036DC9D0 MOV X1, X31
	0x036DC9D4 BL 0x322DA44
	0x036DC9D8 TBNZ X0, 0x0, 0x36DCA40
	0x036DC9DC LDR X8, [X19 + 0x38]
	0x036DC9E0 CBZ X8, 0x36DCC34
	0x036DC9E4 ADRP X9, 0xA4B000
	0x036DC9E8 LDR X9, [X9 + 0xAE0]
	0x036DC9EC LDR X21, [X8 + 0x18]
	0x036DC9F0 LDR X0, [X9]
	0x036DC9F4 BL 0x1C16F10
	0x036DC9F8 ADRP X8, 0xA64000
	0x036DC9FC LDR X8, [X8 + 0x3A8]
	0x036DCA00 MOV X22, X0
	0x036DCA04 LDR X2, [X8]
	0x036DCA08 MOV X1, X20
	0x036DCA0C MOV X3, X31
	0x036DCA10 BL 0x24AD1FC
	0x036DCA14 CBZ X21, 0x36DCBAC
	0x036DCA18 ADRP X8, 0xA64000
	0x036DCA1C LDR X8, [X8 + 0x3A0]
	0x036DCA20 LDR X2, [X8]
	0x036DCA24 MOV X0, X21
	0x036DCA28 MOV X1, X22
	0x036DCA2C BL 0x301C5F0
	0x036DCA30 CBZ X0, 0x36DCBA0
	0x036DCA34 LDR X8, [X19 + 0x48]
	0x036DCA38 CBNZ X8, 0x36DCBA0
	0x036DCA3C STR X0, [X19 + 0x48]
	0x036DCA40 LDR X0, [X25]
	0x036DCA44 LDP X21, X20, [X19 + 0x20]
	0x036DCA48 LDR W8, [X0 + 0xE0]
	0x036DCA4C CBNZ W8, 0x36DCA54
	0x036DCA50 BL 0x1C16DFC
	0x036DCA54 MOV X0, X21
	0x036DCA58 MOV X1, X20
	0x036DCA5C BL 0x36DA78C
	0x036DCA60 CBZ X0, 0x36DCB48
	0x036DCA64 LDR X2, [X26]
	0x036DCA68 MOV W1, W31
	0x036DCA6C BL 0x269F5D4
	0x036DCA70 LDR X8, [X27]
	0x036DCA74 STP X0, X1, [X31]
	0x036DCA78 ADD X0, X31, 0x0
	0x036DCA7C MOV X1, X8
	0x036DCA80 BL 0x2998B64
	0x036DCA84 TBZ X0, 0x0, 0x36DCB00
	0x036DCA88 LDR X1, [X24]
	0x036DCA8C ADD X0, X31, 0x0
	0x036DCA90 BL 0x2998BB0
	0x036DCA94 MOV X22, X0
	0x036DCA98 MOV X1, X31
	0x036DCA9C BL 0x32277A8
	0x036DCAA0 TBZ X0, 0x0, 0x36DC8C4
	0x036DCAA4 LDRB W8, [X19 + 0x40]
	0x036DCAA8 CBZ W8, 0x36DCC38
	0x036DCAAC LDRB W8, [X19 + 0x41]
	0x036DCAB0 CBZ W8, 0x36DCC38
	0x036DCAB4 LDRB W8, [X19 + 0x42]
	0x036DCAB8 CBZ W8, 0x36DCC38
	0x036DCABC MOVN W8, 0x1
	0x036DCAC0 LDR X20, [X19 + 0x48]
	0x036DCAC4 STR X31, [X19 + 0x48]
	0x036DCAC8 STR W8, [X19], #0x8
	0x036DCACC ADRP X8, 0xA1A000
	0x036DCAD0 LDR X8, [X8 + 0x130]
	0x036DCAD4 LDR X0, [X8]
	0x036DCAD8 LDR W8, [X0 + 0xE0]
	0x036DCADC CBNZ W8, 0x36DCAE4
	0x036DCAE0 BL 0x1C16DFC
	0x036DCAE4 ADRP X8, 0xA1A000
	0x036DCAE8 LDR X8, [X8 + 0x160]
	0x036DCAEC MOV X0, X19
	0x036DCAF0 MOV X1, X20
	0x036DCAF4 LDR X2, [X8]
	0x036DCAF8 BL 0x26322B0
	0x036DCAFC B 0x36DC8A8
	0x036DCB00 MOVZ W8, 0x1
	0x036DCB04 STR W8, [X19]
	0x036DCB08 LDR V0, [X31]
	0x036DCB0C ADRP X8, 0xA1A000
	0x036DCB10 STR V0, [X19 + 0x5]
	0x036DCB14 LDR X8, [X8 + 0x130]
	0x036DCB18 LDR X0, [X8]
	0x036DCB1C LDR W8, [X0 + 0xE0]
	0x036DCB20 CBNZ W8, 0x36DCB28
	0x036DCB24 BL 0x1C16DFC
	0x036DCB28 ADRP X8, 0xA64000
	0x036DCB2C LDR X8, [X8 + 0x398]
	0x036DCB30 ADD X0, X19, 0x8
	0x036DCB34 LDR X3, [X8]
	0x036DCB38 ADD X1, X31, 0x0
	0x036DCB3C MOV X2, X19
	0x036DCB40 BL 0x1FAFCD4
	0x036DCB44 B 0x36DC8A8
	0x036DCB48 BL 0x1C16F20
	0x036DCB4C BL 0x1C16F20
	0x036DCB50 BL 0x1C16F20
	0x036DCB54 ADRP X0, 0xA42000
	0x036DCB58 LDR X0, [X0 + 0x308]
	0x036DCB5C BL 0x1C16D08
	0x036DCB60 BL 0x1C16F10
	0x036DCB64 MOV X20, X0
	0x036DCB68 MOVZ W0, 0x7
	0x036DCB6C BL 0x36DD4C0
	0x036DCB70 MOV X1, X0
	0x036DCB74 MOV X0, X20
	0x036DCB78 MOV X2, X31
	0x036DCB7C BL 0x3661FBC
	0x036DCB80 MOVZ W8, 0x7
	0x036DCB84 STR W8, [X20 + 0x90]
	0x036DCB88 ADRP X0, 0xA64000
	0x036DCB8C LDR X0, [X0 + 0x3D8]
	0x036DCB90 BL 0x1C16D08
	0x036DCB94 MOV X1, X0
	0x036DCB98 MOV X0, X20
	0x036DCB9C BL 0x1C16DEC
	0x036DCBA0 LDR X8, [X19 + 0x38]
	0x036DCBA4 CBNZ X8, 0x36DCBB0
	0x036DCBA8 BL 0x1C16F20
	0x036DCBAC BL 0x1C16F20
	0x036DCBB0 LDR X20, [X8 + 0x18]
	0x036DCBB4 ADRP X0, 0xA17000
	0x036DCBB8 LDR X0, [X0 + 0x838]
	0x036DCBBC BL 0x1C16D08
	0x036DCBC0 MOV X1, X20
	0x036DCBC4 MOV X2, X31
	0x036DCBC8 BL 0x32280D8
	0x036DCBCC LDR X21, [X19 + 0x48]
	0x036DCBD0 MOV X20, X0
	0x036DCBD4 ADRP X0, 0xA64000
	0x036DCBD8 LDR X0, [X0 + 0x3E0]
	0x036DCBDC BL 0x1C16D08
	0x036DCBE0 MOV X1, X20
	0x036DCBE4 MOV X2, X21
	0x036DCBE8 MOV X3, X31
	0x036DCBEC BL 0x320A264
	0x036DCBF0 MOV X21, X0
	0x036DCBF4 ADRP X0, 0xA42000
	0x036DCBF8 LDR X0, [X0 + 0x308]
	0x036DCBFC BL 0x1C16D08
	0x036DCC00 BL 0x1C16F10
	0x036DCC04 MOV X20, X0
	0x036DCC08 MOV X1, X21
	0x036DCC0C MOV X2, X31
	0x036DCC10 BL 0x3661FBC
	0x036DCC14 MOVZ W8, 0x6
	0x036DCC18 STR W8, [X20 + 0x90]
	0x036DCC1C ADRP X0, 0xA64000
	0x036DCC20 LDR X0, [X0 + 0x3D8]
	0x036DCC24 BL 0x1C16D08
	0x036DCC28 MOV X1, X0
	0x036DCC2C MOV X0, X20
	0x036DCC30 BL 0x1C16DEC
	0x036DCC34 BL 0x1C16F20
	0x036DCC38 ADRP X0, 0xA42000
	0x036DCC3C LDR X0, [X0 + 0x308]
	0x036DCC40 BL 0x1C16D08
	0x036DCC44 BL 0x1C16F10
	0x036DCC48 MOV X20, X0
	0x036DCC4C ADRP X0, 0xA61000
	0x036DCC50 LDR X0, [X0 + 0xD30]
	0x036DCC54 BL 0x1C16D08
	0x036DCC58 MOV X1, X0
	0x036DCC5C MOV X0, X20
	0x036DCC60 MOV X2, X31
	0x036DCC64 BL 0x3661FBC
	0x036DCC68 ADRP X0, 0xA64000
	0x036DCC6C LDR X0, [X0 + 0x3D8]
	0x036DCC70 BL 0x1C16D08
	0x036DCC74 MOV X1, X0
	0x036DCC78 MOV X0, X20
	0x036DCC7C BL 0x1C16DEC
	0x036DCC80 B 0x36DCCE4
	0x036DCC84 B 0x36DCCE4
	0x036DCC88 B 0x36DCCE4
	0x036DCC8C B 0x36DCCE4
	0x036DCC90 B 0x36DCCE4
	0x036DCC94 B 0x36DCCE4
	0x036DCC98 B 0x36DCCE4
	0x036DCC9C B 0x36DCCE4
	0x036DCCA0 B 0x36DCCE4
	0x036DCCA4 B 0x36DCCE4
	0x036DCCA8 B 0x36DCCE4
	0x036DCCAC B 0x36DCCE4
	0x036DCCB0 B 0x36DCCE4
	0x036DCCB4 B 0x36DCCE4
	0x036DCCB8 B 0x36DCCE4
	0x036DCCBC B 0x36DCCE4
	0x036DCCC0 B 0x36DCCE4
	0x036DCCC4 B 0x36DCCE4
	0x036DCCC8 B 0x36DCCE4
	0x036DCCCC B 0x36DCCE4
	0x036DCCD0 B 0x36DCCE4
	0x036DCCD4 B 0x36DCCE4
	0x036DCCD8 B 0x36DCCE4
	0x036DCCDC B 0x36DCCE4
	0x036DCCE0 B 0x36DCCE4
	0x036DCCE4 CMP W1, 0x1
	0x036DCCE8 B.NE 0x36DCD5C
	0x036DCCEC BL 0x3EB1AD0
	0x036DCCF0 MOV X20, X0
	0x036DCCF4 ADRP X0, 0xA17000
	0x036DCCF8 LDR X0, [X0 + 0x7D0]
	0x036DCCFC BL 0x1C16D08
	0x036DCD00 LDR X8, [X20]
	0x036DCD04 LDR X1, [X8]
	0x036DCD08 BL 0x1C17270
	0x036DCD0C TBZ X0, 0x0, 0x36DCD64
	0x036DCD10 LDR X20, [X20]
	0x036DCD14 BL 0x3EB1AE0
	0x036DCD18 MOVN W8, 0x1
	0x036DCD1C STR X31, [X19 + 0x48]
	0x036DCD20 STR W8, [X19], #0x8
	0x036DCD24 ADRP X0, 0xA1A000
	0x036DCD28 LDR X0, [X0 + 0x130]
	0x036DCD2C BL 0x1C16D08
	0x036DCD30 LDR W8, [X0 + 0xE0]
	0x036DCD34 CBNZ W8, 0x36DCD3C
	0x036DCD38 BL 0x1C16DFC
	0x036DCD3C ADRP X0, 0xA1A000
	0x036DCD40 LDR X0, [X0 + 0x240]
	0x036DCD44 BL 0x1C16D08
	0x036DCD48 MOV X2, X0
	0x036DCD4C MOV X0, X19
	0x036DCD50 MOV X1, X20
	0x036DCD54 BL 0x26324C8
	0x036DCD58 B 0x36DC8A8
	0x036DCD5C MOV X19, X0
	0x036DCD60 B 0x36DCD8C
	0x036DCD64 MOVZ W0, 0x8
	0x036DCD68 BL 0x3EB1AF0
	0x036DCD6C LDR X8, [X20]
	0x036DCD70 STR X8, [X0]
	0x036DCD74 ADRP X1, 0x7D8000
	0x036DCD78 ADD X1, X1, 0xE58
	0x036DCD7C MOV X2, X31
	0x036DCD80 BL 0x3EB1B00
	0x036DCD84 MOV X19, X0
	0x036DCD88 BL 0x3EB1AE0
	0x036DCD8C MOV X0, X19
	0x036DCD90 BL 0x1D2C690
	0x036DCD94 BL 0x1990590
	0x036DCD98 STR X30, [X31 - 0x30]!
	0x036DCD9C STP X22, X21, [X31 + 0x10]
	0x036DCDA0 STP X20, X19, [X31 + 0x20]
	0x036DCDA4 ADRP X22, 0xD04000
	0x036DCDA8 ADRP X21, 0xA1A000
	0x036DCDAC LDRB W8, [X22 + 0xAD8]
	0x036DCDB0 LDR X21, [X21 + 0x130]
	0x036DCDB4 MOV X19, X1
	0x036DCDB8 MOV X20, X0
	0x036DCDBC TBNZ X8, 0x0, 0x36DCDE0
	0x036DCDC0 ADRP X0, 0xA1A000
	0x036DCDC4 LDR X0, [X0 + 0x248]
	0x036DCDC8 BL 0x1C16CF4
	0x036DCDCC ADRP X0, 0xA1A000
	0x036DCDD0 LDR X0, [X0 + 0x130]
	0x036DCDD4 BL 0x1C16CF4
	0x036DCDD8 MOVZ W8, 0x1
	0x036DCDDC STRB W8, [X22 + 0xAD8]
	0x036DCDE0 LDR X0, [X21]
	0x036DCDE4 ADRP X21, 0xA1A000
	0x036DCDE8 LDR W8, [X0 + 0xE0]
	0x036DCDEC LDR X21, [X21 + 0x248]
	0x036DCDF0 CBNZ W8, 0x36DCDF8
	0x036DCDF4 BL 0x1C16DFC
	0x036DCDF8 LDR X2, [X21]
	0x036DCDFC ADD X0, X20, 0x8
	0x036DCE00 MOV X1, X19
	0x036DCE04 LDP X20, X19, [X31 + 0x20]
	0x036DCE08 LDP X22, X21, [X31 + 0x10]
	0x036DCE0C LDR X30, [X31], #0x30
	0x036DCE10 B 0x2632228
	0x036DCE14 SUB X31, X31, 0x60
	0x036DCE18 STR X30, [X31 + 0x20]
	0x036DCE1C STP X24, X23, [X31 + 0x30]
	0x036DCE20 STP X22, X21, [X31 + 0x40]
	0x036DCE24 STP X20, X19, [X31 + 0x50]
	0x036DCE28 ADRP X20, 0xD04000
	0x036DCE2C LDRB W8, [X20 + 0xAD9]
	0x036DCE30 MOV X19, X0
	0x036DCE34 TBNZ X8, 0x0, 0x36DCEB8
	0x036DCE38 ADRP X0, 0xA64000
	0x036DCE3C LDR X0, [X0 + 0x3E8]
	0x036DCE40 BL 0x1C16CF4
	0x036DCE44 ADRP X0, 0xA1A000
	0x036DCE48 LDR X0, [X0 + 0x160]
	0x036DCE4C BL 0x1C16CF4
	0x036DCE50 ADRP X0, 0xA1A000
	0x036DCE54 LDR X0, [X0 + 0x130]
	0x036DCE58 BL 0x1C16CF4
	0x036DCE5C ADRP X0, 0xA17000
	0x036DCE60 LDR X0, [X0 + 0x618]
	0x036DCE64 BL 0x1C16CF4
	0x036DCE68 ADRP X0, 0xA4B000
	0x036DCE6C LDR X0, [X0 + 0x2B8]
	0x036DCE70 BL 0x1C16CF4
	0x036DCE74 ADRP X0, 0xA4B000
	0x036DCE78 LDR X0, [X0 + 0x2C0]
	0x036DCE7C BL 0x1C16CF4
	0x036DCE80 ADRP X0, 0xA4B000
	0x036DCE84 LDR X0, [X0 + 0x2C8]
	0x036DCE88 BL 0x1C16CF4
	0x036DCE8C ADRP X0, 0xA17000
	0x036DCE90 LDR X0, [X0 + 0x8F0]
	0x036DCE94 BL 0x1C16CF4
	0x036DCE98 ADRP X0, 0xA4B000
	0x036DCE9C LDR X0, [X0 + 0x2D0]
	0x036DCEA0 BL 0x1C16CF4
	0x036DCEA4 ADRP X0, 0xA64000
	0x036DCEA8 LDR X0, [X0 + 0x1A8]
	0x036DCEAC BL 0x1C16CF4
	0x036DCEB0 MOVZ W8, 0x1
	0x036DCEB4 STRB W8, [X20 + 0xAD9]
	0x036DCEB8 STP X31, X31, [X31 + 0x10]
	0x036DCEBC STR W31, [X31 + 0x8]
	0x036DCEC0 ADRP X23, 0xA64000
	0x036DCEC4 LDR W24, [X19]
	0x036DCEC8 LDR X23, [X23 + 0x1A8]
	0x036DCECC CBZ W24, 0x36DCF1C
	0x036DCED0 LDR X0, [X23]
	0x036DCED4 LDR W8, [X0 + 0xE0]
	0x036DCED8 CBNZ W8, 0x36DCEE4
	0x036DCEDC BL 0x1C16DFC
	0x036DCEE0 LDR X0, [X23]
	0x036DCEE4 BL 0x1C16D0C
	0x036DCEE8 LDR X8, [X0]
	0x036DCEEC STR X8, [X19 + 0x30]
	0x036DCEF0 CBZ X8, 0x36DCF34
	0x036DCEF4 LDR X0, [X23]
	0x036DCEF8 LDR W8, [X0 + 0xE0]
	0x036DCEFC CBNZ W8, 0x36DCF08
	0x036DCF00 BL 0x1C16DFC
	0x036DCF04 LDR X0, [X23]
	0x036DCF08 BL 0x1C16D0C
	0x036DCF0C STR X31, [X0]
	0x036DCF10 LDR X0, [X23]
	0x036DCF14 BL 0x1C16D0C
	0x036DCF18 B 0x36DCF54
	0x036DCF1C LDUR V0, [X19 + 0x48]
	0x036DCF20 MOVN W24, 0x0
	0x036DCF24 STR V0, [X31 + 0x1]
	0x036DCF28 STP X31, X31, [X19 + 0x48]
	0x036DCF2C STR W24, [X19]
	0x036DCF30 B 0x36DD0F4
	0x036DCF34 ADRP X8, 0xA17000
	0x036DCF38 LDR X8, [X8 + 0x8F0]
	0x036DCF3C LDR X0, [X8]
	0x036DCF40 BL 0x1C16F10
	0x036DCF44 MOV X20, X0
	0x036DCF48 MOV X1, X31
	0x036DCF4C BL 0x3231AC4
	0x036DCF50 STR X20, [X19 + 0x30]
	0x036DCF54 ADRP X8, 0xA17000
	0x036DCF58 LDR X8, [X8 + 0x618]
	0x036DCF5C LDR X0, [X8]
	0x036DCF60 MOVZ W1, 0x1
	0x036DCF64 BL 0x1C16D6C
	0x036DCF68 STR X0, [X19 + 0x38]
	0x036DCF6C STRH W31, [X19 + 0x40]
	0x036DCF70 B 0x36DD094
	0x036DCF74 B 0x36DCF80
	0x036DCF78 B 0x36DCF80
	0x036DCF7C B 0x36DCF80
	0x036DCF80 MOV X20, X1
	0x036DCF84 MOV X22, X0
	0x036DCF88 CMP W20, 0x1
	0x036DCF8C B.NE 0x36DCFFC
	0x036DCF90 MOV X0, X22
	0x036DCF94 BL 0x3EB1AD0
	0x036DCF98 MOV X20, X0
	0x036DCF9C ADRP X0, 0xA17000
	0x036DCFA0 LDR X0, [X0 + 0x7D0]
	0x036DCFA4 BL 0x1C16D08
	0x036DCFA8 LDR X8, [X20]
	0x036DCFAC LDR X1, [X8]
	0x036DCFB0 BL 0x1C17270
	0x036DCFB4 TBZ X0, 0x0, 0x36DCFD4
	0x036DCFB8 LDR X8, [X20]
	0x036DCFBC MOVZ W9, 0x1
	0x036DCFC0 STR W9, [X31 + 0x8]
	0x036DCFC4 STR X8, [X31]
	0x036DCFC8 BL 0x3EB1AE0
	0x036DCFCC MOV X8, X31
	0x036DCFD0 B 0x36DD004
	0x036DCFD4 MOVZ W0, 0x8
	0x036DCFD8 BL 0x3EB1AF0
	0x036DCFDC LDR X8, [X20]
	0x036DCFE0 STR X8, [X0]
	0x036DCFE4 ADRP X1, 0x7D8000
	0x036DCFE8 ADD X1, X1, 0xE58
	0x036DCFEC MOV X2, X31
	0x036DCFF0 BL 0x3EB1B00
	0x036DCFF4 MOV X22, X0
	0x036DCFF8 BL 0x3EB1AE0
	0x036DCFFC MOV X0, X22
	0x036DD000 BL 0x1D2C690
	0x036DD004 ADD X9, X31, 0x0
	0x036DD008 MOVN W10, 0x1
	0x036DD00C LDR X20, [X9, X8, LSL #3]
	0x036DD010 STR W10, [X19]
	0x036DD014 STP X31, X31, [X19 + 0x30]
	0x036DD018 ADRP X0, 0xA19000
	0x036DD01C LDR X0, [X0 + 0x130]
	0x036DD020 ADD X21, X19, 0x8
	0x036DD024 BL 0x1C16D08
	0x036DD028 LDR W8, [X0 + 0xE0]
	0x036DD02C CBNZ W8, 0x36DD034
	0x036DD030 BL 0x1C16DFC
	0x036DD034 ADRP X0, 0xA19000
	0x036DD038 LDR X0, [X0 + 0x240]
	0x036DD03C BL 0x1C16D08
	0x036DD040 MOV X2, X0
	0x036DD044 MOV X0, X21
	0x036DD048 MOV X1, X20
	0x036DD04C BL 0x26324C8
	0x036DD050 B 0x36DD268
	0x036DD054 LDR X8, [X19 + 0x38]
	0x036DD058 CBZ X8, 0x36DD290
	0x036DD05C LDR W9, [X8 + 0x18]
	0x036DD060 CBZ W9, 0x36DD294
	0x036DD064 LDRB W20, [X8 + 0x20]
	0x036DD068 CMP W20, 0xA
	0x036DD06C B.NE 0x36DD07C
	0x036DD070 LDRH W8, [X19 + 0x40]
	0x036DD074 CMP W8, 0xD
	0x036DD078 B.EQ 0x36DD110
	0x036DD07C LDR X0, [X19 + 0x30]
	0x036DD080 CBZ X0, 0x36DD298
	0x036DD084 MOV W1, W20
	0x036DD088 MOV X2, X31
	0x036DD08C BL 0x3233D30
	0x036DD090 STRH W20, [X19 + 0x40]
	0x036DD094 LDR X0, [X19 + 0x20]
	0x036DD098 CBZ X0, 0x36DD28C
	0x036DD09C LDR X8, [X0]
	0x036DD0A0 LDR X1, [X19 + 0x38]
	0x036DD0A4 LDR X4, [X19 + 0x28]
	0x036DD0A8 LDR X9, [X8 + 0x2D8]
	0x036DD0AC LDR X5, [X8 + 0x2E0]
	0x036DD0B0 MOVZ W3, 0x1
	0x036DD0B4 MOV W2, W31
	0x036DD0B8 BLR X9
	0x036DD0BC CBZ X0, 0x36DD288
	0x036DD0C0 ADRP X8, 0xA4A000
	0x036DD0C4 LDR X8, [X8 + 0x2D0]
	0x036DD0C8 LDR X2, [X8]
	0x036DD0CC MOV W1, W31
	0x036DD0D0 BL 0x269D3A8
	0x036DD0D4 ADRP X8, 0xA4A000
	0x036DD0D8 LDR X8, [X8 + 0x2C8]
	0x036DD0DC STP X0, X1, [X31 + 0x10]
	0x036DD0E0 LDR X8, [X8]
	0x036DD0E4 ADD X0, X31, 0x10
	0x036DD0E8 MOV X1, X8
	0x036DD0EC BL 0x2998978
	0x036DD0F0 TBZ X0, 0x0, 0x36DD228
	0x036DD0F4 ADRP X8, 0xA4A000
	0x036DD0F8 LDR X8, [X8 + 0x2C0]
	0x036DD0FC LDR X1, [X8]
	0x036DD100 ADD X0, X31, 0x10
	0x036DD104 BL 0x29989C4
	0x036DD108 CMP W0, 0x1
	0x036DD10C B.EQ 0x36DD054
	0x036DD110 LDR X0, [X19 + 0x30]
	0x036DD114 CBZ X0, 0x36DD2A4
	0x036DD118 MOV X1, X31
	0x036DD11C BL 0x323260C
	0x036DD120 CMP W0, 0x1
	0x036DD124 B.LT 0x36DD17C
	0x036DD128 LDR X20, [X19 + 0x30]
	0x036DD12C CBZ X20, 0x36DD2AC
	0x036DD130 MOV X0, X20
	0x036DD134 MOV X1, X31
	0x036DD138 BL 0x323260C
	0x036DD13C SUB W1, W0, 0x1
	0x036DD140 MOV X0, X20
	0x036DD144 MOV X2, X31
	0x036DD148 BL 0x3232E88
	0x036DD14C AND W8, W0, 0xFFFF
	0x036DD150 CMP W8, 0xD
	0x036DD154 B.NE 0x36DD17C
	0x036DD158 LDR X20, [X19 + 0x30]
	0x036DD15C CBZ X20, 0x36DD2B4
	0x036DD160 MOV X0, X20
	0x036DD164 MOV X1, X31
	0x036DD168 BL 0x323260C
	0x036DD16C SUB W1, W0, 0x1
	0x036DD170 MOV X0, X20
	0x036DD174 MOV X2, X31
	0x036DD178 BL 0x3232ADC
	0x036DD17C LDR X0, [X19 + 0x30]
	0x036DD180 CBZ X0, 0x36DD2A8
	0x036DD184 LDR X8, [X0]
	0x036DD188 LDP X9, X1, [X8 + 0x168]
	0x036DD18C BLR X9
	0x036DD190 MOV X20, X0
	0x036DD194 MOV X21, X31
	0x036DD198 MOVZ W22, 0xD
	0x036DD19C TBZ X24, 0x1F, 0x36DD1D8
	0x036DD1A0 LDR X0, [X19 + 0x30]
	0x036DD1A4 CBZ X0, 0x36DD2B0
	0x036DD1A8 MOV X1, X31
	0x036DD1AC BL 0x3232AC0
	0x036DD1B0 LDR X0, [X23]
	0x036DD1B4 LDR X24, [X19 + 0x30]
	0x036DD1B8 LDR W8, [X0 + 0xE0]
	0x036DD1BC CBNZ W8, 0x36DD1C8
	0x036DD1C0 BL 0x1C16DFC
	0x036DD1C4 LDR X0, [X23]
	0x036DD1C8 BL 0x1C16D0C
	0x036DD1CC STR X24, [X0]
	0x036DD1D0 LDR X0, [X23]
	0x036DD1D4 BL 0x1C16D0C
	0x036DD1D8 CBNZ X21, 0x36DD29C
	0x036DD1DC CBZ W22, 0x36DD280
	0x036DD1E0 CMP W22, 0xD
	0x036DD1E4 B.NE 0x36DD268
	0x036DD1E8 MOVN W8, 0x1
	0x036DD1EC STP X31, X31, [X19 + 0x30]
	0x036DD1F0 STR W8, [X19], #0x8
	0x036DD1F4 ADRP X8, 0xA19000
	0x036DD1F8 LDR X8, [X8 + 0x130]
	0x036DD1FC LDR X0, [X8]
	0x036DD200 LDR W8, [X0 + 0xE0]
	0x036DD204 CBNZ W8, 0x36DD20C
	0x036DD208 BL 0x1C16DFC
	0x036DD20C ADRP X8, 0xA19000
	0x036DD210 LDR X8, [X8 + 0x160]
	0x036DD214 MOV X0, X19
	0x036DD218 MOV X1, X20
	0x036DD21C LDR X2, [X8]
	0x036DD220 BL 0x26322B0
	0x036DD224 B 0x36DD268
	0x036DD228 STR W31, [X19]
	0x036DD22C LDR V0, [X31 + 0x1]
	0x036DD230 ADRP X8, 0xA19000
	0x036DD234 STUR V0, [X19 + 0x48]
	0x036DD238 LDR X8, [X8 + 0x130]
	0x036DD23C LDR X0, [X8]
	0x036DD240 LDR W8, [X0 + 0xE0]
	0x036DD244 CBNZ W8, 0x36DD24C
	0x036DD248 BL 0x1C16DFC
	0x036DD24C ADRP X8, 0xA63000
	0x036DD250 LDR X8, [X8 + 0x3E8]
	0x036DD254 ADD X0, X19, 0x8
	0x036DD258 LDR X3, [X8]
	0x036DD25C ADD X1, X31, 0x10
	0x036DD260 MOV X2, X19
	0x036DD264 BL 0x1FAEE38
	0x036DD268 LDP X20, X19, [X31 + 0x50]
	0x036DD26C LDP X22, X21, [X31 + 0x40]
	0x036DD270 LDP X24, X23, [X31 + 0x30]
	0x036DD274 LDR X30, [X31 + 0x20]
	0x036DD278 ADD X31, X31, 0x60
	0x036DD27C RET
	0x036DD280 MOVN X8, 0x0
	0x036DD284 B 0x36DD004
	0x036DD288 BL 0x1C16F20
	0x036DD28C BL 0x1C16F20
	0x036DD290 BL 0x1C16F20
	0x036DD294 BL 0x1C16F28
	0x036DD298 BL 0x1C16F20
	0x036DD29C MOV X0, X21
	0x036DD2A0 BL 0x1C16F18
	0x036DD2A4 BL 0x1C16F20
	0x036DD2A8 BL 0x1C16F20
	0x036DD2AC BL 0x1C16F20
	0x036DD2B0 BL 0x1C16F20
	0x036DD2B4 BL 0x1C16F20
	0x036DD2B8 B 0x36DD30C
	0x036DD2BC B 0x36DD30C
	0x036DD2C0 B 0x36DD30C
	0x036DD2C4 B 0x36DD30C
	0x036DD2C8 B 0x36DD30C
	0x036DD2CC MOV X22, X0
	0x036DD2D0 MOV W24, W31
	0x036DD2D4 B 0x36DD310
	0x036DD2D8 B 0x36DD30C
	0x036DD2DC B 0x36DD30C
	0x036DD2E0 B 0x36DD30C
	0x036DD2E4 B 0x36DD30C
	0x036DD2E8 B 0x36DCF80
	0x036DD2EC B 0x36DD30C
	0x036DD2F0 B 0x36DD30C
	0x036DD2F4 B 0x36DD30C
	0x036DD2F8 B 0x36DD30C
	0x036DD2FC B 0x36DD30C
	0x036DD300 B 0x36DD30C
	0x036DD304 B 0x36DD30C
	0x036DD308 B 0x36DD30C
	0x036DD30C MOV X22, X0
	0x036DD310 CMP W1, 0x1
	0x036DD314 B.NE 0x36DD338
	0x036DD318 MOV X0, X22
	0x036DD31C BL 0x3EB1AD0
	0x036DD320 LDR X21, [X0]
	0x036DD324 BL 0x3EB1AE0
	0x036DD328 MOV W22, W31
	0x036DD32C MOV X20, X31
	0x036DD330 TBZ X24, 0x1F, 0x36DD1D8
	0x036DD334 B 0x36DD1A0
	0x036DD338 MOV X20, X1
	0x036DD33C MOV X21, X31
	0x036DD340 TBZ X24, 0x1F, 0x36DD37C
	0x036DD344 LDR X0, [X19 + 0x30]
	0x036DD348 CBZ X0, 0x36DD388
	0x036DD34C MOV X1, X31
	0x036DD350 BL 0x3232AC0
	0x036DD354 LDR X0, [X23]
	0x036DD358 LDR X24, [X19 + 0x30]
	0x036DD35C LDR W8, [X0 + 0xE0]
	0x036DD360 CBNZ W8, 0x36DD36C
	0x036DD364 BL 0x1C16DFC
	0x036DD368 LDR X0, [X23]
	0x036DD36C BL 0x1C16D0C
	0x036DD370 STR X24, [X0]
	0x036DD374 LDR X0, [X23]
	0x036DD378 BL 0x1C16D0C
	0x036DD37C CBZ X21, 0x36DCF88
	0x036DD380 MOV X0, X21

ISIL:
	001 Subtract X31, X31, 192
	002 Move [X31+112], X30
	003 Move [X31+120], X27
	004 Move [X31+128], X26
	005 Move [X31+136], X25
	006 Move [X31+144], X24
	007 Move [X31+152], X23
	008 Move [X31+160], X22
	009 Move [X31+168], X21
	010 Move [X31+176], X20
	011 Move [X31+184], X19
	012 Move X20, 0xD05000
	013 Move W8, [X20+2773]
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {63}
	019 Move X0, 0xA42000
	020 Move X0, [X0+3656]
	021 Call 0x1C17CF4
	022 Move X0, 0xA65000
	023 Move X0, [X0+840]
	024 Call 0x1C17CF4
	025 Move X0, 0xA65000
	026 Move X0, [X0+848]
	027 Call 0x1C17CF4
	028 Move X0, 0xA64000
	029 Move X0, [X0+2272]
	030 Call 0x1C17CF4
	031 Move X0, 0xA64000
	032 Move X0, [X0+2280]
	033 Call 0x1C17CF4
	034 Move X0, 0xA20000
	035 Move X0, [X0+2008]
	036 Call 0x1C17CF4
	037 Move X0, 0xA65000
	038 Move X0, [X0+856]
	039 Call 0x1C17CF4
	040 Move X0, 0xA65000
	041 Move X0, [X0+864]
	042 Call 0x1C17CF4
	043 Move X0, 0xA65000
	044 Move X0, [X0+872]
	045 Call 0x1C17CF4
	046 Move X0, 0xA21000
	047 Move X0, [X0+1928]
	048 Call 0x1C17CF4
	049 Move X0, 0xA65000
	050 Move X0, [X0+880]
	051 Call 0x1C17CF4
	052 Move X0, 0xA65000
	053 Move X0, [X0+888]
	054 Call 0x1C17CF4
	055 Move X0, 0xA65000
	056 Move X0, [X0+896]
	057 Call 0x1C17CF4
	058 Move X0, 0xA65000
	059 Move X0, [X0+664]
	060 Call 0x1C17CF4
	061 Move W8, 1
	062 Move [X20+2773], W8
	063 Move [X31+96], X31
	064 Move [X31+104], X31
	065 Move [X31+88], X31
	066 Move [X31+64], X31
	067 Move [X31+72], X31
	068 Move [X31+56], X31
	069 Move X25, 0xA20000
	070 Move X26, 0xA64000
	071 Move W24, [X19]
	072 Move X23, [X19+48]
	073 Move X25, [X25+2008]
	074 Move X26, [X26+2280]
	075 Compare W24, 0
	076 JumpIfEqual {115}
	077 NotImplemented "Instruction CMP not yet implemented."
	078 Move X0, [X19+32]
	079 Move X1, X31
	080 Call Dns.GetHostAddressesAsync, X0
	081 Compare X0, 0
	082 JumpIfEqual {436}
	083 Move X8, 0xA65000
	084 Move X8, [X8+880]
	085 Move X2, [X8]
	086 Move W1, W31
	087 Call Task`1<Object>.ConfigureAwait, X0, X1
	088 Move X8, 0xA65000
	089 Move X8, [X8+872]
	090 Move [X31+96], X0
	091 Move [X31+104], X1
	092 Move X8, [X8]
	093 Add X0, X31, 96
	094 Move X1, X8
	095 Call ConfiguredTaskAwaiter<Object>.get_IsCompleted, X0
	096 Move TEMP, X0
	097 And TEMP, TEMP, 1
	098 Compare TEMP, 1
	099 JumpIfEqual {123}
	100 Move [X19], W31
	101 Move V0, [X31+6]
	102 Move [X19+4], V0
	103 Move X0, [X26]
	104 Move W8, [X0+224]
	105 Compare W8, 0
	106 JumpIfNotEqual {108}
	107 Call 0x1C17DFC
	108 Move X8, 0xA65000
	109 Move X8, [X8+840]
	110 Add X0, X19, 8
	111 Move X3, [X8]
	112 Add X1, X31, 96
	113 Move X2, X19
	114 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	115 Move V0, [X19+4]
	116 Move TEMP, 0
	117 Not TEMP
	118 Move W24, TEMP
	119 Move [X31+6], V0
	120 Move [X19+64], X31
	121 Move [X19+72], X31
	122 Move [X19], W24
	123 Move X8, 0xA65000
	124 Move X8, [X8+864]
	125 Add X0, X31, 96
	126 Move X1, [X8]
	127 Call ConfiguredTaskAwaiter<Object>.GetResult, X0
	128 Move X9, X0
	129 Move W10, W31
	130 Move X8, X31
	131 Move [X19+80], X0
	132 Move [X19+88], W31
	133 Compare X9, 0
	134 JumpIfEqual {647}
	135 Move W11, [X9+24]
	136 NotImplemented "Instruction CMP not yet implemented."
	137 Add X8, X9, W10
	138 Move X20, [X8+32]
	139 Compare X20, 0
	140 JumpIfEqual {410}
	141 Move X0, X20
	142 Move X1, X31
	143 Call IPAddress.get_AddressFamily, X0
	144 Move X8, 0xA21000
	145 Move X8, [X8+1928]
	146 Move W21, W0
	147 Move X0, [X8]
	148 Call 0x1C17F10
	149 Move X22, X0
	150 Move W2, 1
	151 Move W3, 6
	152 Move W1, W21
	153 Move X4, X31
	154 Call Socket..ctor, X0, X1, X2, X3
	155 NotImplemented "Instruction CMP not yet implemented."
	156 Move [X19+96], X22
	157 NotImplemented "Instruction LDUR not yet implemented."
	158 Move TEMP, 0
	159 Not TEMP
	160 Move W24, TEMP
	161 Move [X31+4], V0
	162 Move [X19+152], X31
	163 Move [X19+160], X31
	164 Move [X19], W24
	165 Add X0, X31, 64
	166 Move X1, X31
	167 Call ConfiguredTaskAwaiter.GetResult, X0
	168 Move X20, X31
	169 Move W21, 21
	170 Move TEMP, X24
	171 And TEMP, TEMP, -2147483648
	172 Compare TEMP, -2147483648
	173 JumpIfNotEqual {177}
	174 Add X0, X19, 128
	175 Move X1, X31
	176 Call CancellationTokenRegistration.Dispose, X0
	177 Compare X20, 0
	178 JumpIfNotEqual {406}
	179 NotImplemented "Instruction CMP not yet implemented."
	180 Compare W21, 0
	181 JumpIfNotEqual {340}
	182 Move X20, X31
	183 Move [X19+128], X31
	184 Move [X19+136], X31
	185 Move [X19+144], X31
	186 Move W21, 22
	187 Move TEMP, X24
	188 And TEMP, TEMP, -2147483648
	189 Compare TEMP, -2147483648
	190 JumpIfNotEqual {348}
	191 Move X27, 0xA65000
	192 Move X27, [X27+664]
	193 Move X8, [X27]
	194 Move W9, [X8+224]
	195 Compare W9, 0
	196 JumpIfNotEqual {200}
	197 Move X0, X8
	198 Call 0x1C17DFC
	199 Move X8, [X27]
	200 Move X9, [X8+184]
	201 Move X21, [X9+16]
	202 Compare X21, 0
	203 JumpIfNotEqual {226}
	204 Move W9, [X8+224]
	205 Compare W9, 0
	206 JumpIfNotEqual {210}
	207 Move X0, X8
	208 Call 0x1C17DFC
	209 Move X8, [X27]
	210 Move X9, 0xA42000
	211 Move X8, [X8+184]
	212 Move X9, [X9+3656]
	213 Move X22, [X8]
	214 Move X0, [X9]
	215 Call 0x1C17F10
	216 Move X8, 0xA65000
	217 Move X8, [X8+888]
	218 Move X21, X0
	219 Move X2, [X8]
	220 Move X1, X22
	221 Move X3, X31
	222 Call Action`1<Object>..ctor, X0, X1, X2
	223 Move X8, [X27]
	224 Move X8, [X8+184]
	225 Move [X8+16], X21
	226 Move X0, [X25]
	227 Move X22, [X19+96]
	228 Move W8, [X0+224]
	229 Compare W8, 0
	230 JumpIfNotEqual {232}
	231 Call 0x1C17DFC
	232 Add X0, X19, 40
	233 Add X8, X31, 8
	234 Move X1, X21
	235 Move X2, X22
	236 Move X3, X31
	237 Call CancellationToken.Register, X0, X1, X2
	238 NotImplemented "Instruction LDUR not yet implemented."
	239 Move X8, [X31+24]
	240 Move [X31+2], V0
	241 Move [X31+48], X8
	242 Move [X19+120], X8
	243 Move [X19+104], V0
	244 Compare X23, 0
	245 JumpIfEqual {437}
	246 Move X0, [X23+16]
	247 Compare X0, 0
	248 JumpIfEqual {438}
	249 Move X1, X31
	250 Call CancellationTokenSource.get_Token, X0
	251 Move X8, [X27]
	252 Move [X31+88], X0
	253 Move W9, [X8+224]
	254 Compare W9, 0
	255 JumpIfNotEqual {259}
	256 Move X0, X8
	257 Call 0x1C17DFC
	258 Move X8, [X27]
	259 Move X9, [X8+184]
	260 Move X21, [X9+24]
	261 Compare X21, 0
	262 JumpIfNotEqual {285}
	263 Move W9, [X8+224]
	264 Compare W9, 0
	265 JumpIfNotEqual {269}
	266 Move X0, X8
	267 Call 0x1C17DFC
	268 Move X8, [X27]
	269 Move X9, 0xA42000
	270 Move X8, [X8+184]
	271 Move X9, [X9+3656]
	272 Move X22, [X8]
	273 Move X0, [X9]
	274 Call 0x1C17F10
	275 Move X8, 0xA65000
	276 Move X8, [X8+896]
	277 Move X21, X0
	278 Move X2, [X8]
	279 Move X1, X22
	280 Move X3, X31
	281 Call Action`1<Object>..ctor, X0, X1, X2
	282 Move X8, [X27]
	283 Move X8, [X8+184]
	284 Move [X8+24], X21
	285 Move X0, [X25]
	286 Move X22, [X19+96]
	287 Move W8, [X0+224]
	288 Compare W8, 0
	289 JumpIfNotEqual {291}
	290 Call 0x1C17DFC
	291 Add X8, X31, 8
	292 Add X0, X31, 88
	293 Move X1, X21
	294 Move X2, X22
	295 Move X3, X31
	296 Call CancellationToken.Register, X0, X1, X2
	297 NotImplemented "Instruction LDUR not yet implemented."
	298 Move X8, [X31+24]
	299 Move [X31+2], V0
	300 Move [X31+48], X8
	301 Move X0, [X19+96]
	302 Move [X19+144], X8
	303 Move [X19+8], V0
	304 Compare X0, 0
	305 JumpIfEqual {439}
	306 Move W2, [X19+56]
	307 Move X1, X20
	308 Move X3, X31
	309 Call Socket.ConnectAsync, X0, X1, X2
	310 Compare X0, 0
	311 JumpIfEqual {440}
	312 Move W1, W31
	313 Move X2, X31
	314 Call Task.ConfigureAwait, X0, X1
	315 Move [X31+64], X0
	316 Move [X31+72], X1
	317 Add X0, X31, 64
	318 Move X1, X31
	319 Call ConfiguredTaskAwaiter.get_IsCompleted, X0
	320 Move TEMP, X0
	321 And TEMP, TEMP, 1
	322 Compare TEMP, 1
	323 JumpIfEqual {165}
	324 Move W8, 1
	325 Move [X19], W8
	326 Move V0, [X31+4]
	327 Move [X19+152], V0
	328 Move X0, [X26]
	329 Move W8, [X0+224]
	330 Compare W8, 0
	331 JumpIfNotEqual {333}
	332 Call 0x1C17DFC
	333 Move X8, 0xA65000
	334 Move X8, [X8+848]
	335 Add X0, X19, 8
	336 Move X3, [X8]
	337 Add X1, X31, 64
	338 Move X2, X19
	339 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	340 Move X20, X31
	341 Move TEMP, X24
	342 And TEMP, TEMP, -2147483648
	343 Compare TEMP, -2147483648
	344 JumpIfNotEqual {348}
	345 Add X0, X19, 104
	346 Move X1, X31
	347 Call CancellationTokenRegistration.Dispose, X0
	348 Compare X20, 0
	349 JumpIfNotEqual {404}
	350 NotImplemented "Instruction CMP not yet implemented."
	351 Compare W21, 0
	352 JumpIfNotEqual {392}
	353 Move [X19+104], X31
	354 Move [X19+112], X31
	355 Move [X19+120], X31
	356 Move X0, [X25]
	357 Move W8, [X0+224]
	358 Compare W8, 0
	359 JumpIfNotEqual {361}
	360 Call 0x1C17DFC
	361 Add X0, X19, 40
	362 Move X1, X31
	363 Call CancellationToken.ThrowIfCancellationRequested, X0
	364 Compare X23, 0
	365 JumpIfEqual {408}
	366 Move X0, [X23+16]
	367 Compare X0, 0
	368 JumpIfEqual {409}
	369 Move X1, X31
	370 Call CancellationTokenSource.get_Token, X0
	371 Move [X31+88], X0
	372 Add X0, X31, 88
	373 Move X1, X31
	374 Call CancellationToken.ThrowIfCancellationRequested, X0
	375 Move TEMP, 1
	376 Not TEMP
	377 Move W8, TEMP
	378 Move [X19], W8
	379 Move X0, [X26]
	380 Move X21, 0xA64000
	381 Move X20, [X19+96]
	382 Add X19, X19, 8
	383 Move W8, [X0+224]
	384 Move X21, [X21+2272]
	385 Compare W8, 0
	386 JumpIfNotEqual {388}
	387 Call 0x1C17DFC
	388 Move X2, [X21]
	389 Move X0, X19
	390 Move X1, X20
	391 Call AsyncTaskMethodBuilder`1<Object>.SetResult, X0, X1
	392 Move X20, [X31+176]
	393 Move X19, [X31+184]
	394 Move X22, [X31+160]
	395 Move X21, [X31+168]
	396 Move X24, [X31+144]
	397 Move X23, [X31+152]
	398 Move X26, [X31+128]
	399 Move X25, [X31+136]
	400 Move X30, [X31+112]
	401 Move X27, [X31+120]
	402 Add X31, X31, 192
	403 Return 
	404 Move X0, X20
	405 Call 0x1C17F18
	406 Move X0, X20
	407 Call 0x1C17F18
	408 Call 0x1C17F20
	409 Call 0x1C17F20
	410 Call 0x1C17F20
	411 Move [X19+80], X31
	412 Compare X8, 0
	413 JumpIfEqual {417}
	414 Move X0, X8
	415 Move X1, X31
	416 Call ExceptionDispatchInfo.Throw, X0
	417 Move X0, 0xA43000
	418 Move X0, [X0+776]
	419 Call 0x1C17D08
	420 Call 0x1C17F10
	421 Move X20, X0
	422 Move X0, 0xA62000
	423 Move X0, [X0+3376]
	424 Call 0x1C17D08
	425 Move X1, X0
	426 Move X0, X20
	427 Move X2, X31
	428 Call Win32Exception..ctor, X0, X1
	429 Move X0, 0xA65000
	430 Move X0, [X0+904]
	431 Call 0x1C17D08
	432 Move X1, X0
	433 Move X0, X20
	434 Call 0x1C17DEC
	435 Call 0x1C17F28
	436 Call 0x1C17F20
	437 Call 0x1C17F20
	438 Call 0x1C17F20
	439 Call 0x1C17F20
	440 Call 0x1C17F20
	441 Move X21, X1
	442 Move X20, X0
	443 Move X20, X0
	444 Move X20, X0
	445 Move W21, W1
	446 Move X20, X0
	447 Move W24, 1
	448 Move W21, W1
	449 NotImplemented "Instruction CMP not yet implemented."
	450 Move X0, X20
	451 Call 0x3EB2AD0
	452 Move X20, X0
	453 Move X0, 0xA41000
	454 Move X0, [X0+1208]
	455 Call 0x1C17D08
	456 Move X8, [X20]
	457 Move X1, [X8]
	458 Call 0x1C18270
	459 Move TEMP, X0
	460 And TEMP, TEMP, 1
	461 Compare TEMP, 1
	462 JumpIfNotEqual {512}
	463 Move X20, [X20]
	464 Call 0x3EB2AE0
	465 Move X0, 0xA20000
	466 Move X0, [X0+2008]
	467 Call 0x1C17D08
	468 Move W8, [X0+224]
	469 Compare W8, 0
	470 JumpIfNotEqual {472}
	471 Call 0x1C17DFC
	472 Add X0, X19, 40
	473 Move X1, X31
	474 Call CancellationToken.get_IsCancellationRequested, X0
	475 Move TEMP, X0
	476 And TEMP, TEMP, 1
	477 Compare TEMP, 1
	478 JumpIfNotEqual {480}
	479 Move X0, [X19+40]
	480 Compare X23, 0
	481 JumpIfEqual {520}
	482 Move X0, [X23+16]
	483 Compare X0, 0
	484 JumpIfEqual {521}
	485 Move X1, X31
	486 Call CancellationTokenSource.get_Token, X0
	487 Move [X31+56], X0
	488 Move X0, 0xA1F000
	489 Move X0, [X0+2008]
	490 Call 0x1C17D08
	491 Move W8, [X0+224]
	492 Compare W8, 0
	493 JumpIfNotEqual {495}
	494 Call 0x1C17DFC
	495 Add X0, X31, 56
	496 Move X1, X31
	497 Call CancellationToken.get_IsCancellationRequested, X0
	498 Move TEMP, X0
	499 And TEMP, TEMP, 1
	500 Compare TEMP, 1
	501 JumpIfNotEqual {168}
	502 Move X0, 0xA1F000
	503 Move X0, [X0+2216]
	504 Call 0x1C17D08
	505 Call 0x1C17F10
	506 Move X21, X0
	507 Move X1, X31
	508 Call OperationCanceledException..ctor, X0
	509 Compare X21, 0
	510 JumpIfNotEqual {522}
	511 Call 0x1C17F20
	512 Move W0, 8
	513 Call 0x3EB2AF0
	514 Move X8, [X20]
	515 Move [X0], X8
	516 Move X1, 0x7D8000
	517 Add X1, X1, 3672
	518 Move X2, X31
	519 Call 0x3EB2B00
	520 Call 0x1C17F20
	521 Call 0x1C17F20
	522 Move X8, [X21]
	523 Move X9, [X8+392]
	524 Move X1, [X8+400]
	525 Move X0, X21
	526 NotImplemented "Instruction BLR not yet implemented."
	527 Move X27, [X31+56]
	528 Move X22, X0
	529 Move X0, 0xA1F000
	530 Move X0, [X0+2216]
	531 Call 0x1C17D08
	532 Call 0x1C17F10
	533 Move X21, X0
	534 Move X1, X22
	535 Move X2, X20
	536 Move X3, X27
	537 Move X4, X31
	538 Call OperationCanceledException..ctor, X0, X1, X2, X3
	539 Move X0, 0xA64000
	540 Move X0, [X0+904]
	541 Call 0x1C17D08
	542 Move X1, X0
	543 Move X0, X21
	544 Call 0x1C17DEC
	545 Move X20, X0
	546 Move W21, W1
	547 Move X21, X1
	548 Move X20, X0
	549 Call 0x3EB2AE0
	550 Move W8, 1
	551 NotImplemented "Instruction CMP not yet implemented."
	552 Move X0, X20
	553 Call 0x3EB2AD0
	554 Move X8, [X0]
	555 Move [X31], X8
	556 Call 0x3EB2AE0
	557 Move X20, [X31]
	558 Move W21, W31
	559 Move TEMP, X24
	560 And TEMP, TEMP, -2147483648
	561 Compare TEMP, -2147483648
	562 JumpIfNotEqual {177}
	563 Move [X31], X31
	564 Move TEMP, X24
	565 And TEMP, TEMP, -2147483648
	566 Compare TEMP, -2147483648
	567 JumpIfNotEqual {571}
	568 Add X0, X19, 128
	569 Move X1, X31
	570 Call CancellationTokenRegistration.Dispose, X0
	571 Move X8, [X31]
	572 Compare X8, 0
	573 JumpIfNotEqual {599}
	574 NotImplemented "Instruction CMP not yet implemented."
	575 Move X0, X20
	576 Call 0x3EB2AD0
	577 Move X8, [X0]
	578 Move [X31], X8
	579 Call 0x3EB2AE0
	580 Move X20, [X31]
	581 Move W21, W31
	582 Move TEMP, X24
	583 And TEMP, TEMP, -2147483648
	584 Compare TEMP, -2147483648
	585 JumpIfNotEqual {348}
	586 Move [X31], X31
	587 Move TEMP, X24
	588 And TEMP, TEMP, -2147483648
	589 Compare TEMP, -2147483648
	590 JumpIfNotEqual {594}
	591 Add X0, X19, 104
	592 Move X1, X31
	593 Call CancellationTokenRegistration.Dispose, X0
	594 Move X8, [X31]
	595 Compare X8, 0
	596 JumpIfEqual {615}
	597 Move X0, [X31]
	598 Call 0x1C17F18
	599 Move X0, [X31]
	600 Call 0x1C17F18
	601 Move X20, X0
	602 Move W21, W1
	603 Move TEMP, X24
	604 And TEMP, TEMP, -2147483648
	605 Compare TEMP, -2147483648
	606 JumpIfNotEqual {571}
	607 Move X20, X0
	608 Move W21, W1
	609 Move TEMP, X24
	610 And TEMP, TEMP, -2147483648
	611 Compare TEMP, -2147483648
	612 JumpIfNotEqual {594}
	613 Move X20, X0
	614 Move W21, W1
	615 NotImplemented "Instruction CMP not yet implemented."
	616 Move X0, X20
	617 Call 0x3EB2AD0
	618 Move X20, X0
	619 Move X0, 0xA17000
	620 Move X0, [X0+2000]
	621 Call 0x1C17D08
	622 Move X8, [X20]
	623 Move X1, [X8]
	624 Call 0x1C18270
	625 Move TEMP, X0
	626 And TEMP, TEMP, 1
	627 Compare TEMP, 1
	628 JumpIfNotEqual {648}
	629 Move X20, [X20]
	630 Call 0x3EB2AE0
	631 Move X0, [X19+96]
	632 Compare X0, 0
	633 JumpIfEqual {656}
	634 Move X1, X31
	635 Call Socket.Dispose, X0
	636 Move X0, X20
	637 Move X1, X31
	638 Call ExceptionDispatchInfo.Capture, X0
	639 Move W10, [X19+88]
	640 Move X9, [X19+80]
	641 Move X8, X0
	642 Move [X19+96], X31
	643 Add W10, W10, 1
	644 Move [X19+88], W10
	645 Compare X9, 0
	646 JumpIfNotEqual {135}
	647 Call 0x1C17F20
	648 Move W0, 8
	649 Call 0x3EB2AF0
	650 Move X8, [X20]
	651 Move [X0], X8
	652 Move X1, 0x7D8000
	653 Add X1, X1, 3672
	654 Move X2, X31
	655 Call 0x3EB2B00
	656 Call 0x1C17F20
	657 Move X21, X1
	658 Move X20, X0
	659 Call 0x3EB2AE0
	660 Move X20, X0
	661 Move W21, W1
	662 NotImplemented "Instruction CMP not yet implemented."
	663 Move X0, X20
	664 Call 0x3EB2AD0
	665 Move X20, X0
	666 Move X0, 0xA17000
	667 Move X0, [X0+2000]
	668 Call 0x1C17D08
	669 Move X8, [X20]
	670 Move X1, [X8]
	671 Call 0x1C18270
	672 Move TEMP, X0
	673 And TEMP, TEMP, 1
	674 Compare TEMP, 1
	675 JumpIfNotEqual {696}
	676 Move X20, [X20]
	677 Call 0x3EB2AE0
	678 Move TEMP, 1
	679 Not TEMP
	680 Move W8, TEMP
	681 Move [X19+8], W8
	682 Move X0, 0xA63000
	683 Move X0, [X0+2280]
	684 Call 0x1C17D08
	685 Move W8, [X0+224]
	686 Compare W8, 0
	687 JumpIfNotEqual {689}
	688 Call 0x1C17DFC
	689 Move X0, 0xA63000
	690 Move X0, [X0+2264]
	691 Call 0x1C17D08
	692 Move X2, X0
	693 Move X0, X19
	694 Move X1, X20
	695 Call AsyncTaskMethodBuilder`1<Object>.SetException, X0, X1
	696 Move W0, 8
	697 Call 0x3EB2AF0
	698 Move X8, [X20]
	699 Move [X0], X8
	700 Move X1, 0x7D8000
	701 Add X1, X1, 3672
	702 Move X2, X31
	703 Call 0x3EB2B00
	704 Move X20, X0
	705 Call 0x3EB2AE0
	706 Move X0, X20
	707 Call 0x1D2D690
	708 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x036DD384 BL 0x1C16F18
	0x036DD388 BL 0x1C16F20
	0x036DD38C MOV X20, X1
	0x036DD390 MOV X22, X0
	0x036DD394 TBZ X24, 0x1F, 0x36DD37C
	0x036DD398 B 0x36DD344
	0x036DD39C BL 0x1990590
	0x036DD3A0 STR X30, [X31 - 0x30]!
	0x036DD3A4 STP X22, X21, [X31 + 0x10]
	0x036DD3A8 STP X20, X19, [X31 + 0x20]
	0x036DD3AC ADRP X22, 0xD03000
	0x036DD3B0 ADRP X21, 0xA19000
	0x036DD3B4 LDRB W8, [X22 + 0xADA]
	0x036DD3B8 LDR X21, [X21 + 0x130]
	0x036DD3BC MOV X19, X1
	0x036DD3C0 MOV X20, X0
	0x036DD3C4 TBNZ X8, 0x0, 0x36DD3E8
	0x036DD3C8 ADRP X0, 0xA19000
	0x036DD3CC LDR X0, [X0 + 0x248]
	0x036DD3D0 BL 0x1C16CF4
	0x036DD3D4 ADRP X0, 0xA19000
	0x036DD3D8 LDR X0, [X0 + 0x130]
	0x036DD3DC BL 0x1C16CF4
	0x036DD3E0 MOVZ W8, 0x1
	0x036DD3E4 STRB W8, [X22 + 0xADA]
	0x036DD3E8 LDR X0, [X21]
	0x036DD3EC ADRP X21, 0xA19000
	0x036DD3F0 LDR W8, [X0 + 0xE0]
	0x036DD3F4 LDR X21, [X21 + 0x248]
	0x036DD3F8 CBNZ W8, 0x36DD400
	0x036DD3FC BL 0x1C16DFC

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xD04000
	007 Move X21, 0xA63000
	008 Move W8, [X22+2774]
	009 Move X21, [X21+2280]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xA64000
	017 Move X0, [X0+912]
	018 Call 0x1C17CF4
	019 Move X0, 0xA63000
	020 Move X0, [X0+2280]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+2774], W8
	024 Move X0, [X21]
	025 Move X21, 0xA64000
	026 Move W8, [X0+224]
	027 Move X21, [X21+912]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X2, [X21]
	032 Add X0, X20, 8
	033 Move X1, X19
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Call AsyncTaskMethodBuilder`1<Object>.SetStateMachine, X0, X1
	040 Return 

