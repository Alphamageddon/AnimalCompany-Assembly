Type: System.Net.WebSockets.WebSocketHandle

Method: System.Net.WebSockets.WebSocketHandle Create()

Disassembly:
	0x036DA470 ADD X10, X10, 0x10
	0x036DA474 B.NE 0x36DA460
	0x036DA478 MOV X0, X19
	0x036DA47C MOV W2, W31
	0x036DA480 BL 0x1C5C788
	0x036DA484 B 0x36DA494
	0x036DA488 LDRSW X9, [X10]
	0x036DA48C ADD X8, X8, X9, 0x4, LSL
	0x036DA490 ADD X0, X8, 0x138
	0x036DA494 LDP X8, X1, [X0]
	0x036DA498 MOV X0, X19
	0x036DA49C BLR X8
	0x036DA4A0 CBNZ X20, 0x36DA4C0
	0x036DA4A4 MOV X0, X21
	0x036DA4A8 MOV X1, X22
	0x036DA4AC LDP X20, X19, [X31 + 0x40]
	0x036DA4B0 LDP X22, X21, [X31 + 0x30]
	0x036DA4B4 LDP X30, X23, [X31 + 0x20]
	0x036DA4B8 ADD X31, X31, 0x50
	0x036DA4BC RET

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0xD07000
	005 Move X20, 0xA67000
	006 Move W8, [X19+2758]
	007 Move X20, [X20+424]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xA67000
	013 Move X0, [X0+424]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+2758], W8
	017 Move X0, [X20]
	018 Call 0x1C17F10
	019 Move X19, X0
	020 Call WebSocketHandle..ctor, X0
	021 Move X0, X19
	022 Move X20, [X31+16]
	023 Move X19, [X31+24]
	024 Move X30, [X31+32]
	025 Return X0

Method: System.Boolean IsValid(System.Net.WebSockets.WebSocketHandle handle)

Disassembly:
	0x036D9564 LDR X2, [X23]
	0x036D9568 ADD X19, X25, 0x8
	0x036D956C MOVN W9, 0x0

ISIL:
	001 NotImplemented "Instruction CMP not yet implemented."
	002 NotImplemented "Instruction CSET not yet implemented."
	003 Return X0

Method: System.Nullable`1<System.Net.WebSockets.WebSocketCloseStatus> get_CloseStatus()

Disassembly:
	0x036D9570 ADD X1, X31, 0x18
	0x036D9574 MOV X0, X19
	0x036D9578 STUR V0, [X31 + 0x20]
	0x036D957C STR X8, [X31 + 0x30]
	0x036D9580 STR W9, [X31 + 0x18]
	0x036D9584 BL 0x2196EB8

ISIL:
	001 Move X0, [X0+32]
	002 Compare X0, 0
	003 JumpIfEqual {8}
	004 Move X8, [X0]
	005 Move X2, [X8+392]
	006 Move X1, [X8+400]
	007 CallNoReturn X2
	008 Return X0

Method: System.String get_CloseStatusDescription()

Disassembly:
	0x036D9614 B 0x32C477C
	0x036D9618 STR X30, [X31 - 0x20]!
	0x036D961C STP X20, X19, [X31 + 0x10]
	0x036D9620 ADRP X19, 0xD07000
	0x036D9624 ADRP X20, 0xA1C000
	0x036D9628 LDRB W8, [X19 + 0xADB]

ISIL:
	001 Move X0, [X0+32]
	002 Compare X0, 0
	003 JumpIfEqual {8}
	004 Move X8, [X0]
	005 Move X2, [X8+408]
	006 Move X1, [X8+416]
	007 CallNoReturn X2
	008 Return X0

Method: System.Net.WebSockets.WebSocketState get_State()

Disassembly:
	0x036D9778 LDR X0, [X0 + 0xFD0]
	0x036D977C BL 0x1C16CF4
	0x036D9780 ADRP X0, 0xA41000
	0x036D9784 LDR X0, [X0 + 0xFD8]
	0x036D9788 BL 0x1C16CF4
	0x036D978C ADRP X0, 0xA1B000
	0x036D9790 LDR X0, [X0 + 0x1B8]
	0x036D9794 BL 0x1C16CF4

ISIL:
	001 Move X8, X0
	002 Move X0, [X0+32]
	003 Compare X0, 0
	004 JumpIfEqual {9}
	005 Move X8, [X0]
	006 Move X2, [X8+440]
	007 Move X1, [X8+448]
	008 CallNoReturn X2
	009 Move W0, [X8+24]
	010 Return X0

Method: System.String get_SubProtocol()

Disassembly:
	0x036D96B8 MOV X2, X31
	0x036D96BC BL 0x337DF1C
	0x036D96C0 ADRP X0, 0xA67000
	0x036D96C4 LDR X0, [X0 + 0x218]
	0x036D96C8 BL 0x1C16D08
	0x036D96CC MOV X1, X0

ISIL:
	001 Move X0, [X0+32]
	002 Compare X0, 0
	003 JumpIfEqual {8}
	004 Move X8, [X0]
	005 Move X2, [X8+424]
	006 Move X1, [X8+432]
	007 CallNoReturn X2
	008 Return X0

Method: System.Void CheckPlatformSupport()

Disassembly:
	0x036D93EC BL 0x1C16D08

ISIL:
	001 Return 

Method: System.Void Dispose()

Disassembly:
	0x036D9F44 LDR X8, [X8 + 0x258]
	0x036D9F48 LDR X1, [X8]
	0x036D9F4C MOV X0, X19
	0x036D9F50 MOV X2, X31
	0x036D9F54 BL 0x32333E0
	0x036D9F58 CBZ X0, 0x36DA154
	0x036D9F5C LDR X1, [X28]
	0x036D9F60 MOV X2, X31
	0x036D9F64 BL 0x32333E0

ISIL:
	001 Move X8, X0
	002 Move X0, [X0+32]
	003 Move W9, 5
	004 Move [X8+24], W9
	005 Compare X0, 0
	006 JumpIfEqual {11}
	007 Move X8, [X0]
	008 Move X2, [X8+504]
	009 Move X1, [X8+512]
	010 CallNoReturn X2
	011 Return 

Method: System.Void Abort()

Disassembly:
	0x036D9E60 CBZ X0, 0x36DA144
	0x036D9E64 LDR X8, [X0]
	0x036D9E68 LDR X1, [X8 + 0x2D0]
	0x036D9E6C LDR X9, [X8 + 0x2C8]
	0x036D9E70 BLR X9
	0x036D9E74 MOV X22, X0
	0x036D9E78 CBZ X0, 0x36DA148
	0x036D9E7C LDR X8, [X22 + 0x18]
	0x036D9E80 ADRP X28, 0xA1E000
	0x036D9E84 LDR X28, [X28 + 0x928]
	0x036D9E88 CMP W8, 0x1
	0x036D9E8C B.LT 0x36D9F2C
	0x036D9E90 MOV X29, X31
	0x036D9E94 AND X8, X8, 0x0
	0x036D9E98 ADD X25, X22, 0x20

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, [X0+16]
	005 Compare X0, 0
	006 JumpIfEqual {21}
	007 Move X1, X31
	008 Call CancellationTokenSource.Cancel, X0
	009 Move X0, [X19+32]
	010 Compare X0, 0
	011 JumpIfEqual {18}
	012 Move X8, [X0]
	013 Move X2, [X8+456]
	014 Move X1, [X8+464]
	015 Move X30, [X31+16]
	016 Move X19, [X31+24]
	017 CallNoReturn X2
	018 Move X30, [X31+16]
	019 Move X19, [X31+24]
	020 Return 
	021 Call 0x1C17F20

Method: System.Threading.Tasks.Task SendAsync(System.ArraySegment`1<System.Byte> buffer, System.Net.WebSockets.WebSocketMessageType messageType, System.Boolean endOfMessage, System.Threading.CancellationToken cancellationToken)

Disassembly:
	0x036D9C34 ADRP X0, 0xA67000
	0x036D9C38 LDR X0, [X0 + 0x270]
	0x036D9C3C BL 0x1C16CF4
	0x036D9C40 MOVZ W8, 0x1
	0x036D9C44 STRB W8, [X19 + 0xAC9]
	0x036D9C48 LDR X0, [X23]
	0x036D9C4C LDR W8, [X0 + 0xE0]
	0x036D9C50 CBNZ W8, 0x36D9C5C
	0x036D9C54 BL 0x1C16DFC
	0x036D9C58 LDR X0, [X23]

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+32]
	003 Compare X0, 0
	004 JumpIfEqual {11}
	005 Move X8, [X0]
	006 And W4, W4, 1
	007 Move X7, [X8+536]
	008 Move X6, [X8+544]
	009 Move X30, [X31+16]
	010 CallNoReturn X7
	011 Call 0x1C17F20

Method: System.Threading.Tasks.Task`1<System.Net.WebSockets.WebSocketReceiveResult> ReceiveAsync(System.ArraySegment`1<System.Byte> buffer, System.Threading.CancellationToken cancellationToken)

Disassembly:
	0x036D9CB8 MOV X0, X19
	0x036D9CBC MOV X2, X31
	0x036D9CC0 BL 0x32333E0
	0x036D9CC4 CBZ X20, 0x36DA128
	0x036D9CC8 MOV X23, X0
	0x036D9CCC MOV X0, X20
	0x036D9CD0 MOV X1, X31
	0x036D9CD4 BL 0x361C058
	0x036D9CD8 MOV X1, X0

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+32]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move X8, [X0]
	006 Move X5, [X8+520]
	007 Move X4, [X8+528]
	008 Move X30, [X31+16]
	009 CallNoReturn X5
	010 Call 0x1C17F20

Method: System.Threading.Tasks.Task CloseAsync(System.Net.WebSockets.WebSocketCloseStatus closeStatus, System.String statusDescription, System.Threading.CancellationToken cancellationToken)

Disassembly:
	0x036D9D34 MOV X0, X19
	0x036D9D38 MOV X2, X31
	0x036D9D3C BL 0x32333E0
	0x036D9D40 MOV X0, X23
	0x036D9D44 MOV X1, X31
	0x036D9D48 BL 0x32277A8
	0x036D9D4C ADRP X26, 0xA58000
	0x036D9D50 LDR X26, [X26 + 0x420]

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+32]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move X8, [X0]
	006 Move X5, [X8+472]
	007 Move X4, [X8+480]
	008 Move X30, [X31+16]
	009 CallNoReturn X5
	010 Call 0x1C17F20

Method: System.Threading.Tasks.Task CloseOutputAsync(System.Net.WebSockets.WebSocketCloseStatus closeStatus, System.String statusDescription, System.Threading.CancellationToken cancellationToken)

Disassembly:
	0x036D9DAC LDR X1, [X26]
	0x036D9DB0 MOV X2, X31
	0x036D9DB4 BL 0x32333E0
	0x036D9DB8 B 0x36D9DDC
	0x036D9DBC MOV X0, X19
	0x036D9DC0 MOV X1, X23
	0x036D9DC4 MOV X2, X31
	0x036D9DC8 BL 0x32333E0

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+32]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move X8, [X0]
	006 Move X5, [X8+488]
	007 Move X4, [X8+496]
	008 Move X30, [X31+16]
	009 CallNoReturn X5
	010 Call 0x1C17F20

Method: System.Threading.Tasks.Task ConnectAsyncCore(System.Uri uri, System.Threading.CancellationToken cancellationToken, System.Net.WebSockets.ClientWebSocketOptions options)

Disassembly:
	0x036DA4C0 MOV X0, X20
	0x036DA4C4 BL 0x1C16F18
	0x036DA4C8 BL 0x1C16F20
	0x036DA4CC BL 0x1C16F20
	0x036DA4D0 B 0x36DA4E4
	0x036DA4D4 B 0x36DA4E4
	0x036DA4D8 B 0x36DA4E4
	0x036DA4DC B 0x36DA4E4
	0x036DA4E0 B 0x36DA4E4
	0x036DA4E4 MOV X21, X0
	0x036DA4E8 CMP W1, 0x1
	0x036DA4EC B.NE 0x36DA510
	0x036DA4F0 MOV X0, X21
	0x036DA4F4 BL 0x3EB1AD0
	0x036DA4F8 LDR X20, [X0]
	0x036DA4FC BL 0x3EB1AE0
	0x036DA500 MOV X21, X31
	0x036DA504 MOV X22, X31
	0x036DA508 CBNZ X19, 0x36DA448
	0x036DA50C B 0x36DA4A0
	0x036DA510 MOV X20, X31
	0x036DA514 B 0x36DA51C
	0x036DA518 MOV X21, X0
	0x036DA51C CBZ X19, 0x36DA578
	0x036DA520 LDR X8, [X19]
	0x036DA524 LDR X1, [X23]
	0x036DA528 LDRH W9, [X8 + 0x12E]
	0x036DA52C CBZ X9, 0x36DA550
	0x036DA530 LDR X10, [X8 + 0xB0]
	0x036DA534 ADD X10, X10, 0x8
	0x036DA538 LDUR X11, [X10 - 0x8]
	0x036DA53C CMP X11, X1
	0x036DA540 B.EQ 0x36DA560
	0x036DA544 SUBS X9, X9, 0x1
	0x036DA548 ADD X10, X10, 0x10
	0x036DA54C B.NE 0x36DA538
	0x036DA550 MOV X0, X19
	0x036DA554 MOV W2, W31
	0x036DA558 BL 0x1C5C788
	0x036DA55C B 0x36DA56C
	0x036DA560 LDRSW X9, [X10]
	0x036DA564 ADD X8, X8, X9, 0x4, LSL
	0x036DA568 ADD X0, X8, 0x138
	0x036DA56C LDP X8, X1, [X0]
	0x036DA570 MOV X0, X19
	0x036DA574 BLR X8
	0x036DA578 CBNZ X20, 0x36DA584
	0x036DA57C MOV X0, X21
	0x036DA580 BL 0x1D2C690
	0x036DA584 MOV X0, X20
	0x036DA588 BL 0x1C16F18
	0x036DA58C BL 0x1990590
	0x036DA590 SUB X31, X31, 0xA0
	0x036DA594 STR X30, [X31 + 0x60]
	0x036DA598 STP X24, X23, [X31 + 0x70]
	0x036DA59C STP X22, X21, [X31 + 0x80]
	0x036DA5A0 STP X20, X19, [X31 + 0x90]
	0x036DA5A4 ADRP X24, 0xD06000
	0x036DA5A8 ADRP X23, 0xA1C000
	0x036DA5AC LDRB W8, [X24 + 0xACB]

ISIL:
	001 Subtract X31, X31, 272
	002 Move [X31+192], X29
	003 Move [X31+208], X30
	004 Move [X31+216], X25
	005 Move [X31+224], X24
	006 Move [X31+232], X23
	007 Move [X31+240], X22
	008 Move [X31+248], X21
	009 Move [X31+256], X20
	010 Move [X31+264], X19
	011 Move X23, 0xD07000
	012 Move X24, 0xA1D000
	013 Move W8, [X23+2759]
	014 Move X24, [X24+640]
	015 Move X19, X3
	016 Move X20, X2
	017 Move X21, X1
	018 Move X22, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {31}
	023 Move X0, 0xA67000
	024 Move X0, [X0+528]
	025 Call 0x1C17CF4
	026 Move X0, 0xA1D000
	027 Move X0, [X0+640]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X23+2759], W8
	031 Move X23, 0xA67000
	032 Move X23, [X23+528]
	033 Add X0, X31, 24
	034 Move W2, 168
	035 Move W1, W31
	036 Add X25, X31, 24
	037 Call 0x3EB2B10
	038 Move X0, [X24]
	039 Move [X31+56], X20
	040 Move [X31+64], X22
	041 Move [X31+72], X21
	042 Move [X31+80], X19
	043 Move W8, [X0+224]
	044 Compare W8, 0
	045 JumpIfNotEqual {47}
	046 Call 0x1C17DFC
	047 Add X8, X31, 0
	048 Move X0, X31
	049 Call AsyncTaskMethodBuilder.Create
	050 Move V0, [X31]
	051 Move X8, [X31+16]
	052 Move X2, [X23]
	053 Add X19, X25, 8
	054 Move TEMP, 0
	055 Not TEMP
	056 Move W9, TEMP
	057 Add X1, X31, 24
	058 Move X0, X19
	059 Move [X31+32], V0
	060 Move [X31+48], X8
	061 Move [X31+24], W9
	062 Call AsyncTaskMethodBuilder.Start, X0, X1
	063 Move X0, X19
	064 Move X1, X31
	065 Call AsyncTaskMethodBuilder.get_Task, X0
	066 Move X20, [X31+256]
	067 Move X19, [X31+264]
	068 Move X22, [X31+240]
	069 Move X21, [X31+248]
	070 Move X24, [X31+224]
	071 Move X23, [X31+232]
	072 Move X30, [X31+208]
	073 Move X25, [X31+216]
	074 Move X29, [X31+192]
	075 Add X31, X31, 272
	076 Return X0

Method: System.Threading.Tasks.Task`1<System.Net.Sockets.Socket> ConnectSocketAsync(System.String host, System.Int32 port, System.Threading.CancellationToken cancellationToken)

Disassembly:
	0x036DAA28 MOV X19, X1
	0x036DAA2C TBNZ X8, 0x0, 0x36DAA44
	0x036DAA30 ADRP X0, 0xA22000
	0x036DAA34 LDR X0, [X0 + 0x788]
	0x036DAA38 BL 0x1C16CF4
	0x036DAA3C MOVZ W8, 0x1
	0x036DAA40 STRB W8, [X20 + 0xAD2]
	0x036DAA44 CBZ X19, 0x36DAA98
	0x036DAA48 ADRP X9, 0xA22000
	0x036DAA4C LDR X9, [X9 + 0x788]
	0x036DAA50 LDR X8, [X19]
	0x036DAA54 LDR X1, [X9]
	0x036DAA58 LDRB W10, [X8 + 0x130]
	0x036DAA5C LDRB W9, [X1 + 0x130]
	0x036DAA60 CMP W10, W9
	0x036DAA64 B.CC 0x36DAA90
	0x036DAA68 LDR X8, [X8 + 0xC8]
	0x036DAA6C ADD X8, X8, X9, 0x3, LSL
	0x036DAA70 LDUR X8, [X8 - 0x8]
	0x036DAA74 CMP X8, X1
	0x036DAA78 B.NE 0x36DAA90
	0x036DAA7C MOV X0, X19
	0x036DAA80 LDP X20, X19, [X31 + 0x10]
	0x036DAA84 MOV X1, X31
	0x036DAA88 LDR X30, [X31], #0x20
	0x036DAA8C B 0x36AAC20
	0x036DAA90 MOV X0, X19
	0x036DAA94 BL 0x1C171E0
	0x036DAA98 BL 0x1C16F20
	0x036DAA9C SUB X31, X31, 0xB0
	0x036DAAA0 STR X30, [X31 + 0x70]
	0x036DAAA4 STP X24, X23, [X31 + 0x80]
	0x036DAAA8 STP X22, X21, [X31 + 0x90]
	0x036DAAAC STP X20, X19, [X31 + 0xA0]
	0x036DAAB0 ADRP X20, 0xD06000
	0x036DAAB4 LDRB W8, [X20 + 0xAD3]
	0x036DAAB8 MOV X19, X0
	0x036DAABC TBNZ X8, 0x0, 0x36DABDC
	0x036DAAC0 ADRP X0, 0xA43000
	0x036DAAC4 LDR X0, [X0 + 0xE48]
	0x036DAAC8 BL 0x1C16CF4
	0x036DAACC ADRP X0, 0xA66000
	0x036DAAD0 LDR X0, [X0 + 0x2A0]
	0x036DAAD4 BL 0x1C16CF4
	0x036DAAD8 ADRP X0, 0xA66000
	0x036DAADC LDR X0, [X0 + 0x2A8]
	0x036DAAE0 BL 0x1C16CF4
	0x036DAAE4 ADRP X0, 0xA66000
	0x036DAAE8 LDR X0, [X0 + 0x2B0]
	0x036DAAEC BL 0x1C16CF4
	0x036DAAF0 ADRP X0, 0xA1C000
	0x036DAAF4 LDR X0, [X0 + 0x280]
	0x036DAAF8 BL 0x1C16CF4
	0x036DAAFC ADRP X0, 0xA21000
	0x036DAB00 LDR X0, [X0 + 0x7D8]
	0x036DAB04 BL 0x1C16CF4
	0x036DAB08 ADRP X0, 0xA66000
	0x036DAB0C LDR X0, [X0 + 0x2B8]
	0x036DAB10 BL 0x1C16CF4
	0x036DAB14 ADRP X0, 0xA66000
	0x036DAB18 LDR X0, [X0 + 0x2C0]
	0x036DAB1C BL 0x1C16CF4
	0x036DAB20 ADRP X0, 0xA66000
	0x036DAB24 LDR X0, [X0 + 0x2C8]
	0x036DAB28 BL 0x1C16CF4
	0x036DAB2C ADRP X0, 0xA66000
	0x036DAB30 LDR X0, [X0 + 0x2D0]
	0x036DAB34 BL 0x1C16CF4
	0x036DAB38 ADRP X0, 0xA66000

ISIL:
	001 Subtract X31, X31, 272
	002 Move [X31+176], X29
	003 Move [X31+192], X30
	004 Move [X31+200], X27
	005 Move [X31+208], X26
	006 Move [X31+216], X25
	007 Move [X31+224], X24
	008 Move [X31+232], X23
	009 Move [X31+240], X22
	010 Move [X31+248], X21
	011 Move [X31+256], X20
	012 Move [X31+264], X19
	013 Move X24, 0xD07000
	014 Move X23, 0xA66000
	015 Move W8, [X24+2760]
	016 Move X23, [X23+2280]
	017 Move X19, X3
	018 Move W20, W2
	019 Move X21, X1
	020 Move X22, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {39}
	025 Move X0, 0xA67000
	026 Move X0, [X0+560]
	027 Call 0x1C17CF4
	028 Move X0, 0xA67000
	029 Move X0, [X0+568]
	030 Call 0x1C17CF4
	031 Move X0, 0xA67000
	032 Move X0, [X0+576]
	033 Call 0x1C17CF4
	034 Move X0, 0xA66000
	035 Move X0, [X0+2280]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X24+2760], W8
	039 Move X26, 0xA67000
	040 Move X25, 0xA67000
	041 Move X24, 0xA67000
	042 Move X26, [X26+560]
	043 Move X25, [X25+568]
	044 Move X24, [X24+576]
	045 Add X0, X31, 8
	046 Move W2, 168
	047 Move W1, W31
	048 Add X27, X31, 8
	049 Call 0x3EB2B10
	050 Move X0, [X23]
	051 Move [X31+48], X19
	052 Move [X31+56], X22
	053 Move [X31+64], W20
	054 Move [X31+40], X21
	055 Move W8, [X0+224]
	056 Compare W8, 0
	057 JumpIfNotEqual {59}
	058 Call 0x1C17DFC
	059 Move X0, [X26]
	060 Add X19, X27, 8
	061 Move X8, X19
	062 Call AsyncTaskMethodBuilder`1<Object>.Create
	063 Move X2, [X25]
	064 Move TEMP, 0
	065 Not TEMP
	066 Move W8, TEMP
	067 Add X1, X31, 8
	068 Move X0, X19
	069 Move [X31+8], W8
	070 Call AsyncTaskMethodBuilder`1<Object>.Start, X0, X1
	071 Move X1, [X24]
	072 Move X0, X19
	073 Call AsyncTaskMethodBuilder`1<Object>.get_Task, X0
	074 Move X20, [X31+256]
	075 Move X19, [X31+264]
	076 Move X22, [X31+240]
	077 Move X21, [X31+248]
	078 Move X24, [X31+224]
	079 Move X23, [X31+232]
	080 Move X26, [X31+208]
	081 Move X25, [X31+216]
	082 Move X30, [X31+192]
	083 Move X27, [X31+200]
	084 Move X29, [X31+176]
	085 Add X31, X31, 272
	086 Return X0

Method: System.Byte[] BuildRequestHeader(System.Uri uri, System.Net.WebSockets.ClientWebSocketOptions options, System.String secKey)

Disassembly:
	0x036DAB3C LDR X0, [X0 + 0x2D8]
	0x036DAB40 BL 0x1C16CF4
	0x036DAB44 ADRP X0, 0xA66000
	0x036DAB48 LDR X0, [X0 + 0x2E0]
	0x036DAB4C BL 0x1C16CF4
	0x036DAB50 ADRP X0, 0xA1C000
	0x036DAB54 LDR X0, [X0 + 0x1B0]
	0x036DAB58 BL 0x1C16CF4
	0x036DAB5C ADRP X0, 0xA1C000
	0x036DAB60 LDR X0, [X0 + 0x1B8]
	0x036DAB64 BL 0x1C16CF4
	0x036DAB68 ADRP X0, 0xA63000
	0x036DAB6C LDR X0, [X0 + 0x8E8]
	0x036DAB70 BL 0x1C16CF4
	0x036DAB74 ADRP X0, 0xA66000
	0x036DAB78 LDR X0, [X0 + 0x2E8]
	0x036DAB7C BL 0x1C16CF4
	0x036DAB80 ADRP X0, 0xA57000
	0x036DAB84 LDR X0, [X0 + 0x508]
	0x036DAB88 BL 0x1C16CF4
	0x036DAB8C ADRP X0, 0xA66000
	0x036DAB90 LDR X0, [X0 + 0x2F0]
	0x036DAB94 BL 0x1C16CF4
	0x036DAB98 ADRP X0, 0xA66000
	0x036DAB9C LDR X0, [X0 + 0x2F8]
	0x036DABA0 BL 0x1C16CF4
	0x036DABA4 ADRP X0, 0xA66000
	0x036DABA8 LDR X0, [X0 + 0x300]
	0x036DABAC BL 0x1C16CF4
	0x036DABB0 ADRP X0, 0xA66000
	0x036DABB4 LDR X0, [X0 + 0x298]
	0x036DABB8 BL 0x1C16CF4
	0x036DABBC ADRP X0, 0xA66000
	0x036DABC0 LDR X0, [X0 + 0x1A8]
	0x036DABC4 BL 0x1C16CF4
	0x036DABC8 ADRP X0, 0xA56000
	0x036DABCC LDR X0, [X0 + 0xDE8]
	0x036DABD0 BL 0x1C16CF4
	0x036DABD4 MOVZ W8, 0x1
	0x036DABD8 STRB W8, [X20 + 0xAD3]
	0x036DABDC STP X31, X31, [X31 + 0x60]
	0x036DABE0 STP X31, X31, [X31 + 0x50]
	0x036DABE4 STP X31, X31, [X31 + 0x40]
	0x036DABE8 LDR W23, [X19]
	0x036DABEC LDR X20, [X19 + 0x28]
	0x036DABF0 CMP W23, 0x4
	0x036DABF4 B.CC 0x36DACC0
	0x036DABF8 ADRP X24, 0xA66000
	0x036DABFC LDR X24, [X24 + 0x298]
	0x036DAC00 LDR X8, [X24]
	0x036DAC04 LDR W9, [X8 + 0xE0]
	0x036DAC08 CBNZ W9, 0x36DAC18
	0x036DAC0C MOV X0, X8
	0x036DAC10 BL 0x1C16DFC
	0x036DAC14 LDR X8, [X24]
	0x036DAC18 LDR X9, [X8 + 0xB8]
	0x036DAC1C LDR X21, [X9 + 0x8]
	0x036DAC20 CBNZ X21, 0x36DAC78
	0x036DAC24 LDR W9, [X8 + 0xE0]
	0x036DAC28 CBNZ W9, 0x36DAC38
	0x036DAC2C MOV X0, X8
	0x036DAC30 BL 0x1C16DFC
	0x036DAC34 LDR X8, [X24]
	0x036DAC38 ADRP X9, 0xA43000
	0x036DAC3C LDR X8, [X8 + 0xB8]
	0x036DAC40 LDR X9, [X9 + 0xE48]
	0x036DAC44 LDR X22, [X8]
	0x036DAC48 LDR X0, [X9]
	0x036DAC4C BL 0x1C16F10
	0x036DAC50 ADRP X8, 0xA66000
	0x036DAC54 LDR X8, [X8 + 0x300]
	0x036DAC58 MOV X21, X0
	0x036DAC5C LDR X2, [X8]
	0x036DAC60 MOV X1, X22
	0x036DAC64 MOV X3, X31
	0x036DAC68 BL 0x2A6B948
	0x036DAC6C LDR X8, [X24]
	0x036DAC70 LDR X8, [X8 + 0xB8]
	0x036DAC74 STR X21, [X8 + 0x8]
	0x036DAC78 ADRP X8, 0xA21000
	0x036DAC7C LDR X8, [X8 + 0x7D8]
	0x036DAC80 LDR X0, [X8]
	0x036DAC84 LDR W8, [X0 + 0xE0]
	0x036DAC88 CBNZ W8, 0x36DAC90
	0x036DAC8C BL 0x1C16DFC
	0x036DAC90 ADD X0, X19, 0x20
	0x036DAC94 ADD X8, X31, 0x8
	0x036DAC98 MOV X1, X21
	0x036DAC9C MOV X2, X20
	0x036DACA0 MOV X3, X31
	0x036DACA4 BL 0x33DD5C8
	0x036DACA8 LDUR V0, [X31 + 0x8]
	0x036DACAC LDR X8, [X31 + 0x18]
	0x036DACB0 STR V0, [X31 + 0x2]
	0x036DACB4 STR X8, [X31 + 0x30]
	0x036DACB8 STR X8, [X19 + 0x50]
	0x036DACBC STR V0, [X19 + 0x4]
	0x036DACC0 CMP W23, 0x3
	0x036DACC4 B.HI 0x36DAD44
	0x036DACC8 ADRP X9, 0xFFFFFFFFFD4BD000
	0x036DACCC MOV W8, W23
	0x036DACD0 ADD X9, X9, 0x7C2
	0x036DACD4 ADR X10, 0x10
	0x036DACD8 LDRB W11, [X9, X8, LSL]
	0x036DACDC ADD X10, X10, X11, 0x2, LSL
	0x036DACE0 BR X10
	0x036DACE4 LDR V0, [X19 + 0x7]
	0x036DACE8 MOVN W23, 0x0
	0x036DACEC STR V0, [X31 + 0x6]
	0x036DACF0 STP X31, X31, [X19 + 0x70]
	0x036DACF4 STR W23, [X19]
	0x036DACF8 B 0x36DADB8
	0x036DACFC LDUR V0, [X19 + 0x88]
	0x036DAD00 MOVN W23, 0x0
	0x036DAD04 STR V0, [X31 + 0x5]
	0x036DAD08 STP X31, X31, [X19 + 0x88]
	0x036DAD0C STR W23, [X19]
	0x036DAD10 B 0x36DAF4C
	0x036DAD14 LDUR V0, [X19 + 0x98]
	0x036DAD18 MOVN W23, 0x0
	0x036DAD1C STR V0, [X31 + 0x4]
	0x036DAD20 STP X31, X31, [X19 + 0x98]
	0x036DAD24 STR W23, [X19]
	0x036DAD28 B 0x36DAFA8
	0x036DAD2C LDUR V0, [X19 + 0x88]
	0x036DAD30 MOVN W23, 0x0
	0x036DAD34 STR V0, [X31 + 0x5]
	0x036DAD38 STP X31, X31, [X19 + 0x88]
	0x036DAD3C STR W23, [X19]
	0x036DAD40 B 0x36DAEB4
	0x036DAD44 LDR X0, [X19 + 0x30]
	0x036DAD48 CBZ X0, 0x36DB1EC
	0x036DAD4C MOV X1, X31
	0x036DAD50 BL 0x361C394
	0x036DAD54 MOV X21, X0
	0x036DAD58 LDR X0, [X19 + 0x30]
	0x036DAD5C CBZ X0, 0x36DB1F0
	0x036DAD60 MOV X1, X31
	0x036DAD64 BL 0x361CC2C
	0x036DAD68 CBZ X20, 0x36DB1F4
	0x036DAD6C LDR X3, [X19 + 0x20]
	0x036DAD70 MOV W2, W0
	0x036DAD74 MOV X0, X20
	0x036DAD78 MOV X1, X21
	0x036DAD7C BL 0x36D9A28
	0x036DAD80 CBZ X0, 0x36DB1F8
	0x036DAD84 ADRP X8, 0xA66000
	0x036DAD88 LDR X8, [X8 + 0x2F0]
	0x036DAD8C LDR X2, [X8]
	0x036DAD90 MOV W1, W31
	0x036DAD94 BL 0x269F5D4
	0x036DAD98 ADRP X8, 0xA66000
	0x036DAD9C LDR X8, [X8 + 0x2D8]
	0x036DADA0 STP X0, X1, [X31 + 0x60]
	0x036DADA4 LDR X8, [X8]
	0x036DADA8 ADD X0, X31, 0x60
	0x036DADAC MOV X1, X8
	0x036DADB0 BL 0x2998B64
	0x036DADB4 TBZ X0, 0x0, 0x36DB124
	0x036DADB8 ADRP X8, 0xA66000
	0x036DADBC LDR X8, [X8 + 0x2C8]
	0x036DADC0 ADD X0, X31, 0x60
	0x036DADC4 LDR X1, [X8]
	0x036DADC8 BL 0x2998BB0
	0x036DADCC ADRP X8, 0xA63000
	0x036DADD0 LDR X8, [X8 + 0x8E8]
	0x036DADD4 MOV X21, X0
	0x036DADD8 LDR X0, [X8]
	0x036DADDC BL 0x1C16F10
	0x036DADE0 MOV X22, X0
	0x036DADE4 MOVZ W2, 0x1
	0x036DADE8 MOV X1, X21
	0x036DADEC MOV X3, X31
	0x036DADF0 BL 0x36ACB1C
	0x036DADF4 LDR X0, [X19 + 0x30]
	0x036DADF8 STR X22, [X19 + 0x58]
	0x036DADFC CBZ X0, 0x36DB1E8
	0x036DAE00 MOV X1, X31
	0x036DAE04 BL 0x361CEF0
	0x036DAE08 ADRP X8, 0xA56000
	0x036DAE0C LDR X8, [X8 + 0xDE8]
	0x036DAE10 LDR X1, [X8]
	0x036DAE14 MOV X2, X31
	0x036DAE18 BL 0x321BA08
	0x036DAE1C TBZ X0, 0x0, 0x36DAECC
	0x036DAE20 ADRP X8, 0xA57000
	0x036DAE24 LDR X22, [X19 + 0x58]
	0x036DAE28 LDR X8, [X8 + 0x508]
	0x036DAE2C LDR X0, [X8]
	0x036DAE30 BL 0x1C16F10
	0x036DAE34 MOV X21, X0
	0x036DAE38 MOV X1, X22
	0x036DAE3C MOV X2, X31
	0x036DAE40 BL 0x3625698
	0x036DAE44 LDR X0, [X19 + 0x30]
	0x036DAE48 STR X21, [X19 + 0x80]
	0x036DAE4C CBZ X0, 0x36DB1FC
	0x036DAE50 MOV X1, X31
	0x036DAE54 BL 0x361C394
	0x036DAE58 MOV X22, X0
	0x036DAE5C LDR X0, [X19 + 0x38]
	0x036DAE60 CBZ X0, 0x36DB200
	0x036DAE64 BL 0x36D96D8
	0x036DAE68 CBZ X21, 0x36DB204
	0x036DAE6C LDR X8, [X21]
	0x036DAE70 MOV X2, X0
	0x036DAE74 LDR X9, [X8 + 0x408]
	0x036DAE78 LDR X5, [X8 + 0x410]
	0x036DAE7C MOVZ W3, 0xFC0
	0x036DAE80 MOV X0, X21
	0x036DAE84 MOV X1, X22
	0x036DAE88 MOV W4, W31
	0x036DAE8C BLR X9
	0x036DAE90 CBZ X0, 0x36DB208
	0x036DAE94 MOV W1, W31
	0x036DAE98 MOV X2, X31
	0x036DAE9C BL 0x33ED3A0
	0x036DAEA0 STP X0, X1, [X31 + 0x50]
	0x036DAEA4 ADD X0, X31, 0x50
	0x036DAEA8 MOV X1, X31
	0x036DAEAC BL 0x32C40D4
	0x036DAEB0 TBZ X0, 0x0, 0x36DB168
	0x036DAEB4 ADD X0, X31, 0x50
	0x036DAEB8 MOV X1, X31
	0x036DAEBC BL 0x32C40F0
	0x036DAEC0 LDR X8, [X19 + 0x80]
	0x036DAEC4 STR X31, [X19 + 0x80]
	0x036DAEC8 STR X8, [X19 + 0x58]
	0x036DAECC ADRP X8, 0xA66000
	0x036DAED0 LDR X8, [X8 + 0x1A8]
	0x036DAED4 LDR X0, [X8]
	0x036DAED8 LDR W8, [X0 + 0xE0]
	0x036DAEDC CBNZ W8, 0x36DAEE4
	0x036DAEE0 BL 0x1C16DFC
	0x036DAEE4 BL 0x36DA2FC
	0x036DAEE8 MOV X2, X0
	0x036DAEEC LDP X0, X8, [X19 + 0x30]
	0x036DAEF0 STP X2, X1, [X19 + 0x60]
	0x036DAEF4 MOV X1, X8
	0x036DAEF8 BL 0x36D9B3C
	0x036DAEFC MOV X1, X0
	0x036DAF00 CBZ X1, 0x36DB1C4
	0x036DAF04 LDR X0, [X19 + 0x58]
	0x036DAF08 CBZ X0, 0x36DB1C8
	0x036DAF0C LDR X8, [X0]
	0x036DAF10 LDR X4, [X19 + 0x20]
	0x036DAF14 LDR W3, [X1 + 0x18]
	0x036DAF18 LDR X9, [X8 + 0x318]
	0x036DAF1C LDR X5, [X8 + 0x320]
	0x036DAF20 MOV W2, W31
	0x036DAF24 BLR X9
	0x036DAF28 CBZ X0, 0x36DB1CC
	0x036DAF2C MOV W1, W31
	0x036DAF30 MOV X2, X31
	0x036DAF34 BL 0x33ED3A0
	0x036DAF38 STP X0, X1, [X31 + 0x50]
	0x036DAF3C ADD X0, X31, 0x50
	0x036DAF40 MOV X1, X31
	0x036DAF44 BL 0x32C40D4
	0x036DAF48 TBZ X0, 0x0, 0x36DB018
	0x036DAF4C ADD X0, X31, 0x50
	0x036DAF50 MOV X1, X31
	0x036DAF54 BL 0x32C40F0
	0x036DAF58 CBZ X20, 0x36DB1D0
	0x036DAF5C LDR X1, [X19 + 0x58]
	0x036DAF60 LDR X4, [X19 + 0x20]
	0x036DAF64 LDR X3, [X19 + 0x68]
	0x036DAF68 LDR X2, [X19 + 0x38]
	0x036DAF6C BL 0x36DA590
	0x036DAF70 CBZ X0, 0x36DB1D4
	0x036DAF74 ADRP X8, 0xA66000
	0x036DAF78 LDR X8, [X8 + 0x2F8]
	0x036DAF7C LDR X2, [X8]
	0x036DAF80 MOV W1, W31
	0x036DAF84 BL 0x269F5D4
	0x036DAF88 ADRP X8, 0xA66000
	0x036DAF8C LDR X8, [X8 + 0x2E0]
	0x036DAF90 STP X0, X1, [X31 + 0x40]
	0x036DAF94 LDR X8, [X8]
	0x036DAF98 ADD X0, X31, 0x40
	0x036DAF9C MOV X1, X8
	0x036DAFA0 BL 0x2998B64
	0x036DAFA4 TBZ X0, 0x0, 0x36DB060
	0x036DAFA8 ADRP X8, 0xA66000
	0x036DAFAC LDR X8, [X8 + 0x2D0]
	0x036DAFB0 ADD X0, X31, 0x40
	0x036DAFB4 LDR X1, [X8]
	0x036DAFB8 BL 0x2998BB0
	0x036DAFBC MOV X1, X0
	0x036DAFC0 LDR X8, [X19 + 0x38]
	0x036DAFC4 CBZ X8, 0x36DB1E0
	0x036DAFC8 ADD X21, X19, 0x58
	0x036DAFCC LDR X0, [X21]
	0x036DAFD0 LDP W2, W3, [X8 + 0x48]
	0x036DAFD4 LDR X4, [X8 + 0x28]
	0x036DAFD8 MOV W5, W31
	0x036DAFDC BL 0x36DB528
	0x036DAFE0 CBZ X20, 0x36DB1E4
	0x036DAFE4 LDR W9, [X20 + 0x18]
	0x036DAFE8 MOV X8, X0
	0x036DAFEC STR X0, [X20 + 0x20]
	0x036DAFF0 CMP W9, 0x5
	0x036DAFF4 B.EQ 0x36DB0A8
	0x036DAFF8 CMP W9, 0x6
	0x036DAFFC B.NE 0x36DB0BC
	0x036DB000 CBZ X8, 0x36DB20C
	0x036DB004 LDR X9, [X8]
	0x036DB008 LDP X10, X1, [X9 + 0x1C8]
	0x036DB00C MOV X0, X8
	0x036DB010 BLR X10
	0x036DB014 B 0x36DB0BC
	0x036DB018 MOVZ W8, 0x2
	0x036DB01C STR W8, [X19]
	0x036DB020 LDR V0, [X31 + 0x5]
	0x036DB024 ADRP X8, 0xA1B000
	0x036DB028 STUR V0, [X19 + 0x88]
	0x036DB02C LDR X8, [X8 + 0x280]
	0x036DB030 LDR X0, [X8]
	0x036DB034 LDR W8, [X0 + 0xE0]
	0x036DB038 CBNZ W8, 0x36DB040
	0x036DB03C BL 0x1C16DFC
	0x036DB040 ADRP X8, 0xA65000
	0x036DB044 LDR X8, [X8 + 0x2A8]
	0x036DB048 ADD X0, X19, 0x8
	0x036DB04C LDR X3, [X8]
	0x036DB050 ADD X1, X31, 0x50
	0x036DB054 MOV X2, X19
	0x036DB058 BL 0x218C4D0
	0x036DB05C B 0x36DB1AC
	0x036DB060 MOVZ W8, 0x3
	0x036DB064 STR W8, [X19]
	0x036DB068 LDR V0, [X31 + 0x4]
	0x036DB06C ADRP X8, 0xA1B000
	0x036DB070 STUR V0, [X19 + 0x98]
	0x036DB074 LDR X8, [X8 + 0x280]
	0x036DB078 LDR X0, [X8]
	0x036DB07C LDR W8, [X0 + 0xE0]
	0x036DB080 CBNZ W8, 0x36DB088
	0x036DB084 BL 0x1C16DFC
	0x036DB088 ADRP X8, 0xA65000
	0x036DB08C LDR X8, [X8 + 0x2A0]
	0x036DB090 ADD X0, X19, 0x8
	0x036DB094 LDR X3, [X8]
	0x036DB098 ADD X1, X31, 0x40
	0x036DB09C MOV X2, X19
	0x036DB0A0 BL 0x2185A3C
	0x036DB0A4 B 0x36DB1AC
	0x036DB0A8 CBZ X8, 0x36DB210
	0x036DB0AC LDR X9, [X8]
	0x036DB0B0 LDP X10, X1, [X9 + 0x1F8]
	0x036DB0B4 MOV X0, X8
	0x036DB0B8 BLR X10
	0x036DB0BC MOV X20, X31
	0x036DB0C0 STP X31, X31, [X21]
	0x036DB0C4 STR X31, [X21 + 0x10]
	0x036DB0C8 MOVZ W21, 0x19
	0x036DB0CC TBZ X23, 0x1F, 0x36DB0DC
	0x036DB0D0 ADD X0, X19, 0x40
	0x036DB0D4 MOV X1, X31
	0x036DB0D8 BL 0x33DF6F0
	0x036DB0DC CBNZ X20, 0x36DB1D8
	0x036DB0E0 CBZ W21, 0x36DB0EC
	0x036DB0E4 CMP W21, 0x19
	0x036DB0E8 B.NE 0x36DB1AC
	0x036DB0EC MOVN W8, 0x1
	0x036DB0F0 STP X31, X31, [X19 + 0x48]
	0x036DB0F4 STR X31, [X19 + 0x40]
	0x036DB0F8 STR W8, [X19], #0x8
	0x036DB0FC ADRP X8, 0xA1B000
	0x036DB100 LDR X8, [X8 + 0x280]
	0x036DB104 LDR X0, [X8]
	0x036DB108 LDR W8, [X0 + 0xE0]
	0x036DB10C CBNZ W8, 0x36DB114
	0x036DB110 BL 0x1C16DFC
	0x036DB114 MOV X0, X19
	0x036DB118 MOV X1, X31
	0x036DB11C BL 0x32C4864
	0x036DB120 B 0x36DB1AC
	0x036DB124 STR W31, [X19]
	0x036DB128 LDR V0, [X31 + 0x6]
	0x036DB12C ADRP X8, 0xA1B000
	0x036DB130 STR V0, [X19 + 0x7]
	0x036DB134 LDR X8, [X8 + 0x280]
	0x036DB138 LDR X0, [X8]
	0x036DB13C LDR W8, [X0 + 0xE0]
	0x036DB140 CBNZ W8, 0x36DB148
	0x036DB144 BL 0x1C16DFC
	0x036DB148 ADRP X8, 0xA65000
	0x036DB14C LDR X8, [X8 + 0x2B0]
	0x036DB150 ADD X0, X19, 0x8
	0x036DB154 LDR X3, [X8]
	0x036DB158 ADD X1, X31, 0x60
	0x036DB15C MOV X2, X19
	0x036DB160 BL 0x2185A3C
	0x036DB164 B 0x36DB1AC
	0x036DB168 MOVZ W8, 0x1
	0x036DB16C STR W8, [X19]
	0x036DB170 LDR V0, [X31 + 0x5]
	0x036DB174 ADRP X8, 0xA1B000
	0x036DB178 STUR V0, [X19 + 0x88]
	0x036DB17C LDR X8, [X8 + 0x280]
	0x036DB180 LDR X0, [X8]
	0x036DB184 LDR W8, [X0 + 0xE0]
	0x036DB188 CBNZ W8, 0x36DB190
	0x036DB18C BL 0x1C16DFC
	0x036DB190 ADRP X8, 0xA65000
	0x036DB194 LDR X8, [X8 + 0x2A8]
	0x036DB198 ADD X0, X19, 0x8
	0x036DB19C LDR X3, [X8]
	0x036DB1A0 ADD X1, X31, 0x50
	0x036DB1A4 MOV X2, X19
	0x036DB1A8 BL 0x218C4D0
	0x036DB1AC LDP X20, X19, [X31 + 0xA0]
	0x036DB1B0 LDP X22, X21, [X31 + 0x90]
	0x036DB1B4 LDP X24, X23, [X31 + 0x80]
	0x036DB1B8 LDR X30, [X31 + 0x70]
	0x036DB1BC ADD X31, X31, 0xB0
	0x036DB1C0 RET
	0x036DB1C4 BL 0x1C16F20
	0x036DB1C8 BL 0x1C16F20
	0x036DB1CC BL 0x1C16F20
	0x036DB1D0 BL 0x1C16F20
	0x036DB1D4 BL 0x1C16F20
	0x036DB1D8 MOV X0, X20
	0x036DB1DC BL 0x1C16F18
	0x036DB1E0 BL 0x1C16F20
	0x036DB1E4 BL 0x1C16F20
	0x036DB1E8 BL 0x1C16F20
	0x036DB1EC BL 0x1C16F20
	0x036DB1F0 BL 0x1C16F20
	0x036DB1F4 BL 0x1C16F20
	0x036DB1F8 BL 0x1C16F20
	0x036DB1FC BL 0x1C16F20
	0x036DB200 BL 0x1C16F20
	0x036DB204 BL 0x1C16F20
	0x036DB208 BL 0x1C16F20
	0x036DB20C BL 0x1C16F20
	0x036DB210 BL 0x1C16F20
	0x036DB214 B 0x36DB2DC
	0x036DB218 MOV X21, X0
	0x036DB21C MOVZ W23, 0x1
	0x036DB220 B 0x36DB2FC
	0x036DB224 MOV X21, X0
	0x036DB228 MOV W23, W31
	0x036DB22C B 0x36DB2FC
	0x036DB230 B 0x36DB2F8
	0x036DB234 B 0x36DB2F8
	0x036DB238 B 0x36DB2F8
	0x036DB23C B 0x36DB2F8
	0x036DB240 B 0x36DB2F8
	0x036DB244 B 0x36DB2DC
	0x036DB248 B 0x36DB2DC
	0x036DB24C B 0x36DB2F8
	0x036DB250 B 0x36DB2F8
	0x036DB254 B 0x36DB2F8
	0x036DB258 B 0x36DB2F8
	0x036DB25C B 0x36DB2F8
	0x036DB260 B 0x36DB2F8
	0x036DB264 B 0x36DB2F8
	0x036DB268 B 0x36DB2F8
	0x036DB26C B 0x36DB2F8
	0x036DB270 MOV X21, X0
	0x036DB274 MOVZ W23, 0x3
	0x036DB278 B 0x36DB2FC
	0x036DB27C MOV X21, X0
	0x036DB280 MOVZ W23, 0x2
	0x036DB284 B 0x36DB2FC
	0x036DB288 B 0x36DB2F8
	0x036DB28C B 0x36DB2F8
	0x036DB290 B 0x36DB2F8
	0x036DB294 B 0x36DB2F8
	0x036DB298 B 0x36DB2F8
	0x036DB29C B 0x36DB2F8
	0x036DB2A0 B 0x36DB2F8
	0x036DB2A4 B 0x36DB2DC
	0x036DB2A8 B 0x36DB2F8
	0x036DB2AC B 0x36DB2F8
	0x036DB2B0 B 0x36DB2F8
	0x036DB2B4 B 0x36DB2F8
	0x036DB2B8 B 0x36DB2F8
	0x036DB2BC B 0x36DB2F8
	0x036DB2C0 B 0x36DB2F8
	0x036DB2C4 B 0x36DB2F8
	0x036DB2C8 B 0x36DB2F8
	0x036DB2CC B 0x36DB2F8
	0x036DB2D0 B 0x36DB2F8
	0x036DB2D4 B 0x36DB2F8
	0x036DB2D8 B 0x36DB2DC
	0x036DB2DC MOV X21, X0
	0x036DB2E0 MOV W22, W1
	0x036DB2E4 B 0x36DB348
	0x036DB2E8 B 0x36DB2F8
	0x036DB2EC B 0x36DB2F8
	0x036DB2F0 B 0x36DB2F8
	0x036DB2F4 B 0x36DB2F8
	0x036DB2F8 MOV X21, X0

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X19, 0xD07000
	014 Move X23, 0xA67000
	015 Move W8, [X19+2761]
	016 Move X23, [X23+424]
	017 Move X22, X2
	018 Move X21, X1
	019 Move X20, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {77}
	024 Move X0, 0xA1B000
	025 Move X0, [X0+456]
	026 Call 0x1C17CF4
	027 Move X0, 0xA42000
	028 Move X0, [X0+2904]
	029 Call 0x1C17CF4
	030 Move X0, 0xA1A000
	031 Move X0, [X0+2288]
	032 Call 0x1C17CF4
	033 Move X0, 0xA67000
	034 Move X0, [X0+424]
	035 Call 0x1C17CF4
	036 Move X0, 0xA61000
	037 Move X0, [X0+392]
	038 Call 0x1C17CF4
	039 Move X0, 0xA67000
	040 Move X0, [X0+584]
	041 Call 0x1C17CF4
	042 Move X0, 0xA67000
	043 Move X0, [X0+592]
	044 Call 0x1C17CF4
	045 Move X0, 0xA1E000
	046 Move X0, [X0+2344]
	047 Call 0x1C17CF4
	048 Move X0, 0xA67000
	049 Move X0, [X0+600]
	050 Call 0x1C17CF4
	051 Move X0, 0xA58000
	052 Move X0, [X0+1056]
	053 Call 0x1C17CF4
	054 Move X0, 0xA58000
	055 Move X0, [X0+1352]
	056 Call 0x1C17CF4
	057 Move X0, 0xA58000
	058 Move X0, [X0+1368]
	059 Call 0x1C17CF4
	060 Move X0, 0xA65000
	061 Move X0, [X0+512]
	062 Call 0x1C17CF4
	063 Move X0, 0xA67000
	064 Move X0, [X0+608]
	065 Call 0x1C17CF4
	066 Move X0, 0xA1A000
	067 Move X0, [X0+2104]
	068 Call 0x1C17CF4
	069 Move X0, 0xA67000
	070 Move X0, [X0+616]
	071 Call 0x1C17CF4
	072 Move X0, 0xA67000
	073 Move X0, [X0+624]
	074 Call 0x1C17CF4
	075 Move W8, 1
	076 Move [X19+2761], W8
	077 Move X0, [X23]
	078 Move W8, [X0+224]
	079 Compare W8, 0
	080 JumpIfNotEqual {83}
	081 Call 0x1C17DFC
	082 Move X0, [X23]
	083 Call 0x1C17D0C
	084 Move X19, [X0]
	085 Compare X19, 0
	086 JumpIfNotEqual {106}
	087 Move X8, 0xA1A000
	088 Move X8, [X8+2288]
	089 Move X0, [X8]
	090 Call 0x1C17F10
	091 Move X1, X31
	092 Move X19, X0
	093 Call StringBuilder..ctor, X0
	094 Move X0, [X23]
	095 Move W8, [X0+224]
	096 Compare W8, 0
	097 JumpIfNotEqual {100}
	098 Call 0x1C17DFC
	099 Move X0, [X23]
	100 Call 0x1C17D0C
	101 Move [X0], X19
	102 Move X0, [X23]
	103 Call 0x1C17D0C
	104 Compare X19, 0
	105 JumpIfEqual {450}
	106 Move X8, 0xA58000
	107 Move X8, [X8+1352]
	108 Move X1, [X8]
	109 Move X0, X19
	110 Move X2, X31
	111 Call StringBuilder.Append, X0, X1
	112 Compare X20, 0
	113 JumpIfEqual {433}
	114 Move X23, X0
	115 Move X0, X20
	116 Move X1, X31
	117 Call Uri.get_PathAndQuery, X0
	118 Move X1, X0
	119 Compare X23, 0
	120 JumpIfEqual {434}
	121 Move X0, X23
	122 Move X2, X31
	123 Call StringBuilder.Append, X0, X1
	124 Compare X0, 0
	125 JumpIfEqual {435}
	126 Move X8, 0xA58000
	127 Move X8, [X8+1368]
	128 Move X1, [X8]
	129 Move X2, X31
	130 Call StringBuilder.Append, X0, X1
	131 Compare X21, 0
	132 JumpIfEqual {436}
	133 Move X0, [X21+32]
	134 Compare X0, 0
	135 JumpIfEqual {437}
	136 Move X27, 0xA61000
	137 Move X27, [X27+392]
	138 Move X1, [X27]
	139 Move X2, X31
	140 Call NameValueCollection.get_Item, X0, X1
	141 Move X8, 0xA67000
	142 Move X8, [X8+624]
	143 Move X23, X0
	144 Move X1, [X8]
	145 Move X0, X19
	146 Move X2, X31
	147 Call StringBuilder.Append, X0, X1
	148 Move X0, X23
	149 Move X1, X31
	150 Call String.IsNullOrEmpty, X0
	151 Move X26, 0xA58000
	152 Move X26, [X26+1056]
	153 Move TEMP, X0
	154 And TEMP, TEMP, 1
	155 Compare TEMP, 1
	156 JumpIfNotEqual {184}
	157 Move X0, X20
	158 Move X1, X31
	159 Call Uri.get_IdnHost, X0
	160 Move X1, X0
	161 Move X0, X19
	162 Move X2, X31
	163 Call StringBuilder.Append, X0, X1
	164 Compare X0, 0
	165 JumpIfEqual {447}
	166 Move W1, 58
	167 Move X2, X31
	168 Call StringBuilder.Append, X0, X1
	169 Move X23, X0
	170 Move X0, X20
	171 Move X1, X31
	172 Call Uri.get_Port, X0
	173 Move W1, W0
	174 Compare X23, 0
	175 JumpIfEqual {448}
	176 Move X0, X23
	177 Move X2, X31
	178 Call StringBuilder.Append, X0, X1
	179 Compare X0, 0
	180 JumpIfEqual {449}
	181 Move X1, [X26]
	182 Move X2, X31
	183 Call StringBuilder.Append, X0, X1
	184 Move X0, X19
	185 Move X1, X23
	186 Move X2, X31
	187 Call StringBuilder.Append, X0, X1
	188 Compare X0, 0
	189 JumpIfEqual {446}
	190 Move X1, [X26]
	191 Move X2, X31
	192 Call StringBuilder.Append, X0, X1
	193 Move X8, 0xA67000
	194 Move X8, [X8+616]
	195 Move X1, [X8]
	196 Move X0, X19
	197 Move X2, X31
	198 Call StringBuilder.Append, X0, X1
	199 Move X8, 0xA67000
	200 Move X8, [X8+592]
	201 Move X1, [X8]
	202 Move X0, X19
	203 Move X2, X31
	204 Call StringBuilder.Append, X0, X1
	205 Move X8, 0xA67000
	206 Move X8, [X8+608]
	207 Move X1, [X8]
	208 Move X0, X19
	209 Move X2, X31
	210 Call StringBuilder.Append, X0, X1
	211 Move X8, 0xA67000
	212 Move X8, [X8+584]
	213 Move X1, [X8]
	214 Move X0, X19
	215 Move X2, X31
	216 Call StringBuilder.Append, X0, X1
	217 Compare X0, 0
	218 JumpIfEqual {438}
	219 Move X1, X22
	220 Move X2, X31
	221 Call StringBuilder.Append, X0, X1
	222 Compare X0, 0
	223 JumpIfEqual {439}
	224 Move X1, [X26]
	225 Move X2, X31
	226 Call StringBuilder.Append, X0, X1
	227 Move X0, [X21+32]
	228 Compare X0, 0
	229 JumpIfEqual {440}
	230 Move X8, [X0]
	231 Move X1, [X8+720]
	232 Move X9, [X8+712]
	233 NotImplemented "Instruction BLR not yet implemented."
	234 Move X22, X0
	235 Compare X0, 0
	236 JumpIfEqual {441}
	237 Move X8, [X22+24]
	238 Move X28, 0xA1E000
	239 Move X28, [X28+2344]
	240 NotImplemented "Instruction CMP not yet implemented."
	241 Move X29, X31
	242 And X8, X8, 0
	243 Add X25, X22, 32
	244 NotImplemented "Instruction CMP not yet implemented."
	245 Move X23, [X25]
	246 Move X1, [X27]
	247 Move W2, 5
	248 Move X0, X23
	249 Move X3, X31
	250 Call String.Equals, X0, X1, X2
	251 Move TEMP, X0
	252 And TEMP, TEMP, 1
	253 Compare TEMP, 1
	254 JumpIfEqual {282}
	255 Move X0, X19
	256 Move X1, X23
	257 Move X2, X31
	258 Call StringBuilder.Append, X0, X1
	259 Compare X0, 0
	260 JumpIfEqual {429}
	261 Move X1, [X28]
	262 Move X2, X31
	263 Call StringBuilder.Append, X0, X1
	264 Move X24, X0
	265 Move X0, [X21+32]
	266 Compare X0, 0
	267 JumpIfEqual {431}
	268 Move X1, X23
	269 Move X2, X31
	270 Call NameValueCollection.get_Item, X0, X1
	271 Move X1, X0
	272 Compare X24, 0
	273 JumpIfEqual {430}
	274 Move X0, X24
	275 Move X2, X31
	276 Call StringBuilder.Append, X0, X1
	277 Compare X0, 0
	278 JumpIfEqual {432}
	279 Move X1, [X26]
	280 Move X2, X31
	281 Call StringBuilder.Append, X0, X1
	282 Move W8, [X22+24]
	283 Add X29, X29, 1
	284 NotImplemented "Instruction CMP not yet implemented."
	285 Move X8, [X21+24]
	286 Compare X8, 0
	287 JumpIfEqual {442}
	288 Move W8, [X8+24]
	289 NotImplemented "Instruction CMP not yet implemented."
	290 Move X8, 0xA67000
	291 Move X8, [X8+600]
	292 Move X1, [X8]
	293 Move X0, X19
	294 Move X2, X31
	295 Call StringBuilder.Append, X0, X1
	296 Compare X0, 0
	297 JumpIfEqual {444}
	298 Move X1, [X28]
	299 Move X2, X31
	300 Call StringBuilder.Append, X0, X1
	301 Move X0, [X21+24]
	302 Compare X0, 0
	303 JumpIfEqual {445}
	304 Move X24, 0xA42000
	305 Move X24, [X24+2904]
	306 Move X2, [X24]
	307 Move W1, W31
	308 Call List`1<Object>.get_Item, X0, X1
	309 Move X1, X0
	310 Move X0, X19
	311 Move X2, X31
	312 Call StringBuilder.Append, X0, X1
	313 Move X8, [X21+24]
	314 Compare X8, 0
	315 JumpIfEqual {342}
	316 Move X25, 0xA1A000
	317 Move X25, [X25+2104]
	318 Move W22, 1
	319 Move W8, [X8+24]
	320 NotImplemented "Instruction CMP not yet implemented."
	321 Move X1, [X25]
	322 Move X0, X19
	323 Move X2, X31
	324 Call StringBuilder.Append, X0, X1
	325 Move X23, X0
	326 Move X0, [X21+24]
	327 Compare X0, 0
	328 JumpIfEqual {428}
	329 Move X2, [X24]
	330 Move W1, W22
	331 Call List`1<Object>.get_Item, X0, X1
	332 Move X1, X0
	333 Compare X23, 0
	334 JumpIfEqual {427}
	335 Move X0, X23
	336 Move X2, X31
	337 Call StringBuilder.Append, X0, X1
	338 Move X8, [X21+24]
	339 Add W22, W22, 1
	340 Compare X8, 0
	341 JumpIfNotEqual {319}
	342 Call 0x1C17F20
	343 Move X1, [X26]
	344 Move X0, X19
	345 Move X2, X31
	346 Call StringBuilder.Append, X0, X1
	347 Move X0, [X21+64]
	348 Compare X0, 0
	349 JumpIfEqual {381}
	350 Move X1, X20
	351 Move X2, X31
	352 Call CookieContainer.GetCookieHeader, X0, X1
	353 Move X20, X0
	354 Move X1, X31
	355 Call String.IsNullOrWhiteSpace, X0
	356 Move TEMP, X0
	357 And TEMP, TEMP, 1
	358 Compare TEMP, 1
	359 JumpIfEqual {381}
	360 Move X8, 0xA64000
	361 Move X8, [X8+512]
	362 Move X1, [X8]
	363 Move X0, X19
	364 Move X2, X31
	365 Call StringBuilder.Append, X0, X1
	366 Compare X0, 0
	367 JumpIfEqual {451}
	368 Move X1, [X28]
	369 Move X2, X31
	370 Call StringBuilder.Append, X0, X1
	371 Compare X0, 0
	372 JumpIfEqual {452}
	373 Move X1, X20
	374 Move X2, X31
	375 Call StringBuilder.Append, X0, X1
	376 Compare X0, 0
	377 JumpIfEqual {453}
	378 Move X1, [X26]
	379 Move X2, X31
	380 Call StringBuilder.Append, X0, X1
	381 Move X1, [X26]
	382 Move X0, X19
	383 Move X2, X31
	384 Call StringBuilder.Append, X0, X1
	385 Move X20, 0xA66000
	386 Move X20, [X20+424]
	387 Move X0, [X20]
	388 Move W8, [X0+224]
	389 Compare W8, 0
	390 JumpIfNotEqual {393}
	391 Call 0x1C17DFC
	392 Move X0, [X20]
	393 Move X8, [X0+184]
	394 Move X9, [X19]
	395 Move X20, [X8]
	396 Move X8, [X9+360]
	397 Move X1, [X9+368]
	398 Move X0, X19
	399 NotImplemented "Instruction BLR not yet implemented."
	400 Move X1, X0
	401 Compare X20, 0
	402 JumpIfEqual {443}
	403 Move X8, [X20]
	404 Move X9, [X8+616]
	405 Move X2, [X8+624]
	406 Move X0, X20
	407 NotImplemented "Instruction BLR not yet implemented."
	408 Move X20, X0
	409 Move X0, X19
	410 Move X1, X31
	411 Call StringBuilder.Clear, X0
	412 Move X0, X20
	413 Move X20, [X31+80]
	414 Move X19, [X31+88]
	415 Move X22, [X31+64]
	416 Move X21, [X31+72]
	417 Move X24, [X31+48]
	418 Move X23, [X31+56]
	419 Move X26, [X31+32]
	420 Move X25, [X31+40]
	421 Move X28, [X31+16]
	422 Move X27, [X31+24]
	423 Move X29, [X31+96]
	424 Move X30, [X31+104]
	425 Return X0
	426 Call 0x1C17F28
	427 Call 0x1C17F20
	428 Call 0x1C17F20
	429 Call 0x1C17F20
	430 Call 0x1C17F20
	431 Call 0x1C17F20
	432 Call 0x1C17F20
	433 Call 0x1C17F20
	434 Call 0x1C17F20
	435 Call 0x1C17F20
	436 Call 0x1C17F20
	437 Call 0x1C17F20
	438 Call 0x1C17F20
	439 Call 0x1C17F20
	440 Call 0x1C17F20
	441 Call 0x1C17F20
	442 Call 0x1C17F20
	443 Call 0x1C17F20
	444 Call 0x1C17F20
	445 Call 0x1C17F20
	446 Call 0x1C17F20
	447 Call 0x1C17F20
	448 Call 0x1C17F20
	449 Call 0x1C17F20
	450 Call 0x1C17F20
	451 Call 0x1C17F20
	452 Call 0x1C17F20
	453 Call 0x1C17F20
	454 Move X20, X0
	455 Move X19, X31
	456 Move W22, 1
	457 Move X20, X0
	458 Move W22, W31
	459 NotImplemented "Instruction CMP not yet implemented."
	460 Move X0, X20
	461 Call 0x3EB2AD0
	462 Move X21, [X0]
	463 Call 0x3EB2AE0
	464 Move TEMP, X22
	465 And TEMP, TEMP, 1
	466 Compare TEMP, 1
	467 JumpIfEqual {477}
	468 Move X0, X19
	469 Move X1, X31
	470 Call StringBuilder.Clear, X0
	471 Move X20, X31
	472 Compare X21, 0
	473 JumpIfEqual {412}
	474 Move X0, X21
	475 Call 0x1C17F18
	476 Move X21, X31
	477 Call 0x1C17F20
	478 Move X20, X0
	479 Compare W22, 0
	480 JumpIfEqual {482}
	481 Call 0x1C17F20
	482 Move X0, X19
	483 Move X1, X31
	484 Call StringBuilder.Clear, X0
	485 Compare X21, 0
	486 JumpIfNotEqual {489}
	487 Move X0, X20
	488 Call 0x1D2D690
	489 Move X0, X21
	490 Call 0x1C17F18
	491 Call 0x1991590

Method: System.Collections.Generic.KeyValuePair`2<System.String, System.String> CreateSecKeyAndSecWebSocketAccept()

Disassembly:
	0x036DB2FC MOV W22, W1
	0x036DB300 CMP W1, 0x1
	0x036DB304 B.EQ 0x36DB3BC
	0x036DB308 MOVZ W8, 0x1
	0x036DB30C CMP W22, W8
	0x036DB310 B.NE 0x36DB330
	0x036DB314 MOV X0, X21
	0x036DB318 BL 0x3EB1AD0
	0x036DB31C LDR X20, [X0]
	0x036DB320 BL 0x3EB1AE0
	0x036DB324 MOV W21, W31
	0x036DB328 TBZ X23, 0x1F, 0x36DB0DC
	0x036DB32C B 0x36DB0D0
	0x036DB330 MOV X20, X31
	0x036DB334 TBZ X23, 0x1F, 0x36DB344
	0x036DB338 ADD X0, X19, 0x40
	0x036DB33C MOV X1, X31
	0x036DB340 BL 0x33DF6F0
	0x036DB344 CBNZ X20, 0x36DB418
	0x036DB348 CMP W22, 0x1
	0x036DB34C B.NE 0x36DB51C
	0x036DB350 MOV X0, X21
	0x036DB354 BL 0x3EB1AD0
	0x036DB358 MOV X20, X0
	0x036DB35C ADRP X0, 0xA18000
	0x036DB360 LDR X0, [X0 + 0x7D0]
	0x036DB364 BL 0x1C16D08
	0x036DB368 LDR X8, [X20]
	0x036DB36C LDR X1, [X8]
	0x036DB370 BL 0x1C17270
	0x036DB374 TBZ X0, 0x0, 0x36DB3F4
	0x036DB378 LDR X20, [X20]
	0x036DB37C BL 0x3EB1AE0
	0x036DB380 MOVN W8, 0x1
	0x036DB384 STP X31, X31, [X19 + 0x48]
	0x036DB388 STR X31, [X19 + 0x40]
	0x036DB38C STR W8, [X19], #0x8
	0x036DB390 ADRP X0, 0xA1B000
	0x036DB394 LDR X0, [X0 + 0x280]
	0x036DB398 BL 0x1C16D08
	0x036DB39C LDR W8, [X0 + 0xE0]
	0x036DB3A0 CBNZ W8, 0x36DB3A8
	0x036DB3A4 BL 0x1C16DFC
	0x036DB3A8 MOV X0, X19
	0x036DB3AC MOV X1, X20
	0x036DB3B0 MOV X2, X31
	0x036DB3B4 BL 0x32C4908
	0x036DB3B8 B 0x36DB1AC
	0x036DB3BC MOV X0, X21
	0x036DB3C0 BL 0x3EB1AD0
	0x036DB3C4 MOV X21, X0
	0x036DB3C8 ADRP X0, 0xA18000
	0x036DB3CC LDR X0, [X0 + 0x7D0]
	0x036DB3D0 BL 0x1C16D08
	0x036DB3D4 LDR X8, [X21]
	0x036DB3D8 LDR X1, [X8]
	0x036DB3DC BL 0x1C17270
	0x036DB3E0 TBZ X0, 0x0, 0x36DB420
	0x036DB3E4 LDR X21, [X21]
	0x036DB3E8 BL 0x3EB1AE0
	0x036DB3EC CBNZ X20, 0x36DB440
	0x036DB3F0 BL 0x1C16F20
	0x036DB3F4 MOVZ W0, 0x8
	0x036DB3F8 BL 0x3EB1AF0
	0x036DB3FC LDR X8, [X20]
	0x036DB400 STR X8, [X0]
	0x036DB404 ADRP X1, 0x7D9000
	0x036DB408 ADD X1, X1, 0xE58
	0x036DB40C MOV X2, X31
	0x036DB410 BL 0x3EB1B00
	0x036DB414 B 0x36DB440
	0x036DB418 MOV X0, X20
	0x036DB41C BL 0x1C16F18
	0x036DB420 MOVZ W0, 0x8
	0x036DB424 BL 0x3EB1AF0
	0x036DB428 LDR X8, [X21]
	0x036DB42C STR X8, [X0]
	0x036DB430 ADRP X1, 0x7D9000
	0x036DB434 ADD X1, X1, 0xE58
	0x036DB438 MOV X2, X31
	0x036DB43C BL 0x3EB1B00
	0x036DB440 LDR W8, [X20 + 0x18]
	0x036DB444 CMP W8, 0x4
	0x036DB448 B.GT 0x36DB454
	0x036DB44C MOVZ W8, 0x5
	0x036DB450 STR W8, [X20 + 0x18]
	0x036DB454 MOV X0, X20
	0x036DB458 BL 0x36D8E60
	0x036DB45C ADRP X0, 0xA43000
	0x036DB460 LDR X0, [X0 + 0x308]
	0x036DB464 BL 0x1C16D08
	0x036DB468 CBZ X21, 0x36DB480
	0x036DB46C LDR X8, [X21]
	0x036DB470 CMP X8, X0
	0x036DB474 B.NE 0x36DB480
	0x036DB478 MOV X0, X21
	0x036DB47C BL 0x1C16F18
	0x036DB480 ADRP X0, 0xA43000
	0x036DB484 LDR X0, [X0 + 0x308]
	0x036DB488 BL 0x1C16D08
	0x036DB48C BL 0x1C16F10
	0x036DB490 MOV X20, X0
	0x036DB494 ADRP X0, 0xA62000
	0x036DB498 LDR X0, [X0 + 0xD30]
	0x036DB49C BL 0x1C16D08
	0x036DB4A0 MOV X1, X0
	0x036DB4A4 MOV X0, X20
	0x036DB4A8 MOV X2, X21
	0x036DB4AC MOV X3, X31
	0x036DB4B0 BL 0x3662038
	0x036DB4B4 ADRP X0, 0xA65000
	0x036DB4B8 LDR X0, [X0 + 0x308]
	0x036DB4BC BL 0x1C16D08
	0x036DB4C0 MOV X1, X0
	0x036DB4C4 MOV X0, X20
	0x036DB4C8 BL 0x1C16DEC
	0x036DB4CC B 0x36DB4E8
	0x036DB4D0 MOV X22, X1
	0x036DB4D4 MOV X21, X0
	0x036DB4D8 B 0x36DB308
	0x036DB4DC B 0x36DB4E8
	0x036DB4E0 B 0x36DB4E8
	0x036DB4E4 B 0x36DB4E8
	0x036DB4E8 MOV X21, X0
	0x036DB4EC MOV W22, W1
	0x036DB4F0 B 0x36DB308
	0x036DB4F4 MOV X21, X0
	0x036DB4F8 MOV W22, W1
	0x036DB4FC TBZ X23, 0x1F, 0x36DB344
	0x036DB500 B 0x36DB338
	0x036DB504 MOV X22, X1
	0x036DB508 MOV X21, X0
	0x036DB50C BL 0x3EB1AE0
	0x036DB510 B 0x36DB308
	0x036DB514 MOV X21, X0
	0x036DB518 BL 0x3EB1AE0
	0x036DB51C MOV X0, X21
	0x036DB520 BL 0x1D2C690
	0x036DB524 BL 0x1990590
	0x036DB528 SUB X31, X31, 0x50
	0x036DB52C STP X30, X25, [X31 + 0x10]
	0x036DB530 STP X24, X23, [X31 + 0x20]
	0x036DB534 STP X22, X21, [X31 + 0x30]
	0x036DB538 STP X20, X19, [X31 + 0x40]
	0x036DB53C ADRP X24, 0xD05000
	0x036DB540 LDRB W8, [X24 + 0xADC]
	0x036DB544 MOV X19, X4
	0x036DB548 MOV W22, W3
	0x036DB54C MOV W23, W2
	0x036DB550 MOV X20, X1
	0x036DB554 MOV X21, X0
	0x036DB558 TBNZ X8, 0x0, 0x36DB588
	0x036DB55C ADRP X0, 0xA41000
	0x036DB560 LDR X0, [X0 + 0xB60]
	0x036DB564 BL 0x1C16CF4
	0x036DB568 ADRP X0, 0xA1A000
	0x036DB56C LDR X0, [X0 + 0x570]
	0x036DB570 BL 0x1C16CF4
	0x036DB574 ADRP X0, 0xA1B000
	0x036DB578 LDR X0, [X0 + 0x128]
	0x036DB57C BL 0x1C16CF4
	0x036DB580 MOVZ W8, 0x1
	0x036DB584 STRB W8, [X24 + 0xADC]
	0x036DB588 CBZ X21, 0x36DB70C
	0x036DB58C LDR X8, [X21]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+40], X23
	004 Move [X31+48], X22
	005 Move [X31+56], X21
	006 Move [X31+64], X20
	007 Move [X31+72], X19
	008 Move X19, 0xD06000
	009 Move X22, 0xA22000
	010 Move W8, [X19+2762]
	011 Move X22, [X22+2536]
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {30}
	016 Move X0, 0xA22000
	017 Move X0, [X0+2536]
	018 Call 0x1C17CF4
	019 Move X0, 0xA19000
	020 Move X0, [X0+3584]
	021 Call 0x1C17CF4
	022 Move X0, 0xA5F000
	023 Move X0, [X0+3992]
	024 Call 0x1C17CF4
	025 Move X0, 0xA57000
	026 Move X0, [X0+736]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X19+2762], W8
	030 Move X0, X31
	031 Call Guid.NewGuid
	032 Move [X31+16], X0
	033 Move [X31+24], X1
	034 Add X0, X31, 16
	035 Move X1, X31
	036 Call Guid.ToByteArray, X0
	037 Move X8, [X22]
	038 Move X19, X0
	039 Move W9, [X8+224]
	040 Compare W9, 0
	041 JumpIfNotEqual {44}
	042 Move X0, X8
	043 Call 0x1C17DFC
	044 Move X23, 0xA19000
	045 Move X23, [X23+3584]
	046 Move X0, X19
	047 Move X1, X31
	048 Call Convert.ToBase64String, X0
	049 Move X20, X0
	050 Move X0, X31
	051 Call SHA1.Create
	052 Move X19, X0
	053 Move X0, X31
	054 Call Encoding.get_ASCII
	055 Move X8, 0xA57000
	056 Move X8, [X8+736]
	057 Move X21, X0
	058 Move X1, [X8]
	059 Move X0, X20
	060 Move X2, X31
	061 Call String.Concat, X0, X1
	062 Move X1, X0
	063 Compare X21, 0
	064 JumpIfEqual {132}
	065 Move X8, [X21]
	066 Move X9, [X8+616]
	067 Move X2, [X8+624]
	068 Move X0, X21
	069 NotImplemented "Instruction BLR not yet implemented."
	070 Move X1, X0
	071 Compare X19, 0
	072 JumpIfEqual {133}
	073 Move X0, X19
	074 Move X2, X31
	075 Call HashAlgorithm.ComputeHash, X0, X1
	076 Move X21, X0
	077 Move X0, [X22]
	078 Move W8, [X0+224]
	079 Compare W8, 0
	080 JumpIfNotEqual {82}
	081 Call 0x1C17DFC
	082 Move X0, X21
	083 Move X1, X31
	084 Call Convert.ToBase64String, X0
	085 Move X8, 0xA5F000
	086 Move X8, [X8+3992]
	087 Move X2, X0
	088 Move [X31], X31
	089 Move [X31+8], X31
	090 Move X3, [X8]
	091 Add X0, X31, 0
	092 Move X1, X20
	093 Call KeyValuePair`2<Object, Object>..ctor, X0, X1, X2
	094 Move X21, [X31]
	095 Move X22, [X31+8]
	096 Move X20, X31
	097 Move X8, [X19]
	098 Move X1, [X23]
	099 NotImplemented "Instruction LDRH not yet implemented."
	100 Compare X9, 0
	101 JumpIfEqual {108}
	102 Move X10, [X8+176]
	103 Add X10, X10, 8
	104 NotImplemented "Instruction LDUR not yet implemented."
	105 NotImplemented "Instruction CMP not yet implemented."
	106 Subtract X9, X9, 1
	107 Add X10, X10, 16
	108 Move X0, X19
	109 Move W2, W31
	110 Call 0x1C5D788
	111 NotImplemented "Instruction LDRSW not yet implemented."
	112 Add X8, X8, X9
	113 Add X0, X8, 312
	114 Move X8, [X0]
	115 Move X1, [X0+8]
	116 Move X0, X19
	117 NotImplemented "Instruction BLR not yet implemented."
	118 Compare X20, 0
	119 JumpIfNotEqual {130}
	120 Move X0, X21
	121 Move X1, X22
	122 Move X20, [X31+64]
	123 Move X19, [X31+72]
	124 Move X22, [X31+48]
	125 Move X21, [X31+56]
	126 Move X30, [X31+32]
	127 Move X23, [X31+40]
	128 Add X31, X31, 80
	129 Return X0
	130 Move X0, X20
	131 Call 0x1C17F18
	132 Call 0x1C17F20
	133 Call 0x1C17F20
	134 Move X21, X0
	135 NotImplemented "Instruction CMP not yet implemented."
	136 Move X0, X21
	137 Call 0x3EB2AD0
	138 Move X20, [X0]
	139 Call 0x3EB2AE0
	140 Move X21, X31
	141 Move X22, X31
	142 Compare X19, 0
	143 JumpIfNotEqual {97}
	144 Move X20, X31
	145 Move X21, X0
	146 Compare X19, 0
	147 JumpIfEqual {169}
	148 Move X8, [X19]
	149 Move X1, [X23]
	150 NotImplemented "Instruction LDRH not yet implemented."
	151 Compare X9, 0
	152 JumpIfEqual {159}
	153 Move X10, [X8+176]
	154 Add X10, X10, 8
	155 NotImplemented "Instruction LDUR not yet implemented."
	156 NotImplemented "Instruction CMP not yet implemented."
	157 Subtract X9, X9, 1
	158 Add X10, X10, 16
	159 Move X0, X19
	160 Move W2, W31
	161 Call 0x1C5D788
	162 NotImplemented "Instruction LDRSW not yet implemented."
	163 Add X8, X8, X9
	164 Add X0, X8, 312
	165 Move X8, [X0]
	166 Move X1, [X0+8]
	167 Move X0, X19
	168 NotImplemented "Instruction BLR not yet implemented."
	169 Compare X20, 0
	170 JumpIfNotEqual {173}
	171 Move X0, X21
	172 Call 0x1D2D690
	173 Move X0, X20
	174 Call 0x1C17F18
	175 Call 0x1991590

Method: System.Threading.Tasks.Task`1<System.String> ParseAndValidateConnectResponseAsync(System.IO.Stream stream, System.Net.WebSockets.ClientWebSocketOptions options, System.String expectedSecWebSocketAccept, System.Threading.CancellationToken cancellationToken)

Disassembly:
	0x036DB590 MOV X0, X21
	0x036DB594 LDP X9, X1, [X8 + 0x1A8]
	0x036DB598 BLR X9
	0x036DB59C TBZ X0, 0x0, 0x36DB690
	0x036DB5A0 LDR X8, [X21]
	0x036DB5A4 MOV X0, X21
	0x036DB5A8 LDP X9, X1, [X8 + 0x1D8]
	0x036DB5AC BLR X9
	0x036DB5B0 TBZ X0, 0x0, 0x36DB690
	0x036DB5B4 ADRP X24, 0xA1B000
	0x036DB5B8 LDR X24, [X24 + 0x128]
	0x036DB5BC CBZ X20, 0x36DB5C8
	0x036DB5C0 MOV X0, X20
	0x036DB5C4 BL 0x36D7FB0
	0x036DB5C8 LDR X0, [X24]
	0x036DB5CC ADRP X25, 0xA1A000
	0x036DB5D0 LDR W8, [X0 + 0xE0]
	0x036DB5D4 LDR X25, [X25 + 0x570]
	0x036DB5D8 CBNZ W8, 0x36DB5E4
	0x036DB5DC BL 0x1C16DFC
	0x036DB5E0 LDR X0, [X24]
	0x036DB5E4 LDR X8, [X25]
	0x036DB5E8 LDR X9, [X0 + 0xB8]
	0x036DB5EC LDR W10, [X8 + 0xE0]
	0x036DB5F0 LDR X24, [X9]
	0x036DB5F4 CBNZ W10, 0x36DB600
	0x036DB5F8 MOV X0, X8
	0x036DB5FC BL 0x1C16DFC
	0x036DB600 MOV X0, X19
	0x036DB604 MOV X1, X24
	0x036DB608 MOV X2, X31
	0x036DB60C BL 0x3394CE4
	0x036DB610 TBZ X0, 0x0, 0x36DB640
	0x036DB614 LDR X0, [X25]
	0x036DB618 LDR W8, [X0 + 0xE0]
	0x036DB61C CBNZ W8, 0x36DB628
	0x036DB620 BL 0x1C16DFC
	0x036DB624 LDR X0, [X25]
	0x036DB628 LDR X8, [X0 + 0xB8]
	0x036DB62C MOV X0, X19
	0x036DB630 MOV X2, X31
	0x036DB634 LDR X1, [X8]
	0x036DB638 BL 0x3394CF0
	0x036DB63C TBNZ X0, 0x0, 0x36DB80C
	0x036DB640 CMP W22, 0x1
	0x036DB644 B.LT 0x36DB754
	0x036DB648 CMP W23, 0x0
	0x036DB64C B.LE 0x36DB754
	0x036DB650 ADRP X8, 0xA41000
	0x036DB654 LDR X8, [X8 + 0xB60]
	0x036DB658 LDR X0, [X8]
	0x036DB65C LDR W8, [X0 + 0xE0]
	0x036DB660 CBNZ W8, 0x36DB668
	0x036DB664 BL 0x1C16DFC
	0x036DB668 MOV X0, X21
	0x036DB66C MOV X2, X20
	0x036DB670 MOV X3, X19
	0x036DB674 LDP X20, X19, [X31 + 0x40]
	0x036DB678 LDP X22, X21, [X31 + 0x30]
	0x036DB67C LDP X24, X23, [X31 + 0x20]
	0x036DB680 LDP X30, X25, [X31 + 0x10]
	0x036DB684 MOV W1, W31
	0x036DB688 ADD X31, X31, 0x50
	0x036DB68C B 0x36CFE18

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+96], X30
	003 Move [X31+112], X24
	004 Move [X31+120], X23
	005 Move [X31+128], X22
	006 Move [X31+136], X21
	007 Move [X31+144], X20
	008 Move [X31+152], X19
	009 Move X24, 0xD06000
	010 Move X23, 0xA1C000
	011 Move W8, [X24+2763]
	012 Move X23, [X23+304]
	013 Move X19, X4
	014 Move X20, X3
	015 Move X22, X2
	016 Move X21, X1
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {35}
	021 Move X0, 0xA1C000
	022 Move X0, [X0+312]
	023 Call 0x1C17CF4
	024 Move X0, 0xA66000
	025 Move X0, [X0+632]
	026 Call 0x1C17CF4
	027 Move X0, 0xA1C000
	028 Move X0, [X0+328]
	029 Call 0x1C17CF4
	030 Move X0, 0xA1C000
	031 Move X0, [X0+304]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X24+2763], W8
	035 Move X0, [X23]
	036 NotImplemented "Instruction MOVI not yet implemented."
	037 Move [X31+32], V0
	038 Move [X31+40], V0
	039 Move [X31+64], V0
	040 Move [X31+72], V0
	041 Move [X31], V0
	042 Move [X31+8], V0
	043 Move [X31+48], X20
	044 Move [X31+56], X22
	045 Move [X31+32], X21
	046 Move [X31+40], X19
	047 Move X19, 0xA1C000
	048 Move X21, 0xA66000
	049 Move X20, 0xA1C000
	050 Move W8, [X0+224]
	051 Move X19, [X19+312]
	052 Move X21, [X21+632]
	053 Move X20, [X20+328]
	054 Compare W8, 0
	055 JumpIfNotEqual {57}
	056 Call 0x1C17DFC
	057 Move X0, [X19]
	058 Add X8, X31, 0
	059 Or X19, X8, 15
	060 Move X8, X19
	061 Call AsyncTaskMethodBuilder`1<Object>.Create
	062 Move X2, [X21]
	063 Move TEMP, 0
	064 Not TEMP
	065 Move W8, TEMP
	066 Add X1, X31, 0
	067 Move X0, X19
	068 Move [X31], W8
	069 Call AsyncTaskMethodBuilder`1<Object>.Start, X0, X1
	070 Move X1, [X20]
	071 Move X0, X19
	072 Call AsyncTaskMethodBuilder`1<Object>.get_Task, X0
	073 Move X20, [X31+144]
	074 Move X19, [X31+152]
	075 Move X22, [X31+128]
	076 Move X21, [X31+136]
	077 Move X24, [X31+112]
	078 Move X23, [X31+120]
	079 Move X30, [X31+96]
	080 Add X31, X31, 160
	081 Return X0

Method: System.Void ValidateAndTrackHeader(System.String targetHeaderName, System.String targetHeaderValue, System.String foundHeaderName, System.String foundHeaderValue, ref System.Boolean foundHeader)

Disassembly:
	0x036DB690 LDR X8, [X21]
	0x036DB694 MOV X0, X21
	0x036DB698 LDP X9, X1, [X8 + 0x1A8]
	0x036DB69C BLR X9
	0x036DB6A0 ADRP X8, 0xA65000
	0x036DB6A4 ADRP X9, 0xA65000
	0x036DB6A8 LDR X8, [X8 + 0x310]
	0x036DB6AC LDR X9, [X9 + 0x318]
	0x036DB6B0 ANDS W31, W0, 0x1
	0x036DB6B4 CSEL X0, X9, X8, NE
	0x036DB6B8 BL 0x1C16D08
	0x036DB6BC MOV X19, X0
	0x036DB6C0 ADRP X0, 0xA20000
	0x036DB6C4 LDR X0, [X0 + 0x578]
	0x036DB6C8 BL 0x1C16D08
	0x036DB6CC BL 0x1C16F10
	0x036DB6D0 MOV X20, X0
	0x036DB6D4 ADRP X0, 0xA65000
	0x036DB6D8 LDR X0, [X0 + 0x320]
	0x036DB6DC BL 0x1C16D08
	0x036DB6E0 MOV X2, X0
	0x036DB6E4 MOV X0, X20
	0x036DB6E8 MOV X1, X19
	0x036DB6EC MOV X3, X31
	0x036DB6F0 BL 0x330E16C
	0x036DB6F4 ADRP X0, 0xA65000
	0x036DB6F8 LDR X0, [X0 + 0x328]
	0x036DB6FC BL 0x1C16D08
	0x036DB700 MOV X1, X0
	0x036DB704 MOV X0, X20
	0x036DB708 BL 0x1C16DEC
	0x036DB70C ADRP X0, 0xA1D000
	0x036DB710 LDR X0, [X0 + 0x528]
	0x036DB714 BL 0x1C16D08
	0x036DB718 BL 0x1C16F10
	0x036DB71C MOV X19, X0
	0x036DB720 ADRP X0, 0xA65000
	0x036DB724 LDR X0, [X0 + 0x320]
	0x036DB728 BL 0x1C16D08
	0x036DB72C MOV X1, X0
	0x036DB730 MOV X0, X19
	0x036DB734 MOV X2, X31
	0x036DB738 BL 0x330E100
	0x036DB73C ADRP X0, 0xA65000
	0x036DB740 LDR X0, [X0 + 0x328]
	0x036DB744 BL 0x1C16D08
	0x036DB748 MOV X1, X0
	0x036DB74C MOV X0, X19
	0x036DB750 BL 0x1C16DEC
	0x036DB754 ADRP X8, 0xA65000
	0x036DB758 ADRP X9, 0xA65000
	0x036DB75C LDR X8, [X8 + 0x330]
	0x036DB760 LDR X9, [X9 + 0x338]
	0x036DB764 CMP W23, 0x1
	0x036DB768 CSEL W20, W23, W22, LT
	0x036DB76C CSEL X0, X9, X8, LT
	0x036DB770 BL 0x1C16D08
	0x036DB774 STR W20, [X31 + 0x8]
	0x036DB778 ADRP X20, 0xA18000
	0x036DB77C LDR X20, [X20 + 0x758]
	0x036DB780 MOV X19, X0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, X2
	007 Move X19, X3
	008 Move X22, X1
	009 Move W2, 5
	010 Move X1, X8
	011 Move X3, X31
	012 Move X21, X4
	013 Move X20, X0
	014 Call String.Equals, X0, X1, X2
	015 Move W8, [X21]
	016 Compare W8, 0
	017 JumpIfEqual {33}
	018 Move TEMP, X0
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfNotEqual {48}
	022 Move X0, 0xA19000
	023 Move X0, [X0+2504]
	024 Call 0x1C17D08
	025 Call 0x1BBF55C
	026 Move X19, X0
	027 Move X0, 0xA63000
	028 Move X0, [X0+3376]
	029 Call 0x1C17D08
	030 Move X1, X19
	031 Move X2, X31
	032 Call SR.Format, X0, X1
	033 Move TEMP, X0
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfNotEqual {48}
	037 Move W2, 5
	038 Move X0, X22
	039 Move X1, X19
	040 Move X3, X31
	041 Call String.Equals, X0, X1, X2
	042 Move TEMP, X0
	043 And TEMP, TEMP, 1
	044 Compare TEMP, 1
	045 JumpIfNotEqual {54}
	046 Move W8, 1
	047 Move [X21], W8
	048 Move X20, [X31+32]
	049 Move X19, [X31+40]
	050 Move X22, [X31+16]
	051 Move X21, [X31+24]
	052 Move X30, [X31+48]
	053 Return 
	054 Move X0, 0xA66000
	055 Move X0, [X0+640]
	056 Call 0x1C17D08
	057 Move X1, X20
	058 Move X2, X19
	059 Move X3, X31
	060 Call SR.Format, X0, X1, X2
	061 Move X19, X0
	062 Move X0, 0xA44000
	063 Move X0, [X0+776]
	064 Call 0x1C17D08
	065 Call 0x1C17F10
	066 Move X1, X19
	067 Move X20, X0
	068 Call WebSocketException..ctor, X0, X1
	069 Move X0, 0xA66000
	070 Move X0, [X0+648]
	071 Call 0x1C17D08
	072 Move X1, X0
	073 Move X0, X20
	074 Call 0x1C17DEC

Method: System.Threading.Tasks.Task`1<System.String> ReadResponseHeaderLineAsync(System.IO.Stream stream, System.Threading.CancellationToken cancellationToken)

Disassembly:
	0x036DB78C ADD X1, X31, 0x8
	0x036DB790 BL 0x1C16E04
	0x036DB794 MOV X21, X0
	0x036DB798 MOV X0, X20
	0x036DB79C STR W31, [X31 + 0x4]
	0x036DB7A0 BL 0x1C16D08
	0x036DB7A4 ADD X1, X31, 0x4
	0x036DB7A8 BL 0x1C16E04
	0x036DB7AC MOV X20, X0
	0x036DB7B0 ADRP X0, 0xA65000
	0x036DB7B4 LDR X0, [X0 + 0x340]
	0x036DB7B8 BL 0x1C16D08
	0x036DB7BC MOV X1, X20
	0x036DB7C0 MOV X2, X31
	0x036DB7C4 BL 0x32094D4
	0x036DB7C8 MOV X20, X0
	0x036DB7CC ADRP X0, 0xA20000
	0x036DB7D0 LDR X0, [X0 + 0x760]
	0x036DB7D4 BL 0x1C16D08
	0x036DB7D8 BL 0x1C16F10
	0x036DB7DC MOV X1, X19
	0x036DB7E0 MOV X2, X21
	0x036DB7E4 MOV X3, X20
	0x036DB7E8 MOV X4, X31
	0x036DB7EC MOV X22, X0
	0x036DB7F0 BL 0x3312C8C
	0x036DB7F4 ADRP X0, 0xA65000
	0x036DB7F8 LDR X0, [X0 + 0x328]
	0x036DB7FC BL 0x1C16D08
	0x036DB800 MOV X1, X0
	0x036DB804 MOV X0, X22
	0x036DB808 BL 0x1C16DEC
	0x036DB80C STR X19, [X31 + 0x8]
	0x036DB810 ADRP X0, 0xA1A000
	0x036DB814 LDR X0, [X0 + 0x570]
	0x036DB818 BL 0x1C16D08
	0x036DB81C ADD X1, X31, 0x8
	0x036DB820 BL 0x1C16E04
	0x036DB824 MOV X19, X0
	0x036DB828 STR W31, [X31 + 0x4]
	0x036DB82C ADRP X0, 0xA18000
	0x036DB830 LDR X0, [X0 + 0x758]
	0x036DB834 BL 0x1C16D08
	0x036DB838 ADD X1, X31, 0x4
	0x036DB83C BL 0x1C16E04
	0x036DB840 MOV X20, X0
	0x036DB844 ADRP X0, 0xA65000
	0x036DB848 LDR X0, [X0 + 0x340]
	0x036DB84C BL 0x1C16D08
	0x036DB850 MOV X1, X20
	0x036DB854 MOV X2, X31
	0x036DB858 BL 0x32094D4
	0x036DB85C MOV X20, X0
	0x036DB860 ADRP X0, 0xA20000
	0x036DB864 LDR X0, [X0 + 0x760]
	0x036DB868 BL 0x1C16D08
	0x036DB86C BL 0x1C16F10
	0x036DB870 MOV X21, X0
	0x036DB874 ADRP X0, 0xA63000
	0x036DB878 LDR X0, [X0 + 0xC70]

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+96], X30
	003 Move [X31+112], X22
	004 Move [X31+120], X21
	005 Move [X31+128], X20
	006 Move [X31+136], X19
	007 Move X22, 0xD06000
	008 Move X21, 0xA1C000
	009 Move W8, [X22+2764]
	010 Move X21, [X21+304]
	011 Move X19, X1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {31}
	017 Move X0, 0xA1C000
	018 Move X0, [X0+312]
	019 Call 0x1C17CF4
	020 Move X0, 0xA66000
	021 Move X0, [X0+656]
	022 Call 0x1C17CF4
	023 Move X0, 0xA1C000
	024 Move X0, [X0+328]
	025 Call 0x1C17CF4
	026 Move X0, 0xA1C000
	027 Move X0, [X0+304]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X22+2764], W8
	031 Move X0, [X21]
	032 NotImplemented "Instruction MOVI not yet implemented."
	033 Move [X31+80], X31
	034 Move [X31+48], V0
	035 Move [X31+56], V0
	036 Move [X31+16], V0
	037 Move [X31+24], V0
	038 Move [X31], V0
	039 Move [X31+32], X20
	040 Move [X31+40], X19
	041 Move X19, 0xA1C000
	042 Move X21, 0xA66000
	043 Move X20, 0xA1C000
	044 Move W8, [X0+224]
	045 Move X19, [X19+312]
	046 Move X21, [X21+656]
	047 Move X20, [X20+328]
	048 Compare W8, 0
	049 JumpIfNotEqual {51}
	050 Call 0x1C17DFC
	051 Move X0, [X19]
	052 Add X8, X31, 0
	053 Or X19, X8, 15
	054 Move X8, X19
	055 Call AsyncTaskMethodBuilder`1<Object>.Create
	056 Move X2, [X21]
	057 Move TEMP, 0
	058 Not TEMP
	059 Move W8, TEMP
	060 Add X1, X31, 0
	061 Move X0, X19
	062 Move [X31], W8
	063 Call AsyncTaskMethodBuilder`1<Object>.Start, X0, X1
	064 Move X1, [X20]
	065 Move X0, X19
	066 Call AsyncTaskMethodBuilder`1<Object>.get_Task, X0
	067 Move X20, [X31+128]
	068 Move X19, [X31+136]
	069 Move X22, [X31+112]
	070 Move X21, [X31+120]
	071 Move X30, [X31+96]
	072 Add X31, X31, 144
	073 Return X0

Method: System.Void .ctor()

Disassembly:
	0x036DA9C0 CBZ X19, 0x36DAA14
	0x036DA9C4 ADRP X9, 0xA22000
	0x036DA9C8 LDR X9, [X9 + 0x788]
	0x036DA9CC LDR X8, [X19]
	0x036DA9D0 LDR X1, [X9]
	0x036DA9D4 LDRB W10, [X8 + 0x130]
	0x036DA9D8 LDRB W9, [X1 + 0x130]
	0x036DA9DC CMP W10, W9
	0x036DA9E0 B.CC 0x36DAA0C
	0x036DA9E4 LDR X8, [X8 + 0xC8]
	0x036DA9E8 ADD X8, X8, X9, 0x3, LSL
	0x036DA9EC LDUR X8, [X8 - 0x8]
	0x036DA9F0 CMP X8, X1
	0x036DA9F4 B.NE 0x36DAA0C
	0x036DA9F8 MOV X0, X19
	0x036DA9FC LDP X20, X19, [X31 + 0x10]
	0x036DAA00 MOV X1, X31
	0x036DAA04 LDR X30, [X31], #0x20
	0x036DAA08 B 0x36AAC20
	0x036DAA0C MOV X0, X19
	0x036DAA10 BL 0x1C171E0
	0x036DAA14 BL 0x1C16F20
	0x036DAA18 STR X30, [X31 - 0x20]!
	0x036DAA1C STP X20, X19, [X31 + 0x10]
	0x036DAA20 ADRP X20, 0xD06000
	0x036DAA24 LDRB W8, [X20 + 0xAD2]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xD07000
	006 Move X21, 0xA1C000
	007 Move W8, [X20+2765]
	008 Move X21, [X21+2640]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xA1C000
	015 Move X0, [X0+2640]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2765], W8
	019 Move X0, [X21]
	020 Call 0x1C17F10
	021 Move X1, X31
	022 Move X20, X0
	023 Call CancellationTokenSource..ctor, X0
	024 Move W8, 1
	025 Move [X19+16], X20
	026 Move [X19+24], W8
	027 Move X0, X19
	028 Move X20, [X31+16]
	029 Move X19, [X31+24]
	030 Move X1, X31
	031 Move X30, [X31+32]
	032 Move X21, [X31+40]
	033 Call Object..ctor, X0
	034 Return 

Method: System.Void .cctor()

Disassembly:
	0x036DB87C BL 0x1C16D08
	0x036DB880 MOV X1, X0
	0x036DB884 MOV X0, X21
	0x036DB888 MOV X2, X19
	0x036DB88C MOV X3, X20
	0x036DB890 MOV X4, X31
	0x036DB894 BL 0x3312C8C
	0x036DB898 ADRP X0, 0xA65000
	0x036DB89C LDR X0, [X0 + 0x328]
	0x036DB8A0 BL 0x1C16D08
	0x036DB8A4 MOV X1, X0
	0x036DB8A8 MOV X0, X21
	0x036DB8AC BL 0x1C16DEC
	0x036DB8B0 MOV X3, X31
	0x036DB8B4 B 0x3662038
	0x036DB8B8 STR X30, [X31 - 0x30]!
	0x036DB8BC STP X22, X21, [X31 + 0x10]
	0x036DB8C0 STP X20, X19, [X31 + 0x20]
	0x036DB8C4 ADRP X21, 0xD05000
	0x036DB8C8 ADRP X22, 0xA1B000
	0x036DB8CC LDRB W8, [X21 + 0xAD4]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xD06000
	005 Move X19, 0xA66000
	006 Move W8, [X20+2766]
	007 Move X19, [X19+424]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xA66000
	013 Move X0, [X0+424]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+2766], W8
	017 Move W0, 0x6FAF
	018 Move X1, X31
	019 Call Encoding.GetEncoding, X0
	020 Move X8, [X19]
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move X8, [X8+184]
	024 Move [X8], X0
	025 Move X30, [X31+32]
	026 Return 

