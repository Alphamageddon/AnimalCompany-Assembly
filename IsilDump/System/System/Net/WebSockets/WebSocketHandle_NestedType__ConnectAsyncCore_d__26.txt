Type: System.Net.WebSockets.WebSocketHandle/<ConnectAsyncCore>d__26

Method: System.Void MoveNext()

Disassembly:
	0x036DBA9C ADD X1, X31, 0x60
	0x036DBAA0 MOV X2, X19
	0x036DBAA4 BL 0x1FAFAC0
	0x036DBAA8 B 0x36DBE64
	0x036DBAAC LDR V0, [X19 + 0x4]
	0x036DBAB0 MOVN W24, 0x0
	0x036DBAB4 STR V0, [X31 + 0x6]
	0x036DBAB8 STP X31, X31, [X19 + 0x40]
	0x036DBABC STR W24, [X19]
	0x036DBAC0 ADRP X8, 0xA65000
	0x036DBAC4 LDR X8, [X8 + 0x360]
	0x036DBAC8 ADD X0, X31, 0x60
	0x036DBACC LDR X1, [X8]
	0x036DBAD0 BL 0x2998BB0
	0x036DBAD4 MOV X9, X0
	0x036DBAD8 MOV W10, W31
	0x036DBADC MOV X8, X31
	0x036DBAE0 STR X0, [X19 + 0x50]
	0x036DBAE4 STR W31, [X19 + 0x58]
	0x036DBAE8 CBZ X9, 0x36DC288
	0x036DBAEC LDR W11, [X9 + 0x18]
	0x036DBAF0 CMP W10, W11
	0x036DBAF4 B.GE 0x36DBE9C
	0x036DBAF8 B.CS 0x36DBEF8
	0x036DBAFC ADD X8, X9, W10, 0x3, SXTW
	0x036DBB00 LDR X20, [X8 + 0x20]
	0x036DBB04 CBZ X20, 0x36DBE98
	0x036DBB08 MOV X0, X20
	0x036DBB0C MOV X1, X31
	0x036DBB10 BL 0x366D604
	0x036DBB14 ADRP X8, 0xA21000
	0x036DBB18 LDR X8, [X8 + 0x788]
	0x036DBB1C MOV W21, W0
	0x036DBB20 LDR X0, [X8]
	0x036DBB24 BL 0x1C16F10
	0x036DBB28 MOV X22, X0
	0x036DBB2C MOVZ W2, 0x1
	0x036DBB30 MOVZ W3, 0x6
	0x036DBB34 MOV W1, W21
	0x036DBB38 MOV X4, X31
	0x036DBB3C BL 0x36AC13C
	0x036DBB40 CMP W24, 0x1
	0x036DBB44 STR X22, [X19 + 0x60]
	0x036DBB48 B.NE 0x36DBBAC
	0x036DBB4C LDUR V0, [X19 + 0x98]
	0x036DBB50 MOVN W24, 0x0
	0x036DBB54 STR V0, [X31 + 0x4]
	0x036DBB58 STP X31, X31, [X19 + 0x98]
	0x036DBB5C STR W24, [X19]
	0x036DBB60 ADD X0, X31, 0x40
	0x036DBB64 MOV X1, X31
	0x036DBB68 BL 0x32C40F0
	0x036DBB6C MOV X20, X31
	0x036DBB70 MOVZ W21, 0x15
	0x036DBB74 TBZ X24, 0x1F, 0x36DBB84
	0x036DBB78 ADD X0, X19, 0x80
	0x036DBB7C MOV X1, X31
	0x036DBB80 BL 0x33DF6F0
	0x036DBB84 CBNZ X20, 0x36DBE88
	0x036DBB88 CMP W21, 0x15
	0x036DBB8C B.EQ 0x36DBB94
	0x036DBB90 CBNZ W21, 0x36DBDC0
	0x036DBB94 MOV X20, X31
	0x036DBB98 STP X31, X31, [X19 + 0x80]
	0x036DBB9C STR X31, [X19 + 0x90]
	0x036DBBA0 MOVZ W21, 0x16
	0x036DBBA4 TBZ X24, 0x1F, 0x36DBDD4
	0x036DBBA8 B 0x36DBDC8
	0x036DBBAC ADRP X27, 0xA65000
	0x036DBBB0 LDR X27, [X27 + 0x298]
	0x036DBBB4 LDR X8, [X27]
	0x036DBBB8 LDR W9, [X8 + 0xE0]
	0x036DBBBC CBNZ W9, 0x36DBBCC
	0x036DBBC0 MOV X0, X8
	0x036DBBC4 BL 0x1C16DFC
	0x036DBBC8 LDR X8, [X27]
	0x036DBBCC LDR X9, [X8 + 0xB8]
	0x036DBBD0 LDR X21, [X9 + 0x10]
	0x036DBBD4 CBNZ X21, 0x36DBC2C
	0x036DBBD8 LDR W9, [X8 + 0xE0]
	0x036DBBDC CBNZ W9, 0x36DBBEC
	0x036DBBE0 MOV X0, X8
	0x036DBBE4 BL 0x1C16DFC
	0x036DBBE8 LDR X8, [X27]
	0x036DBBEC ADRP X9, 0xA42000
	0x036DBBF0 LDR X8, [X8 + 0xB8]
	0x036DBBF4 LDR X9, [X9 + 0xE48]
	0x036DBBF8 LDR X22, [X8]
	0x036DBBFC LDR X0, [X9]
	0x036DBC00 BL 0x1C16F10
	0x036DBC04 ADRP X8, 0xA65000
	0x036DBC08 LDR X8, [X8 + 0x378]
	0x036DBC0C MOV X21, X0
	0x036DBC10 LDR X2, [X8]
	0x036DBC14 MOV X1, X22
	0x036DBC18 MOV X3, X31
	0x036DBC1C BL 0x2A6B948
	0x036DBC20 LDR X8, [X27]
	0x036DBC24 LDR X8, [X8 + 0xB8]
	0x036DBC28 STR X21, [X8 + 0x10]
	0x036DBC2C LDR X0, [X25]
	0x036DBC30 LDR X22, [X19 + 0x60]
	0x036DBC34 LDR W8, [X0 + 0xE0]
	0x036DBC38 CBNZ W8, 0x36DBC40
	0x036DBC3C BL 0x1C16DFC
	0x036DBC40 ADD X0, X19, 0x28
	0x036DBC44 ADD X8, X31, 0x8
	0x036DBC48 MOV X1, X21
	0x036DBC4C MOV X2, X22
	0x036DBC50 MOV X3, X31
	0x036DBC54 BL 0x33DD5C8
	0x036DBC58 LDUR V0, [X31 + 0x8]
	0x036DBC5C LDR X8, [X31 + 0x18]
	0x036DBC60 STR V0, [X31 + 0x2]
	0x036DBC64 STR X8, [X31 + 0x30]
	0x036DBC68 STR X8, [X19 + 0x78]
	0x036DBC6C STUR V0, [X19 + 0x68]
	0x036DBC70 CBZ X23, 0x36DBF00
	0x036DBC74 LDR X0, [X23 + 0x10]
	0x036DBC78 CBZ X0, 0x36DBF04
	0x036DBC7C MOV X1, X31
	0x036DBC80 BL 0x33DFA08
	0x036DBC84 LDR X8, [X27]
	0x036DBC88 STR X0, [X31 + 0x58]
	0x036DBC8C LDR W9, [X8 + 0xE0]
	0x036DBC90 CBNZ W9, 0x36DBCA0
	0x036DBC94 MOV X0, X8
	0x036DBC98 BL 0x1C16DFC
	0x036DBC9C LDR X8, [X27]
	0x036DBCA0 LDR X9, [X8 + 0xB8]
	0x036DBCA4 LDR X21, [X9 + 0x18]
	0x036DBCA8 CBNZ X21, 0x36DBD00
	0x036DBCAC LDR W9, [X8 + 0xE0]
	0x036DBCB0 CBNZ W9, 0x36DBCC0
	0x036DBCB4 MOV X0, X8
	0x036DBCB8 BL 0x1C16DFC
	0x036DBCBC LDR X8, [X27]
	0x036DBCC0 ADRP X9, 0xA42000
	0x036DBCC4 LDR X8, [X8 + 0xB8]
	0x036DBCC8 LDR X9, [X9 + 0xE48]
	0x036DBCCC LDR X22, [X8]
	0x036DBCD0 LDR X0, [X9]
	0x036DBCD4 BL 0x1C16F10
	0x036DBCD8 ADRP X8, 0xA65000
	0x036DBCDC LDR X8, [X8 + 0x380]
	0x036DBCE0 MOV X21, X0
	0x036DBCE4 LDR X2, [X8]
	0x036DBCE8 MOV X1, X22
	0x036DBCEC MOV X3, X31
	0x036DBCF0 BL 0x2A6B948
	0x036DBCF4 LDR X8, [X27]
	0x036DBCF8 LDR X8, [X8 + 0xB8]
	0x036DBCFC STR X21, [X8 + 0x18]
	0x036DBD00 LDR X0, [X25]
	0x036DBD04 LDR X22, [X19 + 0x60]
	0x036DBD08 LDR W8, [X0 + 0xE0]
	0x036DBD0C CBNZ W8, 0x36DBD14
	0x036DBD10 BL 0x1C16DFC
	0x036DBD14 ADD X8, X31, 0x8
	0x036DBD18 ADD X0, X31, 0x58
	0x036DBD1C MOV X1, X21
	0x036DBD20 MOV X2, X22
	0x036DBD24 MOV X3, X31
	0x036DBD28 BL 0x33DD5C8
	0x036DBD2C LDUR V0, [X31 + 0x8]
	0x036DBD30 LDR X8, [X31 + 0x18]
	0x036DBD34 STR V0, [X31 + 0x2]
	0x036DBD38 STR X8, [X31 + 0x30]
	0x036DBD3C LDR X0, [X19 + 0x60]
	0x036DBD40 STR X8, [X19 + 0x90]
	0x036DBD44 STR V0, [X19 + 0x8]
	0x036DBD48 CBZ X0, 0x36DBF08
	0x036DBD4C LDR W2, [X19 + 0x38]
	0x036DBD50 MOV X1, X20
	0x036DBD54 MOV X3, X31
	0x036DBD58 BL 0x36BDD20
	0x036DBD5C CBZ X0, 0x36DBF0C
	0x036DBD60 MOV W1, W31
	0x036DBD64 MOV X2, X31
	0x036DBD68 BL 0x33ED3A0
	0x036DBD6C STP X0, X1, [X31 + 0x40]
	0x036DBD70 ADD X0, X31, 0x40
	0x036DBD74 MOV X1, X31
	0x036DBD78 BL 0x32C40D4
	0x036DBD7C TBNZ X0, 0x0, 0x36DBB60
	0x036DBD80 MOVZ W8, 0x1
	0x036DBD84 STR W8, [X19]
	0x036DBD88 LDR V0, [X31 + 0x4]
	0x036DBD8C STUR V0, [X19 + 0x98]
	0x036DBD90 LDR X0, [X26]
	0x036DBD94 LDR W8, [X0 + 0xE0]
	0x036DBD98 CBNZ W8, 0x36DBDA0
	0x036DBD9C BL 0x1C16DFC
	0x036DBDA0 ADRP X8, 0xA65000
	0x036DBDA4 LDR X8, [X8 + 0x350]
	0x036DBDA8 ADD X0, X19, 0x8
	0x036DBDAC LDR X3, [X8]
	0x036DBDB0 ADD X1, X31, 0x40
	0x036DBDB4 MOV X2, X19
	0x036DBDB8 BL 0x1FC7A58
	0x036DBDBC B 0x36DBE64
	0x036DBDC0 MOV X20, X31
	0x036DBDC4 TBZ X24, 0x1F, 0x36DBDD4
	0x036DBDC8 ADD X0, X19, 0x68
	0x036DBDCC MOV X1, X31
	0x036DBDD0 BL 0x33DF6F0
	0x036DBDD4 CBNZ X20, 0x36DBE80
	0x036DBDD8 CMP W21, 0x16
	0x036DBDDC B.EQ 0x36DBDE4
	0x036DBDE0 CBNZ W21, 0x36DBE64
	0x036DBDE4 STP X31, X31, [X19 + 0x68]
	0x036DBDE8 STR X31, [X19 + 0x78]
	0x036DBDEC LDR X0, [X25]
	0x036DBDF0 LDR W8, [X0 + 0xE0]
	0x036DBDF4 CBNZ W8, 0x36DBDFC
	0x036DBDF8 BL 0x1C16DFC
	0x036DBDFC ADD X0, X19, 0x28
	0x036DBE00 MOV X1, X31
	0x036DBE04 BL 0x33DDC30
	0x036DBE08 CBZ X23, 0x36DBE90
	0x036DBE0C LDR X0, [X23 + 0x10]
	0x036DBE10 CBZ X0, 0x36DBE94
	0x036DBE14 MOV X1, X31
	0x036DBE18 BL 0x33DFA08
	0x036DBE1C STR X0, [X31 + 0x58]
	0x036DBE20 ADD X0, X31, 0x58
	0x036DBE24 MOV X1, X31
	0x036DBE28 BL 0x33DDC30
	0x036DBE2C MOVN W8, 0x1
	0x036DBE30 STR W8, [X19]
	0x036DBE34 LDR X0, [X26]
	0x036DBE38 ADRP X21, 0xA64000
	0x036DBE3C LDR X20, [X19 + 0x60]
	0x036DBE40 ADD X19, X19, 0x8
	0x036DBE44 LDR W8, [X0 + 0xE0]
	0x036DBE48 LDR X21, [X21 + 0x8E0]
	0x036DBE4C CBNZ W8, 0x36DBE54
	0x036DBE50 BL 0x1C16DFC
	0x036DBE54 LDR X2, [X21]
	0x036DBE58 MOV X0, X19
	0x036DBE5C MOV X1, X20
	0x036DBE60 BL 0x26322B0
	0x036DBE64 LDP X20, X19, [X31 + 0xB0]
	0x036DBE68 LDP X22, X21, [X31 + 0xA0]
	0x036DBE6C LDP X24, X23, [X31 + 0x90]
	0x036DBE70 LDP X26, X25, [X31 + 0x80]
	0x036DBE74 LDP X30, X27, [X31 + 0x70]
	0x036DBE78 ADD X31, X31, 0xC0
	0x036DBE7C RET
	0x036DBE80 MOV X0, X20
	0x036DBE84 BL 0x1C16F18
	0x036DBE88 MOV X0, X20
	0x036DBE8C BL 0x1C16F18
	0x036DBE90 BL 0x1C16F20
	0x036DBE94 BL 0x1C16F20
	0x036DBE98 BL 0x1C16F20
	0x036DBE9C STR X31, [X19 + 0x50]
	0x036DBEA0 CBZ X8, 0x36DBEB0
	0x036DBEA4 MOV X0, X8
	0x036DBEA8 MOV X1, X31
	0x036DBEAC BL 0x32C2440
	0x036DBEB0 ADRP X0, 0xA43000
	0x036DBEB4 LDR X0, [X0 + 0x308]
	0x036DBEB8 BL 0x1C16D08
	0x036DBEBC BL 0x1C16F10
	0x036DBEC0 MOV X20, X0
	0x036DBEC4 ADRP X0, 0xA62000
	0x036DBEC8 LDR X0, [X0 + 0xD30]
	0x036DBECC BL 0x1C16D08
	0x036DBED0 MOV X1, X0
	0x036DBED4 MOV X0, X20
	0x036DBED8 MOV X2, X31
	0x036DBEDC BL 0x3661FBC
	0x036DBEE0 ADRP X0, 0xA65000
	0x036DBEE4 LDR X0, [X0 + 0x388]
	0x036DBEE8 BL 0x1C16D08
	0x036DBEEC MOV X1, X0
	0x036DBEF0 MOV X0, X20
	0x036DBEF4 BL 0x1C16DEC
	0x036DBEF8 BL 0x1C16F28
	0x036DBEFC BL 0x1C16F20
	0x036DBF00 BL 0x1C16F20
	0x036DBF04 BL 0x1C16F20
	0x036DBF08 BL 0x1C16F20
	0x036DBF0C BL 0x1C16F20
	0x036DBF10 B 0x36DBF9C
	0x036DBF14 B 0x36DC210
	0x036DBF18 B 0x36DBF9C
	0x036DBF1C B 0x36DBF9C
	0x036DBF20 B 0x36DC210
	0x036DBF24 B 0x36DC210
	0x036DBF28 B 0x36DC2D0
	0x036DBF2C B 0x36DBF9C
	0x036DBF30 B 0x36DC210
	0x036DBF34 B 0x36DC2D0
	0x036DBF38 B 0x36DBF90
	0x036DBF3C B 0x36DBF90
	0x036DBF40 B 0x36DBF90
	0x036DBF44 B 0x36DBF9C
	0x036DBF48 B 0x36DBF9C
	0x036DBF4C B 0x36DBF9C
	0x036DBF50 B 0x36DBF9C
	0x036DBF54 B 0x36DC210
	0x036DBF58 B 0x36DC2D0
	0x036DBF5C B 0x36DC2D0
	0x036DBF60 MOV X21, X1
	0x036DBF64 MOV X20, X0
	0x036DBF68 B 0x36DC2D8
	0x036DBF6C B 0x36DC2D0
	0x036DBF70 B 0x36DC2D0
	0x036DBF74 B 0x36DC2D0
	0x036DBF78 B 0x36DBF90
	0x036DBF7C B 0x36DC2D0
	0x036DBF80 B 0x36DC2D0
	0x036DBF84 B 0x36DC210
	0x036DBF88 B 0x36DC210
	0x036DBF8C B 0x36DC210
	0x036DBF90 MOV X20, X0
	0x036DBF94 B 0x36DBFB8
	0x036DBF98 B 0x36DC210
	0x036DBF9C MOV X20, X0
	0x036DBFA0 MOV W21, W1
	0x036DBFA4 B 0x36DC198
	0x036DBFA8 B 0x36DC210
	0x036DBFAC B 0x36DC2D0
	0x036DBFB0 MOV X20, X0
	0x036DBFB4 MOVZ W24, 0x1
	0x036DBFB8 MOV W21, W1
	0x036DBFBC CMP W1, 0x1
	0x036DBFC0 B.NE 0x36DC14C
	0x036DBFC4 MOV X0, X20
	0x036DBFC8 BL 0x3EB1AD0
	0x036DBFCC MOV X20, X0
	0x036DBFD0 ADRP X0, 0xA41000
	0x036DBFD4 LDR X0, [X0 + 0x4B8]
	0x036DBFD8 BL 0x1C16D08
	0x036DBFDC LDR X8, [X20]
	0x036DBFE0 LDR X1, [X8]
	0x036DBFE4 BL 0x1C17270
	0x036DBFE8 TBZ X0, 0x0, 0x36DC088
	0x036DBFEC LDR X20, [X20]
	0x036DBFF0 BL 0x3EB1AE0
	0x036DBFF4 ADRP X0, 0xA20000
	0x036DBFF8 LDR X0, [X0 + 0x7D8]
	0x036DBFFC BL 0x1C16D08
	0x036DC000 LDR W8, [X0 + 0xE0]
	0x036DC004 CBNZ W8, 0x36DC00C
	0x036DC008 BL 0x1C16DFC
	0x036DC00C ADD X0, X19, 0x28
	0x036DC010 MOV X1, X31
	0x036DC014 BL 0x33DD2B0
	0x036DC018 TBZ X0, 0x0, 0x36DC024
	0x036DC01C LDR X0, [X19 + 0x28]
	0x036DC020 B 0x36DC038
	0x036DC024 CBZ X23, 0x36DC0AC
	0x036DC028 LDR X0, [X23 + 0x10]
	0x036DC02C CBZ X0, 0x36DC0B0
	0x036DC030 MOV X1, X31
	0x036DC034 BL 0x33DFA08
	0x036DC038 STR X0, [X31 + 0x38]
	0x036DC03C ADRP X0, 0xA1F000
	0x036DC040 LDR X0, [X0 + 0x7D8]
	0x036DC044 BL 0x1C16D08
	0x036DC048 LDR W8, [X0 + 0xE0]
	0x036DC04C CBNZ W8, 0x36DC054
	0x036DC050 BL 0x1C16DFC
	0x036DC054 ADD X0, X31, 0x38
	0x036DC058 MOV X1, X31
	0x036DC05C BL 0x33DD2B0
	0x036DC060 TBZ X0, 0x0, 0x36DBB6C
	0x036DC064 ADRP X0, 0xA1F000
	0x036DC068 LDR X0, [X0 + 0x8A8]
	0x036DC06C BL 0x1C16D08
	0x036DC070 BL 0x1C16F10
	0x036DC074 MOV X21, X0
	0x036DC078 MOV X1, X31
	0x036DC07C BL 0x338C880
	0x036DC080 CBNZ X21, 0x36DC0B4
	0x036DC084 BL 0x1C16F20
	0x036DC088 MOVZ W0, 0x8
	0x036DC08C BL 0x3EB1AF0
	0x036DC090 LDR X8, [X20]
	0x036DC094 STR X8, [X0]
	0x036DC098 ADRP X1, 0x7D8000
	0x036DC09C ADD X1, X1, 0xE58
	0x036DC0A0 MOV X2, X31
	0x036DC0A4 BL 0x3EB1B00
	0x036DC0A8 B 0x36DC370
	0x036DC0AC BL 0x1C16F20
	0x036DC0B0 BL 0x1C16F20
	0x036DC0B4 LDR X8, [X21]
	0x036DC0B8 LDP X9, X1, [X8 + 0x188]
	0x036DC0BC MOV X0, X21
	0x036DC0C0 BLR X9
	0x036DC0C4 LDR X27, [X31 + 0x38]
	0x036DC0C8 MOV X22, X0
	0x036DC0CC ADRP X0, 0xA1F000
	0x036DC0D0 LDR X0, [X0 + 0x8A8]
	0x036DC0D4 BL 0x1C16D08
	0x036DC0D8 BL 0x1C16F10
	0x036DC0DC MOV X21, X0
	0x036DC0E0 MOV X1, X22
	0x036DC0E4 MOV X2, X20
	0x036DC0E8 MOV X3, X27
	0x036DC0EC MOV X4, X31
	0x036DC0F0 BL 0x338CA40
	0x036DC0F4 ADRP X0, 0xA64000
	0x036DC0F8 LDR X0, [X0 + 0x388]
	0x036DC0FC BL 0x1C16D08
	0x036DC100 MOV X1, X0
	0x036DC104 MOV X0, X21
	0x036DC108 BL 0x1C16DEC
	0x036DC10C B 0x36DC134
	0x036DC110 B 0x36DC134
	0x036DC114 B 0x36DC134
	0x036DC118 B 0x36DC134
	0x036DC11C B 0x36DC134
	0x036DC120 B 0x36DC134
	0x036DC124 B 0x36DC134
	0x036DC128 B 0x36DC134
	0x036DC12C B 0x36DC134
	0x036DC130 B 0x36DC134
	0x036DC134 MOV X20, X0
	0x036DC138 MOV W21, W1
	0x036DC13C B 0x36DC14C
	0x036DC140 MOV X21, X1
	0x036DC144 MOV X20, X0
	0x036DC148 BL 0x3EB1AE0
	0x036DC14C MOVZ W8, 0x1
	0x036DC150 CMP W21, W8
	0x036DC154 B.NE 0x36DC17C
	0x036DC158 MOV X0, X20
	0x036DC15C BL 0x3EB1AD0
	0x036DC160 LDR X8, [X0]
	0x036DC164 STR X8, [X31]
	0x036DC168 BL 0x3EB1AE0
	0x036DC16C LDR X20, [X31]
	0x036DC170 MOV W21, W31
	0x036DC174 TBZ X24, 0x1F, 0x36DBB84
	0x036DC178 B 0x36DBB78
	0x036DC17C STR X31, [X31]
	0x036DC180 TBZ X24, 0x1F, 0x36DC190
	0x036DC184 ADD X0, X19, 0x80
	0x036DC188 MOV X1, X31
	0x036DC18C BL 0x33DF6F0
	0x036DC190 LDR X8, [X31]
	0x036DC194 CBNZ X8, 0x36DC1E8
	0x036DC198 CMP W21, 0x1
	0x036DC19C B.NE 0x36DC1C4
	0x036DC1A0 MOV X0, X20
	0x036DC1A4 BL 0x3EB1AD0
	0x036DC1A8 LDR X8, [X0]
	0x036DC1AC STR X8, [X31]
	0x036DC1B0 BL 0x3EB1AE0
	0x036DC1B4 LDR X20, [X31]
	0x036DC1B8 MOV W21, W31
	0x036DC1BC TBZ X24, 0x1F, 0x36DBDD4
	0x036DC1C0 B 0x36DBDC8
	0x036DC1C4 STR X31, [X31]
	0x036DC1C8 TBZ X24, 0x1F, 0x36DC1D8
	0x036DC1CC ADD X0, X19, 0x68
	0x036DC1D0 MOV X1, X31
	0x036DC1D4 BL 0x33DF6F0
	0x036DC1D8 LDR X8, [X31]
	0x036DC1DC CBZ X8, 0x36DC218
	0x036DC1E0 LDR X0, [X31]
	0x036DC1E4 BL 0x1C16F18
	0x036DC1E8 LDR X0, [X31]
	0x036DC1EC BL 0x1C16F18
	0x036DC1F0 MOV X20, X0
	0x036DC1F4 MOV W21, W1
	0x036DC1F8 TBZ X24, 0x1F, 0x36DC190
	0x036DC1FC B 0x36DC184
	0x036DC200 MOV X20, X0
	0x036DC204 MOV W21, W1
	0x036DC208 TBZ X24, 0x1F, 0x36DC1D8
	0x036DC20C B 0x36DC1CC
	0x036DC210 MOV X20, X0
	0x036DC214 MOV W21, W1
	0x036DC218 CMP W21, 0x1
	0x036DC21C B.NE 0x36DC2D8
	0x036DC220 MOV X0, X20
	0x036DC224 BL 0x3EB1AD0
	0x036DC228 MOV X20, X0
	0x036DC22C ADRP X0, 0xA17000
	0x036DC230 LDR X0, [X0 + 0x7D0]
	0x036DC234 BL 0x1C16D08
	0x036DC238 LDR X8, [X20]
	0x036DC23C LDR X1, [X8]
	0x036DC240 BL 0x1C17270
	0x036DC244 TBZ X0, 0x0, 0x36DC28C
	0x036DC248 LDR X20, [X20]
	0x036DC24C BL 0x3EB1AE0
	0x036DC250 LDR X0, [X19 + 0x60]
	0x036DC254 CBZ X0, 0x36DC2B0
	0x036DC258 MOV X1, X31
	0x036DC25C BL 0x36AAC20
	0x036DC260 MOV X0, X20
	0x036DC264 MOV X1, X31
	0x036DC268 BL 0x32C2380
	0x036DC26C LDR W10, [X19 + 0x58]
	0x036DC270 LDR X9, [X19 + 0x50]
	0x036DC274 MOV X8, X0
	0x036DC278 STR X31, [X19 + 0x60]
	0x036DC27C ADD W10, W10, 0x1
	0x036DC280 STR W10, [X19 + 0x58]
	0x036DC284 CBNZ X9, 0x36DBAEC
	0x036DC288 BL 0x1C16F20
	0x036DC28C MOVZ W0, 0x8
	0x036DC290 BL 0x3EB1AF0
	0x036DC294 LDR X8, [X20]
	0x036DC298 STR X8, [X0]
	0x036DC29C ADRP X1, 0x7D8000
	0x036DC2A0 ADD X1, X1, 0xE58
	0x036DC2A4 MOV X2, X31
	0x036DC2A8 BL 0x3EB1B00
	0x036DC2AC B 0x36DC370
	0x036DC2B0 BL 0x1C16F20
	0x036DC2B4 B 0x36DC2D0
	0x036DC2B8 B 0x36DC2D0
	0x036DC2BC B 0x36DC2D0
	0x036DC2C0 MOV X21, X1
	0x036DC2C4 MOV X20, X0
	0x036DC2C8 BL 0x3EB1AE0
	0x036DC2CC B 0x36DC2D8
	0x036DC2D0 MOV X20, X0
	0x036DC2D4 MOV W21, W1
	0x036DC2D8 CMP W21, 0x1
	0x036DC2DC B.NE 0x36DC378
	0x036DC2E0 MOV X0, X20
	0x036DC2E4 BL 0x3EB1AD0
	0x036DC2E8 MOV X20, X0
	0x036DC2EC ADRP X0, 0xA17000
	0x036DC2F0 LDR X0, [X0 + 0x7D0]
	0x036DC2F4 BL 0x1C16D08
	0x036DC2F8 LDR X8, [X20]
	0x036DC2FC LDR X1, [X8]
	0x036DC300 BL 0x1C17270
	0x036DC304 TBZ X0, 0x0, 0x36DC350
	0x036DC308 LDR X20, [X20]
	0x036DC30C BL 0x3EB1AE0
	0x036DC310 MOVN W8, 0x1
	0x036DC314 STR W8, [X19], #0x8
	0x036DC318 ADRP X0, 0xA63000
	0x036DC31C LDR X0, [X0 + 0x8E8]
	0x036DC320 BL 0x1C16D08
	0x036DC324 LDR W8, [X0 + 0xE0]
	0x036DC328 CBNZ W8, 0x36DC330
	0x036DC32C BL 0x1C16DFC
	0x036DC330 ADRP X0, 0xA63000
	0x036DC334 LDR X0, [X0 + 0x8D8]
	0x036DC338 BL 0x1C16D08
	0x036DC33C MOV X2, X0
	0x036DC340 MOV X0, X19
	0x036DC344 MOV X1, X20
	0x036DC348 BL 0x26324C8
	0x036DC34C B 0x36DBE64
	0x036DC350 MOVZ W0, 0x8
	0x036DC354 BL 0x3EB1AF0
	0x036DC358 LDR X8, [X20]
	0x036DC35C STR X8, [X0]
	0x036DC360 ADRP X1, 0x7D8000
	0x036DC364 ADD X1, X1, 0xE58
	0x036DC368 MOV X2, X31
	0x036DC36C BL 0x3EB1B00
	0x036DC370 MOV X20, X0
	0x036DC374 BL 0x3EB1AE0
	0x036DC378 MOV X0, X20
	0x036DC37C BL 0x1D2C690
	0x036DC380 BL 0x1990590
	0x036DC384 STR X30, [X31 - 0x30]!
	0x036DC388 STP X22, X21, [X31 + 0x10]
	0x036DC38C STP X20, X19, [X31 + 0x20]
	0x036DC390 ADRP X22, 0xD04000
	0x036DC394 ADRP X21, 0xA63000
	0x036DC398 LDRB W8, [X22 + 0xAD6]
	0x036DC39C LDR X21, [X21 + 0x8E8]
	0x036DC3A0 MOV X19, X1
	0x036DC3A4 MOV X20, X0
	0x036DC3A8 TBNZ X8, 0x0, 0x36DC3CC
	0x036DC3AC ADRP X0, 0xA64000
	0x036DC3B0 LDR X0, [X0 + 0x390]
	0x036DC3B4 BL 0x1C16CF4
	0x036DC3B8 ADRP X0, 0xA63000
	0x036DC3BC LDR X0, [X0 + 0x8E8]
	0x036DC3C0 BL 0x1C16CF4
	0x036DC3C4 MOVZ W8, 0x1
	0x036DC3C8 STRB W8, [X22 + 0xAD6]
	0x036DC3CC LDR X0, [X21]
	0x036DC3D0 ADRP X21, 0xA64000
	0x036DC3D4 LDR W8, [X0 + 0xE0]
	0x036DC3D8 LDR X21, [X21 + 0x390]
	0x036DC3DC CBNZ W8, 0x36DC3E4
	0x036DC3E0 BL 0x1C16DFC
	0x036DC3E4 LDR X2, [X21]
	0x036DC3E8 ADD X0, X20, 0x8
	0x036DC3EC MOV X1, X19
	0x036DC3F0 LDP X20, X19, [X31 + 0x20]
	0x036DC3F4 LDP X22, X21, [X31 + 0x10]
	0x036DC3F8 LDR X30, [X31], #0x30
	0x036DC3FC B 0x2632228
	0x036DC400 MOV X1, X31
	0x036DC404 B 0x33BDD8C
	0x036DC408 LDR X8, [X0 + 0x10]
	0x036DC40C MOVZ W2, 0x5
	0x036DC410 MOV X0, X1
	0x036DC414 MOV X3, X31
	0x036DC418 MOV X1, X8
	0x036DC41C B 0x3226C60
	0x036DC420 SUB X31, X31, 0x60
	0x036DC424 STP X30, X27, [X31 + 0x10]
	0x036DC428 STP X26, X25, [X31 + 0x20]
	0x036DC42C STP X24, X23, [X31 + 0x30]
	0x036DC430 STP X22, X21, [X31 + 0x40]
	0x036DC434 STP X20, X19, [X31 + 0x50]
	0x036DC438 ADRP X20, 0xD04000
	0x036DC43C LDRB W8, [X20 + 0xAD7]
	0x036DC440 MOV X19, X0
	0x036DC444 TBNZ X8, 0x0, 0x36DC540
	0x036DC448 ADRP X0, 0xA64000
	0x036DC44C LDR X0, [X0 + 0x398]
	0x036DC450 BL 0x1C16CF4
	0x036DC454 ADRP X0, 0xA1A000
	0x036DC458 LDR X0, [X0 + 0x160]
	0x036DC45C BL 0x1C16CF4
	0x036DC460 ADRP X0, 0xA1A000
	0x036DC464 LDR X0, [X0 + 0x130]
	0x036DC468 BL 0x1C16CF4
	0x036DC46C ADRP X0, 0xA19000
	0x036DC470 LDR X0, [X0 + 0x170]
	0x036DC474 BL 0x1C16CF4
	0x036DC478 ADRP X0, 0xA64000
	0x036DC47C LDR X0, [X0 + 0x2B8]
	0x036DC480 BL 0x1C16CF4
	0x036DC484 ADRP X0, 0xA64000
	0x036DC488 LDR X0, [X0 + 0x2D0]
	0x036DC48C BL 0x1C16CF4
	0x036DC490 ADRP X0, 0xA64000
	0x036DC494 LDR X0, [X0 + 0x2E0]
	0x036DC498 BL 0x1C16CF4
	0x036DC49C ADRP X0, 0xA64000
	0x036DC4A0 LDR X0, [X0 + 0x3A0]
	0x036DC4A4 BL 0x1C16CF4
	0x036DC4A8 ADRP X0, 0xA4B000
	0x036DC4AC LDR X0, [X0 + 0xAE0]
	0x036DC4B0 BL 0x1C16CF4
	0x036DC4B4 ADRP X0, 0xA64000
	0x036DC4B8 LDR X0, [X0 + 0x2F8]
	0x036DC4BC BL 0x1C16CF4
	0x036DC4C0 ADRP X0, 0xA64000
	0x036DC4C4 LDR X0, [X0 + 0x3A8]
	0x036DC4C8 BL 0x1C16CF4
	0x036DC4CC ADRP X0, 0xA64000
	0x036DC4D0 LDR X0, [X0 + 0x3B0]
	0x036DC4D4 BL 0x1C16CF4
	0x036DC4D8 ADRP X0, 0xA64000
	0x036DC4DC LDR X0, [X0 + 0x1A8]
	0x036DC4E0 BL 0x1C16CF4
	0x036DC4E4 ADRP X0, 0xA64000
	0x036DC4E8 LDR X0, [X0 + 0x3B8]
	0x036DC4EC BL 0x1C16CF4
	0x036DC4F0 ADRP X0, 0xA5E000
	0x036DC4F4 LDR X0, [X0 + 0xA08]
	0x036DC4F8 BL 0x1C16CF4
	0x036DC4FC ADRP X0, 0xA64000
	0x036DC500 LDR X0, [X0 + 0x258]
	0x036DC504 BL 0x1C16CF4
	0x036DC508 ADRP X0, 0xA64000
	0x036DC50C LDR X0, [X0 + 0x3C0]
	0x036DC510 BL 0x1C16CF4
	0x036DC514 ADRP X0, 0xA64000
	0x036DC518 LDR X0, [X0 + 0x3C8]
	0x036DC51C BL 0x1C16CF4
	0x036DC520 ADRP X0, 0xA5E000
	0x036DC524 LDR X0, [X0 + 0x158]

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+112], X30
	003 Move [X31+128], X24
	004 Move [X31+136], X23
	005 Move [X31+144], X22
	006 Move [X31+152], X21
	007 Move [X31+160], X20
	008 Move [X31+168], X19
	009 Move X20, 0xD06000
	010 Move W8, [X20+2771]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {87}
	016 Move X0, 0xA43000
	017 Move X0, [X0+3656]
	018 Call 0x1C17CF4
	019 Move X0, 0xA66000
	020 Move X0, [X0+672]
	021 Call 0x1C17CF4
	022 Move X0, 0xA66000
	023 Move X0, [X0+680]
	024 Call 0x1C17CF4
	025 Move X0, 0xA66000
	026 Move X0, [X0+688]
	027 Call 0x1C17CF4
	028 Move X0, 0xA1C000
	029 Move X0, [X0+640]
	030 Call 0x1C17CF4
	031 Move X0, 0xA21000
	032 Move X0, [X0+2008]
	033 Call 0x1C17CF4
	034 Move X0, 0xA66000
	035 Move X0, [X0+696]
	036 Call 0x1C17CF4
	037 Move X0, 0xA66000
	038 Move X0, [X0+704]
	039 Call 0x1C17CF4
	040 Move X0, 0xA66000
	041 Move X0, [X0+712]
	042 Call 0x1C17CF4
	043 Move X0, 0xA66000
	044 Move X0, [X0+720]
	045 Call 0x1C17CF4
	046 Move X0, 0xA66000
	047 Move X0, [X0+728]
	048 Call 0x1C17CF4
	049 Move X0, 0xA66000
	050 Move X0, [X0+736]
	051 Call 0x1C17CF4
	052 Move X0, 0xA1C000
	053 Move X0, [X0+432]
	054 Call 0x1C17CF4
	055 Move X0, 0xA1C000
	056 Move X0, [X0+440]
	057 Call 0x1C17CF4
	058 Move X0, 0xA63000
	059 Move X0, [X0+2280]
	060 Call 0x1C17CF4
	061 Move X0, 0xA66000
	062 Move X0, [X0+744]
	063 Call 0x1C17CF4
	064 Move X0, 0xA57000
	065 Move X0, [X0+1288]
	066 Call 0x1C17CF4
	067 Move X0, 0xA66000
	068 Move X0, [X0+752]
	069 Call 0x1C17CF4
	070 Move X0, 0xA66000
	071 Move X0, [X0+760]
	072 Call 0x1C17CF4
	073 Move X0, 0xA66000
	074 Move X0, [X0+768]
	075 Call 0x1C17CF4
	076 Move X0, 0xA66000
	077 Move X0, [X0+664]
	078 Call 0x1C17CF4
	079 Move X0, 0xA66000
	080 Move X0, [X0+424]
	081 Call 0x1C17CF4
	082 Move X0, 0xA56000
	083 Move X0, [X0+3560]
	084 Call 0x1C17CF4
	085 Move W8, 1
	086 Move [X20+2771], W8
	087 Move [X31+96], X31
	088 Move [X31+104], X31
	089 Move [X31+80], X31
	090 Move [X31+88], X31
	091 Move [X31+64], X31
	092 Move [X31+72], X31
	093 Move W23, [X19]
	094 Move X20, [X19+40]
	095 NotImplemented "Instruction CMP not yet implemented."
	096 Move X24, 0xA66000
	097 Move X24, [X24+664]
	098 Move X8, [X24]
	099 Move W9, [X8+224]
	100 Compare W9, 0
	101 JumpIfNotEqual {105}
	102 Move X0, X8
	103 Call 0x1C17DFC
	104 Move X8, [X24]
	105 Move X9, [X8+184]
	106 Move X21, [X9+8]
	107 Compare X21, 0
	108 JumpIfNotEqual {131}
	109 Move W9, [X8+224]
	110 Compare W9, 0
	111 JumpIfNotEqual {115}
	112 Move X0, X8
	113 Call 0x1C17DFC
	114 Move X8, [X24]
	115 Move X9, 0xA43000
	116 Move X8, [X8+184]
	117 Move X9, [X9+3656]
	118 Move X22, [X8]
	119 Move X0, [X9]
	120 Call 0x1C17F10
	121 Move X8, 0xA66000
	122 Move X8, [X8+768]
	123 Move X21, X0
	124 Move X2, [X8]
	125 Move X1, X22
	126 Move X3, X31
	127 Call Action`1<Object>..ctor, X0, X1, X2
	128 Move X8, [X24]
	129 Move X8, [X8+184]
	130 Move [X8+8], X21
	131 Move X8, 0xA21000
	132 Move X8, [X8+2008]
	133 Move X0, [X8]
	134 Move W8, [X0+224]
	135 Compare W8, 0
	136 JumpIfNotEqual {138}
	137 Call 0x1C17DFC
	138 Add X0, X19, 32
	139 Add X8, X31, 8
	140 Move X1, X21
	141 Move X2, X20
	142 Move X3, X31
	143 Call CancellationToken.Register, X0, X1, X2
	144 NotImplemented "Instruction LDUR not yet implemented."
	145 Move X8, [X31+24]
	146 Move [X31+2], V0
	147 Move [X31+48], X8
	148 Move [X19+80], X8
	149 Move [X19+4], V0
	150 NotImplemented "Instruction CMP not yet implemented."
	151 Move X9, -45363200
	152 Move W8, W23
	153 Add X9, X9, 1986
	154 NotImplemented "Instruction ADR not yet implemented."
	155 Move W11, [X9]
	156 Add X10, X10, X11
	157 CallNoReturn X10
	158 Move V0, [X19+7]
	159 Move TEMP, 0
	160 Not TEMP
	161 Move W23, TEMP
	162 Move [X31+6], V0
	163 Move [X19+112], X31
	164 Move [X19+120], X31
	165 Move [X19], W23
	166 NotImplemented "Instruction LDUR not yet implemented."
	167 Move TEMP, 0
	168 Not TEMP
	169 Move W23, TEMP
	170 Move [X31+5], V0
	171 Move [X19+136], X31
	172 Move [X19+144], X31
	173 Move [X19], W23
	174 NotImplemented "Instruction LDUR not yet implemented."
	175 Move TEMP, 0
	176 Not TEMP
	177 Move W23, TEMP
	178 Move [X31+4], V0
	179 Move [X19+152], X31
	180 Move [X19+160], X31
	181 Move [X19], W23
	182 NotImplemented "Instruction LDUR not yet implemented."
	183 Move TEMP, 0
	184 Not TEMP
	185 Move W23, TEMP
	186 Move [X31+5], V0
	187 Move [X19+136], X31
	188 Move [X19+144], X31
	189 Move [X19], W23
	190 Move X0, [X19+48]
	191 Compare X0, 0
	192 JumpIfEqual {540}
	193 Move X1, X31
	194 Call Uri.get_Host, X0
	195 Move X21, X0
	196 Move X0, [X19+48]
	197 Compare X0, 0
	198 JumpIfEqual {541}
	199 Move X1, X31
	200 Call Uri.get_Port, X0
	201 Compare X20, 0
	202 JumpIfEqual {542}
	203 Move X3, [X19+32]
	204 Move W2, W0
	205 Move X0, X20
	206 Move X1, X21
	207 Call WebSocketHandle.ConnectSocketAsync, X0, X1, X2, X3
	208 Compare X0, 0
	209 JumpIfEqual {543}
	210 Move X8, 0xA66000
	211 Move X8, [X8+752]
	212 Move X2, [X8]
	213 Move W1, W31
	214 Call Task`1<Object>.ConfigureAwait, X0, X1
	215 Move X8, 0xA66000
	216 Move X8, [X8+728]
	217 Move [X31+96], X0
	218 Move [X31+104], X1
	219 Move X8, [X8]
	220 Add X0, X31, 96
	221 Move X1, X8
	222 Call ConfiguredTaskAwaiter<Object>.get_IsCompleted, X0
	223 Move TEMP, X0
	224 And TEMP, TEMP, 1
	225 Compare TEMP, 1
	226 JumpIfNotEqual {486}
	227 Move X8, 0xA66000
	228 Move X8, [X8+712]
	229 Add X0, X31, 96
	230 Move X1, [X8]
	231 Call ConfiguredTaskAwaiter<Object>.GetResult, X0
	232 Move X8, 0xA63000
	233 Move X8, [X8+2280]
	234 Move X21, X0
	235 Move X0, [X8]
	236 Call 0x1C17F10
	237 Move X22, X0
	238 Move W2, 1
	239 Move X1, X21
	240 Move X3, X31
	241 Call NetworkStream..ctor, X0, X1, X2
	242 Move X0, [X19+48]
	243 Move [X19+88], X22
	244 Compare X0, 0
	245 JumpIfEqual {539}
	246 Move X1, X31
	247 Call Uri.get_Scheme, X0
	248 Move X8, 0xA56000
	249 Move X8, [X8+3560]
	250 Move X1, [X8]
	251 Move X2, X31
	252 Call String.op_Equality, X0, X1
	253 Move TEMP, X0
	254 And TEMP, TEMP, 1
	255 Compare TEMP, 1
	256 JumpIfNotEqual {308}
	257 Move X8, 0xA57000
	258 Move X22, [X19+88]
	259 Move X8, [X8+1288]
	260 Move X0, [X8]
	261 Call 0x1C17F10
	262 Move X21, X0
	263 Move X1, X22
	264 Move X2, X31
	265 Call SslStream..ctor, X0, X1
	266 Move X0, [X19+48]
	267 Move [X19+128], X21
	268 Compare X0, 0
	269 JumpIfEqual {544}
	270 Move X1, X31
	271 Call Uri.get_Host, X0
	272 Move X22, X0
	273 Move X0, [X19+56]
	274 Compare X0, 0
	275 JumpIfEqual {545}
	276 Call ClientWebSocketOptions.get_ClientCertificates, X0
	277 Compare X21, 0
	278 JumpIfEqual {546}
	279 Move X8, [X21]
	280 Move X2, X0
	281 Move X9, [X8+1032]
	282 Move X5, [X8+1040]
	283 Move W3, 4032
	284 Move X0, X21
	285 Move X1, X22
	286 Move W4, W31
	287 NotImplemented "Instruction BLR not yet implemented."
	288 Compare X0, 0
	289 JumpIfEqual {547}
	290 Move W1, W31
	291 Move X2, X31
	292 Call Task.ConfigureAwait, X0, X1
	293 Move [X31+80], X0
	294 Move [X31+88], X1
	295 Add X0, X31, 80
	296 Move X1, X31
	297 Call ConfiguredTaskAwaiter.get_IsCompleted, X0
	298 Move TEMP, X0
	299 And TEMP, TEMP, 1
	300 Compare TEMP, 1
	301 JumpIfNotEqual {503}
	302 Add X0, X31, 80
	303 Move X1, X31
	304 Call ConfiguredTaskAwaiter.GetResult, X0
	305 Move X8, [X19+128]
	306 Move [X19+128], X31
	307 Move [X19+88], X8
	308 Move X8, 0xA66000
	309 Move X8, [X8+424]
	310 Move X0, [X8]
	311 Move W8, [X0+224]
	312 Compare W8, 0
	313 JumpIfNotEqual {315}
	314 Call 0x1C17DFC
	315 Call WebSocketHandle.CreateSecKeyAndSecWebSocketAccept
	316 Move X2, X0
	317 Move X0, [X19+48]
	318 Move X8, [X19+56]
	319 Move [X19+96], X2
	320 Move [X19+104], X1
	321 Move X1, X8
	322 Call WebSocketHandle.BuildRequestHeader, X0, X1, X2
	323 Move X1, X0
	324 Compare X1, 0
	325 JumpIfEqual {530}
	326 Move X0, [X19+88]
	327 Compare X0, 0
	328 JumpIfEqual {531}
	329 Move X8, [X0]
	330 Move X4, [X19+32]
	331 Move W3, [X1+24]
	332 Move X9, [X8+792]
	333 Move X5, [X8+800]
	334 Move W2, W31
	335 NotImplemented "Instruction BLR not yet implemented."
	336 Compare X0, 0
	337 JumpIfEqual {532}
	338 Move W1, W31
	339 Move X2, X31
	340 Call Task.ConfigureAwait, X0, X1
	341 Move [X31+80], X0
	342 Move [X31+88], X1
	343 Add X0, X31, 80
	344 Move X1, X31
	345 Call ConfiguredTaskAwaiter.get_IsCompleted, X0
	346 Move TEMP, X0
	347 And TEMP, TEMP, 1
	348 Compare TEMP, 1
	349 JumpIfNotEqual {409}
	350 Add X0, X31, 80
	351 Move X1, X31
	352 Call ConfiguredTaskAwaiter.GetResult, X0
	353 Compare X20, 0
	354 JumpIfEqual {533}
	355 Move X1, [X19+88]
	356 Move X4, [X19+32]
	357 Move X3, [X19+104]
	358 Move X2, [X19+56]
	359 Call WebSocketHandle.ParseAndValidateConnectResponseAsync, X0, X1, X2, X3, X4
	360 Compare X0, 0
	361 JumpIfEqual {534}
	362 Move X8, 0xA66000
	363 Move X8, [X8+760]
	364 Move X2, [X8]
	365 Move W1, W31
	366 Call Task`1<Object>.ConfigureAwait, X0, X1
	367 Move X8, 0xA66000
	368 Move X8, [X8+736]
	369 Move [X31+64], X0
	370 Move [X31+72], X1
	371 Move X8, [X8]
	372 Add X0, X31, 64
	373 Move X1, X8
	374 Call ConfiguredTaskAwaiter<Object>.get_IsCompleted, X0
	375 Move TEMP, X0
	376 And TEMP, TEMP, 1
	377 Compare TEMP, 1
	378 JumpIfNotEqual {427}
	379 Move X8, 0xA66000
	380 Move X8, [X8+720]
	381 Add X0, X31, 64
	382 Move X1, [X8]
	383 Call ConfiguredTaskAwaiter<Object>.GetResult, X0
	384 Move X1, X0
	385 Move X8, [X19+56]
	386 Compare X8, 0
	387 JumpIfEqual {537}
	388 Add X21, X19, 88
	389 Move X0, [X21]
	390 Move W2, [X8+72]
	391 Move W3, [X8+76]
	392 Move X4, [X8+40]
	393 Move W5, W31
	394 Call WebSocket.CreateClientWebSocket, X0, X1, X2, X3, X4, X5, X6
	395 Compare X20, 0
	396 JumpIfEqual {538}
	397 Move W9, [X20+24]
	398 Move X8, X0
	399 Move [X20+32], X0
	400 NotImplemented "Instruction CMP not yet implemented."
	401 NotImplemented "Instruction CMP not yet implemented."
	402 Compare X8, 0
	403 JumpIfEqual {548}
	404 Move X9, [X8]
	405 Move X10, [X9+456]
	406 Move X1, [X9+464]
	407 Move X0, X8
	408 NotImplemented "Instruction BLR not yet implemented."
	409 Move W8, 2
	410 Move [X19], W8
	411 Move V0, [X31+5]
	412 Move X8, 0xA1B000
	413 Move [X19+136], V0
	414 Move X8, [X8+640]
	415 Move X0, [X8]
	416 Move W8, [X0+224]
	417 Compare W8, 0
	418 JumpIfNotEqual {420}
	419 Call 0x1C17DFC
	420 Move X8, 0xA65000
	421 Move X8, [X8+680]
	422 Add X0, X19, 8
	423 Move X3, [X8]
	424 Add X1, X31, 80
	425 Move X2, X19
	426 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	427 Move W8, 3
	428 Move [X19], W8
	429 Move V0, [X31+4]
	430 Move X8, 0xA1B000
	431 Move [X19+152], V0
	432 Move X8, [X8+640]
	433 Move X0, [X8]
	434 Move W8, [X0+224]
	435 Compare W8, 0
	436 JumpIfNotEqual {438}
	437 Call 0x1C17DFC
	438 Move X8, 0xA65000
	439 Move X8, [X8+672]
	440 Add X0, X19, 8
	441 Move X3, [X8]
	442 Add X1, X31, 64
	443 Move X2, X19
	444 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	445 Compare X8, 0
	446 JumpIfEqual {549}
	447 Move X9, [X8]
	448 Move X10, [X9+504]
	449 Move X1, [X9+512]
	450 Move X0, X8
	451 NotImplemented "Instruction BLR not yet implemented."
	452 Move X20, X31
	453 Move [X21], X31
	454 Move [X21+8], X31
	455 Move [X21+16], X31
	456 Move W21, 25
	457 Move TEMP, X23
	458 And TEMP, TEMP, -2147483648
	459 Compare TEMP, -2147483648
	460 JumpIfNotEqual {464}
	461 Add X0, X19, 64
	462 Move X1, X31
	463 Call CancellationTokenRegistration.Dispose, X0
	464 Compare X20, 0
	465 JumpIfNotEqual {535}
	466 Compare W21, 0
	467 JumpIfEqual {469}
	468 NotImplemented "Instruction CMP not yet implemented."
	469 Move TEMP, 1
	470 Not TEMP
	471 Move W8, TEMP
	472 Move [X19+72], X31
	473 Move [X19+80], X31
	474 Move [X19+64], X31
	475 Move [X19+8], W8
	476 Move X8, 0xA1B000
	477 Move X8, [X8+640]
	478 Move X0, [X8]
	479 Move W8, [X0+224]
	480 Compare W8, 0
	481 JumpIfNotEqual {483}
	482 Call 0x1C17DFC
	483 Move X0, X19
	484 Move X1, X31
	485 Call AsyncTaskMethodBuilder.SetResult, X0
	486 Move [X19], W31
	487 Move V0, [X31+6]
	488 Move X8, 0xA1B000
	489 Move [X19+7], V0
	490 Move X8, [X8+640]
	491 Move X0, [X8]
	492 Move W8, [X0+224]
	493 Compare W8, 0
	494 JumpIfNotEqual {496}
	495 Call 0x1C17DFC
	496 Move X8, 0xA65000
	497 Move X8, [X8+688]
	498 Add X0, X19, 8
	499 Move X3, [X8]
	500 Add X1, X31, 96
	501 Move X2, X19
	502 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	503 Move W8, 1
	504 Move [X19], W8
	505 Move V0, [X31+5]
	506 Move X8, 0xA1B000
	507 Move [X19+136], V0
	508 Move X8, [X8+640]
	509 Move X0, [X8]
	510 Move W8, [X0+224]
	511 Compare W8, 0
	512 JumpIfNotEqual {514}
	513 Call 0x1C17DFC
	514 Move X8, 0xA65000
	515 Move X8, [X8+680]
	516 Add X0, X19, 8
	517 Move X3, [X8]
	518 Add X1, X31, 80
	519 Move X2, X19
	520 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	521 Move X20, [X31+160]
	522 Move X19, [X31+168]
	523 Move X22, [X31+144]
	524 Move X21, [X31+152]
	525 Move X24, [X31+128]
	526 Move X23, [X31+136]
	527 Move X30, [X31+112]
	528 Add X31, X31, 176
	529 Return 
	530 Call 0x1C17F20
	531 Call 0x1C17F20
	532 Call 0x1C17F20
	533 Call 0x1C17F20
	534 Call 0x1C17F20
	535 Move X0, X20
	536 Call 0x1C17F18
	537 Call 0x1C17F20
	538 Call 0x1C17F20
	539 Call 0x1C17F20
	540 Call 0x1C17F20
	541 Call 0x1C17F20
	542 Call 0x1C17F20
	543 Call 0x1C17F20
	544 Call 0x1C17F20
	545 Call 0x1C17F20
	546 Call 0x1C17F20
	547 Call 0x1C17F20
	548 Call 0x1C17F20
	549 Call 0x1C17F20
	550 Move X21, X0
	551 Move W23, 1
	552 Move X21, X0
	553 Move W23, W31
	554 Move X21, X0
	555 Move W23, 3
	556 Move X21, X0
	557 Move W23, 2
	558 Move X21, X0
	559 Move W22, W1
	560 Move X21, X0
	561 Move W22, W1
	562 NotImplemented "Instruction CMP not yet implemented."
	563 Move W8, 1
	564 NotImplemented "Instruction CMP not yet implemented."
	565 Move X0, X21
	566 Call 0x3EB2AD0
	567 Move X20, [X0]
	568 Call 0x3EB2AE0
	569 Move W21, W31
	570 Move TEMP, X23
	571 And TEMP, TEMP, -2147483648
	572 Compare TEMP, -2147483648
	573 JumpIfNotEqual {464}
	574 Move X20, X31
	575 Move TEMP, X23
	576 And TEMP, TEMP, -2147483648
	577 Compare TEMP, -2147483648
	578 JumpIfNotEqual {582}
	579 Add X0, X19, 64
	580 Move X1, X31
	581 Call CancellationTokenRegistration.Dispose, X0
	582 Compare X20, 0
	583 JumpIfNotEqual {644}
	584 NotImplemented "Instruction CMP not yet implemented."
	585 Move X0, X21
	586 Call 0x3EB2AD0
	587 Move X20, X0
	588 Move X0, 0xA18000
	589 Move X0, [X0+2000]
	590 Call 0x1C17D08
	591 Move X8, [X20]
	592 Move X1, [X8]
	593 Call 0x1C18270
	594 Move TEMP, X0
	595 And TEMP, TEMP, 1
	596 Compare TEMP, 1
	597 JumpIfNotEqual {636}
	598 Move X20, [X20]
	599 Call 0x3EB2AE0
	600 Move TEMP, 1
	601 Not TEMP
	602 Move W8, TEMP
	603 Move [X19+72], X31
	604 Move [X19+80], X31
	605 Move [X19+64], X31
	606 Move [X19+8], W8
	607 Move X0, 0xA1B000
	608 Move X0, [X0+640]
	609 Call 0x1C17D08
	610 Move W8, [X0+224]
	611 Compare W8, 0
	612 JumpIfNotEqual {614}
	613 Call 0x1C17DFC
	614 Move X0, X19
	615 Move X1, X20
	616 Move X2, X31
	617 Call AsyncTaskMethodBuilder.SetException, X0, X1
	618 Move X0, X21
	619 Call 0x3EB2AD0
	620 Move X21, X0
	621 Move X0, 0xA18000
	622 Move X0, [X0+2000]
	623 Call 0x1C17D08
	624 Move X8, [X21]
	625 Move X1, [X8]
	626 Call 0x1C18270
	627 Move TEMP, X0
	628 And TEMP, TEMP, 1
	629 Compare TEMP, 1
	630 JumpIfNotEqual {646}
	631 Move X21, [X21]
	632 Call 0x3EB2AE0
	633 Compare X20, 0
	634 JumpIfNotEqual {654}
	635 Call 0x1C17F20
	636 Move W0, 8
	637 Call 0x3EB2AF0
	638 Move X8, [X20]
	639 Move [X0], X8
	640 Move X1, 0x7D9000
	641 Add X1, X1, 3672
	642 Move X2, X31
	643 Call 0x3EB2B00
	644 Move X0, X20
	645 Call 0x1C17F18
	646 Move W0, 8
	647 Call 0x3EB2AF0
	648 Move X8, [X21]
	649 Move [X0], X8
	650 Move X1, 0x7D9000
	651 Add X1, X1, 3672
	652 Move X2, X31
	653 Call 0x3EB2B00
	654 Move W8, [X20+24]
	655 NotImplemented "Instruction CMP not yet implemented."
	656 Move W8, 5
	657 Move [X20+24], W8
	658 Move X0, X20
	659 Call WebSocketHandle.Abort, X0
	660 Move X0, 0xA43000
	661 Move X0, [X0+776]
	662 Call 0x1C17D08
	663 Compare X21, 0
	664 JumpIfEqual {669}
	665 Move X8, [X21]
	666 NotImplemented "Instruction CMP not yet implemented."
	667 Move X0, X21
	668 Call 0x1C17F18
	669 Move X0, 0xA43000
	670 Move X0, [X0+776]
	671 Call 0x1C17D08
	672 Call 0x1C17F10
	673 Move X20, X0
	674 Move X0, 0xA62000
	675 Move X0, [X0+3376]
	676 Call 0x1C17D08
	677 Move X1, X0
	678 Move X0, X20
	679 Move X2, X21
	680 Move X3, X31
	681 Call Win32Exception..ctor, X0, X1, X2
	682 Move X0, 0xA65000
	683 Move X0, [X0+776]
	684 Call 0x1C17D08
	685 Move X1, X0
	686 Move X0, X20
	687 Call 0x1C17DEC
	688 Move X22, X1
	689 Move X21, X0
	690 Move X21, X0
	691 Move W22, W1
	692 Move X21, X0
	693 Move W22, W1
	694 Move TEMP, X23
	695 And TEMP, TEMP, -2147483648
	696 Compare TEMP, -2147483648
	697 JumpIfNotEqual {582}
	698 Move X22, X1
	699 Move X21, X0
	700 Call 0x3EB2AE0
	701 Move X21, X0
	702 Call 0x3EB2AE0
	703 Move X0, X21
	704 Call 0x1D2D690
	705 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x036DC8B8 LDP X30, X27, [X31 + 0x10]
	0x036DC8BC ADD X31, X31, 0x60
	0x036DC8C0 RET
	0x036DC8C4 ADRP X8, 0xA64000
	0x036DC8C8 LDR X8, [X8 + 0x3B0]
	0x036DC8CC LDR X0, [X8]
	0x036DC8D0 BL 0x1C16F10
	0x036DC8D4 MOV X20, X0
	0x036DC8D8 MOV X1, X31
	0x036DC8DC BL 0x33BDD8C
	0x036DC8E0 CBZ X22, 0x36DCB50
	0x036DC8E4 MOVZ W1, 0x3A
	0x036DC8E8 MOV X0, X22
	0x036DC8EC MOV X2, X31
	0x036DC8F0 BL 0x322BD98
	0x036DC8F4 MOV W23, W0
	0x036DC8F8 ADDS W31, W0, 0x1
	0x036DC8FC B.EQ 0x36DCB54
	0x036DC900 MOV X0, X22
	0x036DC904 MOV W1, W31
	0x036DC908 MOV W2, W23
	0x036DC90C MOV X3, X31
	0x036DC910 BL 0x3627D7C
	0x036DC914 MOV X21, X0
	0x036DC918 ADD W1, W23, 0x1
	0x036DC91C MOV X0, X22

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xD05000
	007 Move X22, 0xA1B000
	008 Move W8, [X21+2772]
	009 Move X22, [X22+640]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xA1B000
	017 Move X0, [X0+640]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2772], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Add X0, X20, 8
	027 Move X1, X19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X2, X31
	033 Move X30, [X31+48]
	034 Call AsyncTaskMethodBuilder.SetStateMachine, X0, X1
	035 Return 

