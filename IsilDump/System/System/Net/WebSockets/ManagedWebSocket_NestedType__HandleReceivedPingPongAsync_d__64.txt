Type: System.Net.WebSockets.ManagedWebSocket/<HandleReceivedPingPongAsync>d__64

Method: System.Void MoveNext()

Disassembly:
	0x036D704C MOVZ W8, 0x1
	0x036D7050 STRB W8, [X21 + 0xAAE]
	0x036D7054 LDR X0, [X22]
	0x036D7058 LDR W8, [X0 + 0xE0]
	0x036D705C CBNZ W8, 0x36D7064
	0x036D7060 BL 0x1C16DFC
	0x036D7064 ADD X0, X20, 0x8
	0x036D7068 MOV X1, X19
	0x036D706C LDP X20, X19, [X31 + 0x20]
	0x036D7070 LDP X22, X21, [X31 + 0x10]
	0x036D7074 MOV X2, X31
	0x036D7078 LDR X30, [X31], #0x30
	0x036D707C B 0x32C477C
	0x036D7080 SUB X31, X31, 0xA0
	0x036D7084 STP X30, X0, [X31 + 0x60]
	0x036D7088 STP X24, X23, [X31 + 0x70]
	0x036D708C STP X22, X21, [X31 + 0x80]
	0x036D7090 STP X20, X19, [X31 + 0x90]
	0x036D7094 ADRP X19, 0xD09000
	0x036D7098 LDRB W8, [X19 + 0xAAF]
	0x036D709C MOV X20, X0
	0x036D70A0 TBNZ X8, 0x0, 0x36D7118
	0x036D70A4 ADRP X0, 0xA47000
	0x036D70A8 LDR X0, [X0 + 0xD50]
	0x036D70AC BL 0x1C16CF4
	0x036D70B0 ADRP X0, 0xA47000
	0x036D70B4 LDR X0, [X0 + 0xD68]
	0x036D70B8 BL 0x1C16CF4
	0x036D70BC ADRP X0, 0xA69000
	0x036D70C0 LDR X0, [X0 + 0x158]
	0x036D70C4 BL 0x1C16CF4
	0x036D70C8 ADRP X0, 0xA69000
	0x036D70CC LDR X0, [X0 + 0x160]
	0x036D70D0 BL 0x1C16CF4
	0x036D70D4 ADRP X0, 0xA1F000
	0x036D70D8 LDR X0, [X0 + 0x280]
	0x036D70DC BL 0x1C16CF4
	0x036D70E0 ADRP X0, 0xA45000
	0x036D70E4 LDR X0, [X0 + 0xB60]
	0x036D70E8 BL 0x1C16CF4
	0x036D70EC ADRP X0, 0xA4B000
	0x036D70F0 LDR X0, [X0 + 0xE58]
	0x036D70F4 BL 0x1C16CF4
	0x036D70F8 ADRP X0, 0xA4F000
	0x036D70FC LDR X0, [X0 + 0xD10]
	0x036D7100 BL 0x1C16CF4
	0x036D7104 ADRP X0, 0xA46000
	0x036D7108 LDR X0, [X0 + 0xE40]
	0x036D710C BL 0x1C16CF4
	0x036D7110 MOVZ W8, 0x1
	0x036D7114 STRB W8, [X19 + 0xAAF]
	0x036D7118 STP X31, X31, [X31 + 0x40]
	0x036D711C STRB W31, [X31 + 0x3C]
	0x036D7120 STP X31, X31, [X31 + 0x20]
	0x036D7124 LDR W8, [X20]
	0x036D7128 ADRP X23, 0xA1F000
	0x036D712C STR W8, [X31 + 0x5C]
	0x036D7130 LDR X19, [X20 + 0x30]
	0x036D7134 LDR X23, [X23 + 0x280]
	0x036D7138 CBZ W8, 0x36D7170
	0x036D713C CMP W8, 0x1
	0x036D7140 B.NE 0x36D716C
	0x036D7144 LDUR V0, [X20 + 0x58]
	0x036D7148 MOVN W8, 0x0
	0x036D714C STR V0, [X31 + 0x2]
	0x036D7150 STP X31, X31, [X20 + 0x58]
	0x036D7154 STR W8, [X31 + 0x5C]
	0x036D7158 STR W8, [X20]
	0x036D715C ADD X0, X31, 0x20
	0x036D7160 MOV X1, X31
	0x036D7164 BL 0x32C40F0
	0x036D7168 B 0x36D76D0
	0x036D716C STR X31, [X20 + 0x40]
	0x036D7170 ADRP X22, 0xA46000
	0x036D7174 LDR X22, [X22 + 0xE40]
	0x036D7178 ADD X9, X31, 0x5C
	0x036D717C ADD X10, X31, 0x68
	0x036D7180 STP X31, X9, [X31 + 0x8]
	0x036D7184 STR X10, [X31 + 0x18]
	0x036D7188 CBZ W8, 0x36D7240
	0x036D718C LDR X0, [X20 + 0x20]
	0x036D7190 MOV X1, X31
	0x036D7194 BL 0x32277A8
	0x036D7198 TBZ X0, 0x0, 0x36D725C
	0x036D719C ADRP X8, 0xA47000
	0x036D71A0 LDR X8, [X8 + 0xD68]
	0x036D71A4 LDR X0, [X8]
	0x036D71A8 LDR W8, [X0 + 0xE0]
	0x036D71AC CBNZ W8, 0x36D71B4
	0x036D71B0 BL 0x1C16DFC
	0x036D71B4 ADRP X8, 0xA47000
	0x036D71B8 LDR X8, [X8 + 0xD50]
	0x036D71BC LDR X20, [X8]
	0x036D71C0 LDR X0, [X20 + 0x20]
	0x036D71C4 LDRB W8, [X0 + 0x135]
	0x036D71C8 TBNZ X8, 0x0, 0x36D71D0
	0x036D71CC BL 0x1C5C684
	0x036D71D0 LDR X8, [X0 + 0xC0]
	0x036D71D4 LDR X0, [X8 + 0x8]
	0x036D71D8 LDRB W8, [X0 + 0x135]
	0x036D71DC TBNZ X8, 0x0, 0x36D71E4
	0x036D71E0 BL 0x1C5C684
	0x036D71E4 LDR W8, [X0 + 0xE0]
	0x036D71E8 CBNZ W8, 0x36D71F0
	0x036D71EC BL 0x1C16DFC
	0x036D71F0 LDR X0, [X20 + 0x20]
	0x036D71F4 LDRB W8, [X0 + 0x135]
	0x036D71F8 TBNZ X8, 0x0, 0x36D7200
	0x036D71FC BL 0x1C5C684
	0x036D7200 LDR X8, [X0 + 0xC0]
	0x036D7204 LDR X0, [X8 + 0x8]
	0x036D7208 LDRB W8, [X0 + 0x135]
	0x036D720C TBNZ X8, 0x0, 0x36D7214
	0x036D7210 BL 0x1C5C684
	0x036D7214 LDR X8, [X0 + 0xB8]
	0x036D7218 LDR X0, [X8]
	0x036D721C CBZ X0, 0x36D7830
	0x036D7220 LDR X8, [X0]
	0x036D7224 LDP X9, X2, [X8 + 0x178]
	0x036D7228 MOVZ W1, 0x2
	0x036D722C BLR X9
	0x036D7230 LDR X8, [X31 + 0x68]
	0x036D7234 MOVZ W20, 0x2
	0x036D7238 STR X0, [X8 + 0x40]
	0x036D723C B 0x36D737C
	0x036D7240 LDUR V0, [X20 + 0x48]
	0x036D7244 MOVN W8, 0x0
	0x036D7248 STR V0, [X31 + 0x4]
	0x036D724C STP X31, X31, [X20 + 0x48]
	0x036D7250 STR W8, [X31 + 0x5C]
	0x036D7254 STR W8, [X20]
	0x036D7258 B 0x36D7544
	0x036D725C ADRP X21, 0xA45000
	0x036D7260 LDR X21, [X21 + 0xB60]
	0x036D7264 LDR X0, [X21]
	0x036D7268 LDR W8, [X0 + 0xE0]
	0x036D726C CBNZ W8, 0x36D7278
	0x036D7270 BL 0x1C16DFC
	0x036D7274 LDR X0, [X21]
	0x036D7278 LDR X8, [X0 + 0xB8]
	0x036D727C LDR X0, [X8 + 0x8]
	0x036D7280 CBZ X0, 0x36D782C
	0x036D7284 LDR X8, [X31 + 0x68]
	0x036D7288 LDR X9, [X0]
	0x036D728C LDR X1, [X8 + 0x20]
	0x036D7290 LDP X8, X2, [X9 + 0x1F8]
	0x036D7294 BLR X8
	0x036D7298 ADRP X8, 0xA47000
	0x036D729C LDR X8, [X8 + 0xD68]
	0x036D72A0 MOV W20, W0
	0x036D72A4 LDR X0, [X8]
	0x036D72A8 LDR W8, [X0 + 0xE0]
	0x036D72AC CBNZ W8, 0x36D72B4
	0x036D72B0 BL 0x1C16DFC
	0x036D72B4 ADRP X8, 0xA47000
	0x036D72B8 LDR X8, [X8 + 0xD50]
	0x036D72BC LDR X24, [X8]
	0x036D72C0 LDR X0, [X24 + 0x20]
	0x036D72C4 LDRB W8, [X0 + 0x135]
	0x036D72C8 TBNZ X8, 0x0, 0x36D72D0
	0x036D72CC BL 0x1C5C684
	0x036D72D0 LDR X8, [X0 + 0xC0]
	0x036D72D4 LDR X0, [X8 + 0x8]
	0x036D72D8 LDRB W8, [X0 + 0x135]
	0x036D72DC TBNZ X8, 0x0, 0x36D72E4
	0x036D72E0 BL 0x1C5C684
	0x036D72E4 LDR W8, [X0 + 0xE0]
	0x036D72E8 CBNZ W8, 0x36D72F0
	0x036D72EC BL 0x1C16DFC
	0x036D72F0 LDR X0, [X24 + 0x20]
	0x036D72F4 LDRB W8, [X0 + 0x135]
	0x036D72F8 TBNZ X8, 0x0, 0x36D7300
	0x036D72FC BL 0x1C5C684
	0x036D7300 LDR X8, [X0 + 0xC0]
	0x036D7304 LDR X0, [X8 + 0x8]
	0x036D7308 LDRB W8, [X0 + 0x135]
	0x036D730C TBNZ X8, 0x0, 0x36D7314
	0x036D7310 BL 0x1C5C684
	0x036D7314 LDR X8, [X0 + 0xB8]
	0x036D7318 LDR X0, [X8]
	0x036D731C CBZ X0, 0x36D7834
	0x036D7320 LDR X8, [X0]
	0x036D7324 ADD W20, W20, 0x2
	0x036D7328 LDP X9, X2, [X8 + 0x178]
	0x036D732C MOV W1, W20
	0x036D7330 BLR X9
	0x036D7334 LDR X8, [X31 + 0x68]
	0x036D7338 MOV X4, X0
	0x036D733C LDR X1, [X8 + 0x20]
	0x036D7340 STR X0, [X8 + 0x40]
	0x036D7344 CBZ X1, 0x36D7838
	0x036D7348 LDR X8, [X21]
	0x036D734C LDR X8, [X8 + 0xB8]
	0x036D7350 LDR X0, [X8 + 0x8]
	0x036D7354 CBZ X0, 0x36D783C
	0x036D7358 LDR X8, [X0]
	0x036D735C LDR W3, [X1 + 0x10]
	0x036D7360 LDR X9, [X8 + 0x278]
	0x036D7364 LDR X6, [X8 + 0x280]
	0x036D7368 MOVZ W5, 0x2
	0x036D736C MOV W2, W31
	0x036D7370 BLR X9
	0x036D7374 LDR X8, [X31 + 0x68]
	0x036D7378 LDR X0, [X8 + 0x40]
	0x036D737C CBZ X0, 0x36D7818
	0x036D7380 LDR W9, [X0 + 0x18]
	0x036D7384 CBZ W9, 0x36D781C
	0x036D7388 LDR W8, [X8 + 0x28]
	0x036D738C UBFM W9, W8, 0x8, 0x1F
	0x036D7390 STRB W9, [X0 + 0x20]
	0x036D7394 LDR X9, [X31 + 0x68]
	0x036D7398 LDR X9, [X9 + 0x40]
	0x036D739C CBZ X9, 0x36D7820
	0x036D73A0 LDR W10, [X9 + 0x18]
	0x036D73A4 CMP W10, 0x1
	0x036D73A8 B.LS 0x36D7824
	0x036D73AC STRB W8, [X9 + 0x21]
	0x036D73B0 LDR X8, [X31 + 0x68]
	0x036D73B4 LDR X21, [X8 + 0x40]
	0x036D73B8 CBZ X21, 0x36D73D8
	0x036D73BC LDR W8, [X21 + 0x18]
	0x036D73C0 CMP W20, W8
	0x036D73C4 B.LS 0x36D73D0
	0x036D73C8 MOV X0, X31
	0x036D73CC BL 0x339D6EC
	0x036D73D0 UBFM X1, X20, 0x20, 0x1F
	0x036D73D4 B 0x36D73EC
	0x036D73D8 CBZ W20, 0x36D73E4
	0x036D73DC MOV X0, X31
	0x036D73E0 BL 0x339D6EC
	0x036D73E4 MOV X21, X31
	0x036D73E8 MOV X1, X31
	0x036D73EC ADRP X8, 0xA4F000
	0x036D73F0 LDR X8, [X8 + 0xD10]
	0x036D73F4 LDR X2, [X8]
	0x036D73F8 MOV X0, X21
	0x036D73FC BL 0x319DCE0
	0x036D7400 CBZ X19, 0x36D7828
	0x036D7404 LDR X8, [X31 + 0x68]
	0x036D7408 MOV X3, X0
	0x036D740C MOV X4, X1
	0x036D7410 LDR X5, [X8 + 0x38]
	0x036D7414 MOVZ W1, 0x8
	0x036D7418 MOVZ W2, 0x1
	0x036D741C MOV X0, X19
	0x036D7420 BL 0x36D0CD8
	0x036D7424 MOV X20, X0
	0x036D7428 LDR X0, [X22]
	0x036D742C MOV X21, X1
	0x036D7430 LDR W8, [X0 + 0xE0]
	0x036D7434 CBNZ W8, 0x36D743C
	0x036D7438 BL 0x1C16DFC
	0x036D743C ADRP X24, 0xD05000
	0x036D7440 LDRB W8, [X24 + 0x924]
	0x036D7444 AND X9, X21, 0xFFFF
	0x036D7448 STP X20, X9, [X31 + 0x40]
	0x036D744C CBNZ W8, 0x36D7464
	0x036D7450 ADRP X0, 0xA46000
	0x036D7454 LDR X0, [X0 + 0xE40]
	0x036D7458 BL 0x1C16CF4
	0x036D745C MOVZ W8, 0x1
	0x036D7460 STRB W8, [X24 + 0x924]
	0x036D7464 LDR X0, [X22]
	0x036D7468 LDR W8, [X0 + 0xE0]
	0x036D746C CBNZ W8, 0x36D7474
	0x036D7470 BL 0x1C16DFC
	0x036D7474 ADRP X20, 0xD05000
	0x036D7478 LDRB W8, [X20 + 0x4E4]
	0x036D747C CBNZ W8, 0x36D74A0
	0x036D7480 ADRP X0, 0xA4B000
	0x036D7484 LDR X0, [X0 + 0xEA8]
	0x036D7488 BL 0x1C16CF4
	0x036D748C ADRP X0, 0xA1D000
	0x036D7490 LDR X0, [X0 + 0x7B8]
	0x036D7494 BL 0x1C16CF4
	0x036D7498 MOVZ W8, 0x1
	0x036D749C STRB W8, [X20 + 0x4E4]
	0x036D74A0 LDR X20, [X31 + 0x40]
	0x036D74A4 CBZ X20, 0x36D7544
	0x036D74A8 ADRP X9, 0xA1D000
	0x036D74AC LDR X9, [X9 + 0x7B8]
	0x036D74B0 LDR X8, [X20]
	0x036D74B4 LDR X9, [X9]
	0x036D74B8 LDRB W11, [X8 + 0x130]
	0x036D74BC LDRB W10, [X9 + 0x130]
	0x036D74C0 CMP W11, W10
	0x036D74C4 B.CC 0x36D74DC
	0x036D74C8 LDR X11, [X8 + 0xC8]
	0x036D74CC ADD X10, X11, X10, 0x3, LSL
	0x036D74D0 LDUR X10, [X10 - 0x8]
	0x036D74D4 CMP X10, X9
	0x036D74D8 B.EQ 0x36D77B0
	0x036D74DC ADRP X10, 0xA4B000
	0x036D74E0 LDRH W21, [X31 + 0x48]
	0x036D74E4 LDR X10, [X10 + 0xEA8]
	0x036D74E8 LDRH W9, [X8 + 0x12E]
	0x036D74EC LDR X1, [X10]
	0x036D74F0 CBZ X9, 0x36D7514
	0x036D74F4 LDR X10, [X8 + 0xB0]
	0x036D74F8 ADD X10, X10, 0x8
	0x036D74FC LDUR X11, [X10 - 0x8]
	0x036D7500 CMP X11, X1
	0x036D7504 B.EQ 0x36D7524
	0x036D7508 SUBS X9, X9, 0x1
	0x036D750C ADD X10, X10, 0x10
	0x036D7510 B.NE 0x36D74FC
	0x036D7514 MOV X0, X20
	0x036D7518 MOV W2, W31
	0x036D751C BL 0x1C5C788
	0x036D7520 B 0x36D7530
	0x036D7524 LDRSW X9, [X10]
	0x036D7528 ADD X8, X8, X9, 0x4, LSL
	0x036D752C ADD X0, X8, 0x138
	0x036D7530 LDP X8, X2, [X0]
	0x036D7534 MOV X0, X20
	0x036D7538 MOV W1, W21
	0x036D753C BLR X8
	0x036D7540 CBZ W0, 0x36D77C0
	0x036D7544 ADRP X20, 0xD05000
	0x036D7548 LDRB W8, [X20 + 0x925]
	0x036D754C CBNZ W8, 0x36D7564
	0x036D7550 ADRP X0, 0xA46000
	0x036D7554 LDR X0, [X0 + 0xE40]
	0x036D7558 BL 0x1C16CF4
	0x036D755C MOVZ W8, 0x1
	0x036D7560 STRB W8, [X20 + 0x925]
	0x036D7564 LDR X0, [X22]
	0x036D7568 LDR W8, [X0 + 0xE0]
	0x036D756C CBNZ W8, 0x36D7574
	0x036D7570 BL 0x1C16DFC
	0x036D7574 ADRP X20, 0xD05000
	0x036D7578 LDRB W8, [X20 + 0x4E6]
	0x036D757C CBNZ W8, 0x36D75A0
	0x036D7580 ADRP X0, 0xA4B000
	0x036D7584 LDR X0, [X0 + 0xEA8]
	0x036D7588 BL 0x1C16CF4
	0x036D758C ADRP X0, 0xA1D000
	0x036D7590 LDR X0, [X0 + 0x7B8]
	0x036D7594 BL 0x1C16CF4
	0x036D7598 MOVZ W8, 0x1
	0x036D759C STRB W8, [X20 + 0x4E6]
	0x036D75A0 LDR X20, [X31 + 0x40]
	0x036D75A4 CBZ X20, 0x36D7644
	0x036D75A8 ADRP X9, 0xA1D000
	0x036D75AC LDR X9, [X9 + 0x7B8]
	0x036D75B0 LDR X8, [X20]
	0x036D75B4 LDR X9, [X9]
	0x036D75B8 LDRB W11, [X8 + 0x130]
	0x036D75BC LDRB W10, [X9 + 0x130]
	0x036D75C0 CMP W11, W10
	0x036D75C4 B.CC 0x36D75DC
	0x036D75C8 LDR X11, [X8 + 0xC8]
	0x036D75CC ADD X10, X11, X10, 0x3, LSL
	0x036D75D0 LDUR X10, [X10 - 0x8]
	0x036D75D4 CMP X10, X9
	0x036D75D8 B.EQ 0x36D77A0
	0x036D75DC ADRP X10, 0xA4B000
	0x036D75E0 LDRH W21, [X31 + 0x48]
	0x036D75E4 LDR X10, [X10 + 0xEA8]
	0x036D75E8 LDRH W9, [X8 + 0x12E]
	0x036D75EC LDR X1, [X10]
	0x036D75F0 CBZ X9, 0x36D7614
	0x036D75F4 LDR X10, [X8 + 0xB0]
	0x036D75F8 ADD X10, X10, 0x8
	0x036D75FC LDUR X11, [X10 - 0x8]
	0x036D7600 CMP X11, X1
	0x036D7604 B.EQ 0x36D7624
	0x036D7608 SUBS X9, X9, 0x1
	0x036D760C ADD X10, X10, 0x10
	0x036D7610 B.NE 0x36D75FC
	0x036D7614 MOVZ W2, 0x2
	0x036D7618 MOV X0, X20
	0x036D761C BL 0x1C5C788
	0x036D7620 B 0x36D7634
	0x036D7624 LDR W9, [X10]
	0x036D7628 ADD W9, W9, 0x2
	0x036D762C ADD X8, X8, W9, 0x4, SXTW
	0x036D7630 ADD X0, X8, 0x138
	0x036D7634 LDP X8, X2, [X0]
	0x036D7638 MOV X0, X20
	0x036D763C MOV W1, W21
	0x036D7640 BLR X8
	0x036D7644 MOVZ W20, 0x9
	0x036D7648 ADD X0, X31, 0x8
	0x036D764C BL 0x1BC7858
	0x036D7650 CMP W20, 0x9
	0x036D7654 B.EQ 0x36D765C
	0x036D7658 CBNZ W20, 0x36D7700
	0x036D765C CBZ X19, 0x36D780C
	0x036D7660 LDR X22, [X19 + 0x30]
	0x036D7664 STRB W31, [X31 + 0x3C]
	0x036D7668 ADD X1, X31, 0x3C
	0x036D766C MOV X0, X22
	0x036D7670 MOV X2, X31
	0x036D7674 BL 0x33DE64C
	0x036D7678 LDR W8, [X19 + 0x58]
	0x036D767C MOVZ W9, 0x1
	0x036D7680 MOV X20, X31
	0x036D7684 STRB W9, [X19 + 0x5D]
	0x036D7688 CMP W8, 0x4
	0x036D768C B.GT 0x36D7698
	0x036D7690 MOVZ W8, 0x3
	0x036D7694 STR W8, [X19 + 0x58]
	0x036D7698 MOVZ W21, 0xB
	0x036D769C LDR W8, [X31 + 0x5C]
	0x036D76A0 TBZ X8, 0x1F, 0x36D76B8
	0x036D76A4 LDRB W8, [X31 + 0x3C]
	0x036D76A8 CBZ W8, 0x36D76B8
	0x036D76AC MOV X0, X22
	0x036D76B0 MOV X1, X31
	0x036D76B4 BL 0x33E14E4
	0x036D76B8 CBNZ X20, 0x36D7810
	0x036D76BC CMP W21, 0xB
	0x036D76C0 B.EQ 0x36D76C8
	0x036D76C4 CBNZ W21, 0x36D7700
	0x036D76C8 LDRB W8, [X19 + 0x18]
	0x036D76CC CBZ W8, 0x36D7718
	0x036D76D0 LDR X8, [X31 + 0x68]
	0x036D76D4 MOVN W9, 0x1
	0x036D76D8 STR W9, [X8]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+32], X30
	003 Move [X31+40], X27
	004 Move [X31+48], X26
	005 Move [X31+56], X25
	006 Move [X31+64], X24
	007 Move [X31+72], X23
	008 Move [X31+80], X22
	009 Move [X31+88], X21
	010 Move [X31+96], X20
	011 Move [X31+104], X19
	012 Move X20, 0xD0A000
	013 Move W8, [X20+2729]
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {48}
	019 Move X0, 0xA6A000
	020 Move X0, [X0+304]
	021 Call 0x1C17CF4
	022 Move X0, 0xA6A000
	023 Move X0, [X0+312]
	024 Call 0x1C17CF4
	025 Move X0, 0xA20000
	026 Move X0, [X0+640]
	027 Call 0x1C17CF4
	028 Move X0, 0xA46000
	029 Move X0, [X0+2912]
	030 Call 0x1C17CF4
	031 Move X0, 0xA48000
	032 Move X0, [X0+720]
	033 Call 0x1C17CF4
	034 Move X0, 0xA48000
	035 Move X0, [X0+736]
	036 Call 0x1C17CF4
	037 Move X0, 0xA50000
	038 Move X0, [X0+3344]
	039 Call 0x1C17CF4
	040 Move X0, 0xA48000
	041 Move X0, [X0+752]
	042 Call 0x1C17CF4
	043 Move X0, 0xA47000
	044 Move X0, [X0+3648]
	045 Call 0x1C17CF4
	046 Move W8, 1
	047 Move [X20+2729], W8
	048 Move [X31+16], X31
	049 Move [X31+24], X31
	050 Move [X31], X31
	051 Move [X31+8], X31
	052 Move X23, 0xA20000
	053 Move X24, 0xA47000
	054 Move W8, [X19]
	055 Move X20, [X19+56]
	056 Move X23, [X23+640]
	057 Move X24, [X24+3648]
	058 Compare W8, 0
	059 JumpIfEqual {69}
	060 NotImplemented "Instruction CMP not yet implemented."
	061 NotImplemented "Instruction LDUR not yet implemented."
	062 Move TEMP, 0
	063 Not TEMP
	064 Move W8, TEMP
	065 Move [X31], V0
	066 Move [X19+88], X31
	067 Move [X19+96], X31
	068 Move [X19], W8
	069 NotImplemented "Instruction LDUR not yet implemented."
	070 Move TEMP, 0
	071 Not TEMP
	072 Move W8, TEMP
	073 Move [X31+1], V0
	074 Move [X19+72], X31
	075 Move [X19+80], X31
	076 Move [X19], W8
	077 Add X0, X31, 16
	078 Move X1, X31
	079 Call ConfiguredTaskAwaiter.GetResult, X0
	080 Move X1, [X19+40]
	081 NotImplemented "Instruction CMP not yet implemented."
	082 Compare X20, 0
	083 JumpIfEqual {400}
	084 NotImplemented "Instruction LDRSW not yet implemented."
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Move X2, [X19+64]
	087 Move W3, 1
	088 Move X0, X20
	089 Call ManagedWebSocket.EnsureBufferContainsAsync, X0, X1, X2, X3
	090 Compare X0, 0
	091 JumpIfEqual {401}
	092 Move W1, W31
	093 Move X2, X31
	094 Call Task.ConfigureAwait, X0, X1
	095 Move [X31+16], X0
	096 Move [X31+24], X1
	097 Add X0, X31, 16
	098 Move X1, X31
	099 Call ConfiguredTaskAwaiter.get_IsCompleted, X0
	100 Move TEMP, X0
	101 And TEMP, TEMP, 1
	102 Compare TEMP, 1
	103 JumpIfEqual {77}
	104 Move [X19], W31
	105 Move V0, [X31+1]
	106 Move [X19+72], V0
	107 Move X0, [X23]
	108 Move W8, [X0+224]
	109 Compare W8, 0
	110 JumpIfNotEqual {112}
	111 Call 0x1C17DFC
	112 Move X8, 0xA6A000
	113 Move X8, [X8+304]
	114 Add X0, X19, 8
	115 Move X3, [X8]
	116 Add X1, X31, 16
	117 Move X2, X19
	118 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	119 Move W8, [X19+32]
	120 NotImplemented "Instruction CMP not yet implemented."
	121 Compare X20, 0
	122 JumpIfEqual {399}
	123 Move W8, [X20+24]
	124 Compare W8, 0
	125 JumpIfEqual {161}
	126 Move X8, 0xA48000
	127 Move X8, [X8+736]
	128 Add X0, X20, 56
	129 Move X1, [X8]
	130 Call 0x2985784
	131 Move X8, 0xA48000
	132 NotImplemented "Instruction LDRSW not yet implemented."
	133 Move X26, [X19+40]
	134 Move X8, [X8+752]
	135 Move X21, X0
	136 Move X22, [X8]
	137 Subtract W8, W1, W25
	138 NotImplemented "Instruction CMP not yet implemented."
	139 Move X0, X31
	140 Call ThrowHelper.ThrowArgumentOutOfRangeException
	141 Move X0, [X22+32]
	142 Move W8, [X0+309]
	143 Move TEMP, X8
	144 And TEMP, TEMP, 1
	145 Compare TEMP, 1
	146 JumpIfEqual {148}
	147 Call 0x1C5D684
	148 Move X8, 0xA46000
	149 Move X8, [X8+2912]
	150 Move W22, [X19+48]
	151 Move X0, [X8]
	152 Move W8, [X0+224]
	153 Compare W8, 0
	154 JumpIfNotEqual {156}
	155 Call 0x1C17DFC
	156 And X1, X26, 0
	157 Add X0, X21, X25
	158 Move W2, W22
	159 Move W3, W31
	160 Call ManagedWebSocket.ApplyMask, X0, X1, X2
	161 Move X8, 0xA48000
	162 Move W22, [X20+136]
	163 Move W26, [X20+68]
	164 Move W25, [X19+40]
	165 Move X8, [X8+720]
	166 Move X21, [X8]
	167 And W8, W26, 0x7FFFFFFF
	168 Subtract W8, W8, W22
	169 NotImplemented "Instruction CMP not yet implemented."
	170 Move X0, X31
	171 Call ThrowHelper.ThrowArgumentOutOfRangeException
	172 Move X0, [X21+32]
	173 Move X21, [X20+56]
	174 Move W27, [X20+64]
	175 Move W8, [X0+309]
	176 Move TEMP, X8
	177 And TEMP, TEMP, 1
	178 Compare TEMP, 1
	179 JumpIfEqual {181}
	180 Call 0x1C5D684
	181 Move X9, 0xA50000
	182 Move X9, [X9+3344]
	183 And W8, W26, 0x80000000
	184 Or W8, W8, W25
	185 Add W1, W27, W22
	186 Move X2, [X9]
	187 NotImplemented "Instruction BFM not yet implemented."
	188 Move X0, X21
	189 Call 0x319ECE0, X0
	190 Move X3, X0
	191 Move X4, X1
	192 Move W1, 10
	193 Move W2, 1
	194 Move X0, X20
	195 Move X5, X31
	196 Call ManagedWebSocket.SendFrameAsync, X0, X1, X2, X3, X4
	197 Move X21, X0
	198 Move X0, [X24]
	199 Move X22, X1
	200 Move W8, [X0+224]
	201 Compare W8, 0
	202 JumpIfNotEqual {204}
	203 Call 0x1C17DFC
	204 Move X25, 0xD06000
	205 Move W8, [X25+2340]
	206 And X9, X22, 0xFFFF
	207 Move [X31], X21
	208 Move [X31+8], X9
	209 Compare W8, 0
	210 JumpIfNotEqual {216}
	211 Move X0, 0xA47000
	212 Move X0, [X0+3648]
	213 Call 0x1C17CF4
	214 Move W8, 1
	215 Move [X25+2340], W8
	216 Move X0, [X24]
	217 Move W8, [X0+224]
	218 Compare W8, 0
	219 JumpIfNotEqual {221}
	220 Call 0x1C17DFC
	221 Move X21, 0xD06000
	222 Move W8, [X21+1252]
	223 Compare W8, 0
	224 JumpIfNotEqual {233}
	225 Move X0, 0xA4C000
	226 Move X0, [X0+3752]
	227 Call 0x1C17CF4
	228 Move X0, 0xA1E000
	229 Move X0, [X0+1976]
	230 Call 0x1C17CF4
	231 Move W8, 1
	232 Move [X21+1252], W8
	233 Move X21, [X31]
	234 Compare X21, 0
	235 JumpIfEqual {273}
	236 Move X9, 0xA1E000
	237 Move X9, [X9+1976]
	238 Move X8, [X21]
	239 Move X9, [X9]
	240 Move W11, [X8+304]
	241 Move W10, [X9+304]
	242 NotImplemented "Instruction CMP not yet implemented."
	243 Move X11, [X8+200]
	244 Add X10, X11, X10
	245 NotImplemented "Instruction LDUR not yet implemented."
	246 NotImplemented "Instruction CMP not yet implemented."
	247 Move X10, 0xA4C000
	248 NotImplemented "Instruction LDRH not yet implemented."
	249 Move X10, [X10+3752]
	250 NotImplemented "Instruction LDRH not yet implemented."
	251 Move X1, [X10]
	252 Compare X9, 0
	253 JumpIfEqual {260}
	254 Move X10, [X8+176]
	255 Add X10, X10, 8
	256 NotImplemented "Instruction LDUR not yet implemented."
	257 NotImplemented "Instruction CMP not yet implemented."
	258 Subtract X9, X9, 1
	259 Add X10, X10, 16
	260 Move X0, X21
	261 Move W2, W31
	262 Call 0x1C5D788
	263 NotImplemented "Instruction LDRSW not yet implemented."
	264 Add X8, X8, X9
	265 Add X0, X8, 312
	266 Move X8, [X0]
	267 Move X2, [X0+8]
	268 Move X0, X21
	269 Move W1, W22
	270 NotImplemented "Instruction BLR not yet implemented."
	271 Compare W0, 0
	272 JumpIfEqual {382}
	273 Move X21, 0xD06000
	274 Move W8, [X21+2341]
	275 Compare W8, 0
	276 JumpIfNotEqual {282}
	277 Move X0, 0xA47000
	278 Move X0, [X0+3648]
	279 Call 0x1C17CF4
	280 Move W8, 1
	281 Move [X21+2341], W8
	282 Move X0, [X24]
	283 Move W8, [X0+224]
	284 Compare W8, 0
	285 JumpIfNotEqual {287}
	286 Call 0x1C17DFC
	287 Move X21, 0xD06000
	288 Move W8, [X21+1254]
	289 Compare W8, 0
	290 JumpIfNotEqual {299}
	291 Move X0, 0xA4C000
	292 Move X0, [X0+3752]
	293 Call 0x1C17CF4
	294 Move X0, 0xA1E000
	295 Move X0, [X0+1976]
	296 Call 0x1C17CF4
	297 Move W8, 1
	298 Move [X21+1254], W8
	299 Move X21, [X31]
	300 Compare X21, 0
	301 JumpIfEqual {338}
	302 Move X9, 0xA1E000
	303 Move X9, [X9+1976]
	304 Move X8, [X21]
	305 Move X9, [X9]
	306 Move W11, [X8+304]
	307 Move W10, [X9+304]
	308 NotImplemented "Instruction CMP not yet implemented."
	309 Move X11, [X8+200]
	310 Add X10, X11, X10
	311 NotImplemented "Instruction LDUR not yet implemented."
	312 NotImplemented "Instruction CMP not yet implemented."
	313 Move X10, 0xA4C000
	314 NotImplemented "Instruction LDRH not yet implemented."
	315 Move X10, [X10+3752]
	316 NotImplemented "Instruction LDRH not yet implemented."
	317 Move X1, [X10]
	318 Compare X9, 0
	319 JumpIfEqual {326}
	320 Move X10, [X8+176]
	321 Add X10, X10, 8
	322 NotImplemented "Instruction LDUR not yet implemented."
	323 NotImplemented "Instruction CMP not yet implemented."
	324 Subtract X9, X9, 1
	325 Add X10, X10, 16
	326 Move W2, 2
	327 Move X0, X21
	328 Call 0x1C5D788
	329 Move W9, [X10]
	330 Add W9, W9, 2
	331 Add X8, X8, W9
	332 Add X0, X8, 312
	333 Move X8, [X0]
	334 Move X2, [X0+8]
	335 Move X0, X21
	336 Move W1, W22
	337 NotImplemented "Instruction BLR not yet implemented."
	338 Move X8, [X19+40]
	339 NotImplemented "Instruction CMP not yet implemented."
	340 Compare X20, 0
	341 JumpIfEqual {398}
	342 Move W10, [X20+136]
	343 Move W9, [X20+140]
	344 Subtract W9, W9, W8
	345 Add W8, W10, W8
	346 Move [X20+136], W8
	347 Move [X20+140], W9
	348 Move TEMP, 1
	349 Not TEMP
	350 Move W8, TEMP
	351 Move [X19+8], W8
	352 Move X0, [X23]
	353 Move W8, [X0+224]
	354 Compare W8, 0
	355 JumpIfNotEqual {357}
	356 Call 0x1C17DFC
	357 Move X0, X19
	358 Move X1, X31
	359 Call AsyncTaskMethodBuilder.SetResult, X0
	360 Move X20, [X31+96]
	361 Move X19, [X31+104]
	362 Move X22, [X31+80]
	363 Move X21, [X31+88]
	364 Move X24, [X31+64]
	365 Move X23, [X31+72]
	366 Move X26, [X31+48]
	367 Move X25, [X31+56]
	368 Move X30, [X31+32]
	369 Move X27, [X31+40]
	370 Add X31, X31, 112
	371 Return 
	372 Move X0, X21
	373 Move X1, X31
	374 Call TaskAwaiter.ValidateEnd, X0
	375 Move X0, X21
	376 Move X1, X31
	377 Call Task.get_IsCompleted, X0
	378 Move TEMP, X0
	379 And TEMP, TEMP, 1
	380 Compare TEMP, 1
	381 JumpIfEqual {273}
	382 Move W8, 1
	383 Move [X19], W8
	384 Move V0, [X31]
	385 Move [X19+88], V0
	386 Move X0, [X23]
	387 Move W8, [X0+224]
	388 Compare W8, 0
	389 JumpIfNotEqual {391}
	390 Call 0x1C17DFC
	391 Move X8, 0xA6A000
	392 Move X8, [X8+312]
	393 Add X0, X19, 8
	394 Move X3, [X8]
	395 Add X1, X31, 0
	396 Move X2, X19
	397 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	398 Call 0x1C17F20
	399 Call 0x1C17F20
	400 Call 0x1C17F20
	401 Call 0x1C17F20
	402 Move X20, X0
	403 NotImplemented "Instruction CMP not yet implemented."
	404 Move X0, X20
	405 Call 0x3EB2AD0
	406 Move X20, X0
	407 Move X0, 0xA1D000
	408 Move X0, [X0+2000]
	409 Call 0x1C17D08
	410 Move X8, [X20]
	411 Move X1, [X8]
	412 Call 0x1C18270
	413 Move TEMP, X0
	414 And TEMP, TEMP, 1
	415 Compare TEMP, 1
	416 JumpIfNotEqual {434}
	417 Move X20, [X20]
	418 Call 0x3EB2AE0
	419 Move TEMP, 1
	420 Not TEMP
	421 Move W8, TEMP
	422 Move [X19+8], W8
	423 Move X0, 0xA20000
	424 Move X0, [X0+640]
	425 Call 0x1C17D08
	426 Move W8, [X0+224]
	427 Compare W8, 0
	428 JumpIfNotEqual {430}
	429 Call 0x1C17DFC
	430 Move X0, X19
	431 Move X1, X20
	432 Move X2, X31
	433 Call AsyncTaskMethodBuilder.SetException, X0, X1
	434 Move W0, 8
	435 Call 0x3EB2AF0
	436 Move X8, [X20]
	437 Move [X0], X8
	438 Move X1, 0x7DE000
	439 Add X1, X1, 3672
	440 Move X2, X31
	441 Call 0x3EB2B00
	442 Move X20, X0
	443 Call 0x3EB2AE0
	444 Move X0, X20
	445 Call 0x1D2D690
	446 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x036D76DC STR X31, [X8 + 0x40]
	0x036D76E0 LDR X0, [X23]
	0x036D76E4 ADD X19, X8, 0x8
	0x036D76E8 LDR W9, [X0 + 0xE0]
	0x036D76EC CBNZ W9, 0x36D76F4
	0x036D76F0 BL 0x1C16DFC
	0x036D76F4 MOV X0, X19
	0x036D76F8 MOV X1, X31
	0x036D76FC BL 0x32C4864
	0x036D7700 LDP X20, X19, [X31 + 0x90]
	0x036D7704 LDP X22, X21, [X31 + 0x80]
	0x036D7708 LDP X24, X23, [X31 + 0x70]
	0x036D770C LDR X30, [X31 + 0x60]
	0x036D7710 ADD X31, X31, 0xA0
	0x036D7714 RET
	0x036D7718 LDRB W8, [X19 + 0x5E]
	0x036D771C CBZ W8, 0x36D76D0
	0x036D7720 LDR X8, [X31 + 0x68]
	0x036D7724 LDR X1, [X8 + 0x38]
	0x036D7728 MOV X0, X19
	0x036D772C BL 0x36D2A70
	0x036D7730 CBZ X0, 0x36D7840
	0x036D7734 MOV W1, W31
	0x036D7738 MOV X2, X31
	0x036D773C BL 0x33ED3A0
	0x036D7740 STP X0, X1, [X31 + 0x20]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xD0A000
	007 Move X22, 0xA20000
	008 Move W8, [X21+2730]
	009 Move X22, [X22+640]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xA20000
	017 Move X0, [X0+640]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2730], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Add X0, X20, 8
	027 Move X1, X19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X2, X31
	033 Move X30, [X31+48]
	034 Call AsyncTaskMethodBuilder.SetStateMachine, X0, X1
	035 Return 

