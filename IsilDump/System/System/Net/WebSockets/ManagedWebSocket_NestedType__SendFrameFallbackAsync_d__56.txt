Type: System.Net.WebSockets.ManagedWebSocket/<SendFrameFallbackAsync>d__56

Method: System.Void MoveNext()

Disassembly:
	0x036D54D8 ADRP X8, 0xA6B000
	0x036D54DC LDR X8, [X8 + 0x110]
	0x036D54E0 ADD X0, X19, 0x8
	0x036D54E4 LDR X3, [X8]
	0x036D54E8 ADD X1, X31, 0x10
	0x036D54EC MOV X2, X19
	0x036D54F0 BL 0x218BC94
	0x036D54F4 B 0x36D545C
	0x036D54F8 CMP X1, 0x2
	0x036D54FC B.LT 0x36D53B4
	0x036D5500 LDRSW X8, [X20 + 0x8C]
	0x036D5504 CMP X1, X8
	0x036D5508 B.LE 0x36D5060
	0x036D550C LDR X2, [X19 + 0x40]
	0x036D5510 MOVZ W3, 0x1
	0x036D5514 MOV X0, X20
	0x036D5518 BL 0x36D3048
	0x036D551C CBZ X0, 0x36D55B0
	0x036D5520 MOV W1, W31
	0x036D5524 MOV X2, X31
	0x036D5528 BL 0x33ED3A0
	0x036D552C STP X0, X1, [X31 + 0x10]
	0x036D5530 ADD X0, X31, 0x10
	0x036D5534 MOV X1, X31
	0x036D5538 BL 0x32C40D4
	0x036D553C TBNZ X0, 0x0, 0x36D5050
	0x036D5540 MOVZ W8, 0x1
	0x036D5544 STR W8, [X19]
	0x036D5548 LDR V0, [X31 + 0x1]
	0x036D554C STUR V0, [X19 + 0x58]
	0x036D5550 LDR X0, [X24]
	0x036D5554 LDR W8, [X0 + 0xE0]
	0x036D5558 CBNZ W8, 0x36D5560
	0x036D555C BL 0x1C16DFC
	0x036D5560 ADRP X8, 0xA6B000
	0x036D5564 LDR X8, [X8 + 0x110]
	0x036D5568 ADD X0, X19, 0x8
	0x036D556C LDR X3, [X8]
	0x036D5570 ADD X1, X31, 0x10
	0x036D5574 MOV X2, X19
	0x036D5578 BL 0x218BC94
	0x036D557C B 0x36D545C
	0x036D5580 BL 0x1C16F20
	0x036D5584 BL 0x1C16F28
	0x036D5588 BL 0x1C16F28
	0x036D558C BL 0x1C16F20
	0x036D5590 BL 0x1C16F20
	0x036D5594 MOV X0, X21
	0x036D5598 BL 0x1C16F18
	0x036D559C BL 0x1C16F20
	0x036D55A0 BL 0x1C16F20
	0x036D55A4 BL 0x1C16F20
	0x036D55A8 BL 0x1C16F20
	0x036D55AC BL 0x1C16F20
	0x036D55B0 BL 0x1C16F20
	0x036D55B4 B 0x36D57E8
	0x036D55B8 B 0x36D57E8
	0x036D55BC B 0x36D57E8
	0x036D55C0 B 0x36D57E8
	0x036D55C4 B 0x36D57E8
	0x036D55C8 B 0x36D57E8
	0x036D55CC B 0x36D5610
	0x036D55D0 B 0x36D57E8
	0x036D55D4 B 0x36D57E8
	0x036D55D8 B 0x36D57E8
	0x036D55DC B 0x36D57E8
	0x036D55E0 B 0x36D57E8
	0x036D55E4 B 0x36D57E8
	0x036D55E8 B 0x36D57E8
	0x036D55EC B 0x36D57E8
	0x036D55F0 B 0x36D57E8
	0x036D55F4 B 0x36D57E8
	0x036D55F8 B 0x36D57E8
	0x036D55FC B 0x36D5610
	0x036D5600 B 0x36D5610
	0x036D5604 B 0x36D5610
	0x036D5608 B 0x36D5610
	0x036D560C B 0x36D5610
	0x036D5610 MOV X21, X1
	0x036D5614 MOV X22, X0
	0x036D5618 CMP W21, 0x1
	0x036D561C B.NE 0x36D57F0
	0x036D5620 MOV X0, X22
	0x036D5624 BL 0x3EB1AD0
	0x036D5628 MOV X22, X0
	0x036D562C ADRP X21, 0xA58000
	0x036D5630 LDR X21, [X21 + 0xBE8]
	0x036D5634 MOV X0, X21
	0x036D5638 BL 0x1C16D08
	0x036D563C LDR X8, [X22]
	0x036D5640 LDR X1, [X8]
	0x036D5644 BL 0x1C17270
	0x036D5648 TBZ X0, 0x0, 0x36D56E4
	0x036D564C LDR X22, [X22]
	0x036D5650 BL 0x3EB1AE0
	0x036D5654 CBZ X22, 0x36D5668
	0x036D5658 LDR X1, [X21]
	0x036D565C LDR X8, [X22]
	0x036D5660 CMP X8, X1
	0x036D5664 B.NE 0x36D5710
	0x036D5668 CBZ X20, 0x36D5708
	0x036D566C MOVZ W1, 0x3EA
	0x036D5670 MOVZ W2, 0x2
	0x036D5674 MOV X0, X20
	0x036D5678 MOV X3, X22
	0x036D567C BL 0x36D2C68
	0x036D5680 CBZ X0, 0x36D570C
	0x036D5684 MOV W1, W31
	0x036D5688 MOV X2, X31
	0x036D568C BL 0x33ED3A0
	0x036D5690 STP X0, X1, [X31 + 0x10]
	0x036D5694 ADD X0, X31, 0x10
	0x036D5698 MOV X1, X31
	0x036D569C BL 0x32C40D4
	0x036D56A0 TBNZ X0, 0x0, 0x36D502C
	0x036D56A4 MOVZ W8, 0x3
	0x036D56A8 STR W8, [X19]
	0x036D56AC LDR V0, [X31 + 0x1]
	0x036D56B0 STUR V0, [X19 + 0x58]
	0x036D56B4 LDR X0, [X24]
	0x036D56B8 LDR W8, [X0 + 0xE0]
	0x036D56BC CBNZ W8, 0x36D56C4
	0x036D56C0 BL 0x1C16DFC
	0x036D56C4 ADRP X8, 0xA6B000
	0x036D56C8 LDR X8, [X8 + 0x110]
	0x036D56CC ADD X0, X19, 0x8
	0x036D56D0 LDR X3, [X8]
	0x036D56D4 ADD X1, X31, 0x10
	0x036D56D8 MOV X2, X19
	0x036D56DC BL 0x218BC94
	0x036D56E0 B 0x36D545C
	0x036D56E4 MOVZ W0, 0x8
	0x036D56E8 BL 0x3EB1AF0
	0x036D56EC LDR X8, [X22]
	0x036D56F0 STR X8, [X0]
	0x036D56F4 ADRP X1, 0x7DF000
	0x036D56F8 ADD X1, X1, 0xE58
	0x036D56FC MOV X2, X31
	0x036D5700 BL 0x3EB1B00
	0x036D5704 B 0x36D5880
	0x036D5708 BL 0x1C16F20
	0x036D570C BL 0x1C16F20
	0x036D5710 MOV X0, X22
	0x036D5714 BL 0x1C171E0
	0x036D5718 B 0x36D57E8
	0x036D571C B 0x36D57E8
	0x036D5720 B 0x36D57E8
	0x036D5724 B 0x36D57E8
	0x036D5728 B 0x36D57E8
	0x036D572C B 0x36D57E8
	0x036D5730 B 0x36D57E8
	0x036D5734 MOV X21, X1
	0x036D5738 MOV X22, X0
	0x036D573C BL 0x3EB1AE0
	0x036D5740 B 0x36D57F0
	0x036D5744 B 0x36D57E8
	0x036D5748 B 0x36D57E8
	0x036D574C MOV X21, X1
	0x036D5750 CMP W21, 0x1
	0x036D5754 MOV X22, X0
	0x036D5758 B.NE 0x36D5780
	0x036D575C MOV X0, X22
	0x036D5760 BL 0x3EB1AD0
	0x036D5764 LDR X8, [X0]
	0x036D5768 STR X8, [X31]
	0x036D576C BL 0x3EB1AE0
	0x036D5770 LDR X21, [X31]
	0x036D5774 MOV W22, W31
	0x036D5778 TBNZ X25, 0x1F, 0x36D521C
	0x036D577C B 0x36D5230
	0x036D5780 STR X31, [X31]
	0x036D5784 TBZ X25, 0x1F, 0x36D579C
	0x036D5788 LDRB W8, [X31 + 0x2C]
	0x036D578C CBZ W8, 0x36D579C
	0x036D5790 MOV X0, X23
	0x036D5794 MOV X1, X31
	0x036D5798 BL 0x33E14E4
	0x036D579C LDR X8, [X31]
	0x036D57A0 CBZ X8, 0x36D57F0
	0x036D57A4 LDR X0, [X31]
	0x036D57A8 BL 0x1C16F18
	0x036D57AC MOV X21, X1
	0x036D57B0 MOV X22, X0
	0x036D57B4 TBNZ X25, 0x1F, 0x36D5788
	0x036D57B8 B 0x36D579C
	0x036D57BC B 0x36D57E8
	0x036D57C0 B 0x36D57E8
	0x036D57C4 B 0x36D57E8
	0x036D57C8 B 0x36D57E8
	0x036D57CC B 0x36D57E8
	0x036D57D0 B 0x36D57E8
	0x036D57D4 B 0x36D57E8
	0x036D57D8 B 0x36D57E8
	0x036D57DC B 0x36D57E8
	0x036D57E0 B 0x36D57E8
	0x036D57E4 B 0x36D57E8
	0x036D57E8 MOV X21, X1
	0x036D57EC MOV X22, X0
	0x036D57F0 CMP W21, 0x1
	0x036D57F4 B.NE 0x36D5888
	0x036D57F8 MOV X0, X22
	0x036D57FC BL 0x3EB1AD0
	0x036D5800 MOV X20, X0
	0x036D5804 ADRP X0, 0xA1E000
	0x036D5808 LDR X0, [X0 + 0x7D0]
	0x036D580C BL 0x1C16D08
	0x036D5810 LDR X8, [X20]
	0x036D5814 LDR X1, [X8]
	0x036D5818 BL 0x1C17270
	0x036D581C TBZ X0, 0x0, 0x36D5860
	0x036D5820 LDR X20, [X20]
	0x036D5824 BL 0x3EB1AE0
	0x036D5828 MOVN W8, 0x1
	0x036D582C STR X31, [X19 + 0x50]
	0x036D5830 STR W8, [X19], #0x8
	0x036D5834 ADRP X0, 0xA21000
	0x036D5838 LDR X0, [X0 + 0x280]
	0x036D583C BL 0x1C16D08
	0x036D5840 LDR W8, [X0 + 0xE0]
	0x036D5844 CBNZ W8, 0x36D584C
	0x036D5848 BL 0x1C16DFC
	0x036D584C MOV X0, X19
	0x036D5850 MOV X1, X20
	0x036D5854 MOV X2, X31
	0x036D5858 BL 0x32C4908
	0x036D585C B 0x36D545C
	0x036D5860 MOVZ W0, 0x8
	0x036D5864 BL 0x3EB1AF0
	0x036D5868 LDR X8, [X20]
	0x036D586C STR X8, [X0]
	0x036D5870 ADRP X1, 0x7DF000
	0x036D5874 ADD X1, X1, 0xE58
	0x036D5878 MOV X2, X31
	0x036D587C BL 0x3EB1B00
	0x036D5880 MOV X22, X0
	0x036D5884 BL 0x3EB1AE0
	0x036D5888 MOV X0, X22
	0x036D588C BL 0x1D2C690
	0x036D5890 BL 0x1990590
	0x036D5894 STR X30, [X31 - 0x30]!
	0x036D5898 STP X22, X21, [X31 + 0x10]
	0x036D589C STP X20, X19, [X31 + 0x20]
	0x036D58A0 ADRP X21, 0xD0B000
	0x036D58A4 ADRP X22, 0xA21000
	0x036D58A8 LDRB W8, [X21 + 0xAA6]
	0x036D58AC LDR X22, [X22 + 0x280]
	0x036D58B0 MOV X19, X1
	0x036D58B4 MOV X20, X0
	0x036D58B8 TBNZ X8, 0x0, 0x36D58D0
	0x036D58BC ADRP X0, 0xA21000
	0x036D58C0 LDR X0, [X0 + 0x280]
	0x036D58C4 BL 0x1C16CF4
	0x036D58C8 MOVZ W8, 0x1
	0x036D58CC STRB W8, [X21 + 0xAA6]
	0x036D58D0 LDR X0, [X22]
	0x036D58D4 LDR W8, [X0 + 0xE0]
	0x036D58D8 CBNZ W8, 0x36D58E0
	0x036D58DC BL 0x1C16DFC
	0x036D58E0 ADD X0, X20, 0x8
	0x036D58E4 MOV X1, X19
	0x036D58E8 LDP X20, X19, [X31 + 0x20]
	0x036D58EC LDP X22, X21, [X31 + 0x10]
	0x036D58F0 MOV X2, X31
	0x036D58F4 LDR X30, [X31], #0x30
	0x036D58F8 B 0x32C477C
	0x036D58FC SUB X31, X31, 0xB0
	0x036D5900 STP X30, X25, [X31 + 0x70]
	0x036D5904 STP X24, X23, [X31 + 0x80]
	0x036D5908 STP X22, X21, [X31 + 0x90]
	0x036D590C STP X20, X19, [X31 + 0xA0]
	0x036D5910 ADRP X20, 0xD0B000
	0x036D5914 LDRB W8, [X20 + 0xAA7]
	0x036D5918 MOV X19, X0
	0x036D591C TBNZ X8, 0x0, 0x36D59C4
	0x036D5920 ADRP X0, 0xA48000
	0x036D5924 LDR X0, [X0 + 0xE48]
	0x036D5928 BL 0x1C16CF4
	0x036D592C ADRP X0, 0xA6B000
	0x036D5930 LDR X0, [X0 + 0x118]
	0x036D5934 BL 0x1C16CF4
	0x036D5938 ADRP X0, 0xA21000
	0x036D593C LDR X0, [X0 + 0x280]
	0x036D5940 BL 0x1C16CF4
	0x036D5944 ADRP X0, 0xA20000
	0x036D5948 LDR X0, [X0 + 0xA50]
	0x036D594C BL 0x1C16CF4
	0x036D5950 ADRP X0, 0xA26000
	0x036D5954 LDR X0, [X0 + 0x7D8]
	0x036D5958 BL 0x1C16CF4
	0x036D595C ADRP X0, 0xA49000
	0x036D5960 LDR X0, [X0 + 0x2B8]
	0x036D5964 BL 0x1C16CF4
	0x036D5968 ADRP X0, 0xA49000
	0x036D596C LDR X0, [X0 + 0x2C0]
	0x036D5970 BL 0x1C16CF4
	0x036D5974 ADRP X0, 0xA49000
	0x036D5978 LDR X0, [X0 + 0x2C8]
	0x036D597C BL 0x1C16CF4
	0x036D5980 ADRP X0, 0xA1E000
	0x036D5984 LDR X0, [X0 + 0xE00]
	0x036D5988 BL 0x1C16CF4
	0x036D598C ADRP X0, 0xA6B000
	0x036D5990 LDR X0, [X0 + 0x120]
	0x036D5994 BL 0x1C16CF4
	0x036D5998 ADRP X0, 0xA6A000
	0x036D599C LDR X0, [X0 + 0xF68]
	0x036D59A0 BL 0x1C16CF4
	0x036D59A4 ADRP X0, 0xA49000
	0x036D59A8 LDR X0, [X0 + 0x2F8]
	0x036D59AC BL 0x1C16CF4
	0x036D59B0 ADRP X0, 0xA6B000
	0x036D59B4 LDR X0, [X0 + 0x128]
	0x036D59B8 BL 0x1C16CF4
	0x036D59BC MOVZ W8, 0x1
	0x036D59C0 STRB W8, [X20 + 0xAA7]
	0x036D59C4 STP X31, X31, [X31 + 0x60]
	0x036D59C8 STR X31, [X31 + 0x58]
	0x036D59CC STP X31, X31, [X31 + 0x40]
	0x036D59D0 ADRP X23, 0xA21000
	0x036D59D4 LDR W24, [X19]
	0x036D59D8 LDR X23, [X23 + 0x280]
	0x036D59DC CBZ W24, 0x36D5BF8
	0x036D59E0 LDR X20, [X19 + 0x20]
	0x036D59E4 CBZ X20, 0x36D5D38
	0x036D59E8 LDR X0, [X20 + 0x10]
	0x036D59EC CBZ X0, 0x36D5D3C
	0x036D59F0 LDR X8, [X0]
	0x036D59F4 LDP X1, X2, [X20 + 0x38]
	0x036D59F8 LDR X3, [X19 + 0x28]
	0x036D59FC LDR X9, [X8 + 0x2E8]
	0x036D5A00 LDR X4, [X8 + 0x2F0]
	0x036D5A04 BLR X9
	0x036D5A08 ADRP X8, 0xA6B000
	0x036D5A0C LDR X8, [X8 + 0x128]
	0x036D5A10 STP X0, X1, [X31 + 0x60]
	0x036D5A14 LDR X8, [X8]
	0x036D5A18 ADD X0, X31, 0x60
	0x036D5A1C MOV X1, X8
	0x036D5A20 BL 0x27A2A5C
	0x036D5A24 TBNZ X0, 0x0, 0x36D5CFC
	0x036D5A28 ADRP X8, 0xA20000
	0x036D5A2C LDR X8, [X8 + 0xA50]
	0x036D5A30 LDR X0, [X8]
	0x036D5A34 BL 0x1C16F10
	0x036D5A38 MOV X21, X0
	0x036D5A3C MOVZ W1, 0x3E8
	0x036D5A40 MOV X2, X31
	0x036D5A44 BL 0x33DFC6C
	0x036D5A48 STR X21, [X19 + 0x30]
	0x036D5A4C CBZ X21, 0x36D5D50
	0x036D5A50 MOV X0, X21
	0x036D5A54 MOV X1, X31
	0x036D5A58 BL 0x33DFA08
	0x036D5A5C ADRP X25, 0xA6A000
	0x036D5A60 LDR X25, [X25 + 0xF68]
	0x036D5A64 STR X0, [X31 + 0x58]
	0x036D5A68 LDR X8, [X25]
	0x036D5A6C LDR W9, [X8 + 0xE0]
	0x036D5A70 CBNZ W9, 0x36D5A80
	0x036D5A74 MOV X0, X8
	0x036D5A78 BL 0x1C16DFC
	0x036D5A7C LDR X8, [X25]
	0x036D5A80 LDR X9, [X8 + 0xB8]
	0x036D5A84 LDR X21, [X9 + 0x28]
	0x036D5A88 CBNZ X21, 0x36D5AE0
	0x036D5A8C LDR W9, [X8 + 0xE0]
	0x036D5A90 CBNZ W9, 0x36D5AA0
	0x036D5A94 MOV X0, X8
	0x036D5A98 BL 0x1C16DFC
	0x036D5A9C LDR X8, [X25]
	0x036D5AA0 ADRP X9, 0xA48000
	0x036D5AA4 LDR X8, [X8 + 0xB8]
	0x036D5AA8 LDR X9, [X9 + 0xE48]
	0x036D5AAC LDR X22, [X8]
	0x036D5AB0 LDR X0, [X9]
	0x036D5AB4 BL 0x1C16F10
	0x036D5AB8 ADRP X8, 0xA6B000
	0x036D5ABC LDR X8, [X8 + 0x120]
	0x036D5AC0 MOV X21, X0
	0x036D5AC4 LDR X2, [X8]
	0x036D5AC8 MOV X1, X22
	0x036D5ACC MOV X3, X31
	0x036D5AD0 BL 0x2A6B948
	0x036D5AD4 LDR X8, [X25]
	0x036D5AD8 LDR X8, [X8 + 0xB8]
	0x036D5ADC STR X21, [X8 + 0x28]
	0x036D5AE0 ADRP X8, 0xA26000
	0x036D5AE4 LDR X8, [X8 + 0x7D8]
	0x036D5AE8 LDR X0, [X8]
	0x036D5AEC LDR W8, [X0 + 0xE0]
	0x036D5AF0 CBNZ W8, 0x36D5AF8
	0x036D5AF4 BL 0x1C16DFC
	0x036D5AF8 ADD X8, X31, 0x8
	0x036D5AFC ADD X0, X31, 0x58
	0x036D5B00 MOV X1, X21
	0x036D5B04 MOV X2, X20
	0x036D5B08 MOV X3, X31
	0x036D5B0C BL 0x33DD5C8
	0x036D5B10 LDUR V0, [X31 + 0x8]
	0x036D5B14 LDR X8, [X31 + 0x18]
	0x036D5B18 STR V0, [X31 + 0x2]
	0x036D5B1C STR X8, [X31 + 0x30]
	0x036D5B20 STR X8, [X19 + 0x48]
	0x036D5B24 STUR V0, [X19 + 0x38]
	0x036D5B28 ADRP X8, 0xA49000
	0x036D5B2C LDR X8, [X8 + 0x2F8]
	0x036D5B30 LDR X21, [X31 + 0x60]
	0x036D5B34 LDR W20, [X31 + 0x68]
	0x036D5B38 LDRH W22, [X31 + 0x6C]
	0x036D5B3C LDR X25, [X8]
	0x036D5B40 LDR X0, [X25 + 0x20]
	0x036D5B44 ADD X8, X0, 0x135
	0x036D5B48 LDRH W8, [X8]
	0x036D5B4C TBNZ X8, 0x0, 0x36D5B60
	0x036D5B50 BL 0x1C5C684
	0x036D5B54 LDR X0, [X25 + 0x20]
	0x036D5B58 ADD X8, X0, 0x135
	0x036D5B5C LDRH W8, [X8]
	0x036D5B60 TBNZ X8, 0x0, 0x36D5B68
	0x036D5B64 BL 0x1C5C684
	0x036D5B68 ADRP X8, 0xA49000
	0x036D5B6C LDR X8, [X8 + 0x2B8]
	0x036D5B70 LDR X8, [X8]
	0x036D5B74 LDR X0, [X8 + 0x20]
	0x036D5B78 LDRB W8, [X0 + 0x135]
	0x036D5B7C TBNZ X8, 0x0, 0x36D5B84
	0x036D5B80 BL 0x1C5C684
	0x036D5B84 ADRP X8, 0xA49000
	0x036D5B88 LDR X8, [X8 + 0x2C8]
	0x036D5B8C BFM X20, X22, 0x20, 0xF
	0x036D5B90 STP X21, X20, [X31 + 0x40]
	0x036D5B94 LDR X8, [X8]
	0x036D5B98 LDR X0, [X8 + 0x20]
	0x036D5B9C LDRB W8, [X0 + 0x135]
	0x036D5BA0 TBNZ X8, 0x0, 0x36D5BA8
	0x036D5BA4 BL 0x1C5C684
	0x036D5BA8 LDR X8, [X0 + 0xC0]
	0x036D5BAC LDR X1, [X8 + 0x10]
	0x036D5BB0 ADD X0, X31, 0x40
	0x036D5BB4 BL 0x27A2398
	0x036D5BB8 TBNZ X0, 0x0, 0x36D5C0C
	0x036D5BBC STR W31, [X19]
	0x036D5BC0 LDR V0, [X31 + 0x4]
	0x036D5BC4 STR V0, [X19 + 0x5]
	0x036D5BC8 LDR X0, [X23]
	0x036D5BCC LDR W8, [X0 + 0xE0]
	0x036D5BD0 CBNZ W8, 0x36D5BD8
	0x036D5BD4 BL 0x1C16DFC
	0x036D5BD8 ADRP X8, 0xA6B000
	0x036D5BDC LDR X8, [X8 + 0x118]
	0x036D5BE0 ADD X0, X19, 0x8
	0x036D5BE4 LDR X3, [X8]
	0x036D5BE8 ADD X1, X31, 0x40
	0x036D5BEC MOV X2, X19
	0x036D5BF0 BL 0x2185BB0
	0x036D5BF4 B 0x36D5D20
	0x036D5BF8 LDR V0, [X19 + 0x5]
	0x036D5BFC MOVN W24, 0x0
	0x036D5C00 STR V0, [X31 + 0x4]
	0x036D5C04 STP X31, X31, [X19 + 0x50]
	0x036D5C08 STR W24, [X19]
	0x036D5C0C ADRP X8, 0xA49000
	0x036D5C10 LDR X8, [X8 + 0x2C0]
	0x036D5C14 LDR X8, [X8]
	0x036D5C18 LDR X0, [X8 + 0x20]
	0x036D5C1C LDRB W8, [X0 + 0x135]
	0x036D5C20 TBNZ X8, 0x0, 0x36D5C28
	0x036D5C24 BL 0x1C5C684
	0x036D5C28 LDR X8, [X0 + 0xC0]
	0x036D5C2C LDR X1, [X8 + 0x20]
	0x036D5C30 ADD X0, X31, 0x40
	0x036D5C34 BL 0x27A24B4
	0x036D5C38 MOV X22, X31
	0x036D5C3C MOVZ W25, 0xB
	0x036D5C40 TBZ X24, 0x1F, 0x36D5C50
	0x036D5C44 ADD X0, X19, 0x38
	0x036D5C48 MOV X1, X31
	0x036D5C4C BL 0x33DF6F0
	0x036D5C50 CBNZ X22, 0x36D5D48
	0x036D5C54 CMP W25, 0xB
	0x036D5C58 B.EQ 0x36D5C60
	0x036D5C5C CBNZ W25, 0x36D5C78
	0x036D5C60 MOV X20, X31
	0x036D5C64 STP X31, X31, [X19 + 0x38]
	0x036D5C68 STR X31, [X19 + 0x48]
	0x036D5C6C MOVZ W25, 0xC
	0x036D5C70 TBZ X24, 0x1F, 0x36D5CE8
	0x036D5C74 B 0x36D5C80
	0x036D5C78 MOV X20, X31
	0x036D5C7C TBZ X24, 0x1F, 0x36D5CE8
	0x036D5C80 LDR X21, [X19 + 0x30]
	0x036D5C84 CBZ X21, 0x36D5CE8
	0x036D5C88 ADRP X10, 0xA1E000
	0x036D5C8C LDR X8, [X21]
	0x036D5C90 LDR X10, [X10 + 0xE00]
	0x036D5C94 LDRH W9, [X8 + 0x12E]
	0x036D5C98 LDR X1, [X10]
	0x036D5C9C CBZ X9, 0x36D5CC0
	0x036D5CA0 LDR X10, [X8 + 0xB0]
	0x036D5CA4 ADD X10, X10, 0x8
	0x036D5CA8 LDUR X11, [X10 - 0x8]
	0x036D5CAC CMP X11, X1
	0x036D5CB0 B.EQ 0x36D5CD0
	0x036D5CB4 SUBS X9, X9, 0x1
	0x036D5CB8 ADD X10, X10, 0x10
	0x036D5CBC B.NE 0x36D5CA8
	0x036D5CC0 MOV X0, X21
	0x036D5CC4 MOV W2, W31
	0x036D5CC8 BL 0x1C5C788
	0x036D5CCC B 0x36D5CDC
	0x036D5CD0 LDRSW X9, [X10]
	0x036D5CD4 ADD X8, X8, X9, 0x4, LSL
	0x036D5CD8 ADD X0, X8, 0x138
	0x036D5CDC LDP X8, X1, [X0]
	0x036D5CE0 MOV X0, X21
	0x036D5CE4 BLR X8
	0x036D5CE8 CBNZ X20, 0x36D5D40
	0x036D5CEC CMP W25, 0xC
	0x036D5CF0 B.EQ 0x36D5CF8
	0x036D5CF4 CBNZ W25, 0x36D5D20
	0x036D5CF8 STR X31, [X19 + 0x30]
	0x036D5CFC MOVN W8, 0x1
	0x036D5D00 STR W8, [X19], #0x8
	0x036D5D04 LDR X0, [X23]
	0x036D5D08 LDR W8, [X0 + 0xE0]
	0x036D5D0C CBNZ W8, 0x36D5D14
	0x036D5D10 BL 0x1C16DFC
	0x036D5D14 MOV X0, X19
	0x036D5D18 MOV X1, X31
	0x036D5D1C BL 0x32C4864
	0x036D5D20 LDP X20, X19, [X31 + 0xA0]
	0x036D5D24 LDP X22, X21, [X31 + 0x90]
	0x036D5D28 LDP X24, X23, [X31 + 0x80]
	0x036D5D2C LDP X30, X25, [X31 + 0x70]
	0x036D5D30 ADD X31, X31, 0xB0
	0x036D5D34 RET
	0x036D5D38 BL 0x1C16F20
	0x036D5D3C BL 0x1C16F20
	0x036D5D40 MOV X0, X20
	0x036D5D44 BL 0x1C16F18
	0x036D5D48 MOV X0, X22
	0x036D5D4C BL 0x1C16F18
	0x036D5D50 BL 0x1C16F20
	0x036D5D54 B 0x36D5DA4
	0x036D5D58 B 0x36D5DA4
	0x036D5D5C B 0x36D5DA4
	0x036D5D60 B 0x36D5F10
	0x036D5D64 MOV X20, X0
	0x036D5D68 MOV W24, W31
	0x036D5D6C B 0x36D5F14
	0x036D5D70 B 0x36D5DA4
	0x036D5D74 B 0x36D5F10
	0x036D5D78 B 0x36D5DA4
	0x036D5D7C B 0x36D5DA4
	0x036D5D80 B 0x36D5DA4
	0x036D5D84 B 0x36D5F10
	0x036D5D88 B 0x36D5D98
	0x036D5D8C B 0x36D5D98
	0x036D5D90 B 0x36D5D98
	0x036D5D94 B 0x36D5D98
	0x036D5D98 MOV X20, X0
	0x036D5D9C MOV W21, W1
	0x036D5DA0 B 0x36D5E70
	0x036D5DA4 MOV X20, X0
	0x036D5DA8 MOV W21, W1
	0x036D5DAC CMP W21, 0x1
	0x036D5DB0 B.NE 0x36D5DD8
	0x036D5DB4 MOV X0, X20
	0x036D5DB8 BL 0x3EB1AD0
	0x036D5DBC LDR X8, [X0]
	0x036D5DC0 STR X8, [X31]
	0x036D5DC4 BL 0x3EB1AE0
	0x036D5DC8 LDR X20, [X31]
	0x036D5DCC MOV W25, W31
	0x036D5DD0 TBZ X24, 0x1F, 0x36D5CE8
	0x036D5DD4 B 0x36D5C80
	0x036D5DD8 STR X31, [X31]
	0x036D5DDC TBZ X24, 0x1F, 0x36D5E48
	0x036D5DE0 LDR X22, [X19 + 0x30]
	0x036D5DE4 CBZ X22, 0x36D5E48
	0x036D5DE8 ADRP X10, 0xA1E000
	0x036D5DEC LDR X8, [X22]
	0x036D5DF0 LDR X10, [X10 + 0xE00]
	0x036D5DF4 LDRH W9, [X8 + 0x12E]
	0x036D5DF8 LDR X1, [X10]
	0x036D5DFC CBZ X9, 0x36D5E20
	0x036D5E00 LDR X10, [X8 + 0xB0]
	0x036D5E04 ADD X10, X10, 0x8
	0x036D5E08 LDUR X11, [X10 - 0x8]
	0x036D5E0C CMP X11, X1
	0x036D5E10 B.EQ 0x36D5E30
	0x036D5E14 SUBS X9, X9, 0x1
	0x036D5E18 ADD X10, X10, 0x10
	0x036D5E1C B.NE 0x36D5E08
	0x036D5E20 MOV X0, X22
	0x036D5E24 MOV W2, W31
	0x036D5E28 BL 0x1C5C788
	0x036D5E2C B 0x36D5E3C
	0x036D5E30 LDRSW X9, [X10]
	0x036D5E34 ADD X8, X8, X9, 0x4, LSL
	0x036D5E38 ADD X0, X8, 0x138
	0x036D5E3C LDP X8, X1, [X0]
	0x036D5E40 MOV X0, X22
	0x036D5E44 BLR X8
	0x036D5E48 LDR X8, [X31]
	0x036D5E4C CBZ X8, 0x36D5E70
	0x036D5E50 LDR X0, [X31]
	0x036D5E54 BL 0x1C16F18
	0x036D5E58 MOV X20, X0
	0x036D5E5C MOV W21, W1
	0x036D5E60 TBZ X24, 0x1F, 0x36D5E48
	0x036D5E64 B 0x36D5DE0
	0x036D5E68 MOV X21, X1
	0x036D5E6C MOV X20, X0
	0x036D5E70 CMP W21, 0x1
	0x036D5E74 B.NE 0x36D5F08
	0x036D5E78 MOV X0, X20
	0x036D5E7C BL 0x3EB1AD0
	0x036D5E80 MOV X20, X0
	0x036D5E84 ADRP X0, 0xA1E000

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+96], X30
	003 Move [X31+112], X26
	004 Move [X31+120], X25
	005 Move [X31+128], X24
	006 Move [X31+136], X23
	007 Move [X31+144], X22
	008 Move [X31+152], X21
	009 Move [X31+160], X20
	010 Move [X31+168], X19
	011 Move X20, 0xD0C000
	012 Move W8, [X20+2723]
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {50}
	018 Move X0, 0xA49000
	019 Move X0, [X0+3656]
	020 Call 0x1C17CF4
	021 Move X0, 0xA6C000
	022 Move X0, [X0+240]
	023 Call 0x1C17CF4
	024 Move X0, 0xA6C000
	025 Move X0, [X0+248]
	026 Call 0x1C17CF4
	027 Move X0, 0xA22000
	028 Move X0, [X0+640]
	029 Call 0x1C17CF4
	030 Move X0, 0xA27000
	031 Move X0, [X0+2008]
	032 Call 0x1C17CF4
	033 Move X0, 0xA4E000
	034 Move X0, [X0+3744]
	035 Call 0x1C17CF4
	036 Move X0, 0xA52000
	037 Move X0, [X0+3456]
	038 Call 0x1C17CF4
	039 Move X0, 0xA6C000
	040 Move X0, [X0+256]
	041 Call 0x1C17CF4
	042 Move X0, 0xA6B000
	043 Move X0, [X0+3944]
	044 Call 0x1C17CF4
	045 Move X0, 0xA49000
	046 Move X0, [X0+3648]
	047 Call 0x1C17CF4
	048 Move W8, 1
	049 Move [X20+2723], W8
	050 Move [X31+80], X31
	051 Move [X31+88], X31
	052 Move [X31+64], X31
	053 Move [X31+72], X31
	054 Move X25, 0xA49000
	055 Move W24, [X19]
	056 Move X20, [X19+32]
	057 Move X25, [X25+3648]
	058 Compare W24, 0
	059 JumpIfEqual {69}
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Move V0, [X19+7]
	062 Move TEMP, 0
	063 Not TEMP
	064 Move W24, TEMP
	065 Move [X31+4], V0
	066 Move [X19+112], X31
	067 Move [X19+120], X31
	068 Move [X19], W24
	069 NotImplemented "Instruction LDUR not yet implemented."
	070 Move TEMP, 0
	071 Not TEMP
	072 Move W24, TEMP
	073 Move [X31+5], V0
	074 Move [X19+72], X31
	075 Move [X19+80], X31
	076 Move [X19], W24
	077 Compare X20, 0
	078 JumpIfEqual {459}
	079 Move X0, [X20+80]
	080 Compare X0, 0
	081 JumpIfEqual {460}
	082 Move X1, X31
	083 Call SemaphoreSlim.WaitAsync, X0
	084 Compare X0, 0
	085 JumpIfEqual {461}
	086 Move W1, W31
	087 Move X2, X31
	088 Call Task.ConfigureAwait, X0, X1
	089 Move [X31+80], X0
	090 Move [X31+88], X1
	091 Add X0, X31, 80
	092 Move X1, X31
	093 Call ConfiguredTaskAwaiter.get_IsCompleted, X0
	094 Move TEMP, X0
	095 And TEMP, TEMP, 1
	096 Compare TEMP, 1
	097 JumpIfNotEqual {267}
	098 Add X0, X31, 80
	099 Move X1, X31
	100 Call ConfiguredTaskAwaiter.GetResult, X0
	101 Move X8, 0xA52000
	102 Move W21, [X19+40]
	103 Move W22, [X19+41]
	104 Move X8, [X8+3456]
	105 Add X0, X19, 48
	106 Move X1, [X8]
	107 Call 0x25D8918
	108 Compare X20, 0
	109 JumpIfEqual {458}
	110 NotImplemented "Instruction CMP not yet implemented."
	111 Move X3, X0
	112 Move X4, X1
	113 NotImplemented "Instruction CSET not yet implemented."
	114 Move X0, X20
	115 Move W1, W21
	116 Call ManagedWebSocket.WriteFrameToSendBuffer, X0, X1, X2, X3
	117 Move X26, 0xA6B000
	118 Move X26, [X26+3944]
	119 Move W21, W0
	120 Move X8, [X26]
	121 Move W9, [X8+224]
	122 Compare W9, 0
	123 JumpIfNotEqual {127}
	124 Move X0, X8
	125 Call 0x1C17DFC
	126 Move X8, [X26]
	127 Move X9, [X8+184]
	128 Move X22, [X9+24]
	129 Compare X22, 0
	130 JumpIfNotEqual {153}
	131 Move W9, [X8+224]
	132 Compare W9, 0
	133 JumpIfNotEqual {137}
	134 Move X0, X8
	135 Call 0x1C17DFC
	136 Move X8, [X26]
	137 Move X9, 0xA49000
	138 Move X8, [X8+184]
	139 Move X9, [X9+3656]
	140 Move X23, [X8]
	141 Move X0, [X9]
	142 Call 0x1C17F10
	143 Move X8, 0xA6C000
	144 Move X8, [X8+256]
	145 Move X22, X0
	146 Move X2, [X8]
	147 Move X1, X23
	148 Move X3, X31
	149 Call Action`1<Object>..ctor, X0, X1, X2
	150 Move X8, [X26]
	151 Move X8, [X8+184]
	152 Move [X8+24], X22
	153 Move X8, 0xA27000
	154 Move X8, [X8+2008]
	155 Move X0, [X8]
	156 Move W8, [X0+224]
	157 Compare W8, 0
	158 JumpIfNotEqual {160}
	159 Call 0x1C17DFC
	160 Add X0, X19, 64
	161 Add X8, X31, 8
	162 Move X1, X22
	163 Move X2, X20
	164 Move X3, X31
	165 Call CancellationToken.Register, X0, X1, X2
	166 NotImplemented "Instruction LDUR not yet implemented."
	167 Move X8, [X31+24]
	168 Move [X31+2], V0
	169 Move [X31+48], X8
	170 Move [X19+104], X8
	171 Move [X19+88], V0
	172 Move X23, [X20+152]
	173 Move X22, [X20+16]
	174 Compare X23, 0
	175 JumpIfEqual {258}
	176 Move W8, [X23+24]
	177 NotImplemented "Instruction CMP not yet implemented."
	178 Move X0, X31
	179 Call ThrowHelper.ThrowArgumentOutOfRangeException
	180 Move X2, X21
	181 ShiftRight X2, 32
	182 And X2, X2, 0x7FFFFFFF
	183 Compare X22, 0
	184 JumpIfEqual {266}
	185 Move X8, [X22]
	186 Move X3, [X19+64]
	187 Move X9, [X8+808]
	188 Move X4, [X8+816]
	189 Move X0, X22
	190 Move X1, X23
	191 NotImplemented "Instruction BLR not yet implemented."
	192 Move X21, X0
	193 Move X0, [X25]
	194 Move X22, X1
	195 Move W8, [X0+224]
	196 Compare W8, 0
	197 JumpIfNotEqual {199}
	198 Call 0x1C17DFC
	199 Move X23, 0xD08000
	200 Move W8, [X23+2340]
	201 And X9, X22, 0xFFFF
	202 Move [X31+64], X21
	203 Move [X31+72], X9
	204 Compare W8, 0
	205 JumpIfNotEqual {211}
	206 Move X0, 0xA49000
	207 Move X0, [X0+3648]
	208 Call 0x1C17CF4
	209 Move W8, 1
	210 Move [X23+2340], W8
	211 Move X0, [X25]
	212 Move W8, [X0+224]
	213 Compare W8, 0
	214 JumpIfNotEqual {216}
	215 Call 0x1C17DFC
	216 Move X21, 0xD08000
	217 Move W8, [X21+1252]
	218 Compare W8, 0
	219 JumpIfNotEqual {228}
	220 Move X0, 0xA4E000
	221 Move X0, [X0+3752]
	222 Call 0x1C17CF4
	223 Move X0, 0xA20000
	224 Move X0, [X0+1976]
	225 Call 0x1C17CF4
	226 Move W8, 1
	227 Move [X21+1252], W8
	228 Move X21, [X31+64]
	229 Compare X21, 0
	230 JumpIfEqual {294}
	231 Move X9, 0xA20000
	232 Move X9, [X9+1976]
	233 Move X8, [X21]
	234 Move X9, [X9]
	235 Move W11, [X8+304]
	236 Move W10, [X9+304]
	237 NotImplemented "Instruction CMP not yet implemented."
	238 Move X11, [X8+200]
	239 Add X10, X11, X10
	240 NotImplemented "Instruction LDUR not yet implemented."
	241 NotImplemented "Instruction CMP not yet implemented."
	242 Move X10, 0xA4E000
	243 NotImplemented "Instruction LDRH not yet implemented."
	244 Move X10, [X10+3752]
	245 NotImplemented "Instruction LDRH not yet implemented."
	246 Move X1, [X10]
	247 Compare X9, 0
	248 JumpIfEqual {255}
	249 Move X10, [X8+176]
	250 Add X10, X10, 8
	251 NotImplemented "Instruction LDUR not yet implemented."
	252 NotImplemented "Instruction CMP not yet implemented."
	253 Subtract X9, X9, 1
	254 Add X10, X10, 16
	255 Move X0, X21
	256 Move W2, W31
	257 Call 0x1C5D788
	258 Compare W21, 0
	259 JumpIfEqual {262}
	260 Move X0, X31
	261 Call ThrowHelper.ThrowArgumentOutOfRangeException
	262 Move X23, X31
	263 Move X2, X31
	264 Compare X22, 0
	265 JumpIfNotEqual {185}
	266 Call 0x1C17F20
	267 Move [X19], W31
	268 Move V0, [X31+5]
	269 Move X8, 0xA22000
	270 Move [X19+72], V0
	271 Move X8, [X8+640]
	272 Move X0, [X8]
	273 Move W8, [X0+224]
	274 Compare W8, 0
	275 JumpIfNotEqual {277}
	276 Call 0x1C17DFC
	277 Move X8, 0xA6C000
	278 Move X8, [X8+240]
	279 Add X0, X19, 8
	280 Move X3, [X8]
	281 Add X1, X31, 80
	282 Move X2, X19
	283 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	284 NotImplemented "Instruction LDRSW not yet implemented."
	285 Add X8, X8, X9
	286 Add X0, X8, 312
	287 Move X8, [X0]
	288 Move X2, [X0+8]
	289 Move X0, X21
	290 Move W1, W22
	291 NotImplemented "Instruction BLR not yet implemented."
	292 Compare W0, 0
	293 JumpIfEqual {425}
	294 Move X21, 0xD08000
	295 Move W8, [X21+2341]
	296 Compare W8, 0
	297 JumpIfNotEqual {303}
	298 Move X0, 0xA49000
	299 Move X0, [X0+3648]
	300 Call 0x1C17CF4
	301 Move W8, 1
	302 Move [X21+2341], W8
	303 Move X0, [X25]
	304 Move W8, [X0+224]
	305 Compare W8, 0
	306 JumpIfNotEqual {308}
	307 Call 0x1C17DFC
	308 Move X21, 0xD08000
	309 Move W8, [X21+1254]
	310 Compare W8, 0
	311 JumpIfNotEqual {320}
	312 Move X0, 0xA4E000
	313 Move X0, [X0+3752]
	314 Call 0x1C17CF4
	315 Move X0, 0xA20000
	316 Move X0, [X0+1976]
	317 Call 0x1C17CF4
	318 Move W8, 1
	319 Move [X21+1254], W8
	320 Move X21, [X31+64]
	321 Compare X21, 0
	322 JumpIfEqual {359}
	323 Move X9, 0xA20000
	324 Move X9, [X9+1976]
	325 Move X8, [X21]
	326 Move X9, [X9]
	327 Move W11, [X8+304]
	328 Move W10, [X9+304]
	329 NotImplemented "Instruction CMP not yet implemented."
	330 Move X11, [X8+200]
	331 Add X10, X11, X10
	332 NotImplemented "Instruction LDUR not yet implemented."
	333 NotImplemented "Instruction CMP not yet implemented."
	334 Move X10, 0xA4E000
	335 NotImplemented "Instruction LDRH not yet implemented."
	336 Move X10, [X10+3752]
	337 NotImplemented "Instruction LDRH not yet implemented."
	338 Move X1, [X10]
	339 Compare X9, 0
	340 JumpIfEqual {347}
	341 Move X10, [X8+176]
	342 Add X10, X10, 8
	343 NotImplemented "Instruction LDUR not yet implemented."
	344 NotImplemented "Instruction CMP not yet implemented."
	345 Subtract X9, X9, 1
	346 Add X10, X10, 16
	347 Move W2, 2
	348 Move X0, X21
	349 Call 0x1C5D788
	350 Move W9, [X10]
	351 Add W9, W9, 2
	352 Add X8, X8, W9
	353 Add X0, X8, 312
	354 Move X8, [X0]
	355 Move X2, [X0+8]
	356 Move X0, X21
	357 Move W1, W22
	358 NotImplemented "Instruction BLR not yet implemented."
	359 Move X23, X31
	360 Move W21, 10
	361 Move TEMP, X24
	362 And TEMP, TEMP, -2147483648
	363 Compare TEMP, -2147483648
	364 JumpIfNotEqual {368}
	365 Add X0, X19, 88
	366 Move X1, X31
	367 Call CancellationTokenRegistration.Dispose, X0
	368 Compare X23, 0
	369 JumpIfNotEqual {456}
	370 NotImplemented "Instruction CMP not yet implemented."
	371 Compare W21, 0
	372 JumpIfNotEqual {382}
	373 Move X23, X31
	374 Move [X19+88], X31
	375 Move [X19+96], X31
	376 Move [X19+104], X31
	377 Move W21, 21
	378 Move TEMP, X24
	379 And TEMP, TEMP, -2147483648
	380 Compare TEMP, -2147483648
	381 JumpIfNotEqual {396}
	382 Move X23, X31
	383 Move TEMP, X24
	384 And TEMP, TEMP, -2147483648
	385 Compare TEMP, -2147483648
	386 JumpIfNotEqual {396}
	387 Compare X20, 0
	388 JumpIfEqual {462}
	389 Move X0, X20
	390 Call ManagedWebSocket.ReleaseSendBuffer, X0
	391 Move X0, [X20+80]
	392 Compare X0, 0
	393 JumpIfEqual {463}
	394 Move X1, X31
	395 Call SemaphoreSlim.Release, X0
	396 Compare X23, 0
	397 JumpIfNotEqual {454}
	398 Compare W21, 0
	399 JumpIfEqual {401}
	400 NotImplemented "Instruction CMP not yet implemented."
	401 Move TEMP, 1
	402 Not TEMP
	403 Move W8, TEMP
	404 Move [X19+8], W8
	405 Move X8, 0xA22000
	406 Move X8, [X8+640]
	407 Move X0, [X8]
	408 Move W8, [X0+224]
	409 Compare W8, 0
	410 JumpIfNotEqual {412}
	411 Call 0x1C17DFC
	412 Move X0, X19
	413 Move X1, X31
	414 Call AsyncTaskMethodBuilder.SetResult, X0
	415 Move X0, X21
	416 Move X1, X31
	417 Call TaskAwaiter.ValidateEnd, X0
	418 Move X0, X21
	419 Move X1, X31
	420 Call Task.get_IsCompleted, X0
	421 Move TEMP, X0
	422 And TEMP, TEMP, 1
	423 Compare TEMP, 1
	424 JumpIfEqual {294}
	425 Move W8, 1
	426 Move [X19], W8
	427 Move V0, [X31+4]
	428 Move X8, 0xA22000
	429 Move [X19+7], V0
	430 Move X8, [X8+640]
	431 Move X0, [X8]
	432 Move W8, [X0+224]
	433 Compare W8, 0
	434 JumpIfNotEqual {436}
	435 Call 0x1C17DFC
	436 Move X8, 0xA6C000
	437 Move X8, [X8+248]
	438 Add X0, X19, 8
	439 Move X3, [X8]
	440 Add X1, X31, 64
	441 Move X2, X19
	442 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	443 Move X20, [X31+160]
	444 Move X19, [X31+168]
	445 Move X22, [X31+144]
	446 Move X21, [X31+152]
	447 Move X24, [X31+128]
	448 Move X23, [X31+136]
	449 Move X26, [X31+112]
	450 Move X25, [X31+120]
	451 Move X30, [X31+96]
	452 Add X31, X31, 176
	453 Return 
	454 Move X0, X23
	455 Call 0x1C17F18
	456 Move X0, X23
	457 Call 0x1C17F18
	458 Call 0x1C17F20
	459 Call 0x1C17F20
	460 Call 0x1C17F20
	461 Call 0x1C17F20
	462 Call 0x1C17F20
	463 Call 0x1C17F20
	464 Move X21, X0
	465 Move W24, 1
	466 Move X21, X0
	467 Move W22, W1
	468 Move X21, X0
	469 Move W22, W1
	470 Move X21, X0
	471 NotImplemented "Instruction CMP not yet implemented."
	472 Move X0, X21
	473 Call 0x3EB2AD0
	474 Move X23, [X0]
	475 Call 0x3EB2AE0
	476 Move W21, W31
	477 Move TEMP, X24
	478 And TEMP, TEMP, -2147483648
	479 Compare TEMP, -2147483648
	480 JumpIfNotEqual {368}
	481 Move X23, X31
	482 Move W22, W1
	483 Move TEMP, X24
	484 And TEMP, TEMP, -2147483648
	485 Compare TEMP, -2147483648
	486 JumpIfNotEqual {490}
	487 Add X0, X19, 88
	488 Move X1, X31
	489 Call CancellationTokenRegistration.Dispose, X0
	490 Compare X23, 0
	491 JumpIfNotEqual {556}
	492 NotImplemented "Instruction CMP not yet implemented."
	493 Move W25, 1
	494 NotImplemented "Instruction CMP not yet implemented."
	495 Move X0, X21
	496 Call 0x3EB2AD0
	497 Move X23, [X0]
	498 Call 0x3EB2AE0
	499 Move W21, W31
	500 Move TEMP, X24
	501 And TEMP, TEMP, -2147483648
	502 Compare TEMP, -2147483648
	503 JumpIfNotEqual {396}
	504 Move X23, X31
	505 Move TEMP, X24
	506 And TEMP, TEMP, -2147483648
	507 Compare TEMP, -2147483648
	508 JumpIfNotEqual {518}
	509 Compare X20, 0
	510 JumpIfEqual {558}
	511 Move X0, X20
	512 Call ManagedWebSocket.ReleaseSendBuffer, X0
	513 Move X0, [X20+80]
	514 Compare X0, 0
	515 JumpIfEqual {559}
	516 Move X1, X31
	517 Call SemaphoreSlim.Release, X0
	518 Compare X23, 0
	519 JumpIfEqual {614}
	520 Move X0, X23
	521 Call 0x1C17F18
	522 Move X0, X21
	523 Call 0x3EB2AD0
	524 Move X23, [X0]
	525 Call 0x3EB2AE0
	526 Move X0, 0xA1F000
	527 Move X0, [X0+2000]
	528 Call 0x1C17D08
	529 Compare X23, 0
	530 JumpIfEqual {550}
	531 Move X8, [X23]
	532 Move W9, [X0+304]
	533 Move W10, [X8+304]
	534 NotImplemented "Instruction CMP not yet implemented."
	535 Move X8, [X8+200]
	536 Add X8, X8, X9
	537 NotImplemented "Instruction LDUR not yet implemented."
	538 NotImplemented "Instruction CMP not yet implemented."
	539 Move X0, 0xA27000
	540 Move X0, [X0+2216]
	541 Call 0x1C17D08
	542 Move X8, [X23]
	543 Move W9, [X0+304]
	544 Move W10, [X8+304]
	545 NotImplemented "Instruction CMP not yet implemented."
	546 Move X8, [X8+200]
	547 Add X8, X8, X9
	548 NotImplemented "Instruction LDUR not yet implemented."
	549 NotImplemented "Instruction CMP not yet implemented."
	550 Move X0, 0xA6C000
	551 Move X0, [X0+264]
	552 Call 0x1C17D08
	553 Move X1, X0
	554 Move X0, X23
	555 Call 0x1C17DEC
	556 Move X0, X23
	557 Call 0x1C17F18
	558 Call 0x1C17F20
	559 Call 0x1C17F20
	560 Compare X20, 0
	561 JumpIfNotEqual {563}
	562 Call 0x1C17F20
	563 Move W8, [X20+88]
	564 NotImplemented "Instruction CMP not yet implemented."
	565 Move X21, [X19+64]
	566 Move X0, 0xA48000
	567 Move X0, [X0+2912]
	568 Call 0x1C17D08
	569 Move W8, [X0+224]
	570 Compare W8, 0
	571 JumpIfNotEqual {573}
	572 Call 0x1C17DFC
	573 Move X0, X23
	574 Move X1, X21
	575 Call ManagedWebSocket.CreateOperationCanceledException, X0, X1
	576 Move X21, X0
	577 Move X0, 0xA4A000
	578 Move X0, [X0+776]
	579 Call 0x1C17D08
	580 Call 0x1C17F10
	581 Move X21, X0
	582 Move W0, 8
	583 Call WebSocketException.GetErrorMessage, X0
	584 Move X1, X0
	585 Move X0, X21
	586 Move X2, X23
	587 Move X3, X31
	588 Call Win32Exception..ctor, X0, X1, X2
	589 Move W8, 8
	590 Move [X21+144], W8
	591 Move X0, 0xA6C000
	592 Move X0, [X0+264]
	593 Call 0x1C17D08
	594 Move X1, X0
	595 Move X0, X21
	596 Call 0x1C17DEC
	597 Move X21, X0
	598 Move W22, W1
	599 NotImplemented "Instruction CMP not yet implemented."
	600 Move X0, X21
	601 Call 0x3EB2AD0
	602 Call 0x3EB2AE0
	603 Move X21, X0
	604 Move X21, X0
	605 Move W22, W1
	606 Move X21, X0
	607 Move W22, W1
	608 Move TEMP, X24
	609 And TEMP, TEMP, -2147483648
	610 Compare TEMP, -2147483648
	611 JumpIfNotEqual {518}
	612 Move X22, X1
	613 Move X21, X0
	614 NotImplemented "Instruction CMP not yet implemented."
	615 Move X0, X21
	616 Call 0x3EB2AD0
	617 Move X20, X0
	618 Move X0, 0xA1F000
	619 Move X0, [X0+2000]
	620 Call 0x1C17D08
	621 Move X8, [X20]
	622 Move X1, [X8]
	623 Call 0x1C18270
	624 Move TEMP, X0
	625 And TEMP, TEMP, 1
	626 Compare TEMP, 1
	627 JumpIfNotEqual {645}
	628 Move X20, [X20]
	629 Call 0x3EB2AE0
	630 Move TEMP, 1
	631 Not TEMP
	632 Move W8, TEMP
	633 Move [X19+8], W8
	634 Move X0, 0xA22000
	635 Move X0, [X0+640]
	636 Call 0x1C17D08
	637 Move W8, [X0+224]
	638 Compare W8, 0
	639 JumpIfNotEqual {641}
	640 Call 0x1C17DFC
	641 Move X0, X19
	642 Move X1, X20
	643 Move X2, X31
	644 Call AsyncTaskMethodBuilder.SetException, X0, X1
	645 Move W0, 8
	646 Call 0x3EB2AF0
	647 Move X8, [X20]
	648 Move [X0], X8
	649 Move X1, 0x7E0000
	650 Add X1, X1, 3672
	651 Move X2, X31
	652 Call 0x3EB2B00
	653 Move X21, X0
	654 Call 0x3EB2AE0
	655 Move X0, X21
	656 Call 0x1D2D690
	657 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x036D5E88 LDR X0, [X0 + 0x7D0]
	0x036D5E8C BL 0x1C16D08
	0x036D5E90 LDR X8, [X20]
	0x036D5E94 LDR X1, [X8]
	0x036D5E98 BL 0x1C17270
	0x036D5E9C TBZ X0, 0x0, 0x36D5EDC
	0x036D5EA0 LDR X20, [X20]
	0x036D5EA4 BL 0x3EB1AE0
	0x036D5EA8 MOVN W8, 0x1
	0x036D5EAC STR W8, [X19], #0x8
	0x036D5EB0 ADRP X0, 0xA21000
	0x036D5EB4 LDR X0, [X0 + 0x280]
	0x036D5EB8 BL 0x1C16D08
	0x036D5EBC LDR W8, [X0 + 0xE0]
	0x036D5EC0 CBNZ W8, 0x36D5EC8
	0x036D5EC4 BL 0x1C16DFC
	0x036D5EC8 MOV X0, X19
	0x036D5ECC MOV X1, X20
	0x036D5ED0 MOV X2, X31
	0x036D5ED4 BL 0x32C4908
	0x036D5ED8 B 0x36D5D20
	0x036D5EDC MOVZ W0, 0x8
	0x036D5EE0 BL 0x3EB1AF0
	0x036D5EE4 LDR X8, [X20]
	0x036D5EE8 STR X8, [X0]
	0x036D5EEC ADRP X1, 0x7DF000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xD0C000
	007 Move X22, 0xA22000
	008 Move W8, [X21+2724]
	009 Move X22, [X22+640]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xA22000
	017 Move X0, [X0+640]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2724], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Add X0, X20, 8
	027 Move X1, X19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X2, X31
	033 Move X30, [X31+48]
	034 Call AsyncTaskMethodBuilder.SetStateMachine, X0, X1
	035 Return 

