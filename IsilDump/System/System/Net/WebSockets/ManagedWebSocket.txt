Type: System.Net.WebSockets.ManagedWebSocket

Method: System.Net.WebSockets.ManagedWebSocket CreateFromConnectedStream(System.IO.Stream stream, System.Boolean isServer, System.String subprotocol, System.TimeSpan keepAliveInterval)

Disassembly:
	0x036D0E18 ADRP X0, 0xA6F000
	0x036D0E1C LDR X0, [X0 + 0xFF0]
	0x036D0E20 BL 0x1C16CF4
	0x036D0E24 ADRP X0, 0xA4C000
	0x036D0E28 LDR X0, [X0 + 0xB60]
	0x036D0E2C BL 0x1C16CF4
	0x036D0E30 ADRP X0, 0xA6F000
	0x036D0E34 LDR X0, [X0 + 0xFF8]
	0x036D0E38 BL 0x1C16CF4
	0x036D0E3C ADRP X0, 0xA70000
	0x036D0E40 LDR X0, [X0]
	0x036D0E44 BL 0x1C16CF4
	0x036D0E48 ADRP X0, 0xA70000
	0x036D0E4C LDR X0, [X0 + 0x8]
	0x036D0E50 BL 0x1C16CF4
	0x036D0E54 ADRP X0, 0xA4E000
	0x036D0E58 LDR X0, [X0 + 0xF48]
	0x036D0E5C BL 0x1C16CF4
	0x036D0E60 MOVZ W8, 0x1
	0x036D0E64 STRB W8, [X25 + 0xA7F]
	0x036D0E68 LDR X2, [X19]
	0x036D0E6C MOV X0, X23
	0x036D0E70 MOV X1, X22
	0x036D0E74 STRB W31, [X31 + 0x4C]
	0x036D0E78 STP X31, X31, [X31 + 0x30]
	0x036D0E7C STR X31, [X31 + 0x40]
	0x036D0E80 BL 0x36D066C
	0x036D0E84 LDR X0, [X24]
	0x036D0E88 LDR W19, [X20 + 0x58]
	0x036D0E8C LDRB W25, [X20 + 0x5C]
	0x036D0E90 LDR W8, [X0 + 0xE0]
	0x036D0E94 CBNZ W8, 0x36D0EA0

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0xD11000
	009 Move X24, 0xA4D000
	010 Move W8, [X23+2683]
	011 Move X24, [X24+2912]
	012 Move X19, X3
	013 Move X20, X2
	014 Move W22, W1
	015 Move X21, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0xA4D000
	021 Move X0, [X0+2912]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X23+2683], W8
	025 Move X0, [X24]
	026 Call 0x1C17F10
	027 And W2, W22, 1
	028 Move X1, X21
	029 Move X3, X20
	030 Move X4, X19
	031 Move X23, X0
	032 Call ManagedWebSocket..ctor, X0, X1, X2, X3, X4
	033 Move X0, X23
	034 Move X20, [X31+48]
	035 Move X19, [X31+56]
	036 Move X22, [X31+32]
	037 Move X21, [X31+40]
	038 Move X24, [X31+16]
	039 Move X23, [X31+24]
	040 Move X30, [X31+64]
	041 Return X0

Method: System.Object get_StateUpdateLock()

Disassembly:
	0x036D1268 MOV X2, X31
	0x036D126C BL 0x3EB1B00

ISIL:
	001 Move X0, [X0+48]
	002 Return X0

Method: System.Object get_ReceiveAsyncLock()

Disassembly:
	0x036D1270 MOV X19, X0
	0x036D1274 BL 0x3EB1AE0

ISIL:
	001 Move X0, [X0+72]
	002 Return X0

Method: System.Void .ctor(System.IO.Stream stream, System.Boolean isServer, System.String subprotocol, System.TimeSpan keepAliveInterval)

Disassembly:
	0x036D0E98 BL 0x1C16DFC
	0x036D0E9C LDR X0, [X24]
	0x036D0EA0 LDR X8, [X0 + 0xB8]
	0x036D0EA4 CMP W25, 0x0
	0x036D0EA8 CSET W1, NE
	0x036D0EAC LDR X2, [X8 + 0x18]
	0x036D0EB0 MOV W0, W19
	0x036D0EB4 BL 0x36D0B4C
	0x036D0EB8 LDR X19, [X20 + 0x48]
	0x036D0EBC STRB W31, [X31 + 0x4C]
	0x036D0EC0 ADD X1, X31, 0x4C
	0x036D0EC4 MOV X0, X19
	0x036D0EC8 MOV X2, X31
	0x036D0ECC BL 0x33DE64C
	0x036D0ED0 LDR X0, [X20 + 0xA8]
	0x036D0ED4 CBZ X0, 0x36D0FD8
	0x036D0ED8 MOV X1, X31
	0x036D0EDC BL 0x33ED11C
	0x036D0EE0 TBZ X0, 0x0, 0x36D0FDC
	0x036D0EE4 ADRP X8, 0xA6F000
	0x036D0EE8 LDR X8, [X8 + 0xFF8]
	0x036D0EEC LDR X2, [X8]
	0x036D0EF0 MOV X0, X23
	0x036D0EF4 MOV X1, X22
	0x036D0EF8 BL 0x319DBE4
	0x036D0EFC ADRP X8, 0xA6F000
	0x036D0F00 LDR X8, [X8 + 0xFF0]
	0x036D0F04 MOV X2, X0
	0x036D0F08 MOV X3, X1
	0x036D0F0C LDR X5, [X8]
	0x036D0F10 ADD X8, X31, 0x8
	0x036D0F14 MOV X0, X20
	0x036D0F18 MOV X1, X2
	0x036D0F1C MOV X2, X3
	0x036D0F20 MOV X3, X21
	0x036D0F24 MOV X4, X31
	0x036D0F28 BL 0x22151D0
	0x036D0F2C ADRP X8, 0xA70000
	0x036D0F30 LDR X8, [X8]
	0x036D0F34 LDUR V0, [X31 + 0x8]
	0x036D0F38 LDR X9, [X31 + 0x18]
	0x036D0F3C LDR X1, [X8]
	0x036D0F40 STR V0, [X31 + 0x3]
	0x036D0F44 STR X9, [X31 + 0x40]
	0x036D0F48 ADD X0, X31, 0x30
	0x036D0F4C BL 0x279134C
	0x036D0F50 MOV X21, X0
	0x036D0F54 MOV X22, X31
	0x036D0F58 MOV W23, W31
	0x036D0F5C STR X0, [X20 + 0xA8]
	0x036D0F60 LDRB W8, [X31 + 0x4C]
	0x036D0F64 CBZ W8, 0x36D0F74
	0x036D0F68 MOV X0, X19
	0x036D0F6C MOV X1, X31
	0x036D0F70 BL 0x33E14E4
	0x036D0F74 CBNZ X22, 0x36D1000
	0x036D0F78 TBZ X23, 0x0, 0x36D0FBC
	0x036D0F7C MOVN X8, 0x0
	0x036D0F80 ADD X9, X31, 0x20
	0x036D0F84 ADRP X0, 0xA24000
	0x036D0F88 LDR X19, [X9, X8, LSL #3]
	0x036D0F8C LDR X0, [X0 + 0x7B8]
	0x036D0F90 BL 0x1C16D08
	0x036D0F94 LDR W8, [X0 + 0xE0]
	0x036D0F98 CBNZ W8, 0x36D0FA0
	0x036D0F9C BL 0x1C16DFC
	0x036D0FA0 ADRP X0, 0xA70000
	0x036D0FA4 LDR X0, [X0 + 0x10]
	0x036D0FA8 BL 0x1C16D08
	0x036D0FAC MOV X1, X0
	0x036D0FB0 MOV X0, X19
	0x036D0FB4 BL 0x2299EAC
	0x036D0FB8 MOV X21, X0
	0x036D0FBC MOV X0, X21
	0x036D0FC0 LDP X20, X19, [X31 + 0x80]
	0x036D0FC4 LDP X22, X21, [X31 + 0x70]
	0x036D0FC8 LDP X24, X23, [X31 + 0x60]
	0x036D0FCC LDP X30, X25, [X31 + 0x50]
	0x036D0FD0 ADD X31, X31, 0x90
	0x036D0FD4 RET
	0x036D0FD8 BL 0x1C16F20
	0x036D0FDC ADRP X9, 0xA70000
	0x036D0FE0 LDR X8, [X20]
	0x036D0FE4 LDR X9, [X9 + 0x8]
	0x036D0FE8 LDR X21, [X9]
	0x036D0FEC LDP X9, X1, [X8 + 0x1C8]
	0x036D0FF0 MOV X0, X20
	0x036D0FF4 BLR X9
	0x036D0FF8 MOV X1, X21
	0x036D0FFC BL 0x36D33F0
	0x036D1000 MOV X0, X22
	0x036D1004 BL 0x1C16F18
	0x036D1008 B 0x36D1024
	0x036D100C B 0x36D1030
	0x036D1010 B 0x36D1030
	0x036D1014 B 0x36D1030
	0x036D1018 B 0x36D1030
	0x036D101C B 0x36D1030
	0x036D1020 B 0x36D1024
	0x036D1024 MOV X21, X1
	0x036D1028 MOV X20, X0
	0x036D102C B 0x36D1078
	0x036D1030 MOV X21, X1
	0x036D1034 MOV X20, X0
	0x036D1038 CMP W21, 0x1
	0x036D103C B.NE 0x36D105C
	0x036D1040 MOV X0, X20
	0x036D1044 BL 0x3EB1AD0
	0x036D1048 LDR X22, [X0]
	0x036D104C BL 0x3EB1AE0
	0x036D1050 MOV X21, X31
	0x036D1054 MOVZ W23, 0x1
	0x036D1058 B 0x36D0F60
	0x036D105C MOV X22, X31
	0x036D1060 LDRB W8, [X31 + 0x4C]
	0x036D1064 CBZ W8, 0x36D1074
	0x036D1068 MOV X0, X19
	0x036D106C MOV X1, X31
	0x036D1070 BL 0x33E14E4
	0x036D1074 CBNZ X22, 0x36D10E4
	0x036D1078 CMP W21, 0x1
	0x036D107C B.NE 0x36D1100
	0x036D1080 MOV X0, X20
	0x036D1084 BL 0x3EB1AD0
	0x036D1088 MOV X19, X0
	0x036D108C ADRP X0, 0xA22000
	0x036D1090 LDR X0, [X0 + 0x7D0]
	0x036D1094 BL 0x1C16D08
	0x036D1098 LDR X8, [X19]
	0x036D109C LDR X1, [X8]
	0x036D10A0 BL 0x1C17270
	0x036D10A4 TBZ X0, 0x0, 0x36D10C4
	0x036D10A8 LDR X8, [X19]
	0x036D10AC MOVZ W9, 0x1
	0x036D10B0 STR W9, [X31 + 0x28]
	0x036D10B4 STR X8, [X31 + 0x20]
	0x036D10B8 BL 0x3EB1AE0
	0x036D10BC MOV X8, X31
	0x036D10C0 B 0x36D0F80
	0x036D10C4 MOVZ W0, 0x8
	0x036D10C8 BL 0x3EB1AF0
	0x036D10CC LDR X8, [X19]
	0x036D10D0 STR X8, [X0]
	0x036D10D4 ADRP X1, 0x7E3000
	0x036D10D8 ADD X1, X1, 0xE58
	0x036D10DC MOV X2, X31
	0x036D10E0 BL 0x3EB1B00
	0x036D10E4 MOV X0, X22
	0x036D10E8 BL 0x1C16F18
	0x036D10EC MOV X21, X1
	0x036D10F0 MOV X20, X0
	0x036D10F4 B 0x36D1060
	0x036D10F8 MOV X20, X0
	0x036D10FC BL 0x3EB1AE0
	0x036D1100 MOV X0, X20
	0x036D1104 BL 0x1D2C690
	0x036D1108 BL 0x1990590
	0x036D110C TBZ X1, 0x0, 0x36D1114
	0x036D1110 RET
	0x036D1114 STP X30, X19, [X31 - 0x10]!
	0x036D1118 LDR X8, [X0]
	0x036D111C MOV X19, X2
	0x036D1120 LDP X9, X1, [X8 + 0x1C8]
	0x036D1124 BLR X9
	0x036D1128 MOV X1, X19
	0x036D112C BL 0x36D33F0
	0x036D1130 STP X30, X25, [X31 - 0x40]!
	0x036D1134 STP X24, X23, [X31 + 0x10]
	0x036D1138 STP X22, X21, [X31 + 0x20]
	0x036D113C STP X20, X19, [X31 + 0x30]
	0x036D1140 ADRP X23, 0xD0F000
	0x036D1144 ADRP X24, 0xA4B000
	0x036D1148 LDRB W8, [X23 + 0xA80]
	0x036D114C LDR X24, [X24 + 0xB60]
	0x036D1150 MOV X19, X3
	0x036D1154 MOV X20, X2
	0x036D1158 MOV W21, W1
	0x036D115C MOV X22, X0
	0x036D1160 TBNZ X8, 0x0, 0x36D1178
	0x036D1164 ADRP X0, 0xA4B000
	0x036D1168 LDR X0, [X0 + 0xB60]
	0x036D116C BL 0x1C16CF4
	0x036D1170 MOVZ W8, 0x1
	0x036D1174 STRB W8, [X23 + 0xA80]
	0x036D1178 MOV W0, W21
	0x036D117C MOV X1, X20
	0x036D1180 BL 0x36D1284
	0x036D1184 LDR X0, [X24]
	0x036D1188 LDR W23, [X22 + 0x58]
	0x036D118C LDRB W25, [X22 + 0x5C]
	0x036D1190 LDR W8, [X0 + 0xE0]
	0x036D1194 CBNZ W8, 0x36D11A0
	0x036D1198 BL 0x1C16DFC
	0x036D119C LDR X0, [X24]
	0x036D11A0 LDR X8, [X0 + 0xB8]
	0x036D11A4 CMP W25, 0x0
	0x036D11A8 CSET W1, NE
	0x036D11AC LDR X2, [X8 + 0x28]
	0x036D11B0 MOV W0, W23
	0x036D11B4 BL 0x36D0B4C
	0x036D11B8 MOV X0, X22
	0x036D11BC MOV W1, W21
	0x036D11C0 MOV X2, X20
	0x036D11C4 MOV X3, X19
	0x036D11C8 LDP X20, X19, [X31 + 0x30]
	0x036D11CC LDP X22, X21, [X31 + 0x20]
	0x036D11D0 LDP X24, X23, [X31 + 0x10]
	0x036D11D4 LDP X30, X25, [X31], #0x40
	0x036D11D8 B 0x36D141C
	0x036D11DC B 0x36D11E0
	0x036D11E0 MOV X19, X0
	0x036D11E4 CMP W1, 0x1
	0x036D11E8 B.NE 0x36D1278
	0x036D11EC MOV X0, X19
	0x036D11F0 BL 0x3EB1AD0
	0x036D11F4 MOV X19, X0
	0x036D11F8 ADRP X0, 0xA22000
	0x036D11FC LDR X0, [X0 + 0x7D0]
	0x036D1200 BL 0x1C16D08
	0x036D1204 LDR X8, [X19]
	0x036D1208 LDR X1, [X8]
	0x036D120C BL 0x1C17270
	0x036D1210 TBZ X0, 0x0, 0x36D1250
	0x036D1214 LDR X19, [X19]
	0x036D1218 BL 0x3EB1AE0
	0x036D121C ADRP X0, 0xA23000
	0x036D1220 LDR X0, [X0 + 0x7B8]
	0x036D1224 BL 0x1C16D08
	0x036D1228 LDR W8, [X0 + 0xE0]
	0x036D122C CBNZ W8, 0x36D1234
	0x036D1230 BL 0x1C16DFC
	0x036D1234 MOV X0, X19
	0x036D1238 LDP X20, X19, [X31 + 0x30]
	0x036D123C LDP X22, X21, [X31 + 0x20]
	0x036D1240 LDP X24, X23, [X31 + 0x10]
	0x036D1244 MOV X1, X31
	0x036D1248 LDP X30, X25, [X31], #0x40
	0x036D124C B 0x33EDAC4
	0x036D1250 MOVZ W0, 0x8
	0x036D1254 BL 0x3EB1AF0
	0x036D1258 LDR X8, [X19]
	0x036D125C STR X8, [X0]
	0x036D1260 ADRP X1, 0x7E3000
	0x036D1264 ADD X1, X1, 0xE58

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+32], X30
	003 Move [X31+48], X28
	004 Move [X31+56], X27
	005 Move [X31+64], X26
	006 Move [X31+72], X25
	007 Move [X31+80], X24
	008 Move [X31+88], X23
	009 Move [X31+96], X22
	010 Move [X31+104], X21
	011 Move [X31+112], X20
	012 Move [X31+120], X19
	013 Move X28, 0xD11000
	014 Move X24, 0xA26000
	015 Move X27, 0xA70000
	016 Move X26, 0xA53000
	017 Move X25, 0xA25000
	018 Move W8, [X28+2684]
	019 Move X24, [X24+2640]
	020 Move X27, [X27+3920]
	021 Move X26, [X26+3760]
	022 Move X25, [X25+1976]
	023 Move X20, X4
	024 Move X21, X3
	025 Move W23, W2
	026 Move X22, X1
	027 Move X19, X0
	028 Move TEMP, X8
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfEqual {76}
	032 Move X0, 0xA4E000
	033 Move X0, [X0+3656]
	034 Call 0x1C17CF4
	035 Move X0, 0xA24000
	036 Move X0, [X0+1560]
	037 Call 0x1C17CF4
	038 Move X0, 0xA26000
	039 Move X0, [X0+2640]
	040 Call 0x1C17CF4
	041 Move X0, 0xA2C000
	042 Move X0, [X0+2008]
	043 Call 0x1C17CF4
	044 Move X0, 0xA70000
	045 Move X0, [X0+2552]
	046 Call 0x1C17CF4
	047 Move X0, 0xA53000
	048 Move X0, [X0+3760]
	049 Call 0x1C17CF4
	050 Move X0, 0xA25000
	051 Move X0, [X0+1976]
	052 Call 0x1C17CF4
	053 Move X0, 0xA26000
	054 Move X0, [X0+1392]
	055 Call 0x1C17CF4
	056 Move X0, 0xA2C000
	057 Move X0, [X0+3192]
	058 Call 0x1C17CF4
	059 Move X0, 0xA2C000
	060 Move X0, [X0+3200]
	061 Call 0x1C17CF4
	062 Move X0, 0xA70000
	063 Move X0, [X0+3928]
	064 Call 0x1C17CF4
	065 Move X0, 0xA70000
	066 Move X0, [X0+3936]
	067 Call 0x1C17CF4
	068 Move X0, 0xA70000
	069 Move X0, [X0+3944]
	070 Call 0x1C17CF4
	071 Move X0, 0xA70000
	072 Move X0, [X0+3920]
	073 Call 0x1C17CF4
	074 Move W8, 1
	075 Move [X28+2684], W8
	076 Move X0, [X24]
	077 Move [X31+40], X31
	078 Call 0x1C17F10
	079 Move X1, X31
	080 Move X24, X0
	081 Call CancellationTokenSource..ctor, X0
	082 Move [X19+48], X24
	083 Move X0, [X27]
	084 Call 0x1C17F10
	085 Move X1, X31
	086 Move X24, X0
	087 Call Object..ctor, X0
	088 Move [X19+72], X24
	089 Move X0, [X26]
	090 Call 0x1C17F10
	091 Move W1, 1
	092 Move W2, 1
	093 Move X3, X31
	094 Move X24, X0
	095 Call SemaphoreSlim..ctor, X0, X1, X2
	096 Move W8, 2
	097 Move W9, 257
	098 Move [X19+80], X24
	099 Move [X19+122], X31
	100 Move [X19+114], X31
	101 Move [X19+88], W8
	102 NotImplemented "Instruction STRH not yet implemented."
	103 Move [X19+128], X31
	104 Move X0, [X25]
	105 Move W8, [X0+224]
	106 Compare W8, 0
	107 JumpIfNotEqual {109}
	108 Call 0x1C17DFC
	109 Move X24, 0xD08000
	110 Move W8, [X24+3869]
	111 And W23, W23, 1
	112 Compare W8, 0
	113 JumpIfNotEqual {119}
	114 Move X0, 0xA24000
	115 Move X0, [X0+1976]
	116 Call 0x1C17CF4
	117 Move W8, 1
	118 Move [X24+3869], W8
	119 Move X0, [X25]
	120 Move X26, 0xA23000
	121 Move X24, 0xA6F000
	122 Move W8, [X0+224]
	123 Move X26, [X26+1560]
	124 Move X24, [X24+2552]
	125 Compare W8, 0
	126 JumpIfNotEqual {129}
	127 Call 0x1C17DFC
	128 Move X0, [X25]
	129 Move X8, [X0+184]
	130 Move X0, X19
	131 Move X1, X31
	132 Move X8, [X8+48]
	133 Move [X19+168], X8
	134 Call Object..ctor, X0
	135 Move [X19+16], X22
	136 Move [X19+24], W23
	137 Move [X19+32], X21
	138 Move X0, [X26]
	139 Move W1, 125
	140 Call 0x1C17D6C
	141 Move X1, [X24]
	142 Call 0x319EBA8, X0
	143 Move X8, X0
	144 Move X0, [X19+48]
	145 Move [X19+56], X8
	146 Move [X19+64], X1
	147 Compare X0, 0
	148 JumpIfEqual {273}
	149 Move X23, 0xA6F000
	150 Move X23, [X23+3944]
	151 Move X1, X31
	152 Call CancellationTokenSource.get_Token, X0
	153 Move X8, [X23]
	154 Move [X31+40], X0
	155 Move W9, [X8+224]
	156 Compare W9, 0
	157 JumpIfNotEqual {161}
	158 Move X0, X8
	159 Call 0x1C17DFC
	160 Move X8, [X23]
	161 Move X9, [X8+184]
	162 Move X24, 0xA2B000
	163 Move X21, [X9+8]
	164 Move X24, [X24+2008]
	165 Compare X21, 0
	166 JumpIfNotEqual {189}
	167 Move W9, [X8+224]
	168 Compare W9, 0
	169 JumpIfNotEqual {173}
	170 Move X0, X8
	171 Call 0x1C17DFC
	172 Move X8, [X23]
	173 Move X9, 0xA4D000
	174 Move X8, [X8+184]
	175 Move X9, [X9+3656]
	176 Move X22, [X8]
	177 Move X0, [X9]
	178 Call 0x1C17F10
	179 Move X8, 0xA6F000
	180 Move X8, [X8+3928]
	181 Move X1, X22
	182 Move X3, X31
	183 Move X21, X0
	184 Move X2, [X8]
	185 Call Action`1<Object>..ctor, X0, X1, X2
	186 Move X8, [X23]
	187 Move X8, [X8+184]
	188 Move [X8+8], X21
	189 Move X0, [X24]
	190 Move X22, 0xA25000
	191 Move W8, [X0+224]
	192 Move X22, [X22+1392]
	193 Compare W8, 0
	194 JumpIfNotEqual {196}
	195 Call 0x1C17DFC
	196 Add X8, X31, 8
	197 Add X0, X31, 40
	198 Move X1, X21
	199 Move X2, X19
	200 Move X3, X31
	201 Call CancellationToken.Register, X0, X1, X2
	202 Move X0, [X22]
	203 Move W8, [X0+224]
	204 Compare W8, 0
	205 JumpIfNotEqual {208}
	206 Call 0x1C17DFC
	207 Move X0, [X22]
	208 Move X8, [X0+184]
	209 Move X0, X20
	210 Move X2, X31
	211 Move X1, [X8]
	212 Call TimeSpan.op_GreaterThan, X0, X1
	213 Move TEMP, X0
	214 And TEMP, TEMP, 1
	215 Compare TEMP, 1
	216 JumpIfNotEqual {260}
	217 Move X0, [X23]
	218 Move W8, [X0+224]
	219 Compare W8, 0
	220 JumpIfNotEqual {223}
	221 Call 0x1C17DFC
	222 Move X0, [X23]
	223 Move X8, [X0+184]
	224 Move X21, [X8+16]
	225 Compare X21, 0
	226 JumpIfNotEqual {248}
	227 Move W8, [X0+224]
	228 Compare W8, 0
	229 JumpIfNotEqual {232}
	230 Call 0x1C17DFC
	231 Move X0, [X23]
	232 Move X9, 0xA2B000
	233 Move X8, [X0+184]
	234 Move X9, [X9+3192]
	235 Move X22, [X8]
	236 Move X0, [X9]
	237 Call 0x1C17F10
	238 Move X8, 0xA6F000
	239 Move X8, [X8+3936]
	240 Move X1, X22
	241 Move X3, X31
	242 Move X21, X0
	243 Move X2, [X8]
	244 Call TimerCallback..ctor, X0, X1, X2
	245 Move X8, [X23]
	246 Move X8, [X8+184]
	247 Move [X8+16], X21
	248 Move X8, 0xA2B000
	249 Move X8, [X8+3200]
	250 Move X0, [X8]
	251 Call 0x1C17F10
	252 Move X1, X21
	253 Move X2, X19
	254 Move X3, X20
	255 Move X4, X20
	256 Move X5, X31
	257 Move X22, X0
	258 Call Timer..ctor, X0, X1, X2, X3, X4
	259 Move [X19+40], X22
	260 Move X20, [X31+112]
	261 Move X19, [X31+120]
	262 Move X22, [X31+96]
	263 Move X21, [X31+104]
	264 Move X24, [X31+80]
	265 Move X23, [X31+88]
	266 Move X26, [X31+64]
	267 Move X25, [X31+72]
	268 Move X28, [X31+48]
	269 Move X27, [X31+56]
	270 Move X30, [X31+32]
	271 Add X31, X31, 128
	272 Return 
	273 Call 0x1C17F20

Method: System.Void Dispose()

Disassembly:
	0x036D1288 STR X30, [X31 + 0x10]
	0x036D128C STP X20, X19, [X31 + 0x20]
	0x036D1290 CMP W0, 0x3ED
	0x036D1294 MOV X19, X1
	0x036D1298 B.NE 0x36D12D8
	0x036D129C MOV X0, X19
	0x036D12A0 MOV X1, X31
	0x036D12A4 BL 0x32277A8
	0x036D12A8 TBNZ X0, 0x0, 0x36D12F0
	0x036D12AC MOVZ W8, 0x3ED
	0x036D12B0 STR W8, [X31 + 0x1C]
	0x036D12B4 ADRP X0, 0xA6F000
	0x036D12B8 LDR X0, [X0 + 0x18]
	0x036D12BC BL 0x1C16D08
	0x036D12C0 ADD X1, X31, 0x1C
	0x036D12C4 BL 0x1C16E04
	0x036D12C8 MOV X20, X0
	0x036D12CC ADRP X0, 0xA6F000
	0x036D12D0 LDR X0, [X0 + 0x20]
	0x036D12D4 B 0x36D13B8
	0x036D12D8 CMP W0, 0x3E8
	0x036D12DC B.CC 0x36D1334
	0x036D12E0 CMP W0, 0x3F7
	0x036D12E4 B.EQ 0x36D1334
	0x036D12E8 CMP W0, 0x3EE
	0x036D12EC B.EQ 0x36D1334
	0x036D12F0 MOV X0, X19
	0x036D12F4 MOV X1, X31
	0x036D12F8 BL 0x32277A8
	0x036D12FC TBNZ X0, 0x0, 0x36D1324
	0x036D1300 MOV X0, X31
	0x036D1304 BL 0x3241948
	0x036D1308 CBZ X0, 0x36D138C
	0x036D130C LDR X8, [X0]
	0x036D1310 MOV X1, X19
	0x036D1314 LDP X9, X2, [X8 + 0x1F8]
	0x036D1318 BLR X9
	0x036D131C CMP W0, 0x7C
	0x036D1320 B.GE 0x36D1390
	0x036D1324 LDP X20, X19, [X31 + 0x20]
	0x036D1328 LDR X30, [X31 + 0x10]
	0x036D132C ADD X31, X31, 0x30
	0x036D1330 RET
	0x036D1334 STR W0, [X31 + 0x18]
	0x036D1338 ADRP X0, 0xA22000
	0x036D133C LDR X0, [X0 + 0x758]
	0x036D1340 BL 0x1C16D08

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, [X0+48]
	007 Move X20, X0
	008 Move [X31+12], W31
	009 Add X1, X31, 12
	010 Move X0, X19
	011 Move X2, X31
	012 Call Monitor.Enter, X0, X1
	013 Move X0, X20
	014 Call ManagedWebSocket.DisposeCore, X0
	015 Move X20, X31
	016 Move W8, [X31+12]
	017 Compare W8, 0
	018 JumpIfEqual {22}
	019 Move X0, X19
	020 Move X1, X31
	021 Call Monitor.Exit, X0
	022 Compare X20, 0
	023 JumpIfNotEqual {30}
	024 Move X20, [X31+32]
	025 Move X19, [X31+40]
	026 Move X30, [X31+16]
	027 Move X21, [X31+24]
	028 Add X31, X31, 48
	029 Return 
	030 Move X0, X20
	031 Call 0x1C17F18
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move X21, X0
	034 Move X0, X21
	035 Call 0x3EB2AD0
	036 Move X20, [X0]
	037 Call 0x3EB2AE0
	038 Move X20, X31
	039 Move X21, X0
	040 Move W8, [X31+12]
	041 Compare W8, 0
	042 JumpIfEqual {46}
	043 Move X0, X19
	044 Move X1, X31
	045 Call Monitor.Exit, X0
	046 Compare X20, 0
	047 JumpIfNotEqual {50}
	048 Move X0, X21
	049 Call 0x1D2D690
	050 Move X0, X20
	051 Call 0x1C17F18
	052 Call 0x1991590

Method: System.Void DisposeCore()

Disassembly:
	0x036D1344 ADD X1, X31, 0x18
	0x036D1348 BL 0x1C16E04
	0x036D134C MOV X19, X0
	0x036D1350 ADRP X0, 0xA6F000
	0x036D1354 LDR X0, [X0 + 0x28]
	0x036D1358 BL 0x1C16D08
	0x036D135C MOV X1, X19
	0x036D1360 MOV X2, X31
	0x036D1364 BL 0x32094D4
	0x036D1368 MOV X19, X0
	0x036D136C ADRP X0, 0xA2A000
	0x036D1370 LDR X0, [X0 + 0x578]
	0x036D1374 BL 0x1C16D08
	0x036D1378 BL 0x1C16F10
	0x036D137C MOV X20, X0
	0x036D1380 ADRP X0, 0xA6F000
	0x036D1384 LDR X0, [X0 + 0x30]
	0x036D1388 B 0x36D13EC
	0x036D138C BL 0x1C16F20
	0x036D1390 MOVZ W8, 0x7B
	0x036D1394 STR W8, [X31 + 0xC]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move W8, [X0+92]
	004 Compare W8, 0
	005 JumpIfNotEqual {23}
	006 Move X19, X0
	007 Move X0, [X0+40]
	008 Move W8, 1
	009 Move [X19+92], W8
	010 Compare X0, 0
	011 JumpIfEqual {14}
	012 Move X1, X31
	013 Call Timer.Dispose, X0
	014 Move X0, [X19+16]
	015 Compare X0, 0
	016 JumpIfEqual {19}
	017 Move X1, X31
	018 Call Stream.Dispose, X0
	019 Move W8, [X19+88]
	020 NotImplemented "Instruction CMP not yet implemented."
	021 Move W8, 5
	022 Move [X19+88], W8
	023 Move X30, [X31+16]
	024 Move X19, [X31+24]
	025 Return 

Method: System.Nullable`1<System.Net.WebSockets.WebSocketCloseStatus> get_CloseStatus()

Disassembly:
	0x036D1398 ADRP X0, 0xA22000
	0x036D139C LDR X0, [X0 + 0x758]

ISIL:
	001 Move X0, [X0+96]
	002 Return X0

Method: System.String get_CloseStatusDescription()

Disassembly:
	0x036D13A0 BL 0x1C16D08
	0x036D13A4 ADD X1, X31, 0xC

ISIL:
	001 Move X0, [X0+104]
	002 Return X0

Method: System.Net.WebSockets.WebSocketState get_State()

Disassembly:
	0x036D13A8 BL 0x1C16E04
	0x036D13AC MOV X20, X0

ISIL:
	001 Move W0, [X0+88]
	002 Return X0

Method: System.String get_SubProtocol()

Disassembly:
	0x036D13B0 ADRP X0, 0xA6F000
	0x036D13B4 LDR X0, [X0 + 0x38]

ISIL:
	001 Move X0, [X0+32]
	002 Return X0

Method: System.Threading.Tasks.Task SendAsync(System.ArraySegment`1<System.Byte> buffer, System.Net.WebSockets.WebSocketMessageType messageType, System.Boolean endOfMessage, System.Threading.CancellationToken cancellationToken)

Disassembly:
	0x036D13B8 BL 0x1C16D08
	0x036D13BC MOV X1, X19
	0x036D13C0 MOV X2, X20
	0x036D13C4 MOV X3, X31
	0x036D13C8 BL 0x320A264
	0x036D13CC MOV X19, X0
	0x036D13D0 ADRP X0, 0xA2A000
	0x036D13D4 LDR X0, [X0 + 0x578]
	0x036D13D8 BL 0x1C16D08
	0x036D13DC BL 0x1C16F10
	0x036D13E0 MOV X20, X0
	0x036D13E4 ADRP X0, 0xA6D000
	0x036D13E8 LDR X0, [X0 + 0xB50]
	0x036D13EC BL 0x1C16D08
	0x036D13F0 MOV X2, X0
	0x036D13F4 MOV X0, X20
	0x036D13F8 MOV X1, X19
	0x036D13FC MOV X3, X31
	0x036D1400 BL 0x330E16C
	0x036D1404 ADRP X0, 0xA6F000
	0x036D1408 LDR X0, [X0 + 0x40]
	0x036D140C BL 0x1C16D08
	0x036D1410 MOV X1, X0
	0x036D1414 MOV X0, X20
	0x036D1418 BL 0x1C16DEC
	0x036D141C SUB X31, X31, 0xC0
	0x036D1420 STR X30, [X31 + 0x80]
	0x036D1424 STP X24, X23, [X31 + 0x90]
	0x036D1428 STP X22, X21, [X31 + 0xA0]
	0x036D142C STP X20, X19, [X31 + 0xB0]
	0x036D1430 ADRP X24, 0xD0F000
	0x036D1434 ADRP X23, 0xA25000
	0x036D1438 LDRB W8, [X24 + 0xA8F]
	0x036D143C LDR X23, [X23 + 0x280]
	0x036D1440 MOV X19, X3
	0x036D1444 MOV X20, X2
	0x036D1448 MOV W21, W1
	0x036D144C MOV X22, X0
	0x036D1450 TBNZ X8, 0x0, 0x36D1474
	0x036D1454 ADRP X0, 0xA6F000
	0x036D1458 LDR X0, [X0 + 0x48]
	0x036D145C BL 0x1C16CF4
	0x036D1460 ADRP X0, 0xA25000
	0x036D1464 LDR X0, [X0 + 0x280]
	0x036D1468 BL 0x1C16CF4
	0x036D146C MOVZ W8, 0x1
	0x036D1470 STRB W8, [X24 + 0xA8F]
	0x036D1474 LDR X0, [X23]
	0x036D1478 MOVI V0.2D, 0x0
	0x036D147C STR X31, [X31 + 0x70]
	0x036D1480 STP V0, V0, [X31 + 0x40]
	0x036D1484 STR V0, [X31 + 0x6]
	0x036D1488 STP V0, V0, [X31 + 0x20]
	0x036D148C STR X22, [X31 + 0x40]
	0x036D1490 STR W21, [X31 + 0x48]
	0x036D1494 STP X20, X19, [X31 + 0x50]
	0x036D1498 ADRP X19, 0xA6F000
	0x036D149C LDR W8, [X0 + 0xE0]
	0x036D14A0 LDR X19, [X19 + 0x48]
	0x036D14A4 CBNZ W8, 0x36D14AC
	0x036D14A8 BL 0x1C16DFC
	0x036D14AC ADD X8, X31, 0x8
	0x036D14B0 MOV X0, X31
	0x036D14B4 BL 0x32C4770
	0x036D14B8 LDUR V0, [X31 + 0x8]
	0x036D14BC LDR X9, [X31 + 0x18]
	0x036D14C0 LDR X2, [X19]
	0x036D14C4 ADD X8, X31, 0x20
	0x036D14C8 ORR X19, X8, 0xF
	0x036D14CC MOVN W10, 0x0
	0x036D14D0 ADD X1, X31, 0x20
	0x036D14D4 MOV X0, X19
	0x036D14D8 STUR V0, [X31 + 0x28]
	0x036D14DC STR X9, [X31 + 0x38]
	0x036D14E0 STR W10, [X31 + 0x20]
	0x036D14E4 BL 0x2194AB8
	0x036D14E8 MOV X0, X19
	0x036D14EC MOV X1, X31
	0x036D14F0 BL 0x32C47F8
	0x036D14F4 LDP X20, X19, [X31 + 0xB0]
	0x036D14F8 LDP X22, X21, [X31 + 0xA0]
	0x036D14FC LDP X24, X23, [X31 + 0x90]
	0x036D1500 LDR X30, [X31 + 0x80]
	0x036D1504 ADD X31, X31, 0xC0
	0x036D1508 RET
	0x036D150C STP X30, X25, [X31 - 0x40]!
	0x036D1510 STP X24, X23, [X31 + 0x10]
	0x036D1514 STP X22, X21, [X31 + 0x20]
	0x036D1518 STP X20, X19, [X31 + 0x30]
	0x036D151C ADRP X23, 0xD0F000
	0x036D1520 ADRP X24, 0xA4B000
	0x036D1524 LDRB W8, [X23 + 0xA81]
	0x036D1528 LDR X24, [X24 + 0xB60]
	0x036D152C MOV X19, X3
	0x036D1530 MOV X20, X2
	0x036D1534 MOV W21, W1
	0x036D1538 MOV X22, X0
	0x036D153C TBNZ X8, 0x0, 0x36D1554
	0x036D1540 ADRP X0, 0xA4B000
	0x036D1544 LDR X0, [X0 + 0xB60]
	0x036D1548 BL 0x1C16CF4
	0x036D154C MOVZ W8, 0x1
	0x036D1550 STRB W8, [X23 + 0xA81]
	0x036D1554 MOV W0, W21
	0x036D1558 MOV X1, X20
	0x036D155C BL 0x36D1284
	0x036D1560 LDR X0, [X24]
	0x036D1564 LDR W23, [X22 + 0x58]
	0x036D1568 LDRB W25, [X22 + 0x5C]
	0x036D156C LDR W8, [X0 + 0xE0]
	0x036D1570 CBNZ W8, 0x36D157C
	0x036D1574 BL 0x1C16DFC
	0x036D1578 LDR X0, [X24]
	0x036D157C LDR X8, [X0 + 0xB8]
	0x036D1580 CMP W25, 0x0
	0x036D1584 CSET W1, NE
	0x036D1588 LDR X2, [X8 + 0x20]
	0x036D158C MOV W0, W23
	0x036D1590 BL 0x36D0B4C
	0x036D1594 MOV X0, X22
	0x036D1598 MOV W1, W21
	0x036D159C MOV X2, X20
	0x036D15A0 MOV X3, X19
	0x036D15A4 LDP X20, X19, [X31 + 0x30]
	0x036D15A8 LDP X22, X21, [X31 + 0x20]
	0x036D15AC LDP X24, X23, [X31 + 0x10]
	0x036D15B0 LDP X30, X25, [X31], #0x40
	0x036D15B4 B 0x36D1660
	0x036D15B8 B 0x36D15BC
	0x036D15BC MOV X19, X0
	0x036D15C0 CMP W1, 0x1
	0x036D15C4 B.NE 0x36D1654
	0x036D15C8 MOV X0, X19
	0x036D15CC BL 0x3EB1AD0
	0x036D15D0 MOV X19, X0
	0x036D15D4 ADRP X0, 0xA22000
	0x036D15D8 LDR X0, [X0 + 0x7D0]
	0x036D15DC BL 0x1C16D08
	0x036D15E0 LDR X8, [X19]
	0x036D15E4 LDR X1, [X8]
	0x036D15E8 BL 0x1C17270
	0x036D15EC TBZ X0, 0x0, 0x36D162C
	0x036D15F0 LDR X19, [X19]
	0x036D15F4 BL 0x3EB1AE0
	0x036D15F8 ADRP X0, 0xA23000
	0x036D15FC LDR X0, [X0 + 0x7B8]
	0x036D1600 BL 0x1C16D08
	0x036D1604 LDR W8, [X0 + 0xE0]
	0x036D1608 CBNZ W8, 0x36D1610
	0x036D160C BL 0x1C16DFC
	0x036D1610 MOV X0, X19
	0x036D1614 LDP X20, X19, [X31 + 0x30]
	0x036D1618 LDP X22, X21, [X31 + 0x20]
	0x036D161C LDP X24, X23, [X31 + 0x10]
	0x036D1620 MOV X1, X31
	0x036D1624 LDP X30, X25, [X31], #0x40
	0x036D1628 B 0x33EDAC4
	0x036D162C MOVZ W0, 0x8
	0x036D1630 BL 0x3EB1AF0
	0x036D1634 LDR X8, [X19]
	0x036D1638 STR X8, [X0]
	0x036D163C ADRP X1, 0x7E3000
	0x036D1640 ADD X1, X1, 0xE58
	0x036D1644 MOV X2, X31
	0x036D1648 BL 0x3EB1B00
	0x036D164C MOV X19, X0
	0x036D1650 BL 0x3EB1AE0
	0x036D1654 MOV X0, X19
	0x036D1658 BL 0x1D2C690
	0x036D165C BL 0x1990590
	0x036D1660 SUB X31, X31, 0xD0
	0x036D1664 STR X30, [X31 + 0x90]
	0x036D1668 STP X24, X23, [X31 + 0xA0]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+16], X30
	003 Move [X31+32], X26
	004 Move [X31+40], X25
	005 Move [X31+48], X24
	006 Move [X31+56], X23
	007 Move [X31+64], X22
	008 Move [X31+72], X21
	009 Move [X31+80], X20
	010 Move [X31+88], X19
	011 Move X25, 0xD10000
	012 Move W8, [X25+2685]
	013 Move X19, X5
	014 Move W21, W4
	015 Move W20, W3
	016 Move X23, X2
	017 Move X24, X1
	018 Move X22, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {34}
	023 Move X0, 0xA6F000
	024 Move X0, [X0+3952]
	025 Call 0x1C17CF4
	026 Move X0, 0xA4D000
	027 Move X0, [X0+3648]
	028 Call 0x1C17CF4
	029 Move X0, 0xA4E000
	030 Move X0, [X0+3912]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X25+2685], W8
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Move X8, 0xA4E000
	036 Move X8, [X8+3912]
	037 Move X25, 0xA6F000
	038 Move X26, 0xA4D000
	039 Move X0, X24
	040 Move X2, [X8]
	041 Move X25, [X25+3952]
	042 Move X26, [X26+3648]
	043 Move X1, X23
	044 Call WebSocketValidate.ValidateArraySegment, X0, X1
	045 Move X2, [X25]
	046 Move X0, X24
	047 Move X1, X23
	048 Call 0x25BDDF0, X0
	049 Move X2, X0
	050 Move X3, X1
	051 And W4, W21, 1
	052 Move X0, X22
	053 Move X1, X2
	054 Move X2, X3
	055 Move W3, W20
	056 Move X5, X19
	057 Call ManagedWebSocket.SendPrivateAsync, X0, X1, X2, X3, X4
	058 Move X8, X0
	059 Move X0, [X26]
	060 Move [X31], X8
	061 Move [X31+8], X1
	062 Move W8, [X0+224]
	063 Compare W8, 0
	064 JumpIfNotEqual {66}
	065 Call 0x1C17DFC
	066 Add X0, X31, 0
	067 Move X1, X31
	068 Call ValueTask.AsTask, X0
	069 Move X20, [X31+80]
	070 Move X19, [X31+88]
	071 Move X22, [X31+64]
	072 Move X21, [X31+72]
	073 Move X24, [X31+48]
	074 Move X23, [X31+56]
	075 Move X26, [X31+32]
	076 Move X25, [X31+40]
	077 Move X30, [X31+16]
	078 Add X31, X31, 96
	079 Return X0
	080 Move X0, 0xA23000
	081 Move X0, [X0+2512]
	082 Call 0x1C17D08
	083 Move W1, 5
	084 Call 0x1C17D6C
	085 Move X19, X0
	086 Call 0x19913C0
	087 Move X20, 0xA6D000
	088 Move X20, [X20+3616]
	089 Move X0, X20
	090 Call 0x1C17D08
	091 Move X1, X0
	092 Move X0, X19
	093 Call 0x19990B4
	094 Move X0, X20
	095 Call 0x1C17D08
	096 Move X2, X0
	097 Move X0, X19
	098 Move X1, X31
	099 Call 0x1994444
	100 Move X0, X19
	101 Call 0x19913C0
	102 Move X20, 0xA6F000
	103 Move X20, [X20+3960]
	104 Move X0, X20
	105 Call 0x1C17D08
	106 Move X1, X0
	107 Move X0, X19
	108 Call 0x19990B4
	109 Move X0, X20
	110 Call 0x1C17D08
	111 Move X2, X0
	112 Move W1, 1
	113 Move X0, X19
	114 Call 0x1994444
	115 Move X0, X19
	116 Call 0x19913C0
	117 Move X20, 0xA6F000
	118 Move X20, [X20+3968]
	119 Move X0, X20
	120 Call 0x1C17D08
	121 Move X1, X0
	122 Move X0, X19
	123 Call 0x19990B4
	124 Move X0, X20
	125 Call 0x1C17D08
	126 Move X2, X0
	127 Move W1, 2
	128 Move X0, X19
	129 Call 0x1994444
	130 Move X0, X19
	131 Call 0x19913C0
	132 Move X20, 0xA6C000
	133 Move X20, [X20+3712]
	134 Move X0, X20
	135 Call 0x1C17D08
	136 Move X1, X0
	137 Move X0, X19
	138 Call 0x19990B4
	139 Move X0, X20
	140 Call 0x1C17D08
	141 Move X2, X0
	142 Move W1, 3
	143 Move X0, X19
	144 Call 0x1994444
	145 Move X0, X19
	146 Call 0x19913C0
	147 Move X20, 0xA6F000
	148 Move X20, [X20+3976]
	149 Move X0, X20
	150 Call 0x1C17D08
	151 Move X1, X0
	152 Move X0, X19
	153 Call 0x19990B4
	154 Move X0, X20
	155 Call 0x1C17D08
	156 Move X2, X0
	157 Move W1, 4
	158 Move X0, X19
	159 Call 0x1994444
	160 Move X0, 0xA6F000
	161 Move X0, [X0+3984]
	162 Call 0x1C17D08
	163 Move X1, X19
	164 Move X2, X31
	165 Call SR.Format, X0, X1
	166 Move X19, X0
	167 Move X0, 0xA2B000
	168 Move X0, [X0+1400]
	169 Call 0x1C17D08
	170 Call 0x1C17F10
	171 Move X20, X0
	172 Move X0, 0xA6F000
	173 Move X0, [X0+3992]
	174 Call 0x1C17D08
	175 Move X2, X0
	176 Move X0, X20
	177 Move X1, X19
	178 Move X3, X31
	179 Call ArgumentException..ctor, X0, X1, X2
	180 Move X0, 0xA6F000
	181 Move X0, [X0+4000]
	182 Call 0x1C17D08
	183 Move X1, X0
	184 Move X0, X20
	185 Call 0x1C17DEC

Method: System.Threading.Tasks.ValueTask SendPrivateAsync(System.ReadOnlyMemory`1<System.Byte> buffer, System.Net.WebSockets.WebSocketMessageType messageType, System.Boolean endOfMessage, System.Threading.CancellationToken cancellationToken)

Disassembly:
	0x036D1804 MOV W1, W20
	0x036D1808 BL 0x36D1D50
	0x036D180C LDR X21, [X19 + 0x98]
	0x036D1810 LDR X20, [X19 + 0x10]
	0x036D1814 MOV W22, W0
	0x036D1818 CBZ X21, 0x36D1888
	0x036D181C LDR W8, [X21 + 0x18]
	0x036D1820 CMP W22, W8
	0x036D1824 B.LS 0x36D1830
	0x036D1828 MOV X0, X31
	0x036D182C BL 0x339D6EC
	0x036D1830 UBFM X2, X22, 0x20, 0x1F
	0x036D1834 CBZ X20, 0x36D18A0
	0x036D1838 LDR X8, [X20]
	0x036D183C LDR X9, [X8 + 0x328]
	0x036D1840 LDR X4, [X8 + 0x330]
	0x036D1844 MOV X0, X20
	0x036D1848 MOV X1, X21
	0x036D184C MOV X3, X31
	0x036D1850 BLR X9
	0x036D1854 ADRP X8, 0xA4C000
	0x036D1858 LDR X8, [X8 + 0xE40]
	0x036D185C MOV X21, X0
	0x036D1860 MOV X20, X1
	0x036D1864 LDR X0, [X8]
	0x036D1868 LDR W8, [X0 + 0xE0]
	0x036D186C CBNZ W8, 0x36D1874
	0x036D1870 BL 0x1C16DFC
	0x036D1874 ADRP X22, 0xD0B000
	0x036D1878 LDRB W8, [X22 + 0x4E4]
	0x036D187C CBZ W8, 0x36D18A4
	0x036D1880 CBNZ X21, 0x36D18C8
	0x036D1884 B 0x36D1960
	0x036D1888 CBZ W22, 0x36D1894
	0x036D188C MOV X0, X31
	0x036D1890 BL 0x339D6EC
	0x036D1894 MOV X21, X31
	0x036D1898 MOV X2, X31
	0x036D189C CBNZ X20, 0x36D1838
	0x036D18A0 BL 0x1C16F20
	0x036D18A4 ADRP X0, 0xA51000
	0x036D18A8 LDR X0, [X0 + 0xEA8]
	0x036D18AC BL 0x1C16CF4
	0x036D18B0 ADRP X0, 0xA23000
	0x036D18B4 LDR X0, [X0 + 0x7B8]
	0x036D18B8 BL 0x1C16CF4
	0x036D18BC MOVZ W8, 0x1
	0x036D18C0 STRB W8, [X22 + 0x4E4]
	0x036D18C4 CBZ X21, 0x36D1960
	0x036D18C8 ADRP X9, 0xA23000
	0x036D18CC LDR X9, [X9 + 0x7B8]
	0x036D18D0 LDR X8, [X21]
	0x036D18D4 LDR X9, [X9]
	0x036D18D8 LDRB W11, [X8 + 0x130]
	0x036D18DC LDRB W10, [X9 + 0x130]
	0x036D18E0 CMP W11, W10
	0x036D18E4 B.CC 0x36D18FC
	0x036D18E8 LDR X11, [X8 + 0xC8]
	0x036D18EC ADD X10, X11, X10, 0x3, LSL
	0x036D18F0 LDUR X10, [X10 - 0x8]
	0x036D18F4 CMP X10, X9
	0x036D18F8 B.EQ 0x36D19F8
	0x036D18FC ADRP X10, 0xA51000
	0x036D1900 LDR X10, [X10 + 0xEA8]
	0x036D1904 LDRH W9, [X8 + 0x12E]
	0x036D1908 LDR X1, [X10]
	0x036D190C CBZ X9, 0x36D1930
	0x036D1910 LDR X10, [X8 + 0xB0]
	0x036D1914 ADD X10, X10, 0x8
	0x036D1918 LDUR X11, [X10 - 0x8]
	0x036D191C CMP X11, X1
	0x036D1920 B.EQ 0x36D1940
	0x036D1924 SUBS X9, X9, 0x1
	0x036D1928 ADD X10, X10, 0x10
	0x036D192C B.NE 0x36D1918
	0x036D1930 MOV X0, X21
	0x036D1934 MOV W2, W31
	0x036D1938 BL 0x1C5C788
	0x036D193C B 0x36D194C
	0x036D1940 LDRSW X9, [X10]
	0x036D1944 ADD X8, X8, X9, 0x4, LSL
	0x036D1948 ADD X0, X8, 0x138
	0x036D194C LDP X8, X2, [X0]
	0x036D1950 MOV X0, X21
	0x036D1954 MOV W1, W20
	0x036D1958 BLR X8
	0x036D195C CBZ W0, 0x36D19A0
	0x036D1960 MOV X23, X31
	0x036D1964 AND X24, X20, 0xFFFFFFFF
	0x036D1968 AND X25, X20, 0xFFFF
	0x036D196C AND X27, X20, 0xFFFFFF
	0x036D1970 MOVZ W26, 0x3
	0x036D1974 MOV X22, X21
	0x036D1978 MOV X0, X19
	0x036D197C BL 0x36D31F4
	0x036D1980 LDR X0, [X19 + 0x50]
	0x036D1984 CBZ X0, 0x36D1A0C
	0x036D1988 MOV X1, X31
	0x036D198C BL 0x33E2354
	0x036D1990 CBNZ X23, 0x36D1A10
	0x036D1994 CMP W26, 0x3
	0x036D1998 B.EQ 0x36D19CC
	0x036D199C CBNZ W26, 0x36D19D8
	0x036D19A0 MOV X0, X19
	0x036D19A4 MOV X1, X21
	0x036D19A8 MOV X2, X20
	0x036D19AC BL 0x36D208C
	0x036D19B0 MOV X22, X0
	0x036D19B4 CBNZ X0, 0x36D19C4
	0x036D19B8 MOVZ W0, 0x26
	0x036D19BC MOV X1, X31
	0x036D19C0 BL 0x338F3E0
	0x036D19C4 MOVZ W1, 0x10000
	0x036D19C8 B 0x36D19D8
	0x036D19CC ORR X8, X27, X25, 0x0
	0x036D19D0 ORR X1, X8, X24, 0x0
	0x036D19D4 B 0x36D19D8
	0x036D19D8 MOV X0, X22
	0x036D19DC LDP X20, X19, [X31 + 0x50]
	0x036D19E0 LDP X22, X21, [X31 + 0x40]
	0x036D19E4 LDP X24, X23, [X31 + 0x30]
	0x036D19E8 LDP X26, X25, [X31 + 0x20]
	0x036D19EC LDP X30, X27, [X31 + 0x10]
	0x036D19F0 ADD X31, X31, 0x60
	0x036D19F4 RET
	0x036D19F8 MOV X0, X21
	0x036D19FC MOV X1, X31
	0x036D1A00 BL 0x33ED11C
	0x036D1A04 TBNZ X0, 0x0, 0x36D1960
	0x036D1A08 B 0x36D19A0
	0x036D1A0C BL 0x1C16F20
	0x036D1A10 MOV X0, X23
	0x036D1A14 BL 0x1C16F18
	0x036D1A18 MOV X22, X0
	0x036D1A1C B 0x36D1A3C
	0x036D1A20 B 0x36D1A30
	0x036D1A24 B 0x36D1A30
	0x036D1A28 B 0x36D1A30
	0x036D1A2C B 0x36D1A30
	0x036D1A30 MOV X22, X0
	0x036D1A34 MOV X20, X31
	0x036D1A38 MOV X21, X31
	0x036D1A3C B 0x36D1A44
	0x036D1A40 MOV X22, X0
	0x036D1A44 CMP W1, 0x1
	0x036D1A48 B.NE 0x36D1BD0
	0x036D1A4C MOV X0, X22
	0x036D1A50 BL 0x3EB1AD0
	0x036D1A54 MOV X22, X0
	0x036D1A58 ADRP X0, 0xA22000
	0x036D1A5C LDR X0, [X0 + 0x7D0]
	0x036D1A60 BL 0x1C16D08
	0x036D1A64 LDR X8, [X22]
	0x036D1A68 LDR X1, [X8]
	0x036D1A6C BL 0x1C17270
	0x036D1A70 TBZ X0, 0x0, 0x36D1B7C
	0x036D1A74 LDR X22, [X22]
	0x036D1A78 BL 0x3EB1AE0
	0x036D1A7C ADRP X0, 0xA2A000
	0x036D1A80 LDR X0, [X0 + 0x8A8]
	0x036D1A84 BL 0x1C16D08
	0x036D1A88 CBZ X22, 0x36D1AB4
	0x036D1A8C LDR X8, [X22]
	0x036D1A90 LDRB W9, [X0 + 0x130]
	0x036D1A94 LDRB W10, [X8 + 0x130]
	0x036D1A98 CMP W10, W9
	0x036D1A9C B.CC 0x36D1AB4
	0x036D1AA0 LDR X8, [X8 + 0xC8]
	0x036D1AA4 ADD X8, X8, X9, 0x3, LSL
	0x036D1AA8 LDUR X8, [X8 - 0x8]
	0x036D1AAC CMP X8, X0
	0x036D1AB0 B.EQ 0x36D1B28
	0x036D1AB4 LDR W8, [X19 + 0x58]
	0x036D1AB8 CMP W8, 0x6
	0x036D1ABC B.NE 0x36D1AEC
	0x036D1AC0 ADRP X0, 0xA4B000
	0x036D1AC4 LDR X0, [X0 + 0xB60]
	0x036D1AC8 BL 0x1C16D08
	0x036D1ACC LDR W8, [X0 + 0xE0]
	0x036D1AD0 CBNZ W8, 0x36D1AD8
	0x036D1AD4 BL 0x1C16DFC
	0x036D1AD8 MOV X0, X22
	0x036D1ADC MOV X1, X31
	0x036D1AE0 BL 0x36D1FE8
	0x036D1AE4 MOV X23, X0
	0x036D1AE8 B 0x36D1B2C
	0x036D1AEC ADRP X0, 0xA4D000
	0x036D1AF0 LDR X0, [X0 + 0x308]
	0x036D1AF4 BL 0x1C16D08
	0x036D1AF8 BL 0x1C16F10
	0x036D1AFC MOV X23, X0
	0x036D1B00 MOVZ W0, 0x8
	0x036D1B04 BL 0x36DD4C0
	0x036D1B08 MOV X1, X0
	0x036D1B0C MOV X0, X23
	0x036D1B10 MOV X2, X22
	0x036D1B14 MOV X3, X31
	0x036D1B18 BL 0x3662038
	0x036D1B1C MOVZ W8, 0x8
	0x036D1B20 STR W8, [X23 + 0x90]
	0x036D1B24 B 0x36D1B2C
	0x036D1B28 MOV X23, X22
	0x036D1B2C ADRP X0, 0xA23000
	0x036D1B30 LDR X0, [X0 + 0x7B8]
	0x036D1B34 BL 0x1C16D08
	0x036D1B38 LDR W8, [X0 + 0xE0]
	0x036D1B3C CBNZ W8, 0x36D1B44
	0x036D1B40 BL 0x1C16DFC
	0x036D1B44 MOV X0, X23
	0x036D1B48 MOV X1, X31

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X25, 0xD10000
	012 Move W8, [X25+2686]
	013 Move X21, X5
	014 Move W19, W4
	015 Move W24, W3
	016 Move X22, X2
	017 Move X23, X1
	018 Move X20, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {28}
	023 Move X0, 0xA4C000
	024 Move X0, [X0+2912]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X25+2686], W8
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Move X27, 0xA4C000
	030 Move X27, [X27+2912]
	031 Move W25, [X20+88]
	032 Move W26, [X20+92]
	033 Move X0, [X27]
	034 Move W8, [X0+224]
	035 Compare W8, 0
	036 JumpIfNotEqual {39}
	037 Call 0x1C17DFC
	038 Move X0, [X27]
	039 Move X8, [X0+184]
	040 NotImplemented "Instruction CMP not yet implemented."
	041 NotImplemented "Instruction CSET not yet implemented."
	042 Move X2, [X8+16]
	043 Move W0, W25
	044 Call WebSocketValidate.ThrowIfInvalidState, X0, X1, X2
	045 Move W8, [X20+160]
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Move W9, 1
	048 NotImplemented "Instruction CINC not yet implemented."
	049 NotImplemented "Instruction CMP not yet implemented."
	050 NotImplemented "Instruction CSEL not yet implemented."
	051 And W2, W19, 1
	052 Move X0, X20
	053 Move X3, X23
	054 Move X4, X22
	055 Move X5, X21
	056 Call ManagedWebSocket.SendFrameAsync, X0, X1, X2, X3, X4
	057 NotImplemented "Instruction ORN not yet implemented."
	058 And W8, W8, 1
	059 Move X21, X0
	060 Move [X20+160], W8
	061 Move X0, X21
	062 Move X20, [X31+64]
	063 Move X19, [X31+72]
	064 Move X22, [X31+48]
	065 Move X21, [X31+56]
	066 Move X24, [X31+32]
	067 Move X23, [X31+40]
	068 Move X26, [X31+16]
	069 Move X25, [X31+24]
	070 Move X30, [X31+80]
	071 Move X27, [X31+88]
	072 Return X0
	073 Move X0, 0xA23000
	074 Move X0, [X0+2512]
	075 Call 0x1C17D08
	076 Move W1, 5
	077 Call 0x1C17D6C
	078 Move X19, X0
	079 Call 0x19913C0
	080 Move X20, 0xA6D000
	081 Move X20, [X20+3616]
	082 Move X0, X20
	083 Call 0x1C17D08
	084 Move X1, X0
	085 Move X0, X19
	086 Call 0x19990B4
	087 Move X0, X20
	088 Call 0x1C17D08
	089 Move X2, X0
	090 Move X0, X19
	091 Move X1, X31
	092 Call 0x1994444
	093 Move X0, X19
	094 Call 0x19913C0
	095 Move X20, 0xA6F000
	096 Move X20, [X20+3960]
	097 Move X0, X20
	098 Call 0x1C17D08
	099 Move X1, X0
	100 Move X0, X19
	101 Call 0x19990B4
	102 Move X0, X20
	103 Call 0x1C17D08
	104 Move X2, X0
	105 Move W1, 1
	106 Move X0, X19
	107 Call 0x1994444
	108 Move X0, X19
	109 Call 0x19913C0
	110 Move X20, 0xA6F000
	111 Move X20, [X20+3968]
	112 Move X0, X20
	113 Call 0x1C17D08
	114 Move X1, X0
	115 Move X0, X19
	116 Call 0x19990B4
	117 Move X0, X20
	118 Call 0x1C17D08
	119 Move X2, X0
	120 Move W1, 2
	121 Move X0, X19
	122 Call 0x1994444
	123 Move X0, X19
	124 Call 0x19913C0
	125 Move X20, 0xA6C000
	126 Move X20, [X20+3712]
	127 Move X0, X20
	128 Call 0x1C17D08
	129 Move X1, X0
	130 Move X0, X19
	131 Call 0x19990B4
	132 Move X0, X20
	133 Call 0x1C17D08
	134 Move X2, X0
	135 Move W1, 3
	136 Move X0, X19
	137 Call 0x1994444
	138 Move X0, X19
	139 Call 0x19913C0
	140 Move X20, 0xA6F000
	141 Move X20, [X20+3976]
	142 Move X0, X20
	143 Call 0x1C17D08
	144 Move X1, X0
	145 Move X0, X19
	146 Call 0x19990B4
	147 Move X0, X20
	148 Call 0x1C17D08
	149 Move X2, X0
	150 Move W1, 4
	151 Move X0, X19
	152 Call 0x1994444
	153 Move X0, 0xA6F000
	154 Move X0, [X0+3984]
	155 Call 0x1C17D08
	156 Move X1, X19
	157 Move X2, X31
	158 Call SR.Format, X0, X1
	159 Move X19, X0
	160 Move X0, 0xA2B000
	161 Move X0, [X0+1400]
	162 Call 0x1C17D08
	163 Call 0x1C17F10
	164 Move X20, X0
	165 Move X0, 0xA6F000
	166 Move X0, [X0+3992]
	167 Call 0x1C17D08
	168 Move X2, X0
	169 Move X0, X20
	170 Move X1, X19
	171 Move X3, X31
	172 Call ArgumentException..ctor, X0, X1, X2
	173 Move X0, 0xA6F000
	174 Move X0, [X0+4040]
	175 Call 0x1C17D08
	176 Move X1, X0
	177 Move X0, X20
	178 Call 0x1C17DEC
	179 Move X19, X0
	180 NotImplemented "Instruction CMP not yet implemented."
	181 Move X0, X19
	182 Call 0x3EB2AD0
	183 Move X19, X0
	184 Move X0, 0xA23000
	185 Move X0, [X0+2000]
	186 Call 0x1C17D08
	187 Move X8, [X19]
	188 Move X1, [X8]
	189 Call 0x1C18270
	190 Move TEMP, X0
	191 And TEMP, TEMP, 1
	192 Compare TEMP, 1
	193 JumpIfNotEqual {213}
	194 Move X19, [X19]
	195 Call 0x3EB2AE0
	196 Move X0, 0xA24000
	197 Move X0, [X0+1976]
	198 Call 0x1C17D08
	199 Move W8, [X0+224]
	200 Compare W8, 0
	201 JumpIfNotEqual {203}
	202 Call 0x1C17DFC
	203 Move X0, X19
	204 Move X1, X31
	205 Call Task.FromException, X0
	206 Move X21, X0
	207 Compare X0, 0
	208 JumpIfNotEqual {212}
	209 Move W0, 38
	210 Move X1, X31
	211 Call ThrowHelper.ThrowArgumentNullException, X0
	212 Move W1, 0x10000
	213 Move W0, 8
	214 Call 0x3EB2AF0
	215 Move X8, [X19]
	216 Move [X0], X8
	217 Move X1, 0x7E4000
	218 Add X1, X1, 3672
	219 Move X2, X31
	220 Call 0x3EB2B00
	221 Move X19, X0
	222 Call 0x3EB2AE0
	223 Move X0, X19
	224 Call 0x1D2D690
	225 Call 0x1991590

Method: System.Threading.Tasks.Task`1<System.Net.WebSockets.WebSocketReceiveResult> ReceiveAsync(System.ArraySegment`1<System.Byte> buffer, System.Threading.CancellationToken cancellationToken)

Disassembly:
	0x036D1DD8 BL 0x1C16CF4
	0x036D1DDC ADRP X0, 0xA51000
	0x036D1DE0 LDR X0, [X0 + 0xAC0]
	0x036D1DE4 BL 0x1C16CF4
	0x036D1DE8 ADRP X0, 0xA51000
	0x036D1DEC LDR X0, [X0 + 0xE60]
	0x036D1DF0 BL 0x1C16CF4
	0x036D1DF4 MOVZ W8, 0x1
	0x036D1DF8 STRB W8, [X24 + 0xA86]
	0x036D1DFC ADD W1, W21, 0xE
	0x036D1E00 MOV X0, X19
	0x036D1E04 BL 0x36D2168
	0x036D1E08 LDR X0, [X25]
	0x036D1E0C STR X31, [X31 + 0x18]
	0x036D1E10 LDRB W26, [X19 + 0x18]
	0x036D1E14 LDR X24, [X19 + 0x98]
	0x036D1E18 LDR W8, [X0 + 0xE0]
	0x036D1E1C CBNZ W8, 0x36D1E24
	0x036D1E20 BL 0x1C16DFC
	0x036D1E24 AND W4, W23, 0x1
	0x036D1E28 CBZ W26, 0x36D1E4C
	0x036D1E2C MOV W0, W22
	0x036D1E30 MOV X1, X24
	0x036D1E34 MOV X2, X20
	0x036D1E38 MOV X3, X21
	0x036D1E3C MOV W5, W31
	0x036D1E40 BL 0x36D2254
	0x036D1E44 MOV W20, W0
	0x036D1E48 B 0x36D1E88
	0x036D1E4C MOVZ W5, 0x1
	0x036D1E50 MOV W0, W22
	0x036D1E54 MOV X1, X24
	0x036D1E58 MOV X2, X20
	0x036D1E5C MOV X3, X21
	0x036D1E60 BL 0x36D2254
	0x036D1E64 ADRP X8, 0xA23000
	0x036D1E68 LDR X8, [X8 + 0x470]
	0x036D1E6C MOV W1, W0
	0x036D1E70 ADD X0, X31, 0x18
	0x036D1E74 LDR X2, [X8]
	0x036D1E78 BL 0x24341FC
	0x036D1E7C LDR W8, [X31 + 0x1C]
	0x036D1E80 LDR W21, [X31 + 0x8]
	0x036D1E84 ADD W20, W8, 0x4
	0x036D1E88 CMP W21, 0x1
	0x036D1E8C B.LT 0x36D1F84
	0x036D1E90 ADRP X22, 0xA55000
	0x036D1E94 LDR X23, [X19 + 0x98]
	0x036D1E98 LDR X22, [X22 + 0xD60]
	0x036D1E9C CBZ X23, 0x36D1ECC
	0x036D1EA0 LDR W8, [X23 + 0x18]
	0x036D1EA4 SUBS W8, W8, W20
	0x036D1EA8 B.CC 0x36D1EB4
	0x036D1EAC CMP W8, W21
	0x036D1EB0 B.CS 0x36D1EBC
	0x036D1EB4 MOV X0, X31
	0x036D1EB8 BL 0x339D6EC
	0x036D1EBC ADD X8, X23, W20, SXTW
	0x036D1EC0 ADD X1, X8, 0x20
	0x036D1EC4 MOV W2, W21
	0x036D1EC8 B 0x36D1EDC
	0x036D1ECC MOV X0, X31
	0x036D1ED0 BL 0x339D6EC
	0x036D1ED4 MOV X1, X31
	0x036D1ED8 MOV X2, X31
	0x036D1EDC LDR X3, [X22]
	0x036D1EE0 ADD X0, X31, 0x0
	0x036D1EE4 BL 0x25BE5D8
	0x036D1EE8 LDRB W8, [X31 + 0x18]
	0x036D1EEC CBZ W8, 0x36D1F84
	0x036D1EF0 LDR X22, [X19 + 0x98]
	0x036D1EF4 LDR W21, [X31 + 0x8]
	0x036D1EF8 CBZ X22, 0x36D1F24
	0x036D1EFC LDR W8, [X22 + 0x18]
	0x036D1F00 SUBS W8, W8, W20
	0x036D1F04 B.CC 0x36D1F10
	0x036D1F08 CMP W8, W21
	0x036D1F0C B.CS 0x36D1F18
	0x036D1F10 MOV X0, X31
	0x036D1F14 BL 0x339D6EC
	0x036D1F18 ADD X8, X22, W20, SXTW
	0x036D1F1C ADD X22, X8, 0x20
	0x036D1F20 B 0x36D1F3C
	0x036D1F24 ORR W8, W21, W20, 0x0
	0x036D1F28 CBZ W8, 0x36D1F34
	0x036D1F2C MOV X0, X31
	0x036D1F30 BL 0x339D6EC
	0x036D1F34 MOV X22, X31
	0x036D1F38 MOV X21, X31
	0x036D1F3C ADRP X8, 0xA25000
	0x036D1F40 LDR X19, [X19 + 0x98]
	0x036D1F44 LDR X8, [X8 + 0xF00]
	0x036D1F48 ADD X0, X31, 0x18
	0x036D1F4C LDR X1, [X8]
	0x036D1F50 BL 0x2434214
	0x036D1F54 LDR X8, [X25]
	0x036D1F58 MOV W23, W0
	0x036D1F5C LDR W9, [X8 + 0xE0]
	0x036D1F60 CBNZ W9, 0x36D1F6C
	0x036D1F64 MOV X0, X8
	0x036D1F68 BL 0x1C16DFC
	0x036D1F6C MOV X0, X22
	0x036D1F70 MOV X1, X21
	0x036D1F74 MOV X2, X19
	0x036D1F78 MOV W3, W23
	0x036D1F7C MOV W4, W31
	0x036D1F80 BL 0x36D23C8
	0x036D1F84 LDR W8, [X31 + 0x8]
	0x036D1F88 LDP X22, X21, [X31 + 0x40]
	0x036D1F8C LDP X24, X23, [X31 + 0x30]
	0x036D1F90 LDP X26, X25, [X31 + 0x20]
	0x036D1F94 ADD W0, W8, W20
	0x036D1F98 LDP X20, X19, [X31 + 0x50]
	0x036D1F9C LDR X30, [X31 + 0x10]
	0x036D1FA0 ADD X31, X31, 0x60
	0x036D1FA4 RET
	0x036D1FA8 STP X30, X21, [X31 - 0x20]!
	0x036D1FAC STP X20, X19, [X31 + 0x10]
	0x036D1FB0 MOV X21, X0
	0x036D1FB4 MOV W0, W1
	0x036D1FB8 MOV X19, X2
	0x036D1FBC MOV W20, W1
	0x036D1FC0 BL 0x36DD4C0
	0x036D1FC4 MOV X1, X0
	0x036D1FC8 MOV X0, X21
	0x036D1FCC MOV X2, X19
	0x036D1FD0 MOV X3, X31
	0x036D1FD4 BL 0x3662038
	0x036D1FD8 STR W20, [X21 + 0x90]
	0x036D1FDC LDP X20, X19, [X31 + 0x10]
	0x036D1FE0 LDP X30, X21, [X31], #0x20
	0x036D1FE4 RET
	0x036D1FE8 STR X30, [X31 - 0x30]!
	0x036D1FEC STP X22, X21, [X31 + 0x10]
	0x036D1FF0 STP X20, X19, [X31 + 0x20]
	0x036D1FF4 ADRP X21, 0xD0F000
	0x036D1FF8 ADRP X22, 0xA2A000
	0x036D1FFC LDRB W8, [X21 + 0xA97]
	0x036D2000 B 0x3EB191C
	0x036D2004 MOV X19, X1
	0x036D2008 MOV X20, X0
	0x036D200C TBNZ X8, 0x0, 0x36D2024
	0x036D2010 ADRP X0, 0xA29000
	0x036D2014 LDR X0, [X0 + 0x8A8]
	0x036D2018 BL 0x1C16CF4
	0x036D201C MOVZ W8, 0x1
	0x036D2020 STRB W8, [X21 + 0xA97]
	0x036D2024 LDR X0, [X22]
	0x036D2028 BL 0x1C16F10
	0x036D202C MOV X1, X31
	0x036D2030 MOV X21, X0
	0x036D2034 BL 0x338C880
	0x036D2038 CBZ X21, 0x36D2088
	0x036D203C LDR X8, [X21]
	0x036D2040 MOV X0, X21
	0x036D2044 LDP X9, X1, [X8 + 0x188]
	0x036D2048 BLR X9
	0x036D204C LDR X8, [X22]
	0x036D2050 MOV X21, X0
	0x036D2054 MOV X0, X8
	0x036D2058 BL 0x1C16F10
	0x036D205C MOV X1, X21
	0x036D2060 MOV X2, X20
	0x036D2064 MOV X3, X19
	0x036D2068 MOV X4, X31
	0x036D206C MOV X22, X0
	0x036D2070 BL 0x338CA40
	0x036D2074 MOV X0, X22
	0x036D2078 LDP X20, X19, [X31 + 0x20]
	0x036D207C LDP X22, X21, [X31 + 0x10]
	0x036D2080 LDR X30, [X31], #0x30
	0x036D2084 RET
	0x036D2088 BL 0x1C16F20
	0x036D208C SUB X31, X31, 0xA0
	0x036D2090 STP X30, X23, [X31 + 0x70]
	0x036D2094 STP X22, X21, [X31 + 0x80]
	0x036D2098 STP X20, X19, [X31 + 0x90]
	0x036D209C ADRP X23, 0xD0E000
	0x036D20A0 ADRP X22, 0xA24000
	0x036D20A4 LDRB W8, [X23 + 0xA84]
	0x036D20A8 LDR X22, [X22 + 0x280]
	0x036D20AC MOV X19, X2
	0x036D20B0 MOV X20, X1
	0x036D20B4 MOV X21, X0
	0x036D20B8 TBNZ X8, 0x0, 0x36D20DC
	0x036D20BC ADRP X0, 0xA6E000
	0x036D20C0 LDR X0, [X0 + 0x60]
	0x036D20C4 BL 0x1C16CF4
	0x036D20C8 ADRP X0, 0xA24000
	0x036D20CC LDR X0, [X0 + 0x280]
	0x036D20D0 BL 0x1C16CF4
	0x036D20D4 MOVZ W8, 0x1
	0x036D20D8 STRB W8, [X23 + 0xA84]
	0x036D20DC LDR X0, [X22]
	0x036D20E0 MOVI V0.2D, 0x0
	0x036D20E4 STP V0, V0, [X31 + 0x40]
	0x036D20E8 STP V0, V0, [X31 + 0x20]
	0x036D20EC STR X31, [X31 + 0x60]
	0x036D20F0 STP X19, X21, [X31 + 0x48]
	0x036D20F4 STR X20, [X31 + 0x40]
	0x036D20F8 ADRP X19, 0xA6E000
	0x036D20FC LDR W8, [X0 + 0xE0]
	0x036D2100 LDR X19, [X19 + 0x60]
	0x036D2104 CBNZ W8, 0x36D210C
	0x036D2108 BL 0x1C16DFC

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+80], X30
	003 Move [X31+88], X25
	004 Move [X31+96], X24
	005 Move [X31+104], X23
	006 Move [X31+112], X22
	007 Move [X31+120], X21
	008 Move [X31+128], X20
	009 Move [X31+136], X19
	010 Move X25, 0xD10000
	011 Move X19, 0xA4E000
	012 Move X24, 0xA4C000
	013 Move W8, [X25+2687]
	014 Move X19, [X19+3912]
	015 Move X24, [X24+2912]
	016 Move X21, X3
	017 Move X22, X2
	018 Move X23, X1
	019 Move X20, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {44}
	024 Move X0, 0xA6F000
	025 Move X0, [X0+4080]
	026 Call 0x1C17CF4
	027 Move X0, 0xA4C000
	028 Move X0, [X0+2912]
	029 Call 0x1C17CF4
	030 Move X0, 0xA6F000
	031 Move X0, [X0+4088]
	032 Call 0x1C17CF4
	033 Move X0, 0xA70000
	034 Move X0, [X0]
	035 Call 0x1C17CF4
	036 Move X0, 0xA70000
	037 Move X0, [X0+8]
	038 Call 0x1C17CF4
	039 Move X0, 0xA4E000
	040 Move X0, [X0+3912]
	041 Call 0x1C17CF4
	042 Move W8, 1
	043 Move [X25+2687], W8
	044 Move X2, [X19]
	045 Move X0, X23
	046 Move X1, X22
	047 Move [X31+76], W31
	048 Move [X31+48], X31
	049 Move [X31+56], X31
	050 Move [X31+64], X31
	051 Call WebSocketValidate.ValidateArraySegment, X0, X1
	052 Move X0, [X24]
	053 Move W19, [X20+88]
	054 Move W25, [X20+92]
	055 Move W8, [X0+224]
	056 Compare W8, 0
	057 JumpIfNotEqual {60}
	058 Call 0x1C17DFC
	059 Move X0, [X24]
	060 Move X8, [X0+184]
	061 NotImplemented "Instruction CMP not yet implemented."
	062 NotImplemented "Instruction CSET not yet implemented."
	063 Move X2, [X8+24]
	064 Move W0, W19
	065 Call WebSocketValidate.ThrowIfInvalidState, X0, X1, X2
	066 Move X19, [X20+72]
	067 Move [X31+76], W31
	068 Add X1, X31, 76
	069 Move X0, X19
	070 Move X2, X31
	071 Call Monitor.Enter, X0, X1
	072 Move X0, [X20+168]
	073 Compare X0, 0
	074 JumpIfEqual {154}
	075 Move X1, X31
	076 Call Task.get_IsCompleted, X0
	077 Move TEMP, X0
	078 And TEMP, TEMP, 1
	079 Compare TEMP, 1
	080 JumpIfNotEqual {155}
	081 Move X8, 0xA6F000
	082 Move X8, [X8+4088]
	083 Move X2, [X8]
	084 Move X0, X23
	085 Move X1, X22
	086 Call 0x319EBE4, X0
	087 Move X8, 0xA6F000
	088 Move X8, [X8+4080]
	089 Move X2, X0
	090 Move X3, X1
	091 Move X5, [X8]
	092 Add X8, X31, 8
	093 Move X0, X20
	094 Move X1, X2
	095 Move X2, X3
	096 Move X3, X21
	097 Move X4, X31
	098 Call ManagedWebSocket.ReceiveAsyncPrivate, X0, X1, X2, X3
	099 Move X8, 0xA70000
	100 Move X8, [X8]
	101 NotImplemented "Instruction LDUR not yet implemented."
	102 Move X9, [X31+24]
	103 Move X1, [X8]
	104 Move [X31+3], V0
	105 Move [X31+64], X9
	106 Add X0, X31, 48
	107 Call ValueTask`1<Object>.AsTask, X0
	108 Move X21, X0
	109 Move X22, X31
	110 Move W23, W31
	111 Move [X20+168], X0
	112 Move W8, [X31+76]
	113 Compare W8, 0
	114 JumpIfEqual {118}
	115 Move X0, X19
	116 Move X1, X31
	117 Call Monitor.Exit, X0
	118 Compare X22, 0
	119 JumpIfNotEqual {165}
	120 Move TEMP, X23
	121 And TEMP, TEMP, 1
	122 Compare TEMP, 1
	123 JumpIfNotEqual {143}
	124 Move TEMP, 0
	125 Not TEMP
	126 Move X8, TEMP
	127 Add X9, X31, 32
	128 Move X0, 0xA24000
	129 Move X19, [X9]
	130 Move X0, [X0+1976]
	131 Call 0x1C17D08
	132 Move W8, [X0+224]
	133 Compare W8, 0
	134 JumpIfNotEqual {136}
	135 Call 0x1C17DFC
	136 Move X0, 0xA70000
	137 Move X0, [X0+16]
	138 Call 0x1C17D08
	139 Move X1, X0
	140 Move X0, X19
	141 Call Task.FromException, X0
	142 Move X21, X0
	143 Move X0, X21
	144 Move X20, [X31+128]
	145 Move X19, [X31+136]
	146 Move X22, [X31+112]
	147 Move X21, [X31+120]
	148 Move X24, [X31+96]
	149 Move X23, [X31+104]
	150 Move X30, [X31+80]
	151 Move X25, [X31+88]
	152 Add X31, X31, 144
	153 Return X0
	154 Call 0x1C17F20
	155 Move X9, 0xA70000
	156 Move X8, [X20]
	157 Move X9, [X9+8]
	158 Move X21, [X9]
	159 Move X9, [X8+456]
	160 Move X1, [X8+464]
	161 Move X0, X20
	162 NotImplemented "Instruction BLR not yet implemented."
	163 Move X1, X21
	164 Call ManagedWebSocket.ThrowOperationInProgress, X0, X1
	165 Move X0, X22
	166 Call 0x1C17F18
	167 Move X21, X1
	168 Move X20, X0
	169 Move X21, X1
	170 Move X20, X0
	171 NotImplemented "Instruction CMP not yet implemented."
	172 Move X0, X20
	173 Call 0x3EB2AD0
	174 Move X22, [X0]
	175 Call 0x3EB2AE0
	176 Move X21, X31
	177 Move W23, 1
	178 Move X22, X31
	179 Move W8, [X31+76]
	180 Compare W8, 0
	181 JumpIfEqual {185}
	182 Move X0, X19
	183 Move X1, X31
	184 Call Monitor.Exit, X0
	185 Compare X22, 0
	186 JumpIfNotEqual {215}
	187 NotImplemented "Instruction CMP not yet implemented."
	188 Move X0, X20
	189 Call 0x3EB2AD0
	190 Move X19, X0
	191 Move X0, 0xA22000
	192 Move X0, [X0+2000]
	193 Call 0x1C17D08
	194 Move X8, [X19]
	195 Move X1, [X8]
	196 Call 0x1C18270
	197 Move TEMP, X0
	198 And TEMP, TEMP, 1
	199 Compare TEMP, 1
	200 JumpIfNotEqual {207}
	201 Move X8, [X19]
	202 Move W9, 1
	203 Move [X31+40], W9
	204 Move [X31+32], X8
	205 Call 0x3EB2AE0
	206 Move X8, X31
	207 Move W0, 8
	208 Call 0x3EB2AF0
	209 Move X8, [X19]
	210 Move [X0], X8
	211 Move X1, 0x7E3000
	212 Add X1, X1, 3672
	213 Move X2, X31
	214 Call 0x3EB2B00
	215 Move X0, X22
	216 Call 0x1C17F18
	217 Move X21, X1
	218 Move X20, X0
	219 Move X20, X0
	220 Call 0x3EB2AE0
	221 Move X0, X20
	222 Call 0x1D2D690
	223 Call 0x1991590

Method: System.Threading.Tasks.Task CloseAsync(System.Net.WebSockets.WebSocketCloseStatus closeStatus, System.String statusDescription, System.Threading.CancellationToken cancellationToken)

Disassembly:
	0x036D2130 ADD X1, X31, 0x20
	0x036D2134 MOV X0, X19
	0x036D2138 STUR V0, [X31 + 0x28]
	0x036D213C STR X9, [X31 + 0x38]
	0x036D2140 STR W10, [X31 + 0x20]
	0x036D2144 BL 0x21952B8
	0x036D2148 MOV X0, X19
	0x036D214C MOV X1, X31
	0x036D2150 BL 0x32C47F8
	0x036D2154 LDP X20, X19, [X31 + 0x90]
	0x036D2158 LDP X22, X21, [X31 + 0x80]
	0x036D215C LDP X30, X23, [X31 + 0x70]
	0x036D2160 ADD X31, X31, 0xA0
	0x036D2164 RET
	0x036D2168 STR X30, [X31 - 0x30]!
	0x036D216C STP X22, X21, [X31 + 0x10]
	0x036D2170 STP X20, X19, [X31 + 0x20]
	0x036D2174 ADRP X22, 0xD0E000
	0x036D2178 ADRP X21, 0xA4C000
	0x036D217C LDRB W8, [X22 + 0xA92]
	0x036D2180 LDR X21, [X21 + 0xD68]
	0x036D2184 MOV W20, W1
	0x036D2188 MOV X19, X0
	0x036D218C TBNZ X8, 0x0, 0x36D21B0
	0x036D2190 ADRP X0, 0xA4C000
	0x036D2194 LDR X0, [X0 + 0xD50]
	0x036D2198 BL 0x1C16CF4
	0x036D219C ADRP X0, 0xA4C000
	0x036D21A0 LDR X0, [X0 + 0xD68]
	0x036D21A4 BL 0x1C16CF4
	0x036D21A8 MOVZ W8, 0x1
	0x036D21AC STRB W8, [X22 + 0xA92]
	0x036D21B0 LDR X0, [X21]
	0x036D21B4 ADRP X21, 0xA4C000
	0x036D21B8 LDR W8, [X0 + 0xE0]
	0x036D21BC LDR X21, [X21 + 0xD50]
	0x036D21C0 CBNZ W8, 0x36D21C8
	0x036D21C4 BL 0x1C16DFC
	0x036D21C8 LDR X21, [X21]
	0x036D21CC LDR X0, [X21 + 0x20]
	0x036D21D0 LDRB W8, [X0 + 0x135]
	0x036D21D4 TBNZ X8, 0x0, 0x36D21DC
	0x036D21D8 BL 0x1C5C684
	0x036D21DC LDR X8, [X0 + 0xC0]
	0x036D21E0 LDR X0, [X8 + 0x8]
	0x036D21E4 LDRB W8, [X0 + 0x135]
	0x036D21E8 TBNZ X8, 0x0, 0x36D21F0
	0x036D21EC BL 0x1C5C684
	0x036D21F0 LDR W8, [X0 + 0xE0]
	0x036D21F4 CBNZ W8, 0x36D21FC
	0x036D21F8 BL 0x1C16DFC
	0x036D21FC LDR X0, [X21 + 0x20]
	0x036D2200 LDRB W8, [X0 + 0x135]
	0x036D2204 TBNZ X8, 0x0, 0x36D220C
	0x036D2208 BL 0x1C5C684
	0x036D220C LDR X8, [X0 + 0xC0]
	0x036D2210 LDR X0, [X8 + 0x8]
	0x036D2214 LDRB W8, [X0 + 0x135]
	0x036D2218 TBNZ X8, 0x0, 0x36D2220
	0x036D221C BL 0x1C5C684
	0x036D2220 LDR X8, [X0 + 0xB8]
	0x036D2224 LDR X0, [X8]
	0x036D2228 CBZ X0, 0x36D2250
	0x036D222C LDR X8, [X0]
	0x036D2230 MOV W1, W20
	0x036D2234 LDP X9, X2, [X8 + 0x178]
	0x036D2238 BLR X9
	0x036D223C STR X0, [X19 + 0x98]
	0x036D2240 LDP X20, X19, [X31 + 0x20]
	0x036D2244 LDP X22, X21, [X31 + 0x10]
	0x036D2248 LDR X30, [X31], #0x30
	0x036D224C RET
	0x036D2250 BL 0x1C16F20
	0x036D2254 STR X30, [X31 - 0x40]!
	0x036D2258 STP X24, X23, [X31 + 0x10]
	0x036D225C STP X22, X21, [X31 + 0x20]
	0x036D2260 STP X20, X19, [X31 + 0x30]
	0x036D2264 ADRP X24, 0xD0E000
	0x036D2268 LDRB W8, [X24 + 0xA88]
	0x036D226C MOV W20, W5
	0x036D2270 MOV W22, W4
	0x036D2274 MOV X21, X3
	0x036D2278 MOV X19, X1
	0x036D227C MOV W23, W0
	0x036D2280 TBNZ X8, 0x0, 0x36D22A4

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X23, 0xD0F000
	010 Move X24, 0xA4B000
	011 Move W8, [X23+2688]
	012 Move X24, [X24+2912]
	013 Move X19, X3
	014 Move X20, X2
	015 Move W21, W1
	016 Move X22, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {26}
	021 Move X0, 0xA4B000
	022 Move X0, [X0+2912]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X23+2688], W8
	026 Move W0, W21
	027 Move X1, X20
	028 Call WebSocketValidate.ValidateCloseStatus, X0, X1
	029 Move X0, [X24]
	030 Move W23, [X22+88]
	031 Move W25, [X22+92]
	032 Move W8, [X0+224]
	033 Compare W8, 0
	034 JumpIfNotEqual {37}
	035 Call 0x1C17DFC
	036 Move X0, [X24]
	037 Move X8, [X0+184]
	038 NotImplemented "Instruction CMP not yet implemented."
	039 NotImplemented "Instruction CSET not yet implemented."
	040 Move X2, [X8+40]
	041 Move W0, W23
	042 Call WebSocketValidate.ThrowIfInvalidState, X0, X1, X2
	043 Move X0, X22
	044 Move W1, W21
	045 Move X2, X20
	046 Move X3, X19
	047 Move X20, [X31+48]
	048 Move X19, [X31+56]
	049 Move X22, [X31+32]
	050 Move X21, [X31+40]
	051 Move X24, [X31+16]
	052 Move X23, [X31+24]
	053 Move X30, [X31+64]
	054 Move X25, [X31+72]
	055 Call ManagedWebSocket.CloseAsyncPrivate, X0, X1, X2, X3
	056 Return X0
	057 Move X19, X0
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Move X0, X19
	060 Call 0x3EB2AD0
	061 Move X19, X0
	062 Move X0, 0xA22000
	063 Move X0, [X0+2000]
	064 Call 0x1C17D08
	065 Move X8, [X19]
	066 Move X1, [X8]
	067 Call 0x1C18270
	068 Move TEMP, X0
	069 And TEMP, TEMP, 1
	070 Compare TEMP, 1
	071 JumpIfNotEqual {93}
	072 Move X19, [X19]
	073 Call 0x3EB2AE0
	074 Move X0, 0xA23000
	075 Move X0, [X0+1976]
	076 Call 0x1C17D08
	077 Move W8, [X0+224]
	078 Compare W8, 0
	079 JumpIfNotEqual {81}
	080 Call 0x1C17DFC
	081 Move X0, X19
	082 Move X20, [X31+48]
	083 Move X19, [X31+56]
	084 Move X22, [X31+32]
	085 Move X21, [X31+40]
	086 Move X24, [X31+16]
	087 Move X23, [X31+24]
	088 Move X1, X31
	089 Move X30, [X31+64]
	090 Move X25, [X31+72]
	091 Call Task.FromException, X0
	092 Return X0
	093 Move W0, 8
	094 Call 0x3EB2AF0
	095 Move X8, [X19]
	096 Move [X0], X8
	097 Move X1, 0x7E3000
	098 Add X1, X1, 3672
	099 Move X2, X31
	100 Call 0x3EB2B00
	101 Move X19, X0
	102 Call 0x3EB2AE0
	103 Move X0, X19
	104 Call 0x1D2D690
	105 Call 0x1991590

Method: System.Threading.Tasks.Task CloseOutputAsync(System.Net.WebSockets.WebSocketCloseStatus closeStatus, System.String statusDescription, System.Threading.CancellationToken cancellationToken)

Disassembly:
	0x036D250C LDR X0, [X0 + 0xE40]
	0x036D2510 BL 0x1C16CF4
	0x036D2514 MOVZ W8, 0x1
	0x036D2518 STRB W8, [X20 + 0xA87]
	0x036D251C LDR X0, [X19 + 0x50]
	0x036D2520 CBZ X0, 0x36D28FC
	0x036D2524 MOV W1, W31
	0x036D2528 MOV X2, X31
	0x036D252C BL 0x33E1C08
	0x036D2530 TBZ X0, 0x0, 0x36D28D8
	0x036D2534 ADRP X8, 0xA6E000
	0x036D2538 LDR X8, [X8 + 0x68]
	0x036D253C LDR X0, [X8]
	0x036D2540 BL 0x319DCE4
	0x036D2544 ADRP X8, 0xA54000
	0x036D2548 LDR X8, [X8 + 0xD10]
	0x036D254C LDR X2, [X8]
	0x036D2550 BL 0x319DCE0
	0x036D2554 MOV X3, X0
	0x036D2558 MOV X4, X1
	0x036D255C MOVZ W1, 0x9
	0x036D2560 MOVZ W2, 0x1
	0x036D2564 MOV X0, X19
	0x036D2568 BL 0x36D1780
	0x036D256C ADRP X21, 0xA4B000
	0x036D2570 LDR X21, [X21 + 0xE40]
	0x036D2574 MOV X19, X0
	0x036D2578 STP X19, X1, [X31]
	0x036D257C MOV X20, X1
	0x036D2580 LDR X0, [X21]
	0x036D2584 LDR W8, [X0 + 0xE0]
	0x036D2588 CBNZ W8, 0x36D2590
	0x036D258C BL 0x1C16DFC
	0x036D2590 ADRP X22, 0xD0B000
	0x036D2594 LDRB W8, [X22 + 0x501]
	0x036D2598 CBZ W8, 0x36D2618
	0x036D259C CBZ X19, 0x36D263C
	0x036D25A0 ADRP X9, 0xA22000
	0x036D25A4 LDR X9, [X9 + 0x7B8]
	0x036D25A8 LDR X8, [X19]
	0x036D25AC LDR X9, [X9]
	0x036D25B0 LDRB W11, [X8 + 0x130]
	0x036D25B4 LDRB W10, [X9 + 0x130]
	0x036D25B8 CMP W11, W10
	0x036D25BC B.CC 0x36D25D4
	0x036D25C0 LDR X11, [X8 + 0xC8]
	0x036D25C4 ADD X10, X11, X10, 0x3, LSL
	0x036D25C8 LDUR X10, [X10 - 0x8]
	0x036D25CC CMP X10, X9
	0x036D25D0 B.EQ 0x36D28A4
	0x036D25D4 ADRP X10, 0xA50000
	0x036D25D8 LDR X10, [X10 + 0xEA8]
	0x036D25DC LDRH W9, [X8 + 0x12E]
	0x036D25E0 LDR X1, [X10]
	0x036D25E4 CBZ X9, 0x36D2608
	0x036D25E8 LDR X10, [X8 + 0xB0]
	0x036D25EC ADD X10, X10, 0x8
	0x036D25F0 LDUR X11, [X10 - 0x8]
	0x036D25F4 CMP X11, X1
	0x036D25F8 B.EQ 0x36D2644
	0x036D25FC SUBS X9, X9, 0x1
	0x036D2600 ADD X10, X10, 0x10
	0x036D2604 B.NE 0x36D25F0
	0x036D2608 MOV X0, X19
	0x036D260C MOV W2, W31
	0x036D2610 BL 0x1C5C788
	0x036D2614 B 0x36D2650
	0x036D2618 ADRP X0, 0xA50000
	0x036D261C LDR X0, [X0 + 0xEA8]
	0x036D2620 BL 0x1C16CF4
	0x036D2624 ADRP X0, 0xA22000
	0x036D2628 LDR X0, [X0 + 0x7B8]
	0x036D262C BL 0x1C16CF4
	0x036D2630 MOVZ W8, 0x1
	0x036D2634 STRB W8, [X22 + 0x501]
	0x036D2638 CBNZ X19, 0x36D25A0
	0x036D263C MOVZ W19, 0x1
	0x036D2640 B 0x36D2668
	0x036D2644 LDRSW X9, [X10]
	0x036D2648 ADD X8, X8, X9, 0x4, LSL
	0x036D264C ADD X0, X8, 0x138
	0x036D2650 LDP X8, X2, [X0]
	0x036D2654 MOV X0, X19
	0x036D2658 MOV W1, W20
	0x036D265C BLR X8

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X23, 0xD0F000
	010 Move X24, 0xA4B000
	011 Move W8, [X23+2689]
	012 Move X24, [X24+2912]
	013 Move X19, X3
	014 Move X20, X2
	015 Move W21, W1
	016 Move X22, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {26}
	021 Move X0, 0xA4B000
	022 Move X0, [X0+2912]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X23+2689], W8
	026 Move W0, W21
	027 Move X1, X20
	028 Call WebSocketValidate.ValidateCloseStatus, X0, X1
	029 Move X0, [X24]
	030 Move W23, [X22+88]
	031 Move W25, [X22+92]
	032 Move W8, [X0+224]
	033 Compare W8, 0
	034 JumpIfNotEqual {37}
	035 Call 0x1C17DFC
	036 Move X0, [X24]
	037 Move X8, [X0+184]
	038 NotImplemented "Instruction CMP not yet implemented."
	039 NotImplemented "Instruction CSET not yet implemented."
	040 Move X2, [X8+32]
	041 Move W0, W23
	042 Call WebSocketValidate.ThrowIfInvalidState, X0, X1, X2
	043 Move X0, X22
	044 Move W1, W21
	045 Move X2, X20
	046 Move X3, X19
	047 Move X20, [X31+48]
	048 Move X19, [X31+56]
	049 Move X22, [X31+32]
	050 Move X21, [X31+40]
	051 Move X24, [X31+16]
	052 Move X23, [X31+24]
	053 Move X30, [X31+64]
	054 Move X25, [X31+72]
	055 Move X19, X0
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Move X0, X19
	058 Call 0x3EB2AD0
	059 Move X19, X0
	060 Move X0, 0xA22000
	061 Move X0, [X0+2000]
	062 Call 0x1C17D08
	063 Move X8, [X19]
	064 Move X1, [X8]
	065 Call 0x1C18270
	066 Move TEMP, X0
	067 And TEMP, TEMP, 1
	068 Compare TEMP, 1
	069 JumpIfNotEqual {91}
	070 Move X19, [X19]
	071 Call 0x3EB2AE0
	072 Move X0, 0xA23000
	073 Move X0, [X0+1976]
	074 Call 0x1C17D08
	075 Move W8, [X0+224]
	076 Compare W8, 0
	077 JumpIfNotEqual {79}
	078 Call 0x1C17DFC
	079 Move X0, X19
	080 Move X20, [X31+48]
	081 Move X19, [X31+56]
	082 Move X22, [X31+32]
	083 Move X21, [X31+40]
	084 Move X24, [X31+16]
	085 Move X23, [X31+24]
	086 Move X1, X31
	087 Move X30, [X31+64]
	088 Move X25, [X31+72]
	089 Call Task.FromException, X0
	090 Return X0
	091 Move W0, 8
	092 Call 0x3EB2AF0
	093 Move X8, [X19]
	094 Move [X0], X8
	095 Move X1, 0x7E3000
	096 Add X1, X1, 3672
	097 Move X2, X31
	098 Call 0x3EB2B00
	099 Move X19, X0
	100 Call 0x3EB2AE0
	101 Move X0, X19
	102 Call 0x1D2D690
	103 Call 0x1991590

Method: System.Void Abort()

Disassembly:
	0x036D2750 LDR X10, [X8 + 0xB0]
	0x036D2754 ADD X10, X10, 0x8
	0x036D2758 LDUR X11, [X10 - 0x8]
	0x036D275C CMP X11, X1
	0x036D2760 B.EQ 0x36D28B8
	0x036D2764 SUBS X9, X9, 0x1
	0x036D2768 ADD X10, X10, 0x10
	0x036D276C B.NE 0x36D2758
	0x036D2770 MOVZ W2, 0x2
	0x036D2774 MOV X0, X19
	0x036D2778 BL 0x1C5C788
	0x036D277C B 0x36D28C8

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, [X0+48]
	005 Compare X0, 0
	006 JumpIfEqual {16}
	007 Move X1, X31
	008 Call CancellationTokenSource.Cancel, X0
	009 Move X8, [X19]
	010 Move X0, X19
	011 Move X2, [X8+504]
	012 Move X1, [X8+512]
	013 Move X30, [X31+16]
	014 Move X19, [X31+24]
	015 CallNoReturn X2
	016 Call 0x1C17F20

Method: System.Threading.Tasks.ValueTask SendFrameAsync(System.Net.WebSockets.ManagedWebSocket/MessageOpcode opcode, System.Boolean endOfMessage, System.ReadOnlyMemory`1<System.Byte> payloadBuffer, System.Threading.CancellationToken cancellationToken)

Disassembly:
	0x036D1CD8 ADRP X19, 0xA6F000
	0x036D1CDC LDR W8, [X0 + 0xE0]
	0x036D1CE0 LDR X19, [X19 + 0x58]
	0x036D1CE4 CBNZ W8, 0x36D1CEC
	0x036D1CE8 BL 0x1C16DFC
	0x036D1CEC ADD X8, X31, 0x8
	0x036D1CF0 MOV X0, X31
	0x036D1CF4 BL 0x32C4770
	0x036D1CF8 LDUR V0, [X31 + 0x8]
	0x036D1CFC LDR X9, [X31 + 0x18]
	0x036D1D00 LDR X2, [X19]
	0x036D1D04 ADD X8, X31, 0x20
	0x036D1D08 ORR X19, X8, 0xF
	0x036D1D0C MOVN W10, 0x0
	0x036D1D10 ADD X1, X31, 0x20
	0x036D1D14 MOV X0, X19
	0x036D1D18 STUR V0, [X31 + 0x28]
	0x036D1D1C STR X9, [X31 + 0x38]
	0x036D1D20 STR W10, [X31 + 0x20]
	0x036D1D24 BL 0x21950B8
	0x036D1D28 MOV X0, X19
	0x036D1D2C MOV X1, X31
	0x036D1D30 BL 0x32C47F8
	0x036D1D34 LDP X20, X19, [X31 + 0xE0]
	0x036D1D38 LDP X22, X21, [X31 + 0xD0]
	0x036D1D3C LDP X24, X23, [X31 + 0xC0]
	0x036D1D40 LDP X26, X25, [X31 + 0xB0]
	0x036D1D44 LDR X30, [X31 + 0xA0]
	0x036D1D48 ADD X31, X31, 0xF0
	0x036D1D4C RET
	0x036D1D50 SUB X31, X31, 0x60
	0x036D1D54 STP X4, X30, [X31 + 0x8]
	0x036D1D58 STP X26, X25, [X31 + 0x20]
	0x036D1D5C STP X24, X23, [X31 + 0x30]
	0x036D1D60 STP X22, X21, [X31 + 0x40]
	0x036D1D64 STP X20, X19, [X31 + 0x50]
	0x036D1D68 ADRP X24, 0xD0F000
	0x036D1D6C STR X3, [X31]
	0x036D1D70 ADRP X25, 0xA4B000
	0x036D1D74 LDRB W8, [X24 + 0xA86]
	0x036D1D78 LDR X25, [X25 + 0xB60]
	0x036D1D7C MOV X21, X4
	0x036D1D80 MOV X20, X3
	0x036D1D84 MOV W23, W2
	0x036D1D88 MOV W22, W1
	0x036D1D8C MOV X19, X0
	0x036D1D90 TBNZ X8, 0x0, 0x36D1DFC
	0x036D1D94 ADRP X0, 0xA4B000
	0x036D1D98 LDR X0, [X0 + 0xB60]
	0x036D1D9C BL 0x1C16CF4
	0x036D1DA0 ADRP X0, 0xA29000
	0x036D1DA4 LDR X0, [X0 + 0x5F0]
	0x036D1DA8 BL 0x1C16CF4
	0x036D1DAC ADRP X0, 0xA23000
	0x036D1DB0 LDR X0, [X0 + 0x470]
	0x036D1DB4 BL 0x1C16CF4
	0x036D1DB8 ADRP X0, 0xA25000
	0x036D1DBC LDR X0, [X0 + 0xEF8]
	0x036D1DC0 BL 0x1C16CF4
	0x036D1DC4 ADRP X0, 0xA25000
	0x036D1DC8 LDR X0, [X0 + 0xF00]
	0x036D1DCC BL 0x1C16CF4
	0x036D1DD0 ADRP X0, 0xA55000
	0x036D1DD4 LDR X0, [X0 + 0xD60]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X24, 0xD10000
	011 Move [X31+8], X5
	012 Move X25, 0xA2B000
	013 Move W8, [X24+2690]
	014 Move X25, [X25+2008]
	015 Move X19, X4
	016 Move X20, X3
	017 Move W23, W2
	018 Move W21, W1
	019 Move X22, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {29}
	024 Move X0, 0xA2B000
	025 Move X0, [X0+2008]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X24+2690], W8
	029 Move X0, [X25]
	030 Move W8, [X0+224]
	031 Compare W8, 0
	032 JumpIfNotEqual {34}
	033 Call 0x1C17DFC
	034 Add X0, X31, 8
	035 Move X1, X31
	036 Call CancellationToken.get_CanBeCanceled, X0
	037 Move TEMP, X0
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfEqual {58}
	041 Move X0, [X22+80]
	042 Compare X0, 0
	043 JumpIfEqual {83}
	044 Move W1, W31
	045 Move X2, X31
	046 Call SemaphoreSlim.Wait, X0, X1
	047 Move TEMP, X0
	048 And TEMP, TEMP, 1
	049 Compare TEMP, 1
	050 JumpIfNotEqual {58}
	051 And W2, W23, 1
	052 Move X0, X22
	053 Move W1, W21
	054 Move X3, X20
	055 Move X4, X19
	056 Call ManagedWebSocket.SendFrameLockAcquiredNonCancelableAsync, X0, X1, X2, X3
	057 Move X19, X0
	058 Move X5, [X31+8]
	059 And W2, W23, 1
	060 Move X0, X22
	061 Move W1, W21
	062 Move X3, X20
	063 Move X4, X19
	064 Call ManagedWebSocket.SendFrameFallbackAsync, X0, X1, X2, X3, X4
	065 Move X19, X0
	066 Compare X0, 0
	067 JumpIfNotEqual {71}
	068 Move W0, 38
	069 Move X1, X31
	070 Call ThrowHelper.ThrowArgumentNullException, X0
	071 Move W1, 0x10000
	072 Move X0, X19
	073 Move X20, [X31+64]
	074 Move X19, [X31+72]
	075 Move X22, [X31+48]
	076 Move X21, [X31+56]
	077 Move X24, [X31+32]
	078 Move X23, [X31+40]
	079 Move X30, [X31+16]
	080 Move X25, [X31+24]
	081 Add X31, X31, 80
	082 Return X0
	083 Call 0x1C17F20

Method: System.Threading.Tasks.ValueTask SendFrameLockAcquiredNonCancelableAsync(System.Net.WebSockets.ManagedWebSocket/MessageOpcode opcode, System.Boolean endOfMessage, System.ReadOnlyMemory`1<System.Byte> payloadBuffer)

Disassembly:
	0x036D2780 BL 0x33ED6CC
	0x036D2784 ADRP X22, 0xA6D000
	0x036D2788 LDR X22, [X22 + 0xF68]
	0x036D278C MOV X19, X0
	0x036D2790 LDR X8, [X22]
	0x036D2794 LDR W9, [X8 + 0xE0]
	0x036D2798 CBNZ W9, 0x36D27A8
	0x036D279C MOV X0, X8
	0x036D27A0 BL 0x1C16DFC
	0x036D27A4 LDR X8, [X22]
	0x036D27A8 LDR X9, [X8 + 0xB8]
	0x036D27AC LDR X20, [X9 + 0x20]
	0x036D27B0 CBNZ X20, 0x36D2808
	0x036D27B4 LDR W9, [X8 + 0xE0]
	0x036D27B8 CBNZ W9, 0x36D27C8
	0x036D27BC MOV X0, X8
	0x036D27C0 BL 0x1C16DFC
	0x036D27C4 LDR X8, [X22]
	0x036D27C8 ADRP X9, 0xA2D000
	0x036D27CC LDR X8, [X8 + 0xB8]
	0x036D27D0 LDR X9, [X9 + 0x710]
	0x036D27D4 LDR X21, [X8]
	0x036D27D8 LDR X0, [X9]
	0x036D27DC BL 0x1C16F10
	0x036D27E0 ADRP X8, 0xA6E000
	0x036D27E4 LDR X8, [X8 + 0x70]
	0x036D27E8 MOV X1, X21
	0x036D27EC MOV X3, X31
	0x036D27F0 MOV X20, X0
	0x036D27F4 LDR X2, [X8]
	0x036D27F8 BL 0x2A6B948
	0x036D27FC LDR X8, [X22]
	0x036D2800 LDR X8, [X8 + 0xB8]
	0x036D2804 STR X20, [X8 + 0x20]
	0x036D2808 ADRP X8, 0xA29000
	0x036D280C LDR X8, [X8 + 0x7D8]
	0x036D2810 LDR X0, [X8]
	0x036D2814 LDR W8, [X0 + 0xE0]
	0x036D2818 CBNZ W8, 0x36D2820
	0x036D281C BL 0x1C16DFC
	0x036D2820 MOV X0, X31
	0x036D2824 BL 0x33DD2A8
	0x036D2828 ADRP X22, 0xA29000
	0x036D282C LDR X22, [X22 + 0x7E8]
	0x036D2830 MOV X21, X0
	0x036D2834 LDR X8, [X22]
	0x036D2838 LDR W9, [X8 + 0xE0]
	0x036D283C CBNZ W9, 0x36D2848
	0x036D2840 MOV X0, X8
	0x036D2844 BL 0x1C16DFC
	0x036D2848 ADRP X23, 0xD07000
	0x036D284C LDRB W8, [X23 + 0x88D]
	0x036D2850 CBNZ W8, 0x36D2868
	0x036D2854 ADRP X0, 0xA29000
	0x036D2858 LDR X0, [X0 + 0x7E8]
	0x036D285C BL 0x1C16CF4
	0x036D2860 MOVZ W8, 0x1
	0x036D2864 STRB W8, [X23 + 0x88D]
	0x036D2868 LDR X0, [X22]
	0x036D286C LDR W8, [X0 + 0xE0]
	0x036D2870 CBNZ W8, 0x36D287C
	0x036D2874 BL 0x1C16DFC
	0x036D2878 LDR X0, [X22]
	0x036D287C CBZ X19, 0x36D28FC
	0x036D2880 LDR X8, [X0 + 0xB8]
	0x036D2884 MOVZ W3, 0xD0000
	0x036D2888 MOV X0, X19
	0x036D288C MOV X1, X20
	0x036D2890 LDR X4, [X8 + 0x8]
	0x036D2894 MOV X2, X21
	0x036D2898 MOV X5, X31
	0x036D289C BL 0x33F41FC
	0x036D28A0 B 0x36D28D8
	0x036D28A4 MOV X0, X19
	0x036D28A8 MOV X1, X31
	0x036D28AC BL 0x33EDE64
	0x036D28B0 MOV W19, W0
	0x036D28B4 B 0x36D2668
	0x036D28B8 LDR W9, [X10]
	0x036D28BC ADD W9, W9, 0x2
	0x036D28C0 ADD X8, X8, W9, 0x4, SXTW
	0x036D28C4 ADD X0, X8, 0x138
	0x036D28C8 LDP X8, X2, [X0]
	0x036D28CC MOV X0, X19
	0x036D28D0 MOV W1, W20
	0x036D28D4 BLR X8
	0x036D28D8 LDP X20, X19, [X31 + 0x30]
	0x036D28DC LDP X22, X21, [X31 + 0x20]
	0x036D28E0 LDP X30, X23, [X31 + 0x10]
	0x036D28E4 ADD X31, X31, 0x40
	0x036D28E8 RET
	0x036D28EC MOV X0, X19
	0x036D28F0 MOV X1, X31
	0x036D28F4 BL 0x32C3B54
	0x036D28F8 B 0x36D28D8
	0x036D28FC BL 0x1C16F20
	0x036D2900 STR X30, [X31 - 0x30]!
	0x036D2904 STP X22, X21, [X31 + 0x10]
	0x036D2908 STP X20, X19, [X31 + 0x20]
	0x036D290C ADRP X22, 0xD0E000
	0x036D2910 ADRP X21, 0xA4A000
	0x036D2914 LDRB W8, [X22 + 0xA89]
	0x036D2918 LDR X21, [X21 + 0xB60]
	0x036D291C MOV W19, W1
	0x036D2920 MOV X20, X0
	0x036D2924 TBNZ X8, 0x0, 0x36D293C
	0x036D2928 ADRP X0, 0xA4A000
	0x036D292C LDR X0, [X0 + 0xB60]
	0x036D2930 BL 0x1C16CF4
	0x036D2934 MOVZ W8, 0x1
	0x036D2938 STRB W8, [X22 + 0xA89]
	0x036D293C LDR X0, [X21]
	0x036D2940 LDR W8, [X0 + 0xE0]
	0x036D2944 CBNZ W8, 0x36D2950
	0x036D2948 BL 0x1C16DFC
	0x036D294C LDR X0, [X21]
	0x036D2950 LDR X8, [X0 + 0xB8]
	0x036D2954 LDR X0, [X8]
	0x036D2958 CBZ X0, 0x36D2980
	0x036D295C LDR X8, [X0]
	0x036D2960 MOV X1, X20
	0x036D2964 MOV W2, W19
	0x036D2968 LDP X20, X19, [X31 + 0x20]
	0x036D296C LDP X5, X4, [X8 + 0x1A8]
	0x036D2970 LDP X22, X21, [X31 + 0x10]
	0x036D2974 MOVZ W3, 0x4
	0x036D2978 LDR X30, [X31], #0x30
	0x036D297C BR X5
	0x036D2980 BL 0x1C16F20
	0x036D2984 SUB X31, X31, 0xC0
	0x036D2988 STP X30, X23, [X31 + 0x90]
	0x036D298C STP X22, X21, [X31 + 0xA0]
	0x036D2990 STP X20, X19, [X31 + 0xB0]
	0x036D2994 ADRP X23, 0xD0E000
	0x036D2998 ADRP X22, 0xA24000
	0x036D299C LDRB W8, [X23 + 0xA8A]
	0x036D29A0 LDR X22, [X22 + 0x280]
	0x036D29A4 MOV X19, X2
	0x036D29A8 MOV X20, X1
	0x036D29AC MOV X21, X0
	0x036D29B0 TBNZ X8, 0x0, 0x36D29D4
	0x036D29B4 ADRP X0, 0xA6E000
	0x036D29B8 LDR X0, [X0 + 0x78]
	0x036D29BC BL 0x1C16CF4
	0x036D29C0 ADRP X0, 0xA24000
	0x036D29C4 LDR X0, [X0 + 0x280]
	0x036D29C8 BL 0x1C16CF4
	0x036D29CC MOVZ W8, 0x1
	0x036D29D0 STRB W8, [X23 + 0xA8A]
	0x036D29D4 MOVI V0.2D, 0x0
	0x036D29D8 STR X31, [X31 + 0x80]
	0x036D29DC STP V0, V0, [X31 + 0x60]
	0x036D29E0 STP V0, V0, [X31 + 0x40]
	0x036D29E4 STP V0, V0, [X31 + 0x20]
	0x036D29E8 STR X21, [X31 + 0x40]
	0x036D29EC LDR V0, [X20]
	0x036D29F0 LDR X8, [X20 + 0x10]
	0x036D29F4 LDR X0, [X22]
	0x036D29F8 STUR V0, [X31 + 0x48]
	0x036D29FC STP X8, X19, [X31 + 0x58]
	0x036D2A00 ADRP X19, 0xA6E000
	0x036D2A04 LDR W8, [X0 + 0xE0]
	0x036D2A08 LDR X19, [X19 + 0x78]
	0x036D2A0C CBNZ W8, 0x36D2A14
	0x036D2A10 BL 0x1C16DFC
	0x036D2A14 ADD X8, X31, 0x8
	0x036D2A18 MOV X0, X31
	0x036D2A1C BL 0x32C4770
	0x036D2A20 LDUR V0, [X31 + 0x8]
	0x036D2A24 LDR X9, [X31 + 0x18]
	0x036D2A28 LDR X2, [X19]
	0x036D2A2C ADD X8, X31, 0x20
	0x036D2A30 ORR X19, X8, 0xF
	0x036D2A34 MOVN W10, 0x0
	0x036D2A38 ADD X1, X31, 0x20
	0x036D2A3C MOV X0, X19
	0x036D2A40 STUR V0, [X31 + 0x28]
	0x036D2A44 STR X9, [X31 + 0x38]
	0x036D2A48 STR W10, [X31 + 0x20]
	0x036D2A4C BL 0x2194DB8
	0x036D2A50 MOV X0, X19
	0x036D2A54 MOV X1, X31
	0x036D2A58 BL 0x32C47F8
	0x036D2A5C LDP X20, X19, [X31 + 0xB0]
	0x036D2A60 LDP X22, X21, [X31 + 0xA0]
	0x036D2A64 LDP X30, X23, [X31 + 0x90]
	0x036D2A68 ADD X31, X31, 0xC0
	0x036D2A6C RET
	0x036D2A70 SUB X31, X31, 0xB0
	0x036D2A74 STR X30, [X31 + 0x80]
	0x036D2A78 STP X22, X21, [X31 + 0x90]
	0x036D2A7C STP X20, X19, [X31 + 0xA0]
	0x036D2A80 ADRP X22, 0xD0E000
	0x036D2A84 ADRP X21, 0xA24000
	0x036D2A88 LDRB W8, [X22 + 0xA8B]
	0x036D2A8C LDR X21, [X21 + 0x280]
	0x036D2A90 MOV X19, X1
	0x036D2A94 MOV X20, X0
	0x036D2A98 TBNZ X8, 0x0, 0x36D2ABC
	0x036D2A9C ADRP X0, 0xA6E000
	0x036D2AA0 LDR X0, [X0 + 0x80]
	0x036D2AA4 BL 0x1C16CF4
	0x036D2AA8 ADRP X0, 0xA24000
	0x036D2AAC LDR X0, [X0 + 0x280]
	0x036D2AB0 BL 0x1C16CF4
	0x036D2AB4 MOVZ W8, 0x1
	0x036D2AB8 STRB W8, [X22 + 0xA8B]
	0x036D2ABC LDR X0, [X21]
	0x036D2AC0 MOVI V0.2D, 0x0
	0x036D2AC4 STP V0, V0, [X31 + 0x60]
	0x036D2AC8 STP V0, V0, [X31 + 0x40]
	0x036D2ACC STP V0, V0, [X31 + 0x20]
	0x036D2AD0 STP X20, X19, [X31 + 0x40]
	0x036D2AD4 ADRP X19, 0xA6E000
	0x036D2AD8 LDR W8, [X0 + 0xE0]
	0x036D2ADC LDR X19, [X19 + 0x80]
	0x036D2AE0 CBNZ W8, 0x36D2AE8
	0x036D2AE4 BL 0x1C16DFC
	0x036D2AE8 ADD X8, X31, 0x8
	0x036D2AEC MOV X0, X31
	0x036D2AF0 BL 0x32C4770
	0x036D2AF4 LDUR V0, [X31 + 0x8]
	0x036D2AF8 LDR X9, [X31 + 0x18]
	0x036D2AFC LDR X2, [X19]
	0x036D2B00 ADD X8, X31, 0x20
	0x036D2B04 ORR X19, X8, 0xF
	0x036D2B08 MOVN W10, 0x0
	0x036D2B0C ADD X1, X31, 0x20
	0x036D2B10 MOV X0, X19
	0x036D2B14 STUR V0, [X31 + 0x28]
	0x036D2B18 STR X9, [X31 + 0x38]
	0x036D2B1C STR W10, [X31 + 0x20]
	0x036D2B20 BL 0x21951B8
	0x036D2B24 MOV X0, X19
	0x036D2B28 MOV X1, X31
	0x036D2B2C BL 0x32C47F8
	0x036D2B30 LDP X20, X19, [X31 + 0xA0]
	0x036D2B34 LDP X22, X21, [X31 + 0x90]
	0x036D2B38 LDR X30, [X31 + 0x80]
	0x036D2B3C ADD X31, X31, 0xB0
	0x036D2B40 RET
	0x036D2B44 SUB X31, X31, 0xC0
	0x036D2B48 STP X30, X23, [X31 + 0x90]
	0x036D2B4C STP X22, X21, [X31 + 0xA0]
	0x036D2B50 STP X20, X19, [X31 + 0xB0]
	0x036D2B54 ADRP X23, 0xD0E000
	0x036D2B58 ADRP X22, 0xA24000
	0x036D2B5C LDRB W8, [X23 + 0xA8C]
	0x036D2B60 LDR X22, [X22 + 0x280]
	0x036D2B64 MOV X19, X2
	0x036D2B68 MOV X20, X1
	0x036D2B6C MOV X21, X0
	0x036D2B70 TBNZ X8, 0x0, 0x36D2B94
	0x036D2B74 ADRP X0, 0xA6E000
	0x036D2B78 LDR X0, [X0 + 0x88]
	0x036D2B7C BL 0x1C16CF4
	0x036D2B80 ADRP X0, 0xA24000
	0x036D2B84 LDR X0, [X0 + 0x280]
	0x036D2B88 BL 0x1C16CF4
	0x036D2B8C MOVZ W8, 0x1
	0x036D2B90 STRB W8, [X23 + 0xA8C]
	0x036D2B94 MOVI V0.2D, 0x0
	0x036D2B98 STR X31, [X31 + 0x80]
	0x036D2B9C STP V0, V0, [X31 + 0x60]
	0x036D2BA0 STP V0, V0, [X31 + 0x40]
	0x036D2BA4 STP V0, V0, [X31 + 0x20]
	0x036D2BA8 LDR V0, [X20]
	0x036D2BAC LDR X8, [X20 + 0x10]
	0x036D2BB0 LDR X0, [X22]
	0x036D2BB4 STR X19, [X31 + 0x60]
	0x036D2BB8 STR V0, [X31 + 0x4]
	0x036D2BBC STP X8, X21, [X31 + 0x50]
	0x036D2BC0 ADRP X19, 0xA6E000
	0x036D2BC4 LDR W8, [X0 + 0xE0]
	0x036D2BC8 LDR X19, [X19 + 0x88]
	0x036D2BCC CBNZ W8, 0x36D2BD4
	0x036D2BD0 BL 0x1C16DFC
	0x036D2BD4 ADD X8, X31, 0x8
	0x036D2BD8 MOV X0, X31
	0x036D2BDC BL 0x32C4770
	0x036D2BE0 LDUR V0, [X31 + 0x8]
	0x036D2BE4 LDR X9, [X31 + 0x18]
	0x036D2BE8 LDR X2, [X19]
	0x036D2BEC ADD X8, X31, 0x20
	0x036D2BF0 ORR X19, X8, 0xF
	0x036D2BF4 MOVN W10, 0x0
	0x036D2BF8 ADD X1, X31, 0x20
	0x036D2BFC MOV X0, X19
	0x036D2C00 STUR V0, [X31 + 0x28]
	0x036D2C04 STR X9, [X31 + 0x38]
	0x036D2C08 STR W10, [X31 + 0x20]
	0x036D2C0C BL 0x2194EB8
	0x036D2C10 MOV X0, X19
	0x036D2C14 MOV X1, X31
	0x036D2C18 BL 0x32C47F8
	0x036D2C1C LDP X20, X19, [X31 + 0xB0]
	0x036D2C20 LDP X22, X21, [X31 + 0xA0]
	0x036D2C24 LDP X30, X23, [X31 + 0x90]
	0x036D2C28 ADD X31, X31, 0xC0
	0x036D2C2C RET
	0x036D2C30 SUB W8, W0, 0x3E8
	0x036D2C34 CMP W8, 0xF9F
	0x036D2C38 B.HI 0x36D2C5C
	0x036D2C3C CMP W0, 0xBB7
	0x036D2C40 B.GT 0x36D2C5C

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+16], X30
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X22, 0xD0F000
	013 Move [X31], X3
	014 Move [X31+8], X4
	015 Move X23, 0xA55000
	016 Move W8, [X22+2691]
	017 Move X23, [X23+3456]
	018 Move W21, W2
	019 Move W20, W1
	020 Move X19, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {36}
	025 Move X0, 0xA51000
	026 Move X0, [X0+3744]
	027 Call 0x1C17CF4
	028 Move X0, 0xA55000
	029 Move X0, [X0+3456]
	030 Call 0x1C17CF4
	031 Move X0, 0xA4C000
	032 Move X0, [X0+3648]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X22+2691], W8
	036 Move X1, [X23]
	037 Add X0, X31, 0
	038 Call 0x25D8918
	039 Move X3, X0
	040 Move X4, X1
	041 And W2, W21, 1
	042 Move X0, X19
	043 Move W1, W20
	044 Call ManagedWebSocket.WriteFrameToSendBuffer, X0, X1, X2, X3
	045 Move X21, [X19+152]
	046 Move X20, [X19+16]
	047 Move W22, W0
	048 Compare X21, 0
	049 JumpIfEqual {81}
	050 Move W8, [X21+24]
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Move X0, X31
	053 Call ThrowHelper.ThrowArgumentOutOfRangeException
	054 Move X2, X22
	055 ShiftRight X2, 32
	056 And X2, X2, 0x7FFFFFFF
	057 Compare X20, 0
	058 JumpIfEqual {89}
	059 Move X8, [X20]
	060 Move X9, [X8+808]
	061 Move X4, [X8+816]
	062 Move X0, X20
	063 Move X1, X21
	064 Move X3, X31
	065 NotImplemented "Instruction BLR not yet implemented."
	066 Move X8, 0xA4C000
	067 Move X8, [X8+3648]
	068 Move X21, X0
	069 Move X20, X1
	070 Move X0, [X8]
	071 Move W8, [X0+224]
	072 Compare W8, 0
	073 JumpIfNotEqual {75}
	074 Call 0x1C17DFC
	075 Move X22, 0xD0B000
	076 Move W8, [X22+1252]
	077 Compare W8, 0
	078 JumpIfEqual {90}
	079 Compare X21, 0
	080 JumpIfNotEqual {100}
	081 Compare W22, 0
	082 JumpIfEqual {85}
	083 Move X0, X31
	084 Call ThrowHelper.ThrowArgumentOutOfRangeException
	085 Move X21, X31
	086 Move X2, X31
	087 Compare X20, 0
	088 JumpIfNotEqual {59}
	089 Call 0x1C17F20
	090 Move X0, 0xA51000
	091 Move X0, [X0+3752]
	092 Call 0x1C17CF4
	093 Move X0, 0xA23000
	094 Move X0, [X0+1976]
	095 Call 0x1C17CF4
	096 Move W8, 1
	097 Move [X22+1252], W8
	098 Compare X21, 0
	099 JumpIfEqual {136}
	100 Move X9, 0xA23000
	101 Move X9, [X9+1976]
	102 Move X8, [X21]
	103 Move X9, [X9]
	104 Move W11, [X8+304]
	105 Move W10, [X9+304]
	106 NotImplemented "Instruction CMP not yet implemented."
	107 Move X11, [X8+200]
	108 Add X10, X11, X10
	109 NotImplemented "Instruction LDUR not yet implemented."
	110 NotImplemented "Instruction CMP not yet implemented."
	111 Move X10, 0xA51000
	112 Move X10, [X10+3752]
	113 NotImplemented "Instruction LDRH not yet implemented."
	114 Move X1, [X10]
	115 Compare X9, 0
	116 JumpIfEqual {123}
	117 Move X10, [X8+176]
	118 Add X10, X10, 8
	119 NotImplemented "Instruction LDUR not yet implemented."
	120 NotImplemented "Instruction CMP not yet implemented."
	121 Subtract X9, X9, 1
	122 Add X10, X10, 16
	123 Move X0, X21
	124 Move W2, W31
	125 Call 0x1C5D788
	126 NotImplemented "Instruction LDRSW not yet implemented."
	127 Add X8, X8, X9
	128 Add X0, X8, 312
	129 Move X8, [X0]
	130 Move X2, [X0+8]
	131 Move X0, X21
	132 Move W1, W20
	133 NotImplemented "Instruction BLR not yet implemented."
	134 Compare W0, 0
	135 JumpIfEqual {154}
	136 Move X23, X31
	137 And X24, X20, 0xFFFFFFFF
	138 And X25, X20, 0xFFFF
	139 And X27, X20, 0xFFFFFF
	140 Move W26, 3
	141 Move X22, X21
	142 Move X0, X19
	143 Call ManagedWebSocket.ReleaseSendBuffer, X0
	144 Move X0, [X19+80]
	145 Compare X0, 0
	146 JumpIfEqual {187}
	147 Move X1, X31
	148 Call SemaphoreSlim.Release, X0
	149 Compare X23, 0
	150 JumpIfNotEqual {188}
	151 NotImplemented "Instruction CMP not yet implemented."
	152 Compare W26, 0
	153 JumpIfNotEqual {167}
	154 Move X0, X19
	155 Move X1, X21
	156 Move X2, X20
	157 Call ManagedWebSocket.WaitForWriteTaskAsync, X0, X1
	158 Move X22, X0
	159 Compare X0, 0
	160 JumpIfNotEqual {164}
	161 Move W0, 38
	162 Move X1, X31
	163 Call ThrowHelper.ThrowArgumentNullException, X0
	164 Move W1, 0x10000
	165 Or X8, X27, X25
	166 Or X1, X8, X24
	167 Move X0, X22
	168 Move X20, [X31+80]
	169 Move X19, [X31+88]
	170 Move X22, [X31+64]
	171 Move X21, [X31+72]
	172 Move X24, [X31+48]
	173 Move X23, [X31+56]
	174 Move X26, [X31+32]
	175 Move X25, [X31+40]
	176 Move X30, [X31+16]
	177 Move X27, [X31+24]
	178 Add X31, X31, 96
	179 Return X0
	180 Move X0, X21
	181 Move X1, X31
	182 Call Task.get_IsCompleted, X0
	183 Move TEMP, X0
	184 And TEMP, TEMP, 1
	185 Compare TEMP, 1
	186 JumpIfEqual {136}
	187 Call 0x1C17F20
	188 Move X0, X23
	189 Call 0x1C17F18
	190 Move X22, X0
	191 Move X22, X0
	192 Move X20, X31
	193 Move X21, X31
	194 Move X22, X0
	195 NotImplemented "Instruction CMP not yet implemented."
	196 Move X0, X22
	197 Call 0x3EB2AD0
	198 Move X22, X0
	199 Move X0, 0xA22000
	200 Move X0, [X0+2000]
	201 Call 0x1C17D08
	202 Move X8, [X22]
	203 Move X1, [X8]
	204 Call 0x1C18270
	205 Move TEMP, X0
	206 And TEMP, TEMP, 1
	207 Compare TEMP, 1
	208 JumpIfNotEqual {273}
	209 Move X22, [X22]
	210 Call 0x3EB2AE0
	211 Move X0, 0xA2A000
	212 Move X0, [X0+2216]
	213 Call 0x1C17D08
	214 Compare X22, 0
	215 JumpIfEqual {224}
	216 Move X8, [X22]
	217 Move W9, [X0+304]
	218 Move W10, [X8+304]
	219 NotImplemented "Instruction CMP not yet implemented."
	220 Move X8, [X8+200]
	221 Add X8, X8, X9
	222 NotImplemented "Instruction LDUR not yet implemented."
	223 NotImplemented "Instruction CMP not yet implemented."
	224 Move W8, [X19+88]
	225 NotImplemented "Instruction CMP not yet implemented."
	226 Move X0, 0xA4B000
	227 Move X0, [X0+2912]
	228 Call 0x1C17D08
	229 Move W8, [X0+224]
	230 Compare W8, 0
	231 JumpIfNotEqual {233}
	232 Call 0x1C17DFC
	233 Move X0, X22
	234 Move X1, X31
	235 Call ManagedWebSocket.CreateOperationCanceledException, X0, X1
	236 Move X23, X0
	237 Move X0, 0xA4D000
	238 Move X0, [X0+776]
	239 Call 0x1C17D08
	240 Call 0x1C17F10
	241 Move X23, X0
	242 Move W0, 8
	243 Call WebSocketException.GetErrorMessage, X0
	244 Move X1, X0
	245 Move X0, X23
	246 Move X2, X22
	247 Move X3, X31
	248 Call Win32Exception..ctor, X0, X1, X2
	249 Move W8, 8
	250 Move [X23+144], W8
	251 Move X23, X22
	252 Move X0, 0xA23000
	253 Move X0, [X0+1976]
	254 Call 0x1C17D08
	255 Move W8, [X0+224]
	256 Compare W8, 0
	257 JumpIfNotEqual {259}
	258 Call 0x1C17DFC
	259 Move X0, X23
	260 Move X1, X31
	261 Call Task.FromException, X0
	262 Move X22, X0
	263 Compare X0, 0
	264 JumpIfNotEqual {268}
	265 Move W0, 38
	266 Move X1, X31
	267 Call ThrowHelper.ThrowArgumentNullException, X0
	268 Move X25, X31
	269 Move X24, X31
	270 Move X23, X31
	271 Move W26, 3
	272 Move W27, 0x10000
	273 Move W0, 8
	274 Call 0x3EB2AF0
	275 Move X8, [X22]
	276 Move [X0], X8
	277 Move X1, 0x7E3000
	278 Add X1, X1, 3672
	279 Move X2, X31
	280 Call 0x3EB2B00
	281 Move X22, X0
	282 Move X23, X1
	283 Move X22, X0
	284 Call 0x3EB2AE0
	285 Move W1, W23
	286 Move W8, 1
	287 NotImplemented "Instruction CMP not yet implemented."
	288 Move X0, X22
	289 Call 0x3EB2AD0
	290 Move X23, [X0]
	291 Call 0x3EB2AE0
	292 Move X22, X31
	293 Move X25, X31
	294 Move X27, X31
	295 Move X24, X31
	296 Move W26, W31
	297 Move X23, X31
	298 Move X22, X0
	299 Move X0, X19
	300 Call ManagedWebSocket.ReleaseSendBuffer, X0
	301 Move X0, [X19+80]
	302 Compare X0, 0
	303 JumpIfNotEqual {305}
	304 Call 0x1C17F20
	305 Move X1, X31
	306 Call SemaphoreSlim.Release, X0
	307 Compare X23, 0
	308 JumpIfNotEqual {311}
	309 Move X0, X22
	310 Call 0x1D2D690
	311 Move X0, X23
	312 Call 0x1C17F18
	313 Call 0x1991590

Method: System.Threading.Tasks.Task WaitForWriteTaskAsync(System.Threading.Tasks.ValueTask writeTask)

Disassembly:
	0x036D308C ADRP X0, 0xA23000
	0x036D3090 LDR X0, [X0 + 0x280]
	0x036D3094 BL 0x1C16CF4
	0x036D3098 MOVZ W8, 0x1
	0x036D309C STRB W8, [X24 + 0xA91]
	0x036D30A0 LDR X0, [X23]
	0x036D30A4 AND W8, W22, 0x1
	0x036D30A8 MOVI V0.2D, 0x0
	0x036D30AC STP V0, V0, [X31 + 0x40]
	0x036D30B0 STR V0, [X31 + 0x6]
	0x036D30B4 STP V0, V0, [X31 + 0x20]
	0x036D30B8 STR X21, [X31 + 0x40]
	0x036D30BC STR W20, [X31 + 0x48]
	0x036D30C0 STR X19, [X31 + 0x50]
	0x036D30C4 STRB W8, [X31 + 0x58]
	0x036D30C8 ADRP X19, 0xA6D000
	0x036D30CC LDR W8, [X0 + 0xE0]
	0x036D30D0 LDR X19, [X19 + 0x98]
	0x036D30D4 CBNZ W8, 0x36D30DC
	0x036D30D8 BL 0x1C16DFC
	0x036D30DC ADD X8, X31, 0x8
	0x036D30E0 MOV X0, X31
	0x036D30E4 BL 0x32C4770
	0x036D30E8 LDUR V0, [X31 + 0x8]
	0x036D30EC LDR X9, [X31 + 0x18]
	0x036D30F0 LDR X2, [X19]
	0x036D30F4 ADD X8, X31, 0x20
	0x036D30F8 ORR X19, X8, 0xF
	0x036D30FC MOVN W10, 0x0
	0x036D3100 ADD X1, X31, 0x20
	0x036D3104 MOV X0, X19
	0x036D3108 STUR V0, [X31 + 0x28]
	0x036D310C STR X9, [X31 + 0x38]
	0x036D3110 STR W10, [X31 + 0x20]
	0x036D3114 BL 0x2194CB8
	0x036D3118 MOV X0, X19
	0x036D311C MOV X1, X31
	0x036D3120 BL 0x32C47F8
	0x036D3124 LDP X20, X19, [X31 + 0xA0]
	0x036D3128 LDP X22, X21, [X31 + 0x90]
	0x036D312C LDP X24, X23, [X31 + 0x80]
	0x036D3130 LDR X30, [X31 + 0x70]
	0x036D3134 ADD X31, X31, 0xB0
	0x036D3138 RET
	0x036D313C STP X30, X19, [X31 - 0x10]!
	0x036D3140 LDRB W8, [X0 + 0x5C]
	0x036D3144 CBNZ W8, 0x36D3154
	0x036D3148 TBNZ X1, 0x0, 0x36D3188
	0x036D314C LDP X30, X19, [X31], #0x10
	0x036D3150 RET
	0x036D3154 ADRP X0, 0xA49000
	0x036D3158 LDR X0, [X0 + 0x4B8]
	0x036D315C BL 0x1C16D08
	0x036D3160 BL 0x1C16F10
	0x036D3164 MOV X19, X0

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+112], X30
	003 Move [X31+120], X23
	004 Move [X31+128], X22
	005 Move [X31+136], X21
	006 Move [X31+144], X20
	007 Move [X31+152], X19
	008 Move X23, 0xD0E000
	009 Move X22, 0xA24000
	010 Move W8, [X23+2692]
	011 Move X22, [X22+640]
	012 Move X19, X2
	013 Move X20, X1
	014 Move X21, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0xA6E000
	020 Move X0, [X0+96]
	021 Call 0x1C17CF4
	022 Move X0, 0xA24000
	023 Move X0, [X0+640]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X23+2692], W8
	027 Move X0, [X22]
	028 NotImplemented "Instruction MOVI not yet implemented."
	029 Move [X31+64], V0
	030 Move [X31+72], V0
	031 Move [X31+32], V0
	032 Move [X31+40], V0
	033 Move [X31+96], X31
	034 Move [X31+72], X19
	035 Move [X31+80], X21
	036 Move [X31+64], X20
	037 Move X19, 0xA6E000
	038 Move W8, [X0+224]
	039 Move X19, [X19+96]
	040 Compare W8, 0
	041 JumpIfNotEqual {43}
	042 Call 0x1C17DFC
	043 Add X8, X31, 8
	044 Move X0, X31
	045 Call AsyncTaskMethodBuilder.Create
	046 NotImplemented "Instruction LDUR not yet implemented."
	047 Move X9, [X31+24]
	048 Move X2, [X19]
	049 Add X8, X31, 32
	050 Or X19, X8, 15
	051 Move TEMP, 0
	052 Not TEMP
	053 Move W10, TEMP
	054 Add X1, X31, 32
	055 Move X0, X19
	056 Move [X31+40], V0
	057 Move [X31+56], X9
	058 Move [X31+32], W10
	059 Call AsyncTaskMethodBuilder.Start, X0, X1
	060 Move X0, X19
	061 Move X1, X31
	062 Call AsyncTaskMethodBuilder.get_Task, X0
	063 Move X20, [X31+144]
	064 Move X19, [X31+152]
	065 Move X22, [X31+128]
	066 Move X21, [X31+136]
	067 Move X30, [X31+112]
	068 Move X23, [X31+120]
	069 Add X31, X31, 160
	070 Return X0

Method: System.Threading.Tasks.Task SendFrameFallbackAsync(System.Net.WebSockets.ManagedWebSocket/MessageOpcode opcode, System.Boolean endOfMessage, System.ReadOnlyMemory`1<System.Byte> payloadBuffer, System.Threading.CancellationToken cancellationToken)

Disassembly:
	0x036D2C44 AND W9, W0, 0xFFFFFFFC
	0x036D2C48 CMP W9, 0x3E8
	0x036D2C4C B.EQ 0x36D2C5C
	0x036D2C50 SUB W8, W0, 0x3EF
	0x036D2C54 CMP W8, 0x5
	0x036D2C58 B 0x36D2C60
	0x036D2C5C CMP W8, 0xFA0
	0x036D2C60 CSET W0, CC
	0x036D2C64 RET
	0x036D2C68 SUB X31, X31, 0xB0
	0x036D2C6C STR X30, [X31 + 0x70]
	0x036D2C70 STP X24, X23, [X31 + 0x80]
	0x036D2C74 STP X22, X21, [X31 + 0x90]
	0x036D2C78 STP X20, X19, [X31 + 0xA0]
	0x036D2C7C ADRP X24, 0xD0E000
	0x036D2C80 ADRP X23, 0xA24000
	0x036D2C84 LDRB W8, [X24 + 0xA8D]
	0x036D2C88 LDR X23, [X23 + 0x280]
	0x036D2C8C MOV X19, X3
	0x036D2C90 MOV W20, W2
	0x036D2C94 MOV W21, W1
	0x036D2C98 MOV X22, X0
	0x036D2C9C TBNZ X8, 0x0, 0x36D2CC0
	0x036D2CA0 ADRP X0, 0xA6E000
	0x036D2CA4 LDR X0, [X0 + 0x90]
	0x036D2CA8 BL 0x1C16CF4
	0x036D2CAC ADRP X0, 0xA24000
	0x036D2CB0 LDR X0, [X0 + 0x280]
	0x036D2CB4 BL 0x1C16CF4
	0x036D2CB8 MOVZ W8, 0x1
	0x036D2CBC STRB W8, [X24 + 0xA8D]
	0x036D2CC0 LDR X0, [X23]
	0x036D2CC4 MOVI V0.2D, 0x0
	0x036D2CC8 STP V0, V0, [X31 + 0x40]
	0x036D2CCC STP V0, V0, [X31 + 0x20]
	0x036D2CD0 STR X22, [X31 + 0x40]
	0x036D2CD4 STP W21, W20, [X31 + 0x48]
	0x036D2CD8 STR X31, [X31 + 0x60]
	0x036D2CDC STR X19, [X31 + 0x50]
	0x036D2CE0 ADRP X19, 0xA6E000
	0x036D2CE4 LDR W8, [X0 + 0xE0]
	0x036D2CE8 LDR X19, [X19 + 0x90]
	0x036D2CEC CBNZ W8, 0x36D2CF4
	0x036D2CF0 BL 0x1C16DFC
	0x036D2CF4 ADD X8, X31, 0x8
	0x036D2CF8 MOV X0, X31
	0x036D2CFC BL 0x32C4770
	0x036D2D00 LDUR V0, [X31 + 0x8]
	0x036D2D04 LDR X9, [X31 + 0x18]
	0x036D2D08 LDR X2, [X19]
	0x036D2D0C ADD X8, X31, 0x20
	0x036D2D10 ORR X19, X8, 0xF
	0x036D2D14 MOVN W10, 0x0
	0x036D2D18 ADD X1, X31, 0x20
	0x036D2D1C MOV X0, X19
	0x036D2D20 STUR V0, [X31 + 0x28]
	0x036D2D24 STR X9, [X31 + 0x38]
	0x036D2D28 STR W10, [X31 + 0x20]
	0x036D2D2C BL 0x2194BB8
	0x036D2D30 MOV X0, X19
	0x036D2D34 MOV X1, X31
	0x036D2D38 BL 0x32C47F8
	0x036D2D3C LDP X20, X19, [X31 + 0xA0]
	0x036D2D40 LDP X22, X21, [X31 + 0x90]
	0x036D2D44 LDP X24, X23, [X31 + 0x80]
	0x036D2D48 LDR X30, [X31 + 0x70]
	0x036D2D4C ADD X31, X31, 0xB0

ISIL:
	001 Subtract X31, X31, 240
	002 Move [X31+160], X30
	003 Move [X31+176], X26
	004 Move [X31+184], X25
	005 Move [X31+192], X24
	006 Move [X31+200], X23
	007 Move [X31+208], X22
	008 Move [X31+216], X21
	009 Move [X31+224], X20
	010 Move [X31+232], X19
	011 Move X26, 0xD0F000
	012 Move X25, 0xA25000
	013 Move W8, [X26+2693]
	014 Move X25, [X25+640]
	015 Move X19, X5
	016 Move X20, X4
	017 Move X21, X3
	018 Move W24, W2
	019 Move W22, W1
	020 Move X23, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {33}
	025 Move X0, 0xA6F000
	026 Move X0, [X0+88]
	027 Call 0x1C17CF4
	028 Move X0, 0xA25000
	029 Move X0, [X0+640]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X26+2693], W8
	033 Move X0, [X25]
	034 And W8, W24, 1
	035 NotImplemented "Instruction MOVI not yet implemented."
	036 Move [X31+64], V0
	037 Move [X31+72], V0
	038 Move [X31+128], V0
	039 Move [X31+136], V0
	040 Move [X31+96], V0
	041 Move [X31+104], V0
	042 Move [X31+32], V0
	043 Move [X31+40], V0
	044 Move [X31+64], X23
	045 Move [X31+72], W22
	046 Move [X31+73], W8
	047 Move [X31+80], X21
	048 Move [X31+88], X20
	049 Move [X31+96], X19
	050 Move X19, 0xA6F000
	051 Move W8, [X0+224]
	052 Move X19, [X19+88]
	053 Compare W8, 0
	054 JumpIfNotEqual {56}
	055 Call 0x1C17DFC
	056 Add X8, X31, 8
	057 Move X0, X31
	058 Call AsyncTaskMethodBuilder.Create
	059 NotImplemented "Instruction LDUR not yet implemented."
	060 Move X9, [X31+24]
	061 Move X2, [X19]
	062 Add X8, X31, 32
	063 Or X19, X8, 15
	064 Move TEMP, 0
	065 Not TEMP
	066 Move W10, TEMP
	067 Add X1, X31, 32
	068 Move X0, X19
	069 Move [X31+40], V0
	070 Move [X31+56], X9
	071 Move [X31+32], W10
	072 Call AsyncTaskMethodBuilder.Start, X0, X1
	073 Move X0, X19
	074 Move X1, X31
	075 Call AsyncTaskMethodBuilder.get_Task, X0
	076 Move X20, [X31+224]
	077 Move X19, [X31+232]
	078 Move X22, [X31+208]
	079 Move X21, [X31+216]
	080 Move X24, [X31+192]
	081 Move X23, [X31+200]
	082 Move X26, [X31+176]
	083 Move X25, [X31+184]
	084 Move X30, [X31+160]
	085 Add X31, X31, 240
	086 Return X0

Method: System.Int32 WriteFrameToSendBuffer(System.Net.WebSockets.ManagedWebSocket/MessageOpcode opcode, System.Boolean endOfMessage, System.ReadOnlySpan`1<System.Byte> payloadBuffer)

Disassembly:
	0x036D2D50 RET
	0x036D2D54 STR X30, [X31 - 0x50]!
	0x036D2D58 STP X26, X25, [X31 + 0x10]
	0x036D2D5C STP X24, X23, [X31 + 0x20]
	0x036D2D60 STP X22, X21, [X31 + 0x30]
	0x036D2D64 STP X20, X19, [X31 + 0x40]
	0x036D2D68 ADRP X22, 0xD0E000
	0x036D2D6C ADRP X21, 0xA4C000
	0x036D2D70 LDRB W8, [X22 + 0xA8E]
	0x036D2D74 LDR X21, [X21 + 0x2E0]
	0x036D2D78 MOV X19, X1
	0x036D2D7C MOV X20, X0
	0x036D2D80 TBNZ X8, 0x0, 0x36D2DA4
	0x036D2D84 ADRP X0, 0xA4A000
	0x036D2D88 LDR X0, [X0 + 0xB60]
	0x036D2D8C BL 0x1C16CF4
	0x036D2D90 ADRP X0, 0xA4C000
	0x036D2D94 LDR X0, [X0 + 0x2E0]
	0x036D2D98 BL 0x1C16CF4
	0x036D2D9C MOVZ W8, 0x1
	0x036D2DA0 STRB W8, [X22 + 0xA8E]
	0x036D2DA4 LDR X1, [X21]
	0x036D2DA8 ADD X0, X20, 0x38
	0x036D2DAC STRH W31, [X31 + 0xC]
	0x036D2DB0 STR W31, [X31 + 0x8]
	0x036D2DB4 BL 0x2984784
	0x036D2DB8 LDRSW X9, [X20 + 0x88]
	0x036D2DBC MOV X21, X1
	0x036D2DC0 CMP W9, W21
	0x036D2DC4 B.CS 0x36D2F94
	0x00000000 INVALID
	0x036D2DCC ADD W10, W9, 0x1
	0x036D2DD0 MOV X22, X0
	0x036D2DD4 ANDS W8, W24, 0x70
	0x036D2DD8 CSET W26, NE
	0x036D2DDC CMP W10, W21
	0x036D2DE0 B.CS 0x36D2F94
	0x036D2DE4 LDRB W10, [X22, W10, SXTW]
	0x036D2DE8 LDR W11, [X20 + 0x8C]
	0x036D2DEC ADD W23, W9, 0x2
	0x036D2DF0 AND X25, X10, 0x7F
	0x036D2DF4 SUB W12, W11, 0x2
	0x036D2DF8 CMP X25, 0x7E
	0x036D2DFC STP W23, W12, [X20 + 0x88]
	0x036D2E00 B.EQ 0x36D2E50
	0x036D2E04 CMP X25, 0x7F
	0x036D2E08 B.NE 0x36D2E84
	0x036D2E0C SUB W13, W21, W9
	0x036D2E10 MOV X12, X31
	0x036D2E14 MOV X25, X31
	0x036D2E18 SUB W13, W13, 0x2
	0x036D2E1C ADD W14, W9, 0x2
	0x036D2E20 CMP W13, 0x7
	0x036D2E24 B.LS 0x36D2F94
	0x036D2E28 ADD W15, W14, W12
	0x036D2E2C LDRB W15, [X22, W15, SXTW]
	0x036D2E30 ADD X12, X12, 0x1
	0x036D2E34 CMP X12, 0x8
	0x036D2E38 BFM X15, X25, 0x38, 0x37
	0x036D2E3C MOV X25, X15
	0x036D2E40 B.NE 0x36D2E20
	0x036D2E44 MOVZ W12, 0xA
	0x036D2E48 MOVN W13, 0x9
	0x036D2E4C B 0x36D2E78
	0x036D2E50 CMP W23, W21
	0x036D2E54 B.CS 0x36D2F94
	0x036D2E58 ADD W12, W9, 0x3
	0x036D2E5C CMP W12, W21
	0x036D2E60 B.CS 0x36D2F94
	0x036D2E64 LDRB W13, [X22, W23, SXTW]
	0x036D2E68 LDRB W25, [X22, W12, SXTW]
	0x036D2E6C MOVZ W12, 0x4
	0x036D2E70 BFM X25, X13, 0x38, 0x7
	0x036D2E74 MOVN W13, 0x3
	0x036D2E78 ADD W11, W11, W13
	0x036D2E7C ADD W23, W9, W12
	0x036D2E80 STP W23, W11, [X20 + 0x88]
	0x036D2E84 SXTB W9, W10
	0x036D2E88 TBNZ X9, 0x1F, 0x36D2E94
	0x036D2E8C MOV W0, W31
	0x036D2E90 B 0x36D2EE8
	0x036D2E94 ADRP X9, 0xA4A000
	0x036D2E98 LDR X9, [X9 + 0xB60]
	0x036D2E9C ANDS W31, W8, 0xFF
	0x036D2EA0 CSET W10, NE
	0x036D2EA4 LDR X0, [X9]
	0x036D2EA8 LDRB W9, [X20 + 0x18]
	0x036D2EAC LDR W8, [X0 + 0xE0]
	0x036D2EB0 CMP W9, 0x0
	0x036D2EB4 CSET W9, EQ
	0x036D2EB8 ORR W26, W10, W9, 0x0
	0x036D2EBC CBNZ W8, 0x36D2EC4
	0x036D2EC0 BL 0x1C16DFC
	0x036D2EC4 MOV X0, X22
	0x036D2EC8 MOV X1, X21
	0x036D2ECC MOV W2, W23
	0x036D2ED0 BL 0x36D2FAC
	0x036D2ED4 ADRP X8, 0xFFFFFFFFFD41B000
	0x036D2ED8 LDR V0, [X20 + 0x88]
	0x036D2EDC LDR V1, [X8 + 0xF60]
	0x036D2EE0 ADD S0.2S, S0.2S, S1.2S
	0x036D2EE4 STR D0, [X20 + 0x88]
	0x036D2EE8 AND W8, W24, 0xF
	0x036D2EEC SUB W9, W8, 0x8
	0x036D2EF0 CMP W9, 0x3
	0x036D2EF4 B.CC 0x36D2F14
	0x036D2EF8 SUB W9, W8, 0x1
	0x036D2EFC CMP W9, 0x2
	0x036D2F00 B.CS 0x36D2F30
	0x036D2F04 LDRB W8, [X20 + 0x71]
	0x036D2F08 CMP W8, 0x0
	0x036D2F0C CSET W8, EQ
	0x036D2F10 B 0x36D2F40
	0x036D2F14 CMP X25, 0x7D
	0x036D2F18 CSET W8, GT
	0x036D2F1C CMP W24, 0x0
	0x036D2F20 CSET W9, GE
	0x036D2F24 ORR W8, W9, W8, 0x0
	0x036D2F28 ORR W8, W8, W26, 0x0
	0x036D2F2C B 0x36D2F4C
	0x036D2F30 CBNZ W8, 0x36D2F48
	0x036D2F34 LDRB W8, [X20 + 0x71]
	0x036D2F38 CMP W8, 0x0
	0x036D2F3C CSET W8, NE
	0x036D2F40 ORR W8, W26, W8, 0x0
	0x036D2F44 B 0x36D2F4C
	0x036D2F48 MOVZ W8, 0x1
	0x036D2F4C UBFM W9, W24, 0x7, 0x7
	0x036D2F50 AND W10, W24, 0xF
	0x036D2F54 STRB W10, [X19]
	0x036D2F58 STRB W9, [X19 + 0x1]
	0x036D2F5C LDRH W9, [X31 + 0xC]
	0x036D2F60 LDR W10, [X31 + 0x8]
	0x036D2F64 STR X25, [X19 + 0x8]
	0x036D2F68 STP W0, W31, [X19 + 0x10]
	0x036D2F6C STRH W9, [X19 + 0x6]
	0x036D2F70 STUR W10, [X19 + 0x2]
	0x036D2F74 LDP X20, X19, [X31 + 0x40]
	0x036D2F78 LDP X22, X21, [X31 + 0x30]
	0x036D2F7C LDP X24, X23, [X31 + 0x20]
	0x036D2F80 LDP X26, X25, [X31 + 0x10]
	0x036D2F84 EOR W8, W8, 0x1
	0x036D2F88 MOV W0, W8
	0x036D2F8C LDR X30, [X31], #0x50
	0x036D2F90 RET
	0x036D2F94 BL 0x1C16F28
	0x036D2F98 LDP W9, W8, [X0 + 0x88]
	0x036D2F9C SUB W8, W8, W1
	0x036D2FA0 ADD W9, W9, W1
	0x036D2FA4 STP W9, W8, [X0 + 0x88]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+8], X4
	003 Move [X31+16], X30
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X24, 0xD0F000
	013 Move [X31], X3
	014 Move X25, 0xA4B000
	015 Move W8, [X24+2694]
	016 Move X25, [X25+2912]
	017 Move X21, X4
	018 Move X20, X3
	019 Move W23, W2
	020 Move W22, W1
	021 Move X19, X0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {52}
	026 Move X0, 0xA4B000
	027 Move X0, [X0+2912]
	028 Call 0x1C17CF4
	029 Move X0, 0xA29000
	030 Move X0, [X0+1520]
	031 Call 0x1C17CF4
	032 Move X0, 0xA23000
	033 Move X0, [X0+1136]
	034 Call 0x1C17CF4
	035 Move X0, 0xA25000
	036 Move X0, [X0+3832]
	037 Call 0x1C17CF4
	038 Move X0, 0xA25000
	039 Move X0, [X0+3840]
	040 Call 0x1C17CF4
	041 Move X0, 0xA55000
	042 Move X0, [X0+3424]
	043 Call 0x1C17CF4
	044 Move X0, 0xA51000
	045 Move X0, [X0+2752]
	046 Call 0x1C17CF4
	047 Move X0, 0xA51000
	048 Move X0, [X0+3680]
	049 Call 0x1C17CF4
	050 Move W8, 1
	051 Move [X24+2694], W8
	052 Add W1, W21, 14
	053 Move X0, X19
	054 Call ManagedWebSocket.AllocateSendBuffer, X0, X1
	055 Move X0, [X25]
	056 Move [X31+24], X31
	057 Move W26, [X19+24]
	058 Move X24, [X19+152]
	059 Move W8, [X0+224]
	060 Compare W8, 0
	061 JumpIfNotEqual {63}
	062 Call 0x1C17DFC
	063 And W4, W23, 1
	064 Compare W26, 0
	065 JumpIfEqual {73}
	066 Move W0, W22
	067 Move X1, X24
	068 Move X2, X20
	069 Move X3, X21
	070 Move W5, W31
	071 Call ManagedWebSocket.WriteHeader, X0, X1, X2, X3, X4
	072 Move W20, W0
	073 Move W5, 1
	074 Move W0, W22
	075 Move X1, X24
	076 Move X2, X20
	077 Move X3, X21
	078 Call ManagedWebSocket.WriteHeader, X0, X1, X2, X3, X4
	079 Move X8, 0xA23000
	080 Move X8, [X8+1136]
	081 Move W1, W0
	082 Add X0, X31, 24
	083 Move X2, [X8]
	084 Call Nullable`1<Int32>..ctor, X0, X1
	085 Move W8, [X31+28]
	086 Move W21, [X31+8]
	087 Add W20, W8, 4
	088 NotImplemented "Instruction CMP not yet implemented."
	089 Move X22, 0xA55000
	090 Move X23, [X19+152]
	091 Move X22, [X22+3424]
	092 Compare X23, 0
	093 JumpIfEqual {102}
	094 Move W8, [X23+24]
	095 Subtract W8, W8, W20
	096 NotImplemented "Instruction CMP not yet implemented."
	097 Move X0, X31
	098 Call ThrowHelper.ThrowArgumentOutOfRangeException
	099 Add X8, X23, W20
	100 Add X1, X8, 32
	101 Move W2, W21
	102 Move X0, X31
	103 Call ThrowHelper.ThrowArgumentOutOfRangeException
	104 Move X1, X31
	105 Move X2, X31
	106 Move X3, [X22]
	107 Add X0, X31, 0
	108 Call 0x25BF5D8, X0, X1
	109 Move W8, [X31+24]
	110 Compare W8, 0
	111 JumpIfEqual {149}
	112 Move X22, [X19+152]
	113 Move W21, [X31+8]
	114 Compare X22, 0
	115 JumpIfEqual {123}
	116 Move W8, [X22+24]
	117 Subtract W8, W8, W20
	118 NotImplemented "Instruction CMP not yet implemented."
	119 Move X0, X31
	120 Call ThrowHelper.ThrowArgumentOutOfRangeException
	121 Add X8, X22, W20
	122 Add X22, X8, 32
	123 Or W8, W21, W20
	124 Compare W8, 0
	125 JumpIfEqual {128}
	126 Move X0, X31
	127 Call ThrowHelper.ThrowArgumentOutOfRangeException
	128 Move X22, X31
	129 Move X21, X31
	130 Move X8, 0xA25000
	131 Move X19, [X19+152]
	132 Move X8, [X8+3840]
	133 Add X0, X31, 24
	134 Move X1, [X8]
	135 Call Nullable`1<Int32>.get_Value, X0
	136 Move X8, [X25]
	137 Move W23, W0
	138 Move W9, [X8+224]
	139 Compare W9, 0
	140 JumpIfNotEqual {143}
	141 Move X0, X8
	142 Call 0x1C17DFC
	143 Move X0, X22
	144 Move X1, X21
	145 Move X2, X19
	146 Move W3, W23
	147 Move W4, W31
	148 Call ManagedWebSocket.ApplyMask, X0, X1, X2, X3
	149 Move W8, [X31+8]
	150 Move X22, [X31+64]
	151 Move X21, [X31+72]
	152 Move X24, [X31+48]
	153 Move X23, [X31+56]
	154 Move X26, [X31+32]
	155 Move X25, [X31+40]
	156 Add W0, W8, W20
	157 Move X20, [X31+80]
	158 Move X19, [X31+88]
	159 Move X30, [X31+16]
	160 Add X31, X31, 96
	161 Return X0

Method: System.Void SendKeepAliveFrameAsync()

Disassembly:
	0x036D3488 STRB W8, [X23 + 0xA98]
	0x036D348C CMP W21, 0x1
	0x036D3490 B.LT 0x36D3620
	0x036D3494 CBZ X19, 0x36D3650
	0x036D3498 ADRP X8, 0xFFFFFFFFFD41A000
	0x036D349C ADRP X11, 0xFFFFFFFFFD41A000
	0x036D34A0 ADRP X12, 0xFFFFFFFFFD41A000
	0x036D34A4 LDRB W9, [X19 + 0x10]
	0x036D34A8 LDR V0, [X8 + 0x928]
	0x036D34AC LDR V1, [X11 + 0x7A0]
	0x036D34B0 LDR V2, [X12 + 0xD60]
	0x036D34B4 MOV W10, W31
	0x036D34B8 MOVZ W8, 0x1
	0x036D34BC ANDS W31, W9, 0xFF
	0x036D34C0 B.EQ 0x36D34CC
	0x036D34C4 LDR W11, [X19 + 0x14]
	0x036D34C8 B 0x36D3520
	0x036D34CC CMP W10, W21
	0x036D34D0 STRB W8, [X19 + 0x10]
	0x036D34D4 B.CS 0x36D364C
	0x036D34D8 LDRB W9, [X22, W10, SXTW]
	0x036D34DC ADD W10, W10, 0x1
	0x036D34E0 TBNZ X9, 0x7, 0x36D34F4
	0x036D34E4 MOV W11, W31
	0x036D34E8 AND W9, W9, 0x7F
	0x036D34EC STP W31, W31, [X19 + 0x14]
	0x036D34F0 B 0x36D3518
	0x036D34F4 AND W11, W9, 0xC0
	0x036D34F8 CMP W11, 0x80
	0x036D34FC B.EQ 0x36D3630
	0x036D3500 AND W11, W9, 0xE0
	0x036D3504 CMP W11, 0xC0
	0x036D3508 B.NE 0x36D35D8
	0x036D350C AND W9, W9, 0x1F
	0x036D3510 MOVZ W11, 0x1
	0x036D3514 STUR D0, [X19 + 0x14]
	0x036D3518 STR W9, [X19 + 0x1C]
	0x036D351C MOVZ W9, 0x1
	0x036D3520 CMP W10, W21
	0x036D3524 CSEL W15, W10, W21, HI
	0x036D3528 MOV W13, W31
	0x036D352C SUB W14, W11, 0x1
	0x036D3530 SXTW X12, W10
	0x036D3534 SUB W10, W10, W15
	0x036D3538 CMP W12, W21
	0x036D353C B.GE 0x36D35AC
	0x036D3540 ADD W15, W11, W13
	0x036D3544 CMP W15, 0x0
	0x036D3548 B.LE 0x36D35AC
	0x036D354C CMP W10, W13
	0x036D3550 B.EQ 0x36D364C
	0x036D3554 LDRB W15, [X22, X12, LSL]
	0x036D3558 AND W16, W15, 0xC0
	0x036D355C CMP W16, 0x80
	0x036D3560 B.NE 0x36D3630
	0x036D3564 LDR W17, [X19 + 0x1C]
	0x036D3568 ADD W0, W14, W13
	0x036D356C ADD W16, W11, W13
	0x036D3570 STR W0, [X19 + 0x14]
	0x036D3574 BFM W15, W17, 0x1A, 0x19
	0x036D3578 AND W17, W15, 0xFFFFFFE0
	0x036D357C CMP W17, 0x360
	0x036D3580 STR W15, [X19 + 0x1C]
	0x036D3584 B.NE 0x36D3590
	0x036D3588 SUB W17, W16, 0x2
	0x036D358C CBZ W17, 0x36D3630
	0x036D3590 SUB W16, W16, 0x3
	0x036D3594 SUB W13, W13, 0x1
	0x036D3598 ADD X12, X12, 0x1
	0x036D359C CBNZ W16, 0x36D3538
	0x036D35A0 CMP W15, 0x10F
	0x036D35A4 B.LE 0x36D3538
	0x036D35A8 B 0x36D3630
	0x036D35AC ADDS W31, W11, W13
	0x036D35B0 B.NE 0x36D35C8
	0x036D35B4 LDP W11, W10, [X19 + 0x18]
	0x036D35B8 MOV W9, W31
	0x036D35BC STRB W31, [X19 + 0x10]
	0x036D35C0 CMP W10, W11
	0x036D35C4 B.LT 0x36D3630
	0x036D35C8 CMP W12, W21
	0x036D35CC MOV W10, W12
	0x036D35D0 B.LT 0x36D34BC
	0x036D35D4 B 0x36D3620
	0x036D35D8 AND W11, W9, 0xF0
	0x036D35DC CMP W11, 0xE0
	0x036D35E0 B.NE 0x36D35FC
	0x036D35E4 AND W11, W9, 0xF
	0x036D35E8 STUR D1, [X19 + 0x14]
	0x036D35EC MOVZ W9, 0x1
	0x036D35F0 STR W11, [X19 + 0x1C]
	0x036D35F4 MOVZ W11, 0x2
	0x036D35F8 B 0x36D3520
	0x036D35FC AND W11, W9, 0xF8
	0x036D3600 CMP W11, 0xF0
	0x036D3604 B.NE 0x36D3630
	0x036D3608 AND W11, W9, 0x7
	0x036D360C MOVZ W9, 0x1
	0x036D3610 STR W11, [X19 + 0x1C]
	0x036D3614 MOVZ W11, 0x3
	0x036D3618 STUR D2, [X19 + 0x14]
	0x036D361C B 0x36D3520
	0x036D3620 TBZ X20, 0x0, 0x36D3638
	0x036D3624 CBZ X19, 0x36D3650
	0x036D3628 LDRB W8, [X19 + 0x10]
	0x036D362C CBZ W8, 0x36D3638
	0x036D3630 MOV W0, W31
	0x036D3634 B 0x36D363C
	0x036D3638 MOVZ W0, 0x1
	0x036D363C LDP X20, X19, [X31 + 0x20]
	0x036D3640 LDP X22, X21, [X31 + 0x10]
	0x036D3644 LDP X30, X23, [X31], #0x30
	0x036D3648 RET
	0x036D364C BL 0x1C16F28
	0x036D3650 BL 0x1C16F20
	0x036D3654 SUB X31, X31, 0x70
	0x036D3658 STR X30, [X31 + 0x30]
	0x036D365C STP X24, X23, [X31 + 0x40]
	0x036D3660 STP X22, X21, [X31 + 0x50]
	0x036D3664 STP X20, X19, [X31 + 0x60]
	0x036D3668 ADRP X23, 0xD0D000
	0x036D366C LDRB W8, [X23 + 0xA99]
	0x036D3670 MOV X19, X3
	0x036D3674 MOV X21, X2
	0x036D3678 MOV X22, X1
	0x036D367C MOV X20, X0
	0x036D3680 TBNZ X8, 0x0, 0x36D36D4
	0x036D3684 ADRP X0, 0xA2B000
	0x036D3688 LDR X0, [X0 + 0xE68]
	0x036D368C BL 0x1C16CF4
	0x036D3690 ADRP X0, 0xA6C000
	0x036D3694 LDR X0, [X0 + 0xFF0]
	0x036D3698 BL 0x1C16CF4
	0x036D369C ADRP X0, 0xA6C000
	0x036D36A0 LDR X0, [X0 + 0xFF8]
	0x036D36A4 BL 0x1C16CF4
	0x036D36A8 ADRP X0, 0xA60000
	0x036D36AC LDR X0, [X0 + 0xD80]
	0x036D36B0 BL 0x1C16CF4
	0x036D36B4 ADRP X0, 0xA6D000
	0x036D36B8 LDR X0, [X0 + 0xB8]
	0x036D36BC BL 0x1C16CF4
	0x036D36C0 ADRP X0, 0xA6D000
	0x036D36C4 LDR X0, [X0]
	0x036D36C8 BL 0x1C16CF4
	0x036D36CC MOVZ W8, 0x1
	0x036D36D0 STRB W8, [X23 + 0xA99]
	0x036D36D4 STP X31, X31, [X31 + 0x18]
	0x036D36D8 STR X31, [X31 + 0x28]
	0x036D36DC CBZ X22, 0x36D374C
	0x036D36E0 MOV X0, X22
	0x036D36E4 MOV X1, X31
	0x036D36E8 BL 0x33F0678
	0x036D36EC CMP W0, 0x5
	0x036D36F0 B.NE 0x36D37C4
	0x036D36F4 ADRP X8, 0xA6D000
	0x036D36F8 LDR X8, [X8 + 0xB8]
	0x036D36FC LDR X9, [X22]
	0x036D3700 LDR X8, [X8]
	0x036D3704 LDRB W11, [X9 + 0x130]
	0x036D3708 LDRB W10, [X8 + 0x130]
	0x036D370C CMP W11, W10
	0x036D3710 B.CC 0x36D374C
	0x036D3714 LDR X9, [X9 + 0xC8]
	0x036D3718 ADD X9, X9, X10, 0x3, LSL
	0x036D371C LDUR X9, [X9 - 0x8]
	0x036D3720 CMP X9, X8
	0x036D3724 B.NE 0x36D374C
	0x036D3728 ADRP X8, 0xA60000
	0x036D372C LDR X8, [X8 + 0xD80]
	0x036D3730 MOV X0, X22
	0x036D3734 LDR X1, [X8]
	0x036D3738 BL 0x269F34C
	0x036D373C CBZ X0, 0x36D37E0
	0x036D3740 LDR W8, [X0 + 0x18]
	0x036D3744 CMP W8, 0x2
	0x036D3748 B.EQ 0x36D37C4
	0x036D374C ADRP X8, 0xA2B000
	0x036D3750 LDR X8, [X8 + 0xE68]
	0x036D3754 ADRP X22, 0xA6C000
	0x036D3758 ADRP X23, 0xA6C000
	0x036D375C LDR X22, [X22 + 0xFF8]
	0x036D3760 LDR X23, [X23 + 0xFF0]
	0x036D3764 LDR X2, [X8]
	0x036D3768 ADRP X24, 0xA6D000
	0x036D376C LDR X24, [X24]
	0x036D3770 ADD X0, X31, 0x8
	0x036D3774 MOV X1, X21
	0x036D3778 STP X31, X31, [X31 + 0x8]
	0x036D377C BL 0x2B87B6C
	0x036D3780 LDP X0, X1, [X31 + 0x8]
	0x036D3784 LDR X2, [X22]
	0x036D3788 BL 0x319DBE4
	0x036D378C LDR X5, [X23]
	0x036D3790 MOV X2, X0
	0x036D3794 MOV X3, X1
	0x036D3798 ADD X8, X31, 0x18
	0x036D379C MOV X0, X20
	0x036D37A0 MOV X1, X2
	0x036D37A4 MOV X2, X3
	0x036D37A8 MOV X3, X19
	0x036D37AC MOV X4, X31
	0x036D37B0 BL 0x22151D0
	0x036D37B4 LDR X1, [X24]
	0x036D37B8 ADD X0, X31, 0x18
	0x036D37BC BL 0x279134C
	0x036D37C0 MOV X22, X0
	0x036D37C4 MOV X0, X22
	0x036D37C8 LDP X20, X19, [X31 + 0x60]
	0x036D37CC LDP X22, X21, [X31 + 0x50]
	0x036D37D0 LDP X24, X23, [X31 + 0x40]
	0x036D37D4 LDR X30, [X31 + 0x30]
	0x036D37D8 ADD X31, X31, 0x70
	0x036D37DC RET
	0x036D37E0 BL 0x1C16F20
	0x036D37E4 STR X30, [X31 - 0x40]!
	0x036D37E8 STP X24, X23, [X31 + 0x10]
	0x036D37EC STP X22, X21, [X31 + 0x20]
	0x036D37F0 STP X20, X19, [X31 + 0x30]
	0x036D37F4 ADRP X22, 0xD0D000
	0x036D37F8 ADRP X20, 0xA49000
	0x036D37FC ADRP X19, 0xA4F000
	0x036D3800 ADRP X21, 0xA6D000
	0x036D3804 LDRB W8, [X22 + 0xA9A]
	0x036D3808 LDR X20, [X20 + 0xB60]
	0x036D380C LDR X19, [X19 + 0x828]
	0x036D3810 LDR X21, [X21 + 0xC0]
	0x036D3814 TBNZ X8, 0x0, 0x36D3874
	0x036D3818 ADRP X0, 0xA49000
	0x036D381C LDR X0, [X0 + 0xB60]
	0x036D3820 BL 0x1C16CF4
	0x036D3824 ADRP X0, 0xA6D000
	0x036D3828 LDR X0, [X0 + 0xC8]
	0x036D382C BL 0x1C16CF4
	0x036D3830 ADRP X0, 0xA21000
	0x036D3834 LDR X0, [X0 + 0x7B8]
	0x036D3838 BL 0x1C16CF4
	0x036D383C ADRP X0, 0xA6D000
	0x036D3840 LDR X0, [X0 + 0xD0]
	0x036D3844 BL 0x1C16CF4
	0x036D3848 ADRP X0, 0xA4F000
	0x036D384C LDR X0, [X0 + 0x828]
	0x036D3850 BL 0x1C16CF4
	0x036D3854 ADRP X0, 0xA5E000
	0x036D3858 LDR X0, [X0 + 0x9B0]
	0x036D385C BL 0x1C16CF4
	0x036D3860 ADRP X0, 0xA6D000
	0x036D3864 LDR X0, [X0 + 0xC0]
	0x036D3868 BL 0x1C16CF4
	0x036D386C MOVZ W8, 0x1
	0x036D3870 STRB W8, [X22 + 0xA9A]
	0x036D3874 MOV X0, X31
	0x036D3878 BL 0x3256158
	0x036D387C LDR X8, [X20]
	0x036D3880 LDR X8, [X8 + 0xB8]
	0x036D3884 STR X0, [X8]
	0x036D3888 LDR X0, [X19]
	0x036D388C BL 0x1C16F10
	0x036D3890 MOVZ W2, 0x1
	0x036D3894 MOV W1, W31
	0x036D3898 MOV X3, X31
	0x036D389C MOV X19, X0
	0x036D38A0 BL 0x323A334
	0x036D38A4 LDR X8, [X20]
	0x036D38A8 MOVZ W1, 0x2
	0x036D38AC LDR X8, [X8 + 0xB8]
	0x036D38B0 STR X19, [X8 + 0x8]
	0x036D38B4 LDR X0, [X21]
	0x036D38B8 BL 0x1C16D6C
	0x036D38BC CBZ X0, 0x36D3A18
	0x036D38C0 LDR W8, [X0 + 0x18]
	0x036D38C4 CBZ W8, 0x36D3A14
	0x036D38C8 MOVZ W9, 0x2
	0x036D38CC CMP W8, 0x1
	0x036D38D0 STR W9, [X0 + 0x20]
	0x036D38D4 B.EQ 0x36D3A14
	0x036D38D8 MOVZ W8, 0x4
	0x036D38DC STR W8, [X0 + 0x24]
	0x036D38E0 LDR X8, [X20]
	0x036D38E4 MOVZ W1, 0x2
	0x036D38E8 LDR X8, [X8 + 0xB8]
	0x036D38EC STR X0, [X8 + 0x10]
	0x036D38F0 LDR X0, [X21]
	0x036D38F4 BL 0x1C16D6C
	0x036D38F8 CBZ X0, 0x36D3A18
	0x036D38FC LDR W8, [X0 + 0x18]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0xD0E000
	009 Move W8, [X20+2695]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {44}
	015 Move X0, 0xA2D000
	016 Move X0, [X0+1808]
	017 Call 0x1C17CF4
	018 Move X0, 0xA29000
	019 Move X0, [X0+2008]
	020 Call 0x1C17CF4
	021 Move X0, 0xA6E000
	022 Move X0, [X0+104]
	023 Call 0x1C17CF4
	024 Move X0, 0xA54000
	025 Move X0, [X0+3344]
	026 Call 0x1C17CF4
	027 Move X0, 0xA29000
	028 Move X0, [X0+2024]
	029 Call 0x1C17CF4
	030 Move X0, 0xA6E000
	031 Move X0, [X0+112]
	032 Call 0x1C17CF4
	033 Move X0, 0xA6D000
	034 Move X0, [X0+3944]
	035 Call 0x1C17CF4
	036 Move X0, 0xA49000
	037 Move X0, [X0+1656]
	038 Call 0x1C17CF4
	039 Move X0, 0xA4B000
	040 Move X0, [X0+3648]
	041 Call 0x1C17CF4
	042 Move W8, 1
	043 Move [X20+2695], W8
	044 Move X0, [X19+80]
	045 Compare X0, 0
	046 JumpIfEqual {311}
	047 Move W1, W31
	048 Move X2, X31
	049 Call SemaphoreSlim.Wait, X0, X1
	050 Move TEMP, X0
	051 And TEMP, TEMP, 1
	052 Compare TEMP, 1
	053 JumpIfNotEqual {300}
	054 Move X8, 0xA6E000
	055 Move X8, [X8+104]
	056 Move X0, [X8]
	057 Call 0x319ECE4
	058 Move X8, 0xA54000
	059 Move X8, [X8+3344]
	060 Move X2, [X8]
	061 Call 0x319ECE0, X0
	062 Move X3, X0
	063 Move X4, X1
	064 Move W1, 9
	065 Move W2, 1
	066 Move X0, X19
	067 Call ManagedWebSocket.SendFrameLockAcquiredNonCancelableAsync, X0, X1, X2, X3
	068 Move X21, 0xA4B000
	069 Move X21, [X21+3648]
	070 Move X19, X0
	071 Move [X31], X19
	072 Move [X31+8], X1
	073 Move X20, X1
	074 Move X0, [X21]
	075 Move W8, [X0+224]
	076 Compare W8, 0
	077 JumpIfNotEqual {79}
	078 Call 0x1C17DFC
	079 Move X22, 0xD0B000
	080 Move W8, [X22+1281]
	081 Compare W8, 0
	082 JumpIfEqual {111}
	083 Compare X19, 0
	084 JumpIfEqual {121}
	085 Move X9, 0xA22000
	086 Move X9, [X9+1976]
	087 Move X8, [X19]
	088 Move X9, [X9]
	089 Move W11, [X8+304]
	090 Move W10, [X9+304]
	091 NotImplemented "Instruction CMP not yet implemented."
	092 Move X11, [X8+200]
	093 Add X10, X11, X10
	094 NotImplemented "Instruction LDUR not yet implemented."
	095 NotImplemented "Instruction CMP not yet implemented."
	096 Move X10, 0xA50000
	097 Move X10, [X10+3752]
	098 NotImplemented "Instruction LDRH not yet implemented."
	099 Move X1, [X10]
	100 Compare X9, 0
	101 JumpIfEqual {108}
	102 Move X10, [X8+176]
	103 Add X10, X10, 8
	104 NotImplemented "Instruction LDUR not yet implemented."
	105 NotImplemented "Instruction CMP not yet implemented."
	106 Subtract X9, X9, 1
	107 Add X10, X10, 16
	108 Move X0, X19
	109 Move W2, W31
	110 Call 0x1C5D788
	111 Move X0, 0xA50000
	112 Move X0, [X0+3752]
	113 Call 0x1C17CF4
	114 Move X0, 0xA22000
	115 Move X0, [X0+1976]
	116 Call 0x1C17CF4
	117 Move W8, 1
	118 Move [X22+1281], W8
	119 Compare X19, 0
	120 JumpIfNotEqual {85}
	121 Move W19, 1
	122 NotImplemented "Instruction LDRSW not yet implemented."
	123 Add X8, X8, X9
	124 Add X0, X8, 312
	125 Move X8, [X0]
	126 Move X2, [X0+8]
	127 Move X0, X19
	128 Move W1, W20
	129 NotImplemented "Instruction BLR not yet implemented."
	130 NotImplemented "Instruction CMP not yet implemented."
	131 NotImplemented "Instruction CSET not yet implemented."
	132 Move X0, [X21]
	133 Move W8, [X0+224]
	134 Compare W8, 0
	135 JumpIfNotEqual {137}
	136 Call 0x1C17DFC
	137 Add X0, X31, 0
	138 Move X1, X31
	139 Move TEMP, X19
	140 And TEMP, TEMP, 1
	141 Compare TEMP, 1
	142 JumpIfNotEqual {207}
	143 Call ValueTask.GetAwaiter, X0
	144 Move X8, 0xA49000
	145 Move X8, [X8+1656]
	146 Move X19, X0
	147 Move X20, X1
	148 Move X0, [X8]
	149 Move W8, [X0+224]
	150 Compare W8, 0
	151 JumpIfNotEqual {153}
	152 Call 0x1C17DFC
	153 Move X22, 0xD0A000
	154 Move W8, [X22+1253]
	155 Compare W8, 0
	156 JumpIfNotEqual {162}
	157 Move X0, 0xA4B000
	158 Move X0, [X0+3648]
	159 Call 0x1C17CF4
	160 Move W8, 1
	161 Move [X22+1253], W8
	162 Move X0, [X21]
	163 Move W8, [X0+224]
	164 Compare W8, 0
	165 JumpIfNotEqual {167}
	166 Call 0x1C17DFC
	167 Move X21, 0xD0A000
	168 Move W8, [X21+1254]
	169 Compare W8, 0
	170 JumpIfNotEqual {179}
	171 Move X0, 0xA50000
	172 Move X0, [X0+3752]
	173 Call 0x1C17CF4
	174 Move X0, 0xA22000
	175 Move X0, [X0+1976]
	176 Call 0x1C17CF4
	177 Move W8, 1
	178 Move [X21+1254], W8
	179 Compare X19, 0
	180 JumpIfEqual {300}
	181 Move X9, 0xA22000
	182 Move X9, [X9+1976]
	183 Move X8, [X19]
	184 Move X9, [X9]
	185 Move W11, [X8+304]
	186 Move W10, [X9+304]
	187 NotImplemented "Instruction CMP not yet implemented."
	188 Move X11, [X8+200]
	189 Add X10, X11, X10
	190 NotImplemented "Instruction LDUR not yet implemented."
	191 NotImplemented "Instruction CMP not yet implemented."
	192 Move X10, 0xA50000
	193 Move X10, [X10+3752]
	194 NotImplemented "Instruction LDRH not yet implemented."
	195 Move X1, [X10]
	196 Compare X9, 0
	197 JumpIfEqual {204}
	198 Move X10, [X8+176]
	199 Add X10, X10, 8
	200 NotImplemented "Instruction LDUR not yet implemented."
	201 NotImplemented "Instruction CMP not yet implemented."
	202 Subtract X9, X9, 1
	203 Add X10, X10, 16
	204 Move W2, 2
	205 Move X0, X19
	206 Call 0x1C5D788
	207 Call ValueTask.AsTask, X0
	208 Move X22, 0xA6D000
	209 Move X22, [X22+3944]
	210 Move X19, X0
	211 Move X8, [X22]
	212 Move W9, [X8+224]
	213 Compare W9, 0
	214 JumpIfNotEqual {218}
	215 Move X0, X8
	216 Call 0x1C17DFC
	217 Move X8, [X22]
	218 Move X9, [X8+184]
	219 Move X20, [X9+32]
	220 Compare X20, 0
	221 JumpIfNotEqual {244}
	222 Move W9, [X8+224]
	223 Compare W9, 0
	224 JumpIfNotEqual {228}
	225 Move X0, X8
	226 Call 0x1C17DFC
	227 Move X8, [X22]
	228 Move X9, 0xA2D000
	229 Move X8, [X8+184]
	230 Move X9, [X9+1808]
	231 Move X21, [X8]
	232 Move X0, [X9]
	233 Call 0x1C17F10
	234 Move X8, 0xA6E000
	235 Move X8, [X8+112]
	236 Move X1, X21
	237 Move X3, X31
	238 Move X20, X0
	239 Move X2, [X8]
	240 Call Action`1<Object>..ctor, X0, X1, X2
	241 Move X8, [X22]
	242 Move X8, [X8+184]
	243 Move [X8+32], X20
	244 Move X8, 0xA29000
	245 Move X8, [X8+2008]
	246 Move X0, [X8]
	247 Move W8, [X0+224]
	248 Compare W8, 0
	249 JumpIfNotEqual {251}
	250 Call 0x1C17DFC
	251 Move X0, X31
	252 Call CancellationToken.get_None
	253 Move X22, 0xA29000
	254 Move X22, [X22+2024]
	255 Move X21, X0
	256 Move X8, [X22]
	257 Move W9, [X8+224]
	258 Compare W9, 0
	259 JumpIfNotEqual {262}
	260 Move X0, X8
	261 Call 0x1C17DFC
	262 Move X23, 0xD07000
	263 Move W8, [X23+2189]
	264 Compare W8, 0
	265 JumpIfNotEqual {271}
	266 Move X0, 0xA29000
	267 Move X0, [X0+2024]
	268 Call 0x1C17CF4
	269 Move W8, 1
	270 Move [X23+2189], W8
	271 Move X0, [X22]
	272 Move W8, [X0+224]
	273 Compare W8, 0
	274 JumpIfNotEqual {277}
	275 Call 0x1C17DFC
	276 Move X0, [X22]
	277 Compare X19, 0
	278 JumpIfEqual {311}
	279 Move X8, [X0+184]
	280 Move W3, 0xD0000
	281 Move X0, X19
	282 Move X1, X20
	283 Move X4, [X8+8]
	284 Move X2, X21
	285 Move X5, X31
	286 Call Task.ContinueWith, X0, X1, X2, X3, X4
	287 Move X0, X19
	288 Move X1, X31
	289 Call Task.get_IsCompletedSuccessfully, X0
	290 Move W19, W0
	291 Move W9, [X10]
	292 Add W9, W9, 2
	293 Add X8, X8, W9
	294 Add X0, X8, 312
	295 Move X8, [X0]
	296 Move X2, [X0+8]
	297 Move X0, X19
	298 Move W1, W20
	299 NotImplemented "Instruction BLR not yet implemented."
	300 Move X20, [X31+48]
	301 Move X19, [X31+56]
	302 Move X22, [X31+32]
	303 Move X21, [X31+40]
	304 Move X30, [X31+16]
	305 Move X23, [X31+24]
	306 Add X31, X31, 64
	307 Return 
	308 Move X0, X19
	309 Move X1, X31
	310 Call TaskAwaiter.ValidateEnd, X0
	311 Call 0x1C17F20

Method: System.Int32 WriteHeader(System.Net.WebSockets.ManagedWebSocket/MessageOpcode opcode, System.Byte[] sendBuffer, System.ReadOnlySpan`1<System.Byte> payload, System.Boolean endOfMessage, System.Boolean useMask)

Disassembly:
	0x036D3254 BL 0x1C16DFC
	0x036D3258 LDR X20, [X20]
	0x036D325C LDR X0, [X20 + 0x20]
	0x036D3260 LDRB W8, [X0 + 0x135]
	0x036D3264 TBNZ X8, 0x0, 0x36D326C
	0x036D3268 BL 0x1C5C684
	0x036D326C LDR X8, [X0 + 0xC0]
	0x036D3270 LDR X0, [X8 + 0x8]
	0x036D3274 LDRB W8, [X0 + 0x135]
	0x036D3278 TBNZ X8, 0x0, 0x36D3280
	0x036D327C BL 0x1C5C684
	0x036D3280 LDR W8, [X0 + 0xE0]
	0x036D3284 CBNZ W8, 0x36D328C
	0x036D3288 BL 0x1C16DFC
	0x036D328C LDR X0, [X20 + 0x20]
	0x036D3290 LDRB W8, [X0 + 0x135]
	0x036D3294 TBNZ X8, 0x0, 0x36D329C
	0x036D3298 BL 0x1C5C684
	0x036D329C LDR X8, [X0 + 0xC0]
	0x036D32A0 LDR X0, [X8 + 0x8]
	0x036D32A4 LDRB W8, [X0 + 0x135]
	0x036D32A8 TBNZ X8, 0x0, 0x36D32B0
	0x036D32AC BL 0x1C5C684
	0x036D32B0 LDR X8, [X0 + 0xB8]
	0x036D32B4 LDR X0, [X8]
	0x036D32B8 CBZ X0, 0x36D32E4
	0x036D32BC LDR X8, [X0]
	0x036D32C0 MOV X1, X19
	0x036D32C4 LDP X20, X19, [X31 + 0x10]
	0x036D32C8 MOV W2, W31
	0x036D32CC LDP X4, X3, [X8 + 0x188]
	0x036D32D0 LDR X30, [X31], #0x20
	0x036D32D4 BR X4
	0x036D32D8 LDP X20, X19, [X31 + 0x10]
	0x036D32DC LDR X30, [X31], #0x20
	0x036D32E0 RET
	0x036D32E4 BL 0x1C16F20
	0x036D32E8 SUB X31, X31, 0x40
	0x036D32EC STP X30, X23, [X31 + 0x10]
	0x036D32F0 STP X22, X21, [X31 + 0x20]
	0x036D32F4 STP X20, X19, [X31 + 0x30]
	0x036D32F8 ADRP X23, 0xD0D000
	0x036D32FC LDRB W8, [X23 + 0xA96]
	0x036D3300 MOV W19, W3
	0x036D3304 MOV W21, W2
	0x036D3308 MOV X20, X1
	0x036D330C MOV X22, X0
	0x036D3310 STR W2, [X31 + 0xC]
	0x036D3314 TBNZ X8, 0x0, 0x36D3338
	0x036D3318 ADRP X0, 0xA4E000
	0x036D331C LDR X0, [X0 + 0x830]
	0x036D3320 BL 0x1C16CF4
	0x036D3324 ADRP X0, 0xA4F000
	0x036D3328 LDR X0, [X0 + 0x928]
	0x036D332C BL 0x1C16CF4
	0x036D3330 MOVZ W8, 0x1
	0x036D3334 STRB W8, [X23 + 0xA96]
	0x036D3338 CMP W20, 0x1
	0x036D333C B.LT 0x36D33D8
	0x036D3340 ADRP X8, 0xA4E000
	0x036D3344 LDR X8, [X8 + 0x830]
	0x036D3348 MOV X0, X22
	0x036D334C MOV X1, X20
	0x036D3350 LDR X2, [X8]
	0x036D3354 BL 0x2218CF4
	0x036D3358 ANDS X31, X0, 0x3
	0x036D335C B.NE 0x36D3398
	0x036D3360 CMP W20, 0x4
	0x036D3364 B.LT 0x36D3398
	0x036D3368 UBFM W8, W19, 0x1D, 0x1C
	0x036D336C RORV W8, W21, W8
	0x036D3370 LDR W9, [X0]
	0x036D3374 MOV W10, W20
	0x036D3378 CMP W20, 0x7
	0x036D337C SUB W20, W20, 0x4
	0x036D3380 EOR W9, W9, W8, 0x0
	0x036D3384 STR W9, [X0], #0x4
	0x036D3388 B.GT 0x36D3370
	0x036D338C ADD W8, W20, 0x4
	0x036D3390 CMP W8, 0x5
	0x036D3394 B.LT 0x36D33D8
	0x036D3398 ADD X8, X0, W20, UXTW
	0x036D339C CMP X8, X0
	0x036D33A0 B.LS 0x36D33D8
	0x036D33A4 MOV W8, W20
	0x036D33A8 ADD X9, X0, 0x1
	0x036D33AC ADD X10, X31, 0xC
	0x036D33B0 LDRB W11, [X0]
	0x036D33B4 LDRB W12, [X10, W19, SXTW]
	0x036D33B8 ADD W13, W19, 0x1
	0x036D33BC SUBS X8, X8, 0x1
	0x036D33C0 AND W19, W13, 0x3
	0x036D33C4 EOR W11, W12, W11, 0x0

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0xD0E000
	009 Move W8, [X24+2696]
	010 Move W20, W5
	011 Move W22, W4
	012 Move X21, X3
	013 Move X19, X1
	014 Move W23, W0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0xA4A000
	020 Move X0, [X0+2912]
	021 Call 0x1C17CF4
	022 Move X0, 0xA50000
	023 Move X0, [X0+2752]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X24+2696], W8
	027 Compare X19, 0
	028 JumpIfEqual {104}
	029 Move X8, [X19+24]
	030 Compare W8, 0
	031 JumpIfEqual {103}
	032 Or W9, W23, 128
	033 And W31, W22, 1
	034 NotImplemented "Instruction CSEL not yet implemented."
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move [X19+32], W9
	037 NotImplemented "Instruction CMP not yet implemented."
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Move W9, 127
	040 And X8, X8, 0xFFFFFFFF
	041 Move [X19+33], W9
	042 Move W9, 41
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Add W10, W21, 255
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Subtract X11, X9, 32
	047 NotImplemented "Instruction CSEL not yet implemented."
	048 Move [X19], W21
	049 Subtract X9, X9, 1
	050 NotImplemented "Instruction CMP not yet implemented."
	051 NotImplemented "Instruction SBFM not yet implemented."
	052 Move W21, 10
	053 Move TEMP, X20
	054 And TEMP, TEMP, 1
	055 Compare TEMP, 1
	056 JumpIfEqual {79}
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Move [X19+33], W21
	059 Move W21, 2
	060 Move TEMP, X20
	061 And TEMP, TEMP, 1
	062 Compare TEMP, 1
	063 JumpIfEqual {79}
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Move W9, 126
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Move [X19+33], W9
	068 Move X9, X21
	069 ShiftRight X9, 8
	070 And X9, X9, 0x7FFFFFFF
	071 NotImplemented "Instruction CMP not yet implemented."
	072 Move [X19+34], W9
	073 Move [X19+35], W21
	074 Move W21, 4
	075 Move TEMP, X20
	076 And TEMP, TEMP, 1
	077 Compare TEMP, 1
	078 JumpIfNotEqual {94}
	079 Move W8, [X19+24]
	080 NotImplemented "Instruction CMP not yet implemented."
	081 Move W8, [X19+33]
	082 Or W8, W8, 128
	083 Move [X19+33], W8
	084 Move X8, 0xA4A000
	085 Move X8, [X8+2912]
	086 Move X0, [X8]
	087 Move W8, [X0+224]
	088 Compare W8, 0
	089 JumpIfNotEqual {91}
	090 Call 0x1C17DFC
	091 Move X0, X19
	092 Move W1, W21
	093 Call ManagedWebSocket.WriteRandomMask, X0, X1
	094 Move W0, W21
	095 Move X20, [X31+48]
	096 Move X19, [X31+56]
	097 Move X22, [X31+32]
	098 Move X21, [X31+40]
	099 Move X24, [X31+16]
	100 Move X23, [X31+24]
	101 Move X30, [X31+64]
	102 Return X0
	103 Call 0x1C17F28
	104 Call 0x1C17F20

Method: System.Void WriteRandomMask(System.Byte[] buffer, System.Int32 offset)

Disassembly:
	0x036D3900 CBZ W8, 0x36D3A14
	0x036D3904 MOVZ W9, 0x2
	0x036D3908 CMP W8, 0x1
	0x036D390C STR W9, [X0 + 0x20]
	0x036D3910 B.EQ 0x36D3A14
	0x036D3914 MOVZ W8, 0x3
	0x036D3918 STR W8, [X0 + 0x24]
	0x036D391C LDR X8, [X20]
	0x036D3920 MOVZ W1, 0x2
	0x036D3924 LDR X8, [X8 + 0xB8]
	0x036D3928 STR X0, [X8 + 0x18]
	0x036D392C LDR X0, [X21]
	0x036D3930 BL 0x1C16D6C
	0x036D3934 CBZ X0, 0x36D3A18
	0x036D3938 LDR W8, [X0 + 0x18]
	0x036D393C CBZ W8, 0x36D3A14
	0x036D3940 MOVZ W22, 0x2
	0x036D3944 CMP W8, 0x1
	0x036D3948 STR W22, [X0 + 0x20]
	0x036D394C B.EQ 0x36D3A14
	0x036D3950 MOVZ W8, 0x4
	0x036D3954 STR W8, [X0 + 0x24]
	0x036D3958 LDR X8, [X20]
	0x036D395C ADRP X19, 0xA6D000
	0x036D3960 ADRP X23, 0xA5E000
	0x036D3964 ADRP X24, 0xA21000
	0x036D3968 LDR X8, [X8 + 0xB8]
	0x036D396C LDR X19, [X19 + 0xD0]
	0x036D3970 MOVZ W1, 0x3
	0x036D3974 STR X0, [X8 + 0x20]
	0x036D3978 LDR X0, [X21]
	0x036D397C ADRP X21, 0xA6D000
	0x036D3980 LDR X23, [X23 + 0x9B0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xD0E000
	007 Move X21, 0xA4A000
	008 Move W8, [X22+2697]
	009 Move X21, [X21+2912]
	010 Move W19, W1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xA4A000
	017 Move X0, [X0+2912]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+2697], W8
	021 Move X0, [X21]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {27}
	025 Call 0x1C17DFC
	026 Move X0, [X21]
	027 Move X8, [X0+184]
	028 Move X0, [X8]
	029 Compare X0, 0
	030 JumpIfEqual {43}
	031 Move X8, [X0]
	032 Move X1, X20
	033 Move W2, W19
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X5, [X8+424]
	037 Move X4, [X8+432]
	038 Move X22, [X31+16]
	039 Move X21, [X31+24]
	040 Move W3, 4
	041 Move X30, [X31+48]
	042 CallNoReturn X5
	043 Call 0x1C17F20

Method: System.Threading.Tasks.ValueTask`1<TWebSocketReceiveResult> ReceiveAsyncPrivate(System.Memory`1<System.Byte> payloadBuffer, System.Threading.CancellationToken cancellationToken, TWebSocketReceiveResultGetter resultGetter = null)

Disassembly:
	0x02215F20 LDRH W10, [X10]
	0x02215F24 TBNZ X10, 0x0, 0x2215F44
	0x02215F28 MOV X0, X8
	0x02215F2C BL 0x1C5C684
	0x02215F30 LDR X9, [X20 + 0x38]
	0x02215F34 LDR X8, [X9]
	0x02215F38 ADD X10, X8, 0x135
	0x02215F3C LDRH W10, [X10]
	0x02215F40 B 0x2215F48
	0x02215F44 MOV X0, X8
	0x02215F48 LDR W11, [X0 + 0xFC]
	0x02215F4C ADD X12, X31, 0x0
	0x02215F50 ADD W11, W11, 0x10
	0x02215F54 ADD X11, X11, 0xF
	0x02215F58 AND X11, X11, 0x1FFFFFFFF
	0x02215F5C SUB X21, X12, X11
	0x02215F60 ADD X31, X21, 0x0
	0x02215F64 TBNZ X10, 0x0, 0x2215F78
	0x02215F68 MOV X0, X8
	0x02215F6C BL 0x1C5C684
	0x02215F70 LDR X9, [X20 + 0x38]
	0x02215F74 MOV X8, X0
	0x02215F78 LDP X10, X1, [X9]
	0x02215F7C SUB X9, X29, 0x18
	0x02215F80 SUB X5, X29, 0x10
	0x02215F84 MOV X0, X8
	0x02215F88 LDR W10, [X10 + 0x28]
	0x02215F8C MOV X2, X21
	0x02215F90 MOV X4, X31
	0x02215F94 CMP W10, 0x0
	0x02215F98 CSEL X3, X19, X9, LT
	0x02215F9C BL 0x1C17728
	0x02215FA0 ADRP X8, 0x1F06000
	0x02215FA4 LDR X8, [X8 + 0x850]
	0x02215FA8 LDUR X19, [X29 - 0x10]
	0x02215FAC LDR X0, [X8]
	0x02215FB0 LDR W8, [X0 + 0xE0]
	0x02215FB4 CBNZ W8, 0x2215FBC
	0x02215FB8 BL 0x1C16DFC
	0x02215FBC MOV X0, X19
	0x02215FC0 MOV X1, X31
	0x02215FC4 BL 0x32C13AC
	0x02215FC8 LDR X8, [X22 + 0x28]
	0x02215FCC LDUR X9, [X29 - 0x8]
	0x02215FD0 CMP X8, X9
	0x02215FD4 B.NE 0x2215FEC
	0x02215FD8 ADD X31, X29, 0x0
	0x02215FDC LDP X20, X19, [X31 + 0x20]
	0x02215FE0 LDP X22, X21, [X31 + 0x10]
	0x02215FE4 LDP X29, X30, [X31], #0x30
	0x02215FE8 RET
	0x02215FEC BL 0x3EB1B20
	0x02215FF0 STP X29, X30, [X31 - 0x40]!
	0x02215FF4 STP X24, X23, [X31 + 0x10]
	0x02215FF8 STP X22, X21, [X31 + 0x20]
	0x02215FFC STP X20, X19, [X31 + 0x30]
	0x02216000 ADD X29, X31, 0x0
	0x02216004 SUB X31, X31, 0x10
	0x02216008 MRS X23, 0xC000
	0x0221600C LDR X8, [X23 + 0x28]
	0x02216010 MOV W19, W2
	0x02216014 MOV X21, X0
	0x02216018 MOV X20, X1
	0x0221601C STUR X8, [X29 - 0x8]
	0x02216020 STUR X0, [X29 - 0x10]
	0x02216024 LDR X24, [X3 + 0x38]
	0x02216028 CBNZ X24, 0x2216050
	0x0221602C ADRP X0, 0x1F05000
	0x02216030 LDR X0, [X0 + 0x850]
	0x02216034 MOV X22, X3
	0x02216038 BL 0x1C16CF4
	0x0221603C LDR X24, [X22 + 0x38]
	0x02216040 CBNZ X24, 0x2216050
	0x02216044 MOV X0, X22
	0x02216048 BL 0x1C5C6E0
	0x0221604C LDR X24, [X22 + 0x38]
	0x02216050 LDR X8, [X24]
	0x02216054 ADD X9, X31, 0x0
	0x02216058 LDR W2, [X8 + 0xFC]
	0x0221605C ADD X10, X2, 0xF
	0x02216060 AND X10, X10, 0x1FFFFFFFF
	0x02216064 SUB X22, X9, X10
	0x02216068 ADD X31, X22, 0x0
	0x0221606C LDR W8, [X8 + 0x28]
	0x02216070 MOV X0, X22
	0x02216074 CMP W8, 0x0
	0x02216078 SUB X8, X29, 0x10
	0x0221607C CSEL X1, X21, X8, LT
	0x02216080 BL 0x3EB1AC0
	0x02216084 LDR X0, [X24]
	0x02216088 MOV X1, X22
	0x0221608C BL 0x1C16E04
	0x02216090 ADRP X8, 0x1F05000
	0x02216094 LDR X8, [X8 + 0x850]
	0x02216098 MOV X21, X0
	0x0221609C LDR X8, [X8]
	0x022160A0 LDR W9, [X8 + 0xE0]
	0x022160A4 CBNZ W9, 0x22160B0
	0x022160A8 MOV X0, X8
	0x022160AC BL 0x1C16DFC
	0x022160B0 AND W2, W19, 0x1
	0x022160B4 MOV X0, X21
	0x022160B8 MOV X1, X20
	0x022160BC MOV X3, X31
	0x022160C0 BL 0x32C186C
	0x022160C4 LDR X8, [X23 + 0x28]
	0x022160C8 LDUR X9, [X29 - 0x8]
	0x022160CC CMP X8, X9
	0x022160D0 B.NE 0x22160EC
	0x022160D4 ADD X31, X29, 0x0
	0x022160D8 LDP X20, X19, [X31 + 0x30]
	0x022160DC LDP X22, X21, [X31 + 0x20]
	0x022160E0 LDP X24, X23, [X31 + 0x10]
	0x022160E4 LDP X29, X30, [X31], #0x40
	0x022160E8 RET
	0x022160EC BL 0x3EB1B20
	0x022160F0 STR X30, [X31 - 0x30]!
	0x022160F4 STP X22, X21, [X31 + 0x10]
	0x022160F8 STP X20, X19, [X31 + 0x20]
	0x022160FC ADRP X21, 0x21C3000
	0x02216100 ADRP X22, 0x1F05000
	0x02216104 LDRB W8, [X21 + 0x878]
	0x02216108 LDR X22, [X22 + 0x850]
	0x0221610C MOV W19, W1
	0x02216110 MOV X20, X0
	0x02216114 TBNZ X8, 0x0, 0x221612C
	0x02216118 ADRP X0, 0x1F05000
	0x0221611C LDR X0, [X0 + 0x850]
	0x02216120 BL 0x1C16CF4
	0x02216124 MOVZ W8, 0x1
	0x02216128 STRB W8, [X21 + 0x878]
	0x0221612C LDR X0, [X22]
	0x02216130 LDR W8, [X0 + 0xE0]
	0x02216134 CBNZ W8, 0x221613C
	0x02216138 BL 0x1C16DFC
	0x0221613C MOV X0, X20
	0x02216140 MOV W1, W19
	0x02216144 LDP X20, X19, [X31 + 0x20]
	0x02216148 LDP X22, X21, [X31 + 0x10]
	0x0221614C MOV X2, X31
	0x02216150 LDR X30, [X31], #0x30
	0x02216154 B 0x32C1874
	0x02216158 STR X30, [X31 - 0x30]!
	0x0221615C STP X22, X21, [X31 + 0x10]
	0x02216160 STP X20, X19, [X31 + 0x20]
	0x02216164 ADRP X21, 0x21C3000
	0x02216168 ADRP X22, 0x1F05000
	0x0221616C LDRB W8, [X21 + 0x879]
	0x02216170 LDR X22, [X22 + 0x850]
	0x02216174 MOV W19, W1
	0x02216178 MOV X20, X0
	0x0221617C TBNZ X8, 0x0, 0x2216194
	0x02216180 ADRP X0, 0x1F05000
	0x02216184 LDR X0, [X0 + 0x850]
	0x02216188 BL 0x1C16CF4
	0x0221618C MOVZ W8, 0x1
	0x02216190 STRB W8, [X21 + 0x879]
	0x02216194 LDR X0, [X22]
	0x02216198 LDR W8, [X0 + 0xE0]
	0x0221619C CBNZ W8, 0x22161A4
	0x022161A0 BL 0x1C16DFC
	0x022161A4 MOV X0, X20
	0x022161A8 MOV W1, W19
	0x022161AC LDP X20, X19, [X31 + 0x20]
	0x022161B0 LDP X22, X21, [X31 + 0x10]
	0x022161B4 MOV X2, X31
	0x022161B8 LDR X30, [X31], #0x30
	0x022161BC B 0x32C1874
	0x022161C0 SUB X31, X31, 0x30
	0x022161C4 STP X30, X21, [X31 + 0x10]
	0x022161C8 STP X20, X19, [X31 + 0x20]
	0x022161CC MOV W21, W0

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Add X29, X31, 0
	014 Subtract X31, X31, 64
	015 Move [X29-56], X3
	016 Move [X29-48], X4
	017 Move [X29-64], X2
	018 NotImplemented "Instruction MRS not yet implemented."
	019 Move [X29-32], X8
	020 Move [X29-24], X5
	021 Move X8, [X8+40]
	022 Move X20, X6
	023 Move X19, X1
	024 Move X21, X0
	025 Move [X29-8], X8
	026 Move X28, [X6+56]
	027 Compare X28, 0
	028 JumpIfNotEqual {32}
	029 Move X0, X20
	030 Call 0x1C5D6E0
	031 Move X28, [X20+56]
	032 Move X8, [X28]
	033 Move X9, [X28+8]
	034 Move X10, [X28+32]
	035 Move X11, [X28+64]
	036 Move W25, [X9+252]
	037 Move W24, [X10+252]
	038 Move W10, [X11+252]
	039 Move W2, [X8+252]
	040 Add X9, X25, 15
	041 Add X8, X31, 0
	042 And X9, X9, 0x1FFFFFFFF
	043 Subtract X26, X8, X9
	044 Move [X29-40], X10
	045 Add X31, X26, 0
	046 Add X9, X24, 15
	047 Add X8, X31, 0
	048 And X9, X9, 0x1FFFFFFFF
	049 Subtract X27, X8, X9
	050 Add X31, X27, 0
	051 Add X9, X10, 15
	052 Add X8, X31, 0
	053 And X9, X9, 0x1FFFFFFFF
	054 Subtract X22, X8, X9
	055 Add X31, X22, 0
	056 Add X9, X2, 15
	057 Add X8, X31, 0
	058 And X9, X9, 0x1FFFFFFFF
	059 Subtract X23, X8, X9
	060 Add X31, X23, 0
	061 Move X0, X23
	062 Move W1, W31
	063 Call 0x3EB2B10
	064 Move X8, [X28]
	065 Move W1, 8
	066 Move X8, [X8+128]
	067 Add X28, X8, 96
	068 Move X0, X28
	069 Call 0x1C17D14
	070 Move X0, X23
	071 Move X1, X28
	072 Call 0x1C17D18
	073 Move [X0], X21
	074 Move X8, [X20+56]
	075 Move W1, 16
	076 Move X8, [X8]
	077 Move X8, [X8+128]
	078 Add X21, X8, 160
	079 Move X0, X21
	080 Call 0x1C17D14
	081 Move X0, X23
	082 Move X1, X21
	083 Call 0x1C17D18
	084 NotImplemented "Instruction LDUR not yet implemented."
	085 Move W1, 8
	086 Move [X0], X19
	087 Move [X0+8], X8
	088 Move X8, [X20+56]
	089 Move X8, [X8]
	090 Move X8, [X8+128]
	091 Add X19, X8, 64
	092 Move X0, X19
	093 Call 0x1C17D14
	094 Move X0, X23
	095 Move X1, X19
	096 Call 0x1C17D18
	097 Move X8, [X29-56]
	098 Move X1, [X29-48]
	099 Move X2, X25
	100 Move [X0], X8
	101 Move X0, X26
	102 Call 0x3EB2AC0
	103 Move X8, [X20+56]
	104 Move X0, X23
	105 Move X2, X26
	106 Move W3, W25
	107 Move X8, [X8]
	108 Move X8, [X8+128]
	109 Add X1, X8, 128
	110 Call 0x1C17D1C
	111 Move X8, [X20+56]
	112 Subtract X3, X29, 16
	113 Move X2, X31
	114 Move X4, X27
	115 Move X1, [X8+16]
	116 Move X0, [X1]
	117 Move [X29-16], X27
	118 Move X8, [X1+16]
	119 NotImplemented "Instruction BLR not yet implemented."
	120 Move X8, [X20+56]
	121 Move X0, X23
	122 Move X2, X27
	123 Move W3, W24
	124 Move X8, [X8]
	125 Move X8, [X8+128]
	126 Add X1, X8, 32
	127 Call 0x1C17D1C
	128 Move X8, [X20+56]
	129 Move W1, 4
	130 Move X8, [X8]
	131 Move X19, [X8+128]
	132 Move X0, X19
	133 Call 0x1C17D14
	134 Move X0, X23
	135 Move X1, X19
	136 Call 0x1C17D18
	137 Move TEMP, 0
	138 Not TEMP
	139 Move W8, TEMP
	140 Move [X0], W8
	141 Move X8, [X20+56]
	142 Move X0, X23
	143 Move X9, [X8]
	144 Move X8, [X8+40]
	145 Move X9, [X9+128]
	146 Move X19, [X8]
	147 Add X1, X9, 32
	148 Call 0x1C17D18
	149 Move X8, [X20+56]
	150 Move X1, X23
	151 Move X2, [X8+40]
	152 NotImplemented "Instruction BLR not yet implemented."
	153 Move X8, [X20+56]
	154 Move X0, X23
	155 Move X9, [X8]
	156 Move X19, [X8+56]
	157 Move X8, [X9+128]
	158 Move X20, [X19]
	159 Add X1, X8, 32
	160 Call 0x1C17D18
	161 Move [X29-16], X22
	162 Move X8, [X19+16]
	163 Move X2, X0
	164 Subtract X3, X29, 16
	165 Move X0, X20
	166 Move X1, X19
	167 Move X4, X22
	168 NotImplemented "Instruction BLR not yet implemented."
	169 NotImplemented "Instruction LDUR not yet implemented."
	170 NotImplemented "Instruction LDUR not yet implemented."
	171 Move X1, X22
	172 Call 0x3EB2AC0
	173 NotImplemented "Instruction LDUR not yet implemented."
	174 Move X8, [X8+40]
	175 NotImplemented "Instruction LDUR not yet implemented."
	176 NotImplemented "Instruction CMP not yet implemented."
	177 Add X31, X29, 0
	178 Move X20, [X31+80]
	179 Move X19, [X31+88]
	180 Move X22, [X31+64]
	181 Move X21, [X31+72]
	182 Move X24, [X31+48]
	183 Move X23, [X31+56]
	184 Move X26, [X31+32]
	185 Move X25, [X31+40]
	186 Move X28, [X31+16]
	187 Move X27, [X31+24]
	188 Move X29, [X31+96]
	189 Move X30, [X31+104]
	190 Return X0
	191 Call 0x3EB2B20

Method: System.Threading.Tasks.Task HandleReceivedCloseAsync(System.Net.WebSockets.ManagedWebSocket/MessageHeader header, System.Threading.CancellationToken cancellationToken)

Disassembly:
	0x036D3984 LDR X24, [X24 + 0x7B8]
	0x036D3988 LDR X21, [X21 + 0xC8]
	0x036D398C BL 0x1C16D6C
	0x036D3990 LDR X1, [X19]
	0x036D3994 MOV X2, X31
	0x036D3998 MOV X19, X0
	0x036D399C BL 0x32C5BD8
	0x036D39A0 LDR X8, [X20]
	0x036D39A4 LDR X8, [X8 + 0xB8]
	0x036D39A8 STR X19, [X8 + 0x28]
	0x036D39AC LDR X0, [X23]
	0x036D39B0 BL 0x1C16F10
	0x036D39B4 MOV X1, X31
	0x036D39B8 MOV X19, X0
	0x036D39BC BL 0x33BDD8C
	0x036D39C0 MOVZ W8, 0x1
	0x036D39C4 STR W31, [X19 + 0x10]
	0x036D39C8 STR W22, [X19 + 0x18]
	0x036D39CC STUR X31, [X19 + 0x1C]
	0x036D39D0 STRB W8, [X19 + 0x14]
	0x036D39D4 STR X31, [X19 + 0x28]
	0x036D39D8 LDR X0, [X24]
	0x036D39DC LDR W8, [X0 + 0xE0]
	0x036D39E0 CBNZ W8, 0x36D39E8
	0x036D39E4 BL 0x1C16DFC
	0x036D39E8 LDR X1, [X21]
	0x036D39EC MOV X0, X19
	0x036D39F0 BL 0x229A308
	0x036D39F4 LDR X8, [X20]
	0x036D39F8 LDP X20, X19, [X31 + 0x30]
	0x036D39FC LDP X22, X21, [X31 + 0x20]
	0x036D3A00 LDP X24, X23, [X31 + 0x10]
	0x036D3A04 LDR X8, [X8 + 0xB8]
	0x036D3A08 STR X0, [X8 + 0x30]
	0x036D3A0C LDR X30, [X31], #0x40
	0x036D3A10 RET
	0x036D3A14 BL 0x1C16F28
	0x036D3A18 BL 0x1C16F20
	0x036D3A1C AND W3, W3, 0x1
	0x036D3A20 MOV X4, X31
	0x036D3A24 MOV X5, X31
	0x036D3A28 B 0x36D3AB4
	0x036D3A2C STP X30, X25, [X31 - 0x40]!
	0x036D3A30 STP X24, X23, [X31 + 0x10]
	0x036D3A34 STP X22, X21, [X31 + 0x20]
	0x036D3A38 STP X20, X19, [X31 + 0x30]
	0x036D3A3C ADRP X24, 0xD0D000
	0x036D3A40 ADRP X25, 0xA5E000
	0x036D3A44 LDRB W8, [X24 + 0xA9B]
	0x036D3A48 LDR X25, [X25 + 0x9B0]
	0x036D3A4C MOV X19, X5
	0x036D3A50 MOV X20, X4
	0x036D3A54 MOV W23, W3
	0x036D3A58 MOV W21, W2
	0x036D3A5C MOV W22, W1
	0x036D3A60 TBNZ X8, 0x0, 0x36D3A78
	0x036D3A64 ADRP X0, 0xA5E000
	0x036D3A68 LDR X0, [X0 + 0x9B0]
	0x036D3A6C BL 0x1C16CF4

ISIL:
	001 Subtract X31, X31, 192
	002 Move [X31+144], X30
	003 Move [X31+152], X23
	004 Move [X31+160], X22
	005 Move [X31+168], X21
	006 Move [X31+176], X20
	007 Move [X31+184], X19
	008 Move X23, 0xD0E000
	009 Move X22, 0xA24000
	010 Move W8, [X23+2698]
	011 Move X22, [X22+640]
	012 Move X19, X2
	013 Move X20, X1
	014 Move X21, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0xA6E000
	020 Move X0, [X0+120]
	021 Call 0x1C17CF4
	022 Move X0, 0xA24000
	023 Move X0, [X0+640]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X23+2698], W8
	027 NotImplemented "Instruction MOVI not yet implemented."
	028 Move [X31+128], X31
	029 Move [X31+96], V0
	030 Move [X31+104], V0
	031 Move [X31+64], V0
	032 Move [X31+72], V0
	033 Move [X31+32], V0
	034 Move [X31+40], V0
	035 Move [X31+64], X21
	036 Move V0, [X20]
	037 Move X8, [X20+16]
	038 Move X0, [X22]
	039 Move [X31+72], V0
	040 Move [X31+88], X8
	041 Move [X31+96], X19
	042 Move X19, 0xA6E000
	043 Move W8, [X0+224]
	044 Move X19, [X19+120]
	045 Compare W8, 0
	046 JumpIfNotEqual {48}
	047 Call 0x1C17DFC
	048 Add X8, X31, 8
	049 Move X0, X31
	050 Call AsyncTaskMethodBuilder.Create
	051 NotImplemented "Instruction LDUR not yet implemented."
	052 Move X9, [X31+24]
	053 Move X2, [X19]
	054 Add X8, X31, 32
	055 Or X19, X8, 15
	056 Move TEMP, 0
	057 Not TEMP
	058 Move W10, TEMP
	059 Add X1, X31, 32
	060 Move X0, X19
	061 Move [X31+40], V0
	062 Move [X31+56], X9
	063 Move [X31+32], W10
	064 Call AsyncTaskMethodBuilder.Start, X0, X1
	065 Move X0, X19
	066 Move X1, X31
	067 Call AsyncTaskMethodBuilder.get_Task, X0
	068 Move X20, [X31+176]
	069 Move X19, [X31+184]
	070 Move X22, [X31+160]
	071 Move X21, [X31+168]
	072 Move X30, [X31+144]
	073 Move X23, [X31+152]
	074 Add X31, X31, 192
	075 Return X0

Method: System.Threading.Tasks.Task WaitForServerToCloseConnectionAsync(System.Threading.CancellationToken cancellationToken)

Disassembly:
	0x036D3A70 MOVZ W8, 0x1
	0x036D3A74 STRB W8, [X24 + 0xA9B]
	0x036D3A78 LDR X0, [X25]
	0x036D3A7C BL 0x1C16F10
	0x036D3A80 AND W3, W23, 0x1
	0x036D3A84 MOV W1, W22
	0x036D3A88 MOV W2, W21
	0x036D3A8C MOV X4, X20
	0x036D3A90 MOV X5, X19
	0x036D3A94 MOV X24, X0
	0x036D3A98 BL 0x36D3AB4
	0x036D3A9C MOV X0, X24
	0x036D3AA0 LDP X20, X19, [X31 + 0x30]
	0x036D3AA4 LDP X22, X21, [X31 + 0x20]
	0x036D3AA8 LDP X24, X23, [X31 + 0x10]
	0x036D3AAC LDP X30, X25, [X31], #0x40
	0x036D3AB0 RET
	0x036D3AB4 STR X30, [X31 - 0x40]!
	0x036D3AB8 STP X24, X23, [X31 + 0x10]
	0x036D3ABC STP X22, X21, [X31 + 0x20]
	0x036D3AC0 STP X20, X19, [X31 + 0x30]
	0x036D3AC4 MOV W24, W1
	0x036D3AC8 MOV X1, X31
	0x036D3ACC MOV X19, X5
	0x036D3AD0 MOV X20, X4
	0x036D3AD4 MOV W23, W3
	0x036D3AD8 MOV W22, W2
	0x036D3ADC MOV X21, X0
	0x036D3AE0 BL 0x33BDD8C
	0x036D3AE4 TBNZ X24, 0x1F, 0x36D3B14
	0x036D3AE8 AND W8, W23, 0x1
	0x036D3AEC STR W24, [X21 + 0x10]
	0x036D3AF0 STR W22, [X21 + 0x18]
	0x036D3AF4 STUR X20, [X21 + 0x1C]
	0x036D3AF8 STRB W8, [X21 + 0x14]
	0x036D3AFC STR X19, [X21 + 0x28]
	0x036D3B00 LDP X20, X19, [X31 + 0x30]
	0x036D3B04 LDP X22, X21, [X31 + 0x20]
	0x036D3B08 LDP X24, X23, [X31 + 0x10]
	0x036D3B0C LDR X30, [X31], #0x40
	0x036D3B10 RET
	0x036D3B14 ADRP X0, 0xA28000
	0x036D3B18 LDR X0, [X0 + 0x760]
	0x036D3B1C BL 0x1C16D08
	0x036D3B20 BL 0x1C16F10
	0x036D3B24 MOV X19, X0
	0x036D3B28 ADRP X0, 0xA48000
	0x036D3B2C LDR X0, [X0 + 0x648]
	0x036D3B30 BL 0x1C16D08
	0x036D3B34 MOV X1, X0
	0x036D3B38 MOV X0, X19
	0x036D3B3C MOV X2, X31
	0x036D3B40 BL 0x3316014

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+128], X30
	003 Move [X31+144], X22
	004 Move [X31+152], X21
	005 Move [X31+160], X20
	006 Move [X31+168], X19
	007 Move X22, 0xD0E000
	008 Move X21, 0xA24000
	009 Move W8, [X22+2699]
	010 Move X21, [X21+640]
	011 Move X19, X1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0xA6E000
	018 Move X0, [X0+128]
	019 Call 0x1C17CF4
	020 Move X0, 0xA24000
	021 Move X0, [X0+640]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X22+2699], W8
	025 Move X0, [X21]
	026 NotImplemented "Instruction MOVI not yet implemented."
	027 Move [X31+96], V0
	028 Move [X31+104], V0
	029 Move [X31+64], V0
	030 Move [X31+72], V0
	031 Move [X31+32], V0
	032 Move [X31+40], V0
	033 Move [X31+64], X20
	034 Move [X31+72], X19
	035 Move X19, 0xA6E000
	036 Move W8, [X0+224]
	037 Move X19, [X19+128]
	038 Compare W8, 0
	039 JumpIfNotEqual {41}
	040 Call 0x1C17DFC
	041 Add X8, X31, 8
	042 Move X0, X31
	043 Call AsyncTaskMethodBuilder.Create
	044 NotImplemented "Instruction LDUR not yet implemented."
	045 Move X9, [X31+24]
	046 Move X2, [X19]
	047 Add X8, X31, 32
	048 Or X19, X8, 15
	049 Move TEMP, 0
	050 Not TEMP
	051 Move W10, TEMP
	052 Add X1, X31, 32
	053 Move X0, X19
	054 Move [X31+40], V0
	055 Move [X31+56], X9
	056 Move [X31+32], W10
	057 Call AsyncTaskMethodBuilder.Start, X0, X1
	058 Move X0, X19
	059 Move X1, X31
	060 Call AsyncTaskMethodBuilder.get_Task, X0
	061 Move X20, [X31+160]
	062 Move X19, [X31+168]
	063 Move X22, [X31+144]
	064 Move X21, [X31+152]
	065 Move X30, [X31+128]
	066 Add X31, X31, 176
	067 Return X0

Method: System.Threading.Tasks.Task HandleReceivedPingPongAsync(System.Net.WebSockets.ManagedWebSocket/MessageHeader header, System.Threading.CancellationToken cancellationToken)

Disassembly:
	0x036D3B44 ADRP X0, 0xA6D000
	0x036D3B48 LDR X0, [X0 + 0xD8]
	0x036D3B4C BL 0x1C16D08
	0x036D3B50 MOV X1, X0
	0x036D3B54 MOV X0, X19
	0x036D3B58 BL 0x1C16DEC
	0x036D3B5C STR X30, [X31 - 0x20]!
	0x036D3B60 STP X20, X19, [X31 + 0x10]
	0x036D3B64 ADRP X19, 0xD0D000
	0x036D3B68 ADRP X20, 0xA6C000
	0x036D3B6C LDRB W8, [X19 + 0xA9C]
	0x036D3B70 LDR X20, [X20 + 0xF68]
	0x036D3B74 TBNZ X8, 0x0, 0x36D3B8C
	0x036D3B78 ADRP X0, 0xA6C000
	0x036D3B7C LDR X0, [X0 + 0xF68]
	0x036D3B80 BL 0x1C16CF4
	0x036D3B84 MOVZ W8, 0x1
	0x036D3B88 STRB W8, [X19 + 0xA9C]
	0x036D3B8C LDR X0, [X20]
	0x036D3B90 BL 0x1C16F10
	0x036D3B94 MOV X1, X31
	0x036D3B98 MOV X19, X0
	0x036D3B9C BL 0x33BDD8C
	0x036D3BA0 LDR X8, [X20]
	0x036D3BA4 LDR X8, [X8 + 0xB8]
	0x036D3BA8 STR X19, [X8]
	0x036D3BAC LDP X20, X19, [X31 + 0x10]
	0x036D3BB0 LDR X30, [X31], #0x20
	0x036D3BB4 RET
	0x036D3BB8 MOV X1, X31
	0x036D3BBC B 0x33BDD8C
	0x036D3BC0 SUB X31, X31, 0x30
	0x036D3BC4 STP X30, X21, [X31 + 0x10]
	0x036D3BC8 STP X20, X19, [X31 + 0x20]
	0x036D3BCC ADRP X19, 0xD0D000
	0x036D3BD0 LDRB W8, [X19 + 0xA9D]
	0x036D3BD4 MOV X21, X1
	0x036D3BD8 TBNZ X8, 0x0, 0x36D3BF0
	0x036D3BDC ADRP X0, 0xA49000
	0x036D3BE0 LDR X0, [X0 + 0xB60]
	0x036D3BE4 BL 0x1C16CF4
	0x036D3BE8 MOVZ W8, 0x1
	0x036D3BEC STRB W8, [X19 + 0xA9D]
	0x036D3BF0 CBZ X21, 0x36D3C78
	0x036D3BF4 ADRP X8, 0xA49000
	0x036D3BF8 LDR X8, [X8 + 0xB60]
	0x036D3BFC LDR X1, [X8]
	0x036D3C00 LDR X8, [X21]
	0x036D3C04 CMP X8, X1
	0x036D3C08 B.NE 0x36D3C7C
	0x036D3C0C LDR X19, [X21 + 0x30]
	0x036D3C10 STRB W31, [X31 + 0xC]
	0x036D3C14 ADD X1, X31, 0xC
	0x036D3C18 MOV X0, X19
	0x036D3C1C MOV X2, X31
	0x036D3C20 BL 0x33DE64C
	0x036D3C24 LDR W8, [X21 + 0x58]
	0x036D3C28 SUB W9, W8, 0x5
	0x036D3C2C CMP W9, 0x2

ISIL:
	001 Subtract X31, X31, 192
	002 Move [X31+144], X30
	003 Move [X31+152], X23
	004 Move [X31+160], X22
	005 Move [X31+168], X21
	006 Move [X31+176], X20
	007 Move [X31+184], X19
	008 Move X23, 0xD0E000
	009 Move X22, 0xA24000
	010 Move W8, [X23+2700]
	011 Move X22, [X22+640]
	012 Move X19, X2
	013 Move X20, X1
	014 Move X21, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0xA6E000
	020 Move X0, [X0+136]
	021 Call 0x1C17CF4
	022 Move X0, 0xA24000
	023 Move X0, [X0+640]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X23+2700], W8
	027 NotImplemented "Instruction MOVI not yet implemented."
	028 Move [X31+128], X31
	029 Move [X31+96], V0
	030 Move [X31+104], V0
	031 Move [X31+64], V0
	032 Move [X31+72], V0
	033 Move [X31+32], V0
	034 Move [X31+40], V0
	035 Move V0, [X20]
	036 Move X8, [X20+16]
	037 Move X0, [X22]
	038 Move [X31+96], X19
	039 Move [X31+4], V0
	040 Move [X31+80], X8
	041 Move [X31+88], X21
	042 Move X19, 0xA6E000
	043 Move W8, [X0+224]
	044 Move X19, [X19+136]
	045 Compare W8, 0
	046 JumpIfNotEqual {48}
	047 Call 0x1C17DFC
	048 Add X8, X31, 8
	049 Move X0, X31
	050 Call AsyncTaskMethodBuilder.Create
	051 NotImplemented "Instruction LDUR not yet implemented."
	052 Move X9, [X31+24]
	053 Move X2, [X19]
	054 Add X8, X31, 32
	055 Or X19, X8, 15
	056 Move TEMP, 0
	057 Not TEMP
	058 Move W10, TEMP
	059 Add X1, X31, 32
	060 Move X0, X19
	061 Move [X31+40], V0
	062 Move [X31+56], X9
	063 Move [X31+32], W10
	064 Call AsyncTaskMethodBuilder.Start, X0, X1
	065 Move X0, X19
	066 Move X1, X31
	067 Call AsyncTaskMethodBuilder.get_Task, X0
	068 Move X20, [X31+176]
	069 Move X19, [X31+184]
	070 Move X22, [X31+160]
	071 Move X21, [X31+168]
	072 Move X30, [X31+144]
	073 Move X23, [X31+152]
	074 Add X31, X31, 192
	075 Return X0

Method: System.Boolean IsValidCloseStatus(System.Net.WebSockets.WebSocketCloseStatus closeStatus)

Disassembly:
	0x036D3C30 B.CS 0x36D3C3C
	0x036D3C34 MOV X20, X31
	0x036D3C38 B 0x36D3C50
	0x036D3C3C CMP W8, 0x2
	0x036D3C40 MOVZ W8, 0x5
	0x036D3C44 CINC W8, W8, CS
	0x036D3C48 MOV X20, X31
	0x036D3C4C STR W8, [X21 + 0x58]
	0x036D3C50 LDRB W8, [X31 + 0xC]
	0x036D3C54 CBZ W8, 0x36D3C64
	0x036D3C58 MOV X0, X19
	0x036D3C5C MOV X1, X31
	0x036D3C60 BL 0x33E14E4
	0x036D3C64 CBNZ X20, 0x36D3C84

ISIL:
	001 Subtract W8, W0, 1000
	002 NotImplemented "Instruction CMP not yet implemented."
	003 NotImplemented "Instruction CMP not yet implemented."
	004 And W9, W0, 0xFFFFFFFC
	005 NotImplemented "Instruction CMP not yet implemented."
	006 Subtract W8, W0, 1007
	007 NotImplemented "Instruction CMP not yet implemented."
	008 NotImplemented "Instruction CMP not yet implemented."
	009 NotImplemented "Instruction CSET not yet implemented."
	010 Return X0

Method: System.Threading.Tasks.Task CloseWithReceiveErrorAndThrowAsync(System.Net.WebSockets.WebSocketCloseStatus closeStatus, System.Net.WebSockets.WebSocketError error, System.Exception innerException = null)

Disassembly:
	0x036D3C68 LDP X20, X19, [X31 + 0x20]
	0x036D3C6C LDP X30, X21, [X31 + 0x10]
	0x036D3C70 ADD X31, X31, 0x30
	0x036D3C74 RET
	0x036D3C78 BL 0x1C16F20
	0x036D3C7C MOV X0, X21
	0x036D3C80 BL 0x1C171E0
	0x036D3C84 MOV X0, X20
	0x036D3C88 BL 0x1C16F18
	0x036D3C8C CMP W1, 0x1
	0x036D3C90 MOV X21, X0
	0x036D3C94 B.NE 0x36D3CAC
	0x036D3C98 MOV X0, X21
	0x036D3C9C BL 0x3EB1AD0
	0x036D3CA0 LDR X20, [X0]
	0x036D3CA4 BL 0x3EB1AE0
	0x036D3CA8 B 0x36D3C50
	0x036D3CAC MOV X20, X31
	0x036D3CB0 B 0x36D3CB8
	0x036D3CB4 MOV X21, X0
	0x036D3CB8 LDRB W8, [X31 + 0xC]
	0x036D3CBC CBZ W8, 0x36D3CCC
	0x036D3CC0 MOV X0, X19
	0x036D3CC4 MOV X1, X31
	0x036D3CC8 BL 0x33E14E4
	0x036D3CCC CBNZ X20, 0x36D3CD8
	0x036D3CD0 MOV X0, X21
	0x036D3CD4 BL 0x1D2C690
	0x036D3CD8 MOV X0, X20
	0x036D3CDC BL 0x1C16F18
	0x036D3CE0 BL 0x1990590
	0x036D3CE4 STR X30, [X31 - 0x20]!
	0x036D3CE8 STP X20, X19, [X31 + 0x10]
	0x036D3CEC ADRP X20, 0xD0D000
	0x036D3CF0 LDRB W8, [X20 + 0xA9E]
	0x036D3CF4 MOV X19, X1
	0x036D3CF8 TBNZ X8, 0x0, 0x36D3D10
	0x036D3CFC ADRP X0, 0xA49000
	0x036D3D00 LDR X0, [X0 + 0xB60]
	0x036D3D04 BL 0x1C16CF4
	0x036D3D08 MOVZ W8, 0x1
	0x036D3D0C STRB W8, [X20 + 0xA9E]
	0x036D3D10 CBZ X19, 0x36D3D3C
	0x036D3D14 ADRP X8, 0xA49000
	0x036D3D18 LDR X8, [X8 + 0xB60]
	0x036D3D1C MOV X0, X19
	0x036D3D20 LDR X1, [X8]
	0x036D3D24 LDR X8, [X19]
	0x036D3D28 CMP X8, X1
	0x036D3D2C B.NE 0x36D3D40
	0x036D3D30 LDP X20, X19, [X31 + 0x10]
	0x036D3D34 LDR X30, [X31], #0x20
	0x036D3D38 B 0x36D2488
	0x036D3D3C BL 0x1C16F20
	0x036D3D40 BL 0x1C171E0
	0x036D3D44 STR X30, [X31 - 0x20]!
	0x036D3D48 STP X20, X19, [X31 + 0x10]
	0x036D3D4C ADRP X20, 0xD0D000
	0x036D3D50 LDRB W8, [X20 + 0xA9F]

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+112], X30
	003 Move [X31+128], X24
	004 Move [X31+136], X23
	005 Move [X31+144], X22
	006 Move [X31+152], X21
	007 Move [X31+160], X20
	008 Move [X31+168], X19
	009 Move X24, 0xD0E000
	010 Move X23, 0xA24000
	011 Move W8, [X24+2701]
	012 Move X23, [X23+640]
	013 Move X19, X3
	014 Move W20, W2
	015 Move W21, W1
	016 Move X22, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {29}
	021 Move X0, 0xA6E000
	022 Move X0, [X0+144]
	023 Call 0x1C17CF4
	024 Move X0, 0xA24000
	025 Move X0, [X0+640]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X24+2701], W8
	029 Move X0, [X23]
	030 NotImplemented "Instruction MOVI not yet implemented."
	031 Move [X31+64], V0
	032 Move [X31+72], V0
	033 Move [X31+32], V0
	034 Move [X31+40], V0
	035 Move [X31+64], X22
	036 Move [X31+72], W21
	037 Move [X31+76], W20
	038 Move [X31+96], X31
	039 Move [X31+80], X19
	040 Move X19, 0xA6E000
	041 Move W8, [X0+224]
	042 Move X19, [X19+144]
	043 Compare W8, 0
	044 JumpIfNotEqual {46}
	045 Call 0x1C17DFC
	046 Add X8, X31, 8
	047 Move X0, X31
	048 Call AsyncTaskMethodBuilder.Create
	049 NotImplemented "Instruction LDUR not yet implemented."
	050 Move X9, [X31+24]
	051 Move X2, [X19]
	052 Add X8, X31, 32
	053 Or X19, X8, 15
	054 Move TEMP, 0
	055 Not TEMP
	056 Move W10, TEMP
	057 Add X1, X31, 32
	058 Move X0, X19
	059 Move [X31+40], V0
	060 Move [X31+56], X9
	061 Move [X31+32], W10
	062 Call AsyncTaskMethodBuilder.Start, X0, X1
	063 Move X0, X19
	064 Move X1, X31
	065 Call AsyncTaskMethodBuilder.get_Task, X0
	066 Move X20, [X31+160]
	067 Move X19, [X31+168]
	068 Move X22, [X31+144]
	069 Move X21, [X31+152]
	070 Move X24, [X31+128]
	071 Move X23, [X31+136]
	072 Move X30, [X31+112]
	073 Add X31, X31, 176
	074 Return X0

Method: System.Boolean TryParseMessageHeaderFromReceiveBuffer(out System.Net.WebSockets.ManagedWebSocket/MessageHeader resultHeader)

Disassembly:
	0x036D3D54 MOV X19, X1
	0x036D3D58 TBNZ X8, 0x0, 0x36D3D70
	0x036D3D5C ADRP X0, 0xA49000
	0x036D3D60 LDR X0, [X0 + 0xB60]
	0x036D3D64 BL 0x1C16CF4
	0x036D3D68 MOVZ W8, 0x1
	0x036D3D6C STRB W8, [X20 + 0xA9F]
	0x036D3D70 CBZ X19, 0x36D3DA0
	0x036D3D74 ADRP X8, 0xA49000
	0x036D3D78 LDR X8, [X8 + 0xB60]
	0x036D3D7C LDR X1, [X8]
	0x036D3D80 LDR X8, [X19]
	0x036D3D84 CMP X8, X1
	0x036D3D88 B.NE 0x36D3DA4
	0x036D3D8C LDP X2, X1, [X1 + 0x1C8]
	0x036D3D90 MOV X0, X19
	0x036D3D94 LDP X20, X19, [X31 + 0x10]
	0x036D3D98 LDR X30, [X31], #0x20
	0x036D3D9C BR X2
	0x036D3DA0 BL 0x1C16F20
	0x036D3DA4 MOV X0, X19
	0x036D3DA8 BL 0x1C171E0
	0x036D3DAC CBZ X1, 0x36D3DBC
	0x036D3DB0 MOV X0, X1
	0x036D3DB4 MOV X1, X31
	0x036D3DB8 B 0x33F04D8
	0x036D3DBC STR X30, [X31 - 0x10]!
	0x036D3DC0 BL 0x1C16F20
	0x036D3DC4 STR X30, [X31 - 0x20]!
	0x036D3DC8 STP X20, X19, [X31 + 0x10]
	0x036D3DCC ADRP X20, 0xD0D000
	0x036D3DD0 LDRB W8, [X20 + 0xAA0]
	0x036D3DD4 MOV X19, X1
	0x036D3DD8 TBNZ X8, 0x0, 0x36D3DF0
	0x036D3DDC ADRP X0, 0xA49000
	0x036D3DE0 LDR X0, [X0 + 0xB60]
	0x036D3DE4 BL 0x1C16CF4
	0x036D3DE8 MOVZ W8, 0x1
	0x036D3DEC STRB W8, [X20 + 0xAA0]
	0x036D3DF0 CBZ X19, 0x36D3E20
	0x036D3DF4 ADRP X8, 0xA49000
	0x036D3DF8 LDR X8, [X8 + 0xB60]
	0x036D3DFC LDR X1, [X8]
	0x036D3E00 LDR X8, [X19]
	0x036D3E04 CMP X8, X1
	0x036D3E08 B.NE 0x36D3E24
	0x036D3E0C LDP X2, X1, [X1 + 0x1C8]
	0x036D3E10 MOV X0, X19
	0x036D3E14 LDP X20, X19, [X31 + 0x10]
	0x036D3E18 LDR X30, [X31], #0x20
	0x036D3E1C BR X2
	0x036D3E20 BL 0x1C16F20
	0x036D3E24 MOV X0, X19
	0x036D3E28 BL 0x1C171E0
	0x036D3E2C SUB X31, X31, 0x60
	0x036D3E30 STR X30, [X31 + 0x10]
	0x036D3E34 STP X26, X25, [X31 + 0x20]
	0x036D3E38 STP X24, X23, [X31 + 0x30]
	0x036D3E3C STP X22, X21, [X31 + 0x40]
	0x036D3E40 STP X20, X19, [X31 + 0x50]
	0x036D3E44 ADRP X20, 0xD0D000
	0x036D3E48 LDRB W8, [X20 + 0xAA1]
	0x036D3E4C MOV X19, X0
	0x036D3E50 TBNZ X8, 0x0, 0x36D3E80
	0x036D3E54 ADRP X0, 0xA6D000
	0x036D3E58 LDR X0, [X0 + 0xE0]
	0x036D3E5C BL 0x1C16CF4
	0x036D3E60 ADRP X0, 0xA23000
	0x036D3E64 LDR X0, [X0 + 0x280]
	0x036D3E68 BL 0x1C16CF4
	0x036D3E6C ADRP X0, 0xA4A000
	0x036D3E70 LDR X0, [X0 + 0xE40]
	0x036D3E74 BL 0x1C16CF4
	0x036D3E78 MOVZ W8, 0x1
	0x036D3E7C STRB W8, [X20 + 0xAA1]
	0x036D3E80 STP X31, X31, [X31]
	0x036D3E84 ADRP X23, 0xA4A000
	0x036D3E88 ADRP X24, 0xA23000
	0x036D3E8C LDR W25, [X19]
	0x036D3E90 LDR X20, [X19 + 0x30]
	0x036D3E94 LDR X23, [X23 + 0xE40]
	0x036D3E98 LDR X24, [X24 + 0x280]
	0x036D3E9C CBZ W25, 0x36D3F9C
	0x036D3EA0 LDR X0, [X23]
	0x036D3EA4 LDR W8, [X0 + 0xE0]
	0x036D3EA8 CBNZ W8, 0x36D3EB0
	0x036D3EAC BL 0x1C16DFC
	0x036D3EB0 ADRP X21, 0xD09000
	0x036D3EB4 LDR X8, [X19 + 0x20]
	0x036D3EB8 LDRH W9, [X19 + 0x28]
	0x036D3EBC LDRB W10, [X21 + 0x924]
	0x036D3EC0 STP X8, X9, [X31]
	0x036D3EC4 CBNZ W10, 0x36D3EDC
	0x036D3EC8 ADRP X0, 0xA4A000
	0x036D3ECC LDR X0, [X0 + 0xE40]
	0x036D3ED0 BL 0x1C16CF4
	0x036D3ED4 MOVZ W8, 0x1
	0x036D3ED8 STRB W8, [X21 + 0x924]
	0x036D3EDC LDR X0, [X23]
	0x036D3EE0 LDR W8, [X0 + 0xE0]
	0x036D3EE4 CBNZ W8, 0x36D3EEC
	0x036D3EE8 BL 0x1C16DFC
	0x036D3EEC ADRP X21, 0xD09000
	0x036D3EF0 LDRB W8, [X21 + 0x4E4]
	0x036D3EF4 CBNZ W8, 0x36D3F18
	0x036D3EF8 ADRP X0, 0xA4F000
	0x036D3EFC LDR X0, [X0 + 0xEA8]
	0x036D3F00 BL 0x1C16CF4
	0x036D3F04 ADRP X0, 0xA21000
	0x036D3F08 LDR X0, [X0 + 0x7B8]
	0x036D3F0C BL 0x1C16CF4
	0x036D3F10 MOVZ W8, 0x1
	0x036D3F14 STRB W8, [X21 + 0x4E4]
	0x036D3F18 LDR X21, [X31]
	0x036D3F1C CBZ X21, 0x36D3FD4
	0x036D3F20 ADRP X9, 0xA21000
	0x036D3F24 LDR X9, [X9 + 0x7B8]
	0x036D3F28 LDR X8, [X21]
	0x036D3F2C LDR X9, [X9]
	0x036D3F30 LDRB W11, [X8 + 0x130]
	0x036D3F34 LDRB W10, [X9 + 0x130]
	0x036D3F38 CMP W11, W10
	0x036D3F3C B.CC 0x36D3F54
	0x036D3F40 LDR X11, [X8 + 0xC8]
	0x036D3F44 ADD X10, X11, X10, 0x3, LSL
	0x036D3F48 LDUR X10, [X10 - 0x8]
	0x036D3F4C CMP X10, X9
	0x036D3F50 B.EQ 0x36D4144
	0x036D3F54 ADRP X10, 0xA4F000
	0x036D3F58 LDRH W22, [X31 + 0x8]
	0x036D3F5C LDR X10, [X10 + 0xEA8]
	0x036D3F60 LDRH W9, [X8 + 0x12E]
	0x036D3F64 LDR X1, [X10]
	0x036D3F68 CBZ X9, 0x36D3F8C
	0x036D3F6C LDR X10, [X8 + 0xB0]
	0x036D3F70 ADD X10, X10, 0x8
	0x036D3F74 LDUR X11, [X10 - 0x8]
	0x036D3F78 CMP X11, X1
	0x036D3F7C B.EQ 0x36D3FB4
	0x036D3F80 SUBS X9, X9, 0x1
	0x036D3F84 ADD X10, X10, 0x10
	0x036D3F88 B.NE 0x36D3F74
	0x036D3F8C MOV X0, X21
	0x036D3F90 MOV W2, W31
	0x036D3F94 BL 0x1C5C788

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X22, 0xD0E000
	011 Move X21, 0xA4C000
	012 Move W8, [X22+2702]
	013 Move X21, [X21+736]
	014 Move X19, X1
	015 Move X20, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {28}
	020 Move X0, 0xA4A000
	021 Move X0, [X0+2912]
	022 Call 0x1C17CF4
	023 Move X0, 0xA4C000
	024 Move X0, [X0+736]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X22+2702], W8
	028 Move X1, [X21]
	029 Add X0, X20, 56
	030 NotImplemented "Instruction STRH not yet implemented."
	031 Move [X31+8], W31
	032 Call 0x2985784
	033 NotImplemented "Instruction LDRSW not yet implemented."
	034 Move X21, X1
	035 NotImplemented "Instruction CMP not yet implemented."
	036 NotImplemented "Instruction INVALID not yet implemented."
	037 Add W10, W9, 1
	038 Move X22, X0
	039 And W8, W24, 112
	040 NotImplemented "Instruction CSET not yet implemented."
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Move W10, [X22]
	043 Move W11, [X20+140]
	044 Add W23, W9, 2
	045 And X25, X10, 127
	046 Subtract W12, W11, 2
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Move [X20+136], W23
	049 Move [X20+140], W12
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Subtract W13, W21, W9
	052 Move X12, X31
	053 Move X25, X31
	054 Subtract W13, W13, 2
	055 Add W14, W9, 2
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Add W15, W14, W12
	058 Move W15, [X22]
	059 Add X12, X12, 1
	060 NotImplemented "Instruction CMP not yet implemented."
	061 NotImplemented "Instruction BFM not yet implemented."
	062 Move X25, X15
	063 Move W12, 10
	064 Move TEMP, 9
	065 Not TEMP
	066 Move W13, TEMP
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Add W12, W9, 3
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Move W13, [X22]
	071 Move W25, [X22]
	072 Move W12, 4
	073 NotImplemented "Instruction BFM not yet implemented."
	074 Move TEMP, 3
	075 Not TEMP
	076 Move W13, TEMP
	077 Add W11, W11, W13
	078 Add W23, W9, W12
	079 Move [X20+136], W23
	080 Move [X20+140], W11
	081 NotImplemented "Instruction SXTB not yet implemented."
	082 Move TEMP, X9
	083 And TEMP, TEMP, -2147483648
	084 Compare TEMP, -2147483648
	085 JumpIfEqual {87}
	086 Move W0, W31
	087 Move X9, 0xA4A000
	088 Move X9, [X9+2912]
	089 And W31, W8, 255
	090 NotImplemented "Instruction CSET not yet implemented."
	091 Move X0, [X9]
	092 Move W9, [X20+24]
	093 Move W8, [X0+224]
	094 NotImplemented "Instruction CMP not yet implemented."
	095 NotImplemented "Instruction CSET not yet implemented."
	096 Or W26, W10, W9
	097 Compare W8, 0
	098 JumpIfNotEqual {100}
	099 Call 0x1C17DFC
	100 Move X0, X22
	101 Move X1, X21
	102 Move W2, W23
	103 Call ManagedWebSocket.CombineMaskBytes, X0, X1
	104 Move X8, -46026752
	105 Move V0, [X20+136]
	106 Move V1, [X8+3936]
	107 Add S0, S0, S1
	108 Move [X20+136], D0
	109 And W8, W24, 15
	110 Subtract W9, W8, 8
	111 NotImplemented "Instruction CMP not yet implemented."
	112 Subtract W9, W8, 1
	113 NotImplemented "Instruction CMP not yet implemented."
	114 Move W8, [X20+113]
	115 NotImplemented "Instruction CMP not yet implemented."
	116 NotImplemented "Instruction CSET not yet implemented."
	117 NotImplemented "Instruction CMP not yet implemented."
	118 NotImplemented "Instruction CSET not yet implemented."
	119 NotImplemented "Instruction CMP not yet implemented."
	120 NotImplemented "Instruction CSET not yet implemented."
	121 Or W8, W9, W8
	122 Or W8, W8, W26
	123 Compare W8, 0
	124 JumpIfNotEqual {129}
	125 Move W8, [X20+113]
	126 NotImplemented "Instruction CMP not yet implemented."
	127 NotImplemented "Instruction CSET not yet implemented."
	128 Or W8, W26, W8
	129 Move W8, 1
	130 Move W9, W24
	131 ShiftRight W9, 7
	132 And W9, W9, 127
	133 And W10, W24, 15
	134 Move [X19], W10
	135 Move [X19+1], W9
	136 NotImplemented "Instruction LDRH not yet implemented."
	137 Move W10, [X31+8]
	138 Move [X19+8], X25
	139 Move [X19+16], W0
	140 Move [X19+20], W31
	141 NotImplemented "Instruction STRH not yet implemented."
	142 Move [X19+2], W10
	143 Move X20, [X31+64]
	144 Move X19, [X31+72]
	145 Move X22, [X31+48]
	146 Move X21, [X31+56]
	147 Move X24, [X31+32]
	148 Move X23, [X31+40]
	149 Move X26, [X31+16]
	150 Move X25, [X31+24]
	151 Xor W8, W8, 1
	152 Move W0, W8
	153 Move X30, [X31+80]
	154 Return X0
	155 Call 0x1C17F28

Method: System.Threading.Tasks.Task CloseAsyncPrivate(System.Net.WebSockets.WebSocketCloseStatus closeStatus, System.String statusDescription, System.Threading.CancellationToken cancellationToken)

Disassembly:
	0x036D241C LDR X0, [X0 + 0x2F8]
	0x036D2420 BL 0x1C16CF4
	0x036D2424 MOVZ W8, 0x1
	0x036D2428 STRB W8, [X26 + 0xA95]
	0x036D242C LDR X1, [X25]
	0x036D2430 MOV X0, X23
	0x036D2434 BL 0x25FB4C0
	0x036D2438 MOV X23, X0
	0x036D243C LDR X0, [X24]
	0x036D2440 MOV X24, X1
	0x036D2444 LDR W8, [X0 + 0xE0]
	0x036D2448 CBNZ W8, 0x36D2450
	0x036D244C BL 0x1C16DFC
	0x036D2450 MOV X0, X23
	0x036D2454 MOV X1, X24
	0x036D2458 MOV W2, W22
	0x036D245C BL 0x36D2FAC
	0x036D2460 MOV W2, W0
	0x036D2464 MOV X0, X21
	0x036D2468 MOV X1, X20
	0x036D246C MOV W3, W19
	0x036D2470 LDP X20, X19, [X31 + 0x40]
	0x036D2474 LDP X22, X21, [X31 + 0x30]
	0x036D2478 LDP X24, X23, [X31 + 0x20]
	0x036D247C LDP X26, X25, [X31 + 0x10]
	0x036D2480 LDR X30, [X31], #0x50
	0x036D2484 B 0x36D32E8
	0x036D2488 SUB X31, X31, 0x40
	0x036D248C STP X30, X23, [X31 + 0x10]
	0x036D2490 STP X22, X21, [X31 + 0x20]
	0x036D2494 STP X20, X19, [X31 + 0x30]
	0x036D2498 ADRP X20, 0xD0E000
	0x036D249C LDRB W8, [X20 + 0xA87]
	0x036D24A0 MOV X19, X0
	0x036D24A4 TBNZ X8, 0x0, 0x36D251C
	0x036D24A8 ADRP X0, 0xA2D000
	0x036D24AC LDR X0, [X0 + 0x710]
	0x036D24B0 BL 0x1C16CF4
	0x036D24B4 ADRP X0, 0xA29000
	0x036D24B8 LDR X0, [X0 + 0x7D8]
	0x036D24BC BL 0x1C16CF4
	0x036D24C0 ADRP X0, 0xA6E000
	0x036D24C4 LDR X0, [X0 + 0x68]
	0x036D24C8 BL 0x1C16CF4
	0x036D24CC ADRP X0, 0xA54000
	0x036D24D0 LDR X0, [X0 + 0xD10]
	0x036D24D4 BL 0x1C16CF4
	0x036D24D8 ADRP X0, 0xA29000
	0x036D24DC LDR X0, [X0 + 0x7E8]
	0x036D24E0 BL 0x1C16CF4
	0x036D24E4 ADRP X0, 0xA6E000
	0x036D24E8 LDR X0, [X0 + 0x70]
	0x036D24EC BL 0x1C16CF4
	0x036D24F0 ADRP X0, 0xA6D000
	0x036D24F4 LDR X0, [X0 + 0xF68]
	0x036D24F8 BL 0x1C16CF4
	0x036D24FC ADRP X0, 0xA49000
	0x036D2500 LDR X0, [X0 + 0x678]
	0x036D2504 BL 0x1C16CF4
	0x036D2508 ADRP X0, 0xA4B000

ISIL:
	001 Subtract X31, X31, 192
	002 Move [X31+128], X30
	003 Move [X31+144], X24
	004 Move [X31+152], X23
	005 Move [X31+160], X22
	006 Move [X31+168], X21
	007 Move [X31+176], X20
	008 Move [X31+184], X19
	009 Move X24, 0xD0F000
	010 Move X23, 0xA25000
	011 Move W8, [X24+2703]
	012 Move X23, [X23+640]
	013 Move X19, X3
	014 Move X20, X2
	015 Move W21, W1
	016 Move X22, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {29}
	021 Move X0, 0xA6F000
	022 Move X0, [X0+72]
	023 Call 0x1C17CF4
	024 Move X0, 0xA25000
	025 Move X0, [X0+640]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X24+2703], W8
	029 Move X0, [X23]
	030 NotImplemented "Instruction MOVI not yet implemented."
	031 Move [X31+112], X31
	032 Move [X31+64], V0
	033 Move [X31+72], V0
	034 Move [X31+6], V0
	035 Move [X31+32], V0
	036 Move [X31+40], V0
	037 Move [X31+64], X22
	038 Move [X31+72], W21
	039 Move [X31+80], X20
	040 Move [X31+88], X19
	041 Move X19, 0xA6F000
	042 Move W8, [X0+224]
	043 Move X19, [X19+72]
	044 Compare W8, 0
	045 JumpIfNotEqual {47}
	046 Call 0x1C17DFC
	047 Add X8, X31, 8
	048 Move X0, X31
	049 Call AsyncTaskMethodBuilder.Create
	050 NotImplemented "Instruction LDUR not yet implemented."
	051 Move X9, [X31+24]
	052 Move X2, [X19]
	053 Add X8, X31, 32
	054 Or X19, X8, 15
	055 Move TEMP, 0
	056 Not TEMP
	057 Move W10, TEMP
	058 Add X1, X31, 32
	059 Move X0, X19
	060 Move [X31+40], V0
	061 Move [X31+56], X9
	062 Move [X31+32], W10
	063 Call AsyncTaskMethodBuilder.Start, X0, X1
	064 Move X0, X19
	065 Move X1, X31
	066 Call AsyncTaskMethodBuilder.get_Task, X0
	067 Move X20, [X31+176]
	068 Move X19, [X31+184]
	069 Move X22, [X31+160]
	070 Move X21, [X31+168]
	071 Move X24, [X31+144]
	072 Move X23, [X31+152]
	073 Move X30, [X31+128]
	074 Add X31, X31, 192
	075 Return X0

Method: System.Threading.Tasks.Task SendCloseFrameAsync(System.Net.WebSockets.WebSocketCloseStatus closeStatus, System.String closeStatusDescription, System.Threading.CancellationToken cancellationToken)

Disassembly:
	0x036D2660 CMP W0, 0x1
	0x036D2664 CSET W19, EQ
	0x036D2668 LDR X0, [X21]
	0x036D266C LDR W8, [X0 + 0xE0]
	0x036D2670 CBNZ W8, 0x36D2678
	0x036D2674 BL 0x1C16DFC
	0x036D2678 ADD X0, X31, 0x0
	0x036D267C MOV X1, X31
	0x036D2680 TBZ X19, 0x0, 0x36D2780
	0x036D2684 BL 0x33EDF90
	0x036D2688 ADRP X8, 0xA49000
	0x036D268C LDR X8, [X8 + 0x678]
	0x036D2690 MOV X19, X0
	0x036D2694 MOV X20, X1
	0x036D2698 LDR X0, [X8]
	0x036D269C LDR W8, [X0 + 0xE0]
	0x036D26A0 CBNZ W8, 0x36D26A8
	0x036D26A4 BL 0x1C16DFC
	0x036D26A8 ADRP X22, 0xD0A000
	0x036D26AC LDRB W8, [X22 + 0x4E5]
	0x036D26B0 CBNZ W8, 0x36D26C8
	0x036D26B4 ADRP X0, 0xA4B000
	0x036D26B8 LDR X0, [X0 + 0xE40]
	0x036D26BC BL 0x1C16CF4
	0x036D26C0 MOVZ W8, 0x1
	0x036D26C4 STRB W8, [X22 + 0x4E5]
	0x036D26C8 LDR X0, [X21]
	0x036D26CC LDR W8, [X0 + 0xE0]
	0x036D26D0 CBNZ W8, 0x36D26D8
	0x036D26D4 BL 0x1C16DFC
	0x036D26D8 ADRP X21, 0xD0A000
	0x036D26DC LDRB W8, [X21 + 0x4E6]
	0x036D26E0 CBNZ W8, 0x36D2704
	0x036D26E4 ADRP X0, 0xA50000
	0x036D26E8 LDR X0, [X0 + 0xEA8]
	0x036D26EC BL 0x1C16CF4
	0x036D26F0 ADRP X0, 0xA22000
	0x036D26F4 LDR X0, [X0 + 0x7B8]
	0x036D26F8 BL 0x1C16CF4
	0x036D26FC MOVZ W8, 0x1
	0x036D2700 STRB W8, [X21 + 0x4E6]
	0x036D2704 CBZ X19, 0x36D28D8
	0x036D2708 ADRP X9, 0xA22000
	0x036D270C LDR X9, [X9 + 0x7B8]
	0x036D2710 LDR X8, [X19]
	0x036D2714 LDR X9, [X9]
	0x036D2718 LDRB W11, [X8 + 0x130]
	0x036D271C LDRB W10, [X9 + 0x130]
	0x036D2720 CMP W11, W10
	0x036D2724 B.CC 0x36D273C
	0x036D2728 LDR X11, [X8 + 0xC8]
	0x036D272C ADD X10, X11, X10, 0x3, LSL
	0x036D2730 LDUR X10, [X10 - 0x8]
	0x036D2734 CMP X10, X9
	0x036D2738 B.EQ 0x36D28EC
	0x036D273C ADRP X10, 0xA50000
	0x036D2740 LDR X10, [X10 + 0xEA8]
	0x036D2744 LDRH W9, [X8 + 0x12E]
	0x036D2748 LDR X1, [X10]
	0x036D274C CBZ X9, 0x36D2770

ISIL:
	001 Subtract X31, X31, 208
	002 Move [X31+144], X30
	003 Move [X31+160], X24
	004 Move [X31+168], X23
	005 Move [X31+176], X22
	006 Move [X31+184], X21
	007 Move [X31+192], X20
	008 Move [X31+200], X19
	009 Move X24, 0xD0F000
	010 Move X23, 0xA25000
	011 Move W8, [X24+2704]
	012 Move X23, [X23+640]
	013 Move X19, X3
	014 Move X20, X2
	015 Move W22, W1
	016 Move X21, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {29}
	021 Move X0, 0xA6F000
	022 Move X0, [X0+80]
	023 Call 0x1C17CF4
	024 Move X0, 0xA25000
	025 Move X0, [X0+640]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X24+2704], W8
	029 Move X0, [X23]
	030 NotImplemented "Instruction MOVI not yet implemented."
	031 Move [X31+128], X31
	032 Move [X31+64], V0
	033 Move [X31+72], V0
	034 Move [X31+96], V0
	035 Move [X31+104], V0
	036 Move [X31+32], V0
	037 Move [X31+40], V0
	038 Move [X31+72], W22
	039 Move [X31+64], X20
	040 Move [X31+80], X21
	041 Move [X31+88], X19
	042 Move X19, 0xA6F000
	043 Move W8, [X0+224]
	044 Move X19, [X19+80]
	045 Compare W8, 0
	046 JumpIfNotEqual {48}
	047 Call 0x1C17DFC
	048 Add X8, X31, 8
	049 Move X0, X31
	050 Call AsyncTaskMethodBuilder.Create
	051 NotImplemented "Instruction LDUR not yet implemented."
	052 Move X9, [X31+24]
	053 Move X2, [X19]
	054 Add X8, X31, 32
	055 Or X19, X8, 15
	056 Move TEMP, 0
	057 Not TEMP
	058 Move W10, TEMP
	059 Add X1, X31, 32
	060 Move X0, X19
	061 Move [X31+40], V0
	062 Move [X31+56], X9
	063 Move [X31+32], W10
	064 Call AsyncTaskMethodBuilder.Start, X0, X1
	065 Move X0, X19
	066 Move X1, X31
	067 Call AsyncTaskMethodBuilder.get_Task, X0
	068 Move X20, [X31+192]
	069 Move X19, [X31+200]
	070 Move X22, [X31+176]
	071 Move X21, [X31+184]
	072 Move X24, [X31+160]
	073 Move X23, [X31+168]
	074 Move X30, [X31+144]
	075 Add X31, X31, 208
	076 Return X0

Method: System.Void ConsumeFromBuffer(System.Int32 count)

Disassembly:
	0x036D3F98 B 0x36D3FC0
	0x036D3F9C LDUR V0, [X19 + 0x38]
	0x036D3FA0 MOVN W25, 0x0
	0x036D3FA4 STR V0, [X31]
	0x036D3FA8 STP X31, X31, [X19 + 0x38]

ISIL:
	001 Move W9, [X0+136]
	002 Move W8, [X0+140]
	003 Subtract W8, W8, W1
	004 Add W9, W9, W1
	005 Move [X0+136], W9
	006 Move [X0+140], W8
	007 Return 

Method: System.Threading.Tasks.Task EnsureBufferContainsAsync(System.Int32 minimumRequiredBytes, System.Threading.CancellationToken cancellationToken, System.Boolean throwOnPrematureClosure = True)

Disassembly:
	0x036D4048 LDRB W11, [X8 + 0x130]
	0x036D404C LDRB W10, [X9 + 0x130]
	0x036D4050 CMP W11, W10
	0x036D4054 B.CC 0x36D406C
	0x036D4058 LDR X11, [X8 + 0xC8]
	0x036D405C ADD X10, X11, X10, 0x3, LSL
	0x036D4060 LDUR X10, [X10 - 0x8]
	0x036D4064 CMP X10, X9
	0x036D4068 B.EQ 0x36D4134
	0x036D406C ADRP X10, 0xA4E000
	0x036D4070 LDRH W22, [X31 + 0x8]
	0x036D4074 LDR X10, [X10 + 0xEA8]
	0x036D4078 LDRH W9, [X8 + 0x12E]
	0x036D407C LDR X1, [X10]
	0x036D4080 CBZ X9, 0x36D40A4
	0x036D4084 LDR X10, [X8 + 0xB0]
	0x036D4088 ADD X10, X10, 0x8
	0x036D408C LDUR X11, [X10 - 0x8]
	0x036D4090 CMP X11, X1
	0x036D4094 B.EQ 0x36D40B4
	0x036D4098 SUBS X9, X9, 0x1
	0x036D409C ADD X10, X10, 0x10
	0x036D40A0 B.NE 0x36D408C
	0x036D40A4 MOVZ W2, 0x2
	0x036D40A8 MOV X0, X21
	0x036D40AC BL 0x1C5C788
	0x036D40B0 B 0x36D40C4
	0x036D40B4 LDR W9, [X10]
	0x036D40B8 ADD W9, W9, 0x2
	0x036D40BC ADD X8, X8, W9, 0x4, SXTW
	0x036D40C0 ADD X0, X8, 0x138
	0x036D40C4 LDP X8, X2, [X0]
	0x036D40C8 MOV X0, X21
	0x036D40CC MOV W1, W22
	0x036D40D0 BLR X8
	0x036D40D4 MOV X22, X31
	0x036D40D8 MOVZ W21, 0xF
	0x036D40DC TBZ X25, 0x1F, 0x36D40FC
	0x036D40E0 CBZ X20, 0x36D41B0
	0x036D40E4 MOV X0, X20
	0x036D40E8 BL 0x36D31F4
	0x036D40EC LDR X0, [X20 + 0x50]
	0x036D40F0 CBZ X0, 0x36D41B4
	0x036D40F4 MOV X1, X31
	0x036D40F8 BL 0x33E2354
	0x036D40FC CBNZ X22, 0x36D41A8
	0x036D4100 CBZ W21, 0x36D410C
	0x036D4104 CMP W21, 0xF
	0x036D4108 B.NE 0x36D418C
	0x036D410C MOVN W8, 0x1
	0x036D4110 STR W8, [X19], #0x8
	0x036D4114 LDR X0, [X24]
	0x036D4118 LDR W8, [X0 + 0xE0]
	0x036D411C CBNZ W8, 0x36D4124
	0x036D4120 BL 0x1C16DFC
	0x036D4124 MOV X0, X19
	0x036D4128 MOV X1, X31
	0x036D412C BL 0x32C4864
	0x036D4130 B 0x36D418C
	0x036D4134 MOV X0, X21
	0x036D4138 MOV X1, X31

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+112], X30
	003 Move [X31+128], X24
	004 Move [X31+136], X23
	005 Move [X31+144], X22
	006 Move [X31+152], X21
	007 Move [X31+160], X20
	008 Move [X31+168], X19
	009 Move X24, 0xD0D000
	010 Move X23, 0xA23000
	011 Move W8, [X24+2705]
	012 Move X23, [X23+640]
	013 Move W22, W3
	014 Move X19, X2
	015 Move W20, W1
	016 Move X21, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {29}
	021 Move X0, 0xA6D000
	022 Move X0, [X0+152]
	023 Call 0x1C17CF4
	024 Move X0, 0xA23000
	025 Move X0, [X0+640]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X24+2705], W8
	029 Move X0, [X23]
	030 And W8, W22, 1
	031 NotImplemented "Instruction MOVI not yet implemented."
	032 Move [X31+64], V0
	033 Move [X31+72], V0
	034 Move [X31+6], V0
	035 Move [X31+32], V0
	036 Move [X31+40], V0
	037 Move [X31+64], X21
	038 Move [X31+72], W20
	039 Move [X31+80], X19
	040 Move [X31+88], W8
	041 Move X19, 0xA6D000
	042 Move W8, [X0+224]
	043 Move X19, [X19+152]
	044 Compare W8, 0
	045 JumpIfNotEqual {47}
	046 Call 0x1C17DFC
	047 Add X8, X31, 8
	048 Move X0, X31
	049 Call AsyncTaskMethodBuilder.Create
	050 NotImplemented "Instruction LDUR not yet implemented."
	051 Move X9, [X31+24]
	052 Move X2, [X19]
	053 Add X8, X31, 32
	054 Or X19, X8, 15
	055 Move TEMP, 0
	056 Not TEMP
	057 Move W10, TEMP
	058 Add X1, X31, 32
	059 Move X0, X19
	060 Move [X31+40], V0
	061 Move [X31+56], X9
	062 Move [X31+32], W10
	063 Call AsyncTaskMethodBuilder.Start, X0, X1
	064 Move X0, X19
	065 Move X1, X31
	066 Call AsyncTaskMethodBuilder.get_Task, X0
	067 Move X20, [X31+160]
	068 Move X19, [X31+168]
	069 Move X22, [X31+144]
	070 Move X21, [X31+152]
	071 Move X24, [X31+128]
	072 Move X23, [X31+136]
	073 Move X30, [X31+112]
	074 Add X31, X31, 176
	075 Return X0

Method: System.Void ThrowIfEOFUnexpected(System.Boolean throwOnPrematureClosure)

Disassembly:
	0x036D413C BL 0x32C3B54
	0x036D4140 B 0x36D40D4
	0x036D4144 MOV X0, X21
	0x036D4148 MOV X1, X31
	0x036D414C BL 0x33ED11C
	0x036D4150 TBNZ X0, 0x0, 0x36D3FD4
	0x036D4154 STR W31, [X19]
	0x036D4158 LDR V0, [X31]
	0x036D415C STUR V0, [X19 + 0x38]
	0x036D4160 LDR X0, [X24]
	0x036D4164 LDR W8, [X0 + 0xE0]
	0x036D4168 CBNZ W8, 0x36D4170
	0x036D416C BL 0x1C16DFC
	0x036D4170 ADRP X8, 0xA6C000
	0x036D4174 LDR X8, [X8 + 0xE0]
	0x036D4178 ADD X0, X19, 0x8
	0x036D417C LDR X3, [X8]
	0x036D4180 ADD X1, X31, 0x0
	0x036D4184 MOV X2, X19
	0x036D4188 BL 0x218C834
	0x036D418C LDP X20, X19, [X31 + 0x50]
	0x036D4190 LDP X22, X21, [X31 + 0x40]
	0x036D4194 LDP X24, X23, [X31 + 0x30]
	0x036D4198 LDP X26, X25, [X31 + 0x20]
	0x036D419C LDR X30, [X31 + 0x10]
	0x036D41A0 ADD X31, X31, 0x60
	0x036D41A4 RET
	0x036D41A8 MOV X0, X22
	0x036D41AC BL 0x1C16F18
	0x036D41B0 BL 0x1C16F20
	0x036D41B4 BL 0x1C16F20
	0x036D41B8 MOV X21, X0

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move W8, [X0+92]
	004 Compare W8, 0
	005 JumpIfNotEqual {13}
	006 Move TEMP, X1
	007 And TEMP, TEMP, 1
	008 Compare TEMP, 1
	009 JumpIfEqual {25}
	010 Move X30, [X31+16]
	011 Move X19, [X31+24]
	012 Return 
	013 Move X0, 0xA49000
	014 Move X0, [X0+1208]
	015 Call 0x1C17D08
	016 Call 0x1C17F10
	017 Move X19, X0
	018 Move X0, 0xA6C000
	019 Move X0, [X0+4072]
	020 Call 0x1C17D08
	021 Move X1, X0
	022 Move X0, X19
	023 Move X2, X31
	024 Call ObjectDisposedException..ctor, X0, X1
	025 Move X0, 0xA4B000
	026 Move X0, [X0+776]
	027 Call 0x1C17D08
	028 Call 0x1C17F10
	029 Move W1, 8
	030 Move X19, X0
	031 Call WebSocketException..ctor, X0, X1
	032 Move X0, 0xA6D000
	033 Move X0, [X0+160]
	034 Call 0x1C17D08
	035 Move X1, X0
	036 Move X0, X19
	037 Call 0x1C17DEC

Method: System.Void AllocateSendBuffer(System.Int32 minLength)

Disassembly:
	0x036D3168 ADRP X0, 0xA6C000
	0x036D316C LDR X0, [X0 + 0xFE8]
	0x036D3170 BL 0x1C16D08
	0x036D3174 MOV X1, X0
	0x036D3178 MOV X0, X19
	0x036D317C MOV X2, X31
	0x036D3180 BL 0x338C448
	0x036D3184 B 0x36D31A4
	0x036D3188 ADRP X0, 0xA4B000
	0x036D318C LDR X0, [X0 + 0x308]
	0x036D3190 BL 0x1C16D08
	0x036D3194 BL 0x1C16F10
	0x036D3198 MOVZ W1, 0x8
	0x036D319C MOV X19, X0
	0x036D31A0 BL 0x36D31BC
	0x036D31A4 ADRP X0, 0xA6D000
	0x036D31A8 LDR X0, [X0 + 0xA0]
	0x036D31AC BL 0x1C16D08
	0x036D31B0 MOV X1, X0
	0x036D31B4 MOV X0, X19
	0x036D31B8 BL 0x1C16DEC
	0x036D31BC STR X30, [X31 - 0x20]!
	0x036D31C0 STP X20, X19, [X31 + 0x10]
	0x036D31C4 MOV X20, X0
	0x036D31C8 MOV W0, W1
	0x036D31CC MOV W19, W1
	0x036D31D0 BL 0x36DD4C0
	0x036D31D4 MOV X1, X0
	0x036D31D8 MOV X0, X20
	0x036D31DC MOV X2, X31
	0x036D31E0 BL 0x3661FBC
	0x036D31E4 STR W19, [X20 + 0x90]
	0x036D31E8 LDP X20, X19, [X31 + 0x10]
	0x036D31EC LDR X30, [X31], #0x20
	0x036D31F0 RET
	0x036D31F4 STR X30, [X31 - 0x20]!
	0x036D31F8 STP X20, X19, [X31 + 0x10]
	0x036D31FC ADRP X19, 0xD0D000
	0x036D3200 LDRB W8, [X19 + 0xA93]
	0x036D3204 MOV X20, X0
	0x036D3208 TBNZ X8, 0x0, 0x36D322C
	0x036D320C ADRP X0, 0xA4B000
	0x036D3210 LDR X0, [X0 + 0xD50]
	0x036D3214 BL 0x1C16CF4
	0x036D3218 ADRP X0, 0xA4B000
	0x036D321C LDR X0, [X0 + 0xD68]
	0x036D3220 BL 0x1C16CF4
	0x036D3224 MOVZ W8, 0x1
	0x036D3228 STRB W8, [X19 + 0xA93]
	0x036D322C LDR X19, [X20 + 0x98]
	0x036D3230 CBZ X19, 0x36D32D8
	0x036D3234 ADRP X8, 0xA4B000
	0x036D3238 LDR X8, [X8 + 0xD68]
	0x036D323C STR X31, [X20 + 0x98]
	0x036D3240 ADRP X20, 0xA4B000
	0x036D3244 LDR X0, [X8]
	0x036D3248 LDR W8, [X0 + 0xE0]
	0x036D324C LDR X20, [X20 + 0xD50]
	0x036D3250 CBNZ W8, 0x36D3258

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xD0E000
	007 Move X21, 0xA4C000
	008 Move W8, [X22+2706]
	009 Move X21, [X21+3432]
	010 Move W20, W1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xA4C000
	017 Move X0, [X0+3408]
	018 Call 0x1C17CF4
	019 Move X0, 0xA4C000
	020 Move X0, [X0+3432]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+2706], W8
	024 Move X0, [X21]
	025 Move X21, 0xA4C000
	026 Move W8, [X0+224]
	027 Move X21, [X21+3408]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X21, [X21]
	032 Move X0, [X21+32]
	033 Move W8, [X0+309]
	034 Move TEMP, X8
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfEqual {39}
	038 Call 0x1C5D684
	039 Move X8, [X0+192]
	040 Move X0, [X8+8]
	041 Move W8, [X0+309]
	042 Move TEMP, X8
	043 And TEMP, TEMP, 1
	044 Compare TEMP, 1
	045 JumpIfEqual {47}
	046 Call 0x1C5D684
	047 Move W8, [X0+224]
	048 Compare W8, 0
	049 JumpIfNotEqual {51}
	050 Call 0x1C17DFC
	051 Move X0, [X21+32]
	052 Move W8, [X0+309]
	053 Move TEMP, X8
	054 And TEMP, TEMP, 1
	055 Compare TEMP, 1
	056 JumpIfEqual {58}
	057 Call 0x1C5D684
	058 Move X8, [X0+192]
	059 Move X0, [X8+8]
	060 Move W8, [X0+309]
	061 Move TEMP, X8
	062 And TEMP, TEMP, 1
	063 Compare TEMP, 1
	064 JumpIfEqual {66}
	065 Call 0x1C5D684
	066 Move X8, [X0+184]
	067 Move X0, [X8]
	068 Compare X0, 0
	069 JumpIfEqual {82}
	070 Move X8, [X0]
	071 Move W1, W20
	072 Move X9, [X8+376]
	073 Move X2, [X8+384]
	074 NotImplemented "Instruction BLR not yet implemented."
	075 Move [X19+152], X0
	076 Move X20, [X31+32]
	077 Move X19, [X31+40]
	078 Move X22, [X31+16]
	079 Move X21, [X31+24]
	080 Move X30, [X31+48]
	081 Return 
	082 Call 0x1C17F20

Method: System.Void ReleaseSendBuffer()

Disassembly:
	0x036D41F4 BL 0x3EB1AD0
	0x036D41F8 LDR X22, [X0]
	0x036D41FC BL 0x3EB1AE0
	0x036D4200 MOV W21, W31
	0x036D4204 TBZ X25, 0x1F, 0x36D40FC
	0x036D4208 B 0x36D40E0
	0x036D420C MOV X22, X31
	0x036D4210 TBZ X25, 0x1F, 0x36D4230
	0x036D4214 CBZ X20, 0x36D42D0
	0x036D4218 MOV X0, X20
	0x036D421C BL 0x36D31F4
	0x036D4220 LDR X0, [X20 + 0x50]
	0x036D4224 CBZ X0, 0x36D42D4
	0x036D4228 MOV X1, X31
	0x036D422C BL 0x33E2354
	0x036D4230 CBZ X22, 0x36D43D0
	0x036D4234 MOV X0, X22
	0x036D4238 BL 0x1C16F18
	0x036D423C MOV X0, X21
	0x036D4240 BL 0x3EB1AD0
	0x036D4244 LDR X22, [X0]
	0x036D4248 BL 0x3EB1AE0
	0x036D424C ADRP X0, 0xA1F000
	0x036D4250 LDR X0, [X0 + 0x7D0]
	0x036D4254 BL 0x1C16D08
	0x036D4258 CBZ X22, 0x36D42B8
	0x036D425C LDR X8, [X22]
	0x036D4260 LDRB W9, [X0 + 0x130]
	0x036D4264 LDRB W10, [X8 + 0x130]
	0x036D4268 CMP W10, W9
	0x036D426C B.CC 0x36D42B8
	0x036D4270 LDR X8, [X8 + 0xC8]
	0x036D4274 ADD X8, X8, X9, 0x3, LSL
	0x036D4278 LDUR X8, [X8 - 0x8]
	0x036D427C CMP X8, X0
	0x036D4280 B.NE 0x36D42B8
	0x036D4284 ADRP X0, 0xA27000
	0x036D4288 LDR X0, [X0 + 0x8A8]
	0x036D428C BL 0x1C16D08
	0x036D4290 LDR X8, [X22]
	0x036D4294 LDRB W9, [X0 + 0x130]
	0x036D4298 LDRB W10, [X8 + 0x130]
	0x036D429C CMP W10, W9
	0x036D42A0 B.CC 0x36D42D8
	0x036D42A4 LDR X8, [X8 + 0xC8]
	0x036D42A8 ADD X8, X8, X9, 0x3, LSL
	0x036D42AC LDUR X8, [X8 - 0x8]
	0x036D42B0 CMP X8, X0
	0x036D42B4 B.NE 0x36D42D8
	0x036D42B8 ADRP X0, 0xA6C000
	0x036D42BC LDR X0, [X0 + 0xE8]
	0x036D42C0 BL 0x1C16D08
	0x036D42C4 MOV X1, X0
	0x036D42C8 MOV X0, X22
	0x036D42CC BL 0x1C16DEC
	0x036D42D0 BL 0x1C16F20
	0x036D42D4 BL 0x1C16F20
	0x036D42D8 CBNZ X20, 0x36D42E0
	0x036D42DC BL 0x1C16F20
	0x036D42E0 LDR W8, [X20 + 0x58]
	0x036D42E4 CMP W8, 0x6

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0xD0D000
	005 Move W8, [X19+2707]
	006 Move X20, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0xA4B000
	012 Move X0, [X0+3408]
	013 Call 0x1C17CF4
	014 Move X0, 0xA4B000
	015 Move X0, [X0+3432]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X19+2707], W8
	019 Move X19, [X20+152]
	020 Compare X19, 0
	021 JumpIfEqual {80}
	022 Move X8, 0xA4B000
	023 Move X8, [X8+3432]
	024 Move [X20+152], X31
	025 Move X20, 0xA4B000
	026 Move X0, [X8]
	027 Move W8, [X0+224]
	028 Move X20, [X20+3408]
	029 Compare W8, 0
	030 JumpIfNotEqual {32}
	031 Call 0x1C17DFC
	032 Move X20, [X20]
	033 Move X0, [X20+32]
	034 Move W8, [X0+309]
	035 Move TEMP, X8
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfEqual {40}
	039 Call 0x1C5D684
	040 Move X8, [X0+192]
	041 Move X0, [X8+8]
	042 Move W8, [X0+309]
	043 Move TEMP, X8
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfEqual {48}
	047 Call 0x1C5D684
	048 Move W8, [X0+224]
	049 Compare W8, 0
	050 JumpIfNotEqual {52}
	051 Call 0x1C17DFC
	052 Move X0, [X20+32]
	053 Move W8, [X0+309]
	054 Move TEMP, X8
	055 And TEMP, TEMP, 1
	056 Compare TEMP, 1
	057 JumpIfEqual {59}
	058 Call 0x1C5D684
	059 Move X8, [X0+192]
	060 Move X0, [X8+8]
	061 Move W8, [X0+309]
	062 Move TEMP, X8
	063 And TEMP, TEMP, 1
	064 Compare TEMP, 1
	065 JumpIfEqual {67}
	066 Call 0x1C5D684
	067 Move X8, [X0+184]
	068 Move X0, [X8]
	069 Compare X0, 0
	070 JumpIfEqual {84}
	071 Move X8, [X0]
	072 Move X1, X19
	073 Move X20, [X31+16]
	074 Move X19, [X31+24]
	075 Move W2, W31
	076 Move X4, [X8+392]
	077 Move X3, [X8+400]
	078 Move X30, [X31+32]
	079 CallNoReturn X4
	080 Move X20, [X31+16]
	081 Move X19, [X31+24]
	082 Move X30, [X31+32]
	083 Return 
	084 Call 0x1C17F20

Method: System.Int32 CombineMaskBytes(System.Span`1<System.Byte> buffer, System.Int32 maskOffset)

Disassembly:
	0x036D3FAC STR W25, [X19]
	0x036D3FB0 B 0x36D3FD4
	0x036D3FB4 LDRSW X9, [X10]
	0x036D3FB8 ADD X8, X8, X9, 0x4, LSL
	0x036D3FBC ADD X0, X8, 0x138
	0x036D3FC0 LDP X8, X2, [X0]
	0x036D3FC4 MOV X0, X21
	0x036D3FC8 MOV W1, W22
	0x036D3FCC BLR X8
	0x036D3FD0 CBZ W0, 0x36D4154
	0x036D3FD4 ADRP X21, 0xD09000
	0x036D3FD8 LDRB W8, [X21 + 0x925]
	0x036D3FDC CBNZ W8, 0x36D3FF4
	0x036D3FE0 ADRP X0, 0xA4A000
	0x036D3FE4 LDR X0, [X0 + 0xE40]
	0x036D3FE8 BL 0x1C16CF4
	0x036D3FEC MOVZ W8, 0x1
	0x036D3FF0 STRB W8, [X21 + 0x925]
	0x036D3FF4 LDR X0, [X23]
	0x036D3FF8 LDR W8, [X0 + 0xE0]
	0x036D3FFC CBNZ W8, 0x36D4004
	0x036D4000 BL 0x1C16DFC
	0x036D4004 ADRP X21, 0xD08000
	0x036D4008 LDRB W8, [X21 + 0x4E6]
	0x036D400C CBNZ W8, 0x36D4030
	0x036D4010 ADRP X0, 0xA4E000
	0x036D4014 LDR X0, [X0 + 0xEA8]
	0x036D4018 BL 0x1C16CF4
	0x036D401C ADRP X0, 0xA20000
	0x036D4020 LDR X0, [X0 + 0x7B8]
	0x036D4024 BL 0x1C16CF4
	0x036D4028 MOVZ W8, 0x1
	0x036D402C STRB W8, [X21 + 0x4E6]
	0x036D4030 LDR X21, [X31]
	0x036D4034 CBZ X21, 0x36D40D4
	0x036D4038 ADRP X9, 0xA20000
	0x036D403C LDR X9, [X9 + 0x7B8]
	0x036D4040 LDR X8, [X21]
	0x036D4044 LDR X9, [X9]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0xD0E000
	008 Move X23, 0xA55000
	009 Move W8, [X22+2708]
	010 Move X23, [X23+40]
	011 Move W19, W2
	012 Move X21, X1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0xA55000
	019 Move X0, [X0+40]
	020 Call 0x1C17CF4
	021 Move X0, 0xA54000
	022 Move X0, [X0+3944]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X22+2708], W8
	026 Move X22, [X23]
	027 Subtract W21, W21, W19
	028 Move X0, X31
	029 Call ThrowHelper.ThrowArgumentOutOfRangeException
	030 Move X0, [X22+32]
	031 Move X22, 0xA53000
	032 Move W8, [X0+309]
	033 Move X22, [X22+3944]
	034 Move TEMP, X8
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfEqual {39}
	038 Call 0x1C5D684
	039 Move X2, [X22]
	040 Add X0, X20, W19
	041 Move X1, X21
	042 Call 0x25FC09C, X0
	043 Move X20, [X31+32]
	044 Move X19, [X31+40]
	045 Move X22, [X31+16]
	046 Move X21, [X31+24]
	047 Move X2, X31
	048 Move X30, [X31+48]
	049 Move X23, [X31+56]
	050 Call BitConverter.ToInt32, X0
	051 Return X0

Method: System.Int32 ApplyMask(System.Span`1<System.Byte> toMask, System.Byte[] mask, System.Int32 maskOffset, System.Int32 maskOffsetIndex)

Disassembly:
	0x036D33C8 STRB W11, [X0]
	0x036D33CC MOV X0, X9
	0x036D33D0 ADD X9, X9, 0x1
	0x036D33D4 B.NE 0x36D33B0
	0x036D33D8 MOV W0, W19
	0x036D33DC LDP X20, X19, [X31 + 0x30]
	0x036D33E0 LDP X22, X21, [X31 + 0x20]
	0x036D33E4 LDP X30, X23, [X31 + 0x10]
	0x036D33E8 ADD X31, X31, 0x40
	0x036D33EC RET
	0x036D33F0 STR X30, [X31 - 0x20]!
	0x036D33F4 STP X20, X19, [X31 + 0x10]
	0x036D33F8 ADRP X0, 0xA6D000
	0x036D33FC LDR X0, [X0 + 0xA8]
	0x036D3400 MOV X19, X1
	0x036D3404 BL 0x1C16D08
	0x036D3408 MOV X1, X19
	0x036D340C MOV X2, X31
	0x036D3410 BL 0x32094D4
	0x036D3414 MOV X19, X0
	0x036D3418 ADRP X0, 0xA20000
	0x036D341C LDR X0, [X0 + 0x5B0]
	0x036D3420 BL 0x1C16D08
	0x036D3424 BL 0x1C16F10
	0x036D3428 MOV X1, X19
	0x036D342C MOV X2, X31
	0x036D3430 MOV X20, X0
	0x036D3434 BL 0x337DF1C
	0x036D3438 ADRP X0, 0xA6D000
	0x036D343C LDR X0, [X0 + 0xB0]
	0x036D3440 BL 0x1C16D08
	0x036D3444 MOV X1, X0
	0x036D3448 MOV X0, X20
	0x036D344C BL 0x1C16DEC
	0x036D3450 STP X30, X23, [X31 - 0x30]!
	0x036D3454 STP X22, X21, [X31 + 0x10]
	0x036D3458 STP X20, X19, [X31 + 0x20]
	0x036D345C ADRP X23, 0xD0D000
	0x036D3460 LDRB W8, [X23 + 0xA98]
	0x036D3464 MOV X19, X3
	0x036D3468 MOV W20, W2
	0x036D346C MOV X21, X1
	0x036D3470 MOV X22, X0
	0x036D3474 TBNZ X8, 0x0, 0x36D348C
	0x036D3478 ADRP X0, 0xA4F000
	0x036D347C LDR X0, [X0 + 0x928]
	0x036D3480 BL 0x1C16CF4
	0x036D3484 MOVZ W8, 0x1

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X26, 0xD0E000
	011 Move X25, 0xA50000
	012 Move X24, 0xA4A000
	013 Move W8, [X26+2709]
	014 Move X25, [X25+760]
	015 Move X24, [X24+2912]
	016 Move W19, W4
	017 Move W22, W3
	018 Move X23, X2
	019 Move X20, X1
	020 Move X21, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {33}
	025 Move X0, 0xA4A000
	026 Move X0, [X0+2912]
	027 Call 0x1C17CF4
	028 Move X0, 0xA50000
	029 Move X0, [X0+760]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X26+2709], W8
	033 Move X1, [X25]
	034 Move X0, X23
	035 Call 0x25FC4C0, X0
	036 Move X23, X0
	037 Move X0, [X24]
	038 Move X24, X1
	039 Move W8, [X0+224]
	040 Compare W8, 0
	041 JumpIfNotEqual {43}
	042 Call 0x1C17DFC
	043 Move X0, X23
	044 Move X1, X24
	045 Move W2, W22
	046 Call ManagedWebSocket.CombineMaskBytes, X0, X1
	047 Move W2, W0
	048 Move X0, X21
	049 Move X1, X20
	050 Move W3, W19
	051 Move X20, [X31+64]
	052 Move X19, [X31+72]
	053 Move X22, [X31+48]
	054 Move X21, [X31+56]
	055 Move X24, [X31+32]
	056 Move X23, [X31+40]
	057 Move X26, [X31+16]
	058 Move X25, [X31+24]
	059 Move X30, [X31+80]
	060 Call ManagedWebSocket.ApplyMask, X0, X1, X2
	061 Return X0

Method: System.Int32 ApplyMask(System.Span`1<System.Byte> toMask, System.Int32 mask, System.Int32 maskIndex)

Disassembly:
	0x036D42E8 B.NE 0x36D4318
	0x036D42EC ADRP X0, 0xA48000
	0x036D42F0 LDR X0, [X0 + 0xB60]
	0x036D42F4 BL 0x1C16D08
	0x036D42F8 LDR W8, [X0 + 0xE0]
	0x036D42FC CBNZ W8, 0x36D4304
	0x036D4300 BL 0x1C16DFC
	0x036D4304 MOV X0, X22
	0x036D4308 MOV X1, X31
	0x036D430C BL 0x36D1FE8
	0x036D4310 MOV X21, X0
	0x036D4314 B 0x36D4350
	0x036D4318 ADRP X0, 0xA4A000
	0x036D431C LDR X0, [X0 + 0x308]
	0x036D4320 BL 0x1C16D08
	0x036D4324 BL 0x1C16F10
	0x036D4328 MOV X21, X0
	0x036D432C MOVZ W0, 0x8
	0x036D4330 BL 0x36DD4C0
	0x036D4334 MOV X1, X0
	0x036D4338 MOV X0, X21
	0x036D433C MOV X2, X22
	0x036D4340 MOV X3, X31
	0x036D4344 BL 0x3662038
	0x036D4348 MOVZ W8, 0x8
	0x036D434C STR W8, [X21 + 0x90]
	0x036D4350 ADRP X0, 0xA6C000
	0x036D4354 LDR X0, [X0 + 0xE8]
	0x036D4358 BL 0x1C16D08
	0x036D435C MOV X1, X0
	0x036D4360 MOV X0, X21
	0x036D4364 BL 0x1C16DEC
	0x036D4368 B 0x36D43A8
	0x036D436C B 0x36D43A8
	0x036D4370 B 0x36D43A8
	0x036D4374 B 0x36D43A8
	0x036D4378 B 0x36D43A8
	0x036D437C MOV X21, X0
	0x036D4380 B 0x36D438C
	0x036D4384 B 0x36D43A8
	0x036D4388 MOV X21, X0
	0x036D438C CMP W1, W23
	0x036D4390 B.NE 0x36D43AC
	0x036D4394 MOV X0, X21
	0x036D4398 BL 0x3EB1AD0
	0x036D439C BL 0x3EB1AE0
	0x036D43A0 B 0x36D42B8
	0x036D43A4 B 0x36D43A8
	0x036D43A8 MOV X21, X0
	0x036D43AC MOV W23, W1
	0x036D43B0 B 0x36D41E4
	0x036D43B4 MOV X21, X0
	0x036D43B8 MOV W23, W1
	0x036D43BC TBZ X25, 0x1F, 0x36D4230
	0x036D43C0 B 0x36D4214
	0x036D43C4 MOV X21, X0
	0x036D43C8 MOVZ W26, 0x1
	0x036D43CC MOV W23, W1
	0x036D43D0 CMP W23, W26
	0x036D43D4 B.NE 0x36D4464
	0x036D43D8 MOV X0, X21
	0x036D43DC BL 0x3EB1AD0
	0x036D43E0 MOV X20, X0
	0x036D43E4 ADRP X0, 0xA1F000
	0x036D43E8 LDR X0, [X0 + 0x7D0]
	0x036D43EC BL 0x1C16D08

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0xD0D000
	009 Move W8, [X23+2710]
	010 Move W19, W3
	011 Move W21, W2
	012 Move X20, X1
	013 Move X22, X0
	014 Move [X31+12], W2
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0xA4E000
	020 Move X0, [X0+2096]
	021 Call 0x1C17CF4
	022 Move X0, 0xA4F000
	023 Move X0, [X0+2344]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X23+2710], W8
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Move X8, 0xA4E000
	029 Move X8, [X8+2096]
	030 Move X0, X22
	031 Move X1, X20
	032 Move X2, [X8]
	033 Call 0x2219CF4, X0
	034 And X31, X0, 3
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move W8, W19
	037 ShiftRight W8, 29
	038 And W8, W8, 0xFFFFFFF
	039 NotImplemented "Instruction RORV not yet implemented."
	040 Move W9, [X0]
	041 Move W10, W20
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Subtract W20, W20, 4
	044 Xor W9, W9, W8
	045 Move [X0+4], W9
	046 Add W8, W20, 4
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Add X8, X0, W20
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Move W8, W20
	051 Add X9, X0, 1
	052 Add X10, X31, 12
	053 Move W11, [X0]
	054 Move W12, [X10]
	055 Add W13, W19, 1
	056 Subtract X8, X8, 1
	057 And W19, W13, 3
	058 Xor W11, W12, W11
	059 Move [X0], W11
	060 Move X0, X9
	061 Add X9, X9, 1
	062 Move W0, W19
	063 Move X20, [X31+48]
	064 Move X19, [X31+56]
	065 Move X22, [X31+32]
	066 Move X21, [X31+40]
	067 Move X30, [X31+16]
	068 Move X23, [X31+24]
	069 Add X31, X31, 64
	070 Return X0

Method: System.Void ThrowIfOperationInProgress(System.Boolean operationCompleted, System.String methodName = null)

Disassembly:
	0x036D210C ADD X8, X31, 0x8
	0x036D2110 MOV X0, X31
	0x036D2114 BL 0x32C4770
	0x036D2118 LDUR V0, [X31 + 0x8]
	0x036D211C LDR X9, [X31 + 0x18]
	0x036D2120 LDR X2, [X19]
	0x036D2124 ADD X8, X31, 0x20
	0x036D2128 ORR X19, X8, 0xF
	0x036D212C MOVN W10, 0x0

ISIL:
	001 Move TEMP, X1
	002 And TEMP, TEMP, 1
	003 Compare TEMP, 1
	004 JumpIfNotEqual {6}
	005 Return 
	006 Move [X31-16], X30
	007 Move [X31-8], X19
	008 Move X8, [X0]
	009 Move X19, X2
	010 Move X9, [X8+456]
	011 Move X1, [X8+464]
	012 NotImplemented "Instruction BLR not yet implemented."
	013 Move X1, X19
	014 Call ManagedWebSocket.ThrowOperationInProgress, X0, X1

Method: System.Void ThrowOperationInProgress(System.String methodName)

Disassembly:
	0x036D43F0 LDR X8, [X20]
	0x036D43F4 LDR X1, [X8]
	0x036D43F8 BL 0x1C17270
	0x036D43FC TBZ X0, 0x0, 0x36D443C
	0x036D4400 LDR X20, [X20]
	0x036D4404 BL 0x3EB1AE0
	0x036D4408 MOVN W8, 0x1
	0x036D440C STR W8, [X19], #0x8
	0x036D4410 ADRP X0, 0xA22000
	0x036D4414 LDR X0, [X0 + 0x280]
	0x036D4418 BL 0x1C16D08
	0x036D441C LDR W8, [X0 + 0xE0]
	0x036D4420 CBNZ W8, 0x36D4428
	0x036D4424 BL 0x1C16DFC
	0x036D4428 MOV X0, X19
	0x036D442C MOV X1, X20
	0x036D4430 MOV X2, X31
	0x036D4434 BL 0x32C4908
	0x036D4438 B 0x36D418C
	0x036D443C MOVZ W0, 0x8
	0x036D4440 BL 0x3EB1AF0
	0x036D4444 LDR X8, [X20]
	0x036D4448 STR X8, [X0]
	0x036D444C ADRP X1, 0x7E0000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X0, 0xA6D000
	005 Move X0, [X0+168]
	006 Move X19, X1
	007 Call 0x1C17D08
	008 Move X1, X19
	009 Move X2, X31
	010 Call SR.Format, X0, X1
	011 Move X19, X0
	012 Move X0, 0xA20000
	013 Move X0, [X0+1456]
	014 Call 0x1C17D08
	015 Call 0x1C17F10
	016 Move X1, X19
	017 Move X2, X31
	018 Move X20, X0
	019 Call InvalidOperationException..ctor, X0, X1
	020 Move X0, 0xA6D000
	021 Move X0, [X0+176]
	022 Call 0x1C17D08
	023 Move X1, X0
	024 Move X0, X20
	025 Call 0x1C17DEC

Method: System.Exception CreateOperationCanceledException(System.Exception innerException, System.Threading.CancellationToken cancellationToken = null)

Disassembly:
	0x036D2FE8 LDR X0, [X0 + 0xF68]
	0x036D2FEC BL 0x1C16CF4
	0x036D2FF0 MOVZ W8, 0x1
	0x036D2FF4 STRB W8, [X22 + 0xA94]
	0x036D2FF8 LDR X22, [X23]
	0x036D2FFC SUBS W21, W21, W19
	0x036D3000 B.CS 0x36D300C
	0x036D3004 MOV X0, X31
	0x036D3008 BL 0x339D6EC
	0x036D300C LDR X0, [X22 + 0x20]
	0x036D3010 ADRP X22, 0xA53000
	0x036D3014 LDRB W8, [X0 + 0x135]
	0x036D3018 LDR X22, [X22 + 0xF68]
	0x036D301C TBNZ X8, 0x0, 0x36D3024
	0x036D3020 BL 0x1C5C684
	0x036D3024 LDR X2, [X22]
	0x036D3028 ADD X0, X20, W19, SXTW
	0x036D302C MOV X1, X21
	0x036D3030 BL 0x25FB09C
	0x036D3034 LDP X20, X19, [X31 + 0x20]
	0x036D3038 LDP X22, X21, [X31 + 0x10]
	0x036D303C MOV X2, X31
	0x036D3040 LDP X30, X23, [X31], #0x30
	0x036D3044 B 0x3317010
	0x036D3048 SUB X31, X31, 0xB0
	0x036D304C STR X30, [X31 + 0x70]
	0x036D3050 STP X24, X23, [X31 + 0x80]
	0x036D3054 STP X22, X21, [X31 + 0x90]
	0x036D3058 STP X20, X19, [X31 + 0xA0]
	0x036D305C ADRP X24, 0xD0D000
	0x036D3060 ADRP X23, 0xA23000
	0x036D3064 LDRB W8, [X24 + 0xA91]
	0x036D3068 LDR X23, [X23 + 0x280]
	0x036D306C MOV W22, W3
	0x036D3070 MOV X19, X2
	0x036D3074 MOV W20, W1
	0x036D3078 MOV X21, X0
	0x036D307C TBNZ X8, 0x0, 0x36D30A0
	0x036D3080 ADRP X0, 0xA6D000
	0x036D3084 LDR X0, [X0 + 0x98]
	0x036D3088 BL 0x1C16CF4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xD0F000
	007 Move X22, 0xA2A000
	008 Move W8, [X21+2711]
	009 Call 0x3EB291C
	010 Return X0
	011 Move X19, X1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0xA29000
	018 Move X0, [X0+2216]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+2711], W8
	022 Move X0, [X22]
	023 Call 0x1C17F10
	024 Move X1, X31
	025 Move X21, X0
	026 Call OperationCanceledException..ctor, X0
	027 Compare X21, 0
	028 JumpIfEqual {51}
	029 Move X8, [X21]
	030 Move X0, X21
	031 Move X9, [X8+392]
	032 Move X1, [X8+400]
	033 NotImplemented "Instruction BLR not yet implemented."
	034 Move X8, [X22]
	035 Move X21, X0
	036 Move X0, X8
	037 Call 0x1C17F10
	038 Move X1, X21
	039 Move X2, X20
	040 Move X3, X19
	041 Move X4, X31
	042 Move X22, X0
	043 Call OperationCanceledException..ctor, X0, X1, X2, X3
	044 Move X0, X22
	045 Move X20, [X31+32]
	046 Move X19, [X31+40]
	047 Move X22, [X31+16]
	048 Move X21, [X31+24]
	049 Move X30, [X31+48]
	050 Return X0
	051 Call 0x1C17F20

Method: System.Boolean TryValidateUtf8(System.Span`1<System.Byte> span, System.Boolean endOfMessage, System.Net.WebSockets.ManagedWebSocket/Utf8MessageState state)

Disassembly:
	0x036D4450 ADD X1, X1, 0xE58
	0x036D4454 MOV X2, X31
	0x036D4458 BL 0x3EB1B00
	0x036D445C MOV X21, X0
	0x036D4460 BL 0x3EB1AE0
	0x036D4464 MOV X0, X21
	0x036D4468 BL 0x1D2C690
	0x036D446C BL 0x1990590
	0x036D4470 STR X30, [X31 - 0x30]!
	0x036D4474 STP X22, X21, [X31 + 0x10]
	0x036D4478 STP X20, X19, [X31 + 0x20]
	0x036D447C ADRP X21, 0xD0C000
	0x036D4480 ADRP X22, 0xA22000
	0x036D4484 LDRB W8, [X21 + 0xAA2]
	0x036D4488 LDR X22, [X22 + 0x280]
	0x036D448C MOV X19, X1
	0x036D4490 MOV X20, X0
	0x036D4494 TBNZ X8, 0x0, 0x36D44AC
	0x036D4498 ADRP X0, 0xA22000
	0x036D449C LDR X0, [X0 + 0x280]
	0x036D44A0 BL 0x1C16CF4
	0x036D44A4 MOVZ W8, 0x1
	0x036D44A8 STRB W8, [X21 + 0xAA2]
	0x036D44AC LDR X0, [X22]
	0x036D44B0 LDR W8, [X0 + 0xE0]
	0x036D44B4 CBNZ W8, 0x36D44BC
	0x036D44B8 BL 0x1C16DFC
	0x036D44BC ADD X0, X20, 0x8
	0x036D44C0 MOV X1, X19
	0x036D44C4 LDP X20, X19, [X31 + 0x20]
	0x036D44C8 LDP X22, X21, [X31 + 0x10]
	0x036D44CC MOV X2, X31
	0x036D44D0 LDR X30, [X31], #0x30
	0x036D44D4 B 0x32C477C
	0x036D44D8 SUB X31, X31, 0xB0
	0x036D44DC STR X30, [X31 + 0x60]
	0x036D44E0 STP X26, X25, [X31 + 0x70]
	0x036D44E4 STP X24, X23, [X31 + 0x80]
	0x036D44E8 STP X22, X21, [X31 + 0x90]
	0x036D44EC STP X20, X19, [X31 + 0xA0]
	0x036D44F0 ADRP X20, 0xD0C000
	0x036D44F4 LDRB W8, [X20 + 0xAA3]
	0x036D44F8 MOV X19, X0
	0x036D44FC TBNZ X8, 0x0, 0x36D4580
	0x036D4500 ADRP X0, 0xA49000
	0x036D4504 LDR X0, [X0 + 0xE48]
	0x036D4508 BL 0x1C16CF4
	0x036D450C ADRP X0, 0xA6C000
	0x036D4510 LDR X0, [X0 + 0xF0]
	0x036D4514 BL 0x1C16CF4
	0x036D4518 ADRP X0, 0xA6C000
	0x036D451C LDR X0, [X0 + 0xF8]
	0x036D4520 BL 0x1C16CF4
	0x036D4524 ADRP X0, 0xA22000
	0x036D4528 LDR X0, [X0 + 0x280]
	0x036D452C BL 0x1C16CF4
	0x036D4530 ADRP X0, 0xA27000
	0x036D4534 LDR X0, [X0 + 0x7D8]
	0x036D4538 BL 0x1C16CF4
	0x036D453C ADRP X0, 0xA4E000
	0x036D4540 LDR X0, [X0 + 0xEA0]
	0x036D4544 BL 0x1C16CF4
	0x036D4548 ADRP X0, 0xA52000
	0x036D454C LDR X0, [X0 + 0xD80]
	0x036D4550 BL 0x1C16CF4
	0x036D4554 ADRP X0, 0xA6C000
	0x036D4558 LDR X0, [X0 + 0x100]
	0x036D455C BL 0x1C16CF4
	0x036D4560 ADRP X0, 0xA6B000
	0x036D4564 LDR X0, [X0 + 0xF68]
	0x036D4568 BL 0x1C16CF4
	0x036D456C ADRP X0, 0xA49000
	0x036D4570 LDR X0, [X0 + 0xE40]
	0x036D4574 BL 0x1C16CF4
	0x036D4578 MOVZ W8, 0x1
	0x036D457C STRB W8, [X20 + 0xAA3]
	0x036D4580 STP X31, X31, [X31 + 0x50]
	0x036D4584 STP X31, X31, [X31 + 0x40]
	0x036D4588 ADRP X25, 0xA49000
	0x036D458C LDR W24, [X19]
	0x036D4590 LDR X20, [X19 + 0x20]
	0x036D4594 LDR X25, [X25 + 0xE40]
	0x036D4598 CBZ W24, 0x36D45BC
	0x036D459C CMP W24, 0x1
	0x036D45A0 B.NE 0x36D45D4
	0x036D45A4 LDR V0, [X19 + 0x7]
	0x036D45A8 MOVN W24, 0x0
	0x036D45AC STR V0, [X31 + 0x4]
	0x036D45B0 STP X31, X31, [X19 + 0x70]
	0x036D45B4 STR W24, [X19]
	0x036D45B8 B 0x36D48E4
	0x036D45BC LDUR V0, [X19 + 0x48]
	0x036D45C0 MOVN W24, 0x0
	0x036D45C4 STR V0, [X31 + 0x5]
	0x036D45C8 STP X31, X31, [X19 + 0x48]
	0x036D45CC STR W24, [X19]
	0x036D45D0 B 0x36D460C
	0x036D45D4 CBZ X20, 0x36D4B1C
	0x036D45D8 LDR X0, [X20 + 0x50]
	0x036D45DC CBZ X0, 0x36D4B20
	0x036D45E0 MOV X1, X31
	0x036D45E4 BL 0x33E20D8
	0x036D45E8 CBZ X0, 0x36D4B24
	0x036D45EC MOV W1, W31
	0x036D45F0 MOV X2, X31
	0x036D45F4 BL 0x33ED3A0
	0x036D45F8 STP X0, X1, [X31 + 0x50]
	0x036D45FC ADD X0, X31, 0x50
	0x036D4600 MOV X1, X31
	0x036D4604 BL 0x32C40D4
	0x036D4608 TBZ X0, 0x0, 0x36D4880
	0x036D460C ADD X0, X31, 0x50
	0x036D4610 MOV X1, X31
	0x036D4614 BL 0x32C40F0
	0x036D4618 ADRP X8, 0xA52000
	0x036D461C LDRB W21, [X19 + 0x28]
	0x036D4620 LDRB W22, [X19 + 0x29]
	0x036D4624 LDR X8, [X8 + 0xD80]
	0x036D4628 ADD X0, X19, 0x30
	0x036D462C LDR X1, [X8]
	0x036D4630 BL 0x25D7918
	0x036D4634 CBZ X20, 0x36D4B18
	0x036D4638 CMP W22, 0x0
	0x036D463C MOV X3, X0
	0x036D4640 MOV X4, X1
	0x036D4644 CSET W2, NE
	0x036D4648 MOV X0, X20
	0x036D464C MOV W1, W21
	0x036D4650 BL 0x36D1D50

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0xD0D000
	008 Move W8, [X23+2712]
	009 Move X19, X3
	010 Move W20, W2
	011 Move X21, X1
	012 Move X22, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0xA4F000
	018 Move X0, [X0+2344]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X23+2712], W8
	022 NotImplemented "Instruction CMP not yet implemented."
	023 Compare X19, 0
	024 JumpIfEqual {128}
	025 Move X8, -46030848
	026 Move X11, -46030848
	027 Move X12, -46030848
	028 Move W9, [X19+16]
	029 Move V0, [X8+2344]
	030 Move V1, [X11+1952]
	031 Move V2, [X12+3424]
	032 Move W10, W31
	033 Move W8, 1
	034 And W31, W9, 255
	035 Move W11, [X19+20]
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move [X19+16], W8
	038 Move W9, [X22]
	039 Add W10, W10, 1
	040 Move TEMP, X9
	041 And TEMP, TEMP, 128
	042 Compare TEMP, 128
	043 JumpIfEqual {48}
	044 Move W11, W31
	045 And W9, W9, 127
	046 Move [X19+20], W31
	047 Move [X19+24], W31
	048 And W11, W9, 192
	049 NotImplemented "Instruction CMP not yet implemented."
	050 And W11, W9, 224
	051 NotImplemented "Instruction CMP not yet implemented."
	052 And W9, W9, 31
	053 Move W11, 1
	054 Move [X19+20], D0
	055 Move [X19+28], W9
	056 Move W9, 1
	057 NotImplemented "Instruction CMP not yet implemented."
	058 NotImplemented "Instruction CSEL not yet implemented."
	059 Move W13, W31
	060 Subtract W14, W11, 1
	061 Move X12, W10
	062 Subtract W10, W10, W15
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Add W15, W11, W13
	065 NotImplemented "Instruction CMP not yet implemented."
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Move W15, [X22]
	068 And W16, W15, 192
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Move W17, [X19+28]
	071 Add W0, W14, W13
	072 Add W16, W11, W13
	073 Move [X19+20], W0
	074 NotImplemented "Instruction BFM not yet implemented."
	075 And W17, W15, 0xFFFFFFE0
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Move [X19+28], W15
	078 Subtract W17, W16, 2
	079 Compare W17, 0
	080 JumpIfEqual {118}
	081 Subtract W16, W16, 3
	082 Subtract W13, W13, 1
	083 Add X12, X12, 1
	084 Compare W16, 0
	085 JumpIfNotEqual {63}
	086 NotImplemented "Instruction CMP not yet implemented."
	087 Add W31, W11, W13
	088 Move W11, [X19+24]
	089 Move W10, [X19+28]
	090 Move W9, W31
	091 Move [X19+16], W31
	092 NotImplemented "Instruction CMP not yet implemented."
	093 NotImplemented "Instruction CMP not yet implemented."
	094 Move W10, W12
	095 And W11, W9, 240
	096 NotImplemented "Instruction CMP not yet implemented."
	097 And W11, W9, 15
	098 Move [X19+20], D1
	099 Move W9, 1
	100 Move [X19+28], W11
	101 Move W11, 2
	102 And W11, W9, 248
	103 NotImplemented "Instruction CMP not yet implemented."
	104 And W11, W9, 7
	105 Move W9, 1
	106 Move [X19+28], W11
	107 Move W11, 3
	108 Move [X19+20], D2
	109 Move TEMP, X20
	110 And TEMP, TEMP, 1
	111 Compare TEMP, 1
	112 JumpIfNotEqual {119}
	113 Compare X19, 0
	114 JumpIfEqual {128}
	115 Move W8, [X19+16]
	116 Compare W8, 0
	117 JumpIfEqual {119}
	118 Move W0, W31
	119 Move W0, 1
	120 Move X20, [X31+32]
	121 Move X19, [X31+40]
	122 Move X22, [X31+16]
	123 Move X21, [X31+24]
	124 Move X30, [X31+48]
	125 Move X23, [X31+56]
	126 Return X0
	127 Call 0x1C17F28
	128 Call 0x1C17F20

Method: System.Threading.Tasks.Task ValidateAndReceiveAsync(System.Threading.Tasks.Task receiveTask, System.Byte[] buffer, System.Threading.CancellationToken cancellationToken)

Disassembly:
	0x036D4654 ADRP X26, 0xA6B000
	0x036D4658 LDR X26, [X26 + 0xF68]
	0x036D465C MOV W21, W0
	0x036D4660 LDR X8, [X26]
	0x036D4664 LDR W9, [X8 + 0xE0]
	0x036D4668 CBNZ W9, 0x36D4678
	0x036D466C MOV X0, X8
	0x036D4670 BL 0x1C16DFC
	0x036D4674 LDR X8, [X26]
	0x036D4678 LDR X9, [X8 + 0xB8]
	0x036D467C LDR X22, [X9 + 0x18]
	0x036D4680 CBNZ X22, 0x36D46D8
	0x036D4684 LDR W9, [X8 + 0xE0]
	0x036D4688 CBNZ W9, 0x36D4698
	0x036D468C MOV X0, X8
	0x036D4690 BL 0x1C16DFC
	0x036D4694 LDR X8, [X26]
	0x036D4698 ADRP X9, 0xA49000
	0x036D469C LDR X8, [X8 + 0xB8]
	0x036D46A0 LDR X9, [X9 + 0xE48]
	0x036D46A4 LDR X23, [X8]
	0x036D46A8 LDR X0, [X9]
	0x036D46AC BL 0x1C16F10
	0x036D46B0 ADRP X8, 0xA6C000
	0x036D46B4 LDR X8, [X8 + 0x100]
	0x036D46B8 MOV X22, X0
	0x036D46BC LDR X2, [X8]
	0x036D46C0 MOV X1, X23
	0x036D46C4 MOV X3, X31
	0x036D46C8 BL 0x2A6B948
	0x036D46CC LDR X8, [X26]
	0x036D46D0 LDR X8, [X8 + 0xB8]
	0x036D46D4 STR X22, [X8 + 0x18]
	0x036D46D8 ADRP X8, 0xA27000
	0x036D46DC LDR X8, [X8 + 0x7D8]
	0x036D46E0 LDR X0, [X8]
	0x036D46E4 LDR W8, [X0 + 0xE0]
	0x036D46E8 CBNZ W8, 0x36D46F0
	0x036D46EC BL 0x1C16DFC
	0x036D46F0 ADD X0, X19, 0x40
	0x036D46F4 ADD X8, X31, 0x8
	0x036D46F8 MOV X1, X22
	0x036D46FC MOV X2, X20
	0x036D4700 MOV X3, X31
	0x036D4704 BL 0x33DD5C8
	0x036D4708 LDUR V0, [X31 + 0x8]
	0x036D470C LDR X8, [X31 + 0x18]
	0x036D4710 STR V0, [X31 + 0x2]
	0x036D4714 STR X8, [X31 + 0x30]
	0x036D4718 STR X8, [X19 + 0x68]
	0x036D471C STUR V0, [X19 + 0x58]
	0x036D4720 LDR X23, [X20 + 0x98]
	0x036D4724 LDR X22, [X20 + 0x10]
	0x036D4728 CBZ X23, 0x36D4864
	0x036D472C LDR W8, [X23 + 0x18]
	0x036D4730 CMP W21, W8
	0x036D4734 B.LS 0x36D4740
	0x036D4738 MOV X0, X31
	0x036D473C BL 0x339D6EC
	0x036D4740 UBFM X2, X21, 0x20, 0x1F
	0x036D4744 CBZ X22, 0x36D487C
	0x036D4748 LDR X8, [X22]
	0x036D474C LDR X3, [X19 + 0x40]
	0x036D4750 LDR X9, [X8 + 0x328]
	0x036D4754 LDR X4, [X8 + 0x330]
	0x036D4758 MOV X0, X22
	0x036D475C MOV X1, X23
	0x036D4760 BLR X9
	0x036D4764 MOV X21, X0
	0x036D4768 LDR X0, [X25]
	0x036D476C MOV X22, X1
	0x036D4770 LDR W8, [X0 + 0xE0]
	0x036D4774 CBNZ W8, 0x36D477C
	0x036D4778 BL 0x1C16DFC
	0x036D477C ADRP X23, 0xD08000
	0x036D4780 LDRB W8, [X23 + 0x924]
	0x036D4784 AND X9, X22, 0xFFFF
	0x036D4788 STP X21, X9, [X31 + 0x40]
	0x036D478C CBNZ W8, 0x36D47A4
	0x036D4790 ADRP X0, 0xA49000
	0x036D4794 LDR X0, [X0 + 0xE40]
	0x036D4798 BL 0x1C16CF4
	0x036D479C MOVZ W8, 0x1
	0x036D47A0 STRB W8, [X23 + 0x924]
	0x036D47A4 LDR X0, [X25]
	0x036D47A8 LDR W8, [X0 + 0xE0]
	0x036D47AC CBNZ W8, 0x36D47B4
	0x036D47B0 BL 0x1C16DFC
	0x036D47B4 ADRP X21, 0xD08000
	0x036D47B8 LDRB W8, [X21 + 0x4E4]
	0x036D47BC CBNZ W8, 0x36D47E0
	0x036D47C0 ADRP X0, 0xA4E000
	0x036D47C4 LDR X0, [X0 + 0xEA8]
	0x036D47C8 BL 0x1C16CF4
	0x036D47CC ADRP X0, 0xA20000
	0x036D47D0 LDR X0, [X0 + 0x7B8]
	0x036D47D4 BL 0x1C16CF4
	0x036D47D8 MOVZ W8, 0x1
	0x036D47DC STRB W8, [X21 + 0x4E4]
	0x036D47E0 LDR X21, [X31 + 0x40]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+48], X30
	003 Move [X31+64], X24
	004 Move [X31+72], X23
	005 Move [X31+80], X22
	006 Move [X31+88], X21
	007 Move [X31+96], X20
	008 Move [X31+104], X19
	009 Move X23, 0xD0D000
	010 Move W8, [X23+2713]
	011 Move X19, X3
	012 Move X21, X2
	013 Move X22, X1
	014 Move X20, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {39}
	019 Move X0, 0xA2B000
	020 Move X0, [X0+3688]
	021 Call 0x1C17CF4
	022 Move X0, 0xA6C000
	023 Move X0, [X0+4080]
	024 Call 0x1C17CF4
	025 Move X0, 0xA6C000
	026 Move X0, [X0+4088]
	027 Call 0x1C17CF4
	028 Move X0, 0xA60000
	029 Move X0, [X0+3456]
	030 Call 0x1C17CF4
	031 Move X0, 0xA6D000
	032 Move X0, [X0+184]
	033 Call 0x1C17CF4
	034 Move X0, 0xA6D000
	035 Move X0, [X0]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X23+2713], W8
	039 Move [X31+24], X31
	040 Move [X31+32], X31
	041 Move [X31+40], X31
	042 Compare X22, 0
	043 JumpIfEqual {68}
	044 Move X0, X22
	045 Move X1, X31
	046 Call Task.get_Status, X0
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Move X8, 0xA6D000
	049 Move X8, [X8+184]
	050 Move X9, [X22]
	051 Move X8, [X8]
	052 Move W11, [X9+304]
	053 Move W10, [X8+304]
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Move X9, [X9+200]
	056 Add X9, X9, X10
	057 NotImplemented "Instruction LDUR not yet implemented."
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Move X8, 0xA60000
	060 Move X8, [X8+3456]
	061 Move X0, X22
	062 Move X1, [X8]
	063 Call Task`1<Object>.get_Result, X0
	064 Compare X0, 0
	065 JumpIfEqual {110}
	066 Move W8, [X0+24]
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Move X8, 0xA2B000
	069 Move X8, [X8+3688]
	070 Move X22, 0xA6C000
	071 Move X23, 0xA6C000
	072 Move X22, [X22+4088]
	073 Move X23, [X23+4080]
	074 Move X2, [X8]
	075 Move X24, 0xA6D000
	076 Move X24, [X24]
	077 Add X0, X31, 8
	078 Move X1, X21
	079 Move [X31+8], X31
	080 Move [X31+16], X31
	081 Call 0x2B88B6C, X0, X1
	082 Move X0, [X31+8]
	083 Move X1, [X31+16]
	084 Move X2, [X22]
	085 Call 0x319EBE4, X0
	086 Move X5, [X23]
	087 Move X2, X0
	088 Move X3, X1
	089 Add X8, X31, 24
	090 Move X0, X20
	091 Move X1, X2
	092 Move X2, X3
	093 Move X3, X19
	094 Move X4, X31
	095 Call ManagedWebSocket.ReceiveAsyncPrivate, X0, X1, X2, X3
	096 Move X1, [X24]
	097 Add X0, X31, 24
	098 Call ValueTask`1<Object>.AsTask, X0
	099 Move X22, X0
	100 Move X0, X22
	101 Move X20, [X31+96]
	102 Move X19, [X31+104]
	103 Move X22, [X31+80]
	104 Move X21, [X31+88]
	105 Move X24, [X31+64]
	106 Move X23, [X31+72]
	107 Move X30, [X31+48]
	108 Add X31, X31, 112
	109 Return X0
	110 Call 0x1C17F20

Method: System.Void .cctor()

Disassembly:
	0x036D47E4 CBZ X21, 0x36D48E4
	0x036D47E8 ADRP X9, 0xA20000
	0x036D47EC LDR X9, [X9 + 0x7B8]
	0x036D47F0 LDR X8, [X21]
	0x036D47F4 LDR X9, [X9]
	0x036D47F8 LDRB W11, [X8 + 0x130]
	0x036D47FC LDRB W10, [X9 + 0x130]
	0x036D4800 CMP W11, W10
	0x036D4804 B.CC 0x36D481C
	0x036D4808 LDR X11, [X8 + 0xC8]
	0x036D480C ADD X10, X11, X10, 0x3, LSL
	0x036D4810 LDUR X10, [X10 - 0x8]
	0x036D4814 CMP X10, X9
	0x036D4818 B.EQ 0x36D4A98
	0x036D481C ADRP X10, 0xA4E000
	0x036D4820 LDRH W22, [X31 + 0x48]
	0x036D4824 LDR X10, [X10 + 0xEA8]
	0x036D4828 LDRH W9, [X8 + 0x12E]
	0x036D482C LDR X1, [X10]
	0x036D4830 CBZ X9, 0x36D4854
	0x036D4834 LDR X10, [X8 + 0xB0]
	0x036D4838 ADD X10, X10, 0x8
	0x036D483C LDUR X11, [X10 - 0x8]
	0x036D4840 CMP X11, X1
	0x036D4844 B.EQ 0x36D48C4
	0x036D4848 SUBS X9, X9, 0x1
	0x036D484C ADD X10, X10, 0x10
	0x036D4850 B.NE 0x36D483C
	0x036D4854 MOV X0, X21
	0x036D4858 MOV W2, W31
	0x036D485C BL 0x1C5C788
	0x036D4860 B 0x36D48D0
	0x036D4864 CBZ W21, 0x36D4870
	0x036D4868 MOV X0, X31
	0x036D486C BL 0x339D6EC
	0x036D4870 MOV X23, X31
	0x036D4874 MOV X2, X31
	0x036D4878 CBNZ X22, 0x36D4748
	0x036D487C BL 0x1C16F20
	0x036D4880 STR W31, [X19]
	0x036D4884 LDR V0, [X31 + 0x5]
	0x036D4888 ADRP X8, 0xA22000
	0x036D488C STUR V0, [X19 + 0x48]
	0x036D4890 LDR X8, [X8 + 0x280]
	0x036D4894 LDR X0, [X8]
	0x036D4898 LDR W8, [X0 + 0xE0]
	0x036D489C CBNZ W8, 0x36D48A4
	0x036D48A0 BL 0x1C16DFC
	0x036D48A4 ADRP X8, 0xA6C000
	0x036D48A8 LDR X8, [X8 + 0xF0]
	0x036D48AC ADD X0, X19, 0x8
	0x036D48B0 LDR X3, [X8]
	0x036D48B4 ADD X1, X31, 0x50
	0x036D48B8 MOV X2, X19
	0x036D48BC BL 0x218BE08
	0x036D48C0 B 0x36D4AEC
	0x036D48C4 LDRSW X9, [X10]
	0x036D48C8 ADD X8, X8, X9, 0x4, LSL
	0x036D48CC ADD X0, X8, 0x138
	0x036D48D0 LDP X8, X2, [X0]
	0x036D48D4 MOV X0, X21
	0x036D48D8 MOV W1, W22
	0x036D48DC BLR X8
	0x036D48E0 CBZ W0, 0x36D4AA8
	0x036D48E4 ADRP X21, 0xD08000
	0x036D48E8 LDRB W8, [X21 + 0x925]
	0x036D48EC CBNZ W8, 0x36D4904
	0x036D48F0 ADRP X0, 0xA49000
	0x036D48F4 LDR X0, [X0 + 0xE40]
	0x036D48F8 BL 0x1C16CF4
	0x036D48FC MOVZ W8, 0x1
	0x036D4900 STRB W8, [X21 + 0x925]
	0x036D4904 LDR X0, [X25]
	0x036D4908 LDR W8, [X0 + 0xE0]
	0x036D490C CBNZ W8, 0x36D4914
	0x036D4910 BL 0x1C16DFC
	0x036D4914 ADRP X21, 0xD08000
	0x036D4918 LDRB W8, [X21 + 0x4E6]
	0x036D491C CBNZ W8, 0x36D4940
	0x036D4920 ADRP X0, 0xA4E000
	0x036D4924 LDR X0, [X0 + 0xEA8]
	0x036D4928 BL 0x1C16CF4
	0x036D492C ADRP X0, 0xA20000
	0x036D4930 LDR X0, [X0 + 0x7B8]
	0x036D4934 BL 0x1C16CF4
	0x036D4938 MOVZ W8, 0x1
	0x036D493C STRB W8, [X21 + 0x4E6]
	0x036D4940 LDR X21, [X31 + 0x40]
	0x036D4944 CBZ X21, 0x36D49E4
	0x036D4948 ADRP X9, 0xA20000
	0x036D494C LDR X9, [X9 + 0x7B8]
	0x036D4950 LDR X8, [X21]
	0x036D4954 LDR X9, [X9]
	0x036D4958 LDRB W11, [X8 + 0x130]
	0x036D495C LDRB W10, [X9 + 0x130]
	0x036D4960 CMP W11, W10
	0x036D4964 B.CC 0x36D497C
	0x036D4968 LDR X11, [X8 + 0xC8]
	0x036D496C ADD X10, X11, X10, 0x3, LSL
	0x036D4970 LDUR X10, [X10 - 0x8]
	0x036D4974 CMP X10, X9
	0x036D4978 B.EQ 0x36D4A88
	0x036D497C ADRP X10, 0xA4E000
	0x036D4980 LDRH W22, [X31 + 0x48]
	0x036D4984 LDR X10, [X10 + 0xEA8]
	0x036D4988 LDRH W9, [X8 + 0x12E]
	0x036D498C LDR X1, [X10]
	0x036D4990 CBZ X9, 0x36D49B4
	0x036D4994 LDR X10, [X8 + 0xB0]
	0x036D4998 ADD X10, X10, 0x8
	0x036D499C LDUR X11, [X10 - 0x8]
	0x036D49A0 CMP X11, X1
	0x036D49A4 B.EQ 0x36D49C4
	0x036D49A8 SUBS X9, X9, 0x1
	0x036D49AC ADD X10, X10, 0x10
	0x036D49B0 B.NE 0x36D499C
	0x036D49B4 MOVZ W2, 0x2
	0x036D49B8 MOV X0, X21
	0x036D49BC BL 0x1C5C788
	0x036D49C0 B 0x36D49D4
	0x036D49C4 LDR W9, [X10]
	0x036D49C8 ADD W9, W9, 0x2
	0x036D49CC ADD X8, X8, W9, 0x4, SXTW
	0x036D49D0 ADD X0, X8, 0x138
	0x036D49D4 LDP X8, X2, [X0]
	0x036D49D8 MOV X0, X21
	0x036D49DC MOV W1, W22
	0x036D49E0 BLR X8
	0x036D49E4 MOV X23, X31
	0x036D49E8 MOVZ W21, 0xA
	0x036D49EC TBZ X24, 0x1F, 0x36D49FC
	0x036D49F0 ADD X0, X19, 0x58
	0x036D49F4 MOV X1, X31
	0x036D49F8 BL 0x33DF6F0
	0x036D49FC CBNZ X23, 0x36D4B10
	0x036D4A00 CMP W21, 0xA
	0x036D4A04 B.EQ 0x36D4A0C
	0x036D4A08 CBNZ W21, 0x36D4A24
	0x036D4A0C MOV X23, X31
	0x036D4A10 STP X31, X31, [X19 + 0x58]
	0x036D4A14 STR X31, [X19 + 0x68]
	0x036D4A18 MOVZ W21, 0x15

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0xD0D000
	009 Move X20, 0xA49000
	010 Move X19, 0xA4F000
	011 Move X21, 0xA6D000
	012 Move W8, [X22+2714]
	013 Move X20, [X20+2912]
	014 Move X19, [X19+2088]
	015 Move X21, [X21+192]
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {43}
	020 Move X0, 0xA49000
	021 Move X0, [X0+2912]
	022 Call 0x1C17CF4
	023 Move X0, 0xA6D000
	024 Move X0, [X0+200]
	025 Call 0x1C17CF4
	026 Move X0, 0xA21000
	027 Move X0, [X0+1976]
	028 Call 0x1C17CF4
	029 Move X0, 0xA6D000
	030 Move X0, [X0+208]
	031 Call 0x1C17CF4
	032 Move X0, 0xA4F000
	033 Move X0, [X0+2088]
	034 Call 0x1C17CF4
	035 Move X0, 0xA5E000
	036 Move X0, [X0+2480]
	037 Call 0x1C17CF4
	038 Move X0, 0xA6D000
	039 Move X0, [X0+192]
	040 Call 0x1C17CF4
	041 Move W8, 1
	042 Move [X22+2714], W8
	043 Move X0, X31
	044 Call RandomNumberGenerator.Create
	045 Move X8, [X20]
	046 Move X8, [X8+184]
	047 Move [X8], X0
	048 Move X0, [X19]
	049 Call 0x1C17F10
	050 Move W2, 1
	051 Move W1, W31
	052 Move X3, X31
	053 Move X19, X0
	054 Call UTF8Encoding..ctor, X0, X1, X2
	055 Move X8, [X20]
	056 Move W1, 2
	057 Move X8, [X8+184]
	058 Move [X8+8], X19
	059 Move X0, [X21]
	060 Call 0x1C17D6C
	061 Compare X0, 0
	062 JumpIfEqual {155}
	063 Move W8, [X0+24]
	064 Compare W8, 0
	065 JumpIfEqual {154}
	066 Move W9, 2
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Move [X0+32], W9
	069 Move W8, 4
	070 Move [X0+36], W8
	071 Move X8, [X20]
	072 Move W1, 2
	073 Move X8, [X8+184]
	074 Move [X8+16], X0
	075 Move X0, [X21]
	076 Call 0x1C17D6C
	077 Compare X0, 0
	078 JumpIfEqual {155}
	079 Move W8, [X0+24]
	080 Compare W8, 0
	081 JumpIfEqual {154}
	082 Move W9, 2
	083 NotImplemented "Instruction CMP not yet implemented."
	084 Move [X0+32], W9
	085 Move W8, 3
	086 Move [X0+36], W8
	087 Move X8, [X20]
	088 Move W1, 2
	089 Move X8, [X8+184]
	090 Move [X8+24], X0
	091 Move X0, [X21]
	092 Call 0x1C17D6C
	093 Compare X0, 0
	094 JumpIfEqual {155}
	095 Move W8, [X0+24]
	096 Compare W8, 0
	097 JumpIfEqual {154}
	098 Move W22, 2
	099 NotImplemented "Instruction CMP not yet implemented."
	100 Move [X0+32], W22
	101 Move W8, 4
	102 Move [X0+36], W8
	103 Move X8, [X20]
	104 Move X19, 0xA6D000
	105 Move X23, 0xA5E000
	106 Move X24, 0xA21000
	107 Move X8, [X8+184]
	108 Move X19, [X19+208]
	109 Move W1, 3
	110 Move [X8+32], X0
	111 Move X0, [X21]
	112 Move X21, 0xA6D000
	113 Move X23, [X23+2480]
	114 Move X24, [X24+1976]
	115 Move X21, [X21+200]
	116 Call 0x1C17D6C
	117 Move X1, [X19]
	118 Move X2, X31
	119 Move X19, X0
	120 Call RuntimeHelpers.InitializeArray, X0, X1
	121 Move X8, [X20]
	122 Move X8, [X8+184]
	123 Move [X8+40], X19
	124 Move X0, [X23]
	125 Call 0x1C17F10
	126 Move X1, X31
	127 Move X19, X0
	128 Call Object..ctor, X0
	129 Move W8, 1
	130 Move [X19+16], W31
	131 Move [X19+24], W22
	132 Move [X19+28], X31
	133 Move [X19+20], W8
	134 Move [X19+40], X31
	135 Move X0, [X24]
	136 Move W8, [X0+224]
	137 Compare W8, 0
	138 JumpIfNotEqual {140}
	139 Call 0x1C17DFC
	140 Move X1, [X21]
	141 Move X0, X19
	142 Call Task.FromResult, X0
	143 Move X8, [X20]
	144 Move X20, [X31+48]
	145 Move X19, [X31+56]
	146 Move X22, [X31+32]
	147 Move X21, [X31+40]
	148 Move X24, [X31+16]
	149 Move X23, [X31+24]
	150 Move X8, [X8+184]
	151 Move [X8+48], X0
	152 Move X30, [X31+64]
	153 Return 
	154 Call 0x1C17F28
	155 Call 0x1C17F20

