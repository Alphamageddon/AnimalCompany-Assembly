Type: System.Net.WebSockets.WebSocketHandle/<ReadResponseHeaderLineAsync>d__32

Method: System.Void MoveNext()

Disassembly:
	0x036DDE14 ADRP X0, 0xA20000
	0x036DDE18 LDR X0, [X0 + 0xEC8]
	0x036DDE1C BL 0x1C16D08
	0x036DDE20 MOV X2, X0
	0x036DDE24 MOV X0, X20
	0x036DDE28 MOV X1, X19
	0x036DDE2C MOV X3, X31
	0x036DDE30 BL 0x330E16C
	0x036DDE34 ADRP X0, 0xA63000
	0x036DDE38 LDR X0, [X0 + 0x488]
	0x036DDE3C BL 0x1C16D08
	0x036DDE40 MOV X1, X0
	0x036DDE44 MOV X0, X20
	0x036DDE48 BL 0x1C16DEC
	0x036DDE4C STR X30, [X31 - 0x20]!
	0x036DDE50 STP X20, X19, [X31 + 0x10]
	0x036DDE54 CMP W1, 0x3
	0x036DDE58 B.CS 0x36DDE6C
	0x036DDE5C LDP X20, X19, [X31 + 0x10]
	0x036DDE60 STR W1, [X0 + 0x18]
	0x036DDE64 LDR X30, [X31], #0x20
	0x036DDE68 RET
	0x036DDE6C ADRP X0, 0xA63000
	0x036DDE70 LDR X0, [X0 + 0x460]
	0x036DDE74 BL 0x1C16D08
	0x036DDE78 MOV X19, X0
	0x036DDE7C ADRP X0, 0xA63000
	0x036DDE80 LDR X0, [X0 + 0x478]
	0x036DDE84 BL 0x1C16D08
	0x036DDE88 MOV X1, X0
	0x036DDE8C MOV X0, X19
	0x036DDE90 MOV X2, X31
	0x036DDE94 BL 0x32094D4
	0x036DDE98 MOV X19, X0
	0x036DDE9C ADRP X0, 0xA1E000
	0x036DDEA0 LDR X0, [X0 + 0x578]
	0x036DDEA4 BL 0x1C16D08
	0x036DDEA8 BL 0x1C16F10
	0x036DDEAC MOV X20, X0
	0x036DDEB0 ADRP X0, 0xA20000
	0x036DDEB4 LDR X0, [X0 + 0xEC8]
	0x036DDEB8 BL 0x1C16D08
	0x036DDEBC MOV X2, X0
	0x036DDEC0 MOV X0, X20
	0x036DDEC4 MOV X1, X19
	0x036DDEC8 MOV X3, X31
	0x036DDECC BL 0x330E16C
	0x036DDED0 ADRP X0, 0xA63000
	0x036DDED4 LDR X0, [X0 + 0x490]
	0x036DDED8 BL 0x1C16D08
	0x036DDEDC MOV X1, X0
	0x036DDEE0 MOV X0, X20
	0x036DDEE4 BL 0x1C16DEC
	0x036DDEE8 MOVZ W8, 0x1
	0x036DDEEC MOV X1, X31
	0x036DDEF0 STRB W8, [X0 + 0x1C]
	0x036DDEF4 B 0x33BDD8C
	0x036DDEF8 STP X30, X23, [X31 - 0x30]!
	0x036DDEFC STP X22, X21, [X31 + 0x10]
	0x036DDF00 STP X20, X19, [X31 + 0x20]
	0x036DDF04 ADRP X23, 0xD03000
	0x036DDF08 ADRP X22, 0xA45000
	0x036DDF0C LDRB W8, [X23 + 0xAE4]
	0x036DDF10 LDR X22, [X22 + 0xD10]
	0x036DDF14 MOV W21, W2
	0x036DDF18 MOV X20, X1
	0x036DDF1C MOV X19, X0
	0x036DDF20 TBNZ X8, 0x0, 0x36DDF38
	0x036DDF24 ADRP X0, 0xA45000
	0x036DDF28 LDR X0, [X0 + 0xD10]
	0x036DDF2C BL 0x1C16CF4
	0x036DDF30 MOVZ W8, 0x1
	0x036DDF34 STRB W8, [X23 + 0xAE4]
	0x036DDF38 LDR X0, [X22]
	0x036DDF3C LDR W8, [X0 + 0xE0]
	0x036DDF40 CBNZ W8, 0x36DDF48
	0x036DDF44 BL 0x1C16DFC
	0x036DDF48 MOV X0, X19
	0x036DDF4C MOV X1, X31
	0x036DDF50 BL 0x32F27B0
	0x036DDF54 CBZ X20, 0x36DDFDC
	0x036DDF58 LDR X0, [X22]
	0x036DDF5C LDR W8, [X0 + 0xE0]
	0x036DDF60 CBNZ W8, 0x36DDF6C
	0x036DDF64 BL 0x1C16DFC
	0x036DDF68 LDR X0, [X22]
	0x036DDF6C LDR X8, [X0 + 0xB8]
	0x036DDF70 LDR X8, [X8]
	0x036DDF74 CMP X20, X8
	0x036DDF78 B.EQ 0x36DDFDC
	0x036DDF7C LDR W8, [X0 + 0xE0]
	0x036DDF80 CBNZ W8, 0x36DDF88
	0x036DDF84 BL 0x1C16DFC
	0x036DDF88 LDR X8, [X20]
	0x036DDF8C MOV X0, X20
	0x036DDF90 LDP X9, X1, [X8 + 0x1A8]
	0x036DDF94 BLR X9
	0x036DDF98 TBZ X0, 0x0, 0x36DE024
	0x036DDF9C LDR X0, [X22]
	0x036DDFA0 LDR W8, [X0 + 0xE0]
	0x036DDFA4 CBNZ W8, 0x36DDFAC
	0x036DDFA8 BL 0x1C16DFC
	0x036DDFAC LDR X8, [X20]
	0x036DDFB0 MOV X0, X20
	0x036DDFB4 LDP X9, X1, [X8 + 0x1D8]
	0x036DDFB8 BLR X9
	0x036DDFBC TBZ X0, 0x0, 0x36DE024
	0x036DDFC0 AND W8, W21, 0x1
	0x036DDFC4 STR X20, [X19 + 0x28]
	0x036DDFC8 STRB W8, [X19 + 0x30]
	0x036DDFCC LDP X20, X19, [X31 + 0x20]
	0x036DDFD0 LDP X22, X21, [X31 + 0x10]
	0x036DDFD4 LDP X30, X23, [X31], #0x30
	0x036DDFD8 RET
	0x036DDFDC ADRP X0, 0xA1B000
	0x036DDFE0 LDR X0, [X0 + 0x528]
	0x036DDFE4 BL 0x1C16D08
	0x036DDFE8 BL 0x1C16F10
	0x036DDFEC MOV X19, X0
	0x036DDFF0 ADRP X0, 0xA63000
	0x036DDFF4 LDR X0, [X0 + 0x320]
	0x036DDFF8 BL 0x1C16D08
	0x036DDFFC MOV X1, X0
	0x036DE000 MOV X0, X19
	0x036DE004 MOV X2, X31
	0x036DE008 BL 0x330E100
	0x036DE00C ADRP X0, 0xA62000
	0x036DE010 LDR X0, [X0 + 0x498]
	0x036DE014 BL 0x1C16D08
	0x036DE018 MOV X1, X0
	0x036DE01C MOV X0, X19
	0x036DE020 BL 0x1C16DEC
	0x036DE024 ADRP X0, 0xA62000
	0x036DE028 LDR X0, [X0 + 0x4A0]
	0x036DE02C BL 0x1C16D08
	0x036DE030 MOV X1, X31
	0x036DE034 BL 0x320A1E4
	0x036DE038 MOV X19, X0
	0x036DE03C ADRP X0, 0xA1D000
	0x036DE040 LDR X0, [X0 + 0x578]
	0x036DE044 BL 0x1C16D08
	0x036DE048 BL 0x1C16F10
	0x036DE04C MOV X20, X0
	0x036DE050 ADRP X0, 0xA62000
	0x036DE054 LDR X0, [X0 + 0x320]
	0x036DE058 BL 0x1C16D08
	0x036DE05C MOV X2, X0
	0x036DE060 MOV X0, X20
	0x036DE064 MOV X1, X19
	0x036DE068 MOV X3, X31
	0x036DE06C BL 0x330E16C
	0x036DE070 ADRP X0, 0xA62000
	0x036DE074 LDR X0, [X0 + 0x498]
	0x036DE078 BL 0x1C16D08
	0x036DE07C MOV X1, X0
	0x036DE080 MOV X0, X20
	0x036DE084 BL 0x1C16DEC
	0x036DE088 LDR X0, [X0 + 0x28]
	0x036DE08C RET
	0x036DE090 STP X30, X21, [X31 - 0x20]!
	0x036DE094 STP X20, X19, [X31 + 0x10]
	0x036DE098 MOV W20, W1
	0x036DE09C MOV X19, X0
	0x036DE0A0 TBZ X1, 0x0, 0x36DE0DC
	0x036DE0A4 LDRB W8, [X19 + 0x30]
	0x036DE0A8 LDR X0, [X19 + 0x28]
	0x036DE0AC CBZ W8, 0x36DE0C8
	0x036DE0B0 CBZ X0, 0x36DE0F4
	0x036DE0B4 LDR X8, [X0]
	0x036DE0B8 LDR X1, [X8 + 0x2A0]
	0x036DE0BC LDR X9, [X8 + 0x298]
	0x036DE0C0 BLR X9
	0x036DE0C4 B 0x36DE0DC
	0x036DE0C8 CBZ X0, 0x36DE0F8
	0x036DE0CC LDR X8, [X0]
	0x036DE0D0 LDR X1, [X8 + 0x280]
	0x036DE0D4 LDR X9, [X8 + 0x278]
	0x036DE0D8 BLR X9
	0x036DE0DC AND W1, W20, 0x1
	0x036DE0E0 MOV X0, X19
	0x036DE0E4 LDP X20, X19, [X31 + 0x10]
	0x036DE0E8 MOV X2, X31
	0x036DE0EC LDP X30, X21, [X31], #0x20
	0x036DE0F0 B 0x32F02C8
	0x036DE0F4 BL 0x1C16F20
	0x036DE0F8 BL 0x1C16F20
	0x036DE0FC B 0x36DE100
	0x036DE100 MOV X21, X0
	0x036DE104 CMP W1, 0x1
	0x036DE108 B.NE 0x36DE13C
	0x036DE10C MOV X0, X21
	0x036DE110 BL 0x3EB1AD0
	0x036DE114 LDR X20, [X0]
	0x036DE118 BL 0x3EB1AE0
	0x036DE11C MOVZ W1, 0x1
	0x036DE120 MOV X0, X19
	0x036DE124 MOV X2, X31
	0x036DE128 BL 0x32F02C8
	0x036DE12C CBNZ X20, 0x36DE144
	0x036DE130 LDP X20, X19, [X31 + 0x10]
	0x036DE134 LDP X30, X21, [X31], #0x20
	0x036DE138 RET
	0x036DE13C MOV X20, X31
	0x036DE140 B 0x36DE150
	0x036DE144 MOV X0, X20
	0x036DE148 BL 0x1C16F18
	0x036DE14C MOV X21, X0
	0x036DE150 MOVZ W1, 0x1
	0x036DE154 MOV X0, X19
	0x036DE158 MOV X2, X31
	0x036DE15C BL 0x32F02C8
	0x036DE160 CBNZ X20, 0x36DE16C
	0x036DE164 MOV X0, X21
	0x036DE168 BL 0x1D2C690
	0x036DE16C MOV X0, X20
	0x036DE170 BL 0x1C16F18
	0x036DE174 BL 0x1990590
	0x036DE178 STR X30, [X31 - 0x30]!
	0x036DE17C STP X22, X21, [X31 + 0x10]
	0x036DE180 STP X20, X19, [X31 + 0x20]
	0x036DE184 LDR X8, [X2 + 0x8]
	0x036DE188 STP X1, X2, [X0 + 0x20]
	0x036DE18C MOV X19, X0
	0x036DE190 MOV X20, X2
	0x036DE194 STR X8, [X0 + 0x10]
	0x036DE198 LDRB W22, [X2 + 0x52]
	0x036DE19C STR X0, [X0 + 0x40]
	0x036DE1A0 MOV X0, X2
	0x036DE1A4 MOV X21, X1
	0x036DE1A8 BL 0x1C16D84
	0x036DE1AC TBZ X0, 0x0, 0x36DE1C4
	0x036DE1B0 CMP W22, 0x5
	0x036DE1B4 B.NE 0x36DE200
	0x036DE1B8 ADRP X8, 0xFFFFFFFFFE4E9000
	0x036DE1BC ADD X8, X8, 0xA5C
	0x036DE1C0 B 0x36DE244
	0x036DE1C4 CMP W22, 0x4
	0x036DE1C8 B.NE 0x36DE1FC
	0x036DE1CC LDRB W8, [X19 + 0x70]
	0x036DE1D0 CBZ W8, 0x36DE214
	0x036DE1D4 MOV X0, X20
	0x036DE1D8 BL 0x1C16D7C
	0x036DE1DC MOV W21, W0
	0x036DE1E0 MOV X0, X20
	0x036DE1E4 BL 0x1C17238
	0x036DE1E8 TBZ X21, 0x0, 0x36DE220
	0x036DE1EC TBZ X0, 0x0, 0x36DE230
	0x036DE1F0 ADRP X8, 0xFFFFFFFFFE4E9000
	0x036DE1F4 ADD X8, X8, 0xBD8
	0x036DE1F8 B 0x36DE244
	0x036DE1FC CBZ X21, 0x36DE264
	0x036DE200 LDR X8, [X19 + 0x10]
	0x036DE204 LDR X9, [X19 + 0x20]
	0x036DE208 STR X8, [X19 + 0x18]
	0x036DE20C STR X9, [X19 + 0x40]
	0x036DE210 B 0x36DE248
	0x036DE214 ADRP X8, 0xFFFFFFFFFE4E9000
	0x036DE218 ADD X8, X8, 0xA2C
	0x036DE21C B 0x36DE244
	0x036DE220 TBZ X0, 0x0, 0x36DE23C
	0x036DE224 ADRP X8, 0xFFFFFFFFFE4E9000
	0x036DE228 ADD X8, X8, 0xAB8
	0x036DE22C B 0x36DE244
	0x036DE230 ADRP X8, 0xFFFFFFFFFE4E9000
	0x036DE234 ADD X8, X8, 0xB6C
	0x036DE238 B 0x36DE244
	0x036DE23C ADRP X8, 0xFFFFFFFFFE4E9000
	0x036DE240 ADD X8, X8, 0xA7C
	0x036DE244 STR X8, [X19 + 0x18]
	0x036DE248 ADRP X8, 0xFFFFFFFFFE4E9000
	0x036DE24C ADD X8, X8, 0x9AC
	0x036DE250 STR X8, [X19 + 0x38]
	0x036DE254 LDP X20, X19, [X31 + 0x20]
	0x036DE258 LDP X22, X21, [X31 + 0x10]
	0x036DE25C LDR X30, [X31], #0x30
	0x036DE260 RET
	0x036DE264 ADRP X1, 0xFFFFFFFFFD43D000
	0x036DE268 ADD X1, X1, 0xEE3
	0x036DE26C MOV X0, X31
	0x036DE270 BL 0x1C16F3C
	0x036DE274 MOV X1, X31
	0x036DE278 BL 0x1C16DEC
	0x036DE27C LDR X8, [X0 + 0x40]
	0x036DE280 LDR X7, [X0 + 0x18]
	0x036DE284 LDR X6, [X0 + 0x28]
	0x036DE288 MOV X0, X8
	0x036DE28C BR X7
	0x036DE290 STR X30, [X31 - 0x30]!
	0x036DE294 STP X22, X21, [X31 + 0x10]
	0x036DE298 STP X20, X19, [X31 + 0x20]
	0x036DE29C LDR X8, [X2 + 0x8]
	0x036DE2A0 STP X1, X2, [X0 + 0x20]
	0x036DE2A4 MOV X19, X0
	0x036DE2A8 MOV X20, X2
	0x036DE2AC STR X8, [X0 + 0x10]
	0x036DE2B0 LDRB W22, [X2 + 0x52]
	0x036DE2B4 STR X0, [X0 + 0x40]
	0x036DE2B8 MOV X0, X2
	0x036DE2BC MOV X21, X1
	0x036DE2C0 BL 0x1C16D84
	0x036DE2C4 TBZ X0, 0x0, 0x36DE2DC
	0x036DE2C8 CMP W22, 0x4
	0x036DE2CC B.NE 0x36DE318
	0x036DE2D0 ADRP X8, 0xFFFFFFFFFE4E9000
	0x036DE2D4 ADD X8, X8, 0xD3C
	0x036DE2D8 B 0x36DE35C
	0x036DE2DC CMP W22, 0x3
	0x036DE2E0 B.NE 0x36DE314
	0x036DE2E4 LDRB W8, [X19 + 0x70]
	0x036DE2E8 CBZ W8, 0x36DE32C
	0x036DE2EC MOV X0, X20
	0x036DE2F0 BL 0x1C16D7C
	0x036DE2F4 MOV W21, W0
	0x036DE2F8 MOV X0, X20
	0x036DE2FC BL 0x1C17238
	0x036DE300 TBZ X21, 0x0, 0x36DE338
	0x036DE304 TBZ X0, 0x0, 0x36DE348
	0x036DE308 ADRP X8, 0xFFFFFFFFFE4E9000
	0x036DE30C ADD X8, X8, 0xE98
	0x036DE310 B 0x36DE35C
	0x036DE314 CBZ X21, 0x36DE37C
	0x036DE318 LDR X8, [X19 + 0x10]
	0x036DE31C LDR X9, [X19 + 0x20]
	0x036DE320 STR X8, [X19 + 0x18]
	0x036DE324 STR X9, [X19 + 0x40]
	0x036DE328 B 0x36DE360
	0x036DE32C ADRP X8, 0xFFFFFFFFFE4E9000
	0x036DE330 ADD X8, X8, 0xD10
	0x036DE334 B 0x36DE35C
	0x036DE338 TBZ X0, 0x0, 0x36DE354
	0x036DE33C ADRP X8, 0xFFFFFFFFFE4E9000
	0x036DE340 ADD X8, X8, 0xD90
	0x036DE344 B 0x36DE35C
	0x036DE348 ADRP X8, 0xFFFFFFFFFE4E9000
	0x036DE34C ADD X8, X8, 0xE34
	0x036DE350 B 0x36DE35C
	0x036DE354 ADRP X8, 0xFFFFFFFFFE4E9000
	0x036DE358 ADD X8, X8, 0xD58
	0x036DE35C STR X8, [X19 + 0x18]
	0x036DE360 ADRP X8, 0xFFFFFFFFFE4E9000
	0x036DE364 ADD X8, X8, 0xC94
	0x036DE368 STR X8, [X19 + 0x38]
	0x036DE36C LDP X20, X19, [X31 + 0x20]
	0x036DE370 LDP X22, X21, [X31 + 0x10]
	0x036DE374 LDR X30, [X31], #0x30
	0x036DE378 RET
	0x036DE37C ADRP X1, 0xFFFFFFFFFD43D000
	0x036DE380 ADD X1, X1, 0xEE3
	0x036DE384 MOV X0, X31
	0x036DE388 BL 0x1C16F3C
	0x036DE38C MOV X1, X31
	0x036DE390 BL 0x1C16DEC
	0x036DE394 LDR X8, [X0 + 0x40]
	0x036DE398 LDR X6, [X0 + 0x18]
	0x036DE39C LDR X5, [X0 + 0x28]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+32], X30
	003 Move [X31+48], X24
	004 Move [X31+56], X23
	005 Move [X31+64], X22
	006 Move [X31+72], X21
	007 Move [X31+80], X20
	008 Move [X31+88], X19
	009 Move X20, 0xD04000
	010 Move W8, [X20+2777]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {48}
	016 Move X0, 0xA64000
	017 Move X0, [X0+1000]
	018 Call 0x1C17CF4
	019 Move X0, 0xA1A000
	020 Move X0, [X0+352]
	021 Call 0x1C17CF4
	022 Move X0, 0xA1A000
	023 Move X0, [X0+304]
	024 Call 0x1C17CF4
	025 Move X0, 0xA17000
	026 Move X0, [X0+1560]
	027 Call 0x1C17CF4
	028 Move X0, 0xA4B000
	029 Move X0, [X0+696]
	030 Call 0x1C17CF4
	031 Move X0, 0xA4B000
	032 Move X0, [X0+704]
	033 Call 0x1C17CF4
	034 Move X0, 0xA4B000
	035 Move X0, [X0+712]
	036 Call 0x1C17CF4
	037 Move X0, 0xA17000
	038 Move X0, [X0+2288]
	039 Call 0x1C17CF4
	040 Move X0, 0xA4B000
	041 Move X0, [X0+720]
	042 Call 0x1C17CF4
	043 Move X0, 0xA64000
	044 Move X0, [X0+424]
	045 Call 0x1C17CF4
	046 Move W8, 1
	047 Move [X20+2777], W8
	048 Move [X31+16], X31
	049 Move [X31+24], X31
	050 Move [X31+8], W31
	051 Move X23, 0xA64000
	052 Move W24, [X19]
	053 Move X23, [X23+424]
	054 Compare W24, 0
	055 JumpIfEqual {77}
	056 Move X0, [X23]
	057 Move W8, [X0+224]
	058 Compare W8, 0
	059 JumpIfNotEqual {62}
	060 Call 0x1C17DFC
	061 Move X0, [X23]
	062 Call 0x1C17D0C
	063 Move X8, [X0]
	064 Move [X19+48], X8
	065 Compare X8, 0
	066 JumpIfEqual {85}
	067 Move X0, [X23]
	068 Move W8, [X0+224]
	069 Compare W8, 0
	070 JumpIfNotEqual {73}
	071 Call 0x1C17DFC
	072 Move X0, [X23]
	073 Call 0x1C17D0C
	074 Move [X0], X31
	075 Move X0, [X23]
	076 Call 0x1C17D0C
	077 NotImplemented "Instruction LDUR not yet implemented."
	078 Move TEMP, 0
	079 Not TEMP
	080 Move W24, TEMP
	081 Move [X31+1], V0
	082 Move [X19+72], X31
	083 Move [X19+80], X31
	084 Move [X19], W24
	085 Move X8, 0xA17000
	086 Move X8, [X8+2288]
	087 Move X0, [X8]
	088 Call 0x1C17F10
	089 Move X20, X0
	090 Move X1, X31
	091 Call StringBuilder..ctor, X0
	092 Move [X19+48], X20
	093 Move X8, 0xA17000
	094 Move X8, [X8+1560]
	095 Move X0, [X8]
	096 Move W1, 1
	097 Call 0x1C17D6C
	098 Move [X19+56], X0
	099 NotImplemented "Instruction STRH not yet implemented."
	100 Move X20, X1
	101 Move X22, X0
	102 NotImplemented "Instruction CMP not yet implemented."
	103 Move X0, X22
	104 Call 0x3EB2AD0
	105 Move X20, X0
	106 Move X0, 0xA17000
	107 Move X0, [X0+2000]
	108 Call 0x1C17D08
	109 Move X8, [X20]
	110 Move X1, [X8]
	111 Call 0x1C18270
	112 Move TEMP, X0
	113 And TEMP, TEMP, 1
	114 Compare TEMP, 1
	115 JumpIfNotEqual {122}
	116 Move X8, [X20]
	117 Move W9, 1
	118 Move [X31+8], W9
	119 Move [X31], X8
	120 Call 0x3EB2AE0
	121 Move X8, X31
	122 Move W0, 8
	123 Call 0x3EB2AF0
	124 Move X8, [X20]
	125 Move [X0], X8
	126 Move X1, 0x7D8000
	127 Add X1, X1, 3672
	128 Move X2, X31
	129 Call 0x3EB2B00
	130 Move X22, X0
	131 Call 0x3EB2AE0
	132 Move X0, X22
	133 Call 0x1D2D690
	134 Add X9, X31, 0
	135 Move TEMP, 1
	136 Not TEMP
	137 Move W10, TEMP
	138 Move X20, [X9]
	139 Move [X19], W10
	140 Move [X19+48], X31
	141 Move [X19+56], X31
	142 Move X0, 0xA19000
	143 Move X0, [X0+304]
	144 Add X21, X19, 8
	145 Call 0x1C17D08
	146 Move W8, [X0+224]
	147 Compare W8, 0
	148 JumpIfNotEqual {150}
	149 Call 0x1C17DFC
	150 Move X0, 0xA19000
	151 Move X0, [X0+576]
	152 Call 0x1C17D08
	153 Move X2, X0
	154 Move X0, X21
	155 Move X1, X20
	156 Call AsyncTaskMethodBuilder`1<Object>.SetException, X0, X1
	157 Move X8, [X19+56]
	158 Compare X8, 0
	159 JumpIfEqual {323}
	160 Move W9, [X8+24]
	161 Compare W9, 0
	162 JumpIfEqual {324}
	163 Move W20, [X8+32]
	164 NotImplemented "Instruction CMP not yet implemented."
	165 NotImplemented "Instruction LDRH not yet implemented."
	166 NotImplemented "Instruction CMP not yet implemented."
	167 Move X0, [X19+48]
	168 Compare X0, 0
	169 JumpIfEqual {325}
	170 Move W1, W20
	171 Move X2, X31
	172 Call StringBuilder.Append, X0, X1
	173 NotImplemented "Instruction STRH not yet implemented."
	174 Move X0, [X19+32]
	175 Compare X0, 0
	176 JumpIfEqual {322}
	177 Move X8, [X0]
	178 Move X1, [X19+56]
	179 Move X4, [X19+40]
	180 Move X9, [X8+728]
	181 Move X5, [X8+736]
	182 Move W3, 1
	183 Move W2, W31
	184 NotImplemented "Instruction BLR not yet implemented."
	185 Compare X0, 0
	186 JumpIfEqual {321}
	187 Move X8, 0xA4A000
	188 Move X8, [X8+720]
	189 Move X2, [X8]
	190 Move W1, W31
	191 Call Task`1<Int32>.ConfigureAwait, X0, X1
	192 Move X8, 0xA4A000
	193 Move X8, [X8+712]
	194 Move [X31+16], X0
	195 Move [X31+24], X1
	196 Move X8, [X8]
	197 Add X0, X31, 16
	198 Move X1, X8
	199 Call ConfiguredTaskAwaiter<Int32>.get_IsCompleted, X0
	200 Move TEMP, X0
	201 And TEMP, TEMP, 1
	202 Compare TEMP, 1
	203 JumpIfNotEqual {292}
	204 Move X8, 0xA4A000
	205 Move X8, [X8+704]
	206 Move X1, [X8]
	207 Add X0, X31, 16
	208 Call ConfiguredTaskAwaiter<Int32>.GetResult, X0
	209 NotImplemented "Instruction CMP not yet implemented."
	210 Move X0, [X19+48]
	211 Compare X0, 0
	212 JumpIfEqual {328}
	213 Move X1, X31
	214 Call StringBuilder.get_Length, X0
	215 NotImplemented "Instruction CMP not yet implemented."
	216 Move X20, [X19+48]
	217 Compare X20, 0
	218 JumpIfEqual {330}
	219 Move X0, X20
	220 Move X1, X31
	221 Call StringBuilder.get_Length, X0
	222 Subtract W1, W0, 1
	223 Move X0, X20
	224 Move X2, X31
	225 Call StringBuilder.get_Chars, X0, X1
	226 And W8, W0, 0xFFFF
	227 NotImplemented "Instruction CMP not yet implemented."
	228 Move X20, [X19+48]
	229 Compare X20, 0
	230 JumpIfEqual {332}
	231 Move X0, X20
	232 Move X1, X31
	233 Call StringBuilder.get_Length, X0
	234 Subtract W1, W0, 1
	235 Move X0, X20
	236 Move X2, X31
	237 Call StringBuilder.set_Length, X0, X1
	238 Move X0, [X19+48]
	239 Compare X0, 0
	240 JumpIfEqual {329}
	241 Move X8, [X0]
	242 Move X9, [X8+360]
	243 Move X1, [X8+368]
	244 NotImplemented "Instruction BLR not yet implemented."
	245 Move X20, X0
	246 Move X21, X31
	247 Move W22, 13
	248 Move TEMP, X24
	249 And TEMP, TEMP, -2147483648
	250 Compare TEMP, -2147483648
	251 JumpIfNotEqual {268}
	252 Move X0, [X19+48]
	253 Compare X0, 0
	254 JumpIfEqual {331}
	255 Move X1, X31
	256 Call StringBuilder.Clear, X0
	257 Move X0, [X23]
	258 Move X24, [X19+48]
	259 Move W8, [X0+224]
	260 Compare W8, 0
	261 JumpIfNotEqual {264}
	262 Call 0x1C17DFC
	263 Move X0, [X23]
	264 Call 0x1C17D0C
	265 Move [X0], X24
	266 Move X0, [X23]
	267 Call 0x1C17D0C
	268 Compare X21, 0
	269 JumpIfNotEqual {326}
	270 Compare W22, 0
	271 JumpIfEqual {318}
	272 NotImplemented "Instruction CMP not yet implemented."
	273 Move TEMP, 1
	274 Not TEMP
	275 Move W8, TEMP
	276 Move [X19+48], X31
	277 Move [X19+56], X31
	278 Move [X19+8], W8
	279 Move X8, 0xA19000
	280 Move X8, [X8+304]
	281 Move X0, [X8]
	282 Move W8, [X0+224]
	283 Compare W8, 0
	284 JumpIfNotEqual {286}
	285 Call 0x1C17DFC
	286 Move X8, 0xA19000
	287 Move X8, [X8+352]
	288 Move X0, X19
	289 Move X1, X20
	290 Move X2, [X8]
	291 Call AsyncTaskMethodBuilder`1<Object>.SetResult, X0, X1
	292 Move [X19], W31
	293 Move V0, [X31+1]
	294 Move X8, 0xA19000
	295 Move [X19+72], V0
	296 Move X8, [X8+304]
	297 Move X0, [X8]
	298 Move W8, [X0+224]
	299 Compare W8, 0
	300 JumpIfNotEqual {302}
	301 Call 0x1C17DFC
	302 Move X8, 0xA63000
	303 Move X8, [X8+1000]
	304 Add X0, X19, 8
	305 Move X3, [X8]
	306 Add X1, X31, 16
	307 Move X2, X19
	308 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	309 Move X20, [X31+80]
	310 Move X19, [X31+88]
	311 Move X22, [X31+64]
	312 Move X21, [X31+72]
	313 Move X24, [X31+48]
	314 Move X23, [X31+56]
	315 Move X30, [X31+32]
	316 Add X31, X31, 96
	317 Return 
	318 Move TEMP, 0
	319 Not TEMP
	320 Move X8, TEMP
	321 Call 0x1C17F20
	322 Call 0x1C17F20
	323 Call 0x1C17F20
	324 Call 0x1C17F28
	325 Call 0x1C17F20
	326 Move X0, X21
	327 Call 0x1C17F18
	328 Call 0x1C17F20
	329 Call 0x1C17F20
	330 Call 0x1C17F20
	331 Call 0x1C17F20
	332 Call 0x1C17F20
	333 Move X22, X0
	334 Move W24, W31
	335 Move X22, X0
	336 NotImplemented "Instruction CMP not yet implemented."
	337 Move X0, X22
	338 Call 0x3EB2AD0
	339 Move X21, [X0]
	340 Call 0x3EB2AE0
	341 Move W22, W31
	342 Move X20, X31
	343 Move TEMP, X24
	344 And TEMP, TEMP, -2147483648
	345 Compare TEMP, -2147483648
	346 JumpIfNotEqual {268}
	347 Move X20, X1
	348 Move X21, X31
	349 Move TEMP, X24
	350 And TEMP, TEMP, -2147483648
	351 Compare TEMP, -2147483648
	352 JumpIfNotEqual {369}
	353 Move X0, [X19+48]
	354 Compare X0, 0
	355 JumpIfEqual {373}
	356 Move X1, X31
	357 Call StringBuilder.Clear, X0
	358 Move X0, [X23]
	359 Move X24, [X19+48]
	360 Move W8, [X0+224]
	361 Compare W8, 0
	362 JumpIfNotEqual {365}
	363 Call 0x1C17DFC
	364 Move X0, [X23]
	365 Call 0x1C17D0C
	366 Move [X0], X24
	367 Move X0, [X23]
	368 Call 0x1C17D0C
	369 Compare X21, 0
	370 JumpIfEqual {102}
	371 Move X0, X21
	372 Call 0x1C17F18
	373 Call 0x1C17F20
	374 Move X20, X1
	375 Move X22, X0
	376 Move TEMP, X24
	377 And TEMP, TEMP, -2147483648
	378 Compare TEMP, -2147483648
	379 JumpIfNotEqual {369}
	380 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x036DE3A0 MOV X0, X8
	0x036DE3A4 BR X6
	0x036DE3A8 STP X30, X23, [X31 - 0x30]!
	0x036DE3AC STP X22, X21, [X31 + 0x10]
	0x036DE3B0 STP X20, X19, [X31 + 0x20]
	0x036DE3B4 ADRP X23, 0xD02000
	0x036DE3B8 ADRP X22, 0xA15000
	0x036DE3BC ADRP X20, 0xA62000
	0x036DE3C0 ADRP X21, 0xA62000
	0x036DE3C4 MOV X19, X8
	0x036DE3C8 LDRB W8, [X23 + 0xAE6]
	0x036DE3CC LDR X22, [X22 + 0x618]
	0x036DE3D0 LDR X20, [X20 + 0x4B0]
	0x036DE3D4 LDR X21, [X21 + 0x4B8]
	0x036DE3D8 TBNZ X8, 0x0, 0x36DE408
	0x036DE3DC ADRP X0, 0xA15000
	0x036DE3E0 LDR X0, [X0 + 0x618]
	0x036DE3E4 BL 0x1C16CF4
	0x036DE3E8 ADRP X0, 0xA62000
	0x036DE3EC LDR X0, [X0 + 0x4B8]
	0x036DE3F0 BL 0x1C16CF4
	0x036DE3F4 ADRP X0, 0xA62000
	0x036DE3F8 LDR X0, [X0 + 0x4B0]
	0x036DE3FC BL 0x1C16CF4
	0x036DE400 MOVZ W8, 0x1
	0x036DE404 STRB W8, [X23 + 0xAE6]
	0x036DE408 LDR X0, [X22]
	0x036DE40C MOVZ W1, 0x1A8
	0x036DE410 BL 0x1C16D6C
	0x036DE414 LDR X1, [X20]
	0x036DE418 MOV X2, X31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xD03000
	007 Move X21, 0xA19000
	008 Move W8, [X22+2778]
	009 Move X21, [X21+304]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xA19000
	017 Move X0, [X0+584]
	018 Call 0x1C17CF4
	019 Move X0, 0xA19000
	020 Move X0, [X0+304]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+2778], W8
	024 Move X0, [X21]
	025 Move X21, 0xA19000
	026 Move W8, [X0+224]
	027 Move X21, [X21+584]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X2, [X21]
	032 Add X0, X20, 8
	033 Move X1, X19
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Call AsyncTaskMethodBuilder`1<Object>.SetStateMachine, X0, X1
	040 Return 

