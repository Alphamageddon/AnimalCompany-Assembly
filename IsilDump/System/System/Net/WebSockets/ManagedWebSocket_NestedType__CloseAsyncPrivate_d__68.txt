Type: System.Net.WebSockets.ManagedWebSocket/<CloseAsyncPrivate>d__68

Method: System.Void MoveNext()

Disassembly:
	0x036D7A00 BL 0x3EB1B00
	0x036D7A04 MOV X21, X0
	0x036D7A08 BL 0x3EB1AE0
	0x036D7A0C MOV X0, X21
	0x036D7A10 BL 0x1D2C690
	0x036D7A14 BL 0x1990590
	0x036D7A18 STR X30, [X31 - 0x30]!
	0x036D7A1C STP X22, X21, [X31 + 0x10]
	0x036D7A20 STP X20, X19, [X31 + 0x20]
	0x036D7A24 ADRP X21, 0xD09000
	0x036D7A28 ADRP X22, 0xA1F000
	0x036D7A2C LDRB W8, [X21 + 0xAB0]
	0x036D7A30 LDR X22, [X22 + 0x280]
	0x036D7A34 MOV X19, X1
	0x036D7A38 MOV X20, X0
	0x036D7A3C TBNZ X8, 0x0, 0x36D7A54
	0x036D7A40 ADRP X0, 0xA1F000
	0x036D7A44 LDR X0, [X0 + 0x280]
	0x036D7A48 BL 0x1C16CF4
	0x036D7A4C MOVZ W8, 0x1
	0x036D7A50 STRB W8, [X21 + 0xAB0]
	0x036D7A54 LDR X0, [X22]
	0x036D7A58 LDR W8, [X0 + 0xE0]
	0x036D7A5C CBNZ W8, 0x36D7A64
	0x036D7A60 BL 0x1C16DFC
	0x036D7A64 ADD X0, X20, 0x8
	0x036D7A68 MOV X1, X19
	0x036D7A6C LDP X20, X19, [X31 + 0x20]
	0x036D7A70 LDP X22, X21, [X31 + 0x10]
	0x036D7A74 MOV X2, X31
	0x036D7A78 LDR X30, [X31], #0x30
	0x036D7A7C B 0x32C477C
	0x036D7A80 SUB X31, X31, 0x70
	0x036D7A84 STP X30, X27, [X31 + 0x20]
	0x036D7A88 STP X26, X25, [X31 + 0x30]
	0x036D7A8C STP X24, X23, [X31 + 0x40]
	0x036D7A90 STP X22, X21, [X31 + 0x50]
	0x036D7A94 STP X20, X19, [X31 + 0x60]
	0x036D7A98 ADRP X20, 0xD09000
	0x036D7A9C LDRB W8, [X20 + 0xAB1]
	0x036D7AA0 MOV X19, X0
	0x036D7AA4 TBNZ X8, 0x0, 0x36D7B34
	0x036D7AA8 ADRP X0, 0xA69000
	0x036D7AAC LDR X0, [X0 + 0x168]
	0x036D7AB0 BL 0x1C16CF4
	0x036D7AB4 ADRP X0, 0xA1F000
	0x036D7AB8 LDR X0, [X0 + 0x280]
	0x036D7ABC BL 0x1C16CF4
	0x036D7AC0 ADRP X0, 0xA47000
	0x036D7AC4 LDR X0, [X0 + 0x2B8]
	0x036D7AC8 BL 0x1C16CF4
	0x036D7ACC ADRP X0, 0xA47000
	0x036D7AD0 LDR X0, [X0 + 0x2C0]
	0x036D7AD4 BL 0x1C16CF4
	0x036D7AD8 ADRP X0, 0xA47000
	0x036D7ADC LDR X0, [X0 + 0x2C8]
	0x036D7AE0 BL 0x1C16CF4
	0x036D7AE4 ADRP X0, 0xA47000
	0x036D7AE8 LDR X0, [X0 + 0x2D0]
	0x036D7AEC BL 0x1C16CF4
	0x036D7AF0 ADRP X0, 0xA47000
	0x036D7AF4 LDR X0, [X0 + 0x2D8]
	0x036D7AF8 BL 0x1C16CF4
	0x036D7AFC ADRP X0, 0xA47000
	0x036D7B00 LDR X0, [X0 + 0x2E0]
	0x036D7B04 BL 0x1C16CF4
	0x036D7B08 ADRP X0, 0xA47000
	0x036D7B0C LDR X0, [X0 + 0x2E8]
	0x036D7B10 BL 0x1C16CF4
	0x036D7B14 ADRP X0, 0xA47000
	0x036D7B18 LDR X0, [X0 + 0x2F0]
	0x036D7B1C BL 0x1C16CF4
	0x036D7B20 ADRP X0, 0xA47000
	0x036D7B24 LDR X0, [X0 + 0x2F8]
	0x036D7B28 BL 0x1C16CF4
	0x036D7B2C MOVZ W8, 0x1
	0x036D7B30 STRB W8, [X20 + 0xAB1]
	0x036D7B34 STP X31, X31, [X31 + 0x10]
	0x036D7B38 STP X31, X31, [X31]
	0x036D7B3C ADRP X23, 0xA1F000
	0x036D7B40 LDR W8, [X19]
	0x036D7B44 LDR X20, [X19 + 0x20]
	0x036D7B48 LDR X23, [X23 + 0x280]
	0x036D7B4C CBZ W8, 0x36D7C0C
	0x036D7B50 CBZ X20, 0x36D7C24
	0x036D7B54 LDR W8, [X20 + 0x8C]
	0x036D7B58 LDR W9, [X19 + 0x28]
	0x036D7B5C CMP W8, W9
	0x036D7B60 B.GE 0x36D7DC8
	0x036D7B64 CMP W8, 0x1
	0x036D7B68 B.LT 0x36D7C04
	0x036D7B6C ADRP X24, 0xA47000
	0x036D7B70 LDR X24, [X24 + 0x2E0]
	0x036D7B74 ADD X21, X20, 0x38
	0x036D7B78 LDR X1, [X24]
	0x036D7B7C MOV X0, X21
	0x036D7B80 BL 0x2984784
	0x036D7B84 STP X0, X1, [X31 + 0x10]
	0x036D7B88 ADRP X8, 0xA47000
	0x036D7B8C LDP W25, W26, [X20 + 0x88]
	0x036D7B90 LDR X8, [X8 + 0x2F0]
	0x036D7B94 MOV X22, X0
	0x036D7B98 SXTW X25, W25
	0x036D7B9C LDR X27, [X8]
	0x036D7BA0 SUBS W8, W1, W25
	0x036D7BA4 B.CC 0x36D7BB0
	0x036D7BA8 CMP W8, W26
	0x036D7BAC B.CS 0x36D7BBC
	0x036D7BB0 MOV X0, X31
	0x036D7BB4 BL 0x339D6EC
	0x036D7BB8 LDR X22, [X31 + 0x10]
	0x036D7BBC LDR X0, [X27 + 0x20]
	0x036D7BC0 LDRB W8, [X0 + 0x135]
	0x036D7BC4 TBNZ X8, 0x0, 0x36D7BCC
	0x036D7BC8 BL 0x1C5C684
	0x036D7BCC LDR X1, [X24]
	0x036D7BD0 ADD X8, X22, X25
	0x036D7BD4 STP X8, X26, [X31 + 0x10]
	0x036D7BD8 MOV X0, X21
	0x036D7BDC BL 0x2984784
	0x036D7BE0 ADRP X8, 0xA47000
	0x036D7BE4 LDR X8, [X8 + 0x2E8]
	0x036D7BE8 MOV X2, X0
	0x036D7BEC MOV X4, X1
	0x036D7BF0 LDR X3, [X8]
	0x036D7BF4 ADD X0, X31, 0x10
	0x036D7BF8 MOV X1, X2
	0x036D7BFC MOV X2, X4
	0x036D7C00 BL 0x25FAF94
	0x036D7C04 STR W31, [X20 + 0x88]
	0x036D7C08 B 0x36D7DA4
	0x036D7C0C LDR V0, [X19 + 0x4]
	0x036D7C10 MOVN W8, 0x0
	0x036D7C14 STR V0, [X31]
	0x036D7C18 STP X31, X31, [X19 + 0x40]
	0x036D7C1C STR W8, [X19]
	0x036D7C20 B 0x36D7D60
	0x036D7C24 BL 0x1C16F20
	0x036D7C28 B 0x36D7E78
	0x036D7C2C B 0x36D7E78
	0x036D7C30 B 0x36D7E78
	0x036D7C34 B 0x36D7E78
	0x036D7C38 B 0x36D7E78
	0x036D7C3C ADRP X8, 0xA47000
	0x036D7C40 LDR X8, [X8 + 0x2D8]
	0x036D7C44 LDR X21, [X20 + 0x10]
	0x036D7C48 ADD X0, X20, 0x38
	0x036D7C4C LDR X1, [X8]
	0x036D7C50 BL 0x319DCF0
	0x036D7C54 ADRP X8, 0xA47000
	0x036D7C58 LDR W25, [X20 + 0x44]
	0x036D7C5C LDR X8, [X8 + 0x2D0]
	0x036D7C60 LDR W9, [X20 + 0x8C]
	0x036D7C64 LDR X22, [X8]
	0x036D7C68 AND W8, W25, 0x7FFFFFFF
	0x036D7C6C SUBS W8, W8, W24
	0x036D7C70 SUB W26, W0, W9
	0x036D7C74 B.CC 0x36D7C80
	0x036D7C78 CMP W8, W26
	0x036D7C7C B.CS 0x36D7C88
	0x036D7C80 MOV X0, X31
	0x036D7C84 BL 0x339D6EC
	0x036D7C88 LDR X0, [X22 + 0x20]
	0x036D7C8C LDR X22, [X20 + 0x38]
	0x036D7C90 LDR W27, [X20 + 0x40]
	0x036D7C94 LDRB W8, [X0 + 0x135]
	0x036D7C98 TBNZ X8, 0x0, 0x36D7CA0
	0x036D7C9C BL 0x1C5C684
	0x036D7CA0 CBZ X21, 0x36D7E44
	0x036D7CA4 LDR X8, [X21]
	0x036D7CA8 LDR X3, [X19 + 0x30]
	0x036D7CAC AND W9, W25, 0x80000000
	0x036D7CB0 ADD W2, W27, W24
	0x036D7CB4 LDR X10, [X8 + 0x2E8]
	0x036D7CB8 LDR X4, [X8 + 0x2F0]
	0x036D7CBC ORR W8, W9, W26, 0x0
	0x036D7CC0 BFM X2, X8, 0x20, 0x1F
	0x036D7CC4 MOV X0, X21
	0x036D7CC8 MOV X1, X22
	0x036D7CCC BLR X10
	0x036D7CD0 ADRP X8, 0xA47000
	0x036D7CD4 LDR X8, [X8 + 0x2F8]
	0x036D7CD8 MOV X21, X0
	0x036D7CDC MOV X22, X1
	0x036D7CE0 LDR X24, [X8]
	0x036D7CE4 LDR X0, [X24 + 0x20]
	0x036D7CE8 ADD X8, X0, 0x135
	0x036D7CEC LDRH W8, [X8]
	0x036D7CF0 TBNZ X8, 0x0, 0x36D7D04
	0x036D7CF4 BL 0x1C5C684
	0x036D7CF8 LDR X0, [X24 + 0x20]
	0x036D7CFC ADD X8, X0, 0x135
	0x036D7D00 LDRH W8, [X8]
	0x036D7D04 TBNZ X8, 0x0, 0x36D7D0C
	0x036D7D08 BL 0x1C5C684
	0x036D7D0C ADRP X8, 0xA47000
	0x036D7D10 LDR X8, [X8 + 0x2B8]
	0x036D7D14 LDR X8, [X8]
	0x036D7D18 LDR X0, [X8 + 0x20]
	0x036D7D1C LDRB W8, [X0 + 0x135]
	0x036D7D20 TBNZ X8, 0x0, 0x36D7D28
	0x036D7D24 BL 0x1C5C684
	0x036D7D28 ADRP X8, 0xA47000
	0x036D7D2C LDR X8, [X8 + 0x2C8]
	0x036D7D30 AND X9, X22, 0xFFFF
	0x036D7D34 STP X21, X9, [X31]
	0x036D7D38 LDR X8, [X8]
	0x036D7D3C LDR X0, [X8 + 0x20]
	0x036D7D40 LDRB W8, [X0 + 0x135]
	0x036D7D44 TBNZ X8, 0x0, 0x36D7D4C
	0x036D7D48 BL 0x1C5C684
	0x036D7D4C LDR X8, [X0 + 0xC0]
	0x036D7D50 LDR X1, [X8 + 0x10]
	0x036D7D54 ADD X0, X31, 0x0
	0x036D7D58 BL 0x27A2398
	0x036D7D5C TBZ X0, 0x0, 0x36D7DF0
	0x036D7D60 ADRP X8, 0xA47000
	0x036D7D64 LDR X8, [X8 + 0x2C0]
	0x036D7D68 LDR X8, [X8]
	0x036D7D6C LDR X0, [X8 + 0x20]
	0x036D7D70 LDRB W8, [X0 + 0x135]
	0x036D7D74 TBNZ X8, 0x0, 0x36D7D7C
	0x036D7D78 BL 0x1C5C684
	0x036D7D7C LDR X8, [X0 + 0xC0]
	0x036D7D80 LDR X1, [X8 + 0x20]
	0x036D7D84 ADD X0, X31, 0x0
	0x036D7D88 BL 0x27A24B4
	0x036D7D8C CMP W0, 0x0
	0x036D7D90 B.LE 0x36D7DB8
	0x036D7D94 CBZ X20, 0x36D7E48
	0x036D7D98 LDR W8, [X20 + 0x8C]
	0x036D7D9C ADD W8, W8, W0
	0x036D7DA0 STR W8, [X20 + 0x8C]
	0x036D7DA4 LDR W24, [X20 + 0x8C]
	0x036D7DA8 LDR W8, [X19 + 0x28]
	0x036D7DAC CMP W24, W8
	0x036D7DB0 B.LT 0x36D7C3C
	0x036D7DB4 B 0x36D7DC8
	0x036D7DB8 CBZ X20, 0x36D7E4C
	0x036D7DBC LDRB W1, [X19 + 0x38]
	0x036D7DC0 MOV X0, X20
	0x036D7DC4 BL 0x36D313C
	0x036D7DC8 MOVN W8, 0x1
	0x036D7DCC STR W8, [X19], #0x8
	0x036D7DD0 LDR X0, [X23]
	0x036D7DD4 LDR W8, [X0 + 0xE0]
	0x036D7DD8 CBNZ W8, 0x36D7DE0
	0x036D7DDC BL 0x1C16DFC
	0x036D7DE0 MOV X0, X19
	0x036D7DE4 MOV X1, X31
	0x036D7DE8 BL 0x32C4864
	0x036D7DEC B 0x36D7E28
	0x036D7DF0 STR W31, [X19]
	0x036D7DF4 LDR V0, [X31]
	0x036D7DF8 STR V0, [X19 + 0x4]
	0x036D7DFC LDR X0, [X23]
	0x036D7E00 LDR W8, [X0 + 0xE0]
	0x036D7E04 CBNZ W8, 0x36D7E0C
	0x036D7E08 BL 0x1C16DFC
	0x036D7E0C ADRP X8, 0xA69000
	0x036D7E10 LDR X8, [X8 + 0x168]
	0x036D7E14 ADD X0, X19, 0x8
	0x036D7E18 LDR X3, [X8]
	0x036D7E1C ADD X1, X31, 0x0
	0x036D7E20 MOV X2, X19
	0x036D7E24 BL 0x2185B34
	0x036D7E28 LDP X20, X19, [X31 + 0x60]
	0x036D7E2C LDP X22, X21, [X31 + 0x50]
	0x036D7E30 LDP X24, X23, [X31 + 0x40]
	0x036D7E34 LDP X26, X25, [X31 + 0x30]
	0x036D7E38 LDP X30, X27, [X31 + 0x20]
	0x036D7E3C ADD X31, X31, 0x70
	0x036D7E40 RET
	0x036D7E44 BL 0x1C16F20
	0x036D7E48 BL 0x1C16F20
	0x036D7E4C BL 0x1C16F20
	0x036D7E50 B 0x36D7E78
	0x036D7E54 B 0x36D7E78
	0x036D7E58 B 0x36D7E78
	0x036D7E5C B 0x36D7E78
	0x036D7E60 B 0x36D7E78
	0x036D7E64 B 0x36D7E78
	0x036D7E68 B 0x36D7E78
	0x036D7E6C B 0x36D7E78
	0x036D7E70 B 0x36D7E78
	0x036D7E74 B 0x36D7E78
	0x036D7E78 MOV X20, X0
	0x036D7E7C CMP W1, 0x1
	0x036D7E80 B.NE 0x36D7F10
	0x036D7E84 MOV X0, X20
	0x036D7E88 BL 0x3EB1AD0
	0x036D7E8C MOV X20, X0
	0x036D7E90 ADRP X0, 0xA1C000
	0x036D7E94 LDR X0, [X0 + 0x7D0]
	0x036D7E98 BL 0x1C16D08
	0x036D7E9C LDR X8, [X20]
	0x036D7EA0 LDR X1, [X8]
	0x036D7EA4 BL 0x1C17270
	0x036D7EA8 TBZ X0, 0x0, 0x36D7EE8
	0x036D7EAC LDR X20, [X20]
	0x036D7EB0 BL 0x3EB1AE0
	0x036D7EB4 MOVN W8, 0x1
	0x036D7EB8 STR W8, [X19], #0x8
	0x036D7EBC ADRP X0, 0xA1F000
	0x036D7EC0 LDR X0, [X0 + 0x280]
	0x036D7EC4 BL 0x1C16D08
	0x036D7EC8 LDR W8, [X0 + 0xE0]
	0x036D7ECC CBNZ W8, 0x36D7ED4
	0x036D7ED0 BL 0x1C16DFC
	0x036D7ED4 MOV X0, X19
	0x036D7ED8 MOV X1, X20
	0x036D7EDC MOV X2, X31
	0x036D7EE0 BL 0x32C4908
	0x036D7EE4 B 0x36D7E28
	0x036D7EE8 MOVZ W0, 0x8
	0x036D7EEC BL 0x3EB1AF0
	0x036D7EF0 LDR X8, [X20]
	0x036D7EF4 STR X8, [X0]
	0x036D7EF8 ADRP X1, 0x7DD000
	0x036D7EFC ADD X1, X1, 0xE58
	0x036D7F00 MOV X2, X31
	0x036D7F04 BL 0x3EB1B00
	0x036D7F08 MOV X20, X0
	0x036D7F0C BL 0x3EB1AE0
	0x036D7F10 MOV X0, X20
	0x036D7F14 BL 0x1D2C690
	0x036D7F18 BL 0x1990590
	0x036D7F1C STR X30, [X31 - 0x30]!
	0x036D7F20 STP X22, X21, [X31 + 0x10]
	0x036D7F24 STP X20, X19, [X31 + 0x20]
	0x036D7F28 ADRP X21, 0xD09000
	0x036D7F2C ADRP X22, 0xA1F000
	0x036D7F30 LDRB W8, [X21 + 0xAB2]
	0x036D7F34 LDR X22, [X22 + 0x280]
	0x036D7F38 MOV X19, X1
	0x036D7F3C MOV X20, X0
	0x036D7F40 TBNZ X8, 0x0, 0x36D7F58
	0x036D7F44 ADRP X0, 0xA1F000
	0x036D7F48 LDR X0, [X0 + 0x280]
	0x036D7F4C BL 0x1C16CF4
	0x036D7F50 MOVZ W8, 0x1
	0x036D7F54 STRB W8, [X21 + 0xAB2]
	0x036D7F58 LDR X0, [X22]
	0x036D7F5C LDR W8, [X0 + 0xE0]
	0x036D7F60 CBNZ W8, 0x36D7F68
	0x036D7F64 BL 0x1C16DFC
	0x036D7F68 ADD X0, X20, 0x8
	0x036D7F6C MOV X1, X19
	0x036D7F70 LDP X20, X19, [X31 + 0x20]
	0x036D7F74 LDP X22, X21, [X31 + 0x10]
	0x036D7F78 MOV X2, X31
	0x036D7F7C LDR X30, [X31], #0x30
	0x036D7F80 B 0x32C477C
	0x036D7F84 STR X30, [X31 - 0x20]!
	0x036D7F88 STP X20, X19, [X31 + 0x10]
	0x036D7F8C MOV W19, W1
	0x036D7F90 MOV X1, X2
	0x036D7F94 MOV X2, X31
	0x036D7F98 MOV X20, X0
	0x036D7F9C BL 0x3661FBC
	0x036D7FA0 STR W19, [X20 + 0x90]
	0x036D7FA4 LDP X20, X19, [X31 + 0x10]
	0x036D7FA8 LDR X30, [X31], #0x20
	0x036D7FAC RET
	0x036D7FB0 SUB X31, X31, 0x40
	0x036D7FB4 STP X30, X23, [X31 + 0x10]
	0x036D7FB8 STP X22, X21, [X31 + 0x20]
	0x036D7FBC STP X20, X19, [X31 + 0x30]
	0x036D7FC0 ADRP X20, 0xD09000
	0x036D7FC4 LDRB W8, [X20 + 0xAB4]
	0x036D7FC8 MOV X19, X0
	0x036D7FCC TBNZ X8, 0x0, 0x36D8014
	0x036D7FD0 ADRP X0, 0xA1E000
	0x036D7FD4 LDR X0, [X0 + 0x170]
	0x036D7FD8 BL 0x1C16CF4
	0x036D7FDC ADRP X0, 0xA1E000
	0x036D7FE0 LDR X0, [X0 + 0xC48]
	0x036D7FE4 BL 0x1C16CF4
	0x036D7FE8 ADRP X0, 0xA1C000
	0x036D7FEC LDR X0, [X0 + 0x758]
	0x036D7FF0 BL 0x1C16CF4
	0x036D7FF4 ADRP X0, 0xA69000
	0x036D7FF8 LDR X0, [X0 + 0x170]
	0x036D7FFC BL 0x1C16CF4
	0x036D8000 ADRP X0, 0xA61000
	0x036D8004 LDR X0, [X0 + 0x418]
	0x036D8008 BL 0x1C16CF4
	0x036D800C MOVZ W8, 0x1
	0x036D8010 STRB W8, [X20 + 0xAB4]
	0x036D8014 MOV X0, X19

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+80], X30
	003 Move [X31+88], X0
	004 Move [X31+96], X24
	005 Move [X31+104], X23
	006 Move [X31+112], X22
	007 Move [X31+120], X21
	008 Move [X31+128], X20
	009 Move [X31+136], X19
	010 Move X19, 0xD0A000
	011 Move W8, [X19+2733]
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {31}
	017 Move X0, 0xA48000
	018 Move X0, [X0+3408]
	019 Call 0x1C17CF4
	020 Move X0, 0xA48000
	021 Move X0, [X0+3432]
	022 Call 0x1C17CF4
	023 Move X0, 0xA6A000
	024 Move X0, [X0+336]
	025 Call 0x1C17CF4
	026 Move X0, 0xA20000
	027 Move X0, [X0+640]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X19+2733], W8
	031 Move [X31+48], X31
	032 Move [X31+56], X31
	033 Move [X31+44], W31
	034 Move W8, [X20]
	035 Move X24, 0xA20000
	036 Move [X31+76], W8
	037 Move X19, [X20+32]
	038 Move X24, [X24+640]
	039 Compare W8, 0
	040 JumpIfEqual {84}
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Compare X19, 0
	043 JumpIfEqual {170}
	044 Move W8, [X19+93]
	045 Compare W8, 0
	046 JumpIfNotEqual {96}
	047 Move W1, [X20+40]
	048 Move X2, [X20+48]
	049 Move X3, [X20+56]
	050 Move X0, X19
	051 Call ManagedWebSocket.SendCloseFrameAsync, X0, X1, X2, X3
	052 Compare X0, 0
	053 JumpIfEqual {171}
	054 Move W1, W31
	055 Move X2, X31
	056 Call Task.ConfigureAwait, X0, X1
	057 Move [X31+48], X0
	058 Move [X31+56], X1
	059 Add X0, X31, 48
	060 Move X1, X31
	061 Call ConfiguredTaskAwaiter.get_IsCompleted, X0
	062 Move TEMP, X0
	063 And TEMP, TEMP, 1
	064 Compare TEMP, 1
	065 JumpIfEqual {93}
	066 Move X19, [X31+88]
	067 Move [X31+76], W31
	068 Move [X19], W31
	069 Move V0, [X31+3]
	070 Move X2, X19
	071 Move [X19+72], V0
	072 Move X0, [X24]
	073 Move W8, [X0+224]
	074 Compare W8, 0
	075 JumpIfNotEqual {78}
	076 Call 0x1C17DFC
	077 Move X2, [X31+88]
	078 Move X8, 0xA6A000
	079 Move X8, [X8+336]
	080 Add X0, X19, 8
	081 Move X3, [X8]
	082 Add X1, X31, 48
	083 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	084 NotImplemented "Instruction LDUR not yet implemented."
	085 Move TEMP, 0
	086 Not TEMP
	087 Move W8, TEMP
	088 Move [X31+3], V0
	089 Move [X20+72], X31
	090 Move [X20+80], X31
	091 Move [X31+76], W8
	092 Move [X20], W8
	093 Add X0, X31, 48
	094 Move X1, X31
	095 Call ConfiguredTaskAwaiter.GetResult, X0
	096 Move X8, 0xA48000
	097 Move X8, [X8+3432]
	098 Move X0, [X8]
	099 Move W8, [X0+224]
	100 Compare W8, 0
	101 JumpIfNotEqual {103}
	102 Call 0x1C17DFC
	103 Move X8, 0xA48000
	104 Move X8, [X8+3408]
	105 Move X20, [X8]
	106 Move X0, [X20+32]
	107 Move W8, [X0+309]
	108 Move TEMP, X8
	109 And TEMP, TEMP, 1
	110 Compare TEMP, 1
	111 JumpIfEqual {113}
	112 Call 0x1C5D684
	113 Move X8, [X0+192]
	114 Move X0, [X8+8]
	115 Move W8, [X0+309]
	116 Move TEMP, X8
	117 And TEMP, TEMP, 1
	118 Compare TEMP, 1
	119 JumpIfEqual {121}
	120 Call 0x1C5D684
	121 Move W8, [X0+224]
	122 Compare W8, 0
	123 JumpIfNotEqual {125}
	124 Call 0x1C17DFC
	125 Move X0, [X20+32]
	126 Move W8, [X0+309]
	127 Move TEMP, X8
	128 And TEMP, TEMP, 1
	129 Compare TEMP, 1
	130 JumpIfEqual {132}
	131 Call 0x1C5D684
	132 Move X8, [X0+192]
	133 Move X0, [X8+8]
	134 Move W8, [X0+309]
	135 Move TEMP, X8
	136 And TEMP, TEMP, 1
	137 Compare TEMP, 1
	138 JumpIfEqual {140}
	139 Call 0x1C5D684
	140 Move X8, [X0+184]
	141 Move X0, [X8]
	142 Compare X0, 0
	143 JumpIfEqual {169}
	144 Move X8, [X0]
	145 Move X9, [X8+376]
	146 Move X2, [X8+384]
	147 Move W1, 139
	148 NotImplemented "Instruction BLR not yet implemented."
	149 Move X20, [X31+88]
	150 Move [X20+64], X0
	151 Move W8, [X31+76]
	152 Move X22, X31
	153 Add X9, X31, 76
	154 Add X10, X31, 88
	155 NotImplemented "Instruction CMP not yet implemented."
	156 Move [X31+16], X31
	157 Move [X31+24], X9
	158 Move [X31+32], X10
	159 NotImplemented "Instruction LDUR not yet implemented."
	160 Move X22, X31
	161 Move TEMP, 0
	162 Not TEMP
	163 Move W8, TEMP
	164 Move [X31+3], V0
	165 Move [X20+72], X31
	166 Move [X20+80], X31
	167 Move [X31+76], W8
	168 Move [X20], W8
	169 Call 0x1C17F20
	170 Call 0x1C17F20
	171 Call 0x1C17F20
	172 Move X21, X1
	173 Move X20, X0
	174 NotImplemented "Instruction CMP not yet implemented."
	175 Move X0, X20
	176 Call 0x3EB2AD0
	177 Move X19, X0
	178 Move X0, 0xA1D000
	179 Move X0, [X0+2000]
	180 Call 0x1C17D08
	181 Move X8, [X19]
	182 Move X1, [X8]
	183 Call 0x1C18270
	184 Move TEMP, X0
	185 And TEMP, TEMP, 1
	186 Compare TEMP, 1
	187 JumpIfNotEqual {208}
	188 Move X19, [X19]
	189 Call 0x3EB2AE0
	190 Move X8, [X31+88]
	191 Move TEMP, 1
	192 Not TEMP
	193 Move W9, TEMP
	194 Move X0, 0xA20000
	195 Move [X8], W9
	196 Move [X8+64], X31
	197 Move X0, [X0+640]
	198 Add X20, X8, 8
	199 Call 0x1C17D08
	200 Move W8, [X0+224]
	201 Compare W8, 0
	202 JumpIfNotEqual {204}
	203 Call 0x1C17DFC
	204 Move X0, X20
	205 Move X1, X19
	206 Move X2, X31
	207 Call AsyncTaskMethodBuilder.SetException, X0, X1
	208 Move W0, 8
	209 Call 0x3EB2AF0
	210 Move X8, [X19]
	211 Move [X0], X8
	212 Move X1, 0x7DE000
	213 Add X1, X1, 3672
	214 Move X2, X31
	215 Call 0x3EB2B00
	216 Move X20, X0
	217 Call 0x3EB2AE0
	218 Move X0, X20
	219 Call 0x1D2D690
	220 Move X20, [X31+128]
	221 Move X19, [X31+136]
	222 Move X22, [X31+112]
	223 Move X21, [X31+120]
	224 Move X24, [X31+96]
	225 Move X23, [X31+104]
	226 Move X30, [X31+80]
	227 Add X31, X31, 144
	228 Return 
	229 Add X0, X31, 48
	230 Move X1, X31
	231 Call ConfiguredTaskAwaiter.GetResult, X0
	232 Compare X19, 0
	233 JumpIfEqual {361}
	234 Move W8, [X19+94]
	235 Compare W8, 0
	236 JumpIfNotEqual {311}
	237 Move X23, [X19+72]
	238 Move [X31+44], W31
	239 Add X1, X31, 44
	240 Move X0, X23
	241 Move X2, X31
	242 Call Monitor.Enter, X0, X1
	243 Move W8, [X19+94]
	244 Compare W8, 0
	245 JumpIfEqual {248}
	246 Move X20, X31
	247 Move W21, 11
	248 Move X8, [X31+88]
	249 Move X22, [X19+168]
	250 Move X3, [X8+56]
	251 Move X2, [X8+64]
	252 Move X0, X19
	253 Move X1, X22
	254 Call ManagedWebSocket.ValidateAndReceiveAsync, X0, X1, X2, X3
	255 Move X20, X31
	256 Move [X19+168], X0
	257 Move W21, 12
	258 Move X22, X0
	259 Move W8, [X31+76]
	260 Move TEMP, X8
	261 And TEMP, TEMP, -2147483648
	262 Compare TEMP, -2147483648
	263 JumpIfNotEqual {270}
	264 Move W8, [X31+44]
	265 Compare W8, 0
	266 JumpIfEqual {270}
	267 Move X0, X23
	268 Move X1, X31
	269 Call Monitor.Exit, X0
	270 Compare X20, 0
	271 JumpIfNotEqual {362}
	272 Compare W21, 0
	273 JumpIfEqual {275}
	274 NotImplemented "Instruction CMP not yet implemented."
	275 Compare X22, 0
	276 JumpIfEqual {364}
	277 Move X0, X22
	278 Move W1, W31
	279 Move X2, X31
	280 Call Task.ConfigureAwait, X0, X1
	281 Move [X31+48], X0
	282 Move [X31+56], X1
	283 Add X0, X31, 48
	284 Move X1, X31
	285 Call ConfiguredTaskAwaiter.get_IsCompleted, X0
	286 Move TEMP, X0
	287 And TEMP, TEMP, 1
	288 Compare TEMP, 1
	289 JumpIfEqual {229}
	290 Move X20, [X31+88]
	291 Move W8, 1
	292 Move [X31+76], W8
	293 Move [X20], W8
	294 Move V0, [X31+3]
	295 Move X2, X20
	296 Move [X20+72], V0
	297 Move X0, [X24]
	298 Move W8, [X0+224]
	299 Compare W8, 0
	300 JumpIfNotEqual {303}
	301 Call 0x1C17DFC
	302 Move X2, [X31+88]
	303 Move X8, 0xA6A000
	304 Move X8, [X8+336]
	305 Add X0, X20, 8
	306 Move X3, [X8]
	307 Add X1, X31, 48
	308 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	309 Move W21, 6
	310 NotImplemented "Instruction CMP not yet implemented."
	311 Move W21, 14
	312 Add X0, X31, 16
	313 Call 0x1BB873C
	314 NotImplemented "Instruction CMP not yet implemented."
	315 Compare W21, 0
	316 JumpIfNotEqual {220}
	317 Compare X19, 0
	318 JumpIfEqual {365}
	319 Move X22, [X19+48]
	320 Move [X31+44], W31
	321 Add X1, X31, 44
	322 Move X0, X22
	323 Move X2, X31
	324 Call Monitor.Enter, X0, X1
	325 Move X0, X19
	326 Call ManagedWebSocket.DisposeCore, X0
	327 Move W8, [X19+88]
	328 NotImplemented "Instruction CMP not yet implemented."
	329 Move X23, X31
	330 Move W8, 5
	331 Move X23, X31
	332 Move [X19+88], W8
	333 Move W8, [X31+76]
	334 Move TEMP, X8
	335 And TEMP, TEMP, -2147483648
	336 Compare TEMP, -2147483648
	337 JumpIfNotEqual {344}
	338 Move W8, [X31+44]
	339 Compare W8, 0
	340 JumpIfEqual {344}
	341 Move X0, X22
	342 Move X1, X31
	343 Call Monitor.Exit, X0
	344 Compare X23, 0
	345 JumpIfNotEqual {366}
	346 Move X8, [X31+88]
	347 Move TEMP, 1
	348 Not TEMP
	349 Move W9, TEMP
	350 Move [X8], W9
	351 Move [X8+64], X31
	352 Move X0, [X24]
	353 Add X19, X8, 8
	354 Move W9, [X0+224]
	355 Compare W9, 0
	356 JumpIfNotEqual {358}
	357 Call 0x1C17DFC
	358 Move X0, X19
	359 Move X1, X31
	360 Call AsyncTaskMethodBuilder.SetResult, X0
	361 Call 0x1C17F20
	362 Move X0, X20
	363 Call 0x1C17F18
	364 Call 0x1C17F20
	365 Call 0x1C17F20
	366 Move X0, X23
	367 Call 0x1C17F18
	368 Move X21, X1
	369 Move X20, X0
	370 NotImplemented "Instruction CMP not yet implemented."
	371 Move X0, X20
	372 Call 0x3EB2AD0
	373 Move X23, [X0]
	374 Call 0x3EB2AE0
	375 Move X23, X31
	376 Move W8, [X31+76]
	377 Move TEMP, X8
	378 And TEMP, TEMP, -2147483648
	379 Compare TEMP, -2147483648
	380 JumpIfNotEqual {387}
	381 Move W8, [X31+44]
	382 Compare W8, 0
	383 JumpIfEqual {387}
	384 Move X0, X22
	385 Move X1, X31
	386 Call Monitor.Exit, X0
	387 Compare X23, 0
	388 JumpIfEqual {174}
	389 Move X0, X23
	390 Call 0x1C17F18
	391 Move X21, X1
	392 Move X20, X0
	393 Move X21, X1
	394 Move X20, X0
	395 NotImplemented "Instruction CMP not yet implemented."
	396 Move X0, X20
	397 Call 0x3EB2AD0
	398 Move X8, [X0]
	399 Move [X31+8], X8
	400 Call 0x3EB2AE0
	401 Move X20, [X31+8]
	402 Move W21, W31
	403 Move [X31+8], X31
	404 Move W8, [X31+76]
	405 Move TEMP, X8
	406 And TEMP, TEMP, -2147483648
	407 Compare TEMP, -2147483648
	408 JumpIfNotEqual {415}
	409 Move W8, [X31+44]
	410 Compare W8, 0
	411 JumpIfEqual {415}
	412 Move X0, X23
	413 Move X1, X31
	414 Call Monitor.Exit, X0
	415 Move X8, [X31+8]
	416 Compare X8, 0
	417 JumpIfEqual {424}
	418 Move X0, [X31+8]
	419 Call 0x1C17F18
	420 Move X21, X1
	421 Move X20, X0
	422 Move X21, X1
	423 Move X20, X0
	424 NotImplemented "Instruction CMP not yet implemented."
	425 Move X0, X20
	426 Call 0x3EB2AD0
	427 Move X8, [X0]
	428 Move [X31+16], X8
	429 Call 0x3EB2AE0
	430 Move W21, W31
	431 Move X21, X1
	432 Move X20, X0
	433 Add X0, X31, 16
	434 Call 0x1BB873C
	435 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x036D8018 MOV X1, X31
	0x036D801C BL 0x322DA44
	0x036D8020 TBNZ X0, 0x0, 0x36D8164
	0x036D8024 CBZ X19, 0x36D8160
	0x036D8028 LDR W8, [X19 + 0x10]
	0x036D802C CMP W8, 0x1
	0x036D8030 B.LT 0x36D8148
	0x036D8034 ADRP X22, 0xA1D000
	0x036D8038 ADRP X23, 0xA68000
	0x036D803C LDR X22, [X22 + 0x170]
	0x036D8040 LDR X23, [X23 + 0x170]
	0x036D8044 MOV W21, W31
	0x036D8048 MOV X0, X19
	0x036D804C MOV W1, W21
	0x036D8050 MOV X2, X31
	0x036D8054 BL 0x3222A1C
	0x036D8058 SUB W8, W0, 0x21
	0x036D805C AND W8, W8, 0xFFFF
	0x036D8060 MOV W20, W0
	0x036D8064 CMP W8, 0x5E
	0x036D8068 B.CS 0x36D80BC
	0x036D806C LDR X0, [X22]
	0x036D8070 LDR W8, [X0 + 0xE0]
	0x036D8074 CBNZ W8, 0x36D807C
	0x036D8078 BL 0x1C16DFC
	0x036D807C MOV W0, W20

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xD09000
	007 Move X22, 0xA1F000
	008 Move W8, [X21+2734]
	009 Move X22, [X22+640]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xA1F000
	017 Move X0, [X0+640]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2734], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Add X0, X20, 8
	027 Move X1, X19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X2, X31
	033 Move X30, [X31+48]
	034 Call AsyncTaskMethodBuilder.SetStateMachine, X0, X1
	035 Return 

