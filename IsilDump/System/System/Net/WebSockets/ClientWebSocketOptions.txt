Type: System.Net.WebSockets.ClientWebSocketOptions

Method: System.Void .ctor()

Disassembly:
	0x036D93F0 LDR X8, [X20]
	0x036D93F4 LDR X1, [X8]
	0x036D93F8 BL 0x1C17270
	0x036D93FC TBZ X0, 0x0, 0x36D943C
	0x036D9400 LDR X20, [X20]
	0x036D9404 BL 0x3EB1AE0
	0x036D9408 MOVN W8, 0x1
	0x036D940C STR W8, [X19], #0x8
	0x036D9410 ADRP X0, 0xA1D000
	0x036D9414 LDR X0, [X0 + 0x280]
	0x036D9418 BL 0x1C16D08
	0x036D941C LDR W8, [X0 + 0xE0]
	0x036D9420 CBNZ W8, 0x36D9428
	0x036D9424 BL 0x1C16DFC
	0x036D9428 MOV X0, X19
	0x036D942C MOV X1, X20
	0x036D9430 MOV X2, X31
	0x036D9434 BL 0x32C4908
	0x036D9438 B 0x36D9228
	0x036D943C MOVZ W0, 0x8
	0x036D9440 BL 0x3EB1AF0
	0x036D9444 LDR X8, [X20]
	0x036D9448 STR X8, [X0]
	0x036D944C ADRP X1, 0x7DB000
	0x036D9450 ADD X1, X1, 0xE58
	0x036D9454 MOV X2, X31
	0x036D9458 BL 0x3EB1B00
	0x036D945C MOV X21, X0
	0x036D9460 BL 0x3EB1AE0
	0x036D9464 MOV X0, X21
	0x036D9468 BL 0x1D2C690
	0x036D946C BL 0x1990590
	0x036D9470 STR X30, [X31 - 0x20]!
	0x036D9474 STP X20, X19, [X31 + 0x10]
	0x036D9478 ADRP X19, 0xD07000
	0x036D947C ADRP X20, 0xA67000
	0x036D9480 LDRB W8, [X19 + 0xAC6]
	0x036D9484 LDR X20, [X20 + 0x1A8]
	0x036D9488 TBNZ X8, 0x0, 0x36D94A0
	0x036D948C ADRP X0, 0xA67000
	0x036D9490 LDR X0, [X0 + 0x1A8]
	0x036D9494 BL 0x1C16CF4
	0x036D9498 MOVZ W8, 0x1
	0x036D949C STRB W8, [X19 + 0xAC6]
	0x036D94A0 LDR X0, [X20]
	0x036D94A4 BL 0x1C16F10
	0x036D94A8 MOV X19, X0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0xD08000
	008 Move X22, 0xA1C000
	009 Move X20, 0xA1C000
	010 Move X21, 0xA65000
	011 Move W8, [X23+2755]
	012 Move X22, [X22+464]
	013 Move X20, [X20+448]
	014 Move X21, [X21+3576]
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {31}
	020 Move X0, 0xA1C000
	021 Move X0, [X0+448]
	022 Call 0x1C17CF4
	023 Move X0, 0xA1C000
	024 Move X0, [X0+464]
	025 Call 0x1C17CF4
	026 Move X0, 0xA65000
	027 Move X0, [X0+3576]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X23+2755], W8
	031 Call WebSocket.get_DefaultKeepAliveInterval
	032 Move [X19+40], X0
	033 NotImplemented "Instruction MOVI not yet implemented."
	034 Move X0, X19
	035 Move X1, X31
	036 Move [X19+72], D0
	037 Call Object..ctor, X0
	038 Move X0, [X22]
	039 Call 0x1C17F10
	040 Move X1, [X20]
	041 Move X20, X0
	042 Call List`1<Object>..ctor, X0
	043 Move [X19+24], X20
	044 Move X0, [X21]
	045 Call 0x1C17F10
	046 Move X1, X31
	047 Move X20, X0
	048 Call WebHeaderCollection..ctor, X0
	049 Move [X19+32], X20
	050 Move X20, [X31+32]
	051 Move X19, [X31+40]
	052 Move X22, [X31+16]
	053 Move X21, [X31+24]
	054 Move X30, [X31+48]
	055 Move X23, [X31+56]
	056 Return 

Method: System.Net.WebHeaderCollection get_RequestHeaders()

Disassembly:
	0x036DA66C LDR X1, [X20]
	0x036DA670 MOV X0, X19

ISIL:
	001 Move X0, [X0+32]
	002 Return X0

Method: System.Collections.Generic.List`1<System.String> get_RequestedSubProtocols()

Disassembly:
	0x036DA674 BL 0x2632230
	0x036DA678 LDP X20, X19, [X31 + 0x90]

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void set_Proxy(System.Net.IWebProxy value)

Disassembly:
	0x036D94AC BL 0x36D99C0
	0x036D94B0 MOV X0, X19
	0x036D94B4 LDP X20, X19, [X31 + 0x10]
	0x036D94B8 LDR X30, [X31], #0x20
	0x036D94BC RET
	0x036D94C0 SUB X31, X31, 0x110
	0x036D94C4 STR X29, [X31 + 0xC0]
	0x036D94C8 STP X30, X25, [X31 + 0xD0]
	0x036D94CC STP X24, X23, [X31 + 0xE0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X1
	005 Move X20, X0
	006 Call ClientWebSocketOptions.ThrowIfReadOnly, X0
	007 Move [X20+48], X19
	008 Move X20, [X31+16]
	009 Move X19, [X31+24]
	010 Move X30, [X31+32]
	011 Return 

Method: System.Security.Cryptography.X509Certificates.X509CertificateCollection get_ClientCertificates()

Disassembly:
	0x036DA6D8 BL 0x1BBE55C
	0x036DA6DC MOV X19, X0
	0x036DA6E0 ADRP X0, 0xA63000
	0x036DA6E4 LDR X0, [X0 + 0xD30]
	0x036DA6E8 BL 0x1C16D08
	0x036DA6EC MOV X1, X19
	0x036DA6F0 MOV X2, X31
	0x036DA6F4 BL 0x320A1E8
	0x036DA6F8 B 0x36DA74C
	0x036DA6FC TBZ X0, 0x0, 0x36DA720
	0x036DA700 MOVZ W2, 0x5
	0x036DA704 MOV X0, X22
	0x036DA708 MOV X1, X19
	0x036DA70C MOV X3, X31
	0x036DA710 BL 0x3226C60
	0x036DA714 TBZ X0, 0x0, 0x36DA730
	0x036DA718 MOVZ W8, 0x1
	0x036DA71C STRB W8, [X21]
	0x036DA720 LDP X20, X19, [X31 + 0x20]
	0x036DA724 LDP X22, X21, [X31 + 0x10]
	0x036DA728 LDR X30, [X31], #0x30
	0x036DA72C RET
	0x036DA730 ADRP X0, 0xA66000
	0x036DA734 LDR X0, [X0 + 0x280]
	0x036DA738 BL 0x1C16D08

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xD07000
	005 Move W8, [X20+2756]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xA48000
	012 Move X0, [X0+1024]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2756], W8
	016 Move X20, [X19+56]
	017 Compare X20, 0
	018 JumpIfNotEqual {27}
	019 Move X8, 0xA48000
	020 Move X8, [X8+1024]
	021 Move X0, [X8]
	022 Call 0x1C17F10
	023 Move X1, X31
	024 Move X20, X0
	025 Call X509CertificateCollection..ctor, X0
	026 Move [X19+56], X20
	027 Move X0, X20
	028 Move X20, [X31+16]
	029 Move X19, [X31+24]
	030 Move X30, [X31+32]
	031 Return X0

Method: System.Net.CookieContainer get_Cookies()

Disassembly:
	0x036DA73C MOV X1, X20
	0x036DA740 MOV X2, X19

ISIL:
	001 Move X0, [X0+64]
	002 Return X0

Method: System.Void AddSubProtocol(System.String subProtocol)

Disassembly:
	0x036DA744 MOV X3, X31
	0x036DA748 BL 0x320A264
	0x036DA74C MOV X19, X0
	0x036DA750 ADRP X0, 0xA44000
	0x036DA754 LDR X0, [X0 + 0x308]
	0x036DA758 BL 0x1C16D08
	0x036DA75C BL 0x1C16F10
	0x036DA760 MOV X1, X19
	0x036DA764 MOV X20, X0
	0x036DA768 BL 0x36DA784
	0x036DA76C ADRP X0, 0xA66000
	0x036DA770 LDR X0, [X0 + 0x288]
	0x036DA774 BL 0x1C16D08
	0x036DA778 MOV X1, X0
	0x036DA77C MOV X0, X20
	0x036DA780 BL 0x1C16DEC
	0x036DA784 MOV X2, X31
	0x036DA788 B 0x3661FBC
	0x036DA78C SUB X31, X31, 0x90
	0x036DA790 STR X30, [X31 + 0x60]
	0x036DA794 STP X22, X21, [X31 + 0x70]
	0x036DA798 STP X20, X19, [X31 + 0x80]
	0x036DA79C ADRP X22, 0xD06000
	0x036DA7A0 ADRP X21, 0xA1C000
	0x036DA7A4 LDRB W8, [X22 + 0xACC]
	0x036DA7A8 LDR X21, [X21 + 0x130]
	0x036DA7AC MOV X19, X1
	0x036DA7B0 MOV X20, X0
	0x036DA7B4 TBNZ X8, 0x0, 0x36DA7F0
	0x036DA7B8 ADRP X0, 0xA1C000
	0x036DA7BC LDR X0, [X0 + 0x138]
	0x036DA7C0 BL 0x1C16CF4
	0x036DA7C4 ADRP X0, 0xA66000
	0x036DA7C8 LDR X0, [X0 + 0x290]
	0x036DA7CC BL 0x1C16CF4
	0x036DA7D0 ADRP X0, 0xA1C000
	0x036DA7D4 LDR X0, [X0 + 0x148]
	0x036DA7D8 BL 0x1C16CF4
	0x036DA7DC ADRP X0, 0xA1C000
	0x036DA7E0 LDR X0, [X0 + 0x130]
	0x036DA7E4 BL 0x1C16CF4
	0x036DA7E8 MOVZ W8, 0x1
	0x036DA7EC STRB W8, [X22 + 0xACC]
	0x036DA7F0 LDR X0, [X21]
	0x036DA7F4 MOVI V0.2D, 0x0
	0x036DA7F8 STR X31, [X31 + 0x50]
	0x036DA7FC STP V0, V0, [X31 + 0x30]
	0x036DA800 STP V0, V0, [X31 + 0x10]
	0x036DA804 STR V0, [X31]
	0x036DA808 STP X20, X19, [X31 + 0x20]
	0x036DA80C ADRP X19, 0xA1C000
	0x036DA810 ADRP X21, 0xA66000
	0x036DA814 ADRP X20, 0xA1C000
	0x036DA818 LDR W8, [X0 + 0xE0]
	0x036DA81C LDR X19, [X19 + 0x138]
	0x036DA820 LDR X21, [X21 + 0x290]
	0x036DA824 LDR X20, [X20 + 0x148]
	0x036DA828 CBNZ W8, 0x36DA830
	0x036DA82C BL 0x1C16DFC
	0x036DA830 LDR X0, [X19]
	0x036DA834 ADD X8, X31, 0x0
	0x036DA838 ORR X19, X8, 0xF
	0x036DA83C MOV X8, X19
	0x036DA840 BL 0x263221C
	0x036DA844 LDR X2, [X21]
	0x036DA848 MOVN W8, 0x0
	0x036DA84C ADD X1, X31, 0x0
	0x036DA850 MOV X0, X19
	0x036DA854 STR W8, [X31]
	0x036DA858 BL 0x1FD2514
	0x036DA85C LDR X1, [X20]
	0x036DA860 MOV X0, X19
	0x036DA864 BL 0x2632230
	0x036DA868 LDP X20, X19, [X31 + 0x80]
	0x036DA86C LDP X22, X21, [X31 + 0x70]
	0x036DA870 LDR X30, [X31 + 0x60]
	0x036DA874 ADD X31, X31, 0x90
	0x036DA878 RET
	0x036DA87C STR X30, [X31 - 0x20]!
	0x036DA880 STP X20, X19, [X31 + 0x10]
	0x036DA884 ADRP X20, 0xD06000
	0x036DA888 ADRP X19, 0xA66000
	0x036DA88C LDRB W8, [X20 + 0xACE]
	0x036DA890 LDR X19, [X19 + 0x1A8]
	0x036DA894 TBNZ X8, 0x0, 0x36DA8AC
	0x036DA898 ADRP X0, 0xA66000
	0x036DA89C LDR X0, [X0 + 0x1A8]
	0x036DA8A0 BL 0x1C16CF4
	0x036DA8A4 MOVZ W8, 0x1
	0x036DA8A8 STRB W8, [X20 + 0xACE]
	0x036DA8AC MOVZ W0, 0x6FAF
	0x036DA8B0 MOV X1, X31
	0x036DA8B4 BL 0x3242308
	0x036DA8B8 LDR X8, [X19]
	0x036DA8BC LDP X20, X19, [X31 + 0x10]
	0x036DA8C0 LDR X8, [X8 + 0xB8]
	0x036DA8C4 STR X0, [X8]
	0x036DA8C8 LDR X30, [X31], #0x20
	0x036DA8CC RET
	0x036DA8D0 STR X30, [X31 - 0x20]!
	0x036DA8D4 STP X20, X19, [X31 + 0x10]
	0x036DA8D8 ADRP X19, 0xD06000
	0x036DA8DC ADRP X20, 0xA66000
	0x036DA8E0 LDRB W8, [X19 + 0xACF]
	0x036DA8E4 LDR X20, [X20 + 0x298]
	0x036DA8E8 TBNZ X8, 0x0, 0x36DA900
	0x036DA8EC ADRP X0, 0xA66000
	0x036DA8F0 LDR X0, [X0 + 0x298]
	0x036DA8F4 BL 0x1C16CF4
	0x036DA8F8 MOVZ W8, 0x1
	0x036DA8FC STRB W8, [X19 + 0xACF]
	0x036DA900 LDR X0, [X20]
	0x036DA904 BL 0x1C16F10
	0x036DA908 MOV X1, X31
	0x036DA90C MOV X19, X0
	0x036DA910 BL 0x33BDD8C
	0x036DA914 LDR X8, [X20]
	0x036DA918 LDR X8, [X8 + 0xB8]
	0x036DA91C STR X19, [X8]
	0x036DA920 LDP X20, X19, [X31 + 0x10]
	0x036DA924 LDR X30, [X31], #0x20
	0x036DA928 RET
	0x036DA92C MOV X1, X31
	0x036DA930 B 0x33BDD8C
	0x036DA934 STR X30, [X31 - 0x20]!
	0x036DA938 STP X20, X19, [X31 + 0x10]
	0x036DA93C ADRP X20, 0xD06000
	0x036DA940 LDRB W8, [X20 + 0xAD0]
	0x036DA944 MOV X19, X1
	0x036DA948 TBNZ X8, 0x0, 0x36DA960
	0x036DA94C ADRP X0, 0xA66000
	0x036DA950 LDR X0, [X0 + 0x1A8]
	0x036DA954 BL 0x1C16CF4
	0x036DA958 MOVZ W8, 0x1
	0x036DA95C STRB W8, [X20 + 0xAD0]
	0x036DA960 CBZ X19, 0x36DA98C
	0x036DA964 ADRP X8, 0xA66000
	0x036DA968 LDR X8, [X8 + 0x1A8]
	0x036DA96C MOV X0, X19
	0x036DA970 LDR X1, [X8]
	0x036DA974 LDR X8, [X19]
	0x036DA978 CMP X8, X1
	0x036DA97C B.NE 0x36DA990
	0x036DA980 LDP X20, X19, [X31 + 0x10]
	0x036DA984 LDR X30, [X31], #0x20
	0x036DA988 B 0x36D8E60
	0x036DA98C BL 0x1C16F20
	0x036DA990 BL 0x1C171E0

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+64], X30
	003 Move [X31+72], X23
	004 Move [X31+80], X22
	005 Move [X31+88], X21
	006 Move [X31+96], X20
	007 Move [X31+104], X19
	008 Move X21, 0xD07000
	009 Move W8, [X21+2757]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {33}
	016 Move X0, 0xA41000
	017 Move X0, [X0+4040]
	018 Call 0x1C17CF4
	019 Move X0, 0xA41000
	020 Move X0, [X0+4048]
	021 Call 0x1C17CF4
	022 Move X0, 0xA41000
	023 Move X0, [X0+4056]
	024 Call 0x1C17CF4
	025 Move X0, 0xA1B000
	026 Move X0, [X0+440]
	027 Call 0x1C17CF4
	028 Move X0, 0xA41000
	029 Move X0, [X0+4064]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X21+2757], W8
	033 Move X0, X20
	034 Move [X31+32], X31
	035 Move [X31+40], X31
	036 Move [X31+48], X31
	037 Call ClientWebSocketOptions.ThrowIfReadOnly, X0
	038 Move X0, X19
	039 Call WebSocketValidate.ValidateSubprotocol, X0
	040 Move X0, [X20+24]
	041 Compare X0, 0
	042 JumpIfEqual {133}
	043 Move X8, 0xA41000
	044 Move X8, [X8+4064]
	045 Move X22, 0xA41000
	046 Move X23, 0xA1B000
	047 Move X21, 0xA41000
	048 Move X1, [X8]
	049 Move X22, [X22+4048]
	050 Move X23, [X23+440]
	051 Move X21, [X21+4040]
	052 Add X8, X31, 8
	053 Call List`1<Object>.GetEnumerator, X0
	054 NotImplemented "Instruction LDUR not yet implemented."
	055 Move X8, [X31+24]
	056 Move [X31+2], V0
	057 Move [X31+48], X8
	058 Move X1, [X22]
	059 Add X0, X31, 32
	060 Call Enumerator<Object>.MoveNext, X0
	061 Move TEMP, X0
	062 And TEMP, TEMP, 1
	063 Compare TEMP, 1
	064 JumpIfNotEqual {100}
	065 Move X0, [X31+48]
	066 Move W2, 5
	067 Move X1, X19
	068 Move X3, X31
	069 Call String.Equals, X0, X1, X2
	070 Move TEMP, X0
	071 And TEMP, TEMP, 1
	072 Compare TEMP, 1
	073 JumpIfNotEqual {58}
	074 Move X0, 0xA67000
	075 Move X0, [X0+544]
	076 Call 0x1C17D08
	077 Move X1, X19
	078 Move X2, X31
	079 Call SR.Format, X0, X1
	080 Move X22, X0
	081 Move X0, 0xA22000
	082 Move X0, [X0+1400]
	083 Call 0x1C17D08
	084 Call 0x1C17F10
	085 Move X21, X0
	086 Move X0, 0xA67000
	087 Move X0, [X0+384]
	088 Call 0x1C17D08
	089 Move X2, X0
	090 Move X0, X21
	091 Move X1, X22
	092 Move X3, X31
	093 Call ArgumentException..ctor, X0, X1, X2
	094 Move X0, 0xA67000
	095 Move X0, [X0+552]
	096 Call 0x1C17D08
	097 Move X1, X0
	098 Move X0, X21
	099 Call 0x1C17DEC
	100 Move X1, [X21]
	101 Add X0, X31, 32
	102 Call Enumerator<Object>.Dispose, X0
	103 Move X0, [X20+24]
	104 Compare X0, 0
	105 JumpIfEqual {133}
	106 Move W10, [X0+28]
	107 Move X8, [X0+16]
	108 Move X9, [X23]
	109 Add W10, W10, 1
	110 Move [X0+28], W10
	111 Compare X8, 0
	112 JumpIfEqual {133}
	113 NotImplemented "Instruction LDRSW not yet implemented."
	114 Move W11, [X8+24]
	115 NotImplemented "Instruction CMP not yet implemented."
	116 Add W9, W10, 1
	117 Add X8, X8, X10
	118 Move [X0+24], W9
	119 Move [X8+32], X19
	120 Move X8, [X9+32]
	121 Move X1, X19
	122 Move X8, [X8+192]
	123 Move X2, [X8+112]
	124 Call List`1<Object>.AddWithResize, X0, X1
	125 Move X20, [X31+96]
	126 Move X19, [X31+104]
	127 Move X22, [X31+80]
	128 Move X21, [X31+88]
	129 Move X30, [X31+64]
	130 Move X23, [X31+72]
	131 Add X31, X31, 112
	132 Return 
	133 Call 0x1C17F20
	134 Move X21, X0
	135 NotImplemented "Instruction CMP not yet implemented."
	136 Move X0, X21
	137 Call 0x3EB2AD0
	138 Move X22, [X0]
	139 Call 0x3EB2AE0
	140 Move X8, 0xA41000
	141 Move X8, [X8+4040]
	142 Add X0, X31, 32
	143 Move X1, [X8]
	144 Call Enumerator<Object>.Dispose, X0
	145 Compare X22, 0
	146 JumpIfEqual {103}
	147 Move X0, X22
	148 Call 0x1C17F18
	149 Move X22, X31
	150 Move X21, X0
	151 Move X8, 0xA41000
	152 Move X8, [X8+4040]
	153 Move X1, [X8]
	154 Add X0, X31, 32
	155 Call Enumerator<Object>.Dispose, X0
	156 Compare X22, 0
	157 JumpIfNotEqual {160}
	158 Move X0, X21
	159 Call 0x1D2D690
	160 Move X0, X22
	161 Call 0x1C17F18
	162 Call 0x1991590

Method: System.TimeSpan get_KeepAliveInterval()

Disassembly:
	0x036DA994 STR X30, [X31 - 0x20]!
	0x036DA998 STP X20, X19, [X31 + 0x10]

ISIL:
	001 Move X0, [X0+40]
	002 Return X0

Method: System.Int32 get_ReceiveBufferSize()

Disassembly:
	0x036DA99C ADRP X20, 0xD06000
	0x036DA9A0 LDRB W8, [X20 + 0xAD1]

ISIL:
	001 Move W0, [X0+72]
	002 Return X0

Method: System.Int32 get_SendBufferSize()

Disassembly:
	0x036DA9A4 MOV X19, X1
	0x036DA9A8 TBNZ X8, 0x0, 0x36DA9C0

ISIL:
	001 Move W0, [X0+76]
	002 Return X0

Method: System.Nullable`1<System.ArraySegment`1<System.Byte>> get_Buffer()

Disassembly:
	0x036DA9AC ADRP X0, 0xA22000
	0x036DA9B0 LDR X0, [X0 + 0x788]
	0x036DA9B4 BL 0x1C16CF4
	0x036DA9B8 MOVZ W8, 0x1
	0x036DA9BC STRB W8, [X20 + 0xAD1]

ISIL:
	001 Move X9, [X0+96]
	002 Move V0, [X0+5]
	003 Move [X8+16], X9
	004 Move [X8], V0
	005 Return X0

Method: System.Void SetToReadOnly()

Disassembly:
	0x036D9A08 MOVZ W8, 0x1
	0x036D9A0C STR X20, [X19 + 0x10]
	0x036D9A10 STR W8, [X19 + 0x18]

ISIL:
	001 Move W8, 1
	002 Move [X0+16], W8
	003 Return 

Method: System.Void ThrowIfReadOnly()

Disassembly:
	0x036DA67C LDP X22, X21, [X31 + 0x80]
	0x036DA680 LDP X24, X23, [X31 + 0x70]
	0x036DA684 LDR X30, [X31 + 0x60]
	0x036DA688 ADD X31, X31, 0xA0
	0x036DA68C RET
	0x036DA690 STR X30, [X31 - 0x30]!
	0x036DA694 STP X22, X21, [X31 + 0x10]
	0x036DA698 STP X20, X19, [X31 + 0x20]
	0x036DA69C MOV X8, X2
	0x036DA6A0 MOV X19, X3
	0x036DA6A4 MOV X22, X1
	0x036DA6A8 MOVZ W2, 0x5
	0x036DA6AC MOV X1, X8
	0x036DA6B0 MOV X3, X31
	0x036DA6B4 MOV X21, X4
	0x036DA6B8 MOV X20, X0
	0x036DA6BC BL 0x3226C60
	0x036DA6C0 LDRB W8, [X21]
	0x036DA6C4 CBZ W8, 0x36DA6FC
	0x036DA6C8 TBZ X0, 0x0, 0x36DA720
	0x036DA6CC ADRP X0, 0xA19000
	0x036DA6D0 LDR X0, [X0 + 0x9C8]
	0x036DA6D4 BL 0x1C16D08

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move W8, [X0+16]
	004 Compare W8, 0
	005 JumpIfNotEqual {9}
	006 Move X30, [X31+16]
	007 Move X19, [X31+24]
	008 Return 
	009 Move X0, 0xA1A000
	010 Move X0, [X0+1456]
	011 Call 0x1C17D08
	012 Call 0x1C17F10
	013 Move X19, X0
	014 Move X0, 0xA67000
	015 Move X0, [X0+440]
	016 Call 0x1C17D08
	017 Move X1, X0
	018 Move X0, X19
	019 Move X2, X31
	020 Call InvalidOperationException..ctor, X0, X1
	021 Move X0, 0xA67000
	022 Move X0, [X0+536]
	023 Call 0x1C17D08
	024 Move X1, X0
	025 Move X0, X19
	026 Call 0x1C17DEC

