Type: System.Net.BasicClient

Method: System.Net.Authorization Authenticate(System.String challenge, System.Net.WebRequest webRequest, System.Net.ICredentials credentials)

Disassembly:
	0x03698A60 CBZ X8, 0x3698AC4
	0x03698A64 LDR W9, [X8 + 0x18]
	0x03698A68 CMP W0, W9
	0x03698A6C B.CS 0x3698AC8
	0x03698A70 ADD X8, X8, W0, 0x3, SXTW
	0x03698A74 LDR X9, [X8 + 0x20]!
	0x03698A78 CBNZ X9, 0x3698AB0
	0x03698A7C LDR X9, [X31]
	0x03698A80 STR X9, [X8]
	0x03698A84 LDP W9, W8, [X19 + 0x18]
	0x03698A88 CMP W8, W9
	0x03698A8C B.LT 0x36989DC
	0x03698A90 MOV X0, X19
	0x03698A94 BL 0x369885C
	0x03698A98 CBZ X0, 0x3698AB4
	0x03698A9C MOV X0, X19
	0x03698AA0 BL 0x36988B0
	0x03698AA4 CMP X0, 0x0
	0x03698AA8 CSET W0, NE
	0x03698AAC B 0x3698AB4
	0x03698AB0 MOV W0, W31
	0x03698AB4 LDP X20, X19, [X31 + 0x20]
	0x03698AB8 LDP X30, X21, [X31 + 0x10]
	0x03698ABC ADD X31, X31, 0x30
	0x03698AC0 RET
	0x03698AC4 BL 0x1C16F20
	0x03698AC8 BL 0x1C16F28
	0x03698ACC STP X30, X23, [X31 - 0x30]!
	0x03698AD0 STP X22, X21, [X31 + 0x10]
	0x03698AD4 STP X20, X19, [X31 + 0x20]
	0x03698AD8 MOV X20, X2
	0x03698ADC MOV X21, X1
	0x03698AE0 MOV X19, X0
	0x03698AE4 STR X31, [X1]
	0x03698AE8 STR X31, [X2]
	0x03698AEC BL 0x3698CDC
	0x03698AF0 STR X0, [X21]
	0x03698AF4 LDP W9, W8, [X19 + 0x18]
	0x03698AF8 CMP W8, W9
	0x03698AFC B.GE 0x3698C10
	0x03698B00 MOV X0, X19
	0x03698B04 BL 0x3698C5C
	0x03698B08 LDP W9, W1, [X19 + 0x18]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xD49000
	007 Move W8, [X22+2187]
	008 Move X19, X3
	009 Move X20, X2
	010 Move X21, X1
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0xAA6000
	016 Move X0, [X0+2664]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+2187], W8
	020 Compare X21, 0
	021 JumpIfEqual {47}
	022 Compare X19, 0
	023 JumpIfEqual {47}
	024 Move X0, X21
	025 Move X1, X31
	026 Call String.Trim, X0
	027 Compare X0, 0
	028 JumpIfEqual {54}
	029 Move X1, X31
	030 Call String.ToLower, X0
	031 Compare X0, 0
	032 JumpIfEqual {54}
	033 Move X8, 0xAA6000
	034 Move X8, [X8+2664]
	035 Move W2, 4
	036 Move X3, X31
	037 Move X1, [X8]
	038 Call String.IndexOf, X0, X1, X2
	039 Add W31, W0, 1
	040 Move X0, X20
	041 Move X1, X19
	042 Move X20, [X31+32]
	043 Move X19, [X31+40]
	044 Move X22, [X31+16]
	045 Move X21, [X31+24]
	046 Move X30, [X31+48]
	047 Move X20, [X31+32]
	048 Move X19, [X31+40]
	049 Move X22, [X31+16]
	050 Move X21, [X31+24]
	051 Move X0, X31
	052 Move X30, [X31+48]
	053 Return X0
	054 Call 0x1C17F20

Method: System.Byte[] GetBytes(System.String str)

Disassembly:
	0x03698E0C STR X9, [X0 + 0x20]
	0x03698E10 B.EQ 0x3698E8C
	0x03698E14 ADRP X9, 0xAA6000
	0x03698E18 LDR X9, [X9 + 0x620]
	0x03698E1C CMP W8, 0x2
	0x03698E20 LDR X9, [X9]
	0x03698E24 STR X9, [X0 + 0x28]
	0x03698E28 B.LS 0x3698E8C
	0x03698E2C ADRP X9, 0xA5C000
	0x03698E30 LDR X9, [X9 + 0x870]
	0x03698E34 CMP W8, 0x3
	0x03698E38 LDR X9, [X9]
	0x03698E3C STR X9, [X0 + 0x30]
	0x03698E40 B.EQ 0x3698E8C
	0x03698E44 ADRP X9, 0xAA4000
	0x03698E48 LDR X9, [X9 + 0xAD8]
	0x03698E4C CMP W8, 0x4
	0x03698E50 LDR X9, [X9]
	0x03698E54 STR X9, [X0 + 0x38]
	0x03698E58 B.LS 0x3698E8C
	0x03698E5C ADRP X8, 0xAA6000
	0x03698E60 LDR X8, [X8 + 0x618]
	0x03698E64 ADRP X9, 0xAA6000
	0x03698E68 LDR X8, [X8]
	0x03698E6C LDR X9, [X9 + 0x608]
	0x03698E70 LDP X20, X19, [X31 + 0x10]
	0x03698E74 STR X8, [X0 + 0x40]
	0x03698E78 LDR X8, [X9]
	0x03698E7C LDR X8, [X8 + 0xB8]
	0x03698E80 STR X0, [X8]
	0x03698E84 LDR X30, [X31], #0x20
	0x03698E88 RET
	0x03698E8C BL 0x1C16F28
	0x03698E90 BL 0x1C16F20
	0x03698E94 STR X30, [X31 - 0x20]!
	0x03698E98 STP X20, X19, [X31 + 0x10]
	0x03698E9C ADRP X20, 0xD48000
	0x03698EA0 ADRP X19, 0xAA6000
	0x03698EA4 LDRB W8, [X20 + 0x897]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xD49000
	006 Move W8, [X20+2188]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xA5C000
	013 Move X0, [X0+1560]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+2188], W8
	017 Compare X19, 0
	018 JumpIfEqual {44}
	019 Move X8, 0xA5C000
	020 Move X8, [X8+1560]
	021 Move W20, [X19+16]
	022 Move X0, [X8]
	023 Move W1, W20
	024 Call 0x1C17D6C
	025 Subtract W21, W20, 1
	026 Move X20, X0
	027 Move X0, X19
	028 Move W1, W21
	029 Move X2, X31
	030 Call String.get_Chars, X0, X1
	031 Compare X20, 0
	032 JumpIfEqual {44}
	033 Move W8, [X20+24]
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Add X8, X20, W21
	036 Subtract W21, W21, 1
	037 Move [X8+32], W0
	038 Move X0, X20
	039 Move X20, [X31+16]
	040 Move X19, [X31+24]
	041 Move X30, [X31+32]
	042 Move X21, [X31+40]
	043 Return X0
	044 Call 0x1C17F20
	045 Call 0x1C17F28

Method: System.Net.Authorization InternalAuthenticate(System.Net.WebRequest webRequest, System.Net.ICredentials credentials)

Disassembly:
	0x03698B0C ADD W8, W1, 0x1
	0x03698B10 CMP W8, W9
	0x03698B14 B.GE 0x3698C10
	0x03698B18 LDR X0, [X19 + 0x10]
	0x03698B1C STR W8, [X19 + 0x1C]
	0x03698B20 CBZ X0, 0x3698C58
	0x03698B24 MOV X2, X31
	0x03698B28 BL 0x3222A1C
	0x03698B2C AND W8, W0, 0xFFFF
	0x03698B30 CMP W8, 0x3D
	0x03698B34 B.NE 0x3698C10
	0x03698B38 MOV X0, X19
	0x03698B3C BL 0x3698C5C
	0x03698B40 LDP W8, W1, [X19 + 0x18]
	0x03698B44 ADD W9, W1, 0x1
	0x03698B48 CMP W9, W8
	0x03698B4C B.GE 0x3698C10
	0x03698B50 LDR X0, [X19 + 0x10]
	0x03698B54 CBZ X0, 0x3698C58
	0x03698B58 MOV X2, X31
	0x03698B5C BL 0x3222A1C
	0x03698B60 LDR W21, [X19 + 0x1C]
	0x03698B64 AND W8, W0, 0xFFFF
	0x03698B68 CMP W8, 0x22
	0x03698B6C B.NE 0x3698BA4
	0x03698B70 LDR X0, [X19 + 0x10]
	0x03698B74 ADD W21, W21, 0x1
	0x03698B78 STR W21, [X19 + 0x1C]
	0x03698B7C CBZ X0, 0x3698C58
	0x03698B80 MOVZ W1, 0x22
	0x03698B84 MOV W2, W21
	0x03698B88 MOV X3, X31
	0x03698B8C BL 0x322BDA8
	0x03698B90 ADDS W31, W0, 0x1
	0x03698B94 STR W0, [X19 + 0x1C]
	0x03698B98 B.EQ 0x3698C10
	0x03698B9C MOVZ W22, 0x2
	0x03698BA0 B 0x3698C24
	0x03698BA4 MOVZ X23, 0x2600
	0x03698BA8 MOVZ W22, 0x1
	0x03698BAC MOVK X23, 0x1001
	0x03698BB0 MOV W1, W21
	0x03698BB4 LDR X0, [X19 + 0x10]
	0x03698BB8 CBZ X0, 0x3698C58
	0x03698BBC MOV X2, X31
	0x03698BC0 BL 0x3222A1C
	0x03698BC4 AND W8, W0, 0xFFFF
	0x03698BC8 CMP W8, 0x2C
	0x03698BCC B.HI 0x3698BE0
	0x03698BD0 AND X8, X0, 0xFFFF
	0x03698BD4 LSLV X8, X22, X8
	0x03698BD8 ANDS X31, X8, X23, 0x0
	0x03698BDC B.NE 0x3698BF4
	0x03698BE0 LDP W9, W8, [X19 + 0x18]
	0x03698BE4 ADD W1, W8, 0x1
	0x03698BE8 CMP W1, W9
	0x03698BEC STR W1, [X19 + 0x1C]
	0x03698BF0 B.LT 0x3698BB4
	0x03698BF4 LDR W0, [X19 + 0x1C]
	0x03698BF8 MOVZ W22, 0x1
	0x03698BFC CMP W21, W0
	0x03698C00 B.NE 0x3698C24
	0x03698C04 LDR W8, [X19 + 0x18]
	0x03698C08 CMP W0, W8
	0x03698C0C B.LT 0x3698C24
	0x03698C10 MOV W0, W31
	0x03698C14 LDP X20, X19, [X31 + 0x20]
	0x03698C18 LDP X22, X21, [X31 + 0x10]
	0x03698C1C LDP X30, X23, [X31], #0x30
	0x03698C20 RET
	0x03698C24 LDR X8, [X19 + 0x10]
	0x03698C28 CBZ X8, 0x3698C58
	0x03698C2C SUB W2, W0, W21
	0x03698C30 MOV X0, X8
	0x03698C34 MOV W1, W21
	0x03698C38 MOV X3, X31
	0x03698C3C BL 0x3228DE4
	0x03698C40 STR X0, [X20]
	0x03698C44 LDR W8, [X19 + 0x1C]
	0x03698C48 MOVZ W0, 0x1
	0x03698C4C ADD W8, W8, W22
	0x03698C50 STR W8, [X19 + 0x1C]
	0x03698C54 B 0x3698C14
	0x03698C58 BL 0x1C16F20
	0x03698C5C STP X30, X21, [X31 - 0x20]!
	0x03698C60 STP X20, X19, [X31 + 0x10]
	0x03698C64 LDP W8, W1, [X0 + 0x18]
	0x03698C68 MOV X19, X0
	0x03698C6C CMP W1, W8
	0x03698C70 B.GE 0x3698CC4
	0x03698C74 MOVZ X21, 0x2600
	0x03698C78 MOVZ W0, 0x20
	0x03698C7C MOVZ W20, 0x1
	0x03698C80 MOVK X21, 0x1
	0x03698C84 AND W8, W0, 0xFFFF
	0x03698C88 CMP W8, 0x20
	0x03698C8C B.HI 0x3698CC4
	0x03698C90 AND X8, X0, 0xFFFF
	0x03698C94 LSLV X8, X20, X8
	0x03698C98 ANDS X31, X8, X21, 0x0
	0x03698C9C B.EQ 0x3698CC4
	0x03698CA0 LDR X0, [X19 + 0x10]
	0x03698CA4 ADD W8, W1, 0x1
	0x03698CA8 STR W8, [X19 + 0x1C]
	0x03698CAC CBZ X0, 0x3698CD8
	0x03698CB0 MOV X2, X31
	0x03698CB4 BL 0x3222A1C
	0x03698CB8 LDP W8, W1, [X19 + 0x18]
	0x03698CBC CMP W1, W8
	0x03698CC0 B.LT 0x3698C84
	0x03698CC4 SUB W8, W1, 0x1
	0x03698CC8 STR W8, [X19 + 0x1C]
	0x03698CCC LDP X20, X19, [X31 + 0x10]
	0x03698CD0 LDP X30, X21, [X31], #0x20
	0x03698CD4 RET
	0x03698CD8 BL 0x1C16F20
	0x03698CDC STR X30, [X31 - 0x20]!
	0x03698CE0 STP X20, X19, [X31 + 0x10]
	0x03698CE4 MOV X20, X0
	0x03698CE8 BL 0x3698C5C
	0x03698CEC LDP W8, W19, [X20 + 0x18]
	0x03698CF0 CMP W19, W8
	0x03698CF4 B.GE 0x3698D2C
	0x03698CF8 MOV W1, W19
	0x03698CFC LDR X0, [X20 + 0x10]
	0x03698D00 CBZ X0, 0x3698D68
	0x03698D04 MOV X2, X31
	0x03698D08 BL 0x3222A1C
	0x03698D0C AND W8, W0, 0xFFFF
	0x03698D10 CMP W8, 0x3D
	0x03698D14 B.EQ 0x3698D2C
	0x03698D18 LDP W9, W8, [X20 + 0x18]
	0x03698D1C ADD W1, W8, 0x1
	0x03698D20 CMP W1, W9
	0x03698D24 STR W1, [X20 + 0x1C]
	0x03698D28 B.LT 0x3698CFC
	0x03698D2C LDR X0, [X20 + 0x10]
	0x03698D30 CBZ X0, 0x3698D68
	0x03698D34 LDR W8, [X20 + 0x1C]
	0x03698D38 MOV W1, W19
	0x03698D3C MOV X3, X31
	0x03698D40 SUB W2, W8, W19
	0x03698D44 BL 0x3228DE4
	0x03698D48 CBZ X0, 0x3698D68
	0x03698D4C MOV X1, X31
	0x03698D50 BL 0x322B8DC
	0x03698D54 CBZ X0, 0x3698D68
	0x03698D58 LDP X20, X19, [X31 + 0x10]
	0x03698D5C MOV X1, X31
	0x03698D60 LDR X30, [X31], #0x20
	0x03698D64 B 0x322B5E4
	0x03698D68 BL 0x1C16F20
	0x03698D6C STR X30, [X31 - 0x20]!
	0x03698D70 STP X20, X19, [X31 + 0x10]
	0x03698D74 ADRP X19, 0xD48000
	0x03698D78 ADRP X20, 0xA5B000
	0x03698D7C LDRB W8, [X19 + 0x896]
	0x03698D80 LDR X20, [X20 + 0xAC8]
	0x03698D84 TBNZ X8, 0x0, 0x3698DE4
	0x03698D88 ADRP X0, 0xAA6000
	0x03698D8C LDR X0, [X0 + 0x608]
	0x03698D90 BL 0x1C16CF4
	0x03698D94 ADRP X0, 0xA5B000
	0x03698D98 LDR X0, [X0 + 0xAC8]
	0x03698D9C BL 0x1C16CF4
	0x03698DA0 ADRP X0, 0xA5C000
	0x03698DA4 LDR X0, [X0 + 0x870]
	0x03698DA8 BL 0x1C16CF4
	0x03698DAC ADRP X0, 0xAA6000
	0x03698DB0 LDR X0, [X0 + 0x618]
	0x03698DB4 BL 0x1C16CF4
	0x03698DB8 ADRP X0, 0xAA6000
	0x03698DBC LDR X0, [X0 + 0x620]
	0x03698DC0 BL 0x1C16CF4
	0x03698DC4 ADRP X0, 0xAA4000
	0x03698DC8 LDR X0, [X0 + 0xAD8]
	0x03698DCC BL 0x1C16CF4
	0x03698DD0 ADRP X0, 0xAA6000
	0x03698DD4 LDR X0, [X0 + 0x628]
	0x03698DD8 BL 0x1C16CF4
	0x03698DDC MOVZ W8, 0x1
	0x03698DE0 STRB W8, [X19 + 0x896]
	0x03698DE4 LDR X0, [X20]
	0x03698DE8 MOVZ W1, 0x5
	0x03698DEC BL 0x1C16D6C
	0x03698DF0 CBZ X0, 0x3698E90
	0x03698DF4 LDR W8, [X0 + 0x18]
	0x03698DF8 CBZ W8, 0x3698E8C
	0x03698DFC ADRP X9, 0xAA6000
	0x03698E00 LDR X9, [X9 + 0x628]
	0x03698E04 CMP W8, 0x1
	0x03698E08 LDR X9, [X9]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xD49000
	007 Move W8, [X21+2189]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {46}
	014 Move X0, 0xAA2000
	015 Move X0, [X0+2080]
	016 Call 0x1C17CF4
	017 Move X0, 0xA65000
	018 Move X0, [X0+2536]
	019 Call 0x1C17CF4
	020 Move X0, 0xA84000
	021 Move X0, [X0+2952]
	022 Call 0x1C17CF4
	023 Move X0, 0xAA2000
	024 Move X0, [X0+2088]
	025 Call 0x1C17CF4
	026 Move X0, 0xA5C000
	027 Move X0, [X0+2760]
	028 Call 0x1C17CF4
	029 Move X0, 0xA90000
	030 Move X0, [X0+2040]
	031 Call 0x1C17CF4
	032 Move X0, 0xAA6000
	033 Move X0, [X0+2664]
	034 Call 0x1C17CF4
	035 Move X0, 0xA65000
	036 Move X0, [X0+2440]
	037 Call 0x1C17CF4
	038 Move X0, 0xA97000
	039 Move X0, [X0+2128]
	040 Call 0x1C17CF4
	041 Move X0, 0xA5C000
	042 Move X0, [X0+2440]
	043 Call 0x1C17CF4
	044 Move W8, 1
	045 Move [X21+2189], W8
	046 Compare X20, 0
	047 JumpIfEqual {107}
	048 Move X8, 0xA84000
	049 Move X8, [X8+2952]
	050 Move X9, [X20]
	051 Move X8, [X8]
	052 Move W11, [X9+304]
	053 Move W10, [X8+304]
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Compare X19, 0
	056 JumpIfEqual {107}
	057 Move X9, [X9+200]
	058 Add X9, X9, X10
	059 NotImplemented "Instruction LDUR not yet implemented."
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Move X9, 0xAA2000
	062 Move X20, [X20+40]
	063 Move X8, [X19]
	064 Move X9, [X9+2088]
	065 Move X10, 0xAA6000
	066 Move X1, [X9]
	067 Move X10, [X10+2664]
	068 NotImplemented "Instruction LDRH not yet implemented."
	069 Move X21, [X10]
	070 Compare X9, 0
	071 JumpIfEqual {78}
	072 Move X10, [X8+176]
	073 Add X10, X10, 8
	074 NotImplemented "Instruction LDUR not yet implemented."
	075 NotImplemented "Instruction CMP not yet implemented."
	076 Subtract X9, X9, 1
	077 Add X10, X10, 16
	078 Move X0, X19
	079 Move W2, W31
	080 Call 0x1C5D788
	081 NotImplemented "Instruction LDRSW not yet implemented."
	082 Add X8, X8, X9
	083 Add X0, X8, 312
	084 Move X8, [X0]
	085 Move X3, [X0+8]
	086 Move X0, X19
	087 Move X1, X20
	088 Move X2, X21
	089 NotImplemented "Instruction BLR not yet implemented."
	090 Compare X0, 0
	091 JumpIfEqual {107}
	092 Move X1, X31
	093 Move X21, X0
	094 Call NetworkCredential.get_UserName, X0
	095 Compare X0, 0
	096 JumpIfEqual {107}
	097 Move X22, 0xA5C000
	098 Move X22, [X22+2440]
	099 Move X2, X31
	100 Move X19, X0
	101 Move X1, [X22]
	102 Call String.op_Equality, X0, X1
	103 Move TEMP, X0
	104 And TEMP, TEMP, 1
	105 Compare TEMP, 1
	106 JumpIfNotEqual {114}
	107 Move X0, X31
	108 Move X20, [X31+32]
	109 Move X19, [X31+40]
	110 Move X22, [X31+16]
	111 Move X21, [X31+24]
	112 Move X30, [X31+48]
	113 Return X0
	114 Move X0, X21
	115 Move X1, X31
	116 Call NetworkCredential.get_Password, X0
	117 Move X20, X0
	118 Move X0, X21
	119 Move X1, X31
	120 Call NetworkCredential.get_Domain, X0
	121 Compare X0, 0
	122 JumpIfEqual {141}
	123 Move X1, [X22]
	124 Move X2, X31
	125 Move X21, X0
	126 Call String.op_Equality, X0, X1
	127 Move TEMP, X0
	128 And TEMP, TEMP, 1
	129 Compare TEMP, 1
	130 JumpIfEqual {141}
	131 Move X0, X21
	132 Move X1, X31
	133 Call String.Trim, X0
	134 Move X1, [X22]
	135 Move X2, X31
	136 Call String.op_Equality, X0, X1
	137 Move TEMP, X0
	138 And TEMP, TEMP, 1
	139 Compare TEMP, 1
	140 JumpIfNotEqual {179}
	141 Move X8, 0xA65000
	142 Move X8, [X8+2440]
	143 Move X0, X19
	144 Move X2, X20
	145 Move X3, X31
	146 Move X1, [X8]
	147 Call String.Concat, X0, X1, X2
	148 Call BasicClient.GetBytes, X0
	149 Move X8, 0xA65000
	150 Move X8, [X8+2536]
	151 Move X19, X0
	152 Move X8, [X8]
	153 Move W9, [X8+224]
	154 Compare W9, 0
	155 JumpIfNotEqual {158}
	156 Move X0, X8
	157 Call 0x1C17DFC
	158 Move X0, X19
	159 Move X1, X31
	160 Call Convert.ToBase64String, X0
	161 Move X8, 0xA97000
	162 Move X8, [X8+2128]
	163 Move X1, X0
	164 Move X2, X31
	165 Move X8, [X8]
	166 Move X0, X8
	167 Call String.Concat, X0, X1
	168 Move X8, 0xAA2000
	169 Move X8, [X8+2080]
	170 Move X19, X0
	171 Move X8, [X8]
	172 Move X0, X8
	173 Call 0x1C17F10
	174 Move X1, X19
	175 Move X2, X31
	176 Move X20, X0
	177 Call Authorization..ctor, X0, X1
	178 Move X0, X20
	179 Move X8, 0xA5C000
	180 Move X8, [X8+2760]
	181 Move W1, 5
	182 Move X0, [X8]
	183 Call 0x1C17D6C
	184 Compare X0, 0
	185 JumpIfEqual {207}
	186 Move W8, [X0+24]
	187 Compare W8, 0
	188 JumpIfEqual {206}
	189 NotImplemented "Instruction CMP not yet implemented."
	190 Move [X0+32], X21
	191 Move X9, 0xA90000
	192 Move X9, [X9+2040]
	193 NotImplemented "Instruction CMP not yet implemented."
	194 Move X9, [X9]
	195 Move [X0+40], X9
	196 NotImplemented "Instruction CMP not yet implemented."
	197 Move [X0+48], X19
	198 Move X9, 0xA65000
	199 Move X9, [X9+2440]
	200 NotImplemented "Instruction CMP not yet implemented."
	201 Move X9, [X9]
	202 Move [X0+56], X9
	203 Move X1, X31
	204 Move [X0+64], X20
	205 Call String.Concat, X0
	206 Call 0x1C17F28
	207 Call 0x1C17F20

Method: System.Net.Authorization PreAuthenticate(System.Net.WebRequest webRequest, System.Net.ICredentials credentials)

Disassembly:
	0x03698EA8 LDR X19, [X19 + 0x630]
	0x03698EAC TBNZ X8, 0x0, 0x3698EC4
	0x03698EB0 ADRP X0, 0xAA6000

ISIL:
	001 Move X0, X1
	002 Move X1, X2
	003 Call BasicClient.InternalAuthenticate, X0, X1
	004 Return X0

Method: System.String get_AuthenticationType()

Disassembly:
	0x03698EB4 LDR X0, [X0 + 0x630]
	0x03698EB8 BL 0x1C16CF4
	0x03698EBC MOVZ W8, 0x1
	0x03698EC0 STRB W8, [X20 + 0x897]
	0x03698EC4 MOV X0, X31
	0x03698EC8 BL 0x3256158
	0x03698ECC LDR X8, [X19]
	0x03698ED0 LDP X20, X19, [X31 + 0x10]
	0x03698ED4 LDR X8, [X8 + 0xB8]
	0x03698ED8 STR X0, [X8]
	0x03698EDC LDR X30, [X31], #0x20
	0x03698EE0 RET
	0x03698EE4 STP X30, X21, [X31 - 0x20]!
	0x03698EE8 STP X20, X19, [X31 + 0x10]
	0x03698EEC ADRP X21, 0xD48000
	0x03698EF0 ADRP X20, 0xA5C000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0xD49000
	005 Move X20, 0xAA7000
	006 Move W8, [X19+2190]
	007 Move X20, [X20+1504]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xAA7000
	013 Move X0, [X0+1504]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+2190], W8
	017 Move X0, [X20]
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Return X0

Method: System.Void .ctor()

Disassembly:
	0x03697EC4 LDRB W8, [X19 + 0x88E]
	0x03697EC8 LDR X20, [X20 + 0x5E0]

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

