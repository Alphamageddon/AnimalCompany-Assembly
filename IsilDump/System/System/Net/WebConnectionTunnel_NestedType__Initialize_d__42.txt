Type: System.Net.WebConnectionTunnel/<Initialize>d__42

Method: System.Void MoveNext()

Disassembly:
	0x036AF6E8 ADRP X23, 0xA44000
	0x036AF6EC ADRP X26, 0xA90000
	0x036AF6F0 ADRP X28, 0xA6C000
	0x036AF6F4 LDR X29, [X29 + 0x1C0]
	0x036AF6F8 LDR X22, [X22 + 0x168]
	0x036AF6FC LDR X23, [X23 + 0xDD8]
	0x036AF700 LDR X26, [X26 + 0x1C8]
	0x036AF704 LDR X28, [X28 + 0xB28]
	0x036AF708 MOV W27, W31
	0x036AF70C LDR X8, [X0]
	0x036AF710 LDR X1, [X8 + 0x3C0]
	0x036AF714 LDR X9, [X8 + 0x3B8]
	0x036AF718 BLR X9
	0x036AF71C MOV X21, X0
	0x036AF720 LDR X0, [X19 + 0x50]
	0x036AF724 CBZ X0, 0x36AFA8C
	0x036AF728 LDR X8, [X0]
	0x036AF72C LDP X9, X1, [X8 + 0x1E8]
	0x036AF730 BLR X9
	0x036AF734 MOV X2, X0
	0x036AF738 ADD X1, X31, 0x3C
	0x036AF73C ADD X3, X31, 0x30
	0x036AF740 MOV X0, X21
	0x036AF744 BL 0x36A9F18
	0x036AF748 TBZ X0, 0x0, 0x36AF5F0
	0x036AF74C LDR X8, [X31 + 0x30]
	0x036AF750 CBZ X8, 0x36AF868
	0x036AF754 TBZ X27, 0x0, 0x36AF770
	0x036AF758 CBZ X20, 0x36AFA90
	0x036AF75C MOV X0, X20
	0x036AF760 MOV X1, X8
	0x036AF764 MOV X2, X31
	0x036AF768 BL 0x3680E44
	0x036AF76C B 0x36AF858
	0x036AF770 MOVZ W1, 0x20
	0x036AF774 MOV X0, X8
	0x036AF778 MOV W2, W31
	0x036AF77C MOV X3, X31
	0x036AF780 BL 0x3229AE8
	0x036AF784 MOV X21, X0
	0x036AF788 CBZ X0, 0x36AFA94
	0x036AF78C LDR W8, [X21 + 0x18]
	0x036AF790 CMP W8, 0x1
	0x036AF794 B.LE 0x36AFA98
	0x036AF798 LDR X0, [X21 + 0x20]
	0x036AF79C LDR X1, [X29]
	0x036AF7A0 MOVZ W2, 0x1
	0x036AF7A4 MOV X3, X31
	0x036AF7A8 BL 0x3225904
	0x036AF7AC CBZ W0, 0x36AF7EC
	0x036AF7B0 LDR W8, [X21 + 0x18]
	0x036AF7B4 CBZ W8, 0x36AFAC8
	0x036AF7B8 LDR X0, [X21 + 0x20]
	0x036AF7BC LDR X1, [X26]
	0x036AF7C0 MOVZ W2, 0x1
	0x036AF7C4 MOV X3, X31
	0x036AF7C8 BL 0x3225904
	0x036AF7CC CBNZ W0, 0x36AFACC
	0x036AF7D0 LDR X0, [X22]
	0x036AF7D4 LDR W8, [X0 + 0xE0]
	0x036AF7D8 CBNZ W8, 0x36AF7E0
	0x036AF7DC BL 0x1C16DFC
	0x036AF7E0 CBZ X24, 0x36AFAC4
	0x036AF7E4 MOVZ W8, 0x8
	0x036AF7E8 B 0x36AF804
	0x036AF7EC LDR X0, [X22]
	0x036AF7F0 LDR W8, [X0 + 0xE0]
	0x036AF7F4 CBNZ W8, 0x36AF7FC
	0x036AF7F8 BL 0x1C16DFC
	0x036AF7FC CBZ X24, 0x36AFAF4
	0x036AF800 MOVZ W8, 0x10
	0x036AF804 LDR X9, [X22]
	0x036AF808 LDR X9, [X9 + 0xB8]
	0x036AF80C LDR X8, [X9, X8, LSL]
	0x036AF810 STR X8, [X24 + 0x50]
	0x036AF814 LDR W8, [X21 + 0x18]
	0x036AF818 CMP W8, 0x1
	0x036AF81C B.LS 0x36AFAC0
	0x036AF820 LDR X0, [X21 + 0x28]
	0x036AF824 MOV X1, X31
	0x036AF828 BL 0x3399E44
	0x036AF82C STR W0, [X19 + 0x40]
	0x036AF830 LDR W8, [X21 + 0x18]
	0x036AF834 CMP W8, 0x3
	0x036AF838 B.LT 0x36AF858
	0x036AF83C LDR X0, [X23]
	0x036AF840 SUB W3, W8, 0x2
	0x036AF844 MOVZ W2, 0x2
	0x036AF848 MOV X1, X21
	0x036AF84C MOV X4, X31
	0x036AF850 BL 0x3228058
	0x036AF854 STR X0, [X24 + 0x38]
	0x036AF858 LDR X0, [X19 + 0x50]
	0x036AF85C MOVZ W27, 0x1
	0x036AF860 CBNZ X0, 0x36AF70C
	0x036AF864 BL 0x1C16F20
	0x036AF868 CBZ X20, 0x36AFB2C
	0x036AF86C LDR X1, [X28]
	0x036AF870 MOV X0, X20
	0x036AF874 MOV X2, X31
	0x036AF878 BL 0x366456C
	0x036AF87C MOV X21, X0
	0x036AF880 MOV X1, X31
	0x036AF884 BL 0x32277A8
	0x036AF888 TBNZ X0, 0x0, 0x36AF8A0
	0x036AF88C ADD X1, X31, 0x1C
	0x036AF890 MOV X0, X21
	0x036AF894 MOV X2, X31
	0x036AF898 BL 0x337BDF4
	0x036AF89C TBNZ X0, 0x0, 0x36AF8A4
	0x036AF8A0 STR W31, [X31 + 0x1C]
	0x036AF8A4 LDR X0, [X19 + 0x50]
	0x036AF8A8 CBZ X0, 0x36AFB30
	0x036AF8AC LDR X8, [X0]
	0x036AF8B0 LDP X9, X1, [X8 + 0x1E8]
	0x036AF8B4 BLR X9
	0x036AF8B8 LDRSW X22, [X31 + 0x3C]
	0x036AF8BC LDRSW X23, [X31 + 0x1C]
	0x036AF8C0 SUB X8, X0, X22
	0x036AF8C4 SUB X8, X8, X23
	0x036AF8C8 CMP X8, 0x1
	0x036AF8CC B.LT 0x36AF960
	0x036AF8D0 LDR X0, [X19 + 0x50]
	0x036AF8D4 CBZ X0, 0x36AFB34
	0x036AF8D8 LDR X8, [X0]
	0x036AF8DC LDP X9, X1, [X8 + 0x1E8]
	0x036AF8E0 BLR X9
	0x036AF8E4 ADRP X8, 0xA44000
	0x036AF8E8 LDR W9, [X31 + 0x1C]
	0x036AF8EC LDR X8, [X8 + 0x618]
	0x036AF8F0 SUB W10, W0, W22
	0x036AF8F4 SUB W1, W10, W9
	0x036AF8F8 LDR X8, [X8]
	0x036AF8FC MOV X0, X8
	0x036AF900 BL 0x1C16D6C
	0x036AF904 MOV X8, X0
	0x036AF908 LDR X0, [X19 + 0x50]
	0x036AF90C STR X8, [X19 + 0x38]
	0x036AF910 CBZ X0, 0x36AFB38
	0x036AF914 LDR X8, [X0]
	0x036AF918 LDR X1, [X8 + 0x3C0]
	0x036AF91C LDR X9, [X8 + 0x3B8]
	0x036AF920 BLR X9
	0x036AF924 LDR X2, [X19 + 0x38]
	0x036AF928 CBZ X2, 0x36AFB3C
	0x036AF92C LDR W8, [X31 + 0x1C]
	0x036AF930 LDR W4, [X2 + 0x18]
	0x036AF934 ADD W1, W8, W22
	0x036AF938 MOV W3, W31
	0x036AF93C MOV X5, X31
	0x036AF940 BL 0x33A8A9C
	0x036AF944 B 0x36AF98C
	0x036AF948 LDUR V0, [X19 + 0x58]
	0x036AF94C MOVN W8, 0x0
	0x036AF950 STR V0, [X31 + 0x2]
	0x036AF954 STP X31, X31, [X19 + 0x58]
	0x036AF958 STR W8, [X19]
	0x036AF95C B 0x36AF674
	0x036AF960 LDR X0, [X19 + 0x50]
	0x036AF964 CBZ X0, 0x36AFB40
	0x036AF968 LDR X8, [X0]
	0x036AF96C LDR X21, [X19 + 0x28]
	0x036AF970 LDP X9, X1, [X8 + 0x1E8]
	0x036AF974 BLR X9
	0x036AF978 CBZ X24, 0x36AFB44
	0x036AF97C ADD W8, W23, W22
	0x036AF980 SUB W2, W8, W0
	0x036AF984 MOV X1, X21
	0x036AF988 BL 0x36AE654
	0x036AF98C ADRP X8, 0xA90000
	0x036AF990 LDR X2, [X19 + 0x38]
	0x036AF994 LDR W3, [X19 + 0x40]
	0x036AF998 LDR X8, [X8 + 0x1B8]
	0x036AF99C STP X31, X31, [X31 + 0x60]
	0x036AF9A0 STR X31, [X31 + 0x70]
	0x036AF9A4 LDR X4, [X8]
	0x036AF9A8 ADD X0, X31, 0x60
	0x036AF9AC MOV X1, X20
	0x036AF9B0 BL 0x27BFE90
	0x036AF9B4 LDR X8, [X31 + 0x70]
	0x036AF9B8 LDR V0, [X31 + 0x6]
	0x036AF9BC ADRP X9, 0xA90000
	0x036AF9C0 STR X8, [X31 + 0x50]
	0x036AF9C4 MOVN W8, 0x1
	0x036AF9C8 STR V0, [X31 + 0x4]
	0x036AF9CC STR W8, [X19]
	0x036AF9D0 STR X31, [X19 + 0x38]
	0x036AF9D4 STP X31, X31, [X25]
	0x036AF9D8 LDR V0, [X31 + 0x4]
	0x036AF9DC LDR X8, [X31 + 0x50]
	0x036AF9E0 LDR X9, [X9 + 0x108]
	0x036AF9E4 ADD X19, X19, 0x8
	0x036AF9E8 STR V0, [X31]
	0x036AF9EC STR X8, [X31 + 0x10]
	0x036AF9F0 LDR X0, [X9]
	0x036AF9F4 LDR W8, [X0 + 0xE0]
	0x036AF9F8 CBNZ W8, 0x36AFA00
	0x036AF9FC BL 0x1C16DFC
	0x036AFA00 ADRP X9, 0xA90000
	0x036AFA04 LDR V0, [X31]
	0x036AFA08 LDR X8, [X31 + 0x10]
	0x036AFA0C LDR X9, [X9 + 0x1A8]
	0x036AFA10 ADD X1, X31, 0x60
	0x036AFA14 MOV X0, X19
	0x036AFA18 STR V0, [X31 + 0x6]
	0x036AFA1C LDR X2, [X9]
	0x036AFA20 STR X8, [X31 + 0x70]
	0x036AFA24 BL 0x24DC224
	0x036AFA28 LDP X20, X19, [X31 + 0xD0]
	0x036AFA2C LDP X22, X21, [X31 + 0xC0]
	0x036AFA30 LDP X24, X23, [X31 + 0xB0]
	0x036AFA34 LDP X26, X25, [X31 + 0xA0]
	0x036AFA38 LDP X28, X27, [X31 + 0x90]
	0x036AFA3C LDP X29, X30, [X31 + 0x80]
	0x036AFA40 ADD X31, X31, 0xE0
	0x036AFA44 RET
	0x036AFA48 STR W31, [X19]
	0x036AFA4C LDR V0, [X31 + 0x2]
	0x036AFA50 ADRP X8, 0xA90000
	0x036AFA54 STUR V0, [X19 + 0x58]
	0x036AFA58 LDR X8, [X8 + 0x108]
	0x036AFA5C LDR X0, [X8]
	0x036AFA60 LDR W8, [X0 + 0xE0]
	0x036AFA64 CBNZ W8, 0x36AFA6C
	0x036AFA68 BL 0x1C16DFC
	0x036AFA6C ADRP X8, 0xA90000
	0x036AFA70 LDR X8, [X8 + 0x1A0]
	0x036AFA74 ADD X0, X19, 0x8
	0x036AFA78 LDR X3, [X8]
	0x036AFA7C ADD X1, X31, 0x20
	0x036AFA80 MOV X2, X19
	0x036AFA84 BL 0x1FA98C4
	0x036AFA88 B 0x36AFA28
	0x036AFA8C BL 0x1C16F20
	0x036AFA90 BL 0x1C16F20
	0x036AFA94 BL 0x1C16F20
	0x036AFA98 MOVZ W0, 0xB
	0x036AFA9C MOV X1, X31
	0x036AFAA0 BL 0x36A9D98
	0x036AFAA4 MOV X20, X0
	0x036AFAA8 ADRP X0, 0xA90000
	0x036AFAAC LDR X0, [X0 + 0x1B0]
	0x036AFAB0 BL 0x1C16D08
	0x036AFAB4 MOV X1, X0
	0x036AFAB8 MOV X0, X20
	0x036AFABC BL 0x1C16DEC
	0x036AFAC0 BL 0x1C16F28
	0x036AFAC4 BL 0x1C16F20
	0x036AFAC8 BL 0x1C16F28
	0x036AFACC MOVZ W0, 0xB
	0x036AFAD0 MOV X1, X31
	0x036AFAD4 BL 0x36A9D98
	0x036AFAD8 MOV X20, X0
	0x036AFADC ADRP X0, 0xA90000
	0x036AFAE0 LDR X0, [X0 + 0x1B0]
	0x036AFAE4 BL 0x1C16D08
	0x036AFAE8 MOV X1, X0
	0x036AFAEC MOV X0, X20
	0x036AFAF0 BL 0x1C16DEC
	0x036AFAF4 BL 0x1C16F20
	0x036AFAF8 BL 0x1C16F20
	0x036AFAFC BL 0x1C16F20
	0x036AFB00 BL 0x1C16F20
	0x036AFB04 MOVZ W0, 0xB
	0x036AFB08 MOV X1, X31
	0x036AFB0C BL 0x36A9D98
	0x036AFB10 MOV X20, X0
	0x036AFB14 ADRP X0, 0xA90000
	0x036AFB18 LDR X0, [X0 + 0x1B0]
	0x036AFB1C BL 0x1C16D08
	0x036AFB20 MOV X1, X0
	0x036AFB24 MOV X0, X20
	0x036AFB28 BL 0x1C16DEC
	0x036AFB2C BL 0x1C16F20
	0x036AFB30 BL 0x1C16F20
	0x036AFB34 BL 0x1C16F20
	0x036AFB38 BL 0x1C16F20
	0x036AFB3C BL 0x1C16F20
	0x036AFB40 BL 0x1C16F20
	0x036AFB44 BL 0x1C16F20
	0x036AFB48 B 0x36AFC08
	0x036AFB4C B 0x36AFC08
	0x036AFB50 B 0x36AFC08
	0x036AFB54 B 0x36AFC08
	0x036AFB58 B 0x36AFC08
	0x036AFB5C B 0x36AFC08
	0x036AFB60 B 0x36AFC08
	0x036AFB64 B 0x36AFC08
	0x036AFB68 B 0x36AFC08
	0x036AFB6C B 0x36AFC08
	0x036AFB70 B 0x36AFC08
	0x036AFB74 B 0x36AFC08
	0x036AFB78 B 0x36AFC08
	0x036AFB7C B 0x36AFC08
	0x036AFB80 B 0x36AFC08
	0x036AFB84 B 0x36AFC08
	0x036AFB88 B 0x36AFC08
	0x036AFB8C B 0x36AFC08
	0x036AFB90 B 0x36AFC08
	0x036AFB94 B 0x36AFC08
	0x036AFB98 B 0x36AFC08
	0x036AFB9C B 0x36AFC08
	0x036AFBA0 B 0x36AFC08
	0x036AFBA4 B 0x36AFC08
	0x036AFBA8 B 0x36AFC08
	0x036AFBAC B 0x36AFC08
	0x036AFBB0 B 0x36AFC08
	0x036AFBB4 B 0x36AFC08
	0x036AFBB8 B 0x36AFC08
	0x036AFBBC B 0x36AFC08
	0x036AFBC0 B 0x36AFC08
	0x036AFBC4 B 0x36AFC08
	0x036AFBC8 B 0x36AFC08
	0x036AFBCC B 0x36AFC08
	0x036AFBD0 B 0x36AFC08
	0x036AFBD4 B 0x36AFC08
	0x036AFBD8 B 0x36AFC08
	0x036AFBDC B 0x36AFC08
	0x036AFBE0 B 0x36AFC08
	0x036AFBE4 B 0x36AFC08
	0x036AFBE8 B 0x36AFC08
	0x036AFBEC B 0x36AFC08
	0x036AFBF0 B 0x36AFC08
	0x036AFBF4 B 0x36AFC08
	0x036AFBF8 B 0x36AFC08
	0x036AFBFC B 0x36AFC08
	0x036AFC00 B 0x36AFC08
	0x036AFC04 B 0x36AFC08
	0x036AFC08 MOV X20, X0
	0x036AFC0C CMP W1, 0x1
	0x036AFC10 B.NE 0x36AFCB8
	0x036AFC14 MOV X0, X20
	0x036AFC18 BL 0x3EB1AD0
	0x036AFC1C MOV X20, X0
	0x036AFC20 ADRP X0, 0xA44000
	0x036AFC24 LDR X0, [X0 + 0x7D0]
	0x036AFC28 BL 0x1C16D08
	0x036AFC2C LDR X8, [X20]
	0x036AFC30 LDR X1, [X8]
	0x036AFC34 BL 0x1C17270
	0x036AFC38 TBZ X0, 0x0, 0x36AFC90
	0x036AFC3C LDR X20, [X20]
	0x036AFC40 BL 0x3EB1AE0
	0x036AFC44 MOVN W8, 0x1
	0x036AFC48 STR X31, [X19 + 0x38]
	0x036AFC4C STR W8, [X19]
	0x036AFC50 STP X31, X31, [X19 + 0x48]
	0x036AFC54 ADRP X0, 0xA90000
	0x036AFC58 LDR X0, [X0 + 0x108]
	0x036AFC5C ADD X21, X19, 0x8
	0x036AFC60 BL 0x1C16D08
	0x036AFC64 LDR W8, [X0 + 0xE0]
	0x036AFC68 CBNZ W8, 0x36AFC70
	0x036AFC6C BL 0x1C16DFC
	0x036AFC70 ADRP X0, 0xA90000
	0x036AFC74 LDR X0, [X0 + 0x1D0]
	0x036AFC78 BL 0x1C16D08
	0x036AFC7C MOV X2, X0
	0x036AFC80 MOV X0, X21
	0x036AFC84 MOV X1, X20
	0x036AFC88 BL 0x24DC4C0
	0x036AFC8C B 0x36AFA28
	0x036AFC90 MOVZ W0, 0x8
	0x036AFC94 BL 0x3EB1AF0
	0x036AFC98 LDR X8, [X20]
	0x036AFC9C STR X8, [X0]
	0x036AFCA0 ADRP X1, 0x805000
	0x036AFCA4 ADD X1, X1, 0xE58
	0x036AFCA8 MOV X2, X31
	0x036AFCAC BL 0x3EB1B00
	0x036AFCB0 MOV X20, X0
	0x036AFCB4 BL 0x3EB1AE0
	0x036AFCB8 MOV X0, X20
	0x036AFCBC BL 0x1D2C690
	0x036AFCC0 BL 0x1990590
	0x036AFCC4 STR X30, [X31 - 0x30]!
	0x036AFCC8 STP X22, X21, [X31 + 0x10]
	0x036AFCCC STP X20, X19, [X31 + 0x20]
	0x036AFCD0 ADRP X22, 0xD31000
	0x036AFCD4 ADRP X21, 0xA90000
	0x036AFCD8 LDRB W8, [X22 + 0x94A]
	0x036AFCDC LDR X21, [X21 + 0x108]
	0x036AFCE0 MOV X19, X1
	0x036AFCE4 MOV X20, X0
	0x036AFCE8 TBNZ X8, 0x0, 0x36AFD0C
	0x036AFCEC ADRP X0, 0xA90000
	0x036AFCF0 LDR X0, [X0 + 0x1D8]
	0x036AFCF4 BL 0x1C16CF4
	0x036AFCF8 ADRP X0, 0xA90000
	0x036AFCFC LDR X0, [X0 + 0x108]
	0x036AFD00 BL 0x1C16CF4
	0x036AFD04 MOVZ W8, 0x1
	0x036AFD08 STRB W8, [X22 + 0x94A]
	0x036AFD0C LDR X0, [X21]
	0x036AFD10 ADRP X21, 0xA90000
	0x036AFD14 LDR W8, [X0 + 0xE0]
	0x036AFD18 LDR X21, [X21 + 0x1D8]
	0x036AFD1C CBNZ W8, 0x36AFD24
	0x036AFD20 BL 0x1C16DFC
	0x036AFD24 LDR X2, [X21]
	0x036AFD28 ADD X0, X20, 0x8
	0x036AFD2C MOV X1, X19
	0x036AFD30 LDP X20, X19, [X31 + 0x20]
	0x036AFD34 LDP X22, X21, [X31 + 0x10]
	0x036AFD38 LDR X30, [X31], #0x30
	0x036AFD3C B 0x24DC19C
	0x036AFD40 LDR X0, [X0 + 0x10]
	0x036AFD44 RET
	0x036AFD48 LDR X0, [X0 + 0x18]
	0x036AFD4C RET
	0x036AFD50 STR X1, [X0 + 0x18]
	0x036AFD54 RET
	0x036AFD58 LDR X0, [X0 + 0x20]
	0x036AFD5C RET
	0x036AFD60 STR X1, [X0 + 0x20]
	0x036AFD64 RET
	0x036AFD68 LDR X0, [X0 + 0x28]
	0x036AFD6C RET
	0x036AFD70 LDRB W0, [X0 + 0x30]
	0x036AFD74 RET
	0x036AFD78 STP X29, X30, [X31 - 0x60]!
	0x036AFD7C STP X28, X27, [X31 + 0x10]
	0x036AFD80 STP X26, X25, [X31 + 0x20]
	0x036AFD84 STP X24, X23, [X31 + 0x30]
	0x036AFD88 STP X22, X21, [X31 + 0x40]
	0x036AFD8C STP X20, X19, [X31 + 0x50]
	0x036AFD90 ADRP X24, 0xD31000
	0x036AFD94 ADRP X28, 0xA46000
	0x036AFD98 LDRB W8, [X24 + 0x94B]
	0x036AFD9C LDR X28, [X28 + 0xA50]
	0x036AFDA0 MOV X20, X4
	0x036AFDA4 MOV W23, W3
	0x036AFDA8 MOV X21, X2
	0x036AFDAC MOV X22, X1
	0x036AFDB0 MOV X19, X0
	0x036AFDB4 TBNZ X8, 0x0, 0x36AFE14
	0x036AFDB8 ADRP X0, 0xA46000
	0x036AFDBC LDR X0, [X0 + 0xA50]
	0x036AFDC0 BL 0x1C16CF4
	0x036AFDC4 ADRP X0, 0xA90000
	0x036AFDC8 LDR X0, [X0 + 0x1E0]
	0x036AFDCC BL 0x1C16CF4
	0x036AFDD0 ADRP X0, 0xA90000
	0x036AFDD4 LDR X0, [X0 + 0x1E8]
	0x036AFDD8 BL 0x1C16CF4
	0x036AFDDC ADRP X0, 0xA90000
	0x036AFDE0 LDR X0, [X0 + 0x1F0]
	0x036AFDE4 BL 0x1C16CF4
	0x036AFDE8 ADRP X0, 0xA90000
	0x036AFDEC LDR X0, [X0 + 0x1F8]
	0x036AFDF0 BL 0x1C16CF4
	0x036AFDF4 ADRP X0, 0xA90000
	0x036AFDF8 LDR X0, [X0 + 0x200]
	0x036AFDFC BL 0x1C16CF4
	0x036AFE00 ADRP X0, 0xA90000
	0x036AFE04 LDR X0, [X0 + 0x208]
	0x036AFE08 BL 0x1C16CF4
	0x036AFE0C MOVZ W8, 0x1
	0x036AFE10 STRB W8, [X24 + 0x94B]
	0x036AFE14 ADRP X24, 0xA90000
	0x036AFE18 ADRP X29, 0xA90000
	0x036AFE1C ADRP X27, 0xA90000
	0x036AFE20 ADRP X26, 0xA90000
	0x036AFE24 ADRP X25, 0xA90000
	0x036AFE28 LDR X24, [X24 + 0x200]
	0x036AFE2C LDR X29, [X29 + 0x1E0]
	0x036AFE30 LDR X27, [X27 + 0x1F8]
	0x036AFE34 LDR X26, [X26 + 0x1F0]
	0x036AFE38 LDR X25, [X25 + 0x208]
	0x036AFE3C MOV X0, X19
	0x036AFE40 MOV X1, X31
	0x036AFE44 AND W23, W23, 0x1
	0x036AFE48 BL 0x33BDD8C
	0x036AFE4C STR X22, [X19 + 0x10]
	0x036AFE50 STR X21, [X19 + 0x28]
	0x036AFE54 STRB W23, [X19 + 0x30]
	0x036AFE58 LDR X0, [X28]
	0x036AFE5C LDR W8, [X0 + 0xE0]
	0x036AFE60 CBNZ W8, 0x36AFE68
	0x036AFE64 BL 0x1C16DFC
	0x036AFE68 MOV X0, X20
	0x036AFE6C MOV X1, X31
	0x036AFE70 BL 0x33E0DCC
	0x036AFE74 STR X0, [X19 + 0x38]
	0x036AFE78 LDR X0, [X24]
	0x036AFE7C BL 0x1C16F10
	0x036AFE80 LDR X2, [X29]
	0x036AFE84 MOVZ W1, 0x1
	0x036AFE88 MOV X20, X0
	0x036AFE8C BL 0x2850BBC
	0x036AFE90 STR X20, [X19 + 0x40]
	0x036AFE94 LDR X0, [X24]
	0x036AFE98 BL 0x1C16F10
	0x036AFE9C LDR X2, [X29]
	0x036AFEA0 MOVZ W1, 0x1
	0x036AFEA4 MOV X20, X0
	0x036AFEA8 BL 0x2850BBC
	0x036AFEAC STR X20, [X19 + 0x48]
	0x036AFEB0 LDR X0, [X27]
	0x036AFEB4 BL 0x1C16F10
	0x036AFEB8 LDR X2, [X26]
	0x036AFEBC MOVZ W1, 0x1
	0x036AFEC0 MOV X20, X0
	0x036AFEC4 BL 0x2850BBC
	0x036AFEC8 STR X20, [X19 + 0x50]
	0x036AFECC LDR X0, [X25]
	0x036AFED0 BL 0x1C16F10
	0x036AFED4 ADRP X8, 0xA90000
	0x036AFED8 LDR X8, [X8 + 0x1E8]
	0x036AFEDC MOVZ W1, 0x1
	0x036AFEE0 MOV X20, X0
	0x036AFEE4 LDR X2, [X8]
	0x036AFEE8 BL 0x28506B4
	0x036AFEEC STR X20, [X19 + 0x58]
	0x036AFEF0 LDP X20, X19, [X31 + 0x50]
	0x036AFEF4 LDP X22, X21, [X31 + 0x40]
	0x036AFEF8 LDP X24, X23, [X31 + 0x30]
	0x036AFEFC LDP X26, X25, [X31 + 0x20]
	0x036AFF00 LDP X28, X27, [X31 + 0x10]
	0x036AFF04 LDP X29, X30, [X31], #0x60
	0x036AFF08 RET
	0x036AFF0C STP X30, X19, [X31 - 0x10]!
	0x036AFF10 MOV X19, X0
	0x036AFF14 BL 0x36ACC30
	0x036AFF18 TBZ X0, 0x0, 0x36AFF24
	0x036AFF1C MOVZ W0, 0x1
	0x036AFF20 B 0x36AFF30
	0x036AFF24 LDR X8, [X19 + 0x78]
	0x036AFF28 CMP X8, 0x0
	0x036AFF2C CSET W0, NE
	0x036AFF30 LDP X30, X19, [X31], #0x10
	0x036AFF34 RET
	0x036AFF38 STP X30, X19, [X31 - 0x10]!
	0x036AFF3C ADD X1, X0, 0x70
	0x036AFF40 MOV X19, X0
	0x036AFF44 BL 0x36AFF78
	0x036AFF48 TBNZ X1, 0x0, 0x36AFF54
	0x036AFF4C LDP X30, X19, [X31], #0x10
	0x036AFF50 RET
	0x036AFF54 LDR X0, [X19 + 0x38]
	0x036AFF58 CBZ X0, 0x36AFF64
	0x036AFF5C MOV X1, X31
	0x036AFF60 BL 0x33DFCF8
	0x036AFF64 MOV X0, X19
	0x036AFF68 BL 0x36B0060
	0x036AFF6C MOV X0, X19
	0x036AFF70 LDP X30, X19, [X31], #0x10
	0x036AFF74 B 0x36B0128
	0x036AFF78 SUB X31, X31, 0x40
	0x036AFF7C STP X30, X23, [X31 + 0x10]
	0x036AFF80 STP X22, X21, [X31 + 0x20]
	0x036AFF84 STP X20, X19, [X31 + 0x30]
	0x036AFF88 ADRP X21, 0xD31000
	0x036AFF8C ADRP X23, 0xA90000
	0x036AFF90 ADRP X20, 0xA6F000
	0x036AFF94 ADRP X22, 0xA90000
	0x036AFF98 LDRB W8, [X21 + 0x94E]
	0x036AFF9C LDR X23, [X23 + 0x210]
	0x036AFFA0 LDR X20, [X20 + 0x330]
	0x036AFFA4 LDR X22, [X22 + 0x218]
	0x036AFFA8 MOV X19, X1
	0x036AFFAC TBNZ X8, 0x0, 0x36AFFDC
	0x036AFFB0 ADRP X0, 0xA90000
	0x036AFFB4 LDR X0, [X0 + 0x218]
	0x036AFFB8 BL 0x1C16CF4
	0x036AFFBC ADRP X0, 0xA6F000
	0x036AFFC0 LDR X0, [X0 + 0x330]
	0x036AFFC4 BL 0x1C16CF4
	0x036AFFC8 ADRP X0, 0xA90000
	0x036AFFCC LDR X0, [X0 + 0x210]
	0x036AFFD0 BL 0x1C16CF4
	0x036AFFD4 MOVZ W8, 0x1
	0x036AFFD8 STRB W8, [X21 + 0x94E]
	0x036AFFDC LDR X0, [X23]
	0x036AFFE0 MOV X1, X31
	0x036AFFE4 BL 0x320A1E4
	0x036AFFE8 LDR X8, [X20]
	0x036AFFEC MOV X20, X0
	0x036AFFF0 MOV X0, X8
	0x036AFFF4 BL 0x1C16F10
	0x036AFFF8 MOVZ W2, 0x6
	0x036AFFFC MOV X1, X20
	0x036B0000 MOV X3, X31
	0x036B0004 MOV X21, X0
	0x036B0008 BL 0x367A0D4
	0x036B000C MOV X0, X21
	0x036B0010 MOV X1, X31
	0x036B0014 BL 0x32C2380
	0x036B0018 MOV X20, X0
	0x036B001C MOV X0, X19
	0x036B0020 MOV X1, X20
	0x036B0024 MOV X2, X31
	0x036B0028 BL 0x1C24138
	0x036B002C LDR X3, [X22]
	0x036B0030 CMP X0, 0x0
	0x036B0034 CSET W2, EQ
	0x036B0038 CSEL X1, X20, X0, EQ
	0x036B003C ADD X0, X31, 0x0
	0x036B0040 STP X31, X31, [X31]
	0x036B0044 BL 0x27A93B4
	0x036B0048 LDP X0, X1, [X31]
	0x036B004C LDP X20, X19, [X31 + 0x30]
	0x036B0050 LDP X22, X21, [X31 + 0x20]
	0x036B0054 LDP X30, X23, [X31 + 0x10]
	0x036B0058 ADD X31, X31, 0x40
	0x036B005C RET
	0x036B0060 STP X30, X21, [X31 - 0x20]!
	0x036B0064 STP X20, X19, [X31 + 0x10]
	0x036B0068 ADRP X20, 0xD30000
	0x036B006C ADRP X21, 0xA4B000
	0x036B0070 LDRB W8, [X20 + 0x94C]
	0x036B0074 LDR X21, [X21 + 0x8A8]
	0x036B0078 MOV X19, X0
	0x036B007C TBNZ X8, 0x0, 0x36B00AC
	0x036B0080 ADRP X0, 0xA4B000
	0x036B0084 LDR X0, [X0 + 0x8A8]
	0x036B0088 BL 0x1C16CF4
	0x036B008C ADRP X0, 0xA8F000
	0x036B0090 LDR X0, [X0 + 0x220]
	0x036B0094 BL 0x1C16CF4
	0x036B0098 ADRP X0, 0xA8F000
	0x036B009C LDR X0, [X0 + 0x228]
	0x036B00A0 BL 0x1C16CF4
	0x036B00A4 MOVZ W8, 0x1
	0x036B00A8 STRB W8, [X20 + 0x94C]
	0x036B00AC LDR X0, [X21]
	0x036B00B0 BL 0x1C16F10
	0x036B00B4 MOV X1, X31
	0x036B00B8 MOV X20, X0
	0x036B00BC BL 0x338C880
	0x036B00C0 LDR X0, [X19 + 0x40]
	0x036B00C4 CBZ X0, 0x36B0124
	0x036B00C8 ADRP X21, 0xA8F000
	0x036B00CC LDR X21, [X21 + 0x228]
	0x036B00D0 MOV X1, X20
	0x036B00D4 LDR X2, [X21]
	0x036B00D8 BL 0x2850E14
	0x036B00DC LDR X0, [X19 + 0x48]
	0x036B00E0 CBZ X0, 0x36B0124
	0x036B00E4 LDR X2, [X21]
	0x036B00E8 MOV X1, X20
	0x036B00EC BL 0x2850E14
	0x036B00F0 LDR X0, [X19 + 0x50]
	0x036B00F4 CBZ X0, 0x36B0124
	0x036B00F8 ADRP X8, 0xA8F000
	0x036B00FC LDR X8, [X8 + 0x220]
	0x036B0100 MOV X1, X20
	0x036B0104 LDR X2, [X8]
	0x036B0108 BL 0x2850E14
	0x036B010C MOV X0, X19
	0x036B0110 MOV X2, X20
	0x036B0114 LDP X20, X19, [X31 + 0x10]
	0x036B0118 MOV W1, W31
	0x036B011C LDP X30, X21, [X31], #0x20
	0x036B0120 B 0x36B01D4
	0x036B0124 BL 0x1C16F20
	0x036B0128 STP X30, X19, [X31 - 0x10]!
	0x036B012C ADD X1, X0, 0x78
	0x036B0130 MOV X19, X0
	0x036B0134 BL 0x36AFF78
	0x036B0138 TBZ X1, 0x0, 0x36B015C
	0x036B013C ADD X0, X19, 0x60
	0x036B0140 MOV X1, X31
	0x036B0144 BL 0x1C242E8
	0x036B0148 CBZ X0, 0x36B015C
	0x036B014C LDR X8, [X0]
	0x036B0150 LDR X1, [X8 + 0x280]
	0x036B0154 LDR X9, [X8 + 0x278]
	0x036B0158 BLR X9
	0x036B015C LDP X30, X19, [X31], #0x10
	0x036B0160 RET
	0x036B0164 CMP W1, 0x1
	0x036B0168 MOV X19, X0
	0x036B016C B.NE 0x36B01C8
	0x036B0170 MOV X0, X19
	0x036B0174 BL 0x3EB1AD0
	0x036B0178 MOV X19, X0
	0x036B017C ADRP X0, 0xA49000
	0x036B0180 LDR X0, [X0 + 0xCC0]
	0x036B0184 BL 0x1C16D08
	0x036B0188 LDR X8, [X19]
	0x036B018C LDR X1, [X8]
	0x036B0190 BL 0x1C17270
	0x036B0194 TBZ X0, 0x0, 0x36B01A0
	0x036B0198 LDP X30, X19, [X31], #0x10
	0x036B019C B 0x3EB1AE0
	0x036B01A0 MOVZ W0, 0x8
	0x036B01A4 BL 0x3EB1AF0
	0x036B01A8 LDR X8, [X19]
	0x036B01AC STR X8, [X0]
	0x036B01B0 ADRP X1, 0x804000
	0x036B01B4 ADD X1, X1, 0xE58
	0x036B01B8 MOV X2, X31
	0x036B01BC BL 0x3EB1B00
	0x036B01C0 MOV X19, X0
	0x036B01C4 BL 0x3EB1AE0
	0x036B01C8 MOV X0, X19
	0x036B01CC BL 0x1D2C690
	0x036B01D0 BL 0x1990590
	0x036B01D4 SUB X31, X31, 0x60
	0x036B01D8 STP X30, X25, [X31 + 0x20]
	0x036B01DC STP X24, X23, [X31 + 0x30]
	0x036B01E0 STP X22, X21, [X31 + 0x40]
	0x036B01E4 STP X20, X19, [X31 + 0x50]
	0x036B01E8 ADRP X22, 0xD30000
	0x036B01EC LDRB W8, [X22 + 0x95A]
	0x036B01F0 MOV X20, X2
	0x036B01F4 MOV W21, W1
	0x036B01F8 MOV X19, X0
	0x036B01FC TBNZ X8, 0x0, 0x36B022C
	0x036B0200 ADRP X0, 0xA8F000
	0x036B0204 LDR X0, [X0 + 0x230]
	0x036B0208 BL 0x1C16CF4
	0x036B020C ADRP X0, 0xA8F000
	0x036B0210 LDR X0, [X0 + 0x238]
	0x036B0214 BL 0x1C16CF4
	0x036B0218 ADRP X0, 0xA8F000
	0x036B021C LDR X0, [X0 + 0x240]
	0x036B0220 BL 0x1C16CF4
	0x036B0224 MOVZ W8, 0x1
	0x036B0228 STRB W8, [X22 + 0x95A]
	0x036B022C ADD X0, X19, 0x8C
	0x036B0230 MOVZ W1, 0x1
	0x036B0234 MOV W2, W31
	0x036B0238 MOV X3, X31
	0x036B023C BL 0x33E7AB4
	0x036B0240 CBZ W0, 0x36B025C
	0x036B0244 LDP X20, X19, [X31 + 0x50]
	0x036B0248 LDP X22, X21, [X31 + 0x40]
	0x036B024C LDP X24, X23, [X31 + 0x30]
	0x036B0250 LDP X30, X25, [X31 + 0x20]
	0x036B0254 ADD X31, X31, 0x60
	0x036B0258 RET
	0x036B025C STRB W31, [X31 + 0x1C]
	0x036B0260 ADD X1, X31, 0x1C
	0x036B0264 MOV X0, X19
	0x036B0268 MOV X2, X31
	0x036B026C BL 0x33DE64C
	0x036B0270 ADD X0, X19, 0x68
	0x036B0274 MOV X1, X31
	0x036B0278 BL 0x1C242E8
	0x036B027C MOV X23, X0
	0x036B0280 ADD X0, X19, 0x80
	0x036B0284 MOV X1, X31
	0x036B0288 BL 0x1C242E8
	0x036B028C LDR X8, [X19 + 0x10]
	0x036B0290 MOV X22, X0
	0x036B0294 CBZ X8, 0x36B038C
	0x036B0298 MOVZ W9, 0x1
	0x036B029C MOV X24, X31
	0x036B02A0 STRB W9, [X8 + 0x118]
	0x036B02A4 MOVZ W25, 0x3
	0x036B02A8 LDRB W8, [X31 + 0x1C]
	0x036B02AC CBZ W8, 0x36B02BC
	0x036B02B0 MOV X0, X19
	0x036B02B4 MOV X1, X31
	0x036B02B8 BL 0x33E14E4
	0x036B02BC CBNZ X24, 0x36B0384
	0x036B02C0 CMP W25, 0x3
	0x036B02C4 B.EQ 0x36B02CC
	0x036B02C8 CBNZ W25, 0x36B0244
	0x036B02CC CBZ X20, 0x36B0300
	0x036B02D0 CBZ X22, 0x36B02E0
	0x036B02D4 MOV X0, X22
	0x036B02D8 MOV X1, X20
	0x036B02DC BL 0x36B0410
	0x036B02E0 LDR X0, [X19 + 0x58]
	0x036B02E4 CBZ X0, 0x36B0390
	0x036B02E8 ADRP X8, 0xA8F000
	0x036B02EC LDR X8, [X8 + 0x240]
	0x036B02F0 MOV X1, X20
	0x036B02F4 LDR X2, [X8]
	0x036B02F8 BL 0x28509D0
	0x036B02FC B 0x36B0244
	0x036B0300 MOV X0, X19
	0x036B0304 BL 0x36ACC30
	0x036B0308 CBZ X23, 0x36B0320
	0x036B030C TBNZ X0, 0x0, 0x36B0320
	0x036B0310 TBZ X21, 0x0, 0x36B0320
	0x036B0314 LDRB W8, [X23 + 0xA8]
	0x036B0318 CMP W8, 0x0
	0x036B031C CSET W20, NE
	0x036B0320 CBZ X22, 0x36B0340
	0x036B0324 MOV X0, X22
	0x036B0328 BL 0x36ACC30
	0x036B032C EOR W8, W0, 0x1
	0x036B0330 ANDS W31, W0, 0x1
	0x036B0334 AND W20, W20, W8, 0x0
	0x036B0338 CSEL X2, X31, X22, NE
	0x036B033C B 0x36B0344
	0x036B0340 MOV X2, X31
	0x036B0344 ADRP X8, 0xA8F000
	0x036B0348 LDR X19, [X19 + 0x58]
	0x036B034C LDR X8, [X8 + 0x230]
	0x036B0350 ADD X0, X31, 0x8
	0x036B0354 MOV W1, W20
	0x036B0358 STP X31, X31, [X31 + 0x8]
	0x036B035C LDR X3, [X8]
	0x036B0360 BL 0x279A1F0
	0x036B0364 CBZ X19, 0x36B0390
	0x036B0368 ADRP X8, 0xA8F000
	0x036B036C LDP X1, X2, [X31 + 0x8]
	0x036B0370 LDR X8, [X8 + 0x238]
	0x036B0374 MOV X0, X19
	0x036B0378 LDR X3, [X8]
	0x036B037C BL 0x285074C
	0x036B0380 B 0x36B0244
	0x036B0384 MOV X0, X24
	0x036B0388 BL 0x1C16F18
	0x036B038C BL 0x1C16F20
	0x036B0390 BL 0x1C16F20
	0x036B0394 MOV X25, X0
	0x036B0398 B 0x36B03B8
	0x036B039C MOV X25, X0
	0x036B03A0 MOV X22, X31
	0x036B03A4 B 0x36B03B8
	0x036B03A8 B 0x36B03AC
	0x036B03AC MOV X25, X0
	0x036B03B0 MOV X22, X31
	0x036B03B4 MOV X23, X31
	0x036B03B8 CMP W1, 0x1
	0x036B03BC B.NE 0x36B03D8
	0x036B03C0 MOV X0, X25
	0x036B03C4 BL 0x3EB1AD0
	0x036B03C8 LDR X24, [X0]
	0x036B03CC BL 0x3EB1AE0
	0x036B03D0 MOV W25, W31
	0x036B03D4 B 0x36B02A8
	0x036B03D8 MOV X24, X31
	0x036B03DC B 0x36B03E4
	0x036B03E0 MOV X25, X0
	0x036B03E4 LDRB W8, [X31 + 0x1C]
	0x036B03E8 CBZ W8, 0x36B03F8
	0x036B03EC MOV X0, X19
	0x036B03F0 MOV X1, X31
	0x036B03F4 BL 0x33E14E4
	0x036B03F8 CBNZ X24, 0x36B0404
	0x036B03FC MOV X0, X25
	0x036B0400 BL 0x1D2C690
	0x036B0404 MOV X0, X24
	0x036B0408 BL 0x1C16F18
	0x036B040C BL 0x1990590
	0x036B0410 STP X30, X21, [X31 - 0x20]!
	0x036B0414 STP X20, X19, [X31 + 0x10]
	0x036B0418 ADRP X21, 0xD30000

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+80], X29
	003 Move [X31+88], X30
	004 Move [X31+96], X28
	005 Move [X31+104], X27
	006 Move [X31+112], X26
	007 Move [X31+120], X25
	008 Move [X31+128], X24
	009 Move [X31+136], X23
	010 Move [X31+144], X22
	011 Move [X31+152], X21
	012 Move [X31+160], X20
	013 Move [X31+168], X19
	014 Move X20, 0xD32000
	015 Move W8, [X20+2375]
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {116}
	021 Move X0, 0xA91000
	022 Move X0, [X0+296]
	023 Call 0x1C17CF4
	024 Move X0, 0xA91000
	025 Move X0, [X0+304]
	026 Call 0x1C17CF4
	027 Move X0, 0xA48000
	028 Move X0, [X0+640]
	029 Call 0x1C17CF4
	030 Move X0, 0xA90000
	031 Move X0, [X0+1432]
	032 Call 0x1C17CF4
	033 Move X0, 0xA91000
	034 Move X0, [X0+312]
	035 Call 0x1C17CF4
	036 Move X0, 0xA91000
	037 Move X0, [X0+320]
	038 Call 0x1C17CF4
	039 Move X0, 0xA91000
	040 Move X0, [X0+328]
	041 Call 0x1C17CF4
	042 Move X0, 0xA8C000
	043 Move X0, [X0+360]
	044 Call 0x1C17CF4
	045 Move X0, 0xA6D000
	046 Move X0, [X0+2952]
	047 Call 0x1C17CF4
	048 Move X0, 0xA90000
	049 Move X0, [X0+288]
	050 Call 0x1C17CF4
	051 Move X0, 0xA45000
	052 Move X0, [X0+2288]
	053 Call 0x1C17CF4
	054 Move X0, 0xA45000
	055 Move X0, [X0+2760]
	056 Call 0x1C17CF4
	057 Move X0, 0xA91000
	058 Move X0, [X0+336]
	059 Call 0x1C17CF4
	060 Move X0, 0xA8C000
	061 Move X0, [X0+208]
	062 Call 0x1C17CF4
	063 Move X0, 0xA91000
	064 Move X0, [X0+344]
	065 Call 0x1C17CF4
	066 Move X0, 0xA8C000
	067 Move X0, [X0+2952]
	068 Call 0x1C17CF4
	069 Move X0, 0xA75000
	070 Move X0, [X0+2936]
	071 Call 0x1C17CF4
	072 Move X0, 0xA75000
	073 Move X0, [X0+2640]
	074 Call 0x1C17CF4
	075 Move X0, 0xA91000
	076 Move X0, [X0+352]
	077 Call 0x1C17CF4
	078 Move X0, 0xA83000
	079 Move X0, [X0+856]
	080 Call 0x1C17CF4
	081 Move X0, 0xA8C000
	082 Move X0, [X0+536]
	083 Call 0x1C17CF4
	084 Move X0, 0xA91000
	085 Move X0, [X0+360]
	086 Call 0x1C17CF4
	087 Move X0, 0xA85000
	088 Move X0, [X0+2888]
	089 Call 0x1C17CF4
	090 Move X0, 0xA91000
	091 Move X0, [X0+368]
	092 Call 0x1C17CF4
	093 Move X0, 0xA46000
	094 Move X0, [X0+3784]
	095 Call 0x1C17CF4
	096 Move X0, 0xA4E000
	097 Move X0, [X0+2440]
	098 Call 0x1C17CF4
	099 Move X0, 0xA91000
	100 Move X0, [X0+376]
	101 Call 0x1C17CF4
	102 Move X0, 0xA8C000
	103 Move X0, [X0+2736]
	104 Call 0x1C17CF4
	105 Move X0, 0xA8C000
	106 Move X0, [X0+344]
	107 Call 0x1C17CF4
	108 Move X0, 0xA91000
	109 Move X0, [X0+384]
	110 Call 0x1C17CF4
	111 Move X0, 0xA8C000
	112 Move X0, [X0+2760]
	113 Call 0x1C17CF4
	114 Move W8, 1
	115 Move [X20+2375], W8
	116 Move [X31+76], W31
	117 Move [X31+48], X31
	118 Move [X31+56], X31
	119 Move [X31+32], X31
	120 Move [X31+40], X31
	121 Move X25, 0xA48000
	122 Move W8, [X19]
	123 Move X20, [X19+32]
	124 Move X25, [X25+640]
	125 Compare W8, 0
	126 JumpIfEqual {136}
	127 NotImplemented "Instruction CMP not yet implemented."
	128 Move V0, [X19+5]
	129 Move TEMP, 0
	130 Not TEMP
	131 Move W8, TEMP
	132 Move [X31+2], V0
	133 Move [X19+80], X31
	134 Move [X19+88], X31
	135 Move [X19], W8
	136 Move V0, [X19+4]
	137 Move TEMP, 0
	138 Not TEMP
	139 Move W8, TEMP
	140 Move [X31+3], V0
	141 Move [X19+64], X31
	142 Move [X19+72], X31
	143 Move [X19], W8
	144 Move X8, 0xA45000
	145 Move X8, [X8+2288]
	146 Move X0, [X8]
	147 Call 0x1C17F10
	148 Move X21, X0
	149 Move X1, X31
	150 Call StringBuilder..ctor, X0
	151 Compare X21, 0
	152 JumpIfEqual {732}
	153 Move X8, 0xA91000
	154 Move X8, [X8+360]
	155 Move X1, [X8]
	156 Move X0, X21
	157 Move X2, X31
	158 Call StringBuilder.Append, X0, X1
	159 Compare X20, 0
	160 JumpIfEqual {733}
	161 Move X8, [X20+16]
	162 Compare X8, 0
	163 JumpIfEqual {734}
	164 Move X0, [X8+40]
	165 Compare X0, 0
	166 JumpIfEqual {735}
	167 Move X1, X31
	168 Call Uri.get_Host, X0
	169 Move X1, X0
	170 Move X0, X21
	171 Move X2, X31
	172 Call StringBuilder.Append, X0, X1
	173 Move W1, 58
	174 Move X0, X21
	175 Move X2, X31
	176 Call StringBuilder.Append, X0, X1
	177 Move X8, [X20+16]
	178 Compare X8, 0
	179 JumpIfEqual {736}
	180 Move X0, [X8+40]
	181 Compare X0, 0
	182 JumpIfEqual {737}
	183 Move X1, X31
	184 Call Uri.get_Port, X0
	185 Move W1, W0
	186 Move X0, X21
	187 Move X2, X31
	188 Call StringBuilder.Append, X0, X1
	189 Move X8, 0xA91000
	190 Move X8, [X8+344]
	191 Move X1, [X8]
	192 Move X0, X21
	193 Move X2, X31
	194 Call StringBuilder.Append, X0, X1
	195 Move X8, [X20+16]
	196 Compare X8, 0
	197 JumpIfEqual {738}
	198 Move X23, 0xA8C000
	199 Move X23, [X23+360]
	200 Move X22, [X8+168]
	201 Move X0, [X23]
	202 Move W9, [X0+224]
	203 Compare W9, 0
	204 JumpIfNotEqual {207}
	205 Call 0x1C17DFC
	206 Move X0, [X23]
	207 Move X8, [X0+184]
	208 Move X1, [X8+16]
	209 Move X0, X22
	210 Move X2, X31
	211 Call Version.op_Equality, X0, X1
	212 Move TEMP, X0
	213 And TEMP, TEMP, 1
	214 Compare TEMP, 1
	215 JumpIfNotEqual {222}
	216 Move X8, 0xA91000
	217 Move X8, [X8+368]
	218 Move X1, [X8]
	219 Move X0, X21
	220 Move X2, X31
	221 Call StringBuilder.Append, X0, X1
	222 Move X8, 0xA75000
	223 Move X8, [X8+2936]
	224 Move X1, [X8]
	225 Move X0, X21
	226 Move X2, X31
	227 Call StringBuilder.Append, X0, X1
	228 Move X8, 0xA91000
	229 Move X8, [X8+384]
	230 Move X1, [X8]
	231 Move X0, X21
	232 Move X2, X31
	233 Call StringBuilder.Append, X0, X1
	234 Move X8, [X20+16]
	235 Compare X8, 0
	236 JumpIfEqual {739}
	237 Move X0, [X8+40]
	238 Compare X0, 0
	239 JumpIfEqual {740}
	240 Move X1, X31
	241 Call Uri.get_Authority, X0
	242 Move X1, X0
	243 Move X0, X21
	244 Move X2, X31
	245 Call StringBuilder.Append, X0, X1
	246 Move X0, [X20+16]
	247 Move X26, [X20+64]
	248 Move [X20+64], X31
	249 Compare X0, 0
	250 JumpIfEqual {741}
	251 Move X8, [X0]
	252 Move X9, [X8+504]
	253 Move X1, [X8+512]
	254 NotImplemented "Instruction BLR not yet implemented."
	255 Compare X0, 0
	256 JumpIfEqual {742}
	257 Move X8, 0xA8C000
	258 Move X8, [X8+2736]
	259 Move X1, [X8]
	260 Move X2, X31
	261 Call NameValueCollection.get_Item, X0, X1
	262 NotImplemented "Instruction CMP not yet implemented."
	263 Move X22, X0
	264 NotImplemented "Instruction CSET not yet implemented."
	265 Move [X19+56], W8
	266 Compare X0, 0
	267 JumpIfEqual {302}
	268 Move X8, 0xA91000
	269 Move X8, [X8+376]
	270 Move X1, [X8]
	271 Move X0, X21
	272 Move X2, X31
	273 Call StringBuilder.Append, X0, X1
	274 Move X0, X21
	275 Move X1, X22
	276 Move X2, X31
	277 Call StringBuilder.Append, X0, X1
	278 Move X0, X22
	279 Move X1, X31
	280 Call String.ToUpper, X0
	281 Compare X0, 0
	282 JumpIfEqual {749}
	283 Move X8, 0xA75000
	284 Move X8, [X8+2640]
	285 Move X1, [X8]
	286 Move X2, X31
	287 Call String.Contains, X0, X1
	288 Move W22, W0
	289 Move TEMP, X22
	290 And TEMP, TEMP, 1
	291 Compare TEMP, 1
	292 JumpIfNotEqual {475}
	293 Move X8, 0xA91000
	294 Move X8, [X8+352]
	295 Move X1, [X8]
	296 Move X0, X21
	297 Move X2, X31
	298 Call StringBuilder.Append, X0, X1
	299 Move W8, [X20+40]
	300 Add W8, W8, 1
	301 Move [X20+40], W8
	302 Compare X26, 0
	303 JumpIfEqual {475}
	304 Move W8, [X20+48]
	305 NotImplemented "Instruction CMP not yet implemented."
	306 Move X0, [X20+16]
	307 Compare X0, 0
	308 JumpIfEqual {751}
	309 Move X8, [X0]
	310 Move X1, [X8+608]
	311 Move X9, [X8+600]
	312 NotImplemented "Instruction BLR not yet implemented."
	313 Move X22, X0
	314 Compare X0, 0
	315 JumpIfEqual {752}
	316 Move X10, 0xA90000
	317 Move X8, [X22]
	318 Move X10, [X10+288]
	319 NotImplemented "Instruction LDRH not yet implemented."
	320 Move X1, [X10]
	321 Compare X9, 0
	322 JumpIfEqual {329}
	323 Move X10, [X8+176]
	324 Add X10, X10, 8
	325 NotImplemented "Instruction LDUR not yet implemented."
	326 NotImplemented "Instruction CMP not yet implemented."
	327 Subtract X9, X9, 1
	328 Add X10, X10, 16
	329 Move W2, 2
	330 Move X0, X22
	331 Call 0x1C5D788
	332 Move W9, [X10]
	333 Add W9, W9, 2
	334 Add X8, X8, W9
	335 Add X0, X8, 312
	336 Move X8, [X0]
	337 Move X1, [X0+8]
	338 Move X0, X22
	339 NotImplemented "Instruction BLR not yet implemented."
	340 Move W8, 1
	341 Move [X19+56], W8
	342 Move X8, [X20+32]
	343 Move X22, X0
	344 Compare X8, 0
	345 JumpIfNotEqual {447}
	346 Move X8, 0xA45000
	347 Move X8, [X8+2760]
	348 Move X0, [X8]
	349 Move W1, 6
	350 Call 0x1C17D6C
	351 Move X23, X0
	352 Move X0, [X20+24]
	353 Compare X0, 0
	354 JumpIfEqual {755}
	355 Move X1, X31
	356 Call Uri.get_Scheme, X0
	357 Compare X23, 0
	358 JumpIfEqual {756}
	359 Move W8, [X23+24]
	360 Compare W8, 0
	361 JumpIfEqual {757}
	362 NotImplemented "Instruction CMP not yet implemented."
	363 Move [X23+32], X0
	364 Move X8, 0xA85000
	365 Move X8, [X8+2888]
	366 Move X8, [X8]
	367 Move [X23+40], X8
	368 Move X0, [X20+24]
	369 Compare X0, 0
	370 JumpIfEqual {759}
	371 Move X1, X31
	372 Call Uri.get_Host, X0
	373 Move W8, [X23+24]
	374 NotImplemented "Instruction CMP not yet implemented."
	375 NotImplemented "Instruction CMP not yet implemented."
	376 Move [X23+48], X0
	377 Move X8, 0xA4E000
	378 Move X8, [X8+2440]
	379 Move X8, [X8]
	380 Move [X23+56], X8
	381 Move X0, [X20+24]
	382 Compare X0, 0
	383 JumpIfEqual {762}
	384 Move X1, X31
	385 Call Uri.get_Port, X0
	386 Move [X31+76], W0
	387 Add X0, X31, 76
	388 Move X1, X31
	389 Call Int32.ToString, X0
	390 Move W8, [X23+24]
	391 NotImplemented "Instruction CMP not yet implemented."
	392 NotImplemented "Instruction CMP not yet implemented."
	393 Move [X23+64], X0
	394 Move X8, 0xA46000
	395 Move X8, [X8+3784]
	396 Move X8, [X8]
	397 Move [X23+72], X8
	398 Move X0, X23
	399 Move X1, X31
	400 Call String.Concat, X0
	401 Move X8, 0xA8C000
	402 Move X8, [X8+208]
	403 Move X23, X0
	404 Move X0, [X8]
	405 Move W8, [X0+224]
	406 Compare W8, 0
	407 JumpIfNotEqual {409}
	408 Call 0x1C17DFC
	409 Move X0, X23
	410 Move X1, X31
	411 Call WebRequest.Create, X0
	412 Compare X0, 0
	413 JumpIfEqual {765}
	414 Move X8, 0xA6D000
	415 Move X8, [X8+2952]
	416 Move X9, [X0]
	417 Move X1, [X8]
	418 Move W10, [X9+304]
	419 Move W8, [X1+304]
	420 NotImplemented "Instruction CMP not yet implemented."
	421 Move X10, [X9+200]
	422 Subtract X9, X8, 1
	423 Move X10, [X10]
	424 NotImplemented "Instruction CMP not yet implemented."
	425 Move [X20+32], X0
	426 Move X10, [X0]
	427 Move W11, [X10+304]
	428 NotImplemented "Instruction CMP not yet implemented."
	429 Move X8, [X10+200]
	430 Move X8, [X8]
	431 NotImplemented "Instruction CMP not yet implemented."
	432 Move X9, 0xA8C000
	433 Move X8, [X0]
	434 Move X9, [X9+536]
	435 Move X1, [X9]
	436 Move X9, [X8+456]
	437 Move X2, [X8+464]
	438 NotImplemented "Instruction BLR not yet implemented."
	439 Move X0, [X20+32]
	440 Compare X0, 0
	441 JumpIfEqual {767}
	442 Move X8, [X0]
	443 Move X9, [X8+568]
	444 Move X2, [X8+576]
	445 Move X1, X22
	446 NotImplemented "Instruction BLR not yet implemented."
	447 Compare X22, 0
	448 JumpIfEqual {475}
	449 Move X8, [X26+24]
	450 NotImplemented "Instruction CMP not yet implemented."
	451 Move X29, 0xA90000
	452 Move X29, [X29+1432]
	453 Move X27, X31
	454 And X8, X8, 0
	455 Add X28, X26, 32
	456 NotImplemented "Instruction CMP not yet implemented."
	457 Move X0, [X29]
	458 Move X23, [X28]
	459 Move X24, [X20+32]
	460 Move W8, [X0+224]
	461 Compare W8, 0
	462 JumpIfNotEqual {464}
	463 Call 0x1C17DFC
	464 Move X0, X23
	465 Move X1, X24
	466 Move X2, X22
	467 Move X3, X31
	468 Call AuthenticationManager.Authenticate, X0, X1, X2
	469 Move X23, X0
	470 Compare X0, 0
	471 JumpIfNotEqual {690}
	472 Move W8, [X26+24]
	473 Add X27, X27, 1
	474 NotImplemented "Instruction CMP not yet implemented."
	475 Move X8, 0xA83000
	476 Move X8, [X8+856]
	477 Move X1, [X8]
	478 Move X0, X21
	479 Move X2, X31
	480 Call StringBuilder.Append, X0, X1
	481 Move [X20+48], W31
	482 Move X0, X31
	483 Call Encoding.get_Default
	484 Move X8, [X21]
	485 Move X22, X0
	486 Move X9, [X8+360]
	487 Move X1, [X8+368]
	488 Move X0, X21
	489 NotImplemented "Instruction BLR not yet implemented."
	490 Move X1, X0
	491 Compare X22, 0
	492 JumpIfEqual {743}
	493 Move X8, [X22]
	494 Move X9, [X8+616]
	495 Move X2, [X8+624]
	496 Move X0, X22
	497 NotImplemented "Instruction BLR not yet implemented."
	498 Move X1, X0
	499 Compare X1, 0
	500 JumpIfEqual {744}
	501 Move X0, [X19+40]
	502 Compare X0, 0
	503 JumpIfEqual {745}
	504 Move X8, [X0]
	505 Move X4, [X19+48]
	506 Move W3, [X1+24]
	507 Move X9, [X8+792]
	508 Move X5, [X8+800]
	509 Move W2, W31
	510 NotImplemented "Instruction BLR not yet implemented."
	511 Compare X0, 0
	512 JumpIfEqual {746}
	513 Move W1, W31
	514 Move X2, X31
	515 Call Task.ConfigureAwait, X0, X1
	516 Move [X31+48], X0
	517 Move [X31+56], X1
	518 Add X0, X31, 48
	519 Move X1, X31
	520 Call ConfiguredTaskAwaiter.get_IsCompleted, X0
	521 Move TEMP, X0
	522 And TEMP, TEMP, 1
	523 Compare TEMP, 1
	524 JumpIfNotEqual {661}
	525 Add X0, X31, 48
	526 Move X1, X31
	527 Call ConfiguredTaskAwaiter.GetResult, X0
	528 Compare X20, 0
	529 JumpIfEqual {708}
	530 Move X1, [X19+40]
	531 Move X2, [X19+48]
	532 Move X0, X20
	533 Call WebConnectionTunnel.ReadHeaders, X0, X1, X2
	534 Compare X0, 0
	535 JumpIfEqual {709}
	536 Move X8, 0xA91000
	537 Move X8, [X8+336]
	538 Move X2, [X8]
	539 Move W1, W31
	540 Call Task`1<ValueTuple`3<Object, Object, Int32>>.ConfigureAwait, X0, X1
	541 Move X8, 0xA91000
	542 Move X8, [X8+328]
	543 Move [X31+32], X0
	544 Move [X31+40], X1
	545 Move X8, [X8]
	546 Add X0, X31, 32
	547 Move X1, X8
	548 Call ConfiguredTaskAwaiter<ValueTuple`3<Object, Object, Int32>>.get_IsCompleted, X0
	549 Move TEMP, X0
	550 And TEMP, TEMP, 1
	551 Compare TEMP, 1
	552 JumpIfNotEqual {576}
	553 Move X8, 0xA91000
	554 Move X8, [X8+320]
	555 Add X0, X31, 32
	556 Move X1, [X8]
	557 Add X8, X31, 8
	558 Call ConfiguredTaskAwaiter<ValueTuple`3<Object, Object, Int32>>.GetResult, X0
	559 Compare X20, 0
	560 JumpIfEqual {707}
	561 Move X0, [X31+8]
	562 Move X9, [X31+16]
	563 Move X8, [X31+24]
	564 Move [X20+72], X0
	565 Move [X20+88], X9
	566 Move [X31+76], W8
	567 Move [X20+48], W8
	568 Move W9, [X19+56]
	569 Compare W9, 0
	570 JumpIfEqual {592}
	571 NotImplemented "Instruction CMP not yet implemented."
	572 Compare X0, 0
	573 JumpIfEqual {637}
	574 Move W9, [X20+40]
	575 NotImplemented "Instruction CMP not yet implemented."
	576 Move W8, 1
	577 Move [X19], W8
	578 Move V0, [X31+2]
	579 Move [X19+5], V0
	580 Move X0, [X25]
	581 Move W8, [X0+224]
	582 Compare W8, 0
	583 JumpIfNotEqual {585}
	584 Call 0x1C17DFC
	585 Move X8, 0xA91000
	586 Move X8, [X8+296]
	587 Add X0, X19, 8
	588 Move X3, [X8]
	589 Add X1, X31, 32
	590 Move X2, X19
	591 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	592 Compare X0, 0
	593 JumpIfEqual {637}
	594 NotImplemented "Instruction CMP not yet implemented."
	595 Move X8, 0xA8C000
	596 Move X8, [X8+344]
	597 Move X1, [X8]
	598 Move X2, X31
	599 Call NameValueCollection.get_Item, X0, X1
	600 Move X21, X0
	601 Move X1, X31
	602 Call String.IsNullOrEmpty, X0
	603 Move TEMP, X0
	604 And TEMP, TEMP, 1
	605 Compare TEMP, 1
	606 JumpIfEqual {623}
	607 Compare X21, 0
	608 JumpIfEqual {750}
	609 Move X0, X21
	610 Move X1, X31
	611 Call String.ToLower, X0
	612 Move X8, 0xA8C000
	613 Move X8, [X8+2952]
	614 Move X1, [X8]
	615 Move X2, X31
	616 Call String.op_Equality, X0, X1
	617 Move TEMP, X0
	618 And TEMP, TEMP, 1
	619 Compare TEMP, 1
	620 JumpIfNotEqual {623}
	621 Move W8, 1
	622 Move [X20+45], W8
	623 Move X0, [X20+72]
	624 Compare X0, 0
	625 JumpIfEqual {747}
	626 Move X9, 0xA8C000
	627 Move X8, [X0]
	628 Move X9, [X9+2760]
	629 Move X2, [X8+624]
	630 Move X1, [X9]
	631 Move X9, [X8+616]
	632 NotImplemented "Instruction BLR not yet implemented."
	633 Move [X20+64], X0
	634 Move [X20+44], W31
	635 Compare X0, 0
	636 JumpIfNotEqual {649}
	637 NotImplemented "Instruction CMP not yet implemented."
	638 NotImplemented "Instruction CSET not yet implemented."
	639 NotImplemented "Instruction CMP not yet implemented."
	640 Move X0, [X20+64]
	641 NotImplemented "Instruction CSET not yet implemented."
	642 And W8, W9, W8
	643 Move [X20+44], W8
	644 Compare X0, 0
	645 JumpIfNotEqual {649}
	646 Move W22, [X20+48]
	647 NotImplemented "Instruction CMP not yet implemented."
	648 NotImplemented "Instruction CMP not yet implemented."
	649 Move TEMP, 1
	650 Not TEMP
	651 Move W8, TEMP
	652 Move [X19+8], W8
	653 Move X0, [X25]
	654 Move W8, [X0+224]
	655 Compare W8, 0
	656 JumpIfNotEqual {658}
	657 Call 0x1C17DFC
	658 Move X0, X19
	659 Move X1, X31
	660 Call AsyncTaskMethodBuilder.SetResult, X0
	661 Move [X19], W31
	662 Move V0, [X31+3]
	663 Move [X19+4], V0
	664 Move X0, [X25]
	665 Move W8, [X0+224]
	666 Compare W8, 0
	667 JumpIfNotEqual {669}
	668 Call 0x1C17DFC
	669 Move X8, 0xA90000
	670 Move X8, [X8+304]
	671 Add X0, X19, 8
	672 Move X3, [X8]
	673 Add X1, X31, 48
	674 Move X2, X19
	675 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	676 Move X20, [X31+160]
	677 Move X19, [X31+168]
	678 Move X22, [X31+144]
	679 Move X21, [X31+152]
	680 Move X24, [X31+128]
	681 Move X23, [X31+136]
	682 Move X26, [X31+112]
	683 Move X25, [X31+120]
	684 Move X28, [X31+96]
	685 Move X27, [X31+104]
	686 Move X29, [X31+80]
	687 Move X30, [X31+88]
	688 Add X31, X31, 176
	689 Return 
	690 Move X8, 0xA74000
	691 Move X0, [X23+32]
	692 Move X8, [X8+2640]
	693 Move X1, [X8]
	694 Move X2, X31
	695 Call String.op_Equality, X0, X1
	696 Move X8, 0xA90000
	697 Move X8, [X8+376]
	698 Move W22, W0
	699 Move X1, [X8]
	700 Move X0, X21
	701 Move X2, X31
	702 Call StringBuilder.Append, X0, X1
	703 Move X1, [X23+16]
	704 Move X0, X21
	705 Move X2, X31
	706 Call StringBuilder.Append, X0, X1
	707 Call 0x1C17F20
	708 Call 0x1C17F20
	709 Call 0x1C17F20
	710 Move X24, [X20+24]
	711 Move X23, [X20+72]
	712 Move X0, 0xA8B000
	713 Move X0, [X0+728]
	714 Call 0x1C17D08
	715 Call 0x1C17F10
	716 Move X21, X0
	717 Move X0, 0xA8B000
	718 Move X0, [X0+536]
	719 Call 0x1C17D08
	720 Move X2, X0
	721 Move X0, X21
	722 Move X1, X24
	723 Move W3, W22
	724 Move X4, X23
	725 Move X5, X31
	726 Call HttpWebResponse..ctor, X0, X1, X2, X3, X4
	727 Move W8, [X20+48]
	728 NotImplemented "Instruction CMP not yet implemented."
	729 Move X0, 0xA90000
	730 Move X0, [X0+392]
	731 Call 0x1C17D08
	732 Call 0x1C17F20
	733 Call 0x1C17F20
	734 Call 0x1C17F20
	735 Call 0x1C17F20
	736 Call 0x1C17F20
	737 Call 0x1C17F20
	738 Call 0x1C17F20
	739 Call 0x1C17F20
	740 Call 0x1C17F20
	741 Call 0x1C17F20
	742 Call 0x1C17F20
	743 Call 0x1C17F20
	744 Call 0x1C17F20
	745 Call 0x1C17F20
	746 Call 0x1C17F20
	747 Call 0x1C17F20
	748 Call 0x1C17F28
	749 Call 0x1C17F20
	750 Call 0x1C17F20
	751 Call 0x1C17F20
	752 Call 0x1C17F20
	753 Call 0x1C181E0
	754 Call 0x1C181E0
	755 Call 0x1C17F20
	756 Call 0x1C17F20
	757 Call 0x1C17F28
	758 Call 0x1C17F28
	759 Call 0x1C17F20
	760 Call 0x1C17F28
	761 Call 0x1C17F28
	762 Call 0x1C17F20
	763 Call 0x1C17F28
	764 Call 0x1C17F28
	765 Move [X20+32], X0
	766 Call 0x1C17F20
	767 Call 0x1C17F20
	768 Move X0, 0xA90000
	769 Move X0, [X0+400]
	770 Call 0x1C17D08
	771 Move X20, X0
	772 Move X0, 0xA6F000
	773 Move X0, [X0+816]
	774 Call 0x1C17D08
	775 Call 0x1C17F10
	776 Move X22, X0
	777 Move W3, 7
	778 Move X1, X20
	779 Move X2, X31
	780 Move X4, X21
	781 Move X5, X31
	782 Call WebException..ctor, X0, X1, X2, X3, X4
	783 Move X0, 0xA90000
	784 Move X0, [X0+408]
	785 Call 0x1C17D08
	786 Move X1, X0
	787 Move X0, X22
	788 Call 0x1C17DEC
	789 Move X20, X0
	790 NotImplemented "Instruction CMP not yet implemented."
	791 Move X0, X20
	792 Call 0x3EB2AD0
	793 Move X20, X0
	794 Move X0, 0xA44000
	795 Move X0, [X0+2000]
	796 Call 0x1C17D08
	797 Move X8, [X20]
	798 Move X1, [X8]
	799 Call 0x1C18270
	800 Move TEMP, X0
	801 And TEMP, TEMP, 1
	802 Compare TEMP, 1
	803 JumpIfNotEqual {821}
	804 Move X20, [X20]
	805 Call 0x3EB2AE0
	806 Move TEMP, 1
	807 Not TEMP
	808 Move W8, TEMP
	809 Move [X19+8], W8
	810 Move X0, 0xA47000
	811 Move X0, [X0+640]
	812 Call 0x1C17D08
	813 Move W8, [X0+224]
	814 Compare W8, 0
	815 JumpIfNotEqual {817}
	816 Call 0x1C17DFC
	817 Move X0, X19
	818 Move X1, X20
	819 Move X2, X31
	820 Call AsyncTaskMethodBuilder.SetException, X0, X1
	821 Move W0, 8
	822 Call 0x3EB2AF0
	823 Move X8, [X20]
	824 Move [X0], X8
	825 Move X1, 0x805000
	826 Add X1, X1, 3672
	827 Move X2, X31
	828 Call 0x3EB2B00
	829 Move X20, X0
	830 Call 0x3EB2AE0
	831 Move X0, X20
	832 Call 0x1D2D690
	833 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x036B041C LDRB W8, [X21 + 0x94D]
	0x036B0420 MOV X19, X1
	0x036B0424 MOV X20, X0
	0x036B0428 TBNZ X8, 0x0, 0x36B044C
	0x036B042C ADRP X0, 0xA8F000
	0x036B0430 LDR X0, [X0 + 0x248]
	0x036B0434 BL 0x1C16CF4
	0x036B0438 ADRP X0, 0xA8F000
	0x036B043C LDR X0, [X0 + 0x250]
	0x036B0440 BL 0x1C16CF4
	0x036B0444 MOVZ W8, 0x1
	0x036B0448 STRB W8, [X21 + 0x94D]
	0x036B044C LDR X0, [X20 + 0x40]
	0x036B0450 CBZ X0, 0x36B04B0
	0x036B0454 ADRP X21, 0xA8F000
	0x036B0458 LDR X21, [X21 + 0x248]
	0x036B045C MOV X1, X19
	0x036B0460 LDR X2, [X21]
	0x036B0464 BL 0x2850ED0
	0x036B0468 LDR X0, [X20 + 0x48]
	0x036B046C CBZ X0, 0x36B04B0
	0x036B0470 LDR X2, [X21]
	0x036B0474 MOV X1, X19
	0x036B0478 BL 0x2850ED0
	0x036B047C LDR X0, [X20 + 0x50]
	0x036B0480 CBZ X0, 0x36B04B0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xD31000
	007 Move X22, 0xA47000
	008 Move W8, [X21+2376]
	009 Move X22, [X22+640]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xA47000
	017 Move X0, [X0+640]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2376], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Add X0, X20, 8
	027 Move X1, X19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X2, X31
	033 Move X30, [X31+48]
	034 Call AsyncTaskMethodBuilder.SetStateMachine, X0, X1
	035 Return 

