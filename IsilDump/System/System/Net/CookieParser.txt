Type: System.Net.CookieParser

Method: System.Void .ctor(System.String cookieString)

Disassembly:
	0x0368C6B8 LDR X0, [X21]
	0x0368C6BC BL 0x1C16F10
	0x0368C6C0 MOV X1, X19
	0x0368C6C4 MOV X20, X0
	0x0368C6C8 BL 0x368CCE0
	0x0368C6CC MOV X0, X20
	0x0368C6D0 LDP X20, X19, [X31 + 0x10]
	0x0368C6D4 LDP X30, X21, [X31], #0x20
	0x0368C6D8 RET
	0x0368C6DC STR X30, [X31 - 0x10]!
	0x0368C6E0 LDR X0, [X0 + 0x18]
	0x0368C6E4 CBZ X0, 0x368C6FC
	0x0368C6E8 LDR X8, [X0]
	0x0368C6EC LDR X2, [X8 + 0x298]
	0x0368C6F0 LDR X1, [X8 + 0x2A0]
	0x0368C6F4 LDR X30, [X31], #0x10
	0x0368C6F8 BR X2
	0x0368C6FC BL 0x1C16F20
	0x0368C700 MOV W0, W31
	0x0368C704 RET
	0x0368C708 RET
	0x0368C70C STR X30, [X31 - 0x10]!
	0x0368C710 LDR X0, [X0 + 0x18]
	0x0368C714 CBZ X0, 0x368C72C
	0x0368C718 LDR X8, [X0]
	0x0368C71C LDR X4, [X8 + 0x368]
	0x0368C720 LDR X3, [X8 + 0x370]
	0x0368C724 LDR X30, [X31], #0x10

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xD55000
	007 Move X21, 0xAB3000
	008 Move W8, [X22+2110]
	009 Move X21, [X21+800]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xAB3000
	017 Move X0, [X0+800]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+2110], W8
	021 Move X0, X19
	022 Move X1, X31
	023 Call Object..ctor, X0
	024 Move X0, [X21]
	025 Call 0x1C17F10
	026 Move X1, X20
	027 Move X21, X0
	028 Call CookieTokenizer..ctor, X0, X1
	029 Move [X19+16], X21
	030 Move X20, [X31+32]
	031 Move X19, [X31+40]
	032 Move X22, [X31+16]
	033 Move X21, [X31+24]
	034 Move X30, [X31+48]
	035 Return 

Method: System.Net.Cookie Get()

Disassembly:
	0x0368C728 BR X4
	0x0368C72C BL 0x1C16F20
	0x0368C730 STP X30, X21, [X31 - 0x20]!
	0x0368C734 STP X20, X19, [X31 + 0x10]
	0x0368C738 ADRP X21, 0xD54000
	0x0368C73C LDRB W8, [X21 + 0x845]
	0x0368C740 MOV W20, W1
	0x0368C744 MOV X19, X0
	0x0368C748 TBNZ X8, 0x0, 0x368C760
	0x0368C74C ADRP X0, 0xA68000
	0x0368C750 LDR X0, [X0 + 0x9F0]
	0x0368C754 BL 0x1C16CF4
	0x0368C758 MOVZ W8, 0x1
	0x0368C75C STRB W8, [X21 + 0x845]
	0x0368C760 CMP W20, 0x1
	0x0368C764 B.EQ 0x368C7A0
	0x0368C768 CMP W20, 0x2
	0x0368C76C B.EQ 0x368C7C4
	0x0368C770 CMP W20, 0x3
	0x0368C774 B.NE 0x368C7F0
	0x0368C778 ADRP X20, 0xA68000
	0x0368C77C LDR X20, [X20 + 0x9F0]
	0x0368C780 LDR X0, [X20]
	0x0368C784 LDR W8, [X0 + 0xE0]
	0x0368C788 CBNZ W8, 0x368C794
	0x0368C78C BL 0x1C16DFC
	0x0368C790 LDR X0, [X20]
	0x0368C794 LDR X8, [X0 + 0xB8]
	0x0368C798 LDR X0, [X8 + 0x18]
	0x0368C79C B 0x368C7E8
	0x0368C7A0 ADRP X8, 0xA68000
	0x0368C7A4 LDR X8, [X8 + 0x9F0]
	0x0368C7A8 LDR X0, [X8]
	0x0368C7AC LDR W8, [X0 + 0xE0]
	0x0368C7B0 CBNZ W8, 0x368C7B8
	0x0368C7B4 BL 0x1C16DFC
	0x0368C7B8 MOV X0, X31
	0x0368C7BC BL 0x3361584
	0x0368C7C0 B 0x368C7E8
	0x0368C7C4 ADRP X20, 0xA68000
	0x0368C7C8 LDR X20, [X20 + 0x9F0]
	0x0368C7CC LDR X0, [X20]
	0x0368C7D0 LDR W8, [X0 + 0xE0]
	0x0368C7D4 CBNZ W8, 0x368C7E0
	0x0368C7D8 BL 0x1C16DFC
	0x0368C7DC LDR X0, [X20]
	0x0368C7E0 LDR X8, [X0 + 0xB8]
	0x0368C7E4 LDR X0, [X8 + 0x10]
	0x0368C7E8 STR X0, [X19 + 0x20]
	0x0368C7EC B 0x368C7F4
	0x0368C7F0 LDR X0, [X19 + 0x20]
	0x0368C7F4 LDP X20, X19, [X31 + 0x10]
	0x0368C7F8 LDP X30, X21, [X31], #0x20
	0x0368C7FC RET
	0x0368C800 LDRB W0, [X0 + 0x28]
	0x0368C804 RET
	0x0368C808 STP X30, X27, [X31 - 0x50]!
	0x0368C80C STP X26, X25, [X31 + 0x10]
	0x0368C810 STP X24, X23, [X31 + 0x20]
	0x0368C814 STP X22, X21, [X31 + 0x30]
	0x0368C818 STP X20, X19, [X31 + 0x40]
	0x0368C81C ADRP X22, 0xD54000
	0x0368C820 LDRB W8, [X22 + 0x846]
	0x0368C824 MOV W21, W2
	0x0368C828 MOV X20, X1
	0x0368C82C MOV X19, X0
	0x0368C830 TBNZ X8, 0x0, 0x368C86C
	0x0368C834 ADRP X0, 0xAB2000
	0x0368C838 LDR X0, [X0 + 0x2A0]
	0x0368C83C BL 0x1C16CF4
	0x0368C840 ADRP X0, 0xA91000
	0x0368C844 LDR X0, [X0 + 0x918]
	0x0368C848 BL 0x1C16CF4
	0x0368C84C ADRP X0, 0xA67000
	0x0368C850 LDR X0, [X0 + 0xE00]
	0x0368C854 BL 0x1C16CF4
	0x0368C858 ADRP X0, 0xA67000
	0x0368C85C LDR X0, [X0 + 0xE18]
	0x0368C860 BL 0x1C16CF4
	0x0368C864 MOVZ W8, 0x1
	0x0368C868 STRB W8, [X22 + 0x846]
	0x0368C86C TBZ X21, 0x0, 0x368CA3C
	0x0368C870 ADRP X25, 0xAB2000
	0x0368C874 LDR X25, [X25 + 0x2A0]
	0x0368C878 LDR X0, [X25]
	0x0368C87C LDR W8, [X0 + 0xE0]
	0x0368C880 CBNZ W8, 0x368C888
	0x0368C884 BL 0x1C16DFC
	0x0368C888 ADRP X21, 0xD54000
	0x0368C88C LDRB W8, [X21 + 0x854]
	0x0368C890 CBNZ W8, 0x368C8A8
	0x0368C894 ADRP X0, 0xAB2000
	0x0368C898 LDR X0, [X0 + 0x2A0]
	0x0368C89C BL 0x1C16CF4
	0x0368C8A0 MOVZ W8, 0x1
	0x0368C8A4 STRB W8, [X21 + 0x854]
	0x0368C8A8 LDR X0, [X25]
	0x0368C8AC LDR W8, [X0 + 0xE0]
	0x0368C8B0 CBNZ W8, 0x368C8BC
	0x0368C8B4 BL 0x1C16DFC
	0x0368C8B8 LDR X0, [X25]
	0x0368C8BC LDR X8, [X19 + 0x18]
	0x0368C8C0 CBZ X8, 0x368CBB0
	0x0368C8C4 LDR X9, [X0 + 0xB8]
	0x0368C8C8 LDR X10, [X8]
	0x0368C8CC MOV X0, X8
	0x0368C8D0 LDR X23, [X9 + 0x18]
	0x0368C8D4 LDR X9, [X10 + 0x388]
	0x0368C8D8 LDR X1, [X10 + 0x390]
	0x0368C8DC BLR X9
	0x0368C8E0 MOV X22, X0
	0x0368C8E4 CBZ X0, 0x368CBB4
	0x0368C8E8 ADRP X26, 0xA67000
	0x0368C8EC ADRP X27, 0xA91000
	0x0368C8F0 LDR X26, [X26 + 0xE18]
	0x0368C8F4 LDR X27, [X27 + 0x918]
	0x0368C8F8 MOV W21, W31
	0x0368C8FC LDR X8, [X22]
	0x0368C900 LDR X1, [X26]
	0x0368C904 LDRH W9, [X8 + 0x12E]
	0x0368C908 CBZ X9, 0x368C92C
	0x0368C90C LDR X10, [X8 + 0xB0]
	0x0368C910 ADD X10, X10, 0x8
	0x0368C914 LDUR X11, [X10 - 0x8]
	0x0368C918 CMP X11, X1
	0x0368C91C B.EQ 0x368C93C
	0x0368C920 SUBS X9, X9, 0x1
	0x0368C924 ADD X10, X10, 0x10
	0x0368C928 B.NE 0x368C914
	0x0368C92C MOV X0, X22
	0x0368C930 MOV W2, W31
	0x0368C934 BL 0x1C5C788
	0x0368C938 B 0x368C948
	0x0368C93C LDRSW X9, [X10]
	0x0368C940 ADD X8, X8, X9, 0x4, LSL
	0x0368C944 ADD X0, X8, 0x138
	0x0368C948 LDP X8, X1, [X0]
	0x0368C94C MOV X0, X22
	0x0368C950 BLR X8
	0x0368C954 TBZ X0, 0x0, 0x368CA60
	0x0368C958 LDR X8, [X22]
	0x0368C95C LDR X1, [X26]
	0x0368C960 LDRH W9, [X8 + 0x12E]
	0x0368C964 CBZ X9, 0x368C988
	0x0368C968 LDR X10, [X8 + 0xB0]
	0x0368C96C ADD X10, X10, 0x8
	0x0368C970 LDUR X11, [X10 - 0x8]
	0x0368C974 CMP X11, X1
	0x0368C978 B.EQ 0x368C998
	0x0368C97C SUBS X9, X9, 0x1
	0x0368C980 ADD X10, X10, 0x10
	0x0368C984 B.NE 0x368C970
	0x0368C988 MOVZ W2, 0x1
	0x0368C98C MOV X0, X22
	0x0368C990 BL 0x1C5C788
	0x0368C994 B 0x368C9A8
	0x0368C998 LDR W9, [X10]
	0x0368C99C ADD W9, W9, 0x1
	0x0368C9A0 ADD X8, X8, W9, 0x4, SXTW
	0x0368C9A4 ADD X0, X8, 0x138
	0x0368C9A8 LDP X8, X1, [X0]
	0x0368C9AC MOV X0, X22
	0x0368C9B0 BLR X8
	0x0368C9B4 MOV X24, X0
	0x0368C9B8 CBZ X0, 0x368C9CC
	0x0368C9BC LDR X1, [X25]
	0x0368C9C0 LDR X8, [X24]
	0x0368C9C4 CMP X8, X1
	0x0368C9C8 B.NE 0x368CBA8
	0x0368C9CC CBZ X23, 0x368CBA4
	0x0368C9D0 LDR X8, [X23]
	0x0368C9D4 LDR X1, [X27]
	0x0368C9D8 LDRH W9, [X8 + 0x12E]
	0x0368C9DC CBZ X9, 0x368CA00
	0x0368C9E0 LDR X10, [X8 + 0xB0]
	0x0368C9E4 ADD X10, X10, 0x8
	0x0368C9E8 LDUR X11, [X10 - 0x8]
	0x0368C9EC CMP X11, X1
	0x0368C9F0 B.EQ 0x368CA10
	0x0368C9F4 SUBS X9, X9, 0x1
	0x0368C9F8 ADD X10, X10, 0x10
	0x0368C9FC B.NE 0x368C9E8
	0x0368CA00 MOV X0, X23
	0x0368CA04 MOV W2, W31
	0x0368CA08 BL 0x1C5C788
	0x0368CA0C B 0x368CA1C
	0x0368CA10 LDRSW X9, [X10]
	0x0368CA14 ADD X8, X8, X9, 0x4, LSL
	0x0368CA18 ADD X0, X8, 0x138
	0x0368CA1C LDP X8, X3, [X0]
	0x0368CA20 MOV X0, X23
	0x0368CA24 MOV X1, X20
	0x0368CA28 MOV X2, X24
	0x0368CA2C BLR X8
	0x0368CA30 CBZ W0, 0x368CA6C
	0x0368CA34 ADD W21, W21, 0x1
	0x0368CA38 B 0x368C8FC
	0x0368CA3C LDR X0, [X19 + 0x18]
	0x0368CA40 CBZ X0, 0x368CBB0
	0x0368CA44 LDR X8, [X0]
	0x0368CA48 MOV X1, X20
	0x0368CA4C LDR X9, [X8 + 0x308]
	0x0368CA50 LDR X2, [X8 + 0x310]
	0x0368CA54 BLR X9
	0x0368CA58 MOVZ W23, 0x1
	0x0368CA5C B 0x368CB70
	0x0368CA60 MOV X24, X31
	0x0368CA64 MOVZ W23, 0x1
	0x0368CA68 B 0x368CAAC
	0x0368CA6C CBZ X24, 0x368CBC0
	0x0368CA70 CBZ X20, 0x368CBC4
	0x0368CA74 LDR W8, [X24 + 0x20]
	0x0368CA78 LDR W9, [X20 + 0x20]
	0x0368CA7C CMP W8, W9
	0x0368CA80 B.GT 0x368CAA4
	0x0368CA84 LDR X0, [X19 + 0x18]
	0x0368CA88 CBZ X0, 0x368CBC8
	0x0368CA8C LDR X8, [X0]
	0x0368CA90 LDR X9, [X8 + 0x2F8]
	0x0368CA94 LDR X3, [X8 + 0x300]
	0x0368CA98 MOV W1, W21
	0x0368CA9C MOV X2, X20
	0x0368CAA0 BLR X9
	0x0368CAA4 MOV X24, X31
	0x0368CAA8 MOV W23, W31
	0x0368CAAC MOVZ W25, 0x7
	0x0368CAB0 ADRP X26, 0xA67000
	0x0368CAB4 LDR X26, [X26 + 0xE00]
	0x0368CAB8 MOV X0, X22
	0x0368CABC LDR X1, [X26]
	0x0368CAC0 BL 0x1C16E00
	0x0368CAC4 CBZ X0, 0x368CB24
	0x0368CAC8 LDR X8, [X0]
	0x0368CACC LDR X1, [X26]
	0x0368CAD0 MOV X22, X0
	0x0368CAD4 LDRH W9, [X8 + 0x12E]
	0x0368CAD8 CBZ X9, 0x368CAFC
	0x0368CADC LDR X10, [X8 + 0xB0]
	0x0368CAE0 ADD X10, X10, 0x8
	0x0368CAE4 LDUR X11, [X10 - 0x8]
	0x0368CAE8 CMP X11, X1
	0x0368CAEC B.EQ 0x368CB0C
	0x0368CAF0 SUBS X9, X9, 0x1
	0x0368CAF4 ADD X10, X10, 0x10
	0x0368CAF8 B.NE 0x368CAE4
	0x0368CAFC MOV X0, X22
	0x0368CB00 MOV W2, W31
	0x0368CB04 BL 0x1C5C788
	0x0368CB08 B 0x368CB18
	0x0368CB0C LDRSW X9, [X10]
	0x0368CB10 ADD X8, X8, X9, 0x4, LSL
	0x0368CB14 ADD X0, X8, 0x138
	0x0368CB18 LDP X8, X1, [X0]
	0x0368CB1C MOV X0, X22
	0x0368CB20 BLR X8
	0x0368CB24 CBNZ X24, 0x368CBB8
	0x0368CB28 CMP W25, 0x7
	0x0368CB2C B.EQ 0x368CB34
	0x0368CB30 CBNZ W25, 0x368CB88
	0x0368CB34 LDR X0, [X19 + 0x18]
	0x0368CB38 CBZ X0, 0x368CBB0
	0x0368CB3C LDR X8, [X0]
	0x0368CB40 LDR X9, [X8 + 0x298]
	0x0368CB44 LDR X1, [X8 + 0x2A0]
	0x0368CB48 BLR X9
	0x0368CB4C CMP W21, W0
	0x0368CB50 B.NE 0x368CB70
	0x0368CB54 LDR X0, [X19 + 0x18]
	0x0368CB58 CBZ X0, 0x368CBB0
	0x0368CB5C LDR X8, [X0]
	0x0368CB60 MOV X1, X20
	0x0368CB64 LDR X9, [X8 + 0x308]
	0x0368CB68 LDR X2, [X8 + 0x310]
	0x0368CB6C BLR X9
	0x0368CB70 CBZ X20, 0x368CBB0
	0x0368CB74 LDR W8, [X20 + 0x88]
	0x0368CB78 CMP W8, 0x1
	0x0368CB7C B.EQ 0x368CB88
	0x0368CB80 MOVZ W8, 0x1
	0x0368CB84 STRB W8, [X19 + 0x28]
	0x0368CB88 MOV W0, W23
	0x0368CB8C LDP X20, X19, [X31 + 0x40]
	0x0368CB90 LDP X22, X21, [X31 + 0x30]
	0x0368CB94 LDP X24, X23, [X31 + 0x20]
	0x0368CB98 LDP X26, X25, [X31 + 0x10]
	0x0368CB9C LDP X30, X27, [X31], #0x50
	0x0368CBA0 RET
	0x0368CBA4 BL 0x1C16F20
	0x0368CBA8 MOV X0, X24
	0x0368CBAC BL 0x1C171E0
	0x0368CBB0 BL 0x1C16F20
	0x0368CBB4 BL 0x1C16F20
	0x0368CBB8 MOV X0, X24
	0x0368CBBC BL 0x1C16F18
	0x0368CBC0 BL 0x1C16F20
	0x0368CBC4 BL 0x1C16F20
	0x0368CBC8 BL 0x1C16F20
	0x0368CBCC B 0x368CBD4
	0x0368CBD0 B 0x368CBD4
	0x0368CBD4 MOV X25, X0
	0x0368CBD8 MOV W23, W31
	0x0368CBDC B 0x368CC04
	0x0368CBE0 B 0x368CBE8
	0x0368CBE4 B 0x368CBFC
	0x0368CBE8 MOV X25, X0
	0x0368CBEC MOV W21, W31
	0x0368CBF0 B 0x368CC00
	0x0368CBF4 B 0x368CBFC
	0x0368CBF8 B 0x368CBFC
	0x0368CBFC MOV X25, X0
	0x0368CC00 MOVZ W23, 0x1
	0x0368CC04 CMP W1, 0x1
	0x0368CC08 B.NE 0x368CC24
	0x0368CC0C MOV X0, X25
	0x0368CC10 BL 0x3EB1AD0
	0x0368CC14 LDR X24, [X0]
	0x0368CC18 BL 0x3EB1AE0
	0x0368CC1C MOV W25, W31
	0x0368CC20 B 0x368CAB0
	0x0368CC24 MOV X24, X31
	0x0368CC28 B 0x368CC30
	0x0368CC2C MOV X25, X0
	0x0368CC30 ADRP X20, 0xA67000
	0x0368CC34 LDR X20, [X20 + 0xE00]
	0x0368CC38 LDR X1, [X20]
	0x0368CC3C MOV X0, X22
	0x0368CC40 BL 0x1C16E00
	0x0368CC44 MOV X19, X0
	0x0368CC48 CBZ X0, 0x368CCA4
	0x0368CC4C LDR X8, [X19]
	0x0368CC50 LDR X1, [X20]
	0x0368CC54 LDRH W9, [X8 + 0x12E]
	0x0368CC58 CBZ X9, 0x368CC7C
	0x0368CC5C LDR X10, [X8 + 0xB0]
	0x0368CC60 ADD X10, X10, 0x8
	0x0368CC64 LDUR X11, [X10 - 0x8]
	0x0368CC68 CMP X11, X1
	0x0368CC6C B.EQ 0x368CC8C
	0x0368CC70 SUBS X9, X9, 0x1
	0x0368CC74 ADD X10, X10, 0x10
	0x0368CC78 B.NE 0x368CC64
	0x0368CC7C MOV X0, X19
	0x0368CC80 MOV W2, W31
	0x0368CC84 BL 0x1C5C788
	0x0368CC88 B 0x368CC98
	0x0368CC8C LDRSW X9, [X10]
	0x0368CC90 ADD X8, X8, X9, 0x4, LSL
	0x0368CC94 ADD X0, X8, 0x138
	0x0368CC98 LDP X8, X1, [X0]
	0x0368CC9C MOV X0, X19
	0x0368CCA0 BLR X8

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+80], X29
	003 Move [X31+88], X30
	004 Move [X31+96], X28
	005 Move [X31+104], X27
	006 Move [X31+112], X26
	007 Move [X31+120], X25
	008 Move [X31+128], X24
	009 Move [X31+136], X23
	010 Move [X31+144], X22
	011 Move [X31+152], X21
	012 Move [X31+160], X20
	013 Move [X31+168], X19
	014 Move X20, 0xD55000
	015 Move W8, [X20+2111]
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {38}
	021 Move X0, 0xAB3000
	022 Move X0, [X0+672]
	023 Call 0x1C17CF4
	024 Move X0, 0xA6A000
	025 Move X0, [X0+3144]
	026 Call 0x1C17CF4
	027 Move X0, 0xA69000
	028 Move X0, [X0+2544]
	029 Call 0x1C17CF4
	030 Move X0, 0xA6A000
	031 Move X0, [X0+632]
	032 Call 0x1C17CF4
	033 Move X0, 0xA6A000
	034 Move X0, [X0+2600]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X20+2111], W8
	038 Move [X31+8], X31
	039 Move [X31+16], X31
	040 Move X25, 0xAB3000
	041 Move X25, [X25+672]
	042 Move [X31+64], X31
	043 Move [X31+72], X31
	044 Move [X31+60], W31
	045 Move [X31+48], X31
	046 Move [X31+44], W31
	047 Move [X31+32], W31
	048 Move X0, [X19+16]
	049 Move X29, -45039616
	050 Move X27, -45039616
	051 Move W28, W31
	052 Move W22, W31
	053 Move W26, W31
	054 Move W24, W31
	055 Move W20, W31
	056 Move X21, X31
	057 Add X29, X29, 1957
	058 Add X27, X27, 1965
	059 Compare X0, 0
	060 JumpIfEqual {401}
	061 NotImplemented "Instruction CMP not yet implemented."
	062 NotImplemented "Instruction CSET not yet implemented."
	063 Move W2, 1
	064 Call CookieTokenizer.Next, X0, X1, X2
	065 Compare X21, 0
	066 JumpIfEqual {107}
	067 NotImplemented "Instruction CMP not yet implemented."
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Move X8, [X19+16]
	070 Compare X8, 0
	071 JumpIfEqual {401}
	072 Move W9, [X8+48]
	073 Subtract W9, W9, 7
	074 NotImplemented "Instruction CMP not yet implemented."
	075 NotImplemented "Instruction ADR not yet implemented."
	076 Move W11, [X27]
	077 Add X10, X10, X11
	078 CallNoReturn X10
	079 Move W9, [X31+16]
	080 Move TEMP, X9
	081 And TEMP, TEMP, 1
	082 Compare TEMP, 1
	083 JumpIfEqual {105}
	084 Move X9, 0xD55000
	085 Move W9, [X9+2088]
	086 Move X23, [X8+64]
	087 Move TEMP, X9
	088 And TEMP, TEMP, 1
	089 Compare TEMP, 1
	090 JumpIfEqual {97}
	091 Move X0, 0xA6A000
	092 Move X0, [X0+632]
	093 Call 0x1C17CF4
	094 Move W8, 1
	095 Move X9, 0xD55000
	096 Move [X9+2088], W8
	097 Compare X23, 0
	098 JumpIfNotEqual {104}
	099 Move X8, 0xA6A000
	100 Move X8, [X8+632]
	101 Move X8, [X8]
	102 Move X8, [X8+184]
	103 Move X23, [X8]
	104 Move [X21+16], X23
	105 Move W8, 1
	106 Move [X31+16], W8
	107 Subtract W8, W0, 1
	108 NotImplemented "Instruction CMP not yet implemented."
	109 Move X0, [X25]
	110 Call 0x1C17F10
	111 Move X21, X0
	112 Call Cookie..ctor, X0
	113 Move X8, [X19+16]
	114 Compare X8, 0
	115 JumpIfEqual {401}
	116 Compare X21, 0
	117 JumpIfEqual {401}
	118 Move X1, [X8+32]
	119 Move X0, X21
	120 Call Cookie.InternalSetName, X0, X1
	121 Move TEMP, X0
	122 And TEMP, TEMP, 1
	123 Compare TEMP, 1
	124 JumpIfEqual {132}
	125 Move X8, 0xA6A000
	126 Move X8, [X8+632]
	127 Move X0, X21
	128 Move X8, [X8]
	129 Move X8, [X8+184]
	130 Move X1, [X8]
	131 Call Cookie.InternalSetName, X0, X1
	132 Move X8, [X19+16]
	133 Compare X8, 0
	134 JumpIfEqual {401}
	135 Move X1, [X8+64]
	136 Move X0, X21
	137 Call Cookie.set_Value, X0, X1
	138 Move X8, [X19+16]
	139 Compare X8, 0
	140 JumpIfEqual {401}
	141 Move W8, [X8+48]
	142 Subtract W8, W8, 10
	143 NotImplemented "Instruction CMP not yet implemented."
	144 NotImplemented "Instruction ADR not yet implemented."
	145 Move W10, [X29]
	146 Add X9, X9, X10
	147 CallNoReturn X9
	148 Move W8, 1
	149 Move TEMP, X28
	150 And TEMP, TEMP, 1
	151 Compare TEMP, 1
	152 JumpIfEqual {154}
	153 Move [X21+36], W8
	154 Move W28, 1
	155 Move X21, X31
	156 Move W8, 1
	157 Move TEMP, X22
	158 And TEMP, TEMP, 1
	159 Compare TEMP, 1
	160 JumpIfEqual {162}
	161 Move [X21+112], W8
	162 Move W22, 1
	163 Move TEMP, X26
	164 And TEMP, TEMP, 1
	165 Compare TEMP, 1
	166 JumpIfEqual {221}
	167 Move X8, 0xA6A000
	168 Move X8, [X8+632]
	169 Move X0, X21
	170 Move X8, [X8]
	171 Move X8, [X8+184]
	172 Move X1, [X8]
	173 Call Cookie.set_Port, X0, X1
	174 Move W8, 1
	175 Move [X21+113], W8
	176 Move W9, [X31+20]
	177 Move TEMP, X9
	178 And TEMP, TEMP, 1
	179 Compare TEMP, 1
	180 JumpIfEqual {184}
	181 Move X1, [X8+64]
	182 Move X0, X21
	183 Call Cookie.set_Path, X0, X1
	184 Move W8, 1
	185 Move [X31+20], W8
	186 Move TEMP, X20
	187 And TEMP, TEMP, 1
	188 Compare TEMP, 1
	189 JumpIfEqual {213}
	190 Move X0, [X8+64]
	191 Call CookieParser.CheckQuoted, X0
	192 Move X8, 0xA6A000
	193 Move X8, [X8+2600]
	194 Move X23, X0
	195 Move X8, [X8]
	196 Move W9, [X8+224]
	197 Compare W9, 0
	198 JumpIfNotEqual {201}
	199 Move X0, X8
	200 Call 0x1C17DFC
	201 Add X2, X31, 72
	202 Move W1, 1
	203 Move X0, X23
	204 Move X3, X31
	205 Move W20, 1
	206 Call Uri.TryCreate, X0, X1, X2
	207 Move TEMP, X0
	208 And TEMP, TEMP, 1
	209 Compare TEMP, 1
	210 JumpIfNotEqual {345}
	211 Move X8, [X31+72]
	212 Move [X21+24], X8
	213 Move W20, 1
	214 Move TEMP, X26
	215 And TEMP, TEMP, 1
	216 Compare TEMP, 1
	217 JumpIfEqual {221}
	218 Move X1, [X8+64]
	219 Move X0, X21
	220 Call Cookie.set_Port, X0, X1
	221 Move W26, 1
	222 Move W9, [X31+12]
	223 Move TEMP, X9
	224 And TEMP, TEMP, 1
	225 Compare TEMP, 1
	226 JumpIfEqual {343}
	227 Move X0, [X8+64]
	228 Call CookieParser.CheckQuoted, X0
	229 Add X1, X31, 44
	230 Move X2, X31
	231 Call Int32.TryParse, X0, X1
	232 Move TEMP, X0
	233 And TEMP, TEMP, 1
	234 Compare TEMP, 1
	235 JumpIfNotEqual {336}
	236 Move W1, [X31+44]
	237 Move X0, X21
	238 Call Cookie.set_Version, X0, X1
	239 Move X8, [X19+16]
	240 Compare X8, 0
	241 JumpIfEqual {401}
	242 Move W8, [X8+40]
	243 Move [X21+152], W8
	244 Move W9, [X31+8]
	245 Move TEMP, X9
	246 And TEMP, TEMP, 1
	247 Compare TEMP, 1
	248 JumpIfEqual {259}
	249 Move X0, [X8+64]
	250 Call CookieParser.CheckQuoted, X0
	251 Move X1, X0
	252 Move X0, X21
	253 Call Cookie.set_Domain, X0, X1
	254 Move X8, [X19+16]
	255 Compare X8, 0
	256 JumpIfEqual {401}
	257 Move W8, [X8+40]
	258 Move [X21+153], W8
	259 Move W8, 1
	260 Move [X31+8], W8
	261 Move TEMP, X24
	262 And TEMP, TEMP, 1
	263 Compare TEMP, 1
	264 JumpIfEqual {335}
	265 Move X0, [X8+64]
	266 Call CookieParser.CheckQuoted, X0
	267 Move X8, 0xA6A000
	268 Move X8, [X8+3144]
	269 Move X23, X0
	270 Move X8, [X8]
	271 Move W9, [X8+224]
	272 Compare W9, 0
	273 JumpIfNotEqual {276}
	274 Move X0, X8
	275 Call 0x1C17DFC
	276 Move X0, X31
	277 Call CultureInfo.get_InvariantCulture
	278 Move X8, 0xA69000
	279 Move X8, [X8+2544]
	280 Move X24, X0
	281 Move X8, [X8]
	282 Move W9, [X8+224]
	283 Compare W9, 0
	284 JumpIfNotEqual {287}
	285 Move X0, X8
	286 Call 0x1C17DFC
	287 Add X3, X31, 64
	288 Move W2, 7
	289 Move X0, X23
	290 Move X1, X24
	291 Move X4, X31
	292 Call DateTime.TryParse, X0, X1, X2, X3
	293 Move TEMP, X0
	294 And TEMP, TEMP, 1
	295 Compare TEMP, 1
	296 JumpIfNotEqual {328}
	297 Move X8, [X31+64]
	298 Move [X21+56], X8
	299 Move TEMP, X24
	300 And TEMP, TEMP, 1
	301 Compare TEMP, 1
	302 JumpIfEqual {335}
	303 Move X0, [X8+64]
	304 Call CookieParser.CheckQuoted, X0
	305 Add X1, X31, 60
	306 Move X2, X31
	307 Call Int32.TryParse, X0, X1
	308 Move TEMP, X0
	309 And TEMP, TEMP, 1
	310 Compare TEMP, 1
	311 JumpIfNotEqual {328}
	312 Move X8, 0xA69000
	313 Move X8, [X8+2544]
	314 Move X0, [X8]
	315 Move W8, [X0+224]
	316 Compare W8, 0
	317 JumpIfNotEqual {319}
	318 Call 0x1C17DFC
	319 Move X0, X31
	320 Call DateTime.get_Now
	321 Move W8, [X31+60]
	322 Move [X31+48], X0
	323 Add X0, X31, 48
	324 Move X1, X31
	325 NotImplemented "Instruction SCVTF not yet implemented."
	326 Call DateTime.AddSeconds, X0, V0
	327 Move [X21+56], X0
	328 Move X8, 0xA6A000
	329 Move X8, [X8+632]
	330 Move X0, X21
	331 Move X8, [X8]
	332 Move X8, [X8+184]
	333 Move X1, [X8]
	334 Call Cookie.InternalSetName, X0, X1
	335 Move W24, 1
	336 Move X8, 0xA6A000
	337 Move X8, [X8+632]
	338 Move X0, X21
	339 Move X8, [X8]
	340 Move X8, [X8+184]
	341 Move X1, [X8]
	342 Call Cookie.InternalSetName, X0, X1
	343 Move W8, 1
	344 Move [X31+12], W8
	345 Move X0, [X19+16]
	346 Compare X0, 0
	347 JumpIfEqual {401}
	348 Move W8, [X0+20]
	349 Move W9, [X0+24]
	350 NotImplemented "Instruction CMP not yet implemented."
	351 Move W8, [X0+16]
	352 Compare W8, 0
	353 JumpIfEqual {59}
	354 NotImplemented "Instruction CMP not yet implemented."
	355 Move X23, X0
	356 Move X0, X23
	357 Call 0x3EB2AD0
	358 Move X23, X0
	359 Move X0, 0xA6E000
	360 Move X0, [X0+3264]
	361 Call 0x1C17D08
	362 Move X8, [X23]
	363 Move X1, [X8]
	364 Call 0x1C18270
	365 Move TEMP, X0
	366 And TEMP, TEMP, 1
	367 Compare TEMP, 1
	368 JumpIfNotEqual {402}
	369 Move X8, [X23]
	370 NotImplemented "Instruction LDRSW not yet implemented."
	371 Add X10, X31, 24
	372 Move [X10], X8
	373 Add W8, W9, 1
	374 Move [X31+32], W8
	375 Call 0x3EB2AE0
	376 Move X0, 0xA6A000
	377 Move X0, [X0+632]
	378 Call 0x1C17D08
	379 Move X8, [X0+184]
	380 Move X0, X21
	381 Move X1, [X8]
	382 Call Cookie.InternalSetName, X0, X1
	383 Move W8, [X31+32]
	384 Subtract W8, W8, 1
	385 Move [X31+32], W8
	386 Move X0, X21
	387 Move X20, [X31+160]
	388 Move X19, [X31+168]
	389 Move X22, [X31+144]
	390 Move X21, [X31+152]
	391 Move X24, [X31+128]
	392 Move X23, [X31+136]
	393 Move X26, [X31+112]
	394 Move X25, [X31+120]
	395 Move X28, [X31+96]
	396 Move X27, [X31+104]
	397 Move X29, [X31+80]
	398 Move X30, [X31+88]
	399 Add X31, X31, 176
	400 Return X0
	401 Call 0x1C17F20
	402 Move W0, 8
	403 Call 0x3EB2AF0
	404 Move X8, [X23]
	405 Move [X0], X8
	406 Move X1, 0x829000
	407 Add X1, X1, 3672
	408 Move X2, X31
	409 Call 0x3EB2B00
	410 Move X23, X0
	411 Call 0x3EB2AE0
	412 Move X0, X23
	413 Call 0x1D2D690
	414 Call 0x1991590

Method: System.String CheckQuoted(System.String value)

Disassembly:
	0x0368AF68 TBNZ X21, 0x0, 0x368AF8C
	0x0368AF6C LDR X0, [X19 + 0x38]
	0x0368AF70 CBZ X0, 0x368B044
	0x0368AF74 LDR W1, [X19 + 0x14]
	0x0368AF78 MOV X2, X31
	0x0368AF7C BL 0x3222A1C
	0x0368AF80 AND W8, W0, 0xFFFF
	0x0368AF84 CMP W8, 0x2C
	0x0368AF88 B.EQ 0x368AFE4
	0x0368AF8C LDR X0, [X19 + 0x38]
	0x0368AF90 CBZ X0, 0x368B044
	0x0368AF94 LDR W1, [X19 + 0x14]
	0x0368AF98 MOV X2, X31
	0x0368AF9C BL 0x3222A1C
	0x0368AFA0 LDR W9, [X19 + 0x14]
	0x0368AFA4 AND W8, W0, 0xFFFF
	0x0368AFA8 CMP W8, 0x2C
	0x0368AFAC B.NE 0x368AFC4
	0x0368AFB0 MOV W21, W31
	0x0368AFB4 ADD W1, W9, 0x1
	0x0368AFB8 MOVN W8, 0x0
	0x0368AFBC STR W1, [X19 + 0x2C]
	0x0368AFC0 B 0x368AFCC
	0x0368AFC4 LDR W8, [X19 + 0x34]
	0x0368AFC8 ADD W1, W9, 0x1
	0x0368AFCC LDR W9, [X19 + 0x18]
	0x0368AFD0 ADD W8, W8, W22
	0x0368AFD4 STR W1, [X19 + 0x14]
	0x0368AFD8 STR W8, [X19 + 0x34]
	0x0368AFDC CMP W1, W9
	0x0368AFE0 B.LT 0x368AF28
	0x0368AFE4 LDP W1, W8, [X19 + 0x14]
	0x0368AFE8 CMP W1, W8
	0x0368AFEC B.GE 0x368B030
	0x0368AFF0 LDR X0, [X19 + 0x38]
	0x0368AFF4 CBZ X0, 0x368B044
	0x0368AFF8 MOV X2, X31
	0x0368AFFC BL 0x3222A1C
	0x0368B000 LDR W11, [X19 + 0x14]
	0x0368B004 AND W8, W0, 0xFFFF
	0x0368B008 MOVZ W9, 0x4
	0x0368B00C MOVZ W10, 0x6
	0x0368B010 CMP W8, 0x3D
	0x0368B014 CSEL W9, W10, W9, EQ
	0x0368B018 CMP W8, 0x3B
	0x0368B01C MOVZ W8, 0x3
	0x0368B020 CSEL W0, W8, W9, EQ
	0x0368B024 ADD W8, W11, 0x1
	0x0368B028 STR W8, [X19 + 0x14]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xD57000
	005 Move W8, [X20+2112]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xA6C000
	012 Move X0, [X0+632]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2112], W8
	016 Compare X19, 0
	017 JumpIfEqual {53}
	018 Move W8, [X19+16]
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Move X0, X19
	021 Move W1, W31
	022 Move X2, X31
	023 Call String.get_Chars, X0, X1
	024 And W8, W0, 0xFFFF
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move W8, [X19+16]
	027 Move X0, X19
	028 Move X2, X31
	029 Subtract W1, W8, 1
	030 Call String.get_Chars, X0, X1
	031 And W8, W0, 0xFFFF
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move W8, [X19+16]
	034 Subtract W2, W8, 2
	035 Move X8, 0xA6C000
	036 Move X8, [X8+632]
	037 Move X8, [X8]
	038 Move X8, [X8+184]
	039 Move X19, [X8]
	040 Move X0, X19
	041 Move X20, [X31+16]
	042 Move X19, [X31+24]
	043 Move X30, [X31+32]
	044 Return X0
	045 Move X0, X19
	046 Move X20, [X31+16]
	047 Move X19, [X31+24]
	048 Move W1, 1
	049 Move X3, X31
	050 Move X30, [X31+32]
	051 Call String.Substring, X0, X1, X2
	052 Return X0
	053 Call 0x1C17F20

