Type: System.Net.FixedSizeReadStream

Method: System.Int64 get_ContentLength()

Disassembly:
	0x0369C8A4 BL 0x1C16D08
	0x0369C8A8 MOV X1, X0

ISIL:
	001 Move X0, [X0+64]
	002 Return X0

Method: System.Void .ctor(System.Net.WebOperation operation, System.IO.Stream innerStream, System.Int64 contentLength)

Disassembly:
	0x0369C8AC MOV X0, X19
	0x0369C8B0 BL 0x1C16DEC
	0x0369C8B4 STR X30, [X31 - 0x20]!
	0x0369C8B8 STP X20, X19, [X31 + 0x10]
	0x0369C8BC ADRP X20, 0xD44000
	0x0369C8C0 ADRP X19, 0xA7F000
	0x0369C8C4 LDRB W8, [X20 + 0x8B9]
	0x0369C8C8 LDR X19, [X19 + 0xB88]
	0x0369C8CC TBNZ X8, 0x0, 0x369C8E4
	0x0369C8D0 ADRP X0, 0xA7F000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X3
	005 Move X3, X31
	006 Move X20, X0
	007 Call WebReadStream..ctor, X0, X1, X2
	008 Move [X20+64], X19
	009 Move X20, [X31+16]
	010 Move X19, [X31+24]
	011 Move X30, [X31+32]
	012 Return 

Method: System.Threading.Tasks.Task`1<System.Int32> ProcessReadAsync(System.Byte[] buffer, System.Int32 offset, System.Int32 size, System.Threading.CancellationToken cancellationToken)

Disassembly:
	0x0369C8D4 LDR X0, [X0 + 0xB88]
	0x0369C8D8 BL 0x1C16CF4
	0x0369C8DC MOVZ W8, 0x1
	0x0369C8E0 STRB W8, [X20 + 0x8B9]
	0x0369C8E4 LDR X0, [X19]
	0x0369C8E8 LDR W8, [X0 + 0xE0]
	0x0369C8EC CBNZ W8, 0x369C8F8
	0x0369C8F0 BL 0x1C16DFC
	0x0369C8F4 LDR X0, [X19]
	0x0369C8F8 LDR X8, [X0 + 0xB8]
	0x0369C8FC LDP X20, X19, [X31 + 0x10]
	0x0369C900 LDR W0, [X8]
	0x0369C904 LDR X30, [X31], #0x20
	0x0369C908 RET
	0x0369C90C LDR W0, [X0 + 0x120]
	0x0369C910 RET
	0x0369C914 LDR X0, [X0 + 0x90]
	0x0369C918 RET
	0x0369C91C STP X30, X21, [X31 - 0x20]!
	0x0369C920 STP X20, X19, [X31 + 0x10]
	0x0369C924 ADRP X21, 0xD44000
	0x0369C928 LDRB W8, [X21 + 0x8BA]
	0x0369C92C MOV X19, X1
	0x0369C930 MOV X20, X0
	0x0369C934 TBNZ X8, 0x0, 0x369C9AC
	0x0369C938 ADRP X0, 0xAA1000
	0x0369C93C LDR X0, [X0 + 0x6E8]
	0x0369C940 BL 0x1C16CF4
	0x0369C944 ADRP X0, 0xA80000
	0x0369C948 LDR X0, [X0 + 0x4E0]
	0x0369C94C BL 0x1C16CF4
	0x0369C950 ADRP X0, 0xA80000
	0x0369C954 LDR X0, [X0 + 0x4D8]
	0x0369C958 BL 0x1C16CF4
	0x0369C95C ADRP X0, 0xA80000
	0x0369C960 LDR X0, [X0 + 0x4D0]
	0x0369C964 BL 0x1C16CF4
	0x0369C968 ADRP X0, 0xA9E000
	0x0369C96C LDR X0, [X0 + 0x218]
	0x0369C970 BL 0x1C16CF4
	0x0369C974 ADRP X0, 0xA9E000
	0x0369C978 LDR X0, [X0 + 0x220]
	0x0369C97C BL 0x1C16CF4
	0x0369C980 ADRP X0, 0xA9A000
	0x0369C984 LDR X0, [X0 + 0xB08]
	0x0369C988 BL 0x1C16CF4
	0x0369C98C ADRP X0, 0xA9E000
	0x0369C990 LDR X0, [X0 + 0x228]
	0x0369C994 BL 0x1C16CF4
	0x0369C998 ADRP X0, 0xA80000
	0x0369C99C LDR X0, [X0 + 0x4C8]
	0x0369C9A0 BL 0x1C16CF4
	0x0369C9A4 MOVZ W8, 0x1
	0x0369C9A8 STRB W8, [X21 + 0x8BA]
	0x0369C9AC MOV X0, X19
	0x0369C9B0 MOV X1, X31
	0x0369C9B4 BL 0x32277A8
	0x0369C9B8 TBNZ X0, 0x0, 0x369CAE4
	0x0369C9BC ADRP X8, 0xAA1000
	0x0369C9C0 LDR X8, [X8 + 0x6E8]
	0x0369C9C4 LDR X0, [X8]
	0x0369C9C8 LDR W8, [X0 + 0xE0]
	0x0369C9CC CBNZ W8, 0x369C9D4
	0x0369C9D0 BL 0x1C16DFC
	0x0369C9D4 MOV X0, X19
	0x0369C9D8 MOV X1, X31
	0x0369C9DC BL 0x366B094
	0x0369C9E0 TBNZ X0, 0x0, 0x369CAE4
	0x0369C9E4 CBZ X19, 0x369CB40
	0x0369C9E8 ADRP X21, 0xA9A000
	0x0369C9EC LDR X21, [X21 + 0xB08]
	0x0369C9F0 MOV X0, X19

ISIL:
	001 Subtract X31, X31, 192
	002 Move [X31+128], X30
	003 Move [X31+136], X25
	004 Move [X31+144], X24
	005 Move [X31+152], X23
	006 Move [X31+160], X22
	007 Move [X31+168], X21
	008 Move [X31+176], X20
	009 Move [X31+184], X19
	010 Move X25, 0xD45000
	011 Move X24, 0xA87000
	012 Move W8, [X25+2222]
	013 Move X24, [X24+3488]
	014 Move X19, X4
	015 Move W20, W3
	016 Move W21, W2
	017 Move X23, X1
	018 Move X22, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {37}
	023 Move X0, 0xA87000
	024 Move X0, [X0+3496]
	025 Call 0x1C17CF4
	026 Move X0, 0xAA3000
	027 Move X0, [X0+1888]
	028 Call 0x1C17CF4
	029 Move X0, 0xA87000
	030 Move X0, [X0+3512]
	031 Call 0x1C17CF4
	032 Move X0, 0xA87000
	033 Move X0, [X0+3488]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X25+2222], W8
	037 Move X0, [X24]
	038 NotImplemented "Instruction MOVI not yet implemented."
	039 Move [X31+112], X31
	040 Move [X31+64], V0
	041 Move [X31+72], V0
	042 Move [X31+6], V0
	043 Move [X31+32], V0
	044 Move [X31+40], V0
	045 Move [X31+88], X23
	046 Move [X31+96], W21
	047 Move [X31+80], W20
	048 Move [X31+64], X19
	049 Move [X31+72], X22
	050 Move X21, 0xA87000
	051 Move X19, 0xAA3000
	052 Move X20, 0xA87000
	053 Move W8, [X0+224]
	054 Move X21, [X21+3496]
	055 Move X19, [X19+1888]
	056 Move X20, [X20+3512]
	057 Compare W8, 0
	058 JumpIfNotEqual {60}
	059 Call 0x1C17DFC
	060 Move X0, [X21]
	061 Add X8, X31, 8
	062 Call AsyncTaskMethodBuilder`1<Int32>.Create
	063 NotImplemented "Instruction LDUR not yet implemented."
	064 Move X9, [X31+24]
	065 Move X2, [X19]
	066 Add X8, X31, 32
	067 Or X19, X8, 15
	068 Move TEMP, 0
	069 Not TEMP
	070 Move W10, TEMP
	071 Add X1, X31, 32
	072 Move X0, X19
	073 Move [X31+40], V0
	074 Move [X31+56], X9
	075 Move [X31+32], W10
	076 Call AsyncTaskMethodBuilder`1<Int32>.Start, X0, X1
	077 Move X1, [X20]
	078 Move X0, X19
	079 Call AsyncTaskMethodBuilder`1<Int32>.get_Task, X0
	080 Move X20, [X31+176]
	081 Move X19, [X31+184]
	082 Move X22, [X31+160]
	083 Move X21, [X31+168]
	084 Move X24, [X31+144]
	085 Move X23, [X31+152]
	086 Move X30, [X31+128]
	087 Move X25, [X31+136]
	088 Add X31, X31, 192
	089 Return X0

