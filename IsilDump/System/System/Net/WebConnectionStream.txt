Type: System.Net.WebConnectionStream

Method: System.Void .ctor(System.Net.WebConnection cnc, System.Net.WebOperation operation)

Disassembly:
	0x036AE49C LDR X0, [X0 + 0x308]
	0x036AE4A0 BL 0x1C16D08
	0x036AE4A4 MOV X1, X0
	0x036AE4A8 MOV X0, X19
	0x036AE4AC MOV X2, X31
	0x036AE4B0 BL 0x3379A44
	0x036AE4B4 ADRP X0, 0xA91000
	0x036AE4B8 LDR X0, [X0 + 0x100]
	0x036AE4BC BL 0x1C16D08
	0x036AE4C0 MOV X1, X0
	0x036AE4C4 MOV X0, X19
	0x036AE4C8 BL 0x1C16DEC
	0x036AE4CC LDR X0, [X0 + 0x10]
	0x036AE4D0 RET
	0x036AE4D4 LDR X0, [X0 + 0x18]
	0x036AE4D8 RET
	0x036AE4DC LDRB W0, [X0 + 0x2C]
	0x036AE4E0 RET
	0x036AE4E4 AND W8, W1, 0x1
	0x036AE4E8 STRB W8, [X0 + 0x2C]
	0x036AE4EC RET
	0x036AE4F0 LDRB W0, [X0 + 0x2D]
	0x036AE4F4 RET
	0x036AE4F8 AND W8, W1, 0x1
	0x036AE4FC STRB W8, [X0 + 0x2D]
	0x036AE500 RET
	0x036AE504 LDR W0, [X0 + 0x30]
	0x036AE508 RET
	0x036AE50C STR W1, [X0 + 0x30]
	0x036AE510 RET
	0x036AE514 STR X1, [X0 + 0x38]
	0x036AE518 RET
	0x036AE51C LDR X0, [X0 + 0x40]
	0x036AE520 RET
	0x036AE524 STR X1, [X0 + 0x40]
	0x036AE528 RET
	0x036AE52C LDR X0, [X0 + 0x48]
	0x036AE530 RET
	0x036AE534 STR X1, [X0 + 0x48]
	0x036AE538 RET
	0x036AE53C LDR X0, [X0 + 0x50]
	0x036AE540 RET
	0x036AE544 STR X1, [X0 + 0x50]
	0x036AE548 RET
	0x036AE54C LDR X0, [X0 + 0x58]
	0x036AE550 RET
	0x036AE554 STR X1, [X0 + 0x58]
	0x036AE558 RET

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0xD33000
	009 Move X24, 0xA4C000
	010 Move X23, 0xA75000
	011 Move W8, [X22+2365]
	012 Move X24, [X24+3264]
	013 Move X23, [X23+3344]
	014 Move X20, X2
	015 Move X21, X1
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {29}
	021 Move X0, 0xA4C000
	022 Move X0, [X0+3264]
	023 Call 0x1C17CF4
	024 Move X0, 0xA75000
	025 Move X0, [X0+3344]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X22+2365], W8
	029 Move X0, [X24]
	030 Call 0x1C17F10
	031 Move X1, X31
	032 Move X22, X0
	033 Call Object..ctor, X0
	034 Move [X19+48], X22
	035 Move X0, [X23]
	036 Move W8, [X0+224]
	037 Compare W8, 0
	038 JumpIfNotEqual {40}
	039 Call 0x1C17DFC
	040 Move X0, X19
	041 Move X1, X31
	042 Call Stream..ctor, X0
	043 Move [X19+72], X21
	044 Move [X19+80], X20
	045 Compare X20, 0
	046 JumpIfEqual {62}
	047 Move X8, [X20+16]
	048 Move [X19+64], X8
	049 Compare X8, 0
	050 JumpIfEqual {62}
	051 Move W8, [X8+288]
	052 Move X22, [X31+32]
	053 Move X21, [X31+40]
	054 Move X24, [X31+16]
	055 Move X23, [X31+24]
	056 Move [X19+56], W8
	057 Move [X19+60], W8
	058 Move X20, [X31+48]
	059 Move X19, [X31+56]
	060 Move X30, [X31+64]
	061 Return 
	062 Call 0x1C17F20

Method: System.Net.HttpWebRequest get_Request()

Disassembly:
	0x036AE55C SUB X31, X31, 0xA0
	0x036AE560 STP X30, X23, [X31 + 0x70]

ISIL:
	001 Move X0, [X0+64]
	002 Return X0

Method: System.Net.WebConnection get_Connection()

Disassembly:
	0x036AE564 STP X22, X21, [X31 + 0x80]
	0x036AE568 STP X20, X19, [X31 + 0x90]

ISIL:
	001 Move X0, [X0+72]
	002 Return X0

Method: System.Net.WebOperation get_Operation()

Disassembly:
	0x036AE56C ADRP X23, 0xD32000
	0x036AE570 ADRP X22, 0xA91000

ISIL:
	001 Move X0, [X0+80]
	002 Return X0

Method: System.Net.ServicePoint get_ServicePoint()

Disassembly:
	0x036AE574 LDRB W8, [X23 + 0x945]
	0x036AE578 LDR X22, [X22 + 0x108]
	0x036AE57C MOV X19, X2
	0x036AE580 MOV X20, X1
	0x036AE584 MOV X21, X0
	0x036AE588 TBNZ X8, 0x0, 0x36AE5C4
	0x036AE58C ADRP X0, 0xA91000

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+72]
	003 Compare X8, 0
	004 JumpIfEqual {8}
	005 Move X0, [X8+72]
	006 Move X30, [X31+16]
	007 Return X0
	008 Call 0x1C17F20

Method: System.Boolean get_CanTimeout()

Disassembly:
	0x036AE590 LDR X0, [X0 + 0x110]
	0x036AE594 BL 0x1C16CF4

ISIL:
	001 Move W0, 1
	002 Return X0

Method: System.Int32 get_ReadTimeout()

Disassembly:
	0x036AE598 ADRP X0, 0xA91000
	0x036AE59C LDR X0, [X0 + 0x118]

ISIL:
	001 Move W0, [X0+56]
	002 Return X0

Method: System.Void set_ReadTimeout(System.Int32 value)

Disassembly:
	0x036AE5A0 BL 0x1C16CF4
	0x036AE5A4 ADRP X0, 0xA91000
	0x036AE5A8 LDR X0, [X0 + 0x120]
	0x036AE5AC BL 0x1C16CF4
	0x036AE5B0 ADRP X0, 0xA91000
	0x036AE5B4 LDR X0, [X0 + 0x108]
	0x036AE5B8 BL 0x1C16CF4
	0x036AE5BC MOVZ W8, 0x1
	0x036AE5C0 STRB W8, [X23 + 0x945]
	0x036AE5C4 LDR X0, [X22]
	0x036AE5C8 MOVI V0.2D, 0x0
	0x036AE5CC STR X31, [X31 + 0x60]
	0x036AE5D0 STP V0, V0, [X31 + 0x20]
	0x036AE5D4 STP V0, V0, [X31 + 0x40]
	0x036AE5D8 STP V0, V0, [X31]
	0x036AE5DC STP X20, X21, [X31 + 0x28]
	0x036AE5E0 STR X19, [X31 + 0x20]
	0x036AE5E4 ADRP X19, 0xA91000
	0x036AE5E8 ADRP X21, 0xA91000
	0x036AE5EC ADRP X20, 0xA91000
	0x036AE5F0 LDR W8, [X0 + 0xE0]
	0x036AE5F4 LDR X19, [X19 + 0x110]
	0x036AE5F8 LDR X21, [X21 + 0x118]
	0x036AE5FC LDR X20, [X20 + 0x120]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Add W31, W1, 2
	004 Move [X0+56], W1
	005 Move X30, [X31+16]
	006 Move X19, [X31+24]
	007 Return 
	008 Move X0, 0xA4E000
	009 Move X0, [X0+1888]
	010 Call 0x1C17D08
	011 Call 0x1C17F10
	012 Move X19, X0
	013 Move X0, 0xA50000
	014 Move X0, [X0+3784]
	015 Call 0x1C17D08
	016 Move X1, X0
	017 Move X0, X19
	018 Move X2, X31
	019 Call ArgumentOutOfRangeException..ctor, X0, X1
	020 Move X0, 0xA92000
	021 Move X0, [X0+144]
	022 Call 0x1C17D08
	023 Move X1, X0
	024 Move X0, X19
	025 Call 0x1C17DEC

Method: System.Int32 get_WriteTimeout()

Disassembly:
	0x036AE600 CBNZ W8, 0x36AE608
	0x036AE604 BL 0x1C16DFC

ISIL:
	001 Move W0, [X0+60]
	002 Return X0

Method: System.Void set_WriteTimeout(System.Int32 value)

Disassembly:
	0x036AE608 LDR X0, [X19]
	0x036AE60C ADD X8, X31, 0x0
	0x036AE610 ORR X19, X8, 0xF
	0x036AE614 MOV X8, X19
	0x036AE618 BL 0x24DC190
	0x036AE61C LDR X2, [X21]
	0x036AE620 MOVN W8, 0x0
	0x036AE624 ADD X1, X31, 0x0
	0x036AE628 MOV X0, X19
	0x036AE62C STR W8, [X31]
	0x036AE630 BL 0x1FA9AD8
	0x036AE634 LDR X1, [X20]
	0x036AE638 MOV X0, X19
	0x036AE63C BL 0x24DC1A4
	0x036AE640 LDP X20, X19, [X31 + 0x90]
	0x036AE644 LDP X22, X21, [X31 + 0x80]
	0x036AE648 LDP X30, X23, [X31 + 0x70]
	0x036AE64C ADD X31, X31, 0xA0
	0x036AE650 RET
	0x036AE654 STP X30, X21, [X31 - 0x20]!
	0x036AE658 STP X20, X19, [X31 + 0x10]
	0x036AE65C ADRP X21, 0xD32000
	0x036AE660 LDRB W8, [X21 + 0x946]
	0x036AE664 MOV W19, W2

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Add W31, W1, 2
	004 Move [X0+60], W1
	005 Move X30, [X31+16]
	006 Move X19, [X31+24]
	007 Return 
	008 Move X0, 0xA4E000
	009 Move X0, [X0+1888]
	010 Call 0x1C17D08
	011 Call 0x1C17F10
	012 Move X19, X0
	013 Move X0, 0xA50000
	014 Move X0, [X0+3784]
	015 Call 0x1C17D08
	016 Move X1, X0
	017 Move X0, X19
	018 Move X2, X31
	019 Call ArgumentOutOfRangeException..ctor, X0, X1
	020 Move X0, 0xA92000
	021 Move X0, [X0+152]
	022 Call 0x1C17D08
	023 Move X1, X0
	024 Move X0, X19
	025 Call 0x1C17DEC

Method: System.Exception GetException(System.Exception e)

Disassembly:
	0x036AE668 MOV X20, X1
	0x036AE66C TBNZ X8, 0x0, 0x36AE684
	0x036AE670 ADRP X0, 0xA45000
	0x036AE674 LDR X0, [X0 + 0x618]
	0x036AE678 BL 0x1C16CF4
	0x036AE67C MOVZ W8, 0x1
	0x036AE680 STRB W8, [X21 + 0x946]
	0x036AE684 CMP W19, 0x1
	0x036AE688 B.LT 0x36AE6D8
	0x036AE68C ADRP X21, 0xA45000
	0x036AE690 LDR X21, [X21 + 0x618]
	0x036AE694 LDR X0, [X21]
	0x036AE698 MOV W1, W19
	0x036AE69C BL 0x1C16D6C
	0x036AE6A0 CBZ X20, 0x36AE6E4
	0x036AE6A4 LDR X8, [X20]
	0x036AE6A8 MOV X1, X0
	0x036AE6AC MOV X0, X20
	0x036AE6B0 MOV W2, W31
	0x036AE6B4 LDR X9, [X8 + 0x358]
	0x036AE6B8 LDR X4, [X8 + 0x360]
	0x036AE6BC MOV W3, W19
	0x036AE6C0 BLR X9
	0x036AE6C4 CMP W0, 0x1
	0x036AE6C8 B.LT 0x36AE6D8
	0x036AE6CC SUB W19, W19, W0
	0x036AE6D0 CMP W19, 0x0
	0x036AE6D4 B.GT 0x36AE694
	0x036AE6D8 LDP X20, X19, [X31 + 0x10]
	0x036AE6DC LDP X30, X21, [X31], #0x20
	0x036AE6E0 RET
	0x036AE6E4 BL 0x1C16F20
	0x036AE6E8 SUB X31, X31, 0xB0
	0x036AE6EC STP X29, X30, [X31 + 0x50]
	0x036AE6F0 STP X28, X27, [X31 + 0x60]
	0x036AE6F4 STP X26, X25, [X31 + 0x70]
	0x036AE6F8 STP X24, X23, [X31 + 0x80]
	0x036AE6FC STP X22, X21, [X31 + 0x90]
	0x036AE700 STP X20, X19, [X31 + 0xA0]
	0x036AE704 ADRP X20, 0xD32000
	0x036AE708 LDRB W8, [X20 + 0x947]
	0x036AE70C MOV X19, X0
	0x036AE710 TBNZ X8, 0x0, 0x36AE890
	0x036AE714 ADRP X0, 0xA91000
	0x036AE718 LDR X0, [X0 + 0x128]
	0x036AE71C BL 0x1C16CF4
	0x036AE720 ADRP X0, 0xA91000
	0x036AE724 LDR X0, [X0 + 0x130]
	0x036AE728 BL 0x1C16CF4
	0x036AE72C ADRP X0, 0xA48000
	0x036AE730 LDR X0, [X0 + 0x280]
	0x036AE734 BL 0x1C16CF4
	0x036AE738 ADRP X0, 0xA90000
	0x036AE73C LDR X0, [X0 + 0x598]
	0x036AE740 BL 0x1C16CF4
	0x036AE744 ADRP X0, 0xA91000
	0x036AE748 LDR X0, [X0 + 0x138]
	0x036AE74C BL 0x1C16CF4
	0x036AE750 ADRP X0, 0xA91000
	0x036AE754 LDR X0, [X0 + 0x140]
	0x036AE758 BL 0x1C16CF4
	0x036AE75C ADRP X0, 0xA91000
	0x036AE760 LDR X0, [X0 + 0x148]
	0x036AE764 BL 0x1C16CF4
	0x036AE768 ADRP X0, 0xA8C000
	0x036AE76C LDR X0, [X0 + 0x168]
	0x036AE770 BL 0x1C16CF4
	0x036AE774 ADRP X0, 0xA6D000
	0x036AE778 LDR X0, [X0 + 0xB88]
	0x036AE77C BL 0x1C16CF4
	0x036AE780 ADRP X0, 0xA90000
	0x036AE784 LDR X0, [X0 + 0x120]
	0x036AE788 BL 0x1C16CF4
	0x036AE78C ADRP X0, 0xA45000
	0x036AE790 LDR X0, [X0 + 0x8F0]
	0x036AE794 BL 0x1C16CF4
	0x036AE798 ADRP X0, 0xA45000
	0x036AE79C LDR X0, [X0 + 0xAC8]
	0x036AE7A0 BL 0x1C16CF4
	0x036AE7A4 ADRP X0, 0xA91000
	0x036AE7A8 LDR X0, [X0 + 0x150]
	0x036AE7AC BL 0x1C16CF4
	0x036AE7B0 ADRP X0, 0xA8C000
	0x036AE7B4 LDR X0, [X0 + 0xD0]
	0x036AE7B8 BL 0x1C16CF4
	0x036AE7BC ADRP X0, 0xA91000
	0x036AE7C0 LDR X0, [X0 + 0x158]
	0x036AE7C4 BL 0x1C16CF4
	0x036AE7C8 ADRP X0, 0xA8C000
	0x036AE7CC LDR X0, [X0 + 0xB88]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xD33000
	007 Move X21, 0xA6E000
	008 Move W8, [X22+2366]
	009 Move X21, [X21+2952]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {30}
	016 Move X0, 0xA6E000
	017 Move X0, [X0+2952]
	018 Call 0x1C17CF4
	019 Move X0, 0xA6F000
	020 Move X0, [X0+1208]
	021 Call 0x1C17CF4
	022 Move X0, 0xA4E000
	023 Move X0, [X0+2216]
	024 Call 0x1C17CF4
	025 Move X0, 0xA71000
	026 Move X0, [X0+816]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X22+2366], W8
	030 Move X0, [X21]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {35}
	034 Call 0x1C17DFC
	035 Move X0, X19
	036 Move X1, X31
	037 Call HttpWebRequest.FlattenException, X0
	038 Move X19, X0
	039 Compare X0, 0
	040 JumpIfEqual {52}
	041 Move X8, 0xA71000
	042 Move X8, [X8+816]
	043 Move X9, [X19]
	044 Move X8, [X8]
	045 Move W11, [X9+304]
	046 Move W10, [X8+304]
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Move X9, [X9+200]
	049 Add X9, X9, X10
	050 NotImplemented "Instruction LDUR not yet implemented."
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Move X0, [X20+80]
	053 Compare X0, 0
	054 JumpIfEqual {102}
	055 Call WebOperation.get_Aborted, X0
	056 Move TEMP, X0
	057 And TEMP, TEMP, 1
	058 Compare TEMP, 1
	059 JumpIfNotEqual {73}
	060 Move X0, [X21]
	061 Move W8, [X0+224]
	062 Compare W8, 0
	063 JumpIfNotEqual {65}
	064 Call 0x1C17DFC
	065 Move X20, [X31+32]
	066 Move X19, [X31+40]
	067 Move X22, [X31+16]
	068 Move X21, [X31+24]
	069 Move X0, X31
	070 Move X30, [X31+48]
	071 Call HttpWebRequest.CreateRequestAbortedException
	072 Return X0
	073 Compare X19, 0
	074 JumpIfEqual {95}
	075 Move X9, 0xA4E000
	076 Move X9, [X9+2216]
	077 Move X8, [X19]
	078 Move X10, [X9]
	079 Move W9, [X8+304]
	080 Move W11, [X10+304]
	081 NotImplemented "Instruction CMP not yet implemented."
	082 Move X12, [X8+200]
	083 Add X11, X12, X11
	084 NotImplemented "Instruction LDUR not yet implemented."
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Move X10, 0xA6F000
	087 Move X10, [X10+1208]
	088 Move X10, [X10]
	089 Move W11, [X10+304]
	090 NotImplemented "Instruction CMP not yet implemented."
	091 Move X8, [X8+200]
	092 Add X8, X8, X11
	093 NotImplemented "Instruction LDUR not yet implemented."
	094 NotImplemented "Instruction CMP not yet implemented."
	095 Move X0, X19
	096 Move X20, [X31+32]
	097 Move X19, [X31+40]
	098 Move X22, [X31+16]
	099 Move X21, [X31+24]
	100 Move X30, [X31+48]
	101 Return X0
	102 Call 0x1C17F20

Method: System.Boolean TryReadFromBufferedContent(System.Byte[] buffer, System.Int32 offset, System.Int32 count, out System.Int32 result)

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Int32 Read(System.Byte[] buffer, System.Int32 offset, System.Int32 count)

Disassembly:
	0x036AE7D0 BL 0x1C16CF4
	0x036AE7D4 ADRP X0, 0xA75000
	0x036AE7D8 LDR X0, [X0 + 0xB78]
	0x036AE7DC BL 0x1C16CF4
	0x036AE7E0 ADRP X0, 0xA75000
	0x036AE7E4 LDR X0, [X0 + 0xA50]
	0x036AE7E8 BL 0x1C16CF4
	0x036AE7EC ADRP X0, 0xA91000
	0x036AE7F0 LDR X0, [X0 + 0x160]
	0x036AE7F4 BL 0x1C16CF4
	0x036AE7F8 ADRP X0, 0xA83000
	0x036AE7FC LDR X0, [X0 + 0x358]
	0x036AE800 BL 0x1C16CF4
	0x036AE804 ADRP X0, 0xA8C000
	0x036AE808 LDR X0, [X0 + 0x218]
	0x036AE80C BL 0x1C16CF4
	0x036AE810 ADRP X0, 0xA91000
	0x036AE814 LDR X0, [X0 + 0x168]
	0x036AE818 BL 0x1C16CF4
	0x036AE81C ADRP X0, 0xA85000
	0x036AE820 LDR X0, [X0 + 0xB48]
	0x036AE824 BL 0x1C16CF4
	0x036AE828 ADRP X0, 0xA91000
	0x036AE82C LDR X0, [X0 + 0x170]
	0x036AE830 BL 0x1C16CF4
	0x036AE834 ADRP X0, 0xA46000
	0x036AE838 LDR X0, [X0 + 0xEC8]
	0x036AE83C BL 0x1C16CF4
	0x036AE840 ADRP X0, 0xA4E000
	0x036AE844 LDR X0, [X0 + 0x988]
	0x036AE848 BL 0x1C16CF4
	0x036AE84C ADRP X0, 0xA91000
	0x036AE850 LDR X0, [X0 + 0x178]
	0x036AE854 BL 0x1C16CF4
	0x036AE858 ADRP X0, 0xA8C000
	0x036AE85C LDR X0, [X0 + 0xAB0]
	0x036AE860 BL 0x1C16CF4
	0x036AE864 ADRP X0, 0xA8C000
	0x036AE868 LDR X0, [X0 + 0x158]
	0x036AE86C BL 0x1C16CF4
	0x036AE870 ADRP X0, 0xA91000
	0x036AE874 LDR X0, [X0 + 0x180]
	0x036AE878 BL 0x1C16CF4
	0x036AE87C ADRP X0, 0xA8C000
	0x036AE880 LDR X0, [X0 + 0xAC8]
	0x036AE884 BL 0x1C16CF4
	0x036AE888 MOVZ W8, 0x1
	0x036AE88C STRB W8, [X20 + 0x947]
	0x036AE890 STR W31, [X31 + 0x4C]
	0x036AE894 STP X31, X31, [X31 + 0x30]
	0x036AE898 STP X31, X31, [X31 + 0x20]
	0x036AE89C ADRP X25, 0xA48000
	0x036AE8A0 LDR W8, [X19]
	0x036AE8A4 LDR X20, [X19 + 0x20]
	0x036AE8A8 LDR X25, [X25 + 0x280]
	0x036AE8AC CBZ W8, 0x36AE8D0
	0x036AE8B0 CMP W8, 0x1
	0x036AE8B4 B.NE 0x36AE8E8
	0x036AE8B8 LDR V0, [X19 + 0x5]
	0x036AE8BC MOVN W8, 0x0
	0x036AE8C0 STR V0, [X31 + 0x2]
	0x036AE8C4 STP X31, X31, [X19 + 0x50]
	0x036AE8C8 STR W8, [X19]
	0x036AE8CC B 0x36AEEB8
	0x036AE8D0 LDR V0, [X19 + 0x4]
	0x036AE8D4 MOVN W8, 0x0
	0x036AE8D8 STR V0, [X31 + 0x3]
	0x036AE8DC STP X31, X31, [X19 + 0x40]
	0x036AE8E0 STR W8, [X19]
	0x036AE8E4 B 0x36AEE64
	0x036AE8E8 ADRP X8, 0xA45000
	0x036AE8EC LDR X8, [X8 + 0x8F0]
	0x036AE8F0 LDR X0, [X8]
	0x036AE8F4 BL 0x1C16F10
	0x036AE8F8 MOV X21, X0
	0x036AE8FC MOV X1, X31
	0x036AE900 BL 0x3231AC4
	0x036AE904 CBZ X21, 0x36AF14C
	0x036AE908 ADRP X8, 0xA91000
	0x036AE90C LDR X8, [X8 + 0x168]
	0x036AE910 LDR X1, [X8]
	0x036AE914 MOV X0, X21
	0x036AE918 MOV X2, X31
	0x036AE91C BL 0x32333E0
	0x036AE920 CBZ X20, 0x36AF150
	0x036AE924 LDR X8, [X20 + 0x10]
	0x036AE928 CBZ X8, 0x36AF154
	0x036AE92C LDR X0, [X8 + 0x28]
	0x036AE930 CBZ X0, 0x36AF158
	0x036AE934 MOV X1, X31
	0x036AE938 BL 0x361C394
	0x036AE93C MOV X1, X0
	0x036AE940 MOV X0, X21
	0x036AE944 MOV X2, X31
	0x036AE948 BL 0x32333E0
	0x036AE94C MOVZ W1, 0x3A
	0x036AE950 MOV X0, X21
	0x036AE954 MOV X2, X31
	0x036AE958 BL 0x3233D30
	0x036AE95C LDR X8, [X20 + 0x10]
	0x036AE960 CBZ X8, 0x36AF15C
	0x036AE964 LDR X0, [X8 + 0x28]
	0x036AE968 CBZ X0, 0x36AF160
	0x036AE96C MOV X1, X31
	0x036AE970 BL 0x361CC2C
	0x036AE974 MOV W1, W0
	0x036AE978 MOV X0, X21
	0x036AE97C MOV X2, X31
	0x036AE980 BL 0x3233E30
	0x036AE984 ADRP X8, 0xA91000
	0x036AE988 LDR X8, [X8 + 0x158]
	0x036AE98C LDR X1, [X8]
	0x036AE990 MOV X0, X21
	0x036AE994 MOV X2, X31
	0x036AE998 BL 0x32333E0
	0x036AE99C LDR X8, [X20 + 0x10]
	0x036AE9A0 CBZ X8, 0x36AF164
	0x036AE9A4 ADRP X23, 0xA8C000
	0x036AE9A8 LDR X23, [X23 + 0x168]
	0x036AE9AC LDR X22, [X8 + 0xA8]
	0x036AE9B0 LDR X0, [X23]
	0x036AE9B4 LDR W9, [X0 + 0xE0]
	0x036AE9B8 CBNZ W9, 0x36AE9C4
	0x036AE9BC BL 0x1C16DFC
	0x036AE9C0 LDR X0, [X23]
	0x036AE9C4 LDR X8, [X0 + 0xB8]
	0x036AE9C8 LDR X1, [X8 + 0x10]
	0x036AE9CC MOV X0, X22
	0x036AE9D0 MOV X2, X31
	0x036AE9D4 BL 0x339C580
	0x036AE9D8 TBZ X0, 0x0, 0x36AE9F8
	0x036AE9DC ADRP X8, 0xA91000
	0x036AE9E0 LDR X8, [X8 + 0x170]
	0x036AE9E4 LDR X1, [X8]
	0x036AE9E8 MOV X0, X21
	0x036AE9EC MOV X2, X31
	0x036AE9F0 BL 0x32333E0
	0x036AE9F4 B 0x36AEA10
	0x036AE9F8 ADRP X8, 0xA75000
	0x036AE9FC LDR X8, [X8 + 0xB78]
	0x036AEA00 LDR X1, [X8]
	0x036AEA04 MOV X0, X21
	0x036AEA08 MOV X2, X31
	0x036AEA0C BL 0x32333E0
	0x036AEA10 ADRP X8, 0xA91000
	0x036AEA14 LDR X8, [X8 + 0x180]
	0x036AEA18 LDR X1, [X8]
	0x036AEA1C MOV X0, X21
	0x036AEA20 MOV X2, X31
	0x036AEA24 BL 0x32333E0
	0x036AEA28 LDR X8, [X20 + 0x10]
	0x036AEA2C CBZ X8, 0x36AF168
	0x036AEA30 LDR X0, [X8 + 0x28]
	0x036AEA34 CBZ X0, 0x36AF16C
	0x036AEA38 MOV X1, X31
	0x036AEA3C BL 0x361BD04
	0x036AEA40 MOV X1, X0
	0x036AEA44 MOV X0, X21
	0x036AEA48 MOV X2, X31
	0x036AEA4C BL 0x32333E0
	0x036AEA50 LDR X0, [X20 + 0x10]
	0x036AEA54 LDR X26, [X20 + 0x40]
	0x036AEA58 STR X31, [X20 + 0x40]
	0x036AEA5C CBZ X0, 0x36AF170
	0x036AEA60 LDR X8, [X0]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0xD33000
	009 Move W8, [X23+2367]
	010 Move W20, W3
	011 Move W21, W2
	012 Move X22, X1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0xA4E000
	019 Move X0, [X0+2008]
	020 Call 0x1C17CF4
	021 Move X0, 0xA79000
	022 Move X0, [X0+3264]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X23+2367], W8
	026 Move [X31+12], W31
	027 Move X8, [X19]
	028 Move X0, X19
	029 Move X9, [X8+424]
	030 Move X1, [X8+432]
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move TEMP, X0
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfNotEqual {99}
	036 Compare X22, 0
	037 JumpIfEqual {111}
	038 Move TEMP, X21
	039 And TEMP, TEMP, -2147483648
	040 Compare TEMP, -2147483648
	041 JumpIfEqual {123}
	042 Move W8, [X22+24]
	043 Subtract W8, W8, W21
	044 Move TEMP, X20
	045 And TEMP, TEMP, -2147483648
	046 Compare TEMP, -2147483648
	047 JumpIfEqual {130}
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move X8, [X19]
	050 Add X4, X31, 12
	051 Move X0, X19
	052 Move X1, X22
	053 Move X9, [X8+952]
	054 Move X5, [X8+960]
	055 Move W2, W21
	056 Move W3, W20
	057 NotImplemented "Instruction BLR not yet implemented."
	058 Move TEMP, X0
	059 And TEMP, TEMP, 1
	060 Compare TEMP, 1
	061 JumpIfNotEqual {63}
	062 Move W0, [X31+12]
	063 Move X0, [X19+80]
	064 Compare X0, 0
	065 JumpIfEqual {148}
	066 Call WebOperation.ThrowIfClosedOrDisposed, X0
	067 Move X8, 0xA4E000
	068 Move X8, [X8+2008]
	069 Move X0, [X8]
	070 Move W8, [X0+224]
	071 Compare W8, 0
	072 JumpIfNotEqual {74}
	073 Call 0x1C17DFC
	074 Move X0, X31
	075 Call CancellationToken.get_None
	076 Move X8, [X19]
	077 Move X4, X0
	078 Move X9, [X8+728]
	079 Move X5, [X8+736]
	080 Move X0, X19
	081 Move X1, X22
	082 Move W2, W21
	083 Move W3, W20
	084 NotImplemented "Instruction BLR not yet implemented."
	085 Compare X0, 0
	086 JumpIfEqual {149}
	087 Move X8, 0xA79000
	088 Move X8, [X8+3264]
	089 Move X1, [X8]
	090 Call Task`1<Int32>.get_Result, X0
	091 Move X20, [X31+48]
	092 Move X19, [X31+56]
	093 Move X22, [X31+32]
	094 Move X21, [X31+40]
	095 Move X30, [X31+16]
	096 Move X23, [X31+24]
	097 Add X31, X31, 64
	098 Return X0
	099 Move X0, 0xA46000
	100 Move X0, [X0+2880]
	101 Call 0x1C17D08
	102 Call 0x1C17F10
	103 Move X19, X0
	104 Move X0, 0xA92000
	105 Move X0, [X0+160]
	106 Call 0x1C17D08
	107 Move X1, X0
	108 Move X0, X19
	109 Move X2, X31
	110 Call NotSupportedException..ctor, X0, X1
	111 Move X0, 0xA4B000
	112 Move X0, [X0+1320]
	113 Call 0x1C17D08
	114 Call 0x1C17F10
	115 Move X19, X0
	116 Move X0, 0xA71000
	117 Move X0, [X0+3912]
	118 Call 0x1C17D08
	119 Move X1, X0
	120 Move X0, X19
	121 Move X2, X31
	122 Call ArgumentNullException..ctor, X0, X1
	123 Move X0, 0xA4E000
	124 Move X0, [X0+1888]
	125 Call 0x1C17D08
	126 Call 0x1C17F10
	127 Move X19, X0
	128 Move X0, 0xA75000
	129 Move X0, [X0+3472]
	130 Move X0, 0xA4E000
	131 Move X0, [X0+1888]
	132 Call 0x1C17D08
	133 Call 0x1C17F10
	134 Move X19, X0
	135 Move X0, 0xA6E000
	136 Move X0, [X0+1608]
	137 Call 0x1C17D08
	138 Move X1, X0
	139 Move X0, X19
	140 Move X2, X31
	141 Call ArgumentOutOfRangeException..ctor, X0, X1
	142 Move X0, 0xA92000
	143 Move X0, [X0+168]
	144 Call 0x1C17D08
	145 Move X1, X0
	146 Move X0, X19
	147 Call 0x1C17DEC
	148 Call 0x1C17F20
	149 Call 0x1C17F20
	150 Move X20, X0
	151 NotImplemented "Instruction CMP not yet implemented."
	152 Move X0, X20
	153 Call 0x3EB2AD0
	154 Move X20, X0
	155 Move X0, 0xA46000
	156 Move X0, [X0+2000]
	157 Call 0x1C17D08
	158 Move X8, [X20]
	159 Move X1, [X8]
	160 Call 0x1C18270
	161 Move TEMP, X0
	162 And TEMP, TEMP, 1
	163 Compare TEMP, 1
	164 JumpIfNotEqual {171}
	165 Move X20, [X20]
	166 Call 0x3EB2AE0
	167 Move X0, X19
	168 Move X1, X20
	169 Call WebConnectionStream.GetException, X0, X1
	170 Move X19, X0
	171 Move W0, 8
	172 Call 0x3EB2AF0
	173 Move X8, [X20]
	174 Move [X0], X8
	175 Move X1, 0x807000
	176 Add X1, X1, 3672
	177 Move X2, X31
	178 Call 0x3EB2B00
	179 Move X20, X0
	180 Call 0x3EB2AE0
	181 Move X0, X20
	182 Call 0x1D2D690
	183 Call 0x1991590

Method: System.IAsyncResult BeginRead(System.Byte[] buffer, System.Int32 offset, System.Int32 count, System.AsyncCallback cb, System.Object state)

Disassembly:
	0x036AEAC4 MOV X1, X31
	0x036AEAC8 BL 0x322B760
	0x036AEACC CBZ X0, 0x36AF190
	0x036AEAD0 ADRP X8, 0xA75000
	0x036AEAD4 LDR X8, [X8 + 0xA50]
	0x036AEAD8 LDR X1, [X8]
	0x036AEADC MOV X2, X31
	0x036AEAE0 BL 0x322BD1C
	0x036AEAE4 MOV W22, W0
	0x036AEAE8 TBZ X22, 0x0, 0x36AEDC0
	0x036AEAEC ADRP X8, 0xA91000
	0x036AEAF0 LDR X8, [X8 + 0x160]
	0x036AEAF4 LDR X1, [X8]
	0x036AEAF8 MOV X0, X21
	0x036AEAFC MOV X2, X31
	0x036AEB00 BL 0x32333E0
	0x036AEB04 LDR W8, [X20 + 0x28]
	0x036AEB08 ADD W8, W8, 0x1
	0x036AEB0C STR W8, [X20 + 0x28]
	0x036AEB10 B 0x36AEDC0
	0x036AEB14 CBZ X26, 0x36AEDC0
	0x036AEB18 LDR W8, [X20 + 0x30]
	0x036AEB1C CMP W8, 0x197
	0x036AEB20 B.NE 0x36AEDC0
	0x036AEB24 LDR X0, [X20 + 0x10]
	0x036AEB28 CBZ X0, 0x36AF198
	0x036AEB2C LDR X8, [X0]
	0x036AEB30 LDR X1, [X8 + 0x260]
	0x036AEB34 LDR X9, [X8 + 0x258]
	0x036AEB38 BLR X9
	0x036AEB3C MOV X22, X0
	0x036AEB40 CBZ X0, 0x36AF19C
	0x036AEB44 ADRP X10, 0xA90000
	0x036AEB48 LDR X8, [X22]
	0x036AEB4C LDR X10, [X10 + 0x120]
	0x036AEB50 LDRH W9, [X8 + 0x12E]
	0x036AEB54 LDR X1, [X10]
	0x036AEB58 CBZ X9, 0x36AEB7C
	0x036AEB5C LDR X10, [X8 + 0xB0]
	0x036AEB60 ADD X10, X10, 0x8
	0x036AEB64 LDUR X11, [X10 - 0x8]
	0x036AEB68 CMP X11, X1
	0x036AEB6C B.EQ 0x36AEB8C
	0x036AEB70 SUBS X9, X9, 0x1
	0x036AEB74 ADD X10, X10, 0x10
	0x036AEB78 B.NE 0x36AEB64
	0x036AEB7C MOVZ W2, 0x2
	0x036AEB80 MOV X0, X22
	0x036AEB84 BL 0x1C5C788
	0x036AEB88 B 0x36AEB9C
	0x036AEB8C LDR W9, [X10]
	0x036AEB90 ADD W9, W9, 0x2
	0x036AEB94 ADD X8, X8, W9, 0x4, SXTW
	0x036AEB98 ADD X0, X8, 0x138
	0x036AEB9C LDP X8, X1, [X0]
	0x036AEBA0 MOV X0, X22
	0x036AEBA4 BLR X8
	0x036AEBA8 MOVZ W8, 0x1
	0x036AEBAC STRB W8, [X19 + 0x38]
	0x036AEBB0 LDR X8, [X20 + 0x20]
	0x036AEBB4 MOV X22, X0
	0x036AEBB8 CBNZ X8, 0x36AED50
	0x036AEBBC ADRP X8, 0xA45000
	0x036AEBC0 LDR X8, [X8 + 0xAC8]
	0x036AEBC4 LDR X0, [X8]
	0x036AEBC8 MOVZ W1, 0x6
	0x036AEBCC BL 0x1C16D6C
	0x036AEBD0 MOV X23, X0
	0x036AEBD4 LDR X0, [X20 + 0x18]
	0x036AEBD8 CBZ X0, 0x36AF1A8
	0x036AEBDC MOV X1, X31
	0x036AEBE0 BL 0x361CEF0
	0x036AEBE4 CBZ X23, 0x36AF1AC
	0x036AEBE8 LDR W8, [X23 + 0x18]
	0x036AEBEC CBZ W8, 0x36AF1B0
	0x036AEBF0 CMP W8, 0x1
	0x036AEBF4 STR X0, [X23 + 0x20]
	0x036AEBF8 B.EQ 0x36AF1B4
	0x036AEBFC ADRP X8, 0xA85000
	0x036AEC00 LDR X8, [X8 + 0xB48]
	0x036AEC04 LDR X8, [X8]
	0x036AEC08 STR X8, [X23 + 0x28]
	0x036AEC0C LDR X0, [X20 + 0x18]
	0x036AEC10 CBZ X0, 0x36AF1B8
	0x036AEC14 MOV X1, X31
	0x036AEC18 BL 0x361C394
	0x036AEC1C LDR W8, [X23 + 0x18]
	0x036AEC20 CMP W8, 0x2
	0x036AEC24 B.LS 0x36AF1BC
	0x036AEC28 CMP W8, 0x3
	0x036AEC2C STR X0, [X23 + 0x30]
	0x036AEC30 B.EQ 0x36AF1C0
	0x036AEC34 ADRP X8, 0xA4E000
	0x036AEC38 LDR X8, [X8 + 0x988]
	0x036AEC3C LDR X8, [X8]
	0x036AEC40 STR X8, [X23 + 0x38]
	0x036AEC44 LDR X0, [X20 + 0x18]
	0x036AEC48 CBZ X0, 0x36AF1C4
	0x036AEC4C MOV X1, X31
	0x036AEC50 BL 0x361CC2C
	0x036AEC54 STR W0, [X31 + 0x4C]
	0x036AEC58 ADD X0, X31, 0x4C
	0x036AEC5C MOV X1, X31
	0x036AEC60 BL 0x337B6E0
	0x036AEC64 LDR W8, [X23 + 0x18]
	0x036AEC68 CMP W8, 0x4
	0x036AEC6C B.LS 0x36AF1C8
	0x036AEC70 CMP W8, 0x5
	0x036AEC74 STR X0, [X23 + 0x40]
	0x036AEC78 B.EQ 0x36AF1CC
	0x036AEC7C ADRP X8, 0xA46000
	0x036AEC80 LDR X8, [X8 + 0xEC8]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X25, 0xD33000
	010 Move W8, [X25+2368]
	011 Move X19, X5
	012 Move X20, X4
	013 Move W21, W3
	014 Move W22, W2
	015 Move X23, X1
	016 Move X24, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {26}
	021 Move X0, 0xA4E000
	022 Move X0, [X0+2008]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X25+2368], W8
	026 Move X8, [X24]
	027 Move X0, X24
	028 Move X9, [X8+424]
	029 Move X1, [X8+432]
	030 NotImplemented "Instruction BLR not yet implemented."
	031 Move TEMP, X0
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfNotEqual {83}
	035 Move X0, [X24+80]
	036 Compare X0, 0
	037 JumpIfEqual {95}
	038 Call WebOperation.ThrowIfClosedOrDisposed, X0
	039 Compare X23, 0
	040 JumpIfEqual {96}
	041 Move TEMP, X22
	042 And TEMP, TEMP, -2147483648
	043 Compare TEMP, -2147483648
	044 JumpIfEqual {108}
	045 Move W8, [X23+24]
	046 Subtract W8, W8, W22
	047 Move TEMP, X21
	048 And TEMP, TEMP, -2147483648
	049 Compare TEMP, -2147483648
	050 JumpIfEqual {115}
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Move X8, 0xA4E000
	053 Move X8, [X8+2008]
	054 Move X0, [X8]
	055 Move W8, [X0+224]
	056 Compare W8, 0
	057 JumpIfNotEqual {59}
	058 Call 0x1C17DFC
	059 Move X0, X31
	060 Call CancellationToken.get_None
	061 Move X8, [X24]
	062 Move X4, X0
	063 Move X0, X24
	064 Move X1, X23
	065 Move X9, [X8+728]
	066 Move X5, [X8+736]
	067 Move W2, W22
	068 Move W3, W21
	069 NotImplemented "Instruction BLR not yet implemented."
	070 Move X1, X20
	071 Move X2, X19
	072 Move X20, [X31+48]
	073 Move X19, [X31+56]
	074 Move X22, [X31+32]
	075 Move X21, [X31+40]
	076 Move X24, [X31+16]
	077 Move X23, [X31+24]
	078 Move X3, X31
	079 Move X30, [X31+64]
	080 Move X25, [X31+72]
	081 Call TaskToApm.Begin, X0, X1, X2
	082 Return X0
	083 Move X0, 0xA46000
	084 Move X0, [X0+2880]
	085 Call 0x1C17D08
	086 Call 0x1C17F10
	087 Move X19, X0
	088 Move X0, 0xA92000
	089 Move X0, [X0+160]
	090 Call 0x1C17D08
	091 Move X1, X0
	092 Move X0, X19
	093 Move X2, X31
	094 Call NotSupportedException..ctor, X0, X1
	095 Call 0x1C17F20
	096 Move X0, 0xA4B000
	097 Move X0, [X0+1320]
	098 Call 0x1C17D08
	099 Call 0x1C17F10
	100 Move X19, X0
	101 Move X0, 0xA71000
	102 Move X0, [X0+3912]
	103 Call 0x1C17D08
	104 Move X1, X0
	105 Move X0, X19
	106 Move X2, X31
	107 Call ArgumentNullException..ctor, X0, X1
	108 Move X0, 0xA4E000
	109 Move X0, [X0+1888]
	110 Call 0x1C17D08
	111 Call 0x1C17F10
	112 Move X19, X0
	113 Move X0, 0xA75000
	114 Move X0, [X0+3472]
	115 Move X0, 0xA4E000
	116 Move X0, [X0+1888]
	117 Call 0x1C17D08
	118 Call 0x1C17F10
	119 Move X19, X0
	120 Move X0, 0xA6E000
	121 Move X0, [X0+1608]
	122 Call 0x1C17D08
	123 Move X1, X0
	124 Move X0, X19
	125 Move X2, X31
	126 Call ArgumentOutOfRangeException..ctor, X0, X1
	127 Move X0, 0xA92000
	128 Move X0, [X0+176]
	129 Call 0x1C17D08
	130 Move X1, X0
	131 Move X0, X19
	132 Call 0x1C17DEC

Method: System.Int32 EndRead(System.IAsyncResult r)

Disassembly:
	0x036AEC84 LDR X8, [X8]
	0x036AEC88 STR X8, [X23 + 0x48]
	0x036AEC8C MOV X0, X23
	0x036AEC90 MOV X1, X31
	0x036AEC94 BL 0x32278CC
	0x036AEC98 ADRP X8, 0xA8C000
	0x036AEC9C LDR X8, [X8 + 0xD0]
	0x036AECA0 MOV X23, X0
	0x036AECA4 LDR X0, [X8]
	0x036AECA8 LDR W8, [X0 + 0xE0]
	0x036AECAC CBNZ W8, 0x36AECB4
	0x036AECB0 BL 0x1C16DFC
	0x036AECB4 MOV X0, X23
	0x036AECB8 MOV X1, X31
	0x036AECBC BL 0x36833F0
	0x036AECC0 CBZ X0, 0x36AF1D0
	0x036AECC4 ADRP X8, 0xA6D000
	0x036AECC8 LDR X8, [X8 + 0xB88]
	0x036AECCC LDR X9, [X0]
	0x036AECD0 LDR X1, [X8]
	0x036AECD4 LDRB W10, [X9 + 0x130]
	0x036AECD8 LDRB W8, [X1 + 0x130]
	0x036AECDC CMP W10, W8
	0x036AECE0 B.CC 0x36AF1A0
	0x036AECE4 LDR X10, [X9 + 0xC8]
	0x036AECE8 SUB X9, X8, 0x1
	0x036AECEC LDR X10, [X10, X9, LSL #3]
	0x036AECF0 CMP X10, X1
	0x036AECF4 B.NE 0x36AF1A0
	0x036AECF8 STR X0, [X20 + 0x20]
	0x036AECFC LDR X10, [X0]
	0x036AED00 LDRB W11, [X10 + 0x130]
	0x036AED04 CMP W11, W8
	0x036AED08 B.CC 0x36AF1A4
	0x036AED0C LDR X8, [X10 + 0xC8]
	0x036AED10 LDR X8, [X8, X9, LSL #3]
	0x036AED14 CMP X8, X1
	0x036AED18 B.NE 0x36AF1A4
	0x036AED1C ADRP X9, 0xA8C000
	0x036AED20 LDR X8, [X0]
	0x036AED24 LDR X9, [X9 + 0x218]
	0x036AED28 LDR X1, [X9]
	0x036AED2C LDP X9, X2, [X8 + 0x1C8]
	0x036AED30 BLR X9
	0x036AED34 LDR X0, [X20 + 0x20]
	0x036AED38 CBZ X0, 0x36AF1D8
	0x036AED3C LDR X8, [X0]
	0x036AED40 LDR X9, [X8 + 0x238]
	0x036AED44 LDR X2, [X8 + 0x240]
	0x036AED48 MOV X1, X22
	0x036AED4C BLR X9
	0x036AED50 CBZ X22, 0x36AEDC0
	0x036AED54 LDR X8, [X26 + 0x18]
	0x036AED58 CMP W8, 0x1
	0x036AED5C B.LT 0x36AEDC0
	0x036AED60 ADRP X29, 0xA90000
	0x036AED64 LDR X29, [X29 + 0x598]
	0x036AED68 MOV X27, X31
	0x036AED6C AND X8, X8, 0x0
	0x036AED70 ADD X28, X26, 0x20
	0x036AED74 CMP X27, W8, UXTW
	0x036AED78 B.CS 0x36AF18C
	0x036AED7C LDR X0, [X29]
	0x036AED80 LDR X23, [X28, X27, LSL #3]
	0x036AED84 LDR X24, [X20 + 0x20]
	0x036AED88 LDR W8, [X0 + 0xE0]
	0x036AED8C CBNZ W8, 0x36AED94
	0x036AED90 BL 0x1C16DFC
	0x036AED94 MOV X0, X23
	0x036AED98 MOV X1, X24
	0x036AED9C MOV X2, X22
	0x036AEDA0 MOV X3, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xD33000
	006 Move W8, [X21+2369]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xA75000
	014 Move X0, [X0+3520]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+2369], W8
	018 Compare X20, 0
	019 JumpIfEqual {30}
	020 Move X8, 0xA75000
	021 Move X8, [X8+3520]
	022 Move X1, [X8]
	023 Move X0, X20
	024 Call 0x229CB30, X0
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Return X0
	030 Move X0, 0xA4B000
	031 Move X0, [X0+1320]
	032 Call 0x1C17D08
	033 Call 0x1C17F10
	034 Move X19, X0
	035 Move X0, 0xA73000
	036 Move X0, [X0+936]
	037 Call 0x1C17D08
	038 Move X1, X0
	039 Move X0, X19
	040 Move X2, X31
	041 Call ArgumentNullException..ctor, X0, X1
	042 Move X0, 0xA92000
	043 Move X0, [X0+184]
	044 Call 0x1C17D08
	045 Move X1, X0
	046 Move X0, X19
	047 Call 0x1C17DEC
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move X20, X0
	050 Move X0, X20
	051 Call 0x3EB2AD0
	052 Move X20, X0
	053 Move X0, 0xA46000
	054 Move X0, [X0+2000]
	055 Call 0x1C17D08
	056 Move X8, [X20]
	057 Move X1, [X8]
	058 Call 0x1C18270
	059 Move TEMP, X0
	060 And TEMP, TEMP, 1
	061 Compare TEMP, 1
	062 JumpIfNotEqual {69}
	063 Move X20, [X20]
	064 Call 0x3EB2AE0
	065 Move X0, X19
	066 Move X1, X20
	067 Call WebConnectionStream.GetException, X0, X1
	068 Move X19, X0
	069 Move W0, 8
	070 Call 0x3EB2AF0
	071 Move X8, [X20]
	072 Move [X0], X8
	073 Move X1, 0x807000
	074 Add X1, X1, 3672
	075 Move X2, X31
	076 Call 0x3EB2B00
	077 Move X20, X0
	078 Call 0x3EB2AE0
	079 Move X0, X20
	080 Call 0x1D2D690
	081 Call 0x1991590

Method: System.IAsyncResult BeginWrite(System.Byte[] buffer, System.Int32 offset, System.Int32 count, System.AsyncCallback cb, System.Object state)

Disassembly:
	0x036AEDA4 BL 0x3696ECC
	0x036AEDA8 MOV X23, X0
	0x036AEDAC CBNZ X0, 0x36AF098
	0x036AEDB0 LDR W8, [X26 + 0x18]
	0x036AEDB4 ADD X27, X27, 0x1
	0x036AEDB8 CMP X27, W8, SXTW
	0x036AEDBC B.LT 0x36AED74
	0x036AEDC0 ADRP X8, 0xA83000
	0x036AEDC4 LDR X8, [X8 + 0x358]
	0x036AEDC8 LDR X1, [X8]
	0x036AEDCC MOV X0, X21
	0x036AEDD0 MOV X2, X31
	0x036AEDD4 BL 0x32333E0
	0x036AEDD8 STR W31, [X20 + 0x30]
	0x036AEDDC MOV X0, X31
	0x036AEDE0 BL 0x3242BB4
	0x036AEDE4 LDR X8, [X21]
	0x036AEDE8 MOV X22, X0
	0x036AEDEC LDP X9, X1, [X8 + 0x168]
	0x036AEDF0 MOV X0, X21
	0x036AEDF4 BLR X9
	0x036AEDF8 MOV X1, X0
	0x036AEDFC CBZ X22, 0x36AF178
	0x036AEE00 LDR X8, [X22]
	0x036AEE04 LDR X9, [X8 + 0x268]
	0x036AEE08 LDR X2, [X8 + 0x270]
	0x036AEE0C MOV X0, X22
	0x036AEE10 BLR X9
	0x036AEE14 MOV X1, X0
	0x036AEE18 CBZ X1, 0x36AF17C
	0x036AEE1C LDR X0, [X19 + 0x28]
	0x036AEE20 CBZ X0, 0x36AF180
	0x036AEE24 LDR X8, [X0]
	0x036AEE28 LDR X4, [X19 + 0x30]
	0x036AEE2C LDR W3, [X1 + 0x18]
	0x036AEE30 LDR X9, [X8 + 0x318]
	0x036AEE34 LDR X5, [X8 + 0x320]
	0x036AEE38 MOV W2, W31
	0x036AEE3C BLR X9
	0x036AEE40 CBZ X0, 0x36AF184
	0x036AEE44 MOV W1, W31
	0x036AEE48 MOV X2, X31
	0x036AEE4C BL 0x33ED3A0
	0x036AEE50 STP X0, X1, [X31 + 0x30]
	0x036AEE54 ADD X0, X31, 0x30
	0x036AEE58 MOV X1, X31
	0x036AEE5C BL 0x32C40D4
	0x036AEE60 TBZ X0, 0x0, 0x36AF040
	0x036AEE64 ADD X0, X31, 0x30
	0x036AEE68 MOV X1, X31
	0x036AEE6C BL 0x32C40F0
	0x036AEE70 CBZ X20, 0x36AF0E4
	0x036AEE74 LDP X1, X2, [X19 + 0x28]
	0x036AEE78 MOV X0, X20
	0x036AEE7C BL 0x36AE55C
	0x036AEE80 CBZ X0, 0x36AF0E8
	0x036AEE84 ADRP X8, 0xA91000
	0x036AEE88 LDR X8, [X8 + 0x150]
	0x036AEE8C LDR X2, [X8]
	0x036AEE90 MOV W1, W31
	0x036AEE94 BL 0x2698324
	0x036AEE98 ADRP X8, 0xA91000
	0x036AEE9C LDR X8, [X8 + 0x148]
	0x036AEEA0 STP X0, X1, [X31 + 0x20]
	0x036AEEA4 LDR X8, [X8]
	0x036AEEA8 ADD X0, X31, 0x20
	0x036AEEAC MOV X1, X8
	0x036AEEB0 BL 0x29984E0
	0x036AEEB4 TBZ X0, 0x0, 0x36AEF10
	0x036AEEB8 ADRP X8, 0xA91000
	0x036AEEBC LDR X8, [X8 + 0x140]
	0x036AEEC0 ADD X0, X31, 0x20
	0x036AEEC4 LDR X1, [X8]
	0x036AEEC8 ADD X8, X31, 0x8
	0x036AEECC BL 0x299852C
	0x036AEED0 CBZ X20, 0x36AF0E0
	0x036AEED4 LDP X0, X9, [X31 + 0x8]
	0x036AEED8 LDR X8, [X31 + 0x18]
	0x036AEEDC STR X0, [X20 + 0x48]
	0x036AEEE0 STR X9, [X20 + 0x58]
	0x036AEEE4 STR W8, [X31 + 0x4C]
	0x036AEEE8 STR W8, [X20 + 0x30]
	0x036AEEEC LDRB W9, [X19 + 0x38]
	0x036AEEF0 CBZ W9, 0x36AEF50
	0x036AEEF4 CMP W8, 0x197
	0x036AEEF8 B.NE 0x36AEFE4
	0x036AEEFC CBZ X0, 0x36AEFE4
	0x036AEF00 LDR W9, [X20 + 0x28]
	0x036AEF04 CMP W9, 0x1
	0x036AEF08 B.EQ 0x36AEF5C
	0x036AEF0C B 0x36AEFE4
	0x036AEF10 MOVZ W8, 0x1
	0x036AEF14 STR W8, [X19]
	0x036AEF18 LDR V0, [X31 + 0x2]
	0x036AEF1C STR V0, [X19 + 0x5]
	0x036AEF20 LDR X0, [X25]
	0x036AEF24 LDR W8, [X0 + 0xE0]
	0x036AEF28 CBNZ W8, 0x36AEF30
	0x036AEF2C BL 0x1C16DFC
	0x036AEF30 ADRP X8, 0xA91000
	0x036AEF34 LDR X8, [X8 + 0x128]
	0x036AEF38 ADD X0, X19, 0x8
	0x036AEF3C LDR X3, [X8]
	0x036AEF40 ADD X1, X31, 0x20
	0x036AEF44 MOV X2, X19
	0x036AEF48 BL 0x21855E0
	0x036AEF4C B 0x36AF078
	0x036AEF50 CBZ X0, 0x36AEFE4
	0x036AEF54 CMP W8, 0x197
	0x036AEF58 B.NE 0x36AEFE4
	0x036AEF5C ADRP X8, 0xA8C000
	0x036AEF60 LDR X8, [X8 + 0x158]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X25, 0xD33000
	010 Move W8, [X25+2370]
	011 Move X19, X5
	012 Move X20, X4
	013 Move W21, W3
	014 Move W22, W2
	015 Move X23, X1
	016 Move X24, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {26}
	021 Move X0, 0xA4E000
	022 Move X0, [X0+2008]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X25+2370], W8
	026 Compare X23, 0
	027 JumpIfEqual {83}
	028 Move TEMP, X22
	029 And TEMP, TEMP, -2147483648
	030 Compare TEMP, -2147483648
	031 JumpIfEqual {95}
	032 Move W8, [X23+24]
	033 Subtract W8, W8, W22
	034 Move TEMP, X21
	035 And TEMP, TEMP, -2147483648
	036 Compare TEMP, -2147483648
	037 JumpIfEqual {102}
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Move X8, [X24]
	040 Move X0, X24
	041 Move X9, [X8+472]
	042 Move X1, [X8+480]
	043 NotImplemented "Instruction BLR not yet implemented."
	044 Move TEMP, X0
	045 And TEMP, TEMP, 1
	046 Compare TEMP, 1
	047 JumpIfNotEqual {114}
	048 Move X0, [X24+80]
	049 Compare X0, 0
	050 JumpIfEqual {132}
	051 Move X25, 0xA4E000
	052 Move X25, [X25+2008]
	053 Call WebOperation.ThrowIfClosedOrDisposed, X0
	054 Move X0, [X25]
	055 Move W8, [X0+224]
	056 Compare W8, 0
	057 JumpIfNotEqual {59}
	058 Call 0x1C17DFC
	059 Move X0, X31
	060 Call CancellationToken.get_None
	061 Move X8, [X24]
	062 Move X4, X0
	063 Move X0, X24
	064 Move X1, X23
	065 Move X9, [X8+792]
	066 Move X5, [X8+800]
	067 Move W2, W22
	068 Move W3, W21
	069 NotImplemented "Instruction BLR not yet implemented."
	070 Move X1, X20
	071 Move X2, X19
	072 Move X20, [X31+48]
	073 Move X19, [X31+56]
	074 Move X22, [X31+32]
	075 Move X21, [X31+40]
	076 Move X24, [X31+16]
	077 Move X23, [X31+24]
	078 Move X3, X31
	079 Move X30, [X31+64]
	080 Move X25, [X31+72]
	081 Call TaskToApm.Begin, X0, X1, X2
	082 Return X0
	083 Move X0, 0xA4B000
	084 Move X0, [X0+1320]
	085 Call 0x1C17D08
	086 Call 0x1C17F10
	087 Move X19, X0
	088 Move X0, 0xA71000
	089 Move X0, [X0+3912]
	090 Call 0x1C17D08
	091 Move X1, X0
	092 Move X0, X19
	093 Move X2, X31
	094 Call ArgumentNullException..ctor, X0, X1
	095 Move X0, 0xA4E000
	096 Move X0, [X0+1888]
	097 Call 0x1C17D08
	098 Call 0x1C17F10
	099 Move X19, X0
	100 Move X0, 0xA75000
	101 Move X0, [X0+3472]
	102 Move X0, 0xA4E000
	103 Move X0, [X0+1888]
	104 Call 0x1C17D08
	105 Call 0x1C17F10
	106 Move X19, X0
	107 Move X0, 0xA6E000
	108 Move X0, [X0+1608]
	109 Call 0x1C17D08
	110 Move X1, X0
	111 Move X0, X19
	112 Move X2, X31
	113 Call ArgumentOutOfRangeException..ctor, X0, X1
	114 Move X0, 0xA46000
	115 Move X0, [X0+2880]
	116 Call 0x1C17D08
	117 Call 0x1C17F10
	118 Move X19, X0
	119 Move X0, 0xA92000
	120 Move X0, [X0+192]
	121 Call 0x1C17D08
	122 Move X1, X0
	123 Move X0, X19
	124 Move X2, X31
	125 Call NotSupportedException..ctor, X0, X1
	126 Move X0, 0xA92000
	127 Move X0, [X0+200]
	128 Call 0x1C17D08
	129 Move X1, X0
	130 Move X0, X19
	131 Call 0x1C17DEC
	132 Call 0x1C17F20

Method: System.Void EndWrite(System.IAsyncResult r)

Disassembly:
	0x036AEF64 LDR X1, [X8]
	0x036AEF68 MOV X2, X31
	0x036AEF6C BL 0x366456C
	0x036AEF70 MOV X21, X0
	0x036AEF74 MOV X1, X31
	0x036AEF78 BL 0x32277A8
	0x036AEF7C TBNZ X0, 0x0, 0x36AEFB0
	0x036AEF80 CBZ X21, 0x36AF194
	0x036AEF84 MOV X0, X21
	0x036AEF88 MOV X1, X31
	0x036AEF8C BL 0x322B5E4
	0x036AEF90 ADRP X8, 0xA8C000
	0x036AEF94 LDR X8, [X8 + 0xB88]
	0x036AEF98 LDR X1, [X8]
	0x036AEF9C MOV X2, X31
	0x036AEFA0 BL 0x321BA08
	0x036AEFA4 TBZ X0, 0x0, 0x36AEFB0
	0x036AEFA8 MOVZ W8, 0x1
	0x036AEFAC STRB W8, [X20 + 0x2D]
	0x036AEFB0 LDR X0, [X20 + 0x48]
	0x036AEFB4 CBZ X0, 0x36AF188
	0x036AEFB8 ADRP X9, 0xA8C000
	0x036AEFBC LDR X8, [X0]
	0x036AEFC0 LDR X9, [X9 + 0xAC8]
	0x036AEFC4 LDR X2, [X8 + 0x270]
	0x036AEFC8 LDR X1, [X9]
	0x036AEFCC LDR X9, [X8 + 0x268]
	0x036AEFD0 BLR X9
	0x036AEFD4 STR X0, [X20 + 0x40]
	0x036AEFD8 STRB W31, [X20 + 0x2C]
	0x036AEFDC CBNZ X0, 0x36AF018
	0x036AEFE0 B 0x36AF004
	0x036AEFE4 CMP W8, 0xC8
	0x036AEFE8 CSET W8, EQ
	0x036AEFEC CMP X0, 0x0
	0x036AEFF0 LDR X0, [X20 + 0x40]
	0x036AEFF4 CSET W9, NE
	0x036AEFF8 AND W8, W9, W8, 0x0
	0x036AEFFC STRB W8, [X20 + 0x2C]
	0x036AF000 CBNZ X0, 0x36AF018
	0x036AF004 LDR W22, [X20 + 0x30]
	0x036AF008 CMP W22, 0x197
	0x036AF00C B.EQ 0x36AF0EC
	0x036AF010 CMP W22, 0x191
	0x036AF014 B.EQ 0x36AF0EC
	0x036AF018 MOVN W8, 0x1
	0x036AF01C STR W8, [X19], #0x8
	0x036AF020 LDR X0, [X25]
	0x036AF024 LDR W8, [X0 + 0xE0]
	0x036AF028 CBNZ W8, 0x36AF030
	0x036AF02C BL 0x1C16DFC
	0x036AF030 MOV X0, X19
	0x036AF034 MOV X1, X31
	0x036AF038 BL 0x32C4864
	0x036AF03C B 0x36AF078
	0x036AF040 STR W31, [X19]
	0x036AF044 LDR V0, [X31 + 0x3]
	0x036AF048 STR V0, [X19 + 0x4]
	0x036AF04C LDR X0, [X25]
	0x036AF050 LDR W8, [X0 + 0xE0]
	0x036AF054 CBNZ W8, 0x36AF05C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Compare X1, 0
	005 JumpIfEqual {14}
	006 Move X19, X0
	007 Move X0, X1
	008 Move X1, X31
	009 Call TaskToApm.End, X0
	010 Move X20, [X31+16]
	011 Move X19, [X31+24]
	012 Move X30, [X31+32]
	013 Return 
	014 Move X0, 0xA4B000
	015 Move X0, [X0+1320]
	016 Call 0x1C17D08
	017 Call 0x1C17F10
	018 Move X19, X0
	019 Move X0, 0xA73000
	020 Move X0, [X0+936]
	021 Call 0x1C17D08
	022 Move X1, X0
	023 Move X0, X19
	024 Move X2, X31
	025 Call ArgumentNullException..ctor, X0, X1
	026 Move X0, 0xA92000
	027 Move X0, [X0+208]
	028 Call 0x1C17D08
	029 Move X1, X0
	030 Move X0, X19
	031 Call 0x1C17DEC
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move X20, X0
	034 Move X0, X20
	035 Call 0x3EB2AD0
	036 Move X20, X0
	037 Move X0, 0xA46000
	038 Move X0, [X0+2000]
	039 Call 0x1C17D08
	040 Move X8, [X20]
	041 Move X1, [X8]
	042 Call 0x1C18270
	043 Move TEMP, X0
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfNotEqual {53}
	047 Move X20, [X20]
	048 Call 0x3EB2AE0
	049 Move X0, X19
	050 Move X1, X20
	051 Call WebConnectionStream.GetException, X0, X1
	052 Move X19, X0
	053 Move W0, 8
	054 Call 0x3EB2AF0
	055 Move X8, [X20]
	056 Move [X0], X8
	057 Move X1, 0x806000
	058 Add X1, X1, 3672
	059 Move X2, X31
	060 Call 0x3EB2B00
	061 Move X20, X0
	062 Call 0x3EB2AE0
	063 Move X0, X20
	064 Call 0x1D2D690
	065 Call 0x1991590

Method: System.Void Write(System.Byte[] buffer, System.Int32 offset, System.Int32 count)

Disassembly:
	0x036AF058 BL 0x1C16DFC
	0x036AF05C ADRP X8, 0xA90000
	0x036AF060 LDR X8, [X8 + 0x130]
	0x036AF064 ADD X0, X19, 0x8
	0x036AF068 LDR X3, [X8]
	0x036AF06C ADD X1, X31, 0x30
	0x036AF070 MOV X2, X19
	0x036AF074 BL 0x218C074
	0x036AF078 LDP X20, X19, [X31 + 0xA0]
	0x036AF07C LDP X22, X21, [X31 + 0x90]
	0x036AF080 LDP X24, X23, [X31 + 0x80]
	0x036AF084 LDP X26, X25, [X31 + 0x70]
	0x036AF088 LDP X28, X27, [X31 + 0x60]
	0x036AF08C LDP X29, X30, [X31 + 0x50]
	0x036AF090 ADD X31, X31, 0xB0
	0x036AF094 RET
	0x036AF098 ADRP X8, 0xA74000
	0x036AF09C LDR X0, [X23 + 0x20]
	0x036AF0A0 LDR X8, [X8 + 0xA50]
	0x036AF0A4 LDR X1, [X8]
	0x036AF0A8 MOV X2, X31
	0x036AF0AC BL 0x321BA08
	0x036AF0B0 ADRP X8, 0xA90000
	0x036AF0B4 LDR X8, [X8 + 0x178]
	0x036AF0B8 MOV W22, W0
	0x036AF0BC LDR X1, [X8]
	0x036AF0C0 MOV X0, X21
	0x036AF0C4 MOV X2, X31
	0x036AF0C8 BL 0x32333E0
	0x036AF0CC LDR X1, [X23 + 0x10]
	0x036AF0D0 MOV X0, X21
	0x036AF0D4 MOV X2, X31
	0x036AF0D8 BL 0x32333E0
	0x036AF0DC B 0x36AEAE8
	0x036AF0E0 BL 0x1C16F20
	0x036AF0E4 BL 0x1C16F20
	0x036AF0E8 BL 0x1C16F20
	0x036AF0EC LDR X24, [X20 + 0x18]
	0x036AF0F0 LDR X23, [X20 + 0x48]
	0x036AF0F4 ADRP X0, 0xA8B000
	0x036AF0F8 LDR X0, [X0 + 0x2D8]
	0x036AF0FC BL 0x1C16D08
	0x036AF100 BL 0x1C16F10
	0x036AF104 MOV X21, X0
	0x036AF108 ADRP X0, 0xA8B000
	0x036AF10C LDR X0, [X0 + 0x218]
	0x036AF110 BL 0x1C16D08
	0x036AF114 MOV X2, X0
	0x036AF118 MOV X0, X21
	0x036AF11C MOV X1, X24
	0x036AF120 MOV W3, W22
	0x036AF124 MOV X4, X23
	0x036AF128 MOV X5, X31
	0x036AF12C BL 0x36A2998
	0x036AF130 LDR W8, [X20 + 0x30]
	0x036AF134 CMP W8, 0x197
	0x036AF138 B.NE 0x36AF1DC
	0x036AF13C ADRP X0, 0xA90000
	0x036AF140 LDR X0, [X0 + 0x188]
	0x036AF144 BL 0x1C16D08
	0x036AF148 B 0x36AF1E8
	0x036AF14C BL 0x1C16F20
	0x036AF150 BL 0x1C16F20
	0x036AF154 BL 0x1C16F20
	0x036AF158 BL 0x1C16F20
	0x036AF15C BL 0x1C16F20
	0x036AF160 BL 0x1C16F20
	0x036AF164 BL 0x1C16F20
	0x036AF168 BL 0x1C16F20
	0x036AF16C BL 0x1C16F20
	0x036AF170 BL 0x1C16F20
	0x036AF174 BL 0x1C16F20
	0x036AF178 BL 0x1C16F20
	0x036AF17C BL 0x1C16F20
	0x036AF180 BL 0x1C16F20
	0x036AF184 BL 0x1C16F20
	0x036AF188 BL 0x1C16F20
	0x036AF18C BL 0x1C16F28
	0x036AF190 BL 0x1C16F20
	0x036AF194 BL 0x1C16F20
	0x036AF198 BL 0x1C16F20
	0x036AF19C BL 0x1C16F20
	0x036AF1A0 BL 0x1C171E0
	0x036AF1A4 BL 0x1C171E0
	0x036AF1A8 BL 0x1C16F20
	0x036AF1AC BL 0x1C16F20
	0x036AF1B0 BL 0x1C16F28
	0x036AF1B4 BL 0x1C16F28
	0x036AF1B8 BL 0x1C16F20
	0x036AF1BC BL 0x1C16F28
	0x036AF1C0 BL 0x1C16F28
	0x036AF1C4 BL 0x1C16F20
	0x036AF1C8 BL 0x1C16F28
	0x036AF1CC BL 0x1C16F28
	0x036AF1D0 STR X0, [X20 + 0x20]
	0x036AF1D4 BL 0x1C16F20
	0x036AF1D8 BL 0x1C16F20
	0x036AF1DC ADRP X0, 0xA90000
	0x036AF1E0 LDR X0, [X0 + 0x190]
	0x036AF1E4 BL 0x1C16D08
	0x036AF1E8 MOV X20, X0
	0x036AF1EC ADRP X0, 0xA6F000
	0x036AF1F0 LDR X0, [X0 + 0x330]
	0x036AF1F4 BL 0x1C16D08
	0x036AF1F8 BL 0x1C16F10
	0x036AF1FC MOV X22, X0
	0x036AF200 MOVZ W3, 0x7
	0x036AF204 MOV X1, X20
	0x036AF208 MOV X2, X31
	0x036AF20C MOV X4, X21
	0x036AF210 MOV X5, X31
	0x036AF214 BL 0x367B5A0
	0x036AF218 ADRP X0, 0xA90000
	0x036AF21C LDR X0, [X0 + 0x198]
	0x036AF220 BL 0x1C16D08
	0x036AF224 MOV X1, X0
	0x036AF228 MOV X0, X22
	0x036AF22C BL 0x1C16DEC
	0x036AF230 B 0x36AF378
	0x036AF234 B 0x36AF378
	0x036AF238 B 0x36AF378
	0x036AF23C B 0x36AF378

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Compare X1, 0
	007 JumpIfEqual {51}
	008 Move W21, W2
	009 Move TEMP, X2
	010 And TEMP, TEMP, -2147483648
	011 Compare TEMP, -2147483648
	012 JumpIfEqual {63}
	013 Move W8, [X1+24]
	014 Move X22, X1
	015 Subtract W8, W8, W21
	016 Move W20, W3
	017 Move TEMP, X3
	018 And TEMP, TEMP, -2147483648
	019 Compare TEMP, -2147483648
	020 JumpIfEqual {70}
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Move X8, [X0]
	023 Move X19, X0
	024 Move X9, [X8+472]
	025 Move X1, [X8+480]
	026 NotImplemented "Instruction BLR not yet implemented."
	027 Move TEMP, X0
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfNotEqual {82}
	031 Move X0, [X19+80]
	032 Compare X0, 0
	033 JumpIfEqual {100}
	034 Call WebOperation.ThrowIfClosedOrDisposed, X0
	035 Move X0, X19
	036 Move X1, X22
	037 Move W2, W21
	038 Move W3, W20
	039 Move X4, X31
	040 Call Stream.WriteAsync, X0, X1, X2, X3
	041 Compare X0, 0
	042 JumpIfEqual {101}
	043 Move X1, X31
	044 Call Task.Wait, X0
	045 Move X20, [X31+32]
	046 Move X19, [X31+40]
	047 Move X22, [X31+16]
	048 Move X21, [X31+24]
	049 Move X30, [X31+48]
	050 Return 
	051 Move X0, 0xA4A000
	052 Move X0, [X0+1320]
	053 Call 0x1C17D08
	054 Call 0x1C17F10
	055 Move X19, X0
	056 Move X0, 0xA70000
	057 Move X0, [X0+3912]
	058 Call 0x1C17D08
	059 Move X1, X0
	060 Move X0, X19
	061 Move X2, X31
	062 Call ArgumentNullException..ctor, X0, X1
	063 Move X0, 0xA4D000
	064 Move X0, [X0+1888]
	065 Call 0x1C17D08
	066 Call 0x1C17F10
	067 Move X19, X0
	068 Move X0, 0xA74000
	069 Move X0, [X0+3472]
	070 Move X0, 0xA4D000
	071 Move X0, [X0+1888]
	072 Call 0x1C17D08
	073 Call 0x1C17F10
	074 Move X19, X0
	075 Move X0, 0xA6D000
	076 Move X0, [X0+1608]
	077 Call 0x1C17D08
	078 Move X1, X0
	079 Move X0, X19
	080 Move X2, X31
	081 Call ArgumentOutOfRangeException..ctor, X0, X1
	082 Move X0, 0xA45000
	083 Move X0, [X0+2880]
	084 Call 0x1C17D08
	085 Call 0x1C17F10
	086 Move X19, X0
	087 Move X0, 0xA91000
	088 Move X0, [X0+192]
	089 Call 0x1C17D08
	090 Move X1, X0
	091 Move X0, X19
	092 Move X2, X31
	093 Call NotSupportedException..ctor, X0, X1
	094 Move X0, 0xA91000
	095 Move X0, [X0+216]
	096 Call 0x1C17D08
	097 Move X1, X0
	098 Move X0, X19
	099 Call 0x1C17DEC
	100 Call 0x1C17F20
	101 Call 0x1C17F20
	102 NotImplemented "Instruction CMP not yet implemented."
	103 Move X20, X0
	104 Move X0, X20
	105 Call 0x3EB2AD0
	106 Move X20, X0
	107 Move X0, 0xA45000
	108 Move X0, [X0+2000]
	109 Call 0x1C17D08
	110 Move X8, [X20]
	111 Move X1, [X8]
	112 Call 0x1C18270
	113 Move TEMP, X0
	114 And TEMP, TEMP, 1
	115 Compare TEMP, 1
	116 JumpIfNotEqual {123}
	117 Move X20, [X20]
	118 Call 0x3EB2AE0
	119 Move X0, X19
	120 Move X1, X20
	121 Call WebConnectionStream.GetException, X0, X1
	122 Move X19, X0
	123 Move W0, 8
	124 Call 0x3EB2AF0
	125 Move X8, [X20]
	126 Move [X0], X8
	127 Move X1, 0x806000
	128 Add X1, X1, 3672
	129 Move X2, X31
	130 Call 0x3EB2B00
	131 Move X20, X0
	132 Call 0x3EB2AE0
	133 Move X0, X20
	134 Call 0x1D2D690
	135 Call 0x1991590

Method: System.Void Flush()

Disassembly:
	0x036AF240 B 0x36AF378

ISIL:
	001 Return 

Method: System.Threading.Tasks.Task FlushAsync(System.Threading.CancellationToken cancellationToken)

Disassembly:
	0x036AF244 B 0x36AF378
	0x036AF248 B 0x36AF378
	0x036AF24C B 0x36AF378
	0x036AF250 B 0x36AF378
	0x036AF254 B 0x36AF378
	0x036AF258 B 0x36AF378
	0x036AF25C B 0x36AF378
	0x036AF260 B 0x36AF378
	0x036AF264 B 0x36AF378
	0x036AF268 B 0x36AF378
	0x036AF26C B 0x36AF378
	0x036AF270 B 0x36AF378
	0x036AF274 B 0x36AF378
	0x036AF278 B 0x36AF378
	0x036AF27C B 0x36AF378
	0x036AF280 B 0x36AF378
	0x036AF284 B 0x36AF378
	0x036AF288 B 0x36AF378
	0x036AF28C B 0x36AF378
	0x036AF290 B 0x36AF378
	0x036AF294 B 0x36AF378
	0x036AF298 B 0x36AF378
	0x036AF29C B 0x36AF378
	0x036AF2A0 B 0x36AF378
	0x036AF2A4 B 0x36AF378
	0x036AF2A8 B 0x36AF378
	0x036AF2AC B 0x36AF378
	0x036AF2B0 B 0x36AF378
	0x036AF2B4 B 0x36AF378
	0x036AF2B8 B 0x36AF378
	0x036AF2BC B 0x36AF378
	0x036AF2C0 B 0x36AF378
	0x036AF2C4 B 0x36AF378
	0x036AF2C8 B 0x36AF378
	0x036AF2CC B 0x36AF378
	0x036AF2D0 B 0x36AF378
	0x036AF2D4 B 0x36AF378
	0x036AF2D8 B 0x36AF378
	0x036AF2DC B 0x36AF378
	0x036AF2E0 B 0x36AF378
	0x036AF2E4 B 0x36AF378
	0x036AF2E8 B 0x36AF378
	0x036AF2EC B 0x36AF378
	0x036AF2F0 B 0x36AF378
	0x036AF2F4 B 0x36AF378
	0x036AF2F8 B 0x36AF378
	0x036AF2FC B 0x36AF378
	0x036AF300 B 0x36AF378
	0x036AF304 B 0x36AF378
	0x036AF308 B 0x36AF378
	0x036AF30C B 0x36AF378
	0x036AF310 B 0x36AF378
	0x036AF314 B 0x36AF378
	0x036AF318 B 0x36AF378
	0x036AF31C B 0x36AF378
	0x036AF320 B 0x36AF378
	0x036AF324 B 0x36AF378

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0xD32000
	005 Move [X31+8], X1
	006 Move X20, 0xA4D000
	007 Move W8, [X19+2371]
	008 Move X20, [X20+2008]
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0xA4D000
	014 Move X0, [X0+2008]
	015 Call 0x1C17CF4
	016 Move X0, 0xA46000
	017 Move X0, [X0+1976]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X19+2371], W8
	021 Move X0, [X20]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move X19, 0xA46000
	027 Move X19, [X19+1976]
	028 Add X0, X31, 8
	029 Move X1, X31
	030 Call CancellationToken.get_IsCancellationRequested, X0
	031 Move TEMP, X0
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfNotEqual {44}
	035 Move X0, [X19]
	036 Move X19, [X31+8]
	037 Move W8, [X0+224]
	038 Compare W8, 0
	039 JumpIfNotEqual {41}
	040 Call 0x1C17DFC
	041 Move X0, X19
	042 Move X1, X31
	043 Call Task.FromCancellation, X0
	044 Move X0, [X19]
	045 Move W8, [X0+224]
	046 Compare W8, 0
	047 JumpIfNotEqual {49}
	048 Call 0x1C17DFC
	049 Move X20, 0xD2A000
	050 Move W8, [X20+3869]
	051 Compare W8, 0
	052 JumpIfNotEqual {58}
	053 Move X0, 0xA46000
	054 Move X0, [X0+1976]
	055 Call 0x1C17CF4
	056 Move W8, 1
	057 Move [X20+3869], W8
	058 Move X0, [X19]
	059 Move W8, [X0+224]
	060 Compare W8, 0
	061 JumpIfNotEqual {64}
	062 Call 0x1C17DFC
	063 Move X0, [X19]
	064 Move X8, [X0+184]
	065 Move X0, [X8+48]
	066 Move X20, [X31+16]
	067 Move X19, [X31+24]
	068 Move X30, [X31+32]
	069 Return X0

Method: System.Void InternalClose()

Disassembly:
	0x036AF328 B 0x36AF378
	0x036AF32C B 0x36AF378
	0x036AF330 B 0x36AF378

ISIL:
	001 Move W8, 1
	002 Move [X0+41], W8
	003 Return 

Method: System.Void Close_internal(ref System.Boolean disposed)

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Void Close()

Disassembly:
	0x036AF334 B 0x36AF378
	0x036AF338 B 0x36AF378
	0x036AF33C B 0x36AF378
	0x036AF340 B 0x36AF378
	0x036AF344 B 0x36AF378

ISIL:
	001 Move X1, X0
	002 Move X8, [X1+41]
	003 Move X3, [X8+968]
	004 Move X2, [X8+976]
	005 CallNoReturn X3

Method: System.Int64 Seek(System.Int64 a, System.IO.SeekOrigin b)

Disassembly:
	0x036AF348 B 0x36AF378
	0x036AF34C B 0x36AF378
	0x036AF350 B 0x36AF378
	0x036AF354 B 0x36AF378
	0x036AF358 B 0x36AF378
	0x036AF35C B 0x36AF378
	0x036AF360 B 0x36AF378
	0x036AF364 B 0x36AF378
	0x036AF368 B 0x36AF378
	0x036AF36C B 0x36AF378
	0x036AF370 B 0x36AF378
	0x036AF374 B 0x36AF378
	0x036AF378 MOV X20, X0
	0x036AF37C CMP W1, 0x1
	0x036AF380 B.NE 0x36AF410
	0x036AF384 MOV X0, X20
	0x036AF388 BL 0x3EB1AD0
	0x036AF38C MOV X20, X0
	0x036AF390 ADRP X0, 0xA44000

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0xA45000
	004 Move X0, [X0+2880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X19, X0
	008 Move X0, 0xA8D000
	009 Move X0, [X0+776]
	010 Call 0x1C17D08
	011 Move X1, X0
	012 Move X0, X19
	013 Move X2, X31
	014 Call NotSupportedException..ctor, X0, X1
	015 Move X0, 0xA91000
	016 Move X0, [X0+224]
	017 Call 0x1C17D08
	018 Move X1, X0
	019 Move X0, X19
	020 Call 0x1C17DEC

Method: System.Void SetLength(System.Int64 a)

Disassembly:
	0x036AF394 LDR X0, [X0 + 0x7D0]
	0x036AF398 BL 0x1C16D08
	0x036AF39C LDR X8, [X20]
	0x036AF3A0 LDR X1, [X8]
	0x036AF3A4 BL 0x1C17270
	0x036AF3A8 TBZ X0, 0x0, 0x36AF3E8
	0x036AF3AC LDR X20, [X20]
	0x036AF3B0 BL 0x3EB1AE0
	0x036AF3B4 MOVN W8, 0x1
	0x036AF3B8 STR W8, [X19], #0x8
	0x036AF3BC ADRP X0, 0xA47000
	0x036AF3C0 LDR X0, [X0 + 0x280]
	0x036AF3C4 BL 0x1C16D08
	0x036AF3C8 LDR W8, [X0 + 0xE0]
	0x036AF3CC CBNZ W8, 0x36AF3D4
	0x036AF3D0 BL 0x1C16DFC
	0x036AF3D4 MOV X0, X19
	0x036AF3D8 MOV X1, X20
	0x036AF3DC MOV X2, X31

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0xA45000
	004 Move X0, [X0+2880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X19, X0
	008 Move X0, 0xA8D000
	009 Move X0, [X0+776]
	010 Call 0x1C17D08
	011 Move X1, X0
	012 Move X0, X19
	013 Move X2, X31
	014 Call NotSupportedException..ctor, X0, X1
	015 Move X0, 0xA91000
	016 Move X0, [X0+232]
	017 Call 0x1C17D08
	018 Move X1, X0
	019 Move X0, X19
	020 Call 0x1C17DEC

Method: System.Boolean get_CanSeek()

Disassembly:
	0x036AF3E0 BL 0x32C4908
	0x036AF3E4 B 0x36AF078

ISIL:
	001 Move W0, W31
	002 Return X0

Method: System.Int64 get_Length()

Disassembly:
	0x036AF3E8 MOVZ W0, 0x8
	0x036AF3EC BL 0x3EB1AF0
	0x036AF3F0 LDR X8, [X20]
	0x036AF3F4 STR X8, [X0]
	0x036AF3F8 ADRP X1, 0x805000
	0x036AF3FC ADD X1, X1, 0xE58
	0x036AF400 MOV X2, X31
	0x036AF404 BL 0x3EB1B00
	0x036AF408 MOV X20, X0
	0x036AF40C BL 0x3EB1AE0
	0x036AF410 MOV X0, X20
	0x036AF414 BL 0x1D2C690
	0x036AF418 BL 0x1990590
	0x036AF41C STR X30, [X31 - 0x30]!
	0x036AF420 STP X22, X21, [X31 + 0x10]
	0x036AF424 STP X20, X19, [X31 + 0x20]
	0x036AF428 ADRP X21, 0xD31000
	0x036AF42C ADRP X22, 0xA47000
	0x036AF430 LDRB W8, [X21 + 0x948]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0xA45000
	004 Move X0, [X0+2880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X19, X0
	008 Move X0, 0xA8D000
	009 Move X0, [X0+776]
	010 Call 0x1C17D08
	011 Move X1, X0
	012 Move X0, X19
	013 Move X2, X31
	014 Call NotSupportedException..ctor, X0, X1
	015 Move X0, 0xA91000
	016 Move X0, [X0+240]
	017 Call 0x1C17D08
	018 Move X1, X0
	019 Move X0, X19
	020 Call 0x1C17DEC

Method: System.Int64 get_Position()

Disassembly:
	0x036AF434 LDR X22, [X22 + 0x280]
	0x036AF438 MOV X19, X1
	0x036AF43C MOV X20, X0
	0x036AF440 TBNZ X8, 0x0, 0x36AF458
	0x036AF444 ADRP X0, 0xA47000
	0x036AF448 LDR X0, [X0 + 0x280]
	0x036AF44C BL 0x1C16CF4
	0x036AF450 MOVZ W8, 0x1
	0x036AF454 STRB W8, [X21 + 0x948]
	0x036AF458 LDR X0, [X22]
	0x036AF45C LDR W8, [X0 + 0xE0]
	0x036AF460 CBNZ W8, 0x36AF468
	0x036AF464 BL 0x1C16DFC
	0x036AF468 ADD X0, X20, 0x8
	0x036AF46C MOV X1, X19
	0x036AF470 LDP X20, X19, [X31 + 0x20]
	0x036AF474 LDP X22, X21, [X31 + 0x10]
	0x036AF478 MOV X2, X31
	0x036AF47C LDR X30, [X31], #0x30

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0xA45000
	004 Move X0, [X0+2880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X19, X0
	008 Move X0, 0xA8D000
	009 Move X0, [X0+776]
	010 Call 0x1C17D08
	011 Move X1, X0
	012 Move X0, X19
	013 Move X2, X31
	014 Call NotSupportedException..ctor, X0, X1
	015 Move X0, 0xA91000
	016 Move X0, [X0+248]
	017 Call 0x1C17D08
	018 Move X1, X0
	019 Move X0, X19
	020 Call 0x1C17DEC

Method: System.Void set_Position(System.Int64 value)

Disassembly:
	0x036AF480 B 0x32C477C
	0x036AF484 SUB X31, X31, 0xE0
	0x036AF488 STP X29, X30, [X31 + 0x80]
	0x036AF48C STP X28, X27, [X31 + 0x90]
	0x036AF490 STP X26, X25, [X31 + 0xA0]
	0x036AF494 STP X24, X23, [X31 + 0xB0]
	0x036AF498 STP X22, X21, [X31 + 0xC0]
	0x036AF49C STP X20, X19, [X31 + 0xD0]
	0x036AF4A0 ADRP X20, 0xD31000
	0x036AF4A4 LDRB W8, [X20 + 0x949]
	0x036AF4A8 MOV X19, X0
	0x036AF4AC TBNZ X8, 0x0, 0x36AF590
	0x036AF4B0 ADRP X0, 0xA90000
	0x036AF4B4 LDR X0, [X0 + 0x1A0]
	0x036AF4B8 BL 0x1C16CF4
	0x036AF4BC ADRP X0, 0xA90000
	0x036AF4C0 LDR X0, [X0 + 0x1A8]
	0x036AF4C4 BL 0x1C16CF4
	0x036AF4C8 ADRP X0, 0xA90000

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0xA45000
	004 Move X0, [X0+2880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X19, X0
	008 Move X0, 0xA8D000
	009 Move X0, [X0+776]
	010 Call 0x1C17D08
	011 Move X1, X0
	012 Move X0, X19
	013 Move X2, X31
	014 Call NotSupportedException..ctor, X0, X1
	015 Move X0, 0xA91000
	016 Move X0, [X0+256]
	017 Call 0x1C17D08
	018 Move X1, X0
	019 Move X0, X19
	020 Call 0x1C17DEC

