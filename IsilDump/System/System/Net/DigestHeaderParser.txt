Type: System.Net.DigestHeaderParser

Method: System.Void .ctor(System.String header)

Disassembly:
	0x036997A8 MOV X0, X31
	0x036997AC BL 0x33616A4
	0x036997B0 STR X0, [X19 + 0x10]
	0x036997B4 LDR X8, [X21]
	0x036997B8 MOV X0, X21
	0x036997BC LDP X9, X1, [X8 + 0x1D8]
	0x036997C0 BLR X9
	0x036997C4 CBZ X20, 0x3699B90
	0x036997C8 ADRP X9, 0xAA0000
	0x036997CC LDR X8, [X20]
	0x036997D0 LDR X9, [X9 + 0x828]
	0x036997D4 ADRP X10, 0xAA5000
	0x036997D8 MOV X22, X0
	0x036997DC LDR X1, [X9]
	0x036997E0 LDR X10, [X10 + 0x698]
	0x036997E4 LDRH W9, [X8 + 0x12E]
	0x036997E8 LDR X23, [X10]
	0x036997EC CBZ X9, 0x3699810
	0x036997F0 LDR X10, [X8 + 0xB0]
	0x036997F4 ADD X10, X10, 0x8
	0x036997F8 LDUR X11, [X10 - 0x8]
	0x036997FC CMP X11, X1
	0x03699800 B.EQ 0x3699820
	0x03699804 SUBS X9, X9, 0x1
	0x03699808 ADD X10, X10, 0x10
	0x0369980C B.NE 0x36997F8
	0x03699810 MOV X0, X20
	0x03699814 MOV W2, W31
	0x03699818 BL 0x1C5C788
	0x0369981C B 0x369982C
	0x03699820 LDRSW X9, [X10]
	0x03699824 ADD X8, X8, X9, 0x4, LSL
	0x03699828 ADD X0, X8, 0x138
	0x0369982C LDP X8, X3, [X0]
	0x03699830 MOV X0, X20
	0x03699834 MOV X1, X22
	0x03699838 MOV X2, X23
	0x0369983C BLR X8
	0x03699840 CBZ X0, 0x3699A54
	0x03699844 MOV X1, X31
	0x03699848 MOV X20, X0
	0x0369984C BL 0x367F1A4
	0x03699850 CBZ X0, 0x3699A54
	0x03699854 ADRP X8, 0xA5A000
	0x03699858 LDR X8, [X8 + 0x988]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xD48000
	007 Move X21, 0xAA6000
	008 Move W8, [X22+2196]
	009 Move X21, [X21+1544]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xAA6000
	017 Move X0, [X0+1544]
	018 Call 0x1C17CF4
	019 Move X0, 0xA5B000
	020 Move X0, [X0+2760]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+2196], W8
	024 Move X0, [X21]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {30}
	028 Call 0x1C17DFC
	029 Move X0, [X21]
	030 Move X8, [X0+184]
	031 Move X8, [X8]
	032 Compare X8, 0
	033 JumpIfEqual {55}
	034 Move X9, 0xA5B000
	035 Move X9, [X9+2760]
	036 Move W1, [X8+24]
	037 Move X0, [X9]
	038 Call 0x1C17D6C
	039 Move [X19+32], X0
	040 Move X0, X19
	041 Move X1, X31
	042 Call Object..ctor, X0
	043 Compare X20, 0
	044 JumpIfEqual {55}
	045 Move X0, X20
	046 Move X1, X31
	047 Call String.Trim, X0
	048 Move [X19+16], X0
	049 Move X20, [X31+32]
	050 Move X19, [X31+40]
	051 Move X22, [X31+16]
	052 Move X21, [X31+24]
	053 Move X30, [X31+48]
	054 Return 
	055 Call 0x1C17F20

Method: System.String get_Realm()

Disassembly:
	0x0369985C MOV X2, X31
	0x03699860 MOV X22, X0
	0x03699864 LDR X1, [X8]
	0x03699868 BL 0x321BA08
	0x0369986C MOV X23, X31
	0x03699870 TBNZ X0, 0x0, 0x3699A58
	0x03699874 MOV X0, X20
	0x03699878 MOV X1, X31
	0x0369987C BL 0x367F1AC
	0x03699880 ADRP X8, 0xA5A000

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+32]
	003 Compare X8, 0
	004 JumpIfEqual {11}
	005 Move W9, [X8+24]
	006 Compare W9, 0
	007 JumpIfEqual {12}
	008 Move X0, [X8+32]
	009 Move X30, [X31+16]
	010 Return X0
	011 Call 0x1C17F20
	012 Call 0x1C17F28

Method: System.String get_Opaque()

Disassembly:
	0x03699884 LDR X8, [X8 + 0x8F0]
	0x03699888 MOV X23, X0
	0x0369988C LDR X8, [X8]
	0x03699890 MOV X0, X8
	0x03699894 BL 0x1C16F10
	0x03699898 MOV X1, X31
	0x0369989C MOV X20, X0
	0x036998A0 BL 0x3231AC4
	0x036998A4 CBZ X20, 0x3699B90
	0x036998A8 ADRP X8, 0xAA5000
	0x036998AC LDR X8, [X8 + 0x668]

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+32]
	003 Compare X8, 0
	004 JumpIfEqual {10}
	005 Move W9, [X8+24]
	006 NotImplemented "Instruction CMP not yet implemented."
	007 Move X0, [X8+40]
	008 Move X30, [X31+16]
	009 Return X0
	010 Call 0x1C17F20
	011 Call 0x1C17F28

Method: System.String get_Nonce()

Disassembly:
	0x036998B0 MOV X0, X20
	0x036998B4 MOV X2, X22
	0x036998B8 MOV X3, X31
	0x036998BC LDR X1, [X8]
	0x036998C0 BL 0x3234224
	0x036998C4 LDR X0, [X19 + 0x28]
	0x036998C8 CBZ X0, 0x3699B90
	0x036998CC BL 0x369885C
	0x036998D0 ADRP X8, 0xAA5000
	0x036998D4 LDR X8, [X8 + 0x6A0]
	0x036998D8 MOV X2, X0

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+32]
	003 Compare X8, 0
	004 JumpIfEqual {10}
	005 Move W9, [X8+24]
	006 NotImplemented "Instruction CMP not yet implemented."
	007 Move X0, [X8+48]
	008 Move X30, [X31+16]
	009 Return X0
	010 Call 0x1C17F20
	011 Call 0x1C17F28

Method: System.String get_Algorithm()

Disassembly:
	0x036998DC MOV X0, X20
	0x036998E0 MOV X3, X31
	0x036998E4 LDR X1, [X8]
	0x036998E8 BL 0x3234224
	0x036998EC LDR X0, [X19 + 0x28]
	0x036998F0 CBZ X0, 0x3699B90
	0x036998F4 BL 0x36988B0
	0x036998F8 ADRP X8, 0xAA5000
	0x036998FC LDR X8, [X8 + 0x680]
	0x03699900 MOV X2, X0
	0x03699904 MOV X0, X20

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+32]
	003 Compare X8, 0
	004 JumpIfEqual {10}
	005 Move W9, [X8+24]
	006 NotImplemented "Instruction CMP not yet implemented."
	007 Move X0, [X8+56]
	008 Move X30, [X31+16]
	009 Return X0
	010 Call 0x1C17F20
	011 Call 0x1C17F28

Method: System.String get_QOP()

Disassembly:
	0x03699908 MOV X3, X31
	0x0369990C LDR X1, [X8]
	0x03699910 BL 0x3234224
	0x03699914 LDR X0, [X21 + 0x28]
	0x03699918 CBZ X0, 0x3699B90
	0x0369991C MOV X1, X31
	0x03699920 BL 0x361C058
	0x03699924 ADRP X8, 0xAA5000
	0x03699928 LDR X8, [X8 + 0x678]
	0x0369992C MOV X2, X0
	0x03699930 MOV X0, X20

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+32]
	003 Compare X8, 0
	004 JumpIfEqual {10}
	005 Move W9, [X8+24]
	006 NotImplemented "Instruction CMP not yet implemented."
	007 Move X0, [X8+64]
	008 Move X30, [X31+16]
	009 Return X0
	010 Call 0x1C17F20
	011 Call 0x1C17F28

Method: System.Boolean Parse()

Disassembly:
	0x03699934 MOV X3, X31
	0x03699938 LDR X1, [X8]
	0x0369993C BL 0x3234224
	0x03699940 LDR X0, [X19 + 0x28]
	0x03699944 CBZ X0, 0x3699B90
	0x03699948 BL 0x36988DC
	0x0369994C CBZ X0, 0x3699978
	0x03699950 LDR X0, [X19 + 0x28]
	0x03699954 CBZ X0, 0x3699B90
	0x03699958 BL 0x36988DC
	0x0369995C ADRP X8, 0xAA5000
	0x03699960 LDR X8, [X8 + 0x690]
	0x03699964 MOV X2, X0
	0x03699968 MOV X0, X20
	0x0369996C MOV X3, X31
	0x03699970 LDR X1, [X8]
	0x03699974 BL 0x3234224
	0x03699978 MOV X0, X19
	0x0369997C MOV X1, X22
	0x03699980 MOV X2, X23
	0x03699984 MOV X3, X21
	0x03699988 BL 0x36994E4
	0x0369998C ADRP X8, 0xAA5000
	0x03699990 LDR X8, [X8 + 0x670]
	0x03699994 MOV X2, X0
	0x03699998 MOV X0, X20
	0x0369999C MOV X3, X31
	0x036999A0 LDR X1, [X8]
	0x036999A4 BL 0x3234224
	0x036999A8 LDR X0, [X19 + 0x28]
	0x036999AC CBZ X0, 0x3699B90
	0x036999B0 BL 0x3698908
	0x036999B4 CBZ X0, 0x36999E0
	0x036999B8 LDR X0, [X19 + 0x28]
	0x036999BC CBZ X0, 0x3699B90
	0x036999C0 BL 0x3698908
	0x036999C4 ADRP X8, 0xAA5000
	0x036999C8 LDR X8, [X8 + 0x6A8]
	0x036999CC MOV X2, X0
	0x036999D0 MOV X0, X20
	0x036999D4 MOV X3, X31
	0x036999D8 LDR X1, [X8]
	0x036999DC BL 0x3234224
	0x036999E0 STRB W31, [X31 + 0xC]
	0x036999E4 ADD X1, X31, 0xC
	0x036999E8 MOV X0, X19
	0x036999EC MOV X2, X31
	0x036999F0 BL 0x33DE64C
	0x036999F4 LDR X0, [X19 + 0x28]
	0x036999F8 CBZ X0, 0x3699B9C
	0x036999FC BL 0x3698908
	0x03699A00 CBZ X0, 0x3699A70
	0x03699A04 ADRP X9, 0xA5A000
	0x03699A08 LDR W8, [X19 + 0x18]
	0x03699A0C LDR X9, [X9 + 0x758]
	0x03699A10 STR W8, [X31 + 0x8]
	0x03699A14 LDR X0, [X9]
	0x03699A18 ADD X1, X31, 0x8
	0x03699A1C BL 0x1C16E04
	0x03699A20 ADRP X8, 0xAA5000
	0x03699A24 LDR X8, [X8 + 0x6B0]
	0x03699A28 MOV X2, X0
	0x03699A2C LDR X1, [X8]
	0x03699A30 MOV X0, X20
	0x03699A34 MOV X3, X31
	0x03699A38 BL 0x3234224
	0x03699A3C LDR W8, [X19 + 0x18]
	0x03699A40 MOV X21, X31
	0x03699A44 MOVZ W22, 0xC
	0x03699A48 ADD W8, W8, 0x1
	0x03699A4C STR W8, [X19 + 0x18]
	0x03699A50 B 0x3699A78
	0x03699A54 MOV X23, X31
	0x03699A58 MOV X0, X23
	0x03699A5C LDP X20, X19, [X31 + 0x30]
	0x03699A60 LDP X22, X21, [X31 + 0x20]
	0x03699A64 LDP X30, X23, [X31 + 0x10]
	0x03699A68 ADD X31, X31, 0x40
	0x03699A6C RET
	0x03699A70 MOV X21, X31
	0x03699A74 MOVZ W22, 0xC
	0x03699A78 LDRB W8, [X31 + 0xC]
	0x03699A7C CBZ W8, 0x3699A8C
	0x03699A80 MOV X0, X19
	0x03699A84 MOV X1, X31
	0x03699A88 BL 0x33E14E4
	0x03699A8C CBNZ X21, 0x3699B94
	0x03699A90 CMP W22, 0xC
	0x03699A94 B.EQ 0x3699A9C
	0x03699A98 CBNZ W22, 0x3699A58
	0x03699A9C MOV X0, X19
	0x03699AA0 BL 0x3698FCC
	0x03699AA4 CBZ X0, 0x3699ACC
	0x03699AA8 MOV X0, X19
	0x03699AAC BL 0x3698FCC
	0x03699AB0 ADRP X8, 0xAA5000
	0x03699AB4 LDR X8, [X8 + 0x660]
	0x03699AB8 MOV X2, X0
	0x03699ABC MOV X0, X20
	0x03699AC0 MOV X3, X31
	0x03699AC4 LDR X1, [X8]
	0x03699AC8 BL 0x3234224

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xD48000
	007 Move W8, [X20+2197]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {24}
	013 Move X0, 0xA94000
	014 Move X0, [X0+608]
	015 Call 0x1C17CF4
	016 Move X0, 0xAA6000
	017 Move X0, [X0+1544]
	018 Call 0x1C17CF4
	019 Move X0, 0xAA6000
	020 Move X0, [X0+1552]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X20+2197], W8
	024 Move [X31], X31
	025 Move [X31+8], X31
	026 Move X0, [X19+16]
	027 Compare X0, 0
	028 JumpIfEqual {119}
	029 Move X1, X31
	030 Call String.ToLower, X0
	031 Compare X0, 0
	032 JumpIfEqual {119}
	033 Move X8, 0xAA6000
	034 Move X8, [X8+1552]
	035 Move X2, X31
	036 Move X1, [X8]
	037 Call String.StartsWith, X0, X1
	038 Move TEMP, X0
	039 And TEMP, TEMP, 1
	040 Compare TEMP, 1
	041 JumpIfNotEqual {112}
	042 Move X8, [X19+16]
	043 Move W9, 6
	044 Move [X19+28], W9
	045 Compare X8, 0
	046 JumpIfEqual {119}
	047 Move W8, [X8+16]
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move [X19+24], W8
	050 Move X20, 0xAA6000
	051 Move X21, 0xA94000
	052 Move X20, [X20+1544]
	053 Move X21, [X21+608]
	054 Add X1, X31, 8
	055 Add X2, X31, 0
	056 Move X0, X19
	057 Call DigestHeaderParser.GetKeywordAndValue, X0, X1, X2
	058 Move TEMP, X0
	059 And TEMP, TEMP, 1
	060 Compare TEMP, 1
	061 JumpIfNotEqual {112}
	062 Move X0, X19
	063 Call DigestHeaderParser.SkipWhitespace, X0
	064 Move W8, [X19+24]
	065 Move W1, [X19+28]
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Move X0, [X19+16]
	068 Compare X0, 0
	069 JumpIfEqual {119}
	070 Move X2, X31
	071 Call String.get_Chars, X0, X1
	072 And W8, W0, 0xFFFF
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Move W8, [X19+28]
	075 Add W8, W8, 1
	076 Move [X19+28], W8
	077 Move X0, [X20]
	078 Move W8, [X0+224]
	079 Compare W8, 0
	080 JumpIfNotEqual {83}
	081 Call 0x1C17DFC
	082 Move X0, [X20]
	083 Move X8, [X0+184]
	084 Move X1, [X31+8]
	085 Move X2, [X21]
	086 Move X0, [X8]
	087 Call Array.IndexOf, X0, X1
	088 Add W31, W0, 1
	089 Move X8, [X19+32]
	090 Compare X8, 0
	091 JumpIfEqual {119}
	092 Move W9, [X8+24]
	093 NotImplemented "Instruction CMP not yet implemented."
	094 Add X8, X8, W0
	095 Add X8, X8, 32
	096 Move X9, [X8]
	097 Compare X9, 0
	098 JumpIfNotEqual {112}
	099 Move X9, [X31]
	100 Move [X8], X9
	101 Move W9, [X19+24]
	102 Move W8, [X19+28]
	103 NotImplemented "Instruction CMP not yet implemented."
	104 Move X0, X19
	105 Call DigestHeaderParser.get_Realm, X0
	106 Compare X0, 0
	107 JumpIfEqual {113}
	108 Move X0, X19
	109 Call DigestHeaderParser.get_Nonce, X0
	110 NotImplemented "Instruction CMP not yet implemented."
	111 NotImplemented "Instruction CSET not yet implemented."
	112 Move W0, W31
	113 Move X20, [X31+32]
	114 Move X19, [X31+40]
	115 Move X30, [X31+16]
	116 Move X21, [X31+24]
	117 Add X31, X31, 48
	118 Return X0
	119 Call 0x1C17F20
	120 Call 0x1C17F28

Method: System.Void SkipWhitespace()

Disassembly:
	0x03699C5C LDR X0, [X8]
	0x03699C60 CBZ X0, 0x3699D04
	0x03699C64 LDR X8, [X0]
	0x03699C68 LDR X9, [X8 + 0x368]
	0x03699C6C LDR X1, [X8 + 0x370]
	0x03699C70 BLR X9
	0x03699C74 MOV X19, X0
	0x03699C78 STRB W31, [X31 + 0xC]
	0x03699C7C ADD X1, X31, 0xC
	0x03699C80 MOV X2, X31
	0x03699C84 BL 0x33DE64C
	0x03699C88 LDR X0, [X22]
	0x03699C8C LDR W8, [X0 + 0xE0]
	0x03699C90 CBNZ W8, 0x3699C9C
	0x03699C94 BL 0x1C16DFC
	0x03699C98 LDR X0, [X22]
	0x03699C9C LDR X8, [X0 + 0xB8]
	0x03699CA0 LDR X0, [X8]
	0x03699CA4 CBZ X0, 0x3699D10
	0x03699CA8 LDR X8, [X0]
	0x03699CAC LDR X1, [X8 + 0x380]
	0x03699CB0 LDR X9, [X8 + 0x378]
	0x03699CB4 BLR X9
	0x03699CB8 BL 0x3699D74
	0x03699CBC MOV X20, X31
	0x03699CC0 LDRB W8, [X31 + 0xC]
	0x03699CC4 CBZ W8, 0x3699CD4
	0x03699CC8 MOV X0, X19
	0x03699CCC MOV X1, X31
	0x03699CD0 BL 0x33E14E4
	0x03699CD4 CBNZ X20, 0x3699D08
	0x03699CD8 LDR X0, [X22]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move W8, [X0+24]
	006 Move W1, [X0+28]
	007 Move X19, X0
	008 NotImplemented "Instruction CMP not yet implemented."
	009 Move X21, 0x2600
	010 Move W0, 32
	011 Move W20, 1
	012 NotImplemented "Instruction MOVK not yet implemented."
	013 And W8, W0, 0xFFFF
	014 NotImplemented "Instruction CMP not yet implemented."
	015 And X8, X0, 0xFFFF
	016 NotImplemented "Instruction LSLV not yet implemented."
	017 And X31, X8, X21
	018 Move X0, [X19+16]
	019 Add W8, W1, 1
	020 Move [X19+28], W8
	021 Compare X0, 0
	022 JumpIfEqual {35}
	023 Move X2, X31
	024 Call String.get_Chars, X0, X1
	025 Move W8, [X19+24]
	026 Move W1, [X19+28]
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Subtract W8, W1, 1
	029 Move [X19+28], W8
	030 Move X20, [X31+16]
	031 Move X19, [X31+24]
	032 Move X30, [X31+32]
	033 Move X21, [X31+40]
	034 Return 
	035 Call 0x1C17F20

Method: System.String GetKey()

Disassembly:
	0x03699CDC LDR W8, [X0 + 0xE0]
	0x03699CE0 CBNZ W8, 0x3699CEC
	0x03699CE4 BL 0x1C16DFC
	0x03699CE8 LDR X0, [X22]
	0x03699CEC LDR X8, [X0 + 0xB8]
	0x03699CF0 LDP X20, X19, [X31 + 0x20]
	0x03699CF4 LDP X22, X21, [X31 + 0x10]
	0x03699CF8 LDR X0, [X8]
	0x03699CFC LDR X30, [X31], #0x30
	0x03699D00 RET
	0x03699D04 BL 0x1C16F20
	0x03699D08 MOV X0, X20
	0x03699D0C BL 0x1C16F18
	0x03699D10 BL 0x1C16F20
	0x03699D14 B 0x3699D1C
	0x03699D18 B 0x3699D1C
	0x03699D1C MOV X21, X0
	0x03699D20 CMP W1, 0x1
	0x03699D24 B.NE 0x3699D3C
	0x03699D28 MOV X0, X21
	0x03699D2C BL 0x3EB1AD0
	0x03699D30 LDR X20, [X0]
	0x03699D34 BL 0x3EB1AE0
	0x03699D38 B 0x3699CC0
	0x03699D3C MOV X20, X31
	0x03699D40 B 0x3699D48
	0x03699D44 MOV X21, X0
	0x03699D48 LDRB W8, [X31 + 0xC]
	0x03699D4C CBZ W8, 0x3699D5C
	0x03699D50 MOV X0, X19
	0x03699D54 MOV X1, X31
	0x03699D58 BL 0x33E14E4
	0x03699D5C CBNZ X20, 0x3699D68
	0x03699D60 MOV X0, X21
	0x03699D64 BL 0x1D2C690
	0x03699D68 MOV X0, X20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, X0
	005 Call DigestHeaderParser.SkipWhitespace, X0
	006 Move W8, [X20+24]
	007 Move W19, [X20+28]
	008 NotImplemented "Instruction CMP not yet implemented."
	009 Move W1, W19
	010 Move X0, [X20+16]
	011 Compare X0, 0
	012 JumpIfEqual {42}
	013 Move X2, X31
	014 Call String.get_Chars, X0, X1
	015 And W8, W0, 0xFFFF
	016 NotImplemented "Instruction CMP not yet implemented."
	017 Move W9, [X20+24]
	018 Move W8, [X20+28]
	019 Add W1, W8, 1
	020 NotImplemented "Instruction CMP not yet implemented."
	021 Move [X20+28], W1
	022 Move X0, [X20+16]
	023 Compare X0, 0
	024 JumpIfEqual {42}
	025 Move W8, [X20+28]
	026 Move W1, W19
	027 Move X3, X31
	028 Subtract W2, W8, W19
	029 Call String.Substring, X0, X1, X2
	030 Compare X0, 0
	031 JumpIfEqual {42}
	032 Move X1, X31
	033 Call String.Trim, X0
	034 Compare X0, 0
	035 JumpIfEqual {42}
	036 Move X20, [X31+16]
	037 Move X19, [X31+24]
	038 Move X1, X31
	039 Move X30, [X31+32]
	040 Call String.ToLower, X0
	041 Return X0
	042 Call 0x1C17F20

Method: System.Boolean GetKeywordAndValue(out System.String key, out System.String value)

Disassembly:
	0x03699ACC LDR X0, [X19 + 0x28]
	0x03699AD0 CBZ X0, 0x3699B90
	0x03699AD4 BL 0x3698884
	0x03699AD8 CBZ X0, 0x3699B04
	0x03699ADC LDR X0, [X19 + 0x28]
	0x03699AE0 CBZ X0, 0x3699B90
	0x03699AE4 BL 0x3698884
	0x03699AE8 ADRP X8, 0xAA5000
	0x03699AEC LDR X8, [X8 + 0x688]
	0x03699AF0 MOV X2, X0
	0x03699AF4 MOV X0, X20
	0x03699AF8 MOV X3, X31
	0x03699AFC LDR X1, [X8]
	0x03699B00 BL 0x3234224
	0x03699B04 MOV X0, X20
	0x03699B08 MOV X1, X31
	0x03699B0C BL 0x323260C
	0x03699B10 SUB W1, W0, 0x2
	0x03699B14 MOV X0, X20
	0x03699B18 MOV X2, X31
	0x03699B1C BL 0x3232ADC
	0x03699B20 LDR X8, [X20]
	0x03699B24 MOV X0, X20
	0x03699B28 LDP X9, X1, [X8 + 0x168]
	0x03699B2C BLR X9
	0x03699B30 ADRP X8, 0xAA0000
	0x03699B34 LDR X8, [X8 + 0x820]
	0x03699B38 MOV X19, X0
	0x03699B3C LDR X8, [X8]
	0x03699B40 MOV X0, X8
	0x03699B44 BL 0x1C16F10
	0x03699B48 MOV X1, X19
	0x03699B4C MOV X2, X31
	0x03699B50 MOV X23, X0
	0x03699B54 BL 0x367DCC8
	0x03699B58 B 0x3699A58
	0x03699B5C ADRP X0, 0xA5A000
	0x03699B60 LDR X0, [X0 + 0x5B0]
	0x03699B64 BL 0x1C16D08
	0x03699B68 BL 0x1C16F10
	0x03699B6C MOV X1, X31
	0x03699B70 MOV X19, X0
	0x03699B74 BL 0x337DEC0
	0x03699B78 ADRP X0, 0xAA5000
	0x03699B7C LDR X0, [X0 + 0x6B8]
	0x03699B80 BL 0x1C16D08
	0x03699B84 MOV X1, X0
	0x03699B88 MOV X0, X19
	0x03699B8C BL 0x1C16DEC
	0x03699B90 BL 0x1C16F20
	0x03699B94 MOV X0, X21
	0x03699B98 BL 0x1C16F18
	0x03699B9C BL 0x1C16F20
	0x03699BA0 B 0x3699BAC
	0x03699BA4 B 0x3699BAC
	0x03699BA8 B 0x3699BAC
	0x03699BAC MOV X22, X0
	0x03699BB0 CMP W1, 0x1
	0x03699BB4 B.NE 0x3699BD0
	0x03699BB8 MOV X0, X22
	0x03699BBC BL 0x3EB1AD0
	0x03699BC0 LDR X21, [X0]
	0x03699BC4 BL 0x3EB1AE0
	0x03699BC8 MOV W22, W31
	0x03699BCC B 0x3699A78
	0x03699BD0 MOV X21, X31
	0x03699BD4 B 0x3699BDC
	0x03699BD8 MOV X22, X0
	0x03699BDC LDRB W8, [X31 + 0xC]
	0x03699BE0 CBZ W8, 0x3699BF0
	0x03699BE4 MOV X0, X19
	0x03699BE8 MOV X1, X31
	0x03699BEC BL 0x33E14E4
	0x03699BF0 CBNZ X21, 0x3699BFC
	0x03699BF4 MOV X0, X22
	0x03699BF8 BL 0x1D2C690
	0x03699BFC MOV X0, X21
	0x03699C00 BL 0x1C16F18
	0x03699C04 BL 0x1990590
	0x03699C08 LDR X0, [X0 + 0x10]
	0x03699C0C RET
	0x03699C10 STR X30, [X31 - 0x30]!
	0x03699C14 STP X22, X21, [X31 + 0x10]
	0x03699C18 STP X20, X19, [X31 + 0x20]
	0x03699C1C ADRP X19, 0xD47000
	0x03699C20 ADRP X22, 0xAA5000
	0x03699C24 LDRB W8, [X19 + 0x8A0]
	0x03699C28 LDR X22, [X22 + 0x5A8]
	0x03699C2C TBNZ X8, 0x0, 0x3699C44
	0x03699C30 ADRP X0, 0xAA5000
	0x03699C34 LDR X0, [X0 + 0x5A8]
	0x03699C38 BL 0x1C16CF4
	0x03699C3C MOVZ W8, 0x1
	0x03699C40 STRB W8, [X19 + 0x8A0]
	0x03699C44 LDR X0, [X22]
	0x03699C48 LDR W8, [X0 + 0xE0]
	0x03699C4C CBNZ W8, 0x3699C58
	0x03699C50 BL 0x1C16DFC
	0x03699C54 LDR X0, [X22]
	0x03699C58 LDR X8, [X0 + 0xB8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, X2
	008 Move X21, X1
	009 Move X19, X0
	010 Move [X1], X31
	011 Move [X2], X31
	012 Call DigestHeaderParser.GetKey, X0
	013 Move [X21], X0
	014 Move W9, [X19+24]
	015 Move W8, [X19+28]
	016 NotImplemented "Instruction CMP not yet implemented."
	017 Move X0, X19
	018 Call DigestHeaderParser.SkipWhitespace, X0
	019 Move W9, [X19+24]
	020 Move W1, [X19+28]
	021 Add W8, W1, 1
	022 NotImplemented "Instruction CMP not yet implemented."
	023 Move X0, [X19+16]
	024 Move [X19+28], W8
	025 Compare X0, 0
	026 JumpIfEqual {102}
	027 Move X2, X31
	028 Call String.get_Chars, X0, X1
	029 And W8, W0, 0xFFFF
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move X0, X19
	032 Call DigestHeaderParser.SkipWhitespace, X0
	033 Move W8, [X19+24]
	034 Move W1, [X19+28]
	035 Add W9, W1, 1
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move X0, [X19+16]
	038 Compare X0, 0
	039 JumpIfEqual {102}
	040 Move X2, X31
	041 Call String.get_Chars, X0, X1
	042 Move W21, [X19+28]
	043 And W8, W0, 0xFFFF
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Move X0, [X19+16]
	046 Add W21, W21, 1
	047 Move [X19+28], W21
	048 Compare X0, 0
	049 JumpIfEqual {102}
	050 Move W1, 34
	051 Move W2, W21
	052 Move X3, X31
	053 Call String.IndexOf, X0, X1, X2
	054 Add W31, W0, 1
	055 Move [X19+28], W0
	056 Move W22, 2
	057 Move X23, 0x2600
	058 Move W22, 1
	059 NotImplemented "Instruction MOVK not yet implemented."
	060 Move W1, W21
	061 Move X0, [X19+16]
	062 Compare X0, 0
	063 JumpIfEqual {102}
	064 Move X2, X31
	065 Call String.get_Chars, X0, X1
	066 And W8, W0, 0xFFFF
	067 NotImplemented "Instruction CMP not yet implemented."
	068 And X8, X0, 0xFFFF
	069 NotImplemented "Instruction LSLV not yet implemented."
	070 And X31, X8, X23
	071 Move W9, [X19+24]
	072 Move W8, [X19+28]
	073 Add W1, W8, 1
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Move [X19+28], W1
	076 Move W0, [X19+28]
	077 Move W22, 1
	078 NotImplemented "Instruction CMP not yet implemented."
	079 Move W8, [X19+24]
	080 NotImplemented "Instruction CMP not yet implemented."
	081 Move W0, W31
	082 Move X20, [X31+32]
	083 Move X19, [X31+40]
	084 Move X22, [X31+16]
	085 Move X21, [X31+24]
	086 Move X30, [X31+48]
	087 Move X23, [X31+56]
	088 Return X0
	089 Move X8, [X19+16]
	090 Compare X8, 0
	091 JumpIfEqual {102}
	092 Subtract W2, W0, W21
	093 Move X0, X8
	094 Move W1, W21
	095 Move X3, X31
	096 Call String.Substring, X0, X1, X2
	097 Move [X20], X0
	098 Move W8, [X19+28]
	099 Move W0, 1
	100 Add W8, W8, W22
	101 Move [X19+28], W8
	102 Call 0x1C17F20

Method: System.Void .cctor()

Disassembly:
	0x03699D6C BL 0x1C16F18
	0x03699D70 BL 0x1990590
	0x03699D74 SUB X31, X31, 0x80
	0x03699D78 STP X29, X30, [X31 + 0x20]
	0x03699D7C STP X28, X27, [X31 + 0x30]
	0x03699D80 STP X26, X25, [X31 + 0x40]
	0x03699D84 STP X24, X23, [X31 + 0x50]
	0x03699D88 STP X22, X21, [X31 + 0x60]
	0x03699D8C STP X20, X19, [X31 + 0x70]
	0x03699D90 ADRP X20, 0xD47000
	0x03699D94 LDRB W8, [X20 + 0x8A1]
	0x03699D98 MOV W19, W0
	0x03699D9C TBNZ X8, 0x0, 0x3699E14
	0x03699DA0 ADRP X0, 0xA87000
	0x03699DA4 LDR X0, [X0 + 0xBA0]
	0x03699DA8 BL 0x1C16CF4
	0x03699DAC ADRP X0, 0xA5B000
	0x03699DB0 LDR X0, [X0 + 0x9F0]
	0x03699DB4 BL 0x1C16CF4
	0x03699DB8 ADRP X0, 0xAA5000
	0x03699DBC LDR X0, [X0 + 0x5A8]
	0x03699DC0 BL 0x1C16CF4
	0x03699DC4 ADRP X0, 0xAA5000
	0x03699DC8 LDR X0, [X0 + 0x630]
	0x03699DCC BL 0x1C16CF4
	0x03699DD0 ADRP X0, 0xA5A000
	0x03699DD4 LDR X0, [X0 + 0xE00]
	0x03699DD8 BL 0x1C16CF4
	0x03699DDC ADRP X0, 0xA62000
	0x03699DE0 LDR X0, [X0 + 0xDB8]
	0x03699DE4 BL 0x1C16CF4
	0x03699DE8 ADRP X0, 0xA5A000
	0x03699DEC LDR X0, [X0 + 0xE18]
	0x03699DF0 BL 0x1C16CF4
	0x03699DF4 ADRP X0, 0xA5A000
	0x03699DF8 LDR X0, [X0 + 0x758]
	0x03699DFC BL 0x1C16CF4
	0x03699E00 ADRP X0, 0xA5C000
	0x03699E04 LDR X0, [X0 + 0x570]
	0x03699E08 BL 0x1C16CF4
	0x03699E0C MOVZ W8, 0x1
	0x03699E10 STRB W8, [X20 + 0x8A1]
	0x03699E14 CMP W19, 0xA
	0x03699E18 B.LT 0x369A3A8
	0x03699E1C ADRP X26, 0xA5B000
	0x03699E20 LDR X26, [X26 + 0x9F0]
	0x03699E24 LDR X0, [X26]
	0x03699E28 LDR W8, [X0 + 0xE0]
	0x03699E2C CBNZ W8, 0x3699E38
	0x03699E30 BL 0x1C16DFC
	0x03699E34 LDR X0, [X26]
	0x03699E38 LDR X8, [X0 + 0xB8]
	0x03699E3C MOV X0, X31
	0x03699E40 LDR X21, [X8 + 0x18]
	0x03699E44 BL 0x33616A4
	0x03699E48 ADRP X25, 0xAA5000
	0x03699E4C LDR X25, [X25 + 0x5A8]
	0x03699E50 MOV X22, X0
	0x03699E54 LDR X8, [X25]
	0x03699E58 LDR W9, [X8 + 0xE0]
	0x03699E5C CBNZ W9, 0x3699E6C
	0x03699E60 MOV X0, X8
	0x03699E64 BL 0x1C16DFC
	0x03699E68 LDR X8, [X25]
	0x03699E6C LDR X8, [X8 + 0xB8]
	0x03699E70 LDR X0, [X8]
	0x03699E74 CBZ X0, 0x369A3EC
	0x03699E78 LDR X8, [X0]
	0x03699E7C LDR X9, [X8 + 0x338]
	0x03699E80 LDR X1, [X8 + 0x340]
	0x03699E84 BLR X9
	0x03699E88 CBZ X0, 0x369A3EC
	0x03699E8C ADRP X10, 0xA62000
	0x03699E90 LDR X8, [X0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0xD48000
	005 Move X20, 0xA5B000
	006 Move W8, [X19+2198]
	007 Move X20, [X20+2760]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {35}
	012 Move X0, 0xAA6000
	013 Move X0, [X0+1544]
	014 Call 0x1C17CF4
	015 Move X0, 0xA5B000
	016 Move X0, [X0+2760]
	017 Call 0x1C17CF4
	018 Move X0, 0xA5C000
	019 Move X0, [X0+2160]
	020 Call 0x1C17CF4
	021 Move X0, 0xAA6000
	022 Move X0, [X0+1560]
	023 Call 0x1C17CF4
	024 Move X0, 0xAA6000
	025 Move X0, [X0+1568]
	026 Call 0x1C17CF4
	027 Move X0, 0xAA4000
	028 Move X0, [X0+2776]
	029 Call 0x1C17CF4
	030 Move X0, 0xAA6000
	031 Move X0, [X0+1576]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X19+2198], W8
	035 Move X0, [X20]
	036 Move W1, 5
	037 Call 0x1C17D6C
	038 Compare X0, 0
	039 JumpIfEqual {77}
	040 Move W8, [X0+24]
	041 Compare W8, 0
	042 JumpIfEqual {76}
	043 Move X9, 0xAA6000
	044 Move X9, [X9+1576]
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Move X9, [X9]
	047 Move [X0+32], X9
	048 Move X9, 0xAA6000
	049 Move X9, [X9+1568]
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Move X9, [X9]
	052 Move [X0+40], X9
	053 Move X9, 0xA5C000
	054 Move X9, [X9+2160]
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Move X9, [X9]
	057 Move [X0+48], X9
	058 Move X9, 0xAA4000
	059 Move X9, [X9+2776]
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Move X9, [X9]
	062 Move [X0+56], X9
	063 Move X8, 0xAA6000
	064 Move X8, [X8+1560]
	065 Move X9, 0xAA6000
	066 Move X8, [X8]
	067 Move X9, [X9+1544]
	068 Move X20, [X31+16]
	069 Move X19, [X31+24]
	070 Move [X0+64], X8
	071 Move X8, [X9]
	072 Move X8, [X8+184]
	073 Move [X8], X0
	074 Move X30, [X31+32]
	075 Return 
	076 Call 0x1C17F28
	077 Call 0x1C17F20

